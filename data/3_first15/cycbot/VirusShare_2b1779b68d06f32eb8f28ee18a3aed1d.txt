stc
pop
lock
out
fistl
cmpsb
xchg
inc
add
out
fsubrl
mov
push
push
leave
pop
xchg
pop
or
add
hlt
cmp
mov
addr16
add
xor
adc
mov
inc
and
push
test
stc
rolb
mov
add
popa
mov
je
mov
adc
mov
movsb
int
pop
mov
mov
ja
pop
fcomps
add
popf
cld
or
add
push
pushf
add
add
inc
lock
imull
loopne
mov
add
and
test
add
xchg
outsb
movsl
jmp
jecxz
dec
mov
add
aaa
or
add
pop
dec
mov
mov
stos
push
cmp
add
sahf
fsubrl
les
mov
fidivs
sub
xchg
sahf
jecxz
sbb
dec
dec
xchg
push
sbb
inc
in
push
enter
add
clc
jmp
lock
or
cmp
sbb
mov
xchg
mov
add
push
mov
xchg
iret
jecxz
hlt
dec
fs
fistpll
add
mov
mov
rcrl
inc
fsub
pushf
cmc
push
mov
fmuls
movsb
mov
add
jmp
fsubrl
or
sbb
jmp
pop
stc
call
or
pop
add
mov
add
mov
xor
mov
pop
sub
push
add
mov
dec
adc
gs
mov
lds
add
and
cmpsb
mov
mov
mov
jno
jnp
scas
push
and
mov
push
add
lock
rcrl
xor
mov
sbb
jle
xor
mov
icebp
insl
subl
add
xchg
cmp
les
add
ss
adc
mov
mov
push
int3
shll
cmp
cli
cmp
in
xlat
adc
sbb
cwtl
mov
mov
lods
jge
bound
mov
movsl
xor
mov
and
add
mov
dec
jno
xor
jecxz
mov
fistl
add
add
arpl
xchg
dec
cmp
pop
and
xchg
add
push
inc
pop
add
jge
push
call
ljmp
call
aas
rcrb
push
pop
mov
in
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
push
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
xlat
ss
push
inc
mov
add
pop
or
push
sbb
lea
or
mov
mov
out
push
push
adc
into
in
xchg
add
mov
add
mov
outsl
scas
sbb
mov
push
or
inc
add
inc
pop
push
leave
pop
sbb
scas
ja
add
mov
ja
pop
rolb
inc
sbb
push
add
mov
pop
sbb
sarl
hlt
ss
daa
in
xorl
iret
mov
xor
add
push
idivl
push
jecxz
mov
cld
jle
mov
add
out
shl
dec
pusha
add
mov
xchg
inc
add
icebp
mov
add
add
repz
pop
jmp
push
rolb
mov
sbb
test
jo
mov
imul
dec
dec
icebp
xlat
and
scas
clc
insb
lcall
mov
popa
push
negb
mov
icebp
aam
cmpl
push
lret
add
cwtl
or
push
push
outsl
jp
adc
sbb
jne
mov
add
in
dec
repnz
hlt
sti
adc
mov
xchg
repz
add
add
add
rolb
mov
mov
addl
addb
cwtl
insl
loopne
mov
mov
icebp
out
testb
mov
popa
push
sbb
cmp
add
xchg
or
mov
mov
add
jnp
add
add
stos
pop
test
lock
stos
mov
shll
sbb
or
or
sbbl
shl
ret
js
add
mov
mov
push
dec
adc
mov
fldt
sub
rolb
mov
ret
push
hlt
cmpsl
add
cmc
pusha
add
in
roll
add
mov
add
xor
cmpsl
xor
sbb
adc
mov
mov
mov
adc
inc
add
add
jmp
int3
mov
repnz
pop
movl
enter
mov
jl
jge
rolb
mov
jl
pop
js
icebp
adc
rolb
mov
add
cmp
mov
push
nop
add
push
les
ret
pop
pushf
outsb
sub
cmp
movsb
sub
mov
cwtl
xchg
mov
addb
cmpsb
xchg
out
xor
out
cmp
loop
mov
fidivl
add
pop
ljmp
ffreep
add
jg
xchg
adc
mov
lods
imul
out
mov
std
lahf
ret
push
add
mov
int3
addb
and
mov
add
int3
dec
scas
call
jnp
dec
pop
sbb
add
in
addb
sub
add
std
xor
mov
xchg
add
push
cmp
mov
clc
les
mov
mov
add
das
fs
lahf
pop
lods
inc
jns
rolb
mov
lock
add
mov
xchg
rcrl
arpl
dec
sbb
mov
xor
mov
pop
mov
adc
adc
add
sub
add
test
mov
cmpsl
jne
inc
add
dec
fbstp
add
inc
daa
sbb
mov
lcall
or
inc
fcompl
xor
mov
call
stc
daa
cmp
scas
pop
xor
xchg
add
add
jle
or
test
add
add
xor
jno
cld
push
or
mov
add
push
sahf
popa
push
cmp
sahf
mov
cmp
add
adc
add
pop
dec
jl
add
add
inc
rolb
mov
mov
add
gs
aaa
getsec
jmp
jge
insb
lret
sub
add
int
lods
jle
aaa
mov
or
add
xorl
inc
xchg
add
bound
mov
xchg
mov
xchg
dec
dec
mov
loop
mov
repz
cmc
ss
cmp
jnp
add
cld
dec
gs
rolb
movsl
stos
cld
push
inc
add
add
and
fldt
outsl
push
mov
sbb
jp,pn
test
clc
jg
fcoml
es
mov
mov
sarl
loopne
mov
add
adc
xor
adc
lret
addb
mov
mov
jne
lock
push
add
scas
mov
add
push
bound
mov
rcrl
ljmp
mov
push
movsb
xchg
sub
mov
inc
jecxz
icebp
sub
inc
lods
or
xchg
add
popf
push
xorl
add
jb
mov
mov
adc
mov
pushf
pop
int3
xchg
mov
mov
enter
test
fnsave
fdivr
dec
push
add
mov
dec
sbb
add
sub
xor
mov
imul
push
cwtl
pushf
ret
jge
call
mov
mov
pop
rolb
mov
iret
sub
mov
in
fucom
add
and
notl
out
inc
cmp
jne
xchg
xor
add
mov
outsb
mov
fwait
jne
jecxz
lret
mov
cmp
or
adc
mov
sub
adc
mov
mov
pop
ret
push
mov
pop
icebp
out
cmpl
in
jle
inc
add
mov
ret
xor
lret
bound
mov
mulb
cmp
add
jnp
push
add
mov
pop
dec
fsubrl
inc
jmp
add
jno
fstps
add
addb
insb
cwtl
inc
stos
das
clc
cmp
mov
mov
inc
lret
mov
cltd
les
dec
sbb
add
gs
dec
out
call
ss
and
mov
imul
xchg
rolb
mov
sub
xchg
lods
mov
pop
pop
push
stos
in
mov
xchg
sahf
sbb
mov
mov
imul
loop
mov
aaa
gs
jp
stos
icebp
insl
add
mov
lahf
lods
mov
rolb
pop
push
mov
and
outsb
jmp
mov
jge
xchg
add
je
mov
pop
jg
bound
mov
addb
sub
mov
mov
pop
mov
test
imul
inc
movsl
pusha
add
pop
cmp
add
adc
stos
inc
addb
cld
fcom
cmpsl
flds
adc
mov
add
cmp
leave
cmp
leave
insb
int
idivb
add
ficomps
cmp
or
jle
fidivrl
inc
imul
lcall
mov
test
add
jns
lret
loopne
mov
push
mov
sub
cld
call
push
nop
add
test
scas
cmpsl
popa
xor
push
add
das
mov
mov
mov
ja
idivl
int3
add
stos
pop
imull
add
mov
jmp
loope
sahf
mov
cmpsb
push
add
xor
add
lea
xor
stos
repnz
mov
gs
fs
or
adc
mov
inc
into
js
add
aad
enter
dec
xor
mov
pop
and
seto
mov
pushf
xchg
cmp
insb
mov
fdivrl
adc
add
and
jmp
add
pop
ljmp
add
loop
mov
push
ret
cwtl
adc
mov
add
lds
jb
mov
mov
fldt
pushf
call
cs
and
jno
ja
mov
mov
push
sti
xor
pop
imul
stos
outsb
or
addb
inc
add
mov
mov
xchg
add
mov
loop
mov
pop
push
add
gs
add
push
mov
outsb
cs
mov
sub
add
add
daa
mov
push
leave
xlat
or
sub
push
rolb
mov
add
addr16
inc
gs
mov
cmp
mov
add
repnz
outsl
inc
add
test
test
mov
mov
inc
add
shll
mov
xchg
add
or
add
add
repnz
nop
add
mov
push
adc
mov
add
out
dec
scas
jle
add
jecxz
push
add
sti
cmp
stos
repnz
add
add
pop
aaa
mov
sti
loop
mov
and
jae
pop
rcrl
push
add
adc
mov
lods
mov
jne
lret
adc
push
sub
outsl
jmp
dec
ja
xor
xchg
data16
test
add
jp
test
call
and
mov
imul
jle
dec
in
add
cs
insl
jns
add
loop
mov
movb
mov
mov
push
adc
mov
aas
hlt
test
pop
mov
dec
cmp
mov
mov
add
lret
push
test
jns
test
adcl
inc
inc
cwtl
bound
mov
adc
mov
sub
inc
jl
add
lcall
pushf
inc
scas
not
scas
xlat
mov
add
setp
rolb
mov
mulb
add
cmc
sahf
or
mov
xchg
add
fwait
add
or
sbb
add
push
dec
pusha
add
add
push
ret
int
lods
in
lret
push
jg
das
popa
cwtl
cmp
cmpsb
cmp
push
add
leave
fistps
inc
add
push
stc
movsl
push
add
add
leave
shll
add
cmp
mov
mov
add
div
lds
xchg
rolb
mov
and
mov
fwait
arpl
imul
jmp
fwait
fwait
mov
and
sub
dec
dec
fmuls
add
imul
jnp
jecxz
mov
mov
int3
xor
mov
pop
sub
lds
sbb
test
mov
sbb
sbb
inc
add
mov
fwait
cli
xlat
lret
fnstsw
push
stc
movups
mov
and
mov
scas
jmp
and
mov
mov
pop
xor
jno
jo
mov
mov
mov
push
lret
add
aad
stos
insl
or
scas
xchg
jle
adc
addb
iret
or
in
add
jbe
mov
cs
dec
cmp
xchg
inc
add
ljmp
push
sub
xor
pushf
pusha
add
aas
loope
inc
outsb
or
cmp
add
mov
popf
push
mov
mov
add
js
in
ret
pop
clc
sahf
or
imul
mov
scas
fnstenv
mov
mov
in
cmp
nop
add
push
cmp
mov
add
lea
pop
ljmp
repz
and
ja
add
or
xchg
mov
pushf
out
xchg
adc
mov
sahf
inc
in
loop
mov
mov
push
cltd
sbb
xor
mov
add
lods
in
mov
mov
or
test
push
add
push
sahf
imul
aas
pop
jbe
lods
and
fwait
shll
rolb
mov
lea
jnp
sub
mov
testl
mov
ja
xchg
add
lret
pusha
add
daa
cmp
cs
mov
xchg
add
mov
pop
addr16
jno
daa
push
xchg
insl
rolb
test
fimull
pop
cmp
pop
cmp
repz
xchg
add
ret
rolb
mov
mov
xchg
xchg
movsl
imul
mov
mov
add
and
pusha
add
pop
lret
and
cmp
xchg
sbb
add
mov
add
xlat
flds
popa
sub
pushf
sub
add
outsl
pusha
add
addb
ret
jle
add
xchg
stos
lods
jae
xlat
mov
mov
add
cmp
mov
in
pop
fwait
xchg
dec
lods
out
mov
add
mov
fsubrs
leave
fisubs
add
inc
add
aas
aas
jb
mov
pop
ficomps
add
mov
std
sub
std
xchg
cld
scas
adcl
mov
repz
or
fcmovbe
add
mov
and
mov
mov
add
mov
add
inc
mov
add
or
dec
add
test
pop
fisubl
adc
mov
loopne
mov
sbb
pop
push
imul
add
add
xchg
add
mov
mov
mov
lret
fwait
mov
mov
xor
mov
js
out
scas
sub
mov
mov
jae
mov
adc
mov
cmp
sub
add
pop
dec
sub
cmc
loop
mov
daa
outsl
out
mov
mov
stos
addb
and
mov
lcall
xor
mov
outsl
faddl
add
mov
addr16
push
cmp
add
mov
xlat
into
mov
push
xor
mov
test
lahf
call
mov
add
mov
loopne
mov
aas
leave
repnz
jnp
mov
hlt
stc
into
mov
repz
mov
mov
dec
xchg
mov
cmp
mov
xchg
or
shrl
or
mov
add
mov
add
xchg
add
loop
mov
test
sbb
cld
xchg
jle
sbb
aas
pop
dec
aam
add
stc
dec
loop
mov
cmp
adc
add
mov
or
jg
mov
fstpt
or
hlt
hlt
in
and
fs
lea
mov
add
dec
jae
aas
xchg
add
xor
adc
mov
rep
add
xchg
xchg
lods
inc
dec
jb
mov
xchg
sbb
bound
mov
fdivl
jne
xor
add
out
adc
mov
loop
mov
add
push
rolb
mov
mov
int
xchg
jge
sti
pushf
lods
sahf
das
insb
cltd
fcmovbe
add
add
jnp
test
mov
mov
mov
jg
dec
pop
mov
mov
add
add
or
mov
adc
movsl
and
xchg
add
add
add
es
add
and
int3
push
add
mov
divb
mov
jmp
daa
enter
loopne
mov
add
lcall
add
pop
ret
test
cmc
data16
mov
popf
loop
mov
sti
mov
test
fmuls
sbb
jns
sbb
mov
or
adc
pop
outsl
mov
sbb
pusha
add
mov
adc
mov
insl
mov
das
sub
aam
mov
cld
cmp
ljmp
mov
mov
test
and
iret
lret
jmp
loope
add
adc
or
js
add
mov
and
mov
mov
jae
add
rolb
mov
jmp
and
and
cmp
xchg
xchg
mov
cmpsb
pop
test
adc
add
leave
fisubl
mov
push
iret
aam
inc
dec
dec
sbb
mov
jno
mov
cmp
fidivrl
out
pop
pop
mov
mov
and
mov
add
shll
int3
movsb
test
or
out
outsb
addr16
adcl
out
xchg
das
mov
outsl
daa
jle
xchg
inc
jl
lods
aam
dec
push
loopne
mov
and
mov
add
pop
dec
push
rolb
mov
dec
jae
test
stos
fadd
in
jne
les
mov
pop
sub
mov
mov
jae
popa
in
sub
mov
add
mov
popf
mov
or
mov
mov
mov
sbb
scas
aas
push
lret
xchg
movl
adc
aas
divb
cmp
add
mov
arpl
mov
xor
shll
xor
lea
adc
mov
outsl
add
and
insl
testl
mov
mov
sbb
out
cmp
test
jae
mov
mov
mov
nop
add
out
inc
xor
call
lret
mov
add
xchg
pop
cmp
mov
fsub
cmp
fisttpl
jmp
and
loop
mov
cmp
mov
mov
xchg
popf
push
adc
ret
add
add
aaa
loop
mov
popl
sti
lahf
sub
popf
sub
imul
pop
ret
jecxz
jge
sbb
add
push
arpl
add
mov
lds
add
into
xchg
add
add
xchg
dec
mov
add
adc
or
mov
add
mov
fwait
stc
xor
mov
push
dec
movsb
mov
add
cmp
adcl
mov
cmpsl
push
adc
mov
mov
add
testb
add
mov
add
sbb
mov
push
add
fistpl
fmuls
fisttpl
sbb
push
es
push
pushf
sti
out
out
jp
add
xchg
add
mov
adc
add
xchg
inc
or
push
xor
mov
and
add
enter
lock
jo
mov
add
add
add
push
mov
mov
sub
mov
add
cmpsb
movq
jb
mov
push
add
lds
add
ds
mov
lcall
cmp
add
xchg
adc
mov
fucomp
lds
mov
cmp
xchg
or
add
hlt
into
sub
iret
jne
sbb
imul
in
daa
aas
std
mov
dec
sub
rcll
add
insb
sub
add
das
jns
jno
test
test
sbb
scas
jmp
add
daa
add
pop
rolb
lcall
jne,pt
test
shll
push
xor
mov
xchg
in
outsb
mov
je
pop
insb
das
aam
scas
enter
sub
add
fsubs
push
frstor
ja
nop
add
adc
xor
sbb
mov
dec
mov
mov
or
lret
jnp
add
mov
inc
mov
inc
add
add
sub
add
outsl
inc
popf
adc
sbb
lock
js
add
mov
mov
add
sub
add
adc
fdivs
inc
int
pop
addb
jne
fstpl
lret
in
repz
pop
add
mov
jge
repz
mov
daa
and
mov
add
mov
xor
call
add
pop
jge
mov
push
loope
notl
xor
mov
fcompl
jnp
ljmp
ss
mov
add
stc
scas
or
imul
push
sub
imul
cltd
push
sub
addr16
jle
xlat
mov
mov
pusha
add
sub
test
add
call
cmp
imul
mov
mov
pusha
add
mov
mov
mov
and
mov
add
ret
aad
or
cltd
sbb
add
mov
in
test
xchg
and
mov
add
sub
loopne
mov
mov
fldt
and
cmp
cwtl
jbe
pop
addb
adc
std
xorl
and
add
sti
and
mov
inc
add
xor
in
push
leave
cwtl
aad
sahf
aas
es
xor
mov
stc
xchg
jnp
xchg
loopne
mov
mov
dec
fwait
mov
mov
mov
jg
add
or
out
pushf
dec
addb
std
sub
cltd
daa
dec
push
roll
jns
xlat
xchg
sub
aad
rolb
add
mov
mov
into
out
mov
sub
add
add
popf
clc
ljmp
call
jp
stos
repnz
das
pop
aad
decb
and
mov
push
or
mov
test
sbb
or
test
push
xchg
out
out
movsb
insl
jmp
fsubrl
pop
dec
adc
add
fisubrs
aam
mov
or
mov
mov
and
mov
mov
and
scas
in
xchg
sub
mov
repz
push
mov
add
mov
xchg
call
cli
movsl
add
mov
icebp
adc
push
jns
or
add
repnz
mov
add
xor
mov
add
mov
lock
out
sub
add
add
mov
jns
adc
mov
mov
mov
in
lods
pop
loop
mov
lock
ss
push
add
add
mov
out
push
add
mov
or
add
mov
mov
mov
data16
mov
mov
test
in
dec
popf
inc
jecxz
lahf
xchg
ljmp
insb
movsb
xor
popa
pop
repnz
add
sub
repz
mov
mov
jecxz
add
stc
adc
mov
jmp
outsl
das
xchg
enter
mov
and
mov
rolb
mov
inc
sub
push
cmpsl
out
xor
mov
add
fmuls
daa
repnz
pop
sub
mov
add
icebp
scas
vmread
push
dec
je
lock
add
test
sbb
lcall
mov
mov
mov
fcoms
add
mov
mov
fadd
add
addb
dec
mov
add
mov
dec
inc
je
fistpl
in
cmc
mov
dec
loopne
mov
pop
inc
add
mov
add
add
and
cli
mov
loop
mov
jne
out
sub
cmp
lods
js
das
stos
jge
fcmovbe
lcall
movsl
jg
das
adc
mov
ja
push
loop
mov
add
mov
clc
aad
add
adc
xor
add
sbb
scas
bound
mov
add
sbb
cmp
fiaddl
outsl
xchg
jg
adc
adc
jl
pop
pop
dec
imul
xor
add
mov
dec
xor
push
add
enter
leave
lret
out
out
outsl
add
xlat
cmp
xchg
lods
pusha
add
enter
aad
add
dec
sbb
mov
add
mov
stos
sbb
add
xchg
pop
mov
icebp
mov
inc
add
add
stos
std
add
mov
out
repnz
ja
repz
movsl
sub
add
jb
mov
fidivrl
dec
or
add
pop
fstl
dec
ror
movsl
or
push
jle
fdivl
or
mov
add
pop
jmp
dec
repnz
loope
add
stc
mov
inc
rolb
mov
mov
nop
add
int3
dec
xchg
data16
std
cmp
aas
push
jo
mov
jno
adc
mov
inc
xchg
enter
fucomp
arpl
inc
jo
mov
push
fs
add
mov
mov
add
mov
add
ret
insl
mov
addr16
add
add
rolb
xchg
sbbl
mov
je
cli
test
outsb
ret
or
mov
ja
mov
lret
pusha
add
xor
mov
subl
cmp
test
popf
xor
mov
lcall
addb
sbb
bswap
adc
mov
dec
add
repz
or
je
js
rorl
jl
insb
lock
loop
mov
or
ljmp
lret
cwtl
xchg
jno
pop
in
sbb
xor
mov
into
mov
mov
ja
sbb
mov
mov
fldl
add
je
sub
pop
fcomps
aad
pop
inc
add
cmp
inc
movl
mov
repnz
mov
loope
sbb
add
mov
lea
mov
adc
pushf
cmp
test
les
add
mov
dec
inc
cmp
adc
mov
int3
cmp
lds
or
fnstenv
fdivrl
add
mov
adc
mov
add
cli
jmp
add
pop
out
scas
jle
push
rcr
sbb
push
mov
fadds
into
pop
add
sub
aad
add
jge
movl
loopne
mov
push
movb
jnp
add
add
and
pushl
add
add
sti
call
mov
cwtl
jno
pop
shll
jmp
mov
add
adc
mov
arpl
inc
cmp
inc
cli
pop
cmp
add
xor
outsb
shr
cmp
loopne
mov
inc
lahf
in
push
add
add
andl
imul
mov
loope
sub
pop
jmp
aas
inc
insb
icebp
std
std
cmp
add
adc
mov
fdivrp
inc
repnz
fistps
es
sbb
xor
inc
addr16
pop
not
jecxz
mov
push
sub
sub
cmc
jp
imul
scas
ljmp
jp
hlt
adc
decl
add
add
sti
lcall
cmp
lods
movl
in
sahf
int3
out
rolb
mov
xchg
mov
push
cmpsb
arpl
out
push
dec
mov
xor
fstpt
push
adc
dec
xchg
cwtl
mov
fcoms
add
das
xchg
add
cmp
scas
popf
ss
pop
push
pop
inc
add
or
mov
stc
adc
aas
mov
mov
mov
sub
sub
add
mov
xor
cmp
xlat
add
ret
jae
mov
mov
mov
bound
mov
mov
std
imul
dec
cmp
sub
ss
inc
pop
jbe
add
aaa
aaa
out
xchg
dec
mov
add
cs
and
lock
mov
inc
nop
mov
or
insl
mov
sub
icebp
jp
nop
add
repnz
insl
int3
and
mov
scas
insb
or
je
xor
mov
and
dec
test
adc
mov
sbb
dec
mov
addb
lods
xchg
add
dec
mov
mov
ss
mov
mov
or
sti
jle
adc
arpl
push
mov
sub
mov
fidivs
mov
sbb
imul
add
test
mov
mov
lret
xchg
imull
loop
mov
push
movsb
rolb
mov
sbb
add
add
mov
xchg
movsb
daa
loop
mov
addb
imul
scas
and
push
xor
sbb
outsl
fimull
imul
inc
xor
pop
test
int3
in
xchg
sub
add
rep
adc
fwait
mov
lret
je
jae
inc
push
lds
mov
jo
mov
add
xchg
and
mov
je
add
shrl
mov
inc
cmp
xchg
cmpsb
adcl
cmp
dec
gs
mov
mov
cmovg
mov
jns
mov
inc
xchg
sbb
sbb
inc
push
xor
mov
add
sub
xchg
or
mov
mov
sahf
test
cmp
sub
cltd
pop
and
mov
popa
push
cmp
dec
arpl
mov
xor
add
mov
mov
pusha
add
cmp
fistpl
addb
aaa
pusha
add
bound
mov
xor
lahf
out
mov
add
add
add
jle
sub
lcall
rolb
mov
negb
daa
out
dec
outsl
mov
or
jg
movsb
sbb
scas
mov
out
test
mov
lahf
jmp
sub
jecxz
cli
sub
xor
mov
mov
xor
sbb
insb
std
dec
sub
sub
cs
daa
ret
sbb
add
xchg
enter
lahf
insl
mov
jbe
dec
push
movsl
mov
pushf
int3
sub
out
std
addb
leave
and
mov
xchg
or
addr16
mov
cmp
xchg
add
mov
add
in
lea
scas
sub
adc
mov
xchg
add
and
mov
cwtl
addb
aam
or
sub
or
mov
add
xchg
ret
bound
mov
add
pop
icebp
pop
jge
xchg
fsubrs
push
rcll
inc
add
in
mov
add
outsl
sub
mov
sbb
in
mov
dec
addb
ja
add
add
mov
aas
pop
pop
imul
inc
mov
add
fmul
jnp
push
outsl
sti
aaa
xchg
push
xchg
jge
sub
mov
mov
pop
fcoms
stos
int3
add
mov
add
nop
add
pop
pop
push
add
mov
stos
ficoml
mov
dec
dec
or
add
push
xor
mov
mov
enter
push
or
repz
leave
popf
pop
xor
cld
and
fdivs
fwait
sbb
dec
xchg
cmp
lock
xchg
sahf
mov
jl
fcoml
cmp
add
push
rolb
mov
imul
scas
xchg
xchg
fstpt
clc
pop
lods
in
rolb
jbe
lahf
push
bound
mov
addb
push
xchg
addb
ja
les
je
push
jle
nop
add
push
add
sub
scas
xchg
add
mov
pop
push
jne
dec
mov
add
mov
add
or
cmpsl
pop
xor
jae
addl
lret
xor
mov
xor
add
xlat
div
add
stc
inc
pop
cmp
mov
in
xchg
add
cmp
lret
aam
bound
mov
std
fistpl
push
call
sahf
push
cmp
push
je
xor
clc
and
push
add
jge
outsb
scas
push
lret
dec
push
cwtl
ljmp
scas
mov
sub
push
out
push
xor
mov
xlat
test
iret
adc
mov
add
imul
stos
push
and
mov
or
add
inc
pop
addb
rolb
mov
pop
mov
cli
dec
orl
add
push
add
insb
repnz
add
mov
inc
add
ss
cmpsb
xchg
out
xchg
sub
mov
mov
mov
in
mov
and
mov
pop
push
push
mov
mov
cmp
pop
pusha
add
adc
mov
add
cmc
sub
ficoms
mov
pop
or
xor
mov
into
daa
dec
pushf
insl
jbe
test
mov
jnp
add
mov
in
fidivl
enter
fldl
nopl
scas
xchg
pusha
add
or
add
add
repz
xchg
rolb
mov
scas
addb
pop
fsubrl
aad
js
mov
push
mov
add
shll
call
push
push
add
mov
or
dec
ds
and
mov
push
ja
cmp
adc
cmpsl
adc
mov
cmpsl
fistpl
popa
jmp
mov
add
add
sub
ja
sarl
add
sbb
inc
mov
and
pop
inc
mov
mov
mov
imull
or
sbb
add
cld
pop
lods
push
lret
mov
cmpsb
out
add
fadds
fdivrs
iret
adc
loopne
mov
and
mov
jle
add
jae
add
in
repnz
pusha
add
in
xor
fnstcw
scas
sub
add
test
add
jne
mov
mull
mov
pop
mov
in
mov
xchg
test
push
out
aad
je
jb
mov
mov
les
mov
adc
shrl
add
adc
movsl
inc
push
inc
loopne
mov
mov
mov
data16
fistpl
add
mov
mov
xchg
fld
cwtl
mov
imul
loope
sub
push
add
mov
xor
and
and
loope
xor
mov
sbb
pop
in
jmp
fldt
pusha
add
or
sub
pop
sub
jb
mov
stos
or
pop
push
and
mov
or
sti
jp
push
cmp
add
mov
adc
aas
jmp
add
or
mov
add
add
in
mov
add
add
test
add
add
stc
pop
add
inc
or
dec
fstp
aam
fdivl
repz
add
sti
mov
pop
pop
xor
test
push
cmc
push
mov
add
mov
jmp
mov
add
add
and
xor
pop
lds
mov
mov
out
addr16
add
jnp
inc
stc
inc
popf
pop
push
dec
call
scas
out
cli
dec
and
mov
fisttpl
inc
mov
mov
mov
dec
cltd
lahf
or
mov
pop
sub
add
jno
jmp
and
mov
lds
add
and
loop
mov
add
adc
add
add
and
fwait
cmp
add
xor
xor
dec
push
add
and
mov
outsl
mov
pop
shll
gs
insl
jmp
inc
add
dec
test
mov
mov
mov
fiaddl
mov
mov
rolb
mov
lret
xor
pop
and
mov
es
loope
idivb
jge
inc
xor
mov
push
lock
push
pusha
add
hlt
movsb
cli
adc
add
outsl
cmp
rcrl
push
mov
sahf
scas
mov
add
add
sub
addr16
sbb
xchg
jne
ljmp
bound
mov
pop
add
mov
jmp
mov
inc
adc
jno
cmp
add
ss
push
ss
jmp
xchg
jb
mov
add
mov
cmp
mov
lahf
into
in
add
cltd
stc
dec
or
lods
inc
push
fsubrl
cld
stc
rcll
rolb
inc
pusha
add
jb
mov
dec
jecxz
int
ds
add
sbb
repnz
mov
pop
fcomi
add
mov
not
in
popa
cmp
lahf
jae
scas
mov
repz
or
ret
pop
fidivrs
inc
inc
add
mov
sub
sahf
rol
test
test
lretw
xchg
add
loope
sbb
mov
scas
test
loop
mov
add
movaps
dec
and
mov
sbb
ljmp
add
in
sub
outsl
xchg
or
sub
add
add
scas
fildl
add
ljmp
mov
mov
jmp
sbb
add
mov
jno
rcll
ret
or
adc
mov
aas
repnz
jecxz
cltd
jmp
pop
or
jmp
cmpsb
jno
pop
pop
sahf
push
add
mov
rolb
mov
lock
or
jge
inc
push
ret
fisttpll
jg
xchg
add
sbb
sub
and
pop
inc
fwait
je
or
jno
push
cmc
jae
mov
fs
push
add
add
add
daa
mov
inc
adc
jb
mov
mov
iret
mov
cmp
mov
mov
add
mov
inc
jbe
add
lds
jle
adc
mov
cmp
popa
rolb
mov
mov
push
mov
adc
push
sti
testb
mov
add
clc
hlt
test
fiaddl
cmp
add
mov
mov
out
lret
aas
faddl
dec
push
fwait
ret
in
add
movsb
dec
mov
lods
mov
add
add
inc
add
scas
test
add
jle
add
pop
adc
adc
icebp
cld
sub
lcall
popf
ja
cmp
stc
xor
jns
rolb
pop
icebp
mov
push
fcompl
push
addb
fs
add
out
in
lods
inc
pop
xor
add
mov
add
mov
mov
pop
fbstp
imul
mov
dec
jb
mov
in
mov
mov
or
cmp
inc
outsb
jg
aas
mov
xor
mov
jle
in
je
add
mov
popl
cmp
mov
addb
lock
repnz
jmp
addb
xor
addb
add
xchg
es
mov
leave
xchg
out
paddd
add
fwait
lods
jl
jnp
roll
or
cmp
repz
xor
les
dec
xlat
aad
add
hlt
icebp
inc
add
sub
mov
das
mov
jp
mov
fbstp
mov
mov
scas
roll
jo
mov
sub
jne
leave
mov
roll
in
add
cmp
add
add
lret
mov
and
mov
mov
lahf
js
cmp
pop
popf
ja
mov
rolb
dec
in
pop
arpl
mov
sbb
adc
into
lcall
sbb
rolb
mov
sbb
mov
test
sbb
adc
mov
push
pop
cmp
xchg
lods
in
loop
mov
mov
cmp
mov
mov
arpl
and
loopne
mov
mov
add
add
bound
mov
movb
add
bound
mov
rolb
mov
aas
fisubl
pop
imul
ja
pusha
add
out
insl
addr16
push
mov
mov
mov
adc
scas
sbb
out
inc
mov
or
mov
push
or
push
add
inc
add
mov
imul
add
sbb
adc
mov
stos
mov
sbb
add
xlat
and
xlat
dec
daa
mov
add
jp
leave
add
mov
add
mov
or
jno
into
push
add
mov
aas
ja
mov
nop
add
aad
jg
add
cwtl
insb
sbb
mov
add
dec
lock
test
int
decb
enter
fisubrl
out
sti
out
add
add
inc
je
clc
jge
sub
std
mov
mov
add
ss
pop
inc
add
add
adc
mov
add
in
jnp
sahf
cld
sub
cld
decb
pop
movlhps
or
mov
lret
mov
pop
xlat
or
movsl
imul
mov
push
jae
scas
pop
mov
cld
inc
bound
mov
mov
aam
dec
push
mov
cmp
and
mov
leave
mov
sahf
jno
in
dec
jb
mov
mov
push
add
ss
flds
popf
lods
insl
adc
inc
add
add
adc
jg
icebp
nop
add
mov
add
push
xchg
or
adc
mov
out
mov
fiadds
mov
lret
pop
and
movb
sbb
inc
cli
mov
add
mov
add
mov
mov
add
mov
adc
mov
call
add
push
and
mov
add
mov
push
xlat
xor
imul
add
stos
mov
add
ret
jae
add
aas
mov
mov
sbb
xchg
divl
add
mov
dec
dec
dec
xor
mov
jae
sbb
mov
lret
dec
pop
cmp
sub
ret
leave
negl
lcall
mov
not
stos
icebp
call
sbb
push
xchg
xchg
stos
jl
clc
rolb
fs
ret
mov
mov
cmpsb
ret
mov
rorl
nop
add
sbb
dec
stos
mov
dec
aam
push
int3
jecxz
inc
loope
lret
mov
add
arpl
pop
rcl
or
inc
in
push
push
add
add
fdivrp
or
push
push
loop
mov
add
push
xor
jnp
loope
sbb
pop
repnz
push
jge
pop
mov
jp
add
mov
xchg
addb
xchg
pushf
cld
mov
xchg
push
loopne
mov
rolb
sub
mov
jbe
xchg
fs
daa
push
or
repz
or
mov
int
dec
inc
jo
mov
in
push
pop
sub
lods
xor
mov
add
into
jb
mov
or
repnz
dec
aas
popf
jne
addb
pop
pop
xchg
mov
ss
xchg
sahf
mov
scas
dec
bound
mov
xlat
cli
cli
jge
stos
push
add
ffreep
push
add
add
add
add
fdivr
xchg
push
adc
mov
jae
jle
popa
jns
xor
mov
icebp
pop
adc
in
mov
xor
addb
lds
addr16
mov
nop
add
rolb
mov
push
popa
mov
das
pop
pop
xchg
or
je
add
xchg
aaa
ror
inc
test
add
imul
add
jno
push
add
add
add
fwait
cli
sub
xor
mov
std
push
fiadds
gs
add
mov
add
pop
inc
push
inc
add
adc
mov
aad
roll
cmpsb
and
xor
mov
cld
cmp
mov
cmp
arpl
mov
std
outsl
mov
lock
sbb
inc
int
notb
push
leave
loop
mov
mov
mov
push
add
lods
addb
int3
mov
outsb
gs
test
mov
mov
jno
adc
addr16
add
popf
cmp
pushl
dec
push
xchg
int3
push
sbb
add
xor
mov
repnz
add
addl
or
add
mov
out
adc
mov
stos
or
fwait
lods
rcrl
mov
pop
dec
fsubrl
mov
cmpsb
dec
shll
loope
jmp
mov
jle
cmp
popf
pop
mov
lcall
pop
scas
rol
add
sarl
lret
push
add
sub
push
adc
mov
add
push
sub
add
cmc
cmpsb
xchg
mov
bound
mov
mov
pop
and
mov
cmp
bound
mov
adc
ret
rolb
mov
xchg
stc
inc
into
xor
inc
int3
dec
out
xchg
enter
mov
int3
dec
and
xchg
and
movsl
scas
and
add
aam
dec
mov
mov
xor
add
mov
outsl
mov
hlt
mov
add
test
add
mov
inc
mov
pop
fldenv
inc
mov
sti
jbe
add
clc
xchg
stos
or
push
sbb
mov
mov
push
add
rolb
mov
rolb
jno
add
jl
sti
sahf
clc
lret
jns
lret
push
lock
mov
aad
push
fisttpl
push
hlt
lret
mov
rcl
add
add
push
fwait
inc
lods
icebp
sbb
mov
mov
mov
mov
sub
pop
push
stc
lret
jb
mov
mov
push
sbb
add
movsb
insl
inc
fnstenv
inc
or
lock
lock
cmc
xlat
add
adc
popf
jnp
test
push
add
push
add
pusha
add
mov
fs
hlt
call
sub
adc
mov
hlt
add
dec
cwtl
pushf
sub
cli
adc
mov
add
xchg
cltd
icebp
imul
mov
aas
lcall
adc
or
add
lock
scas
sbb
cmp
or
push
adc
mov
add
shr
add
ljmp
or
and
mov
add
jmp
dec
push
xchg
negl
add
cmp
push
add
mov
pop
aas
sub
add
loopne
mov
cs
add
dec
cmpsb
jle
std
adc
mov
xchg
add
add
sub
and
mov
aad
jmp
jge
arpl
cmc
gs
mov
aaa
mov
pop
dec
or
sub
cmpl
pop
fs
insl
hlt
outsb
lods
sbb
seto
mov
repnz
fsub
inc
jle
jae
add
push
pop
xor
mov
and
fmul
aaa
add
mov
mov
mov
add
sub
cmc
cmp
mov
sbb
hlt
and
mov
aad
test
mov
inc
sbb
sub
add
cmc
clc
test
add
mov
xor
jmp
mov
xor
mov
add
mov
repnz
mov
mov
fs
lcall
into
popa
cmp
jae
mov
add
icebp
push
push
jecxz
cmp
push
or
hlt
cs
jbe
fmull
sbb
in
push
dec
test
std
sub
mov
loopne
mov
mov
push
test
add
testb
add
xchg
cmp
shrl
add
sti
push
adc
mov
add
ja
push
or
and
std
ret
push
xor
dec
xor
adc
nop
add
fwait
mov
leave
mov
mov
mov
cmp
add
and
mov
mov
add
jle
pusha
add
sub
fiaddl
add
add
mov
lea
jge
push
push
add
jle
inc
jno
sbb
mov
cwtl
jno
or
add
mov
add
gs
sbb
adc
jnp
or
pop
dec
clc
faddp
add
and
lcall
add
mov
xchg
lret
mov
in
gs
psubsw
xlat
loop
mov
mov
jecxz
cmp
lret
mov
js
sbb
and
add
rolb
mov
adc
sub
dec
aaa
test
hlt
ss
sbb
add
bound
mov
dec
mov
add
mov
push
outsl
sub
loope
insl
and
jle
adc
add
mulb
repnz
rolb
mov
fstl
mov
rolb
mov
mov
fisubs
pusha
add
ss
mov
test
xlat
xorl
xchg
mov
lcall
inc
pop
lret
hlt
movsb
stos
stos
movsb
add
dec
mov
pop
or
jne
fidivl
movsb
pop
stos
test
or
fdivl
dec
mov
daa
or
or
mov
push
mov
push
xchg
pop
xchg
xchg
add
add
stos
lods
push
es
mov
inc
xchg
add
cmpl
icebp
push
not
mov
and
mov
inc
inc
dec
add
xchg
xchg
ljmp
add
mov
cmpsb
out
call
repnz
aaa
pop
push
lcall
fnsave
jb
mov
lahf
icebp
jle
xor
rolb
mov
sbb
pop
ds
push
add
add
stc
jecxz
arpl
dec
mov
test
lcall
rolb
mov
fs
cmp
and
mov
mov
aaa
sub
mov
mov
cmpsb
xor
mov
andl
dec
cmpsl
test
shl
mov
stc
xchg
add
fwait
push
add
mov
add
or
lea
add
dec
fstpl
movsl
jae
and
nop
add
mov
pop
push
add
mov
mov
movsb
jns
add
sahf
lcall
cmp
popa
stos
out
icebp
rolb
mov
dec
in
imul
add
std
popf
inc
mov
stos
cmp
mov
outsl
lcall
mov
call
mov
inc
mov
fdivl
mov
ret
frstor
push
and
mov
mov
or
sub
xchg
std
xchg
push
rolb
mov
sbb
xchg
addb
and
xor
mov
cwtl
ds
out
int3
mov
sub
jae
push
fdivr
mov
mov
enter
popf
jne
and
mov
pop
push
cmpsl
mov
and
arpl
out
mov
jge
dec
into
loop
mov
outsb
inc
add
jnp
addb
test
inc
add
inc
dec
fstpl
or
pusha
add
push
sub
add
push
loop
mov
dec
adc
inc
in
fcomi
and
mov
test
add
or
jge,pt
add
cmp
fcoml
in
xchg
pop
imul
adc
xlat
jmp
rolb
mov
pop
and
mov
bound
mov
adc
mov
add
add
rcll
add
mov
or
mov
loope
repnz
push
aaa
int3
inc
adc
mov
stos
roll
fildl
dec
lds
stos
xlat
fsubr
imul
add
xlat
jo
mov
add
inc
inc
add
mov
push
add
mov
cmp
int3
sbb
cld
mov
testb
sub
icebp
pop
call
push
cld
shlw
mov
push
add
mov
mov
mov
scas
adc
mov
xor
das
into
mov
loopne
mov
in
sub
mov
ret
jae
fdivrp
push
pop
push
dec
mov
and
mov
in
mov
cmp
or
dec
add
je,pt
inc
test
add
rolb
mov
xor
mov
xor
dec
add
sbb
pop
mov
xor
stc
jbe
and
xchg
addb
fmulp
out
or
xchg
add
jmp
pop
test
lret
test
dec
addb
jecxz
pop
lock
test
add
in
fnstenv
add
mov
in
cmc
es
mov
mov
in
pop
mov
jo
mov
stos
jg
add
add
dec
fwait
jmp
sbb
add
jae
loopne
mov
add
fsts
mov
scas
test
out
ds
add
add
daa
enter
add
jecxz
sub
rorl
mov
mov
sbb
add
ja
pop
or
clc
ffree
ss
stos
daa
jb
mov
arpl
xor
jnp
std
imul
mov
inc
add
nop
add
xor
mov
in
xchg
int3
mov
or
lret
out
dec
sbbl
mov
mov
mov
add
mov
cmp
adc
mov
lds
mov
in
add
mov
mov
ficoml
rolb
mov
mov
push
add
mov
cld
es
xchg
add
inc
leave
jmp
xchg
lods
add
push
sahf
sub
or
add
push
inc
add
add
lret
and
and
loope
out
shll
or
in
adc
mov
in
push
sbb
jg
mov
gs
mov
bound
mov
sbb
add
outsb
and
mov
daa
jge
add
loope
gs
ljmp
mov
mov
ret
ficoms
mov
mov
and
mov
lret
sbb
mov
cltd
mov
fisttpll
inc
pushf
mov
cmpsb
jmp
incl
test
mov
xchg
dec
xor
add
add
movsl
out
xor
mov
mov
mov
cmp
das
sbb
clc
add
nop
add
sbb
sub
sarl
or
out
pop
add
in
std
jo
mov
jg
pop
cmp
mov
ds
xchg
add
fwait
mov
sub
and
mov
jle
popf
imul
jp
aam
add
add
jne
pop
lock
mov
add
imul
fadd
add
mov
mov
jecxz
sbb
mov
iret
adc
xchg
or
jp
inc
lahf
inc
fs
loope
cmpsb
adc
mov
lahf
dec
and
hlt
outsl
rolb
mov
lock
mov
add
mov
push
push
scas
sbb
pop
cmp
or
mov
inc
xor
adc
dec
cmp
or
add
mov
add
add
add
push
sub
xlat
fmull
push
mov
add
sti
aas
add
mov
mov
sbb
testl
sub
je
inc
xor
push
jecxz
jecxz
xchg
outsb
bound
mov
bound
mov
mov
mov
jecxz
fldcw
mov
xor
mov
bound
mov
pop
lcall
scas
sub
mov
ja
jo
mov
in
xchg
mov
sub
sub
mov
mov
ret
leave
rol
aas
jo
mov
rolb
mull
stos
cli
in
out
jo
mov
add
lea
inc
addr16
push
mov
mov
add
fwait
or
add
gs
mov
jge
mov
add
sub
ja
lods
mov
out
lods
in
negl
aad
orl
scas
pop
sbb
clc
leave
adc
jmp
les
mov
add
mov
rolb
mov
add
add
jmp
or
sub
in
xchg
cmpsb
xchg
lods
repnz
icebp
push
xlat
sbb
cmp
and
scas
das
rolb
stos
pop
lds
cmc
std
sbb
add
arpl
outsl
mov
sub
add
leave
xlat
cltd
mov
add
mov
add
mov
pop
lret
pop
pusha
add
add
xchg
lea
mov
dec
jmp
cmpl
add
fs
mov
imul
add
jnp
xchg
cli
push
addb
jae
scas
out
into
jnp
pushf
mov
sbb
pop
roll
or
add
test
bound
mov
clc
ja
addb
cs
inc
leave
fbstp
cmp
mov
mov
inc
out
push
add
pop
cltd
out
ds
add
aad
les
mov
call
or
das
xor
sti
sahf
aam
xchg
inc
test
pop
test
pop
ljmp
sti
testb
add
add
in
jmp
or
inc
jae
rcrl
jecxz
add
cmp
mov
mov
mov
add
mov
andl
mov
add
sub
adc
std
movsb
sub
ss
mov
lret
std
fwait
loop
mov
add
mov
mov
pusha
add
movsl
sbb
test
add
mov
lret
jge
jmp
add
fildl
mov
add
sbb
xchg
lods
jae
add
xor
add
add
out
mov
mov
mov
sti
in
call
mov
add
add
jl
add
lock
push
jg
ret
in
pop
and
mov
xor
sub
mov
dec
mov
mov
add
nop
add
nop
add
and
jno
add
outsb
mov
add
jns
pop
push
popf
sub
pop
sbb
lods
js
add
push
out
push
add
aaa
dec
fstl
sti
pop
add
inc
add
push
add
mull
ret
les
xor
mov
add
mov
adc
mov
and
in
or
test
mov
mov
sbb
add
mov
dec
inc
add
or
pop
sbb
or
add
cli
adc
mov
cltd
xchg
lock
add
sub
xor
mov
call
mov
adc
adc
add
adc
adc
loop
mov
hlt
fbstp
imul
add
mov
fnstsw
add
cmp
iret
add
mov
and
mov
add
in
dec
addb
es
jge
xor
mov
and
mov
lret
mov
es
mov
sbb
jecxz
and
rolb
mov
xor
mov
xchg
inc
hlt
push
pop
sub
jae
shll
subl
pushf
dec
mov
lock
inc
add
xor
mov
or
mov
cmpsb
in
xchg
rolb
mov
loope
clc
dec
rolb
mov
lret
aad
jge
lock
add
mov
push
and
mov
es
in
mov
ret
icebp
addb
clc
pop
aas
push
add
fisubrl
add
add
push
into
test
es
pushf
add
adc
push
insl
std
push
add
mov
mov
mov
pop
inc
add
imul
mov
lods
lock
loop
mov
mov
scas
push
add
jl
mov
push
jb
mov
loope
add
incb
inc
sahf
mov
mov
aaa
mov
ljmp
sub
or
add
clc
mov
jae
add
mov
addb
dec
stos
lcall
mov
add
mov
int3
fildll
aam
dec
xchg
cmpsl
stc
mov
xlat
ljmp
out
out
aad
jmp
mov
in
icebp
cltd
cmp
shr
lret
add
mov
push
pop
mov
inc
hlt
dec
aaa
cmp
in
les
adc
sub
icebp
std
lret
call
imul
rolb
mov
mov
xchg
adc
mov
cld
stc
insl
mov
loope
add
mov
mov
and
lcall
mov
push
lds
xchg
lret
dec
mov
in
lock
add
or
add
es
je
stos
sbb
mov
iret
add
mov
add
add
mov
in
push
loop
mov
mov
outsb
and
mov
push
add
add
add
add
sub
push
mov
dec
pop
inc
cmp
mov
mov
fs
inc
gs
mov
mov
add
out
push
jge
ret
lods
iret
cwtl
scas
sbb
mov
jbe
jns
lret
aas
inc
add
int3
hlt
imul
sti
pop
fisttps
rolb
mov
test
mov
icebp
mov
mov
xchg
out
cmp
mov
mov
xor
xor
sti
lret
push
iret
mov
and
cmpsl
xchg
jbe
push
decl
outsb
push
mov
mov
add
mov
mov
add
divb
rolb
mov
out
xchg
repnz
dec
push
stos
pop
sbb
orl
pop
lcall
rolb
mov
add
mov
xchg
push
iret
addb
add
add
add
cmp
clc
outsl
fscale
sbb
rcl
imul
and
mov
add
mov
pusha
add
add
cwtl
jne
add
mov
cmp
add
inc
sbb
idivb
aaa
lods
mov
int3
repnz
xchg
mov
mov
mov
xchg
stos
pop
mov
xchg
mov
dec
cmp
notb
sti
jle
sbb
cld
pop
ds
ljmp
ljmp
cmpsb
mov
jmp
shll
testl
addb
in
hlt
xchg
mov
scas
outsb
popf
adc
daa
xchg
add
cs
dec
out
loopne
mov
add
add
mov
jb
mov
arpl
addb
xor
cmpsl
push
add
add
push
mov
movsl
add
mov
xor
cld
mov
xchg
sub
add
push
test
mov
push
add
fwait
mov
dec
push
push
add
call
add
cld
in
mov
mov
jne
push
hlt
cmc
mov
add
mov
mov
add
mov
mov
lahf
add
lock
mov
mov
loopne,pn
mov
push
mov
mov
jp
or
stos
pusha
add
inc
ja
or
addb
mov
mov
and
add
mov
push
mov
add
addl
pop
adc
imul
jmp
mov
aas
in
into
fucomi
fiadds
add
fsubp
adc
sti
mov
mov
dec
mov
cmp
adc
mov
and
mov
or
cmp
mov
add
mov
add
mov
mov
out
ret
aaa
sub
sub
ljmp
jns
cmp
adc
push
insb
pop
cld
scas
inc
and
mov
dec
rolb
mov
sbb
add
jb
mov
sti
sbb
mov
mov
mov
sbb
add
dec
pop
pop
push
add
mov
xor
mov
pop
jno
cmp
pop
dec
cmpsl
stc
xchg
jo
mov
add
jp
xchg
lock
mov
int
in
add
inc
mov
mov
mov
add
movsb
in
cli
cmc
xlat
repz
jno
stos
test
xor
add
add
mov
mov
mov
dec
mov
add
imul
cmp
jl
sbb
add
rolb
mov
das
push
les
add
cmp
and
mov
insl
mov
jp
lods
xchg
pushf
pushf
rorl
dec
jg
add
test
rolb
xchg
sub
jno
add
les
mov
loopne
mov
out
data16
mov
cwtl
adc
outsb
subl
jns
cmp
dec
loopne
mov
add
nop
add
addr16
jecxz
fnstsw
frstor
mov
flds
add
or
rol
xchg
inc
add
xor
mov
add
xchg
cmp
push
add
dec
ja
rolb
mov
dec
push
and
pop
cmp
mov
add
cmp
add
xchg
cld
neg
push
add
mov
aas
push
pop
iret
mov
mov
mov
mov
dec
je
lods
dec
pop
testb
mov
in
sbbl
mov
push
add
mov
push
cmp
adc
mov
mov
inc
adc
xchg
add
adcl
add
add
insb
bound
mov
xor
mov
adc
rorl
fwait
cmc
xchg
mov
mov
pop
nop
add
popa
rcll
mov
mov
mov
dec
xchg
daa
mov
in
popa
into
sub
add
add
cs
jae
xchg
inc
lahf
xchg
mov
mov
mov
push
mov
mov
pop
gs
and
dec
fs
ljmp
sbb
loope
cmpsl
call
dec
adc
icebp
adc
mov
mov
mov
xor
repnz
dec
mov
fiaddl
add
in
mov
mov
push
cli
or
int
xlat
lds
and
mov
xchg
mov
add
add
addr16
rolb
mov
jo
mov
inc
lds
mov
jae
jge
inc
add
mov
mov
das
clc
in
data16
mov
push
pop
xor
inc
dec
cmc
xor
mov
cltd
cmp
push
jmp
mov
jecxz
xor
mov
push
add
sub
adc
nop
add
xchg
add
aaa
rolb
mov
push
lods
jl
out
inc
je
push
add
imul
idivb
bound
mov
push
fstpt
add
add
outsb
xor
mov
xchg
out
jmp
jns
pop
dec
popa
push
in
or
mov
mov
push
add
xchg
scas
push
fs
pop
outsl
iret
lods
stos
push
loopne
mov
jecxz
pusha
add
fsubrs
adc
mov
inc
add
mov
add
iret
rolb
fadds
cmc
pop
mov
insb
dec
mov
lds
test
shll
mov
sbb
mov
dec
gs
bound
mov
push
xchg
add
lret
add
jnp
push
lahf
test
pop
enter
les
add
add
mov
and
pop
mov
add
fwait
in
inc
sub
je
mov
add
insb
dec
addr16
sahf
cmp
pop
out
pop
into
dec
cmp
or
stc
enter
add
sbb
mov
sbb
xchg
jmp
and
mov
add
mov
aas
xchg
popf
int3
push
out
data16
mov
push
inc
add
std
imul
mov
and
pop
stos
outsb
mov
xor
scas
sbb
sbb
jle
dec
mov
xlat
aas
xor
mov
test
js
fimull
mov
mov
add
push
mov
sub
aad
test
shrl
push
enter
pop
push
mov
sub
mov
cli
icebp
out
mov
in
add
inc
add
add
scas
mov
sub
test
movsb
cmpsb
cmp
enter
mov
push
lahf
pop
mov
sbb
call
cmpsb
xor
mov
add
add
push
call
sbb
xor
dec
addb
adc
mov
popa
jns
stos
sub
add
dec
mov
add
push
xchg
addb
mov
jp
shll
insb
ja
pusha
add
sub
mov
leave
push
sbb
cld
dec
or
cmpsl
int3
fstp
sbb
xchg
cmp
int
adc
mov
scas
dec
test
add
mov
xor
sbb
clc
jns
out
push
mov
xchg
pushl
add
mov
inc
mov
repnz
ds
daa
pushf
and
out
jae
cmp
xchg
addb
add
mov
sub
mov
mov
jmp
rcrl
ret
daa
inc
jns
inc
add
fmul
push
mov
add
and
xchg
loope
dec
xlat
fnstsw
cmpsl
or
fistpll
ja
or
add
pop
out
add
push
mov
mov
cmp
std
in
or
add
push
add
add
lret
lods
dec
addb
push
imul
jge
loope
insl
iret
cwtl
enter
mov
sbb
xchg
xchg
loope
adc
mov
aas
adc
mov
mov
bound
mov
js
leave
mov
dec
xchg
pop
arpl
push
in
sahf
pop
adc
add
inc
test
add
fidivrs
repnz
inc
jl
or
addb
cbtw
mov
mov
add
lods
push
dec
xchg
cmp
mov
test
ficoml
out
xlat
xor
enter
xchg
enter
ficoms
mov
mov
xchg
idivb
out
loope
popa
dec
arpl
imul
mov
insb
push
test
repz
ja
cmovne
pop
push
jg
pop
mov
adc
push
out
mov
test
and
mov
mov
ror
es
mov
movsl
mov
mov
jns
mov
mov
add
into
jmp
cmp
jnp
and
jb
mov
add
mov
dec
add
mov
xchg
jne
add
xor
mov
and
mov
xchg
add
adc
mov
add
arpl
es
xor
mov
jne
add
out
iret
xchg
cmpsl
xchg
scas
and
aad
outsb
jp,pn
cmp
out
bound
mov
mov
add
inc
addr16
dec
or
or
aas
adc
mov
add
mov
mov
mov
push
add
dec
inc
dec
sbb
insb
cmpsb
dec
das
clc
dec
addr16
mov
idivl
mov
cmp
mov
inc
test
mov
mov
add
sub
push
pushf
and
in
outsl
xlat
mov
xchg
mov
add
test
cmp
sahf
decl
add
or
push
jle
cmc
push
lret
add
mov
popl
mov
push
enter
out
repnz
je
add
fs
add
sub
loop
mov
mov
mov
jge
xor
mov
bound
mov
mov
dec
rol
fcomps
jg
sahf
mov
stc
mov
lcall
sbb
mov
iret
frstor
mov
scas
sub
add
mov
mov
imul
push
add
out
xchg
mov
add
mov
add
rcll
add
mov
not
cmp
shll
jne
lods
push
cmpsl
and
mov
call
popf
lcall
lret
pop
add
or
mov
ljmp
test
dec
cmp
rolb
xchg
cmp
push
xor
insb
xor
mov
popa
imul
add
mov
sbb
aam
cmp
fwait
addb
mov
add
repz
sbb
stos
inc
bswap
jl
xchg
pop
dec
loopne
mov
inc
xchg
mov
push
add
iret
call
mov
cltd
mov
add
sub
jle
add
loope
jnp
insl
shll
fsub
add
add
add
mov
add
add
adc
sub
xchg
add
mov
add
mov
add
fcmovnbe
pop
pop
scas
fsubrs
mov
andl
insl
icebp
aam
xchg
std
popa
sbb
xchg
add
pop
lcall
mov
jo
mov
inc
ret
aaa
xor
rolb
mov
adc
iret
push
insl
sbb
add
mov
enter
mov
movsb
pop
inc
add
jo
mov
out
and
mov
mov
mov
mov
push
sbb
sub
mov
iret
pop
jnp
add
fsubl
mov
push
adc
add
mov
into
xor
jo
mov
or
popl
add
lcall
ja
dec
loop
mov
push
scas
nop
add
mov
mov
add
sbb
sub
pushf
int3
loop
mov
movsb
push
loopne
mov
jecxz
pop
les
cwtl
test
xchg
jb
mov
lods
add
mov
push
lret
or
rolb
mov
add
mov
outsl
popa
xor
dec
outsl
fwait
push
jnp
les
gs
pop
dec
sti
sub
sbb
out
je,pt
add
or
aam
shll
and
or
mov
push
les
aad
xor
pop
pop
or
pop
push
cmpsb
sti
sti
es
xchg
or
ljmp
outsl
mov
or
les
push
add
jg
ret
jl
mov
mov
out
mov
call
add
add
dec
push
add
dec
sub
cltd
les
and
mov
add
aaa
mov
add
nop
add
filds
addr16
cli
push
ficoms
pop
sub
mov
mov
and
sbb
fcomi
jp
xor
inc
add
mov
mov
fdivrl
sub
adc
stos
mov
fidivrl
add
mov
push
lret
add
adc
mov
pop
lods
jmp
sbb
sub
repnz
mov
mov
loope
ror
out
and
mov
or
xor
mov
scas
mov
push
add
xchg
or
mov
pop
xchg
cmp
test
into
push
xchg
mov
insl
adc
mov
inc
sbb
cs
or
addr16
add
fisubrs
xchg
inc
lds
addb
jb
mov
xchg
hlt
bound
mov
clc
push
loope
sub
stos
imul
xchg
and
mov
add
mov
pop
pop
imul
lcall
sbb
in
adc
std
call
int3
mov
add
inc
add
pusha
add
imul
add
pop
cmpsl
cmc
xchg
add
ret
mov
sub
sti
xor
dec
dec
xchg
mov
sbb
dec
xchg
fcmovb
xor
mov
movsl
stc
xor
adc
add
cltd
xor
mov
addb
adc
ss
cmp
add
loop
mov
rolb
mov
lret
mov
add
pushf
and
mov
mov
sub
std
lret
orl
mov
popf
sbb
jo
mov
mov
mov
rcll
xchg
push
pop
jle
mov
push
in
cmp
std
push
shl
test
mov
pop
addb
std
push
in
repz
xor
jno
sbb
lret
roll
cli
and
sbb
add
mov
mov
mov
add
mov
outsl
add
mov
xchg
or
loopne
mov
mov
cs
cmp
mov
in
xchg
pop
and
add
sti
jnp
add
fcomps
imul
mov
inc
add
ds
mov
popf
lret
mov
cmp
sti
push
mov
int
arpl
and
add
fdivp
dec
iret
lock
add
js
xchg
add
add
faddl
mov
pushf
adc
jno
adc
push
cld
and
repnz
xlat
jae
daa
lock
xor
add
add
add
aam
iret
inc
mov
pop
aas
test
or
leave
int3
addb
mull
add
fcoml
add
pusha
add
jmp
aas
sub
loop
mov
aas
out
inc
add
addr16
cli
stc
dec
xlat
rcll
inc
rcll
leave
sbb
add
fstps
push
add
cmp
insl
addb
inc
inc
fwait
les
fs
push
add
mov
int
cmpsl
popa
sub
add
mov
dec
push
in
lds
lret
stc
ret
add
and
mov
xor
mov
add
xor
nop
add
mov
mov
clc
out
push
push
inc
add
imul
popw
jecxz
ss
cmp
fcmovnu
mov
add
mov
fnstsw
mov
xor
subl
add
mov
mov
mov
add
mov
es
sarl
add
ret
jae
rolb
mov
add
das
ds
out
sub
add
mov
push
jae
sbb
aam
push
mov
dec
xchg
out
xchg
add
mov
mov
push
pusha
add
mov
dec
sbb
push
ds
fisttps
pop
and
mov
testb
mov
sahf
mov
data16
add
mov
add
mov
cmc
push
add
fiaddl
iret
aam
insl
mov
fs
mov
adc
or
nop
add
add
imul
xchg
jecxz
mov
js
push
jnp
inc
add
addb
mov
lcall
add
stc
ja
fwait
inc
fmull
and
popf
xchg
push
iret
addb
hlt
addb
sub
adc
addr16
push
addb
sbb
fisubs
lods
repnz
xchg
and
loope
rolb
inc
inc
mov
mov
ss
pop
lock
mov
lods
jbe
push
mov
arpl
sahf
jo
mov
add
inc
or
cltd
mov
mov
mov
push
sub
add
jnp
dec
and
lods
xor
mov
jb
mov
sub
sub
push
xchg
cmp
add
mov
add
int
xchg
dec
add
or
test
pop
outsb
es
xchg
xchg
or
cmp
rorl
mov
mov
movsl
inc
jb
mov
mov
mov
enter
inc
add
repnz
nop
cld
jae
add
add
clc
test
push
mov
nop
leave
jmp
add
mov
dec
xchg
clc
mov
push
mov
nop
leave
jmp
jle
add
add
stos
mov
bound
mov
push
and
nop
add
sar
nop
nop
cld
jae
dec
add
add
clc
repnz
nop
cld
jae
jge
pop
cli
add
ret
in
outsl
lods
push
mov
xchg
ret
add
inc
popl
bound
test
add
clc
repnz
nop
cld
jae
add
sub
clc
repnz
nop
cld
jae
xor
mov
add
pop
imul
inc
sbb
add
sbb
add
jo
mov
clc
repnz
nop
cld
jae
add
std
ret
push
mov
xchg
ret
add
add
add
mov
addl
in
nop
leave
jmp
cli
fists
push
jne
clc
repnz
nop
cld
jae
add
outsl
test
push
mov
nop
leave
jmp
imul
xchg
add
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
cld
jae
add
or
push
mov
nop
leave
jmp
sub
cmp
add
imulb
add
clc
repnz
nop
cld
jae
mov
jne
push
mov
nop
leave
jmp
add
sub
add
add
mov
clc
repnz
nop
cld
jae
sbb
sbb
movsb
sbb
sti
xor
clc
repnz
nop
cld
jae
add
cmp
lock
insl
mov
clc
repnz
nop
cld
jae
add
jle
pop
mov
clc
repnz
nop
cld
jae
add
add
pop
push
mov
xchg
ret
add
add
xorl
clc
mov
clc
repnz
nop
cld
jae
add
add
push
adc
mov
clc
repnz
nop
cld
jae
xchg
and
add
add
data16
xor
add
add
push
mov
nop
leave
jmp
jge
and
xchg
rolb
mov
lret
clc
repnz
nop
cld
jae
andl
dec
push
mov
xchg
ret
lret
mov
popa
lret
cli
stos
push
clc
repnz
nop
cld
jae
cmp
add
cmp
add
clc
repnz
nop
cld
jae
sbb
xor
add
movb
mov
xchg
ret
mov
mov
jmp
movsb
push
mov
xchg
ret
add
add
daa
mov
clc
repnz
nop
cld
jae
add
loope
mov
clc
repnz
nop
cld
jae
add
iret
add
jmp
loopne
clc
repnz
nop
cld
jae
arpl
fldl
add
mov
xchg
ret
add
add
add
sub
mov
xchg
ret
add
and
jle
and
or
nop
cld
jae
das
jge
add
add
or
rolb
clc
repnz
nop
cld
jae
add
sbb
je
clc
repnz
nop
cld
jae
add
add
repnz
repnz
nop
cld
jae
mov
das
add
mov
clc
repnz
nop
cld
jae
sub
add
add
xor
pop
clc
repnz
nop
cld
jae
mov
lret
stc
adc
ret
clc
repnz
nop
cld
jae
add
lea
add
inc
add
nop
nop
cld
jae
pop
xor
filds
xlat
imul
mov
mov
xchg
ret
add
add
push
lret
add
add
repnz
nop
cld
jae
test
add
push
fsts
in
pop
je
inc
add
add
daa
push
add
add
cmp
push
mov
nop
leave
jmp
add
jmp
add
jne
push
mov
xchg
ret
pop
das
test
mov
add
nop
nop
cld
jae
jle
xchg
add
jge
or
jecxz
inc
add
and
xor
imul
jl
insb
inc
jb
clc
repnz
nop
cld
jae
add
xchg
xor
mov
mov
push
mov
xchg
ret
add
mov
add
add
inc
jle
add
add
arpl
and
and
lds
add
clc
repnz
nop
cld
jae
add
dec
cmp
mov
nop
leave
jmp
jmp
add
push
xchg
sub
nop
nop
cld
jae
sbb
and
add
in
jbe
add
clc
repnz
nop
cld
jae
add
add
mov
std
add
clc
repnz
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
stos
mov
add
add
std
add
push
mov
nop
leave
jmp
das
and
mov
xchg
ret
clc
mov
add
add
subl
jae
add
add
xchg
clc
repnz
nop
cld
jae
jle
add
add
iret
mov
mov
nop
nop
cld
jae
add
add
filds
xor
adc
mov
inc
adc
repnz
nop
cld
jae
and
add
clc
push
mov
push
mov
fcmovne
inc
test
stos
aad
push
incl
movsl
dec
cwtl
shr
push
mov
xchg
ret
imul
jp
jbe
push
mov
nop
leave
jmp
cli
jle
add
cmpl
cld
jae
add
sbb
mov
clc
repnz
nop
cld
jae
add
add
add
mov
push
mov
xchg
ret
movsb
add
jle
add
add
mov
push
mov
xchg
ret
das
add
sbb
and
jmp
push
mov
xchg
ret
add
jge
add
add
sub
test
cli
clc
repnz
nop
cld
jae
jo
das
add
clc
repnz
nop
cld
jae
or
out
cmpw
push
mov
nop
leave
jmp
jle
dec
cmp
jne
mov
clc
repnz
nop
cld
jae
sbb
and
and
inc
lea
nop
nop
cld
jae
add
add
add
push
mov
adc
add
jge
add
add
sqrtps
call
cmp
ret
clc
filds
and
cs
clc
repnz
nop
cld
jae
sbb
mov
das
add
stos
clc
repnz
nop
cld
jae
add
add
pop
add
jo
movzwl
clc
repnz
nop
cld
jae
imul
add
nop
nop
cld
jae
fldl
and
rolb
mov
push
clc
repnz
nop
cld
jae
add
add
xor
mov
nop
nop
cld
jae
popl
add
add
das
add
push
mov
add
push
add
add
hlt
pop
cmc
stos
bound
lret
push
push
mov
xchg
ret
add
mov
add
add
imul
jae
stc
and
popa
jge
loope
iret
mov
clc
repnz
nop
cld
jae
add
sbb
add
clc
repnz
nop
cld
jae
mov
and
mov
add
mov
xchg
ret
add
jle
div
push
mov
nop
leave
jmp
fldl
xchg
sub
mov
push
mov
xchg
ret
lea
add
nop
cld
jae
add
add
and
popf
testl
push
mov
nop
leave
jmp
push
incb
sbb
pop
clc
repnz
nop
cld
jae
mov
push
arpl
push
clc
repnz
nop
cld
jae
add
add
pop
clc
fdivs
clc
repnz
nop
cld
jae
mov
call
clc
repnz
nop
cld
jae
push
jle
pop
call
push
mov
nop
leave
jmp
add
add
sti
clc
repnz
nop
cld
jae
jmp
add
add
nop
cld
jae
add
mov
movswl
clc
repnz
nop
cld
jae
sbb
and
stc
in
push
push
mov
xchg
ret
and
fbld
addb
loop
mov
mov
push
mov
nop
leave
jmp
dec
add
mov
jmp
dec
push
clc
repnz
nop
cld
jae
adc
jp
pop
add
add
clc
repnz
nop
cld
jae
jo
add
js
push
mov
nop
leave
jmp
popa
add
add
add
int
add
in
nop
leave
jmp
xchg
jle
cli
add
imul
clc
repnz
nop
cld
jae
add
add
dec
jmp
add
mov
movsb
add
mov
nop
cld
jae
add
jmp
mov
push
stos
sub
push
mov
nop
leave
jmp
lret
sub
mov
nop
cld
jae
arpl
add
pop
dec
add
mov
cmpl
push
mov
nop
leave
jmp
add
xchg
xabort
nop
nop
cld
jae
add
add
add
repnz
nop
cld
jae
clc
add
add
sbb
nop
nop
cld
jae
add
andl
rolb
mov
repnz
nop
cld
jae
xlat
add
sbb
jmp
or
add
adc
or
xlat
iret
jge
call
clc
repnz
nop
cld
jae
popa
add
xchg
adc
add
pop
lea
stc
add
add
clc
repnz
nop
cld
jae
and
and
push
mov
add
stc
call
add
in
and
clc
repnz
nop
cld
jae
add
jle
add
mov
push
mov
nop
leave
jmp
xor
in
add
mov
jle
sbb
mov
add
fisttpll
nop
nop
cld
jae
stc
sbb
test
jmp
mov
xchg
ret
add
dec
popa
or
repnz
nop
cld
jae
cli
add
add
push
mov
nop
leave
jmp
add
bound
push
add
adc
add
repnz
nop
cld
jae
and
mov
mov
xchg
ret
stos
add
jp
xor
add
incl
in
nop
leave
jmp
xchg
add
add
add
jnp
clc
repnz
nop
cld
jae
add
mov
add
add
adc
inc
adc
add
clc
repnz
nop
cld
jae
adc
mov
add
push
mov
xchg
ret
adc
addl
add
mov
sar
nop
nop
cld
jae
add
add
incb
jp
pop
mov
clc
repnz
nop
cld
jae
add
sub
dec
mov
lock
add
dec
xlat
das
add
clc
cmp
add
repnz
nop
cld
jae
sbb
and
add
mov
xchg
ret
dec
add
add
jae
push
mov
add
add
out
add
rolb
add
add
and
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
iret
stos
arpl
jge
cli
push
jl
dec
sub
repnz
nop
cld
jae
fbstp
dec
mov
clc
repnz
nop
cld
jae
stos
add
lea
nop
nop
cld
jae
imul
testb
mov
add
nop
nop
cld
jae
das
stc
sbb
add
and
mov
add
push
mov
xchg
ret
iret
or
sbb
add
add
sub
inc
add
add
insl
shl
clc
repnz
nop
cld
jae
xlat
add
add
xlat
mov
pushl
clc
repnz
nop
cld
jae
add
mov
add
adc
mov
add
xor
push
mov
nop
leave
jmp
and
bound
mov
xchg
ret
add
clc
add
dec
mov
clc
repnz
nop
cld
jae
and
sbb
add
xchg
jae
mov
push
mov
xchg
ret
das
add
add
push
mov
xchg
ret
add
adc
add
add
arpl
je
js
repnz
nop
cld
jae
and
adc
mov
xchg
ret
clc
add
add
sub
push
mov
nop
leave
jmp
add
push
pop
ficoms
repnz
nop
cld
jae
add
sub
add
and
test
idiv
clc
repnz
nop
cld
jae
add
xor
push
push
mov
xchg
ret
add
lret
mov
add
rclb
les
xchg
ret
add
movsb
jo
clc
add
adc
add
repnz
nop
cld
jae
das
add
mov
add
sbb
add
repnz
nop
cld
jae
push
add
cmpsl
into
test
push
mov
nop
leave
jmp
stc
add
incl
sbb
mov
add
jp
push
mov
nop
leave
jmp
xorl
and
xor
push
mov
xchg
ret
add
sbb
das
add
adc
add
push
mov
xchg
ret
lea
add
fucomp
xlat
cld
pop
clc
repnz
nop
cld
jae
jmp
add
sub
add
clc
repnz
nop
cld
jae
add
mov
ret
push
mov
nop
leave
jmp
lea
jmp
mov
clc
repnz
nop
cld
jae
add
sbb
sub
push
mov
nop
leave
jmp
add
incl
inc
mov
add
push
mov
nop
leave
jmp
add
pop
dec
xchg
lea
test
mov
clc
repnz
nop
cld
jae
pop
add
mov
lret
inc
add
stc
incl
add
add
das
jno
xor
push
mov
xchg
ret
adc
add
fs
insb
push
mov
nop
leave
jmp
add
add
out
je
clc
repnz
nop
cld
jae
das
and
scas
call
push
mov
nop
leave
jmp
add
add
clc
repnz
nop
cld
jae
add
add
add
popa
outsb
add
push
mov
nop
leave
jmp
cli
add
cmp
add
mov
clc
repnz
nop
cld
jae
and
popa
das
popa
imul
adc
repnz
nop
cld
jae
cli
incl
jge
lsl
clc
repnz
nop
cld
jae
filds
sbb
add
adc
mov
clc
repnz
nop
cld
jae
add
hlt
fistl
mov
nop
leave
jmp
add
subl
jecxz
add
repnz
nop
cld
jae
das
jo
and
add
clc
repnz
nop
cld
jae
and
add
fisttps
and
test
pop
add
clc
repnz
nop
cld
jae
add
adc
mov
xchg
ret
incl
cmp
add
popl
add
mov
xchg
ret
push
and
add
clc
repnz
nop
cld
jae
movsb
das
add
fldl
mov
fadds
xchg
ret
xor
jp
add
sbb
add
mov
nop
leave
jmp
fistpll
add
add
pop
push
mov
nop
leave
jmp
adc
add
add
add
jmp
push
mov
nop
leave
jmp
and
add
das
in
push
clc
repnz
nop
cld
jae
xchg
add
add
loope
add
pop
push
mov
xchg
ret
popa
das
adc
jle
mov
je
repnz
nop
cld
jae
add
cmp
xchg
lea
enter
nop
leave
jmp
mov
jmp
and
mov
push
mov
nop
leave
jmp
add
cli
mov
mov
push
clc
repnz
nop
cld
jae
add
add
and
clc
imul
cld
jae
jge
add
test
jmp
dec
add
push
mov
nop
leave
jmp
stos
add
add
jle
cmpsl
mov
filds
xchg
ret
loope
add
add
push
mov
repnz
nop
cld
jae
add
add
add
or
mov
xchg
ret
jo
cli
cli
add
mov
pop
clc
repnz
nop
cld
jae
dec
bound
add
lea
or
ret
push
mov
xchg
ret
jp
add
xorl
add
clc
repnz
nop
cld
jae
add
andl
add
cmp
clc
repnz
nop
cld
jae
stc
add
add
fcoms
mov
xchg
ret
add
sbb
add
add
insl
ret
clc
repnz
nop
cld
jae
add
popa
add
clc
add
push
add
in
nop
leave
jmp
add
and
stos
lret
lea
xchg
add
and
mov
xchg
ret
add
adc
or
push
mov
xchg
ret
add
bound
sbb
and
imul
push
mov
nop
leave
jmp
add
fildll
add
mov
mov
cmp
in
nop
leave
jmp
stc
add
add
add
repnz
nop
cld
jae
add
sbb
push
clc
repnz
nop
cld
jae
add
jmp
nop
cld
jae
add
mov
add
jl
leave
push
mov
nop
leave
jmp
and
add
xor
add
push
mov
nop
leave
jmp
iret
mov
mov
mov
clc
repnz
nop
cld
jae
clc
add
mov
clc
repnz
nop
cld
jae
add
jmp
mov
xchg
ret
popa
add
add
iret
add
repnz
nop
cld
jae
imul
test
clc
repnz
nop
cld
jae
and
sub
sar
repnz
nop
cld
jae
push
test
popl
and
xlat
xchg
add
push
mov
xchg
ret
addl
mov
sub
mov
push
mov
nop
leave
jmp
clc
add
and
in
les
clc
repnz
nop
cld
jae
jle
stc
add
addb
pop
push
clc
repnz
nop
cld
jae
mov
add
add
mov
jmp
jmp
add
add
add
movsb
and
add
clc
repnz
nop
cld
jae
adc
add
aas
adc
in
nop
leave
jmp
add
stc
clc
lea
lcall
mov
push
add
jo
icebp
add
xchg
add
add
cld
push
mov
xchg
ret
mov
jle
inc
jle
add
inc
daa
addb
lret
test
push
mov
nop
leave
jmp
adc
rolb
mov
mov
xchg
ret
add
add
and
out
add
repnz
nop
cld
jae
push
mov
or
out
clc
repnz
nop
cld
jae
and
xchg
add
sbb
aas
clc
repnz
nop
cld
jae
jle
xlat
mov
push
neg
mov
clc
repnz
nop
cld
jae
jle
test
push
xorl
push
mov
nop
leave
jmp
add
add
repnz
nop
cld
jae
arpl
clc
clc
add
xlat
jp
jbe
clc
repnz
nop
cld
jae
das
add
and
mov
clc
repnz
nop
cld
jae
pop
or
enter
repnz
nop
cld
jae
add
stc
stc
movsb
imul
add
push
mov
nop
leave
jmp
stc
and
das
iret
clc
push
add
adc
repnz
nop
cld
jae
add
cmp
xor
add
push
mov
nop
leave
jmp
xchg
add
xor
push
clc
repnz
nop
cld
jae
add
popa
add
mov
nop
nop
cld
jae
add
stc
loope
stos
imul
inc
add
jmp
add
bound
mov
push
clc
repnz
nop
cld
jae
add
or
iret
mov
mov
dec
add
push
mov
xchg
ret
and
add
add
dec
push
clc
repnz
nop
cld
jae
sbb
xor
add
jp
repnz
nop
cld
jae
add
addl
punpckhdq
push
mov
xchg
ret
jp
add
and
sub
add
push
mov
xchg
ret
popa
add
xchg
jge
subl
push
mov
xchg
ret
add
das
popa
incb
jle
add
lods
add
clc
repnz
nop
cld
jae
bound
dec
mov
clc
repnz
nop
cld
jae
add
jb
mov
clc
repnz
nop
cld
jae
sbb
stc
aas
mov
clc
repnz
nop
cld
jae
and
add
test
xlat
pop
imul
clc
repnz
nop
cld
jae
jle
add
dec
add
mov
xchg
ret
test
add
idivb
add
add
add
add
adc
fbstp
repnz
nop
cld
jae
gs
cmpl
lea
mov
add
add
clc
repnz
nop
cld
jae
jle
xchg
in
add
mov
nop
leave
jmp
add
bound
je
in
aaa
pop
add
clc
repnz
nop
cld
jae
ljmp
add
mov
mov
sbb
repnz
nop
cld
jae
cmp
add
sbb
add
add
mov
xchg
ret
sbb
add
mov
jle
nop
cld
jae
stc
sbb
and
jle
push
add
push
mov
xchg
ret
mov
mov
jl
loop
mov
nop
leave
jmp
xor
and
popa
add
add
push
mov
mov
jbe
add
add
add
push
add
mov
push
mov
nop
leave
jmp
adc
add
clc
add
cmp
clc
repnz
nop
cld
jae
jle
cmp
and
mov
mov
clc
repnz
nop
cld
jae
imul
lea
mov
out
dec
push
mov
nop
leave
jmp
add
mov
sub
add
add
add
push
add
xor
xor
push
add
add
add
push
mov
nop
leave
jmp
imul
test
imul
add
jo
iret
inc
add
mov
nop
leave
jmp
cli
jp
sub
add
jl
clc
repnz
nop
cld
jae
add
jle
add
sub
mov
nop
leave
jmp
add
and
add
add
pushf
push
clc
repnz
nop
cld
jae
push
popa
sbb
add
lods
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
clc
sbb
add
clc
repnz
nop
cld
jae
push
add
add
and
add
clc
repnz
nop
cld
jae
add
das
fidivrs
push
mov
nop
leave
jmp
add
mov
popa
and
push
clc
repnz
nop
cld
jae
and
pop
add
jmp
xchg
add
add
add
popa
loope
lods
push
mov
add
add
jge
stos
add
add
xchg
addr16
je
clc
repnz
nop
cld
jae
jle
add
sbb
add
repnz
nop
cld
jae
dec
add
out
and
push
mov
nop
leave
jmp
stos
add
aam
add
jge
clc
repnz
nop
cld
jae
frstor
sbb
fildll
push
mov
xchg
ret
cli
cli
inc
add
add
repz
inc
push
mov
xchg
ret
add
adc
clc
loop
mov
cmp
clc
repnz
nop
cld
jae
xor
add
filds
repnz
nop
cld
jae
add
jge
sbb
rorl
cmpl
in
nop
leave
jmp
sbb
add
add
add
push
mov
nop
leave
jmp
xor
add
mov
repnz
nop
cld
jae
andl
pop
cmp
mov
clc
repnz
nop
cld
jae
xlat
jle
clc
add
push
push
mov
xchg
ret
and
iret
sbb
add
jmp
nop
cld
jae
add
mov
adc
jbe
clc
repnz
nop
cld
jae
mov
add
inc
push
mov
xchg
ret
add
stc
sbb
add
xchg
idiv
clc
repnz
nop
cld
jae
popa
add
arpl
add
jne
add
repnz
nop
cld
jae
mov
jle
stc
mov
sti
push
mov
xor
add
inc
add
add
add
negb
add
clc
repnz
nop
cld
jae
mov
add
add
mov
xor
inc
push
mov
nop
leave
jmp
inc
add
jle
sbb
add
add
in
nop
leave
jmp
jp
add
add
clc
repnz
nop
cld
jae
add
mov
xor
clc
repnz
nop
cld
jae
add
mov
add
add
mov
clc
repnz
nop
cld
jae
inc
add
clc
repnz
nop
cld
jae
jp
add
add
outsb
pop
push
mov
xchg
ret
jge
add
add
stc
add
pop
push
mov
nop
leave
jmp
add
add
sbb
nop
leave
jmp
pop
jle
jo
add
pop
fimuls
andb
in
nop
leave
jmp
jmp
call
push
mov
nop
leave
jmp
jge
arpl
add
add
repnz
nop
cld
jae
clc
das
add
sbb
add
mov
xchg
ret
jo
mov
add
push
repnz
nop
cld
jae
clc
add
add
mov
nop
leave
jmp
push
adc
and
and
rolb
xchg
ret
or
add
add
and
cltd
shl
clc
repnz
nop
cld
jae
inc
jmp
push
inc
and
clc
repnz
nop
cld
jae
jle
and
clc
repnz
nop
cld
jae
jge
add
sbb
add
push
cld
or
nop
leave
jmp
add
add
adc
clc
repnz
nop
cld
jae
add
iret
add
gs
nop
nop
cld
jae
sub
lret
jp
jmp
je
clc
repnz
nop
cld
jae
add
sub
push
clc
repnz
nop
cld
jae
add
jp
add
jg
push
mov
nop
leave
jmp
mov
pushl
jne
clc
repnz
nop
cld
jae
fldl
add
xchg
lock
nop
nop
cld
jae
gs
clc
jle
add
in
push
push
mov
xchg
ret
add
or
clc
repnz
nop
cld
jae
addl
and
test
fwait
mov
clc
repnz
nop
cld
jae
or
add
repz
repnz
nop
cld
jae
add
add
jp
pop
push
mov
xchg
ret
pop
add
add
mov
pusha
push
mov
xchg
ret
add
push
lret
cli
cmpl
cmp
ret
add
add
adc
mov
out
mov
clc
repnz
nop
cld
jae
add
loope
jle
push
push
mov
xchg
ret
clc
test
add
sbb
xorl
and
mov
xchg
ret
movsb
sbb
add
sbb
inc
push
add
clc
repnz
nop
cld
jae
jo
add
popf
xor
clc
repnz
nop
cld
jae
add
add
sub
xor
in
inc
add
and
mov
mov
add
push
add
out
mov
clc
repnz
nop
cld
jae
add
add
mov
lret
or
clc
repnz
nop
cld
jae
pop
or
add
push
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
pop
add
add
bound
repnz
nop
cld
jae
arpl
add
push
clc
repnz
nop
cld
jae
add
jle
sub
adc
mov
inc
clc
repnz
nop
cld
jae
arpl
add
mov
clc
repnz
nop
cld
jae
lret
add
call
in
nop
leave
jmp
add
add
add
cmp
nop
leave
jmp
mov
loope
stc
add
add
cmpsb
push
clc
repnz
nop
cld
jae
add
mov
add
add
or
clc
repnz
nop
cld
jae
sbb
add
and
adc
mov
clc
repnz
nop
cld
jae
add
lea
insl
lea
clc
repnz
nop
cld
jae
and
add
lret
repz
add
push
mov
nop
leave
jmp
stc
xlat
jp
xor
sub
gs
add
add
xchg
stc
das
sbb
mov
clc
repnz
nop
cld
jae
lret
jp
add
jns
test
add
add
in
nop
leave
jmp
fnstsw
imul
cld
jae
lret
sbb
add
jge
xor
add
loop
mov
jne
clc
repnz
nop
cld
jae
add
add
mov
dec
push
mov
xchg
ret
add
sub
popa
cmpsl
mov
add
je
clc
repnz
nop
cld
jae
add
add
cld
jae
add
mov
das
test
mov
add
mov
nop
leave
jmp
popa
stc
add
add
clc
repnz
nop
cld
jae
add
and
add
mov
push
mov
nop
leave
jmp
mov
imul
nop
cld
jae
add
add
jo
inc
add
jmp
add
cmp
decl
jle
add
stc
movsb
add
stc
add
add
sub
clc
repnz
nop
cld
jae
add
add
xor
mov
ja
lods
push
mov
nop
leave
jmp
clc
add
add
add
add
nop
cld
jae
filds
and
mov
cmp
push
loopne
mov
nop
leave
jmp
add
add
sbb
add
clc
repnz
nop
cld
jae
popa
add
inc
add
cmp
nop
nop
cld
jae
adc
xor
add
clc
repnz
nop
cld
jae
xlat
add
add
xor
mov
mov
clc
repnz
nop
cld
jae
adc
add
out
inc
add
arpl
mov
add
and
pop
add
push
mov
xchg
ret
xlat
mov
movsb
jnp
jne
push
mov
nop
leave
jmp
push
add
clc
add
test
ret
add
mov
and
clc
repnz
nop
cld
jae
add
xchg
add
mov
cmp
push
mov
nop
leave
jmp
cli
add
add
pop
clc
repnz
nop
cld
jae
add
add
mov
add
aam
mov
clc
repnz
nop
cld
jae
add
add
popf
pop
clc
repnz
nop
cld
jae
clc
add
xor
mov
mov
xchg
ret
add
and
xlat
test
sti
add
push
mov
xchg
ret
mov
add
mov
add
or
iret
or
cld
jae
add
jge
aad
mov
clc
repnz
nop
cld
jae
mov
stc
mov
add
add
nop
nop
cld
jae
xlat
add
add
add
mov
mov
add
clc
repnz
nop
cld
jae
add
add
xchg
clc
repnz
nop
cld
jae
add
add
inc
clc
jmp
add
add
jle
add
stc
and
add
pop
jae
sub
jmp
add
stos
das
add
push
test
add
add
in
nop
leave
jmp
imul
rep
clc
repnz
nop
cld
jae
pop
add
add
sbb
iret
push
clc
repnz
nop
cld
jae
cli
pop
add
add
clc
repnz
nop
cld
jae
push
add
add
add
mov
cmp
ret
add
loope
mov
and
and
add
xchg
ret
out
cli
fcomps
faddl
add
inc
sub
leave
push
mov
nop
leave
jmp
add
add
add
push
mov
xchg
ret
add
cmp
add
and
mov
xchg
ret
or
mov
add
stos
push
push
mov
xchg
ret
add
and
arpl
pop
push
mov
add
add
ds
dec
movb
mov
shll
add
imul
mov
nop
leave
jmp
or
fisttpll
iret
lea
add
not
push
mov
xchg
ret
jo
add
fbstp
mov
jno
setae
icebp
int3
inc
add
gs
subl
add
repnz
nop
cld
jae
jmp
xor
outsb
out
clc
repnz
nop
cld
jae
add
mov
movsb
clc
repnz
nop
cld
jae
adc
dec
loope
cli
mov
push
mov
xchg
ret
add
xchg
add
add
clc
repnz
nop
cld
jae
and
loope
add
es
shl
add
or
inc
add
and
cli
add
jle
pop
push
mov
nop
leave
jmp
jp
mov
adc
jo
push
inc
sahf
mov
clc
repnz
nop
cld
jae
add
add
mov
mov
je
add
push
mov
nop
leave
jmp
add
stc
and
add
push
mov
xchg
ret
add
loope
iret
add
ljmp
jmp
and
jo
addl
jle
and
lea
clc
repnz
nop
cld
jae
and
ja
add
mov
push
mov
xchg
ret
jmp
lret
xlat
lret
mov
push
mov
nop
leave
jmp
add
add
in
nop
leave
jmp
add
add
pop
clc
adc
sbb
clc
repnz
nop
cld
jae
mov
add
and
mov
mov
nop
nop
cld
jae
add
add
add
add
aad
add
push
int3
inc
add
add
das
sub
push
push
mov
xchg
ret
add
add
pop
add
sub
jne
xchg
sbb
mov
xchg
ret
jmp
add
pop
push
push
mov
xchg
ret
sbb
xchg
adc
add
and
and
and
adc
and
jle
ret
jns
popa
add
mov
xchg
ret
add
add
mov
add
mov
clc
repnz
nop
cld
jae
pop
add
gs
add
add
clc
repnz
nop
cld
jae
add
add
stc
mov
mov
add
mov
nop
leave
jmp
bound
and
loope
adc
xor
push
mov
xchg
ret
add
add
das
add
and
dec
cmp
repnz
nop
cld
jae
add
add
add
cmp
sar
repnz
nop
cld
jae
xchg
adc
add
aaa
mov
icebp
clc
repnz
nop
cld
jae
add
incb
add
das
loop
mov
mov
mov
push
mov
nop
leave
jmp
add
test
add
repnz
nop
cld
jae
add
xchg
add
dec
cmp
repnz
nop
cld
jae
jge
add
add
or
push
mov
nop
leave
jmp
push
mov
mov
adc
mov
push
mov
xchg
ret
add
adc
add
add
repnz
nop
cld
jae
push
and
jle
iret
jne
clc
repnz
nop
cld
jae
bound
add
xchg
inc
add
jns
add
ret
int3
inc
add
add
and
xchg
rcrl
nop
cld
jae
mov
add
and
mov
or
jmp
clc
repnz
nop
cld
jae
addl
or
mov
push
mov
xchg
ret
add
test
pop
add
sbb
add
add
repnz
nop
cld
jae
add
mov
dec
cmp
repnz
nop
cld
jae
add
bound
clc
repnz
nop
cld
jae
add
add
jmp
mov
clc
repnz
nop
cld
jae
adc
add
repnz
nop
cld
jae
add
add
add
pop
push
mov
xchg
ret
cmp
add
das
add
add
movsb
int
jns
clc
repnz
nop
cld
jae
mov
add
xor
repnz
nop
cld
jae
inc
mov
add
sbb
jo
mov
add
in
nop
leave
jmp
add
add
xchg
mov
add
mov
clc
repnz
nop
cld
jae
push
add
add
mov
add
push
mov
xchg
ret
dec
add
add
clc
repnz
nop
cld
jae
and
clc
add
add
inc
push
cmp
mov
xchg
ret
add
add
add
addl
cmp
cmp
push
mov
nop
leave
jmp
or
sub
sub
in
mov
push
mov
xchg
ret
sub
add
lret
fistpll
fs
mov
nop
leave
jmp
and
add
add
jmp
add
stc
mov
add
add
arpl
add
add
add
repnz
nop
cld
jae
jmp
shll
sub
clc
repnz
nop
cld
jae
imul
lea
clc
repnz
nop
cld
jae
add
popl
add
push
mov
nop
leave
jmp
jge
fisttpll
add
sub
xor
inc
call
clc
repnz
nop
cld
jae
fnstsw
sbb
decb
test
clc
repnz
nop
cld
jae
add
add
mov
movsb
clc
repnz
nop
cld
jae
add
and
add
fdiv
icebp
clc
repnz
nop
cld
jae
clc
add
add
add
clc
repnz
nop
cld
jae
jmp
add
in
nop
leave
jmp
sbb
and
lret
add
add
adc
cmc
push
add
mov
nop
leave
jmp
arpl
add
mov
shl
add
mov
add
add
mov
push
mov
xchg
ret
add
stos
dec
add
add
repnz
nop
cld
jae
mov
sbb
add
les
inc
sub
repnz
nop
cld
jae
jp
and
movsb
push
mov
xchg
ret
and
and
or
nop
nop
cld
jae
stc
mov
add
or
inc
add
sub
mov
pop
xor
clc
repnz
nop
cld
jae
add
gs
xor
clc
repnz
nop
cld
jae
mov
add
sbb
pop
scas
push
clc
repnz
nop
cld
jae
add
add
add
clc
add
pop
push
mov
nop
leave
jmp
push
add
adc
adc
sub
sub
mov
cmp
ret
gs
and
filds
add
jmp
sub
jp
add
iret
and
rorb
aad
add
pop
add
mov
clc
repnz
nop
cld
jae
lret
pop
clc
add
ss
leave
push
mov
nop
leave
jmp
or
cmp
xlat
jle
aaa
int3
shr
clc
repnz
nop
cld
jae
or
clc
push
decl
nop
cld
jae
mov
add
lret
add
mov
xchg
ret
add
jo
sbbl
jge
clc
repnz
nop
cld
jae
and
add
mov
adc
mov
mov
mov
xchg
ret
add
lret
jp
add
add
scas
push
clc
repnz
nop
cld
jae
das
fnsave
adc
clc
repnz
nop
cld
jae
add
cmp
mov
add
loop
mov
call
in
nop
leave
jmp
stc
and
jge
jg
popa
add
repnz
nop
cld
jae
add
add
jmp
in
scas
int
scas
xor
xor
add
xchg
inc
addb
or
nop
leave
jmp
add
stc
add
adc
enter
nop
cld
jae
mov
mov
jne
je
repnz
nop
cld
jae
dec
add
repnz
nop
cld
jae
add
test
add
popa
add
clc
repnz
nop
cld
jae
arpl
add
add
fbstp
xor
add
clc
repnz
nop
cld
jae
bound
xchg
add
nop
nop
cld
jae
sbb
add
and
add
push
fs
repnz
nop
cld
jae
sbb
dec
les
add
clc
repnz
nop
cld
jae
sub
adc
ret
or
push
fldl
xchg
ret
add
add
inc
test
pusha
add
clc
repnz
nop
cld
jae
add
add
sub
stc
lret
cmp
push
mov
nop
leave
jmp
cli
mov
add
lea
clc
repnz
nop
cld
jae
add
mov
cli
add
repnz
nop
cld
jae
bound
loope
jo
cltd
shr
clc
repnz
nop
cld
jae
jmp
stos
push
push
mov
nop
nop
cld
jae
jmp
push
stos
push
mov
add
add
movsl
add
loop
rcll
mov
sub
xor
inc
add
add
and
and
cli
clc
repnz
nop
cld
jae
add
popa
pop
pop
push
addb
addr16
adc
mov
pop
jne
clc
repnz
nop
cld
jae
arpl
push
ja
nop
push
mov
xchg
ret
adc
add
sbb
mov
xchg
ret
xlat
loope
add
add
sahf
call
push
mov
nop
leave
jmp
jle
add
add
and
in
nop
leave
jmp
or
aad
loopne
mov
jbe
clc
repnz
nop
cld
jae
and
mov
add
cld
xor
push
mov
nop
leave
jmp
mov
add
clc
add
and
add
mov
xchg
ret
das
add
add
add
test
add
repnz
nop
cld
jae
add
add
lock
clc
repnz
nop
cld
jae
adc
or
sbb
jmp
jne
clc
repnz
nop
cld
jae
add
jp
pop
clc
testb
add
add
add
int3
mov
mov
test
fdivr
clc
repnz
nop
cld
jae
add
incb
and
inc
add
add
xor
and
push
mov
nop
leave
jmp
add
mov
mov
arpl
movzwl
push
mov
nop
leave
jmp
sub
add
and
push
push
mov
xchg
ret
cmp
lea
mov
incb
cmp
nop
nop
cld
jae
stos
add
add
iret
sub
test
call
in
nop
leave
jmp
add
add
add
inc
add
clc
or
stc
add
sbb
mov
xchg
ret
dec
mov
add
dec
pop
push
mov
nop
leave
jmp
add
add
test
add
adc
xor
push
clc
repnz
nop
cld
jae
push
add
pop
arpl
call
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
and
cmp
sub
sti
clc
repnz
nop
cld
jae
and
add
add
in
pop
clc
repnz
nop
cld
jae
and
add
jbe
clc
repnz
nop
cld
jae
add
add
loopne
clc
repnz
nop
cld
jae
add
jle
add
nop
nop
cld
jae
mov
jp
add
add
xchg
clc
repnz
nop
cld
jae
add
add
and
cmpsb
loop
clc
repnz
nop
cld
jae
and
arpl
mov
mov
enter
nop
cld
jae
lret
and
cmc
or
inc
lock
repnz
nop
cld
jae
xchg
adc
add
add
push
mov
xchg
ret
arpl
mov
add
jle
jne
clc
repnz
nop
cld
jae
push
popl
dec
and
push
mov
xchg
ret
add
add
dec
inc
xor
pop
les
xchg
ret
add
add
das
add
mov
clc
repnz
nop
cld
jae
add
jle
popa
jb
mov
mov
add
add
clc
repnz
nop
cld
jae
imul
sbb
popa
add
mov
xchg
ret
add
add
nop
cld
jae
mov
add
cmp
add
loopne
mov
dec
add
mov
xchg
ret
pop
add
add
add
rep
clc
repnz
nop
cld
jae
add
add
add
mov
nop
nop
cld
jae
or
add
add
iret
mov
repz
lret
clc
repnz
nop
cld
jae
add
popl
add
add
jb
mov
ret
clc
repnz
nop
cld
jae
add
add
stc
pop
das
fsubrp
xor
addl
test
fldl
arpl
push
sbb
add
or
jno
clc
repnz
nop
cld
jae
popa
cli
add
add
mov
out
add
clc
repnz
nop
cld
jae
adc
add
add
out
add
clc
repnz
nop
cld
jae
adc
subl
mov
ss
imul
imul
add
add
insb
iret
mov
mov
mov
inc
or
cmpsl
mov
push
cwtl
cmp
mov
push
dec
ds
aas
mov
imul
fbstp
fcompl
add
push
and
push
repnz
push
lock
xchg
out
ret
cmpsl
and
mov
add
mov
test
add
mov
mov
movsl
lock
icebp
into
in
fdivp
int3
fs
scas
pushf
mull
cmp
cld
pop
js
cmp
stos
aam
dec
xchg
push
add
sbb
jno
or
vcomiss
std
xchg
add
inc
add
loope
fsts
mov
mov
sbb
xchg
cmp
test
loope
add
cmp
pop
pop
lods
test
sbb
rolb
jle
push
fistpl
cmovne
mov
inc
xchg
push
add
shll
cmp
cs
sbb
nop
add
mov
bswap
jle
sti
xor
push
lods
pop
xchg
lahf
pop
aas
lahf
jmp
mov
xchg
mov
jp
add
fistps
test
repnz
mov
ja
dec
in
rolb
mov
inc
sub
icebp
mov
sbbl
cld
mov
mov
mov
add
mov
lds
lods
mov
add
addb
jmp
mov
jnp
mov
mov
mov
pop
xor
mov
add
mov
or
add
add
mov
mov
pop
xor
mov
xor
scas
inc
add
pushf
movd
rolb
popf
cmc
movsb
xlat
fsubs
daa
push
add
aas
adc
pop
lock
ret
jl
add
faddl
es
add
add
xchg
mov
in
out
add
or
xchg
imul
mov
add
sub
incb
rorl
lcall
add
je
lock
mov
xchg
int
mov
jp
push
pop
sahf
loopne
mov
add
sub
mov
dec
je
loope
ret
data16
test
push
dec
cmpsb
or
add
push
or
add
push
lods
aas
push
mov
add
or
lds
lea
out
or
jne
mov
mov
mov
push
adc
mov
sub
and
mov
lods
rolb
mov
aas
in
lahf
out
ret
adc
add
xchg
fisttpl
outsb
push
nop
add
add
mov
out
jo
mov
inc
add
cmc
int3
pusha
add
fsubrs
sub
jle
push
add
fsub
pop
inc
ret
aam
jnp
pop
xchg
movsl
addb
sub
mov
mov
mov
cmp
push
jg
sarl
fwait
mov
addb
cmp
fldenv
cmpl
mov
jbe
or
mov
mov
pop
mov
and
sbb
or
xlat
xchg
cs
jp
fsts
repz
push
out
or
add
int3
rolb
mov
aaa
sub
xor
xchg
push
cmpsb
mov
addb
adc
mov
dec
lret
lcall
mov
mov
mov
pop
push
stos
call
cs
add
inc
mov
insb
lret
es
mov
and
add
enter
add
pusha
add
mov
out
jl
in
fists
push
add
add
loope
movsl
push
insl
push
add
mov
imul
mov
and
mov
lret
mov
dec
ds
stc
and
cmp
in
sbb
in
jb
mov
add
pop
out
adc
icebp
push
negb
pop
repnz
mov
bound
mov
mov
jl
daa
iret
adc
mov
add
mov
mov
sahf
sbb
add
mov
jg
mov
sbb
xchg
movsl
data16
test
mov
xlat
push
cmp
xchg
mov
mov
mov
xchg
add
je
in
sub
mov
xor
mov
loop
mov
ret
mov
fwait
pop
jge
mov
dec
in
fcoms
add
add
mov
add
xchg
mov
dec
das
xor
jno
mov
add
push
scas
mov
dec
ror
cwtl
daa
stc
pop
mov
add
mov
das
pop
std
jecxz
cmpsb
and
pop
rolb
mov
iret
dec
pop
cld
mov
mov
push
sub
cmp
divb
add
add
mov
sub
dec
xchg
ljmp
outsl
cltd
fisubl
pop
mov
add
mov
add
sub
xor
mov
mov
cltd
jbe
push
push
outsb
pop
add
mov
aad
add
les
xor
cmp
in
js
inc
inc
cmp
fcmovnbe
das
fnstcw
clc
push
add
sbb
inc
xchg
cmp
jne
data16
push
mov
push
inc
add
pop
mov
sbb
push
jo
mov
add
gs
mov
ss
cmpsl
testl
mov
add
and
mov
and
aad
add
push
pop
mull
mov
push
pop
jmp
adc
mov
cs
imul
add
mov
jmp
add
mov
add
add
add
mov
shll
mov
add
add
pop
mov
add
jbe
pop
sbb
cmp
cld
dec
ffreep
pop
cmp
jns
loop
mov
mov
xchg
add
add
popa
sub
push
cmp
or
test
jmp
daa
sub
and
ljmpw
test
addb
mov
or
mov
pop
pop
inc
or
push
jl
aaa
sarl
push
mov
dec
inc
cmp
mov
out
roll
cmp
add
imul
fisubs
add
mov
mov
xor
pop
and
mov
ret
outsl
imull
addb
xchg
inc
add
aam
push
add
fcomip
insb
sahf
cmp
mov
add
or
mov
inc
in
mov
stc
jb
mov
jp
jmp
test
add
mov
lcall
lods
xchg
and
mov
add
push
aas
das
jne
add
outsb
and
mov
pop
or
mov
adc
and
mov
cltd
jb
mov
and
ja
or
add
stc
rolb
mov
inc
add
jecxz
in
inc
lds
cmp
aaa
mov
or
add
xchg
clc
jo
mov
in
cmc
aaa
xor
testb
scas
push
add
add
clc
out
lods
xchg
es
or
push
in
test
mov
push
js
inc
filds
add
xchg
clc
loop
mov
pop
and
add
mov
nop
add
add
add
pop
pop
dec
outsl
jne
jb
mov
cld
in
xor
add
add
daa
repnz
movsl
pusha
add
fs
mov
imul
mov
cld
cmp
jmp
add
lret
and
push
cmpsl
je
jb
mov
add
mov
mov
mov
push
add
mov
fmull
push
mov
or
xchg
pop
inc
add
dec
dec
clc
adc
mov
add
mov
out
mov
sbb
mov
jg
or
in
neg
dec
lods
addb
jns
or
pop
scas
fwait
mov
mov
outsl
stos
or
dec
dec
call
in
sti
scas
adc
mov
shll
add
movsb
lds
mov
cmpsl
lock
lret
jge
inc
add
lcall
cmp
mov
lret
in
add
jle
lret
push
daa
pop
sbb
add
add
mov
inc
lds
push
in
imul
add
ficompl
mov
inc
leave
or
iret
pop
cmp
ljmp
push
mov
xchg
lea
and
cld
arpl
add
mov
test
add
jg
inc
pop
cmp
pop
ret
sbb
fistps
cwtl
movsb
xchg
clc
mov
or
add
mov
cs
rolb
mov
or
call
sbb
cwtl
push
add
add
add
mov
xchg
test
pop
nop
add
add
dec
xchg
add
fwait
dec
fst
insb
imul
int3
xchg
lea
push
fwait
mov
xchg
fcmovb
add
and
data16
out
in
mov
add
adcl
les
mov
dec
jne
divl
aaa
addb
stos
pop
push
dec
rcll
mov
dec
sub
addr16
daa
xchg
pop
mov
xchg
jbe
dec
popa
fnstsw
add
add
mov
mov
imul
cmp
ret
rolb
mov
add
sub
cmp
andl
add
mov
loope
loopne
mov
loope
jnp
enter
daa
fmuls
cs
arpl
fsubrs
xor
xor
data16
in
aaa
xor
out
repnz
sub
add
add
mov
mov
jmp
ret
lea
lea
pop
pop
push
jns
ss
sbb
out
cmp
sub
push
call
pop
je
mov
mov
std
std
mov
add
mov
mov
mov
fsubp
adc
mov
pop
cwtl
aas
or
add
mov
adc
lret
push
ret
je
outsb
or
ret
int
lods
push
add
dec
into
cltd
ret
pop
jnp
cmp
cmp
fsubrs
loopne
mov
out
push
add
frstor
mov
mov
add
cltd
lea
or
enter
imul
cmp
push
sub
imul
stos
ds
ret
and
mov
fnclex
add
push
add
pushw
xchg
add
add
mov
mov
lret
sbb
lock
mov
std
mov
stos
xor
mov
add
lods
jmp
mov
ja
je
sti
ljmp
es
cmpsb
xor
lods
cmpsb
jge,pt
pop
cmp
das
movsw
sahf
aad
outsl
lcall
xchg
sub
mov
ficompl
cmp
es
push
lea
mov
mov
jmp
lock
mov
mov
push
xchg
scas
cmp
dec
jle
es
movsb
or
jb
mov
jle
test
inc
cmp
adc
mov
add
mov
sbb
shrl
xchg
dec
aad
adc
mov
int
bound
mov
cltd
adc
mov
call
pusha
add
and
inc
adc
or
xchg
xchg
or
cmp
inc
add
mov
cmc
mov
imul
mov
mov
imul
movsl
adc
dec
pop
stos
xchg
add
push
add
push
add
pop
movsb
repz
mov
add
mov
aam
xchg
xor
xchg
mov
add
mov
lret
pop
add
mov
add
adc
add
add
clc
mov
sub
jg
add
cmp
add
into
fimuls
je
jmp
mov
sbb
lock
mov
push
xchg
pop
popf
add
add
add
push
aam
mov
add
out
and
mov
push
shrl
das
gs
movsb
push
add
xchg
adc
fwait
and
mov
lock
sbb
lahf
ret
addr16
adc
mov
addb
mov
sub
mov
mov
add
fldenv
add
rolb
mov
ficoms
jecxz
fwait
les
mov
or
sbb
es
repz
pop
fwait
inc
test
mov
unpcklps
sub
sbb
sbb
aaa
inc
popf
std
aaa
aaa
xchg
ret
pop
or
nop
add
data16
or
pop
mov
push
lret
loope
xchg
push
add
xor
add
fwait
in
add
xor
push
or
test
out
xchg
mov
push
push
lods
xchg
movsl
sbb
add
iret
cmpsb
mov
mov
add
add
mov
adc
mov
out
adc
std
imul
movups
sub
cmp
int
cld
inc
push
pushf
sbb
add
rcll
add
jnp
inc
ret
mov
je
add
lods
inc
mov
adc
xchg
sub
dec
or
add
xlat
int3
js
add
fdivl
in
jg
sbb
add
notl
mov
int3
mov
int3
fildll
mov
lods
bound
mov
jle
sti
fs
testb
mov
add
movsl
mov
loop
mov
or
sahf
stc
mov
mov
vmovaps
ja
neg
insl
ja
divl
xor
mov
jne
add
mov
negb
add
jg
cwtl
inc
adc
mov
mov
cmp
loop
mov
dec
call
sub
scas
inc
add
js
lret
sub
jnp
add
mov
cwtl
add
loopne
mov
add
jne
inc
insl
mov
cwtl
mov
negb
xchg
ret
outsl
adc
aas
gs
arpl
rolb
mov
sub
adc
mov
popf
xchg
cmpsb
push
incb
mov
add
repnz
mov
mov
stc
xor
sub
cmp
mov
pop
cmpl
mov
fcmovbe
add
in
aad
icebp
push
inc
add
add
in
add
and
mov
jnp
mov
inc
and
mov
jb
mov
add
sbb
call
push
and
xchg
mov
cmp
xorl
xchg
sub
mov
add
xchg
out
fisubl
popf
mov
mov
mov
add
mov
sbb
popf
outsb
daa
imul
sbb
mov
mov
mov
mov
cmp
jecxz
xchg
dec
xchg
xor
das
jae
popf
clc
cmpsb
outsb
sbb
jb
mov
mov
cmp
cmp
dec
or
mov
mov
add
mov
pop
cmp
test
rorl
fwait
xchg
in
pop
insl
xchg
adc
mov
add
fldenv
add
jmp
inc
add
mov
out
popa
bound
mov
add
mov
int
aam
jne
dec
cld
push
cmp
sbb
xor
add
addb
bound
mov
cmp
nop
add
cmc
adc
mov
js
iret
add
add
ss
xchg
test
je
sbb
inc
add
jne
dec
into
arpl
adc
mov
add
or
push
add
insb
sbb
cmp
cmp
ret
and
dec
js
mov
addr16
rcl
xchg
add
dec
in
data16
add
leave
movsl
or
jae,pn
jl
add
cltd
add
inc
add
inc
cwtl
lcall
xlat
push
mov
insb
add
push
dec
and
fldcw
dec
mov
addb
repz
or
lds
mov
movsl
cmpsl
jl
pusha
add
add
and
mov
jmp
pop
ret
inc
add
add
and
mov
cmp
test
in
mov
mov
dec
pop
imul
jbe
add
jb
mov
sbb
outsl
pop
sbb
stos
outsl
cld
jae
int
xchg
std
jns
notb
outsb
rcll
add
stos
mov
shl
add
add
in
shrl
dec
addr16
imul
addb
lock
mov
add
pop
cmp
rolb
mov
add
mov
repnz
add
fisttps
orl
inc
lock
frstor
xchg
add
pop
dec
rcl
mov
cmp
add
pop
pop
push
adc
xchg
add
mov
inc
and
popf
dec
iret
xchg
mov
xor
mov
or
leave
movsb
cmc
xchg
or
xor
mov
add
cmp
add
nop
add
lock
add
add
add
test
lret
addb
loopne
mov
mov
dec
insb
sbb
cmp
mov
xor
popf
cs
mov
test
pop
cmp
cmp
insl
mov
jge
add
jge
adc
sub
mov
stos
push
dec
loopne
mov
mov
aas
repnz
mov
ds
push
xchg
lret
push
mov
mov
mov
out
in
or
pop
ret
les
add
mov
mov
mov
scas
loope
and
dec
add
mov
mov
add
mov
cmp
pop
imul
adc
jo
mov
inc
add
mov
cwtl
mov
inc
es
inc
out
repnz
aad
pop
mov
add
adc
hlt
adc
mov
xchg
popa
xchg
loopne
mov
pop
ficompl
inc
add
sub
jge
ret
mov
mov
push
rcrl
out
addb
mov
push
int
sub
add
out
clc
push
jbe
inc
dec
jns
cmp
mov
lahf
mov
iret
or
pop
xor
add
fdivrs
ds
ja
cmp
add
mov
add
data16
push
dec
push
jmp
insb
add
mov
repz
add
sti
movb
call
pusha
add
cs
mov
sub
xchg
add
xor
mov
mov
and
inc
fdivrl
push
sub
push
add
mov
add
mov
push
add
fisubrs
and
push
xor
adc
dec
inc
mov
xor
inc
add
sbb
sqrtps
inc
das
shl
insb
mov
call
add
call
add
aad
mov
xor
jecxz
fildl
js
cmpsl
ds
movsl
pop
ja
rcll
xchg
inc
add
scas
in
out
and
add
or
loope
sub
divps
inc
dec
stc
jnp
push
stos
int3
mov
mov
lds
rolb
cld
adc
add
mov
cmp
mov
pop
mov
pop
int3
stos
pop
push
add
mov
mov
cmp
inc
push
inc
add
jae
add
jns
mov
shr
popf
rcll
or
sbb
mov
pop
add
popa
fimuls
pushf
into
insl
jns
cmp
call
jmp
repnz
dec
sub
cmp
loope
jge
xor
cmp
add
jnp
mov
jo
mov
lcall
sbb
sbb
xchg
mov
mov
xor
movsl
out
roll
push
nop
add
loope
jg
xchg
jns
fidivl
xchg
pop
mov
mov
outsb
or
mov
popa
add
mov
ja
add
cmp
ss
add
xchg
xchg
out
ret
inc
lock
add
mov
mov
loope
inc
jp
add
push
imul
or
movsl
cmp
add
mov
mov
hlt
xchg
xor
mov
inc
addl
push
imul
sbb
int3
scas
fsubrs
dec
fbstp
xor
mov
lahf
xor
add
movsb
inc
push
add
imul
mov
inc
xchg
in
or
dec
or
sub
add
jbe
mov
fiaddl
and
mov
or
outsl
push
fidivrs
add
mov
xchg
cmp
out
int
loopne
mov
sub
jp
lret
test
cmp
mov
mov
add
mov
cli
or
inc
add
fwait
mov
push
mov
add
mov
imul
add
cli
mov
fwait
das
nop
add
int3
jle
int
add
lods
jbe
fstl
mov
in
mov
outsb
jle
adc
mov
add
sub
and
mov
xor
addb
jb
mov
into
pusha
add
mov
add
rolb
mov
lret
arpl
fidivrl
pop
fbld
dec
sub
out
int
and
push
add
rolb
sub
frstor
add
int3
scas
rorl
add
cmc
push
les
pop
dec
js
cmp
pop
outsb
lods
cmpsl
stc
scas
arpl
dec
jl
in
pop
repnz
enter
stos
shll
adc
mov
add
cs
mov
push
dec
dec
or
add
test
cmp
add
shr
js
xor
mov
icebp
mov
add
dec
sbb
sbb
or
mov
out
jg
pop
aad
test
enter
mov
imul
jmp
mov
mov
pop
aas
jno
cmp
mov
movsl
cmpl
fistps
cmp
pop
mov
pop
and
mov
mov
pusha
add
jb
mov
clc
mov
movsb
into
jle
js
stc
std
xchg
mov
sbb
add
push
inc
push
lahf
mov
loopne
mov
jl
xchg
mov
add
add
mov
aas
cmp
pop
inc
add
and
pop
loopne
mov
scas
cmp
jb
mov
in
add
jecxz
mov
jle
int3
decb
cli
dec
pop
sub
scas
test
add
mov
mov
in
clc
test
mov
push
call
addr16
inc
call
aas
inc
add
add
add
add
pop
ret
sbb
pusha
add
call
push
xchg
fisttpll
cli
mov
dec
iret
popf
pop
mov
out
fwait
arpl
imul
inc
jne
int
mov
loop
mov
jnp
add
int
mov
in
fidivrl
loopne
mov
call
add
inc
jmp
leave
loop
mov
xchg
add
add
push
dec
mov
adc
add
mov
inc
adc
jae
or
addb
jg
push
gs
and
mov
add
add
inc
aad
aam
call
or
aad
sub
test
ss
xchg
add
push
add
and
cmp
mov
js
sahf
add
mov
pop
aaa
or
sub
pop
push
add
pop
push
pop
mov
inc
jmp
mov
loopne
mov
fs
out
mov
mov
add
inc
stos
sti
pop
test
out
cmc
insb
popa
fdivrl
add
in
pop
aam
lcall
hlt
dec
push
sbb
cmc
ljmp
sbb
push
sub
repnz
jnp
xor
or
sbb
mov
push
test
fldz
push
mov
jecxz
add
fsts
jno
mov
jns
mov
push
out
xlat
sbb
insb
rolb
inc
neg
cmp
rolb
mov
mov
mov
mov
imul
mov
inc
jl
inc
gs
dec
inc
add
imul
xchg
fwait
jne
add
push
pop
inc
add
jnp
add
sbb
imul
mov
pop
push
aam
inc
fstps
aam
or
sbb
fistl
xchg
push
xchg
mov
rolb
mov
bswap
ss
mov
addb
sbb
add
mov
push
xor
xchg
add
mov
mov
xchg
dec
dec
xchg
pop
xchg
mov
mov
pop
cmpsl
cltd
enter
lock
ss
pop
rolb
xor
add
in
pop
mov
mov
arpl
pop
clc
xor
daa
jnp
fisubl
js
add
daa
sbb
in
or
xchg
push
lahf
call
dec
pushf
lret
or
jns
inc
add
add
mov
ja
mov
in
push
add
in
mov
inc
in
div
pop
xor
dec
mov
jmp
sub
stos
lahf
sti
mov
mov
and
mov
sub
incb
mov
nop
add
and
jo
mov
shrl
aas
mov
popf
mov
add
adc
mov
add
add
out
inc
add
inc
xchg
add
mov
inc
daa
jmp
xor
mov
out
mov
push
xor
mov
add
mov
inc
mov
jmp
pop
xchg
inc
add
imul
and
cmpsl
jnp
das
rolb
mov
sbb
fdiv
jno
mov
and
or
les
sti
pop
imul
cmp
add
xchg
sub
jmp
dec
dec
ret
sarl
or
or
cmp
mov
mov
mov
mov
or
mov
mov
out
mov
add
add
das
movsb
push
js
add
or
sub
jbe
push
aaa
hlt
scas
or
fs
add
or
mov
jne
push
add
xor
mov
lods
fcmove
xchg
mov
jnp
add
push
in
add
push
pop
push
dec
xchg
or
sbb
xchg
inc
add
cmp
cmpsl
lods
out
mov
dec
leave
xchg
dec
sub
inc
sbb
push
dec
mov
in
les
add
sti
pop
in
cmp
adc
xlat
pop
das
cmpsl
add
sub
mov
mov
fnstenv
out
sbb
jp
xchg
arpl
sub
inc
popa
mul
push
jno
mov
sub
in
fmulp
ret
mov
dec
mov
xchg
rorl
lock
jae
add
int3
arpl
dec
pop
mov
add
repz
test
sti
fdivp
daa
xor
test
mov
mov
call
mov
js
add
lock
xchg
ja
stos
insb
mov
iret
mov
mov
loope
lods
cmpsl
ds
mov
mov
fwait
pop
lret
mov
mov
add
and
mov
xlat
movsb
cmp
in
rolb
mov
mov
or
add
add
add
xor
repz
cvttps2pi
fs
xor
pushf
adc
mov
add
arpl
add
mov
jl
ja
test
outsb
lret
dec
jecxz
add
stc
push
mov
sub
addb
push
add
inc
scas
pop
in
lret
mov
dec
mov
cmp
test
mov
inc
add
std
sub
mov
scas
bound
mov
add
ljmp
lret
mov
mov
xchg
add
mov
lods
and
mov
dec
sub
aaa
iret
rolb
mov
and
je
std
outsl
shrl
or
mov
mov
mov
pop
xor
mov
mov
add
fcomps
popf
dec
popf
fcmove
cwtl
icebp
and
mov
mov
mov
mov
mov
andl
push
outsl
iret
dec
lahf
inc
add
in
xchg
push
jo
mov
insl
daa
in
enter
jmp
and
adc
mov
cmp
sub
sti
out
adc
jecxz
xor
mov
adc
mov
add
cmp
iret
dec
int3
jmp
mov
mov
sbb
movsb
or
mov
test
add
pop
int
jne
xor
mov
add
and
pop
ret
repnz
pop
outsb
or
add
pop
nop
add
fstps
or
xchg
addr16
add
scas
push
add
pop
fiaddl
lret
mov
push
xor
xor
adc
incb
aad
dec
xchg
add
xchg
sub
mov
add
xchg
imul
add
and
mov
mov
lret
lcall
jbe
push
mov
mov
pop
cwtl
or
out
adc
add
addb
and
mov
test
add
gs
mov
fwait
out
ss
push
mov
inc
add
stc
lods
lock
jl
xchg
popa
dec
fmuls
cmpl
xchg
std
mulb
jb
mov
out
lcall
nop
add
add
cmp
adc
mov
cwtl
or
adc
mov
jbe
idiv
sub
push
adc
out
or
pop
ret
dec
shll
inc
aam
lods
xor
arpl
jmp
mov
cmpsl
mov
pusha
add
mov
sbb
mov
mov
lret
and
popf
push
mov
imul
in
lret
stc
in
add
mov
xor
xor
in
xchg
hlt
push
addb
bound
mov
shll
mulb
add
mov
pop
adc
mov
stos
adc
addb
fs
or
sarl
into
pop
test
adc
push
aad
test
mov
mov
push
adc
cmc
pusha
add
mov
mov
mov
fmulp
in
add
dec
int3
out
jmp
cmp
shll
test
sbb
add
add
cld
dec
rcrl
jmp
rolb
mov
or
stc
out
fsqrt
adc
out
dec
fnstsw
mov
jnp
lea
add
rolb
inc
pop
ficoms
pop
mov
add
mov
cld
xor
mov
push
add
inc
fimull
and
movsb
int
fildl
loop
mov
lcall
mov
clc
daa
pop
xchg
add
adc
mov
enter
sbb
and
jo
mov
mov
aam
ficomps
add
add
rolb
mov
xchg
iret
push
rcll
mov
jg
fisttpl
cltd
push
add
add
je
andl
push
add
sub
xor
jle
mov
pop
sub
aam
orl
xor
mov
and
mov
xor
push
fstps
mov
int3
push
out
add
push
sub
or
jecxz
mov
mov
cmp
imul
in
xchg
mov
mov
xor
mov
movb
inc
mov
adc
arpl
ljmp
inc
add
add
add
sbb
adc
adc
jb
mov
jg
das
dec
sbb
jnp
in
mov
xor
hlt
ja
jne
cwtl
xor
mov
xchg
fimull
xor
mov
and
mov
divb
add
xor
sub
insl
outsl
push
pop
fmuls
loop
mov
add
add
sahf
xchg
and
and
sbb
xchg
inc
aaa
loop
mov
mov
jbe
rolb
mov
add
es
pop
int
fwait
js
add
push
push
leave
fiaddl
mov
pop
xchg
sbb
or
lock
add
mov
dec
cmp
lahf
push
into
mov
cmp
add
cmp
enter
fstl
and
mov
repnz
mov
and
xchg
pop
stc
sbb
inc
add
mov
mov
mov
mov
inc
xor
push
sbb
add
loopne
mov
aad
mov
mov
shl
jbe
mov
mov
out
xor
mov
sbb
push
pop
ljmp
aas
std
and
ljmp
add
fnstsw
lds
mov
mov
mov
add
mov
cmp
fiadds
pop
sub
mov
lcall
add
subl
mov
push
out
scas
rolb
mov
push
movsb
repnz
mov
cmp
add
ret
pusha
add
fs
data16
sub
imul
dec
pop
xor
pop
int
repnz
jo
mov
aas
aam
addb
daa
jecxz
sub
cmp
les
out
jmp
pop
inc
addr16
or
add
add
add
mov
ja
jmp
sbb
sti
mov
pop
xchg
add
addr16
aad
xor
mov
inc
inc
addr16
divl
cld
stos
in
sahf
rolb
jp
in
xchg
add
into
fiaddl
xor
mov
ljmp
fwait
mov
add
mov
sti
hlt
adc
dec
mov
int3
inc
mov
mov
fdivs
mull
filds
mov
cld
xchg
js
addr16
add
scas
add
mov
fildll
jo
mov
push
fisttps
push
add
jmp
mov
mov
mov
add
cltd
cmp
jno
int3
pop
lods
and
fmull
mov
bound
mov
bound
mov
add
and
mov
mov
xlat
out
add
shl
mov
add
fcomp
adc
mov
in
mov
push
stc
js
adc
mov
fldl
mov
xchg
and
adc
mov
xor
popf
sub
cmpsl
or
mov
gs
add
das
loopne
mov
test
add
dec
xchg
ja
sub
cld
xor
mov
orl
mov
pop
addb
fsts
push
negl
test
push
push
jb
mov
push
je
cli
add
adc
pop
cmpsb
xlat
negl
sub
dec
ja
sub
xor
add
add
add
add
repnz
test
movsl
pxor
add
enter
movsl
add
push
mov
in
ljmp
jo
mov
add
jo
mov
add
rolb
mov
rcl
sbb
add
out
mov
mov
push
mov
add
mov
scas
inc
sub
rolb
mov
push
mov
daa
jnp
or
das
lods
xchg
rorl
imul
add
loope
sti
int3
dec
sbb
arpl
add
ret
sbb
adc
push
push
lcall
cltd
lods
pop
lea
jo
mov
push
out
sub
mov
add
mov
cwtl
sub
add
cmc
cs
add
push
jo
mov
add
inc
add
mov
adc
mov
mov
xchg
ja
dec
fsubl
add
mov
mov
pop
mov
sbb
sbb
notb
shrl
add
mov
fidivrl
rolb
mov
rcl
repnz
add
jmp
or
xlat
stc
mov
imulb
or
add
and
negb
pop
pop
cld
lret
and
mov
mov
test
add
rolb
mov
add
fwait
and
sub
xchg
jb
mov
rolb
mov
outsb
jae
div
add
sbb
pushf
jne
mov
add
xchg
aad
leave
and
mov
jns
lcall
jmp
test
jg
fcmovne
adc
mov
out
scas
push
sbb
outsl
push
movsl
mov
movsb
dec
je
cmp
mov
add
xchg
sbb
into
fs
mov
not
jge
add
xchg
pop
mov
cmp
xchg
push
add
scas
jge
xlat
dec
test
push
push
cmp
in
add
xor
xor
xor
add
jb
mov
outsb
jp
push
mov
outsb
jbe
add
mov
add
jno
cmpsl
jecxz
cli
fisttpl
push
dec
sbb
xor
mov
xor
les
stos
pop
movsb
sub
add
xchg
jmp
pop
testl
add
mov
add
mov
outsb
aas
bound
mov
push
test
xchg
add
mov
mov
mov
inc
rolb
mov
jge
movsb
xchg
jle
jmp
mov
push
ja
rcr
ret
add
cmp
scas
cmc
or
test
mov
mov
in
daa
dec
or
mov
sbb
xlat
mov
cmpsl
xor
cmc
insl
cmp
in
popf
push
add
mov
aaa
cwtl
fxch
mov
insb
pop
mov
add
lcall
sbb
inc
in
mov
jnp
repz
cmp
fs
add
imul
add
loope
xor
stos
ds
dec
cmp
lret
cmp
add
pop
mov
push
enter
xchg
sub
xor
xchg
test
or
mov
mov
pop
inc
out
lods
mov
pop
push
add
mov
ret
push
pop
and
mov
mov
inc
mov
mov
fs
mov
scas
arpl
sbb
pop
jb
mov
adc
mov
add
xchg
add
sub
dec
mov
mov
jae
pop
pop
cld
sarl
cmc
mov
mov
jmp
rolb
mov
sbb
rolb
adc
mov
sbb
dec
mov
mov
imul
mov
sbb
add
sahf
int3
je
adc
mov
mov
in
mov
rolb
mov
mov
or
cmp
les
scas
cmp
fxch
js
add
call
jg
mov
push
add
ror
mov
pushf
jmp
andl
mov
aam
xchg
loope
jo
mov
cmp
xor
hlt
push
addb
int
and
mov
jae
dec
sub
add
and
mov
push
mov
addr16
fs
add
and
mov
ja
je
sbb
add
lahf
pushf
test
inc
mov
cmp
sub
jg
xchg
xorl
mov
dec
cli
push
sub
mov
rolb
xchg
dec
mov
mov
add
jb
mov
or
ss
rolb
mov
scas
or
mov
lcall
test
fs
and
mov
xchg
add
add
cmp
mov
mov
add
movsl
arpl
mov
mov
xchg
push
out
scas
jl
push
nop
add
ja
in
mov
jnp
xlat
xor
or
mov
add
dec
push
and
aad
fsubs
insl
scas
movsb
mov
mov
mov
rolb
mov
loope
add
fcmovu
xor
inc
aaa
cs
sbb
mov
sbb
fadds
testl
rolb
negb
sbb
nop
add
mov
pop
jns
xor
mov
hlt
and
mov
loope
repz
outsb
sarl
adc
adc
xchg
int3
adcl
push
dec
pop
pop
dec
and
mov
mov
aaa
iret
inc
test
add
push
cwtl
ret
push
add
and
add
mov
pop
dec
mov
ja
jbe
cwtl
fwait
call
bound
mov
lods
xor
insl
decb
lods
in
dec
cmp
jno
rcll
mov
outsl
jo
mov
jb
mov
mov
add
adc
mov
sbb
xor
add
or
fwait
lods
fs
lea
mov
mov
cli
mov
mov
sbb
arpl
and
mov
add
loop
mov
mov
mov
add
adc
mov
int3
push
mov
jo
mov
xor
mov
fnsave
mov
mov
in
push
push
mov
call
mov
add
ret
daa
cld
fwait
test
out
adc
add
jge
push
cmp
pushf
xor
add
push
cmp
add
push
jp
xor
xchg
movsb
add
xlat
fimull
mov
nop
add
sbb
clc
imul
ds
cmp
inc
lret
sub
push
add
das
cmpsb
nop
add
arpl
outsb
addb
rolb
mov
add
mov
dec
push
pop
gs
jbe
out
xadd
add
fbld
mull
test
sbb
mov
movsb
sub
dec
loopne
mov
lea
xor
mov
jne
add
mov
pop
int3
mov
mov
add
pop
mov
loopne
mov
loop
mov
add
cmp
add
push
add
mov
ja
mov
cld
or
loop
mov
mov
std
lods
cmc
fistl
test
mov
stc
loopne
mov
jns
pop
jmp
jo
mov
add
shrl
add
pusha
add
out
add
xor
xor
mov
fstpt
dec
scas
mov
cltd
xor
cs
push
insb
sbb
in
scas
xor
fnsave
mov
jecxz
lods
jb
mov
mov
add
mov
gs
inc
daa
and
mov
mov
jmp
shll
data16
cld
mov
or
negl
dec
outsb
int3
mov
mov
inc
add
mov
cmp
iret
or
mov
cmpsb
xchg
add
lcall
inc
stc
mov
add
repnz
mov
add
jne
stc
mov
sub
inc
adc
mov
push
inc
adc
imul
into
sbb
pop
hlt
inc
push
add
mov
call
add
addb
jle
pop
mov
les
sub
mov
push
pusha
add
jbe
incb
movsl
or
pusha
add
aas
movsl
inc
add
jno
dec
movsl
test
xchg
dec
pop
jae
xlat
jg
sti
mov
lea
mov
jmp
push
mov
bound
mov
fs
popa
dec
addb
leave
loope
clc
ss
jl
loopne
mov
adc
mov
add
dec
jmp
and
add
js
add
inc
push
mov
pop
in
add
add
mov
popf
or
out
bound
mov
movsl
mov
pop
pop
xchg
bound
mov
lret
push
add
iret
jp
rolb
mov
cmp
test
inc
and
inc
add
jmp
imul
addr16
xlat
bound
mov
add
mov
push
cwtl
es
sarl
negb
js
add
dec
in
or
jne
leave
leave
jge
jp
pop
nop
add
movsl
jae
test
stc
data16
ret
scas
pop
inc
ljmp
mov
ljmp
mov
push
pushf
jb
mov
pop
popl
icebp
add
mov
clc
test
stos
pushf
pop
mov
inc
stos
out
aad
xor
inc
adc
into
fs
rolb
mov
sub
cmc
cmpsb
jle
aaa
nop/reserved
cmpsl
ret
data16
mov
or
mov
fwait
sub
or
lds
add
xor
mov
jl
dec
aam
in
mov
jne
add
ljmp
loop
mov
add
fstps
sbb
sbb
mov
or
idivb
push
stos
int
xchg
add
mov
lcall
add
jbe
aad
adc
add
sub
stc
test
xchg
pushf
and
dec
gs
out
mov
dec
dec
test
ja
je,pt
xor
mov
loop
mov
mov
sbb
mov
mov
xchg
mov
mov
fsubp
add
es
jae
ds
sbb
mov
mov
adcl
outsb
mov
sub
push
fsubs
pushf
test
jmp
subps
sub
jno
xor
mov
add
enter
push
in
in
jne
jns
dec
jno
add
ja
sub
inc
jmp
xchg
add
lods
cmpsl
out
inc
test
mov
mov
mov
add
add
xor
add
in
sub
push
outsl
lcall
push
mov
cld
adc
in
cmp
inc
into
testb
push
in
dec
pop
xchg
daa
ss
int3
or
lods
xchg
cmpsl
xor
mov
sbb
int
dec
and
fists
addr16
sub
push
add
dec
lods
cwtl
pop
xor
xchg
not
inc
add
add
xor
mov
inc
in
add
inc
add
notl
mov
sti
push
add
add
repnz
add
enter
add
adc
jmp
mov
add
mov
cwtl
xchg
lret
adc
mov
mov
sarl
je
cmc
mov
add
xchg
add
jecxz
pop
xor
mov
add
push
add
cmp
shrl
sahf
cmp
add
sbb
loope
mov
mov
mov
inc
lahf
in
jnp
add
in
pop
push
xchg
bound
mov
cli
fimull
cmp
int
test
mov
cmp
pop
int
inc
sbb
clc
cmp
push
cltd
jp
xchg
xor
mov
jno
inc
aad
dec
mov
mov
jns
add
push
addr16
fisttpll
mov
add
ret
hlt
and
mov
add
push
push
and
mov
push
lret
add
or
loope
add
add
cmp
mov
add
movl
scas
insb
xchg
repz
popa
clc
mov
add
push
out
dec
clc
push
add
icebp
mov
mov
add
mov
pop
mov
mov
inc
mov
pop
push
es
xor
mov
in
jno
int
lds
sub
push
push
xor
mov
mov
mov
mov
add
sbb
add
mov
test
add
adc
push
sub
dec
outsl
and
rolb
mov
and
mov
mov
add
xchg
out
add
fldt
mov
push
and
sbb
sbb
jmp
mov
in
mov
push
test
sbb
in
fsubrs
mov
sbb
dec
fdivs
mov
cmp
cwtl
mov
hlt
mov
add
mov
push
jp
mov
add
mov
dec
lea
pushf
sbb
repnz
loopne
mov
shll
cmp
add
mov
daa
addb
dec
or
pusha
add
push
add
inc
lds
add
pop
xchg
repnz
mov
pop
dec
lcall
mov
add
ja
in
ja
xor
jo
mov
aad
add
push
push
into
rolb
mov
inc
add
sti
lret
insb
pushf
pop
decb
add
mov
pushf
dec
pusha
add
icebp
adc
mov
add
push
inc
idivb
xchg
enterw
mov
jl
aam
dec
xor
mov
in
xor
or
frstor
inc
sub
lock
out
adc
pop
cmp
and
insb
xchg
pop
in
dec
mov
dec
les
scas
mov
repnz
cld
sub
fdivs
add
mov
cmpsl
icebp
inc
add
dec
test
addb
jle
add
add
mov
push
xor
mov
add
ljmp
jno
and
mov
adc
mov
cwtl
dec
push
in
pop
out
pop
dec
mov
push
add
add
std
pop
out
add
rolb
jo
mov
sbb
sbb
add
add
xchg
lods
add
add
iret
xor
adc
add
mov
push
or
ficoml
add
pop
jp
leave
cmpsb
lods
inc
add
jbe
sbbl
sti
sub
movsb
cmp
mov
add
mov
pop
out
int
dec
repz
sbb
xor
add
je
xchg
dec
xchg
mov
mov
add
ret
outsl
dec
push
addr16
add
add
mov
mov
and
inc
jne
sahf
gs
loop
mov
mov
pop
push
dec
je
arpl
mov
add
ljmp
mov
dec
scas
aas
pop
jns
cmc
inc
add
add
mull
lds
faddl
add
js
jno
mov
cmpsb
mov
sbb
mov
mov
int3
popf
lahf
hlt
lods
sbb
testl
mov
aaa
and
mov
jmp
in
mov
add
or
rorl
insl
aaa
or
jp
jno
in
and
add
add
std
jne
subl
jbe
add
xor
mov
js
pusha
add
mov
sub
push
jge
push
lret
ds
mov
dec
ret
pop
iret
mov
mov
sahf
ja
lea
cmpsl
cmpsb
ret
lahf
ljmp
fsubs
mov
andl
sti
fidivrs
add
mov
addb
syscall
das
lret
mov
test
loope
push
add
test
pop
idivl
pop
jb
mov
cmp
add
cmp
add
jg
ja
jl
add
push
js
inc
add
mov
xor
inc
inc
and
enter
mov
add
into
popa
cmp
fstpt
in
pop
js
add
or
data16
ss
dec
ficoml
xchg
cmp
movsl
mov
mov
mov
push
pop
or
int3
cltd
fs
mov
jmp
lcall
ljmp
js
jle
ret
and
mov
jmp
dec
aam
cmp
cmpsb
aam
iret
mov
pop
scas
imul
mov
add
pop
int
clc
aad
mov
dec
mov
in
or
notb
mov
sbb
mov
mov
cmp
out
mov
mov
pop
sbb
adc
xor
mov
add
add
add
mov
cmp
fcomps
fwait
fwait
inc
movsl
xchg
xchg
pop
mov
add
sbb
add
sub
cli
fsubr
push
insb
xor
dec
decl
ljmp
test
jb
mov
mov
sub
or
add
mov
adc
mov
lock
ficoms
sub
in
push
test
push
lret
xlat
fwait
mov
out
scas
adc
mov
mov
hlt
test
add
push
test
mov
addb
sbb
movsb
out
aam
out
pushf
fisubrs
add
sbb
and
testl
push
mov
fldl
mov
insl
inc
xchg
add
or
pop
dec
aam
add
aad
std
in
dec
bound
mov
jnp
mov
or
cmp
add
cmp
mov
les
inc
pop
aas
daa
lret
pop
jnp
lret
add
je
flds
add
jl
and
sbb
cld
data16
jp
add
pop
inc
add
cld
cmc
jnp
xchg
inc
add
add
cmp
sarl
addb
in
mov
and
jb
mov
cmc
mov
jp
inc
ss
cmp
cltd
cwtl
insl
jle
ret
fiadds
or
stos
call
mov
add
xlat
adc
mov
mov
push
and
in
popl
mov
cmp
push
sub
add
mov
add
sub
cld
ja
sahf
aas
leave
gs
cmpsb
mov
gs
cltd
loop
mov
lea
jmp
xor
add
jo
mov
jb
mov
data16
mov
setnp
ret
mov
fsubs
aaa
xchg
addb
or
mov
jg
pop
movsb
sub
inc
cli
in
mov
lods
adc
and
mov
or
push
movsb
clc
fsub
add
mov
sti
push
pop
push
add
mov
add
adc
lahf
outsl
loop
mov
addb
mov
mov
int3
insb
jecxz
cmc
lret
test
repnz
int
jecxz
data16
add
adc
mov
add
sbb
call
jo
mov
ficomps
pop
in
stos
dec
sub
cmp
adc
stos
daa
divps
mov
add
lds
add
pop
test
pusha
add
add
fbld
fsubrs
mov
ja
add
add
push
fcoml
cwtl
loopne
mov
sbb
mov
lock
xchg
add
in
addb
xchg
adc
pop
leave
rolb
mov
mov
out
outsl
call
add
add
mov
rolb
mov
les
xchg
daa
fcmove
idiv
jne
out
add
mov
out
pop
cmc
out
add
add
mov
mov
aad
mov
add
mov
add
xchg
mov
mov
lret
cmp
mov
add
inc
jno
xchg
jno
sub
dec
divl
add
push
add
pusha
add
or
mov
hlt
aaa
roll
mov
rolb
mov
scas
ret
inc
es
add
and
cmp
addr16
add
inc
jmp
imul
add
add
inc
addb
js
add
push
inc
mov
add
add
out
leave
sub
add
je
pop
xchg
and
add
or
data16
in
add
aad
in
punpckhbw
inc
adc
aad
add
and
mov
add
fst
fmuls
xchg
dec
and
lahf
sub
out
and
xchg
mov
rorl
xor
and
add
lret
popa
pop
mov
add
das
addr16
les
stos
les
movsl
add
push
xchg
mov
faddl
push
add
mov
push
add
int
mov
hlt
push
add
sub
test
mov
push
cwtl
pop
adc
int3
mov
mov
xchg
popa
mov
mov
mov
imul
add
jno
jl
pop
sbb
inc
mov
inc
mov
mov
pop
add
add
inc
xchg
mov
xchg
lods
pop
or
mov
cmovb
mov
xchg
mov
ret
mov
push
int3
sahf
sub
pop
movsb
test
lea
push
add
movl
mov
mov
jns
pop
repz
cld
mov
mov
rcl
sub
pop
outsb
cmpsl
loopne
mov
lock
jae
popf
mov
add
jne
imul
jnp
xlat
lea
add
adc
add
add
jno
mov
sarl
inc
add
mov
add
int3
cld
rolb
mov
xchg
out
inc
ljmp
xchg
test
outsl
mov
sub
push
inc
call
in
clc
xor
mov
or
add
stos
push
jno
inc
add
daa
adc
cwtl
addl
mov
fwait
movq
stc
das
sbb
inc
insb
stos
mov
pop
cmp
pushf
adc
mov
es
xchg
and
pop
mov
sub
add
hlt
fstps
fimull
add
mov
add
lcall
sbb
sbb
mov
add
cmpsb
sub
dec
push
add
mov
lods
test
bound
mov
popf
fbld
add
push
mov
imul
xor
ret
jbe
std
test
addr16
mov
mov
push
push
or
jle
scas
lahf
push
bound
mov
push
dec
fists
xchg
mov
dec
xchg
insb
sbb
gs
dec
pop
addb
movsb
ja
push
mov
jno
pop
mov
push
lds
add
adc
fisubrl
fdivs
mov
pop
mov
mov
mov
add
rolb
fs
neg
dec
movsl
sub
in
add
fidivs
sbb
adc
mov
xchg
stc
inc
push
jl
add
xor
and
mov
out
jbe
add
mov
pushf
mov
scas
scas
lret
mov
mov
add
mov
idivb
xor
mov
mov
lret
out
dec
add
xchg
sub
add
push
cmp
add
pusha
add
add
sahf
rolb
mov
mov
test
mov
or
fsubr
jge
mov
mov
das
xchg
add
mov
add
add
mov
add
mov
adc
lcall
dec
adc
cs
sbb
jne
loop
mov
push
adc
xchg
add
nop
add
lea
mov
hlt
xchg
add
add
mov
jne
pop
cmpl
mov
add
and
mov
jns
js
add
or
outsl
jmp
rolb
mov
mov
jno
out
dec
inc
xchg
inc
pop
push
enter
add
add
ficomps
inc
add
mov
sbb
and
pop
pop
xchg
test
xor
mov
mov
lret
xchg
addr16
arpl
add
mov
mov
jbe
or
push
push
dec
vpandn
add
add
aas
jae
ss
das
and
add
clc
imul
jg
rol
mov
mov
or
cltd
adc
jecxz
adc
mov
insl
xchg
xchg
in
and
mov
jg
rol
rorl
mov
shrl
pop
or
cld
test
mov
add
add
scas
sub
cmpsl
ljmp
clc
push
add
push
add
mov
arpl
pop
jne
mov
add
or
sub
add
pop
sbb
out
add
je
sbb
add
notb
add
jno
sub
adc
mov
add
mov
cld
andl
xlat
loope
add
add
or
push
jne
xor
jecxz
mov
add
pop
mov
movsb
cli
addb
xor
mov
mov
mov
or
adc
add
inc
test
and
push
ret
lods
pop
jo
mov
fldcw
jbe
add
mov
leave
mov
sub
in
xor
xlat
sub
loope
arpl
adc
in
js
jns
adc
xchg
push
fildll
jno
push
and
fsubp
dec
push
add
mov
inc
add
loopne
mov
rolb
inc
add
movsb
xchg
clc
dec
js
jle
dec
orl
mov
xchg
dec
xchg
add
iret
loopne
mov
pop
pushf
mov
pop
push
add
add
mov
fsubl
in
movsl
aaa
daa
push
inc
movl
mov
jl
iret
mov
mov
call
xchg
and
mov
cmpsb
push
loope
add
xor
mov
stc
mov
sub
xlat
popl
add
inc
or
push
imul
das
sti
enter
mov
fidivrl
hlt
imul
cmp
pop
pop
add
or
cmpsb
repnz
pop
xchg
sub
xor
mov
mov
jp
dec
ja
mov
push
decb
fldt
sub
jnp
sbb
add
add
addr16
mov
push
xor
in
aas
cmpsl
mov
pop
outsl
sbbl
mov
pop
pop
jle
iret
ljmp
insl
sbb
stc
xchg
daa
roll
xchg
xchg
mov
out
sub
addb
sub
mov
data16
add
sbbl
adc
fistl
jge
add
mov
mov
int3
fisubrl
add
xchg
mov
sbb
lret
dec
sbb
mov
mov
test
add
loope
aam
lret
adc
mov
or
xchg
pop
adc
mov
idivb
adc
imul
cmc
incl
add
add
and
mov
lahf
idivb
push
jg
insb
mov
add
mov
stc
xlat
aas
xchg
add
add
pop
cmp
jmp
add
mov
mov
dec
cmp
add
mov
cltd
adc
mov
xchg
add
add
outsl
in
cs
push
sbb
js
push
insb
cld
sub
push
xchg
add
ja
mov
pop
lods
repnz
int
pop
sbb
sub
sbb
loopne
mov
fcoml
aas
nop
add
outsl
xor
mov
cltd
in
outsl
iret
cmc
mov
jge
fsub
sti
data16
mov
mov
mov
add
cmp
xchg
fcmovu
mov
dec
hlt
in
int3
pop
cmc
cld
pop
lret
lock
sar
xor
xchg
jg
mov
mov
loop
mov
add
rolb
mov
aaa
in
in
shll
mov
add
mov
in
and
mov
sbb
js
add
movsl
add
mov
call
or
call
bound
mov
lcall
scas
inc
jg
push
bound
mov
sbb
add
loope
test
inc
mov
add
sub
pop
dec
cmpsb
inc
add
mov
pop
cmp
pop
sbb
and
mov
and
adc
mov
dec
lds
lods
es
ret
jl
shl
mov
jl
add
push
or
or
pop
adc
das
inc
sbb
mov
idivl
arpl
into
pushf
movsb
das
add
pop
aas
and
mov
in
push
sti
fsub
add
xor
sbbl
lods
jne
fdivrp
inc
scas
pop
add
std
push
push
mov
mov
cmp
inc
add
mov
lods
icebp
cmp
add
jp
sbb
mov
jecxz
and
ss
xchg
addb
jnp
mov
inc
test
test
stc
inc
add
mov
sub
stos
adc
mov
cmp
rolb
mov
xor
cmpsb
into
mov
lods
cmp
addr16
lret
add
add
lahf
jge
lock
rolb
jbe
sbb
popa
jne
or
sbb
inc
imul
aas
adc
int3
in
add
adc
in
ljmp
lock
xchg
lock
pop
rolb
mov
insl
dec
lea
int
cmc
push
int
movsl
and
je
jae
jne
mov
mov
cli
pop
push
cmp
mov
in
sub
xor
mov
and
iret
mov
mov
mov
dec
jbe
adc
mov
xchg
add
xchg
movsl
ss
pop
mov
jae
add
dec
sbb
jb
mov
add
add
push
adc
repnz
add
and
in
sbb
stos
and
add
movl
add
add
ljmp
sbb
add
sub
mov
sar
js
out
insb
dec
jge
xchg
test
and
mov
add
addb
inc
add
das
test
cmp
add
scas
daa
add
mov
or
add
int
xchg
add
repz
jo
mov
fmull
popa
or
dec
fcmovnbe
imul
enter
push
fucom
in
add
out
pop
subl
push
add
xor
mov
add
push
pop
hlt
pop
fidivl
mov
dec
dec
bound
mov
call
push
pop
pop
inc
lods
addr16
jg
add
inc
add
lahf
and
mov
jecxz
out
xor
cmp
sbb
dec
cmpsb
and
mov
jno
mov
cmp
fmull
icebp
xchg
popf
ficoml
add
mov
add
push
or
add
jo
mov
add
dec
lods
out
mov
xor
push
add
mov
mov
shl
lock
xor
mov
xchg
fnstsw
imul
into
push
xor
mov
pop
and
mov
add
jmp
aas
rolb
mov
imul
sub
rolb
mov
and
mov
add
or
add
leave
or
int3
sub
mov
cmp
push
lret
xchg
add
adc
mov
loopne
mov
add
cltd
or
cmpsl
push
cmp
xor
add
aaa
jnp
imul
mov
mov
pushf
enter
ret
mov
ret
mov
inc
add
mov
loop
mov
imul
fidivrs
push
add
pop
out
ja
lods
cld
sub
dec
test
fs
add
faddp
add
dec
imul
jo
mov
adc
xchg
dec
repnz
cmpsb
and
xor
cmpsb
xchg
movb
xrelease
mov
mov
add
mov
adc
mov
out
es
mov
xchg
xchg
ds
outsb
fldt
les
push
cli
dec
add
mov
cmp
push
mov
pop
adc
in
add
clc
and
mov
sub
mov
mov
mov
and
sbb
sbb
das
lock
loop
mov
jb
mov
clc
out
fcompl
xor
push
hlt
mov
xor
mov
add
mov
lods
insb
xor
stos
mov
mov
jmp
push
or
iret
ret
call
pop
cmp
xor
aad
add
mov
daa
fsincos
xlat
xor
or
cmc
adc
mov
xor
sbb
cmp
adc
mov
mov
cli
jge
xor
mov
mov
pusha
add
sbb
or
add
add
in
and
mov
ret
lods
lds
mov
jns
mov
mov
cltd
scas
shrl
ljmp
lret
adc
lahf
arpl
cmp
jne
bound
mov
add
daa
pop
add
mov
add
or
int3
mov
add
xorl
lret
cmc
stos
mov
mov
add
repz
sbb
pop
jg
add
aas
mov
add
push
cmp
push
add
aaa
cmp
xchg
aaa
in
out
ja
add
mov
scas
outsl
scas
sbb
sub
mov
add
pop
std
sub
fdiv
add
stc
decb
stos
jge
inc
add
or
stos
rolb
mov
enter
sub
pop
sub
mov
and
push
dec
scas
jne
dec
pop
fimull
sbb
int
add
ret
jecxz
xor
jnp
xor
mov
add
adc
xchg
add
mov
inc
push
add
insb
sbb
mov
mov
add
mov
xor
add
pop
ret
jg
loope
cs
add
insl
or
push
in
add
pushf
cmc
jp
mov
lea
inc
mov
call
mov
jecxz
add
dec
outsb
cli
pusha
add
mov
mov
mov
mov
push
and
add
xchg
in
inc
mov
sbb
cwtl
sti
push
add
cmpsb
adc
mov
rolb
test
xchg
mov
int3
repz
push
mov
xor
mov
mov
fwait
dec
fsubrl
cmc
out
mov
mov
mov
add
inc
mov
push
add
ret
fbstp
add
hlt
inc
hlt
xchg
mov
and
mov
jnp
lret
ljmp
jl
mov
inc
jnp
imul
test
test
add
mov
cmpsb
jnp
out
add
dec
imul
mov
jae
mov
cmc
pushf
dec
pop
push
adc
xchg
outsb
test
sub
scas
cmc
stc
adc
mov
add
test
jmp
insl
pop
sarl
cs
inc
add
sahf
aas
rolb
mov
xchg
add
insl
fisttpll
add
add
mov
mov
aas
sbb
add
mov
mov
adcl
add
lcall
stc
jmp
ljmp
cmc
mov
test
add
jo
mov
out
shl
add
call
add
mov
mov
sub
and
mov
inc
pop
cmpsl
icebp
cwtl
lcall
jecxz
popa
pop
scas
sbb
xor
xlat
push
and
dec
mov
js
test
jnp
imul
ficoms
mov
lock
adc
cmp
in
add
cwtl
ss
add
popa
cld
dec
jns
xchg
push
add
mov
scas
pop
imul
push
daa
addr16
out
xchg
mov
mov
xchg
add
and
mov
add
dec
cld
dec
clc
sub
add
test
fs
fimull
mov
test
stc
sbb
add
and
ds
xor
inc
add
mov
fsubp
add
mov
adc
cmp
inc
in
notl
bound
mov
add
pop
mov
mov
sub
jns
push
ror
test
test
add
test
add
inc
rolb
inc
add
lds
jl
adc
mov
jl
sub
sbb
inc
and
mov
mov
js
xchg
add
fisubl
adc
jmp
dec
mov
lock
test
pop
int
pop
repnz
call
mov
loop
mov
ss
and
pushf
mov
push
leave
lcall
cltd
or
lret
fdivs
pop
pop
mov
add
bound
mov
adc
mov
push
arpl
and
sub
inc
rolb
sti
adc
in
pusha
add
add
int
mov
dec
call
add
dec
data16
xor
cmp
stos
sub
cli
pop
dec
add
mov
push
js
push
outsl
pop
rolb
mov
pop
ljmp
pop
xor
cmpsl
jbe
leave
cmp
stos
mov
aas
cmp
cmp
cli
inc
sub
dec
stos
jns
addr16
mov
les
or
adc
cmp
mov
ja
cmpsb
cs
mov
leave
mov
jp
pop
and
add
mov
ja
outsl
adc
mov
divb
cmp
inc
add
lock
lea
push
sbb
mov
mov
xor
jmp
mov
seto
mov
dec
xchg
mov
dec
into
xchg
insb
cld
frstor
and
popf
out
rdpmc
fstpt
add
add
popa
inc
add
add
movsl
cli
iret
out
mov
mov
add
fcoms
repnz
mov
lret
mov
xor
mov
shll
lcall
ja
pop
mov
inc
add
add
cmp
ss
push
sub
pop
rcll
fwait
xor
cli
imul
add
adc
mov
mov
mov
dec
and
mov
mov
loopne
mov
outsl
push
mov
adcl
dec
jno
cmp
mov
pop
lods
sbb
adc
mov
mov
lods
cmp
add
mov
hlt
outsb
pop
ret
xchg
push
ljmp
cmc
xor
flds
mov
rolb
mov
insl
push
mov
add
mov
sub
or
cld
je
add
pop
inc
movsl
mov
cmp
mov
cmp
pop
call
int3
dec
rcr
pop
cmp
xchg
in
lea
mov
cwtl
cltd
pop
or
sbb
arpl
repz
lret
pop
xchg
sbb
js
adc
sahf
xor
mov
mov
mov
push
cmp
add
jmp
add
sub
in
arpl
xchg
add
stos
insb
lods
add
mov
xchg
fistpll
insl
mov
inc
cmp
rolb
mov
jg
or
add
jns
or
sub
dec
cmp
cmc
outsl
mov
pop
mov
rolb
outsl
xor
jl
inc
push
int
push
add
inc
ret
cs
fnclex
add
mov
add
cmp
mov
jns
cmp
mov
mov
add
int
xchg
xor
les
popf
add
rolb
jecxz
test
push
add
mov
inc
add
movsb
jns
or
mov
test
or
add
daa
pop
imul
icebp
pop
add
xchg
push
or
cmpsl
mov
loopne
mov
add
mov
scas
addb
insb
lds
jb
mov
dec
push
mov
iret
gs
ret
popf
bound
mov
into
ja
add
mov
push
add
dec
xchg
roll
mov
cld
mov
daa
xor
mov
dec
out
push
add
mov
ja
cltd
lret
fldt
inc
add
cmp
inc
add
and
addb
jp
add
sbbl
sbb
int
arpl
xor
mov
mov
mov
lahf
movsl
mov
mov
sbb
ret
stos
rolb
insl
popf
addb
mov
add
adc
mov
mov
jg
add
popa
loopne
mov
mov
push
and
cmp
int
cli
pop
sbb
mov
xor
imul
add
out
push
xchg
mov
loop
mov
add
mov
roll
add
insb
in
add
stos
addb
inc
aas
sbb
mov
inc
mov
jbe
add
cmp
movsl
lret
lock
mov
add
add
bound
mov
ret
mov
mov
call
add
rolb
mov
mov
fs
sbb
add
sbb
sbb
add
pop
daa
push
adc
mov
push
add
test
roll
pop
inc
loope
add
xor
xor
sti
push
movsb
jb
mov
iret
bound
mov
aam
fprem1
xlat
enter
add
cmp
mov
dec
nop
add
addb
adc
sbb
pop
mov
inc
in
sub
pop
cltd
mov
jns
sub
int
inc
add
inc
stos
lods
mov
fdivs
adc
mov
mov
xchg
outsl
cltd
out
mov
cmp
push
xor
xchg
dec
lods
mov
pusha
add
ds
es
pop
repnz
ret
push
jl
xchg
bound
mov
sbb
mov
cwtl
rolb
mov
mov
mov
mov
incl
sub
iret
cmpsb
decb
psubsw
lret
loop
mov
add
insl
filds
mov
push
add
sbb
pop
push
add
mov
add
icebp
pop
mov
pop
ds
xlat
sub
mov
or
sub
outsb
ja
or
push
jecxz
add
xchg
out
sub
jecxz
bound
mov
and
mov
add
push
lds
add
scas
and
repz
jl
mov
insl
std
rcrl
jae
jne
fs
pop
rolb
jb
mov
push
xchg
mov
and
mov
xchg
sub
sub
push
add
outsl
and
fldt
add
lods
or
scas
add
add
add
rolb
mov
mov
xchg
stc
cmp
stos
std
xor
mov
mov
mov
push
aam
or
ja
jl
jnp
rcl
add
out
leave
mov
aam
add
mov
mov
xchg
inc
add
jns
mov
mov
adc
jno
adc
mov
cmc
push
stos
lret
ret
pop
adc
mov
mov
sbbl
mov
out
mov
ds
aaa
fwait
loope
bound
mov
push
shl
std
inc
insl
inc
sahf
mov
mov
add
sub
add
xchg
iret
and
mov
jnp
es
pop
aad
add
jmp
xchg
xchg
mov
cs
add
or
nop
add
scas
push
add
mov
add
mov
cmpsb
fdivrs
out
pop
repz
push
mov
jae
push
lcall
ret
mov
add
jo
mov
mov
add
cmpsl
mov
push
jns
popa
cli
adc
mov
ret
shrl
int3
xchg
pmuludq
push
fs
rolb
mov
add
xchg
sub
jp
and
aad
xor
loope
sbb
lahf
lock
and
inc
add
pop
sub
and
mov
clc
sub
inc
add
sub
repz
mov
lock
push
stc
jnp
add
mov
mov
sbb
mov
pop
scas
cli
dec
jno
les
mov
mov
orl
mull
sbb
sbb
add
mov
xor
mov
lcall
adc
add
inc
dec
xor
mov
add
mov
dec
loop
mov
dec
jns
sti
sub
test
mov
inc
add
mov
bound
mov
int
mov
mov
jne
aam
mov
add
xchg
sub
inc
add
lahf
in
pop
fidivrl
insb
nop
add
add
dec
mov
add
sbb
inc
mov
push
add
inc
scas
fs
mov
add
lahf
sbbl
pop
mov
mov
xor
jnp
pop
rcll
pushf
jbe
ja
mov
jle
fisubrl
pop
imul
movsb
movups
mov
mov
scas
daa
xor
mov
push
pop
bound
mov
mov
fs
mov
call
add
add
call
and
mov
sub
js
pause
add
sub
jecxz
ja
in
pop
mov
push
add
and
adc
cmp
xlat
dec
aad
xor
mov
scas
in
xor
add
test
fs
lods
jne
inc
or
xor
mov
add
xchg
popf
or
add
fwait
or
mov
cltd
xchg
loope
add
ds
pop
outsb
insb
rol
add
mov
add
mov
fimull
in
push
add
add
cmp
jle
add
pop
lods
addr16
aam
mov
mov
cmpsb
fstpl
hlt
fbld
add
mov
aas
mov
fnstsw
insl
aas
dec
adc
cli
ds
into
jle
call
aas
pop
push
stos
xchg
inc
sub
jmp
packsswb
arpl
add
mov
add
sbb
in
insb
push
addl
add
pop
inc
add
out
xchg
sub
sbb
add
mov
mov
popa
push
js
jb
mov
inc
jnp
dec
aam
add
push
xor
mov
repz
lcall
clc
lcall
adc
mov
lahf
iret
loop
mov
add
lahf
jmp
dec
mov
mov
addr16
repnz
movsl
dec
scas
mov
add
out
sbb
cmpsb
and
add
mov
add
mov
mov
mov
add
fdivl
mov
iret
test
or
mov
pop
lret
add
fcompl
aaa
xchg
andl
popa
or
push
xchg
add
mov
mov
adc
mov
outsl
mov
mov
sbb
mov
and
mov
push
cli
add
insl
lret
sti
out
scas
push
call
add
lock
xchg
cwtl
cld
aas
outsb
mov
xchg
add
mov
or
cmp
arpl
mov
pushf
cs
mov
fcmovnb
mov
add
addr16
ret
sbb
and
notb
das
data16
push
sbb
das
ret
fwait
stc
fstps
adc
add
jne
mov
mov
inc
add
test
mov
add
push
add
add
rolb
mov
repz
mov
inc
lods
sub
mov
int3
adc
mov
dec
mov
add
or
pop
cmpsl
xchg
inc
dec
in
add
das
lods
rcll
loope
or
iret
leave
add
add
add
lods
xchg
push
pop
adc
mov
sbb
loop
mov
sti
pop
repnz
rolb
mov
add
mov
adc
mov
in
fs
addr16
pop
push
add
mov
out
mov
lea
jb
mov
cwtl
xchg
cmpsl
hlt
stc
cltd
pop
dec
notb
xor
mov
add
mull
ja
add
mov
sub
jbe
add
incl
jns
cmp
pop
xchg
ret
jns
push
sub
push
stos
stos
xchg
imul
add
cmp
mov
iret
jle
mov
mov
add
adc
addb
ret
push
mov
jne
rolb
mov
inc
out
xlat
xchg
dec
jmp
mov
jmp
push
add
test
add
mov
mov
xor
mov
add
js
add
xchg
enter
lds
popf
shrl
xchg
sbb
xchg
in
nop
add
inc
add
add
sbb
subl
fstps
repz
das
test
push
inc
sbb
dec
imul
add
mov
jge
push
sarl
sub
dec
or
mov
data16
mov
and
test
add
mov
filds
test
pop
fistl
popa
icebp
je
outsl
sub
xchg
lret
xchg
add
lahf
mov
cmpsl
mov
add
orl
cmp
sub
jp
cs
test
addb
je
and
mov
into
xchg
add
adc
add
sub
ja
mov
and
test
add
jo
mov
cli
pusha
add
add
mov
popf
sub
pushf
jno
push
mov
mov
cmpsl
imulb
adc
aas
xor
mov
pop
imul
lahf
stos
ficompl
add
jne
jno
mov
in
adc
arpl
outsl
and
jns
xor
mov
and
dec
out
fcompl
mov
fwait
cmp
iret
push
rorl
lcall
test
movsl
insl
dec
fnstenv
mov
add
sbb
sub
sbb
mov
jecxz
les
cs
xchg
pusha
add
mov
add
or
xlat
pop
fs
frstor
cmp
add
push
add
cmp
in
imul
mov
incl
mov
dec
mov
bound
mov
stos
aad
push
mov
push
popf
cmp
test
sar
scas
xchg
adc
mov
adc
mov
inc
or
cs
mov
jno
push
add
lea
jmp
stos
mov
push
add
add
sahf
or
cwtl
stos
pop
fwait
pushf
fdivrs
aad
js
and
insl
inc
lods
scas
popa
xchg
add
testb
mov
mov
inc
xchg
rolb
dec
jbe
mov
ds
mov
scas
addb
loope
addb
pop
insl
pop
aaa
xchg
js
lret
gs
ret
cli
pop
lods
cmpl
dec
push
pop
fisubrs
jb
mov
sahf
test
nop
add
jae
inc
inc
jno
mov
mov
mov
pop
add
mov
mov
out
cs
fisttpl
add
push
icebp
mov
sbb
push
inc
mov
and
adc
movsb
push
addb
jae
jbe
sub
loope
xchg
add
mov
jge
in
mov
cmpsb
stc
pushf
movsb
aad
lds
xor
mov
adc
or
fwait
pop
inc
ds
lcall
cmc
mov
scas
in
jns
add
xchg
jb
mov
idivb
push
les
or
pop
sbb
popf
outsl
out
loopne
mov
sbb
fisubs
add
fsubrs
repnz
daa
jecxz
inc
mov
pop
cs
stc
sbb
mov
mov
xor
mov
je
push
adc
fs
add
add
lods
repz
adc
mov
pop
jbe
mov
pop
pop
rolb
mov
or
mov
addr16
cltd
cmp
adc
sub
push
mov
mull
add
mov
cmp
add
xor
repz
xor
add
mov
sub
aaa
loop
mov
xor
pop
xor
mov
add
adc
push
loope
ss
rolb
mov
add
sbb
jnp
icebp
mov
mov
jns
cltd
js
dec
xor
mov
je
cmp
inc
or
cmp
rolb
xchg
cmp
adc
push
in
sub
fmul
in
xchg
add
mov
mov
sbb
add
mov
sti
mov
add
out
cmp
push
int
push
hlt
mov
xchg
bound
mov
xor
add
mov
cmp
push
add
mov
xchg
add
add
out
mov
lret
add
jle
push
add
dec
dec
or
inc
repnz
cmc
lahf
push
mov
add
jns
test
insl
out
scas
insb
jge
add
sbb
jae
ljmp
add
mov
push
xchg
pop
mov
push
mov
mov
xlat
push
loope
add
push
sti
adc
arpl
data16
push
out
sub
ret
loope
lret
int
mov
add
insb
pop
and
mov
daa
movl
add
mov
cmp
addb
mov
mov
aaa
sbb
mov
add
clc
xchg
add
das
dec
test
add
push
lds
stos
inc
add
cwtl
loop
mov
push
scas
in
add
pop
xor
add
mov
in
xchg
rolb
mov
ja
dec
jp
cmpsl
lahf
pusha
add
fwait
jle
jne
sti
fmull
push
aas
lock
or
sub
stos
mov
and
mov
cmp
popa
pop
dec
roll
outsl
fildll
lock
gs
xstore-rng
cmpsl
add
mov
add
pop
lret
jecxz
out
fdivl
add
jp
in
mov
add
mov
outsl
dec
jmp
loop
mov
jbe
scas
in
imul
inc
push
add
xchg
mov
in
arpl
pop
adc
mov
lret
ret
cmpsl
push
add
sbb
add
mov
out
in
sub
out
sub
add
mulb
cmp
mov
mov
sarl
lock
or
push
mov
movsl
inc
popf
cmp
mov
mov
mov
scas
sub
in
and
add
mov
add
loopne
mov
out
mov
mov
cmpsb
dec
cmp
mov
mov
mov
add
jbe
cld
es
movsl
push
mov
lods
rolb
mov
movsl
push
fs
xchg
add
xor
pusha
add
xor
dec
popa
dec
jne
add
je
cltd
lahf
js
addr16
mov
sbb
mov
mov
jge
sbb
popa
mov
sahf
out
mov
mov
pop
bound
mov
cmc
nop
add
ud0
or
aaa
cwtl
cmp
add
push
push
int
test
add
lock
push
add
lret
and
pop
add
mov
cli
jnp
outsl
mov
into
daa
mov
xchg
outsl
int3
mov
cmp
add
js
sbb
imul
daa
mov
dec
enter
cltd
jns
repnz
roll
pop
lret
test
cmp
adc
add
add
inc
shll
add
sti
xor
mov
xchg
insl
fildll
mov
or
rolb
outsl
add
and
mov
adc
xchg
add
dec
sub
int
icebp
mov
pop
mov
and
out
mov
pushf
lcall
xchg
pop
add
mov
push
add
sub
ss
fidivrs
mov
mov
leave
rolb
mov
rolb
mov
mov
mov
pop
js
stc
add
mov
add
mov
xlat
addr16
mov
iret
test
lret
jo
mov
imul
add
jbe
sti
rolb
mov
leave
xchg
mov
xor
rolb
xchg
cmp
inc
out
cmp
rolb
or
mov
pop
adc
mov
add
popf
in
scas
hlt
pusha
add
or
lret
add
aaa
mov
jle
lods
or
pop
mov
sub
jecxz
and
mov
fwait
pop
test
repz
add
mov
add
push
xchg
mov
cmpsl
std
push
lcall
sbb
addb
or
sub
add
lahf
lods
cs
dec
int
fwait
or
rdpmc
mov
add
mov
add
gs
mov
mov
add
add
add
call
mov
dec
stc
xor
adc
mov
scas
ja
and
mov
mov
push
movb
xor
add
data16
mul
test
mov
add
sahf
addb
sub
add
push
hlt
movsb
sub
mov
pop
mov
add
addb
cltd
mov
scas
fnsave
xchg
add
xor
mov
rcr
dec
xchg
mov
mov
sti
lret
inc
inc
jae
add
into
jnp
push
pop
sub
sbb
mov
mov
add
and
pop
ja
lret
inc
add
mov
lret
imul
in
add
mov
lods
sbb
rolb
mov
out
mov
loope
jge
cmpsl
daa
mov
dec
daa
arpl
push
mov
outsl
mov
dec
leave
jp
xchg
adc
mov
push
pop
xchg
sbb
lods
aas
cwtl
test
mov
and
mov
mov
push
bound
mov
push
add
sub
xor
fstps
fildl
mov
mov
jno
xchg
inc
icebp
xchg
sub
dec
insb
push
in
roll
jo
mov
add
rolb
mov
add
mov
enter
cmp
adc
cmpsb
push
or
lcall
add
das
mov
push
push
mov
mov
into
mov
xor
std
add
dec
fidivrs
push
add
mov
add
fwait
pop
scas
in
cs
add
add
outsl
and
and
popf
stc
adc
mov
add
jb
mov
cs
fwait
inc
test
loop
mov
sub
add
adc
loope
addb
lock
test
fadds
pop
jnp
add
pop
jecxz
adc
push
sub
push
jne
out
mov
sbb
add
inc
ss
shll
xor
lods
sahf
in
repnz
add
in
rol
mov
enter
int
rolb
mov
and
movsl
cmp
outsl
adc
cli
or
stos
cmc
sub
sbb
add
add
into
jl
lock
sub
mov
mov
add
mov
add
sbb
aam
add
pop
mov
cmp
mov
shll
push
insl
mov
inc
add
sbb
add
add
insb
or
dec
add
aas
lods
in
adc
mov
add
cmp
xlat
jnp
add
add
add
out
jae
add
in
cmp
test
int
gs
rol
cmpsb
ss
add
das
stc
fsts
movsl
arpl
mov
mov
ja
add
add
mov
cmp
push
xchg
add
add
shll
icebp
sub
mov
mov
lcall
mov
lcall
add
ss
inc
add
add
jle
sub
sub
add
add
mov
jmp
imul
add
and
leave
sbb
iret
testb
mov
xor
ljmp
mov
xor
mov
push
or
push
xchg
mov
jnp
mov
call
rcrl
pop
pmaxub
push
pop
cmp
xlat
popf
dec
pop
in
add
and
add
or
push
xlat
inc
mov
mov
notl
hlt
shrl
insb
xor
xchg
xchg
cmpsl
leave
stos
dec
mov
into
jecxz
inc
add
pop
fstps
and
int3
iret
std
lods
ds
std
data16
dec
xchg
mov
pop
dec
repz
mov
jo
mov
add
sbb
add
push
add
mov
xchg
add
xchg
adc
lret
mov
add
cmp
je
pushf
xor
mov
lahf
jne
jmp
jns
cmp
repz
add
mov
mov
add
cltd
insb
les
xchg
aam
push
sbb
lods
rcrl
pop
incb
outsb
pop
add
mov
ret
jmp
xchg
aad
sub
xchg
lcall
ret
das
inc
add
scas
jl
test
adc
add
mov
xchg
mov
or
int3
loope
ret
mov
addb
pushf
fwait
xchg
xchg
fimuls
push
mov
inc
mov
jecxz
int
popf
int3
divl
add
or
roll
lret
jb
mov
lret
dec
inc
jle
inc
add
mov
bound
mov
jl
bound
mov
pop
repz
test
pop
inc
jo
mov
aas
leave
shll
adc
xchg
inc
add
mov
ss
add
rolb
mov
std
repnz
cwtl
loopne
mov
add
imul
add
cs
or
cld
and
mov
sub
mov
dec
push
les
dec
rolb
jmp
mov
ss
iret
or
jb
mov
mov
dec
aad
test
cmc
insb
xor
mov
mov
addr16
scas
mov
mov
pop
xchg
aaa
test
mov
cmpsb
or
xchg
add
loop
mov
lea
mov
sub
add
aaa
in
push
dec
mov
mov
ret
mov
pop
imulb
mov
adc
mov
hlt
push
jne
inc
add
jbe
jbe
cmpl
add
ss
js
add
and
or
int3
scas
mov
rolb
mov
xor
mov
sub
mov
xlat
fisubrs
mov
mov
dec
push
jae
add
repnz
dec
sub
mov
repz
and
mov
mov
jo
mov
add
add
xor
add
mov
xchg
rolb
loopne
mov
add
push
mov
stos
cwtl
scas
movsl
push
scas
push
cmp
jns,pn
add
lds
test
add
mov
clc
gs
add
fidivrs
stc
push
xor
add
ret
push
pop
inc
mov
dec
mov
scas
dec
out
or
addb
xchg
test
mov
sar
xor
bound
mov
jecxz
lret
sbb
int3
jecxz
pop
out
sarl
sub
xchg
mov
mov
aaa
cli
shll
rorl
jg
stos
insl
insb
xchg
push
push
add
fsubrp
mov
mov
jp
xchg
popa
add
mov
in
sbb
or
lods
aad
scas
jbe
cwtl
pop
xchg
mov
sbb
xchg
arpl
add
lods
xchg
cs
movsb
or
push
mov
mov
adc
mov
sub
push
xlat
mov
mov
add
or
cmp
add
mov
lods
imul
add
int3
lods
movb
adc
out
cltd
jg
push
mov
fwait
js
dec
and
adc
push
jns
add
pop
sub
pushf
xchg
repnz
sahf
fcmovbe
data16
pop
iret
push
leave
test
fstpt
rolb
adc
jb
mov
outsb
adc
mov
cmp
insb
dec
mov
hlt
push
add
sbb
add
add
ja
jns
ja
add
inc
add
lcall
sbb
addr16
imulb
decb
mov
push
mov
push
gs
add
add
mov
cmp
mov
cmp
hlt
int
add
lret
fsubrs
xor
add
int3
and
into
ret
cmp
dec
bound
mov
add
add
pop
mov
mov
mov
and
inc
add
pop
ja
cmp
adc
mov
pop
xchg
in
add
add
pop
xor
fsubrp
sbb
movsl
imul
and
stc
inc
add
sti
adc
mov
lret
sub
add
sub
jne
aam
les
lds
inc
dec
mov
mov
add
aaa
sti
jbe
popf
rolb
mov
js
push
cmpsb
jg
sbb
gs
mov
fiaddl
mov
dec
das
mov
lea
aaa
test
jmp
add
enter
fcmovnbe
mov
sub
inc
pusha
add
mov
shll
xchg
jmp
clc
jge
rcr
dec
lret
int
cmp
cmpsb
iret
ja
dec
push
and
mov
mov
mov
aas
adc
or
mov
movsb
dec
fldt
mov
jno
mov
add
mov
mov
in
into
repz
loopne
mov
divl
add
jno
add
lods
or
cmc
out
adc
adc
mov
mov
mov
mov
or
mov
enter
mov
mov
mov
les
aas
or
mov
add
dec
jno
add
mov
scas
cmp
mov
fidivrl
mov
mov
insl
xor
mov
push
push
mov
daa
or
in
xchg
cltd
push
pop
push
add
push
mov
mov
push
sbb
or
jne
and
je
push
sub
loopne
mov
sbb
ja
add
mov
xlat
xor
mov
mov
and
mov
add
loopne
mov
outsl
push
add
and
xlat
popf
xchg
pop
push
call
xchg
add
add
add
cmp
repnz
rolb
mov
mov
push
push
mov
pop
call
repz
mov
mov
mov
xchg
and
mov
add
ljmp
inc
or
mov
add
pop
jb
mov
inc
add
sub
insl
jns
add
mov
jl
xchg
push
inc
cmp
add
or
add
mov
pushf
inc
add
push
stc
dec
lock
aam
es
push
lret
cmp
mov
add
and
mov
add
leave
ja
add
xchg
and
aas
scas
addb
lret
lea
add
icebp
and
cmp
push
sub
aam
add
imul
fnstenv
mov
pop
ljmp
dec
shll
out
je
pop
stos
jp
mov
add
jbe
add
add
les
add
mov
nop
add
ja
push
pop
or
add
hlt
addb
jb
mov
inc
add
data16
mov
sbb
push
mov
mov
add
in
xor
loop
mov
add
xchg
jp
add
stos
ds
out
add
jno
add
mov
mov
pop
test
mov
sarl
add
sahf
scas
icebp
xchg
jns
and
cmp
pushf
mov
inc
add
xchg
mov
cs
add
add
ljmp
out
mov
inc
sbb
cli
enter
nop
add
js
cs
scas
mov
mov
rolb
jge
push
add
xor
or
ja
fwait
dec
adc
mov
imul
mov
push
and
fisttpll
xchg
push
xchg
fstps
mov
adc
mov
pusha
add
mov
addb
mov
xchg
in
jns
out
lods
sub
lea
add
add
add
jb
mov
jg
pop
outsb
mov
cltd
or
popa
cmp
ljmp
sub
add
mov
adc
mov
add
lcall
insl
jb
mov
mov
aas
push
mov
or
add
mov
add
ljmp
adc
call
ja
in
jecxz
test
or
adc
lret
add
mov
loop
mov
out
add
add
nop
add
mov
test
mov
stos
addr16
push
int
or
loope
icebp
movsl
mov
js
movaps
mov
cmp
jge
icebp
mov
out
push
js
and
add
mov
insl
dec
push
scas
enter
add
add
add
mov
ja
and
add
xor
mov
arpl
add
mov
xor
mov
add
xor
mov
mov
das
addb
and
mov
out
sub
insl
or
enter
rolb
mov
dec
or
sbb
out
pop
rolb
mov
fistpl
cmc
pop
push
push
fs
pop
repz
sbb
sbb
mov
mov
push
add
or
movsl
mov
dec
jae
jp
add
add
mov
inc
pop
mov
sbb
add
in
add
xchg
das
in
into
pop
fcomps
adc
xchg
add
data16
xchg
xchg
add
mov
in
pop
ret
dec
inc
popa
adc
add
popf
xchg
or
push
jg
pop
cmp
mov
mov
ds
in
mov
mov
mov
pop
xchg
add
mov
add
mov
in
pop
jmp
push
mov
mov
and
mov
movsl
mov
xchg
add
add
mov
mov
add
mov
mov
mov
push
or
add
lret
shrl
repz
push
sub
jl
add
imul
test
mov
or
push
repz
jmp
add
mov
inc
add
mov
aam
into
jecxz
pop
out
fs
and
js
clc
sbb
aas
repnz
cli
inc
add
lea
cwtl
arpl
jp
rolb
sub
add
add
jmp
popw
push
mov
add
cmc
sbb
sub
mov
adcl
lahf
add
add
out
jle
jge
add
add
mov
add
xlat
pop
ljmp
add
mov
pusha
add
or
push
popfw
stos
test
movsl
xor
mov
add
sti
jle
fdivrl
mov
rolb
mov
test
ficoms
xor
or
add
cld
xor
cmp
sbb
mov
mov
and
fmull
or
lods
push
adc
push
dec
cmp
lds
push
ja
notb
mov
push
mov
int3
mov
lds
gs
outsl
ja
dec
push
cmp
pushf
cltd
mov
rolb
mov
push
jnp
scas
mov
xchg
outsl
mov
cmp
mov
mov
loopne
mov
loopne
mov
jo
mov
sub
imul
jge
dec
inc
cld
mov
push
pop
add
je
add
int3
test
add
xor
mov
add
scas
dec
xchg
mov
mov
mov
xor
jmp
mov
clc
xchg
mov
mov
aaa
rolb
push
add
in
mov
call
pusha
add
mov
popa
sbb
add
add
add
mov
ja
add
pop
call
rolb
mov
dec
sub
mov
loope
inc
imul
pushf
popa
push
mov
pop
sti
fdivl
mov
push
enter
lcall
adc
pop
addl
aam
mov
inc
xchg
clc
rolb
jb
mov
sub
outsb
push
cmpsb
popa
and
shrl
loop
mov
xchg
fwait
mov
mov
aaa
mov
add
mov
inc
fstp
shll
mov
push
inc
add
mov
jl
cmp
add
mov
loope
out
push
jle
mov
pop
jns
mov
add
aaa
push
jle
popa
fistpl
add
mov
xor
mov
mov
cmpsb
push
into
mov
sub
mov
into
mov
mov
pop
sub
mov
cmpsb
mov
stos
fdivrp
xchg
or
ja
popa
into
jg
sub
orl
add
adc
test
sbb
in
jge
mov
ds
dec
add
mov
cwtl
mov
rolb
mov
mov
mov
fdiv
add
out
xor
lock
mov
cmp
in
outsl
js
jp
orl
sbb
movsb
sub
mov
xlat
ret
mov
out
in
add
mov
add
sbb
add
adc
std
mov
test
mov
dec
and
pusha
add
mov
or
scas
and
add
jns
aas
not
xor
negb
int3
cmp
sarl
addr16
out
add
mov
jp
jecxz
xchg
inc
pop
nopl
push
fsubr
cmp
add
mov
add
add
jnp
xor
mov
pop
rcl
or
mov
cmp
dec
jne
add
xor
mov
fsts
mov
lods
int3
push
clts
daa
cwtl
out
idivb
scas
icebp
jmp
and
push
test
mull
mov
mov
adc
rcll
mov
cmovp
movsl
and
mov
imul
sti
imul
jo
mov
cmp
pop
add
add
xor
outsl
pop
pop
inc
push
scas
lahf
cmp
adc
icebp
addb
push
add
mov
or
cwtl
ror
fwait
scas
mov
add
adc
out
push
add
nopl
xlat
repz
mov
add
mov
sbb
dec
and
mov
add
mov
add
push
adc
mov
mov
adc
sub
pusha
add
lock
lea
mov
pop
jns
and
mov
dec
dec
ja
cs
push
sbb
std
jo
mov
rorl
out
add
push
out
sbb
xor
jg
mov
mov
inc
add
xor
test
mov
adc
test
add
lahf
fwait
ja
shr
cmp
addb
adc
fdivrl
pop
in
inc
xor
mov
cmpsb
pop
jecxz,pt
inc
mov
pop
in
xchg
bound
mov
aaa
sbb
into
inc
push
jbe
or
stos
sub
out
add
push
loop
mov
mov
add
mov
mov
adc
test
sub
adc
add
mov
rcrl
push
mov
dec
xchg
or
movsb
out
xchg
add
pop
adc
mov
pop
jnp
add
add
push
call
popa
sub
add
xchg
and
mov
or
out
cmp
push
push
add
pop
ds
rolb
mov
nop
add
mov
into
push
test
xchg
add
stc
or
inc
add
add
add
adc
mov
mov
add
inc
sub
jbe
or
das
int3
daa
pop
movsl
push
call
add
push
fmuls
aaa
lea
in
loope
mov
push
xchg
add
mov
mov
mov
out
add
push
add
jge
adc
dec
add
pop
lret
sub
push
push
mov
inc
add
pop
movsl
sti
adc
mov
outsb
and
jno
jp
push
dec
outsb
sbb
sbb
mov
mov
inc
and
mov
mov
xchg
es
in
adc
mov
pop
test
push
dec
jne
mov
inc
add
mov
test
add
xor
mov
mov
clc
adc
mov
out
fmuls
xor
fnstcw
std
dec
dec
test
and
mov
in
add
mov
push
xor
out
pusha
add
in
or
daa
mov
add
mov
ret
mov
idiv
push
jg
mov
add
mov
dec
fmulp
lea
mov
pop
push
add
add
pusha
add
int3
and
mov
cs
lret
sub
out
or
popf
negl
addb
adc
mov
mov
push
adc
mov
add
xor
sub
call
int
mov
xor
ljmp
outsb
and
sub
add
ljmp
mov
adc
into
bound
mov
cmp
mov
ret
inc
push
add
cmpsb
test
insl
pop
dec
xor
mov
jg
xor
imul
data16
mov
cmp
lret
js
in
mov
mov
cmp
aas
out
lea
aad
mov
ja
leave
out
arpl
and
mov
in
dec
popa
in
add
add
and
fs
pop
xchg
add
mov
xchg
xchg
fwait
data16
nop
add
cwtl
rcll
in
fnstcw
add
mov
repz
add
lock
lods
jae
or
add
mov
add
mov
ret
loop
mov
or
addb
addb
add
pop
push
std
mov
add
ret
xchg
xchg
dec
sahf
mov
add
sbb
jne
cmp
adc
mov
aaa
js
cmp
cltd
adc
mov
int3
jno
hlt
inc
pop
fisubs
add
dec
jmp
xchg
add
add
add
fidivrl
outsb
fwait
inc
or
cli
loope
into
jecxz
stos
scas
mov
popf
pop
mov
add
in
enter
inc
addb
push
cmc
lret
adcl
daa
out
cmp
ljmp
cmp
mov
mov
jae
jle
ss
adc
mov
adc
xor
mov
setb
mov
jbe
add
push
add
addb
add
mov
mov
es
iret
packuswb
mov
shll
mov
fwait
int3
add
mov
sbb
add
dec
addb
in
std
sbb
mov
and
mov
add
aaa
dec
mov
movsl
clc
inc
dec
mov
mov
mov
inc
xchg
int
lret
lahf
jmp
mov
popa
outsl
adc
mov
or
mov
call
mov
push
mov
mov
inc
add
mov
add
mov
dec
das
mov
and
mov
mov
repz
pop
in
jb
mov
in
or
loope
incb
test
outsl
call
mov
add
xchg
add
mov
xchg
mov
mov
fmulp
push
sahf
push
dec
xchg
push
mov
lods
sbb
mov
rolb
mov
lahf
sbb
jecxz
pop
arpl
mov
scas
jmp
mov
mov
std
mov
sub
add
repnz
add
mov
mov
sub
pop
inc
rolb
repz
add
push
fistpll
nop
add
loopne
mov
mov
inc
pop
sahf
in
mov
mov
adc
mov
xor
mov
add
enter
mov
mov
lods
push
cmpsl
cmp
or
jecxz
in
mov
fsts
push
lret
out
push
fimuls
pop
inc
repz
cltd
out
bound
mov
inc
add
xor
mov
jns
gs
cwtl
and
mov
cmp
lret
test
lret
pop
fwait
mov
push
mov
mov
cmp
push
filds
mov
dec
pusha
add
push
stos
pop
fldl
inc
add
xchg
or
ret
ds
and
mov
mov
mov
adc
mov
inc
add
xor
mov
xchg
shll
mov
mov
mov
jo
mov
test
lock
or
add
add
gs
je
add
mov
outsl
jo
mov
jne
in
add
mov
int
repnz
add
mov
push
mov
push
sti
or
or
cmc
dec
fs
fldt
or
mov
push
clc
sub
outsl
sbb
addb
cmp
xchg
fnstsw
push
rolb
mov
push
add
xchg
loope
dec
mov
add
cmp
add
stc
and
mov
and
mov
xchg
hlt
pusha
add
sbb
pop
fnstcw
and
add
dec
dec
dec
lcall
jge
push
mov
jge
add
xchg
call
cs
mov
xor
mov
fnstsw
cld
and
add
sbbl
mov
jnp
out
add
dec
fcoms
mov
sub
mov
fcoml
xchg
push
xor
lret
das
and
mov
pop
xchg
add
xor
mov
mov
mov
daa
adc
adc
mov
shr
and
lcall
adc
mov
mov
sti
daa
lock
pop
dec
adc
mov
mov
mov
add
mov
fsubrs
inc
jecxz
loope
add
mov
and
mov
mov
mov
mov
les
cmpsb
notb
leave
dec
jbe
add
pop
jle
dec
xor
lea
or
add
addb
push
out
mull
add
jae
pop
cltd
jbe
cmpsl
jp
adc
mov
lods
ljmp
xchg
inc
xchg
call
loope
xchg
rolb
mov
add
xchg
xor
mov
lods
mov
mov
iret
jecxz
xchg
addb
mov
add
mov
rolb
mov
sub
mov
add
or
pop
fimull
xor
mov
mov
pop
lcall
mov
out
xor
sti
int3
ret
rolb
mov
cmc
push
movsl
ret
lods
inc
add
js
fwait
popa
int
shll
or
or
xorl
fistl
adc
mov
sub
mov
cmpsb
push
add
add
lds
dec
nop
add
and
test
imul
jnp
cmp
push
add
mov
int
jl
into
dec
sti
add
pop
adc
mov
xchg
jg
add
inc
add
inc
xchg
jns
sbb
pop
push
add
jp
push
add
adcl
inc
out
add
dec
imul
cltd
addb
into
sbb
sbb
aaa
jo
mov
add
add
icebp
lock
cltd
pop
xlat
lret
call
sub
scas
lods
popa
ja
aaa
fs
jecxz
bound
mov
add
xor
pop
cmpsl
xchg
and
mov
cmpsb
dec
addb
lods
pop
gs
jb
mov
mov
repz
ja
scas
adc
mov
inc
dec
rorl
jecxz
out
adc
fnsave
mov
ret
test
mov
cs
cmp
add
cmp
gs
popa
mov
insl
out
enter
mov
mov
mov
mov
sbb
or
arpl
insl
pop
hlt
arpl
leave
jp
sarl
rolb
fidivl
xor
mov
cmp
sbb
aaa
mov
adc
mov
lcall
push
aas
test
repnz
adc
mov
pop
and
mov
mov
and
mov
and
mov
add
pmuludq
xchg
int3
xor
aad
fcomps
movsb
cli
cmp
psubq
in
dec
dec
notb
mov
in
lods
addb
out
mov
and
mov
movsl
dec
push
fwait
in
cmpsl
stc
jg
mov
jae
mov
add
js
lahf
xchg
add
add
xlat
sub
mov
push
loope
call
fimuls
push
outsb
loope
or
insl
outsb
pushf
sbb
cmpsb
stc
test
xor
out
sahf
xchg
sahf
jmp
add
xchg
mov
js
dec
iret
sbb
mov
push
mov
and
daa
loopne
mov
push
ds
stos
aaa
or
and
mov
mov
mov
fsubrp
mov
jg
mov
xor
mov
fucomi
stc
sub
add
loop
mov
in
addb
pop
scas
out
fldz
mov
cmp
fimuls
push
xor
mov
mov
add
enter
cmp
xor
mov
addr16
inc
add
enter
xor
test
mov
sub
sbb
add
insb
push
mov
lret
mov
inc
add
xor
mov
and
add
adc
mov
cmp
ja
fdivl
lret
add
imulb
add
pop
jp
pop
mov
les
add
in
rolb
mov
les
add
xor
out
cwtl
inc
outsb
mov
ds
in
jle
and
mov
add
orl
ja
mov
mov
lock
and
mov
add
push
sbb
mov
or
fcmovb
int
jmp
adc
push
adc
and
mov
sub
add
mov
add
daa
int3
add
mov
addr16
fcoml
sub
add
pop
mov
mov
jns
jge
pushf
rolb
mov
hlt
xchg
int
inc
ret
into
push
cmp
jnp
icebp
inc
push
cltd
jbe
icebp
mov
dec
sbb
lahf
pop
mov
mov
xchg
or
add
sahf
push
fwait
or
sti
pop
push
inc
stc
lret
lahf
push
fwait
and
add
test
lahf
ss
sub
mov
add
xor
mov
repnz
push
sbbl
sub
xlat
gs
push
add
pop
cmc
cwtl
inc
inc
add
mulb
add
pop
pop
xchg
daa
mov
adc
xchg
sets
pop
adc
shrl
xor
pop
mov
out
mov
cld
push
pop
adc
inc
add
mov
cmp
bound
mov
push
test
sub
jo
mov
fs
mov
pop
dec
adc
mov
add
push
icebp
repz
mov
mov
das
and
mov
daa
jmp
dec
fistpll
inc
sub
mov
pop
sub
shl
mov
fdivrl
loop
mov
add
inc
loopne
mov
add
cmp
jle
sahf
xchg
cmp
xchg
mov
pop
xchg
inc
rolb
rolb
mov
add
mov
sub
mov
mov
mov
les
dec
jmp
mov
mov
mov
add
add
cli
out
outsb
out
pop
xchg
jae
xor
sub
nop
add
push
add
add
loopne
mov
outsb
dec
les
scas
xchg
mov
sub
jbe
stos
jo
mov
jo
mov
scas
ljmp
loope
std
mov
mov
out
add
mov
lahf
xor
jp
inc
add
or
dec
pop
xor
mov
outsb
fs
sub
xchg
mov
mov
imul
xchg
add
addb
mov
clc
cmp
jne
out
aad
push
js
xchg
sti
or
hlt
lods
and
push
push
pop
add
mov
outsl
mov
mov
push
out
mov
mov
mov
mov
pop
jnp
inc
jnp
push
rolb
mov
call
cs
ds
pusha
add
js
cmpsl
inc
mov
xor
add
aam
mov
add
sbb
fcompl
sub
push
imul
mov
or
xchg
nop
add
push
add
sbb
cs
lock
add
xchg
call
test
mov
hlt
pop
bound
mov
ds
add
mov
js
add
iret
dec
imul
mov
mov
lcall
out
and
push
add
jnp
or
loope
rolb
mov
and
mov
stos
outsb
repz
add
in
rolb
cli
push
int
add
mov
sub
add
loope
out
dec
lods
sub
xchg
add
mov
mov
add
mov
mov
daa
adc
mov
cwtl
pop
and
cmp
stos
call
inc
xchg
and
pop
ljmp
add
or
or
nop
add
mov
mov
into
in
fsubrl
cld
xchg
mov
std
pop
add
mov
mov
lock
fcmovb
jae
add
dec
mov
add
cltd
subl
sub
xor
cmp
mov
repz
in
and
mov
popa
pop
cs
fxch
lds
hlt
and
mov
mov
push
add
imul
stc
fs
and
add
sub
add
mov
rolb
mov
mov
xchg
add
or
jge
fimuls
cmpsb
lds
mov
cmpsb
rcl
jae
rolb
cmpsb
imul
pop
and
mov
jae
imul
in
and
mov
xchg
fisttpl
sub
inc
loopne
mov
adc
add
dec
pop
sub
sbb
mov
imul
mov
adc
xchg
inc
not
mov
mov
mov
push
out
pusha
add
dec
cld
in
insb
movb
fidivl
add
out
je
shl
in
jmp
or
out
push
mov
mov
mov
mov
xor
jge
add
fstpl
js
ja
dec
push
insl
mov
rcll
mov
lcall
stos
dec
mov
mov
add
ss
adc
gs
pop
mov
xchg
shl
adc
add
push
ret
movsl
test
jmp
mov
mov
fildll
sub
push
add
adc
sbb
cmc
cmp
mov
in
cmp
jmp
jl
fcmovb
xchg
mov
push
add
add
add
mov
mov
cmpsb
rolb
mov
aad
arpl
jne
add
and
insl
xchg
mov
add
xor
repnz
movsb
push
add
dec
push
aam
push
mov
jp
cmpsb
fsubrs
and
repnz
jmp
add
cmp
mov
pusha
add
jb
mov
pop
cmpsl
loopne
mov
hlt
xchg
cmp
jbe
ss
ss
xor
mov
cs
mov
add
addb
add
mov
add
mov
pusha
add
enter
out
sbb
add
add
scas
pop
add
pop
lock
add
push
pop
fists
add
lods
clc
cmpsb
repnz
push
jmp
in
in
mov
std
push
adc
mov
mov
repz
xor
mov
mov
xchg
cmp
mov
add
inc
mov
mov
pop
cmpps
sub
add
mov
std
int
pop
mov
clc
bound
mov
mov
fs
xor
mov
scas
ficoml
push
ljmp
mov
divl
mov
mov
add
lahf
in
lea
cli
icebp
int3
push
fcoml
pop
or
popf
push
lock
add
mov
sbb
mov
xchg
pop
cmp
movsl
jge
add
call
packuswb
sbb
or
and
mov
inc
adc
ja
icebp
insl
jnp
xchg
ljmp
xchg
add
jno
push
push
mov
mov
jge
mov
sbb
xchg
and
les
repz
inc
add
test
xor
test
push
add
pop
jns
push
sub
dec
sbb
cmp
in
int
push
stos
dec
jns
pop
les
call
cmp
repz
pushl
mov
sub
out
dec
inc
ljmp
or
mov
cld
aaa
pop
push
mov
sub
add
push
jns
add
leave
mov
mov
add
mov
mov
add
add
mov
pop
xor
xchg
sub
lahf
mov
fistpl
les
pop
popa
cmp
jge
xlat
imul
or
sbb
pusha
add
xchg
rolb
mov
xor
cltd
mov
mov
xchg
dec
push
add
mov
add
fsts
in
sbb
and
mov
pop
inc
lods
iret
addb
ret
insb
lcall
xchg
mov
scas
mov
mov
pushw
sub
cmp
imul
or
jge
xchg
and
dec
and
mov
fildl
stos
loop
mov
mov
cmpsb
mov
test
mov
loopne
mov
mov
aas
jnp
push
jge
int3
dec
loopne
mov
lret
add
add
mov
incb
mov
nop
add
inc
xlat
mov
int
cmpl
pop
pop
outsl
pop
jne
mov
pop
sbb
cmp
sahf
test
add
xor
inc
add
dec
cmp
add
mov
push
add
dec
sbb
add
je
sub
bound
mov
jns
add
stos
addr16
lock
xor
pop
test
rolb
mov
sahf
out
cmpsb
dec
out
fisubl
add
jecxz
push
pop
pushf
les
add
mov
xchg
jge
add
xor
mov
clc
xor
mov
and
add
xor
cmpsl
mov
jp
mov
push
add
fidivrl
in
sbb
test
test
and
add
clc
iret
iret
mov
mov
sbb
in
lret
data16
mov
dec
push
sbb
addr16
div
lahf
je
and
add
movsl
hlt
pop
mov
add
sbb
out
pop
sub
iret
inc
frstor
mov
mov
ror
pop
jae
sbb
add
or
loope
addl
jp
out
sbb
sub
push
xlat
push
sub
lods
shll
cmp
adc
pop
push
lods
addb
rolb
mov
dec
jb
mov
imull
inc
aaa
adc
add
mov
pop
sub
add
push
pop
mov
idivl
lock
lret
mov
add
aam
std
fiaddl
adc
mov
mov
dec
xlat
es
sbb
fisubrl
in
or
jae
add
insb
cmp
sbb
mov
mov
jmp
push
cmp
add
mov
sub
mov
mov
mov
mov
hlt
loopne
mov
sbb
minps
add
mov
add
jecxz
sbb
insb
bound
mov
pushf
imul
add
ljmp
adc
add
jge
in
pop
xchg
in
repz
dec
ret
push
jmp
stos
jp
pusha
add
add
mov
cmp
loope
push
cmp
lahf
adc
icebp
lahf
ds
and
mov
push
decl
xor
lret
jno
hlt
mov
jnp
add
lcall
ret
ja
adc
mov
add
add
xchg
and
cmpsb
and
mov
or
push
stos
je
inc
icebp
cmp
mov
push
add
movsl
xchg
cli
jmp
mov
mov
add
push
and
sbb
adc
scas
mov
stos
rolb
mov
mov
xor
repnz
push
add
nop
add
add
sbb
decl
mov
mov
daa
cld
pop
lock
add
sbb
lea
rolb
mov
out
jo
mov
mov
sbb
dec
add
mov
out
insb
adc
mov
xor
lock
jnp
add
push
mov
add
mov
mov
adc
mov
add
out
in
dec
xchg
cwtl
repnz
mov
ja
fnstenv
lods
xchg
cwtl
sbb
imul
movsl
xchg
lea
mov
jns
add
add
out
add
adc
add
arpl
frstor
mov
mov
daa
xor
add
clc
mov
mov
mov
mov
mov
mov
add
shl
sub
add
jl
pop
imul
addb
adc
mov
pop
or
xchg
mov
sti
or
pusha
add
add
add
push
add
jecxz
pop
gs
mov
repnz
add
call
mov
push
or
int
jno
jle
jno
mov
mov
scas
rolb
pop
lcall
or
inc
add
mov
add
add
push
sbb
pop
inc
jle
push
mov
shrl
shrl
add
mov
jno
or
sti
sub
fst
aas
in
daa
jle
pop
call
and
mov
push
add
or
dec
pop
les
add
paddusb
xchg
add
test
add
rolb
mov
jno
push
pop
xor
mov
dec
shll
subl
mov
mov
mov
add
outsl
and
test
xor
scas
mov
add
dec
mov
cmpsb
mov
pop
mov
cld
mov
mov
xchg
or
push
push
rolb
mov
pusha
add
mov
mov
sahf
rolb
mov
xchg
mov
adc
mov
iret
fwait
lock
adc
fidivrl
popf
xor
xchg
rcrl
and
shrl
or
mov
adc
mov
mov
dec
push
fs
mov
add
aaa
test
cmp
pop
in
popl
in
mov
mov
test
add
or
add
aas
cmpsl
and
ja
icebp
rorl
out
out
jecxz
xor
add
mov
xor
mov
add
fnstcw
adc
mov
mov
and
add
mov
outsl
shrl
inc
cmp
insl
movsb
in
mov
and
mov
stc
test
mov
enter
push
out
lock
jnp
pop
outsl
jne
adc
mov
jne
das
jp,pt
mov
sub
sbbl
mov
xchg
add
add
mov
or
cltd
push
je
add
sub
jo
mov
mov
cmp
cmp
mov
mov
gs
mov
mov
push
push
cmp
je
and
ja
cmp
adc
cmp
add
rolb
xor
dec
ja
mov
push
add
mov
mov
mov
inc
cmc
je
jge
push
movsb
xor
mov
and
mov
add
fwait
inc
add
add
scas
in
jnp
inc
add
lea
mov
mov
lret
mov
cmp
aad
push
inc
add
nop
add
mov
jno
add
mov
fistpll
dec
fldt
mov
xor
arpl
fs
daa
js
adc
mov
push
mov
jbe
push
add
mov
imul
mov
sahf
test
mov
movsl
iret
negl
pop
jg
clc
and
add
das
lock
cltd
dec
lcall
or
add
mov
push
add
lcall
add
dec
dec
sbb
sbb
mov
mov
fdivrs
push
add
sub
add
cmpsb
add
jge
repz
dec
xor
mov
gs
es
call
ret
cmpsb
mov
lret
fstpl
rolb
push
mov
call
xchg
leave
cmc
dec
in
cld
lcall
mov
add
add
fdiv
fnsave
mov
xchg
sbb
add
das
ret
xchg
movl
nop
add
or
xchg
in
data16
sbb
aam
jle
push
or
sub
push
mov
mov
dec
movsb
inc
cmc
shll
mov
pusha
add
mov
mov
leave
xor
mov
mov
sbb
daa
jb
mov
add
out
mov
add
add
add
add
mov
push
bound
mov
cli
xchg
pop
sbb
cmp
into
test
movsl
jg
sub
xchg
mov
cmp
test
arpl
jnp
sub
add
xchg
outsb
adc
mov
das
sub
add
add
mov
add
shll
jb
mov
imul
push
adc
xchg
mov
add
ret
lea
sti
pop
arpl
sub
das
adc
jge
jne
repnz
cmp
mov
xor
mov
notb
add
pop
lret
fiaddl
mov
or
xor
mov
dec
mov
push
add
inc
into
pop
insb
xor
daa
in
enter
js
insb
push
dec
cmp
in
lret
dec
inc
sub
aas
sbb
or
jo
mov
fsts
add
push
jno
xchg
add
fidivrs
dec
or
add
call
add
add
dec
addb
out
gs
sbb
sub
pop
xlat
sub
popa
scas
add
aas
lahf
pop
mov
ljmp
sar
lock
add
mov
dec
lahf
mov
xchg
je
add
mov
add
sahf
enter
test
mov
xchg
faddl
or
mov
call
or
mov
mov
add
sub
iret
outsl
fs
pop
dec
cwtl
push
jae
sbb
notl
mov
add
mov
rolb
mov
jno
loop
mov
addr16
insb
sbb
mov
mov
enter
das
or
ret
cmp
js
add
cs
mov
xor
pushf
xor
mov
pop
sub
xlat
push
outsb
jbe
jnp
dec
mov
pop
mov
xchg
fsub
adc
add
ljmp
push
popa
or
mov
mov
add
inc
add
bound
mov
mov
jo
mov
mov
out
mov
pushf
rolb
mov
jbe
jg
xchg
add
mov
rolb
and
mov
or
sub
cwtl
mov
mov
push
pop
loop
mov
loop
mov
add
mov
mov
std
fstpt
jne
icebp
sti
push
out
push
jb
mov
data16
adc
mov
fisubl
mov
rolb
mov
adc
mov
inc
add
jp
add
lcall
push
mov
test
sub
adc
popf
out
out
sti
mov
aas
mov
mov
aaa
out
dec
xor
lock
ret
lods
fcmove
and
mov
sbb
add
out
and
mov
shrl
bound
mov
mov
dec
jb
mov
xor
inc
and
imul
jecxz
xchg
pop
or
dec
cmp
dec
clc
fildll
jb
mov
pop
inc
add
bound
mov
mov
inc
add
cli
push
loope
xor
dec
data16
pop
outsb
ja
add
and
cs
inc
or
push
mov
cmp
mov
dec
jecxz
loop
mov
cmp
ja
add
mov
inc
ret
mov
repz
scas
sbbl
out
mov
pop
mov
add
imul
push
fwait
xchg
mov
popa
addb
rcrl
mov
mov
add
adc
mov
jb
mov
adc
mov
mov
mov
idivl
add
rolb
mov
add
xor
add
call
push
add
push
rolb
mov
add
and
mov
mov
addb
sub
insb
lahf
addb
push
sbb
pop
out
jno
pusha
add
xor
mov
inc
rolb
mov
add
push
push
into
movsl
sub
ja
addb
outsb
inc
add
mov
mov
fwait
xchg
fnstenv
add
add
rolb
pop
mov
mov
sbb
fistpll
or
jo
mov
inc
mov
xchg
add
and
mov
inc
sbb
add
mov
jecxz
inc
loop
mov
add
inc
lea
les
and
lods
jle
rolb
mov
mov
outsl
push
xor
fists
add
fiadds
push
dec
hlt
and
lahf
sbb
ss
inc
leave
add
push
jo
mov
es
xor
mov
dec
pop
rolb
mov
cmp
mov
mov
mov
inc
dec
and
sbb
aaa
adc
mov
sbb
add
mov
divb
in
jl
leave
out
mov
adc
add
test
lret
push
push
cltd
pop
aam
adcl
jno
fnstenv
test
mov
ret
int3
jne
add
dec
sub
test
mov
nop
add
adc
push
mov
push
mov
mov
flds
mov
add
adc
mov
sbb
lahf
mov
or
sub
cltd
push
mov
dec
xchg
adc
mov
mov
add
fstl
mov
xor
mov
arpl
in
popf
and
add
dec
xchg
pop
out
aad
test
insl
pop
iret
daa
pusha
add
mov
xor
out
jo
mov
xchg
inc
mov
in
sub
add
pop
scas
mov
movl
sub
les
sbb
leave
daa
inc
add
pop
mov
cwtl
out
sbb
sub
jae
mov
add
push
notb
rcrl
mov
ja
faddl
das
pop
fistpl
gs
int3
rcll
mov
add
mov
rolb
push
outsl
arpl
jmp
add
mov
fst
sbb
movsl
enter
cmc
rolb
mov
add
jmp
mov
outsl
mov
sbb
push
sub
mov
mov
imul
mov
sbb
xor
mov
cmc
mov
add
mov
pushf
jnp
add
inc
add
add
jmp
lahf
inc
push
shll
inc
add
mov
xchg
and
pushf
mov
mov
comiss
add
jmp
out
xchg
mov
add
and
ja
sbb
ds
data16
pop
fsubrs
daa
outsl
addb
mov
movsl
push
sbb
add
add
arpl
out
adc
mov
mov
jecxz
mov
or
add
mov
mov
cltd
mov
nop
add
mul
add
mov
xchg
loope
and
mov
insl
pop
fistl
add
inc
dec
mov
daa
xchg
mov
jo
mov
dec
daa
iret
xchg
mov
mull
xchg
int
fnstenv
loopne
mov
sbb
outsl
mov
lock
orl
cmpsb
jl
jge
push
push
insl
sub
mov
adc
mov
cmp
adc
inc
jo
mov
jmp
sub
mov
out
inc
scas
mov
mov
jg
pop
xchg
fistpll
dec
lock
adc
or
inc
or
add
mov
test
repnz
mov
test
jmp
std
and
mov
dec
pop
xchg
add
xchg
sahf
add
mov
push
add
push
jle
add
mov
out
repz
and
mov
addb
cltd
addb
aad
push
mov
add
xor
jo
mov
push
int
cmp
jb
mov
add
test
xor
sub
sbb
inc
add
add
jb
mov
jo
mov
cltd
jl
xor
xchg
rcrl
adc
leave
int3
add
mov
lea
push
and
sbb
mov
dec
cmp
sbb
lret
push
xor
pop
xor
mov
add
add
add
sbb
xchg
add
movsb
and
jnp
outsl
dec
mov
mov
xor
daa
sub
out
add
fsubs
mov
sub
push
dec
pop
push
mov
je
jno
add
mov
cltd
inc
push
addb
stos
enter
adc
mov
add
std
xchg
pop
cmpsl
test
xchg
rcll
fildll
js
iret
push
orl
inc
fnop
add
add
lcall
add
enter
mov
rolb
jb
mov
or
mov
adc
repnz
call
cmpsb
sti
sbb
or
add
les
mov
add
adc
mov
add
rolb
mov
xchg
aam
add
scas
pop
lods
ja
xchg
cltd
push
mov
sub
mov
std
outsl
rolb
mov
insl
fistpl
add
add
xchg
add
adcl
inc
push
push
and
push
dec
mov
lock
mov
test
add
mov
inc
dec
jle
aad
pusha
add
add
add
loopne
mov
mov
jecxz
lods
jl
jecxz
test
fisttpll
es
dec
dec
xor
lea
add
cmpsb
add
cmp
pop
or
mov
dec
addr16
or
insb
das
addr16
mov
lock
jmp
std
sahf
fcomip
xchg
or
fwait
xor
mov
cwtl
xchg
ret
mov
xor
enter
testb
mov
or
sub
aam
data16
mov
jnp
stc
in
addb
sbb
mov
pop
mov
sahf
insl
sub
mov
add
mov
pop
mov
mov
mov
sbb
add
enter
add
loop
mov
add
mov
or
dec
das
pop
inc
add
adc
fisubrs
xor
mov
mov
sub
add
mov
sahf
adc
mov
or
ror
mov
lahf
mov
loop
mov
mov
mov
add
dec
mull
call
xchg
add
mov
enter
mov
fnstenv
mov
repz
mov
mov
mov
inc
addb
push
sub
int
test
cmp
out
lds
xor
mov
mov
scas
inc
push
add
add
imul
mov
mov
pop
fwait
inc
add
lret
nop
add
push
inc
mov
push
xor
mov
imul
pop
inc
out
sub
jmp
mov
mov
dec
or
cmp
add
or
jl
xor
push
jge
enter
dec
out
mov
mov
mov
pop
dec
inc
mov
mov
mov
mov
shll
adc
lret
cmp
insl
xor
pop
mov
rolb
or
xchg
mov
xor
add
or
add
int3
sbb
add
add
in
jns
lret
imul
push
je
add
mov
add
mov
ret
leave
mov
mov
add
fldenv
popf
push
xchg
inc
dec
mov
and
cmp
mov
mov
inc
lods
xchg
add
jl
jecxz
xchg
bound
mov
mov
add
inc
pop
sbb
pop
ret
into
lahf
mov
mov
or
addr16
cltd
jae
mov
sbb
sub
dec
and
pushl
push
jno
lods
mov
fs
icebp
push
jae
or
push
repnz
jle
ficomps
or
sbb
jl
mov
pop
stc
fcoml
js
mov
mov
mov
mov
lods
xor
add
daa
jae
test
cmp
mov
cmp
loope
and
mov
mov
stos
lods
hlt
dec
push
inc
xchg
scas
test
cmp
mov
add
jno
jns
add
cmp
mov
adc
scas
adc
mov
cli
jo
mov
addb
out
out
aad
sbb
mov
add
add
mov
add
popf
in
movsb
aas
mov
mov
xor
mov
incb
mov
jg
fs
push
mov
mov
add
sub
mov
cmp
jae
addb
mov
or
mov
stos
out
into
inc
add
fwait
lret
clc
loope
push
adc
imul
add
pop
mov
pusha
add
stos
movsl
jns
sbb
inc
add
sub
adc
sbb
add
mov
jle
add
add
std
jo
mov
mov
xchg
repz
add
and
add
add
call
add
pop
cmp
inc
fadds
mov
out
insl
or
mov
mov
je
jmp
cltd
popf
les
and
das
cmp
add
push
cs
test
mov
mov
mov
add
mov
jbe
add
sub
add
outsl
imul
pop
popa
out
fxch
lret
mov
pop
and
lret
mov
imul
sbb
imul
pop
or
jle
jmp
push
cmp
aad
cmp
add
jmp
sbb
or
fisttps
mov
imul
sarl
pop
mov
aaa
stc
xchg
xchg
push
lret
push
add
push
lret
xor
mov
adc
test
adc
shl
add
add
addr16
add
mov
mov
cltd
xorl
add
add
mov
add
mov
adc
lret
jecxz
scas
out
ret
addr16
loope
das
mov
pop
cmc
jg
test
insb
and
mov
and
xchg
dec
mov
loopne
mov
cmc
leave
mov
sarl
fdivrp
mov
ret
test
andl
js
mov
shll
xchg
fwait
cmp
punpckhwd
ljmp
push
mov
adc
and
repz
mov
mov
scas
and
mov
xchg
mov
add
mov
ja
add
mov
add
sub
dec
mov
mov
mov
xlat
mov
mov
add
in
sarl
ss
data16
arpl
cmp
sbb
clc
mov
sbb
out
cmp
mov
sbb
add
cli
add
inc
arpl
mov
mov
and
mov
adc
xlat
xor
mov
xor
mov
rolb
add
mov
mov
std
sub
jae
adc
mov
jb
mov
mov
pop
aam
imull
add
jne
nop
add
out
insl
idivb
enter
mov
inc
addb
add
lahf
addr16
or
in
inc
lahf
cmp
adc
das
jbe
add
adc
mov
add
add
or
and
xor
leave
addb
aad
aas
cltd
jl
jl
aaa
std
dec
or
arpl
shll
mov
mov
cmpsl
rolb
mov
bound
mov
push
iret
sub
add
loopne
mov
mov
xchg
mov
outsb
cltd
or
pushf
sbb
in
loope
push
arpl
dec
cmpl
mov
addb
aaa
scas
mov
sbb
pushf
sub
xchg
sti
push
fisubs
adc
inc
inc
lock
pop
mov
add
add
test
negb
cwtl
or
xchg
adc
mov
xor
stos
fisttpll
aas
and
xor
mov
fimull
and
add
sub
adc
mov
add
add
stos
and
dec
in
jmp
into
repz
test
jne
les
scas
jecxz
mov
jp
iret
lret
jb
mov
mov
jg
andl
outsb
push
js
cmp
out
add
stos
scas
xchg
jle
inc
adc
add
add
sub
mov
ficoms
stos
push
addr16
mov
lods
xchg
ds
add
push
popf
jo
mov
hlt
fwait
mov
icebp
mov
mov
in
adc
gs
lods
fistl
test
pushf
icebp
pop
push
cwtl
xor
mov
pop
leave
xor
ret
inc
cmp
leave
jbe
fiadds
add
mov
or
inc
mov
add
mov
add
add
push
sbb
dec
scas
addl
and
jno
icebp
pop
movsl
rolb
or
sub
ret
xor
mov
mov
mov
mov
add
imul
gs
jmp
push
sbb
out
iret
mov
xchg
loopne
mov
adc
addb
cmp
mov
fnstcw
mov
lds
sub
add
iret
stc
cli
leave
pushl
es
idivl
cmp
pop
or
arpl
xor
mov
add
or
and
mov
inc
mov
mov
add
stos
std
movsb
imul
mov
mov
mov
dec
xchg
movsb
insl
dec
in
inc
pop
cld
pop
cmp
add
popf
pop
inc
add
shll
sub
xchg
sarl
xchg
addb
sub
mov
hlt
int3
imul
enter
mov
notl
cs
fiaddl
pop
cmpsb
add
rolb
mov
push
pop
mov
sti
adc
lock
mov
push
dec
mov
insl
aaa
jp
adc
jnp
data16
mov
xchg
in
icebp
scas
shl
add
add
outsl
jl
sub
mov
hlt
mov
add
sbb
insl
push
add
aaa
btl
inc
or
push
mov
mov
mov
icebp
shrd
and
aaa
idiv
adc
cmp
rolb
mov
je
jo
mov
inc
aam
sub
add
cmc
jle
add
movsl
cmp
add
mov
sub
add
iret
mov
push
or
cmpsb
bound
mov
sub
add
cmpsb
push
inc
add
mov
dec
test
enter
mov
lcall
mov
stc
push
insb
add
gs
adc
mov
mov
jge
xor
mov
mov
mov
lock
ret
cltd
lcall
mov
cmc
jge
in
and
sbb
add
std
sub
dec
push
add
ja
adc
mov
faddp
fwait
mov
mov
push
sub
add
mov
xor
divl
add
arpl
jnp
out
add
mov
stc
mov
mov
jno
add
rolb
mov
mov
push
stos
scas
sub
inc
push
ja
stos
mov
mov
adc
subl
in
repz
mov
jecxz
lods
add
mov
push
in
lsl
sbb
ljmp
push
ljmp
mov
mov
ja
add
pop
lahf
xor
iret
jg
ret
xor
jo
mov
mov
mov
lds
mov
mov
add
push
dec
xchg
xchg
push
call
dec
mov
push
or
daa
adc
in
popa
stc
das
and
cmp
dec
fidivs
fsubrs
out
jge
add
add
xor
into
mov
xor
mov
lcall
add
xchg
ds
movsl
mov
mov
loop
mov
test
test
mov
sub
jo
mov
jae
subl
shll
or
add
insl
cltd
push
lret
imul
mov
add
pop
pop
cld
adc
push
pop
fsts
add
mov
jb
mov
call
imul
jnp
push
aas
dec
call
mov
ja
outsl
or
mov
rcll
lahf
sahf
stos
bound
mov
mov
repnz
xor
cmp
add
jl
push
sbb
add
jno
jge
lret
js
add
mov
pop
repz
imul
je
add
jp
add
add
add
add
sbb
jno
add
add
fdivl
inc
test
mov
mov
add
mov
mov
jo
mov
mov
dec
inc
adc
enter
mov
jl
add
in
ficomps
cli
pushf
add
add
xchg
clc
pusha
add
jge
in
xchg
inc
add
flds
aas
test
es
jae
mov
in
jne
frstor
lcall
cmc
ds
pop
push
sub
test
scas
adc
bound
mov
mov
adc
and
mov
pop
sarl
aas
lcall
out
cmp
mov
sbb
cmc
fwait
push
jns
sbb
stos
stos
imul
stos
adc
movsl
movsl
mov
add
repz
mov
test
popa
adc
cmpsb
ret
int
add
fmulp
cmp
and
mov
data16
js
ljmp
add
aaa
rolb
xchg
mov
push
mov
in
cmp
and
pop
arpl
inc
push
inc
mov
add
imul
test
imul
sbbl
cld
pusha
add
out
je
mov
pop
pop
sbb
cs
add
lret
push
inc
adc
outsb
push
inc
scas
jecxz
cmp
loop
mov
rep
cmp
push
dec
insl
inc
lods
sbb
mov
insb
mov
dec
xchg
idivl
dec
sti
or
mov
push
add
add
mov
add
pop
imulb
push
jns
js
xor
lret
cmp
xor
mov
dec
shll
mov
add
xchg
add
add
dec
mov
pop
sub
lock
std
ret
push
jbe
out
addb
aaa
bound
mov
xor
adc
mov
pop
and
repnz
sahf
arpl
mov
add
add
push
push
or
fs
mov
or
push
add
mov
adc
in
fdivrp
inc
pop
out
int
push
and
jno
cli
adc
jmp
inc
jae
addl
sbb
add
jae
in
jge
mov
mov
xor
sub
push
jmp
add
cmp
cld
sti
sub
aad
insl
add
mov
lahf
fidivl
mov
mov
fldl
add
xchg
dec
ret
repnz
add
mov
adc
add
jmp
sbb
fsubs
xor
or
add
pop
or
mov
shrl
and
xchg
ret
push
iret
mov
icebp
xchg
pop
sahf
fiadds
test
enter
mov
add
add
mov
push
push
jge
mov
xchg
mov
jb
mov
push
std
dec
sbb
add
add
cs
sbb
add
andl
rolb
mov
jne
push
movsl
popf
mov
inc
xchg
add
ficoml
mov
icebp
pop
xchg
sub
add
lcall
jnp
fildl
add
mov
stc
fdiv
sub
addb
or
jno
ss
mov
push
add
or
cmp
cmovae
jb
mov
out
jnp
jmp
push
push
les
rolb
mov
push
mov
add
int
and
add
repz
add
jmp
mov
push
jge
add
mov
hlt
inc
inc
in
js
sub
ja
mov
mov
enter
jmp
add
adc
xchg
insl
or
test
jbe
pushf
lcall
decb
and
sub
dec
aas
and
mov
add
out
sbb
in
xchg
pop
jle
call
repnz
sbb
pop
add
lcall
dec
mov
ret
cld
fistps
inc
add
mov
mov
jns
lock
or
add
add
out
push
sbb
mov
dec
fisubs
sub
rolb
mov
ds
mov
or
jae
sub
xchg
add
mov
call
out
fbstp
mov
mov
xchg
fnstenv
pop
es
inc
add
js
pop
fdivrs
add
std
cmp
add
das
cld
cwtl
cltd
dec
cmp
add
mov
add
add
dec
imul
add
es
jmp
xchg
mov
or
add
add
add
test
mov
sbb
jecxz
add
mov
mov
cmp
xchg
add
mov
adc
movsl
loope
das
daa
cmp
add
push
push
add
adc
xchg
test
and
idivb
fldt
mov
fbld
ret
divb
jno
sub
call
mov
jmp
mov
mov
fcoms
mov
xchg
xchg
or
mov
into
iret
xor
add
add
mov
or
add
add
add
