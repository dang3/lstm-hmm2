push
in
in
out
in
out
in
in
in
out
in
loop
in
in
in
out
in
in
in
loope
in
jecxz
in
call
loop
insb
call
loop
add
loop
sbb
loop
mov
out
in
loope
in
jecxz
in
in
in
jecxz
in
loop
in
out
in
out
in
jecxz
in
call
loop
test
loop
cli
out
in
loop
in
loop
in
jecxz
in
jecxz
in
out
in
in
in
loop
in
loop
in
out
in
loop
in
loope
in
jecxz
in
out
in
in
in
in
in
call
loop
xor
loop
fsubp
loop
push
out
in
jmp
loop
leave
in
in
out
in
in
in
in
in
out
in
loope
in
call
loop
dec
in
in
in
in
call
loop
dec
jmp
loop
ret
in
loop
in
loop
in
in
in
out
in
in
in
out
in
jecxz
in
jecxz
in
loope
in
in
in
loop
in
loope
in
call
loop
lcall
in
loop
in
out
in
jecxz
in
loope
in
out
in
out
in
out
in
out
in
jecxz
in
out
in
out
in
out
in
jecxz
in
in
in
in
in
loop
in
jecxz
in
in
in
jecxz
in
loope
in
loop
in
in
in
out
in
call
loop
or
loop
test
loop
add
loop
and
in
out
in
in
in
jecxz
in
out
in
jecxz
in
out
in
out
in
in
in
out
in
out
in
in
in
out
in
out
in
out
in
in
in
jecxz
in
loop
in
out
in
call
loop
test
loop
jo
loop
outsl
in
in
loope
in
in
in
loope
in
in
in
jecxz
in
call
loop
jbe
loop
inc
jmp
loop
fs
in
loop
in
in
in
call
loop
fsubp
loop
hlt
in
in
jecxz
in
in
in
jecxz
in
loop
in
out
in
jecxz
in
call
loop
jge
loop
fsubr
loop
ljmp
in
loop
in
jecxz
in
loop
in
loop
in
loope
in
out
in
loope
in
out
in
jecxz
in
in
in
in
in
in
in
jecxz
in
call
loop
inc
out
in
out
in
loop
in
jecxz
in
in
in
out
in
out
in
in
in
in
in
loope
in
in
in
loope
in
jecxz
in
out
in
jecxz
in
out
in
in
in
in
in
out
in
out
in
out
in
out
in
out
in
in
in
call
loop
sahf
in
in
out
in
loope
in
loope
in
jmp
loop
out
loop
jbe
loop
in
loop
cmp
loop
jle
loop
push
call
loop
mov
loop
aaa
in
in
jecxz
in
in
in
loop
in
out
in
loope
in
out
in
loop
in
jmp
loop
mov
loope
in
loope
in
call
loop
and
in
out
in
out
in
call
loop
xor
loop
mov
loop
cmpsl
call
loop
mov
loop
addr16
in
loop
in
loop
in
in
in
loope
in
loop
in
call
loop
mov
loop
adc
loop
pop
loope
in
out
in
loop
in
call
loop
pop
out
in
in
in
in
in
in
in
in
in
out
in
loop
in
jecxz
in
out
in
jmp
loop
ja
loop
inc
call
loop
jne
loop
xchg
loop
loop
adc
loop
out
loop
stos
jecxz
in
loop
in
in
in
in
in
jecxz
in
out
in
loop
in
in
in
out
in
loope
in
jecxz
in
in
in
in
in
in
in
jecxz
in
in
in
in
in
call
loop
dec
in
in
in
in
call
loop
mov
out
in
out
in
in
in
out
in
jmp
loop
add
loop
call
loop
in
out
in
call
loop
jno
loop
dec
loop
in
in
in
loope
in
loop
in
jecxz
in
out
in
jecxz
in
call
loop
shl
loop
dec
out
in
call
loop
push
call
loop
cmp
loop
push
in
in
in
in
call
loop
sbb
loop
xchg
in
in
loop
in
in
in
in
in
loop
in
jecxz
in
jecxz
in
call
loop
ss
loop
and
loop
and
in
in
call
loop
popa
loop
in
in
in
out
in
in
in
jecxz
in
jecxz
in
jecxz
in
out
in
call
loop
enter
add
call
loop
loop
mov
loop
mov
in
in
out
in
call
loop
add
loop
push
in
in
jecxz
in
in
in
in
in
loop
in
call
loop
enter
fxam
loop
mov
in
in
loope
in
jecxz
in
jecxz
in
out
in
loop
in
in
in
jmp
loop
jmp
loop
ja
loop
out
in
loope
in
call
loop
mov
loop
enter
pop
call
loop
test
in
in
in
in
jecxz
in
in
in
jecxz
in
call
loop
sbb
loop
mov
out
in
out
in
in
in
in
in
in
in
out
in
in
in
loop
in
jecxz
in
call
loop
xor
loop
aad
loop
jo
loop
jns
loop
and
in
loop
in
in
in
in
in
out
in
out
in
in
in
out
in
loope
in
loop
in
out
in
jecxz
in
loop
in
jecxz
in
in
in
loop
in
out
in
jmp
loop
inc
jecxz
in
in
in
jecxz
in
jecxz
in
loope
in
call
loop
push
in
in
loop
in
loop
in
in
in
out
in
jmp
loop
out
out
in
call
loop
dec
call
loop
mov
call
loop
lock
in
loope
in
loope
in
jecxz
in
out
in
call
loop
movsb
in
in
call
loop
add
in
in
out
in
out
in
in
in
jecxz
in
loop
in
in
in
call
loop
mov
out
in
loop
in
loop
in
jecxz
in
loope
in
in
in
out
in
call
loop
loop
in
out
in
out
in
out
in
out
in
call
loop
test
loop
sub
loop
xchg
out
in
in
in
call
loop
mov
call
loop
and
out
in
loop
in
call
loop
mul
loop
dec
jecxz
in
call
loop
xchg
loop
add
loop
test
loop
loope
loop
pop
loop
in
in
in
out
in
call
loop
sub
loop
in
out
in
out
in
in
in
out
in
jecxz
in
in
in
in
in
jecxz
in
in
in
call
loop
mov
loop
mov
loop
cmpsl
jecxz
in
out
in
jecxz
in
jecxz
in
in
in
in
in
in
in
out
in
in
in
call
loop
xchg
jecxz
in
loop
in
in
in
in
in
in
in
call
loop
icebp
call
loop
shl
loop
jnp
loop
imul
loop
test
loop
xchg
loop
loopew
in
jecxz
in
call
loop
sbb
loop
jb
loop
mov
loop
xchg
in
in
in
in
out
in
out
in
in
in
in
in
jmp
loop
inc
loop
in
out
in
in
in
loop
in
out
in
out
in
loope
in
loop
in
out
in
call
loop
ds
in
in
in
out
in
loop
in
jecxz
in
in
in
loop
in
loop
in
out
in
call
loop
sub
loop
sub
loop
pop
in
in
call
loop
es
in
in
in
out
in
in
in
loop
in
jecxz
in
jmp
loop
out
call
loop
dec
in
in
jecxz
in
in
in
jecxz
in
in
in
call
loop
arpl
loop
inc
call
loop
push
call
loop
push
call
loop
std
jecxz
in
loop
in
loop
in
out
in
out
in
in
in
in
in
jecxz
in
out
in
call
loop
or
loop
cmp
loop
mov
loop
adc
loop
mov
jecxz
in
out
in
call
loop
imul
loop
hlt
loope
in
in
in
in
in
jecxz
in
in
in
out
in
out
in
call
loop
call
loop
pop
loope
in
out
in
call
loop
in
loop
lcall
in
jecxz
in
in
in
in
in
jecxz
in
loope
in
jecxz
in
jecxz
in
in
in
in
in
in
in
loop
in
jecxz
in
loope
in
call
loop
sti
call
loop
lret
out
in
out
in
out
in
call
loop
enter
mov
loope
in
in
in
in
in
loop
in
out
in
jecxz
in
loope
in
call
loop
fsub
loop
sbb
loop
dec
call
loop
jle
loop
xor
loop
cmp
loop
jae
loop
shl
loop
mov
out
in
jecxz
in
in
in
loop
in
in
in
in
in
out
in
call
loop
xor
loop
jne
loop
xlat
out
in
jecxz
in
out
in
out
in
in
in
in
in
loop
in
out
in
call
loop
sbb
loop
jo
loop
xchg
out
in
in
in
loop
in
in
in
loope
in
call
loop
sbb
loop
jmp
loop
mov
out
in
call
loop
mov
loop
adc
loop
inc
jecxz
in
loop
in
jecxz
in
in
in
out
in
loope
in
out
in
jmp
loop
imul
loop
fsubp
loop
ss
in
out
in
out
in
loope
in
out
in
in
in
loop
in
out
in
call
loop
hlt
loope
in
in
in
jmp
loop
dec
call
loop
loop
loop
xor
loop
aaa
call
loop
xor
loop
ss
in
out
in
jmp
loop
xchg
out
in
out
in
in
in
loop
in
call
loop
sub
loop
shl
loop
in
in
in
in
in
in
loop
in
out
in
loop
in
loop
in
in
in
loop
in
loop
in
in
in
loop
in
in
in
in
in
out
in
loop
in
in
in
call
loop
clc
in
in
jmp
loop
add
loop
dec
in
in
out
in
in
in
loope
in
out
in
out
in
out
in
jmp
loop
loop
xor
loop
adc
in
in
call
loop
adc
loop
or
loop
xchg
loope
in
call
loop
cmp
loop
daa
call
loop
adc
loop
inc
out
in
call
loop
sbb
loop
fxam
loop
ss
in
in
in
call
loop
jns
loop
inc
in
in
in
in
in
in
jecxz
in
in
in
out
in
out
in
out
in
in
in
out
in
out
in
jecxz
in
jmp
loop
enter
aaa
in
in
in
in
call
loop
stc
loop
in
out
in
in
in
in
in
in
in
in
in
out
in
out
in
jecxz
in
out
in
in
in
jecxz
in
in
in
in
in
loop
in
in
in
loop
in
loop
in
call
loop
fsubrp
loop
pavgw
in
loop
in
jmp
loop
xchg
jecxz
in
call
loop
dec
jecxz
in
in
in
loop
in
out
in
loop
in
loope
in
in
in
out
in
call
loop
mov
loop
push
in
in
loope
in
out
in
out
in
jecxz
in
jecxz
in
in
in
jecxz
in
out
in
call
loop
and
loop
dec
call
loop
pop
loope
in
loop
in
out
in
out
in
in
in
loop
in
in
in
jecxz
in
out
in
jmp
loop
stos
out
in
loop
in
loop
in
in
in
jecxz
in
out
in
loop
in
in
in
loop
in
out
in
call
loop
xchg
loop
push
out
in
loop
in
loop
in
loop
in
out
in
jecxz
in
in
in
out
in
call
loop
shl
loop
cli
loop
in
jecxz
in
out
in
out
in
in
in
jecxz
in
loope
in
in
in
in
in
jmp
loop
hlt
out
in
out
in
in
in
in
in
loop
in
jecxz
in
loop
in
loope
in
in
in
loop
in
in
in
call
loop
and
loop
or
loop
dec
jmp
loop
daa
in
in
in
in
out
in
jecxz
in
call
loop
call
loop
mov
out
in
out
in
loop
in
call
loop
add
loop
jns
loop
add
loop
adc
loop
xchg
out
in
in
in
out
in
in
in
in
in
call
loop
cwtl
jecxz
in
loope
in
out
in
loope
in
out
in
in
in
in
in
loop
in
call
loop
add
loop
sbb
loop
loop
loop
add
loop
xor
loop
and
loop
pop
loope
in
in
in
out
in
in
in
call
loop
lret
out
in
jecxz
in
call
loop
push
loop
in
jecxz
in
loop
in
loop
in
in
in
out
in
jmp
loop
push
jecxz
in
jmp
loop
in
loope
in
out
in
loop
in
out
in
in
in
out
in
in
in
out
in
loop
in
loop
in
call
loop
clc
out
in
jecxz
in
loop
in
out
in
in
in
in
in
jecxz
in
jmp
loop
jmp
jecxz
in
in
in
in
in
loop
in
call
loop
out
in
jmp
loop
scas
out
in
loope
in
in
in
in
in
loop
in
loop
in
out
in
out
in
out
in
loope
in
out
in
out
in
out
in
in
in
out
in
out
in
in
in
in
in
out
in
loop
in
out
in
call
loop
sti
jecxz
in
jecxz
in
in
in
loope
in
in
in
out
in
out
in
call
loop
jbe
loop
inc
out
in
out
in
jecxz
in
call
loop
adc
loop
shl
loop
add
loop
aad
loop
sbb
call
loop
std
in
in
loop
in
in
in
out
in
jmp
loop
xchg
in
in
call
loop
outsl
loope
in
call
loop
cld
in
in
out
in
loope
in
jecxz
in
jmp
loop
push
jmp
loop
push
jecxz
in
out
in
out
in
call
loop
mul
loop
sahf
in
in
loop
in
jecxz
in
in
in
loop
in
out
in
out
in
out
in
call
loop
pop
loop
in
loop
in
out
in
call
loop
repz
in
in
in
jmp
loop
sub
loop
in
out
in
in
in
out
in
in
in
out
in
loope
in
jecxz
in
in
in
call
loop
in
call
loop
xchg
loop
push
in
in
jecxz
in
loop
in
out
in
in
in
jecxz
in
loop
in
jecxz
in
loop
in
loope
in
in
in
out
in
out
in
out
in
out
in
call
loop
fwait
in
in
in
in
out
in
out
in
in
in
in
in
in
in
in
in
call
loop
loope
loop
jns
loop
cmp
loop
jg
loop
and
in
in
in
out
in
loop
in
out
in
jecxz
in
out
in
call
loop
cld
out
in
jmp
loop
inc
out
in
jecxz
in
in
in
loope
in
jmp
loop
ftst
loop
mov
loop
add
loop
and
loop
nop
jecxz
in
call
loop
add
jecxz
in
jecxz
in
call
loop
cs
in
loop
in
loope
in
in
in
jecxz
in
in
in
jecxz
in
out
in
out
in
loop
in
in
in
in
in
loop
in
call
loop
xchg
loope
in
jecxz
in
call
loop
mov
loop
in
out
in
out
in
loop
in
loope
in
jecxz
in
jecxz
in
jecxz
in
out
in
jmp
loop
jbe
loop
or
loop
lret
in
jecxz
in
call
loop
xor
loop
pop
out
in
loop
in
in
in
out
in
loope
in
call
loop
es
in
out
in
call
loop
xchg
loope
in
out
in
call
loop
fucomip
loop
mov
out
in
out
in
in
in
loop
in
loope
in
jecxz
in
in
in
call
loop
push
jmp
loop
scas
out
in
jecxz
in
jecxz
in
in
in
loope
in
jmp
loop
clc
out
in
loop
in
jecxz
in
out
in
in
in
jecxz
in
loope
in
call
loop
sub
loop
aas
jmp
loop
shl
loop
jecxz
loop
shl
loop
xchg
out
in
out
in
jecxz
in
out
in
loope
in
loope
in
out
in
in
in
loop
in
jecxz
in
loope
in
loop
in
loope
in
out
in
loope
in
jmp
loop
scas
call
loop
imul
in
out
in
out
in
in
in
in
in
jmp
loop
out
in
loop
in
loope
in
in
in
jecxz
in
out
in
loop
in
loope
in
call
loop
xlat
loope
in
call
loop
loop
out
loop
sbb
call
loop
daa
jmp
loop
mov
in
in
call
loop
fsubp
loop
cmp
loop
in
in
in
in
jmp
loop
xor
loop
loop
in
loop
in
out
in
jecxz
in
out
in
out
in
out
in
in
in
call
loop
xor
out
in
loope
in
in
in
out
in
out
in
loope
in
call
loop
insb
call
loop
push
in
in
call
loop
xor
loop
out
in
in
in
in
in
out
in
in
in
in
in
in
in
loope
in
in
in
out
in
in
in
in
in
loope
in
loope
in
loope
in
loop
in
out
in
in
in
in
in
call
loop
hlt
call
loop
push
loop
pop
loope
in
loope
in
jecxz
in
loop
in
loope
in
out
in
loop
in
in
in
out
in
jecxz
in
in
in
loope
in
out
in
call
loop
xor
loop
dec
out
in
in
in
jecxz
in
out
in
call
loop
lret
in
loop
in
jmp
loop
push
jecxz
in
in
in
in
in
call
loop
test
loop
mov
out
in
loop
in
loope
in
jecxz
in
out
in
out
in
jecxz
in
in
in
loope
in
in
in
out
in
loop
in
loop
in
jecxz
in
jecxz
in
in
in
call
loop
js
loop
stos
jecxz
in
in
in
out
in
out
in
loop
in
in
in
in
in
jecxz
in
call
loop
cmp
loop
and
in
in
in
in
in
call
loop
pusha
in
in
jmp
loop
add
out
in
loop
in
jecxz
in
in
in
out
in
in
in
in
in
out
in
loop
in
add
pushl
call
add
call
pushl
cmp
add
add
xor
jmp
add
cmpsl
add
sbb
divb
add
call
addl
add
xchg
pop
imul
push
push
add
mov
add
fcomp
flds
add
fmulp
addb
popa
add
sub
xchg
scas
jmp
adc
ljmp
into
fnstenv
jl
std
lahf
daa
add
jno
jmp
sbb
add
ret
add
add
add
fnstenv
faddl
xchg
xchg
jbe
add
out
mov
add
fldenv
ljmp
inc
add
add
arpl
call
add
pop
mov
add
lock
in
pop
mov
add
addb
movsb
add
sbb
pop
jb
incl
add
push
add
sub
cmp
add
add
add
dec
add
xchg
inc
add
inc
add
xchg
fsubl
out
xor
lods
mov
xor
lcall
mov
adc
pushl
add
ljmp
iret
fldln2
push
add
adc
dec
fistpll
pop
xchg
push
add
lods
xor
incl
add
add
lahf
mov
rolb
dec
xchg
out
add
lcall
xor
cmp
call
xor
push
add
pusha
add
addb
outsl
sub
add
addb
mov
mov
add
pop
xchg
int
addl
bound
pushl
sti
nop
xor
cmp
sti
xchg
jno
inc
add
jae
mov
lock
push
test
mov
call
pushf
shlb
or
add
add
imulb
jmp
add
cmp
outsb
shl
inc
add
int
adc
incl
in
jb
call
ljmp
ja
add
xchg
stos
das
pop
or
xadd
sub
addl
fnsave
or
xchg
cltd
stos
sbb
call
into
ss
ja
decb
mov
xchg
adc
cmp
xchg
mov
pop
pop
pop
out
xor
add
add
add
fsubrs
jno
pushl
add
mov
sub
sub
mov
ret
and
mov
mov
fcoms
movsb
add
jmp
ljmp
sbb
add
ljmp
add
pop
insb
sahf
and
filds
add
mov
rolb
add
scas
xor
outsl
addl
add
cld
pop
flds
add
add
xor
jl
lods
dec
movb
daa
add
fsubs
aad
xor
decl
add
aaa
mov
or
add
loop
mov
add
incl
jmp
movl
jbe
imul
in
adc
cmp
sub
mov
or
int
dec
daa
add
and
call
xchg
test
mov
das
xchg
daa
add
test
out
rcpps
incl
add
call
add
mov
scas
cmp
jnp
add
add
mov
and
jmp
mov
xchg
pop
mov
pop
pop
lods
js
mov
cwtl
mov
dec
or
or
in
xor
dec
jmp
add
rcrl
jp
add
add
add
lcall
push
add
in
dec
mov
bound
lcall
or
aas
add
push
jns
add
mov
jge
add
add
dec
jae
jmp
add
add
test
imul
xchg
popa
add
outsl
ret
outsb
sahf
jle
dec
xchg
fimull
dec
dec
call
shlb
add
mov
int3
xor
fisttpl
add
inc
add
xchg
push
add
add
cmp
hlt
push
cmc
ret
add
push
sub
fildll
cmpsb
add
js
int
add
mov
add
sub
push
add
xor
cmp
insb
sbb
inc
add
fimuls
repnz
testb
stc
add
jmp
int3
rclb
and
out
lds
pop
xlat
adc
jbe
add
add
arpl
jmp
add
out
sti
mov
add
loop
sub
push
push
add
ljmp
imul
adc
std
stc
aad
push
sub
lret
mov
js
out
fisubl
lea
mov
mov
notb
or
add
add
dec
mov
add
popf
push
add
pop
aas
add
incl
add
add
sub
movsb
add
add
push
add
mov
add
scas
push
inc
add
add
call
rolb
add
mov
pop
xrelease
inc
add
or
add
add
xor
jge
loop
test
addl
sub
and
stos
adc
pushl
popa
add
shlb
lcall
add
dec
adc
jl
shrl
add
cmp
insb
stos
or
cld
fisttpl
add
addl
add
and
call
adc
mov
push
lret
push
add
push
movb
add
incl
add
arpl
cmp
add
sub
daa
add
pop
pop
mov
adc
inc
add
pop
insl
fisubl
mov
movsl
add
outsb
je
add
cld
pop
mov
data16
mov
add
xor
add
add
xchg
cmp
inc
add
ficomps
and
incl
out
mov
mov
jbe
mov
movsl
add
repnz
add
xor
call
incl
add
add
lcall
sbb
jle
cli
mov
sub
add
add
add
adc
jnp
add
add
jno
decl
mov
incl
decl
fs
add
add
das
ja
ret
push
push
add
lahf
push
jecxz
testb
xlat
push
les
adc
decl
sub
pop
pop
daa
add
inc
add
xor
lcall
adc
push
jl
add
sbb
jmp
add
add
movsb
add
add
pop
xchg
mov
int3
mov
add
insb
mov
dec
addb
add
dec
fimuls
rcr
cwtl
mov
push
push
movb
add
lcall
ficoml
add
inc
add
add
cmc
fsubrl
pop
sbb
loopne
mov
add
mov
add
lcall
fdivrl
add
rcrb
sub
add
lret
mov
push
add
or
cli
xor
sbb
std
sub
repnz
mov
mull
add
ret
add
cli
xor
and
ljmp
scas
push
add
adc
call
cwtl
adc
xchg
das
xchg
add
and
ljmp
xor
or
hlt
jmp
jle
add
into
sti
push
add
sub
push
mov
cmc
xor
cld
mov
add
dec
sbb
adc
add
add
scas
cmp
add
add
xchg
sbb
cli
sahf
cmpsb
add
pushl
xor
ljmp
add
mov
loope
int
mov
add
in
inc
add
jae
pushl
add
jnp
movb
xchg
ljmp
add
sub
movsb
add
add
xor
incl
add
cld
daa
add
jmp
in
dec
jg
cmp
jns
repz
jae
jmp
add
add
imul
cld
pop
pop
adc
add
add
push
add
push
add
push
mov
add
popf
cmp
jg
add
enter
push
cld
aaa
test
and
bound
decl
mov
stc
mov
pop
sbb
icebp
mov
ljmp
mov
les
sbb
fwait
add
ljmp
mov
fadd
add
out
test
add
shr
adc
jmp
add
sti
std
and
push
jne
outsl
pop
add
jmp
add
dec
insb
scas
mov
push
inc
add
pop
push
add
push
jno
jmp
pushl
cmp
imul
adc
ljmp
adc
jnp
push
adc
lcall
pop
dec
movsl
add
decl
add
mov
out
insl
add
jmp
lahf
dec
aas
cmp
xor
decl
js
add
decl
add
incl
cmp
dec
push
add
cmpsl
add
incl
decl
dec
std
jns
pop
fdivrp
repnz
mov
sbb
faddl
add
jmp
pop
daa
add
std
xor
call
mov
mov
and
or
cmp
push
add
lcall
ret
add
ljmp
mov
fmuls
inc
add
lahf
mov
add
pop
adc
xchg
jne
mov
or
movsl
add
aaa
jb
pushl
lcall
xchg
jo
ficomps
stos
xchg
loop
cmp
addr16
sub
cld
xchg
movl
mov
fidivrl
loopne
push
add
jae
incl
jmp
add
cltd
push
repnz
addl
add
jmp
inc
add
aas
adc
jmp
int3
fadds
add
ljmp
add
test
bound
call
nop
add
pushf
or
pushl
add
sahf
repnz
push
mov
add
ss
pusha
add
push
add
push
loope
movb
pop
xchg
fdivr
loop
addb
jo
std
enter
jo
call
decl
or
lcall
add
push
push
add
mov
movl
push
inc
add
add
ret
add
loop
ja
add
dec
add
ljmp
add
mov
incl
add
sub
testb
push
xchg
mov
add
arpl
pushl
ljmp
lcall
push
add
cmp
add
popa
add
or
icebp
dec
cltd
sbb
sbb
scas
cmp
loopne
mov
adc
in
sub
push
push
push
push
push
call
test
jne
push
push
call
test
jne
mov
lea
push
push
push
push
call
push
call
xchg
cld
lea
sub
mov
lock
lea
lock
ret
jmp
add
pop
mov
sub
outsl
push
add
dec
iret
push
add
clc
shl
add
mov
in
push
add
jmp
add
push
add
scas
clc
or
ret
add
add
fwait
enter
lock
add
fsubrs
sbb
dec
xor
add
add
mov
jo
call
dec
jecxz
dec
mov
pop
adc
pushl
popf
fwait
movsb
add
mov
loopne
rol
add
ret
jge
adc
jmp
add
leave
mov
sub
add
dec
xlat
imul
add
call
rcrl
imul
add
push
add
inc
add
fidivrl
add
jb
call
stos
call
stos
sub
add
push
add
mov
mov
add
fstpl
add
adc
jmp
push
add
pop
and
in
movsl
add
xchg
addl
outsl
add
lcall
xchg
pop
mov
lcall
movb
add
push
mov
add
add
jp
add
sarl
cmp
lahf
cwtl
movl
inc
add
add
mov
add
add
push
mov
add
dec
pusha
add
pop
in
out
clc
imul
adc
add
in
cltd
jae
jmp
adc
add
adc
incl
decl
add
add
xchg
push
add
shr
inc
add
bound
call
mov
add
add
lret
decl
mov
xchg
cmpsl
add
mov
add
fwait
pop
add
push
mov
add
arpl
pushl
scas
push
add
cmp
add
add
add
mov
add
outsb
icebp
mov
insl
shll
ret
add
mov
int3
mov
inc
add
dec
stos
sti
lds
lahf
mov
pop
mov
pop
xor
jmp
mov
data16
mov
lock
add
or
add
pop
pop
cmp
fs
add
pushl
add
jmp
jnp
iret
xchg
stc
sbb
sub
inc
add
mov
sti
inc
add
addb
add
lock
incl
add
pop
cmpsb
add
call
mov
in
pop
adc
jmp
scas
xchg
int
pop
sbb
lods
pop
dec
and
ljmp
push
mov
or
aaa
xchg
pushf
and
ljmp
pop
cli
jb
jmp
jne
sarb
mov
sub
in
fidivrs
data16
jo
jmp
add
and
dec
mov
sub
add
arpl
lcall
add
clc
or
dec
dec
xlat
arpl
inc
add
adc
lcall
data16
cwtl
testb
jle
add
popf
jg
icebp
test
mov
and
addb
add
adc
push
jmp
add
leave
xchg
mov
add
jecxz
xor
ds
xchg
mov
add
pop
sub
mov
dec
or
add
push
add
add
push
add
ljmp
add
and
test
cmp
addl
je
dec
out
fsts
add
jo
lcall
add
jno
jg
sub
jns
add
into
xor
enter
lret
ljmp
jmp
sub
mov
add
fiaddl
add
add
ficoml
dec
push
add
push
cmpsb
add
add
and
jmp
pushl
add
addb
add
push
add
movb
nop
sti
sub
add
popf
or
mov
dec
into
into
sbb
jmp
add
pop
xor
pusha
add
xor
add
outsl
or
mov
mov
rolb
dec
hlt
outsl
push
je
xor
call
add
add
incl
dec
jo
call
pushl
je
add
decl
fcmovbe
jmp
inc
add
pushf
inc
add
lock
dec
aam
xor
adc
ljmp
gs
add
add
pushl
add
out
iret
pushf
jns
aad
jge
dec
pop
aad
sub
rol
add
popa
add
dec
add
xchg
movsb
add
decl
insl
movl
decl
fldt
xchg
push
add
sahf
sbb
add
add
mov
add
add
pop
mov
fsubs
adc
jmp
dec
lods
push
pop
repnz
jmp
add
lcall
pushl
pushl
shll
add
lcall
inc
add
sbb
sbb
add
sbb
add
mov
jg
add
pop
movb
sub
add
data16
add
sub
nop
inc
add
stc
bound
call
xchg
lret
in
pop
jge
lret
xor
and
add
inc
add
cmp
mov
pop
lock
jecxz
js
popf
je
add
mov
fsubs
xor
mov
lock
dec
js
mov
insl
dec
inc
add
add
test
sti
sbb
enter
add
call
add
xchg
xchg
mov
mov
fnsave
lea
dec
pop
call
jnp
add
jno
jmp
add
jl
add
add
xor
ljmp
sbb
add
pop
or
lahf
sub
lcall
jae
jmp
xor
jmp
add
arpl
call
mov
add
das
addb
add
jle
jmp
add
movb
add
mov
add
push
loopne
lret
push
inc
add
scas
jnp
imul
jns
add
sbb
call
add
jle
shlb
add
mov
adc
ljmp
or
add
and
add
xchg
into
addb
add
add
out
lcall
scas
jecxz
stos
add
pushl
incl
incl
add
add
and
icebp
jns
add
mov
add
lea
add
add
shl
add
xchg
dec
push
add
add
pushl
jmp
sub
add
add
adc
dec
dec
bnd
jl
add
push
into
fwait
ret
add
popa
add
mov
imul
jns
sbb
pop
loope
or
lods
insb
in
fxch
and
lcall
add
add
push
lock
add
decl
add
loope
cmp
rorl
add
add
add
add
test
mov
shll
xor
jmp
cmp
mov
push
add
xchg
data16
fyl2xp1
jle
cmp
inc
add
dec
xchg
jecxz
jl
pop
hlt
xor
mov
add
scas
mov
imul
adc
dec
jb
lcall
add
lcall
mov
mov
add
fdivrl
aaa
mov
push
dec
cld
call
fsubr
movsl
add
decl
leave
out
inc
add
mov
add
add
pop
inc
add
xchg
xchg
js
pop
aaa
xchg
adc
jmp
add
push
bound
call
pop
je
xchg
sahf
bound
decl
jmp
ljmp
lea
xchg
call
repnz
insb
inc
add
sbb
inc
add
jnp
jl
add
cmp
add
jmp
push
add
sbb
out
decb
aad
add
xchg
roll
add
dec
jo
dec
aam
add
decl
xor
jmp
add
fwait
jecxz
mov
add
jge
add
mov
pop
rcrl
insl
shrl
adc
incl
decl
add
mov
add
call
add
add
decl
sbb
sbb
xchg
data16
rcll
add
pop
jg
add
pushl
int3
pop
lock
ret
push
add
cs
add
jp
add
sub
idivb
sbb
add
add
loop
roll
add
movsb
add
out
jecxz
and
jmp
add
mov
or
jp
in
and
jmp
add
cltd
outsb
dec
cmp
cmpsb
add
pop
sahf
jg
dec
popa
add
sub
or
jmp
add
cmp
jg
add
add
cmc
sub
lea
add
lcall
or
rolb
add
popf
inc
add
dec
inc
add
ljmp
lods
cltd
stos
cli
mov
xchg
aas
push
out
addl
add
push
iret
mov
addb
rolb
add
jg
add
decl
dec
xor
lret
cmpsb
add
jmp
add
mov
aam
mov
jge
add
aaa
adc
pushl
and
clc
movl
pop
cs
add
add
push
add
daa
add
add
mov
jb
pushl
cmpsb
add
test
or
add
lret
jmp
add
imulb
test
mov
daa
add
add
add
add
jmp
jmp
ljmp
jge
jno
decl
lret
loopne
jp
addl
or
outsb
test
loop
or
bound
lcall
lock
or
adc
das
mov
jmp
cmp
loope
and
fdivp
mov
lods
ljmp
add
stos
repnz
add
xchg
pop
ficompl
add
incl
sub
decl
inc
add
push
add
mov
out
cmpsl
add
cmp
add
push
push
sbb
add
add
imul
jp
mov
adc
dec
out
push
nop
or
decl
jno
inc
add
sbb
add
cmpsb
add
call
add
mov
mov
add
scas
xchg
addl
inc
add
mov
add
add
leave
ljmp
mov
stos
out
stos
sbb
jb
incl
add
xchg
pop
add
or
inc
add
loop
jnp
jae
jl
add
add
addb
xchg
lcall
incl
add
cmp
add
stc
fwait
add
call
add
adc
pushl
add
fidivs
cmp
add
jl
test
popf
frstor
ljmp
call
pop
lret
add
pop
and
decl
add
lcall
add
push
add
and
dec
ds
add
scas
lcall
jo
push
adc
jg
add
xor
call
mov
jnp
add
add
add
in
xor
push
inc
add
add
or
enter
add
add
fyl2x
fwait
mov
add
jmp
popl
fsts
add
ret
add
cmp
sar
adc
decl
add
push
movsl
add
xor
jmp
add
mov
arpl
jmp
adc
add
xchg
aas
dec
repz
fucomip
cmp
add
dec
mov
add
add
pushl
add
icebp
mov
pop
xlat
enter
les
outsl
pop
nop
cmp
dec
in
sub
add
push
add
jb
decl
insl
jbe
add
add
in
cli
rcrl
arpl
call
add
fistpl
je
push
add
stc
leave
lods
adc
add
xor
add
ret
mov
cmp
push
add
inc
add
scas
prefetch
repnz
mov
dec
add
xor
ljmp
leave
xchg
jmp
pushf
dec
mov
add
ficoml
add
inc
add
incl
push
add
mov
cmpsl
add
pop
icebp
mov
pop
push
add
add
push
leave
sbb
push
add
iret
mov
add
decl
add
add
call
inc
add
xor
ljmp
pushl
and
fidivrs
mov
clc
into
xlat
jle
add
add
lea
sti
add
add
xor
inc
add
addb
add
fldl
ljmp
and
inc
add
call
sub
cli
fistpl
add
add
add
pop
and
push
xchg
fistps
add
out
push
add
ret
add
iret
test
and
pushl
add
mov
push
scas
or
lea
incl
adc
add
add
xor
call
add
outsb
sbb
scas
add
call
jl
inc
add
add
add
loopne
mov
lret
push
or
mov
add
mov
add
and
decl
decl
cli
loop
xchg
sub
add
mov
inc
add
add
decl
sub
sub
inc
add
mov
stos
aad
fists
call
add
xor
cmp
add
pop
push
add
out
mov
add
add
add
add
or
dec
mov
lcall
das
aas
push
pop
pop
data16
add
mov
add
lds
roll
jmp
add
ljmp
add
ljmp
inc
add
mov
popf
mov
add
mov
add
sbb
add
lock
add
jmp
mov
mov
mov
fiadds
add
scas
cld
or
add
mov
incl
ficompl
cmpsl
add
xchg
rcrb
mov
add
mov
fisubrl
addl
add
add
in
pop
nop
pop
push
cmp
add
sbb
das
mov
rolb
add
cwtl
daa
add
mov
ffreep
add
aas
cmp
xlat
aas
in
insb
stos
cmp
add
scas
sbb
sahf
rolb
addb
movsl
add
jmp
int
xor
add
add
insl
dec
lods
push
inc
add
mov
movl
jmp
add
add
loop
or
addl
sub
aas
sub
fdivs
test
mov
out
add
jmp
add
stos
adc
pushl
cwtl
pop
jle
add
add
movsl
add
xor
ljmp
add
incl
das
data16
dec
fstpl
loopne
das
push
dec
jnp
add
aad
filds
in
inc
add
test
aaa
lds
sub
add
sub
xor
cmp
jae
in
push
mov
inc
add
dec
cltd
sbb
roll
add
addb
add
fmul
scas
cwtl
out
inc
add
push
dec
mov
add
in
cld
sbb
sbb
add
loopne
dec
pop
jge
fwait
repnz
jb
lcall
iret
add
sbb
ljmp
xor
mov
pop
jo
inc
add
popa
add
imull
add
add
mov
add
int
addl
pushl
add
pop
xor
decl
add
add
ret
add
outsb
inc
add
data16
add
xor
add
adc
pushl
ljmp
pop
outsb
pop
add
ljmp
arpl
lcall
add
pop
popa
add
cmc
pop
add
ret
add
sbb
loopne
sahf
push
cmp
movl
push
pop
push
repz
xchg
mov
jnp
pop
outsb
xor
lcall
insb
in
adc
push
dec
add
lcall
add
clc
push
jecxz
lds
pop
adc
push
jae
jmp
add
fistps
add
xchg
inc
add
sub
mov
popa
add
ljmp
add
mov
add
xor
incl
lds
xor
push
add
mov
add
decb
mov
add
int
or
push
jae
jnp
add
pop
add
add
jle
loopne
lea
addb
icebp
xor
call
add
sti
insb
int
pop
mov
push
add
sub
ljmp
xchg
insb
mov
ret
add
jmp
xchg
jge
sub
add
adc
mov
adc
push
xor
cmp
imul
add
mov
aas
in
jnp
add
insb
or
sti
scas
xchg
into
movl
and
lcall
ljmp
or
push
add
std
cwtl
push
mov
xor
add
add
cltd
xor
decl
stos
adc
decl
sub
jg
add
add
add
mov
add
xor
clc
shrl
pop
int3
outsl
and
jecxz
add
jmp
add
mov
rcrb
adc
call
cmc
aam
inc
add
add
add
jmp
add
clc
pusha
add
mov
add
insl
call
icebp
aaa
addb
add
and
add
sub
addl
xchg
mov
and
incl
add
push
pop
int3
push
nop
or
incl
add
lock
ljmp
adc
push
add
jp
add
mov
fcoml
add
mov
add
or
add
arpl
incl
decl
cld
jmp
dec
mov
scas
push
add
shrb
stc
shr
jbe
lret
jge
lods
jmp
xchg
outsb
out
push
xchg
push
add
jmp
inc
add
add
int
add
add
dec
pop
inc
add
jp
add
fists
add
mov
adc
decl
add
mov
add
lcall
fdivrs
call
out
jl
addb
add
mov
loopne
mov
xchg
outsb
test
dec
jmp
mov
mov
mov
loope
push
mov
loop
mov
add
push
sub
add
cmp
nop
jecxz
faddl
add
add
adc
incl
sarl
add
add
dec
and
fsts
cmp
add
decl
sti
repnz
pushl
testl
and
arpl
call
pop
sub
inc
add
and
lcall
sbb
xor
call
add
add
jmp
iret
adc
pushl
jns
clc
push
mov
add
sub
lcall
and
cmp
shll
pop
xchg
xor
cwtl
jecxz
push
mov
repnz
push
add
pop
add
fcoml
jp
cwtl
rolb
add
and
jmp
popa
add
ret
add
inc
add
mov
test
add
cmpsl
add
add
icebp
mov
add
decl
add
add
call
lods
mov
add
mov
mov
cmp
add
incl
ljmp
jbe
pop
pop
or
jmp
add
fnstsw
sbb
bound
lcall
jecxz
xchg
aad
xchg
inc
add
mov
mov
or
ret
mov
rcll
aam
add
push
add
add
into
je
add
add
pop
jno
pushl
cmp
add
pop
mov
cmp
fimull
push
add
xor
je
push
sub
fldt
lret
aam
sbb
sbb
jmp
push
add
lret
mov
push
add
roll
add
xchg
push
outsb
pop
inc
add
add
mov
insl
xchg
jbe
add
add
out
or
add
stc
or
add
bound
ljmp
adc
arpl
call
outsl
adc
lcall
mov
pop
add
inc
add
movl
loope
in
in
popf
mov
add
add
cmp
add
call
pop
pop
add
call
lcall
ds
int
add
add
hlt
outsb
lock
aam
add
dec
ja
add
adc
mov
mov
and
lcall
mov
add
fstps
add
cmp
mull
add
pop
xor
incl
adc
incl
add
call
inc
add
add
addb
add
adc
push
pop
mov
imul
xchg
stos
pop
pop
jns
mov
sub
push
fiadds
add
mov
scas
adc
pushl
test
shll
scas
insb
sbb
addl
push
jns
lret
aam
add
cs
add
jg
add
add
daa
add
enter
add
ljmp
jmp
lret
pusha
add
outsb
mov
mov
std
outsl
movl
test
and
ljmp
and
jmp
jg
daa
add
cmpsb
add
add
jmp
add
mov
mov
dec
and
fldl
movsb
add
enter
addl
add
adc
jge
cmp
jmp
add
stc
mov
add
mov
add
pusha
add
cmp
add
push
add
or
add
insl
inc
add
add
rolb
fimuls
add
add
lcall
add
dec
movhps
pop
add
jmp
decl
scas
or
push
add
or
loopne
data16
mul
add
xchg
rcll
call
add
mov
xor
call
dec
cltd
push
add
cmp
nop
adc
incl
add
add
add
jns
add
add
loope
ret
add
decl
sub
jp
add
sbb
int
wrmsr
add
xchg
or
mov
add
decl
dec
pop
mov
cs
jmp
add
pop
push
add
add
inc
add
addb
add
cmp
ss
add
sub
fdivl
addl
add
insb
into
out
addb
add
popf
cmp
rcrl
jno
jmp
jmp
add
lea
inc
add
pushl
incl
add
std
mov
lcall
popf
push
inc
add
pop
pop
pusha
add
mov
aaa
or
add
mov
xchg
stos
add
pop
fcmovne
sub
add
int
sub
aas
movsl
add
add
add
repz
add
in
stos
adc
ljmp
xchg
push
add
inc
add
test
push
std
out
jb
cli
jae
cli
ret
add
int3
xor
lcall
loop
add
lcall
incl
add
roll
mov
xchg
and
ret
jns
add
add
dec
icebp
movsb
add
or
sub
mov
xchg
xchg
imul
lcall
call
aam
add
push
fcompl
and
dec
jnp
inc
add
add
lcall
movl
cmp
ljmp
rclb
add
push
jne
les
lret
into
in
fwait
inc
add
cmpsl
add
or
add
ret
add
add
mov
mov
rcrb
icebp
lods
sahf
and
inc
add
loope
adc
insb
inc
add
aas
and
lcall
add
popf
jecxz
dec
dec
or
fidivrs
add
add
cmp
lea
jnp
mov
mulb
adc
jmp
decl
outsb
add
push
jno
ljmp
push
mov
sbb
push
jo
lcall
fwait
xor
rdmsr
add
sarb
add
decl
add
decl
loope
cmc
lret
add
js
nop
inc
add
push
add
pop
iret
adc
jmp
add
lds
mov
dec
mov
add
mov
popa
add
pop
stc
push
add
ret
mov
add
movsl
add
jl
addr16
adc
incl
add
add
repnz
adc
push
imul
add
stos
mov
imul
insb
xchg
sub
add
add
mov
dec
in
xchg
inc
add
sub
hlt
call
decl
and
mov
add
inc
add
insl
data16
add
cmpsl
add
in
push
add
mov
mov
mov
test
xlat
in
rolb
cli
adc
jmp
call
xor
ljmp
inc
add
addl
add
add
mov
add
add
jmp
push
add
cmp
add
add
cmp
cmpsl
add
pushf
and
mov
cmp
lods
dec
call
add
add
rorl
add
call
add
aas
xlat
pushf
mov
cmpsb
add
push
adc
ljmp
add
in
add
arpl
incl
mov
test
popf
sbb
daa
add
nop
mov
cs
cmpsb
add
ljmp
sar
cli
je
sbb
jbe
add
addl
add
push
pop
addl
enter
add
push
bound
call
in
jg
addl
add
daa
add
and
ljmp
fdivp
push
xchg
int3
sub
enter
adc
jmp
mov
jg
mov
add
call
fsubs
call
sub
cwtl
jl
mov
or
in
lret
add
sub
int3
jae
ljmp
add
mov
add
or
dec
lds
xchg
leave
lret
and
incl
ljmp
daa
add
add
add
jmp
add
add
bound
decl
idiv
repz
call
aas
bound
incl
leave
xor
ljmp
lods
add
lock
test
inc
add
add
scas
out
jmp
or
cmpsl
add
mov
add
insb
call
adc
xlat
fldl
add
addb
add
neg
add
decl
push
add
jmp
addr16
cwtl
inc
add
mov
pop
in
leave
cmp
add
or
rorl
add
hlt
cs
insb
leave
add
decl
arpl
fists
bound
call
in
test
xor
pushl
adc
call
fwait
xor
call
sbb
mov
add
xor
inc
add
add
out
out
rcrl
jp
add
pop
cmp
decl
add
popa
add
xlat
outsl
push
out
push
add
adc
pushl
movsl
add
lret
popf
sbb
test
inc
add
add
lock
and
mov
loop
aam
pop
imul
add
add
incl
sar
test
jne
add
add
inc
add
mov
add
lods
insl
repz
sub
add
mov
jg
add
mov
add
push
loop
movsb
add
adc
fdivp
push
add
xchg
movb
push
cmpsl
add
xchg
movl
add
aaa
imul
pop
jae
lcall
add
lret
add
cmp
jnp
test
movsb
add
roll
add
call
dec
addb
in
mov
add
cwtl
push
dec
and
or
add
inc
add
xchg
jo
cmp
add
incl
stos
gs
adc
dec
mov
int3
jnp
pop
sahf
repz
repz
add
push
sub
or
cmp
add
push
add
and
lcall
xlat
or
ja
cli
xchg
pop
ss
ret
add
add
xchg
rol
add
cmp
add
push
add
out
and
decl
adc
jmp
lock
add
scas
loop
adc
jmp
add
mov
add
fnstsw
xchg
mov
dec
pop
imul
int
add
xor
lcall
dec
fwait
and
jmp
add
or
sbb
add
jmp
mov
and
jl
or
add
inc
add
pop
push
add
sbb
mov
add
outsb
std
aad
add
jl
adc
bound
jmp
jmp
jns
ljmp
add
cld
sahf
fcompl
aam
jge
mov
add
add
inc
add
leave
mov
sti
in
push
mov
mov
add
add
test
adc
aas
xlat
xchg
out
sti
add
f2xm1
push
test
mov
mov
repnz
sbb
iret
aas
pop
and
pop
fbld
add
mov
and
add
imul
pop
mov
add
add
mov
add
decl
pop
bound
jge
xchg
push
inc
add
mov
addl
push
add
notb
jl
add
stc
cld
mov
add
add
xor
call
lock
arpl
mov
cmc
adc
pop
pop
call
add
dec
dec
cwtl
inc
add
pop
cmpsb
add
mov
and
ljmp
add
mov
cltd
jp
add
mov
sahf
repz
bound
incl
dec
cmc
mov
adc
lcall
data16
push
daa
add
xlat
mov
repz
jns
add
add
outsb
push
add
insb
imul
lcall
xor
add
inc
add
sbb
outsl
push
inc
add
and
in
incb
add
mov
add
les
mov
iret
lahf
inc
add
jne
addb
add
jo
jmp
add
bound
lcall
push
add
add
cmp
lret
xor
lcall
inc
add
and
pushl
std
add
cmp
push
scas
pop
sbb
iret
scas
repz
add
mov
ljmp
push
mov
fistpll
add
pop
fnstcw
add
add
pusha
add
and
jmp
add
fucom
add
fwait
lods
scas
and
and
adc
decl
imul
test
insl
out
sub
add
aas
nop
loop
inc
add
je
dec
inc
add
aas
mov
add
pop
roll
add
fwait
mov
movsb
add
mov
test
sti
das
out
cmp
adc
call
add
aad
xchg
jp
inc
add
lds
bound
lcall
jge
add
nop
imul
fstpt
mov
add
fstpt
add
nop
sub
add
ljmp
int
push
dec
jge
popa
add
or
cwtl
pushf
scas
xor
push
cwtl
cmpsl
add
fldenv
xchg
repnz
add
jne
add
sbb
addl
adc
pushl
cmpsb
add
cmp
mov
add
xchg
and
decl
lods
int
js
adc
jmp
add
add
push
add
and
jae
pushl
dec
push
dec
mov
ret
add
xor
incl
in
inc
add
loope
ret
add
lcall
add
fisubs
test
add
inc
add
pop
add
loop
sub
call
call
add
pop
out
xlat
stc
xchg
jns
repnz
add
fistps
pop
mov
je
pop
mov
adc
lcall
out
sub
add
mov
cmp
push
cmp
aas
mov
add
pop
dec
cmp
movsb
add
add
dec
cmp
mov
data16
or
into
or
dec
mov
nop
mov
or
and
sbb
rcll
dec
cmp
jmp
mov
push
lret
add
scas
mov
jecxz
xchg
sahf
adc
pushl
test
add
push
add
out
xchg
mov
add
test
popf
jmp
push
add
add
lcall
dec
push
cli
cmpsb
add
jmp
pushl
and
decl
pushf
sbb
addb
pop
pop
xchg
mov
outsl
or
imul
in
pop
stos
adc
incl
add
mov
filds
pop
add
add
add
incl
sti
cmp
add
push
lock
cmp
jbe
int3
js
add
sahf
add
jmp
mov
mov
lcall
add
mov
pop
sub
jmp
add
test
inc
add
addb
pop
jg
add
mov
in
repnz
xchg
inc
add
mov
call
cli
std
pop
dec
or
add
jmp
add
add
es
sub
test
stos
mov
dec
sub
scas
pop
cmpsb
add
add
xor
ljmp
aam
add
pusha
add
add
mov
decl
lcall
add
stos
movsl
add
add
sbb
test
push
add
shl
add
add
dec
shlb
or
jns
out
inc
add
push
cmc
in
adc
faddl
add
call
ljmp
fsubl
sar
mov
add
xor
add
ds
icebp
movb
cmc
jbe
repnz
inc
add
imull
repz
lea
lds
lds
aad
add
xchg
das
imul
xchg
cli
jmp
loope
cltd
jmp
jge
pop
lahf
xchg
call
add
icebp
add
cmp
xchg
inc
add
xor
jle
fmull
add
add
lcall
mov
or
fsubrs
add
call
aaa
fwait
sub
jmp
andnps
sub
push
lods
xchg
cmp
inc
add
jb
jmp
add
jmp
add
add
sbb
hlt
in
ficoml
call
ljmp
pop
daa
add
xor
incl
pop
sub
add
add
push
add
imul
add
sarb
xor
ljmp
add
decl
call
push
sbb
add
adc
sti
mov
jmp
add
add
fidivl
jecxz
xchg
sub
jge
add
cs
leave
inc
add
out
hlt
pop
sub
pop
cwtl
js
mov
add
loop
dec
clc
std
bound
call
add
pop
mov
push
movb
icebp
push
cmp
movl
push
add
cmc
xor
jmp
add
adc
pushl
incl
pushl
ljmp
mov
dec
mov
add
add
xchg
fsub
add
int
out
pop
inc
add
inc
add
add
pushl
clc
in
cmp
add
cmp
cmp
and
add
add
mov
dec
jne
add
xchg
mov
out
push
add
add
bound
lcall
adc
jmp
pushl
add
repz
push
jg
add
add
lock
pushl
dec
ljmp
push
and
pushl
add
aad
push
add
add
cld
and
stos
movsb
add
aaa
std
inc
add
addb
mov
in
shll
add
dec
fdecstp
mov
sub
add
or
inc
add
les
insl
add
loopne
fstpl
push
movhps
add
jno
pushl
add
fnstcw
pushl
pushl
mov
mov
and
jmp
fdivr
es
add
add
repnz
cmp
sti
push
sub
or
jecxz
repnz
push
add
sub
outsb
mov
in
inc
add
imul
and
pushl
push
movsl
add
add
loope
pop
pop
insb
push
add
iret
jo
ljmp
add
fistl
add
fwait
jmp
jno
jmp
pop
cld
rclb
fidivrs
cmp
mov
jg
jp
add
add
repnz
push
push
lcall
gs
popf
sub
add
push
fidivrs
dec
fmull
aaa
push
add
or
call
add
shl
push
pop
add
add
cmp
stos
dec
scas
je
add
test
add
and
out
add
ljmp
jb
ljmp
and
fbld
cmp
add
add
pushl
repnz
push
and
decl
jge
addl
add
lods
stos
fidivs
lcall
jp
and
sti
xor
ljmp
test
adc
decl
ret
xor
pushl
fsubs
add
mov
add
xchg
mov
adc
lcall
jno
call
decl
or
jle
rcr
cmp
fsubs
add
push
dec
push
add
sub
hlt
aam
add
inc
add
adc
add
cmp
add
inc
add
cmp
add
or
int
add
ljmp
sti
out
dec
mov
add
lret
cmp
inc
add
cmp
adc
punpcklwd
cmp
add
add
adc
ljmp
add
add
arpl
jle
mov
inc
add
sbb
int
addb
addb
out
pop
ficompl
roll
xchg
repz
in
call
pop
lcall
pop
mov
out
inc
add
shrb
push
add
jo
ljmp
add
punpckhbw
add
add
fisubl
add
jl
push
pusha
add
pop
bound
js
bound
incl
add
cmp
mov
add
add
add
add
lret
shll
push
adc
inc
add
imul
decl
and
adc
jmp
lcall
jmp
les
stos
ljmp
outsl
scas
pop
add
and
inc
add
xlat
inc
add
test
xchg
fisttps
mov
outsb
inc
add
call
mov
cld
pushf
push
add
insl
out
addl
pop
sbb
call
xor
pushl
in
pop
add
add
decl
jns
mov
mov
sub
inc
add
dec
das
add
pushl
sbb
jb
clc
in
and
pushl
push
aas
out
adc
call
sbb
add
ljmp
add
push
push
inc
add
add
into
jg
roll
rolb
jo
cli
stos
fistps
xchg
jns
ljmp
add
rorl
jmp
movsl
add
addl
incl
pop
add
add
stc
js
test
inc
add
or
fisttpll
add
add
movl
push
add
jge
push
add
xor
ljmp
jp
add
sbb
and
inc
add
cmpsb
add
test
insl
sbb
call
xchg
outsb
mov
test
add
aaa
std
out
jo
pushl
call
psllw
lcall
adc
decl
add
jmp
push
add
incl
add
jbe
inc
add
sbb
add
add
add
jmp
cli
push
add
fsubrs
add
xchg
jnp
movsl
add
xor
ljmp
add
fldl
add
push
add
ja
xchg
push
add
inc
add
dec
icebp
sub
cmp
loopne
mov
jge
imul
add
movsl
add
outsl
add
lcall
push
add
addb
inc
add
jp
add
int
inc
add
jb
inc
add
lcall
push
dec
sti
outsb
or
jnp
sub
jnp
sub
add
lcall
stc
cld
jbe
push
add
movsb
add
pop
sbb
inc
add
sbb
mov
leave
push
xchg
popf
xor
cmp
lret
test
arpl
jmp
mov
push
add
or
add
shrl
call
or
or
dec
xor
negb
lcall
xlat
mov
add
outsl
and
jmp
lods
call
decl
add
stc
sbb
push
mov
add
add
xchg
and
dec
test
inc
add
add
add
mov
jecxz
add
lcall
sub
add
lahf
xchg
xor
jns
push
movsl
add
mov
dec
insl
xchg
loope
mov
test
stc
jmp
add
call
add
lret
outsb
in
sti
and
fdivrs
add
decl
call
or
test
add
ljmp
notb
add
mov
in
add
lcall
add
jmp
add
cmp
add
mov
cmc
inc
add
push
ja
push
arpl
incl
add
jp
add
loopne
sti
roll
adc
jns
aam
add
inc
add
add
xor
pushl
incl
cld
cmp
js,pt
xchg
lcall
das
in
aam
sti
lcall
cltd
dec
out
cli
xor
decl
mov
cli
cli
xchg
iret
repnz
push
or
add
dec
in
insb
jbe
mov
push
mov
add
push
add
pop
or
xor
std
push
jmp
jmp
jge
add
popa
add
xchg
mov
add
sti
call
jb
mov
out
or
repz
imul
add
add
or
and
dec
idiv
jl
jle
add
clc
pop
enter
cmpsb
add
dec
jl
pop
jl
add
rolb
mov
add
sbb
pop
cmpsl
add
xchg
std
push
add
add
mov
add
sbb
imul
mov
lret
test
xchg
push
addl
add
add
pop
scas
out
roll
psraw
divb
add
dec
fadd
add
sbb
mov
sbb
or
add
data16
jmp
add
xchg
into
repnz
addb
in
outsb
ret
cmp
adc
test
lret
add
mov
add
call
adc
call
sbb
add
adc
jmp
add
test
ds
js
add
insb
mov
cmp
jb
jmp
add
decl
add
call
pop
mov
add
call
arpl
mov
add
in
addb
push
add
pop
lock
jnp
inc
add
add
add
ror
mov
call
add
add
dec
sub
div
jbe
and
call
xlat
loopne
add
or
cs
add
imul
adc
dec
xlat
ss
add
cmpsl
add
int3
les
rolb
sub
push
add
cmp
jmp
add
test
lods
pop
or
add
fidivrs
out
in
xchg
dec
mov
push
add
sub
rcl
les
stos
dec
pop
in
mov
sub
xchg
nop
iret
pop
aam
add
adc
inc
add
filds
add
xor
pushl
cmc
fwait
int
add
xor
ljmp
sub
insl
dec
repz
add
fistl
jmp
push
inc
add
idivl
add
hlt
movsb
add
stos
sbb
add
dec
xchg
popl
add
push
adc
decl
ficomps
lods
mov
add
xor
ljmp
data16
jmp
incl
incl
or
add
add
addb
mov
repz
arpl
pushl
sbb
add
jmp
add
add
call
jbe
adc
jmp
add
or
insb
shll
mov
add
pushl
ljmp
or
mov
add
shlb
xchg
push
jae
fisubrl
add
dec
stos
ret
add
add
add
jmp
jg
mov
lcall
cld
push
add
fiaddl
iret
shlb
add
int
add
das
add
jge
add
movb
imul
loopne,pt
push
rolb
push
adc
aam
jnp
add
xor
cmp
mov
add
cs
add
mov
xor
add
add
add
call
test
add
mov
add
and
pushl
add
call
out
pop
imul
fildll
imul
loop
mov
inc
add
ljmp
sub
loop
jae
jmp
mov
cs
mov
shll
add
xchg
mov
mov
xchg
mov
adc
push
xor
jmp
add
insl
cmp
incl
shr
test
addb
fisubs
add
mov
ljmp
je
add
sahf
mov
mov
jae
cmp
fsubs
add
decl
enter
add
add
fdivs
sub
mov
add
icebp
push
mov
cmp
dec
push
dec
mov
add
push
and
xor
fcmovnb
add
or
dec
leave
dec
movsb
add
shl
push
add
xstore-rng
cmpsl
add
call
add
std
insb
push
ret
jns
adc
dec
out
add
ljmp
push
add
fidivrs
pushf
cmovp
aas
sbb
clc
lds
mov
addl
mov
pop
sub
xchg
dec
inc
add
add
inc
add
lcall
xchg
xor
jmp
add
push
pop
jae
jmp
and
ja
jne
sbb
cmp
jns
mov
dec
xchg
mov
add
push
mov
popa
add
push
push
add
lods
xchg
cmpsb
add
mov
push
js
xchg
mov
cmp
add
call
lds
lcall
lcall
push
mov
outsb
mov
insl
add
stos
ljmp
add
sub
jle
add
add
push
pop
ja
cli
lods
inc
add
aam
add
movb
or
inc
add
pop
sub
cmp
nop
outsb
shlb
add
dec
add
add
jnp
xchg
aaa
pop
add
inc
add
cli
jb
jmp
add
xchg
push
mov
xchg
xor
ljmp
inc
add
hlt
mov
add
ror
sub
out
in
lods
xchg
pop
mov
add
cli
fcompl
rclb
js
pushf
and
jne
add
mov
and
js
add
xor
fcoms
xor
fmull
mov
shlb
decl
add
or
sbb
cmp
lcall
add
add
cwtl
adc
lcall
jl
inc
add
inc
add
add
and
xor
ljmp
dec
mov
add
pushl
add
jmp
add
stc
and
dec
push
add
js
add
sti
mov
and
decl
lds
insb
jmp
lods
mov
addb
cltd
shlb
add
xchg
cmpsb
add
jle
and
call
rorb
clc
jle
add
xchg
cmp
inc
add
inc
add
xchg
xchg
xchg
test
aaa
or
pop
cmp
and
pushl
add
data16
mov
push
cmp
add
lret
lds
push
out
divb
add
xchg
loope
inc
add
insl
mov
add
insb
add
incl
add
add
add
mov
xor
pushl
add
jmp
lods
rolb
repnz
add
push
add
add
cmp
movsl
add
add
mov
dec
rolb
xchg
iret
movsl
add
jns
in
pop
ja
idivl
js
pusha
add
jle
mov
add
xor
mov
pop
testl
repz
ljmp
mov
notb
add
in
test
call
add
scas
xor
add
add
incl
mov
jo
fcomp
push
leave
sub
push
or
pop
icebp
mov
ficoms
mov
add
in
ret
pusha
add
pop
aas
aas
test
scas
dec
out
sti
jl
pop
sarl
add
out
push
lods
leave
jne
les
push
add
addb
adc
push
es
add
call
add
cmp
imul
mov
decl
movsb
add
add
int3
mov
add
call
in
mov
lds
aaa
clc
mov
outsb
xchg
pop
dec
push
mov
add
adc
jbe
mov
pop
xchg
cmc
xchg
repnz
mov
add
ss
add
add
test
mov
add
test
stc
add
pushl
add
add
fcmovu
push
add
mov
scas
cmpsb
add
into
push
in
daa
add
addl
sub
jp
xor
add
add
out
in
fwait
out
in
roll
mov
int
or
pop
add
decl
xchg
xchg
jnp
les
adc
sti
imul
add
cmp
adc
fsubr
cli
ljmp
mov
jns
add
add
repz
incl
int3
xor
sub
add
bound
call
xchg
jne
out
mov
add
out
cmp
dec
imul
xchg
dec
lcall
add
mov
std
add
incl
add
fstl
jmp
add
add
lcall
mov
xor
jmp
add
add
add
cmp
jl
outsl
jmp
in
or
addb
enter
mov
push
aam
adc
mov
ds
pop
daa
add
xchg
inc
add
adc
pop
pop
add
add
add
mov
sbb
adc
call
fisttps
add
rcll
add
pop
and
incl
add
movl
add
sub
add
mov
lock
add
add
and
lcall
popf
inc
add
pop
xchg
ret
add
add
call
call
add
data16
sub
add
add
mov
push
jg
push
jge
imul
pop
mov
call
dec
sbb
jae
lcall
out
mov
dec
faddp
add
sbb
jecxz
jae
jmp
lcall
push
push
jecxz
ja
dec
out
mov
add
les
xor
add
add
cmp
movb
jmp
add
jno
call
and
sahf
repz
call
add
ljmp
mov
testb
pop
add
movsl
add
sbb
inc
add
sahf
rolb
add
push
jmp
and
decl
add
add
add
mov
add
or
push
add
inc
add
xor
incl
add
gs
dec
or
add
add
jae
incl
jl
sbb
add
stc
lods
dec
enter
add
adc
push
aam
add
cmc
jge
add
test
je
fldt
lret
ljmp
add
cltd
pop
pushf
loop
dec
scas
mov
shll
decl
int3
pop
ret
add
aam
jg
add
xor
pushl
ljmp
addb
add
pushf
jo
lcall
movb
add
mov
call
inc
add
dec
aaa
cmp
add
add
dec
in
sbb
and
pushl
cmp
xchg
sti
jg
sub
add
lret
add
add
inc
add
movl
pop
mov
add
add
or
cli
sub
ljmp
dec
inc
add
xchg
dec
addb
add
push
mov
add
pop
pop
push
cs
mov
adc
decl
ret
inc
add
lret
xor
pushl
jmp
cmp
data16
mov
pop
outsb
mov
outsl
scas
loope
ja
mov
xchg
and
decl
dec
inc
add
or
call
test
movsl
add
add
insb
pop
jo
inc
add
fsubrs
adc
call
sbb
bound
call
pop
addb
sub
es
lock
add
inc
add
scas
rcr
addb
add
jne
add
add
jmp
decl
push
add
popa
add
pop
test
push
mov
add
fmuls
lcall
mov
add
jmp
xor
jmp
add
xchg
pop
pop
dec
das
nop
xchg
aaa
sarb
add
mov
add
test
jp
add
data16
loope
xchg
or
inc
add
cmp
icebp
mov
jnp
inc
add
outsb
cmpsb
add
cmc
sbb
dec
sbb
add
add
push
popa
add
lret
movsl
add
aam
inc
add
push
ret
add
in
jle
mov
or
add
fwait
or
xor
jmp
add
call
push
add
lods
cli
sub
add
or
xchg
push
add
jns
add
jns
add
sbb
sbb
jmp
add
imul
lock
ljmp
jne
add
call
jo
lcall
add
shr
adc
add
add
in
xchg
imul
data16
popf
mov
add
sbb
adc
add
add
add
mov
je
fdivl
je
out
xchg
addl
dec
sbb
add
and
decl
dec
fbstp
add
fldenv
add
jne
add
repnz
add
lret
call
add
fwait
iret
in
adc
decl
stos
push
jo
ljmp
xlat
nop
fwait
add
call
add
aam
pop
mov
out
repz
faddl
add
icebp
lret
add
push
sti
pop
sahf
fistpl
stos
jb
ljmp
repz
xchg
fimuls
cli
mov
jnp
inc
add
mov
add
mov
ljmp
add
lock
add
cmp
sub
add
addb
mov
add
mov
add
push
add
mov
inc
add
add
js
mov
shrl
mov
add
add
fcompl
mov
sahf
push
cmc
shrl
fsubrl
inc
add
pop
loopne
cmp
arpl
decl
xchg
test
jmp
stos
dec
inc
add
ljmp
add
ljmp
mov
add
push
add
xor
dec
fstps
rclb
ljmp
add
or
jae
pushl
lcall
nop
pop
and
adc
decl
sbb
add
push
add
daa
add
add
jne
add
data16
xlat
sbb
add
movsl
add
add
pop
and
mov
add
mov
das
popf
pop
push
xchg
rolb
addl
jmp
fwait
sbb
add
jns
xchg
aam
add
mov
add
or
add
sub
mov
add
sahf
adc
incl
dec
mov
mov
mov
loope
clc
push
add
or
add
mov
add
jae
pushl
add
les
xlat
and
pushl
call
in
mov
cmc
fsubrl
add
add
dec
mov
mov
addb
add
js
add
nop
insb
inc
add
sarb
addl
lock
jl
jbe
inc
add
and
ljmp
fldl
mov
add
call
imul
imul
jns
add
cwtl
push
add
ljmp
lret
add
add
fwait
hlt
movsb
add
cmp
out
in
pushf
mov
add
xchg
lods
rcl
adc
jmp
xor
or
add
jmp
decl
push
cwtl
pop
stos
outsb
push
rcr
pop
pop
in
dec
pop
out
popf
leave
or
outsl
cmpsb
add
push
add
fildl
add
add
add
inc
add
lret
addl
into
pushf
lock
incl
mov
jmp
test
stos
loopne
xchg
jl
add
cvttps2pi
and
xor
add
dec
xor
jmp
add
add
jl
mov
testb
nop
inc
add
lods
addb
add
add
cli
mov
push
daa
add
pop
ret
add
and
or
pop
pop
repz
and
pushl
or
fsub
add
mov
stc
cmc
cmp
mov
pop
xchg
dec
push
addb
mov
jo
pushl
outsb
sbb
mov
lcall
enter
fsubrs
push
clc
cmp
add
pop
sub
arpl
incl
mov
jmp
ss
js
nop
add
addb
add
decl
mov
imul
ljmp
mov
cwtl
xchg
add
inc
add
mov
sbb
cmp
add
push
add
ret
xlat
dec
lahf
fcomip
cwtl
sub
add
sub
jmp
dec
mov
addb
inc
add
test
sahf
mov
add
xor
incl
add
push
sbb
aam
pushf
xchg
sbb
jnp
js
add
roll
push
add
sbb
add
add
dec
int3
sub
add
push
cwtl
popl
add
add
popa
add
pop
stos
mov
outsl
jge
lds
bound
jmp
add
cmp
pop
cmp
lea
cmp
add
xor
js
ss
imull
movsl
add
add
xchg
roll
sbb
add
test
pop
ljmp
pop
lcall
inc
add
add
pop
add
push
movhps
stos
test
fildll
movsl
add
add
inc
add
out
call
stos
imul
and
in
and
jmp
push
add
loope
xor
and
call
inc
add
xor
call
pop
inc
add
test
out
and
decl
add
push
mov
add
add
in
pushf
sub
bnd
incl
ret
add
aad
imul
jge
push
mov
add
cltd
xlat
or
push
jg
fnstcw
mov
lods
push
add
add
aam
mov
add
add
inc
add
adc
incl
add
lahf
mov
lea
xchg
mov
cmpsl
add
fnstenv
and
ljmp
add
mov
add
push
add
ficoms
add
movl
cmp
push
cmp
push
add
int
dec
pop
rolb
addb
test
jb
fistpl
ljmp
jns
xchg
lds
dec
and
push
cli
inc
add
pop
lret
lea
pop
fldl2e
ret
add
add
jo
incl
push
add
divl
add
js
xchg
cltd
mov
push
add
add
decl
jl
add
movsb
add
sbb
xchg
outsb
inc
add
out
jno
fdivs
ret
add
pusha
add
cmpsb
add
inc
add
xor
jnp
leave
bound
ljmp
je
test
clc
outsb
mov
jmp
add
jmp
add
incl
add
and
jmp
add
std
cltd
prefetchwt1
fisttpl
pushl
pushl
hlt
jno
pushl
add
insl
insl
out
mov
or
inc
add
add
mov
je
push
cld
adc
jmp
sbb
insb
jne
xchg
ja
add
add
push
add
push
int
adc
ljmp
cmp
pop
and
push
cltd
pushf
add
clc
mov
jp
or
call
fcompl
sub
or
popf
cmp
lcall
jl
jno
jmp
add
add
add
fdivrs
xchg
xchg
movsb
add
pop
out
test
xor
call
add
out
mov
adc
std
shlb
xor
pop
clc
lods
clc
hlt
xlat
leave
add
mov
push
test
add
aad
xor
jmp
shll
decl
stc
add
incl
call
loop
cltd
enter
cmp
add
mov
pop
add
and
cmp
cmp
inc
add
pushl
jp
inc
add
mov
js
add
dec
hlt
mov
mov
add
add
xor
adc
sub
add
sub
fs
jp
loopne
out
and
ljmp
stos
mov
lods
aad
aas
xlat
jp
cmc
std
xor
fldt
add
add
addr16
lds
daa
add
adc
jmp
add
mov
add
add
push
add
adc
call
enter
imul
daa
add
outsb
mov
add
add
jns
mov
fwait
mov
in
jno
decl
divb
dec
xor
pushl
and
fildll
xor
cmp
add
incl
push
or
pushl
hlt
jmp
fstpl
sarl
mov
decl
shrb
push
mov
ljmp
add
decl
add
ret
add
scas
outsb
xchg
lock
add
negl
hlt
lret
sbb
loop
mov
incl
xchg
addl
adc
pop
insl
fisubrs
mov
add
adc
call
cli
fcmovbe
lds
and
decl
mov
push
add
aas
mov
xor
shl
add
add
insl
mov
add
cltd
jns
push
and
aas
es
and
mov
mov
mov
add
outsb
scas
push
add
dec
inc
add
insb
fldt
mov
aas
mov
gs
xchg
bound
decl
mov
push
sub
or
add
out
xlat
cld
adc
jmp
add
cmc
ljmp
ret
mov
lods
pop
dec
data16
mov
lds
mov
std
push
add
out
add
frndint
stc
fisubl
add
in
iret
mov
fisttpl
jbe
in
mov
adc
mov
pop
push
insl
and
pushl
lcall
add
inc
add
jmp
call
jnp
or
add
sbb
add
add
cld
movsl
add
add
or
out
sub
cld
popf
sahf
cmp
inc
add
mov
push
lret
add
mov
scas
xchg
arpl
incl
negl
add
jg
cmp
xor
inc
add
add
aaa
mov
loopne,pt
mov
mov
or
add
jp
adc
incl
add
addb
add
dec
pop
add
mov
add
daa
add
incl
add
add
add
in
push
pushf
sub
std
jns
add
pusha
add
rcll
fnstcw
out
pushf
insb
shlb
movsb
add
add
pop
push
add
xrelease
add
data16
jle
jo
push
add
mov
data16
lea
xor
mov
add
test
mov
add
out
sti
in
xchg
loop
repz
sahf
dec
lea
imul
jmp
pop
fcoml
stos
out
inc
add
addb
addl
bound
call
sub
adc
xchg
add
or
add
addl
add
adc
jmp
add
sti
loopne
mov
fldenv
add
xchg
xchg
mov
ret
add
add
pop
jae
incl
add
jbe,pt
add
or
lcall
jns
and
and
cmp
xchg
or
jmp
jg
add
add
add
scas
xchg
or
adc
decl
nop
rorb
cmp
add
lea
push
mov
xchg
push
add
xchg
pop
xchg
jp
fwait
scas
push
les
jne
add
addl
add
pop
mov
dec
fisttps
in
popf
into
cmp
mov
in
sub
add
mov
sub
fwait
aaa
int
add
out
std
sbb
add
stos
inc
add
add
dec
xchg
pop
stos
add
inc
add
add
add
repz
mov
fcmovnu
add
add
ljmp
add
push
mulb
add
add
add
push
repnz
fiaddl
add
lcall
xlat
xchg
hlt
or
jne
adc
add
add
cltd
push
jns
add
imul
cmpsb
add
add
roll
into
lods
test
and
arpl
call
lcall
lret
push
push
and
cmp
push
add
sbb
add
mov
sbb
add
aad
addb
push
enter
pop
jb,pt
call
or
xor
decl
add
mov
mov
cmc
cmp
ja
lods
add
add
dec
jle
fcomps
ret
add
add
popa
add
popa
add
ljmp
movl
mov
add
cli
lds
stc
repnz
lock
das
dec
pop
push
xchg
lds
adc
add
lock
loope
fs
add
add
push
add
roll
mov
sub
add
add
mov
add
lcall
fdivs
add
pop
inc
add
fs
add
lcall
xchg
in
sbb
sub
add
das
pop
mov
adc
call
push
imul
dec
dec
push
je
test
addb
in
lds
js
mov
xor
call
add
fstp
addb
add
pop
ret
add
loopne
or
les
pop
lock
pushf
out
inc
add
jmp
add
add
ljmp
push
add
xor
jmp
add
pop
xchg
aaa
push
aam
enter
push
sbb
pop
in
xchg
aaa
pop
add
add
push
cmp
sub
add
push
add
pushl
mov
add
add
jb
faddl
add
fs
movsl
add
jecxz
out
pop
push
pop
xor
test
mov
nop
pop
sub
add
popa
add
inc
add
add
add
add
hlt
roll
add
cmp
fsts
jmp
add
add
loopne
push
add
or
in
iret
adc
ljmp
mov
add
add
sub
add
aaa
cltd
aaa
nop
in
rolb
add
inc
add
ljmp
or
and
ljmp
dec
bound
incl
ror
cltd
and
jmp
ljmp
push
add
push
add
lret
add
mov
add
cmc
aas
test
aam
add
lcall
mov
mov
cltd
sbb
ja
dec
icebp
test
lea
pushl
add
inc
add
pop
lret
addl
outsb
sub
add
stos
jo
ljmp
int
mov
ja
jbe
mov
xchg
pusha
add
push
sahf
js
shrl
js
add
dec
mov
xchg
add
pushl
inc
add
add
sub
add
ret
add
add
data16
incl
add
pop
add
add
cltd
call
inc
add
adc
clc
imul
incl
add
push
lret
add
xchg
mov
add
xstore-rng
cmpsl
add
dec
bound
jmp
add
lods
leave
pushf
mov
sbb
inc
add
mov
cs
jb
mov
int
add
mov
jmp
adc
call
jmp
xchg
inc
add
add
jle
jge
add
sbb
mov
mov
jmp
add
pop
jle
add
leave
sarb
add
xor
mov
xchg
mov
sub
jmp
out
lahf
int
add
call
decl
stos
aam
add
xor
xchg
cmp
inc
add
loopne
cmpsb
add
repnz
sbb
add
sub
lcall
jmp
stc
fisubs
add
inc
add
mov
enter
sbb
push
jle
add
add
jbe
sub
in
sbb
mov
ljmp
stc
pop
cs
add
xlat
push
movsb
add
add
shll
imul
xchg
push
cmpsl
add
repnz
xchg
lods
mov
mov
mov
stos
aaa
dec
pusha
add
pop
int3
jns
pop
pop
sbb
cmp
pop
adc
incl
lcall
call
add
lcall
pop
stos
int3
stos
push
add
add
push
add
test
xor
call
jbe
fcmovnb
add
add
call
sbb
scas
in
push
mov
add
push
lea
faddl
fsubr
or
push
xchg
cmc
cmp
inc
add
sbb
add
ljmp
mov
inc
add
add
addb
fcmove
stc
dec
inc
add
dec
sub
cmp
in
fisubrs
xchg
imul
jb
incl
add
scas
pop
outsl
adc
dec
addl
ds
cmp
mov
xchg
inc
add
movsl
add
add
lret
cmp
cwtl
movl
or
mov
addb
arpl
call
inc
add
add
and
fisttpl
and
in
dec
ret
push
add
lods
and
jmp
add
jnp
add
pop
jno
incl
incl
aas
test
pop
lods
mov
fidivl
add
lcall
flds
add
mulb
push
xor
pushl
add
dec
jns
add
add
add
add
arpl
lcall
add
lea
ljmp
ficoml
mov
add
add
imul
cmp
add
adc
ljmp
add
adc
icebp
testb
add
loopne
pop
inc
add
pop
cmp
jb
cmp
add
add
jle
add
hlt
cmp
mov
xchg
cmp
xor
stos
inc
add
jbe
and
cld
mov
adc
incl
pop
imul
jp
outsb
outsl
loope
test
sbb
or
ljmp
adc
mov
add
push
add
add
add
sub
movsb
add
ljmp
add
arpl
jmp
add
fcomip
bound
pushl
aam
nop
imulb
dec
inc
add
push
xor
decl
pop
fsubs
add
mov
out
cmp
add
repnz
out
addl
add
add
inc
add
addb
jecxz
popl
bound
stc
xor
lcall
mov
nop
mov
es
add
cltd
dec
pop
mov
add
or
pop
popa
add
mov
clc
xlat
xor
push
dec
sbb
data16
add
fiadds
rolb
mov
push
add
xchg
sub
mov
inc
add
lock
add
cmpsb
add
add
in
adc
jmp
add
call
cmp
mov
popf
fwait
mov
fucom
add
add
sbb
incl
inc
add
mov
add
push
add
daa
add
imul
add
loopne
test
bound
call
push
add
sbb
push
add
add
test
push
xor
lcall
jb
pushl
or
add
jg
cmp
adc
push
outsl
incb
add
incl
add
lock
add
fistpl
ds
add
pop
mov
add
lcall
or
xor
lcall
lods
push
add
add
mov
inc
add
fidivrl
jmp
jmp
add
daa
add
fisubrs
pop
add
add
roll
sbb
aad
out
cmpsl
add
pop
inc
add
sub
xchg
jmp
sbb
xchg
hlt
mov
pushl
negb
and
lcall
add
jae
call
enter
mov
pop
pop
lods
imul
lcall
mov
movl
test
or
pop
add
or
stos
lahf
cltd
stc
sbb
adc
decl
add
out
add
lds
mov
daa
add
pop
pop
lods
mov
push
add
mov
dec
and
decl
or
add
or
and
add
add
jns
mov
add
addl
jnp
add
fwait
test
add
repnz
addl
add
cmp
add
add
push
mov
mov
add
xchg
mov
xlat
mov
fdivs
and
call
add
xor
push
cs
or
jbe
pop
add
stos
xor
jmp
jg
out
jmp
in
cmp
pop
dec
cmc
push
jnp
repz
int
add
jmp
jno
jmp
add
fsub
add
add
add
movl
call
ret
add
add
daa
add
push
mov
jg
aas
mov
jnp
dec
xchg
sub
cmp
push
sti
sub
repnz
insl
int
jnp
add
xchg
xchg
jb
lcall
and
inc
add
pushl
add
out
movl
movl
add
js
mov
divl
fldt
call
sbb
add
jb
inc
add
mov
in
repz
jae
pushl
ret
add
pusha
add
mov
shll
jb
decl
ret
add
jecxz
xor
ljmp
pop
nop
out
and
out
sub
daa
add
lcall
add
ljmp
xor
mov
pusha
add
int3
sbb
out
ljmp
ljmp
add
stos
jnp
arpl
pushl
data16
pop
mov
inc
add
rclb
mov
fidivrl
add
add
xchg
mov
add
mov
add
mov
data16
mull
call
dec
jg
add
lcall
incl
and
call
movsb
add
jmp
jo
decl
push
add
cli
cmpsl
add
jmp
add
in
inc
add
cmp
ss
add
insl
add
xor
cmpsl
add
into
mov
in
xchg
sub
add
fsubrs
inc
add
mov
add
cmp
bound
lcall
add
xor
pushl
add
pop
mov
add
xlat
cld
inc
add
jno
incl
add
inc
add
jmp
add
lcall
cwtl
fbstp
push
and
push
add
decl
mov
mov
add
add
mov
jecxz
lret
xchg
xchg
cwtl
xchg
mov
dec
xor
push
add
shlb
dec
lods
push
insl
icebp
idivl
das
mov
stos
cmp
cld
cmp
addb
add
in
in
push
cmp
add
add
dec
cmp
fbstp
cmp
inc
add
lds
mov
ret
add
jg
shrb
cld
rdmsr
add
mov
add
jb
incl
add
push
cli
mov
add
lds
inc
add
jmp
add
mov
jbe
or
roll
shrb
aaa
or
push
cmp
mov
mov
add
jmp
pop
sbb
add
push
fstl
adc
lcall
iret
movsl
add
jo
jmp
lcall
sub
jns
pop
push
popf
mov
add
call
sub
fstl
movsb
add
add
add
pushl
pushl
pop
inc
add
jbe
fadds
loop
out
movl
test
add
roll
jns
int3
mov
sbb
sbb
push
add
add
lea
sahf
cwtl
mov
add
mov
jge
pop
rcll
ljmp
add
jb
call
mov
add
aaa
push
add
xchg
inc
add
ja
add
pop
pop
imul
decl
add
mov
add
shl
std
xor
call
fstpt
imul
nop
rolb
push
add
mov
sbb
pop
and
dec
data16
push
add
add
add
adc
incl
add
shll
ja
int
sbb
add
inc
add
data16
int
dec
aam
sti
mov
add
or
add
rorb
add
jle
jno
call
aaa
mov
addl
loope
rdtsc
add
inc
add
mov
mov
adc
fbld
jge
out
lret
pop
sub
jle
int
inc
add
sbb
push
add
pushf
repnz
add
cltd
xchg
test
push
lock
mov
cltd
stc
cmp
pusha
add
cmpsb
add
inc
add
lcall
fs
adc
jns
inc
add
lahf
cs
cmp
mov
cli
or
add
decl
add
mov
pop
inc
add
add
cmp
movb
mov
sub
add
dec
das
xchg
sub
add
xchg
addl
add
in
out
mov
cmp
xchg
sbb
add
push
enter
add
inc
add
add
cmc
mov
jnp
cmp
mov
add
bswap
lods
insb
clc
out
fnstsw
xchg
pop
adc
jmp
add
push
ret
mov
add
sbb
add
pop
movb
add
adc
call
rolb
add
cmp
mov
fcomi
data16
inc
add
addr16
fwait
sub
cltd
addr16
xchg
into
sbb
mov
add
push
int3
das
aaa
mov
lcall
bound
ljmp
leave
adc
call
jge
lret
pushf
bound
incl
cmp
mov
add
add
jecxz
imulb
repnz
cld
mov
and
ljmp
aam
ret
jl
test
jne
roll
inc
add
add
ds
add
jmp
add
jge
add
cld
jo
call
pushl
inc
add
mov
add
cmc
mov
aad
cwtl
dec
lock
add
add
ljmp
int3
add
jmp
add
mov
aad
in
fwait
dec
repnz
ja
leave
pop
jbe
roll
push
add
add
outsl
mov
and
ja
add
filds
ljmp
mov
jl
add
addb
test
pusha
add
and
push
inc
add
add
sbb
in
sti
sub
jg
add
cwtl
shll
add
add
pop
add
add
cli
aas
pusha
add
push
add
adc
mov
xor
ds
add
add
cmp
dec
shrl
add
insl
mov
add
sbb
push
jmp
inc
add
loop
test
or
outsl
pop
movb
mov
outsb
adc
pushl
push
add
mov
add
inc
add
mov
aaa
movb
cmp
jnp
in
daa
add
add
call
inc
add
add
mov
cmp
xor
fcmovu
cmp
add
loopne
dec
cmp
pop
mov
push
add
jmp
mov
cmp
jbe
push
test
les
adc
add
add
push
into
test
add
filds
lcall
push
mov
rcl
xchg
pushf
arpl
lcall
jle
mov
add
pop
inc
add
aad
add
loopne
int
add
mov
hlt
hlt
mov
sbb
add
cmpsb
add
add
cld
ja
loopne
adc
dec
lods
les
cmp
hlt
fcoml
push
scas
jns
add
sbb
add
cmp
add
dec
add
mov
addl
rcll
std
push
mov
add
add
add
incl
add
inc
add
cmpxchg
fisttpl
lods
dec
sbb
cmp
dec
mov
adc
lcall
add
sbb
xor
jmp
add
call
add
sbb
std
lea
add
add
fistpll
ja
xchg
out
mov
add
movsb
add
sbb
xchg
aad
push
js
mov
add
lahf
outsb
ds
cmp
arpl
decl
bound
dec
jno
decl
hlt
or
or
data16
add
add
dec
or
aad
add
and
decl
add
ret
add
sbb
aaa
shl
lock
jmp
add
call
mov
movsb
add
fidivs
add
std
inc
add
add
add
inc
add
hlt
insb
jg
ret
add
push
push
add
xor
fnstcw
incl
add
push
add
sub
xchg
addb
ja
mov
ret
add
sbb
xchg
movsl
add
xor
call
lcall
mov
or
addb
cmp
sbb
push
mov
test
movl
add
decl
les
in
xor
ljmp
outsb
stos
sbb
sub
add
mov
cmp
add
cli
fbld
add
add
push
add
lods
pop
push
add
pop
iret
addb
insb
enter
pop
push
pop
add
mov
and
pushl
imul
int3
sbb
add
std
mov
add
xlat
xchg
test
data16
add
lret
mov
pushl
add
scas
popf
notl
add
mov
test
test
addb
fnstsw
pop
xor
pushl
add
inc
add
ret
addb
stos
mov
add
in
or
push
mov
ss
insl
xchg
ljmp
scas
out
imul
mov
add
add
sahf
in
and
cmp
test
cmp
jmp
add
add
sub
pop
sbb
add
fadd
add
or
in
repnz
daa
add
lods
repz
ljmp
add
add
add
xor
ljmp
add
push
add
pop
pop
into
or
jmp
add
loop
ljmp
mov
pop
sub
das
add
incl
dec
jb
pushl
inc
add
push
dec
mov
adc
jmp
add
add
movsl
add
xchg
lret
xor
leave
pop
add
dec
cmp
pop
sahf
mov
fyl2xp1
cs
xor
call
scas
jge
loope
test
sbb
decl
loopne
daa
add
incl
and
lcall
sub
cmp
sub
in
nop
call
pushl
add
shl
add
add
insb
push
imul
lret
out
aas
adc
incl
loop
sahf
pop
xchg
xchg
mov
add
icebp
cmp
rolb
rorb
add
xor
mov
loope
jp
add
pop
and
jns
add
add
pop
dec
add
jno
jmp
add
xchg
cld
add
cli
bsr
adc
call
add
cli
add
outsb
ljmp
jp
pop
sbb
lcall
out
jle
mov
xor
decl
arpl
jmp
add
inc
add
stc
sbb
add
and
jbe
add
fistps
jne
add
decl
xchg
jle
add
add
icebp
mov
jmp
add
adc
push
in
add
ljmp
jnp
add
jp
add
add
mov
insb
stos
push
and
push
add
aam
add
cmp
push
sub
cmp
stos
sub
dec
out
dec
fcmovb
add
mov
add
cli
xchg
repnz
add
jmp
add
sbb
add
inc
add
lret
sub
add
push
adc
call
loop
lock
mov
or
aas
inc
add
cmp
frstor
pushl
stc
sub
arpl
call
add
bound
dec
out
pop
add
dec
pusha
add
lret
or
lcall
add
jmp
and
dec
push
add
in
sub
fwait
in
xor
std
repnz
lock
iret
push
add
add
mov
popf
jne
add
nop
ret
add
fcom
add
ljmp
mov
ret
add
add
inc
add
pop
inc
add
xor
ljmp
pop
add
inc
add
movd
dec
das
addb
push
enter
roll
adc
decl
add
ljmp
stos
cmp
incl
add
add
push
scas
int3
lret
imul
ljmp
mov
adc
lcall
add
addb
add
jno
lcall
inc
add
mov
adc
sub
leave
lods
xor
js
rol
add
jge
sbb
out
adc
decl
repnz
mov
cltd
xchg
add
ljmp
rolb
add
or
adc
add
xchg
jecxz
int3
jno
incl
add
loopne
xor
add
add
test
add
xchg
xchg
mov
add
push
out
mov
mov
add
dec
mov
pushf
xchg
ja
inc
add
daa
add
add
lods
lahf
leave
jbe
or
daa
add
movsl
add
add
sub
jmp
add
mov
hlt
push
add
lcall
in
jne
stos
sub
mov
xor
ljmp
jp
pushl
xchg
sbb
sub
add
inc
add
cmp
repnz
add
push
fcmovne
rcll
add
or
sub
ret
add
pop
dec
lret
xchg
testl
add
or
rolb
cmpsl
add
xchg
stc
fsubrp
pusha
add
sahf
xchg
fcomps
movb
pop
push
add
add
add
insb
cld
sub
leave
jl
add
add
bound
jmp
add
das
test
jmp
ficoms
add
insl
dec
adc
add
adc
call
cmp
incl
add
movb
aaa
jae
decl
into
outsl
or
add
add
jns
add
pushl
add
xchg
mov
push
xor
jp
cmpsl
add
ljmp
mov
nop
jmp
add
aad
jg
adc
nop
jmp
add
adc
jge
nop
add
pushl
add
add
add
add
lcall
add
add
add
add
add
add
je
sub
pop
cwtl
inc
add
outsb
mov
nop
jmp
cmc
add
mov
add
sti
mov
nop
jmp
aad
sbb
mov
add
xor
pushl
mov
xchg
ret
add
sub
add
add
add
add
jmp
stos
jge
es
add
add
nop
jmp
add
sar
add
cli
les
nop
jmp
add
add
pop
add
nop
jmp
sbb
mov
fcmovnu
stc
fwait
add
nop
jmp
add
add
lock
mov
xchg
ret
mov
test
cwtl
adc
add
lret
out
div
nop
jmp
cli
pop
add
inc
add
scas
or
add
add
add
lods
into
mov
push
mov
xchg
ret
add
add
subl
push
mov
xchg
ret
add
cli
lea
nop
jmp
aad
movsl
add
jo
call
std
mov
nop
jmp
adc
imul
ss
inc
add
clc
add
and
decl
nop
jmp
add
sbb
nop
jmp
cmc
add
daa
sbb
add
mov
jmp
add
add
add
cmp
sub
jmp
add
lock
push
mov
xchg
ret
adc
out
jne
nop
jmp
lea
nop
jmp
jge
sbb
cli
add
cmp
nop
jmp
add
sub
mov
add
adc
lcall
sbb
add
add
into
add
adc
jmp
add
add
adc
add
roll
add
push
stc
nop
push
add
fimull
mov
xchg
ret
daa
cmc
inc
aad
test
nop
jmp
adc
loopne
add
cmp
mov
xchg
ret
lock
add
add
nop
jmp
add
loopne
leave
nop
jmp
add
add
mov
cld
push
nop
jmp
nop
sub
roll
cmp
std
incl
add
fadds
add
push
je
add
nop
jmp
xor
jmp
add
dec
mov
nop
jmp
add
imul
add
push
mov
xchg
ret
add
popa
add
out
jl
test
sbb
xchg
pop
add
add
add
inc
add
push
mov
xchg
ret
cmp
mov
add
jmp
add
call
and
add
add
roll
lea
add
push
mov
arpl
add
fadds
xor
lahf
lds
js
mov
nop
jmp
add
push
nop
pop
mov
push
mov
xchg
ret
cmp
push
inc
xor
nop
jmp
add
mov
nop
jmp
add
push
adc
adc
adc
fisttps
add
add
into
add
add
push
mov
xchg
ret
or
mov
add
call
push
nop
jmp
sbbb
movsl
mov
add
cmc
add
push
adc
pop
adc
mov
add
jmp
add
cmc
add
push
nop
jmp
push
shll
fimuls
dec
add
sub
push
mov
xchg
ret
cmc
xchg
jmp
add
nop
jmp
add
push
push
mov
xchg
ret
add
add
mov
scas
enter
adc
daa
add
insb
add
push
mov
xchg
ret
daa
add
out
call
nop
jmp
add
jge
jno
decl
sub
nop
jmp
add
xor
pushl
inc
mov
add
stos
movb
pusha
nop
jmp
rcll
nop
add
add
sub
jbe
nop
jmp
lea
add
add
mov
nop
jmp
add
or
nop
jmp
add
add
lods
push
mov
xchg
ret
add
push
or
rolb
add
mov
popl
movb
sbb
nop
jmp
cmp
add
fsts
jmp
add
es
add
add
add
out
pop
push
push
mov
xchg
ret
stc
nop
fildl
outsl
xor
push
mov
xchg
ret
xor
mov
mov
xchg
ret
fucomi
jge
test
rclb
add
add
add
nop
jmp
or
loopne
loopne
nop
push
mov
jle
inc
add
add
add
pop
mov
nop
jmp
dec
jge
fildl
add
add
add
adcb
add
or
in
incb
add
inc
add
add
jo
or
rorl
add
add
mov
inc
stc
mov
add
add
aad
cs
push
push
mov
xchg
ret
add
mov
add
add
or
add
cltd
dec
xor
nop
jmp
add
lcall
add
add
add
add
lcall
lcall
add
nop
jmp
add
add
xchg
add
add
inc
nop
jmp
add
add
mov
push
mov
xchg
ret
xchg
cmc
inc
add
push
add
ja
add
sldt
add
cmp
add
dec
inc
mov
sbb
add
stos
sbb
loopne
mov
cmc
add
nop
jmp
add
movsl
dec
jae
push
dec
pushl
nop
jmp
add
mov
add
pushl
add
mov
push
out
add
add
jnp
jge
nop
jmp
adc
add
add
inc
add
add
nop
jmp
add
add
dec
rep
nop
jmp
cmp
add
xchg
jbe
mov
nop
jmp
push
loopne
int3
int3
add
add
add
lret
xchg
addl
nop
jmp
add
add
add
mov
nop
jmp
loopne
add
jne
nop
jmp
sub
incl
add
rolb
push
nop
jmp
push
add
fistl
add
xchg
mov
add
and
jge
add
cld
call
adc
add
adc
add
fdivrs
nop
jmp
push
aad
add
scas
inc
add
add
add
jmp
add
cmp
cmpl
nop
jmp
add
add
xor
add
add
lea
add
nop
jmp
add
add
pop
push
push
mov
xchg
ret
flds
fisubrs
mov
incl
add
pop
add
add
mov
add
nop
jmp
add
add
or
add
nop
jmp
mov
add
mov
xchg
ret
addb
sub
add
add
mov
jmp
push
add
adc
pushl
test
or
clc
add
xor
and
lcall
nop
jmp
add
add
push
nop
jmp
add
mov
loopne
add
add
dec
pop
push
mov
xchg
ret
into
add
fcoms
test
fsubl
mov
xchg
ret
add
int3
add
push
nop
jmp
fcomp
add
add
loopne
mov
add
nop
jmp
inc
add
xchg
cli
mov
nop
jmp
shr
nop
jmp
add
add
xor
add
jmp
mov
fldpi
add
add
nop
jmp
add
mov
pop
nop
jmp
daa
add
cli
add
dec
push
nop
jmp
add
test
shrl
mov
nop
jmp
add
xor
add
jmp
add
daa
add
aad
pop
nop
jmp
add
adc
add
arpl
nop
jmp
nop
xor
add
add
cmpl
nop
jmp
adc
add
lods
adc
dec
mov
nop
jmp
add
adc
xor
decl
jb
push
mov
xchg
ret
add
pop
inc
add
sbb
rclb
inc
add
mov
xor
das
popa
push
mov
xchg
ret
daa
jmp
imul
add
add
add
add
into
add
nop
jmp
add
aad
add
movl
add
nop
jmp
add
decl
cld
add
add
loopne
mov
pop
fld
add
mov
push
nop
jmp
add
add
cmp
and
nop
jmp
push
fisttpl
add
sbb
add
mov
add
loop
xchg
jb
decl
nop
jmp
add
cli
add
add
nop
jmp
mov
add
add
cmc
ret
lcall
jmp
loopne
add
jmp
mov
xor
int3
adc
xor
call
add
add
add
ret
add
incl
add
add
mov
pop
jne
nop
jmp
push
push
cmc
or
nop
jmp
add
add
lea
nop
jmp
mov
add
mov
lret
jmp
loopne
clc
add
add
mov
jmp
add
jmp
outsl
loopne
jmp
movsl
add
adc
cs
nop
jmp
add
mov
add
hlt
inc
add
mov
jnp
push
mov
xchg
ret
sub
add
add
inc
add
faddp
loop
nop
jmp
daa
sbb
add
sbb
add
cltd
push
mov
sbb
xchg
add
jo
sbb
sub
stos
push
nop
jmp
push
cmp
into
add
add
mov
incl
roll
add
add
and
nop
jmp
add
add
pop
pop
push
mov
xchg
ret
jge
cmp
push
mov
xchg
ret
add
clc
sbb
jmp
into
add
add
add
decl
push
mov
add
repz
add
push
nop
jmp
push
movsl
add
add
adc
addl
add
nop
jmp
cmp
jecxz
add
addl
add
mov
add
add
add
or
sbb
add
cmp
add
adc
divl
add
add
adc
jmp
pushl
push
mov
xchg
ret
mov
sub
les
add
add
nop
jmp
add
add
push
nop
jmp
add
add
sbb
push
aad
add
nop
jmp
sbb
aad
into
add
or
add
add
lcall
je
js
mov
xchg
ret
add
dec
nop
jmp
add
add
push
out
sbb
sub
add
add
xchg
add
outsl
jne
nop
jmp
add
add
in
jo
decl
mov
nop
jmp
cli
add
cs
aas
push
nop
jmp
add
loopne
add
push
add
pop
add
div
nop
jmp
add
add
cs
nop
jmp
mov
shll
push
movsb
add
and
nop
jmp
into
cli
add
add
stos
xor
nop
jmp
aad
xor
mov
add
mov
mov
mov
sub
push
add
ret
nop
jmp
lock
cmc
imul
adc
push
mov
add
leave
add
aaa
xor
adc
lock
fistl
add
add
xchg
xor
cmp
jmp
add
mov
add
add
js
test
add
nop
jmp
add
push
mov
xchg
ret
add
data16
mov
adc
jmp
add
xor
dec
xor
incl
insb
add
nop
jmp
loopne
inc
add
add
add
nop
jmp
adc
push
add
mov
nop
jmp
adc
add
mov
and
nop
jmp
cmp
bound
dec
test
nop
jmp
addb
nop
add
stos
out
decl
nop
jmp
es
aam
add
push
mov
xchg
ret
nop
add
jmp
add
add
mov
nop
jmp
add
add
add
jne
nop
jmp
push
cmp
add
jmp
add
nop
jmp
add
add
add
add
call
nop
jmp
stc
add
iret
jne
nop
jmp
add
push
sbb
xchg
idiv
call
add
push
push
mov
xchg
ret
lock
lods
loop
and
cmp
test
jmp
add
pop
add
ljmp
add
add
add
push
mov
xchg
ret
add
add
or
jmp
into
add
add
mov
nop
jmp
cs
add
int
pop
jae
jmp
push
add
jle
inc
and
jmp
push
add
xchg
add
js
pop
add
add
decl
push
loopne
jne
nop
jmp
lock
jmp
add
addb
mov
nop
jmp
adc
nop
add
cltd
decl
nop
jmp
mov
add
add
adc
jmp
add
add
call
jmp
add
xor
nop
jmp
es
add
dec
push
mov
add
in
add
add
push
sbb
add
iret
shl
push
mov
xchg
ret
add
dec
mov
call
add
push
mov
xchg
ret
add
push
stc
popa
nop
jmp
clc
lea
loopne
add
nop
jmp
loopne
loopne
adc
sti
call
nop
jmp
add
add
sar
pop
nop
jmp
push
add
push
add
cmp
add
loopne
add
add
add
add
incl
add
add
add
call
nop
jmp
add
add
scas
test
nop
jmp
xchg
pop
mov
xchg
bound
pushl
add
inc
add
ljmp
cmp
add
addb
rcrl
nop
jmp
xor
cmc
movsl
add
lea
sub
cmp
incl
add
roll
add
pop
nop
jmp
jecxz
add
add
out
push
call
jmp
mov
add
mov
into
mov
nop
jmp
into
add
add
sbb
push
nop
jmp
add
movsl
add
test
add
incl
add
add
add
and
and
ljmp
call
nop
jmp
aad
add
push
add
call
mov
fimull
add
add
js
aas
add
add
call
add
idiv
call
add
add
mov
nop
jmp
add
add
ljmp
jmp
jmp
adc
pop
mov
nop
jmp
mov
push
xor
add
jmp
mov
stos
add
add
push
mov
int3
mov
int
add
push
sub
in
mov
and
add
adc
jmp
add
add
mov
jnp
add
nop
jmp
int3
sbb
sub
inc
fwait
inc
add
add
mov
nop
jmp
int3
add
arpl
call
in
mov
nop
jmp
jmp
aad
add
add
mov
nop
jmp
lret
add
or
inc
and
nop
jmp
add
add
push
mov
cli
mov
dec
add
mov
pushf
idivb
nop
jmp
add
add
push
jmp
jns
lods
out
call
incl
cmp
pusha
add
add
and
nop
jmp
stc
lret
add
add
jmp
add
add
cmp
add
add
jmp
add
add
nop
jmp
add
mov
addl
mov
nop
jmp
cmp
add
or
add
add
xchg
push
stc
fistl
call
add
xchg
fmuls
push
cld
cmp
adc
pushf
mov
nop
jmp
add
int3
int3
push
add
jge
mov
sbb
adc
hlt
add
xchg
sub
pusha
add
or
test
or
add
add
lcall
lret
nop
jmp
add
aad
mov
es
inc
nop
jmp
dec
out
adc
inc
and
nop
jmp
jmp
pop
add
jmp
mov
nop
jmp
dec
push
adc
add
lcall
call
add
ljmp
push
mov
add
add
push
push
mov
xchg
ret
pop
add
adc
cmp
jmp
add
add
add
adc
loopne
push
add
test
test
jmp
add
push
xchg
in
and
movsb
pop
pop
nop
jmp
cli
add
add
jne
nop
jmp
add
adc
push
mov
xchg
ret
cli
add
mov
popf
mov
add
add
xor
lcall
test
and
add
add
rol
add
jo
cmp
icebp
nop
jmp
aad
pop
push
add
jmp
add
hlt
idiv
incl
add
inc
sub
stos
nop
jmp
stos
add
add
fsubrs
inc
adc
mov
xchg
ret
add
cltd
push
push
mov
xchg
ret
add
add
repz
popa
nop
jmp
xor
pop
add
add
dec
call
nop
jmp
xor
add
pop
nop
jmp
add
push
lock
cmc
mov
jmp
aad
lock
imul
push
add
xchg
mov
dec
cmp
jmp
es
inc
add
jecxz
mov
add
nop
jmp
add
add
call
add
inc
movsb
add
imul
nop
jmp
add
add
imul
nop
jmp
push
inc
lea
cmp
jl
push
mov
xchg
ret
jmp
add
dec
xor
nop
jmp
out
add
add
inc
add
ss
sldt
cli
xchg
add
sub
pop
in
call
ljmp
add
mov
xchg
ret
add
xchg
push
add
mov
nop
jmp
jecxz
stc
add
push
decb
xchg
add
add
adc
roll
jge
add
push
nop
jmp
addb
add
jecxz
sbb
jmp
add
movsl
cmc
add
adc
add
ljmp
mov
jmp
add
mov
movb
add
jp
rclb
fsubl
and
adc
mov
push
add
ret
add
cmp
mov
xchg
ret
add
mov
and
inc
add
add
lret
nop
jmp
out
daa
add
dec
mov
insl
push
push
mov
xchg
ret
fadds
loopne
pop
mov
nop
jmp
flds
dec
mov
clc
fisttpll
mov
xchg
ret
add
dec
add
or
and
add
add
cmp
add
push
mov
xchg
ret
mov
loope
push
jl
inc
push
mov
xchg
ret
add
stc
and
call
sbb
push
add
roll
add
dec
aam
adc
incl
add
pop
mov
add
fldz
movzwl
nop
jmp
add
add
nop
jmp
add
jecxz
cmp
add
add
push
mov
xchg
ret
aad
jns
stc
nop
jmp
clc
add
rcrl
incl
add
pop
stos
addb
rcrb
mov
nop
jmp
add
lea
jmp
add
pop
nop
jmp
add
add
add
nop
jmp
aad
aad
addr16
movb
add
fsubr
incl
add
xor
xor
aam
add
push
mov
xchg
ret
add
cmpsb
add
add
test
call
fxch
add
add
nop
jmp
movsl
push
add
call
call
add
inc
fadd
iret
or
inc
add
add
add
out
sub
mov
call
ljmp
xchg
push
mov
xchg
ret
or
mov
push
mov
xchg
ret
add
add
insb
inc
insb
insb
nop
jmp
daa
add
add
clc
push
add
add
adc
add
add
or
jmp
add
add
into
mov
pop
add
aad
add
push
aad
add
mov
nop
jmp
add
popl
mov
inc
nop
jmp
push
inc
add
add
add
enter
out
inc
add
xchg
push
jne
add
in
cmp
bound
add
lea
add
fiadds
cmp
jmp
or
stos
adc
jecxz
loopne
insb
stos
push
mov
xchg
ret
add
daa
es
add
incl
xchg
mov
std
mov
nop
jmp
movsl
flds
mov
add
jne
nop
jmp
add
aad
add
shrl
jmp
aad
inc
push
fcomp
and
decl
add
inc
push
add
push
add
dec
mov
nop
jmp
push
push
add
mov
dec
mov
and
stos
inc
sub
rclb
add
nop
jmp
enter
in
incl
add
loopne
mul
add
add
nop
jmp
add
fldt
call
add
loopne
inc
add
stc
push
nop
jmp
cli
imul
add
xor
popf
pusha
nop
jmp
add
lret
cli
cs
add
cmp
jmp
add
adc
add
dec
add
nop
jmp
add
add
nop
jmp
cli
add
lods
mov
pop
lea
nop
jmp
add
cmp
loopne
mov
call
lcall
cli
xor
std
mov
nop
jmp
lock
dec
add
push
mov
xchg
ret
clc
cmc
je
add
nop
jmp
mov
clc
adc
aad
jne
nop
jmp
clc
push
add
fwait
mov
nop
jmp
add
add
adc
or
outsb
in
call
fstpt
dec
mov
add
sbb
rclb
incl
inc
add
loopne
add
sub
push
mov
xchg
ret
jecxz
push
dec
add
push
mov
xchg
ret
inc
cmp
loopne
mov
xchg
ret
roll
push
push
push
mov
xchg
ret
adc
add
mov
jmp
cmp
push
add
cmpsl
add
add
nop
jmp
add
or
rcrb
idiv
ljmp
fadds
add
jmp
add
call
add
xchg
jne
add
call
nop
jmp
add
aad
in
push
nop
jmp
add
add
shrb
xchg
lock
incl
add
loopne
out
mov
je
nop
jmp
fiadds
cmp
jmp
add
add
sbb
or
incl
add
cmp
test
call
cmp
out
ds
nop
jmp
add
xchg
push
adc
add
push
add
dec
add
add
jns
push
mov
xchg
ret
add
lock
mov
push
mov
xchg
ret
cmc
mov
jp
push
mov
xchg
ret
cmc
fcomps
pop
call
nop
jmp
stc
push
add
sub
jmp
add
cmc
add
nop
jmp
add
daa
mov
add
fadds
add
pop
out
nop
jmp
add
adc
add
mov
cmpsb
inc
add
pop
lods
mov
nop
jmp
mov
or
add
add
mov
nop
jmp
lea
jecxz
inc
add
cmp
test
jmp
add
add
dec
lods
nop
jmp
add
add
test
mov
and
lea
add
out
sti
add
nop
jmp
mov
adc
sbb
lcall
add
add
add
cmp
cmpsb
inc
add
mov
add
push
mov
xchg
ret
add
add
and
jg
add
add
nop
jmp
add
add
inc
add
mov
lcall
add
add
add
int3
popl
nop
jmp
rcrl
add
fisubrs
nop
jmp
add
add
add
cli
sub
in
incl
movsl
add
mov
push
sbb
push
nop
jmp
adc
xor
add
add
int
jae
push
mov
xchg
ret
push
sbb
mov
add
out
lahf
lea
nop
jmp
fisubrs
add
into
add
nop
jmp
add
add
mov
mov
add
or
add
mov
xchg
ret
sbb
mov
and
call
decl
ret
push
mov
xchg
ret
add
add
jmp
nop
jmp
add
add
cmpsl
add
sub
nop
jmp
add
add
dec
cltd
imul
add
add
pop
nop
jmp
add
xor
imul
push
mov
add
psrad
xlat
xchg
ss
dec
cmp
jmp
xor
add
stc
mov
not
nop
jmp
jecxz
add
adc
nop
jmp
add
xchg
xor
mov
shr
push
mov
xchg
ret
mov
repz
subl
nop
jmp
stc
add
add
mov
sbb
jmp
add
or
add
add
adc
aas
ror
push
mov
xchg
ret
add
mov
and
incl
imul
add
add
push
mov
popa
nop
jmp
xor
xor
dec
mov
push
mov
xchg
ret
dec
clc
pushf
jne
nop
jmp
xor
add
jmp
nop
jmp
push
xor
add
idiv
call
add
add
add
or
scas
add
fimull
test
loop
call
push
jge
add
jmp
ljmp
incl
mov
lea
nop
jmp
add
add
push
cwtl
test
nop
jmp
sub
mov
pop
jne
nop
jmp
add
jb
jmp
add
mov
nop
jmp
stos
mov
lock
adc
adc
ljmp
mov
popl
add
stc
addl
add
add
incl
add
into
dec
push
push
mov
xchg
ret
lea
aad
inc
add
add
push
mov
nop
jmp
dec
mov
add
push
mov
add
pop
std
negb
and
xchg
out
mov
pusha
push
mov
xchg
ret
lret
jecxz
lods
and
jmp
add
add
jne
nop
jmp
cmc
out
add
add
jmp
addb
add
nop
cmpsl
add
add
jmp
nop
jmp
adc
xor
push
loop
incl
add
add
imul
pushf
pusha
nop
jmp
mov
add
add
add
sahf
mov
nop
jmp
mov
add
add
pop
push
mov
xchg
ret
add
je
nop
jmp
nop
lret
jmp
ret
cmpsb
inc
add
sar
mov
rclb
mov
and
add
cmp
nop
jmp
aad
sbb
mov
add
nop
jmp
inc
add
add
nop
jmp
or
add
dec
pop
push
mov
xchg
ret
int3
out
loopne
push
push
mov
xchg
ret
adc
add
jbe
nop
jmp
add
mov
add
xor
push
mov
xchg
ret
sbb
mov
sbb
dec
aad
add
add
push
in
ljmp
add
add
call
nop
jmp
add
add
mov
jmp
sbb
imul
jmp
add
add
mov
jmp
cmp
add
add
idivb
push
push
mov
xchg
ret
mov
lret
mov
int
add
add
popf
add
fmuls
test
out
incl
fcomps
adc
sbb
push
adc
jmp
call
lcall
in
incl
daa
nop
adc
add
fs
add
nop
jmp
dec
add
add
add
add
incl
add
push
lds
inc
add
add
insb
lea
push
mov
xchg
ret
add
rclb
adc
sub
ret
add
add
cmp
xor
mulb
ret
xor
add
cltd
inc
add
add
jmp
mov
add
add
rcll
mov
popl
adc
stc
cld
decl
nop
jmp
mov
add
add
sub
sti
nop
jmp
add
add
mov
jmp
inc
xor
cmc
push
inc
dec
add
lea
nop
jmp
add
add
and
decl
or
incl
add
xor
add
mov
adc
jmp
or
add
and
call
nop
jmp
mov
mov
fcomi
sarb
nop
jmp
stc
stos
dec
add
add
loope
lock
rep
nop
jmp
add
addb
add
sbb
jmp
adc
lret
daa
sbb
xchg
xor
add
push
add
jns
push
mov
xchg
ret
xchg
add
xchg
lcall
nop
jmp
loopne
add
add
incl
inc
add
test
push
mov
xchg
ret
add
cmc
int3
mov
nop
jmp
add
add
loopne
nop
addl
push
push
mov
xchg
ret
push
mov
loopne
push
push
mov
xchg
ret
mov
jge
xlat
sahf
add
nop
jmp
add
aad
cmp
or
notl
incl
pushl
nop
jmp
jecxz
daa
add
adc
pop
push
mov
xchg
ret
daa
dec
add
cs
nop
jmp
add
add
add
dec
pop
nop
jmp
add
add
fcomi
add
jbe
add
mov
add
incl
jmp
add
jl
rclb
add
lret
add
add
jne
sbb
mov
and
loopne
lret
insb
mov
nop
jmp
mov
xor
mov
mov
push
mov
xchg
ret
add
jmp
add
nop
add
lea
add
push
add
push
sbb
rclb
incl
fildl
add
add
sbb
jmp
push
add
aad
add
subl
incl
mov
adc
lcall
jl
sbb
jmp
mov
add
sbb
mov
xchg
ret
add
push
imul
nop
jmp
aad
add
sbb
stc
jp
mov
decl
pop
add
mov
push
mov
xchg
ret
cli
cltd
rep
nop
jmp
adc
cmp
lea
dec
cmp
jmp
or
inc
sbb
add
push
add
add
sarl
into
mov
cmp
mov
xchg
ret
mov
adc
nop
jmp
fyl2xp1
xor
cmp
add
pushl
cmp
push
mov
xchg
ret
add
fiadds
mov
nop
jmp
cli
stos
add
movb
mov
and
push
es
inc
add
jmp
jp
dec
mov
add
or
xchg
ud1
add
nop
jmp
mov
add
adc
jmp
adc
add
nop
jmp
add
stc
add
lret
repnz
xchg
mov
add
or
sbb
push
add
cmp
nop
jmp
add
add
lods
lret
sbb
in
pop
push
add
in
adc
add
mov
ret
add
popl
out
add
mov
add
add
add
add
call
dec
pop
push
mov
xchg
ret
add
add
sub
mov
and
add
lret
push
adc
jbe
inc
add
push
add
push
idiv
incl
add
sub
ret
add
mov
mov
test
jmp
add
push
xor
lcall
loop
nop
jmp
add
add
incl
cmp
add
nop
jmp
roll
add
lock
jmp
lods
add
push
push
rcll
xchg
mov
jecxz
incl
add
adc
mov
adc
jmp
add
add
add
movsl
nop
jmp
add
fadds
inc
cmc
push
insl
pop
push
mov
xchg
ret
es
add
mov
cmp
and
flds
add
push
xor
push
mov
xchg
ret
aad
daa
ja
add
push
mov
xchg
ret
add
push
xchg
mov
nop
jmp
add
add
les
inc
add
clc
inc
nop
jmp
fcomps
mov
orb
add
add
mov
xchg
ret
add
movsl
add
xor
nop
jmp
push
mov
xor
shll
bound
ljmp
jmp
mov
mov
add
inc
add
push
mov
xchg
ret
into
mov
mov
nop
jmp
cli
fmuls
jge
mov
call
incl
add
cld
push
mov
add
jecxz
lods
aad
inc
popf
rep
nop
jmp
add
aad
stc
lret
aad
push
jp
pop
jecxz
call
dec
add
stos
scas
push
mov
add
rolb
incl
add
add
add
stos
sbb
add
sbb
lds
xchg
lock
push
pop
insl
mov
add
negb
inc
add
inc
add
push
add
lds
bound
call
pop
arpl
fldenv
aaa
xchg
in
mov
mov
add
add
jo
inc
add
dec
lcall
mov
add
push
add
xor
ljmp
repz
jp
aaa
pop
in
mov
lcall
lahf
push
add
adc
cs
push
xor
ljmp
cmpsb
add
std
daa
add
jle
addl
fdivrs
incl
xor
or
add
call
call
repz
outsb
add
lahf
std
idivl
push
xchg
daa
add
add
popl
fidivrl
pop
stos
push
insb
add
lds
lcall
mov
fcomi
fistps
sub
in
frstor
cli
lahf
imul
xor
insl
sub
popa
add
and
loope
sub
roll
repz
xchg
ret
lock
jne
add
add
cmp
decl
js
cmc
and
call
cld
pop
mov
add
add
add
jle
cmp
add
scas
xor
call
add
loop
push
add
popa
add
lock
push
dec
das
xchg
ja
stos
loop
in
fildl
ljmp
push
push
iret
add
test
xchg
jnp
lock
add
add
pushl
push
sbb
add
data16
mov
mov
inc
add
ljmp
pushf
insl
dec
push
push
add
fwait
sbb
xor
ljmp
iret
mov
add
push
add
sub
add
dec
fiadds
sub
cmp
add
data16
jmp
add
mov
xchg
add
inc
add
mov
in
dec
dec
insl
bound
jmp
add
add
sbb
add
add
frstor
fcom
push
add
dec
aas
addb
int3
sub
xor
decl
add
stos
and
inc
add
punpcklbw
incl
arpl
decl
jbe
sbb
mov
add
call
aad
mov
pop
jg,pn
xchg
movl
and
cmp
scas
pop
jno
cmp
add
push
add
and
inc
add
push
jmp
push
imul
movsl
add
jmp
add
das
jp
add
add
dec
dec
test
outsb
mov
cmp
out
add
mov
je
add
add
push
sub
xchg
xlat
dec
sbb
add
sub
add
addl
int
xlat
adc
decl
add
add
add
cmp
data16
add
sbb
addb
add
mov
cli
ret
xchg
xchg
scas
cmp
add
adc
call
add
and
ret
jae
jmp
cmp
cli
das
or
popa
add
mov
pop
mov
rolb
push
out
sub
stos
jne
add
movb
add
cmp
dec
push
add
inc
add
ret
imul
in
stc
out
ds
xlat
lret
add
decl
add
or
add
add
mov
mov
pop
inc
add
mov
add
lcall
sbb
addb
mov
and
dec
data16
sub
daa
add
xchg
notl
add
mov
adc
incl
std
dec
push
sbb
leave
mov
sub
lcall
loope
jne
mov
decl
add
xchg
jno
lcall
sbb
add
inc
add
inc
add
pushl
fiadds
xlat
rolb
mov
loop
mov
mov
hlt
dec
fsubrp
mov
ret
add
iret
push
adc
cmp
push
add
mov
incl
jmp
fstpl
add
int3
fst
stc
in
in
add
jmp
out
adc
sub
lcall
add
add
add
add
movl
push
add
mov
test
cltd
ret
add
out
push
add
pop
adc
inc
add
inc
add
popf
mov
sub
lods
dec
int
out
sub
call
add
sbb
add
add
roll
add
stos
dec
sbb
addl
ss
aas
jl
mov
inc
add
pop
sub
fsubrs
shrb
mov
fidivl
add
xchg
adc
mov
sahf
mov
pop
xchg
mov
mov
clc
cmp
add
out
mov
add
fdiv
adc
call
add
add
inc
add
scas
addl
dec
imul
add
fimull
stos
sub
add
mov
push
mov
lcall
mov
add
push
aas
je
or
inc
add
rolb
add
outsb
int3
pop
test
inc
add
sub
or
fnstenv
dec
fimuls
add
mov
decl
add
sub
lcall
pop
cli
adc
incl
sarb
push
pop
mov
and
adc
dec
jmp
das
or
call
call
jmp
add
add
xchg
out
shrl
add
pop
cwtl
fcmovnbe
lahf
cmp
push
pop
add
inc
add
xor
add
fildll
pop
mov
dec
scas
scas
push
add
pop
dec
inc
add
xchg
sub
nop
add
add
add
add
ret
add
rcrl
cld
dec
stos
fstps
repnz
mov
mov
mov
sub
testb
mov
add
mov
mov
jp
mov
add
push
movl
cmc
nop
add
incl
inc
add
sub
sarb
dec
jnp
pop
lcall
call
push
aam
add
data16
cmpsl
add
in
bound
call
std
xor
inc
add
call
ss
add
lock
pop
mov
movb
add
add
xor
call
mov
cmp
push
inc
add
add
adc
decl
scas
jne
pusha
add
ffreep
add
xor
incl
add
mov
mov
add
add
pop
pop
sub
js
add
inc
add
add
add
mov
pop
movsl
add
jmp
add
cltd
repz
mov
pop
testl
addr16
add
or
cmp
xchg
xor
incl
jmp
add
mov
add
add
lret
loop
stos
jecxz
sbb
pop
data16
jae
ljmp
add
add
shlb
adc
fimull
inc
add
jl
push
mov
add
rcll
add
in
push
xchg
push
cmc
sub
add
inc
add
jns
in
mov
rcrl
fnstcw
sbb
or
add
inc
add
fidivrl
mov
cmp
sbb
test
mov
ret
add
incl
xchg
jbe
lock
mov
add
inc
add
aad
add
ljmp
test
mov
ds
mov
jmp
call
jle
fcomps
add
sbb
add
fsts
add
mov
enter
add
and
leave
outsl
call
out
add
mov
or
pop
inc
add
adc
int
sbb
insb
call
shrb
aad
nop
loop
add
sbb
add
ljmp
add
loop
lods
pop
int
cmp
inc
add
dec
pop
inc
add
stos
lods
cmp
int
xchg
scas
lcall
mov
mov
movl
mov
lods
rolb
push
je
add
add
push
movsl
add
add
inc
add
push
add
cmpsb
add
add
adc
call
add
jmp
lcall
pop
add
pop
iret
push
add
repz
add
add
or
mov
nop
js
mov
test
add
jg
add
loop
adc
inc
add
mov
ljmp
cltd
mov
mov
jge
mov
or
and
call
xor
lcall
add
ljmp
inc
add
pop
jg
mov
xchg
incl
out
mov
decl
dec
and
inc
add
out
neg
movl
incb
in
jbe
add
add
mov
pop
imul
inc
add
adc
and
incl
test
add
add
incl
out
addb
cs
add
jmp
sub
add
add
ficompl
imul
sahf
xchg
test
in
int3
je
mov
add
add
test
add
sub
test
inc
add
and
xchg
je
add
scas
testb
or
pop
dec
sbb
mov
lods
inc
add
outsb
push
add
clc
jbe
or
sub
pop
add
add
clc
ja
mov
lahf
lock
call
sbb
scas
sbb
mov
add
ret
add
xchg
test
add
clc
adc
jecxz
loop
or
movsl
add
fcmovnb
add
data16
inc
add
and
pushl
add
popa
add
or
stos
les
lock
cmp
mov
add
cmp
push
add
add
out
sub
add
push
add
je
fistpl
jmp
add
add
in
xlat
dec
addb
add
call
push
inc
add
add
jo
pushl
add
add
add
inc
add
add
or
add
add
add
xchg
fwait
or
add
cmp
out
insl
sbb
add
add
mov
sub
add
xor
pushl
mov
dec
and
sti
aaa
add
call
std
push
add
xor
cli
outsb
mov
add
imul
out
mov
add
ljmp
inc
add
loop
adc
incl
popa
add
mov
jmp
add
sahf
jns
add
scas
jae
call
pushf
shll
add
lcall
pop
repz
mov
and
lcall
add
add
add
sbb
adc
and
cmp
bound
mov
test
pop
roll
test
das
in
addb
cmpsb
add
add
add
sub
incl
add
add
and
in
stc
adc
test
stos
outsb
int3
xor
lcall
push
lds
xchg
fcomps
add
lock
jp
dec
inc
add
fiaddl
pushl
decl
add
es
sub
in
sub
lahf
fsqrt
mov
addl
sbb
add
dec
popf
sbb
addl
add
push
push
add
mov
lret
scas
aam
mov
add
outsb
add
loop
push
sbb
cltd
add
jmp
jmp
mov
jne
imul
xchg
data16
arpl
decl
add
lea
les
or
lods
ret
mov
enter
movl
jno
dec
xor
pop
mov
push
xor
pushl
std
sub
sub
jecxz
rorl
inc
add
rolb
jns
add
mov
add
add
incl
mov
mov
mov
xchg
hlt
iret
xchg
les
sbb
add
add
ljmp
add
loop
cmpsb
add
or
jae
sti
inc
add
enter
add
daa
add
mov
aad
add
jge
add
jbe
addb
add
dec
hlt
pusha
add
pusha
add
xchg
cmp
repz
jle
add
jbe
dec
mov
add
cmpsl
add
and
add
or
call
decl
add
movsb
add
insl
je
add
push
aad
add
xchg
jl
or
add
add
sub
rcr
add
call
aas
dec
mov
add
push
xor
add
mov
int
add
sahf
mov
and
pushl
inc
add
pop
push
popf
cli
lret
jl
lock
add
adc
testl
ret
outsl
mov
add
lcall
icebp
pop
sbb
xchg
adc
sbb
lods
add
inc
add
mov
icebp
xchg
dec
incb
cld
and
pushl
add
mov
add
add
aam
add
add
sub
cmp
shl
insb
sub
testb
mov
lcall
add
mov
add
adc
push
xor
incl
xchg
sub
sbb
shr
pop
mov
jecxz
aad
jb
pushl
add
incl
add
xor
decl
add
bound
cmp
pop
push
xor
add
add
lret
mov
push
add
movb
addl
add
xor
incl
pop
fisubrl
add
push
add
add
mov
add
dec
mov
add
add
nop
mov
mov
add
xor
ljmp
insb
inc
add
lahf
idivl
xor
decl
add
int
add
insl
pop
daa
add
add
mov
add
stos
fdiv
ds
pop
ret
xor
incl
push
rolb
jp
add
incl
add
mov
inc
add
cmpsb
add
add
jbe
pop
push
add
movsl
add
add
sub
add
addb
mov
int
add
pusha
add
ds
pop
dec
out
push
hlt
outsl
imul
xchg
in
sub
add
xor
in
js
sti
xchg
frstor
insb
jns
fldenv
cltd
fiadds
add
mov
add
call
cltd
loopne
xor
decl
roll
add
add
add
repnz
add
adc
call
std
out
shr
or
cmp
push
add
movsb
add
add
aas
xchg
in
adc
mov
shll
push
pop
insl
pushf
cmc
inc
add
dec
mov
jmp
into
lret
out
jno
decl
add
pop
fimuls
or
add
or
add
imul
addl
adc
call
add
scas
int
mov
xor
pushl
dec
scas
add
push
xchg
paddq
js
sbb
add
pop
and
pushl
add
daa
add
inc
add
add
mov
add
fcompl
push
push
xlat
fmuls
add
mov
add
add
add
add
fstp
repz
lock
add
add
std
push
mov
add
insb
mov
cmpsb
add
push
add
add
xchg
jb
fnstenv
cltd
jb
push
sti
repz
stos
cmc
or
decl
inc
add
xchg
dec
stos
mov
inc
add
mov
bound
ljmp
add
inc
add
call
outsl
cmp
jmp
add
add
jmp
add
mov
cmp
add
popf
sub
add
sub
push
mov
xchg
pop
dec
jno
pushl
add
ficompl
in
jmp
jne
fnstenv
call
pop
sbb
add
mov
data16
cli
mov
inc
add
int
inc
add
inc
add
test
mov
xlat
daa
add
cli
mov
fucomp
mov
lcall
cs
dec
mov
mov
in
mov
and
jmp
add
jge
jmp
add
nop
xchg
cltd
out
lret
pushf
xor
ljmp
add
xor
fcompl
adc
add
xchg
pop
cs
jnp
pop
pop
mov
addl
roll
add
popa
add
cwtl
or
add
adc
push
xchg
add
xchg
mov
out
test
out
test
xchg
movl
xchg
sti
add
adc
ljmp
call
in
outsb
push
add
jle
fnstsw
add
add
mov
cmp
add
mov
mov
in
dec
dec
sti
icebp
mov
cmp
jmp
fildl
adc
fldcw
hlt
sbb
add
cmp
xchg
leave
push
cmp
add
lcall
addb
addl
jae
lcall
mov
add
scas
icebp
xchg
mov
scas
daa
add
fdiv
addb
add
call
inc
add
addl
jmp
jmp
push
sub
mov
and
pushl
or
xchg
lret
lret
roll
add
addl
add
jno
incl
jecxz
add
lcall
lds
jge
inc
add
add
scas
rolb
outsl
and
cli
les
loop
cwtl
adc
stc
jge
iret
fisubs
cwtl
in
sub
add
loop
scas
xor
sbb
add
insb
je
pushf
pusha
add
cwtl
xlat
shlb
add
insb
jle
pushf
les
jle
add
insb
mov
incl
add
cs
and
fstpt
pop
negl
movl
add
add
test
mov
popl
decl
add
lods
movb
jp
add
addl
add
inc
add
std
negb
or
push
add
lods
sub
pop
insb
cmp
mov
dec
push
mov
adc
ljmp
add
add
or
sub
ret
and
push
in
sub
mov
mov
push
addl
add
mov
add
mov
and
xor
fsts
pop
adc
decl
pop
mov
sbb
sbb
in
xchg
sti
ret
add
decl
dec
sahf
stos
sub
add
or
inc
add
add
add
inc
add
push
add
insb
xlat
mov
sarl
movsl
add
add
jecxz
pop
add
decl
add
add
jecxz
mov
addb
test
adc
pushl
mov
addb
lret
xor
ljmp
add
stos
mov
lret
ds
pop
add
stos
fcoml
add
mov
add
dec
ret
add
iret
sub
add
add
add
pop
or
cmovp
add
add
add
sbb
add
mov
add
repz
lret
stc
mov
pop
inc
add
push
iret
enter
add
xlat
sbb
daa
add
inc
add
aad
add
lock
add
addl
add
fs
rep
enter
inc
add
add
jge
add
test
xchg
mov
insl
and
mov
int3
adc
lahf
movl
add
cmpsb
add
add
xchg
sub
movb
mov
add
sbb
sub
outsl
dec
cmpsb
add
out
push
stc
jno
in
pop
call
add
sub
xchg
pop
add
ljmp
xchg
push
add
jae
lcall
add
xchg
add
jmp
ja
add
xchg
std
adc
ljmp
or
and
lcall
add
add
add
call
push
add
hlt
mov
add
sub
mov
add
or
add
jmp
dec
dec
clc
inc
add
mov
lret
xor
pushl
add
jge
hlt
dec
cmpsl
add
xchg
shrb
fstpt
pushf
mov
jmp
xchg
push
cwtl
mov
loope
in
enter
pop
stos
sti
add
stc
cmpsl
add
mov
jge
jno
ljmp
add
rorb
push
push
add
mov
add
mov
dec
sub
clc
test
inc
add
jbe
add
add
add
ljmp
cmpsb
add
cmp
loope
pop
xchg
int3
scas
nop
add
push
mov
add
dec
pop
scas
fld
add
add
pushl
jmp
or
add
push
push
add
out
dec
mov
add
jns
push
xchg
mov
clc
addl
dec
mov
add
push
inc
add
add
add
add
mov
lock
imul
lahf
cmp
cmp
add
lret
cmp
sub
pusha
add
push
add
pop
lahf
pop
insl
ret
add
add
fnsave
and
xchg
dec
jo
decl
xchg
add
addb
add
xchg
mov
add
je
addb
xchg
stos
cmp
or
popf
push
add
outsl
add
incl
call
mov
fadds
cwtl
shl
pusha
add
mov
add
rorl
add
cmp
cmp
dec
in
into
inc
add
add
adc
call
add
fildl
add
add
decl
xchg
mov
add
cmpsl
add
pushl
pop
into
rcl
inc
add
scas
fistpll
inc
add
rcrl
add
loope
mov
or
jge
push
lock
mov
call
dec
mov
repz
clc
addb
push
dec
or
cmp
inc
add
xchg
cmovnp
mov
add
add
jp
add
filds
add
push
and
out
jb
dec
push
inc
add
pop
push
add
dec
dec
sub
add
add
sbb
add
or
cld
xchg
aas
divl
icebp
data16
add
fcmovb
add
call
popf
xor
lcall
add
int
dec
push
out
xor
mov
add
pushl
pop
addb
add
add
cld
push
add
xor
add
imul
and
jmp
pushl
and
sub
aaa
mov
ret
fdivs
jbe
lods
lods
pop
mov
mov
aad
cmpsl
add
mov
cmp
rclb
decl
add
jle
add
add
mov
add
jbe
add
fistps
add
cmp
aaa
dec
imul
data16
add
ret
shll
sub
rcrb
jne
gs
adc
or
fcoml
add
leave
outsl
or
add
or
in
sbb
add
inc
add
xchg
cmc
sbb
pushl
pop
fistpl
add
mov
frstor
mov
sub
push
stos
int3
and
dec
mov
ja,pt
popl
add
sbb
cmp
add
mov
insb
imul
xor
jbe,pt
mov
in
iret
outsb
pop
mov
inc
add
add
inc
add
pushl
add
mov
cmp
in
daa
add
add
add
dec
dec
shl
xchg
push
inc
add
cli
roll
in
mov
add
movl
or
call
push
mov
sbb
xchg
out
or
lret
xor
pushl
decl
mov
in
scas
rolb
imull
lcall
sbb
shrl
mov
pop
add
rcrb
cmp
add
add
popa
add
popa
add
inc
add
hlt
call
cwtl
inc
add
aaa
cmp
in
ret
xor
jmp
jmp
add
cmp
nop
rolb
push
add
addl
add
sbb
add
cmpsl
add
add
add
mov
dec
jbe
push
push
dec
push
add
pop
or
movl
sbb
test
inc
add
pop
les
cmp
add
inc
add
mov
push
aam
xlat
push
add
test
add
movsb
add
ja
add
add
mov
pop
xchg
mov
add
adc
lcall
pop
cmpsl
add
sarl
or
add
addb
sbb
pop
jp
addb
por
add
cmpsl
add
call
sub
out
mov
add
cltd
jno
push
ret
add
jo
push
in
and
jmp
cmp
movb
inc
add
xchg
addl
add
add
stos
ret
add
lahf
push
mov
add
test
inc
add
out
mov
add
mov
les
push
iret
or
ljmp
pop
jae
fxam
add
mov
mov
add
test
push
sub
add
mov
mov
into
flds
int
in
addl
mov
push
push
jge
jb
mov
cmp
xchg
lea
movsl
add
sbb
add
pushf
cmpsb
add
fisttpl
add
jmp
jmp
push
movsb
add
add
das
movsb
add
jp
add
addl
outsl
push
daa
add
add
jmp
add
push
scas
sub
jge
adc
push
bound
js
ret
add
add
dec
inc
add
add
xchg
mov
sub
push
sub
xchg
jnp
add
add
xchg
stos
mov
mov
repnz
add
mov
imul
add
sbb
add
incl
sub
push
add
fs
add
sub
mov
jp
pop
cmp
sldt
decl
ud0
scas
push
bound
decl
cwtl
add
mov
les
leave
add
incl
jmp
add
movb
add
cmp
outsl
addb
add
jle
add
mov
add
mov
add
xor
add
mov
or
add
mov
pop
es
add
push
aas
add
pushl
imul
push
bound
decl
add
pusha
add
cmp
mov
ficoms
stos
aaa
pushf
pushf
xchg
js
add
imul
jecxz
add
mov
inc
add
or
adc
decl
data16
ss
dec
in
mov
add
xor
jmp
ljmp
into
fcomps
jae
ljmp
dec
pop
add
add
jbe
add
les
xor
incl
add
or
add
add
mov
loop
aam
add
sbb
add
jmp
xor
jge
inc
add
movb
in
lea
add
call
add
aaa
sbb
jmp
pushl
add
mov
sub
add
mov
xor
decl
fisubl
clc
leave
cmc
cmp
jge
or
push
cmp
add
add
add
lcall
mov
lods
lock
scas
push
jb
pushl
cmp
add
add
out
enter
dec
add
decl
outsl
popf
adc
decl
data16
add
add
in
add
lcall
jge
mov
add
xchg
daa
add
aam
add
mov
xchg
push
add
cmp
mov
add
cmp
pushl
add
xchg
arpl
call
lods
popa
add
cld
dec
lret
out
mov
pushl
adc
decl
add
push
lods
xor
call
add
aam
mov
scas
in
addb
add
add
addb
fldl
incl
add
add
lods
sbb
jmp
add
add
sbb
daa
add
jle
or
jp,pn
push
add
sahf
jge
loope
aas
pop
add
incl
addl
xor
add
push
push
add
lea
mov
add
pusha
add
add
incl
add
ror
das
xchg
adc
sbb
in
sub
call
lods
push
aas
or
add
test
shlb
not
sub
scas
out
shrl
aaa
and
cmc
jle
leave
pop
and
decl
mov
xchg
nop
and
jno
decl
sub
cld
mov
add
mov
add
xor
decl
xchg
hlt
cld
push
sub
push
add
push
pop
add
rclb
jmp
inc
add
jle
add
fistpll
sub
add
lret
loope
add
lret
add
jo
notb
add
outsb
out
bnd
fistpll
add
lret
add
test
cmp
pop
sbb
add
sub
or
lcall
loop
inc
add
jge
leave
ljmp
and
jmp
sub
and
ljmp
or
jle
xor
jmp
cltd
leave
in
stos
dec
stos
jl
bound
dec
adc
add
insb
jno
inc
add
mov
add
and
decl
pop
sarb
inc
add
inc
add
add
cli
pusha
add
add
fidivrl
jae
jmp
arpl
inc
add
add
iret
or
out
testl
push
lahf
mov
add
add
dec
out
mov
xchg
lods
addb
add
movsb
add
add
lods
dec
shl
dec
push
loope
pop
addl
add
add
call
mov
jg
add
add
stc
or
lret
loop
add
add
js
cmp
loopne
pop
mov
mov
mov
inc
add
mov
add
add
pushf
pop
mov
adc
enter
add
pushl
jmp
add
int
add
icebp
mov
inc
add
add
ljmp
add
mov
add
add
dec
fadd
add
iret
rolb
imul
ret
scas
xchg
addb
add
movsb
add
inc
add
jbe
mov
les
std
sub
mov
mov
cmp
sbb
addl
add
adc
cmpsb
add
cmpsb
add
pop
add
sbb
repnz
mov
add
loope
lret
cli
movsl
add
sub
decl
add
lret
add
add
add
add
lea
cmc
jg
push
add
jae
push
clc
in
out
mov
xchg
xor
lcall
dec
insl
js
add
and
decl
sbb
add
add
inc
add
mov
in
pushf
jnp
mov
scas
popf
cwtl
rolb
adc
inc
add
add
and
incl
mov
or
add
adc
dec
ljmp
add
decl
mov
mov
les
dec
cmp
adc
incl
add
in
cmp
pop
mov
jbe
add
push
add
aaa
xlat
xor
ljmp
xor
ljmp
add
rclb
add
add
cli
cs
add
decl
add
add
add
scas
in
xchg
lahf
aaa
cli
mov
xor
call
incl
jmp
pop
xchg
cmp
add
int3
std
les
sar
mov
std
fadds
add
insb
test
rclb
add
popa
add
mov
cli
push
mov
insl
enter
add
stos
pop
add
add
lcall
mov
add
mov
dec
add
add
movb
add
lcall
or
adc
call
add
and
sub
nop
dec
imul
fmuls
lcall
inc
add
jns
add
clc
jle
add
sub
sbb
stos
sahf
in
call
adc
add
mulb
movl
in
sbb
xor
jmp
add
add
push
ss
add
addb
cmp
addl
add
xchg
in
fidivrs
or
ret
add
push
push
add
cwtl
pusha
add
mov
add
lock
cmp
scas
fwait
mov
adc
incl
out
loope
cmc
sbb
sbb
incl
cmp
lcall
sti
imul
ljmp
lds
push
add
xchg
adc
incl
in
fcompl
sbb
ror
cwtl
mov
sbb
js
bound
decl
sub
data16
addl
pop
cmp
adc
jmp
add
inc
add
incl
mov
adc
mov
lret
add
lahf
add
add
xchg
push
dec
add
fstps
arpl
inc
add
and
jmp
add
mov
xchg
sti
je
nop
sbb
push
mov
sahf
mov
xor
jg
add
add
decl
jo
jmp
add
xchg
cmpsb
add
inc
add
add
jp
mov
lea
push
fbld
pushl
add
inc
add
js
and
pushl
add
popf
sub
add
jmp
movsl
add
inc
add
mov
gs
or
decl
add
cld
dec
adc
pushl
mov
cmp
bnd
add
add
stos
dec
fistpll
cld
xchg
out
pop
xchg
sub
decl
in
movsl
add
mov
pop
jbe
sub
leave
or
nop
fstpl
inc
add
mov
add
aaa
jle
add
pop
xor
lcall
cmp
inc
add
adc
decl
push
add
fcoms
pop
idiv
xor
les
and
incl
fldt
cmp
push
sub
add
lahf
mov
mov
shlb
cmp
add
jb
lcall
add
add
add
test
test
mov
add
jmp
add
xor
ljmp
cmp
jecxz
imul
add
call
repz
xchg
jecxz
les
repz
xchg
mov
call
incl
incl
pushl
movsb
add
add
rolb
add
je
dec
in
stc
inc
add
add
mov
fdivl
add
call
add
adc
call
popf
hlt
out
jl
std
push
add
jmp
xchg
cmc
sahf
xchg
add
jmp
add
add
mov
add
decl
outsb
push
insl
loope
ljmp
out
cld
mov
sub
add
add
xchg
xchg
pushf
shufps
xor
les
shlb
add
inc
add
push
insb
fwait
push
lds
mov
add
loop
xlat
loop
mov
aam
das
xor
mov
stos
and
jmp
add
cmp
inc
add
test
add
sub
xchg
addl
pushl
incl
and
ljmp
add
out
inc
add
pop
xchg
loopne
ret
add
add
ljmp
ret
push
add
leave
out
in
mov
cmp
sbb
add
sub
mov
movl
fsub
add
add
add
cmpsb
add
movb
dec
bound
std
mov
add
add
popf
mov
add
adc
xchg
add
pushl
decl
mov
testb
add
incl
push
add
rolb
lcall
inc
add
bsf
aaa
sbb
lods
out
and
jmp
jg
pop
outsb
aaa
mov
add
jge
cmp
add
cmp
daa
add
add
push
add
fsin
push
fstl
fucom
add
jns
out
jb
call
decl
fwait
cmp
add
mov
sub
xor
jmp
add
popf
xchg
cmpsl
add
stos
and
xchg
xor
pushl
inc
add
shrl
roll
or
push
pop
mov
push
addb
stos
scas
rclb
add
sbb
add
dec
nop
mov
add
add
mov
add
ret
add
jecxz
in
movsb
add
xor
ljmp
lcall
mov
add
add
add
jb
jmp
add
add
lea
addl
enter
addr16
xchg
mov
add
icebp
pop
and
call
pop
push
or
decl
add
jae
jg
xchg
into
mov
jno
jmp
add
add
jne
add
adc
inc
add
push
add
testl
add
incl
decl
mov
cs
add
sub
add
add
add
jbe
adc
pushl
insl
lds
addb
mov
stc
iret
jno
call
fcos
mov
xchg
cmp
add
fcompl
cmpsl
add
add
decl
jae
incl
add
bound
lcall
add
add
push
add
fwait
imul
stc
jl
test
movb
add
jmp
ljmp
add
inc
add
mov
pcmpgtd
mov
jl
cmpsl
add
add
inc
add
out
call
xchg
fmulp
outsl
add
out
xchg
xchg
les
pop
add
add
lret
addb
add
jmp
call
rolb
xchg
icebp
cmpsl
add
adc
pushl
jg
add
pop
int3
jo
lcall
addl
add
cmp
and
jmp
add
add
movl
jmp
add
cmp
es
add
sub
aas
cmp
jbe
add
add
adc
mov
iret
repz
add
sar
addb
add
sbb
jmp
pop
pop
and
leave
rcpps
jmp
add
add
add
add
pop
add
fsubl
add
arpl
incl
and
sbb
stc
mov
ret
add
cli
das
add
sub
lock
add
jl
xchg
inc
add
push
add
inc
add
ret
sbb
add
lret
cmpsb
add
add
jecxz
stos
cmc
mov
hlt
xchg
js
add
sub
sbb
divl
out
or
mov
lods
out
in
adc
pushl
add
lret
sti
std
xchg
ja
test
stos
cmp
insl
sbb
decl
inc
add
ret
add
xchg
xchg
into
pop
cmp
out
loopne
push
add
and
call
add
push
add
ljmp
xchg
dec
jbe
mov
cmp
dec
in
clc
pop
les
das
sbb
lods
aam
add
popa
add
lds
inc
add
jle
mov
jp,pt
add
push
add
add
dec
adc
pushf
jg
add
decl
incl
sbb
add
icebp
xchg
fs
into
mov
bound
pushl
bound
mov
xchg
pop
mov
add
cmp
mov
test
cmp
std
mov
push
std
cmp
popa
add
push
pop
jl
imul
mov
add
add
mov
fwait
xchg
scas
inc
add
add
fiaddl
mov
cld
lret
clc
xchg
adc
add
add
imul
incl
add
jmp
add
add
dec
ret
mov
inc
add
arpl
ljmp
test
add
add
sti
loop
cmp
mov
add
aad
sbb
aad
push
jl
adc
mov
icebp
and
into
scas
lcall
add
add
cli
cvtdq2ps
scas
and
incl
clc
jno
jmp
mull
jmp
add
mov
jb
pushl
add
and
ljmp
ljmp
add
loope
sub
adc
incl
out
push
push
rol
add
lds
jnp
mov
add
pop
adc
xchg
das
or
push
add
cmp
add
xchg
cmp
add
scas
inc
add
xor
push
mov
add
jl
add
add
fmuls
add
add
or
inc
add
jle
cmc
fisttps
add
add
cld
inc
add
and
call
out
inc
add
jo
jg
add
add
repz
adc
mov
inc
add
addl
dec
stc
mov
sarl
roll
aam
loopne
lret
ljmp
mov
xor
cld
pop
ljmp
pushf
data16
jo
incl
sub
xchg
frstor
add
or
xchg
aaa
sub
dec
outsl
cmp
in
repnz
pop
jg
les
aas
mov
xchg
std
stos
cmc
outsb
inc
add
and
jnp
xor
fistpl
pushl
ljmp
add
frndint
or
add
std
pop
arpl
ljmp
add
add
or
dec
rcll
cmc
xchg
xchg
imul
sub
incl
jb
decl
sbb
data16
add
imul
mov
jnp
add
add
add
in
mov
inc
add
and
lcall
rorl
add
inc
add
jbe
add
add
outsl
faddp
add
lcall
loope
sub
add
jecxz
pusha
add
pop
imul
rcl
jle
add
pop
inc
add
movsb
add
test
roll
add
push
addb
inc
add
ljmp
add
mov
add
inc
add
fcoms
ljmp
add
addl
sub
mov
mov
jo
call
add
jg
addl
add
mov
add
mov
dec
push
add
sbb
add
inc
add
pop
add
dec
pop
push
xlat
mov
shrl
int3
mov
xor
dec
inc
add
sub
add
mov
add
stos
mov
xchg
sbb
nop
jae
incl
add
xchg
mov
push
mov
inc
add
push
add
std
pop
pop
add
pushl
in
or
add
inc
add
call
add
xor
lcall
add
cli
repnz
call
pushl
add
add
popf
mov
add
incl
call
imul
out
sbb
imul
call
call
imul
das
cs
dec
sub
add
fiadds
flds
lcall
inc
add
dec
test
add
call
or
add
sub
add
inc
add
test
xchg
sti
xchg
popa
add
xchg
mov
push
add
lret
add
push
add
push
add
je
add
das
clc
mov
test
popf
rolb
pop
add
jl
sar
sbb
jb
cmp
add
push
add
pushl
dec
in
lret
and
call
add
push
add
std
xor
pop
sbb
mov
pop
sbb
out
dec
test
xchg
add
clc
sbb
rolb
add
mov
add
scas
aas
mov
add
sarb
lahf
and
incl
add
loopne
test
dec
data16
add
add
add
rorl
mov
inc
add
push
push
pop
adc
pop
pushl
decl
sub
or
or
add
sbb
ret
add
lahf
loope
cmpsl
add
lds
xor
call
add
mov
insb
pop
outsl
js
adc
call
aam
add
add
add
or
jae
pushl
lret
xchg
dec
dec
addl
add
push
add
arpl
inc
add
mov
add
outsl
or
add
movsb
add
push
add
push
je
add
xchg
ret
add
add
inc
add
add
add
cltd
jno
call
jl
add
cwtl
push
add
add
xchg
jmp
filds
add
ja
add
or
outsl
pop
add
mov
and
call
xchg
mov
xor
lcall
cwtl
idivl
add
out
mov
and
call
dec
inc
add
lret
mov
dec
out
iret
ret
add
pop
add
out
or
mov
cltd
stos
add
dec
xchg
sbb
jne
out
ds
cmp
and
jle,pn
xor
pushl
sbb
insb
xchg
add
lcall
push
sahf
mov
pusha
add
dec
pop
mov
ljmp
jae
pushl
add
jmp
cmp
add
addl
add
std
sarl
inc
add
add
add
add
jns
and
jmp
fists
decl
push
add
aad
test
jge
add
outsb
lods
inc
add
xor
call
push
pop
adc
decl
sbb
push
call
fadds
add
cmp
jae
cmp
adc
call
scas
stos
dec
xchg
das
adc
incl
cld
jecxz
pop
add
cli
sahf
clc
adc
call
add
test
test
adc
jmp
idiv
jne
leave
scas
lods
mov
ljmp
pop
in
cmp
xchg
iret
xlat
pop
inc
add
repz
insb
mov
cmpsl
add
sahf
xchg
aaa
bound
jmp
add
xrelease
mov
pop
jns
add
imul
pushl
add
ljmp
add
add
scas
mov
mov
xor
add
call
add
jp
test
jne
add
js
cltd
ljmp
in
addb
bound
call
aam
enter
insl
xor
pushl
add
or
mov
mov
sbb
add
in
mov
xor
incl
add
dec
test
sbb
fisttpll
add
and
adc
jmp
rcrb
add
std
push
add
lock
sbb
or
je
clc
add
test
cmpsb
add
add
pop
xchg
das
daa
add
cld
addl
enter
xchg
jmp
sub
mov
lea
add
data16
add
mov
incl
call
add
add
call
pushl
mov
addb
into
xchg
xchg
movl
repnz
aas
jb
ljmp
add
incl
add
add
movsb
add
add
decl
movb
sub
testl
push
add
pop
push
add
lock
mov
add
lds
cltd
nop
repnz
add
xchg
mov
jmp
xor
pushl
add
sbb
add
data16
stos
jbe
test
insl
int
dec
pop
cmp
add
sbb
mov
daa
add
add
sub
jecxz
inc
add
mov
dec
es
ret
cmp
mov
add
xor
push
aaa
pop
xchg
les
mov
test
jbe
add
xchg
repz
dec
test
outsl
and
call
test
incl
add
jl
mov
add
jns
add
cmpsl
add
addl
add
jbe
daa
add
mov
add
push
add
or
jmp
enter
add
pop
in
icebp
test
mov
add
cmp
add
add
jnp
int
dec
xchg
add
incl
push
adc
fistl
jmp
lods
out
jl
add
stos
pop
xchg
stos
xchg
pop
jge
or
add
or
pop
xchg
aam
cmp
push
cmp
cltd
repnz
dec
jno
pushl
or
xor
jmp
decl
xchg
js
sbb
add
jg
scas
push
sub
jmp
or
in
dec
pusha
add
mov
sub
xlat
lahf
iret
dec
stos
sbb
lahf
movsl
add
add
dec
dec
aad
fidivs
add
and
out
lods
mov
movl
add
or
pop
inc
add
imul
in
addl
mov
iret
add
jbe
cmp
inc
add
add
jge
add
mov
add
add
xlat
mov
jmp
add
test
add
fsubl
mov
add
xor
add
mov
add
dec
loopne
cmp
lock
add
add
movb
and
call
lods
mov
flds
add
dec
repnz
push
add
xor
add
movb
add
mov
push
add
fists
add
fucomi
inc
add
mov
add
nop
mov
add
ja
lcall
jg
fmuls
pop
pop
push
add
add
mov
add
push
int
push
add
cmp
imul
add
clc
bound
call
add
popf
mov
bound
ljmp
inc
add
dec
sbb
ss
loopne
pusha
add
add
inc
add
cmp
or
cmpsb
add
stc
leave
mov
addl
add
fabs
add
dec
dec
les
sbb
add
push
in
scas
inc
add
jb
pushl
jmp
decl
add
cltd
and
pushl
call
pop
add
or
add
add
and
call
adc
in
jge
mov
ljmp
sub
add
incl
dec
stos
pop
xor
mov
out
ljmp
add
mov
ds
cmp
arpl
mov
jp
sub
mov
or
jmp
jmp
add
add
lcall
add
inc
add
mov
xchg
in
pop
push
mov
paddsw
jno
jmp
add
jg
rclb
inc
add
pop
insb
jp,pt
xchg
mull
dec
push
add
decl
add
add
lahf
mov
add
mov
xlat
scas
push
add
push
pop
imul
cmp
mov
add
add
pop
push
outsl
pop
ds
fdivrs
push
xchg
xlat
imul
add
in
sub
fwait
push
clc
sub
cmp
aad
add
lcall
ds
ja
cwtl
scas
dec
and
ljmp
mov
arpl
cmp
mov
pop
push
inc
add
icebp
cld
lds
iret
aam
add
faddl
js
add
xchg
dec
in
cmp
je
repnz
addl
jl
test
mov
lds
jbe
popf
sbb
add
fsubs
bound
decl
sub
xchg
sbb
add
mov
stc
sbb
add
mov
in
cmp
add
xor
ljmp
decl
roll
pop
push
add
push
pop
dec
ja
cld
push
add
jb
jg
jle
cltd
jns
jecxz
jns
add
ficoms
or
jmp
or
add
sbb
mov
ljmp
jne
dec
out
jg
aam
add
mov
pop
fwait
mov
testb
nop
jg
and
call
add
pop
xor
decl
add
add
test
mov
adc
ljmp
pushf
je
add
repz
in
lods
enter
add
mov
movsb
add
scas
mov
add
inc
add
add
jmp
add
inc
add
aaa
mov
decl
lds
and
ljmp
adc
jmp
add
test
mov
iret
add
mov
mov
mov
fiadds
shll
add
sahf
xor
call
pop
jno
ljmp
add
jmp
add
push
adc
dec
pushl
add
out
add
jmp
add
add
add
incl
jle
daa
add
stos
int
cmp
fst
sti
ret
and
dec
test
mov
xchg
cmp
fstpl
xlat
lods
and
push
mov
add
incl
add
xor
lcall
add
inc
add
add
inc
add
addb
pop
sbb
stos
pop
int3
test
movsb
add
icebp
sbb
pop
or
lahf
sbb
loopne
cmp
add
divb
incl
in
add
inc
add
dec
pushf
cwtl
sub
sub
cmp
xchg
mov
sub
add
inc
add
sub
pop
jp
add
fiaddl
movl
sub
or
add
push
or
add
imul
movsb
add
mov
jno
push
mov
aas
adc
mov
js
int
inc
add
add
fdivrp
push
cmp
add
into
sbb
sub
inc
add
int
jae
jmp
add
mov
outsb
pushf
ljmp
ljmp
xor
lcall
add
mov
dec
mov
add
xor
incl
imul
add
stos
shufps
nop
stc
test
add
sub
sbb
mov
mov
push
add
cmp
add
add
xor
dec
std
sub
aad
rolb
addb
add
add
popa
add
test
lret
pop
sub
adc
call
test
inc
add
je
push
nop
push
arpl
decl
loop
adc
add
std
inc
add
movsb
add
jb
call
lret
add
in
mov
jb
decl
movsl
add
les
or
call
int3
push
add
flds
dec
shll
decl
addb
outsb
cmc
les
pop
add
add
leave
xor
cmp
dec
data16
mov
cmp
add
jmp
add
dec
ss
daa
add
xchg
mov
add
push
xchg
sbb
xchg
add
ljmp
dec
xchg
lock
pop
stos
jnp
pop
push
add
jne
testl
icebp
mov
add
push
cmpsl
add
leave
xchg
fiaddl
adc
pushl
addb
add
rep
lret
jecxz
cli
mov
aaa
repz
xor
add
ret
add
int3
xchg
inc
add
add
add
and
pushl
add
lods
lahf
mov
imul
or
add
addl
dec
add
lcall
or
loop
and
ljmp
cwtl
dec
add
jmp
fidivrs
addl
jp
add
ljmp
dec
iret
aaa
xchg
test
bound
jmp
mov
pop
push
or
and
aas
fxch
cmp
cld
inc
add
add
call
pop
and
jmp
ret
add
ja
or
rcll
and
decl
cmp
neg
lcall
add
aaa
fidivrl
add
add
mov
inc
add
movl
movsb
add
decl
lret
xor
decl
add
and
rolb
add
lea
add
and
mov
mov
inc
add
daa
add
not
push
add
rep
add
add
mov
add
jmp
lea
add
int3
dec
test
arpl
pushl
mov
sub
add
push
add
add
movl
imul
addb
push
or
add
lods
dec
push
addb
mov
add
divb
xor
jmp
add
out
popa
add
lret
sub
stos
jle
je
cmpsl
add
add
pushl
jmp
add
nop
mov
add
sbb
rolb
leave
insb
daa
add
clc
push
add
mov
decl
mov
lds
lahf
pop
jp
jp
add
ljmp
mov
in
mov
mov
es
lahf
add
jl
add
push
add
pop
add
inc
add
loope
lahf
or
cmpsb
add
sarl
leave
pop
add
xchg
addb
sub
jp
in
inc
add
add
add
dec
lcall
push
out
inc
add
out
lea
inc
add
add
in
push
shl
jno
decl
add
loop
insb
sbb
and
fdivs
call
add
scas
ficomps
fstl
aas
in
lahf
push
inc
add
call
add
add
roll
lret
movsl
add
call
dec
sbb
add
sub
add
add
pop
xchg
or
dec
and
add
add
fsubrl
fstps
int3
loop
fdivl
pop
xor
imul
add
sbb
and
decl
das
outsb
sbb
lcall
addl
je
and
call
push
in
jae
pushl
out
mov
mov
std
movsb
add
mov
add
push
or
and
decl
xchg
xchg
adc
pushl
add
push
jmp
and
iret
ja
add
and
fsubp
add
add
lret
push
js
push
add
add
add
or
push
addb
add
cmp
test
or
mov
call
jo
decl
add
add
lcall
call
add
ljmp
out
adc
cmp
enter
sbb
xor
pushl
addl
pushf
or
push
bound
dec
jmp
inc
add
sbb
lcall
xlat
dec
adc
decl
add
lcall
add
incl
cs
jp
add
mov
enter
lahf
sbb
lods
mov
jmp
jmp
mov
jmp
add
xchg
mov
divl
pop
adc
lcall
add
add
mov
pop
mov
call
addr16
inc
add
sbb
xor
sbb
dec
call
jmp
add
sub
dec
fisubl
add
cmpsb
add
add
fstl
xor
jp
sahf
push
add
sub
add
push
add
imul
cmp
pop
test
mov
cmp
addb
add
cld
arpl
pushl
push
add
add
inc
add
xchg
fnstsw
xchg
aam
add
add
add
jne
add
adc
call
jg
add
movl
repnz
lret
mov
sub
adc
incl
add
xchg
pushf
fldenv
add
jge
add
pushf
pop
push
lods
jns
inc
add
jae
cmp
add
sub
stc
xchg
stos
sbb
lods
imul
bound
decl
lret
stos
xor
inc
add
add
pop
shlb
add
add
add
inc
add
daa
add
lcall
loope
rclb
add
sub
jle
jmp
in
ret
add
cmp
adc
lcall
stos
pop
mov
sti
cld
xchg
inc
add
add
xchg
into
add
dec
jp
add
addl
and
jae
ljmp
add
sub
jae
jmp
add
add
daa
add
add
dec
and
ljmp
add
test
addl
cmp
adc
mov
add
or
xor
fidivrl
leave
sbb
hlt
pop
jmp
out
int
push
fldcw
add
pop
pop
add
xchg
push
or
xor
lods
mov
pop
cmp
add
push
add
pop
addb
inc
add
insb
mov
in
iret
aas
jo
incl
add
std
lea
push
inc
add
sub
incl
dec
fldcw
ficoms
push
add
mov
iret
adc
pop
aad
add
xchg
mov
add
out
lock
add
add
add
ljmp
jmp
sub
add
push
jnp
aaa
test
cli
hlt
mov
arpl
call
pushf
xlat
add
push
add
loopne
mov
jbe
je
das
add
jmp
add
add
jno
mov
add
add
ljmp
add
xlat
mov
decl
cmp
aaa
inc
add
repnz
add
add
fmull
fistps
add
mov
push
mov
add
sub
mov
push
add
xchg
dec
imul
xchg
es
mov
dec
ror
pop
rolb
mov
add
dec
sahf
push
lret
fmuls
dec
and
pushl
add
sahf
loopne
push
add
pop
outsl
inc
add
scas
inc
add
ss
rolb
push
mov
push
add
lods
movsb
add
jp
enter
mov
add
pop
cwtl
lock
loope
add
addl
out
movsl
add
cmpsl
add
xlat
push
lock
clc
push
std
inc
add
imulb
sti
mov
fcmovnu
aam
sub
add
ljmp
pop
fwait
imul
jbe
add
xor
ljmp
lcall
add
or
outsl
ss
rol
add
add
sbb
add
add
add
add
push
mov
add
pop
movl
add
out
movsl
add
xchg
adc
ljmp
in
cli
leave
cmpsl
add
add
jne
add
mov
dec
test
sbb
add
mov
cmc
xor
ljmp
add
outsl
cmpsl
add
fnstenv
add
dec
or
lcall
add
decl
adc
mov
add
and
incl
add
sbb
and
incl
out
repnz
dec
inc
add
sub
fistl
add
ds
xchg
xchg
jbe
jae
dec
mov
test
in
addl
xor
sub
jmp
cmp
add
push
push
add
add
lock
leave
sbb
jb
jg
outsb
xchg
mov
in
mov
pop
mov
add
or
push
add
dec
inc
add
ja
mov
sbb
add
movsb
add
lcall
add
les
pushf
addb
add
clc
jmp
rcrb
add
mov
inc
add
hlt
push
pushf
sub
jmp
add
add
rolb
mov
cmp
add
inc
add
lds
in
dec
mov
mov
add
lcall
into
cmpsb
add
shlb
add
cmp
mov
fwait
push
add
add
ret
addl
movb
push
add
lods
int
add
fdivrp
xchg
inc
add
inc
add
add
push
add
jl
add
add
addb
aas
cli
xlat
add
incl
ljmp
cmpsl
add
stc
ret
outsl
pop
mov
add
into
lret
int3
jmp
add
jmp
aam
into
mov
in
mov
fisttpl
and
incl
xchg
lea
cmc
push
data16
add
pop
fbld
pushl
jmp
add
add
jno
ljmp
add
sub
les
mov
rol
add
add
pop
ss
add
or
pop
push
add
pop
mov
test
add
stc
xchg
loope
jmp
je
sti
ljmp
fldlg2
mov
add
push
xchg
jne
sbb
call
call
add
mov
add
mov
inc
add
add
loopne
dec
cmp
push
sbb
sahf
adc
incl
add
pop
lods
xchg
call
ljmp
add
add
cs
addb
add
test
dec
push
add
js
push
repnz
jge
shrb
or
cmp
fisubrs
add
outsb
dec
aas
push
movsb
add
add
jl
mov
add
jbe
xor
clc
fcmovu
sub
add
insl
add
stc
imul
movsb
add
add
sub
aam
xor
jmp
sub
mov
out
sbb
bound
push
push
add
jge
call
movl
repnz
mov
add
xor
mov
add
add
daa
add
shll
add
add
cwtl
cmp
or
pushl
call
lcall
cmp
mov
and
decl
and
push
rcrl
push
iret
pushf
loope
test
dec
cmp
lock
int3
outsb
mov
clc
xor
incl
dec
sbb
out
or
lds
ret
fsubs
add
lcall
mov
add
in
fldenv
pushl
or
out
loopne
dec
in
arpl
decl
or
add
add
fidivl
ret
add
add
inc
add
int
add
pop
mov
mov
add
lods
data16
cmp
add
lods
data16
das
ss
lahf
add
cmp
lcall
push
les
loop
xchg
xchg
stc
cmp
in
shlb
add
mov
inc
add
mov
in
dec
inc
add
scas
lret
cmpsb
add
mov
add
mov
sub
enter
stos
push
pop
test
jecxz
lret
pop
aas
addb
insl
rolb
add
fdivrp
jecxz
in
push
ja
or
lcall
out
ret
add
imul
inc
add
lcall
or
add
dec
fmull
jb
jmp
testl
lcall
cmp
aaa
fstp
sar
call
pop
xchg
imul
add
push
ret
add
add
inc
add
add
and
mov
mov
push
and
stc
outsl
fcoms
ret
add
add
repz
decl
lea
add
loop
leave
ss
add
adc
pushl
xor
decl
pushl
cmp
xor
add
jp
movsb
add
jmp
add
add
add
decl
imul
ss
push
add
inc
add
scas
bound
call
push
mov
addb
mov
add
sub
mov
inc
add
inc
add
int
daa
add
fidivl
push
std
jbe
add
cmpsl
add
pushl
mov
out
sbb
add
mov
lret
jmp
movb
arpl
ljmp
add
add
push
aad
stos
jecxz
mov
add
or
stos
out
enter
pop
ret
std
addl
mov
mov
jmp
add
sahf
jle
sub
incl
pushl
add
xchg
push
leave
pop
add
ljmp
push
inc
add
fnstcw
mov
mov
add
or
add
repnz
xor
call
fnclex
add
lcall
repz
add
add
or
addr16
loope
pop
mov
add
add
inc
add
call
add
std
testb
lods
add
cmp
add
loopne
dec
sub
and
decl
dec
lea
incl
addb
je
rolb
add
das
je,pt
add
jmp
add
call
data16
jmp
add
add
cwtl
xor
pushl
aaa
addb
add
sbb
sbb
sbb
ds
xlat
ljmp
dec
xor
jmp
add
cli
les
test
sub
xor
pushl
sub
push
repnz
mov
shrl
std
js
inc
add
add
sub
sbb
ficoms
or
lods
iret
test
jmp
inc
add
add
add
lret
and
mov
je
pop
add
add
and
pushl
decl
add
add
add
or
stos
fwait
add
or
mov
add
pop
mov
in
js
les
movsl
add
insb
loopne
push
adc
lcall
lahf
cwtl
pop
cmp
add
sub
out
das
fstpl
xlat
jge
lods
jl
sahf
enter
push
cli
jo
jmp
add
add
push
movl
cmpsb
add
stos
xchg
repz
mov
jge
add
add
jecxz
movb
insl
xor
ljmp
pop
add
add
filds
fdivr
xor
decl
sar
js
dec
pop
mov
std
repnz
insl
pop
aad
add
sub
popf
jns
add
mov
outsb
daa
add
add
insl
lret
add
xchg
jb
lcall
jl
lcall
cmp
mov
mov
sub
push
add
sahf
cmp
xchg
and
push
sub
add
push
add
sbb
add
inc
add
push
jnp
cmp
pushl
out
lock
add
xchg
xchg
xchg
xchg
wrmsr
add
js
or
cmp
add
add
ja
pushl
and
in
xchg
insl
call
add
mov
jl
stc
or
add
push
into
js
add
dec
lea
jb
incl
loope
lods
addl
inc
add
or
addl
insl
outsb
jg
sbb
add
aam
add
in
fisttpll
addl
add
fwait
sbb
int3
cmpsl
add
push
ljmp
cmp
daa
add
add
fyl2x
pop
das
mov
sarl
add
add
in
and
incl
push
add
cmc
and
int
push
add
and
cmc
mov
outsl
sbb
dec
pop
lret
lret
xor
jmp
sub
call
add
and
mov
add
add
call
lock
mov
add
mov
aad
add
pop
dec
popa
add
push
add
cs
das
cmp
addl
mov
add
xchg
push
add
xlat
cld
cltd
mov
incl
call
add
popa
add
add
lcall
add
out
xor
add
incb
add
push
int
ss
std
in
movl
mov
add
daa
add
and
call
pop
inc
add
add
add
fnstsw
test
dec
test
xchg
cwtl
mov
add
add
mov
mov
lret
push
dec
insb
inc
add
mov
add
jmp
add
add
push
add
cmp
mov
jo
jmp
ljmp
add
mov
cmp
fldenv
add
movsb
add
jmp
push
xor
decl
xor
faddl
lods
pop
imul
sti
add
jmp
jmp
mov
mov
add
dec
icebp
inc
add
jns
popf
mov
and
dec
filds
dec
xchg
loop
mov
or
xchg
mov
sti
test
imull
xchg
mov
jp
incb
add
popl
out
pusha
add
jne
xor
out
or
add
call
adc
inc
add
add
add
enter
stos
shlb
imul
incl
ljmp
std
mov
test
dec
cmp
inc
add
out
stos
jo
lcall
or
add
xchg
mov
or
movb
add
mov
fwait
rclb
sub
nop
lret
add
gs
push
add
jb
lcall
or
add
stc
add
mov
lret
lcall
jae
jmp
cmp
add
push
add
push
into
data16
outsb
mov
push
rolb
mov
add
enter
pusha
add
dec
test
inc
add
dec
ret
and
inc
add
add
cmp
add
xchg
ret
add
imul
add
movb
add
jnp
sahf
inc
add
sbb
div
aad
dec
addb
push
add
mov
call
adc
stc
ss
mov
pushf
pop
mov
add
movl
add
push
mov
add
and
push
std
call
sahf
jle
mov
dec
push
cmp
and
ficoms
mov
add
or
pop
insb
sahf
addr16
add
sbb
add
int
add
add
decl
sub
add
mov
add
push
inc
add
testl
add
aas
xlat
lea
add
inc
add
add
in
in
enter
ret
add
call
add
jmp
ja
mov
sbb
sub
lret
mov
stos
pop
add
sahf
in
push
testb
sbb
add
loop
dec
clc
mov
add
add
add
cli
cmp
addb
gs
jbe
icebp
xchg
pop
addl
repnz
mov
and
inc
add
pusha
add
mov
xchg
pop
xchg
inc
add
add
add
sub
add
jbe
adc
add
push
cwtl
dec
push
outsb
das
jns
adc
add
call
add
pop
add
add
add
inc
add
pop
add
insl
push
mov
pop
add
iret
mov
xchg
mov
add
dec
inc
add
roll
popa
add
mov
mov
pushl
pop
pushf
add
ljmp
icebp
pop
ljmp
lcall
and
incl
add
jmp
add
add
sub
aaa
popa
add
test
mov
push
add
dec
dec
add
or
lcall
add
mov
or
or
in
addl
adc
cmp
add
xor
mov
push
out
fdivs
arpl
push
stos
add
decl
pop
and
incl
push
mov
inc
add
jmp
icebp
mov
in
ljmp
add
add
movsl
add
sbb
add
incl
sub
add
lds
inc
add
mov
add
mov
rolb
and
dec
mov
call
adc
add
xlat
jb
lcall
mov
mov
sbb
add
jmp
add
inc
add
jle
or
add
add
xrelease
data16
add
call
xchg
and
ljmp
ds
add
lcall
stos
lret
mov
incl
jb
decl
dec
sbb
hlt
xor
call
add
mov
pop
cmp
add
add
movb
jb
call
add
jmp
add
incl
mov
aad
xchg
and
ljmp
and
ljmp
dec
outsb
xchg
in
inc
add
pop
scas
cwtl
jno
jmp
add
pop
repnz
cmp
add
add
lods
filds
add
outsb
pop
rolb
popa
add
dec
sub
add
add
test
inc
add
lods
shrb
add
mov
test
testb
test
push
xor
cld
pushf
or
mov
add
sbb
fcompl
jmp
xchg
push
adc
lcall
add
add
xor
call
lahf
addb
nop
mov
add
push
push
shl
add
sbb
add
test
addl
sbb
add
add
repz
mov
cmpsb
add
in
comiss
popf
xor
push
push
add
test
movsb
add
shlb
add
lcall
add
mov
aad
daa
add
je
add
lret
cmp
stc
jecxz
mov
add
pushf
std
or
mov
dec
lret
mov
mov
add
in
mov
addb
adc
add
fiaddl
mov
scas
push
add
mov
add
in
das
mov
add
jb
jmp
mov
add
pop
cltd
inc
add
push
sbb
add
mov
dec
fiadds
add
add
cld
push
push
add
xchg
add
mov
add
jg
lods
add
lcall
add
ljmp
negl
nop
mov
nop
arpl
ljmp
addb
nop
pushf
push
mov
loopne
inc
add
lock
and
lcall
inc
add
pushf
inc
add
add
decl
add
add
cli
fidivrs
movl
xor
inc
add
push
bound
jmp
call
inc
add
dec
loop
mov
stos
jnp
push
cwtl
sub
add
and
push
xchg
mov
enter
add
push
add
mov
pop
mov
scas
mov
add
lea
add
les
pop
loop
adc
in
cltd
stc
lods
iret
into
ja
add
sti
and
xor
add
lods
add
call
je
mov
add
jae
call
adc
incl
adc
test
add
sub
add
pop
fsubrl
jns
add
add
neg
cmpsb
add
add
movsl
add
pop
add
add
call
add
sahf
mov
add
jmp
test
jae
ljmp
mov
jle
jmp
incl
and
jmp
add
and
decl
dec
lock
insl
xor
jmp
add
in
jge
scas
imul
roll
jle
pusha
add
movsl
add
add
jns
add
js
add
call
cld
sbb
adc
jmp
pop
jmp
and
pushl
call
popf
xchg
testb
fsubp
add
add
repz
or
add
pushl
icebp
and
call
roll
incl
add
pop
loope
xchg
or
and
incl
jns
dec
inc
add
push
inc
add
mov
inc
add
mov
lret
and
fsubr
ror
push
add
xchg
and
incl
lcall
icebp
xchg
iret
mov
mov
add
xor
mov
jge
and
aad
mov
lock
add
jle
in
add
decl
push
stc
xor
jmp
dec
fdivl
ljmp
lds
cmpsl
add
push
call
inc
add
das
cmp
cmp
cmpsb
add
adc
in
cmp
dec
push
add
outsl
jnp
jne
das
add
jns
imul
into
jmp
add
add
add
repnz
ljmp
push
int3
xchg
lods
mov
add
incl
add
in
iret
mov
pop
sbb
dec
inc
add
cmp
aam
dec
mov
add
enter
jp
add
add
lock
add
add
ljmp
add
and
jmp
add
add
mov
inc
add
lcall
sub
insb
out
push
and
incl
add
mov
mov
call
mov
add
sub
adc
pushl
cld
or
jmp
add
add
xchg
lods
movsl
add
xchg
xor
cmp
sub
rorl
aaa
pop
cld
push
shll
add
jno
pushl
add
xor
cmp
and
out
lret
bound
fcoms
jmp
ljmp
lret
addb
add
test
jo
out
push
lock
add
and
mov
adc
ljmp
push
add
cmpsl
add
xchg
icebp
inc
add
mov
xchg
movb
fcmovbe
push
ficompl
xchg
fmul
or
pop
repnz
scas
and
call
lcall
push
adc
push
nop
cmc
stos
scas
out
in
or
inc
add
adc
lods
sub
add
mov
add
add
les
dec
sti
or
add
movsb
add
inc
add
jo
jmp
int3
divl
test
add
add
lods
and
xor
mov
fdivrl
and
pop
mov
rolb
add
dec
cmp
xchg
outsb
cmp
add
add
add
imul
and
sbb
add
add
fdiv
push
add
loop
popf
xchg
mov
daa
add
mov
push
mov
repnz
mov
add
sub
mov
or
jbe
mov
add
ds
ljmp
push
nop
lret
movl
pop
bound
jmp
insl
fwait
movl
add
add
add
scas
loope
adc
dec
scas
mov
xchg
inc
add
loopne
movsl
add
add
jp
pop
int3
adc
add
fmull
repz
add
pop
rolb
mov
xor
add
nop
xchg
jo
pushl
jbe
jmp
fwait
js
outsb
jmp
mov
arpl
pushl
mov
decl
xor
pushl
mov
add
add
mov
xchg
popa
add
xchg
addl
add
ja
add
sbb
shlb
add
stos
mov
add
push
add
stc
sub
or
pop
fsubrs
add
cwtl
mov
add
xchg
pop
jae
ljmp
repnz
sbb
shl
add
jle
iret
negb
and
fnop
out
mov
scas
sti
adc
lcall
movb
mov
fxch
out
xor
aad
dec
insb
mov
loope
addb
inc
add
and
incl
push
adc
ljmp
dec
jae
inc
add
add
adc
lcall
jb
fisubl
nop
clc
pop
dec
inc
add
clc
jecxz
inc
add
lock
add
outsl
test
cmp
cmc
ljmp
push
lret
pushl
add
or
dec
dec
sbb
add
mov
add
lea
cmc
loope
add
adc
push
outsl
and
jmp
add
pusha
add
adc
dec
movb
push
add
test
add
stos
add
movb
add
clc
xlat
popl
pop
popf
mov
in
out
jecxz
inc
add
add
mov
add
mov
pop
jbe
pop
inc
add
add
in
add
insb
cld
push
and
pushl
adc
pushl
jmp
js
add
mov
add
movb
push
in
mov
dec
push
add
fcoml
or
cmp
mov
fcomip
jmp
sub
mov
cmp
add
call
dec
mov
add
add
mov
jnp
add
add
xlat
int3
dec
and
jmp
stc
cltd
add
inc
add
dec
add
decl
add
push
enter
add
dec
loop
in
movl
add
in
and
xchg
pop
mov
jo
pushl
mov
add
call
add
je
jge
mov
add
ret
add
jmp
add
xor
ljmp
add
add
add
pop
mov
mov
lock
lock
pop
jns
push
add
jae
cld
loopne
sbb
sbb
xchg
mov
add
add
jmp
add
je
add
ret
add
jmp
stos
push
dec
jb
dec
enter
add
xor
ljmp
rolb
stos
fnstenv
jmp
add
add
popf
mov
outsb
hlt
ljmp
add
xchg
jb
call
add
arpl
ljmp
outsl
mov
add
cmp
lods
dec
inc
add
xor
pop
push
sub
imul
out
xchg
push
add
lods
push
add
add
and
ljmp
add
aad
icebp
les
xchg
jb
inc
add
mov
jbe
out
mov
outsl
jge
add
add
inc
add
ds
stos
insb
in
jb
mov
add
inc
add
mov
iret
mov
mov
pop
push
cli
mul
add
add
in
test
add
jecxz
into
pop
add
add
add
add
dec
jg
add
push
add
xor
add
jecxz
sbb
icebp
dec
push
lcall
sub
add
add
dec
inc
add
mov
es
fsubrp
dec
imull
add
jnp
jge
push
js
js
sbb
add
jmp
add
push
sbb
xchg
movb
negl
and
addl
or
mov
adc
call
call
iret
dec
ja
jg
inc
add
cmc
inc
add
data16
cwtl
dec
mov
adc
jmp
decl
fwait
push
add
data16
and
decl
add
hlt
dec
dec
je
add
add
stos
and
inc
add
push
sbb
jmp
pop
and
inc
add
mov
adc
lcall
mov
xlat
lods
jbe
lcall
jb
incl
jno
lcall
jb
push
les
addl
lahf
in
xchg
adc
pushl
cmp
and
pushl
call
add
push
pop
add
stc
xchg
out
in
add
out
mov
inc
add
and
decl
lea
add
xchg
addb
add
add
mov
push
fistpl
movb
jle
add
add
inc
add
decl
sub
call
add
incl
call
movsl
add
stc
mov
cli
cmc
cmpsl
add
test
jmp
sbb
in
out
je
add
add
decl
mov
or
adc
jmp
add
sub
mov
add
sbb
rcrb
cld
bnd
add
add
fstps
insl
sub
add
jnp
out
stos
adc
dec
scas
mov
add
mov
add
add
pop
insb
mov
in
insl
leave
clc
test
inc
add
je
pop
jo
pushl
adc
add
push
add
cmp
adc
decl
inc
add
call
mov
lcall
stos
int
add
aam
popa
add
add
cmp
lea
roll
add
sti
push
add
cmp
jmp
or
push
cmp
add
icebp
movsl
add
pop
scas
lds
xor
lcall
lea
jmp
push
add
pop
mov
add
pop
push
daa
add
jmp
add
add
adc
out
scas
push
add
mov
push
add
fwait
adc
jnp
add
dec
test
add
lods
or
cmp
pop
fcompl
or
mov
add
fwait
xor
pushl
jmp
add
fcoms
lcall
incl
test
scas
cmp
add
adc
call
add
or
add
mov
mov
les
fwait
lods
test
dec
mov
mov
add
add
and
lcall
pop
jle
add
inc
add
pop
sub
pop
inc
add
mov
sub
sarb
sbb
add
xchg
mov
jne
add
lcall
add
jmp
call
add
jecxz
cmc
xor
cmp
daa
add
decl
bound
jmp
jae
in
fcmovnu
dec
js
add
push
add
mov
and
ljmp
xlat
shll
add
add
xchg
bound
decl
jecxz
into
int3
adc
lcall
jnp
ret
push
xchg
mov
daa
add
and
push
adc
incl
xchg
dec
imul
mov
add
shrb
push
adc
flds
mov
add
sbb
add
add
and
dec
adc
jmp
in
test
out
ds
push
or
pop
cli
lock
add
mov
lock
int
idivb
movl
jo
inc
add
add
outsb
mov
mov
mov
push
add
jno
call
or
out
jne
enter
mov
add
add
and
incl
add
add
test
lock
inc
add
je
mov
add
mov
lcall
insl
insb
pushf
aad
add
jae
cmp
push
jno
call
add
cmp
add
jecxz
push
rcrb
clc
xchg
imul
push
xor
ljmp
addb
cwtl
aas
test
shll
jecxz
ds
dec
xchg
add
add
in
lods
sbb
xchg
mov
adc
pushl
add
jp
and
jmp
call
sbb
ret
add
rcll
loop
outsl
icebp
addl
adc
add
add
lcall
lcall
dec
movb
add
mov
test
mov
add
imul
sub
xor
mov
test
add
pushl
call
cmpsl
add
mul
add
decl
addb
add
mov
push
add
pusha
add
cmpsl
add
int
add
es
aas
and
add
add
jnp
jne
add
lahf
inc
add
and
out
dec
insl
loop
cmp
cwtl
add
push
pop
loopne
pop
xor
add
mov
outsb
out
inc
add
adc
add
addb
add
add
xchg
in
pop
add
add
add
jecxz
mov
add
add
mov
test
push
stos
mov
add
mov
hlt
sti
out
ret
lock
push
add
sbb
paddusw
pushl
pushl
lcall
jl
out
out
outsb
xchg
mov
fisubl
add
add
cmp
out
sub
das
inc
add
add
aam
in
mov
add
out
bound
pushl
mov
rorl
add
rol
add
add
mov
jmp
outsb
fiaddl
mov
push
in
cltd
fists
add
fwait
insb
shr
cmp
add
jmp
add
test
cmp
add
pushl
add
fcomps
push
add
call
add
pushf
xchg
mov
ds
xlat
pop
cld
idivb
stos
fldt
jbe
mov
popf
mov
add
add
mov
mov
push
add
ds
das
popa
add
addr16
ds
stos
pop
mov
dec
mov
shlb
sbb
add
jmp
jmp
jmp
iret
xchg
addl
mov
cwtl
pop
xor
call
add
imul
mov
add
stos
push
add
call
shll
add
pop
js
add
dec
pop
add
add
jge
in
push
sbb
inc
add
jge
mov
add
int3
jle
add
in
cmp
add
mov
mov
add
decl
movsl
add
fstpl
add
ljmp
push
add
sub
xchg
addl
mov
xlat
icebp
jo
out
cmp
cld
mov
mov
add
add
decl
test
add
add
popf
lea
xchg
sub
cmp
add
outsl
fwait
adc
inc
add
push
adc
pushl
add
enter
mov
arpl
dec
or
rcr
mov
add
lcall
inc
add
js
mov
sbb
dec
or
xchg
scas
push
adc
ljmp
pushf
cmp
push
adc
jmp
add
or
lret
pushf
mov
add
imul
adc
mov
adc
fsubl
addb
add
add
lock
fnstsw
cmp
add
ficoml
add
imul
aad
lds
enter
cld
cld
leave
cmpsl
add
les
lcall
scas
push
fidivrl
add
out
cmp
add
hlt
js
loopne
sub
add
shlb
call
bound
jmp
lcall
icebp
sbb
mov
nop
roll
add
popf
bound
incl
pushl
jmp
add
add
mov
add
xor
call
add
and
and
call
cmp
xlat
call
std
scas
dec
adc
jmp
aad
ret
add
repnz
add
add
xchg
mov
dec
mov
mov
mov
add
fstpt
js,pn
add
lock
decl
cltd
push
dec
cmpsb
add
jp
data16
add
jo
lcall
xor
pushl
xlat
scas
and
incl
add
mov
dec
sub
decl
aam
add
fisubs
data16
add
addl
push
mov
add
add
lcall
call
lret
xchg
cmp
and
cmp
clc
inc
add
lods
mov
sbb
das
stos
repz
cs
add
mov
sbb
incl
pop
pop
rcrl
into
imul
add
pop
ficoms
dec
ljmp
lret
into
jbe
add
fbld
je
movb
cmpsb
add
test
fdiv
in
mov
add
outsb
dec
dec
stc
inc
add
ret
xor
ljmp
in
loop
sbb
add
jmp
scas
mov
sarl
pusha
add
sbb
or
add
int3
je
shrl
inc
add
add
aas
xor
ds
add
ror
mov
out
xchg
inc
add
imul
mov
outsl
lock
psubsw
call
add
or
add
mov
or
out
xor
decl
cmpsb
add
add
cmpsl
add
loope
dec
xchg
adc
mov
imul
inc
add
fildl
inc
add
jp
xchg
lods
cmpsl
add
call
mov
les
adc
add
out
dec
outsl
mov
sub
add
xor
ljmp
js
mov
call
add
call
add
dec
mov
add
arpl
js
xor
incl
add
and
cs
add
or
out
jle
enter
add
fwait
mov
dec
imul
out
mov
mov
add
mov
jbe
add
out
repz
add
jnp
add
outsl
test
add
push
nop
movl
pop
leave
cmpsl
add
add
add
add
push
addb
in
clc
mov
sub
jl
fs
sbb
push
xchg
push
data16
jne
add
fdivs
popf
out
addl
add
or
add
adc
dec
stos
cmpsl
add
push
add
cmp
cmp
loopne
xchg
fcomps
sbb
pushl
mov
test
insb
mov
clc
stc
xchg
or
add
mov
scas
or
dec
cmc
lods
push
add
push
insb
jns
sub
iret
in
loop
mov
mov
add
ljmp
add
idivl
pop
pop
dec
mov
fdivrs
mov
testl
mov
rcl
cmp
clc
iret
mov
add
icebp
mov
add
pushl
add
pop
sbb
jne
stos
sub
adc
inc
add
xor
add
fisttps
mov
sbb
mov
add
outsb
ss
popl
add
in
xor
in
aas
lods
outsl
pop
mov
jae
decl
data16
add
lods
nop
call
cld
dec
mov
adc
call
mov
push
add
cmp
das
add
out
ja
into
loopne
or
add
cs
sbb
iret
xor
call
add
jnp
jnp
addb
add
add
cwtl
cld
imul
add
popf
lods
sub
add
mov
test
rcll
mov
add
insl
in
cmp
mov
icebp
push
add
movsl
add
add
nop
scas
push
fcomps
cmp
mov
push
add
add
mov
sub
mov
xor
incl
push
add
fsubrl
pop
sbb
add
sbb
jle
les
roll
inc
add
lods
push
add
add
sbb
add
xchg
movsl
add
pop
add
add
add
incl
add
add
add
push
mov
pop
imul
add
ljmp
int3
and
test
inc
add
addr16
fucomp
pxor
jnp
addb
add
roll
add
mov
add
incl
decl
add
add
mov
sub
jge
lock
fimull
inc
add
data16
add
int
add
xor
add
dec
push
add
fldl
add
test
and
inc
add
cmc
popa
add
mov
add
add
add
sub
mov
add
mov
stos
push
add
dec
add
pushl
jb
ljmp
adc
add
mov
cwtl
into
imul
dec
std
addb
loopne
mov
addr16
xor
movsl
add
add
and
fcmove
in
adc
call
add
adc
add
int3
mov
jno
pushl
and
add
xchg
push
push
adc
dec
or
add
nop
fstp
data16
enter
ljmp
push
add
inc
add
add
decl
add
push
add
jge
or
sbb
add
pushf
mov
add
add
in
mov
jmp
add
or
xor
jmp
ss
push
add
jg
and
decl
xlat
jmp
ljmp
stos
cmp
and
jmp
ljmp
jg
movl
pcmpeqw
out
jo
lcall
outsb
hlt
aas
popf
movb
arpl
mov
jmp
ljmp
call
cmp
ljmp
add
mov
add
pop
addb
loopne
div
mov
movl
add
cld
lock
leave
pop
lods
and
adc
aaa
mov
je
add
sarb
ret
hlt
add
add
add
lcall
adc
dec
mov
movl
incl
add
cmp
add
ljmp
lret
jl
testl
in
test
stc
cs
add
and
dec
rep
stc
jp
test
jb
ljmp
pushl
in
imul
add
pop
adc
lock
int
repz
sbb
push
add
jg
or
cld
mov
into
xchg
sub
fneni(8087
add
jbe
add
call
dec
xor
xor
ljmp
aam
add
lcall
data16
add
and
sub
hlt
scas
fcmovnu
roll
add
cmp
int3
jp
mov
add
jl
adc
cmp
jae
decl
std
dec
hlt
cltd
jae
decl
inc
add
je
add
fcomi
movb
jg
cmc
jle
add
inc
add
add
add
ja
inc
add
lds
pop
mov
mov
mov
data16
mov
flds
adc
push
in
push
add
mov
add
decl
data16
mov
add
sub
rcll
add
je
mov
mov
add
add
pusha
add
rolb
mov
sub
inc
add
add
lcall
add
call
dec
inc
add
pop
xchg
dec
mov
mov
mov
jae
call
adc
lahf
push
add
add
ss
pop
jo
decl
add
insb
mov
leave
addl
inc
add
aad
push
add
jecxz
xchg
in
pop
icebp
add
incl
add
add
add
jne
add
xchg
or
scas
ret
add
jmp
mov
iret
xchg
les
pop
sub
jg
add
call
adc
decl
jno
jl
jg
add
add
push
sti
and
lcall
mov
movsb
add
add
add
das
mov
loopne
mov
hlt
arpl
pushl
lcall
add
mov
out
stos
test
jmp
add
stos
cmp
add
inc
add
mov
dec
fldenv
cmc
pop
cmp
add
sbb
lcall
sbb
adc
and
fisubs
add
repnz
enter
cmpsb
add
les
inc
add
inc
add
int
xor
pushl
add
popf
push
out
pop
mov
out
xor
ljmp
add
sbb
roll
outsb
pop
std
push
add
int3
mov
fnsave
or
rorb
add
push
mull
or
mov
repnz
cmp
add
add
inc
add
incb
dec
inc
add
add
jb
jmp
add
dec
xor
xchg
bound
ljmp
add
pop
xchg
dec
sbb
add
jle
lahf
pop
add
outsb
xor
pushl
add
decl
sbb
mov
inc
add
mov
ja
add
jmp
push
cmp
dec
jnp
mov
sbb
pop
iret
aad
add
xchg
mov
cmpsl
add
sub
add
mov
add
pop
push
add
clc
adc
call
sbb
pop
push
stos
and
iret
js
add
mov
xchg
into
jo
jmp
add
mov
inc
add
xor
dec
stc
fisubs
jmp
add
sti
dec
divl
add
jae
aas
mov
loope
pop
daa
add
add
pop
jne
push
add
adc
incl
add
inc
add
pushl
pushl
jns
add
sarl
fisubl
push
mov
cmp
add
out
jp
inc
add
push
add
mov
add
jbe
push
add
sub
add
dec
and
icebp
or
and
in
push
sub
or
add
lea
scas
inc
add
sub
jbe
mov
addl
aad
mov
out
and
cmp
add
mov
jns
in
or
add
pop
mov
pushf
lahf
mov
add
add
xchg
les
cmp
add
add
push
scas
push
adc
js
add
or
add
push
add
lcall
add
add
pushl
cmp
jmp
fcoms
dec
stc
addl
or
add
cli
xchg
sbb
push
add
pop
movl
add
add
hlt
and
incl
pushl
add
push
add
int3
dec
outsl
dec
lods
insl
sti
pusha
add
sahf
or
aas
jo
cld
mov
and
pushl
push
push
and
incl
add
ret
add
add
popf
test
jae
pushl
ljmp
in
std
cld
pop
lock
lcall
add
jb
decl
and
pushl
incl
add
cmp
movsb
add
pop
roll
push
sti
loope
fnstsw
xchg
gs
loope
addl
mov
mov
add
test
xor
jmp
xor
lcall
add
rolb
pop
push
dec
adc
rolb
xor
ljmp
push
or
insb
cmp
daa
add
xchg
pop
pop
ds
fucompp
xchg
inc
add
add
fdivl
decl
int
sbb
mov
xor
call
or
incl
add
testb
decl
add
in
addl
add
mov
dec
sub
pop
push
add
insl
outsl
pop
lock
xchg
push
loope,pn
add
decl
lea
add
inc
add
sbb
and
call
ljmp
add
scas
popf
scas
bound
call
sub
add
xchg
scas
loope
jne
lods
jne
imul
fistl
pop
lds
pop
ljmp
hlt
enter
mov
add
add
outsl
inc
add
ret
add
leave
mov
add
dec
jne
push
add
in
test
sbb
lcall
out
push
add
xchg
in
mov
add
lcall
inc
add
push
sbb
add
jno
incl
mov
ljmp
push
add
sbb
push
and
fcmove
loopne
cmp
mov
and
push
add
and
inc
add
add
dec
in
cmp
add
push
add
call
mov
mov
mov
sbb
clc
dec
inc
add
mov
mov
mov
popa
add
mov
push
imul
jmp
add
insb
mov
add
enter
add
and
aas
pop
out
repz
cmp
add
add
call
mov
add
add
add
call
int3
and
ljmp
xchg
fildl
pushl
lahf
aas
repnz
jno
pushl
addl
add
pop
sub
dec
add
call
add
dec
cmc
outsb
stc
lds
cmp
cltd
rcl
push
sbb
xchg
sbb
add
lock
cli
lret
pusha
add
push
jae
ljmp
mov
mov
pop
add
xor
jmp
call
lahf
in
dec
stos
popa
add
adc
lcall
adc
pushl
call
jg
add
fwait
int3
clc
loopne
lea
out
rcrl
imul
dec
lods
cmp
add
dec
pusha
add
cs
and
lcall
xchg
push
pop
lahf
xor
push
xchg
sbb
movsl
add
cmp
dec
xlat
mov
mov
nop
sbb
addl
cld
xor
jl
add
cmp
add
jmp
add
clc
add
jne
add
add
push
add
mov
adc
outsb
xchg
test
and
lcall
lods
sub
ret
jns
add
flds
fsts
sub
add
and
lcall
inc
add
dec
mov
jns
add
dec
mov
aam
mov
mov
add
add
xchg
ret
add
xchg
stos
test
add
push
xor
inc
add
jmp
add
jmp
inc
add
mov
add
scas
jbe
add
add
mov
and
jmp
pop
xchg
aaa
lods
xchg
ljmp
add
jmp
pop
add
add
lcall
xor
cmp
push
add
call
ret
add
lods
cmc
and
push
cld
aas
movb
ret
add
rolb
ss
mov
aas
mov
jmp
int
addb
jo
call
add
add
mov
add
xchg
xor
call
add
test
out
pushf
or
add
stos
push
add
cmp
add
incl
cmp
or
push
add
adc
ljmp
mov
repz
add
or
dec
jne
push
shlb
fwait
push
add
cs
addl
add
and
add
lcall
xchg
lahf
inc
add
mov
add
add
nop
inc
add
add
incl
add
bound
out
add
in
dec
movl
in
mov
rorb
and
push
movb
imul
test
loop
fmul
rolb
mov
or
in
mov
cs
loope
icebp
mov
dec
out
out
nop
daa
add
add
fstl
add
or
add
movsl
add
add
test
sub
jns
outsb
out
cli
mov
fmul
dec
pop
dec
add
call
decl
add
add
aam
add
lret
jge
test
jb
jmp
xchg
inc
add
stos
stos
push
sbb
add
addb
out
push
add
ja
mov
mov
add
add
sub
add
adc
decl
das
xchg
sub
add
jns
repz
movsl
add
xor
jmp
cmpsb
add
pushl
mov
add
add
sub
add
add
or
fists
mov
cli
repnz
add
xchg
xchg
jecxz
sub
in
mov
mov
add
add
add
incl
ljmp
mov
sbb
add
add
icebp
inc
add
add
cld
mov
mov
loop
loope
push
add
imul
add
mov
int3
bnd
push
sbb
sbb
dec
jo
pushl
add
inc
add
push
lods
lcall
add
sar
shlb
sbb
adc
lcall
add
add
imul
add
je
mov
add
das
mov
mov
sbb
sbb
adc
mov
xchg
dec
sub
sub
add
popf
jns
aas
xchg
mov
jl
add
lcall
cld
pop
adc
add
and
cmp
add
xor
lret
in
and
add
add
jle
mov
testb
mov
mov
pop
pop
fstl
cmp
jno
cli
add
decl
add
dec
add
lcall
addl
push
adc
call
push
in
shlb
inc
add
push
cmp
daa
add
call
add
sub
cmp
lret
xchg
add
cmp
sbb
mov
nop
jnp
jp
sbb
jmp
add
or
sub
cmp
aad
xlat
enter
add
add
ljmp
bound
jmp
add
sub
call
incl
xchg
lods
push
add
dec
cmpsl
add
add
add
add
inc
add
pop
rcll
add
lock
add
dec
push
add
push
roll
add
and
call
add
push
add
out
jnp
add
pop
sbb
add
lret
loope
xlat
cltd
pop
add
add
add
call
fldt
add
inc
add
dec
dec
insb
jb
push
fsubrs
push
pusha
add
fnsave
add
push
sbb
mov
add
add
add
push
fwait
add
jmp
add
add
aam
mov
sbb
aaa
adc
mov
add
xchg
mov
ljmp
add
testl
and
incl
add
fbstp
mov
jmp
add
add
fiaddl
sub
sub
add
jle
sub
fbstp
call
addl
add
mov
fsubl
add
jmp
add
add
or
arpl
decl
bound
jmp
add
mov
add
add
pop
fistps
mov
jmp
add
add
add
cltd
lock
pop
cmp
add
xchg
lret
sbb
ret
add
add
popa
add
xlat
mov
aaa
mov
push
filds
ljmp
add
fmul
daa
add
negl
sub
out
jmp
cmp
adc
add
addl
add
decl
add
ja
sbb
add
add
fisubs
add
addl
sbb
push
jno
ljmp
or
add
add
pop
fcomps
add
cmp
clc
out
xchg
data16
push
mov
cmpsb
add
sbb
adc
decl
daa
add
movb
mov
sbb
xor
test
shlb
imul
jmp
add
inc
add
add
cwtl
rcrl
add
or
add
sub
data16
call
xor
cmp
xchg
jl
ret
add
pop
or
nop
ja
pushl
mov
imul
push
add
add
ds
int3
jmp
lock
mov
add
add
push
test
cmc
mov
add
movl
adc
ficomps
outsb
sbb
in
xor
jmp
call
add
outsb
mov
decl
repz
incl
decl
fsubrs
sbb
mov
add
xor
incl
incl
add
jmp
out
sub
add
movb
sbb
scas
and
mov
mov
add
pop
pop
sub
mov
repz
and
jmp
fbstp
ljmp
add
push
add
out
lcall
add
inc
add
inc
add
add
xchg
sub
stos
fisttpl
add
jnp
add
enter
mov
add
dec
movsl
add
pop
and
push
fdivr
aam
add
call
sbb
add
ffree
add
sub
adc
add
cmp
mov
inc
add
pop
movsb
add
stc
add
ljmp
add
add
pop
sbb
lods
jbe
dec
shlb
jmp
cli
xor
incl
add
xchg
addb
movl
aas
or
push
add
xor
add
add
je
insl
rol
add
add
in
jno
jmp
add
ss
or
xchg
add
fsubr
mov
out
lret
dec
push
add
adc
fsubl
adc
lock
lcall
cmp
add
add
adc
pushl
fs
fildl
inc
add
loop
xchg
icebp
cmp
sub
and
lcall
aaa
mov
pop
pop
insl
cmp
addb
add
mov
jno
mov
ret
hlt
cmp
jge
add
sbb
add
fsts
push
add
lret
dec
scas
mov
add
mov
addb
clc
push
add
mov
jne
sub
add
cld
iret
pop
jmp
fsubrs
ja
add
decl
inc
add
std
push
add
ljmp
call
add
movsl
add
add
lea
xor
call
add
scas
xchg
fst
mov
pop
and
jmp
add
in
int
in
pop
sbb
fmuls
movsl
add
add
lahf
push
sbb
cltd
inc
add
movb
mov
lock
add
cmp
or
xchg
movl
dec
ret
add
push
add
popa
add
pop
into
jecxz
js
aaa
jge
adc
pushl
push
in
dec
pop
mov
add
xchg
fisttpll
roll
dec
fcom
jae
decl
inc
add
add
dec
cmp
add
js
cmp
add
loope
dec
in
xor
inc
add
xlat
imul
xor
pushl
lcall
cs
pop
add
cmp
push
jns
dec
insb
std
cltd
leave
add
add
dec
popa
add
mov
fwait
lods
clc
dec
cmp
add
add
inc
add
decl
ja
stos
lea
add
add
xchg
inc
add
cmp
inc
add
lods
sti
pop
adc
mov
inc
add
add
sub
add
mov
lcall
idivl
jle
jbe,pt
dec
ja
cmp
add
test
dec
xor
add
add
adc
ljmp
sub
jmp
imul
add
mov
mov
test
inc
add
movsl
add
ficoml
add
out
lret
mov
jecxz
incl
add
mov
add
cld
pushf
icebp
imul
mov
add
outsb
xchg
addl
lds
lds
movl
add
xchg
mov
add
call
pushl
lcall
cmp
cs
add
addl
psubq
pushl
test
mov
mov
add
cmp
sbb
add
dec
jg
mov
lcall
dec
insb
or
cwtl
aad
add
adc
jp
cmpsl
add
inc
add
add
call
add
fcomps
mov
imul
sbb
popf
add
push
jnp
pushf
sbb
dec
xchg
imul
add
into
pop
push
add
xor
jle
xchg
and
incl
into
pop
in
addb
add
decl
aas
mov
add
stos
cmp
inc
add
mov
adc
cmp
scas
aam
cmp
cltd
in
push
xchg
aas
insb
sbb
or
int
inc
add
cmpsl
add
pop
fcomi
arpl
decl
mov
inc
add
mov
into
xchg
mov
add
das
shll
incl
dec
out
into
test
movsl
add
jp
cmp
pop
add
mov
sahf
adc
call
ja
add
jns
adc
pushl
int
jp
add
es
addl
outsb
pop
roll
push
mov
mov
sahf
sbb
lcall
mov
jo
jp
add
add
inc
add
rolb
add
ljmp
and
call
rorb
jns
lret
movsb
add
xchg
insb
ljmp
lock
hlt
addb
movsl
add
pop
push
jmp
add
add
xchg
jno
ljmp
out
and
jmp
add
lods
repz
mov
jo
aas
sbb
add
test
outsl
adc
inc
add
mov
cmp
add
jnp
add
xor
dec
push
add
jmp
decl
lds
xor
xchg
xchg
add
dec
in
sqrtps
call
data16
jbe
add
loopne
and
inc
add
add
sub
insl
pop
aam
mov
push
add
xchg
push
out
test
mov
mov
mov
fidivrs
add
lock
test
shrb
add
and
ljmp
in
mov
pop
sbb
add
add
dec
rcll
add
or
and
fs
stos
xchg
xchg
push
notb
decl
add
clc
out
inc
add
or
add
cli
cmp
add
mov
add
add
decl
cwtl
pop
mov
mov
lret
sub
roll
add
inc
add
popf
cmp
mov
xchg
mov
and
or
out
dec
loope
call
add
xchg
adc
jmp
add
roll
call
add
mov
add
ds
add
lcall
mov
cs
add
sub
sahf
aas
addl
into
lods
pop
pushf
sub
stc
jle
add
mov
in
es
mov
jnp
clc
jo
ljmp
mov
sbb
push
rolb
add
jbe
add
push
popf
push
loop
movb
add
dec
and
lcall
dec
lcall
mov
or
add
push
add
repz
add
insl
and
and
xchg
pop
add
ljmp
dec
xchg
pop
push
add
fsubrl
add
icebp
mov
dec
dec
push
add
inc
add
nop
add
inc
add
mov
lods
repnz
jno
jmp
add
push
cmp
adc
add
add
imul
incl
sete
mov
add
test
add
pop
je
mov
in
mov
daa
add
fistpl
add
adc
xor
add
sub
test
jg
push
add
shlb
add
call
add
addb
add
mov
lds
xor
lea
out
clc
mov
xchg
pop
pop
ljmp
add
xchg
pop
mov
push
lahf
movl
addl
in
inc
add
insb
aas
push
add
add
jecxz
nop
arpl
jl
xor
jmp
gs
dec
mov
enter
xor
sub
les
add
cmpsl
add
add
dec
inc
add
incb
add
add
xor
call
xchg
xor
push
add
ljmp
push
movb
sub
add
adc
pop
std
inc
add
lds
mov
add
sbb
sbb
inc
add
add
rorb
jnp
sbb
add
addl
ret
add
or
mov
add
mov
pushl
add
inc
add
sub
mov
xchg
lea
pop
pop
fldt
cmp
lret
fwait
bound
cmp
add
inc
add
sbb
add
fldcw
cmc
aas
xor
push
cmp
add
fstpl
add
les
ja
add
add
xchg
lret
inc
add
ds
push
fdivrl
add
cmp
mov
pop
fwait
mov
add
mov
add
rcrb
push
add
mulb
inc
add
mov
add
fwait
inc
add
add
mov
in
mov
roll
dec
in
test
dec
movl
xor
call
test
add
jg
add
test
pop
roll
xchg
pop
addb
frstor
or
decl
pop
lcall
ljmp
add
add
call
add
call
stos
or
push
rolb
add
jmp
jl
push
add
imul
add
incl
add
in
add
mov
bound
inc
add
add
mov
cmp
add
mov
loopne
mov
add
mov
add
stc
sub
xchg
mov
sub
xor
lcall
mov
push
mov
jmp
jg
add
pushf
cmc
test
cltd
or
test
addb
add
mov
add
mov
dec
jmp
add
add
add
jo
decl
cmpsl
add
add
sub
aad
dec
pop
out
and
add
add
sbb
add
fildll
and
push
mov
pushl
add
ljmp
sahf
cmp
cli
mov
loop
add
jnp
addb
out
jno
jl
mov
cmp
data16
jne
add
push
add
in
stos
or
inc
add
adc
ljmp
lock
add
aaa
scas
pop
iret
addb
jge
icebp
bnd
add
add
testb
data16
stc
add
fmul
jmp
xchg
fnstcw
add
sbb
movsl
add
jge
or
xchg
mov
fists
pop
dec
rcr
dec
dec
pusha
add
decb
negb
in
popf
xor
decl
cmpsb
add
add
cmp
pop
lock
add
out
insl
popf
mov
or
jmp
add
mov
loope
add
sub
push
or
add
out
movl
add
nop
sbb
or
push
mov
fcomps
inc
add
lcall
hlt
add
data16
je
addl
add
xchg
rolb
add
inc
add
rclb
scas
mov
popf
aam
add
imul
incl
add
imul
bound
call
aaa
push
arpl
call
add
push
dec
shl
pop
lahf
jmp
dec
dec
clc
jg
add
add
mov
add
inc
add
jns
pop
rorl
pop
sti
jo
incl
add
dec
cmpsb
add
sub
xor
decl
icebp
in
test
add
mov
add
ret
add
and
adc
jno
cld
aad
sbb
jle
or
add
or
nop
pop
into
lea
add
jbe
xchg
loope
mov
push
add
jp
popa
add
cmpsb
add
add
add
push
add
xor
add
fnstcw
lcall
mov
add
add
add
incl
add
mov
pop
add
dec
push
mov
add
pop
dec
dec
int3
push
movl
add
cmpsl
add
cmp
add
loopne
fistl
fsubs
add
add
add
ja
ja
leave
sub
sarb
lea
cltd
xchg
sub
cmpsb
add
add
and
lcall
pushl
add
add
pushl
inc
add
lret
or
add
add
mov
cmp
add
movb
add
xchg
cmp
shrl
cmp
xchg
aaa
fimull
adc
ljmp
mov
add
or
mov
adc
lcall
decl
dec
stc
popa
add
xchg
xor
fdivrs
dec
in
out
dec
sbb
xchg
adc
jmp
stos
pop
test
cmp
add
add
jmp
add
add
out
enter
in
clc
mov
addl
add
add
pop
cmp
add
imul
movsl
add
out
xchg
outsl
xor
add
add
mov
add
add
add
cli
fldcw
add
test
call
aad
add
xor
add
mov
add
add
decl
add
sbb
call
mov
pusha
add
pushf
js
out
btr
incl
call
xchg
or
mov
lock
dec
in
inc
add
out
push
add
push
add
xor
call
lcall
mov
lcall
mov
imul
loopne
add
lcall
mov
add
inc
add
pop
add
into
add
mov
add
pop
mov
jge
xor
out
dec
add
lcall
add
out
jns
inc
add
daa
add
push
mul
add
mov
mov
add
out
mov
insl
jmp
fcom
jae
ljmp
and
add
sub
dec
cmpsl
add
cwtl
jo
incl
stos
mov
call
dec
push
idiv
das
scas
rorb
mov
add
test
add
fisubrl
outsl
ret
mov
add
decl
ljmp
in
mov
add
add
xchg
insl
ret
cmp
add
mov
call
in
arpl
call
jmp
add
push
add
jl,pt
add
xor
lcall
inc
add
add
and
pop
jno
decl
arpl
incl
add
sub
cmp
add
add
jno
pushl
add
jnp
out
ret
add
add
add
xchg
push
add
jne
add
add
lcall
fiaddl
add
xor
pop
adc
incl
add
stos
sub
add
add
add
pop
lret
insb
xchg
jne
sub
das
mov
pop
jnp
add
inc
add
cmp
cmp
add
mov
add
and
call
arpl
jge
dec
out
addb
xor
fisubs
add
insl
mov
push
add
cmp
dec
sub
aaa
cmc
leave
scas
mov
add
test
sbb
add
pushl
ds
add
or
add
jne
jno
dec
cli
adc
add
outsl
aad
or
pop
jnp
and
decl
push
mov
jne
add
lcall
aad
dec
sbb
cmpsl
add
in
sahf
add
in
dec
mov
inc
add
adc
decl
inc
add
iret
popa
add
or
pusha
add
xchg
sbb
add
pop
xor
call
cmp
add
pop
addb
add
add
add
cmp
xchg
out
sahf
int
ljmp
dec
ror
ss
out
test
lds
sbb
mov
repz
add
or
jecxz
mov
adc
in
rcrl
les
roll
ja
jp
cmp
and
jg
cmp
push
pop
push
add
addl
add
push
add
incl
add
cwtl
movb
add
and
push
roll
fs
ljmp
add
hlt
movsl
add
or
fbstp
in
stos
flds
bound
mov
test
add
add
mov
popf
add
decl
jg
outsb
jg
in
xor
call
add
pop
xlat
add
ljmp
aad
xor
call
add
add
push
add
add
cld
jg
add
ljmp
pushl
stos
dec
rorl
add
and
add
jecxz
mov
repnz
push
mov
add
mov
ljmp
jmp
add
pop
sub
out
out
inc
add
mov
icebp
xor
or
add
mov
add
addl
cmp
mov
pushl
add
fucom
add
std
out
addl
div
dec
xchg
push
jmp
add
add
xchg
aas
jl
repnz
dec
rorl
add
push
lea
call
add
add
push
add
add
stos
lock
push
dec
bound
mov
add
stos
cmp
add
movsb
add
addb
hlt
dec
out
add
add
mov
add
mov
cmp
into
sbb
out
mov
cmovle
inc
add
pop
movsb
add
add
mov
int3
sub
ss
js
add
hlt
add
adc
add
add
movsl
add
add
add
ret
xchg
dec
insb
cwtl
fldl
xchg
sti
mov
incl
decl
or
push
add
cmc
sbb
loope
inc
add
daa
add
xor
add
push
sbb
pushl
xor
jmp
jg
cmp
sbb
popa
add
sbb
dec
or
add
adc
in
arpl
lcall
das
xor
decl
incl
mov
add
add
add
add
push
mov
pusha
add
jmp
jl
cli
push
add
jle
shrl
xchg
mov
dec
mov
out
mov
aas
mov
ljmp
ja
xor
incl
add
lods
cmp
std
icebp
scas
repnz
add
mov
stos
cmpsb
add
stos
cs
cmpsl
add
imul
mov
addl
test
div
addl
sbb
ret
add
stc
lods
xchg
rorb
add
xchg
call
push
mov
rolb
add
cmp
lcall
add
xor
ds
add
js
adc
decl
jb
jmp
nop
imul
testl
add
jg
in
lds
or
add
add
aaa
add
add
lds
xor
hlt
pop
sub
jmp
add
fs
add
dec
out
lcall
movsl
add
call
add
outsl
rolb
pop
cli
xchg
xor
pushl
push
add
ret
add
add
jno
call
das
adc
lcall
scas
jae
ljmp
add
ljmp
dec
fisubl
iret
sbb
xlat
add
ljmp
dec
fisubrs
lds
dec
dec
and
pushl
add
loop
je
add
cmp
jg,pt
push
add
xor
add
clc
inc
add
inc
add
xor
call
add
js
add
mov
incl
add
jno
pushl
add
sub
ljmp
roll
push
jne
jns
mov
add
dec
iret
push
notl
inc
add
add
xchg
mov
movl
into
test
rcrb
data16
mov
add
cmc
xchg
dec
dec
or
cmp
dec
lock
pop
add
add
or
add
fcmove
push
cmp
add
sub
imul
lahf
lcall
push
lds
lods
push
add
dec
xor
add
jnp
add
std
iret
push
fcoms
pushl
add
cmpsb
add
call
add
and
sub
cltd
sbb
das
push
add
xchg
cmpsb
add
add
add
add
and
incl
addl
jno
lcall
add
pushf
lods
dec
iret
dec
test
punpcklbw
lcall
mov
add
incl
add
notl
incl
loope
cmp
sbb
mov
inc
add
xchg
faddp
add
scas
adc
jmp
mov
loop
xchg
dec
dec
mov
adc
push
mul
add
repz
insl
jbe
enter
mov
js
daa
add
jno
jnp
add
leave
jae
push
fistps
dec
jb
call
fiaddl
pop
fnsave
cmp
out
lds
sub
pop
int3
pop
inc
add
pop
add
sbb
addl
mov
add
jmp
lcall
dec
rolb
ret
add
test
fildl
inc
add
add
out
add
add
ss
xchg
sbb
push
add
xchg
or
addb
in
mov
add
fimuls
jne
push
imul
incl
add
push
add
out
xlat
sbb
sub
das
jo
incl
dec
ljmp
popf
das
pop
cmp
cs
and
ljmp
cmpsb
add
std
add
jmp
xchg
inc
add
incl
add
adc
call
add
lret
mov
add
and
dec
mov
aas
lcall
add
cld
sbb
scas
leave
jnp
add
popf
lret
push
add
adc
add
jns
repnz
add
adc
lcall
insl
cmp
jg
add
add
add
pushl
lcall
push
clc
jns
push
xchg
sub
stos
in
cmc
jnp
hlt
jne
mov
add
out
add
ljmp
sub
mov
add
sahf
and
movsl
add
inc
add
jae
ljmp
mov
adc
fimull
mov
inc
add
mov
jl
jp
xchg
repz
push
inc
add
push
xor
mov
add
mov
incl
xchg
sub
data16
mov
mov
lods
xchg
das
bound
jmp
enter
adc
movsl
add
lcall
in
push
add
mov
ds
bound
jmp
add
add
loope
add
sub
jb
jmp
or
add
xor
mov
add
aaa
ja
cmp
xor
add
add
xchg
aaa
mov
add
jne
or
scas
call
mov
sti
cs
add
xor
jl
fmuls
xchg
addr16
push
ficoms
xor
incl
add
xor
out
pop
ss
fcomi
aad
cmpsl
add
int3
hlt
lcall
aam
add
inc
add
jl
mov
add
sbb
or
decl
add
add
outsb
imul
pop
add
test
jbe
xor
cmp
incl
add
test
add
add
ljmp
adc
decl
add
mov
add
sub
add
add
push
ljmp
add
lods
lods
jmp
pop
sub
pop
add
add
out
ret
mov
dec
out
jp
daa
add
lcall
addb
add
add
outsb
cwtl
and
ljmp
mov
dec
std
and
incl
push
sti
aas
push
shr
push
inc
add
pop
outsb
hlt
addl
fdivrp
xchg
push
fdivrs
add
popa
add
ror
into
push
jge
inc
add
out
stos
jmp
flds
add
shll
mov
cmp
jp
add
and
pushl
add
sub
add
add
inc
add
shl
movsl
add
bound
decl
add
add
jg
add
mov
ret
add
mov
insb
cmp
mov
add
addb
xchg
and
ficoms
iret
dec
mov
add
les
arpl
jmp
push
and
lcall
and
fisubs
lcall
adc
add
dec
bound
pushl
add
or
lahf
sub
divb
int3
lods
arpl
pushl
add
xchg
fcoms
scas
sbb
jmp
xchg
les
xor
call
add
add
push
add
pop
in
inc
add
jo
incl
add
call
xor
insl
pop
les
jmp
cmpsl
add
shl
add
add
sbb
addl
add
decl
data16
ret
movaps
add
cmpsl
add
dec
test
and
les
das
pusha
add
sarb
mov
add
pop
fisttpl
jnp
add
add
mov
add
and
sahf
add
lcall
push
add
loopne
hlt
sbb
add
lods
pushf
xchg
jle
sbb
lds
inc
add
add
gs
dec
push
add
stos
fstpt
int
jno
in
outsl
idiv
rcl
std
jp
pop
jle
lcall
pop
sbb
in
jo
decl
mov
aas
lcall
popa
add
hlt
mov
in
addl
add
call
incl
decl
sub
add
addl
xchg
icebp
dec
sub
jbe
add
add
insb
inc
add
cmp
movsb
add
mov
add
in
mov
lahf
mov
add
cmp
adc
add
mov
int
add
aas
jl
add
push
or
mov
scas
out
pop
add
add
push
adc
decl
lea
add
pop
test
pusha
add
cmp
add
ljmp
nop
out
pop
inc
add
add
mov
rcll
mov
mov
scas
cmc
shl
add
jge
stos
lcall
add
incl
decl
add
roll
sub
pop
add
add
jne
add
das
pop
cmp
setae
sbb
and
ljmp
add
sub
add
push
jecxz
js
stos
mov
add
lret
jb
jmp
lcall
add
cld
loopne
pop
mov
or
add
mov
add
push
add
movsl
add
in
in
cwtl
notb
enter
push
add
test
xchg
xor
xor
insl
pop
testb
sbb
fidivrs
dec
jbe
jle
rorl
movsl
add
rcrb
push
insl
ret
mov
pushl
add
dec
lock
lret
add
mov
mov
repnz
add
mov
add
cmpsl
add
jmp
call
add
pushl
push
inc
add
add
xor
stc
pop
pushf
adc
add
xor
cmp
insb
lret
incl
push
arpl
ljmp
into
xchg
and
jmp
lret
pop
dec
mov
add
fcmovnbe
or
inc
add
add
cltd
mov
filds
add
or
add
in
repz
call
loop
ret
mov
js
addr16
sub
add
lds
xchg
jae
ljmp
adc
jp,pn
add
ret
add
incl
mov
add
sbb
sbb
in
movb
pop
push
int3
dec
push
add
xchg
and
incl
decl
daa
add
add
mov
addl
lret
add
ret
sbb
push
loopne
lcall
ret
add
add
cmp
mov
add
lcall
add
mov
xchg
dec
icebp
xor
jmp
jmp
mov
arpl
dec
pop
add
out
inc
add
fcomi
dec
ds
addl
pushl
inc
add
fstpt
add
add
rolb
addl
add
add
icebp
mov
aaa
icebp
rolb
mov
icebp
mov
inc
add
nop
xchg
insl
mov
lods
hlt
mov
xchg
jnp
mov
push
add
push
sbb
add
mov
sub
add
data16
lret
mov
add
dec
xlat
and
incl
xor
inc
add
mov
add
add
add
or
adc
ljmp
hlt
jle
out
out
in
mov
arpl
lcall
inc
add
lods
jb
pushl
pushl
push
fwait
mov
repnz
aad
or
lahf
inc
add
loop
cmp
decl
sti
out
push
add
movsl
add
fwait
sub
imul
pushf
mov
add
or
push
xor
incl
out
lahf
wrmsr
add
or
mov
mov
add
add
add
add
lcall
scas
lret
out
push
add
dec
daa
add
add
fidivl
dec
add
jmp
add
push
add
push
add
mov
call
add
stc
add
push
rorl
jo
jmp
shlb
lcall
add
fsubp
add
add
into
aas
addr16
jmp
mov
cmp
mov
in
shll
cwtl
in
jae
jmp
add
inc
add
insl
mov
sub
repz
call
inc
add
add
aaa
jbe
push
movsl
add
fisubrl
ljmp
jo
dec
ret
add
out
jnp
xchg
xchg
mov
arpl
lcall
inc
add
cltd
xlat
mov
jmp
decl
mov
lcall
add
add
push
testl
lret
stos
rcl
paddusb
mov
pop
mov
and
incl
pushf
xor
cmp
cmp
mov
mov
add
add
jge
cmp
mov
add
roll
add
shl
add
xchg
jle
ljmp
jecxz
pop
in
movsl
add
add
cmpsl
add
sub
add
mov
add
fisubrl
sti
sbb
add
add
jg
les
sbb
add
ss
fdivr
aad
add
sbb
ljmp
xchg
jno
decl
xchg
add
push
sub
mov
das
outsl
push
add
pop
mov
scas
jp
add
add
pop
mov
sbb
mov
push
jae
jg
add
sub
sub
shrb
inc
add
stos
les
or
bound
jmp
cs
cltd
lds
add
ljmp
xor
lcall
in
push
add
lock
add
call
add
add
incl
dec
js
cmpsl
add
sbb
add
in
out
add
add
xchg
sbb
add
dec
push
add
dec
adc
add
ret
add
mov
jg
add
add
add
pop
test
pop
push
add
pop
dec
popf
sbb
mov
add
int
jmp
add
add
push
inc
add
xchg
js
sub
pushf
aam
add
or
pushl
add
ret
add
pusha
add
test
and
jmp
mov
mov
add
pop
add
rolb
adc
add
sub
fdivs
mov
out
xchg
addl
jmp
add
jge
addl
add
mov
aaa
pop
xor
call
push
xchg
pop
test
or
cmp
ret
add
add
jp
arpl
ljmp
add
dec
push
outsb
or
add
mov
add
add
addl
cmp
lods
loope
jnp
xchg
sahf
mov
xchg
pop
xchg
outsb
bound
jnp
add
movsb
add
clc
push
add
sbb
add
or
out
clc
std
mov
push
add
inc
add
add
add
in
push
pop
xor
incl
add
inc
add
add
xchg
cmp
add
popf
add
call
xor
out
pushf
cld
cltd
inc
add
movb
add
mov
popf
bound
dec
jno
ljmp
inc
add
fisubrs
add
psrad
int
aaa
jecxz
loope
push
lcall
xor
sbb
inc
add
xor
mov
add
or
ret
push
out
and
aas
inc
add
arpl
cmp
mov
loopne
js
dec
out
addb
std
cli
jecxz
aad
out
sbb
clc
pop
dec
ljmp
pushl
xchg
pop
mov
sbb
into
clc
call
add
decl
addb
add
xchg
cmp
cmc
dec
cmpsb
add
stos
push
add
xor
add
add
push
shlb
sti
mov
sub
add
add
add
movb
add
mov
add
or
arpl
decl
adc
ljmp
add
mov
add
sti
iret
fidivrs
mov
add
mov
add
jbe
leave
mov
add
rcrb
sub
push
cli
xor
call
add
mov
sub
fdivrl
enter
sahf
cmp
in
dec
and
push
add
int3
xlat
or
sbb
add
incl
jmp
dec
rclb
lahf
mov
lcall
add
jmp
xor
jmp
pop
sub
addl
lods
hlt
jno
dec
int3
dec
cmp
jbe
fidivrl
in
fsts
add
mov
jmp
nop
adc
jmp
add
jo
jmp
add
add
lcall
add
add
ds
mov
loope
idivl
add
add
loop
inc
add
xor
in
hlt
and
decl
push
test
sahf
mov
cmc
pop
sbb
add
jmp
add
add
lcall
dec
push
add
mov
add
movsl
add
incl
add
lea
add
jmp
out
js
jb
incl
add
pmaxub
add
jp
out
pop
cmp
push
add
out
add
mov
clc
stc
dec
and
jmp
add
ljmp
ljmp
add
call
in
or
lcall
fsubrl
add
aaa
dec
push
cmc
in
cmpsb
add
dec
adc
ljmp
pop
or
add
test
inc
add
pop
sbb
add
jno
incl
push
roll
fst
sti
loop
push
cwtl
xchg
adc
add
ljmp
pop
add
xor
lcall
add
mov
fwait
cmp
call
mov
imul
jmp
add
movsl
add
enter
lcall
add
call
add
add
add
clc
lea
add
bound
call
xchg
call
nop
movsb
add
lea
add
cmp
add
call
add
add
add
dec
fisttpll
fldt
testb
jmp
xchg
jge
std
xchg
shl
add
incl
add
test
xor
call
jbe
and
pop
das
pushf
mov
lret
lcall
push
add
add
lcall
cmp
add
add
push
xchg
and
ljmp
xor
std
adc
sub
add
add
adc
js
insb
fsubl
out
lods
sbb
xor
xor
ljmp
stc
mov
or
fnsave
pop
rcl
int3
sub
pop
push
xchg
out
xchg
push
pop
mov
cmpsl
add
pushf
pop
sbb
mov
call
js
add
add
pop
aas
mov
lods
mov
add
add
add
pop
add
adc
pushl
pushl
adc
lcall
fsubs
enter
inc
add
scas
push
jb
jmp
ljmp
decl
jmp
push
add
mov
add
add
mov
add
call
or
add
sub
add
or
mov
lret
push
pop
clc
dec
push
ja
add
add
cs
add
mov
incl
fsubs
add
das
mov
popf
ds
xlat
xchg
imul
mov
pushl
add
fidivrl
sar
pop
inc
add
inc
add
mov
add
cld
aas
mov
aad
enter
or
insl
fisttpl
movsl
add
adc
jmp
call
pushl
les
jno
pushl
sbb
add
sub
add
lahf
add
lcall
add
jmp
add
stos
add
pop
add
cmp
add
aas
dec
je
xor
decl
incl
add
xor
int3
and
incl
xchg
push
in
add
add
add
add
push
add
fldenv
add
in
scas
ret
cs
shll
clc
sub
jg
add
int
sub
add
add
push
dec
jp
sbb
add
fcmovnb
add
loopne
cmp
call
mov
jp
add
push
add
mov
jle
pop
int3
sbb
fisttps
cmc
cmpsl
add
sbb
xor
out
cmp
add
jp
and
lcall
xchg
addl
fildll
add
push
add
int3
adc
inc
add
jae
decl
add
xor
ljmp
push
add
cmpsl
add
add
add
xor
add
add
add
mov
add
sbb
add
rolb
add
xor
incl
cmp
xchg
or
fildl
xor
push
pop
cmp
loop
enter
mov
add
jp
movb
data16
cmpsb
add
add
pop
fmuls
or
jecxz
shl
data16
and
incl
aas
pop
add
xchg
jg
nop
pop
dec
sbb
pop
add
xor
add
mov
and
jmp
add
add
push
add
pop
add
add
addb
add
addb
add
add
ret
add
mov
fcompl
dec
pop
aam
ret
add
add
jmp
add
lea
fdiv
in
inc
add
mov
xchg
push
add
adc
add
add
incl
add
xchg
mov
pop
nop
push
jns
ds
add
sbb
adc
add
scas
cld
lea
add
mov
jne
lock
add
enter
sub
add
adc
std
ss
cmp
scas
ja
popa
add
mov
add
lret
xor
jmp
in
or
fwait
xor
pushl
call
ljmp
addb
ds
dec
stc
jo
call
sbb
add
add
add
mov
mov
outsl
jns
mov
xchg
xor
decl
add
popa
add
hlt
adc
decl
roll
add
out
outsb
fwait
xor
jmp
add
xchg
mov
int
add
mov
add
or
sub
mov
add
pop
lret
dec
iret
cmp
pop
mov
add
popa
add
push
mov
mov
add
pushl
add
sbb
inc
add
push
roll
add
add
pop
mov
mov
add
xchg
push
icebp
ljmp
add
jge
or
add
roll
add
or
add
pop
xchg
cwtl
test
mov
ffreep
add
add
fnsave
add
cmp
movb
mov
add
pop
mov
add
pushl
push
push
or
add
push
lods
inc
add
icebp
add
add
das
jge
add
add
add
test
add
incl
add
add
inc
add
mov
lods
repz
mov
pop
xchg
inc
add
jg
inc
add
mov
xor
incl
cwtl
ret
pop
add
sbb
push
xor
mov
fidivl
decl
add
stc
je
das
and
inc
add
add
add
adc
inc
add
stos
and
pushl
aad
add
lahf
push
add
adc
sbb
pushl
incl
add
lcall
insl
adc
ljmp
addr16
inc
add
xchg
adc
incl
fistpl
push
dec
movl
jg
add
leave
jge
add
mov
add
pop
add
cmpsl
add
cmpsb
add
decl
and
incl
test
nop
mov
pop
push
xchg
mov
sti
push
test
cmpsb
add
imul
fistps
scas
call
xchg
lahf
outsl
decl
inc
add
decl
mov
addb
sbb
jg
sbb
stos
jnp
imul
add
push
add
jge,pn
ss
sub
gs
fildll
add
pushl
add
decl
add
incl
pop
add
xor
incl
call
ret
repnz
add
sbb
pushf
inc
add
push
add
add
ret
inc
add
outsb
cli
clc
popa
add
and
pushl
xor
call
dec
adc
lcall
sub
decl
add
lret
push
add
mov
in
in
add
mov
movb
roll
sbb
mov
scas
sahf
jns
in
stc
aas
mov
and
inc
add
push
add
or
sub
add
icebp
adc
call
add
sbb
xchg
insl
push
add
mov
add
aam
mov
aad
add
sahf
xor
ljmp
addl
loope
or
dec
testb
leave
pop
add
add
repnz
pop
jecxz
inc
add
stc
inc
add
dec
mov
fwait
std
push
pusha
add
imull
test
add
mov
mov
add
pop
sub
call
enter
ret
test
fstl
test
push
add
and
jge
add
incl
add
mov
jmp
xor
incl
lcall
add
sub
pop
pop
adc
add
int
add
pop
rolb
popf
mov
outsb
jns
test
out
sub
arpl
fucomi
and
add
inc
add
in
mov
daa
add
add
in
out
dec
dec
addl
lea
insl
data16
daa
add
push
inc
add
inc
add
pop
dec
fisubrs
xchg
mov
add
mov
mov
pop
mov
add
add
inc
add
push
add
cmp
pop
mov
cmp
add
push
add
in
adc
call
movl
mov
bound
decl
adc
decl
cs
dec
lock
stc
inc
add
pop
push
je
adc
incl
add
lahf
mov
add
add
push
cmp
ss
inc
add
jg
add
mov
bswap
pop
xchg
or
popa
add
movl
xchg
std
repz
xchg
movl
ss
add
push
mov
push
cli
stos
mov
data16
add
ja
add
lods
mov
xchg
push
add
mov
sbb
mov
or
add
push
add
mov
jmp
add
cli
pop
cmpsl
add
add
add
add
xchg
jo
mov
cmp
add
sub
add
jns
mov
xchg
inc
add
cli
js
lcall
jle
add
pop
int3
lcall
fisttpl
jns
add
dec
lret
push
pop
mov
pushl
add
add
js
cmp
jge
loopne
sbb
decl
aam
dec
pop
movsb
add
push
add
hlt
enter
sub
lcall
test
push
add
sbb
add
arpl
lcall
loope
lds
lcall
add
out
imul
add
add
cli
adc
lods
and
incl
mov
pop
add
add
lcall
scas
mov
add
or
lods
push
push
cli
adc
fisttpll
adc
push
popf
cmp
add
daa
add
fmul
setg
test
add
pop
jp
jle
add
movsl
add
add
fisttpl
stc
sub
mov
add
test
bound
pushl
nop
lcall
in
fucomp
fidivs
xchg
cmpsl
add
add
scas
out
hlt
and
ljmp
add
jns
add
imul
add
in
or
fisubrs
mov
add
add
xchg
cwtl
and
push
add
lods
or
sub
add
xor
cmp
lods
pop
push
jmp
mov
add
inc
add
jno
decl
ss
sub
rcr
stos
cmp
push
add
jmp
add
add
add
xchg
mov
cmpsb
add
movsl
add
cs
imul
movl
add
call
jae
jmp
and
add
iret
or
add
add
sbb
and
xchg
xchg
mov
mov
add
cld
insb
xor
test
call
add
dec
adc
call
aas
xlat
call
add
jo
dec
cld
pop
sub
add
or
add
inc
add
pop
sti
mov
into
jmp
fnsave
inc
add
add
add
mov
hlt
xchg
pop
aad
sub
add
enter
pop
mov
add
sgdtl
call
add
or
inc
add
inc
add
enter
cmp
out
ds
out
mov
call
ljmp
addl
jae
jl
mov
add
and
pushl
incl
out
cmc
xchg
int
cltd
push
add
fldcw
enter
stos
shl
add
rclb
jmp
add
pop
movsb
add
test
add
ljmp
add
es
cld
fnstsw
jecxz
test
test
call
add
pop
xor
fisubrl
testl
mov
shr
mov
jge
out
lock
jns
fnstenv
cs
pop
mov
push
xchg
cmc
sahf
sub
dec
add
addb
mov
cmp
jmp
out
or
xchg
je
nop
imul
popa
add
iret
inc
add
pop
testb
add
add
mov
add
add
push
add
fwait
bound
call
lcall
and
cmp
add
add
dec
enter
mov
adc
ljmp
fisubrl
push
add
push
pop
adc
jmp
add
push
mov
call
lcall
pop
inc
add
add
mov
xchg
lods
mov
inc
add
add
xchg
inc
add
arpl
decl
pop
stos
bound
call
adc
inc
add
insl
mov
fsubs
dec
inc
add
out
pop
push
or
add
in
fnstcw
add
incl
add
int3
pop
test
sub
add
addl
add
add
xchg
int3
xchg
jmp
add
dec
adc
xchg
pushl
add
sahf
popa
add
aaa
outsb
lods
sbb
dec
cwtl
dec
arpl
jle
in
mov
add
cmp
add
mov
add
mov
jno
pushl
call
addb
push
stos
dec
xor
ljmp
pop
popl
add
addl
add
inc
add
dec
fists
add
int
idivb
xlat
pop
and
jmp
jmp
add
ljmp
xchg
xchg
int3
fildl
scas
sub
add
das
jle
fwait
xor
inc
add
adc
decl
mov
les
in
out
jge
add
inc
add
mov
arpl
js
add
cwtl
mov
pop
popf
dec
push
add
clc
pushf
ret
add
add
xor
incl
pop
xchg
sbb
add
mov
pusha
add
mov
rolb
xor
call
lret
das
movb
add
in
clc
xchg
xchg
scas
adc
lcall
or
add
push
add
fwait
into
or
mov
add
movsl
add
add
add
imul
cwtl
dec
in
dec
push
add
in
add
xchg
mov
shl
outsl
and
add
push
fiadds
negb
mov
repz
add
and
incl
incl
add
loopne,pt
or
jg
add
mov
push
fdivp
lods
and
aas
loop
sar
les
loopne
iret
xchg
cltd
mov
add
mov
out
pop
imul
push
add
mov
rolb
or
arpl
lcall
test
jg
mov
add
lds
sbb
bound
decl
fmulp
mov
add
imulb
add
push
cmp
stc
inc
add
int3
mov
and
jmp
and
lcall
mov
cmp
fisubl
add
movl
lret
ljmp
push
fidivl
add
add
mov
mov
test
inc
add
mov
int
add
add
ja
insb
ss
add
add
xor
aas
or
push
add
add
decl
addb
bound
call
mov
fimuls
jne
sub
add
jp
movsl
add
movsb
add
add
add
add
lret
and
incl
pop
push
dec
repz
insl
cmc
mov
add
movsl
add
inc
add
add
decb
add
stos
repz
push
add
clc
out
jb
jmp
ljmp
add
cs
sub
add
add
int3
xor
jmp
add
call
xchg
xchg
jne
add
mov
add
mov
pushf
sub
add
mov
dec
push
imul
in
sbb
add
lcall
add
call
aad
pusha
add
hlt
push
inc
add
add
out
movb
movl
in
mov
jl
mov
add
pushl
dec
fdivr
mov
push
repz
jecxz
mov
and
push
icebp
into
adc
lcall
leave
jns
add
push
add
rorl
or
dec
rorl
cmpsl
add
cld
scas
mov
ljmp
inc
add
pop
mov
adc
ja
sub
stc
mov
mov
xor
call
add
int3
and
or
das
lret
xor
jae
lcall
idivb
lds
pop
addl
pop
cmp
cmp
xchg
arpl
pushl
add
sbb
add
mov
mov
jg
add
addb
add
add
lcall
push
cmp
or
add
add
mov
in
sub
add
add
push
js
add
lcall
roll
xchg
out
rolb
add
or
into
int
add
push
movl
pop
mov
mov
add
ljmp
jecxz
mov
add
add
lods
fidivl
call
in
repnz
cmpsb
add
add
cld
xor
fildl
add
lods
js
aam
loop
addl
mov
out
cli
aas
mov
scas
jmp
add
add
sub
and
jmp
add
add
mov
ss
ljmp
add
jb
call
xchg
ror
pushf
mov
xor
incl
add
pop
ficoml
incl
adc
jmp
incl
add
or
add
pushl
decl
mov
add
add
nop
inc
add
mov
dec
push
repz
jge
imulb
add
add
dec
mov
pop
mov
add
dec
stos
sub
add
add
mov
sub
mov
xchg
or
aad
add
pop
add
add
add
add
incl
decl
add
cmp
popf
scas
scas
cs
xor
jl
mov
enter
jmp
or
add
ljmp
dec
clc
xor
jmp
repz
push
add
push
add
aaa
mov
cmp
add
aas
pop
inc
add
lret
js
add
mov
sub
dec
fiaddl
add
rolb
lods
add
jmp
or
int
add
cmp
add
icebp
into
jno
call
mov
sub
jmp
add
jmp
incl
inc
add
es
ror
pop
push
jb
call
js
test
add
outsb
xchg
and
cmp
add
in
repnz
addb
push
ljmp
pushf
mov
jl
loopne
push
cmc
jle
inc
add
cmp
add
sarl
add
shlb
in
dec
data16
fisttpll
sti
jp
add
xchg
stc
pop
cmp
hlt
imul
lods
fists
ljmp
pop
add
jb
call
add
add
jecxz
sbb
jle
jbe
in
xor
lcall
inc
add
aad
sub
jecxz
xchg
mov
data16
add
mov
add
add
in
and
ljmp
jmp
mov
xchg
sbb
add
int
push
jb
mov
add
and
jmp
add
pop
xor
data16
xchg
mov
icebp
out
mov
add
mov
adc
cld
mov
or
add
incl
or
ret
add
loopne
aaa
mov
add
dec
sbb
movb
cmp
adc
decl
add
add
jmp
add
ds
add
addl
xchg
jmp
push
add
mov
add
jmp
jecxz
sbb
incl
jmp
jmp
jp
add
cmc
clc
push
sub
idivl
xlat
adc
popl
jl
addl
pop
cmp
lds
push
cmp
dec
lock
repz
add
add
or
add
jns
add
ljmp
fwait
adc
lcall
add
lret
stc
rclb
fmulp
xchg
adc
loop
jp
and
decl
cmpsb
add
scas
lret
filds
add
call
mov
add
add
decl
sub
addr16
addb
lods
add
mov
add
add
out
adc
test
in
push
lcall
push
ret
call
stc
flds
add
inc
add
lcall
add
loop
fwait
ja
cmovge
xchg
sub
lret
xchg
addb
shrb
inc
add
add
in
mov
xlat
and
mov
into
cmp
add
popa
add
clc
add
ljmp
add
and
mov
stos
arpl
call
ficompl
adc
push
add
les
add
decl
sbb
add
iret
and
jns
repz
call
ffreep
add
lret
lret
add
in
into
pop
pop
das
inc
add
jo
incl
decl
jecxz
shlb
ljmp
jl
add
mov
pop
leave
add
notb
cmp
fdivl
add
ds
cmp
add
or
adc
fdivrs
aaa
push
or
add
mov
sbb
mov
cltd
stc
pusha
add
mov
jnp
xchg
inc
add
push
add
cltd
dec
push
add
adc
decl
fstpt
push
roll
lahf
pop
add
add
lods
mov
mov
incl
add
cmp
add
add
add
xor
jmp
add
cmp
inc
add
mov
add
sub
inc
add
call
add
daa
add
adc
lcall
shl
add
outsb
sbb
mov
add
rsqrtps
jns
aad
into
rolb
xor
mov
add
pushf
dec
fldcw
and
jmp
add
push
icebp
or
lcall
cmp
add
in
roll
add
mov
cmp
mov
add
xchg
mov
push
loop
inc
add
movsb
add
push
icebp
xchg
jno
lcall
xchg
mov
aaa
add
iret
out
addl
push
insb
mov
add
mov
outsb
pushf
rol
add
leave
addl
lcall
jb
inc
add
das
aaa
xor
pushl
ret
add
fiadds
add
add
push
out
and
push
or
inc
add
add
push
add
call
mov
add
sbb
and
sarb
roll
mov
das
pop
add
add
add
sub
xlat
mov
add
xchg
pop
or
addl
movsb
add
js
movsb
add
add
add
push
add
add
jnp
add
add
ficoml
fiadds
add
mov
repnz
lds
sahf
sbb
pusha
add
rolb
add
jo
inc
add
call
fadds
ljmp
add
add
add
sub
leave
mulb
add
add
jne
insl
aam
lea
movb
xor
mov
add
mov
jmp
dec
or
sbb
add
push
add
ljmp
sub
add
mov
jmp
add
cmp
add
jl
sbb
add
add
sahf
adc
mov
aam
std
push
lahf
mov
bound
jmp
add
bound
ljmp
dec
lods
lret
add
ljmp
mov
sub
int
mov
shl
add
les
and
incl
add
push
scas
icebp
pop
and
lcall
inc
add
add
jns
add
sub
xchg
stos
push
add
jl
repnz
add
add
into
xlat
jbe
jo
decl
jle
add
add
nop
xor
jmp
xchg
ret
into
dec
mov
aam
add
dec
sub
enter
sbb
pushl
and
cmp
lock
mov
add
push
sbb
jno
jmp
add
or
dec
and
lcall
add
push
mov
add
movsl
add
add
jecxz
and
lcall
pop
and
mov
add
cmpsl
add
add
pop
add
test
clc
in
jns
inc
add
jns
push
cwtl
pop
push
add
xchg
movl
arpl
ljmp
mov
test
nop
les
xchg
test
xor
jmp
add
fld
add
add
jns
add
add
scas
and
jle
mov
add
push
add
add
leave
sbb
rcrb
addb
add
test
test
xchg
mov
add
inc
add
cmpsb
add
inc
add
test
sbb
cmp
pop
shlb
popa
add
pop
sub
cli
dec
int
add
mov
leave
fistl
push
cli
clc
mov
outsl
ret
add
add
add
cmp
add
adc
stos
ss
add
ds
add
add
test
and
decl
es
dec
jg
stc
cmp
ljmp
test
or
fldl
jmp
add
xchg
add
decl
xchg
aaa
push
sbb
push
repnz
add
fwait
xchg
xlat
jl
cld
push
add
jl
leave
push
add
roll
lods
rolb
into
xchg
movsl
add
add
mov
ljmp
add
add
add
loopne
mov
add
roll
rclb
add
mov
add
add
notl
add
repz
sbb
addb
pop
xor
lock
sub
add
dec
hlt
mov
mov
mov
add
test
loopne
or
add
pop
add
add
rcrl
add
jle
inc
add
mov
add
add
sahf
mov
pop
push
add
int
loopne
cld
dec
mov
add
mov
add
icebp
adc
push
sbb
add
addb
push
fisttpll
movsb
add
adc
in
leave
mov
add
movsb
add
pushl
jmp
test
test
push
add
test
in
mov
add
test
dec
call
in
mov
add
jns
pushf
mov
or
mov
test
ss
add
and
decl
movb
push
xor
decl
imul
dec
pop
mov
out
roll
outsb
test
sub
add
pusha
add
out
ja
in
mov
add
enter
movsb
add
ljmp
outsb
add
add
ljmp
cmc
mov
add
addb
imul
add
mov
jb
pushl
nop
rolb
add
aaa
les
inc
add
sahf
mov
sbb
inc
add
add
mov
add
inc
add
inc
add
adc
mov
add
adc
jl
scas
mov
add
es
add
rep
push
fnsave
stc
cltd
in
roll
ljmp
mov
loope
int
cld
xor
jl
scas
rolb
dec
xchg
and
lcall
mov
lods
aam
mov
mov
inc
add
les
nop
inc
add
or
lods
xor
call
and
incl
xchg
mov
add
and
call
add
cmp
lea
add
add
inc
add
pop
lret
movl
cmp
push
fisubrs
lock
and
jmp
add
cld
fldln2
fldenv
inc
add
call
add
addl
add
repnz
movsl
add
sti
faddl
jge
mov
js
ja
in
pop
jecxz
fildl
nop
lods
push
ljmp
sti
dec
mov
add
mov
leave
lret
ljmp
mov
add
add
dec
push
add
add
add
add
out
cli
xor
call
ljmp
pop
sub
add
jmp
add
jbe
dec
push
xor
add
out
mov
xchg
pop
scas
sub
push
add
mov
jmp
add
cmpsb
add
add
adc
call
loop
sti
scas
sarb
add
addl
test
outsb
jno
mov
sbb
mov
mov
pop
pushf
jecxz
mov
pushl
incl
add
out
jae
cmp
add
mov
inc
add
mov
aaa
sub
push
mov
jae
cmp
add
jg
lahf
rolb
scas
xchg
stos
test
rcrl
add
add
daa
add
add
das
jge
pop
sub
add
lcall
add
rcrb
add
and
decl
sub
add
jb
push
outsl
add
lcall
add
cmp
ficompl
outsl
and
aad
aam
leave
sbb
fsubrl
add
xor
ljmp
and
sbb
adc
pushl
add
out
jge
sub
push
add
sbb
mov
cli
inc
add
pop
les
movsb
add
add
fistl
add
adc
ljmp
add
sub
lahf
dec
sub
add
imul
dec
inc
add
add
fisttpll
stos
xchg
cmp
dec
leave
push
add
hlt
xor
lcall
popf
jno
inc
add
add
push
xor
inc
add
add
add
add
bound
pushl
roll
inc
add
js
loopne
and
ljmp
xor
jmp
add
insl
pop
in
dec
rdmsr
add
dec
push
rolb
add
dec
pop
iret
add
loopne
mov
add
add
movl
decl
ljmp
jle
cmp
add
in
lret
imul
cwtl
push
add
sbb
mov
roll
adc
mov
rcr
out
jno
mov
adc
incl
dec
popa
add
iret
je
jae
jmp
add
add
dec
jmp
stc
mov
test
add
in
pop
jb
fsub
add
add
jae
lcall
add
add
call
add
jno
jmp
jp
in
adc
add
mov
pushl
lret
js
jge
inc
add
add
sub
mov
add
jecxz
repnz
out
sub
add
add
mov
add
sbb
pop
mov
cmp
add
cmp
sbb
inc
add
mov
add
hlt
imul
xchg
fwait
lds
mov
fxch
rcll
add
lret
shlb
pushl
add
fimull
mov
jmp
and
push
inc
add
push
add
movsl
add
sahf
add
mov
loop
inc
add
jns
mov
addl
jae
ljmp
sub
add
mov
les
into
ret
add
jmp
mov
pop
stos
mov
sub
nop
jmp
sub
add
mov
sub
int
or
hlt
push
add
addr16
add
add
stos
sub
push
add
ljmp
fcomps
in
sbb
dec
jbe
mov
rcrb
pop
inc
add
das
mov
add
in
pop
outsl
loop
imull
add
popa
add
stos
and
cs
add
ss
fisttps
pop
add
add
adc
call
add
inc
add
or
or
enter
call
data16
add
adc
incl
jns
insl
adc
incl
out
and
call
leave
call
inc
add
or
sbb
mov
pmaxsw
test
mov
xchg
pop
stc
adc
push
xchg
add
jmp
add
push
stos
test
movb
jae
jmp
lds
testb
addb
fildll
add
jle
fistps
add
cmp
inc
add
add
fsubp
add
pusha
add
mov
mov
add
add
sbb
push
add
mov
add
dec
jno
incl
add
add
inc
add
sub
add
or
cmp
inc
add
add
add
dec
in
test
roll
sub
cmp
inc
add
mov
rcll
add
pop
sub
cmp
ja
push
add
mov
jge
sbb
add
sub
fsubl
add
iret
inc
add
imul
addb
daa
add
add
add
xchg
xchg
mov
and
add
lret
repnz
lret
jo
jle
pop
jl
add
mov
add
out
mov
addb
add
nop
arpl
call
loope
popf
inc
add
data16
and
ljmp
outsl
dec
aam
jle
add
xor
int
fldl
sbb
mov
add
inc
add
sub
add
add
push
jb
call
add
mov
add
shlb
aad
mov
sti
mov
aad
add
push
das
jae
decl
aad
add
aaa
ficoml
add
mov
add
cltd
pop
add
add
incl
add
xchg
movsl
add
xchg
mov
mov
and
ljmp
add
out
popa
add
sahf
mov
add
insl
outsb
cmpsb
add
je
data16
fmull
add
clc
cmp
pop
sbb
add
roll
rcrl
nop
mov
add
add
lcall
rcr
xchg
mov
divb
call
add
add
pop
add
fistpll
fists
add
push
leave
jmp
xchg
push
add
xchg
int3
xchg
imul
inc
add
add
les
push
addr16
add
add
push
add
ret
add
mov
fstl
push
add
add
outsb
enter
nop
sub
add
test
mov
add
add
pop
add
jge
xchg
xor
push
and
push
push
add
add
ss
sub
add
mov
add
adc
cmp
xchg
test
mov
leave
xlat
inc
add
cwtl
ud1
push
add
sub
pop
xor
call
push
add
aad
add
jp
add
fimuls
ret
fs
mov
add
jnp
add
or
shlb
out
enter
jg
mov
cmp
and
pushl
ljmp
push
sti
pusha
add
outsb
push
push
add
iret
iret
jns
add
or
jne
mov
call
scas
jne
add
add
add
add
jmp
pop
in
sbb
and
inc
add
add
addb
lods
mov
add
data16
jmp
insl
outsl
push
cmp
decl
sub
hlt
mov
sub
pop
push
xchg
mov
add
call
add
into
mov
add
xchg
cmc
add
lcall
stc
add
test
cld
movsb
add
add
inc
add
in
or
mov
add
add
lahf
lret
xchg
cli
test
movsl
add
jmp
add
imulb
filds
add
pop
adc
ljmp
mov
add
add
lcall
out
jb
decl
jg
add
ljmp
add
test
das
sbb
jge
mov
add
fcmove
xchg
xchg
and
decl
test
pop
outsl
mov
add
add
decl
cmp
mov
push
add
aas
mov
xor
push
xchg
jmp
loop
popf
push
in
push
es
cli
xor
jp
xchg
dec
lock
movsb
add
add
nop
push
add
aaa
push
add
add
xchg
movb
loopne
addb
add
xor
jmp
add
loope
adc
inc
add
cmp
add
push
add
in
pop
add
movl
movsl
add
test
in
jge
add
mov
mov
xor
adc
lcall
stos
ljmp
add
ljmp
fsubl
loope
pop
cmp
xor
fwait
jp
pop
mov
push
sahf
xor
call
add
or
outsl
ss
inc
add
mov
add
mov
dec
repz
add
mov
jl
inc
add
push
add
pop
inc
add
jo
dec
dec
popf
loop
dec
cltd
cmp
stc
je
add
add
pushl
sbb
add
add
xchg
fcomp
inc
add
add
cmp
add
add
cmp
cld
fildll
add
movsb
add
add
add
ret
add
fnsave
mov
inc
add
jno
lcall
adc
jmp
les
fstpl
fdivrp
scas
loop
cmp
negb
pushl
mov
call
xor
push
sbb
movsb
add
add
incl
clc
leave
fiaddl
cli
push
jne
addl
jle
mov
inc
add
imul
lock
lods
rorl
and
fisttpll
mov
out
addl
lahf
int
adc
incl
add
add
pushl
incl
pushl
jle
add
sbb
inc
add
iret
sbb
add
cmp
cmc
or
fwait
inc
add
add
imul
ljmp
test
inc
add
jmp
int
adc
push
add
adc
lcall
pop
pop
add
add
incl
add
add
cli
xor
jmp
add
leave
or
jecxz
xchg
std
inc
add
call
cmp
in
mov
and
ljmp
or
in
add
incl
add
jmp
add
stos
imulb
xor
lcall
add
jns
pop
add
push
inc
add
addl
add
add
push
add
in
data16
adc
in
movl
inc
add
add
pop
cs
and
ljmp
xchg
loope
cld
ds
add
push
repnz
add
ret
add
mov
add
add
decl
mov
insl
femms
dec
into
xor
lcall
cmp
fistl
add
xor
jmp
add
jno
ficompl
outsl
loopne
and
lcall
add
sahf
das
mov
test
add
enter
push
mov
or
dec
cmp
rolb
cld
mov
or
call
xchg
outsl
addb
jno
jmp
sub
add
add
dec
pusha
add
fisttpl
out
cli
mov
sbb
add
into
jle
push
add
lea
add
decl
adc
pushl
add
jge
mov
adc
decl
sbb
mov
lahf
out
and
lcall
or
lea
cmp
pop
ret
add
add
add
mov
jns
xchg
bound
mov
iret
stos
movsb
add
fildl
sub
lcall
xlat
lea
push
pop
jbe
xor
incl
mov
sti
lock
roll
or
cld
lock
sbb
mov
out
lds
int3
icebp
cmc
loop
scas
push
sub
cli
lods
popa
add
pop
mov
pusha
add
pop
mov
xchg
mov
data16
or
inc
add
das
movsb
add
out
xchg
fwait
outsl
pushf
rol
add
call
dec
sbb
add
ds
add
jb
call
jg
push
add
mov
pop
and
dec
ret
loopne
pop
mov
loopne
cmovne
pop
push
add
jge
mov
stos
ljmp
ds
and
mov
add
add
sub
add
icebp
in
mov
jle
add
inc
add
in
ss
and
ljmp
add
repz
jae
jmp
incl
jmp
mov
add
sbb
cmp
lea
cmp
pushf
sbb
add
add
adc
incl
incl
add
jle
add
dec
outsl
lret
in
push
add
inc
add
add
xor
decl
sbb
xor
pop
mov
ja
add
sbb
mov
inc
add
jae
ljmp
push
in
add
call
addb
imul
jns
call
sti
add
cmp
addl
push
and
mov
ss
das
jl
dec
or
jo
decl
add
in
push
add
js
lcall
or
adc
decl
movsb
add
add
incl
jmp
nop
xchg
or
add
jmp
add
add
or
lcall
push
fdivrl
add
mov
cmpsl
add
add
pop
movsl
add
fisttpl
movl
mov
out
je
addl
clc
mov
push
ljmp
mov
sub
jb
inc
add
inc
add
cmp
mov
aas
aad
or
add
jne
mov
dec
mov
pop
dec
pushf
movb
dec
xchg
popf
repz
jnp
xor
jmp
pop
add
pushl
scas
inc
add
add
push
sub
add
loop
jl
push
add
xchg
mov
add
lock
add
add
pop
add
sti
sbb
add
add
push
add
iret
je
bound
incl
dec
mov
xchg
jb
decl
jbe
jbe
push
add
inc
add
and
dec
pop
add
loope
ja
popf
adc
decl
add
into
add
incl
add
mov
movl
jo
out
addl
out
pop
les
and
pushl
jnp
sub
nop
mov
loopne
push
sbb
pushl
ja
mov
or
and
call
add
mov
add
out
call
mov
nop
mov
cli
pusha
add
mov
lea
add
fdivp
jne
add
fsubrs
jg
repz
jns
add
mov
mov
and
add
ja
add
add
add
lods
fcmove
xchg
sbb
cmc
out
mov
add
jno
out
push
add
xchg
dec
inc
add
push
add
call
mov
fcmovnbe
out
cltd
dec
cld
mov
rcrb
lods
push
dec
mov
in
mov
ss
inc
add
out
movb
cmp
jmp
add
inc
add
xchg
outsb
jl
loopne
sub
cmp
push
add
push
add
cmp
lods
pop
add
inc
add
negl
add
mov
fidivrl
das
in
adc
js
inc
add
testb
and
movb
xchg
pop
push
add
jne
cmp
add
stos
mov
sbb
cmp
cmpsb
add
xor
add
xchg
mov
mov
add
cmp
in
pop
add
into
jae
jmp
add
xchg
cltd
push
push
lret
add
adc
call
stos
stos
outsb
adc
inc
add
add
xor
add
mov
dec
dec
sub
stos
enter
mov
stos
test
add
or
pop
push
and
pushl
xchg
aad
add
cmc
add
mov
xchg
lods
add
out
adc
add
dec
movb
addl
add
xchg
xchg
pop
jnp
add
insb
inc
add
add
das
jnp
jb
jg
pusha
add
loopne
cmp
add
movsl
add
out
mov
decl
xor
jmp
mov
jl
push
mov
das
mov
mov
xor
incl
jmp
push
fwait
jl
add
push
ss
sub
pop
lock
jns
dec
and
push
or
mov
dec
cmc
lcall
sahf
and
and
out
and
lcall
add
and
mov
roll
xchg
shrb
inc
add
add
or
add
dec
jno
jmp
add
add
pushl
addb
add
es
pop
pop
data16
pop
xor
popa
add
xlat
sub
add
dec
or
xchg
sub
sarl
mov
add
test
add
mov
mov
add
fists
add
lods
inc
add
mov
add
pop
sub
add
cmc
ljmp
out
xchg
cld
in
and
decl
add
pop
push
add
push
add
das
jb
cmp
add
sbb
addb
add
add
ss
mov
push
sahf
iret
push
test
add
mov
cmp
ljmp
dec
jp
addl
jno
decl
or
add
and
pushl
test
add
in
insb
mov
add
inc
add
add
sub
lret
and
mov
aaa
sahf
mov
stos
mov
testb
jle
pop
add
pushf
sub
lods
sbb
addb
enter
add
add
jmp
lcall
add
sub
add
and
mov
int
pop
fldcw
add
dec
imul
add
xchg
shll
jns
add
mov
add
add
popa
add
jo
dec
rcrb
leave
stos
addb
add
mov
mov
mov
addb
pushf
xchg
cmp
bound
ljmp
push
not
adc
decl
add
divb
incl
add
popa
add
imul
incl
adc
outsb
ss
daa
add
pushf
sub
rcrl
add
add
call
add
addl
add
add
pushl
add
or
imull
inc
add
ljmp
fstl
add
addb
mov
add
incl
call
and
inc
add
jbe
pop
outsl
sbb
add
cmp
sbb
add
data16
or
add
stos
adc
xchg
call
mov
add
sti
xchg
or
pop
sbb
or
stos
cld
outsb
inc
add
cli
jmp
add
movl
or
add
addr16
sbb
roll
add
cmp
lds
cmc
test
push
add
enter
lds
cld
xchg
cmp
add
mov
pop
add
inc
add
fldcw
pop
add
sub
jecxz
jmp
ret
fldt
push
out
jns
push
addl
pop
icebp
mov
add
pushl
add
cmp
or
loopne
jnp
sub
out
rolb
add
sbb
mov
lock
js
mov
add
pushl
and
pushl
call
mov
lcall
add
jae
ljmp
add
pushl
mov
add
add
nop
out
sub
or
pop
ss
cmp
add
lcall
shl
addr16
add
dec
xchg
xor
lcall
data16
stc
jnp
xchg
call
add
inc
add
movsl
add
add
xchg
mov
std
mov
xchg
addl
mov
fwait
fs
out
jl
add
cld
idivb
pop
pop
cmp
pop
add
mov
xchg
inc
add
jne
out
dec
add
test
push
ljmp
call
out
in
js
pop
add
add
push
sbb
in
sub
add
mov
add
xor
ljmp
and
pop
mov
adc
ljmp
inc
add
jmp
pushl
mov
sbb
push
arpl
push
shl
add
call
jmp
add
faddl
add
fs
inc
add
add
xor
and
fisttpl
add
pop
jns
fisubrs
add
fstpl
lock
icebp
std
push
out
mov
push
pop
enter
loop
mov
addr16
pop
xchg
xor
ljmp
add
movsl
add
aaa
sbb
jmp
add
clc
xor
mov
into
xchg
out
adc
call
data16
add
add
or
testb
inc
add
xchg
mov
out
add
add
add
sbb
mov
stos
xchg
mov
xor
loopne
sub
push
pop
add
call
push
lods
jo
incl
add
pop
lods
pop
arpl
out
addl
in
dec
addl
call
cmp
shll
pusha
add
pop
rolb
add
sti
xlat
aaa
shlb
sahf
aad
loop
lock
adc
mov
call
test
cmp
lahf
sbb
addl
add
add
jne
out
mov
add
mov
add
add
les
jge
roll
xor
lcall
mov
enter
int
out
xchg
or
fldcw
add
add
sbb
ret
cmp
push
add
mov
call
add
out
add
ljmp
add
je
sub
sar
insl
mov
add
pusha
add
addl
pop
movb
jnp
dec
movb
mov
pop
cmp
addl
add
push
add
sbb
pushf
xchg
dec
lea
pushl
add
inc
add
jp
cmp
inc
add
jle
add
dec
mov
loopne
ss
fcoms
adc
pushl
jmp
push
dec
sub
movsl
add
dec
and
incl
inc
add
push
mov
daa
add
add
add
xor
incl
jnp
or
add
mov
out
push
js
jns
fstl
lahf
jmp
arpl
incl
aam
lds
dec
mov
adc
fbld
add
ds
xor
jns
push
jbe
lods
sti
icebp
test
ret
call
outsb
fdivrl
int3
jb
ljmp
cmc
cs
add
add
test
incl
ljmp
jmp
add
int3
and
outsb
and
or
push
jo
ljmp
scas
imul
xor
add
popf
push
add
lods
xchg
dec
addb
insb
lret
addb
add
dec
pushf
mov
add
rol
add
mov
cs
inc
add
sub
push
add
ucomiss
popa
add
jbe
ljmp
jle
mov
add
cmp
add
xchg
xchg
clc
mov
jmp
add
pop
ss
les
pop
ret
mov
add
add
test
incl
add
loop
mov
pop
add
in
fucomp
cmp
je
pushf
and
ds
and
jmp
pushl
add
call
clc
xor
jmp
jmp
add
or
add
add
dec
sub
add
jns
clc
cwtl
xor
inc
add
add
jmp
add
and
pushf
and
fimull
add
loopne
testl
lret
cwtl
sarl
lds
pushf
mov
daa
add
inc
add
lahf
cmpsb
add
add
ljmp
arpl
sti
jno
call
mov
add
mov
test
xchg
or
add
scas
xchg
xlat
mov
ljmp
add
jge
mov
or
addb
add
xchg
ljmp
xchg
out
js
add
pop
dec
jbe
add
sarl
arpl
inc
add
in
inc
add
adc
call
push
add
fisubl
push
add
add
push
sub
and
call
or
add
das
leave
test
adc
add
pop
dec
cli
push
add
add
in
mov
movsl
add
dec
cmc
push
add
xchg
dec
push
sub
notl
lcall
xor
inc
add
jb
call
repz
call
add
fldl
clc
mov
add
push
jmp
fmulp
xchg
inc
add
cmp
loope
inc
add
xor
ljmp
bound
decl
add
push
dec
cwtl
movb
in
inc
add
sti
xchg
movsb
add
mov
push
push
mov
adc
mov
sub
dec
push
add
jge
or
inc
add
inc
add
leave
addl
dec
adc
call
or
rcll
lcall
aas
jb
mov
add
lcall
add
push
loop
lods
jns
cli
leave
out
cmp
add
xchg
mov
testl
mov
sbb
add
dec
xor
pushl
call
sarl
test
add
fiaddl
loop
lahf
push
add
mov
bound
decl
xor
xor
jle
add
bound
lcall
add
mov
sub
pop
sub
jmp
add
fisttpl
ljmp
add
or
cmp
add
stos
lcall
pop
sub
add
or
nop
and
and
jmp
add
addb
add
add
lahf
sbb
add
rclb
add
stc
pop
add
test
lahf
inc
add
insl
popa
add
mov
cmp
add
xor
ljmp
mov
decl
push
cmp
xchg
mov
rol
add
push
fmuls
jno
pushl
data16
dec
dec
sti
lcall
ljmp
insl
popa
add
cli
popf
ffree
add
in
aas
mov
into
movsb
add
add
roll
jnp
xor
ljmp
popa
add
mov
movb
cmp
add
jnp
cmpsl
add
add
lds
mov
add
jmp
add
jp
call
xchg
push
add
xchg
addb
mov
ds
scas
mov
add
ret
add
outsb
addl
add
jmp
add
jmp
xchg
adc
lcall
jge
add
add
lret
push
icebp
enter
add
add
test
fcoms
incl
into
popa
add
mov
add
add
add
add
or
add
fdivrs
cwtl
push
mov
xchg
mov
decl
add
idiv
push
add
xchg
popa
add
addl
add
pop
ret
add
xlat
inc
add
add
bound
pushl
mov
jno
jmp
add
push
ja
imul
loop
insl
xchg
xor
pushl
lea
imul
xchg
push
loopne
out
xchg
mov
add
or
push
add
fs
add
pushl
add
sbb
add
inc
add
xor
pushl
aam
dec
mov
add
push
add
sub
add
add
out
jns
add
cltd
mov
xchg
roll
pop
mov
fildl
or
cmp
xchg
das
clc
sahf
mov
push
lea
out
sti
or
fdivs
out
ficompl
pop
jmp
adc
dec
xchg
and
incl
dec
int
add
add
add
add
cmp
mov
dec
mov
jg
add
jl
mul
add
jl
add
daa
add
sub
add
out
fwait
outsb
lea
mov
cwtl
or
mov
lock
dec
jg
pop
add
add
jl
notb
pushl
add
add
popa
add
adc
decl
jmp
int3
bound
lcall
mov
xchg
mov
sub
xor
incl
add
cld
mov
data16
mul
add
add
out
xchg
loopne
sub
or
xor
loop
sbb
lock
mov
mov
push
add
cli
test
pushf
xor
ljmp
add
cli
dec
nop
push
das
lahf
inc
add
sbb
add
jmp
decl
xor
mov
add
movsb
add
add
add
mov
icebp
scas
mov
push
mov
ljmp
ljmp
js
add
pop
addl
mov
add
jmp
mov
add
sub
add
stos
outsl
or
stos
loop
mov
adc
jnp
cmpsb
add
push
add
pop
stc
jmp
mov
or
add
add
jne
inc
add
mov
in
ds
imul
movsl
add
decl
push
cmc
loopne
clc
jmp
add
out
mov
dec
push
sub
inc
add
popf
popf
bound
pushl
lcall
add
add
add
insl
hlt
ljmp
movb
add
pushl
decl
call
ljmp
lret
ret
add
jp
add
add
mov
xor
jmp
call
add
ss
jmp
add
push
sub
mov
xchg
and
ljmp
testb
idiv
mov
in
int
inc
add
push
jmp
add
cmp
cmp
add
movb
add
cld
add
dec
xchg
cmp
pop
adc
out
cmp
fnsave
pop
fcoml
add
das
movb
jb
jg
rolb
cmp
jns
xchg
notb
in
mov
and
incl
add
and
ljmp
add
add
mov
ss
cmp
shl
or
aam
fs
dec
or
stos
ljmp
cmpsb
add
push
jge
pop
ss
add
loop
mov
nop
int
nop
bound
incl
cltd
call
mov
mov
xor
mov
mov
sub
bound
call
add
adc
adc
mul
add
cmp
ret
add
jl
pushf
movsb
add
ds
fiaddl
int3
dec
cli
add
add
imul
or
aaa
stos
lods
loopne
daa
add
cmp
pushf
mov
xchg
adc
call
push
add
outsl
out
mov
adc
add
leave
push
push
add
mov
add
sahf
cmpsb
add
inc
add
imul
sbb
push
fwait
les
negl
add
add
dec
add
call
pop
cmpsl
add
incl
add
adc
ljmp
sbb
sbb
xchg
push
add
jg
and
loop
aaa
scas
mov
addb
or
movl
sub
jmp
add
add
test
out
jns
jecxz
mov
add
movsl
add
add
roll
ror
divb
out
dec
mov
pop
xchg
jne
add
jmp
mov
incl
add
sbb
add
jmp
add
bound
ljmp
mov
pop
adc
fsubrs
movsl
add
add
mov
shlb
add
push
mov
adc
ret
add
rcrb
add
lcall
imul
adc
ljmp
add
sbb
xchg
inc
add
xchg
lahf
int3
add
jo
decl
inc
add
ljmp
outsl
jmp
addb
add
lret
xchg
or
add
add
jle
or
add
fwait
dec
jp
add
add
pop
lret
lret
mov
add
mov
add
pop
das
daa
add
xor
incl
add
lds
loop
mov
jp
push
dec
lcall
mov
adc
clc
sbb
xchg
iret
sub
xor
pushl
pop
jmp
add
add
mov
xchg
jmp
add
fimull
add
hlt
std
mov
iret
pop
add
adc
incl
add
repnz
pop
add
add
adc
fnstcw
jnp
add
pop
pop
add
add
lock
decl
popf
jbe
add
dec
adc
arpl
fsubr
rolb
cs
mov
fadd
add
mov
inc
add
incl
add
loopne
add
add
adc
jmp
call
or
adc
ljmp
mov
lcall
add
add
adc
ljmp
sti
pop
out
push
test
inc
add
insb
jg
ss
lock
js
sahf
roll
or
test
xchg
cwtl
xlat
out
xor
decl
mov
rolb
add
or
inc
add
add
pop
jmp
push
push
add
dec
jae
ljmp
add
aas
adc
pop
dec
test
fistpll
stc
aas
roll
add
fiadds
ljmp
mov
and
jmp
fs
cli
xor
mov
add
pushl
jmp
add
mov
add
fs
jmp
inc
add
xlat
sub
add
movl
insl
adc
loopne
add
movsl
add
xor
ljmp
add
add
sbb
insl
add
push
jg
inc
add
add
adc
in
mull
mov
movl
cmp
add
xor
decl
add
jno
call
mov
enter
or
aam
add
cmp
insb
movl
add
push
xchg
mov
shrl
add
cmpsb
add
sub
add
cmp
add
ror
pop
fstpl
add
cmc
pop
cmp
add
jmp
add
push
lahf
mov
add
push
add
inc
add
jbe
add
dec
xchg
addb
dec
in
mov
pop
aaa
push
push
jns
pop
push
fwait
xchg
in
pop
dec
inc
add
mov
jmp
jmp
add
xchg
mov
cmp
les
xor
incl
add
mov
inc
add
gs
cmp
mov
pop
mov
lret
push
cmpsl
add
xchg
mov
insb
fwait
inc
add
add
add
fstl
mov
mov
add
dec
loopne
xchg
mov
jecxz
sub
add
sbb
add
imul
sahf
xchg
jle
xchg
mov
movb
and
call
mov
inc
add
sub
add
and
decl
incl
lcall
roll
test
add
add
call
xor
decl
xor
ljmp
xchg
stos
cmp
adc
decl
movd
mov
aas
add
jmp
add
add
add
lcall
bound
incl
cmc
or
jmp
addb
add
ret
add
ljmp
add
add
add
sbb
inc
add
xor
call
call
add
aad
test
mov
add
cmp
sbb
add
jecxz
jge
mov
decl
xlat
inc
add
add
mov
add
add
add
inc
add
or
and
decl
mov
add
aad
movsl
add
out
pop
in
or
cmp
mov
out
mulps
add
mov
pop
jecxz
aaa
cmpsb
add
push
inc
add
call
mov
add
mov
mov
jmp
insb
loope
int3
movsb
add
jmp
add
inc
add
xchg
movsl
add
rclb
dec
fs
add
push
enter
add
jnp
xlat
fadd
add
add
int3
mov
xor
call
jmp
add
add
xor
pushl
cmp
fisubl
ret
mov
cs
dec
dec
mov
decb
inc
add
add
xlat
fadd
add
add
push
sbb
pop
insl
faddl
decl
pushl
sbb
add
add
or
movb
inc
add
rolb
shrb
movb
sbb
iret
mov
cmc
stc
repz
add
fildll
add
pushl
sbb
add
mov
add
fldcw
pop
xchg
ljmp
incl
icebp
cwtl
sub
jmp
pushl
add
sub
sti
mov
add
ljmp
cmp
lods
inc
add
add
lods
in
sbb
push
pusha
add
xchg
cmp
add
cmpsl
add
jnp
in
mov
add
cld
inc
add
sub
dec
sbb
add
scas
pop
jns
les
sub
call
call
scas
inc
add
fstps
jle
jecxz
loop
fsubrl
lcall
popa
add
mov
pop
pusha
add
or
addr16
jle
lret
sub
xlat
xor
add
insb
push
add
jp
add
jl
add
test
add
addl
stos
cli
stos
pop
enter
sub
aam
add
add
out
and
cmp
add
dec
mov
jp
add
push
inc
add
add
incl
aas
and
in
xor
decl
mov
mov
hlt
push
push
mov
add
adc
jmp
add
pop
addl
call
hlt
add
fdivrs
cmp
add
pusha
add
jae
decl
add
repz
xchg
dec
in
popf
push
std
test
pop
dec
inc
add
xchg
cmp
mov
pop
movb
pop
movb
jo
call
mov
adc
jle
jae
decl
dec
inc
add
push
add
sub
add
add
insl
xor
pushl
pushl
jmp
add
add
add
fstl
add
jbe
jno
call
jmp
xor
fbld
xchg
pop
and
decl
leave
fcmovnbe
mov
add
or
add
add
add
fsts
add
add
add
fnstsw
dec
mov
mov
pop
add
add
scas
lock
ljmp
add
lds
lea
stc
sub
jl
adc
jmp
dec
cli
inc
add
add
icebp
idivb
push
lcall
add
enter
test
addl
add
xchg
adc
add
lahf
addb
add
inc
add
xchg
scas
pop
repnz
jge
add
and
lcall
jg
push
js
ret
add
add
shr
movl
fidivs
add
add
add
pushl
add
xor
ljmp
mov
mov
add
repz
stos
mov
std
rorl
out
add
jmp
add
mov
enter
shr
out
int
test
mov
add
add
test
aaa
xchg
xchg
jo
call
sub
add
data16
push
clc
jbe
add
dec
movl
add
fstps
add
add
in
sub
add
fnstenv
mov
push
add
das
adc
add
dec
inc
add
lds
jo
ljmp
loopne
xor
lahf
repz
add
jmp
add
or
mov
jno
pushl
add
mov
xor
lcall
add
mov
call
add
lcall
add
add
fmuls
in
popf
addb
ret
roll
add
mov
mov
lods
movsl
add
sbb
pop
push
pop
add
fdivrl
test
or
sbb
add
lcall
daa
add
and
add
addb
add
xchg
fiadds
call
sub
push
enter
add
lcall
jnp
mov
jns
push
add
addl
jo
mov
add
std
in
fwait
mov
std
or
inc
add
inc
add
test
or
xchg
or
push
std
sub
imul
xchg
pusha
add
xor
add
js
add
add
cmp
add
inc
add
cltd
adc
mov
add
cmp
fcoml
add
mov
add
add
in
mov
pop
cmp
xchg
push
leave
int3
std
mov
dec
xchg
push
insl
add
push
add
das
adc
decl
daa
add
jmp
cmp
mov
jns
and
pushl
call
lcall
mov
daa
add
dec
addl
addb
fnstcw
imul
sarb
in
rep
mov
jbe
add
add
leave
mov
pop
cs
dec
out
add
xchg
repnz
dec
push
inc
add
js
add
xchg
mov
add
add
loope
repz
aas
sti
dec
fsubr
pop
int
push
ss
inc
add
or
fsubrs
cmp
call
rcll
add
xchg
aaa
and
movsb
add
pop
sti
adc
ljmp
xlat
sbb
stc
cld
cmpsl
add
add
jl
xor
cmpsl
add
add
pop
pop
push
add
sub
bound
call
add
pop
in
aaa
pop
adc
call
cmp
push
mov
movb
add
add
sub
lret
push
add
ss
lcall
inc
add
ss
add
bnd
and
jmp
add
in
fcoms
mov
push
mov
incl
add
push
xchg
inc
add
mov
pop
movsb
add
xchg
fstps
add
inc
add
add
jl
add
lock
lea
jecxz
stos
lods
lds
call
sbb
add
sbb
add
add
aad
add
add
push
push
inc
add
lods
push
push
add
loop
xor
call
add
xchg
movsb
add
jp,pt
fnstsw
sbb
cmp
and
mov
in
icebp
mov
stos
cmp
sbb
cmp
add
lret
into
lock
ds
fldl
mov
mov
add
call
mov
ljmp
fsubrs
jno
incl
bndldx
jmp
add
add
scas
test
mov
add
incl
pop
jae
jmp
add
arpl
dec
xor
movsl
add
rolb
cmp
adc
add
pop
testb
add
jns
aas
jmp
xchg
dec
add
lcall
shrb
ljmp
jle
add
sub
pop
adc
pushl
std
push
add
mov
aas
pop
scas
enter
mov
sub
add
pop
cltd
outsb
lcall
cmp
fldl
add
call
sub
add
sbb
add
lods
cmp
gs
add
add
mov
add
cmpsl
add
xor
decl
cltd
inc
add
push
add
fimull
add
pop
cmpsl
add
mov
lcall
fists
push
leave
movl
cmp
inc
add
ss
add
fwait
insb
mov
ljmp
rorb
xchg
adc
cld
stos
xchg
mov
rcll
sub
dec
mov
add
add
pop
imulb
inc
add
adc
lcall
add
jbe,pt
adc
add
js
jl
add
iret
mov
add
and
lcall
lcall
jg
or
nop
adc
pushl
add
cmp
add
fisubs
mov
inc
add
add
add
add
fstpt
or
ss
mov
and
push
or
add
stos
addb
adc
imul
add
lret
ljmp
in
outsb
int3
xchg
push
cltd
and
ljmp
or
add
cmpsb
add
test
clc
add
lret
lods
aam
pusha
add
hlt
fiadds
ljmp
jp
adc
add
mov
xchg
addb
mov
rclb
add
sbb
and
jmp
add
add
dec
xchg
push
add
ljmp
add
pop
add
jns
sbb
mov
pop
repz
push
jae
lcall
ljmp
add
add
imull
pop
in
jg
jns
add
ss
pop
add
lcall
addb
xchg
stos
dec
inc
add
push
add
xor
push
fldcw
add
add
mov
dec
pushf
std
lahf
cmp
add
lds
test
cmp
add
sub
add
rolb
add
add
std
push
add
pushf
dec
xchg
test
xchg
cmp
pop
xor
decl
rclb
jg
sahf
repz
add
add
jmp
insb
sub
add
cmp
add
add
jmp
mov
into
sub
xor
pop
pop
mov
repz
adc
decl
incl
repnz
add
hlt
inc
add
loopne
xor
lcall
dec
add
call
add
inc
add
fsubr
jo
pushl
out
mov
add
add
insl
cs
add
add
fistpll
add
jmp
ljmp
ret
add
leave
mov
sbb
add
sub
movb
add
mov
jno
jmp
lea
ljmp
add
test
adc
into
mov
rorb
test
leave
jecxz
push
shlb
jmp
add
add
dec
dec
dec
mov
add
sarb
mov
out
lods
sub
add
lods
cmpsl
add
add
into
add
jmp
pushl
add
shll
add
mov
add
adc
pushl
cmpsb
add
decl
pop
pop
add
test
add
inc
add
sub
add
push
push
add
mov
std
cmpsl
add
add
lcall
jmp
je
add
in
mov
adc
lcall
and
call
or
cld
sub
mov
ss
push
jg
add
rcll
adc
lea
movsl
add
xor
cmp
sti
int
push
out
sub
lret
jg
call
fimull
inc
add
lods
sub
add
sahf
adc
pop
lcall
sub
fisubl
cmp
or
jno
jmp
xchg
sbb
loop
push
add
add
lcall
xlat
arpl
js
add
push
add
mov
in
loopne
mov
jle
or
xchg
imul
jmp
add
cmp
outsb
mov
add
xchg
xchg
into
pop
push
add
add
lcall
add
add
add
xchg
call
out
add
fstpl
push
add
mov
jp
addb
test
add
in
adc
lcall
add
add
out
test
das
rolb
clc
or
add
sbb
push
add
repz
pusha
add
xchg
cli
pop
stos
jae
call
add
hlt
push
dec
fmull
int
dec
lcall
add
push
pushl
jg
cmp
mov
and
mov
add
call
add
add
inc
add
add
xor
add
or
xchg
les
mov
mov
xor
dec
dec
arpl
call
add
push
addb
push
adc
pushl
jge
adc
lcall
out
pop
lds
and
cmp
jo
stc
inc
add
filds
stos
fildll
adc
incl
add
mov
inc
add
shrl
repnz
add
push
xchg
fcoms
add
call
addb
mov
add
scas
enter
push
add
cmp
jle
mov
add
inc
add
jge
add
int3
or
xchg
icebp
addl
mov
insl
repnz
sbb
mov
lds
andnps
add
ss
add
rorl
popf
fwait
out
or
test
lods
das
push
add
pop
xchg
push
rolb
add
add
out
ss
add
jmp
add
fldt
xor
lcall
add
fidivrs
jge
add
ja
add
add
cmpsl
add
dec
lds
and
lcall
sub
add
decl
cmp
xchg
cmp
add
ljmp
fucomi
sbb
xchg
jae
jmp
incl
decl
jb
pushl
mov
xchg
sbb
cwtl
mov
cmpsl
add
test
loopne
test
imul
inc
add
fnsave
add
sbb
add
imul
xchg
xchg
sub
add
add
cmpsl
add
adc
add
imul
lcall
popa
add
loope
ret
add
or
add
mov
sub
mov
add
outsb
bound
cmp
add
and
decl
stos
mov
cmp
add
push
add
jbe
les
arpl
ljmp
cmc
mov
cmpsb
add
cld
lret
mov
add
aaa
mov
inc
add
dec
mov
mov
push
lods
lods
jg
push
add
and
incl
decl
mov
mov
les
aaa
aad
mov
add
add
pop
hlt
jnp
add
fcomi
and
je
add
jmp
mov
adc
decl
pop
mov
int3
xlat
add
pushl
mov
mov
out
aam
push
ljmp
push
add
test
dec
mov
xlat
pusha
add
jo
jmp
dec
scas
je
add
loop
add
fisttpl
add
jp
add
call
stc
inc
add
je
add
dec
je
pop
inc
add
add
decl
inc
add
add
mov
xchg
push
add
movl
add
add
lcall
aaa
ds
std
mov
add
incl
pop
xchg
sahf
pushf
and
call
imull
mov
push
mov
add
roll
add
or
add
add
add
mov
and
in
daa
add
add
call
add
scas
add
and
mov
sbb
ret
mov
clc
out
stos
and
ljmp
cmp
lret
mov
dec
xchg
add
add
mov
loop
mov
jl
add
jg
rcl
push
add
add
add
les
arpl
dec
mov
add
pop
or
add
pop
jp
add
lahf
aas
scas
aad
pop
mov
popa
add
cld
out
pop
dec
push
add
mov
js
fwait
adc
fstl
mov
sbb
lret
out
sub
loop
jo
decl
dec
stc
in
dec
mov
xor
mov
dec
aad
mov
popa
add
les
inc
add
repz
add
add
dec
into
inc
add
ret
add
add
std
in
dec
int3
imul
mov
mov
inc
add
addb
loope
hlt
cmp
jecxz
mov
add
je
add
addl
xor
pushl
add
repz
decl
sahf
dec
notl
loopne
xor
lea
add
add
push
add
loopne
pop
push
add
test
add
je
add
fiadds
lcall
fstps
add
xchg
cmpsb
add
insb
jle
jle
addl
adc
incl
decl
add
fsubl
add
ret
add
add
pop
int3
xchg
jl
add
scas
ss
push
mov
scas
mov
add
or
loope
mov
add
cmpsl
add
add
sbb
add
lcall
add
je
dec
imul
mov
mov
add
movl
insl
or
pop
psubq
adc
jmp
lcall
sbb
mov
add
dec
ds
out
xor
ljmp
add
add
popf
loope
addl
add
pushl
popa
add
test
cld
jo
incl
jmp
pop
push
add
jl
mov
sub
fisubs
test
jmp
cmp
mov
add
fldcw
scas
test
xchg
fcom
dec
imul
fnstsw
xchg
fimuls
hlt
scas
and
dec
sbb
and
ret
mov
stc
pop
xchg
pop
adc
incl
into
movsb
add
cmp
add
loope
arpl
pushl
add
add
call
and
out
sub
mov
push
mov
add
add
in
hlt
insb
loope
loop
or
xor
lcall
and
call
add
lods
sahf
popl
add
icebp
mov
dec
mov
push
add
mov
dec
movsl
add
xor
jmp
add
add
cld
lods
repz
decl
test
cmc
sbb
cmp
pop
mov
add
push
add
imul
ljmp
add
call
jo
decl
insb
loopne
sbb
add
sahf
aas
cwtl
mov
out
add
call
scas
add
repz
sbb
mov
and
incl
dec
sbb
add
and
add
in
xchg
addb
aas
dec
sub
fadds
add
add
fcompl
mov
xor
incl
pop
inc
add
test
bound
ljmp
lcall
and
inc
add
jecxz
adc
add
add
adc
incl
and
lcall
and
mov
cmpsl
add
cmp
cwtl
xchg
xchg
out
bound
lcall
add
and
jmp
and
jmp
add
mov
add
mov
jmp
adc
mov
addb
add
mov
lret
mov
add
add
cmp
mov
add
incb
add
mov
sti
sbb
add
xchg
outsl
mov
mov
icebp
fdivrl
fidivl
mov
add
jmp
stos
rcll
sbb
add
add
int
add
in
mov
mov
enter
movl
aad
add
xlat
cmp
push
add
jno
clc
mov
xor
dec
xchg
je
testb
cmp
into
iret
cmp
xchg
sub
dec
sbb
cltd
mov
adc
call
add
mov
add
xchg
ret
add
clc
jge
add
mov
aad
add
insb
ljmp
int3
inc
add
imul
add
incl
aad
add
nop
stc
pop
push
add
pop
div
arpl
decl
add
fwait
loop
mov
jb
ljmp
pop
dec
and
dec
movb
addl
test
cs
outsl
aaa
mov
cmp
xor
add
or
sbb
add
leave
int3
pop
enter
sub
add
jle
enter
add
cmp
add
and
lcall
test
jne
pop
or
jle
add
arpl
lcall
pop
dec
fcomi
and
ljmp
cmp
add
cmp
add
add
ljmp
leave
daa
add
add
ja
fmuls
mov
jl
sbb
add
lods
clc
inc
add
dec
and
incl
mov
adc
lcall
push
add
in
aaa
and
dec
jae,pn
call
inc
add
lds
sub
xor
lcall
pop
dec
xchg
int
fcoml
roll
ljmp
ret
add
or
out
sbb
mov
add
decl
jp
add
sbb
add
out
int
jo
fldl
call
add
dec
add
lcall
add
les
addl
rcll
add
loope
lods
sub
add
add
pop
addb
add
ljmp
add
cmp
sti
pop
mov
add
loopne
sbb
call
int
cmpsb
add
add
loop
xor
push
add
and
decl
das
dec
das
imul
rorl
movb
cltd
fldenv
add
add
add
add
cmp
imul
and
ljmp
push
pop
flds
outsl
jbe
add
repz
add
jo
dec
dec
movsl
add
sbb
sub
add
mov
in
inc
add
cld
adc
jmp
mov
add
ds
add
call
adc
inc
add
add
adc
mov
add
ret
or
decl
add
sub
ljmp
jle
adc
out
cltd
flds
ljmp
cwtl
adc
incl
add
add
cld
pusha
add
pop
push
in
xchg
jbe
add
add
enter
add
jle
pusha
add
call
decl
ficoms
int3
mov
push
add
xor
jmp
fcomps
pop
push
lea
add
add
mov
decl
ja
data16
add
push
cltd
enter
add
stos
mov
jb
jmp
add
mov
ljmp
sub
add
add
inc
add
mov
add
addb
jne
add
out
imul
inc
add
add
xlat
test
push
cld
push
lock
inc
add
add
sub
add
inc
add
sbb
add
add
aas
das
push
mov
push
lds
pop
mov
cmp
add
loop
cmp
incl
add
push
add
inc
add
push
add
mov
mov
add
std
shl
add
movsb
add
call
dec
push
sub
or
pushf
xchg
aas
jl
cld
dec
es
add
add
or
in
jecxz
mov
pushl
add
xchg
mov
jge
add
inc
add
add
es
add
pop
mov
xor
xchg
dec
pop
cs
roll
dec
xchg
inc
add
lds
insl
lods
sbb
jmp
add
gs
add
mov
decl
movb
add
inc
add
add
xchg
jno
dec
jo
decl
add
call
bound
lcall
add
jmp
mov
fcoms
addb
pop
test
xchg
call
cld
imul
ljmp
lds
out
cmpsb
add
adc
lret
into
cmp
add
aaa
mov
jle
add
fadd
add
incl
dec
insb
xchg
mov
add
and
lcall
add
fcomp
out
fidivrs
mov
ljmp
mov
cmp
fmull
pop
xor
or
ljmp
or
pop
cld
jo
call
mov
add
mov
inc
add
nop
sbb
sub
mov
int3
and
call
and
pushl
add
add
mov
in
mov
add
decl
add
adc
incl
add
mov
fcmovbe
sbb
mov
add
add
sub
sbb
mov
add
mov
sbb
in
sbb
jmp
add
cmp
insb
add
int3
mov
mov
out
fdivs
add
stc
sbb
ja
push
ja
add
sbb
add
adc
add
xchg
pop
mov
dec
add
decl
push
mov
add
loope
sarb
add
decl
add
pop
leave
push
cmpsl
add
add
lods
fld
add
add
bound
std
push
add
push
mov
call
ja
loope
push
testb
add
jo
jmp
add
rcll
call
jne
cli
cmpsl
add
movsb
add
mov
lret
lcall
xor
dec
xor
dec
push
add
dec
lret
dec
addl
stos
addb
add
decl
add
push
or
mov
jecxz
inc
add
xlat
arpl
ljmp
add
bound
pushl
add
adc
jmp
xor
dec
aam
add
add
addb
xlat
sub
xchg
mov
call
cmp
sub
dec
jne
ds
jno
lcall
add
fisttpl
int
lods
arpl
lcall
push
sbb
add
aaa
addl
jg
fcomps
add
add
add
mov
inc
add
add
add
jbe
inc
add
add
jbe
cli
sub
or
add
add
cmp
pop
mov
mov
add
data16
ss
int
add
and
pushf
push
add
hlt
lods
jo
pushl
add
cmp
mov
lds
cmc
mov
add
fistl
decl
aam
in
push
mov
adc
sub
adc
fstl
mov
gs
dec
int
das
sbb
add
test
pop
adc
rcrb
repnz
add
add
pushf
mov
hlt
mov
popf
adc
call
ljmp
sub
stc
and
jmp
add
pop
lret
inc
add
push
add
loopne
inc
add
cmp
add
add
or
mov
nop
ljmp
add
add
mov
add
pusha
add
fistpll
add
dec
mov
stc
in
dec
icebp
push
insl
adc
ds
dec
cmp
jp
sub
add
jle
jnp
add
filds
add
cmp
add
mov
add
inc
add
test
movl
enter
lock
adc
add
and
mov
ds
stc
and
rcrl
xor
fistl
dec
mov
mov
lods
out
ud2
push
pop
fidivrl
and
decl
addl
sub
mov
or
add
add
addl
add
rcrl
decl
add
rorb
add
add
call
inc
add
and
jl
add
sub
add
sub
arpl
jmp
add
fdivl
add
add
ljmp
adc
decl
cmp
jl
add
cli
int3
sub
fcom
fists
xor
jmp
incl
add
xchg
nop
pop
xchg
rolb
jge
add
mov
rclb
addb
add
add
mov
jg
add
shlb
add
jo
decl
mov
mov
lret
add
addb
and
aas
imul
jb
jmp
add
sbb
and
add
xchg
mov
add
pushl
inc
add
or
outsb
mov
add
incl
jp
stc
pop
mov
adc
lcall
stos
arpl
incl
add
sub
addb
enter
cwtl
or
decl
xchg
icebp
adc
mov
add
xlat
aam
sub
mov
lea
dec
mov
mov
xchg
pop
pop
ss
add
add
add
push
pop
and
inc
add
jp
imul
add
lods
pop
mov
test
push
add
stos
addb
pusha
add
push
popa
add
outsl
jbe
add
mov
add
ficoml
inc
add
add
or
fisubl
pop
cs
add
ret
add
sub
add
arpl
cmp
lcall
add
add
les
int3
mov
add
in
push
add
push
jl
fisttpl
ret
add
jns
jbe
inc
add
jecxz
or
dec
andps
adc
call
pusha
add
mov
sarb
add
cmp
incl
jp
stos
lods
ret
adc
jne
pop
bound
pushl
decl
lods
test
loop
je
xchg
add
cmc
stos
movsl
add
mov
and
jmp
add
sub
and
lcall
int
push
inc
add
dec
in
fiaddl
ljmp
add
add
xchg
xchg
data16
add
pop
les
push
test
jle
mov
add
jl
add
mov
mov
adc
pushl
decl
add
and
decl
mov
outsb
int
add
adc
decl
inc
add
test
pop
scas
addb
add
pop
inc
add
or
test
push
add
jmp
cmp
inc
add
arpl
call
movl
push
dec
xchg
sub
inc
add
lret
hlt
fisttps
pop
fnstenv
add
ljmp
dec
lret
inc
add
adc
inc
add
cmpsb
add
test
add
lcall
jo
decl
add
sbb
xchg
xchg
jo
decl
mov
repz
jmp
add
lea
push
aad
cmp
dec
loop
notb
add
cs
add
cmpsb
add
dec
pop
sbb
dec
arpl
pushl
add
add
push
add
sub
jecxz
jnp
jle
daa
add
add
jns
xor
decl
fcom
pop
leave
movb
add
xchg
add
lcall
les
push
jg
add
jp
add
inc
add
addl
lahf
out
adc
lcall
add
test
icebp
lret
add
pushl
add
aad
add
add
push
add
out
loope
stc
jb
fdivl
push
fwait
add
add
out
stos
movsl
add
fistpl
add
jbe
add
cmp
add
and
add
add
push
jns
jmp
bound
jmp
add
sbb
mov
scas
xor
fdivrl
jle
xchg
and
movsl
add
add
incl
add
jnp
add
inc
add
sahf
push
add
fdiv
das
das
filds
jl
xor
jmp
jmp
add
and
nop
sahf
or
enter
add
into
loope
sub
add
insb
out
sahf
ret
add
addb
iret
aaa
or
add
arpl
lcall
aam
add
mov
add
lcall
add
pushl
dec
out
sub
add
add
inc
add
cmp
movsb
add
add
mov
mov
outsb
cltd
icebp
mov
mov
pop
pop
add
loope
mov
adc
ret
inc
add
jbe
insb
lahf
loopne
lds
scas
repnz
iret
mov
incl
dec
cmp
cmpsb
add
add
roll
hlt
dec
addb
mov
cld
aas
adc
incl
dec
outsl
jno
jmp
add
pop
mov
add
call
push
add
js
add
add
jmp
add
jmp
outsb
outsb
mov
add
pushf
jg
cmp
jmp
push
pop
imul
call
mov
loop
stos
lcall
out
fisttps
add
scas
sbb
dec
les
dec
icebp
xchg
cmp
movl
pop
aad
add
add
fiaddl
in
fcompp
pop
adc
arpl
decl
jmp
shrb
fwait
rolb
add
xchg
add
inc
add
add
mov
xor
cmp
sub
into
push
add
sub
push
add
xchg
mov
add
mov
shlb
adc
ljmp
add
add
icebp
lahf
lods
xchg
add
mov
pop
into
negb
mov
add
jl
mov
jnp
icebp
ret
add
aaa
out
ja
cmp
jnp
xchg
fidivrl
enter
mov
pop
roll
loope
sub
add
arpl
stc
xchg
movl
sbb
add
add
or
add
out
sub
push
mov
cmp
incl
add
push
add
add
mov
mov
movsl
add
xor
lcall
loope
aad
add
in
pushf
pop
out
in
out
ret
add
sahf
repnz
stc
addb
push
or
add
addb
mov
pushl
add
xchg
stos
adc
dec
ret
add
add
addr16
add
decl
movl
popa
add
mov
add
add
and
das
and
jmp
add
add
xchg
cltd
adc
ljmp
popf
loope
jo
incl
pushl
imul
jo
lcall
movsl
add
js
mov
add
inc
add
nop
xor
add
add
incl
les
daa
add
pushl
add
add
loope
nop
xor
jg
xlat
incl
add
dec
int3
insl
addl
test
imul
adc
aas
addb
addl
add
add
mov
cmp
sub
mov
pushl
add
out
adc
mov
add
roll
je
out
fwait
aas
xchg
movsl
add
mov
push
add
sbb
jo
jmp
incl
jge,pt
mov
loope
and
jg
add
push
jl
stos
sub
xor
ljmp
dec
mov
push
mov
mov
mov
addl
adc
sub
mov
pop
add
jmp
cmp
movsl
add
pop
pop
aaa
rolb
xchg
mov
add
xchg
inc
add
pushf
inc
add
jae
pushl
cli
push
fcoml
add
jno
mov
xor
mov
mov
xchg
insl
mov
pop
stc
inc
add
xor
xor
cmp
fmuls
jnp
add
push
stc
add
addb
ret
mov
push
add
shlb
ds
add
call
mov
fdivrs
sbb
imul
adc
sub
add
sbb
xchg
jmp
clc
aam
scas
shll
add
add
and
movsl
add
ret
add
sbb
incl
imul
jmp
pop
addl
add
jne
jns
add
mov
roll
arpl
in
jae
inc
add
inc
add
add
xor
call
loope
lret
mov
cmp
pop
enter
cmp
add
add
add
add
loop
add
dec
aad
add
inc
add
fldt
faddl
add
xchg
or
mov
ja
adc
add
adc
mov
push
in
add
test
ret
add
add
cmp
add
and
push
jb
call
jmp
scas
fisttpl
xchg
movsb
add
aaa
add
pushl
jl
add
or
fsts
roll
popa
add
outsl
stos
imul
and
dec
push
add
push
fists
push
fcmovnu
xchg
cld
cmpsl
add
call
sub
imul
sub
call
pop
dec
mov
insb
mov
inc
add
push
xchg
xchg
dec
mov
add
mov
loope
pop
mov
inc
add
push
idivl
and
decl
add
sbb
add
int
sbb
add
repz
mov
push
add
sub
addl
ljmp
mov
pop
popa
add
lds
data16
call
add
pop
das
cmpsb
add
add
add
mov
inc
add
fdivl
adc
cmp
add
add
add
out
icebp
jecxz
call
jp
out
inc
add
jb
lcall
in
xchg
mov
mov
inc
add
xchg
lahf
xchg
push
ss
cwtl
inc
add
add
cltd
fsubs
add
or
mov
add
jge
add
jle
add
in
dec
fwait
fwait
push
sub
arpl
mov
lahf
dec
addl
add
push
add
add
aaa
out
and
lcall
cmp
cwtl
push
loopne
push
add
add
shlb
pushl
add
ljmp
stos
in
in
cltd
lods
data16
lcall
aaa
sbb
xchg
cld
adc
call
jmp
add
add
pushl
add
lret
mov
add
pusha
add
inc
add
jge
les
out
out
jle
mov
jmp
inc
add
addr16
jecxz
sbb
mov
cltd
mov
add
xchg
inc
add
pop
nop
and
xor
jmp
add
insl
popa
add
dec
dec
or
pop
out
push
imul
mov
add
nop
mov
adc
ljmp
cltd
mov
bound
jmp
or
addb
inc
add
dec
push
inc
add
gs
sub
add
loop
dec
sbb
add
add
mov
sub
sahf
push
add
dec
stos
out
notb
add
xor
cmp
movsl
add
mov
push
mov
jno
ljmp
xchg
mov
mov
mov
dec
cltd
xchg
dec
repnz
imul
ljmp
add
add
or
add
mov
xchg
clc
jno
jmp
add
ror
fdivrs
xor
incl
add
ljmp
testl
add
lahf
xor
ljmp
add
sub
add
decl
sti
jle
xor
incl
lcall
les
mov
ljmp
jg
mov
add
add
add
xchg
aad
inc
add
ljmp
jmp
add
hlt
testb
incl
xchg
dec
or
ja
jecxz
mov
leave
clc
pop
add
js
push
lret
mov
xchg
add
push
adc
add
add
add
testb
call
add
icebp
sbb
cltd
outsl
ret
test
pop
add
roll
jnp
ja
jecxz
call
ljmp
call
les
nop
push
in
sub
inc
add
insl
pshufw
mov
insl
in
and
addl
outsb
jae
jmp
add
inc
add
mov
push
adc
lcall
add
call
mov
add
add
mov
add
xor
add
add
add
int3
xchg
or
add
scas
push
and
mov
add
out
mov
ljmp
ficoml
pop
mov
sbb
data16
add
lds
lret
adc
fstpt
dec
mov
push
add
xor
incl
decl
add
ret
add
add
add
dec
rclb
lods
and
inc
add
add
clc
dec
and
int
int
add
cmp
push
into
out
lret
std
pop
mov
xchg
test
int
test
mov
test
dec
lcall
pop
outsb
xchg
push
add
stos
sbb
and
lcall
aaa
je
adc
jmp
pushl
add
scas
icebp
and
jmp
call
and
pushl
cwtl
mov
jmp
add
jo
dec
pop
sub
clc
fstl
push
int
in
xchg
in
pop
adc
ljmp
decl
add
xor
incl
push
add
add
xor
call
add
in
xchg
mov
mov
inc
add
pop
sub
fcompl
int
add
jmp
rcrb
aam
mov
inc
add
stc
jb
push
mov
in
lret
add
xor
cmp
mov
jge
add
cmpsl
add
roll
inc
add
sub
mov
std
daa
add
add
adc
out
adc
add
add
ret
add
jg
xor
pushl
ljmp
add
xchg
inc
add
pop
jb,pn
jmp
insl
stc
hlt
loop
jno
jmp
fsubrl
add
xor
call
test
jg
push
add
decl
sahf
ret
in
mov
push
cli
jge
add
pop
int3
into
cmc
ja
add
ljmp
decl
movsb
add
fdivl
add
push
add
mull
aas
sub
stc
xchg
cmp
add
ljmp
les
jge
pop
or
ficompl
insl
adc
pushl
add
mov
les
mov
dec
and
incl
incl
addl
sbb
jl,pt
pop
inc
add
or
repz
pop
mov
iret
lock
inc
add
dec
add
call
add
dec
sub
jmp
fxch
mov
jnp
add
pop
cmp
add
call
jmp
jmp
setle
sbb
stos
adc
incl
pushl
add
cwtl
dec
jmp
sbb
add
roll
jb
ljmp
sbb
loop
out
pushf
imul
add
mov
addb
add
and
ljmp
leave
xchg
fcmovu
loope
pop
sub
dec
das
sbb
xor
jmp
add
add
xchg
repnz
test
out
add
ficoms
call
ficoms
add
stos
sub
add
pop
dec
push
cmpsl
add
nop
imul
incl
rorb
push
das
cmp
cmp
or
or
add
enter
add
movsb
add
add
adc
decl
jbe
mov
stos
rorl
add
cltd
aaa
pop
or
into
mov
je
add
call
das
pop
mov
cmp
add
sbb
adc
decl
mov
sub
mov
add
cmpsl
add
add
mov
sub
je
add
cltd
lahf
and
ljmp
ja
sub
or
rorb
add
nop
scas
jle
inc
add
jb
pushl
add
out
pop
and
jmp
add
or
xchg
lods
out
add
icebp
mov
add
xchg
cmp
std
push
lods
adc
call
add
add
addb
mov
cmp
addl
jge
jecxz
mov
xor
jmp
rolb
and
lcall
add
out
fisttpll
scas
ss
mov
inc
add
mov
stc
xchg
lods
pop
push
aam
add
add
mov
sbb
add
ds
xchg
xor
ljmp
dec
pushf
test
lahf
lds
mov
jmp
call
adc
jmp
add
pop
sbb
add
add
fcomip
cmpsb
add
je
fisttpll
mov
add
xlat
pop
push
ljmp
xchg
sub
add
add
mov
cmp
add
push
add
adc
shrl
xor
notb
sub
add
add
add
movsl
add
or
xchg
xlat
addb
adc
pushl
incl
add
adc
ljmp
clc
int
add
stc
cmpsl
add
add
out
inc
add
add
add
pmaxsw
fucomip
sub
xchg
add
and
jmp
add
push
dec
stc
outsb
addl
xchg
lahf
cmp
add
roll
add
pop
and
dec
and
cld
negb
daa
add
add
stos
outsl
add
add
pop
cwtl
mov
add
sbb
decl
pop
out
lea
add
in
inc
add
int
add
pop
jne
ss
push
mov
icebp
jb
jg
xor
jmp
add
xor
fistpl
cmp
add
decl
add
rolb
add
insl
neg
call
cs
mov
add
add
mov
sbb
push
mov
cmp
add
push
add
jmp
add
das
sub
int
add
add
out
cmp
xchg
cld
sbb
arpl
inc
add
pushl
jmp
add
add
mov
addl
add
mov
add
cmpsl
add
in
pop
dec
push
add
pop
movsb
add
pushl
cmp
add
add
loopne
or
ljmp
xchg
xchg
scas
add
push
mov
dec
lods
imul
and
incl
pop
and
mov
out
mov
add
ret
add
mov
mov
shll
mov
add
addl
dec
mov
lods
push
mov
movb
add
mov
mov
cwtl
adc
ljmp
mov
and
fistpl
add
mov
cmp
clc
ljmp
mov
into
inc
add
outsl
sub
add
out
cmp
add
lods
mov
mov
outsl
rolb
ss
aam
xor
pushl
add
lcall
add
xchg
out
sub
roll
aam
mov
dec
pop
adc
ljmp
adc
dec
cmpsl
add
add
mov
into
or
lcall
adc
incl
mov
cmc
sahf
mov
push
cli
addb
or
mov
or
sub
nop
in
adc
pushl
add
cli
sbb
out
mov
jl
add
adc
ljmp
mov
jg
add
into
rcll
jo
pushl
add
out
ss
add
push
cmpsb
add
mov
pop
mov
inc
add
incl
add
decl
xchg
add
add
adc
jmp
add
add
dec
xchg
pop
repz
movl
sub
call
in
fwait
jecxz
add
addl
iret
stos
pushf
dec
or
add
fnstcw
xor
cmp
add
movb
add
sarb
sub
sbb
incl
incl
pop
out
dec
mov
test
add
add
add
movl
sbb
add
adc
xor
add
aas
add
incl
add
add
pushl
add
xchg
sub
add
pop
adc
lcall
pop
incl
add
filds
sub
add
mov
sub
leave
bnd
decl
xchg
pop
cmp
add
fidivrs
inc
add
mov
xor
pushl
add
push
repz
jmp
add
arpl
dec
fstpl
dec
js
or
sub
jo
dec
inc
add
cmc
sahf
scas
shll
lcall
or
int
add
xor
mul
add
incl
add
add
lcall
adc
mov
incl
push
add
add
and
ljmp
ffree
add
data16
pop
add
adc
call
and
ljmp
imul
pop
lds
or
add
adc
lcall
adc
lcall
jne
pusha
add
add
decl
add
sub
add
jnp
cmp
mov
add
movsl
add
add
cld
add
call
call
add
pop
incb
mov
sbb
aas
test
into
xlat
pop
outsb
loop
loope
loope
clc
cmc
out
add
ljmp
add
add
rcrl
sub
mov
rolb
dec
test
hlt
mov
push
mov
add
fsub
add
add
xor
push
lahf
push
add
repnz
push
sub
enter
push
add
xrelease
nop
push
add
add
les
mov
add
mov
add
and
jmp
add
pushl
sbb
call
movl
add
pop
cmpsl
add
pop
xchg
mov
roll
add
int
xchg
in
fistl
add
out
add
jl
jne
mov
insl
sahf
imul
dec
mov
imul
dec
dec
aaa
lret
stc
out
mov
add
add
jmp
add
xor
ljmp
enter
bound
lcall
cmp
add
dec
pop
jbe
adc
ljmp
add
add
sbb
rolb
add
call
add
out
mov
pushl
dec
and
insb
xlat
stos
push
pop
push
add
out
cmp
add
loop
inc
add
xor
lcall
fstpt
cmp
add
sahf
pop
sbb
jb
call
xlat
fistps
cltd
jl
je
push
addl
sbb
add
sbb
add
pop
out
movsb
add
add
add
xor
call
mov
mov
add
push
add
add
ljmp
and
shl
in
in
xor
inc
add
pop
mov
stos
in
xor
jmp
jmp
imul
add
or
add
cmpsb
add
add
add
incl
dec
dec
sar
call
add
pop
mov
pushl
adc
ljmp
jle
add
pushl
lcall
out
jb
mov
lcall
mov
lea
mov
ss
mov
add
lcall
and
pushl
jle
add
cmpsb
add
mov
sti
lds
jb
jmp
add
add
add
xchg
push
jmp
add
in
daa
add
fbstp
xchg
push
add
ljmp
lret
lcall
add
add
incl
adc
cmp
or
add
daa
add
hlt
add
sub
add
popa
add
dec
jmp
lock
add
add
pushl
mov
sub
add
add
add
ret
add
jmp
add
mov
xchg
push
add
cmp
jle
das
addl
add
decl
mov
incb
add
test
into
cli
lock
add
add
in
add
inc
add
inc
add
les
mov
sbb
scas
inc
add
clc
sbb
cmp
add
push
add
mov
out
sbb
xchg
mov
add
xchg
test
add
or
add
jmp
add
testb
xor
jmp
add
cmp
or
add
sub
pop
shld
add
fists
popa
add
les
cltd
aam
pop
ja
add
add
add
stc
daa
add
add
or
dec
lods
insb
addb
mov
add
pushl
dec
xor
in
push
add
add
mov
mov
add
mov
add
icebp
dec
daa
add
or
in
in
addl
jecxz
stos
inc
add
inc
add
push
in
test
add
dec
in
sub
in
inc
add
xor
call
call
add
jno
call
add
js
pop
xchg
push
add
aaa
xchg
out
add
inc
add
pop
leave
xor
roll
ret
add
add
jns
cmp
add
repz
aad
add
pop
es
and
push
add
into
insl
add
add
mov
add
icebp
or
add
mov
add
movsb
add
inc
add
dec
or
and
pushl
ds
cli
jl
pop
jbe
aas
xchg
mov
xor
lcall
pop
pop
add
mov
dec
or
lods
mov
dec
outsb
pop
mov
mov
and
call
add
incl
jge
add
lahf
xchg
mov
movsl
add
je
mov
lret
call
cmc
in
lods
mov
add
ljmp
fwait
nop
push
add
sbb
inc
add
mov
lcall
addb
add
jecxz
sub
xor
call
ljmp
out
les
notl
and
fidivl
xor
ljmp
mov
ljmp
ljmp
movb
xchg
ficompl
test
roll
mov
fcomps
add
xchg
out
pushf
sub
mov
ljmp
add
cmp
xchg
jge
add
add
sbb
stos
stos
test
mov
movb
add
sahf
cmp
add
add
add
pop
lds
adc
cmp
add
add
jecxz
dec
int3
or
add
xchg
cmp
add
testl
sbb
add
repz
cmp
inc
add
add
push
lea
stos
sbb
add
add
cld
fistpl
push
xchg
in
test
cli
movl
add
add
inc
add
fstpt
add
dec
push
push
pop
lret
lret
out
or
pop
out
fsubrl
and
call
fimuls
cwtl
ss
jl
add
or
add
adc
inc
add
add
roll
jne
mov
add
add
push
xchg
bt
ljmp
movl
jp
mov
add
jmp
dec
and
call
add
dec
aaa
stos
add
cmp
incl
fdivrl
into
popf
mov
insl
inc
add
icebp
dec
jb
decl
cmp
fsubs
xchg
cmp
add
cmp
les
adc
mov
mov
mov
enter
mov
fdivr
aam
add
ret
insl
xchg
mov
cmpsl
add
pop
pop
add
add
mov
add
add
incl
outsl
lret
es
add
mov
add
sbb
add
out
cmpsl
add
in
jmp
push
popf
icebp
jae
pushl
inc
add
decl
stos
bound
call
lcall
sub
add
add
decl
pop
lods
lods
addb
pop
and
mov
and
lcall
add
add
lock
int3
fidivs
add
push
je
add
add
sub
add
add
nop
cmp
mov
add
push
adc
test
add
fwait
inc
add
and
push
add
inc
add
clc
xchg
mov
add
push
aaa
nop
pop
rorb
add
add
add
inc
add
mov
cmp
push
add
inc
add
jg
add
and
add
out
rcrl
imul
outsl
sbb
add
jno
ljmp
cmp
mov
movsb
add
test
movl
sahf
cmpsl
add
add
add
inc
add
nop
inc
add
inc
add
stc
rorl
add
or
add
add
mov
scas
fnsave
je
inc
add
jb
cmp
push
adc
incl
aas
inc
add
push
add
add
call
fsubl
add
ret
add
enter
add
adc
out
jb
pushl
add
pop
adc
cmp
mov
add
push
roll
add
ljmp
data16
adc
inc
add
jle
jl
add
cltd
addb
add
addl
lret
cmp
add
pop
add
adc
ljmp
push
call
push
add
sarl
cmpsl
add
sbb
push
jle
xchg
dec
ja
add
mov
inc
add
loope
enter
lcall
imul
sahf
out
inc
add
pop
add
int3
jg
add
dec
mov
add
push
push
push
add
fidivs
mov
cmpsb
add
add
fs
leave
jl
add
push
cld
lea
add
ret
add
dec
fbstp
add
or
lea
pushl
stos
out
jno,pt
clc
inc
add
push
mov
mov
push
or
adc
decl
mov
es
ret
add
lcall
add
incl
pushl
add
pop
in
outsb
rclb
lahf
and
decl
fisttpl
dec
clc
addb
add
push
add
jl
addb
jae
jmp
addb
ja
add
dec
test
lods
ja
add
jb
ljmp
jno,pt
inc
add
ljmp
lea
leave
addb
lcall
test
cltd
sbb
add
push
add
add
js
mov
inc
add
ret
in
rorb
fucomi
rolb
mov
pop
out
test
mov
leave
inc
add
add
mov
add
xor
lcall
add
ss
loope
cmp
inc
add
mov
lea
mov
roll
jg
add
bound
lcall
arpl
decl
rolb
add
inc
add
add
push
add
dec
insl
push
pop
je
out
cs
jne
mov
cmp
adc
lcall
or
mov
add
pop
loopne
pusha
add
add
jp
add
xchg
mov
add
add
adc
add
pushf
das
push
add
cmp
add
jno
call
add
insl
inc
add
jb
jmp
add
incl
add
stos
mov
add
mov
add
mov
add
inc
add
cmp
add
out
call
add
and
cli
add
jle
ret
add
cmc
xor
dec
cmpsl
add
decb
lds
xchg
mov
mov
neg
test
loop
std
fwait
or
das
imul
xor
call
lret
addl
repz
in
aad
call
sbb
sub
pop
stos
dec
lcall
add
lods
data16
add
fs
add
pop
mov
loope
add
add
xor
js
icebp
sbb
add
sub
mov
jecxz
push
add
dec
jp
add
add
lods
mov
add
aam
mov
add
popf
pop
sbb
movb
and
cmp
mov
add
mov
add
call
add
push
scas
shlb
add
cmc
pop
add
add
and
push
stos
icebp
jp
ljmp
cmp
cmovns
jmp
sub
add
xor
fcom
rolb
jmp
pop
pop
xchg
fnstcw
test
sub
add
decl
add
fsubr
test
add
addb
dec
pop
add
call
dec
adc
dec
push
and
lahf
aas
int3
clc
mov
mov
add
call
enter
add
add
mov
add
ljmp
add
and
ljmp
xchg
adc
add
and
decl
shl
add
add
add
cmp
adc
call
pushl
push
jp
add
jo
call
fisubs
adc
lcall
stos
add
jmp
je
add
sbb
adc
jmp
outsb
mov
addb
jne
add
mov
add
push
add
cld
mov
in
add
dec
call
add
xor
fsubr
pop
jnp
add
into
mov
dec
jno
jmp
add
jmp
add
loopne
or
outsb
and
push
and
decl
jp
add
inc
add
add
mov
push
add
shlb
call
hlt
xchg
into
stc
push
in
xchg
pop
sahf
movsb
add
mov
add
repnz
add
mov
cmp
call
pop
inc
add
mov
mov
dec
imul
loop
inc
add
test
add
cld
mov
add
popa
add
addb
data16
lcall
pop
add
mov
add
add
arpl
incl
add
das
enter
mov
mov
jnp
add
cmp
add
add
mov
insl
xchg
int3
dec
mov
add
add
push
add
fnstcw
jmp
js
add
shll
movsb
add
call
pushf
adc
add
add
add
pushf
pushf
and
call
jl
add
data16
dec
es
pop
mov
les
add
add
push
add
jp
mov
cltd
pinsrw
je
xor
dec
out
push
cli
xchg
jbe
aas
dec
das
ss
cwtl
fisubrl
out
dec
je
scas
bound
fnstsw
bound
incl
incl
add
adc
ljmp
inc
add
stc
loope
add
decl
jecxz
push
imul
add
adc
js
bound
call
add
add
inc
add
push
hlt
aas
loop
test
mov
xor
fisubrl
notl
mov
pop
fimull
arpl
lcall
cltd
lret
addps
fucomp
or
add
add
inc
add
js
or
dec
cs
xlat
stc
pop
push
add
add
jmp
cmp
outsb
xor
jmp
decl
jmp
inc
add
scas
adc
xchg
lcall
add
mov
adc
call
fildll
rolb
mov
addb
sbb
jmp
stc
inc
add
mov
int3
jne,pt
xchg
outsb
pop
inc
add
out
sahf
addl
mov
call
pop
adc
cmp
dec
and
add
add
incl
add
xor
fdivs
add
cmpsl
add
xor
pushl
add
shl
int
aaa
mov
add
add
xchg
push
add
mov
jecxz
aaa
dec
stc
filds
add
mov
add
bound
decl
out
cmp
sbb
mov
negb
mov
in
shrb
add
sahf
mov
push
in
adc
ljmp
cltd
rorl
add
add
push
add
cmpsl
add
ret
mov
call
ficoms
outsl
mov
inc
add
add
icebp
dec
mov
xchg
addb
sbb
add
stos
cs
jnp,pt
movl
add
xor
aam
jnp
loop
stos
cmc
jg
add
and
sbb
add
pop
add
add
add
out
mov
insl
adc
jmp
add
push
add
rcl
xor
and
call
insb
cmp
fimuls
jle
sub
stos
insb
add
aas
jne
push
test
arpl
decl
mov
mov
pop
sbb
in
inc
add
pop
negb
add
aam
inc
add
xchg
pop
lea
add
add
add
cli
imul
cmpsb
add
mov
add
sbb
decb
inc
add
inc
add
adc
add
and
pushl
pushl
in
lea
sti
scas
ret
add
add
inc
add
in
sbb
cmp
mov
movsb
add
push
rclb
pop
push
out
add
ds
mov
inc
add
or
lahf
ds
mov
into
repz
add
mov
sbb
xchg
rolb
add
lret
add
call
pushl
lcall
xor
pushl
mov
push
xor
mov
add
inc
add
add
and
call
lods
push
add
pushf
nop
add
clc
dec
mov
sub
call
sbb
mov
add
imul
daa
add
inc
add
dec
shrb
mov
int3
jle
mov
add
add
arpl
decl
add
add
add
and
lcall
cmpsb
add
addl
add
mov
add
adc
ljmp
pop
in
bound
lcall
inc
add
add
repnz
push
stc
dec
push
add
lcall
push
add
dec
mov
add
stos
mov
addb
mov
imull
mov
incl
add
icebp
push
add
add
mov
imulb
movl
mov
lret
add
movsl
add
add
jmp
xchg
jns
pop
pop
in
xchg
gs
add
dec
ljmp
das
xchg
imul
add
in
inc
add
add
add
outsb
mov
and
dec
aas
aas
fsubl
add
adc
pushl
rolb
add
inc
add
inc
add
movsl
add
rorb
push
mov
push
add
sbb
lahf
xchg
pop
in
popa
add
pop
leave
jl
add
std
cmp
out
adc
jb
dec
and
xchg
jns
movl
jmp
add
fimull
in
mov
add
add
mov
add
add
rcr
adc
jmp
ljmp
inc
add
jo
jmp
cltd
cwtl
aas
fstp
sub
sbb
xchg
push
xchg
push
add
je
je
popa
add
dec
les
jle
test
ja
add
fildl
add
rorl
or
push
inc
add
repnz
push
or
incl
addb
ret
add
repz
insb
fdivrp
ja
arpl
ljmp
xlat
in
pop
aas
fld
add
sub
mov
das
pop
repnz
inc
add
add
imul
add
cmp
jmp
add
pushl
and
fsubs
sub
iret
pop
add
outsl
push
jmp
add
dec
loopne
in
iret
in
imul
or
add
mov
movsb
add
sbb
fisttpll
jns
rolb
aas
pop
xor
add
or
add
add
decl
pop
cli
push
add
in
or
add
jo
cmp
jge
add
sbb
inc
add
mov
add
ljmp
mov
dec
jmp
inc
add
adc
incl
fnstcw
mov
movsb
add
push
add
sbb
ss
jecxz
jnp
add
shl
add
movb
add
mov
inc
add
add
bound
mov
ja
mov
mov
and
call
repnz
add
xchg
dec
sahf
fidivl
cmc
push
rolb
sbb
mov
sub
neg
or
add
addl
jno
ljmp
add
call
js
sbb
xor
jmp
add
adc
cmp
sbb
fsubp
add
add
mov
add
jg
and
fwait
sbb
add
stos
mov
mov
insb
mov
call
aam
add
add
repz
pop
add
add
incb
inc
add
add
jl
xor
cmp
mov
add
scas
aad
std
das
lds
dec
mov
jo
cmp
call
push
bndstx
sbb
decl
ret
add
iret
iret
out
inc
add
inc
add
xor
mov
add
xchg
inc
add
xor
jmp
add
add
out
push
imul
add
sbb
add
dec
call
or
nop
mov
nop
xor
call
outsl
ss
jmp
or
stos
enter
mov
add
ljmp
cli
sub
into
ja
push
xchg
jmp
add
mov
cmpsb
add
decl
add
lcall
cmc
into
push
leave
mov
pop
dec
addl
call
jmp
cmc
inc
add
adc
mov
add
pop
sbb
add
incl
dec
mov
pushl
outsb
out
dec
mov
add
popa
add
sub
jecxz
iret
stos
or
jno
jmp
outsb
data16
cmc
add
dec
cmp
ljmp
addl
sbb
mov
xor
ljmp
lds
cmc
sahf
out
inc
add
add
sub
test
sti
push
add
popf
imul
adc
and
lcall
add
lcall
add
faddl
push
sbb
lods
sbb
addl
add
lcall
and
jns
mov
out
stos
pusha
add
inc
add
incl
push
outsb
push
jae
pushl
add
mov
add
divb
mov
jns
mov
sub
adc
inc
add
add
mov
add
lret
xchg
cs
sub
flds
lcall
add
test
roll
bound
jmp
outsl
jae
ljmp
idivl
add
addb
loope
pop
in
in
mov
add
mov
pushl
jmp
add
mov
add
out
sbb
add
adc
pushl
push
pop
mov
xchg
dec
jae
out
das
adc
fdivl
xor
fwait
add
jmp
and
fiadds
call
dec
and
jmp
add
add
xchg
add
fcomps
mov
lahf
cmp
lcall
addb
jmp
add
cli
or
add
add
pop
addb
add
sub
jo
jmp
xchg
call
dec
adc
fildl
stos
lret
mov
add
cmc
push
mov
addb
add
mov
xor
js
jp
outsl
out
cmpsb
add
aad
adc
inc
add
sub
ljmp
or
add
scas
mov
nop
pop
add
push
add
sub
add
add
add
inc
add
fcomi
pusha
add
xchg
fwait
clc
lcall
aas
aad
bound
jmp
add
add
ja
pop
mov
call
push
mov
add
dec
add
decl
push
add
xchg
jle
jecxz
xor
jmp
ljmp
push
add
fs
add
dec
pop
xor
jae
ljmp
lcall
addl
jg
add
sub
push
mov
sub
out
addb
add
pop
mov
add
mov
or
clc
sbb
fwait
add
imul
sbb
cld
insb
xchg
in
add
aaa
lahf
incb
xor
call
mov
roll
xlat
mov
adc
jmp
add
xchg
add
cmp
lock
loope
xchg
cwtl
adc
add
jl
add
in
filds
add
int3
mov
call
xchg
aas
int
add
ljmp
add
dec
mov
loopne
add
and
decl
ret
add
mov
add
jmp
add
lods
jge
stos
mov
add
addb
add
push
add
fisubrs
add
add
add
or
fstpt
sbb
pushl
call
mov
in
push
jmp
add
mov
add
push
add
cmp
add
add
sbb
add
jae
jmp
jnp
sbb
adc
lcall
test
add
loopne
loope
mov
js
test
jo
pushl
add
mov
add
jae
jg
inc
add
jns
dec
addl
mov
scas
xchg
sti
push
insb
out
xchg
xchg
neg
jne
adc
incl
dec
add
add
push
roll
or
inc
add
pop
scas
or
add
loop
push
rorb
mov
inc
add
jns
inc
add
jmp
add
xchg
xchg
mov
add
imul
mov
jge
add
jo,pn
decl
sbb
movb
arpl
lcall
lds
sbb
add
push
fsubp
add
addl
add
sub
add
fiadds
add
call
push
cmpsb
add
inc
add
jb
decl
aad
push
add
test
aas
ljmp
and
pushl
mov
rclb
inc
add
add
xchg
pop
xor
dec
xchg
jecxz
mov
push
push
dec
mov
mov
fldl
xchg
push
add
adc
ljmp
ret
addb
add
and
jp
lea
add
add
sbb
lahf
fistpl
add
call
add
stc
fsubl
dec
dec
rolb
pop
cmp
roll
add
adc
add
push
push
pusha
add
jge
push
icebp
mov
add
sub
add
in
cmp
mov
out
xor
decl
lea
xor
pushl
add
add
int3
pop
add
push
add
mov
add
xor
add
inc
add
mov
add
sti
bound
decl
sub
add
push
out
mov
pushl
add
mov
push
add
fisubrs
ja
add
mov
fisubl
jmp
xchg
xchg
imul
or
incl
add
add
in
mov
xchg
xor
cld
js
add
stc
outsb
or
dec
btc
aad
add
add
mov
mov
dec
add
add
mov
add
pop
cli
add
scas
add
push
aaa
and
mov
mov
movl
les
xchg
cwtl
addr16
add
add
adc
decl
lret
or
mov
mov
pusha
add
mov
cmp
add
dec
mov
mov
sahf
imul
sbb
mov
add
pop
add
push
addl
push
add
dec
or
roll
ljmp
push
mov
xor
ljmp
add
mov
call
addl
rolb
ret
add
inc
add
dec
add
call
add
sbb
jmp
add
daa
add
mov
pop
cmp
or
xadd
add
lods
jno
incl
sub
and
incl
dec
and
mov
add
cmp
add
mov
jge
movsb
add
dec
mov
stc
movl
add
and
mov
sbb
add
add
lret
pop
fimull
repz
add
std
sarb
jge
add
xor
incl
incl
and
pushl
add
add
dec
dec
mov
mov
add
decl
cld
out
out
xor
incl
cmp
jne
dec
pop
mov
add
mov
add
movsl
add
fldt
out
push
add
add
test
adc
inc
add
add
dec
push
mov
add
cmc
xchg
test
in
xchg
clc
sub
add
in
into
dec
loope
push
scas
push
add
imul
xlat
inc
add
pop
addb
pop
insb
shlb
call
lea
or
add
call
add
add
add
xor
dec
les
xor
ljmp
ret
add
cmp
add
fidivl
sub
pusha
add
mov
add
xchg
cmp
ljmp
shll
ds
add
mov
incl
add
mov
add
roll
pushl
arpl
ljmp
add
outsb
lods
jmp
decl
sub
decb
jg
scas
jmp
push
ficompl
add
add
repz
call
pop
bound
lcall
ljmp
add
xchg
jg
add
add
xchg
or
call
add
addb
in
outsb
mov
sbb
pushl
jmp
push
sbb
push
sbb
pop
clc
icebp
cmp
ljmp
in
out
and
ljmp
add
inc
add
testb
ffreep
add
add
or
dec
cmp
add
add
pushl
add
lcall
add
push
add
jnp
add
outsl
int3
nop
sub
pushf
sbb
movsl
add
mov
add
inc
add
cmp
add
add
xchg
js
add
pop
ffreep
add
sbb
mov
jne
xchg
gs
add
dec
enter
add
sub
daa
add
cmpsb
add
pop
push
add
inc
add
add
call
std
shrb
arpl
mov
imul
in
movb
js
iret
sub
sub
add
add
push
push
add
data16
test
outsl
pushf
jmp
lcall
pop
push
add
cmp
add
pop
out
ret
add
rolb
cmp
shlb
lcall
mov
xor
imul
add
add
call
jmp
fildll
add
add
pop
or
jg
add
xchg
jl
add
movb
lods
push
imul
pop
xchg
mov
pop
pop
inc
add
fiaddl
add
jmp
cwtl
es
push
add
jns
lods
mov
jns
mov
xchg
mov
cs
add
repnz
push
add
jo
pushl
jnp
add
loope
mov
insl
pushf
and
dec
xchg
cmc
jns
sbb
jnp
fdivrp
push
lret
arpl
cmp
jno
jmp
add
jmp
fnsave
adc
sbb
je
add
rolb
pop
aaa
mov
or
adc
call
call
add
stos
inc
add
cmp
mov
pop
push
add
ss
add
data16
jmp
add
movb
add
cmp
sbb
sti
xchg
sbb
adc
cmp
add
stc
cmp
jo
pushl
sub
mov
pop
add
add
jl
sbb
mov
mov
cld
adc
decl
fildll
add
int3
add
add
xchg
inc
add
add
xchg
fisttpll
xchg
les
pushf
push
dec
mov
xor
ljmp
push
add
mov
pop
adc
lcall
int3
and
add
add
cmp
sub
in
sub
addb
jb
dec
push
add
ja
add
add
repnz
add
add
lcall
lcall
add
adc
lret
mov
add
jle
add
jl
mov
inc
add
cld
loope
ja
addb
add
test
ljmp
add
fsubp
add
add
in
or
jmp
test
add
and
mov
add
fbstp
pop
add
ds
pop
jmp
dec
and
mov
mov
add
add
dec
jnp
dec
mov
idivl
add
ljmp
stc
in
dec
arpl
mov
ljmp
push
add
add
rolb
ss
push
xchg
adc
in
pushf
aad
xchg
jg
fsubs
add
push
add
movb
and
out
loop
mov
cmp
or
pop
xlat
cmp
data16
mov
and
decl
inc
add
ljmp
inc
add
fisubrs
stos
jnp
add
dec
dec
mov
sub
scas
jg
das
nop
or
sub
pop
sub
add
addl
jp
mov
xchg
pop
jae
fcmovnb
add
mov
jae
ljmp
psubsb
inc
add
jmp
add
lret
shll
call
rolb
popa
add
push
outsb
in
cmp
mov
xor
push
add
add
add
or
jl
ret
add
adc
call
jb
jmp
ret
add
cs
push
mov
add
add
jmp
inc
add
add
inc
add
stos
or
sbb
dec
mov
ret
add
add
loope
mov
aam
ret
roll
add
push
or
add
dec
pop
cli
in
jb
fnsave
pushl
jno
aas
jbe
mov
mov
insb
dec
sbb
and
cmp
add
mov
add
lcall
mov
add
add
loopne
lds
je
sub
jle
cmp
mov
add
enter
add
xchg
jl
adc
pushl
and
ljmp
xchg
xchg
rolb
add
add
aad
loope
pop
mov
incb
add
push
add
mov
pop
pop
pop
das
jge
nop
jne
cltd
lds
jl
add
sbb
add
add
push
sbb
jb
jns
add
cli
jo
ljmp
lods
imul
aas
into
sahf
pop
push
add
test
movl
push
sbb
add
sub
add
movsl
add
mov
cwtl
fisubs
add
sbb
mov
add
add
inc
add
push
add
mov
add
and
and
call
add
dec
or
addl
add
and
fsub
add
nop
push
add
sub
lds
mov
fisttpll
cmp
int3
mov
add
push
scas
int
xchg
mov
add
pushf
fwait
movb
add
notl
mov
xor
pushl
jle
jns
add
stos
in
sbb
and
incl
lcall
add
add
add
lcall
jmp
add
bound
decl
add
jmp
add
addb
addl
xor
push
add
mov
add
jmp
add
aad
xor
ljmp
mov
add
xor
ljmp
fst
imul
sbb
loopne
repnz
and
jmp
add
push
add
cmc
ja
mov
das
out
mov
test
add
mov
inc
add
decb
inc
add
lods
repz
decl
mov
pop
push
pop
add
call
aad
add
sub
xchg
das
ror
icebp
inc
add
mov
jne
cli
dec
sub
movl
add
adc
mov
cmp
fwait
cmp
add
dec
mov
insb
mov
xor
call
testl
sbb
out
lahf
enter
rolb
ret
add
adc
lcall
jge
sub
adc
push
dec
add
call
mov
outsl
dec
das
pop
mov
mov
std
dec
xchg
jnp
add
adc
inc
add
lret
pushf
push
push
add
cld
aas
sahf
cmp
pop
insb
jno
inc
add
iret
addl
aam
or
inc
add
pushf
add
jle
add
adc
lcall
xchg
push
push
add
loopne
mov
add
add
mov
sub
pop
addl
add
mov
fidivrl
mov
dec
cmpsb
add
js
pop
xchg
jno
ljmp
mov
add
test
shr
add
add
or
inc
add
add
inc
add
scas
test
lcall
sub
add
pop
ret
clc
add
ljmp
and
sbb
incl
decl
add
je
inc
add
lcall
pop
push
or
inc
add
jbe
add
sbb
lcall
sub
bound
incl
add
jo
jmp
adc
jmp
dec
imul
data16
jecxz
sub
add
call
incl
mov
and
jmp
mov
call
fisttpl
push
add
sub
push
add
cmpsb
add
or
sub
inc
add
adc
lcall
add
jl
add
inc
add
add
call
add
out
out
sub
fcmovnb
add
jmp
call
add
inc
add
add
mov
or
xchg
mov
movl
jge
inc
add
add
sbb
add
jmp
add
add
xchg
sbb
dec
dec
mov
daa
add
jb
decl
dec
add
gs
mov
and
incl
movsl
add
xchg
aaa
pop
sbb
add
ja
das
mov
rorb
aam
add
jle
add
mov
aaa
lcall
pop
add
add
fdivl
jns
addl
int3
push
add
fdivl
add
ds
jge
add
jle
add
jmp
add
add
lahf
push
add
jge
add
push
jle
pusha
add
cli
mov
mov
add
xor
cmpsb
add
add
mov
add
push
and
pushl
add
repz
add
add
lds
loopne
push
add
xor
jmp
add
add
lods
sub
pop
sub
add
mov
mov
je
jbe,pn
roll
cld
xchg
pop
or
add
je
ret
repnz
pop
lds
imul
add
add
pop
mov
aad
ret
xchg
ds
add
addb
add
inc
add
add
lods
ret
add
xor
pushl
clc
sub
add
movsl
add
add
jne
aam
mov
fstpl
popa
add
and
ljmp
data16
fcomi
sti
push
add
inc
add
and
pushl
loop
out
scas
fwait
cmp
or
jecxz
dec
movl
mov
add
ficomps
jmp
or
jmp
dec
cwtl
outsl
mov
and
push
iret
je
add
bswap
lahf
xor
jle
test
sbb
push
add
add
push
sub
inc
add
jno
pushl
jo
decl
inc
add
addl
lcall
sub
pop
daa
add
out
inc
add
ljmp
cmp
xchg
cmp
or
pop
pop
push
mov
add
push
pop
add
ljmp
add
int3
mov
or
data16
add
add
push
loop
pop
dec
fildl
add
jns
mov
push
add
xchg
div
adc
mov
add
enter
xchg
icebp
call
add
ljmp
add
sub
push
add
xlat
mov
jae
call
add
mov
or
in
in
cmc
jmp
call
and
pushl
inc
add
push
add
sbb
add
dec
inc
add
pop
cmp
and
dec
xlat
mov
pop
add
dec
or
add
mov
fisttpl
iret
push
add
dec
xchg
xor
ljmp
sub
mov
add
and
repnz
inc
add
les
push
add
mov
in
ret
add
xchg
sti
popl
cmp
inc
add
add
push
xor
call
repz
push
cli
cmp
xchg
lods
scas
cmpsl
add
add
jns
jnp
add
in
mov
add
push
add
js
add
adc
decl
lods
mov
fmulp
and
jmp
add
hlt
add
pushl
out
cmp
pushl
into
in
and
pushl
add
rol
add
stos
pushf
xchg
shrb
pushf
mov
add
or
add
add
stc
or
ljmp
rep
inc
add
in
sbb
add
clc
cmp
add
jge
add
pop
fsubl
add
loope
or
or
add
mov
js
ret
add
and
lcall
push
popf
les
jl
fwait
mov
push
add
dec
lret
pop
icebp
inc
add
aas
push
aad
add
add
jmp
add
inc
add
mov
add
test
add
ja
add
lods
add
decl
mov
sbb
xor
decl
ljmp
sbb
popf
inc
add
jae
ljmp
mov
clc
fisubs
mov
and
fdivrs
int
sbb
jle
inc
add
or
add
add
or
pushl
fistpll
mov
fsubrl
jg
mul
add
add
testl
incl
add
mov
in
aad
movsb
add
loop
cli
loop
jge
add
addl
add
add
add
pop
mov
addl
fisttpll
mov
sbb
add
fsubrp
insl
dec
mov
in
xor
call
adc
call
icebp
pop
fsubs
decl
add
jmp
movb
rorb
add
int3
push
add
incl
fldenv
icebp
out
sub
add
adc
decl
jne
xchg
enter
xchg
outsb
jbe
mov
inc
add
lds
add
mov
xchg
add
xlat
and
scas
mov
sbb
lds
mov
add
roll
repz
or
aam
or
add
js
mov
popa
add
add
jmp
jne
hlt
mov
dec
test
sbb
mov
mov
daa
add
add
mov
call
add
add
push
rol
add
mov
pop
cmp
or
sub
lret
push
add
cmp
add
add
decl
dec
add
decl
mov
jo
pushl
add
roll
cld
cmp
mov
mov
stc
cmpsb
add
add
add
add
add
add
aam
add
add
add
ljmp
hlt
roll
add
mov
decl
mov
out
es
add
enter
stos
into
cltd
mov
movl
add
jno
incl
add
insl
cmpsb
add
sub
aas
xor
jmp
in
dec
mov
add
jb
call
aaa
and
xchg
pusha
add
mov
ficoml
add
out
mov
mov
test
add
sub
add
add
add
pop
cmc
mov
stos
test
hlt
aad
add
movsb
add
add
add
add
add
adc
pushl
add
out
jns
popa
add
imul
movb
add
adc
call
incl
decb
or
incl
push
rolb
jmp
add
add
add
addb
add
fdivrl
cld
cmp
add
add
call
xchg
outsl
leave
jmp
movl
or
add
fisubs
mov
xor
out
fldenv
roll
pop
add
add
ljmp
jb
jmp
dec
aas
leave
mov
sub
bound
decl
bound
lcall
mov
mov
add
jmp
add
lods
test
add
fildll
mov
add
mov
test
add
mov
add
add
cmc
sub
pop
test
mov
add
pop
das
push
add
add
push
cltd
mov
inc
add
pop
out
xor
jecxz
test
addb
das
lds
dec
adc
pushl
mov
cmp
imul
hlt
fiaddl
out
in
and
fcmovnu
mov
jne
add
jge
add
cmp
je
add
add
add
fiaddl
push
mov
pop
mov
and
jmp
add
mov
mov
and
call
incl
or
sub
decl
repz
add
decl
sti
cmp
add
add
inc
add
and
cld
fdivrl
es
pop
scas
in
inc
add
jp
inc
add
add
jecxz
adc
call
and
decl
lds
cmp
add
int
sbb
jnp
mov
add
add
ret
add
add
add
pop
jecxz
jmp
insl
nop
sub
add
lret
sahf
lret
xlat
push
add
les
loope
push
lock
add
add
xor
js
int
or
add
add
jp
inc
add
mov
mov
sub
add
xor
inc
add
and
test
add
roll
xlat
clc
xchg
fwait
popf
push
jge
fisubs
mov
fisttpl
rorl
add
decl
adc
jmp
add
mov
add
jg
push
add
jns
xchg
cwtl
popa
add
sub
add
ret
add
add
pop
stc
push
add
out
pop
jnp
add
or
add
add
addl
fistpll
dec
jae
ljmp
addb
jle
pop
sbb
lret
jmp
add
xchg
add
pushl
add
sub
bound
inc
add
xchg
add
ljmp
fisubl
sbb
enter
and
jmp
add
push
add
mov
add
mov
add
inc
add
into
into
mov
add
arpl
pushl
aad
add
std
es
pop
mov
cs
add
mov
hlt
in
and
lcall
ljmp
cmp
pushl
pop
mov
add
pop
cmp
test
mov
add
add
xor
add
mov
testb
pushl
sbb
jl
ja
push
add
lods
jmp
jle
mov
sbb
add
jae
lcall
inc
add
lods
jle
add
aas
jae
pushl
add
xor
jmp
add
inc
add
movb
add
jns
xchg
aas
roll
add
add
mov
mov
add
jo
jmp
std
jae
pushl
push
add
xor
outsl
repnz
add
adc
pushl
add
sahf
jl
loop
ret
cmc
loopne
add
faddl
add
push
pextrw
add
add
adc
dec
and
cmc
aam
add
sahf
mul
add
inc
add
out
out
aas
mov
jnp
cmp
lcall
test
lcall
add
mov
inc
add
lods
xlat
ret
add
add
add
sti
out
cmp
jnp
jg
shr
pop
pop
push
pop
cmp
add
jo
mov
inc
add
push
add
repnz
push
jne
or
add
dec
cmp
stos
xor
scas
addl
inc
add
sbb
add
mov
in
push
mov
dec
lret
pop
fwait
and
jmp
pushl
mov
add
mov
mov
decl
stc
inc
add
decl
mov
xor
pushl
add
imul
add
je
add
push
int3
in
mov
add
cmc
out
cmc
dec
xchg
pop
lock
dec
or
lcall
add
ret
lret
bound
dec
cltd
scas
mov
add
add
jbe
push
dec
jge
cli
outsb
shlb
sti
addr16
add
lcall
insl
bound
cmp
add
bound
inc
add
jno
in
cltd
or
test
in
jb
pushl
dec
fnstenv
xchg
dec
sub
rolb
outsl
psrlw
push
inc
add
fstpl
add
pop
jbe
inc
add
dec
and
add
xor
jmp
add
rol
add
add
add
jmp
in
lret
cli
insb
add
incl
add
add
mov
sub
ljmp
addl
mov
mov
pushl
cmp
out
leave
jecxz
not
insl
cmc
bound
lcall
lahf
std
fdivrl
cmp
test
nop
into
xor
decl
dec
loopne
xchg
sbb
lcall
into
pop
rcl
or
sub
or
stos
xchg
and
cmp
test
out
pop
cmp
mov
popa
add
cmc
test
dec
add
or
leave
aaa
int
push
add
add
add
cltd
inc
add
pushl
xchg
xlat
pop
add
add
xchg
idivl
filds
jmp
add
fisttpl
shr
movsl
add
addl
pop
sbb
add
xchg
push
add
adc
in
bound
ljmp
pop
roll
jno
ljmp
add
add
pusha
add
enter
xchg
icebp
popf
fsubrl
decl
add
xor
decl
dec
add
js
xor
sti
testb
add
dec
lods
cmp
or
fistpll
addb
int3
dec
pop
roll
sub
add
decl
add
ljmp
push
add
and
incl
mov
add
adc
ljmp
arpl
cmp
pushl
loop
mov
cs
fiadds
add
add
inc
add
clc
mov
popf
sbb
incl
out
fimuls
fldl
or
ljmp
inc
add
or
xor
jmp
add
add
into
cmp
mov
add
jnp
cmc
jp
jge
rolb
je
sahf
sarl
inc
add
std
into
lock
mov
add
out
fnstsw
out
jg
cmpsl
add
ja
mov
mov
movl
add
add
or
mov
mov
add
add
mov
xchg
sti
add
jl
shll
inc
add
inc
add
sbb
out
sbb
add
movsl
add
sti
jbe
sub
clc
push
add
jo
incl
add
xor
mov
add
sahf
shlb
pushl
add
add
pushl
xor
jmp
add
or
add
fidivrs
cmpsb
add
cld
testb
and
pop
loopne
movb
add
fsubp
add
sbb
push
add
insb
adc
push
xor
pop
addb
jp
mov
add
jae
mov
cwtl
fst
push
cli
push
lods
push
sbb
pusha
add
addb
add
insb
push
add
mov
inc
add
add
jmp
sbb
addb
cmp
add
ret
add
lods
xor
lcall
loope
push
add
flds
add
addb
add
incl
dec
and
ljmp
loop
cmp
jmp
add
push
add
mov
add
sub
add
add
mov
js
push
add
sbb
test
lahf
jns
add
mov
hlt
mov
stos
or
out
mov
or
sub
dec
roll
jge
aaa
fstpt
add
xchg
lods
fmuls
add
call
lds
xchg
xchg
fmulp
dec
push
add
dec
add
pushl
fwait
clc
stos
push
sbb
push
adc
ljmp
dec
dec
add
add
ret
add
je
mov
daa
add
popf
hlt
jo
lcall
cmpsb
add
iret
mov
add
mov
push
mov
add
sub
sub
add
xchg
pop
mov
add
aad
scas
push
add
mov
add
stc
les
mov
lods
mov
jnp
imul
push
stos
les
dec
push
add
and
pushl
in
hlt
movl
testb
push
add
pop
add
add
bound
call
mov
mov
push
insl
cmp
add
repnz
xor
incl
add
cs
repnz
add
or
lock
mov
add
add
mov
lock
ljmp
dec
push
add
sbb
add
or
add
xor
ljmp
sahf
mov
stos
in
xor
mov
add
js
add
incl
xlat
pusha
add
cmp
add
cwtl
cltd
or
xchg
ja
adc
lcall
jmp
add
aaa
dec
mov
pop
pushf
pop
xchg
int
ss
jnp
sub
je
add
add
push
pop
lock
pushf
shrb
dec
in
inc
add
mov
xor
incl
mov
imul
popf
xor
decl
mov
das
inc
add
mov
add
add
pop
dec
loopne
and
decl
mov
pushl
add
sbb
jb
jmp
add
ljmp
add
add
mov
inc
add
rolb
dec
dec
popf
and
jmp
add
add
outsb
fisubl
movsb
add
je
add
sub
jmp
add
ljmp
cmpsb
add
popa
add
or
cmc
bound
incl
add
push
mov
inc
add
inc
add
mov
aas
cmc
sbb
pushl
add
and
jmp
lret
movb
cmpsb
add
aad
jg
mov
adc
ljmp
add
xchg
add
mov
add
pushl
test
xchg
and
incl
push
in
jp
outsb
outsb
inc
add
lret
pop
pop
icebp
dec
lock
pop
pop
in
jnp
add
add
add
incl
add
sub
add
mov
pop
ds
addb
mov
jge
add
into
stc
cld
stos
nop
xlat
adc
jmp
ss
arpl
jmp
incl
mov
pop
shlb
adc
add
adc
add
add
ljmp
lcall
sbb
sub
xchg
loop
push
popf
adc
add
incl
fistpll
cmp
add
add
push
add
fldenv
lret
lcall
mov
adc
decl
add
sub
dec
push
add
lea
pop
push
mov
add
pusha
add
xor
jno
inc
add
lcall
in
test
jle
mov
mov
bswap
jne
add
jne
add
and
xchg
pushf
mov
pop
pop
pop
adc
ljmp
add
sbb
add
mov
add
push
push
and
inc
add
add
js
add
sub
and
nop
sub
add
mov
cmp
jae,pn
call
hlt
mov
addb
cmp
clc
xchg
mov
testl
movsb
add
mov
add
jg
add
sub
xor
pushl
adc
call
decl
sub
loop
push
add
call
or
add
mov
maskmovq
mull
inc
add
jg
sub
out
jo
ljmp
das
mov
cwtl
adc
jmp
add
stos
clc
sbb
shll
ljmp
mov
inc
add
out
jp
add
add
data16
add
add
jmp
add
add
jmp
add
push
add
jo
jmp
in
fcmovne
addb
movl
inc
add
add
incl
jmp
aad
dec
pop
das
into
sbb
add
daa
add
xchg
pop
pop
call
add
mov
push
dec
and
call
add
popa
add
imul
add
cmp
mov
add
movsl
add
add
ljmp
loopne
xor
jmp
incl
add
add
jmp
add
fstpl
mov
push
addb
test
faddl
pushl
call
mov
in
xchg
enter
jmp
cmp
add
out
add
add
xlat
ds
add
jmp
inc
add
incl
ljmp
xchg
jge
shrl
add
xor
decl
jl
out
scas
push
lcall
std
cmp
add
and
lcall
insl
fcompl
xchg
les
cld
rolb
add
mov
xor
dec
xchg
add
incl
add
mov
adc
ljmp
sahf
frstor
mov
call
imul
mov
loope
pop
or
add
push
dec
std
push
add
iret
movb
test
or
add
mov
add
adc
add
xchg
popa
add
aas
cltd
test
aaa
enter
add
pop
lahf
movsb
add
pop
das
inc
add
pusha
add
mov
add
addl
pushf
add
lcall
mov
add
add
push
add
in
popa
add
xchg
sub
pop
icebp
or
add
push
add
repz
jge
movb
sub
add
jl
sbb
inc
add
mov
mov
pop
add
dec
push
aas
add
dec
sub
lcall
or
incl
stc
fnstcw
xor
jmp
xchg
or
add
inc
add
decl
icebp
roll
scas
sub
add
dec
xlat
xchg
inc
add
xchg
fistl
ljmp
ja
fwait
pusha
add
imul
inc
add
jno
ljmp
adc
bound
call
icebp
mov
jns
add
std
in
jle
add
call
ljmp
xchg
and
mov
add
out
insl
mov
daa
add
add
stos
movl
or
add
mov
add
add
lods
mov
adc
cwtl
mov
and
lcall
pop
lea
add
pop
lods
or
add
sub
mov
cmp
movsb
add
cld
inc
add
mov
ja
cmp
add
fstpt
and
ljmp
add
call
addl
add
jecxz
sub
add
add
push
mov
add
add
jbe
xlat
jnp
add
pop
les
xchg
xchg
or
xchg
pop
addl
dec
call
lods
and
xor
lcall
ficoml
repz
incl
dec
jmp
cs
out
add
ljmp
iret
fmuls
popl
movsl
add
add
xchg
mov
mov
mov
push
pushf
fimull
add
add
jno
incl
add
jle
push
das
movb
adc
call
xchg
icebp
mov
mov
push
adc
sbb
sub
add
dec
or
stos
adc
ljmp
dec
xchg
enter
add
fcmovne
adc
ljmp
addb
add
test
mov
add
fidivrs
add
addl
pop
enter
lock
arpl
lcall
lahf
jno
mov
repnz
loop
out
test
ret
mov
pop
add
jmp
add
incl
nop
jno
lcall
push
add
add
jmp
add
addr16
into
sahf
or
add
dec
mov
pop
inc
add
or
xor
jmp
addl
pop
sahf
sub
add
dec
fmull
jp
in
out
xor
into
mov
lods
lods
jp
jb
pushl
mov
or
pop
add
or
dec
add
push
add
loope
push
pusha
add
or
add
xor
add
jns
add
les
bound
decl
jnp
addb
add
xchg
fiadds
add
xchg
nop
add
lcall
inc
add
jo
jmp
add
int
je
add
mov
out
mov
add
sbb
lds
add
cmp
sub
mov
add
jb
call
pop
lret
out
fsubr
cmc
fldt
cld
fsincos
lcall
mov
ds
add
ljmp
add
add
cli
mov
lcall
and
decl
inc
add
call
popf
scas
jnp
add
add
cmpsb
add
and
pushl
ljmp
add
add
dec
cld
loope
dec
sub
xor
pushl
push
stos
inc
add
icebp
dec
movsb
add
push
add
je
addb
fmull
out
push
add
out
cmp
cmp
add
mov
xlat
and
lcall
out
movb
adc
incl
add
mov
sub
add
das
movl
add
xchg
into
dec
bound
incl
fistpll
add
xchg
mov
xor
call
push
add
in
push
popf
sbb
dec
add
add
rolb
cmp
add
lcall
mov
and
stc
cmp
jo
ljmp
add
inc
add
mov
ffree
add
mov
add
mov
lcall
jmp
decl
add
add
lcall
sti
int
addb
mov
jnp
in
adc
add
add
add
aad
loop
test
loopne
out
insl
mov
sbb
or
add
push
add
cmp
dec
jg
jecxz
stos
es
mov
stos
sbb
addb
push
cmp
push
dec
inc
add
or
mov
dec
pop
push
popf
je
mov
ds
dec
imul
xchg
inc
add
in
mov
add
and
jmp
prefetch
or
iret
dec
mov
cli
xchg
add
cmp
mov
xchg
jae
jnp
add
fstps
scas
adc
ljmp
nop
jb
decl
mov
inc
add
loope
imul
jmp
addl
incl
add
leave
jb
lcall
and
push
pop
mov
add
outsb
fidivrl
sub
sub
add
cmp
das
sub
add
add
add
sub
aaa
mov
stc
ret
aaa
xor
ljmp
pop
dec
jns
lahf
ficoml
jp
add
dec
addl
add
push
mov
stos
adc
mov
jne
in
les
cmp
imulb
lcall
and
movsl
add
add
add
js,pt
add
shlb
add
stos
repnz
add
mov
add
test
scas
in
mov
decl
sub
or
leave
mov
add
add
add
es
xchg
push
and
mov
inc
add
add
add
mov
add
ljmp
cmp
cmp
jmp
lcall
je
add
lcall
testl
xchg
add
call
cmpsl
add
jle
xor
call
add
bound
pushl
add
jns
je
test
addl
sub
cwtl
jecxz
dec
adc
incl
movsl
add
add
inc
add
mov
inc
add
stc
xor
dec
jb
std
out
inc
add
cmp
fiaddl
add
cmc
fsubrp
mov
add
pop
add
cs
mov
add
mov
add
push
add
add
call
add
cmp
shrb
add
or
add
sub
jmp
jno
ljmp
nop
and
clc
mov
inc
add
xor
add
jae
ljmp
lcall
int
add
call
add
cmp
adc
incl
add
xor
lcall
pop
lods
jg
and
lcall
mov
test
ljmp
push
daa
add
sbb
add
add
leave
or
iret
cs
pop
xor
cld
add
sbb
add
inc
add
loop
out
test
or
and
ljmp
fists
fstpl
add
pop
test
add
sub
and
xchg
ds
lds
loopne,pt
mov
cmp
sub
inc
add
add
push
adc
mov
xchg
movb
add
jmp
pop
jnp
add
xchg
or
movsb
add
lea
add
xor
call
add
repz
cmp
add
pop
enter
incl
add
mov
mov
popa
add
into
adc
sub
movl
add
ret
lcall
mov
aas
addb
add
cs
insb
mov
cwtl
jle
enter
push
xchg
movl
add
std
fnstsw
dec
pop
cmpsb
add
dec
mov
mov
add
and
jbe
add
add
imul
pop
add
pop
add
inc
add
mov
or
add
or
add
in
data16
int
nop
ds
add
dec
out
and
decl
mov
cltd
in
cld
sbb
cli
push
xchg
xchg
test
pusha
add
loopne
enter
repz
popa
add
mov
add
push
add
add
inc
add
test
pop
or
add
add
int3
leave
cmp
dec
fwait
lods
in
ja
add
add
int3
mov
movsb
add
add
push
test
add
sti
pushf
outsl
test
push
mov
cli
jno
decl
pop
stos
inc
add
push
push
ret
movl
incl
adc
out
addb
pushf
cmp
sub
jno
dec
std
inc
add
cmp
add
xchg
xlat
pusha
add
sbb
xchg
aam
enter
stos
in
ss
pop
add
add
mov
cmp
push
or
bound
in
jmp
add
jmp
cli
adc
incl
lcall
add
pop
add
lds
cmc
mov
fmulp
addb
dec
jbe
ljmp
adc
mov
xchg
add
fcompl
or
in
and
pushl
jns
addb
sahf
jp
push
sub
test
add
ljmp
cmp
div
mov
dec
push
add
xchg
out
jo
decl
xrelease
add
call
pushl
add
mov
add
popa
add
fs
inc
add
add
xchg
cmc
adc
jmp
push
out
fistpll
jp
add
or
push
pop
out
mov
add
jmp
daa
add
jno
pushl
aas
cmp
popa
add
movl
mov
lcall
call
ljmp
movb
mov
addr16
jmp
pushf
mov
add
mov
push
add
xlat
pushf
aad
decb
imul
scas
in
adc
add
call
shll
add
lods
cld
sub
test
add
divl
bound
cmp
dec
lods
addl
xchg
icebp
fdivr
rclb
ret
sub
add
add
mov
in
adc
ljmp
ret
add
mov
xor
jl
nop
movsb
add
ja
nop
loop
test
mov
loope
or
loop
je
add
testb
xor
decl
adc
decl
pop
mov
add
mov
fildl
add
and
add
imul
inc
add
jg
add
aam
add
mov
add
adc
lcall
dec
cld
xchg
xor
adc
add
and
push
inc
add
add
mov
and
decl
add
jp
push
add
mov
ljmp
add
add
add
arpl
jmp
cltd
and
std
lods
nop
cmp
add
mov
idivl
and
cld
mov
add
pop
xchg
lock
pop
mov
push
lds
inc
add
add
add
add
mov
cmp
add
and
jl
inc
add
sub
jmp
mov
outsb
leave
fninit
add
jmp
add
ret
cmpsb
add
mov
clc
xchg
fstpl
sbb
add
sub
fucomi
inc
add
lea
in
xor
adc
ss
add
add
push
aam
jno
mov
fistpl
jmp
xor
add
push
add
insb
add
xor
call
popa
add
add
add
dec
push
add
ror
sub
xchg
insl
popa
add
pop
add
rolb
add
insb
adc
jge
add
pop
push
add
pop
rclb
in
lock
nop
and
ljmp
shrb
in
repnz
test
sub
std
mov
outsl
and
call
add
xor
sub
or
add
neg
enter
add
mov
adc
pushl
add
clc
out
xchg
mov
call
add
add
test
dec
bound
decl
movsb
add
jg
add
add
fistl
jns
aaa
jne
std
xor
cmp
fidivs
xor
lcall
dec
testb
pushl
add
ljmp
and
dec
data16
mov
add
or
or
jb
cmp
xchg
fldt
decl
pop
cmp
movlps
incl
and
call
in
cwtl
lea
add
stos
fdivrl
xor
add
fnstenv
incl
mov
add
add
inc
add
mov
add
movb
pop
push
add
jmp
dec
adc
xor
cmp
lods
mov
inc
add
roll
cli
lea
rclb
mov
jno
lcall
movb
loop
or
inc
add
jne
test
pop
pusha
add
in
addb
xchg
push
add
sub
sub
add
xor
ljmp
call
mov
add
aad
add
incl
sbb
add
test
xor
in
aaa
inc
add
wbinvd
aad
add
lds
movb
add
dec
fsubr
aaa
outsl
addb
add
fwait
fwait
imul
fldl
add
adc
incl
and
fisttpl
loopne
cs
add
fucomp
sub
add
repz
shlb
mov
push
add
ja
add
lock
mov
add
lcall
sbb
add
add
call
cmpsb
add
add
incl
inc
add
xchg
push
add
inc
add
mov
dec
rol
add
add
aad
push
loope
lds
cwtl
lahf
add
call
add
insl
cmp
jmp
xchg
bound
jmp
fiadds
ds
lret
mov
push
add
add
test
add
mov
jg
add
repnz
and
ljmp
xlat
dec
push
add
add
mov
add
call
adc
lcall
in
mov
add
pop
add
lea
add
in
lods
inc
add
ljmp
add
ds
nop
pop
mov
add
jmp
and
ljmp
push
out
loope
or
call
add
aad
add
pop
inc
add
xchg
mov
clc
adc
hlt
jb
incl
and
call
jo
decl
add
lcall
cmp
cli
in
lock
jne
cltd
roll
enter
mov
add
inc
add
insb
loopne
ljmp
addl
push
add
cmp
sub
add
add
mov
outsb
sti
jecxz
mov
mov
xchg
test
rep
paddsw
lret
lods
mov
add
jl
daa
add
stos
dec
in
inc
add
jg
add
add
mov
lds
mov
add
pushl
mov
dec
into
cmp
lret
jns
fcmovb
add
incl
add
lret
dec
je
mov
dec
or
sbb
add
mov
sub
add
lcall
add
dec
mov
or
std
jge
cli
mov
addl
sub
jnp
add
mov
lcall
addb
xlat
icebp
and
fwait
mov
pusha
add
shl
push
add
jl
outsl
rol
add
add
call
inc
add
clc
mov
jle
data16
add
pushl
add
das
fistpll
adc
repnz
add
adc
out
scas
mov
jg
xor
push
add
loope
or
or
addl
push
add
xlat
or
pushl
add
aaa
adc
ljmp
movsb
add
outsb
push
jmp
sub
aas
dec
loop
mov
mov
lcall
add
jmp
out
out
push
pop
int
add
cmp
add
call
inc
add
mov
cld
or
aam
add
or
jmp
mov
add
push
add
aam
outsl
daa
add
xchg
repz
add
add
cld
mov
scas
lods
inc
add
cmpsl
add
clc
shll
pop
ds
sti
push
pop
mov
add
sub
sbb
mov
mov
js
add
sub
dec
in
popa
add
repnz
jmp
ja,pn
xchg
lret
mov
add
jmp
add
jno
cmp
add
add
int3
cld
call
xchg
cs
add
push
data16
decl
mov
add
popa
add
push
cmc
jno
call
cmp
add
adc
dec
into
cli
xchg
pusha
add
ficoml
jmp
add
lods
ret
add
add
std
xor
cld
jnp
add
add
xlat
xlat
loop
add
mov
call
add
rolb
lcall
mov
add
lcall
jl
add
arpl
call
add
fidivs
incl
add
add
add
xchg
lret
dec
aad
add
xor
jmp
xchg
xchg
cmp
arpl
lcall
inc
add
mov
dec
ret
sti
fistps
add
popa
add
jnp
add
mov
les
xchg
int
mov
add
add
add
push
add
mov
or
int
lods
xor
ficomps
stos
adc
add
pop
pop
popa
add
out
inc
add
shl
add
jmp
in
or
add
mov
add
cmp
add
test
inc
add
push
add
xor
mov
gs
insb
xchg
inc
add
add
insl
test
inc
add
cli
data16
aad
out
and
lcall
lcall
aad
aaa
sbb
mov
add
add
mov
lcall
addl
add
sbb
dec
movb
flds
scas
mov
add
jl
add
leave
fistl
add
mov
data16
add
jmp
inc
add
pop
pop
mov
sbb
add
lods
lds
xlat
shlb
push
add
ljmp
sbb
xlat
xchg
fsts
dec
divl
add
mov
push
hlt
iret
lods
js
add
add
push
rolb
jmp
shlb
add
xor
add
sub
sub
das
sub
mov
add
mov
add
sbb
add
jl
sub
adc
decl
add
sbb
mov
insl
cmp
fisttpl
add
push
lahf
add
incl
add
bound
jge
pop
lods
loopne
xor
lcall
add
mov
jb
cmp
add
jmp
add
daa
add
sub
or
xchg
lea
add
dec
stos
mov
clc
cmp
pop
add
add
or
stos
pop
sbb
ja
add
push
xchg
sbb
xor
ljmp
repnz
push
and
fisubrs
outsl
or
pop
test
jge
ficomps
icebp
cld
xchg
test
lods
ret
add
shl
ss
scas
lret
xchg
int
lahf
mulb
incl
add
je
add
push
add
into
sbb
add
stc
jl
inc
add
or
xlat
mov
popf
daa
add
inc
add
test
or
cmp
inc
add
pusha
add
ljmp
jns
add
dec
int3
mov
add
push
add
getsec
adc
frstor
lcall
add
pop
jnp
and
hlt
mov
pop
fsubrl
add
add
out
sbb
add
pusha
add
mov
stc
ret
add
add
add
add
loope
xchg
or
xchg
pop
lcall
sub
xchg
test
lods
ret
add
or
es
xor
stos
cmp
test
dec
shrl
cmc
mov
add
add
dec
psubusb
and
loope
cmp
sahf
je
add
lcall
add
add
add
aad
dec
aaa
loope
int
add
aaa
bound
in
imul
jl
lea
add
sti
lret
ljmp
enter
xchg
ljmp
fsubl
add
outsl
fsts
ret
add
aad
jnp
add
add
ljmp
data16
jb
decl
add
mov
pop
lds
dec
jbe
push
add
daa
add
add
popa
add
mov
add
test
add
add
cltd
or
add
pushf
inc
add
jecxz
adc
pushl
call
incl
add
arpl
decl
out
or
decl
sub
add
neg
xchg
cmp
push
add
jnp
data16
push
add
popa
add
sahf
jmp
add
scas
aam
add
fistpl
add
xor
inc
add
mov
add
add
movsl
add
inc
add
xlat
movsb
add
add
test
mov
sahf
pop
add
mov
sti
mov
mov
add
sub
add
decl
sbb
add
cmp
jmp
add
addb
add
and
jmp
add
decl
mov
mov
movsb
add
ficoml
push
mov
adc
lcall
ljmp
pop
push
movsl
add
add
enter
mov
hlt
mov
mov
mov
lock
add
push
lds
jb
call
sub
outsl
xchg
ret
add
pop
incb
add
mov
decl
or
mov
or
jns
add
push
cmp
test
mov
cmpsb
add
pop
pop
packssdw
cmpsl
add
stos
cmp
jno
jmp
add
or
dec
cmp
add
idiv
push
add
xchg
dec
adc
pop
stos
cli
scas
out
rclb
fsub
add
add
dec
mov
add
fs
xchg
sub
out
inc
add
add
pop
add
clc
push
sbb
or
or
mov
add
lock
incl
or
pop
inc
add
xchg
roll
repnz
add
jbe
push
xchg
test
dec
mov
test
and
jns
sub
sbb
add
pop
mov
pop
lods
out
push
add
mov
sbb
add
std
in
je
adc
jmp
add
pop
add
cli
xchg
popf
pop
mov
cmc
shlb
fldt
fwait
or
add
dec
sbb
add
and
incl
push
movsb
add
loope
inc
add
fistpl
mov
dec
fldt
add
add
add
outsl
icebp
add
add
insl
outsl
stc
sub
add
add
repz
stc
mov
insl
nop
push
leave
out
dec
pop
in
add
push
sbb
ret
add
add
add
mov
std
sbb
add
sub
add
mov
sbb
push
cmp
mov
add
icebp
and
jl
add
push
add
cld
mov
js,pn
add
imull
aam
or
loope
push
add
sub
decl
dec
push
add
xchg
push
mov
insb
jl
clc
mov
add
movl
stc
adc
lcall
dec
imull
enter
adc
add
add
aas
adc
lcall
push
xchg
dec
addl
and
jnp
add
out
data16
sub
cmp
add
add
icebp
mov
xor
mov
add
add
xchg
add
add
adc
inc
add
fsubp
add
pop
push
or
add
dec
adc
fcmove
push
add
inc
add
mov
shlb
cmp
add
xchg
addl
push
add
add
mov
add
std
adc
incl
add
add
inc
add
cld
mov
stc
lahf
push
add
or
inc
add
in
js
add
sub
mov
je
add
push
pop
rolb
adc
add
jecxz
push
aam
mov
sahf
pop
outsl
call
adc
call
add
inc
add
int
mov
ds
or
mov
mov
mov
xchg
rorb
add
test
daa
add
mov
bound
lcall
in
outsl
aaa
loop
jg
in
pop
dec
sub
xchg
adc
incl
add
dec
and
out
outsl
mov
aas
pop
fcoml
jp
hlt
imul
sbb
call
push
mov
icebp
dec
push
test
imul
add
add
add
fistpll
xchg
dec
cli
sbb
test
add
test
or
add
pop
add
add
add
lret
jmp
ljmp
aam
add
jle
add
shrb
cmp
add
push
add
cli
cmp
jae
inc
add
js
adc
aad
add
ret
add
out
push
mov
int3
leave
add
add
loop
mov
add
add
ss
add
jno
cmp
jmp
mov
mov
dec
cmp
add
jbe
loop
hlt
push
add
sbb
fisubrl
xchg
jle
pop
out
jns
out
push
inc
add
sbb
add
shlb
mov
push
add
dec
inc
add
sti
lods
scas
cwtl
ret
add
out
adc
incl
pop
inc
add
add
nop
push
std
repnz
ljmp
out
test
add
scas
and
jmp
jmp
insb
int3
xor
decl
hlt
pusha
add
inc
add
add
sub
aas
addb
add
pusha
add
js
hlt
ljmp
imul
addb
jo
jmp
add
test
sub
push
add
loop
test
bndstx
outsl
mov
scas
jmp
add
jmp
add
and
fnstsw
add
push
add
or
jg
add
and
add
data16
incl
lcall
mov
cld
pop
shl
fidivs
decl
pop
mov
add
stos
cmp
and
add
adc
pushl
mov
roll
pop
sbb
add
mov
adc
jle
add
insb
dec
and
push
or
insb
lret
sbb
sub
mov
ret
add
stos
lods
inc
add
xchg
push
add
jb
call
scas
pop
dec
out
popa
add
sbb
pop
jns
add
and
lcall
and
out
cmp
add
decl
xchg
jge
mov
mov
jne
pop
push
add
mov
add
add
inc
add
test
cld
sub
clc
test
ret
add
add
add
and
add
sbb
add
aam
movsb
add
outsl
or
xor
ljmp
out
mov
and
filds
add
xchg
adc
add
or
bound
push
arpl
ljmp
add
stos
pusha
add
imul
fsubr
pushf
sub
xor
dec
jno
call
gs
stos
imul
xchg
mov
fwait
imulb
add
push
enter
out
add
jmp
add
and
add
call
inc
add
and
popa
add
addb
mov
incl
cmp
dec
in
testb
add
add
daa
add
add
decl
loope
mov
cmp
cmp
pop
cld
xchg
sub
add
sub
add
decl
je
dec
aad
pop
iret
loope
lods
push
mov
cmp
out
adc
inc
add
add
or
inc
add
add
imul
add
psrlq
push
out
xchg
pop
mov
lcall
loope
inc
add
xchg
dec
mov
dec
xlat
jb
cmp
add
lcall
jmp
insl
add
cli
cwtl
push
aaa
clc
push
clc
aaa
sbb
imul
add
jmp
add
cmp
scas
mov
add
xor
call
or
add
loope
lea
add
xchg
xlat
repz
add
and
movsb
add
inc
add
mov
daa
add
add
lcall
lcall
push
add
push
test
std
and
push
add
fidivs
insb
testb
add
decl
jbe
add
add
and
jle
add
ljmp
int
jg
idiv
add
ljmp
add
pop
push
stc
pop
movl
cmp
add
mov
add
add
mov
mov
push
aad
sahf
adc
lcall
cmpsl
add
xchg
inc
add
shlb
out
enter
add
cwtl
stos
sub
cmp
test
aas
mov
add
add
lock
jb
decl
xchg
and
jns
add
push
enter
add
mov
out
outsb
repnz
add
lret
jl
mov
pushl
add
cmp
lds
push
add
popa
add
xchg
push
add
dec
dec
inc
add
jmp
adc
addl
pusha
add
mov
int3
popl
add
roll
add
add
mov
lock
out
lods
push
scas
pop
mov
add
jle
fisttpl
lcall
xchg
or
loopne
jbe
sbb
pushl
lcall
jle
add
or
test
or
mov
in
cmp
movb
add
add
sub
add
incl
jae
call
outsb
add
ffree
add
add
inc
add
add
add
add
call
icebp
notl
insb
sub
add
mov
scas
add
stc
mov
cmpsb
add
or
into
call
in
inc
add
add
leave
adc
jmp
add
adc
inc
add
or
jle
repnz
xchg
inc
add
lods
rcrl
sti
pop
paddq
loope
das
or
add
add
or
jne
and
ljmp
inc
add
add
add
mov
cmp
jne
inc
add
movsl
add
fsubs
lds
and
push
adc
add
jge
add
lods
aam
sti
push
dec
jge
ljmp
ret
add
sub
pop
add
add
loop
jnp
negb
add
or
adc
inc
add
mov
out
pusha
add
pop
cmp
inc
add
xchg
sub
or
out
rcrb
cmp
mov
xor
test
xlat
iret
mov
movl
push
add
out
mov
jecxz
mov
add
pop
add
mov
pop
addl
adc
add
pop
ljmp
add
or
dec
call
stc
pop
add
jmp
add
xor
add
in
pop
add
add
incl
add
cld
xchg
cmp
jmp
xchg
xor
call
pushl
test
mov
mov
sbb
add
dec
aas
xor
decl
sub
add
inc
add
popf
ret
aas
or
add
cmp
jp
mov
mov
aam
inc
add
jle
add
xlat
nop
pop
jae
decl
xchg
sbb
add
ret
add
add
dec
cmc
dec
pop
mov
xchg
pop
add
divl
pushl
add
push
imul
pushl
add
cmp
dec
push
std
cli
jge
push
sbb
lahf
mov
cmc
sub
add
push
ret
movl
add
add
and
call
testl
insl
add
incl
add
add
xchg
add
and
add
add
add
cmp
clc
addb
add
add
add
movb
add
jge
or
jae
decl
xor
call
inc
add
jmp
pushf
mov
sti
xchg
sar
add
inc
add
sbb
cld
push
jae
decl
add
adc
jmp
add
sub
xor
mov
or
arpl
jmp
pushl
cmp
cs
pop
movl
std
mov
add
push
mov
adc
incl
outsl
jp
add
mov
xchg
mov
jns
add
ljmp
push
ficoms
mull
decl
mov
pop
push
add
outsb
jnp
add
add
inc
add
cmpsl
add
add
add
add
pop
add
addl
in
push
add
add
in
xor
pushl
decl
mov
add
dec
js
xadd
test
add
mov
call
addb
mov
add
mov
add
add
movl
add
sub
dec
lods
fiaddl
add
jmp
push
add
sub
ljmp
inc
add
insb
sub
mov
cmp
sub
jmp
adc
dec
inc
add
add
push
ret
add
add
push
add
mov
data16
movsb
add
push
add
out
lock
incl
and
cmp
pusha
add
lahf
sub
add
push
enter
jmp
add
add
fsubl
add
enter
sub
addr16
add
loopne
out
xchg
inc
add
xor
push
mov
pushl
movsl
add
add
adc
jmp
add
lcall
pop
sarl
add
sub
add
add
ret
add
pop
add
adc
pushl
add
jmp
add
pop
jb
jmp
add
xor
decl
jmp
add
mov
add
lret
mov
cvtpi2ps
add
arpl
mov
mov
add
add
add
xor
pushl
add
inc
add
lds
dec
mov
dec
in
mov
dec
out
leave
rclb
dec
pop
or
dec
and
add
xchg
or
add
addb
sbb
mov
mov
pop
std
push
add
stos
push
mov
adc
call
flds
jmp
ljmp
push
add
mull
je
add
ja
pop
adc
jg
add
jnp
xchg
hlt
mov
fists
add
sbb
addl
push
push
xlat
mov
add
roll
add
loopne
add
mov
adc
decl
add
add
mov
mov
leave
loopne
or
add
xchg
jle
test
fwait
aam
cli
test
add
push
sbb
aad
or
push
xchg
stc
mov
or
and
in
adc
ljmp
lcall
and
lcall
add
mov
add
xchg
lea
add
mov
pop
pop
cmp
hlt
jmp
out
cltd
adc
pushl
add
popa
add
addl
and
call
add
dec
xchg
mov
add
sub
ret
add
je
daa
add
leave
addl
mov
mov
stos
mov
mov
daa
add
add
je
enter
cmp
int3
addb
xchg
xor
push
stos
xchg
dec
or
add
incl
jmp
cmpsl
add
add
adc
incl
add
pushf
fldl
call
push
adc
decl
add
mov
add
jno
call
inc
add
cld
in
mov
push
nop
pop
sub
add
inc
add
push
ljmp
or
add
sbb
addb
lods
adc
ljmp
xlat
inc
add
lock
mov
add
addb
adc
add
and
cli
outsb
movsl
add
add
jno
pushl
jl
add
push
addb
movl
icebp
xor
dec
cmp
hlt
mov
movsb
add
cmovg
xor
call
add
lods
push
xor
call
dec
in
dec
push
ds
inc
add
sub
add
or
lods
movb
insl
cltd
pop
mov
xor
add
outsb
outsl
inc
add
jo
jmp
add
jle
add
cmp
add
jbe
xor
incl
aas
and
data16
or
add
sbb
cmp
add
or
xchg
test
add
leave
pushf
mov
outsl
sub
add
mov
loop
cmpsl
add
jmp
add
mov
mov
in
cmpsl
add
add
inc
add
sub
and
pushl
add
dec
data16
insb
lock
add
cmp
arpl
incl
decl
stc
sti
push
add
xchg
fbld
mov
add
call
add
pushl
add
add
pushl
add
add
add
das
jbe
jl
or
add
cli
pop
xchg
sub
test
xchg
lock
add
add
scas
mov
push
add
ret
add
add
mov
jae
ds
xchg
xchg
inc
add
add
dec
fwait
movsb
add
repnz
aam
mov
or
add
add
add
xor
jg
iret
xchg
shll
lret
xchg
testl
addb
pop
push
shl
add
pop
mov
add
ja
mov
add
or
push
das
pop
jmp
out
jecxz
and
inc
add
in
mov
inc
add
outsb
add
fbld
pop
add
lock
div
out
dec
lret
add
add
test
loopne
fnstcw
mov
add
inc
add
add
add
frstpm(287
add
cli
arpl
jge
add
pushl
xchg
fprem1
cmp
xchg
mov
push
add
loopne
insb
add
call
add
shl
add
push
add
add
js
add
arpl
adc
ljmp
add
jnp
mov
stos
data16
push
add
loop
adc
in
addb
add
mov
pop
add
lds
arpl
jmp
mov
cmpsl
add
insl
add
call
add
mov
push
mov
sub
add
add
lcall
cmc
stc
sbb
das
shrl
les
flds
mov
sti
out
jns
add
out
cmp
add
sbb
shlb
xchg
inc
add
adc
ljmp
push
add
aam
push
lret
xor
ljmp
add
or
add
jmp
add
cs
loope
or
mov
les
ljmp
add
das
xchg
jbe
add
out
dec
inc
add
bnd
push
addb
mov
out
scas
add
call
scas
sbb
call
mov
pusha
add
adc
lcall
push
add
mov
stos
ret
add
push
lds
mov
or
addb
or
mov
add
add
incl
ret
sbb
rcr
in
push
add
sub
mov
call
mov
xor
mov
incl
dec
movsl
add
lds
xor
add
incl
sub
cmp
or
add
mov
fisubl
jmp
movl
lea
in
hlt
les
pop
daa
add
inc
add
jbe
add
add
roll
add
mov
add
add
adc
or
add
add
mov
decl
add
fistpl
add
xchg
jae
call
add
cmp
add
es
add
add
push
push
pop
add
push
push
inc
add
push
and
cmp
fcoml
add
addl
mov
add
jns
lock
cltd
sub
cs
cmp
jnp
mov
outsb
or
or
jg
add
jno
decl
cmpsl
add
mov
xchg
mov
mov
add
add
or
jno
jmp
push
add
sahf
fistpl
add
fistps
test
xchg
xchg
xor
fucomp
mov
push
pop
add
aad
in
xchg
nop
cs
mov
iret
rcrb
add
and
stc
mov
addl
add
add
ds
xor
pushl
out
leave
jge
add
add
inc
add
stos
cltd
mov
dec
mov
add
pushl
jmp
push
ds
sti
or
int
add
hlt
movb
lret
rcr
out
add
inc
add
add
dec
roll
add
bound
ljmp
xchg
push
rolb
adc
lcall
aas
push
add
xchg
fdivl
decl
loope
jns
add
add
lcall
add
cmp
add
jmp
add
jmp
add
add
lahf
sbb
add
xor
lret
add
sbb
xor
jg
add
add
data16
xchg
loop
jae
fcoml
add
and
arpl
in
cmp
add
inc
add
out
xor
push
sbb
sbb
jge
into
in
repnz
add
addl
testl
mov
insl
xlat
arpl
call
xor
call
enter
bound
decl
loop
insb
mov
sub
add
mov
add
dec
testl
cmp
jmp
add
jmp
add
std
sub
loopne
mov
xor
push
add
repnz
add
add
and
jmp
add
fdivrl
mov
add
pop
test
add
add
lock
jg
loopne
movl
lcall
movb
in
outsl
fucomi
out
cmpsl
add
inc
add
and
lcall
or
xor
arpl
pushl
mov
incl
loop
mov
add
lcall
dec
int
add
stc
cmp
sub
add
add
sub
xor
dec
addb
test
repnz
add
stos
and
enter
aas
xor
pushl
inc
add
movsb
add
sbb
leave
ret
xchg
mov
add
add
decl
sub
push
stos
std
mov
popa
add
cs
add
jns
add
bound
lcall
add
je
cmp
mov
decl
add
adc
sbb
paddb
fdivrl
pop
aad
add
jno
lcall
pop
adc
call
sub
jecxz
in
sub
data16
fimull
adc
in
dec
pop
jno
jmp
xor
decl
push
sbb
fisubl
inc
add
pop
mov
divb
lcall
lcall
jmp
sti
jge
jge
push
push
in
nop
lcall
insl
iret
or
stc
out
xchg
jae
call
aas
testb
add
mov
add
add
and
iret
sbb
add
sub
cmc
cmp
add
addr16
add
add
push
jp
aad
add
dec
mov
std
inc
add
es
cltd
scas
in
imul
add
incl
adc
adc
mov
mov
cmp
add
decl
add
loop
das
pop
nop
addl
add
arpl
push
pop
cmp
dec
pop
addl
add
dec
popa
add
lret
imul
stos
inc
add
push
add
int
pop
sub
movsl
add
imul
mov
inc
add
loope
lret
jne
add
xchg
pop
into
inc
add
xor
call
ljmp
inc
add
adc
ds
add
push
add
dec
imul
add
call
xchg
add
enter
xchg
lds
fsts
jb
ljmp
sub
dec
cmp
mov
inc
add
adc
add
pop
addb
jle
lock
xor
mov
mov
mov
add
shll
clc
pop
cld
lahf
fs
add
mov
addb
add
cmp
jg
ficoml
pushf
cltd
cmp
scas
jbe
add
pusha
add
inc
add
and
sub
inc
add
in
dec
adc
pushl
pushl
inc
add
and
decl
jnp
stos
pop
xchg
cmc
add
jmp
add
lcall
add
push
lcall
add
mov
das
int
add
push
push
add
in
dec
inc
add
sbb
add
cmp
iret
dec
in
xor
clc
in
pop
addl
add
add
dec
add
call
add
fstps
add
call
lahf
push
add
or
add
add
cwtl
imul
mov
cltd
cltd
push
dec
sti
dec
and
decl
call
jmp
add
and
call
mov
addb
push
push
sbb
add
aaa
jg
fldt
add
cmp
add
lds
jbe
test
in
mov
add
movb
inc
add
or
lcall
add
add
cmc
cmpsl
add
jne
push
add
pop
lret
mov
xor
ljmp
popl
out
scas
ljmp
cld
data16
fwait
scas
dec
fcomps
int3
ret
add
inc
add
fsubl
es
add
js
jae
lcall
add
dec
int
add
xchg
jae
ljmp
add
aad
add
call
imul
fcmovnb
add
out
arpl
incl
insl
mov
lcall
add
cld
push
add
inc
add
ret
movl
add
or
sub
inc
add
push
or
add
jp
add
loope
imul
jmp
add
das
push
sub
add
repz
mov
push
add
in
pop
or
mov
mov
add
cmpsl
add
push
ja
xchg
stos
mov
add
xchg
mov
mov
adc
cmp
add
pusha
add
lret
mov
jle
mov
shlb
add
jp
dec
jb
decl
sbb
mov
add
aad
jl
in
mov
scas
mov
add
stc
inc
add
fld1
rolb
add
add
lcall
cwtl
mov
jle
sbb
mov
sti
addl
lahf
mov
inc
add
iret
aad
add
fs
add
add
pop
bound
sti
repz
cwtl
pop
cs
add
mov
lock
pop
cld
scas
cmp
jmp
add
add
in
pop
pop
fld
add
or
add
aam
add
in
pop
mov
xlat
outsl
mov
push
rolb
add
add
mov
add
mov
jmp
add
add
pop
mov
jmp
imul
add
in
push
add
add
scas
jnp
add
dec
stos
lds
int3
outsl
popf
cmp
into
imul
mov
add
mov
mov
pop
addl
add
rorb
add
icebp
xchg
mov
add
in
xor
decl
add
rcrl
call
add
xor
incl
decl
decl
lcall
add
add
add
jne
cmpsl
add
out
js
je
inc
add
dec
arpl
in
repnz
inc
add
ljmp
jl
clc
mul
add
add
add
iret
add
call
cmp
add
or
add
mov
add
call
add
add
lcall
add
add
add
xchg
cwtl
fwait
lcall
add
adc
jmp
add
push
add
ljmp
mov
add
or
call
inc
add
outsl
mov
popf
jno
incl
add
or
pop
rcrl
xchg
sub
add
push
add
mov
incl
mov
dec
movsb
add
jb
lcall
jge
pop
or
add
mov
add
add
cmp
add
in
mov
xchg
cmpsb
add
add
addb
pusha
add
out
lcall
xor
incl
add
cmp
inc
add
fisubs
cmp
dec
repz
push
into
js
add
adc
jecxz
cwtl
cmpsb
add
add
add
push
add
fnstcw
and
call
add
dec
ret
inc
add
jb
jmp
add
pop
pusha
add
cmc
jmp
addb
dec
lock
add
pop
std
aas
xchg
mov
and
decl
mov
mov
scas
add
decl
rolb
pop
jmp
pusha
add
or
cld
addb
or
jo
push
pop
int
sub
xchg
push
add
dec
in
test
and
in
hlt
inc
add
mov
add
add
jmp
lods
popa
add
inc
add
push
pop
lcall
add
pop
leave
imull
pop
lods
int
inc
add
xlat
loope
mov
add
sub
mov
add
xor
jmp
jo
inc
add
dec
stos
sbb
jne
and
faddl
add
incl
decl
cmp
icebp
inc
add
lods
add
jmp
add
test
testb
scas
stc
out
adc
call
xor
incl
add
outsb
add
roll
call
pushl
call
imul
add
mov
lds
sub
cwtl
lods
insb
push
add
add
add
inc
add
into
pusha
add
add
fildl
add
jb
ljmp
add
inc
add
add
out
push
in
out
out
arpl
lcall
add
add
shlb
jl
add
in
shll
add
mov
shll
add
outsl
xor
ljmp
lds
adc
addb
add
rolb
mov
ret
add
add
or
add
adc
ljmp
lock
add
incl
pushl
mov
ljmp
or
ljmp
mov
add
add
add
jg
rolb
add
call
pushl
add
cltd
test
pop
icebp
mov
incl
fwait
loopne
or
imul
add
sbb
add
cs
lret
xchg
jb
incl
add
dec
fidivrl
out
stos
jbe
jb
call
add
add
or
aaa
sbb
fsubr
mov
scas
movsl
add
xlat
push
addl
inc
add
mov
sub
add
mov
add
out
jae
call
add
cmp
push
add
pop
or
mov
sbb
dec
add
xor
fadds
sahf
dec
outsb
sbb
mov
and
dec
stc
fs
das
and
ljmp
fistpl
sub
mov
add
int
add
fstps
leave
cmp
add
add
add
jecxz
mov
cs
in
push
add
mov
add
add
jl
leave
adc
pushl
jmp
add
mov
aam
fcoms
pop
in
adc
inc
add
stc
mov
sub
add
lret
and
ljmp
xchg
push
add
mov
sbb
sbb
add
test
out
jmp
mov
call
mov
push
adc
js
add
rorb
pop
or
decl
cltd
cmp
push
sbb
addl
cmp
test
add
sarb
cmp
mov
add
cmp
add
sbb
add
add
outsl
gs
add
and
jmp
push
jge
stc
jp
jl
xor
jmp
add
xchg
or
add
add
pushf
data16
mov
add
inc
add
mov
call
bound
ljmp
ljmp
xchg
add
jae
clc
and
incl
add
lahf
xchg
dec
sub
push
imul
in
mov
add
decl
mov
mov
decl
add
fiaddl
fsubrl
loop
fwait
movsb
add
add
lods
lcall
test
shrl
sbb
roll
sub
add
pop
lds
call
add
movl
add
negb
adc
out
mov
add
add
mov
mov
jecxz
cwtl
pop
outsl
jb
lcall
data16
sbb
add
sub
add
xor
pushl
or
add
dec
das
arpl
decl
sbb
pop
je
jno
ljmp
pop
push
jae
inc
add
and
lock
call
stc
jp
add
loopne
loope
in
ret
add
add
test
inc
add
mov
cmpsl
add
add
pusha
add
ret
add
mov
add
jno
incl
es
add
add
push
cli
ds
push
mov
inc
add
mov
mov
aas
ficoml
scas
xchg
add
add
imull
repnz
sub
pushf
cltd
mov
mov
push
or
add
je
add
xchg
xchg
imul
add
cmp
call
shlb
jmp
call
insb
xor
jmp
add
sarl
lods
adc
add
and
sti
clc
sbb
cmp
out
mov
add
and
incl
add
ficoms
add
lods
clc
cmpsb
add
cmp
add
jnp
add
pusha
add
mov
inc
add
add
aad
add
pushf
adc
lcall
and
ljmp
mov
add
dec
add
jns
add
add
dec
jecxz
jp
jae
lcall
inc
add
xchg
testb
stc
inc
add
lcall
pop
xchg
push
add
mov
jmp
decl
xchg
xchg
push
jno
lcall
mov
xor
lcall
adc
mov
sbb
add
xor
call
mov
add
pop
sbb
xor
inc
add
add
js
add
jp
add
add
movl
add
fists
add
aam
cltd
js
add
add
push
add
loope
add
lcall
adc
cmpsl
add
ficompl
cltd
xchg
push
mov
cmp
add
pusha
add
or
push
fnstenv
roll
add
push
add
movsb
add
push
cltd
or
imul
pop
pop
movb
addb
add
inc
add
mov
pop
xchg
sub
mov
add
mov
add
add
jle
out
loope
out
or
inc
add
inc
add
push
fidivl
sbb
jmp
jmp
mov
add
sbb
add
add
or
fmuls
jp
add
cld
data16
add
in
enter
add
stc
and
ljmp
out
xchg
sbb
call
jg
jae
jmp
cmp
add
sbb
xchg
and
ljmp
jae
ljmp
add
add
out
lea
pop
xor
jmp
cmpsl
add
lcall
jecxz
push
add
add
add
inc
add
pusha
add
xchg
pop
mov
add
movsl
add
int
push
in
dec
movsb
add
aad
add
idiv
adc
ljmp
pop
arpl
incl
add
in
and
dec
dec
es
lret
cld
ss
fldt
cmp
movsb
add
or
add
add
xor
ljmp
insl
sahf
or
sahf
xchg
mov
clc
into
and
inc
add
popa
add
jmp
add
fsubrs
jmp
pop
mov
mov
stos
adc
add
mov
push
mov
dec
loopne
addb
add
out
sahf
sub
fldl
add
add
xor
lret
add
cmpsb
add
jecxz
inc
add
jb
cmp
add
sahf
imul
inc
add
or
jge
add
lahf
sbb
sub
add
add
inc
add
add
fadd
add
mov
add
sub
pop
add
add
dec
add
sub
dec
dec
dec
mov
push
lcall
add
ficoml
ficoml
test
mov
and
mov
aas
xchg
or
add
sti
and
call
int3
cli
sub
in
xchg
jne
out
sbb
add
adc
jmp
call
ss
dec
dec
das
cmp
inc
add
push
rcr
loope
pop
inc
add
inc
add
iret
testl
add
add
dec
insl
bound
incl
add
add
pop
sbb
jae
jmp
add
mov
add
sbb
adc
out
push
add
add
aam
xchg
rorl
stos
cmp
add
add
add
lret
ret
aam
jb
decl
jnp
jae
jg
lods
xor
pushl
addb
add
sbb
add
inc
add
mov
mov
push
inc
add
in
add
add
add
daa
add
sahf
xchg
inc
add
add
stos
in
jbe
add
jmp
add
sbb
push
add
dec
inc
add
lret
dec
inc
add
data16
leave
xchg
lods
sbb
dec
stc
aas
sub
cmp
das
sub
inc
add
je
add
addl
add
clc
jmp
ficomps
and
add
jmp
ss
mov
stos
inc
add
add
xor
ljmp
jg
add
or
xor
pushl
jmp
xchg
loopne
ret
add
push
add
rol
add
decl
inc
add
mov
jne
mov
fcoms
pushl
mov
movl
add
loopne
inc
add
and
call
shlb
sub
add
decl
add
xchg
mov
inc
add
fsubrp
xchg
and
pushl
add
push
jge
jo
incl
mov
cld
dec
cltd
and
call
add
add
pop
push
mov
js
rolb
mov
lahf
clc
cmpsl
add
imul
add
jmp
pusha
add
loop
test
test
push
add
mov
addb
cmp
inc
add
arpl
push
rolb
xchg
push
add
imul
add
add
jae
call
mov
dec
push
add
jns
pop
jbe
add
outsl
test
sub
add
lret
aas
lret
cmp
dec
jmp
dec
add
add
adc
add
adc
jg
sbb
add
add
stc
stos
daa
add
scas
das
cs
xchg
mov
add
repnz
xor
jp
add
lcall
add
inc
add
mov
dec
and
in
rclb
roll
sub
call
add
mov
add
std
dec
pop
aad
lcall
xor
dec
add
pop
add
jnp
jns
pusha
add
dec
data16
add
mov
cmp
stos
and
lcall
pop
sub
je
dec
ror
pop
js
add
ds
add
loopne
rolb
dec
popa
add
push
push
std
add
xor
cld
cld
clc
sub
add
sub
sahf
jb
call
decl
mov
add
xor
jl
adc
decl
add
incl
add
inc
add
add
outsb
xor
add
add
jp
or
mov
arpl
pushl
jmp
add
add
dec
push
add
test
scas
mov
push
filds
add
imul
sbb
add
add
add
mov
pop
in
sbb
scas
mov
add
jl
jae
cmp
mov
int
push
add
dec
in
test
add
pop
pop
cmp
sub
loopne
cld
addb
add
loop
fldl
add
cmp
roll
dec
mov
sbb
add
iret
sbb
imul
decl
sbb
inc
add
jno
jmp
inc
add
cmp
iret
test
cmp
xchg
sbb
add
out
inc
add
insl
push
mov
add
repnz
mov
xchg
roll
push
sbb
add
xchg
adc
decl
stos
das
push
loop
lods
enter
jge
xchg
pop
mov
insl
cmpsb
add
fiadds
add
mov
or
cmp
lods
pop
or
lds
test
adc
add
adc
imul
jmp
add
dec
jns
inc
add
mov
add
and
movb
inc
add
ja
imul
add
insl
add
jmp
lcall
arpl
ljmp
ljmp
ljmp
mov
xchg
xchg
adc
decl
push
or
jnp
push
test
lods
les
sub
add
adc
xchg
dec
rolb
mov
push
je
imul
add
push
jmp
jp
mov
dec
rorl
add
mov
test
add
test
mov
mov
add
repz
dec
arpl
jmp
add
out
fidivrl
jnp
sub
add
rcr
jecxz
loop
pop
loopne
cwtl
xchg
mov
inc
add
add
insb
arpl
jmp
mov
test
in
fbld
add
cmpsl
add
adc
add
lds
sub
and
dec
xor
loopne
loop
xlat
push
add
ljmp
in
mov
repnz
sbb
addl
add
imul
fcmovne
lods
push
add
in
or
adc
ljmp
mov
dec
pop
xor
inc
add
dec
xor
roll
sub
add
roll
mov
les
push
gs
jbe
mov
mov
cmp
cmp
mov
add
ret
add
or
add
pop
add
push
call
add
jecxz
inc
add
mov
sbb
les
popf
dec
xchg
push
add
sub
fdiv
cmp
or
pushl
decl
add
ja
shrl
add
in
dec
out
fcoms
ret
scas
shl
add
addb
add
add
lds
cmp
add
loopne
jmp
add
in
in
fidivrl
push
jecxz
adc
mov
js
adc
add
popa
add
sub
add
inc
add
inc
add
and
jmp
add
inc
add
add
adc
jle
cmc
lods
add
inc
add
add
push
add
add
call
sub
jbe
data16
and
lcall
ljmp
mov
add
incl
add
lds
sbb
xchg
repnz
incl
add
lret
sbb
ret
add
sahf
sub
movsb
add
incl
adc
jmp
add
add
mov
add
dec
loope
pop
lahf
std
add
sub
addr16
add
jmp
pop
jg
xor
jmp
roll
cmp
movsb
add
outsb
shl
add
add
cld
loopne
lds
data16
add
fisubrs
mov
lret
jmp
add
cmp
mov
and
pushl
sarl
xchg
test
daa
add
out
movsl
add
inc
add
jnp
dec
cmp
sahf
push
xor
add
add
and
mov
or
addl
add
add
daa
add
movb
fs
xchg
cltd
jno
pushl
add
loope
test
ret
add
sbb
or
cmp
lea
push
and
jmp
sti
or
lea
fbld
add
mov
popf
bnd
add
aam
push
add
data16
add
lret
movl
sbb
jecxz
pop
sbb
es
fcompl
sbb
add
and
call
lcall
add
xchg
cwtl
and
call
pushl
add
push
add
mov
daa
add
incl
leave
or
mov
sub
xchg
push
add
jnp
imul
sub
hlt
mov
add
pop
inc
add
lcall
sub
mov
add
add
mov
sub
decl
rolb
adc
add
ret
add
nop
movsl
add
pushl
das
insl
push
scas
ja
add
add
jge
add
js
add
xchg
out
jns
add
add
and
call
ljmp
mov
add
or
ljmp
add
int3
aaa
mov
add
add
decl
sub
pop
out
jle
jmp
lods
dec
pop
xor
call
add
lods
imul
test
inc
add
ds
stc
mov
pop
mulb
sbb
push
add
fmuls
mov
add
int3
lret
ret
sbb
xchg
xor
aas
insl
mov
aas
leave
clc
rolb
add
sub
movsl
add
mov
bound
jmp
sub
ds
jns
add
add
ljmp
incl
ljmp
add
add
add
incl
rcll
les
stos
pop
add
pushl
dec
xor
mov
into
xchg
and
jmp
incl
add
sbb
add
test
add
add
fldenv
adc
std
push
add
push
add
xchg
test
pop
in
inc
add
and
fcomp
dec
cmpsl
add
xor
pushl
add
or
push
add
clc
aam
add
or
cwtl
fmul
call
pop
clc
cmp
or
imul
jg
or
and
aas
in
ss
stc
mov
ljmp
and
jmp
add
loopne
daa
add
sbb
add
add
adc
cli
sbb
stos
aam
xchg
push
and
aad
repnz
fsts
out
cld
lods
js
push
add
mov
sbb
sbb
mov
aas
adc
lcall
add
pusha
add
ss
push
adc
add
sarb
sbb
int
inc
add
aaa
inc
add
adc
lcall
jmp
fisttps
xlat
enter
xchg
sub
add
add
filds
add
dec
repnz
into
sub
add
cmp
repz
repnz
add
add
icebp
dec
clc
cmp
loop
mov
enter
stos
add
sub
incl
fwait
adc
decl
and
incl
add
push
add
sub
add
addb
mov
adc
add
push
add
sbb
dec
adc
call
dec
and
dec
xor
insl
mov
ja
pop
add
loope
cmpsl
add
incl
call
pushl
add
mov
add
pop
mov
or
jns
outsb
mov
je
fiadds
mov
add
inc
add
xchg
fadd
add
add
jmp
adc
incl
mov
inc
add
add
incl
movsb
add
push
add
inc
add
ds
jo
push
mov
lds
xor
lds
fisubl
cmpsl
add
xchg
add
add
add
sub
addl
sub
add
test
addb
add
add
loop
rcrl
mov
loop
mov
test
enter
add
sti
rcpps
decl
push
inc
add
cmp
fisubrl
sub
mov
add
jmp
call
add
push
add
fiadds
push
adc
roll
imul
add
roll
xchg
add
jmp
xlat
inc
add
pop
popa
add
out
inc
add
mov
and
addb
stc
push
add
arpl
decl
xchg
fidivs
aas
mov
scas
das
jl
mov
idivb
mov
das
mov
add
ljmp
call
incl
incl
add
xchg
scas
lahf
add
mov
add
jne
add
add
xchg
adc
incl
decl
rolb
add
incl
lcall
lds
in
and
sti
push
test
sbb
loop
aaa
push
xchg
out
lret
ljmp
push
add
cmp
sbb
jmp
add
mov
insl
inc
add
add
sub
imul
and
ljmp
shlb
fistps
je
push
add
add
add
xor
decl
add
mov
add
in
xor
incl
add
mov
test
roll
pushl
ljmp
push
xor
jmp
cmp
daa
add
mov
add
les
lds
loopne
cmpsb
add
add
mov
xchg
cmpsl
add
fildl
test
dec
bound
lcall
xlat
xchg
mov
repnz
pop
add
add
ja
xchg
daa
add
jg
add
or
xor
call
nop
jge
xchg
pop
cmpsb
add
push
add
pop
idivb
sub
or
pop
add
les
mov
add
push
mov
pop
popa
add
jne
sbb
lea
add
add
xor
push
lret
or
push
xor
add
data16
add
adc
jmp
add
testb
int
movl
push
add
decb
and
pushl
add
sti
add
out
popf
sbb
add
incl
incl
ja
add
add
cld
stos
into
leave
bnd
addl
add
add
mov
mov
decb
jo
lcall
movl
sub
adc
lcall
push
add
call
add
lret
leave
fldt
scas
test
ret
scas
jo
lcall
jp
lock
add
sub
sar
je
out
dec
clc
fsubrs
add
ljmp
xchg
and
inc
add
add
popa
add
mov
add
outsb
pushf
lea
inc
add
clc
shl
leave
lods
lock
add
popa
add
xlat
fildll
mov
jmp
jl
lret
mov
add
push
add
fwait
in
cld
insl
pop
push
add
clc
js
faddl
inc
add
scas
pop
mov
add
fildll
lcall
rorb
lcall
ret
add
push
add
pop
mov
ljmp
out
movb
aad
sub
call
mov
add
lock
jnp
dec
xor
jmp
or
jp
add
je
das
push
and
add
add
out
jns
add
loop
pop
jnp
mov
push
mov
add
test
mov
lahf
inc
add
int
add
xchg
movl
cmp
and
fimuls
dec
aaa
mov
xchg
or
xchg
pop
sbb
add
andps
lods
rcrb
movsb
add
mov
add
adc
incl
incl
popf
sub
adc
add
cmp
inc
add
paddusw
xchg
jne
add
incl
inc
add
jl
add
decl
or
sub
je
add
outsb
xor
pushl
add
mov
dec
movb
mov
add
xchg
dec
inc
add
xchg
xchg
repnz
movb
stos
adc
test
inc
add
sbb
dec
lock
daa
add
add
jle
add
add
lock
jecxz
adc
jmp
call
add
sti
inc
add
ds
ficomps
aas
adc
lcall
mov
add
out
cli
fcmovnbe
add
pushl
ljmp
je
sub
inc
add
add
mov
aam
add
push
add
ret
add
add
pop
data16
fadd
add
adc
test
pop
mov
add
insb
ljmp
mov
cwtl
dec
aad
sar
lret
in
test
data16
jmp
add
add
sub
rolb
movb
sub
cmpsl
add
lods
das
imul
add
jmp
adc
int
out
fidivrs
jp
push
ds
jbe
add
in
mov
hlt
sbb
add
stc
mov
add
or
add
movsb
add
xchg
pop
pop
dec
push
add
push
test
add
jle
pop
fwait
cltd
pop
dec
fldcw
pop
filds
fmulp
cmp
add
insb
cld
cld
inc
add
jle
add
test
pop
icebp
call
inc
add
sub
std
push
scas
lods
xor
fistpll
test
lret
and
incl
add
pop
inc
add
cli
popa
add
aas
cli
sti
sub
movl
xchg
in
mov
dec
scas
stc
dec
sbb
add
push
add
fldt
lret
jnp
scas
fwait
addl
pop
sbb
add
out
cmpsb
add
ret
data16
add
xchg
fwait
leave
cwtl
push
bound
incl
push
add
add
out
outsb
pop
jecxz
movl
jb
call
xlat
ffree
add
in
xchg
fisubrl
stc
dec
jnp
push
add
lret
push
cmp
cmp
dec
mov
imul
mov
lcall
adc
jmp
lods
sahf
xor
push
pop
aaa
mov
insl
dec
ret
add
int
inc
add
lods
jae
ljmp
rcrl
mov
add
sub
mov
xlat
stos
pusha
add
pop
sbb
addb
add
push
adc
ljmp
in
push
sbb
mov
push
mov
push
push
add
add
test
dec
mov
fs
add
add
call
decl
into
xor
add
xor
decl
inc
add
roll
add
inc
add
pusha
add
jmp
fwait
cltd
movsb
add
mov
mov
add
jl
pop
add
add
xchg
inc
add
add
xor
add
aas
hlt
pop
adc
mov
aam
add
add
lds
jge
inc
add
add
decl
loop
daa
add
sahf
xchg
in
xor
ljmp
movl
add
add
lea
and
mov
add
outsb
sub
in
push
add
xchg
rolb
cmp
fcoml
push
add
lret
mov
daa
add
add
push
add
add
add
xchg
push
imul
add
nop
mov
add
mov
cmp
add
cmc
jecxz
add
repnz
add
sub
mov
add
and
incl
pop
xchg
dec
mov
add
stc
jb
call
enter
add
lret
add
add
jnp
mov
das
mov
rolb
jl
adc
inc
add
xchg
cltd
xchg
shl
push
into
scas
jecxz
sbb
roll
add
mov
add
jbe
push
repz
jmp
sarb
test
or
add
data16
add
push
add
in
inc
add
jle
stos
pop
inc
add
cmc
mov
pop
sbb
pop
jnp
pop
inc
add
and
inc
add
aaa
and
fcoms
add
out
in
push
add
call
add
mov
cmp
add
outsb
pop
add
mov
add
fisubrl
mov
pop
ret
add
add
lods
or
add
jmp
jbe
add
inc
add
outsl
in
aaa
push
cli
dec
fwait
dec
dec
add
int
add
push
cmp
add
sbb
add
int
arpl
jnp
pusha
add
mov
add
add
sbb
add
add
and
dec
std
lret
icebp
cltd
imulb
add
add
ds
or
popf
hlt
adc
ljmp
add
mov
cmp
movsl
add
scas
fildll
add
inc
add
movsl
add
add
adc
lcall
inc
add
xchg
notl
call
ret
inc
add
push
dec
pop
aad
cmc
mov
add
pop
jmp
xor
fnstenv
mov
mov
add
pop
pop
add
add
add
incl
add
pop
or
mov
jmp
jmp
incl
mov
cmp
leave
addl
add
and
decl
add
mov
add
enter
ljmp
lock
push
fnstsw
sub
pop
add
addb
jmp
add
jae
pushl
add
pusha
add
shll
add
addb
add
dec
mov
dec
pop
fsub
add
iret
rolb
cmc
xor
jmp
add
or
pop
dec
int
jno
lcall
and
call
call
test
jno
stc
xchg
pushf
fdivrl
and
cld
add
lods
cmp
jle
add
addl
decl
sub
add
fnclex
add
add
pop
test
sbb
dec
cli
inc
add
movl
and
dec
jns
lods
addb
sub
decl
adc
ljmp
cmp
in
add
dec
ljmp
cmc
int3
decb
mov
mov
aaa
cmp
std
pop
int3
inc
add
dec
add
iret
xchg
movsb
add
lcall
add
mov
aaa
pop
jae
dec
out
mov
leave
lods
jno
call
jbe
or
mov
movsb
add
add
into
clc
dec
mov
mov
push
cmpsl
add
imul
icebp
push
add
pop
and
decl
mov
testb
xchg
mov
clc
mov
cmc
adc
cmc
cli
and
pushl
add
cmp
pop
cltd
loop
in
rcrl
sub
fwait
ja
aas
bound
jmp
add
lcall
loop
js
cmc
xchg
insl
xor
cmp
add
push
add
cwtl
ljmp
addb
ja
add
cld
fwait
mov
adc
add
xor
pushl
add
sahf
bound
fdivr
stc
dec
pop
xchg
mov
imul
add
movsb
add
cmp
push
test
nop
dec
or
sbb
push
add
inc
add
fcoms
xchg
cli
rorb
add
dec
mov
jne
add
ljmp
pushf
out
push
add
insl
mov
mov
add
imul
clc
fidivrs
push
add
inc
add
add
loop
inc
add
mov
repnz
fistl
mov
call
add
push
add
data16
popa
add
clc
addl
add
sub
add
add
add
aam
mov
std
sbb
inc
add
mov
cli
nop
xor
adc
ljmp
xor
out
mov
add
mov
lret
bound
pushl
lcall
aaa
in
fistl
dec
add
add
mov
divl
call
pusha
add
xchg
movb
mov
add
je
addl
pushf
loopne
nop
jge
and
add
sahf
sar
loop
div
sub
aam
add
mov
sub
jns
repnz
mov
jmp
pop
add
leave
fdivl
add
xlat
jp
add
mov
push
inc
add
shl
mov
add
push
add
inc
add
add
inc
add
fwait
cmp
push
mov
add
add
std
js
js
movsb
add
clc
mov
mov
xchg
xlat
sub
mov
add
jno
jmp
call
mov
ljmp
add
or
movl
mov
add
cmp
jmp
add
add
jp
add
test
decl
rcr
sbb
add
addl
movsb
add
add
addb
inc
add
stos
add
push
jmp
bound
call
cwtl
lret
add
call
jmp
add
add
insb
push
push
add
movb
add
cmp
add
pop
mov
lock
sub
addl
les
enter
jmp
add
xchg
out
aad
jns
bound
fmuls
add
cmpsl
add
add
add
sbb
pop
xchg
xchg
movl
cmpsl
add
pushl
xor
lcall
xchg
mov
add
xor
inc
add
jecxz
ret
add
add
call
lcall
add
sahf
inc
add
out
or
addb
sahf
roll
sbb
pop
inc
add
xor
jmp
add
stos
adc
incl
add
mov
cltd
movb
lock
mov
addl
sub
call
add
jmp
adc
lcall
jle
aas
xchg
lcall
sub
fcmovb
add
aas
shrb
repnz
enter
xor
in
xor
call
or
add
mov
add
mov
dec
lea
fwait
xchg
push
add
cmp
inc
add
outsb
add
frstor
incl
add
dec
out
xchg
int
push
add
fcoml
inc
add
adc
lcall
add
enter
inc
add
call
add
add
lcall
add
outsl
jecxz
adc
decl
add
xchg
fsubs
xor
lcall
mov
add
outsl
movsl
add
add
fwait
lret
fstpl
add
sub
sub
add
fstps
push
out
jo
ljmp
or
and
addl
cmpsl
add
pop
lds
mov
inc
add
xchg
sbb
add
ret
fadds
add
sbb
add
pop
mov
jmp
out
pop
outsb
sbb
sbb
add
add
pushf
lock
decl
filds
add
fwait
test
popf
mov
add
jle
mov
ljmp
pop
mov
add
mov
sub
push
add
push
pushf
mov
add
add
adc
lcall
jne
mull
add
and
cmp
add
xor
jmp
add
add
je
roll
add
stos
inc
add
inc
add
add
push
sub
or
inc
add
adc
jmp
mov
stos
data16
jp
cmp
ljmp
and
add
mov
push
popl
enter
add
jmp
add
add
mov
mov
fwait
mov
cmp
data16
lods
jmp
push
imull
iret
mov
add
jge
push
sub
push
add
xlat
inc
add
out
loope
divl
out
push
out
or
dec
pusha
add
dec
xor
insb
jge
roll
clc
inc
add
iret
cs
cmp
add
add
add
test
push
aaa
mov
icebp
jae
decl
add
add
push
and
call
ja
movsl
add
ljmp
push
add
cld
cmp
add
xchg
xor
jmp
add
leave
pop
imul
nop
add
jmp
call
add
sbb
cli
daa
add
add
pop
jmp
addb
inc
add
jl
mov
imul
adc
ljmp
adc
xor
ljmp
push
fstpl
sbb
pop
cltd
aam
dec
movsl
add
inc
add
mov
jmp
out
filds
add
fsubs
xor
add
cmp
dec
test
add
daa
add
stc
push
add
ljmp
scas
mov
push
xchg
sahf
test
xchg
cmp
pop
popa
add
repnz
fldl
add
addl
add
ljmp
lock
es
add
or
in
fistpll
add
cli
icebp
xor
cmpsl
add
mov
movl
add
lcall
jno
call
add
out
into
or
add
add
pushl
cld
addb
add
dec
sub
mov
add
call
add
add
out
or
shlb
sahf
cmp
ss
xchg
sub
hlt
sub
out
xchg
dec
xchg
stc
xor
pushl
or
add
aam
ror
add
inc
add
mov
or
add
dec
rclb
call
add
ljmp
addb
add
ja
lahf
lahf
addl
add
sub
jmp
inc
add
ja
movsl
add
pop
cmpsl
add
xchg
xchg
lret
add
or
add
lea
add
aad
push
push
push
add
mov
inc
add
mov
outsb
jnp
adc
jmp
add
jecxz
stc
xor
stc
add
push
out
call
push
add
decb
mov
add
add
add
xchg
addb
ret
mov
daa
add
inc
add
cmpsb
add
insl
add
fdivrl
mov
adc
pushl
mov
jle
movl
aas
and
inc
add
sub
xchg
pop
add
call
fcomip
ds
addb
add
addb
cwtl
mov
jmp
add
add
js
mov
add
dec
push
add
mov
ljmp
add
adc
call
add
add
jmp
push
add
hlt
jne
xor
jmp
rolb
xchg
push
add
inc
add
loop
mov
inc
add
mov
dec
jno
call
nop
in
mov
pop
or
mov
pop
xor
add
inc
add
xchg
push
add
test
mov
popf
inc
add
hlt
mul
add
mov
ds
aam
hlt
cs
jp
cmc
lods
sub
cmp
int
xlat
insb
add
ds
aad
sub
adc
cmp
add
add
aad
add
test
push
mov
cmp
je
std
pushf
lock
fstl
add
mov
add
and
mov
add
cmc
mov
in
out
push
add
stc
mov
sub
push
add
lods
jno
inc
add
jge
add
lea
push
xchg
je
xchg
ja
mov
sahf
cmp
add
cmp
push
cld
or
add
gs
add
pushl
add
adc
jmp
add
movsl
add
xor
inc
add
movsb
add
mov
push
xchg
mov
pop
add
push
add
xchg
adc
incl
add
jge
mov
add
or
add
cmpsl
add
add
add
inc
add
shrl
jle
add
jmp
mov
add
mov
mov
xor
ljmp
out
mov
inc
add
cltd
jmp
mov
and
dec
in
pop
add
daa
add
lods
fadds
add
push
push
notl
add
addb
add
dec
fsts
lcall
add
cmpsl
add
add
cs
jo
ljmp
jae
call
sub
add
push
add
pop
add
mov
xchg
movl
repz
or
idivb
adc
call
add
fldenv
addb
jmp
add
insb
mov
and
decl
add
cli
stc
mov
add
add
pop
xor
add
add
mov
rolb
adc
add
dec
fldenv
add
mov
add
add
add
int
pushf
jbe
adc
incl
call
add
dec
mov
add
dec
aas
inc
add
pop
mov
mov
js
fwait
jl
jns
jmp
add
pushl
fiadds
lcall
xor
lcall
push
jne
jle
add
add
ljmp
mov
mov
add
inc
add
in
sbb
loop
insl
mov
aaa
lret
ret
add
jb
call
clc
or
pop
cmp
sbb
icebp
mov
mov
push
ret
add
lods
addr16
add
in
aaa
pushf
jge
cmp
sbb
adc
lcall
cs
movsb
add
mov
push
add
cli
dec
or
xor
add
aaa
jp
cltd
mov
jmp
add
out
xor
addb
sbb
add
mov
pop
push
adc
dec
jp
add
cs
add
cmp
ljmp
das
inc
add
mov
jnp
dec
xor
lcall
mov
jge
dec
xor
cmp
enter
cmp
pop
data16
sbb
mov
jnp
xor
jmp
add
xchg
mov
hlt
lods
pop
fstpt
pop
push
add
das
pop
ret
add
add
lret
cmpsl
add
add
cmp
add
inc
add
xlat
adc
jmp
lcall
ret
add
inc
add
roll
add
icebp
inc
add
xor
inc
add
insl
lcall
bound
call
iret
cmovne
out
loopne
inc
add
cmpsb
add
jmp
aad
dec
add
mov
jmp
xchg
roll
push
pop
mov
nop
xchg
insb
and
dec
mulb
fldl
dec
jo
incl
fstps
lahf
imul
add
add
call
inc
add
les
push
js
add
negl
fstps
add
addl
pusha
add
clc
lods
stos
pop
and
incl
ret
add
add
jnp
in
iret
inc
add
mov
add
cmp
jmp
add
mov
jle
or
mov
mov
ljmp
add
mov
add
scas
push
adc
leave
push
ret
xchg
aaa
or
sahf
ss
shll
push
bound
call
repnz
add
lcall
add
pop
and
std
pop
add
incl
pop
add
add
add
imul
in
int3
jno
jmp
add
mov
xor
add
add
jns
add
and
ficoml
add
adc
incl
cmc
roll
add
sub
mov
shlb
jmp
clc
jnp
jecxz
jb
jmp
shll
fmull
cmpsl
add
add
pusha
add
push
sbb
dec
inc
add
sub
cmpsl
add
dec
loop
icebp
pop
lods
dec
aam
add
pop
push
add
fbld
add
call
aas
rcll
add
std
dec
outsb
shll
add
add
fldt
out
ss
push
stos
test
out
cmp
add
add
pop
jae
jmp
xchg
dec
dec
mov
pushl
out
insb
add
lcall
add
int3
enter
push
cld
stos
aaa
cmp
add
cmpsl
add
add
jg
jbe
fsts
add
movsl
add
negb
cmp
data16
jbe
std
mov
pop
cli
xchg
or
sub
outsl
daa
add
lock
push
ffreep
add
in
out
sub
inc
add
inc
add
add
add
mov
ja
add
add
mov
add
add
aaa
enter
pop
jo
dec
mov
fnstcw
add
and
adc
lods
jno
mov
fstpt
and
pushl
add
popf
mov
data16
outsb
add
call
data16
add
pushl
mov
in
mov
ljmp
inc
add
fcoms
ljmp
int3
mov
mov
push
add
push
clc
inc
add
mov
in
sbb
mov
int3
in
mov
push
add
imul
loope
fldt
push
add
xor
add
sti
xchg
jge
addl
xor
add
add
cmp
add
add
js
sub
add
dec
mov
lcall
jle
cmpsb
add
xchg
adc
flds
add
mov
xchg
and
jle
sub
add
adc
decl
push
add
test
xchg
jp
add
incl
adc
incl
pushl
add
pusha
add
aas
xor
lcall
add
pushl
add
mov
call
js
add
divb
add
test
add
add
add
fscale
ds
sub
add
aas
aam
and
lcall
pop
inc
add
js
les
movsb
add
fsubr
enter
adc
out
iret
xor
jg
add
addb
add
add
sub
cmp
add
enter
add
ljmp
mov
call
jle
inc
add
jmp
es
js
add
stc
and
add
fldcw
sahf
popa
add
roll
add
fists
lcall
xchg
das
repz
daa
add
rorb
scas
mov
push
inc
add
imul
add
lcall
cmp
xchg
imul
dec
jge
jno
push
std
cmp
movsl
add
add
ljmp
add
xor
add
loop
in
out
mov
and
les
jb
incl
stos
fistpl
addl
inc
add
loopne
lcall
xchg
push
adc
decl
popa
add
insb
inc
add
lods
cli
add
fdivs
add
lods
nop
push
add
js
aaa
cli
pusha
add
or
add
xlat
or
add
incl
dec
pop
pop
push
fsubs
add
les
or
jno
push
push
dec
add
incl
incl
add
shll
lcall
or
add
test
daa
add
add
stc
or
incl
incl
jmp
add
add
add
je
scas
or
dec
mov
add
mov
les
into
mov
add
outsb
mov
call
add
sbb
out
mov
add
addb
mov
inc
add
lahf
fxch
push
xor
cmp
dec
pop
bound
inc
add
addb
add
in
add
ljmp
add
add
mov
add
add
push
movl
push
add
pop
push
adc
dec
scas
and
incl
mov
pop
adc
lcall
and
jp
je
int3
pop
pop
out
adc
lcall
mov
add
mov
rcrl
sub
add
add
add
in
shll
ljmp
lds
repnz
sbb
add
mov
cmpsb
add
sbb
add
dec
adc
cmpsb
add
icebp
lock
pop
icebp
pop
pop
add
jmp
cmp
xor
mov
pushf
push
and
jmp
add
add
lods
in
insb
xor
test
add
out
push
call
cwtl
jmp
ljmp
add
shrb
std
int3
fldenv
popf
jae
inc
add
add
xor
and
jmp
add
jmp
lcall
adc
incl
pusha
add
sbb
ret
jmp
and
dec
jnp
add
inc
add
cmp
std
fldenv
arpl
ljmp
mov
push
add
decl
add
cmp
or
scas
cli
mov
les
lret
lcall
push
dec
jge
test
xchg
jae
jmp
add
jmp
call
test
sbb
outsb
sbb
pop
xchg
je
cmc
aas
stc
lret
dec
pusha
add
pop
add
jbe
ret
cmp
decl
push
pusha
add
mov
lret
xor
pop
pop
inc
add
lock
sbb
add
lcall
repz
movsb
add
add
jmp
enter
add
sahf
call
xor
ljmp
js
cmp
pop
fs
fwait
jae
call
add
adc
cmp
add
das
mov
sub
jmp
call
call
inc
add
sti
add
add
or
mov
push
add
roll
lods
addl
add
jne
stos
movb
addr16
push
add
pop
shlb
add
xor
xchg
pop
fbld
sbb
aas
aam
add
add
add
hlt
bound
jmp
add
iret
mov
mov
fistl
movsb
add
insb
push
fdivr
ret
stc
push
mov
pushl
xchg
sub
call
aaa
ret
add
bound
jmp
mov
add
test
aaa
lret
add
cmp
add
outsb
pop
add
dec
mov
dec
leave
nop
das
cmp
add
stos
sub
aas
or
incl
bound
incl
mov
std
in
cmp
jl
rolb
addb
add
loope
jb
js
add
negb
add
in
pop
lea
add
enter
imul
and
mov
movsl
add
pushl
lcall
or
repnz
inc
add
xchg
pop
fwait
jbe
add
in
mov
shrl
mov
popf
mov
add
mov
jp
add
rolb
add
cltd
js
ljmp
add
add
or
cltd
movl
cmp
jns
in
push
inc
add
lock
or
add
jo
pushl
pop
add
mov
cmp
dec
push
add
add
add
push
jg
and
ljmp
add
add
add
call
shrl
into
stos
dec
in
test
dec
push
add
push
add
xlat
addl
add
push
add
push
push
mov
stos
mov
add
push
add
inc
add
pop
inc
add
push
add
fcomp
mov
nop
repnz
addb
add
dec
out
std
xor
pushl
add
stc
pop
xchg
pop
aas
enter
add
popa
add
rorl
jmp
int3
lret
fmulp
jmp
add
push
add
sbb
pop
repnz
jle
mov
and
incl
test
jp
add
incl
add
aaa
lods
push
add
ret
add
add
lods
cmc
test
adc
test
lcall
pop
and
mov
clc
add
testb
dec
mov
int3
xor
ljmp
jno
ljmp
inc
add
jmp
mov
add
mov
call
imul
add
xchg
fcmovb
add
inc
add
add
add
push
add
incl
call
add
loop
nop
push
add
pop
sub
add
xor
decl
push
add
push
add
aas
cmc
mov
imul
inc
add
sub
dec
cmp
and
jmp
add
dec
cmp
cltd
fs
inc
add
jge
cmp
add
outsb
pop
les
lds
xor
cmp
add
daa
add
add
xchg
cmp
arpl
dec
inc
add
ss
jb
inc
add
fs
lds
jae
push
das
adc
dec
mov
fnstcw
jmp
add
movsb
add
loop
sbb
call
dec
mov
jno
incl
out
xlat
negb
dec
mov
fmuls
xchg
sub
add
fcmovu
push
lock
jno
fistpl
pushl
ljmp
stos
add
cmp
add
jo
push
pop
dec
jle
xchg
fadds
decl
add
scas
sub
add
out
arpl
ljmp
add
sub
fwait
movb
add
js
pop
movsl
add
push
add
or
add
and
mov
leave
cmpsb
add
and
call
add
cmp
add
loopne
addl
test
xchg
bound
lcall
xchg
jbe
sub
inc
add
add
and
pop
add
wbinvd
pusha
add
cmp
dec
imul
decl
addb
ljmp
movb
arpl
jmp
fwait
xchg
test
adc
dec
add
pop
repnz
movsl
add
push
out
jg
add
and
pushl
add
add
addr16
movl
add
push
js
add
add
enter
push
pop
mov
outsl
push
divb
call
ljmp
incl
hlt
incl
add
shlb
call
lock
jb
lcall
jmp
add
push
add
push
add
decl
add
ljmp
inc
add
mov
add
dec
in
push
out
mov
add
pop
adc
decl
clc
out
test
test
cld
mov
stos
lret
push
push
add
aad
roll
ficoms
das
xor
dec
movb
into
int3
mov
add
add
jle
pop
repnz
pop
cmp
mov
lcall
sub
test
push
sub
addl
loope
cmc
insl
jp
lret
scas
arpl
fstl
add
mov
cmp
sub
add
data16
imul
call
add
add
stc
sbb
jge
insl
stos
repz
inc
add
jmp
xchg
push
int
push
sti
adc
ljmp
jns
mov
sbb
jmp
jle
add
inc
add
test
add
dec
imul
clc
jns
add
or
add
add
jge
xchg
sub
add
push
add
lea
add
stos
popa
add
xor
call
clc
lcall
jb
jmp
add
dec
rolb
repz
add
mov
mov
out
mov
out
jp
or
adc
call
add
movsb
add
add
add
mov
pop
in
pop
loopne
push
add
aas
fnsave
fistl
xchg
data16
sbb
js
inc
add
imul
movl
add
add
cmp
sbb
mov
hlt
jnp
mov
addl
pop
cmpsb
add
add
fninit
add
add
jo
jmp
add
aaa
in
jno
decl
sub
add
cmp
loope
cmc
fdiv
test
add
add
or
addl
mov
cmp
add
rolb
push
fs
xchg
dec
mov
push
add
decl
add
add
inc
add
cmp
add
jmp
in
xor
incl
call
jl
jle
xchg
pop
cmp
mov
in
movsl
add
jmp
add
add
mov
sub
clc
xor
incl
call
push
lret
mov
add
pop
sub
sub
clc
incl
add
push
xlat
fstps
add
sbb
popa
add
add
add
add
data16
fcmovnbe
mov
add
test
sbb
mov
test
mov
jns
and
movl
add
bound
ljmp
add
jnp
add
add
pop
xor
pushl
add
add
sub
add
pop
sbb
pushl
arpl
call
in
push
push
jns
add
jo
jmp
and
add
pushl
incl
hlt
insb
cmc
ret
inc
add
mov
lret
icebp
dec
lret
stos
jmp
movl
add
add
xchg
adc
push
outsb
jb
call
mov
add
add
out
ja
add
cmp
xchg
sub
dec
xchg
or
add
add
and
pushl
add
sub
incl
rolb
add
or
pop
mov
add
addl
mov
push
add
das
bound
call
add
mov
add
mov
dec
leave
aas
addb
add
add
sti
inc
add
in
sub
in
mov
mov
inc
add
lret
push
inc
add
dec
cmp
popl
add
bound
call
movsb
add
ds
mov
ret
add
pop
fsubp
add
roll
mov
mov
test
dec
push
movb
add
incl
add
nop
xor
push
add
pop
mov
pop
mov
inc
add
adc
pushl
mov
outsl
roll
add
add
mov
add
jmp
fisubrs
movl
add
lods
push
add
inc
add
pop
dec
mov
push
add
movsb
add
jno
call
mov
pop
pop
xchg
sarb
mov
in
adc
lcall
jle
add
mov
negl
pop
imul
ljmp
mov
sarl
add
lock
pusha
add
adc
decl
add
enter
decl
test
stos
shl
add
push
mov
fsubl
add
push
add
enter
das
dec
sub
shll
ljmp
add
push
add
mov
inc
add
imul
insb
pop
pop
stos
pop
add
push
add
jmp
add
add
decl
jno
decl
dec
inc
add
stos
pop
hlt
jno
inc
add
add
dec
jle
jp
cmpsb
add
inc
add
add
cmpsb
add
jmp
daa
add
sbb
add
mov
add
popa
add
adc
call
add
enter
loopne
mov
sub
add
in
push
add
lcall
add
cmp
leave
in
fwait
pop
add
out
add
pushl
call
jmp
mov
popf
mov
push
lds
and
lcall
push
mov
add
rcrl
xor
call
ljmp
sahf
push
add
out
data16
add
jmp
xchg
hlt
or
add
outsb
movl
fildll
int3
jno
lcall
add
xchg
sbb
cmp
mov
mov
cmp
mov
bound
inc
add
add
add
mov
add
cmp
mov
mov
pop
add
cltd
pop
in
pop
pop
mov
xchg
test
mov
add
out
dec
std
pop
mov
adc
add
add
decl
cltd
mov
add
add
dec
mov
add
add
add
cmp
pushl
cmp
js
sbb
or
add
add
add
jns
jmp
addb
sub
pop
rolb
movsl
add
pop
mov
push
pop
add
jnp
add
add
add
push
movsb
add
mov
xchg
or
add
fstpt
mov
mov
mov
out
inc
add
lcall
sahf
fadd
add
pop
ljmp
add
xchg
adc
call
pop
cwtl
xchg
jmp
repz
sub
inc
add
lea
mov
adc
lcall
push
add
in
xchg
pop
add
xchg
lret
les
xchg
jb
lcall
out
add
jle
sub
add
pushl
repz
ljmp
add
inc
add
lahf
imul
test
movl
pop
add
mov
add
sub
xchg
sar
cmp
mov
xchg
xchg
push
xor
call
inc
add
lcall
add
pop
gs
jae
jmp
add
mov
cmp
mov
xor
xor
call
loopne
int3
jmp
xchg
in
loop
popf
add
mov
add
jecxz
sub
iret
push
jmp
add
jnp
outsl
insb
fwait
pusha
add
les
sbb
movsl
add
xchg
flds
jae
ljmp
mov
dec
pop
iret
xchg
sub
mov
and
incl
dec
les
loop
dec
les
cmp
adc
ljmp
inc
add
movl
jne
sub
add
add
jmp
call
adc
call
xor
incl
enter
add
movb
jmp
jle
add
aad
adc
sbb
add
jmp
call
in
popa
add
pop
movb
call
add
pop
aam
es
movb
add
jg
lret
mov
outsb
into
or
inc
add
jmp
ret
das
and
incl
add
add
xchg
test
inc
add
pushl
stc
insb
inc
add
push
add
add
stos
aaa
icebp
push
mulb
add
dec
pop
sub
pushl
add
lret
in
mov
adc
std
adc
pushl
add
or
push
add
fisttpll
ja
pop
jnp
add
jo
fistpl
add
sti
or
stos
or
push
add
add
push
dec
dec
add
std
sub
push
cmp
cvttps2pi
aam
push
add
add
in
push
add
cmp
sbb
add
pushl
add
xor
call
sbb
enter
add
add
jnp
mov
add
xor
xor
add
stos
add
incl
addl
sub
add
mov
add
push
aam
or
call
fstpt
adc
push
sub
addl
add
mov
mov
and
ljmp
dec
push
xchg
outsb
loopne
fwait
mov
movsb
add
dec
inc
add
push
add
decb
mov
mov
add
call
call
lea
pushf
mov
ja
push
and
jmp
add
pop
jne
and
js
mov
loop
loope
pop
mov
fisttpll
pusha
add
and
decl
cmp
and
call
jbe
xor
jmp
add
incl
ror
push
add
out
lock
pushl
add
xor
out
mov
dec
push
inc
add
mov
xor
lcall
nop
inc
add
xor
imul
and
cwtl
movsb
add
mov
add
add
mov
pop
insb
mov
add
adc
add
inc
add
add
add
push
add
and
jmp
incl
jle
cmp
lcall
xchg
shll
ret
push
jns
in
xorps
mov
add
push
cmp
pushl
add
cmc
jmp
add
dec
aad
cmc
stc
lods
jecxz
in
xor
lcall
lret
out
je
add
add
pop
cwtl
in
outsb
leave
std
cmp
inc
add
jb,pt
incl
add
add
pop
add
cmp
sti
inc
add
or
addb
add
aas
es
testb
add
addl
push
ds
mov
jno
ljmp
cmp
roll
and
jmp
add
and
jmp
incl
add
add
add
xor
incl
in
push
jnp
scas
aad
ljmp
xor
incl
dec
sti
cmpsl
add
add
sarl
add
or
mov
push
mov
call
add
pop
pop
leave
or
sbb
mov
jmp
fmuls
lds
add
ret
add
arpl
pop
imul
sub
pop
inc
add
sarb
addl
jg
xchg
es
add
add
dec
js
pop
add
add
xchg
movl
mov
lcall
cmp
add
mov
mov
add
scas
out
in
sub
add
add
inc
add
add
pushl
rorl
add
je
out
data16
add
cmp
inc
add
adc
push
cwtl
mov
dec
and
decl
xchg
adc
ljmp
mov
inc
add
add
add
rolb
shlb
inc
add
sbb
add
push
add
jae
cld
nop
out
ret
inc
add
addb
mov
out
and
pushl
push
add
mov
std
insl
adc
add
cltd
add
pushl
add
mov
add
xor
dec
and
call
lret
push
add
jmp
push
add
pop
addb
add
cmp
jo
dec
jle
add
in
mov
add
xchg
mov
cmp
dec
aad
add
outsl
into
inc
add
scas
loop
fcmovne
cmc
pusha
add
cmp
in
jl
test
call
add
push
add
push
add
ljmp
fwait
xor
jmp
add
cmc
sahf
jnp
fsubs
add
mov
add
adc
incl
call
nop
jge
add
lock
adc
add
icebp
mov
jmp
xlat
imul
popf
or
js
mov
pop
test
test
add
adc
inc
add
push
add
mov
out
and
incl
incl
ds
js
add
incl
ljmp
push
jae
cmp
xchg
add
scas
adc
jmp
call
add
add
stos
fsubrl
add
jne
movl
roll
xor
decl
push
add
out
xchg
push
mov
stc
roll
xor
out
add
push
nop
pop
adc
pop
and
inc
add
add
cmp
add
aaa
mov
add
jmp
lcall
fsubrs
call
add
lock
scas
rolb
aad
pushf
sub
ljmp
add
test
add
and
push
sbb
add
in
xchg
loope
pushf
ja
pop
icebp
mov
pusha
add
insl
out
jmp
mov
mov
xchg
nop
xchg
cmpsl
add
mov
dec
incb
add
lcall
jmp
inc
add
ljmp
lret
jmp
add
mov
inc
add
add
mov
cmc
jp
add
add
sub
scas
lds
ss
std
repnz
add
add
bound
ljmp
add
inc
add
roll
pop
aad
imul
call
add
test
arpl
fcos
push
mov
add
add
add
mul
add
add
add
pop
pop
or
add
ljmp
mov
inc
add
push
inc
add
add
add
incl
add
fsubrl
add
jmp
add
or
push
add
es
sub
push
lcall
cmpsb
add
lcall
add
add
or
inc
add
add
cmpsb
add
add
xor
call
add
imull
ja
sti
mov
dec
pop
push
mov
repnz
cmp
add
cmp
mov
pop
pop
ret
mov
add
ja
addl
mov
data16
pop
loope
test
push
add
push
add
fmuls
jmp
jae
lcall
inc
add
in
addl
add
add
add
cmp
insb
jge
add
pop
pop
jmp
add
pop
ret
adc
decl
xchg
out
lcall
lcall
ljmp
add
inc
add
fistpl
lret
test
imul
add
and
jl
adc
mov
add
icebp
sub
adc
call
jne
add
cmc
pop
push
pop
add
add
incl
add
xchg
cmp
cmp
call
add
repnz
push
repnz
add
call
add
or
pop
and
dec
addl
loope
mov
push
add
popa
add
imulb
ret
sahf
push
add
rolb
pop
pop
mov
loop
movsl
add
add
add
cltd
jne
or
movb
add
incl
add
dec
gs
cmp
call
call
add
inc
add
hlt
rclb
mov
xchg
in
loopne
lret
decl
int3
movsb
add
mov
jl
movsb
add
jmp
add
push
sti
iret
mov
cmp
add
push
push
sub
sub
add
pop
or
shll
jmp
add
sbb
xchg
dec
sub
or
add
icebp
data16
add
push
in
jb
inc
add
daa
add
xor
pushl
jecxz
ret
add
push
add
push
add
pop
push
pop
pushf
cmpsb
add
ds
test
add
add
jns
stos
in
mov
add
data16
push
add
xchg
arpl
ljmp
add
jmp
add
ljmp
xor
jmp
add
mov
xor
pop
add
lcall
add
inc
add
mov
incl
add
adc
mov
add
xchg
subps
pop
sahf
xchg
ret
add
add
sbb
out
outsb
xchg
jg
add
roll
ret
add
mov
in
addb
jnp
aas
mov
add
mov
push
add
xchg
adc
decl
inc
add
mov
add
pusha
add
filds
in
scas
movb
add
bnd
add
jo
decl
cmp
mov
jbe
arpl
jmp
add
add
push
popa
add
add
xchg
das
rorb
add
jne
lds
push
loope
mov
add
pop
mov
add
loopne
inc
add
ds
adc
push
xor
addb
inc
add
cwtl
mov
add
cmp
mov
push
add
addl
xchg
mov
and
lds
xor
jnp
movb
lods
cmp
into
aas
lcall
out
cmpsl
add
test
aas
call
push
mov
add
xchg
scas
jmp
dec
dec
lds
insl
mov
push
les
icebp
data16
add
call
fldenv
decl
xor
mov
add
cmp
roll
mov
mov
add
pop
js
dec
incl
add
aad
add
movsb
add
or
add
add
jo
pushl
add
dec
fsubrl
jmp
aam
mov
lea
dec
jecxz
dec
in
stc
out
xchg
jl
je
fstpt
xchg
or
pop
dec
enter
mov
add
sahf
mov
add
and
sub
adc
add
push
outsb
pop
mov
mov
add
mov
add
decl
lret
cwtl
xchg
lret
int3
adc
jmp
xchg
pop
popa
add
mov
or
movsb
add
add
push
movsb
add
outsb
jb
decl
pop
push
add
mov
inc
add
ret
add
mov
adc
decl
lret
test
add
add
sub
or
add
movsb
add
int3
inc
add
mov
sbb
sbb
add
add
add
add
repz
xchg
and
add
data16
pushl
add
add
and
test
in
les
pop
sbb
das
hlt
mov
xchg
in
dec
jns
jne
add
cmp
adc
cmp
add
lcall
add
jp
and
scas
inc
add
push
ret
add
mov
add
aad
add
dec
or
out
stos
shlb
inc
add
lods
outsl
push
mov
xchg
jnp
std
push
add
ja
add
dec
lcall
pusha
add
xor
inc
add
sub
fucomip
clc
addl
xor
fidivrs
fisubrs
inc
add
cli
and
iret
test
jl
add
divb
data16
dec
add
ljmp
add
add
sti
jl
xor
call
or
pushf
fbld
ljmp
xchg
popa
add
ret
add
add
add
movsl
add
lods
jne
add
aad
inc
add
jns
int
hlt
xchg
pop
cmp
add
cmp
lcall
add
add
mov
dec
adc
ljmp
imul
repnz
popf
mov
add
and
decl
add
mov
pop
adc
call
add
xchg
mov
daa
add
add
jns
mov
lock
inc
add
clc
cmp
rolb
mov
add
or
add
mov
push
add
divb
jmp
mov
dec
mov
add
pop
lods
in
mov
mov
rolb
add
sub
rolb
sub
pop
aam
add
add
nop
aad
daa
add
add
bound
js
add
hlt
enter
pop
xchg
push
add
roll
test
int3
inc
add
add
push
add
add
ljmp
sbb
add
mov
ljmp
mov
or
add
ljmp
mov
add
and
insb
shlb
dec
data16
mov
dec
sub
jecxz
popf
pusha
add
pop
add
decl
ret
pop
dec
in
push
add
adc
pushl
decl
add
add
scas
leave
jge
icebp
xchg
lds
mov
push
xchg
pop
xor
dec
or
add
ljmp
mov
add
sbb
mov
ficompl
enter
cs
add
sahf
addl
add
push
push
loopne
cmp
add
fwait
sahf
add
in
and
pushl
add
pop
mov
jnp
pop
push
je
outsb
or
dec
shll
add
inc
add
inc
add
fimull
movsl
add
ljmp
aam
push
add
out
mov
jecxz
push
add
sub
ljmp
in
loop
insb
push
fcmovnbe
lret
rorl
add
pop
mov
xor
test
add
add
xor
mov
mov
xchg
cmp
out
add
add
jbe
add
add
call
mov
add
sbb
mov
lcall
roll
add
popa
add
fsubrl
sub
mov
insb
jbe
inc
add
add
loopne
and
ljmp
ret
add
iret
aas
or
js
jg
add
add
inc
add
cmp
xchg
stos
jbe
pop
add
aam
mov
pop
roll
mov
dec
cmp
add
in
sub
mov
mov
aam
add
push
loop
mov
add
add
je
cmpsb
add
lahf
jb
incl
add
mov
jbe
and
add
jns
sub
xor
incl
fldl
add
add
lcall
icebp
or
out
in
pop
das
add
sahf
mov
mov
mov
mov
jns
add
jge
add
xor
call
cmp
sbb
add
idivl
xor
dec
and
push
add
sbb
out
dec
aad
add
lahf
xor
or
dec
pop
and
ljmp
ljmp
pop
pop
add
add
in
fsubl
add
adc
jmp
add
pushf
clc
mov
mov
add
add
ss
sbb
add
mov
add
jmp
add
add
xchg
data16
je
movl
movsb
add
rolb
pop
mov
ljmp
pop
adc
add
fs
sti
lock
jg
jno
decl
add
pop
addl
ljmp
adc
call
call
push
clc
fwait
roll
scas
les
xchg
sbb
pusha
add
lock
lret
out
inc
add
dec
and
push
add
adc
js
and
pushl
ljmp
pusha
add
xchg
mov
push
mov
sub
test
mul
add
pop
das
mov
mov
lret
jmp
add
cmp
dec
ret
add
add
and
jmp
add
lret
int3
lock
jmp
inc
add
std
xlat
xor
jmp
add
xor
pushl
add
enter
arpl
inc
add
add
pushl
incl
call
cltd
adc
out
pop
stc
popa
add
and
push
add
rcrl
jmp
in
int
add
sbb
aad
int3
or
bound
incl
jg
add
pop
fwait
or
adc
pushl
add
xchg
or
cli
pop
xlat
adc
xchg
js
mov
roll
add
loopne
mov
add
xor
jmp
add
call
mov
or
xchg
std
popf
movsl
add
movb
fwait
aad
dec
dec
rolb
add
icebp
adc
lcall
hlt
lods
cmpsb
add
lcall
negl
jne
mov
xor
jmp
add
test
dec
jge
data16
cld
and
jmp
add
fnstsw
lds
rolb
add
cmp
scas
cmp
rolb
push
xchg
pop
add
push
dec
xor
jmp
xchg
mov
test
jns
add
fsubrl
cmpsb
add
lods
out
or
fwait
inc
add
outsl
jns
aaa
xchg
inc
add
imul
lret
shll
test
push
pop
add
in
jnp
out
pop
add
sub
or
mov
rcrb
push
add
movsb
add
or
jmp
jmp
xchg
nop
pop
add
pop
add
add
dec
cld
pop
mov
iret
data16
xor
in
sub
test
jp
dec
mov
add
adc
call
add
cmp
add
push
stos
in
imul
dec
jp
pop
add
and
movsb
add
mov
pop
add
add
add
pop
add
inc
add
xor
fsubrp
clc
sbb
fwait
pop
dec
and
incl
decl
inc
add
ret
add
cmp
add
ds
or
inc
add
pop
out
add
mov
add
mov
in
inc
add
xor
adc
incl
rorb
test
fimuls
int3
lcall
add
add
jmp
ljmp
lock
jmp
ljmp
add
sub
popf
in
cli
in
loope
xchg
addb
dec
mov
stc
push
mov
addb
pop
sub
in
fildl
add
bt
or
add
scas
jae
pushl
inc
add
add
sti
inc
add
xor
incl
pop
mov
add
stos
add
add
add
popa
add
push
add
roll
add
sbb
mov
cmp
and
pushl
call
test
xor
push
enter
xchg
test
outsb
jg
pop
mov
cmpsb
add
mov
sbb
incl
in
int3
adc
add
mov
add
data16
and
jmp
movsb
add
add
fldenv
jmp
add
add
lea
loop
cmpsl
add
xchg
jnp
mov
sub
jle
add
sub
ja
push
add
push
aad
int3
jbe,pt
pop
das
jge
add
mov
clc
iret
pop
push
add
push
add
addb
add
jo
lcall
inc
add
mov
mov
jo
decl
cmp
add
inc
add
add
adc
push
or
add
add
add
cltd
clc
das
in
mov
add
cmp
xor
pop
adc
ljmp
mov
lock
add
aas
roll
add
push
push
shll
call
enter
pushl
add
stos
push
add
inc
add
sub
add
decl
jne
ja
inc
add
pushf
add
lods
loopne
ja
push
add
movsl
add
add
fldenv
insl
sarl
lods
aad
add
sub
jb
pushl
adc
in
dec
js
add
int3
cld
jbe
pop
ret
mov
leave
or
add
test
push
add
xchg
mov
incl
ljmp
add
sbb
add
fstpt
dec
xchg
push
jnp
mov
xor
ds
lds
ljmp
add
out
jg
xchg
and
jmp
add
jg
add
lcall
inc
add
rcr
dec
cmp
roll
add
xlat
and
add
add
movsb
add
inc
add
add
leave
cmp
fucomp
mov
repnz
mov
in
add
incl
pushl
pushl
add
scas
icebp
jle
dec
mov
adc
jmp
add
lcall
arpl
mov
add
test
movsl
add
mov
add
add
ljmp
addb
add
jmp
movb
dec
out
mov
ja
add
lds
lcall
add
cmc
push
add
fstpl
dec
dec
addb
cmp
add
push
push
or
pop
roll
push
add
lahf
fldl
es
dec
test
push
or
sub
inc
add
pop
add
loopne
popf
pop
mov
cs
mov
rolb
popa
add
iret
pop
test
push
xlat
mov
lcall
nop
or
add
cmp
sahf
aam
add
sbb
inc
add
leave
bound
call
inc
add
xchg
arpl
ljmp
jge
add
call
or
or
cmp
add
add
mul
add
movsl
add
add
cs
sub
cmc
push
xchg
sub
insb
cmp
mov
add
add
std
cmp
flds
dec
push
dec
mov
inc
add
std
mov
inc
add
ljmp
add
ret
add
sbb
adc
mov
call
sbb
data16
fnstcw
add
decl
xor
call
jp
stc
nop
addl
add
stos
idivl
fstpt
add
mov
add
jae
ljmp
push
push
add
add
cmp
add
rorl
fwait
inc
add
push
add
addl
add
or
jnp
add
incl
addl
push
add
add
lcall
mov
add
decl
add
add
xrelease
insl
sbb
push
add
popa
add
adc
out
in
jge
xchg
cmpsl
add
enter
add
cmp
xchg
out
push
add
loope
push
add
mov
add
add
xor
jl
add
lcall
cmp
jne
adc
sti
aaa
sti
stos
aad
add
out
stos
and
jmp
add
pop
scas
xchg
icebp
test
add
ljmp
fdivrl
dec
lcall
or
ss
pop
pop
mov
push
dec
popa
add
or
clc
inc
add
push
roll
sti
out
outsb
push
ljmp
jmp
roll
cs
mov
push
push
add
pop
insb
sub
decl
xchg
pop
loop
cmpsb
add
dec
lods
or
bound
inc
add
fwait
rcll
adc
lcall
pop
push
add
frstor
inc
add
add
jno
jmp
xlat
add
call
loope
addl
mov
add
fistpl
rcpps
jg
add
test
in
mov
lcall
push
jne
xchg
sub
addb
sbb
pushf
xchg
test
mov
lds
lcall
data16
inc
add
or
push
mov
add
ret
add
xlat
into
out
scas
cmp
lock
add
pusha
add
je
add
dec
movsl
add
pop
add
inc
add
pushl
arpl
pushl
add
rolb
mov
add
das
lods
in
pop
ljmp
pop
addb
mov
rolb
add
clc
add
incl
add
movl
xchg
loop
mov
jnp
add
aaa
adc
ljmp
frstor
push
add
add
adc
decb
add
xor
decl
inc
add
cmp
ljmp
int3
cmp
call
cmpsb
add
addb
loop
sbb
jmp
call
pushl
incl
add
movsb
add
xor
cmp
add
jae
lcall
sbb
pop
inc
add
mov
add
add
fdivrl
mov
push
adc
neg
ficomps
fiaddl
pop
fwait
and
lods
fucomip
lea
add
add
and
jecxz
or
pop
arpl
mov
lahf
cld
imul
lea
lcall
add
imul
add
add
add
mov
add
call
push
popf
test
or
ljmp
stos
and
incl
add
jmp
mov
pop
in
jecxz
roll
imul
add
push
add
ljmp
imul
push
and
call
jae
lcall
cwtl
push
add
lcall
add
add
add
inc
add
add
xchg
xchg
out
mov
and
add
inc
add
addl
jne
scas
call
outsb
or
add
movb
add
into
mov
dec
stos
int
adc
ds
dec
ret
add
pop
add
jmp
ret
add
push
add
or
push
add
mov
jle
pop
addb
je
cmpsl
add
add
sbb
add
push
add
sub
cmc
mov
addb
pop
sarb
add
adc
mov
imul
add
mov
lods
jnp
sbb
or
push
sub
inc
add
fcomps
or
add
loop
jp
fldl
sbb
addb
mov
cld
or
stos
ror
scas
sub
add
aad
jae
call
call
cmp
repnz
addl
imul
add
aad
nop
lahf
add
in
xchg
pop
jge
add
jmp
add
negb
roll
xor
ljmp
mov
movsl
add
clc
pop
inc
add
cmp
add
call
fldt
cs
push
sub
push
add
pop
sbb
pop
inc
add
add
add
or
add
dec
mov
sub
sbb
mov
add
add
cmc
sub
sbb
add
in
lock
add
mov
imul
stos
xor
decl
xchg
fwait
or
ret
shr
data16
roll
mov
ljmp
xchg
repnz
movsl
add
shlb
add
sub
mov
add
addb
add
cmp
pushf
jmp
add
add
add
test
fstp
lods
scas
nop
insl
test
cwtl
sub
nop
cmp
fdivl
add
lods
insb
jmp
pop
jo
call
add
mov
or
add
xor
ljmp
add
push
adc
add
jb
incl
lods
in
pop
add
movb
movb
add
rorb
pop
aas
sahf
pop
negl
pop
cmp
lcall
shl
aas
shll
sbb
add
fnstsw
jecxz
sar
push
mov
call
pushl
add
add
aam
aam
test
movsb
add
add
or
add
fdivrs
clc
cmpsl
add
add
add
push
jmp
inc
add
add
or
add
add
jmp
add
push
add
rcrl
leave
xchg
cltd
mov
xlat
xor
mov
add
mov
pop
add
cmp
popa
add
js
loopne
addb
xor
incl
jbe
mov
pop
mov
push
and
ljmp
push
mov
add
jnp
mov
sbb
dec
xor
pushl
add
stc
add
fldenv
add
add
jp
add
add
call
lcall
add
add
decl
mov
gs
add
das
call
addb
jmp
add
push
imul
cltd
aam
add
add
data16
iret
jmp
repnz
add
add
sbb
pushl
addl
or
add
out
pop
clc
int
mov
dec
sahf
rep
add
pushl
add
jle
rolb
add
mov
add
sub
cmp
out
pop
rolb
mov
incl
arpl
push
mov
sbb
in
cld
or
xrelease
add
cmpsb
add
xor
push
add
pop
push
add
dec
add
fisubrl
into
addl
add
popa
add
popa
add
push
stc
adc
ljmp
jmp
pop
out
roll
lahf
mov
add
jmp
add
popa
add
dec
loope
mov
shll
add
dec
loop
xor
cmpsb
add
imul
aad
add
sbb
add
jp
xor
pushl
add
jmp
popa
add
aaa
xor
add
add
add
pop
jno
in
pop
shlb
nop
insb
push
std
push
lea
cmp
dec
inc
add
add
cmp
fists
add
movb
adc
push
bound
pushl
stc
sub
ljmp
sub
xor
add
xchg
sbb
js
je
stos
push
add
push
mov
add
outsl
shl
add
movsl
add
pop
movsb
add
add
add
jecxz
sub
setae
xchg
enter
scas
xor
negb
add
jmp
adc
decl
pop
add
pushl
call
xchg
cmp
add
jne
mov
add
rolb
add
inc
add
add
cwtl
stc
mov
incl
clc
dec
lea
fldenv
add
ljmp
add
imul
lret
xchg
dec
mov
push
pop
or
add
fistps
add
out
lock
add
mov
cmp
add
dec
mov
add
add
movl
add
pusha
add
cmp
add
pop
dec
xchg
mov
add
jmp
sbb
mov
add
jmp
leave
jge
push
sbb
rolb
xchg
lahf
push
push
lcall
add
and
out
sub
add
push
add
mov
add
ljmp
jbe
addl
loopne
mov
dec
mov
add
decl
add
rcrl
and
lods
and
dec
sub
jmp
add
sbb
popl
cmp
push
xor
decl
dec
int
mov
pop
push
mov
dec
push
xchg
adc
inc
add
call
mov
pop
fcomps
inc
add
movsl
add
dec
aam
add
pop
mov
rol
add
add
or
in
pop
dec
fs
movsl
add
xchg
cmp
dec
pop
add
lahf
jo
lcall
inc
add
or
ljmp
cli
inc
add
add
add
imul
fstpl
roll
addb
mov
mov
dec
iret
rcll
test
push
push
add
add
scas
adc
inc
add
stc
pop
aas
roll
add
or
add
mov
aam
add
cli
mov
mov
dec
ljmp
das
insb
loope
mov
scas
xchg
sbb
add
inc
add
iret
lock
add
scas
inc
add
negl
add
jns
add
xchg
sarb
vmread
mov
xchg
icebp
and
call
ror
sub
mov
lds
int3
mov
push
mov
inc
add
fisttpll
imul
add
mov
out
lods
push
add
inc
add
push
mov
mov
add
dec
adc
call
icebp
cmp
popa
add
aaa
cld
inc
add
mov
test
pushl
add
add
xor
incl
inc
add
rorb
mov
add
add
mov
mov
xchg
in
addb
rorl
xor
add
ss
mov
mov
add
call
dec
or
mov
mov
add
add
decb
xor
dec
dec
movsl
add
pop
sti
adc
add
jmp
or
add
push
add
adc
decl
add
stos
add
add
mov
xor
ljmp
stc
addl
movl
add
cltd
add
or
pushl
add
add
mov
bound
push
mov
into
repz
sti
bound
jmp
add
pushl
call
add
dec
sub
cmp
add
aas
nop
fwait
jecxz
jnp
add
add
push
add
cmp
jnp
call
mov
inc
add
call
ljmp
sti
cld
repz
call
dec
movb
movl
mov
add
push
add
or
add
lcall
jb
jmp
mov
add
lcall
lcall
loope
aad
inc
add
daa
add
cmp
pop
into
addl
repz
incl
dec
int3
inc
add
mov
dec
add
mov
add
pop
movsb
add
and
dec
adc
add
incl
sbb
push
add
push
add
xchg
pop
and
incl
cmc
dec
jmp
add
inc
add
cmp
out
fcoms
pop
push
cmp
add
arpl
incl
mov
xchg
push
lds
fcomp
lret
mov
add
inc
add
pop
clc
dec
sti
and
pushl
fwait
add
dec
fcmovnbe
iret
aad
add
add
add
fsts
add
add
add
movl
xor
add
sbb
fidivrs
rclb
test
sti
jl
xchg
data16
add
pop
adc
add
jmp
decl
push
fcmove
test
mov
add
cmc
mov
add
shrl
add
push
xlat
insb
fldt
mov
dec
adc
mov
add
add
sbb
sbb
add
cmp
xchg
push
inc
add
pop
sbb
inc
add
into
jb
ljmp
mov
ja
push
add
notl
add
mov
add
mov
lahf
repz
hlt
ds
mov
add
ret
add
inc
add
xor
ljmp
add
push
in
addl
xor
lcall
fcmovnbe
shrb
fmuls
add
dec
lea
call
ret
ljmp
stos
sub
scas
cmp
fcompl
pop
scas
mov
cmp
rolb
push
mov
pusha
add
push
inc
add
xchg
ds
mov
add
inc
add
add
es
jge
add
dec
and
lcall
ret
add
mov
adc
loop
and
cmp
jmp
movsl
add
add
add
or
push
push
mov
add
fdivrl
cmp
pusha
add
add
jmp
cmpsl
add
add
js
add
pop
inc
add
loope
leave
mov
call
pusha
add
test
push
inc
add
add
pop
xchg
xchg
jne
jb
std
int3
dec
sbb
pop
int3
in
rolb
mov
add
mov
call
add
lock
add
out
gs
mov
mov
sub
stc
mov
add
jmp
js,pn
add
and
popf
ljmp
add
leave
fwait
daa
add
cmp
fsubr
cmp
lahf
int3
lock
pushl
add
stc
cs
inc
add
aaa
data16
aad
mov
adc
out
jecxz
scas
out
cmp
add
push
jne
std
push
pop
xchg
movb
xchg
xor
decl
push
dec
std
sbb
add
into
mov
mov
add
pop
rolb
dec
mov
mov
sub
add
add
push
in
add
add
stos
mov
addl
add
or
add
addb
rol
add
mov
lret
mov
or
add
pop
add
jb,pt
ljmp
push
popf
stc
popf
push
xor
jmp
repnz
push
add
pop
stos
loope
cmp
outsb
xor
std
xchg
sub
cs
arpl
jmp
add
pcmpgtd
repnz
add
aaa
call
mov
cli
test
push
add
movl
jle
int
add
int
push
add
cmc
into
add
mov
add
hlt
mov
data16
or
sbb
cld
test
and
push
add
pushl
lods
jb
jmp
add
add
add
mov
add
mov
roll
mov
jbe
dec
mov
jle
adc
mov
cld
and
nop
cltd
outsb
inc
add
mov
lahf
movb
negl
xor
jmp
les
mov
imul
sbb
ja
xchg
lea
sub
xor
jmp
add
add
call
add
lret
cmp
add
push
out
dec
sub
add
add
inc
add
aad
inc
add
cltd
cmp
jmp
add
xchg
mov
add
mov
popf
out
inc
add
fstps
add
mov
roll
mov
popf
pop
rolb
loop
aad
jns
xlat
jae
cmp
fucom
add
stos
test
or
adc
decl
mov
data16
cmp
jno
ljmp
add
push
int3
cwtl
sub
jmp
add
add
loop
adc
in
pop
xchg
add
add
and
decl
add
incl
add
shr
loope
jge
ficoms
add
or
and
jmp
add
ffreep
add
call
pop
mov
push
add
cli
rolb
pop
push
mov
add
decl
movsb
add
and
clc
cmp
lea
loopne
cmpsl
add
and
push
outsl
sub
roll
dec
std
mov
fstl
decl
push
incl
imull
mov
add
mov
add
xchg
pop
add
lcall
outsb
fadds
call
jns
pop
mov
pushl
es
push
add
call
loopne
add
call
pop
add
mov
icebp
xor
jmp
dec
add
jmp
adc
jmp
add
add
js
add
outsb
outsb
add
incl
or
jg
add
stc
pop
mov
and
ljmp
faddp
add
jae
dec
xor
pushl
add
movb
xchg
arpl
jmp
add
xchg
insl
xlat
mov
cmp
sub
call
gs
sti
cmp
pop
jecxz
lods
je
add
mov
cld
sub
mov
adc
insb
std
popf
mov
ja
dec
jbe
sub
mov
jmp
ret
add
scas
ret
jg
loop
cmc
ja
add
cmpsl
add
xchg
stos
fsubrs
pop
push
leave
pop
add
call
sbb
push
addl
or
pop
add
enter
ret
stos
jmp
arpl
sti
test
mov
adc
add
add
add
add
add
pop
pop
jne
cltd
dec
and
incl
add
mov
std
fsubrl
add
scas
dec
jmp
xor
push
and
lret
addb
mov
dec
xchg
pop
clc
fcoms
sbb
adc
add
jo
decl
loopne
insb
bound
incl
add
mov
aad
add
jmp
add
sbb
xchg
lods
push
add
ss
nop
out
out
inc
add
add
ljmp
adc
inc
add
popa
add
lock
call
add
add
dec
out
loope
in
or
mov
test
cmpsb
add
add
ljmp
dec
push
add
and
push
pop
sub
in
push
pop
or
add
sub
add
jb
incl
pop
add
add
add
inc
add
add
ret
add
add
xchg
jle
mov
add
and
and
pushl
jmp
mov
aaa
lcall
incl
mov
call
add
add
push
and
xor
lcall
dec
jo
jmp
add
push
add
inc
add
mov
jge
dec
mul
add
arpl
pushl
mov
in
push
or
or
decl
add
cmpsb
add
lcall
int
cmp
or
mov
inc
add
push
mov
lahf
push
aas
mov
lods
xchg
sub
push
jp
add
call
add
shld
lret
sbb
ljmp
cmp
add
jmp
add
jg
add
mov
lret
adc
ljmp
pop
pop
and
pushl
shll
decl
addl
stos
xchg
popf
fdivl
movl
mov
mov
add
pushl
add
jmp
sti
sub
add
dec
mov
add
jge
add
lcall
ljmp
add
cli
add
add
roll
add
std
jno
pushl
dec
xchg
fnstenv
mov
cmp
add
fmull
ret
addb
addl
popa
add
mov
out
in
jae
pushl
add
pop
es
add
decl
add
xor
inc
add
xor
fwait
sub
xlat
rcrl
in
push
add
inc
add
add
cmp
add
decl
adc
push
jmp
jmp
dec
lds
scas
repz
jmp
add
xor
add
sbb
add
jmp
jno
pushl
add
sbb
call
inc
add
add
dec
jbe
jg
pusha
add
test
add
movsb
add
out
mov
add
add
xchg
xchg
icebp
sub
inc
add
jbe
sub
add
add
sti
dec
in
mov
add
dec
shr
mov
add
mov
cmp
in
adc
decl
jg
add
cld
addb
add
cmpsl
add
gs
add
sub
nop
repz
test
pop
insb
pop
add
add
outsl
out
xor
ljmp
lret
sbb
add
inc
add
mov
sahf
push
add
cmpsb
add
inc
add
inc
add
xchg
and
push
ret
pushf
push
xchg
or
addl
cmp
fdivrs
dec
hlt
sub
add
data16
lret
ss
outsl
outsb
in
repnz
cmp
mov
movsb
add
push
dec
jp
inc
add
xor
ljmp
dec
cmp
add
push
mov
call
shl
add
and
sub
add
add
ljmp
mov
mov
and
pushl
pop
xchg
mov
xor
call
add
sub
add
