add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
adc
adc
adc
adc
adc
adc
ret
ret
ret
ret
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
js
js
js
js
js
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
iret
iret
iret
iret
iret
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
jge
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
test
test
ds
xchg
inc
xchg
xchg
xchg
xchg
add
add
xchg
xchg
xchg
sbb
sbb
sbb
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
fstp
fstp
frstor
arpl
arpl
arpl
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
insl
insl
insl
insl
insl
insl
insl
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
in
in
in
in
in
in
in
in
in
in
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jp
jp
jp
jp
jp
jp
jp
jp
jp
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
das
das
das
das
das
das
das
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
nop
nop
nop
nop
push
push
push
push
push
push
adc
adc
nop
nop
nop
nop
lock
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
adc
addr16
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
test
movsb
movsb
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
fcmovnu
fcmovnu
sub
sub
sub
sub
nop
nop
jb
jb
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
fs
fs
mov
mov
js
js
js
js
js
js
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
test
test
test
test
test
test
addb
addb
addb
addb
addb
addb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fcmovnu
fcmovnu
fcmovnu
fcmovnu
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
test
test
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
ret
jno
jno
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
sti
sti
sti
sti
sti
sti
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
fldl2t
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
les
jb
jb
jb
jb
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
pop
pop
pop
pop
pop
pop
pop
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
jmp
jmp
jmp
jmp
jmp
jmp
inc
inc
inc
inc
inc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
fcmovu
fcmovu
fcmovu
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
icebp
icebp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
xlat
xlat
xlat
xlat
xlat
xlat
xlat
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lcall
lcall
lcall
lcall
lcall
lcall
lcall
lcall
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
aad
aad
aad
aad
aad
aad
aad
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loopne
repnz
nop
nop
nop
nop
or
or
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
and
and
and
and
and
and
and
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
ret
ret
ret
ret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
stos
stos
mov
test
test
test
test
test
je
je
je
je
je
je
je
je
je
je
je
je
je
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
call
call
call
call
nop
nop
div
div
div
div
div
div
div
idivl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rolb
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
fists
nop
nop
nop
nop
nop
nop
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pushf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
sub
sub
sub
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
enter
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
and
and
lock
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
xor
popa
popa
popa
popa
popa
popa
popa
popa
popa
mov
mov
mov
mov
mov
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
add
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pusha
pusha
pusha
pusha
pusha
pusha
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
or
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
and
and
and
and
mov
mov
mov
and
and
and
and
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
lea
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
or
or
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
rol
rol
rol
rol
rclb
adc
enter
pop
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
nop
nop
nop
das
das
das
das
das
das
das
das
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
fdivr
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fisubrl
test
test
test
test
xor
xor
xor
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
les
jbe
jbe
jbe
jbe
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
push
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
arpl
arpl
arpl
arpl
arpl
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
test
test
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
sbb
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
lcall
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
aad
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
lock
lock
jmp
jmp
jmp
jmp
jbe
jbe
jbe
jbe
lret
lret
lret
lret
lret
lret
lret
call
call
call
call
call
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
test
test
test
lret
lret
lret
lret
lret
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
inc
inc
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
sarl
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
test
test
test
test
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
add
add
leave
leave
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
fcmovu
fcmovu
ficompl
lcall
lcall
lcall
lcall
lcall
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
jne
jne
jne
imul
imul
imul
bound
jl
jl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
out
out
out
out
out
out
out
push
push
div
div
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
lret
lret
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
xor
xor
xor
xor
xor
xor
xor
fcomp
fcomp
fcomp
fcoms
nop
nop
nop
nop
nop
nop
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcoms
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
sbb
sbb
sbb
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
div
div
div
div
div
div
div
div
div
pop
pop
pop
pop
pop
pop
pop
pop
jle
jle
jle
fs
fs
fs
fs
fs
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ja
ja
ja
ja
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jp
jp
nop
mov
mov
mov
mov
mov
mov
mov
mov
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
test
test
test
test
test
test
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
addl
bound
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
rol
rol
rol
rol
rol
rol
rol
rol
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
subl
cs
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
addl
addl
addl
addl
addl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
stos
pop
pop
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
ss
ss
ss
ss
mov
test
test
das
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
sub
sub
sub
sub
sub
sub
sub
sub
sub
or
push
push
push
push
push
push
push
push
push
push
push
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
or
jnp
jnp
jnp
jnp
jnp
jnp
jnp
adc
adc
adc
adc
es
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmc
cmc
cmc
cmc
cmc
cmc
cmc
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
and
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
adc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sub
sub
sub
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lcall
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addl
addl
mov
mov
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
push
push
push
push
push
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
test
jp
jp
jp
jp
jp
jp
mov
mov
mov
mov
mov
mov
mov
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rclb
nop
nop
nop
nop
nop
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
popf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcmovu
fcmovu
ficoml
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
icebp
icebp
mov
mov
mov
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fistl
mov
cmc
push
push
push
or
or
or
or
or
or
or
repz
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
mov
mov
addl
addl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addb
addb
addb
addb
adcb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rol
rol
rol
rol
shll
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
scas
scas
scas
scas
scas
scas
scas
scas
lret
lret
lret
lret
lret
lret
lret
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
or
or
or
or
or
or
or
or
or
addl
addl
addl
addl
addl
addl
addl
addl
addl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
xor
xor
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
cmp
cmp
cmp
test
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
lea
lea
lea
lea
lea
lea
lea
lea
lea
push
push
ret
ret
ret
ret
ret
ret
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
or
or
or
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
xchg
and
and
and
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ss
imul
imul
test
test
test
out
enter
enter
enter
enter
enter
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
adc
in
push
add
aad
ror
push
add
mov
add
add
sbb
addr16
add
pusha
add
add
add
pminsw
add
das
and
push
add
add
pop
sub
add
test
xorl
add
adc
lahf
jns
xchg
out
popa
and
je
cmp
aam
add
jb
fld
cmpsb
sub
add
call
stos
and
call
xchg
ja
lcall
pusha
add
add
mov
add
cmpsb
add
xor
sbb
bound
or
add
xchg
xor
pushl
add
test
pop
pop
add
insb
add
ja
aam
sbb
mov
js
and
pop
scas
int
add
jnp
add
jae
mov
add
add
add
fadd
or
lods
iret
inc
add
push
add
mov
movl
into
les
sub
dec
jae
pop
loop
xchg
dec
add
xchg
and
xor
adc
or
les
add
add
mov
andl
dec
add
sub
loopne
in
dec
add
jp
lret
mov
add
add
lret
mov
mov
mov
notl
add
add
mov
les
movsl
cmp
inc
add
push
add
sarl
fiadds
add
ret
add
push
add
sub
fs
xor
add
and
dec
fadds
lahf
repnz
push
add
data16
ljmp
mov
add
ljmp
lret
add
push
xor
movsb
repz
cli
sbb
sbb
data16
add
add
je
scas
test
push
add
add
or
imul
cmp
aaa
ja
add
dec
add
add
ja
fisubrs
add
push
add
or
std
ret
scas
mov
add
pop
add
nop
clc
out
fwait
roll
mov
cmp
gs
add
pop
aas
xor
add
or
xchg
mov
aaa
scas
mov
add
sub
inc
xlat
add
loop
jno
add
bnd
jnp
cmp
sbb
add
inc
add
add
mov
add
inc
add
add
ret
push
add
add
outsl
pop
insl
movsl
xor
jno
ljmp
xor
add
in
sub
mov
nop
add
jp
outsb
add
pop
add
add
add
xchg
xlat
aaa
mov
xor
or
add
pop
add
add
add
pop
add
add
sub
xchg
inc
add
add
sub
mov
add
adc
mov
add
test
lahf
out
aam
add
jno
adc
adc
les
add
add
add
add
dec
and
cmp
inc
add
dec
add
mov
clc
ret
add
xchg
inc
and
lret
test
lods
clc
xchg
les
add
cmp
pop
or
in
fdivr
call
addr16
sbb
dec
add
jmp
add
pop
rolb
inc
ja
push
add
mov
idivb
xor
out
rcl
sbb
in
add
add
sub
push
sbb
sub
and
lods
sti
mov
cmp
and
mov
repz
adc
js
insb
add
xchg
add
add
push
fdivrs
sti
mov
add
rol
sub
xchg
adcl
mov
mull
in
pop
add
add
jae
mov
add
cmc
push
add
add
inc
add
add
dec
add
add
mov
daa
leave
sub
movsl
lock
sub
sub
mov
shll
jle
sbb
lcall
mov
repz
add
add
jb
push
add
push
add
add
add
mov
add
mov
lea
jmp
nop
cmp
mov
or
sub
jbe
lea
out
loope
shlb
shlb
add
or
mov
mov
dec
mov
push
add
repz
push
add
add
mov
inc
add
mov
add
add
inc
decl
push
add
bound
jmp
cld
outsl
in
add
inc
pop
add
pop
fwait
and
scas
fxch
cmp
add
xchg
sti
sbb
xchg
adc
inc
add
out
clc
int3
jle
xchg
repnz
arpl
fdivrl
mov
aam
add
add
jecxz
inc
or
bound
push
add
sbb
lea
inc
add
add
arpl
pop
push
add
mov
and
dec
mov
mov
jle
repnz
and
xchg
jns
mov
mov
nop
hlt
mov
mov
in
movsl
xchg
cmpsb
mov
add
lock
dec
mov
add
or
insl
jg
subl
iret
pusha
add
aad
or
cmpsb
orb
cmc
gs
test
dec
call
addr16
lahf
sbb
mov
dec
add
mov
fstpt
jl
mov
imul
jg
mov
add
clc
aaa
ret
push
add
popf
insb
add
mov
push
add
rcl
repz
loope
mov
sub
push
add
pop
add
add
ss
xchg
icebp
outsb
add
movsl
jmp
outsb
add
adc
dec
out
or
jae
add
add
add
outsb
add
pop
add
push
add
add
movsl
or
cmp
lcall
or
jp
add
add
pop
add
test
add
jmp
xchg
lea
leave
mov
add
add
add
fsts
push
mov
add
test
repz
add
add
mov
cmp
sbb
xor
mov
add
xchg
xchg
rcll
and
mov
je
inc
add
mov
mov
add
dec
push
add
cli
xchg
xchg
das
cmpsb
jae
xchg
add
popa
repz
and
add
pop
add
add
add
jnp
addr16
popa
adc
add
mov
push
add
add
jne
cmp
mov
add
outsl
fdivl
xor
and
push
add
cli
jl
sarl
lock
cmp
pop
add
std
sub
add
add
xor
fcomp
or
sub
sahf
popa
or
int3
je
pop
add
hlt
inc
add
add
jnp
jno
ficompl
sbb
mov
or
std
aam
and
shlb
mov
and
cmpsb
sub
lds
add
xlat
in
add
jnp
add
add
push
les
add
jbe
dec
add
fdivs
add
jmp
and
js
dec
add
add
add
bound
mov
and
inc
cmp
rcr
les
add
lock
mov
rorl
adc
loopne
push
add
stos
or
push
jl
sub
sub
andb
inc
add
in
lods
enter
add
pop
jp
sub
xchg
inc
add
push
mov
add
lds
pop
and
outsb
add
add
add
add
cld
fnstenv
in
mov
punpckhbw
mulb
outsb
add
shrb
add
out
rcrl
clc
jns
fnstcw
or
sahf
outsb
add
fwait
add
stos
mov
leave
sub
add
add
mov
popa
sub
adc
dec
push
add
add
push
add
mov
lock
icebp
aas
addl
add
push
les
out
cltd
lock
add
aad
in
lcall
pop
add
jnp
add
pop
pop
call
mov
mov
in
add
sbb
xor
mov
sbb
adc
js
loope
fcmovu
inc
bound
mov
cli
test
add
add
xchg
sub
cmp
movsl
sub
dec
data16
mov
mov
inc
in
rcrl
into
and
repnz
push
add
push
push
push
and
add
add
pop
mov
loop
add
ja
lahf
or
sti
imul
stos
xor
mov
arpl
mov
scas
cmp
mov
pop
sti
jg
outsb
add
add
add
pop
idivb
add
xchg
jecxz
lods
adc
jae
add
bound
push
xchg
jno
imul
incb
cltd
cld
jecxz
jmp
jmp
add
fmull
outsb
add
mov
or
notl
push
add
adc
sub
out
pop
test
ja
push
mov
aad
mov
pop
adc
jae
add
sub
mov
lods
loope
adcb
adc
mov
or
and
ret
add
or
ficompl
lea
add
add
cli
mov
push
add
adcl
mov
cmp
push
dec
add
adc
arpl
sbb
or
fstl
add
dec
mov
fbstp
push
int3
adc
mov
repz
pop
jle
cmp
repz
sbb
sarl
leave
ds
fcompl
and
or
int3
cmp
add
mov
jle
add
rcrl
cmp
mov
pop
sub
sub
add
test
sub
or
add
and
pop
add
mov
mov
lret
es
int
inc
add
push
add
inc
add
sub
lcall
add
fcompl
mov
mov
cli
hlt
aad
stos
jae
sbb
test
inc
add
notb
inc
add
add
or
and
aad
add
add
mov
test
cltd
push
add
test
push
add
mov
pop
ret
sbb
add
push
and
add
sti
call
or
inc
icebp
xor
add
cmp
mov
add
adc
push
add
adc
add
xchg
addr16
cld
shr
adc
and
movsl
and
push
add
add
xchg
inc
add
add
add
or
leave
xor
push
sbb
add
pop
pop
mov
add
jg
add
xchg
ja
insl
jns
add
pop
add
adc
inc
add
xchg
hlt
pop
push
add
pcmpgtd
popa
inc
add
xchg
in
and
add
add
sub
dec
add
ja
arpl
or
sub
cmp
sahf
jp
rcll
sub
fnstsw
xchg
push
add
add
js
xor
add
hlt
mov
popa
mov
shl
and
rcl
mov
pop
xchg
xor
pop
cmp
mov
or
je
and
jne
mov
iret
ljmp
or
outsb
add
subl
popf
je
inc
movsb
xlat
mov
jnp
add
fnstenv
xor
mov
add
out
stc
mov
push
add
mov
add
mov
in
add
xor
in
mov
dec
stc
arpl
add
mov
sbb
sahf
testl
jg
or
cli
add
xchg
xchg
test
add
je
and
push
add
or
inc
insl
inc
add
idivl
add
add
add
adc
in
add
jp
dec
insl
pusha
add
push
add
loope
add
sbb
cltd
call
xor
inc
add
movsb
xchg
andb
mov
add
jmp
rcr
cmp
sahf
pop
imul
add
bound
insb
add
add
mov
out
add
sarl
add
pop
add
add
cli
scas
mov
mov
push
add
mov
pop
add
xor
outsb
add
dec
pop
adc
int
pushf
ljmp
add
bound
jnp
xchg
je
inc
add
cmp
int
pusha
add
fisubrl
sbb
in
daa
mov
mov
add
clc
cltd
idivl
lods
cmpsb
shll
add
pushf
push
add
out
dec
add
cmp
repnz
jmp
add
push
inc
add
sub
popa
das
std
loopne
add
lea
add
inc
out
pop
add
icebp
jo
mov
add
cld
dec
add
bound
test
daa
mov
add
push
mov
int
mov
lods
in
xlat
adc
divl
or
mov
add
adc
lds
add
adc
out
ja
push
imul
push
mov
dec
jp
pop
add
add
shl
je
lds
add
add
xor
or
std
rolb
add
outsb
add
add
jge
std
lea
add
cmc
add
push
cmc
cli
pop
mov
add
hlt
pusha
add
add
push
add
js
gs
sub
jbe
cmp
add
mov
sbb
add
add
addr16
add
repnz
add
mov
adc
or
jg
unpcklps
sbb
xor
xchg
sbbb
sbb
outsb
add
add
hlt
insl
dec
add
add
outsb
add
add
add
xor
cmp
pop
add
dec
add
mov
and
lret
xchg
cmp
xor
and
jne
or
repnz
add
add
cmp
mov
fsts
jp
pop
add
add
cmpsl
in
enter
dec
add
ja
add
rcll
mov
enter
daa
pop
mov
loope
mov
mov
mov
push
or
cld
sub
pop
add
push
bound
das
mov
push
add
out
aad
mov
add
mov
jmp
mov
inc
add
loope
add
sbb
aam
cs
dec
add
and
loopne
stc
arpl
pop
push
lock
sub
xchg
loopne
add
add
addr16
bound
or
jge
add
add
jae
add
stos
lods
inc
ret
rcrl
add
stos
add
inc
add
add
add
push
add
adc
shrb
add
add
cwtl
add
sbb
add
lcall
add
push
add
xchg
mov
add
into
pop
aaa
int
add
arpl
and
push
add
and
jns
ror
aaa
adc
jg
pushf
out
insb
add
fwait
das
and
push
popa
fistl
sbb
sbb
aaa
push
fildl
add
push
add
mov
mov
cld
xor
jmp
out
ljmp
fdiv
lret
out
cwtl
out
cmp
mov
movlps
out
ljmp
and
add
add
adc
movsb
mov
cli
or
mov
and
mov
xchg
imul
or
sbb
or
in
das
jmp
add
stc
add
add
out
dec
in
push
data16
movsl
inc
icebp
aad
xchg
bound
pop
mov
add
test
and
cmp
push
add
cltd
dec
iret
or
in
dec
lcall
add
into
cmpsb
addr16
cwtl
mov
add
or
sub
pushf
scas
std
xchg
jbe
lock
add
add
add
ds
jle
or
movsb
cmc
arpl
push
add
jp
add
pusha
add
flds
out
add
inc
jne
add
dec
add
add
add
loope
add
add
add
mov
add
out
sahf
cwtl
push
cmp
call
add
add
xor
push
dec
add
outsb
add
inc
add
sti
loopne
ljmp
cltd
std
cmp
add
sbb
add
xor
xchg
into
dec
add
add
add
test
orl
pop
add
mov
xchg
out
mov
jg
repz
fbld
std
out
push
add
pushf
add
mov
sarb
sahf
pop
cmp
aas
mov
ja
mov
add
pushf
xlat
add
add
stc
mov
mov
mov
add
in
dec
xchg
in
push
add
outsb
add
das
test
pop
loope
mov
inc
push
shl
mov
mov
push
inc
and
cmpsb
cmp
icebp
mov
inc
pop
stos
leave
scas
imul
mov
push
add
mov
pop
add
outsl
outsl
arpl
push
in
mov
sbb
mov
add
and
popf
sub
xor
dec
add
shlb
add
jl
sub
pop
in
test
add
les
add
add
inc
fcmovnbe
stos
out
dec
fdivr
lock
out
shl
jns
add
int
or
clc
fiaddl
ja
cli
or
adc
loopne
add
not
adc
add
dec
add
mov
cmp
cwtl
xchg
or
lea
lret
mov
lahf
pop
add
scas
mov
fcompl
fdivrs
mov
dec
add
add
cmp
inc
mov
filds
xchg
xorl
add
lret
add
iret
mov
fwait
add
scas
notb
push
mov
gs
xor
test
jl
jo
push
mov
pop
xor
enter
ret
cwtl
xor
sti
scas
mov
imul
add
or
mov
sbb
out
xlat
incl
fmuls
jo
loope
xchg
pop
add
repnz
dec
add
add
pop
add
inc
lock
dec
xor
fists
hlt
lcall
addb
shlb
push
pop
out
test
add
mov
je
push
adc
call
xor
lds
inc
add
sbb
aad
insb
add
jg
xchg
outsl
test
sbbb
ficoml
movl
cmp
add
pop
mov
outsl
dec
jmp
repz
movsl
pop
mov
mov
mov
sub
or
mov
inc
iret
addl
incl
cmc
test
jp
ror
push
out
outsl
or
add
add
add
lahf
pop
adc
push
add
xchg
sbb
mulb
adcb
movsb
jbe
sub
mov
add
or
add
pop
jno
outsb
add
xor
jmp
mov
add
mov
insb
add
jmp
cmpsb
mov
mov
mov
xchg
xor
cmp
xor
adc
out
mov
pop
add
jle
jne
mov
jae
add
adcb
add
pop
add
andl
out
call
pop
add
xchg
pop
cwtl
out
add
xchg
sub
mov
add
pop
js
inc
cld
push
pop
aaa
testb
push
scas
in
std
gs
push
mov
mov
sub
movl
lea
push
clc
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jne
push
jp
std
fistps
adc
loope
push
add
sub
add
mov
add
add
mov
add
xchg
add
test
rcrl
orb
cwtl
pop
mov
inc
outsb
add
adc
add
cmp
iret
inc
in
jno
add
add
cmp
jne
or
fwait
push
sbb
add
out
jo
lods
jl
cmp
pop
test
lock
cmpl
mov
ficoml
fmull
or
sub
xchg
mov
add
add
add
adc
mov
inc
cmp
add
xchg
outsb
add
adc
fiadds
imul
sub
add
adc
push
add
add
ljmp
push
add
or
cmp
fwait
outsb
add
aam
mov
and
mov
std
push
mov
add
dec
dec
add
mov
subb
hlt
jl
sub
mov
adc
loop
jecxz
loop
jg
and
jae
add
xchg
mov
add
add
cmc
add
mov
andb
cwtl
cs
pop
add
xor
add
xchg
lock
into
inc
add
add
gs
xchg
adcl
add
dec
sahf
imul
add
add
jb
mov
fildll
sti
mov
mov
cli
bound
mov
mov
push
out
add
rcrb
add
lret
xor
cmpsb
test
negb
test
add
add
shl
aam
mov
mov
add
add
mov
rclb
xchg
xor
jp
xchg
lret
lods
rcrb
push
add
xor
scas
ljmp
add
add
or
cld
sub
and
sub
mov
cmc
push
add
call
push
add
jns
add
add
cmp
repz
arpl
lret
insl
push
push
add
cs
fmuls
cmpb
sub
out
cmpsb
addr16
jne
jbe
sbb
test
pusha
add
add
add
das
dec
add
push
add
add
fmul
jp
xlat
ret
mov
mov
ljmp
pop
add
mov
jne
add
lret
adc
jne
mov
imul
popa
mov
push
or
sbb
cmpsb
push
add
ficoms
or
mov
test
add
add
add
push
add
sub
xor
add
dec
mov
dec
int3
sti
sbb
cltd
inc
imul
ret
and
add
aas
mov
cmp
stos
dec
call
add
add
xchg
adc
push
lock
loope
add
push
add
sbb
push
add
sbbl
sbb
lods
push
add
and
aad
sub
lret
data16
jo
dec
fcom
fldenv
add
lret
lret
cld
popa
push
loope
add
add
pop
js
jne
fwait
mov
lods
add
xchg
xlat
out
add
pop
push
lcall
add
xor
sti
cwtl
rclb
cld
push
fistps
add
inc
add
scas
adc
cmp
mov
sub
mov
pop
add
and
xlat
cmp
push
add
sub
or
push
sbb
sarl
and
pop
pop
adc
and
jo
mov
cmp
sub
adc
dec
add
add
sti
add
and
int3
pop
mov
add
out
xor
imull
mov
ljmp
add
cltd
mov
mov
notb
add
push
xrelease
add
add
outsb
add
cwtl
loop
dec
add
add
push
and
mov
out
push
push
add
push
push
rclb
test
stc
dec
push
add
lret
xor
inc
sub
pop
int
nop
and
scas
popl
adc
sar
or
push
dec
add
add
fsubrs
pop
add
xor
add
xchg
pop
add
pop
lahf
add
lock
push
shrb
popa
scas
shlb
movsl
into
and
dec
add
ret
add
and
add
popl
add
pusha
add
xorl
xor
add
push
dec
add
mov
ss
arpl
or
test
cmp
mov
add
addr16
sub
and
jne
imul
test
fildl
cltd
scas
adc
push
add
push
add
xor
enter
inc
cmp
jp
insb
add
sub
aas
xchg
add
sbb
add
add
add
mov
mov
imul
sti
stc
fldenv
jp
xchg
jp
adc
jne
dec
add
add
adc
fsubl
scas
push
add
pop
jl
and
fdivrp
in
mov
cld
mov
dec
add
add
out
sbb
push
add
mov
jbe
jns
sbb
jno
add
xchg
xor
add
jne
into
andl
in
loop
xchg
call
je
xor
dec
mov
jbe
xchg
pop
add
dec
jo
mov
xchg
pop
push
pop
sarl
add
add
cmc
sub
sbb
jecxz
movsl
mov
xchg
mov
aad
or
add
lock
xor
jno
mov
mov
cltd
jo
push
sub
js
push
add
mov
add
inc
adc
jge
add
add
add
mov
icebp
mov
sub
add
add
mov
add
mov
xchg
mov
idivb
add
mov
add
aaa
jnp
aam
fstp
orl
rolb
xor
cmp
ret
outsb
add
les
adc
pop
add
jne
push
mov
mov
add
add
add
push
jl
or
ret
dec
add
inc
mov
add
fistpll
bswap
xor
repnz
add
movsb
sbb
int
dec
sar
sahf
dec
pop
sbb
mov
add
add
shrb
jmp
in
push
adc
insl
cli
jl
cmpsl
and
add
add
pop
push
push
add
popa
jae
jae
add
add
push
add
andl
add
cltd
add
mov
add
and
xchg
out
ja
rorl
sbb
lods
mov
push
jmp
pop
add
int3
push
push
test
pushf
pop
add
pop
jmp
add
test
push
stos
sub
add
sbb
add
repz
rcrb
mov
enter
add
add
ret
push
mov
ret
test
xor
push
xor
add
mov
add
loope
add
popa
fwait
lock
jmp
sbb
add
aad
add
fldcw
mov
pusha
add
cmp
sub
push
ret
push
add
xchg
jge
pop
or
xchg
ja
add
jmp
add
fwait
pop
add
cwtl
iret
sbb
test
and
add
add
aas
jbe
mov
add
add
dec
mov
add
mov
add
add
adc
mov
cmp
add
or
sub
mov
add
add
into
je
xchg
add
inc
add
adc
dec
add
pushf
idivl
sub
jmp
in
test
add
add
in
add
xor
imul
jmp
scas
mov
sub
stos
dec
jno
add
int
lahf
inc
add
fisubs
pop
jge
mov
pop
add
add
outsb
add
std
outsb
add
and
cmc
cmc
jnp
add
jl
stc
ret
and
mov
add
in
cmp
imul
stos
adc
xor
mov
ror
imul
das
adc
jge
popf
icebp
jecxz
out
sbb
lret
xchg
jecxz
cmpsb
ja
add
sahf
mov
out
mov
add
mov
push
add
add
mov
ret
adc
dec
repnz
outsl
stos
sub
adc
xchg
add
xchg
and
adc
mov
sbb
sbb
incb
add
or
mov
test
out
add
push
add
scas
pop
add
xchg
mov
aaa
sub
popa
ja
add
add
add
mov
dec
add
add
in
add
add
flds
add
push
add
addr16
xor
and
ja
dec
xchg
mov
daa
scas
jne
add
movsl
js
in
inc
add
repz
jbe
xor
mov
push
sti
je
mov
rcr
out
rcll
mov
jbe
push
add
aam
add
add
xchg
mov
mov
add
mov
xlat
inc
arpl
add
popf
or
jns
add
add
jbe
cmp
pop
lcall
ljmp
fistpll
pop
add
sbb
xchg
in
push
add
add
lret
outsb
add
cmp
sbb
lcall
mov
repz
or
fnsave
outsl
bsr
pop
stc
sbb
xor
notb
add
imul
fwait
stc
ljmp
out
add
or
dec
add
add
sahf
dec
inc
add
add
mov
add
add
cmp
loope
add
jecxz
testl
rclb
add
xlat
test
or
push
add
shrb
pusha
add
sub
add
ja
jbe
push
add
movsl
enter
inc
pushf
mov
mov
push
into
inc
in
mov
enter
aas
mov
mov
adc
insb
add
add
add
mov
cmp
cmp
or
div
mov
mov
add
add
add
push
add
stos
or
cli
xor
data16
out
inc
jle
sti
inc
add
in
out
add
push
sarl
add
aas
xor
add
add
aas
and
out
data16
mov
shlb
add
test
add
xor
daa
sub
ja
jle
inc
repnz
into
xlat
inc
js
popf
rcll
add
test
mov
mov
mov
add
pusha
add
cmpsl
mov
xlat
mov
adc
sub
aaa
sbb
sub
inc
add
inc
add
int
dec
repnz
jmp
add
push
add
add
add
pop
in
jnp
ljmp
and
jns
jp
imul
and
add
scas
mulb
aaa
das
js
xchg
stos
jge
movsb
aas
push
add
mov
dec
add
xor
sub
dec
add
loopne
add
add
sub
data16
add
pop
add
add
add
mov
mov
test
xchg
xchg
add
rolb
imul
add
or
xor
nop
sbb
or
add
jle
add
lcall
mov
outsl
push
cmp
movsb
in
fwait
adc
icebp
mov
popa
out
repnz
cmp
ret
movsb
inc
add
sub
scas
movsl
adc
int3
xor
inc
add
add
fsubs
daa
jae
popf
cld
xor
out
mov
fld
mov
in
imulb
add
lds
and
push
add
sub
add
adc
scas
xlat
test
pop
mov
xchg
addr16
cmpsb
enter
inc
ret
lock
add
add
leave
pop
mov
jle
movsl
fmuls
add
dec
sbbb
and
das
stc
add
add
inc
add
jecxz
xchg
xor
cwtl
test
xchg
lods
out
test
add
jecxz
pop
or
pop
sub
cltd
push
test
mov
add
xor
pop
cmp
es
fidivrl
scas
faddl
cmpsb
aaa
loope
adc
or
mov
add
clc
ljmp
jno
sub
xor
cmp
std
iret
cmpsl
shl
add
mov
add
add
imul
add
mov
jecxz
add
xchg
scas
sahf
inc
dec
add
shlb
pop
dec
pop
rol
or
jne
add
jmp
add
xchg
imul
add
mov
add
cmp
into
into
mov
bnd
adc
les
add
pop
mov
push
add
leave
push
fs
jb
ss
cmpsb
xchg
adc
pop
add
movsl
or
dec
add
or
stc
aaa
jne
add
add
sahf
push
add
popf
push
sbb
inc
add
rolb
pop
mov
shr
lds
add
push
or
pop
add
add
add
jmp
jae
add
add
push
jno
add
inc
add
add
out
add
out
cmp
ret
add
adc
and
or
fldcw
daa
nop
jb
add
cltd
subb
add
sbb
movsl
fcmovnbe
in
add
xor
dec
mov
inc
add
decb
add
mov
push
add
mov
add
add
shlb
into
insl
add
sbb
add
jbe
cmpsb
cltd
sahf
stos
xor
jle
arpl
imul
mov
fisubl
mov
jne
lret
xchg
rcll
add
xor
popa
add
pop
lock
out
aam
xchg
and
mov
jb
scas
movsb
xchg
stos
or
add
jnp
dec
outsl
data16
or
xor
mov
push
xchg
push
add
pusha
add
out
clc
repnz
nop
nop
jae
add
jge
aad
popa
push
mov
xchg
ret
adc
add
sbb
pop
add
call
clc
repnz
nop
nop
jae
xchg
inc
xchg
add
or
repnz
nop
nop
jae
xchg
mov
push
add
push
mov
xchg
ret
roll
insl
jae
add
mov
mov
clc
repnz
nop
nop
jae
call
cmp
fadds
nop
nop
jae
add
in
test
add
nop
push
mov
leave
nop
jmp
add
add
inc
cld
fwait
add
cld
nop
nop
jae
add
add
mov
xchg
enter
nop
push
mov
leave
nop
jmp
stc
jge
add
add
clc
repnz
nop
nop
jae
data16
adc
jbe
add
add
add
stc
ror
outsl
cmp
nop
push
mov
leave
nop
jmp
xor
add
int3
stos
popa
clc
repnz
nop
nop
jae
add
xchg
pause
pushf
push
push
push
mov
xchg
ret
add
add
xchg
add
dec
add
jge
clc
repnz
nop
nop
jae
shll
and
clc
repnz
nop
nop
jae
inc
add
add
add
mov
nop
push
mov
leave
nop
jmp
inc
aaa
add
dec
imul
repnz
nop
nop
jae
fwait
pop
inc
add
cld
aad
fdivs
nop
nop
jae
mov
push
in
add
add
mov
cmp
ret
repz
insl
dec
repz
add
rolb
cld
nop
nop
jae
xor
call
add
out
pop
push
mov
xchg
ret
repz
lret
mov
jnp
clc
repnz
nop
nop
jae
jae
add
imul
mov
push
clc
repnz
nop
nop
jae
add
loop
int3
add
mov
fwait
clc
repnz
nop
nop
jae
xchg
pop
add
jmp
push
clc
repnz
nop
nop
jae
add
xchg
add
sti
add
xchg
add
xchg
add
add
mov
stc
adcl
lods
mov
xchg
ret
add
int3
add
push
in
call
les
add
add
repnz
nop
nop
jae
add
jg
clc
repnz
nop
nop
jae
add
add
outsl
pop
push
mov
xchg
ret
xchg
add
add
call
mov
add
nop
nop
jae
xor
add
xchg
jae
mov
push
clc
repnz
nop
nop
jae
add
test
movsb
push
add
add
cld
nop
nop
jae
add
add
lret
int
call
nop
jae
dec
add
sbb
mov
xchg
ret
add
add
add
add
add
push
push
mov
xchg
ret
add
dec
add
add
inc
mov
add
jo
clc
dec
xorl
clc
repnz
nop
nop
jae
sbb
bound
xor
repnz
nop
nop
jae
inc
out
dec
jae
pop
clc
repnz
nop
nop
jae
xchg
add
pop
add
cwtl
mov
cld
nop
nop
jae
add
sbb
aad
loopne
test
nop
push
mov
leave
nop
jmp
add
add
pop
nop
push
mov
leave
nop
jmp
add
add
add
test
pop
xor
clc
repnz
nop
nop
jae
add
pop
add
clc
repnz
nop
nop
jae
jmp
sti
push
add
call
nop
push
mov
leave
nop
jmp
xchg
add
add
loopne
add
sbb
jne
nop
push
mov
leave
nop
jmp
xchg
mov
loop
stos
dec
nop
push
mov
leave
nop
jmp
add
add
and
repnz
nop
nop
jae
add
dec
dec
jg
stc
xchg
add
clc
repnz
nop
nop
jae
sbb
add
add
imull
push
inc
sbb
nop
jmp
inc
cwtl
inc
dec
movsl
add
clc
repnz
nop
nop
jae
add
add
add
call
mov
push
mov
xchg
ret
add
add
add
sbb
jne
clc
repnz
nop
nop
jae
add
insl
xchg
not
nop
push
mov
leave
nop
jmp
adc
add
add
and
sub
ja
test
pop
add
clc
repnz
nop
nop
jae
add
dec
mov
clc
repnz
nop
nop
jae
call
inc
xor
push
nop
push
mov
leave
nop
jmp
add
mov
stc
add
loop
pop
nop
push
mov
leave
nop
jmp
adc
cwtl
pop
xchg
add
jmp
mov
xchg
ret
add
xchg
lcall
clc
repnz
nop
nop
jae
add
roll
inc
inc
mov
fcoms
xchg
xchg
inc
add
lret
add
add
jle
cmp
xchg
ds
push
mov
xchg
ret
push
xchg
test
dec
add
clc
repnz
nop
nop
jae
stc
mov
add
je
clc
repnz
nop
nop
jae
add
and
nop
push
mov
leave
nop
jmp
add
xchg
add
mov
xchg
ret
add
jae
xchg
sub
xchg
mov
or
stos
sub
icebp
test
push
clc
repnz
nop
nop
jae
repz
add
add
mov
arpl
repnz
nop
nop
jae
dec
cld
jg
mov
movb
cld
nop
nop
jae
add
add
add
add
add
clc
repnz
nop
nop
jae
call
mov
fistpl
clc
repnz
nop
nop
jae
out
add
lahf
pop
ss
movsb
cmp
clc
repnz
nop
nop
jae
add
pop
add
push
add
in
leave
nop
jmp
push
aaa
add
add
cld
mov
loopne
clc
repnz
nop
nop
jae
cld
aaa
add
add
repnz
rep
nop
push
mov
leave
nop
jmp
add
mov
xchg
add
add
xabort
cld
nop
nop
jae
pop
add
test
adc
test
add
clc
repnz
nop
nop
jae
add
or
addb
cmp
ret
add
call
and
nop
nop
jae
jae
jne
sbb
adc
add
test
xchg
adc
inc
add
mov
call
inc
add
dec
adc
add
lcall
push
mov
leave
nop
jmp
add
sub
jl
mov
out
stos
clc
repnz
nop
nop
jae
sbb
add
jmp
mov
add
dec
jae
dec
add
dec
add
dec
and
repnz
nop
nop
jae
sub
repz
add
mov
clc
repnz
nop
nop
jae
cwtl
add
add
add
fld1
nop
push
mov
leave
nop
jmp
add
mov
xor
nop
push
mov
leave
nop
jmp
pop
add
add
repz
clc
repnz
nop
nop
jae
add
sar
cld
add
jne
sti
push
mov
xchg
ret
int3
add
add
dec
lret
mov
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
shrl
add
jne
sti
nop
sahf
jle
or
mov
leave
nop
jmp
insl
xchg
add
movsb
lods
ret
mov
xchg
cmpl
nop
jae
xchg
add
cld
nop
nop
jae
in
add
cld
add
xchg
aad
clc
repnz
nop
nop
jae
loop
cld
add
add
loop
mov
push
mov
xchg
ret
in
add
dec
inc
push
add
or
add
clc
repnz
nop
nop
jae
loop
add
add
cld
nop
nop
jae
lahf
dec
repz
add
jp
and
push
mov
leave
nop
jmp
sti
imul
jg
mov
add
jmp
clc
repnz
nop
nop
jae
add
lahf
add
add
movl
jg
incl
mov
fwait
push
push
mov
xchg
ret
dec
in
add
add
add
shll
nop
nop
jae
movsb
add
cwtl
mov
pop
or
xchg
sub
inc
add
in
add
add
add
add
shr
fcomip
clc
repnz
nop
nop
jae
add
add
shlb
cld
nop
nop
jae
add
pop
sub
pop
xchg
xchg
rorb
add
or
repnz
nop
nop
jae
add
xchg
insl
imul
mov
clc
repnz
nop
nop
jae
add
in
roll
sar
cld
nop
nop
jae
mov
add
aam
mov
clc
repnz
nop
nop
jae
add
int
dec
add
cmp
add
add
roll
pop
add
and
mov
push
mov
leave
nop
jmp
add
cwtl
dec
jmp
add
nop
push
mov
leave
nop
jmp
loop
adc
add
add
add
popa
add
clc
repnz
nop
nop
jae
pop
dec
add
add
add
pop
clc
repnz
nop
nop
jae
add
xchg
add
mov
add
clc
repnz
nop
nop
jae
xor
or
push
add
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
xchg
add
insl
jge
pop
and
bound
xchg
ret
push
mov
push
imul
loop
mov
xchg
ret
add
jge
call
add
nop
nop
jae
add
data16
add
xor
pop
inc
add
add
sbb
add
lret
add
add
add
sub
add
repz
cld
incl
add
repnz
nop
nop
jae
sti
out
test
nop
nop
jae
sub
inc
add
mov
clc
repnz
nop
nop
jae
add
movsb
int
push
clc
repnz
nop
nop
jae
fwait
lret
add
cld
fistpl
nop
jae
add
sbb
pusha
clc
repnz
nop
nop
jae
add
add
jne
clc
repnz
nop
nop
jae
add
add
add
sbb
test
cli
clc
repnz
nop
nop
jae
sti
jae
cld
mov
clc
repnz
nop
nop
jae
add
add
int
sub
pop
nop
push
mov
leave
nop
jmp
add
jae
add
add
clc
repnz
nop
nop
jae
int
jmp
lret
sbb
push
mov
xchg
ret
lahf
test
add
push
cmp
push
mov
leave
nop
jmp
add
mov
xchg
cwtl
mov
in
push
mov
xchg
ret
lahf
imul
add
cld
dec
test
repnz
nop
nop
jae
sub
lcall
push
clc
repnz
nop
nop
jae
out
xchg
stc
add
jge
mov
mov
leave
nop
jmp
add
cld
imul
aaa
rep
nop
push
mov
leave
nop
jmp
mov
fwait
cld
movsb
in
inc
in
cld
push
mov
xchg
ret
add
push
push
sti
repz
mov
push
clc
repnz
nop
nop
jae
pop
add
mov
clc
repnz
nop
nop
jae
push
mov
dec
cmp
nop
push
mov
leave
nop
jmp
int
add
add
add
add
add
leave
nop
jmp
add
mov
fists
in
stos
add
add
inc
fwait
add
movsb
add
add
fwait
clc
repnz
nop
nop
jae
jg
add
add
add
add
nop
push
mov
leave
nop
jmp
mov
add
incl
mov
mov
add
inc
lahf
aad
pop
or
repnz
nop
nop
jae
aad
xchg
cwtl
jg
cmp
jg
int3
repz
call
nop
jmp
inc
lret
js
xchg
loop
cmp
repnz
nop
nop
jae
jne
push
movsb
dec
add
add
jle
inc
add
add
pop
inc
add
add
inc
sub
nop
jmp
add
xchg
sti
insl
add
add
push
mov
xchg
ret
add
add
add
add
cld
nop
nop
jae
add
sarl
sbb
clc
repnz
nop
nop
jae
dec
lret
xchg
add
aas
add
add
add
add
pop
add
lcall
add
rep
nop
push
mov
leave
nop
jmp
xchg
adc
int
xor
out
cmpl
mov
leave
nop
jmp
int3
pop
roll
add
jne
jnp
add
in
cwtl
mov
push
negl
cld
nop
nop
jae
mov
add
clc
repnz
nop
nop
jae
mov
jmp
mov
repnz
nop
nop
jae
pop
push
add
sbb
clc
repnz
nop
nop
jae
xchg
add
fwait
add
stos
dec
clc
repnz
nop
nop
jae
jae
aad
xchg
add
call
clc
repnz
nop
nop
jae
add
push
adc
fwait
subl
push
mov
xchg
ret
add
add
push
add
mov
clc
repnz
nop
nop
jae
loop
fwait
pop
sub
insl
cmp
nop
push
mov
leave
nop
jmp
add
data16
mov
clc
repnz
nop
nop
jae
imul
rorl
nop
nop
jae
call
jae
adcl
and
lods
add
add
jbe
xchg
xor
push
mov
xchg
ret
jae
stc
add
mov
mov
nop
push
mov
leave
nop
jmp
roll
cwtl
add
mov
xchg
ret
add
mov
jg
in
mov
push
mov
xchg
ret
add
add
xchg
sbb
repz
mov
xchg
ret
add
mov
add
xchg
call
clc
repnz
nop
nop
jae
int3
add
stc
pop
dec
push
mov
xchg
ret
add
pop
int3
mov
cmpb
nop
nop
jae
add
add
lret
add
cld
nop
nop
jae
add
cld
add
add
lret
clc
repnz
nop
nop
jae
xchg
out
add
push
add
pop
push
mov
xchg
ret
add
add
push
inc
jmp
pop
fwait
push
mov
xchg
ret
mov
aaa
dec
add
add
call
mov
xchg
ret
stc
add
movsb
lcall
mov
xchg
ret
repz
loop
adc
aad
idivb
cmp
nop
jmp
add
data16
in
add
mov
cld
nop
nop
jae
cld
movsb
xchg
pop
add
add
mov
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
pop
add
mov
dec
nop
push
mov
leave
nop
jmp
add
push
call
or
arpl
nop
jae
push
add
int3
push
cld
add
add
repnz
nop
nop
jae
adc
mov
dec
add
sub
aad
xor
clc
repnz
nop
nop
jae
cwtl
add
mov
lret
mov
nop
push
mov
leave
nop
jmp
lahf
movsb
xchg
mov
clc
repnz
nop
nop
jae
aaa
add
dec
add
mov
idiv
repnz
nop
nop
jae
add
roll
lret
push
clc
repnz
nop
nop
jae
sbb
push
sbb
int3
repz
mov
pusha
clc
repnz
nop
nop
jae
add
add
outsl
push
push
mov
xchg
ret
lahf
jae
add
int3
jae
add
add
mov
xchg
ret
dec
int
push
add
cmp
repnz
nop
nop
jae
mov
add
add
jmp
mov
xchg
ret
add
pop
add
lods
and
imul
cld
nop
nop
jae
add
jge
sar
cld
nop
nop
jae
add
inc
add
clc
repnz
nop
nop
jae
lret
add
add
pop
clc
repnz
nop
nop
jae
add
add
ret
add
clc
repnz
nop
nop
jae
jg
add
add
mov
push
mov
xchg
ret
xchg
loop
mov
add
push
push
mov
xchg
ret
add
repz
add
test
idiv
clc
repnz
nop
nop
jae
xchg
push
add
mov
xchg
ret
lret
xchg
pop
movsb
jne
push
clc
repnz
nop
nop
jae
dec
add
add
dec
movsb
cmp
mov
xchg
ret
mov
dec
add
insl
xchg
nop
push
mov
leave
nop
jmp
add
lret
add
dec
pop
clc
repnz
nop
nop
jae
fwait
sbb
pop
xchg
repz
xor
mov
out
out
clc
clc
repnz
nop
nop
jae
mov
mov
call
nop
jmp
add
xchg
clc
repnz
nop
nop
jae
dec
sbb
lcall
clc
repnz
nop
nop
jae
xchg
add
stc
add
add
add
nop
nop
jae
add
mov
fwait
add
add
add
add
nop
push
mov
leave
nop
jmp
adc
add
add
xchg
add
clc
repnz
nop
nop
jae
jmp
dec
inc
add
push
mov
xchg
ret
push
add
add
ret
add
push
mov
xchg
ret
add
dec
add
dec
mov
mov
push
mov
xchg
ret
xchg
or
movzwl
nop
push
mov
leave
nop
jmp
add
cld
add
add
clc
repnz
nop
nop
jae
add
xchg
add
add
cltd
mov
nop
push
mov
leave
nop
jmp
cld
add
add
push
dec
add
xchg
add
clc
repnz
nop
nop
jae
add
fwait
add
fwait
insl
stos
clc
repnz
nop
nop
jae
int3
add
int
add
add
add
insl
inc
add
mov
add
push
mov
xchg
ret
cwtl
mov
mov
add
dec
int3
and
add
repnz
nop
nop
jae
add
mov
cmp
mov
xchg
ret
add
add
xchg
clc
repnz
nop
nop
jae
repz
enter
clc
repnz
nop
nop
jae
pop
add
pop
push
add
out
adc
repnz
nop
nop
jae
mov
insl
data16
lahf
mov
clc
repnz
nop
nop
jae
add
mov
ljmp
add
call
int
add
lret
push
mov
xchg
ret
fwait
add
add
dec
int
add
insl
mov
clc
repnz
nop
nop
jae
add
insl
test
add
add
cld
nop
nop
jae
aaa
add
stc
xchg
sub
add
add
nop
push
mov
leave
nop
jmp
test
add
add
dec
mov
clc
repnz
nop
nop
jae
add
cwtl
add
dec
inc
fistpl
clc
repnz
nop
nop
jae
add
fwait
stc
push
add
add
inc
push
push
mov
xchg
ret
cld
dec
add
dec
add
add
addl
sti
pop
add
add
movl
clc
repnz
nop
nop
jae
dec
jae
dec
add
mov
ret
and
add
repnz
nop
nop
jae
rcrl
inc
add
sub
xor
repnz
nop
nop
jae
insl
insl
add
ds
add
clc
repnz
nop
nop
jae
add
mov
stc
add
nop
nop
jae
add
add
add
add
pop
mov
nop
push
mov
leave
nop
jmp
mov
lret
add
xchg
je
cmp
add
nop
jmp
add
dec
push
clc
repnz
nop
nop
jae
fwait
adc
repz
inc
add
mov
cld
xchg
add
mov
add
push
push
mov
xchg
ret
mov
aad
add
add
clc
repnz
nop
nop
jae
loop
sub
add
push
clc
repnz
nop
nop
jae
add
jae
call
clc
repnz
nop
nop
jae
add
bound
pop
mov
clc
repnz
nop
nop
jae
add
mov
es
push
mov
xchg
ret
jg
out
mov
push
clc
repnz
nop
nop
jae
add
add
add
mov
xorl
clc
repnz
nop
nop
jae
lcall
add
clc
repnz
nop
nop
jae
add
stc
pop
xor
clc
repnz
nop
nop
jae
add
movb
pop
fwait
push
mov
xchg
ret
imul
xchg
add
jo
inc
add
add
in
lsl
clc
repnz
nop
nop
jae
mov
jbe
sub
jbe
nop
push
mov
leave
nop
jmp
add
cwtl
cld
push
adc
clc
repnz
nop
nop
jae
stc
push
mov
add
cld
nop
nop
jae
add
add
add
enter
nop
nop
jae
add
int3
xrelease
sub
nop
jmp
add
add
add
xchg
je
nop
push
mov
leave
nop
jmp
loop
mov
ds
clc
repnz
nop
nop
jae
add
int
add
mov
add
popl
nop
push
mov
leave
nop
jmp
mov
add
jae
push
mov
leave
nop
jmp
xchg
dec
stc
add
mul
pusha
add
in
leave
nop
jmp
repz
mov
add
stos
clc
repnz
nop
nop
jae
add
add
dec
stc
add
jmp
nop
nop
jae
add
add
sub
out
clc
repnz
nop
nop
jae
loop
add
add
mov
cmp
cmp
ret
sbb
inc
ficoms
andb
clc
repnz
nop
nop
jae
lcall
add
push
roll
repnz
nop
nop
jae
stc
add
loop
add
pusha
clc
repnz
nop
nop
jae
dec
lahf
jge
pop
push
call
add
pop
jnp
add
int3
add
add
add
nop
out
clc
repnz
nop
nop
jae
add
int
inc
add
nop
nop
jae
stc
call
xchg
in
shlb
sar
repnz
nop
nop
jae
sub
add
int3
add
leave
nop
push
mov
leave
nop
jmp
add
sti
aad
dec
xor
clc
repnz
nop
nop
jae
int3
add
out
lods
clc
repnz
nop
nop
jae
add
push
add
add
mov
repz
clc
repnz
nop
nop
jae
add
adc
mov
xchg
ret
sbb
mov
push
push
mov
xchg
ret
mov
jge
xchg
add
in
gs
add
xchg
xchg
inc
add
in
add
nop
nop
jae
add
cld
add
out
mov
clc
repnz
nop
nop
jae
add
dec
cmp
nop
jmp
lret
add
aad
xor
clc
repnz
nop
nop
jae
stc
dec
add
add
push
add
cld
nop
nop
jae
cwtl
xchg
call
push
push
mov
xchg
ret
test
add
lcall
call
push
mov
leave
nop
jmp
add
jae
movsb
int3
add
add
sar
repnz
nop
nop
jae
push
repz
roll
repnz
nop
nop
jae
jg
add
dec
add
push
mov
mov
leave
nop
jmp
inc
mov
add
add
lahf
das
push
clc
repnz
nop
nop
jae
add
add
xorb
jns
enter
in
leave
nop
jmp
inc
mov
add
test
or
add
repnz
nop
nop
jae
add
add
rcll
repnz
nop
nop
jae
pop
dec
xchg
add
add
in
inc
add
push
aaa
add
jge
sti
push
push
nop
push
mov
leave
nop
jmp
data16
add
repz
fistpl
clc
repnz
nop
nop
jae
add
add
add
adc
aas
shr
clc
repnz
nop
nop
jae
movsb
imul
add
mov
clc
repnz
nop
nop
jae
add
dec
jmp
pushf
pop
inc
add
add
add
mov
roll
je
add
add
adc
pop
xchg
int3
in
test
repnz
nop
nop
jae
push
xchg
sarl
mov
clc
repnz
nop
nop
jae
sub
jg
int3
inc
jne
push
clc
repnz
nop
nop
jae
add
add
lret
push
fwait
add
push
mov
xchg
ret
int
stc
jne
lcall
or
repnz
nop
nop
jae
in
add
add
shll
cli
call
nop
jmp
add
add
xchg
xchg
clc
repnz
nop
nop
jae
adc
insl
push
ljmp
cld
nop
nop
jae
cld
mov
add
sub
push
add
push
add
repnz
nop
nop
jae
push
add
int3
add
push
clc
repnz
nop
nop
jae
mov
add
push
add
jecxz
repnz
nop
nop
jae
add
data16
adc
add
movsb
add
call
add
add
add
call
clc
repnz
nop
nop
jae
mov
pop
add
pop
push
mov
xchg
ret
pop
add
lret
add
add
repnz
nop
nop
jae
xchg
out
lahf
add
and
xchg
inc
add
dec
pop
add
jge
add
cmp
add
mov
repnz
nop
nop
jae
add
jge
add
or
add
in
add
add
mov
xor
inc
push
nop
push
mov
leave
nop
jmp
add
add
add
call
packsswb
xchg
ret
add
repz
add
add
clc
repnz
nop
nop
jae
cld
rcll
add
add
adc
cld
nop
nop
jae
xor
add
out
and
nop
jae
push
dec
xchg
push
add
insb
add
push
push
mov
xchg
ret
pop
lahf
mov
add
add
lock
or
repnz
nop
nop
jae
add
add
add
je
xor
repnz
nop
nop
jae
in
cld
mov
fwait
int3
adc
repnz
nop
nop
jae
lahf
add
add
push
mov
add
mov
clc
repnz
nop
nop
jae
jae
mov
mov
dec
add
das
pop
push
mov
xchg
ret
dec
push
push
add
inc
xchg
pop
add
nop
nop
jae
call
add
dec
adc
sub
pop
notl
clc
repnz
nop
nop
jae
add
add
stc
xor
clc
clc
repnz
nop
nop
jae
add
xchg
data16
mov
nop
push
mov
leave
nop
jmp
add
mov
nop
push
mov
leave
nop
jmp
test
pop
add
clc
repnz
nop
nop
jae
add
mov
and
push
add
je
nop
push
mov
leave
nop
jmp
lret
fwait
push
clc
repnz
nop
nop
jae
jae
repz
pop
pop
int
add
add
lcall
nop
nop
jae
add
add
fmul
jne
clc
repnz
nop
nop
jae
add
repnz
nop
nop
jae
add
add
aad
xor
add
clc
repnz
nop
nop
jae
jmp
add
clc
repnz
nop
nop
jae
call
call
clc
repnz
nop
nop
jae
cwtl
stc
jmp
roll
repnz
nop
nop
jae
add
push
add
add
clc
repnz
nop
nop
jae
add
add
add
movzwl
nop
push
mov
leave
nop
jmp
xor
ja
rclb
jmp
jmp
add
jns
push
mov
xchg
ret
add
test
add
nop
nop
jae
mov
add
xchg
add
mov
clc
repnz
nop
nop
jae
add
stc
aad
inc
or
nop
push
mov
leave
nop
jmp
push
data16
add
inc
add
popf
mov
clc
repnz
nop
nop
jae
add
add
add
cmp
sub
clc
repnz
nop
nop
jae
xchg
pop
cld
shlb
sbb
push
mov
xchg
ret
add
add
leave
sub
repnz
nop
nop
jae
xchg
add
cld
insl
dec
add
clc
repnz
nop
nop
jae
add
in
dec
jne
subl
push
mov
xchg
ret
movsb
xchg
xchg
dec
add
cmp
add
cmpsb
xchg
mov
push
mov
xchg
ret
add
add
xchg
int
push
mov
xchg
ret
xor
add
add
dec
ror
mov
nop
push
mov
leave
nop
jmp
stc
push
dec
push
call
clc
repnz
nop
nop
jae
add
add
add
cmp
cld
nop
nop
jae
lahf
mov
cwtl
mov
xor
nop
push
mov
leave
nop
jmp
loop
add
insl
test
clc
repnz
nop
nop
jae
add
lret
add
add
and
nop
push
mov
leave
nop
jmp
adc
xorb
mov
leave
nop
jmp
add
lock
add
add
nop
jmp
mov
push
add
add
add
clc
repnz
nop
nop
jae
fwait
add
mov
call
call
nop
jae
add
out
dec
jge
add
add
mov
clc
repnz
nop
nop
jae
repz
add
clc
repnz
nop
nop
jae
in
jne
add
add
and
sub
xor
push
mov
leave
nop
jmp
add
pop
mov
add
dec
cmp
repnz
nop
nop
jae
imul
mov
jge
add
clc
repnz
nop
nop
jae
int
add
jg
adc
sub
clc
repnz
nop
nop
jae
mov
or
shll
add
mov
int
mov
stc
add
clc
repnz
nop
nop
jae
jae
xchg
dec
push
push
mov
xchg
ret
call
add
jbe
nop
push
mov
leave
nop
jmp
in
add
mov
clc
repnz
nop
nop
jae
add
add
call
inc
add
adc
sti
add
add
add
jmp
add
test
add
push
clc
repnz
nop
nop
jae
mov
add
loop
add
dec
mov
clc
repnz
nop
nop
jae
dec
add
jge
scas
mov
push
mov
xchg
ret
xchg
insl
add
dec
add
jge
clc
repnz
nop
nop
jae
add
add
mov
push
add
nop
nop
jae
add
add
add
fisubs
jle
in
add
add
nop
push
mov
leave
nop
jmp
jg
cld
add
add
lret
push
mov
xchg
ret
jne
jg
add
mov
push
mov
xchg
ret
jae
pop
stc
fwait
add
cld
xchg
sub
ljmp
nop
nop
jae
push
jg
leave
add
clc
repnz
nop
nop
jae
add
call
and
nop
nop
jae
sti
add
aad
fwait
scas
cmp
mov
and
movsb
dec
adc
pop
loop
add
test
xchg
ret
add
imul
and
mov
xchg
ret
insl
add
mov
xchg
add
fistpl
clc
repnz
nop
nop
jae
sbb
rorl
mov
inc
add
dec
add
repz
rclb
aas
push
push
mov
xchg
ret
stc
add
add
jne
inc
add
push
nop
push
mov
leave
nop
jmp
out
int
add
add
jbe
cmp
loope
loop
push
mov
xchg
ret
add
mov
cmp
add
jg
add
add
add
sti
add
jnp
add
mov
fistl
test
add
add
mov
add
push
add
je
clc
repnz
nop
nop
jae
xor
jae
add
clc
repnz
nop
nop
jae
add
stc
add
pop
lea
clc
repnz
nop
nop
jae
add
ret
sar
repnz
nop
nop
jae
repz
jge
dec
pop
cwtl
dec
mov
nop
push
mov
leave
nop
jmp
add
add
sub
clc
repnz
nop
nop
jae
sub
add
orl
pop
hlt
clc
repnz
nop
nop
jae
add
pop
and
je
test
nop
nop
jae
push
int3
add
imul
or
mov
push
mov
xchg
ret
add
xchg
cld
movsb
lret
inc
or
repnz
nop
nop
jae
add
loop
adc
adc
repnz
nop
nop
jae
repz
add
xchg
stc
lret
test
sub
push
mov
leave
nop
jmp
fwait
add
aad
push
add
leave
mov
nop
push
mov
leave
nop
jmp
add
add
nop
nop
jae
xor
add
add
and
mov
xchg
ret
inc
dec
push
jae
lret
inc
add
nop
push
mov
leave
nop
jmp
xchg
add
inc
add
add
clc
repnz
nop
nop
jae
cld
pop
jne
mov
pop
clc
repnz
nop
nop
jae
add
add
jge
push
mov
xchg
ret
dec
add
add
sti
mov
clc
repnz
nop
nop
jae
aad
add
mov
clc
repnz
nop
nop
jae
aaa
jg
in
test
cs
nop
push
mov
leave
nop
jmp
add
sbb
push
mov
cld
cmp
popf
jae
add
add
add
push
clc
repnz
nop
nop
jae
roll
xchg
add
add
add
add
nop
jae
push
add
pop
mov
test
adc
add
nop
jmp
jae
add
clc
repnz
nop
nop
jae
add
out
add
jecxz
call
dec
addb
cmp
ret
dec
out
add
add
inc
ret
clc
repnz
nop
nop
jae
pop
cld
lcall
call
nop
jae
add
aas
push
mov
jl
ret
inc
xchg
add
out
add
add
clc
repnz
nop
nop
jae
add
test
mov
push
mov
xchg
ret
push
add
add
xor
nop
nop
jae
inc
xchg
sub
push
push
mov
xchg
ret
add
add
add
jae
sbbl
add
xchg
dec
movl
push
clc
repnz
nop
nop
jae
repz
stc
inc
add
add
jb
repnz
adc
repnz
nop
nop
jae
push
add
in
dec
add
push
xor
test
add
dec
add
clc
repnz
nop
nop
jae
add
jg
data16
loop
push
mov
xchg
ret
xchg
imul
inc
add
add
popa
push
push
mov
xchg
ret
cld
dec
in
add
dec
movzwl
clc
repnz
nop
nop
jae
add
pop
add
push
add
clc
repnz
nop
nop
jae
cld
xchg
add
mov
add
push
clc
repnz
nop
nop
jae
imul
add
mov
clc
repnz
nop
nop
jae
add
out
data16
add
mov
inc
mov
clc
repnz
nop
nop
jae
add
jae
add
inc
icebp
nop
push
mov
leave
nop
jmp
add
jne
add
push
add
repnz
mov
leave
nop
jmp
pop
add
xchg
cld
pop
add
or
push
add
clc
repnz
nop
nop
jae
add
dec
out
add
push
clc
repnz
nop
nop
jae
mov
dec
add
loop
add
add
push
mov
xchg
ret
add
int3
jne
adc
mov
push
mov
xchg
ret
add
add
add
sbb
in
mov
add
sarl
push
std
mov
pop
mov
clc
repnz
nop
nop
jae
add
pop
mov
mov
fistpl
clc
repnz
nop
nop
jae
mov
inc
cmp
mov
xchg
ret
repz
lret
add
xchg
call
nop
jmp
add
add
or
repnz
nop
nop
jae
adc
add
nop
nop
jae
add
xchg
insl
sub
movsb
add
lahf
mov
nop
push
mov
leave
nop
jmp
int3
xor
cmp
cld
nop
nop
jae
add
aad
lret
cmp
push
mov
xchg
ret
int3
jne
add
sbb
clc
repnz
nop
nop
jae
test
add
adcb
cmpl
nop
push
mov
leave
nop
jmp
mov
cmp
cld
nop
nop
jae
aad
stc
aaa
add
jg
clc
repnz
nop
nop
jae
imul
cmp
nop
push
mov
leave
nop
jmp
add
add
add
pop
push
mov
xchg
ret
mov
push
cwtl
xchg
add
mov
rep
push
mov
xchg
ret
stc
lahf
add
stos
leave
movzwl
clc
repnz
nop
nop
jae
add
add
in
orl
add
repnz
nop
nop
jae
add
push
xor
add
repnz
nop
nop
jae
movsb
add
mov
or
repnz
nop
nop
jae
imul
add
repnz
nop
nop
jae
cld
add
jg
call
push
mov
xchg
ret
mov
out
add
aas
mov
clc
repnz
nop
nop
jae
sti
add
mov
add
adc
mov
xchg
ret
roll
add
in
dec
add
clc
repnz
nop
nop
jae
mov
add
and
js
repnz
nop
nop
jae
jmp
div
nop
push
mov
leave
nop
jmp
add
dec
add
dec
pop
add
xor
add
add
call
add
add
cwtl
add
add
add
fistpl
push
mov
xchg
ret
add
inc
sti
out
mov
repz
repnz
nop
nop
jae
cwtl
add
add
push
clc
repnz
nop
nop
jae
add
push
in
lahf
pop
clc
repnz
nop
nop
jae
mov
add
and
xor
mov
leave
nop
jmp
add
sub
shl
clc
repnz
nop
nop
jae
stc
mov
pop
clc
repnz
nop
nop
jae
push
dec
add
out
int
fwait
decl
push
mov
xchg
ret
fwait
int3
stc
add
and
repnz
nop
nop
jae
add
mov
add
add
push
mov
xchg
ret
test
test
popf
pusha
nop
push
mov
leave
nop
jmp
add
xchg
add
daa
sub
clc
repnz
nop
nop
jae
xchg
add
xchg
push
push
mov
xchg
ret
add
add
call
push
clc
repnz
nop
nop
jae
test
add
add
loopne
mov
xchg
ret
add
jge
add
mov
mov
clc
repnz
nop
nop
jae
jae
add
add
add
clc
repnz
nop
nop
jae
pop
add
sbb
add
movsb
xchg
inc
add
add
stc
dec
lahf
add
outsb
add
pop
inc
add
add
lcall
mov
push
mov
xchg
ret
xchg
xchg
add
add
imul
add
jmp
test
xchg
add
clc
repnz
nop
nop
jae
add
xchg
inc
jne
push
add
jg
clc
repnz
nop
nop
jae
out
add
pop
adc
fcmovbe
pop
clc
repnz
nop
nop
jae
add
xchg
xchg
add
clc
repnz
nop
nop
jae
add
add
cld
xchg
jne
clc
repnz
nop
nop
jae
add
movsb
dec
cld
push
mov
xchg
ret
pop
add
push
aad
add
add
ljmp
nop
jmp
add
xchg
inc
clc
repnz
nop
nop
jae
inc
sub
mov
repz
aaa
ror
push
mov
xchg
ret
mov
sub
add
add
add
cld
nop
nop
jae
add
dec
add
add
repnz
nop
nop
jae
mov
loop
jbe
mov
jge
clc
repnz
nop
nop
jae
xchg
add
add
cmc
jmp
add
test
lcall
add
stc
clc
repnz
nop
nop
jae
call
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
bound
xor
test
popf
pushl
push
mov
xchg
ret
add
roll
aad
ret
mov
clc
repnz
nop
nop
jae
add
inc
add
sti
repz
push
mov
xchg
ret
pop
add
mov
call
add
add
repnz
nop
nop
jae
add
xchg
ljmp
movb
repnz
nop
nop
jae
stc
add
mov
add
clc
repnz
nop
nop
jae
add
add
out
sub
jno
inc
add
add
clc
stc
xor
clc
repnz
nop
nop
jae
sub
add
add
clc
repnz
nop
nop
jae
pop
add
add
repz
push
mov
xchg
ret
push
add
int
jae
add
nop
dec
add
repz
repnz
nop
nop
jae
mov
add
push
mov
xchg
ret
add
int3
mov
mov
jno
test
call
cld
nop
nop
jae
xchg
add
imul
add
std
call
nop
jmp
add
cld
push
mov
xchg
ret
push
add
test
pop
add
nop
push
mov
leave
nop
jmp
xor
stc
sti
add
pop
loop
add
add
clc
repnz
nop
nop
jae
cld
repz
add
aaa
pop
clc
repnz
nop
nop
jae
add
int3
add
jns
clc
repnz
nop
nop
jae
imul
add
adc
nop
nop
jae
xchg
dec
add
add
push
add
push
cmp
repnz
nop
nop
jae
dec
add
add
jne
call
nop
push
mov
leave
nop
jmp
add
call
sub
clc
repnz
nop
nop
jae
stc
sbb
add
and
clc
repnz
nop
nop
jae
dec
out
pop
add
add
repnz
nop
nop
jae
add
int3
jmp
shl
clc
repnz
nop
nop
jae
adc
int
inc
lret
pop
nop
push
mov
leave
nop
jmp
add
push
add
push
nop
push
mov
leave
nop
jmp
movsb
add
data16
add
fldl
pop
jbe
add
add
nop
mov
repnz
nop
nop
jae
xchg
movsb
sti
test
scas
xor
repnz
nop
nop
jae
add
add
mov
dec
mov
xor
xchg
ret
xchg
add
add
jae
iret
add
nop
push
mov
leave
nop
jmp
add
lcall
nop
push
mov
leave
nop
jmp
dec
repz
cld
imul
add
loope
inc
add
cld
mov
sbb
add
push
push
mov
xchg
ret
add
mov
pop
movsl
push
clc
repnz
nop
nop
jae
add
lcall
add
nop
push
mov
leave
nop
jmp
stc
push
add
int
pop
add
in
leave
nop
jmp
add
xor
pop
out
add
imul
clc
repnz
nop
nop
jae
dec
dec
add
imul
pushl
clc
repnz
nop
nop
jae
sti
add
roll
and
repnz
nop
nop
jae
pop
xor
pop
push
test
mov
clc
repnz
nop
nop
jae
add
mov
out
inc
add
add
push
fdivrs
push
mov
xchg
ret
add
lcall
lret
jne
clc
repnz
nop
nop
jae
add
rclb
push
add
add
mov
mov
mov
clc
repnz
nop
nop
jae
jae
inc
add
add
add
mov
xchg
ret
jmp
push
xchg
sub
aas
lea
nop
push
mov
leave
nop
jmp
mov
mov
dec
add
or
fisttps
test
sti
clc
repnz
nop
nop
jae
add
cwtl
sub
jmp
nop
nop
jae
add
add
lcall
mov
xchg
ret
add
repz
xchg
pop
clc
repnz
nop
nop
jae
add
lahf
add
lret
loope
dec
cmp
repnz
nop
nop
jae
repz
add
pop
mov
sar
cld
nop
nop
jae
jmp
sub
hlt
inc
add
add
fbld
repnz
nop
nop
jae
add
dec
add
inc
out
ljmp
and
mov
xchg
ret
stc
sub
inc
mov
add
add
je
js
repnz
nop
nop
jae
sub
add
pop
push
clc
repnz
nop
nop
jae
cwtl
add
push
dec
add
push
mov
xchg
ret
add
in
add
add
add
nop
nop
jae
int3
cld
add
add
lret
nop
push
mov
leave
nop
jmp
inc
dec
mov
xchg
add
push
inc
mov
clc
repnz
nop
nop
jae
add
dec
int3
add
add
xor
clc
repnz
nop
nop
jae
dec
add
inc
inc
mov
aam
add
add
push
mov
xchg
ret
test
sub
repnz
nop
nop
jae
pop
add
loopne
lea
jmp
add
add
add
call
adc
test
movzwl
nop
push
mov
leave
nop
jmp
add
fdiv
jne
clc
repnz
nop
nop
jae
roll
aaa
lea
clc
repnz
nop
nop
jae
xchg
add
pop
stc
cltd
xor
clc
repnz
nop
nop
jae
add
add
imul
adc
repnz
nop
nop
jae
dec
xchg
push
mov
xchg
ret
dec
int3
jg
add
jae
lahf
adc
push
mov
leave
nop
jmp
add
push
aaa
add
sti
cwtl
insb
add
sub
cld
nop
nop
jae
xchg
add
lcall
and
repnz
nop
nop
jae
data16
lcall
cld
nop
nop
jae
xchg
push
add
xor
add
mov
clc
repnz
nop
nop
jae
xchg
imul
push
add
ret
clc
repnz
nop
nop
jae
insl
add
add
jmp
repnz
nop
nop
jae
cld
add
cld
lahf
add
sbb
add
cld
dec
repz
dec
out
data16
sbb
sbb
xor
inc
add
fwait
xchg
add
mov
add
cmpl
nop
push
mov
leave
nop
jmp
repz
mov
add
mov
xchg
ret
pop
lahf
dec
sbb
add
mov
xchg
ret
out
xchg
cwtl
xchg
add
add
sub
cld
nop
nop
jae
add
mov
lods
dec
mov
clc
repnz
nop
nop
jae
add
add
sar
push
mov
leave
nop
jmp
add
push
inc
mov
fld1
push
mov
xchg
ret
out
add
add
jge
pop
mov
clc
repnz
nop
nop
jae
add
int3
movsb
add
call
clc
repnz
nop
nop
jae
dec
add
cld
nop
nop
jae
sbb
lret
add
pop
mov
push
clc
repnz
nop
nop
jae
sar
push
jne
jmp
fwait
add
nop
push
mov
leave
nop
jmp
lret
lcall
dec
add
xchg
xchg
ret
jmp
imul
clc
repnz
nop
nop
jae
xor
stc
add
add
xchg
cmp
sub
mov
nop
jae
inc
push
roll
ret
clc
repnz
nop
nop
jae
add
mov
addl
in
leave
nop
jmp
in
sbb
ljmp
jne
add
add
add
dec
add
add
data16
je
clc
repnz
nop
nop
jae
loop
add
add
sub
int3
pop
push
clc
repnz
nop
nop
jae
int3
add
cld
jg
lret
movsl
push
mov
add
cltd
add
dec
mov
adc
sbb
scas
stc
fnstcw
push
add
add
push
popf
mov
scas
xor
scas
adc
add
shlb
dec
add
jecxz
adc
mov
sahf
pop
add
int
sbb
add
popf
mov
mov
aaa
xor
mov
add
out
call
add
pushf
scas
fucomip
loopne
add
inc
dec
and
push
nop
movl
pop
add
add
jecxz
cmp
pop
add
cmp
add
insb
add
dec
fiaddl
daa
adc
les
sub
xchg
test
push
adc
addb
xchg
cmp
ljmp
jp
repz
add
out
push
mov
sti
push
test
add
out
adc
push
add
xchg
cmpsb
sbb
mov
push
push
add
add
adc
ljmp
mov
add
mov
add
inc
add
or
add
scas
push
jbe
jb
dec
add
repz
push
pop
imul
push
add
pop
jne
pushf
mov
inc
add
jle
pop
add
xor
add
test
mov
bound
movsb
push
add
mov
insb
add
inc
mov
inc
das
pushf
push
add
add
sahf
rorl
mov
pop
or
dec
add
jmp
lea
mov
add
xor
shrb
inc
add
movsl
dec
add
aam
mov
xor
ja
add
lock
add
xchg
add
jmp
add
and
aaa
push
add
jne
cmc
rep
mov
sarb
xchg
jp
pop
mov
and
into
pop
lds
push
add
jecxz
ljmp
cld
push
add
dec
add
mov
xchg
push
hlt
inc
add
add
push
add
dec
add
je
xchg
mov
push
add
add
mov
cld
jg
imul
add
repz
push
add
push
lret
xchg
lds
sbbl
add
cmpsb
out
int
jmp
sbb
aam
lret
inc
add
jecxz
in
test
mov
push
out
push
rolb
add
faddl
add
popa
sbb
jne
push
add
inc
add
out
mov
repnz
sub
add
jp
add
pop
push
add
inc
add
adc
mov
pusha
add
add
adc
jns
add
ret
pop
xor
add
sbb
ljmp
add
or
popf
xchg
add
cltd
cwtl
push
add
inc
inc
add
cmp
push
add
mov
push
fdiv
std
xlat
jnp
jmp
mov
loope
fistps
add
mov
out
add
add
data16
or
call
out
lret
mov
jae
add
xchg
addr16
add
sbb
imul
movsb
pop
stc
movlps
push
add
add
add
add
add
adc
add
add
jecxz
add
add
jp
adc
jg
add
add
pop
lret
and
mov
or
mov
lock
inc
add
add
add
rcrb
add
in
shlb
push
enter
xchg
pushf
push
add
enter
dec
add
push
push
add
or
dec
sbb
cli
fdivs
outsl
add
jae
stos
mov
add
sbb
jo
lods
movsl
cld
mov
add
dec
insb
add
movsl
ja
cmp
adc
out
ljmp
pop
sbb
dec
xor
mov
dec
jno
add
sbb
add
fcomi
cmp
movb
js
in
es
in
inc
adc
sbb
add
mov
out
addr16
cmp
imul
lret
cmp
adc
and
pop
add
dec
jno
add
inc
add
xchg
xor
add
and
bound
sbb
sub
jno
add
imul
add
lret
fcoms
add
aam
aaa
push
mov
pop
add
shlb
add
mov
sbb
add
add
mov
imul
add
push
add
add
aaa
dec
or
lods
pop
mov
add
dec
pop
jg
loope
std
test
repnz
jmp
add
and
add
mov
push
add
pop
cwtl
dec
ljmp
add
sbbl
lcall
fisubs
pop
push
and
add
iret
xchg
sub
pop
test
add
adc
pop
or
fsubr
mov
add
add
xchg
xlat
push
add
mov
add
pushf
dec
shl
shll
repz
out
cmp
lods
add
ret
jg
or
add
and
pop
pop
xor
add
add
loope
adc
add
jl
mov
jge
add
pop
add
in
loopne
popf
lahf
push
ret
add
add
test
add
jle
notb
add
sbb
lods
dec
rcll
jmp
ja
add
adcl
sbb
sbb
dec
into
shlb
pop
data16
bound
adc
xchg
mov
jecxz
das
imul
inc
add
popf
fs
subb
scas
jae
fisubl
add
out
into
std
popa
mov
jecxz
add
sbb
fstpl
add
add
divb
add
lcall
repnz
add
jns
out
add
add
cwtl
rorl
push
add
mov
scas
xchg
pop
add
shrl
add
lock
je
aaa
mov
add
add
aaa
jns
push
aas
inc
add
add
xchg
mov
sub
add
add
add
pop
add
fbstp
xchg
pop
dec
add
add
xchg
clc
aaa
xchg
fsubrl
add
push
icebp
repz
test
add
fistpll
add
ljmp
add
fsubl
bound
push
push
add
add
hlt
mov
dec
stos
pusha
add
imul
push
add
inc
loope
pop
das
dec
add
aas
jae
cmc
lds
mov
add
aad
insb
add
cmp
into
or
sub
jmp
dec
add
pop
cs
repnz
movsb
in
add
test
add
pop
xchg
pop
mov
add
jge
fsub
jg
jb
int
add
add
stc
xchg
mov
insb
add
daa
ljmp
jbe
xor
add
mov
push
add
push
add
adc
add
xor
add
outsb
add
add
test
add
ret
mov
add
add
add
pop
mov
and
inc
cmp
scas
push
add
pop
add
mov
add
imul
sub
orb
add
or
call
add
jns
addr16
add
xrelease
cmpsl
loop
in
pop
subb
pop
data16
lods
push
add
add
sub
xlat
or
or
dec
add
ret
lock
mov
add
movsl
push
xor
jae
sbb
mov
pop
add
leave
lcall
pushf
test
loope
adc
add
mov
fbld
dec
push
add
lock
rol
push
add
push
scas
or
cmp
lret
mov
and
into
cmp
mov
push
add
test
in
into
out
xchg
shr
cmp
and
clc
jnp
add
sahf
addr16
iret
cmp
push
xor
dec
xlat
xor
add
idivl
outsb
add
pop
add
jns
in
xchg
mov
stc
mov
sub
or
popa
movhps
sbb
xor
js
dec
add
leave
pop
out
xor
test
sbb
pushf
scas
pop
add
add
inc
aam
add
adc
notb
bound
cmp
and
add
mov
adc
jno
inc
lahf
xchg
insb
add
add
dec
jmp
out
je
pop
add
sub
adc
add
add
mov
cmc
mov
add
stos
inc
xor
sub
hlt
fidivs
jmp
add
lea
int
js
shll
add
ret
pop
add
data16
adc
xor
mov
add
mov
cmp
ret
fnstenv
int3
inc
cli
imul
add
sub
mov
call
sarb
lea
test
push
add
out
add
fidivrs
add
pushf
sti
jp
data16
add
std
stos
mov
testb
aas
and
mov
mov
movsl
pop
lcall
mov
jp
call
lods
jmp
push
adc
data16
je
xchg
adc
inc
add
and
jmp
iret
pop
add
addr16
lods
mov
inc
add
add
adc
insb
add
jbe
fnstcw
mov
icebp
pop
outsb
add
xor
shll
inc
test
cltd
fucom
stos
imul
orb
sub
cmp
int3
add
loopne
pop
pop
add
push
add
mov
add
inc
add
fdivs
xchg
inc
add
ljmp
xor
inc
add
hlt
fidivs
gs
add
push
add
push
add
insl
inc
mov
sahf
iret
cmp
dec
add
add
sbb
adc
into
iret
sbb
cmp
push
add
dec
add
jns
lcall
push
in
cld
fiaddl
or
aas
adc
add
add
push
mov
add
add
add
bound
cs
aam
add
xor
and
push
repnz
sub
mov
mov
mov
add
add
jmp
ss
sub
test
inc
add
jl
xor
or
mov
in
ret
repz
or
in
pop
cs
or
add
add
pop
jno
popf
and
cmc
mov
dec
add
add
lea
repz
add
inc
rolb
mov
pop
pop
xchg
cmp
rorl
add
mov
add
inc
adc
mov
fistps
cmpsl
add
add
aad
repz
or
mov
add
pop
jmp
inc
cld
cwtl
mov
add
mov
add
and
add
mov
lods
mov
into
xchg
shr
cmp
add
add
add
cmc
mov
adc
sub
add
leave
shll
js
insl
add
mov
pop
and
mov
iret
test
sbb
add
icebp
test
add
lock
or
jo
or
xchg
add
movsb
sub
daa
cmpsb
icebp
and
lds
sub
inc
add
cmc
sub
jo
lret
mov
in
loopne
add
add
out
mov
lcall
push
pop
cmc
ret
lcall
push
add
leave
nop
jbe
dec
adc
out
insl
jecxz
xchg
fwait
int
arpl
add
ficoms
mov
add
test
rcll
adc
mov
inc
add
fmulp
xchg
fisubrl
adc
pop
or
sub
adc
jmp
pop
add
mov
pop
ret
mov
daa
loopne
pop
fsqrt
fldl
std
lret
sbb
aas
add
outsl
sbb
mov
aam
mov
mov
scas
movsb
mov
shll
dec
adc
cmp
mov
mov
jnp
add
add
sbb
sub
mov
jbe
dec
add
add
addr16
push
sbb
pop
jb
loop
sbb
mov
add
push
imul
mov
cld
addr16
sub
mov
add
add
xlat
push
add
pusha
add
mov
add
cmp
jne
xchg
ficoml
movsl
dec
mov
and
call
add
aaa
int
add
add
icebp
mov
data16
adc
mov
add
outsb
add
mov
add
push
add
mov
add
cld
sbb
jo
xor
xor
insb
add
sbb
nop
in
scas
mov
dec
push
add
xlat
jns
insb
add
lahf
xor
in
cltd
shrl
xlat
dec
test
into
lret
add
cmp
add
sbb
lods
pop
dec
add
add
add
dec
lods
pop
push
add
dec
add
add
das
test
sub
or
push
add
out
ror
lock
or
arpl
add
subl
add
adc
sbb
jg
add
xlat
dec
inc
and
mov
subb
xchg
insl
xchg
or
lods
cli
int
add
inc
shr
fs
js
xchg
xchg
sbb
mov
cmpsl
inc
add
jno
add
mulb
cmpsb
push
add
jbe
call
add
into
pushf
inc
xchg
insb
add
jne
xor
adc
adc
xchg
dec
add
pop
dec
or
mov
test
test
push
add
dec
push
add
lcall
pop
xor
and
loopne
add
jb
movsl
pop
add
add
inc
xlat
aaa
subb
imul
dec
add
lods
pop
add
add
pop
add
hlt
dec
add
mov
add
jo
or
xchg
in
jne
cmpsb
pop
data16
fcomps
dec
mov
lea
add
mov
aam
mov
add
add
shlb
mov
call
push
inc
add
gs
or
fiadds
jbe
or
sar
scas
and
or
add
repnz
shll
je
or
add
loope
add
lcall
cltd
or
pop
add
daa
in
inc
negb
int
add
int3
ljmp
jb
add
cmpsb
loope
bound
xchg
cmp
add
arpl
push
add
fists
add
lret
push
jmp
add
out
xchg
mov
xchg
scas
mov
es
jno
shrl
add
add
add
cmp
mov
add
mov
testb
out
add
daa
popf
loopne
mov
add
pop
add
scas
out
mov
add
add
test
xchg
test
jle
es
int3
loope
jmp
insb
add
cmc
out
mov
add
add
inc
add
popa
jo
jb
repnz
loopne
mov
sub
hlt
sub
stos
dec
add
and
cmp
loopne
add
imul
sbb
mov
jl
and
add
sub
sbb
ret
setp
fucomi
and
push
add
push
add
aaa
pop
pop
add
lahf
fcompl
dec
add
add
mov
add
xor
lret
icebp
or
mov
add
pop
add
jp
sti
mov
xor
xor
push
lock
sbb
or
xor
xor
js
push
add
dec
xor
mov
add
outsl
push
mov
adc
out
add
xchg
add
out
jno
insl
div
cmp
ja
mov
imul
mov
pop
add
add
pop
adcl
add
mov
dec
add
adc
jmp
add
fistl
aaa
mov
outsl
leave
add
jo
lods
adc
sub
add
add
inc
and
mov
add
or
mull
xchg
dec
xor
mov
xchg
add
or
push
add
add
pop
add
add
push
adc
push
add
mov
lock
sub
add
lods
jp
fcompl
add
add
jp
mov
xchg
enter
inc
add
add
add
fnstsw
sub
mov
test
add
push
dec
cmp
ret
xor
popf
pop
scas
adc
adc
sbb
sbb
pop
add
inc
add
int
js
pop
add
ja
xchg
loopne
rol
or
movsl
clc
outsl
outsb
add
cmp
adc
jp
mov
sbb
add
rclb
add
push
dec
stos
ja
xchg
data16
or
out
add
add
sbb
push
int3
ja
int
loope
add
and
cli
sub
mov
jno
add
bound
jle
pop
mov
add
or
ja
add
xor
ret
sub
xchg
jle
mov
xchg
mov
mov
push
add
dec
add
xchg
out
mov
add
add
add
lret
pop
add
stc
push
out
fstps
pop
mov
adc
mulb
popa
pop
dec
orb
add
insb
add
pop
aas
push
fimull
add
mov
jb
stos
push
ret
rol
xchg
push
add
dec
add
add
dec
add
push
imul
enter
xchg
pop
add
add
insb
add
aad
mov
cld
xchg
outsb
add
ljmp
stc
int
dec
add
add
bound
jno
ja
movsb
adc
add
mov
test
add
push
sub
sub
mov
add
mov
and
mov
pop
jne
add
pop
add
jg
imul
fwait
cmc
lods
xlat
lret
loop
mov
ret
mov
into
scas
dec
add
or
push
add
cwtl
in
repz
push
add
xchg
inc
add
aas
dec
add
test
cmpsl
clc
inc
add
lock
jb
push
add
daa
jns
lahf
pusha
add
mov
cs
push
add
xchg
aad
add
jae
and
sbb
add
mov
jp
mov
push
and
pop
xor
mov
jne
mov
rclb
add
inc
add
insl
loope
loop
movsb
add
dec
out
add
inc
and
xor
push
add
add
outsb
add
shlb
mov
mov
mov
sub
mov
addr16
std
and
push
adc
lods
jae
js
movl
dec
add
add
push
add
jns
add
andl
add
xchg
cmp
inc
les
xchg
jbe
iret
jb
cmp
call
or
mov
or
call
or
add
add
jecxz
sbb
adc
add
mov
ret
vcomiss
mov
mov
add
sarl
adc
out
pop
inc
inc
add
outsb
add
jmp
dec
add
cltd
cmc
enter
add
lds
add
scas
in
ret
mov
daa
sbb
add
ljmp
mov
pop
xchg
cld
test
add
mov
loop
add
jl
dec
cmp
add
sbb
add
loop
mov
cmp
or
cmp
push
add
push
add
adc
arpl
add
mov
push
add
add
inc
add
ret
mov
add
sbb
xor
outsl
mov
arpl
mov
add
test
add
pop
pop
ret
push
add
jne
gs
insb
add
cmpl
mov
add
jno
movsb
lahf
les
add
add
add
adc
push
add
add
dec
add
pop
int
mov
push
add
inc
add
add
add
out
inc
pop
mov
add
loopne
add
xchg
inc
enter
xchg
aam
add
xchg
jg
popa
es
jae
jmp
loope
clc
cmpsb
in
push
add
dec
add
dec
cmp
dec
jb
orl
add
push
scas
lock
add
push
add
sub
idivl
add
add
imul
and
sub
scas
inc
repz
jp
popf
bound
shrl
mov
sub
push
add
mov
adc
add
add
add
mov
add
idivl
add
dec
add
bound
push
add
add
jecxz
mov
add
subb
add
add
lods
cmpsl
data16
dec
add
mov
in
out
int
nop
xchg
bound
stc
fcompl
mov
add
decb
xor
add
mov
add
inc
add
cs
lods
lahf
and
sahf
jae
push
mov
pop
add
add
jg
add
add
inc
inc
add
xchg
push
or
in
lret
loope
add
addr16
jbe
xchg
int
add
add
mov
push
add
add
js
lds
jb
add
xchg
push
add
sbb
jno
fmuls
mov
sbb
jecxz
add
cmc
lea
add
adc
add
aaa
out
notl
ret
fists
repz
mov
add
add
sub
mov
sub
pop
roll
int3
data16
add
inc
add
xchg
fmul
js
jge
jo
out
xor
lods
xor
jle
icebp
clc
and
add
out
add
cmpsb
popa
mov
fcmovbe
movsl
hlt
inc
add
test
add
inc
add
xor
pusha
add
add
sub
xchg
popf
or
inc
xor
arpl
add
xchg
sbb
fcoml
mov
arpl
mov
add
or
xor
inc
add
stos
lahf
adc
test
lock
mov
das
stc
xchg
cmp
mov
imul
add
test
data16
sub
xchg
jnp
add
ljmp
lahf
add
inc
fwait
adc
mov
stc
int3
sbb
or
aad
aam
repnz
arpl
add
jmp
add
add
inc
xchg
je
xchg
xor
cmp
test
add
add
enter
cmp
add
clc
in
add
sahf
insl
cmp
inc
and
sub
xchg
or
les
add
mov
jnp
add
pop
add
adc
mov
add
int3
aaa
insb
add
add
jae
test
add
add
add
cmpsb
xchg
bound
push
sbb
sub
push
add
inc
f2xm1
fstpt
cs
repz
add
pop
imul
fsts
adc
popa
jg
xchg
enter
mov
jmp
call
or
xor
into
push
outsl
cmp
lock
add
and
sub
call
cmpsb
mov
in
pop
pop
pusha
add
pop
fcmovbe
lret
xchg
sub
out
adc
rclb
call
ficomps
add
mov
inc
add
add
cltd
mov
add
add
cwtl
aad
push
add
mov
add
insb
add
cmpsl
xchg
fistpll
add
insb
add
sbb
add
mov
dec
pop
add
push
add
add
xchg
paddd
add
or
jg
jno
add
movsb
test
inc
add
lret
popa
sti
les
out
add
out
or
rcr
add
pusha
add
xchg
pop
add
fcoms
mov
insl
and
mov
add
cvtpi2ps
mov
test
add
aam
dec
add
cld
mov
add
negl
xor
in
mov
test
add
push
push
add
rcrl
or
add
add
pop
testl
add
jae
xor
cld
dec
clc
ljmp
pusha
add
xchg
pop
movsb
popa
ja
js
outsb
add
cmp
fnsave
fwait
mov
push
loopne
add
jnp
mov
lea
jg
cmpsl
cld
cmc
dec
add
inc
cwtl
lea
inc
xchg
xchg
cld
jnp
adc
sub
xor
add
aad
cmp
add
mov
cmp
cmc
add
mov
sbb
jge
sbb
roll
add
sbb
lahf
adc
jmp
add
cli
push
add
subb
add
mov
insb
add
xchg
xchg
pop
cmc
mov
ljmp
bound
cmp
imul
add
or
repnz
je
cmpb
add
popa
lock
xchg
repnz
add
inc
add
addr16
and
xor
add
add
pop
add
xchg
shlb
add
mov
add
mov
adc
sub
cmp
aaa
fcompl
add
rolb
mov
pop
xchg
repnz
movl
lock
cmp
dec
add
fdiv
xchg
or
add
gs
add
xchg
sub
push
xlat
and
stc
sahf
int3
jb
inc
add
bnd
mov
add
adc
push
int
imulb
add
add
add
add
add
mov
popf
int3
push
scas
mov
out
xchg
jbe
out
roll
int
add
insb
add
orl
or
clc
inc
sub
mov
push
add
or
and
add
insb
add
sahf
roll
adc
jo
xchg
repnz
xor
out
in
and
xlat
out
rcll
imul
dec
add
and
jmp
stos
inc
imull
out
push
icebp
xchg
xchg
clc
or
jmp
hlt
dec
fnstsw
xchg
daa
push
push
add
jnp
mov
add
es
push
je
mov
add
and
adc
ljmp
add
cmp
and
sahf
dec
add
mov
rcrb
add
mov
add
mov
imull
and
push
add
call
in
jns
int3
mov
add
xor
cmp
xchg
in
in
out
or
cmp
mov
jb
pusha
add
add
incb
ret
mov
imul
and
push
fnstsw
push
add
adc
inc
add
add
mov
add
or
mov
jne
add
das
stos
or
fwait
jns
add
add
sub
pop
add
stc
test
add
mov
add
jnp
push
add
add
pop
add
enter
add
int
sarb
inc
iret
les
add
sbb
fidivrl
pusha
add
add
ja
cmp
arpl
in
sbb
adc
ret
iret
std
dec
add
popf
repz
push
push
add
add
jl
sahf
hlt
add
add
lahf
push
add
sbb
jle
xchg
loopne
or
pop
pop
add
int
add
xchg
inc
mov
das
or
scas
pop
lods
xchg
sub
loop
mov
xchg
hlt
cmpsl
iret
fmul
cli
dec
inc
sub
add
pusha
add
sub
jb
dec
add
push
add
imul
loope
add
xchg
push
add
add
add
add
lock
cltd
imul
xchg
xchg
nop
xchg
lock
iret
mov
push
add
jae
push
adc
das
or
cmp
dec
jno
les
je
jnp
mov
aad
out
movsb
inc
add
cmp
xchg
lret
lret
pop
roll
in
add
and
dec
outsb
add
lahf
mov
mov
inc
aam
add
mov
out
pop
add
xor
inc
pop
add
mov
add
xor
std
imul
mov
int
mov
adc
xchg
idivl
add
jns
repz
add
add
xchg
mov
add
je
mov
in
lret
lock
sbb
sahf
jb
mov
sbb
or
jge
add
dec
add
nop
out
testl
add
add
add
push
ret
jp
data16
add
mov
add
jl
add
xor
add
ret
cwtl
mov
add
popl
add
movaps
add
icebp
cmp
outsb
add
nop
fsubrl
int3
fmuls
add
test
jbe
pop
add
mov
fsubrl
test
ljmp
insb
add
xchg
insb
add
daa
add
jae
lret
ret
sub
cli
rcl
xchg
add
loope
add
in
inc
fmull
push
add
ja
aad
add
dec
add
add
add
jg
add
mov
inc
add
imul
dec
add
add
lret
in
fdivrl
das
test
add
popa
mov
add
fidivrl
pop
lcall
cmpb
xor
inc
add
add
add
notl
fistpll
pop
add
jne
lods
mov
mov
pop
sarl
sub
add
sub
pop
inc
pop
pop
xor
imul
and
add
js
xchg
mov
add
sti
cmpsb
push
push
push
into
xchg
sub
dec
dec
jl
adc
add
pop
mov
add
push
add
add
pusha
add
add
pop
add
int
je
sbb
imul
add
jle
pop
loop
add
sub
mov
lods
sub
bswap
movsl
lea
jae
data16
xchg
add
bound
mov
adc
dec
add
int
or
rcrb
les
or
pop
outsl
add
push
add
cmp
adc
dec
add
add
dec
test
mov
and
xchg
xchg
pusha
add
test
xlat
sub
add
add
inc
cmp
cltd
sub
loope
sub
fs
ret
add
add
subl
xor
xor
fstpl
or
pop
add
or
mov
aam
out
add
repnz
mov
push
add
xor
loop
shll
testl
add
loope
add
add
add
add
addr16
lods
mov
stc
sub
out
and
pop
pop
add
and
daa
pop
add
shlb
aas
aad
call
push
lds
mov
sahf
xor
add
or
or
aaa
mov
aad
lret
lret
add
add
add
shrb
in
add
xor
xchg
push
add
xchg
xchg
sbb
add
fistl
or
pop
sbb
adc
add
add
pop
mov
dec
add
stos
inc
xor
add
subl
mov
add
push
dec
add
mov
lock
xchg
or
adc
add
loopne
aad
push
add
mov
add
adc
jnp
mov
dec
add
add
in
addr16
sub
in
push
adc
adc
inc
mov
mov
mov
push
add
ret
inc
add
rol
mov
scas
cmp
dec
add
jmp
pop
add
cmp
xchg
push
lret
enter
movsl
enter
add
add
add
add
test
clc
fildl
stos
xchg
sub
add
std
in
add
imul
jns
pushf
xor
enter
dec
add
notl
jp
cld
dec
add
xchg
cli
jo
ret
aad
mov
mov
mov
inc
jp
adc
add
add
jae
push
add
add
fisubs
mov
jnp
jnp
scas
cmp
sub
nop
cltd
mov
movsb
gs
add
popf
mov
inc
add
add
add
sbb
out
mov
loope
inc
inc
add
imull
aam
addr16
loop
add
leave
pop
add
test
cld
xchg
xchg
xor
insb
add
jl
pop
xchg
xchg
loope
add
addl
add
lahf
jg
jb
fdivrs
dec
add
mov
cmp
test
je
or
leave
sbb
aad
add
in
mov
add
sub
xchg
mov
aas
pop
add
mov
add
hlt
push
pop
movsl
lahf
and
aas
xor
std
cmp
push
loop
clc
out
dec
popa
and
add
pop
add
repnz
add
and
and
add
cli
cmc
or
out
int3
jbe
stc
cmpsb
sti
jmp
mov
js
inc
lahf
into
out
sahf
pop
add
xor
fiadds
adc
jp
push
add
mov
dec
add
pop
add
data16
dec
jns
push
push
add
xchg
jle
cmpsl
push
add
frstor
test
push
add
add
add
fiadds
push
add
sbb
jecxz
scas
dec
das
mov
add
call
push
add
leave
test
add
cmp
and
fcomi
testl
std
jno
pop
add
add
xor
imul
push
add
add
jp
xchg
sub
mov
or
test
mov
ret
jae
cmp
ja
xchg
dec
cltd
jo
push
sub
fiaddl
xor
add
movsb
int3
aam
push
mov
add
mov
andps
arpl
add
jmp
mov
daa
into
orb
add
in
aaa
outsl
bound
sbb
into
mov
add
add
add
lods
xchg
sbb
inc
add
sbb
jg
add
leave
test
xchg
insl
aad
nop
pop
add
and
mov
loope
add
mov
mov
add
add
jge
add
mov
add
rol
stos
jmp
and
mov
mov
push
add
loope
add
lahf
popa
add
add
dec
insl
xor
mov
rcll
scas
fidivl
add
lret
iret
test
int3
int3
push
mov
add
es
dec
add
movsl
mov
iret
aam
add
fldcw
add
cmpl
pmuludq
push
add
pop
add
mov
fisubrs
mov
adc
movsl
out
stc
and
test
nop
inc
leave
dec
jno
inc
sti
iret
outsl
mov
add
add
fildl
lods
adc
push
add
add
add
sahf
inc
add
idivl
add
add
fucomp
xorl
push
mov
push
in
add
push
icebp
arpl
push
add
add
arpl
add
stos
sub
dec
std
dec
mov
inc
add
add
cmp
inc
push
add
sub
mov
add
mov
xchg
jb
pop
into
lahf
xchg
andb
add
fstp
or
mov
inc
add
push
add
lea
add
dec
xor
sub
push
ljmp
movb
jle
in
sub
icebp
push
add
add
sub
push
xchg
shl
insl
lods
dec
add
jno
mov
xchg
or
mov
daa
add
and
inc
add
and
mov
sbb
mov
rolb
pop
add
rcl
imul
pushl
pop
add
loopne
jp
xchg
and
sbb
mov
add
jns
adc
in
repz
and
inc
xor
and
fisttpll
std
sub
pop
add
or
adc
dec
add
lahf
add
imul
add
push
sub
add
mov
shrb
or
xor
es
out
mov
mov
xchg
xor
insb
add
add
add
push
add
add
ror
mov
pop
add
xchg
jno
ja
leave
ss
add
cld
xor
in
mov
add
sub
xor
movsl
push
add
jb
pushf
inc
add
push
add
pop
aas
cmp
sahf
xor
aaa
mov
sub
fidivrl
add
add
dec
add
mov
inc
add
cwtl
lock
add
aaa
xor
lret
adc
push
add
add
xor
mov
push
add
mov
pop
xor
call
add
add
add
inc
out
push
and
addr16
into
lock
add
mov
pop
add
sbb
cmp
pop
loop
cmpsb
mov
out
and
add
or
or
ja
jp
xchg
out
adc
push
add
mov
incb
and
mov
lods
sbb
rclb
sbb
jl
lret
mov
ja
push
call
mov
inc
jmp
pop
shrb
add
sbb
dec
add
subl
std
sub
sbb
clc
push
xchg
cmpl
arpl
roll
je
rcr
add
mov
inc
push
add
add
xchg
aad
cmp
clc
push
insl
jge
inc
add
lods
orl
mov
and
arpl
sbb
je
and
pop
add
cmp
xchg
shl
jg
inc
add
sbb
stos
test
inc
add
mov
xor
adc
scas
pop
add
xor
data16
test
add
xor
loopne
xchg
pusha
add
popl
add
lea
mov
add
test
add
add
aam
sub
add
dec
cmp
test
jbe
or
add
mov
iret
mov
in
mov
add
data16
test
inc
pop
pop
dec
add
data16
add
insb
add
iret
stos
dec
add
jge
add
cmpsl
packuswb
or
out
add
inc
out
add
lods
pop
lret
or
and
insb
add
and
xlat
pushf
sti
pop
repz
data16
mov
xchg
insb
add
fiadds
xchg
imul
icebp
sub
add
add
and
push
add
mov
pop
sarl
adc
pop
inc
imul
bound
mov
insl
aad
pop
je
adc
add
add
inc
add
std
js
and
add
push
add
rolb
cmp
pop
add
add
mov
add
add
pop
imul
and
outsb
add
leave
test
pushf
ja
pop
jo
adc
add
daa
mov
add
xor
mov
push
xorl
push
add
lahf
mov
out
sbb
xlat
sub
in
push
push
add
add
dec
cmp
daa
jbe
in
out
dec
test
not
jbe
pushf
adc
mov
iret
mov
add
test
add
pop
add
arpl
add
add
adc
bound
arpl
stos
adc
dec
add
mov
pop
pop
mov
add
mov
jne
mov
dec
add
xor
sarb
add
ret
add
inc
in
lods
mov
add
add
jo
cltd
mov
loopne
out
je
or
inc
in
and
mov
stos
into
xlat
jle
mov
pop
push
inc
add
add
in
insl
adc
inc
add
stc
and
or
or
fidivrs
add
loope
add
rcll
jb
loop
sbb
add
lret
add
fldl
cmp
add
mov
add
aam
pushf
xor
add
shr
mov
sahf
sar
push
add
fnsave
aas
pop
mov
aas
sub
in
push
leave
mov
add
lret
aad
add
inc
add
cmp
dec
add
fnstcw
add
add
add
mov
add
xor
pop
add
add
fldcw
push
add
data16
icebp
scas
mov
add
incb
add
jae
add
add
aas
das
imul
xor
and
xchg
sbb
jge
add
push
icebp
xor
add
pop
add
or
push
add
add
addr16
mov
add
xor
test
arpl
testl
add
pop
push
add
and
shl
fwait
cld
lcall
add
fadds
or
repz
pop
and
and
add
mov
shll
repnz
sahf
mov
rorb
loopne
sub
imul
push
add
push
add
test
xchg
mov
insb
add
dec
add
add
or
inc
fistpll
dec
add
push
ljmp
sti
adc
insl
inc
add
add
cwtl
gs
dec
add
add
add
mov
test
mov
add
stc
dec
xlat
push
mov
mov
dec
add
aad
add
push
cli
pop
xchg
or
in
add
mov
jecxz
enter
ljmp
insl
jge
push
add
xchg
shll
add
cmp
sbb
jecxz
fadds
cmp
aam
lods
xchg
sbb
js
push
push
add
in
pop
fidivs
add
sbb
pop
loopne
add
js
cmp
add
jg
and
in
addr16
add
add
jp
idivb
popa
push
out
xchg
add
jne
jo
inc
cli
mov
add
add
ss
addl
xchg
out
jbe
cmp
sub
add
stos
sub
or
cmp
and
dec
lock
shl
insb
add
jnp
inc
cwtl
pushf
jae
xlat
aaa
orb
addb
and
int
sub
sti
shr
addl
mov
out
mov
add
add
add
sahf
mov
cmpsl
ficompl
scas
add
sbb
xchg
mov
xor
push
add
lock
out
jl
cmp
clc
jne
add
adc
js
iret
insb
add
outsb
add
repz
shr
sbb
stos
xor
and
dec
xchg
jo
and
out
xchg
sub
jg
cmp
add
jmp
sbb
add
xlat
in
mov
iret
xor
insb
add
mov
inc
add
adc
fcoml
add
pop
add
add
aaa
jo
test
mov
cmpsb
cmp
cmp
sbb
or
pushf
xlat
sbb
pop
adc
add
add
sub
fistpl
dec
add
add
add
add
fwait
loop
add
xor
and
gs
add
add
add
pusha
add
cmc
mov
add
je
pop
inc
add
cwtl
or
lahf
loopne
xchg
or
jle
add
test
mov
xchg
push
add
and
dec
shlb
adc
cmp
bound
lahf
test
push
mov
adc
and
ret
cwtl
dec
add
add
sub
or
add
jecxz
imul
pop
add
add
add
sar
ja
mov
mov
inc
cmp
pop
add
add
repnz
xchg
aaa
lods
inc
pop
orl
add
add
aas
dec
adc
rolb
xorl
and
shll
push
adc
enter
fwait
jmp
loope
add
movsb
imull
inc
enter
dec
add
dec
dec
dec
add
add
aam
mov
add
dec
add
lret
mov
fistl
out
lcall
add
pop
aaa
lret
aam
scas
push
lret
mov
adc
pop
add
mov
mov
sbb
add
add
add
add
add
into
inc
or
pop
sbb
addr16
aam
cmp
sti
inc
xor
and
or
mov
pop
add
and
aas
mov
sbb
mov
je
bound
das
in
add
call
pop
add
add
clc
mov
in
mov
mov
nop
out
mov
pop
call
std
xor
mov
push
cmc
inc
out
aas
mov
add
jge
push
add
mov
cmpsb
enter
add
loopne
jle
hlt
push
rcrb
add
movzbl
sbb
push
xor
xchg
xchg
xchg
ss
mov
cwtl
clc
pop
add
loopne
lods
lahf
outsb
add
pop
mov
jno
add
add
lds
jp
jns
movsl
pop
lahf
push
pop
fsubs
add
adc
das
aas
mov
ret
add
scas
jge
mov
push
add
lock
jle
add
xrelease
pop
ret
in
pop
jns
add
sub
nop
mov
cmp
int3
divps
fbstp
aas
loop
cmpsl
pop
jno
je
dec
add
xor
mov
or
test
in
fwait
in
lods
outsb
add
and
add
scas
jge
jp
adc
test
sbb
inc
shlb
movsl
fsincos
pop
loope
add
pushf
push
add
cmp
test
mov
into
cmp
data16
inc
add
in
sub
int3
jae
add
mov
out
add
in
add
sub
repnz
push
jl
push
add
pop
add
push
add
add
xor
add
mov
add
add
movsl
aam
pop
daa
lret
add
ret
fldcw
pop
ja
push
add
dec
add
and
mov
stc
push
aad
add
add
add
add
mov
xchg
nop
dec
sbb
xchg
add
or
and
cmp
xor
add
pop
add
push
add
arpl
xor
subl
lahf
test
mov
insb
add
lods
mov
add
add
add
std
push
and
mov
fists
cmpl
mov
mov
jmp
mov
int3
adc
inc
add
add
and
mov
fidivl
jne
stos
inc
in
xchg
inc
add
push
add
push
push
fsubr
int3
jmp
cli
cmp
jecxz
incl
aam
ret
cmc
pusha
add
lahf
in
xchg
sbb
fdivs
add
clc
enter
dec
shrl
sub
sbb
aam
or
mov
popf
or
mov
xor
add
add
pop
xchg
movsb
lret
xor
add
fildl
inc
outsb
add
pop
add
add
add
add
cmp
imul
mov
sbb
inc
aaa
mov
mov
inc
add
adc
fsubrp
movq
int3
fnsave
add
cwtl
rcll
xchg
sub
in
cmp
stos
outsb
add
movsb
lds
add
add
add
add
add
test
mov
inc
add
add
in
popf
dec
add
add
add
mov
mov
test
add
jo
xchg
add
add
add
mov
add
xlat
inc
add
adc
add
xor
pop
add
test
mov
add
aad
imul
mov
add
mov
iret
leave
dec
add
das
lcall
out
popf
inc
jge
rclb
or
outsb
add
daa
js
cltd
fstpt
push
sbb
adc
cli
aaa
sbb
fldcw
push
testl
je
mov
sub
sbb
xchg
les
add
inc
inc
add
dec
inc
add
jp
cld
cmp
mov
arpl
add
adc
arpl
add
add
stc
cli
addr16
add
add
adc
cmpsl
lret
xchg
dec
adc
jge
ljmp
inc
add
lock
or
jle
cld
clc
jmp
inc
clc
gs
xor
sahf
pop
scas
xorl
add
ss
push
add
nop
mov
add
add
or
xlat
jns
mov
mov
add
or
fsubr
push
add
mov
js
lret
sub
add
sbb
cmp
sbb
dec
add
and
cwtl
dec
orb
add
adc
ja
add
std
xor
fists
add
push
add
cwtl
mov
sub
enter
jp
xor
cli
lea
jl
mov
mov
mov
xor
jp
mov
jne
add
adc
jmp
enter
jmp
loope
add
add
cwtl
xor
sbb
mov
shl
push
cmp
popf
inc
add
add
push
out
jmp
xchg
pusha
add
add
add
add
sbb
iret
data16
add
add
add
sub
mov
push
add
inc
test
int3
mov
xchg
push
popa
sub
add
mov
add
aam
pop
cwtl
jb
and
imul
add
scas
inc
clc
fsub
arpl
cmp
xlat
ret
adc
cmpsb
add
fsubrl
inc
cmpsl
data16
add
pop
add
add
add
in
push
add
cmpsl
arpl
add
mov
add
inc
sbb
add
add
fcom
and
mov
dec
inc
add
add
sbb
call
add
add
inc
add
mov
loopne
inc
add
sbb
push
adc
cmp
and
mov
jbe
incb
sbb
mov
jo
stos
aaa
popa
sar
or
mov
js
inc
adc
rorl
jbe
and
mov
mov
add
mov
add
xchg
push
jl
pop
mov
add
dec
add
cmc
lret
jbe
and
ss
dec
add
mov
add
int3
adc
leave
add
sbb
jnp
ret
mov
mov
or
jge
add
out
add
xor
pusha
add
mov
or
cmp
add
add
dec
add
dec
add
mov
add
add
lods
cmp
adc
add
jl
imul
mov
daa
cmpsl
shrl
stc
dec
inc
add
add
andl
imul
sbb
push
lahf
faddp
call
daa
lret
cmp
movsl
or
add
add
add
jno
push
add
mov
xchg
data16
add
cmp
cmpsb
lods
stc
jae
ja
add
in
insb
add
sub
add
add
add
rcrb
add
in
idiv
mov
cmp
rol
pop
inc
loopne
or
or
jnp
add
cmp
sbb
xor
push
add
mov
xor
mov
sbbb
and
jo
cmpsl
dec
inc
inc
add
call
nop
pop
add
jbe
int3
pop
sub
dec
sbb
lods
pop
hlt
cmpsb
jnp
add
inc
cld
fdivrl
dec
add
add
add
mov
dec
add
test
not
fidivs
sti
test
jp
out
xchg
pop
add
subl
ret
and
add
add
std
les
sub
mov
or
mov
add
sbb
jns
ja
mov
inc
jns
scas
xchg
cmp
clc
fnstsw
inc
mov
pop
adc
insb
add
xor
adc
and
jl
loope
ljmp
loopne
fwait
outsb
add
xchg
add
adc
mov
add
jecxz
js
das
addl
add
add
add
lods
insb
add
sub
jg
pusha
add
add
rcll
add
add
sbb
leave
arpl
mov
into
adc
lds
add
call
xor
je
cmp
int
add
cmp
cmp
mov
xchg
jo
movsb
jecxz
add
add
jmp
adc
test
loope
test
loopne
xor
pop
arpl
ja
add
xchg
push
add
insl
ficoms
insl
ficompl
shlb
cmc
mov
cmp
xlat
jle
inc
int
inc
add
icebp
push
add
adc
test
xor
pop
dec
add
test
pop
sbb
add
lods
mov
mov
mov
add
push
test
xchg
ret
add
mov
mov
xor
ret
jge
add
sub
lcall
add
jno
mov
pop
pop
mov
inc
add
movb
inc
les
add
add
sub
add
mov
bound
sbb
ds
jb
dec
sub
cmp
inc
mov
aad
add
adc
adc
pop
add
aaa
xchg
fcmovb
ret
mov
xchg
push
dec
add
fdivs
data16
mov
dec
add
add
jle
and
push
mov
in
sub
into
int3
test
add
lea
mov
cltd
add
sbb
jb
xchg
or
add
add
push
xor
stos
pop
fnstcw
dec
add
dec
add
mov
pop
imul
ficoml
in
out
fildl
xchg
cmp
dec
add
mov
inc
cmp
mov
repnz
leave
cmc
pop
sub
jp
fnstenv
sub
pop
add
cwtl
inc
add
add
add
xchg
mov
add
add
sbb
sub
addl
xchg
clc
dec
add
or
or
xor
repz
add
or
pop
add
add
xchg
adc
or
mov
xorb
xchg
shrb
scas
dec
imul
mov
les
add
cli
jmp
add
lock
add
sub
add
inc
add
or
jnp
testb
outsb
add
xchg
pop
add
popf
das
imul
push
add
loop
das
sub
stos
add
add
ds
mov
sbb
cmp
aas
xchg
xor
mov
or
pop
shl
add
add
jae
jno
add
push
add
out
cmp
pop
divl
add
add
and
adc
das
ret
sbb
and
add
add
add
add
loope
out
add
aas
movsl
lods
addr16
xor
mov
mov
add
add
add
pop
add
aam
mov
jno
add
or
hlt
imul
lods
push
add
add
sub
add
pop
xor
aam
xchg
cmp
push
add
xchg
call
add
xor
dec
add
dec
add
add
subb
icebp
test
out
add
ret
je
add
addb
je
lret
cmp
add
jns
jg
fcoms
add
jno
outsb
add
stc
dec
xchg
ret
js
jl
xchg
jne
push
add
stos
fdivl
inc
or
cmp
cmp
hlt
pop
cwtl
xchg
aad
iret
je
shlb
add
add
add
sub
xor
and
add
mov
add
add
mov
add
add
adc
mov
cld
push
add
xchg
bnd
add
and
insb
add
fidivs
or
out
fcoml
add
inc
add
add
add
xor
sub
add
add
ret
sar
sti
pop
add
dec
add
lret
cmc
mov
adc
xchg
add
xchg
pop
add
cmp
add
pop
add
add
pop
add
add
xorb
out
sbb
enter
pop
les
pop
adc
push
add
inc
add
mov
mov
in
loopne
jl
or
mov
cmp
jl
lods
daa
push
add
xchg
inc
add
jae
scas
mov
mov
xor
jp
fcmovnbe
sbb
adc
pop
dec
add
pop
add
or
add
xor
add
jecxz
dec
aad
inc
mov
add
test
add
add
add
push
jne
cmp
jo
add
add
into
pop
add
push
add
ret
cmp
ja
add
add
stos
push
jae
std
sbb
inc
xchg
jbe
lret
inc
add
test
lock
pop
cltd
icebp
inc
push
add
popa
xor
jo
addb
or
add
add
andb
in
and
in
in
mov
cli
or
jle
mov
add
negb
stos
cmp
cwtl
cmp
xlat
xchg
add
add
cmp
add
add
jecxz
add
int3
xor
out
mov
add
cmc
cmp
insl
adc
fdivr
mov
arpl
sub
mov
add
add
mov
mov
sahf
xor
dec
add
add
inc
add
cli
add
xchg
mov
add
jnp
pusha
add
mov
ret
and
add
xchg
and
add
mov
cmpsl
das
sbb
popa
adc
clc
add
jb
mov
add
in
sbb
add
std
sbb
xchg
push
or
add
xlat
xchg
add
add
dec
xchg
adc
icebp
sub
push
mov
add
add
hlt
add
pushf
jnp
imul
add
xlat
jg
or
add
pop
add
or
dec
xchg
push
addr16
xor
push
popa
adc
fidivrl
add
pop
mov
jl
int3
add
mov
xlat
push
add
push
add
into
fdivrs
jns
and
mov
add
not
push
add
jae
cmp
insl
push
add
cli
shrb
add
add
cmp
lock
cmpsb
jmp
xchg
ljmp
out
and
dec
into
dec
add
pop
iret
xchg
dec
add
mov
add
sub
jb
pusha
add
add
mov
ja
fs
inc
add
rorb
add
rorl
add
imul
add
rcrb
nop
or
divl
fwait
xor
nop
push
add
clc
insb
add
js
jae
add
cmp
jbe
pop
add
lea
mov
mov
enter
neg
movsb
xchg
aaa
jmp
rol
mov
dec
pop
mov
xor
mov
insl
in
clc
and
and
lods
scas
sub
dec
das
push
mov
mov
push
add
aam
add
pop
add
inc
xor
lahf
fidivrl
add
movb
cmp
jg
sbb
push
add
sbb
add
arpl
cmc
aas
pop
mov
add
pop
pop
aam
sbb
aaa
daa
mov
add
cmp
add
loop
inc
push
add
cmpsl
repz
add
add
push
xor
shrl
add
push
add
inc
cli
add
pop
addl
jge
add
repz
sbb
and
xor
dec
add
out
mov
cmpb
add
add
outsb
add
pop
mov
inc
shll
pop
neg
leave
call
icebp
xchg
test
insl
mov
sbb
inc
add
cmpsl
aam
add
into
sbbl
push
add
add
jae
cmp
xchg
push
push
add
test
je
cld
in
daa
dec
add
add
in
pop
out
imul
call
or
mov
add
add
push
add
divl
jbe
add
mov
mov
lock
push
add
adc
add
inc
add
xorl
add
add
nop
cmp
sub
add
add
into
push
add
sbb
mov
lods
inc
add
add
mov
add
xchg
add
push
jb
or
xchg
sbb
js
pop
dec
add
sbb
xchg
or
inc
movsl
cmp
les
arpl
dec
sub
insb
add
insl
cwtl
cmpsb
jle
out
jge
and
vrsqrtss
jbe
mov
clc
out
add
mov
outsl
jg
or
inc
mov
hlt
in
add
xor
mov
inc
lret
std
push
add
pop
in
add
test
mov
add
movsl
or
stos
cmp
out
xchg
sbb
stos
pop
push
add
sbb
xor
mov
add
add
sub
das
or
mov
fwait
inc
add
cmp
test
sbbb
aam
aas
inc
add
cmpl
enter
pop
nop
outsb
add
lret
out
sub
clc
icebp
addr16
push
aam
dec
add
ficoms
call
lods
adc
add
xchg
test
jno
fcmovbe
push
add
add
adc
jno
xchg
repnz
add
cltd
repz
add
loop
push
fwait
xor
cmp
js
fdivr
sti
xchg
movsb
lds
inc
add
int
lahf
pop
add
inc
mov
into
lret
and
add
out
push
leave
fucomip
das
lock
xchg
xchg
test
and
out
xor
pop
sub
lds
test
pop
add
sti
or
hlt
sbb
xchg
add
sahf
jg
add
data16
jo
xlat
mov
add
mov
or
outsl
and
inc
add
pop
add
aas
into
cmp
out
scas
out
in
add
add
sub
lea
jmp
add
enter
das
leave
push
add
jg
je
or
mov
les
stos
test
cli
in
cwtl
mov
sbb
mov
mov
add
test
out
sbb
and
mov
and
insl
loope
add
lods
dec
leave
sub
inc
add
and
and
in
inc
add
scas
push
add
add
rcl
inc
inc
add
pop
push
movsl
add
pop
scas
sbb
insl
inc
test
unpckhps
mov
sti
jno
data16
and
mov
or
insb
add
aaa
jae
mov
mov
setge
add
cmp
lds
mov
call
mov
add
lcall
stos
adc
xor
repnz
mov
cmpsl
fidivs
mov
and
add
in
les
stos
movl
adc
les
cmc
adc
js
cmpsb
repnz
or
test
inc
add
jo
loope
inc
add
add
add
int3
sub
das
rcrb
add
pop
mov
add
pushf
adc
aad
push
inc
add
loope
inc
cmp
sbb
jne
aam
add
outsb
add
inc
add
add
add
shrl
add
add
testb
sbb
or
rol
test
arpl
xchg
push
jl
fistpll
add
lcall
and
add
adc
icebp
sub
stc
jle
int
add
sarb
fiadds
mov
add
fildl
add
jae
pop
cmp
mov
push
xor
not
or
cmp
shrb
sub
mov
add
test
cltd
mov
jns
idivl
mov
std
in
lret
push
add
je
and
pop
ret
aad
or
mov
lods
bound
out
insl
cmpsl
frstor
push
add
jp
je
outsb
add
mov
in
mov
lock
fsub
add
hlt
sub
or
je
push
add
stos
jb
stos
fisttpl
jns
xchg
mov
jnp
add
pop
add
mov
cmp
mov
mov
add
es
pusha
add
xor
add
test
add
sbb
and
sub
fwait
mov
insb
add
and
add
push
add
lock
inc
add
call
add
add
sahf
bound
imul
add
nop
aad
add
push
add
mov
add
add
insl
dec
jno
and
lods
jl
push
mov
inc
fistps
add
rorb
out
xchg
add
inc
xchg
mov
mov
mov
ljmp
cmp
pop
mov
pop
add
scas
cmc
jmp
jbe
into
adc
out
add
hlt
sbb
addl
roll
add
lcall
in
add
sbb
mov
xor
add
stc
cwtl
test
xor
and
cli
mov
loop
jnp
mov
push
add
subl
adcl
sahf
push
add
inc
arpl
pushf
in
mov
pushf
loopne
add
data16
pop
enter
mov
add
ret
sbb
pop
in
pusha
add
xchg
mov
jbe
imul
or
cmp
add
add
add
add
jne
add
lret
mov
loope
test
or
insb
add
add
out
out
jne
or
sub
cmp
lock
push
add
in
xorb
or
jmp
mov
cmp
pop
popf
lea
and
push
int3
ret
shrb
pop
add
push
add
insl
jo
loope
pop
add
lods
add
jbe
jle
aas
mov
pop
addr16
out
jne
cmp
add
add
push
add
mov
dec
add
adc
das
sub
add
push
add
mov
or
popa
loopne
in
add
cmpsb
movb
add
xchg
or
enter
add
lahf
movq
pop
mov
cld
rcrl
add
cmp
or
cmp
and
and
loop
sbb
xorps
add
add
cmp
fildll
mov
jno
loopne
add
pusha
add
add
mov
sub
jb
mov
imulb
add
mov
arpl
dec
add
mov
add
add
add
add
mov
or
call
add
add
add
push
movb
xchg
push
add
fwait
mov
lahf
add
mov
pop
add
mov
rcrl
adc
adc
add
sbb
pusha
add
addl
add
mov
imul
xchg
scas
daa
inc
add
scas
pop
add
xchg
sub
mov
iret
mov
add
lret
mov
dec
add
sub
add
pop
mov
add
in
fimuls
loopne
adc
repz
pop
test
add
pop
push
in
outsb
add
jae
add
adc
bound
dec
add
test
add
sub
add
add
imul
sub
das
cld
iret
sbb
dec
inc
stos
fdivrl
cs
and
pop
add
movsl
xor
int3
xlat
fldt
push
jecxz
je
arpl
pop
leave
sti
cs
add
mov
add
inc
and
push
mov
sahf
repnz
ds
aam
lods
mov
add
rorl
sub
sub
ja
push
add
mov
iret
push
xchg
lods
out
popf
in
repnz
push
and
jb
in
ljmp
in
cmpsl
sub
sbb
pop
add
dec
call
push
js
xchg
and
std
inc
add
add
or
add
add
add
xchg
inc
push
add
lods
insl
ljmp
add
cld
mov
add
mov
pop
mov
add
mov
add
mov
add
push
add
jg
jns
add
add
xchg
mov
sbbl
cwtl
in
in
add
dec
mov
leave
sub
mov
xchg
arpl
xrelease
add
push
add
xor
pop
add
and
ret
mov
push
add
dec
xor
pushf
test
jbe
cmpb
inc
jno
icebp
js
negb
add
in
push
add
add
add
xor
pop
and
add
pop
inc
outsb
add
xor
andb
je
fwait
push
add
cli
pop
jb
outsb
add
adc
xchg
cltd
inc
add
pushf
adc
sub
sub
adc
jns
adcl
mov
pop
add
mov
sbb
loop
or
ret
xchg
sub
inc
mov
ret
add
mov
negl
add
popa
mov
outsl
stos
repnz
int3
add
dec
add
lcall
push
mov
mov
or
shld
xchg
cmc
call
add
stc
inc
repnz
jmp
inc
jmp
fidivrs
or
lods
xchg
xchg
loopne
mov
pop
mov
xor
jp
adc
out
push
add
mov
add
aas
insl
in
cmc
dec
jbe
in
pop
out
pop
add
loopne
repnz
loopne
stc
ret
and
xchg
fwait
dec
add
dec
jnp
and
loop
add
jae
ljmp
add
add
roll
lock
add
sahf
fwait
xor
arpl
add
pop
add
popf
test
adc
fwait
imul
in
idivl
xchg
aad
mov
loopne
jnp
ljmp
jb
add
push
add
cltd
std
jae
call
add
loopne
fdivr
ljmp
add
jecxz
rorl
ret
in
xor
pop
out
add
lock
sti
shrl
push
test
xor
pushf
cmp
lret
inc
cwtl
fwait
out
adc
mov
add
add
dec
sub
xlat
aad
mov
mov
add
lea
bswap
insl
inc
add
fldl
add
add
cmp
add
xor
ficomps
add
mov
sub
jne
or
cmp
add
fidivrl
add
ret
cmp
xor
jmp
add
mov
bound
repz
add
add
add
dec
scas
outsl
jne
add
bound
in
jb
and
aas
mov
dec
dec
add
xchg
imul
add
lea
addb
cmp
shrl
add
pop
sub
icebp
push
add
repz
inc
shll
adc
rorl
add
sbb
xor
xlat
mov
mul
popf
pop
popf
adc
hlt
cltd
sub
mov
dec
add
pop
xchg
cmp
sub
add
dec
add
stos
mov
add
jno
jns
push
add
pop
cmc
sub
test
outsb
add
lods
mov
mov
sbb
adc
aas
jno
out
loopne
push
add
add
mov
add
add
dec
add
out
std
adc
mov
rorb
cmc
jae
or
add
add
mov
add
lods
mov
aam
pop
adc
push
add
add
cs
mov
push
adc
cwtl
lods
pop
add
add
and
addr16
fcmovbe
out
xor
add
xchg
jecxz
dec
add
add
xchg
xchg
test
pusha
add
add
shrl
jge
add
cmpl
aad
shl
xor
mov
push
add
mov
add
sbb
ss
cltd
and
push
add
add
push
add
add
addr16
add
add
and
adc
sub
pop
add
dec
aam
call
add
dec
add
jl
cltd
scas
jmp
add
push
add
add
add
out
cmp
dec
adc
add
in
xor
push
add
clc
cmp
subb
add
cwtl
sub
incb
addr16
add
sbb
dec
add
add
test
sbb
adc
shll
ds
lret
stos
cli
dec
add
imul
inc
add
cmp
lret
stos
mov
jmp
inc
lea
xchg
add
sub
lock
popl
repnz
xor
enter
xor
mov
loop
movsl
dec
mov
add
inc
add
add
inc
xchg
scas
or
sbb
jnp
add
call
mov
jne
dec
fstenv
mov
fadd
jns
fldt
stos
cmp
mov
xchg
mov
jbe
fcomps
add
and
pop
push
add
pop
add
sub
mov
xor
clc
addr16
push
add
test
lock
or
jmp
cltd
pop
and
lods
mov
or
cmp
ja
int
add
jmp
rolb
add
dec
xor
pusha
add
push
add
mov
sub
add
add
mov
sub
lea
or
add
push
add
sahf
sahf
push
add
sbb
sti
xchg
js
xchg
jno
out
cmpsl
jae
in
push
add
jbe
out
bnd
or
mov
add
jmp
pop
add
add
or
aaa
xchg
mov
add
add
mov
add
dec
add
sub
dec
add
add
adc
loope
mov
incb
add
lock
inc
add
loope
xchg
daa
mov
adc
mov
add
mov
jp
jbe
add
aaa
ljmp
dec
add
add
mov
dec
mov
add
andb
decb
shll
add
add
sub
and
jo
push
add
pop
orl
xchg
cmp
jge
jmp
add
add
dec
add
jp
int3
scas
mov
sbb
test
mov
add
add
fbld
dec
sbb
add
add
mov
pop
add
jle
mov
wbinvd
sub
insb
add
je
ret
sahf
sbb
les
into
in
add
les
xchg
jns
push
add
push
add
lods
sbb
dec
add
mov
cmpsl
jmp
loopne
xor
cmpsb
scas
add
sti
mov
sahf
arpl
ret
mov
insb
add
mov
xor
gs
jge
xor
gs
jbe
loopne
adc
dec
add
add
ja
out
fsts
push
add
ja
dec
add
rorb
jge
cmp
mov
add
pop
sub
xor
push
add
adc
jmp
adc
je
jae
add
add
add
loopne
add
mov
jo
adc
dec
add
imul
xchg
add
add
sbb
push
add
add
into
div
rolb
dec
inc
cmc
sub
xorb
sbb
add
mov
movsb
scas
pop
add
add
dec
add
sahf
xchg
or
aaa
jle
xlat
push
jns
repz
add
mov
into
mov
lea
pop
add
pop
cmpsl
adc
call
add
add
adc
pushl
add
cld
sub
in
out
cli
cmc
cmp
jl
jae
cltd
aad
push
clc
faddl
add
add
xchg
jbe
jl
adc
mov
add
inc
sti
push
cmpsl
rclb
mov
add
push
add
pop
notb
push
js
xchg
pusha
add
sahf
aam
add
add
xchg
mov
iret
leave
cs
dec
add
add
and
cmp
sbb
mov
cmp
push
add
or
daa
xchg
push
add
lret
ret
add
stos
mov
jo
leave
xor
xor
and
das
mov
sarb
xor
xchg
insb
add
add
xchg
aas
sti
cwtl
hlt
xor
jbe
add
push
sub
inc
shll
xor
sub
jo
les
fldl
push
add
les
add
inc
lcall
add
xchg
push
adc
dec
add
add
add
jmp
add
aam
punpckhbw
mov
add
add
or
rcrb
jb
ljmp
andl
repnz
out
sub
and
xor
xchg
test
add
add
mov
add
add
or
sub
cwtl
jecxz
add
jns
pushl
enter
push
jl
mov
scas
scas
movsb
call
push
add
bound
ja
add
cmpsl
add
aaa
and
add
jb
jno
outsb
add
jmp
push
add
orb
cmp
int3
mov
fisubs
add
add
push
add
movsb
mov
jo
outsb
add
add
lret
sbb
add
mov
popf
lret
cwtl
jb
popf
push
add
sahf
push
xchg
leave
popf
mov
mov
inc
push
add
ljmp
add
add
jge
add
shl
cltd
mov
fidivrs
add
xor
dec
add
daa
mov
mov
sbb
sub
pop
push
add
lods
rcll
add
movsl
mov
mov
adc
leave
in
mov
jb
xor
dec
add
inc
add
jp
loope
push
call
inc
pop
movsl
lret
push
add
adc
lods
or
stos
imul
loope
jae
add
xor
pop
cmpsl
stos
and
and
movsl
sarl
add
jg
add
es
call
int3
cmp
sub
add
ds
mov
dec
mov
andl
add
sbb
xchg
mov
push
add
enter
enter
frstor
add
lods
xor
cmpsl
xlat
xchg
scas
adc
insb
add
add
mov
add
mov
jno
and
mov
pop
jne
xchg
mov
add
xchg
xchg
xchg
mov
adc
or
add
add
dec
add
add
aad
stos
cmpb
out
jle
jo
dec
add
and
cmp
inc
add
xor
imul
push
ret
add
mov
jne
add
stos
aas
pop
add
shlb
test
add
lret
cmp
rorl
add
stos
icebp
or
pop
inc
cwtl
adc
addl
pop
mov
xor
dec
pop
scas
adc
fucomi
xchg
lods
adc
lods
movsl
cltd
into
test
add
add
add
and
cmpsb
sbb
or
jle
xor
pusha
add
add
mov
add
adc
insb
add
repnz
add
sbb
cmp
mov
dec
add
add
mov
xchg
aas
sbb
add
aam
xlat
popf
bound
and
add
inc
xchg
insb
add
sbb
and
jp
lcall
bound
in
sti
push
sbb
add
mov
push
add
add
sub
jns
add
xlat
ja
lahf
pop
sub
data16
adc
add
add
fidivrl
in
add
jmp
pop
add
add
push
jl
fucomp
je
fwait
outsb
add
out
add
add
and
movsl
sub
and
add
fstpt
add
stos
lock
add
add
test
push
add
dec
test
jp
repnz
bound
xlat
cltd
cmp
rcrb
sar
xor
mov
add
sbb
imul
cmp
mov
mov
in
add
pop
mov
fdivp
stos
sbb
add
add
add
mov
push
mov
add
xchg
lsl
addr16
mov
add
pop
add
push
add
mov
mov
mov
ficompl
push
add
xchg
and
or
popf
aaa
push
add
loopne
add
xchg
and
dec
lock
sub
add
or
je
je
sarb
xchg
rcrb
add
fcom
pop
push
add
sub
or
clc
mov
outsb
add
or
add
add
mov
clc
in
add
cwtl
aas
in
or
std
sub
push
add
dec
dec
add
lret
push
add
out
add
pop
jle
xchg
xchg
or
add
lea
nop
popa
faddl
add
inc
or
cli
cmp
testl
loope
xor
dec
add
inc
add
add
adc
fsubrs
outsb
add
movsb
lds
add
cmp
dec
cmp
lahf
lds
mov
add
add
mov
and
mov
add
popa
nop
lret
lret
out
and
leave
jmp
aad
add
add
dec
xor
mov
ja
add
jns
std
and
lods
mov
insl
out
or
addr16
adc
js
lods
data16
mov
add
pop
call
cmc
pushl
add
fnstsw
into
inc
add
cli
dec
add
aad
xchg
pop
add
jp
call
add
je
adc
dec
add
lret
or
push
add
scas
xor
arpl
add
mov
add
add
hlt
rcrb
ljmp
and
add
add
dec
add
addr16
fwait
sti
mov
push
add
add
cltd
test
xor
mov
nop
inc
push
rcrb
shll
into
je
in
cli
cltd
or
ret
mov
popa
mov
in
mov
dec
push
add
inc
add
sub
data16
jmp
jnp
mov
add
mov
mov
sbb
inc
add
pusha
add
pop
out
repz
add
add
loopne
dec
add
jns
and
dec
add
mov
dec
jg
push
mov
add
jp
mov
sbb
fs
xchg
in
mov
add
mov
mov
data16
xor
decb
lahf
das
push
jns
add
add
add
and
in
push
insb
add
jecxz
add
add
cltd
jecxz
xlat
sub
or
jmp
imul
xor
add
sbb
rcl
shrl
pop
mov
dec
add
add
add
and
fisubl
add
add
movsb
movsb
lret
fsubp
mov
and
pop
add
int
cmp
push
add
cmpsb
jg
sub
add
mov
add
sbb
add
andb
xchg
adc
xor
test
rorb
mov
aaa
pusha
add
xrelease
cmp
add
pop
add
dec
add
cmpsb
leave
bound
xor
pop
mov
add
dec
xor
jno
cmc
pop
add
inc
dec
adc
cmp
xor
repz
mov
in
push
pop
add
add
pop
push
add
sub
xor
test
add
add
add
add
add
add
add
outsl
ja
gs
data16
xor
mov
loope
lock
test
add
cmpsl
mov
add
add
ret
add
and
mov
add
mov
adc
imul
sahf
push
add
adc
test
add
loope
adc
xchg
add
add
imul
mov
add
lcall
cmp
fnstenv
push
xchg
add
xor
imul
insb
add
scas
test
fcompl
xor
adc
sbb
inc
sbb
add
mov
pop
jno
add
add
adc
fiaddl
dec
add
cwtl
in
pop
or
or
aam
add
orb
xchg
in
add
insb
add
pop
ffree
xchg
inc
add
add
mov
inc
add
lcall
add
add
jp
or
fcompl
ret
out
add
outsb
add
push
mov
add
scas
out
inc
add
cwtl
int
xchg
adc
lahf
pop
hlt
and
in
dec
add
sarb
add
insl
fsubrl
ret
sbb
jnp
nop
js
sbb
jb
fabs
jbe
lods
inc
cmp
pop
add
bound
mov
jecxz
add
add
add
data16
add
add
ret
lock
or
movsl
outsb
add
pop
test
add
push
add
mov
add
sub
add
orl
sarb
scas
pop
mov
out
add
imul
push
add
cmc
insb
add
in
outsb
add
movsb
and
je
cmc
lahf
cmp
and
lahf
ljmp
imul
int3
and
adc
js
sbb
add
mov
mov
push
imul
push
add
add
add
jp
sbb
test
dec
lods
push
popf
into
loopne
outsl
push
add
adc
xor
inc
pop
and
add
add
dec
add
jb
jle
call
ret
xor
mov
cmp
ja
fistpll
or
arpl
jne
add
add
push
pop
add
add
add
add
add
and
sbb
adcb
sbb
call
insb
add
jmp
pop
add
in
sub
jae
add
add
mov
add
dec
jge
leave
pop
fcomps
mov
cli
sub
pop
sbb
add
mov
or
pop
repnz
add
jecxz
jmp
out
and
or
fstl
leave
fistps
mov
xor
dec
add
sbb
lods
mov
add
cmp
data16
or
cmp
push
jno
sbb
in
add
fimull
xchg
stc
andb
int
cmp
iret
std
cmp
bndldx
jl
pop
pop
push
add
cld
pushf
test
ljmp
xchg
mov
insl
jl
xchg
and
sub
jecxz
add
pop
push
jo
push
add
outsl
sub
shll
fnsave
add
add
daa
pop
add
jle
or
and
lret
add
in
and
jecxz
pop
test
or
les
add
add
mov
or
add
cli
rcrl
cmp
addr16
outsl
dec
mov
stos
sbb
jne
nop
int3
fisttpll
add
mov
sbb
add
sub
sti
arpl
sub
add
add
jae
mov
aad
aaa
ja
in
fnstsw
and
and
mov
add
cmp
dec
add
out
shll
mov
push
add
imul
or
into
mov
cwtl
sbb
push
add
stos
inc
push
add
shrl
sbb
lods
sbb
pop
orl
or
ficoml
add
add
adc
loopne
outsl
sahf
jae
nop
or
outsb
add
shlb
sbb
dec
stos
xchg
sbb
jl
imul
push
fildl
push
add
int3
pop
add
add
addr16
add
dec
popf
and
sbb
add
movsb
inc
push
dec
add
test
enter
popf
mov
add
data16
pop
aas
sbb
rcrb
cmc
insl
xchg
aad
mov
mov
adcl
mov
outsl
mov
sub
sbbl
mov
movsb
jecxz
add
add
add
jne
add
add
cmpsl
stos
paddb
jbe
aam
ljmp
mov
push
pop
add
repnz
xlat
cltd
push
cli
add
sbb
xchg
mov
mov
add
loope
add
or
add
add
into
add
adc
inc
lods
clc
rcl
xchg
cmp
stos
inc
add
lock
icebp
fisttpll
xchg
mov
xor
scas
rcrl
cmp
cmp
lret
xchg
pusha
add
mov
insb
add
add
das
loop
adc
and
lahf
sub
adc
mov
push
sbb
push
add
aad
test
sbb
js
pop
push
or
and
pop
push
test
and
das
mov
mov
and
jle
ret
add
sub
add
add
or
in
xchg
scas
je
xor
push
add
inc
into
dec
outsb
add
mov
inc
or
inc
mov
add
popa
xchg
or
mov
adc
cltd
test
ret
mov
fidivrl
mov
pusha
add
mov
dec
add
mov
pusha
add
int
add
add
pop
add
mov
lcall
cmp
repz
adc
mov
mov
add
inc
add
add
fucomp
add
inc
out
add
add
mov
add
pop
add
movsl
test
scas
adc
mulb
push
add
xchg
lods
inc
inc
add
repz
add
fwait
out
add
or
ljmp
dec
add
sar
add
test
out
sti
out
sub
add
xchg
dec
hlt
imul
mov
stos
xchg
or
jns
inc
add
sub
lcall
rcl
rcr
ret
jno
add
les
ret
inc
jno
arpl
dec
out
les
jae
das
enter
pop
add
adc
stc
xor
pop
sub
and
ja
add
add
add
lock
add
or
in
jne
hlt
add
inc
dec
sbb
add
dec
xchg
ja
lods
mov
add
pop
and
sbb
mov
push
add
mov
add
xor
sbb
lea
bound
mov
mov
add
and
jecxz
into
xchg
dec
xor
adc
aam
gs
mov
jne
add
jge
sarb
add
cltd
into
fsts
movsb
xor
jmp
xor
mov
nop
jecxz
add
add
fcom
idivl
ret
push
movsb
arpl
add
les
jne
add
fistpll
jno
sub
add
ljmp
push
add
add
lahf
or
pusha
add
data16
push
add
test
sub
int
aaa
int
data16
incl
xorl
jl
add
insb
add
mov
stos
xchg
test
add
mov
add
popf
jl
jne
pop
add
loope
shlb
add
add
ret
push
mov
sub
or
mov
push
add
out
mov
push
add
push
jbe
mov
add
mov
pmovmskb
cmpsl
jmp
jl
or
mov
jg
dec
add
loop
lock
push
add
jns
es
loop
xchg
in
jno
imul
loope
hlt
arpl
and
sbb
cltd
sti
into
ret
sub
and
xor
cmp
cmpb
dec
add
imul
lock
mov
add
add
js
add
sahf
outsb
add
stc
sbb
add
jno
into
pushf
dec
fcompl
ret
adc
and
ljmp
clc
outsl
dec
jb
insb
add
sub
adc
fdivrl
test
add
add
lds
add
xor
and
sub
rorl
cli
inc
add
add
out
inc
add
add
add
add
jg
xor
leave
lock
push
add
adc
adcb
add
pushf
lea
lcall
daa
in
fwait
test
add
and
adc
lahf
and
pop
mov
mov
mov
add
add
les
cmc
ret
add
aas
cmp
cmp
aad
call
aaa
jbe
sub
cltd
mov
dec
lea
pop
xorb
jge
add
add
stos
stos
pushf
xor
or
negl
add
xchg
mov
sbb
xchg
enter
fldt
add
cwtl
lret
jbe
xlat
rorl
stos
sub
pop
cmpsl
add
dec
cld
iret
mov
stos
add
xor
pop
mov
into
js
movsb
shlb
cmp
jo
lret
aad
add
imul
jg
lahf
pushf
lea
mov
pop
add
outsb
add
add
xlat
in
dec
add
adc
cmp
xchg
stc
inc
add
shlb
add
out
add
push
add
ljmp
imul
mov
add
add
adc
sub
aam
cmp
dec
add
lea
fnstsw
add
add
adc
sysexit
push
add
hlt
sti
pusha
add
pop
call
pop
add
and
mov
inc
add
mov
add
add
icebp
sub
add
ret
dec
add
out
sub
add
mov
ds
ret
push
test
xchg
cmp
push
add
xchg
sarl
xlat
orb
int
add
mov
add
in
fcomps
fbstp
sarb
add
mov
shl
sbb
and
push
add
jbe
xor
loop
add
icebp
pusha
add
int
and
dec
fisubrl
add
lods
cmp
fimull
add
dec
add
add
repnz
mov
add
imul
lret
out
push
cmp
sbb
add
std
pop
iret
dec
add
add
or
add
push
add
fucomi
push
add
mov
add
and
inc
xchg
sbb
pop
add
icebp
jnp
add
add
adc
addb
mov
cmp
add
stos
push
cmp
lds
push
ljmp
inc
mov
int3
and
cld
add
call
push
add
imul
adc
add
adc
adc
mov
add
popl
mov
sahf
loop
addb
mov
lds
push
add
js
and
or
xchg
popf
push
add
insl
xchg
fistpll
pop
add
addr16
shrb
add
cmp
rol
push
add
push
add
add
clc
push
mov
je
popa
scas
adc
push
add
jbe
fwait
sub
subl
test
mov
jmp
cmp
add
sbb
popf
loopne
add
leave
push
mov
inc
adc
add
mov
scas
push
jnp
add
roll
movb
xchg
inc
add
adc
sub
xor
add
fdivrl
sub
add
dec
add
int
add
mov
mov
lods
cwtl
int
add
ret
out
pop
add
add
nop
adc
mov
add
xor
cmpsb
pop
jo
test
add
add
cltd
lret
push
add
add
fildll
scas
add
stos
arpl
sbb
das
arpl
inc
mov
push
add
mov
ljmp
adc
adc
pop
add
das
iret
inc
add
add
and
add
insl
leave
mov
or
imul
xor
pop
xchg
add
mov
sti
xor
adc
xchg
lret
test
mov
dec
add
jle
bound
mov
mov
add
nop
ret
push
add
xchg
add
movsl
into
out
dec
add
add
inc
int
or
add
push
push
add
dec
add
add
cltd
mov
add
ljmp
aas
xlat
inc
mov
rorb
ret
cmp
addr16
add
push
add
test
sub
rclb
mov
add
jo
hlt
dec
je
sti
pop
sub
mov
add
and
mov
or
jnp
adc
pop
cmp
xchg
adc
add
outsb
add
adc
fptan
fnsave
xchg
xor
or
xchg
sub
fdivrp
hlt
std
leave
adc
sub
inc
mov
test
or
shlb
pop
add
adc
dec
add
push
clc
inc
mov
orb
dec
add
add
add
dec
add
mov
cmp
mov
inc
add
cmp
rcll
test
std
in
add
cmp
mov
add
xor
sub
mov
and
lods
ds
in
cld
sbb
xor
mov
xlat
imul
cmpsb
int3
sbb
fadds
cmp
add
push
loop
and
jl
jmp
pusha
add
decb
or
inc
xchg
jnp
sbb
add
and
xor
and
add
add
xchg
mov
add
xor
pop
add
xchg
mov
dec
les
add
jnp
sarl
add
xchg
movsl
jb
loope
mov
in
shrb
xchg
ja
sarb
popf
xchg
stc
push
fistl
inc
add
add
mov
sarl
xorb
push
add
push
add
add
add
add
xlat
adc
out
fwait
inc
pop
daa
fbstp
add
cmp
les
add
mov
jb
fwait
sub
or
push
add
sti
dec
add
popf
lods
cmp
or
in
movsb
das
sbb
mov
add
add
add
mov
push
push
add
add
sbb
pushf
mov
mov
stc
ss
sarb
nop
mov
xchg
and
adc
leave
rorb
dec
add
add
add
mov
add
adc
shll
add
push
sbb
lret
lods
xchg
cltd
mull
jns
mov
sub
cmp
add
call
add
xor
xchg
out
sbb
xor
test
mov
mov
add
add
rolb
add
shl
out
test
push
xchg
dec
add
pop
add
xchg
add
imul
cltd
inc
adc
ljmp
add
push
add
jl
iret
iret
cmp
aam
add
lcall
insl
lret
sbb
jb
mov
or
enter
add
sbbl
add
add
mov
add
add
ret
push
add
add
xchg
jle
test
xchg
std
imul
out
mov
cli
outsl
sub
mov
ljmp
add
cmp
in
ja
add
add
sub
mov
add
lret
jnp
push
sub
xchg
sbb
call
mov
stos
mov
jns
add
loopne
add
add
fwait
pusha
add
xchg
scas
add
inc
add
add
or
sti
and
das
dec
add
mov
add
xchg
xchg
or
add
mov
mov
repz
add
add
add
dec
add
jmp
add
add
jae
add
add
xlat
mov
sbb
stc
adc
loopne
je
inc
scas
or
pusha
add
mov
imul
push
add
add
iret
sti
int
int
add
ljmp
cmp
nop
ja
or
roll
dec
add
add
add
mov
ds
jl
dec
shll
push
add
or
and
dec
add
jns
fcmovb
inc
lret
add
cmp
fisttpl
add
pop
push
add
fidivl
stos
jg
clc
les
jbe
mov
cltd
leave
aaa
iret
imul
xchg
enter
add
add
pop
roll
mov
arpl
add
mov
add
add
jno
add
add
movsb
jl
lock
in
sahf
or
cmpsl
sub
inc
xorl
add
ficompl
pop
jl
iret
es
fdivrp
leave
cmc
pop
add
jnp
xchg
mov
add
pop
sahf
call
add
mov
or
add
sbbb
das
push
or
loopne
mov
adc
inc
faddl
add
xorl
add
movsb
mov
mov
add
cmp
push
add
cmp
popa
mov
jo
sar
push
add
clc
pop
add
or
lock
inc
add
cmp
pop
jp
aam
dec
add
xchg
arpl
jns
add
add
add
faddl
pusha
add
and
iret
inc
add
scas
and
add
out
je
add
mov
repnz
ret
xor
lret
das
mov
sbb
add
repz
add
add
add
imul
loope
add
and
xor
mov
sbb
or
jg
sub
in
outsb
add
in
push
add
add
or
push
push
add
mov
in
or
fildl
add
push
add
add
cmp
loop
ljmp
cmp
push
test
jg
add
test
aas
mov
add
lods
rclb
push
add
outsb
add
and
les
add
add
bound
in
lock
dec
cltd
test
cmp
add
push
movsl
or
sub
push
add
add
xor
leave
into
cld
adc
hlt
lock
mov
sub
cltd
shl
inc
mov
push
add
inc
add
add
out
inc
sahf
mov
popa
jl
aaa
cld
and
and
push
sub
xchg
imull
mov
repz
add
sub
sbb
or
xlat
adc
pop
add
dec
add
call
mov
mov
sbb
loop
shll
add
inc
dec
add
loopne
pop
push
pop
add
add
xor
add
les
jle
call
test
fldlg2
jmp
add
sbb
cmp
std
xor
test
add
lret
add
fstpl
add
add
fsubrs
sar
or
stos
sti
sbb
fdivr
ror
push
add
and
adc
add
in
ljmp
add
add
add
add
out
out
rclb
in
jg
add
or
cltd
or
pop
add
add
repz
pushl
and
out
jl
ret
js
fsubr
clc
std
fwait
in
fiadds
out
sub
push
jle
call
cmp
dec
add
fdiv
leave
or
sbb
add
add
movsl
std
mov
and
cmp
lret
rcll
clc
inc
dec
sub
mov
cmc
scas
clc
shlb
add
and
add
jle
in
into
jbe
subl
add
add
add
lret
jo
out
add
add
add
pop
lahf
jo
push
test
adc
out
imul
or
lock
test
jle
jne
push
add
mov
push
add
aaa
add
int3
rorl
add
add
add
mov
in
sub
in
repz
test
lods
mov
or
inc
add
sbb
dec
add
push
movsl
lahf
jno
mov
int
sub
mov
andb
les
add
test
push
add
add
adc
insb
add
xchg
jae
add
add
aaa
or
add
or
test
xchg
add
fisttpl
add
jo
rorb
add
into
stos
vrsqrtps
divl
add
cmp
mov
add
add
add
out
jns
cmc
in
sahf
lds
add
loop
adc
jp
push
cmp
jecxz
xor
pop
cli
jno
lods
pop
outsl
lods
xchg
movsl
adc
leave
add
add
movsb
jae
mov
add
dec
add
outsl
fcomip
jmp
add
cld
fcompp
jl
inc
add
add
jnp
cmpsl
or
jns
add
inc
repnz
popa
adc
int
cli
jmp
aad
cmp
sub
mov
add
int3
jecxz
mov
add
jns
add
std
sbb
push
add
pop
add
psubw
add
add
stos
push
add
aam
in
add
in
adc
xor
cwtl
mov
add
jg
jmp
and
sbb
adc
add
or
mov
inc
jg
cmpsb
xchg
push
pushf
out
mov
fiadds
mov
cmpsb
lea
add
fdivrl
add
in
dec
add
push
add
gs
rcll
pop
mov
mov
aam
pop
push
add
cmp
cld
nop
xlat
xor
mov
in
push
mov
add
shll
add
add
ljmp
data16
sub
add
xor
int3
cmp
cmpsl
scas
aad
subl
add
ja
add
loope
sbb
add
inc
aad
add
mov
add
push
inc
add
aaa
aas
lds
add
into
mov
outsb
add
add
iret
jge
add
test
xor
push
add
adc
jne
cmp
push
add
dec
add
jecxz
mov
add
imul
add
add
jo
addr16
push
add
add
idivb
lret
push
add
je
sbbb
dec
add
push
pushf
int3
bound
mov
add
inc
or
add
aaa
cmc
and
mov
pop
add
cli
mov
les
sbb
out
je
add
add
add
mov
jle
bound
les
add
movsb
add
mov
or
outsl
fs
adc
add
add
add
fdiv
pop
and
lods
sti
jno
add
test
push
add
sahf
xlat
lds
jp
repnz
add
add
int
or
jge
add
mov
add
xor
or
cmovnp
loop
mov
pop
add
cmp
cmp
xchg
lock
addr16
fimuls
popl
add
stos
in
inc
add
add
add
xor
add
add
lock
push
add
add
adc
js
out
andb
dec
add
pop
push
add
jnp
dec
add
add
add
inc
add
repnz
or
sub
scas
test
leave
pusha
add
xchg
sub
or
mov
or
mov
jg
or
jg
data16
add
add
shll
arpl
out
mov
add
add
add
in
lock
push
fistpl
add
mov
add
xchg
push
add
add
dec
fnstsw
loope
popf
mov
push
and
in
inc
add
fwait
mov
inc
mov
dec
popa
aam
mov
dec
loope
add
jno
out
and
and
or
daa
ja
sar
add
int
fs
dec
add
mov
add
add
push
add
add
jne
add
add
add
fcoms
inc
incb
outsl
or
mov
stos
addr16
sbb
inc
add
out
stos
jne
add
movsb
fcompl
add
sbb
and
clc
repz
pop
add
sti
add
add
add
add
cmp
outsl
ret
outsl
outsl
or
sbb
add
or
jge
mov
cmp
add
dec
sub
enter
lock
jno
adc
add
cwtl
mov
subb
cmpsl
imulb
cltd
std
je
dec
lret
rcrb
xchg
sahf
mov
inc
push
xchg
test
sti
fsubrl
adc
ret
xor
int3
dec
add
clc
xchg
push
add
add
mov
add
stos
sub
jnp
cmp
mov
dec
push
sbb
pop
scas
cmpsb
mov
and
push
add
mov
inc
add
add
nop
adc
daa
add
test
cmp
inc
add
xor
pop
add
dec
add
fs
adc
jb
cwtl
mov
push
xor
xor
fisttpll
into
mov
inc
push
add
add
mov
push
add
xchg
xor
mov
std
mov
fwait
lcall
dec
ljmp
xlat
add
push
add
add
add
je
push
add
jecxz
and
xchg
into
inc
add
add
inc
data16
push
add
lock
mov
stos
jmp
xor
and
jmp
insb
add
push
add
add
add
add
bound
cmp
arpl
add
add
sub
gs
pop
add
cmp
repnz
and
push
pop
inc
add
add
pop
cwtl
repnz
ret
add
add
arpl
ja
lock
lret
xchg
mulb
add
out
fmull
add
sarl
mov
add
add
add
js
sub
jo
dec
das
jmp
daa
out
movsb
jo
adc
xchg
jbe
jae
add
stc
hlt
mov
xchg
sahf
aaa
mov
mov
add
adc
mov
xor
mov
and
add
lea
xlat
mov
dec
add
pop
mov
push
add
rcrb
add
ss
loop
in
or
das
shr
jp
fsts
inc
es
dec
add
dec
add
jmp
stos
jbe
stos
stos
fdivrl
add
adc
inc
adc
mov
pop
or
scas
xchg
gs
add
push
add
lock
lods
push
add
roll
aas
inc
fnstsw
push
add
adc
into
or
or
add
cmp
jo
or
fidivrl
sti
out
std
fwait
mov
nop
loope
add
jb
lret
adc
mov
fbld
pop
std
jbe
mov
pop
add
xchg
pop
jmp
jne
jns
loope
lock
add
and
add
lret
adc
jp
jb
xorl
cmp
pop
out
sbb
fcmovb
rolb
cwtl
sbb
mov
icebp
push
add
mov
fldt
jge
add
movsl
push
add
mov
add
pusha
add
cmpsl
add
mov
ficoml
add
pushf
dec
cmp
jae
xchg
dec
add
pop
add
add
pop
add
in
xlat
in
data16
add
popa
and
inc
sub
sub
ret
inc
or
loopne
cmp
add
add
mov
add
xor
push
add
add
out
stos
add
add
ret
fabs
test
xchg
push
xchg
loopne
add
movsb
and
jmp
data16
int
add
jno
cltd
or
and
sbb
jns
ret
lcall
add
imulb
scas
pushf
lds
mov
add
shr
fldt
add
and
adc
jb
lods
ror
out
add
cmp
xor
add
or
lods
rcrl
add
xor
out
jno
les
add
test
adc
adc
mov
out
fsubs
mov
mov
cwtl
call
scas
inc
add
or
cmp
lahf
les
add
dec
add
cli
pop
add
stos
lahf
popa
sub
sub
cli
adc
xchg
xor
add
jge
les
adc
filds
negb
add
ror
movsl
add
jnp
adc
call
int3
popf
aaa
out
add
jmp
and
inc
add
cmp
xchg
cwtl
test
scas
sbbb
fists
out
pop
mov
daa
jb
rorb
pushf
jb
sbb
out
push
add
popa
mov
add
mov
incl
pop
mov
adc
inc
push
add
int
fcmovne
cld
add
add
and
and
rcr
xor
in
add
and
mov
cmp
add
dec
add
xlat
out
add
dec
add
pop
dec
add
mov
stc
cmp
adc
mov
add
add
add
xchg
in
sbb
add
mov
sbb
popf
or
sub
push
add
or
test
or
popf
mov
pop
icebp
mov
test
add
mov
stc
push
shrl
add
inc
add
add
add
arpl
test
je
xorl
xchg
repnz
jge
cltd
sub
pop
pop
loop
pop
push
add
jle
popf
jg
push
ret
cltd
sbb
insl
xlat
imul
push
push
add
lock
out
add
clc
scas
adc
jb
mov
insb
add
cltd
pusha
add
add
dec
jo
cmpsb
cmc
sbb
das
and
jae
add
ret
pop
pop
sbb
pop
inc
add
add
mov
stc
add
mov
add
pop
xlat
sbb
shll
inc
ret
add
mov
add
add
add
dec
outsl
push
add
add
iret
pop
scas
mov
add
negb
add
mov
movsl
adc
add
add
pop
add
addb
mov
repz
out
cld
or
pop
ja
sbbl
mov
in
or
xor
rcl
jl
xchg
push
add
add
adc
inc
enter
mov
lds
push
add
add
jge
imul
cmp
shlb
add
add
xlat
push
add
add
outsb
add
aas
cltd
jo
mov
into
std
jecxz
pop
add
pop
push
add
stos
test
add
jl
loope
lock
push
lret
mov
cwtl
inc
xor
scas
xchg
cmp
mov
and
xchg
mov
pop
add
add
dec
outsb
add
mov
mov
jae
adc
ja
mov
add
mov
sbb
scas
je
jp
jecxz
out
push
add
add
push
jmp
cmp
sbbl
add
push
add
push
add
xor
jo
add
jge
mov
dec
add
add
jbe
scas
sbb
iret
jecxz
add
adc
dec
add
jbe
pop
fs
add
add
jns
pop
xchg
loop
add
add
fcompl
je
test
add
add
add
aam
popa
mov
add
add
add
add
mov
outsl
daa
push
sub
movsb
aam
add
jmp
fildl
test
scas
lods
fisttpll
mov
add
and
add
call
adc
lret
sarl
cmp
push
mov
add
jg
enter
test
jae
xchg
adc
jno
pop
gs
pusha
add
sbb
or
stos
xor
dec
lock
jmp
call
mov
cmp
jg
or
aaa
stc
stc
out
add
xor
add
sarb
mov
flds
add
push
lea
jmp
add
fdivrs
pushf
sub
jmp
sub
and
mov
jp
cwtl
dec
inc
fdiv
pop
imul
mov
dec
ret
pusha
add
add
add
add
pop
xchg
xor
ja
sub
add
dec
add
add
push
add
add
xchg
lods
stos
push
cmp
daa
jb
sbb
add
shll
cmp
add
movsb
xchg
push
add
add
dec
adc
xchg
xchg
movsb
sbb
sub
push
push
add
add
push
add
xor
add
addr16
add
cwtl
rol
jge
inc
add
add
decb
fmul
pop
mov
cmp
mov
pop
dec
mov
mov
scas
movsl
mov
add
dec
mov
insb
add
mov
inc
add
mov
push
add
mov
xchg
push
add
and
xchg
add
cmp
subl
add
pop
mov
add
das
addl
mov
iret
add
cltd
lods
pop
jge
add
shr
shr
out
test
inc
add
add
jne
add
add
sti
lods
cmpsl
lea
mov
push
add
inc
int3
or
cmp
cmpsb
enter
dec
cltd
inc
or
pop
sub
and
add
scas
push
add
jns
mov
xchg
xchg
cld
inc
add
add
aaa
das
xor
add
add
add
mov
mov
dec
add
movsb
inc
add
add
mov
repz
xchg
mov
scas
pop
add
loopne
leave
mov
das
jbe
or
aad
pop
add
lock
pop
add
repz
inc
mov
add
clc
or
jae
jb
test
nop
enter
pop
in
rdpmc
adc
fcomps
mov
ja
dec
add
jns
and
fsubrs
bound
jne
les
scas
mov
mov
push
add
add
add
add
push
and
jge
add
dec
add
cmp
cmp
inc
bound
call
dec
stos
pop
mov
cmc
inc
add
xor
mov
jae
add
out
loopne
stos
je
jo
cmpsl
rorb
arpl
add
das
ret
cmp
fistl
shlb
mov
popf
imul
push
add
xor
add
jmp
or
int3
scas
sbb
pop
add
or
icebp
popf
int
add
add
lcall
cmc
outsl
cmp
fwait
loope
or
lock
add
jbe
jnp
fwait
sub
adc
cwtl
adc
xchg
scas
mov
cs
in
add
push
int
add
test
push
add
mov
outsl
xor
and
movsl
into
test
xchg
lods
loop
add
cld
ljmp
add
fwait
add
add
ret
xchg
test
testl
add
inc
add
addr16
jle
cmp
mov
pop
add
add
add
add
mov
cld
jb
xor
jecxz
pop
inc
js
lods
aas
cmp
mov
add
mov
in
jae
add
rcrl
add
add
add
ret
sub
inc
add
rclb
cmp
xor
dec
adc
and
pop
add
adc
fistpll
gs
hlt
rcr
scas
das
jns
pusha
add
pushf
sub
aam
add
in
out
aas
jecxz
dec
add
int
add
movsb
mov
fnsave
mov
dec
add
add
add
add
add
pop
insl
mov
pop
add
rcrl
ljmp
jb
jb
xchg
mov
add
stos
rol
mov
pop
mov
dec
add
jecxz
add
add
xor
push
pop
add
sub
mov
add
jbe
sbb
out
mov
arpl
xchg
jbe
popf
js
add
xor
popf
cmp
mov
jg
lock
inc
int3
dec
xchg
pop
sbb
data16
jge
add
jb
mov
stos
pop
add
insl
jge
sbb
and
ret
xor
outsl
pop
inc
add
std
jb
mov
inc
add
test
add
adc
mov
cmp
adc
xchg
mov
sub
lods
add
in
push
xor
std
xor
cmc
fwait
sar
repnz
mov
jnp
pop
mov
les
jae
mov
dec
add
add
push
pushf
aaa
jno
lcall
add
add
test
add
add
push
js
cmc
lock
mov
push
add
pop
add
cmp
add
popa
lds
add
and
cmpsl
sub
ret
add
aaa
aas
ljmp
mov
mov
push
add
mov
add
sbb
cmp
adc
jge
add
add
add
addr16
add
push
add
pushf
inc
add
dec
add
xlat
or
cmp
in
xchg
int
into
lret
cmp
decl
mov
add
xchg
jle
enter
add
out
add
ret
in
aaa
adc
or
and
int3
mov
aam
add
mov
adc
and
add
add
pop
add
lea
nop
mov
repz
add
add
add
jl
sbb
inc
fnsave
jb
pop
add
popa
mov
pop
hlt
inc
int3
xchg
adc
jbe
mov
add
pop
sarl
rolb
dec
shll
fldcw
test
dec
add
or
sbb
mov
adcb
inc
push
add
add
mov
dec
add
jno
insb
add
imul
pop
add
mov
dec
inc
add
fsubl
daa
mov
inc
pop
push
add
add
enter
dec
add
mov
add
gs
jge
or
add
mov
add
sahf
sahf
insl
sub
in
outsb
add
test
push
dec
cmpsb
outsl
jecxz
mov
add
add
inc
stc
ljmp
xor
imul
xlat
inc
add
hlt
pop
dec
add
aam
add
es
xchg
add
add
push
hlt
jb
jecxz
test
and
jmp
inc
add
jg
movsb
out
or
jns
mov
add
jne
stc
sarb
add
add
stos
xchg
loope
cmp
pop
mov
or
fidivrs
cmp
sti
fldenv
cmp
push
push
xchg
mov
gs
popf
and
pop
add
xchg
rcll
push
add
add
cltd
push
cmp
jno
add
ret
add
mov
add
add
sbb
aas
inc
add
int3
out
and
push
push
dec
add
push
add
add
add
add
cmc
iret
mov
add
add
testb
in
add
adc
add
or
call
sub
push
dec
push
clc
lcall
enter
inc
popf
aad
add
add
lods
nop
rorl
add
sahf
mov
jge
add
add
je
cltd
push
aam
mov
ret
repnz
out
push
add
sub
lahf
mov
add
add
jp
mov
jbe
popf
shll
xchg
or
lret
jns
lock
sbbl
add
pop
add
add
repnz
add
lret
add
bound
rorb
fldcw
jns
xor
push
ja
pop
sar
andl
mov
mov
ret
push
add
test
mov
pop
add
add
gs
cwtl
test
loope
pop
add
scas
lcall
add
cld
test
add
add
jne
mov
add
add
out
add
lds
push
add
lods
insb
add
mulb
jl
adc
lds
add
outsb
add
adc
mov
daa
stc
shl
into
push
add
and
cmp
jno
cmp
jmp
mov
adc
push
add
jo
out
add
xor
add
ficoms
insb
add
jnp
sub
xchg
or
add
loopne
add
dec
int
add
stos
xchg
sub
int
inc
adc
add
mov
add
test
add
dec
add
or
hlt
out
mov
cltd
pop
ljmp
data16
test
stos
repz
mov
cmpsb
xchg
xor
add
roll
fisttpll
mov
into
les
icebp
mov
xchg
into
in
fistl
iret
fistpll
shrb
add
pop
pop
testb
pop
hlt
pop
rcrl
popa
arpl
aam
js
mov
cmpsl
sarl
sbb
sub
imul
add
cmp
pop
cmp
je
les
imul
unpcklps
mov
jg
mov
add
and
xchg
add
adc
and
push
xor
int3
pushf
fidivl
jmp
and
cmp
adc
mov
add
out
mov
pop
cmpl
push
mov
lods
stc
ret
shlb
add
fisttpll
lret
jp
mov
add
xchg
cmpsb
jge
jg
add
lahf
sub
jl
ret
cmp
push
add
and
mov
xor
test
push
add
lret
jns
add
add
mov
lods
pop
add
add
mov
add
xor
xor
mov
add
or
mov
mov
add
jmp
add
add
add
add
sbb
and
lods
repnz
icebp
pop
mov
add
jmp
ret
outsl
loop
loop
inc
add
add
adc
add
add
add
outsl
mov
popa
test
cmp
add
fistps
add
ret
adc
push
dec
add
imul
std
push
mov
das
mov
add
pop
push
add
sbb
push
add
xchg
mov
ljmp
add
or
clc
xchg
out
xchg
sub
testb
call
sbb
add
add
jmp
push
punpckldq
xchg
dec
xchg
cmp
js
cmp
or
pop
add
xor
and
movsl
sub
lret
stos
aas
sub
rclb
cli
dec
add
mov
add
push
add
xor
push
add
mov
mov
or
add
add
leave
mov
ja
mov
fisubrs
cmc
movsl
movsbl
add
or
or
cmpsl
cltd
jecxz
scas
xor
sbb
repz
add
mov
jle
movsl
push
add
add
inc
or
add
jl
int
add
inc
add
jecxz
scas
arpl
add
leave
test
add
mov
call
xor
out
fwait
imul
add
repz
aad
add
add
jmp
add
xchg
dec
ljmp
add
jns
shrb
loope
std
mov
push
add
xor
or
flds
mov
jle
jno
gs
add
sbb
hlt
jp
push
add
in
shlb
xor
mov
mov
dec
cli
push
add
out
sbb
popa
dec
filds
cmp
rcl
setae
xchg
cmpsl
in
adc
daa
add
push
add
xor
mov
jns
push
add
aaa
std
dec
sub
add
xor
jle
outsl
cmc
cli
test
sub
xchg
pop
add
aaa
fstps
adc
std
sbb
jge
xor
mul
cli
cld
sti
aam
jae
add
xor
or
inc
add
pop
add
add
shl
fildl
inc
cmp
sub
and
add
je
add
mov
add
repnz
add
or
xor
lret
cmp
sub
sbb
out
aaa
push
jle
sti
fs
push
add
xor
out
mov
inc
add
add
pop
sub
mov
in
mov
add
add
push
add
add
stos
fcmovb
arpl
sub
in
or
sub
xlat
test
adc
sbb
mov
add
push
dec
add
push
inc
add
lahf
enter
clc
rcl
mov
add
cli
dec
popa
lock
cmp
sub
in
push
leave
daa
gs
add
fadds
mov
inc
add
add
dec
and
fsts
add
outsb
add
xchg
mov
mov
inc
mov
jb
subb
add
sub
sahf
add
inc
add
outsl
dec
mov
or
in
add
add
sub
negl
add
jae
adc
mov
incb
push
push
add
adc
inc
mov
push
add
mov
cmp
loop
pop
add
dec
mov
pop
inc
add
dec
add
sahf
je
pop
pop
subl
stos
cmp
insl
dec
add
shrb
dec
and
dec
xchg
repnz
add
loopne
push
imul
and
test
idivb
add
push
add
and
jae
add
bound
or
mov
adc
add
add
pop
test
add
movsb
and
aas
pop
sbb
push
dec
jnp
stc
repz
mov
popf
fwait
ret
sbb
insb
add
add
sbb
in
inc
add
cmc
push
add
ret
add
inc
ret
add
push
add
and
mov
shlb
and
scas
jno
jno
add
movsl
sub
and
add
push
add
jbe
jne
push
add
xchg
aam
sbb
push
add
or
leave
sbb
mov
add
xlat
jnp
push
add
push
inc
add
ljmp
jmp
rorl
cmp
add
fstp
mov
mov
add
inc
add
fdivr
push
xor
mov
pushf
pop
add
add
add
mov
add
sti
xchg
stc
sub
add
out
sbb
mov
add
or
mov
add
xchg
add
jg
dec
stc
or
dec
jns
cltd
aad
js
dec
mov
lahf
dec
add
test
add
xchg
inc
add
add
add
jg
add
or
repz
add
shlb
aad
inc
mov
dec
fistps
stos
cwtl
rol
mov
fldcw
and
pop
gs
aaa
rcll
pushf
test
sbb
add
push
add
add
data16
push
jnp
call
lahf
jg
add
lret
inc
add
inc
add
push
add
add
mov
aas
xor
aas
push
scas
cli
data16
lcall
fistpl
repnz
push
add
or
sbb
sub
add
xchg
lret
add
add
add
jns
add
sbb
lea
add
cmpsb
add
mov
mov
mov
add
add
pop
add
add
mov
add
jbe
sub
mov
add
out
lcall
stos
div
jg
add
sub
add
add
jnp
sub
add
sbb
jmp
push
add
cwtl
and
add
add
movsb
in
xchg
add
mov
add
pusha
add
xchg
xor
add
add
push
add
add
mov
cwtl
jle
int
add
add
test
jle
insb
add
add
ljmp
test
cmpsl
xor
mov
pop
add
inc
dec
add
sbb
in
int3
pop
add
add
mov
inc
add
jl
fidivl
mov
mov
repnz
cld
imull
add
mov
add
xchg
shlb
into
cmp
push
add
ljmp
add
inc
pop
add
sub
fldl
mov
lock
xor
fwait
jo
add
mov
mov
and
xchg
push
add
add
add
nop
nop
fisttpll
test
push
add
lcall
cmpsb
mov
add
pushl
das
sub
mov
add
add
lods
stos
cmc
fisttpll
add
jecxz
and
dec
add
les
and
hlt
jae
out
cltd
xchg
leave
jecxz
les
scas
loope
push
add
mov
add
sbb
inc
add
mov
xor
lret
leave
addb
in
inc
mov
add
xchg
call
add
sub
int3
ljmp
sbb
orb
stos
xchg
mov
out
loop
sar
and
hlt
out
mov
sbb
popa
repnz
add
add
imull
sbb
jnp
mov
adc
aad
inc
call
aas
rcrl
cmp
add
xor
int
add
js
rcr
xor
jg
add
bound
negb
xchg
stc
rcl
imul
add
add
mov
add
add
add
ljmp
xchg
loop
ljmp
add
add
sti
jno
push
add
sbb
pop
add
add
shll
add
cltd
roll
or
in
pop
add
and
or
sub
imul
rcrb
push
add
loopne
add
cmp
movsb
outsb
add
jb
add
add
repz
add
nop
repz
pop
add
or
scas
loopne
test
cmpb
add
shlb
mov
call
inc
push
xor
add
sbbb
sbb
shlb
fdivrp
xchg
add
popf
out
imul
jg
sub
adc
leave
push
and
jle
xlat
mov
add
cmpsl
pop
daa
movsl
iret
mov
add
and
mov
cmp
push
add
scas
jb
sahf
lods
ret
mov
add
cmp
in
add
int
add
lods
adc
adc
sub
xchg
or
scas
sub
mov
mov
push
xor
dec
test
mov
adc
jmp
add
movsl
je
mov
pop
add
pop
add
add
add
imul
popf
jb
je
push
adc
iret
sti
lahf
mov
mov
inc
or
jns
mov
xchg
test
add
add
add
jb
pusha
add
sub
inc
push
adc
mov
jle
imul
cmp
lea
outsb
add
xor
test
test
addb
add
add
fnstcw
aas
outsl
jle
popl
add
adc
mov
push
mov
cmp
cmp
xor
add
ja
add
mov
mov
add
and
add
xor
movb
loope
mov
add
adc
loopne
and
push
jno
add
out
loop
pop
xchg
daa
xchg
xchg
add
add
sbbb
mov
inc
add
add
test
cmpsb
data16
lret
lret
inc
stos
shrl
or
les
in
adc
arpl
lcall
mulb
or
imul
imul
add
jmp
mov
in
xor
lods
xor
lods
inc
je
sub
aas
push
add
mov
pop
xor
add
sbb
repz
mov
xlat
xor
daa
sbb
add
jmp
rcr
push
add
adc
push
add
gs
xchg
mov
sbb
popa
cmpsl
sbb
jo
sbb
scas
jp
and
jecxz
add
add
add
adc
shrl
or
ficoms
adc
out
mov
jae
add
mov
data16
idivl
jnp
add
add
adc
mov
lret
stc
int
add
jl
adc
clc
lahf
hlt
and
add
xchg
daa
fcmovbe
sub
jmp
add
cmp
mov
add
das
add
inc
jno
add
sub
mov
add
add
mov
shlb
push
mov
sbb
xor
test
add
add
sub
inc
dec
add
jp
and
jno
add
add
add
add
add
add
jb
bound
pop
pop
test
xchg
jnp
enter
add
pushf
mov
add
sbb
es
and
mov
cmp
and
lock
lds
xorb
icebp
aaa
xchg
push
add
xchg
fsubr
jmp
iret
mov
mov
push
add
shll
insb
add
add
aas
dec
fistps
add
in
add
icebp
int
cwtl
outsl
fwait
sti
dec
add
cwtl
outsb
add
add
add
out
lret
lds
fisttpl
add
das
add
pop
add
add
js
sub
push
add
movlps
je
incl
stos
xor
xor
add
testb
fbstp
or
xchg
sbb
inc
add
add
mov
cld
inc
shlb
push
add
add
push
add
push
add
mov
enter
xor
xchg
dec
mov
pop
sub
jl
repnz
shll
ljmp
add
std
iret
jge
add
add
pop
add
mov
add
xchg
jbe
cmp
add
add
das
out
rcll
repz
push
add
add
int
add
jno
add
xor
xchg
cwtl
ljmp
add
add
int3
add
mov
fistps
std
sub
or
inc
add
add
add
adc
dec
cmp
pop
add
xchg
imull
push
outsl
out
xor
jp
sub
cmp
mov
out
loop
lcall
pusha
add
add
inc
sub
mov
pop
add
add
inc
add
dec
add
jb
xchg
jae
xor
cmp
add
and
shrl
xor
add
jo
mov
mov
jl
jg
add
shr
inc
adc
xchg
lea
add
repz
add
or
and
push
add
in
add
in
add
or
stos
jl
arpl
adc
add
out
inc
add
rcll
gs
lcall
popf
add
ljmp
adcl
push
subb
lret
inc
add
cmp
add
dec
add
add
clc
repnz
xchg
pop
add
inc
inc
add
add
add
or
lret
pop
cmp
ret
or
adc
mov
test
leave
jmp
add
inc
inc
add
add
lea
pop
das
pop
out
mov
mov
jnp
dec
ret
sbb
push
sbb
pop
in
fwait
mov
add
aaa
add
lret
sbb
inc
add
push
leave
pop
mov
add
cmp
adc
jae
add
add
cmpsl
add
mov
mov
or
mov
cmp
inc
xchg
lock
add
leave
and
add
jle
or
repnz
out
test
add
add
sub
mov
sbb
data16
add
pop
mov
arpl
push
add
cmc
jl
or
in
jnp
add
jecxz
rclb
ljmp
js
lret
adc
add
addr16
or
adc
add
sbb
jle
lret
xchg
add
xor
shll
add
add
rolb
mov
into
jae
js
andl
inc
fldenv
add
cmpsl
adc
mov
add
pusha
add
add
add
cmp
adc
pavgb
and
movsb
pushf
sub
pop
add
cmp
and
aas
stc
adc
xchg
sub
dec
mov
add
lahf
test
adc
lcall
fcomp
stos
pop
add
fisttpll
movsb
pop
add
pop
data16
gs
add
cmp
xor
xchg
push
cmp
and
imul
add
add
adc
cld
mov
xchg
outsb
add
jbe
add
stc
xchg
cltd
adc
add
std
sar
adc
push
add
jno
pusha
add
out
add
add
lds
test
push
push
add
out
dec
add
pusha
add
fcompl
sbb
out
inc
add
dec
pop
icebp
leave
xlat
out
mov
aas
test
pop
fstpt
pop
add
xchg
cmp
xor
out
stos
mov
enter
xchg
shll
add
push
add
nop
les
push
add
fwait
xchg
push
add
add
out
popf
scas
cmp
lret
pushf
xor
add
add
mov
ret
add
dec
add
sub
stc
jb
leave
mov
add
jmp
dec
repnz
add
inc
add
add
mov
pusha
add
add
fwait
or
ljmp
loope
jg
add
mov
cmpsl
mov
in
mov
add
add
cmpsb
lods
outsb
add
data16
add
sbb
bound
repnz
cmc
adc
cld
inc
data16
cmpb
in
lea
jg
fdivl
int3
ret
mov
add
int
add
mov
mov
outsb
add
mov
dec
add
add
jmp
inc
in
lods
repnz
add
add
cmp
mov
add
xchg
lock
int3
pusha
add
and
mov
add
loopne
add
in
data16
add
add
xor
cltd
pcmpeqb
push
out
sbb
add
add
leave
cld
cmp
xchg
push
add
jb
jge
repz
mov
popa
ja
cmp
add
push
add
add
xchg
mov
add
iret
stos
jae
push
add
add
sub
outsb
add
out
add
mov
addl
leave
outsb
add
icebp
jecxz
jns
and
adc
sbbb
adc
iret
pop
or
add
mov
sbb
add
add
adc
shr
add
packssdw
add
mov
iret
mov
jge
bound
dec
add
cmpsl
push
push
add
sub
push
add
add
sub
les
imul
add
add
sbb
xchg
mov
add
lcall
add
add
and
jge
add
lret
xor
mov
mov
or
pop
add
add
daa
stos
fsts
xchg
neg
cmp
mov
test
pop
sub
outsb
add
xchg
psubq
inc
add
add
pop
add
push
popa
xchg
out
push
add
add
jg
add
enter
push
add
add
and
jns
mov
stos
add
add
add
add
data16
addr16
insb
add
inc
add
out
mov
xor
jo
fildl
push
insb
add
xchg
pusha
add
ljmp
lock
movsl
lret
xlat
sti
imul
add
loope
add
popa
jmp
hlt
movsl
shll
cmpl
xor
xchg
jl
loop
lods
pop
pushf
jb
push
xchg
cmpl
lcall
sub
push
add
add
cmp
ret
lcall
mov
dec
add
data16
shrl
and
les
add
add
mov
inc
add
cmp
mov
ljmp
inc
add
and
cmp
int
add
out
popf
jmp
imul
add
or
mov
push
add
add
add
cmp
mov
add
outsl
mov
dec
mov
int
add
inc
add
sbb
inc
add
fsubl
add
add
jecxz
xor
pop
mov
pop
jmp
pusha
add
pushf
stos
fbstp
inc
mulb
cli
loop
imul
movb
jo
pop
add
inc
cmpsl
and
mov
cmpb
jns
sub
insl
add
fiaddl
and
repz
add
mov
xchg
pop
int3
xor
sbb
pop
add
inc
mov
add
add
std
push
add
subb
scas
push
add
pop
add
pop
add
insb
add
mov
nop
and
sti
cli
add
popa
cltd
lret
dec
add
rcrl
lods
lahf
mov
xchg
pop
add
aaa
enter
jbe
cmp
add
add
loope
add
pop
aaa
and
and
dec
add
add
add
xchg
xor
sbb
test
aam
mov
jmp
adc
push
add
mov
jle
fcoml
add
dec
add
xchg
mov
add
add
in
in
icebp
mov
mov
out
out
fcomp
fdivrs
and
pop
or
xchg
xchg
add
mov
in
add
adc
inc
push
push
mov
push
add
inc
mov
loopne
mov
sub
mov
fbld
add
or
mov
shlb
psadbw
add
add
scas
test
mov
clc
push
clc
add
jmp
inc
add
and
es
xor
scas
jg
add
cmpsl
jno
jno
add
mov
mov
orl
add
xchg
push
icebp
adc
unpcklps
in
stos
pop
add
add
add
mov
add
movb
pop
add
aad
inc
cmp
mov
add
add
data16
mov
add
push
add
add
mov
aam
loope
cmp
pop
outsl
daa
jmp
rcrl
in
divb
add
cld
xchg
pop
add
das
pop
add
add
adc
mov
add
mov
fldenv
imul
mov
add
add
pop
movsb
leave
or
jmp
or
xor
push
sub
out
jo
inc
push
frstor
fldenv
out
lret
lock
jle
mov
add
add
add
fwait
push
pop
add
add
push
cmp
add
xchg
cmovb
adc
decb
sbb
xorl
or
mov
into
shrl
mov
ret
sub
call
add
mov
and
mov
mov
xchg
add
loop
mov
add
pop
add
mov
enter
aam
pushf
test
mov
xchg
ret
mov
push
add
add
push
add
or
stos
adc
bound
and
lahf
lret
push
jb
shlb
mov
add
in
add
lret
pop
clc
arpl
add
push
add
cmpsb
mov
inc
add
add
add
push
fldenv
call
lds
loop
clc
sub
sti
mov
insb
add
in
jg
in
aad
add
pushf
jmp
dec
sub
add
gs
rclb
mov
in
mov
cld
xor
xor
outsl
dec
add
in
mov
idiv
mov
pusha
add
xchg
mov
add
push
add
daa
or
jge
add
push
addb
ret
mov
push
xlat
scas
pop
iret
mov
adc
add
add
lss
inc
add
shrl
fcmove
or
in
aas
dec
add
shlb
xchg
negb
dec
add
add
rcll
repz
add
test
cmp
add
pop
loop
xchg
andb
cmpb
sub
add
add
xchg
jp
add
stos
xchg
push
or
xor
adc
sbb
test
add
add
dec
add
repnz
movsb
fwait
adc
mov
lcall
jl
or
add
inc
adc
sbb
xchg
jbe
hlt
or
rcrl
add
mov
add
or
cmpsl
mov
add
nop
leave
cld
mov
insb
add
jno
add
add
jmp
mov
out
add
add
mov
js
jbe
mov
lahf
pop
push
add
add
popa
in
adc
add
xor
aam
add
js
pop
dec
add
mov
add
add
xchg
in
fwait
rcrl
mov
inc
adc
mov
add
add
ja
pop
add
mov
inc
addr16
sub
lods
add
mov
fwait
ljmp
add
fbld
push
add
repnz
add
cmpsl
fidivl
mov
push
testb
movsl
cmp
in
subl
cld
add
adc
jnp
int3
fdivrs
add
add
in
inc
cmp
add
add
xchg
fisubs
add
sbb
mov
add
add
popf
xor
mov
cmc
add
sub
loopne
movsb
push
loop
xchg
and
cs
jle
mov
add
sbb
and
inc
add
jecxz
js
lcall
jo
mov
add
mov
pop
cld
jg
sbb
xor
cmp
nop
data16
rcll
xchg
add
add
inc
add
daa
lds
add
add
add
mov
add
jp
fdivrl
sub
stc
mov
enter
jb
mov
jo
mov
data16
pop
ret
xor
push
add
frstor
loopne
fists
mov
fwait
punpckhwd
mov
add
push
mov
clc
das
cmpsl
cwtl
pop
add
cwtl
data16
out
cmpsb
inc
add
lret
or
jp
cwtl
jge
fdivrl
push
add
add
imul
add
sbb
std
mov
outsb
add
loop
dec
add
push
add
mov
add
jl
mov
sbb
inc
add
int3
lock
add
adc
mov
fnstcw
add
ljmp
add
push
add
popa
pop
sub
sbb
push
add
add
inc
add
outsb
add
mov
add
ficoml
add
cltd
sbb
mov
xor
lcall
js
mov
push
add
add
out
sub
lahf
pop
enter
xor
outsb
add
jb
mov
jo
aam
pop
add
pop
maxps
add
popf
pop
add
add
push
add
add
enter
je
add
add
add
das
jge
in
out
jl
rolb
cmovle
in
in
add
sarb
in
push
add
sbb
push
add
add
add
pop
add
sti
adc
push
add
scas
enter
mov
cli
xor
add
repz
sbb
pusha
add
data16
icebp
je
jo
into
int
dec
add
in
xor
jno
std
data16
add
add
xchg
add
add
inc
add
arpl
mov
add
aad
push
outsl
jne
add
push
add
push
add
cmp
mov
add
xor
inc
add
cmp
data16
jmp
add
push
push
add
out
add
mov
je
add
or
sbb
fisubrl
dec
mov
cmp
push
add
adc
adc
fnstsw
incl
adc
in
testb
add
ret
jle
jg
pop
jg
and
mov
add
mov
mov
add
xor
jb
mov
dec
add
sbb
mov
mov
lret
jge
pop
add
inc
cli
aaa
inc
lods
je
xor
adc
cmp
mov
add
out
mov
xchg
cmp
add
push
add
popa
sub
arpl
dec
add
pop
bswap
dec
add
inc
add
add
add
je
mov
adc
test
add
add
imul
rcrb
sub
mov
add
inc
add
pop
jmp
sub
sbb
push
add
stc
mov
mov
or
clc
das
cmp
jns
xor
dec
add
mov
xor
jecxz
jbe
mov
sub
insb
add
ret
pop
lds
out
mov
add
add
jge
jp
push
add
sub
push
xchg
fs
sbb
xchg
and
jg
repnz
cmc
jmp
rcrl
pop
push
add
add
cld
clc
test
jmp
add
add
jl
xchg
stos
add
add
mov
push
shll
xchg
cmpb
movsl
mov
xor
add
xchg
rorb
mov
sbb
and
add
repz
subb
or
mov
or
xchg
lcall
dec
add
add
inc
add
add
inc
loopne
or
mov
cmpsb
dec
add
add
lret
test
nop
add
dec
mov
and
mov
enter
pop
lea
push
add
cld
sbb
lods
mov
and
or
xor
rcrb
femms
add
xor
fisttps
pop
aas
jae
push
add
cltd
sub
sub
popa
dec
cmpsb
pop
add
cli
pop
gs
lret
add
add
dec
mov
sub
sub
jle
jb
xchg
add
mov
and
addb
xor
add
stos
mov
add
jbe
mov
mov
add
inc
add
add
in
mov
pop
add
jp
bound
sti
in
rcl
mov
out
add
scas
daa
push
stos
dec
add
pop
mov
sub
ja
mov
add
dec
xchg
scas
loope
add
add
inc
add
add
cli
daa
pop
add
add
add
add
jno
pop
jno
add
sahf
shll
in
lcall
xchg
mov
add
mov
into
aam
sub
push
add
mov
add
sub
mov
add
mov
mulb
xor
dec
xor
add
popf
dec
mov
add
jbe
in
in
aas
leave
stc
test
pop
leave
adc
in
test
mov
roll
add
mov
jge
push
or
imul
cmc
call
add
out
fists
aas
and
xorl
mov
fwait
jmp
nop
bound
mov
xchg
mov
pop
scas
dec
inc
add
test
bnd
std
xor
or
pop
jb
hlt
jnp
add
add
add
add
cmpsb
int3
and
add
mov
add
add
sbb
inc
add
pusha
add
add
int3
divb
arpl
out
jns
add
inc
pop
outsb
add
sbb
add
out
sub
mov
add
sarl
add
mov
ret
and
xchg
push
mov
inc
add
rorl
js
lods
bound
mov
iret
xchg
push
add
xor
test
call
lahf
adc
mov
pop
mulb
add
cmc
das
cmp
or
pop
sbb
jne
add
pop
add
push
add
add
add
mov
add
xor
std
xor
repnz
add
or
mulb
inc
addb
xchg
add
hlt
insl
lock
add
and
xor
jae
fisubrl
xor
sub
imul
cmc
dec
shlb
sbb
add
add
push
add
lea
insl
sub
mov
add
lods
int
add
or
push
ljmp
add
lods
add
pop
add
add
cs
loop
mov
adc
push
add
add
rcrl
pop
fwait
mov
and
fisubrl
add
push
add
in
push
add
xchg
xchg
add
mov
jmp
leave
sarl
imulb
adc
add
test
add
add
fistpll
sbb
loop
jge
inc
add
adc
test
add
fstpl
jo
movsb
ficoml
or
add
jge
add
iret
add
fwait
sub
xor
mov
divb
push
add
add
add
add
mov
add
add
ds
pushf
cmpl
stos
mov
add
adc
loope
add
out
xlat
in
mov
mov
push
adc
into
js
adc
xor
cld
mov
testl
or
jbe
mov
je
call
icebp
rolb
add
xor
or
pop
inc
add
add
gs
add
pop
das
add
push
add
add
xchg
add
in
add
add
add
add
dec
add
fisubl
insl
xchg
jne
adc
call
add
add
jne
add
outsl
mov
sub
push
sub
sti
or
in
xchg
stos
sahf
int
inc
add
push
cwtl
sysret
inc
xor
mov
adc
lock
mov
jns
pop
push
add
lods
or
pushf
or
shrl
jb
cmp
xor
adc
popf
sahf
ficoms
mov
rcrl
push
add
aas
cmpsl
arpl
jge
notl
sbb
sbb
out
test
mov
xor
lcall
fmull
insb
add
add
div
jb
cmp
fmuls
mov
add
fwait
out
mov
ror
push
jns
add
in
repz
sbb
or
ret
push
decb
or
jg
push
jno
add
inc
cmp
sbb
test
add
push
add
add
or
pop
jl
sahf
test
out
cli
mov
add
pushf
aam
leave
xor
add
cld
mov
cmp
fidivs
add
ljmp
push
test
insl
xor
bound
mov
sbb
add
xchg
jecxz
mov
lcall
add
cmc
xor
lahf
xlat
call
jmp
sbb
sti
icebp
in
adc
sbb
mov
inc
sti
fadds
xchg
add
add
add
push
add
adc
cld
test
pop
pop
add
xchg
and
sbb
add
pop
test
sub
lea
fdiv
flds
add
add
stos
jb
outsb
add
rorb
ret
rcl
sbb
cmp
sahf
mov
and
add
mov
mov
add
add
fldl
cmp
mov
movaps
add
xor
pop
add
shrb
xchg
pushf
cmpordps
xchg
adc
jge
clc
mov
dec
dec
jb
jmp
loopne
add
movsl
fwait
aam
sub
and
inc
cli
mov
mov
mov
popf
outsb
add
add
jo
aas
cmp
les
and
lret
dec
jnp
icebp
xor
mov
add
lret
add
pop
jg
movsb
or
testl
add
sbb
add
cmc
mov
test
imul
add
push
add
scas
xor
add
cmp
add
cmp
push
xor
loopne
cli
int3
or
add
add
in
dec
add
adc
fwait
lock
add
add
daa
adc
sbb
mov
jl
test
jne
push
add
cmpsl
fisttpl
mov
adc
push
add
sub
fisttpl
not
xchg
fstpt
mov
and
lret
mov
add
and
inc
add
enter
bound
test
out
mov
add
test
sbb
jle
stc
or
mov
daa
sbb
and
call
add
out
add
sbb
clc
out
add
add
lret
add
xor
lret
addl
das
mov
ja
int
testb
lahf
es
adc
cmp
int
add
add
add
add
cmp
add
arpl
iret
add
dec
mov
adc
push
add
hlt
jle
xchg
add
hlt
jecxz
clc
call
adc
add
and
loope
add
add
jecxz
mov
add
add
cmp
bound
jl
pop
insl
add
lcall
add
insl
divb
lret
int
add
shll
jbe
aas
inc
cmp
add
movsb
cltd
jo
push
dec
mov
mov
add
fdivl
pop
add
add
in
out
je
cmpsb
fisubrl
add
add
cli
imul
push
add
cmc
js
je
jns
add
add
leave
cmp
aam
std
dec
add
adc
dec
add
or
ficoms
mov
and
aad
les
add
add
call
add
add
jmp
fwait
hlt
ljmp
out
mov
in
mov
sbb
addb
int3
inc
add
add
pop
int3
inc
movsl
push
add
f2xm1
inc
add
add
sbb
push
dec
mov
cmpl
add
dec
add
xchg
movsb
test
pop
sbb
divl
add
xchg
add
add
cwtl
mov
xor
add
and
pop
add
add
in
cmp
xor
movsl
sarb
add
sub
add
xor
add
jp
jo
lea
lahf
fimull
fwait
enter
mulb
and
sbbb
fucomi
jmp
jno
add
jbe
das
fcoml
add
outsl
sub
add
aad
mov
add
add
add
xor
and
out
aas
fwait
lea
lret
adc
ljmp
dec
add
pop
add
test
sbb
loopne
loop
popa
test
add
pushf
sub
sub
mov
adc
xchg
jo
loope
dec
add
mov
and
outsb
add
stc
cmp
loope
das
mov
leave
lcall
jbe
inc
add
dec
out
mov
xchg
xor
movsl
and
push
add
pop
add
push
add
add
sub
add
btr
pop
add
cltd
int3
xchg
pop
daa
xor
loopne
add
cmc
lock
rcrb
dec
add
push
add
mov
inc
add
cmpb
or
shll
xchg
inc
add
inc
scas
mov
or
add
jmp
lahf
ret
push
sarl
sbb
jns
add
insb
add
js
mov
add
subb
jg
les
push
add
enter
pop
add
shl
jmp
dec
add
jno
jecxz
repz
add
or
inc
inc
xchg
addr16
pop
out
aaa
leave
aas
es
mov
jnp
aam
aaa
arpl
xchg
or
inc
add
sarb
xchg
outsb
add
or
daa
push
add
jae
add
cmp
je
xor
inc
add
add
add
pop
pop
ja
add
add
into
lcall
adc
push
add
add
add
cmp
shl
pop
iret
jecxz
mov
fsub
pop
lea
add
cld
pop
or
lods
hlt
mov
cltd
aas
mov
out
xlat
jmp
cmc
adc
sti
xchg
lea
xlat
adc
rcll
sub
sub
and
jb
xchg
sub
iret
mov
sub
add
inc
add
mov
add
push
add
sbb
cmp
mov
add
lea
outsb
add
inc
dec
add
push
add
push
add
sbb
xor
xor
inc
add
add
cmp
mov
in
xchg
dec
out
movsl
insb
add
iret
dec
add
test
add
loop
insl
scas
cmpsl
pushf
das
cmp
out
outsl
mov
repz
pop
aaa
sbb
push
add
arpl
ret
mov
data16
aam
add
push
loope
addr16
shrb
push
movsb
add
add
add
adc
popa
loope
mov
push
test
dec
add
jl
add
add
push
add
inc
add
add
add
hlt
jno
sti
ret
mov
add
divb
in
add
sub
add
lods
pop
mov
mov
add
std
enter
add
add
movsl
push
je
lea
add
and
mov
nop
cwtl
jecxz
std
xchg
adc
pop
mov
add
or
add
and
bound
sub
dec
push
add
add
push
add
add
add
add
in
js
lds
repz
add
sbb
push
imul
cmpsl
ja
add
add
add
add
jmp
cltd
ret
pop
add
sahf
insl
inc
add
enter
cmp
push
add
add
sub
das
jns
imul
cmpsl
bound
mov
and
push
scas
in
sub
fisubs
icebp
mulb
rcll
add
xor
fisubrl
iret
lcall
lret
dec
and
stos
out
xchg
sbb
add
imul
and
fmul
pusha
add
rolb
hlt
lea
push
pop
cltd
sub
mov
push
add
add
mov
add
jle
xor
sbb
jg
push
stos
dec
add
add
negb
jo
jecxz
stos
jp
jo
mov
add
push
rorl
or
add
dec
add
or
sub
rol
add
jg
pop
jo
jmp
add
xor
pop
adc
add
add
jne
jge
add
sahf
add
enter
add
js
ljmp
add
and
pop
add
and
shlb
sbb
sbbl
jl
sti
stos
pop
add
mov
add
lds
xor
rorl
das
out
add
and
in
sbb
stos
push
insb
add
pop
adc
ss
xchg
sbb
pop
add
jbe
inc
add
imul
add
add
dec
add
clc
jl
nop
jge
add
rcll
push
add
fldenv
add
jb
push
add
out
sbb
mov
adc
adc
pop
pop
cwtl
pop
mov
add
sub
int
pop
mov
push
cli
jecxz
cli
mov
add
xchg
cwtl
lea
add
xchg
add
xchg
sarb
dec
jnp
add
pop
add
ljmp
fnstenv
or
adc
add
add
ja
add
stos
imul
testb
push
mov
out
mov
inc
sahf
aad
pop
dec
add
enter
add
add
sti
or
mov
push
add
decl
int
out
mov
daa
lock
xor
and
jns
add
dec
test
pop
jnp
jle
test
jl
lods
adc
pop
stc
mov
pop
add
lods
sbb
pop
pop
add
mov
add
jbe
fstpt
pop
fidivl
lock
pop
xor
inc
mov
inc
push
cmp
add
add
add
and
sahf
lds
les
mov
pusha
add
add
jecxz
sub
inc
add
add
jbe
imul
into
sub
gs
pop
push
inc
add
pop
add
and
mov
inc
pop
add
sub
mov
pop
dec
cmp
xchg
sbb
jb
adc
jae
mov
stos
sub
and
sub
or
jl
push
add
sub
mov
cmp
mov
mov
add
cmp
subb
add
fdivl
jp
gs
mov
mov
jnp
add
cmp
dec
add
push
leave
xor
add
add
add
adc
gs
add
inc
popa
add
cmp
sub
add
stc
lahf
movsl
das
push
fsub
push
inc
inc
add
sti
add
lcall
xor
jne
cmp
nop
xchg
dec
ds
jge
add
lret
sbb
insl
mov
sub
push
into
push
inc
shll
mov
add
arpl
add
inc
ret
and
arpl
inc
inc
add
sub
mov
mov
pop
add
jbe
aas
xor
mov
adc
dec
fcomip
pusha
add
push
mov
mov
dec
add
add
loop
add
and
xchg
test
add
xchg
lds
jmp
cmpsb
cmc
outsl
in
sub
arpl
dec
push
jo
push
add
add
add
out
mov
mov
mov
into
test
inc
rcll
push
add
or
lret
push
add
mov
push
add
outsl
aam
aaa
imulb
adc
rcll
mov
add
pushf
cltd
sub
cli
aas
jg
add
add
addb
add
add
push
add
add
dec
add
and
rclb
les
lea
push
pop
mov
sbb
incl
out
jg
lods
sbb
mov
mov
iret
fs
jmp
add
add
mov
cmp
add
mov
cmpsl
insb
add
pop
xor
je
insl
popa
xchg
data16
rcrl
add
shrb
xor
jmp
rcrl
nop
pop
add
imul
mov
test
nop
xor
push
add
fdivs
or
sub
mov
mov
mov
xchg
sub
int3
negb
and
dec
mov
and
imul
mov
mov
lea
repz
enter
sbb
enter
adc
sub
leave
pop
add
or
xchg
jecxz
add
mov
lret
arpl
add
add
aad
popa
arpl
mov
adc
inc
mov
push
mov
aad
outsb
add
inc
add
mov
sub
add
add
aas
aas
fidivl
sbb
jns
enter
jb
sub
jmp
lea
pop
imul
jbe
xor
add
add
stos
xlat
or
jecxz
add
add
add
ljmp
xor
outsl
scas
scas
std
add
push
add
add
pusha
add
lods
xchg
movzbl
mov
add
add
out
xor
add
lods
xchg
int3
push
add
add
add
je
mov
scas
and
add
clc
sbb
add
cli
xchg
xor
inc
xor
mov
add
fildll
add
add
iret
jno
add
pop
add
add
mov
push
mov
mov
cmp
pop
mov
push
adc
inc
add
adc
cmp
test
sarb
xor
ss
inc
add
ljmp
adc
push
pop
add
mov
scas
fdivrs
pop
push
lock
xor
adc
fsubl
add
data16
mov
add
aas
jecxz
rcr
and
add
scas
pop
add
or
aad
add
fldt
add
adc
add
add
xchg
push
jmp
jle
xlat
out
std
stc
mov
add
add
and
test
popf
push
or
dec
add
loope
xor
add
lock
lret
xchg
add
adc
push
add
xor
and
xchg
andl
add
and
mov
adcb
add
lcall
pop
mov
inc
add
add
add
add
jo
sti
mov
daa
or
pushf
inc
add
lds
jo
push
jo
xchg
push
adc
fimull
mov
cmp
xchg
fwait
and
push
cmp
lret
mov
or
add
add
in
out
sahf
jmp
data16
sahf
imul
add
add
andl
add
and
cmc
enter
add
lods
cmc
push
add
inc
or
add
add
mov
ljmp
mov
call
sub
orb
out
into
push
mov
sub
pop
adc
add
cmp
sahf
jp
mov
add
push
test
repz
ss
cltd
push
je
and
popa
or
inc
mov
ret
movsl
sub
push
add
aas
arpl
shlb
mov
les
adc
and
xlat
call
je
daa
xchg
inc
add
and
cmc
xchg
jb
mov
popf
nop
iret
or
in
inc
add
test
cmp
pop
add
push
add
add
cmp
mov
std
cmp
mov
sar
push
add
lcall
outsb
add
xlat
mov
mov
cmpsl
loope
add
arpl
jp
sub
push
cltd
mov
add
mov
add
add
add
jo
aaa
inc
add
add
cmp
add
mov
mov
mov
jle
aaa
mov
test
add
mov
mov
xor
add
xchg
or
pop
add
out
dec
dec
mov
xchg
lcall
add
shll
in
push
add
add
mov
divl
add
loope
scas
outsl
pop
add
mov
or
movsl
je
movsl
add
movsb
add
gs
add
rcpps
bound
add
fmull
sub
sbb
cmp
inc
movsl
or
add
cmp
cmp
cmp
pop
sahf
sub
pop
out
jle
pop
add
add
dec
adc
mov
add
mov
add
push
add
fstps
push
add
decb
pop
mov
add
cwtl
sub
fcmovne
push
sub
rolb
inc
xor
xchg
adc
sbb
mov
inc
add
cli
or
roll
dec
dec
dec
sahf
dec
add
or
cwtl
xchg
cmovne
or
push
add
pushf
pop
add
sub
add
test
ret
fwait
mov
add
push
add
loope
data16
js
js
scas
bound
sbb
in
dec
jmp
add
insb
add
add
add
gs
rep
add
xchg
add
ljmp
loope
add
shrb
dec
add
cmp
ljmp
test
add
add
imul
add
stos
push
add
and
outsb
add
addr16
mov
add
add
cmp
add
add
xor
xor
ficompl
add
fisttps
xchg
lods
pop
add
aam
add
in
xchg
or
push
mov
adc
mov
push
mov
cmp
cmp
jbe
shrl
add
setns
dec
add
addr16
add
add
xchg
add
insb
add
add
add
xchg
das
lret
or
pop
cmp
sbb
xor
or
mov
idivb
dec
sbb
mov
lds
loop
mov
dec
add
xchg
out
aad
jmp
divb
inc
or
cmpsl
xor
cmpsl
dec
add
movsb
ret
sub
mov
adc
add
pusha
add
add
sbb
xchg
cmp
cld
insb
add
loopne
mov
add
push
add
gs
lods
les
mov
adc
add
sti
cmp
ja
adc
cmp
int
jns
pushf
pop
jle
xchg
mov
sbb
sti
imul
sbb
pop
add
test
shll
inc
aas
xchg
jg
xor
pop
mov
lods
jb
cli
jnp
aaa
dec
add
cmp
lahf
add
cld
push
add
xchg
mov
dec
mov
add
and
lods
into
stc
mov
xchg
or
or
jno
mov
adcb
push
add
lahf
fcomip
mov
divl
out
add
je
xor
mov
add
jns
inc
lcall
add
add
add
and
aaa
push
add
fisubs
mov
pop
gs
add
loop
orb
in
call
cmp
mov
cltd
sahf
inc
mov
dec
xchg
sahf
xor
and
cmp
shll
add
add
add
sub
outsb
add
and
and
add
outsb
add
shrl
and
jecxz
add
add
dec
add
hlt
jne
add
cmp
add
add
add
add
add
push
lahf
mov
sarb
add
addr16
fiaddl
add
add
int3
mov
sar
imul
push
add
mov
mov
pop
add
daa
bound
lret
dec
insb
add
cmp
pop
add
ret
notl
add
add
mov
nop
cmpsb
inc
add
add
dec
mov
add
movsl
stos
inc
add
xor
lods
adc
addr16
pop
adc
lods
add
or
add
mov
push
jecxz
add
daa
loopne
xlat
aas
jno
stos
adc
out
ljmp
setge
daa
mov
push
add
inc
add
add
cmp
xchg
push
push
js
or
xchg
lcall
js
sti
ss
mov
add
jp
jnp
lods
lea
sahf
or
xchg
cli
sub
adc
adc
cmp
mov
or
fisubs
add
imul
cmp
and
sbb
mov
add
int3
push
add
cmp
jno
pop
or
in
add
add
pop
cwtl
jae
mov
repnz
adc
cmp
adc
sub
scas
mov
and
adc
add
adcb
push
add
add
add
pop
add
sub
adc
shl
mov
clc
rclb
test
sub
jbe
nop
out
cmp
test
testb
cmp
fxch
scas
test
add
out
add
push
add
clc
inc
adc
into
push
add
dec
add
add
add
outsl
dec
add
add
add
push
repz
add
lods
aam
pusha
add
imul
add
aad
mov
add
inc
add
pop
cltd
cmp
mov
dec
add
lret
enter
mov
add
je
xchg
sub
push
add
cmc
push
add
out
data16
adc
mov
add
clc
leave
mov
pop
mov
xchg
add
jno
add
add
enter
add
sahf
arpl
arpl
roll
and
pop
in
add
push
add
jmp
movsb
inc
add
imul
add
add
and
jnp
test
add
or
popf
xchg
popa
dec
add
ljmp
push
add
sub
int3
add
xchg
add
fmuls
data16
jo
jnp
mov
mov
test
jle
adc
add
add
popf
cmpsb
or
jns
add
add
xchg
bound
and
mull
sub
mov
daa
jb
dec
add
aas
add
loop
rolb
call
gs
aaa
scas
in
pop
filds
pop
int3
out
fsubrl
enter
adc
int3
rorb
leave
add
inc
lret
pop
add
sbb
cwtl
jl
xchg
add
adc
xchg
incb
and
lds
mov
inc
add
fcmovb
adc
mov
pop
fwait
pop
daa
in
add
lock
test
inc
add
arpl
sub
add
or
inc
cmp
push
add
add
add
imul
das
pop
add
sub
subb
pop
add
clc
jmp
out
jmp
mov
add
lds
aas
leave
jmp
cli
adc
add
ret
sbb
js
mov
add
jle
shrl
lods
sub
xorb
ret
pop
daa
lds
add
mov
iret
and
jmp
add
push
adc
outsb
add
add
testl
pop
add
inc
add
cmp
add
add
add
imul
xor
addr16
push
xor
fisubl
mov
dec
dec
add
pop
mov
push
add
and
add
std
add
add
push
jg
jne
add
fdivrs
add
test
data16
add
inc
stc
lret
add
int3
cli
scas
adc
mov
pop
add
add
push
mov
jl
imul
loope
ja
jns
add
add
mov
ljmp
sbb
add
aad
add
xchg
add
lcall
rol
out
mov
add
inc
add
jo
mov
stos
popf
aad
add
mov
xchg
cwtl
adc
ljmp
add
xorl
add
jg
inc
std
mov
push
add
pusha
add
daa
std
inc
aas
inc
add
cli
push
add
dec
aam
sbb
jg
xor
rorb
xchg
jge
jnp
shll
dec
add
add
pop
add
adc
arpl
add
jbe
out
add
pop
add
add
add
pop
enter
mov
dec
ficoms
insl
jne
sbb
ret
pop
inc
add
daa
sub
lds
mov
jne
add
inc
add
cmp
into
fcomps
cwtl
repz
cmp
add
lock
loopne
jl
loop
xchg
in
or
mov
sbb
push
add
add
add
fdivrl
cmp
push
mov
add
mov
faddl
nop
pop
xchg
lret
fstp
outsl
add
fstl
add
add
sub
mov
adc
xor
pop
cmp
imul
aas
xor
and
pop
dec
add
push
stos
lock
ss
xlat
addr16
xchg
jl
and
and
popa
repz
mov
xchg
adc
hlt
cld
xchg
or
xchg
imul
lock
dec
aad
call
jmp
js
inc
jg
sub
stos
or
lret
idivb
cltd
dec
add
rorl
ret
add
cmpsl
lods
fdivrs
add
add
add
inc
add
jne
movsb
mov
add
shlb
inc
add
push
add
cmc
dec
add
ret
sub
pop
push
add
pop
dec
add
add
add
jnp
lea
outsb
add
xchg
xor
xchg
std
je
pop
dec
lahf
dec
lds
add
add
add
dec
add
add
add
test
mov
add
and
add
xchg
in
movsb
cli
sbb
add
add
cmp
dec
add
add
jecxz
jo
movsl
clc
jmp
cwtl
test
add
js
sub
xchg
sub
rclb
xlat
aaa
clc
or
add
push
add
xchg
call
test
sub
cmp
iret
mov
add
xchg
cmpsb
or
jo
test
mov
mov
mov
lcall
add
popf
shll
lret
sahf
insb
add
jb
pop
sahf
mov
or
adc
rcr
push
jo
adc
pop
add
std
out
rcrb
add
pop
xchg
enter
add
push
add
enter
test
add
inc
adc
and
and
ja
inc
add
ret
sub
add
movb
repnz
decb
pop
cmpl
subb
out
daa
shl
popf
lahf
fcmovnu
aas
adc
or
cmp
popa
lcall
pop
clc
add
add
jns
lcall
stc
test
icebp
jns
cltd
xor
xorl
inc
add
pop
or
sub
adc
jmp
jp
xor
inc
add
xchg
es
cmpl
cmpsb
xlat
iret
fisubrl
add
add
lret
adc
mov
add
mov
dec
sahf
jge
cs
mov
and
aad
add
push
add
aas
addr16
sub
push
das
and
pop
gs
add
loope
add
xchg
test
roll
jb
pop
add
adc
out
out
xor
add
add
inc
add
scas
adc
pop
add
sbb
mov
in
push
dec
add
in
add
cmp
jns
add
or
mov
push
add
push
sbb
add
cmp
sbb
xor
jmp
loope
fucomip
cmp
pop
dec
sub
data16
mov
add
out
add
jae
add
inc
add
fwait
dec
add
add
repz
mov
lea
jo
mov
xchg
fidivs
jbe
adc
sti
loope
jle
lods
xchg
pandn
std
call
sarl
add
mov
inc
enter
mov
nop
push
rclb
add
cmpsb
mov
xchg
add
and
aaa
xor
add
fsts
add
push
add
aad
add
push
sahf
add
movsb
cmp
or
sub
shr
lahf
int3
adc
gs
add
add
shll
add
data16
roll
test
imul
add
lahf
fmull
xor
popa
and
add
aas
popf
push
jne
add
inc
lock
stos
mov
pop
xor
push
add
fcompl
lahf
mov
pop
or
jae
pop
mov
addr16
hlt
add
daa
cmp
mov
add
imul
int
shll
add
movsl
stos
out
or
scas
repz
jp
pusha
add
and
popa
out
cmp
shr
xor
cmp
add
gs
pop
ljmp
add
out
add
adc
and
andb
add
xlat
sarb
xchg
inc
add
leave
xchg
jmp
add
add
test
movsl
adc
ret
inc
add
mov
add
cmpsl
iret
rol
add
loopne
mov
jg
lret
lea
pop
cld
mov
aaa
push
ds
push
add
add
inc
jp
ficomps
int3
shlb
push
add
daa
or
add
mov
mov
add
mov
fsubrs
mov
repz
loop
xor
cltd
jmp
cmp
movsl
push
add
push
scas
test
xor
add
data16
lcall
repz
add
test
add
jo
pop
dec
add
add
int
mov
add
lcall
pop
add
sahf
jl
add
sub
push
add
cwtl
loop
sahf
shrb
cli
sbb
std
and
les
add
add
inc
add
js
dec
fnstenv
insl
ja
clc
cmp
sub
cmp
cmpsb
mov
add
push
lods
test
add
lods
mov
cmp
or
aam
adc
cmp
aaa
push
add
sarl
sbb
movsb
inc
add
test
add
add
popa
rorl
add
add
cmpsb
push
add
pop
andb
std
mov
add
mov
add
fldl
out
lea
add
clc
or
ljmp
add
add
lock
inc
add
add
add
mov
fldcw
inc
add
cwtl
leave
and
mov
add
xor
loop
add
add
lods
jbe
pminub
sbb
add
add
add
add
or
popf
mov
adc
add
dec
clc
sbb
dec
add
dec
mov
pop
add
push
add
fsubrl
add
das
mov
jmp
jo
xor
cwtl
add
test
push
add
xor
dec
sub
cmp
mov
add
inc
add
adc
mov
xchg
std
mov
lods
lret
lret
or
mov
add
bound
mov
mov
xor
add
mov
dec
add
pop
add
in
stc
or
lcall
add
adc
scas
xlat
jl
je
sti
inc
push
cltd
lret
add
pop
leave
test
inc
add
rorb
cwtl
mov
add
add
daa
add
sahf
data16
pushf
int
xor
dec
add
enter
inc
add
in
loope
scas
and
cmp
dec
add
xchg
scas
das
test
add
arpl
sbb
aad
push
add
add
push
dec
and
add
jbe
add
test
add
fistpl
inc
add
outsb
add
cmp
loop
add
daa
fwait
xchg
adc
in
push
test
mov
add
es
jbe
sti
mov
and
add
pop
aam
das
cmc
loop
loope
enter
sbb
and
mov
rcl
loop
jb
jmp
clc
fisttpll
push
inc
divb
lret
iret
mov
lret
adc
outsl
mov
ror
popf
mov
arpl
or
sbb
xchg
into
addr16
push
add
mov
ret
mov
add
sbb
mov
rcll
outsb
add
out
jne
pop
cs
nop
iret
mov
sub
add
mov
and
pop
jnp
cmp
ja
xor
fwait
aam
repz
xchg
mov
push
add
xchg
adc
mov
mov
pusha
add
sahf
jl
pop
add
add
jl
dec
add
popf
in
add
mov
add
aaa
dec
add
add
sbb
add
mov
xchg
fisttpll
push
sti
ret
sbb
aad
mov
imul
add
les
jne
stos
adc
mov
pop
mov
add
add
inc
add
shll
inc
iret
pop
pop
add
das
sbb
sub
out
jo
inc
add
js
incb
add
add
adc
adc
add
sbb
or
mov
mov
mov
add
data16
xchg
out
out
mov
mov
add
icebp
add
inc
add
notb
add
mov
mov
ja
in
push
add
les
add
push
xchg
int
sbb
add
stos
fdivr
fsubl
add
out
loop
add
bound
and
push
add
stc
push
repz
pop
and
or
adc
mov
or
gs
repz
or
add
and
mov
ret
bound
bound
nop
aas
mov
mov
and
adc
jmp
lock
test
adc
mov
or
mov
add
xchg
nop
or
mov
add
mov
xchg
cli
mov
jmp
aam
aam
and
lahf
add
insb
add
xor
ret
xor
lret
cmp
test
sti
loope
push
sahf
inc
sbb
pop
pop
add
stos
leave
jl
aaa
scas
pop
add
add
shrb
add
icebp
push
je
movsb
ds
cmp
imul
dec
cmp
clc
clc
fucomip
push
test
cmp
push
add
les
lahf
fwait
cmc
or
xchg
scas
dec
shrb
inc
add
repz
imul
inc
xchg
js
mov
cmc
mov
decl
add
add
cmpsl
in
add
jnp
lahf
add
aas
out
jle
test
hlt
into
mov
or
adc
mov
sub
addl
add
xchg
dec
mov
add
dec
add
sub
push
test
or
lea
addr16
sub
cmpsl
shlb
ljmp
dec
add
cwtl
leave
or
std
or
cmp
push
add
fs
addr16
add
test
add
push
add
test
add
jae
stc
cmp
add
jecxz
add
in
jp
imull
bound
bound
aad
mov
inc
add
or
add
out
outsb
add
add
sbb
stos
lcall
mov
adc
jo
xchg
or
stos
xor
xor
popf
imul
add
or
xor
mov
add
and
add
dec
add
add
add
mulb
aad
add
jbe
mov
dec
add
imul
xor
and
mov
or
inc
fnstcw
in
mov
sahf
sub
fcmovb
sub
ror
rcrb
mov
and
shlb
aam
add
and
inc
cld
mov
imul
add
lds
add
push
jecxz
add
add
add
add
inc
insl
xchg
xchg
ja
iret
or
add
test
add
shlb
inc
add
push
add
add
jle
mov
jl
cwtl
and
xchg
mov
test
dec
cltd
xlat
data16
push
jnp
repnz
jl
mov
xor
aad
push
add
dec
add
add
fbld
pusha
add
jmp
adc
pop
mov
lcall
in
add
and
push
add
cli
xchg
xor
ret
call
add
setns
mov
add
add
push
in
pop
in
shr
mov
repnz
add
cmp
xor
dec
add
dec
add
cwtl
sub
insl
mov
push
add
mov
int3
add
add
add
lret
leave
popf
push
jmp
gs
mov
enter
test
dec
dec
test
iret
inc
add
sub
add
das
fwait
sub
xor
xchg
popf
out
fisttps
shll
mov
jae
mov
jb
lret
divb
popf
shr
mov
xchg
test
add
jmp
rolb
fbld
add
pop
je
shrl
std
dec
push
push
add
sub
pop
add
add
scas
hlt
insb
add
push
add
push
add
adc
add
pop
add
dec
test
add
test
bound
jne
jno
add
mov
out
push
add
add
add
pop
add
or
