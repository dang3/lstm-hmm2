add
or
add
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
or
add
or
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
or
add
or
add
add
add
add
add
add
or
or
add
add
or
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
or
add
or
or
add
add
add
add
add
add
add
or
or
add
add
add
or
add
add
add
add
add
or
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
or
add
or
add
add
or
add
add
add
add
or
add
or
add
add
add
add
or
or
add
add
add
or
or
or
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
or
or
add
or
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
add
or
add
add
add
or
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
or
or
or
or
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
or
or
add
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
or
add
add
add
add
add
add
or
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
or
or
or
or
add
add
add
or
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
or
or
add
add
or
or
add
or
or
or
add
or
add
add
or
add
add
or
add
add
add
or
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
or
or
add
add
or
or
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
or
or
add
add
add
or
or
add
add
add
or
or
or
add
or
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
or
add
add
add
add
add
add
add
or
or
add
add
or
add
add
add
add
or
or
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
or
add
or
add
add
or
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
or
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
or
add
add
add
add
or
add
or
or
or
add
or
or
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
or
add
add
or
or
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
or
add
add
or
add
add
add
add
or
or
add
add
or
add
add
or
add
add
add
add
add
add
or
add
add
or
or
add
or
add
or
or
add
or
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
or
add
add
add
add
add
add
or
or
or
add
add
or
add
add
or
add
or
add
add
add
add
add
or
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
or
or
or
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
add
or
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
or
or
or
add
or
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
or
add
add
or
add
or
add
or
add
add
or
add
add
or
add
or
or
add
add
add
add
add
add
add
add
or
add
or
or
add
add
or
or
add
add
or
add
or
or
or
or
add
add
add
add
add
add
or
add
add
or
add
add
add
add
or
add
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
or
add
or
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
or
add
add
or
or
add
or
or
add
add
add
or
add
or
add
add
or
or
add
or
add
add
add
or
add
add
add
or
add
or
or
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
or
add
add
or
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
or
or
or
or
or
add
or
add
or
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
or
or
add
or
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
or
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
or
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
or
add
add
or
add
or
add
or
add
or
add
add
or
add
add
add
or
or
or
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
or
or
add
add
or
add
add
add
add
add
or
or
add
add
add
or
or
or
or
or
add
or
add
add
add
add
add
or
add
add
or
add
add
or
or
add
add
add
or
add
add
or
or
add
or
add
add
add
add
add
or
add
or
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
or
or
or
or
add
or
add
add
add
or
add
add
or
or
or
add
or
or
add
add
or
or
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
or
or
add
add
add
add
add
add
or
add
add
add
or
add
add
or
or
add
add
add
add
or
add
add
or
add
add
add
add
or
add
or
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
or
add
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
or
add
or
or
add
or
or
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
or
or
add
add
add
or
or
add
add
or
add
or
add
add
or
or
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
or
add
add
add
add
or
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
or
add
add
add
add
add
or
or
add
or
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
or
or
add
or
add
add
add
add
add
add
add
add
add
or
or
add
add
add
or
add
or
add
or
add
add
add
or
or
or
add
add
add
add
add
add
add
or
add
or
or
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
or
or
add
or
add
add
add
or
add
add
or
add
add
add
add
add
or
add
or
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
or
add
add
add
or
add
add
add
or
add
or
or
or
or
or
add
add
add
add
or
add
add
add
add
add
add
add
or
or
or
add
add
or
or
add
add
add
add
add
or
or
add
add
add
add
or
or
or
or
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
or
or
add
or
add
or
or
add
add
add
or
add
add
or
or
or
or
or
or
add
or
add
add
add
or
add
add
add
or
add
add
add
or
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
or
or
add
add
add
add
or
or
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
or
add
or
add
add
or
add
add
add
or
add
or
or
add
add
or
add
add
or
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
or
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
or
or
add
add
or
add
or
add
or
or
or
add
add
add
or
add
or
add
or
add
add
or
add
add
or
add
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
or
or
add
or
add
add
or
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
add
add
add
add
or
or
add
add
or
or
or
add
add
or
add
or
add
or
add
or
add
add
or
or
add
add
add
or
add
or
add
or
add
add
or
add
add
or
or
add
add
or
or
add
or
add
or
add
or
test
mov
jl
dec
std
mov
add
add
iret
inc
inc
mov
cmp
popf
jne
mov
add
add
mov
inc
mov
sub
cmc
fbstp
cmpsb
ret
adc
ficomps
sub
add
xchg
sar
jbe
xor
add
add
push
jecxz
mov
pop
push
push
pop
lahf
xchg
jl
adc
out
movsb
inc
cmp
or
cld
out
jns
in
in
shll
push
scas
xor
cmpsb
out
clc
mov
push
je
adc
cmp
outsb
pop
es
push
sub
add
scas
mov
mov
mov
insb
add
add
or
add
add
xor
add
sbb
pop
jp
dec
xlat
cmpsb
out
inc
mov
xor
pop
pop
call
add
imul
mov
add
out
xor
pop
xor
std
adc
movsb
insb
add
add
enter
in
insl
int
adc
and
add
add
add
pop
xchg
sarl
stos
cmovnp
xchg
pop
in
dec
pop
sub
cwtl
test
add
add
pop
loop
daa
xchg
gs
jbe
es
add
add
jb
jno
add
add
fadds
rorb
cmp
add
add
lds
cmp
dec
movsl
sub
add
add
aas
mov
add
add
lods
push
xor
add
add
add
aaa
xor
add
add
jns
and
add
fwait
adc
or
mov
add
add
dec
add
add
jo
or
add
add
pop
test
add
xchg
add
inc
pop
xlat
sbb
push
pop
bound
ja
jne
stos
scas
repz
add
add
leave
test
or
add
add
pop
das
data16
adc
add
add
add
add
popa
fdivrs
pop
sub
aas
mov
jmp
xchg
sbb
stos
dec
sarb
mov
dec
add
add
cld
lret
inc
add
inc
aaa
inc
add
add
pusha
mov
inc
cmp
aaa
in
lret
in
mov
xorb
and
xchg
cmpsl
xlat
sbb
addr16
xchg
cmp
mov
or
add
stc
mov
adc
xchg
pusha
mov
bound
rclb
mov
add
add
sub
dec
ret
jl
add
jp
mov
pop
fwait
ja
in
cmpsb
jbe
lods
dec
mov
lock
outsl
and
mov
sbb
out
adc
inc
inc
mov
sbb
mov
roll
sarl
mov
sbb
ja
shlb
mov
inc
int3
stc
and
add
add
cmpsl
sbb
and
add
add
jb
rcrb
add
inc
ljmp
dec
add
add
jbe
add
js
pusha
mov
jbe
outsb
mov
stos
xchg
inc
and
add
add
out
cmpsb
pop
std
cmp
fsubrs
mov
xor
dec
xchg
and
dec
pop
outsl
pop
push
push
aad
fucomip
pop
gs
lods
and
add
add
lds
js
mov
or
add
add
dec
sub
mov
rol
pop
mov
pushl
out
adc
pop
xchg
mov
pop
repz
adc
dec
mov
adcb
add
add
into
mov
mov
mov
add
fcoml
add
jbe
push
jecxz
push
push
pushf
dec
cltd
in
repnz
inc
inc
add
add
lahf
leave
add
add
sub
pop
pop
inc
fs
mov
push
add
ret
lods
pop
ret
sti
faddl
add
add
add
lods
cmp
jecxz
mov
rcl
sub
adc
add
add
xchg
push
xlat
icebp
pop
jbe
push
push
jne
xchg
jnp
pop
mull
ret
push
lret
ret
lds
jnp
cmc
dec
cltd
fsubr
out
and
add
add
pop
jns
mov
std
mov
mov
jnp
test
adc
or
popa
jecxz
cs
add
add
jns
mov
cs
int3
jl
cmp
xor
arpl
loopne
xchg
lret
sbb
cmp
sbb
adc
or
add
add
xchg
dec
xchg
mov
add
adc
lahf
sub
add
add
orb
push
lods
out
pop
xchg
pop
leave
jne
cmp
hlt
push
scas
dec
inc
or
sub
or
pop
xchg
cmpsl
lcall
fistps
and
add
add
xchg
cmp
clc
sub
mov
xor
dec
das
cmp
inc
jle
in
insl
xor
inc
rorl
dec
mov
test
sahf
aas
cwtl
test
ljmp
dec
add
add
add
mov
mov
lods
xchg
sbb
adc
pop
cmp
mov
add
add
jno
and
cmc
adc
xchg
out
mov
lds
dec
sarb
jb
xchg
inc
cmp
sub
lock
jns
dec
repz
fs
mov
jg
test
add
sbb
jns
mov
sbb
add
add
push
and
add
add
scas
xor
or
adc
test
enter
insl
xor
fldcw
ret
sbb
xor
cmpl
add
jge
into
cmp
lea
and
add
add
cmp
add
out
dec
mov
add
sbb
mov
xchg
mov
lret
clc
pop
mov
or
xor
mov
fwait
pop
cmp
push
stc
add
add
add
popa
sti
jmp
sbb
mov
int3
jl
dec
mov
add
out
mov
ret
jae
sbb
sahf
lods
mov
call
jnp
mov
ds
mov
jecxz
lea
jo
movsl
testl
ja
shrb
fucomip
pop
sbb
jne
jg
mov
add
add
add
jecxz
cli
jle
sbbb
les
dec
fninit
in
cs
mov
sbb
mov
je
shlb
cmpsb
pop
xor
xchg
pop
add
add
addr16
add
add
add
cmp
mov
add
add
insb
add
add
mov
mov
add
add
add
add
and
sbb
cmp
add
add
sbb
addr16
add
add
add
push
jge
enter
in
pop
and
add
add
inc
std
adc
sub
add
add
sub
xlat
sti
and
sub
mov
adc
mov
fcmovnu
push
sub
mov
add
add
push
push
cmpsb
or
add
add
pop
ret
adc
mov
dec
ret
add
add
mov
imul
rorb
out
sbb
enter
stos
fldenv
xor
cmp
sarl
enter
mov
mov
mov
cmp
add
add
pusha
add
add
std
roll
scas
inc
add
pusha
mov
lods
scas
inc
add
add
and
inc
shl
xor
add
add
mov
stos
loope
lea
data16
add
add
inc
sbb
mov
mov
shrl
mov
sub
add
add
add
add
add
add
add
aam
outsl
and
add
add
add
add
mov
test
add
jb
loopnew
lret
sub
add
add
mov
jnp
push
and
add
add
xlat
fwait
cmc
push
test
jmp
xchg
fs
testb
push
mov
add
mov
ret
loop
call
inc
xor
cmpb
sub
add
nopl
test
inc
mov
dec
mov
sbb
jno
rorl
add
add
jae
mov
lods
movaps
add
ja
inc
sbb
in
pusha
mov
add
add
fsts
adc
xor
cmp
inc
add
add
arpl
xchg
filds
es
and
push
dec
xchg
mov
push
stos
jnp
cltd
out
add
dec
bound
add
add
std
out
jmp
add
add
aam
fsub
movsb
lods
mov
cmpsl
jle
mov
mov
cltd
ret
popf
xor
pop
push
pop
cltd
adc
mull
add
add
icebp
mov
insl
scas
rclb
add
add
add
mov
jno
dec
push
push
dec
add
add
mov
add
add
push
jmp
stos
mov
mov
mov
add
adc
jnp
and
add
add
daa
jle
cmp
mov
push
mov
faddl
lret
or
add
add
out
leave
xchg
xchg
test
js
and
nop
or
cmp
add
add
mov
out
sub
push
xorl
out
loopne
push
jge
add
add
add
inc
xor
stos
sbb
bsr
push
xor
jno
fistl
add
add
add
test
jle
xchg
add
shlb
ret
mov
ss
mov
inc
mov
jp
popa
cmpb
add
push
fdivrl
pop
mov
mov
jg
inc
rep
push
mov
adc
add
add
cli
xchg
pusha
add
add
nop
adc
add
add
je
fnsave
stos
mov
push
je
add
add
sti
rcrl
lock
pop
pop
dec
ss
sbb
xor
add
add
sub
add
add
jo
cmpsb
jp
in
add
gs
cli
pop
dec
es
mov
xor
mov
adc
add
int
cld
mov
sete
call
jno
add
add
iret
ss
cmp
cltd
ja
pusha
mov
gs
add
add
mov
clc
cmp
add
add
add
pusha
add
add
dec
jb
repnz
add
add
add
mov
cld
loopne
dec
and
add
add
iret
pushf
and
xor
add
add
faddp
and
add
add
jns
ficoml
pop
lcall
or
pushf
mov
test
movsb
ljmp
out
add
add
cmp
add
add
dec
mov
push
push
das
sub
add
add
add
add
dec
mov
cmp
es
scas
mov
test
lcall
dec
add
add
pusha
add
add
stos
xlat
push
push
cld
inc
push
lret
ret
mov
push
notl
fs
in
popa
in
incb
add
add
xlat
test
xchg
mov
test
push
popf
and
sarl
dec
andb
add
ja
xorl
sahf
lret
mov
mov
es
stc
movsl
ret
jmp
jb
out
std
or
add
add
add
add
cmp
aaa
jb
sahf
imul
cmp
dec
pop
ss
mov
cs
ja
scas
lahf
mov
pop
aas
push
pop
in
inc
mov
sub
add
add
call
inc
jbe
imul
add
sub
outsb
into
jmp
or
push
mov
jnp
xchg
rcrb
sub
shr
jbe
add
add
dec
cmp
or
sbb
xor
pop
xchg
es
cli
mov
inc
pop
xchg
subb
mov
std
mov
sub
mov
loop
data16
mov
mov
popf
outsl
int
add
add
add
out
lcall
es
call
pop
cmc
in
mov
insl
fwait
jge
sub
add
add
sub
sbb
add
mov
add
ret
ret
cmp
mov
push
ret
adc
call
or
add
add
add
add
adc
les
adcb
mov
add
aam
sub
add
add
mov
add
stos
push
dec
pop
xor
test
cmp
mov
scas
add
add
add
subl
mov
leave
stos
inc
sub
fbld
int3
xchg
shl
lods
je
adc
xchg
and
in
mov
lods
xchg
dec
mov
dec
or
add
add
add
add
dec
fistps
pushf
sub
add
add
add
aad
or
jg
fsubl
repnz
push
xor
imul
push
jo
sbb
das
dec
mov
inc
data16
icebp
in
and
push
cmp
in
mov
mov
dec
push
add
fisubs
add
add
jnp
mov
fdivrl
mov
insb
mov
xor
repz
mov
test
sbb
xchg
push
sbb
xchg
gs
mov
pusha
mov
imul
jp
xor
cmpsb
loope
add
jnp
mov
fsubp
jo
dec
js
popf
cmp
pusha
mov
js
mov
pop
lds
in
sub
add
add
aad
jb,pn
imul
push
dec
sbb
mov
jns
add
add
cmpl
cmp
push
pop
popa
hlt
cmp
mov
add
add
and
popa
sbb
xchg
or
mov
lahf
push
adc
sbb
imul
sub
add
add
add
add
add
sbb
mov
adc
cmpsb
out
bound
push
sbb
add
add
mov
cmp
enter
out
sar
or
mov
repnz
cli
loope
cmp
add
add
das
fstl
int
pop
sbb
add
lods
cmc
mov
fildl
fisttpll
add
sti
push
adc
scas
pop
xchg
jne
out
sbb
sbb
add
dec
mov
mov
inc
add
add
stos
push
rcrl
jl
cwtl
inc
insl
mov
in
push
sub
out
mov
sub
add
add
xor
int3
inc
adc
aas
pop
je
ret
outsl
mov
inc
add
add
ljmp
lds
add
shlb
loop
stos
decl
add
add
add
inc
add
add
push
pop
inc
test
mov
iret
scas
mov
gs
xchg
xor
cmp
mov
adc
add
add
mov
sub
inc
add
add
test
sbb
add
add
stos
jle
cmp
adc
xchg
fcom
pushf
rclb
sub
add
add
push
xchg
loopne
popa
xchg
push
jmp
pop
test
sub
mov
pop
repnz
add
add
arpl
xor
fisubs
sbb
pop
pop
divl
cltd
pop
into
sub
adc
out
push
sbb
loope
fildl
mov
add
cmp
mov
add
or
in
cmpsl
inc
mov
loop
ljmp
aaa
xchg
adc
fs
push
jg
hlt
das
fucomp
int
lds
add
add
adc
cmp
jmp
xchg
fistps
rcrl
add
push
fwait
lea
fistpl
pcmpgtb
add
add
lcall
cmp
lret
std
popa
push
punpckhdq
cmp
movsl
jmp
mov
adc
fstpl
cmp
gs
mov
and
add
add
xor
add
add
sbb
jmp
sbb
or
add
add
xor
nop
pop
lods
xor
add
mov
ret
hlt
push
ljmp
add
lcall
rolb
add
add
mov
bound
add
add
sub
add
loop
sbb
add
add
cmp
insb
add
add
int3
jae
push
cmpsl
insl
inc
mov
mov
pushf
icebp
cmc
push
outsl
sarb
cmp
fchs
dec
mov
add
add
xchg
xchg
add
add
sub
add
add
fdivr
jmp
inc
aam
test
cmpsb
gs
popf
int3
jns
mov
mov
push
sbb
mov
inc
and
add
add
sbb
divb
add
test
aaa
add
add
add
aad
rcll
add
xor
mov
mov
stos
jl
inc
mov
mov
mov
sbb
push
push
scas
roll
add
xor
jo,pn
mov
orb
scas
and
xlat
ror
inc
mov
nop
add
add
add
mov
sbb
shrb
sub
cs
mov
jb
jne
hlt
rolb
pop
or
fcmovnbe
pushf
pop
add
add
insb
add
add
aaa
repz
test
leave
jmp
sbb
pop
jmp
cmc
sbb
xlat
stos
dec
mov
sbb
les
mov
sarb
lret
testb
add
ret
pop
dec
ficompl
nop
sbb
adc
xorps
cmpsl
or
pop
jne
push
loope
and
add
add
cmpsb
cltd
inc
add
add
and
cmp
add
add
xor
push
out
inc
add
add
fistpl
add
add
lcall
inc
add
add
sbb
jecxz
ficoml
sbbb
cld
xchg
lds
ss
out
cmpsl
inc
push
add
add
mov
rol
mov
ret
and
add
add
adc
add
add
mov
mov
or
add
add
lock
loope
sbb
incl
outsb
js
faddl
sub
and
add
add
test
pop
push
je
jg
lods
pop
cmc
lret
fcomip
sub
movsl
push
adc
add
popf
lock
add
add
add
into
jbe
cmp
andb
add
sub
sub
mov
pop
outsl
and
add
add
loop
inc
jle
jle
or
xor
fidivl
add
hlt
dec
xchg
out
nop
aad
add
jnp,pt
xchg
fdivs
popa
test
pop
outsl
push
inc
xlat
lock
mov
sub
add
add
mov
inc
cmp
aad
jmp
add
add
ret
shl
mov
out
xchg
outsl
cs
push
call
add
add
jl
push
mov
add
add
lea
cmpsb
ja
jb
lahf
aaa
adc
xchg
pop
ret
and
mov
cmc
je
cmpsl
js
repz
cli
outsl
sbb
movsb
test
mov
add
add
push
mov
add
das
or
jbe
sbb
pop
popf
mov
add
add
sub
outsb
add
add
add
mov
add
add
add
inc
out
js
add
add
add
daa
ret
xchg
cmp
sbb
in
cwtl
shlb
std
test
imul
ljmp
rorb
mov
inc
mov
inc
loop
xor
dec
mov
das
shlb
mov
mov
add
mov
jle
xchg
popf
subb
add
add
jp
sbb
add
add
insb
mov
add
movl
dec
enter
cmpsl
mov
mov
daa
or
add
add
mov
cmp
sub
add
add
push
sbb
xchg
out
push
pushw
add
sub
add
add
es
and
mov
lock
jmp
aam
cmp
mov
mov
scas
pop
sub
mov
mov
push
aas
shlb
jae,pn
call
in
sub
call
cmp
jne
lea
mov
push
push
push
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
not
inc
sub
mov
je
mov
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
push
cld
call
test
jne
push
bnd
es
push
jecxz,pn
ljmp
out
ret
sub
out
bound
scas
scas
cld
xchg
mov
sub
mov
xchg
adcb
pop
xchg
loop
sahf
dec
add
add
iret
mov
fwait
out
ret
pop
push
stc
into
add
icebp
mov
mov
add
add
xchg
decb
pop
dec
jl
inc
xchg
xchg
xchg
jno
icebp
or
mov
fdivrp
das
sub
jns
pushf
push
and
stos
xchg
int3
scas
jae
inc
inc
int
rcrb
lret
mov
loop
sub
and
push
adc
sub
jl
add
add
mov
stos
lods
push
push
or
adc
test
pop
std
sbb
in
push
fldenv
jo
jl
push
inc
adc
addr16
push
jmp
cmp
xchg
rol
cmp
push
pop
loope
inc
and
add
add
jne
inc
addl
fldl2e
sbb
dec
sbb
popa
bound
add
inc
push
lea
cmp
add
add
mov
add
mov
pusha
add
add
arpl
inc
add
add
fdivrl
add
es
or
push
cmp
add
mov
pop
and
add
add
jmp
roll
mov
gs
xlat
pop
push
jno
sub
adc
ljmp
insl
out
leave
jle
sub
add
add
or
fstpl
sub
add
clc
ja
pop
sti
and
add
add
jmp
clc
into
sbb
and
iret
movsl
or
sub
add
add
inc
xchg
mov
add
add
add
add
add
jnp
insb
add
add
insb
add
add
or
pushf
pop
roll
xchg
inc
cmpsl
inc
pop
push
sub
sub
popf
mov
in
cs
or
add
add
adc
xchg
pop
leave
mov
mov
imul
xlat
pop
cmp
jmp
push
sbb
xor
out
int
out
int
call
sete
in
lods
jp
pop
adc
mov
je
cmp
mov
add
add
lret
cwtl
fdivp
mov
xchg
inc
add
add
imul
rcrl
and
mov
cmp
mov
add
push
shlb
xor
lea
pop
movsl
mov
push
and
sbb
jbe
movsl
lods
cli
pushf
std
sbb
test
or
pop
inc
insb
mov
rorl
enter
jo
dec
bound
outsl
ljmp
loopne
jp
test
add
aaa
pop
adc
push
lahf
push
jo
cltd
sub
add
add
mov
cltd
sub
ss
cmp
and
in
dec
mov
hlt
dec
repz
add
add
lahf
sub
add
add
mov
adc
mov
mov
pop
dec
add
add
sub
fmuls
mov
lds
ds
mov
std
out
lds
pop
sub
adc
sbb
scas
sub
jmp
subl
add
add
add
add
int3
or
add
add
imul
add
add
add
inc
cmp
or
cmp
loopne
adc
sbb
add
add
mov
out
pop
cwtl
push
or
cmp
push
push
pop
push
dec
push
add
andl
loopne
mov
rclb
flds
cmp
add
mov
dec
sub
push
jecxz
sub
nop
adc
jne
out
pop
and
add
add
xor
fsts
add
pop
cwtl
fldt
or
int
xchg
ja
andb
add
add
loop
aaa
je
das
cmp
lock
je
shlb
cmp
push
sbb
add
add
add
mov
pop
inc
adc
add
add
outsl
xchg
push
push
xchg
clc
icebp
inc
mov
cmpsb
in
inc
jno
dec
iret
out
sub
push
mov
add
add
add
add
test
inc
xchg
nop
push
cmp
xor
cwtl
sbb
stos
shrl
add
add
ds
xchg
cmp
pop
add
add
leave
dec
inc
jo
pop
add
fnsave
ja
cmpsl
cwtl
and
cwtl
sahf
xor
leave
rcrl
inc
sub
add
add
mov
test
push
dec
and
pop
and
aam
jge
adc
add
add
xchg
mov
xchg
lea
sti
sti
cmpsb
pop
je
fwait
lret
sub
popa
rclb
adc
dec
mov
pop
xor
cmp
sbb
cmp
inc
add
add
cmpsl
xor
add
add
cmc
js
add
add
arpl
pop
mov
mov
dec
test
mov
seto
pop
jp
jmp
push
push
out
lahf
dec
xchg
add
mov
ds
xchg
int
dec
int3
mov
xor
pop
sahf
xchg
cmp
enter
mov
addr16
cmp
pop
pop
shll
or
add
add
adc
cmpsl
push
movsl
mov
push
mov
add
xor
jle
outsl
ss
repnz
jne
icebp
rcrb
fsubr
mov
ljmp
addl
data16
dec
clc
cmpsb
ds
scas
movsb
adc
shl
jge
xchg
popa
fwait
mov
add
add
adc
pop
dec
imul
add
push
add
xor
add
add
lock
cltd
cmp
decl
sub
ja
mov
dec
xchg
into
mov
pop
pop
ret
imul
inc
push
mov
out
dec
add
add
in
adc
shll
repnz
mov
mov
pop
dec
add
add
add
mov
roll
es
add
add
add
lcall
add
ja
push
mov
xlat
sarl
add
add
push
call
test
xchg
pusha
mov
xlat
and
xlat
out
testl
andb
add
jmp
add
cmpsb
into
jo
insb
add
add
repnz
mov
out
push
lds
ljmp
or
and
add
add
fistl
movsl
xchg
add
add
add
ss
mov
lcall
pop
adc
cmp
xor
sbb
add
pop
push
cmpsl
mov
lock
clc
jbe
js
cs
int
syscall
popa
pop
and
testl
addb
fwait
inc
lds
bound
mov
sub
add
add
add
add
xor
add
jbe
adc
stc
mov
insb
add
add
add
push
jg
or
mov
pusha
add
add
mov
add
jb
pop
loopne
push
sub
add
add
scas
sub
dec
add
add
jae
dec
pop
sub
jle
push
mov
xor
mov
mov
mov
add
add
int3
movsl
cmp
es
das
push
inc
addl
add
add
xchg
jbe
mov
pop
std
mov
les
in
fidivrl
aaa
add
js
mov
add
add
add
add
add
pusha
add
add
mov
jnp
xorb
stc
frstor
add
dec
in
clc
xchg
fstpl
push
sbb
insb
mov
mov
addr16
mov
fisubrs
into
adc
in
sbb
add
add
add
pop
fsubl
add
repnz
add
add
and
jmp
rorb
sbb
lahf
aam
pusha
add
add
sub
ror
or
loope
std
pop
mov
test
xchg
sbb
adc
jle
xor
icebp
sub
mov
mov
call
add
sbb
and
cmp
add
add
mov
ret
mov
decb
jle
loop
fidivl
pop
out
call
sub
xor
lds
add
add
sub
add
add
out
into
pop
lods
xchg
fstps
inc
not
int
cmp
stos
sar
loope
popa
cmp
dec
scas
scas
hlt
mov
test
sti
mov
pop
loopne
mov
shlb
add
add
add
add
push
mov
or
shll
test
stos
repz
sub
add
add
daa
mov
dec
add
add
sbb
arpl
push
or
sti
mov
loopne
push
pop
popf
cmp
jno
sbb
loop
dec
adc
call
in
dec
add
add
xor
ljmp
div
jle
pop
addr16
mov
in
lahf
mov
das
in
sub
rcl
clc
dec
fcmove
cld
inc
mov
jg
adc
dec
add
add
mov
aad
add
add
shll
aas
rcl
loop
mov
loop
add
add
add
shl
xor
stos
mov
push
fimull
dec
je
adc
into
es
lods
in
xchg
add
dec
mov
add
xlat
int
add
add
inc
xchg
test
addr16
add
pop
in
rorl
cltd
imul
add
test
xchg
je
dec
test
mov
cld
cmp
xchg
xor
xchg
addr16
or
jg
mov
pop
out
lret
xlat
push
rolb
or
jo
mov
pop
adc
mov
cld
pop
cli
xor
cmpsb
mov
mov
mov
dec
shlb
jns
or
add
add
xlat
adc
ret
jle
push
add
and
icebp
mov
ret
mov
mov
fimuls
add
add
dec
add
add
jae
add
add
add
add
cli
outsb
pop
das
mov
mov
xchg
lea
dec
stc
add
cli
inc
pop
adc
add
add
lds
rcl
adc
mov
icebp
aam
insb
mov
ss
xorb
leave
sub
add
add
or
push
shl
add
add
add
add
add
mov
rolw
add
int3
fcmovb
jg
in
add
out
sar
imul
push
js
pop
xchg
pop
sub
mov
add
pop
mov
add
aaa
push
popa
push
push
jmp
xor
or
cwtl
pop
sub
mov
xchg
cmp
sub
mov
test
sbb
adc
or
imull
sbb
loopne
and
xchg
movsl
aaa
push
inc
ljmp
jo
fs
adc
cs
push
sub
popa
inc
adc
aam
cwtl
scas
cli
es
and
add
add
mov
das
inc
aas
jecxz
mov
adc
divb
fisubrs
test
sahf
scas
ficomps
out
sbbl
add
ficomps
aaa
dec
imul
in
iret
rorl
mov
add
add
inc
pushl
push
dec
mov
push
sub
sbb
mov
add
in
leave
cmp
repnz
shlb
mov
jl
pop
mov
dec
mov
mov
sbb
add
add
sbb
out
insl
sbb
jecxz
inc
dec
mov
mov
and
add
add
inc
rorb
scas
cmp
add
xchg
or
inc
mov
add
mov
mov
adc
scas
arpl
jo
sbb
mov
push
out
dec
sbb
lret
imul
add
jne
adc
scas
sbb
jae
sti
jmp
imul
lret
mov
or
lock
sti
mov
icebp
pop
mov
xor
cmpl
lea
scas
mov
cmp
sub
add
add
aaa
inc
jge
xor
jp
xchg
sub
mov
add
add
add
add
add
xlat
lcall
fisubl
cli
or
add
push
test
loop
stos
test
aas
xchg
jno
jbe
call
das
jns
dec
test
cld
sbb
out
clc
sarl
xor
add
add
jnp
mov
jl
or
add
add
xor
inc
mov
sub
into
adc
test
repnz
or
rcrb
add
add
aaa
pop
push
mov
ret
repnz
inc
inc
in
xor
imul
mov
in
push
cli
ja
push
adc
bound
cmp
iret
mov
je
mov
imul
test
xor
xor
add
add
mov
fists
jno
xchg
repz
call
mov
bound
decl
jmp
add
inc
sbb
mov
pop
iret
outsb
cmp
add
add
xchg
add
mov
ret
aam
ja
adc
and
lcall
and
test
pop
test
jbe
sub
iret
jle
cmpl
fcompl
flds
add
cmp
add
add
mov
xlat
mov
dec
sub
add
mov
add
jmp
xlat
sbb
leave
popa
xor
pusha
mov
lds
mov
lea
inc
and
inc
mov
mov
xor
add
add
xor
sbb
lret
pop
push
repnz
mov
int
mov
jae
repnz
push
popa
inc
jb
mov
lea
dec
jmp
and
sbb
int
jbe
mov
data16
add
add
pop
dec
add
add
push
stos
fldenv
gs
daa
push
int3
or
cmc
aas
mov
mov
out
insl
dec
inc
clc
mov
add
sub
add
add
xor
push
sbb
shrb
dec
stos
sub
xor
adc
jb
jne
lret
ret
inc
mov
push
dec
jmp
insb
mov
mov
sahf
jp
outsb
sahf
scas
rcrl
pop
push
test
pusha
add
add
add
xchg
push
movsb
out
xor
iret
push
clc
repnz
nop
nop
jae
and
ficomps
add
fisubrs
repnz
nop
nop
jae
add
cmpsl
add
add
es
fcomi
stos
clc
repnz
nop
nop
jae
sar
sub
add
add
cmp
lock
add
add
leave
nop
jmp
lods
dec
add
xor
push
mov
leave
nop
jmp
add
add
add
xchg
push
push
clc
repnz
nop
nop
jae
add
cmp
push
push
mov
xchg
ret
enter
jbe
cmp
add
mov
leave
nop
jmp
add
add
add
lret
fwait
clc
repnz
nop
nop
jae
add
mov
std
popa
push
mov
xchg
ret
movsb
add
cmp
add
add
and
cmp
add
repnz
nop
nop
jae
add
mov
add
lods
and
imul
cld
nop
nop
jae
mov
add
mov
add
add
insl
pop
clc
repnz
nop
nop
jae
add
add
add
add
das
add
nop
push
mov
leave
nop
jmp
cmp
mov
roll
add
mov
clc
repnz
nop
nop
jae
add
add
inc
fld1
nop
push
mov
leave
nop
jmp
cmp
jbe
add
add
out
jp
add
clc
repnz
nop
nop
jae
fisubrs
lods
movb
add
cs
or
mov
xchg
ret
add
pop
add
add
cmp
mov
sti
lea
clc
repnz
nop
nop
jae
and
and
and
xchg
cmp
cmp
add
repnz
nop
nop
jae
add
pushf
add
pop
add
cmp
clc
repnz
nop
nop
jae
add
pushf
add
sar
repnz
nop
nop
jae
add
dec
add
add
sub
jge
clc
repnz
nop
nop
jae
add
mov
add
add
clc
repnz
nop
nop
jae
jge
and
loop
add
cmp
roll
repnz
nop
nop
jae
add
roll
add
popf
add
and
sub
or
add
and
add
add
add
cmp
and
add
add
jmp
in
leave
nop
jmp
add
add
add
add
add
add
mov
xchg
ret
movb
jge
add
fidivs
add
scas
mov
clc
repnz
nop
nop
jae
cwtl
add
dec
add
nop
nop
jae
loop
fiadds
add
lret
lret
fld1
push
mov
xchg
ret
dec
push
rclb
mov
add
inc
add
add
in
lods
clc
repnz
nop
nop
jae
rolb
pop
add
add
call
nop
push
mov
leave
nop
jmp
ss
add
ret
clc
repnz
nop
nop
jae
add
in
add
add
add
add
movsb
push
push
clc
repnz
nop
nop
jae
add
add
pushf
add
add
nop
push
mov
leave
nop
jmp
add
bound
sti
xor
roll
je
cld
mov
nop
nop
jae
add
in
jae
xor
add
nop
push
mov
leave
nop
jmp
mov
add
add
cmpsl
mov
mov
leave
nop
jmp
add
lret
pop
mov
cld
nop
nop
jae
jge
ljmp
add
cmp
call
clc
repnz
nop
nop
jae
add
add
add
add
pop
adc
pop
call
nop
jmp
add
add
pop
popa
call
clc
repnz
nop
nop
jae
add
jbe
pop
repz
mov
push
mov
leave
nop
jmp
add
add
iret
fwait
clc
repnz
nop
nop
jae
mov
and
add
add
rcrl
add
add
add
xchg
add
fiaddl
sub
popf
sti
not
nop
push
mov
leave
nop
jmp
enter
bound
cmpsl
xchg
clc
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
shrl
add
pop
and
pop
clc
repnz
nop
nop
jae
cmp
add
add
clc
repnz
nop
nop
jae
add
add
add
cmp
add
mov
adc
repnz
nop
nop
jae
add
pushf
add
add
add
es
xor
cld
nop
nop
jae
dec
add
add
lods
jnp
push
mov
add
add
jle
add
add
ret
clc
repnz
nop
nop
jae
xchg
add
add
add
add
and
sti
in
mov
nop
push
mov
leave
nop
jmp
add
cmp
movsb
xor
jb
int
pop
push
mov
xchg
ret
add
add
dec
cmp
add
add
add
push
mov
xchg
ret
and
add
es
add
add
push
int3
call
and
repnz
nop
nop
jae
dec
fidivl
lret
add
jnp
sbb
add
clc
repnz
nop
nop
jae
repz
add
xabort
cld
nop
nop
jae
loop
add
sti
cmp
add
addl
in
leave
nop
jmp
sarl
add
mov
push
mov
xchg
ret
push
cmpsl
mov
cltd
add
dec
xor
and
clc
repnz
nop
nop
jae
add
add
cmp
xlat
mov
clc
repnz
nop
nop
jae
mov
pushf
xor
add
add
fisttpl
mov
leave
nop
jmp
rorb
xchg
add
xchg
jb
add
jae
add
movsb
lods
add
add
adc
mov
leave
nop
jmp
popf
jbe
add
jae
add
add
loop
push
mov
xchg
ret
add
pushf
fiadds
movsb
jbe
repz
jnp
sbb
nop
push
mov
leave
nop
jmp
cmp
es
mov
nop
push
mov
leave
nop
jmp
add
cwtl
add
cmp
bound
xor
repnz
nop
nop
jae
cmp
add
inc
loop
nop
push
mov
leave
nop
jmp
add
and
dec
sarl
mov
clc
repnz
nop
nop
jae
add
add
jns
lahf
mov
clc
repnz
nop
nop
jae
and
movsb
add
es
add
mov
clc
repnz
nop
nop
jae
mov
add
ficomps
adc
and
add
pop
sub
lcall
repnz
nop
nop
jae
enter
add
rolb
add
dec
push
mov
xchg
ret
add
add
add
add
mov
fistpl
push
mov
xchg
ret
xchg
sub
roll
add
arpl
add
repnz
nop
nop
jae
mov
push
mov
add
fisubs
add
add
add
pop
add
shll
repz
call
push
mov
leave
nop
jmp
and
add
mov
loop
add
popa
mov
clc
repnz
nop
nop
jae
cmp
add
mov
jbe
in
ror
clc
repnz
nop
nop
jae
add
jns
add
add
add
cld
nop
nop
jae
mov
add
add
clc
repnz
nop
nop
jae
popf
add
lods
pop
and
mov
mov
repnz
nop
nop
jae
popf
cwtl
add
fiadds
add
nop
push
mov
leave
nop
jmp
add
add
rcrl
clc
repnz
nop
nop
jae
dec
and
add
xor
add
jge
mov
iret
stc
add
gs
add
or
stos
test
test
adc
cld
nop
nop
jae
shll
bound
push
mov
xchg
ret
and
sub
add
add
mov
xchg
ret
add
add
xchg
pop
add
lret
cltd
add
cld
nop
nop
jae
add
cmp
add
adc
pop
adc
push
fs
add
loop
add
mov
add
add
cld
nop
nop
jae
add
cltd
add
ss
fldt
clc
repnz
nop
nop
jae
add
jns
mov
mov
clc
clc
repnz
nop
nop
jae
cmp
xor
ror
add
add
cmp
push
mov
xchg
ret
and
add
add
add
add
cmp
filds
fistl
add
fidivs
cmp
mov
add
clc
repnz
nop
nop
jae
add
cmp
fsubs
dec
mov
add
nop
push
mov
leave
nop
jmp
add
add
add
add
add
mov
and
add
and
add
add
sub
add
xchg
inc
push
push
mov
xchg
ret
dec
xchg
mov
in
cmpsl
add
fwait
push
mov
xchg
ret
mov
add
add
add
jge
sbb
and
add
add
rclb
nop
jmp
sub
add
ss
les
mov
clc
repnz
nop
nop
jae
mov
jnp
es
mulps
repnz
nop
nop
jae
add
add
add
fisubs
push
mov
xchg
ret
mov
add
cltd
enter
pop
clc
repnz
nop
nop
jae
es
add
add
add
cmp
bound
cld
nop
nop
jae
add
pop
and
ljmp
jb
clc
repnz
nop
nop
jae
fisubl
fidivrl
add
int3
fcompl
movl
nop
jmp
add
add
add
add
add
mov
push
mov
leave
nop
jmp
add
add
cmp
popf
xchg
add
dec
pop
and
add
add
jae
inc
sbb
repnz
nop
nop
jae
add
loop
add
xor
add
xor
add
nop
push
mov
leave
nop
jmp
add
add
jnp
add
pop
fld1
nop
push
mov
leave
nop
jmp
add
add
xchg
lret
sbbl
dec
imul
fcmovbe
add
cwtl
add
add
lea
cld
nop
nop
jae
add
xchg
bound
dec
add
call
nop
jae
add
enter
repz
andl
add
cmpl
mov
leave
nop
jmp
and
add
add
jns
nop
push
mov
leave
nop
jmp
add
add
xor
clc
repnz
nop
nop
jae
add
add
sub
cmpsl
roll
das
fistpl
push
mov
xchg
ret
bound
add
add
ljmp
cld
nop
nop
jae
add
mov
repz
add
daa
fistpl
clc
repnz
nop
nop
jae
mov
add
and
add
push
je
clc
repnz
nop
nop
jae
cmp
fiadds
mov
add
push
clc
repnz
nop
nop
jae
add
sti
sbb
add
enter
push
mov
xchg
ret
add
movb
add
fisubs
sti
add
add
loopne
xor
add
add
or
stc
clc
repnz
nop
nop
jae
add
add
add
add
addl
nop
push
mov
leave
nop
jmp
add
jbe
add
jl
mov
clc
repnz
nop
nop
jae
add
add
add
add
add
sub
nop
jmp
add
popf
jbe
add
inc
add
clc
repnz
nop
nop
jae
fisubrs
pop
add
aas
clc
repnz
nop
nop
jae
pop
add
add
sub
pusha
mov
push
push
mov
xchg
ret
es
roll
jbe
add
jbe
rep
clc
repnz
nop
nop
jae
mov
cltd
add
shl
roll
cld
nop
nop
jae
sti
repz
add
fidivrs
and
nop
push
mov
leave
nop
jmp
add
add
add
testl
clc
repnz
nop
nop
jae
mov
add
xchg
push
clc
repnz
nop
nop
jae
sarb
add
add
mov
aam
dec
nop
push
mov
leave
nop
jmp
add
add
rolb
and
xchg
fiaddl
cltd
sbb
push
mov
leave
nop
jmp
add
add
popf
dec
pop
dec
add
mov
push
mov
xchg
ret
pushf
pushf
dec
push
jbe
add
mov
shr
clc
repnz
nop
nop
jae
add
in
roll
cwtl
mov
iret
jmp
add
add
jns
movsb
popf
add
cmp
push
or
repnz
nop
nop
jae
jnp
jbe
popf
add
add
xor
push
mov
xchg
ret
cwtl
add
add
and
iret
push
push
mov
xchg
ret
enter
add
add
in
add
push
push
mov
xchg
ret
add
mov
cmp
and
push
sub
pop
push
push
mov
xchg
ret
add
loop
fidivrs
and
add
movsb
dec
push
clc
repnz
nop
nop
jae
ljmp
jnp
add
dec
mov
push
clc
repnz
nop
nop
jae
add
cmp
rcr
xor
add
or
add
add
mov
repnz
nop
nop
jae
add
movb
add
sub
cltd
sub
add
add
popf
xchg
clc
repnz
nop
nop
jae
in
add
jns
xchg
add
add
mov
add
jmp
jmp
jbe
and
add
add
shrl
daa
push
clc
repnz
nop
nop
jae
movsb
cmp
mov
add
add
mov
pop
clc
repnz
nop
nop
jae
add
xor
add
fiadds
sub
nop
nop
jae
add
mov
add
mov
add
clc
repnz
nop
nop
jae
rcl
and
add
pushf
sti
sub
mov
repnz
nop
nop
jae
add
add
add
inc
clc
repnz
nop
nop
jae
add
add
dec
rolb
add
add
clc
repnz
nop
nop
jae
roll
fiadds
add
sub
mov
add
clc
repnz
nop
nop
jae
add
pop
cmp
xchg
sbb
clc
push
mov
xchg
ret
cmp
sub
mov
push
mov
leave
nop
jmp
movsb
add
pop
add
and
jbe
or
enter
nop
nop
jae
sub
roll
add
cwtl
pop
mov
and
clc
repnz
nop
nop
jae
add
add
add
add
popa
jne
clc
repnz
nop
nop
jae
add
add
aaa
push
clc
repnz
nop
nop
jae
xchg
loop
add
pushf
mov
enter
add
clc
repnz
nop
nop
jae
xchg
dec
ljmp
jae
jno
fld1
clc
repnz
nop
nop
jae
mov
in
fisubl
ljmp
icebp
push
nop
push
mov
leave
nop
jmp
add
addl
mov
outsl
arpl
add
nop
jmp
cwtl
cmp
popf
sub
add
push
mov
leave
nop
jmp
dec
xor
add
mov
cmp
push
mov
leave
nop
jmp
add
xchg
add
enter
add
jne
clc
repnz
nop
nop
jae
sub
add
add
es
add
pop
jge
add
add
add
nop
push
mov
leave
nop
jmp
shll
add
add
clc
repnz
nop
nop
jae
add
add
mov
jge
add
jmp
mov
xchg
ret
add
add
add
xchg
mov
ss
addl
cld
nop
nop
jae
add
add
add
sub
jae
ficoms
xchg
xorl
clc
repnz
nop
nop
jae
jae
cmp
ficoms
into
outsb
dec
mov
fistpl
clc
repnz
nop
nop
jae
movsb
loop
add
sub
sub
cld
nop
nop
jae
add
add
add
sbb
adc
push
push
inc
add
pop
add
in
add
add
repnz
nop
nop
jae
add
lods
add
and
shrb
popf
in
add
lods
or
jl
xchg
orb
incl
xchg
add
mov
nop
push
mov
leave
nop
jmp
ficomps
add
jae
movb
repnz
nop
nop
jae
ljmp
mov
sub
fcompl
nop
nop
jae
add
add
jnp
push
push
mov
xor
clc
repnz
nop
nop
jae
cmp
ljmp
add
ss
add
push
mov
xchg
ret
popf
mov
sub
mov
add
add
xlat
xchg
clc
repnz
nop
nop
jae
mov
add
cmp
add
loop
inc
cmp
insl
fistpl
clc
repnz
nop
nop
jae
add
xchg
add
add
roll
xchg
mov
xchg
ret
add
cltd
mov
pop
add
add
add
pop
push
mov
xchg
ret
add
add
add
mov
adc
repnz
nop
nop
jae
add
add
roll
inc
lea
nop
push
mov
leave
nop
jmp
add
add
sarl
mov
push
clc
repnz
nop
nop
jae
mov
add
cltd
test
mov
clc
repnz
nop
nop
jae
ljmp
add
repnz
nop
nop
jae
add
popf
add
xorl
pusha
clc
repnz
nop
nop
jae
add
lods
push
add
add
sub
mov
push
xor
push
mov
xchg
ret
roll
rcl
mov
push
push
clc
repnz
nop
nop
jae
and
cmp
std
push
clc
repnz
nop
nop
jae
mov
loop
xor
add
push
push
mov
leave
nop
jmp
add
cwtl
repz
xchg
mov
add
add
xor
mov
jmp
incl
add
add
add
add
add
add
add
xchg
nop
nop
jae
and
bound
shr
add
adc
clc
repnz
nop
nop
jae
xchg
add
add
add
add
jmp
cmpsl
mov
lods
and
add
cmp
add
xlat
push
clc
repnz
nop
nop
jae
xor
add
rolb
lods
add
jae
xchg
add
add
add
loop
add
call
inc
add
add
cmp
jnp
pop
inc
add
push
mov
xchg
ret
add
dec
jns
add
sub
mov
add
incl
nop
push
mov
leave
nop
jmp
loop
add
add
add
mov
repz
repnz
nop
nop
jae
add
pop
movb
dec
add
daa
add
clc
repnz
nop
nop
jae
add
push
pop
fwait
nop
push
mov
leave
nop
jmp
sbbl
add
subl
cld
nop
nop
jae
add
add
pop
add
mov
push
mov
xchg
ret
fidivrs
add
and
add
cmp
nop
nop
jae
jbe
in
cmpsl
add
add
roll
add
mov
clc
repnz
nop
nop
jae
sub
mov
mov
push
mov
xchg
ret
add
in
add
and
fiadds
push
mov
xchg
ret
add
cmp
add
and
cs
repnz
nop
nop
jae
mov
pop
rolb
add
mov
clc
repnz
nop
nop
jae
cmp
add
xchg
add
cmp
mov
xchg
ret
and
add
mov
mov
test
nop
push
mov
leave
nop
jmp
dec
add
add
roll
addl
sub
cld
nop
nop
jae
add
add
jns
add
fiaddl
xchg
mov
clc
repnz
nop
nop
jae
sub
sub
add
cmp
nop
nop
jae
enter
add
mov
push
inc
add
add
add
jecxz
mov
repz
or
aas
dec
add
jp
add
add
cld
nop
nop
jae
fiadds
mov
xor
add
pop
xor
push
rcrb
nop
push
mov
leave
nop
jmp
jae
jns
add
add
repnz
nop
nop
jae
add
add
roll
add
add
es
les
adc
or
add
clc
repnz
nop
nop
jae
dec
add
sub
bound
andb
adc
clc
repnz
nop
nop
jae
add
xchg
and
ret
push
push
mov
xchg
ret
add
jge
add
add
mov
nop
nop
jae
add
cmp
mov
fiadds
in
add
push
mov
leave
nop
jmp
add
sub
add
xor
add
cmp
mov
xchg
ret
add
push
sarb
jb
repnz
nop
nop
jae
add
add
inc
sbb
jo
add
repnz
nop
nop
jae
sub
sti
or
jbe
push
clc
repnz
nop
nop
jae
and
add
in
add
aas
jne
clc
repnz
nop
nop
jae
add
rcl
cltd
and
and
repnz
nop
nop
jae
popf
jnp
jae
add
add
add
add
clc
repnz
nop
nop
jae
add
jbe
jae
xor
sti
add
mov
xor
gs
clc
repnz
nop
nop
jae
add
add
cmp
cmp
maskmovq
notl
push
mov
xchg
ret
roll
jae
add
add
movsb
add
les
mov
xchg
ret
add
cmp
jge
add
add
shll
cmpl
nop
push
mov
leave
nop
jmp
dec
repz
pop
add
add
push
mov
xchg
ret
add
add
mov
pop
push
mov
xchg
ret
add
add
add
repz
add
es
shr
nop
push
mov
leave
nop
jmp
add
add
mov
add
add
add
push
mov
leave
nop
jmp
add
add
add
dec
dec
add
add
mov
test
call
nop
jmp
sti
jnp
mov
add
stos
xor
clc
repnz
nop
nop
jae
add
sti
repz
mov
je
nop
push
mov
leave
nop
jmp
add
add
add
nop
push
mov
leave
nop
jmp
add
jae
add
repnz
nop
nop
jae
pop
add
add
sub
add
enter
sbb
repnz
nop
nop
jae
add
cmpsl
movsb
cmp
mov
push
mov
xchg
ret
jns
mov
rcll
in
inc
sub
nop
jmp
dec
mov
add
jmp
jp
nop
push
mov
leave
nop
jmp
add
and
cmp
mov
leave
nop
jmp
add
add
sti
mov
dec
add
add
dec
das
test
push
mov
xchg
ret
jge
ficomps
push
pop
movsb
daa
test
push
mov
xchg
ret
rolb
add
sub
add
mov
ljmp
push
push
and
cmp
and
dec
sub
dec
add
add
jae
fistl
mov
inc
add
jns
mov
xchg
add
ja
out
out
clc
call
nop
jmp
add
add
popf
add
nop
push
mov
leave
nop
jmp
add
and
lret
lret
mov
stos
add
clc
repnz
nop
nop
jae
lods
mov
mov
add
loop
add
clc
repnz
nop
nop
jae
add
ljmp
rolb
int3
cmpsb
popf
fld1
push
mov
xchg
ret
add
add
add
add
es
xor
add
add
add
repnz
nop
nop
jae
add
add
add
mov
cmp
rolb
rorl
mov
xchg
ret
mov
add
fiadds
add
or
nop
jmp
dec
shlb
add
add
add
int3
in
or
sub
push
mov
xchg
ret
add
add
in
cwtl
add
add
push
clc
repnz
nop
nop
jae
movsb
add
add
add
orl
cld
nop
nop
jae
mov
cltd
mov
es
cmpsl
mov
clc
repnz
nop
nop
jae
add
cmp
add
enter
push
ret
and
nop
push
mov
leave
nop
jmp
add
bound
mov
push
push
mov
xchg
ret
add
add
add
rcl
in
add
sti
fistpl
push
mov
xchg
ret
sub
add
add
add
add
cmp
fistpl
clc
repnz
nop
nop
jae
add
fiaddl
add
add
sarl
jae
add
add
repnz
nop
nop
jae
add
mov
mov
clc
repnz
nop
nop
jae
cltd
repz
popf
add
add
roll
mov
xchg
ret
add
in
add
xchg
push
xor
insb
inc
add
xchg
mov
movsb
add
add
mov
adc
repnz
nop
nop
jae
xchg
cmp
add
pop
add
pop
xchg
pusha
push
mov
xchg
ret
enter
add
sub
add
cmp
repnz
nop
nop
jae
add
mov
add
add
add
clc
repnz
nop
nop
jae
add
cmp
mov
enter
aas
xor
clc
repnz
nop
nop
jae
add
es
lret
add
add
insl
mov
push
mov
xchg
ret
dec
jae
mov
add
mov
repnz
nop
nop
jae
xchg
mov
add
add
mov
add
push
mov
xchg
ret
add
cwtl
add
add
add
add
cmpsl
jns
push
mov
xchg
ret
xor
xor
rolb
repz
rorl
nop
nop
jae
cltd
add
add
add
mov
rcl
movzwl
clc
repnz
nop
nop
jae
xchg
mov
cmpsl
add
mov
add
clc
repnz
nop
nop
jae
add
sub
pushf
jge
and
popa
clc
repnz
nop
nop
jae
add
xor
loop
cmp
push
add
clc
repnz
nop
nop
jae
add
add
jns
add
push
nop
push
mov
leave
nop
jmp
add
add
mov
cwtl
xor
xchg
push
push
mov
xchg
ret
dec
add
push
mov
add
cmp
push
clc
repnz
nop
nop
jae
add
add
push
push
add
mulb
add
pop
xchg
pop
clc
repnz
nop
nop
jae
cmp
mov
add
fidivrs
mov
push
mov
xchg
ret
add
add
add
sarl
call
clc
repnz
nop
nop
jae
pop
sti
add
add
sub
push
add
sahf
xchg
in
leave
nop
jmp
add
mov
sub
add
add
clc
repnz
nop
nop
jae
add
add
sub
jge
sahf
mov
mov
xchg
ret
jns
mov
add
mov
push
push
mov
xchg
ret
rcrl
add
enter
ret
push
mov
jge
add
add
adc
mov
add
add
outsl
les
add
add
les
push
inc
add
add
add
mov
cmp
nop
push
mov
leave
nop
jmp
add
add
add
add
addr16
clc
repnz
nop
nop
jae
add
popf
add
add
clc
repnz
nop
nop
jae
pushf
add
movsb
and
xchg
add
push
clc
repnz
nop
nop
jae
sub
movsb
add
push
negb
pop
rep
push
mov
xchg
ret
dec
cmpsl
add
add
mov
add
repnz
nop
nop
jae
loop
cltd
shrb
cmp
das
push
push
mov
xchg
ret
xor
in
pushf
add
add
sub
add
aaa
xor
clc
repnz
nop
nop
jae
add
lret
rcl
add
fld1
clc
repnz
nop
nop
jae
enter
add
cwtl
add
add
adcl
inc
add
add
add
mov
mov
push
push
mov
xchg
ret
mov
add
xchg
add
and
add
rclb
mov
xchg
ret
add
add
add
and
push
push
mov
sbb
add
inc
cmp
add
add
xor
clc
repnz
nop
nop
jae
add
dec
add
add
repnz
nop
nop
jae
movsb
add
es
sub
cmp
sar
repnz
nop
nop
jae
pushf
add
jae
xchg
xor
mov
pop
add
add
add
repz
clc
repnz
nop
nop
jae
add
sub
fidivrl
rcr
add
nop
push
mov
leave
nop
jmp
pop
add
lret
mov
sbb
add
nop
jmp
popf
sub
add
push
sub
in
inc
mov
add
add
add
sub
mov
mov
cld
nop
nop
jae
fcmovbe
roll
add
mov
mov
push
push
clc
repnz
nop
nop
jae
mov
sub
and
in
add
xchg
cltd
sub
clc
repnz
nop
nop
jae
xchg
dec
add
add
test
repnz
nop
nop
jae
jnp
add
add
ss
add
loopne
xchg
push
mov
xchg
ret
sub
add
add
in
add
jae
cli
add
nop
nop
jae
add
add
dec
cmp
nop
push
mov
leave
nop
jmp
add
add
add
cltd
outsb
sbb
nop
push
mov
leave
nop
jmp
shll
mov
rcll
mov
leave
nop
jmp
mov
in
add
add
or
mov
xchg
ret
add
ljmp
add
dec
nop
push
mov
leave
nop
jmp
rep
mov
bound
movsb
add
pop
add
clc
repnz
nop
nop
jae
add
add
cmp
dec
test
nop
push
mov
leave
nop
jmp
repz
add
add
add
xchg
sub
add
add
nop
jmp
xchg
pop
pushf
add
push
mov
xchg
ret
add
add
and
ficomps
inc
call
clc
repnz
nop
nop
jae
push
dec
pop
add
mov
add
push
mov
xchg
ret
in
add
add
ljmp
rorb
add
add
repnz
nop
nop
jae
cmp
sub
bound
pop
cmp
pop
clc
repnz
nop
nop
jae
mov
cmpsl
sub
add
int3
mov
push
mov
xchg
ret
es
add
fiaddl
add
add
and
xor
nop
push
mov
leave
nop
jmp
cwtl
add
add
push
mov
leave
nop
jmp
add
loop
cmp
inc
clc
repnz
nop
nop
jae
loop
fcmovbe
xchg
lret
fimuls
clc
repnz
nop
nop
jae
pop
sub
mov
add
mov
mov
push
mov
xchg
ret
add
loop
add
add
lods
jnp
mov
nop
push
mov
leave
nop
jmp
add
add
adc
test
push
push
mov
xchg
ret
pop
mov
pushf
sti
jbe
add
and
push
nop
push
mov
leave
nop
jmp
add
add
mov
add
shrl
sbb
mov
xchg
ret
in
add
add
add
add
repnz
nop
nop
jae
roll
repz
mov
add
dec
cmp
repnz
nop
nop
jae
push
cmp
add
add
in
je
je
nop
push
mov
leave
nop
jmp
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
loopne
jp
jne
clc
repnz
nop
nop
jae
add
add
push
fiaddl
or
cld
nop
nop
jae
lods
add
fisubrs
add
sub
add
clc
repnz
nop
nop
jae
pop
add
add
dec
mov
push
clc
repnz
nop
nop
jae
add
repz
fiadds
jbe
stos
clc
repnz
nop
nop
jae
cmp
add
cmp
cmp
xor
es
clc
repnz
nop
nop
jae
add
popf
add
add
movsb
movsb
add
repnz
nop
nop
jae
loop
xor
add
mov
adc
cld
nop
nop
jae
dec
add
bound
roll
lret
cs
add
clc
repnz
nop
nop
jae
add
cmp
and
cmp
ret
push
push
mov
xchg
ret
popf
add
ljmp
dec
and
repz
clc
repnz
nop
nop
jae
add
ficoms
jmp
call
nop
jmp
add
add
mov
cvtps2pd
repnz
nop
nop
jae
add
mov
mov
sub
add
pop
imul
repnz
nop
nop
jae
cwtl
add
cmp
add
add
pop
xor
clc
repnz
nop
nop
jae
pop
xor
add
sub
jmp
add
cmpsl
add
add
add
roll
dec
pushf
lods
add
add
jae
add
add
leave
nop
jmp
mov
add
jo
inc
add
xorl
ficoms
add
cld
nop
nop
jae
cltd
add
fidivrs
add
add
clc
in
add
clc
repnz
nop
nop
jae
add
add
jns
add
add
add
mov
leave
nop
jmp
add
fisubrl
add
sub
xor
lods
push
mov
xchg
ret
add
fcmovu
movsb
fiadds
add
add
pop
pop
adc
nop
nop
jae
cmp
add
mov
add
cmpb
lods
push
mov
xchg
ret
mov
fiadds
pop
in
jge
cmp
rorb
nop
jae
andl
repz
movsb
xchg
cwtl
add
add
std
call
nop
jmp
mov
sub
inc
inc
mov
dec
push
mov
xchg
ret
add
add
add
ss
ret
aas
push
clc
repnz
nop
nop
jae
add
cmp
and
push
shr
nop
push
mov
leave
nop
jmp
add
enter
mov
je
nop
push
mov
leave
nop
jmp
dec
add
add
add
addr16
clc
repnz
nop
nop
jae
jbe
add
add
pop
add
add
add
adc
sbb
push
clc
repnz
nop
nop
jae
enter
popf
cmp
and
push
nop
push
mov
leave
nop
jmp
in
lret
add
add
pop
shl
add
push
mov
xchg
ret
in
movsb
add
jnp
pop
popf
add
lret
mov
ffreep
add
push
inc
add
add
enter
cmp
or
push
mov
leave
nop
jmp
sub
pop
add
xor
push
add
addr16
clc
repnz
nop
nop
jae
lret
add
cmp
hlt
jns
clc
repnz
nop
nop
jae
add
movsb
add
jnp
dec
cmpsl
add
add
push
clc
repnz
nop
nop
jae
pop
jns
add
fisubrs
add
mov
clc
repnz
nop
nop
jae
roll
xor
in
and
mov
pop
mov
clc
repnz
nop
nop
jae
sub
add
add
adc
movsb
clc
repnz
nop
nop
jae
add
mov
dec
cltd
push
nop
push
mov
leave
nop
jmp
cmp
add
add
cld
clc
repnz
nop
nop
jae
add
cltd
add
rolb
add
add
add
jns
and
clc
repnz
nop
nop
jae
add
add
add
add
cmp
clc
repnz
nop
nop
jae
add
cwtl
cmpl
fld1
clc
repnz
nop
nop
jae
add
loop
lret
add
add
mov
add
add
pop
xor
push
mov
xchg
ret
add
cmp
pushf
cwtl
add
lea
clc
repnz
nop
nop
jae
add
add
cltd
add
push
add
nop
push
mov
leave
nop
jmp
add
add
sub
sti
mov
popa
clc
repnz
nop
nop
jae
add
ss
add
add
cmp
sub
add
add
sub
nop
push
mov
leave
nop
jmp
add
cmpsl
dec
cmp
mov
push
mov
xchg
ret
jns
add
rolb
and
add
roll
loop
orl
ret
pop
inc
add
mov
addl
movsl
jmp
add
faddp
add
add
cmp
add
add
push
or
inc
add
cmp
and
cltd
add
add
push
mov
xchg
ret
bound
add
sti
add
and
ljmp
mov
xchg
ret
add
add
addl
push
add
fidivrs
mov
add
repnz
nop
nop
jae
mov
cmp
pop
sub
clc
repnz
nop
nop
jae
add
add
cltd
add
add
add
fistpl
push
mov
xchg
ret
dec
add
add
xchg
dec
cmpsl
lods
push
mov
xchg
ret
add
cmp
lret
add
inc
in
repnz
nop
nop
jae
lods
bound
pop
xor
xchg
add
clc
repnz
nop
nop
jae
sub
add
in
push
clc
repnz
nop
nop
jae
fiaddl
add
movb
popf
cmpsl
in
add
mov
clc
repnz
nop
nop
jae
sub
add
add
in
icebp
add
clc
repnz
nop
nop
jae
add
mov
mov
add
add
mov
fld1
push
mov
xchg
ret
add
add
add
sti
jg
dec
cmp
repnz
nop
nop
jae
jns
push
add
repz
add
add
mov
xchg
ret
add
add
add
add
cwtl
add
or
xor
jle
add
add
jge
add
jge
out
xchg
mov
mov
lret
mov
clc
repnz
nop
nop
jae
fisubrl
movb
rorl
add
pop
nop
push
mov
leave
nop
jmp
xor
add
add
sub
add
mov
leave
nop
jmp
sub
xchg
add
mov
add
pusha
mov
xchg
jle
push
lcall
mov
leave
nop
jmp
subl
and
ficomps
add
push
mov
xchg
ret
add
add
add
add
push
mov
xchg
ret
sub
xor
add
and
mov
nop
push
mov
leave
nop
jmp
and
rorl
cmp
add
add
je
clc
repnz
nop
nop
jae
pop
add
mov
pop
pop
inc
nop
push
mov
leave
nop
jmp
fisubs
mov
imul
repnz
nop
nop
jae
add
push
mov
nop
push
mov
leave
nop
jmp
fiadds
add
add
add
repz
push
push
mov
xchg
ret
mov
fiadds
add
and
rcrb
and
nop
push
mov
leave
nop
jmp
pushf
popf
lret
sti
add
sti
aad
nop
push
mov
leave
nop
jmp
add
add
add
xor
add
ret
mov
push
mov
xchg
ret
sub
add
and
add
xor
push
clc
repnz
nop
nop
jae
add
add
cmpl
add
and
in
dec
add
add
fwait
subl
clc
repnz
nop
nop
jae
ljmp
sbbl
stos
leave
push
mov
mov
push
jnp
test
hlt
sub
add
xor
call
inc
imul
cmp
ret
and
add
add
add
jnp
sub
out
sub
clc
repnz
nop
nop
jae
mov
mov
imul
mov
add
add
shrl
outsb
movsl
movl
div
nop
push
mov
leave
nop
jmp
add
movsb
add
ficoml
call
clc
repnz
nop
nop
jae
xor
add
add
add
outsl
dec
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
xor
jbe
add
ss
cmp
test
add
add
jbe
cmpsl
add
repnz
nop
nop
jae
add
add
popf
mov
nop
push
mov
leave
nop
jmp
add
lret
add
add
cmpsl
sub
add
add
repnz
nop
nop
jae
bound
fisubrs
popf
jge
mov
mov
sub
nop
jmp
and
cmpsl
popf
xor
add
in
dec
cmp
repnz
nop
nop
jae
enter
enter
fiadds
sbb
repnz
nop
nop
jae
mov
mov
add
add
add
clc
repnz
nop
nop
jae
add
xchg
add
add
dec
xchg
jns
shr
clc
repnz
nop
nop
jae
fiadds
jge
popf
xor
cmp
dec
and
clc
repnz
nop
nop
jae
cmpsl
pushf
cltd
add
enter
clc
repnz
nop
nop
jae
jns
add
add
add
add
inc
pusha
mov
add
clc
repnz
nop
nop
jae
add
loop
sub
pop
jnp
sarb
mov
xchg
ret
ljmp
add
add
lods
sub
repnz
nop
nop
jae
add
adc
add
mov
add
jge
jne
clc
repnz
nop
nop
jae
add
add
loop
add
add
add
repnz
nop
nop
jae
jbe
add
popf
add
test
cld
nop
nop
jae
mov
add
pushf
add
jge
add
test
mov
clc
repnz
nop
nop
jae
cmp
loop
add
add
fiadds
sbb
add
repnz
nop
nop
jae
add
add
jge
popf
es
je
clc
repnz
nop
nop
jae
movsb
add
mov
mov
mov
clc
repnz
nop
nop
jae
add
cmp
fiadds
xor
repnz
nop
nop
jae
roll
add
add
loope
test
incl
sub
add
cwtl
jge
add
xchg
add
arpl
repnz
nop
nop
jae
add
jns
add
add
xor
repnz
nop
nop
jae
add
movb
fsubp
call
push
mov
xchg
ret
mov
add
cwtl
enter
out
xor
push
mov
xchg
ret
add
sub
add
add
mov
repnz
clc
repnz
nop
nop
jae
add
jbe
cltd
jbe
mov
fistpl
clc
repnz
nop
nop
jae
jnp
cmp
jae
and
rcl
add
clc
repnz
nop
nop
jae
jge
add
fcmovu
jbe
jne
clc
repnz
nop
nop
jae
popf
fiadds
dec
lret
push
mov
clc
repnz
nop
nop
jae
add
cmp
popf
addl
push
nop
push
mov
leave
nop
jmp
add
lods
mov
add
jns
push
push
mov
xchg
ret
jbe
add
and
xor
add
mov
add
and
ds
rcll
add
add
add
pushf
enter
in
xchg
or
push
clc
repnz
nop
nop
jae
add
push
sub
add
add
push
push
mov
xchg
ret
fiaddl
add
popf
add
and
add
add
adc
repnz
nop
nop
jae
cmpsl
add
add
add
repnz
push
loopne
repnz
nop
nop
jae
xchg
add
add
cltd
add
cmpsl
jae
pop
cmpl
repnz
nop
nop
jae
cmp
sti
add
and
repnz
nop
nop
jae
add
add
add
hlt
clc
repnz
nop
nop
jae
add
jae
call
clc
repnz
nop
nop
jae
push
repz
rolb
add
push
mov
xchg
ret
cwtl
roll
loop
add
enter
cld
sbb
xchg
and
repnz
nop
nop
jae
ljmp
add
fisubrs
add
cld
nop
nop
jae
mov
mov
sub
cmp
nop
push
mov
leave
nop
jmp
addl
pop
lret
add
xchg
add
popa
clc
repnz
nop
nop
jae
xchg
jnp
xchg
cmpsl
add
xchg
add
jge
mov
clc
repnz
nop
nop
jae
lret
add
repz
shrl
add
cld
nop
nop
jae
roll
popf
repnz
nop
jae
add
sub
loop
xor
sar
repnz
nop
nop
jae
jbe
push
add
add
scas
pop
nop
push
mov
leave
nop
jmp
add
add
cmp
cwtl
adc
nop
nop
jae
bound
mov
in
cmp
or
push
mov
add
cltd
dec
add
add
enter
jecxz
outsb
aad
bound
add
clc
repnz
nop
nop
jae
pop
add
add
roll
add
pusha
nop
push
mov
leave
nop
jmp
pop
xchg
jnp
add
cmp
cltd
or
repnz
nop
nop
jae
lret
add
add
mov
push
mov
xchg
ret
mov
cmpsl
add
add
add
xchg
shr
clc
repnz
nop
nop
jae
add
add
mov
pop
clc
repnz
nop
nop
jae
fiaddl
push
add
add
add
in
push
nop
push
mov
leave
nop
jmp
movb
loop
ficomps
add
mov
sbb
clc
repnz
nop
nop
jae
cwtl
add
and
add
add
ss
rcl
incl
cmpsl
mov
roll
sub
add
add
in
add
es
cmpsl
stos
clc
repnz
nop
nop
jae
popf
ss
jae
xchg
add
push
mov
xchg
ret
and
sub
jbe
push
jns
mov
repnz
nop
nop
jae
mov
add
add
in
add
nop
push
mov
leave
nop
jmp
add
xchg
rolb
fiadds
in
roll
dec
jne
clc
repnz
nop
nop
jae
ljmp
aas
push
nop
push
mov
leave
nop
jmp
add
add
lret
add
call
clc
repnz
nop
nop
jae
fidivrs
movb
add
pop
jmp
add
add
xor
xor
add
push
pop
add
sub
add
add
call
clc
repnz
nop
nop
jae
add
add
mov
push
xor
nop
push
mov
leave
nop
jmp
add
cltd
fisttpl
cld
nop
nop
jae
add
add
add
rcl
add
adc
ret
clc
repnz
nop
nop
jae
rclb
addl
popf
sub
sbb
addr16
add
add
add
mov
and
jp
add
nop
push
mov
leave
nop
jmp
mov
jge
pop
xchg
loop
cmp
lea
repnz
nop
nop
jae
add
rolb
add
and
mov
cld
nop
nop
jae
fcmovbe
add
mov
sbb
cld
nop
nop
jae
add
add
add
add
jecxz
clc
repnz
nop
nop
jae
add
sbbl
add
pop
mov
repnz
nop
nop
jae
add
add
cmp
add
bound
push
mov
xchg
ret
mov
repz
add
add
jbe
fidivrs
mov
loope
stc
nop
add
mov
add
add
add
mov
mov
nop
nop
jae
jge
rcl
push
add
jbe
scas
leave
dec
nop
push
mov
leave
nop
jmp
sti
cmpsl
add
add
add
lods
sub
lods
mov
clc
repnz
nop
nop
jae
add
cmp
xor
decb
xor
repnz
nop
nop
jae
loop
es
pushf
movsb
cmp
in
leave
nop
jmp
add
ljmp
add
sti
test
add
add
popa
add
clc
repnz
nop
nop
jae
add
add
jae
pop
clc
repnz
nop
nop
jae
add
add
mov
inc
push
mov
xchg
ret
xchg
add
pushf
add
addl
add
call
nop
jmp
popf
loop
add
add
push
mov
xchg
ret
add
add
mov
pop
stos
pop
out
mov
inc
add
and
movl
add
dec
pop
add
dec
add
pop
fucomi
mov
call
nop
jmp
push
fiadds
add
add
add
cli
popa
pop
clc
repnz
nop
nop
jae
add
mov
pushf
add
sub
add
add
pop
push
mov
xchg
ret
add
cmpsl
mov
lods
add
push
mov
xchg
ret
mov
and
and
add
test
icebp
clc
repnz
nop
nop
jae
and
add
fld
add
add
push
add
roll
ljmp
fwait
clc
repnz
nop
nop
jae
xchg
ljmp
popf
add
repnz
nop
nop
jae
add
mov
add
sarb
dec
dec
nop
push
mov
leave
nop
jmp
add
movsb
add
dec
add
pop
jmp
and
movsb
cmpsl
loop
add
pop
add
fiadds
sub
add
inc
in
push
mov
xchg
ret
jnp
lret
and
add
jns
mov
clc
repnz
nop
nop
jae
movsb
cmp
add
add
xchg
mov
clc
repnz
nop
nop
jae
fiadds
add
bound
jnp
aad
rclb
test
xchg
ret
dec
xchg
add
add
and
test
call
nop
jmp
add
add
in
add
clc
repnz
nop
nop
jae
add
xor
popf
ljmp
xor
clc
repnz
nop
nop
jae
loop
and
mov
add
jns
outsl
xorl
clc
repnz
nop
nop
jae
sub
jnp
sti
pop
test
push
clc
repnz
nop
nop
jae
lret
add
jns
jae
add
popf
clc
push
or
adc
add
add
cmp
add
inc
add
clc
repnz
nop
nop
jae
mov
cmp
sub
jge
loop
push
mov
xchg
ret
add
push
lods
cmp
ret
fbstp
sar
repnz
nop
nop
jae
add
sub
bound
lds
mov
xchg
ret
enter
mov
and
fidivrs
mov
nop
push
mov
leave
nop
jmp
jae
add
pop
and
add
jne
nop
push
mov
leave
nop
jmp
and
sti
cmpsl
cmp
test
in
clc
repnz
nop
nop
jae
popf
sub
sub
mov
add
repnz
nop
nop
jae
fidivrl
addl
add
add
and
repnz
nop
nop
jae
and
cmp
add
xor
add
ret
arpl
enter
xchg
ret
xor
cltd
add
mov
add
add
add
add
jl
nop
push
mov
leave
nop
jmp
and
add
cmp
pop
sbb
imul
in
leave
nop
jmp
add
add
sti
sub
xor
clc
repnz
nop
nop
jae
roll
pop
in
add
jne
pop
clc
repnz
nop
nop
jae
cmp
add
sub
pushf
mov
cmp
add
repnz
nop
nop
jae
add
sti
add
add
movzwl
clc
repnz
nop
nop
jae
sub
push
sub
dec
stos
clc
repnz
nop
nop
jae
add
ljmp
movsb
cmp
lock
add
repnz
nop
nop
jae
mov
add
add
clc
repnz
nop
nop
jae
add
sub
xchg
add
and
add
push
mov
xchg
ret
mov
and
roll
mov
add
jnp
mov
nop
push
mov
leave
nop
jmp
loop
sub
add
add
cmp
nop
push
mov
leave
nop
jmp
repz
add
add
add
push
push
mov
xchg
ret
add
add
add
mov
mov
clc
repnz
nop
nop
jae
add
add
mov
add
mov
clc
repnz
nop
nop
jae
movsb
add
push
sti
and
add
add
xchg
push
clc
repnz
nop
nop
jae
push
mov
fiadds
lods
xorl
leave
nop
jmp
lret
cmp
xor
pop
ljmp
add
repnz
nop
nop
jae
add
and
add
jle
jne
clc
repnz
nop
nop
jae
add
jns
sti
cmp
lahf
mov
clc
repnz
nop
nop
jae
add
add
in
sbb
test
add
clc
repnz
nop
nop
jae
add
and
test
repnz
nop
nop
jae
sub
add
ficomps
push
mov
leave
nop
jmp
xchg
jge
jnp
cmp
add
pushf
cmp
clc
repnz
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
movsb
mov
jae
repz
add
mov
push
mov
leave
nop
jmp
sarb
add
pop
mov
add
push
push
mov
xchg
ret
rcrb
cwtl
fiadds
rorl
pop
mov
mov
clc
repnz
nop
nop
jae
add
and
add
sbb
adc
jne
nop
push
mov
leave
nop
jmp
add
add
mov
xchg
inc
add
lret
add
add
add
out
pop
push
mov
xchg
ret
cmp
add
add
enter
add
cmp
int3
mov
nop
nop
jae
and
add
add
loop
ficoms
dec
mov
push
clc
repnz
nop
nop
jae
cmp
fiadds
jae
add
add
lods
je
add
nop
push
mov
leave
nop
jmp
and
add
add
roll
add
in
leave
nop
jmp
add
add
cmp
xchg
in
shr
clc
repnz
nop
nop
jae
mov
add
jns
mov
repnz
nop
nop
jae
jge
movsb
add
add
xor
jnp
add
xchg
mov
add
mov
push
xor
clc
repnz
nop
nop
jae
mov
repz
add
lock
clc
repnz
nop
nop
jae
add
bound
add
aad
mov
sub
mov
or
mov
inc
add
aaa
int
in
stos
clc
repnz
nop
nop
jae
add
pushf
lods
add
enter
mov
add
mov
jne
clc
repnz
nop
nop
jae
add
push
add
je
clc
repnz
nop
nop
jae
fisubs
add
mov
xchg
and
testl
xor
jmp
add
add
fdivrl
mov
clc
repnz
nop
nop
jae
cmp
add
add
sub
pop
fwait
push
mov
xchg
ret
add
add
sub
popf
jo
pop
clc
repnz
nop
nop
jae
roll
push
jns
mov
clc
repnz
nop
nop
jae
add
popf
add
add
add
mov
xchg
ret
add
add
mov
bound
add
in
cli
nop
push
mov
leave
nop
jmp
xchg
add
xor
add
std
fistpl
push
mov
xchg
ret
popf
add
jbe
add
cltd
cmp
mov
xchg
ret
add
jns
dec
add
add
jne
clc
repnz
nop
nop
jae
add
lret
mov
sub
add
add
or
mov
adc
test
add
mov
add
add
xchg
adc
add
fsts
repnz
nop
nop
jae
add
add
add
add
fdivl
test
fld1
push
mov
xchg
ret
xor
add
add
and
je
clc
repnz
nop
nop
jae
add
add
je
clc
repnz
nop
nop
jae
add
add
cmp
add
repz
add
bound
add
push
jbe
cmp
or
add
add
mov
xchg
ret
add
add
mov
add
rcll
je
add
clc
repnz
nop
nop
jae
cmp
ss
andl
sub
push
mov
xchg
ret
popf
ss
add
add
add
lret
ljmp
nop
nop
jae
xor
add
movsb
add
psubb
cld
nop
nop
jae
add
add
cmpl
in
push
mov
xchg
ret
add
add
add
add
loop
add
nop
nop
jae
fcmovu
add
sub
add
cld
nop
nop
jae
cmpsl
add
mov
add
pop
sbb
mov
in
jb
nop
push
mov
leave
nop
jmp
ss
lods
add
loop
pusha
mov
pushl
nop
push
mov
leave
nop
jmp
pushf
jns
pop
push
mov
xchg
ret
and
sub
repz
dec
add
bound
mov
repnz
nop
nop
jae
jge
add
lods
add
loop
in
xor
mov
nop
push
mov
leave
nop
jmp
add
add
xor
cmpsl
add
xchg
add
pop
clc
repnz
nop
nop
jae
lret
add
add
mov
cmp
cwtl
sub
add
add
jne
nop
push
mov
leave
nop
jmp
add
dec
add
repnz
nop
nop
jae
add
add
loop
sbbl
in
add
xchg
and
fcoms
add
jp
add
sub
add
add
add
add
iret
lock
rcll
call
add
jb
mov
cmp
orb
push
mov
add
add
ja
loope
sub
imul
inc
call
inc
xor
gs
add
movsb
sar
dec
rcrb
or
add
add
xchg
cmp
xor
cmp
stos
mov
scas
xor
out
jge
inc
mov
mov
gs
xchg
pop
and
inc
cmp
add
add
repnz
dec
add
add
cld
sbb
aad
cmc
orl
loopne
xchg
insb
add
add
or
test
ljmp
inc
mov
dec
pop
icebp
test
or
xchg
pop
mov
add
out
xchg
mov
jae
add
jb
push
into
xchg
xorl
test
sub
add
add
dec
mov
loop
call
add
jl
cmp
int
mov
jns
cmp
add
jnp
mov
xor
push
outsb
xchg
xlat
adc
sbb
ret
daa
add
add
add
and
add
lock
cmp
add
add
jo
cmpsl
mov
ljmp
adc
shl
xchg
ret
jne
push
mov
inc
in
cs
mov
fdivrl
push
sahf
or
sub
out
ja
add
add
mov
fldenv
add
add
jb
popf
mov
mov
test
addr16
clc
clc
jecxz
dec
inc
jle
dec
jo
into
int3
inc
in
nop
xor
mov
xchg
push
and
pop
push
cmpsb
cltd
sub
add
add
inc
mov
adc
arpl
inc
or
add
add
iret
sub
in
push
repnz
in
xchg
dec
mov
mov
xchg
mov
xchg
push
sbb
test
decb
pop
and
sub
cmp
sbb
inc
loopne
inc
add
add
out
insb
mov
pop
daa
push
ljmp
add
add
cmp
enter
inc
add
add
cmp
or
rcl
mov
mov
test
pushf
cli
aam
int3
cbtw
fisttpl
xchg
pop
dec
into
movsl
pusha
mov
xchg
mov
std
mov
xchg
cwtl
rcrb
in
and
mov
or
adc
mov
mov
or
fisubl
pop
fldcw
add
add
xor
add
add
jle
mov
lock
daa
clc
jo
popf
test
add
add
shlb
push
xchg
adc
add
int3
mov
push
cmp
and
jo
inc
out
xchg
lea
mov
pop
pop
xor
cmp
xchg
shrb
mov
stos
ret
cmp
mov
add
out
subl
xor
cs
jb
fidivs
je
leave
lahf
cmc
mov
adc
cld
subl
rcr
lcall
add
shlb
imul
shll
hlt
or
jge
jle
insl
or
mov
inc
add
add
out
add
add
mov
or
or
imul
mov
mov
add
add
push
aam
pop
xor
data16
ret
add
add
mov
xchg
aas
push
inc
add
repz
sbb
cmp
push
sahf
jb
mov
in
repz
push
mov
mov
mov
repnz
adcb
lcall
das
sub
add
add
mov
arpl
fs
fcoms
imul
add
daa
loop
ja
cmp
push
xchg
clc
mov
mov
add
movl
pop
fsubrs
sub
lods
aas
mov
fisubs
fistl
dec
adc
add
repz
add
add
pop
pop
call
push
cmp
add
add
scas
sbb
jecxz
jg
mov
int3
stc
adc
icebp
and
add
add
addl
mov
dec
mov
stos
adc
adc
sub
cmp
add
add
add
sbb
add
add
push
jno
add
inc
cmp
push
xor
mov
fsubrl
leave
or
pop
scas
repnz
shlb
dec
add
add
rcll
add
add
and
sub
gs
xor
adc
push
aas
ss
outsl
clc
jns
push
movsb
xor
push
xchg
and
cmc
push
leave
mov
push
push
xor
push
xchg
pusha
mov
xor
mov
dec
into
push
test
xchg
fstpl
add
add
add
fistps
mov
int3
stos
iret
dec
aad
mov
test
subl
lods
cltd
pop
xchg
pop
dec
xor
das
jb
pop
pusha
mov
imul
pop
add
movsb
out
sub
in
add
jnp
xchg
insb
mov
cs
mov
dec
enter
rclb
add
add
and
add
add
pop
xlat
inc
cmc
in
push
or
roll
dec
add
add
jl
xchg
and
test
add
add
push
xchg
mov
sub
dec
jl
jmp
das
mov
jno
inc
mov
add
add
jne
stos
adcb
push
cltd
jle
cmp
add
add
add
dec
sbb
push
add
ljmp
push
fmuls
cmp
sbb
and
mov
lret
inc
push
push
adc
jae
xchg
js
js
dec
inc
jns
sub
jo
sbb
popa
adc
adc
or
pop
vpxor
mov
cmpsb
rcl
xor
push
rcll
sti
pop
popa
mov
dec
mov
aam
xor
or
inc
and
cmpb
into
push
sub
pop
out
adc
pusha
mov
cmp
scas
in
int
icebp
mov
cmp
cmc
inc
outsl
lods
sbb
div
mov
sub
add
add
leave
xchg
popa
mov
les
inc
add
add
popf
jbe
sbb
dec
sub
hlt
mov
testl
js
movsl
ja
inc
mov
loopne
mov
dec
mov
mov
adc
add
add
push
mov
call
inc
jg
adc
cmpsb
aaa
orl
sbb
popl
sahf
imul
pop
ja
xor
jno
test
dec
pop
mov
lret
mov
mov
cmpsl
jecxz
lods
jo
sbb
add
add
movb
je
inc
js,pn
leave
jno
mov
inc
mov
mov
pushf
imul
and
ljmp
pushf
and
lds
sbb
cmp
into
pop
add
add
add
mov
add
popf
inc
jecxz
mov
add
add
pop
xchg
inc
loop
mov
pop
rol
ret
cltd
xorb
mov
add
pop
fcmove
dec
ja
mov
leave
mov
leave
push
or
push
mov
or
fsubs
repnz
out
lret
xlat
loopne
dec
orl
sbb
and
out
cmp
mov
xchg
xlat
push
sbb
fists
xchg
cltd
push
jns
xchg
sbb
pushf
dec
mov
add
add
aam
and
add
add
rcll
sbb
add
dec
add
add
xchg
mov
add
mov
rclb
mov
push
mov
cmp
add
add
add
insl
sbb
pop
pop
rorl
sbb
pop
outsb
pop
adc
lcall
sbb
add
add
lret
mov
mov
push
js
pop
dec
imul
sbbb
add
insb
add
add
dec
or
pushf
cmp
add
add
and
pop
sbb
lahf
jge
sub
fmuls
xor
push
loopne
out
cmp
fdivr
cmp
jbe
test
add
add
pop
inc
imul
mov
test
cmp
add
add
add
lods
mov
in
in
aam
rcrb
adcb
orb
mov
je
outsl
jmp
test
add
add
in
inc
stos
pushf
mov
add
jae
mov
mov
lret
into
in
aam
cmp
ds
mov
push
scas
sbb
add
repnz
fiadds
repz
pop
push
out
rorl
cmpsl
sbb
cmp
js
dec
aad
nop
inc
push
ss
fnstsw
cli
xlat
or
xchg
movsl
pop
pop
dec
mov
inc
xchg
gs
jnp
stos
jmp
mov
pop
xchg
scas
cwtl
xchg
popf
out
pop
test
add
std
andb
add
add
and
dec
test
xchg
mov
adc
aaa
sub
sbb
mov
inc
xor
in
xchg
xchg
call
mov
inc
mov
lea
lock
add
jecxz
sbb
lret
mov
daa
rcrb
das
cmp
add
ljmp
mov
sub
add
add
mov
mov
add
adc
cltd
subl
roll
adc
bound
mov
nop
or
add
add
sbb
loop
sub
mov
test
lock
xchg
jne
push
jecxz
in
ljmp
lahf
in
jno
inc
mov
sub
lods
shlb
ret
subl
ss
pop
pusha
add
add
shr
sahf
fisttps
jno
pop
mov
mov
xchg
mov
mov
mov
mov
inc
add
fisubrs
dec
add
scas
jne
mov
pop
push
imul
add
int3
mov
pusha
mov
xchg
idivl
push
cmp
ja
cld
push
std
mov
mov
push
cmpsb
fs
stc
xlat
mov
std
loop
adc
ret
jbe
and
add
add
add
cwtl
enter
push
rcl
push
xorb
scas
xor
shll
mov
mov
int3
push
lea
add
add
xor
lds
mov
js
inc
sub
test
insb
add
add
sub
mov
jecxz
cmp
add
add
inc
cs
mov
pushf
lret
fisubrs
jg
pushf
mov
out
aas
sub
ficomps
pusha
mov
push
ja
push
or
add
add
cmpsl
adcb
movsb
ret
push
iret
lahf
enter
mov
js
cwtl
adc
sbb
mov
fsubrs
test
jnp
test
rolb
add
add
add
add
xchg
aad
mov
inc
mov
inc
mov
inc
inc
ret
cli
faddl
add
add
jmp
mov
test
add
add
xor
inc
mov
push
jl
xor
xlat
js
add
add
and
inc
add
add
push
out
cmpl
xorl
imul
sbb
adc
test
add
add
add
or
add
add
push
jbe
cltd
push
adc
pop
imul
mov
test
fisttpll
mov
jecxz
int3
mov
pop
outsl
cmpsl
dec
aam
cmpb
add
add
ror
icebp
jae
mov
adc
mov
xchg
jmp
out
mov
or
pop
mov
insb
mov
add
add
shrl
add
add
add
add
ss
mov
in
jo
sub
add
add
mov
cmp
loopew
xor
jecxz
xor
lcall
add
jae
roll
mov
cmp
pop
std
sbb
hlt
sbb
js
rolb
mov
sub
ss
dec
fucomp
aaa
dec
fisttpl
push
dec
lret
push
fsubs
jae
mov
lret
lds
div
inc
inc
addb
popf
in
stc
lock
add
add
mov
cmpsb
cwtl
jp
pop
sbb
xchg
shr
mov
outsb
sub
add
add
inc
test
aas
lahf
insb
add
add
mov
add
add
dec
mov
test
loop
adc
jmp
add
add
add
mov
and
mov
xchg
in
sub
xor
xlat
sub
add
add
jns
xchg
pop
lret
or
add
add
push
in
mov
sbb
jmp
jp
lcall
cmp
add
add
mov
popa
aad
pop
popa
dec
mov
in
lcall
add
icebp
mov
mov
fisubs
sub
mov
add
add
sbb
and
std
scas
fsubrl
lret
push
lods
sub
jo
loop
test
aad
lods
js
lock
fsubrl
add
add
add
lds
add
add
jge
mov
les
pop
jno
fdivs
test
mov
sbb
xchg
fisubrs
add
add
mov
les
dec
add
push
push
inc
xchg
cmp
es
xor
addl
add
dec
ljmp
push
mov
and
add
add
and
add
add
mov
cmp
dec
sbb
mov
add
mov
idivl
mov
cmova
rorb
add
add
loop
rcrb
xor
shrl
sbb
mov
fdivl
lods
aaa
mov
mov
cmp
frstor
jmp
jg,pt
add
add
inc
add
add
mov
add
add
fistl
and
add
add
mov
scas
pop
imul
mov
add
push
adc
xor
mov
in
in
sub
add
add
push
push
outsl
or
dec
sbb
test
insb
add
add
mov
aad
cmpsb
add
add
add
mov
fsubr
loopne
in
cmpb
outsl
insl
inc
cmpsb
xor
add
add
push
bound
mov
add
add
add
and
ja
mov
add
pusha
mov
mov
mov
call
add
mov
fstl
ret
mov
and
dec
aad
mov
sbb
or
sahf
xchg
sub
movsl
jbe
sbb
xchg
pop
and
add
add
add
iret
pop
stos
push
jbe
pop
cmp
mov
xchg
std
or
fwait
in
cmc
mov
fistl
add
fbld
aas
jge
or
add
add
mov
sbb
inc
add
add
sti
pushf
sbb
mov
sti
mov
xor
stos
lds
cmp
test
xlat
out
cmc
xchg
stc
cmp
dec
stc
dec
or
add
add
jno
rolb
sahf
mov
sbb
nop
mov
add
xor
sarb
test
xchg
fldcw
mov
aam
push
subl
mov
xor
cmp
pop
jb
test
jp
jge
in
and
add
add
ljmp
add
add
popa
addb
cli
xlat
testb
add
out
adc
and
rcr
sub
add
add
dec
mov
outsb
rolb
add
add
add
mov
cwtl
je
popa
out
lret
mov
ss
mov
ja
sar
lcall
test
lods
aam
mov
repz
rcl
movsl
in
push
outsl
out
mov
jbe
mov
les
inc
in
lock
popa
les
xchg
lret
adc
daa
mov
scas
pop
insl
jae
push
test
test
movsl
int
stc
in
hlt
into
int
lahf
jns
jp
add
add
inc
setge
pop
xchg
dec
add
add
cmp
dec
mov
pop
and
les
xor
add
add
rcrl
sub
add
xor
adc
sub
std
inc
mov
subb
xlat
roll
add
add
inc
inc
shrl
in
test
sbb
push
shrb
push
dec
add
add
add
sbb
add
add
jne
jmp
adc
sub
add
add
push
or
out
in
call
add
add
mov
adcl
lods
inc
mov
cmp
rcrl
or
pop
push
jb
xchg
or
jl
push
roll
mov
add
add
xor
outsb
mov
fiaddl
mov
push
xor
ljmp
add
add
bound
sti
clc
adc
or
pop
and
ss
ret
hlt
cmc
fstps
mov
dec
insl
das
ss
mov
scas
popa
test
inc
cmpsb
pusha
mov
add
add
add
ja
call
xchg
and
outsb
jb
jb
aam
push
in
mov
mov
add
xor
xlat
pushf
inc
inc
gs
adc
repz
rcr
sbb
xchg
dec
fmuls
add
add
add
add
add
add
imul
adc
push
js
in
push
xchg
inc
add
add
xchg
mov
mov
add
add
loop
jo
enter
pop
xor
lea
add
hlt
in
popa
and
add
add
sbb
add
out
cwtl
mov
inc
pop
fs
lahf
push
sbb
mov
add
add
add
add
add
pushf
cmp
xchg
gs
add
loopne
inc
loope
push
pop
dec
sub
add
add
jmp
jne
pop
pop
mov
lds
fnstenv
dec
add
add
mov
sub
add
add
add
add
rolb
jecxz
jmp
mov
dec
ret
ret
out
cltd
push
mov
and
lods
sbb
sbb
push
mov
mov
pop
jb
adc
aad
dec
cmc
inc
push
lods
inc
cmc
jbe
dec
scas
ret
bound
in
add
add
icebp
mov
cs
aam
pop
movsl
repnz
cmc
movsl
and
mov
inc
sarb
addr16
push
sbb
sar
inc
add
add
lret
jg
fildl
ja
outsb
int
call
jne
push
dec
mov
jne
push
mov
mov
out
jo
int
mov
and
add
add
and
add
add
sub
add
add
in
push
outsb
pop
cmp
pop
mov
stos
push
insb
mov
push
dec
cmp
mov
or
adc
pop
scas
sbb
hlt
shlb
xchg
inc
add
add
cld
adc
mov
dec
cmp
jbe
fdivl
adc
filds
sbb
arpl
adc
inc
mov
jp
xor
pop
pop
jbe
cli
and
mov
xchg
cltd
inc
jecxz
adc
sbb
inc
sub
add
add
sub
add
add
shlb
or
xchg
add
add
add
cli
cmp
add
add
add
mov
inc
data16
jbe
loop
xchg
inc
add
andl
mov
cmp
js
dec
dec
add
add
popf
sbb
cli
enter
xchg
lods
daa
shl
cmpsb
mov
jno
das
push
mov
cmc
inc
add
add
inc
add
add
cwtl
jg
cmp
mov
insb
mov
xchg
es
xchg
mov
mov
stos
das
push
cld
lahf
out
xchg
aam
push
testb
add
push
not
iret
pop
shlb
dec
mov
inc
sbb
int3
test
shrb
jnp
lret
mov
add
daa
sbb
outsl
sahf
lret
ret
sti
mov
mov
add
je
dec
mov
pop
and
add
add
int
sub
mov
lcall
mov
xor
outsl
test
inc
xor
mov
in
sub
mov
jmp
push
and
sub
sub
clc
jg
ret
outsb
push
ss
or
add
add
add
pop
shlb
insb
add
add
out
mov
or
jecxz
push
fs
push
dec
xchg
stos
das
dec
or
imul
notl
ret
push
das
add
fimull
xor
test
aam
or
lret
lods
dec
mov
imul
fwait
xchg
cmp
add
add
add
add
movzwl
or
mov
fldt
lock
mov
pop
sub
add
add
rcll
pusha
mov
ss
add
add
pop
jge
mov
cmp
jp
fdivr
jno
mov
xchg
in
xor
mov
mov
or
test
ljmp
out
stc
outsl
xor
rorl
push
mov
add
add
into
int
jnp
imul
sarb
or
add
add
ror
push
cwtl
push
add
xchg
xor
xor
mov
cmp
arpl
add
add
mov
jno
mov
aad
push
jbe
sbb
dec
add
add
jne
add
add
xchg
popf
sbb
add
add
movsl
adc
nop
fildl
lea
jb
rcrl
xor
in
jbe
mov
jl
mov
in
pop
push
imul
clc
xchg
add
fsubrs
add
loopne
int
aad
dec
adcb
xchg
xor
xchg
xchg
int
pop
lahf
add
add
add
das
or
add
outsb
nop
add
fdivr
fistpll
mov
subl
cmpsl
cs
popa
data16
filds
xor
add
add
pop
xor
inc
mov
inc
dec
loopne
fwait
in
adc
add
add
add
add
mov
push
rolb
add
js
int3
scas
repnz
in
aas
test
repz
pop
mov
pop
xchg
adc
dec
mov
xchg
jle
sbb
fs
pop
mov
xchg
nop
adc
cmp
inc
cwtl
hlt
ret
push
pop
adc
inc
fiadds
ljmp
dec
pop
out
test
mov
pop
lods
dec
mov
xor
mov
add
add
jecxz
adc
sarb
add
add
or
fsubl
add
movsb
adcb
daa
inc
dec
mov
dec
jnp
inc
sti
imul
pop
add
add
sahf
dec
adc
aad
mov
loop
out
mov
outsl
jno
add
add
push
push
or
outsl
xchg
bound
mov
addr16
in
out
jle
ret
jp
and
push
mov
testl
pop
inc
push
jo
mov
sahf
and
add
mov
xchg
xor
push
sub
mov
add
add
inc
add
add
cmc
jl
jg
repnz
jp
les
mov
insb
mov
loopne
inc
mov
int
mov
pop
push
xchg
add
add
cmpsb
dec
xor
fsubl
push
jecxz
inc
add
add
mov
add
sarl
sbb
stc
out
mov
mov
insl
sbbb
push
dec
arpl
add
scas
popl
das
add
pusha
add
add
pop
aad
xor
into
arpl
cmc
sbb
imulb
add
xlat
and
dec
jge
jmp
add
test
test
dec
cmp
add
add
adcb
pusha
add
add
adc
aad
sbb
xchg
pop
mov
add
add
rcl
aam
mov
aas
mov
add
xchg
decb
addl
push
test
lret
jns
push
mov
cmc
fimuls
add
add
arpl
or
add
add
inc
mov
ljmp
scas
jecxz
sbb
sub
add
add
adc
add
add
shrl
scas
sbb
or
add
add
pop
push
fldenv
dec
adc
add
mov
jae
lds
add
add
push
pop
adc
add
xor
inc
mov
stos
mov
and
add
add
outsl
inc
xor
add
add
sub
int
sahf
push
fstpt
in
pop
and
ret
push
sti
daa
insl
lret
aaa
adc
mov
add
add
mov
cltd
push
out
mov
add
add
dec
inc
in
jbe
xchg
jmp
push
push
shl
sbb
bound
into
shll
sub
add
cmc
adc
add
push
popf
xchg
mov
fisttpl
scas
push
sti
cmp
outsb
hlt
std
std
or
nop
pusha
mov
stc
leave
mov
lcall
add
jbe
mov
add
add
add
test
push
test
cmpsb
or
aam
lds
add
outsb
push
lds
insl
in
daa
std
data16
sub
dec
mov
mov
rcrl
mov
lret
dec
cmpb
jae
je
jns
rcrl
mov
mov
test
add
add
aas
sub
add
add
sarl
paddw
lea
push
push
fidivrl
mov
add
add
or
mov
add
cmpsl
daa
pop
dec
mov
andl
pusha
add
add
pop
adc
sar
pop
pop
jne
inc
mov
and
sar
ja
jp
sub
mov
insl
fimuls
add
add
push
arpl
cmp
xchg
loope
dec
leave
push
cmpsl
lret
movsl
dec
mov
cmc
push
or
js
xor
or
mov
cld
fbld
xchg
mov
mov
scas
sbb
add
add
xor
jle
sub
fstpt
pop
push
sub
add
add
pushf
cmp
cmpsl
cmp
sub
adc
cmp
pushf
push
fdivrl
int3
sbb
test
sbb
fisttps
loope
push
iret
lret
dec
shl
aad
jo
jg
or
test
pop
std
rcrl
std
rclb
sub
or
and
add
add
cli
mov
in
and
add
add
push
mov
movsb
push
xlat
mov
jb
pop
repz
xlat
scas
xlat
pop
sub
call
sbb
xchg
mov
jge
aas
mov
push
cmpsb
stos
xchg
mov
gs
mov
jne
sbb
add
in
aaa
sub
scas
cmp
in
sbb
rcrb
mov
sub
or
mov
pop
pop
xchg
dec
mov
aad
mov
cltd
ljmp
mov
lods
jo
stos
pop
push
les
ds
add
add
mov
sub
popa
xchg
lret
mov
and
pop
jb
loop
sbb
lods
lods
cmp
rclb
jp
mov
fucompp
mov
les
add
mov
jp
movsb
outsl
mov
movsb
push
xchg
in
push
or
add
add
adcb
mov
pop
or
add
add
jnp
fnstenv
iret
pop
pop
cmc
pop
add
push
outsl
cmp
sub
int3
jnp
cli
mov
jmp
fisttpl
add
add
loopne
popf
rcrl
add
or
add
add
mov
int
cld
adcl
add
add
ret
nop
rcl
mov
fisubrl
add
incl
add
add
pop
ja
fidivrs
inc
adcb
mov
outsl
add
popa
popf
mov
nop
xchg
inc
jnp
xchg
adc
xchg
jl
mov
add
add
fisttpll
dec
idivb
sbb
and
mov
out
jp
pop
int
stos
and
or
jle
outsb
clc
xor
push
push
rorb
jle
test
xchg
test
imul
sbb
mov
jmp
bound
addl
add
cmp
and
add
add
adc
xchg
inc
and
test
and
sahf
shlb
sub
inc
pop
add
ds
enter
mov
jb
mov
xchg
loop
mov
inc
xor
add
add
add
inc
sbb
repz
push
sub
add
mov
mov
fistpl
sub
add
add
mov
push
popf
leave
nop
jp
push
push
outsb
cmp
and
add
add
cmp
cmpsb
cwtl
inc
mov
add
jmp
add
add
add
push
mov
push
rcr
mov
test
push
adcb
lds
jae
jmp
mov
mov
sbb
sub
call
add
add
in
nop
popa
lcall
and
scas
and
add
add
push
mov
push
inc
mov
add
add
sbb
mov
sbb
insl
mulb
fidivrl
adc
inc
mov
xor
add
add
cltd
dec
cmp
inc
sub
out
loopne
cmc
adcl
fiaddl
mov
add
pushf
mov
dec
sub
inc
adc
andb
jg
inc
mov
xchg
pusha
add
add
ret
adc
add
add
add
add
xchg
inc
mov
lea
mov
ss
shr
sub
das
cltd
inc
pop
cmp
sub
add
add
in
jp
adc
sub
add
add
sar
xchg
ss
jnp
hlt
cld
in
xchg
enter
or
aad
fsub
sub
cmpsl
shlb
into
cs
xor
add
push
xor
lret
inc
jae
lods
adc
popf
pop
xchg
jle
call
add
mov
jp
mov
fstl
fisubl
add
int
adc
adc
add
add
add
shrl
aad
jbe
pop
mov
je
sbb
push
inc
ds
enter
fucom
repz
add
add
sbb
sbb
add
add
xor
iret
jne
adc
outsl
loop
xchg
lcall
jle
mov
sbb
mov
cwtl
pusha
mov
scas
inc
nop
mov
movsl
test
fidivl
push
hlt
shr
insl
andl
mov
sbb
sub
add
add
xchg
and
js
ret
std
jmp
je
lea
mov
sbb
sub
pop
js
mov
inc
inc
pop
mov
xchg
push
sub
adc
jbe
add
xorb
rorb
xchg
mov
mov
pushf
dec
lods
pop
push
dec
add
sbb
add
jge
lcall
mov
pop
test
add
add
popl
push
lret
add
add
fcmovu
pop
mov
inc
pop
dec
jae
add
add
xor
pop
mov
cltd
imul
pusha
add
add
xchg
rclb
push
inc
lods
inc
push
jg,pn
dec
sbb
mov
cmpsb
fmulp
adc
add
add
add
jno
or
add
add
lret
push
sub
xor
push
dec
cmp
movsl
stc
jae
xchg
adc
push
inc
pop
mov
sahf
dec
adc
sub
arpl
add
add
mov
add
rcrl
sub
add
add
add
or
mov
mov
add
or
add
add
xchg
push
jbe
dec
add
add
mov
bnd
imul
outsb
je
test
or
add
add
or
add
add
sub
add
add
add
add
fcomps
pushf
in
push
stos
hlt
sbb
inc
sub
add
add
sbb
push
jbe
mov
cli
mov
jb
loopne
adcb
lahf
xchg
jae
filds
xlat
es
mov
xor
insl
adc
iret
inc
mov
adc
cmp
icebp
cld
je
sub
push
jb
leave
add
push
addr16
nop
cmp
mov
std
stc
and
add
add
pop
push
and
push
mov
loop
outsl
inc
and
mov
push
lahf
cmpl
lea
imul
cwtl
cs
push
mov
nop
xchg
push
inc
pop
cs
cmp
add
inc
cmpsl
jl
loope
mov
add
add
sbb
add
jg
enter
add
add
pusha
add
add
in
test
mov
repnz
push
mov
add
add
ret
mov
cmc
and
add
stc
ss
pop
scas
pop
in
sub
mov
mov
mov
pop
loopne
test
inc
mov
stos
xchg
imul
int3
and
add
add
jmp
xor
push
jp
add
add
cmpsl
xchg
mov
adc
xorl
sub
adc
adc
jo
push
dec
iret
mov
xorl
mov
sbb
mov
pop
scas
jno
mov
add
sbb
inc
add
add
icebp
out
sbb
les
ja
or
mov
leave
dec
jmp
sub
and
mov
jle
sbb
outsb
in
jae
sti
ja
leave
and
push
mov
pop
or
sbb
jbe
mov
add
add
fwait
inc
mov
test
cmp
jae
push
xlat
xor
add
add
movsb
add
das
jmp
xchg
mov
pop
popa
fcmovnbe
lret
mov
inc
mov
leave
or
std
mov
insb
add
add
mov
xchg
ret
sahf
rcll
add
add
es
add
add
add
dec
xchg
xchg
add
add
add
shrb
cmp
add
ret
sbb
add
mov
xchg
lds
divps
jns
pusha
add
add
mov
add
mov
add
add
adc
mov
xchg
cmpsl
cmp
pop
lods
mov
push
lea
jecxz
rorl
jno
sbb
leave
sub
mov
ret
in
ficoml
test
pusha
add
add
rcrb
push
jecxz
jae
push
sub
stos
lods
inc
loop
out
sub
jns
mov
inc
subb
add
les
jne
scas
cmpsb
loope
cmp
add
add
lret
stc
out
scas
lcall
sarb
sub
in
jnp
int
xor
add
js
ret
lahf
outsl
sub
add
add
add
popa
jmp
or
add
add
je
cmc
lods
pushf
push
sub
add
add
jb
imul
addr16
add
add
shll
add
add
sahf
pop
cwtl
fwait
ss
add
loope
xor
mov
xor
push
push
data16
mov
out
lret
shll
in
mov
pop
push
fs
inc
nopl
add
les
adc
out
scas
xor
pop
mov
test
mov
xchg
push
int3
fsts
mov
add
add
add
xlat
push
mov
sbb
gs
hlt
aaa
insb
add
add
daa
ret
in
sahf
insl
test
jno
and
stos
jge
mov
add
sarl
cmpsb
loopne
dec
in
cmpsb
push
ja
mulb
cmp
adc
bound
ret
filds
test
lods
inc
add
add
pop
pop
int
mov
xor
adc
or
xchg
out
aam
mov
sbb
sbb
loop
cmp
add
sbb
add
add
cs
dec
int3
and
add
add
rorl
in
cltd
mull
mov
pop
sub
pop
mov
mov
pushf
fcompl
sahf
hlt
fsubrl
dec
data16
jmp
data16
aaa
pop
mov
or
jne
es
add
rorb
or
pop
push
inc
add
add
sbb
dec
jnp
mov
pop
inc
add
add
lock
jge
mov
pop
jg
push
inc
decb
dec
lds
flds
mov
fildl
sub
inc
add
add
cmp
ja
loope
cmp
mov
mov
xchg
push
or
add
pop
xchg
loope
push
dec
je
cmp
popf
xchg
dec
mov
add
add
add
sti
push
stos
mov
out
xchg
fisubrs
bound
add
fcmovnb
lret
icebp
and
lods
shrl
mov
loop
movb
push
mov
cmp
call
add
iret
jns
stos
clc
jmp
sbb
fisubrs
jns
jno
cld
dec
xor
cmp
adc
jo
ja
or
add
pop
call
or
pop
cwtl
int
adcb
inc
mov
xchg
inc
cwtl
jecxz
xor
dec
imul
lret
fsub
push
rcrb
bnd
pop
flds
jbe
ret
cltd
lcall
loopne
xchg
rcrl
sbb
sahf
ror
scas
sub
sbb
jp
mov
sti
jle
add
add
or
cmc
test
mov
mov
add
add
aad
pop
hlt
push
mov
add
dec
enter
add
add
pop
xchg
add
jnp
fwait
adc
stc
cmp
and
data16
shlb
add
add
shll
ror
push
jle
push
add
jge
bound
or
outsb
mov
push
push
adcb
mov
in
jo
sti
or
sub
inc
inc
mov
sub
ds
jns
mov
decb
test
cmp
mov
in
or
add
add
in
mov
ret
mov
add
add
ja
enter
popf
stos
pop
push
popa
and
add
add
mov
mov
je
std
stos
adc
outsl
pop
pop
jo
pop
pop
daa
xchg
cwtl
int
nop
push
pop
and
add
add
shl
adc
add
add
lret
or
add
add
shlb
xchg
and
xor
iret
sbb
xor
je
ss
test
adc
sub
add
add
mov
mov
pop
xchg
pop
lahf
sub
add
add
repnz
mov
mov
add
out
mov
add
sub
add
add
repnz
montmul
cmpsb
pop
inc
cmp
xchg
and
add
fdivp
sub
std
ds
pop
mov
dec
jl
lods
rcll
dec
add
pop
add
mov
in
shl
or
out
or
cmpsl
mov
dec
jnp
adc
shl
dec
sub
add
add
fnsave
add
add
adc
add
add
pop
xchg
cmp
cmp
xrelease
push
pop
movsl
pop
call
rcr
dec
cmp
mov
fcoms
add
mov
or
push
bound
mov
stc
jne
push
lahf
gs
mov
xchg
mov
nop
jae
nop
cmc
cli
xchg
lods
and
stos
ja
add
add
cmp
shrl
stos
cli
dec
fisttps
mov
inc
mov
aaa
leave
cmp
iret
jg
cmp
add
add
xchg
daa
cmp
xchg
test
stos
mov
and
or
add
add
sub
rorb
add
add
push
sbb
push
arpl
mov
inc
add
add
ja
pop
movzbl
inc
aaa
div
push
loopne
stc
push
int
push
repnz
daa
inc
mov
jg
cmpsb
inc
add
mov
insb
mov
mov
std
cmp
loope
data16
data16
mov
out
cmp
stos
jo
xor
ret
es
inc
mov
lcall
add
mov
and
inc
mov
enter
jecxz
xor
xabort
dec
mov
add
add
lret
insb
add
add
enter
fwait
add
out
dec
shl
inc
xchg
xchg
test
outsb
cwtl
fwait
lea
xor
add
add
aas
addr16
sbb
loop
push
outsb
int
adc
add
add
imul
jo
mov
mov
mov
in
cmpb
mov
lods
into
fnstsw
and
push
mov
add
pusha
add
add
das
mov
sbb
bound
add
add
pusha
mov
lock
out
lods
fcomp
jne
sti
int
add
outsb
jnp
nop
push
jg
mov
mov
sbb
dec
mov
cwtl
stos
mov
dec
dec
mov
xor
js
cmc
scas
sbb
int
sub
xlat
and
add
add
dec
out
lret
dec
sbb
aas
or
jge
sarl
add
mov
outsl
cmp
mov
loopne
fisubl
cmp
sbb
push
xchg
lock
add
arpl
xor
mov
add
add
test
lret
das
fldcw
ret
sti
fstpt
add
pop
jnp
jge
cli
sbb
sub
jmp
mov
fnsave
xchg
icebp
or
push
cmp
push
ret
fmull
mov
shll
mov
mov
mov
sbb
xor
inc
addr16
add
add
cmc
hlt
inc
add
add
sub
int3
dec
mov
add
subl
add
add
ret
sbb
ja
lods
sbb
mov
dec
add
add
cmp
add
add
out
clc
lret
adc
cmp
adc
adc
add
add
or
inc
add
add
into
jno
mov
out
imul
push
cld
iret
jo
outsb
gs
ds
nop
sbb
rorb
add
add
add
rorl
push
jne
push
cwtl
lds
add
add
or
add
adc
enter
movb
jl
lods
inc
sbb
xadd
inc
js
int3
mov
stos
imul
xchg
add
fimull
stc
mov
repz
jg
rcl
pop
out
jnp
dec
sbb
push
or
mov
push
int3
dec
cwtl
push
scas
dec
and
mov
mov
stc
adc
sbb
repz
xchg
and
add
add
sub
add
xor
xrelease
add
add
lret
pushf
pushf
fwait
cs
cmp
xor
outsl
jecxz
xchg
inc
mov
aam
xchg
mov
and
loopne
stc
and
iret
dec
add
add
je
mov
add
dec
roll
sub
out
add
add
fadd
arpl
xchg
sti
clc
jl
pop
mov
add
add
sub
iret
shl
pop
mov
xchg
mov
cs
jb
mov
repz
mov
xchg
insb
add
add
dec
mov
popa
jb
js
xchg
rorl
inc
pop
in
in
sub
add
add
in
sahf
ret
aam
or
adc
dec
sahf
repz
mov
mov
fld
push
sahf
rorb
and
and
mov
call
test
leave
lds
mov
popa
outsl
add
add
add
lahf
subb
add
jmp
pop
xchg
cwtl
push
pop
adc
shll
out
push
lock
xchg
push
push
test
or
cs
push
pushf
sti
nop
andl
hlt
sub
add
push
outsl
pop
sub
daa
mov
imul
jmp
cli
jbe
les
xchg
lahf
stos
scas
call
cmp
jnp
dec
jo
stc
cmp
add
add
add
add
inc
push
fcoml
xchg
ss
ret
add
add
aam
ds
jmp
xor
stos
mov
or
add
add
mov
mov
add
add
add
add
add
dec
adc
dec
sbb
stc
loop
ds
jmp
cmp
in
or
add
add
mov
mov
xlat
mov
dec
cmp
mov
and
mov
pushf
inc
out
xor
mov
cmpl
sub
scas
push
add
out
scas
clc
add
sbb
je
or
add
add
stos
jns
add
add
repnz
cmp
mov
add
add
imul
fidivs
fwait
outsb
das
xlat
adcl
mov
enter
add
and
dec
pop
add
add
add
push
xchg
add
add
and
add
add
add
add
pusha
add
add
pushf
stos
bound
js
cmc
dec
add
add
dec
inc
dec
mov
jbe
imul
inc
clc
inc
pop
jae
add
add
add
in
push
inc
fistpll
add
add
jg
jae
mov
lret
mov
dec
out
mov
jecxz
jne
push
loope
mov
mov
dec
mov
sub
lret
mov
mov
xor
mov
add
outsl
js
push
sahf
out
lea
data16
aaa
daa
push
or
add
dec
data16
pop
mov
lret
aam
pop
orb
xor
inc
add
add
or
fst
sbb
pop
popf
adc
stc
add
orb
mov
jnp
xchg
cmp
add
adc
push
xchg
leave
sub
jge
or
add
add
add
add
es
dec
cmp
and
add
add
add
add
add
add
rclb
sbb
add
fsubr
rcll
shrl
lahf
ficomps
push
pusha
mov
fmul
mov
ror
push
das
ja
mov
jno
fcoms
mov
data16
xor
mov
movsb
or
inc
xor
aas
mov
lea
jo
inc
orl
daa
add
cmc
ss
adc
pushf
push
sbb
insl
popa
popa
cmp
fldt
add
adc
push
clc
filds
call
aaa
inc
add
add
cld
ja
push
arpl
jge
jg
scas
aad
push
pop
jae
test
bound
mov
xor
movsb
std
punpckhwd
xchg
mov
pop
into
scas
xchg
cmp
adc
sbb
ss
repnz
call
lahf
push
out
test
push
push
dec
mov
add
add
js
mov
pop
or
cmc
add
add
add
xchg
dec
lahf
fisubrs
jg
fnstenv
add
les
and
xchg
mov
popa
xor
test
test
and
or
mov
cltd
inc
movsb
pushf
lods
fwait
subl
mov
arpl
add
or
repz
in
cmpl
int3
pop
loope
adc
fnsave
fstp
jmp
nop
sbb
push
rorb
mov
mov
testl
test
mov
xchg
test
inc
negb
int
outsb
test
jle
jb
mov
mov
sub
add
add
pop
sbb
lds
popa
sub
xor
adc
jmp
scas
xchg
pop
push
jno
movsl
jmp
sbb
xchg
fmuls
mov
mov
je
int
xor
xchg
mov
nop
mov
fwait
cmpl
add
out
push
addr16
ror
shr
dec
adc
out
daa
repz
sub
cmp
add
add
push
out
and
fimuls
popf
lds
add
add
or
jo
inc
mov
insl
cmp
and
lock
xchg
pop
test
jb
mov
mov
push
rcrb
add
add
and
xchg
mov
pusha
add
add
mov
dec
mov
inc
xchg
fmulp
aad
xchg
jg
shr
cmp
add
add
jbe
cmp
mov
jle
and
add
add
or
xor
inc
mov
jmp
lahf
sub
pop
lock
add
loop
fildl
and
add
add
das
fisubs
es
jae
aaa
imul
add
adc
push
dec
mov
xor
loopne
leave
xchg
or
push
adc
add
into
insl
pop
jae
enter
sbb
and
mov
xchg
stos
cmpsl
xchg
xor
je
stos
cmp
cmpsb
jg
add
push
sbb
insb
add
add
rcrb
fldenv
inc
xor
shrb
dec
and
pop
push
js
pop
cmp
mov
mov
fwait
add
add
add
add
add
mov
lcall
dec
add
add
push
js
push
or
add
add
repnz
add
adc
mov
and
cmp
add
add
icebp
xchg
or
add
add
add
js
int3
fnstcw
add
add
lods
jo
sub
add
add
decl
add
add
mov
pusha
add
add
sbb
popa
fimuls
pop
fwait
push
pop
clc
incb
in
push
fs
jp
mov
out
je
insb
add
add
and
add
add
add
arpl
and
add
add
add
push
and
push
jns
pushf
sub
xor
fs
clc
sbb
fneni(8087
insl
add
add
add
jae
add
add
adc
mov
xchg
push
cmp
cmp
fmull
mov
adc
imul
nop
cmp
adc
push
cmp
add
add
mov
pop
push
in
out
iret
jo
xor
pop
clc
stos
and
add
add
enter
xchg
xor
mov
dec
push
imul
xorl
or
add
add
pop
pusha
add
add
jo
bound
gs
data16
xchg
lea
adc
jecxz
jmp
add
add
lock
add
add
xlat
cwtl
repz
in
xchg
jo
jl
sub
cmpsl
jmp
stos
aam
dec
clc
cwtl
sub
jnp
add
add
aad
repnz
mov
xchg
int
cltd
rorl
jle
roll
lcall
andb
test
outsb
lods
pop
xchg
xchg
es
sbb
cmpsl
cwtl
sub
add
add
and
loope
add
add
or
mov
mov
mov
pushf
mov
out
cwtl
popf
xchg
out
or
or
add
add
arpl
jae
daa
xchg
pushf
cmp
popa
push
aas
ret
insb
mov
jp
arpl
popf
outsb
pushf
lahf
imul
jno
fwait
or
xchg
mov
sbb
sahf
divb
inc
mov
les
push
out
ret
jp
sarb
lret
add
add
add
mov
push
stc
outsb
ljmp
xor
repz
pop
pushl
movl
jl
inc
xchg
mov
and
add
fmuls
mov
push
lds
or
sarb
add
js
xchg
cmp
dec
mov
insb
mov
xlat
lock
push
adc
sahf
sbb
sbb
call
add
mov
sbb
pop
and
and
inc
in
dec
xor
push
jns
mov
pop
lcall
fwait
push
stc
jbe
inc
xorl
add
add
mov
scas
or
std
add
cs
xor
add
add
push
fbld
add
push
xchg
icebp
adcb
add
mov
push
xchg
mov
add
add
add
add
inc
daa
stc
scas
inc
loopne
pop
xchg
loope
push
sub
cmp
lods
xor
mov
les
add
add
stos
jmp
add
xlat
cmp
adc
add
add
add
popa
div
jns
add
add
add
mov
xchg
add
add
and
add
add
and
add
add
inc
add
mov
or
add
add
cli
fidivl
add
scas
xchg
das
mov
push
clc
mov
cwtl
out
popa
pop
fcom
dec
inc
add
add
out
lds
mov
add
call
add
cmovp
movsb
and
add
add
out
leave
inc
mov
push
xchg
push
or
loopne
jne
fst
and
push
push
or
mov
pusha
add
add
out
pop
adc
xchg
add
add
test
call
pop
sbb
pop
adc
arpl
add
pop
enter
pop
sub
xchg
add
add
or
sbb
add
add
cwtl
insb
mov
into
jb
in
lods
lea
stc
popf
rcl
iret
clc
in
mov
add
add
inc
shll
add
pop
xor
mov
add
add
fdivs
xchg
cltd
xchg
bound
push
fwait
cmp
push
ds
inc
push
roll
xchg
scas
or
out
pop
sbb
sub
imul
add
test
adc
mov
fcoms
jno
ret
sbb
mov
mov
fsubrl
fsubrs
fimull
int
jge
xchg
mov
jne
ja
adc
add
add
jge
jo
lcall
mov
mov
add
add
mov
add
push
push
xchg
jl
adc
in
xchg
sahf
mov
test
pop
repnz
add
add
mov
iret
idivl
add
cwtl
cld
scas
outsl
dec
iret
xchg
add
add
in
cltd
push
adc
xchg
imul
lods
mov
and
int3
push
pop
leave
es
pop
repnz
add
add
add
add
in
adc
addb
pop
pop
flds
add
ret
push
loope
sub
push
lods
enter
ficomps
jmp
cmp
mov
adc
and
pop
push
roll
add
and
add
add
sub
sbb
dec
add
add
xchg
inc
add
add
jmp
sti
test
cmp
sub
add
add
mov
lea
mov
mul
adc
pusha
mov
add
nop
mov
dec
mov
imul
subl
add
mov
shrb
add
in
test
lcall
inc
xor
dec
xchg
std
xlat
in
lret
fistpl
mov
mov
xchg
sub
cld
outsb
add
add
mov
and
cmp
inc
jge
add
add
sbb
mov
cmc
jmp
add
push
xor
lret
push
cmp
mov
add
add
cmp
jp
xchg
sub
in
xchg
add
dec
mov
out
jmp
sub
paddsw
lret
mov
bound
lods
sub
dec
pop
punpckhbw
xor
mov
mov
sbb
pop
jl,pn
jno
push
xchg
aad
add
add
repnz
test
stc
maskmovq
testl
add
pushf
pop
jl
into
and
sub
fdivl
xchg
jno
je
and
add
add
dec
xchg
rcrb
jo
idiv
popl
jp
mov
add
add
sub
neg
dec
push
out
jp
pop
cmp
xor
fnsave
sti
dec
cmp
out
adc
fadds
or
mov
lahf
dec
mov
movsb
mov
je
pop
or
repz
mov
outsb
dec
fbstp
scas
fdivrl
lods
subb
int
bound
mov
or
push
sbb
adc
inc
jne
gs
mov
mov
mov
push
js
repz
fnstcw
stos
in
ja
cwtl
push
daa
xchg
mov
mov
mov
roll
sti
lds
int3
imul
leave
mov
mov
mov
add
fstps
inc
cmp
popa
sub
test
sbb
lock
add
add
cld
fmul
lret
mov
outsb
mov
mov
imul
add
daa
les
mov
mov
push
mov
aam
mov
jne
fwait
movsl
inc
adc
xor
add
mov
sub
popf
aaa
mov
mov
notb
jns
insl
sub
lret
mov
add
add
repz
add
add
pop
mov
imul
cmp
rorb
or
add
add
sub
add
add
adc
inc
dec
add
add
notb
add
mov
jno
xchg
inc
dec
add
add
mov
pop
inc
add
add
push
out
jno
mov
mov
adc
js
stos
dec
lcall
mov
hlt
lret
faddl
in
enter
rclb
mov
mov
mov
xor
mov
xchg
and
add
add
test
add
add
mov
int3
jne
push
mov
jp
aad
aaa
jecxz
mov
dec
lods
cmp
stos
fldt
add
add
push
ljmp
mov
int
cwtl
faddp
leave
cmp
mov
add
add
add
mov
jmp
fucomi
inc
xchg
add
add
add
mov
or
shll
mov
push
push
ret
push
mov
add
arpl
adc
ret
pusha
add
add
jnp
loop
ret
stc
xor
mov
mov
cmp
jp
and
and
mov
push
adc
movsl
pop
or
sbb
dec
jl
mov
adc
jae
insl
das
or
sbb
insl
sahf
lahf
test
shlb
movsl
sbb
mov
and
in
btsl
add
add
cmpsb
iret
ffreep
clc
mov
cltd
pushf
or
jnp
daa
cli
push
inc
add
add
sub
add
add
xor
inc
popf
adc
xchg
mov
push
xchg
add
xor
sbb
rolb
add
lock
ljmp
add
and
int
and
add
or
mov
xchg
add
or
rcrb
add
and
fnstenv
mov
into
std
in
cmp
add
jo
testb
xchg
mov
mov
cmp
scas
xchg
ds
or
xor
jns
add
add
jl
jnp
pop
int3
dec
aam
dec
or
cmc
aaa
mov
and
std
jae
and
insl
adc
cwtl
mov
push
fistl
mov
imull
adc
dec
roll
add
add
mov
cmpsb
lret
mov
add
add
insb
mov
mov
push
scas
lods
mov
push
clc
mov
mov
pop
imul
out
lcall
mov
xchg
mov
mov
orb
add
add
arpl
cli
sahf
adc
enter
adc
jp
and
xor
cmp
add
push
in
add
add
addr16
cwtl
push
add
add
add
cltd
dec
std
pop
push
enter
push
inc
cmp
repnz
xor
sti
mov
or
mov
lcall
add
stos
jp
mov
cs
sbb
add
rcrl
data16
add
add
add
insl
inc
imull
ss
notb
or
lock
cmp
mov
div
pushf
pop
rcr
lock
jno
clc
mov
ss
adc
mov
jne
jl
jno
lcall
pop
pop
mov
lcall
pop
adc
cmp
test
int
sub
add
add
sbb
dec
inc
mov
outsl
mov
cmp
add
add
sbb
aas
inc
aad
arpl
roll
add
dec
adc
cmpsl
mov
adcb
lea
add
add
cltd
xor
mov
cmp
es
or
add
add
inc
fiadds
adcb
mov
xchg
and
add
add
xchg
jle
insb
mov
lret
add
add
dec
popf
in
xor
mov
loopne
ljmp
add
fnstcw
mov
mov
fcomi
aas
movsl
fucomp
aaa
outsb
mov
aad
pop
xchg
adc
outsl
cmp
mov
adc
push
into
add
add
add
sbbb
arpl
lcall
popf
or
add
add
sahf
xor
mov
aas
cmpsb
dec
add
add
mov
sbb
add
shrb
addr16
xchg
xor
mov
cmp
fucomi
mov
xor
shlb
cmc
xor
lret
mov
clc
sbb
pusha
add
add
pop
pushf
dec
xor
push
cld
mov
sub
fmulp
add
std
cmpsl
adc
dec
add
add
sahf
mov
mov
add
add
cld
cmpsl
gs
mov
cmp
lods
mov
aad
mov
insb
add
add
ret
xchg
xor
mov
idivb
sbb
in
pop
loope
into
mov
cwtl
enter
add
pop
sub
add
add
mov
cwtl
push
sub
add
add
mov
dec
push
dec
add
add
roll
push
stos
pop
fwait
scas
sti
out
push
fucomip
lret
fs
int3
inc
les
xor
rcrl
ja
push
outsb
lock
cs
sahf
ret
or
add
add
rclb
dec
ret
or
add
add
mov
add
dec
lret
jno
xor
add
adc
lock
mov
dec
mov
sbb
push
dec
xchg
out
sbb
adc
push
xchg
xchg
sub
outsb
add
or
mov
add
cmp
xor
pop
mov
and
aaa
mov
inc
sub
add
add
mov
mov
fcomps
add
mov
add
add
or
jl
leave
fildll
add
add
jno
cmpsl
repz
mov
jge
xchg
inc
add
add
xchg
jl
inc
cltd
dec
or
cli
test
add
and
mov
popl
mov
ffree
lcall
cmp
int3
popl
pushf
adc
jmp
add
add
mov
mov
jno
popl
add
xchg
idivb
pop
mov
pop
add
or
scas
push
mov
add
ja
mov
dec
mov
push
mov
dec
or
cmpsl
iret
test
in
clc
popf
or
jnp
lock
xlat
movsb
les
outsb
add
add
add
sub
adc
lock
mov
test
add
shl
icebp
aaa
and
add
add
sti
inc
add
dec
dec
mov
add
or
stos
sub
jno
mov
stos
js
inc
add
add
jge
fwait
or
in
adc
cmp
shl
popf
das
adc
aaa
ljmp
js
je
out
sbb
mov
rcr
bound
mov
sbb
out
sbb
xor
add
test
iret
mov
fsubr
movsl
sub
or
cwtl
mov
cmp
repnz
sbb
add
add
pop
rcll
xchg
add
sub
push
pop
test
sbb
cmc
push
cmp
int3
xor
mov
sub
add
add
adc
or
push
int3
jne
scas
or
fildl
xchg
mov
jge
out
in
xchg
leave
inc
mov
rep
xlat
push
inc
jbe
add
add
pop
aaa
enter
lds
ss
es
sti
ja
sbb
add
add
sub
dec
cmp
imul
jg
mov
dec
add
add
sbb
push
xorb
push
mov
les
mov
jno
mov
rol
fbstp
out
mov
insl
mov
xchg
into
popf
iret
cmp
imul
jg
test
leave
adc
add
mov
add
add
inc
cwtl
mov
dec
add
add
jbe
outsb
rclb
mov
vmulsd
inc
mov
scas
jo
popf
scas
es
mov
pop
inc
pop
daa
popa
stos
lahf
sarl
pop
jge
mov
mov
and
imul
cwtl
mov
std
mov
fnstcw
popf
lea
int
pusha
mov
add
push
stos
jp
pop
mov
push
addr16
lahf
stos
test
add
add
and
insl
mov
nop
fsubl
ss
stc
or
sbb
mov
pop
mov
and
add
add
add
sbb
iret
stc
pop
sub
sub
in
mov
lret
push
rorb
add
pop
out
rcrl
add
add
fstl
jecxz
push
cmpsb
rcll
icebp
addr16
jl
xlat
sbb
push
dec
xchg
jne
pop
mov
test
insb
add
add
rorb
int
out
jp
enter
add
and
add
add
add
add
fldenv
push
push
outsb
push
mov
sub
mov
sub
mov
and
cmp
shr
test
add
add
lods
push
popa
hlt
mov
sti
inc
jae
adc
mov
inc
add
add
ss
mov
insl
fs
inc
add
add
cld
mov
push
mov
mov
je
pushl
orl
or
sbb
mov
data16
add
add
adc
pushf
movsl
and
inc
les
clc
mov
push
jp
das
ret
or
mov
dec
push
and
add
add
adc
sahf
in
and
and
add
add
inc
mov
in
jbe
rorl
add
popf
clc
pop
ficomps
pop
mov
add
add
jmp
cmp
push
pop
adc
jmp
icebp
call
mov
sub
sub
stos
xchg
in
jge
iret
mov
dec
fucomip
or
enter
push
insl
clc
sahf
ret
and
popa
subb
mov
dec
add
add
inc
or
sub
add
add
pop
push
mov
add
fstpt
push
lods
mov
xchg
inc
ss
or
cmpsl
mov
inc
sbb
xchg
sub
push
movnti
cmp
sub
add
dec
cmpsb
add
int
mov
inc
lea
and
incl
add
inc
add
add
inc
adc
push
rorb
add
add
imul
sahf
je
arpl
pusha
mov
sbb
jne
int3
lahf
repz
leave
push
sub
pop
popf
sbb
fimull
add
xchg
test
test
or
mov
addr16
mov
push
and
in
in
xor
adc
xchg
add
add
add
add
add
xchg
xchg
push
xorl
test
and
add
add
mov
ja
mov
inc
mov
stos
add
add
add
imul
add
add
add
adc
dec
cwtl
out
inc
mov
lret
fs
adc
daa
adc
and
push
adc
lods
mov
jmp
xor
push
sub
movsl
xor
dec
jne
pop
cs
bnd
xchg
inc
add
add
out
ds
dec
loope
push
and
jecxz
mov
je
sub
out
mov
outsb
scas
rcll
movsl
ss
sti
ljmp
das
int3
shrb
add
popf
pop
mov
dec
add
add
sub
add
add
xor
imul
and
add
add
stos
sub
add
add
insl
jl
or
mov
adc
cmpsb
xor
mov
mov
xchg
inc
add
add
popa
hlt
jns
cmp
mov
cmp
add
add
rol
insl
iret
ss
or
add
add
xor
mov
xor
cltd
fsubrl
add
add
add
inc
dec
mov
out
jb
in
push
rcrb
repz
pop
xchg
add
xchg
outsl
inc
scas
enter
lds
add
add
add
aad
dec
cld
pop
pop
ja
jg
ret
mov
dec
sbb
lret
and
push
sub
cwtl
stos
sbb
xchg
xchg
lret
enter
fimuls
add
fcmovnu
push
jns
jg
mov
add
add
mov
add
mov
add
cwtl
insb
add
add
cld
pushf
push
les
movsb
xor
pop
popa
dec
xchg
jl
bound
sub
add
add
popa
adc
add
add
lea
mov
push
sub
dec
fwait
or
jns
and
dec
mov
or
ds
mov
sbb
mov
cld
shlb
test
inc
loope
add
mov
mov
add
xchg
or
cmp
jns
mov
lret
test
xor
sbb
add
add
dec
cmp
xor
cmp
popf
sbb
cwtl
lea
push
fcmovu
fistpll
lds
gs
add
add
pop
fucomp
adc
add
add
inc
mov
pop
testl
je
std
ret
cmp
fbld
je
sbb
popa
xor
mov
lds
add
add
push
push
inc
jp
push
adc
rcrb
push
adc
or
and
add
add
movsb
into
sbb
int
push
dec
mov
stc
out
jbe
cmpsb
adc
xchg
cmp
add
jb
cs
dec
dec
add
add
inc
push
aas
jmp
add
add
dec
pop
push
cmp
jp
dec
cld
or
add
jg
jb
sbb
sarb
dec
mov
xchg
sbb
bsf
mov
popa
fs
cwtl
xchg
cmp
add
add
add
and
mov
add
add
or
xchg
xchg
or
sbb
hlt
dec
dec
outsl
call
nop
pushf
stos
jle
imul
in
inc
icebp
loopne
add
add
cmp
out
cmpsb
in
xchg
aas
pop
test
iret
cmp
add
add
add
lret
dec
mov
inc
jecxz
sti
dec
out
xlat
iret
cmp
sbb
lods
movsb
mov
pop
je
stc
mov
mov
fwait
sub
cs
jge
and
scas
enter
jmp
add
push
lret
sarl
mov
cmp
add
add
push
xor
out
stos
hlt
sbb
xlat
dec
add
add
cmc
jp
push
push
outsb
aaa
cmc
push
lahf
es
push
adc
mov
add
add
fcmovne
xchg
mov
add
lcall
jnp
adc
add
cmpsb
xlat
sbb
and
add
add
loope
test
lods
cmp
mov
add
sbb
sub
add
add
jg
sub
sbb
jmp
lcall
out
scas
adc
jp
pop
jmp
pop
sub
mov
cli
ret
dec
shrb
add
add
in
add
add
lret
dec
mov
or
cltd
push
iret
jge
pop
nop
add
add
add
lea
mov
add
add
push
int
xchg
rolb
sahf
nop
dec
jmp
inc
loope
pop
sahf
xchg
fisttps
add
fbstp
jbe
push
outsl
mov
jno
mov
add
add
dec
mov
mov
mov
daa
adc
add
add
in
and
add
add
mov
add
pop
mov
jl
js
dec
or
stos
mov
and
add
add
or
add
add
repnz
clc
pop
repz
mov
xor
xchg
mov
sbb
ret
mov
mov
lock
add
add
loope
rorb
add
add
add
or
outsl
fsubrs
popl
adc
inc
mov
and
add
add
add
popf
mov
or
sub
add
add
out
pop
test
xor
add
and
add
add
loopne
outsb
push
xor
add
add
sub
add
add
pop
inc
adcl
inc
and
sar
jno
je
add
add
mov
jns
pop
daa
fmull
mov
xor
mov
add
xchg
fwait
insl
negb
add
add
rcll
jmp
repnz
add
add
sbb
push
fnstsw
jnp
call
add
add
shl
addr16
push
pop
adc
pop
ljmp
push
fdivl
sub
add
add
mov
add
add
add
add
insb
mov
out
mov
xchg
stos
lcall
scas
inc
jno
fidivrs
jg,pt
lods
pop
dec
in
cmpsb
je
or
stc
ja
mov
xchg
pop
out
gs
mov
mov
mov
loopne
mov
fisubs
in
ret
dec
mov
push
pop
mov
popa
jmp
sahf
push
and
xlat
fisttpl
add
add
shrl
add
jge
xor
ja
sub
add
add
dec
mov
dec
add
sub
xchg
mov
mov
mov
add
pop
mov
and
rclb
es
mov
leave
push
adc
pop
fcomp
adc
nop
ds
int
mov
insl
dec
xchg
jnp
fs
outsl
cmc
mov
mov
add
xchg
inc
add
add
sbb
adc
add
add
and
push
xchg
in
push
jecxz
sbbl
stc
add
push
jbe
pop
jae
cld
adc
cld
mov
sub
add
add
add
add
add
add
icebp
mov
add
add
addl
add
add
cmp
add
pop
jae
loop
inc
mov
movsb
mov
or
mov
dec
lret
mov
mov
and
cwtl
dec
cmp
iret
add
add
mov
add
add
adcl
xlat
xor
mov
xor
add
test
fwait
add
ror
mov
aaa
adc
ret
andl
add
stos
lahf
inc
add
add
xor
add
add
je
mov
aad
mov
mov
xor
fs
jge
mov
inc
mov
jno
lret
out
sbb
add
add
mov
stos
mov
add
lahf
xor
mov
sbb
lret
sbb
and
add
add
xorb
cmp
lcall
mov
jno
repz
xchg
add
dec
adc
out
lods
in
int
push
fiaddl
stc
dec
mov
mov
pop
out
add
add
add
sbbl
das
push
push
aaa
jbe
cmp
sbb
cwtl
call
out
xchg
xchg
push
push
fwait
mov
sbb
fadd
sub
out
sbb
insb
add
add
lods
add
lock
add
add
add
cmc
vpavgw
arpl
xor
ficoml
repnz
mov
adc
mov
scas
inc
mov
or
aam
jecxz
rcll
mov
and
push
fsubl
sbb
call
xchg
mov
adc
lcall
xchg
add
add
add
add
mov
adc
jecxz
push
mov
push
push
mov
mov
lock
lret
xor
lahf
out
mov
dec
mov
dec
mov
cs
jne
dec
cmp
clc
fucomip
imul
pushf
shlb
js
int
je
aam
mov
inc
push
mov
push
or
add
add
rcr
add
add
mov
int3
adcb
xchg
sbb
mulb
add
add
aaa
xchg
dec
mov
sbb
jbe
data16
add
push
filds
rcrl
sbb
jno
sbb
js
loopne
imul
mov
decl
cmp
cmp
add
sub
and
add
add
adc
rorb
popa
adc
insb
add
add
mov
shrl
add
int3
mov
push
inc
cltd
and
dec
xchg
xor
and
add
add
sub
adc
add
add
lds
lods
jp
sarl
outsl
mov
imul
push
jl
mov
loop
xor
add
add
movsl
pop
jo
loope
dec
notb
mov
rolb
add
add
inc
add
add
outsl
ljmp
xchg
lret
sbb
test
add
add
pop
pop
addl
xor
scas
sub
outsl
loope
xor
inc
push
xchg
int
mov
pop
ljmp
mov
aaa
jecxz
adc
call
mov
add
stos
fs
pop
mov
lahf
mov
out
stc
mov
inc
add
add
add
push
jno
lcall
mov
inc
mov
imul
and
jbe
outsb
fcoms
dec
pop
sbb
adc
repnz
mov
push
aaa
push
cli
mov
and
add
add
sbb
push
push
rorl
adc
add
add
adc
dec
cmp
add
add
jns
mov
repz
ljmp
cmp
lcall
add
add
fisttpll
jno
push
inc
mov
out
cmp
pop
xchg
add
cmp
arpl
mov
sub
and
push
jg
clc
adc
xchg
in
xchg
mov
add
add
push
add
cmp
and
or
add
add
push
rorl
push
sbb
leave
test
dec
stos
ret
cmpsb
out
adc
add
add
mov
cwtl
pop
dec
or
dec
push
leave
cmp
sbb
mov
jmp
call
or
add
add
sbb
add
add
mov
add
jb
mov
fwait
test
add
add
xor
sbb
lret
shll
xchg
mov
cmp
aaa
shll
popf
insb
add
add
call
inc
jne
add
add
mov
add
add
add
inc
pop
js
scas
scas
cltd
push
lcall
icebp
xor
add
cli
sbb
mov
xchg
add
cmp
add
cmp
ret
sub
add
add
sbb
mov
cmp
dec
mov
add
add
add
mov
add
lods
mov
out
xchg
mov
sbb
lods
rcll
push
push
out
pop
or
add
inc
sbb
jb
push
fidivl
pop
xor
add
clc
mov
adc
mov
pop
aam
cmp
jmp
push
rcrb
shlb
scas
inc
or
add
add
hlt
sub
or
cmp
repnz
rcll
add
add
add
add
add
sbb
mov
add
add
fadd
enter
sarl
subb
add
lods
pop
call
mov
add
add
pop
dec
movl
sbb
sub
aas
in
scas
fiadds
and
add
add
mov
out
movsb
xchg
cs
out
and
add
push
mov
mov
inc
add
add
xchg
jae
lret
mov
xlat
xchg
mov
sub
add
add
pop
lds
add
add
add
add
pop
push
out
pop
inc
arpl
add
add
dec
sub
add
add
xchg
je
clc
call
jno
out
lock
push
nop
out
mov
cmp
add
lret
or
push
cmp
add
cmp
xchg
es
jge
push
sbb
sub
or
or
push
cmc
cmpsb
cwtl
jne
nopl
ljmp
mov
jmp
notb
add
jo
mov
jge
mov
add
add
and
or
fnstcw
movsb
clc
stc
int3
outsb
adc
mov
cltd
mov
scas
and
add
add
xchg
pop
inc
inc
test
cmpsl
or
sub
add
add
sub
test
mov
mov
xor
loope
pop
ja
push
or
cmp
sti
push
add
subl
in
or
or
call
xorb
idivb
add
add
xchg
dec
add
add
fimull
negl
nop
sub
push
mov
pop
cmp
pop
mov
add
add
sahf
fcoml
sahf
jno
mov
mov
inc
cmp
ss
xor
pop
test
add
add
add
mov
inc
cmp
sub
add
inc
add
add
add
xor
push
cmp
int
adc
push
pop
out
outsl
nop
mov
insl
loop
imul
movsl
sub
add
add
cmpsb
xlat
ss
xchg
inc
xor
nop
aad
sbb
in
and
add
add
stos
jg
mov
push
mov
jg
subl
add
pop
dec
insl
sahf
mov
add
xchg
lock
pop
add
dec
or
add
add
shll
push
in
inc
add
add
or
mov
lock
lea
jl
call
jns
mov
mov
inc
push
ret
aam
lret
pop
push
test
shr
jae
add
add
add
lret
addl
add
push
enter
fildl
pusha
mov
pop
fcompl
xor
gs
push
leave
dec
mov
mov
mov
push
jmp
leave
int
fcompl
cli
rorl
add
mov
and
add
adc
iret
cmp
fmul
xchg
push
aad
cmp
sahf
rcll
sub
and
and
lret
sbb
add
adc
add
add
inc
dec
ljmp
add
add
adc
add
ret
sti
addr16
add
add
xor
add
ja
mov
xlat
push
cmpsb
mov
inc
mov
mov
lods
lret
and
cmpsl
loope
cs
mov
cmp
into
jmp
sub
add
add
or
push
aaa
pop
pop
push
jecxz
inc
incl
add
repnz
mov
inc
cmp
mov
mov
ret
cmp
stos
enter
and
add
add
adc
mov
add
add
add
add
xlat
xchg
imul
sub
pop
mov
sbb
out
mov
cmc
cs
mov
ret
inc
mov
mov
adc
cmpsl
push
fistps
ror
adc
enter
mov
ds
xchg
daa
repz
push
mov
repz
add
add
add
fsubrl
in
sub
lcall
add
icebp
je
mov
sbb
xchg
add
mov
in
adc
stos
ret
xchg
fistpll
dec
add
add
push
hlt
push
mov
fcmove
xchg
xor
sbb
add
add
mov
fimuls
add
inc
mov
pop
sbb
iret
mov
mov
in
mov
cmpsl
inc
push
cmp
push
sub
fidivrl
sbb
sub
mov
test
add
or
add
add
jle
test
std
and
mov
addr16
cmp
das
and
add
add
cmp
cld
les
lcall
cmpsb
push
and
sbb
jae
pushf
sbb
xchg
mov
enter
jge
mov
pop
fistpll
adc
jns
mov
add
add
add
daa
jne
inc
mov
loopne
inc
push
fimuls
jle
jnp
add
add
add
mov
lds
rcrl
leave
fs
pop
lcall
xchg
xchg
mov
mov
jo
cmp
les
xchg
leave
push
clc
cld
cmc
imul
adc
mov
insb
mov
mov
pop
sarl
fistpl
mov
std
lods
stc
repz
daa
or
stc
add
and
inc
add
add
insb
mov
jno
dec
loope
bound
add
or
adc
gs
jo
iret
daa
shrl
mov
jmp
add
clc
jnp
popf
pop
mov
add
fcmovbe
jmp
sbb
outsl
mov
insl
pop
pop
lock
jb
outsb
dec
mov
mov
jae
xchg
stos
sub
add
add
stos
out
bound
add
and
mov
leave
dec
arpl
mov
cmpsl
or
pusha
add
add
addr16
dec
or
sahf
and
xchg
jl
pop
dec
sub
add
add
lods
jmp
bound
mov
add
push
jp
push
sbbb
mov
add
add
xorl
mov
dec
hlt
pop
xor
jae
cmp
dec
sbb
dec
mov
cltd
push
out
add
add
add
mov
or
arpl
aad
add
add
shll
jb
jno
into
push
dec
insl
fdivrp
pop
addr16
jle
aam
out
pop
pop
and
pop
decb
nop
adc
add
rcr
xchg
mov
sbb
mov
add
push
v4fmaddps
shr
mov
add
incl
add
je
imul
mov
add
add
sbb
cmp
popf
mov
fstpt
ja
add
add
push
push
mov
mov
xor
dec
cld
mov
cs
xor
mov
xchg
mov
lea
push
dec
mov
mov
lods
lret
or
mov
clc
pop
les
mov
gs
bound
inc
add
add
adc
pop
sub
xorb
insb
mov
out
add
add
cmp
mov
inc
ss
add
sbb
jne
outsl
sbb
add
add
sbb
add
add
call
jecxz
xchg
test
or
sub
loop
ljmp
push
lea
push
divb
mov
in
mov
out
jmp
ds
insb
add
add
out
arpl
pop
inc
repnz
mov
rdtsc
fidivs
dec
add
add
loope
add
add
out
sahf
shrb
sarl
test
add
add
test
xchg
pop
arpl
mov
scas
pop
int
jbe
divl
push
fcompp
out
xchg
mov
pop
push
xchg
push
andps
push
xchg
test
xor
mov
add
add
in
xchg
and
inc
lcall
add
fildl
cmc
pop
cmpl
mov
lods
push
lds
add
add
enter
xchg
pop
adc
test
push
das
mov
mov
ljmp
xchg
in
stos
push
cmpsb
cmp
stos
mov
xor
cltd
inc
mov
mov
dec
add
add
ljmp
pop
addb
add
add
mov
inc
push
push
hlt
repz
add
add
push
sub
add
add
cmpsb
and
add
add
test
add
add
sub
mov
add
test
add
add
sbb
jb
ljmp
ret
scas
inc
add
add
daa
fsubr
imul
xor
add
rorl
rcrl
aam
ds
mov
lea
lods
mov
sbb
jle
lcall
scas
cmpsl
add
pop
dec
sbb
push
jp
mov
jmp
add
add
add
incb
mov
add
add
inc
add
add
test
inc
out
sub
add
add
add
add
aas
inc
out
inc
orb
mov
dec
cmc
pop
jmp
pop
test
add
add
add
mov
scas
mov
add
mov
xlat
mul
loope
mov
mov
add
add
push
scas
inc
clc
cld
dec
daa
rcr
mov
leave
aad
add
add
arpl
cli
sti
test
mov
imul
fistpl
cmp
inc
adc
pop
fdivr
adc
dec
xor
enter
es
repnz
jp
add
add
dec
mov
xor
add
add
pop
xor
add
add
idivb
cmp
push
push
test
add
add
outsb
or
add
add
lods
daa
stos
aaa
fisubs
add
mov
jg
mov
add
cmp
dec
or
add
add
xor
std
xchg
pusha
mov
insb
add
add
xor
and
dec
mov
xchg
inc
mov
mov
adc
add
add
jb
popa
imul
fdivl
lret
in
add
dec
add
add
sub
sub
mov
clc
cld
loope
adc
mov
cltd
adc
insb
add
add
sbb
jp
pop
and
inc
cs
out
fnsave
neg
imul
mov
gs
sbb
pop
sbb
or
ljmp
pop
xchg
cmp
scas
push
mov
and
lret
add
add
and
test
lds
scas
addr16
mov
sub
add
add
add
add
mov
add
add
or
jnp
sbb
test
ret
dec
stos
int
and
add
add
xor
in
rorl
add
push
outsl
cmp
add
add
add
lret
jge
pop
imul
add
lods
adc
dec
cmp
fildll
push
cmpsb
loopne
fstl
mov
push
cld
push
in
mov
or
add
add
lods
dec
dec
add
add
and
add
add
shrl
xchg
rcrl
xchg
xor
rorl
mov
adc
xchg
mov
add
repz
shr
mov
add
add
xor
or
mov
cs
mov
into
sub
lods
fstps
bound
cld
rolb
and
xor
jne
in
aam
loope
dec
mov
sahf
mov
add
add
in
lods
xchg
lcall
scas
call
mov
stos
gs
jno
daa
and
pop
loop
mov
or
lods
arpl
loope
sti
fistpll
add
adcl
add
in
pop
lea
aad
push
mulb
mov
mov
nop
gs
mov
push
mov
push
rcrl
push
clc
mov
jmp
xchg
repnz
mov
or
scas
xor
aaa
or
add
add
and
add
inc
add
add
test
js
push
mov
imul
inc
inc
mov
mov
add
add
add
inc
mov
push
das
int
add
add
add
mov
add
add
jne
shl
out
repnz
mov
andl
push
lcall
xchg
cmp
int
mov
mov
add
stc
movsl
and
fldcw
sub
mov
call
mov
add
add
shrl
out
sbb
mov
leave
push
mov
jbe
std
fnstcw
repz
daa
pusha
mov
cmp
jne
and
sub
arpl
or
push
lods
lods
loopne
imul
add
movsb
jo
mov
or
push
bound
add
add
and
pcmpgtw
dec
insb
mov
loopne
mov
jmp
push
adc
jecxz
mov
add
add
mov
adc
add
add
xchg
fwait
je
sub
push
inc
pop
add
add
pop
jae
adc
mov
and
xor
fisttpll
add
add
pop
lea
mov
das
cwtl
test
rclb
add
add
inc
out
aaa
push
add
add
jecxz
cmc
jecxz
jb
and
ljmp
pushf
dec
add
add
mov
add
int3
cli
mov
xor
jp
test
repnz
mov
pop
jne
add
add
add
and
cwtl
mov
mov
mov
ret
sub
jecxz
shr
xlat
inc
into
nop
inc
je
arpl
sub
add
add
lods
inc
bound
clc
out
mov
xlat
jg
mov
jno
dec
and
clc
mov
jne
xor
xor
pushf
inc
pop
inc
add
add
popf
dec
xor
test
rorl
add
rcl
imul
push
lock
shr
inc
ljmp
jp
in
movsl
clc
add
add
add
dec
add
add
adc
mov
in
xor
adc
ret
test
cmpsl
xor
js
mov
sti
insl
inc
fisubl
and
pop
icebp
cmc
dec
mov
negb
insl
xor
das
push
imul
add
add
cmp
aaa
shrb
fucom
fistpl
pop
dec
mov
xchg
adc
or
xor
mov
push
push
mov
dec
add
add
out
push
das
insl
outsl
xchg
aam
movsb
push
and
add
add
push
stos
or
inc
mov
data16
inc
mov
jp
inc
clc
jae
push
push
fisubrs
adc
mov
push
dec
mov
inc
sbb
cwtl
fwait
push
lret
xchg
and
movsb
enter
adc
enter
inc
sti
or
vmovshdup
testl
cs
adc
push
imul
xor
push
adc
push
xchg
test
mov
fcmovnbe
out
js
xchg
cmc
jge
jnp
jmp
sahf
cmpsl
fcomps
add
add
sub
sbbb
rorl
loop
out
sub
add
add
mov
dec
mov
sub
les
sti
push
mov
add
das
fbld
bound
or
add
lret
call
xor
add
sub
xchg
push
xchg
test
imul
add
add
js
rcrl
mov
das
add
inc
or
add
add
mov
arpl
inc
je
cwtl
and
inc
push
xchg
sbb
mov
cmp
jae
jl
out
data16
lock
push
xor
add
add
add
jg
pop
xchg
icebp
and
add
pop
push
ffree
xlat
inc
add
add
add
filds
mov
mov
test
add
inc
repz
stc
je
xor
mov
or
add
add
push
sbb
adc
add
add
rclb
pushf
xor
sbb
sub
nop
std
adc
jns
cli
sbb
cmpsb
pop
lods
lret
jo
push
dec
push
add
add
add
xchg
in
inc
out
mov
loop
in
enter
add
or
addr16
lods
dec
fsubr
rolb
add
pop
sbb
stos
push
push
bound
in
outsl
pop
add
add
add
scas
mov
mov
adc
aaa
mov
mov
js
mov
push
loopne
mov
mov
add
add
add
and
inc
add
add
insb
mov
inc
mull
outsb
jbe
mov
adc
add
add
or
pop
dec
leave
jae
jl
outsl
shl
pop
inc
dec
jmp
xchg
test
fmulp
data16
mov
pushf
add
jecxz
stos
mov
aam
ss
cmp
cmp
subl
int
mov
sbb
add
add
xchg
ret
add
pop
mov
negl
cmp
push
and
cwtl
push
ret
jo
jnp
pop
sahf
or
bound
mov
jecxz
into
push
mov
icebp
insb
mov
mov
scas
adc
ret
frstor
add
add
xor
sbb
adc
cs
lret
dec
mov
add
mov
in
sbb
les
add
add
mov
xchg
xchg
cmp
push
scas
xchg
stos
into
mov
xchg
scas
pop
push
addr16
xchg
xchg
out
pop
hlt
push
cld
add
push
push
test
mov
mov
sbb
fucompp
addr16
lahf
cmp
stc
push
js
push
lods
pop
insb
mov
enter
andb
xor
add
add
inc
loopne
mov
inc
push
or
add
add
cmp
mov
ficompl
add
add
add
and
test
add
aad
xor
mov
mov
shlb
push
test
aam
cltd
add
scas
sbb
sbb
popf
dec
and
lahf
lods
lds
sarb
xchg
inc
mov
xchg
mov
sbb
out
repnz
add
add
xor
add
add
imul
dec
mov
lcall
addl
inc
hlt
cmpsb
mov
cmp
sub
std
fcoms
sbb
add
addl
pop
and
mov
sbb
dec
add
xchg
jle
adc
dec
mov
pop
dec
jl
mov
test
cltd
stc
and
add
add
cmp
loopne
or
push
sub
mov
sarl
iret
loope
sbb
sbb
add
add
add
add
add
insb
add
add
lods
mov
sub
inc
ja
jo
add
add
push
xchg
mov
xor
pop
rol
push
adc
loope
or
sbb
lea
add
add
mov
add
fwait
out
pop
push
loop
xor
mov
push
lock
mov
outsb
and
sub
popa
les
add
fadds
or
mov
xor
rcrb
push
loope
loope
xor
mov
mov
fs
rolb
xchg
or
shl
and
mov
mov
in
int
add
add
push
dec
add
add
daa
xchg
push
xchg
stos
xor
fidivs
orb
add
add
add
add
mov
lret
or
xchg
mov
dec
mov
mov
add
xchg
jb
cld
lock
add
add
cs
push
push
jmp
mov
mov
add
fld
jmp
fucomp
roll
add
add
add
mov
mov
mov
pop
sbb
push
cmp
xchg
in
add
add
jne
cltd
into
fwait
cmp
cmp
adc
mov
mov
push
and
loope
repz
sub
add
add
push
outsl
into
inc
mov
mov
dec
adc
outsl
fdiv
and
xchg
lea
out
movsb
in
mov
mov
shrl
fcmovne
lea
rcrb
mov
aas
and
repnz
xchg
lea
cwtl
es
push
movsb
mov
loopne
lods
adcb
mov
dec
outsb
in
iret
pop
scas
orl
add
add
mov
mov
add
add
std
inc
nop
xchg
jge
or
or
mov
jmp
xchg
xor
ljmp
adc
pop
repz
les
nop
movsb
or
ret
je
loope
stc
sbb
cld
scas
in
dec
mov
aas
adc
mov
cmp
mov
mov
fdivr
dec
mov
hlt
pop
inc
fdiv
adc
cmpsl
dec
add
add
push
xchg
daa
and
push
fildll
add
mov
pop
popa
push
xchg
xor
test
sub
push
or
add
add
xor
sbb
into
mov
stc
mov
icebp
daa
das
inc
mov
add
add
push
push
cmpsb
les
add
add
cmp
add
add
xchg
and
pop
mov
pop
mov
mov
loop
mov
call
mov
or
pop
xorb
add
mov
mov
and
xor
and
add
add
adc
add
add
add
add
add
add
add
pop
cltd
sub
add
add
gs
orl
push
xchg
cs
jl
out
xor
and
add
add
aas
icebp
add
mov
and
push
mov
outsb
mov
xchg
add
add
add
test
inc
and
jnp
xchg
fnstcw
jle
adc
mov
lods
in
in
xor
fnstcw
popf
fcompl
cmp
or
add
add
icebp
pop
mov
notb
push
mov
add
idivb
push
lds
pop
push
xchg
cld
andb
mov
xchg
adc
movsl
inc
xchg
sbb
int3
jp
jg
stos
xlat
bound
inc
cmpsl
rorl
mov
sub
lock
mov
pushf
lret
inc
stos
xchg
fnstcw
std
scas
jns
mov
sub
inc
cmp
das
xor
in
pop
inc
mov
icebp
push
add
dec
mov
in
mov
aad
mov
lods
imul
add
add
add
pusha
add
add
jg
push
cs
and
loopne
pop
lahf
cmpsb
idiv
adc
leave
add
test
and
std
mov
mov
xchg
outsl
in
loopne
insl
insl
xchg
jge
stos
and
mov
sub
sub
cmp
push
js
lahf
mov
mov
movsl
mov
add
add
leave
sbb
mov
cmp
out
scas
jns
mov
test
dec
in
arpl
add
add
mov
lock
fisttpll
jge
dec
sub
sbb
push
inc
add
add
dec
cmp
cltd
adc
stos
ja
cld
mov
or
scas
sub
scas
fadds
push
push
sarb
pop
dec
dec
aam
lret
xchg
add
add
push
lret
sub
add
adc
sti
lock
sti
sbb
imul
mov
data16
xchg
and
popa
and
mov
and
add
jns
loope
cmp
dec
dec
lds
adc
lea
mov
pop
stc
fadds
xor
sbb
mov
push
xlat
xchg
ret
adc
loope
lea
sahf
fmuls
imul
sub
ja
mov
mov
push
in
adc
scas
pop
scas
loope
hlt
or
pop
inc
push
sbb
xchg
pop
and
dec
mov
add
add
pop
out
push
lock
repz
nop
dec
push
loopne
pop
mov
or
cmpsb
decb
stos
gs
call
dec
jmp
add
add
mov
lds
shll
js
sahf
pop
adc
out
lcall
pop
push
fwait
inc
add
add
xlat
sub
add
jno
dec
dec
mov
jmp
loopne
bound
and
add
jp
xchg
pop
into
xor
outsl
jnp
sub
add
add
nop
es
add
dec
mov
aam
pusha
mov
repz
push
or
add
jg
ret
rcr
popa
ss
or
and
in
sbb
stos
fdivrp
in
add
add
mov
out
les
pop
pop
cmp
add
aad
fsubrs
sbb
repz
adc
add
jo
ss
add
add
test
mov
std
lcall
fistl
hlt
cmp
add
add
jo
jnp
insb
mov
lahf
adc
sub
add
add
es
push
pushf
repz
aad
cmpsl
jns
arpl
stos
xor
jnp
bound
mov
add
xchg
push
stos
scas
inc
pop
or
adc
popa
mov
ror
xor
and
into
mov
add
add
insl
mov
sbb
test
in
int3
mov
dec
mov
mov
jmp
lods
and
xor
push
int3
cmp
cwtl
or
hlt
cmp
dec
add
add
stos
mov
add
add
enter
dec
mov
and
add
add
and
shlb
ljmp
add
add
add
add
add
add
push
sahf
aas
daa
xchg
inc
xlat
call
adc
adc
fldt
jge
push
add
gs
loopne
or
es
out
popf
rcrl
cwtl
divl
push
pop
lods
mov
xlat
adc
adc
fwait
jmp
pop
scas
cwtl
stos
or
add
add
add
mov
mov
inc
mov
mov
cmp
sbb
mov
mov
cmp
rcl
adc
add
add
cmpl
pusha
add
add
cmp
aaa
mov
mov
shrb
jl
sbb
mov
xchg
pop
gs
pop
pop
jae
clc
push
xchg
add
add
add
sbb
sbb
mov
outsb
test
add
push
inc
mov
push
adc
cmp
lods
inc
fwait
movsb
ljmp
mov
rcrl
add
fldenv
cld
mov
icebp
sarb
and
add
add
shll
mov
leave
sahf
jb
cltd
and
add
iret
jno
pushf
loopne
imul
out
jb
mov
imul
add
fwait
and
jb
add
add
mov
jge
jno
fisttps
lret
sbb
push
dec
add
add
mov
xchg
or
dec
sbbl
xchg
push
jbe
shlb
js
fs
jne
sti
lods
test
push
jg
mov
outsb
pop
xchg
pop
movsb
dec
insb
add
add
hlt
test
dec
scas
jns
pop
push
cmp
cmp
add
add
add
pop
testl
mov
gs
ja
xorb
sbb
ret
pop
sub
addr16
ret
ljmp
add
add
add
sub
xor
adc
fcoml
push
stos
fld
fnstenv
and
stc
repz
adc
les
dec
rcll
pop
inc
add
add
inc
cli
lock
xor
es
lret
inc
xchg
jecxz
pop
pusha
mov
roll
hlt
addr16
xchg
hlt
adc
fdivrs
pop
cs
sub
jns
mov
imul
xor
testb
aad
leave
scas
or
mov
push
jae
leave
mov
aaa
clc
bound
jg
pop
xor
ret
rolw
popa
je
pushf
imull
ljmp
pop
pop
or
add
add
lret
add
pusha
add
add
jae
subl
lcall
popf
push
pusha
mov
dec
push
cmpsl
shlb
add
jge
cmp
jp
add
add
adc
mov
hlt
pop
adc
fimuls
mov
push
cmp
cmp
out
ret
add
add
sbb
mov
jnp
mov
push
scas
adc
mov
stc
push
mov
push
mov
mov
cmp
jns
push
and
push
inc
lret
movsb
fs
pop
xor
enter
xchg
adcb
loopne
movsb
in
or
add
add
pop
xor
pop
mov
out
jg
cmpsl
pop
mov
push
sub
aas
into
push
cli
mov
sbb
mov
fst
outsb
xchg
stos
lcall
add
mov
loopne
call
xchg
fwait
pop
in
cmp
scas
sbbl
sub
arpl
andl
dec
aaa
clc
dec
xor
mov
add
add
add
repz
lds
repz
pop
jmp
cld
push
cmp
xchg
cs
inc
sub
add
in
outsb
adc
and
hlt
sub
jo
push
mov
dec
mov
into
jl
js
mov
pop
cmpsl
or
lock
push
inc
sub
add
add
add
add
add
mov
js
cmpsl
fdiv
cmpsb
ds
mov
sbb
test
rcrb
inc
lcall
add
add
mov
add
mov
inc
sahf
push
ja
out
fiadds
test
mov
hlt
arpl
xchg
es
addb
dec
ret
and
scas
lahf
bound
sbb
mov
fisttps
mov
sub
xor
aad
cs
and
rclb
lds
insb
add
add
sbb
xchg
data16
push
add
lcall
add
lods
mov
fwait
lods
inc
hlt
scas
mov
xchg
ja
out
lods
std
pop
add
pop
push
fdivl
push
lea
out
popa
push
fldl
push
dec
mov
pop
cmp
jl
mov
repnz
add
call
add
add
add
add
or
sbb
add
push
sti
leave
out
fwait
decb
add
add
arpl
xchg
add
mov
cmp
scas
popa
div
and
std
int3
push
mov
jg
jne
gs
xchg
push
pop
and
jne
ds
inc
mov
lds
sahf
insb
add
add
inc
mov
imul
and
rorl
add
fisubl
jle
fldenv
add
dec
not
sbb
xor
hlt
scas
cmpsl
xor
cmp
cmp
scas
in
cmp
add
sub
add
add
mov
jecxz
mov
inc
or
xor
lds
mov
lret
sub
int3
arpl
imul
jle
xchg
pandn
aad
sub
mov
sub
cmpb
call
adcb
add
repnz
push
mov
or
add
add
add
cs
js
lahf
and
add
add
lcall
add
adc
mov
jne
and
or
mov
mov
lods
push
cmp
fists
movsl
cwtl
loopw
mov
mov
sub
add
add
ret
cs
movsl
mov
mov
cwtl
push
mov
ljmp
push
inc
mov
mov
add
pop
cmp
mov
into
scas
inc
adc
insb
add
add
push
mov
icebp
mov
das
shrb
stc
inc
pop
mov
add
jo,pt
test
cltd
imul
add
add
add
orl
fs
out
scas
cld
add
rcrb
sarl
and
shlb
ret
add
add
jmp
loopne
pop
fisubl
insl
xchg
push
push
cmpb
pop
pushf
xor
add
lret
aam
mov
cmpsb
loopne
ret
add
add
loope
sub
mov
rcrb
jns
aas
repz
pushl
pop
les
add
sbb
mov
fs
jbe
add
cmp
dec
ss
add
mov
push
inc
lods
add
repnz
dec
mov
js
fs
add
and
sbb
into
shlb
add
add
popf
mov
add
jae
ljmp
inc
mov
ficomps
add
adc
inc
jbe
ss
int3
inc
pop
loope
movsl
jbe
test
in
mov
mov
add
inc
add
add
or
xor
dec
nop
and
cmpl
pop
div
movsl
pop
mov
movsb
jmp
jmp
ret
mov
pop
mov
add
jnp
xchg
cmpsb
cmp
push
in
leave
sub
mov
jecxz
fdivr
jnp
dec
mov
and
add
add
cmp
mov
sbb
pop
sbb
add
incl
sub
add
add
adc
add
sar
mov
adc
enter
and
add
add
add
add
repz
add
add
add
push
mov
add
add
add
dec
sub
out
ja
call
sti
mov
xor
pop
out
shlb
sbb
scas
jle
jmp
outsb
adcl
add
add
jge
ret
mov
jmp
mov
push
arpl
push
iret
cmovo
add
add
push
dec
mov
push
push
xchg
cmc
add
fsubl
data16
test
stos
or
test
nop
xchg
repz
add
add
mov
inc
pop
mov
adc
out
inc
imul
xorb
and
shl
fmuls
fnsave
sbb
scas
sahf
in
jp
cmp
ljmp
sti
adc
shrl
cmp
mov
stos
rolb
pop
leave
xchg
mov
dec
xorl
fs
push
adc
mov
add
add
mov
gs
scas
aam
push
and
add
mov
pushf
addl
mov
push
enter
adc
lret
push
dec
cmp
mov
add
add
sarb
push
push
jmp
push
fwait
and
pop
xor
inc
movb
jae
add
add
fsubrl
mov
in
inc
das
sbb
scas
lods
and
add
cwtl
jmp
negb
jle
shr
cmp
shlb
or
add
add
out
movsb
jecxz
sbb
test
jmp
jnp
das
xchg
int3
in
movsb
divl
dec
pop
nop
lcall
add
xor
add
ss
loope
je
imulb
ljmp
hlt
stos
dec
mov
pushf
insb
mov
imul
clc
sub
dec
mov
xlat
jae
nop
repnz
add
andb
jnp
pop
sbb
cmc
adc
sbb
add
add
mov
jo
int3
mov
mov
lods
fbld
cmpsl
mov
mov
movsl
mov
mov
mov
mov
jecxz,pn
in
inc
inc
dec
add
add
pop
das
or
std
pop
das
lods
xor
or
jle
mov
add
add
insb
add
add
lcall
and
mov
outsb
add
and
sub
add
add
pop
xchg
fwait
lcall
rclb
repnz
pop
pop
fwait
sahf
mov
sub
imul
scas
xor
xor
push
jle
pop
push
mov
ds
push
mov
xchg
movsl
dec
pop
loope
cmp
icebp
mov
ret
loope
or
add
je
rolb
push
movsb
cmp
mov
add
and
jnp
addr16
or
add
add
jge
cmc
push
pop
add
cmp
add
add
jge
jbe
sub
add
add
imul
in
sahf
add
add
add
push
xor
xchg
sbb
mov
mov
sbb
cmp
popa
and
add
add
mov
adc
xchg
inc
ret
mov
add
hlt
pop
dec
push
jecxz
dec
rclb
push
ret
cmp
pusha
add
add
push
pop
lock
xchg
lock
add
add
add
add
add
out
inc
push
repnz
add
add
add
cwtl
jmp
loopne
inc
adc
or
ja
mov
add
add
push
dec
jp
mov
call
add
add
add
cmpsl
jl
ljmp
add
add
and
add
add
sbb
and
mov
icebp
pop
cli
push
add
stos
repnz
pop
mov
pop
push
mov
push
mov
aam
repz
or
in
and
inc
shlb
adc
mov
insl
mull
add
add
push
cmp
inc
pop
xor
rcrb
push
das
movsl
popf
push
push
jb
cmp
out
or
push
add
sub
add
add
dec
mov
lret
cmp
cmp
mov
insl
add
add
add
push
rcll
xor
cli
popa
fisubrs
add
add
add
add
push
cmp
repnz
out
push
daa
cmpb
lock
push
bound
jns
imul
ja
clc
adc
xor
add
movsl
cvtpi2ps
or
dec
xor
inc
mov
xor
mov
mov
xor
insl
xlat
jmp
mov
data16
aas
pop
jmp
xor
sbb
pushf
aad
xchg
push
xchg
repz
lahf
je
sub
add
add
pushf
xor
mov
les
in
sarl
cmp
fiadds
add
add
orb
shlb
or
pop
mov
adc
int
jp
adc
insb
add
add
add
add
xor
cmpb
jge
stos
jbe
push
push
cmp
push
xor
fisttpl
in
inc
pop
push
das
dec
sbb
or
jne
or
sahf
jmp
loope
pop
pop
out
add
add
xchg
xor
jg
es
stos
fidivrl
idiv
pop
mov
outsl
and
add
add
adc
jae
xor
fists
or
add
add
ret
int
mov
push
sbb
int
mov
xor
fisubrl
add
add
fidivrl
aam
mov
add
or
cli
dec
add
add
and
dec
cmp
pop
out
mov
and
add
add
push
push
sbb
add
add
in
insl
push
pop
bound
pop
jp
stos
aam
xorb
sub
add
add
add
add
add
movsb
popl
mov
fdivs
and
dec
xchg
push
mov
das
repnz
in
jb
mov
adc
repnz
ds
loopne
cs
add
add
add
mov
jae
ds
gs
cmp
add
inc
add
add
sahf
imul
enter
xor
add
add
mov
fldt
sar
daa
jp
out
dec
dec
mov
add
xor
mov
orl
xor
mov
lret
lea
scas
repnz
call
add
mov
or
subps
pop
jne
ja
loope
mov
dec
cmp
sbb
xlat
aad
xor
cwtl
repz
data16
add
add
add
add
pop
test
dec
mov
shll
in
mov
cltd
or
sub
add
add
jne
cmc
adc
xor
mov
arpl
mov
cmpsb
lret
rcrb
add
add
mov
mov
push
mov
data16
pusha
mov
idiv
data16
mov
dec
fcmovnu
mov
add
add
cmp
add
cmc
outsb
jg
hlt
cmp
movsl
xor
or
pop
xchg
push
jb
jmp
add
add
arpl
or
add
add
maskmovq
testl
add
ret
xlat
xlat
fstps
icebp
dec
inc
xor
xor
add
and
mov
xor
mov
push
cmp
xchg
fs
fwait
xor
sub
add
lahf
add
add
je
sbb
shrb
cmp
xchg
or
shll
popf
dec
or
push
push
lret
daa
or
repz
add
add
out
int3
enter
js
lods
call
outsl
jns
or
stos
gs
ljmp
jo
frstor
push
sub
dec
fld
or
xchg
pop
bound
xchg
mov
add
pop
dec
mov
inc
lea
mov
jecxz
inc
mov
xchg
or
add
add
test
cs
add
add
adc
out
push
push
mov
push
lahf
jb
arpl
jbe
mov
and
lcall
mov
add
push
imul
sbb
iret
cld
inc
subb
out
jnp
inc
mov
dec
mov
mov
mov
add
mov
out
loop
arpl
enter
add
add
xchg
xchg
jge
mov
jg
or
add
add
push
imull
add
add
add
imul
mov
jae
cmp
xor
imul
add
add
add
add
cmp
add
out
xchg
pop
and
add
add
lcall
sbb
popf
test
mov
roll
mov
orb
push
or
add
add
mov
and
xchg
jno
mov
shll
pop
sti
mov
push
jp
adc
nop
vmread
clc
dec
xor
fxsave
jl
lods
cld
mov
mov
jno
push
jl
adcb
add
mov
mov
and
sahf
ret
daa
or
pop
fstl
addr16
mov
inc
pop
pop
mov
add
pop
and
lea
nop
fistps
int
mov
sbb
pop
pusha
mov
add
add
sub
add
add
sub
jl
stos
pop
or
sub
add
add
add
add
mov
sti
rorb
add
xchg
jl
push
add
leave
pop
out
cmp
pop
jl
je
sar
cmp
cld
jbe
jmp
mov
aad
testl
mov
adc
mov
sti
cmpsl
aaa
nop
sbb
push
xchg
or
add
add
add
movsb
ljmp
add
or
testb
aam
fsts
dec
and
aaa
pop
mov
mov
movsb
or
add
add
push
pop
xor
add
test
add
push
xor
add
xor
jg
jmp
add
arpl
pop
push
daa
rcll
xor
loopne
addb
mov
in
xor
inc
scas
push
pusha
add
add
xor
sub
add
add
inc
nop
stos
pusha
mov
aas
int
fists
xlat
xor
adc
incb
inc
mov
jo
mov
cwtl
push
cmp
add
add
push
adc
in
xchg
sbb
sbb
sub
adc
cmpsb
in
add
cmp
cwtl
jp
out
xlat
imul
cld
push
jmp
xchg
shrl
js
sbb
mov
call
jp
push
pusha
mov
loope
in
sub
stos
cmpsl
fimull
loopne
testb
loop
into
mov
add
ja
ja
push
mov
dec
movsl
or
add
add
add
sahf
nop
and
add
add
push
sahf
dec
mov
inc
stos
cwtl
lahf
mov
rcll
add
outsl
ja
jo
xchg
xchg
lret
je
adc
jmp
or
aam
clts
cmp
in
outsb
cmpsl
jnp
push
in
inc
add
add
rcr
sbb
call
xor
xadd
jno
nop
xor
sbbl
dec
js
mov
cld
jg
mov
xchg
js
shll
loope
jecxz
add
add
decb
add
add
push
mov
in
push
push
pop
in
outsl
in
lock
mov
mov
cmp
pushw
or
add
add
mov
cmpsl
andb
xor
push
aam
cs
and
add
add
cmc
popa
gs
fsubr
insb
add
add
sbb
sbb
add
add
inc
mov
sbb
and
push
enter
je
adc
in
mov
ret
mov
scas
push
clc
icebp
repnz
lahf
mov
and
add
add
xchg
mov
add
insl
aam
in
clc
lcall
add
pop
or
cli
jb
popf
inc
sub
repz
adc
push
add
add
add
pop
push
mov
sahf
stc
das
in
and
mov
hlt
or
push
icebp
push
stos
lock
add
add
orl
xchg
adc
jno
mov
add
dec
xchg
je
testl
dec
loope
dec
icebp
mov
mov
push
mov
mov
popf
pop
aas
popa
cwtl
or
adc
ds
in
in
aam
or
inc
add
add
dec
push
push
jno
jg
cmp
or
xlat
pop
aaa
jge
or
movsl
xchg
testb
inc
cmpsl
ds
jecxz
negl
xchg
add
add
push
and
test
out
imul
inc
insb
mov
inc
out
add
add
test
mov
push
push
push
fstl
add
add
xor
xlat
mov
add
add
pushf
add
add
or
dec
out
sbb
ret
add
add
and
add
add
mov
push
mov
xor
add
push
and
mov
stos
stos
lea
ljmp
cmpsb
cmp
and
pop
xchg
sbb
jle
pop
scas
imul
fistl
push
adc
add
add
push
xor
pop
lods
mov
dec
cmp
add
ficompl
xchg
sub
cmp
add
jg
outsb
and
data16
in
jae
push
xchg
jb
pop
xchg
fidivl
lret
in
mov
mov
adc
jae
ss
ret
mov
sub
sti
sub
dec
xor
out
inc
mov
arpl
add
sbb
ret
shrl
and
add
add
add
add
dec
add
add
jne
pop
pop
into
rdpmc
cmpsl
adc
cld
adcl
in
es
adc
pop
imul
xor
add
imul
fimull
iret
jge
fldt
adc
int
sbb
cli
push
xchg
or
xchg
pusha
add
add
loope
lods
inc
cs
cwtl
cmpsl
dec
cmp
dec
lret
inc
leave
fisubl
mov
aas
hlt
xor
add
fwait
inc
inc
inc
add
add
lods
pop
insl
shr
push
enter
add
add
jmp
mov
jne
jg
mov
cld
pop
jle
push
loopne
mov
sbb
cmp
push
ret
sbb
adcb
mov
jae
inc
addl
outsb
pop
inc
or
adc
adc
daa
fstpt
mov
das
cmp
pop
mov
hlt
aam
mov
test
add
add
cltd
cmp
sub
add
add
xchg
adc
push
add
dec
mov
xchg
push
in
pop
jo
js
rcll
cmp
add
add
shrl
inc
jle
add
add
add
outsl
xlat
pop
xor
adc
jno
mov
cmpsl
fnstcw
add
add
sub
cmp
xchg
out
mov
ja
mov
loop
lea
mov
inc
lahf
lahf
movl
add
add
add
dec
call
cld
fsubrl
fisubl
mov
mov
cmp
mov
cld
lock
adc
out
sbb
mov
pop
dec
dec
fnstenv
inc
jmp
lock
jne
add
xchg
leave
add
add
add
xchg
lock
cmp
mov
add
add
imul
mov
cwtl
lret
test
mov
test
mov
scas
push
mov
and
scas
out
rcrb
imul
xor
movsb
testl
pop
out
mov
fsubrl
push
mov
das
jae
fucomi
rcrb
sub
add
add
pop
push
in
and
aas
icebp
cmpsb
divl
mov
lods
xchg
aad
pop
sbb
add
mov
orl
add
mov
ljmp
push
and
lret
jae
inc
call
jne
into
cwtl
retw
pop
sbb
leave
jne
jp
lcall
das
pop
aas
fwait
mov
dec
lock
mov
rcll
add
add
push
pop
xchg
adc
jne
cld
mov
and
add
add
loop
in
pop
jbe
adc
addr16
ror
xchg
ds
shrb
shl
mov
ficoml
leave
mov
data16
movsb
pop
xlat
mov
add
dec
jbe
dec
mov
fcomps
xor
andl
add
out
popa
sbbb
push
fisubl
pop
int
add
add
cwtl
add
jecxz
lods
pop
mov
add
and
add
add
xchg
mov
add
aas
mov
push
sti
movsb
xchg
or
out
pop
mov
xchg
dec
pop
pop
testl
pop
xchg
mov
addb
add
add
jl
pop
jne
jmp
loopne
jle
mov
sbb
cmp
push
repnz
pop
js
cs
insb
mov
adcl
add
push
cwtl
pop
ds
or
mov
add
xchg
or
add
add
js
push
jns
ret
mov
cmpsl
mov
lock
pop
icebp
popa
add
add
pop
mov
xor
pusha
add
add
mov
mov
call
add
insl
sbb
ret
pop
stos
jle
push
jle
addr16
fdivrp
inc
test
fisubrs
aam
jmp
cs
pop
cmp
sub
add
add
mov
cmp
xor
dec
push
mov
add
ljmp
push
vmread
testb
aam
xchg
pop
enter
mov
add
js
push
or
add
add
or
add
add
add
add
out
inc
dec
sub
add
add
cmp
out
add
add
in
popf
dec
fnstsw
in
add
add
add
dec
imul
jge
mov
mov
push
pop
mov
gs
add
add
rorb
add
xor
sbb
dec
jg
lods
ss
clc
or
mov
mov
mov
pushf
loop
mov
sbb
nop
adc
adc
mov
movsl
loopne
add
ja
jno
sbb
sbb
add
add
cs
stos
out
inc
mov
push
push
pop
sbb
add
xchg
xchg
addr16
xchg
pop
insb
mov
je
movsl
in
xchg
xor
in
inc
fbstp
mov
mov
xchg
mov
leave
repz
mov
neg
push
push
aam
ret
mov
rcrl
pop
jp
cmp
in
inc
aam
notb
stc
sub
testl
xchg
sarb
push
pop
add
repnz
in
call
add
mov
mov
pop
jge
xchg
lahf
xor
lret
adc
add
add
dec
mov
mov
pop
repz
add
add
jmp
xor
pop
cmpsl
push
ror
mov
cs
sub
mov
pusha
add
add
ficompl
or
add
jo
ja
mov
push
pusha
add
add
gs
or
push
cmp
push
shr
arpl
sti
mov
add
es
pop
cmpb
mov
mov
add
add
repnz
mov
inc
icebp
das
jae
adc
jmp
or
and
cmc
lds
jl
shrb
mov
pop
cmp
and
add
add
cmp
popf
negl
or
clc
push
aad
sbb
add
add
cmp
inc
lods
and
sahf
xchg
in
mov
lret
aaa
pop
sarb
lock
lcall
int3
push
mov
inc
aaa
pop
pop
mov
sahf
xchg
aaa
int
out
lods
adc
add
aam
sbb
lods
dec
and
add
add
add
mov
pop
ror
xchg
dec
movsb
cmpsl
das
addl
mull
hlt
mov
stos
iret
lret
test
repnz
add
add
fs
mov
sbb
mov
xchg
push
out
testl
sub
and
add
add
add
add
add
add
mov
jmp
movsb
je
mul
and
add
add
mov
jmp
popf
jge
out
stos
lea
and
add
add
jns
shl
jg
jle
adc
pop
cltd
hlt
sbb
mov
jb
mov
add
or
add
add
in
jp
repz
addb
cld
push
add
stc
lods
jmp
sub
je
mov
mov
dec
push
dec
add
add
pop
shll
in
mov
addl
add
add
mov
loop
sub
fstl
ret
in
jnp
push
sub
test
mov
popa
inc
push
mov
sti
test
and
adc
adc
fildll
mov
sti
loop
push
mov
stos
sbb
xchg
xchg
bound
add
add
dec
iret
jne
push
ficoml
inc
mov
dec
or
add
add
lahf
dec
int
in
out
pop
int3
les
cmc
xlat
xchg
jno
std
icebp
push
leave
pop
mov
insl
sub
movsl
inc
add
add
mov
bound
jbe
sarb
addr16
negb
xchg
mov
add
sbb
jg
mov
add
xchg
test
arpl
lcall
xchg
loop
mov
arpl
inc
mov
add
mov
dec
xor
cmpsb
test
adc
enter
and
add
add
cli
rcrb
jg
xchg
es
xlat
or
dec
jmp
rol
iret
cwtl
adcb
pop
nop
lret
and
bound
cmp
mov
push
sub
adc
add
add
mov
daa
out
sub
sbb
xchg
std
shr
mov
out
sub
add
scas
xor
cltd
xor
sbb
cltd
pushf
movsb
lahf
jmp
dec
pop
xlat
popf
stos
push
sub
inc
lods
in
add
add
add
outsb
movd
mov
out
cwtl
lret
mov
fbld
push
dec
mov
sub
lahf
repz
push
jno
or
add
add
mov
je
mov
mov
aad
data16
add
add
add
xchg
lahf
pop
xor
out
adc
push
cmp
outsl
cmc
inc
xlat
jnp
inc
add
add
pusha
add
add
negl
xchg
pop
fldt
inc
add
add
rorb
xchg
add
add
add
or
cmpsl
add
inc
fmull
add
add
push
pop
dec
mov
mov
orl
add
add
cmc
add
add
insb
mov
cmpsl
and
add
add
rclb
mov
leave
dec
mov
fwait
xchg
insb
add
add
call
mov
pop
inc
addr16
aas
add
add
add
and
add
add
push
fisttps
add
push
or
mov
clc
cwtl
sub
push
sahf
cmp
lcall
adc
lahf
mov
je
sbb
cmp
enter
ret
xlat
int
arpl
fst
mov
jae
mov
jae
push
mov
inc
shll
dec
out
pop
movsb
pop
add
scas
adc
adc
cmp
jg
cwtl
aas
les
divps
xorb
inc
push
adc
lahf
mov
pop
sub
pushl
icebp
into
in
xchg
xchg
or
adc
ds
cli
in
pop
jno
adc
fwait
pop
mov
add
add
adc
test
ljmp
sahf
insb
mov
pop
sub
out
repnz
jb
mov
mov
xchg
aas
dec
adc
push
rorb
add
add
xchg
daa
xor
mov
mov
mov
dec
sub
pop
lret
nop
pop
push
sub
add
and
pop
add
cli
out
add
add
pop
mov
mov
adc
sbb
add
add
rclb
pop
or
mov
dec
jp
pop
and
add
add
pop
dec
add
add
ljmp
je
mov
mov
add
dec
mov
xlat
pop
mov
dec
cs
add
add
cmp
add
add
or
pop
imul
xor
mov
lea
add
xor
std
push
or
add
add
pop
inc
xchg
jecxz
mov
pop
and
or
lret
cmp
popa
test
xchg
sarb
xchg
sub
add
add
jmp
aaa
xchg
cld
mov
movb
in
movsl
cmp
or
add
add
xor
sub
xor
scas
test
add
push
mov
mov
test
aam
pushl
jae
or
push
mov
push
add
cmp
xchg
out
sub
add
add
sub
pop
pop
lock
ret
xchg
add
add
or
add
add
call
int3
cltd
movsb
shlb
loope
and
xor
push
dec
dec
dec
lahf
das
in
outsb
cs
into
or
xchg
sub
bound
sub
mov
mov
cmp
add
add
sub
icebp
imul
loop
in
mov
mov
imul
and
jecxz
movsl
mov
mov
les
sbbb
dec
add
add
pusha
add
add
add
in
or
xchg
cld
sub
add
add
add
add
sub
add
add
stos
pop
es
mov
cltd
icebp
xor
add
add
sahf
push
or
xchg
je
mov
repz
scas
repz
cld
pop
mov
jne
adc
inc
repz
movsb
sbb
or
lret
dec
hlt
outsl
jo
pop
in
pushf
xchg
rorl
mov
lods
cs
sub
loope
cmp
movsb
jecxz
out
scas
pop
cwtl
pop
mov
out
jae
adc
jl
xchg
add
xchg
out
sbb
test
mov
adc
ja
mov
mov
sbb
fsts
mov
sub
add
mov
sldt
add
add
test
cltd
out
dec
mov
divl
test
popaw
into
lret
sar
popf
and
test
adc
sahf
lods
adc
xchg
or
add
add
std
or
add
add
sbb
cmp
mov
xchg
adc
xchg
psubusb
and
negb
cwtl
inc
add
add
mov
ja
jne
js
je
fistpl
add
pop
push
hlt
test
add
add
das
dec
mov
mov
pop
push
mov
mov
mov
dec
add
add
sub
add
add
icebp
popa
adc
add
add
hlt
mov
jle
repz
add
add
sub
add
add
dec
scas
mov
aas
ret
push
and
xchg
cltd
imul
aas
push
xchg
cmp
mov
cltd
sbb
cmp
add
add
add
add
fs
push
push
fwait
sar
sub
ret
jno
push
in
mov
imul
add
test
loop
xchg
xchg
clc
push
cld
add
int3
out
adc
jg
ror
in
insb
mov
add
add
jns
push
pop
aad
adc
add
pushl
cmp
fwait
push
int3
jmp
xchg
add
pop
pop
push
push
cmpsl
mov
sub
xchg
sub
add
add
add
xor
rol
add
push
in
and
fmulp
jbe
jb
or
cltd
inc
imul
addr16
sahf
lea
or
add
add
add
add
jae
jecxz
mov
pop
pop
mov
xlat
lret
jns
fstps
cmpsb
nop
fsubrl
and
test
rcrb
jp
add
add
mov
sbb
xchg
push
jge
xchg
add
add
outsl
call
test
or
dec
pop
dec
insl
dec
test
ljmp
add
or
push
mov
add
icebp
clc
into
adc
es
xchg
push
pop
mov
cmpsb
test
jnp
jns
out
jle
mov
bound
add
add
xchg
loopne
add
add
sbb
outsl
mov
in
imul
mov
xchg
sahf
movzwl
ss
add
add
bnd
add
add
pop
fidivs
mov
ds
cmpsl
mov
data16
mov
icebp
mov
notb
inc
outsl
push
dec
inc
xchg
or
aaa
aas
inc
xchg
into
cmpsl
dec
add
add
hlt
and
cmp
lret
ds
shrl
sub
add
add
faddp
out
push
sub
add
add
clc
add
add
add
mov
shrb
addl
mov
lret
mov
add
jle
repnz
mov
lds
fimull
add
add
adc
add
add
test
jb
xlat
add
push
pushf
hlt
aad
dec
jo
adc
rorl
xor
repnz
decb
mov
xor
sbb
insl
xchg
cmc
addr16
dec
imul
add
adc
mov
mov
test
add
add
ret
and
add
add
and
cmpsl
xlat
lret
xor
sbb
jp
add
add
popa
dec
mov
jae
in
dec
add
add
sbb
and
add
add
es
cmp
inc
daa
adcl
or
add
add
jo
jge
xchg
push
rcr
ss
add
mov
add
iret
inc
mov
add
mov
mov
jmp
xor
fwait
into
lret
ud1
add
test
add
ljmp
jne
mov
loope
lret
or
xchg
or
add
add
add
xchg
inc
jecxz
jae
mov
fildl
add
add
lcall
insb
add
add
pop
lods
xchg
mov
lahf
mov
mov
jmp
call
push
jge
dec
sub
fwait
pop
and
push
mov
nop
cld
test
push
rolb
mov
push
in
mov
lock
jmp
push
sarb
and
das
jg
in
shll
add
jne
jmp
add
add
jno
clc
sub
add
ret
push
std
inc
add
add
cmp
push
mov
cli
dec
mov
outsl
imul
cmp
loopne
adc
inc
add
add
or
add
add
jge
aas
mov
ss
mov
add
or
cltd
cmp
cmc
and
add
add
add
add
add
test
shrl
mov
add
nop
incl
movsb
dec
mov
popf
orb
subl
cmp
add
add
cmp
add
add
lock
pop
jg
add
lcall
fistl
xor
hlt
jb
insb
add
add
fsubrp
cmp
add
outsl
mov
fisttpl
mov
adc
inc
or
popa
pop
lret
mov
xchg
int3
hlt
daa
and
add
add
pushl
lods
pop
dec
dec
add
add
movsb
bound
push
push
inc
mov
mov
call
sub
add
add
lcall
xor
cmc
push
push
push
fists
mov
mov
rcr
das
dec
add
add
ss
pop
ja
ss
add
add
mov
movsb
xchg
xchg
cmp
xchg
xor
add
add
add
mov
in
mov
xchg
add
add
add
clc
cmp
nop
test
add
out
outsb
sbb
mov
mov
cmp
add
add
rorb
jge
cmp
lds
push
push
jb
xrelease
jge
pusha
add
add
stc
mov
and
add
add
push
mov
push
push
mov
je
mov
fwait
push
popa
sub
je
xor
sub
mov
mov
fs
ljmp
or
add
addr16
mov
push
pop
roll
or
add
add
stos
rcl
sub
add
add
test
or
pop
mov
inc
nop
enter
xor
add
sbb
out
mov
outsl
mov
leave
cmpsl
nop
ljmp
cmc
es
add
add
push
pop
iret
dec
and
repnz
popf
lret
sbb
add
add
cmpsb
jle
xor
xchg
mov
cmp
pop
das
je
adc
and
popa
inc
add
add
pop
mov
dec
add
add
ljmp
add
jp
mov
inc
rcrb
or
push
push
fucom
insl
mov
in
loopne
inc
mov
xlat
repz
es
adc
xor
mov
addr16
xchg
xor
das
pop
add
push
or
xlat
mov
cmp
rcr
insb
add
add
das
mov
mov
add
add
pop
movsb
in
add
vmovaps
add
rclb
ljmp
mov
fcomps
fadds
sbb
cwtl
movl
cli
insl
in
mov
jl
divl
jle
stos
int3
lea
xchg
stc
adc
push
dec
and
mov
xchg
mov
test
lea
add
add
and
add
add
ret
movsb
mov
imul
mov
fsubrs
stos
xorb
lods
mov
xchg
jae
insl
cmc
mov
push
andb
mov
orl
dec
mov
sub
add
add
push
repnz
cli
fidivrs
daa
and
add
inc
fucom
xor
lock
daa
xor
pop
mov
cmc
sub
out
mov
fdivl
cmp
inc
arpl
idivl
add
add
ffreep
jno
adc
fs
pop
dec
mov
mov
push
jmp
add
jb
xor
mov
push
dec
fwait
je
pop
sbb
add
add
mov
pusha
mov
aas
push
sbb
pop
add
add
add
iret
sarb
jge
int
insl
out
inc
mov
jae
cltd
inc
mov
nop
cmp
add
add
in
push
adc
push
cltd
xchg
ja
xchg
sub
add
add
cmpsl
std
xlat
dec
loop
push
add
loopne
xor
mov
add
add
lahf
mov
mov
repz
popf
jae
jnp
leave
aad
out
and
stos
mov
add
cmpsb
aad
imulb
add
add
jecxz
icebp
pop
mov
mov
add
add
inc
add
add
pop
adc
add
add
mov
pop
std
and
mov
hlt
pop
popf
in
or
add
add
imul
mov
leave
fiadds
fs
stos
out
clc
jnp
in
in
add
add
pop
cmp
or
add
add
pusha
mov
call
and
jns
mov
outsl
cli
mov
mov
mov
out
repnz
mov
mov
add
add
pop
rcr
or
add
add
repz
pop
jnp
dec
imul
idivl
faddp
mov
mov
lods
xchg
mov
jge
mov
loop,pn
adc
jge
mov
mov
cltd
in
lea
cltd
pusha
mov
xlat
push
repnz
mov
lcall
aas
fwait
mov
out
mov
mov
inc
imul
and
in
or
dec
popa
xchg
pop
out
in
es
and
adc
mov
mov
cmp
xchg
cmpsl
hlt
xor
add
add
lea
xor
bound
divb
or
sbb
inc
jl
out
jne
xchg
lret
outsl
xlat
xchg
mov
orl
out
sti
mov
lcall
add
add
add
jne
mov
je
dec
sti
sbb
xchg
jae
inc
out
or
mov
leave
or
dec
fidivrs
aam
nop
fsubs
mov
jb
xchg
dec
or
mov
add
add
mov
cld
sbb
add
cbtw
imul
mov
sub
cmp
add
mov
adc
dec
inc
add
add
insl
mov
adc
daa
mov
jecxz
add
add
in
pushf
ss
in
test
ror
leave
inc
mov
mov
movsl
or
add
add
or
add
add
sbb
xchg
hlt
int
mov
es
mov
xor
insb
mov
test
add
ss
and
add
add
scas
ret
mov
adc
into
inc
ficoml
subl
dec
lret
jle
lret
xor
popa
movsb
adc
add
add
out
mov
outsb
enter
addb
add
les
xchg
adc
shrb
add
add
iret
shr
jno
jecxz
outsb
pusha
add
add
inc
mov
add
add
add
add
mov
xchg
enter
mov
shl
jbe
sti
pop
mov
add
cmp
mov
repz
pop
idivb
pop
push
ret
cmp
xchg
sti
pop
int
cmp
or
sbb
push
call
xor
inc
sub
add
add
cmp
sbb
das
or
add
add
xchg
out
sub
pop
pop
shll
in
or
sar
and
pop
cltd
repz
add
add
fwait
xchg
dec
xchg
lcall
ss
mov
add
add
scas
mov
xor
mov
sarb
mov
add
pop
sbb
push
or
xorl
sbb
add
add
xor
das
pop
dec
pusha
mov
push
sti
test
mov
xchg
mov
push
cld
cmp
sbb
sbb
insl
test
sub
add
add
test
xor
xchg
mov
rol
sbb
jl
dec
add
add
es
mov
or
icebp
mov
and
or
add
add
and
sub
pop
push
push
sbb
test
cmp
pop
imulb
add
add
mov
inc
mov
xchg
ja
and
mov
dec
mov
jg
sbb
leave
jae
mov
mov
fstl
mov
addl
je
cmp
add
ret
mov
mov
cmc
fisubrl
add
mov
pop
pop
fwait
lods
not
push
add
js
enter
push
or
fadds
mov
add
add
add
js
push
sub
add
add
push
movsb
adc
out
xchg
jb
loop
lods
add
mov
inc
add
add
addb
add
mov
mov
xchg
scas
and
cs
shll
test
les
andb
enter
cmp
fs
lret
inc
cmp
inc
xchg
dec
push
jl
shlb
test
inc
add
add
cmp
sub
scas
arpl
mov
out
dec
xchg
dec
dec
mov
repz
inc
sbb
fldt
imul
add
add
mov
pop
pop
pusha
mov
dec
lds
add
add
int3
pop
popa
pop
fsub
jae
pusha
add
add
test
in
movsb
push
fwait
pop
add
call
pushl
stos
cmp
push
sbb
add
add
out
cltd
lds
mov
push
pop
fldl
test
sub
jmp
shr
cmc
push
mov
jp
push
xor
push
dec
dec
jne
push
pusha
add
add
int3
movsl
pop
out
xor
push
lock
xchg
jecxz
in
pop
pusha
mov
sahf
cld
std
add
add
fsubrp
add
add
add
mov
not
inc
xor
xchg
lret
mov
add
add
daa
loopne
mov
add
add
xor
dec
sti
sbb
jmpw
xchg
push
adc
cld
je
add
add
dec
in
into
je
outsl
cmc
adc
push
inc
mov
lret
add
add
lret
push
icebp
jb
add
sbb
mov
pop
repz
mov
stos
jge
dec
xchg
jnp
or
fiaddl
inc
cli
pop
mov
ficompl
inc
add
add
movsb
push
sbb
xor
cli
and
movb
jo
jecxz
adc
cmp
add
mov
xchg
and
xor
sub
mov
sub
push
mov
insl
or
shlb
movsb
mov
or
add
add
jl
jne
adc
push
inc
add
add
sub
fs
cs
insb
add
add
sarl
mov
add
add
pushf
adc
stos
or
mov
push
or
add
add
push
or
add
add
jmp
mov
adc
mov
sub
rolb
sahf
jbe,pt
dec
sub
push
icebp
xor
out
mov
inc
jno
pushf
sbb
xchg
or
xor
enter
sbb
add
add
cmp
or
out
or
push
add
add
add
pop
mov
xor
rolb
add
add
inc
or
add
dec
add
add
adc
adc
mov
add
push
mov
mov
mov
data16
jae
sbb
aad
pop
loope
mov
add
add
pop
add
pop
lahf
and
add
add
sub
push
call
mov
mov
push
sti
pop
es
in
add
add
xchg
in
pusha
mov
mov
iret
inc
pop
mov
pop
ljmp
insb
add
add
fisttpl
aad
fdivl
lods
mov
add
add
mov
les
add
add
add
mov
add
mov
mov
jmp
mov
add
add
decl
or
add
add
lds
movsb
push
mov
add
add
jb
and
inc
test
es
in
pop
loop
inc
cmc
sub
add
add
inc
pop
and
add
add
mov
scas
push
mov
jns
mov
mov
rolb
add
cltd
cmp
pop
lods
mov
adc
lods
pop
xlat
cmpsl
mov
inc
mov
fsts
sub
in
jl
sahf
sahf
push
divb
inc
dec
jge
filds
jecxz
adc
add
add
add
push
xor
add
add
pop
and
add
add
fstpt
jp
add
dec
xlat
jle
fcomps
lcall
add
add
inc
add
add
mov
add
xor
or
mov
cwtl
or
add
add
aas
aaa
je
add
add
or
add
add
call
imul
aaa
fisubs
add
add
add
dec
fimuls
add
add
hlt
jnp
aas
ret
xchg
mov
dec
cmpsb
ss
push
int
rorb
add
add
mov
rclb
pop
ljmp
pop
push
add
cmp
add
cmp
dec
insl
fbld
das
call
xchg
stos
in
jae
mov
jbe
adc
gs
stc
imul
jae
jp
mov
stc
pop
mov
imulb
call
cmc
cwtl
push
xchg
add
in
mov
pop
pushf
mov
add
add
add
repnz
add
add
add
add
jbe
add
add
add
fstp
stos
lret
add
add
add
push
mov
lret
add
add
std
cmp
fmul
cmp
mov
mov
mov
mov
add
gs
lahf
lds
test
sub
mov
adc
add
sub
in
orb
add
movsb
loope
shl
dec
aam
hlt
xor
addr16
sub
add
add
jnp
xor
mov
add
add
push
sub
scas
inc
inc
and
add
add
aaa
dec
mov
cmp
xchg
shlb
outsl
test
or
add
add
mov
cmp
or
cwtl
rolb
ja
out
pushf
stc
andb
xor
mov
add
add
adc
pushf
pusha
mov
sub
ja
in
movsl
cmp
loopw
test
or
add
add
dec
add
add
maxps
mov
sub
mov
ret
shrb
add
add
pop
jg
pop
outsl
std
add
add
mov
iret
mov
push
or
add
add
das
mov
arpl
sbb
addl
push
push
sub
pop
mov
jle
mov
add
add
sub
insb
mov
pop
inc
push
mov
push
scas
insl
push
jmp
push
das
sahf
rcr
mov
loopne
movsb
inc
sub
add
push
mov
test
out
sub
testl
movl
mov
fsubrp
mov
push
dec
mov
xor
fs
aas
dec
inc
outsl
out
pop
imul
jnp
lret
incb
and
movsl
into
pop
cwtl
pop
sarl
pop
pop
pushf
cs
push
rorb
ds
push
icebp
cmp
sub
add
add
adc
ret
jo
jnp
stos
xor
add
rorb
jo
dec
test
add
add
add
bound
add
add
sbb
add
add
or
mov
mov
or
lds
std
popa
fnstcw
std
sar
adc
add
leave
adc
sbb
icebp
mov
add
mov
add
add
movsl
dec
add
add
mov
movsl
cmpsb
jge
adc
jge
add
mov
pop
addr16
pop
loopne
or
add
add
call
push
fsubrp
sahf
sti
popf
scas
push
testb
loopne
movsl
sbb
or
fildll
cwtl
inc
lea
jle
jae
popa
jp
int
mov
stc
cs
dec
stos
sub
add
add
nop
push
mov
loop
into
mov
clc
mov
lahf
cmp
add
add
lea
dec
or
add
add
pop
inc
mov
or
mov
ds
cmp
or
cmpsb
pop
push
movsl
mov
dec
cmp
iret
iret
cmpsl
xchg
sahf
inc
jns
das
idiv
add
cmp
sti
dec
test
jnp
pop
dec
add
add
adc
test
jge
sub
cmp
jl
mov
movsb
add
shrb
cmpsb
outsl
push
or
xchg
int
jnp
cmp
add
xchg
mul
mulb
std
mov
and
std
inc
stc
xchg
scas
mov
pusha
add
add
fnsave
stc
pop
sub
add
add
xchg
iret
cld
loope
pop
cmp
add
add
cmp
out
xorl
cmp
add
add
add
pop
sbb
push
cltd
jge
daa
int
insl
and
add
add
cs
push
int3
push
add
insb
add
add
testb
adc
lea
or
add
add
repz
in
push
cmpsb
jecxz
lea
ficomps
dec
mov
sbb
adc
mov
or
cmp
mov
add
add
or
add
add
cmc
xchg
es
lret
mov
add
pop
xor
add
add
in
push
dec
add
add
cltd
mov
mov
lods
fs
mov
scas
cmp
add
add
sub
add
add
lds
xor
mov
cmp
add
inc
mov
mov
sti
cwtl
filds
push
push
enter
dec
xor
adc
popf
push
ficoms
lcall
notb
mov
adc
mov
fsts
and
add
add
lcall
fucomp
inc
mov
add
adcl
pop
inc
xor
xchg
mov
lods
test
cmpsl
mov
dec
cli
adc
sbb
in
test
les
cmpsb
mov
pop
adc
arpl
mov
cmp
add
imul
add
jbe
jp
jno
jns
addr16
inc
inc
insl
inc
push
test
push
lret
sti
jge
mov
xchg
xor
test
mov
shrb
add
add
add
add
add
mov
popa
xor
fldcw
xor
cmp
repnz
loope
es
or
mov
fists
int
push
push
or
sti
dec
pand
stos
jne
insb
mov
sbb
ljmp
mov
and
mov
je
gs
lea
mov
jne
js
lcall
and
add
enter
mov
add
shlb
mov
daa
cmp
pop
push
and
add
add
fdivr
outsb
cmp
into
xchg
decl
add
mov
pop
push
mov
icebp
sbb
insb
add
add
cltd
cwtl
test
iret
push
and
loopne
jb
in
arpl
mov
call
addr16
repnz
call
xchg
loop
in
sub
cmc
rolb
lds
hlt
sbb
add
add
jnp
cmc
lahf
mov
add
outsb
push
imul
es
pop
loope
push
scas
adc
push
or
add
add
mov
fwait
int
mov
add
add
xchg
mov
add
add
movsb
div
dec
and
lock
cmp
mov
push
mov
cmpsl
jae
xchg
mov
jae
mov
add
in
mov
int
loop
push
loopne
add
add
add
mov
mov
mov
or
leave
ss
mov
ss
cmp
jnp
xchg
push
pop
and
insl
bound
push
daa
cmp
dec
loop
pop
jo
aaa
dec
in
xchg
and
add
in
test
mov
add
aam
pop
nop
lods
ret
xor
jl
arpl
or
mov
add
add
pop
dec
sub
sub
push
mov
jmp
mov
cmpsb
add
xchg
out
enter
xchg
nop
add
add
add
push
mov
xorb
add
add
int3
ljmp
add
add
inc
mov
ret
inc
shl
mov
jge
das
mov
push
xlat
mov
hlt
xchg
xchg
ror
xchg
pop
mov
or
cmp
imul
mov
imul
nop
div
nop
dec
pop
int
daa
jbe
int
or
add
add
sub
int
and
test
rcr
sbb
xorl
inc
mov
dec
iret
lods
xor
add
add
lahf
inc
mov
mov
add
add
pop
test
pop
adc
out
mov
mov
push
mov
xor
lea
add
add
imul
xor
mov
add
add
pop
lods
pushf
pop
arpl
xchg
movsl
mov
mov
sbb
notl
shrl
pop
sub
fimuls
add
arpl
xor
sbb
mov
shll
fidivs
bound
pop
adc
add
inc
mov
cmp
fwait
subl
add
add
cmp
push
test
add
add
add
xor
lcall
mov
dec
jecxz
fnstcw
sbb
fcompp
adc
add
dec
mov
shlb
add
add
add
add
pop
setnp
sbb
scas
jl
add
add
add
daa
out
adc
add
lea
add
add
ja
in
stc
xchg
push
loope
jb
jg
dec
mov
and
or
ja
add
add
mov
add
mov
mov
cmpsl
cmp
add
add
add
negb
data16
mov
test
outsl
mov
add
mov
jge
jle
and
pop
mov
adc
mov
dec
sub
add
add
mov
sbb
adc
inc
andb
test
add
fldl
mov
add
adc
jbe
addr16
enter
adc
pop
mov
std
xor
xchg
dec
lret
or
add
cmp
add
xchg
jp
mov
add
add
cmc
stc
pop
lods
mov
xlat
sahf
xor
jae
cmpsl
xor
mov
daa
xor
mov
jb
xchg
mov
fidivrs
add
push
imull
pop
aam
inc
dec
imul
add
ret
dec
xlat
in
mov
xchg
leave
xor
add
pusha
mov
cltd
xor
fwait
sti
fistps
frstor
rolb
cmp
inc
fldl
mov
daa
fnstcw
mov
mov
rcr
out
xor
mov
rcll
enter
mov
mov
mov
inc
aaa
aad
adc
mov
pop
cltd
stc
jg
jne
adc
arpl
mov
add
add
adc
jnp
std
bound
scas
fildl
dec
pop
push
fidivrs
inc
enter
icebp
jno
cmc
std
sbb
add
add
dec
jb
sbbb
add
add
add
add
repz
mov
lret
scas
loope
das
jmp
out
cmp
jmp
jb
sbb
lea
jge
ret
add
add
insl
nop
in
insl
inc
mov
add
xor
add
jne
push
jo
push
dec
imull
test
and
jb
jp
mov
cmp
fwait
mov
sarl
pop
inc
add
add
es
xor
add
add
add
add
add
inc
sub
xchg
add
es
int3
hlt
add
outsb
sarl
ror
call
ret
popl
add
add
or
sbb
push
dec
inc
xchg
add
add
push
lret
add
movsb
push
cmpsl
scas
out
scas
mov
add
les
inc
cmpsl
mov
es
add
add
push
lcall
add
movsb
mov
xor
sub
add
add
cmp
adc
scas
nopl
in
faddp
xchg
jecxz
shll
into
push
push
mov
pop
cmp
mov
ss
add
add
add
inc
add
add
jno
dec
xor
sbb
add
jecxz
cwtl
dec
xor
pusha
mov
adc
repz
xor
fdivrp
sub
shll
inc
shlb
mov
xchg
inc
mov
xchg
inc
out
sbb
jmp
mov
inc
out
inc
mov
nop
sar
xor
pop
cld
dec
mov
ss
mov
mov
in
imul
add
add
and
and
mov
fstps
pushf
or
lock
cmpsb
inc
and
mov
push
icebp
lods
and
add
jae
pop
rsm
dec
mov
jo
lods
push
mov
and
push
xlat
aas
jbe
inc
fsubr
pushf
mov
mov
sub
popf
jbe
mov
aad
mov
add
add
and
test
push
cli
lret
mov
dec
push
mov
arpl
add
pop
ljmp
repz
lahf
push
xor
sbb
add
hlt
mov
popa
jns
dec
add
add
mov
lcall
clc
fiaddl
mov
cmove
add
add
movsl
rorb
movsl
or
mov
add
add
fists
mov
mov
add
jne
adc
fistl
pop
test
imul
add
add
int
and
add
push
out
sti
dec
mov
add
add
ret
add
add
cmpl
add
add
add
js
js
sti
into
leave
test
mov
add
add
or
jb
xchg
gs
mov
sbb
add
lds
iret
jecxz
jbe
mov
in
xchg
mov
push
push
outsb
xor
pop
shll
out
mov
push
xchg
push
data16
mov
and
cmp
add
sub
add
add
jo
bound
xchg
ds
test
xchg
insb
mov
pop
lahf
jp
add
add
sbb
orb
ljmp
shlb
add
add
adc
add
mov
push
dec
in
xor
cli
outsl
int3
in
push
rol
dec
adc
add
subl
enter
sub
pusha
add
add
addr16
add
add
dec
aad
cmp
jp
dec
into
adc
lahf
sbb
jmp
add
add
test
add
add
push
pop
or
add
add
cmp
push
jbe
daa
jg
mov
mov
add
adc
dec
test
icebp
sbb
add
data16
lcall
inc
lcall
lret
mov
int3
dec
add
and
outsb
aas
xchg
adc
xchg
adc
pop
hlt
xchg
outsl
sbbb
jmp
cmp
sti
lret
cmp
dec
xor
and
add
lcall
cli
pop
xor
mov
cmc
lret
push
sahf
aad
pop
fwait
or
xor
mov
ljmp
mov
in
inc
ds
mov
and
addr16
lds
add
add
add
add
cs
mov
sarb
out
or
mov
cmp
inc
mov
mov
inc
dec
lods
push
sub
cmp
pop
lret
inc
mov
daa
and
js
add
ret
ds
imul
mov
mov
aam
fcompl
jl
sub
push
inc
decl
mul
mov
add
test
dec
xchg
push
aad
mov
add
add
sub
mov
hlt
add
shlb
mov
fcmovne
lds
lea
xchg
cmp
cld
sub
addl
inc
mov
add
add
add
dec
mov
cld
or
scas
test
nop
sub
add
add
cmp
add
in
sub
add
es
ljmp
popa
fcmovnb
push
clc
inc
icebp
out
push
clc
mov
add
push
jb
rdmsr
cmp
mov
cmp
or
mov
push
mov
add
add
or
mov
rolb
add
add
cmp
movsb
mov
lods
and
scas
cmc
inc
pop
arpl
mov
add
mov
push
out
pop
or
pop
cmc
add
inc
mov
pushf
std
dec
ficompl
scas
fidivrl
adc
repnz
bnd
aas
dec
mov
adc
mov
filds
add
mov
and
cmp
popf
std
addr16
lret
pop
jae
je
cli
jl
and
add
add
ret
add
add
mov
repz
add
add
imul
fdivl
add
add
mov
out
dec
mov
and
cmpsl
cld
mov
add
cmp
sbb
pop
cmp
and
popf
mov
hlt
inc
in
push
xchg
imul
jge
insl
sbbl
psubb
add
add
add
add
cmp
out
push
aam
or
movsl
int
mov
jge
aaa
movsl
jmp
stc
adc
push
mov
lock
add
add
shlb
mov
mov
shll
add
add
xchg
out
push
xchg
mov
pop
dec
dec
pop
sahf
lret
rcl
adc
mov
insl
jbe
push
jno
jnp
and
xchg
int
in
dec
mov
cmpl
add
rcrb
aam
mov
inc
inc
mov
jmp
call
add
into
ljmp
add
mov
ficomps
scas
in
movsl
push
inc
fidivrl
outsb
inc
mov
test
xor
sbb
pop
ss
mov
add
add
lcall
add
sub
fcmovnu
inc
mov
add
push
loopne
mov
adc
mov
add
add
cmp
pop
or
adc
add
inc
fstl
or
xchg
in
cmp
fwait
rcrl
xlat
insl
ret
adc
mov
ret
xchg
rolb
add
add
jno
add
add
movsl
sahf
mov
add
add
dec
hlt
cmp
aaa
mov
insb
mov
movsb
out
cmp
dec
imul
dec
add
add
aas
gs
jge
insb
mov
sti
aas
and
add
add
icebp
mov
cs
pop
add
roll
mov
add
add
mov
xchg
scas
jbe
dec
add
add
inc
xor
xor
add
in
fisttpl
add
add
rcl
and
add
add
xchg
mov
in
enter
pop
sarl
mov
add
add
test
aam
imul
cmp
xchg
sarb
add
add
enter
fistl
vunpckhps
jno
inc
mov
leave
in
or
stos
add
sub
add
add
dec
mov
rorb
test
addb
iret
pop
sti
mov
pusha
add
add
rcll
pop
movsb
adc
mov
and
add
add
lds
adc
ret
adc
add
add
mov
gs
xchg
pop
and
adc
stos
sbb
xchg
adc
add
aad
ljmp
nop
adc
sahf
xchg
idiv
mov
sbb
jge
push
cmp
add
and
add
mov
out
jmp
cmp
sbbl
sti
mov
iret
xchg
sbb
imul
add
test
cmp
fldt
xorl
enter
dec
lss
add
add
xchg
xchg
xor
lahf
fs
add
add
sar
inc
add
add
out
ret
pop
push
fwait
lods
xor
inc
imul
xor
mov
shl
push
leave
xor
int3
int3
fildll
jmp
xor
add
add
insl
sbb
mov
or
dec
add
add
add
mov
mov
lods
sbb
push
js
fmul
pop
mov
and
add
add
add
add
std
cli
insl
insl
imul
and
mov
lock
enter
out
or
shrb
stos
xchg
add
ficompl
shll
add
add
pop
adc
mov
mov
jns
maskmovq
testl
movsb
mov
pop
test
push
mov
stc
cmp
fmuls
add
jnp
test
add
lret
cltd
fldl
add
add
sub
testb
pop
add
jbe
inc
add
add
dec
mov
add
and
add
gs
arpl
add
add
inc
dec
mov
add
add
add
add
add
ljmp
mov
cmc
mov
add
dec
mov
out
add
add
mov
push
pop
enter
or
xchg
mov
adc
ret
cwtl
sarl
mov
aad
xchg
test
jg
ljmp
mov
lahf
insl
popf
inc
repnz
and
add
add
dec
mov
push
sarl
inc
mov
sub
stc
jne
nop
push
fcomps
mov
add
add
sub
add
add
sbb
cld
mov
adc
mov
lcall
xchg
cmp
rcrb
lahf
ljmp
shll
out
push
aas
stos
lock
jecxz
test
dec
and
loope
adc
shrl
add
add
nop
fidivrs
jbe
mov
out
dec
pop
cmp
fimull
or
add
add
arpl
jbe
out
add
add
add
sbb
out
jne
stc
mulb
or
into
xor
adc
ss
call
xchg
adc
scas
pop
dec
add
add
jge
xor
out
fidivrl
add
add
cltd
jbe
mov
jo
and
add
add
add
add
ljmp
push
xchg
imul
pop
lock
add
add
mov
decl
add
add
lock
faddl
xchg
push
lret
push
jmp
add
jge
xchg
xchg
ret
rcll
xchg
outsb
repz
xchg
in
nop
push
shll
inc
les
add
add
mov
xchg
mov
sbb
mov
jns
xchg
test
jmp
dec
add
add
repz
xor
add
add
and
push
xlat
mov
add
into
lock
loope
adc
ds
and
add
add
cli
inc
into
mov
sub
add
into
mov
sbb
add
add
add
sub
push
arpl
push
aas
insb
mov
mov
gs
mov
dec
add
add
sub
int
std
lods
pushf
cmovb
mov
sub
xor
lds
test
add
add
push
sub
imul
loop
decb
mov
std
iret
jns
xlat
fisttpll
repz
out
imul
mov
aad
pushf
inc
cmc
cli
cmp
add
mov
push
std
sti
xlat
sbb
xchg
push
stos
mov
adc
sub
sbb
add
add
nop
sbb
push
xchg
imul
mov
pop
shrl
dec
add
add
int
mov
aam
ficompl
sbb
xchg
and
pop
xlat
and
add
add
ret
pop
push
push
cwtl
jo
jne
arpl
sub
mov
rep
push
sbb
inc
test
xorb
mov
add
add
cs
int
adc
ds
cmpsl
jae
pop
mov
stos
call
mov
fwait
clc
test
pop
scas
add
add
add
add
push
insb
mov
jns
idivb
jecxz
repz
std
mov
lods
iret
js
sahf
inc
sahf
imul
frstor
je
add
add
add
add
or
add
add
dec
mov
adc
add
sub
in
das
xchg
mov
add
add
dec
add
add
mov
add
add
add
arpl
add
out
or
xchg
in
xchg
jmp
jecxz
add
add
mov
mov
add
add
add
lods
xor
cmp
fdivs
repnz
imul
mov
add
pusha
add
add
and
add
add
xchg
cwtl
fidivrs
add
add
add
pop
jnp
or
aas
jl
push
mov
add
add
in
pushl
add
pop
lock
outsb
xor
mov
or
add
add
jno
mov
add
add
add
mov
push
and
mov
bound
add
add
push
add
ficomps
adc
in
or
add
add
add
mov
pushf
mov
add
mov
cs
pop
xchg
pop
xchg
xor
add
inc
je
je
in
push
je
movsb
scas
xchg
into
or
jmp
dec
enter
add
add
addr16
fmuls
add
add
sub
add
add
mov
shll
xchg
add
add
sbb
out
pop
cs
xchg
incl
mov
mov
mov
pop
in
hlt
xchg
es
das
mov
rcrb
mov
ret
fidivs
mov
jbe
minps
xlat
mov
in
pop
cmp
add
xor
add
jp
fildl
repnz
pop
push
add
add
pop
jb
addl
or
xor
add
add
add
nop
pop
pusha
mov
jne
inc
bound
mov
ret
mull
test
xchg
dec
jg
sub
cmpsb
bound
add
cli
adc
in
mov
mov
add
add
add
sub
mov
pusha
mov
add
mov
mov
repz
and
add
add
mov
xor
aam
dec
add
add
and
add
add
add
add
lods
aas
mov
jg
xor
xchg
jb
push
jl
mov
xlat
std
imul
imul
add
subl
je
mov
mov
movsl
inc
and
into
jns
ss
mov
jl
dec
xchg
jno
pusha
mov
enter
jb
fldcw
adcb
lret
add
add
pop
ss
adc
or
lret
stc
insl
cmp
add
scas
test
addps
add
adc
aam
sub
sahf
shrb
add
gs
mov
int3
mov
mov
add
je
scas
xchg
sbb
clc
gs
testl
and
negb
pusha
mov
inc
shlb
xchg
mov
add
add
pop
pushf
fisubrs
mov
add
add
add
mov
push
jge
add
add
out
dec
cltd
maskmovq
imull
dec
or
cmc
sahf
vmread
adc
mov
cli
mov
mov
std
and
sub
add
add
inc
sbb
push
insb
mov
les
sub
mov
popa
movsl
adc
mov
dec
ficoms
xchg
outsl
dec
pop
mov
add
add
lock
daa
push
popa
lcall
in
add
add
add
repz
push
cmp
stos
xor
jns
repnz
cwtl
cmp
out
iret
outsl
fisttps
add
push
pushf
out
out
xchg
or
add
add
sar
daa
xlat
push
jae
lods
jo
clc
and
cmpsb
scas
cmpsl
jns
js
in
cli
cmpl
leave
mov
add
add
mov
jecxz
fisubl
pop
aas
sub
add
lret
cmp
mov
xor
lahf
pushf
xchg
push
testb
popf
push
mov
popa
cli
clc
inc
add
add
cs
jecxz
inc
lahf
push
mov
mov
inc
sahf
dec
push
lcall
sub
cmp
add
add
mov
push
ss
jle
adc
add
enter
mov
jecxz
movsb
decb
in
cmp
roll
add
fiaddl
xchg
or
add
add
idivl
add
aad
xor
fs
add
and
add
add
pop
sub
sbb
dec
lret
lock
shll
pop
add
add
add
in
sub
add
jb
loope
sub
add
add
add
call
add
dec
cmpsl
ret
mov
or
add
add
add
add
test
mov
imul
stc
and
into
pop
dec
add
add
sub
pushf
cmp
add
pop
push
jbe
cs
mov
lahf
xchg
mov
mov
mov
fnsave
mov
add
push
dec
push
jle
mov
sbb
push
int
ficompl
jnp
cmc
dec
dec
rcl
mov
push
xchg
add
add
repnz
mov
jecxz
inc
sub
stos
lock
stc
hlt
sub
in
mov
popf
or
iret
test
mov
jecxz
popa
dec
add
add
jmp
daa
cmp
test
shrb
aas
popa
sbb
mov
outsb
cltd
out
mov
cltd
push
rcll
rcll
dec
mov
std
jb
add
add
add
scas
xchg
xor
push
cmp
inc
je
ficomps
pop
sub
iret
jp
mov
nop
add
call
ret
out
repz
lock
loope
cmpsb
pop
push
or
data16
xlat
push
insb
mov
xchg
sarl
int3
sbb
push
lahf
adc
mov
hlt
mov
cmpb
add
aaa
mulb
aam
adc
lret
cld
ljmp
loop
push
je
jg
cmp
add
orl
ret
ds
add
add
sti
xadd
push
mov
add
add
add
or
add
add
pop
cmp
pusha
mov
add
rorb
stc
sahf
clc
xchg
adc
pushf
push
lds
lret
add
add
sbb
add
test
adc
shl
mov
add
add
add
outsl
cmp
rcrl
rol
fadd
in
dec
or
add
jb
subl
add
add
inc
push
dec
sarb
add
add
add
add
add
add
add
add
add
push
imul
call
add
aaa
sbb
pushf
xlat
rol
sub
mov
mov
cmp
add
movsl
cmpsl
cwtl
js
test
test
movsb
mov
ds
push
add
mov
inc
dec
imul
add
pop
push
mov
stos
sbb
fdivl
dec
int
dec
mov
das
push
enter
ficompl
out
xor
jns
data16
daa
or
add
add
mov
lock
repz
xorb
mov
or
pop
popf
jns
orl
mov
daa
pusha
add
add
xor
fidivl
mov
add
imul
loope
in
subb
mov
ret
mov
add
jno
inc
mov
mov
stc
shlb
mov
pop
movsb
pushf
xlat
push
jmp
xor
xorb
add
add
add
add
popf
mov
shr
inc
mov
cmc
shrb
inc
mov
push
xchg
pusha
add
add
dec
add
add
cltd
mov
fstl
push
or
xchg
fistps
push
pusha
add
add
sbb
add
add
iret
dec
jns
xor
add
add
int
xchg
add
sti
jl
xchg
incb
add
add
add
cwtl
sbb
cmpsl
cmp
mov
cmpsb
jno
into
mov
mov
imul
ljmp
add
insb
add
add
mov
out
aas
icebp
pop
inc
xor
ljmp
pop
pop
jno
sarb
push
or
sbb
sub
insl
aad
xor
mov
push
es
mov
int
pop
xchg
xchg
inc
dec
nop
jo
pop
jnp
jo
pop
out
mov
je
std
inc
xchg
iret
mov
mov
jg
stos
flds
cmp
add
sahf
mov
add
add
or
or
dec
out
ror
pop
sbb
add
add
jns
mov
add
add
jns
testb
add
dec
inc
xchg
mov
pop
test
test
mov
mov
add
adc
mov
popf
and
add
mov
cmpb
add
add
fcoms
and
mov
pusha
mov
fnstsw
bound
arpl
and
push
addr16
jae
mov
mov
add
mov
mov
daa
outsl
into
dec
pusha
mov
adc
iret
mov
ret
cmp
pop
push
cwtl
hlt
pop
and
add
add
push
xor
aam
cmpsl
stc
jmp
mov
add
add
cmp
push
push
mov
jge
fistl
nop
add
xchg
mov
sar
push
dec
push
loopne
out
fdivrl
add
add
test
cmp
stc
negb
idivl
xor
sbbb
adc
push
rclb
ret
jp
sbb
shll
ret
mov
add
pusha
add
add
pushf
adc
adc
sbb
fcompl
out
movsb
jne
stos
dec
add
or
add
add
and
add
add
cmp
push
inc
fidivrs
jp
sti
adc
lahf
aad
push
mov
jmp
and
cld
pop
into
sbbb
or
mov
pop
mov
add
add
cmpl
xor
movsl
lret
or
push
jmp
mov
cmpsl
lret
cmc
inc
inc
jae
jp
test
adcl
add
add
add
xlat
cmp
popf
pusha
add
add
iret
enter
xchg
cmp
add
add
sbb
fsubrp
shrb
add
stos
ret
mov
jae
imul
orps
xor
and
adc
xchg
stos
jge
cwtl
push
mov
or
mov
mov
xchg
cld
inc
pop
mov
lret
test
cmp
lret
in
mov
add
add
push
push
hlt
sahf
sbb
out
jnp
rcl
sbb
sub
xor
mov
mov
jle
ja
mov
mov
mov
and
xchg
and
cmp
push
xor
jne
add
add
add
add
push
fisttpll
cmpsb
inc
ret
hlt
dec
xchg
pop
stos
pop
idivb
xrelease
add
or
test
rcl
add
add
add
add
fistl
mov
outsb
nop
jp
lds
or
aam
mov
cmp
cmpsb
and
test
and
mov
movsb
das
int3
inc
or
sbb
sbb
mov
stc
mov
add
add
add
add
add
mov
fisttpl
inc
mov
sub
add
add
add
mov
imul
pop
dec
add
add
mov
mov
add
inc
movsb
xchg
stos
jecxz
iret
cmp
into
pusha
add
add
cmc
aad
ds
out
ss
cmp
sub
add
add
fcoml
pop
or
add
add
push
leave
jae
push
pop
inc
mov
add
add
sub
add
add
cld
mov
mov
mov
jne
loope
pop
push
and
leave
jle
mov
ret
dec
test
aam
add
add
add
xorl
cld
xor
sbb
mov
inc
js
fidivrl
mov
inc
add
add
push
icebp
mov
rolb
add
cmp
push
lea
add
call
cmp
add
out
insl
mov
dec
mov
test
push
shlb
ret
sub
add
add
pop
cmp
xor
imul
or
or
pop
sbb
mov
add
add
gs
sbb
push
into
add
into
jo
test
ret
jmp
fisttpl
add
add
mov
into
inc
add
add
sub
dec
and
add
add
sub
cmc
jl
jle
mov
or
das
xor
dec
add
add
fistps
cmp
mov
stc
adcb
leave
xor
or
sbb
fstl
sub
test
push
add
and
imul
mov
jge
sub
add
add
add
fimuls
add
add
push
popf
sahf
sub
cwtl
hlt
in
lock
add
add
push
sbb
leave
imul
repz
add
add
add
subb
fiadds
or
xchg
xchg
filds
das
and
add
add
mov
into
mov
ja
bound
lcall
jle
inc
push
inc
mov
or
push
faddl
nop
jp
outsl
sbb
adc
movsl
adc
adc
out
add
add
add
int3
lods
inc
mov
mov
pop
xchg
dec
add
add
rcrb
dec
out
pop
mov
sub
push
cmp
adc
cmpsb
adc
sbb
add
add
sub
jns
mov
mov
negl
add
push
add
add
mov
mov
fstpt
sub
mov
mov
in
mov
push
scas
pop
sarl
dec
sub
lret
add
add
mov
mov
add
add
nop
les
mov
enter
popl
dec
test
add
out
and
add
add
cmp
insb
add
add
hlt
push
sbb
call
int
imul
cmp
push
popa
dec
or
scas
mov
add
mov
xchg
mov
xchg
push
add
pop
in
in
std
fcoml
loopne
pushf
insb
mov
mov
add
add
loope
in
push
add
add
add
inc
push
cmp
push
comiss
sub
add
add
lock
mov
test
and
add
repnz
inc
dec
jg
jle
stc
xor
add
cmpsl
push
imul
enter
fstp
sarl
lret
cltd
xor
jl
and
mov
sub
add
add
jne
add
test
sbb
add
add
cmp
push
call
inc
mov
xor
add
shrl
add
sub
repz
inc
rcrl
inc
xchg
imul
and
add
shlb
add
add
mov
fsub
shrb
daa
add
fmuls
repz
ss
xchg
dec
repnz
ljmp
and
push
xor
scas
je
rorb
jl
outsb
inc
inc
add
add
inc
sbb
sub
add
add
cmp
fsubl
push
sbb
lcall
ret
nop
inc
jne
rcrb
add
add
test
in
add
add
add
mov
add
add
ret
xchg
out
call
and
add
add
sub
jg
test
pop
adc
ret
add
loope
jb
jl
mov
lahf
jle
adc
or
or
es
mov
cmp
xchg
cmp
cmp
std
sub
mov
adc
push
push
push
adc
xor
movsl
mov
bound
syscall
insb
mov
jne
lret
jge
push
sub
cltd
or
loop
mov
fcoml
xchg
cmc
adc
push
mov
fldl
out
push
push
lret
push
in
aad
out
or
add
add
add
add
sub
add
add
mov
jmp
push
fwait
pushf
mov
lods
ljmp
jo
jle
into
inc
inc
add
lret
out
sub
add
add
xchg
notb
faddp
pop
add
adc
add
and
xchg
dec
std
sub
or
add
add
lcall
add
add
lods
dec
mov
cld
ficoms
movsb
xor
sbb
pop
outsl
sbb
xor
jae
inc
mov
xor
sub
icebp
inc
add
add
jmp
add
add
cmp
ficoms
xchg
sbb
inc
xchg
mov
push
mov
test
xor
adcl
push
xchg
pop
sti
and
add
add
imul
or
std
cwtl
lahf
ror
adc
pushf
add
add
add
add
lahf
sahf
fsts
jno
ja
push
lods
test
cmp
stos
ret
adc
adc
add
daa
and
jle
dec
adc
mov
out
dec
mov
es
cltd
inc
mov
idivb
add
into
cmp
out
mov
push
dec
sub
in
mov
jecxz
xchg
inc
mov
jnp
xor
add
add
add
or
sbb
add
mov
adc
push
mov
xor
adc
rolb
jnp
push
jne
add
add
jp
nop
xor
mov
test
add
add
add
add
jb
sbb
fwait
jp
pop
cmpsb
sub
mov
popa
jae
push
iret
adcl
in
pop
add
add
add
add
mov
add
imulb
add
cmpl
add
add
lret
sub
add
add
jg
jns
ret
mov
lods
icebp
bnd
push
jmp
add
pop
mov
sub
mov
add
mov
movsl
fsubrp
cmp
mov
add
add
cmc
lret
imul
addr16
mov
and
add
add
popa
pushf
or
add
add
loope
aaa
shll
add
add
mov
jnp
cmpsb
mov
inc
lods
jns
loope
or
scas
aam
adc
sub
add
add
insl
push
bound
dec
fbstp
outsl
xchg
jnp
add
add
sbb
dec
rcll
jno
movsb
push
negb
int
push
pop
and
mov
mov
add
js
mov
out
mov
inc
jecxz
mov
dec
add
add
add
iret
jl
outsl
scas
adc
enter
and
loope
and
add
add
dec
or
mov
push
movsl
popa
mov
jl
push
loope
jnp
lcall
ljmp
in
cmp
mov
mov
add
aad
xchg
jae
mov
add
push
jae
rcrb
dec
mov
insl
push
in
cmpsb
dec
push
testb
scas
rorl
iret
pushl
sbb
cmpsl
and
enter
add
add
pop
xchg
aam
ja
cli
stc
xor
repnz
xor
xor
adc
cld
pop
test
in
xchg
mov
jg
jns
test
and
add
add
sub
leave
add
add
add
jae
aad
cmp
insl
sbb
jae
jnp
adc
and
add
add
xchg
mov
add
add
jne
cltd
sbbb
mov
in
xor
mov
jg
and
imull
mov
dec
add
add
mov
xchg
jo
inc
jbe,pt
pop
or
mov
add
add
add
sub
push
jg
jge
mov
mov
call
pop
or
movsb
icebp
xchg
inc
out
sti
push
je
mov
es
xchg
subb
mov
gs
adc
inc
nop
shll
mov
imul
fsubrl
jl
pop
leave
pushf
mov
add
dec
lahf
xchg
nop
scas
pop
popf
jo
mov
lods
shrb
fidivrs
dec
jbe
cmc
pop
inc
or
and
mov
add
inc
pop
adc
cli
push
inc
pop
inc
popa
mov
add
pop
dec
add
add
jmp
adc
pop
hlt
mov
add
mov
jecxz
add
add
js
ds
xchg
and
xor
jne
cmp
ljmp
bound
inc
mov
xchg
xchg
das
incb
add
add
cld
movl
ret
mov
cmp
stos
dec
sti
dec
ret
and
pop
inc
pop
sub
testl
jne
dec
in
mulb
push
imul
rorb
add
cmp
pop
mov
mov
adc
rcrl
push
pop
jmp
outsl
jne
adc
out
jae
add
add
stc
inc
cs
adc
rcrl
dec
sbb
sti
cwtl
mov
adc
andl
rorb
push
pusha
add
add
add
iret
dec
xchg
adc
hlt
test
sbb
cltd
and
mov
and
fsubr
or
add
add
mov
mov
mov
mov
xor
gs
rorb
das
aam
mov
mov
jb
stc
sub
add
fnstsw
cmc
outsb
dec
sbb
and
test
les
sbb
inc
mov
lods
push
in
cmp
lods
imul
sub
add
add
sub
mov
add
cmpsl
jb
inc
pop
jnp
shlb
xor
lcall
addr16
mov
add
add
in
mov
bound
hlt
push
lret
mov
mov
repz
add
add
xor
jb
testl
mov
ret
jae
ds
enter
das
dec
lods
sbb
loope
pop
pop
outsb
subb
movsl
les
add
add
icebp
lds
add
xor
cld
cmpsb
cmp
add
mov
js
iret
jl
mov
add
add
add
jg
loope
jmp
iret
jmp
pop
jg
scas
ds
lods
lods
sub
mov
mov
mov
aam
add
add
add
xchg
orb
add
lahf
je
mov
push
inc
mov
mov
jbe
frstor
lahf
mov
adc
pop
pop
scas
cmc
sbb
add
aaa
cmp
fcomi
leave
mov
add
repnz
leave
std
jno
mov
mov
and
add
add
imul
ret
jmp
and
add
add
add
cltd
adc
cmc
or
mov
and
add
add
iret
xchg
mov
sbb
add
add
adc
mov
addr16
mov
jne
dec
add
add
fs
sub
xchg
jecxz
jecxz
sub
xor
push
inc
lds
loope
lods
push
popf
pop
push
lds
mov
fnstenv
mov
add
jo
int
xchg
clc
aam
loope
mov
pop
in
push
movsl
repz
in
loope
mov
in
scas
ret
dec
add
add
jnp
adc
add
add
iret
lods
add
add
push
or
adc
popa
stos
xchg
cltd
sub
pusha
mov
mov
inc
add
add
pop
push
adc
add
add
sub
inc
add
add
int
js
stos
and
pushf
cli
mov
mov
ret
loopne
dec
pushf
pop
pushf
lods
mov
push
mov
add
std
inc
lahf
mov
pop
es
mov
imul
sahf
stos
and
pop
mov
jecxz
lock
xor
sbb
inc
mov
lods
loope
subb
add
add
jp
lock
shll
ss
call
mov
insb
add
add
sbb
pop
mov
push
sti
sbb
xor
jp
call
pop
es
pusha
add
add
inc
inc
xchg
pop
sub
and
xchg
pop
jne
cld
mov
or
cmp
push
scas
aad
jg
fisttps
mov
add
add
xchg
in
jbe
pop
in
negb
shll
shll
mov
or
xchg
lock
scas
clc
push
mov
add
add
pop
adcl
jmp
add
xor
sbb
fwait
fwait
push
cwtl
jg
cmpb
shlb
inc
add
add
hlt
ss
test
fnstenv
or
mov
xchg
outsl
insl
fcmovnu
andb
shrb
enter
xor
add
add
add
out
clc
jbe
push
pop
pop
lea
out
orl
fmuls
add
add
sahf
loope
nop
mov
arpl
ja
ja
dec
loop
cwtl
cmp
stos
dec
arpl
add
add
pop
fs
jns
das
xchg
xor
mov
inc
pop
mov
cmp
add
add
mov
push
mov
and
add
add
xchg
loop
hlt
jo
sub
cld
shr
ds
out
cmc
in
mov
in
add
dec
shl
adc
inc
lahf
xchg
push
arpl
add
add
leave
mov
test
xchg
mov
push
and
lret
gs
jl
imul
stc
lock
mov
add
add
les
lods
ja
xchg
adc
clc
in
xchg
cmp
add
daa
mov
lods
push
cmp
pop
and
inc
push
inc
js
push
leave
pop
mov
mov
repz
in
sbb
dec
jo
cli
pop
out
pushf
and
add
add
mov
xchg
das
push
aas
cltd
xor
dec
or
add
add
dec
clc
xor
or
mov
aam
sub
add
xor
test
push
icebp
lret
cmp
imul
js
inc
push
ljmp
add
add
add
add
jnp
xor
outsb
add
mov
andl
xor
add
add
jmp
aas
xchg
lret
or
sbbl
add
add
mov
add
dec
scas
mov
icebp
cwtl
push
lret
mov
in
pushf
xor
mov
rorl
mov
loopne
mov
lea
sysret
cmp
ja
mov
dec
jnp
jp
shlb
test
pop
in
movsl
rorl
add
add
adc
lds
stos
lock
imull
movsl
cmc
sti
rorl
arpl
cwtl
mov
dec
insb
add
add
test
outsb
fs
xlat
sbb
repnz
mov
popf
cmp
add
add
fcomps
nop
cmc
lds
rclb
aam
enter
xchg
xor
js
mov
pop
lds
gs
out
in
icebp
stos
popf
aam
add
mov
add
add
inc
sub
push
movsl
andl
add
adc
leave
pop
or
add
add
neg
decb
fwait
lea
push
mov
movsb
mov
sub
add
add
sbb
daa
jge
push
pop
sbb
mov
xchg
add
add
add
jbe
xchg
sbb
sbb
mov
rcll
add
add
add
dec
mov
mov
data16
cwtl
jne
sbb
mov
jl
imul
aam
xor
shrb
xor
mov
cmp
jg
xor
jae
xor
xor
mov
dec
jnp
or
add
add
ss
cmp
add
add
add
add
inc
inc
push
xor
cli
popa
lahf
leave
jge
inc
add
add
or
add
add
mov
adc
rcll
add
xchg
mov
xchg
mov
aad
jne
add
add
pop
sbb
adc
push
mov
sti
pop
in
jg
movsl
imul
cwtl
jecxz
xchg
fists
add
add
add
shll
push
lods
fisttpl
and
mov
fwait
and
jae
adc
cmc
lcall
jnp
dec
mov
cmc
pop
or
scas
mov
in
ja
nop
out
jg
and
jns
test
shll
mov
mov
movsb
adc
ja
xchg
mov
mov
and
mov
push
push
cmpsl
fadds
popa
jbe
cmp
add
add
cmpsb
rcrb
into
and
roll
pusha
mov
cltd
dec
mov
outsl
mov
icebp
jb
pop
xchg
push
push
rcrl
add
add
cltd
xchg
aad
add
jle
scas
sub
pop
mov
mov
scas
sub
imul
dec
cs
cmpb
popl
add
mov
add
add
inc
or
sbb
mov
bound
insb
mov
lds
inc
mov
popa
xchg
lods
push
or
mov
push
inc
and
fistpll
ljmp
fstpt
js
inc
xchg
fdivl
pop
dec
add
push
jb
loopne
and
pop
mov
mov
add
add
repnz
jb
xor
roll
adc
in
add
add
bnd
dec
mov
insb
add
add
add
push
daa
cmp
popa
mov
add
add
fimuls
outsb
fwait
cld
jmp
mov
insb
mov
in
repnz
rcl
xor
ja
mov
mov
add
pop
out
in
dec
cmpsb
lret
clc
lods
xor
pop
mov
sbb
adc
imul
add
lret
in
int3
loop
lods
js
cli
dec
xchg
jmp
add
push
mov
dec
add
add
add
arpl
outsb
rcrb
mov
add
inc
pop
jl
mov
lods
mov
fwait
add
add
add
add
add
dec
xor
jge,pn
or
mov
xchg
jmp
cli
jle
ja
pop
dec
mov
iret
xchg
stc
add
sbb
add
add
add
add
add
icebp
mov
sub
cs
cmp
test
add
add
cmp
dec
or
iret
repnz
clc
je
inc
notb
push
add
add
add
cmp
push
inc
mov
add
add
xor
mov
ss
stos
scas
lret
aaa
pop
leave
jno
aad
cmp
push
pop
inc
punpckhdq
cmp
sub
mov
cmp
add
add
push
lods
lods
fisubs
add
pop
insb
add
add
int3
dec
aam
xchg
fwait
sbb
iret
test
int
inc
mov
adc
sbb
push
popf
sbb
repz
or
add
add
cld
nop
inc
mov
jnp
jno
repnz
cld
into
xchg
stos
dec
add
add
imul
push
or
push
popf
inc
in
and
cmp
adc
dec
mov
fadds
sub
or
scas
inc
and
cmp
shlb
outsl
jg
add
add
std
jecxz
adc
ficompl
cli
out
pop
testl
or
add
add
xchg
pop
or
add
add
mov
int
or
xchg
daa
jp
jbe
cld
and
hlt
mov
add
add
shrl
imul
push
mov
cmp
es
lods
rclb
push
jo
imul
cld
ret
jle
int3
push
pop
sub
sti
call
fdivrs
add
inc
xchg
pop
jae
xor
mov
adc
pusha
mov
mov
or
add
add
add
add
add
jecxz
out
jp
sub
add
add
mov
sub
add
add
add
add
pusha
add
add
in
add
push
dec
jae
fisubrs
cmpsl
inc
mov
xor
mov
out
mov
mov
punpcklbw
add
add
mov
dec
out
lret
fucomp
jno
fsub
icebp
xor
int3
movsb
dec
push
mov
jl
add
add
iret
mov
ret
enter
add
rcl
stos
add
aaa
test
mov
jns
scas
push
into
jge
flds
add
add
sbb
add
add
mov
rcl
mov
inc
xchg
jmp
add
jne
decb
jmp
add
add
int3
xchg
sub
add
add
xor
mov
int3
stos
add
add
dec
mov
test
mov
rorl
push
xchg
fistpll
cmp
into
scas
fadd
mov
loopw
mov
add
add
ror
call
pop
jmp
outsl
pop
and
imul
mov
cmp
imul
ret
faddl
add
add
lock
call
mov
pop
fistl
dec
in
arpl
call
add
jo
out
cs
jmp
add
push
imul
test
scas
orl
inc
cmc
jno
inc
out
jmp
add
add
enter
add
add
xor
add
add
add
popa
outsb
fcomps
add
cmp
push
xor
or
rol
xchg
add
and
add
add
sbb
or
add
add
xor
sbb
add
mov
jl
inc
dec
mov
scas
push
imul
or
add
add
adc
cld
inc
pusha
add
add
sti
clc
out
mov
jle
push
mov
push
dec
mov
fcmovne
push
js
pop
ret
fs
enter
fcomi
or
add
add
dec
mov
mov
add
stos
fsubs
xor
adc
add
add
aas
and
add
add
push
lods
dec
adc
add
mov
stos
mov
sub
add
adc
lods
icebp
clc
sbb
jb
mov
insl
xchg
mov
bnd
movsb
hlt
cld
cmpsl
cltd
rorl
add
add
pop
fstpt
shlb
add
add
imul
dec
fucomip
ljmp
add
imul
add
push
or
add
add
add
ja
repnz
or
ljmp
sbb
mov
mov
out
and
sti
div
subl
inc
xlat
repz
ja
stc
sub
push
mov
add
add
loop
insb
mov
dec
mov
bound
mov
cmp
add
mov
testl
and
imul
cmpl
les
xchg
gs
inc
bound
mov
subb
nop
push
xor
jae
adc
push
add
add
add
in
xchg
mov
jecxz
fcomip
mov
jne
sbb
loope
lret
roll
or
push
lret
int3
pop
iret
mov
aam
sbb
inc
dec
add
add
push
and
bound
mov
pusha
mov
add
add
add
out
xchg
and
fiadds
mov
aaa
lods
pop
sbb
sbb
jne
call
add
add
sub
jbe
in
xchg
adc
dec
add
add
sti
lods
push
adc
adc
add
add
mov
repnz
mov
mov
add
add
scas
add
dec
in
out
gs
mov
xor
add
stos
lret
xchg
dec
add
add
jp
rcl
js
xchg
in
push
add
mov
mov
arpl
stos
cli
int3
mov
nop
inc
cld
xchg
cli
pushf
cmc
loope,pt
adc
sahf
sub
mov
test
sub
es
dec
mov
fdivl
aaa
mov
shrb
xchg
dec
xor
add
push
shrb
add
add
arpl
ja
repz
pop
mov
inc
jne
std
xchg
xchg
ficompl
add
aad
subl
jno
in
ret
test
add
add
pop
fistps
add
add
aaa
fisttps
add
add
jge
pusha
mov
ret
les
je
xlat
pop
outsl
sti
jae
mov
jb
add
add
decb
sbb
dec
push
adc
mov
imul
xchg
mov
xchg
add
iret
mov
ja
push
loopne
sti
jo
enter
adc
add
sbb
enter
pushf
nop
jl
sti
lods
mov
pop
into
xchg
rcll
sbb
xchg
pop
daa
dec
dec
mov
cmc
pop
dec
xchg
sarl
xor
xchg
fwait
push
test
or
add
add
push
fcoms
addr16
push
pusha
add
add
sbb
aam
mov
sbb
add
add
add
loop
adc
rolb
mov
jno
sbb
aas
hlt
xchg
add
les
jmp
in
out
cmpsb
js
cmpsb
jl
dec
or
inc
sbb
out
imul
mov
cmp
cmp
mov
out
iret
jae
jl
dec
inc
das
fcmovu
cld
xor
mov
dec
stc
movsl
ljmp
mov
daa
push
nop
stc
mov
push
xchg
or
fstl
jo
pushf
jb
inc
xor
sbb
inc
xchg
add
dec
inc
ljmp
adc
test
dec
outsl
mov
add
add
mov
leave
std
sbb
push
out
andl
add
jl
ja
dec
mov
inc
mov
sbb
add
add
add
mov
mov
sub
dec
loop
arpl
test
jbe
pop
mov
cmp
xchg
jle
pop
pushl
sub
add
add
jbe
jno
pop
inc
xchg
addr16
jecxz
popf
mov
add
add
adc
xor
movsl
mov
add
add
jg
js
xchg
test
ja
or
pop
cmp
rclb
xor
cmp
sbbl
fistpl
clc
mov
add
add
mov
outsl
mov
decb
mov
shlb
out
add
data16
push
bnd
pop
cmc
lcall
fistpl
sub
jnp
dec
adc
inc
inc
cmp
es
push
scas
mov
scas
popa
in
lods
ljmp
dec
add
add
shrl
adcb
sbb
fdivrl
or
add
add
das
cmp
sahf
inc
mov
enter
cmp
add
add
add
add
add
add
out
cmp
in
push
in
mov
call
add
mov
adc
add
add
popa
adc
jge
or
jae
inc
xchg
add
ljmp
inc
inc
add
add
in
add
add
enter
sub
add
add
call
stc
or
rclb
adc
xor
mov
jge
pop
test
ss
inc
add
add
sbbl
mov
add
add
xchg
dec
movsl
inc
add
add
fcomip
scas
rcl
push
and
push
cwtl
add
insl
dec
add
add
pop
push
sahf
cmp
fisttpl
sbb
lret
fbld
cmpb
pop
shrb
add
jg
add
add
lcall
xor
and
add
xchg
fists
int
or
add
add
jbe
lds
mov
add
add
or
add
add
lock
lret
dec
pmaxub
popf
mov
loopne
pop
into
rclb
shll
push
sahf
mov
xchg
push
pop
loopne
mov
inc
jg
mov
add
rorl
imul
sarb
lret
adc
imul
add
sub
pop
inc
loope
sub
add
add
dec
dec
add
add
shr
pop
xchg
push
add
add
add
sti
ss
and
add
add
mov
add
jnp
push
fsubrs
xor
hlt
popa
lock
jb
mov
lret
jge
aaa
or
cmpsb
cmp
or
pop
mov
or
incb
add
add
add
jb
pop
fistpl
jmp
mov
jge
xchg
insl
call
mov
add
add
add
xor
add
add
outsl
push
mov
pop
dec
sub
add
add
outsl
scas
and
fistps
jnp
adc
cmp
mov
push
push
adc
andl
add
add
jecxz
lahf
incl
add
dec
mov
adc
mov
xor
lahf
pop
mov
fldcw
add
add
scas
adc
add
add
iret
cmp
and
add
add
sub
stos
mov
inc
cmp
mov
and
add
popa
sbb
aaa
cmp
cld
add
and
xor
pop
imul
pop
sbb
mov
adc
mov
test
and
sub
xchg
inc
sbb
gs
sbb
add
add
pop
stos
fs
pop
mov
inc
mov
add
inc
lea
or
add
add
sti
mov
xor
add
adc
mov
fdivrs
in
popa
push
cmpsb
xor
push
inc
mov
andb
dec
pusha
add
add
and
add
mov
add
add
popf
inc
aad
mov
fdivrs
adc
jnp
sbb
sub
add
add
sub
inc
mov
mov
push
xor
add
add
ljmp
mov
push
cwtl
dec
mov
pop
push
dec
jp
dec
add
add
jg
je
pop
pushf
enter
sbbl
dec
add
add
rorl
add
out
fwait
mov
shlb
mov
lahf
xchg
jmp
mov
xor
iret
stos
jnp
data16
cmpsb
test
les
add
xor
push
bound
add
gs
fimull
jae
mov
aaa
cmpsb
mov
imul
add
sub
add
add
xchg
loope
sarl
cltd
mov
insl
cltd
mov
ret
mov
lret
insb
add
add
stc
ret
lock
inc
inc
out
xor
iret
or
xor
mul
add
das
jp
sub
mov
cld
push
out
push
push
jle
sub
insl
mov
xchg
cmp
and
add
add
cmp
outsl
into
mov
sbb
aam
sbb
add
je
lock
test
adcl
add
add
pop
sarl
out
sbb
mov
mov
add
add
mov
test
pop
mov
call
loope
rcr
es
fistpl
in
pop
ja
add
add
mov
fs
sub
dec
repz
repnz
inc
mov
lret
test
outsl
movsl
or
ljmp
push
push
out
test
les
mov
push
fcoml
add
jp
or
pop
mov
mov
ja
cmpb
sub
pop
inc
mov
and
movsb
sub
or
mov
dec
sahf
outsl
xchg
mov
cmpsb
cmpb
shr
sbb
lret
out
out
dec
xchg
sbb
stc
movsl
adc
mov
inc
mov
pop
add
notl
out
push
bnd
cwtl
inc
add
and
add
add
ds
mov
jbe
cltd
cld
leave
cli
test
mov
mov
mov
rep
imul
push
repz
in
call
add
add
call
add
add
add
into
push
dec
and
sub
cmp
mov
fdiv
loope
adc
dec
mov
xchg
and
mov
push
dec
or
add
add
jmp
adc
je
jp
mov
xchg
push
flds
sub
je
in
dec
push
outsb
inc
outsb
jbe
shl
cld
movsb
rcrb
scas
jns
sub
add
add
push
int
xchg
and
add
add
mov
xchg
or
icebp
sbb
jb
pop
xchg
rorl
cli
jno
add
add
clc
clc
decb
xor
js
movsl
mov
sarl
das
stos
mov
mov
xlat
call
xor
push
mov
add
add
pop
mov
sub
add
add
divb
cld
mov
pop
add
mov
add
aad
add
test
jl
add
lock
fucomp
lods
jge
inc
test
mov
mov
add
add
add
sub
adc
cmp
hlt
jno
into
fstps
cmpb
div
mov
sbbb
add
add
adc
out
les
arpl
push
jp
dec
mov
dec
mov
clc
enter
add
add
pop
gs
pop
adc
call
xor
and
add
add
pusha
add
add
insb
add
add
clc
jno
shll
cmp
push
sti
mov
xor
aad
das
jb
je
inc
cmp
aad
add
add
lods
shll
imul
add
sahf
dec
loope
jp
add
add
mov
nop
stos
jmp
sbb
sbb
in
ret
ljmp
add
aad
adc
lea
and
cmpb
lret
leave
ss
push
in
or
or
pop
sbb
pop
dec
mov
push
or
stc
pop
je
js
cmc
jg
ret
cmp
sbb
addr16
cmpb
stc
cmp
fisttpl
scas
test
add
fsubs
add
mov
cmc
fwait
inc
arpl
add
add
out
lods
gs
mov
movsl
insb
mov
enter
mov
mov
rcr
sarl
push
mov
ja
gs
dec
fst
test
xchg
mov
mov
adc
sub
mov
add
mov
add
orb
add
sbb
or
pop
int3
stc
iret
test
decl
mov
inc
popa
ret
mov
mov
mov
loopne
insb
add
add
pop
shll
dec
mov
jb
add
add
or
pushf
jle
je
mov
add
mov
sbb
aam
mov
jge
pop
cmc
data16
mov
ret
push
dec
or
mov
sub
mov
mov
sbb
dec
shlb
mov
gs
xchg
push
test
addr16
add
push
adc
cmpsl
mov
fstl
adc
xchg
in
push
xchg
jge
mov
into
adc
hlt
std
xchg
inc
cmp
les
mov
xor
addr16
inc
add
add
cmp
pop
xor
pop
pusha
add
add
jl
push
or
add
add
push
pushf
aad
sbb
insl
inc
clc
addr16
fistl
mov
jge
mov
aaa
jl
cmp
sbb
or
add
add
push
or
lcall
xchg
mov
dec
xor
cmc
xor
in
adcb
js
rorl
add
add
fidivrs
mov
pop
daa
std
pop
orb
stos
and
dec
imul
aad
xchg
add
add
xchg
jecxz
push
aas
stc
test
iret
movsl
push
adcl
push
push
jo
scas
xor
mov
jae
fbstp
jae
loopne
adcb
add
add
dec
mov
mov
movsl
sub
push
adc
mov
jle
iret
pop
pop
stos
dec
mov
mov
dec
add
add
mov
add
add
pop
cltd
sahf
popf
add
add
add
dec
ja
cmc
dec
mov
shr
sbb
and
mov
add
add
mov
xlat
cs
movsb
inc
xchg
and
push
xchg
add
inc
fsubr
orl
inc
mov
mov
loopne
xchg
pop
mov
mov
jnp
mov
jl
in
jp
cld
out
lcall
mov
shll
lret
cmp
lods
jbe
dec
gs
cmp
test
aaa
mov
pop
and
pop
mov
pop
roll
and
jmp
add
jmp
add
pop
ja
cmpsb
insl
mov
fisttpll
sub
movsb
pop
xchg
mov
js
mov
add
sahf
mov
jp
mov
stos
or
add
sbbl
cmp
iret
daa
adc
mov
les
js
dec
sbb
mov
in
stos
xchg
aaa
and
ret
push
loop
and
fldcw
jo
test
dec
dec
lock
inc
add
add
arpl
xorb
test
pop
repz
insl
popf
nop
or
add
add
add
add
inc
add
add
sub
mov
iret
icebp
cmpsl
dec
dec
lret
or
movsb
xchg
pop
dec
cld
lods
mov
sub
sahf
mov
mov
or
loopne
sahf
xor
jp,pn
pop
dec
rclb
mov
add
in
rorb
wbinvd
sub
ljmp
ret
sub
cmp
cmp
push
popa
jg
jl
lock
pushf
pop
data16
fidivrl
ret
dec
pop
pop
pop
inc
mov
push
sarb
ds
mov
pop
pop
and
subl
add
outsl
movsl
nop
inc
fnstenv
sub
pop
lret
ret
xchg
lret
and
addr16
in
iret
dec
mov
outsb
xor
add
push
add
dec
xchg
std
loopne
test
sbb
ja
adc
int3
jne
dec
mov
mov
aam
adc
out
mov
mov
xchg
mov
divl
mov
icebp
xchg
push
movsb
ds
xor
xor
cmp
call
adc
sbb
int
stc
pop
stos
mull
push
rclb
mov
adc
sbbb
add
add
scas
cs
fistl
or
add
add
rorb
loope
sub
xchg
add
shlb
mov
pop
test
sbb
add
add
in
adc
pop
pop
adc
out
ret
mov
push
lret
out
scas
lods
arpl
adc
add
pushl
pop
sbb
ljmp
repnz
xchg
pop
nop
sub
push
mov
pop
setnp
cmp
sbb
dec
mov
cmp
mov
add
add
ret
insl
add
sub
add
add
sbb
dec
cmp
mov
add
loope
push
push
xor
push
and
add
add
sbb
outsb
lret
mov
dec
add
pusha
mov
aas
mov
ljmp
inc
add
add
sarl
and
add
ljmp
mov
insb
add
add
inc
aaa
inc
mov
push
bound
fstl
xchg
mov
and
cmp
jbe
jns
lcall
movsl
ljmp
mov
xchg
and
add
add
add
int
add
and
add
add
dec
int
cmp
insb
mov
gs
dec
add
add
sti
dec
add
add
in
bound
inc
in
xlat
sarb
mov
add
adc
add
mov
push
add
and
push
popf
int3
icebp
aad
or
call
mov
pop
test
or
mov
push
adc
mov
sub
out
fsub
jbe
mov
lea
pushf
cs
sub
mov
loop
and
jle
push
xchg
insl
push
testb
pop
xor
outsb
inc
push
movsb
jg
dec
mov
mov
push
sbb
push
cmpsl
outsl
inc
lods
mov
mov
add
adc
push
cmp
add
add
pop
jmp
repnz
dec
or
addr16
mov
inc
mov
daa
test
mov
jg
decb
add
add
mov
pushl
mov
add
into
pop
pop
shlb
loope
cld
fwait
mov
jp
pop
mov
movsl
out
mov
add
add
cmp
mov
inc
je
inc
jp
mov
adc
sti
mov
pop
int3
mov
jle
sbb
add
inc
cltd
fcoms
add
pop
add
mov
leave
jns
in
adc
fcompl
add
add
mov
xor
add
jbe
arpl
pop
dec
in
das
test
aam
adc
movsl
out
gs
rorl
add
imull
jmp
mov
sub
add
add
lods
xchg
mov
add
bound
adc
popa
aas
insl
loopne
out
dec
enter
mov
loopne
mov
add
jnp
bound
aad
inc
mov
cli
cld
mov
cmpsl
sbb
pop
clc
int3
xchg
lcall
or
mov
mov
xchg
push
in
mov
jne
pop
sub
faddl
movsb
adc
cld
js
mov
cs
mov
adc
add
inc
pop
insl
push
repnz
imul
ja
mov
mov
stos
xlat
fcmovnb
xlat
sub
clc
xor
sub
add
add
push
mov
add
loope
xor
add
add
cld
ljmp
xor
cmp
push
iret
jge
mov
add
add
inc
jne
das
inc
aaa
ja
es
js
cli
rcll
sbbl
js
add
add
add
ljmp
mov
jb
movsb
shl
mov
loopne
jmp
out
jge
mov
pushf
mov
mov
int3
jae
mov
jne
and
arpl
aaa
or
sbb
aaa
adc
insl
addr16
pop
ret
mov
sub
add
add
xchg
pop
imul
sub
jne
pop
out
lds
mov
add
add
fwait
into
popa
cltd
std
cmp
pop
roll
sub
pop
das
sahf
cld
hlt
dec
fwait
mov
fstpt
out
ja
fmuls
mov
add
shrl
daa
pop
fdivr
xchg
cmp
sub
pop
lahf
scas
in
sbb
ret
jle
mov
xchg
aam
test
lea
sbb
pop
nop
sub
add
add
xchg
mov
mov
add
movsl
push
and
insb
mov
add
dec
add
add
push
jmp
add
add
pushf
aam
xor
push
ret
shl
lret
shrl
nop
stos
sub
adc
mov
add
fwait
fwait
stc
push
mov
fwait
stos
xlat
ficomps
std
push
jge
jmp
repnz
test
mov
add
lock
mov
inc
orl
push
pop
mov
cwtl
adc
daa
xchg
inc
loope
clc
mov
std
out
mov
lret
add
sub
push
sbb
mov
sbb
scas
pop
pop
inc
jl
xchg
fisttps
xor
aad
xchg
lds
dec
lcall
add
mov
outsb
xor
sbb
add
add
and
add
add
add
add
rcr
cmp
cmp
mov
icebp
pop
and
outsb
je
shl
aad
cmp
loope
pushf
push
iret
dec
decl
shll
cltd
cmc
je
sahf
lcall
shrb
dec
mov
movsl
faddl
test
or
movsb
popa
fdivr
test
mov
xor
cmp
mov
scas
bound
pusha
add
add
mov
add
add
mov
pushl
jg
push
xor
shlb
dec
pop
dec
add
add
rcrl
orl
push
pop
mov
out
lds
ret
mov
std
and
aas
clc
add
add
add
test
aaa
xor
or
add
add
sbb
insb
mov
out
mov
sbb
in
inc
sahf
sub
xchg
inc
inc
jge
incl
add
add
mov
cmp
ljmp
xchg
mov
mov
add
add
loop
pop
int
out
pop
xor
sbb
dec
pop
lds
xor
cmp
mov
mov
add
add
add
add
add
add
mov
inc
add
add
ljmp
push
fcompl
push
sub
rorl
dec
das
xor
pop
fnstsw
out
push
in
dec
cmp
rol
cmp
lea
ljmp
je
pushf
dec
mov
add
lock
xchg
add
xchg
add
jg
call
add
add
add
outsb
js
xor
pushf
arpl
ret
pushf
pop
cltd
add
add
add
pop
adc
sub
mov
push
push
shlb
sbb
lods
fnstenv
into
rclb
into
mov
cli
cltd
and
inc
mov
loop
int3
cli
push
cmp
sub
add
add
add
add
xor
jl
mov
cmpsb
out
xchg
out
jae
xchg
and
add
add
arpl
mov
in
adc
in
pop
inc
scas
jae
ss
mov
mov
push
mov
adc
push
shrb
add
or
mov
in
insl
xchg
shrl
add
test
mov
negb
cmp
pop
pushf
fstps
mov
dec
add
add
push
addr16
or
add
add
and
add
add
in
jg
les
mov
push
outsl
push
cmp
cmp
dec
dec
sbb
and
mov
ss
push
mov
sub
add
add
psubd
addr16
push
and
gs
rcrl
sbb
sbb
pop
shrb
mov
ret
lods
loop
jl
cmpsl
dec
mov
mov
mov
pop
stos
push
cmp
jnp
mov
repnz
aam
cmpsb
insb
mov
mov
mov
add
add
or
sub
jl
scas
pusha
add
add
movsl
add
test
lcall
add
add
insb
add
add
adc
mov
or
shl
xor
xchg
stos
movsb
in
cld
dec
mov
sub
xchg
push
jb
pop
xchg
adc
in
out
add
add
jl
fstps
cmp
call
mov
sub
nop
jge
scas
sub
es
mov
mov
mov
add
add
xlat
or
add
add
mov
add
add
mov
enter
cmp
lahf
test
mov
les
cmp
cmpsb
jns
roll
add
fbld
cld
shll
inc
adc
cli
sbb
pusha
mov
fsubs
sbb
add
xlat
insl
lahf
sar
jecxz
aam
push
pop
or
sbb
fcmove
cmp
inc
flds
fistps
mov
out
add
add
add
fnstenv
xor
add
mov
pop
sbb
add
or
mov
jg
jmp
fwait
loope
push
ret
and
add
add
jns
inc
pop
cmp
jb
inc
rolb
add
addr16
xchg
clc
addr16
repz
addl
and
shlb
xchg
subb
dec
dec
mov
dec
fmuls
sub
pop
sub
dec
into
clc
jae
sbb
mov
xchg
xchg
mov
dec
add
add
push
jp
jns
int
stc
adc
adc
cs
sbb
fildl
add
add
add
aas
sub
add
shrb
add
add
ds
lahf
lret
fsubr
dec
sti
movsb
inc
mov
loope
add
push
or
sbb
mov
lahf
adcb
das
and
add
add
aas
scas
mov
loop
jp
cmpsl
insl
ljmp
add
in
mov
add
mov
pop
sub
jae
add
fwait
fwait
xchg
sub
ret
pushf
mov
add
cmc
jge
push
les
rolb
jne
sub
cmpsb
add
insl
dec
add
add
add
mov
or
add
add
rcl
sbb
xchg
pop
rorb
and
inc
add
add
dec
fsubrs
ret
add
or
or
add
add
add
in
jnp
push
add
add
repnz
in
add
add
dec
mov
xor
mov
loope
stc
in
jp,pn
and
or
and
test
push
xchg
subl
jno
or
jb
aam
or
xor
pop
fisttps
add
add
inc
sub
add
popf
pop
mov
dec
add
add
add
add
add
stc
sub
add
add
imul
aad
jne
inc
add
add
pop
mov
out
cs
inc
jecxz
xchg
notl
and
add
add
add
add
call
or
cmc
xchg
or
or
ret
fisubl
push
pop
das
arpl
add
add
iret
dec
cmc
into
movsb
enter
dec
mov
orl
add
add
into
add
add
mov
push
sub
add
add
outsb
inc
in
or
add
add
lock
sti
sbbb
jno
push
pop
mov
add
add
mov
sbb
pop
inc
lret
aas
push
mov
dec
rorl
add
xor
dec
mov
mov
cmpl
xor
add
test
test
repnz
in
stos
ret
sti
and
ss
imulb
add
dec
mov
pop
add
or
mov
ret
mov
insl
pop
push
popf
outsb
pop
std
mov
add
add
mov
mov
ja
cmp
dec
mov
dec
mov
add
add
ror
cmpsl
cmpsl
rcll
xchg
mov
jmp
inc
pop
shl
gs
mov
movsb
jg
sub
add
add
aaa
and
aad
adc
lds
push
or
push
movb
stc
or
mov
mov
loopne
ret
mov
xor
push
mov
mov
mov
sbb
repz
or
add
add
lcall
leave
out
jmp
mov
add
add
add
stos
in
pop
push
push
add
add
add
jecxz
add
add
lods
sti
mov
push
cmpsb
in
jle
cld
inc
das
in
movsl
movl
mov
hlt
repnz
jg,pt
sbb
leave
jge
mov
addr16
add
add
add
add
add
dec
mov
adc
jno
leave
adc
push
stos
sbb
push
inc
add
pusha
add
add
xor
push
outsb
add
loopne
mov
lods
mov
into
test
add
ja
mov
sub
inc
test
mov
xor
add
add
and
add
add
add
scas
lahf
punpckldq
notb
jno
mov
fucom
fadds
add
negl
add
call
inc
add
add
sbb
add
add
dec
add
add
adc
jb
mov
mov
in
mov
mov
jnp
add
add
mov
add
add
add
inc
mov
rol
int
iret
sbb
dec
xchg
hlt
cli
out
movsl
scas
mov
rcr
lea
jne
mov
in
pop
or
add
add
xchg
adc
xchg
fdivrl
lods
cmp
or
add
add
ficoml
stc
int3
cmp
jge
inc
std
mov
mov
test
add
add
gs
adc
add
insb
mov
fldl2t
inc
nopl
loope
stos
popf
sarl
push
push
xorl
sbb
add
add
test
mov
stc
cmpsb
jp
adc
xor
mov
leave
xchg
into
jmp
dec
or
mov
or
xchg
and
xchg
int3
dec
in
iret
add
mov
sub
add
add
out
mov
and
add
add
xchg
jns
jbe
es
lcall
and
aad
mov
add
add
call
add
add
or
nop
push
jmp
xchg
pop
push
jns
sbb
jns
inc
repz
stc
pop
pop
xchg
inc
sahf
out
xor
dec
mov
jnp
mov
lods
pop
sub
add
add
push
mov
add
add
jg
mov
les
std
jge
pop
sbb
sti
or
pop
cs
mov
inc
xlat
es
sbb
add
and
add
add
outsb
orl
lret
int
adc
dec
and
add
add
cmpsb
in
out
and
add
add
movsl
xchg
addb
sahf
adc
addr16
xchg
lret
dec
jbe
add
add
xlat
inc
add
add
add
mov
cmp
or
ss
xlat
fwait
in
loope
push
mov
cmpsb
out
inc
or
insl
sub
add
add
mov
test
adc
and
cmpsb
xor
add
add
jo
jb
sbb
jg
das
fidivl
and
add
add
out
add
testl
scas
or
dec
inc
add
add
ljmp
movsl
xchg
popa
faddl
lret
movsb
call
add
sbb
sbb
lahf
ja
add
push
push
jecxz
sbb
mov
shlb
mov
xchg
sbb
bound
packssdw
jno
jle
add
add
pop
add
add
add
add
add
adc
jle
mov
loop
shrb
popa
push
mov
jge
rcrl
jbe
mov
lods
cmpsb
push
mov
test
and
add
add
cmp
add
add
rorb
iret
negl
sbb
ss
or
push
push
in
xchg
hlt
fmull
add
add
push
sub
sbb
adc
sbb
icebp
out
pusha
add
add
ffree
sbb
mov
and
mov
xor
jae
xor
mov
je
mov
xlat
aas
xchg
sbb
push
fisubrs
add
add
add
mov
cmp
loopne
in
mov
xchg
loopne
push
xor
add
add
cmp
addr16
dec
add
add
cmpsl
ffreep
adc
cmp
or
add
add
mov
call
insb
add
add
pop
jp
arpl
add
mov
mov
rcr
inc
adc
cli
imul
dec
ljmp
test
movsb
cmp
fldenv
in
push
add
add
sub
xor
cmpb
andl
add
jge
pop
inc
xor
loope
sti
mov
add
scas
mov
repz
or
add
add
mov
je
outsl
fstpl
inc
dec
add
add
add
adc
add
add
push
addr16
mov
test
pop
push
cmp
mov
add
add
add
insb
add
add
loop
dec
push
jl
shlb
scas
test
jno
shll
and
mov
pop
dec
and
mov
mov
mov
leave
lcall
addr16
rcrl
clc
jl
daa
jg
or
jp
or
mov
movsb
aad
mov
inc
cmp
dec
mov
sub
dec
adc
int
leave
add
add
add
dec
mov
or
add
add
inc
notb
or
jp
mov
leave
orb
push
push
xchg
movsl
mov
pop
je
stos
xchg
cmp
mov
cmp
mov
out
jns
out
int3
add
jae
sar
ret
lret
and
sbb
pop
vmptrst
and
add
in
insl
sbb
dec
mov
mov
repnz
push
daa
dec
pop
imul
inc
test
or
and
add
add
sarb
stos
loop
sub
mov
push
xor
add
mov
fcomps
add
add
push
pop
and
mov
mov
jno
sbb
loopne
arpl
adc
sub
add
add
repnz
addr16
inc
push
pop
out
add
add
add
add
add
add
add
add
xor
add
add
add
mov
dec
pushf
stc
xor
jmp
outsb
sub
add
add
lahf
mov
jp
xorl
dec
add
add
aas
inc
mov
xor
mov
mov
rsqrtps
push
adc
adc
fdivrp
shlb
repnz
aad
jmp
inc
mov
mov
loop
dec
mov
xchg
imul
mov
lret
imulb
sbb
pushf
aaa
sub
mov
bound
cmpsl
mov
jl
add
cli
imull
add
add
ret
mov
adc
test
into
and
addb
add
mov
int3
mov
and
shr
js
sahf
pop
hlt
inc
and
add
add
and
nop
imul
adc
jge
add
pop
jb
jge
repnz
pop
xor
loope
sub
aad
jge
outsl
cmp
cld
popa
mov
and
jle
add
loopne
mov
rclb
cmp
out
imul
mov
add
xchg
xchg
fbld
mov
aas
pop
movsl
jb
dec
add
add
loope
in
mov
daa
xchg
or
add
add
leave
notl
add
add
adcb
mov
ret
inc
add
add
mov
loopne
jns
std
inc
roll
je
jmp
je
out
xor
push
jns
push
repz
add
push
sub
cmc
mov
mov
jg
lea
inc
or
add
add
cwtl
aas
adc
loop
xchg
imul
xor
fists
jle
mov
pop
aad
xchg
inc
scas
cmp
xchg
mov
leave
push
push
jecxz
adc
add
pop
add
add
xchg
pop
cmp
and
add
add
loop
je
sbb
add
pushf
pop
xor
add
add
add
aas
mov
pop
sub
mov
or
push
test
dec
jb
lret
sub
jne
xor
pop
pop
push
push
inc
in
mov
mov
push
ja
mov
dec
xor
xchg
sub
add
add
ret
adcb
add
add
adc
push
xchg
sub
loopne
cmp
insb
mov
pop
mov
pop
ss
dec
sub
out
out
out
je
outsl
mov
push
and
mov
hlt
mov
pop
into
std
fwait
xchg
or
or
add
add
frstor
mov
add
add
in
inc
mov
mov
add
add
mov
in
push
and
add
add
cmp
jg
ficomps
aam
popf
jl
mov
lods
movsl
fimull
mov
fucomi
jo
aaa
push
xchg
ljmp
push
mov
ljmp
pop
or
and
push
push
push
std
imul
call
cltd
pop
adc
mov
cmp
call
mov
add
mov
sbb
add
mov
xchg
daa
inc
or
loope
jae
rcrl
add
xchg
in
mov
cmp
add
add
ret
into
push
sti
or
add
add
xor
xorl
inc
add
add
mov
lret
cmp
push
aad
add
stc
sbb
lcall
add
add
lcall
adc
mov
mov
call
xor
call
adc
dec
push
lea
adc
fimuls
dec
add
add
xchg
movsl
jno
cli
cmp
cmp
add
loop
cmpsl
pop
push
addb
add
mov
dec
mov
test
pop
out
cmpsl
addr16
sbb
pop
je
dec
jo
jo
sub
add
add
imul
clc
bound
call
fdivrs
orl
add
add
movsb
xor
pop
inc
mov
loope
rorb
insl
push
sbb
add
mov
nop
mov
fwait
jge
pop
cmpsb
add
add
add
push
mov
mov
inc
mov
mov
add
add
sbb
add
add
mov
mov
mov
gs
inc
push
sbb
mov
sub
add
add
mov
or
mov
hlt
jecxz
pop
or
add
mov
add
ljmp
mov
mov
push
cmpsl
xchg
int3
lret
add
add
call
add
add
out
or
pushf
mov
mov
orb
inc
add
add
aam
sahf
call
orl
ficompl
stc
xchg
jo
xchg
in
push
sahf
adc
into
lods
das
les
xchg
cmp
add
add
add
out
jmp
das
pop
cld
mov
mov
add
add
add
add
into
and
test
sti
stc
gs
jb
cmp
mov
imull
ljmp
xlat
cmp
adc
pop
cmp
mov
insb
mov
sarl
jle
pop
fmull
mov
jp
movsl
lods
out
add
add
sub
push
jne
mov
cmp
dec
or
dec
stos
inc
mov
sbb
int
inc
scas
ljmp
add
add
mov
xchg
aad
stc
cli
outsb
jnp
popf
push
push
loopne
inc
mov
icebp
ret
cmpsl
mov
sahf
lods
call
xor
xor
rclb
add
add
add
add
inc
sub
add
add
clc
add
mov
shr
inc
mov
mov
dec
out
jle
cmp
push
mov
sub
mov
add
add
aad
and
imul
or
add
add
lea
and
imul
inc
imul
add
sub
in
mov
cli
push
mov
add
fdivrl
xlat
dec
je
push
jae
jb
mov
shlb
movsb
fistl
push
xor
add
add
shlb
aad
mov
in
sub
add
add
lea
add
add
add
daa
push
outsb
fldt
stos
jb
test
dec
xchg
mov
movsl
xchg
sbb
popf
or
imul
dec
gs
mov
add
jmp
or
ret
out
jbe
mov
js
mov
loop
sbb
push
jbe
test
add
add
add
adc
jbe
sbb
add
jns
and
mov
leave
mov
cmc
push
pop
sbb
fdivp
cmpsb
movsl
adc
inc
dec
add
add
xchg
push
sar
cmp
clc
or
add
xlat
pop
push
push
and
mov
inc
mov
out
ja
sub
xor
out
fidivl
xor
adc
cmp
adc
fistpl
cmpsl
pushf
lcall
mov
add
add
add
pop
mov
add
in
cmpsb
dec
add
add
call
mov
and
push
sub
add
add
jg
sub
data16
cmp
mov
je
cmp
add
add
mov
xor
test
add
xchg
das
movsl
leave
mov
add
jp
int3
xor
sbb
add
add
mov
push
les
insl
mov
pop
jne
call
add
mov
orl
into
or
bound
add
add
add
dec
sbb
add
add
popf
push
pop
jmp
mov
xor
mov
testb
popf
cs
pop
mov
add
js
lea
xchg
add
adc
push
ret
cmp
ljmp
movsb
hlt
jno
mov
mov
in
lods
cmp
mov
test
mov
addr16
and
je
xchg
dec
add
add
cmp
add
enter
add
add
lock
jno
cld
jne
xor
or
push
xchg
leave
dec
and
dec
mov
mov
mov
push
jmp
mov
out
jg
sub
mov
mov
jnp
rorl
movsb
aaa
popf
xor
push
xor
push
ljmp
les
cld
insb
mov
add
add
mov
inc
sbb
sub
mov
jle
push
mov
subl
sbb
mov
mov
jae
fiaddl
rcrb
push
push
cmc
cmp
gs
icebp
add
popa
xchg
test
push
iret
add
insb
add
add
adc
rcrb
into
test
sti
scas
gs
mov
fs
jnp
adc
xchg
push
xchg
mul
fs
fwait
cwtl
aaa
cmp
mov
in
jle
mov
dec
daa
jge
js
cmpsb
pop
xor
mov
add
add
cmp
adc
mov
push
dec
popa
mov
push
push
add
add
into
jo
or
pusha
add
add
jl
add
add
sub
add
add
dec
jae
add
pop
add
add
add
mov
mov
add
add
sub
push
orb
into
shl
and
add
add
testb
inc
mov
mov
mov
inc
xlat
inc
ret
stos
sub
adc
mov
mov
stos
loop
movsl
dec
pop
push
mov
or
add
add
aam
mov
in
call
mov
add
add
jnp
dec
arpl
nop
ljmp
add
call
fstl
or
xchg
or
add
sub
mov
inc
scas
push
mov
mov
jns
push
or
out
push
lods
xlat
mov
add
add
fbstp
lock
mov
out
pop
out
lods
inc
add
add
mov
inc
mov
mov
push
rorb
jl
dec
jb
ret
jmp
pop
adc
cmp
in
aam
sub
add
add
out
out
adc
adc
lds
mov
shlb
popf
mov
add
loope
aad
sbb
xor
fdivrl
add
add
js
push
scas
fcoml
mov
adc
dec
mov
mov
cs
jo
add
add
ss
test
sbb
icebp
gs
lcall
mov
add
dec
mov
scas
sub
cmp
pop
adc
add
ds
loopne
lcall
mov
pop
fisttpll
dec
out
and
jb
out
push
test
xor
xchg
lret
cmc
jae
xor
lret
int3
dec
xchg
cwtl
jle
jecxz
adc
jmp
xchg
or
jge
pop
rcrb
ret
imul
add
add
or
sahf
sti
jecxz
push
repnz
aad
imul
mov
adc
xchg
push
fidivl
movsl
pop
rol
mov
add
add
fldt
xor
mov
add
xchg
mov
inc
mov
add
add
dec
jge
inc
sbb
ja
in
add
xchg
ja
sbb
ja
pusha
add
add
int3
adc
lea
add
add
add
dec
mov
mov
add
add
xchg
int
push
mov
sub
add
add
add
add
add
inc
mov
fldcw
or
add
add
xor
imul
into
fcmovnbe
mov
or
out
cs
subl
mov
mov
shlb
mov
mull
mov
jae
sbb
hlt
outsb
or
popa
adc
or
add
add
lcall
add
add
jns
add
add
add
or
add
add
ds
fwait
push
loopne
mov
inc
scas
cmp
divb
iret
or
jae
xchg
mov
adc
pop
stos
jno
xor
clc
cltd
xor
pop
jle
test
and
add
add
enter
pop
dec
cwtl
jl
sbb
insb
mov
out
sub
add
stc
mov
jmp
adc
lock
xchg
fildll
add
fistpl
fprem
mov
and
add
add
nop
dec
sbbb
mov
xor
sub
aad
sub
xchg
dec
add
add
sub
lret
cmp
add
into
cmp
sub
pusha
add
add
fisubrl
add
add
push
pop
ror
push
enter
add
add
fwait
and
fidivl
sbb
xorl
adc
lods
mov
push
aas
dec
mov
jg
fisttps
das
pop
int
adc
push
inc
jl
sahf
popa
push
or
push
lds
add
add
fmuls
adc
je
mov
das
addr16
jge
fcmovu
jae
sti
push
aam
ljmp
push
daa
testb
add
imul
mov
mov
shlb
adc
js
in
cmp
add
add
mov
add
add
sub
add
add
add
sbb
lcall
ss
mov
subl
and
call
pop
ss
xor
into
inc
mov
add
add
add
push
icebp
adc
insb
add
add
inc
mov
adc
mov
aas
mov
and
dec
cmp
movsl
fisubl
faddl
stc
xchg
in
lods
out
add
aas
jne
outsl
repz
std
sbb
jmp
xchg
addr16
popa
mov
pop
push
leave
mov
inc
add
add
fldl
ds
aad
incb
icebp
mov
pop
shl
cmp
pop
inc
jne
mov
mov
mov
mov
sbb
or
sub
fisubrs
push
loope
and
add
add
cmpsb
mov
adc
loope
sub
add
add
mov
stc
and
mov
dec
jae
in
jmp
add
add
xchg
and
add
add
cmp
je
fs
in
mov
mov
add
adc
out
fldl
add
add
test
sbbl
fnstenv
push
mov
hlt
in
clc
jle
aaa
je
daa
test
cmp
leave
test
mov
sti
sbb
out
inc
out
fstpl
aam
mov
mov
outsl
push
iret
call
icebp
inc
outsl
fsubrl
add
add
adc
mov
loop
repnz
aas
test
jae
ljmp
lds
scas
dec
add
add
xchg
iret
imul
adc
sub
daa
into
and
add
add
mov
cmp
jno
cli
in
xchg
push
mov
add
add
mov
sbb
je
ja
lea
pop
or
xchg
stos
lock
mov
sub
add
jmp
add
add
xor
ret
fisttpll
add
add
addr16
push
cmc
push
subb
cmp
push
call
add
add
ret
fsubrl
test
cmp
add
add
add
add
add
add
lret
cmp
push
dec
and
xchg
lods
push
inc
test
add
pop
inc
mov
inc
add
add
in
adc
add
jmp
shrl
les
xchg
xor
fsubrs
jno
mov
add
add
js
in
lret
nop
sarl
inc
xchg
xchg
pop
mov
jle
xor
push
xchg
stos
ret
lret
push
push
jae
adc
mov
icebp
pop
int3
adc
add
dec
in
insl
rol
adc
add
add
ds
data16
pusha
mov
and
xchg
insb
mov
test
into
mov
aam
adc
add
add
add
loop
stos
pop
movsb
jnp
or
add
add
add
movsb
xchg
jo
inc
jg
xchg
mov
add
add
add
pop
push
dec
fs
popf
test
add
or
subl
mov
pop
fstps
imul
add
add
add
aad
jbe
jle
cmp
adcb
mov
dec
cmp
sbb
mov
mov
fbld
add
add
add
shrl
jmp
test
test
add
out
mov
in
inc
mov
pop
pushf
movsl
mov
jo
fs
js
movsl
sarl
xor
add
add
dec
xor
mov
lret
loop
jle
push
pusha
add
add
mov
mov
in
and
add
or
mov
xchg
pop
sti
inc
xchg
aas
pop
push
xor
xor
sbb
das
scas
in
int3
out
mov
lahf
push
enter
sbb
ret
push
in
in
aaa
inc
mov
mov
ss
fucomp
negb
pop
mov
sti
jbe
mov
or
xchg
jp
xchg
out
jbe
ja
in
data16
das
cmp
outsb
movsb
ljmp
ljmp
or
nop
and
fs
cmp
inc
mov
add
add
push
repz
cld
nop
push
ljmp
mov
pop
mov
mov
cmove
add
add
aas
es
sbb
sbb
insb
add
add
test
lea
mov
jmp
adc
out
insl
or
inc
faddl
movsl
push
sub
mov
aam
outsl
je
and
and
call
pushf
dec
aaa
int
fisttpl
xlat
pop
adc
or
add
add
mov
cmp
in
popf
dec
xor
xchg
addr16
xor
xchg
pop
sbbb
ret
rolb
inc
jp
inc
inc
mov
sub
mov
mov
mov
pop
cmp
fs
sub
add
add
add
add
adc
mov
mov
bound
lods
xchg
loop
js
enter
popa
mov
sti
mov
and
xor
cmp
imul
adc
gs
xchg
push
lea
cmp
mov
mov
jno
gs
xor
add
add
jmp
sub
clc
dec
shlb
mov
std
sub
add
add
and
add
add
fcoml
dec
in
sbb
loop
pop
sti
add
add
add
andl
mov
lahf
imul
rol
pop
cmp
xor
loop
jge
cld
in
xorb
test
add
jl
jns
xchg
adc
xor
xor
mov
clc
sahf
dec
mov
xchg
mov
outsl
lret
lret
fsubr
ds
jecxz
adc
loopne
mov
and
in
mov
add
cmpsl
fwait
stc
test
xchg
daa
jne
mov
push
xchg
xchg
cltd
clc
sbb
fistl
movsb
inc
mov
aam
jae
xor
push
pushf
out
pop
adc
xchg
test
nop
leave
adc
loope
dec
mov
mov
idivb
add
mov
rcl
cmp
scas
gs
mov
sub
fcmovbe
push
or
add
and
add
add
fwait
jg
insb
add
add
and
fdivs
call
jl
mov
enter
sar
loope
or
mov
add
add
ret
loop
in
and
add
in
test
mov
add
add
xor
mov
outsb
enter
adc
int3
push
movsl
in
xchg
xlat
jnp
and
ljmp
dec
add
add
test
cmp
add
insb
mov
mov
daa
pop
inc
mov
iret
call
mov
xchg
mov
xor
dec
mov
add
dec
add
add
pop
in
dec
imull
inc
decb
aam
and
add
add
jbe
out
fwait
jl
shrl
dec
sbb
add
add
add
cmpsl
shl
test
xchg
fmuls
add
cmpsl
add
add
cmp
std
add
insb
mov
sti
jp
enter
add
add
or
cmp
xchg
movsl
jecxz
lret
rcll
fwait
sub
adc
loopne
nop
pop
fldcw
pop
xchg
popf
pop
rcll
pop
sbb
and
fidivrs
mov
sarb
inc
pop
jp
sbb
and
add
add
and
add
imul
jle
mov
and
daa
add
sub
pusha
add
add
push
inc
popa
cwtl
fcomip
loop
mov
cld
adc
inc
add
add
cmpsl
je
hlt
pop
mov
sar
pop
adc
negb
jg
ss
pop
pushf
lret
lret
cmp
mov
dec
and
pop
popa
sub
in
jns
sub
jns
andl
pop
jmp
add
add
fwait
push
jb
stos
loope
push
pop
jecxz
mov
mov
scas
outsb
js
loope
cmc
pop
pushf
mov
dec
mov
push
insl
mov
in
fcomip
ret
pop
je
push
pushf
std
data16
je
xlat
jle
out
push
mov
popa
jg
mov
add
add
scas
iret
sbb
fnstsw
cmp
roll
aad
xor
push
scas
addr16
aas
inc
sbb
cs
jnp
in
sbb
in
arpl
adc
jg
jmp
add
add
stos
push
outsb
scas
les
jae
xorl
cmpsl
mov
inc
mov
mov
fcomip
shll
adc
xor
lods
xchg
add
add
add
jmp
ljmp
mov
add
add
add
mov
loopne
or
es
je
orb
inc
mov
mov
dec
mov
mov
ret
add
add
push
pop
adc
jge
pop
data16
mov
repz
fbld
add
sbb
add
test
add
es
iret
push
cwtl
pushf
add
add
add
add
cltd
add
add
add
add
stc
dec
cmp
adc
in
mov
sub
mov
insl
jb
inc
ds
add
add
adc
mov
icebp
sarb
pusha
mov
push
mov
push
cmc
adc
out
add
add
push
in
test
in
jmp
sub
dec
popa
pusha
mov
sahf
out
loope
jno
mov
mov
into
mov
lock
add
add
test
sub
nop
xlat
push
stc
add
iret
sbb
lods
xorw
or
add
add
repz
add
add
mov
mov
or
idivl
out
lcall
insl
jl
or
add
add
leave
xchg
clc
cli
sub
sbb
pop
mov
es
inc
mov
mov
notl
stos
xchg
sbb
mov
add
add
cwtl
mov
lahf
stos
jmp
pop
sahf
add
add
add
mov
or
mov
add
add
add
adc
arpl
jg
fdivp
xor
xchg
scas
repnz
fistps
lret
int
movsb
push
add
les
push
cmp
jp
subl
adc
or
xchg
mov
nop
lea
cmp
add
add
add
push
insl
cld
imul
enter
add
mov
mov
imul
mov
aad
add
add
jmp
decl
inc
jmp
mov
push
jb
pop
loope
fs
pop
cmpsl
xchg
and
or
ja
xor
into
sbb
jmp
push
idivb
jle
and
pop
das
cmp
push
test
add
add
adc
sbb
pop
jecxz
cmc
fidivrs
mov
jnp
mov
int
push
iret
push
jmp
popa
dec
push
xchg
loope
aam
sub
add
add
movsb
cmpsb
ror
cmpsl
or
add
add
cmp
loopne
add
add
fcoms
pop
push
mov
fisubrl
add
jmp
add
add
mov
xchg
int
pop
int
into
mov
add
add
outsl
ds
in
test
sub
and
clc
fists
adc
ds
pop
sub
mov
mov
cmpsb
cmp
test
fisubs
xor
pop
in
mov
cmp
or
test
add
add
add
add
xchg
call
add
add
lahf
or
fwait
pop
jae
add
add
add
sbb
add
adcb
and
sbb
test
std
test
add
cmpsb
push
xor
sbb
add
add
cmp
xlat
dec
push
pop
inc
test
dec
cwtl
pop
add
add
cmp
out
push
fwait
cltd
hlt
dec
lods
repz
mov
dec
add
add
cmpl
sub
add
add
add
add
xorb
xor
mov
ja
out
push
stc
mov
mov
mov
test
dec
ds
sahf
mov
push
out
xchg
xor
xchg
jbe
or
add
lret
or
add
add
add
add
mov
mov
inc
add
add
sahf
and
add
add
int
adcl
mov
jle
jge
jne
inc
dec
add
add
rclb
out
or
cltd
rclb
or
xchg
adc
mov
test
push
int
cmp
fldcw
mov
add
iret
ret
inc
ljmp
add
add
scas
inc
push
sti
dec
mov
jno
cmpsl
cmp
lods
insl
lods
pushf
xchg
arpl
adc
and
add
add
imul
imul
dec
sub
mov
mov
sahf
arpl
stc
and
repz
or
dec
js
cli
mov
add
add
add
je
lea
call
loope
inc
mov
lock
sbb
imul
clc
insl
je
cmp
push
pop
pusha
add
add
movsl
orl
mov
add
adc
xor
scas
in
xorl
xorb
pop
push
iret
pop
out
jp,pn
add
add
mov
arpl
sbb
add
add
add
test
cmp
arpl
mov
aad
jnp
pop
xor
xor
xor
js
and
add
add
lret
jne
mov
iret
arpl
sbbb
dec
cmp
sub
test
add
add
add
int
xchg
inc
add
add
aad
ljmp
cmp
inc
test
inc
and
jmp
cmp
add
add
aad
insb
add
add
add
jg
loopne
ficoms
adc
ficomps
movsb
jo
hlt
fwait
add
incb
aas
mov
test
mov
ret
ss
in
sbb
inc
negb
sbb
daa
jbe
inc
mov
mov
aad
sub
cmpsl
in
mov
xor
push
pop
inc
sub
add
add
mov
ret
jo
fsubp
inc
in
mov
mov
add
mov
sahf
mov
jecxz
lock
sub
add
add
stc
lcall
repz
out
or
add
add
leave
and
add
outsb
push
stos
leave
dec
dec
mov
dec
xchg
mov
sbb
sbb
arpl
sbb
mov
sbb
jle
test
js
in
fstpl
mov
sbb
pop
cmc
in
mov
out
xlat
jae
push
cmpsl
xchg
xchg
mov
jno
jbe
imul
mov
sub
add
add
jmp
pop
push
test
fldt
add
push
xchg
sbb
mov
adc
push
xor
fcom
push
dec
mov
or
add
add
pop
repnz
jmp
xchg
inc
mov
ja
shll
cmp
cmp
in
mov
test
push
aam
ret
aad
fsubr
pushf
rcll
jns
xor
mov
add
push
aam
push
push
jo
cmp
mov
ret
cltd
xchg
repz
add
add
cwtl
inc
add
add
cmp
push
mov
add
add
or
call
sahf
sbb
xor
add
mov
xor
add
cli
hlt
std
add
lahf
add
andb
add
add
mov
pop
int
and
add
cmc
xor
cmpsl
mov
int
xchg
les
addr16
xchg
push
imul
push
jmp
imul
popf
xlat
xor
mov
add
lcall
jae
jge
push
in
xor
push
jge
sbb
xchg
cs
test
pop
mov
add
add
adc
lods
mov
jl
test
jae
imulb
add
add
insb
mov
push
fwait
nop
add
adcl
cld
pushf
and
shlb
or
insb
mov
add
dec
std
insl
popa
mov
addr16
std
push
ljmp
cs
pop
cmp
jns
push
sbb
add
add
insb
add
add
and
jne
mov
int
xchg
push
push
mov
dec
aaa
sub
sbb
jecxz
lods
jb
lcall
pop
pushf
aaa
addr16
dec
iret
mov
jmp
mov
sti
pop
and
add
add
xchg
pop
xor
aad
mov
sub
mov
cmc
push
lret
icebp
xchg
inc
add
add
xor
xor
sub
lahf
iret
pusha
mov
mov
inc
add
add
or
add
add
mov
aam
mov
lods
fimuls
add
gs
fstpt
xchg
add
and
cmpsb
rorb
lret
int
pop
sub
add
ret
adc
je
add
add
call
in
push
jno
or
add
add
add
add
add
add
dec
bound
pop
jbe
and
add
add
mov
pop
dec
inc
mov
and
lds
add
fidivs
adc
sahf
fldenv
sub
add
add
add
add
add
add
add
lds
outsb
inc
mov
mov
shrl
jb
aaa
out
loope
repz
jns
fdivl
and
jb,pt
xchg
add
ljmp
stos
mov
sub
and
addr16
mov
or
add
add
fiaddl
pop
xchg
jae
das
xchg
adc
or
scas
inc
mov
push
mov
mov
in
push
out
fsubl
push
ds
scas
bound
mov
fiadds
or
add
add
push
jle
inc
adc
and
and
dec
shll
pop
mov
xor
sti
mov
ficoms
and
add
add
push
mov
pop
inc
lods
add
add
inc
vaddpd
add
add
xchg
cmp
add
add
add
adc
add
add
xor
add
cmp
push
inc
add
add
jb
add
pop
mov
and
mov
xchg
add
add
xor
add
add
add
mov
pop
sub
add
add
push
nop
cwtl
orl
pop
sbb
and
push
mov
dec
adcl
dec
das
nop
xchg
sarb
sub
add
add
sbb
ret
sub
add
add
and
mov
add
add
std
sub
aad
inc
cwtl
sub
mov
loopne
adc
mov
jne
ficoms
and
push
push
sub
fmul
inc
in
cli
std
data16
cmc
adc
and
repz
add
add
xor
je
sub
or
test
cld
or
jbe
jl
out
inc
leave
fwait
add
add
cmp
add
add
shll
dec
cli
inc
mov
push
outsb
xor
add
add
cmpsb
lcall
push
je
jle
aad
add
add
les
pop
xchg
push
cmc
mov
add
add
xchg
shr
mov
pop
push
in
mov
xor
fmuls
add
add
add
mov
sub
add
shl
jnp
scas
xchg
ror
enter
sarb
adc
sub
add
add
mov
lods
mov
stc
pop
jle
ffreep
ror
mov
xor
les
cmp
mov
stos
mov
test
cmp
xor
dec
mov
mov
jbe
mov
lds
inc
rcrl
xor
mov
mov
fisubrl
push
mov
cmp
rorb
add
add
ja,pt
or
jb
fsubl
dec
ds
out
mov
add
sahf
push
loopne
sbb
imul
adc
inc
or
add
add
add
test
push
ret
add
popa
sbbl
sbb
add
add
shlb
mov
or
add
aad
bnd
cmp
pop
xchg
xchg
imul
pop
jl
data16
out
sbb
mov
movsl
push
loop
cmpl
aam
jne
popf
cmp
or
add
xchg
sbb
xor
jg
cld
out
loope
movsl
jo
dec
jnp
imul
add
or
mov
imul
bound
sbbb
sarl
aam
mov
lcall
or
cmp
jmp
shll
add
add
xor
add
add
add
and
pop
mov
idiv
xor
sub
leave
ror
add
cmp
icebp
xchg
imul
addr16
pop
sbb
lret
rclb
das
mov
outsb
pop
cwtl
lods
aas
push
out
and
add
outsb
cmp
mov
jbe
das
xchg
dec
dec
imul
add
insb
add
add
addr16
jl
mov
sub
aam
pop
push
fsubl
jecxz
fadds
test
jns
dec
mov
mov
rcr
ret
pop
jo
insl
bound
sbb
jle
jmp
cmp
add
add
mov
jae
nop
jmp
pop
adc
add
add
add
jae
jae
xchg
mov
dec
insl
xchg
and
add
add
lods
jnp
out
jmp
sub
push
ret
push
dec
add
add
pushf
mov
test
test
jecxz
test
in
lcall
out
or
add
add
add
add
sbb
adc
mov
mov
subb
add
out
movb
mov
aad
pop
and
add
adc
add
add
pushf
push
loopne
jnp
mov
je
in
xchg
xor
cmp
xchg
sub
adc
enter
or
fisttps
add
add
inc
lea
or
add
add
pushf
mov
add
add
cmp
inc
mov
xchg
xchg
mov
je
mov
sbb
mov
mov
cmp
jnp
shlb
add
add
repnz
jnp
cmp
dec
mov
sub
or
sub
repnz
mov
and
sub
add
add
add
in
add
push
mov
mov
dec
mov
mov
outsl
inc
add
add
sti
xchg
jns,pn
out
fsub
jbe
dec
call
add
add
fistpll
ljmp
add
push
add
add
add
add
add
mov
sbb
mov
pop
pop
mov
mov
mov
lahf
fwait
gs
mov
mov
cmc
mov
pusha
add
add
or
bound
pusha
mov
int3
cs
xchg
xor
aam
sbb
dec
mov
mov
add
cmp
add
add
sub
sub
pop
xor
xor
mov
out
repnz
aad
repnz
fucomp
popf
mov
add
pop
fldt
jo
ret
aad
mov
add
out
or
add
add
push
outsl
mov
mov
out
mov
dec
mov
cmc
add
out
xchg
push
dec
dec
addr16
and
int3
xchg
mov
push
add
add
add
add
ds
int
jnp
add
fsubrs
xchg
xchg
mov
test
sbb
fnstsw
fildl
iret
pushf
mov
cld
fsubrl
sub
dec
push
jbe
jbe
pop
sbb
add
out
fcomip
cli
call
ret
seta
xchg
jp
aaa
rcrb
add
inc
xchg
mov
subl
cmp
sub
cltd
incb
fcmovu
dec
enter
add
sarb
mov
add
add
add
add
xchg
push
jae
dec
lock
or
add
add
cmpsb
sub
dec
jecxz
add
add
pop
call
inc
mov
das
shlb
sarl
sbb
mov
adc
add
add
xchg
mov
or
lahf
sti
mov
inc
or
dec
add
dec
add
add
jnp
das
je
add
add
add
xchg
jg
push
jne
jle
mov
cmp
jmp
pop
leave
jge
into
imul
add
add
gs
fsubs
add
subl
sar
push
push
call
add
add
and
add
add
add
mov
das
pop
add
pop
into
cmp
mov
inc
mov
jns
mov
call
fsub
cs
add
add
jp
push
and
and
and
dec
mov
adc
inc
mov
out
repz
je
sbb
or
add
add
pushf
push
rclb
jb
mov
mov
inc
enter
add
add
popf
pusha
add
add
popa
add
lods
inc
dec
xor
arpl
push
adc
inc
jp
fwait
cmc
data16
mov
mov
add
mov
add
sub
add
add
add
add
push
mov
fstps
test
xchg
in
in
movsl
out
and
push
hlt
inc
mov
testb
push
add
mov
or
sub
add
add
and
or
add
add
sub
les
or
add
add
add
sbb
sarb
lds
cs
or
in
xor
push
push
mov
xor
les
bound
add
add
add
add
les
adc
or
pop
sub
add
add
and
or
add
add
xor
leave
insb
add
add
pusha
mov
in
xchg
xchg
xchg
pop
mov
or
add
add
pop
es
push
cmp
add
add
leave
dec
mov
mov
cld
jmp
mov
xchg
pop
mov
xor
mov
cmp
xchg
mov
adc
lock
insl
sub
lahf
or
add
add
popf
inc
add
add
add
hlt
fwait
pop
jo
jnp
fdivs
shrl
dec
repz
xchg
mov
outsb
les
sahf
sub
sbbb
sbb
cmp
daa
push
nop
repnz
add
add
add
add
fcomip
or
mov
add
mov
rcrb
adc
mov
mov
out
push
fadd
daa
or
fsub
loopne
adc
pop
and
mov
push
movsl
xchg
mov
sub
add
add
sbb
and
push
mov
inc
push
pop
or
add
add
les
mov
or
push
outsb
mov
das
in
das
cmp
cltd
dec
rcrb
dec
add
add
push
sbb
cmp
mov
rolb
xor
dec
add
add
aam
adc
dec
int
mov
leave
ja
mov
and
add
add
sub
adc
cmp
add
and
pop
xchg
lret
adcl
test
pop
push
shll
rcr
push
ja
or
xor
jg
pushf
or
loop
test
add
add
jo
pop
fcmovne
pop
xor
je
sub
add
xchg
lds
int3
mov
add
add
adc
in
insb
add
add
adc
cmp
ret
notl
add
stos
push
repnz
mov
push
les
jae
add
add
arpl
popa
sub
add
add
addr16
jns
xchg
movsb
inc
sti
and
add
add
imul
ds
add
add
ret
xchg
adc
inc
add
add
scas
jmp
add
add
inc
add
add
fidivs
dec
mov
pop
negl
push
mov
out
int3
ja
or
sub
cmp
movsb
aam
push
popf
or
add
add
stc
int3
mov
adc
sahf
shr
mov
mov
addr16
cmp
test
repnz
and
fwait
add
add
add
add
repnz
pop
data16
adc
pushf
popa
cmpsl
xchg
fsubrs
xor
mov
inc
fldcw
stos
cwtl
xchg
mov
cmp
inc
mov
cmc
mov
jbe
fsubl
xor
push
or
sbb
sbb
add
add
jmp
or
mov
outsb
ja
out
je
or
add
add
mov
adc
and
sti
mov
pop
mov
test
pushf
push
cltd
ds
jg
add
popf
out
sbb
add
stc
or
add
add
mov
xor
outsb
repnz
loope
add
or
add
add
icebp
push
sti
clc
jp
mov
pop
clc
out
add
add
cmpb
xchg
push
rcll
inc
xor
scas
fstpl
jb
gs
lret
in
in
aaa
xchg
std
test
cld
cli
test
cli
cmp
shrb
movb
add
xchg
cli
cs
jecxz
add
jns
cmp
mov
test
add
add
mov
insl
sbb
aas
adc
cmp
cmpl
pop
std
xor
int3
or
dec
out
mov
fdivrp
jle
push
call
incl
and
xchg
inc
and
add
add
sbb
faddp
ss
cmpsl
movsb
mov
pop
xor
cmpsb
mov
aaa
push
mov
mov
add
and
add
add
in
add
add
cld
scas
xlat
xchg
cmp
add
add
ffreep
imul
mov
bound
mov
xchg
adc
cs
clc
loopw
in
sbb
mov
xor
gs
add
add
add
fwait
mov
add
push
mov
mov
sbb
test
pop
push
add
mov
dec
xchg
lahf
mov
xchg
mov
mov
into
sub
mov
mov
scas
xlat
repz
sub
pop
out
ds
add
add
mov
adc
inc
push
daa
aaa
aam
test
inc
or
add
add
roll
push
add
mov
add
rcrb
mov
shrb
push
add
add
mov
addr16
lods
sub
add
add
pop
decb
add
movsb
push
rcrl
aas
xchg
add
add
add
push
or
jge
xor
mov
add
sti
into
push
inc
stc
aas
adc
flds
mov
mov
add
je
cmc
or
sbb
mov
push
pop
insb
mov
mov
pextrw
dec
loop
sub
add
add
lret
sarb
je
lods
jle
imul
inc
out
fidivrl
fdivp
push
or
pop
out
bound
xlat
cmpb
xor
pop
sahf
add
add
addr16
rol
mov
sub
add
add
outsb
mov
mov
inc
add
add
xchg
mov
inc
movsb
sub
insb
add
add
pop
inc
pop
dec
cmp
idiv
add
add
add
scas
push
into
hlt
ljmp
add
add
mov
mov
add
adc
xchg
enter
add
or
cli
xor
pop
inc
mov
push
add
add
in
test
xchg
data16
jns
fstps
add
push
jo
mov
lcall
jno
jns
mov
out
jb
or
mov
or
repz
scas
adc
pop
mov
in
pop
or
add
add
add
add
pop
lret
xor
jge
rcrl
add
test
ljmp
cld
mov
stos
dec
adc
add
add
shl
and
inc
lods
pop
jle
outsb
dec
fnstsw
push
je
or
dec
lret
or
add
add
addr16
or
arpl
lds
add
out
xlat
bound
add
add
int
sbb
hlt
cmp
add
add
add
xlat
dec
nop
adc
es
cmpsl
js
fcmovne
loopne
xchg
adc
stos
mov
add
dec
sub
clc
das
adc
dec
ljmp
idiv
and
add
add
add
dec
and
aaa
mov
pop
cmp
add
add
inc
and
rcll
push
sbb
add
add
in
faddl
push
orl
lret
mov
cld
mov
inc
add
add
adc
js
cmpsl
xor
js
pop
add
add
add
aaa
in
lds
pop
ret
or
pop
lahf
ret
xor
add
add
in
mov
test
add
sbb
ds
mov
bndldx
add
add
xchg
mov
adc
xchg
inc
repz
cmpl
push
cmp
adc
add
add
mov
dec
add
add
and
sti
in
or
add
add
test
pop
pop
cld
xchg
mov
mov
lret
sub
push
stos
sub
outsb
jp
aam
popa
fisubl
add
in
mov
mov
push
dec
sbb
test
xchg
add
add
orl
pop
mov
xchg
pop
lods
mov
xchg
lods
add
les
lea
cmpsb
jg
jns
nop
popf
pop
push
mov
add
add
push
push
in
aas
lret
fnstsw
loopne
push
push
xor
mov
add
add
add
enter
lret
or
xchg
jno
jb
add
add
add
add
ret
in
add
add
add
cmc
scas
in
repz
fstps
loopne
cld
rep
pop
pop
stos
dec
test
ds
add
add
xchg
ret
cwtl
xchg
cmp
add
add
test
jmp
sub
add
add
lea
stc
into
test
mov
daa
push
sbb
getsec
out
push
pop
sbb
stos
fs
xor
int
mov
add
cli
xchg
into
cs
subb
add
mov
add
and
mov
fistps
add
add
pop
jle
mov
adc
call
pop
dec
add
add
loope
jl
or
sub
add
add
fdivr
push
dec
rclb
shll
fs
mov
sub
pop
fnstsw
notl
sub
add
add
insl
sub
add
add
add
add
push
cmp
dec
add
add
repz
inc
mov
insb
mov
int3
mov
mov
scas
fnstenv
and
aam
ret
stc
xchg
pop
loopne
xor
or
add
add
adcl
fisttpll
stos
cmp
sahf
in
jbe
arpl
xchg
loope
sbb
inc
into
andl
add
das
add
out
mov
mov
jnp
cmpsb
sbb
add
ljmp
pop
mov
fisttpl
scas
repz
jae
mov
add
add
add
shrb
cmp
aad
subb
add
add
cmp
loop
jno
out
lods
aad
bound
pushf
loope
scas
shrb
jns
add
add
aad
notl
xor
out
mov
add
xchg
add
add
sbb
rcrl
sub
add
dec
mov
mov
dec
xchg
pop
sar
out
inc
add
add
cmp
popf
iret
in
sub
add
add
xor
mov
rolb
add
add
movsl
push
jns
mov
sub
add
or
or
jo
in
pop
adc
add
cs
inc
add
add
pop
xor
push
sub
pop
sarb
frstor
mov
out
int
dec
add
add
shll
or
adc
loope
pop
es
addr16
fwait
repnz
add
add
pop
les
out
lds
xchg
add
add
add
or
xchg
mov
int3
push
popa
loope
gs
sub
test
ss
dec
adc
add
sbb
dec
out
out
sub
mov
xchg
movsb
pop
mov
shr
mov
cmp
sbb
mov
mov
enter
add
lock
out
daa
mov
jp
inc
in
mov
add
xchg
add
add
xor
mov
jmp
xchg
lods
pop
ret
or
add
add
daa
fisubrs
in
pop
scas
insb
mov
jg
clc
sarl
xchg
test
mov
dec
jne
xchg
jno
sbb
repz
jmp
xchg
sbb
cltd
sub
add
add
negb
mov
fistl
mov
add
or
pop
adc
clc
rclb
sti
pop
pop
dec
mov
out
addr16
dec
lods
loopne
add
add
inc
add
add
pop
ret
std
lea
sbb
and
add
add
test
sbb
gs
pop
xchg
lret
or
add
add
add
sti
jge
dec
mov
sbbb
mov
call
dec
ljmp
dec
pop
mov
lretw
mov
jno
outsb
dec
add
add
mov
add
mov
add
fxam
push
push
incb
add
cmovs
sub
int
fsubrp
jbe
cltd
lret
cmp
or
cmp
dec
jmp
loopne
and
inc
xor
add
add
push
add
adc
mov
add
mov
add
add
push
mov
push
push
jne
dec
in
add
add
add
jmp
rclb
cmp
add
pusha
add
add
jle
test
pop
mov
add
add
cmpsb
inc
or
add
add
adc
popf
mov
add
add
add
add
ret
ds
jmp
sti
pop
subl
adc
insl
lret
mov
xor
in
lods
mov
mov
xchg
add
add
je
mov
fiaddl
add
cmovbe
xor
mov
add
add
adc
dec
shl
insl
or
mov
push
daa
pop
movsl
insl
sub
mov
stos
test
test
subb
add
add
dec
add
add
sub
movsb
mov
add
add
add
dec
dec
jp
stos
adc
add
add
xlat
xor
inc
push
mov
js
push
insl
int
cmp
and
add
add
adc
mov
mov
cs
mov
cltd
dec
mov
push
jg
in
inc
mov
dec
sahf
cli
add
into
mov
pushf
jnp
stos
cmp
adc
jle
jge
push
js
add
add
jl
in
cmp
popf
or
push
push
sbb
sbb
pop
clc
iret
or
jp
jle
xor
mov
xchg
push
cmpsl
sarl
pop
inc
dec
popf
out
cld
adc
jne
mov
pop
insl
cmp
mov
add
add
lret
mov
add
clc
cmp
enter
jecxz
sub
fwait
sbb
icebp
push
pop
dec
sarl
lcall
jns
mov
dec
push
pop
push
mov
or
add
add
add
add
add
add
fistl
add
add
xor
inc
jbe
arpl
test
cmp
and
add
add
lahf
dec
mov
xor
add
add
mov
mov
and
xchg
daa
jns
pop
pop
lock
leave
aas
std
icebp
adc
add
mov
cmp
dec
pop
add
ss
add
add
push
inc
sub
sbb
jne
pop
xchg
adc
mov
mov
std
insb
add
add
push
scas
cwtl
addr16
push
popa
sub
dec
push
mull
push
ffreep
sub
outsl
sbb
pop
mov
xchg
add
add
adc
pop
ficoms
mov
push
mov
xor
addr16
push
mov
mov
lea
out
iret
aam
movsl
sbb
add
add
sbb
xor
ss
lock
pop
cmc
and
inc
cmpl
dec
inc
mov
les
add
xor
add
add
sbb
fidivrs
fsubrs
xchg
rcrb
mov
fsts
pop
ljmp
lret
aas
and
jle
out
mov
outsb
cmp
mov
push
inc
mov
jno
or
xor
sub
mov
sub
rcrb
and
push
pop
les
add
add
mov
lret
or
and
xchg
and
imul
xor
add
add
add
cmp
clc
lock
shlb
mov
ret
add
add
add
dec
adc
add
add
add
add
xchg
inc
pop
jo
aas
out
jbe
xor
sbb
add
cld
add
sahf
mov
add
add
fcomps
xchg
mov
xlat
fsubs
pop
or
enter
adc
addr16
adc
mov
or
outsl
es
jo
push
or
add
add
mov
push
dec
dec
add
add
fdivr
inc
sub
cmp
mov
add
add
sub
jmp
mov
add
bound
push
jmp
add
call
fcoml
jp
mov
sar
fildll
xor
dec
ret
rcrb
add
add
sub
data16
fnstsw
mov
push
fiaddl
in
adc
add
pusha
add
add
mov
testl
mov
add
jne
in
out
xor
add
add
sti
and
add
add
or
adc
add
clc
mov
mov
mov
mov
or
mov
int
mov
rcll
movsl
jo
lea
xchg
add
out
cwtl
sbb
sahf
repnz
and
sbb
mov
fiadds
dec
dec
mov
fistl
xchg
into
or
add
add
fidivs
jp
mov
int
cmp
add
loope
stc
shr
movsb
stos
sub
repnz
cld
pop
inc
fsts
mov
fwait
js
mov
inc
hlt
out
das
mov
add
in
add
add
clc
adc
mov
mov
loope
fcompl
push
sbb
cld
daa
and
add
push
inc
pop
repnz
repz
sbb
mov
repnz
stc
inc
adc
inc
push
xchg
mov
and
sub
out
xchg
pop
xchg
pop
inc
mov
es
add
add
push
adc
ss
mov
add
add
lahf
movb
push
xchg
out
js
pop
inc
mov
out
pushf
jo
loopne
cmc
inc
pop
push
pusha
mov
cltd
push
imulb
inc
cmc
xchg
je
jnp
cmpsl
add
ljmp
inc
add
add
adc
divl
inc
inc
sub
stc
push
cmpsb
ss
jne
add
add
mov
xchg
add
push
into
mov
push
flds
pop
pop
mov
add
repnz
addr16
pusha
mov
sahf
mov
orb
xor
pop
and
add
push
outsl
xchg
addl
jg
fsubs
add
add
stos
push
int3
jne
out
mov
push
sbb
lds
mov
pop
xor
pop
aas
out
mov
shrb
mov
add
add
xchg
xchg
dec
aad
add
add
hlt
loopne
addr16
out
outsb
jne
sbb
mov
dec
jae
cli
or
add
add
fstl
call
ret
or
add
add
leave
data16
iret
adc
fldt
outsl
xor
popf
jle
imul
shll
hlt
adc
dec
and
and
and
aas
test
add
nop
jle
mov
inc
imul
flds
ljmp
shll
out
pop
loope
jbe
lcall
lock
sbb
mov
clc
mov
cmp
push
cmp
hlt
arpl
add
add
or
mov
mov
sbb
clc
inc
sbb
cmc
and
nop
push
mov
push
int3
lretw
mov
movsb
or
rcrb
loope
adc
cmc
pop
xorl
in
int
sbb
add
add
mov
add
js
inc
jbe
and
mov
add
xor
and
add
add
jb
movsl
loop
mov
test
stos
rcr
mov
loop
jmp
mov
add
add
adc
mov
push
mov
adc
ljmp
add
add
sbb
or
mov
loopne
xor
xor
addr16
jns
shr
add
add
jg
sbb
fistps
js
repz
add
test
icebp
xchg
stc
sti
bound
test
mov
test
cmp
inc
add
add
arpl
inc
mov
add
roll
xchg
aam
outsl
clc
sti
adc
cmpsl
xchg
mov
cli
cmpsl
jb
test
xor
xor
out
fcmovb
aam
jge
sbb
mov
out
mov
mov
enter
fwait
cmp
cmpsl
cs
add
add
and
xchg
add
adc
pop
not
movsb
push
movsb
dec
mov
lods
nop
popf
movsb
mov
cmp
sbb
js
repz
stos
shrb
add
add
das
push
bound
cs
mov
adc
add
add
aad
pop
jns
adc
add
jecxz
jge
out
cli
or
xchg
push
ja
sarb
shr
add
fisttpll
xchg
insb
mov
inc
jbe
pushf
pop
scas
cmp
and
adc
add
mov
push
pop
push
in
add
add
add
push
arpl
xor
xchg
ror
and
je
add
add
inc
pop
mov
adc
cwtl
cmp
and
xor
jns
mov
sbb
scas
orl
int
repz
std
fisubl
dec
add
add
ljmp
add
add
cli
fldl
mov
arpl
jmp
push
mov
in
mov
test
push
push
sub
xor
ja
xchg
les
in
and
ss
sbb
add
add
pop
push
xor
repnz
out
jmp
and
clc
mov
fcmovu
lods
stos
out
dec
or
add
add
sub
in
sarb
jecxz
mov
dec
insb
mov
push
pop
sahf
pop
pop
mov
mov
stc
cld
pop
fldl
pop
jge
mov
rorl
xchg
inc
jns
jmp
cmp
add
push
add
add
xlat
xor
nop
jb
mov
add
add
test
dec
push
mov
pushf
ljmp
add
sti
imul
mov
mov
les
mov
dec
add
add
add
add
imul
add
push
aad
xchg
mov
jecxz
pop
dec
aas
xchg
jg
dec
sbb
push
call
aaa
pop
test
dec
sarl
mov
add
jg
push
xor
jmp
cmp
xchg
and
add
add
outsb
pop
loopne
std
lea
mov
decb
push
push
jge
movsb
xor
or
repnz
xor
add
daa
std
aam
mov
inc
out
mov
pop
jg
mov
imul
inc
add
add
cmpsb
jo
cmp
mov
outsb
xlat
add
add
mov
int
sahf
dec
sub
decl
decl
into
popf
jo
stc
or
sbb
iret
jb
and
add
add
sbb
iret
addb
add
cmp
pop
mov
add
add
stos
inc
xchg
lods
sbb
add
push
sti
fsub
mov
add
add
add
subl
addl
add
add
add
add
dec
mov
lcall
pop
mov
cmp
aam
test
imul
pusha
mov
mov
adc
xor
outsb
push
and
cmp
inc
cmpsl
mov
push
pusha
add
add
mov
add
add
outsb
aam
sbbl
mov
mov
add
pop
std
out
push
xor
pop
inc
ret
fcmovnbe
mov
mov
lret
imul
lods
push
add
push
sbb
mov
push
ja
mov
mov
pusha
mov
xchg
lock
add
add
enter
cmp
or
std
pand
add
add
shl
xor
push
ret
out
pop
xchg
mov
add
add
xor
push
pop
xor
lods
js
inc
jp
xchg
ret
xchg
int
test
add
std
lret
sub
push
out
add
add
iret
loope
xchg
xchg
jl
outsb
pop
imul
adc
inc
jp
sbb
pop
pop
or
mov
addb
add
jb
repnz
xlat
sbb
outsb
pop
sub
dec
jno
push
fldl
sub
sbb
insb
add
add
or
fists
dec
jbe
mov
call
add
nop
inc
jecxz
pop
inc
push
lret
cmp
vpacksswb
sub
fidivl
lret
add
xor
or
daa
pop
push
adc
int
push
jnp
jae
insl
mov
xchg
insl
lret
sbb
or
mov
xor
sarl
scas
test
add
add
mov
orb
pop
push
outsl
dec
push
jnp
icebp
sub
aas
testb
and
add
add
mov
int
fucom
jl
push
mov
xchg
mov
sub
add
add
or
cmpsb
mov
negl
aam
inc
or
xlat
adc
mov
mov
dec
das
mov
inc
mov
out
and
adc
insb
mov
gs
add
add
pop
es
sbb
jne
add
popf
mov
cli
lea
add
add
inc
add
add
pop
aad
xchg
int
xor
cltd
insl
adc
dec
add
add
clc
pop
inc
add
add
insb
add
add
pop
pop
inc
add
add
xor
sbb
and
add
mov
out
or
add
add
repz
or
cmp
mov
mov
add
add
arpl
xor
lret
shlb
mov
outsb
ss
add
add
lock
push
dec
mov
mov
pusha
mov
aam
or
rorb
mov
xor
stos
jmp
ja
mov
sub
je
cmpsl
and
add
add
cli
sub
jmp
and
add
add
add
fidivs
aaa
rcll
enter
adc
pop
pop
xor
lds
dec
xor
lods
lahf
or
push
dec
mov
jle
pop
or
mov
stc
leave
cmp
add
add
dec
mov
hlt
sbb
sub
mov
xor
scas
jecxz
pop
adc
rclb
jbe
inc
inc
add
add
mov
add
shrb
add
fwait
inc
test
shlb
add
mov
mov
jbe
in
lahf
in
fsubp
pop
mov
mov
dec
add
add
push
mov
in
mov
insb
mov
and
pop
sub
push
out
test
lahf
inc
mov
jp
cld
sub
mov
xchg
or
add
add
add
jle
mov
pop
mov
cmp
lret
in
outsl
jne
adc
add
jbe
sbbl
insl
mov
ljmp
inc
adc
add
push
cwtl
das
cwtl
lret
aad
cmc
insb
add
add
dec
and
or
mov
push
pop
push
dec
inc
adc
fistpll
sub
mov
cltd
mov
jg
xchg
cmp
push
test
cld
push
pop
mov
mov
dec
mov
in
dec
xor
mov
add
movsb
hlt
and
add
add
shlb
add
add
jp
in
dec
sbb
adc
popf
popa
pusha
add
add
and
add
add
add
add
ret
or
mov
adc
cs
jg
pop
lret
add
mov
push
jmp
and
sub
scas
inc
mov
dec
nop
pop
enter
outsb
adc
cmp
fiadds
add
aam
dec
add
add
lahf
and
add
add
fs
mov
int3
in
insl
xor
push
pop
cmp
pop
pusha
add
add
mov
xor
xchg
mov
mov
mov
test
loopne
sbbl
pop
loope
rclb
inc
rorl
loopne
xchg
and
inc
stos
sti
lods
xor
add
add
add
rclb
ficompl
add
fiaddl
and
inc
daa
push
add
lahf
adc
dec
mov
jle
mov
mov
insb
add
add
outsl
add
lahf
lods
js
nop
xchg
filds
imul
jp
rcll
add
add
scas
pop
cmp
xor
movsb
pop
out
jl
inc
mov
add
add
add
add
push
into
scas
decb
add
add
add
mov
in
arpl
and
dec
add
add
stos
add
fisttpl
mov
mov
add
add
mulb
imul
ja
out
outsl
adc
add
pop
push
outsb
or
lret
add
add
add
add
ljmp
xchg
lds
ja
add
dec
or
mov
mov
stos
jnp
add
xor
movsb
sub
jbe
lods
popa
in
push
repnz
pushw
inc
mov
ds
repz
subb
and
add
add
dec
popl
and
add
add
fwait
xor
sub
mov
aaa
repz
cmp
add
add
ljmp
aaa
cli
mov
je
sarl
mov
stc
push
mov
and
or
fdivs
sbb
inc
mov
adc
stc
xchg
dec
mov
inc
add
add
xorb
bound
xor
and
add
add
lock
bound
add
stc
sub
mov
add
add
fwait
loopne
test
mov
or
push
fmull
xchg
fbld
add
add
add
mov
lds
mov
enter
insb
mov
mov
lahf
add
inc
mov
loope
nop
lock
mov
add
add
aam
scas
mov
add
add
je
sbb
mov
inc
sti
sub
add
add
into
adc
cld
fbstp
dec
mov
stos
mov
and
testl
loopne
data16
add
add
add
add
clc
jl
cmp
mov
lcall
mov
mov
sarl
mov
lods
fistl
jno
jge
stc
push
xlat
adc
fldcw
lods
add
lahf
movsb
loop
cli
xchg
jae
push
xchg
mov
lret
out
add
add
clc
push
and
jne
rol
dec
adc
add
xor
outsb
sbb
inc
imul
mov
fsubrl
mov
pop
pop
mov
jmp
ja
push
xor
sbb
add
add
add
arpl
add
add
clc
adc
add
jbe
fcmovnbe
sub
push
push
or
add
add
cmp
fs
xchg
pusha
mov
mov
call
mov
repz
test
and
mov
lods
and
add
add
sbb
insb
add
add
popa
adc
add
add
add
add
add
popf
loope
cmpsl
pop
dec
sub
mov
add
add
out
ja
cmpsb
cmp
add
and
add
add
scas
int3
stos
sub
add
add
call
add
add
dec
aas
mov
jbe
mov
adc
in
fwait
push
and
add
add
je
dec
nop
int3
cwtl
popf
pushf
adc
adc
lret
js
inc
and
hlt
jne
mov
jge
pop
pop
mov
test
push
shrl
lods
inc
add
add
xor
js
mov
loop
sbb
mov
push
cli
cmp
std
fnstenv
push
mov
sahf
and
xor
ja
sbb
push
mov
lods
mov
push
cwtl
fsubp
xchg
and
add
add
shlb
es
and
mov
add
add
add
add
pop
fstl
add
add
jecxz
das
ds
push
hlt
stos
mov
das
fmuls
inc
scas
fs
sbb
add
idivb
mov
pop
std
dec
mov
ficoml
mov
aaa
aaa
test
adc
mov
xlat
push
imul
lret
imul
outsb
xor
add
push
clc
cmp
fiadds
add
add
xchg
ffreep
js
adc
jecxz
jge
jb
aas
mov
in
xchg
enter
xchg
les
sub
add
add
and
pop
insb
mov
nop
mov
enter
stos
pushf
bound
cwtl
in
mov
mov
gs
popl
orb
dec
arpl
jle
xchg
int3
dec
mov
cmp
test
mov
add
add
dec
fdivrl
add
add
jl
aad
lret
lock
mov
xor
push
jl
test
movb
and
push
add
pop
cmp
mov
mov
add
inc
mov
shlb
cmp
mov
imul
add
add
add
mov
cmpsl
js
mov
jmp
add
add
push
adc
jp
ss
push
dec
add
add
popa
ret
pop
fidivl
and
and
gs
nop
repz
stos
daa
and
pop
cmc
test
popf
call
fildll
popa
sub
add
add
add
add
scas
into
xor
les
push
add
icebp
es
das
push
add
add
xchg
scas
neg
mov
mov
push
jge
mov
or
add
add
add
add
jbe
cld
aas
xchg
jp
and
jg
in
loop
bound
stos
test
cmp
add
or
rorb
pop
movsb
pushf
jle
or
add
add
mov
pop
int
pop
inc
push
mov
fwait
ljmp
add
jmp
jp
add
add
aad
pop
cld
push
push
aaa
insl
addr16
flds
arpl
out
out
prefetch
pushf
add
and
add
add
nop
lsl
push
adc
mov
movsl
fdivr
pop
pop
mov
xlat
dec
iret
push
jp
sbbl
out
add
jns
mov
rclb
or
add
add
jle
xchg
sbb
test
aam
xorl
or
add
add
dec
and
add
add
fdivrl
xor
push
inc
cmpsb
scas
sub
ret
xor
mov
jae
out
xchg
pushl
clc
cmpsb
mov
shll
mov
pop
mov
pop
dec
loop
mov
mov
xlat
mov
cmpsb
and
fcoml
add
ss
imul
mov
sub
add
mov
lea
jae
loopne
sub
dec
pop
sub
mov
test
pop
insb
add
add
add
movsl
popf
test
clc
lcall
imul
cmp
out
bound
fwait
into
das
out
add
add
mov
xor
rcrb
cli
and
xchg
lret
mov
jp
addb
lret
aam
adc
jmp
jg
mov
sub
jno
xchg
jmp
imul
inc
sbb
add
out
push
icebp
out
cltd
fwait
add
add
add
mov
outsb
xchg
or
add
add
test
push
lar
add
jbe
leave
in
loope
repz
cld
jnp
xchg
mov
stos
rorl
mov
sbb
mov
sbb
hlt
adc
jl
add
out
mov
jp
mov
insb
mov
push
inc
mov
ljmp
push
inc
inc
sub
jmp
xlat
push
stc
out
gs
mov
out
test
add
add
mov
cmp
shl
lahf
xor
mov
loop
and
jbe
setge
sahf
lea
push
add
add
add
jmp
je
enter
cmc
cmp
add
add
fsubrs
insb
mov
lods
out
dec
mov
inc
mov
add
add
and
add
add
add
xlat
rcl
out
xor
add
push
lods
aam
cmp
dec
mov
out
scas
in
cmp
add
add
add
add
fadd
mov
inc
mulb
call
inc
iret
sti
bound
add
add
add
inc
cmp
or
add
add
cmpsl
es
push
and
arpl
xor
outsl
daa
mov
push
insl
xchg
add
xchg
cmpsb
sub
sub
lods
out
in
mov
imul
fdivl
pop
int3
sbb
and
sarl
fcompp
dec
add
add
cmp
inc
movsl
insl
scas
int3
sbb
ret
cmp
add
outsl
iret
stc
out
mov
add
add
add
aaa
ret
in
loopne
movsb
jbe
dec
add
add
lea
insl
cmp
into
in
mov
jmp
ds
mov
sub
dec
mov
pop
push
push
or
scas
lock
aam
je
fldcw
add
add
xchg
test
inc
jge
mov
div
mov
add
xor
popa
sub
inc
mov
mov
xor
add
adc
ljmp
sbb
jno
fwait
pop
popl
mov
mov
andb
and
addl
mov
pop
xchg
jo
fstpt
addb
inc
mov
add
mov
data16
movsb
pusha
add
add
add
jo
add
add
test
mov
mov
add
rep
dec
fcmovnb
push
mov
and
sbb
sub
pop
jp
movsb
push
stc
push
aas
jg
idivl
int3
daa
out
pop
mov
imul
cltd
inc
cmpl
repz
push
fsubrl
add
sbb
push
pop
imulb
xchg
pop
jnp
jae
and
sub
mov
xchg
cmp
cmp
sbbb
popa
mov
ret
add
or
les
add
add
mov
add
lcall
mov
add
add
stos
sbb
ja
sub
cmpsb
ss
aam
push
mov
rcrb
add
inc
nop
test
data16
dec
mov
mull
inc
out
popa
std
sbb
add
add
add
or
add
add
mov
roll
cli
and
add
add
movl
mov
jp
mov
data16
jle
add
jp
fcompl
push
jecxz
pop
pop
aam
pop
test
add
add
add
mov
cmp
cmp
mov
mov
jae
inc
add
add
xchg
cmpeqps
add
das
lods
fsts
mov
push
loopne
daa
dec
lcall
xchg
push
jb
mov
inc
mov
out
mov
pushf
imul
add
add
xchg
inc
mov
mov
shl
scas
cltd
inc
pop
dec
je
pop
es
or
xchg
in
test
sbb
mov
sbb
xchg
int
mov
mov
repz
test
xchg
xor
add
add
inc
jnp
jg
out
aaa
insb
add
add
shll
inc
data16
pusha
add
add
jl
jecxz
cmp
imul
and
add
add
addl
add
imul
xchg
sahf
leave
mov
stos
adc
stos
cmpsl
aam
xor
hlt
arpl
and
add
add
add
xchg
or
jecxz
cs
pop
add
and
add
movsl
sub
add
adc
xchg
sub
add
add
fs
shll
and
add
add
out
adc
and
jecxz
jo
gs
add
add
jmp
cmp
loopne
out
mov
shrl
add
jo
mov
add
add
add
mov
ljmp
add
stos
aad
mov
insl
insl
loopne
mov
ret
shlb
jle
push
sbb
rcrb
mov
nopl
push
jno
add
ljmp
xchg
push
add
sub
test
lret
push
mov
arpl
mov
aaa
dec
loopne
dec
mov
dec
pop
stos
popf
rorl
movsb
into
gs
xchg
pop
add
addl
or
add
add
in
ficomps
mov
xchg
imul
mov
fildl
mov
hlt
mov
sub
std
outsl
sbb
les
popf
and
add
add
movsl
xchg
out
loope
call
add
xor
add
add
jbe
test
cwtl
xor
cmp
mov
add
push
jb
mov
xchg
dec
leave
pushf
mov
and
repz
add
mov
add
add
add
add
fimull
or
mov
push
insl
inc
mov
mov
adc
and
add
add
sarb
mov
mov
mov
add
add
add
sbb
out
jae
mov
in
jecxz
lret
dec
jecxz
sub
add
add
sub
fimuls
add
cmp
adc
dec
jl
xchg
mov
xchg
rcr
sahf
mull
addb
in
movsl
faddl
add
add
mov
xor
in
das
and
mov
mov
mov
imul
add
js
test
cmpsb
adc
in
xchg
aas
add
add
add
add
add
ljmp
mov
cmpsb
jo
hlt
and
add
add
in
mov
clc
scas
clc
popa
scas
mov
or
cmp
in
addr16
fstl
mov
xor
dec
std
push
push
mov
push
test
and
mov
xchg
aas
sub
test
jo
pop
sti
ja
inc
mov
ja
std
ja
sbb
add
add
cmp
cmpsl
push
aaa
cli
sub
add
mov
add
jns
pop
pop
pusha
mov
jb
mov
outsl
fnstsw
sahf
add
add
add
sbb
fisttpll
pop
fcompl
and
add
movsl
cs
data16
pop
lds
scas
movsb
movsb
adc
sub
dec
inc
add
add
jo
arpl
add
add
loope
mov
sbb
lahf
ret
pop
xchg
mov
adc
xchg
or
cmp
jge
fists
sbb
sub
in
lret
repnz
es
gs
adc
std
pop
and
sub
push
cmc
dec
mov
xor
lock
adc
mov
mov
adc
add
rcrl
add
add
loopne
stos
popf
cmpl
dec
stos
lds
dec
mov
inc
ficompl
add
add
dec
fisubs
mov
xorl
sub
add
add
in
jmp
stc
xchg
add
add
fxch
pop
mov
pop
iret
add
add
ss
pop
dec
mov
push
pop
lret
xchg
loopne
call
popf
addl
loopne
andb
out
andl
or
add
xchg
lock
jae
or
inc
mov
xor
sub
add
add
nop
outsl
and
imul
inc
sti
rcrl
into
ljmp
jmp
mov
pop
out
xchg
inc
imul
add
add
add
add
pushf
in
pop
les
loop
mov
jo
mov
adc
add
add
add
mov
stc
sub
push
in
insl
scas
add
cwtl
lret
mov
andl
jmp
icebp
cmp
cwtl
sub
add
add
in
cltd
imul
mov
test
loop
mov
xchg
push
cli
mov
pop
gs
cmp
push
pop
insb
mov
pop
cmp
add
mov
push
jmp
mov
xchg
mov
add
and
popa
gs
add
add
inc
ds
mov
add
outsl
lods
inc
push
or
mov
add
loope
inc
pushf
adc
ljmp
mov
jae
mov
mov
lods
lret
arpl
enter
mov
test
aaa
jge
pusha
add
add
mov
sub
add
cld
adc
mov
add
add
aad
lcall
nop
movsb
clc
inc
inc
xchg
xor
andl
add
das
pop
mov
jb
cmp
add
xchg
cmpb
out
rol
add
add
add
push
sbb
dec
mov
push
cmp
out
jecxz
cmpsb
sub
xchg
in
lret
lods
dec
negl
mov
in
je
inc
add
add
dec
aad
add
add
add
add
add
adc
fists
ret
sbb
cwtl
aam
mov
dec
sbb
push
sub
dec
xor
mov
sub
addb
add
add
mov
add
add
xchg
mov
fidivl
loop
pop
fistl
jge
add
add
jge
mov
and
adc
mov
add
xor
mov
mov
int3
pop
jae
add
add
add
add
add
add
add
add
mov
xchg
add
and
mov
push
pushl
mov
ds
xor
ficompl
scas
call
mov
in
rorl
lret
out
xor
test
clc
sub
add
add
add
add
cwtl
test
mov
mov
add
add
xchg
std
repz
add
pushf
mov
jbe
adc
jns
pop
push
mov
inc
add
add
inc
adc
add
inc
xchg
sub
add
add
scas
out
pop
out
lods
shl
jae
cltd
pop
pop
and
pop
jo
mov
add
sub
testl
daa
sub
add
add
or
push
clc
out
into
mov
movsb
mov
out
or
ret
sti
cwtl
sbb
jae
or
cmc
stos
sub
mov
lret
popf
jp
sti
out
in
mov
xor
shl
cli
sbb
cld
out
or
add
add
jmp
mov
xchg
push
and
xor
xor
fwait
cli
push
adc
repz
add
fsubr
mov
sub
add
add
add
sbb
jl
popa
xchg
pushl
add
add
add
add
push
outsl
loopne
fneni(8087
mov
pop
inc
mov
lock
fisttpl
inc
sub
add
add
aaa
movsl
cmp
das
mov
addr16
xchg
adc
jnp
daa
xor
jnp
jbe
mov
xchg
dec
test
mov
outsb
xchg
mov
scas
xchg
ret
les
js
dec
aas
fs
xchg
push
push
imul
lret
sti
clc
xor
mov
iret
mov
cmp
jmp
cltd
push
cmp
and
add
add
in
repz
loopne
jno
sbb
repz
sbb
outsl
aas
lock
add
add
xchg
les
adc
mov
lds
dec
out
es
add
add
or
add
add
add
adc
pusha
mov
xchg
cld
or
add
pop
sahf
adcl
sbb
scas
push
push
hlt
movsl
mov
nop
arpl
push
sub
incl
mov
add
add
add
add
fscale
pop
xchg
adc
data16
ljmp
out
popa
aaa
jbe
mov
add
add
nop
lret
mov
pop
xlat
xor
stos
xchg
repnz
add
cmp
inc
inc
mov
sbb
adc
fidivl
cmpsb
mov
sub
add
add
loop
inc
cmp
jmp
fcoms
pop
pop
jno
test
addr16
sbb
xchg
xchg
insb
add
add
push
cwtl
jae
mov
sti
xor
sarl
lahf
fst
push
les
ret
and
adc
add
add
repz
xchg
or
cmp
loopne
iret
arpl
add
add
push
repnz
sbb
les
mov
add
add
push
stc
sub
add
add
add
add
pop
aad
sbb
mov
fimull
add
add
imul
mov
inc
sub
adc
and
add
lcall
push
mov
add
add
push
jecxz
sbb
add
add
mov
mov
add
lret
into
mov
add
add
jl
pop
into
loope
jecxz
inc
mov
pop
push
imul
lea
inc
mov
jne
repz
jecxz
add
add
imul
sub
mov
add
repz
das
inc
add
add
mov
jbe
pusha
add
add
pop
inc
add
add
cmp
fldenv
icebp
out
pop
push
mov
jecxz
outsb
rclb
xchg
push
fists
xor
sarl
lods
aad
xchg
pop
xor
sti
xchg
scas
pop
adc
mov
xor
xchg
outsl
jnp
mov
outsb
sarb
mov
hlt
es
add
add
repz
dec
mov
add
add
push
jae
sti
push
mov
push
sbb
jno
shl
mov
push
ret
imul
sbb
push
orl
rcr
mov
mov
xchg
repnz
int3
std
dec
repz
inc
xchg
cmc
push
mov
push
sbb
add
add
jle
sub
mov
push
lods
daa
dec
decb
inc
in
inc
add
add
outsl
cmp
mov
not
lods
fstps
movsb
inc
outsl
dec
dec
add
add
imul
add
cld
test
mov
pop
rol
out
test
stos
mov
lret
jmp
dec
movsb
and
add
add
repnz
hlt
out
jge
push
ljmp
add
aam
xchg
dec
add
add
jno
or
ljmp
add
cmp
shll
fisubl
mov
adc
lock
push
addl
and
mov
ret
cmpsl
adc
mov
cmp
add
dec
ljmp
lret
jb
fidivl
icebp
jmp
inc
out
mov
add
add
iret
mov
push
xlat
loopne
add
add
mov
addr16
cmp
adc
shl
lock
test
add
jecxz
mov
sarb
add
mov
fcoml
fstl
or
repz
lea
add
add
imul
mov
and
stos
xor
lahf
mov
add
add
adc
add
add
mov
add
add
pop
inc
sub
movsl
aas
dec
pop
inc
inc
shll
or
mov
pop
xchg
fisubrs
arpl
in
xor
loop
jae,pn
mov
mov
inc
jmp
repz
scas
aad
mov
idivb
popf
out
jnp
add
add
js,pt
xor
lret
add
add
rcr
push
popa
adc
scas
sbb
ficoms
mov
pop
ds
or
daa
loopne
jecxz
daa
aam
lret
daa
xchg
mov
pop
cmpsl
nop
sub
nop
pop
cmp
mov
xlat
gs
xor
pop
lods
xor
out
fistpl
shl
cmp
push
mov
cs
in
js
sbb
add
fsts
xor
cmp
addl
dec
test
pop
mov
and
out
in
scas
inc
popf
mov
sub
cld
pushf
ds
cmp
push
inc
test
std
and
daa
add
add
jg
mov
fistpll
lds
fnstsw
push
xlat
mov
mov
push
nop
int3
out
bound
add
add
xchg
jmp
xor
cmp
add
add
and
add
add
pop
push
mov
stc
xlat
mov
sbb
sahf
cmp
shr
pop
mov
mov
int3
or
cwtl
xchg
aaa
mov
std
pop
movsl
add
mov
jbe
call
adc
sbb
sbb
add
add
add
lret
shrb
fnsave
xchg
outsl
add
mov
decb
adc
daa
mov
sub
add
add
mov
add
add
lock
mov
push
adc
push
repnz
stos
sbb
pop
jno
sbb
repz
pop
add
jns
or
fbld
jnp
mov
mov
or
gs
mov
nop
fidivs
loope
jmp
push
xchg
js
push
hlt
ljmp
jg
test
add
push
sbb
sbb
in
lahf
aas
push
mov
push
sbb
pop
pop
pop
xor
add
add
scas
pop
mov
cltd
xchg
setns
aad
mov
mov
mov
shrb
sbb
in
ret
cwtl
bound
mul
addl
popf
in
xor
aam
mov
pop
test
push
das
add
mov
fcomi
push
das
mov
lret
mov
into
dec
cwtl
out
out
out
sub
dec
jge
add
add
xchg
jbe
pop
adc
mov
pop
mov
repz
add
add
add
add
add
dec
mov
mov
icebp
pop
push
dec
mov
xlat
cwtl
repnz
jl
mov
cmp
add
add
add
xchg
pop
mov
sti
adc
dec
add
add
lret
fcomps
add
sbb
add
lahf
rcr
push
mov
add
fmull
mov
pop
mov
adc
mov
cmp
ds
adc
add
add
xchg
cld
pop
jle
xchg
lea
js
dec
sbb
aas
push
jnp
sahf
pop
push
jmp
leave
incb
add
movsl
outsl
movsl
adc
xchg
lock
push
pop
cmp
xchg
sub
add
add
and
loopne
rcll
xchg
cmp
inc
cltd
lret
mov
je
jl
mov
dec
push
add
test
outsb
jns
add
add
iret
repnz
jl,pn
adc
adc
in
dec
cltd
push
adcb
mov
lahf
push
add
jl
cmp
scas
andb
add
add
loope
push
xchg
jno
std
cmpsb
jg
jno
sbb
push
cmpsl
repnz
mov
xchg
lahf
test
ficomps
pop
std
sbb
add
add
lea
out
out
outsl
mov
cmp
mov
shll
test
and
add
add
test
enter
loop
add
add
sub
add
add
aas
xchg
pop
pop
inc
add
add
push
movsb
stos
inc
pop
cltd
in
inc
mov
out
push
addr16
fwait
jmp
add
add
add
lret
sbb
push
jmp
fsubl
std
fdivr
xchg
das
les
add
add
inc
fldcw
fst
jne
xchg
shl
xchg
mov
xchg
mov
andb
sti
in
push
adc
in
cmc
push
in
sbb
add
add
inc
fwait
lcall
jnp
jp
push
jg
sub
add
add
outsl
inc
add
sbb
scas
adc
add
add
push
addr16
repnz
sbb
add
jle
shl
and
and
outsb
lret
les
jne
xchg
dec
sbb
jmp
cld
in
or
mov
mov
add
xchg
push
sbb
or
add
add
adc
jp
aam
insb
add
add
lahf
lcall
xchg
inc
xlat
movsb
ss
inc
test
js
sbb
and
add
add
imul
or
aam
jno
inc
popa
push
add
add
add
jl
out
repnz
push
pusha
add
add
fiadds
add
add
mov
mov
adc
inc
cmc
inc
mov
dec
vpackssdw
je
std
mov
dec
jl
jnp
pop
es
sub
push
xchg
inc
not
jl
adc
or
inc
imul
add
repz
push
pop
mov
add
mov
movb
add
pop
push
fstpt
mov
add
add
dec
push
and
into
test
push
in
cmp
sbb
ret
dec
jo
pop
addr16
xor
dec
ret
fsubl
sti
xchg
test
dec
dec
mov
mov
add
add
test
enter
add
add
insb
mov
jo
mov
xor
sarb
ret
pop
jg
clc
pop
mov
sbb
xlat
adc
add
add
dec
cmp
stos
stos
or
inc
jle
push
std
outsb
aam
jb
es
daa
test
insb
add
add
aad
pushf
arpl
cmp
sbb
leave
mov
repz
xchg
or
mov
rcl
mov
and
push
in
xchg
sbb
enter
mov
mov
arpl
btsl
mov
sti
and
add
add
cmp
adc
xor
add
aas
jb
into
sub
and
add
add
add
cmpsb
mov
or
out
add
add
pop
test
add
mov
dec
inc
daa
push
or
add
add
jb
dec
pop
or
mov
das
or
divl
test
std
mov
orb
add
push
lock
lret
dec
add
add
pop
fwait
and
inc
cli
cmc
out
hlt
fcompl
aam
add
add
sub
add
add
movsb
sbb
sub
add
add
cmp
add
and
add
add
add
mov
dec
sbb
cmp
xchg
and
fnstenv
mov
pop
fs
ret
push
movsb
es
sub
mov
sub
fstps
imul
jmp
fstp
mov
mov
in
dec
or
mov
jno
push
outsl
mov
xchg
add
add
add
repz
add
sbb
mov
dec
add
add
mov
add
pop
or
add
add
push
aaa
cmp
std
out
pop
jno
or
inc
mov
mov
add
add
aaa
ljmp
push
mov
xor
rcl
dec
sbb
add
add
or
lret
fwait
jg
mov
jl
xor
cmp
or
or
icebp
xor
or
jb
xor
mov
test
dec
out
xor
add
add
dec
in
and
add
add
sub
pop
sti
dec
or
add
add
fimull
or
add
add
lahf
out
cmp
adc
push
or
add
pop
add
cmp
add
add
mov
add
add
add
and
sub
lret
cmp
mov
shl
xchg
arpl
inc
xchg
dec
imul
in
and
mov
cld
clc
sub
push
stos
sti
jne
loopne
shrb
jns
cmovge
cmp
inc
mov
push
dec
mov
pop
loop
mov
cmpsb
aam
pushl
sub
mov
xor
adc
shl
les
xor
cli
pop
mov
divl
xchg
push
int3
and
sbb
mov
test
pop
fldenv
inc
cmp
inc
fistps
sbb
loop
xchg
stos
scas
mov
sub
outsb
sub
add
add
out
adc
imulb
sahf
jp
dec
push
movsb
or
add
add
movsb
imul
sub
add
add
pop
mov
or
jbe
cmpb
add
add
add
add
lahf
outsl
or
rclb
add
add
mov
mov
add
add
or
mov
out
sbb
sub
add
add
add
add
lret
data16
dec
mov
nop
hlt
addl
add
movsl
ss
data16
dec
sti
fmull
addb
xchg
mov
mov
call
cmp
sbb
lds
sbbl
test
and
jge
jg
mov
sbb
add
add
mov
fbld
xchg
loop
in
cltd
shl
mov
mov
out
xor
mov
add
add
add
add
sub
mov
insl
pop
das
test
sti
xchg
jbe
loopne
cmpsl
stos
push
xor
cltd
push
xor
and
hlt
out
add
add
stos
ljmp
push
shr
mov
xlat
inc
adc
sbb
stc
aad
gs
mov
mov
inc
in
pusha
add
add
into
mov
jae
imul
add
add
add
fwait
and
add
add
pop
shll
jo
rol
imul
enter
inc
mov
jl
pop
cs
inc
leave
sub
add
add
out
or
add
add
push
sbb
and
mov
add
add
aad
test
loopne
push
rorb
into
stos
gs
xchg
test
push
es
test
add
add
dec
sub
add
add
out
add
enter
add
stos
movsl
push
xchg
add
add
mov
inc
mov
mov
out
fwait
movb
and
xchg
mov
lret
jg
dec
mov
dec
sbb
outsl
mov
dec
imul
dec
lret
lcall
bound
mov
sbb
cmc
into
mov
jle
jo
xlat
mov
add
add
out
sbb
out
push
sub
gs
cwtl
mov
add
add
cmp
add
add
push
and
add
add
jecxz
pop
arpl
aaa
adc
jnp
push
loop
push
test
dec
xchg
mov
popf
mov
add
add
sub
add
add
and
cmpsb
outsl
lahf
add
stc
incl
cld
cmpsl
cwtl
adc
mov
xor
in
cmp
mov
dec
xor
mov
insb
mov
push
scas
shrb
and
add
add
dec
dec
xchg
scas
jp
es
dec
add
add
mov
pop
push
sub
add
add
cli
cmc
call
cwtl
out
ficompl
add
add
dec
jl
in
add
jns
mov
cltd
popf
and
add
add
mov
imul
sbb
add
add
loopne
push
pop
xor
hlt
xchg
pop
insl
outsw
outsl
pop
bound
andl
rcrl
add
add
les
popa
inc
dec
int3
and
xchg
imul
out
push
dec
test
and
daa
jecxz
into
xchg
mov
test
insl
stc
sub
add
insl
cld
inc
xchg
pop
mov
add
jnp
adcb
add
add
shll
test
add
add
inc
mov
jno
mov
cli
push
inc
mov
arpl
dec
sti
adc
add
mov
hlt
push
push
mov
add
mov
fsts
iret
mov
push
add
add
add
int
jo
cmp
or
mov
pop
and
add
add
jge
outsl
push
mov
fwait
imul
sub
in
pop
xchg
sub
jge
scas
int3
loope
jns
sub
add
ljmp
gs
add
add
mov
in
dec
add
add
dec
mov
mov
adc
and
add
add
add
mov
add
xor
add
add
lock
add
add
mov
fldcw
fcomp
je
jmp
add
add
xor
push
sbb
aas
pop
add
dec
loope
mov
dec
add
add
lea
add
pop
out
rcl
js
lahf
mov
rcrl
add
aas
xchg
pop
add
mov
lods
xchg
or
test
jmp
imul
sub
add
add
out
mov
shlb
or
mov
add
rcrb
lods
mov
pop
in
inc
icebp
nop
lcall
add
add
add
cmp
add
nop
or
dec
mov
out
stos
adc
repnz
add
add
les
mov
cmpsb
xor
add
mov
dec
pop
enter
inc
sub
add
add
in
flds
int3
add
mov
cmp
fdivrl
jge
stc
push
aam
inc
mov
lret
add
add
mov
negb
sub
dec
outsb
stos
jno
std
add
add
xchg
pop
xlat
xchg
or
add
add
nop
in
xor
add
push
repnz
addb
add
add
out
mov
popa
lcall
kmovb
inc
mov
cmc
mov
inc
or
cli
jae
les
aad
pop
test
insb
mov
ds
test
add
add
dec
jge
sub
jae
les
and
rcl
push
je
insl
lahf
dec
sub
jmp
jle
mov
or
mulb
sbb
push
cmp
in
xchg
sbb
lds
add
mov
dec
mov
jmp
cmp
mov
lock
mov
push
cltd
or
dec
mov
xchg
call
push
mov
pop
mov
sbb
out
add
add
lret
cmpsl
mov
cwtl
dec
clc
cmp
jne
rcrb
xchg
sub
add
add
add
or
add
add
add
add
in
cwtl
dec
out
cmp
add
add
add
cltd
std
les
add
add
sub
inc
add
add
sub
lret
mov
xor
out
mov
xor
imul
add
ss
mov
in
xchg
mov
sub
add
add
mov
jecxz
push
and
aaa
rolb
add
lcall
shrb
add
add
sar
lods
mov
and
pop
bound
add
add
jle
add
add
add
sti
xchg
or
insb
mov
fdivs
adc
add
push
out
mov
jbe
rorl
jle
pop
pop
sbb
pop
jb
add
jmp
add
add
mov
lcall
enter
push
aad
add
cmp
pop
jle
shlb
or
test
orl
add
inc
sahf
jl
mov
add
add
add
jmp
add
add
add
add
loop
mov
sub
rcll
inc
sbb
xchg
jle
or
adc
inc
xchg
push
call
jle
repnz
add
repz
push
xchg
loope
outsb
movsb
pop
cltd
mov
in
mov
inc
push
popa
aad
pop
lods
std
jb
rcll
push
jle
stos
mov
test
cmp
jecxz
pop
jb
and
in
loopne
movb
add
sub
or
cmp
fwait
and
add
add
pop
dec
mov
cmpsl
ret
inc
jbe
pop
xchg
mov
pop
add
xchg
push
sub
add
add
sub
add
add
sbb
outsl
lods
jmp
ss
ja
movsl
xchg
inc
push
dec
adc
xchg
negb
roll
add
add
push
nop
mov
sub
ret
andb
inc
dec
shrl
mov
in
mov
aas
enter
push
cwtl
push
test
nop
mov
add
ljmp
je
add
add
push
adc
add
add
add
add
ljmp
aas
je
sbb
inc
cld
mov
add
add
sub
jno
or
test
icebp
sbb
add
add
add
add
mov
add
add
in
sbb
fsubrp
movsb
add
popa
gs
cmp
mov
shlb
add
add
push
es
clc
and
jno
dec
dec
mov
adc
lcall
fmuls
xchg
addr16
pop
lcall
jle
cmp
mov
inc
outsb
mull
dec
xor
mov
jmp
or
add
add
cld
mov
cmp
add
add
enter
pop
movsl
mov
mov
pusha
add
add
jp
adc
add
add
push
hlt
andl
aaa
clc
push
rolb
stos
cmp
lods
ret
jbe
fyl2xp1
jae
test
pop
ficompl
add
add
add
jnp
mov
and
push
sbb
jno
or
dec
mov
mov
mov
add
in
aad
xor
jmp
add
add
add
iret
aad
cmp
insl
add
add
add
jmp
aas
movl
adc
test
cmp
add
add
add
add
cli
sbb
movsl
inc
or
add
add
add
add
add
mov
adc
ret
jns
nop
lret
pop
pop
push
lds
movsl
jle
push
pop
jnp
js
std
add
xchg
lret
mov
add
cmp
imul
add
xor
pop
mov
inc
ds
push
imul
mov
sarb
xchg
arpl
add
sbb
mov
data16
push
fnstsw
inc
mov
cmpsl
lods
push
xchg
addr16
and
iret
mov
imul
nop
cmp
shrb
mov
test
xchg
divl
mov
cmp
sub
inc
add
add
or
push
adc
add
add
arpl
xchg
sahf
ds
lea
or
mov
push
mov
aad
pop
test
inc
sub
add
add
mov
ss
inc
mov
mov
pop
mov
cmp
bound
paddsw
jecxz
push
aam
pusha
mov
dec
mov
dec
ret
les
in
xchg
shlb
fistl
bound
dec
in
stos
jg
ds
cmp
inc
mov
mov
bound
add
stos
movsl
add
add
clc
add
add
or
adc
xchg
or
inc
in
out
push
stc
pop
leave
adc
add
ror
rclb
hlt
iret
aam
mov
and
cmpsl
arpl
sbb
jne
test
icebp
je
mov
ss
sti
lock
fsubrl
inc
rolb
dec
cmp
int3
inc
jmp
add
add
repz
lret
cmp
jbe
pushf
dec
ret
inc
jne
int3
jbe
pop
pop
add
or
enter
loopne
pop
pusha
mov
imul
mov
addr16
or
lods
mov
and
ret
push
sub
add
add
subl
xor
adc
xor
fldenv
add
inc
mov
cmp
jecxz
repz
into
inc
flds
add
add
test
xor
mov
push
ds
out
cmc
ret
push
fmull
add
add
mov
sbb
and
push
adc
add
movsl
pusha
mov
rclb
aas
dec
xchg
pop
push
faddl
xchg
es
pop
arpl
jl
fimuls
add
add
cld
mov
or
add
add
sti
cmp
mov
movsl
idivl
rcl
xchg
pop
push
ficoms
mov
pop
jae
scas
les
ss
mov
add
lcall
push
stos
fstpl
ljmp
mov
xchg
into
std
push
push
popf
in
sub
add
and
fdivs
pop
ret
push
outsl
out
loop
js
and
add
add
mov
sarb
mov
in
push
adc
jp
fsubrl
push
pop
int3
popa
add
add
add
sbb
add
add
add
xlat
sbb
pop
adc
mov
add
pop
cld
pop
pop
cmpsl
sub
inc
outsb
add
add
add
adc
mov
subl
add
xchg
xchg
push
test
sbb
xchg
mov
push
jne
mov
fwait
lahf
sbb
test
add
cmp
inc
fdivrp
jp
and
add
add
jnp
xor
iret
iret
inc
mov
in
test
push
push
xchg
nop
out
mov
xchg
add
add
pop
andl
rolb
cld
and
add
xchg
xchg
mov
icebp
and
add
add
jmp
repz
add
sub
fstps
push
ss
xorb
dec
ret
sub
add
add
xor
mov
add
add
add
add
lcall
inc
add
add
mov
xlat
outsb
inc
pop
inc
ljmp
push
movsb
ret
ss
sbb
mov
add
add
jne
into
pop
inc
add
add
fldenv
add
add
sbb
fstpl
dec
mov
dec
or
pop
lret
gs
lret
inc
mov
inc
icebp
xchg
mov
xor
and
jb
stc
xchg
xchg
add
add
add
mov
sub
jo
add
fisttpl
cmp
jbe
pop
in
xor
movb
mov
add
rcr
cmp
xlat
in
push
or
xchg
fildl
aam
push
pop
mov
jl
cmpl
inc
dec
outsb
inc
add
add
xchg
cwtl
xchg
popa
pop
push
sub
push
scas
es
rcr
mov
arpl
stos
xchg
mov
mov
add
out
jle
add
in
cmp
add
push
scas
std
mov
outsl
dec
add
add
pop
arpl
inc
das
mov
push
mull
add
sub
add
add
mov
add
add
pop
out
loop
push
mov
cli
test
mov
shlb
cs
cmp
inc
mov
mov
add
add
add
sub
push
mov
outsl
xchg
jg
xor
add
add
call
push
lea
pusha
mov
xchg
adc
mov
sub
add
add
jnp
daa
sub
add
add
sti
cmc
adc
insl
gs
push
pop
aam
xchg
jae
jae
jae
pop
insb
add
add
xor
add
add
movsl
aam
push
jno
arpl
add
int3
mov
lcall
roll
int3
lods
sbb
add
adc
push
or
add
add
popf
mov
orb
push
mov
mov
add
add
xor
or
jmp
add
dec
jge
pop
cmp
add
add
push
sbb
add
or
dec
push
adc
add
add
and
pop
inc
mov
out
test
mov
movsl
js
mov
xorl
cmpsl
add
add
add
add
cmp
xlat
rolb
dec
lret
rolb
dec
add
add
les
or
mov
and
xchg
ret
mov
jmp
incb
aam
mov
mov
sub
aas
mov
outsb
mov
shr
arpl
add
add
popf
and
add
add
out
lret
cmp
cmpsl
push
test
cli
sub
adc
loop
test
movsb
push
pop
rclb
fstpt
mov
jmp
bswap
push
icebp
stos
xor
or
in
pop
adc
mov
xor
sbb
vcmppd
test
and
add
add
clc
inc
mov
movsb
fadd
and
movsl
xor
aam
add
add
adc
add
fiadds
mov
mov
add
add
lea
mov
lahf
popf
xchg
xchg
push
fildl
jb
xchg
jae
xor
pusha
mov
mov
filds
sub
imul
adc
nop
inc
fcompl
stos
adc
sbb
hlt
add
push
jns
stos
lret
cmpsl
hlt
aam
fstpt
cmc
insl
fisubrs
jno
loop
or
cmpl
mov
add
add
mov
das
jnp
mov
cmp
add
pop
and
push
dec
mov
imul
in
cmp
xchg
mov
addl
sahf
sbb
jg
add
add
add
jb
sub
add
add
add
add
cmp
xchg
mov
add
add
aas
jge
int
push
mov
mov
mov
cmp
sub
add
ja
mov
add
add
inc
mov
sub
mov
dec
push
xchg
or
add
add
adc
dec
leave
popa
ret
or
add
and
cmc
sbb
xchg
mov
in
adc
mov
lret
fwait
and
add
add
sarb
add
fimuls
lock
jns
jbe
je
jnp
ret
lds
add
add
jg
jecxz
sub
fmull
stos
clc
in
fisttpl
jnp
jnp
add
add
add
pop
mov
fistpl
inc
mov
inc
adc
mov
add
add
add
scas
add
loope
mov
cmp
lcall
outsb
inc
push
aam
or
add
add
repnz
pop
pop
mov
inc
xor
dec
add
add
add
loop
pop
sub
mov
clc
jp
jge
inc
add
add
inc
or
adc
adc
sarb
fildl
add
add
out
cmp
add
adc
cld
test
in
out
jg
add
sub
add
add
in
sbb
insb
mov
jp
jno
data16
fwait
repnz
inc
mov
jle
ljmp
pusha
mov
pushl
add
pop
inc
mov
push
pop
pop
lahf
or
add
add
add
add
adc
sub
add
add
icebp
fisubrl
cltd
push
js
push
out
icebp
cli
bound
in
pop
jecxz
enter
add
add
je
and
or
add
nop
adc
cmc
ljmp
pop
add
add
cld
xchg
cmp
add
add
cmp
rorl
add
in
pushf
gs
fs
in
sub
mov
jmp
push
inc
add
adc
sbb
lods
cwtl
cmpsb
mov
jb
in
aad
pop
repz
add
add
movsb
or
add
add
loopne
repnz
bound
pop
das
cmp
add
adc
call
or
add
add
push
movsb
scas
ret
arpl
mov
add
jno
aas
cmp
add
add
sub
aas
int3
sbb
mov
les
xchg
aad
push
dec
cmc
sbb
dec
jle
xchg
lock
aad
cmc
cltd
sub
add
int3
inc
xor
sub
mov
xor
push
mov
ja
loop
and
enter
mov
lcall
add
pop
fxch
notb
and
fcompl
dec
push
aam
cmpsb
push
cmp
iret
mov
sub
add
add
add
xchg
stc
das
push
movsl
sbb
add
das
subl
dec
aam
movsb
jbe
mov
sbb
aam
mov
add
add
imul
pop
test
push
and
add
add
fwait
out
cmp
mov
in
jge
movsb
mov
mov
add
add
mov
out
add
add
add
jb
pop
pop
and
add
add
jb
xor
add
add
mov
sub
dec
cmp
shr
in
mov
xchg
mov
mov
ljmp
aas
sbb
mov
add
and
and
dec
subb
add
add
aas
dec
ficoml
test
push
xor
add
test
test
sub
negl
add
aas
dec
mov
mov
xor
xor
out
adc
xor
xchg
arpl
fsts
out
subl
les
cld
jmp
add
add
sub
add
add
add
aad
jg
add
add
and
dec
mov
inc
add
add
into
mov
aaa
aaa
out
imul
add
loope
jle
sbb
fnsave
les
push
mov
shll
repz
xor
test
add
sub
add
add
iret
lods
add
adc
out
lea
add
add
test
push
mov
or
push
add
imul
add
inc
dec
add
add
insb
mov
mov
mov
sbb
sbb
sbb
fbld
fisubrl
mov
js
mov
iret
lea
cmpsl
add
lods
push
gs
add
enter
xchg
pop
xchg
cwtl
pop
aad
push
into
xchg
add
add
fstpl
sub
add
add
lcall
adc
adc
xor
mov
lods
adc
add
enter
jae
jg
mov
add
add
adc
lcall
stc
or
iret
orl
out
scas
stos
shrb
xor
or
andl
add
add
xchg
add
mov
add
dec
add
add
cmpsl
inc
add
add
sbb
mov
mov
or
pop
imull
add
mov
scas
lret
jge
sar
jns
daa
adc
add
call
jno
jmp
in
sub
repnz
scas
cmpsb
sahf
push
gs
bound
cmpsw
aaa
xchg
jmp
add
add
xchg
sarb
add
add
push
mov
cmp
add
add
sub
lcall
cmpxchg
mov
cmp
mov
sbb
mov
add
add
lods
sub
mov
lea
adc
inc
add
add
dec
mov
sub
add
add
mov
cmp
pop
ret
inc
clc
out
xchg
push
sarb
add
add
insb
mov
sub
add
add
cmp
pop
add
add
add
cs
ret
es
inc
xor
les
test
rcll
outsl
or
sbb
fstps
mov
add
add
xchg
clc
sahf
inc
mov
mov
stos
add
add
add
fwait
pop
adc
add
cmp
add
add
xor
adc
std
jmp
mov
add
add
add
xchg
addr16
cld
mov
lret
push
ljmp
lds
add
add
dec
mov
cmp
jbe
dec
inc
movl
jb
lods
jns
and
inc
mov
inc
cmp
xor
outsb
test
push
shll
mov
stos
mov
test
pop
and
add
add
add
xchg
inc
and
cmpsb
push
jnp
jb
fsubrs
add
add
in
inc
movsb
hlt
mov
pop
out
sub
cmp
pop
pop
cmpsl
cld
jp
test
repz
mov
das
pop
dec
loop
outsl
pop
add
rol
push
sahf
repz
dec
fdivrs
imul
mov
mov
add
dec
mov
shlw
cs
aam
mov
jg
pop
sub
add
add
add
add
mov
xchg
mov
and
push
inc
xchg
push
leave
sub
movsl
jns
mov
pop
mov
add
add
and
hlt
in
lret
je
loop
mov
out
pop
fcomp
dec
mov
mov
loope
add
add
xchg
add
jbe
cltd
pop
dec
icebp
subb
jmp
insb
add
add
ret
in
add
add
stos
jmp
add
add
inc
or
lds
adc
cmp
xor
cmp
rorb
push
int
mov
pop
orb
inc
add
add
popa
into
into
push
js
outsb
push
xor
fstpt
sub
add
mov
cwtl
mov
sbb
dec
test
push
es
es
lods
in
negl
add
push
aaa
cmp
add
add
testb
adcb
ja
push
xor
ja
ljmp
sbb
add
add
lea
add
sbb
sbb
push
addb
mov
lcall
mov
js
mov
loop
dec
xor
jp
add
and
xlat
mov
scas
push
fisttps
jne
mov
test
inc
sbbb
mov
mov
cmpsb
dec
and
add
add
les
mov
ret
test
pop
cmpsl
jg
lahf
xlat
ds
or
add
loopne
repz
and
test
xchg
bound
and
sub
xlat
das
aas
adc
xor
xor
jmp
lret
push
jmp
jp
mov
movsl
jle
sbb
repz
lret
jge
insl
lcall
add
add
ret
stos
adc
arpl
add
or
mov
ja
lea
jl
mov
or
adc
insl
inc
popl
mov
in
mov
mov
and
insb
mov
test
add
lds
in
movsb
ret
out
jmp
xchg
inc
mov
shr
ret
iret
lods
dec
fsubl
cmp
add
pop
orl
add
add
xor
adc
pushl
mov
jae
ljmp
dec
sbb
mov
insb
mov
fisttpll
push
mov
and
shll
outsl
pusha
add
add
sub
add
lahf
jg
jp
sub
xchg
push
lret
or
add
add
jge
add
add
or
cmp
add
add
or
or
add
add
push
xchg
lock
inc
insl
cwtl
jne
dec
insl
dec
test
push
nop
xchg
lret
lods
xor
mov
cmp
cltd
mov
or
xor
scas
fnsave
rcrb
xchg
jmp
xchg
and
add
add
sub
add
add
add
or
dec
jle
andl
xlat
mov
add
sub
add
add
fidivs
lds
adc
not
and
add
add
pop
push
loop
fldt
dec
cmp
gs
inc
jno
lret
and
add
add
ss
sti
cmp
push
sbb
cmpb
or
add
add
repz
jb
shr
jecxz
sbb
daa
imul
stos
mov
negl
add
add
lock
mov
add
add
into
mov
inc
pop
mov
cmp
add
add
rcl
jg
push
mov
int3
imulb
add
add
pop
mov
add
add
add
daa
sbbl
les
and
add
add
or
popf
pop
mov
shl
sub
add
add
or
add
add
add
add
insb
add
add
fs
add
add
std
outsb
popa
or
add
push
aam
inc
add
add
into
or
xor
imul
inc
add
add
push
jg
xlat
or
stos
into
dec
dec
call
sbb
add
gs
sub
pop
add
dec
or
add
mov
mov
fwait
orl
mov
mov
or
xor
jns
jg
bound
data16
test
dec
mov
clc
ficoml
faddp
push
call
add
add
mov
add
aas
clc
fucom
xchg
and
imul
adc
out
imul
into
testb
movsl
aas
cmpsl
in
push
jmp
mov
lock
movl
mov
push
push
sahf
push
addr16
xchg
aam
out
mov
push
push
jne
sahf
jmp
or
add
add
inc
add
std
xor
sbb
jmp
in
sub
add
add
cmp
decb
test
mov
adc
cmpsb
inc
mov
lret
imul
jae
fmulp
pusha
add
add
inc
repz
add
add
lret
sarb
and
mov
jns
adc
arpl
add
add
sahf
in
cld
leave
mov
aad
pop
and
dec
and
add
add
add
adc
xlat
or
aam
add
add
jg
mov
lds
add
add
pop
cmp
mov
add
add
add
fwait
sub
add
add
icebp
lret
fwait
lret
add
add
shll
int
add
add
add
add
fstpl
cmc
push
decb
jecxz
call
aaa
adc
sub
andb
add
pushf
pop
push
or
add
add
ljmp
scas
dec
nop
push
xchg
push
sbb
pop
leave
mov
cld
push
xor
add
or
movsb
out
rcrb
insb
mov
and
je
add
push
xchg
inc
fimull
lcall
xor
add
cltd
je
inc
add
add
ficompl
xlat
mov
push
ljmp
mov
pushl
mov
test
arpl
mov
xor
add
add
inc
mov
cwtl
cli
movsl
ficoml
or
fnstsw
mov
enter
mov
in
mulb
mov
lahf
fwait
lret
stc
aad
and
jp
adc
mov
add
jge
jnp
mov
sbb
mov
push
test
pushf
xchg
jns
push
mov
popf
push
popa
mov
cwtl
in
out
sub
add
add
pushf
add
jo
xchg
hlt
outsl
movsl
fcmovnb
push
mov
cmc
sbb
sbb
xor
int
push
mov
push
adc
adc
jle
addr16
or
test
cmp
mov
jnp
jecxz
jb
jg
sbb
ds
adc
lahf
dec
mov
add
add
add
aam
inc
mov
inc
add
push
sub
add
lret
shll
inc
jge
out
pop
test
lods
repnz
movsl
fwait
stos
sbb
add
jnp
rcl
pop
sub
jo
add
add
add
nop
push
insb
mov
das
cmpps
xchg
push
lods
sub
xor
push
jmp
push
mov
or
add
add
mov
repz
and
popa
and
dec
add
sbb
xor
cmc
fidivrl
je
stc
cmc
inc
adc
add
add
add
add
adc
add
add
sbb
sub
add
outsl
jns
mov
lret
jl
pop
jnp
jno
add
add
xchg
mov
add
and
add
add
rolb
add
add
test
loope
push
fsubrl
pusha
mov
xchg
repnz
add
add
movsl
sub
add
add
and
add
add
sbb
mov
mov
cs
shlb
dec
mov
xor
adc
in
adc
jb
mov
adc
and
add
add
in
aaa
popf
jno
ljmp
inc
mov
add
std
fnsave
mov
add
add
aad
xor
aaa
setle
lods
fdivl
xchg
xchg
adc
push
cwtl
jno
cld
int
push
dec
fs
mov
add
sbb
mov
cli
jno
in
daa
pop
imul
add
out
sub
cld
or
cwtl
repz
xor
or
add
add
int3
dec
rorb
imul
icebp
fneni(8087
mov
aam
mov
xchg
and
in
loop,pt
xchg
fisttpll
add
int3
pop
cmc
sbb
loopne
dec
movsb
lods
pop
adcl
xchg
jo
mov
or
cmp
add
add
ror
and
lds
ljmp
lahf
xor
add
add
inc
punpckhwd
je
mov
pop
push
pop
xor
cmp
add
add
add
and
sub
add
add
imul
add
lret
fistpll
inc
mov
lds
mov
mov
cltd
mov
fdivs
cltd
add
stc
shll
pop
inc
pop
outsb
jns
add
add
fxch
shlb
add
add
inc
std
lods
stos
cmpsl
jecxz
imul
sub
cs
out
xor
lret
aam
add
add
adc
mov
call
dec
add
pop
dec
and
add
add
xchg
add
push
xchg
jecxz
xor
mov
test
into
mov
dec
xchg
popa
outsb
sub
add
add
fdivrs
outsb
sub
sbb
inc
add
add
cmp
push
xlat
pusha
mov
inc
xchg
and
add
add
add
add
daa
push
xchg
popa
sbb
andb
js
mov
sbb
or
add
add
xor
add
add
mov
add
add
rdtsc
lods
mov
mov
pop
test
or
xor
mov
sub
add
add
add
add
add
aaa
sahf
cli
push
in
mov
or
dec
mov
jnp
add
leave
sahf
dec
sbb
aaa
sar
dec
sbb
jg
xchg
iret
repz
mov
cmp
cmp
stos
out
cld
cld
arpl
mov
sarb
dec
xchg
pop
sub
rol
push
roll
stos
xchg
clc
pop
gs
loope
in
fcoms
mov
jge
rcr
cmc
inc
repz
fisttpl
add
add
and
inc
imul
aam
add
add
xor
push
test
cmc
jns
jnp
je
aas
inc
or
add
add
clc
inc
mov
imul
xor
gs
mov
jae
repz
push
mov
sub
or
pop
jmp
add
jmp
dec
fsubr
test
movaps
add
add
mov
mov
or
add
add
lcall
fcomip
add
sbb
push
mov
mov
rorb
mov
lock
ficoml
loop
insl
xor
add
add
cld
push
add
jne
jo
aam
pop
sbb
pop
pop
sbb
dec
add
add
lahf
adc
rcll
loop
add
adc
fadds
cmpsl
inc
mov
add
add
dec
mov
bound
mov
pop
pop
and
add
add
sbb
mov
or
add
add
mov
cmpsl
cwtl
pop
jle
dec
dec
nop
in
gs
out
mov
fildll
inc
add
add
push
sub
dec
add
add
sti
pop
pushf
push
inc
or
add
add
imul
loop
and
add
add
adc
clc
shrb
ret
lcall
sbb
and
and
imul
jbe
sub
push
mov
adcl
in
pop
hlt
xor
jge
xor
mov
add
and
mov
cmc
push
lock
adcl
and
add
add
inc
sbb
add
add
inc
lock
or
pop
les
pop
cmc
xor
adc
mov
jl
mov
jl
add
add
add
xchg
stos
xchg
jecxz
add
add
fsts
addl
jmp
arpl
stos
cmp
xchg
movsl
sbbl
mov
nop
adc
in
ret
jnp
cmp
and
jg
jmp
add
bound
arpl
add
mov
xchg
and
add
add
or
incl
lret
jge
push
outsl
jnp
mov
add
add
cmp
mov
pop
arpl
adc
ds
mov
add
add
add
daa
ret
push
fiadds
add
add
sbb
sarb
add
jno,pt
mov
adc
xor
stos
sbb
cmp
subb
push
or
dec
inc
cmp
xchg
pop
cmp
inc
cmpsl
test
mov
mov
jb
push
or
mov
add
push
pop
push
cltd
mov
xor
jno
int
jl
out
test
test
mov
cmp
add
add
add
add
das
push
push
push
push
fwait
std
lret
mov
out
inc
and
cmp
clc
and
sbb
or
ret
clc
xor
cmpl
add
mov
add
add
call
mov
add
add
add
aas
loopne
jecxz
pop
push
rolb
pop
mov
je
pop
sbb
or
add
add
and
mov
jge
push
scas
into
lcall
add
add
or
mov
or
jmp
outsl
xchg
retw
mov
aam
mov
arpl
dec
es
mov
lahf
mov
stc
mov
jae
sub
cmp
inc
nop
fcoms
mov
add
add
add
inc
adcl
cmp
mov
mov
gs
or
add
add
push
lret
inc
mov
fs
push
ljmp
lret
fsubrl
arpl
add
add
push
dec
xchg
sbb
data16
loopne
sbb
lret
sbb
xchg
lret
test
mov
mov
dec
fsubp
movsl
mov
add
xchg
inc
add
add
pop
xchg
dec
push
movsb
pop
mov
mov
sahf
cmp
add
lahf
cmc
repz
and
add
push
jl
icebp
xchg
push
iret
sub
push
test
mov
in
das
js
fmuls
nop
dec
push
mov
mov
pop
inc
jmp
mov
subb
push
push
out
dec
test
sub
sbb
ds
adc
imul
push
popf
dec
mov
mov
add
sbb
add
adc
add
std
loop
mov
jl
xchg
pop
pusha
add
add
jge
inc
data16
jbe
ficompl
fcomps
mov
sahf
mov
add
add
mov
add
add
cli
xorb
mov
xchg
push
jmp
mov
add
cmp
add
add
add
fwait
int3
and
add
add
adc
cmp
mov
mov
push
mov
inc
add
add
ljmp
add
jecxz
fildll
push
aaa
movsb
xchg
ja
scas
lods
mov
add
add
push
mov
popf
sub
nop
jb
adc
leave
lcall
arpl
repnz
mov
add
add
push
cmp
and
xlat
push
and
test
sub
xchg
pop
mov
lahf
fldl
add
cmp
into
lock
sub
mov
add
xchg
add
sub
or
add
add
jge
iret
add
add
mov
scas
dec
daa
sar
movsl
lahf
inc
push
std
in
inc
dec
jnp
aam
fcom
fidivs
hlt
mov
jg
cmpsb
pop
test
jecxz
adcb
xor
into
jne
lret
mov
mov
add
add
fdivp
push
or
push
in
enter
add
add
insb
add
add
xor
dec
add
add
inc
adc
push
inc
stos
xchg
ret
xchg
hlt
jns
not
sbb
add
add
add
add
test
xor
aaa
idivl
inc
mov
mov
gs
into
add
arpl
pusha
mov
aad
cld
iret
in
mov
pop
adc
add
mov
scas
clc
dec
loopne
stos
sbb
enter
les
jle
int
ja
add
adc
icebp
cmp
xlat
jmp
pop
push
cmp
inc
add
add
rcrb
bound
inc
jns
mov
xchg
nop
scas
push
inc
jo
repnz
mov
out
mov
push
adc
add
add
inc
pop
adc
add
add
and
add
add
or
mov
push
mov
stos
mov
fisttpll
mov
fldl
jecxz
inc
add
dec
add
add
dec
push
rcll
out
iret
xchg
push
lods
mov
add
add
pusha
mov
mov
loop
pop
cmpsb
ds
add
add
add
inc
inc
stos
xor
add
enter
add
xor
dec
fstps
icebp
pop
out
mov
xor
imul
jp
cmp
in
add
add
adc
mov
cmp
out
inc
and
mov
repz
push
add
add
add
test
add
mov
pusha
mov
rclb
outsl
adc
add
add
push
out
pop
in
xor
scas
cmp
push
push
imul
mull
jns
add
add
addl
add
add
add
add
daa
repz
int
aam
sub
adc
add
dec
ljmp
gs
xchg
push
push
sbbb
add
add
aad
add
add
inc
stc
pop
mov
dec
jp
cmp
xor
push
mulb
add
add
aam
or
add
das
fsubs
ret
insb
mov
jb
inc
xchg
push
and
add
add
adc
add
xor
sbb
jmp
sbb
add
add
les
insl
fistps
dec
add
add
push
std
mov
repnz
pop
lret
mov
add
rorb
sub
ret
std
jg
mov
sbb
lea
mov
add
push
fistl
mov
cmc
sub
inc
and
add
add
add
mov
mov
mov
add
add
add
add
lea
int
outsb
mov
insb
mov
xor
xor
xchg
fiadds
xchg
mov
jno
add
add
aam
and
test
orb
add
inc
mov
sbb
cs
cld
mov
ja
fadds
push
sub
mov
dec
mov
outsl
dec
pushf
idivb
jb
xchg
xchg
frstor
movsb
shlb
push
stos
outsb
adc
cmp
aas
mov
cs
aaa
shlb
add
adc
insb
add
add
call
or
jmp
mov
add
add
pop
pop
imul
movsl
scas
out
call
dec
add
add
int3
pop
and
add
add
outsb
lcall
add
add
mov
push
pop
add
xchg
mov
push
xchg
sbb
add
jge
lds
iret
mov
mov
jo
xor
faddl
add
add
add
sub
pop
jg
loope
aam
loope
add
add
loope
sbb
push
ljmp
cmp
fstps
pop
jl
inc
add
add
movsl
xchg
mov
test
aad
jns
xchg
mov
jp
push
push
inc
mov
mov
adc
mov
mov
cmp
add
dec
mov
push
and
call
pop
inc
mov
repnz
xorl
cmpsb
jnp
repnz
rolb
in
xchg
jmp
add
mov
ja
pop
mov
add
lahf
cmp
aaa
push
jg
xchg
and
mov
test
cmp
xchg
idivb
cmpsb
dec
es
push
fisubs
push
jmp
mov
cmp
xchg
pop
imul
add
inc
and
add
add
imul
sahf
mov
ret
cmp
adc
clc
sub
add
add
jne
mov
pop
scas
je
aad
inc
add
add
sub
mov
sub
sbb
mov
dec
push
test
push
scas
sarb
dec
add
add
std
std
push
insl
push
sbb
mov
rcrb
add
add
mov
jmp
sub
add
add
mov
test
cs
jne
ret
add
add
add
add
and
add
add
or
add
add
dec
add
add
xor
outsb
jmp
pop
jnp
testl
add
add
xor
push
sbb
and
test
cmp
xor
gs
sahf
jle
cmp
aad
je
push
or
sbb
gs
adc
add
sbb
add
add
lret
push
jmp
add
add
cmp
push
inc
inc
imul
pop
fwait
sarb
fstl
add
jne
out
int3
in
mov
ret
jg
in
enter
mov
sub
jmp
popa
mov
add
add
add
jnp
mov
loopne
gs
xor
lret
testb
add
lret
xchg
inc
sbb
cmpsl
daa
std
jecxz
aas
pop
shl
pop
imul
test
sahf
scas
inc
jge
add
add
das
shr
mov
repnz
jb
fldenv
lcall
in
fsubr
enter
stc
and
in
out
ficoml
add
add
insl
mov
stc
jg
adc
sub
mov
dec
mov
jo
or
add
sub
add
add
inc
push
stos
xchg
scas
mov
inc
mov
mov
jbe
fidivs
mov
mov
stc
scas
mov
add
add
test
les
sbb
inc
jno
in
mov
and
jns
cmc
pop
xor
lret
nop
lea
into
add
mov
cmp
mov
add
inc
mov
int3
stc
rcll
jo
push
inc
out
dec
and
mov
scas
cmp
xorl
cmp
pushf
cmp
movsl
stc
imul
push
sbb
jecxz,pn
or
inc
and
push
mov
add
cli
das
pop
cmc
mov
add
add
jge
or
or
jg
sahf
lcall
dec
stos
pushf
out
or
add
add
dec
mov
sbb
mov
shl
jl
into
xchg
sbb
xchg
shlb
shll
sub
pop
adc
inc
add
add
popf
inc
add
add
and
stos
pop
sbb
cwtl
push
icebp
icebp
push
dec
add
add
jle
dec
mov
repnz
jmp
lret
ret
jg
add
add
and
add
add
cli
nop
fnstcw
dec
icebp
mov
pop
or
sub
add
movsl
scas
insl
fldl
jmp
cmp
jnp
cmpsl
jae
es
mov
into
sbb
cmp
cli
into
ret
xor
sbb
xchg
repnz
adc
out
ja
or
into
popf
das
mov
add
insb
mov
jl
sbb
cwtl
pop
ds
push
pop
jge
testb
arpl
out
shlb
or
add
add
jmp
fadds
or
add
add
or
add
mov
test
mov
call
dec
inc
add
add
add
out
aaa
arpl
mov
jnp
mov
in
push
jnp
jmp
arpl
out
es
mov
sub
add
add
mov
sbb
daa
cmp
das
movsb
and
add
add
add
add
std
clc
jo
addr16
ss
fwait
out
adc
cmpsl
mov
adc
sub
xchg
mov
cli
ret
fwait
and
sub
cmp
jae
shlb
add
lret
add
add
addl
add
add
add
jmp
jp
and
addr16
fstl
pop
fbld
sti
xchg
jmp
icebp
clc
call
mov
movsl
loop
push
stos
adc
xor
mov
inc
ljmp
addr16
insb
mov
popl
adc
push
pop
lahf
inc
ret
in
out
sbb
sbb
int3
or
add
add
fwait
lea
adc
sub
or
lea
sti
xchg
out
add
add
pusha
mov
test
in
in
fstps
cmp
ljmp
int
inc
mov
jmp
test
mov
inc
lods
mov
add
jne
jo
cwtl
sahf
lcall
cmp
add
add
add
mov
add
add
mulb
test
icebp
pop
in
in
clc
sub
pop
leave
stc
add
add
add
xchg
adc
cmp
dec
inc
cmpsb
out
pop
icebp
xchg
shlb
movsl
dec
lcall
add
mov
sub
pop
jecxz
inc
and
pop
hlt
sub
add
add
jae
pop
add
add
out
add
add
add
mov
lock
add
add
lret
inc
or
mov
mov
inc
negl
mov
sub
lock
decb
cmpsl
stos
mov
jmp
push
or
add
mov
insb
mov
shl
das
lret
pop
clc
shlb
in
leave
nop
mov
std
gs
imul
add
adc
jle
mov
cld
scas
push
inc
adc
mov
jae
rcll
mov
dec
mov
pop
pop
mov
dec
ret
inc
mov
jg
shlb
cld
aaa
cmp
xor
pop
xchg
pop
stos
xchg
in
lret
pop
or
and
jl
clc
fidivl
push
mov
ds
call
data16
add
add
jns
test
jns
mov
outsb
test
outsb
stc
jno
push
mov
rcrl
add
add
mov
insb
add
add
in
loop
jg
and
add
add
mov
cmp
or
add
add
add
jae
adc
mov
jmp
nop
test
add
add
add
add
add
xor
mov
dec
and
add
add
mov
add
add
and
add
add
add
cmpsb
add
outsl
lret
and
cmpsb
adc
mov
pop
dec
jae
fisubl
add
or
push
das
fildll
add
add
notl
adc
add
bound
add
leave
xchg
jge
mov
sub
add
add
add
je
or
add
add
jg,pn
push
push
xchg
jae
mov
add
add
insb
add
add
pop
sub
add
add
mov
add
out
and
fwait
push
and
inc
jne
bnd
add
scas
push
enter
xor
pop
fwait
test
loope
stc
jecxz
inc
mov
or
jmp
sub
mov
xchg
popf
xchg
icebp
inc
xchg
insl
mov
pop
mov
or
rolb
mov
in
jns
loop
lods
sahf
mov
jnp
mov
and
xor
in
sbb
in
stos
cmp
cld
sarl
mov
lods
stos
inc
cmp
insl
add
add
lea
push
dec
sub
loop
ret
int3
sub
jnp
mov
add
push
inc
jl
aaa
mov
and
in
and
add
add
dec
mov
add
jl
xchg
scas
xor
xchg
mov
mov
jb
adc
outsl
stos
jle
mov
or
iret
sub
add
add
add
fst
push
adc
inc
rorl
add
add
add
jns
fstpt
cmpsl
cltd
mov
fwait
bsf
mov
push
jmp
add
add
add
add
add
adc
stos
mov
pop
inc
xchg
loopnew
lds
lds
bound
add
add
sbbb
xchg
mov
jg
fucomip
icebp
rclb
mov
adc
mov
adc
movsb
out
fwait
gs
xchg
or
leave
imul
lahf
adc
add
add
nop
cmp
add
xchg
bound
add
add
xor
add
iret
sub
and
push
stc
fimull
add
add
mov
add
add
and
add
add
outsb
imul
jbe
inc
ss
cmpl
inc
mov
negb
rcl
or
add
add
data16
xor
add
add
add
inc
add
add
cltd
punpckhbw
or
add
add
add
add
cs
pushf
xchg
mov
imul
add
add
mov
div
das
ret
pop
xor
decb
push
cli
lea
mov
cs
mov
out
sbb
add
mov
ds
jle
inc
jmp
push
add
add
cmp
in
test
inc
popf
push
fimull
add
shll
add
add
mov
sbb
push
or
add
add
mov
fcoml
pop
mov
and
aad
les
jne
add
add
ss
xor
push
daa
dec
mov
mov
movsb
clc
rorl
add
add
jecxz
xchg
inc
nop
add
sub
sub
add
push
and
nop
int
inc
mov
lea
jo
xchg
fisubrs
jmp
and
rorl
inc
mov
add
adc
xchg
data16
add
add
imul
mov
mov
add
add
jl
mov
lahf
mov
sarb
out
push
fldenv
cwtl
or
push
pop
pushf
add
repnz
cmp
cwtl
jge
dec
mov
cmp
mov
add
jecxz
sbb
insb
mov
sti
int3
into
pop
sub
stc
xor
add
sub
in
mov
popf
rcll
push
and
mov
mov
mov
cmp
shl
test
es
pop
sub
push
jbe
dec
mov
out
mov
mov
scas
and
add
add
add
lret
fcoms
add
add
add
jle
loope
jnp
and
add
add
add
add
lods
ret
arpl
add
add
push
or
xor
test
lods
cmp
dec
std
stos
loope
pop
cmpl
add
push
cmp
cmc
or
dec
push
jp
add
add
add
out
test
sub
mov
add
add
xor
sbb
sub
inc
cltd
jo
mov
cmp
add
add
pop
or
mov
pushf
and
mov
and
iret
enter
add
lret
enter
daa
mov
filds
lock
mov
mov
pop
test
jo
fs
sbb
lcall
push
xorl
push
cmpsb
mov
mov
jle
fs
data16
jmp
fdivs
mov
add
add
add
icebp
push
enter
sub
add
add
jp
cmp
cmpsl
stos
test
gs
lcall
add
mov
inc
cmc
clc
mov
insb
add
add
adc
add
add
cmc
xchg
out
jecxz
mov
mov
push
or
mov
scas
test
cmp
test
jb
cwtl
cmpsb
pop
das
rcl
movsl
std
adc
add
add
add
sbb
cmp
in
add
add
add
cli
lds
jbe
insb
add
add
lret
push
add
mov
mov
mov
push
mov
xchg
std
push
int3
mov
outsb
mov
aad
mov
xchg
insl
je
push
mov
and
add
add
loope
dec
lock
push
push
jl
adc
loop
xchg
xlat
leave
decb
xchg
mov
stos
int3
and
add
add
xor
add
addb
jne
add
add
add
push
push
ss
fs
lods
out
cwtl
push
jge
lcall
push
ret
xor
je
shr
cmpsb
cwtl
push
adc
jp
inc
pop
lcall
mov
repnz
push
das
dec
push
xor
add
add
cld
arpl
fwait
xchg
int
sub
pop
inc
inc
and
neg
outsb
cs
cltd
ljmp
rorl
sbb
jne
mov
cwtl
icebp
bound
and
jle
rolb
add
add
pop
dec
js
mov
add
jb
mov
lods
lods
pop
fs
push
jge
cmp
add
add
cmp
add
add
cltd
addr16
inc
bound
dec
leave
dec
adc
add
pusha
mov
add
add
ja
xor
push
cmp
movsb
inc
into
mov
dec
mov
mov
mov
imul
or
add
add
aam
orb
shll
add
cmp
sub
add
add
std
test
mull
add
add
add
test
inc
jno
out
std
je
mov
push
sahf
mov
mov
mov
mov
fdivrl
add
add
pop
ficomps
sahf
in
je
repnz
sub
divl
add
pop
jmp
fucomi
dec
sub
add
add
mov
dec
lock
xchg
in
cmpsb
xor
lret
xchg
divb
sub
add
add
add
add
mov
sub
mov
aad
sti
mov
sbb
mov
add
add
ds
mov
mov
insl
lcall
mov
lods
ljmp
mov
pop
sbb
add
cltd
jmp
add
test
orb
data16
in
cli
pop
inc
fisubrs
add
add
add
add
cmpsb
inc
aam
or
int
mov
sub
jmp
sub
data16
andb
mov
into
dec
add
add
test
cmp
les
hlt
fbstp
mov
ret
movsl
loop
adc
mov
fsubp
ror
xchg
stc
sub
add
add
mov
inc
into
mov
pop
ja
outsl
xchg
cmp
xchg
and
add
add
cwtl
mov
pop
mov
lret
test
test
add
add
inc
mov
add
add
test
add
add
aas
cmp
das
outsl
out
sbb
scas
cmpsb
jge
lcall
test
out
fiaddl
xchg
jmp
fidivl
push
out
aam
mov
stc
test
mov
or
add
add
jbe
sub
fildll
pop
les
inc
jmp
xchg
ret
test
jg
fisubrl
mov
mov
jp
lahf
fwait
mov
lods
sarb
push
jb
cs
push
fidivl
add
add
add
shl
cwtl
mov
arpl
adc
popf
and
add
add
xchg
stos
f2xm1
mov
cmp
mov
inc
mov
or
jecxz
mov
nop
sbb
pop
mov
mov
test
add
inc
mov
jns
pop
orl
add
enter
xor
cmpsl
mov
add
add
jb
lcall
add
mov
push
out
jbe
stc
roll
lret
in
test
pop
mov
pop
lds
pop
jmp
cmp
insl
fidivl
decb
add
les
addb
xor
pop
neg
mov
repz
push
sbb
mov
or
xor
push
int
lods
mov
add
push
cmp
stc
adc
xchg
pop
int
orl
adc
sbb
mov
mov
cmp
sbb
cmpsl
stos
lock
test
lret
mov
sar
inc
nop
pop
int
cmpb
stc
movsl
fs
pop
aaa
inc
movsb
fisubs
pop
mov
mov
mov
or
fdivrp
inc
jecxz
inc
mov
jecxz
fwait
or
add
add
mov
add
add
addl
sbb
or
add
add
addr16
mov
jecxz
int
push
es
hlt
xchg
mov
mov
mov
pop
and
jnp
je
cmp
dec
orb
add
dec
and
sub
mov
jecxz
sahf
mov
mov
sub
and
add
add
add
add
xlat
push
and
scas
insl
shl
addl
pop
add
dec
mov
out
int3
dec
push
jnp
mov
mov
mov
jge
mov
cmp
in
out
and
lahf
sub
scas
sti
lret
push
test
bound
pop
mov
or
adc
enter
inc
jp
fstpt
jp
loope
dec
add
add
mov
push
and
subb
mov
mov
aad
add
add
loopne
pop
stos
mov
sub
adc
mov
add
add
es
int3
cltd
iret
stos
mov
add
in
mov
add
add
add
push
lcall
mov
data16
jl
cmp
cwtl
dec
mov
add
add
pushl
xchg
jae
cld
pop
cmp
in
adc
mov
xor
notb
add
cmpsl
xchg
test
aas
adc
pop
jl
mov
mov
inc
addr16
fmull
in
jle
cmp
in
pop
and
add
add
pop
rcrb
fs
leave
mov
push
stc
and
sbb
add
xor
stc
push
pop
cmp
sub
add
add
add
add
scas
sbb
xchg
xor
jns
inc
xsave
add
sbb
mov
test
inc
add
add
push
mov
out
rclb
cmpsb
mov
outsb
in
cmc
ja
pushf
push
xor
pop
out
jbe
mov
jg
pop
push
jnp
cmpsb
ss
rcr
sbb
lret
mov
mov
cltd
xor
mov
add
add
insb
add
add
mov
in
test
push
outsb
lods
mov
xor
add
add
push
xor
xor
addr16
sbb
mov
add
and
add
add
je
bound
in
add
cwtl
mov
int3
clc
data16
fwait
jge
and
add
add
aaa
out
xchg
loopne
mov
jnp
cmpsl
and
pop
add
iret
add
push
adc
push
and
das
sbb
sub
add
add
pop
adcl
add
mov
and
enter
add
sub
push
pusha
add
add
mov
out
cld
rclb
and
testb
lods
pop
test
ljmp
nop
xchg
jne
mov
add
add
xchg
icebp
mov
add
add
aam
ret
out
xor
enter
add
mov
iret
xor
pop
xor
fstpl
sbb
test
add
add
add
cmp
adc
cmpsl
sub
add
out
pop
std
adc
sbbb
mov
clc
fsubrl
or
jmp
jmp
dec
aam
or
push
mov
xor
add
in
pop
out
out
jne
add
add
add
add
add
mov
lods
repz
push
sbb
insl
mov
xor
mov
adc
cltd
ljmp
dec
mov
mov
push
mov
add
add
jns
inc
mov
scas
jne
cmpsb
repnz
sub
add
add
imulb
xchg
arpl
or
adcl
xor
xchg
mov
mov
inc
jo
cltd
inc
ja
dec
popf
nop
cmp
push
xor
push
mov
mov
sub
fwait
xor
add
xorb
sti
test
push
or
xor
lret
aaa
mov
mov
addb
cmpl
aas
jg
movsb
movsb
int3
scas
pusha
add
add
push
cmc
sbb
popa
cld
inc
mov
and
mov
cmpsl
cmp
dec
mov
push
popl
add
add
cmp
adc
movsl
pop
int3
pop
sub
mov
pop
jge
mov
mov
negl
sbb
mov
mov
repz
sbb
xchg
test
add
mov
add
add
insb
mov
xor
sub
add
add
jb
push
out
and
sub
pop
xchg
fistpll
xchg
mov
add
add
cmpsb
sbb
fiaddl
add
push
ret
insl
orl
add
push
clc
test
std
fwait
lods
in
mov
jmp
inc
stos
jmp
roll
xor
ret
adc
fisttps
add
add
lret
cmpsl
push
inc
cmp
fstl
in
jmp
jo
and
add
add
inc
xor
xchg
push
and
cmp
enter
lahf
shrb
out
sbb
push
popa
lcall
xchg
mov
dec
mov
outsb
jnp
shr
jmp
dec
mov
cmp
add
add
mov
fld
pushf
ret
mov
cltd
lahf
cmp
adc
inc
dec
mov
aad
mov
xchg
inc
mov
mov
add
add
add
mov
cmp
mov
mov
adc
hlt
push
popa
or
cltd
adc
mov
sbb
mov
data16
add
add
fisubs
mov
jle
mov
mov
lea
add
add
pop
enter
add
push
imul
das
int3
fs
gs
jns
mov
xchg
xchg
mov
inc
test
mov
lds
repz
xchg
dec
stos
push
push
push
xor
mov
stc
adc
movsl
xchg
or
mov
mov
scas
outsl
and
cmpsb
mov
sti
mov
shll
mov
es
cmp
shll
in
mov
push
jecxz
ljmp
aas
ss
mov
xchg
xchg
aas
xlat
or
add
add
stos
pop
aaa
rol
jecxz
mov
xchg
sbb
pop
pop
inc
es
add
add
jae
inc
add
add
nop
mov
out
leave
jo
int3
pop
or
adc
pop
or
add
add
add
sbb
mov
jl
scas
cmpsb
cwtl
jns
mov
rorb
add
add
scas
or
subl
ljmp
add
add
mov
add
add
add
sub
add
add
add
inc
aam
lcall
add
add
call
pop
mov
push
inc
jecxz
cmp
inc
stc
ficompl
adc
cltd
mov
dec
inc
mov
mov
cld
test
movsb
notb
test
std
push
mov
je
lea
and
mov
mul
lcall
sbb
daa
push
sahf
jl
ds
imul
mov
lcall
inc
arpl
ret
adc
out
clc
push
xchg
cmp
mov
inc
mov
fst
xchg
mov
push
ret
mov
in
cmp
pop
popa
cltd
inc
add
add
inc
jl
pushf
dec
mov
cwtl
jmp
icebp
add
add
add
push
clc
adc
and
add
add
cmc
scas
inc
pop
or
add
add
jle
jmp
seto
in
xchg
add
add
mov
scas
sbb
insb
mov
enter
xchg
mov
jle
add
add
xlat
outsb
dec
lock
test
cmpsb
mov
ds
add
add
fisubrs
pop
mov
add
add
mov
pop
push
negb
jp
test
dec
or
movsb
repz
push
mov
jmp
out
inc
mov
mov
mov
iret
adc
add
add
out
ds
rcll
cli
jno
mov
add
rcrl
outsl
lahf
pop
inc
pop
dec
inc
mov
jmp
sbb
shrl
xchg
xchg
adc
fisttpl
jge
enter
dec
adc
pop
call
shrl
scas
push
leave
mov
dec
mov
dec
dec
cmpsl
out
cmp
stc
cmpsb
push
mov
add
add
test
add
add
or
cmpsb
sub
mov
add
add
outsl
pop
stos
inc
popa
mov
add
xchg
mov
add
xchg
repnz
cmp
and
add
add
xchg
push
dec
mov
cmpsb
adc
sbb
jns
cld
orb
add
call
add
add
add
dec
addr16
loopne
rolb
dec
xor
pop
bnd
ljmp
inc
add
add
adc
pop
fsubrl
add
add
cli
hlt
push
lods
cmc
jmp
cmc
mov
xchg
lcall
add
popf
pushf
out
daa
iret
call
imulb
rclb
cmpsl
loop
stc
les
aaa
or
add
movsb
pusha
mov
inc
xor
add
hlt
mov
jg
jle
inc
mov
add
add
or
aad
into
movsb
mov
add
add
rol
stc
es
pop
push
scas
mov
sbb
fnsave
add
and
add
lds
add
add
sbb
xchg
push
pop
in
or
lods
lock
lods
push
repnz
push
das
cmp
jmp
pop
mov
add
add
rcrb
cwtl
insl
push
cli
in
jae
sbbb
add
add
arpl
stc
stos
pop
rol
rcrb
cmp
jmp
adc
add
shll
rorl
jns
jnp
mov
loop
fiadds
push
iret
test
filds
pop
not
xor
int
push
loope
sahf
arpl
add
inc
mov
xor
pop
jno
rolb
js
mov
push
