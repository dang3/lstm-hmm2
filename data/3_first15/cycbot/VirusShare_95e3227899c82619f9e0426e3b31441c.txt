mov
repnz
adc
mov
add
sbb
cmp
stos
pop
dec
gs
add
add
jo
mov
cwtl
adc
mov
push
add
dec
dec
or
add
inc
jno
cltd
out
jne
jno
lcall
daa
movsl
pop
loope,pn
repnz
imull
add
push
loopne
mov
outsb
inc
cld
mov
scas
mov
add
test
daa
jne
xor
repz
test
movsb
sbb
xchg
dec
and
data16
fcom
add
jle
dec
push
out
mov
dec
mov
jmp
sbb
lret
sbb
fwait
mov
outsb
call
push
cwtl
xor
rolb
sarl
jp
sbb
add
in
jns
sub
rcr
xchg
js
push
adc
mov
in
push
and
mov
out
add
bound
mov
addb
stos
push
dec
movsl
cmpsl
mov
add
pop
arpl
mov
scas
jae
mov
sub
mov
rolb
notl
mov
incl
je
rolb
mov
add
je
orl
push
leave
dec
bound
mov
xor
mov
add
fs
sbb
inc
pop
sbb
test
fsubr
test
das
testl
aaa
add
mov
adc
mov
mov
mov
out
outsl
dec
jg
add
sbb
sub
lods
xchg
loopne
mov
sahf
jg
stos
jmp
cltd
fwait
and
inc
add
dec
lret
iret
jle
pop
add
jge
arpl
jns
or
sub
add
add
dec
inc
add
sub
inc
or
les
jg
mov
mov
out
mov
aad
xchg
jb
mov
into
sahf
pop
sub
jl
or
imull
sub
push
les
out
lret
je
push
sub
mov
add
add
mov
add
pop
sub
add
pop
pop
mov
add
push
xchg
and
loopne
mov
add
jo
mov
lahf
mov
inc
xchg
xchg
ds
out
ja
add
mov
sti
in
mov
out
sbb
add
xchg
xchg
or
sahf
scas
enter
adc
dec
test
add
das
xchg
lea
loope
enter
mov
mov
inc
jp
fsubrl
sbb
dec
adc
mov
add
sbb
add
test
push
into
jae
or
xchg
and
popf
sbb
add
stos
cmc
lods
ss
icebp
outsl
mov
test
push
add
add
xchg
sahf
and
mov
hlt
outsl
mov
mov
xchg
dec
fidivs
mov
xchg
xchg
xor
add
jo
mov
add
add
mov
jae
outsb
or
pop
cmp
jo
mov
std
loope
add
add
mov
xor
mov
lods
pop
pusha
add
xor
mov
mov
jb
mov
arpl
mov
mulb
cmp
hlt
pop
movsl
mov
pop
aam
push
int3
pushf
jnp
les
add
add
inc
add
rcr
jmp
push
into
push
adcl
into
rorl
mov
push
or
push
std
mov
adcl
icebp
jg
add
mov
mov
or
mov
mov
insb
jne,pt
mov
ljmp
mov
xor
push
loopne
mov
in
pop
scas
das
fs
push
mov
mov
and
or
fisubrl
mov
mov
inc
jle
xchg
mulb
mov
movsl
hlt
xlat
aad
or
or
ret
pop
mov
ds
lahf
cmc
scas
mov
or
popf
fsubrs
mov
mov
popa
mov
add
add
cmp
popf
pushf
in
jae
idivl
nopl
mov
adc
add
sub
mov
mov
add
add
inc
xor
or
mov
jne
xor
mov
xor
pop
inc
out
nop
add
mov
xlat
test
xor
mov
mov
pusha
add
sub
mov
dec
jb
mov
ljmp
or
imul
imul
add
fwait
xchg
push
jnp
nop
add
pop
cmp
cmp
add
test
cmovs
add
cld
stc
jne
cmpsb
or
test
add
xchg
pop
out
push
sbb
mov
mov
xchg
lret
mov
xor
add
mov
mov
mov
negl
mov
fst
add
addb
daa
cmp
out
add
out
call
add
add
jnp
add
mov
add
mov
add
jge
clc
das
addb
mov
cli
sub
scas
addr16
aaa
ficoml
mov
jg
adc
fbld
mov
mov
adc
mov
cmc
int3
js
call
jecxz
or
clc
repz
xchg
cmp
rolb
mov
push
or
cs
int
add
ss
shrl
dec
mov
add
xchg
insb
movsl
xchg
mov
pop
mov
mov
sbb
and
cmc
addb
sahf
jo
mov
mov
insl
mov
pushf
roll
mov
fdivs
dec
cwtl
add
mov
push
xor
mov
faddl
mov
rolb
xor
mov
add
xor
test
add
jno
ret
and
mov
ja
shll
mov
repnz
loope
add
shll
cmp
push
push
test
add
and
sti
repz
cmc
pop
stc
dec
jle
fcmovnu
iret
mov
nop
add
xchg
sub
outsb
sub
mov
in
push
fidivrl
das
addr16
jp
test
add
rorl
inc
xchg
enter
sbb
sub
jl
cmp
adc
mov
mov
lock
repnz
std
xor
add
out
xor
mov
pop
setge
add
add
sbb
scas
lock
add
in
fs
add
lret
push
pop
adc
mov
mov
out
add
int
bound
mov
add
mov
push
lahf
or
test
dec
cmc
inc
out
lahf
push
mov
mov
and
xor
mov
jle
pop
mov
mov
divb
call
mov
repz
loopne
mov
mov
imul
mov
das
fbstp
add
jecxz,pn
push
mov
add
ja
nop
add
mov
or
stos
out
sub
jp
adc
mov
add
add
add
or
sbb
add
cltd
dec
ficoml
or
rolb
enter
push
xlat
lcall
or
js
test
sbb
repnz
jecxz
icebp
clc
in
ret
jo
mov
push
cwtl
pop
cmc
mov
xor
mov
scas
push
push
lcall
xor
mov
add
popa
inc
clc
sub
xchg
outsb
fisubrs
mov
flds
add
add
lret
cs
clc
jp
test
js
es
out
dec
adc
mov
icebp
or
add
fsts
testl
or
inc
add
ret
xor
mov
add
mov
pop
int3
sub
adc
mov
adc
mov
fs
mov
mov
mov
mov
lret
sbb
add
mov
mov
mov
add
arpl
and
test
add
xchg
add
loope
xor
pop
enter
cmp
pushf
fbld
les
add
mov
add
jae
mov
or
aad
push
dec
mov
iret
ljmp
xor
sbb
ljmp
mov
iret
mov
jp
fstpl
add
sbb
lods
mov
add
push
sbbl
and
mov
into
add
mov
out
dec
loope
or
cmpsb
test
addb
out
insb
sub
mov
in
mov
call
pop
enter
push
pop
sarl
movsb
or
ret
test
cmpsb
mov
pop
sbb
cmp
imul
add
mov
add
pusha
add
lds
out
adc
mov
sbb
add
and
mov
lcall
mov
mov
xor
add
leave
mov
mov
add
lret
add
lock
lret
xor
popf
addb
dec
jmp
out
js
aad
gs
jbe
add
fwait
sahf
xor
mov
mov
mov
insl
icebp
fisttpl
push
mov
add
add
addr16
rcr
fwait
push
inc
roll
mov
add
lret
push
add
add
jp
sbb
lahf
sahf
test
add
or
add
or
mov
and
ljmp
and
mov
mov
xor
stos
in
ljmp
rolb
mov
unpcklps
add
imul
sub
ljmp
add
mov
stc
and
rolb
mov
add
add
cwtl
sbb
out
mov
jg
lods
cmp
sbb
es
mov
add
mov
lea
jo
mov
inc
addb
push
add
mov
mov
mulb
pop
out
nop
add
xchg
cmp
add
fildl
mov
lods
cmp
add
movsb
mov
mov
mov
jge
cmp
inc
add
add
sub
add
mov
in
inc
add
mov
xchg
addr16
add
mov
add
mov
dec
jns
sub
add
and
mulb
push
mov
xor
rcll
jge
popf
js
jle
in
fcmovnbe
inc
es
das
push
lods
or
stos
hlt
add
fisubs
dec
jae
add
in
inc
add
imul
xor
sub
push
cwtl
add
mov
add
mov
add
mov
add
mov
adc
dec
xchg
mov
pop
sub
outsl
loope
add
add
dec
mov
and
mov
xor
loope
add
xchg
fiadds
addr16
aaa
ret
jecxz
mov
or
int3
imul
mov
add
jmp
inc
add
mov
pop
jmp
add
fidivl
push
add
mov
mov
or
lds
inc
add
iret
stos
mov
sbb
mov
and
mov
adc
mov
test
mov
roll
lea
inc
fisubs
add
mov
mov
mov
cld
push
mov
add
adc
adc
mov
mov
add
mov
add
and
mov
mov
mov
mov
mov
in
pop
in
ret
push
mov
add
pop
pop
pop
call
add
add
mov
push
mov
lret
jae
cmp
lods
cmp
movsb
mov
sbb
fidivrs
add
mov
popa
lahf
cmp
mov
lock
push
enter
sbb
add
scas
mov
add
mov
xchg
adc
fwait
leave
jecxz
das
lods
daa
inc
add
imul
movsl
adc
mov
lret
push
add
add
xchg
xchg
nop
add
add
scas
aas
cmpsb
popa
or
add
cmp
mov
inc
xor
imul
jg
add
dec
outsb
nop
add
mull
sub
dec
dec
sti
wbinvd
cmp
ret
cmp
leave
or
pushf
daa
xchg
dec
xor
push
enter
inc
add
adc
call
add
xchg
addb
pop
cmp
inc
push
add
sbb
add
test
add
ja
add
jns
and
mov
aaa
loope
add
pop
rorl
push
mov
popa
lods
test
pusha
add
mov
rorl
lods
dec
ret
outsl
loopne
mov
iret
jno
xchg
in
xlat
adc
mov
aam
sbb
jae
cwtl
push
xchg
adc
mov
dec
ss
pop
or
jmp
int
pusha
add
add
mov
das
sbb
xlat
inc
and
mov
fnstenv
clc
xchg
dec
ret
dec
lock
roll
mov
add
pop
fsubr
idiv
mov
pop
imul
jge
pop
fwait
cmp
jbe
lea
push
popf
aad
jecxz
push
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
adc
stos
dec
mov
mov
outsb
pop
cmc
fildl
add
pop
loopne
mov
add
dec
mov
movsb
js
mov
mov
adc
arpl
mov
rolb
test
jno
rcrl
sub
add
sub
pop
sbb
clc
add
add
xchg
fs
push
popf
je
and
mov
dec
push
imul
mov
cmp
add
push
jl
cltd
jae
xor
mov
jge
ret
out
xor
mov
jl
inc
sub
mov
mov
adc
mov
test
jg
add
mov
testl
cli
sub
fdiv
repnz
dec
pop
cmp
ror
xchg
pop
jl
mov
and
adc
inc
sbb
add
push
les
add
mov
add
mov
xchg
cs
xchg
lret
or
pop
lds
xor
cmp
add
pop
shl
mov
imul
mov
push
add
mov
pop
and
xchg
add
jle
insl
cmpsb
aas
and
mov
or
enter
addb
sub
cli
and
mov
add
jl
cmp
push
das
mov
test
data16
sbb
cltd
or
dec
add
or
mov
push
add
rolb
mov
mov
adcl
add
pushf
adc
mov
sub
add
sub
add
add
xchg
or
adc
and
mov
mov
and
mov
pop
add
mov
dec
inc
pop
jb
mov
mov
pop
je
sub
arpl
inc
mov
ret
rolb
mov
scas
mov
mov
out
and
push
rolb
mov
mov
shll
xchg
xor
push
mov
inc
add
mov
mov
add
mov
fsub
ss
call
mov
or
leave
adc
nop
add
mov
pusha
add
lret
add
movsb
dec
daa
mov
add
mov
add
add
ss
push
cmp
lret
nop
add
add
sbb
push
sub
mov
mov
xchg
add
add
jl
xor
dec
pop
adc
mov
push
lods
push
ret
out
mov
pop
xchg
xchg
mov
inc
inc
push
inc
movsb
or
mov
xor
mov
add
ds
cmp
outsl
pusha
add
stos
sarl
push
popf
adc
mov
add
xor
mov
mov
mov
xchg
movsl
mov
mov
fst
add
fisubl
cmpxchg
jmp
jg
cli
mov
in
sub
cmp
xchg
movsb
mov
jno
dec
sub
mov
and
mov
cli
test
dec
rolb
mov
aaa
fdivr
lods
jno
jecxz
inc
push
or
lock
xchg
add
addb
dec
or
std
cmpsb
inc
add
mov
mov
mov
cmc
stos
imul
inc
les
add
add
mov
add
mov
iret
les
cltd
dec
rolb
mov
add
sbb
mov
xor
mov
sbb
mov
adc
add
push
insl
stos
cmpsb
aaa
mov
add
fs
test
aaa
test
push
and
mov
inc
add
jbe
icebp
gs
pop
lcall
add
mov
jae
aad
int
inc
sbb
scas
in
adc
leave
stos
inc
pop
jbe
lds
mov
add
imul
stos
adc
inc
out
shrl
pop
std
loopne
mov
add
sub
add
clc
les
inc
add
sahf
cmpsl
push
rolb
mov
das
mov
add
mov
out
or
fs
mov
mov
jne
in
jns
pop
inc
divb
push
adc
fstp
popa
imul
dec
out
cmp
addr16
negb
lock
inc
in
rcrl
in
fidivl
add
push
fistl
add
int
push
cmc
push
jp
add
push
loope
arpl
into
in
add
enter
aas
inc
ljmp
dec
int
cs
add
pop
jbe
mov
add
testb
arpl
inc
fbstp
add
insb
fstp
jmp
inc
das
fidivrs
mov
pop
adc
mov
stos
xor
add
ljmp
fstpl
fdiv
and
mov
add
loope
add
add
loop
mov
jno
sub
sbb
gs
mov
push
jnp
push
xlat
mov
fisttps
jnp
add
mov
cld
xor
mov
outsl
aaa
fimull
dec
lahf
bound
mov
arpl
add
fbld
mov
addb
or
or
pushf
and
dec
sub
mov
mov
xchg
jno
or
mov
add
inc
xchg
add
mov
jge
fs
xchg
popa
inc
test
mov
pop
push
nop
add
push
add
add
and
mov
clc
insl
and
je
add
shr
lds
orl
rolb
mov
pushf
xchg
repnz
pop
daa
fdivrs
fimuls
rolb
mov
out
or
mov
ja
mov
mov
mov
mov
mov
add
cmp
cmc
les
fcmovnu
rep
aas
push
bound
mov
mov
rolb
add
add
nop
add
jae
sub
int3
int
sub
call
inc
and
mov
xchg
outsb
enter
and
mov
lods
fneni(8087
add
loop
mov
cmp
enter
push
xchg
sub
adc
mov
test
inc
add
mov
mov
xchg
jecxz
rolb
pushf
adc
mov
pop
in
fs
pushf
movsl
andl
mov
rolb
mov
call
push
push
push
add
fcoms
cmp
push
push
sarl
fs
rolb
cli
fldl
add
pop
mov
mov
and
mov
pop
lock
ljmp
gs
fildll
daa
dec
and
mov
add
and
and
lret
xlat
cmc
or
jge
cld
ljmp
jno
add
repnz
dec
and
or
test
mov
lock
add
xor
mov
fdivl
cwtl
iret
adc
mov
jno
adc
mov
add
mov
jp
add
pop
popa
jnp
in
repnz
insb
push
sub
xchg
orl
out
cmpsb
ret
movsl
add
mov
daa
addb
sbb
add
mov
push
test
pushf
repz
movsb
mov
mov
add
nop
add
add
test
aas
adc
clc
fwait
je
cltd
mov
aam
dec
mov
and
add
adc
mov
mov
mov
xor
adc
pop
xchg
add
add
stc
jl
movsl
inc
add
xchg
mov
mov
pusha
add
mov
fldenv
mov
mov
adc
out
insb
mov
inc
dec
add
add
icebp
movsb
mov
ret
rorl
data16
adc
mov
clc
add
gs
mov
clc
sub
mov
cmpsl
hlt
sbb
mov
das
lock
outsl
sbb
ss
xchg
cmp
dec
jo
mov
mov
mov
jo
mov
add
mov
rolb
in
es
or
ficoms
pop
xor
mov
push
add
or
mov
xchg
jo
mov
call
mov
shl
bound
mov
mov
pop
inc
ret
push
into
out
or
pop
sbb
and
mov
add
cmp
xlat
enter
scas
xchg
mov
jns
xchg
push
sbb
iret
xor
push
imul
xorl
jg
jl
les
test
add
jnp
dec
stos
mov
or
ud0
adc
xchg
out
add
dec
shll
add
rolb
mov
push
push
xor
mov
es
lock
mov
jae
xchg
xchg
out
mov
jno
adc
es
imul
out
xchg
iret
push
mov
or
stc
sbb
js
push
xor
add
and
mov
add
lcall
mov
mov
cmpsb
jmp
filds
xlat
fwait
imul
mov
sbb
int3
int3
inc
add
stos
dec
inc
les
cmp
jmp
enter
or
mov
fdiv
das
popf
dec
push
fcom
add
adc
mov
add
inc
test
movsb
sub
add
leave
in
xchg
mov
mov
mov
stos
les
add
sbb
add
add
add
ret
scas
loopne
mov
jbe
pop
jae
outsw
xor
pop
fwait
jmp
hlt
push
ljmp
fwait
jae
loopne
mov
andnps
add
mov
cmp
push
ja
sbb
adc
mov
arpl
cmp
rcrl
xchg
push
rolb
mov
add
push
dec
in
mov
mov
pop
push
stc
sub
add
add
fucomip
pop
enter
mov
sub
sbb
push
or
add
mov
ret
mov
mov
loope
jmp
mov
mov
movb
add
jae
push
add
lds
daa
and
cmpsl
jbe
sbb
add
repz
lahf
sbb
leave
fcoml
jns
and
lods
push
test
ja
inc
popa
mov
jg
xchg
mov
cmpsl
push
addr16
leave
insl
xlat
sbb
mov
in
addr16
enter
or
mov
mov
call
lea
int3
push
push
mov
jbe
js
pusha
add
sahf
and
pop
xor
add
pusha
add
pop
fadds
add
push
xor
mov
jno
add
jl
daa
cmp
ljmp
xor
mov
sbb
add
hlt
jb
mov
mov
lcall
dec
lods
mov
sub
out
add
inc
call
movsb
dec
movsb
int3
mov
mov
jnp
jae
dec
scas
shll
mov
mov
fs
or
movsb
lds
ret
dec
pop
push
in
lock
mov
add
add
add
out
out
mov
sbb
aam
inc
add
pop
mov
mulb
mov
stc
ds
inc
add
add
das
hlt
filds
insl
dec
lret
imul
sub
dec
or
add
mov
inc
add
pop
imul
add
adc
mov
mov
add
outsl
push
sbb
add
fcoml
scas
adc
adc
push
add
fiadds
add
sti
pusha
add
add
movsl
cmp
pop
rolb
mov
sub
add
mov
pop
mov
dec
movsl
jnp
lock
sbb
sbb
sbb
cld
xchg
adc
xchg
jmp
cmp
xor
mov
jmp
int3
mov
hlt
pushf
mov
jnp
xchg
add
mov
lea
mov
mov
scas
stos
sub
xchg
ljmp
or
inc
mov
pop
sub
rolb
mov
bound
mov
and
mov
mov
fwait
outsl
data16
lahf
bound
mov
push
sbb
popa
mov
push
cmp
adc
fbld
cmpsl
or
idivb
sti
xor
add
add
sub
scas
stos
or
cli
ds
mov
mov
je
add
scas
mov
addb
sbb
mov
mov
jg
scas
fnstsw
and
mov
adc
addr16
loopne
mov
push
lret
dec
int
repnz
mov
pop
dec
out
aad
in
dec
push
adc
mov
push
pop
xlat
pop
fisubl
loopne
mov
push
mov
mov
arpl
inc
adcl
xchg
and
sub
or
xor
call
xchg
xchg
movsl
out
jg
add
or
adc
mov
out
ds
push
xchg
and
xchg
mov
cmp
push
jmp
pop
sbb
test
xor
mov
add
jmp
sub
loop
mov
mov
mov
add
data16
mov
cmpsl
test
addb
sub
lcall
mov
jg
rep
rcll
add
mov
outsl
sub
add
pop
jb
mov
call
mov
add
mov
sbb
xchg
adc
xchg
xchg
mov
lret
in
pop
outsb
mov
cld
imull
enter
adc
mov
pop
push
push
sub
mov
cld
jg
mov
dec
jmp
add
in
fstl
fsubl
add
add
or
add
dec
xchg
mov
add
ds
push
sbb
jecxz
repnz
jne
pop
cwtl
pop
mov
mov
mov
std
add
addb
push
mov
sbb
js
test
pop
pop
jb
mov
insb
pop
xor
mov
cltd
adc
mov
mov
or
xchg
push
inc
mov
leave
mov
pop
xchg
inc
add
sub
cld
repz
adc
mov
add
notl
fisubrl
lahf
sti
pop
test
sbb
and
mov
test
ret
ljmp
adc
movsb
xlat
jb
mov
add
pusha
add
mov
mov
inc
add
arpl
mov
out
push
mov
jecxz
mov
mov
jmp
sbb
pop
push
addb
inc
mov
arpl
pop
jne
fcomps
std
inc
add
add
mov
inc
aas
sbb
mov
mov
add
lock
push
push
mov
mov
test
add
jbe
add
add
sub
xchg
ds
push
cltd
jge
pop
das
dec
mov
rolb
mov
es
fdivr
lret
mov
iret
call
mov
bound
mov
sbb
add
and
mov
popa
sbb
add
xor
jo
mov
js
sbb
in
fstpt
add
jge
and
fnstenv
stos
in
inc
ja
rolb
mov
mov
cmp
add
jns
popa
jnp
pop
imull
mov
push
stos
test
jne
add
test
add
push
jg
rcrl
dec
mov
mov
pop
fwait
sahf
sub
not
rcll
mov
stc
jge
out
mov
int
add
into
arpl
mov
lods
xchg
add
imul
outsb
gs
clc
xor
mov
inc
adcl
mov
adc
add
not
nop
add
aad
adc
mov
mov
mov
add
sub
dec
shrl
lods
sub
insb
mov
add
pop
dec
sbb
pop
sub
add
dec
rolb
mov
add
add
jp
dec
leave
cmp
addb
inc
pop
push
add
sahf
das
dec
jne
les
adc
cmpsb
repnz
add
adc
xchg
sbb
imul
mov
mov
pop
jno
xchg
lret
sub
mov
add
push
push
sbb
add
cmp
dec
cmp
add
scas
addb
test
xor
fsubs
pop
jge
xchg
lcall
jno
mov
mov
add
jmp
inc
jmp
add
nop
add
xchg
adc
ret
loopne
mov
xor
mov
push
mov
mov
movsl
out
ret
fcoms
pushf
push
sbb
jns
xchg
add
add
data16
pop
jno
pop
jb
mov
or
popa
movsl
sbb
add
jle
scas
lds
incb
mov
lea
add
pop
or
repnz
insl
mov
mov
mov
xor
mov
aas
push
push
cmc
cwtl
fs
mov
cmp
gs
sti
sub
addr16
mov
ss
adc
sbb
mov
lods
jp
insb
xchg
add
ds
scas
pop
mov
and
mov
js
iret
dec
dec
mov
mov
mov
mov
jns
outsb
jbe
mov
xor
xor
jbe
movsb
push
frndint
aam
cmpsb
addb
aam
movsb
fsts
jge
mov
test
cld
xchg
movsl
xchg
insb
iret
rolb
mov
fs
rolb
add
divb
ljmp
lods
jp
push
add
test
pop
enter
gs
lret
cwtl
mov
or
sub
add
xchg
mov
mov
sarl
xor
mov
hlt
nop
add
push
pop
testl
add
out
sbb
jae
xchg
ds
add
add
jl
adc
int3
xlat
insb
cmp
ds
aaa
addb
pop
mov
add
xlat
jns
inc
sub
int
popf
mov
add
push
inc
mov
add
mov
mov
imul
mov
sub
aam
mov
loop
mov
dec
or
mov
mov
lcall
out
test
test
jns
into
iret
cmc
pop
lods
jne
jo
mov
sub
shll
loopne
mov
fistps
add
mov
mov
mov
add
sbb
lods
les
mov
dec
jns
and
mov
xor
lods
xchg
push
xchg
pop
dec
stc
xchg
add
sub
add
fsubrs
adc
mov
insl
jecxz
stos
fcoms
test
sahf
or
scas
jp
cmp
ret
adc
push
daa
sbb
stos
dec
repnz
fcompl
xchg
in
dec
dec
cmpsl
int3
icebp
pop
sub
mov
xchg
adc
add
mov
and
shl
lods
stos
sbb
sub
sub
add
lahf
mov
sbb
xchg
aaa
fwait
cmc
xor
and
add
shll
jecxz
mov
jecxz
into
and
mov
and
add
fs
out
mov
divb
sbb
sub
jp
or
aaa
orl
xlat
and
out
sahf
xchg
pop
aas
aad
lods
add
out
pop
bound
mov
inc
add
cmc
mov
test
insb
les
add
mov
popa
sub
cltd
ja
ljmp
and
cmp
add
aas
and
imul
cli
add
mov
mov
stos
xchg
or
xchg
filds
add
mov
mov
lock
out
stos
loope
jns
add
mov
add
mov
hlt
or
adc
add
and
add
fldcw
fnstsw
mov
idivl
and
mov
test
mov
dec
outsb
icebp
aas
imul
movsl
and
add
and
pop
aam
add
into
inc
inc
inc
add
mov
add
mov
mov
cwtl
cmp
scas
jp
push
xor
movsl
pushf
mov
mov
inc
cmpsl
into
mov
leave
inc
dec
cmpl
sbb
into
cmp
fcmove
dec
aam
inc
add
mov
pop
cmp
add
and
stos
jp
add
lock
add
jg
rolb
mov
adc
and
sbb
aaa
or
sbb
mov
mov
call
imul
mov
rolb
js
xor
mov
push
stos
cmp
loop
mov
dec
hlt
push
test
add
outsb
insb
jbe
sub
imul
mov
add
xchg
push
sbb
sub
dec
jge
add
xchg
outsl
sbb
pop
cmpsb
out
xchg
das
push
jnp
dec
mov
loope
cmpl
adc
shrl
shll
cs
add
xrelease
mov
int
stc
xchg
out
inc
mov
pop
mov
pop
rolb
mov
add
add
and
add
push
outsb
mov
sti
shll
test
add
add
and
fucomp
mov
add
or
add
sub
xchg
jno
cmovns
clc
push
add
jnp
repz
inc
lock
inc
add
lods
test
cmpxchg8b
into
mov
xchg
mov
xchg
mov
fcoms
aam
and
mov
aas
mov
mov
add
stos
xchg
in
inc
add
stos
outsl
mov
add
fisttps
push
cli
adc
repnz
add
mov
movb
add
mov
mov
addb
and
mov
scas
lock
push
push
imul
mov
add
leave
push
xchg
add
add
xor
mov
push
adc
mov
sub
pop
add
pop
fistps
xchg
mov
arpl
int3
daa
lret
xchg
and
mov
add
mov
mov
in
mov
mov
push
mov
hlt
fdivr
scas
xor
mov
jecxz
xchg
mov
mov
mov
int3
push
add
xlat
addl
cmp
in
jb
mov
lahf
cmc
sahf
ds
mov
repnz
jg
adc
mov
cmp
out
mov
mov
mov
add
lcall
sbb
imul
cmp
and
cmp
inc
loopne
mov
pop
cmp
add
jne
in
inc
adc
rolb
fmuls
jmp
pop
lcall
add
mov
jl
mov
lea
lock
mov
fwait
ljmp
sbb
dec
rolb
mov
rorl
mov
orl
mov
aad
xor
mov
insb
mov
call
out
add
mov
ja
mov
mov
jbe
aaa
fwait
cmp
push
add
insl
ret
or
adc
movsb
js
fistl
push
jmp
add
push
inc
dec
lds
mov
add
dec
sub
mov
mov
add
mov
sbb
into
mov
mov
xchg
je
xchg
add
push
jp
sahf
jne
popa
push
cld
stos
and
mov
add
outsb
dec
dec
pusha
add
push
insb
out
lods
and
mov
in
or
mov
rolb
int
aad
scas
outsb
sbb
mov
mov
add
loopne
mov
lea
sti
push
test
mov
es
cmp
out
fdiv
aaa
jnp
mov
repz
lcall
sub
mov
adc
mov
jecxz
ss
inc
add
jne
cmp
loop
mov
fstpl
cmp
mov
mov
or
icebp
sbb
cmp
imul
rolb
mov
into
mov
scas
xchg
add
mov
fisubrs
dec
rolb
or
xchg
sub
daa
cmp
ds
add
insb
test
add
push
add
mov
dec
push
or
mov
and
fcomp
bound
mov
dec
push
sbb
fxch
mov
daa
pushl
test
xor
sub
mov
add
ds
push
jae
leave
cli
scas
pop
and
imul
aam
add
jbe
push
mov
inc
xchg
int3
mov
mov
mov
jae
push
cs
test
add
add
jl
xor
dec
push
in
add
dec
mov
inc
imul
addb
inc
add
and
or
jo
mov
js
and
sbb
add
idivl
add
add
scas
mov
adc
mov
add
sbb
cmp
mull
pushf
add
mov
add
add
add
std
shll
add
mov
cmp
xchg
jge
bound
mov
pop
ret
ds
xchg
xor
mov
add
mov
aas
push
lea
cmp
movl
add
call
mov
repz
jo
mov
into
test
dec
bound
mov
loop
mov
jmp
into
int
sbb
stos
ds
push
aaa
push
aad
sti
inc
add
rolb
cmp
mov
mov
and
mov
add
out
xlat
xor
mov
jns
out
adc
mov
xor
mov
xor
mov
les
pop
mov
cmp
push
lcall
add
xor
sub
push
addb
stc
push
jne
push
mov
out
addb
rcll
mov
mov
push
add
call
xchg
push
std
and
movsb
adc
mov
faddl
test
push
dec
les
hlt
pop
dec
mov
lods
and
cmp
xchg
sub
xlat
xchg
inc
add
pop
mov
push
filds
dec
mov
insb
aad
mov
sbb
mov
add
mov
add
cltd
mov
add
mov
mov
push
add
mov
cld
or
add
cltd
push
psubsw
mov
popf
mov
mov
cltd
ja
xchg
push
jg
lock
mov
imulb
iret
pop
inc
add
sbb
jecxz
clc
xor
add
ret
scas
cmc
inc
add
cmp
push
jecxz
inc
add
movl
inc
xor
mov
mov
hlt
fs
pop
mov
xor
inc
pushf
cli
jnp
add
notl
into
cmp
fwait
sbb
sbb
testl
add
mov
clc
mov
mov
add
addr16
fistpll
mov
das
cmp
outsb
push
orl
add
adc
mov
mov
dec
inc
add
mov
sti
cmp
push
arpl
and
jge
jo
mov
mov
mov
lahf
leave
fsubrs
das
lods
cs
mov
nop
add
xchg
xchg
add
mov
fdivs
outsl
xorl
pop
sti
sub
mov
rep
addr16
xchg
xor
or
cmpsb
sbb
out
or
cmp
scas
xor
pop
jno
repnz
adc
mov
add
idivb
rolb
test
add
mov
adc
mov
clc
int
push
cmp
rolb
mov
lds
mov
pop
std
sbb
sbb
add
cmp
aaa
push
repz
jmp
test
cmp
and
lods
push
mov
mov
lds
call
mov
mov
lahf
jl
add
ja
jle
add
jbe
add
mov
std
mov
jl
jne
push
lcall
nop
add
adc
pop
out
sub
call
dec
mov
jp
sbb
xor
mov
push
cld
pop
shrl
mov
mov
out
repz
loope
add
outsl
push
mov
mov
add
adc
add
adc
add
pushf
inc
pop
push
or
add
and
pushl
cwtl
mov
xchg
cmp
adc
arpl
dec
add
movsb
mov
fmuls
roll
lds
mov
stos
jno
loopne
mov
or
pop
pop
in
xor
push
int3
fcmove
jae
add
add
jge
cmp
add
addl
adc
mov
mov
sahf
repnz
mov
mov
mov
idivl
pusha
add
push
sti
lods
and
mov
add
lods
mov
add
add
mov
lcall
cmp
add
js
or
test
sbb
ror
fstl
imul
mov
add
mov
or
in
negb
xchg
cmc
jle
mov
sbb
add
mov
xor
roll
cmp
add
or
jg
dec
add
dec
xor
lods
fiadds
dec
sbb
push
add
mov
add
or
sbb
and
mov
js
popf
mov
add
imul
pop
lea
rolb
mov
mov
out
add
lret
jne
add
call
inc
mov
add
mov
dec
dec
dec
movsl
popaw
add
mov
add
sbb
add
push
add
add
mov
dec
cs
icebp
inc
pop
mov
lret
mov
jecxz
add
hlt
xchg
mov
sbb
inc
sub
add
das
mov
insl
mov
mov
and
call
xor
lcall
mov
mov
and
mov
mov
xchg
add
and
mov
roll
jecxz
add
fidivs
dec
inc
xlat
inc
add
xchg
inc
xchg
sub
adc
mov
out
xchg
ret
sub
lret
jmp
mov
decl
jae
add
mov
xchg
fsts
idivl
cmc
iret
scas
aam
call
cli
stc
inc
add
mov
pop
inc
push
add
ficompl
jmp
mov
scas
adc
lea
mov
leave
pop
cmp
xor
mov
ficoml
mov
add
add
mov
rolb
mov
inc
xchg
dec
sbb
das
std
and
jg
sahf
dec
hlt
pop
fiaddl
mov
aas
fwait
and
add
stos
rolb
fcoml
push
add
in
jno
dec
and
add
push
sbb
jecxz
lds
add
je
mov
cli
and
addr16
repnz
cmp
or
mov
push
xchg
and
jmp
insb
or
xchg
pushf
jb
mov
iret
lret
xchg
jo
mov
test
popf
xor
mov
push
fnstenv
imul
xchg
les
dec
std
inc
idivb
xor
repz
subl
mov
fstpl
repnz
mov
sbb
fistps
add
addb
iret
aas
or
add
je
jecxz
es
push
je
sti
dec
bound
mov
cld
ja
dec
xchg
add
or
add
jecxz
dec
inc
add
adc
mov
add
in
int3
inc
aaa
xor
mov
icebp
test
ja
mov
and
cltd
xor
popf
inc
add
mov
mov
sti
xchg
and
jne
cmp
and
xchg
xchg
pop
jp
cmp
rolb
mov
inc
jnp
mov
lret
jns
or
push
mov
sbb
negl
fcom
mov
cmc
jb
mov
addb
and
scas
sbb
nop
add
andl
sub
pop
pop
int
or
mov
dec
push
jno
add
or
inc
push
add
popa
loope
cmp
jno
push
jns
int
mov
cmp
pop
ljmp
add
aam
shll
cmp
add
xchg
mov
pop
lret
push
js
mov
pop
in
fcompp
push
jmp
adcl
rolb
mov
pop
test
sub
and
cmp
jp
sub
add
test
add
mov
mov
pop
loop
mov
shr
pushf
aas
es
and
mov
mov
push
cmp
stc
fisttps
je
imul
xor
or
testl
mov
and
mov
std
or
or
mov
jp
add
inc
xchg
xchg
adc
mov
jae
jmp
lock
pop
addb
mov
add
add
dec
sbb
inc
mov
mov
mov
mov
add
sbb
push
enter
mov
stc
dec
stc
idivl
lods
sub
enter
push
xchg
mov
jle
bound
mov
push
mov
and
xor
mov
jl
adc
push
add
add
mov
mov
xlat
subl
bound
mov
je
addb
and
mov
outsl
repz
nop
add
imul
add
pop
inc
sbb
enter
mov
or
inc
add
mov
mov
movsl
loopne
mov
inc
cli
imul
add
xchg
cmp
add
or
inc
add
xor
aas
imul
ss
dec
or
xor
mov
cmc
aaa
dec
adc
mov
push
mov
rolb
fdivrl
add
mov
out
icebp
ds
mov
pop
push
add
push
mov
in
sub
and
movsb
popa
push
ds
je
pop
addb
dec
cmpsb
xchg
cmp
mov
ljmp
push
imul
cmp
add
add
stos
divl
add
lea
sub
in
mov
add
lods
leave
jns
outsl
mov
repnz
les
mov
inc
jle
xor
sbb
std
pop
icebp
sbb
add
imul
pop
cmpsb
xlat
mov
ss
jecxz
add
add
dec
orl
inc
pop
cwtl
lods
jbe
sbb
es
cmpsl
sbb
in
rcll
mov
andl
push
inc
add
outsl
lock
dec
push
add
pushf
loop
mov
out
insl
cmp
add
add
out
cli
or
jl
out
xchg
xchg
add
cs
add
in
sub
jg
push
arpl
mov
add
jmp
add
push
ss
movsb
insl
mov
add
mov
clc
xchg
jno
insl
insb
shrl
sbb
jmp
jge
scas
jne
stc
std
addb
rcll
call
mov
inc
sub
cmp
stos
into
sbb
mov
mov
jp
pop
rolb
sti
push
add
lock
dec
daa
sub
cli
sar
lahf
jo
mov
fstl
out
sti
xchg
lea
loope
add
ljmp
mov
mov
jb
mov
cmp
loop
mov
dec
xor
mov
js
pop
xor
mov
mov
fs
stos
ret
xor
fdivrl
ljmp
add
daa
in
fcompl
lahf
ja
ret
test
inc
inc
or
add
cmpsl
inc
add
mov
mov
mov
and
add
push
imul
cmc
ja
nop
add
into
mov
mov
lods
sbb
mov
or
jns
jmp
pushfw
dec
mov
aas
insl
outsb
insl
loopne
mov
cld
and
mov
cwtl
popf
adc
mov
add
insl
inc
in
sarl
mov
add
icebp
push
mov
enter
adc
mov
cmp
xchg
jmp
pop
adcl
jge
sub
les
cmc
addr16
mov
pop
push
aas
jmp
xchg
test
fcmovbe
cmp
rolb
mov
pop
jl
cmpsb
inc
mov
sbb
add
xor
mov
movsl
leave
mov
stc
push
add
cmp
inc
repnz
mov
loopne
mov
test
jo
mov
imul
add
mov
int3
js
or
mov
xchg
loopne
mov
mov
std
or
aaa
cli
cmpsb
xchg
push
add
xlat
pop
add
mov
dec
lods
int
mov
or
xor
mov
stos
repnz
mov
addb
jne
mov
fbstp
fadds
mov
xor
mov
jb
mov
pop
and
mov
mov
adcl
cmpsl
mov
jmp
cltd
adc
repz
sti
inc
addl
test
shll
dec
loop
mov
pusha
add
repnz
js
mov
add
in
out
mov
jg
fisubrl
test
sbb
mov
pop
aas
jp
cmp
mov
mov
sahf
xor
dec
lahf
cmp
push
sub
add
adc
test
push
push
sub
mov
ds
adc
mov
jnp
arpl
sbb
test
xchg
stos
xor
mov
and
mov
and
add
lock
inc
mov
mov
mov
mov
sbb
daa
cmp
pop
int
popf
rolb
mov
mov
cmp
add
push
adc
mov
scas
push
scas
mov
push
fistps
adc
jmp
cmp
movsl
sub
pop
push
add
push
jmp
adc
cmpsb
jmp
sub
push
xor
mov
aaa
in
push
add
mov
mov
add
rorl
xchg
adc
mov
mov
mov
add
mov
adc
mov
enter
jb
mov
cmc
pop
fcmovne
adc
call
xchg
push
add
clc
fdivr
pushf
push
xchg
daa
out
rolb
mov
or
insb
faddl
ret
xchg
push
fadds
adc
mov
scas
lds
mov
add
sbb
das
cmp
out
ret
cmpsl
test
lahf
rolb
mov
ds
add
sub
add
movsb
fsubl
sub
jnp
push
arpl
mov
mov
add
das
push
add
sub
push
sbb
add
mov
add
daa
pop
xlat
mov
xchg
sti
repz
pop
pushf
xchg
sbb
aad
dec
popa
stc
inc
add
add
push
push
add
jne
arpl
daa
xor
add
fldcw
xchg
cmpsb
jns
xchg
add
jg
or
aas
push
xchg
mov
inc
loope
dec
and
inc
es
loopne
mov
sbb
dec
mov
pusha
add
aam
movsb
fisubs
add
gs
pop
repz
mov
fcmovnb
sbb
push
jb
mov
negl
or
in
ret
jne
test
std
stos
ljmp
outsl
or
inc
sarl
jle
mov
mov
add
nop
add
es
mov
stos
jl
negl
int
add
mov
xchg
dec
rolb
mov
lods
add
scas
xlat
inc
add
xor
mov
add
das
adc
jle
add
add
mov
lods
adc
mov
cmp
cmp
testl
adc
stc
xchg
cmp
xor
mov
mov
or
add
jns
mov
adc
mov
mov
stos
pop
mov
outsl
imul
lods
xchg
or
add
add
je
sbb
mov
fsts
adc
clc
cmp
cmpsl
xchg
add
mov
jecxz
mov
mov
clc
jae
out
sub
lea
mov
test
aam
clc
btc
add
inc
shll
add
add
or
push
icebp
xchg
mov
cmp
into
ja
movsl
stos
out
or
mov
addr16
inc
add
rcr
lods
push
add
inc
inc
lcall
cmpsl
or
sub
jge
xor
mov
cmpsl
shl
xchg
jp
add
xchg
add
std
mov
pop
add
mov
add
add
lret
rolb
mov
jnp
sbb
add
push
jmp
not
add
add
mov
dec
lcall
icebp
int3
pop
mov
mov
xor
mov
repz
sub
fidivrl
add
imul
pop
xchg
and
dec
addb
push
int
rcrl
jmp
mov
and
or
rolb
mov
xor
mov
hlt
cmp
and
add
inc
xchg
add
mov
add
scas
leave
adc
mov
mov
adc
add
rolb
push
pop
mov
das
addr16
pop
test
hlt
pop
pop
test
ljmp
mov
cmp
lods
adc
jno
fwait
jl
sub
fsubrl
outsl
mov
loope
mov
xor
sbb
add
sbb
add
mov
mov
sti
aas
inc
or
mov
das
jo
mov
xor
jb
mov
xchg
cmp
data16
hlt
xchg
inc
add
and
mov
pusha
add
xchg
and
mov
repnz
lahf
and
mov
iret
push
addr16
mov
mov
or
adc
mov
sbb
add
out
ret
jnp
insb
movl
cwtl
mov
mov
sbbl
mov
mov
adc
mov
add
aad
subl
das
ds
add
enter
sub
and
mov
jae
out
or
jg
sub
sub
push
add
mov
mov
add
stos
inc
add
xchg
add
and
mov
or
xchg
test
fisttpl
stos
pop
pushw
and
mov
add
iret
cmc
mov
fcompl
add
test
push
repz
or
push
cld
adc
mov
mov
and
dec
inc
add
mov
add
stc
ss
repnz
pusha
add
add
jmp
fidivs
mov
mov
mov
pop
or
and
inc
mov
lret
rolb
mov
mov
sti
nop
add
imul
mov
mov
cmp
push
das
mov
sahf
arpl
mov
inc
add
sbb
out
sub
add
pop
mov
outsb
inc
in
insb
lea
add
add
add
adc
push
daa
movsb
jp
pop
ljmp
imul
mov
inc
dec
lret
cmp
sbb
xor
inc
add
adc
mov
dec
pushf
cmp
adc
push
add
fisttpl
les
enter
add
mov
or
mov
sbb
dec
or
push
push
movsb
lahf
xor
mov
pop
mov
mov
cmp
inc
xchg
std
ds
mov
or
pop
mov
test
xchg
push
mull
add
in
jns
dec
jmp
test
inc
add
push
stos
ss
jo
mov
mov
mov
cmp
push
sub
std
dec
jmp
add
mov
mov
and
popf
lds
fldl
add
pop
xor
lods
pop
rolb
mov
scas
pop
mov
sub
add
add
push
inc
add
mov
pop
xor
mov
mov
or
mov
sbb
xor
add
scas
sub
imul
push
and
mov
inc
lods
divb
mov
mov
sub
add
jb
mov
mov
cmp
xorl
mov
fdivrl
pusha
add
popa
jbe
lret
sbb
add
xlat
fnstsw
add
sub
jne
les
add
shll
and
pop
jbe
and
xchg
mov
sbb
mov
sub
or
sub
imul
fldcw
into
ss
sti
dec
scas
xor
gs
jp
xchg
adc
mov
fwait
stos
les
add
jecxz
jge
std
or
mov
cmc
jge
in
jmp
pop
in
cld
enter
jnp
mov
mov
push
inc
aad
in
push
bound
mov
stc
std
xor
mov
rolb
mov
mov
and
mov
dec
fistl
push
pop
inc
jp
xchg
jecxz
xchg
add
imul
out
pushf
add
add
not
mov
lret
add
adc
add
mov
sbb
pop
lret
cli
push
add
add
mov
ret
sbb
mov
mov
xchg
std
pushf
dec
lock
cmp
ljmp
mov
outsb
and
mov
outsl
into
and
mov
fisttpll
xchg
push
idivl
lods
sbb
out
dec
in
mov
mov
add
xor
mov
test
in
mov
mov
mov
pop
test
mov
aam
ljmpw
bound
mov
add
adc
cmp
dec
pop
xchg
xchg
add
add
add
mov
add
adc
mov
rolb
mov
mul
das
xor
std
lret
push
rolb
and
mov
fdivr
orl
add
ret
es
add
xchg
mov
add
xchg
jge
pop
fs
nop
add
xor
mov
mov
add
mov
jmp
pop
dec
es
mov
cld
sarl
leave
jp
xchg
and
adc
rolb
mov
ja
repz
mov
push
je
xchg
push
push
adc
push
lock
mov
loop
mov
enter
int
out
push
add
adc
add
hlt
mov
mov
rolb
mov
add
adc
test
add
mov
add
pusha
add
mov
imul
mov
mov
daa
data16
add
mov
jae
jnp
jge
jmp
adc
mov
bound
mov
mov
add
mov
or
fwait
cmp
enter
add
pop
cmp
mov
mov
aam
and
mov
es
pop
repz
sbb
mov
xchg
pop
hlt
out
mov
push
mov
adc
push
jb
mov
ss
cmp
add
jmp
inc
push
mov
xchg
or
sbb
add
stos
mov
inc
lods
adcl
insl
xlat
jg
out
push
add
add
dec
pop
cmpsl
loop
mov
add
mov
int
add
fs
add
adc
add
mov
iret
jge
adc
sub
daa
repz
mov
shll
add
pop
fsubs
add
insl
mov
pop
jmp
mov
xchg
outsl
ljmp
cs
or
mov
jge
cmp
dec
int3
lds
mov
add
insb
mov
dec
loopne
mov
add
fs
inc
lahf
out
lock
adc
mov
add
or
lea
add
adc
mov
xchg
test
sub
jae
add
xor
jae
push
add
mov
cmp
mov
or
add
mov
popf
hlt
negl
add
adc
add
add
mov
stc
mov
call
es
rolb
mov
hlt
sti
pop
add
add
mov
xor
out
add
push
sti
pusha
add
sub
add
mov
fildll
out
jge
test
mov
push
add
jge
lret
fstpl
cmpsl
aas
stos
xor
das
mov
incl
mov
ret
lcall
add
mov
sbb
mov
in
jbe
fs
mov
add
pushw
lods
iret
out
lahf
sbb
sub
xchg
mov
fsub
add
and
hlt
mov
adc
clc
hlt
sbb
push
sbb
sbb
add
out
add
inc
add
sbb
mov
push
xchg
mov
test
add
ficomps
inc
xchg
movsb
sbb
xchg
mov
mov
add
mov
popa
in
mov
or
mov
add
add
push
mov
mov
mov
sti
jmp
into
push
mov
sbbl
andl
fldcw
add
mov
add
xchg
sub
ror
xor
mov
add
add
mov
mov
adc
jae
jbe
std
add
add
lds
mov
add
insb
mov
xchg
cmp
es
and
mov
add
inc
adc
addb
push
je
pop
xchg
outsl
pusha
add
loop
mov
addb
lahf
out
fcoml
addb
sahf
push
repnz
cmp
cmpsb
jae
pop
es
jo
mov
fstl
xor
add
jmp
add
push
cmc
dec
cmp
les
add
stc
es
fucomip
bound
mov
das
clc
or
in
mov
mov
mov
mov
mov
and
rolb
mov
addb
pushl
add
cmp
xlat
add
mov
mov
sbb
mov
mov
or
sub
lods
and
mov
or
loop
mov
jne
repz
add
add
roll
mov
jge
mov
mov
movb
data16
mov
mov
xchg
lcall
not
dec
fbstp
xor
jp
or
mov
mov
add
cmp
lock
mov
xchg
pop
mov
popf
in
out
xchg
daa
adc
imul
add
dec
cmpsb
push
mov
leave
cmpsl
lds
add
xor
mov
add
add
inc
push
mov
outsb
into
clc
jl
ret
mull
add
push
int
and
mov
rolb
mov
in
push
add
push
xor
insl
xchg
sahf
cmp
mov
dec
mov
hlt
sub
clc
ss
iret
xlat
push
cmp
push
xor
mov
dec
into
js
jg
lret
int3
movsl
sub
imul
mov
mov
test
mov
xchg
pop
mov
pop
xchg
lea
mov
xchg
add
into
push
fcomps
mov
icebp
sub
leave
pop
iret
cmpsl
xchg
cld
inc
mov
leave
add
mov
add
jae
pop
xchg
push
addb
adc
shrd
cmp
adc
arpl
icebp
jl
cwtl
addr16
xchg
add
clc
add
mov
add
mov
cltd
enter
mov
in
and
mov
pop
jb
mov
pop
push
pusha
add
icebp
imul
dec
xor
mov
mov
lods
xor
xchg
inc
movsl
fs
push
daa
addb
lods
ds
xor
add
mov
mov
mov
lahf
daa
push
xor
movb
les
mov
pop
in
push
stos
mul
test
mov
dec
dec
je
mov
cmp
add
cmpsl
mov
add
jl
add
dec
xor
dec
psubusb
icebp
ds
addb
fsub
ds
pop
pop
out
inc
push
add
mov
or
cmp
jl
pop
pushf
mov
pop
mov
adc
and
jbe
repnz
mov
sbb
mov
in
ret
push
add
jbe
and
mov
test
fiadds
add
jns
jbe
xchg
mov
xchg
and
rolb
mov
jg
xchg
mov
mov
rolb
outsb
int
aaa
and
shrl
lahf
sub
negb
jg
jno
aam
imul
add
cmp
mov
addb
out
outsb
test
mov
scas
loope
ds
mov
xchg
hlt
push
mov
std
fiadds
mov
add
dec
jnp
lods
cmp
jmp
jbe
inc
push
sbb
in
mov
stos
mov
adc
addb
and
in
xchg
leave
cmp
xchg
add
in
add
xchg
testl
jmp
mov
xor
mov
mov
xor
mov
movsb
stos
out
inc
add
mov
lods
call
mov
fists
jmp
vpsllq
add
mov
mov
xor
call
add
mov
push
push
rorl
std
mov
inc
mov
add
aam
jb
mov
mov
pop
es
pop
pop
inc
inc
roll
mov
jmp
sbb
xlat
in
movsb
imulb
cmp
mov
jnp
leave
dec
dec
sbb
add
test
add
and
mov
mov
add
mov
aas
jmp
or
clc
stos
out
adc
dec
jle
cmp
add
mov
mov
xor
pop
ss
lds
test
mov
cmp
dec
imul
fsubr
aaa
and
mov
imul
dec
lcall
add
scas
rolb
insb
adc
addb
in
rolb
mov
arpl
mov
fwait
call
cwtl
mov
fsubl
mov
stc
out
sub
and
mov
xlat
leave
loope
mov
xor
mov
out
adc
mov
mov
clc
mov
mov
mov
in
mov
add
jo
mov
popa
out
dec
xchg
outsb
push
outsb
stc
ja
jns
inc
add
shll
mov
adc
aad
adc
add
add
movsb
jg
sbb
xchg
dec
aaa
insl
or
push
xchg
push
add
adc
mov
xchg
jecxz
lods
push
popf
push
push
enter
cmp
je
adc
mov
add
nop
add
dec
xchg
test
outsb
movsb
or
and
inc
mov
pop
arpl
add
or
inc
add
outsl
rolb
mov
add
mov
outsb
push
xor
mov
sbb
mov
cltd
iret
mov
mov
or
enter
es
das
popf
add
mov
add
and
loope
dec
dec
pop
lea
aad
nop
add
popa
mov
sub
add
mov
cmp
or
lahf
jne
sbb
mov
stos
cwtl
and
mov
add
mov
mov
inc
ja
arpl
jnp
lods
inc
add
mov
and
xchg
mov
add
enter
xchg
mov
mov
repnz
and
addb
xchg
shrl
mov
fnsave
pop
inc
fisubl
mov
jo
mov
add
mov
cmp
push
cmp
lcall
add
scas
outsl
sbb
mov
mov
mov
cmp
add
and
mov
scas
rolb
mov
add
mov
mov
jg
add
icebp
scas
dec
mov
or
mov
lcall
cmp
push
in
jl
inc
add
or
mov
rorl
addb
repz
cltd
aaa
sbb
cmpsb
xor
jl
jmp
nop
add
add
add
mov
pop
push
add
mov
add
mov
inc
lods
push
add
pop
test
pop
inc
sahf
add
mov
inc
add
mov
fildl
sbb
cmp
xchg
add
pop
ja
add
repnz
mov
in
add
pop
push
insb
or
mov
movsl
lock
add
mov
ret
repnz
cmp
mov
and
lea
add
inc
cmpsl
adc
mov
dec
jo
mov
jg
mov
aam
aam
xor
mov
mov
add
repnz
popa
leave
mov
and
mov
or
mov
add
xlat
in
lret
xlat
push
add
in
or
add
mov
mov
jno
add
xlat
pop
out
mov
mov
add
add
cltd
xchg
push
xor
std
loope
and
stos
repz
inc
pop
in
lahf
pop
jne
add
lahf
loopne
mov
cmpsb
ja
scas
pushf
push
inc
add
loopne
mov
push
or
lahf
jns
gs
xchg
dec
dec
fisubs
mov
rolb
mov
or
add
add
pop
test
mov
cltd
jecxz
add
inc
pop
dec
xchg
jne
push
inc
data16
mov
push
add
mov
mov
pushf
sti
xor
mov
mov
sarl
ret
arpl
mov
inc
mov
popa
push
fidivs
aam
add
stos
out
xchg
cmp
xchg
push
jmp
imul
mov
xchg
push
mov
aaa
mov
mov
out
ret
les
iret
adc
jg
daa
clc
leave
ret
rsm
xor
mov
mov
filds
pop
int3
and
mov
das
outsb
add
mov
das
mov
mov
stos
cmp
and
cmp
mov
fidivl
xchg
mov
aad
adc
mov
sub
divb
add
les
add
dec
dec
rolb
mov
inc
jecxz
ss
mov
pop
out
and
mov
popf
cmp
fistpl
push
sub
add
pop
leave
repz
ja
add
add
lcall
lock
cmpsb
sub
xchg
test
sahf
sbb
jnp
add
jmp
add
mov
mov
inc
add
jb
mov
pop
fdivr
daa
pop
aaa
popa
inc
add
test
add
mov
xchg
and
add
notl
rcll
mov
cmp
int3
cmp
lahf
cld
rolb
mov
cli
hlt
sub
add
pusha
add
or
std
pop
cmp
into
adc
inc
jbe
lret
cli
push
add
inc
aaa
lea
mov
cmp
sbb
and
push
xchg
add
les
mov
cmp
pop
scas
test
lock
push
add
add
and
add
shrl
mov
pop
loope
fistl
jo
mov
ljmp
sub
add
xchg
inc
add
add
push
inc
in
fld
rcrl
stos
sub
jnp
add
and
pop
cltd
addb
cmpl
leave
xor
mov
xchg
mov
lcall
insb
and
adc
mov
pop
jmp
cmp
push
dec
outsb
pop
pop
popf
add
mov
sbb
add
mov
mov
mov
aad
rolb
mov
jle
dec
push
outsb
ss
inc
add
jmp
push
out
adc
adc
ret
pop
jns
lcall
add
add
push
add
orl
adc
dec
mov
ret
ljmp
mov
xor
loop
mov
repz
nop
add
or
sbb
shl
aad
pushf
jns
add
xchg
mov
sub
inc
fwait
js
add
xchg
add
fs
outsb
adc
jbe
cs
pop
lret
mov
add
push
in
mov
dec
int
sub
mov
push
add
sbb
rolb
lret
sub
push
jb
mov
add
mov
repnz
jae
rcll
repz
push
and
sub
mov
cltd
fcmovu
rolb
mov
movsb
mov
mov
mov
pop
inc
push
pop
inc
xor
daa
or
jae
lahf
or
ljmp
test
add
popa
aad
jecxz
push
xchg
push
cmp
sbb
adc
dec
adc
test
add
orl
add
xchg
lret
lcall
xchg
add
mov
fldpi
icebp
rolb
sar
add
pop
popa
clc
loopne
mov
hlt
hlt
and
mov
cmp
add
iret
add
insl
xchg
mov
add
and
mov
mov
mov
das
mov
loope
jmp
add
jns
push
pop
aad
or
outsl
out
inc
pop
xor
mov
in
cmp
mov
dec
adc
cmpsb
fsubs
loope
inc
pop
and
mov
dec
dec
or
and
mov
pop
jns
pop
inc
and
add
mov
mov
sub
xor
mov
sbb
das
mov
mov
sub
dec
mov
imull
insl
insl
lret
mov
dec
insl
or
in
xchg
and
mov
add
or
mov
add
icebp
push
add
stc
loop
mov
mov
add
jae
rolb
and
mov
jp
mov
jb
mov
jb
mov
sub
loope
in
add
add
jae,pn
mov
mov
mov
out
bound
mov
mov
mov
dec
xchg
pop
dec
in
bound
mov
add
pop
jb
mov
call
mov
mov
mov
add
add
add
add
mov
pop
into
sbb
sub
dec
cmp
inc
cmpsb
cmpsb
mov
add
sbb
sbb
mov
add
mov
mov
sbb
imul
test
dec
push
jnp
pop
aad
std
cmc
sbb
pop
lods
adc
mov
jae
mov
mov
jg
cltd
cmp
popf
mov
cld
bound
mov
out
sub
jo
mov
add
in
mov
sbb
jmp
fisttpll
scas
popf
loopne
mov
add
mov
mov
mov
add
sub
fiaddl
cwtl
mov
pop
add
mov
std
cmc
fisubl
fs
jle
notb
fsubrs
sbb
popf
and
jg
or
mov
popa
mov
popa
inc
mov
fucom
shr
daa
gs
ficomps
fldt
mov
add
add
mov
fldt
pusha
add
lods
popa
pop
cmp
mov
xlat
add
mov
sub
push
mov
pop
bound
mov
jo
mov
jl
add
mov
jnp
int
jle
mov
or
dec
ljmp
leave
adc
into
or
inc
and
mov
jmp
aaa
jp
adc
repz
mov
mov
xchg
js
add
clc
test
mov
cmpsb
jae
push
add
mov
push
mov
rolb
mov
int
inc
inc
jmp
mov
add
mov
fwait
push
mov
daa
in
ds
push
sbb
sbb
add
add
mov
data16
adc
aam
add
insb
mull
ja
add
movl
fs
push
mov
mov
mov
cmp
or
addb
int3
push
add
int3
sbb
cmp
add
mov
add
add
jne
outsb
xchg
call
clc
and
sub
adc
mov
push
imul
cld
lock
jb
mov
mov
cs
mov
mov
and
fbld
jl
inc
mov
retw
pop
in
lock
cmp
repz
addb
inc
adc
push
outsb
pop
insl
ss
add
mov
dec
or
fidivrs
fsubs
pop
loopnew
mov
in
das
aad
stos
mov
sbb
push
sub
dec
out
cmp
push
mov
push
add
mov
sub
fldl
or
mov
fwait
push
mov
jl
xchg
jge
mov
fdivrp
inc
mov
cmpl
mov
jg
dec
adc
mov
add
popa
repnz
add
inc
sbb
imul
push
js
add
xchg
add
mov
cmp
sbb
mov
testb
pop
adc
mov
aad
pop
das
out
ficomps
xchg
mov
jbe
xchg
dec
iret
dec
mov
in
sbb
sub
add
jle
mov
mov
lds
popa
pop
roll
add
add
add
add
pop
jo
mov
pop
ja
mov
in
pop
xchg
leave
hlt
ret
int3
mov
ret
sbb
pop
xor
dec
xlat
pop
paddusb
jl,pn
add
mov
xor
mov
mov
xor
mov
fsubrs
sbb
sub
daa
stos
pusha
add
je
jbe
mov
adc
fs
jle
jbe
bswap
jp
xchg
mov
xor
cmp
lds
mov
loope
insl
jbe
or
inc
inc
pop
cmc
jecxz
push
cmp
jo
mov
test
insb
mov
fidivl
add
mov
adc
mov
sahf
call
pop
xor
add
out
ret
mov
push
cmpsb
mov
sbb
mov
bswap
test
adc
pop
pop
mov
fists
add
add
mov
cwtl
mov
mov
jo
mov
mov
int
sub
pop
leave
mov
mov
add
test
test
rolb
shll
cs
jno
dec
push
mov
xchg
and
mov
push
pusha
add
mov
fwait
dec
repz
out
outsl
xor
mov
or
inc
pushf
addb
orl
aas
subl
jno
add
mov
add
or
fdivrl
add
add
mov
add
addb
sub
pop
xor
rolb
sbb
ja
clc
sub
xchg
add
stc
add
mov
cmc
inc
aad
add
ja
das
lock
roll
add
xor
in
and
mov
add
and
mov
mov
and
inc
hlt
adc
mov
cs
lcall
mov
mov
pop
push
pop
mov
mov
inc
add
mov
mov
inc
stos
xchg
repnz
repz
outsl
mov
add
add
push
pop
inc
jb
mov
out
out
vmovlpd
mov
sub
lds
test
add
or
mov
add
dec
arpl
mov
das
jp
rolb
imul
push
imul
and
idiv
cld
xchg
mov
mov
rorl
movsl
dec
mov
sbb
fmull
cmp
icebp
cltd
or
in
jge
add
nop
add
dec
lret
insb
mov
or
ja
add
scas
sahf
and
mov
xor
sub
add
stos
adc
add
mov
or
pop
jne
in
cmpsb
dec
add
add
jg
add
dec
mov
cwtl
addl
dec
scas
xchg
add
add
inc
add
mov
add
mov
lods
shll
add
outsb
stos
mov
fadds
add
roll
mov
add
je
cmp
pop
pop
mov
shll
add
cmp
pop
jp,pn
add
jge
cs
cld
das
mov
add
mov
mov
out
sbb
inc
push
add
mov
sub
mov
sbb
add
ljmp
add
mov
add
outsl
or
adc
mov
ret
notl
cmpsb
and
mov
test
push
and
mov
mov
xor
mov
aad
scas
xchg
jge
pop
mov
bound
mov
mov
enter
mov
cltd
xchg
enter
mov
add
pop
in
popf
jmp
sbb
add
xorl
cmpsb
cmpsb
test
and
mov
mov
jno
cmp
not
cld
xchg
roll
mov
mov
pop
daa
shld
xchg
inc
insl
jbe
cld
fimuls
push
imul
mov
mov
movsl
nop
add
and
mov
xor
or
popf
and
jp
sti
cmpsl
in
gs
ret
mov
add
outsb
jle
lret
subl
in
mulps
dec
inc
xor
mov
add
mov
mov
mov
ret
lret
mov
dec
dec
aaa
addr16
imul
add
add
dec
rolb
mov
mov
dec
fs
sarl
mov
sbb
push
pop
movsl
pop
mov
mov
mov
lea
sti
and
mov
mov
mov
lods
xchg
loope
lret
lcall
add
add
imul
mov
add
addr16
mov
dec
outsl
dec
and
out
dec
push
icebp
test
add
imul
mov
test
dec
xchg
xchg
push
popf
ret
adc
adc
mov
add
and
mov
pushf
mov
mov
and
add
push
mov
mov
lock
mov
xor
pop
push
imul
ds
loop
mov
std
in
pushf
jbe
add
mov
add
mov
out
cltd
add
movb
xchg
pop
iret
das
stos
jae
lea
pop
add
mov
xchg
xor
mov
cli
mov
add
cmpsb
pop
jns
loope
dec
mov
mov
sbb
xor
cmp
xchg
adc
sahf
addr16
sub
scas
mov
mov
add
xor
bound
mov
xor
mov
add
and
stos
rorl
cmc
cli
xor
add
fisttps
loope
pop
pop
inc
add
mov
add
cmc
nop
add
mov
add
cmp
sub
mov
adc
sub
dec
xor
mov
mov
loopne
mov
push
add
movsb
inc
adc
pop
bsf
lods
lret
test
ja
cmp
jge
test
sub
jb
mov
mov
mov
adc
add
stc
add
pop
lcall
jno
add
jno
popf
test
fldcw
lods
popf
sub
add
mov
add
mov
ret
lods
inc
es
dec
or
int
in
cltd
icebp
fcomps
add
add
in
add
add
mov
add
test
int3
in
movsb
mov
cmp
sti
pop
jne
jae
sbb
dec
je
add
mov
aam
iret
addb
jmp
cmp
sbb
stc
dec
push
push
add
in
jg
in
pop
lods
insb
data16
or
pop
dec
push
xchg
mov
aam
lahf
jae
add
int
fs
push
lret
cmp
mov
out
cwtl
lret
aam
sahf
dec
cli
push
add
mov
repz
popa
sbb
push
inc
in
fmuls
pop
push
add
adc
dec
or
loop
mov
mov
mov
xchg
mov
or
cld
push
mov
mov
mov
xchg
add
idivb
and
mov
insb
out
or
stc
loop
mov
lea
sti
lods
pop
mov
add
mov
in
ret
adc
mov
jns,pt
adc
mov
cmp
mov
mov
mov
mov
mov
stos
shll
jge
jle
add
mov
cmpsl
inc
test
cmp
out
xor
mov
imul
push
push
add
sbb
aaa
lock
mov
out
push
pop
iret
cltd
sahf
xor
add
inc
and
add
add
push
mov
popa
cltd
mov
adc
push
and
mov
mov
mov
push
mov
mov
dec
pop
je
add
mov
sub
cmpsl
jg
aaa
jo
gs
das
int3
xchg
add
sub
loop
mov
inc
cwtl
jmp
ljmp
add
mov
mov
mov
add
mov
add
push
pop
inc
add
push
mov
mov
mov
cmp
fld
add
xchg
mov
and
icebp
or
push
rolb
mov
cld
fmul
sbb
add
cmc
cli
jno
jmp
jnp
stc
push
insw
data16
dec
push
insb
or
jns
and
add
sbb
fwait
mov
mov
mov
out
adc
mov
es
fpatan
push
aas
jno
imul
pop
rcrl
mov
aam
cmp
cmp
xor
clc
test
rolb
mov
les
mov
adc
add
sahf
bswap
fisubrs
cmpsb
mov
pop
fldt
leave
xor
mov
repz
mov
sahf
out
mov
dec
insl
inc
enter
aam
imul
fadds
jne
xchg
rolb
mov
dec
mov
fs
dec
lea
mov
cmp
mov
add
or
jb
mov
ret
mov
nop
add
jne
cmp
mov
insl
pop
aam
add
iret
pop
rolb
mov
leave
cmp
push
fsubrp
jnp
cli
dec
mov
add
push
adc
mov
xchg
and
mov
enter
in
cs
int
jg
push
rolb
mov
add
insb
mov
add
dec
mov
es
sbb
mov
cmpsl
inc
gs
popf
cs
add
mov
mov
and
enter
jecxz
movsb
xchg
add
or
pop
sbb
mov
add
dec
mov
add
movsl
scas
mov
jb
mov
dec
xor
cmp
xchg
in
mov
xchg
cmpl
or
mov
add
xor
cmp
cmc
mov
stos
bound
mov
xlat
stos
sbb
add
push
fwait
lahf
xlat
dec
fs
call
xchg
mov
in
pusha
add
or
push
xor
mov
push
dec
pop
fs
and
cltd
mov
mov
or
fs
inc
cltd
mov
mov
xor
sbb
int3
sub
cmp
add
sahf
js
and
jae
xchg
popa
outsb
lock
sti
call
jmp
push
rcrl
adc
add
add
fadds
mov
lods
push
and
dec
mov
das
jp
lds
add
inc
cmp
add
mov
sti
div
add
add
mov
add
in
sub
pop
sub
add
lret
aam
push
ds
pop
adc
mov
in
pop
xchg
lock
aas
dec
xchg
jne
dec
sbb
add
jecxz
sub
cli
push
ja
into
scas
in
pop
cmp
add
xor
mov
fsubrl
int
lds
add
mov
xor
idiv
mov
mov
or
mov
out
sub
mov
fs
xchg
push
push
mov
add
cmp
mov
mov
pop
xchg
mov
sahf
loope
insl
int
push
pop
rolb
mov
ja
clc
jmp
mov
lds
ficompl
aaa
dec
out
sub
add
mov
jmp
into
mov
xlat
jg
fucomip
pushf
cmc
fists
mov
mov
mov
out
pop
mov
push
add
cmp
add
add
cmc
push
fidivrs
sbb
inc
sbb
add
cld
xchg
inc
add
lds
add
mov
mov
add
mov
mov
rolb
cs
add
mov
mov
add
mov
popa
lds
add
rolb
jne
lock
mov
mov
insl
mov
mov
cwtl
push
inc
add
lods
jae
iret
inc
xchg
in
rolb
mov
lahf
and
add
cli
pop
mov
add
addb
add
ficompl
and
pop
es
mull
in
ja
ds
adc
mov
jo
mov
dec
inc
jl
dec
lret
xor
mov
inc
inc
add
lahf
ds
pop
fidivrl
add
dec
or
mov
fs
pop
rolb
scas
insl
dec
aaa
incl
dec
scas
push
loopne
mov
add
mov
insb
inc
add
xchg
stos
inc
push
fcom
push
xchg
adc
mov
int
add
mov
movsb
sbb
add
lret
in
jns
sub
inc
jne
or
sbbl
sbb
sbb
add
mov
mov
add
jl
aam
jp
mov
leave
imul
incb
and
leave
push
dec
stos
idivb
sbb
xchg
add
das
inc
inc
and
push
fidivs
mov
dec
in
add
popf
add
insl
adc
mov
mov
mov
rcl
imul
sub
xchg
mov
and
mov
mov
mov
int3
mov
pop
andl
xchg
xchg
push
and
mov
cmp
xor
pop
fdivrp
sahf
mov
subl
mov
add
jns
pop
add
add
mov
push
not
aaa
outsb
cltd
fisttpl
or
mov
add
fldln2
mov
jmp
dec
cmpl
sti
sub
cld
clc
push
loope
dec
dec
jo
mov
je
je
scas
int
add
inc
add
in
nop
leave
jmp
gs
push
xor
mov
test
push
mov
nop
leave
jmp
dec
add
in
iret
ja
add
pop
push
mov
nop
leave
jmp
add
add
add
test
push
mov
xchg
ret
add
stos
add
add
clc
push
clc
repnz
nop
cld
jae
xchg
xchg
add
add
and
jmp
add
add
add
nop
add
xor
push
mov
nop
leave
jmp
addl
mov
ja
add
inc
in
repnz
nop
cld
jae
xor
aad
sbb
stos
push
mov
nop
leave
jmp
push
add
aad
in
leave
add
add
push
mov
xchg
ret
lahf
add
lret
push
mov
nop
leave
jmp
pop
hlt
add
push
jg
in
pop
pop
push
mov
xchg
ret
xchg
ja
pop
add
mov
jns
test
sub
in
nop
leave
jmp
inc
add
xor
pop
pushl
clc
repnz
nop
cld
jae
int3
int3
add
add
ds
clc
repnz
nop
cld
jae
data16
sbb
mov
xchg
ret
gs
add
add
in
nop
leave
jmp
add
add
and
add
push
mov
xchg
ret
repz
add
sub
or
inc
add
repz
add
lret
push
add
lods
fildll
icebp
add
add
incl
add
or
je
sub
mov
inc
add
inc
add
out
xlat
arpl
nop
add
add
cli
xor
int3
add
pop
bound
xor
mov
clc
repnz
nop
cld
jae
add
dec
push
mov
nop
leave
jmp
nop
popl
add
add
add
jbe
adc
clc
repnz
nop
cld
jae
push
add
lahf
add
add
add
add
add
add
mov
add
pop
sub
push
mov
xchg
ret
adcl
test
pop
and
repnz
nop
cld
jae
scas
add
add
repnz
nop
cld
jae
pop
ja
add
add
xchg
loopne
mov
stos
jne
push
mov
nop
leave
jmp
or
out
sbb
movsb
clc
repnz
nop
cld
jae
add
lret
push
jmp
repnz
nop
cld
jae
ja
add
mov
add
repz
mov
xchg
ret
mov
add
aad
xchg
aas
push
push
mov
nop
leave
jmp
add
pop
dec
add
add
push
mov
nop
leave
jmp
inc
bound
lret
add
add
mov
mov
xchg
clc
repnz
nop
cld
jae
add
xchg
or
nop
add
add
add
in
nop
leave
jmp
leave
lret
addb
xchg
pop
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
add
push
das
pop
clc
repnz
nop
cld
jae
add
add
not
pop
and
push
mov
nop
leave
jmp
xchg
in
add
iret
add
or
cmpsl
rolb
xchg
ret
shrl
cwtl
ret
add
add
in
mov
add
mov
add
bound
mov
push
mov
xchg
ret
add
mov
js
in
mov
and
push
mov
xchg
ret
or
add
xchg
mov
add
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
lret
add
jge
push
mov
nop
leave
jmp
xor
leave
bound
clc
repnz
nop
cld
jae
add
pop
in
les
mov
mov
xchg
ret
push
add
xchg
mov
data16
repnz
mov
xchg
ret
add
ja
mov
lret
mov
nop
cld
jae
das
in
add
add
mov
xchg
ret
add
aad
add
xchg
add
lds
push
mov
xchg
ret
push
add
add
xchg
mov
aam
ret
push
mov
nop
leave
jmp
add
repz
add
add
xchg
push
mov
nop
leave
jmp
add
add
lret
add
xchg
add
into
je
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
adc
add
ljmp
add
add
in
nop
leave
jmp
inc
dec
out
pop
add
dec
cmp
repnz
nop
cld
jae
stos
mov
cmp
add
add
add
dec
sbb
je
mov
test
push
mov
xchg
ret
push
bound
out
push
clc
repnz
nop
cld
jae
add
jl
rcrl
icebp
clc
repnz
nop
cld
jae
pop
adc
adc
inc
xchg
pop
mov
clc
repnz
nop
cld
jae
cmpsb
xor
adc
clc
repnz
nop
cld
jae
in
nop
adc
in
outsb
jne
clc
repnz
nop
cld
jae
js
add
sub
push
mov
xchg
ret
pop
add
ljmp
ret
xchg
or
test
push
add
clc
repnz
nop
cld
jae
andl
add
arpl
fildl
add
pop
and
test
add
movsl
or
cld
jae
ljmp
add
repnz
nop
cld
jae
xchg
add
bound
add
push
add
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
add
das
mov
and
iret
shr
push
mov
nop
leave
jmp
sub
add
addb
rolb
mov
jl
sbb
repnz
nop
cld
jae
pop
add
add
outsb
and
repnz
nop
cld
jae
add
js
add
cmp
nop
cld
jae
pop
iret
add
add
dec
inc
clc
repnz
nop
cld
jae
add
add
add
add
repnz
nop
cld
jae
add
add
xor
push
mov
xchg
ret
in
inc
sub
mov
bound
mov
mov
clc
repnz
nop
cld
jae
add
add
lock
push
mov
xchg
ret
pop
add
add
xchg
add
icebp
addb
xchg
imul
clc
repnz
nop
cld
jae
aad
add
in
add
jo
inc
add
in
cmpsb
add
lret
les
add
push
mov
nop
leave
jmp
xor
add
push
mov
nop
leave
jmp
add
lret
add
les
pop
cmp
repnz
nop
cld
jae
add
lret
js
add
add
mov
nop
nop
cld
jae
add
add
sbb
dec
cmp
repnz
nop
cld
jae
jl
push
int3
pop
add
imul
clc
repnz
nop
cld
jae
pop
mov
lret
push
clc
repnz
nop
cld
jae
add
sub
dec
inc
cs
pop
push
mov
xchg
ret
xor
das
cs
add
rolb
mov
add
repnz
nop
cld
jae
add
add
nop
cld
jae
add
das
pop
add
jg
lods
push
push
mov
nop
leave
jmp
stos
iret
adc
add
add
push
push
mov
nop
leave
jmp
mov
add
cs
stos
add
rep
clc
repnz
nop
cld
jae
xlat
add
shll
mov
notl
in
nop
leave
jmp
hlt
fcomi
add
outsl
shl
push
mov
xchg
ret
add
pop
add
mov
clc
repnz
nop
cld
jae
push
mov
dec
cmp
push
mov
nop
leave
jmp
aad
in
add
scas
mov
add
xchg
push
mov
xchg
ret
dec
jl
dec
ljmp
xor
add
jmp
incl
add
push
add
out
add
add
or
mov
xchg
ret
jl
add
popl
push
mov
nop
leave
jmp
mov
dec
pop
scas
add
test
repz
mov
nop
leave
jmp
ja
aad
add
add
fisttps
mov
adc
in
nop
xlat
inc
mov
fistl
add
add
inc
add
adc
add
clc
repnz
nop
cld
jae
add
loop
push
mov
xchg
ret
xchg
repz
es
push
clc
repnz
nop
cld
jae
ja
add
in
add
outsl
xchg
clc
repnz
nop
cld
jae
jl
add
inc
mov
xor
nop
nop
cld
jae
pop
jg
add
add
pushf
lea
clc
repnz
nop
cld
jae
add
bound
xchg
inc
push
add
push
mov
nop
leave
jmp
add
add
inc
add
adc
push
clc
repnz
nop
cld
jae
aad
iret
add
inc
mov
pop
mov
push
mov
nop
leave
jmp
mov
lahf
sub
scas
push
pop
rep
clc
repnz
nop
cld
jae
aad
add
rcrl
push
push
mov
nop
leave
jmp
int3
leave
add
cli
mov
add
nop
cld
jae
pop
add
add
jne
push
mov
nop
leave
jmp
add
add
rdpmc
sar
repnz
nop
cld
jae
add
add
aad
add
and
and
inc
add
add
bound
add
not
push
mov
xchg
ret
fildl
add
mov
add
push
mov
xchg
ret
mov
add
add
and
repnz
nop
cld
jae
add
xor
sbbl
push
mov
xchg
ret
add
hlt
add
shrl
mov
nop
leave
jmp
add
pop
add
add
add
clc
repnz
nop
cld
jae
mov
das
add
repnz
nop
cld
jae
add
add
subl
and
clc
repnz
nop
cld
jae
add
jl
sub
add
push
mov
xchg
ret
add
ror
lea
push
mov
nop
leave
jmp
cli
in
xchg
add
add
add
jmp
add
mov
sub
push
xor
add
mov
clc
repnz
nop
cld
jae
xchg
shll
decl
test
and
add
in
nop
leave
jmp
pop
cmpsb
add
push
mov
xchg
ret
dec
mov
add
jg
cli
add
clc
repnz
nop
cld
jae
xchg
lret
add
sub
nop
nop
cld
jae
js
dec
iret
add
fsubrs
popa
clc
repnz
nop
cld
jae
mov
add
jno
mov
push
mov
nop
leave
jmp
add
add
add
mov
nop
cld
jae
lret
add
hlt
or
nop
leave
jmp
add
rcll
clc
repnz
nop
cld
jae
add
pop
fildl
nop
add
rolb
mov
je
clc
repnz
nop
cld
jae
add
das
outsl
push
push
mov
xchg
ret
adc
add
jl
add
pop
push
mov
xchg
ret
xor
dec
lret
add
add
push
xchg
nop
cld
jae
add
adc
add
inc
add
popa
add
repnz
nop
cld
jae
lahf
add
add
add
loope
mov
clc
repnz
nop
cld
jae
mov
leave
repnz
nop
nop
cld
jae
iret
mov
add
aam
add
push
mov
xchg
ret
pop
cs
add
and
push
mov
xchg
ret
lret
add
pop
dec
bound
push
clc
repnz
nop
cld
jae
add
xor
and
and
push
mov
xchg
ret
add
in
add
mov
negl
nop
cld
jae
repz
mov
pop
jo
mov
push
clc
repnz
nop
cld
jae
xlat
js
add
add
js
add
cmp
jne
push
mov
xchg
ret
bound
bound
test
add
repnz
nop
cld
jae
add
fildl
xchg
nop
add
xchg
xchg
sub
inc
push
adc
clc
repnz
nop
cld
jae
roll
add
mov
clc
repnz
nop
cld
jae
les
in
hlt
insl
mov
push
mov
nop
leave
jmp
add
add
sub
mov
nop
leave
jmp
add
xchg
xchg
das
mov
or
in
nop
leave
jmp
inc
out
add
add
ja
nop
add
push
mov
xchg
ret
dec
add
mov
mov
nop
leave
jmp
inc
push
add
add
inc
jb
clc
repnz
nop
cld
jae
js
add
mov
add
add
repnz
nop
cld
jae
add
inc
pop
mov
clc
repnz
nop
cld
jae
les
add
xchg
add
repnz
nop
cld
jae
repz
xchg
push
add
addb
mov
nop
nop
cld
jae
mov
xlat
aad
and
mov
push
mov
nop
leave
jmp
les
leave
xlat
xlat
gs
xor
nop
leave
jmp
push
inc
stos
add
add
scas
shll
icebp
mov
add
clc
repnz
nop
cld
jae
add
jg
clc
repnz
nop
cld
jae
inc
mov
xchg
jg
insb
add
clc
repnz
nop
cld
jae
pop
add
add
add
add
clc
repnz
nop
cld
jae
xchg
pop
mov
inc
push
mov
xchg
ret
add
xlat
add
add
add
or
repnz
nop
cld
jae
stos
pop
xchg
ja
dec
stc
add
clc
repnz
nop
cld
jae
add
js
push
add
clc
repnz
nop
cld
jae
bound
add
dec
add
add
and
clc
repnz
nop
cld
jae
dec
mov
hlt
add
mov
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
mov
add
push
mov
nop
leave
jmp
add
add
data16
mov
clc
repnz
nop
cld
jae
add
das
mov
clc
repnz
nop
cld
jae
lret
je
clc
repnz
nop
cld
jae
adc
in
insl
je
clc
repnz
nop
cld
jae
hlt
add
addb
and
icebp
xchg
in
jmp
clc
repnz
nop
cld
jae
jl
int3
add
ljmp
loopne
add
xor
add
mov
repnz
nop
cld
jae
add
mov
add
push
iret
rep
push
mov
xchg
ret
lahf
add
sub
push
add
xor
nop
nop
cld
jae
leave
add
add
xchg
inc
repz
pusha
push
mov
xchg
ret
bound
add
mov
pop
mov
clc
repnz
nop
cld
jae
bound
add
add
fucompp
hlt
cli
jmp
lret
inc
add
mov
sub
leave
add
scas
in
add
push
mov
nop
leave
jmp
xlat
add
jg
add
inc
add
nop
nop
cld
jae
xor
add
add
add
push
mov
nop
leave
jmp
add
mov
inc
xor
mov
pop
movzwl
clc
repnz
nop
cld
jae
push
add
popl
xchg
dec
push
push
mov
xchg
ret
inc
add
add
iret
add
xchg
xchg
sbb
clc
repnz
nop
cld
jae
lahf
lret
dec
add
fildl
dec
push
clc
repnz
nop
cld
jae
jg
popl
add
add
loope
xchg
dec
sub
sbb
inc
add
add
nop
sub
add
mov
xchg
ret
add
push
jl
add
add
adc
clc
testb
cmp
ret
xchg
sub
bound
add
mov
pop
clc
repnz
nop
cld
jae
mov
int3
add
add
mov
repnz
nop
cld
jae
hlt
add
jmp
clc
repnz
nop
cld
jae
xchg
int3
add
or
mov
mov
clc
repnz
nop
cld
jae
add
ret
push
mov
xchg
ret
cs
lret
add
push
daa
fiadds
add
in
nop
leave
jmp
add
mov
clc
repnz
nop
cld
jae
add
stos
add
jg
add
add
clc
repnz
nop
cld
jae
aad
add
add
mov
cmp
ret
add
pop
add
ja
and
subl
clc
repnz
nop
cld
jae
add
ja
scas
out
mov
clc
repnz
nop
cld
jae
push
add
adcl
in
inc
add
adc
bound
bound
adc
add
clc
repnz
nop
cld
jae
add
lret
clc
repnz
nop
cld
jae
iret
les
scas
add
push
mov
nop
leave
jmp
in
in
les
jp
rclb
in
nop
leave
jmp
add
xchg
jg
dec
xchg
aad
fwait
push
clc
repnz
nop
cld
jae
pop
iret
das
adc
add
addb
pop
pop
push
mov
xchg
ret
ljmp
add
addr16
nop
nop
cld
jae
add
lret
add
mov
jmp
jmp
cld
jae
jg
pop
scas
add
repnz
nop
cld
jae
dec
xor
add
push
mov
xchg
ret
leave
mov
repz
or
clc
repnz
nop
cld
jae
data16
xchg
aad
loopne
mov
add
add
add
clc
repnz
nop
cld
jae
add
xor
xchg
pop
push
clc
repnz
nop
cld
jae
add
pop
lahf
push
aas
add
clc
repnz
nop
cld
jae
fildl
xlat
pop
jl
inc
mov
mov
add
add
leave
jmp
add
push
push
mov
nop
leave
jmp
inc
ljmp
sbb
sar
nop
nop
cld
jae
add
ja
add
jmp
repnz
nop
cld
jae
in
add
add
lret
call
jo
inc
add
add
mov
add
and
repnz
nop
cld
jae
add
stos
add
lods
push
push
mov
nop
leave
jmp
pop
add
add
nop
nop
cld
jae
add
iret
leave
add
in
xor
sahf
dec
push
mov
nop
leave
jmp
add
add
aad
add
mov
and
mov
loope
add
xchg
lret
xor
ljmp
add
repnz
nop
cld
jae
pop
add
pop
cmpsb
add
or
clc
repnz
nop
cld
jae
in
sub
mov
nop
leave
jmp
aad
les
push
add
add
jg
push
mov
xchg
ret
pop
add
add
xchg
das
push
bound
cmovns
in
nop
leave
jmp
add
add
aad
addl
add
in
data16
loop
push
mov
nop
leave
jmp
add
ja
in
int3
cmpl
pop
add
cli
das
das
leave
ja
lret
ljmp
inc
add
mov
nop
leave
jmp
adc
bound
inc
pop
add
add
clc
repnz
nop
cld
jae
add
mov
add
mov
xchg
ret
add
inc
pop
add
add
sub
clc
repnz
nop
cld
jae
ja
add
push
mov
sbb
pop
clc
xchg
add
add
incl
mov
sub
ss
add
add
xchg
mov
repnz
nop
cld
jae
cli
add
add
hlt
mov
jg
clc
repnz
nop
cld
jae
leave
in
xlat
add
add
inc
and
clc
repnz
nop
cld
jae
lret
cmpsb
inc
lret
push
mov
nop
leave
jmp
dec
add
add
lret
add
in
nop
leave
jmp
xchg
in
add
int3
xchg
cwtl
mov
clc
repnz
nop
cld
jae
pop
add
add
mov
in
lahf
add
clc
repnz
nop
cld
jae
inc
add
jmp
lret
out
add
mov
cmpsb
add
in
add
clc
repnz
nop
cld
jae
add
push
add
clc
repnz
nop
cld
jae
lret
add
lahf
lret
in
sub
clc
repnz
nop
cld
jae
sarl
or
clc
repnz
nop
cld
jae
add
icebp
add
clc
repnz
nop
cld
jae
add
add
cmp
popa
add
mov
nop
leave
jmp
add
mov
add
add
mov
inc
add
add
mov
mov
clc
repnz
nop
cld
jae
cs
xor
out
add
inc
jp
push
mov
nop
leave
jmp
add
hlt
sub
sub
nop
nop
cld
jae
lret
out
add
cli
aaa
lds
nop
nop
cld
jae
xor
dec
xor
add
adc
push
push
mov
xchg
ret
xchg
add
pop
add
add
add
pusha
add
push
mov
nop
leave
jmp
add
lea
push
mov
nop
leave
jmp
xor
int3
add
push
mov
jl
add
cmp
add
add
enter
add
push
mov
xchg
ret
xor
add
call
nop
nop
cld
jae
inc
add
add
lret
bound
call
clc
repnz
nop
cld
jae
cmpsb
pop
add
jmp
test
cli
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
add
iret
fcomi
add
mov
xchg
ret
hlt
mov
push
mov
add
in
cmp
clc
repnz
nop
cld
jae
inc
add
nop
rolb
mov
cwtl
mov
clc
repnz
nop
cld
jae
xor
mov
je
clc
repnz
nop
cld
jae
mov
pop
call
in
nop
leave
jmp
pop
push
in
xlat
pushf
push
clc
repnz
nop
cld
jae
mov
mov
clc
repnz
nop
cld
jae
add
les
sub
repnz
nop
cld
jae
inc
add
add
mov
add
mov
mov
ja
add
pop
add
rcll
add
push
mov
xchg
ret
adc
leave
add
mov
mov
clc
repnz
nop
cld
jae
adc
mov
xchg
ret
nop
add
xchg
lahf
add
add
push
sbb
jae
repnz
nop
cld
jae
jl
xchg
mov
cmp
clc
repnz
nop
cld
jae
mov
add
mov
xchg
ret
cli
add
push
clc
repnz
nop
cld
jae
add
inc
xchg
add
pushl
push
mov
xchg
ret
add
add
pop
clc
repnz
nop
cld
jae
stos
add
stos
add
mov
add
stos
add
push
ltr
add
mov
cltd
clc
add
in
stos
push
mov
xchg
ret
js
add
add
cmc
andl
inc
add
or
add
mov
push
mov
xchg
ret
mov
add
add
jne
clc
repnz
nop
cld
jae
xchg
mov
stos
call
clc
repnz
nop
cld
jae
mov
pushl
clc
repnz
nop
cld
jae
add
adc
test
add
repnz
nop
cld
jae
ja
add
pop
push
push
mov
xchg
ret
lretw
add
iret
jg
xor
out
test
push
mov
nop
leave
jmp
add
add
stc
mov
push
mov
xchg
ret
pause
add
bound
mov
xchg
ret
add
lret
add
add
nop
nop
cld
jae
scas
inc
add
shr
clc
repnz
nop
cld
jae
add
jg
add
and
push
mov
xchg
ret
gs
add
xchg
testl
add
shl
pop
bound
xchg
add
pop
mov
clc
repnz
nop
cld
jae
or
inc
test
pop
mov
clc
repnz
nop
cld
jae
add
idiv
clc
repnz
nop
cld
jae
repz
jno
cmpl
push
mov
nop
leave
jmp
lret
add
mov
clc
repnz
nop
cld
jae
add
data16
mov
xchg
ret
roll
jg
aad
jl
movsb
dec
shr
push
mov
xchg
ret
add
add
movsb
clc
repnz
nop
cld
jae
sub
xlat
push
roll
lcall
popa
rolb
xchg
ret
ja
adc
add
cli
mov
push
mov
xchg
ret
xchg
add
scas
add
repz
push
push
mov
xchg
ret
mov
add
lahf
add
add
in
jne
push
mov
nop
leave
jmp
add
add
push
clc
repnz
nop
cld
jae
data16
lahf
jg
add
pop
push
mov
xchg
ret
js
adc
jl
add
pop
stos
push
mov
xchg
ret
add
dec
or
leave
dec
jl
clc
repnz
nop
cld
jae
add
leave
adc
add
clc
repnz
nop
cld
jae
in
lret
and
clc
repnz
nop
cld
jae
add
xor
ret
push
mov
nop
leave
jmp
add
add
add
xbegin
jae
adc
add
add
std
mov
push
mov
nop
leave
jmp
xchg
sub
add
in
add
pop
clc
repnz
nop
cld
jae
add
add
add
pop
lds
cltd
faddl
xchg
ret
add
xorl
xor
add
or
add
repnz
nop
cld
jae
dec
roll
mov
push
mov
xchg
ret
adc
add
mov
clc
repnz
nop
cld
jae
dec
lahf
pop
push
mov
mov
add
cs
add
add
repnz
nop
cld
jae
in
out
add
add
xchg
cmp
test
sldt
clc
repnz
nop
cld
jae
aad
data16
mov
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
add
add
adc
mov
xchg
ret
lret
add
xchg
inc
inc
push
cmpl
in
nop
leave
jmp
xlat
repz
scas
cmpl
push
mov
nop
leave
jmp
add
fstpt
xchg
in
and
mov
nop
leave
jmp
leave
add
ljmp
sarb
nop
nop
cld
jae
add
add
cli
add
mov
clc
repnz
nop
cld
jae
adc
add
aad
repz
je
js
mov
xchg
ret
gs
add
add
mov
mov
nop
leave
jmp
inc
add
add
les
rolb
mov
jle
push
mov
nop
leave
jmp
jl
dec
add
xchg
add
inc
add
push
mov
nop
leave
jmp
add
add
push
push
mov
xchg
ret
add
inc
add
int3
int3
add
dec
add
push
mov
nop
leave
jmp
cli
add
ljmp
clc
repnz
nop
cld
jae
add
sub
push
mov
add
add
mov
cmpsb
popl
aam
inc
stc
ljmp
add
dec
xchg
mov
in
add
jne
push
mov
nop
leave
jmp
add
xor
add
push
mov
nop
leave
jmp
add
lahf
data16
pop
add
mov
clc
repnz
nop
cld
jae
jl
inc
int3
add
in
les
push
mov
nop
leave
jmp
sub
add
pop
add
sbb
nop
cld
jae
mov
add
xor
add
add
add
les
jle
loop
push
mov
xchg
ret
add
push
popa
cmp
jle
push
mov
nop
leave
jmp
add
xor
test
nop
cld
jae
add
xor
inc
xor
mov
push
jmp
nop
cld
jae
lahf
cli
add
cmpsb
out
add
mov
in
nop
leave
jmp
add
pop
cs
popa
jne
insl
add
clc
repnz
nop
cld
jae
add
add
fcmovne
jae
mov
add
clc
repnz
nop
cld
jae
cs
insb
mov
clc
repnz
nop
cld
jae
jl
mov
insb
dec
push
mov
nop
leave
jmp
lret
push
xor
or
sbb
mov
xchg
ret
add
add
nop
add
add
out
inc
add
jl
sub
add
fldt
pop
add
push
mov
xchg
ret
add
sub
xor
sar
repnz
nop
cld
jae
lahf
das
out
repz
cmpsb
mov
push
clc
repnz
nop
cld
jae
xlat
in
add
inc
gs
mov
push
mov
xchg
ret
mov
add
fisttpl
hlt
std
mov
push
mov
xchg
ret
add
add
les
mov
mov
push
mov
nop
leave
jmp
roll
imul
nop
nop
cld
jae
xchg
pop
add
add
mov
jg
clc
repnz
nop
cld
jae
inc
add
mov
mov
repnz
nop
cld
jae
add
lret
in
add
sub
in
clc
jmp
add
in
add
add
xor
call
push
mov
nop
leave
jmp
lret
lret
mov
inc
sub
repnz
nop
cld
jae
lret
cmpsb
add
add
cs
insb
clc
repnz
nop
cld
jae
add
add
lahf
mov
clc
repnz
nop
cld
jae
xchg
add
fucomi
add
jle
sar
nop
nop
cld
jae
add
lahf
ljmp
jae
ljmp
add
pusha
push
mov
xchg
ret
xlat
add
add
add
xor
fisubrl
push
mov
xchg
ret
add
add
add
add
nop
nop
cld
jae
or
push
add
mov
push
mov
nop
leave
jmp
pop
ja
add
mov
pop
mov
clc
repnz
nop
cld
jae
add
mov
push
clc
repnz
nop
cld
jae
lahf
xchg
inc
lret
xchg
ja
lods
add
push
mov
xchg
ret
add
add
mov
sub
cmpw
push
mov
nop
leave
jmp
in
rol
add
nop
nop
cld
jae
add
inc
mov
lahf
roll
xchg
ret
add
add
sti
incl
add
add
mov
add
mov
push
mov
nop
leave
jmp
mov
add
int3
mov
addb
mov
add
call
in
nop
leave
jmp
cmpsb
add
xor
mov
push
mov
xchg
ret
add
add
dec
mov
add
ficoms
repnz
nop
cld
jae
hlt
add
cli
xchg
ljmp
push
mov
xchg
ret
xchg
inc
add
add
mov
xchg
ret
pop
in
adc
ljmp
movzwl
push
mov
nop
leave
jmp
add
dec
add
xor
clc
repnz
nop
cld
jae
data16
lahf
add
clc
repnz
nop
cld
jae
add
lret
in
pop
and
push
mov
xchg
ret
popl
inc
repz
add
repnz
nop
cld
jae
mov
les
repnz
nop
cld
jae
lret
add
add
add
nop
nop
cld
jae
add
xchg
add
add
daa
aam
sahf
mov
clc
repnz
nop
cld
jae
add
add
mov
js
and
push
mov
nop
leave
jmp
xor
add
add
add
clc
repnz
nop
cld
jae
ljmp
push
adc
mov
add
jbe
clc
repnz
nop
cld
jae
xor
push
push
mov
xchg
ret
add
adc
xchg
pop
add
clc
repnz
nop
cld
jae
repz
xchg
fildl
jne
push
enter
nop
leave
jmp
add
adc
jg
add
jne
clc
repnz
nop
cld
jae
or
lock
adc
repnz
nop
cld
jae
jl
push
sub
jmp
pushl
add
add
ror
add
outsl
mov
clc
repnz
nop
cld
jae
add
hlt
dec
xor
push
mov
xchg
ret
cli
add
add
add
add
xchg
movsl
xchg
push
add
mov
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
mov
xchg
ret
add
xor
add
out
ljmp
cmpsb
pop
add
push
inc
inc
lahf
xchg
add
incb
mov
nop
leave
jmp
add
int3
add
add
pop
clc
repnz
nop
cld
jae
add
adc
jmp
mov
add
xchg
scas
pop
add
repz
add
sub
clc
repnz
nop
cld
jae
xor
clc
repnz
nop
cld
jae
mov
add
lahf
xor
clc
repnz
nop
cld
jae
roll
bound
bound
aad
xchg
add
mov
mov
dec
push
clc
repnz
nop
cld
jae
add
add
je
cmp
push
mov
xchg
ret
add
iret
out
jmp
call
in
nop
leave
jmp
add
add
xlat
enter
nop
nop
cld
jae
add
int3
add
add
cs
mov
clc
repnz
nop
cld
jae
add
pop
test
add
repnz
nop
cld
jae
xlat
cs
add
in
xor
inc
clc
repnz
nop
cld
jae
scas
int3
cmpsb
add
add
lahf
xor
push
mov
xchg
ret
pop
inc
xchg
adc
xchg
add
sbb
in
inc
add
add
xchg
dec
add
test
ljmp
cld
jae
add
add
aas
lea
clc
repnz
nop
cld
jae
add
bound
mov
nop
leave
jmp
add
add
or
clc
repnz
nop
cld
jae
gs
xorl
add
mov
xor
push
mov
xchg
ret
add
hlt
inc
add
add
lods
push
push
mov
xchg
ret
pop
add
aad
add
or
in
nop
leave
jmp
add
rcll
mov
add
mov
xchg
ret
xor
add
add
notl
pop
push
push
mov
xchg
ret
add
xchg
add
cli
mov
adc
repnz
nop
cld
jae
mov
data16
inc
add
clc
repnz
nop
cld
jae
add
add
cmpsb
adcl
mov
rolb
adc
push
mov
add
add
and
add
jb
pop
add
popf
inc
or
nop
cld
jae
add
mov
jg
add
push
push
push
mov
nop
leave
jmp
xchg
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
xlat
add
mov
clc
repnz
nop
cld
jae
add
cmpsb
rolb
mov
add
push
mov
xchg
ret
add
inc
cmpsb
mov
add
iret
mov
clc
repnz
nop
cld
jae
xchg
jl
xor
test
ret
clc
repnz
nop
cld
jae
scas
iret
xchg
adc
adc
clc
repnz
nop
cld
jae
add
inc
fiadds
clc
clc
repnz
nop
cld
jae
bound
add
add
add
clc
repnz
nop
cld
jae
add
xchg
pop
add
add
add
repnz
clc
repnz
nop
cld
jae
xor
push
mov
xchg
ret
fistl
mov
das
add
nop
in
add
push
mov
xchg
ret
stos
add
ja
add
addb
dec
mov
push
mov
nop
leave
jmp
dec
jg
add
add
iret
in
jmp
push
mov
xchg
ret
in
leave
inc
add
add
aad
push
push
mov
nop
leave
jmp
inc
dec
js
add
mov
clc
repnz
nop
cld
jae
add
movsw
push
mov
clc
repnz
nop
cld
jae
inc
add
push
mov
xchg
ret
pop
pop
bound
lret
sbb
les
mov
xchg
ret
roll
adc
xor
push
mov
xchg
ret
sub
adc
call
clc
repnz
nop
cld
jae
adc
add
rep
clc
repnz
nop
cld
jae
add
xor
add
clc
repnz
nop
cld
jae
dec
pop
mov
stos
mov
adc
repnz
nop
cld
jae
lret
xchg
cs
inc
imul
adc
repnz
dec
jge
mov
add
push
clc
repnz
nop
cld
jae
add
add
inc
xlat
cmpsb
xchg
fmuls
nop
cld
jae
mov
add
push
jmp
clc
repnz
nop
cld
jae
sub
add
stos
xorl
clc
repnz
nop
cld
jae
in
jg
pop
push
mov
nop
leave
jmp
xchg
add
adc
add
add
clc
repnz
nop
cld
jae
jl
xchg
sub
repz
repnz
nop
cld
jae
add
sarl
nop
nop
cld
jae
pop
add
add
push
mov
xchg
ret
mov
cmpsb
push
pop
xchg
add
add
jmp
add
add
push
dec
mov
jns
push
mov
xchg
ret
bound
nop
add
pop
inc
xor
enter
nop
cld
jae
popl
add
add
aas
push
mov
loopne
dec
lds
sti
lds
ja
add
stc
xor
jmp
add
xor
push
add
add
xchg
add
mov
nop
leave
jmp
les
js
js
mov
clc
repnz
nop
cld
jae
data16
xchg
lret
cmpsb
pop
lea
mov
xchg
ret
add
add
jp
add
clc
repnz
nop
cld
jae
add
fstpt
fucomi
push
push
mov
xchg
ret
add
push
ja
scas
cli
add
add
in
nop
leave
jmp
leave
nop
add
pop
add
das
in
cmp
push
mov
xchg
ret
mov
add
add
mov
xchg
ret
lret
add
push
push
mov
nop
leave
jmp
mov
add
xor
addr16
mov
push
mov
nop
leave
jmp
hlt
add
add
ljmp
nop
nop
cld
jae
inc
in
adc
in
dec
jae
add
push
mov
nop
leave
jmp
in
xchg
add
mov
adc
repnz
nop
cld
jae
add
add
enter
mov
xchg
ret
add
mov
xchg
push
mov
nop
leave
jmp
xor
add
js
mov
clc
repnz
nop
cld
jae
bound
or
in
nop
leave
jmp
bound
hlt
ja
add
mov
nop
leave
jmp
mov
add
loop
mov
je
clc
repnz
nop
cld
jae
adc
add
mov
in
add
push
cs
mov
add
repnz
nop
cld
jae
ljmp
or
repnz
nop
cld
jae
mov
add
add
inc
and
clc
repnz
nop
cld
jae
int3
iret
jl
repz
repnz
nop
cld
jae
add
add
or
jmp
repnz
nop
cld
jae
add
das
in
add
inc
in
push
mov
xchg
ret
add
add
or
add
repnz
nop
cld
jae
xor
add
mov
mov
nop
leave
jmp
out
fildl
add
add
or
xor
add
push
mov
nop
leave
jmp
add
rolb
mov
mov
clc
repnz
nop
cld
jae
mov
repnz
nop
cld
jae
add
add
mov
add
and
addb
push
pop
clc
repnz
nop
cld
jae
add
add
xchg
js
ja
mov
nop
cld
jae
add
xchg
xchg
add
mov
pop
push
mov
xchg
ret
add
add
lret
jg
ret
jp
clc
push
mov
xchg
ret
gs
lahf
shll
cltd
push
push
mov
xchg
ret
inc
add
add
lea
clc
repnz
nop
cld
jae
dec
mov
add
inc
xor
clc
repnz
nop
cld
jae
hlt
inc
stos
lret
lock
push
mov
xchg
ret
add
cli
add
push
mov
nop
leave
jmp
nop
popl
inc
mov
add
mov
call
clc
repnz
nop
cld
jae
add
mov
mov
nop
cld
jae
repz
hlt
ja
add
xor
mov
clc
repnz
nop
cld
jae
cli
add
xlat
bound
mov
push
mov
xchg
ret
pop
add
lret
in
add
test
push
mov
nop
leave
jmp
add
inc
add
cli
cmpsb
adc
cmc
gs
repnz
nop
cld
jae
add
add
xorl
mov
clc
repnz
nop
cld
jae
int3
hlt
add
push
add
es
jne
lcall
add
dec
adc
xchg
leave
jg
push
mov
push
clc
repnz
nop
cld
jae
add
add
js
add
mov
clc
repnz
nop
cld
jae
mov
add
add
add
add
add
repnz
nop
cld
jae
ror
add
push
out
add
xchg
add
add
in
dec
add
clc
repnz
nop
cld
jae
add
cs
mov
inc
js
or
add
inc
dec
jmp
add
enter
push
clc
repnz
nop
cld
jae
add
ljmp
out
add
mov
add
popl
mov
inc
scas
add
cld
add
push
mov
nop
leave
jmp
aad
add
add
jmp
add
xor
mov
mov
addb
daa
pop
mov
jmp
call
inc
jl
jg
repz
add
ljmp
clc
repnz
nop
cld
jae
add
inc
pop
mov
clc
repnz
nop
cld
jae
jg
aad
repz
xchg
xchg
jl
push
clc
repnz
nop
cld
jae
add
add
lret
pusha
clc
repnz
nop
cld
jae
add
int3
add
mov
mov
push
imul
clc
repnz
nop
cld
jae
add
lock
push
imul
nop
nop
cld
jae
add
xchg
add
clc
repnz
nop
cld
jae
bound
mov
dec
push
mov
mov
dec
add
pop
incl
add
bound
cwtl
push
add
add
push
mov
xchg
ret
js
add
xlat
mov
sub
dec
add
repnz
nop
cld
jae
inc
add
add
add
mov
nop
leave
jmp
stos
push
int3
fildl
add
ja
int3
and
push
mov
nop
leave
jmp
add
add
inc
cmp
mov
xchg
ret
bound
add
add
push
mov
xchg
ret
add
add
repz
inc
das
push
mov
imul
dec
aaa
iret
add
iret
xchg
ljmp
loopne
call
in
nop
leave
jmp
add
mov
clc
repnz
nop
cld
jae
xor
add
repnz
nop
cld
jae
ja
xchg
hlt
add
js
add
mov
mov
mov
pushf
add
clc
repnz
nop
cld
jae
dec
adc
das
iret
int3
mov
mov
test
loope
clc
repnz
nop
cld
jae
jg
cli
addb
int3
je
clc
repnz
nop
cld
jae
bound
xor
cmpsb
mov
repnz
nop
cld
jae
xlat
add
add
add
clc
repnz
nop
cld
jae
inc
cmpsb
lret
add
or
mov
filds
xchg
ret
adc
add
adc
mov
jo
push
mov
nop
leave
jmp
leave
hlt
add
int3
stos
rolb
mov
clc
repnz
nop
cld
jae
add
inc
xchg
int3
ss
call
push
mov
nop
leave
jmp
push
add
add
stc
pop
clc
repnz
nop
cld
jae
hlt
or
pop
add
pop
add
push
mov
nop
leave
jmp
iret
mov
adc
add
ret
les
lea
clc
repnz
nop
cld
jae
add
pop
in
das
inc
pop
push
push
mov
nop
leave
jmp
pop
add
cmpsb
xor
ret
jno
fimuls
repnz
nop
cld
jae
add
mov
add
in
or
repz
mov
xchg
ret
aad
inc
dec
add
xchg
add
mov
push
mov
xchg
ret
inc
add
add
add
dec
push
mov
add
add
pusha
add
mov
test
jmp
add
adc
xlat
mov
mov
insl
xor
fdivrs
inc
add
and
test
jecxz
int3
popf
and
and
or
ljmp
ret
mov
mov
add
sbbl
sbb
add
leave
inc
add
mov
add
add
out
fcmovbe
add
cmp
repnz
mov
clc
dec
stc
push
add
adc
mov
test
bound
mov
add
xchg
mov
push
xor
repz
dec
fnsave
mov
rolb
mov
push
xchg
cltd
into
scas
push
xchg
mov
add
add
inc
cmpsb
lods
rcll
sbb
mov
add
sti
jle
rolb
divl
jne
adc
mov
mov
sbb
inc
add
xchg
mov
mov
bound
mov
fsubr
inc
or
js
push
aam
nop
add
pop
sub
outsb
pop
out
aam
and
mov
divl
aam
jp
aas
adc
add
mov
sub
mov
add
adc
notb
xchg
and
test
add
sahf
mov
mov
out
mov
mov
nop
add
stos
inc
mov
mov
add
mov
out
mov
repz
mov
jns
outsb
push
sbb
mov
add
addb
xchg
sbb
testl
xor
mov
mov
add
mov
mov
sub
or
pop
or
ret
bound
mov
push
jmp
mov
push
mov
mov
xor
mov
fs
mov
sub
push
jge
xor
adc
mov
imul
push
adc
sub
pushf
sub
sbb
mov
out
fldenv
mov
mov
add
cmp
push
add
push
xor
mov
add
negb
jl
popa
cmp
testb
les
or
pushf
aas
stos
pushf
fmuls
jle
sub
mov
add
in
imul
and
push
jb
mov
mov
add
out
add
insw
sbb
pop
lods
dec
and
inc
sarl
rolb
mov
push
fwait
mov
mov
push
lods
loop
mov
or
mov
std
pop
xor
enter
xchg
scas
test
fwait
pop
mov
mov
jg
add
scas
bound
mov
clc
out
jae
mov
mov
or
add
mov
add
movsb
push
jb
mov
inc
pop
push
test
add
push
cli
mov
mov
test
sub
jp
ljmp
dec
mov
pop
mulb
cmp
jg
push
rolb
mov
iret
aam
xchg
jo
mov
mov
mov
jg
aaa
sti
sbb
and
rcll
xor
mov
fmuls
pop
aaa
in
push
add
mov
sbb
add
pop
rolb
mov
inc
test
shll
lret
pop
jmp
cwtl
mov
mov
repnz
xor
mov
dec
outsb
in
and
jae
addb
lcall
mov
inc
jno
sarl
and
pop
dec
adc
adc
add
scas
dec
loopne
mov
xchg
loop
mov
jno
fs
out
jle
or
ret
lret
pushl
mov
nop
add
add
call
push
xor
mov
push
pop
xor
fidivs
pop
pop
std
orl
add
add
int3
xchg
cmp
leave
addr16
add
inc
add
mov
mov
add
add
je
fldl
mov
scas
inc
add
add
out
lods
in
rolb
mov
and
mov
and
mov
add
mov
add
push
das
inc
add
call
mov
xor
or
jb
mov
push
jecxz
dec
aad
jp
add
mov
add
stc
mov
icebp
test
adc
sub
loope
add
rolb
mov
jecxz
mov
pop
pop
xor
rolb
mov
ss
icebp
aaa
push
inc
add
or
cwtl
jns
add
aad
bound
mov
lahf
mov
pop
mov
mov
adc
ficoml
add
out
rolb
jnp
mov
push
add
scas
and
mov
les
into
jb
mov
sub
fsubrs
and
in
divb
mov
fcomip
or
push
loop
mov
add
mov
add
and
loop
mov
push
sub
adc
cmp
movb
mov
mov
add
test
test
add
and
mov
lahf
loopne
mov
dec
push
mov
mov
add
mov
call
jno
ljmp
adc
mov
mov
mov
mov
inc
add
fwait
push
push
aad
push
cld
sub
mov
add
sbb
gs
and
add
cmp
cmc
mov
ss
add
lret
iret
mov
fadd
add
les
cmp
scas
ds
mov
jnp
es
aaa
push
push
arpl
xchg
outsb
addr16
addb
mov
pop
pop
xor
mov
sbb
mov
sub
out
dec
rcl
insl
mov
sub
sub
fsubl
jnp
add
mov
inc
daa
jns
ja
iret
movsb
out
xor
iret
xor
mov
in
sub
mov
mov
or
xchg
mov
popa
push
cmp
lret
sub
add
scas
insl
jns
lods
pusha
add
mov
inc
add
fwait
and
aam
sbb
dec
dec
adc
mov
jecxz
sahf
sub
add
dec
stos
pop
pop
std
jl
les
add
add
bound
mov
or
add
mov
in
repz
mov
adc
mov
dec
movsb
mov
xor
mov
out
int
adc
mov
nop
add
push
adc
adc
and
mov
xchg
aad
outsb
mov
mov
or
fisubrs
xchg
fistpll
fnstenv
mov
je
mov
sub
sbb
ljmp
clc
mov
sbb
and
mov
and
pop
add
and
jae
cs
lret
adc
lods
xor
or
sub
mov
clc
outsb
test
mov
push
add
mov
or
repnz
mov
jb
mov
repz
mov
data16
cld
mov
cli
push
inc
add
mov
test
jmp
stos
cs
dec
xor
incb
mov
in
bound
mov
mov
mov
mov
test
or
insl
rolb
mov
stos
sbb
xor
mov
jmp
mov
aad
add
mov
add
mov
add
lret
dec
daa
js
std
cmc
leave
pop
add
cs
add
mov
repz
and
dec
and
mov
and
daa
or
rolb
mov
test
fstpl
ret
lret
mov
repz
cmc
insl
jecxz
fs
cmc
jge
push
jbe
and
dec
call
sahf
jnp
add
jns
add
add
insb
inc
fdivl
int3
mov
add
sbb
hlt
mov
add
mov
in
scas
xor
addb
or
iret
daa
es
xchg
jnp
int
cs
add
dec
push
and
push
inc
cmp
js
inc
cs
add
mov
sub
add
mov
sbb
inc
push
add
in
dec
xchg
scas
dec
and
mov
mov
int
adc
xchg
ret
mov
and
xlat
lock
inc
les
jp
fs
push
jo
mov
adc
mov
cmpsl
inc
add
pusha
add
mov
nop
add
lret
cmp
inc
stc
mov
mov
pusha
add
add
lds
mov
add
add
sbb
inc
in
aad
add
xor
mov
into
int3
in
repz
mov
cmpsl
dec
addb
cmp
add
aas
pop
test
sub
vmread
xor
sub
ja
pushf
call
mov
jg
jbe
lods
sahf
push
add
add
mov
jae
lret
out
cmp
push
bound
mov
popf
cmpsb
lods
or
rolb
mov
mov
adc
adc
movsb
xor
lahf
mov
mov
dec
mov
xor
add
add
addr16
jecxz
int
cs
fdivrp
test
xor
icebp
jmp
add
jl
fisttpl
test
mov
push
mov
mov
push
and
xor
mov
inc
aaa
hlt
leave
inc
cmp
add
ret
movsl
or
icebp
pop
push
push
jns
mov
mov
jge
xor
xor
mov
loop
mov
ret
cli
inc
cmpsb
outsl
pop
dec
push
pop
mov
add
mov
sbb
xchg
aam
mov
pop
aas
add
testl
xlat
cwtl
loopne
mov
jne
xchg
clc
insb
in
es
js
pop
fprem
int
cmp
cli
cmp
xchg
pop
xchg
ja
mov
ss
xchg
rolb
mov
add
xchg
add
mov
add
enter
mov
xor
add
out
push
ds
fs
add
rolb
pop
jnp
mov
xchg
push
jno
push
aas
call
pusha
add
mov
dec
mov
pop
add
and
mov
pop
imul
add
cmc
cmp
hlt
stos
push
mov
out
add
pop
emms
aam
add
and
mov
in
xor
mov
add
mov
dec
push
std
mov
lret
or
icebp
ljmp
lods
push
or
pop
xor
mov
xor
sub
xor
add
add
out
pushf
sbb
push
roll
push
add
inc
push
jo
mov
add
mov
mov
mov
fs
mov
les
or
dec
or
dec
iret
lods
pushf
pop
rol
stc
jae
and
scas
sti
cmpsb
mov
fbld
repnz
mov
push
and
in
sub
daa
in
aaa
and
ds
xor
sarl
inc
pusha
add
cmp
cmpsw
popa
mov
mov
cmp
and
dec
xchg
add
mov
inc
sbb
dec
add
mov
or
in
jns
ds
dec
das
fs
jnp
std
cmp
add
add
or
out
sbb
mov
imul
setae
push
jno
dec
out
push
xlat
test
mov
addb
and
and
add
push
add
mov
push
mov
enter
sub
adc
pop
sub
out
test
insb
add
mov
mov
mov
add
adc
mov
inc
mov
mov
mov
sub
shll
cld
mov
fbld
or
dec
sub
push
in
outsb
outsb
mov
rolb
mov
mov
mov
jo
mov
sub
ss
sahf
ficoms
jmp
call
dec
and
jmp
dec
lock
mov
inc
or
xor
mov
cmc
test
aam
jns
mov
mov
incb
xchg
enter
mov
mov
jl
inc
add
jl
add
loope
add
out
and
mov
pop
out
sbb
imul
js,pt
add
mov
ret
xchg
xchg
int
mov
cmc
rolb
mov
mov
mov
jg
filds
ret
test
cmpsl
cmc
mov
lret
stos
add
pop
pop
fnstsw
mov
das
mov
mov
dec
repz
ss
add
add
popa
dec
sub
gs
imul
mov
mov
pop
imul
and
mov
gs
mov
mov
test
pop
xor
sbb
inc
xor
stos
and
mov
movsb
imull
gs
movsb
mov
nop
add
imul
or
cmp
test
mov
ljmp
add
dec
nop
add
add
fadd
pushf
gs
mov
js
popa
test
add
jge
inc
movsl
fcmovnu
add
mov
mov
jae
ds
xchg
push
addr16
cmp
adc
mov
add
mov
inc
add
mov
mov
addb
cld
rolb
mov
cmp
test
out
push
and
xchg
cmp
mov
dec
sub
add
rolb
mov
das
and
sub
adc
mov
arpl
out
es
mov
inc
xor
les
ret
dec
xchg
jno
rolb
mov
xor
mov
repnz
mov
mov
popf
bound
mov
imul
add
mov
inc
lock
mov
mov
adc
mov
repnz
mov
dec
mov
nop
add
int3
adc
push
push
add
add
sbbl
mov
inc
movsl
xchg
test
cltd
dec
out
subps
add
add
scas
jo
mov
xlat
sbb
test
jecxz
adc
pop
sub
lods
cmp
cmp
pop
xchg
dec
or
movsl
js
add
cmp
hlt
loopne
mov
jl
add
cwtl
jb
mov
aas
and
ret
xchg
pop
pushf
fwait
in
xchg
add
pop
push
test
hlt
rolb
mov
add
add
add
jg
push
and
inc
mov
add
mov
mov
add
add
inc
pop
addb
mov
dec
into
xor
and
or
cmp
cmpsl
iret
pop
stc
pop
add
mov
sbb
sub
cmp
aas
jae
pop
ficomps
divb
add
pop
xchg
shr
adc
pop
leave
sbb
cwtl
fcomps
mov
sub
or
xor
mov
int
and
mov
add
add
adc
imul
movsl
sbb
fnsave
push
fildll
or
dec
mov
or
pop
shrl
idivl
add
sub
push
xor
scas
inc
add
add
add
lcall
xor
cmp
dec
push
inc
add
push
add
insl
jle
addl
mov
or
push
clc
cld
pop
dec
imul
out
lods
pop
sbb
cs
js
nop
add
mov
mov
test
mov
mov
jo
mov
fidivs
mov
cmpsb
out
jns
popf
mov
js
cld
inc
mov
mov
xchg
sub
inc
dec
inc
inc
mov
xor
out
insb
push
jae
fidivrl
push
into
in
out
xlat
and
mov
xor
add
fidivs
std
insl
dec
cli
rolb
mov
mulb
stc
push
movsl
and
mov
addb
inc
ret
adc
andl
jns
add
mov
mov
cltd
das
in
sahf
or
push
mov
xor
mov
mov
movsl
add
mov
push
xchg
ss
jp
insb
and
mov
jno
mov
add
mov
jae
mov
push
les
js
addr16
add
inc
repz
add
mov
adc
mov
sbb
pop
lret
cmp
cmp
fisttpl
add
mov
fsts
out
pop
movsb
icebp
jbe
call
dec
inc
dec
pop
call
cwtl
outsl
orl
imul
sub
jno
mov
test
ljmp
adc
mov
addr16
xchg
xor
xchg
add
mov
cmp
jbe
add
add
imul
add
sbb
lret
or
out
loope
add
add
sub
jmp
mov
mov
and
sub
add
mov
sub
inc
add
lock
sub
mov
adc
fists
out
int3
rolb
mov
fcomps
cmp
cmpsl
mov
lock
jecxz
adc
and
mov
or
and
lods
sarl
mov
or
jl
and
mov
add
adc
push
add
add
hlt
arpl
add
dec
add
mov
mov
lea
cmpsl
test
aaa
sbbl
psubusw
mov
add
and
push
out
cmp
test
add
stos
sti
mov
fists
push
fildl
mov
lea
int3
imul
dec
mov
imul
xchg
mov
mov
clc
push
hlt
ds
jne
test
add
xlat
test
add
mov
push
mov
mov
add
jbe
out
or
hlt
dec
sbb
cli
push
pop
ljmp
fwait
ss
cmp
sbb
flds
add
adc
mov
addb
adc
inc
add
pop
divl
add
mov
dec
test
enter
nop
add
add
mov
fs
insl
and
in
flds
mov
add
sub
add
add
jecxz
imul
in
es
xchg
push
sbb
dec
or
sbb
add
and
mov
int
sub
xchg
sbb
ret
mov
or
adc
mov
inc
aad
test
push
popf
movsl
int3
iret
nop
add
mov
mov
pushf
into
and
sahf
jp
pop
mov
mov
rcrl
and
jo
mov
jo
mov
add
sbb
mov
mov
mov
cmp
mov
iret
cwtl
cld
sti
inc
mov
and
push
add
push
pop
loope
test
scas
cmp
or
jbe
loop
mov
mov
add
cmc
ficoms
add
mov
mov
xchg
addb
or
xchg
inc
dec
std
aas
push
inc
leave
movsb
stos
xchg
lahf
stos
xchg
mov
rolb
mov
gs
cmp
cltd
and
mov
inc
call
xchg
sub
add
movl
test
cmp
mov
repnz
and
das
cmp
xor
add
add
pop
rolb
mov
clc
add
jae
add
add
flds
mov
iret
sbb
xor
mov
or
test
cwtl
push
outsb
sbb
icebp
push
jecxz
int3
sbb
mov
mov
mov
mov
adc
mov
rolb
data16
hlt
adc
mov
add
movsl
cmp
in
pop
mov
mov
pop
cmc
hlt
mov
mov
and
add
lds
cmp
addb
sub
xchg
aad
mov
mov
stc
aaa
pop
and
xor
mov
mov
push
cmc
jb
mov
inc
xchg
mov
mov
sub
aaa
fidivrl
or
fdivl
mov
cli
xchg
adc
cld
cltd
cltd
xchg
aas
push
add
out
mov
add
aas
push
mov
dec
movsl
jmp
add
ficoms
mov
lahf
adc
mov
mov
push
cmc
mov
lods
gs
add
fwait
and
mov
cmp
sbb
and
add
les
iret
test
xchg
pop
jae
sub
mov
add
xlat
test
pop
jl
add
repnz
pop
mov
mov
mov
sbb
insb
pop
xchg
jne
push
mov
fwait
jnp
aas
mov
xchg
pop
loopne
mov
scas
movsb
in
or
dec
jg
or
xor
mov
mov
push
mov
push
ds
or
xchg
loopne
mov
or
dec
cs
mov
push
cwtl
dec
enter
call
xor
mov
mov
je
ret
mov
sbb
pop
mov
mov
mov
sub
dec
pop
push
jb
mov
mov
xor
scas
pop
stc
addb
nop
add
add
repz
push
adc
mov
xor
jmp
or
test
int3
dec
pop
xorl
mov
jns
test
loop
mov
outsb
lock
and
push
add
call
cwtl
loope
add
mov
add
add
ret
mov
gs
out
xchg
imulb
adc
daa
push
mov
ds
mov
ljmp
insl
sarl
stos
add
fsts
add
cli
adc
mov
add
dec
adc
mov
mov
test
add
or
movl
fucomi
cmp
xlat
jns
adc
xchg
or
mov
add
cmp
add
push
pop
sbb
add
das
movb
add
orl
and
mov
enter
mov
aas
addr16
mov
xor
scas
repnz
add
cmp
add
pusha
add
sub
aad
addb
or
icebp
fidivs
mov
add
outsl
movsl
fdiv
add
mov
aas
mov
dec
stos
add
mov
add
dec
int3
pop
or
sbb
scas
in
insb
jbe
xor
mov
add
mov
movsl
mov
mov
dec
test
out
or
add
mov
push
mov
add
add
movsl
mov
mov
cmpsb
or
mov
mov
mov
je
adc
mov
pop
push
addb
rcrl
sub
stos
scas
int
cld
rcrl
xor
mov
aam
add
mov
push
das
xor
add
dec
cmpsb
mov
mov
repnz
not
add
xor
lret
loopne
mov
ss
add
stos
xlat
push
lds
loope
jg
pop
push
add
lods
add
mov
into
pop
adc
mov
mov
xchg
loop
mov
push
push
inc
cmp
add
lret
and
mov
jo
mov
dec
or
icebp
jl
je
add
add
mov
push
add
test
dec
insb
mov
jo
mov
pop
aas
xchg
mov
int3
add
mov
notl
movsl
lea
sub
add
je
mov
add
dec
adc
add
mov
pop
aaa
ljmp
pmulhuw
pop
or
add
rolb
mov
dec
cs
shr
xlat
sub
rolb
mov
add
mov
mov
pop
inc
ss
mov
in
shll
dec
scas
in
add
shrl
mov
xor
jg
jecxz
inc
mov
cmp
adc
mov
or
mov
das
cmp
cmpsb
inc
add
insb
mov
mov
xchg
mov
mov
imul
sbb
arpl
rolb
mov
ja
xor
dec
ss
call
iret
pop
insl
mov
addb
jb
mov
add
lcall
push
cmp
add
jl
jae
add
lahf
dec
cmovg
mov
add
movsl
and
mov
sub
add
inc
stos
bound
mov
stos
lahf
jp
push
in
jecxz
push
aas
call
stos
fnstsw
mov
sub
es
add
cmp
xor
mov
arpl
mov
data16
loop
mov
add
xor
mov
jae
push
mov
jge
lcall
push
add
dec
add
mov
add
pop
and
mov
inc
notb
mov
shrd
add
mov
push
dec
in
push
pop
leave
or
addl
addr16
mov
xchg
mov
mov
mov
add
mov
ss
add
pop
push
jmp
jno
cmp
xchg
rcll
pop
and
mov
inc
add
add
lret
sbb
jp
pop
sub
xchg
mov
cmpsl
xchg
jp
je
jne
add
add
movsb
pop
xlat
sub
je
mov
pop
cld
int3
xchg
sub
mov
addr16
dec
xor
fwait
mov
inc
pop
movsl
pop
mov
and
shll
test
hlt
in
push
jle
and
sbb
add
test
add
jbe
add
add
lret
mov
jp
add
jmp
scas
jbe
or
mov
addl
add
cld
icebp
xchg
add
mov
mov
dec
xor
pop
add
add
lods
pop
and
mov
hlt
xor
mov
mov
rolb
mov
mov
mov
mov
adc
or
enter
imul
mov
jb
mov
mov
xchg
mov
add
mov
add
sbb
mov
push
inc
cmpsb
mov
packsswb
scas
mov
fdivrl
pop
dec
mov
adc
mov
pop
or
mov
xchg
adc
rolb
ret
cmp
lods
das
adc
adc
test
clc
jnp
loope
cmp
mov
mov
add
mov
mov
cs
add
mov
mov
mov
in
add
jmp
add
mov
push
js
push
push
inc
add
add
mov
fs
roll
add
adc
inc
fwait
push
inc
and
add
lock
call
xchg
sahf
jmp
adc
mov
xchg
out
addb
and
pop
cld
imul
fdivs
lcall
xchg
loop,pt
mov
das
sbb
out
xlat
sub
add
mov
and
jns
add
adc
mov
movsb
div
pop
outsb
add
mov
mov
inc
jge
mov
pop
jl
popf
jne
jns
and
add
addb
jne
inc
fnsave
add
fbld
xchg
rolb
mov
add
jecxz
cmp
cmp
in
icebp
pop
iret
add
sbb
mov
push
and
mov
daa
push
lds
add
mov
mov
hlt
aam
pop
mov
jnp
dec
cld
mov
jno
sbb
mov
mov
add
dec
cwtl
sub
add
xor
jbe
mov
pop
pop
push
call
loopne
mov
dec
mov
add
mov
mov
mov
pop
mov
sub
cmpsb
sbb
mov
test
hlt
xor
in
scas
cmp
cmpsl
xor
mov
pop
in
mov
repnz
nop
add
fsubrl
mov
add
add
add
std
call
xchg
pop
push
jae
cmp
or
push
inc
cld
sub
inc
fcompl
inc
add
lock
add
dec
push
in
mov
mov
dec
adc
mov
je
movsl
sbb
scas
add
call
mov
out
add
dec
bound
mov
push
push
mov
xor
imul
push
nop
add
lock
adc
mov
std
enter
aaa
sbb
and
mov
pusha
add
sahf
mov
mov
pop
or
jl
rolb
mov
pop
mov
mov
lea
jp
bound
mov
arpl
push
or
jecxz
push
in
stos
fyl2x
pop
mov
mov
pusha
add
fisubs
fs
stos
test
in
add
push
cmpsl
inc
add
jae
out
and
js
cmp
ret
ret
add
and
mov
cld
pop
cmp
or
gs
push
push
xor
mov
mov
add
cs
adc
mov
mov
mov
push
add
pop
dec
mov
mov
add
xor
roll
mov
pop
xlat
xor
mov
and
adc
mov
add
dec
jecxz
jbe
cwtl
dec
lds
mov
loopne
mov
in
mov
std
mov
aad
sbb
pop
and
mov
pop
push
push
xor
mov
inc
add
mov
ret
lds
mov
mov
mov
xchg
cmp
or
pop
loopne
mov
scas
mov
pop
sbb
push
add
or
les
in
dec
mov
xor
mov
pop
in
jae
or
mov
mov
inc
add
or
sbb
xor
xchg
jp
sbb
xor
mov
push
ja
lahf
dec
add
mov
mov
imul
loop
mov
ja
fstl
fwait
inc
and
sarl
cmp
push
xchg
dec
cmp
add
call
xchg
stc
dec
and
add
xchg
add
nop
add
xchg
lcall
jo
mov
mov
aam
jmp
cmp
leave
jbe
test
les
hlt
mov
xor
fsubrs
out
in
dec
adc
mov
add
mov
cmpsb
dec
sub
mov
jae
fwait
mov
test
and
pop
fs
add
inc
and
loopne
mov
fdivrs
add
xor
mov
popf
push
lret
icebp
jb
mov
add
in
lahf
int
xor
xchg
sti
outsb
and
add
int3
xchg
sbb
mov
add
or
loope
inc
add
aaa
movsl
and
mov
mov
mov
mov
add
and
and
out
xchg
cli
pop
clc
lea
arpl
fsubr
scas
xlat
sub
std
into
jbe
mov
add
push
adc
imul
mov
add
add
and
add
mov
testb
mov
sbb
inc
outsl
idivb
mov
cmpsl
ja
nop
add
pop
pop
and
push
dec
sub
loopne
mov
pop
iret
popf
dec
jnp
loope
xor
popf
pop
stc
stc
outsl
fmuls
lret
fcoms
add
mov
pop
outsb
mov
rcrl
jae
jno
jno
inc
add
mov
fdivl
in
adc
mov
push
xchg
ja
inc
jno
int3
fdivrp
inc
add
add
xor
hlt
or
shll
add
ret
mov
lods
xor
out
aam
xchg
mov
loop
mov
mov
jb
mov
daa
push
scas
mov
push
push
scas
ss
mov
jno
sbb
add
xorps
add
int
add
mov
add
mov
lea
xor
mov
or
stc
cmpsl
jp
add
imul
lock
push
and
rolb
mov
dec
fsubs
jmp
add
add
dec
into
idivl
push
add
add
pop
jne
fldenv
pop
mov
push
scas
je
ljmp
add
add
jle
nop
add
add
or
ret
cli
enter
lds
aaa
xchg
into
gs
xchg
andl
mov
sub
sbb
adc
dec
in
xor
xchg
push
ja
xchg
push
filds
mov
add
hlt
sbb
push
aas
ljmp
loop
mov
fnsave
orl
mov
rolb
mov
pop
stos
pop
adc
jl
in
sbb
xor
push
jo
mov
in
add
mov
add
push
or
xchg
scas
outsb
or
bound
mov
int3
or
jg
add
mov
imul
lea
test
jb,pt
mov
aam
adc
mov
repz
fs
lcall
fdivrl
adc
mov
int
stc
adc
lahf
jmp
add
shll
notl
push
divb
mov
mov
mov
sub
cs
iret
push
out
loopne
mov
jge
cltd
aaa
outsl
gs
ja
xchg
pusha
add
xchg
imul
cmp
adc
mov
or
std
and
inc
out
mov
mov
int
inc
mov
cmpsl
arpl
rolb
mov
dec
inc
ret
push
push
and
rcrl
cmp
adc
jp,pn
mov
lret
pop
jp
jns
and
ret
add
push
cmc
iret
xor
xor
mov
or
dec
mov
fwait
xor
mov
adc
mov
jp
jl
lock
imul
lods
push
add
mov
js
add
mov
sbb
add
loopne
mov
push
push
dec
data16
xlat
lcall
sbb
add
mov
ret
aad
adc
mov
push
add
mov
mov
mov
mov
pop
push
int
test
add
add
pop
cmp
nop
add
mov
fsubs
dec
movsb
rolb
mov
mov
add
lds
mov
imul
mov
das
lock
mov
add
pop
into
outsl
mov
addb
fwait
cmp
or
insl
fdiv
add
add
in
fnsave
in
mov
xor
mov
mov
movsb
out
cltd
jne
xchg
enter
add
mov
push
push
add
or
pop
sbb
add
loopne
mov
inc
push
add
add
add
mov
mov
add
mov
mov
push
inc
push
adc
mov
mov
jae
test
ss
test
add
mov
ret
or
imul
call
add
push
in
pop
xlat
pusha
add
dec
adc
mov
sub
add
das
adcl
and
mov
cld
mov
and
mov
jge
sbb
push
add
addb
adc
mov
jo
mov
add
mov
mov
icebp
stos
mov
add
xchg
rorl
lods
nop
add
push
scas
inc
andl
xchg
mov
mov
and
dec
or
jns
dec
cmc
jg
icebp
fstl
addb
test
sbb
add
loopne
mov
mov
adc
push
outsb
shr
inc
rcll
mov
push
xchg
mov
mov
adc
add
and
mov
popf
pushf
rolb
mov
and
jae
add
cmpsl
xchg
inc
cltd
fdivs
mov
stc
inc
mov
sub
cmp
jg
aam
mov
imul
cmp
add
in
push
add
inc
add
testb
cmp
les
push
mov
add
mov
enter
scas
or
pop
mov
orl
push
ud0
mov
stos
fcoml
add
or
scas
mov
mov
test
fnsave
add
out
add
mov
xor
mov
jl
into
call
add
rolb
mov
test
adc
addb
push
xor
call
xchg
ret
mov
arpl
add
add
mov
or
mov
mov
dec
cld
lock
jne
add
mov
dec
mov
add
inc
popa
mov
insb
bound
mov
add
fildll
in
sub
std
dec
punpcklbw
mov
add
insl
sbb
add
ret
pop
pop
push
stos
loop
mov
dec
xor
rolb
mov
adc
and
mov
incb
ss
imulb
push
mov
jge
jno
and
mov
aas
xor
mov
and
mov
add
fnsave
and
mov
add
dec
cltd
out
aas
mov
add
add
mov
mov
xchg
lahf
rolb
mov
add
gs
popf
js
lret
mov
pop
je
test
xchg
mov
loopne
mov
dec
push
mov
mov
stos
rolb
mov
sbb
cmpsb
lds
jmp
in
addb
test
mov
addb
cmp
loop
mov
incl
cmp
inc
mov
xcrypt-cbc
cmpsl
aam
in
dec
daa
add
mov
add
or
cmp
lods
pop
test
jecxz
pop
and
push
rolb
add
rolb
mov
loop
mov
imul
mov
xchg
mov
scas
mov
mov
mov
movsb
popa
xor
mov
cltd
outsl
out
jg
fdivs
add
mov
or
mov
loop
mov
cmc
push
jae
add
add
dec
out
jl
mov
fsts
push
aaa
sbb
sub
stos
cmp
xchg
add
mov
pop
out
movsl
icebp
outsb
xchg
mov
imul
and
stc
jmp
test
movsb
enter
rolb
mov
lcall
fwait
xor
mov
adc
mov
les
pop
sbb
sbb
sbb
jnp
nop
add
mov
sti
push
mov
js
dec
mov
mov
push
aad
sbb
bound
mov
add
add
adc
in
xchg
dec
lret
rolb
js
mov
int
add
mov
pop
adc
sahf
cmc
pop
and
mov
push
fidivs
or
jp
or
or
adc
mov
sbb
mov
mov
pop
ljmp
xlat
out
pop
jmp
test
jle
mov
in
lea
xor
mov
pusha
add
outsl
out
add
jns
mov
ret
push
and
xor
jno
inc
add
or
add
js
add
add
cmpsl
out
shrl
cli
out
mov
arpl
xor
mov
cmp
mov
jg
or
mov
mov
add
add
icebp
popf
inc
mov
mov
mov
push
or
mov
scas
in
inc
fs
xchg
or
add
mov
fidivrs
dec
popf
jbe
fdivrl
mov
add
mov
lret
adc
mov
sbb
add
adc
jecxz
call
popl
inc
mov
fisubrl
mov
mov
lods
pop
sbb
pop
outsl
push
cs
fwait
or
push
push
adc
stos
mov
in
lods
xor
mov
xchg
add
add
push
xor
push
add
jmp
push
stc
lret
into
je
adc
pop
mov
push
pusha
add
mov
jle
dec
push
add
xor
clc
xchg
aas
cmpsb
cli
mov
inc
adc
fisubs
push
out
cmp
or
rolb
test
loope
iret
dec
or
mov
pop
and
jno
add
fwait
mov
jl
mov
mov
iret
jmp
mov
pop
js
in
bound
mov
fdivs
jno
fidivrl
sub
les
pop
or
and
xchg
add
mov
sarl
lret
pop
mov
xor
mov
ja
pop
popf
sub
push
jnp
movsl
push
adc
mov
in
cltd
sbb
mov
mov
add
mov
cmp
in
fnstenv
shrl
mov
dec
lock
repz
push
cwtl
clc
sub
jne
xchg
pop
pushf
mov
loop
mov
mov
loopne
mov
pop
loope
push
loop
mov
cmpsb
das
push
repnz
mov
mov
and
mov
add
leave
cltd
aaa
xchg
dec
sbb
mov
repnz
stc
fwait
imull
into
inc
movb
sub
lcall
aad
xchg
std
cmp
and
mov
add
fwait
jo
mov
in
dec
rolb
mov
cmp
sub
mov
add
sbb
es
loop
mov
clc
int3
and
xor
mov
add
fisubrl
pushf
mov
mov
sub
cli
std
out
cmc
jmp
sbb
addb
enter
add
fwait
loop
mov
push
int
shll
mov
rorl
sub
pop
xchg
imul
mov
sbb
add
mov
test
test
mov
mov
add
mov
mov
sub
mov
test
loopne
mov
add
test
jmp
roll
mov
and
aad
add
add
xlat
dec
inc
add
jb
mov
xchg
enter
fldenv
inc
std
ljmp
repnz
dec
jmp
mov
xor
mov
addr16
jecxz
add
cwtl
bound
mov
movsl
fs
add
xchg
insb
pop
inc
add
mov
or
add
add
push
mul
sub
add
mov
adc
jns
pop
cmc
test
mov
movsb
adc
xor
jmp
leave
popa
aaa
out
add
push
and
mov
inc
addb
dec
lahf
imul
adc
mov
mov
add
inc
sbb
cltd
fdivrs
std
push
scas
sbb
mov
inc
nop
add
jb
mov
and
mov
add
popa
mul
sbb
mov
sub
push
xor
sub
fisubrl
add
fistl
add
testb
add
mov
ljmp
aam
lcall
mov
jae
xchg
sub
ja
arpl
or
sti
fucomi
jmp
and
lahf
lret
add
inc
xchg
sub
mov
lea
pop
movsl
gs
mov
mov
out
scas
inc
fnstsw
ret
into
iret
fistpll
mov
add
adc
mov
movsb
inc
dec
cmp
jmp
add
cld
and
mov
mov
call
clc
sub
add
bndstx
int
fimuls
add
cmp
dec
loopne
mov
or
add
or
and
mov
sbb
add
popf
inc
mov
add
mov
mov
out
std
aad
add
dec
push
add
mov
lods
mov
int3
push
add
pop
mov
fcomps
xchg
hlt
cltd
xor
lds
das
lea
mov
popa
rcr
add
loope
sub
rolb
mov
mov
mov
mov
fcom
jno
dec
xor
mov
add
lahf
adc
insb
mov
mov
add
mov
push
mov
mov
add
sbb
mov
xchg
enter
out
xchg
cmp
jns
add
sub
sub
sbb
mov
jns
or
cmp
sahf
out
popa
pushf
dec
adc
push
jb
mov
lea
jge
sub
jmp
out
mov
push
pop
mov
je
fnstenv
add
inc
adc
pop
rolb
addr16
arpl
pop
aaa
push
pop
outsb
cmp
fucomi
jno
sahf
pushf
sbb
mov
rcrl
cmp
add
add
sub
in
push
adc
jecxz
cmpsl
jecxz
dec
ret
adc
mov
cltd
push
xchg
or
fistpl
inc
daa
xchg
addr16
push
inc
icebp
mov
add
mov
xor
cmpsl
jmp
cs
scas
call
pop
adc
lcall
roll
xchg
adc
sbb
push
iret
mov
in
pop
lds
fisubl
out
jp
loope
add
add
fadd
leave
or
jns
call
xlat
or
xchg
add
mov
add
mov
cmp
lahf
or
xor
out
fmull
push
add
jnp
cmpsl
adc
mov
add
push
add
cmp
adc
push
add
mov
aad
lock
xor
mov
add
rolb
mov
mov
mov
in
and
mov
enter
mov
add
ja
and
mov
add
jge
das
push
push
add
rolb
je
mov
mov
inc
jns
xchg
add
push
push
lret
jno
mov
popa
ret
pop
ret
xchg
xchg
repz
out
or
add
mov
add
addb
test
xchg
mov
mov
pusha
add
mov
pushf
mov
test
lret
pop
pushf
add
xor
fcoms
fwait
mov
dec
push
fs
cwtl
insl
push
rorl
js
in
cmp
sahf
in
push
sbb
add
mov
stos
adc
jmp
push
addb
jmp
or
xor
rolb
mov
pop
jno
sbb
lods
mov
xchg
mov
sub
cmpsb
lods
cmp
repnz
cmc
and
pop
mov
mov
push
adc
ret
pop
inc
outsl
and
mov
mov
cltd
jge
add
xchg
xchg
insl
xchg
xchg
lcall
cwtl
push
add
mov
mov
mov
addr16
incb
mov
mov
add
addb
add
push
add
sbb
fwait
jno
das
cmc
adc
xor
mov
cmpsl
aam
fwait
or
mov
addr16
out
mov
cltd
push
jno
sub
in
cmp
stos
and
inc
add
mov
es
loopne
mov
inc
jl
add
daa
mov
popa
pop
xchg
and
mov
xchg
cld
std
xor
pop
mov
push
repz
inc
rolb
mov
or
bound
mov
push
add
fisttps
loope
or
add
add
cmp
xor
mov
add
or
rolb
mov
pop
cmpsb
pop
test
out
loopne
mov
add
mov
add
add
and
mov
jno
mov
jae
add
add
cmp
clc
popf
jmp
lahf
jl
mov
mov
addb
push
add
lcall
fmuls
mov
vpsubusb
or
lds
mov
mov
insb
and
add
add
or
int3
lods
mov
ljmp
push
cltd
push
pusha
add
aas
and
xchg
lods
js
scas
cmp
push
movsl
test
adc
mov
sbb
xlat
les
add
mov
jp
rol
mov
mov
bound
mov
gs
add
push
dec
clc
push
cmp
aaa
push
add
sub
cmpsb
dec
cwtl
ret
push
jnp
mov
add
mov
xor
mov
lahf
sbb
sub
movsb
mov
fwait
adc
add
mov
xlat
and
fnstsw
jne
repz
mov
sub
flds
jecxz
pop
cld
inc
mov
xor
mov
ret
jmp
mov
cli
inc
add
or
add
mov
bt
imul
jmp
add
mov
into
pop
push
movsb
fildll
imul
fwait
aas
imul
add
push
into
lea
daa
jo
mov
jb
mov
xchg
add
mov
mov
mov
movb
add
dec
xchg
add
loop
mov
rolb
mov
loop
mov
jmp
sahf
insb
cmp
pushf
push
sub
add
cmp
mov
jnp
ljmp
cli
imul
mov
fadds
jne
add
sbb
popf
test
add
inc
push
push
xchg
pusha
add
mov
dec
icebp
mov
and
mov
mov
jmp
pop
iret
xchg
xchg
nop
add
aas
xchg
addr16
add
mov
movsb
push
popa
mov
cmc
lret
dec
shll
mov
lods
mov
xor
jae,pt
xchg
dec
movsl
xor
mov
cmp
cmp
mov
mov
test
add
pop
enter
mov
mov
mov
out
xorl
popa
mov
hlt
jb
mov
mov
loope
mov
pop
pop
and
jp
and
add
mov
mov
mov
add
or
int
push
adc
imul
and
ret
test
rolb
mov
fsubrl
pop
int
mov
gs
icebp
lcall
add
je
inc
add
push
loop
mov
gs
rcrl
add
out
movsl
xchg
add
mov
scas
sub
jmp
ja
sbb
add
mov
test
sub
mov
sbb
add
addb
sub
mov
mov
mov
jbe
in
xchg
sahf
cmp
xchg
add
add
mov
rolb
mov
or
cmp
lods
out
mov
pop
cld
push
popf
lds
pop
rolb
sub
in
add
cltd
jno
hlt
in
push
xchg
dec
js
in
daa
mov
sub
xor
mov
mov
repz
aaa
fdivrs
cmp
adc
mov
aam
xor
adc
mov
cmp
xchg
adc
lret
test
mov
and
pop
icebp
fs
adc
idiv
lock
mov
pop
mov
movsb
sbb
mov
addb
mov
mov
mov
mov
add
es
nop
add
fsubrl
test
loop
mov
mov
or
call
push
pop
pop
fisubrl
and
mov
mov
add
push
adc
out
and
add
jno
push
pop
addb
mov
aaa
outsl
lahf
pop
xchg
mov
mov
ds
pusha
add
clc
jne
loop
mov
add
dec
dec
bound
mov
mov
add
jmp
add
out
add
add
sub
add
sub
cld
hlt
mov
mov
xchg
mov
add
bound
mov
mov
fnstcw
ja
scas
lret
xor
out
int3
jp
js
ja
mov
mov
loope
add
add
btr
add
push
inc
iret
add
sub
test
clc
sub
sahf
lahf
outsl
inc
push
push
int3
adc
dec
icebp
xor
mov
add
adc
add
test
fsubrp
lea
sti
int3
fmuls
pop
lret
sub
les
mov
or
decb
adc
mov
jbe
mov
addb
orl
dec
fildl
and
mov
movsb
cmp
mov
mov
adc
mov
add
addb
pop
and
cmp
leave
xor
mov
aaa
popa
mov
int
add
jp
js
mov
jmp
mov
mov
ud1
add
aaa
add
movsb
inc
pushf
lock
sbb
xchg
add
cld
adc
xor
rolb
mov
popa
dec
pop
jns
addb
cmp
push
sbb
xor
mov
pextrw
mov
cltd
inc
dec
inc
push
int3
fstps
add
fdivrl
and
mov
mov
mov
jb
mov
dec
xchg
push
xchg
add
mov
inc
pop
dec
jno
fdivl
fsin
jns
xchg
ret
stos
add
push
inc
inc
push
pop
fldcw
xor
lahf
je
int3
xchg
pushf
loope
and
add
and
mov
outsl
mov
mov
mov
lret
mov
out
add
push
push
out
cmp
in
mov
dec
or
leave
rolb
mov
adc
mov
fcomip
add
mov
loopne
mov
mov
cld
out
mov
mov
aam
mov
mov
stos
gs
loop
mov
pop
mov
movsl
fldl
add
mov
pop
push
aam
xchg
sub
mov
jecxz
cpuid
add
xor
stos
inc
sub
mov
add
fisubrs
scas
sub
xor
mov
push
and
mov
popf
pop
xor
std
adcl
cli
cmp
mov
in
jecxz
mov
mov
add
stos
jne
sub
rol
xchg
add
mov
ss
push
data16
sbb
cmp
mov
out
sub
mov
mov
mov
enter
or
xor
xor
dec
mov
dec
push
mov
mov
xchg
sbb
loope
data16
mov
add
addr16
mov
lcall
push
add
mov
mov
sahf
xlat
inc
jmp
movsb
outsl
push
add
xchg
rolb
rolb
mov
imul
mov
fildl
pop
mov
mov
sti
dec
mov
inc
add
aas
ja
arpl
xchg
pop
jb
mov
cwtl
daa
pop
jno
inc
xchg
lds
sub
fmul
insl
sub
dec
cmp
in
jns
roll
mov
mov
fistpll
enter
mov
pop
in
sub
stc
rorl
push
lret
sahf
out
outsl
cmc
push
dec
dec
sbb
add
mov
mov
mov
mov
cli
jb
mov
mov
add
into
mov
loop
mov
and
mov
data16
in
push
adc
into
test
cltd
sbb
add
lods
xorl
ret
shrl
mov
mov
add
inc
add
mov
xchg
dec
lea
movsb
sahf
push
sti
aas
pop
call
add
fisttps
sub
cmpsl
inc
int
popa
cmp
xchg
push
add
add
jno
mov
insl
adc
int3
add
lret
lret
sbb
in
call
mov
mov
scas
add
push
adc
jno
outsl
mov
mov
out
add
mov
mov
ljmp
int
xor
mov
mov
xor
or
inc
jp
in
add
mov
mov
bound
mov
into
pop
mov
adc
jge
pusha
add
js
loop
mov
xor
incb
popf
jno
fisubrl
or
cmp
or
mov
add
adc
jo
mov
add
jo
mov
add
pop
int
in
rcr
xlat
fnstenv
mov
mov
inc
add
inc
sti
xor
das
mov
add
inc
mov
xchg
ja
cmp
cmp
mov
sub
inc
jmp
mov
mov
mov
mov
xchg
mov
inc
add
mov
add
jo
mov
mov
xchg
mov
mov
jae
add
repnz
add
stos
push
and
jbe
sub
cli
cmp
fmul
cmp
cltd
pop
lds
and
loopne
mov
mov
addb
rolb
mov
sahf
outsb
es
int
mov
ljmp
sbb
sub
pop
and
mov
mov
jecxz
fcoml
mov
subl
ret
add
xor
mov
bound
mov
mov
push
inc
add
aad
lods
aad
into
xchg
movb
mov
lahf
aas
inc
add
jno,pn
or
orl
cmp
cmp
imul
jne
pop
sub
add
add
lods
mov
add
scas
lods
xor
mov
add
mov
inc
mov
leave
loop
mov
roll
adc
stos
mov
rolb
mov
sub
inc
add
dec
sbb
jmp
cwtl
inc
test
sbb
add
inc
sbb
dec
push
xchg
imul
js
rcr
add
rolb
mov
data16
mov
ret
aam
pop
jmp
add
aas
sub
lea
add
fucomi
xchg
inc
imul
jle
rolb
loop
mov
fsubs
add
inc
in
cmp
add
add
or
inc
add
loop
mov
pushf
dec
inc
add
xor
add
mov
movsl
lock
mov
add
mov
add
add
add
std
in
add
and
imul
mov
adc
fidivs
mov
xchg
call
out
and
mov
sbb
addb
enter
mov
sahf
push
test
outsb
jge
add
add
mov
mov
xor
frstpm(287
enter
adc
mov
and
mov
sahf
pop
int
movsbl
add
rolb
pushf
scas
insl
adc
push
inc
add
ret
loopne
mov
mov
imul
pop
fucomi
repnz
mov
or
pop
xchg
jb
mov
mov
mov
mov
add
mov
and
fnstenv
insl
sbb
pop
xor
mov
dec
test
test
pop
popf
add
mov
lret
lret
movsl
stc
test
mov
mov
mov
add
and
mov
mov
in
hlt
inc
inc
add
add
or
mov
add
rolb
mov
cmp
mov
and
lcall
mov
outsb
or
pop
add
mov
add
testl
hlt
aad
or
sub
pop
inc
jl
int
or
mov
pop
xor
out
mov
mov
push
add
add
scas
sbb
aad
arpl
arpl
push
cmpsl
dec
sbb
mov
jnp
repnz
aaa
insl
or
aas
addb
test
add
sub
xor
mov
xor
mov
xchg
cmp
mov
jl
filds
mov
pop
push
je
adcl
out
jno
add
push
iret
fs
mov
cmpsl
jnp
sbb
mov
add
add
shll
add
push
test
fisttpl
pop
cmpsb
outsb
lods
mov
add
add
call
cli
or
sbb
aam
data16
push
push
jle
push
repnz
insl
daa
notb
sahf
leave
test
mov
mov
es
out
sbb
cltd
addb
aaa
inc
cli
and
add
scas
add
mov
and
add
push
dec
and
aam
add
inc
pusha
add
mov
nop
add
rcll
jge
repz
mov
cmc
movsl
rcll
mov
jge
mov
mov
bound
mov
xor
mov
addb
push
cmp
push
aad
aam
add
add
mov
in
mov
mov
ficomps
mov
sub
sbb
push
adc
dec
or
test
sub
hlt
scas
mov
mov
jmp
popa
fnsave
mov
cli
mov
popf
aas
jle
std
and
mov
inc
dec
ljmp
mov
cwtl
sbb
add
add
dec
add
ret
subl
cmp
iret
idivl
in
xchg
xor
mov
add
mov
rol
jae
xchg
mov
inc
add
jb
mov
mov
mov
and
pop
bound
mov
add
push
rolb
dec
jns
add
bound
mov
add
dec
cmp
loope
lds
inc
cmp
test
pop
sub
add
pusha
add
test
outsb
loope
cmp
mov
add
jecxz
mov
mov
mov
test
popa
xchg
test
out
sti
mull
dec
xor
mov
add
mov
add
mov
mov
or
push
xor
mov
scas
dec
jo
mov
in
or
stos
jmp
cmc
mov
pop
cmc
pop
nop
add
fmuls
dec
js
in
int
add
push
add
cltd
stos
xchg
and
mov
rorl
fbstp
mov
add
nop
add
mov
lock
add
incl
iret
sbb
out
in
js
cmp
jae
add
jnp
pop
rolb
or
dec
xlat
dec
mov
add
ljmp
out
jle
movsb
add
mov
adcl
test
add
outsb
jns
pop
jae
add
push
ja
sub
adc
test
push
scas
mov
pop
push
outsl
loop
mov
add
cld
sahf
dec
sub
jns
repnz
lock
dec
mov
pop
loop
mov
add
lcall
les
testl
jl
cmp
mov
lret
movsb
fisttpll
in
mov
cmpsl
xchg
in
xor
mov
sub
mov
mov
and
mov
xchg
dec
cmpsl
push
andl
rorl
cli
pusha
add
rolb
mov
test
dec
stos
adc
mov
popa
jp
cmp
sbb
mov
mov
stc
mov
or
jmp
or
add
jg
add
add
pusha
add
add
adc
adc
into
test
mov
jnp
ret
movd
mov
push
or
test
cltd
das
mov
stc
repnz
lea
jbe
pop
fbstp
jb
mov
push
add
sub
xor
mov
fbld
test
inc
cmp
mov
cli
icebp
aam
lret
mov
lahf
dec
repnz
mov
fildll
jns
mov
mov
xchg
fidivrl
stos
inc
add
fiaddl
pop
sub
cmp
gs
les
pop
mov
jns
fstps
adc
push
pop
in
cltd
add
add
add
es
scas
xor
mov
mov
mov
pushf
inc
cli
mov
pushf
pushf
xlat
inc
add
add
js
fadds
mov
cmp
push
pop
push
call
scas
outsl
mov
or
and
popa
loope
stos
jg
das
dec
xchg
jge
add
bound
mov
mov
push
adc
inc
pop
and
sub
mov
jmp
sti
jno
clc
imul
dec
or
out
sti
out
or
mov
outsb
adc
mov
add
xor
or
add
pop
mov
rcr
or
push
mov
add
sub
xchg
sbb
dec
out
jns
test
test
add
add
dec
dec
jle
filds
rolb
outsl
or
dec
cmp
push
xor
mov
cmp
pushf
jle
inc
lds
add
cli
aaa
inc
mov
pop
rolb
mov
mov
mov
dec
cli
push
push
cmp
fs
in
ljmp
cmp
int3
jnp
rcll
add
aad
add
mov
xchg
add
mov
scas
lods
scas
dec
test
adc
mov
nop
add
xor
pop
pop
sub
mov
lds
ds
pop
repz
cmp
mov
mov
movsb
pop
cmpsb
pushf
or
ljmp
cmp
pop
jp
in
nop
add
mov
lods
insl
dec
je
testl
mov
mov
mov
cmpsb
sub
mov
lcall
jno
int3
lcall
xor
inc
inc
in
dec
das
ss
sub
dec
fcompl
in
aad
push
inc
ficoml
add
push
int
or
pop
mov
je
into
cltd
mov
lds
mov
icebp
mull
ss
inc
js
das
mov
mov
xchg
shrl
nop
add
mov
cwtl
cmpsl
js
out
xor
add
inc
aas
outsb
pop
aad
jo
mov
mov
fmuls
js
loope
sub
loope
jo
mov
mov
cmp
add
mov
push
mov
mov
inc
mov
mov
pop
xor
pop
and
mov
aas
add
jmp
fwait
push
inc
add
fs
pop
movsb
add
mov
xchg
mov
inc
add
shl
cmp
add
lea
push
jge
dec
jbe
div
pop
mov
std
jae
jg
add
xchg
cmpl
sbb
add
mov
add
mov
or
lcall
in
add
jle
mov
icebp
cli
dec
dec
das
stos
iret
mov
mov
arpl
push
add
add
add
pushf
sub
leave
out
rolb
out
adc
jge
add
das
jecxz
sbb
mov
add
and
sub
add
in
loope
aas
fadd
or
xchg
lods
sbb
insb
mov
sub
lods
data16
xor
add
fs
decl
and
add
movsb
add
add
scas
jge
mov
in
js
add
mov
cmp
repnz
sbb
lods
inc
jecxz
sbb
dec
push
sub
xchg
push
es
add
add
lahf
adc
adc
sbb
cmc
stc
xor
out
push
mov
sub
mov
mov
mov
mov
mov
dec
and
dec
pop
pop
mov
outsb
cmp
movsb
loope
movsb
xchg
add
std
jge
sbb
adc
mov
mov
insb
lahf
mov
mov
add
mov
add
movsl
fcmovne
ljmp
mov
mov
test
cmp
cmp
js
enter
mov
add
mov
fldcw
rcrl
out
xor
mov
sbb
fs
add
mov
mov
insb
pusha
add
mov
xchg
pop
and
mov
mov
dec
jmp
outsb
jo
mov
mov
sbb
ret
mov
mov
mov
cmp
add
outsl
aas
les
out
cmc
mov
push
add
sti
mov
std
xchg
mov
shl
adc
mov
mov
loop
mov
mov
add
stos
inc
loop
mov
mov
js
cltd
mov
add
mov
cld
in
into
enter
outsl
fmuls
loopne
mov
movsb
sbb
mov
add
repnz
out
lods
mov
adc
andl
mov
test
jecxz
jl
adc
mov
mov
adc
mov
push
aas
popa
and
add
push
add
int3
lret
mov
rolb
jb
mov
cli
jo
mov
pop
aam
push
add
add
add
xchg
xor
mov
xchg
jecxz
js
lods
push
cmovge
add
mov
jl
jg
cmp
std
push
std
inc
add
mov
lods
xchg
add
and
pop
fldcw
dec
xor
pop
pop
push
testb
push
psrad
mov
or
add
add
dec
lahf
fs
add
xor
xchg
imul
add
mov
rolb
scas
xchg
fdivr
lret
pop
inc
add
add
xchg
push
jbe
fidivs
leave
jbe
pop
cmp
push
xchg
fsubrl
fadds
mov
add
mov
mov
mov
in
push
sbb
add
mov
mov
pop
add
add
ss
lock
xchg
inc
add
add
imul
mov
mov
in
push
jb
mov
add
cmpsl
sub
rolb
sub
lcall
lds
call
mov
lahf
pop
jmp
mov
testb
cmpsb
jnp
add
ret
adc
add
in
xor
mov
add
add
dec
mov
jo
mov
mov
sub
test
inc
ret
test
add
rolb
mov
scas
rclw
movsb
push
mov
xlat
mov
lock
mov
or
fidivrl
movsl
push
adc
cmp
add
and
jae
mov
xchg
icebp
pop
js
idiv
outsb
adc
xchg
add
jmp
push
mov
mov
repz
lock
add
leave
adc
mov
lods
movq
mov
add
add
add
adc
mov
fsubr
sahf
push
not
outsl
pop
stos
hlt
fsubrl
mov
or
nop
add
out
inc
xchg
and
add
stos
mov
lock
fstpt
fdivs
mov
add
mov
and
inc
fisubrl
xor
jmp
stos
fs
dec
xchg
push
addr16
nop
add
add
mov
pop
push
push
sub
push
insl
and
add
call
rolb
mov
mov
mov
ret
leave
adc
mov
jl
outsl
dec
lods
and
repz
call
lret
ss
mov
mov
add
pop
xor
mov
and
faddl
mov
inc
add
inc
aas
loopne
mov
push
add
or
je
rolb
mov
mov
das
lods
repz
mov
jne
inc
adc
clc
push
insl
jae
add
or
loope
fimuls
into
cli
or
inc
sbb
mov
ljmp
cs
lahf
xor
mov
or
fmulp
xor
mov
scas
mov
mov
add
mov
dec
cmpsl
jno
clc
lahf
inc
mov
das
xchg
testl
push
or
xchg
jl
jp
add
push
mov
sbb
add
add
push
cmpsl
push
add
adc
inc
imul
mov
push
fbld
sbb
jp
xchg
rolb
mov
jle
dec
adc
mov
push
mov
mov
push
adc
or
or
enter
cmp
inc
add
int
rolb
mov
pop
outsb
xchg
add
into
fwait
mov
add
mov
cli
enter
fcmovnb
mov
mov
xchg
mov
mov
or
xchg
pop
push
cwtl
inc
push
add
push
std
push
loop
mov
dec
pop
pop
addb
push
cmp
int3
jo
mov
add
addb
add
mov
mov
mov
pushf
imull
addb
or
mov
add
mov
fmuls
lahf
xchg
out
push
int
inc
pop
jns
dec
sub
js
add
add
mov
mov
jge
add
lock
shll
fiaddl
ret
jmp
add
add
add
sbb
scas
xchg
popf
fxch
scas
mov
mov
mov
aad
pusha
add
mov
test
cmp
cmpsb
xlat
popf
cs
cmp
xor
jo
mov
fwait
pop
jle
pop
imul
add
mov
dec
ss
jnp
mov
add
sub
xchg
ds
loope
add
pusha
add
mov
addb
in
addb
rolb
mov
jmp
mov
add
xchg
jbe
mov
loopne
mov
mov
jo
mov
imul
push
push
mov
add
cltd
jp
add
cmp
or
sub
fnstsw
xor
mov
mov
int
add
mov
mov
pop
pop
ret
insb
push
add
aam
das
pop
loope
add
xchg
xlat
jmp
mov
mov
push
addb
jle
cmpsb
insb
push
ret
shrl
mov
mov
inc
pop
js
call
enter
mov
mov
mov
inc
loopne
mov
pop
xor
mov
mov
adc
dec
cmpsl
add
sub
add
adc
stos
sbb
xchg
dec
iret
lods
add
mov
jmp
mov
cmp
lock
mov
jl
or
add
push
mov
mov
add
inc
add
mov
fmuls
mov
loop
mov
pop
mov
popf
insl
dec
add
clc
sub
gs
ljmp
add
xchg
mov
dec
push
imul
push
ret
add
mov
lahf
addb
or
lcall
add
push
mov
sbb
lds
add
pop
subl
mov
mov
rolb
mov
rolb
mov
add
call
and
push
add
mov
rolb
mov
add
mov
or
push
add
and
jbe
jo
mov
inc
test
test
add
sbb
iret
mov
cwtl
fiadds
nop
add
mov
or
mov
mov
mov
jecxz
add
sbb
add
mov
fwait
or
add
push
mov
pop
rolb
mov
insb
addb
pusha
add
jb
mov
adc
dec
imul
cmp
repnz
and
repnz
add
jmp
mov
mov
cltd
xchg
loope
add
mov
repnz
mov
mov
push
mov
mov
leave
loopne
mov
jns
add
fisubrs
push
sahf
mov
push
lret
mov
arpl
or
add
inc
cltd
lret
inc
hlt
fldt
lock
mov
sub
add
lea
add
add
ja
popa
xchg
addb
jne
in
les
mov
clc
lret
mov
mov
out
add
add
lret
mov
mov
aaa
ret
inc
mov
push
jae
mov
mov
mov
xchg
cld
push
mov
mov
aad
add
push
add
insl
ja
mov
add
ja
and
add
int3
xchg
push
out
push
mov
incl
adc
adc
test
ret
cmc
mov
mov
insl
loopne
mov
gs
and
mov
or
mov
sbb
mov
pop
pop
sub
mov
add
mov
inc
lret
xchg
and
ja
in
stc
ret
je
dec
dec
add
push
add
iret
int3
mov
test
add
sub
pop
jmp
mov
std
cmp
add
xor
mov
mov
insl
sbb
push
stos
push
pop
mull
bound
mov
bound
mov
lock
add
pop
pop
inc
xchg
sbb
pop
call
mov
mov
sbb
aaa
and
stos
or
add
cld
insb
dec
scas
adc
mov
ret
test
push
mov
mov
mov
pop
xchg
imul
loopne
mov
add
and
add
pop
aam
jg
out
xchg
dec
jecxz
pop
cli
scas
push
xor
fsts
pop
addb
sahf
add
add
aad
and
mov
add
mov
out
cmp
dec
add
insb
mov
mov
imul
stos
pop
xor
mov
dec
adc
push
je
repz
mov
add
mov
sbb
add
add
aam
xchg
xchg
jp
lcall
test
or
mov
negl
icebp
add
rolb
loop
mov
inc
mov
sbb
fidivrs
add
add
add
mov
add
in
test
add
clc
push
add
push
and
mov
add
xchg
shll
pop
or
add
rolb
mov
loope
cmpsb
loope
add
xor
mov
lods
leave
mull
jmp
test
mov
add
mov
add
sbb
mov
in
outsb
daa
push
pop
js
cmp
pop
xchg
sahf
mov
and
mov
bound
mov
outsl
cmp
jb
mov
add
mov
jle
lock
ja
icebp
mov
push
add
mov
rolb
mov
daa
lcall
and
cmp
xchg
sub
lods
jb
mov
fisttpll
pop
jmp
mov
pop
pop
aam
lahf
mov
add
test
movsb
pop
xchg
add
xor
dec
push
xchg
add
pop
daa
sti
mov
pop
sbb
add
inc
inc
xchg
pop
dec
ret
and
mov
jbe
lds
mov
lahf
lret
rolb
mov
mov
add
add
ds
pop
push
jmp
add
rolb
mov
pop
dec
xchg
into
addb
call
sbb
or
mov
jge
pop
jns
pop
arpl
add
or
mov
add
inc
out
push
pop
loope
and
mov
aas
push
mov
add
mov
and
cmp
mov
add
inc
inc
mov
push
add
add
xlat
jo
mov
jmp
mov
lock
mov
or
cmpsl
pop
into
push
ret
pop
or
mov
rolb
mov
push
repnz
sub
out
bound
mov
je
je
mov
shll
mov
cli
fnsave
es
sub
push
fsubs
sbb
jp
vmptrld
arpl
xor
xchg
std
sahf
sti
lods
ret
add
mov
add
mov
mov
scas
xor
mov
pslld
mov
test
add
test
push
ljmp
fsubrs
fsubrs
sahf
call
fninit
and
mov
jne
add
add
aas
hlt
addb
ret
lock
ss
jbe
inc
add
dec
mov
add
adc
fidivl
push
cmp
test
push
stos
jmp
mov
push
add
dec
pop
sub
mov
jecxz
add
sbb
arpl
icebp
loopne
mov
pop
out
in
mov
ret
pushf
add
mov
sbb
clc
mov
into
push
push
jno
roll
rolb
cs
sub
xchg
xor
mov
mov
adc
in
jmp
ficompl
add
lods
cmp
sbb
add
mov
push
addb
sahf
mov
mov
add
pop
mov
add
mov
jb
mov
adc
mov
and
fwait
xor
cmp
in
xor
sbb
dec
into
dec
addb
jl
mov
addb
outsl
or
add
out
and
dec
mov
mov
das
jne
add
sahf
adc
mov
jecxz
add
xchg
loopne
mov
mov
add
rorl
mov
mov
mov
mov
fwait
lret
fstl
lock
imul
inc
mov
jl
clc
lahf
addb
int3
out
mov
jns
mov
out
push
mov
lret
aaa
sti
movb
je
add
repnz
cs
add
outsl
paddw
add
mov
in
add
push
jecxz
sub
and
mov
imul
cld
fwait
out
divb
pusha
add
sbb
jl
inc
mov
xchg
and
mov
sub
jns
clc
rorl
mov
arpl
dec
int
out
sti
dec
push
addr16
add
dec
lds
daa
pop
mov
mov
repz
outsl
ja
call
sub
sbb
scas
cmpsl
sbb
push
or
out
scas
jb
mov
repnz
cmp
fisubl
and
xor
add
test
add
add
sub
loopne
mov
add
mov
adc
sub
mov
push
pop
pop
outsb
mov
sti
jle
testb
js
pop
dec
fnstcw
or
add
push
int3
sub
jmp
mov
cmp
add
ss
ret
dec
jecxz
mov
mov
adc
mov
push
add
sbb
push
in
fs
lret
shll
pop
fisubrl
mov
ret
inc
adcl
movsl
adc
inc
cwtl
pop
mov
sti
push
xchg
pop
outsb
mov
mov
in
jmp
push
fsubl
mov
shrl
xchg
pushf
xor
clc
push
xchg
add
and
mov
cmc
xor
pusha
add
ja
add
add
xor
mov
sbb
sti
imul
cli
mov
push
mov
add
dec
inc
dec
adc
ljmp
mov
inc
mov
orl
xor
pop
out
in
or
dec
loop
mov
cmp
xor
mov
rolb
jbe
add
es
daa
int3
fdivr
iret
push
sti
sbb
xchg
push
ret
xchg
add
jae
adc
mov
xor
add
sbb
sbb
adc
jno
adc
dec
insb
sbb
xlat
cwtl
aad
fdivs
movsl
shl
xchg
add
popf
cwtl
test
add
mov
sbb
xorl
mov
pop
in
push
lret
dec
fmul
jns
jl
mov
cmc
dec
mov
jne
movsl
aaa
and
cmp
imul
mov
mov
add
sbb
loopne
mov
inc
adc
mov
add
xchg
push
ljmp
pop
movb
inc
ljmp
movsb
push
and
sbb
mov
cli
sub
dec
ss
mov
add
mov
mov
test
add
mov
push
insl
jle
fdivrp
testl
or
add
mov
sub
mov
mov
lcall
adc
data16
mov
add
das
aam
add
rol
add
jns
add
cmc
mov
out
add
dec
ret
inc
mov
add
mov
andl
xor
push
add
pop
stc
js
pop
sahf
cmpsb
fsubrs
and
idivb
add
jp
jo
mov
jecxz
cmpsb
fxtract
add
lret
int
xchg
mov
xchg
sbb
add
mov
mov
xchg
add
in
adc
mov
add
enter
dec
or
mov
xlat
movsl
push
jle
lcall
jg
cmp
fwait
call
decb
pop
xchg
loope
sbb
hlt
cmp
add
add
push
outsl
push
cmp
arpl
pop
inc
and
je
dec
xor
xchg
add
cmp
adc
mov
mov
insb
jmp
add
xchg
xchg
pop
out
mov
cmpsl
jns
inc
add
nop
add
out
inc
jo
mov
pusha
add
aaa
es
lock
cmp
mov
dec
lret
data16
test
add
outsl
insl
ljmp
xor
lret
aam
rolb
push
and
out
mov
mov
add
pop
xor
mov
scas
dec
add
mov
mov
push
std
outsl
xchg
add
out
pusha
add
or
add
test
dec
add
mov
call
jb
mov
add
mov
push
repz
lret
mov
inc
dec
sbb
pop
xor
into
mov
add
xor
mov
popa
xchg
loope
imul
pop
push
add
rolb
mov
dec
sub
add
mov
add
push
add
add
pop
mov
pop
mov
add
ljmp
movsl
lret
add
push
addr16
mov
mov
jp
jle
int3
jns
push
push
xchg
add
mov
mov
insb
in
sahf
sbb
add
push
movsb
das
xchg
mov
call
pop
mov
add
jnp
out
cmp
and
add
mov
and
add
mov
inc
cs
mov
mov
jno
ds
xchg
mov
mov
push
pop
outsb
insb
push
mov
add
mov
xchg
or
js
lahf
lea
push
and
push
cmp
and
mov
add
cwtl
inc
lret
mov
cmp
jg
iret
sub
test
test
and
cld
pop
repnz
int3
xchg
pop
das
xchg
repnz
mov
jmp
icebp
into
or
add
fst
aad
in
inc
add
lret
dec
cmpsl
cld
xchg
cmp
lds
out
xchg
sbb
mov
mov
movsb
cmp
mov
push
sahf
or
pop
pop
mov
mov
pop
loope
sub
jo
mov
mov
add
fs
out
test
mov
fwait
push
lock
mov
lea
add
mov
fbstp
adc
add
mov
pusha
add
xor
mov
movsl
leave
sbb
xchg
jmp
and
sub
add
call
add
lcall
push
jae
push
arpl
test
fisubrs
jmp
mov
add
cs
loop
mov
add
jno
mov
mov
and
cs
iret
jns
enter
mov
outsl
push
jg
mov
add
into
ja
je
aaa
pop
fistpll
xchg
cli
popa
mov
rolb
mov
ret
jbe
adc
mov
add
mov
add
pop
popa
je
out
add
push
add
add
xchg
add
mov
jle
fcompl
push
dec
cmp
testl
xor
add
mov
add
mov
cmc
or
rolb
mov
movsl
mov
ret
push
nopl
cli
int
or
mov
mov
xchg
adc
cmp
jae
gs
rolb
out
mov
add
and
mov
mov
mov
mov
xchg
ret
inc
jmp
add
leave
mov
inc
add
fdivp
add
mov
add
and
mov
add
add
mov
and
fsubrl
mov
decb
ss
insl
test
imul
outsw
push
xchg
ss
mov
push
xor
leave
notb
pop
sti
rolb
mov
cmp
loopne
mov
mov
add
popf
inc
sub
mov
mov
addb
mov
les
add
sbb
jmp
fists
sti
addb
push
addr16
repnz
iret
andl
jno
cmp
out
cmpsb
jecxz
jg
lret
dec
cwtl
mov
imull
pop
bound
mov
js
das
mov
add
cmc
xchg
loope
stos
in
jecxz
enter
add
push
sbb
xlat
les
add
add
lret
pop
imul
mov
out
jne
and
add
mov
mov
push
jle
lcall
push
add
push
add
mov
jg
das
add
mov
mov
mov
pop
push
jb
mov
pop
jp
pop
inc
decl
divl
mov
hlt
inc
jb
mov
lcall
push
jp
lahf
sbb
cli
les
data16
mov
xlat
mov
out
adc
adc
mov
iret
pop
insb
sbb
popf
inc
add
sbb
cmp
sarl
lcall
addb
jecxz
add
mov
mov
pusha
add
mov
and
in
movsb
push
fucomp
leave
inc
insl
mov
add
aaa
js
cmpsl
sub
inc
add
enter
push
add
pop
adc
xchg
xchg
loop
mov
add
lahf
call
dec
ficoml
scas
adc
mov
fsubrs
sub
cld
in
sbb
push
add
mov
xor
mov
fadds
add
mov
bound
mov
inc
je
push
mov
fdivrp
or
sbb
test
and
mov
mov
and
xchg
outsl
jp
jbe
add
addb
int
and
mov
or
dec
lahf
icebp
and
test
jl
push
mov
mov
divl
add
ficomps
jo
mov
gs
dec
insb
leave
xchg
or
mov
andl
add
mov
std
adc
add
jle
jb
mov
addb
shl
fisttpll
aaa
adc
ja
rolb
daa
push
jecxz
test
mov
pop
mov
xchg
pop
fisttpl
add
bound
mov
std
xchg
cmp
out
repnz
add
outsl
and
in
sti
mov
add
repz
jo
mov
repnz
jle
xor
movsb
inc
addb
div
cmp
std
into
clc
adc
mov
rorl
xor
mov
rolb
negl
mov
push
fs
adc
add
or
ffree
mov
mov
mov
cs
jge
lcallw
xor
add
mov
mov
mov
add
rolb
mov
add
or
xchg
xorl
add
xlat
dec
pop
lods
cli
cld
or
cmc
add
mov
sbb
mov
fnsave
or
mov
insb
cltd
sbb
jge
outsl
sub
rolb
mov
dec
ss
cmp
mov
cmp
outsl
add
mov
jb
mov
push
push
or
mov
inc
mov
mov
adcl
mov
lods
push
int3
xchg
add
add
push
inc
add
rolb
mov
repz
lds
add
or
cmp
mov
add
add
inc
cs
sub
dec
cltd
xchg
aam
mov
pop
add
mov
in
cltd
add
and
mov
mov
jecxz
lock
sbb
addb
cmpsl
mov
xchg
cltd
and
repz
xor
movsb
call
push
pop
sub
out
iret
push
stc
fnstsw
inc
and
mov
fwait
leave
inc
push
add
add
add
inc
add
xor
mov
add
add
lods
scas
push
add
add
dec
mov
xchg
add
sti
int
cmc
push
stos
mov
mov
mov
pop
or
rolb
mov
xchg
sub
fisubl
add
ds
lock
add
stos
add
loop
mov
add
mov
push
xchg
add
pop
sub
add
fadds
xorl
lea
stc
push
mov
daa
jno
add
push
sahf
inc
pop
cmp
jb
mov
push
dec
lods
add
jo
mov
stos
lock
mov
fldenv
add
mov
inc
lock
addr16
push
jl
iret
cmpsb
or
add
dec
pop
mov
cmp
xchg
iret
inc
js
mov
and
fidivrl
in
sti
out
mov
or
push
es
pop
push
mov
add
testl
addl
inc
add
add
mov
test
mov
dec
addb
test
ret
dec
or
add
or
mov
cmp
mov
xchg
jl
push
in
sbb
dec
sub
in
add
push
and
mov
xchg
data16
mov
mov
sar
hlt
test
push
mov
scas
rcll
sbb
test
js
pop
popa
dec
and
mov
loop
mov
push
inc
scas
jns
adc
in
xchg
xchg
cmc
pop
test
jle
out
data16
mov
mov
add
idiv
mov
popf
pop
xor
add
mulb
jne
fs
lea
data16
insb
popa
jmp
sbb
andl
popa
ss
and
mov
dec
jecxz
push
lret
mov
mov
das
sbb
in
jecxz
sbb
cld
jge
inc
ja
pop
adc
aad
loop
mov
add
ds
mov
mov
mov
add
in
scas
push
jmp
icebp
sbb
xor
mov
xchg
add
insl
jg
lods
scas
shll
add
mov
insb
pop
mov
in
mov
outsl
cmp
mov
idiv
in
pushl
add
mov
inc
add
lods
mov
movsb
lods
add
scas
dec
mov
mov
stc
jae
sbb
add
mov
inc
leave
test
inc
add
add
ja
add
sbb
add
out
mov
roll
stos
pusha
add
adc
add
add
lods
pop
cmp
add
stos
xchg
leave
or
imul
stc
inc
in
lcall
js
mov
stos
je
ret
movsl
add
mov
je
inc
inc
add
rolb
mov
cld
clc
loop
mov
lods
jbe
rolb
mov
fs
mov
cmp
add
cld
sbb
add
jmp
imul
pop
fisubl
mov
xor
cmpsl
mov
push
mov
xchg
adc
mov
mov
cmc
dec
shll
aas
addr16
add
fcoml
movsb
mov
shld
call
jle
add
mov
jl
push
mov
repnz
mov
std
dec
leave
inc
jg
inc
add
or
mov
xchg
rorl
data16
sub
nop
add
aad
cmp
dec
testb
sbb
add
jecxz
addb
sub
inc
add
mov
add
cmc
mov
addr16
adc
mov
ret
mov
mov
adc
mov
add
xor
subl
arpl
negb
pushw
out
fldt
or
mov
cmc
shrl
pop
adc
dec
dec
and
xchg
inc
add
test
dec
add
adc
mov
iret
pop
or
sub
icebp
repnz
mov
mov
int3
xor
mov
mov
mov
test
mov
mov
mov
push
mov
mov
cld
shrl
mov
out
mov
in
and
stos
addb
mov
mov
ja
sub
xor
jl
xchg
dec
and
mov
mov
pop
mov
add
mov
mov
add
mov
idiv
ds
and
jg
adc
mov
mov
repnz
or
rolb
or
mov
sbb
inc
aas
lds
jo
mov
add
sub
test
pop
addr16
sbb
add
mov
mov
add
sti
add
or
hlt
mov
aas
add
leave
bound
mov
imul
ss
loope
sbb
pushf
inc
add
pop
or
add
cmp
jne
mov
lret
popa
or
lock
rolb
mov
jae
add
sarl
das
mov
cld
and
add
pop
fcoms
das
aam
sti
or
mov
dec
arpl
add
sbb
and
mov
xor
add
imull
add
fs
aaa
fs
bound
mov
imul
mov
mov
stc
fcomps
mov
cmp
sub
add
adc
add
add
je
mov
mov
push
mov
mov
mov
ja
xchg
repnz
lods
js
dec
inc
mov
mov
sahf
xor
in
sarl
mov
shll
add
rolb
mov
mov
ret
dec
lock
vxorpd
jno
xchg
dec
fnstenv
mov
add
aas
or
push
mov
jb
mov
dec
fwait
gs
sub
repz
leave
mov
or
iret
mov
dec
je
and
ret
js
pop
mov
in
out
dec
dec
xchg
mov
mov
add
test
push
mov
rcll
jge
arpl
adc
mov
add
sub
nop
add
add
mov
push
cmp
sub
inc
adcl
fidivrs
mov
add
mov
cmpsb
mov
mov
add
test
add
fcomps
add
pop
sub
loopne
mov
fmul
push
and
pop
xchg
lods
filds
rolb
mov
mov
xor
add
fwait
rorl
pop
jo
mov
loop
mov
mov
sbb
inc
add
mov
adc
inc
cld
mov
popf
test
mov
xchg
lcall
lahf
pop
and
mov
push
add
inc
adcl
mov
loopne
mov
xchg
sbb
sub
dec
mov
xchg
fwait
mov
mov
mov
fnstcw
mov
jo
mov
mov
push
mov
jns
sub
sbb
xor
mov
sub
test
or
jb
mov
jg
cmp
xor
mov
cs
fisubrs
sub
add
sbb
add
cli
cltd
cmc
nop
add
rolb
mov
ret
cmp
add
mov
mov
aam
addb
scas
and
mov
add
cmp
add
iret
push
add
jg
or
jl
ljmp
shrl
adc
mov
sbb
jmp
inc
mov
sub
or
in
movsb
cld
push
insb
aaa
pushf
fld
mov
jecxz
imul
mov
aaa
inc
push
add
add
into
les
in
inc
add
pushw
sbb
jmp
jo
mov
mov
jecxz
pop
mov
stc
scas
ret
sub
fadd
mov
lahf
push
adc
mov
js
gs
add
cmc
addr16
in
movsb
add
jp
push
int
cmpsb
or
lds
enter
lock
dec
xor
add
cmpsl
xchg
lar
mov
sbb
leave
and
mov
clc
movsb
mov
mov
cmp
xchg
sahf
addr16
daa
add
adc
jbe
add
mov
mov
inc
cmp
add
std
pop
or
add
adc
mov
jecxz
imul
mov
or
cmc
jbe
mov
add
pushf
sub
xor
add
sub
int3
xor
add
add
rolb
mov
mov
pop
jp
and
inc
dec
mov
stos
data16
add
jns
mov
inc
je
stos
xchg
push
aam
dec
test
loop
mov
cmp
add
mov
mov
sbb
orl
jno
rolb
aad
jle
test
sub
outsb
es
mov
add
notl
jns
test
bound
mov
mov
std
inc
jle
or
push
pop
jle
hlt
scas
push
enter
adc
mov
loopne
mov
mov
lahf
sub
lods
pop
jb
mov
mov
add
push
cltd
jmp
pop
sbb
out
jg
or
xchg
cmpl
push
add
lea
xchg
mov
sbb
xchg
std
ljmp
cli
ficoms
add
divb
push
dec
xlat
lret
lret
mov
movsb
clc
add
fldenv
inc
test
rolb
mov
popf
idivl
loop
mov
adc
mov
mov
mov
call
add
mov
ret
mov
ficoms
mov
mov
into
ja
add
aad
jae,pt
into
mov
cmp
add
loop
mov
mov
call
test
push
pop
mov
movsb
pop
daa
jb
mov
mov
add
in
stc
int3
jge
cwtl
mov
imul
adc
lea
pop
pushl
jp
pop
or
sbb
in
or
aam
imul
xlat
xchg
add
aaa
pop
pop
jg
outsb
xchg
push
add
mov
shrl
add
mov
push
sub
inc
faddl
mov
pushf
out
mov
jo
mov
add
fwait
adc
mov
and
lret
push
in
mov
xor
pusha
add
mov
out
rolb
mov
sbb
add
in
cmp
mov
add
jbe
sub
jecxz
add
aad
pop
test
jle
and
add
pop
addr16
inc
jg
into
xchg
nop
add
xchg
inc
mov
out
ja
gs
inc
sub
mov
lea
std
or
pop
movl
leave
inc
fbld
add
rolb
cmp
mov
add
jge
cmp
popf
fs
aaa
xchg
loopne
mov
mov
fcomps
add
sbb
cmp
test
add
mov
sahf
ret
pop
pop
jecxz
pop
jo
mov
dec
jo
mov
or
mov
cs
fiadds
add
xor
out
cmp
pop
clc
aam
add
add
cli
inc
inc
xchg
add
add
add
daa
dec
dec
mov
push
add
pop
es
mov
mov
neg
fistps
ret
insl
in
outsl
loop
mov
or
push
xchg
xchg
dec
cmp
push
add
lods
in
cltd
sbb
xor
xchg
mov
cmc
push
add
inc
jns
aad
add
jo
mov
add
aam
pop
sbb
pop
xchg
pop
cmp
sti
stos
test
fdivr
pop
jp
pop
ljmp
les
mov
outsb
prefetcht1
mov
stos
xchg
addb
dec
les
xor
sub
jns
mov
mov
lret
mov
cli
dec
sbb
orl
mov
add
sbb
add
xchg
add
sbbl
pushf
jnp
addb
push
dec
insl
and
mov
ret
bound
mov
xor
jp
jmp
pop
push
push
ret
xlat
pop
cmpl
cltd
mov
mov
xchg
jno
dec
jecxz
insl
jns
cmp
leave
cmp
add
mov
jmp
cmp
add
inc
or
call
add
sbb
jno
xlat
sbb
stc
movsl
sub
add
cmp
add
mov
mov
pmaxub
add
out
sti
stos
rolb
mov
push
in
cli
jnp
push
aad
pop
jge
xor
rolb
mov
add
mov
mov
incl
mov
mov
fs
add
ja
imulb
loopne
mov
or
js
inc
push
js
cli
les
icebp
sub
add
add
out
loope
xchg
lock
jg
jmp
add
jmp
ss
repz
mov
add
add
aad
add
jno
push
out
and
add
cmp
add
test
and
mov
negb
jb
mov
lock
mov
mov
add
inc
add
add
mov
vmwrite
mov
add
adc
fimull
int3
pusha
add
add
adc
pop
mov
jecxz
jno
push
push
sbb
push
mov
dec
adcl
cmp
mov
jb
mov
sbb
add
push
orl
aaa
mov
mov
mov
add
rcll
cmp
jle
loope
cmp
clc
bound
mov
gs
fidivs
rolb
mov
xchg
add
in
dec
jmp
mov
add
mov
sub
add
push
inc
adc
mov
dec
mov
out
fnstenv
scas
mov
gs
cmp
mov
loope
bound
mov
add
fcoms
aam
fwait
mov
or
sbb
movsb
scas
test
xchg
or
and
mov
rorl
cld
or
popa
movsl
push
add
hlt
ret
pusha
add
outsl
addr16
inc
cld
mov
mov
arpl
mov
int
push
xchg
sub
inc
add
add
or
xor
daa
fnstcw
jns
inc
add
pop
xor
cltd
lds
add
or
mov
adc
in
outsl
mov
pop
fisubl
pop
jmp
in
adc
lret
mov
push
lcall
xorl
mov
inc
inc
aaa
adc
loop
mov
mov
mov
dec
mov
mov
jle
cmc
je
xlat
in
enter
push
ss
lea
les
dec
pop
mov
mov
add
pop
and
mov
mov
fimull
nop
add
enter
mov
imul
jmp
ds
push
fdiv
mov
andl
cs
jle
sahf
adc
add
xchg
push
fstl
mov
rolb
les
push
outsb
fidivrl
lret
daa
add
jp
mov
mov
ss
fildll
mov
dec
jb
mov
pushf
aad
popf
mov
mov
add
loop
mov
xchg
xorl
mov
mov
add
ljmp
sti
test
movsl
xchg
dec
orl
mov
add
fidivl
hlt
mov
repnz
add
pop
in
adc
xor
imul
mov
test
and
mov
push
and
mov
movsl
notb
sbbl
push
jp
out
int3
lds
add
imul
add
cmp
iret
scas
mov
add
add
cmpsb
aad
add
mov
mov
add
fwait
insl
sbb
bound
mov
rolb
sbb
and
mov
stos
jmp
ss
jmp
add
leave
push
jae
lods
add
cwtl
lcall
dec
out
mov
push
sarl
pop
and
pushf
mov
mov
sub
imul
mov
mov
add
mov
scas
push
adc
mov
mov
mov
mov
mov
lea
add
add
add
aam
push
aaa
pop
add
aaa
daa
push
mov
mov
mov
add
repnz
add
imul
mov
xor
add
test
ret
pop
cld
jg
push
pop
mov
inc
jg
fildll
testl
add
add
mov
add
sbb
and
xchg
call
add
cmp
jb
mov
pop
inc
outsb
addr16
sub
add
mov
iret
lahf
pop
outsb
popa
lods
rolb
pop
insb
orl
repz
add
push
add
inc
out
out
and
hlt
pop
cltd
addb
push
or
mov
mov
popf
popa
adcl
jl
add
add
push
stc
pop
xchg
cmp
cld
aad
add
mov
scas
and
mov
nop
add
outsl
int3
out
mov
mov
out
sbb
icebp
cwtl
push
pop
xor
mov
inc
add
add
in
fs
add
mov
and
adc
test
lods
jb
mov
aaa
test
fwait
rolb
mov
mov
mov
add
dec
mov
add
sub
add
mov
add
rolb
mov
out
testl
or
call
cmp
lcall
mov
cmp
inc
add
das
add
mov
mov
mov
or
cmp
sub
xor
call
push
add
mov
lahf
or
pushf
sbb
loopne
mov
mov
add
test
repz
repnz
jle
mov
mov
and
add
out
inc
sub
into
xchg
push
roll
xchg
pop
xchg
int
ret
clc
test
fidivl
les
xchg
add
out
xchg
xchg
cld
cmp
push
in
iret
cmpps
cld
icebp
incb
add
jne
movsl
faddl
mov
add
mov
movsl
pop
or
mov
xor
mov
add
jecxz
iret
addb
sub
pop
jbe
mov
xchg
daa
sbb
jge
mov
xchg
imul
add
push
jne
mov
inc
es
jnp
cwtl
ljmp
inc
add
add
ret
daa
xchg
fcmovnbe
push
mov
fs
mov
shll
fdivrp
cli
rolb
adc
dec
dec
mov
add
rolb
mov
jl
pop
icebp
insb
xlat
and
mov
mov
adc
mov
adc
add
xchg
call
insb
cmpsl
sahf
adc
adc
mov
and
mov
push
aad
imul
add
pop
xchg
enter
mov
cmpsl
fsubl
mov
jo
mov
punpckldq
mov
mov
sbb
mov
add
push
mov
js
fildl
add
mov
add
sub
mov
leave
iret
adc
mov
push
add
sbb
les
aaa
inc
add
push
mov
addb
popa
cmc
stos
inc
sub
rolb
mov
ja
cli
bswap
mov
mov
mov
jo
mov
inc
in
fs
push
outsb
fnsetpm(287
xchg
pop
aas
sub
mov
test
js
push
ljmp
add
add
mov
mov
inc
add
addr16
sbb
mov
pop
cwtl
insb
xchg
loope
or
cmp
in
inc
add
andl
mov
add
imul
bound
mov
push
rolb
mov
jbe
sbb
mov
mov
out
loop
mov
rolb
mov
test
mov
sub
pop
inc
add
cmp
dec
fsts
cmp
jmp
sub
jge
xor
addr16
jp
add
les
sub
and
jp
pop
dec
and
mov
gs
dec
leave
jb
cmpsb
mov
add
dec
sbb
inc
imul
jne
mov
mov
pop
mov
es
loope
nop
add
daa
mov
add
lahf
popf
jbe
ret
sub
in
test
mov
mov
push
cmpsb
shll
mov
outsb
test
in
mov
or
cmp
test
cld
adc
inc
loopne
mov
add
xchg
movsb
xlat
sbb
loopne
mov
add
stos
adc
mov
mov
add
adc
clc
nop
add
ds
outsl
daa
add
sub
sub
movsb
lret
xchg
jg
jb
mov
add
add
dec
xor
mov
cmp
lahf
sub
add
sub
test
jg
ret
sub
mov
sub
pop
sbb
xchg
add
dec
mov
mov
add
mov
dec
jge
inc
repnz
loop
mov
add
add
lahf
inc
add
add
add
das
push
repz
lret
cltd
ss
or
add
call
jo
mov
pop
pop
and
mov
in
mov
inc
add
mov
sub
ljmp
push
fistpl
sub
dec
pop
inc
and
mov
add
test
stc
hlt
push
add
pusha
add
xor
or
xor
fisubrs
leave
mov
push
mov
rolb
mov
clc
ljmp
ret
repz
jle
ret
loope
repz
repz
inc
add
repnz
out
insl
lcall
mov
add
mov
mov
xchg
mov
mov
jne
jmp
imull
or
adc
out
adc
jo
mov
mov
xchg
cmp
adc
mov
movsb
lds
mov
pop
data16
in
pop
mov
mov
inc
pop
cmp
hlt
mov
xchg
inc
movsl
gs
int3
int
jg
dec
into
in
sub
mov
loope
add
jnp
movsb
cmpsb
ret
andl
xchg
imul
mov
push
add
push
rolb
mov
scas
fdivrl
push
setbe
mov
add
sub
rolb
mov
imull
xor
mov
and
mov
lcall
fcompl
xchg
rolb
xchg
dec
push
pop
dec
andl
ret
xchg
outsl
xor
mov
movsl
imul
push
mov
lds
add
mov
add
cmpsb
mov
add
add
test
mov
mov
aam
sahf
cs
lret
pop
pop
mov
push
sub
sbb
pusha
add
add
fidivrs
leave
or
fcmovb
adc
adc
xchg
in
push
sbb
stos
sub
sub
push
add
enter
mov
pop
mov
add
mov
testb
dec
gs
pop
add
loopne,pt
mov
mov
call
add
mov
not
cmc
call
sahf
fsubrl
xor
ja
stos
push
jnp
inc
int3
pushf
cmpsl
dec
xlat
jns
jnp
rolb
mov
or
mov
mov
in
lret
pop
cmp
add
pop
neg
imul
stos
xor
mov
aaa
popf
das
adc
push
inc
add
mov
sub
push
xor
mov
mov
fwait
and
xchg
jbe
mov
xchg
mov
sbb
xor
mov
fcoms
stos
sub
stos
aas
push
movsl
hlt
push
dec
bound
mov
xchg
cmp
add
add
mov
es
stos
out
mov
lcall
imul
mov
nop
add
or
jne
inc
adc
jno
dec
mov
add
inc
mov
out
and
pop
jnp
add
and
stc
lcall
mov
mov
add
push
stos
and
mov
in
add
cmp
mov
imul
add
push
push
jo
mov
inc
fmull
dec
fcompl
mov
cmpl
cwtl
cmp
test
and
push
or
data16
add
push
cmp
sbb
or
outsb
fisttpl
shrl
mov
add
mov
sbbl
ret
arpl
aaa
cmp
cmp
data16
mov
js
cmp
add
mov
sub
add
or
pop
lahf
lods
outsl
dec
leave
mov
ret
dec
cmc
lods
iret
mov
fidivl
push
sub
pop
lods
add
mov
dec
out
xor
sub
mov
xchg
add
jge
pushf
je
mov
xor
mov
jns
pop
sbb
rolb
mov
mov
or
mov
sub
movsb
and
and
mov
add
mov
insl
push
hlt
rcll
add
test
add
jns
add
leave
sub
mov
mov
popf
es
push
lret
fisttpl
inc
inc
add
popf
and
mov
add
sub
sarl
insb
xchg
add
add
xor
icebp
xor
mov
mov
repz
xchg
cs
cmp
cmp
mov
add
fbstp
mov
popa
leave
pushf
popa
pop
in
imull
lret
addb
jge
push
or
cs
cmpl
outsb
inc
inc
cmpsl
mov
das
movsb
mov
mov
aas
jge
cvtdq2ps
xchg
xor
mov
out
leave
xchg
add
jmp
xchg
add
mov
jmp
add
inc
or
xor
aad
cmp
xchg
sub
pop
sti
xchg
movsb
sti
rorl
add
push
les
popa
xor
mov
pop
mov
nop
add
mov
hlt
push
arpl
dec
inc
and
lods
inc
out
inc
add
cmc
rolb
mov
mov
dec
add
fimuls
add
xlat
mov
add
and
out
orl
mov
addl
mov
out
inc
add
lahf
mov
mov
xor
mov
leave
cli
xor
mov
xchg
fnsave
clc
sbb
pop
push
jbe
in
jl
test
mov
scas
imul
test
int
add
add
jo
mov
jl
and
and
out
in
mov
mov
addr16
loop
mov
add
es
out
scas
dec
in
sub
add
cli
ds
pop
rolb
mov
jnp
insl
test
mov
push
cmc
imul
mov
add
add
shll
or
push
add
ljmp
movsl
xchg
dec
cli
inc
jecxz
adc
addr16
and
mov
aam
rolb
in
subl
bsr
mov
in
mull
ss
add
mov
add
lods
or
add
insb
dec
push
add
bound
mov
gs
std
ja
clc
push
dec
or
pop
cwtl
pop
bound
mov
adc
mov
and
std
rolb
mov
mov
mov
rolb
mov
add
cs
fildl
dec
and
les
hlt
mov
mov
sbb
xchg
mov
dec
arpl
push
add
lahf
mov
stos
mov
addr16
fwait
pop
adc
mov
les
movsb
lods
mov
mov
add
lods
in
adc
mov
cwtl
imul
add
add
add
movsb
addb
inc
dec
sahf
roll
dec
test
cmovno
movsb
dec
loopne
mov
dec
mov
jmp
add
les
mov
dec
dec
xor
add
mov
mov
xchg
sbb
dec
xchg
push
fstps
clc
sti
dec
fs
popf
and
sub
or
adc
mov
movsb
int3
icebp
mov
sbb
jo
mov
xor
mov
and
ffreep
inc
ret
addb
addb
aam
inc
adc
sbb
add
add
repz
mov
pusha
add
add
mov
add
imul
mov
mov
jge
adc
mov
fs
mov
add
insl
sub
add
mov
push
sbb
mov
mov
inc
mov
pop
or
mov
fwait
sbb
inc
dec
adc
mov
enter
jo
mov
rolb
mov
ss
addr16
add
test
xor
mov
jns
jns
add
fndisi(8087
mov
and
mov
lret
int
fsubrl
mov
mov
dec
dec
inc
popa
ret
pop
cwtl
xor
adc
je
inc
cmp
and
cld
cs
cmpsb
xor
mov
mov
inc
push
mov
mov
xchg
das
outsl
std
mov
mov
cmpsl
fcmovb
add
cmc
and
jnp
inc
dec
adc
mov
pop
mov
cmpsl
sbb
mov
je
add
jge
add
pop
jnp
add
fbstp
jno
das
push
ret
out
jg
pop
rolb
mov
adc
mov
adc
jnp
movsb
aaa
add
fiaddl
out
leave
hlt
insb
sub
popf
pop
jp
pop
and
mov
mov
xlat
add
and
or
jmp
mov
cmp
mov
lds
add
cmp
cmpsl
jp
jno
pop
movsl
iret
xchg
cmp
mov
push
pusha
add
inc
mov
js
stos
mov
adc
mov
pop
int3
test
out
inc
pushl
jmp
test
mov
xchg
popa
jne
jmp
jnp
push
mov
sbb
mov
das
mov
push
and
mov
mov
test
mov
add
jg
out
sbb
dec
mov
nop
add
dec
leave
das
push
mov
jb
mov
out
mov
out
mov
add
mov
adc
mov
add
pushf
xchg
mov
mov
sahf
test
inc
add
loopne
mov
inc
mov
mov
mov
add
sub
imul
add
dec
mov
fucom
jge
xor
mov
mov
xor
pusha
add
mov
hlt
xor
add
mov
jns
imul
pusha
add
inc
aam
push
cmpsb
push
pop
loop
mov
add
jns
stos
xchg
add
mov
cmp
or
ficomps
mov
loopne
mov
lret
push
jp
aam
ror
mov
int3
inc
rcrl
je
add
out
mov
dec
adc
pusha
add
rolb
mov
rolb
cld
and
and
mov
js,pt
xchg
dec
dec
enter
test
add
mov
pop
or
test
adc
repz
out
in
add
adc
sub
add
inc
jo
mov
into
rolb
mov
jae
push
ret
jbe
xchg
mov
mov
es
pop
lock
ret
clc
pop
das
in
mov
jge
scas
movsl
mov
aaa
addb
fxch
ffree
in
mov
add
inc
shll
sub
sub
mov
cwtl
add
cli
mov
cmpsb
nop
add
icebp
pop
cmp
rolb
testb
xchg
movsb
stos
movsl
stc
scas
pop
pusha
add
add
add
mov
out
add
ss
mov
stc
js
push
fiaddl
sbb
add
aas
fsubs
add
cmc
sbb
in
add
mov
aaa
loop
mov
fiaddl
inc
out
bound
mov
adc
mov
sbb
add
sti
dec
xchg
add
fistl
rolb
mov
cmp
xlat
imul
add
fisttpl
ja
adc
jge
sub
add
out
add
add
push
inc
add
loop
mov
mov
xor
stc
popf
stos
pop
xlat
imul
dec
push
stos
sbb
dec
fcmovnu
lods
int3
cmp
mov
add
sbb
sub
add
and
mov
shl
add
add
push
dec
mov
mov
or
jo
mov
mov
adc
fsts
mov
cwtl
xchg
int
add
insb
jp
sbb
mov
sbb
mov
jle
pop
insb
mov
jbe
nop
add
push
or
ret
in
rolb
mov
test
mov
add
mov
je
jmp
mov
jbe
pop
mov
inc
add
add
mov
inc
rcll
cld
rolb
jbe
movsb
jg
outsb
cs
fsts
addr16
out
imul
mov
add
sbb
cmp
mov
xor
mov
test
push
sbbl
dec
in
add
outsl
mov
std
pusha
add
sbb
mov
add
fbld
insb
inc
mov
daa
xchg
pop
and
mov
popa
xchg
mov
inc
pop
lods
push
lret
add
or
jnp
add
mov
xor
rolb
pop
iret
les
add
jnp
clc
mov
xchg
xor
add
push
movsl
jmp
xor
mov
in
jo
mov
mov
adc
in
add
iret
mov
pop
inc
mov
push
ret
lcall
call
jb
mov
das
mov
aad
aas
pop
ficompl
stc
pop
adc
mov
mov
js
mov
iret
jbe
cmpsl
mov
jge
cmpsb
loop
mov
add
jb
mov
add
jns
sahf
fidivs
mov
add
popl
add
out
rcrl
sbb
or
stos
jmp
add
pop
xor
xlat
fwait
bound
mov
aas
push
add
cmp
in
mov
insb
fisttpll
fcomps
xor
sbb
lods
lds
mov
add
add
mov
jge
push
add
sub
sti
sbb
leave
insb
mov
call
xor
fwait
or
je
push
add
pop
outsl
mov
add
rolb
mov
add
cmp
add
js
xchg
add
mov
add
cmp
arpl
mov
xorl
mov
in
push
push
jecxz
test
sbbl
mov
lods
adc
daa
pop
mov
xchg
mov
add
mov
pop
pop
iret
dec
pop
insl
scas
stos
jno
sub
ja
stos
stos
add
loope
repnz
fyl2x
arpl
aas
ljmp
mov
imul
scas
and
add
test
aam
add
add
roll
add
and
add
push
lahf
pop
pop
mov
test
or
mov
or
jo,pt
mov
pushf
mov
popf
xchg
dec
outsb
outsl
add
mov
jne
push
pushf
lods
sbb
dec
mov
mov
cmp
and
sti
paddd
add
mov
clc
mov
ljmp
add
push
rorl
ljmp
test
xchg
xchg
or
jp
pusha
add
jle
add
add
mov
add
ljmp
lods
out
fistpll
mov
out
and
cmp
or
mov
add
mov
mov
js
inc
lock
out
add
mov
xor
sub
mov
add
mov
xchg
andl
sti
int
mov
loopne
mov
and
mov
rolb
mov
dec
data16
mov
xchg
and
fs
mov
stc
adc
mov
mov
add
add
movsl
rolb
mov
add
inc
insb
add
dec
sub
lea
arpl
add
add
mov
xor
mov
loopne
mov
lahf
cli
jmp
jbe
add
out
dec
scas
sub
nop
add
and
das
adc
roll
mov
mov
aad
rolb
sub
add
pop
adcl
xchg
add
stos
mov
jnp
dec
addb
addb
adc
mov
mov
adc
add
pusha
add
add
add
mov
mov
aaa
adc
sbb
lcall
lods
pop
mov
sub
mov
add
and
faddl
or
add
clc
test
add
sahf
andl
dec
fidivs
and
inc
xor
jl
pop
into
cmp
mov
bound
mov
test
add
aaa
xchg
es
cmp
add
mov
pop
lcall
mov
add
lods
sub
lret
mov
xor
dec
dec
bound
mov
and
scas
loope
int
xchg
lods
ds
xchg
add
push
push
dec
pop
imul
mov
rolb
mov
pop
inc
add
les
out
pop
mov
xchg
stc
mov
add
jecxz
mov
mov
lock
xchg
add
adc
or
mov
ja
dec
adc
add
mov
mov
mov
lds
add
sub
clc
ret
mov
mov
incb
mov
scas
fsub
cmp
out
rolb
dec
aaa
dec
fld
add
out
xor
add
add
aad
mov
mov
inc
rolb
mov
add
add
mov
mov
popf
add
mov
jecxz
cmpsb
pop
mov
fsubs
mov
mov
imul
addl
addb
xchg
pushl
imul
pop
sbb
dec
iret
jb
mov
insb
iret
pop
lods
dec
cmp
mov
xchg
add
mov
not
add
cmpsl
push
xchg
dec
dec
dec
rolb
mov
repnz
jb
mov
sub
cld
rolb
mov
mov
add
outsl
ds
out
push
aad
pop
aaa
jg
push
dec
sbb
int
push
add
mov
stc
pop
imul
mov
or
add
sub
testl
add
adc
add
into
xchg
add
cmpsl
popa
sahf
dec
insl
push
int
sub
es
add
mov
pop
xor
mov
mov
jle
xchg
daa
addb
or
mov
pop
sub
nop
add
aas
fstps
test
fiaddl
out
test
xor
mov
add
jb
mov
cltd
adc
sbb
pop
xor
mov
pusha
add
xor
stos
and
mov
mov
jp
int3
xchg
pop
push
inc
pop
xchg
cmp
dec
xor
add
mov
int3
lcall
xchg
aam
int
add
arpl
mov
shll
add
iret
insl
setb
mov
mov
xchg
and
xchg
add
ds
mov
int3
push
pop
in
mov
ljmp
stc
jns
ljmp
mov
jns
xchg
xor
xchg
add
lods
xchg
xchg
ja
insl
sbb
xchg
xchg
add
lret
sbb
stos
pop
dec
fwait
outsb
jae
decl
fcoml
hlt
cmp
xchg
sbb
mov
mov
mulb
xchg
mov
inc
add
mov
adc
xchg
and
mov
out
cmp
sub
psraw
xlat
mov
add
cld
pop
dec
rolb
mov
mov
xor
mov
add
clc
xchg
insb
sti
jne
cmp
add
jno
addb
sub
out
add
addb
daa
fadd
mov
mov
dec
inc
add
addb
pop
divl
mov
mov
mov
or
adc
or
add
add
mov
rolb
mov
sub
arpl
sub
mov
ss
sbb
pop
int3
jecxz
xchg
cmp
inc
add
mov
fimuls
and
inc
add
xchg
push
fmul
cmp
mov
dec
pop
sti
repnz
mov
je
clc
gs
mov
outsl
stc
xchg
stos
mov
ljmp
mov
pop
pusha
add
mov
fisttpl
inc
add
cld
in
scas
mov
xchg
jp
cmp
mov
data16
fnstsw
in
or
sbb
xchg
add
mov
add
stc
fidivs
and
add
cld
das
add
icebp
aad
outsb
arpl
stos
mov
fs
mov
or
sbb
or
dec
stos
add
dec
and
pop
scas
xlat
pushf
sarl
cmp
and
divb
in
scas
mov
test
add
and
add
leave
push
mov
into
jmp
pop
rolb
mov
into
xchg
lock
loopne
mov
add
lret
mov
mov
add
sbb
push
loope
adc
mov
push
dec
in
stos
sti
xor
and
mov
cmp
pop
xor
fs
cmp
ljmp
mov
mov
sbb
movsl
fldl
ja
aad
repnz
add
sub
mov
jno
pop
fcompl
das
rorl
out
jle
dec
mov
cltd
cld
cmp
out
test
mov
mov
add
fnstcw
and
iret
outsb
cmp
mov
jnp
or
mov
addr16
pop
fisttps
lea
dec
std
rolb
mov
cmp
cmpsb
mov
je
in
add
add
mov
enter
cltd
sub
mov
dec
mov
or
or
sub
add
add
mov
xchg
int3
mov
mov
inc
xlat
insb
inc
mov
sub
out
test
mov
movsb
push
mov
rolb
mov
lds
cmp
add
clc
sbb
aad
imull
dec
js
and
jne
add
xchg
lods
add
mov
mov
add
loop
mov
out
xchg
add
push
pop
inc
or
add
add
and
adc
mov
push
push
bound
mov
jmp
insl
sbb
add
mov
jl
addb
or
xchg
mov
add
in
movsl
cmp
add
mov
xor
jg
lea
fnstenv
mov
call
jmp
daa
fcoml
pop
loop
mov
add
mov
or
sub
push
lret
stos
fucomi
jne
rorl
adc
mov
add
mov
fnsave
mov
or
xchg
or
push
cmp
icebp
sbb
pop
aad
jle
gs
int
add
rolb
push
mov
insb
mov
hlt
repnz
hlt
aas
sub
mov
es
jne
mov
fcmovu
sti
sar
sub
add
mov
and
add
mov
mov
mov
sbb
add
add
xchg
push
in
insb
lods
cli
loop
mov
inc
fidivrl
lret
movsb
rolb
push
add
fldcw
in
sbb
hlt
push
add
mov
shrl
mov
adc
cltd
mov
add
cmp
lds
mov
outsl
addb
aam
rolb
mov
mov
inc
pop
push
jbe
inc
cld
rolb
mov
mov
mov
jo
mov
jp
mov
mov
pop
jl
sti
mov
fisubl
xor
mov
xor
mov
mov
fsubrl
push
mov
seto
mov
addr16
adc
mov
cmp
add
mov
mov
add
pushf
add
inc
add
pop
rolb
mov
mov
mov
dec
adc
mov
add
jge
xor
arpl
clc
dec
sbb
into
or
adc
jns
mov
test
out
or
out
push
adc
fstpt
xor
jne
test
sbb
mov
mov
and
js
ret
xchg
in
sub
inc
popf
pushf
mov
gs
or
nop
add
adc
add
add
das
les
mov
pop
push
lock
mov
lods
loope
push
lods
sbb
or
add
mov
test
stos
sbb
pop
lock
add
sbb
jge
jno
mov
setnp
lds
aaa
xor
or
jmp
jbe
mov
push
roll
sub
or
adc
mov
rolb
rolb
mov
movsb
addr16
mov
mov
lods
aam
arpl
mov
xchg
xchg
add
lock
cltd
js
test
xor
push
cld
xchg
lods
mov
arpl
pop
lret
inc
hlt
mov
ljmp
leave
xor
mov
rolb
mov
jmp
rolb
mov
mov
add
mov
mov
mov
sub
mov
mov
push
lock
inc
push
adc
add
mov
rolb
mov
ret
xor
jecxz
int3
cmp
sub
mov
sbb
mov
jge
cmc
ret
stos
adc
icebp
subl
cmc
mov
mov
addb
sti
cmpsb
in
mov
add
ss
orl
add
sub
dec
dec
std
pop
mov
mov
xchg
mov
loopne
mov
mov
movsl
mov
add
ror
and
mov
mov
xchg
push
rolb
sbb
jbe
into
into
mov
add
mov
add
movsl
addr16
movsl
push
cmpsl
xor
sbb
sbb
add
jb
mov
pop
jo
mov
cmp
inc
stc
addr16
dec
jnp
xchg
out
push
pop
les
xor
add
mov
data16
inc
rolb
mov
push
jmp
adc
mov
push
sbb
push
xchg
push
popf
or
cmp
mov
lods
enter
movsl
stos
aad
jns
add
mov
add
gs
nop
add
dec
aam
pop
lods
mov
fsincos
ret
mov
movsl
cmp
mov
mov
sub
adc
mov
stos
mov
or
mov
scas
outsl
mov
in
mov
mov
mov
testb
pop
add
icebp
out
jne
push
dec
daa
push
sbb
inc
add
mov
out
adc
addb
rolb
mov
mov
mov
mov
mov
inc
add
cmpl
mov
add
xchg
fidivs
insb
cmp
lret
mov
test
inc
jae
out
mov
cwtl
lods
dec
cmc
mov
inc
add
add
js
ret
adc
mov
mov
ret
cltd
mov
add
or
add
pop
je
mov
mov
dec
lea
lods
lahf
jmp
fistpll
sub
cs
jp
add
push
jecxz
sub
add
add
xor
fs
roll
add
mov
jnp
inc
dec
pop
popf
mov
add
shll
add
arpl
mov
add
test
test
mov
add
sub
lods
jmp
fistpl
jae
cmpsb
movsb
sub
mov
and
mov
divl
add
mov
outsb
or
mov
mov
pop
sti
pop
or
pop
outsl
bound
mov
add
xor
and
lods
imul
adc
mov
jl
xor
filds
jmp
pop
out
adc
mov
push
add
mov
add
mov
mov
outsl
jno
ret
dec
sub
mov
insb
loopne
mov
inc
add
ja
xchg
add
out
jb
mov
outsl
mov
lea
jb
mov
add
dec
sbb
aaa
inc
out
movsl
mov
mov
push
inc
push
mov
add
aaa
iret
insl
push
add
cmp
add
add
mov
xor
mov
pop
dec
movsb
mov
jle
rolb
mov
mov
mov
add
inc
add
adc
mov
xchg
rolb
mov
sub
aaa
in
xchg
xor
add
mov
fwait
cmp
lret
sub
mov
add
jg
lods
lods
xchg
sbb
sbb
inc
lds
add
sub
test
add
addb
pop
das
clc
outsl
fcoml
xchg
fcomps
call
mov
and
mov
mov
inc
data16
adc
mov
fildl
add
add
lods
and
mov
pop
jo
mov
cmp
sbbl
add
mov
imul
ret
mov
into
or
or
mov
addr16
jno
add
add
mov
sub
pop
rolb
mov
push
mov
add
xor
mov
rcll
mov
imul
push
jle
add
ret
incb
add
mov
add
fwait
addr16
mov
add
sub
push
dec
data16
rolb
scas
inc
add
jbe
mov
pop
xchg
hlt
sbb
mov
popf
stos
fidivs
xchg
ficoms
push
push
cmp
popa
stos
cmc
mov
add
unpckhps
pop
mov
jns
in
mov
add
sbb
pop
loopne
mov
adc
mov
cmpsb
mov
loop
mov
xorl
mov
inc
jg
sbb
pop
jmp
add
mov
nop
add
push
cmp
cmp
sbb
js
cltd
push
add
mov
cwtl
in
push
push
js
ja
dec
mov
jge
sub
xchg
into
sub
mov
add
ret
sbbl
cmp
add
adc
mov
mov
mov
test
add
add
test
fmuls
fwait
mov
repz
imul
lcall
xor
mov
hlt
outsb
mov
