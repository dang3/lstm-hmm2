nop
add
dec
pop
xor
testl
movsb
xor
lret
mov
and
cmp
xor
add
repnz
mov
dec
inc
mov
data16
jbe
xchg
scas
fdivrl
pop
sbb
hlt
les
push
mov
pop
adc
xor
mov
pop
mov
ret
push
mov
mov
mov
daa
and
mov
dec
adc
mov
in
gs
faddl
sub
jge
add
sbb
ljmp
adc
mov
pop
ret
xchg
in
jmp
add
jns
cmpsl
sub
cs
adc
cmp
lret
pop
xchg
push
int3
aad
jo
mov
pop
jae
add
shrl
or
lods
jmp
xor
int
iret
clc
xchg
mov
mov
incl
cmc
cmpsb
xchg
or
cmp
add
add
cwtl
aad
notl
ljmp
mov
mov
leave
stos
jg
xchg
fnstcw
mov
inc
xor
or
repz
add
mov
nop
add
add
cli
popf
rolb
mov
ficoms
add
sub
add
mov
push
jb
mov
mov
outsl
xchg
sbb
mov
jns
rolb
mov
fldcw
leave
xor
add
add
fs
xor
mov
cmpl
outsb
insb
cs
jne
pop
or
mov
mov
fisttpll
xor
mov
cs
popf
jbe
test
mov
dec
popa
fsubrl
in
lea
mov
add
mov
jae
flds
add
cmc
test
out
cmp
push
xor
dec
mov
add
mov
imul
mov
add
xor
add
mov
fadd
add
sbb
pop
test
add
mov
sbb
mov
sub
and
mov
subl
xor
and
pop
ret
enter
add
in
inc
add
add
push
inc
lcall
add
lret
sbb
popf
and
sbb
into
jg
xchg
or
addb
pusha
add
in
or
add
lret
ljmp
mov
xor
mov
or
arpl
rcll
push
sub
push
pop
sub
lcall
je
pop
aam
add
xor
adc
mov
add
and
mov
pop
adc
mov
cmp
xchg
dec
fistl
pop
mov
nop
add
add
mov
xor
push
cltd
fisubl
negb
jle
or
mov
cld
push
bound
mov
add
add
pop
nop
add
mov
mov
jecxz
dec
mov
movsl
cmp
leave
or
sub
add
rolb
mov
popa
fs
cmp
mov
push
fidivrl
inc
mov
add
push
xor
mov
add
stc
loope,pt
mov
fs
imul
pop
or
xchg
test
xchg
add
inc
add
ljmp
ljmp
add
mov
mov
rorl
inc
lds
add
inc
add
pop
xor
add
mov
inc
pop
test
mov
add
add
mov
add
add
mov
push
jo
mov
add
mov
je
dec
inc
jne
shll
add
pusha
add
mov
add
pop
bt
and
dec
mov
adc
mov
add
pop
xlat
mov
pop
mov
addr16
add
mov
out
or
cli
mov
mov
adc
mov
mov
ds
sbb
add
in
sub
imul
add
cmp
addb
iret
jae
imul
mov
jno
mov
repz
in
inc
add
stos
cltd
js
arpl
or
mov
inc
pop
int3
fmul
pop
add
mov
stc
pop
and
and
mov
mov
mov
add
pop
pop
cld
imul
cltd
adc
mov
test
fcomip
add
les
arpl
jp
clc
cmp
add
sbb
js
mov
cmp
mov
insb
dec
jle
lret
cli
lock
rolb
mov
add
xor
fisubrl
mov
mov
sub
outsl
mov
lea
adc
mov
addb
mov
inc
cmp
popf
jnp
into
mov
mov
out
ret
jg
dec
stc
dec
pop
orl
cmp
xchg
outsb
push
hlt
mov
add
ss
sub
leave
psubusb
sbb
add
in
mov
xchg
dec
push
push
pop
imul
mov
movsb
push
int3
cmp
popa
sub
mov
adc
mov
mov
add
inc
add
aas
loopne
mov
add
insl
cld
dec
mov
shll
mov
push
push
sbb
xchg
jge
jb
mov
bound
mov
inc
fmul
das
xchg
popa
stos
sbb
xchg
js
add
push
pop
mov
outsb
jecxz
add
lods
pop
mov
mov
add
mov
mov
or
or
dec
das
push
xchg
add
dec
mov
mov
mov
mov
or
out
aas
cmp
add
mov
xor
push
out
push
sar
dec
mov
mov
adc
push
push
ss
cld
lea
dec
rolb
mov
popf
pushf
shrl
mov
add
mov
insb
adc
mov
test
in
addr16
sub
enter
scas
adc
jmp
icebp
cmc
inc
ret
rcrl
gs
adc
loope
sbb
sahf
sub
add
or
aad
or
rcll
mov
ret
mov
or
xor
add
nop
add
aaa
lock
and
addb
xchg
adc
mov
mov
and
mov
inc
daa
xorl
push
add
mov
sub
sub
fsubs
bound
mov
idiv
mov
xor
mov
jecxz
sub
and
cs
push
in
data16
lret
add
test
mov
addb
mov
aas
les
lahf
xchg
push
pop
rolb
fs
mov
jnp
dec
cmpsb
push
xchg
cld
lret
and
mov
mov
add
arpl
mov
mov
sub
push
inc
test
add
cltd
popf
outsb
pop
adc
sbb
lret
mov
mov
es
outsl
in
sbb
push
or
enter
sbb
inc
loopne
mov
cmp
xchg
test
xchg
mov
mov
call
daa
popa
pusha
add
pushf
addr16
mov
add
mov
pushl
mov
adc
popf
dec
xchg
mov
adc
xlat
fldenv
leave
mov
push
out
enter
mov
mov
pop
out
cmp
lods
adc
mov
push
xor
dec
fisubrl
shr
fs
mov
repz
or
mov
pop
inc
insb
in
dec
push
mov
sbb
xchg
cmp
sub
dec
lret
add
cmp
add
add
push
pushf
jge
pop
aad
inc
add
ret
mov
adc
sbb
loopne
mov
push
add
xchg
add
rol
stos
sub
add
mov
push
add
add
mov
enter
loopne
mov
mov
mov
je
aaa
dec
inc
adcl
test
push
add
mov
mov
mov
add
pop
cmp
jl
and
add
dec
dec
jnp
inc
add
sti
fadds
mov
add
icebp
cmp
ja
sub
stos
fs
mov
inc
jnp
jl
mov
loope
imul
push
pop
jecxz
sbb
cwtl
das
cmp
ret
mov
xchg
and
ret
lret
add
mov
dec
mov
xchg
add
add
pop
insl
xchg
jmp
add
add
mov
and
mov
add
mov
mov
and
in
cld
pop
sti
adc
push
add
and
push
fsubp
inc
cs
jmp
mov
add
add
mov
mov
popa
es
dec
mov
add
rolb
mov
add
mov
add
mov
pop
push
jo
mov
mull
add
xchg
pop
loop,pn
mov
cmp
push
add
mov
mov
xorl
dec
in
push
add
xor
addb
pop
mov
fcmovnu
mov
push
jae
in
aas
and
mov
mov
jbe
jmp
inc
pop
sbb
add
fwait
add
jo
mov
jl
dec
sbb
xor
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
add
jg
mov
test
nop
add
cltd
aad
mov
aad
out
add
imul
enter
push
cmp
or
jg
mov
jecxz
es
in
stos
mov
mov
test
push
push
jmp
cld
push
mov
jno
call
es
add
add
xorl
pop
fistps
icebp
test
test
cmp
add
add
imul
mov
int3
mov
ss
add
stos
rolb
mov
data16
mov
inc
add
mov
lds
jae
dec
mov
mov
add
pop
cmp
dec
sub
mov
fs
cmp
dec
and
jl
adc
mov
mov
imul
mov
adc
rolb
mov
xchg
add
mov
mov
mov
cmpsl
xchg
out
jp
and
mov
adc
out
shl
mov
jns
addb
cmp
add
cmp
and
mov
cltd
inc
sub
push
pop
mov
shrl
iret
jecxz
cmc
rorl
mov
mov
dec
loop
mov
mov
pushf
jmp
push
inc
add
and
mov
cli
movsl
inc
xor
in
nop
add
add
add
pusha
add
mov
ds
dec
ret
sub
stos
add
mov
lea
lods
lock
sub
mov
mov
pop
mov
xor
mov
sub
pop
and
xor
mov
aaa
pop
sub
rolb
mov
add
cmp
hlt
jb
mov
push
xchg
fs
gs
jno
add
out
cwtl
idivl
into
in
movsb
add
lret
inc
in
daa
fsubs
push
xchg
xor
sbb
js
repnz
loope
clc
pusha
add
inc
mov
push
pop
mov
jecxz
add
mov
sub
sbb
pop
and
or
ret
sub
xchg
cmpl
insl
lret
les
ret
decl
sub
cs
push
pop
movsl
je
add
bound
mov
push
cmpsl
out
aaa
aad
mov
jne
add
pop
out
add
notl
mov
js
shll
jp
scas
lahf
lret
mov
adc
add
push
cli
sahf
xchg
inc
testb
clc
inc
add
add
loope
jp
mov
mov
add
mov
or
add
popf
adc
stos
sub
pop
pop
push
or
imul
aam
add
imul
frstor
mov
sub
icebp
pop
and
hlt
sbb
dec
jmp
mov
inc
add
int3
jbe
xchg
ret
push
and
mov
add
pop
push
cmpsl
scas
push
or
cmp
dec
es
js
and
mov
sti
pop
dec
dec
cmp
adc
mov
notl
add
inc
aam
scas
pop
inc
pop
dec
jns
xchg
xor
mov
add
dec
jmp
xor
inc
push
adc
pop
xchg
pop
loop
mov
add
mov
aad
jnp
outsb
enter
outsb
mov
and
lret
in
clc
mov
dec
testl
mov
lcall
sbb
and
cmp
fsubs
add
fs
out
push
xorps
add
dec
sbb
add
mov
repz
pop
or
mov
xor
mov
mov
or
and
lods
and
mov
addr16
sbb
jnp
xchg
lods
mov
mov
adc
mov
sub
ss
add
or
test
rolb
mov
mov
pop
insb
or
in
cmpps
std
mov
add
popa
pop
fldl
mov
dec
jns
add
xchg
stc
in
loope
sub
mov
xchg
cmpsl
out
xchg
add
loopne
mov
mov
xor
mov
jmp
mov
imul
iret
dec
jge
rolb
dec
les
inc
add
cmp
dec
mov
aam
and
mov
and
mov
mov
ja
mov
mov
cmp
adc
mov
add
mov
mov
lods
addb
imul
mov
add
add
fsts
fnstcw
mov
mov
jne
stos
insb
outsb
dec
scas
stc
int
adc
mov
mov
xlat
and
out
adc
mov
popa
fldt
std
push
stos
xchg
cmp
xchg
in
add
mov
sbb
push
xchg
and
mov
mov
cld
jbe
lea
mov
dec
add
call
mov
push
arpl
mov
add
mov
sbb
mulb
daa
lret
add
mov
ljmp
mov
sub
ja
add
cli
add
mov
jp
insb
add
ljmp
push
xor
mov
mov
dec
inc
clc
dec
mov
xchg
xor
push
cmovae
mov
fiadds
lret
mov
addb
sbb
mov
pop
dec
pop
stos
and
mov
icebp
add
mov
lds
in
cmpsb
jne
dec
mov
ficomps
loop
mov
cltd
dec
std
adc
mov
add
ret
aad
jg
ljmp
in
cmp
or
inc
adcl
mov
mov
repz
cmp
sub
popf
stc
and
mov
cs
jns
pusha
add
mov
add
xchg
arpl
add
sub
fs
out
rolb
mov
cmp
subl
test
jecxz,pn
fisttpll
mov
fdivs
mov
movsb
pusha
add
xor
add
mov
mov
dec
sbb
or
mov
ss
stos
cltd
add
mov
add
mov
lock
pop
sbb
jmp
fmul
pushf
add
add
hlt
xor
or
mov
loop
mov
fcmovnbe
add
in
or
test
mov
out
push
mov
mov
push
add
mov
add
mov
nop
add
or
cmp
fwait
iret
xor
orl
je
add
lock
ja
sub
add
sti
lds
pop
lods
cld
call
fwait
sub
movsl
mov
sarl
add
pop
scas
daa
push
aas
rolb
mov
cmp
dec
in
gs
add
add
clc
repz
jecxz
push
aas
cmpsl
mov
and
imul
fdivrl
push
cmp
add
inc
lahf
and
mov
adc
ja
out
sub
dec
cltd
push
dec
push
mov
enter
add
adc
mov
sbb
ficoml
ret
jns
js
add
aad
mov
adc
mov
add
mov
jo
mov
add
push
inc
add
arpl
sub
add
xchg
add
jmp
xchg
xorl
xchg
cwtl
int
pop
fwait
cmp
cld
inc
out
insb
rolb
mov
imul
push
add
dec
es
pop
test
add
in
mov
cwtl
std
xchg
push
or
push
push
adc
lock
lcall
ficoms
lock
lret
mov
push
add
loopne
mov
add
jbe
int3
or
jae
out
loope
rolb
mov
cmc
dec
frstor
add
add
mov
in
loope
mov
add
sub
lock
mov
or
sbb
dec
ret
repz
daa
das
mov
add
mov
in
add
mov
mov
cmc
mov
fdivrp
sbb
stc
jno
popa
inc
add
add
fsubrl
inc
pop
push
stos
cmp
jae
xor
out
mov
mov
add
xchg
lret
popf
test
sub
sub
jne
push
add
ljmp
jecxz
addr16
cmp
ret
mov
mov
popa
jmp
ja
es
mov
mov
jb
mov
in
mov
jbe
out
jb
mov
mov
mov
mov
add
cmpsb
push
js
jge
lahf
lock
add
push
inc
add
test
cld
xlat
pop
nop
add
fbld
repnz
mov
fs
push
add
jmp
std
cwtl
push
cmpsl
ja
add
in
scas
in
push
scas
mov
fisubs
add
bound
mov
std
packsswb
add
test
mov
push
jne
and
mov
add
data16
xchg
aam
popf
dec
test
fidivrs
push
add
and
mov
daa
outsb
mov
mov
in
mov
in
daa
rolb
mov
inc
dec
pop
leave
adc
lods
mov
add
outsb
ret
ljmp
mov
fadd
sbb
addb
dec
cltd
pop
xchg
aaa
icebp
rol
jne
add
dec
movsl
xor
cltd
addb
cwtl
sti
addb
dec
pop
rolb
scas
push
lock
sub
add
mov
add
dec
aam
rolb
mov
and
cmpsl
mov
sbb
iret
mov
pop
cwtl
pop
iret
call
sbb
rorl
jl
xchg
cmc
or
sub
in
into
jp
inc
and
lods
stos
pop
or
mov
add
dec
jo
mov
add
xor
in
incb
and
and
mov
lret
aaa
xor
add
or
add
add
test
fisubl
xchg
add
cld
lock
cmpsb
ja
cmpsl
mov
mov
enter
mov
stos
xor
push
rolb
mov
mov
pop
inc
dec
mov
add
xchg
rol
add
add
cltd
popf
popa
mov
push
adc
mov
cwtl
dec
mov
insb
fwait
pop
lcall
nop
add
loopne
mov
inc
add
fs
mov
aaa
add
mov
mov
jns
mov
sbb
test
dec
arpl
rolb
mov
add
push
cmc
xchg
add
add
jge
pushf
imul
dec
dec
cmp
mov
enter
test
mov
inc
lock
push
pop
inc
addb
push
add
push
add
sbb
add
add
add
add
mov
addb
push
add
lret
das
mov
adc
cmpsl
fiadds
jns
fistps
pop
scas
es
test
out
shrl
mov
mov
add
pop
jl
inc
add
add
jl
jp
imul
lea
inc
add
out
data16
out
repz
jbe
inc
jno
and
push
push
add
aaa
add
mov
jg
cmpsb
addl
rolb
jp
pop
push
xchg
add
and
inc
jge
add
mov
add
inc
idivb
add
push
pushf
sbb
testb
daa
rcl
ss
lods
inc
jb
mov
inc
dec
inc
pop
cvtdq2ps
out
push
movsb
xchg
testl
shrl
adc
loop
mov
pushf
xchg
adc
dec
add
mov
mov
jb
mov
loope
sbb
add
mov
iret
inc
ss
xchg
fdivrl
and
add
rolb
and
mov
jmp
jb
mov
xchg
dec
int
insl
into
mov
rolb
mov
adc
mov
mov
jno
je
test
nop
add
adc
mov
add
enter
clc
incb
pop
insl
outsl
mov
mov
sub
aad
fdivs
add
mov
mov
jmp
add
es
or
jne
push
push
jmp
and
mov
addb
inc
add
xchg
test
lahf
lret
es
insb
sbb
mov
aaa
test
xor
inc
add
arpl
xchg
sbb
into
aas
rcll
fdivrl
lds
xchg
popa
or
cld
loop
mov
les
xchg
mov
jo
mov
hlt
dec
lret
sub
cli
nop
add
add
or
mov
mov
icebp
outsb
sub
shll
mov
lret
je
mov
add
jbe
adc
mov
add
add
mov
xchg
mov
push
dec
mov
dec
jno
jno
pusha
add
jno
jbe
xchg
jno
dec
mov
loopne
mov
push
xor
mov
mov
and
mov
jmp
mov
pop
push
rolb
mov
pop
lock
add
cmpsl
jmp
es
insl
ljmp
jne
adc
adc
sub
jno
orl
test
movsb
xor
xchg
cmpsb
and
mov
or
mov
add
dec
shll
mov
add
push
and
int
add
add
add
mov
test
cmp
in
inc
add
mov
add
aad
ficoms
mov
mov
outsb
mov
test
add
shrl
cmp
dec
repnz
mov
leave
loopne
mov
daa
jno
xchg
ja
add
push
dec
sbb
stc
mov
or
adc
ljmp
mov
mov
add
cmp
int3
into
pop
aad
push
add
fsub
add
mov
test
ret
inc
add
cmp
sbb
xlat
xor
out
pop
sahf
mov
add
pop
aas
ret
outsl
jns
add
movsl
bound
mov
pusha
add
enter
jg
adc
mov
adcl
lahf
pop
cs
sub
xchg
repnz
push
xor
mov
add
push
mov
movsl
jmp
in
scas
dec
leave
pushf
mov
sbb
add
add
movsl
inc
sub
or
dec
daa
push
mov
jnp
mov
add
enter
add
sub
mov
pop
jb
mov
inc
popa
rolb
mov
sbb
cmp
arpl
pop
inc
loop
mov
cmp
add
and
ror
cltd
cs
jl
mov
mov
xlat
aaa
xlat
jmp
mov
insb
jp
int3
sbb
jne
notl
fidivrs
inc
shl
cwtl
push
add
dec
clc
mov
add
aas
rolb
mov
test
xor
mov
or
sbb
add
add
mov
adc
mov
dec
cld
lds
xor
mov
or
jnp
repnz
loope
mov
and
mov
cld
dec
mov
mov
scas
ret
out
lods
insl
insb
cmp
push
push
sbb
aaa
cmc
sub
es
mov
mov
aas
lea
add
inc
rolb
mov
push
cmp
xchg
xchg
sahf
mov
xchg
or
pushf
idivb
sub
xchg
pop
cmp
push
pushf
loop
mov
lods
mov
jle
add
push
jb
mov
sbb
pop
mov
pop
sbb
jns
sbb
rolb
addb
ret
mov
call
mov
dec
pop
insl
pop
ret
pop
stc
popf
les
xor
mov
mov
ljmp
inc
ds
cmpsl
int3
dec
dec
fprem1
pop
out
cmp
mov
mov
xchg
negb
add
mov
add
xchg
dec
sub
dec
mov
mov
inc
xor
mov
mov
xchg
xor
movsl
je
add
dec
imul
aaa
aas
sbb
or
hlt
jne
fidivl
sub
shrd
cmp
rolb
mov
mov
mov
fisubrl
mov
mov
xchg
andl
dec
mov
inc
jnp
aas
lds
push
fistpl
out
nop
add
add
in
rolb
mov
sub
movsb
push
or
add
mov
test
icebp
add
jo
mov
sub
add
jno
into
push
push
mov
movsl
insb
mov
clc
jb
mov
jo
mov
lcall
jb
mov
ret
outsl
movsb
gs
mov
aas
out
add
mov
pop
add
xor
mov
push
sti
test
mov
mov
rolb
mov
mov
add
adc
mov
ljmp
js
int
icebp
dec
mov
enter
addb
test
mov
pop
mov
movsb
int3
sub
inc
shrl
scas
scas
jl
lea
mov
dec
cmp
push
mov
fldpi
push
add
push
pop
fidivrl
into
xchg
jae
cwtl
leave
popa
push
movsl
outsl
fistl
mov
add
dec
mov
les
add
xor
jp
or
sbb
jno
add
add
mov
lcall
mov
test
add
cmp
sub
adc
mov
lods
xor
jnp
outsb
and
or
add
call
mov
pop
jno
fiaddl
mov
rolb
mov
sbb
outsl
ds
test
roll
sub
inc
add
mov
js
mov
aad
lahf
negb
mov
push
jne
aas
sbb
fidivl
add
xchg
add
mov
jae
add
pop
push
loope
xlat
pop
stos
out
popa
int3
out
outsl
mov
enter
or
call
add
in
gs
andl
inc
pop
popl
js
in
leave
loopne
mov
mov
jecxz
ret
popf
cmp
shll
add
loopne
mov
mov
pop
es
enter
stc
stos
or
add
jne
shl
add
fs
int
mov
add
mov
add
push
pop
push
pushf
and
xchg
or
iret
jne
je
add
pop
pop
inc
out
xchg
add
mov
aas
pushf
imul
nop
add
and
mov
mov
add
ljmp
lcall
dec
int
lahf
mov
sbb
sbb
sahf
mov
add
cmpsl
pop
add
mov
stos
xor
add
mov
lret
xor
imul
add
mov
test
lcall
xor
ljmp
mov
add
aam
jl
rolb
dec
in
mov
mov
add
aas
jnp
add
jmp
sub
mov
inc
push
ret
mov
dec
mov
mov
stc
cmp
xor
mov
mov
push
mov
aam
xor
imul
in
and
mov
add
pop
inc
add
mov
daa
sbbl
dec
aaa
testl
es
and
mov
xor
cmc
test
add
rolb
mov
loope
add
ljmp
fcmovu
addb
loopne
mov
jo
mov
notb
mov
sbb
mov
loope
add
mov
pop
cmpsl
aaa
movzwl
mulb
add
nop
add
mov
into
cmp
adc
add
add
cmp
push
mov
adc
adc
mov
mov
add
inc
sbb
fcoms
pushf
loop
mov
in
sahf
fiaddl
gs
dec
xlat
nop
add
adc
or
sub
testl
sub
and
and
repnz
add
mov
call
dec
pop
out
mov
daa
fcmovu
test
push
push
add
adc
sbb
rolb
mov
into
push
cmpsb
dec
xor
lds
cltd
iret
jnp
mov
mov
data16
add
addr16
add
ds
cmp
add
jo
mov
mov
mov
sub
add
lcall
pusha
add
mov
into
push
fnstenv
add
mov
in
sub
mov
outsb
call
lret
fstl
xlat
cwtl
faddl
sbb
or
cli
push
mov
cmpxchg
mov
inc
add
enter
data16
dec
xor
add
aas
lret
push
fnstsw
lcall
sbb
mov
fnstenv
and
dec
or
ja
rolb
out
add
insl
adc
mov
inc
add
sbb
mov
loopne
mov
add
jo
mov
adc
mov
mov
test
shufps
mov
add
fldl
repz
adc
mov
dec
mov
cs
mov
mov
addb
test
mov
addr16
push
mov
fs
int
push
or
and
add
mov
imul
jp
sbb
add
mov
dec
add
dec
fcoml
mov
xchg
add
mov
out
push
imul
pop
push
mov
add
repz
xchg
add
jne
cltd
push
das
push
pop
and
daa
jecxz
or
fucomip
mov
mov
add
mov
mov
imul
add
lcall
mov
cltd
pop
and
or
insl
je
and
ss
mov
mov
push
push
aas
mov
aas
imul
add
fstl
loop
mov
outsl
push
add
add
lods
repnz
xchg
add
push
lods
inc
push
cmp
xchg
add
fidivl
add
mov
add
and
xchg
mov
cli
jno
nop
add
insb
cmp
sub
sahf
dec
pop
popa
jno
sbb
mov
sbb
push
jp
in
nop
add
mov
ds
addr16
aaa
xor
xor
enter
sbb
outsl
mov
cli
push
sbb
mov
add
cmp
mov
jns
or
add
sbb
aam
mov
add
movsl
pop
aas
mov
add
mov
add
xor
add
or
add
add
dec
and
movsb
push
cmp
jmp
push
cld
loopne
mov
add
divb
add
loopne
mov
mov
add
mov
adc
mov
outsb
cs
mov
mov
mov
or
ss
repnz
js
dec
scas
push
jne
aad
add
mov
mov
lret
and
add
add
mov
sub
fidivrs
ret
pop
dec
pop
cmpsl
xchg
or
jo
mov
mov
int3
insb
pusha
add
ljmp
ficomps
jno
mov
pop
adc
sbb
divb
cwtl
xor
mov
mov
jo
mov
push
pop
jae
mov
fldt
jge
add
adc
mov
add
dec
xchg
add
mov
xchg
mov
lods
xor
test
add
dec
inc
xor
dec
or
imul
sub
ljmp
shl
js
push
cmp
jg
cmp
mov
pop
int3
pop
xor
in
and
or
clc
hlt
aas
xor
push
lods
or
push
aam
sub
mov
lock
fists
add
jne
daa
xchg
add
das
and
xchg
add
cmpsb
push
add
xor
push
in
push
jl
cmp
fldcw
fwait
mov
ja
pusha
add
out
call
enter
ds
arpl
xor
adc
mov
cs
rcrl
das
stos
out
repz
sub
add
mov
data16
ret
bound
mov
mov
sbb
add
jae
loopne
mov
jle
inc
ss
push
add
addr16
rolw
add
pop
jp
aam
jmp
push
lcall
mov
add
lods
push
add
add
test
push
jb
mov
jae
inc
add
add
add
lds
mov
adc
cmc
cli
mov
sbb
jbe
les
ror
test
lods
cld
jns
out
push
rolb
mov
loop
mov
adc
mov
loope
cmpsl
pop
push
add
fsubr
stos
and
mov
mov
repnz
cmc
adc
or
paddusb
inc
add
mov
ja
add
cmp
mov
test
loopne
mov
popa
std
xor
add
call
sub
push
or
pop
xor
scas
ss
faddl
jae
stc
popa
addr16
push
or
mov
add
addr16
sub
imul
push
mov
lahf
jmp
in
lds
ret
sbb
mov
add
ret
push
dec
sti
jo
mov
adc
mov
mov
in
xchg
lods
movsb
mov
daa
xor
movsb
mov
mov
inc
xlat
mov
loopne
mov
add
data16
add
test
addr16
pop
mov
fldcw
push
add
ficoms
insb
loopne
mov
and
mov
jge
imul
cmp
aad
mov
into
lods
add
mov
lcall
jmp
addr16
in
sbb
stos
or
sarl
xchg
dec
in
arpl
sub
stos
into
in
pop
out
ret
in
cli
inc
mov
adc
lret
mov
jno
fs
sets
loop
mov
aaa
dec
hlt
sti
sub
xor
mov
add
leave
leave
mov
add
test
mov
mov
fimull
mov
mov
mov
out
push
xor
pop
jmp
adc
add
add
loop
mov
xchg
lods
out
test
add
ljmp
jecxz
in
pop
leave
leave
sbb
lret
mov
aad
lret
add
fistps
out
push
iret
jb
mov
mov
add
add
mov
call
ds
inc
fildll
ret
out
iret
jnp
icebp
dec
lcall
test
repnz
ret
rcl
add
test
mov
aad
cmp
add
pop
fmulp
xchg
mov
mov
cld
call
add
dec
jns
pop
inc
mov
mov
lods
xorl
mov
mov
push
popa
and
mov
clc
shrl
rcl
shll
aad
cmovne
das
rolb
mov
mov
outsl
mov
pop
mov
push
rolb
add
mov
add
out
mov
call
enter
add
stos
orl
out
push
enter
adc
mov
mov
fdivrl
cld
loop
mov
adc
dec
in
movsb
mov
mov
fcomps
add
mov
mov
mov
sbb
fdivl
lods
adc
psubb
mov
adc
mov
dec
cwtl
lock
push
xor
adc
mov
pop
or
loopne
mov
dec
sub
xchg
xchg
mov
movsl
jmp
add
mov
stos
scas
and
mov
sub
mov
mov
xor
and
sahf
ja
insb
sbb
add
pop
insb
sub
cld
lods
mov
add
add
add
mov
pop
jecxz
arpl
fildl
pop
mov
not
add
sub
or
aas
pop
xor
mov
xor
and
mov
test
rol
add
add
leave
lcall
add
cmp
cmp
mov
adc
mov
mov
mov
adc
and
jl
imull
ficompl
lods
sub
outsl
lods
sbb
gs
mov
or
lds
sbb
add
dec
xchg
cmpl
out
hlt
rolb
mov
jno
cmp
pop
jo
mov
movsb
je
pop
sbb
fldlg2
mov
sbb
movsb
sub
dec
xor
mov
add
mov
add
aas
push
lock
out
test
mov
xor
mov
push
jne
mov
jae
adc
add
sahf
shrd
mov
cmp
inc
add
cli
cmp
mov
inc
add
fwait
cmpsl
ljmp
add
xchg
mov
lods
pop
mov
sbbl
repz
cmp
pop
or
fisubl
out
std
scas
in
add
out
pushf
sbb
stos
inc
xor
loopne
mov
mov
jno
fdivrl
mov
ss
push
add
nop
add
xchg
andl
and
jnp
xchg
mov
rolb
mov
outsl
jbe
adc
sub
mov
add
add
addb
lret
xlat
sbb
addb
inc
aam
xchg
push
popf
xchg
add
mov
jae
add
add
or
in
add
in
test
mov
jl
push
or
insl
test
fs
add
cmp
cmp
xor
jne
dec
iret
mov
dec
sahf
xchg
add
sbb
push
sub
push
popa
repnz
jp
add
mov
mov
xchg
scas
dec
ljmp
add
mov
insl
dec
cmc
inc
rolb
inc
lock
mov
ret
cmp
scas
loop
mov
enter
into
inc
cmp
stc
push
call
lods
adc
mov
inc
lock
mov
out
sbb
and
rorl
addr16
icebp
incb
pusha
add
aam
mov
mov
sub
add
insb
mov
lds
and
mov
rolb
mov
add
ficomps
push
sbb
sbb
mov
dec
mov
pop
push
fsts
or
jmp
jnp
and
mov
add
push
jns
sub
and
mov
pop
in
sbb
mov
add
push
sub
jmp
add
rolb
mov
std
jge
or
xchg
add
mov
mov
and
mov
xchg
add
outsb
sahf
in
mov
or
imul
and
mov
inc
inc
pop
inc
jnp
in
pop
push
aaa
int3
cld
das
mov
push
jns
dec
jge
xor
test
xor
inc
inc
add
sub
outsb
pusha
add
cmp
jns
mov
sbb
inc
ret
rolb
mov
adc
cmc
mov
add
push
mov
and
nop
add
add
nop
add
inc
jecxz
in
push
cmp
pushl
add
repz
xchg
mov
add
push
sub
lods
dec
lret
loope
adc
mov
in
push
call
sti
xchg
insl
cmp
jne
loopne
mov
and
rolb
mov
testb
les
mov
lock
mov
mov
cmc
pushf
xor
fwait
xor
repz
mov
into
mov
add
and
imul
sbb
sbb
push
dec
fcoms
mov
xor
into
outsb
movhps
cmpsl
push
mov
in
dec
xor
mov
aam
add
dec
cmp
mov
nop
add
add
sahf
ja
push
cmp
rolb
fsubs
mov
mov
mov
push
dec
push
hlt
scas
scas
sub
add
add
hlt
jns
pop
stc
sbb
xor
sbb
jo
mov
jbe
and
push
sbb
add
mov
pop
aam
lods
pushf
and
xchg
lock
pop
cltd
icebp
jmp
push
push
enter
pop
iret
push
mov
mov
mov
add
or
jmp
jno
punpckhbw
xor
mov
clc
mov
adc
bound
mov
add
xchg
scas
cltd
mov
or
add
repz
and
mov
das
sbb
cmp
xchg
push
mov
mov
ret
iret
mov
sub
ds
mov
int
loope
in
rolb
mov
jmp
movsb
das
sub
ljmp
pop
push
pop
lcall
int
xor
int
adc
mov
test
lcall
xchg
add
or
fildl
jle
jecxz
dec
adc
inc
jns
cli
xlat
popf
aas
add
mov
xor
imul
mov
lods
sbbl
sub
add
ret
sub
movsb
rolb
mov
mov
and
mov
xor
aam
or
add
add
mov
leave
in
cs
xchg
pop
xor
push
xchg
enter
add
imul
adc
mov
mov
fidivs
add
mov
sbb
mov
jg
dec
cmpsb
and
test
in
sbb
add
mov
jg
mov
aam
add
mov
sub
out
xor
mov
mov
mov
jl
fistl
addb
imul
popa
or
mov
add
xchg
add
xor
mov
aaa
or
mov
bound
mov
cmc
std
add
mov
push
imull
pop
jbe
ljmp
pushl
ret
daa
pusha
add
xor
repnz
sbb
pop
dec
fcmovne
cmpsl
push
outsb
cmc
aas
sub
mov
mov
mov
in
jle
clc
in
push
inc
mov
push
and
popf
sbb
add
callw
add
int3
push
pmaxsw
leave
int
add
ret
dec
lret
add
mov
add
mov
mov
bound
mov
jnp
add
mov
stos
add
xor
mov
add
xor
xlat
jge
ret
sbb
add
mov
mov
sarl
add
sbb
test
and
add
jecxz
dec
mov
xchg
scas
xchg
add
mov
out
push
pop
sarl
mov
mov
repnz
stc
inc
mov
push
stos
call
leave
sub
push
add
adc
mov
mov
aam
in
add
add
add
mov
mov
cld
push
mov
mov
aaa
fnstenv
add
faddl
mov
add
add
sub
paddq
mov
clc
lcall
inc
add
add
adc
mov
repnz
cwtl
mov
mov
mov
mov
dec
pushf
dec
cmp
inc
add
and
lcall
mov
mov
mov
cwtl
addb
or
daa
fisubrl
add
mov
imul
pushf
outsl
cmpsb
lods
mov
je
out
push
adc
mov
add
sub
xchg
jbe
rolb
aam
add
hlt
data16
add
add
mov
jae
inc
arpl
lret
push
add
scas
mov
inc
jb
mov
mov
icebp
jecxz
aad
add
mov
into
in
sub
add
lods
inc
push
fisttps
add
and
mov
jb
mov
cmp
rolb
mov
lds
nop
add
loopne
mov
out
jne
add
roll
and
mov
mov
mov
push
mov
cltd
outsl
xchg
add
testl
pusha
add
add
dec
jg
ja
cmc
inc
out
pop
fst
out
fnstenv
mov
data16
je
mov
jae
or
or
pushf
mul
das
addr16
mov
and
mov
push
sbb
mov
mov
jb
mov
or
pop
repz
iret
cmp
lds
outsb
jne
je
mov
je
test
add
mov
push
movsl
mov
jno
cmp
add
cmp
jecxz
icebp
xchg
stos
ss
test
mov
xor
mov
scas
stc
nop
add
lds
mov
daa
mov
aaa
push
data16
idivb
adc
imul
add
pusha
add
int
jns
insb
xor
mov
sub
mov
inc
push
add
mov
sub
sub
push
mov
and
add
sahf
push
add
xchg
add
aas
fidivrl
xchg
insb
icebp
sub
sub
je
inc
sahf
sub
jnp
push
xchg
xchg
cmpsl
mov
cmp
mov
cmpsl
lcall
adc
popf
aad
add
mov
add
or
imul
aas
bound
mov
inc
cli
mov
ljmp
dec
notl
xor
mov
ret
jp
or
push
add
add
mov
stos
jo
mov
jmp
or
enter
cld
inc
sub
rolb
mov
in
xchg
test
insl
pop
lret
sahf
loope
mov
xchg
imul
mov
add
jmp
xorl
dec
mov
in
sub
faddl
ss
xchg
add
mov
adc
mov
add
dec
ds
xor
cli
xor
mov
mov
mov
add
gs
rolb
mov
inc
add
movsb
iret
insl
xor
mov
fistl
scas
jnp
mov
adc
test
add
icebp
lods
or
sbb
add
aam
jecxz
outsb
es
pop
xchg
cli
fwait
cmp
insl
lds
fstl
repnz
xchg
jns
xor
ret
jmp
add
sbb
cli
push
add
ret
jecxz
xchg
or
ss
out
add
frstor
mov
xor
mov
sbb
add
mov
mov
add
lods
xchg
insl
insl
push
mov
mov
scas
mov
fistps
loop
mov
adc
mov
js
mov
hlt
pop
mov
xchg
or
mov
mov
test
mov
add
pusha
add
add
adc
mov
cs
jb
mov
mov
jmp
add
push
notb
rcrl
add
mov
and
cld
std
cmp
rolb
mov
js
jb
mov
cli
rolb
mov
push
add
xlat
add
aaa
iret
scas
insb
int
into
cs
pop
mov
mov
cmp
mov
icebp
lret
mov
in
mov
mov
add
pop
addb
mov
pop
cmp
fadd
sti
sub
add
add
add
cld
sti
add
adc
out
push
add
dec
cmp
ss
int
test
add
lahf
mov
inc
jle
mov
mov
in
in
in
iret
imul
cmp
movsb
pop
jmp
mov
mov
dec
mov
jg
addb
ret
push
adc
dec
repnz
imul
mov
imul
lahf
in
mov
push
add
push
add
cmpsb
das
and
mov
mov
mov
mov
xchg
add
scas
mov
push
imul
mov
add
pop
mov
xchg
test
icebp
cltd
or
add
add
arpl
negl
mov
add
mov
add
out
iret
andl
gs
lods
adc
xchg
adc
mov
fmull
sbb
xchg
ja
add
aaa
lret
dec
sbb
mov
mov
addb
cmc
push
dec
push
add
sub
mov
sbb
cvttps2pi
jecxz
daa
push
fabs
subl
int
add
std
push
cmp
enter
mov
adc
add
xchg
adcl
in
cmc
mov
mov
mov
mov
inc
xlat
test
sub
callw
dec
and
add
add
dec
loop
mov
mov
jl
add
mov
inc
add
ds
int3
aaa
call
jp
sahf
addb
push
dec
mov
mov
addb
scas
adc
mov
lcall
fidivs
adc
lahf
dec
loop
mov
inc
add
add
int3
std
icebp
cs
pop
rcll
imul
add
mov
mov
mov
mov
mov
das
call
mov
jmp
fs
test
jl
stc
xchg
push
jae
lock
jo
mov
mov
push
incb
in
lcall
add
imul
cld
fimull
mov
mov
stc
push
mov
pop
scas
cmp
in
sub
inc
mov
push
stos
mov
add
mov
mov
jo
mov
sbb
jb
mov
mov
mov
add
mov
nopl
or
addb
lds
add
pop
xchg
add
lods
mov
and
mov
sub
hlt
sub
pusha
add
cmpsb
cs
imul
stc
fnsave
test
mov
out
pop
or
lahf
dec
xorl
into
sub
push
pop
xchg
add
jg
add
dec
and
mov
add
mov
mov
cmp
lret
push
add
jns
aam
inc
sbb
add
mov
mov
mov
mov
mov
add
add
ficoml
mov
stos
cmp
andl
add
sbb
mov
cwtl
loopne,pt
mov
lret
jae
fcomp
es
push
inc
and
test
lahf
sbb
add
add
sub
std
mov
add
pop
daa
insb
repnz
mov
push
mov
fldl
lods
divb
xor
inc
or
pop
daa
addb
jno
xchg
dec
or
les
bound
mov
adc
xchg
ds
push
mov
mov
repnz
out
rolb
mov
rolb
mov
mov
add
lahf
mov
sbb
add
xchg
lahf
sub
push
mov
dec
mov
mov
sub
lret
jle
loop
mov
sub
add
mov
rolb
mov
sub
push
push
imul
dec
mov
sub
add
add
jge
add
or
cmp
mov
mov
mov
add
mov
add
sbb
mov
jae
test
jl
enter
mov
out
jb
mov
fdivrs
xchg
adc
jae
popf
out
jge
ljmp
add
aad
lret
pop
and
dec
xchg
sub
test
xor
lahf
orl
add
stos
sbb
xor
test
pop
inc
setge
mov
test
mov
jns
add
or
mov
dec
fucomp
cmp
cmp
add
daa
imul
inc
inc
je
xor
mov
xchg
push
dec
xor
add
pop
in
rolb
mov
mov
add
jb
mov
mov
roll
in
je
or
jo
mov
aam
add
push
push
insl
int
jne
mov
sub
sti
nop
add
stos
sbb
sbb
dec
ss
jbe
cmpsl
dec
xlat
cmp
jbe
js
inc
add
xchg
sub
add
add
add
mov
mov
scas
mov
bound
mov
mov
testl
xchg
lret
add
pop
dec
mov
mov
xor
pop
push
fldcw
out
sub
fnstenv
push
or
add
mov
imul
xor
int
repz
lock
aam
lods
dec
pushl
xchg
popa
fwait
mov
pop
mov
mov
roll
ret
jge
mov
or
mov
add
push
push
add
mov
sahf
imul
mov
add
or
dec
lcall
loopne
mov
add
fdivs
test
clc
stos
insb
xor
mov
stos
stc
fstps
sbb
sub
push
adc
mov
sub
cmp
cmp
mov
lock
movsl
push
addr16
pop
push
dec
push
es
dec
or
addb
in
or
lea
out
sub
xor
cld
cs
add
xchg
jg
call
fistpll
mov
dec
jnp
mov
fisubl
mov
popa
and
mov
rolb
mov
push
mov
mov
xor
xor
insl
call
out
ja
push
add
mov
repnz
ja
cmpl
sub
fdiv
or
dec
push
dec
es
cmpsl
pop
pop
jne
rolb
mov
inc
incb
mov
add
add
movsb
dec
popa
movsb
int
add
data16
cmp
add
mov
cmpsb
push
sub
je
loopne
mov
mov
rolb
mov
pop
mov
mov
fdivrl
adc
mov
mov
add
dec
add
mov
fsubs
mov
add
scas
icebp
mov
popa
sub
mov
inc
int3
lods
ljmp
cmpsl
hlt
add
and
mov
lods
bound
mov
inc
sbbl
js
pop
adc
inc
inc
dec
xor
add
sbbl
and
pop
jp
pop
add
hlt
cwtl
and
mov
mov
fidivl
loop
mov
mov
mov
aam
add
pop
adc
or
test
or
push
add
mov
mov
push
jns
inc
sbb
mov
mov
add
mov
or
add
add
cli
and
mov
mov
jno
addb
enter
pop
leave
push
lret
les
out
push
and
add
pop
mov
insb
mov
push
add
out
sbb
push
push
push
pop
idiv
loopne
mov
pop
mov
rolb
adc
pop
enter
insb
push
push
cmp
cmp
jne
in
aam
daa
inc
mov
stc
adc
add
mov
imul
jge
pop
cmp
add
or
push
push
sub
and
mov
dec
sub
push
and
mov
and
or
in
pop
mulb
loopne
mov
mov
mov
mov
add
xchg
add
lret
movl
jno
add
add
mov
cwtl
mov
and
rolb
push
xor
mov
lods
cmp
xor
mov
adc
mov
pop
push
mov
mov
push
jnp
and
xor
jae
int3
or
add
mov
push
add
pop
out
add
int3
les
pop
pop
stc
sbb
inc
repnz
xchg
xor
mov
aad
stos
fisubl
cmp
add
add
mov
mov
sahf
pop
xchg
add
or
shrl
cmpsb
mov
mov
add
imul
add
or
push
gs
add
add
jmp
mov
pop
outsl
pop
in
cmp
loope
inc
pop
dec
sbb
xor
xor
cli
jno
inc
jbe
bound
mov
add
cltd
cmpsl
aam
mov
mov
mov
mov
std
push
jb
mov
xor
ret
push
push
xor
add
push
test
mov
iret
lds
pop
mov
pop
push
push
arpl
insb
nop
add
xchg
call
mov
sub
popa
xchg
jg
add
mov
add
add
mov
lahf
mov
data16
popa
pop
sub
xchg
inc
out
mov
jl
inc
or
mov
add
add
fs
leave
fisubs
add
imul
add
mov
inc
jns
cmp
add
mov
arpl
adc
xchg
and
in
mov
xor
sub
mov
add
inc
sbb
popf
cltd
jg
xlat
popa
repnz
outsb
xchg
rolb
mov
inc
sbb
push
add
and
mov
in
adc
add
pushf
xchg
fwait
pop
xchg
push
fstps
add
xchg
or
add
mov
lds
mov
mov
add
int3
inc
add
adc
mov
dec
xchg
das
fdivrs
push
in
jb
mov
add
add
fwait
jno
stos
jnp
sbb
add
add
push
daa
adc
mov
mov
cmp
mov
add
test
add
rolb
mov
pop
cmp
mov
lret
mov
push
add
jbe
add
and
aam
add
js
nop
add
or
aaa
scas
dec
jge
jmp
mov
add
imul
inc
std
rcrl
mov
dec
jno
add
add
cmpsb
fwait
repz
sub
push
ljmp
flds
fwait
inc
add
loope
jo
mov
enter
mov
mov
sub
insb
out
cmpl
pop
repz
jo
mov
testb
mov
mov
mov
mov
movsb
jl
xor
mov
mov
jg
jae
fwait
and
cmpsl
jbe
fldt
loopne
mov
mov
into
jecxz
jae
pop
mov
cmc
xor
pop
xlat
sub
mov
lock
jb
mov
push
sahf
clc
mov
mov
mov
cs
cmp
or
push
jns
pop
aad
add
jb
mov
jmp
enter
popf
cs
and
mov
cli
pushf
das
xchg
stos
lds
sahf
pop
and
mov
sbb
std
movsl
xchg
sub
not
xchg
add
cmp
add
lds
dec
inc
push
xchg
push
add
out
mov
mov
add
mov
or
loope
sahf
shr
mov
out
je
add
jl
or
mov
xlat
ret
test
rcrw
loop
mov
inc
jmp
jge
mov
popf
inc
xchg
addb
push
lahf
pushl
add
pop
mov
mov
cmp
pop
xchg
repz
rcll
add
lods
movsl
mov
add
out
movl
mov
adc
cmpsb
popa
mov
mov
das
js
ja
jle
pusha
add
xchg
sub
mov
cwtl
mov
ret
jae
add
out
add
insb
mov
lahf
stos
icebp
pop
aam
mov
or
push
add
add
push
popf
clc
mov
add
add
xchg
push
jb
mov
mov
mov
inc
jle
addb
add
mov
lahf
cmpsb
lods
stos
daa
sbb
mov
push
add
push
hlt
ficoms
add
add
insb
mov
lret
aam
idiv
js
jmp
add
mov
daa
stos
ja
decl
sub
das
rcrl
add
mov
add
mov
xchg
adc
dec
fcmovnbe
jmp
sub
inc
mov
je
out
inc
ljmp
cmp
add
mov
mov
mov
xor
jb
mov
add
cmpsb
and
jno
fdivrs
popa
push
dec
pop
sbb
add
add
mov
mov
mov
cmpsl
sub
mov
sti
mov
gs
sub
sbb
xchg
fisttps
js
or
and
dec
test
mov
mov
jmp
add
popf
lcall
ret
dec
mov
std
mov
add
xchg
sub
xlat
add
mov
sub
mov
mov
jecxz
rolb
mov
add
mov
adc
sbb
sub
mov
add
mov
aam
imul
daa
jmp
mov
sbb
mov
mov
push
int3
mov
cmp
mov
push
add
das
insb
cmpsb
jae
fdivl
add
pop
inc
repz
out
or
mov
cmpsb
jbe
ret
pop
ljmp
push
jge
clc
or
sub
push
mov
sahf
in
mov
push
lds
xor
aaa
and
push
push
or
je
or
leave
pop
jp
in
mov
mov
popa
cmpsl
jge
lods
in
out
test
push
addb
push
push
pop
ss
add
leave
xlat
std
ja
and
add
test
push
add
cs
jecxz
stc
mov
mov
mov
lahf
dec
sub
scas
pop
les
mov
add
mov
outsb
mov
mov
cmpl
add
popf
sub
pop
aas
fidivs
add
mov
mov
pushf
mov
mov
inc
adc
call
das
fdivr
movb
icebp
sub
or
jne
sub
sbb
lods
insl
repnz
pop
jg
and
sbb
dec
aam
pop
loopne
mov
call
add
add
jo
mov
push
clc
aaa
jg
sbb
add
inc
cmp
and
fs
or
cmp
mov
cmp
add
push
aad
cld
add
mov
mov
les
or
mov
cmp
add
jle
nop
add
jnp
insb
sbb
mov
add
add
mov
in
adcl
movsb
sahf
pop
jge
sbb
dec
lds
popf
sub
add
scas
xchg
test
in
insb
stos
cmp
mov
jg
popa
xor
or
mov
mov
cltd
push
mov
mov
mov
arpl
arpl
stc
aam
stos
lds
mov
mov
out
arpl
jmp
test
in
push
dec
mov
fistpll
and
mov
shll
add
mov
and
mov
les
lods
lret
negl
ds
clc
xor
mov
fisttpll
pop
mov
cltd
pop
add
mov
mov
in
mov
mov
and
lock
cmp
xor
push
fnstsw
repz
mov
add
push
xchg
std
cmpsl
mov
add
mov
inc
add
jbe
add
mov
adc
mov
mov
push
inc
imul
push
lcall
add
xor
cltd
xor
mov
scas
lcall
pop
sub
in
mov
mov
add
decl
push
cs
push
imul
test
and
je
loopne
mov
push
mov
bound
mov
lahf
mov
sbb
gs
lcall
cwtl
inc
and
jo
mov
test
mov
mov
mov
sti
xchg
cmp
or
add
mov
add
lds
pop
insl
adc
mov
mov
mov
daa
push
cmpsl
push
sub
add
mov
mov
ret
dec
cwtl
outsb
ret
out
test
mov
and
mov
inc
add
dec
faddp
aad
push
push
mov
pop
inc
loopne
mov
ret
or
int
add
addr16
cld
scas
fildll
pushf
pop
mov
lret
mov
add
add
mov
xchg
hlt
loopne
mov
adc
nop
add
jo
mov
sbb
cwtl
rcll
mov
std
out
push
push
andl
mov
jne
in
es
push
add
mov
push
and
xchg
lret
fsubrl
loopne
mov
add
and
lods
cmp
xor
mov
stos
jae
and
pop
insb
mov
add
and
mov
add
lahf
out
addb
insl
xor
addb
cs
jbe
sub
pop
cmp
add
jo
mov
cmpsl
dec
and
mov
mov
ja
rcrl
xchg
add
xchg
add
addb
into
cmp
push
rolb
data16
add
or
sbb
add
add
add
lock
rolb
mov
push
mov
mov
mov
je
sub
rolb
push
test
adc
mov
jno
inc
iret
stc
jecxz
pop
cmp
add
hlt
sbb
mov
iret
cmp
add
js
hlt
cs
cmp
cmp
ds
and
mov
pop
mov
mov
add
pop
imul
add
fidivrl
movsl
scas
push
jl
repz
xchg
inc
add
fstps
lods
bound
mov
aad
add
outsl
pop
jg
add
add
add
mov
jnp
fdivl
scas
mov
adc
mov
add
loope
add
stc
jecxz
test
cld
insb
push
inc
cwtl
sti
pusha
add
arpl
popa
cmp
mov
test
push
xchg
insb
rolb
mov
lods
repnz
adc
add
iret
rolb
mov
addb
out
stos
jp
mov
mov
push
mov
adc
mov
pop
mov
sub
add
cmp
pminub
test
popf
out
xchg
aad
jge
mov
mov
add
add
or
lret
jb
mov
test
lods
inc
jnp
push
addb
addb
push
add
add
addb
and
mov
mov
ret
mov
loope
add
add
push
pop
mov
inc
pop
popa
dec
repnz
push
loope
xchg
ljmp
fs
in
or
adc
pop
adc
arpl
outsb
js
inc
lret
ljmp
sub
cmp
ficomps
push
jmp
mov
jg
add
cli
add
xchg
inc
xor
mov
xchg
int
test
xor
mov
in
mov
cmp
sbb
and
cld
adc
add
je
xchg
lret
cmp
xchg
ror
pop
xor
add
out
cmpsb
js
adc
mov
pop
cmp
jg
test
xchg
cmpsl
out
mov
mov
std
scas
pop
inc
movl
into
les
cmp
add
mov
mov
mov
push
sbb
xor
mov
pop
shll
out
mov
es
and
cmp
fldl
or
jae
mov
cmp
or
add
jmp
sub
sbb
xor
mov
in
rolb
inc
add
add
mov
movsb
jl
add
sub
jno
lds
aas
push
add
mov
lret
sbb
xor
mov
add
imul
xchg
data16
dec
leave
pop
sbb
add
and
mov
inc
jnp
arpl
xchg
fnstenv
test
add
mov
mov
mov
loope
dec
jne
lahf
jle
icebp
fmull
sub
add
stos
xor
mov
pop
push
inc
mov
insb
mov
mov
mov
mov
jecxz
outsb
pop
xor
jne
xchg
rol
add
mov
sub
outsl
scas
xor
adc
into
movsb
adc
mov
xchg
add
ret
int
xchg
rolb
mov
add
or
inc
dec
daa
dec
inc
add
sub
imul
icebp
pop
outsl
lret
mov
adc
sub
gs
add
add
fldcw
adc
mov
and
scas
mov
and
mov
xchg
sub
addr16
mov
outsl
inc
add
out
and
out
dec
jo
mov
cmp
fwait
lods
rolb
mov
stc
dec
in
and
mov
sbb
dec
fabs
xchg
add
mov
xchg
push
jns
sbb
pop
mov
call
jo
mov
daa
rolb
je
jg
mov
mov
xlat
out
jbe
mov
mov
pusha
add
push
mov
lods
cwtl
xchg
lods
mov
push
jbe
loopne
mov
add
cmpsb
mov
pop
dec
inc
into
mov
mov
push
inc
and
sub
mov
lretw
mov
cltd
cmpsb
mov
shl
mov
add
in
out
cmp
lods
cmp
inc
dec
hlt
arpl
mov
adc
cwtl
push
adc
mov
add
pop
dec
call
sbb
pop
insl
mov
rcll
mov
fstpt
jo
mov
lret
xor
mov
add
xor
sub
add
jo
mov
clc
xchg
cmc
cmp
push
lods
in
xchg
pop
sahf
adc
push
pop
sti
adc
add
add
filds
les
cmp
xlat
push
in
enter
gs
aaa
je
rcrl
add
rolb
mov
movsb
mov
and
lret
adcl
ficoms
sti
cmpsl
mov
das
int
pop
sbb
fisubrl
xor
cmpsb
xor
cmpsl
in
adc
into
pop
adc
mov
inc
ja
add
dec
or
xor
cmp
push
jae
movsb
testl
sbb
in
out
fdivs
xor
mov
mov
mov
jl
test
xor
cs
push
popa
jns
sub
fdivl
dec
and
pop
insb
fwait
ljmp
int
or
cmp
lds
xlat
and
mov
loope
mov
sbb
push
hlt
xchg
scas
test
jbe
lock
shrl
xchg
xchg
sub
pop
mov
adc
mov
mov
mov
fistps
pop
sub
mov
sbb
add
mov
jns
xchg
pop
mov
mov
dec
fnstsw
sub
loop
mov
mov
mov
ss
mov
add
add
fistpll
cltd
mov
mov
add
sbb
add
orl
inc
jle
stos
addb
outsb
loopne
mov
add
xchg
sti
sbb
pop
inc
push
mov
mov
jle
mulb
mov
sbb
mov
int
add
flds
scas
mov
add
pushf
push
inc
int3
xor
mov
add
xchg
dec
dec
enter
insb
push
mov
mov
rolb
mov
mov
cwtl
xor
push
push
mov
add
sub
notl
inc
xor
mov
mov
push
out
es
psrlq
adc
jne
adc
cmpsl
mov
sti
test
xchg
lea
cmp
lahf
daa
adc
pop
mov
bound
mov
mov
mov
lods
push
adc
inc
or
add
or
test
jge
stc
cmp
pop
push
sub
push
mov
mov
jnp
cltd
enter
fcmovnb
push
mov
in
add
aas
pop
pop
sub
and
in
xor
add
add
mov
and
iret
inc
enter
mov
mov
int3
xchg
add
and
or
mov
push
add
mov
rolb
mov
xchg
push
cld
xchg
movsl
and
xor
mov
das
or
mov
jmp
add
mov
movsb
add
mov
push
sbb
fwait
xchg
clc
adc
mov
lret
cs
pop
xorl
push
shr
js
insl
pushf
xchg
sbb
jecxz
sub
push
adc
add
mov
stc
mov
mov
add
pop
pop
mov
mov
and
lea
xor
cmpsb
loop
mov
arpl
add
insb
shll
add
aaa
xchg
mov
add
loopne
mov
shll
pop
sub
add
pop
xchg
add
xchg
xchg
pop
dec
movsl
mov
insb
sahf
frstor
in
div
add
ds
js
jno
loop
mov
sahf
mov
xchg
add
adc
mov
mov
das
clc
dec
mov
add
lods
cli
add
mov
add
xor
fstpl
cmpsl
jl
rolb
mov
add
push
jns
adc
mov
lods
add
xchg
cmp
js
jae
push
or
adc
andl
and
mov
push
mov
mov
iret
adc
mov
inc
add
int3
mov
das
inc
add
push
inc
subl
push
mov
mov
sti
aad
lcall
ret
xchg
mov
add
in
aas
add
push
and
and
mov
jae
pop
aas
pop
xchg
in
les
add
add
add
push
add
push
in
inc
mov
add
stc
sti
or
add
mov
xchg
in
xchg
and
mov
jp
cmp
add
test
ret
sub
inc
pop
pop
addr16
cs
xlat
and
add
jnp
push
fidivl
ss
test
cltd
pop
sub
mov
cmpsl
or
xchg
in
pop
jmp
xchg
cmp
inc
data16
mov
out
add
xchg
in
dec
jl
mov
add
mov
out
add
testl
call
ret
jno
push
lret
std
mov
push
repz
mov
jne
mov
mov
scas
pop
movsl
addb
cwtl
mov
into
scas
or
jecxz
add
sbb
in
inc
cli
nop
add
add
lea
add
sub
add
mov
rolb
sbb
mov
clc
cmp
dec
bound
mov
rolb
mov
in
or
es
add
and
pop
jnp
add
add
mov
xchg
dec
pop
inc
pop
dec
icebp
or
es
pop
jle
cltd
pop
xor
idivl
mov
add
xchg
and
addl
and
add
jmp
add
jp
xchg
js
leave
mov
cmc
pop
mov
mov
mov
data16
or
cmp
push
insl
ss
add
mov
movsb
xchg
cmp
out
imul
add
das
sbbl
aaa
pop
mov
add
mov
sub
mov
scas
leave
lcall
insl
xor
mov
add
mov
mov
mov
mov
flds
add
fcmovu
std
mov
arpl
rcrl
gs
or
rolb
mov
push
inc
lds
mov
adc
sbb
add
and
adc
sbb
jns
add
rolb
call
add
mov
shll
sub
leave
frstor
loop
mov
push
insl
cmp
or
mov
je
inc
add
xchg
pop
pop
jne
cld
jl
cwtl
cmp
movsb
insb
add
mov
pop
xchg
pop
cmp
aad
mov
mov
mov
mov
jl
call
cmpl
adc
in
sub
in
loope
push
dec
mov
cmpsb
mov
xchg
cltd
or
jl
jae
cmp
adc
ljmpw
jne
push
out
xor
mov
rorl
jle
sbb
insl
xchg
lods
test
cmp
dec
sbb
mov
imul
mov
stos
out
mov
push
add
lahf
push
sti
jne
movsb
addb
push
add
aad
add
mov
into
xchg
mov
adc
mov
in
sti
jo
mov
mov
adc
cltd
xor
add
pop
mov
mov
fmull
jg
push
cmp
sbb
jne
rolb
mov
inc
movsb
pop
mov
mov
inc
pop
cmp
lea
mov
add
pop
push
rolb
mov
dec
sbb
jb
mov
add
add
jo
mov
popf
gs
mov
push
jns
imul
xchg
add
lds
or
and
outsl
jg
add
adc
stos
ss
sub
cmpsl
lods
xor
insb
jmp
push
mov
addb
jge
pop
sbb
add
cltd
jno
leave
mov
addb
add
push
push
fcoml
pusha
add
subl
dec
mov
pop
rolb
mov
in
notl
mov
pop
xor
mov
fimull
je
mov
data16
push
add
in
ficoml
in
and
mov
mov
mov
add
insb
and
loop
mov
push
xor
outsl
inc
iret
subl
inc
add
or
fmul
push
push
mov
aaa
push
or
xchg
stos
call
sbb
add
add
daa
push
xor
dec
int
std
call
mov
fstl
mov
add
add
aas
cmp
addb
subl
xchg
ds
push
add
ret
sbb
push
dec
lods
ja
aam
repnz
mov
push
cwtl
xor
dec
out
add
mov
and
push
add
add
popf
and
mov
mov
mov
adc
pop
fcompp
xor
aam
mov
mov
mov
or
xor
mov
adc
lock
add
aaa
jecxz
push
push
jmp
mov
add
mov
adcl
push
mov
mov
pop
and
xor
enter
jmp
mov
jle
inc
add
adc
jmp
push
bound
mov
mov
cld
cs
dec
xor
sbb
mov
insb
xor
out
mull
mov
adc
aaa
dec
cmovl
inc
cmpsl
jnp
fcomps
inc
cwtl
sbb
jecxz
mov
add
icebp
pop
xchg
jl
pop
xchg
add
mov
das
sbb
jge
add
cmp
inc
inc
stos
repz
pop
movsb
imul
adc
add
mov
mov
aaa
addl
stc
stos
add
scas
dec
daa
lods
jge
nop
add
mov
mov
das
mov
cmc
mov
ret
xchg
testb
push
loop
mov
add
add
mov
inc
dec
mov
mov
adc
mov
lahf
lock
data16
mov
imul
imulb
lock
imul
into
shl
mov
and
mov
mov
mov
xor
mov
add
aad
pop
adc
mov
js
jecxz
jge
xor
decl
add
xchg
add
jg
rolb
jb
mov
sbb
add
mov
js
push
add
mov
andl
mov
cmp
xor
xchg
fcoms
add
cmp
pop
pop
cmp
fsts
or
cmc
pop
cld
aaa
lea
imulb
mov
sahf
scas
cld
push
mov
mov
add
sbb
jno
adc
mov
fistpl
mov
rolb
adc
mov
or
or
push
cmp
popa
sarl
ljmp
out
out
push
aad
xchg
add
mov
mov
inc
and
add
aad
push
mov
test
mov
add
mov
push
add
hlt
rcll
addb
orl
js
sub
xchg
shl
mov
or
sbb
lods
jbe
mov
cs
jmp
mov
add
jo
mov
pop
mov
mov
cwtl
xchg
push
pop
in
xor
sub
add
rolb
mov
push
aaa
insl
outsb
iret
sub
dec
sbb
je
xchg
ljmp
int3
mov
inc
rolb
mov
dec
sahf
mov
enter
add
sbb
stos
es
add
add
enter
ja
aaa
sub
mov
push
hlt
outsl
movsl
lret
ja
clc
xor
mov
and
je
jp
loop
mov
out
outsb
xlat
add
mov
and
and
lds
xor
add
mov
std
mov
mov
cmpsb
popa
push
mov
mov
call
mov
mov
bswap
in
iret
popf
dec
add
nop
add
repnz
jne
aam
jo
mov
push
icebp
push
sti
pop
pop
dec
adc
add
pop
xor
mov
mov
aas
xor
mov
mov
sbb
fsubrl
cmp
sbb
mov
testb
in
pop
push
sub
xchg
out
sbb
dec
xor
mov
jmp
pop
js
push
fucomi
xchg
dec
lods
ret
mov
dec
push
adc
mov
inc
or
inc
jae
or
das
xchg
cltd
mov
add
mov
lcall
xchg
out
es
popl
mov
xor
or
cmp
cmpsb
xor
lahf
nop
add
add
popa
jne
jecxz
xor
mov
das
movl
mov
rolb
mov
shrl
add
mov
add
int
adc
mov
mov
xorl
fildl
xchg
add
adc
mov
add
mov
test
lock
mov
mov
sub
mov
adc
mov
mov
mov
das
dec
mov
mov
in
decl
fwait
jle
add
push
imul
dec
sbb
add
add
rorl
add
pop
cs
inc
mov
adc
mov
pop
mov
cmc
call
mov
jmp
sub
xor
cmp
jge
ss
add
inc
mov
out
pop
cmp
cmpsb
scas
lcall
mov
in
test
pusha
add
loope
xor
add
add
sub
fwait
clc
fcomps
dec
ljmp
fsubp
jecxz
mov
mov
add
lret
insl
push
add
mov
cmp
leave
xchg
add
enter
add
enter
sbb
ret
enter
add
cld
mov
fcompl
add
mov
out
jno
insb
jo
mov
sub
mov
cmp
pop
lcall
or
sbb
adc
mov
dec
andl
sbb
push
jnp
cs
cmpsb
addb
cld
lock
jl
push
jmp
mov
addb
and
cmp
add
popa
pushf
push
rolb
mov
add
adc
sbb
mov
mov
sbb
push
or
and
mov
add
add
add
add
jb
mov
add
mov
in
repz
mov
add
xchg
lods
adc
add
add
jecxz
jno
push
cmp
mov
popa
xchg
mov
add
sbb
loope
cmp
mov
fwait
inc
mov
xchg
add
inc
jb
mov
mov
or
xor
mov
pop
fimuls
dec
add
jl
in
add
jno
loop
mov
inc
mov
lret
fstl
out
and
push
loopne
mov
lahf
pop
divps
or
mov
cmp
rol
pop
loope
mov
add
xor
add
add
inc
sbb
xchg
add
pushf
mov
mov
ret
jecxz
addb
pop
push
icebp
cmp
fldcw
add
or
cmp
int
ss
in
sahf
in
xchg
into
mov
inc
jne
cltd
mov
mov
and
mov
add
test
xor
mov
fsubs
mov
fmulp
testl
push
iret
test
and
or
add
nop
add
ds
shrl
add
add
xchg
popa
dec
dec
test
and
add
add
and
mov
and
push
jns
add
mov
mov
xor
mov
cmp
mov
out
add
push
sbb
add
rolb
mov
dec
xlat
into
mov
daa
lret
jecxz
mov
cmp
xlat
nop
add
or
mov
mov
cmp
test
ret
aad
rolb
mov
repnz
les
in
lahf
fcmovnu
xor
mov
sbb
outsl
and
mov
movsb
cwtl
add
mov
mov
aas
mov
mov
fsubrs
outsb
int
inc
add
roll
cwtl
jl
or
insl
ss
data16
mov
mov
daa
and
mov
xchg
lahf
xchg
xchg
fcomps
rorl
jge
inc
cld
inc
addb
mov
cmp
push
xchg
ret
arpl
jmp
pop
and
movsb
jns
add
fsubrl
pushf
jae
imulb
into
rolb
mov
mov
jp
or
sbb
inc
or
jg
fcoms
jb
mov
test
push
test
in
add
iret
xlat
inc
add
mov
pop
loope
pop
or
sub
cld
cmp
insl
cmp
jge
add
add
das
fucom
fidivrl
pop
sbb
adc
add
mov
mov
mov
mov
bound
mov
test
pop
dec
ret
mov
mov
loopne
mov
jo
mov
lds
decl
jmp
push
mov
mov
add
sar
jmp
sub
lods
push
mov
mov
clc
repnz
jae
rolb
and
lea
push
mov
xchg
ret
add
mov
xchg
ret
mov
add
add
mov
pop
push
mov
xchg
ret
add
lock
xchg
xchg
sbb
clc
repnz
jae
add
test
mov
clc
repnz
jae
add
add
add
hlt
cwtl
mov
push
mov
xchg
ret
add
mov
add
fwait
cld
nop
jmp
mov
add
enter
mov
mov
push
push
push
mov
xchg
ret
faddl
add
faddl
aas
stc
mov
clc
repnz
jae
dec
add
dec
push
clc
repnz
jae
test
sub
mov
xchg
ret
add
je
add
cld
nop
jmp
aas
add
mov
add
pop
jae
repnz
jae
nop
mov
cmc
mov
add
cmp
repnz
jae
add
add
jmp
add
out
or
add
mov
or
clc
repnz
jae
add
mov
xchg
ret
popa
scas
pop
add
add
jae
pusha
clc
repnz
jae
add
xchg
enter
push
call
addl
add
out
adc
push
add
jb
fwait
cld
nop
jmp
add
mov
jg
test
add
fwait
cld
nop
jmp
add
into
mov
fiadds
nop
jmp
add
nop
mov
lock
mov
add
repnz
jae
dec
mov
or
imul
nop
jae
add
cmp
sbb
adc
or
add
add
addl
cld
nop
jmp
add
xchg
cld
nop
adc
add
cmp
clc
repnz
jae
add
nop
rolb
fistps
cld
nop
jmp
or
cld
fildl
cmp
ret
clc
repnz
jae
mov
add
dec
cmp
repnz
jae
add
add
test
jp
cmpl
nop
jmp
add
jns
mov
clc
repnz
jae
pushf
add
dec
adc
repnz
jae
add
aas
add
aad
add
fwait
cld
nop
jmp
add
mov
popa
push
mov
xchg
ret
into
add
data16
sbb
rclb
rolb
xchg
ret
add
mov
push
clc
repnz
jae
add
jmp
mov
xchg
ret
lret
data16
aad
movswl
clc
repnz
jae
jg
mov
inc
inc
push
pop
mov
clc
repnz
jae
out
add
clc
repnz
jae
pop
mov
mov
nop
jae
into
add
enter
data16
das
jne
clc
repnz
jae
add
mov
mov
fsts
add
clc
repnz
jae
add
dec
in
and
push
mov
xchg
ret
push
add
add
jnp
inc
cmp
repnz
jae
or
add
mov
mov
mov
repnz
jae
add
add
mov
jns
jge
clc
repnz
jae
mov
mov
pushf
imul
mov
xchg
ret
inc
add
mov
add
stos
mov
clc
repnz
jae
lock
aam
out
xlat
lock
jle
clc
repnz
jae
push
add
mov
mov
fwait
cld
nop
jmp
mov
add
add
mov
clc
repnz
jae
aas
dec
add
andl
add
dec
stc
add
stc
and
clc
repnz
jae
test
mov
sub
sub
repnz
jae
mov
add
add
jp
lret
clc
repnz
jae
mov
mov
das
jb
fwait
cld
nop
jmp
add
mov
mov
nop
jae
add
inc
add
mov
mov
jne
sbb
in
and
add
add
adc
mov
add
add
add
repnz
jae
rolb
push
in
jae
xor
clc
repnz
jae
stc
out
add
add
mov
add
and
or
adc
addl
push
clc
repnz
jae
add
dec
data16
add
stc
repz
rep
push
mov
xchg
ret
add
add
mov
jne
fimuls
mov
xchg
ret
scas
cld
add
aas
cld
add
nop
jae
aad
add
jbe
imul
add
scas
add
jne
push
clc
repnz
jae
dec
push
dec
add
lock
pusha
clc
repnz
jae
mov
mov
enter
insb
mov
clc
repnz
jae
data16
or
add
add
clc
repnz
jae
stc
popa
adcl
jae
pop
nop
dec
add
add
inc
add
dec
clc
repnz
jae
add
add
pusha
add
and
clc
repnz
jae
pop
scas
or
mov
add
cmp
in
add
fisttpl
popa
mov
sbb
in
inc
push
stos
mov
test
sbb
repnz
jae
test
mov
pop
enter
add
add
clc
repnz
jae
inc
add
add
inc
add
push
adc
add
repnz
jae
add
add
add
clc
repnz
jae
add
dec
ret
clc
repnz
jae
add
mov
faddl
mov
fwait
cld
nop
jmp
mov
cmp
enter
ret
push
mov
xchg
ret
mov
lock
mov
mov
xchg
ret
xchg
add
add
or
outsb
or
add
repnz
jae
add
aam
mov
push
mov
xchg
ret
mov
outsb
mov
clc
repnz
jae
add
pushf
add
add
mov
fwait
cld
nop
jmp
cmp
add
add
push
mov
xchg
ret
mov
xchg
xchg
lret
repnz
jae
add
add
mov
add
clc
repnz
jae
dec
add
rolb
jp
fwait
cld
nop
jmp
add
shlb
add
in
push
mov
xchg
ret
add
add
sahf
add
clc
repnz
jae
add
add
add
rcll
and
mov
fwait
cld
nop
jmp
hlt
leave
add
faddl
pop
sub
push
mov
xchg
ret
mov
mov
ret
mov
ljmp
fldl
xchg
ret
xchg
mov
add
clc
repnz
jae
add
lret
mov
cs
clc
repnz
jae
add
and
jecxz
add
clc
repnz
jae
add
mov
nop
jae
add
mov
aas
add
lods
mov
fwait
cld
nop
jmp
hlt
fildl
aad
xchg
movsl
imul
nop
jae
push
add
mov
dec
mov
push
mov
xchg
ret
mov
mov
add
xor
add
clc
repnz
jae
add
mov
fwait
cld
nop
jmp
mov
into
inc
aad
inc
rcl
rolb
mov
jmp
incl
add
stc
mov
add
andl
push
and
insb
jne
clc
repnz
jae
add
xorl
adc
add
add
push
add
push
mov
xchg
ret
or
cmc
addl
cmp
cld
nop
jmp
add
pushf
rclb
scas
jne
clc
repnz
jae
mov
mov
jmp
and
push
add
add
aas
mov
sbb
add
mov
imul
push
mov
notb
fs
movsb
imul
jl
sbb
repnz
jae
popl
cmp
movb
add
fwait
cld
nop
jmp
add
mov
clc
repnz
jae
pop
popa
add
push
fwait
cld
nop
jmp
xchg
shl
clc
repnz
jae
add
mov
add
fs
pusha
push
mov
xchg
ret
xchg
imul
mov
add
or
fwait
cld
nop
jmp
dec
add
stc
xchg
push
mov
xchg
ret
add
leave
add
mov
or
mov
nop
jae
add
add
and
mov
clc
repnz
jae
out
add
into
jg
jne
jmp
add
mov
add
cld
nop
jmp
and
add
mov
jae
hlt
add
lret
and
clc
repnz
jae
add
cmp
add
in
jne
sahf
add
hlt
add
add
imul
ret
mov
xchg
ret
add
mov
clc
repnz
jae
out
dec
cmp
jo
mov
nop
jae
aam
add
pusha
inc
add
mov
dec
sub
add
add
mov
into
and
add
mov
clc
repnz
jae
sbbl
fimull
jae
stc
xchg
add
mov
repnz
jae
push
pushf
add
add
mov
fwait
cld
nop
jmp
mov
js
popa
add
repnz
jae
add
and
and
push
mov
xchg
ret
add
xchg
out
mov
clc
repnz
jae
add
add
flds
popf
fwait
cld
nop
jmp
add
aam
add
mov
mov
xchg
ret
add
sub
cmpl
fwait
cld
nop
jmp
into
add
push
push
mov
xchg
ret
add
dec
subl
mov
or
add
sar
add
shlb
repnz
jae
or
faddl
or
pushf
aad
pusha
clc
repnz
jae
add
add
add
add
mov
adc
cld
nop
jmp
mov
add
add
fiaddl
xchg
ret
lret
add
or
mov
clc
repnz
jae
adc
cmp
add
pusha
add
fwait
cld
nop
jmp
add
mov
adc
mov
push
push
mov
xchg
ret
mov
mov
test
fwait
cld
nop
jmp
add
popl
cmp
add
mov
add
pop
clc
repnz
jae
nop
add
or
mov
xchg
ret
inc
add
add
sub
repnz
jae
inc
push
or
inc
add
test
jge
clc
repnz
jae
xchg
add
inc
add
clc
repnz
jae
data16
clc
repnz
jae
add
add
mov
clc
repnz
jae
nop
out
lahf
mov
push
mov
xchg
ret
hlt
add
aas
jo
mov
repz
repnz
jae
add
pop
add
mov
clc
repnz
jae
push
nop
add
cmc
add
mov
in
loop
jb
add
rcrb
and
push
push
mov
xchg
ret
add
imul
pop
pushf
mov
loop
add
cmp
test
push
add
clc
add
sbb
add
add
popa
hlt
aas
outsb
push
clc
repnz
jae
mov
mov
leave
add
sbb
clc
repnz
jae
popa
into
add
lock
pushl
push
mov
xchg
ret
dec
mov
pushf
add
add
clc
repnz
jae
hlt
add
popa
add
mov
push
mov
xchg
ret
pusha
add
add
sub
nop
jae
stc
push
mov
call
clc
repnz
jae
inc
add
into
js
add
add
clc
repnz
jae
and
mov
add
push
mov
xchg
ret
inc
add
add
fwait
cld
nop
jmp
pop
add
push
and
ret
testb
cmp
ret
aas
sub
push
mov
add
das
sub
adc
add
mov
add
pop
mov
nop
jmp
add
data16
fwait
cld
nop
jmp
fdivrl
dec
mov
ret
pop
xorl
mov
xchg
ret
mov
add
add
mov
xchg
ret
pop
sub
test
fwait
cld
nop
jmp
add
add
pop
add
clc
repnz
jae
add
mov
mov
add
clc
repnz
jae
hlt
add
push
push
add
call
clc
repnz
jae
add
add
test
rclb
inc
in
add
cmc
add
imul
push
mov
xchg
ret
add
mov
mov
mov
mov
xchg
ret
scas
aas
popa
pushf
cmp
jmp
jae
adc
and
pop
clc
repnz
jae
add
add
int3
push
fwait
cld
nop
jmp
cmp
add
stc
nop
add
test
push
mov
xchg
ret
mov
rclb
inc
popa
mov
jae
mov
mov
jg
sub
repnz
jae
aas
or
inc
add
mov
cld
nop
jmp
mov
mov
aam
add
add
cmpl
fwait
cld
nop
jmp
add
dec
test
cmp
inc
push
mov
mov
xchg
ret
add
cld
cld
ficoms
mov
xchg
ret
addl
jne
add
add
bound
mov
sarl
add
push
add
mov
add
add
mov
adc
rolb
mov
add
repnz
jae
add
mov
pushf
cmp
popa
add
mov
xchg
ret
add
repnz
repnz
jae
add
or
inc
add
fisttpll
xor
inc
add
or
and
mov
xchg
ret
add
add
aad
xchg
clc
repnz
jae
mov
mov
data16
dec
push
push
mov
xchg
ret
or
adc
add
fwait
cld
nop
jmp
dec
xchg
sub
push
mov
stos
add
cltd
pop
add
add
add
out
add
sbb
cmp
repnz
jae
add
mov
xchg
pop
push
mov
xchg
ret
add
inc
mov
leave
pop
push
mov
add
add
pop
inc
add
mov
or
or
add
repnz
jae
add
mov
adc
inc
mov
jno
add
cmpsl
movb
pop
movsb
mov
nop
jmp
nop
mov
pusha
add
push
add
repnz
jae
inc
aas
mov
inc
cld
cs
clc
repnz
jae
mov
add
mov
clc
repnz
jae
or
add
add
or
add
add
aas
into
enter
jge
clc
repnz
jae
or
mov
aam
lds
add
repnz
jae
pushf
add
mov
mov
clc
repnz
jae
add
imul
mov
push
mov
xchg
mov
xchg
ret
cmp
mov
fwait
cld
nop
jmp
nop
add
call
fwait
cld
nop
jmp
add
lea
push
mov
xchg
ret
add
add
shlb
out
push
inc
fwait
cld
nop
jmp
add
pop
add
push
sub
mov
push
mov
xchg
ret
xchg
sub
adc
cld
nop
jmp
fildl
lock
push
clc
repnz
jae
into
add
push
mov
push
clc
repnz
jae
and
test
add
add
fwait
cld
nop
jmp
add
or
push
push
pusha
xor
mov
add
adc
nop
jmp
add
add
add
add
clc
repnz
jae
xchg
mov
daa
cmp
nop
jae
add
mov
add
mov
sub
mov
xchg
ret
enter
add
mov
clc
repnz
jae
add
add
sarl
jmp
mov
popa
mov
inc
add
or
clc
repnz
jae
cmp
sbb
repnz
jae
hlt
pop
mov
cld
mov
add
push
clc
repnz
jae
lret
imul
test
clc
repnz
jae
aam
add
clc
mov
push
mov
xchg
ret
add
inc
hlt
xchg
std
push
clc
repnz
jae
imul
dec
push
clc
repnz
jae
pop
add
mov
imul
rolb
add
enter
jle
sbb
clc
repnz
jae
push
add
mov
add
cli
mov
add
add
push
aad
add
fwait
cld
nop
jmp
xchg
add
lret
iret
jmp
add
hlt
aas
add
dec
add
add
add
mov
nop
jae
inc
cld
add
add
push
clc
repnz
jae
or
mov
clc
repnz
jae
test
add
add
test
enter
jae
add
add
inc
add
test
add
clc
repnz
jae
mov
sub
repnz
jae
mov
add
add
add
clc
repnz
jae
add
mov
pop
clc
repnz
jae
popl
add
add
add
pop
mov
push
mov
xchg
ret
add
test
adc
add
repnz
jae
add
jnp
clc
repnz
jae
add
xchg
add
mov
repnz
clc
repnz
jae
fildl
mov
xor
clc
repnz
jae
add
hlt
add
add
inc
clc
repnz
jae
mov
stc
xor
mov
cs
clc
repnz
jae
add
inc
add
add
dec
rolb
xchg
ret
cmc
lock
add
mov
pop
add
clc
repnz
jae
or
or
stc
add
jae
mov
push
add
test
push
mov
xchg
ret
jg
mov
add
movsb
loopne
mov
rolb
mov
add
decl
or
add
lock
imul
push
adc
mov
clc
repnz
jae
add
dec
fmull
fnstenv
sar
nop
jae
add
adc
push
nop
jae
mov
mov
and
sub
in
inc
add
out
add
add
lret
add
add
repnz
jae
push
mov
add
mov
rcll
add
add
jb
mov
push
add
mov
push
clc
repnz
jae
pop
mov
add
fsubl
xor
add
jmp
add
and
add
int3
push
clc
repnz
jae
add
mov
mov
mov
clc
repnz
jae
add
add
mov
imul
jae
inc
add
cmc
inc
scas
jecxz
add
add
mov
xchg
ret
add
addl
pop
fwait
cld
nop
jmp
add
stc
cmp
dec
add
repnz
jae
enter
mov
push
mov
xchg
ret
inc
xchg
into
imul
adc
repnz
jae
rolb
inc
mov
mov
push
cs
fwait
cld
nop
jmp
add
add
into
add
fmuls
nop
jae
add
pushf
add
cmc
sbb
mov
add
cld
nop
jmp
add
jg
add
mov
clc
repnz
jae
aam
add
inc
push
mov
xchg
ret
enter
faddl
sub
pop
clc
repnz
jae
add
enter
repnz
jae
cmpl
pusha
mov
lcall
jmp
mov
int
dec
add
repnz
jae
and
add
or
add
clc
repnz
jae
lock
stc
dec
inc
push
or
add
out
incl
add
xchg
push
jmp
nop
jmp
cmc
dec
add
cmp
add
repnz
jae
add
add
add
add
mov
loop
push
mov
xchg
ret
add
cmp
xlat
aam
xor
push
push
mov
xchg
ret
mov
test
adcl
xor
add
clc
repnz
jae
fildl
stc
pop
clc
repnz
jae
add
add
xorl
incl
mov
lock
jmp
stc
inc
add
push
cmp
mov
mov
clc
repnz
jae
dec
nop
add
mov
or
clc
repnz
jae
add
clc
repnz
jae
add
add
add
imul
nop
jae
add
add
add
mov
push
mov
xchg
ret
pusha
add
xor
pop
decl
push
mov
xchg
ret
add
add
stc
test
add
xchg
inc
add
and
imul
add
add
repnz
jae
add
lret
clc
repnz
jae
popa
add
mov
dec
add
sub
clc
repnz
jae
aad
mov
sub
in
incl
in
jecxz
push
roll
push
add
add
push
fwait
cld
nop
jmp
dec
popl
add
mov
repnz
jae
push
add
add
push
nop
add
repnz
jae
hlt
mov
adc
add
imul
nop
jae
add
add
pop
xor
clc
repnz
jae
cmp
aam
add
repnz
jae
mov
aad
add
sub
push
mov
xchg
ret
add
add
leave
fwait
cld
nop
jmp
lret
test
push
add
call
hlt
inc
add
imul
add
mov
clc
repnz
jae
add
push
add
inc
repz
mov
clc
repnz
jae
dec
or
pop
mov
add
repz
incl
add
pop
mov
clc
repnz
jae
add
pusha
add
mov
push
mov
xchg
ret
or
mov
jne
clc
repnz
jae
add
div
inc
add
dec
or
add
lret
clc
repnz
jae
add
inc
add
lret
movsb
adc
add
clc
repnz
jae
nop
pop
add
pop
push
insl
mov
clc
repnz
jae
mov
add
add
hlt
xor
mov
popa
clc
repnz
jae
push
cld
mov
pop
add
andl
jae
add
stc
popf
add
fwait
cld
nop
jmp
or
add
add
addr16
loope
repnz
jae
add
fcmovnb
push
push
mov
stos
mov
add
add
repz
mov
in
add
data16
push
add
mov
clc
repnz
jae
add
mov
mov
fwait
cld
nop
jmp
add
negl
repnz
jae
inc
mov
jl
repz
cld
nop
jmp
pop
cmc
mov
add
mov
jne
clc
repnz
jae
add
add
add
add
clc
repnz
jae
dec
push
enter
pop
push
clc
repnz
jae
add
fildl
aam
inc
inc
mov
jne
clc
repnz
jae
rolb
add
xchg
push
mov
xchg
ret
add
add
pop
push
push
mov
xchg
ret
add
pop
jmp
dec
aam
inc
add
or
add
out
mov
xor
push
mov
xchg
ret
rolb
lock
sahf
push
clc
repnz
jae
or
add
jg
clc
clc
repnz
jae
test
aam
test
fwait
cld
nop
jmp
add
add
jge
pop
xchg
pop
mov
add
add
add
mov
dec
fwait
cld
nop
jmp
mov
lret
or
xor
add
clc
repnz
jae
add
cwtl
rol
clc
repnz
jae
dec
mov
cmc
mov
mov
mov
je
fwait
cld
nop
jmp
lock
inc
mov
repnz
jae
shrb
and
int
fwait
cld
nop
jmp
inc
add
into
or
mov
aaa
mov
lea
push
mov
xchg
ret
mov
add
add
or
repnz
jae
or
mov
add
incl
add
dec
add
xchg
add
lods
clc
repnz
jae
popa
push
add
jg
add
pop
rep
fwait
cld
nop
jmp
or
dec
xor
dec
out
inc
add
out
cmc
push
cmp
in
add
mov
nop
add
add
fwait
cld
nop
jmp
push
add
into
add
or
aas
jmp
add
jg
cmp
add
xchg
cmp
clc
repnz
jae
add
add
popa
fs
repnz
jae
addl
popa
push
mov
xchg
ret
add
and
stc
push
clc
repnz
jae
add
cmp
loopne
mov
icebp
mov
mov
inc
fwait
cld
nop
jmp
nop
add
out
loopne
mov
add
out
mov
clc
repnz
jae
add
test
jmp
nop
jae
add
or
push
mov
sbb
dec
in
repnz
leave
add
add
xchg
mov
adc
add
clc
repnz
jae
add
pusha
add
nop
jmp
add
lret
add
add
xor
mov
cmpsb
stc
and
fwait
cld
nop
jmp
add
add
push
mov
mov
push
mov
xchg
ret
add
pop
inc
pop
shr
clc
repnz
jae
add
add
add
repnz
jae
mov
add
repnz
jae
rolb
add
subl
push
clc
repnz
jae
inc
add
mov
xchg
arpl
test
clc
repnz
jae
add
add
es
inc
inc
add
jmp
out
add
dec
add
add
nop
jae
mov
stc
add
clc
repnz
jae
add
mov
ja
lea
clc
repnz
jae
add
cmp
xchg
repnz
jae
add
clc
repnz
jae
imul
scas
dec
orl
imull
rep
fwait
cld
nop
jmp
add
pusha
add
aas
andl
clc
repnz
jae
push
add
adc
add
test
loopne
lcall
sti
push
add
mov
mov
clc
repnz
jae
dec
cmc
mov
pop
push
mov
xchg
ret
add
int3
pop
clc
repnz
jae
inc
pushf
add
pop
je
clc
repnz
jae
add
push
ljmp
ret
loop
add
cmp
add
dec
and
push
mov
xchg
ret
inc
mov
add
adc
add
push
mov
xchg
ret
add
add
out
add
fwait
add
clc
repnz
jae
pusha
hlt
cmp
add
mov
out
fwait
cld
nop
jmp
add
mov
push
mov
xchg
ret
lock
cld
and
sbb
repnz
jae
add
push
mov
add
mov
clc
repnz
jae
imul
cmp
in
or
add
add
jle
add
add
addb
fbstp
rclb
cli
inc
add
add
popa
add
jmp
add
add
adc
sub
clc
repnz
jae
cmp
inc
mov
movsb
sub
jmp
jmp
add
mov
and
mov
clc
repnz
jae
xchg
mov
mov
push
mov
xchg
ret
addl
fists
repnz
jae
mov
add
mov
test
add
nop
jae
mov
add
nop
jae
push
add
scas
add
add
aas
add
fwait
cld
nop
jmp
lock
add
add
cld
nop
jmp
aad
or
jne
fwait
cld
nop
jmp
cld
add
mov
add
pop
testb
cmp
ret
nop
add
sub
clc
repnz
jae
add
jg
fistpl
repnz
jae
mov
add
aam
push
fwait
cld
nop
jmp
dec
add
add
add
xor
mov
add
clc
repnz
jae
addl
js
push
mov
xchg
ret
into
and
mov
add
rolb
inc
dec
push
push
mov
xchg
ret
add
add
push
mov
xchg
ret
add
push
enter
addb
jmp
sub
add
ret
add
add
push
rep
clc
repnz
jae
pusha
add
cmc
add
test
mov
clc
repnz
jae
dec
add
lock
or
add
repnz
jae
sub
inc
add
nop
jae
hlt
mov
add
mov
test
add
clc
repnz
jae
add
enter
sbb
mov
xchg
ret
add
push
add
add
ror
adc
cld
call
test
faddl
add
movzwl
clc
repnz
jae
mov
repz
repnz
jae
add
add
add
add
mov
push
mov
xchg
ret
out
push
mov
ljmp
or
add
add
inc
push
pushf
add
mov
xchg
ret
add
dec
add
lock
repnz
jae
stc
add
xchg
sbb
repnz
jae
push
add
add
out
push
fwait
cld
nop
jmp
add
dec
add
add
repnz
jae
mov
aam
add
fwait
cld
nop
jmp
into
add
add
add
mov
push
mov
xchg
ret
pushf
pushf
push
add
lahf
mov
clc
repnz
jae
dec
add
into
add
mov
testb
cmp
ret
pop
add
add
add
outsl
push
fwait
cld
nop
jmp
inc
leave
and
or
push
clc
repnz
jae
popa
add
add
mov
clc
repnz
jae
dec
mov
jmp
add
add
mov
push
add
add
clc
repnz
jae
add
pusha
add
add
xor
add
cmc
fsub
add
add
push
mov
xchg
ret
add
mov
sub
popa
add
repnz
jae
into
into
add
enter
fwait
cld
nop
jmp
aam
aam
mov
dec
mov
inc
add
idiv
clc
repnz
jae
sub
mov
mov
jmp
jmp
and
clc
repnz
jae
data16
add
into
lret
and
clc
repnz
jae
add
add
repnz
jae
mov
cmc
mov
mov
xor
add
clc
repnz
jae
add
xor
push
mov
xchg
ret
pushf
mov
cmp
nop
jae
add
mov
nop
jmp
add
push
add
add
fcompl
mov
clc
repnz
jae
imul
add
adc
cld
nop
jmp
mov
add
clc
repnz
jae
add
add
ret
jmp
jmp
add
add
and
ss
clc
repnz
jae
clc
repnz
jae
inc
mov
add
popa
mov
push
mov
xchg
ret
enter
aad
fs
add
pop
add
add
repnz
jae
popl
les
repnz
jae
add
aam
add
add
clc
repnz
jae
add
mov
clc
repnz
jae
push
faddl
add
add
loopne
mov
mov
clc
repnz
jae
aam
push
inc
add
and
mov
mov
clc
repnz
jae
dec
add
xchg
add
add
clc
repnz
jae
add
add
lods
not
push
mov
xchg
ret
add
add
jg
clc
repnz
jae
xchg
cmc
add
sub
pop
or
repnz
jae
add
sub
rolb
xchg
ret
cmc
dec
push
push
scas
lret
dec
cmp
cld
nop
jmp
and
or
fcmovnbe
sbb
popa
add
mov
xchg
ret
enter
and
push
clc
repnz
jae
enter
nop
add
clc
repnz
jae
lock
sar
repnz
jae
add
add
add
add
cmp
nop
jae
mov
scas
mov
push
mov
xchg
ret
and
xchg
sbb
mov
xchg
ret
mov
fildl
leave
add
ret
ret
leave
mov
clc
repnz
jae
add
dec
sub
clc
repnz
jae
into
dec
add
int
enter
jmp
add
jg
add
add
pusha
add
nop
jmp
add
jg
inc
hlt
add
adc
push
clc
repnz
jae
xchg
mov
add
js
movsb
push
mov
xchg
ret
add
add
nop
aam
fwait
je
clc
repnz
jae
mov
add
push
mov
xchg
ret
mov
call
jae
repnz
jae
add
aaa
cmp
icebp
clc
repnz
jae
inc
inc
faddl
add
mov
push
mov
xchg
ret
aas
add
mov
jbe
cmp
loop
mov
xchg
ret
sub
mov
mov
clc
repnz
jae
and
add
fucomi
push
repnz
clc
repnz
jae
add
add
repnz
jae
dec
imul
add
mov
repnz
jae
fmul
add
test
repnz
jae
push
add
xchg
lea
repnz
jae
mov
test
dec
lea
nop
jae
add
add
add
aaa
jne
rolb
mov
mov
clc
repnz
jae
add
mov
clc
repnz
jae
mov
add
movsb
clc
repnz
jae
add
add
add
adc
mov
add
clc
repnz
jae
and
popa
push
leave
pop
clc
repnz
jae
dec
push
add
add
add
repnz
jae
add
aas
add
add
nop
jae
add
into
add
add
add
mov
add
sub
inc
add
inc
aad
mov
leave
cmp
popa
add
repnz
jae
add
lds
call
ljmp
out
add
push
mov
xchg
ret
and
add
mov
xchg
ret
add
dec
xchg
pop
cld
ret
adc
add
xor
add
clc
repnz
jae
add
mov
data16
sar
repnz
jae
add
mov
dec
aam
add
add
add
mov
repnz
jae
mov
mov
push
movl
repnz
jae
mov
add
mov
lock
clc
repnz
jae
add
mov
js
jle
add
incl
add
add
popa
fisttpll
nop
jae
dec
add
add
mov
call
nop
jae
add
imul
add
mov
rclb
jne
inc
add
add
add
idivb
repnz
jae
add
jg
add
rolb
mov
pop
push
fwait
cld
nop
jmp
xchg
mov
mov
add
es
push
clc
repnz
jae
add
add
add
scas
pop
test
fwait
cld
nop
jmp
and
mov
in
movzwl
fwait
cld
nop
jmp
push
and
test
dec
or
mov
xchg
ret
mov
push
pop
hlt
mov
clc
repnz
jae
mov
add
out
add
clc
repnz
jae
or
jg
cld
jg
add
clc
repnz
jae
add
cmp
mov
mov
clc
repnz
jae
scas
add
repnz
jae
add
hlt
push
add
dec
imul
clc
repnz
jae
add
add
cld
test
mov
xchg
ret
into
mov
mov
push
mov
xchg
ret
or
aam
lret
mov
sub
clc
repnz
jae
add
add
test
fwait
cld
nop
jmp
add
faddl
pushl
clc
repnz
jae
pushf
dec
lret
mov
push
ljmp
xchg
pushf
or
add
mov
mov
xchg
ret
push
mov
add
nop
jae
mov
add
pusha
out
xchg
insb
je
clc
repnz
jae
add
or
repnz
jae
add
inc
mov
lds
lea
fwait
cld
nop
jmp
imul
add
imul
nop
jae
aad
mov
cmp
mov
je
clc
repnz
jae
or
hlt
sub
repnz
jae
cld
or
xchg
cmpl
add
add
repnz
jae
add
dec
add
repnz
jae
push
mov
add
mov
clc
repnz
jae
cmp
add
loopne
mov
mov
enter
mov
inc
add
or
mov
scas
dec
add
clc
repnz
jae
mov
mov
clc
repnz
jae
adc
pop
fwait
cld
nop
jmp
add
add
add
add
bound
mov
add
add
repnz
jae
add
xchg
add
out
stos
xor
clc
repnz
jae
add
leave
or
add
push
mov
push
add
pop
sub
das
add
push
add
clc
repnz
jae
aam
mov
add
popa
in
xchg
jne
cwtl
mov
clc
repnz
jae
pushf
fildl
mov
mov
cmp
fwait
cld
nop
jmp
pusha
jg
lock
jmp
enter
or
add
dec
mov
add
popa
clc
repnz
jae
add
out
cld
dec
cmc
addb
daa
xchg
add
add
loopne
repnz
jae
add
mov
add
movsl
pop
cmp
jae
mov
add
inc
mov
test
fwait
cld
nop
jmp
hlt
add
dec
add
xchg
dec
push
clc
repnz
jae
add
push
add
add
push
shll
add
add
clc
repnz
jae
add
rolb
clc
add
clc
repnz
jae
mov
dec
add
inc
pop
mov
add
fwait
cld
nop
jmp
mov
mov
add
clc
repnz
jae
add
dec
add
dec
test
pop
push
mov
xchg
ret
add
aad
scas
inc
mov
mov
fwait
cld
nop
jmp
add
add
add
dec
mov
clc
repnz
jae
dec
add
add
cld
nop
jmp
mov
adc
in
pushl
push
mov
xchg
ret
pop
mov
add
nop
jae
cld
add
mov
add
add
adc
mov
clc
repnz
jae
add
add
xor
movl
add
xchg
mov
mov
clc
repnz
jae
add
xchg
add
push
mov
dec
pop
je
scas
add
add
inc
mov
xchg
add
dec
push
add
mov
jle
inc
push
add
jo
mov
xor
out
or
fistpl
cli
in
xor
dec
or
arpl
cmc
jns
lods
mov
cmpsl
mov
mov
add
add
jge
cmp
out
adc
mov
mov
stos
and
mov
lods
out
in
sbb
dec
sahf
and
aam
mulb
mov
scas
mov
pop
hlt
popf
xchg
mov
xor
mov
mov
popf
dec
mov
sbb
dec
ficomps
mov
into
pop
inc
dec
sti
push
push
jne
clc
les
aam
iret
sub
add
pop
mov
push
in
les
push
push
mov
lcall
jno
jp
jl
add
push
inc
add
mov
push
jge
pop
mov
mov
inc
add
push
cs
mov
jno
lcall
mov
mov
std
sahf
movsl
add
rcll
add
add
lcall
lds
pop
xor
mov
sub
aam
outsl
fstl
mov
les
iret
roll
mov
add
add
cmp
or
imul
adc
mov
mov
push
add
push
add
pop
sub
movsb
pop
pop
dec
mov
hlt
adc
inc
add
test
add
add
add
ss
cmp
in
pop
pop
jns
xor
mov
mov
repz
pop
mov
mov
sub
xor
mov
add
or
icebp
into
fisttps
loopne
mov
add
or
in
nop
add
mov
dec
sbb
cmp
jo
mov
dec
sub
out
add
mov
add
jo
mov
cmp
xor
stc
or
mov
aaa
adc
add
jno
lods
mov
addb
sub
sahf
hlt
add
fwait
push
out
add
idiv
cmc
mov
add
add
push
pop
mov
sbb
add
repnz
sbb
out
pop
loop
mov
int3
clc
fldcw
sti
ret
jmp
xchg
add
add
sbb
xchg
or
sub
jb
mov
cmp
sbb
push
mov
dec
xchg
sbb
lods
adc
mov
mov
bound
mov
xchg
gs
add
mov
xor
jns
lret
adc
not
add
data16
sbb
js
test
scas
inc
inc
sub
repz
mov
out
dec
mov
dec
mov
in
cltd
in
inc
subl
pop
sbb
lcall
lods
jge
add
pusha
add
xlat
rcl
add
stos
pop
add
mov
icebp
or
add
mov
mov
and
mov
cld
push
aam
or
mov
adc
mov
xchg
jne
aad
jp
add
push
shll
cwtl
clc
icebp
xchg
jecxz
mov
inc
add
cmc
js
add
mov
imul
loopne
mov
add
mov
add
pop
lret
ds
gs
sub
xchg
add
shll
pop
jle
movsb
add
mov
in
rolb
dec
inc
pop
xor
mov
jo
mov
fwait
push
sbb
cs
push
fs
and
lea
add
mov
cmp
dec
into
rolb
mov
cmp
jp
pop
lahf
inc
add
loopne
mov
xlat
cmp
out
mov
lods
xchg
loopne
mov
inc
negl
cli
jl
in
scas
mov
add
repz
jns
add
lods
push
sub
imul
xor
mov
cmp
mov
add
movsb
repnz
mov
mov
shll
dec
fnstsw
and
inc
dec
and
hlt
and
add
lret
add
add
xchg
dec
add
sbb
hlt
xor
mov
pop
loopne
mov
add
adc
xchg
fbstp
scas
loope
mov
add
cmp
add
add
mov
rolb
mov
insl
cmc
cmp
jmp
dec
sbb
out
fsubs
jo
mov
jl
jmp
cmp
jno
movsb
lret
pop
popf
dec
int3
nop
add
mov
inc
add
add
push
pop
sbb
dec
movsl
stos
push
cs
lret
loop
mov
xchg
mov
sbb
sti
push
aad
or
std
outsb
ss
popf
repz
jmp
sub
xor
lea
mov
mov
xchg
add
push
sub
push
lea
sub
adcl
and
mov
add
mov
mov
mov
out
sub
pop
jo
mov
cmpsl
in
add
or
mov
out
arpl
push
dec
mov
mov
imul
adc
mov
cmp
test
mov
into
xlat
mov
mov
jp
mov
mov
pop
ss
mov
dec
outsl
ret
pop
xor
push
ss
addb
les
mov
xchg
nop
add
add
jb
mov
add
add
inc
add
jbe
push
add
sbb
and
push
add
insb
xor
add
inc
add
add
arpl
mov
test
inc
das
je
scas
xchg
inc
jmp
mov
add
add
leave
fsub
add
std
push
call
jo
mov
fldenv
cmp
pop
mov
push
jnp
lds
imul
lods
out
test
pop
jle
mov
dec
and
mov
lock
sbb
cmp
add
add
xlat
push
repnz
dec
fcoml
mov
add
lock
ds
outsb
test
push
jae
ret
inc
add
das
ljmp
adc
mov
push
fcmovnb
insb
sbb
xchg
or
sbb
jp
ret
cmp
movsb
sbbl
lods
sahf
pop
mov
pop
cld
pop
ficoms
int3
dec
mov
subl
scas
add
push
mov
jb
mov
xor
xchg
add
add
loop
mov
mov
cmc
jnp
fwait
sub
inc
push
mov
add
lods
lods
addb
ret
lahf
iret
push
ret
push
push
push
dec
xlat
add
mov
test
dec
hlt
test
popa
out
das
xchg
fbld
cmpsb
mov
add
mov
and
mov
dec
inc
pop
dec
cmc
fwait
fwait
mov
mov
jns
testl
rorl
inc
jmp
add
mov
add
mov
pop
sbb
add
xchg
cmp
mov
popf
sbb
add
mov
mov
scas
out
into
fidivs
push
lahf
mov
imul
pop
movsl
fsubrs
idiv
lea
jbe
lods
sbb
sbb
add
movl
mov
mov
call
mov
xor
mov
mov
add
sub
add
sbb
cmp
mov
mov
push
lret
sti
testl
lock
mov
mov
lea
gs
cltd
pop
or
mov
icebp
loope
lcall
int
add
jno
add
mov
addb
in
aas
scas
iret
xchg
add
shll
mov
push
add
mov
add
push
add
and
mov
jnp
in
sbb
add
xchg
or
jl
add
or
dec
lcall
add
mov
xchg
add
cmp
nop
add
and
jae
xchg
add
loopne
mov
aas
int
jle
imul
cmpsl
adc
mov
cmp
hlt
repnz
mov
mov
mov
add
das
add
mov
add
rolb
sti
jge
push
lock
mov
mov
add
or
test
ja
ja
add
add
sub
inc
push
add
loop
mov
add
sub
out
mov
add
je
loopne
mov
ljmp
sti
jbe
outsl
ffreep
xchg
xor
pusha
add
outsl
lret
out
xor
sub
mov
mov
stc
xchg
jge
xchg
push
and
mov
pop
or
mov
mov
enter
mov
add
fiadds
mov
add
lret
clc
lcall
push
loope
or
add
mov
xchg
add
je
inc
pop
adc
gs
pop
bound
mov
cli
and
add
add
adc
mov
mov
push
sbb
add
or
or
mov
cmpsb
icebp
sahf
aam
sbb
mov
jbe
add
ljmp
add
mov
lret
movsl
aas
jno
xchg
in
add
sahf
fisubl
add
fs
jge
xor
push
add
cli
daa
sub
or
fcmovb
jb
mov
and
push
outsb
or
add
mov
mov
adc
in
in
mov
mov
ret
mov
mov
lret
add
add
jno
cmpsb
push
cmp
dec
or
aaa
mov
add
pop
in
rolb
mov
add
cmpsb
xchg
stos
dec
mov
add
or
icebp
push
hlt
mov
cmc
jb
mov
dec
ret
add
inc
sbb
sbb
pushf
xor
int
enter
out
arpl
add
and
mov
cs
adc
movsl
dec
push
push
add
add
and
in
addb
pop
push
cmc
mov
add
fidivrs
pop
sbb
sub
add
dec
lock
mov
pop
pop
xlat
iret
stos
bound
mov
sbb
dec
dec
pop
je
jnp
fistl
dec
mov
inc
add
xchg
inc
clc
cmp
add
movsb
xlat
jge
gs
insb
loope
jle
push
add
notl
jl
inc
adc
test
sub
mov
into
ss
ret
add
sarl
pusha
add
inc
push
cmp
or
mov
mov
add
or
add
mov
sub
ljmp
jl
push
add
rolb
mov
jae
scas
adc
mov
sbb
push
cmp
cltd
ss
add
mov
out
and
inc
jno
lret
test
or
add
outsb
mov
ja
mov
mov
out
enter
mov
mov
jb
mov
jb
mov
cwtl
jae
jmp
mov
mov
xor
add
inc
add
test
cmp
ret
ja
add
add
push
outsb
mov
jmp
cs
mov
fs
mov
ljmp
mov
inc
add
jge
iret
inc
dec
jle
add
in
and
mov
and
leave
repnz
xor
mov
mov
in
sub
mov
mov
rolb
mov
iret
mov
add
add
sbb
movsl
mov
push
mov
mov
inc
sub
popf
pop
jb
mov
jnp
cltd
ja
add
xchg
xor
mov
add
mov
jl
stos
dec
push
sbb
mov
fchs
add
mov
add
sbb
push
add
xchg
outsl
sub
test
mov
es
pop
sub
es
fistpl
inc
pop
sub
cmpsl
sub
pushf
outsb
cmp
add
iret
insb
push
push
sbb
sbb
je
cltd
fnstenv
jbe
add
imul
rolb
mov
or
add
fisubrl
test
and
rolb
mov
rolb
mov
add
pop
ret
ss
jl
int3
xchg
jmp
int
sbb
add
hlt
cli
adc
mov
or
mov
add
mov
and
rolb
mov
enter
cmp
sbb
lret
adc
sti
jge
and
add
cmp
loope
out
rolb
mov
rolb
mov
add
push
sbb
popf
xor
sbb
cltd
jo
mov
int
cltd
jmp
in
mov
add
adc
add
add
add
xchg
je
sbb
mov
sbb
xchg
add
int
and
stos
int3
rol
mov
in
sub
add
add
mov
mov
ret
lret
mov
addb
arpl
mov
mov
les
pop
add
leave
rcrl
add
add
push
inc
ret
cli
inc
sbb
js
lods
test
jg
sub
add
mov
mov
pusha
add
rolb
mov
push
inc
jecxz
fstl
rolb
movsl
hlt
les
mov
iret
fstps
push
push
imul
in
or
gs
push
push
push
jge
sbb
out
push
nop
add
add
mov
sbb
lahf
pop
mov
xchg
add
or
icebp
and
mov
xor
mov
adc
cmpsl
dec
call
add
or
std
idivl
shrl
aas
nop
add
lret
xchg
cmp
inc
enter
and
add
xor
add
add
mov
mov
mov
mov
add
aam
inc
push
rolb
pop
outsl
imul
add
mov
mov
rolb
mov
dec
jp
sbb
add
add
daa
cwtl
and
aas
stc
adc
shrl
sub
stos
xchg
add
add
mov
sti
std
cwtl
xor
mov
add
push
loope
pushf
adc
mov
dec
int3
mov
jb
mov
jae
aaa
ja
test
mov
mov
mov
faddl
inc
sbb
xorl
imul
cmp
add
rolb
mov
add
push
int
add
mov
movsb
outsl
call
mov
xor
dec
cmp
pop
int
mov
mov
shll
push
jge
cmp
add
mov
pop
popa
cmp
and
mov
stc
jg
push
and
inc
lds
xchg
add
adc
push
imul
xor
or
mov
add
mov
inc
xchg
mov
or
add
fwait
cmp
xlat
test
prefetch
pop
xchg
inc
add
pop
popf
lds
scas
and
ljmp
sbb
fisubrl
xchg
mov
ja
pushf
and
cmp
cmp
outsl
pop
mov
outsl
mov
mov
mov
rcrl
std
sub
add
mov
add
loope
push
jmp
insl
ret
sbb
jl
jb
mov
jp
popa
xchg
mov
insb
insl
into
push
mov
add
xchg
cmp
or
sbb
ret
aam
push
fisubl
mov
mov
mov
add
movsl
dec
xor
addb
repz
bound
mov
cmp
and
lret
jo
mov
add
or
add
in
ret
dec
mov
lcall
sbb
add
sub
fcmovnu
jl
jo
mov
pop
lret
mov
push
xor
mov
push
in
fsubr
rorl
cmp
and
mov
outsb
lock
mov
test
mov
stos
arpl
ljmp
into
mov
addb
sbb
popf
insl
lcall
mov
inc
fs
test
and
mov
mov
loop
mov
lods
cltd
imul
pop
sbb
add
es
lods
mov
mov
mov
cli
js
mov
loopne
mov
mov
das
adc
aad
cmp
es
adc
add
add
add
push
inc
add
mov
add
repz
push
jno
je
mov
leave
and
mov
cwtl
and
inc
xor
dec
test
dec
and
dec
xchg
scas
addl
lret
add
mov
xchg
imul
push
pop
push
cli
iret
sub
fcoms
popf
mov
mov
pop
mov
ljmp
mov
dec
mov
xor
jecxz
add
mov
dec
add
mov
add
add
jne
add
jbe
inc
inc
add
add
cli
sbb
inc
mov
xchg
loope
add
jbe
add
dec
lods
psubw
sub
jo
mov
pop
in
xor
mov
push
mov
in
mov
add
dec
dec
ret
mov
scas
xor
xchg
aaa
nop
add
test
inc
ja
test
sub
sub
push
mov
decl
add
add
or
ret
mov
cmp
add
add
lods
roll
int3
push
inc
push
gs
iret
cmp
xlat
out
mov
mov
lret
or
cmp
add
pop
clc
incl
repz
adc
cmpsb
sub
inc
dec
push
cli
push
jmp
int
cld
mov
xchg
add
add
insl
and
jl
dec
insl
mov
mov
cwtl
stc
jae
add
enter
xor
imul
mov
adc
mov
add
pop
push
add
call
mov
cmp
add
mov
mov
push
mov
or
inc
add
sbb
je
nop
add
add
push
mov
sub
outsl
push
leave
push
jb
mov
add
mov
popf
addb
mov
and
sbb
add
add
cmc
and
mov
dec
loope
xchg
icebp
push
cli
pop
mov
ss
loopne
mov
xchg
sbb
lds
fimull
cmp
jecxz
and
or
add
mov
ret
mov
xchg
xchg
xchg
hlt
xchg
adc
xchg
inc
or
mov
sbb
add
cmp
mov
mov
cmp
mov
test
mov
add
idivb
in
std
and
mov
dec
inc
xchg
popl
fisttpl
adc
mov
mov
lret
cmp
pop
jecxz
ret
mov
pushf
adc
mov
xchg
in
sbb
xchg
inc
fldenv
rolb
mov
add
mov
sahf
lods
loope
jp
insl
pop
outsb
xchg
sarl
in
insb
lods
lret
es
mov
xchg
loope
pop
pop
pop
roll
jae
sub
es
push
out
mov
push
jbe
inc
out
sub
imul
les
cmp
into
xchg
add
mov
sub
cld
hlt
lret
or
lods
cmc
lret
cmp
mov
add
sub
iret
stos
add
rcrl
sbb
push
adc
mov
add
push
out
or
mov
inc
add
imul
popf
movsl
cmc
mov
mov
mov
out
add
mov
jne
out
pop
jp
test
mov
mov
jo
mov
cmp
push
inc
add
mov
add
sub
test
js
dec
mov
mov
rolb
mov
or
adc
mov
jmp
add
cmpsl
repz
lahf
dec
pop
adc
mov
faddl
xchg
rolb
mov
test
and
rolb
mov
jmp
insl
pusha
add
repnz
in
pusha
add
xchg
jp
add
cmp
xor
adc
add
dec
mov
jno
add
bound
mov
enter
mov
cltd
xor
mov
cmpsl
mov
addb
addb
pop
dec
mov
and
pop
mov
add
add
jmp
ds
pop
imul
dec
pop
in
sub
cmp
rolb
mov
inc
or
and
push
add
cmp
sbb
xchg
jg
dec
rcr
ljmp
cld
pop
addb
movsl
mov
call
test
add
add
add
push
stc
in
jg
xchg
add
mov
mov
mov
add
mov
aas
fcoms
mov
adc
xor
out
std
inc
sub
mov
mov
cmc
fs
ret
add
add
in
pop
rolb
mov
lret
fs
xchg
add
xchg
addb
pop
mov
push
inc
cmp
add
lret
add
adc
mov
jmp
je
mov
mov
mov
je
add
clc
sti
popf
mov
add
gs
inc
xchg
mov
mov
lret
cmc
rolb
mov
xchg
jmp
outsl
fucomi
push
test
dec
mov
pop
insb
cmp
or
adc
bound
mov
je
sbb
xlat
mov
pop
test
inc
popa
out
and
mov
mov
dec
push
jnp
sahf
ja
in
inc
add
mov
out
xor
out
adc
mov
push
insb
mov
scas
xchg
fwait
mov
mov
xchg
lcall
jns
dec
mov
test
add
das
xor
dec
inc
ljmp
in
xchg
and
mov
das
sub
lods
pop
or
add
xor
add
inc
fimuls
dec
and
lcall
mov
stos
xlat
popf
lock
add
rolb
lahf
xchg
and
mov
scas
icebp
push
xchg
arpl
sbb
add
xchg
dec
pop
add
stos
orl
aas
add
mov
cmc
ja
add
mov
pop
add
aam
xchg
add
pop
lret
mov
stos
xor
mov
rolb
and
les
rcr
xorl
mov
add
addb
sti
test
xchg
add
mov
adc
mov
cld
pop
or
mov
int
leave
jg
lods
or
and
mov
sub
xchg
push
push
aaa
xchg
add
mov
or
call
je
push
mov
les
sbb
sbb
and
out
idivl
adc
fisttps
mov
add
rolb
out
sub
jbe
movb
add
and
mov
mov
into
and
mov
add
outsb
jb
mov
pop
cmpl
mov
pop
cmpsl
adc
mov
insl
arpl
loopne
mov
inc
ja
out
and
dec
push
add
add
add
aas
lret
out
ljmp
jnp
movsb
sbb
adc
mov
jecxz
adc
mov
add
mov
jge
vpavgw
inc
cmp
or
int3
test
fs
js
mov
and
mov
mov
push
jecxz
add
stos
lds
test
pop
cmp
add
add
add
mov
in
cs
push
inc
mov
iret
inc
sbb
aaa
mov
mov
insl
cmc
movsl
leave
scas
or
cmpl
call
xchg
xor
mov
add
int3
out
leave
rolb
mov
je
or
add
add
mov
jecxz
or
add
or
xchg
jmp
mov
mov
add
xor
sub
mov
add
mov
add
dec
aaa
push
faddp
add
mov
popa
mov
mov
push
outsb
jge
add
xchg
and
add
mov
gs
adc
mov
dec
les
push
pusha
add
mov
out
mov
mov
adc
dec
and
add
mov
inc
and
xchg
std
adc
add
mov
sub
notl
dec
dec
jg
xchg
add
loope
ja
mov
aas
mov
dec
sbb
add
inc
add
add
and
mov
inc
add
addr16
and
add
cmp
or
mov
add
cmp
rolb
mov
stos
mov
cmc
imul
add
mov
or
cmpsl
adc
xor
jns
inc
mov
push
fisttpl
add
adc
ljmp
pop
mov
push
fwait
mov
arpl
cmpsl
xor
mov
sti
mov
mov
dec
mov
mov
pop
or
mov
addr16
cmp
popa
and
mov
add
lock
pop
inc
test
mov
sbb
bound
mov
shrl
push
jnp
jne
dec
rolb
mov
sbb
pop
push
mov
push
add
decb
sbbl
inc
lret
xor
mov
mov
mov
cwtl
mov
aaa
or
sub
mov
fldl
in
push
fs
rolb
fs
bound
mov
rcrl
insb
pop
cld
leave
push
sbb
testl
dec
out
add
scas
sub
das
pusha
add
lods
adc
mov
adc
mov
scas
sbb
push
popf
int3
add
pushf
pop
or
mov
add
sbb
repz
into
add
pop
add
imul
inc
js
loope
clc
cmp
cli
es
push
insb
pop
dec
and
insl
mov
and
mov
cmp
nop
add
testl
cld
or
lds
adc
mov
sbb
mov
jl
mov
mov
mov
test
in
add
mov
mov
push
cmp
mov
xchg
cmp
fcomps
mov
ja
jnp
sbb
aaa
sbb
cwtl
mov
fstp
hlt
out
pop
xor
add
cmp
push
push
adc
or
imul
in
inc
add
mov
add
add
xor
inc
std
inc
add
mov
cli
dec
or
loopne
mov
mov
test
pusha
add
add
push
push
in
jmp
repnz
jno
push
jo
mov
inc
out
rolb
add
pushf
rolb
xchg
and
bound
mov
mov
push
stc
pop
dec
insb
jne
pop
xchg
push
iret
lahf
cs
aaa
push
and
mov
pop
xchg
add
pop
cmp
in
int
fldt
lods
mov
shrl
mov
jae
pop
jge
cmp
aas
xchg
roll
mov
scas
into
xchg
sub
xlat
cltd
xor
mov
out
js
jmp
cmpsl
lds
or
fwait
icebp
xchg
push
add
add
push
inc
or
je
std
pop
sub
dec
sub
inc
push
jo
mov
add
mov
xchg
inc
add
arpl
cmp
das
xchg
mov
stc
sbb
add
add
lret
or
add
mov
cmc
dec
cmp
call
cmpsb
pushf
push
add
lcall
mov
push
xor
mov
add
pusha
add
add
add
push
sub
add
push
jmp
xor
ret
cmp
roll
cmp
int3
inc
das
int
mov
cltd
out
cmp
int3
pop
jg
push
pop
jb
mov
push
in
ret
cmp
test
fistl
cmp
mov
in
and
mov
imul
rolb
mov
ja
sbb
mov
outsl
cs
aad
jl
scas
mov
mov
sub
aas
stos
xor
aad
fs
push
insb
mov
inc
add
xor
mov
cltd
addb
out
sub
sbb
adcl
mov
add
mov
es
inc
mov
mov
aas
sub
sub
mov
jl
aas
push
lock
pop
sub
mov
mov
pop
pop
fsubrs
or
push
rolb
mov
js
inc
cld
xchg
push
cmp
mov
pop
push
rolb
mov
lahf
mov
push
mov
pop
lods
dec
cltd
jp
out
and
mov
bound
mov
add
sbb
push
sub
add
mov
bound
mov
mov
and
rolb
mov
add
and
mov
lret
into
pusha
add
add
loope
in
test
push
shll
xor
xor
push
fiaddl
add
adc
mov
mov
loop
mov
lret
das
xor
mov
sbb
mov
out
out
adc
mov
mov
repnz
mov
rcll
mov
add
in
push
sub
pop
inc
aaa
xchg
sbb
pop
enter
lret
and
mov
add
imul
rolb
pushf
xor
and
add
add
add
add
jmp
in
cmc
aam
je
add
push
jge
out
mov
cmp
sahf
xchg
scas
outsb
dec
or
pop
call
mov
mov
ret
pusha
add
push
add
add
in
lock
lahf
add
mov
int
add
mov
fistpll
xor
add
cmp
shll
stc
mov
inc
add
add
cmp
scas
mulb
testl
mov
push
fwait
je
ret
mov
mov
ljmp
lods
mov
mov
sbb
imul
mov
and
mov
pop
es
add
add
test
leave
mov
add
add
int3
stc
or
sub
xchg
dec
test
pop
ljmp
inc
add
inc
adc
and
mov
inc
jmp
jl
inc
inc
add
mov
scas
ja
cwtl
dec
lret
xchg
xchg
subl
mov
push
mov
inc
pop
jo
mov
jmp
ficompl
jae
cmpsb
or
and
mov
mov
mov
mov
sbb
push
mov
dec
mov
jecxz
rolb
mov
mov
push
mov
or
mov
mov
xchg
cmpsl
sbb
mov
dec
dec
shrl
mov
jecxz
rcl
add
jne
mov
sbb
mov
add
add
mov
pushf
adc
mov
mov
mov
insl
scas
and
dec
dec
shll
lods
rolb
iret
push
and
imul
mov
inc
std
or
movl
pushf
mov
add
inc
dec
add
pop
rcrl
out
pop
ja
mov
push
fistpll
mov
xor
mov
cmp
push
add
mov
add
dec
inc
stc
add
mov
cli
add
dec
rolb
mov
pop
mov
mov
xor
add
mov
addb
lahf
or
clc
movsl
xor
addb
inc
mov
mov
push
lods
int3
pop
xchg
add
mov
call
stos
jge
mov
xlat
jnp
jg
or
lcall
and
sub
lret
in
pusha
add
mov
mov
mov
pop
adc
mov
cmpsb
mov
sub
push
les
sub
iret
out
test
adc
sbb
cltd
inc
xor
mov
mov
stos
sbb
addb
mov
add
out
push
add
add
aam
mov
add
mov
add
lds
mov
cmp
mov
mov
loope
cmpsl
mov
test
push
xor
xchg
lods
mov
pop
rolb
sbb
mov
mov
out
xchg
ret
repz
xor
dec
ficomps
mov
add
iret
xor
rolb
mov
fbstp
ficoml
add
addb
mov
dec
sub
lcall
rcll
mov
mov
mov
in
js
fistpl
mov
jbe
add
out
ret
jmp
nop
add
mov
add
inc
inc
xchg
add
mov
push
addb
cmp
scas
insb
add
mov
hlt
mov
and
ret
xor
mov
add
add
mov
xchg
add
clc
in
inc
insl
jl
popa
iret
sahf
arpl
repnz
stos
out
into
clc
mov
mov
mov
xchg
mov
repz
add
call
jno
jl
jbe
sbb
mov
push
fisttps
push
imul
mov
or
frstor
mov
daa
pop
fisubs
daa
adc
xor
add
mov
add
bswap
stc
mov
mov
mov
daa
dec
jno
sbb
adc
mov
jle
add
pushf
aas
lock
je
or
lea
int3
pop
jno
xlat
out
mov
cld
xor
rolb
mov
pop
sbb
sub
sbbl
addb
rolb
insl
negl
and
mov
inc
mov
push
add
add
add
mov
add
or
adc
aam
addl
mov
add
jmp
or
add
xor
leave
push
add
rolb
pushf
xchg
in
push
add
je
mov
mov
cmp
icebp
or
cltd
fistps
fs
js
fs
push
jns
xchg
add
xchg
test
scas
mov
add
loop
mov
add
add
add
pop
sub
test
out
data16
das
push
pusha
add
mov
loopne
mov
add
ds
clc
call
mov
in
sarl
repz
mov
jne
stos
xor
mov
clc
push
adc
int
jl
add
fwait
cwtl
jae
mov
add
outsl
stc
mov
or
mov
dec
xchg
add
in
orl
and
mov
add
add
mov
int3
in
push
sbb
inc
add
jns
push
stc
mov
push
mov
add
cmc
hlt
addb
mov
cmp
add
insl
and
mov
lcall
pop
mov
in
mov
addr16
in
repnz
inc
jo
mov
add
rolb
mov
out
add
ja
mov
fisttpll
pop
pop
mov
mov
xchg
lret
pushf
sahf
push
daa
ret
out
imul
add
loop
mov
push
push
outsb
adc
add
scas
cmp
repz
movsb
lock
in
fildll
aad
rolb
mov
std
or
inc
out
mov
add
add
sbb
movsl
mov
out
add
add
dec
and
dec
rcrl
or
movsl
ljmp
lea
test
xchg
push
into
pop
jb
mov
pop
xchg
pop
jmp
cmp
or
add
add
je
fcomi
add
mov
es
sbb
inc
xchg
lock
and
mov
adc
outsl
cmp
fisubrl
adc
jle
movsb
sbb
add
mov
cld
push
sub
pop
sbb
pop
lahf
sub
mov
imull
mov
add
xor
arpl
push
add
dec
arpl
mov
ja
add
add
sub
xor
mov
mov
mov
mov
mov
add
mov
mov
jo
mov
inc
outsb
xchg
insb
cltd
add
pop
int
mov
mov
and
dec
xchg
xor
mov
leave
ds
out
dec
mov
add
mov
inc
or
xchg
in
aam
add
sbb
jne
movsb
adc
and
mov
out
jo
mov
xor
mov
mov
mov
movsl
jge
mov
mov
and
dec
mov
and
mov
cwtl
nop
add
push
fisttps
mov
push
adc
mov
add
ja
adc
push
xchg
jbe
loopne
mov
mov
push
mov
mov
and
mov
push
or
add
push
pop
mov
add
mov
and
or
imul
push
std
cmpl
lods
add
mov
add
cmpsl
pushf
inc
add
mov
xchg
add
mov
test
outsl
mov
mov
sbb
imul
mov
mov
add
mov
stos
pushf
repnz
add
mov
lret
xchg
testb
mov
add
xchg
sbb
add
mov
jb
mov
xchg
add
sbb
mov
jns
cmpsb
pusha
add
jmp
pop
pxor
add
mov
outsb
or
and
add
sbbl
cmp
pushf
push
add
add
sbb
repz
push
jne
insb
test
jb
mov
sub
aad
test
fsubl
add
mov
leave
in
xor
pushf
mov
cltd
std
repnz
jno
add
addb
insb
xlat
pop
test
add
cmpsb
jg
or
cld
sbb
inc
dec
std
adc
mov
data16
dec
or
add
fs
movsb
pop
jo
mov
add
int
cs
mov
stos
jl
hlt
rolb
mov
push
add
int3
and
cwtl
or
sahf
movsl
ja
ja
bound
mov
add
jno
sub
jns
sub
jl
mov
pop
push
pop
inc
fldl
cmp
add
mov
add
fs
mov
mov
inc
dec
iret
outsb
lret
mov
mov
divl
mov
sub
mov
icebp
cmpsl
mov
aad
push
add
cmp
jns
in
add
cmc
cwtl
and
mov
add
or
fstpl
rolb
mov
mov
in
mov
adc
mov
out
fidivs
mov
add
test
sti
pushf
stc
xor
das
adc
hlt
icebp
ficoms
add
mov
icebp
pop
xor
mov
add
cmp
pop
and
addr16
push
mov
mov
outsl
into
iret
jbe
test
xchg
pop
mov
add
xor
mov
lock
mov
cwtl
lds
stc
lret
out
jb
mov
xchg
cmpsb
fld
imul
or
add
add
mov
ljmp
mov
shr
rcrl
mov
rolb
popa
mov
push
cmpsl
and
mov
add
mov
add
mov
and
mov
mov
mov
fmull
push
lds
jecxz
iret
fwait
sbb
xchg
dec
mov
mov
dec
fildl
xchg
lock
outsl
cmp
inc
jno
fisttpl
cmpsl
jb
mov
or
mov
ret
cmp
adc
mov
push
xchg
sub
add
or
dec
popf
data16
push
stos
add
mov
or
mov
jbe
scas
cmpsb
dec
aas
ror
jnp
pusha
add
inc
mov
push
xor
stc
pop
in
add
mov
or
inc
and
mov
mov
mov
addb
fwait
pop
not
push
dec
jmp
and
mov
stos
inc
add
sub
jb
mov
xor
add
add
sbb
add
add
add
xor
xchg
mov
mov
lds
mov
test
push
cmp
aad
cli
dec
mov
jne,pt
mov
mov
add
adc
fistpl
adc
inc
notb
mov
aaa
or
add
xlat
xor
add
mov
addb
jl
mov
lret
sbb
add
mov
ss
scas
mov
pusha
add
mov
outsb
dec
test
pop
mov
and
mov
push
pop
negb
repz
adc
mov
ljmp
imul
int
push
add
jmp
and
or
or
mov
movsb
lods
popa
movsb
notb
mov
fsub
add
add
add
out
lea
jbe
aas
int3
pop
add
mov
mov
scas
sbb
adc
mov
mov
cmpsb
aaa
xchg
inc
fisttps
aaa
dec
mov
add
mov
cmp
mov
stos
cwtl
adc
xor
out
stos
sub
mov
daa
inc
js
mov
mov
add
xor
aad
jecxz
pop
mov
outsb
add
mov
mov
add
pop
dec
sub
sbb
sti
or
lods
imul
sub
sbb
add
add
sahf
aad
mov
mov
jmp
lods
pushf
mov
fdiv
xor
xchg
neg
sbb
iret
sub
and
mov
add
mov
pop
cmp
xor
mov
std
lcall
sub
mov
fdivrl
add
jmp
or
imul
mov
addb
and
mov
add
dec
aam
mov
loope
mov
add
add
add
shld
inc
test
mov
or
mov
test
cmp
add
mov
cmp
testl
filds
add
sbb
xor
mov
sub
mov
add
lods
dec
outsl
enter
aad
mov
mov
mov
add
dec
addb
push
pop
cmp
aaa
xchg
rcrl
pop
add
add
add
add
outsb
or
fwait
mov
mov
add
push
mov
das
popf
sbb
add
lahf
jge
add
jmp
sub
fidivrs
in
jo
mov
add
pop
jecxz
and
mov
mov
fmull
dec
lahf
rcll
add
out
push
mul
sbbl
packsswb
sti
xor
repnz
dec
dec
fwait
ret
rolb
mov
sub
inc
shl
add
or
sbb
add
mov
sub
add
enter
cmp
add
xchg
add
stc
add
mov
mov
sbb
add
and
lret
mov
mov
mov
ja
repz
fistps
sub
add
repnz
stc
adc
mov
stc
cmp
call
adc
mov
leave
mov
sbb
cmp
cli
or
jge
mov
add
dec
adc
or
push
aam
out
fcomps
push
jmp
cli
push
add
adc
mov
mov
orl
inc
dec
aam
rolb
adc
mov
testl
xor
loope
js
stos
or
and
mov
ljmp
test
mov
add
mov
mov
ss
out
cwtl
dec
stc
bound
mov
push
mov
adcl
loope
sbb
cmc
mov
adc
repz
jns
jne
pop
cmp
je
lods
leave
dec
dec
xor
add
in
mov
call
mov
dec
add
mov
xor
mov
rolb
mov
dec
pop
jle
mov
push
add
loop
mov
fsubp
inc
add
ret
xor
in
add
add
mov
push
dec
and
mov
inc
iret
mov
mov
xor
pop
sbb
pop
lret
jae
add
or
test
dec
lret
mov
add
mov
test
addb
sub
sub
loop
mov
cmc
mov
outsb
shll
sbb
or
xchg
push
add
ss
mov
mov
pop
xor
mov
pop
push
pop
add
adc
push
jo
mov
dec
xor
adc
rolb
mov
movsb
jmp
add
testl
cmp
enter
add
pop
mov
add
xchg
xlat
pop
xor
sub
mov
sbb
mov
sarl
mov
mov
insl
in
pop
fwait
push
cmp
sub
push
mov
mov
xchg
out
sub
ret
aas
data16
cmp
xor
sahf
insb
sub
xchg
add
mov
dec
or
add
cld
in
cmp
shll
add
or
xor
fistpll
ja
add
push
add
mov
sub
xchg
js
cmp
xchg
add
pop
jae
les
rolb
mov
into
test
stos
jle
xor
mov
add
mov
roll
mov
stos
mov
push
xchg
add
xchg
xorl
js
test
fs
xchg
shll
mov
add
add
add
xor
mov
add
mov
pop
rolb
mov
add
adc
movsb
cld
and
mov
mov
rolb
mov
or
mov
fs
or
cli
xchg
dec
lds
movb
mov
lods
popa
jno
add
mov
cmp
in
rolb
mov
mov
pop
or
movsl
stc
ss
push
add
pop
leave
fs
in
iret
or
add
das
mov
jge
rorl
xchg
add
stc
das
loop
mov
ficoms
pop
fstpl
jle
repz
fists
in
sbb
divl
mov
inc
movsb
enter
aas
mov
mov
outsb
jnp
push
lds
push
push
sub
mov
add
mov
roll
add
data16
jo
mov
add
icebp
test
sub
xor
cmp
loope
jnp
out
int
orl
xor
jno
jge
jno
push
mov
sub
out
addr16
push
cmp
lret
push
add
sbb
mov
js
lods
dec
lds
mov
mov
mov
sbb
add
cmpsl
lods
xchg
dec
inc
add
add
dec
arpl
cmp
out
imul
push
das
repnz
and
mov
jp
ret
lea
xchg
add
out
add
shll
bound
mov
mov
xor
mov
cmp
add
mov
mov
and
mov
adc
xor
mov
jg
xchg
mov
bound
mov
add
cmp
add
andl
mov
cmp
mov
clc
mov
insb
gs
cmp
push
sti
push
bound
mov
cmp
pop
add
mov
jmp
aas
mov
add
nop
add
mov
inc
add
add
add
cmp
scas
sub
cld
repnz
inc
sub
and
loopne
mov
push
push
lock
mov
add
addr16
std
xor
loop
mov
shll
mov
lahf
sub
cmpsb
xchg
pop
fsts
in
fiaddl
add
dec
mov
std
lret
push
sbb
mov
sub
add
cmp
push
push
add
adc
cltd
ret
xor
test
test
jmp
dec
arpl
test
jnp
aad
cmp
push
push
mov
pop
mov
mov
sbb
add
cmpsb
fisubs
jmp
imul
inc
add
cs
add
lock
pop
add
out
fwait
insb
jle
dec
pop
jmp
mov
add
dec
mov
or
sbb
outsb
jnp
mov
mov
bound
mov
jg
mov
ss
add
arpl
je
add
adc
mov
adc
stos
sti
out
inc
in
call
dec
icebp
je
insl
js
sbb
add
xchg
mov
mov
loopne
mov
mov
xor
mov
cs
hlt
pop
pop
fnstsw
into
pop
std
jle
sub
xor
mov
push
sbbl
add
mov
mov
adc
mov
mov
jle
sbb
push
js
ljmp
lret
mov
ficomps
shl
add
add
mov
lods
inc
sbb
add
mov
cmp
adc
mov
mov
pusha
add
push
push
add
or
xchg
subl
mov
add
mov
add
sub
xchg
ret
out
push
push
add
out
mov
stos
testl
xor
out
mov
mov
mov
test
pop
sub
out
add
sahf
arpl
fwait
icebp
lods
push
dec
shll
loop
mov
js
lods
lods
arpl
mov
addb
mov
xor
adc
mov
sbb
add
or
cmpsb
jg
add
enter
fnstcw
mov
mov
stc
or
add
jecxz
add
jge
add
and
mov
outsl
xchg
and
sbb
ljmp
adc
and
mov
jns
rolb
mov
ja
out
xchg
add
shl
loope
popa
inc
mov
jne
rolb
addb
and
mov
cmp
cs
xor
lds
push
push
add
ja
add
cmp
pop
sub
add
mov
mov
add
sub
jnp
add
cmpsb
jg
lret
lahf
dec
jecxz
push
push
mov
rcrl
pusha
add
adcl
into
sub
add
mov
cmpsl
add
rolb
mov
jno
ret
mov
adc
and
mov
mov
imul
pop
loope
sub
push
fimull
add
mov
loopne
mov
shll
sbb
adc
mov
add
mov
or
cmp
loop
mov
adc
mov
or
mov
addb
mov
mov
pusha
add
add
ret
jle
add
xor
add
add
popa
sub
jmp
mov
dec
jmp
add
mov
cltd
pop
pusha
add
xor
xor
push
fisubl
mov
icebp
mov
aam
fnsave
es
push
repnz
mov
mov
add
jno
dec
lock
outsl
push
rolb
mov
lea
lcall
insb
xchg
pop
cmp
mov
shll
mov
jg
mov
pushf
add
aas
dec
xchg
inc
mov
mov
add
out
movsl
leave
inc
and
mov
jp
add
mov
pop
cmpsb
daa
cmp
add
jo
mov
and
mov
movsb
ror
cld
or
dec
xor
mov
mov
imul
or
add
pop
test
enter
imul
insl
mov
fdivs
add
ss
push
cld
js
lret
inc
aas
mov
xor
push
push
add
icebp
inc
scas
rolb
test
add
mov
sub
and
ds
push
rolb
mov
sub
jp
fsubs
cmp
outsl
iret
out
adc
imul
jns
push
outsb
bound
mov
test
aad
dec
sbb
sub
cmc
rolb
mov
and
iret
sti
dec
out
lods
mov
ret
or
add
pop
mov
xchg
cmp
and
aaa
xor
mov
pop
jg
mov
mov
cli
in
mov
add
pop
mov
inc
in
fcoms
divb
scas
out
add
add
push
add
pop
out
jns
test
addb
leave
fdivrs
sub
sub
outsl
mov
mov
outsb
cli
xchg
and
mov
rolb
mov
pop
mov
add
add
xchg
popa
daa
dec
cmp
or
imul
lods
mov
mov
cmpsl
cmp
inc
lcall
add
add
push
dec
jbe
sbb
outsb
mov
cmpsb
ds
ja
mov
mov
gs
stc
pop
or
push
pop
mov
and
add
mov
and
mov
jle
adc
adc
cld
mov
mov
xchg
or
add
xor
repz
add
push
cld
add
sub
lahf
lret
or
jnp
push
sub
jle
push
jmp
pusha
add
testl
test
sarl
cld
jne
jl
sahf
addb
or
loope
je
lret
and
jae
add
mov
add
fistpl
cwtl
stc
inc
add
ja
dec
mov
add
dec
push
out
cmpsl
cwtl
shl
add
sbb
cmpsb
leave
inc
lcall
int3
cli
jno
dec
shll
push
mov
mov
lret
pop
mov
subl
adc
mov
jecxz
xchg
lock
or
bound
mov
add
add
add
xchg
addb
data16
jmp
push
add
cmp
pop
fs
sub
cld
pop
mov
dec
jns
aad
and
mov
dec
xor
mov
rolb
mov
sbb
shll
add
jle
stos
es
adc
mov
push
inc
add
cmp
inc
out
jle
enter
int
jnp
xor
add
sbb
cmpsl
cwtl
loop
mov
sub
add
mov
std
xlat
bound
mov
test
imul
mov
cli
into
mov
mov
rolb
mov
mov
push
bound
mov
xchg
rol
sub
cmpl
xchg
repz
mov
and
mov
jmp
lods
sbb
rolb
mov
orl
ss
push
aas
mov
pop
sub
ljmp
ja
out
out
adc
dec
cmp
lods
stos
and
dec
and
mov
leave
xchg
add
add
add
dec
test
xchg
mov
mov
mov
add
jnp
or
adc
add
add
cmpsl
add
sbbl
mov
lahf
scas
xchg
mov
or
cmp
data16
inc
aad
sbb
add
mov
pop
add
push
mov
outsl
scas
addr16
mov
add
stc
xchg
add
jbe
mov
lcall
jmp
aad
sub
enter
adc
xchg
ficoml
sbb
ficoms
mov
push
dec
aam
pop
hlt
cmp
mov
mov
popf
rep
or
add
and
xor
adcl
fwait
lret
mov
dec
lods
inc
add
pop
pop
mov
add
in
fxch
rolb
mov
ret
jnp
add
push
or
out
xor
mov
inc
push
data16
arpl
pop
adc
mov
mov
mov
dec
add
into
xchg
xor
add
jmp
aad
ja
or
dec
inc
cld
fiaddl
mov
add
js
fwait
cmp
mov
aaa
and
and
sub
ss
jge
add
test
add
xchg
cli
daa
sub
movsb
xor
mov
test
and
test
insl
clc
pop
test
mov
lahf
xchg
inc
gs
add
inc
fisubrs
imul
insb
pop
mov
add
jnp
ljmp
lock
lods
faddl
pushf
pmulhuw
cld
jne
mov
leave
int3
das
hlt
repz
xor
add
scas
and
inc
mov
addb
push
mov
mov
scas
mov
xchg
add
scas
into
push
shll
jne
mov
lcall
rolb
mov
mov
fmull
push
imul
add
or
out
das
pop
mov
mov
add
and
mov
push
dec
test
add
stos
sahf
mov
sbb
lret
mov
dec
push
mov
add
jecxz
testb
xor
push
add
push
sbb
pop
mov
sahf
cmpsb
lahf
mov
add
push
add
inc
cmp
and
mov
push
test
sbb
rolb
mov
add
xchg
jnp
add
xlat
mov
fcomp
scas
adc
mov
push
pusha
add
xor
add
cmp
jle
mov
push
mov
insb
icebp
jnp
add
sbb
movsb
out
mov
dec
data16
mov
fsts
mov
mov
mov
xor
mov
lcall
rolb
cs
outsb
fldt
mov
sub
add
dec
popf
mov
push
out
into
xor
mov
sbb
stos
or
mov
mov
inc
sub
push
mov
aaa
pop
and
enter
fmull
cltd
pop
dec
xchg
cmp
xchg
push
add
adc
call
lahf
pop
les
add
mov
scas
and
mov
xor
lret
sub
mov
gs
movsb
jb
mov
popa
mov
xor
mov
mov
add
add
mov
mov
add
cmpsl
dec
daa
mov
enter
mov
xchg
or
stos
inc
add
dec
out
lret
sti
ja
sub
add
mov
push
add
add
outsl
cmc
andl
mov
add
aad
dec
mov
iret
push
xor
das
jge
add
mov
lock
pop
xchg
outsb
inc
aaa
cmc
mov
cli
arpl
dec
pop
leave
cmpsb
lock
test
lahf
adcl
ret
addr16
stos
sub
dec
and
mov
add
les
mov
fcompl
pop
jae
fimuls
dec
xor
fdivrs
mov
mov
mov
add
sbb
fmul
push
sbb
mov
mov
add
add
mov
and
enter
add
int
mov
dec
movsb
out
mov
add
push
fwait
test
sbb
add
leave
xor
push
addb
outsl
rolb
mov
jns
inc
inc
or
es
je
pop
out
repz
mov
mov
ljmpw
idivl
fs
pop
sahf
or
add
loop
mov
add
mov
lock
lds
pop
mov
fdivl
mov
xor
mov
sub
mov
test
push
xor
pushf
fildll
add
mov
addb
add
mov
push
pop
sub
cmpsb
in
movsl
ret
dec
rolb
icebp
jnp
add
mov
add
ret
cld
cmp
fmull
stos
push
lds
or
xchg
mov
mov
xchg
aad
cmp
mov
cmp
adc
mov
js
mov
out
mov
sub
mov
add
add
out
out
mov
es
push
jnp
insl
or
fimull
out
and
push
lcall
mov
fisubrl
mov
adc
add
jp
inc
add
add
mov
add
add
faddl
lds
lods
xchg
add
xchg
add
jb
mov
add
add
mov
rcll
inc
add
stc
and
lret
ds
sub
mov
les
test
xor
mov
xchg
leave
in
add
loopne
mov
cmp
das
cmpsb
jno
imulb
add
lcall
std
lea
shl
dec
sub
add
xchg
popa
dec
inc
mov
add
pusha
add
jmp
scas
mov
mov
or
test
or
push
add
xor
pushf
push
adc
mov
into
call
sub
cmp
mov
ret
pop
add
clc
aam
add
stos
mov
add
jns
add
out
or
xor
dec
adc
mov
sub
sahf
jle
cwtl
int3
imul
pop
or
dec
and
mov
jns
in
stos
imul
mov
mov
xchg
mov
mov
xor
in
out
enter
test
sti
lods
addb
pop
fisubs
mov
stos
adc
mov
fdivr
ja
xor
mov
add
aam
popa
lods
sahf
bound
mov
icebp
xor
mov
in
or
jo
mov
movsb
outsl
int3
cmp
mov
iret
lock
aas
std
pop
aam
ss
fwait
mov
mov
push
add
loop
mov
ret
test
in
dec
lahf
xchg
push
gs
jnp
lret
add
movsb
or
stos
jnp
add
mov
dec
push
add
mov
divb
mov
adc
sarl
mov
xchg
add
nop
add
jg
add
push
aaa
push
add
adc
mov
pop
mov
push
cwtl
sbb
add
xchg
cwtl
bound
mov
lods
daa
scas
aaa
es
add
mov
loop
mov
cmpsl
in
add
mov
add
add
add
dec
in
jno
inc
add
fwait
cmp
pop
xor
xor
mov
fmuls
xor
mov
loope
ret
pop
popa
adc
mov
mov
ja
setne
stos
dec
out
jl
pop
xor
adc
mov
add
xchg
icebp
into
cmp
mov
outsl
mov
sub
mov
out
jle
mov
mov
pop
push
push
mov
lods
bound
mov
lods
lock
mov
jno
ljmp
mov
clc
adc
pop
outsb
imul
mov
mov
stc
jmp
sbb
mov
sbb
imul
mov
jl
push
add
orl
mov
jecxz
fadds
mov
pop
jg
xchg
add
adc
mov
jmp
mov
jp
icebp
push
loopw
mov
test
jp
mov
jns
mov
push
sbb
sbb
add
js
add
mov
push
add
push
sahf
jg
push
lcall
stos
std
sbb
mov
fdivl
add
push
ret
test
xor
mov
sbb
insb
mov
sbb
cmp
sub
sti
mov
sbb
and
mov
add
lds
jp
rolb
mov
in
pop
xchg
lea
and
mov
rolb
mov
je
fcmovnb
add
std
call
xchg
pop
pushf
ds
dec
bound
mov
outsb
or
push
jge
add
cmp
jmp
pop
mov
mov
dec
fbld
add
and
mov
mov
mov
out
sub
add
jne
dec
cmpsb
mov
xchg
mov
fwait
scas
cmp
mov
ljmp
mov
mov
and
loope
mov
sub
add
in
out
dec
inc
add
xchg
mov
add
into
mov
stos
pop
jae
push
push
pop
test
xor
ss
mov
add
xchg
dec
daa
jl
pop
cmc
pushf
data16
dec
fcoms
adc
mov
and
xchg
jle
pop
in
mov
add
lock
dec
sbb
fwait
and
mov
mov
mov
push
sub
mov
lahf
add
mov
xchg
shr
out
lods
arpl
dec
repz
mov
add
fisubl
incl
lds
aaa
loopne
mov
add
fldln2
jecxz
aas
sub
sub
or
ja
pop
fstpt
xchg
add
sbb
sbb
inc
movsb
mov
mov
mov
pop
imul
mov
loope
stos
loopne
mov
scas
push
mov
in
pop
cli
push
add
stos
cli
pop
out
mov
mov
mov
xchg
js
push
lods
push
lret
add
add
sub
add
mov
mov
divl
cs
cwtl
mov
jp
push
out
add
mov
add
adc
add
add
mov
mov
lcall
loope
sub
and
add
stos
aad
xor
adc
mov
scas
and
sbb
outsl
push
call
mov
jae
or
cmp
fst
test
scas
dec
addb
mov
jecxz
pop
jbe
pop
jb
mov
mov
iret
cmp
dec
icebp
outsb
pop
xchg
mov
mov
rdmsr
add
mov
lret
bound
mov
pop
hlt
rcr
stos
mov
or
imul
jbe
ret
popa
test
cmp
nop
add
rcl
fcmove
gs
out
add
sub
scas
sub
and
pushf
inc
add
pushw
push
and
add
fsts
out
or
dec
jo
mov
mov
addr16
add
pop
mov
and
add
add
fdivr
int3
adc
add
inc
add
add
adc
bound
mov
jo
mov
xor
add
pop
movsl
lods
mov
clc
jns
xor
rolb
mov
xor
add
adc
dec
push
imul
xchg
pushf
mov
movsb
mov
push
add
mov
ja
inc
jae
aaa
in
cwtl
push
cwtl
mov
aad
jle
jmp
cli
fs
mov
mov
sbb
add
mov
mov
mov
fstl
hlt
mov
cs
aam
sbb
mov
nop
add
mov
and
mov
add
add
adc
mov
pop
sbb
xor
mov
and
call
add
and
or
jle
add
and
xchg
test
sub
and
fsubs
sub
and
xchg
test
xlat
pusha
add
ret
adc
mov
lock
addr16
rcrl
dec
adc
mov
mov
or
dec
mov
or
iret
ds
addl
xchg
jecxz
add
call
mov
xchg
sbb
pop
pop
xchg
mov
aad
add
mov
into
iret
test
dec
fdivs
pop
pop
in
out
iret
lahf
and
lock
pop
mov
add
jmp
mov
scas
clc
pop
xchg
sbb
and
mov
call
cmpsb
movsl
push
stos
and
mov
popf
mov
loope
mov
mov
out
out
mov
call
add
div
mov
jnp
add
pop
sub
sub
mov
std
jg
add
ror
pop
jp
dec
or
mov
jno
not
dec
push
insl
movsb
add
in
pop
lock
xchg
sti
ljmp
mov
inc
jo
mov
test
mov
fwait
bound
mov
mov
dec
pop
adc
rolb
and
jae
rolb
mov
data16
push
sbb
mov
add
mov
cltd
aaa
ljmp
shrl
icebp
dec
addb
fnstenv
sbb
les
sbb
popa
xchg
dec
lods
and
jg
mul
pop
push
xchg
mov
testb
add
into
lahf
mov
push
cwtl
cmpsl
insb
sub
rolb
pop
jge
imull
add
sub
mov
pop
or
lret
add
mov
aaa
mov
fwait
adc
sbb
fwait
and
add
gs
add
sub
pop
int3
jmp
jbe
test
cmp
mov
or
xor
mov
pop
insb
jbe
insb
add
mov
mov
mov
test
mov
add
xlat
or
xchg
ss
lar
mov
dec
je
dec
cmp
xor
dec
push
cmc
lods
sbb
stc
pop
cs
add
push
inc
mov
add
pop
rolb
mov
sub
and
mov
lahf
lret
sti
pop
hlt
xorl
jno
add
fadds
jns
inc
add
hlt
add
mov
mov
add
xor
pop
jnp
cli
pop
movb
xor
mov
adc
add
aad
loop
mov
add
arpl
fwait
lods
mov
mov
mov
inc
loop
mov
jo
mov
shll
add
dec
stc
xchg
xchg
addr16
cltd
fistps
rolb
pushf
leave
bound
mov
loope
jmp
sub
add
mov
push
sarl
dec
dec
xchg
add
mov
push
ljmp
mov
pop
or
mov
mov
mov
mov
mov
sub
add
xchg
nop
add
xchg
inc
in
in
jp
xchg
add
push
popf
mov
rolb
xor
mov
int
mov
mov
add
imul
pop
xchg
out
lea
mov
mov
in
into
cmp
pop
xor
mov
imul
mov
shll
push
jmp
mov
rolb
cwtl
ljmp
or
mov
ficoms
sub
fisttpll
repz
mov
add
xchg
pop
divl
or
jne
enter
pop
shll
add
add
mov
dec
in
das
insb
insb
xchg
mov
cs
sub
lea
out
fiadds
inc
lock
pop
jecxz
add
mov
push
push
add
cwtl
pop
rolb
push
add
scas
les
add
mov
mov
add
or
pushf
fmuls
cmpsb
or
in
add
pushf
jecxz
adc
add
xchg
or
in
sbb
mov
insl
add
ja
push
jne
pop
or
add
mov
stos
sbb
add
cmpl
push
ss
add
ja
cmp
sub
cmpsb
and
mov
add
dec
pop
popl
xchg
test
xchg
insl
sbb
add
add
sahf
mov
jb
mov
fdivrs
pop
cmp
outsl
cmp
pop
mov
mov
mov
call
jne
mov
push
cwtl
enter
add
push
cwtl
xchg
sub
jns
popa
insb
sub
addb
mov
xor
mov
add
adc
mov
popa
scas
fnstsw
jnp
sub
inc
test
mov
test
add
mov
imul
pop
repnz
jne
cmp
inc
rolb
mov
add
mov
cmp
dec
inc
add
in
push
icebp
rolb
mov
negl
adcl
jg
adc
pop
xor
lcall
sti
inc
add
add
add
fldt
out
mov
xchg
mov
inc
add
sbb
push
sub
les
add
sub
or
or
mov
jo
mov
and
mov
test
cmp
mov
sbb
push
out
lret
bound
mov
mov
sub
aam
add
icebp
stos
insl
mov
test
fistps
inc
scas
mov
mov
in
add
shll
dec
std
push
dec
sar
stc
jecxz
lea
jle
sub
sbb
in
and
mov
movsl
adcl
push
jp
pop
cmpsb
in
ja
scas
test
cs
sbb
add
inc
loopne
mov
jnp
pop
stos
mov
mov
dec
scas
test
mov
and
cmp
clc
rolb
int3
fadd
les
std
and
mov
add
cwtl
mov
stos
in
iret
testl
cmp
loop
mov
inc
add
add
sub
add
sahf
jecxz
or
or
push
add
sub
cltd
js
jo
mov
adc
and
loop
mov
xchg
mov
add
xor
jp
nop
add
push
add
movsl
out
xor
add
add
mov
out
jg
mov
add
add
mov
add
add
mov
pop
mov
jo
mov
insb
idiv
daa
fwait
mov
add
mov
lahf
jl
dec
stc
in
leave
lock
pop
or
add
sbb
sbbl
add
add
je
xchg
inc
push
jg
add
popf
pushf
test
push
je
aaa
pusha
add
into
lds
insl
std
int
add
or
sbb
sbb
cmp
js
stos
inc
jae
add
dec
gs
or
inc
jno
pop
push
addr16
pop
sbbl
pop
xor
mov
jecxz
dec
add
mov
dec
mov
nopl
jb
mov
popa
fs
movb
dec
and
add
fiaddl
aad
add
pop
pop
mov
aad
nop
add
add
jecxz
test
sti
iret
sbb
jno
das
paddb
ss
add
push
rolb
lea
rolb
mov
daa
jo
mov
add
push
sub
mov
mov
bound
mov
jo
mov
das
dec
mov
flds
les
add
movsl
int3
mov
mov
pop
and
mov
pop
cli
xchg
imul
mov
lea
enter
mov
aaa
incb
add
mov
push
mov
addb
test
mov
cld
jbe
loope
add
and
cmp
sbb
sub
add
mov
int3
lret
imul
or
xor
lret
aaa
gs
lret
mov
shll
aad
aad
add
xchg
lcall
jno
add
xor
pop
movsl
aaa
bound
mov
xchg
lods
inc
add
xchg
add
jae
and
std
xor
mov
lret
mov
add
and
mov
mov
daa
add
jecxz
sub
movsb
adcl
shld
push
jge
push
add
mov
inc
xor
jl
sbb
inc
mov
pop
popw
mov
rolb
mov
pop
fwait
push
add
or
add
fwait
rcl
add
lock
add
inc
fisttpll
jle
cmp
sbb
fcompl
and
push
negb
adc
inc
sub
fcoml
add
add
faddl
xchg
xlat
adc
push
call
mov
add
in
xchg
bound
mov
sbb
leave
add
rolb
mov
inc
jno
loope
push
inc
pop
out
fwait
mov
insl
outsb
lock
ljmp
stos
out
movsl
rolb
mov
mov
or
mov
faddl
out
inc
add
lcall
in
shll
pop
arpl
pop
rolb
jnp
add
sub
mov
mov
mov
cld
stc
fildll
mov
xor
repnz
std
mov
mov
add
pop
add
or
jae
lock
cli
mov
dec
jno
xlat
sbb
mov
mov
les
mov
add
adc
add
fld
cmpsb
lret
insb
fidivrs
xor
mov
gs
add
mov
add
or
imul
mov
idivl
ret
xor
test
lret
xlat
hlt
popa
je
in
push
add
mov
mov
arpl
jmp
outsb
push
in
inc
rolb
aas
push
jl
add
or
jbe
repnz
add
adc
mov
mov
add
fwait
out
loop
mov
loopne
mov
mov
sbb
jl
push
repnz
mov
lahf
fcmovnb
add
jne
dec
jns
add
mov
push
and
add
cmp
xlat
pusha
add
add
mov
ja
add
cmp
pop
popa
outsb
aaa
or
ficoml
stos
insb
cmc
mov
xor
add
in
adc
mov
push
mov
xchg
pop
cwtl
jae
adc
lds
rolb
mov
and
dec
scas
in
fisubrs
mov
std
adc
mov
test
mov
rolb
mov
fildll
mov
popf
loopne
mov
xchg
in
data16
mov
pop
ss
repz
jl
addb
aam
or
ret
push
aaa
inc
pop
xchg
add
pop
jecxz
and
pop
dec
mov
iret
addr16
xchg
and
mov
mov
mov
mov
add
mov
xor
add
or
push
add
in
push
add
mov
fwait
pop
push
add
mov
add
add
cmp
data16
daa
xchg
mov
scas
ds
insl
mov
dec
stc
mov
mov
daa
lcall
inc
mov
mov
stos
mov
add
adc
add
inc
mov
inc
mov
sub
xchg
lods
push
inc
jns
jp
dec
ljmp
and
nop
add
mov
mov
pop
out
or
add
jle
test
js
sub
xor
mov
out
loope
cli
nop
add
mov
rolb
mov
mov
sbb
in
addr16
inc
xor
sub
sbb
rcll
xchg
enter
lds
jne
aas
push
aam
push
add
mov
push
pushf
lock
addb
mov
mov
add
pop
xor
mov
jecxz
test
and
push
add
popa
jbe
aaa
push
jae
mov
repz
fadds
jnp
add
sbb
pop
dec
xchg
pop
inc
add
add
add
dec
dec
sbb
addr16
gs
test
cmc
add
mov
aaa
mov
in
loop
mov
jnp
or
add
dec
test
xor
paddsw
dec
or
pop
mov
mov
add
add
mov
mov
adc
sub
add
mov
out
das
aam
add
lea
mov
lock
xor
int
add
pop
pop
out
pop
xor
mov
mulb
mov
adc
cmp
add
frstor
add
js
and
xor
adc
lock
inc
dec
mov
fwait
adc
loope
mov
sub
add
xchg
mov
add
fs
inc
push
add
add
mov
add
inc
mov
mov
xor
mov
add
xor
mov
dec
inc
ss
add
mov
xchg
mov
adc
mov
xchg
cwtl
jg
test
push
das
push
adc
mov
pop
in
loope
ja
jmp
cmp
sti
repnz
addb
fsubp
add
adc
mov
aas
push
imul
xchg
add
push
cmp
sub
or
mov
mov
sti
push
scas
movsb
fs
jnp
add
mov
cld
inc
pop
push
add
mov
sti
insb
lock
mov
enter
out
add
scas
arpl
mov
sbb
and
xor
mov
dec
xlat
insl
inc
addb
out
add
mov
leave
sbb
imul
clc
imul
xchg
add
mov
lea
nop
add
mov
in
pop
js
std
mov
adc
mov
rolb
jmp
mov
xlat
mov
pop
xor
mov
jmp
dec
in
jl
add
add
test
mov
test
add
imul
dec
dec
sub
enter
add
add
in
jl
inc
push
shrl
sub
cmp
mov
pop
icebp
mov
push
add
in
rcll
add
xchg
mov
es
or
mov
jno
xlat
addr16
inc
cld
xchg
pop
leave
repz
std
outsb
in
dec
and
mov
add
fsubs
mov
divb
mov
or
pop
addb
cmp
mov
mov
inc
add
clc
dec
pop
loop
mov
add
lea
jl
inc
cld
mov
add
mov
rcrl
test
inc
aas
pop
sub
test
cmp
imul
mov
fdivl
xchg
hlt
nop
add
ret
int3
dec
cmc
addb
dec
insl
into
cmp
imul
push
test
and
push
sbb
ljmp
and
sub
push
loope
add
daa
loop
mov
fwait
jns
mov
mov
add
add
mov
movsl
das
adc
inc
enter
mov
add
sbb
mov
mov
mov
mov
mov
pop
addl
test
lea
stos
pop
pop
sbb
jge
cmp
xchg
in
or
bound
mov
repnz
xorl
aam
insb
jle
mov
and
mov
mov
add
add
push
mov
inc
out
push
mov
mov
das
pop
ds
sub
stos
sbb
sub
inc
outsl
out
xlat
movsb
jno
mov
hlt
ret
push
sbb
mov
mov
add
inc
or
scas
pop
fyl2xp1
sbb
sub
mov
mov
lods
inc
ss
insb
push
add
add
push
sti
inc
add
sbb
es
add
push
bound
mov
add
psubw
add
mov
push
ja
pop
pusha
add
fwait
push
pop
incl
cmpsb
fadds
movsl
bound
mov
inc
add
mov
jnp
fildll
cmc
add
mov
mov
mov
mov
or
inc
mov
fs
push
lret
bound
mov
mov
loope
add
xchg
mov
lods
testb
and
aas
or
jmp
mov
out
ljmp
mov
je
sub
jmp
push
movsb
sub
xchg
sbb
lods
push
add
mov
loopne
mov
cld
jno
lods
xchg
cmc
adc
mov
lret
shrl
jo
mov
fs
sub
add
in
pop
cmp
mov
aad
ds
mov
mov
or
cs
rolb
mov
add
sub
add
lcall
mov
jno
and
mov
add
mov
test
addb
lods
dec
fs
fcomps
jns
add
add
mov
pop
dec
adc
mov
add
cmp
jp
add
sub
add
movsb
mov
insb
pop
mov
testl
xchg
push
push
leave
call
daa
sarl
addb
add
out
std
inc
stc
xor
imul
add
enter
shrl
mov
add
mov
fldcw
inc
mov
xchg
add
inc
add
mov
mov
js
pushf
jmp
push
jae
aad
pop
cmpsl
pusha
add
je
push
jge
sahf
fidivrs
cmp
movsl
ficomps
add
adc
mov
mov
mov
mov
mov
mov
mov
iret
les
push
int
add
call
aas
push
mov
jae
cmpsb
dec
inc
add
xchg
xor
mov
cmp
dec
add
in
insb
ljmp
int3
test
sbb
xchg
clc
adc
xchg
mov
mov
add
bound
mov
movsb
addr16
dec
dec
movsl
mov
lock
mov
fwait
arpl
adc
mov
or
mov
add
xor
test
negl
add
or
xchg
add
or
mov
test
daa
push
rolb
mov
or
inc
fucomp
out
movsb
xchg
dec
mov
xchg
sbb
rolb
or
push
sbb
std
push
jl
addb
dec
mov
or
cmp
push
into
sub
mov
add
sbb
jmp
enter
mov
fcmovnb
mov
leave
cmp
pop
imul
mov
insl
lret
mov
outsl
lcall
loop
mov
test
jno
insb
ljmp
cmc
inc
movsl
arpl
sbb
add
adc
mov
scas
loopne
mov
add
leave
call
nop
add
icebp
push
adc
mov
push
dec
cmpsl
ret
test
lahf
fadds
xor
add
add
add
xchg
aas
out
or
imul
les
dec
and
mov
jmp
xlat
lcall
imul
inc
rolb
mov
add
xchg
test
cmp
and
mov
dec
outsl
out
outsl
mov
add
icebp
and
inc
fisttps
repz
lcall
or
dec
jmp
add
xchg
xchg
test
jne
push
sti
loope
mov
pop
daa
xor
filds
add
add
inc
jp
add
fisubrs
mov
mov
mov
lds
mov
xor
in
jnp
cwtl
inc
cmpsb
scas
dec
dec
sbb
add
mov
jno
jmp
xor
mov
sub
stos
pop
mov
notb
mov
rolb
jle
test
adc
mov
in
jmp
stos
mov
rolb
mov
lock
lds
lds
add
adc
mov
mov
cmpsl
scas
xor
mov
add
mov
clc
mov
lahf
and
mov
push
divb
mov
or
mov
mov
in
jne
add
lods
fsts
jle
adc
cmp
xchg
mov
test
lahf
mov
stos
fsubs
icebp
movsl
addb
xchg
dec
mov
mov
jb
mov
dec
mov
cmpsl
shl
arpl
pushf
pop
pop
mov
neg
nop
add
imul
mov
dec
mov
mov
and
push
adc
add
xchg
out
fst
add
jnp
add
mov
add
mov
into
popf
sbb
mov
pop
fiadds
mov
mov
xor
mov
stc
pop
lods
mov
fistpll
mov
inc
lods
in
std
out
mov
add
adc
lahf
negb
or
add
mov
mov
dec
adc
mov
fcomip
jae
mov
push
loope
outsl
cmpsl
pcmpgtb
mov
jae
push
add
mov
mov
pop
or
mov
jg
inc
mov
mov
inc
add
cmp
or
push
xchg
sahf
nop
add
sbb
pushf
popf
xchg
lods
ja
pop
mov
cld
jecxz
dec
sub
inc
ja
dec
sbb
fisubl
add
clc
dec
sub
lcall
xchg
cmpsb
mov
dec
push
lock
loopne
mov
cmpsb
add
mov
lret
push
bound
mov
and
push
pusha
add
mov
dec
cmc
scas
lahf
and
mov
push
aaa
jbe
js
repz
mov
arpl
sub
jmp
dec
xchg
sarl
imul
push
loope
jne
std
or
popa
dec
jnp
ljmp
and
lahf
rolb
mov
imul
mov
add
add
mov
out
jmp
sub
or
xor
es
xor
or
or
add
call
shll
in
mov
stc
ror
dec
sub
iret
and
add
dec
dec
addb
adc
leave
or
cmpsl
popa
push
pop
jo
mov
dec
xor
mov
xchg
addb
sbb
mov
leave
pop
push
div
add
mov
stos
pop
cs
stc
icebp
sbb
push
and
mov
add
add
int3
add
mov
add
push
ret
insl
sbb
or
leave
mov
mov
sbb
int3
xchg
sub
mov
mov
out
aaa
push
imul
aam
push
lahf
mov
add
xchg
scas
jl
movsl
out
jbe
lods
jbe
jecxz
outsl
xor
push
add
add
jecxz
addb
scas
pop
repnz
adc
add
add
mov
mov
push
scas
int
mov
mov
lret
sahf
nop
add
mov
fcomp
adcl
inc
adc
mov
les
add
add
fcomps
cs
movsb
cmpps
sbb
pop
out
push
xor
add
mov
mov
mov
cmpsl
cmpl
iret
or
xchg
call
je
mov
cltd
fnsave
adc
mov
sub
jmp
mov
ret
lds
leave
sti
or
cli
mov
push
and
mov
mov
pusha
add
xchg
add
mov
push
pusha
add
mov
mov
fnstenv
fs
and
add
push
icebp
fbstp
mov
mov
test
cmc
inc
lds
add
xor
sbbl
not
jmp
mov
add
mov
mov
add
pop
es
out
pop
pop
sub
ret
repz
add
mov
push
clc
scas
mov
jae
sub
jne
jl
add
sub
add
mov
mov
cmpsl
xlat
cltd
loope
push
dec
cmp
addr16
jmp
mov
pop
jns
add
fdivr
stc
out
pop
aas
sti
imul
cmp
push
mov
addb
jmp
rcll
out
mov
add
add
mov
rolb
push
pop
outsl
enter
pop
push
add
repz
jns
outsl
or
mov
lcall
push
xchg
add
xchg
add
lcall
pop
test
test
xor
pop
jnp
xor
jno
xchg
jmp
add
inc
daa
leave
ds
fwait
and
out
pop
adc
mov
mov
sbb
cltd
xchg
lock
jb
mov
outsl
data16
sbb
dec
cld
lret
jle
sub
icebp
jmp
mov
mov
call
mov
mov
jl
cwtl
mov
repnz
test
inc
mov
sbb
sbb
mov
add
add
dec
call
mov
das
push
rolb
mov
cmp
push
add
and
mov
add
add
bound
mov
movsb
rolb
mov
fldl
add
xor
inc
xor
mov
cs
sbb
adc
mov
dec
push
out
pop
sahf
fcompl
shrl
scas
or
add
addl
jl
add
lods
rcll
mov
pop
fcoms
mov
jo
mov
loop
mov
mov
dec
nop
add
lods
dec
pop
inc
add
gs
aad
aam
or
inc
xchg
pusha
add
daa
cmp
push
std
addr16
pop
jle
add
xchg
ds
aam
adc
dec
in
mov
cmc
xchg
in
or
xchg
mov
xlat
jge
add
lods
repz
rcll
cmp
and
mov
ljmp
add
cwtl
imul
in
push
mov
repnz
mov
jle
sub
leave
dec
sub
mov
inc
les
int3
xor
mov
test
test
dec
mov
fsub
popa
rolb
mov
add
mov
add
xlat
icebp
fisttpll
lods
fcomps
pop
test
pop
nop
add
mov
sarl
xchg
mov
push
add
fadds
imul
jge
inc
outsb
test
jecxz
scas
dec
jl
popa
scas
ljmp
mov
addl
movsl
daa
pop
sub
mov
das
test
add
mov
gs
jg
bound
mov
mov
dec
lret
dec
jbe
add
fcompl
outsl
jno
mov
iret
add
xlat
out
mov
adc
lock
shr
dec
in
rolb
mov
xlat
sub
adc
sbb
jge
stos
pop
xorl
and
add
fwait
int
mov
and
jns
cmp
enter
lea
add
mov
and
mov
in
cld
xor
les
test
mov
test
loope
add
or
negb
pop
jne
inc
jp
int
cmpsl
cmp
mov
mov
jecxz
notl
add
mov
imul
sub
pop
adc
pop
xlat
stos
pushf
sub
add
shl
mov
lret
mov
movsb
inc
insl
mov
add
mov
dec
inc
xor
aaa
test
icebp
xor
add
mov
add
xchg
push
inc
cmp
std
push
and
in
push
inc
test
imull
sti
lret
jle
sbb
pop
xor
lret
pusha
add
mov
out
loope
add
pop
inc
add
dec
test
std
inc
add
aad
push
pop
xor
clc
imul
add
loop
mov
repz
movsl
loop
mov
mov
mov
imul
out
dec
sub
jle
xor
mov
jnp
iret
jbe
daa
pop
imul
or
out
add
cmp
out
mov
push
jle
push
mov
push
lods
fisttpll
jg
inc
push
jno
rolb
fildl
mov
push
dec
call
stos
and
mov
popa
lock
loop
mov
add
sub
jae
mov
add
inc
jnp
add
add
add
out
es
cmp
inc
xchg
add
cmp
pusha
add
jae
and
rolb
push
sahf
adc
mov
inc
pusha
add
cld
fstpt
stc
and
add
add
rolb
push
rolb
cmp
bound
mov
test
arpl
into
inc
add
daa
mov
xchg
sub
mov
mov
add
sbb
adc
mov
sbb
ret
xlat
rolb
int3
out
add
jo
mov
add
lods
inc
sbb
jb
mov
sbb
aam
imul
mov
js
add
mov
mov
outsl
movsl
dec
mov
mov
fs
pop
jle
in
scas
inc
sbb
and
fsts
mov
jmp
lahf
adc
mov
insl
stos
xchg
enter
inc
rorl
mov
and
das
add
lret
loopne
mov
in
mov
mov
and
pop
pop
addb
sbb
add
push
add
sub
mov
xlat
fs
ljmp
btr
repz
aam
stos
lcall
dec
xor
push
add
or
je
insb
mov
ss
inc
add
lds
and
movsb
adc
aaa
leave
xor
pusha
add
adc
mov
cmp
xchg
sahf
icebp
mov
mov
fildl
push
add
fsts
mov
in
inc
lret
push
inc
aas
mov
std
dec
jmp
mov
ret
adc
into
rolb
mov
adc
mov
push
add
jb
mov
andl
data16
iret
adc
ret
pusha
add
mov
jno
jle
lock
adc
mov
add
mov
add
mov
xchg
mov
add
mov
mov
mov
ja
jne
push
pop
insl
int3
call
xchg
add
lods
clc
xchg
int
inc
xor
add
xchg
dec
movsl
lea
xlat
lods
sbb
push
in
cmpsb
push
add
inc
and
mov
lods
sbb
add
push
mov
add
mov
inc
sbb
add
push
add
add
mov
mov
sub
pop
out
test
cmp
mov
sub
addb
out
push
cmp
int3
sbb
sub
xlat
fldcw
mov
push
mov
add
mov
loop
mov
mov
and
jb
mov
inc
adc
mov
add
mov
or
repz
shll
add
cli
dec
test
fwait
and
xchg
shll
mov
add
add
ror
and
insb
jmp
into
mov
cmpsb
adc
mov
repz
xchg
dec
adc
test
xchg
add
in
and
movq
scas
pop
push
add
fdivrs
sti
cs
out
loope
test
add
jle
lock
ss
ljmp
xchg
add
mov
lock
add
int3
enterw
stos
pop
or
add
xorl
add
iret
push
cmp
mov
sub
xor
mov
mov
hlt
adc
mov
pop
out
jmp
pop
mov
mov
and
lock
mov
xchg
imul
push
or
jmp
add
add
sbb
mov
ret
jge
xchg
repz
add
sbb
push
out
dec
adc
add
add
movsb
out
pop
push
xchg
lea
lret
xor
mov
cmpsb
pop
mov
mov
movsl
sbb
rolb
imul
or
lcall
mov
enter
shll
add
jnp
add
pop
ja
pop
mov
mov
jp
push
add
mov
mov
aam
or
xchg
inc
lods
ret
stos
cld
jp
add
pop
xchg
add
mov
das
push
js
adc
mov
and
mov
mov
stos
cltd
jbe
lods
cmp
inc
dec
mov
lds
dec
mov
xchg
sahf
imul
dec
mov
mov
mov
out
ss
pushf
inc
pushf
sbb
cmpl
rolb
mov
xchg
jb
mov
add
testb
lret
and
mov
add
add
les
add
mov
notl
cmpsb
add
movsb
or
pop
add
out
lds
cld
adc
mov
lret
push
mov
push
add
add
jb
mov
cli
mov
jns
ficompl
call
push
movsl
sub
pusha
add
add
add
jns
out
hlt
test
ja
out
addb
pop
dec
push
ss
out
cmpsl
loopne
mov
cmpsl
mov
mov
scas
ret
dec
insb
outsl
rcll
mov
mov
and
es
mov
xchg
pop
fidivrs
shrl
mov
add
and
lock
arpl
pop
dec
enter
sub
data16
mov
pop
mov
ss
mov
mov
push
addb
push
push
out
mov
push
addb
or
add
mov
cmc
out
xchg
loope
xchg
dec
fwait
sub
in
adc
mov
fimull
js
add
xchg
popf
fmull
sqrtps
mov
pop
in
sahf
pop
test
cld
adcl
mov
sbb
or
add
add
arpl
fldt
adc
push
mov
movsb
int
add
mov
pop
addb
adc
mov
inc
loopne
mov
and
and
add
mov
add
sub
or
jecxz
push
fucomip
insl
fwait
mov
mov
xchg
adc
inc
mov
pop
pop
mov
imull
jae
xor
mov
ja
mov
aas
out
and
mov
loope
push
scas
inc
repnz
xchg
hlt
imul
je
cmp
add
in
xor
mov
lahf
and
pop
mov
mov
mov
fistps
aaa
and
mov
adc
mov
cwtl
aam
lock
cmp
add
xchg
add
add
mov
loopne
mov
xchg
add
andl
mov
std
mov
addb
jbe
fmul
mov
inc
jle
ret
stos
pop
add
or
int3
mov
movsl
lods
and
or
std
jbe
insl
jl
mov
pop
jle
add
nop
add
mov
insb
aam
adc
bound
mov
add
add
lds
mov
adc
jecxz
pop
loopne
mov
imul
cld
push
loope
add
shrl
pop
push
lods
cmp
mov
mov
sbb
pop
mov
mov
pop
mov
bound
mov
aad
mov
xor
xlat
cmp
add
repnz
mov
addb
and
mov
and
cmp
add
xchg
xlat
addb
xor
pop
jo
mov
jno
aaa
fdivrl
lret
mov
adc
bound
mov
push
rcrl
mov
mov
lods
sub
add
cmp
mov
mov
mov
adc
aaa
sub
nop
add
xor
call
mov
arpl
daa
fnstenv
mov
mov
jns
scas
lcall
jg
or
add
lods
xchg
or
aaa
stos
aas
addb
roll
divb
imul
mov
cmp
sub
cmp
mov
mov
enter
add
dec
xor
mov
outsl
cmc
xchg
lret
push
xchg
xchg
add
mov
add
pop
mov
add
mov
aas
int
add
and
mov
into
addb
addb
repnz
insb
mov
xor
mov
dec
jno
add
addb
ret
imulb
xlat
test
int3
xor
mov
add
mov
addl
xchg
movsb
clc
jecxz
add
test
jnp
das
nop
add
cs
ds
mov
mov
sbb
dec
int
lds
add
sub
and
ret
fwait
cmp
nop
add
xchg
add
aaa
ja
mov
sbb
xor
push
pop
sti
add
mov
add
add
or
arpl
jl
push
nop
add
nop
add
and
sbb
in
mov
add
inc
or
jmp
add
ja
push
inc
dec
fimuls
add
push
cmp
mov
in
mov
leave
mov
mov
jns
cmp
inc
add
add
test
jne
xchg
add
add
add
add
loop
mov
push
test
cmp
rolb
cmpsl
nop
add
popa
lahf
jl
aas
mov
les
add
jmp
sbb
pop
and
in
notb
mov
shll
insb
lods
fdivr
mov
adc
mov
negl
fldt
mov
aas
push
mov
xlat
cwtl
clc
cwtl
rolb
mov
sub
add
add
ds
cld
push
add
sub
inc
bound
mov
js
xchg
leave
sub
inc
dec
addb
and
mov
inc
add
cmc
xchg
mov
mov
mov
adc
scas
lods
cld
imul
or
cmpl
push
fdivrl
inc
add
mov
cmp
flds
mov
jo
mov
push
dec
inc
sbb
popa
fidivrl
aam
mov
mov
outsl
out
jg
inc
inc
add
jl
stc
stc
mov
push
xor
adc
sbb
addb
cmp
cmp
incb
pop
inc
stos
out
sbb
aad
inc
clc
xchg
shll
imul
push
ja
outsb
fwait
ss
es
mov
add
test
add
mov
divb
lds
add
idivl
sub
mov
add
xchg
xor
mov
xchg
add
add
rorl
cli
popf
xchg
push
lods
pop
notl
inc
add
add
dec
rolb
mov
roll
imul
mov
add
in
xor
mov
mov
js
out
lock
iret
movsb
mov
jns
imul
rolb
mov
test
adc
sti
cmp
adc
mov
ljmp
loop
mov
icebp
popf
mov
add
cmc
sub
fwait
xchg
jge
xor
mov
add
inc
nop
add
add
jne
push
test
sbb
add
lcall
scas
ljmp
mov
dec
lret
pop
or
popa
ss
fcomi
xlat
sub
mov
or
mov
fdivrp
cmp
mov
fs
mov
xor
xchg
and
push
std
imul
jnp
ret
fildll
lret
pop
adc
mov
mov
sub
push
add
mov
dec
dec
lret
mov
std
mov
add
das
dec
inc
and
dec
pop
push
out
int3
sub
dec
lcall
or
cmp
sbb
jae
in
mov
fwait
lea
out
add
adc
repnz
insl
call
push
popf
inc
add
mov
add
test
cs
push
add
jb
mov
fsubrl
pxor
xor
mov
or
outsb
mov
push
cmp
mov
nop
add
push
add
popa
fimuls
xor
xchg
jmp
pop
mov
sbb
push
or
bound
mov
inc
mov
jmp
cmp
add
add
dec
stos
cwtl
bound
mov
insl
rolb
push
xor
jl
add
mov
add
subl
jp
sub
add
les
adc
xor
adc
mov
out
aam
insl
adc
push
xor
mov
lea
add
push
ss
and
into
jb
mov
xchg
and
push
xor
addr16
in
add
mov
xor
mov
add
mov
sbb
mov
adc
add
pop
fstl
add
xchg
mov
bound
mov
add
mov
sub
xchg
insb
and
mov
fs
push
add
xchg
pop
out
xchg
push
add
add
mov
add
pushl
pop
rol
call
adc
add
add
popa
mov
pop
push
add
addb
xor
mov
mul
cmc
cs
bound
mov
jo
mov
in
pop
hlt
jo
mov
icebp
pop
loopne
mov
and
mov
mov
mov
leave
mov
mov
ret
stos
movsl
or
xor
mov
sbb
rolb
mov
inc
scas
lea
add
stc
dec
cltd
loop
mov
mov
les
inc
add
xchg
add
or
lret
lret
addb
push
cwtl
or
push
sub
dec
add
inc
in
xchg
push
mov
pop
cmp
imul
add
xor
lahf
mov
jl
aad
fimull
pop
je
add
mov
jecxz
mov
mov
push
cld
andl
imulb
push
jge
xchg
into
push
fcoml
add
add
and
mov
push
xchg
add
jge
notl
mov
and
mov
scas
pop
ss
cmp
add
and
mov
cwtl
aaa
mov
in
popf
add
cli
sub
ret
test
jb
mov
add
jmp
aaa
xchg
inc
add
cltd
repnz
subl
mov
add
out
xor
mov
inc
imulb
dec
dec
fstpl
add
sbb
add
lds
mov
mov
mov
mov
mov
ret
lods
lods
mov
push
add
cmp
js
jnp
andl
clc
mov
repnz
scas
sahf
call
mov
inc
repnz
mov
je
jg
cmp
inc
add
sbb
mov
ficoml
mov
pop
inc
add
push
rcr
add
mov
mov
inc
leave
push
jl
jecxz
and
jge
mov
add
xchg
mov
dec
mov
add
ret
push
and
sbb
aad
adc
mov
flds
mov
movb
test
adc
fcmovnu
jg
pop
addb
arpl
sbb
add
test
inc
bsr
or
xor
lock
mov
inc
aam
std
xor
mov
mov
repnz
add
adc
mov
je
out
jp
addb
or
mov
rolb
mov
push
add
mov
mov
stos
cmp
mov
add
sti
push
int3
repz
sub
cmp
cltd
icebp
mov
inc
add
xchg
adc
xchg
lea
fs
gs
mov
add
add
add
mov
movsl
mov
push
fcompl
dec
jp
add
mov
mov
xchg
int
sub
cmpsb
sub
jmp
xor
movb
mov
roll
xlat
pop
stos
adc
dec
dec
xor
add
xor
mov
inc
push
or
push
mov
dec
clc
cld
imul
mov
addb
repz
cmpsb
mov
add
push
cmovle
idivl
mov
jl
inc
popf
mov
add
mov
mov
or
push
enter
mov
add
cmpl
shrl
dec
jg
scas
jge
or
mov
adc
test
movsb
testb
in
aad
mov
add
insb
decl
mov
cmp
ds
mov
dec
and
mov
testb
mov
sub
push
fwait
rolb
mov
inc
add
mov
cmc
mov
xchg
add
jecxz
addr16
inc
orl
mov
xchg
dec
sahf
hlt
dec
sub
std
arpl
and
mov
jo
mov
lods
pop
movsb
js
pop
mov
adc
mov
mov
jmp
jae
mov
loope
mov
mov
cltd
fisttpl
push
fwait
sbb
stc
movsl
gs
add
addr16
mov
rolb
mov
sub
xchg
pop
or
adc
jmp
gs
das
cmp
lahf
jge
or
imul
inc
fsubl
xchg
dec
mov
mov
or
mov
je
mov
pop
outsl
mov
cmp
pop
or
mov
xchg
es
cltd
arpl
adc
jecxz
int
jo
mov
jmp
jno
imul
and
mov
add
jnp
push
pusha
add
add
cwtl
xchg
ljmp
push
into
xchg
jle
add
mul
pop
xor
jp
mov
inc
repz
xlat
stos
loope
mov
mov
call
test
xchg
and
jmp
pop
insb
mov
fsubrp
in
pop
xchg
jno
fwait
xchg
out
push
in
dec
push
mov
add
rolb
mov
add
pop
jbe
nop
add
add
in
adc
jae
add
mov
and
xlat
mov
in
test
xchg
lret
unpcklps
or
mov
inc
push
fcmovne
stos
in
addb
mov
mov
mov
cmp
add
ja
sbb
adc
mov
add
mov
ret
push
cmp
mov
xchg
addb
xor
mov
xor
mov
or
sbb
js
ljmp
mov
add
mov
inc
pop
pushf
cmp
push
shrl
or
pop
loope
xchg
inc
mov
mov
mov
add
or
mov
dec
mov
stos
clc
cld
mov
push
xor
mov
add
sub
gs
sbb
xchg
jo
mov
add
stos
pop
pop
push
ja
clc
daa
loopne
mov
movswl
cmp
jae
add
add
mov
out
jp
cmpsb
dec
popa
std
movsl
add
mov
or
xchg
test
add
or
loop
mov
out
test
sub
int
cmp
inc
or
pop
shl
add
sub
add
int3
scas
hlt
jmp
mov
fwait
test
mov
rolb
xchg
add
popf
dec
lret
inc
or
add
out
lock
jns
rolb
mov
or
addr16
mov
push
and
lret
cmp
mov
xor
mov
add
aad
mov
mov
add
in
or
add
mov
pop
cltd
addb
cltd
mov
cmp
mov
mov
lret
mov
fisttpl
cmp
pop
sbb
xchg
jecxz
xor
and
push
xlat
cmpsl
test
push
xor
popa
and
xor
icebp
clc
mul
mov
scas
int3
fdiv
add
mov
mov
jmp
lds
mov
jl
inc
add
insb
inc
add
mov
mov
insl
mov
imul
sahf
jecxz
xor
xor
xchg
gs
inc
nop
add
add
add
cmc
clc
or
mov
mov
mov
addb
xor
lret
ret
testl
mov
pop
pop
rolb
mov
mov
xor
add
dec
mov
xchg
gs
loope
cmp
fimuls
loope
xchg
shll
push
add
lret
in
iret
int3
jmp
cmpsl
loop
mov
xor
mov
pop
imul
xlat
cmc
or
add
adc
mov
xor
mov
mov
pop
jmp
rolb
mov
fdiv
add
mov
mov
mov
popa
dec
sbb
sub
das
lea
inc
push
pop
in
pop
sbb
bound
mov
int3
ds
add
stc
and
mov
test
das
mov
pop
mov
cmpsl
mov
add
mov
fldl
add
add
dec
xor
mov
mov
xor
in
add
outsl
mov
je
clc
adc
mov
inc
add
add
add
sub
fldcw
in
add
inc
pop
and
sti
xchg
aaa
out
scas
lahf
push
in
push
jne
and
mov
je
add
mov
mov
mov
push
ja
pop
lds
jmp
pusha
add
pop
xor
stos
and
mov
sbb
jb
mov
jl
add
add
dec
mov
rcrl
add
dec
or
shrl
repnz
je
push
insl
popa
lret
sbb
jae
in
xlat
jge
jo
mov
pop
mov
xor
mov
mov
jmp
int3
add
add
in
xchg
iret
inc
xor
mov
movsl
dec
push
jae
mov
int
mov
adc
cmp
fidivs
and
add
add
or
add
jae
sbb
add
add
or
or
add
ret
ljmp
int3
adc
mov
add
mov
add
pop
movb
add
ja
fs
mov
add
and
cwtl
shll
cmp
mov
add
pop
jp
push
cld
sub
les
pop
mov
mov
push
out
add
sub
mov
notl
sbbl
addb
inc
or
ds
pop
jmp
xor
mov
pop
call
inc
add
pop
scas
mov
in
and
push
cli
pop
xchg
inc
push
xchg
sbb
xor
mov
paddusb
add
jb
mov
push
or
adc
mov
mov
add
mov
pop
and
mov
aas
fmul
cmp
sbb
pop
sbb
arpl
inc
std
fcompl
mov
jns
add
dec
lea
add
rolb
out
mov
or
fsubs
add
fcomps
scas
incb
repnz
add
in
data16
mov
mov
or
lods
jecxz
xchg
jle
adc
add
add
add
fs
ds
mov
mov
adc
mov
in
push
mov
or
mov
or
lea
leave
adc
icebp
dec
sti
push
je
add
mov
push
mulb
and
mov
mov
push
add
and
mov
in
add
mov
inc
add
std
dec
loop
mov
call
or
stos
xlat
out
xchg
cli
dec
movsl
in
push
mov
adc
mov
xchg
add
push
cmc
iret
hlt
in
jp
pop
pop
mov
xor
add
loope
sub
fcomps
lds
xor
mov
pop
dec
pushf
pop
bswap
adc
mov
add
mov
popa
rolb
mov
sbb
add
push
add
gs
lds
jmp
jae
xor
sub
mov
cmc
jnp
and
mov
mov
mov
add
or
add
mov
movsb
pop
sbb
add
movsb
iret
cmpsl
daa
xchg
dec
movsb
mov
xchg
lcall
xchg
pop
int3
push
push
cltd
leave
jbe
cmp
add
hlt
out
addb
loope
enter
addr16
add
insb
stos
test
mov
sub
inc
aaa
mov
jg
add
fistps
hlt
pop
fidivrl
inc
cmpsl
aad
xchg
std
out
pop
cmp
mov
flds
mov
or
push
arpl
mov
push
mov
mov
sbb
cltd
lret
mov
mov
mov
xchg
mov
inc
cmp
aam
and
mov
lds
mov
add
rcll
stc
push
in
jl
fmulp
sbb
add
imul
jne
test
dec
mov
inc
add
sbb
add
jnp
inc
arpl
ret
popf
jnp
and
ljmp
jne
sbb
pop
push
add
aas
cltd
mov
cmp
mov
add
jo
mov
mov
dec
jp
add
mov
mov
ret
sub
mov
out
call
ss
add
xchg
stc
mov
jne
enter
push
popa
mov
in
loopne
mov
mov
add
mov
xor
pop
push
cld
faddl
mov
stos
std
push
add
inc
sub
add
mov
call
daa
adc
jmp
add
ja
push
pushf
adc
mov
std
out
addps
xlat
mov
xor
mov
aad
cmp
sub
adc
in
jmp
add
leave
adc
loope
cmp
out
js
movsl
mov
push
add
cmp
fimuls
es
jns
ficompl
fs
xor
xchg
jbe
add
add
jecxz
pop
addb
jae
jae
dec
xlat
out
ud1
mov
mov
mov
mov
cmpsb
mov
insb
fsubrl
add
or
add
add
insb
xor
mov
ljmp
lods
nop
add
popf
popa
sub
fcoms
cmp
xchg
add
mov
enter
fucomip
in
jl
jge
dec
repnz
and
mov
sbb
jnp
jns
outsb
aad
push
das
mov
mov
mov
jge
inc
aam
cmp
pop
pop
shl
call
push
rolb
mov
mov
ja
pusha
add
aam
mov
or
add
mov
out
xchg
pushf
sub
or
mov
add
push
movsl
add
add
add
mov
mov
mov
add
aad
addr16
sti
push
cmpsb
test
add
mov
add
mov
lcall
shll
add
mov
sti
out
and
inc
rolb
mov
addb
push
cwtl
xor
and
mov
jmp
stos
mov
test
hlt
mov
add
or
xor
mov
mov
fadds
repnz
lods
cmpsb
outsb
fbld
daa
xchg
dec
popa
mov
sbb
loopne
mov
fwait
daa
jle
aas
inc
add
cwtl
jl
add
sbb
and
mov
push
or
adc
adc
mov
mov
push
cmc
imul
cmp
mov
jnp
ljmp
pop
das
mov
inc
add
push
inc
add
ss
add
xchg
add
lds
add
add
add
insb
fprem1
cmp
xchg
xchg
es
jle
loope
rolb
mov
clc
sbb
cmc
mov
lcall
add
outsb
out
jle
pop
and
xchg
pushl
add
mov
add
mov
stc
lret
in
idivl
nop
add
inc
dec
and
int3
addr16
aas
shrl
or
add
mov
ja
sbb
inc
lds
and
test
xor
mov
push
push
inc
mov
mov
dec
in
imulb
test
rolb
mov
add
add
mov
pop
pop
jmp
add
test
xchg
add
fldt
addb
nop
add
aas
popa
jne
rolb
mov
test
mov
xor
fwait
stos
xchg
repnz
add
jb
mov
add
mov
xchg
in
push
dec
test
call
bound
mov
lods
jae
cmc
pop
hlt
push
add
mov
dec
jnp
xchg
inc
add
inc
push
sti
bound
mov
rolb
mov
and
mov
cmp
dec
sahf
push
int
xchg
movsb
dec
ret
or
lods
pop
iret
and
movsb
and
jns
out
mov
dec
jbe
cmp
mov
mov
movsl
sub
push
cmp
fadds
rolb
mov
and
mov
rolb
mov
lods
das
xor
aad
sbb
daa
push
xor
mov
adc
inc
add
and
mov
ficoms
mov
push
jle
mov
add
dec
jg
out
push
outsl
sub
rorl
cli
fistpll
enter
add
bound
mov
jmp
inc
xlat
mov
out
dec
aas
mov
in
sub
jns
xchg
sub
rcll
arpl
xchg
dec
push
add
pcmpeqd
add
mov
jno
nop
add
add
lret
and
mov
push
xorl
loop
mov
addb
mov
rolb
fisubs
dec
mov
add
scas
mov
jecxz
pop
lea
add
xor
decb
and
mov
js
add
fucomi
mov
mov
add
addb
addb
test
add
es
and
mov
mov
mov
mov
push
push
gs
loopne
mov
inc
jg
insb
jno
xor
addr16
mov
or
pop
outsb
push
in
mov
mov
and
mov
inc
add
mov
adc
mov
add
pop
ret
or
stc
popf
rcrl
test
add
xor
lret
jnp
outsb
add
mov
fsubrl
or
inc
stc
bound
mov
loope
in
out
fnstsw
addb
in
sub
das
ds
xor
mov
sub
or
out
icebp
xrelease
mov
xor
mov
lods
dec
dec
mov
cs
add
xchg
ja
xchg
add
rolb
mov
movsb
arpl
fwait
push
add
mov
jo
mov
cli
je
xchg
add
xor
mov
aad
push
popa
add
scas
test
cld
mov
imul
add
jb
mov
scas
push
add
push
jecxz
add
dec
pop
sbb
imul
jne
pop
addr16
jb
mov
mov
enter
mov
cmp
sbb
stos
in
imul
incb
add
jmp
lahf
xchg
mov
mov
cmp
add
mov
push
test
das
mov
add
jno
cmp
addr16
add
xor
mov
add
xor
add
and
mov
ljmp
add
test
addb
pop
jo
mov
notl
inc
add
mov
jno
orl
dec
inc
add
mov
das
sbb
mov
add
add
incb
add
lods
lds
mov
mov
mov
stos
mov
sub
jns
add
scas
test
sbb
std
inc
push
cwtl
testl
mov
scas
jl
xor
mov
xchg
sbb
aad
in
movsl
add
mov
add
cmc
or
mov
mov
sub
mov
add
pop
sbb
loopne
mov
mov
sti
lahf
xor
dec
movsl
cmp
add
sub
add
add
mov
fstl
notb
pop
add
pop
fstl
sarl
loopne
mov
add
add
rolb
mov
sub
pop
xor
mov
add
sti
lret
sbb
lock
into
icebp
xor
or
mov
or
sahf
test
lods
jecxz
ljmp
push
ja
les
and
xchg
out
mov
repnz
xlat
addr16
mov
rolb
mov
mov
rolb
iret
lods
pop
ret
cltd
inc
cmp
push
push
lea
xor
mov
popf
push
jb
mov
mov
fnstenv
leave
adc
inc
shl
add
push
movsb
lahf
or
sbb
push
push
inc
sti
enter
sti
ficoml
add
das
or
das
mov
mov
lcall
xchg
mulb
jl
addb
into
mov
insb
mov
jmp
movsl
pop
mov
adc
add
jg
mov
fcoms
fcoms
add
add
jle
add
lret
sbb
add
inc
push
rolb
mov
cmp
or
and
mov
jg
rolb
mov
bound
mov
ss
mov
push
mov
push
loop
mov
mov
mov
dec
mov
addr16
into
cld
mov
scas
xchg
push
dec
jl
cmp
outsb
mov
rolb
add
push
sbb
dec
pop
in
repnz
outsb
roll
jns
cmp
pop
dec
jbe
lahf
outsl
xor
add
push
sbb
mov
jo
mov
stc
test
mov
sub
stos
adc
and
in
jp
mov
hlt
jae
loopne
mov
fimull
insb
mov
mov
add
push
cmp
loopnew
mov
test
rolb
mov
inc
add
movsl
iret
dec
aas
push
add
mov
add
jmp
add
insb
sbb
mov
add
mov
inc
add
add
push
mov
xchg
xchg
cs
pop
adc
mov
ficompl
in
enter
pop
jge
dec
jbe
movsb
mov
push
idivl
popf
dec
int3
add
insl
cmpsl
rolb
mov
mov
scas
jbe
mov
mov
mov
dec
push
sbb
mov
add
mov
mov
mov
mov
sub
and
mov
mov
cmp
ss
into
addb
pop
outsb
push
loop
mov
add
bound
mov
push
add
test
xor
adcl
mov
xor
mov
sub
int3
das
lret
or
add
jns
add
movsb
cmc
add
mov
mov
or
jl
xor
cmp
and
loopne
mov
ret
push
sbb
xor
mov
stos
sub
es
enter
add
scas
add
insb
iret
sub
enter
faddp
add
add
insl
repnz
mov
mov
insb
xchg
pop
fistps
add
add
adc
jbe
add
xor
inc
add
in
stos
bound
mov
pop
mov
mov
loopne
mov
stos
jl
xchg
fdivl
scas
sahf
lahf
or
rcll
daa
test
add
std
lahf
stos
push
mov
pop
lods
sbb
insl
inc
add
dec
int
add
pop
adc
add
jnp
add
mov
fmull
clc
loopnew
mov
nop
add
imul
mov
cli
xchg
add
pop
jbe
xor
mov
addb
pop
inc
scas
mov
pop
mov
mov
rcll
mov
push
sbbl
add
aaa
push
in
cmp
sbb
add
pop
cmp
add
mov
mov
pop
stc
dec
rcrl
inc
out
mov
test
sub
or
fs
ret
aam
add
iret
test
add
insb
cwtl
dec
xor
decl
jae
add
xor
mov
mov
int3
jg
lea
add
push
outsl
iret
inc
pop
mov
outsb
push
xchg
dec
lods
aas
iret
add
mov
sti
push
jp
adc
fistpl
add
cmp
enter
add
xor
push
pop
repz
cld
add
fwait
outsl
imul
jbe
int
test
mov
jecxz
xor
mov
arpl
dec
sbb
leave
fnsave
and
xchg
jbe
xor
sbb
nop
add
cmp
mov
mov
mov
pop
add
mov
enter
mov
mov
push
mov
cli
movsb
and
add
dec
jl
push
add
mov
or
xorl
std
inc
mov
add
mov
in
movsl
cmpsb
int3
cmpsb
mov
mov
test
pop
jmp
push
mov
sub
mov
inc
add
mov
dec
sbb
dec
test
push
mov
add
and
adc
mov
jo
mov
dec
in
and
xor
mov
mov
dec
sarl
mov
mov
ds
add
jbe
mov
stc
cli
jo
mov
sub
cmc
mov
add
jns
cmp
and
add
mov
or
lret
inc
test
rolb
mov
mov
cmp
push
inc
sub
icebp
push
popa
cmp
xchg
inc
sub
sbb
and
mov
push
nop
add
and
mov
jmp
mov
aaa
movsb
loop
mov
mov
mov
cmc
mov
out
stos
mov
cwtl
lret
into
aas
pop
pop
mov
mov
add
daa
inc
xchg
lods
jle
jb
mov
cmp
sub
dec
rolb
mov
add
or
imul
mov
mov
movsl
inc
add
pop
pop
cmp
cmpsb
iret
inc
movntq
addb
popf
mov
add
add
je
and
jno
fldenv
jb
mov
mov
bound
mov
jmp
fsubs
mov
xchg
jl
add
mov
pop
add
sbb
add
out
mov
addb
mov
add
add
popf
push
dec
cld
pop
pop
ja
mov
scas
mov
neg
lret
push
rolb
mov
shrl
mov
xchg
mov
out
lock
fdiv
push
ss
jns
adc
dec
sbb
lods
jmp
sbb
outsl
jecxz
loope
sbb
icebp
test
insb
scas
add
aam
aas
addr16
in
and
mov
loop
mov
ds
sbb
or
js
mov
mov
adcl
cmp
cmpsb
repnz
mov
mov
inc
add
add
add
pop
rolb
push
ret
cmpsl
mov
add
mov
daa
sub
jl
sbb
add
call
adcl
lea
stos
adc
and
and
mov
leave
ficomps
xor
add
out
leave
push
add
cltd
lds
xor
mov
icebp
loopne
mov
dec
pop
fprem1
push
sub
mov
les
add
addb
bound
mov
add
pop
stos
cmpsb
mov
push
jl
shll
add
scas
push
scas
call
enter
mov
push
xchg
bound
mov
pop
sub
adc
and
push
movsl
jae
push
xor
stos
popa
addb
xorl
cmp
cmpsb
add
rolb
mov
inc
das
leave
jecxz
inc
add
add
add
clc
movsb
jno
sbb
xchg
mov
mov
rorl
pusha
add
fdivrs
push
add
mov
xor
leave
and
mov
add
add
aad
sbb
mov
jbe
sbb
add
in
add
roll
mov
sbb
push
jle,pt
cmpl
add
xchg
ljmp
add
mov
lods
adc
repnz
dec
out
test
test
dec
lcall
add
mov
mov
rcl
jge
pop
iret
icebp
movb
xchg
mov
xor
arpl
inc
add
sahf
mov
mov
stos
imul
push
xlat
push
add
stc
bound
mov
xor
fnstcw
dec
jl
or
and
mov
pop
es
push
test
lret
fcmovnbe
js
and
leave
or
xchg
push
in
test
jmp
lret
xor
mov
jbe
sub
add
lret
outsb
lods
or
xor
mov
sbb
sub
es
jne
add
mov
int3
jno
add
mov
cwtl
insb
pop
cmp
addb
push
add
ret
add
in
aad
add
dec
and
fldt
mov
add
or
add
push
fimull
clc
add
xchg
xchg
xlat
jl
add
add
mov
loopne
mov
add
xor
mov
add
mov
cld
inc
add
popa
enter
mov
mov
movsb
jnp,pn
ret
lods
push
mov
ljmp
je
pop
and
gs
pushf
out
push
add
mov
mov
add
sub
mov
pop
xor
jp
ljmp
push
push
fdiv
add
sarl
add
push
add
sbb
fisttpl
popa
loope
test
movsl
test
mov
aas
leave
dec
out
add
es
or
fmull
push
add
or
les
push
add
mov
jmp
mov
jp
push
pop
outsb
sbb
adc
sti
pop
cld
sub
add
sub
xchg
repz
mov
rolb
sub
mov
mov
fcomi
daa
push
es
sbb
add
cmp
sub
cwtl
fwait
ljmp
mov
cmc
or
lds
mov
dec
subl
sub
scas
ret
pop
push
add
push
sub
or
int
jmp
jae
lock
cs
xchg
aas
mov
fbstp
add
mov
pop
push
dec
and
and
call
daa
in
sub
shll
pop
mov
lret
add
insb
dec
inc
cs
add
mov
mov
loop
mov
jnp
rolb
mov
mov
mov
xchg
ds
xor
add
add
loope
in
pop
push
jge
lcall
hlt
pop
push
into
rolb
notl
inc
hlt
jbe
xchg
or
add
mov
mov
lcall
popf
and
sub
add
add
add
xchg
out
test
mov
loope
les
ret
push
sub
dec
adc
adc
gs
pop
pop
mov
and
lea
popa
addl
shrl
xchg
mov
mov
or
fimull
mov
lock
push
add
