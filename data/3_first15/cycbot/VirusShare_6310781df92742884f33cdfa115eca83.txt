xor
push
mov
mov
mov
imul
aaa
sti
fcmovu
mov
cmp
jecxz
fs
mov
add
mov
xchg
adc
dec
fs
dec
sarl
mov
push
jno
or
and
in
adc
add
push
hlt
jg
add
jmp
inc
add
cmp
sub
repnz
add
fdiv
mov
les
lds
mov
test
fwait
pop
notb
pop
mov
mov
pop
pop
mov
cmp
add
ficompl
xor
imul
push
dec
std
sub
mov
lea
or
add
nop
aad
dec
inc
add
lock
pop
repnz
shlb
in
mov
ljmp
outsl
lahf
jge
sub
xchg
fsubrl
and
movl
mov
mov
mov
cli
pushl
cmp
or
add
bound
mov
pop
mov
dec
and
scas
pop
mov
inc
add
inc
add
roll
add
out
push
cmpsb
js
mov
dec
dec
dec
mov
imul
es
push
into
int
add
and
cs
insb
call
push
jp
jle
ds
pop
rcrl
dec
mov
idivl
rolb
ds
dec
enter
scas
dec
fisubl
stc
call
add
pop
data16
mov
push
or
dec
mov
add
faddl
add
push
mov
lret
leave
in
jnp
out
roll
fsts
sub
gs
and
fsts
add
fbld
and
add
filds
add
fisubl
push
iret
xchg
xchg
xor
add
add
pop
add
add
mov
add
add
test
push
cs
push
push
dec
out
add
lods
push
movsb
inc
add
sti
push
pop
mov
outsb
hlt
mov
mov
cs
jg
arpl
jge
jecxz
push
add
cmpsl
cli
out
insb
xor
sbb
add
aam
lds
test
mov
in
frstor
clc
inc
add
xor
insl
addl
add
push
add
imul
test
jp
mov
pop
add
and
and
add
stos
js
add
or
sti
fbld
mov
scas
insl
cmp
es
out
add
add
jge
addl
imul
je
push
fcmovne
jo
add
add
dec
inc
add
mov
hlt
in
lods
out
mov
lret
or
stos
adc
add
jge
xor
sub
jo
and
sub
dec
pop
jge
or
shr
or
insl
adc
add
pop
shl
pusha
add
mov
jle
cmp
movsb
and
jns
mov
add
add
stos
xor
add
pop
xor
cmc
add
xor
das
fwait
mov
inc
add
std
cmp
add
fucomp
lods
shr
or
adc
jmp
and
std
lret
outsb
dec
inc
add
addl
addl
sub
add
push
cmp
stos
je
add
pop
pop
in
into
loope
xor
or
or
arpl
mov
and
add
sbb
sbb
mov
or
fstl
outsb
mov
push
rcl
adc
sub
dec
fwait
jbe
jle
cmc
sub
movsl
mov
mov
loopne
jns
fcmove
fwait
push
adc
add
pop
sub
jp
and
add
stos
dec
fistpll
rorl
enter
popf
or
mov
out
add
inc
add
ds
or
les
xlat
insb
jecxz
or
xchg
adc
clc
cs
jge
xchg
cltd
push
cmp
cmp
fisttps
ds
jno
inc
add
test
frstor
bound
stos
jbe
add
push
test
add
fistl
add
add
pop
addr16
add
pop
inc
add
cmp
pusha
add
addr16
sbb
sbb
or
fwait
or
pop
add
xor
dec
gs
mov
bound
xchg
inc
add
inc
add
aaa
sbb
or
inc
add
mov
inc
add
cmp
mov
rcrb
frstor
xchg
mov
movsb
addl
xchg
push
add
outsl
sti
jmp
add
ret
in
bnd
adc
rolb
push
aas
sub
push
push
inc
add
add
add
mov
dec
mov
add
hlt
leave
dec
mov
xor
add
add
sub
add
add
xchg
adc
add
jp
xor
sbb
mov
ret
add
push
ficompl
add
add
mov
dec
fdivrs
cld
cmp
xchg
add
xor
in
imul
mov
add
rclb
push
mov
add
and
pop
xor
loop
or
mov
sbb
adc
popa
add
push
lcall
test
push
roll
repnz
push
jmp
jae
push
das
adc
mov
pop
addb
adc
sti
pushf
add
enter
xchg
jae
add
mov
bts
sbb
movsl
jp
add
add
cmc
sbb
fbld
lret
stos
int3
xor
add
jo
in
mov
movsl
lds
out
pop
mov
add
add
mov
push
test
addb
add
inc
add
xchg
mov
ss
loopne
add
call
repnz
mov
jbe
dec
loope
cmp
jnp
cmp
add
lods
pop
dec
mov
add
sub
lea
pushf
sbb
ret
add
mov
xor
add
mov
addb
popa
add
jecxz
sbb
add
roll
add
mov
jbe
add
test
or
mov
or
sarl
inc
add
clc
push
mov
in
cmp
ds
icebp
cmp
add
jp
testb
aas
shr
inc
add
xor
fs
dec
push
addb
cmp
addl
add
add
push
filds
ret
add
adc
rolb
add
add
add
imul
jl
mov
adc
scas
iret
shlb
and
inc
add
jnp
add
int3
push
xchg
mov
in
mov
cmc
jmp
push
dec
movsb
inc
add
fldt
push
addl
aaa
ret
add
add
ror
mov
mov
cwtl
or
xor
pusha
add
in
xchg
xlat
sub
lcall
int
and
sbb
jge
add
jl
fs
std
test
jbe
xchg
aas
pop
mov
add
add
adc
dec
cmpsb
out
shll
mov
bound
test
mov
aas
cmp
std
xchg
sub
xor
and
das
mov
jl
out
xchg
push
push
add
add
inc
add
les
cld
aaa
mov
notl
cli
jbe
mov
add
pop
sti
add
paddw
sarl
ljmp
out
pop
fdivr
jno
addb
dec
pushf
test
ljmp
add
xchg
push
sti
pop
lret
call
loop
jmp
add
arpl
push
xchg
mov
lret
and
out
std
dec
nop
out
and
out
ret
add
negl
push
addb
add
cs
add
add
dec
and
mov
and
or
add
fists
jne
movsb
shll
add
adc
sub
mov
add
add
enter
aam
mov
aam
xchg
enter
mov
negb
add
pop
adc
and
jns
out
inc
add
into
cltd
mov
add
inc
add
sub
xor
je
add
pop
and
nop
push
fdivr
aas
out
cmp
xchg
jae
push
insl
rorl
cmp
stc
xlat
arpl
movsl
xchg
inc
add
add
daa
push
add
lret
add
add
or
lds
hlt
mov
adc
enter
mov
push
bnd
shll
pop
cs
icebp
cmc
test
xchg
stos
cwtl
jmp
push
addl
add
mov
adc
mov
clc
add
sbb
pop
inc
add
iret
cmpsb
ljmp
cmpsb
lret
lahf
loopne
test
stos
pop
dec
mov
cltd
das
mov
sbb
fucomip
cwtl
push
add
popf
lcall
sbb
roll
stc
cwtl
sbb
int3
jns
dec
mov
jl
insb
ret
pop
cmp
lea
pusha
add
push
mov
mov
jnp
stc
lret
js
aas
jo
cmpsl
das
sub
jmp
cmp
or
ljmp
cltd
sahf
xor
dec
sbb
xchg
or
add
mov
iret
mov
add
add
fdivrl
icebp
pop
add
add
clc
mov
roll
add
push
xchg
mov
cmc
sub
aad
fldl
in
in
add
mov
add
add
add
jmp
test
mov
imul
add
mov
std
test
mov
imul
inc
add
inc
add
add
fisubl
in
pop
mov
add
dec
ljmp
test
xchg
scas
arpl
pop
stos
xor
addl
cmp
out
add
add
in
add
or
sub
add
add
add
pusha
add
mov
mov
call
mov
pop
dec
pop
cmpsl
sti
mov
test
fmuls
jge
xchg
sub
std
outsb
test
cmp
roll
fdivrs
stos
or
add
xchg
aas
xor
and
mov
sbb
push
ja
xlat
mov
cmc
inc
add
dec
pop
popa
add
orps
or
sub
push
cmpsb
addb
rolb
movsb
movups
add
std
aad
add
push
stos
aas
das
xchg
imul
in
add
int3
cmpsw
leave
mov
ss
arpl
jge
movsl
cmp
mov
pop
jmp
add
iret
cmp
push
rcll
mov
inc
add
movsb
pop
xor
movsl
cmc
pop
mov
mov
repnz
dec
pop
cmp
popa
add
dec
cmc
ljmp
and
jns
insb
dec
mov
add
repz
xchg
shl
inc
add
add
mov
cld
push
mov
add
test
sahf
lods
inc
add
popa
add
das
enter
xor
and
sbb
outsb
in
add
mov
or
pop
mov
scas
out
xchg
inc
add
inc
add
sarb
adc
mov
add
add
or
add
push
cmpsl
hlt
les
mov
stos
ljmp
insl
and
xchg
and
lcall
add
cmp
jbe
arpl
dec
sbb
mov
and
add
xor
sbb
and
adc
in
pop
dec
in
add
xchg
mov
bound
xchg
mull
test
dec
pop
das
idivb
popa
add
or
adc
repnz
xor
ja
add
cmpsl
repnz
add
aad
add
dec
jo
enter
outsb
push
in
sub
add
mov
jg
add
adc
xchg
push
push
sub
add
call
add
shlb
add
lock
addr16
repz
paddusb
mov
cmp
mov
out
rolb
and
addb
adc
jno
cmp
adc
nop
xor
add
inc
add
or
xchg
add
clc
stos
outsl
xchg
fs
fldl
mov
pop
mov
add
movb
addl
adc
jg
add
add
push
rcr
sbb
loop
xchg
xchg
fdivl
int
test
add
leave
dec
xchg
nop
out
or
insb
and
or
inc
add
test
rolb
add
push
jl
sbb
fcmovnbe
mov
clc
rcll
stos
scas
add
aaa
js
and
sub
and
mov
sub
leave
fldpi
leave
jle
mov
or
lcall
shrl
inc
add
std
inc
add
inc
add
add
xchg
lock
int3
ja
sbb
mov
jmp
add
push
mov
sub
push
mov
push
push
push
push
notrack
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
push
call
push
jmp
ret
mov
cld
cs
lea
xchg
or
xchg
lea
repnz
jne
jmp
pop
add
es
cs
add
add
dec
jno
add
jle
lods
xor
add
fbstp
sahf
inc
add
xchg
in
add
push
push
cmpsb
push
out
xchg
cmp
add
jge
loopne
cmp
sub
call
push
and
xchg
push
scas
mov
mov
dec
int
outsl
roll
pushf
mov
adc
jne
xor
add
or
jno
and
repz
inc
add
loop
shrl
mov
add
int3
fidivs
imul
inc
add
sbb
cmp
imulb
shrl
add
pop
mov
loopne
cltd
mov
iret
pop
lea
or
or
pop
add
les
mov
push
adc
add
aam
add
lret
std
push
add
push
jge
xlat
push
xlat
fwait
ret
jae
add
xchg
sbb
push
pop
pushf
cmpsb
pop
or
enter
pop
arpl
addl
nop
ja
sar
mov
out
pusha
add
add
negb
lcall
dec
rolb
outsb
sbb
imul
aad
repz
test
jns
test
ljmp
sbb
add
add
lock
sub
adc
add
and
jo
cltd
movl
daa
adc
add
std
pop
pop
popf
sbb
push
dec
and
cmp
dec
push
imul
xor
add
xchg
js
lds
push
lods
inc
add
mov
jecxz
mov
pop
push
jbe
mov
mov
jae
add
add
addb
mov
push
jmp
fcom
xchg
push
pushf
adc
inc
add
cbtw
cmp
mov
add
push
test
cmp
add
add
jo
ss
stc
popa
add
add
sbb
ret
add
shlb
add
pusha
add
or
jo
sub
mov
xchg
lds
insl
ret
add
movl
jo
lds
dec
imul
xchg
clc
leave
cmc
sub
pop
ret
add
add
in
and
mov
int3
cmp
xchg
jns
xchg
push
lret
or
cmpsb
xchg
ss
add
and
adc
into
dec
sbb
lcall
pop
mov
jae
int3
dec
sbb
jno
and
add
pop
scas
in
or
adc
in
dec
push
jge
push
popl
add
jl
int
dec
xchg
and
xchg
stos
imul
push
xchg
or
mov
cmpsl
stos
movsb
xor
add
inc
add
aam
or
add
xchg
lods
fimuls
jecxz
push
push
push
push
push
sub
sub
in
por
ret
add
movb
roll
add
jmp
idivb
push
test
in
pop
movb
rorl
clc
sti
divl
mulb
inc
add
jmp
add
inc
add
add
add
sub
loopne
bound
push
lret
lret
inc
add
movsl
imul
xchg
xchg
jb
add
hlt
sarl
add
mov
ljmp
jns
lds
push
xchg
push
inc
add
roll
jmp
cmp
and
mov
push
dec
xchg
repz
cmp
fs
inc
add
in
and
ja
lock
out
aam
std
pop
or
das
aaa
imulb
clc
cltd
repz
fs
xchg
cld
mov
add
add
add
jl
add
mov
ds
out
repz
out
sub
add
xor
ret
add
xchg
push
inc
add
inc
add
mov
add
roll
add
add
add
add
enter
sub
dec
shl
dec
mov
add
add
pop
add
add
mov
scas
mov
mov
mov
ljmp
mov
pop
add
mov
mov
sbb
push
push
push
insb
lret
ja
push
int
es
in
xchg
adc
and
adc
hlt
roll
data16
ficoms
daa
jl
inc
add
xchg
ja
add
push
in
add
lods
sub
jae
add
or
inc
add
cmp
fsubl
add
hlt
lcall
add
adc
adc
lret
add
mov
jl
add
add
lcall
sub
decb
mov
je
xor
jmp
add
add
cmp
jmp
push
bound
filds
inc
add
out
push
addl
and
dec
jb
loopne
add
pop
enter
add
adc
push
add
nop
and
mov
add
addb
add
mov
or
daa
jle
fistl
pop
jo
out
or
ljmp
outsl
mov
add
ljmp
mov
ss
iret
imul
add
pop
add
movb
and
cmp
add
dec
dec
aaa
aam
pop
mov
push
gs
add
jle
sbb
gs
add
xchg
sbb
jb
sbb
stos
sub
mov
in
in
add
and
sub
std
test
aam
add
cltd
pop
sbb
pushf
and
lock
mov
or
add
add
lock
push
mov
les
cwtl
fdivl
cmp
push
mov
rolb
add
push
fsubrl
jmp
dec
mov
sarb
imul
and
add
add
and
adc
rolb
into
ja
lcall
mov
dec
addl
clc
mov
cltd
popa
add
repnz
into
cmp
and
cmp
lds
int3
cmpsl
es
mov
outsl
test
outsl
sub
or
sbb
rolb
add
add
cmp
and
mov
mov
sbb
ret
add
and
adc
and
mov
add
cmp
push
sbb
mov
int3
insb
cmp
stos
push
mov
dec
outsb
or
add
inc
add
filds
addw
stos
sbb
gs
lods
pop
aam
lods
loope
pusha
add
jns
movsl
in
jecxz
add
add
flds
push
pop
mov
add
fsubs
inc
add
lret
dec
hlt
mov
outsb
div
fwait
mov
or
dec
sbb
dec
pop
shr
outsl
xor
dec
gs
add
add
sti
lds
push
jno
add
sarl
xlat
jbe
lods
add
addr16
mov
add
cltd
cltd
popf
push
shlb
cmp
das
inc
add
add
fmull
ffree
add
add
stc
push
inc
add
stos
cli
jne
popf
sbb
xor
sbb
xchg
mov
jne
add
add
ret
pop
popa
add
add
add
fisttpll
test
pop
jnp
ret
frstor
js
ret
mov
icebp
in
push
cltd
sub
mov
add
sub
rolb
adc
rolb
outsb
dec
jecxz
fdivl
or
add
roll
test
rcr
jg
add
or
rcrb
or
outsb
jecxz
bound
mov
divl
push
push
pop
xor
adc
gs
insb
jnp
add
add
lds
xchg
fidivl
mov
popa
add
and
daa
cmp
or
loopne
lahf
les
sub
daa
lahf
push
mov
jg
cmpsb
and
xchg
mov
mov
add
lds
jns
icebp
clc
inc
add
das
and
in
sbb
add
dec
mov
pop
lds
es
mov
push
inc
add
xchg
push
inc
add
into
push
jl
icebp
jl
cmpsl
pop
dec
lods
sbb
dec
mov
leave
sbb
les
ds
ljmp
in
movsl
mov
add
fs
dec
outsb
roll
lea
mov
jmp
mov
push
cmp
push
pop
hlt
push
leave
dec
add
ror
movb
add
js
ja
sbb
aaa
mov
mov
addr16
cmp
jp
cmp
imul
add
sub
add
cmp
add
fidivl
add
mov
dec
outsb
fdiv
push
adc
movl
repnz
pushfw
or
hlt
call
inc
add
add
mov
push
pop
js
int
int3
pop
or
stos
mov
inc
add
les
mov
add
add
cmc
icebp
xrelease
mov
add
dec
mov
es
pushf
roll
add
lcall
cmc
frstor
or
out
or
test
rolb
cmpsl
push
pop
ja
jg
ret
dec
aam
xor
test
xor
pop
inc
add
lods
fldenv
cmp
out
pop
nop
mov
add
jle
xchg
stos
lcall
xor
pusha
add
add
outsb
popa
add
addl
jge
in
fisttps
xchg
ljmp
repnz
mov
dec
insl
es
xchg
xchg
cltd
mov
mov
es
mov
out
xchg
mov
inc
add
inc
add
addl
je
shlb
insb
mov
movsl
dec
mov
shl
cmp
bnd
pop
test
out
idiv
sub
imul
fcompl
add
cmp
add
in
loope
pushf
popf
fbld
xor
add
arpl
sarb
pop
mov
mov
add
add
aas
loop
pop
int3
jb
xchg
mov
aaa
mov
xor
rcr
test
addl
nop
mov
add
lcall
add
lods
shrb
in
push
sbb
xchg
sbb
pop
mov
pushf
lcall
test
mov
dec
or
stos
mov
clc
jb
mov
xchg
gs
jmp
jp
mov
int
ss
roll
les
push
xchg
ja
aad
je
xchg
mov
xchg
pusha
add
jmp
push
jnp
out
outsl
iret
xchg
daa
jl
push
lcall
jl
ss
rolb
ljmp
sub
pushf
push
add
fwait
test
addb
add
shl
xchg
and
arpl
out
addb
push
add
inc
add
enter
popa
add
add
mov
mov
add
andps
mov
js
mov
add
movups
pop
in
mov
mov
add
add
jbe
dec
addl
cmc
scas
std
mov
les
repz
pop
lahf
out
add
repnz
push
test
jge
jnp
add
lock
dec
insb
fdiv
sub
je
add
lods
cmp
cld
stc
rcrb
xor
adc
mov
add
addr16
ffreep
add
mov
cmp
dec
or
push
mov
jb
push
dec
int
cld
js
push
mov
sbb
lods
mov
xchg
iret
dec
insl
shrl
cmp
movsb
test
int
sbb
bound
test
add
add
pop
add
add
iret
xor
das
sub
pusha
add
jmp
fdivrl
jl
or
xlat
fistl
fadd
add
add
mov
jnp
pop
into
push
das
aad
hlt
mov
xor
lods
fs
movsb
sti
scas
adc
mov
add
push
pop
or
fchs
add
sbb
addl
jbe
fisubrs
sub
loope
ds
cltd
inc
add
mov
xchg
and
pusha
add
addl
fsubl
add
movl
imul
mov
add
jmp
cs
add
cmp
loop
scas
pop
sbb
in
cmp
xor
jne
cmp
addb
lahf
push
push
cmp
jmp
jne
add
testl
std
xchg
sahf
out
ss
mov
iret
xchg
loopne
push
insl
inc
add
lcall
push
mov
bound
mov
in
xor
imul
add
xchg
cmp
imul
and
add
mov
ret
add
add
pushf
addl
or
fwait
jno
jge
dec
bound
jp
fcoms
mov
lock
xchg
addb
pop
fs
dec
push
into
mov
add
push
cmp
int3
test
icebp
fldenv
call
cs
add
sti
xchg
lea
outsl
jl
fbstp
movb
add
push
mov
add
int3
mov
cwtl
dec
pop
stos
lods
jo
aam
xlat
imul
sbb
and
out
scas
rorl
add
add
and
inc
add
pop
div
mov
add
jge
in
cmp
cmc
psubsw
mov
je
lods
mov
jl
addb
dec
bswap
add
test
cmp
je
insl
test
mov
fstps
xchg
fwait
inc
add
add
mov
repz
stc
adc
add
stos
pop
into
sbb
scas
cmp
sahf
pop
adc
push
repnz
push
or
inc
add
add
addl
sbb
out
lahf
sub
mov
lea
add
adc
add
xor
enter
outsb
in
mov
mov
nop
or
popa
add
jne
mov
xor
dec
adc
push
and
sahf
mov
fsubs
mov
addl
test
in
mov
pop
std
inc
add
in
divl
xchg
cmp
mov
sti
mov
pop
mov
insb
movsb
lods
pop
mov
out
movsl
iret
inc
add
push
bound
sub
add
xchg
and
jae
test
cmp
add
add
insb
addr16
popf
icebp
mov
xor
mov
lods
movl
jae
aaa
loopne
iret
cltd
pop
sbb
add
inc
add
jp
pop
and
add
mov
and
loope
shlb
pop
enter
jae
sub
jo
push
test
inc
add
jo
pop
inc
add
or
push
add
movb
mov
push
or
movsl
cmp
xchg
xchg
addl
lds
cmp
arpl
out
popf
ret
pop
sbb
and
test
pop
mov
add
mov
mov
add
or
inc
add
add
cmpsl
mov
dec
dec
jne
arpl
xor
cli
std
add
and
mov
mov
cltd
clc
pop
addb
cmp
push
add
std
jge
mov
adc
movl
xchg
aas
leave
jg
roll
add
rcl
shlb
push
arpl
sarb
inc
add
cmc
push
gs
xchg
inc
add
scas
xchg
lods
ret
add
movsb
pop
add
push
sarb
xchg
jecxz
stos
cmpsl
jns
aaa
lret
ror
xor
add
add
fmulp
mov
shll
add
mov
fbstp
dec
test
arpl
cltd
jns
xchg
add
aaa
outsb
jae
dec
fwait
dec
arpl
inc
add
les
addl
xchg
or
addr16
lret
add
rolb
into
je
sbb
out
xchg
popf
movsb
sub
cltd
pop
push
dec
cmpsb
arpl
push
mov
xchg
aas
pop
xor
outsb
fwait
cld
cmc
out
push
push
mov
sub
pop
xor
test
fsts
test
jbe
addl
add
pop
pop
addb
jno
add
call
roll
repnz
jge
xchg
pop
movsl
rolb
test
fidivs
js
add
mov
add
or
and
xchg
leave
dec
loop
xor
cli
icebp
adc
add
loopne
xor
and
fadd
add
inc
add
mov
repz
pusha
add
and
ret
outsl
xor
and
push
divl
dec
pusha
add
add
cmpsb
mov
cmp
add
int
dec
pop
or
jo
in
cli
add
pop
and
dec
sbb
imul
pop
mov
roll
sub
add
aad
sub
add
jnp
sbb
xchg
jb
inc
add
fistpl
add
inc
add
add
loope
jl
dec
cmp
mov
std
pop
sbb
add
movsl
outsb
lea
ljmp
inc
add
add
jp
or
mov
mov
or
sbb
in
xor
push
mov
add
add
add
movl
pop
sub
mov
rolb
xchg
cmp
imul
push
inc
add
mov
aam
out
sbb
jno
dec
push
and
movsb
std
inc
add
lahf
call
cmp
lahf
or
and
add
push
xor
jo
add
or
xchg
pop
jae
pop
and
jae
aas
mov
add
leave
bound
cs
inc
add
jo
lods
jne
arpl
repz
lds
push
add
mov
or
nop
lea
dec
xchg
and
sbb
out
movb
imul
inc
add
jne
mov
lret
movl
lcall
call
sbb
stc
sbb
add
add
add
dec
mov
in
jmp
repz
add
fs
pop
leave
sub
pushf
pushf
or
pusha
add
ljmp
cmpsb
sub
add
imul
inc
add
jbe,pn
add
add
adc
int
mov
mov
negl
push
scas
xor
cmp
cmovns
inc
add
rolb
jno
aad
add
add
faddl
dec
mov
or
fnsave
jb
add
mov
add
add
ja
popa
add
inc
add
inc
add
cwtl
jns
fdivrl
dec
cmp
testl
push
incb
jnp
rcrb
sbb
jmp
add
or
sub
mov
lea
add
push
mov
add
js
pop
or
cmp
arpl
mov
add
adc
jae
add
add
and
inc
add
out
les
mov
jl
aaa
loopne
hlt
sti
pop
sub
add
inc
add
sbb
add
xlat
ja
and
mov
cli
jge
sub
lret
mov
jb,pn
movl
jge
rolb
mov
xchg
lret
add
ffreep
add
movb
add
mov
fninit
lods
push
cs
ja
cmp
adc
add
add
xchg
in
test
lret
cmp
aas
les
outsb
fwait
inc
add
mov
ja
ret
add
push
and
adc
sub
sub
fwait
xchg
fnstcw
jg
add
add
dec
in
sbb
daa
or
add
mov
inc
add
mov
jg
addr16
inc
add
jb
cltd
push
fcmovb
add
mov
lcall
add
idivb
repnz
xchg
push
and
inc
add
mov
xor
mov
testl
jae
mov
cmp
add
nop
ficoml
stc
push
xor
ja
add
jg
scas
mov
or
add
add
push
xor
js
sti
or
push
arpl
inc
add
sbb
xor
mov
jge
mov
cmpsl
loope
fwait
lahf
xchg
loopne
sub
cli
hlt
xchg
cwtl
mov
inc
add
inc
add
pop
add
cmp
add
adc
push
out
loop
push
add
or
fcmove
cmp
add
addl
fdivs
or
add
pop
leave
rol
add
mov
inc
add
dec
test
cmp
test
fidivrl
lahf
outsl
lret
xchg
addb
push
add
movsl
and
pminsw
add
push
mov
pop
lods
xlat
push
pop
mov
xchg
enter
out
sbb
xchg
and
in
test
xchg
test
lds
adc
adc
sbb
and
dec
imul
loopne
add
in
mov
out
xlat
sahf
pop
inc
add
cmp
sub
pusha
add
add
mov
add
nop
dec
addb
inc
add
xchg
addr16
add
movsb
xchg
adc
ja
add
adc
dec
xchg
mov
cltd
popf
jle
push
rolb
test
bound
xchg
jge
fmul
cli
icebp
enter
sub
mov
imul
loope
push
adc
pop
adc
ficoml
add
addb
test
in
outsl
call
add
add
jge
out
jno
push
add
push
dec
leave
mov
mov
aaa
rolb
xlat
xor
add
cld
pop
lcall
add
fdivrp
mov
jmp
push
add
loopne
das
mov
mov
lea
sahf
sti
mov
inc
add
lock
inc
add
das
ljmp
in
adc
into
xlat
js
inc
add
inc
add
faddl
cwtl
adc
loopne
jo
mov
sbb
pop
sub
dec
inc
add
sbb
loope
insb
aad
adc
add
popf
ss
jecxz
mov
add
pop
add
icebp
mov
sub
or
adc
add
jg
add
pop
inc
add
push
ret
add
jae,pt
rolb
outsb
inc
add
pop
add
jnp
xor
lods
add
xchg
or
lea
add
lret
daa
jmp
mov
dec
jo
cs
lea
xor
jnp
cli
mov
push
mov
add
sti
je
xchg
jle
into
ds
mov
mov
add
test
add
mov
push
push
xlat
aas
fdiv
icebp
lret
test
stos
adc
clc
jmp
icebp
push
add
mov
movsl
inc
add
mov
pop
jge
repnz
lods
ficomps
pop
and
cmp
lea
adc
sub
das
inc
add
xchg
mov
add
sbb
cmp
xchg
leave
jl
cmp
mov
adc
jnp
pop
repnz
dec
int3
std
pop
movl
and
and
jmp
xchg
jne
xchg
sbb
lods
adc
add
add
mov
add
lcall
lcall
addb
push
ret
lods
lods
fsubs
lea
mov
sarl
int3
mov
out
out
test
inc
add
aad
sbb
popa
add
adc
cmp
fcomp
mov
imul
pop
mov
sbb
jecxz
leave
and
rcl
lods
test
xor
dec
inc
add
add
add
cmp
shrw
mov
push
cmp
mov
sbb
stc
call
add
cmp
sub
loopne
mov
dec
or
pop
addb
add
add
add
add
fildll
imul
lahf
adc
cmp
adc
cli
jp
add
xor
push
adc
add
cmpsl
fisubrs
ret
mov
nop
dec
addl
mov
add
addb
mov
add
pushf
sbb
and
add
addb
bound
adc
js
ret
mov
add
pop
scas
inc
add
cli
jb
add
inc
add
insb
addb
add
addb
imul
xchg
rcrb
addl
add
sbb
add
sbb
pusha
add
add
pop
mov
cmp
xchg
mov
loop
jle
mov
add
sbb
sub
inc
add
rcrb
int
mov
adc
xlat
fistl
pop
clc
cld
cmp
and
es
jle
popf
push
rolb
add
insl
pop
fs
push
lds
sbb
add
add
or
sti
fldt
aam
push
dec
insl
mov
xchg
mov
pop
add
xor
push
jmp
jp
enter
pushf
sahf
dec
jl
xor
add
add
scas
lcall
leave
fadds
xchg
incl
stos
bound
and
and
movsb
xor
push
pop
ds
imul
add
arpl
ret
add
add
mov
es
cmp
scas
enter
sub
and
addl
cmpsb
xchg
leave
js
and
mov
add
xchg
jnp
call
shll
mov
aad
movsl
fbld
mov
jp
roll
push
aad
add
add
test
sbb
mov
push
addr16
add
cmp
inc
add
shl
mov
rcrl
jle
add
mov
jge
or
add
movb
out
div
aas
clc
push
lds
lea
mov
mov
xor
mov
cmp
add
movsl
mov
addb
add
movl
into
push
or
add
test
push
cs
mov
sub
outsl
mov
cwtl
mov
icebp
in
jne
lods
mov
add
mov
or
push
push
mov
inc
add
push
addb
xchg
add
int3
aam
scas
addr16
push
cmp
add
add
mov
or
sbb
pop
push
mov
inc
add
addl
add
add
mov
add
mov
mov
and
xor
loopne
das
daa
mov
and
add
xchg
jns
movl
sub
push
aam
pop
adc
sbb
les
sbb
mov
mov
movl
jmp
mov
and
add
shll
call
clc
inc
add
inc
add
stos
mov
fisubl
sub
jb
mov
gs
lds
fdivrl
push
gs
popf
mov
jno
jmp
jno
pop
out
rolb
mov
mov
add
cmp
cmc
inc
add
add
jecxz
or
add
dec
jle
add
cli
movb
ret
lods
mov
dec
and
pop
addb
push
add
adc
sub
mov
frstor
xchg
sbb
imul
inc
add
cld
addb
add
lea
add
add
lret
pop
movsl
adc
repz
push
out
stos
std
roll
jns
dec
push
stos
push
or
add
add
xlat
mul
imul
pop
mov
pusha
add
movl
es
push
scas
inc
add
repz
mov
dec
xor
inc
add
mov
jbe
xor
mov
or
cs
dec
xor
loopne
mov
mov
rolb
shll
mov
icebp
sbb
xchg
mov
add
addl
mov
stos
fst
add
and
sub
push
add
add
add
in
mov
scas
mov
inc
add
add
jb
add
fisttps
push
push
xor
incl
lock
daa
jmp
pop
inc
add
mov
add
sbb
push
movsl
lret
scas
mov
leave
pusha
add
ror
in
add
and
pusha
add
add
push
test
outsb
addr16
mov
test
int
sahf
imul
and
mov
jo
xlat
fsubs
int
mov
sti
clc
or
movl
loope
add
adc
xchg
push
scas
pop
std
or
pop
addr16
xor
add
add
add
add
insb
mov
repz
pushf
add
inc
add
mov
cmp
mov
loope
xor
pushf
aaa
lock
inc
add
xor
fstps
add
inc
add
mov
pop
xor
test
xor
add
into
lret
in
jecxz
add
cltd
ljmp
addl
cmpsl
push
sub
shrb
call
addb
and
sub
iret
add
mov
and
imul
add
jle
cmp
pusha
add
jo
add
xchg
mov
lods
test
jmp
pop
dec
int
ret
add
addb
add
cmpsb
out
rorl
add
int3
xor
push
stos
sbb
add
cli
pop
daa
mov
fisttps
lds
clc
imul
xor
add
inc
add
out
mov
adc
sub
ljmp
add
outsl
cmpsb
push
addl
mov
add
idivl
rcl
jae
loop
in
push
and
push
mov
add
mov
std
sub
pop
ret
add
sti
int3
sub
imul
jl
add
aaa
pop
aas
add
sub
mov
stos
je
inc
add
inc
add
add
mov
add
divl
in
xchg
stc
push
jo
push
pop
add
std
adc
add
push
add
mov
add
stos
repz
jb
in
ret
xor
pop
add
push
sub
xlat
pop
add
mov
cld
dec
mov
mov
movb
pop
xchg
pop
xor
iret
int3
sbb
sbb
add
loop
sti
enter
gs
jge,pt
or
add
je
mov
jl
add
aas
nop
xlat
xor
in
pop
push
mov
jmp
pusha
add
test
in
mov
dec
push
inc
add
out
pop
in
int
or
mov
add
insb
int3
mov
adc
xor
jle
add
cs
sub
outsl
xchg
in
loopne
push
add
aaa
dec
or
push
gs
mov
ret
pop
adc
jmp
and
lahf
pop
es
cmp
and
sti
aam
lret
aas
add
popa
add
xchg
hlt
in
lock
jp
dec
inc
add
add
push
je
xchg
imul
jmp
notl
arpl
cmp
enter
dec
movsl
mov
les
dec
hlt
add
pop
dec
or
lock
xchg
cs
fldt
add
add
add
mov
add
jge
add
mov
cwtl
sbb
lods
dec
bound
cmpsb
xlat
aas
enter
add
icebp
movsl
pop
pop
imull
pop
stc
xor
mov
add
loop
popa
add
jnp
inc
add
jle
or
jmp
ud0
push
rclb
loope
xor
mov
and
xor
outsl
mov
mov
lods
mov
lds
repz
enter
cmp
sbb
adc
pop
add
popa
add
push
add
sbb
cmp
xor
js
or
aad
pop
pop
add
add
loope
inc
add
mov
pop
mov
mov
lods
push
dec
and
inc
add
fmull
loopne
jne
push
add
adc
loop
cmp
add
jecxz
xlat
movb
inc
add
jno
fldcw
int
add
cwtl
ret
xor
mov
loop
frstor
add
mov
mov
popf
mov
xchg
add
fs
xchg
test
add
cld
nop
outsb
push
pop
add
xchg
push
stos
mov
add
xor
adc
add
nop
xchg
push
add
jecxz
shlb
add
mulb
inc
add
jno
das
mov
add
xor
fistl
lret
mov
add
ret
add
jmp
xchg
lret
or
xchg
std
mov
and
ja
movl
push
mov
aas
push
mov
dec
mov
mov
mov
loope
inc
add
movl
jnp
cmp
rdpmc
add
add
inc
add
movsl
push
push
add
nop
mov
dec
hlt
ret
push
cmp
fisubrs
and
cmp
loopne
cwtl
addl
adc
pop
sbb
fistl
add
out
mov
mov
je
sub
and
lret
inc
add
neg
fwait
pusha
add
mov
add
adc
xchg
clc
in
sbb
icebp
adc
ret
sub
ficomps
mov
out
xchg
bnd
movsb
cmpsb
mov
lahf
insb
outsb
stc
insb
imull
roll
add
or
mov
mov
pop
sub
ss
lea
mov
lock
movsl
insb
add
fcoms
xchg
dec
and
rolb
add
scas
addb
inc
add
cltd
loope
add
lahf
xchg
xor
mov
mov
pop
shrb
mov
in
movsl
das
cmp
pop
movl
sub
fdivs
add
jb
movb
cs
push
cmp
add
pop
jmp
add
jo
add
ret
add
xor
xchg
dec
or
ss
add
xchg
es
sub
add
addb
movl
add
add
divl
pusha
add
icebp
mov
mov
add
push
insl
enter
add
scas
push
jb
bound
ja
add
or
movsb
test
test
addb
movl
scas
inc
add
das
rolb
mov
add
leave
outsb
mov
xchg
sbb
cmpsb
pop
cs
inc
add
pop
mov
adc
xchg
xor
inc
add
inc
add
pop
in
movb
add
loopne
shrl
movsbl
adc
lock
mov
sbb
jbe
dec
nop
and
jb
imul
add
mull
loope
imul
ficoml
aaa
or
cmp
mov
jmp
je
add
fmuls
xor
and
rolb
inc
add
add
iret
sub
push
outsl
mov
call
dec
mov
add
add
stos
enter
add
decb
sbb
loop
xor
inc
add
xor
xor
xor
mov
pop
push
inc
add
les
inc
add
fcoms
add
add
jmp
mov
pop
out
adc
add
dec
pop
pop
dec
adc
popa
add
and
fwait
push
mov
mov
inc
add
ret
add
add
jne
stc
fadds
add
adc
dec
out
loop
negb
add
aaa
push
xlat
aad
xor
ss
in
add
add
pop
cmp
or
cli
js
lret
jnp
and
fs
insl
add
jge
data16
fxtract
icebp
add
jae
scas
loopne
fwait
divb
inc
add
add
xchg
cmp
or
mov
adc
adc
dec
roll
add
mov
push
rorb
loopne
add
mov
in
iret
push
xchg
and
out
jne
pushf
jne
sbb
outsb
cmc
iret
adc
xchg
xchg
add
fdiv
jo
add
jae
sahf
ljmp
rol
add
imul
je
std
dec
sti
addb
jp
lods
imul
loope
add
fwait
pop
addw
add
pop
imul
jmp
jae
dec
out
add
cs
out
add
popf
mov
insl
and
ja
rolb
inc
add
push
mov
flds
in
insb
pop
mov
cmp
and
movsl
cmp
leave
js
or
sbb
and
adc
mov
addl
sub
imul
add
je
cmp
push
add
insb
push
dec
sbb
inc
add
add
dec
xchg
in
xchg
pop
or
ds
and
or
mov
nop
test
xchg
sbb
add
ja
xor
mov
cmp
xchg
or
mov
add
aam
push
or
fcmovnu
mov
sub
imul
cmp
add
inc
add
add
stos
cli
je
bound
std
cmp
dec
xchg
icebp
cld
push
sbb
dec
sub
insl
out
add
cltd
call
cwtl
push
addl
jle
mov
dec
cs
adc
lock
out
add
add
add
or
es
add
jecxz
movb
daa
pop
cmpsb
pop
mov
add
jo
bound
add
js
ja
nop
testl
mov
xchg
xor
and
outsb
ja
xchg
adc
add
decl
insl
sbb
pop
sub
roll
add
add
mov
movl
add
int3
sub
int3
xor
scas
cmp
add
add
int
dec
dec
addl
dec
pop
lea
das
sbb
cmp
ffree
add
out
add
jo
sub
out
addl
add
mov
cmp
testb
movsl
popa
add
popf
ret
add
add
cmp
mov
push
xchg
jnp
stos
out
jmp
pop
rol
add
inc
add
add
add
add
cmp
push
xchg
pop
movsb
sbb
mov
pop
loopne
xor
les
push
gs
outsl
movsl
inc
add
push
add
add
cli
repnz
jnp
add
scas
movb
pusha
add
mov
add
loop
pop
adc
add
std
fisttpll
dec
movb
pop
or
and
aaa
arpl
pop
mov
cmp
lahf
sub
cmp
add
adc
imul
dec
inc
add
xchg
out
sub
add
push
mov
popa
add
mov
xlat
cmp
lcall
rolb
add
cwtl
das
fidivrs
cmp
stos
mov
mov
fwait
sbb
or
icebp
jnp
cmp
add
inc
add
mov
cli
ljmp
loop
jb
push
dec
add
and
mov
fmull
push
cmovg
add
add
and
sub
sub
lahf
frstpm(287
push
lret
cmp
gs
or
xchg
lods
stos
dec
mov
xor
inc
add
pop
add
add
cltd
pop
cld
pop
push
xor
jg
inc
add
cmc
scas
xchg
mov
imul
lds
vmwrite
add
add
fisttpll
getsec
cs
lcall
xchg
push
das
movsb
scas
mov
adc
cli
cmp
addl
test
add
add
xor
mov
pop
pop
add
mov
add
cmp
in
pop
adc
add
sbb
addl
jne
call
or
je
add
lea
mov
cmpsb
ficoms
push
dec
movsb
decb
popf
addb
add
push
mov
mov
test
into
jecxz
add
xlat
jle
int3
movsl
aaa
enter
dec
aam
mov
add
cwtl
adc
push
stos
jecxz
es
adc
aaa
cmc
in
inc
add
mov
shrb
jg
lds
aas
pop
xchg
and
popf
dec
jb
das
push
mov
pop
addl
push
mov
aam
mov
out
mov
cld
mov
add
jo
mov
lret
add
mov
rolb
fldcw
xor
add
fs
pop
mov
add
fadd
add
in
ret
movb
in
test
mov
add
inc
add
add
aad
sub
xor
mov
jno
inc
add
push
jge
mov
inc
add
add
add
pop
inc
add
xchg
shl
neg
mov
xor
xchg
fcompl
add
outsb
mov
add
pop
jne
mov
and
add
jge
ficoml
fisubl
push
mov
add
sarb
push
or
movb
sub
sbb
xor
xchg
fsubrl
pop
mov
fsubr
addl
add
sbb
dec
stos
scas
ror
jnp
shlb
cmp
adc
out
sbb
fdivrl
or
popa
add
in
jle
fwait
or
mov
add
ljmp
mov
inc
add
out
dec
pop
jp
add
fcoml
add
push
lahf
popa
add
ja
mov
sti
push
xchg
cmp
push
xchg
movsl
sub
aad
ret
add
ss
pop
into
aas
adc
lcall
loopne
sti
cli
mov
mov
hlt
adc
xchg
faddl
das
jp
jb
add
rolb
loopne
imul
push
and
jno
xchg
repz
pushf
out
addb
add
push
lcall
add
sbb
add
icebp
in
jb
in
adc
test
das
js
mov
rcrb
adc
push
mov
dec
cs
add
out
add
je
add
loope
sbb
lcall
iret
imul
insb
cltd
nop
push
je
sbb
add
add
mov
or
xor
dec
push
jecxz
test
in
mov
push
push
aad
add
mov
xchg
jo
add
hlt
popf
call
or
and
xlat
sub
sub
outsl
xchg
lock
add
ret
data16
sub
jl
or
add
enter
jo
testb
addb
add
sarb
add
les
pop
add
das
push
push
out
and
adc
or
xchg
stos
test
popf
xor
addl
add
and
dec
sub
fxtract
loop
adc
rclb
mov
inc
add
or
fs
xchg
aam
add
jl
in
sahf
addr16
addl
add
add
movsl
popf
jae
xor
pushf
xchg
cs
add
dec
lods
out
add
add
fsubrl
rolb
dec
insl
fsubs
stc
add
pop
jb
sub
push
lods
lahf
mov
fwait
dec
cmp
roll
fistl
testb
cmc
daa
ja
adc
cmpsb
or
in
loope
sub
mov
mov
out
fdivl
add
cmpsl
jne
add
push
push
jmp
mov
mov
nop
in
test
lahf
imul
cmpsl
add
out
out
push
cmp
scas
adc
fstpl
add
cwtl
cltd
inc
add
add
xchg
cs
mov
mov
ret
cld
sahf
adc
add
sbb
cmpsb
pop
repz
jl
cmc
aas
mov
movsb
xchg
or
lcall
dec
movb
out
pop
scas
aad
repnz
rolb
movsl
bnd
mov
dec
fstpl
add
aaa
cmp
add
lret
add
or
pop
dec
jae
sub
and
xchg
jg
pop
stos
pusha
add
testl
sub
test
jge
and
cmc
xchg
pop
pusha
add
add
mov
dec
dec
jns
scas
adc
insl
pop
sub
out
mov
incl
add
sbb
into
cmp
mov
add
sbb
dec
pop
jl
add
lahf
mov
or
push
aas
dec
and
inc
add
mov
add
mov
movb
pushf
hlt
cli
les
push
add
mov
sbb
sub
imul
in
xchg
stos
hlt
xchg
test
pop
daa
adc
pop
loopne
dec
inc
add
add
mov
mov
cmp
es
xchg
or
add
add
lcall
ljmp
repnz
mov
addl
sarl
das
lret
mov
xchg
lcall
mov
add
jmp
iret
jae
push
push
imul
add
shlb
and
mov
jae
clc
pusha
add
xchg
jg
add
lods
inc
add
mov
add
cltd
cli
popf
xor
add
pop
mov
adc
sbb
dec
jp
add
clc
dec
jne
mov
add
cmp
or
push
mov
out
out
shlb
add
xchg
adc
fmulp
pop
mov
out
adc
push
and
pop
sbb
jne
insl
mov
cli
sahf
ljmp
lds
pushf
inc
add
add
test
push
or
cmp
mov
sbb
imul
sub
enter
ss
xchg
push
inc
add
push
add
imull
xor
dec
add
sbb
movb
cmc
or
or
fwait
rolb
mov
jno
mov
mov
enter
lcall
add
out
lret
sbb
fstpl
sbb
fucomi
cmp
mov
add
dec
fdivrs
push
dec
pop
out
add
push
lret
hlt
pop
insl
and
mov
xlat
pop
or
sub
pop
cld
xor
in
lea
xor
mov
xchg
fistl
add
add
arpl
pop
add
jecxz
mov
pop
inc
add
adc
and
xor
ljmp
out
out
dec
and
fwait
and
loopne
add
add
add
jo
sti
pop
inc
add
bound
cmpps
add
mov
getsec
add
jle
lea
int
std
pop
adc
push
cli
ret
jge
popl
mov
xchg
lea
dec
lods
outsl
xchg
in
in
xchg
xchg
and
add
icebp
add
or
add
mov
repz
ret
mov
imul
cli
fwait
das
mov
adc
aad
stos
mov
arpl
or
push
or
adc
add
addr16
pushf
rclb
add
add
inc
add
icebp
fnstsw
inc
add
cmp
mov
mov
add
cltd
mov
adc
nop
jae
das
rol
add
mov
add
jbe
add
insb
int3
movsb
rolb
add
and
and
push
popf
jne
push
dec
das
jecxz
sti
stc
mov
inc
add
lahf
psubusb
xchg
dec
lds
push
fcomip
ja
negl
xor
mov
or
jo
add
bound
push
mov
cmp
jle
jecxz
push
xor
gs
add
in
lcall
xor
in
or
sbb
mov
imul
into
mov
pop
cwtl
inc
add
jo
in
jl
loop
ss
sbb
aam
add
popl
mov
and
and
mov
inc
add
pop
out
mov
add
sub
rolb
jmp
scas
lock
lea
movsb
mov
sub
jg
movsl
xor
jge
jb
jae
inc
add
xchg
add
and
inc
add
add
xchg
lock
xlat
inc
add
add
add
inc
add
add
sar
ds
or
or
dec
adc
and
loope
mov
jb
lea
hlt
xchg
inc
add
pop
sahf
xor
loope
dec
push
fdivs
add
into
gs
nop
mov
addb
xor
add
test
xchg
cwtl
mov
fdivrl
movl
rclb
jns
push
add
add
adc
jno
add
fidivl
adc
add
cwtl
add
adc
xchg
scas
cmp
hlt
negb
outsb
xchg
ljmp
pop
cmp
loopne
clc
dec
inc
add
push
push
fs
mov
sti
scas
movl
test
jns
lret
pop
push
jb
mov
jnp
inc
add
or
ja
add
adc
outsb
mov
mov
mov
movsl
in
add
add
popf
sub
add
inc
add
movsl
add
roll
add
sbb
dec
fstps
add
mov
outsl
lcall
dec
or
cs
rclb
push
cwtl
sbb
or
cmp
xchg
cmp
daa
fwait
jg
xor
inc
add
mov
adc
xchg
rcrb
out
add
push
ret
add
sbb
nop
cs
lahf
xor
ret
add
inc
add
pop
stos
popf
sti
fadds
sbb
add
xlat
cld
or
fst
jb
jne
and
or
jmp
lods
js
dec
jne
add
pop
addl
add
add
fs
add
add
add
mov
mov
mov
lahf
fistl
pop
mov
add
add
add
adc
jno
lahf
call
popf
add
cmp
push
mov
hlt
cmp
add
shl
xchg
cltd
mov
cmp
cmp
pop
sub
mov
movl
add
pcmpeqd
add
jb
jl
jge
add
scas
push
lcall
loopne
add
add
mov
mov
push
xchg
dec
out
movb
push
ficompl
scas
mov
nop
addl
or
add
ja
les
shrl
or
cmpsb
cld
roll
inc
add
mov
stos
in
xchg
adc
fwait
mov
popf
mov
les
dec
cmpsl
imul
add
icebp
ret
add
stos
mov
ret
add
arpl
sub
and
sahf
imull
les
sub
push
pop
sti
std
addr16
lea
mov
cmp
xchg
mov
mov
and
push
pop
lretw
scas
mov
mov
add
xchg
adc
ljmp
sbb
add
add
loopne
xlat
sbb
mov
inc
add
push
daa
jg
popf
jbe
stos
or
xlat
xor
or
es
pop
jecxz
ret
add
dec
inc
add
in
jo
sti
das
ja
mov
out
add
add
test
test
and
divb
inc
add
movsb
jne
fnstenv
lea
cmp
add
sarl
popf
popf
jbe
movsl
incl
cmpsb
dec
in
outsl
pop
test
aad
cld
dec
fisubrl
addb
inc
add
ss
je
add
movl
aaa
push
daa
mov
repnz
sub
adc
add
sarb
movl
inc
add
mov
adc
mov
add
xor
movl
cld
ret
sahf
and
nop
mov
imul
push
aaa
stos
mov
hlt
outsb
fiadds
and
fdivrl
leave
je
add
and
adc
mov
inc
add
cmp
sti
mov
mov
sbb
and
in
fsubrl
pop
out
pushf
sub
pop
pinsrw
mov
add
adc
aad
push
les
push
push
xor
in
lea
mov
es
add
and
jle
stos
mov
fistpll
pop
xor
sbb
push
in
add
ljmp
add
ja
mov
adc
addr16
pop
call
inc
add
dec
jae
add
fidivrl
mov
leave
shlb
lret
testl
addr16
divb
enter
enter
xor
cmp
notb
add
test
sub
xor
movsb
jmp
cli
fcom
pop
xchg
mov
pusha
add
inc
add
mov
outsb
dec
lock
jnp
clc
mov
inc
add
and
sarb
or
dec
bound
push
xchg
dec
mov
std
sub
cmp
cmp
das
addb
bound
ror
or
add
mov
and
fdivrl
loope
xor
je
push
popa
add
mov
add
outsl
mov
mov
sub
adc
mov
xor
dec
test
dec
xchg
pop
gs
dec
ror
pop
xor
sbb
rorl
cld
scas
cwtl
push
push
add
frstor
jbe
add
xchg
stos
push
cmpsb
cmp
xchg
sbb
add
mov
cmp
xchg
mov
add
test
cli
insb
mov
les
mov
cwtl
repz
pop
add
fwait
addb
add
in
popf
push
test
mov
mov
or
pop
add
cmc
pop
pop
repz
jmp
dec
mov
add
out
jne
add
dec
push
ss
mov
mov
mov
fwait
adc
es
and
out
and
jbe
mov
xchg
xor
and
cmp
pop
daa
out
fisubrl
and
mov
sbb
pop
sahf
ret
add
je
stos
pop
leave
out
sti
fld
add
jns
shll
add
movsb
cli
mov
mov
and
lods
stos
xchg
pop
sub
mov
adc
int
fwait
out
stos
jb
cs
jmp
add
add
rolb
cmp
test
sbb
test
push
icebp
mov
sub
fidivrs
int3
enter
cmp
int3
cs
pop
xchg
adc
pop
movb
fs
mov
sub
cmp
xlat
jb
movb
mov
addb
sub
fildll
lock
and
ss
add
fldl
outsl
push
fs
addb
add
loopne
js
lret
mov
add
int3
or
inc
add
js
inc
add
pop
pop
lock
mov
test
sub
xor
mov
add
add
xor
and
roll
mov
and
stos
jmp
jle
mov
xchg
bound
fisubs
jl
jb
sub
repz
mov
scas
xchg
inc
add
aad
add
mov
add
outsb
mov
bswap
icebp
cmp
inc
add
xor
jecxz
add
icebp
add
or
in
add
add
jp
adc
es
mov
pop
jmp
and
xchg
pop
push
gs
mov
cli
sahf
sub
add
dec
aad
sub
mov
add
xor
test
xor
or
aaa
dec
and
or
mov
std
addl
add
push
into
mov
loopne
ja
push
mov
add
mov
push
fwait
jnp
call
jb
dec
inc
add
mov
add
push
or
data16
add
jecxz
sbb
add
add
je
jae
hlt
pushf
addb
add
int3
stos
and
flds
add
data16
sbb
xchg
mov
dec
push
adc
mov
add
negb
add
and
add
out
mov
insl
mov
mov
stos
lea
pop
testl
shll
xor
add
cltd
pop
add
cs
push
add
ds
mov
adc
add
cmovs
xchg
mov
mov
out
adc
or
rol
add
and
sbb
push
pslld
add
sti
add
or
mov
pusha
add
or
loop
or
push
or
add
repnz
out
jb
xchg
movl
jecxz
pop
xor
and
cli
and
mov
or
mov
das
ficoml
jno
or
mov
fnsave
push
bound
cltd
mov
jecxz
jnp
add
out
mov
jmp
sub
add
add
out
jmp
mov
fwait
xor
add
mov
cmp
inc
add
int
jb
add
add
mov
in
loop
add
add
addb
pop
inc
add
fcmovnu
sbb
in
std
xor
leave
addl
cltd
pop
movb
or
jge
mov
sbb
testb
add
add
add
push
cmovnp
pcmpeqb
pop
stos
aaa
push
ljmp
or
outsb
jecxz
add
add
adc
or
nop
sub
add
xchg
inc
add
jp
pop
scas
aas
mov
cmp
push
jb
add
addl
add
lcall
and
rolb
call
sbb
addb
lcall
movb
shlb
fwait
cld
movb
jbe
add
add
cmp
dec
push
xchg
int3
mov
add
outsb
imul
adc
add
add
xchg
loopne
testl
out
mov
test
push
cwtl
push
and
push
in
mov
sub
stc
pop
add
inc
add
add
nop
or
add
add
add
push
mov
add
add
xchg
mov
xchg
and
in
jo
rolb
pop
mov
mov
arpl
jg
add
cmp
lock
faddl
loop
add
add
mov
add
jno
add
xchg
roll
int3
repz
and
sbb
in
loope
addl
hlt
frstor
pop
test
jge
je
cmp
or
add
pop
iret
or
pop
lods
sti
imul
and
add
outsl
xor
add
mov
add
insb
inc
add
movl
mov
mov
xchg
mov
into
bound
aas
push
test
in
inc
add
nop
sub
cmp
mov
add
addr16
and
adc
dec
pop
pop
icebp
mov
iret
jmp
cltd
mov
xchg
mov
add
std
mov
lret
stos
mov
push
lcall
pushf
push
arpl
xor
jbe
cmp
loopne
jae
sti
lret
popa
add
out
cmpsb
dec
or
xchg
lret
and
lret
sub
or
dec
mov
add
addl
add
movl
and
push
add
nop
cmpsl
sbb
shr
dec
jmp
rep
push
stc
shufps
add
aad
movsl
mov
xchg
mov
jne
movsl
push
das
test
mov
push
lds
insl
shlb
jecxz
and
rcrl
cmp
fiaddl
add
ret
or
xor
push
jnp
and
mov
or
pusha
add
iret
cmp
jb,pt
xchg
mov
jae
outsl
out
out
daa
xchg
dec
dec
mov
add
bound
push
test
sub
dec
sub
cmp
mov
fstpt
add
lods
aas
mov
xchg
cltd
xlat
arpl
out
into
or
add
addl
lret
call
add
jecxz
inc
add
push
add
loop
call
stc
xor
add
notb
mov
call
add
mov
sub
fidivrl
test
nop
cmc
and
prefetch
ret
add
test
mov
ret
icebp
out
mov
stos
stos
in
int3
push
sub
stos
stos
dec
lret
pop
addb
adc
fs
xor
xor
cmpsl
mov
add
add
enter
hlt
stos
or
add
cmpsb
jb
imul
pop
out
das
cmp
out
mov
add
jb
sti
or
push
in
add
cmp
add
clc
fwait
call
add
lret
leave
scas
cmp
fisubrs
push
arpl
xlat
addb
push
int
ss
add
imul
hlt
or
cld
mov
push
addr16
mov
or
add
xchg
in
xor
addl
add
outsb
add
pop
mov
dec
fdivrl
add
add
lret
sub
mov
add
mov
xor
add
dec
fdiv
aad
sbb
jecxz
inc
add
xchg
mov
add
add
push
shrl
and
xor
add
stos
imul
addl
mov
push
aas
icebp
mov
out
pop
add
add
lods
jns
int3
addl
mov
jns
or
pop
call
xor
iret
pop
test
mov
xchg
cltd
jno
xor
add
sub
dec
sbb
add
mov
dec
psrlq
add
add
das
inc
add
add
cwtl
jg
test
jbe
xlat
outsb
jno
add
or
add
popa
add
lret
pop
dec
outsl
adc
iret
in
leave
push
add
movsl
inc
add
insl
add
sub
and
adc
adc
add
cmp
jg
out
sahf
mov
in
addl
mov
adc
add
movl
movl
sbb
add
mov
test
xchg
jnp
cld
fdivr
xchg
in
add
in
push
sbb
sahf
add
in
or
add
pop
add
aaa
rcrb
gs
cmpsb
xor
fmulp
je
movsb
dec
cs
add
cmp
jno
addb
dec
ret
fisttpl
add
test
adc
mov
jl
push
add
jle
jbe
mov
out
adc
dec
adc
dec
lret
in
shrl
nop
loop
movsb
test
pop
movb
xchg
addl
add
add
add
dec
add
xchg
pop
ja
add
add
addl
and
xchg
jo
fs
jnp
shl
inc
add
pop
xor
add
add
out
sub
test
sarb
add
push
add
dec
pop
mov
add
push
adc
and
pop
jecxz
mov
test
loopne
loopne
add
test
xor
add
addb
add
adc
add
pushf
add
jp
mov
addl
in
pushf
push
addl
xchg
fldl
std
fs
js
out
add
shrl
and
out
add
lods
nopl
insb
mov
and
aad
add
cmpsl
mov
mov
mov
pop
cld
dec
out
call
aad
stos
cmp
sahf
stc
insb
xchg
and
js
mov
xchg
pop
popa
add
mov
inc
add
frstor
xchg
das
mov
lret
xor
iret
inc
add
mov
add
pusha
add
push
sbb
mov
push
addl
stos
xchg
xor
mov
ja
out
roll
pop
das
scas
jae
add
aas
jp
pop
add
loop
push
add
movl
in
aaa
jno
jecxz
push
add
mov
pop
sbb
inc
add
add
jmp
lret
mov
dec
imulb
test
insl
femms
adc
add
lret
inc
add
sarb
addb
ret
add
push
push
sti
insb
movsl
popa
add
and
inc
add
dec
aaa
pop
cmp
xor
xchg
push
and
xchg
loopne
add
add
add
mov
sbb
add
inc
add
hlt
inc
add
or
pop
add
add
xchg
xchg
rcrl
ss
loopne
xchg
xor
sub
roll
and
push
pushf
aaa
xor
add
add
aam
xchg
xchg
jbe
add
rorl
lock
add
addl
mov
jge
pushf
mov
ja
cmp
imul
jo
inc
add
inc
add
stc
rolb
sub
jb
adc
outsb
inc
add
pop
cmp
pop
into
xor
fwait
ja
or
mov
cmpsl
mov
pop
jp
mov
es
add
add
add
add
mov
add
lret
pop
arpl
xchg
xlat
xchg
int
xor
les
xor
jl
add
imul
mov
xor
sbb
rolb
jmp
add
add
std
pop
leave
cmpsb
dec
push
adc
jnp
mov
sub
add
and
divb
push
mov
add
out
jmp
xlat
cwtl
xchg
lcall
adc
and
adc
add
add
lret
xchg
add
stos
addb
clc
repnz
in
sbb
je
add
push
imul
pop
push
jnp
gs
je
out
push
or
add
add
push
jb
cmp
mov
idiv
mov
pusha
add
mov
icebp
jb
mov
push
stc
pop
fidivrl
add
std
xchg
xor
xor
sbb
je
jge
popa
add
addl
mov
mov
and
or
add
push
push
repz
jno
jae
add
clc
cmp
movsb
pop
add
dec
shll
add
jge
cmp
add
add
fucomp
bound
int
bound
movb
push
mov
sbb
iret
cmp
xor
fldt
pushf
mov
add
add
mov
sub
or
add
addb
pop
add
or
adc
pop
stos
lods
inc
add
add
xor
ss
push
xchg
mov
popf
and
in
adc
rolb
movsb
cmpsl
cmp
xchg
nop
mov
add
loopne
cli
hlt
and
call
dec
rolb
pushf
jmp
xchg
sub
add
mov
fdiv
into
jae
cmpsb
jl
add
insl
and
js
icebp
jecxz
fwait
shrb
add
add
addb
cmp
xor
add
out
fwait
mov
test
xorps
jae
add
add
hlt
xor
add
repz
bound
cmp
sub
mov
add
lcall
push
in
or
add
dec
push
mov
push
mov
pop
cmp
push
xor
jle
adc
cmp
sub
add
sub
add
add
jae
leave
addb
loope
add
xadd
lds
cmp
push
jmp
ret
out
add
outsb
cmpsl
and
sahf
add
push
add
negl
sub
scas
lahf
mov
pusha
add
dec
out
cmp
mov
add
jmp
dec
mov
lods
sub
popf
sar
adc
cmp
inc
add
dec
sbb
xchg
lds
jo
xchg
and
rol
add
out
sub
outsb
pop
xchg
cmp
add
add
add
add
inc
add
lods
dec
rolb
loop
push
inc
add
add
int
push
add
add
adc
lret
scas
insb
fnsetpm(287
mov
jecxz
adc
notb
roll
js
adc
lret
xchg
xor
and
decl
adc
roll
add
inc
add
add
fldt
loope
loop
and
jno
pop
pop
jl
ds
sahf
sbb
mov
in
addb
xchg
xchg
roll
add
add
add
stc
inc
add
stos
ror
pop
ret
notl
add
add
mov
mov
adc
shll
int
out
jg
out
xchg
loopne
jecxz
jp
add
add
pop
cld
gs
test
add
jl
add
cltd
mov
cmpsl
dec
sbb
dec
lcall
mov
mov
and
mov
repnz
pop
adc
mov
add
add
xchg
pop
add
pop
int3
mov
or
add
cwtl
mov
in
loop
xor
testl
lds
inc
add
add
push
mov
loop
jns
add
or
add
xor
in
xor
add
out
ljmp
inc
add
jmp
addb
inc
add
mov
add
loopne
add
das
dec
xchg
mov
add
push
frstor
in
rcrl
or
cli
push
out
mov
xchg
xchg
mov
je
xor
xor
out
out
mov
add
cld
push
add
xor
std
xor
inc
add
adc
add
mov
adc
push
addl
jnp
pusha
add
shr
fstl
adc
or
dec
addl
add
jne
mov
movl
pop
shrb
mov
dec
ret
decb
popa
add
sbb
fstpt
in
or
jl
push
and
push
pop
arpl
daa
mov
nop
ljmp
xchg
pop
xchg
popf
imul
imul
rcll
popa
add
add
jecxz
movsl
data16
mov
sub
push
test
xchg
adc
add
jnp
sarb
jae
add
mov
int3
outsl
fldpi
sub
mov
filds
mov
jp
jbe
add
or
add
push
rcr
adc
jno
movsb
jl
add
add
add
pop
loop
cmpsb
pop
xor
inc
add
fdivs
dec
popf
ret
add
clc
lock
push
add
inc
add
lods
mov
into
ja
lahf
mov
push
roll
add
fistl
pavgb
fwait
cmp
test
int3
arpl
rolb
dec
jae
dec
in
pusha
add
pop
xor
stc
sub
jmp
mov
xor
add
xor
xor
pushf
addl
int
add
mov
je
out
xor
add
mov
insl
inc
add
mov
add
and
inc
add
not
lret
push
mov
mov
outsb
fstl
sub
mov
add
add
add
mov
inc
add
xchg
mov
aaa
inc
add
clc
popa
add
rolb
add
into
in
inc
add
add
jnp
mov
xor
and
mov
arpl
cs
xor
fidivrl
add
adc
cmp
xchg
or
or
fcoml
fmuls
stc
ret
add
pop
dec
jecxz
movl
mov
sub
cmp
sbb
sub
or
cs
dec
cs
int3
ja
sub
adc
imul
mov
add
enter
int
or
add
jl
addb
add
adc
scas
insl
pusha
add
stc
pop
xchg
insl
jno
jo
mov
fiadds
lcall
in
mulb
or
out
mov
fnstcw
inc
add
add
lea
dec
mov
pop
loop
mov
dec
sbb
xchg
mov
xchg
cmc
addr16
repnz
push
aad
decb
xor
pop
outsb
push
jecxz
add
jnp
add
popf
mov
cmp
sbb
sbb
pushf
jle
add
outsl
sub
pop
rol
add
popf
popa
add
sub
lods
lds
loopne
scas
pop
ja
iret
dec
mov
and
cltd
and
adc
repz
jbe
mov
sub
out
add
xor
lret
das
je
sbb
lret
cmp
dec
mov
add
push
push
sti
xor
in
ja
inc
add
pushf
add
aam
sahf
int3
das
loopne
or
fwait
pop
add
stc
xchg
sub
insl
pop
fistpl
mov
addl
pop
std
sti
jmp
jns
movsl
les
mov
add
sbb
mov
icebp
xchg
mov
xchg
pop
add
rolb
fstpl
pop
loope
jl
out
in
xor
addb
addb
out
mov
xor
pop
cli
or
lretw
xchg
push
fwait
je
ljmp
add
sub
cmp
add
hlt
sbb
mov
mov
add
cmp
add
sbb
push
loope
cmpsl
or
out
in
jmp
xchg
sti
addl
and
out
jp
push
ja
and
std
xchg
clc
pop
mov
stc
xor
rclb
bound
or
nop
push
ss
popa
add
and
addb
scas
cmpsl
addb
sbb
xchg
sub
pop
add
out
cmp
adc
push
push
xor
sub
or
mov
ja
and
cwtl
dec
aam
add
sahf
cmpsl
loope
addl
lea
int3
out
icebp
icebp
call
push
jg
dec
lods
mov
push
ljmp
add
add
xchg
test
ja
add
movl
add
cli
jno
in
leave
inc
add
mov
add
inc
add
dec
ret
add
in
jp
or
mov
std
stos
sub
sbb
add
decb
adc
js
add
or
mov
cmp
push
mov
stos
hlt
rcll
mov
or
dec
push
add
inc
add
inc
add
add
cwtl
push
jo
loope
nop
cltd
mov
movb
aad
add
mov
or
inc
add
add
add
add
shll
add
add
inc
add
mov
xchg
addb
or
ds
mov
jbe
addl
pop
ret
add
lea
cmp
jno
fdivr
stos
nop
add
dec
xor
in
sub
fsubs
jno
aad
sub
add
test
jle
rcll
add
rolb
add
xor
mov
and
pop
adc
loop
xchg
leave
add
inc
add
xor
push
xchg
dec
outsb
jp
inc
add
aad
mov
push
adc
add
in
push
or
bound
sub
pop
and
add
cmp
sub
addb
lret
pop
sub
sub
jle
push
xor
add
mov
out
imul
add
sub
xchg
sub
loope
test
jl
add
push
shr
sub
xchg
jbe
add
xchg
in
jecxz
cmpsb
mov
push
xlat
addl
xchg
sub
addb
negb
pushf
int3
push
mov
add
push
addl
dec
insl
push
in
in
or
lods
pop
je
pop
aaa
mov
addb
fdivp
fisubrs
lret
cs
cmp
insb
out
les
xchg
push
roll
mov
push
and
push
addl
or
out
test
pop
sbb
mov
mov
inc
add
lcall
lcall
jns
mov
add
mov
add
loope
jp
loopne
in
aad
dec
lods
cmp
push
and
dec
loope
dec
sub
addr16
lds
fdivrl
sbb
mov
mov
mov
clc
inc
add
sub
xor
int
addl
and
mov
faddl
dec
xor
cmp
mov
add
sti
or
add
dec
add
in
out
movsb
mov
ds
lahf
loopne
push
inc
add
pop
add
cltd
dec
pop
loop
pushf
ljmp
add
jg
add
lret
inc
add
hlt
sub
pop
xor
pusha
add
mov
add
mov
lea
inc
add
mov
add
add
sarl
and
lods
rolb
add
das
sbb
inc
add
add
pop
shr
inc
add
jne
xchg
divb
lock
xor
or
popl
nop
loopne
cli
inc
add
cmp
daa
sti
xchg
mov
mov
mov
call
jecxz
add
addb
addl
or
add
and
add
mov
and
dec
push
out
adc
cmp
pop
scas
cmc
or
loope
dec
repz
jbe
imul
add
sbb
dec
notl
ljmp
hlt
lds
addb
popa
add
add
aaa
mov
test
loopne
push
loope
std
push
inc
add
repnz
aaa
inc
add
das
roll
jmp
xor
xor
jp
add
add
hlt
xchg
cmc
mov
outsl
pop
add
add
pop
ret
addb
lds
iret
and
and
mov
add
push
outsl
push
outsb
add
popl
add
sub
icebp
sub
les
xchg
sbb
xchg
out
scas
cmpsl
roll
jp
fildll
and
mov
add
xlat
pop
repz
clc
mov
in
add
scas
inc
add
add
inc
add
add
jge
cmpsb
aas
inc
add
mov
mov
les
jmp
adc
xor
je
outsb
push
mov
xlat
push
xor
mov
add
inc
add
add
arpl
into
lods
repz
push
xchg
xchg
or
lcall
fbld
in
fcom
mov
jo
add
push
cmp
add
adc
ljmp
test
mov
xchg
jno
cmpsb
popa
add
movq
inc
add
sub
dec
dec
ds
pop
add
aad
addr16
ret
add
lret
addb
int3
lea
aam
add
push
out
data16
and
sbb
cmpsl
xlat
cli
hlt
and
lods
mov
loop
add
add
add
jo
add
add
add
sarl
add
fdivr
cmp
xor
mov
loope
add
or
es
rol
add
mov
stc
inc
add
sub
out
aad
hlt
inc
add
pop
addb
add
gs
xor
stos
inc
add
inc
add
xor
add
adc
adc
sub
sbb
lcall
and
or
and
jb
jge
xor
loop
add
roll
add
insb
or
mull
inc
add
test
cmp
mov
mov
pop
cltd
fadd
add
pop
add
stc
push
mov
leave
and
xchg
dec
pop
mov
aam
add
inc
add
push
add
xchg
ss
add
mov
add
rolb
outsl
jae
mov
push
mov
addb
aam
or
movb
test
add
bound
movl
rorl
lret
add
pop
sbb
xcrypt-ofb
cwtl
addb
mov
add
test
pop
pop
movb
push
cmp
sub
jae
add
iret
repnz
in
mov
sub
jno
add
xchg
xchg
dec
movsb
cmp
lahf
sbb
imull
jle
add
loop
inc
add
out
stc
push
cld
xor
dec
rol
add
xor
movb
jns
inc
add
cs
lret
sub
je
sti
jmp
out
jmp
ret
pop
stos
xlat
mov
add
and
out
ret
fwait
pop
mull
xor
pushf
cmp
mov
decb
notb
dec
sub
add
jbe
leave
mov
sub
and
mov
add
push
pop
cwtl
add
inc
add
and
push
jnp
bnd
add
sahf
out
inc
add
sbb
daa
jno
clc
sub
scas
jg
insl
xor
lahf
fnsave
mov
pop
lretw
cli
sub
cmc
sbb
push
shrd
lcall
push
cld
test
or
add
pop
popf
lret
shlb
push
stos
scas
push
add
pushf
inc
add
leave
aam
sub
pop
dec
imul
insb
add
pusha
add
scas
mov
mov
xor
loopne
mov
testl
addb
add
xor
call
push
movsl
fisubrs
jl
add
iret
fmul
sub
jmp
mov
xchg
sbb
push
je
xchg
aad
add
add
dec
sub
or
jmp
xor
roll
add
out
inc
add
push
ja
xchg
sub
sbb
pusha
add
movl
imul
jb
mov
add
gs
add
dec
scas
addl
int
sarb
inc
add
pushf
mov
add
mov
sarl
test
xchg
and
mov
cltd
dec
cli
lea
aad
ljmp
xor
out
sub
jno
out
dec
inc
add
lret
mov
add
js
test
cwtl
movl
addl
jge
add
inc
add
sti
movb
xchg
add
pop
or
jo
lds
lea
add
sub
mov
add
mov
sbb
ss
and
mov
inc
add
jns
mov
mov
cmp
mov
shl
fsubr
xchg
xchg
mov
add
jbe
mov
dec
gs
adc
es
add
data16
test
movb
addb
jmp
arpl
stc
into
cmp
cmp
add
scas
push
hlt
bound
cmpsb
pop
jns
inc
add
movb
cmp
cmpsl
mov
cmp
mov
add
movsb
out
enter
add
mov
mov
addl
mov
shll
add
add
scas
inc
add
inc
add
xchg
rorb
lds
fimuls
in
cltd
into
cmp
and
or
add
js
mov
or
dec
xchg
pop
mov
xchg
inc
add
ljmp
jecxz
adc
cmpsl
hlt
push
mov
movb
sub
pop
xor
jl
fstpt
add
adc
or
push
mov
push
push
jno
inc
add
popf
cmp
loopne
adc
xchg
adc
and
cmp
faddl
inc
add
lds
xchg
in
sti
and
add
arpl
jecxz
fs
test
sub
xchg
stc
addr16
xor
xlat
push
push
scas
dec
adc
add
rclb
fsts
fadd
add
add
mov
imul
mov
lods
addr16
add
add
add
enter
add
or
cmp
fwait
add
das
jg
ds
cmp
add
mov
loopne
adc
in
insb
dec
mov
cltd
lahf
adc
stos
pusha
add
shrl
add
inc
add
insb
mov
fisubl
xlat
test
add
fisubrl
mov
xor
cwtl
jno
push
xchg
adc
add
sub
add
ljmp
mov
lahf
xchg
lret
mov
fs
aaa
leave
repnz
cmc
inc
add
and
inc
add
add
add
add
stos
pop
pop
test
xor
adc
add
add
test
push
lret
add
xor
mov
add
pop
inc
add
or
push
sbb
adc
add
lahf
enter
addb
add
mov
jb
add
daa
iret
mov
out
mov
pop
gs
movsb
push
xchg
leave
enter
iret
jle
sub
pop
fldpi
jecxz
int3
xchg
lret
sub
pop
add
add
arpl
sub
add
add
xchg
dec
cwtl
mov
jl
add
jge
repz
or
and
dec
rolb
testb
adc
mov
pop
aam
cmp
adc
xchg
fnstsw
xor
add
adc
bound
ret
add
icebp
mov
cmpsb
adc
pop
imul
lods
leave
sub
divb
ja
stos
and
movb
add
sbb
mov
add
mov
cmpsb
inc
add
in
ret
or
add
pushf
xchg
test
in
mov
jb
xor
movb
jle
mulps
and
jmp
adc
sub
add
xlat
cmp
roll
imull
lret
mov
sbb
cmp
add
dec
inc
add
movsl
jne
sub
xchg
xchg
add
ficomps
in
popf
push
loop
jno
add
cli
hlt
jle
test
ss
add
dec
ds
add
push
or
cmp
adc
jnp
push
push
or
in
xor
hlt
out
fsts
or
add
mov
fidivrl
addb
push
add
rolb
jmp
inc
add
movb
clc
ds
push
push
add
aas
push
cmp
out
syscall
add
cmpsl
jge
call
js
add
push
fidivrs
mov
daa
sbb
test
dec
gs
add
roll
test
fwait
xchg
cmpsb
pop
add
xchg
in
lods
out
jo
out
sbb
enter
ljmp
pop
inc
add
and
out
push
xchg
add
xchg
hlt
mov
iret
int
repz
add
mov
add
addr16
mov
inc
add
aam
add
pop
jecxz
sub
xor
ficompl
add
pop
lahf
arpl
fmuls
inc
add
outsb
adc
pop
xchg
rolb
out
aad
int
jmp
add
je
test
add
xlat
xlat
out
push
jnp
add
into
inc
add
sahf
addb
sbb
ljmp
add
pushf
or
and
pop
xor
pop
mov
iret
loopne
add
adc
mov
mov
xlat
fucomip
imul
sbb
loope
xchg
adc
aaa
pop
mov
push
pop
nop
hlt
jne
mov
sahf
xchg
jl
ds
add
push
icebp
lods
adc
sub
adc
enter
or
cwtl
in
cld
les
mul
out
mov
stc
jb
das
add
inc
add
es
daa
adc
jb
ret
add
add
add
jb
jbe
stc
add
add
pop
stc
jb
add
or
add
inc
xlat
sub
orb
add
jl
inc
push
aad
movzwl
nop
jmp
add
movl
nop
jmp
xchg
add
sti
pop
add
cmp
nop
jmp
add
pop
push
mov
xchg
ret
add
push
push
mov
xchg
ret
add
mov
stc
jb
cwtl
add
add
cwtl
mov
outsl
sub
add
test
add
addr16
test
push
mov
xchg
ret
dec
cltd
cmp
mov
stc
jb
popf
movl
xor
jp
stc
jb
in
add
mov
test
out
stc
jb
add
iret
call
stc
jb
cmp
add
nop
sub
stc
jb
jo
add
mov
jg
in
movb
mov
nop
jmp
add
xor
les
sbb
rclb
stos
xor
add
mov
add
add
jb
add
ss
add
stc
jb
cmp
mov
enter
addl
and
add
mov
xchg
stc
jb
cltd
cmp
out
or
test
add
stc
jb
add
add
ret
stc
jb
add
data16
add
movb
mov
stc
jb
add
mov
cmp
call
stc
jb
add
movw
inc
push
adc
stc
jb
pop
in
popf
jecxz
mov
nop
jmp
out
int
jl
stc
jnp
mov
add
jb
add
jbe
or
pushl
stc
jb
add
loope
add
mov
add
adcb
add
cmp
mov
jb
inc
pop
jo
add
jl
int
pop
jae
jb
cmp
in
cmp
lods
sbb
add
add
cltd
add
mov
jne
nop
jmp
cltd
lods
add
adc
and
jmp
das
je
jl
add
jl
popa
add
jmp
jae
add
out
add
add
imul
stc
jb
stos
add
add
jb
je
add
add
test
ret
add
jb
mov
add
iret
mov
stc
jb
add
dec
add
push
mov
xchg
ret
lods
mov
add
add
add
add
cwtl
data16
data16
shll
add
loop
push
push
mov
xchg
ret
add
add
pop
mov
stc
jb
or
lret
add
mov
add
xor
fcmovnb
push
add
loope
mov
stc
jb
data16
out
cmp
stc
jb
testb
add
scas
or
add
int
add
add
stos
mov
push
mov
xchg
ret
das
mov
jne
add
jno
stc
jb
ret
add
stos
add
rep
nop
jmp
add
add
inc
add
lret
add
stos
test
nop
adc
push
mov
xchg
ret
movsb
cmp
shl
nop
jmp
xchg
add
aad
pop
push
mov
xchg
ret
mov
mov
add
stc
jb
stos
add
or
pop
cmp
jb
stos
add
mov
mov
or
in
push
bound
add
fisttpl
inc
and
add
loope
das
add
stc
jb
ja
add
ret
adc
mov
jnp
inc
add
je
movsb
stos
shr
stc
jb
dec
push
movl
test
or
add
jb
jae
add
mov
add
cli
lea
add
pop
ror
push
mov
xchg
ret
add
add
testl
nop
jmp
add
addr16
roll
mov
push
mov
xchg
ret
add
pause
jmp
adc
stos
add
push
mov
xchg
ret
cmp
int
add
xor
nop
jmp
add
pop
or
mov
stc
jb
add
icebp
pusha
add
push
nop
jmp
add
popa
pop
je
cwtl
stc
cwtl
inc
add
jnp
rcll
testl
stos
cld
jmp
test
adc
add
jb
testl
in
add
pop
add
mov
movsl
push
sahf
dec
push
mov
xchg
ret
add
mov
add
ljmp
cmp
add
add
mov
stc
jb
cltd
cmp
add
fisttps
adcb
add
mov
lea
popa
add
mov
xchg
ret
xlat
pusha
add
push
push
mov
xchg
ret
jl
add
add
add
xchg
jnp
movb
mov
xchg
ret
add
jnp
stc
jb
add
inc
add
add
jb
mov
or
jg
add
and
pop
test
nop
jmp
add
mov
or
add
daa
adc
sub
stc
jb
add
les
mov
adc
jmp
mov
test
xor
push
mov
xchg
ret
cwtl
add
add
push
mov
add
or
fwait
push
cmp
push
ljmp
sub
jb
add
add
stc
jb
add
stos
pop
add
iret
cmpl
nop
jmp
pop
jo
xchg
popa
add
push
subb
add
cltd
add
stos
add
je
stc
jb
cld
test
and
push
push
mov
xchg
ret
cmp
stos
aad
add
sbb
cli
stc
jb
add
aad
add
mov
jne
stc
jb
inc
add
xor
stc
jb
loope
test
test
add
add
add
stc
jb
add
xchg
push
add
stc
jb
jbe
les
add
and
jne
stc
jb
add
push
outsb
push
stc
jb
aad
add
stos
xlat
add
jmp
push
add
add
inc
push
mov
xchg
ret
loope
cwtl
pusha
dec
jmp
stc
jb
je
mov
lahf
lea
nop
jmp
les
notl
pop
push
push
mov
xchg
ret
add
adc
push
stc
jb
add
mov
mov
or
dec
mov
stc
jb
add
inc
jb
stc
jb
test
add
movl
add
stc
jb
add
cmp
js
nop
jmp
jg
xchg
add
add
rcll
adc
jmp
add
cwtl
add
or
mov
nop
jmp
add
cld
test
jb
add
add
inc
cwtl
ja
pop
stc
jb
lods
inc
add
add
ret
inc
sbb
mov
xchg
ret
or
add
push
stc
jb
xor
jl
cwtl
loope
add
pop
nop
jmp
lret
or
idiv
cld
add
and
push
nop
jmp
add
out
add
add
les
and
arpl
push
in
add
add
add
ljmp
add
lcall
stc
ljmp
add
add
inc
add
jb
add
rclb
pushf
ret
stc
jb
test
dec
rclb
jmp
subb
add
pop
push
test
cmp
clc
push
mov
xchg
ret
test
push
jne
add
and
stc
jb
jbe
xlat
cmp
mov
mov
stc
jb
mov
call
mov
xchg
ret
add
loope
cmp
mov
stc
jb
add
cmp
add
xor
stc
jb
les
add
jp
lock
mov
xchg
ret
add
add
cmp
test
add
jb
add
add
fld
jmp
testl
inc
popa
or
xor
stc
jb
or
imul
add
mov
mov
popf
nop
jmp
add
add
scas
push
push
mov
xchg
ret
add
je
stc
jb
int
movl
jb
mov
or
add
stc
jb
je
add
aad
fists
jb
xor
jbe
xor
lret
cmp
insb
sub
nop
jmp
les
dec
in
pop
fidivl
sar
jb
add
stc
or
or
sbbb
add
add
sar
jb
add
stos
add
ja
cmpsb
dec
add
stc
jb
add
mov
jmp
inc
add
add
dec
out
mov
stc
jb
loope
lret
mov
mov
stc
jb
pop
add
push
push
mov
xchg
ret
xlat
movsb
mov
movl
nop
jmp
add
add
cmpl
int
add
add
testl
jb
add
inc
add
xchg
add
add
add
mov
xchg
ret
loope
adc
out
push
nop
jmp
les
add
ja
lret
mov
data16
or
repz
mov
xchg
ret
add
add
xor
stc
jb
les
jbe
mov
add
push
stc
jb
add
jg
jbe
add
dec
push
mov
xchg
ret
cld
cld
stos
aad
fiaddl
add
inc
add
mov
push
cmp
mov
xchg
ret
xor
add
scas
testb
sub
ret
add
int
add
stc
jb
pop
cld
add
ret
xchg
pop
scas
pushl
stc
jb
xlat
jg
mov
cltd
xchg
out
add
stc
jb
lret
add
cmp
stc
jb
add
cld
cmp
push
mov
xchg
ret
mov
add
pop
add
stc
jb
lret
add
cmp
adc
mov
xchg
ret
movsb
add
jo
add
and
jmp
aad
cld
add
jl
mov
mov
jmp
mov
stc
add
xchg
ret
add
add
sti
pusha
nop
jmp
add
testl
outsl
ret
stc
jb
inc
add
int
add
add
mov
arpl
inc
add
jg
dec
stos
stos
push
push
mov
xchg
ret
stos
add
add
subb
add
cwtl
add
cmp
jl
stos
and
pop
mov
stc
jb
mov
cwtl
stos
test
jb
es
stc
jb
push
and
ret
mov
stc
jb
pop
add
je
add
testb
cltd
and
nop
jmp
mov
add
test
jb
inc
xor
ret
imul
jmp
stc
jb
add
jge
test
cld
stc
jb
mov
add
sar
jb
add
test
dec
push
add
lea
stc
jb
cmp
add
add
add
jb
jl
add
cld
or
idiv
pushl
xor
add
add
mov
add
pop
add
rcll
divl
out
dec
movzwl
nop
jmp
mov
add
xchg
xor
inc
add
add
add
incb
stc
jb
add
cmp
sub
push
mov
xchg
ret
add
mov
add
add
jmp
add
add
shll
arpl
add
add
lret
add
adc
jb
add
xor
pop
jne
stc
jb
add
pop
daa
mov
jb
jo
pop
add
mov
pop
mov
push
mov
xchg
ret
add
mov
add
add
stc
jb
xlat
aad
jle
mov
stc
jb
pop
add
mov
nop
jmp
cld
add
pop
mov
add
stc
jb
add
mov
add
xchg
mov
add
add
jb
add
inc
add
cmp
stc
jb
add
or
shr
add
stc
jb
add
fimuls
mov
sub
xchg
in
inc
add
pop
push
out
jae
call
stc
jb
loope
add
add
inc
movsb
dec
sub
nop
pusha
shrb
push
stc
jb
stos
inc
add
imul
scas
call
stc
jb
movl
stc
jb
test
inc
add
or
add
add
stc
jb
add
add
add
orb
lret
mov
mov
xchg
fwait
push
mov
add
aaa
mov
loope
iret
mov
sub
cmpb
int
add
cld
push
stc
jb
pop
add
add
add
add
pop
push
nop
jmp
add
add
imul
test
mov
stc
jb
inc
add
pop
stc
jb
mov
out
add
in
add
stc
jb
add
jo
add
sub
stc
jb
add
add
add
add
add
cld
add
in
cmpsl
addl
and
stc
jb
mov
cltd
add
add
push
stc
jb
xlat
add
test
add
inc
les
sub
add
jb
testl
xor
nop
jmp
add
test
add
add
addl
stc
jb
mov
xor
cmp
cmp
jb
add
mov
push
mov
xchg
ret
add
pop
add
add
mov
stc
jb
stos
jbe
testl
add
popa
cld
loope
add
out
mov
nop
jmp
pop
aad
add
lret
add
xchg
in
add
add
add
mov
stc
jb
out
imul
jb
add
pusha
add
mov
xchg
ret
cltd
in
add
push
mov
xchg
ret
mov
add
add
pop
push
mov
xchg
ret
add
add
stc
jb
cmp
loope
lret
or
pop
mov
nop
jmp
mov
xlat
jo
or
nop
jmp
xor
cmp
out
or
push
sub
cmp
inc
add
add
std
inc
stc
jb
data16
cmp
add
rorb
aaa
add
add
cld
xlat
add
add
mov
stc
jb
mov
int
xor
popf
loope
add
stc
jb
data16
repnz
push
stc
jb
cwtl
lret
popf
jae
jbe
push
mov
mov
sub
ret
add
test
dec
add
push
mov
xchg
ret
dec
mov
or
cmpsb
add
stc
jb
xchg
in
push
cmp
addb
pushl
inc
imul
add
stc
jb
xor
xor
push
mov
xchg
ret
add
fisttpl
and
add
inc
aad
pusha
stos
imul
add
shll
outsl
mov
push
mov
xchg
ret
add
jno
dec
nop
jmp
add
les
add
sti
add
add
nop
jmp
lret
add
add
sbb
add
jb
add
pop
movsb
call
jp
incl
add
add
mov
stc
jb
testl
es
jmp
stc
jb
add
mulb
ds
stc
jb
add
add
pop
and
nop
jmp
add
add
mov
mov
push
mov
jnp
mov
fdivl
add
sub
adc
stc
jb
imulb
daa
jbe
add
pop
stc
jb
or
add
addl
dec
push
mov
xchg
ret
mov
add
sti
iret
call
stc
jb
stos
add
pushw
addr16
popf
push
stc
jb
pusha
add
cld
add
add
incl
xchg
ret
push
test
add
sub
add
testb
inc
pop
add
imul
stc
jb
add
pusha
add
add
pusha
add
inc
add
push
inc
add
jae
add
push
pusha
stc
jb
cwtl
cwtl
add
adc
add
add
mov
stc
jb
adc
mov
stc
jb
ret
movl
mov
push
mov
xchg
ret
pusha
add
in
jne
add
pop
add
push
push
outsb
je
mov
stc
jb
test
adc
mov
stc
jb
imul
adc
rep
stc
jb
push
cmp
add
add
shll
stc
jb
add
add
add
add
adc
sti
mov
stc
jb
mov
add
add
stc
jb
lret
add
push
push
mov
xchg
ret
add
push
push
mov
xchg
ret
add
add
je
mov
push
mov
xchg
ret
lods
mov
jne
stc
jb
loope
int
add
stc
jb
pop
add
popa
add
test
push
add
stc
jb
test
lods
adc
add
jb
add
add
add
enter
and
add
popf
add
data16
add
stc
jb
add
lcall
jmp
dec
add
xor
add
fmull
mov
add
out
add
mov
xchg
ret
aad
pop
popa
add
or
add
imul
ret
add
add
subb
add
add
push
mov
xchg
ret
add
je
nop
jmp
ret
add
mov
call
stc
jb
dec
stos
add
jg
push
mov
xchg
ret
add
add
idivb
push
mov
xchg
ret
add
add
fdivr
jb
imul
add
pop
lods
cmpsb
mov
jb
add
int
mov
add
orb
incl
das
xchg
cwtl
mov
insb
movzwl
stc
jb
mov
adc
jmp
inc
add
add
aam
push
stc
jb
add
add
movl
jmp
jb
add
jae
inc
stc
jb
cltd
inc
xor
add
inc
testl
add
lahf
dec
insl
imul
push
mov
xchg
ret
in
stc
out
test
push
mov
xchg
ret
add
mov
jb
jae
mov
add
cmc
jecxz
cmpl
nop
jmp
add
add
inc
add
add
stc
jb
add
add
add
inc
add
mov
stc
jb
add
cltd
test
add
inc
push
mov
xchg
ret
cwtl
add
mov
add
add
nop
jmp
mov
jae
mov
jb
lods
xor
sti
add
insb
stc
jb
add
add
dec
mov
stc
jb
add
stos
stc
jmp
dec
add
jb
add
add
xlat
mov
push
mov
add
add
xor
rorl
add
nop
jmp
ja
pusha
add
test
jb
add
mov
push
push
mov
xchg
ret
mov
pop
stos
add
inc
add
andb
incl
xchg
add
cwtl
add
inc
add
add
jbe
addl
add
stc
jb
add
add
add
add
jb
add
mov
stc
jb
ret
add
add
cli
inc
add
inc
data16
sbb
mov
add
jb
add
cld
pop
sub
cmpb
lcall
add
jl
nop
jmp
add
cld
mov
jge
stc
jb
add
loope
and
cld
ret
nop
jmp
add
das
add
xor
addr16
add
addb
add
shr
stc
jb
add
int
mov
pop
add
push
fdivl
fwait
lea
stc
jb
test
mov
popa
add
jmp
inc
das
add
add
add
stc
jb
add
ret
inc
je
push
add
add
imul
stc
jb
popf
mov
out
push
add
jne
stc
jb
add
add
add
mov
xchg
ret
add
add
add
jb
pop
add
push
mov
xchg
ret
cltd
xchg
mov
push
mov
xchg
ret
add
xor
add
and
push
mov
xchg
ret
lret
inc
popa
add
push
stc
jb
test
add
push
stc
jb
add
cmp
mov
popa
pop
add
dec
and
stc
jb
add
dec
add
scas
pusha
stc
jb
ret
cltd
or
in
movsb
test
push
stc
jb
add
add
mov
nop
jmp
inc
add
out
int
pop
push
mov
in
pushl
sbb
dec
jmp
nop
jmp
cld
stos
lret
add
cmp
sbb
pushl
lods
add
add
popf
jne
stc
jb
out
dec
adc
xchg
jp
push
mov
xchg
ret
add
jg
ljmp
out
incl
mov
add
inc
mov
cmc
jecxz
and
in
add
push
stc
jb
add
add
mov
xor
jns
stc
jb
cmp
add
add
popa
nop
jmp
stos
mov
add
add
add
push
push
mov
xchg
ret
xor
add
add
jmp
cltd
inc
add
mov
add
add
stc
jb
int
add
add
jnp
stc
jb
xchg
add
cmp
sbb
add
stc
jb
add
add
add
jb
add
cld
pusha
stos
add
add
rclb
icebp
inc
add
add
mov
lods
pop
nop
jmp
add
add
add
add
ja
test
nop
jmp
test
testb
dec
mov
stc
jb
add
pushf
and
push
mov
xchg
ret
add
stc
inc
stc
jb
add
idiv
add
add
or
push
testb
sub
ret
add
popa
add
inc
add
inc
stc
jb
add
cmp
stos
xor
test
nop
jmp
add
jl
scas
mov
push
mov
xchg
ret
add
cld
add
js
jg
stc
jb
cld
add
mov
outsb
je
stc
jb
add
stos
mov
shr
pushl
add
stc
jb
imul
ljmp
add
add
stos
les
add
daa
dec
pop
push
mov
xchg
ret
or
idivl
and
daa
in
inc
add
stc
add
lea
stc
jb
inc
add
mov
je
xor
stc
jb
add
add
add
stc
jb
movl
and
push
mov
xchg
ret
add
stc
pusha
add
call
popa
mov
popf
call
inc
inc
xor
push
stc
jb
mov
xchg
out
add
add
mov
stc
jb
add
ja
jo
pop
add
nop
jmp
add
add
add
in
add
inc
add
xlat
add
ds
push
filds
ljmp
popa
stc
jb
inc
movsb
loope
data16
mov
adc
xor
push
mov
aad
jb
stos
add
xor
enter
adc
add
mov
add
pusha
cltd
dec
push
inc
add
add
add
dec
nop
jmp
je
add
xor
push
stc
jb
lretw
add
movzwl
stc
jb
cltd
add
cltd
add
jo
nop
jmp
notl
mov
add
jmp
add
sti
add
les
dec
add
mov
xchg
ret
add
xlat
push
dec
nop
jmp
cmp
movl
lret
and
rolb
add
mov
add
jb
add
add
xlat
pusha
add
add
add
push
mov
xchg
ret
loope
add
cmp
jb
les
pop
mov
stc
jb
cld
add
add
add
add
andb
ljmp
add
pop
add
stos
mov
push
mov
xchg
ret
add
xchg
stc
jb
add
cld
cld
sti
pusha
lret
stc
jb
add
add
add
xor
stc
jb
add
cmp
nop
jmp
add
mov
and
push
mov
xchg
ret
ret
stos
pop
mov
jb
add
xor
add
sbb
mov
add
jmp
mov
add
add
out
push
push
mov
xchg
ret
jo
sti
mov
jmp
popf
add
add
fmuls
or
xchg
ret
aad
aad
aas
pop
nop
jmp
add
add
xlat
call
jb
add
pushf
mov
stc
jb
das
add
jo
add
lea
xor
add
stc
jb
add
nop
lea
xor
add
nop
jmp
add
add
add
incl
nop
jmp
int
stos
jl
fmull
orb
jl
mov
inc
or
stc
jb
inc
add
add
and
pop
add
stc
jb
popf
lods
add
or
cmp
xorb
add
add
pop
add
add
nop
dec
mov
stc
jb
imul
add
add
mov
cmpb
incl
les
ret
mov
stc
jb
add
add
outsl
lods
push
mov
xchg
ret
les
add
add
jmp
out
add
negl
xor
nop
jmp
add
add
add
stc
frstor
popa
add
mov
xchg
ret
pop
out
mov
add
stc
jb
das
stos
popf
jo
add
add
dec
push
mov
lcall
add
cmpsl
xchg
xchg
jg
stc
jb
sti
add
add
dec
stos
cwtl
pop
stc
jb
add
jl
push
add
inc
xchg
ret
add
inc
pop
add
nop
jmp
add
add
add
stc
jb
lods
je
lret
xor
add
inc
add
cmp
jb
mov
jg
cmp
add
nop
jmp
xor
jl
add
add
push
mov
xchg
ret
mov
add
fmull
test
jb
add
inc
inc
add
ficoml
mov
xchg
ret
add
stos
add
hlt
ss
add
push
mov
xchg
ret
add
test
lods
nop
jmp
jo
xchg
data16
or
add
jb
inc
mov
add
cli
add
stc
jb
add
add
dec
push
mov
xchg
ret
das
movsb
testl
lea
nop
jmp
cmp
int
add
andb
incl
add
adc
add
push
mov
xchg
ret
or
push
push
mov
xchg
ret
xor
xor
add
jb
test
add
mov
push
mov
xchg
ret
cmp
aam
cmpw
stc
jb
stc
ja
jg
dec
add
stc
jb
pop
in
or
stc
leave
je
stc
jb
add
je
aaa
mov
push
stc
jb
add
add
cwtl
mov
stc
jb
cmp
inc
add
pop
and
stc
jb
cmp
adc
dec
adc
jmp
dec
add
push
mov
add
push
ja
xor
add
add
or
sti
push
stc
jb
stos
movsb
data16
or
iret
in
inc
add
add
out
push
push
mov
xchg
ret
add
mov
nop
jmp
add
sub
movsl
call
and
pop
lods
stos
testb
nop
jmp
jbe
add
add
add
stc
jb
cld
mov
add
cmp
ljmp
lcall
add
push
in
dec
add
push
stos
add
jl
icebp
mov
ret
inc
or
add
movl
or
jb
in
add
data16
push
stc
jb
push
cltd
or
add
add
jbe
push
addl
rcrb
test
std
stc
jb
popf
add
scas
xor
stc
jb
jae
cmp
add
stc
test
lret
mov
stc
jb
aad
mov
pop
push
cmpsl
sub
jb
add
popf
add
pop
and
mov
incl
add
lret
add
add
cmpsl
inc
add
or
add
adc
fdivrp
jb
mov
mov
add
add
mov
stc
jb
add
add
inc
cmp
adc
jb
cld
xchg
mov
imul
stc
jb
ret
cltd
popf
xor
in
push
mov
add
shr
cmpsl
mov
push
add
cmpsl
mov
xorb
test
add
mov
add
add
mov
stc
jb
add
mov
add
mov
nop
jmp
add
add
mov
or
push
mov
xchg
ret
ja
popf
adc
xor
stos
stc
jb
add
add
in
mov
push
mov
xchg
ret
mov
add
add
jb
add
add
dec
xor
stc
jb
add
cld
stc
ja
add
lcall
mov
xchg
ret
add
xor
cwtl
push
xchg
stos
dec
stc
jb
mov
add
xchg
test
dec
sub
jb
popf
add
add
imul
stc
jb
mov
add
cmp
nop
jmp
add
add
inc
stos
les
and
push
mov
xchg
ret
mov
cmp
and
nop
jmp
add
add
mov
add
stc
jb
jg
movsb
out
test
mov
xor
add
add
or
cltd
subl
stc
jb
jae
add
jbe
and
dec
add
stc
jb
xchg
xchg
add
cmp
mov
xchg
ret
aad
sti
aad
xchg
stc
jb
add
xor
imul
movl
stc
jb
add
jo
add
push
push
mov
xchg
ret
int
jo
loope
adc
mov
stc
jb
stos
xchg
stos
cwtl
add
dec
add
add
ljmp
mov
stc
jb
add
add
sbb
jecxz
incl
add
sbb
jb
mov
add
jb
nop
jmp
xchg
push
add
push
stc
jb
jae
jl
test
push
jb
add
add
and
into
jmp
stc
jb
stos
add
pusha
jnp
inc
in
mov
xchg
ret
xor
add
pushf
out
decl
inc
add
mov
add
and
cwtl
and
stc
jb
lods
pusha
xor
movswl
nop
jmp
cld
dec
add
loope
inc
add
jb
lret
cmp
add
pusha
xchg
fnstsw
stc
jb
add
add
mov
nop
jmp
add
add
add
testb
dec
idiv
call
inc
pusha
inc
add
sahf
and
stc
jb
mov
out
data16
aaa
mov
pop
and
jmp
les
sti
add
das
inc
jg
mov
stc
jb
add
cmp
xor
in
dec
nop
jmp
add
push
movsb
add
add
aad
incl
movsb
add
stos
add
sti
push
mov
add
sub
add
fisttpll
add
add
pop
jmp
nop
jmp
je
add
inc
cmpsb
jecxz
pop
stc
jb
inc
add
sti
add
stc
jb
add
add
push
mov
add
inc
cld
hlt
cmpsb
add
add
dec
add
xor
push
mov
xchg
ret
add
stc
jb
add
add
dec
add
leave
nop
jmp
popa
stc
add
mov
mov
sbb
stc
jb
add
add
add
loope
jb
add
xor
jae
cmp
jmp
add
lods
inc
cmp
jb
mov
ret
add
mov
cmp
cmp
nop
jmp
add
add
jae
rorl
stc
jb
add
add
push
dec
add
nop
jmp
add
loope
add
stc
jb
das
inc
adc
int
popa
and
fiadds
subb
incl
xlat
mov
add
jb
cmp
mov
xchg
ret
popf
mov
push
stc
jb
add
xchg
jg
add
sar
inc
add
aad
int
jnp
nop
jmp
add
data16
add
mov
jne
stc
jb
add
add
mov
stc
jb
add
test
add
nop
jmp
mov
movsb
jg
add
stos
mov
stc
jb
add
dec
push
nop
jmp
je
inc
mov
jg
out
aaa
or
sti
nop
jmp
jae
add
add
add
movb
mov
nop
jmp
cmp
inc
lods
cltd
stos
nop
jmp
add
cmp
stos
negl
cmp
stc
jb
add
add
add
mov
stc
jb
add
mov
andb
decl
int
add
push
notb
lea
nop
jmp
add
add
lods
cld
cmp
add
add
stc
jb
test
inc
loope
mov
stc
jb
testb
add
sub
jb
mov
add
add
add
add
push
xor
mov
pminub
ljmp
add
add
add
enter
loope
stc
jb
test
leave
jne
stc
jb
add
sbb
stc
jb
add
mov
mov
stc
jb
add
and
mov
inc
add
call
incl
add
add
pop
add
nop
jmp
mov
add
add
les
jae
mov
stc
jb
mov
add
popa
add
jb
stos
data16
inc
pop
xor
xor
push
inc
add
add
add
rep
push
mov
xchg
ret
les
mov
cmp
stc
jb
stos
add
stos
into
popa
stc
jb
stos
add
xor
jb
je
jae
dec
add
or
push
mov
xchg
ret
add
add
addb
addb
mov
stc
jb
mov
add
add
dec
push
mov
add
add
gs
fidivrl
pop
adc
add
je
add
add
mov
rolb
xor
fs
sbb
movsb
addr16
fwait
push
mov
jge
mov
or
mov
cmp
add
clc
imul
popa
add
aam
mov
add
mov
js
inc
add
inc
add
test
or
sub
adc
push
ret
add
sahf
je
sbb
mov
inc
add
mov
ja
add
and
test
jp
xlat
push
add
mov
xor
add
add
das
mov
cltd
loope
inc
add
mov
outsl
jle
add
ljmp
add
mov
scas
out
inc
add
sbb
sbb
dec
jns
add
mov
aaa
xchg
cmpsl
cld
in
mov
cmp
inc
add
sub
add
inc
add
add
sub
insl
mov
add
ds
cwtl
les
push
scas
sbb
mov
repz
add
push
pop
out
mov
mov
add
outsl
xchg
add
mov
je
push
movsl
sub
jmp
sti
movsb
js
bound
addb
dec
iret
and
xchg
ss
add
js
add
jle
in
inc
add
add
fimuls
cwtl
cmp
jne
pushf
dec
repz
xlat
add
add
jo
jecxz
xchg
ds
stc
mov
je
inc
add
jns
push
xchg
jae
repz
addl
add
push
lahf
lahf
lcall
add
add
push
add
and
adc
movsl
pop
sub
add
aam
add
mov
add
das
mov
add
pop
cld
outsl
xor
cmp
bound
lret
add
push
fsts
xor
loope
jmp
add
idivl
aad
jmp
push
add
fwait
aam
mov
fcom
mov
test
push
ja
dec
xchg
xchg
add
dec
cmp
arpl
jecxz
mov
call
dec
xchg
mov
loope
add
inc
add
les
loope
add
inc
add
addr16
mov
jge
mov
push
dec
jnp
add
pop
mov
jp
jge
mov
dec
xchg
addb
cmp
mov
push
hlt
mov
add
or
dec
xor
cli
in
inc
add
add
push
adc
xchg
scas
fs
fst
pop
lret
and
enter
ljmp
das
inc
add
adc
test
loop
adc
adc
roll
jle
pop
in
add
repnz
lods
jbe
add
cmpsb
jo
inc
add
repnz
add
and
mov
mov
sbb
hlt
push
push
pusha
add
add
insl
jge
push
jle
outsb
xor
addl
loope
inc
add
jecxz
leave
cmpsb
cmpsl
push
roll
mov
xchg
adc
mov
loop
and
movsl
pop
lock
sub
enter
add
jne
mov
push
dec
clc
stos
xchg
and
cmpsl
sbb
add
add
nop
ja
push
push
pop
repnz
xor
sbb
jns
add
or
repz
inc
add
lcall
cltd
adc
sahf
and
aaa
jecxz
cli
pop
je
ljmp
arpl
add
or
hlt
stos
sub
js
lret
sbb
addb
push
inc
add
into
xor
add
add
xchg
shr
in
imul
cmc
fnstenv
sub
gs
xchg
rorb
add
mov
clc
jbe
lds
bound
xor
or
movl
flds
popa
add
imul
xchg
cwtl
hlt
je
sbb
pushf
es
inc
add
and
lret
iret
add
pop
enter
add
fwait
bound
imull
add
jecxz
jae
dec
test
aam
cmpsb
data16
xor
mov
sub
fwait
dec
pop
testl
outsb
sti
roll
mov
add
icebp
mov
push
cmp
lods
add
rorb
xchg
jnp
lea
pop
jnp
lock
mov
ret
pop
mov
call
mov
int
repnz
dec
repz
ds
sbb
xchg
lret
mov
and
out
mov
add
mov
nop
adc
push
cmp
pop
fwait
pushf
push
mov
add
scas
add
or
pop
add
cmp
lret
push
outsl
pop
add
roll
imul
sub
add
xor
add
jnp
jno
add
jno
push
or
xchg
dec
mov
mov
stos
addb
pop
sbb
dec
mov
push
jno
idivb
add
bnd
jecxz
sbb
jae
jae
pop
filds
mov
leave
jecxz
add
pop
mov
gs
arpl
lret
add
test
ss
aad
add
pop
add
xor
daa
mov
jns
add
add
push
cmp
xor
sub
add
pusha
add
xchg
addb
and
data16
mov
add
dec
ret
fs
add
fimull
iret
mov
test
addb
pop
adc
lea
push
cmp
cld
bound
jle
std
pop
mov
insb
adc
xchg
pop
jbe
add
movsb
inc
add
add
or
aam
in
and
scas
or
xchg
adc
pop
repz
dec
shll
popa
add
adc
roll
shrl
ss
push
or
int
inc
add
xchg
adc
adc
mov
add
pop
mov
xor
mov
xchg
add
test
and
or
add
jecxz
add
sbb
cwtl
addr16
stos
mov
jecxz
add
jmp
leave
xchg
pop
jno
cmp
lods
int
in
adc
mov
jge
jne
cmp
cmpsl
fadd
add
scas
arpl
cli
test
xlat
outsb
out
addb
rclb
sub
or
arpl
dec
or
lahf
icebp
sbb
mov
adc
jo
cmp
scas
test
and
add
add
sbb
mov
sti
push
addr16
mov
sbb
insl
clc
cmp
rorb
mov
mov
and
add
lea
add
addb
mov
pop
add
add
add
inc
add
xor
jge
sbb
bound
push
push
add
jp
cmp
mov
inc
add
sub
mov
dec
xchg
scas
dec
mov
add
lahf
xchg
sub
xchg
icebp
push
pop
sub
popa
add
push
loop
pop
add
les
fcomps
lret
int3
ret
add
mov
add
jnp
sbb
movsw
cld
jge
xor
repnz
mov
add
xchg
mov
push
in
mov
sti
mov
add
add
add
testl
pop
shll
mov
icebp
mov
mov
adc
test
pop
pop
sbb
fs
add
xor
add
push
cmc
dec
mov
nop
cwtl
inc
add
add
clc
inc
add
cld
jbe
pop
fs
scas
dec
enter
dec
nop
lahf
add
ljmp
pop
ljmp
js
add
popa
add
jmp
out
hlt
and
push
cmpsb
xlat
xchg
mov
cltd
aas
shll
into
les
dec
dec
cld
movsl
cvttps2pi
xor
add
lret
popa
add
dec
sub
mov
add
xchg
sub
push
dec
fcom
mov
inc
add
and
add
fistpll
add
sbb
push
imul
enter
jmp
adc
add
add
add
in
mov
test
je
push
fimuls
lods
mov
push
dec
lock
add
push
mov
add
pop
cs
sbb
popa
add
add
jo
sarb
add
ret
jo
lret
ja
test
enter
jge
movb
repnz
aad
in
xchg
cli
jmp
or
sbb
sbb
roll
insb
fs
je
ret
mov
jo
test
add
int3
loopne
call
popl
sbb
cmc
push
xor
mov
or
add
insb
add
mov
sub
ds
push
in
cmp
mov
add
or
jg
aam
loope
in
and
mov
sub
in
testb
cld
mov
sbb
movb
adc
add
or
sub
fwait
adc
mov
jno
xor
add
xchg
sub
push
jne
test
add
lret
xchg
adc
repnz
jp
adc
testl
add
mov
add
mov
in
adc
xchg
cmp
add
jmp
fsubrl
icebp
xchg
call
pop
adc
outsl
xchg
out
add
mov
aas
dec
mov
add
add
lea
cmpsb
lahf
popa
add
add
push
addb
inc
add
out
testl
das
ds
xchg
jg
enter
add
mov
lods
imul
inc
add
clc
movsb
xor
jl
add
addl
cltd
lahf
js
scas
cmpsl
jo
cmp
js
adc
fidivl
mov
add
and
xor
adc
inc
add
add
cmpsl
in
jno
insb
fistl
inc
add
int3
add
pop
sahf
jmp
add
lahf
pop
enter
ret
cwtl
jnp
inc
add
add
cmc
leave
mov
mov
dec
loopne
hlt
or
fcomps
mov
scas
xchg
sbb
jge
xor
in
test
add
jns
add
xor
inc
add
mov
add
js
jmp
sbb
xchg
repnz
jp
loop
xchg
push
push
sbb
notl
test
sti
lods
and
mov
xor
and
add
mov
add
lret
das
outsb
test
pop
xchg
and
mov
add
xor
lds
mov
add
stos
add
sbb
cmpsl
mov
jg
xor
lret
stc
addl
sbb
add
jl
ret
or
fsubl
add
dec
decl
or
xchg
stc
inc
add
rolb
add
loopne
add
cmp
add
pushf
mov
adc
cmp
sbb
xchg
jns
sahf
and
out
xchg
xchg
jne
push
mov
out
xlat
movb
scas
add
scas
sti
pop
sbb
shlb
fstl
inc
add
inc
add
inc
add
mov
dec
inc
add
jg
pop
icebp
dec
jge
mov
mov
jae
mov
lods
repz
cltd
aaa
mov
mov
les
in
jno
adc
cmp
pushf
arpl
in
add
add
add
add
jp
pop
or
xchg
mov
fnsave
es
xchg
sub
mov
ret
add
add
fldt
mov
es
mov
sub
or
mov
xor
addw
pop
inc
add
int
cltd
lds
mov
xor
cld
jecxz
mov
add
dec
dec
fldt
add
mov
in
insl
cltd
xor
insl
imul
into
scas
jp
fsubrs
add
ror
push
push
sarl
mov
in
dec
addb
dec
icebp
repz
push
mov
mov
cmpsl
push
fistl
add
mov
push
fildl
jmp
lahf
pop
je
sub
hlt
mov
sbb
add
push
pop
mov
sub
add
cmp
add
lahf
imul
and
in
sahf
jno
add
add
inc
add
sbb
pop
addr16
fildl
lret
mov
mov
xor
lret
ficomps
push
sti
ja
aas
pop
push
add
inc
add
or
in
cmpsl
inc
add
pop
loopne
mov
imul
scas
and
mov
sti
scas
addl
jnp
pop
cld
xchg
fisttpl
push
scas
clc
addb
jmp
icebp
add
loopne
icebp
or
pusha
add
mov
push
cli
aaa
js
add
xchg
test
fcoms
cwtl
adc
addb
add
into
sbb
addl
sbb
sub
cltd
jne
sti
test
mov
hlt
or
fiadds
add
mov
dec
add
imul
pushl
cs
push
add
dec
xlat
cli
rolb
fs
mov
loope
repz
pop
out
icebp
cmp
insb
jb
addb
fptan
daa
outsb
and
das
cmp
and
cmp
cltd
or
add
fs
arpl
cmp
push
adc
add
add
jmp
or
add
dec
mov
xchg
pusha
add
iret
iret
jo
mov
dec
jp
add
dec
mov
add
sub
xchg
add
stos
fdivl
fcompl
xlat
xor
and
nop
jbe
mov
jo
adc
adc
mov
jp
adc
fsubr
stos
push
jo
add
enter
dec
lret
mov
rcll
xor
movb
cwtl
pop
fwait
jp
pop
mov
add
adc
rolb
add
or
daa
push
leave
mov
sub
add
xchg
dec
loop
loope
xchg
mov
mov
sub
mov
mov
popf
ja
cmp
pusha
add
lea
add
cmp
lods
xchg
ja
mov
in
xor
scas
iret
addr16
add
push
add
or
mov
bound
mov
ds
ja
cmpsl
aas
dec
jae
mov
and
or
add
mov
jmp
add
mov
add
add
iret
or
and
mov
xor
xchg
inc
add
push
add
loopne
or
es
addb
add
shr
rcrl
lcall
ret
add
stos
mov
push
and
fwait
in
xchg
push
leave
xor
dec
aad
inc
add
add
mov
lods
nop
adc
mov
lock
lret
test
and
add
jbe
add
and
mov
mov
push
dec
fisubs
sbb
xlat
inc
add
add
dec
mov
les
iret
mov
xor
or
stos
iret
xor
add
add
movl
rcrb
in
setno
add
sahf
bound
dec
into
dec
lret
push
add
out
xchg
pop
xchg
adc
pop
add
add
movsl
pop
jo
xchg
movl
xor
xchg
xor
loopne
dec
mov
aaa
outsl
js
sub
cmc
insl
pop
mov
add
add
rcrl
gs
repnz
dec
bound
dec
and
jl
cwtl
mov
push
or
cmp
add
stos
and
js
call
jne
xchg
dec
add
ret
or
negb
add
addl
add
sbb
nop
mov
test
add
adc
mov
mov
sahf
mov
test
scas
dec
sbb
mov
jno
sub
add
movsb
push
movsl
shrb
pop
mov
add
cmpsl
clc
out
add
pop
inc
add
add
mov
mov
add
dec
jo
xor
xchg
insl
mov
or
adc
fisttpll
les
mov
add
arpl
dec
jmp
movsb
aaa
sbb
add
mov
iret
call
mov
pop
push
mov
sbb
pop
test
push
lea
mov
out
scas
mov
mov
add
jmp
push
gs
ja
scas
cld
mov
std
mov
cltd
inc
add
daa
mov
nop
in
jb
aaa
bound
pop
xchg
lcall
and
push
lret
or
test
dec
add
in
and
push
add
faddl
sub
popa
add
loop
cmc
ljmp
stos
in
pop
push
sbb
cmp
add
mov
xor
jne
add
cmp
repz
arpl
in
mov
and
xchg
jns
icebp
jae
add
add
sbb
dec
pop
add
add
and
push
xchg
rcrl
icebp
xchg
inc
add
popl
add
add
push
inc
add
and
or
insl
clc
sbb
clc
adc
imul
xchg
xor
loop
mov
ds
loopne
cld
lcall
negb
cwtl
xlat
out
add
dec
sbb
and
jno
add
enter
idivl
jmp
mov
cmp
jnp
mov
add
add
fwait
inc
add
pop
fs
out
or
leave
std
incb
add
add
xchg
mov
mov
movsb
lret
iret
jmp
and
cmp
lret
cmp
lahf
xchg
sbb
xchg
add
bswap
loop
sbb
sub
inc
add
add
add
cmc
sbb
lahf
mov
mov
in
in
out
add
push
add
inc
add
leave
and
std
jae
jno
add
icebp
loop
mov
jnp
les
das
inc
add
jl
push
add
test
xchg
rolb
test
outsl
inc
add
add
sub
pop
add
add
pop
cmp
aam
cmp
push
add
pop
les
test
xor
imul
mov
add
dec
sete
sbb
add
cld
test
das
jl
push
add
repz
out
add
fcomi
inc
add
lea
mov
jb
dec
pop
int3
mov
int3
sbb
sub
popf
jb
pop
add
icebp
xchg
pop
scas
sbb
inc
add
add
add
daa
pusha
add
es
mov
inc
add
lcall
nop
dec
mov
xor
mov
sbb
sub
lods
popa
add
and
cmp
pop
add
fwait
xor
insb
lret
cld
insl
lahf
mov
dec
popf
xchg
pop
add
lds
je
add
lea
dec
pop
sar
xchg
or
mov
fisttps
int
das
sbb
lods
test
mov
popa
add
mov
cwtl
and
addl
or
addb
addl
sub
push
add
add
es
in
add
addl
add
and
dec
mov
je
les
gs
jb
add
or
fnstenv
fs
or
decl
dec
or
dec
mov
add
int
add
jp
jne
addl
sbb
mov
or
lahf
xchg
sbb
adc
fcomip
inc
add
gs
add
push
stos
add
pop
pop
sbb
sbb
add
scas
pop
nop
jmp
pop
lret
or
popa
add
cmp
sahf
addr16
xor
aam
push
call
xor
pop
add
mov
and
mov
scas
sahf
xchg
jno
add
lds
ret
jae
cwtl
push
sbb
ss
add
sub
pop
add
jl
dec
cmc
jge
cmp
stos
imul
ljmp
push
or
roll
fwait
add
pop
add
and
popa
add
xor
dec
push
imulb
fcomps
das
in
cmp
adc
mov
add
out
imul
ljmp
add
stos
xchg
xchg
scas
pop
lahf
testb
push
xchg
repz
xor
mov
clc
dec
cmpsl
movl
push
nop
scas
insl
sub
stos
or
outsb
push
add
pop
js
lds
stc
test
in
addb
xchg
xchg
aas
or
cmp
lret
ret
mov
add
dec
mov
pop
in
addb
arpl
nop
mov
scas
ret
push
and
mov
jno
cmp
sub
addr16
pop
lret
inc
add
add
jmp
addl
cli
out
repnz
cmc
pusha
add
push
dec
js
add
mov
mov
xlat
int
add
mov
enter
sub
inc
add
fnstsw
inc
add
xlat
mov
mov
cwtl
ret
add
fistl
int
xlat
and
inc
add
add
addb
and
mov
xchg
xchg
loopne
std
mul
mov
inc
add
inc
add
push
jl
add
lods
in
cmp
mov
jecxz
iret
aad
lods
sbb
jg
push
lods
mov
inc
add
add
inc
add
outsb
add
push
jmp
leave
and
adc
lods
ret
ret
add
aad
add
test
sub
mov
ljmp
and
pop
inc
add
dec
es
movsl
inc
add
es
out
jb
add
lahf
add
xchg
ficoml
xchg
test
clc
adc
test
xchg
into
loopne
jp
mov
addl
fdivp
adc
stc
sar
cmp
sub
sub
sub
bound
pop
adc
dec
clts
add
mov
ds
and
dec
addb
add
add
fs
roll
add
bound
notl
imul
stos
ss
adc
enter
in
dec
sub
add
inc
add
arpl
push
stos
jb
ds
xor
dec
cmp
cmpsb
lock
sbb
pop
add
sub
roll
loopne
add
imul
pushf
lret
pusha
add
cltd
adc
test
pop
xor
lock
inc
add
mov
out
ficomps
pop
xchg
cmp
add
mov
lret
add
fistpll
sahf
sbb
add
stos
aam
xchg
pop
cli
cmp
add
add
in
add
cmp
xor
fxch
adc
out
fcoml
dec
pop
lds
daa
adc
pop
push
inc
add
add
movsl
push
in
aas
js
pop
add
mov
rorl
dec
popf
mov
test
add
test
add
cmp
movsl
lahf
xor
xor
ds
dec
mov
push
mov
add
push
les
lahf
push
pushf
pop
cli
pusha
add
or
sub
ja
arpl
mov
xchg
mov
in
mov
sub
fisttpll
cmpsl
xor
in
loopne
inc
add
pop
add
jecxz,pn
lret
movl
aaa
xlat
jecxz
add
adc
pop
lea
add
mov
and
aad
and
push
and
xor
hlt
xor
iret
lahf
test
cli
pop
push
add
cld
mov
movsl
imul
adc
add
aad
scas
adc
jl
xchg
pop
xor
mov
mov
xlat
bound
mov
add
mov
sub
inc
add
data16
or
sub
mov
mov
movsl
cmp
add
int
inc
add
mov
pusha
add
add
sub
ja
stos
sbb
add
mov
push
add
mov
push
and
xchg
inc
add
pxor
add
inc
add
daa
aad
add
inc
add
mov
jae
jnp
addl
out
mov
addl
push
add
pop
scas
xchg
cmp
or
roll
mov
cmp
xchg
or
add
loopne
call
jbe
jne
sub
jecxz
sub
cs
stc
add
xlat
sbb
arpl
lds
mov
call
dec
sbb
aas
pop
add
dec
mov
add
lods
cmp
mov
out
in
pop
test
add
mov
add
aam
add
pop
pop
std
and
pop
idivb
or
sub
inc
add
inc
add
shrl
add
cli
imul
add
sub
clc
dec
mov
or
push
jle
xchg
fstps
pop
incl
nop
add
jbe
mov
lods
insl
mov
dec
decb
cmpsl
out
and
add
repz
jmp
dec
inc
add
mov
lahf
clc
dec
sbb
out
fmull
es
mov
add
das
push
sub
insl
push
xchg
xchg
sbb
sub
stos
fisttps
aam
and
xlat
scas
int3
addl
cld
or
in
adc
int
push
cmp
inc
add
mov
sbb
test
bound
out
les
mov
add
dec
dec
cmc
or
sub
dec
ljmp
das
jns
fdiv
mov
pop
jl
push
imul
jne
mov
fdivs
push
imul
repz
push
repz
add
or
stc
movsl
and
inc
add
add
addl
int3
pop
popa
add
add
push
adc
inc
add
fcoms
push
inc
add
add
add
scas
fdivrl
and
jbe
fcomps
outsl
mov
sti
loop
xor
mov
filds
push
and
lahf
mov
jne
mov
rcl
xchg
fsubs
or
outsl
out
push
aam
xchg
rclb
imul
mov
stos
loopne
icebp
push
mov
push
add
lods
or
jecxz
imul
loop
push
jo
add
mov
xchg
dec
cmp
aad
and
pop
addl
lods
call
mov
and
jae
inc
add
addb
jmp
or
adc
add
pop
push
xlat
enter
fisttpll
sbb
pop
insl
out
scas
loopne
push
clc
push
add
or
dec
pop
cmc
mov
dec
jmp
add
outsl
push
test
jp
popf
cmp
add
pop
out
xor
mov
push
je
cli
jge
add
jl
xchg
in
inc
add
sbb
out
dec
push
in
js
jg
aam
jae
cmpsb
fxch
push
outsl
into
inc
add
add
push
xor
roll
add
adc
iret
jb
jo
sahf
icebp
adc
xchg
dec
fwait
sbb
add
mov
arpl
nop
cltd
xchg
dec
popa
add
and
jo
cmp
adc
mov
mov
xchg
mov
sahf
inc
add
sahf
stc
xor
addl
aaa
addb
stc
mov
push
inc
add
add
pop
addb
and
insl
xchg
shl
xchg
add
and
pop
inc
add
add
add
add
add
cli
jecxz
adc
aam
add
mov
divl
movb
movl
and
push
cmp
xchg
out
sbb
test
push
loopne,pt
add
push
lods
addl
add
lcall
pop
dec
cmp
pushl
test
add
addl
xor
inc
add
imul
fcomp
mov
movsl
add
add
movsb
adc
add
es
rolb
cmpsb
cwtl
leave
mov
out
pop
andnps
das
mov
aaa
mov
and
jg
sahf
pop
and
lds
jp
div
es
popa
add
jns
fbld
mov
mov
adc
jb
rolb
es
loopne
mov
add
repnz
out
mov
addb
daa
inc
add
stos
push
xchg
mov
bound
dec
jno
outsl
lgs
jns
add
roll
mov
or
jle
sarl
mov
add
pusha
add
add
sti
mov
and
sbb
imul
jecxz
hlt
push
add
pop
lds
cs
push
ret
add
xor
add
pop
mov
add
ret
call
xchg
xor
inc
add
add
test
mov
iret
or
cmp
push
mov
ljmp
push
ljmp
call
insl
jecxz
lcall
inc
add
sub
les
rcrb
mov
cltd
ret
add
add
inc
add
sbb
add
add
scas
lea
and
inc
add
movq
and
movsl
mov
add
push
pop
mov
rolb
fcmovnbe
es
and
hlt
and
jns
sub
mov
xchg
mov
and
add
mov
repnz
pop
gs
mov
stc
scas
pop
cmp
mov
lods
call
and
add
lods
cli
stos
aad
data16
add
sub
push
mov
cltd
pop
aas
popf
mov
add
pop
add
pop
jo
ss
daa
cmpsb
adc
out
ds
push
add
or
add
sbb
fucomp
rorl
add
jo
dec
xor
adc
pop
push
add
inc
add
add
mov
addb
lahf
je
push
sub
loope
xchg
sti
cld
push
insl
pop
movsl
mov
rorb
add
movsl
mov
lods
ret
cmp
add
cmp
mov
in
lods
jbe
stos
xchg
sub
mov
popa
add
lods
call
add
push
mov
add
push
out
outsb
or
das
popa
add
dec
cmpsl
out
cltd
dec
movsb
dec
or
ljmp
add
fdivs
rolb
add
jg
add
xchg
in
mov
or
add
mov
push
stos
fsts
stos
dec
xchg
mov
je
sbb
cli
xchg
push
pushf
incb
xchg
shr
jo
add
sub
cmp
add
xor
add
outsl
jg
sbb
loop
insl
xchg
outsl
or
mov
iret
pop
xor
ret
xchg
lret
push
into
stos
fildll
pop
loopne
push
shl
fsubrl
pop
cs
dec
movsb
pop
lds
rolb
mov
cmp
fcomps
cmpsb
cmp
mov
cld
movsl
or
in
xlat
mov
out
daa
ja
rorb
nop
lcall
xchg
dec
mov
push
cli
hlt
cs
push
lret
lret
adc
stos
shrl
lcall
mov
jnp
add
outsl
jb,pt
xchg
push
in
rcr
mov
fucomp
outsb
xor
mov
sbb
inc
add
add
add
or
lahf
leave
pop
lods
jecxz
add
or
add
xor
add
aaa
cwtl
push
jns
sbb
xor
push
pop
adc
add
jl
and
xlat
or
ds
test
lock
mov
aas
inc
add
cmp
xchg
in
outsl
inc
add
cmp
ret
add
nop
bound
das
pop
pop
hlt
mov
call
addl
scas
pop
cmp
aaa
es
xchg
mov
add
cltd
popa
add
mov
add
repnz
in
add
mov
add
cwtl
cmp
add
push
push
jecxz
test
pop
and
lret
stos
les
inc
add
lock
dec
stc
fildll
dec
jno
sub
add
add
hlt
and
mov
push
pop
cli
push
rcll
pop
mov
add
lea
add
and
xor
add
cmpsb
sbb
add
rolb
mov
hlt
fwait
cmp
stc
cmpsl
and
lahf
mov
mov
add
lods
stos
or
jp
stc
push
test
cmp
cmpsl
mov
add
inc
add
adc
sbb
push
js
add
push
xor
lahf
and
imul
popa
add
jp
fisttps
ret
xor
ja
jge
mov
out
pop
daa
jne
out
xchg
xchg
jnp
add
jo
daa
inc
add
add
add
mov
inc
add
ds
mov
add
cmpsl
out
movsl
lahf
sbb
inc
add
push
mov
lcall
push
jbe
jo
pusha
add
add
movsb
shrl
icebp
cmp
fs
and
test
add
sbb
jb
xchg
mov
sub
movb
fldenv
int3
sub
add
into
addr16
pushf
rcrb
test
test
movb
add
mov
repz
pop
out
xor
adc
dec
push
add
xchg
pop
enter
lds
sbb
pop
add
add
sahf
push
pop
and
sarb
lea
aas
insl
data16
mov
mov
repz
cmc
or
stos
lods
fwait
sbb
es
je
ffreep
add
sbb
add
inc
add
add
and
iret
mov
mov
mov
ss
mov
lret
jmp
add
push
xchg
cld
sbb
ret
add
test
mov
jo
rolb
shlb
add
pop
jecxz
and
ss
jo
add
push
push
filds
imul
add
ss
addl
pop
hlt
inc
add
addr16
add
test
test
testl
jbe
add
add
cmp
mov
push
loopne
test
dec
leave
inc
add
repnz
in
std
sbb
clc
mov
mov
movb
ss
int
pop
adc
mov
add
jp
push
popa
add
sub
data16
inc
add
pop
jge
mov
mov
push
sti
add
stos
add
test
push
and
sbb
in
adc
pop
lock
mov
jp
inc
add
add
mov
add
enter
inc
add
sub
cld
add
mov
pop
mov
imul
dec
xor
sub
add
scas
dec
cltd
adc
mov
cmp
xor
aad
xor
pop
add
cmp
dec
push
test
push
sbb
addb
cmp
push
and
xor
xor
add
add
js
xchg
cmpsb
jns
add
into
popf
jns
add
in
imul
cld
icebp
fdivl
xlat
ret
add
scas
ret
sarb
sub
mov
hlt
xchg
sub
pop
sub
movsl
mov
mov
or
adc
add
mov
imul
xor
in
jne
fcoml
and
lahf
pop
jg
ret
dec
fmull
add
add
push
xchg
loope
aaa
bound
cwtl
stos
cmp
dec
inc
add
and
nop
mov
pushf
adc
xchg
repz
cli
mov
xor
cs
call
sbb
add
add
add
push
cmp
add
pop
add
pop
jnp
or
fisubrs
dec
bound
push
addr16
pop
rcll
aaa
ret
add
and
loopne
mov
or
add
xchg
addl
test
je
add
add
cmp
imul
mov
sub
rcrb
dec
popf
pop
jns
testl
add
sti
fcmove
adc
push
add
sti
xor
stos
movsb
push
xchg
test
pop
mov
add
and
add
add
lahf
inc
add
jb
dec
push
push
sbb
nop
xor
xchg
mov
inc
add
lret
mov
lcall
mov
sahf
data16
sti
sub
sti
push
add
dec
and
iret
inc
add
lcall
mov
jecxz
xchg
sub
add
lods
and
jbe
es
mov
lods
mov
test
adc
lods
ret
add
push
add
add
xor
jl
iret
outsb
dec
xor
aam
nop
and
lcall
add
jne
add
mov
xor
mov
out
fucomp
loop
std
mov
add
pushf
add
xchg
and
cmpsl
fdivrs
leave
cs
std
out
add
pop
add
mov
and
xchg
adc
lds
movsl
ja
add
and
inc
add
aaa
pop
and
add
push
or
push
cmp
jbe
xchg
div
mov
add
pop
add
lret
mov
mov
movl
add
add
dec
loop
xlat
rorb
and
mov
add
and
push
or
push
sub
mov
mov
mov
test
flds
pop
sti
movl
movl
repz
add
sbb
xchg
jl
sub
test
stc
adc
popf
addl
mov
call
add
xchg
stos
pusha
add
dec
les
into
push
mov
fildl
add
push
push
add
mov
in
daa
call
dec
sbb
adc
inc
add
inc
add
fdivrp
sbb
inc
add
leave
jne
mov
out
pop
ja
movb
add
push
jg
lea
add
in
fdivrs
fiaddl
inc
add
jge
add
rcrl
jg
xor
mov
insl
daa
das
fcomps
imul
fucomip
pusha
add
mov
mov
add
add
clc
xchg
not
rolb
push
inc
add
popf
mov
cltd
iret
jae
add
out
push
add
dec
inc
add
es
pushf
rcrl
adc
push
pop
jle
mov
xchg
xor
dec
mov
add
and
aad
rolb
add
cmp
add
add
add
cltd
jge
in
or
mov
cmc
insb
or
jo
add
xor
sti
rcll
dec
ret
add
out
out
cmp
push
jbe
and
adc
jmp
out
jbe
xchg
cmp
mov
fsubp
or
pop
jo
lahf
clc
leave
push
jecxz
pop
pusha
add
add
add
jb
sbb
add
cmpsb
xor
cmp
addl
and
std
push
add
push
xor
cmp
daa
filds
mov
ja
pop
xor
or
mov
icebp
sbb
or
sub
loopne
hlt
push
lods
lea
nop
xchg
mov
push
repz
mov
sbb
add
jns
popa
add
jp
insl
outsb
lahf
int
scas
test
add
add
mov
add
add
mov
cmpsb
pop
icebp
dec
sbb
and
push
add
adc
add
add
nop
mov
add
aam
mov
and
xor
mov
add
cwtl
sbb
add
inc
add
mov
pop
or
inc
add
clc
fs
add
test
pop
add
fidivrs
mov
sub
xchg
dec
movsl
hlt
dec
ja
add
pop
mov
nop
addb
adc
inc
add
test
xor
enter
push
jo
aaa
addl
addl
xlat
in
dec
pop
jnp
sbb
add
in
test
sahf
test
sahf
jne
aam
add
js
cli
mov
xor
add
cmp
mov
add
dec
mov
push
add
addl
loopne
movb
mov
add
add
getsec
movsb
hlt
jbe
jge
push
sub
xchg
cwtl
movsl
movsl
in
mov
add
mov
fnstsw
lret
dec
dec
int3
adc
sbb
aad
mov
mov
dec
push
xor
sbb
mov
mov
dec
pop
stos
mov
inc
add
enter
xchg
jge
add
cltd
in
fstp
xchg
cmpsb
ljmp
push
xchg
inc
add
add
jb
add
lods
or
int
scas
mov
add
add
add
add
add
sub
add
add
push
das
flds
add
jo
xor
xchg
jnp
inc
add
pop
data16
rcr
nop
jmp
mov
stos
mov
or
scas
movsb
pop
add
lea
movsb
jge
popa
add
mov
mov
dec
stc
sbb
scas
pop
adc
mov
je
sub
xchg
outsb
xor
add
lods
pop
int3
mov
inc
add
sbb
js
sub
xchg
stos
clc
push
gs
sbb
add
xchg
sbb
mov
lahf
pushf
mov
roll
add
sti
les
sub
hlt
push
add
cltd
mov
inc
add
add
add
ret
add
and
push
and
into
add
inc
add
xchg
sub
hlt
nopl
add
mov
add
push
leave
fnstcw
addr16
aas
sub
push
cmpsl
sti
ss
sbb
out
jbe
add
add
pop
add
lret
push
in
mov
or
mov
pavgw
or
add
mov
push
movb
aaa
aaa
or
mov
mov
jno
stos
shll
xor
addb
add
out
add
inc
add
add
lcall
sti
les
fidivrs
stc
test
out
mov
aas
xor
dec
xchg
out
bnd
xor
scas
dec
mov
add
or
sbb
arpl
dec
addb
mov
inc
add
xchg
hlt
xchg
loop
push
ds
out
mov
push
rolb
mov
loop
addb
stos
sbb
mov
aam
lods
jle
arpl
movsb
add
addr16
inc
add
mov
and
pop
in
rcrb
cmc
mov
aaa
lods
xchg
sub
add
adc
popf
dec
jno
jo
and
mov
mov
adc
enter
loopne
add
add
add
xchg
and
push
add
mov
inc
add
and
idivb
xchg
xchg
lods
sbb
adc
out
aam
lcall
mov
loope
xchg
inc
add
cwtl
or
mov
add
call
push
push
aas
movsb
xlat
push
add
pop
cmp
scas
lret
mov
xchg
xchg
sahf
insl
ss
and
cmpsb
fcomps
arpl
pop
out
inc
add
add
and
lock
adc
mov
add
and
loope
xor
adc
shl
outsb
xchg
arpl
ss
flds
inc
add
or
dec
dec
mov
add
insl
xchg
pop
add
inc
add
add
mov
lcall
cmp
cmp
jl
add
pop
cmp
inc
add
add
in
sbb
in
gs
adc
stos
xlat
ret
add
add
mov
mov
loop
add
dec
xlat
mov
inc
add
xor
stos
inc
add
jo
rclb
out
movl
add
xchg
icebp
xchg
or
xchg
cmp
out
out
push
jb
sub
aaa
rclb
fistpll
test
sub
mov
inc
add
ret
add
add
data16
lds
test
cld
ret
add
lahf
or
add
lcall
inc
add
loopne
push
sbb
jne
out
push
mov
add
pop
dec
jbe
fsubl
dec
clc
inc
add
mov
add
inc
add
popa
add
add
nop
and
jl
adc
add
inc
add
xchg
sbb
les
lods
hlt
inc
add
outsl
pop
mov
addb
sbb
xchg
xchg
scas
repnz
repnz
loop
call
add
fistpll
add
add
ror
stc
xor
lds
add
pop
push
dec
neg
sbb
add
test
pusha
add
loop
mov
add
pop
insb
or
add
xor
sti
test
add
push
data16
mov
addb
pusha
add
movl
dec
push
mov
mov
fs
mov
xchg
gs
movsb
mov
add
int
ret
add
pop
fs
outsb
push
js
mov
mov
sbb
imul
lods
mov
jbe
ret
add
loop
xor
jmp
mov
pusha
add
pop
dec
mov
addb
add
out
jns
mov
cmpsl
insl
inc
add
in
loop
add
ret
add
loope
bound
push
cmc
popa
add
and
or
adc
add
dec
imul
or
and
pusha
add
jb
roll
add
ret
lock
fsubl
ret
adc
push
pop
stos
fwait
and
mov
lds
rcr
in
popw
lds
sahf
dec
popf
push
dec
jns
call
and
scas
stos
jo
decb
fcmovu
hlt
pusha
add
xor
nop
cmpsl
pop
cmp
call
add
xchg
aaa
loope
cmpsl
pop
jle
mov
roll
xchg
jle
jmp
sarl
xchg
out
mov
add
mov
add
inc
add
cmp
sbb
fwait
lods
cmp
and
jl
add
add
addb
rorb
mov
loopne
out
cmpsb
pop
daa
push
cmp
imul
or
das
stos
shl
repnz
sahf
dec
int
add
ss
push
push
push
sbb
scas
test
negl
cwtl
mov
add
add
popf
int
push
mov
inc
add
test
inc
add
inc
add
cmp
add
movsb
addb
dec
add
and
mov
add
add
mov
stc
dec
mov
cmp
add
popa
add
in
sbb
das
xchg
dec
and
repz
jne
aad
shl
jge
adc
sub
and
les
popa
add
jle
or
cmp
jb
ja
mov
addl
adc
mov
addb
movb
loop
adc
lret
xchg
lods
push
aaa
mov
in
xor
pop
arpl
les
cld
or
roll
add
adc
xchg
inc
add
sbb
test
add
insl
xor
ret
xchg
mov
jl
int3
mov
add
aaa
jnp
out
insl
cltd
cmp
cmp
insb
cmp
add
xchg
ret
add
pop
pop
pop
daa
sbb
or
popa
add
sbb
mov
add
mov
std
popf
fdivp
jo
add
mov
jns
push
push
sbb
mov
add
add
out
pop
push
clc
ret
add
add
sub
fisubl
out
sbb
lods
jb
add
clc
mov
icebp
ja
sbb
cmpsb
cmp
jmp
xor
xor
aam
insb
ss
add
movsl
jnp
leave
and
pop
ljmp
cs
push
jne
fnsave
push
repnz
mov
xchg
push
fadds
add
imul
mov
jae
mov
repnz
add
push
ret
jnp
inc
add
mov
int
add
int3
arpl
insl
mov
jmp
adc
ss
xchg
and
add
sbb
rcrl
lods
roll
cmp
adc
sub
icebp
pop
adc
pop
loopne
add
jmp
add
or
mov
mov
push
cmp
cmp
push
jg
pop
or
push
adc
outsl
inc
add
ljmp
addl
dec
or
cmp
or
aad
std
outsb
lock
add
sub
loop
add
add
pusha
add
push
bound
or
mov
push
pop
jb
mov
popa
add
add
xor
add
pusha
add
lds
fwait
testb
ficoml
sub
push
add
jne
dec
leave
or
sbb
hlt
push
xchg
sub
lcall
jbe
dec
xchg
push
stc
mov
sub
mov
add
mov
dec
in
rclb
mov
add
add
sub
xor
loopne
or
inc
add
fcompl
add
outsl
xor
xchg
aas
adc
mov
mov
mov
push
add
mov
cmc
cmpsb
mov
xchg
mov
cmc
jae
mov
sub
pop
nop
das
out
les
sbb
pop
and
dec
mov
add
jnp
add
mov
add
inc
add
xor
pop
xor
jb
pop
jg
lret
and
mov
xor
pop
roll
add
inc
add
in
mov
jb
push
push
jmp
sub
ja
or
daa
std
dec
in
aam
sbb
dec
mov
add
icebp
fistl
pushl
nop
addl
loope
movsb
out
jno
add
sarb
xor
leave
in
push
movl
sub
jb
sbb
dec
push
iret
sub
sub
mov
add
out
sti
ljmp
lahf
cmp
xchg
inc
add
enter
jl
add
mov
ret
pop
aas
mov
jbe
test
xor
sbb
add
mov
push
int3
and
fisubrs
add
cmpsl
push
inc
add
mov
push
push
xchg
inc
add
sbb
adc
jge
inc
add
add
aas
stc
xchg
das
iret
jg
into
imul
addl
mov
loope
adc
js
mov
mov
push
lret
out
cli
ja
shlb
add
and
add
inc
add
add
sub
adc
xchg
jnp
arpl
cmp
add
jno
lret
adc
pop
repz
rclb
jp
addb
push
je
add
hlt
inc
add
jns
ss
mov
lret
sbb
and
jp
scas
sub
insl
int
jo
pusha
add
sub
add
pop
dec
repnz
in
in
std
int3
push
call
jb
rolb
lds
sub
add
add
add
pop
xchg
es
mov
in
mov
push
mov
xchg
xchg
mov
and
add
rcll
add
pop
cmp
jl
add
mov
add
fmuls
fisubrs
jecxz
movl
popa
add
add
add
push
mov
ret
add
sbb
xchg
xor
out
add
flds
cmp
call
fstl
addb
les
push
pop
cmc
mov
cmc
or
not
mov
lods
scas
hlt
les
or
cmp
addl
imul
daa
add
add
ret
add
ja
add
mov
sub
jmp
add
sub
push
xchg
mov
sub
add
add
mov
mov
addl
aaa
cmp
pop
js
mov
decb
add
adc
rcl
shlb
add
mov
sti
pop
or
mov
xor
cmp
movsl
jae
and
cmc
jecxz
push
push
mov
pop
xchg
mov
xchg
pop
push
mov
add
daa
sbb
addb
rolb
jge
and
daa
rcll
cwtl
adc
add
cli
or
xor
mov
lea
addl
out
les
push
pop
aam
lret
cmp
jle
rolb
mov
mov
dec
and
mov
push
dec
movl
sub
pop
push
mov
data16
out
add
add
or
push
aad
call
outsl
xchg
outsb
push
xor
inc
add
dec
out
sbb
mov
add
cmp
in
pop
jae
inc
add
add
popf
xchg
dec
sub
out
push
lcall
jno
in
add
rcrl
fdivl
mov
add
pop
daa
push
bound
xchg
popa
add
ror
idivl
mov
add
cmpsb
loopne
fisttpll
jbe
test
add
mov
mov
add
pop
icebp
mov
push
mov
sbb
sbb
add
mov
add
rorb
mov
mov
lret
sbb
sub
addr16
add
dec
mov
je
addb
cli
lock
pop
xchg
call
inc
add
popa
add
fnstenv
add
sarl
dec
jno
ret
add
nop
cmp
outsl
push
ds
sbb
and
mov
scas
pop
mull
pop
fildl
sub
cmp
addl
jns
or
adc
add
add
leave
cmovp
mov
loop
ret
mov
jb
add
add
dec
add
jnp
mov
cli
ret
push
pop
xchg
xchg
pop
scas
stos
lcall
push
es
add
add
add
push
lock
arpl
dec
pop
jne
in
push
jp
add
and
sub
stos
in
jns
idivl
mov
movsb
jae
pop
clc
inc
add
cmp
mov
add
add
and
pop
cmpsb
int3
loopne
add
add
mov
fisttps
adc
or
inc
add
add
test
mov
sbb
dec
xor
jae
add
or
inc
add
in
add
cltd
xchg
jnp
xchg
imul
dec
xchg
cwtl
je
mov
gs
jns
add
sub
xor
mov
js
ret
dec
insl
xor
insb
xchg
jecxz
add
arpl
inc
add
stc
jge
add
popf
loop
lea
mov
or
dec
xor
xchg
inc
add
push
stc
cs
cmpsl
push
cwtl
or
add
add
xchg
insl
jecxz
std
push
xlat
mov
mov
or
mov
add
sbb
inc
add
add
push
xor
addl
sbb
bound
add
adc
mov
add
gs
cmp
testl
aad
add
cmp
aas
mov
pop
inc
add
or
mov
push
add
add
jbe
loop
addl
out
add
add
test
les
adc
push
mov
add
fwait
daa
out
jo
jns
add
sub
rep
adc
es
daa
ja
int3
lock
add
jp,pn
add
sbb
out
lahf
push
add
inc
add
iret
lds
mov
roll
add
roll
add
add
lcall
repz
xchg
bound
mov
mov
test
adc
add
insl
fxch
mov
push
mov
add
mov
adc
jnp
and
pop
aad
pusha
add
hlt
mov
adc
add
add
xor
adc
cmp
push
arpl
jge
jge
add
les
jo
inc
add
sub
popf
sarb
fxch
dec
pop
jo
add
es
imul
stos
repnz
and
dec
push
xchg
pusha
add
add
icebp
dec
lret
push
mov
addl
add
loop
mov
inc
add
stos
add
testb
add
jg
or
xchg
addb
addb
add
lock
push
mov
add
lock
loop
xchg
or
mov
mov
pop
std
lock
roll
stos
cmpsb
jle
add
add
fnstenv
lcall
sub
test
pop
fistl
and
icebp
jmp
out
add
add
jmp
add
adc
pop
push
pop
add
cli
mov
mov
arpl
cmp
cmp
imul
fwait
cmp
add
pop
push
enter
pop
add
jle
cmpsl
daa
pop
pop
int3
push
mov
add
mov
adc
add
adc
add
add
mov
push
insb
cmpsw
pop
adc
mov
add
add
dec
lret
dec
xor
add
jbe
mov
xor
add
lcall
pop
jns
add
add
js
add
aas
test
push
je
dec
adc
add
inc
add
arpl
inc
add
xor
add
and
add
les
psubusw
xor
gs
cltd
negl
in
inc
add
inc
add
push
jo
add
out
dec
sbb
push
shlb
stos
dec
xchg
stc
scas
sub
pushf
bound
xchg
stos
icebp
inc
add
add
lret
add
rorl
sub
imul
jecxz
add
pop
sahf
fiadds
shl
imul
addl
addb
cmp
mov
lret
out
pop
dec
xchg
int
jle
add
xor
js
nop
lds
fs
outsl
and
inc
add
in
or
mov
push
cmc
nop
xor
fadds
fisubl
jo
add
add
lock
imul
add
push
push
test
push
lea
lahf
in
jb
movsl
mov
dec
and
add
ds
xchg
dec
loopne
fsub
es
aaa
cli
xchg
mov
pop
push
fisubrl
add
roll
mov
sbb
add
dec
push
inc
add
imul
xor
xor
leave
mov
fcompl
rcl
dec
shlb
jge
add
es
shlb
pop
pop
out
ljmp
aam
or
add
dec
leave
push
xor
fadds
repnz
mov
pusha
add
add
add
add
jno
and
loop
addb
or
cld
mov
sarl
icebp
fs
pushf
mov
add
sub
add
cmp
and
in
pushf
inc
add
and
add
das
or
jbe
xchg
popf
adc
pop
push
stos
mov
lea
imul
dec
xor
add
dec
test
fwait
sub
sub
jbe
pushf
sti
or
xchg
dec
test
call
call
pop
aaa
and
add
dec
push
add
repnz
out
xchg
loop
stos
xor
add
and
lock
add
dec
out
add
iret
push
mov
aam
fsubrl
imul
loope
pop
ret
add
aas
in
fcoml
jecxz
out
adc
xchg
out
xor
add
insl
jae
cltd
fs
add
mull
add
js
rorl
test
cmpsl
jp
add
mov
loop
or
jge
pop
add
adc
das
xchg
rclb
dec
rolb
stc
out
and
add
out
rdmsr
movl
xchg
push
adc
add
mov
pop
sbb
sahf
rcll
pop
mov
mov
add
insl
cmp
popa
add
xor
adc
addb
add
lret
cmpsb
jl
pop
mov
shl
sbb
add
fs
cmp
dec
mov
into
in
cmpsl
test
push
in
sbb
pop
jmp
filds
loop
mov
stc
popa
add
dec
push
cs
fcomps
icebp
inc
add
mov
int3
mov
cltd
adc
add
mov
add
add
xchg
xchg
jnp
add
jle
sahf
int3
int
rcll
dec
iret
data16
add
push
cmc
cld
xor
and
jnp
aaa
xchg
sbb
jmp
inc
add
pop
add
sbb
inc
add
sarl
sbb
sbb
add
add
in
icebp
xchg
add
rolb
int
lods
test
cli
sar
ficoms
add
push
xchg
shr
jecxz
cmp
ds
add
jb
outsb
jge
imul
pop
or
xor
repz
popa
add
adc
scas
mov
add
outsl
push
xchg
pop
and
mov
out
mov
dec
aas
push
fstpl
data16
add
sbb
lds
or
loope
movsl
mov
sbb
nop
mov
or
rolb
mov
imul
add
add
add
jo
sub
icebp
xor
pop
push
ja
cmp
aaa
push
lock
adc
add
fdivrp
pop
jne
add
add
mov
leave
test
inc
add
add
leave
cmc
mov
cmp
int3
outsb
fdivrl
add
inc
add
sub
shrb
popf
iret
mov
pushf
cmp
roll
add
add
idiv
sti
call
fs
rolb
sbb
add
push
dec
mov
jecxz
add
ret
add
gs
mov
enter
lds
push
int
dec
outsb
clc
sbb
std
sarb
dec
jo
pop
xor
addr16
int
jae
xchg
add
add
ds
stc
pusha
add
cli
lods
out
add
popf
stc
mov
sbb
pop
xor
add
cmpsb
xchg
icebp
les
mov
adc
add
fstl
add
xchg
and
cmp
imul
cli
sbb
add
cmp
jns
leave
jae
mov
mov
add
xor
jle
and
add
add
jmp
sub
xchg
dec
push
push
inc
add
add
sub
sub
jmp
add
add
ret
add
add
popf
or
add
cmp
add
jne
push
jne
jmp
js
jmp
inc
add
push
scas
cmp
inc
add
cmp
lahf
and
pop
mov
push
add
or
daa
cmc
add
mov
addl
das
adc
scas
add
bound
sub
push
add
mov
gs
mov
or
lds
int
and
aad
mov
push
mov
push
outsl
gs
mov
add
aam
sbb
add
xor
dec
cmp
dec
shll
test
jnp
addr16
pushl
xor
fdivr
es
xor
repz
jp
ljmp
add
bnd
add
xchg
cmpsb
addb
add
ja
cmp
sar
loop
std
pushf
movl
pushf
mov
lret
cmp
js
addl
add
mov
loope
adc
cmp
movsb
sahf
mov
rcrb
loopne
sbb
and
sub
mov
loopne
cltd
ficoms
sbb
mov
roll
pop
add
add
add
add
aad
aad
push
test
clc
lcall
mov
add
xchg
mov
inc
add
shrl
repnz
add
mov
ds
lahf
pop
in
sahf
xchg
mov
cmp
scas
lds
roll
int3
ja
insb
dec
and
jge
rol
add
add
insb
mov
rcrl
mov
pop
into
jmp
push
movb
roll
pop
add
add
xchg
inc
add
cltd
dec
add
mov
mov
adc
cmp
mov
jl
add
out
pop
les
iret
cli
dec
cld
push
jmp
popa
add
inc
add
js
add
add
pushf
jno
loop
mov
in
mov
add
add
addl
pop
mov
lahf
adc
pop
add
roll
add
addb
xchg
lods
and
mov
mov
mov
imul
add
add
sti
fwait
rcrl
aad
ljmp
add
daa
addl
and
cwtl
aas
add
sarb
aam
mov
in
jle
add
add
scas
mov
mov
out
adc
add
cmc
decb
loope
mov
add
inc
add
ss
icebp
sahf
movb
add
mov
sbb
and
push
add
rclb
mov
and
xchg
stc
mov
int3
cmp
fimull
sbb
xor
jbe
lret
mov
pop
cmc
mov
or
fisubrs
testb
lods
add
addb
jle
pop
test
or
jno,pt
pop
ret
add
add
out
add
shr
mov
jge
mov
xchg
mov
mov
xchg
stc
adc
mov
add
jnp
out
test
add
bound
lock
add
mov
jl
add
xor
add
jmp
add
add
push
add
jge
cmp
negl
add
sti
bsf
out
leave
lcall
or
pusha
add
add
add
sub
add
inc
add
dec
pop
push
add
jecxz
jo
or
jg
mov
sti
ret
mov
add
lahf
lods
xchg
dec
and
lea
rolb
shlb
mov
cmp
rcl
mov
aas
cli
xchg
addl
insb
daa
ss
xchg
pop
pop
mov
cmc
cli
outsb
xchg
out
xchg
outsb
xchg
sub
shlb
mov
fs
fistl
jnp
jo
push
mov
dec
xor
adc
in
psubq
add
xor
pop
push
ss
xlat
arpl
mov
outsl
xor
push
inc
add
push
sbb
addl
add
lret
mov
jg
sti
fsubrs
loope
mov
scas
push
sub
dec
xor
pop
push
add
js
pop
stos
lock
xlat
adc
sahf
pop
rol
add
movl
add
mov
rcrl
mov
stos
rcrl
xor
scas
mov
addl
pop
push
loopne
add
lods
xchg
lahf
rolb
jnp
fwait
mov
push
adc
add
push
add
pop
adc
mov
pop
or
insb
cmp
add
cld
xchg
add
arpl
add
add
inc
add
rcl
dec
xchg
addl
push
fmuls
pop
and
jbe
add
aas
sbb
add
sub
and
add
scas
sbb
mov
ja
push
mov
sub
cmp
and
mov
roll
push
jecxz
cltd
shrb
add
xchg
push
dec
sbb
add
sub
out
jecxz
xchg
loope
mov
dec
scas
loopne
mov
stos
xchg
mov
pop
jmp
push
loopne
stc
aad
inc
add
and
cmp
add
ret
sarl
popf
ljmp
xor
mov
add
jge
add
movsl
ret
add
adc
mov
pushw
or
add
and
pop
and
stc
dec
iret
outsb
aas
mov
loope
sbb
out
in
mov
in
add
arpl
and
dec
fistps
idivb
ret
in
add
pop
pop
lods
jns
rorb
sub
add
lret
xchg
jge
dec
and
jae
dec
mov
jnp
sbb
addr16
addb
dec
inc
add
cmpsl
mov
testl
mov
jne
test
sub
jl
ljmp
add
dec
fisttps
repz
xchg
pushf
popa
add
add
cmc
imul
adc
sub
add
pop
pop
add
in
push
add
out
jno
add
pop
dec
ret
add
jae
clc
and
pusha
add
in
push
lahf
cmp
and
dec
addb
add
dec
arpl
or
mov
add
jecxz
add
rcrb
roll
les
and
outsb
pop
xor
test
in
es
jns
add
add
addl
inc
add
push
jmp
shlb
in
mov
xor
test
push
jmp
mov
cmpsl
fwait
push
jg
pushf
stc
test
loop
scas
sarl
pop
inc
add
lahf
jbe
aaa
aam
mov
mov
mov
cli
jecxz
add
sub
add
push
fsubr
xlat
into
adc
incb
add
pop
or
cmp
mov
hlt
fcoml
sti
stos
test
add
pop
push
insb
mov
jecxz
mov
lahf
mov
lret
mov
mov
xchg
clc
std
inc
add
lahf
gs
sub
nop
lock
test
add
xor
inc
add
pop
mov
add
movsb
cmp
add
dec
xor
lods
and
jmp
jo
es
add
cmpsb
sbb
xchg
aad
pushf
mov
lcall
fwait
add
push
addb
sub
xor
and
data16
or
fnstsw
cwtl
out
adc
push
movsb
rcll
dec
lds
mov
pop
pop
dec
pop
cli
or
mov
sbb
lret
cmpsb
mov
dec
pop
push
and
or
sub
pop
add
cmpsl
mov
lds
push
mov
into
test
fldcw
xchg
outsb
add
sub
ds
test
stc
ja
xchg
push
fnstsw
jl
add
push
imul
mov
add
cmpsb
mov
psrad
add
and
cmp
fidivrs
rolb
mov
inc
add
mov
push
mov
add
add
imul
xchg
sbb
dec
cltd
lahf
cmp
mov
add
int3
nop
or
cmp
and
sbb
aaa
sbb
out
jl
add
fadds
xchg
cmp
add
inc
add
sbb
push
and
in
sub
or
push
addb
adc
cmp
add
add
out
and
mov
icebp
adc
lcall
add
sub
mov
fs
xchg
inc
add
in
fildll
pop
or
inc
add
or
clc
xchg
lea
out
mov
out
xchg
hlt
add
xor
push
inc
add
js
aas
insb
xchg
lods
sbb
add
js
jge
lahf
xchg
and
ret
add
enter
out
std
ss
mov
in
in
mov
nop
pop
mov
mov
addb
inc
add
and
cmp
pushl
mov
add
int
sbb
and
push
adc
push
sub
icebp
cmp
mov
xchg
xor
mov
add
enter
add
loop
testl
add
add
loope
fs
leave
insl
gs
pop
scas
imul
xchg
es
xor
mov
pop
int
push
mov
not
lea
sub
push
stc
js
addl
popa
add
scas
add
mov
jp
nop
cmp
or
cmp
fidivrs
lcall
or
insl
and
cmpsb
stos
adc
cmp
add
adc
add
rolb
jns
mov
mov
ret
test
aam
jb
jo
clc
xchg
das
dec
or
pop
mov
insb
inc
add
add
outsb
sub
cltd
pop
repz
clc
outsb
scas
repz
loop
jne
pop
xchg
popa
add
dec
push
xor
test
roll
add
xchg
loop
jns
out
inc
add
in
cmp
jbe
xchg
and
add
outsl
or
int3
sbb
adc
inc
add
pop
aas
cmp
sub
add
mov
mov
xchg
nop
ss
xor
add
adc
repz
ret
pop
roll
push
mov
sub
repnz
dec
xlat
pop
lea
add
dec
popa
add
mov
jno
leave
inc
add
addb
arpl
insl
sahf
pop
icebp
scas
out
repz
lods
xchg
repz
mov
add
pop
ss
push
mov
push
mov
dec
std
xchg
addb
stmxcsr
add
enter
test
data16
sbb
rolb
or
scas
imul
xor
mov
fwait
mov
mov
int
mov
jo
out
fnstenv
mov
ret
add
sub
cli
xor
mov
idivl
bound
jmp
add
repnz
push
add
add
cmpsb
cmp
and
xchg
push
test
lods
fistpll
add
pop
int3
sti
inc
add
xor
in
adc
add
cmp
movsl
mov
mov
les
aas
or
sbb
hlt
fldcw
add
add
jnp
add
ja
push
pop
imulb
rcrl
pop
dec
movl
in
dec
std
jb,pt
xlat
loopne
add
xor
xchg
cmp
pusha
add
add
test
add
in
xchg
push
xor
pop
jg
addr16
addb
and
imul
push
cmpsb
lea
add
dec
jne
mov
or
dec
test
cmp
xchg
mov
pop
push
or
push
dec
pop
mov
aaa
mov
je
jno
add
cmp
xlat
ljmp
lret
cmp
jo
mov
imul
fisttpll
jmp
add
scas
mov
add
imul
shlb
add
push
xchg
cld
fmulp
jno
addb
push
mov
push
push
aam
gs
or
jnp
inc
add
inc
add
fwait
js
add
pop
out
mov
add
cmp
and
stc
mov
mov
nop
mov
xchg
out
mov
roll
addr16
or
sbb
loope
add
mov
xor
les
cld
sub
sub
xlat
mov
add
flds
cwtl
add
push
adc
pop
cmp
push
arpl
imul
xchg
out
mov
add
je
js
rcr
xor
cltd
xchg
in
cmp
iret
xor
push
cmp
pop
xchg
je
fnstcw
xchg
arpl
repnz
rorl
loop
cmpsl
ret
mov
add
fwait
jmp
outsb
jle
pushl
icebp
cmp
in
shl
loope
aam
lcall
dec
adc
ss
mov
add
push
sub
addb
jns
in
jno
add
add
popa
add
aam
inc
add
push
lods
or
jns
jmp
jae
add
ja
jmp
sti
xchg
mull
add
jg
inc
add
jle
pop
xchg
repz
jmp
jb
hlt
sub
mov
inc
add
ss
push
add
add
add
add
cmp
push
enter
cmp
int3
gs
lds
addb
ljmp
dec
inc
add
cmpsl
fidivs
int3
mov
mov
push
out
add
sbb
add
pop
add
or
in
repnz
add
add
in
add
fs
push
jp
ret
jge
mov
addl
je
out
push
repnz
les
push
iret
inc
add
add
movsb
int3
dec
push
dec
cmc
enter
sti
cmp
cli
lods
in
daa
pop
jl
ljmp
add
push
add
add
sbb
rcr
clc
and
iret
xor
mov
mov
or
scas
idivl
aam
ret
out
cld
sub
add
sub
aaa
sub
cs
pop
out
pop
into
adc
filds
add
add
push
or
leave
and
mov
cli
sbb
filds
add
jo
add
push
push
xor
inc
add
sub
sub
add
add
add
aas
movsl
in
stos
lock
jo
add
cmc
push
xchg
jmp
mov
inc
add
les
lods
sbb
add
dec
sub
add
push
pop
hlt
js
bound
inc
add
add
roll
push
jmp
xchg
lret
mov
dec
lock
jmp
or
mov
mov
add
mov
add
or
punpcklwd
stc
cmp
add
dec
jbe
in
stc
hlt
addb
add
add
add
addl
inc
add
addb
pop
jg
xchg
movsl
dec
or
xor
imul
out
cld
add
push
lcall
push
movl
addb
fs
xchg
movl
add
add
imul
dec
gs
mov
adc
das
lcall
sahf
xchg
xchg
lcall
cmpsb
leave
mov
mov
sub
adc
add
pop
add
and
mov
sbb
push
add
out
cmpsl
cld
mov
fcomi
jmp
insb
stos
rorl
clc
xchg
inc
add
dec
cmp
int
bswap
add
into
xchg
push
jmp
dec
fs
movl
test
sub
popa
add
dec
add
jns
daa
fldt
push
dec
or
add
add
push
add
mov
jecxz
loop
scas
insl
inc
add
add
inc
add
dec
mov
add
inc
add
test
stc
xchg
dec
movb
movl
add
pop
leave
mov
roll
pop
mov
add
cmp
fs
adc
ds
lcall
cmp
add
add
ret
add
mov
jns
jg
popf
fcoml
test
repz
sub
stc
cmpsl
sub
add
scas
nop
adc
jne
pushf
add
xchg
xor
js
mov
cmpsb
jae
dec
xchg
pop
or
call
out
adc
mov
xchg
dec
or
lea
ds
test
addr16
sbb
out
add
mov
ja
add
xchg
sub
add
add
aaa
addb
fnop
xor
mov
out
adc
and
out
bound
jo
jb
push
mov
in
pushf
rorb
xchg
popa
add
xor
fadd
add
push
add
sub
sub
int
fmuls
xchg
ja
add
and
popf
fwait
inc
add
jge
add
add
sub
and
mov
and
cmp
test
inc
add
cmp
sahf
lret
stc
movl
stos
pop
stos
cmp
les
daa
mov
loop
push
lods
lods
ds
add
and
add
add
inc
add
out
and
sub
xchg
sub
movl
popa
add
imul
dec
mov
mov
jae
add
imul
pop
rcrl
bound
test
ss
mov
mov
jb
fs
addr16
add
jne
or
xor
cmpsb
ret
addl
jnp,pn
fwait
mov
stos
stos
lret
pop
adc
bound
jmp
sbb
and
mov
in
lods
xchg
rolb
pop
xor
push
repnz
add
addl
xor
cmp
into
roll
cmp
cmp
icebp
jo
mov
addb
jno
dec
jecxz
jo
inc
add
or
ret
inc
add
imul
add
stos
jo
lcall
fsubp
in
es
and
or
add
mov
push
lods
cmp
or
cmp
cwtl
out
movl
mov
loop
add
xchg
push
int3
adc
loope
ljmp
std
in
inc
add
add
rcll
inc
add
loope
repnz
ret
out
lds
jmp
loope
and
adc
sub
cmp
lods
inc
add
jns
cmp
icebp
mov
dec
imul
outsl
pop
mov
aaa
pop
arpl
ja
mov
mov
xor
push
and
pop
lcall
or
imul
add
cli
les
lods
cmp
sub
icebp
sub
inc
add
mov
jne
or
data16
sahf
in
imul
add
int
mov
add
roll
mov
push
push
xlat
jno
and
and
ret
add
cmp
jecxz
add
pop
mov
aam
data16
add
add
movb
cmp
jb
mov
jl
loop
xor
push
fiaddl
mov
test
adc
pushl
inc
add
mov
add
daa
call
xor
push
mov
pushl
push
test
add
mov
aas
fistps
adc
mov
sahf
add
hlt
or
lret
mov
pop
push
dec
mov
std
int
jecxz
stc
lods
addl
dec
jl
rclb
or
jl
data16
enter
add
add
bound
or
add
add
cmpsl
pop
xor
pop
movsb
loop
add
add
inc
add
pop
add
cmp
jp
add
add
add
sub
std
into
aam
push
stos
add
push
mov
push
xchg
jl
or
sbb
scas
ljmp
xor
add
std
repz
adc
icebp
aaa
out
mov
cmp
mov
movsl
push
add
sbb
jmp
movl
or
mov
add
movsb
lret
adc
add
rolb
adc
jo
dec
outsl
mov
add
iret
xchg
or
test
jl
push
sbb
call
mov
jle
add
mov
sub
sbb
dec
sbb
bound
cmp
sub
gs
cmc
xor
and
adc
add
push
repz
add
sahf
cwtl
cmovs
add
mov
adc
mov
int
in
add
jge
xchg
psubw
aas
dec
sbb
pop
add
cli
dec
push
add
or
dec
sbb
insl
push
pop
cmp
add
lds
push
sti
movb
popf
cmpsl
imul
add
loopne
stos
fs
loopne
sbb
imul
adc
or
test
sub
add
add
add
add
rolb
sbb
dec
sub
add
add
inc
add
mov
rorb
mov
popf
inc
add
add
out
or
add
lahf
test
aad
xchg
lds
push
cld
mov
sub
addl
aaa
adc
xchg
jge
sub
or
call
test
jnp
pusha
add
popa
add
push
adc
notb
push
mov
cwtl
iret
sub
push
add
add
imul
add
lea
jns
jbe
and
roll
imul
inc
add
in
lods
mov
add
sub
lds
insb
out
fdivl
add
add
mov
dec
pop
add
rcl
aas
lods
mov
xchg
cltd
push
mov
add
sub
into
mov
inc
add
xor
fistpll
clc
out
dec
cmp
add
cmp
rcrl
dec
icebp
out
xchg
jp
cmpsl
mov
xlat
gs
lds
xchg
adc
adc
inc
add
cld
inc
add
and
mov
add
xchg
jns
add
or
insb
mov
jae
and
imul
mov
xchg
dec
lods
js
add
frndint
fsubrs
push
jnp
mov
sbb
fdiv
enter
ss
adc
pop
or
in
jae
xor
inc
add
mov
mov
sub
pop
add
mov
adc
sti
mov
mov
add
adc
or
in
jns
inc
add
cwtl
into
mov
mov
nop
fcompl
ficoms
enter
sbb
mov
or
lcall
jg
cwtl
fldenv
add
add
shr
cld
loopne
push
sub
and
jge
cli
mov
leave
jns
sub
hlt
adc
add
aas
push
sbb
cmpsl
mov
add
aam
pop
bound
out
daa
roll
add
dec
jae
cmpsl
mov
das
sub
or
adc
add
xchg
jnp
aas
jbe
loope
jge
out
mov
cltd
popf
ja
xchg
ljmp
jne
cmp
imul
add
xchg
cltd
dec
sbb
popf
mov
sub
sub
add
jle
aas
pop
es
add
push
push
xchg
cltd
dec
inc
add
add
push
add
push
dec
fsubrp
int
jle
push
and
mov
ret
jnp
or
pop
sbb
mov
add
imul
ror
sub
add
fidivl
movl
add
jmp
pop
xor
xchg
movsl
in
or
cmpsb
cmp
aam
movsb
popa
add
and
dec
cmpsl
arpl
mov
adc
stc
adc
or
add
mov
sub
jl
mov
jns
xlat
xor
or
xchg
or
push
inc
add
out
push
pop
add
rcrb
imul
daa
cmp
cmc
xchg
inc
add
dec
dec
xchg
cmc
addb
sbb
fsubrs
or
add
pusha
add
mov
stos
push
enter
jo
push
add
xchg
lret
jl
cmp
pop
out
mov
mov
jl
sbb
pop
lods
adc
shl
inc
add
mov
add
add
notb
xor
pop
rolb
xor
jo
stos
insl
push
mov
xor
or
pop
out
push
fwait
sbb
add
adc
add
xor
pop
xor
call
xchg
scas
mov
add
adc
and
jae
add
add
cmp
aas
pushf
mov
dec
fs
gs
and
add
ret
add
inc
add
addl
mov
add
mov
cmpsl
fdivrp
jo
cltd
icebp
push
add
pushf
adc
add
mov
add
add
and
ss
add
sub
in
jmp
ljmp
adc
add
and
test
sbb
movsb
add
movsb
int3
dec
dec
cmp
push
imul
enter
and
inc
add
adc
add
mov
cltd
jle
mov
or
cmp
repnz
add
ret
add
test
rolb
fildl
add
xor
je
mov
mov
add
xlat
test
int3
push
test
aad
mov
jnp
cmp
cld
or
pop
call
push
xchg
nop
cli
popa
add
and
movsl
add
out
mov
imul
mov
jo
sub
popf
test
cld
out
lods
jo
dec
lods
nop
movb
fists
test
rcrl
rorb
mov
lds
sub
into
fldcw
test
push
fs
inc
add
add
add
aas
leave
fadds
js
rcll
int
mov
rcrb
jg
add
lret
dec
cmpsb
jnp
xchg
js
out
cli
mov
add
mov
in
add
or
inc
add
mov
movl
outsl
fmuls
lock
fstps
lahf
bnd
test
mov
popa
add
mov
jmp
roll
ret
add
add
popf
flds
add
daa
inc
add
push
cmp
jnp
out
rolb
push
add
aaa
jbe
xor
xchg
xor
add
cld
js
pop
hlt
imul
ret
add
pop
or
inc
add
fwait
add
inc
add
or
pop
xor
dec
lret
jp
insl
lods
or
stos
loop
mov
mov
cmp
mov
and
jnp
add
aas
sub
sub
std
loope
add
movl
outsb
dec
ret
stos
jge
lea
jbe
dec
cmpsl
jnp
add
adc
add
movb
pop
sbb
mov
scas
repnz
xchg
paddsw
outsl
sbb
outsb
cld
lret
jecxz
rcr
out
das
insb
pop
xchg
sahf
sbb
add
cltd
pop
push
fisttpl
push
add
sbb
rcrl
lods
adc
or
mov
add
js
sub
in
or
ret
dec
add
data16
mov
daa
aaa
pusha
add
out
jmp
or
jecxz
sti
or
add
sub
xchg
add
sbb
inc
add
inc
add
push
xchg
rcrl
stos
mov
add
add
add
ds
push
test
cmp
inc
add
add
scas
push
push
or
pop
fs
add
mov
jns
lret
adc
mov
add
push
add
sbb
dec
inc
add
roll
pushf
pusha
add
out
imul
or
add
xor
sahf
add
leave
sub
lret
push
dec
mov
insl
inc
add
sub
mov
add
add
repz
add
cmp
std
sub
inc
add
js
add
and
fiadds
outsl
stc
jecxz
mov
mov
pop
mov
add
mov
or
setae
add
aas
adc
add
or
cmpsl
sub
push
mov
dec
fwait
jp
std
movsb
lock
mov
xor
cmp
imul
idivb
les
fdivr
pop
test
add
test
add
mov
and
fsqrt
ja
add
add
test
push
sub
add
add
and
sub
addb
pcmpeqw
sub
lea
add
add
or
bound
adc
push
mov
mov
mov
jp
mov
into
ds
jl
es
loop
cmpsl
lods
stc
loope
add
add
aas
dec
mov
aad
aas
sbb
aaa
movb
inc
add
cmc
les
mov
ret
add
or
dec
xchg
and
or
pop
shlb
push
fs
add
pop
addb
jmp
add
pop
pop
loop
and
fwait
mov
inc
add
aaa
sahf
lds
loop
test
idivl
and
jecxz
jle
jl
lret
add
jae
push
shr
cmpsb
inc
add
movl
add
add
into
out
fwait
rcrb
sbb
add
sbb
lds
pop
add
add
mov
aad
jnp
pop
cwtl
aad
xchg
in
popf
push
or
addl
call
mov
add
add
jnp
jmp
add
lods
xlat
and
adc
in
add
add
out
add
pop
pop
mov
lds
loop
xchg
dec
iret
movsl
int3
fcmovnbe
push
xor
stc
mov
pushf
lcall
lock
in
insb
add
je
adc
stos
cmp
dec
clc
or
mov
rcr
push
sahf
lret
mov
add
add
dec
cmpsl
test
mull
cmp
add
data16
in
negb
ficoms
fistpll
add
mov
xor
mov
aam
ljmp
mov
cmp
loopne
imul
xchg
push
lcall
mov
lahf
xor
bound
cmpsb
xor
fistl
leave
cltd
sbb
mov
add
add
les
lret
mov
repz
dec
inc
add
add
add
sbb
ja
out
adc
aam
cwtl
es
loopne
addl
lret
xchg
xchg
je
xchg
cmpsb
gs
in
jne
adc
add
fldenv
in
and
adc
and
insl
gs
repz
jae
sbb
lods
leave
adc
inc
add
sahf
lods
pop
jnp
add
adc
add
push
jmp
sub
mov
mov
test
jecxz
movb
add
add
add
mov
add
fisttpll
lods
push
data16
frstor
add
xchg
addr16
xchg
out
sbb
cltd
repz
mov
ret
add
add
mov
mov
test
addl
lock
aaa
mov
mov
in
xchg
lcall
mov
pop
out
push
out
ret
add
jle
arpl
dec
stos
sub
add
daa
mov
add
mov
mov
lea
fisubrs
fcoml
icebp
nop
fsubs
ja
push
or
jnp
add
add
xchg
pop
xor
fdivrs
pop
add
add
sbb
mov
insl
push
xlat
xchg
sahf
je
sarb
out
sbb
addl
hlt
jb
rclb
add
pop
cmp
fildl
imul
pop
jl
rcl
lods
int
imul
das
addb
add
test
fucomi
out
mov
add
pop
shr
sub
pop
mov
mov
out
cmpsb
lret
cmc
out
sbb
mov
and
add
jp
add
lahf
addb
or
les
ds
outsb
fisubrl
movsl
dec
jns
add
in
mov
mov
mov
mov
cmc
sub
add
cmp
aam
and
pop
stos
cmpsb
repz
mov
sub
and
scas
fsubl
call
mov
pop
rclb
push
mov
int3
rcll
lods
cwtl
addl
jge
add
push
cmc
pop
std
pop
mov
mov
scas
test
bound
push
or
push
inc
add
adc
add
cmp
aam
xchg
sbb
push
add
dec
push
sbb
cld
lret
jge
mov
mov
stos
into
and
dec
sahf
test
dec
inc
add
add
inc
add
xchg
cmp
pop
adc
movb
test
jge
mov
roll
lods
movsl
add
dec
xchg
cmpsl
jne
add
mov
push
jg
cmp
mov
mov
inc
add
lcall
pusha
add
leave
add
and
add
fucomp
mov
add
push
shll
out
mov
add
cmp
ss
fldcw
xchg
addb
lock
cltd
mov
sub
cli
xchg
xchg
cli
inc
add
test
in
and
xchg
into
lock
ss
add
jge
jecxz
add
push
and
or
sti
fs
or
push
xchg
ss
and
inc
add
add
add
xor
stos
inc
add
add
sbb
add
add
jae
xchg
jbe
mov
outsl
insb
sub
fstl
mov
jno
lret
mov
push
jp
add
bnd
add
mov
fmul
movl
loopne
stos
mov
mov
mov
xlat
mov
popa
add
jne
adc
sbb
std
mov
outsl
sub
xor
sub
incb
mov
rcrb
or
add
movb
mov
jns
adc
pushf
out
jl
jge
loopne
or
add
pop
pusha
add
jbe
sub
xchg
jle
aad
cmp
adc
inc
add
addl
in
and
loopne
jns
nop
std
imul
mov
xor
aam
js
mov
sub
add
nop
or
das
add
pop
push
push
add
jne
jmp
mov
mov
and
notl
sbb
jns
add
push
into
loope
dec
add
inc
add
jne
cmp
add
add
aas
test
dec
and
imul
xlat
sbb
add
scas
clc
jae
lds
sub
rcrb
cld
rcll
cld
stc
repnz
or
test
mov
mov
rol
add
jmp
cmp
iret
addl
iret
xor
int
sbb
sub
cld
and
out
popf
ja
ss
mov
xchg
cmc
addb
add
in
mul
cmp
pop
mov
push
fs
mov
adc
dec
sbb
adc
sub
add
ljmp
scas
jg
gs
lcall
inc
add
insb
mov
in
push
addl
mov
add
addl
fiaddl
ja
stos
inc
add
xchg
cmp
scas
insw
inc
add
leave
and
and
popa
add
aad
push
xor
dec
out
ds
cmp
cmpsb
roll
ret
add
addl
inc
add
cmp
adc
gs
out
fimull
icebp
fcoms
add
sti
xchg
sbb
mov
pusha
add
stc
insl
lea
iret
cltd
or
lock
add
push
pop
sbb
add
roll
cmp
add
inc
add
add
or
inc
add
js
add
lret
inc
add
scas
jmp
jns
stos
test
mov
addl
sbb
stos
jno
xor
add
lahf
movl
add
cli
inc
add
shl
rcrb
ret
add
xchg
inc
add
lret
push
jns
inc
add
add
fistl
mov
call
xor
in
popa
add
add
add
add
mov
mov
add
cmp
call
cltd
out
enter
add
mov
fcompl
mov
add
cld
pop
arpl
mov
add
stos
sub
sub
das
gs
mov
add
loope
hlt
xor
into
jb
add
pop
add
jmp
ret
je
add
fwait
mov
push
leave
push
add
int
inc
add
mov
sbb
movsl
addl
add
jge
adc
test
sub
adc
inc
add
dec
mov
inc
add
cmp
adc
cmp
add
add
add
jbe
sub
sti
fiaddl
add
bound
adc
push
insb
inc
add
and
sbb
data16
jge
lret
xlat
mov
ret
add
mov
mov
insl
arpl
lahf
push
add
sub
jae
add
pop
mov
gs
and
adc
imul
setp
xor
pop
imul
lock
sub
cmp
xchg
push
add
jg
mov
sahf
sub
xchg
pusha
add
aam
add
add
imul
inc
add
addl
jmp
mov
daa
cmpsb
outsl
dec
mov
add
outsl
mov
xor
add
aas
jmp
test
int
aam
aas
clc
cwtl
fldl
add
test
and
scas
pop
and
icebp
or
add
add
popa
add
inc
add
movsl
notl
leave
adc
test
add
add
movsl
and
add
jge
sahf
sbb
mov
insl
pop
imul
jne
add
add
cs
fisttpll
jl
stos
mov
lcall
leave
lds
and
sbb
lret
add
in
stos
and
pushf
fidivl
fbstp
jp
push
push
mov
and
xchg
cmpsl
scas
or
or
fwait
xor
pushf
scas
lret
test
daa
fwait
xchg
lock
mov
add
xchg
lods
test
dec
mov
cmp
mov
jge
push
xchg
adc
je
add
push
jae
mov
push
push
repnz
testw
add
test
ret
add
outsb
cmp
pop
popa
add
cmp
pop
test
ds
cmc
sub
cmpsb
incb
addl
add
iret
or
add
add
push
repnz
jmp
loop
nop
mov
dec
xchg
or
add
xchg
aas
cwtl
jbe
add
add
insl
rolb
add
bound
mov
incl
mov
inc
add
sub
ja
cli
cmp
in
or
inc
add
aas
and
and
rolb
inc
add
inc
add
add
fldt
add
add
imul
pop
add
or
mov
fstp
stos
clc
and
mov
add
adc
repz
dec
rcl
inc
add
hlt
jnp
xchg
jmp
xor
cmp
add
cmpsb
sub
addb
lret
aad
xlat
xor
das
xor
sbb
sbb
mov
push
lcall
add
sub
adc
lods
cmp
jl
add
cli
shl
ja
and
sahf
in
mov
and
add
push
out
push
add
add
add
inc
add
jo
std
dec
add
test
fwait
sbb
sbb
lock
out
add
loop
jbe
inc
add
arpl
jae
jp
scas
and
jb
add
sahf
push
sub
add
add
mov
dec
cld
mov
pusha
add
cli
lea
mov
cmpsl
stc
lret
rolb
js
fdivs
push
xchg
xchg
mov
prefetch
jmp
mov
add
add
push
out
lret
lods
imul
test
adc
fcompl
add
xor
in
mov
in
sub
pop
jl
pushf
movb
jo
out
and
add
or
insl
dec
inc
add
add
xor
or
mov
test
inc
add
jmp
sub
in
add
add
xor
imul
stos
lods
roll
add
add
addl
or
adc
cmc
inc
add
aaa
cld
data16
aaa
inc
add
mov
pop
dec
call
mov
add
add
xchg
add
push
pop
rcrb
jl
outsl
les
rcr
insb
in
cltd
adc
pop
fucomp
test
sbb
dec
aas
scas
mov
sub
movsb
daa
addl
push
add
out
mov
outsl
xchg
mov
add
mov
push
push
mov
jo
stc
fs
add
bound
mov
xchg
pop
push
lea
mov
cld
inc
add
cmp
add
xchg
das
adc
pop
es
add
add
add
jo
xor
jge
jo
aas
jle
adc
scas
and
mov
xor
dec
sub
scas
fisubrl
cld
sub
addl
add
sbb
jns
insb
roll
and
pop
fwait
nop
fdivrp
mov
into
out
lea
jb
add
pop
add
mov
sub
adc
mov
add
pop
lret
xchg
sbb
addb
jge
fcoms
bound
test
sbb
fcoml
iret
mov
xor
jp
lods
lock
xor
or
jecxz
sub
xchg
dec
in
les
jnp
jbe
movl
add
mov
call
idivb
add
stc
rcll
add
fildll
insb
pop
sbb
outsl
outsb
pop
mov
fdivrs
push
or
jp
mov
das
cmc
adc
add
adc
xchg
jno
sub
add
imul
xor
out
jl
xor
mov
xchg
leave
movsl
push
add
add
negb
xor
clc
xchg
imul
loopne
mov
sahf
mov
je
sub
push
sub
fptan
imul
push
add
cmp
inc
add
lret
addl
add
pop
push
lahf
and
in
mov
jnp
add
mov
faddl
data16
xchg
les
push
dec
test
pop
add
add
add
add
les
adc
mov
xor
xchg
dec
enter
lahf
cltd
xor
add
call
lcall
push
or
cmp
mov
mov
add
sub
popf
lcall
mov
mov
mov
addl
pop
lret
sahf
add
pop
push
or
lea
add
sub
cli
push
dec
jb
pop
jge
out
cmp
add
cmp
add
push
sbb
push
dec
outsl
mov
outsb
cltd
cmp
mov
sub
roll
add
jp
mov
std
lret
addl
add
jl
out
xor
add
or
sbb
aas
mov
inc
add
or
pop
arpl
jo
aad
int
mov
lahf
inc
add
inc
add
fildll
cmp
add
dec
push
addr16
rolb
xor
fdivs
notb
test
lcall
cli
shl
jbe
cld
out
or
in
bound
ljmp
or
in
ds
cmp
out
jns
add
xor
add
shrb
in
inc
add
jne
add
pop
jns
push
repz
sub
and
sarb
inc
add
adc
sbb
aas
lods
xor
popl
sub
or
rolb
in
mov
mov
das
push
lds
lret
not
xlat
aad
add
inc
add
inc
add
testl
mov
inc
add
or
jae
pushf
jne
push
add
add
pop
stos
data16
dec
xor
fists
jp
int3
push
add
pop
jnp
ret
pusha
add
add
cmp
sbb
dec
inc
add
mov
add
cwtl
test
add
mov
arpl
pop
inc
add
mov
sbb
in
mov
push
outsl
pop
or
add
mov
pop
and
movb
dec
or
inc
add
pushf
lods
xchg
addl
test
cmpsl
data16
addl
inc
add
clc
dec
push
leave
das
roll
jne
xlat
xor
add
mov
fldt
adc
addl
shrb
push
ja
add
repz
cmc
nop
pop
add
push
mov
hlt
xor
test
add
mov
dec
jae
std
movb
jo
addl
add
into
or
push
fisubrl
ja
addl
add
pop
rorl
jmp
xor
addl
add
nop
ja
mov
pop
test
imul
mov
add
pop
push
xchg
loopne
xchg
lret
addl
add
loop
ficoml
pop
lea
imul
cmp
cmp
inc
add
add
inc
add
push
les
fcompl
loop
cs
addr16
add
push
jno
ficomps
scas
mov
push
add
cmp
fs
xor
out
mov
push
xchg
sub
int3
add
enter
testl
sarb
add
bnd
jo
jne
push
mov
and
and
sbb
stos
mov
addb
add
in
add
add
addb
test
jl
mov
xchg
xor
mov
enter
and
insb
loope
iret
add
inc
add
stos
inc
add
sahf
jmp
cmpsb
mov
clc
movsb
push
scas
sahf
and
cmc
dec
or
lock
add
add
mov
pop
cmpsb
jns
mov
add
add
cmc
sub
outsb
inc
add
shrb
inc
add
in
push
pop
lea
add
pop
push
add
addb
add
test
add
shlb
sbb
jge
add
dec
xchg
sarl
rolb
cltd
sbb
das
int3
jge
inc
add
icebp
daa
fisubl
rolb
inc
add
inc
add
rorb
out
scas
leave
nop
mov
add
xlat
clc
mov
push
sarl
es
xchg
push
fcoms
mov
add
das
jle
imul
mov
push
add
adc
rolb
sub
add
mov
fwait
rolb
pop
add
xchg
pop
cmp
adc
movsb
das
daa
ljmp
int3
fnstenv
add
push
jecxz
cmc
sbb
arpl
pusha
add
movsl
cs
roll
aad
xor
jg
dec
jg
cmpsl
xchg
lods
mov
mov
insl
decb
shll
or
decl
addb
cmc
cs
mov
add
mov
mov
pop
sbb
cmp
add
push
jge
mov
in
mov
roll
cltd
mov
xchg
in
add
mov
negl
add
push
je
mov
inc
add
adc
call
jg
lcall
and
inc
add
push
pop
ss
fnstcw
stc
add
mov
mov
jp
add
jnp
push
scas
flds
neg
cltd
ljmp
shlb
in
sub
or
add
mov
adc
or
stos
in
dec
mov
daa
rolb
add
outsl
cmp
movsb
dec
push
cmp
cmc
popf
lock
repnz
es
add
in
sbb
cmp
pop
in
ds
add
jp
sbb
inc
add
xor
add
frstor
pushf
dec
cli
pop
popf
and
mov
imul
sti
mov
dec
adc
pop
ss
hlt
loope
cs
nop
fldenv
mov
lock
add
cmp
fsubrs
xchg
push
push
jnp
adc
in
lret
push
push
cs
movsl
dec
xchg
inc
add
or
fs
pop
scas
dec
jle
push
xchg
mov
adc
es
cltd
addb
cld
mov
popa
add
pop
jp
les
repnz
das
xchg
pop
js
add
add
fistpl
dec
lock
add
xor
mov
outsl
jbe
daa
add
adc
inc
add
imul
mov
xor
jb
add
sub
sub
inc
add
jnp
loope
out
repnz
jg
rorl
test
scas
in
xchg
push
pop
movsl
inc
add
xlat
outsb
jmp
int3
adc
loope
fwait
movsb
inc
add
ljmp
or
cmp
test
push
outsb
push
push
xchg
sbb
lcall
mov
push
xchg
fs
addl
add
test
cmp
xor
push
jbe
xchg
insl
mov
test
inc
add
mov
add
lea
out
add
add
add
and
jp
test
mov
jl
cmp
leave
push
outsb
cmpsb
adc
jmp
or
aam
xchg
pop
filds
lea
xchg
in
addb
push
int
sub
add
add
movl
fistpl
or
cs
or
jns
mov
add
fisubs
pop
push
add
imul
add
xchg
ljmp
jmp
rolb
bnd
test
test
mov
xlat
fucom
mov
out
pop
lret
add
out
fs
add
add
repz
cmp
mov
add
add
shlb
les
sub
shr
or
in
add
xchg
inc
add
gs
cld
lea
sub
test
ficoml
mov
add
add
je
adc
nop
repz
sbb
or
or
dec
sbb
or
sbb
inc
add
pop
cmp
or
xor
test
fnstenv
les
hlt
leave
shl
pop
lods
dec
cmp
in
lret
jae
push
iret
jne
loopne
pusha
add
inc
add
add
cmp
dec
mov
add
cld
inc
add
pop
add
mov
addb
cld
jns
sub
add
cmp
sbb
and
mov
into
mov
lret
das
sarl
aaa
into
mov
add
hlt
rolb
add
ljmp
addb
mov
sti
pop
jae
scas
mov
jbe
dec
cltd
push
add
movsb
jg
mov
loop
mov
xchg
cltd
add
inc
add
ret
adc
testb
cmc
aas
aad
fs
add
mov
push
lock
adc
cmpsl
scas
push
loopne
icebp
inc
add
fwait
jmp
cwtl
add
dec
inc
add
mov
pop
rcll
push
outsb
test
pop
sbb
push
dec
mov
or
inc
add
test
add
or
cli
cmc
cld
enter
mov
xor
cmp
add
fsubrs
and
sbb
jmp
add
adc
movl
pmuludq
adc
add
add
out
pop
jl
test
loop
sub
cmp
test
add
inc
add
aaa
jns
dec
dec
dec
sbb
addl
rolb
add
fdivrs
nop
lcall
and
and
adc
daa
cltd
add
lret
pop
imul
add
cmp
xchg
clc
dec
lock
and
xor
sub
addb
pushf
insb
rolb
inc
add
popa
add
cmpsb
pop
pop
add
add
inc
add
cli
add
mov
int3
mov
pop
pushf
dec
inc
add
enter
rcrl
movb
insb
pushf
jp,pt
fs
addb
je
push
hlt
cmp
mov
fdivr
lret
int3
cmp
xor
pop
popa
add
fbstp
add
mov
pop
fisttpl
cmp
out
add
push
or
pmulhuw
add
test
add
sub
xchg
dec
mov
jg
inc
add
mov
add
inc
add
xchg
nop
in
or
inc
add
addr16
repz
je
xor
mov
cmc
xor
out
xchg
std
ret
add
sub
arpl
imul
dec
pusha
add
sub
add
xchg
mov
add
cmp
lcall
add
lret
sub
loopne
cmc
adc
add
repz
iret
sbb
lods
test
jbe
fldenv
sbb
add
adc
dec
arpl
jnp
mov
adc
pop
add
sub
add
mov
push
xchg
popa
add
mov
or
xlat
cmpsb
xor
mov
xchg
popa
add
jl
out
lods
add
ret
jmp
addl
sbb
add
jg
in
aaa
aad
insb
or
add
xchg
mov
jno
dec
pop
loop
inc
add
daa
inc
add
lcall
sbb
xchg
aam
mov
call
in
inc
add
dec
adc
loop
aad
lds
lahf
xchg
add
add
jns
lds
push
and
mov
add
fdivl
cli
in
jnp
fwait
add
push
push
xchg
scas
dec
mov
add
xor
dec
fists
xchg
jo
fadd
add
fcomip
jg
xchg
decb
loopne
mov
or
add
add
add
add
dec
out
pop
or
inc
add
adc
add
icebp
pusha
add
add
pop
xchg
inc
add
lcall
test
popf
or
les
xlat
mov
out
cmp
add
aad
xchg
packssdw
out
cld
stos
add
push
cwtl
test
movl
push
stos
add
mov
in
mov
or
pop
ds
xor
or
shrl
jp
std
mov
cmp
jno
add
push
jp
mov
mov
push
push
jae
mov
out
jecxz
xchg
xchg
stc
pop
add
pusha
add
lods
or
and
fists
mov
lret
dec
sub
push
sahf
sbb
mov
pushf
jle
movb
loopne
push
mov
repz
fwait
int
sti
sbb
push
roll
jnp
cmpsl
dec
mov
add
xor
push
fmull
shrl
dec
push
dec
out
es
xchg
mov
mov
inc
add
rolb
push
pop
push
mov
rorb
add
pop
xlat
movsl
shlb
inc
add
add
pushf
scas
jns
loope
xchg
pop
das
sub
sbb
sbb
and
add
scas
lds
jge
cmp
aad
jbe
sub
fdecstp
push
xchg
roll
add
sbb
cs
ja
add
dec
lret
sbb
cmpsb
xchg
cli
mov
ds
arpl
push
je
jo
add
jle
dec
mov
pop
lds
push
imul
cmc
push
mov
dec
inc
add
lds
es
sub
add
cmpsb
incl
add
cli
xor
aas
push
roll
pop
in
test
add
mov
jae
jmp
movb
push
mov
xchg
or
mov
sub
jnp
ret
mov
movsb
sub
loopne
arpl
sbb
js
out
add
addl
cmpsl
popl
je
add
or
lods
and
repnz
pusha
add
sub
popa
add
mov
mov
xor
bound
addl
add
lea
add
push
es
icebp
insb
or
sub
add
mov
mov
adc
ljmp
and
add
sarb
push
fdivp
xchg
int
push
sti
fsubr
cmp
lods
icebp
out
mov
push
test
add
push
jno
aam
fsubl
add
add
arpl
xchg
stos
mov
sbb
jp
nop
xor
daa
mov
js
add
pop
sti
aam
jp
out
cmp
repnz
sub
sub
inc
add
out
ret
add
cmp
add
addb
add
add
add
add
add
lahf
xor
jmp
dec
push
inc
add
jne
xchg
push
fs
add
add
and
xchg
roll
add
jecxz
jns
addb
js
scas
loop
dec
pop
push
jp
xchg
add
mov
add
imul
push
ficoml
les
ja
clc
repnz
daa
xchg
aas
push
movsb
mov
hlt
lods
mov
cs
sahf
addb
lea
and
imul
fiaddl
add
and
mov
add
inc
add
mov
pop
int3
enter
pushf
xor
es
sahf
jb
fucomip
cmp
ja
ret
add
je
jno
fwait
gs
repz
loop
add
in
add
sahf
push
xor
mov
add
pop
sbb
add
mov
dec
cli
imul
jno
adc
sub
lret
mov
int3
mov
add
bound
ljmp
cmp
out
idivb
mov
ret
repz
rol
add
scas
or
adc
pop
ss
jo
add
push
cmp
pushf
jbe
jb
in
push
sbb
js
xchg
add
xor
pop
int3
pusha
add
addl
mov
mov
push
aaa
mov
popa
add
jae
push
rorb
shrb
cld
lret
sbb
cs
jae
add
xchg
mov
in
cmc
mov
and
movl
iret
jmp
into
icebp
sbb
and
dec
mov
push
inc
add
xchg
mov
dec
stos
test
cmp
xor
mov
fsubs
fistps
lret
push
addb
lret
or
jno
cltd
push
in
inc
add
addr16
movsl
jnp
xor
rcll
inc
add
jmp
jae
add
movl
push
rolb
add
add
inc
add
xor
cmp
aas
inc
add
jns
mov
jmp
loop
mov
jno
les
push
test
lret
in
mov
addl
in
pop
cmp
add
popa
add
add
xchg
jns
jns
push
int3
nop
dec
push
push
fmull
addl
jle
imul
add
cmp
and
mov
rolb
jb
xchg
xchg
aaa
sbb
lahf
cmpsb
push
xchg
sbb
mov
dec
mov
jp
or
push
clc
lcall
push
daa
addb
sbb
sbb
imul
cmp
pop
jo
mov
add
or
addb
xchg
int
jmp
adc
push
mov
push
lea
inc
add
jl
mov
aaa
addr16
imul
jnp
push
sahf
dec
cli
mov
dec
dec
push
dec
lcall
mov
js
add
add
xor
jp
insl
mov
testb
loopne
mov
mov
cmp
add
ljmp
and
jle
in
sti
lods
inc
add
pop
mov
inc
add
cld
inc
add
cmp
cld
out
in
pop
stos
sti
sti
into
and
add
stos
add
les
je
mov
mov
cli
mov
int
mov
add
cs
gs
out
es
add
lcall
call
add
dec
lahf
add
jge
push
stc
mov
pushf
fnstsw
inc
add
fs
push
test
cli
jo
mov
int
inc
add
ret
dec
dec
lods
aam
add
scas
xchg
xchg
out
xlat
pop
popf
shll
inc
add
cmpsl
jmp
add
adc
or
add
repz
mov
std
jns
push
mov
add
imul
push
push
movb
lods
push
adc
push
inc
add
iret
mov
mov
rolb
call
mov
in
lods
fidivl
fadd
add
movsl
xchg
sub
mov
pusha
add
in
fdiv
inc
add
mov
inc
add
sub
dec
push
cld
mov
add
adc
aad
test
and
enter
xor
xor
inc
add
add
or
push
sub
mov
xor
sub
mov
mov
jge
xor
movl
mov
add
js
sahf
movsb
xchg
ret
add
lds
xchg
push
jle
or
test
push
insl
nop
xor
mov
add
lock
xchg
push
cmp
inc
add
add
dec
stc
mov
xchg
outsb
test
sti
cmp
test
pop
pop
aad
testb
add
mov
add
add
mov
xchg
cmpsb
xor
movsb
movsl
addr16
dec
scas
nop
or
push
add
xor
mov
push
adc
cmp
jle
popa
add
push
test
data16
jmp
test
mov
fisubl
add
add
nop
mov
fbstp
cmpsl
aaa
jp
sub
push
add
and
pop
mov
dec
test
inc
add
pop
movsb
fisttpl
add
cs
out
mov
leave
cli
jmp
and
popa
add
enter
add
movsl
clc
adc
lret
pop
sti
dec
jae
cmp
sbb
jle,pt
pop
inc
add
push
sti
daa
in
aad
test
xlat
and
bound
push
je
pop
xor
add
jns
lcall
clc
test
fnstcw
add
fbstp
add
addb
add
pop
add
sub
jnp
roll
popa
add
repnz
test
bound
inc
add
movsl
int
add
hlt
scas
or
popa
add
add
and
adc
or
cmpsl
and
xlat
xchg
xchg
addl
cwtl
push
incb
adc
push
lds
popa
add
add
dec
cmp
ljmp
arpl
push
dec
sub
outsb
lret
xor
insb
push
movlps
add
stos
add
js
movb
add
out
ljmp
add
inc
add
jno
inc
add
and
into
cmp
add
add
push
ds
lods
out
adc
daa
xchg
xchg
fildll
xor
lret
mov
iret
dec
stos
les
fadds
add
add
jg
push
icebp
movsl
ss
insl
xchg
inc
add
aad
jae
push
movb
or
das
mov
sub
add
push
enter
into
pop
sbb
add
push
pop
add
or
xchg
movsb
repz
add
and
push
fsubrs
or
scas
push
addb
add
xchg
idivb
add
lret
les
pop
add
add
dec
lods
mov
push
xchg
push
je
cmc
pushl
add
outsl
dec
adc
add
mov
add
mov
mov
add
push
fadds
or
lret
xor
add
mov
push
in
addr16
out
push
pop
sbb
add
jmp
daa
inc
add
jns
push
insb
sub
rolb
arpl
xor
add
lea
in
xor
add
lock
cli
pop
xchg
cmpsb
mov
add
pop
ljmp
fnsave
leave
test
inc
add
ud1
test
add
aaa
insl
jl
sbb
and
pop
mov
add
add
mov
sbb
xchg
roll
in
pop
pop
bound
int
jmp
in
fldl
add
addb
out
loopne
lock
movl
clc
loopne
jne
test
dec
arpl
add
push
add
xchg
sahf
push
inc
add
xchg
mov
jmp
movsl
lods
inc
add
lahf
sahf
xchg
push
call
cmp
fucomp
pop
add
outsl
sahf
divb
outsb
xor
shr
mov
add
add
pushf
add
repz
sub
add
xor
add
jge
sti
mov
add
mov
push
pop
rolb
add
sti
jo
xchg
cli
sub
mov
jnp
mov
rolb
add
or
outsl
sub
cmp
xor
push
je
add
xchg
sbb
jl
cmp
push
js
jne
mov
add
pop
sbb
cmp
jge
add
out
scas
add
imul
or
rep
sti
mov
push
push
xchg
sbb
bnd
or
xor
xchg
sbb
fwait
enter
test
fildl
add
scas
pop
add
sahf
cmp
js
mov
lods
loopne
push
push
movsb
pop
movsl
add
cmp
jge
movsl
lcall
std
int3
pop
sub
add
add
add
add
push
sub
mov
je
mov
ja
add
mov
leave
jecxz
mov
push
dec
sbb
cmp
sarb
sti
or
test
inc
add
rcrb
xor
test
lods
lods
cmpsl
jne
add
in
test
nop
in
das
add
scas
inc
add
sbb
add
add
xor
inc
add
xor
cmp
add
add
add
pop
pusha
add
cli
mov
scas
movl
add
stos
shrb
inc
add
xlat
ret
enter
fs
cli
ret
add
addb
pop
cmp
sti
inc
add
popf
pop
loopne
pop
les
out
cmc
es
jg
push
xchg
negl
add
repz
jns
add
jne
movl
movsb
dec
int3
movsb
mov
xchg
cmp
mov
xchg
push
int
adc
xor
lds
cmp
mov
push
movsb
sbb
add
repnz
add
test
data16
or
and
sub
les
shl
sub
cmp
sahf
pop
lcall
or
imul
ret
add
inc
add
add
push
adc
or
popf
scas
shl
and
sti
dec
jne
stos
movsl
or
and
dec
xor
add
adc
jnp
add
adc
arpl
xchg
shr
mov
add
jmp
add
jg
pop
aas
dec
xlat
dec
jbe
adc
pop
inc
add
xchg
int3
cmp
movsl
addr16
push
leave
dec
push
jp
pop
add
pop
xchg
test
add
leave
insb
jp
cmp
lret
insl
and
mov
sbb
add
leave
fildl
add
cmpsl
in
aas
xor
push
ds
add
aad
add
adc
mov
sub
push
adc
shr
into
sarb
jno
icebp
addb
mov
push
std
mov
mov
pop
mov
xor
dec
cmc
mov
add
dec
sub
dec
or
sub
ss
xlat
insl
xchg
in
repnz
sbb
sahf
lret
notb
add
adc
inc
add
jecxz
clc
jg
in
jp
add
add
adc
inc
add
add
sub
push
add
sbb
jge
add
dec
icebp
push
pop
adc
inc
add
mov
xchg
popa
add
fsubs
addl
das
lret
xchg
bound
sahf
data16
add
add
ficomps
adc
scas
les
push
mov
jno
add
pop
adc
loope
add
lret
push
fcmovb
add
pushf
push
pop
pop
addr16
add
add
loope
addb
test
jo
ret
jmp
mov
pop
repz
xlat
sub
cli
sbb
add
aad
inc
add
ljmp
add
insb
cmp
clc
cwtl
sbb
mov
fs
lcall
mov
add
push
add
mov
rolb
clc
addl
in
pusha
add
insertq
cmp
cmp
xor
cld
jnp
int
aas
aam
pmuludq
popa
add
pop
dec
inc
add
cmp
int
inc
add
mov
sbb
dec
mov
add
movl
psubusw
push
mov
mov
cmp
jle
cld
addl
add
adc
sub
int3
dec
in
add
lcall
inc
add
add
inc
add
repz
add
pop
jbe
add
sbb
cmpxchg
fdivr
jae
loope
out
adc
cmp
xlat
pop
mov
add
xor
push
lds
movb
add
inc
add
jmp
pop
push
xor
add
in
addl
and
xchg
sub
jnp
in
xor
or
add
mov
roll
push
xor
add
add
jo
sbb
add
mov
mov
xor
sbb
inc
add
add
sbb
mov
notb
out
ss
add
test
add
mov
adc
push
int3
xchg
addl
sbb
cmp
es
add
enter
gs
adc
mov
jecxz
inc
add
nop
mov
sar
bound
repz
pop
add
cmpsb
mov
add
mov
add
xchg
addl
and
adc
repz
add
mov
addb
push
push
loop
jbe
pop
xchg
fwait
xchg
pop
and
pop
ss
cmp
rcrb
xor
loop
add
fsts
loop
adc
jns
adc
mov
xor
mov
add
dec
test
inc
add
test
paddusb
adc
mov
movsb
jne
sbb
insl
adc
popa
add
cmp
mov
pop
add
cltd
pop
add
jg
add
jo
adc
adc
add
mov
les
icebp
cli
inc
add
mov
mov
icebp
mov
call
add
dec
add
insl
and
mov
rcrl
loope
mov
add
add
xchg
aad
cmp
repnz
ss
add
add
jl
pop
and
jmp
ret
add
inc
add
dec
mov
and
add
sub
insb
jg
jae
jp
cmp
jg
xchg
negl
rolb
xlat
ret
add
repz
add
sbb
push
lock
ljmp
ret
add
cld
fsubp
pop
mov
addb
dec
popf
xchg
inc
add
add
lods
or
lret
adc
lods
aas
scas
stos
js
add
add
push
add
xchg
roll
loope
cmp
mull
add
adc
jmp
jae
rolb
jns
ljmp
jge
add
add
lcall
add
xchg
xor
dec
jbe
negl
jno
lcall
xor
add
inc
add
je
jp
cmp
add
and
lcall
xchg
mov
icebp
divl
insb
loope
inc
add
dec
jno
xlat
dec
cltd
popa
add
xchg
cli
sbb
push
gs
mov
sahf
jne
sub
jne
std
cmp
add
add
test
cwtl
stos
adc
or
xchg
imul
add
cmpsb
aam
jp
insb
dec
and
out
mov
stos
das
jl
loopne
in
add
fsubl
add
mov
add
cmp
pop
psrld
or
cmp
mov
out
or
xsha1
cmpsb
mov
idiv
enter
and
lds
rolb
test
in
call
add
jbe
rcll
push
addl
sub
or
add
cmpsb
and
imul
push
pop
or
repz
add
inc
add
fisttps
add
adc
dec
cmpsb
mov
xor
or
add
xor
add
and
and
std
imul
or
lds
mov
mov
add
cmp
add
add
lods
and
ja
shrl
je
mov
mov
jecxz
test
outsb
outsl
mov
addl
cltd
pop
jl
add
add
and
adc
test
xlat
lret
cmp
movb
ljmp
mov
fbld
pop
mov
mov
inc
add
cli
into
stos
sahf
cmp
jb
dec
dec
dec
in
dec
roll
shll
scas
push
add
inc
add
sbb
pop
mov
pusha
add
aas
mov
sbb
add
sbb
xor
inc
add
push
das
popf
cltd
xchg
mov
add
mov
or
mov
xchg
sahf
inc
add
push
enter
adc
add
xchg
xor
add
outsl
ja
add
xor
adc
call
add
lods
shll
add
aas
fstpl
dec
fldenv
add
sub
add
fldt
mov
mov
add
aam
xchg
cmpsl
arpl
cmpsb
sub
repz
mov
or
js
xlat
sub
jae
out
push
cltd
jle
push
xor
adc
mov
sub
inc
add
add
addl
or
rol
add
add
stc
push
inc
add
cmp
add
outsb
out
sub
mov
add
int
mov
lea
jp
or
das
xchg
mov
lret
and
movsl
push
xor
add
adc
fstl
fcoml
outsl
dec
clc
cld
jbe
xchg
mov
mov
sub
mov
fsts
adc
ds
and
mov
mov
enter
pop
adc
inc
add
mov
lret
stos
aad
jnp
test
add
push
mov
loope
mov
bound
roll
aad
nop
push
aas
iret
add
xchg
fs
int3
pop
add
or
push
jmp
cwtl
push
fdivr
pusha
add
mov
cmp
xor
add
inc
add
sbb
test
dec
movl
pop
mov
add
mov
pop
add
test
add
cwtl
pop
push
mov
nop
cmp
mov
xchg
lds
mov
jbe
add
add
mov
lret
and
addb
inc
add
xchg
mov
into
inc
add
ljmp
add
cli
scas
lret
push
ljmp
out
enter
add
aas
xchg
enter
jl
jg
in
mov
mov
imul
mov
cwtl
xchg
cmp
jae
ret
add
sub
lret
xchg
jg
or
cmpsb
loopne
and
xchg
xchg
cmc
movl
mov
test
es
lock
sub
rolb
adc
add
sub
add
mov
mov
add
pushw
cmp
push
jmp
je
jbe
sub
cmpsb
mov
mov
fisubs
add
xor
inc
add
scas
xchg
push
frstor
stos
add
dec
bound
mov
add
mov
bnd
add
inc
add
out
arpl
dec
and
cli
fcoms
loop
fadds
and
mov
or
movsl
mov
dec
cmp
mov
add
cmc
into
test
xchg
jnp
xchg
fnstenv
test
nop
mov
les
push
add
xchg
cli
cmp
and
push
and
push
fs
cmp
mov
cmp
aaa
fdiv
out
or
add
cmc
inc
add
cmpsb
jge
add
int3
sub
insb
push
pop
out
cmp
jns
sub
add
adc
add
dec
sub
xchg
ret
add
cld
test
and
pmullw
cmp
fucom
roll
jns
adc
add
cld
or
add
js
dec
scas
mov
pop
mov
cltd
mov
sbb
add
movl
cmp
aad
inc
add
mov
xchg
call
pop
in
inc
add
sahf
cmp
dec
cmpsb
mov
repnz
stos
sbb
add
stos
dec
and
mov
ljmp
add
loope
aad
repnz
fiaddl
add
cli
loopne
and
mov
test
std
lock
add
jae
and
addb
lcall
and
out
stc
in
ss
and
mov
aaa
test
add
push
rorb
pandn
mov
mov
scas
pop
mov
rcrl
and
sahf
jg
pop
fcoml
fs
add
jg
add
add
pop
sbb
imul
jb
pop
jmp
add
lock
add
sub
bound
pop
rorb
adc
mov
mov
push
jb
pop
cmp
push
xor
aam
inc
add
xchg
data16
sahf
jns
addb
mov
pop
in
and
jno
add
pop
ret
add
and
cmp
add
lahf
cs
add
mov
adc
jecxz
aad
int3
cmpsb
pop
sti
call
loopne
jne
add
add
adc
out
mov
add
and
dec
mov
add
sbb
add
lds
cmc
addr16
add
lcall
notl
lret
insl
mov
repnz
or
fcoml
insb
push
loop
roll
fs
pextrw
add
add
push
mov
out
dec
addb
add
pop
xchg
pop
pop
test
ds
xor
dec
iret
jne
clc
sub
add
dec
je
or
mov
ds
dec
fidivrs
les
push
mov
hlt
pop
push
fwait
add
add
out
inc
add
add
cmp
scas
int3
cmp
ret
add
mov
xor
cmp
push
ss
add
test
dec
push
std
sub
push
add
aad
insb
addb
jecxz
push
pop
out
lahf
popa
add
push
add
add
shll
sub
gs
addb
cmpsb
mov
pop
arpl
inc
add
leave
dec
popf
jo
add
lods
test
sbb
or
xchg
mov
gs
loop
lahf
sub
inc
add
add
cmp
add
push
leave
jb
fildl
in
push
push
add
out
add
add
add
out
fs
add
add
sbb
mov
fcmove
loope
stc
inc
add
mov
pop
ss
testl
adc
inc
add
dec
mov
outsl
pop
shll
jmp
mov
outsb
pop
lock
or
out
fsubrs
sbb
ret
in
cmpsl
outsb
mov
or
mov
mov
push
popa
add
pop
sub
leave
inc
add
add
cli
fisttpl
adc
pop
ret
add
jle
aas
adc
add
cmp
add
add
sbb
imull
mov
push
xchg
les
rcll
lea
in
ss
aam
add
adc
and
sub
sub
add
add
lock
or
addb
mov
adc
mov
inc
add
jl
push
dec
pushf
loop
add
add
add
cwtl
jg
add
add
movsb
push
sbb
aad
sub
mov
or
jbe
push
insl
cmc
fbstp
out
daa
and
addl
mov
jb
fisubs
add
fnstcw
addb
add
ret
add
cwtl
out
into
adc
push
cs
adc
add
arpl
mov
mov
movsb
fwait
mov
xor
mov
sbb
lahf
xor
add
sbb
pop
mov
sub
or
mov
add
cmpsl
mov
add
dec
dec
bound
lods
scas
out
sbb
les
jb
insl
mov
shrl
cmpsb
xor
add
jle
mov
leave
sub
and
iret
mov
mov
mov
jo
add
shll
xchg
xor
loope
cld
leave
sub
mov
add
lods
fwait
bound
mov
shlb
add
fisttpll
push
dec
sbb
pop
sbb
add
add
scas
dec
icebp
pop
xor
loope
xor
sbb
icebp
popf
ds
bound
mov
jl
lret
lds
iret
pop
insl
int3
test
sub
ss
out
add
sarb
push
lahf
das
dec
cli
or
add
cmp
int3
sbb
daa
movsb
call
mov
les
pop
jae
into
push
add
enter
notl
shll
out
mov
shl
lcall
push
lods
xor
aas
jg
add
add
addl
or
in
mov
roll
lods
ret
add
mov
pop
add
inc
add
add
out
xor
lods
push
add
push
add
mov
pop
data16
jecxz
inc
add
loop
movb
add
push
or
enter
xchg
sbb
add
addl
add
popa
add
xor
push
sbb
add
fcomps
dec
add
adc
add
pop
jnp
add
ja
or
in
rolb
es
xor
inc
add
clc
cld
mov
inc
add
jmp
add
jmp
int
or
xor
inc
add
mov
dec
div
inc
add
dec
stos
sbb
pop
std
jmp
rolb
xchg
push
xor
add
adc
xor
pop
add
xor
cmp
mov
add
addl
dec
jmp
js
into
or
ret
add
xor
cmp
xor
roll
xlat
push
nop
xchg
or
cmp
add
test
inc
add
adc
mov
mov
add
xchg
lds
movl
cltd
clc
fmuls
les
pop
jg
sub
add
mov
aas
fldenv
lods
dec
das
adc
mov
mov
into
repz
mov
adc
sub
cmp
add
call
leave
push
push
addl
gs
addl
add
add
add
addb
mov
enter
jno
cmp
xchg
cmp
push
add
push
not
mov
pop
cmp
push
bound
out
loope
xchg
movb
icebp
jbe
aas
inc
add
aam
les
cld
ja
add
jo
add
fisubrl
push
std
into
xchg
int
ja
add
add
int
add
sub
add
inc
add
dec
pop
aas
push
lds
push
push
mov
xor
arpl
mov
add
out
fsub
mov
pop
xchg
jns
cwtl
pop
mov
sub
fistl
mov
mov
pop
ss
push
pop
loopne
mov
dec
xchg
cmpsl
repz
jl
test
push
lea
std
sbb
call
and
out
add
cmpsl
pop
push
bound
jle
movl
mov
mov
into
pop
shrb
add
out
xchg
inc
add
mov
fstl
loope
insl
test
imul
pushf
cld
cltd
push
movsb
jns
addl
bound
mov
add
xor
fwait
cmpsl
mov
xor
stc
sbb
add
or
pop
rolb
lahf
jmp
add
add
popf
mov
add
sbb
add
cltd
aaa
fmull
xchg
daa
push
jmp
mov
and
fisubrl
and
les
sub
lret
lods
mov
pusha
add
popf
sbb
fdivl
cmp
cltd
mov
test
sbb
xchg
movb
add
adc
push
add
int
dec
loopne
push
movsb
xchg
pop
inc
add
repnz
stos
xor
add
sbb
add
loope
sti
xchg
push
sub
push
stc
cmp
xchg
xor
outsb
mov
or
jecxz
add
pop
insb
dec
cmc
stos
sub
into
jl
jnp
pop
mov
or
add
add
cli
and
addr16
addb
sub
shl
lret
sti
sbb
adc
stos
lods
movb
fsubs
or
xlat
sarb
rcll
and
addl
clc
push
add
filds
icebp
fists
sbb
in
movl
push
ds
roll
test
div
int3
fistpll
fsubr
loop
xchg
sub
inc
add
xchg
inc
add
mov
inc
add
jmp
sub
mov
xchg
push
mov
xor
mov
add
cmp
out
add
int
nop
jl
loope
das
repz
push
mov
int3
pop
ficoms
push
xchg
iret
xchg
pop
ret
ret
add
add
les
mov
push
dec
pop
add
sti
cmp
dec
xchg
out
aas
push
push
mov
add
add
add
mov
jg
cmp
lea
add
add
add
sarl
loopne
and
push
adc
push
dec
dec
push
sbb
pop
add
add
jmp
cmp
push
add
xor
sub
ds
stos
sub
sahf
stos
lret
dec
add
popa
add
xlat
cmpsl
jmp
add
jle
mov
adc
das
mov
jb
add
pop
addl
lahf
dec
mov
mov
mov
cs
mov
add
sbb
add
mov
jb
int3
aaa
xor
cmp
add
mov
add
push
lds
pop
add
add
sub
pop
mov
sub
roll
lret
mov
mov
mov
mov
push
sbb
ret
add
add
lods
sbb
dec
daa
pop
add
int
sbb
and
and
mov
add
sbb
adc
sub
or
out
jmp
rol
add
xchg
hlt
mov
push
cmp
mov
push
pop
add
push
inc
add
ss
mov
das
push
fxch
jmp
jle
add
bndstx
xor
push
outsl
jle
cmpsb
mov
sbb
inc
add
xchg
add
fs
addr16
mov
add
cwtl
divps
loop
mov
fwait
sub
xchg
enter
lea
or
loop
add
xchg
mov
add
cmp
fimull
mov
rclb
fwait
ret
sub
xchg
popa
add
sbb
add
xor
mov
push
pop
push
pop
sub
mov
fdivrl
pop
adc
or
pop
xchg
jge
mov
cmp
lods
jp
xchg
addl
pop
pop
fsubrs
or
cmp
stos
ret
push
and
pop
add
add
add
mov
inc
add
xor
jb
xor
ja
mov
push
sbb
popf
adc
pop
mov
add
add
pop
inc
add
jns
mov
ss
mov
sub
mov
jl
pop
pop
mov
mov
mov
cmp
mov
add
insl
ja
mov
stos
arpl
xchg
jmp
dec
dec
fsubrl
push
rolb
jmp
add
mov
icebp
dec
in
fwait
mov
sbb
enter
pushf
aaa
mov
mov
lds
rcrb
add
and
enter
jp
pop
add
int
ret
add
je
cld
call
push
mov
push
mov
lret
push
sub
dec
fldcw
jb
add
fiadds
mov
loop
sub
add
mov
das
movsb
mov
out
or
sub
roll
testl
ja
xor
stos
aas
gs
xor
xor
add
ret
add
cmove
bound
mov
fstps
loope
add
outsb
nop
or
test
or
sbb
xchg
arpl
roll
in
ret
add
addl
push
ret
add
adc
movsb
shlb
adc
movsb
dec
jle,pn
addl
inc
add
mov
jno
jmp
add
fsubrl
icebp
and
lds
call
and
mov
mov
sub
pop
and
xchg
cmovge
fbstp
imul
cwtl
cli
xor
pusha
add
add
loope
in
push
add
nop
fcompl
add
bound
inc
add
dec
clc
fsubrs
outsl
addl
movl
add
in
inc
add
int3
pusha
add
push
inc
add
gs
rcl
out
add
adc
push
inc
add
addb
mov
sub
add
or
and
sbb
rolb
les
adc
add
jle
inc
add
pop
or
out
sub
fldl
mov
lcall
gs
mov
test
or
aam
fisttps
add
fs
shll
jne
adc
insb
pop
or
add
jne
push
loope
int3
jae
jle
arpl
popf
repnz
inc
add
xchg
cmp
lret
movsb
cld
repz
rclb
addb
addl
test
add
ljmp
aam
addb
in
in
jbe
xchg
dec
xor
stos
push
insl
lret
mov
add
insl
cmpsl
mov
repnz
sub
add
sbb
adc
addl
loopne
pop
cmp
out
stos
flds
jbe
out
repnz
sub
add
or
pop
add
and
hlt
mov
movl
sar
xchg
pop
fildl
add
cmp
lock
xor
xchg
lea
dec
dec
in
add
push
push
scas
leave
cltd
aad
pop
enter
and
rolb
add
dec
rclb
and
mov
mov
scas
xlat
mov
add
add
je
xchg
jnp
add
cmp
and
jmp
inc
add
mov
push
add
mov
jp
add
icebp
scas
inc
add
int
xor
enter
adc
clc
in
shrb
movb
ror
push
addb
movsl
mov
ljmp
dec
adc
jnp
sub
enter
sbb
clc
jne
nop
ret
jl
add
lods
cwtl
push
scas
dec
adc
lret
jnp
sub
adc
mov
inc
add
filds
lret
insl
mov
lea
int
add
repnz
add
or
xor
shlb
rolb
popa
add
dec
mov
sahf
ss
push
lods
add
xor
mov
push
fiaddl
add
call
mov
add
mov
mov
add
sbb
xchg
movb
mov
mov
dec
ss
add
push
push
sub
xor
add
popa
add
mov
bound
jge
add
dec
xchg
mov
in
sahf
pop
push
movsb
lock
inc
add
push
push
test
add
jmp
pusha
add
pop
adc
loope
add
add
xlat
out
jg
xchg
hlt
dec
fnsave
jle
out
scas
ljmp
xchg
mov
add
inc
add
cmp
daa
arpl
lcall
add
sbb
xchg
sbb
inc
add
push
pop
out
sub
pop
insl
adc
add
add
add
je
fnstenv
xchg
cmpsl
adc
and
into
icebp
add
pusha
add
sub
jo
int3
fidivrs
inc
add
cmp
add
in
jb
leave
out
dec
mov
in
push
or
add
add
add
aas
pop
out
add
in
mov
add
push
cmp
adc
sbb
add
sbb
pop
loopne
add
not
sbb
call
fwait
popa
add
jno
stc
and
mov
pop
outsl
in
inc
add
add
jae
xchg
jp
addl
xor
lods
fs
push
icebp
lock
jg
dec
dec
stos
roll
push
hlt
aad
cld
inc
add
cwtl
and
adc
add
in
add
les
jne
pushf
loop
inc
add
out
mov
test
sbb
sub
pop
add
ret
add
rolb
mov
mov
dec
ljmp
add
mov
add
pop
mov
adc
sub
mov
add
sub
addl
push
xor
cmp
ds
testl
add
jecxz
je
xor
mov
fdivrp
scas
sub
popa
add
movsb
dec
leave
cmp
xchg
mov
enter
add
inc
add
lcall
dec
lcall
jmp
xchg
cwtl
dec
test
icebp
lods
pop
add
test
scas
mov
arpl
xchg
rolb
cli
mov
or
cmp
sbb
mov
paddw
lahf
out
sbb
lods
roll
dec
loope
popf
jnp
jnp
add
inc
add
add
add
ja
repnz
stos
dec
mov
add
pop
pop
lods
xlat
cmp
insl
into
or
xchg
add
les
movsl
roll
jnp
fldlg2
sbb
add
pop
mov
add
jecxz
ja
add
sbb
add
popf
or
add
xor
sbb
mov
ret
add
frstor
add
rcrl
movsb
sahf
sub
add
mov
imul
lds
add
jnp
es
add
and
mov
call
mov
adc
pusha
add
lds
sbb
dec
mov
mov
add
dec
cs
add
lret
cmp
rolb
popa
add
repnz
shll
arpl
.byte
mov
