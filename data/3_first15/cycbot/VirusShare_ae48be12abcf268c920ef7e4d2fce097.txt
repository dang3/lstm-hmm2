mov
movsl
loopne
cmp
loopne
and
loopne
mov
loopne
cmpsl
mov
loopne
lods
cmpsl
loopne
add
loopne
mov
mov
loopne
xchg
cmpsl
loopne
jne
loopne
inc
movsl
loopne
aas
mov
loopne
or
loopne
mov
loopne
adc
loopne
or
loopne
mov
cmpsl
loopne
inc
mov
loopne
test
mov
mov
loopne
test
mov
movsl
loopne
and
loopne
lods
mov
loopne
call
mov
loopne
imul
mov
test
mov
test
mov
test
mov
mov
loopne
mov
loopne
lret
cmpsl
loopne
xor
loopne
repnz
loopne
push
loopne
sbb
loopne
lcall
mov
cmpsb
loopne
push
mov
loopne
shll
loopne
dec
cmpsl
loopne
test
loopne
mov
cmpsl
loopne
adc
mov
test
loopne
and
loopne
bound
loopne
add
loopne
loope
loopne
lahf
mov
loopne
and
loopne
sub
loopne
ret
cmpsl
loopne
pusha
cmpsb
loopne
mov
test
mov
cmpsb
loopne
add
loopne
fisubl
loopne
cwtl
movsl
loopne
lret
test
mov
movsl
loopne
cmp
loopne
inc
test
mov
mov
loopne
jle
loopne
ja
loopne
push
movsb
loopne
pusha
mov
loopne
push
mov
loopne
inc
cmpsb
loopne
mov
loopne
xor
test
mov
movsl
loopne
iret
cmpsl
loopne
shll
cmp
loopne
std
test
mov
movsb
loopne
push
test
mov
movsb
loopne
sub
loopne
mov
loopne
scas
movsl
loopne
shrb
mov
movsl
loopne
lds
loopne
xchg
loopne
jae
loopne
int3
mov
loopne
out
movsb
loopne
mov
cmpsl
loopne
mov
loopne
lds
loopne
jnp
loopne
insl
movsl
loopne
mov
test
mov
cmpsl
loopne
sahf
test
mov
movsl
loopne
nop
mov
loopne
shlb
loopne
addr16
push
cmpsl
loopne
push
mov
loopne
jo
loopne
jle
loopne
dec
movsl
loopne
jp
loopne
in
loopne
xchg
cmpsl
loopne
icebp
cmpsl
loopne
sbb
loopne
in
loopne
push
test
loopne
pop
movsb
loopne
mull
loopne
jns
loopne
icebp
movsb
loopne
adc
loopne
outsb
cmpsl
loopne
pop
mov
loopne
movsb
loopne
xor
mov
test
mov
cmpsl
loopne
pop
mov
loopne
xchg
test
mov
mov
loopne
sbb
loopne
shlb
mov
test
mov
cmpsl
loopne
bound
loopne
xor
loopne
cmp
loopne
cld
mov
loopne
sub
mov
loopne
dec
movsb
loopne
mov
loopne
fsubl
loopne
stos
mov
loopne
mov
loopne
out
loopne
xchg
mov
loopne
loope
loopne
or
loopne
cwtl
test
mov
cmpsl
loopne
sbb
loopne
mov
cmpsl
loopne
andb
mov
mov
loopne
stos
mov
loopne
adc
loopne
lret
movsl
loopne
dec
mov
loopne
ja
loopne
add
loopne
add
mov
loopne
movsl
loopne
leave
mov
loopne
int
loopne
and
loopne
mov
test
mov
mov
loopne
shlb
loopne
jg
loopne
xchg
cmpsl
loopne
inc
movsl
loopne
pop
movsb
loopne
sti
mov
loopne
movsb
mov
loopne
shll
loopne
ljmp
loopne
mov
loopne
push
mov
loopne
cmp
loopne
inc
mov
loopne
les
mov
test
loopne
jl
loopne
popf
mov
loopne
mov
loopne
cmc
mov
loopne
stos
movsb
loopne
pop
mov
loopne
out
loopne
adc
loopne
jb
loopne
nop
mov
loopne
fwait
mov
loopne
mov
loopne
cs
loopne
adc
movsl
loopne
adc
loopne
mov
loopne
cmp
loopne
cli
cmpsb
loopne
jl
loopne
mov
movsl
loopne
inc
test
mov
cmpsl
loopne
sbb
loopne
mov
loopne
lret
mov
mov
loopne
or
movsl
loopne
or
loopne
mov
loopne
xchg
movsb
loopne
xchg
cmpsb
loopne
add
loopne
inc
cmpsl
loopne
fisubl
loopne
push
movsb
loopne
lock
loopne
adc
loopne
push
movsl
loopne
pop
cmpsl
loopne
sub
loopne
xchg
movsb
loopne
mov
loopne
inc
movsl
loopne
dec
movsb
loopne
xor
loopne
bound
mov
cmpsb
loopne
push
test
loopne
jecxz
loopne
jb
loopne
jle
loopne
lahf
cmpsl
loopne
pop
movsb
loopne
loop
loopne
add
loopne
xor
loopne
push
mov
loopne
lock
loopne
mov
loopne
je
loopne
stc
cmpsl
loopne
or
mov
cmpsl
loopne
jp
loopne
cmpsl
loopne
ret
mov
movsb
loopne
pop
movsl
loopne
andb
mov
cmpsl
loopne
and
loopne
push
mov
loopne
adc
loopne
popf
test
mov
movsb
loopne
xor
loopne
cmpsl
loopne
mov
loopne
clc
mov
loopne
fisubs
loopne
add
mov
cmpsb
loopne
in
test
mov
mov
loopne
pop
mov
loopne
outsl
mov
loopne
and
loopne
sbb
loopne
and
mov
mov
loopne
popf
movsl
loopne
test
loopne
mov
loopne
sub
loopne
insl
mov
loopne
adc
loopne
mov
loopne
jbe
loopne
xchg
test
mov
test
loopne
dec
test
loopne
mov
loopne
sbb
loopne
test
mov
movsb
loopne
clc
mov
loopne
inc
mov
loopne
adc
mov
mov
loopne
lock
loopne
and
loopne
jnp
loopne
ljmp
mov
cmpsl
loopne
mov
cmpsb
loopne
xchg
cmpsb
loopne
pop
mov
loopne
popa
cmpsl
loopne
and
loopne
mov
loopne
pop
movsl
loopne
inc
mov
loopne
cmpsl
loopne
mov
loopne
call
cmpsb
loopne
or
loopne
lret
cmpsl
loopne
pop
cmpsb
loopne
sbb
loopne
cmp
movsb
loopne
push
movsb
loopne
iret
mov
loopne
mov
mov
cmpsl
loopne
nop
cmpsb
loopne
mull
loopne
push
mov
loopne
mov
test
loopne
sub
loopne
push
mov
loopne
clc
test
mov
mov
loopne
and
loopne
pushf
mov
loopne
out
loopne
pop
movsl
loopne
push
test
loopne
pop
movsl
loopne
add
loopne
int3
cmpsl
loopne
ja
loopne
add
loopne
in
loopne
push
movsl
loopne
xchg
movsl
loopne
mov
movsl
loopne
pop
cmpsb
loopne
dec
mov
loopne
and
loopne
dec
test
mov
mov
loopne
push
cmpsl
loopne
jl
loopne
jmp
movsl
loopne
adc
loopne
xchg
cmpsl
loopne
adc
loopne
shll
loopne
out
loopne
jmp
cmpsb
loopne
arpl
loopne
mov
mov
loopne
push
mov
loopne
cmp
loopne
loopne
loopne
cmp
loopne
mov
mov
loopne
mov
mov
movsl
loopne
movsl
loopne
sti
mov
loopne
in
loopne
xchg
movsl
loopne
mov
loopne
out
cmpsl
loopne
jbe
loopne
pop
test
mov
mov
loopne
add
loopne
fldenv
loopne
and
test
loopne
pop
movsl
loopne
repz
loopne
int3
test
mov
test
mov
mov
loopne
ljmp
mov
mov
loopne
dec
mov
loopne
movsb
cmpsl
loopne
cmpsb
loopne
lret
movsl
loopne
add
loopne
call
movsl
loopne
sbb
loopne
frstor
mov
cmpsl
loopne
dec
mov
loopne
mov
loopne
jg
loopne
jg
loopne
ja
loopne
adc
loopne
pop
cmpsb
loopne
push
movsb
loopne
inc
test
loopne
mov
mov
loopne
mov
test
loopne
scas
test
mov
cmpsl
loopne
pusha
cmpsb
loopne
adc
loopne
call
movsb
loopne
inc
movsl
loopne
inc
mov
loopne
mull
mov
test
mov
movsl
loopne
mov
loopne
push
movsb
loopne
pusha
movsb
loopne
push
movsb
loopne
test
loopne
cld
mov
loopne
push
test
mov
movsb
loopne
arpl
loopne
sub
loopne
mov
movsl
loopne
jnp
loopne
popa
mov
loopne
dec
cmpsl
loopne
test
movsb
loopne
inc
test
mov
movsb
loopne
sbb
loopne
leave
cmpsb
loopne
mov
test
mov
cmpsl
loopne
mov
loopne
scas
mov
loopne
scas
cmpsl
loopne
and
cmpsl
loopne
mov
movsb
loopne
fwait
test
mov
cmpsb
loopne
dec
mov
loopne
dec
mov
loopne
outsl
cmpsl
loopne
mov
movsl
loopne
add
loopne
insb
mov
loopne
pusha
movsl
loopne
aad
loopne
mulb
mov
mov
loopne
aam
loopne
cmc
cmpsb
loopne
pop
mov
loopne
loope
loopne
scas
mov
loopne
les
loopne
shrb
loopne
dec
mov
loopne
stos
mov
loopne
loopne
xchg
cmpsb
loopne
xor
loopne
dec
movsb
loopne
jmp
loopne
jb
loopne
or
loopne
sbb
loopne
push
loopne
cltd
test
mov
movsl
loopne
out
loopne
arpl
loopne
arpl
loopne
sbb
loopne
push
movsb
loopne
shll
loopne
xor
mov
cmpsl
loopne
dec
movsl
loopne
mov
loopne
sahf
movsb
loopne
int3
movsl
loopne
out
movsl
loopne
je
loopne
push
cmpsb
loopne
loope
loopne
outsb
cmpsl
loopne
cli
test
mov
movsb
loopne
shll
mov
mov
loopne
xor
loopne
in
mov
loopne
dec
movsl
loopne
jmp
loopne
jnp
loopne
xchg
mov
test
mov
movsb
loopne
jmp
mov
loopne
mov
cmpsb
loopne
mov
cmpsb
loopne
in
test
mov
movsb
loopne
movsl
cmpsl
loopne
fldenv
loopne
sub
loopne
icebp
mov
loopne
pushf
movsb
loopne
sbb
loopne
mov
cmpsb
loopne
push
test
loopne
jmp
cmpsb
loopne
push
cmpsl
loopne
lods
mov
loopne
xchg
movsl
loopne
xor
loopne
ja
loopne
jnp
loopne
pop
cmpsb
loopne
dec
cmpsl
loopne
mov
mov
loopne
fsubl
loopne
in
movsb
loopne
into
mov
loopne
sub
loopne
cmp
loopne
xlat
movsb
loopne
cmpsl
movsl
loopne
sahf
mov
loopne
sti
mov
loopne
fisubrl
loopne
in
loopne
xor
loopne
pop
test
loopne
adc
loopne
and
loopne
dec
mov
loopne
adc
loopne
sbb
cmpsb
loopne
insl
cmpsl
loopne
and
loopne
enter
xchg
cmpsl
loopne
shll
loopne
or
loopne
aam
loopne
jmp
loopne
aad
loopne
loopne
pushf
movsb
loopne
lret
cmpsl
loopne
cmpsl
loopne
and
loopne
dec
cmpsl
loopne
mov
loopne
pop
movsl
loopne
jb
loopne
pop
cmpsb
loopne
dec
mov
loopne
in
loopne
xchg
cmpsb
loopne
cmp
mov
mov
loopne
push
movsb
loopne
cmp
test
mov
cmpsb
loopne
adc
movsb
loopne
mov
loopne
mov
loopne
add
loopne
add
loopne
inc
cmpsb
loopne
adc
cmpsl
loopne
mov
loopne
push
movsb
loopne
repnz
loopne
ss
loopne
std
mov
loopne
repnz
loopne
pop
mov
loopne
daa
cmpsl
loopne
push
mov
loopne
cmpsb
mov
loopne
clc
movsl
loopne
push
mov
loopne
dec
cmpsl
loopne
pop
cmpsb
loopne
push
loopne
shrb
loopne
out
loopne
sub
loopne
jns
loopne
dec
test
loopne
mov
movsb
loopne
and
loopne
data16
loopne
inc
test
mov
mov
loopne
loop
loopne
lea
loopne
push
movsb
loopne
push
cmpsl
loopne
cmp
loopne
mov
loopne
cmp
mov
test
loopne
add
loopne
adc
loopne
addr16
mov
mov
loopne
frstor
loopne
shrl
loopne
out
mov
loopne
mov
test
loopne
test
loopne
aaa
mov
loopne
lahf
cmpsb
loopne
lea
loopne
movsb
movsb
loopne
adc
loopne
andb
mov
movsl
loopne
fisubs
loopne
jl
loopne
shll
loopne
loop
loopne
imul
lds
loopne
cmp
loopne
jge
loopne
bound
loopne
andb
mov
movsb
loopne
mov
loopne
adc
loopne
push
mov
loopne
add
mov
test
mov
mov
loopne
sbb
mov
test
mov
cmpsl
loopne
pop
mov
loopne
or
loopne
lea
loopne
fisubl
loopne
inc
test
loopne
leave
mov
loopne
popa
mov
loopne
inc
cmpsb
loopne
push
mov
loopne
movsl
loopne
mov
test
mov
movsl
loopne
xor
loopne
mov
test
mov
movsb
loopne
pop
mov
loopne
out
loopne
inc
movsl
loopne
push
test
loopne
cltd
movsl
loopne
push
mov
loopne
sbb
loopne
sahf
mov
loopne
aaa
movsb
loopne
jl
loopne
icebp
mov
loopne
daa
test
loopne
mov
movsb
loopne
stos
movsb
loopne
jbe
loopne
mov
loopne
push
test
loopne
adc
loopne
xor
loopne
ja
loopne
or
loopne
adc
loopne
cmp
loopne
into
movsb
loopne
fbld
mov
mov
loopne
mov
loopne
jecxz
loopne
mov
loopne
sbb
loopne
ja
loopne
shll
mov
movsb
loopne
sub
loopne
stos
movsb
loopne
push
movsl
loopne
and
loopne
outsl
test
mov
movsb
loopne
mov
movsl
loopne
xchg
cmpsb
loopne
out
cmpsb
loopne
mov
loopne
test
loopne
inc
cmpsb
loopne
cltd
movsb
loopne
daa
test
mov
cmpsb
loopne
lret
movsl
loopne
ret
mov
movsl
loopne
sbb
loopne
stos
cmpsb
loopne
jl
loopne
mull
loopne
inc
mov
loopne
push
cmpsb
loopne
daa
movsl
loopne
outsb
movsl
loopne
inc
cmpsb
loopne
jmp
loopne
jmp
cmpsb
loopne
pop
cmpsb
loopne
and
loopne
or
mov
loopne
out
loopne
lods
movsb
loopne
fsubrs
loopne
scas
mov
loopne
movsl
loopne
fwait
cmpsl
loopne
loope
loopne
sbb
loopne
repnz
loopne
pop
movsl
loopne
mov
cmpsb
loopne
scas
mov
loopne
dec
test
mov
cmpsl
loopne
adc
movsl
loopne
mov
loopne
inc
mov
loopne
inc
cmpsl
loopne
jg
loopne
push
test
loopne
mov
test
mov
test
loopne
mov
loopne
xcrypt-cfb
mov
movsl
loopne
pop
movsb
loopne
adc
loopne
pop
mov
loopne
push
test
mov
mov
loopne
and
loopne
stos
mov
loopne
mov
loopne
test
loopne
push
cmpsl
loopne
leave
cmpsl
loopne
subb
mov
movsb
loopne
inc
cmpsl
loopne
xchg
mov
loopne
sbb
loopne
push
mov
loopne
or
loopne
fsubl
loopne
cmp
loopne
outsl
mov
loopne
aam
loopne
cmp
loopne
push
test
mov
mov
loopne
adc
loopne
out
loopne
cltd
mov
loopne
les
mov
test
mov
mov
loopne
popf
movsl
loopne
mov
loopne
xchg
test
mov
mov
loopne
mov
cmpsb
loopne
mov
cmpsl
loopne
movsb
mov
loopne
xchg
loopne
andb
mov
mov
loopne
sub
loopne
leave
movsl
loopne
fisubl
loopne
cmp
loopne
sub
movsl
loopne
or
loopne
cltd
mov
loopne
cmc
test
mov
mov
loopne
shlb
sub
mov
loopne
push
cmpsb
loopne
and
loopne
mov
loopne
mov
test
mov
movsb
loopne
mov
loopne
stc
test
mov
mov
loopne
scas
movsb
loopne
scas
cmpsb
loopne
dec
test
loopne
mov
test
mov
mov
loopne
pop
mov
loopne
pop
test
loopne
loop
loopne
lea
loopne
or
mov
test
loopne
shlb
mov
mov
loopne
inc
cmpsb
loopne
mov
loopne
andl
mov
cmpsb
loopne
sub
loopne
sub
loopne
shlb
loopne
push
test
loopne
jno
loopne
je
loopne
add
loopne
andl
loopne
insl
movsb
loopne
loop
loopne
sub
loopne
sti
mov
loopne
sbb
loopne
or
loopne
out
loopne
nop
cmpsb
loopne
jo
loopne
test
movsl
loopne
dec
cmpsb
loopne
push
mov
loopne
inc
cmpsb
loopne
mov
loopne
xor
mov
mov
loopne
loopne
addr16
or
loopne
lret
mov
cmpsb
loopne
mov
test
mov
mov
loopne
jecxz
loopne
jne
loopne
iret
movsb
loopne
xchg
mov
cmpsb
loopne
jmp
loopne
jo
loopne
jns
loopne
inc
cmpsb
loopne
sbb
mov
loopne
and
movsl
loopne
adc
loopne
mov
loopne
mov
loopne
jbe
loopne
shlb
mov
mov
loopne
dec
test
mov
cmpsb
loopne
jmp
loopne
mov
loopne
inc
movsl
loopne
movsb
loopne
pop
mov
loopne
xchg
loopne
jne
loopne
sbb
loopne
cmp
loopne
fsubs
loopne
shll
loopne
inc
mov
loopne
fsubs
loopne
mov
loopne
int3
movsl
loopne
dec
cmpsl
loopne
int3
mov
loopne
cmp
loopne
xor
loopne
push
cmpsb
loopne
mov
loopne
cmp
loopne
out
cmpsb
loopne
stos
mov
loopne
adc
loopne
mov
loopne
jecxz
loopne
push
cmpsb
loopne
into
cmpsb
loopne
lds
loopne
aam
loopne
movsl
loopne
outsb
movsl
loopne
int
loopne
sub
movsb
loopne
movsl
loopne
add
loopne
mov
loopne
pop
movsb
loopne
pop
cmpsb
loopne
adc
loopne
in
cmpsb
loopne
in
movsl
loopne
shlb
je
loopne
and
loopne
lahf
cmpsb
loopne
sub
loopne
add
test
mov
mov
loopne
mov
loopne
movsb
test
mov
movsb
loopne
sub
loopne
adc
loopne
ljmp
mov
movsb
loopne
in
loopne
lret
mov
movsl
loopne
sbb
loopne
xor
mov
loopne
jmp
mov
loopne
call
test
loopne
popf
movsl
loopne
jmp
cmpsb
loopne
and
mov
loopne
cmpsb
mov
loopne
imul
loopne
pop
movsb
loopne
push
mov
loopne
mov
mov
loopne
add
loopne
add
loopne
andl
mov
mov
loopne
adc
loopne
int3
test
mov
mov
loopne
jb
loopne
fsubs
loopne
jl
loopne
lret
cmpsb
loopne
mov
loopne
and
loopne
test
mov
cmpsl
loopne
shld
mov
mov
loopne
sub
movsb
loopne
xchg
mov
cmpsb
loopne
mulb
loopne
mov
loopne
xchg
movsb
loopne
mov
cmpsb
loopne
pop
mov
loopne
inc
mov
loopne
mov
cmpsl
loopne
out
cmpsl
loopne
andb
mov
test
mov
movsl
loopne
fldt
loopne
andb
mov
movsl
loopne
jecxz
loopne
out
loopne
outsb
movsb
loopne
adc
loopne
into
jl
clc
popf
clc
cs
fcomps
not
sbb
dec
cmp
mov
pop
jns
add
cmp
add
add
jnp
mov
add
push
add
fsubrs
add
clc
sar
clc
stos
jbe
clc
adc
add
add
jmp
enter
out
lahf
xlat
fdivrs
add
sub
clc
repnz
mov
out
cmp
cld
mov
and
jns
add
ja
int3
cmp
mov
lahf
xlat
xor
out
push
clc
sbb
pop
out
xchg
lret
pop
pop
rcr
ss
bound
add
add
push
mov
cmp
in
mov
lock
add
pop
cwtl
dec
clc
xchg
cwtl
sbb
mov
clc
xor
add
nop
mov
jbe
clc
adc
add
add
adc
add
leave
and
add
xabort
add
add
pushl
bound
add
clc
mov
add
gs
aad
movsb
clc
xor
add
clc
dec
clc
and
pop
enter
add
test
sar
ljmp
xbegin
add
sahf
outsl
dec
nop
jb
add
cmp
in
scas
clc
iret
faddl
cmp
adc
lock
mov
clc
lcall
or
daa
clc
fs
or
push
mov
and
add
jnp
or
insb
cmp
mov
jecxz
jge
cmp
add
and
add
clc
adc
add
add
mov
add
jg
cld
idivl
sub
add
adc
add
add
movsl
clc
scas
ljmp
mov
add
lahf
sar
clc
cmp
add
add
clc
or
push
clc
loope
pop
int
or
cmp
add
add
push
in
sbb
ja
mov
add
cli
movsl
clc
adc
add
ret
clc
cs
sub
out
aad
cli
push
aas
sbb
int
xabort
xbegin
repz
xor
cmp
clc
mov
ja
xor
add
test
adc
clc
pop
xabort
loopne
movsl
clc
lods
outsb
jae
add
mov
sub
sahf
push
add
push
clc
xlat
jp
clc
pop
cmpsl
clc
mov
leave
pop
ljmp
add
xlat
cmpsl
clc
mov
clc
sbb
adc
add
out
jl
cmp
add
dec
adc
add
and
add
clc
cmp
loopne
cmp
add
mov
add
cld
xchg
pop
inc
clc
out
push
xlat
loopne
xchg
shrb
add
mov
mov
dec
pusha
add
jbe
inc
clc
add
add
jge
outsb
pop
cld
lahf
inc
clc
add
dec
adc
ja
sub
enter
clc
mov
add
add
inc
add
inc
clc
mov
jno
add
sbb
fucomp
push
clc
repnz
push
adc
mov
pop
cmpsb
clc
fucomip
cld
fiaddl
clc
mov
mov
clc
cmp
into
fldl
add
and
mov
add
jno
add
outsl
inc
clc
xchg
out
cmpsl
clc
jle
clc
stc
in
push
and
add
out
mov
mov
out
dec
push
leave
sbb
hlt
jecxz
sub
clc
push
fisubrs
add
jl
data16
lret
mov
movsb
clc
lcall
sti
sub
cmc
imul
clc
mov
cmpsb
clc
cmp
pop
insb
leave
out
data16
lea
inc
add
sbb
lods
mov
jecxz
hlt
in
push
mov
mov
mov
movsb
clc
jl
adc
add
ret
clc
jmp
pop
xchg
mov
sub
cmp
clc
stos
pop
cmp
imul
sarl
clc
iret
aad
clc
scas
fstpt
addr16
push
mov
clc
xchg
aad
add
cld
popa
add
fdivrs
add
pop
jle
clc
mov
or
add
add
and
add
push
dec
insl
cmp
data16
inc
add
cmpsl
clc
add
add
add
clc
mov
cmp
xor
iret
sbb
pop
repz
clc
jne
or
data16
sbb
add
xlat
daa
clc
xor
add
sar
int3
arpl
add
movsb
clc
fcompl
in
in
jbe
daa
clc
jmp
inc
add
aaa
outsb
sub
add
mov
jecxz
push
add
clc
pop
mov
clc
dec
hlt
call
add
in
adc
add
adc
add
xchg
das
cmp
add
pop
pushl
enter
add
add
ljmp
add
clc
pop
or
sahf
xchg
sahf
cs
mov
in
jmp
add
cs
jae
add
out
jmp
and
mov
mov
mov
jmp
and
add
mov
ja
pop
imul
clc
cmp
push
clc
jmp
add
in
mov
ss
fidivrl
dec
adc
add
movsb
clc
lahf
std
nop
sbb
add
lcall
xor
add
add
push
add
or
test
fisubs
clc
or
outsl
int
clc
or
cmp
mul
clc
shrb
push
add
frstor
add
sub
clc
jo
add
clc
mov
clc
xchg
sarl
shld
out
std
pushf
ljmp
iret
in
std
imul
add
mov
xchg
adc
js
clc
xchg
add
test
sbb
cs
jmp
clc
pop
adc
add
fs
push
popf
add
add
add
add
dec
test
hlt
sar
int3
mov
loope
xchg
arpl
add
add
clc
in
and
add
add
xor
leave
sar
add
dec
ss
add
clc
pop
sub
add
adc
add
mov
xor
xlat
cmc
xchg
sub
clc
std
and
pop
jl
cmp
pop
into
fbstp
fisubl
clc
arpl
add
clc
dec
and
add
add
dec
pop
xor
add
add
cmp
mov
dec
mov
mov
stos
pop
cli
xchg
jge
clc
push
pop
stos
lods
push
add
lret
clc
push
add
add
add
mov
lock
sbb
add
fdivrl
and
add
push
inc
clc
fstl
add
add
add
pop
pusha
add
nop
push
add
test
xlat
gs
ret
clc
rolb
add
push
xchg
push
dec
aad
jmp
in
into
cmpsb
clc
scas
mov
add
xbegin
and
add
clc
sub
jns
clc
add
imul
sub
js
dec
sbb
dec
dec
pop
das
sub
movsl
clc
cmp
add
inc
clc
xabort
mov
clc
incl
clc
ja
cmpsb
clc
mov
mov
xchg
xchg
sbb
ja
jbe
add
xchg
scas
out
pusha
add
pop
nop
cmp
mov
cwtl
jno
add
imull
add
xchg
scas
pop
loopne
imul
clc
inc
add
cmp
fsts
add
imul
add
inc
clc
lock
cmc
cmpsb
clc
in
adc
add
lea
and
ds
add
arpl
add
add
in
inc
clc
nop
dec
lcall
clc
jl
add
stc
pop
cmp
mov
push
adc
add
fstl
add
cmpsb
clc
lods
and
lods
and
add
clc
jp
outsl
pop
sub
pop
stos
rorl
or
cli
push
jne
loop
popl
add
xbegin
add
nop
lret
and
add
clc
add
add
sub
clc
insl
cmp
push
clc
adc
xor
add
je
mov
cld
inc
add
adc
add
lret
dec
int3
rcr
cmpsb
clc
stos
and
add
add
add
inc
clc
insb
fnstsw
add
stc
movsb
clc
cmc
pop
jp
add
das
repnz
inc
clc
sar
leave
push
push
clc
sub
adc
add
scas
xor
add
clc
fidivs
add
sar
and
add
add
add
clc
test
cmp
loopne
xchg
ds
stc
movsl
clc
in
pop
and
arpl
add
sbb
hlt
dec
inc
clc
repz
outsl
sbb
imul
pop
xchg
and
add
cmp
clc
push
push
and
add
add
sub
gs
fcomip
repnz
push
adc
cmp
dec
sbb
clc
and
mov
clc
mov
cs
insb
xchg
aas
shrl
inc
add
std
sbb
shlb
add
movsb
clc
inc
add
xrelease
add
push
call
add
stos
sub
testb
mov
adc
add
add
loopne
xchg
jle
xchg
fsubrs
push
add
xbegin
mov
jne
push
pop
mov
add
or
cmp
mov
push
bound
add
popf
ret
sub
add
ja
clc
xchg
ret
pop
clc
adc
add
or
dec
or
outsb
test
mov
add
loop
or
add
xbegin
outsb
mov
adc
add
bound
add
clc
cmpsb
clc
cld
xabort
clc
clc
push
add
cmp
pusha
add
lods
sar
xchg
test
clc
inc
clc
sbb
add
xor
add
or
add
push
xor
sar
sbb
lods
add
add
clc
sar
clc
inc
clc
repnz
add
cmp
clc
fildll
xchg
wbinvd
out
inc
clc
inc
add
out
stos
pop
mov
or
clc
inc
clc
xchg
xchg
xchg
pop
stc
in
test
clc
add
add
lods
cltd
mov
lock
sbb
add
popa
add
fs
psubusw
sub
aam
xchg
lahf
in
xchg
cmp
mov
cmp
ljmp
dec
loopne
xchg
jge
fistps
add
push
jg
data16
lret
and
add
or
clc
sbb
shll
inc
add
sbb
add
dec
xbegin
add
jmp
out
lods
or
sub
clc
scas
pop
xchg
mov
clc
xabort
clc
xchg
cmc
inc
add
xor
add
inc
add
fcomps
add
sub
xor
add
push
clc
sbb
fsubp
clc
daa
clc
lods
sbb
xchg
inc
add
push
add
loop
push
mov
cwtl
jg
lret
inc
clc
sti
jg
clc
sbb
pop
xor
fdivp
leave
movsl
clc
ljmp
mov
pushl
add
or
add
and
add
dec
pop
mov
add
cmp
int
adc
add
repz
sbb
clc
xlat
in
cmp
inc
add
cmc
mov
clc
mov
mov
enter
sahf
xor
add
push
add
xor
add
int
add
pop
push
clc
jns
mov
mov
xchg
sub
clc
repnz
xor
add
cmp
add
clc
sbb
add
out
jbe
mov
add
enter
cmp
lods
xchg
gs
aaa
dec
xchg
in
cmp
xor
mov
dec
and
add
jbe
aam
push
and
clc
mov
pop
or
in
xor
add
add
loop
mov
cli
aad
mov
cld
std
cmp
jp
add
loope
jmp
clc
ret
clc
imul
mov
clc
xchg
pop
popa
add
fidivl
shll
mov
mov
cmpsb
clc
sbb
cmp
mov
clc
aas
push
ret
ds
nop
out
pop
pop
xor
add
cmp
add
add
lods
fnsave
imul
add
and
add
pop
fisubrs
xchg
fcomps
clc
repz
lea
jns
adc
movsl
clc
fcomps
clc
xbegin
mov
xlat
dec
and
mov
jbe
cmc
outsl
cltd
fdivl
notb
mov
pop
in
ja
call
sbb
stc
xchg
test
add
add
xchg
out
sbb
jnp
clc
imul
clc
enter
loope
cld
aam
sub
cmc
out
cmp
add
inc
add
imul
hlt
pop
negb
test
cwtl
fstpl
clc
pop
mov
add
jp
enter
push
pop
push
mov
fs
shl
clc
std
jno
add
movsb
clc
pop
clc
add
inc
mov
lds
mov
push
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
nop
nop
nop
nop
nop
mov
push
push
je
mov
adc
add
ret
pop
jmp
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
mov
add
push
ret
add
int
xor
add
mov
add
fldt
and
add
add
add
mov
sbb
cld
jmp
jg
xchg
or
mov
mov
cwtl
cmpsb
clc
mov
add
add
add
dec
pusha
add
dec
loop
inc
clc
jo
add
cld
jmp
lea
je
clc
test
jno
add
out
sub
clc
dec
insb
push
add
test
add
sar
lret
or
inc
clc
and
scas
hlt
ds
sub
push
add
cltd
outsb
sar
pop
xchg
rclb
inc
add
mov
add
aas
jge
clc
jo
add
jmp
add
cmp
popa
add
ror
inc
add
adc
add
clc
xor
dec
push
add
and
insb
push
outsl
sti
arpl
add
sub
cmp
sub
add
add
cltd
std
rolb
adc
add
clc
lock
and
mov
add
clc
in
dec
stc
inc
clc
add
insl
and
add
add
lret
out
push
add
fiadds
add
clc
mov
out
in
jp
mov
iret
push
xchg
push
jmp
pop
sub
add
clc
xchg
test
jne
push
mov
mov
inc
jno
movsl
pop
testb
sub
mov
ja
dec
mov
xchg
mov
loope
mov
add
or
mov
clc
mov
cmp
mov
dec
push
pop
cmp
add
add
movsb
clc
adc
add
dec
mov
daa
clc
fsubr
jl
out
xor
add
clc
jle
cmp
mov
pop
int3
dec
xor
add
int
nop
dec
dec
lea
add
mov
mov
clc
into
xor
add
sar
stos
pop
pop
jge
fcoml
inc
clc
movsb
clc
test
mov
clc
daa
clc
pop
clc
jmp
enter
clc
in
mov
movsb
clc
or
push
add
cwtl
movsb
clc
cmp
xor
add
sti
inc
clc
xchg
out
mov
add
fsubrs
pop
add
add
add
inc
clc
xchg
cmp
mov
add
adc
add
add
fcomip
out
sbb
xchg
and
add
add
add
clc
loopne
stc
sub
cltd
cmp
stos
dec
pop
scas
fimuls
clc
push
add
clc
push
call
cld
jmp
xchg
add
jmp
xchg
jmp
jmp
shrl
aas
or
xor
add
ja
mov
ss
ret
aas
sub
adc
add
mov
add
sub
and
add
lahf
gs
dec
fstpt
clc
pop
stos
sub
in
inc
add
mov
mov
cld
jmp
mov
stos
xchg
pop
jp
jb
add
add
clc
cmp
clc
cmpsb
clc
xchg
mov
jecxz
jno
add
mov
sub
test
jmp
pop
ja
add
adc
add
add
xchg
cmpsl
clc
aad
clc
sbb
clc
shlb
clc
daa
clc
pop
cltd
cwtl
jp
push
mov
test
xor
jp
add
or
xor
and
add
push
rcrb
pop
pop
ret
movsl
clc
icebp
xchg
pop
incb
cmp
add
add
mov
stos
mov
clc
push
fwait
cmp
out
push
inc
clc
pop
lcall
sub
add
mov
pop
xchg
sar
add
stc
scas
sub
addr16
dec
lgs
mov
xbegin
add
cld
jmp
lods
sub
cmp
jne
mov
in
add
mov
add
test
pop
adc
das
dec
push
aas
inc
add
lea
mov
aam
clc
insl
dec
es
movsl
clc
add
daa
clc
add
add
add
sbb
js
scas
fists
popa
add
into
jmp
add
call
cld
jmp
jno
sub
add
add
push
dec
gs
ss
mov
mov
mov
inc
clc
popa
add
mov
hlt
sar
lret
shrl
neg
out
stos
arpl
add
clc
int3
cmp
scas
out
ret
clc
dec
xlat
push
add
ds
pushf
sbb
jnp
fwait
xchg
mov
add
clc
jmp
loopne
or
mov
mov
xchg
fucomp
cli
and
add
clc
ja
clc
jbe
dec
test
clc
push
mov
cld
jmp
sub
ja
mov
pop
jg
sar
lods
pop
fs
cmp
pushf
imul
clc
jbe
push
add
mov
clc
inc
clc
sbb
xor
add
xor
add
clc
in
and
add
adc
add
ret
clc
rorl
pop
cltd
loope
rorb
add
vucomiss
sbb
add
cld
sahf
js
clc
jp
add
add
add
xor
add
divb
add
cmpsl
clc
stc
sbb
cmp
push
imul
clc
in
and
add
add
mov
xor
add
clc
add
add
in
add
add
xlat
out
fnstcw
cld
jmp
insb
test
rep
cld
jmp
inc
mov
xor
inc
add
nop
test
clc
leave
arpl
add
clc
mov
add
add
dec
or
pop
fidivrl
push
add
imul
out
push
and
add
js
xabort
add
dec
es
sarl
call
inc
add
cmp
sti
sar
cltd
rclb
add
add
add
lret
xchg
push
pop
sbb
cmc
cmp
mov
add
xlat
rclb
mov
add
dec
mov
add
jb
add
ds
cld
jmp
inc
xchg
repz
add
clc
xlat
cmp
xor
add
jae
add
imul
jmp
jg
outsl
icebp
fdivl
mov
add
cmp
or
adc
leave
inc
add
xlat
out
inc
add
dec
dec
pop
loop
stc
rcrl
add
and
add
clc
fisubl
loopne
divb
add
lcall
add
add
rcll
and
jmp
adcb
fldcw
add
jecxz
xchg
inc
clc
data16
sbb
clc
fs
imul
add
cld
jmp
insb
jno
aaa
stos
clc
int3
aaa
sti
or
clc
in
adc
add
clc
lret
cltd
fstl
test
cmc
enter
fdivl
add
xchg
xor
add
aad
add
in
mov
fs
mov
lahf
outsb
or
jnp
mov
sub
adc
add
jp
scas
and
add
dec
repnz
popa
add
aam
add
loope
fcoml
add
pop
jmp
mov
add
mov
pop
and
insl
sbb
jae
add
jno,pn
add
mov
add
or
mov
add
add
dec
inc
add
jno
add
imul
add
xor
add
shll
add
or
add
fistl
je
popa
add
mov
cwtl
insl
adc
add
add
adc
add
jl
jg
add
cmc
sbb
or
or
dec
ds
lret
imul
clc
jg
mov
add
cld
jmp
jo
add
fistl
mov
aad
add
pop
cmp
stc
aam
clc
and
add
mov
mov
out
xchg
test
xchg
cmpsl
clc
ds
cmp
test
fsubs
clc
std
sbb
insb
lcall
clc
sar
clc
aas
jno
add
mov
add
adc
add
clc
add
add
cwtl
cwtl
dec
adc
add
clc
adc
add
add
clc
jp
clc
push
ds
add
adc
add
add
mov
clc
xbegin
fwait
jecxz
jp
add
push
jle
add
add
mov
add
ret
clc
cmp
rorb
sbb
movsl
cld
jmp
andb
jp
sbb
test
add
cld
jmp
jbe
js
in
lcall
clc
lea
xchg
outsl
sbb
add
mov
ss
ret
sub
stc
xchg
cmp
movsl
clc
movsb
clc
hlt
jle
adc
add
add
stos
cmp
clc
inc
add
je
add
add
roll
clc
push
push
cld
jmp
sub
lcall
add
js
add
mov
clc
xchg
sub
clc
adc
add
sti
out
rorl
hlt
mov
mov
clc
or
add
sar
xchg
sar
add
es
arpl
add
push
mov
jne
clc
add
jo
add
lea
add
or
clc
mov
clc
clc
test
jle
popa
add
sbb
addb
push
sub
lods
lret
mov
xchg
xor
add
into
dec
and
add
test
fwait
sbb
add
inc
clc
cli
mul
clc
stc
outsb
int3
sbb
mov
fdivs
add
add
add
add
or
cmpsb
clc
popf
and
add
add
scas
push
mov
add
xor
add
add
loopne
mov
add
and
add
lret
jo
add
sbb
mov
add
xor
retw
jnp
cli
test
or
call
fs
cmp
sbb
je
inc
clc
decb
repz
addr16
xchg
in
mov
in
jp
rcrl
add
mov
pop
adc
mov
imul
add
arpl
add
push
jg
add
dec
je
clc
fisttps
cmp
pusha
add
pop
mov
xchg
insl
push
add
pop
je
clc
and
add
add
add
jb
add
push
add
push
test
mov
jmp
or
je
add
add
mov
movzwl
cld
jmp
push
mov
dec
lret
shll
cmp
cmp
clc
std
pop
shlb
inc
clc
jno
add
daa
clc
int
clc
leave
jl
adc
add
int3
negl
outsl
mov
add
jae
add
outsb
mov
adc
add
add
cmp
add
jge
pop
cmp
out
mov
ss
ret
sahf
inc
sbb
lods
test
aad
mov
add
sbb
add
addr16
sub
loop
add
add
add
jp
add
fcmovnu
or
clc
sub
inc
clc
iret
mov
pop
inc
add
push
add
jb
add
test
loopne
in
stc
jo
add
add
xbegin
cld
cli
repz
add
sub
flds
aaa
in
popf
test
or
push
ds
add
das
sub
jge
sbb
jp
test
clc
out
and
add
or
jae
add
add
cmp
cld
jmp
or
clc
gs
out
xlat
je
sub
loopne
pop
xlat
push
push
mov
jns
clc
sub
clc
pop
fimull
outsl
xchg
jmp
aaa
xbegin
xabort
shlb
inc
clc
std
xor
add
into
jo
add
cmp
cld
jmp
das
inc
sub
clc
jmp
add
sub
adc
add
shr
out
jmp
mov
cld
jmp
xchg
sbb
jo
add
add
pop
cmp
add
movsb
clc
cmp
jmp
jge
clc
pop
addr16
fwait
outsb
mov
add
das
cwtl
std
test
cwtl
inc
add
cmp
clc
shll
icebp
cwtl
adc
add
icebp
mov
adc
add
add
mov
mov
clc
sbb
add
clc
out
jl
ret
clc
pop
std
or
jmp
test
fwait
lahf
pop
fisttps
xbegin
adc
add
data16
stos
or
ss
dec
mov
int
clc
mov
adc
add
fildll
mov
arpl
add
jp
lods
mov
inc
add
scas
clc
fcomps
loopne
ss
add
je
sbb
clc
clc
cmpsl
clc
dec
inc
clc
repnz
mov
add
push
repnz
jl
push
clc
daa
clc
xchg
and
add
and
xbegin
cld
jmp
das
push
sub
add
pop
repnz
cmp
clc
inc
add
inc
clc
sar
add
jo
add
jnp
xor
add
dec
rcr
stos
push
add
js
clc
out
outsb
add
add
clc
mov
inc
add
movsb
mov
pop
and
add
daa
clc
adc
add
add
add
add
add
stos
jb
add
nop
jns
movsl
clc
xchg
xchg
add
cmp
clc
pop
aad
add
mov
clc
mov
test
pusha
add
cld
jmp
mov
sti
lea
stos
pop
and
dec
xchg
inc
add
fisubl
add
xchg
sahf
ja
add
jp
ljmp
add
adc
add
pop
jbe
call
add
decl
test
sub
add
jmp
pop
int3
imul
add
add
cld
jmp
add
fistl
push
aaa
movsb
clc
push
clc
or
clc
inc
clc
fwait
xchg
sbb
push
pop
loop
pop
inc
add
mov
dec
lret
jmp
xor
add
adc
add
add
add
add
clc
outsl
addr16
cld
mov
clc
mov
sub
mov
cld
jmp
lods
mov
xabort
sahf
ret
clc
dec
lret
sbb
fldl
add
pop
push
add
iret
flds
test
add
fiaddl
add
add
jbe
mov
cmp
and
add
cld
adc
add
inc
clc
rcll
add
add
cmp
rcll
add
sub
clc
ds
pop
test
add
stos
mov
xlat
inc
clc
stos
aaa
pop
clc
ret
clc
test
push
sub
mov
aas
std
xchg
cmp
inc
clc
inc
clc
cmpsl
clc
jb
add
clc
iret
fwait
mov
jmp
sub
mov
mov
cld
jmp
inc
ja
clc
rorl
pusha
add
jne
pop
clc
clc
cmp
clc
jnp
clc
push
gs
xchg
pop
or
clc
cmpsb
clc
cmp
clc
mov
add
clc
pushf
mov
jmp
sub
xchg
lods
stc
scas
xor
stos
cmpsb
clc
cmpsb
clc
add
add
ret
clc
loop
adc
add
xor
pop
xchg
int3
push
rep
ss
ret
and
call
sbb
out
xchg
xor
add
stos
or
pop
jae
jmp
push
sbb
clc
mov
jne
mov
insl
fsts
add
mov
adc
add
inc
add
adc
add
clc
inc
add
decl
test
sbb
add
jmp
aas
dec
and
je
mov
scas
mov
fsubrs
sbb
add
clc
movsb
clc
scas
or
out
decl
cld
jmp
jp
imul
jg
add
add
add
clc
lods
lret
stc
mov
cmp
sub
add
push
add
mov
clc
ficoml
clc
push
push
add
pop
ficomps
xlat
pusha
add
into
hlt
je
sbb
clc
xchg
inc
add
xor
add
add
in
sti
clc
mov
loop
stos
sbb
clc
jo
add
mov
clts
clc
or
push
add
inc
add
push
and
add
insl
movsl
clc
out
xor
add
cld
jmp
xchg
test
sbb
fisubl
add
cmpsb
add
data16
or
add
xlat
jo
add
jle
clc
mov
add
jne
add
sbb
lods
or
add
cmpsl
clc
ss
pusha
add
jae
add
add
icebp
dec
and
add
loop
lods
inc
add
iret
push
push
add
sub
add
dec
jb
add
test
inc
clc
cs
hlt
push
mov
push
pop
clc
int3
xor
add
add
inc
clc
mov
xor
add
ds
clc
test
add
add
jno,pt
add
add
fs
fnsave
jp
adc
test
add
cld
jmp
ret
cld
jmp
sub
insb
ja
dec
cmp
movsb
clc
sub
cmp
add
movsb
clc
mov
jb
add
pop
pusha
add
out
cmp
jbe
clc
data16
shll
jge
sbb
adc
add
sar
clc
or
daa
clc
lahf
in
add
add
jle
daa
clc
adc
jne
cld
jmp
fprem
mov
fdivrp
mov
add
pusha
add
nop
or
mov
jmp
clc
sub
mov
add
ret
clc
dec
xor
add
clc
xor
add
add
jne
add
dec
test
clc
pusha
add
aam
adc
xchg
inc
clc
rcrl
lcall
test
ret
sahf
cs
clc
shrd
clc
add
add
add
fimull
fs
clc
mov
add
jmp
add
clc
xor
add
scas
nop
jnp
add
add
int
add
push
cmpsl
clc
into
or
mov
clc
sahf
adc
add
xchg
sbb
clc
jmp
mov
js
clc
popa
add
stos
loop
cmp
or
call
mov
dec
jno
add
scas
rorb
ds
dec
mov
outsl
xchg
scas
daa
clc
xchg
fnsave
clc
aaa
fadd
clc
fidivs
add
inc
add
int3
ds
sub
inc
add
mov
jmp
fs
mov
clc
sbb
clc
dec
xor
add
clc
rcrl
xchg
sti
xchg
mul
clc
outsb
jl
jl
add
add
clc
out
cmp
loop
and
add
add
add
mov
clc
inc
clc
data16
out
insl
ds
sub
add
adc
add
and
add
add
ljmp
push
add
das
pop
in
mov
and
mov
ret
out
xor
add
add
push
add
cld
jmp
mov
pop
ja
add
mov
add
call
clc
stc
pop
sbb
add
jmp
or
mov
add
sbb
lcall
add
add
pop
insb
scas
mov
mov
adc
push
ret
add
test
add
insb
xabort
jae
add
clc
sbb
pop
adc
add
sub
pop
test
push
cmp
pop
push
ss
ret
sub
clc
ljmp
add
adc
add
int
and
add
clc
cmpsl
clc
mov
add
inc
clc
jo
add
mov
add
add
xchg
in
mov
clc
mov
sub
add
arpl
add
rcll
add
add
in
cmp
sbb
ss
add
leave
jbe
bound
add
add
leave
mov
clc
divl
xchg
pop
out
dec
inc
clc
movsl
clc
ret
and
add
pusha
add
fdivrl
clc
add
cwtl
xchg
fidivrs
aam
addr16
lock
mov
inc
and
cld
jmp
sub
xor
add
test
cld
jmp
scas
xchg
std
into
dec
addr16
inc
cld
jmp
sub
and
pop
stos
sub
jno
add
pop
mov
xabort
clc
je
pushf
mov
sbb
sub
clc
adc
add
add
add
sar
repz
mov
cld
jmp
sbb
add
cmp
add
hlt
cwtl
popa
add
pop
xor
xor
add
xor
cld
jmp
pushw
add
arpl
add
movsl
clc
dec
outsb
dec
incl
repnz
pushl
push
push
sbb
jb
add
cmc
cmp
add
clc
cmp
clc
cmp
adc
add
in
neg
into
stos
dec
outsb
scas
ret
clc
rcl
dec
mov
cld
jmp
dec
das
es
cmp
mov
jmp
sbb
not
fiaddl
add
add
sahf
mov
clc
push
clc
sti
ds
mov
js
dec
jns
dec
cmp
sbb
test
xor
clc
dec
lret
pop
cmp
popf
outsb
jnp
mov
fsubl
lcall
clc
mov
mov
add
inc
clc
dec
fldcw
je
clc
lahf
call
add
clc
or
out
cmp
jg
lock
add
clc
xchg
pop
clc
dec
mov
add
cld
jmp
jmp
or
add
cmp
jmp
xchg
jge
lahf
xchg
xor
sbb
pop
pop
aam
js
and
add
add
push
add
push
mov
cld
jmp
nop
mov
clc
sub
jmp
add
add
clc
movsb
clc
bound
add
mov
clc
add
add
bound
add
scas
stc
jo
add
dec
mov
clc
mov
ror
sub
add
fbstp
inc
clc
insb
cmp
sbb
cmp
clc
mov
cld
jmp
pop
or
add
add
add
or
add
popf
xor
lret
rcrl
pop
das
bound
add
add
sbb
clc
mov
and
jmp
aas
pop
jp
iret
sarl
outsb
pop
test
test
jp
mov
add
cmp
xlat
fucomp
xor
add
fiadds
clc
mov
inc
add
jle
xor
add
and
add
test
clc
adc
je
out
xchg
pop
adc
add
sub
out
mov
or
clc
or
scas
adc
add
inc
clc
lahf
psubq
xchg
movsb
clc
ljmp
lock
sar
add
inc
clc
sbb
in
add
add
out
lret
add
clc
xor
add
add
xchg
cmp
lea
ss
ret
outsl
lods
or
add
mov
repnz
clc
mov
jmp
and
sub
lods
sbb
sar
mov
jb
add
or
add
sub
and
add
out
out
loopne
xchg
popa
add
decl
add
jmp
call
add
push
clc
cmp
add
inc
add
adc
add
outsl
fdivrs
mov
add
clc
lea
jb
add
pop
clc
adc
add
add
mov
call
mov
das
jnp
clc
push
add
cld
jmp
decl
mov
adc
jmp
and
xabort
add
cld
push
add
hlt
fs
mov
or
add
cmp
clc
in
lock
cmp
inc
clc
mov
sub
fcmovbe
or
clc
arpl
add
add
sbb
add
insb
aaa
sbb
repz
jmp
sub
sub
push
add
scas
iret
cmp
clc
adc
adc
in
inc
add
mov
fistps
add
cmp
clc
test
sbb
adc
add
insb
add
fs
mov
pop
xchg
cmp
add
push
imul
push
cld
jmp
jge
or
jo
add
cmp
ficomps
ja
mov
clc
mov
lock
jmp
jb
add
add
and
sar
out
add
add
into
pop
fisubl
in
push
add
sti
lock
pop
iret
fists
add
mul
clc
in
decb
sub
clc
clc
jno,pn
add
clc
sar
clc
lahf
inc
add
loope
inc
clc
jle
xor
add
test
jge
fadd
clc
jmp
add
sti
cmp
clc
ret
out
add
pop
test
xchg
push
fwait
sti
fbld
add
rorl
rcrl
divb
ds
aam
add
sub
and
add
fdivl
add
dec
sbb
add
cmp
dec
or
out
inc
clc
mov
pop
in
cld
jmp
xchg
iret
or
jle
jp
mov
push
add
adc
add
add
xchg
in
jge
clc
test
pop
xor
clc
inc
clc
jmp
mov
icebp
inc
clc
cmp
int3
icebp
shlb
popf
loopne
xor
add
mov
xchg
cmp
enter
add
jns
add
mov
std
dec
sub
clc
cmc
cmp
mov
clc
addr16
cmp
clc
mov
add
inc
clc
xchg
aas
stos
sub
inc
clc
xor
add
and
add
and
movsl
clc
cmp
nop
sub
add
cmpsl
clc
sub
add
aas
data16
pop
jb
add
imul
cld
lods
and
add
xchg
cmp
clc
int3
addr16
outsb
cmp
mov
mov
clc
xbegin
xchg
int3
fistps
add
fdivr
add
add
clc
leave
push
add
xchg
out
cmpsl
clc
mov
clc
mov
clc
sub
jecxz
imul
clc
sbb
add
cmp
shrb
aad
mov
dec
test
push
jle
push
add
sar
add
cmpsb
clc
adc
add
add
sub
pop
das
or
adc
add
add
ret
clc
lods
mov
mov
push
push
cld
jmp
test
push
mov
mov
add
cmp
xor
add
add
mov
sub
jp
leave
or
add
dec
jbe
or
add
scas
leave
sbb
add
cmp
add
clc
cmp
ljmp
or
cld
jmp
jp
cmp
add
jae
add
clc
shrb
add
cmp
jb
add
xchg
jne
xlat
xbegin
add
clc
loopne
jmp
pop
mov
sub
pusha
add
push
add
jmp
push
sbb
je
add
or
clc
rcr
stc
popa
add
and
add
add
clc
and
add
add
stc
stos
mov
scas
out
add
add
add
ss
add
icebp
mov
clc
push
add
fdivl
add
bound
add
add
mov
aad
fisttpl
pop
repnz
add
and
xor
add
clc
sub
lret
jmp
clc
sbb
add
add
push
push
cld
jmp
adc
and
add
clc
insb
sarb
roll
xor
add
mov
mov
stc
imul
cld
jmp
data16
mov
add
add
clc
test
dec
loop
and
add
jl
add
popf
arpl
add
clc
sub
nop
lcall
clc
dec
mov
xbegin
or
icebp
dec
cmc
test
movsl
clc
pop
pop
pusha
add
push
mov
pusha
add
pop
lahf
inc
clc
push
xor
add
cld
jmp
jp
aaa
adc
add
jae
add
mov
clc
rcrb
xbegin
cmp
clc
enter
jmp
add
loope
add
add
add
add
add
neg
dec
dec
test
call
jmp
or
std
jle
clc
arpl
add
lahf
mov
push
add
push
cmp
dec
adc
add
pinsrw
add
test
clc
mov
pop
mov
adc
add
add
aas
fs
push
add
in
jnp
movsb
clc
jbe
int3
mov
and
imul
add
or
cmpsl
clc
or
jecxz
xabort
clc
mov
clc
clc
xabort
clc
inc
add
mov
adc
add
lea
xchg
adc
jne
into
mov
dec
push
loopne
stos
clc
and
add
clc
and
add
sub
clc
cmp
ss
ret
adc
cmp
inc
add
add
push
add
mov
in
cmp
inc
add
cltd
jp
sub
stc
mov
fsubl
add
jbe
lret
cmp
lret
iret
mov
inc
clc
stc
and
add
sbb
adc
add
clc
ss
mov
scas
adc
add
mov
mov
gs
dec
push
add
clc
push
clc
mov
sbb
lea
add
add
add
clc
dec
or
add
xchg
outsb
mov
add
pop
hlt
add
add
add
add
mov
sub
sbb
loope
and
cli
push
bswap
divb
lret
inc
clc
push
aas
inc
add
dec
sub
add
inc
add
ljmp
add
in
fdivl
add
mov
in
push
jbe
cmovns
mov
cwtl
je
out
jae
add
add
clc
and
add
lock
clc
ja
push
add
cwtl
sar
clc
mov
add
cmp
dec
insl
fwait
pop
mov
xor
add
clc
out
lock
add
or
sub
mov
sub
popa
add
xor
add
cmp
push
dec
and
add
pop
jl
aad
or
jne
and
ret
add
cmpsl
clc
sub
aas
mov
add
es
cwtl
rcrl
aad
add
iret
and
add
add
add
in
clc
pop
pop
add
add
fadds
mov
cwtl
fidivrl
mov
loopne,pn
sub
add
cmc
mov
pop
fdivs
test
clc
sbb
add
mov
sub
pop
jmp
aad
call
jmp
and
es
cmp
sub
int
mov
dec
add
and
add
add
push
clc
lret
inc
add
bound
add
clc
mov
out
inc
clc
or
clc
add
add
fbld
add
jmp
bound
add
out
dec
pop
out
lret
xor
add
dec
xchg
sar
pop
das
or
adc
add
clc
jmp
clc
loopne
leave
pop
push
clc
jecxz
push
add
sub
clc
jmp
pop
clc
imul
add
cwtl
jp
add
cs
add
push
mov
je
xchg
fistl
add
and
add
aas
dec
inc
clc
dec
pop
cli
jp
jne
es
stc
adc
jle
sbb
dec
cmp
jmp
sub
cmp
clc
scas
xor
or
inc
add
adc
cmp
mov
cmp
mov
add
clc
xchg
sti
cmp
add
add
jl
clc
iret
mov
sbb
jns
cmp
inc
add
out
sub
stos
cld
jmp
cmpsb
pop
imul
sub
hlt
int
add
mov
add
scas
pushf
xor
add
mov
je
cmp
stos
popa
add
cmp
imul
popa
cld
jmp
ja
mov
loopne
movsl
clc
test
cld
jmp
xchg
sbb
sar
idivb
add
add
xchg
jo
add
pop
or
xchg
adc
add
add
cld
and
add
clc
wbinvd
fidivs
add
pop
jne
cmp
hlt
and
add
xor
add
clc
movsb
clc
bound
add
add
clc
mov
add
add
push
add
xchg
scas
adc
add
jge
lods
test
scas
rcrb
xchg
jl
arpl
add
je
add
cmp
clc
aas
sbb
lods
or
mov
das
push
add
add
jg
sbb
sbb
inc
clc
leave
sub
out
sbb
clc
outsb
xlat
xor
add
add
shlb
mov
test
dec
pop
mov
xor
add
ss
and
add
add
jge
gs
ljmp
int
repnz
add
push
cmove
repnz
clc
lock
add
cmp
add
add
add
jmp
clc
jno
add
clc
test
insl
cmp
out
incl
imul
mov
add
add
pop
lcall
bound
add
clc
add
add
clc
stos
jnp
fcomps
and
cld
jmp
pop
cwtl
add
add
add
cli
imul
sti
add
in
cmp
gs
aas
sbb
add
xchg
push
clc
push
add
or
push
add
bound
add
clc
jns
clc
into
outsb
cld
mov
add
sbb
stos
bound
add
xbegin
leave
sub
ret
cmp
add
outsb
vmwrite
clc
js
adc
clc
jbe
clc
xor
add
mov
sbb
jmp
adcb
je
clc
pushf
enter
add
pop
and
add
add
out
es
stos
and
add
xchg
psraw
ss
addr16
jmp
cmp
das
lods
lahf
cmp
jno
add
popa
add
pop
mov
jg
cmpsb
clc
or
clc
xchg
lods
push
cmp
add
clc
loope
xchg
sarb
add
push
add
cmp
clc
mov
clc
add
add
add
pop
jecxz
mov
sub
xchg
pusha
add
stos
test
arpl
add
add
cmpsl
clc
xchg
sub
add
add
mov
or
jnp
mov
add
ret
clc
repnz
add
je
push
add
add
sub
out
das
test
and
add
stos
pop
clc
adc
add
add
outsl
dec
dec
loopne
push
scas
aas
adc
add
mov
mov
clc
pop
inc
clc
sti
es
pusha
add
pop
popf
inc
clc
xchg
hlt
sarb
in
das
test
dec
loopne
push
jmp
clc
mov
int3
mov
add
gs
adc
add
mov
fs
ret
clc
jae
add
test
clc
pushf
xchg
loope
pusha
add
das
jb
add
sbb
jle
clc
fimull
jbe
clc
lret
jb
add
add
fnstenv
add
pushf
in
mov
iret
mov
add
dec
pop
inc
add
and
add
clc
arpl
add
jge
stos
mov
repnz
cmpsb
clc
or
push
jecxz
dec
mov
clc
mov
das
add
add
pop
jle
clc
pop
imul
pop
xor
add
pop
xbegin
add
push
push
xchg
cmp
add
test
inc
add
dec
add
add
add
out
outsb
sub
jae
add
clc
fcompl
adc
add
cmp
in
pop
dec
mov
cld
jmp
mov
add
out
popf
clc
iret
imul
add
frstor
add
in
fldt
clc
push
insb
and
add
push
cwtl
das
add
add
add
fcompl
inc
add
int3
sti
jl
clc
sbb
jle
clc
pop
jle
xchg
and
add
inc
add
dec
push
add
cwtl
inc
add
dec
cmp
daa
clc
xor
add
xor
add
hlt
push
xor
or
xchg
push
add
adc
loopne
push
ret
xchg
mov
cwtl
xchg
mov
add
xor
add
add
mov
add
mov
clc
xchg
pop
or
add
mov
add
sarl
xlat
jmp
cltd
addr16
jne
xor
add
sub
cmp
lock
pop
add
add
clc
pop
push
add
push
push
add
ss
scas
cltd
ds
adc
bound
add
jne
clc
xor
add
clc
mov
add
mov
sub
xchg
fwait
mov
outsb
mov
add
mov
xlat
add
add
sbb
jo
add
add
clc
sar
clc
cmp
push
add
jmp
inc
inc
clc
or
nop
sub
clc
push
popf
push
add
or
stos
jo
add
fwait
xor
add
into
xor
add
add
fsubl
add
iret
push
pusha
dec
inc
add
sub
cmp
sub
cmp
add
mov
add
rcl
shrd
clc
mov
cld
jmp
cmp
ret
clc
jbe
sub
mov
mov
push
add
lret
daa
clc
decl
test
adc
add
jmp
scas
inc
clc
mov
xor
add
add
cmpsb
clc
xchg
mov
dec
sbb
cld
jmp
das
sub
nop
sbb
push
add
add
add
es
popa
add
sti
minps
cld
pusha
add
gs
pop
sbb
add
cs
lret
xlat
shrl
pop
pusha
add
mov
pop
cmp
outsb
xor
add
push
add
jmp
sub
xlat
inc
clc
in
test
push
ss
ret
sub
jle
loop
sub
pop
clc
adc
add
clc
adc
add
movsb
clc
push
mov
push
fcoml
scas
sub
push
test
movsl
clc
call
mov
pop
xor
add
idiv
jmp
xor
test
inc
clc
mov
add
push
lock
loopne
add
add
clc
and
add
xchg
pop
xor
add
popa
add
das
shlb
add
clc
and
add
add
add
dec
enter
lret
pop
dec
out
pop
ret
out
mov
clc
mov
in
cmp
or
clc
add
add
js
lods
push
add
xchg
fcompl
xchg
xchg
arpl
add
add
outsb
in
imul
adc
add
sbb
fldenv
cmp
add
icebp
and
add
test
mov
bound
add
clc
cmc
decl
mov
mov
add
add
clc
mov
clc
ljmp
ss
ret
push
sub
cmpsb
sbb
mov
add
add
push
add
mov
cld
jmp
sub
add
add
or
jle
mov
add
jmp
add
cld
jmp
mov
or
mov
mov
test
out
sub
dec
lcall
data16
mov
cld
jmp
mov
cmp
clc
adc
add
add
xor
add
add
or
push
cwtl
or
xchg
imul
daa
add
addb
sub
jns
popa
add
adc
add
clc
inc
clc
imul
leave
cld
jmp
sub
add
xchg
mov
cmp
test
gs
aas
mov
adc
add
in
testl
imul
clc
rol
clc
mov
clc
jo
add
add
movsl
clc
clc
iret
call
sbb
add
add
or
clc
movsb
clc
decl
jbe
add
sub
pusha
add
mov
xchg
rcrl
imull
add
add
sti
idiv
incb
push
ss
ret
adcb
cmp
sar
clc
cmp
stos
mov
adc
dec
adc
add
add
add
add
add
clc
add
add
repnz
and
pop
sub
inc
clc
out
adc
cmp
inc
clc
cmc
ret
clc
sahf
jp
cmc
mov
push
imul
pop
sub
clc
ljmp
adc
data16
inc
add
jg
add
add
mov
fistps
clc
cmp
clc
test
aas
xbegin
fstp
jle
clc
push
add
data16
not
mov
loopne
cld
jmp
sub
movsb
mov
jmp
push
sub
sbb
jmp
das
and
add
add
sti
add
add
adc
add
std
js
es
and
xbegin
xchg
dec
in
pop
pop
pop
mov
add
loop
das
or
add
add
add
inc
clc
loope
cmpsb
clc
sahf
jl
ja
push
add
jmp
push
jecxz
add
xor
add
sar
and
add
call
cld
jmp
add
imul
add
out
dec
fistps
clc
xchg
stc
cmp
add
das
into
cs
add
push
add
xchg
test
lahf
pop
clc
test
jnp
xor
add
mov
jb
jmp
xor
ss
push
clc
xor
add
add
cmp
add
or
clc
inc
clc
jge
dec
arpl
add
xchg
cs
mov
sbb
sub
sub
pop
in
or
add
cld
jmp
add
inc
clc
mov
filds
add
sahf
fcomi
jns
push
mov
push
add
and
outsl
scas
mov
push
imul
clc
out
sysenter
shr
fdivp
cmp
sbb
out
jb
add
xor
dec
imul
bound
add
loope
out
xchg
jge
push
add
stc
jle
sti
lahf
jp
add
inc
add
inc
clc
jns
pusha
add
jnp
clc
shll
cmp
repnz
clc
insb
adc
stos
and
add
adc
add
add
jle
clc
adc
add
add
clc
in
repz
mov
std
pushf
aaa
dec
push
push
cld
jmp
or
sbb
add
add
add
add
loop
xor
add
mov
cmp
push
add
xchg
mov
clc
imul
clc
xbegin
int3
push
mov
cld
jmp
fwait
or
imul
add
jno
add
add
jecxz
jle
sbb
cld
jmp
sub
dec
sub
or
clc
and
add
add
cmc
hlt
and
add
add
xchg
push
add
and
add
add
add
pop
mov
mov
adc
add
aam
arpl
add
mov
clc
addr16
lock
add
add
add
jmp
sub
jne
dec
test
lock
clc
or
xor
add
call
cld
jmp
and
jge
jo
add
clc
test
and
add
sbb
push
lock
xabort
lahf
cmp
or
clc
or
dec
push
clc
faddl
cmp
pushf
cld
jmp
sub
clc
adc
add
movsb
clc
sub
insb
xor
jns
add
ljmp
leave
cmp
sahf
call
cmp
pop
mov
jge
cmc
or
add
mov
add
add
add
push
cld
jmp
sub
es
pusha
add
in
ds
sbb
cwtl
int3
adc
add
out
ficomps
or
sar
add
add
arpl
add
add
test
mov
add
fcomip
and
add
add
xchg
lods
fnstsw
clc
push
jmp
sbbb
jo
add
mov
add
clc
cmp
jns
xor
add
clc
cmp
add
std
scas
es
add
add
add
aas
loop
adc
add
loope
cmp
mov
sar
mov
add
clc
or
xor
lods
inc
clc
into
pop
dec
push
leave
pop
xchg
xor
add
add
cld
jmp
das
jg
xchg
sbb
ss
ret
push
inc
es
daa
clc
fldt
and
movsl
clc
adc
add
mov
pop
mov
clc
cwtl
popf
loope
ss
add
js
lods
cld
jmp
dec
inc
cmp
or
add
add
in
xor
mov
ss
ret
imul
add
add
dec
adc
add
loope
cmc
mov
mov
cmpsb
clc
xbegin
clc
cs
add
stos
cmp
ret
clc
fstps
add
push
add
lret
sbb
sti
mov
push
clc
cs
out
std
jae
add
sub
jmp
nop
cwtl
sub
out
dec
gs
aad
sbb
add
clc
dec
inc
cld
jmp
add
lahf
popa
add
movsl
clc
mov
popa
add
fldcw
aas
pop
ljmp
std
fneni(8087
clc
mov
clc
shll
sbb
clc
loop
test
repnz
or
clc
cmp
loop
hlt
or
add
xchg
call
repnz
clc
imul
clc
jno
add
adc
add
in
fcomps
add
mov
add
cld
jmp
and
add
test
dec
popf
test
cmp
clc
mov
add
push
jmp
cmp
jbe
adc
add
clc
add
add
mov
add
add
out
xchg
sub
pop
jbe
movsb
clc
mov
in
jno
add
data16
dec
aam
pop
and
lahf
inc
clc
test
clc
mov
clc
imul
in
dec
jb
add
clc
lret
out
outsl
push
or
sub
jp
clc
lock
popa
add
xor
add
insb
lret
neg
pop
pusha
add
iret
pop
aaa
jo
add
or
add
dec
add
add
test
insl
lods
sar
clc
cmpsl
clc
add
add
add
aad
cmp
clc
jne
ljmp
ret
push
ret
push
nop
jnp
in
pushf
in
cli
sbb
inc
clc
aam
add
mov
push
aaa
mov
jbe
cmpsb
clc
stos
das
pop
cwtl
hlt
lock
pop
ja
add
add
clc
data16
jg
inc
clc
cmp
xchg
testl
add
lret
add
pop
mov
clc
jg
xlat
push
clc
movsb
clc
ds
cmp
sub
dec
xabort
sahf
jmp
loop
daa
clc
xchg
xor
add
lea
lock
pop
push
clc
mov
add
out
outsb
in
data16
push
xlat
push
add
sub
push
add
push
add
decl
test
add
cld
jmp
mov
dec
mov
add
scas
xchg
sar
add
add
xchg
loopne
lods
xbegin
mov
cld
jmp
sub
jp
fmuls
push
clc
test
add
daa
clc
insb
aaa
cmp
pop
mov
clc
scas
fmul
pushf
iret
xchg
push
push
cmc
push
add
xor
add
cli
inc
clc
mov
push
aaa
dec
dec
xabort
add
loopne
xlat
pop
sub
clc
mov
sub
rep
cld
jmp
sub
mov
out
out
adc
clc
mov
add
arpl
add
out
into
push
add
leave
lods
clc
pop
add
add
outsb
or
sbb
cld
jmp
sub
clc
shll
mov
clc
aam
clc
jmp
sub
mov
data16
sbb
xchg
dec
or
cmp
and
add
push
clc
fstp
sub
cmp
jecxz
stc
repz
inc
add
mov
clc
movsl
clc
iret
cwtl
pop
bndldx
add
fcmovbe
outsl
xor
mov
add
in
or
add
add
aaa
sbb
test
pop
add
cld
jmp
dec
negb
add
or
iret
dec
push
add
cld
jmp
test
sub
add
js
xor
ss
sub
push
xchg
cld
jmp
cwtl
sbb
popa
test
pop
clc
pop
xor
add
jnp
mov
clc
sub
test
xor
add
clc
and
ljmp
adc
sub
add
add
clc
lods
std
test
cmc
ds
pop
mov
push
add
jnp
add
sbb
loopne
fwait
push
dec
ret
clc
sub
fwait
cwtl
repz
sbb
cmp
pop
daa
clc
fidivl
add
adc
add
clc
clc
xor
clc
fistpll
in
fdivrl
add
stos
popf
mov
cmp
jbe
clc
pop
scas
mov
and
add
jb
add
add
inc
clc
pop
aam
clc
es
mov
jmp
clc
cmp
add
clc
cmp
test
mov
and
insb
and
add
dec
add
add
pop
adc
add
mov
das
ja
ljmp
jno
add
add
add
xchg
es
fldl
cmp
mov
sbb
shlb
push
ret
lods
es
clc
aam
daa
clc
sbb
add
cld
jmp
sub
jno
daa
clc
cmp
add
mov
clc
mov
test
cmp
clc
out
adc
add
add
lret
dec
inc
clc
ja
insl
adc
add
mov
clc
pop
clc
add
add
add
add
inc
clc
ffreep
clc
arpl
add
xchg
gs
aam
enter
clc
pop
jmp
clc
xchg
test
pop
xchg
shrl
popa
add
pop
sahf
popa
add
mov
clc
adc
add
inc
add
inc
clc
push
clc
sbb
icebp
push
mov
jmp
dec
sub
jmp
clc
jbe
cmp
sub
push
add
cmp
add
inc
clc
adc
add
clc
negl
add
clc
addr16
in
pop
cmp
add
movsb
clc
or
inc
add
faddp
clc
sar
bound
add
add
xchg
pop
cmp
dec
mov
add
xor
sahf
xchg
fmul
mov
outsb
inc
add
xchg
or
call
sbb
ljmp
cmp
out
xabort
cwtl
int
js
clc
pusha
add
add
dec
add
add
push
jle
clc
cmp
sbb
sub
rorl
xor
and
add
arpl
add
sti
stc
std
dec
repnz
rcll
lods
ret
clc
lods
pop
out
into
pop
lock
add
outsb
jno
add
loopne
arpl
add
out
mov
add
and
mov
add
jae
add
pushf
sub
sub
clc
cmp
clc
adc
clc
in
insb
xchg
sbb
ljmp
jmp
je
mov
xlat
lods
shl
pop
jb
add
mov
adc
add
add
adc
clc
jbe
out
xchg
sahf
mov
rolb
add
cmp
mov
clc
clc
shll
add
clc
ud2
not
lea
clc
out
sti
lret
mov
repnz
push
ret
jno
and
add
mov
and
add
xbegin
scas
mov
add
sub
stc
rclb
add
pop
sahf
data16
test
test
outsl
daa
clc
int
add
sub
add
xabort
ljmp
mov
cmp
add
xor
add
jg
clc
data16
sub
clc
add
add
clc
test
mov
test
clc
dec
adc
add
cld
jmp
sub
imul
sub
add
lcall
add
movsb
clc
pushf
insl
mov
clc
sub
rolb
inc
clc
dec
xchg
ds
sbb
add
add
cmp
sub
fucomp
fnstcw
ljmp
add
jp
movsb
clc
adc
add
xchg
ja
adc
add
push
add
adc
enter
fucomi
incl
push
cmpsb
mov
add
cld
jmp
loope
cli
cmp
add
pusha
add
sahf
dec
mov
add
outsl
push
clc
cmp
add
jge
mov
vcomiss
fcomps
popa
add
dec
or
ss
clc
add
add
pop
jl
add
jmp
add
lea
xchg
cld
lret
ret
clc
push
inc
cld
jmp
imul
leave
lea
add
test
jae
add
rolb
add
add
pop
push
add
xchg
mov
cli
mov
adc
add
daa
clc
mov
clc
mov
add
xbegin
push
mov
add
add
add
lods
mov
add
add
and
stos
xlat
movsl
clc
aas
out
js
add
mov
cld
or
jns
iret
ss
clc
mov
in
sahf
into
pusha
add
xchg
xor
pop
adc
add
push
dec
mov
add
adc
add
add
sub
test
imul
idiv
jmp
or
outsl
repnz
inc
add
int
fcomp
into
jle
clc
pusha
add
dec
cmp
movsb
clc
mov
clc
mov
notb
add
sub
push
clc
xor
add
clc
daa
clc
sub
add
and
add
pop
and
add
loope
cmp
clc
dec
jne
clc
jne
leave
mov
mov
add
data16
push
clc
xchg
dec
sub
clc
data16
in
test
leave
pop
clc
jge
pop
cld
jmp
cmpsb
fs
dec
push
mov
addr16
in
push
push
ret
clc
pop
pushl
shlb
push
ret
lea
clc
movsl
clc
xchg
popa
add
adc
add
add
loope
sahf
jb
add
add
pop
bound
add
clc
adc
gs
roll
add
push
add
test
push
insb
lods
cmp
pop
sub
clc
add
scas
mov
pop
adc
add
lea
push
ret
fwait
pop
adc
jle
gs
shl
clc
or
cmp
add
and
jmp
adc
outsl
fnstcw
scas
je
or
sar
clc
in
fs
addr16
adc
add
mov
adc
cmp
cmp
clc
inc
clc
mov
bound
add
mov
jp
add
cmp
add
imul
jne
pop
and
add
cmp
clc
inc
clc
test
emms
cmp
sbb
add
push
add
jmp
xor
clc
cmpsb
clc
mov
call
add
clc
repz
add
and
sbb
add
arpl
add
sub
clc
repnz
cmp
clc
jnp
clc
sub
add
mov
add
pop
add
add
mov
jmp
jno
sub
cwtl
xbegin
add
add
sar
int3
cmp
mov
repz
dec
ud2
test
aaa
jge
pop
js
bound
add
mov
repz
data16
fldenv
jmp
sub
lea
fs
scas
psrlq
pop
push
out
cmp
int3
in
shll
clc
imul
aad
dec
push
mull
jae
add
and
jno
add
add
add
pushf
mov
push
inc
ss
ret
dec
mov
sub
sbb
pop
xchg
dec
xchg
inc
add
stos
add
add
mov
cmpsb
clc
rolb
xchg
add
add
clc
jne
mov
adc
mov
adc
add
scas
jns
iret
jno
add
adc
mov
test
aas
mov
clc
icebp
push
and
clc
mov
loopne
add
lea
pushf
js
cs
add
fstl
clc
ljmp
loop
movsl
clc
stos
adc
add
in
shl
cld
iret
dec
mov
cmp
pop
mov
add
jno
add
push
pop
clc
adc
add
aad
ret
fbld
mov
daa
clc
dec
inc
add
ret
jmp
cld
jmp
sub
rorb
xchg
shrb
pop
add
add
xabort
mov
pop
idivl
repz
add
movsb
clc
into
outsl
sub
or
in
bound
add
add
movsb
clc
int
fdivrs
add
add
arpl
add
add
out
aam
pop
jecxz
pop
push
sbb
sbb
add
clc
mov
clc
mov
popa
add
mov
add
jle
dec
jge
sar
xchg
jle
inc
add
rcll
scas
mov
add
add
pop
sub
clc
bts
sar
pop
clc
and
outsl
xor
add
add
xbegin
dec
cmp
data16
imul
adc
add
fcmovb
clc
xor
add
loopne
xor
add
or
pop
out
sub
cs
outsb
fcomps
add
inc
add
and
rcrb
test
xchg
mov
add
call
add
jg
mov
clc
imul
jae
add
sbb
add
ss
push
cld
jmp
sub
subb
jbe
mov
add
addr16
shr
jle
pop
sti
iret
divb
ret
clc
repnz
sbb
movsl
clc
jns
clc
push
xchg
nop
mov
clc
aaa
sar
clc
cmp
mov
add
sub
clc
loopne
jbe
add
call
add
or
dec
decb
clc
ficoml
add
inc
add
cs
jo
add
fs
mov
add
add
decl
test
jmp
sub
add
ficoms
add
xchg
adc
add
clc
sbb
add
xor
add
rorl
mov
add
into
sar
sbb
jmp
movsb
push
test
mov
add
mov
clc
push
xor
add
pop
adc
pop
pop
cmc
mov
clc
jns
hlt
or
add
fnstcw
jo
add
xchg
int
stos
mov
push
dec
ss
ret
and
sub
xchg
jae
add
push
pop
and
add
nop
inc
add
sub
imul
add
jnp
xor
add
add
cs
inc
add
ret
clc
or
inc
clc
mov
insb
arpl
add
add
in
arpl
add
clc
xlat
fwait
out
ss
add
gs
xchg
mov
inc
clc
jae
add
mov
mov
or
jns
in
add
add
cld
jmp
lea
xor
cmp
nop
sbb
dec
cmp
jmp
imul
stos
pop
sar
sbb
aas
or
popa
add
imul
decb
hlt
nop
sar
jbe
dec
cs
jne
mov
add
nop
add
add
clc
dec
enter
add
jae
add
adc
add
mov
xor
add
clc
mov
clc
pop
idivb
cmp
ss
ret
push
mov
mov
clc
das
scas
or
add
pop
sbb
inc
clc
lcall
repz
loop
mov
add
inc
add
sub
int3
dec
lods
mov
add
xor
add
sub
out
das
movsl
clc
enter
divl
add
sbb
out
lret
xchg
clc
sar
stos
xbegin
adc
add
add
repz
add
xchg
mov
cmc
or
neg
stos
cmp
clc
mov
cmp
dec
mov
outsl
fldt
sbb
dec
adc
leave
mov
call
and
or
add
or
clc
or
add
scas
iret
cli
mov
loop
and
add
out
out
inc
add
xchg
sub
push
add
fdivr
int3
and
add
add
adc
add
mov
cld
jmp
sub
pop
jns
stc
xchg
mov
pop
and
add
add
add
jno
add
add
sbb
movsl
clc
pop
cmc
add
add
push
and
add
rorb
mov
pop
or
add
add
add
add
cmp
clc
insl
xabort
inc
add
ds
mov
add
int
lcall
add
xor
add
test
loope
hlt
lcall
clc
cmp
push
push
add
or
scas
int3
inc
clc
lret
pop
sub
in
xchg
pop
and
add
clc
nop
dec
mov
clc
loop
jae
add
clc
xor
add
jge
add
jmp
mov
dec
into
sub
clc
jb
add
add
aad
push
outsb
pop
adc
add
add
or
inc
clc
or
add
jmp
fwait
hlt
push
jmp
push
mov
clc
mov
or
xchg
xchg
sub
jecxz
xor
add
clc
jno
add
insb
es
lea
push
add
push
ret
clc
gs
movsb
clc
pop
jmp
out
mov
mov
cmp
add
add
repnz
or
jg
add
add
add
clc
iret
xchg
leave
call
add
sbb
xor
add
in
icebp
mov
ss
ds
inc
cld
jmp
outsl
lea
cli
cmpsl
clc
clc
sbb
mov
push
add
push
add
addr16
insl
pop
bound
add
scas
pop
sub
clc
jae
add
jge
sar
clc
xabort
clc
je
clc
dec
jae
add
mov
clc
aaa
jb
add
add
add
add
jle
pusha
add
ret
clc
ret
add
sub
movsl
clc
outsl
sub
push
add
push
pop
int3
mov
clc
xor
add
sub
adc
add
mov
ljmp
imul
loop
sbb
jnp
jmp
pusha
add
adc
add
push
inc
clc
xchg
loop
mov
repnz
adc
add
popf
cmpsl
clc
push
add
pinsrw
clc
aaa
popf
insb
jle
jge
das
adc
add
add
xchg
stc
clc
sar
clc
cld
add
add
cmp
clc
dec
rcll
add
clc
jne
cmp
add
mov
clc
xchg
sbb
mov
clc
fwait
inc
add
jb
add
clc
jge
repnz
imul
cmp
add
add
sub
clc
xabort
in
aam
xor
add
addb
add
jmp
add
dec
mov
add
es
sub
mov
push
sub
clc
lods
sub
xor
cmp
sub
clc
mov
sub
jbe
add
call
xor
dec
push
pop
iret
adc
add
jo
add
add
mov
jp
add
cwtl
or
add
add
pop
dec
sub
enter
add
pop
clc
stos
mov
test
add
enter
sub
fs
mov
clc
mov
push
inc
clc
cli
movsl
clc
and
add
mov
clc
jl
stos
sbb
add
cli
and
add
pop
fstp
clc
dec
scas
lea
movsl
clc
pop
push
into
xchg
mov
out
std
mov
clc
loop
cmp
jecxz
cmp
pop
clc
xchg
stc
test
add
xor
movsb
clc
sarb
sbb
sub
aas
in
mov
in
stos
test
mov
add
add
jmp
add
add
in
push
imul
clc
into
and
add
std
cs
add
push
clc
sbb
add
xchg
mov
clc
adc
add
pop
inc
add
sub
in
sbb
clc
pop
adc
add
sub
lock
add
ret
push
clc
loopne
in
sub
add
push
add
dec
cmp
cmpsl
clc
test
mov
mov
add
mov
add
frstor
aam
add
lods
call
lcall
clc
xchg
int3
jno
add
out
adc
add
sub
mov
mov
add
sar
pop
add
call
pop
iret
ja
out
mov
clc
pop
test
stos
cld
jmp
cwtl
mov
xchg
push
jl
adc
add
add
fcoml
cli
cwtl
adc
add
clc
dec
pop
test
js
add
sbb
clc
call
push
ret
sahf
imul
int
mov
push
icebp
movsb
clc
in
or
aas
mov
sar
mov
ljmp
cmp
clc
sahf
or
in
fs
inc
add
stos
clc
mov
add
insl
lahf
test
fadd
clc
movsb
clc
cmp
add
add
sub
add
xchg
fdivl
lea
adc
add
clc
cwtl
pop
pop
xabort
push
add
cmp
shr
cld
jmp
jge
push
into
fidivl
add
jbe
pop
xchg
lock
xor
add
mov
ljmp
fsts
add
push
pop
gs
in
cs
xor
push
insl
aaa
lahf
pop
mov
add
add
sub
ss
aad
clc
or
mov
add
call
aam
pop
add
daa
clc
mov
rcl
add
sbb
add
cmpsl
clc
pop
daa
clc
clc
fsub
clc
dec
cmpsl
clc
sub
clc
in
mov
add
enter
jb
add
adc
add
mov
add
clc
adc
mov
clc
xchg
jbe
clc
dec
pushf
je
clc
inc
add
gs
inc
add
repz
mov
clc
jnp
stos
pushf
loope
cld
inc
clc
js
clc
cmp
clc
xlat
dec
loop
and
sahf
out
and
add
stos
push
add
mov
add
cmp
add
add
pushf
xor
add
jo
add
add
push
add
sahf
mov
inc
clc
lods
cmp
clc
inc
add
cwtl
scas
insb
adc
add
mov
in
icebp
fadds
clc
lock
test
inc
add
push
inc
popl
stos
insb
icebp
inc
add
out
dec
cmp
sub
lret
ljmp
test
xchg
dec
icebp
aaa
ljmp
add
mov
xor
add
add
add
sahf
sbb
add
jg
add
jbe
cmp
imul
cmp
push
add
sahf
sbb
cmp
jecxz
mov
clc
ja
stos
std
jno
add
and
add
add
clc
mov
clc
insl
pop
test
xchg
pushf
dec
aas
jmp
xlat
aas
clc
mov
enter
ds
loop
inc
add
mov
pop
clc
mov
stc
or
lret
lcall
or
clc
push
cmp
shl
clc
cmpsl
clc
loop
mov
lea
cltd
pushf
jmp
add
add
pop
cmp
out
sub
daa
clc
pop
bound
add
cmpsb
clc
stos
or
or
add
clc
mov
cmpsb
clc
or
add
dec
add
add
dec
cld
jmp
and
cmp
ds
clc
lcall
add
add
in
mov
stos
or
xchg
mov
jge
jb
add
xchg
xchg
pushf
xchg
jae
add
add
clc
movlps
add
add
or
jns
nop
aas
clc
mov
xor
sbb
dec
cmpsb
clc
or
add
clc
dec
loopne
cmp
clc
ds
add
inc
clc
icebp
dec
mov
add
pop
test
xor
mov
pop
ss
ret
lea
push
push
add
pop
jle
pop
cltd
fs
xchg
in
lahf
je
stc
mov
clc
cmp
push
jmp
push
add
cmp
jp
xor
add
add
repnz
add
out
mov
clc
rorb
adc
add
clc
loope
repnz
nop
pop
and
add
pop
clc
push
add
xchg
xabort
cli
lods
cltd
je
clc
cmp
aaa
clc
arpl
add
clc
out
pop
ficoms
stos
sbb
aas
nopl
clc
test
stos
pop
in
dec
or
jb
add
enter
and
add
sub
add
clc
sbb
out
push
jmp
add
cmp
add
mov
add
add
cltd
pop
clc
mov
dec
mov
add
add
add
popf
inc
clc
push
add
mov
clc
fisubs
scas
dec
ja
sbb
cs
xchg
movsl
clc
pop
outsb
lret
mov
inc
clc
je
loopne
mov
jmp
inc
clc
mov
add
push
add
jg
add
int3
loop
out
xor
add
jle
clc
mov
fprem1
push
add
mov
adc
add
xabort
stos
sar
test
xchg
mov
add
inc
add
jnp
jb
add
add
pop
pop
cmpsl
clc
mov
mov
pop
stc
dec
dec
cmp
add
clc
cmpsb
clc
cmp
rcr
aas
push
clc
je
clc
inc
clc
pusha
add
jle
sbb
jl
dec
and
add
clc
xor
add
mov
add
mov
clc
outsb
je
clc
lea
xchg
xabort
clc
jmp
clc
mov
gs
ss
sbb
test
ret
cld
jmp
aam
cmc
lock
add
daa
clc
fildl
out
int3
and
je
push
clc
mul
clc
cmp
add
xlat
ret
clc
sti
mov
clc
pop
clc
push
cld
jmp
aas
inc
test
dec
cmp
jmp
and
test
clc
bound
add
clc
daa
clc
mov
clc
lods
lahf
fs
adc
add
test
jns
cld
roll
clc
out
adc
add
dec
aas
push
xchg
xbegin
clc
xchg
test
clc
xor
add
clc
into
mov
cld
jmp
mov
test
xor
add
add
pop
sbb
clc
ds
or
dec
stos
cmpsl
clc
hlt
push
pop
cld
jmp
push
lods
bnd
add
push
clc
fiadds
add
test
add
add
sub
xchg
add
add
clc
jae
add
adc
add
add
into
adc
add
dec
call
repnz
mov
arpl
add
inc
add
test
clc
add
add
jne
insb
push
push
cld
jmp
push
push
inc
test
cwtl
cmp
fldenv
add
fnsave
add
jne
cmp
sub
add
nop
arpl
add
pop
xchg
cmpsb
clc
cmp
adc
add
ficomps
sar
iret
lahf
sub
scas
stos
push
clc
dec
sbb
clc
in
jbe
dec
mov
add
inc
add
jle
sarb
cmpsb
clc
and
add
pop
clc
imul
sbb
imul
ss
decl
jmp
xor
and
mov
ud2
in
xabort
fs
movsb
clc
fs
out
test
das
je
mov
add
ljmp
add
clc
not
out
out
mov
sar
add
add
sti
cmp
add
in
cmpsl
clc
lahf
add
add
clc
xor
add
insl
or
jecxz
dec
enter
add
jg
push
xchg
adc
add
fdiv
dec
inc
add
cmp
clc
jle
sar
arpl
add
sti
mov
es
dec
pop
cmp
push
add
pushf
jo
add
xor
add
adc
add
lret
sti
push
cs
jo
add
sub
icebp
lret
je
add
lret
aaa
add
add
clc
into
aad
stos
call
clc
stos
dec
and
add
xchg
fldt
add
dec
xchg
icebp
sub
mov
out
gs
out
repz
inc
clc
aad
clc
mov
xor
add
clc
jmp
push
xchg
push
clc
and
rorb
int3
sbb
pop
clc
push
add
jmp
scas
arpl
add
and
inc
clc
jecxz
jbe
clc
test
sub
fimuls
xchg
or
aas
push
add
pop
inc
or
cld
jmp
dec
sbb
dec
lcall
add
adc
jmp
jp
cld
jmp
sub
add
jle
or
add
jbe
clc
mov
pop
pop
cmp
jg
clc
cmp
add
jle
and
add
cmp
sub
add
aam
js
pop
mov
mov
mov
leave
mov
andnps
call
divl
clc
jg
mov
cmp
or
ficoms
push
add
xor
add
ja
dec
movsl
clc
inc
clc
sub
add
cwtl
add
adc
xchg
jne
icebp
outsb
jecxz
xchg
mov
jae
add
lret
dec
cmpsl
clc
cmp
add
ljmp
adc
add
sahf
pop
push
stc
jno
add
clc
in
out
packsswb
add
stos
test
mov
clc
sbb
add
or
add
das
inc
add
add
add
jmp
add
clc
jge
clc
hlt
push
addr16
into
mov
rclb
cmp
adc
add
jne
mov
repz
jmp
pop
jg
sub
out
mov
clc
pop
inc
clc
out
push
cmp
clc
out
cmp
rorb
add
add
add
fidivrl
pop
jge
in
fwait
add
xlat
hlt
jl
clc
mov
lahf
sbb
fs
mov
sub
gs
mov
dec
cwtl
pop
jmp
xor
add
add
clc
add
add
cmp
clc
inc
clc
movsl
clc
lahf
clc
ret
add
inc
clc
out
pop
std
sub
add
mov
mov
push
ret
adc
es
inc
add
jle
add
sub
xor
clc
inc
add
mov
sbb
outsb
test
mov
and
add
add
mov
xchg
cmp
clc
lods
aaa
cs
arpl
add
adc
add
inc
clc
cmp
clc
dec
jnp
clc
cmp
clc
sub
xchg
mov
call
cld
jmp
sub
int3
add
add
add
xor
add
clc
ret
clc
adc
insb
jns
pop
cli
and
xor
add
pop
push
push
cld
jmp
es
sub
cmp
out
or
imulb
add
mov
add
fisttps
clc
sarb
mov
add
cmp
add
add
sbb
clc
dec
push
jl
bound
add
clc
ljmp
pop
jne
outsl
cmp
lret
xor
add
add
xchg
ss
clc
cmp
add
add
mov
scas
loop
mov
clc
dec
add
add
add
popa
add
and
add
cli
int
lret
clc
xor
add
jg
add
mov
jmp
push
cld
jmp
xor
pop
adc
push
dec
inc
add
mov
clc
jne
movsb
clc
out
inc
add
cmp
cmp
and
jle
add
lock
icebp
mov
xor
push
add
mov
dec
sar
gs
pop
roll
push
mov
ss
ret
push
jge
jp
add
sub
add
out
cmp
or
add
xor
add
fnstenv
sbb
push
ret
ja
fs
addr16
lret
ds
jno
add
lret
sub
cld
jmp
test
adc
cmpsb
clc
into
popf
pop
clc
ret
mov
ss
ret
sub
clc
popa
add
inc
add
jmp
in
out
pop
sub
cld
jmp
sub
clc
and
add
pop
clc
xor
add
add
clc
movsb
clc
cwtl
mov
test
jecxz
in
xchg
dec
pop
aas
sar
and
add
add
adc
add
adc
loopne
stos
add
add
bound
add
add
imul
add
and
cwtl
ret
clc
repnz
mov
clc
xchg
or
or
clc
adc
add
add
xor
loopne
sbb
adc
add
mov
xbegin
aas
jns
mov
add
pop
fstl
add
clc
cmp
std
in
dec
fisubrs
test
int3
pop
adc
add
clc
and
add
clc
test
cld
jmp
add
add
clc
jns
mov
ret
sub
jmp
adc
add
aad
imul
imul
mov
sar
clc
sub
out
mov
xchg
clc
or
mov
mov
jno
add
clc
adc
add
or
mov
cld
jmp
inc
sub
fs
mov
mov
add
sar
clc
cmp
fldl
sub
fisttpl
clc
loope
push
add
dec
push
add
sar
add
sub
add
add
add
add
add
clc
cmp
add
sbb
clc
xchg
das
mov
add
stos
sar
add
cmp
mov
cmp
sarb
push
pop
es
in
push
xchg
icebp
shr
push
jle
fstp
daa
clc
xchg
sub
pop
pop
sub
fsubr
inc
add
inc
clc
lcall
add
add
dec
add
inc
add
clc
pushf
mov
mov
mov
add
jbe
or
add
add
gs
test
hlt
fisubrl
mov
push
cld
jmp
test
push
add
inc
clc
ds
call
dec
and
add
or
pushf
in
fistpl
and
add
sbb
repnz
ss
aad
push
add
loopne
fnsetpm(287
clc
mov
add
push
out
mov
add
push
mov
cmp
cld
jmp
sub
out
xor
add
loopne
mov
decl
divb
mov
cli
xbegin
clc
cli
hlt
and
add
or
add
jmp
outsl
fistpl
pop
popl
aaa
dec
dec
pop
clc
mov
and
add
adc
add
add
mov
adc
add
in
inc
and
add
xor
aad
inc
add
xchg
and
add
outsl
and
add
add
mov
clc
push
clc
mov
sub
add
das
lods
mov
test
icebp
or
add
out
mov
test
rcrb
and
add
int
add
mov
clc
sub
stc
fs
xchg
out
imul
repnz
cmpsl
clc
ret
clc
inc
add
sahf
jbe
add
add
jp
add
sbb
out
out
outsb
pop
into
in
mov
repz
add
ds
clc
fldcw
repz
gs
scas
sub
fsubr
jo
add
xor
add
clc
inc
clc
pushf
fcmovbe
push
add
jge
add
xchg
mov
cmovae
add
or
push
jmp
jp
aas
jb
add
add
xchg
add
add
lret
cmp
leave
mov
add
lret
cmpsb
clc
mov
aas
imul
mulb
add
addr16
adc
add
add
add
cmp
clc
lea
mov
inc
add
fstpt
push
dec
mov
lahf
sub
fidivrs
roll
push
mov
xor
clc
mov
clc
mov
add
add
pop
mov
mov
nop
sub
inc
clc
dec
pusha
add
mov
mov
add
inc
add
testb
pop
and
add
add
xchg
cwtl
sub
mov
add
add
add
add
icebp
push
clc
mov
add
ss
adc
add
push
or
dec
xchg
std
xor
add
mov
sbb
clc
nop
sub
add
cwtl
jno
add
clc
fprem
inc
add
leave
aaa
adc
add
clc
mov
imul
inc
add
push
add
push
xor
add
mov
add
cld
jmp
sub
mov
ret
clc
cmp
clc
divb
add
add
das
add
imul
out
xchg
sub
into
dec
and
add
inc
clc
xchg
jg
clc
imul
clc
mov
add
add
mov
add
ds
push
add
outsb
sar
clc
jb
add
push
clc
xchg
mov
add
adc
add
jge
cld
jmp
or
inc
add
ja
clc
push
push
mov
add
lret
bound
add
add
ds
add
push
mov
call
scas
aas
push
je
sub
adc
add
into
rorb
mov
add
jo
add
add
mov
clc
xchg
jbe
clc
inc
add
cmpsl
clc
and
add
call
jmp
jle
push
inc
clc
push
add
or
pop
lods
lods
ja
stos
repnz
or
add
xchg
xor
add
push
pop
ss
ret
adc
fwait
push
cld
jmp
jge
add
or
add
mov
mov
clc
dec
mov
add
cld
jmp
sub
clc
sti
xor
add
sahf
pop
or
clc
dec
std
adc
add
shlb
add
mov
add
aam
pop
push
cmpsb
clc
cmp
add
xchg
cmp
add
jecxz
stos
shll
repz
add
add
cld
jmp
add
clc
addr16
int
xchg
cmp
test
cld
jmp
or
or
add
loop
test
cmpsl
clc
and
add
cli
mov
shll
ret
clc
sahf
popf
mov
clc
out
adc
add
pop
insl
jg
mov
clc
test
cwtl
outsl
mov
mov
ss
add
aas
dec
aas
jge
mov
aaa
add
add
sub
sar
add
jae
add
jg
clc
lcall
loopne
cltd
xor
add
dec
ds
push
sub
sub
cld
jmp
data16
and
inc
clc
jge
leave
mov
clc
and
add
mov
add
mov
outsl
inc
add
lea
or
pop
nop
adc
add
jno
add
lret
add
mov
nop
mov
xlat
sar
add
pop
mov
add
cltd
out
hlt
imul
add
sub
ret
clc
fcomps
in
lret
and
add
clc
mov
add
ss
leave
ror
dec
dec
add
add
insb
and
add
arpl
add
add
popf
mov
test
cmp
clc
and
add
clc
add
add
repz
jo
add
je
ret
cmp
inc
clc
je
and
add
test
add
or
and
push
add
bound
add
inc
clc
mov
sbb
add
enter
in
cmp
or
inc
clc
jns
add
mov
jmp
clc
mov
sbb
sbb
jae
add
das
push
fidivrl
cld
jmp
cmp
cld
sbb
mov
clc
loop
mov
add
lods
or
push
cmp
clc
cmp
fs
sbb
mov
jge
add
cld
jmp
sbb
or
jo
add
stos
mov
aam
add
mov
sub
xbegin
push
add
or
sar
sub
clc
rcl
test
add
loop
loop
pop
shll
push
add
jecxz
arpl
add
daa
clc
push
ja
inc
clc
mov
or
add
bound
add
add
cmp
push
clc
push
add
js
iret
jns
mov
clc
cmpsl
clc
lods
push
mov
mov
clc
mov
sar
pop
mov
pop
sbb
add
add
inc
clc
pop
aas
lock
lock
push
ret
clc
into
test
adc
add
xchg
fidivl
fs
scas
xor
mov
add
push
add
out
or
je
clc
lock
mov
add
add
add
cmp
add
xchg
xor
jle
jae
add
add
xbegin
dec
cmp
add
das
lret
jno
add
pop
bound
add
adc
cld
jmp
in
cmp
clc
add
add
push
adc
cmp
add
data16
jmp
pop
clc
in
mov
in
sahf
lock
int3
insl
mov
fdivrs
pushf
sub
add
add
sti
leave
shlb
jmp
xchg
and
add
clc
fsub
clc
addr16
out
dec
dec
sub
or
mov
lcall
fstl
cmpsl
clc
push
push
push
push
add
mov
add
xor
or
pop
cltd
cmc
pop
rorl
sahf
mov
add
mov
test
ljmp
add
add
or
inc
add
stc
jns
add
sti
and
loop
add
add
clc
mov
add
xbegin
pop
clc
jno
add
clc
jne
mov
test
cmp
xchg
mov
cmpsb
jge
xchg
aaa
push
add
test
xchg
mov
clc
std
sbb
jb
cld
jmp
sub
and
push
test
xchg
repz
out
in
mov
or
add
mov
xor
add
std
mov
add
mov
movsl
clc
adc
test
fimull
sbb
clc
insb
std
out
jecxz
pop
dec
inc
clc
xchg
mov
push
data16
mov
mov
pop
daa
clc
dec
std
lock
pusha
add
mov
push
xor
add
inc
clc
sub
clc
jns
or
xchg
test
sbb
jmp
push
ja
push
adc
sbb
push
mov
ret
js
add
add
mov
add
insb
cmp
or
call
mov
and
push
ret
movsb
push
adc
add
cld
push
add
add
add
js
pop
xchg
dec
shlb
hlt
or
popa
add
push
add
xbegin
mov
add
jnp
cmp
shrb
jmp
sbb
out
lcall
add
add
add
push
clc
push
sub
push
add
mov
movsl
clc
push
add
popf
push
popa
add
dec
push
add
xchg
push
xor
add
push
clc
out
dec
inc
clc
or
jbe
clc
dec
push
add
or
clc
daa
clc
pop
clc
push
add
lahf
and
add
fnsave
add
add
std
aaa
dec
int3
xbegin
add
clc
add
sbb
mov
std
pusha
add
loope
adc
popa
add
shr
sar
push
clc
stos
test
movsb
clc
and
add
xabort
add
movsl
clc
or
jo
add
cld
jmp
popa
push
cmpsb
dec
xor
push
mov
cld
jmp
sahf
sub
push
add
stos
cmp
clc
mov
sar
clc
or
cmp
clc
js
sahf
and
add
add
das
pushf
dec
rorb
add
xchg
test
dec
mov
bound
add
je
cld
jmp
leave
cmpsb
clc
mov
dec
fcompl
in
mull
dec
push
clc
cwtl
mov
pop
xchg
ss
mov
clc
call
stc
shrb
add
add
add
add
jb
add
clc
mov
xchg
in
xchg
aaa
mov
add
dec
cmp
fdiv
and
inc
clc
stc
sub
or
push
and
mov
clc
xlat
imul
addr16
push
in
bound
add
jp
mov
clc
idivb
test
pop
in
mov
xchg
clc
ljmp
clc
stc
sahf
out
pop
add
add
sbb
push
fs
jmp
movsb
sub
add
cmc
cmp
jbe
pop
popa
add
push
or
sub
scas
add
add
sub
clc
outsl
xbegin
jl
add
push
jno
add
adc
add
add
mov
and
clc
jnp
sbb
sub
add
leave
aaa
lcall
inc
add
rorb
mov
ss
aad
add
sub
clc
jbe
clc
in
cmp
add
cmp
add
push
add
and
add
xor
add
add
jae
add
pop
mov
jmp
je
add
jl
ret
clc
ss
fs
xabort
clc
jecxz
xor
add
or
and
add
clc
lock
fistps
clc
mov
xabort
ss
mov
rep
cld
jmp
sbb
aaa
std
xchg
lret
dec
xlat
and
fisubrs
cmpl
pusha
mov
call
add
outsl
xor
add
mov
cld
jmp
mov
clc
push
sub
clc
cmp
xor
add
jecxz
jl
insl
xbegin
mov
or
add
adc
add
mov
cmp
adc
add
mov
pop
clc
testb
adc
add
fwait
dec
pop
fcoms
add
mov
clc
dec
sar
push
add
mov
and
add
shll
add
cmp
mov
jecxz
arpl
add
clc
mov
pop
mov
clc
es
fwait
clc
mov
clc
xor
add
add
insb
fsubs
lods
gs
jbe
add
xor
add
outsl
aaa
out
push
jmp
clc
sub
insl
add
add
xchg
into
scas
stc
sti
jp
inc
add
or
add
insb
daa
clc
inc
clc
lods
pusha
add
pop
push
mov
cld
jmp
sub
xor
clc
shlb
clc
in
inc
add
and
sti
fistl
add
scas
mov
add
inc
cld
jmp
push
push
xchg
mov
jmp
nop
xor
sub
jns
arpl
add
sbb
xor
add
clc
cmpsl
clc
addr16
repz
pop
jbe
add
aam
neg
cmp
lods
das
push
jg
ds
adc
add
inc
add
sahf
cld
inc
add
insl
lret
jle
jp
cmc
or
ja
cli
fdivp
divl
clc
adc
add
shll
mov
add
clc
or
outsb
adc
add
add
add
roll
clc
add
add
add
add
clc
popf
mov
pop
sub
pop
push
mov
add
in
cltd
xchg
pop
push
cmpsb
clc
sub
mov
add
popa
add
mov
int3
inc
add
mov
clc
int3
xor
mov
mov
xor
clc
add
mov
push
or
add
adc
add
jmp
aas
pop
fwait
push
into
cmp
out
sub
gs
sar
into
xor
test
add
cli
into
mov
push
outsb
test
cwtl
fdivr
adc
add
mov
in
xchg
outsb
xor
add
add
cld
jmp
sar
int3
push
add
xor
add
clc
mov
add
sbb
clc
aad
notb
sbb
fisubs
clc
cmc
cmp
pop
daa
clc
jne
add
push
cmp
add
push
add
cld
jmp
nop
sub
sbb
add
mov
nop
ror
adc
ss
ret
and
clc
inc
clc
mov
mov
add
add
add
or
and
add
add
pop
cwtl
xchg
or
add
add
add
in
push
jle
rep
mov
mov
add
shll
mov
clc
jno
add
out
cmc
insl
cmp
cmp
jns
jno
add
faddl
clc
into
push
clc
sbb
addb
cld
jmp
aaa
sbb
mov
out
mov
clc
dec
xchg
mov
add
clc
cmp
clc
out
pop
loopne
mov
clc
pop
fldenv
add
sti
and
bound
add
sti
ss
ret
xor
push
cmc
popa
add
add
add
push
clc
clc
push
xchg
fldl
clc
in
xor
add
pop
cli
cmp
gs
popf
sub
dec
popl
add
out
std
push
add
push
jmp
cld
jmp
jge
clc
test
movsb
clc
mov
add
int
add
sar
popa
cld
jmp
and
fs
lods
xchg
pop
data16
push
and
call
jmp
popa
fwait
jge
test
arpl
add
add
sbb
pop
dec
jnp
dec
lock
add
sbb
add
scas
sub
push
cmp
clc
or
clc
xabort
add
in
pop
or
test
enter
mov
jle
inc
add
dec
pop
or
aas
mov
lods
or
repnz
or
clc
clc
dec
and
pop
cld
lods
ljmp
sub
mov
and
add
call
jno
add
push
add
daa
clc
sub
bound
add
add
and
add
repz
ljmp
sbb
jns
add
push
inc
add
mov
mov
add
sub
add
cmpsb
clc
jo
add
cmc
divl
add
push
add
add
add
and
add
pop
adc
add
add
cwtl
sar
clc
aad
clc
xchg
lret
fcomps
test
xchg
sbb
lods
push
or
cs
mov
pop
add
add
mov
sbb
pushl
push
ret
mov
test
outsb
cwtl
sbb
adc
add
clc
jns
inc
add
jp
add
popa
add
daa
clc
xchg
lret
lret
adc
add
clc
gs
jne
xchg
mov
xchg
cmp
outsl
out
xchg
addr16
push
nop
lcall
add
clc
inc
clc
pusha
add
idivb
clc
sbb
clc
fwait
das
inc
clc
jno
add
ss
pop
imul
add
add
int3
xchg
ss
and
clc
fwait
push
sub
push
js
clc
push
clc
sahf
call
push
lods
pusha
add
je
sar
test
iret
cmp
int
push
add
das
jne
mov
add
shll
or
clc
data16
out
fwait
daa
clc
cmp
add
xchg
fiaddl
in
enter
ljmp
xchg
dec
nop
enter
mov
push
or
call
clc
dec
cmp
add
clc
loopne
ret
clc
js
fxch
imul
push
aad
clc
fists
add
fisttps
clc
or
push
clc
sar
and
rcl
sbb
cmp
fisubs
add
sti
xchg
incl
mov
sub
jno
add
cmp
mov
mov
jle
add
repz
clc
loop
cmp
clc
mov
clc
fwait
stos
fsubl
clc
pop
clc
jge
cmpsl
clc
ljmp
sub
jno
add
imul
clc
sub
movsb
clc
fisubs
add
adc
sub
arpl
add
ret
lahf
cmp
cmp
cmpsl
clc
push
add
je
and
add
bound
add
sar
sti
sar
inc
add
xchg
push
add
xchg
lahf
fs
sbb
test
add
and
add
lock
or
and
add
sar
add
add
jnp
add
add
daa
clc
js
cmp
add
stc
inc
clc
sbb
mov
decl
sub
mov
add
je
clc
pop
sub
add
cmp
add
mov
push
or
add
and
add
movsl
clc
call
sbb
dec
ret
pop
inc
add
int3
jp
mov
mov
adc
xchg
clc
test
stos
dec
test
clc
out
aam
add
ret
clc
add
fs
mov
cld
jmp
sub
add
and
cs
ljmp
clc
negb
add
fxam
clc
pushf
stos
add
add
clc
enter
jge
inc
clc
jl
sub
mov
fisubs
clc
addr16
cmp
add
push
dec
in
sub
fdivs
mov
mov
and
mov
add
and
cwtl
cld
scas
shrl
or
clc
mov
adc
add
filds
pusha
add
jnp
clc
xchg
adc
add
add
lods
add
add
jbe
cld
jmp
jge
cmp
push
add
push
outsb
clc
ljmp
dec
cmp
add
sbb
clc
ffreep
clc
aam
ljmp
add
add
sarb
lods
pop
xchg
sbb
cltd
decl
add
add
cmp
dec
inc
add
add
add
xchg
test
jp
mov
ljmp
enter
mov
ret
clc
inc
add
mov
jbe
cmp
lods
invd
add
add
clc
sahf
xbegin
in
loopne
xchg
adc
add
add
sub
pop
pop
insl
lahf
enter
xbegin
outsl
sti
es
aam
clc
jp
and
add
add
jno
add
add
xchg
xabort
clc
adc
add
ret
add
add
add
add
fwait
sub
mov
jp
clc
and
inc
add
roll
mov
add
incl
sti
cld
jmp
orb
cld
aam
fldenv
add
xchg
sbb
add
sbb
add
sub
ret
clc
sub
jmp
add
pop
jns
ss
clc
cmp
xchg
mov
lods
lods
ja
pop
dec
or
add
cmp
add
xor
add
pushf
and
push
aad
cmp
mov
cmp
pop
sar
daa
clc
in
call
add
data16
outsl
in
dec
adc
add
clc
std
jecxz
or
shlb
mov
cmp
xabort
lret
sbb
inc
inc
inc
add
xor
fs
or
add
add
or
clc
sbb
clc
jns
or
adc
add
adc
adc
jmp
aaa
pop
inc
clc
and
add
scas
stos
or
clc
aam
xor
add
push
xchg
or
add
data16
mov
movsl
clc
mov
inc
add
adc
test
or
clc
cmp
push
sbb
clc
add
add
jmp
lock
cmp
test
jno
add
clc
push
mov
cld
jmp
jg
mov
inc
add
leave
lods
and
add
js
clc
movsb
clc
pop
clc
adc
jmp
mov
clc
iret
jmp
push
stos
vpmacswd
inc
add
push
jmp
add
lea
sbb
lahf
jecxz
push
inc
clc
inc
add
push
inc
add
sbb
pop
push
jbe
bound
add
add
clc
adc
clc
adc
add
add
jbe
clc
mov
mov
add
cld
jmp
dec
test
mulb
outsb
mov
add
add
add
rcrb
int3
in
mov
adc
clc
sub
mov
ds
leave
ja
cmpsb
clc
add
add
add
push
xchg
popf
mov
scas
sbb
add
xor
int
clc
or
clc
mov
clc
mov
pop
pop
sbb
add
fisubrl
mov
clc
and
add
loop
push
and
xchg
arpl
add
adc
add
cmp
jnp
es
outsb
add
add
or
add
clc
bound
add
add
dec
jne
clc
mov
add
xor
add
and
test
add
mov
sahf
je
lcall
leave
pop
and
add
stos
cmp
add
cmc
push
clc
push
jmp
add
or
repnz
add
add
mov
cmp
jbe
cld
jmp
outsl
inc
add
pop
xchg
loop
mov
arpl
add
mov
jmp
jp
adc
dec
mov
add
add
clc
pop
sbb
lea
out
std
mov
test
cmp
in
xchg
inc
clc
cmp
clc
cmpsb
clc
popa
add
cmp
add
mov
xor
cld
jmp
pop
in
mov
inc
clc
xabort
add
int
clc
jae
add
add
xchg
adc
clc
xor
add
js
data16
add
add
pusha
add
out
sub
clc
cltd
nop
cli
ret
dec
addr16
inc
clc
mov
dec
xchg
inc
cmpsl
add
add
jo
add
clc
std
imull
clc
pop
or
gs
pop
inc
add
dec
jb
add
or
xbegin
ret
clc
std
pop
cltd
xchg
pop
lods
pop
jg
add
mov
or
push
ja
hlt
inc
clc
jae
add
add
push
add
sub
clc
jmp
cld
jmp
sub
push
adc
add
clc
es
and
add
jle
ret
sub
pop
imul
clc
xor
or
dec
cmp
repz
dec
cmp
stos
jne
mov
cld
jmp
mov
sub
stos
clc
mov
mov
add
mov
insb
pop
sub
clc
das
ljmp
cld
jmp
jge
sub
push
loope
sar
mov
clc
mov
clc
sbb
js
cld
jmp
sub
sub
add
xlat
movsb
clc
leave
ficoml
add
int3
enter
pop
jmp
xor
int3
cld
jmp
push
sahf
ds
push
sar
add
pop
clc
add
add
mov
hlt
cmp
and
loopne
test
push
in
cld
testl
lcall
sbb
clc
popa
add
cmpsb
clc
sar
add
insl
jecxz
es
insl
xor
add
add
mov
push
mov
mov
clc
cltd
dec
cmp
clc
sub
and
add
inc
add
outsl
aam
clc
mov
xlat
fcompl
imul
pushf
xor
add
loop
cmp
mov
lock
add
xor
add
push
add
cmpsb
clc
lcall
ljmp
push
add
add
ds
je
iret
sahf
mov
clc
std
xabort
inc
add
aam
aad
add
cld
jmp
cwtl
es
icebp
jg
clc
sub
clc
jne
es
outsl
sbb
test
cmp
add
jmp
add
inc
clc
int3
aam
clc
sbb
and
cld
jmp
andb
add
add
add
in
jge
outsb
jge
data16
cmp
mov
call
mov
dec
sbb
loop
cld
jmp
push
sub
out
std
xor
iret
add
add
add
scas
jle
add
clc
mov
bound
add
cmp
inc
clc
and
add
inc
clc
jns
data16
in
xchg
xor
push
sub
add
clc
sbb
clc
xchg
ds
sub
add
dec
cld
pop
shlb
pop
xchg
nop
xor
add
push
sub
add
or
and
add
mov
or
arpl
add
sti
clc
bnd
add
pop
clc
mov
clc
jle
dec
outsb
fs
gs
or
clc
or
dec
jae
add
and
shl
mov
sbb
mov
add
stc
mov
cmp
add
mov
loop
mov
dec
or
ret
clc
sbb
add
dec
mov
push
pusha
add
mov
nop
sar
clc
aas
cld
out
pop
xchg
daa
clc
jne
inc
add
or
clc
jne
clc
add
add
pop
in
mov
clc
inc
clc
ds
lods
insb
push
aad
pop
test
cmp
add
and
add
add
cmp
mov
call
dec
and
cmp
call
cld
jmp
or
pop
out
cmp
xchg
mov
clc
shl
clc
dec
clc
dec
xabort
testb
or
add
mov
sub
xabort
add
pop
adc
add
clc
inc
add
sbb
enter
mov
divl
add
pop
add
add
in
mov
adc
clc
pop
mov
out
cmp
sbb
test
inc
clc
or
clc
scas
data16
dec
pop
aad
add
inc
clc
divb
jno
add
add
scas
pop
in
repnz
clc
xor
add
hlt
sbb
add
ljmp
pop
sti
lea
clc
cltd
jg
ljmp
clc
mov
or
clc
std
mov
jmp
dec
xchg
cmp
or
into
sub
clc
mov
test
fldt
dec
mov
mov
xbegin
outsb
or
idivl
insb
cld
jmp
mov
popa
add
mov
bound
add
xchg
stos
testl
add
cmp
clc
addr16
scas
jb
add
xchg
lret
add
mov
xlat
jmp
push
cld
jmp
sbb
adc
add
add
add
xchg
sahf
mov
add
popa
add
out
scas
enter
cmp
add
mov
addr16
in
leave
out
loop
fidivrl
jmp
add
in
mov
or
add
push
cwtl
sbb
test
in
sub
fs
pop
pop
clc
inc
add
mov
add
jle
mov
imul
add
add
clc
scas
jne
adc
add
es
pushf
fldt
push
push
mov
add
add
add
xchg
clc
xchg
outsb
pop
fistl
add
pop
xchg
das
or
add
test
arpl
add
clc
jno
add
xor
add
mov
sarb
sahf
in
jns
cli
cmpsb
clc
notl
mov
cmpsb
clc
cli
scas
data16
lods
out
popa
add
push
movzwl
ss
ret
imul
add
cmp
add
scas
pop
clc
setne
insl
out
jns
or
add
xchg
cltd
inc
add
gs
add
add
clc
sbb
add
mov
pop
imul
inc
add
clc
pushf
divb
add
fisttpll
xbegin
push
add
dec
fildl
add
jp
xor
add
add
push
add
fidivrl
decl
pop
inc
add
push
add
int
icebp
inc
add
xchg
cmp
pop
arpl
add
clc
out
mov
jo
add
clc
loop
or
push
jmp
dec
pop
jecxz
dec
lods
pop
sub
ficompl
jle
insl
mulb
gs
mov
add
popa
add
push
adc
add
xor
add
add
clc
and
add
insb
imul
clc
mov
cmp
add
jmp
lret
inc
clc
daa
clc
mov
add
inc
add
add
add
stos
in
popf
push
add
mov
clc
or
add
pop
xor
sub
cld
jmp
and
sbb
add
cld
jmp
sbbb
jmp
mov
je
addr16
mov
cmpsl
clc
pop
test
loop
aaa
cltd
mov
clc
cmp
repnz
clc
int3
jle
icebp
test
add
sub
add
push
clc
or
xchg
and
add
insl
ds
add
pusha
add
std
jp
mov
cld
jmp
sub
sub
lods
sub
or
scas
test
add
daa
clc
mov
mov
es
push
add
js
movsl
clc
nop
out
icebp
xor
sub
mov
sbb
ds
call
add
bound
add
lcall
add
add
add
mov
push
add
or
shlb
add
clc
dec
mov
dec
jbe
insb
or
clc
nop
push
clc
sbb
clc
jl
pop
ret
add
xor
add
faddl
clc
hlt
inc
clc
ljmp
aam
clc
and
add
pushf
dec
aas
inc
add
xabort
clc
mov
lods
adc
das
and
add
push
add
cld
jmp
sub
sbb
ds
clc
daa
clc
mov
in
stc
mulb
clc
mov
clc
pop
push
test
lea
jecxz
mov
add
xchg
stos
mov
dec
sbb
and
add
iret
dec
and
add
clc
pop
sbb
clc
outsb
and
stc
jb
add
clc
push
mov
clc
stos
mov
gs
jle
filds
add
add
xchg
xchg
mov
fs
xchg
daa
clc
push
add
gs
arpl
add
add
pop
jb
add
stos
and
add
add
push
sbb
inc
add
sarl
pop
pop
cmp
push
add
mov
pop
sbb
mov
clc
gs
mov
sarb
clc
cmp
add
pusha
add
cmp
mov
xor
jmp
sub
enterw
add
test
loopne
push
xor
add
add
fldenv
add
clc
inc
clc
pop
iret
mov
sar
push
aad
imul
mov
insl
cmpsb
clc
or
dec
bound
add
clc
fcom
sub
jmp
mov
sti
sbb
xchg
or
clc
daa
clc
sub
dec
cmp
clc
out
loope
scas
fcmovb
clc
mov
test
mov
ret
clc
dec
jbe
add
icebp
rcll
add
add
push
stc
inc
add
sub
fs
pushf
mov
cmp
mov
loopne
imul
cmp
clc
loop
scas
pop
es
cmc
jecxz
mov
inc
clc
adc
add
or
inc
add
jge
pop
repnz
repnz
fs
pop
dec
data16
shrl
add
in
jmp
add
push
add
xor
add
add
adc
add
add
in
test
add
fdivrs
add
mov
add
add
aaa
mov
dec
pop
loopne
int
xor
or
clc
mov
add
cmp
xchg
jno
add
xchg
sub
add
push
add
pop
clc
push
add
int
adc
clc
dec
fs
repnz
xor
add
add
add
add
bound
add
dec
xchg
call
out
push
mov
cld
jmp
jge
insb
mov
fwait
cmpsl
clc
pop
in
cmp
clc
mov
jmp
jp
sub
adc
add
sub
stos
push
clc
leave
mov
push
xchg
cld
jmp
test
fmulp
popa
add
notl
leave
or
imul
add
imul
hlt
or
aaa
or
xor
sbb
add
out
push
clc
xor
add
jne
xchg
inc
add
imul
je
add
pop
decl
xchg
aas
add
or
rorl
cmp
pop
mov
sbb
pop
sarb
clc
cld
and
popf
jae
add
mov
cmp
in
and
add
lret
in
sbb
imull
lahf
daa
clc
mov
fdivrp
ljmp
fwait
sbb
add
fdiv
mov
cld
jmp
add
jge
add
hlt
sbb
add
pop
mov
imul
inc
add
push
cmp
mov
lock
add
clc
dec
adc
add
and
add
imul
cld
jmp
je
xchg
and
xchg
imul
clc
dec
and
add
push
add
sub
add
movsb
clc
pop
jnp
sub
add
pusha
add
mov
lods
and
add
ret
mov
cmp
pop
icebp
jmp
clc
jbe
mov
jnp
add
add
add
adc
add
clc
test
or
clc
or
daa
clc
imul
test
lock
mov
push
clc
jb
add
lock
lock
in
daa
clc
jae
add
lock
add
adc
add
add
jb
add
nop
leave
sub
inc
clc
imul
or
dec
rol
clc
fists
mov
lahf
jns
add
sub
jno
add
sub
mov
clc
cltd
pop
sbb
clc
das
lods
xchg
adc
add
cmp
clc
in
mov
clc
dec
adc
ret
clc
xchg
jns
clc
stos
clc
int
clc
shl
clc
mov
clc
push
add
jecxz
cli
xchg
ficoms
data16
in
sub
iret
push
mov
cld
jmp
sub
test
push
push
ret
adcb
jnp
jg
pop
test
adc
cltd
out
cmovs
add
clc
push
lods
or
scas
mov
push
sbb
add
add
pusha
add
das
lahf
bound
add
clc
clc
fists
mov
add
sbb
push
out
cmp
add
popa
je
and
add
insb
add
add
clc
and
add
clc
or
stos
in
cmc
xor
add
mov
fcoms
fnstenv
add
mov
clc
cmp
clc
jns
cld
sub
fdivs
inc
clc
adc
shl
clc
es
ja
add
test
loopne
mov
inc
clc
adc
imul
outsb
jp
push
jno
arpl
add
or
clc
or
add
leave
and
add
loopne
inc
add
dec
mov
cmp
ljmp
push
stos
sbb
dec
outsl
test
and
add
mov
pop
jns
clc
jg
into
mov
add
pop
jnp
clc
in
or
clc
cmp
cmp
add
adc
add
dec
mov
inc
add
bound
add
push
clc
arpl
add
addr16
cmp
mov
cmp
mov
clc
sub
mov
insb
loope
sbb
jmp
dec
pop
popa
push
je
sub
add
es
cmp
adc
add
sahf
xchg
xchg
mov
jle
xor
add
xabort
sub
jle
add
call
clc
jo
add
loop
gs
pop
shrb
xchg
ret
add
push
inc
add
adc
add
fld
clc
shll
clc
xchg
inc
add
in
test
and
add
add
idivb
scas
bound
add
nop
imul
je
jp
fdivl
add
push
outsb
into
xor
cmp
clc
call
and
cmpsb
clc
add
add
xchg
aam
mov
or
adc
in
clc
bound
add
iret
bound
add
add
add
cld
jmp
popa
adc
das
in
pop
mov
xchg
loopne
out
and
gs
nop
test
popf
mull
or
addr16
mov
add
xchg
fstpt
push
cld
jmp
add
enterw
add
xchg
dec
mov
and
add
add
pop
push
add
inc
clc
pop
cmp
mov
push
ret
scas
fwait
jge
hlt
dec
pop
mov
add
add
and
add
add
mov
test
das
lock
add
dec
push
cld
jmp
sub
add
push
fs
jp
sahf
cs
jo
add
add
sub
addr16
movsl
clc
xchg
aaa
fbld
add
cmc
cmp
mov
add
clc
cli
clc
xchg
or
cltd
add
add
push
add
mov
clc
movsl
clc
repnz
clc
ja
clc
lcall
ret
clc
push
fsts
mov
clc
adc
add
lods
sbb
jmp
jge
jp
das
push
add
sbb
clc
int3
pushf
mov
clc
out
xchg
dec
xchg
mov
add
add
sar
push
clc
aas
int
clc
jno
add
testb
clc
mov
fwait
shrb
push
add
pop
clc
popf
cwtl
jns
jb
add
add
add
add
jo
add
xchg
or
loope
adc
clc
dec
arpl
add
sub
add
cmovb
add
clc
and
add
cmpsl
clc
lods
ret
clc
scas
divl
add
add
add
dec
in
out
bound
add
jae
add
pop
pusha
add
es
dec
mov
cli
outsb
jle
or
cmp
jne
or
arpl
add
clc
fildl
fdivrp
mov
cld
jmp
pop
sti
inc
clc
pop
add
add
push
clc
adc
pop
mov
cli
cmp
add
aam
add
imul
je
adc
into
add
add
sub
pop
pop
movsl
clc
xchg
dec
cmp
mov
enter
adc
add
sar
push
clc
jno
add
add
dec
fwait
lods
add
xchg
aad
shl
inc
add
daa
clc
cmpsb
clc
int3
int3
xchg
cmpsb
clc
jo
add
fbstp
add
mov
mov
add
repnz
call
add
push
add
jle
jmp
jae
add
pop
inc
add
test
sub
mov
sar
add
daa
clc
js
add
adc
add
popa
add
or
jno
add
clc
pusha
add
int
add
add
fisubs
add
clc
mov
decl
add
mov
or
clc
mov
pop
push
int
repz
xchg
scas
sbb
mov
mov
nop
repnz
mov
cmp
movsb
cld
jmp
or
jp
stos
aas
xchg
ss
add
jne
mov
jge
mov
jge
clc
add
hlt
pusha
add
enter
add
clc
ret
clc
inc
add
dec
cwtl
jle
or
std
test
mov
pop
pop
inc
clc
sbb
add
cmp
ss
mov
cmpsl
clc
mov
jb
add
and
mov
adc
xor
add
incb
add
mov
clc
jo
add
push
shll
add
add
rcr
cmpsb
clc
jle
xchg
enter
clc
mov
mov
add
adc
add
cmp
clc
bnd
xor
add
clc
xchg
bound
add
adc
add
add
ss
ret
sub
clc
and
add
test
jno
add
mov
cli
int3
dec
push
push
cld
jmp
xchg
cmpsb
sbbb
push
sub
clc
cwtl
inc
clc
jbe
sar
mov
add
icebp
adc
sbb
xchg
xor
std
outsb
mov
jmp
pop
cmp
and
add
stos
push
jne
cld
jmp
call
add
test
xbegin
add
sar
lret
add
sar
mov
hlt
inc
add
iret
jg
add
movsl
clc
dec
scas
xchg
rcl
pop
pushf
pop
int3
push
std
add
xchg
jnp
imul
add
test
or
lret
add
inc
clc
jno
add
mov
jae
add
mov
add
jno
add
aaa
jnp
in
mov
sahf
pop
clc
hlt
adc
clc
aaa
mov
aad
inc
add
jb
add
xchg
insl
and
add
push
clc
icebp
out
cs
add
rcrb
lea
test
mov
cld
jmp
mov
push
adc
lock
rcrb
add
hlt
ds
dec
push
add
jmp
add
data16
pop
push
sub
aas
cmp
and
cmp
add
push
clc
fs
sbb
push
aam
fistpll
push
jns
adc
add
and
add
mov
fistps
incb
add
insb
sbb
or
sub
pop
loope
rorb
add
test
jbe
mov
add
pop
lret
sbb
imul
data16
clc
dec
gs
inc
clc
in
inc
add
and
clc
inc
clc
cmc
or
add
push
jle
cmp
clc
jmp
iret
lods
hlt
sub
dec
mov
loope
loope
stos
imul
imul
daa
clc
mov
sub
clc
fwait
insl
xor
add
stos
decl
inc
or
add
test
clc
lods
sbb
push
mov
cld
jmp
ja
repz
cmpsl
clc
sahf
jo
add
add
add
ljmp
lea
push
add
lahf
es
push
add
loop
push
add
ret
clc
xchg
call
mov
inc
clc
or
sub
popl
cld
jmp
imul
jmp
clc
incl
pop
cmp
jmp
push
insb
lea
cmp
adc
add
add
and
filds
add
jnp
ds
jge
icebp
mov
clc
movsl
clc
out
mov
clc
and
add
inc
clc
loopne
xor
mov
inc
add
pop
fstp
sbb
add
and
ss
ret
cwtl
das
repnz
test
jne
xbegin
pop
lret
in
xabort
add
xchg
cmp
add
or
clc
pop
jns
rorb
jns
jecxz
and
pop
aaa
fstpl
clc
sar
clc
out
int
sbb
shlb
push
ret
and
sub
adc
add
clc
xor
add
sbb
lret
mov
xchg
mov
add
xchg
addr16
cs
cmpsb
clc
pop
xchg
inc
add
stos
aaa
mov
add
cwtl
lcall
or
clc
jae
add
sub
add
mov
mov
aas
fsubrl
clc
test
dec
jle,pn
push
add
adc
or
add
and
xchg
mov
clc
and
add
xchg
lcall
add
jl
add
dec
dec
cmp
ljmp
push
mov
cld
jmp
lods
sub
pusha
add
rcr
leave
daa
clc
idiv
xchg
jecxz
inc
add
loopne
dec
inc
add
daa
clc
mov
inc
clc
ficomps
pop
dec
xchg
icebp
add
add
add
clc
dec
iret
mov
and
add
mov
clc
in
mov
je
jae
add
add
and
add
clc
xor
clc
mov
adc
add
cmp
ret
sub
add
clc
lret
loop
jmp
ja
or
dec
mov
dec
iret
mov
add
insb
fldcw
outsb
jl
clc
add
add
add
loop
push
xchg
cmp
add
cmpsl
clc
adc
add
jne
xlat
sbb
add
push
add
or
mov
cld
jmp
inc
fwait
xor
or
push
fildll
mov
mov
out
cmp
ja
sahf
pop
cli
mov
push
ret
mov
adc
jmp
mov
add
add
add
inc
add
int
clc
jne
add
mov
sar
jmp
push
add
sub
adc
repz
add
adc
in
call
sub
add
daa
clc
fcmovbe
hlt
lret
fisttpl
jle
add
cld
jmp
nop
aas
sub
xchg
insl
enter
pushl
add
ss
ret
jg
cs
add
add
test
fsubp
clc
in
in
jno
add
clc
test
scas
add
clc
bound
add
lahf
mov
das
es
fcoms
add
je
clc
add
add
clc
pop
or
clc
xabort
clc
push
add
test
ds
inc
add
add
clc
jg
fisttps
stos
je
mov
cmp
dec
add
add
jmp
pushf
fnstsw
push
cld
jmp
insb
pop
outsl
cwtl
scas
xor
add
clc
jle
iret
dec
push
add
pop
add
add
mov
mov
add
push
jno
add
sahf
xchg
pop
inc
clc
fstps
clc
xchg
or
sub
add
jmp
push
fidivs
add
cld
jmp
jge
outsl
hlt
js
add
addr16
cli
cmpsl
clc
pop
jae
add
add
push
popa
cld
jmp
or
add
mov
pop
lock
in
test
int
loopne
xchg
shll
add
sub
jno
add
clc
dec
clc
jae
add
data16
sar
xor
add
in
int3
ja
jae
add
cmpsl
clc
ss
add
cmp
add
ret
clc
pop
fcompl
add
std
add
add
cs
sub
clc
mov
adc
add
clc
flds
push
inc
clc
cmpsl
clc
push
jmp
mov
add
jno
add
add
xlat
or
jo
add
add
or
jo
add
xlat
decl
dec
out
decl
sbb
push
or
add
icebp
push
sbb
shlb
add
add
sbb
push
mov
pushf
cmpsb
clc
mov
cld
jmp
ds
add
cmp
insl
sar
push
in
stc
in
sar
and
add
clc
mov
mov
sbb
clc
inc
clc
out
js
rolb
clc
add
add
clc
xabort
inc
clc
jb
add
pop
insl
and
xor
add
fs
popf
jmp
aaa
je
jnp
jmp
push
stc
mov
dec
mov
add
jnp
clc
lret
fildll
or
add
stos
divl
add
and
add
clc
xor
add
add
jae
add
pop
sub
stos
scas
or
clc
fcompl
aad
cmpsl
clc
mov
mov
and
add
add
clc
loopne
cmp
sub
and
xchg
out
jnp
fists
jecxz
stc
jne
sub
clc
add
bound
add
clc
sub
popf
js
clc
sbb
add
cmp
add
fs
jmp
test
fldcw
movsl
clc
loopne
mov
push
fidivrl
sbb
or
push
ret
push
jg
clc
xbegin
or
add
add
in
dec
push
loop
das
mov
cld
jmp
or
popa
add
outsb
jne
clc
mov
clc
dec
or
into
fcomi
call
enter
xchg
cmp
arpl
add
clc
pop
cld
aaa
enter
push
clc
incl
sti
cld
jmp
je
sub
sti
insb
in
fwait
mov
cld
mov
inc
clc
adc
xor
add
scas
int
insb
out
mov
out
mov
add
ffree
clc
cmc
or
add
xchg
ja
mov
add
jae
add
inc
clc
cltd
cmp
adc
add
add
add
fsubs
daa
clc
test
addr16
mov
imul
cmp
in
mov
and
repnz
or
clc
fildl
pop
lcall
jmp
sub
cmpsb
clc
adc
add
add
add
clc
rolb
add
add
add
add
jo
add
sub
imul
add
mov
add
std
jno
add
clc
lods
pop
xor
add
pop
clc
pop
clc
test
and
add
imul
add
clc
add
add
sub
sub
clc
cwtl
push
add
mov
mov
jp
inc
sub
xchg
push
iret
mov
clc
loope
mov
pop
push
add
loopne
aad
jmp
clc
sub
ja
add
aam
inc
clc
cmp
clc
push
clc
push
test
add
push
clc
int3
dec
sbb
jmp
nop
xor
adc
add
and
add
add
aad
sub
mov
add
cld
jmp
pop
sub
pop
imul
cmp
add
call
fistl
shlb
add
mov
fdivrs
pop
fucom
clc
mov
test
clc
jp
adc
add
and
push
add
movsb
clc
xor
add
in
daa
clc
mov
clc
pop
nop
sbb
clc
movsb
clc
popf
aam
ret
daa
clc
and
xor
and
add
and
add
ficomps
rep
cld
jmp
jno
adc
mov
pop
pop
push
sahf
push
add
mov
inc
clc
das
cmp
es
jecxz
out
outsl
sti
cmp
add
mov
xchg
dec
lea
add
fsubl
add
xchg
cmp
stos
xchg
xor
add
push
mov
cld
jmp
add
or
testb
add
fcomi
and
call
or
add
sub
add
lods
mov
clc
pusha
add
jg
sbb
jmp
clc
lods
cmp
dec
xor
aad
fisubs
cmp
dec
xlat
cld
jmp
push
add
xlat
xor
add
mov
push
inc
add
jl
pmullw
clc
out
adc
das
push
test
cmp
xchg
repz
add
add
add
imull
hlt
mov
clc
xlat
out
in
adc
mov
add
push
add
pushf
out
clc
mov
add
mov
mulb
add
mov
cmc
insl
ds
faddl
repz
popa
add
sub
add
or
rcll
or
cmp
add
dec
ljmp
inc
jb
cld
jmp
push
js
js
add
call
fists
add
xchg
gs
scas
pushf
xchg
mov
clc
sbb
fs
lret
jge
clc
out
ss
cmp
stos
push
add
repz
pop
jecxz
dec
xchg
fisubl
xchg
das
cmp
ret
cld
jmp
add
sub
cmp
movsl
clc
jge
clc
add
add
push
sub
add
clc
out
dec
cmp
sub
test
or
mov
sub
mov
add
jnp
push
push
pop
clc
call
dec
sub
mov
cld
jmp
dec
push
add
pop
push
push
mov
add
mov
fisubl
dec
cli
addr16
out
nop
add
add
xor
add
clc
aam
push
inc
clc
jo,pn
add
into
add
add
ljmp
sbb
inc
and
jmp
xor
lock
clc
xlat
jle
data16
aam
arpl
add
clc
sbb
clc
lahf
loop
mov
jl
std
aas
lods
scas
decl
xchg
jmp
add
mov
aam
add
repz
clc
inc
clc
ljmp
add
jge
add
add
insl
mov
clc
test
xchg
dec
xor
jg
clc
inc
clc
dec
ljmp
pushl
insb
dec
push
pop
push
push
cld
jmp
cmp
clc
stc
fs
data16
cmp
inc
add
mov
cld
jmp
inc
rolb
add
mov
cld
jmp
adc
mov
add
add
add
imul
jg
add
sar
stc
test
sub
cmp
fwait
sbb
aaa
or
add
xor
add
fldl
mov
xchg
or
xabort
cmp
mov
pop
fs
jl
iret
shl
pop
dec
lret
clc
mov
push
add
pop
mov
clc
daa
clc
mov
test
clc
in
cmp
add
ret
clc
das
xchg
sahf
in
fnsave
add
mov
in
dec
pushf
sti
out
dec
mov
clc
cmp
add
clc
int3
stc
pop
pop
and
mov
add
arpl
add
pop
ds
add
cmc
push
add
push
mov
mov
mov
mov
push
adc
add
xor
xor
add
pop
scas
add
add
add
add
xchg
gs
jl
cmp
mov
jbe
bound
add
clc
xlat
and
add
clc
pop
dec
push
add
inc
cld
jmp
add
jg
data16
pushf
sahf
xchg
mov
xor
add
add
mov
add
cmp
jmp
cmpsb
clc
dec
cmp
add
int
jno,pn
add
in
sbb
mov
hlt
sbb
and
cld
jmp
dec
cmp
or
add
add
clc
pop
in
lret
lea
clc
test
sub
clc
icebp
dec
adc
sti
mov
or
adc
add
or
mov
cld
jmp
pop
dec
cmpsb
clc
inc
clc
clc
dec
bound
add
xor
out
xchg
psrad
imul
std
dec
stos
add
add
clc
cmp
add
pop
push
stos
cld
jmp
sub
mov
cld
jmp
sub
cli
loopne
cmp
clc
dec
out
shll
clc
cmp
mov
add
int
xchg
push
add
cmp
jno
add
add
add
into
mov
out
enter
add
inc
add
clc
and
jmp
loope
mov
add
out
xchg
out
leave
jle
jae
add
dec
out
out
inc
add
xor
inc
clc
sub
add
inc
clc
adc
add
add
add
add
mov
cmp
lea
add
jmp
mov
jg
negb
pop
xabort
int3
cmc
cltd
clc
and
add
add
mov
sbb
jg
cmp
add
cli
pop
popf
test
insb
cmp
movsl
clc
push
icebp
fdivrl
push
add
fbld
lea
je
daa
clc
pop
push
imul
cld
jmp
add
mov
add
clc
in
xchg
xchg
repz
into
clc
jp
push
sarb
pop
inc
add
loope
xchg
adc
repnz
clc
call
dec
arpl
add
add
clc
test
ljmp
ss
ret
popa
jp
pop
inc
clc
push
jne
add
sti
mov
mov
clc
xchg
sbb
add
clc
jne
add
push
jbe
outsb
jl
push
or
cmp
call
clc
xchg
repz
clc
call
clc
ret
cli
pop
in
mov
nop
mov
clc
popf
push
push
add
stc
pop
clc
outsb
xor
add
fs
jnp
clc
pusha
add
je
add
sar
cmp
in
xbegin
push
mov
mov
loope
rcrl
add
mov
clc
int
pop
cmp
xor
add
clc
or
ret
fidivrl
jl
fstpl
jno
add
push
push
cld
jmp
popa
sub
xor
clc
lods
jne
add
push
add
test
ljmp
nop
mov
fs
outsl
jge
fcmove
jne
add
jle
add
and
add
clc
clc
xor
clc
mov
jmp
sub
popa
push
add
or
pop
mov
jno
add
repnz
into
rcrl
cwtl
pavgw
xor
add
mov
mov
add
cwtl
or
push
add
or
clc
mov
xabort
xchg
loope
jae
add
clc
in
in
sub
xchg
je
daa
clc
pop
mov
jle
dec
mov
add
pop
pop
cmp
movsb
clc
mov
push
cld
jmp
cwtl
adc
test
test
mov
in
sbb
adc
insl
adc
clc
iret
loopne
mov
mov
clc
or
xor
add
add
mov
clc
add
fs
call
and
add
and
add
cmp
into
dec
out
and
add
dec
cmc
cwtl
mov
stc
mov
aad
clc
xchg
and
jge
xchg
xbegin
add
jge
lret
pop
out
enter
xor
add
test
mov
add
pop
das
mov
lahf
dec
cmpsl
clc
out
push
cwtl
nop
cmp
add
inc
add
int
add
cmc
enter
faddl
clc
sbb
add
jmp
int3
jb
add
mov
clc
mov
clc
aad
inc
clc
mov
fadds
add
aaa
sub
dec
cmp
js
or
movsb
clc
push
add
fstpl
inc
clc
mov
jmp
imul
addr16
pop
push
add
cld
jmp
mov
pop
adc
das
out
pushf
es
inc
add
dec
lods
out
mov
and
add
mov
cld
jmp
sub
pop
jg
and
xor
add
je
clc
fstpl
jns
daa
clc
pop
xchg
cmp
out
or
sahf
sbb
cld
jmp
popa
jg
mov
add
jle
add
pop
clc
mov
ss
decl
ljmp
inc
ja
clc
dec
clc
movsl
clc
xor
add
add
mov
insl
lods
xchg
fs
xor
add
adc
add
jnp
lods
pop
dec
and
loop
loope
test
pop
pop
sti
pop
mov
sbb
mov
mov
add
xor
add
mov
and
add
ja
pop
push
neg
sbb
jb,pt
add
dec
push
cmp
sub
aad
clc
or
add
out
mov
clc
arpl
add
mov
clc
in
test
push
jmp
sbb
mov
clc
or
mov
ss
mov
lcall
add
in
mov
add
xchg
ffree
clc
jp
jle
clc
lret
clc
test
push
mov
mov
clc
mov
clc
lret
lock
cwtl
repz
jmp
jno
jg
or
push
inc
add
add
add
jp
imul
es
jg
mov
clc
mov
add
cld
jmp
nop
imul
cwtl
xchg
or
jo
add
je
cld
jmp
mov
clc
das
or
add
cmp
fcmovnu
push
lcall
clc
jbe
clc
sar
pop
mov
jmp
jb
add
clc
cmp
stos
lods
xor
add
mov
clc
and
add
repnz
cmp
imul
adc
inc
add
daa
clc
int
nop
push
addr16
in
rcrb
jne
adc
add
sub
clc
ljmp
jnp
xchg
dec
fidivrl
clc
push
loope
sbb
xchg
xor
add
add
inc
clc
add
add
add
adc
xor
add
add
add
add
clc
ret
clc
fisttpll
test
dec
jle
sub
hlt
push
add
ret
cmc
mov
add
cmp
clc
dec
xor
mov
mov
cmc
mov
cmp
clc
dec
popf
mov
clc
ss
add
call
jmp
sub
cwtl
test
clc
mov
pop
clc
cltd
and
add
clc
cmp
pop
xchg
sar
push
ss
ret
test
mov
add
mov
clc
inc
add
nop
jecxz
sub
mov
add
add
sahf
sub
inc
add
arpl
add
add
add
arpl
add
add
add
mov
sbb
jg
adc
add
cld
jmp
sub
xchg
sub
add
clc
cmp
dec
aad
out
aaa
cltd
arpl
add
out
outsl
mov
icebp
inc
clc
jo
add
add
negl
xabort
into
cmp
clc
push
add
rorb
or
jbe
push
add
imul
push
in
leave
movsl
clc
lea
cmp
ss
add
sti
adc
test
ljmp
clc
mull
popf
pop
push
add
addr16
js
clc
inc
add
add
add
cmpsb
clc
jl
add
push
cs
cld
jmp
xor
xor
pop
clc
es
gs
out
dec
in
div
cmp
add
cltd
shrl
mov
testb
clc
jno
add
clc
jmp
fs
jns
rorb
lods
xchg
jnp
cld
sub
mov
fiaddl
add
add
dec
test
add
in
cmp
add
into
push
clc
gs
loopne
hlt
mov
rorb
sbb
clc
jl
clc
iret
fcmovne
push
cmp
sti
inc
clc
popl
filds
add
in
cwtl
out
popf
inc
add
cs
enter
sub
aad
clc
or
mov
mov
clc
xchg
je
add
xbegin
mov
add
enter
add
mov
jmp
and
adc
clc
pop
out
push
xchg
cld
jmp
xchg
mov
xchg
icebp
xchg
insb
fisubrs
clc
cmp
dec
pop
cmc
out
add
add
add
clc
jns
out
push
push
add
xchg
sub
add
mov
xor
add
cld
jmp
scas
xorb
push
inc
add
movsl
clc
cmp
clc
cmp
mov
ret
clc
ja
lods
dec
cmp
pop
clc
jb
add
popf
sahf
bound
add
add
int
sgdtl
add
pop
nop
dec
pop
xor
add
dec
out
sub
test
cld
jmp
ja
sub
dec
adc
mov
decl
or
add
or
dec
or
je
cld
jmp
movsb
clc
push
jmp
jmp
jge
sub
or
sar
sbb
in
dec
and
das
mov
filds
insl
lret
inc
clc
sub
clc
incb
add
pop
movsb
clc
inc
clc
dec
nop
pop
lret
repnz
cmp
clc
mov
clc
cmpsl
clc
inc
add
insb
fwait
in
into
insl
and
add
loope
fs
push
add
fmull
add
mov
idiv
dec
cmp
pop
aam
sbb
daa
clc
inc
clc
push
pop
test
mov
clc
repnz
inc
add
sub
push
leave
inc
clc
sbb
cmp
clc
inc
add
sti
mov
add
clc
imul
lret
sbb
popf
data16
jnp
dec
repnz
jbe
jle
or
popa
add
fwait
cmp
jp
push
add
test
iret
mov
cs
mov
or
insb
das
ja
clc
add
xor
clc
and
add
add
jl
add
div
mov
clc
cmp
cmp
pop
mov
clc
int3
push
cmp
clc
jmp
lahf
push
sub
add
add
data16
mov
clc
adc
add
add
clc
in
fndisi(8087
clc
stos
push
clc
lcall
jmp
je
lods
nop
inc
or
add
sar
es
cmp
jle
clc
dec
movsl
clc
lret
jb
add
rclb
add
adc
add
clc
dec
clc
mov
dec
cmpsl
clc
fs
cmp
std
add
add
add
cmpsl
clc
test
clc
adc
add
sbb
sar
clc
outsl
out
mov
add
cltd
int3
out
mov
jne
mov
jge
mov
int
pop
sar
insl
lock
cld
fs
mov
add
cmp
xlat
outsl
insl
xchg
stc
pop
push
arpl
add
loopne
mov
add
add
inc
add
adc
add
mov
add
outsb
gs
or
adc
add
repnz
dec
inc
clc
cltd
fistpl
lods
cmc
pop
xabort
lahf
stc
jae
add
sbb
clc
sub
add
add
lahf
mov
pop
movsb
clc
es
inc
clc
dec
and
add
cmp
add
xchg
adc
pop
aam
clc
fildl
ja
add
rolb
add
xor
add
push
imul
in
mov
clc
dec
data16
outsl
dec
mov
clc
pop
clc
adc
add
sar
push
add
jne
add
push
clc
pop
dec
out
gs
dec
call
push
jmp
pop
je
mov
clc
mov
push
add
add
loope
popf
or
add
add
cmp
jno
add
inc
clc
ret
jecxz
push
in
sbb
test
cld
jmp
sbb
xor
in
mov
movsb
clc
mov
add
push
cli
xabort
push
daa
clc
sar
mov
rcrb
je
ljmp
xor
add
fisttpl
mov
clc
daa
clc
jl
add
fisubs
add
sub
add
cmpsb
clc
cmp
cmpsb
clc
adc
push
add
repz
sar
clc
jbe
lret
pop
mov
sbb
ss
clc
push
xchg
jno
add
mov
add
push
add
and
add
add
add
pop
sub
add
out
aam
add
mov
clc
sarb
repz
add
add
cld
jmp
xchg
lods
push
lahf
shlb
fstpt
dec
mov
add
in
xor
dec
sbb
jmp
sahf
xchg
add
sub
push
add
jo
add
jbe
clc
dec
dec
xor
add
push
sti
add
add
mov
stos
mov
clc
insl
xor
hlt
fs
cmp
clc
mov
sub
ljmp
add
incl
push
mov
pop
lcall
add
clc
cmp
clc
cmp
lods
cmp
add
cs
clc
xbegin
adc
add
jp
add
inc
add
mov
lcall
sbb
mov
xchg
mov
test
cs
sbb
jmp
aaa
or
clc
jmp
pushf
jne
add
addr16
xchg
xchg
gs
push
add
mov
clc
add
add
add
cli
das
das
jmp
pop
test
fisttpll
nop
fidivl
pop
cli
pop
lret
cld
mov
mov
inc
add
iret
fsubrs
jns
out
push
clc
cmpsb
clc
lret
inc
clc
add
add
add
popa
add
mov
push
add
faddl
add
pop
pop
loope
lods
sbb
add
imul
clc
mov
add
add
cmp
imul
add
cmp
add
add
xor
add
fdivs
mov
fimuls
inc
clc
je,pt
add
xchg
or
pop
mov
clc
mov
clc
or
add
fistpl
cmp
out
lret
and
mov
mov
shr
mov
clc
pop
sar
xchg
insb
clts
clc
inc
clc
fwait
adc
add
adc
add
mov
je
add
cld
jmp
sbb
pop
lods
adc
add
clc
mov
call
cld
jmp
test
push
push
test
dec
add
add
clc
mov
cld
jmp
mov
pushf
mov
cld
vmulps
add
pop
ja
add
jle
sub
in
push
clc
sahf
nop
rep
cmp
sahf
mov
xor
add
clc
cmp
xor
out
fucomi
je
add
mov
or
pop
into
xchg
stos
sbb
mov
adc
jmp
add
pop
jle
jecxz
cmp
adc
add
dec
notl
add
add
in
fcompl
scas
adc
add
pusha
cld
jmp
and
lods
aas
push
sbb
jne
cld
jmp
aaa
mov
inc
clc
ficoml
inc
clc
sbb
mov
clc
cmp
jmp
cld
jmp
sub
add
lcall
add
cmp
xbegin
test
push
add
mov
out
pop
inc
clc
cmp
sti
jae
add
add
loopne
lahf
adc
add
add
sar
in
fistpl
add
sub
movsl
clc
int3
cmp
aas
ljmp
sahf
push
sar
lcall
ja
mov
jecxz
sbb
add
test
repnz
xor
add
add
add
jne
dec
xchg
sahf
push
adc
add
neg
movsb
clc
sti
inc
clc
sbb
sub
sub
add
jbe
and
add
jmp
fdivrl
add
testb
sbb
add
sbb
repnz
add
cld
jmp
sub
jmp
cmp
cld
jmp
mov
scas
sub
sbb
jmp
lea
lods
cmp
push
mov
add
roll
push
test
divl
add
aas
jae
add
inc
add
add
add
add
clc
cmp
inc
clc
inc
clc
dec
push
lret
jnp
fbstp
in
pusha
add
cmp
loop
stos
sti
xor
add
jmp
push
insb
sub
clc
clc
jbe
clc
push
ret
pop
add
pop
sub
js
lahf
cld
js
clc
test
mov
clc
icebp
cld
xchg
data16
and
add
and
add
icebp
mov
add
mov
lahf
jb
add
pop
mov
mov
ss
ret
scas
adc
cmp
sbb
add
xlat
popl
scas
mul
clc
adc
add
int3
sbb
clc
fsts
rorl
add
sar
ja
clc
popf
or
inc
add
inc
add
sar
add
pop
insb
cmp
ret
adc
add
clc
push
dec
addr16
cmp
sar
fldl
push
cwtl
clc
and
add
aaa
fisttpl
out
mov
add
ret
in
loopne
cmp
mov
mov
adc
sbb
clc
sbb
int3
inc
add
cmp
clc
jbe
stc
loope
inc
clc
cmp
mov
cld
jmp
or
mov
mov
clc
pushf
hlt
mov
clc
jno
add
cmc
pop
jg
imul
fsubs
add
pop
jp
and
add
xchg
jno
add
pop
out
outsb
in
xchg
jecxz
inc
add
push
add
pop
xor
add
dec
pop
cmp
ljmp
insl
mov
cmp
sbb
inc
mov
ja
sbb
sahf
rcrb
clc
mov
movsl
clc
insl
pop
int3
add
add
mov
and
stc
add
add
push
lahf
sub
mov
cld
das
repnz
clc
stc
sub
scas
cli
jmp
fisubrl
popa
add
dec
push
add
cld
jmp
je
cmpsb
pop
or
sar
pop
cmc
dec
pusha
add
lret
incl
adc
inc
add
lods
fs
jle
in
mov
mov
shlb
add
out
sbb
mov
inc
clc
push
aad
incl
or
jge
clc
addr16
cmovno
add
mov
sbb
jl
cmp
add
jno
add
add
scas
sub
mov
clc
stos
xor
shlb
add
clc
dec
psubusb
scas
cs
notb
add
stc
push
add
jae
add
je
clc
push
dec
push
push
ret
sub
jg
clc
adc
add
dec
or
add
stc
mov
fldenv
add
cmp
cs
out
pop
xchg
or
stos
sbb
xor
cld
jmp
add
add
xchg
fidivl
add
add
dec
pop
clc
jecxz
pop
mov
mov
xchg
fmull
push
clc
push
inc
cmc
ljmp
mov
lea
arpl
add
pop
cmp
jno
add
clc
dec
or
mov
clc
in
jge
call
add
clc
sahf
rcll
xor
add
or
cmp
add
cmc
mov
add
mov
xor
add
fcoml
inc
clc
xor
dec
outsb
dec
fs
popa
add
and
add
data16
outsb
lock
cli
sbb
fldcw
mov
push
nop
cmc
roll
add
mov
fsubp
clc
ljmp
clc
inc
add
int
lock
clc
stos
sub
add
in
lcall
add
push
add
inc
add
fwait
std
fsubp
clc
aam
sti
xor
add
test
pop
xchg
add
lods
xchg
js
or
in
and
add
cmp
add
leave
lods
imul
jb
add
hlt
cmp
add
pushf
leave
sbb
rorl
out
lods
rcl
stos
inc
clc
pop
inc
clc
mov
clc
jae
add
dec
xor
add
cmp
pop
cld
jmp
sub
add
jbe
cwtl
enter
pop
outsb
in
in
in
and
aaa
push
add
xchg
lock
pusha
cld
jmp
outsl
add
clc
stos
inc
clc
inc
add
ds
xor
add
add
test
and
add
clc
add
add
add
add
add
lods
popa
add
nop
mov
ja
mov
add
jecxz
or
push
mov
cld
jmp
or
out
xchg
xabort
clc
add
add
add
mov
dec
adc
add
lfs
add
inc
add
test
outsb
outsb
dec
sub
xor
add
lods
mov
add
add
mov
inc
clc
data16
dec
xchg
into
out
lahf
dec
mov
clc
mov
clc
pop
mov
add
jno
add
add
imul
popa
add
dec
mov
clc
lea
add
lods
idivb
jnp
clc
movsb
clc
adc
add
test
and
and
add
mov
add
mov
aad
into
data16
aas
pop
lods
mov
mov
dec
pop
mov
loope
cmp
add
cld
call
fisttpl
add
cmc
jg
push
sar
jbe
rorl
loopne
test
dec
dec
mov
add
test
cwtl
out
out
shlb
int3
shll
add
test
cmp
mov
clc
pop
out
jbe
clc
cmp
push
ss
ret
dec
aas
adc
add
mov
add
jg
dec
mov
clc
add
add
movsb
clc
mov
fidivl
add
sub
jge
clc
call
clc
ret
clc
cmp
push
cld
jmp
xchg
fs
sub
sbb
clc
sub
clc
inc
clc
mov
bound
add
jmp
aaa
nop
pushf
mov
clc
mov
inc
add
lods
push
addl
ror
jbe
ja
clc
pop
and
cmp
dec
inc
add
add
add
ja
std
add
add
enter
popf
aas
or
cmp
ljmp
dec
push
add
test
add
aaa
int
add
loope
jecxz
repz
and
add
stc
pop
jo
add
pushf
add
add
mov
cld
jmp
fwait
dec
ja
mov
clc
dec
pop
pop
clc
inc
clc
ret
clc
xchg
testb
fxch
lods
aas
mov
add
int
clc
push
push
cld
jmp
push
scas
sub
pop
or
sub
add
dec
push
jmp
dec
pop
or
clc
lret
cli
sbb
aam
int
gs
shrb
dec
jg
pop
js
add
ret
lret
xchg
sbb
adc
add
jne
inc
add
aaa
jo
add
pop
adc
add
push
push
jne
mov
clc
sbb
cmp
add
mov
add
mov
jnp
clc
push
add
pop
call
cld
jmp
scas
add
mov
rcr
push
movswl
cld
jmp
mov
clc
fs
mov
cmp
or
mov
imul
add
xor
add
xor
ss
pop
cmp
fs
sub
add
mov
clc
cmpsl
clc
xor
add
clc
aam
cmp
into
pushf
cld
sbb
js
pop
xchg
jb
add
xchg
or
push
add
leave
bnd
test
sbb
dec
roll
add
add
nop
or
call
xchg
out
or
add
and
add
sarl
mov
pop
lods
mov
sbb
add
arpl
add
mov
add
jp
sub
and
add
sbb
jmp
add
test
clc
ret
fstl
enter
jbe
jmp
dec
push
pop
arpl
add
inc
clc
xchg
cmp
pop
out
clc
push
add
xchg
dec
daa
clc
sahf
enter
add
and
add
cmp
js
addr16
dec
or
call
jge
sar
rclb
add
clc
sub
clc
jmp
cs
clc
push
add
sti
or
shrl
clc
xbegin
jmp
and
orb
clc
cmp
inc
and
cld
jmp
or
gs
stos
pop
cmc
lods
idivl
scas
or
insb
leave
and
mov
or
sub
insl
mov
es
out
lcall
jmp
or
add
sub
xor
add
push
dec
pushf
loopne
jmp
pushf
mov
fsubrp
aaa
fs
mov
jmp
or
and
add
fs
inc
clc
cmp
clc
insb
cmp
ss
push
clc
pop
or
clc
xor
clc
mov
mov
dec
hlt
pop
jmp
incb
add
jnp
add
cmpsl
clc
stos
in
imul
enter
jb
add
sahf
and
fimull
clc
ret
dec
mov
add
push
inc
clc
xchg
jb
add
add
add
and
add
shll
add
insl
roll
sti
adc
add
ss
ret
dec
mov
data16
pop
ficoml
icebp
sub
ss
clc
ret
clc
ret
clc
pushf
mov
call
ljmp
and
in
inc
clc
lahf
xchg
push
add
addr16
dec
jge
add
xchg
pop
sub
fisubl
pop
addr16
movsb
clc
test
adc
out
cmpsb
clc
loopne
add
add
add
add
gs
add
pop
cmp
add
xchg
mov
adc
add
xor
add
push
add
in
imul
jns
clc
adc
add
push
aaa
mov
sub
add
add
add
or
clc
push
clc
lret
ret
je
inc
cld
jmp
sub
or
add
jle
test
outsb
int3
int3
stos
and
add
push
sahf
frstor
add
xchg
xchg
push
je
add
inc
clc
jae
add
fists
add
add
sar
cmp
lock
shrl
imul
in
mov
clc
pop
clc
ja
dec
dec
cmc
inc
add
loopne
push
test
cld
jmp
sub
es
mov
in
testl
cld
jmp
dec
sub
add
cli
mov
clc
clc
jae
add
mov
jns
add
pop
imul
and
add
sbb
mov
add
add
add
cmpsb
clc
lret
clc
std
push
clc
pop
jge
test
lcall
jns
add
cs
incb
add
and
add
inc
add
lahf
cli
in
aad
fmul
add
ds
add
in
inc
add
xor
or
arpl
add
adc
add
mov
jne
sar
fsubs
pop
inc
clc
bound
add
add
clc
gs
loope
cmp
add
xor
add
add
push
add
and
add
add
cmp
jl
mov
add
clc
notb
cld
jmp
inc
push
mov
lods
inc
add
bound
add
daa
clc
lods
pop
stc
pop
hlt
test
clc
loopne
inc
add
jo
add
data16
push
add
add
add
clc
add
jp
xabort
sar
leave
mov
add
ficompl
pop
cmp
pop
clc
and
add
add
insl
sub
popf
call
xchg
push
adc
add
sahf
outsl
or
loop
pop
push
cwtl
incl
adc
xchg
mov
or
arpl
jmp
push
push
sar
xchg
adc
xchg
or
clc
ds
add
add
shl
scas
push
pop
aaa
sub
jmp
cld
mov
add
shrb
mov
xor
sbb
clc
adc
add
ret
clc
fiaddl
add
cmpsl
clc
dec
inc
clc
aad
int
scas
xchg
imul
mov
inc
aas
clc
add
add
and
xchg
repnz
clc
add
js
enter
daa
clc
ds
clc
negb
sahf
icebp
iret
jnp
add
sbb
clc
aad
mov
xor
add
add
xchg
outsl
mov
imul
jle
std
push
add
popa
add
jns
clc
lcall
gs
inc
add
iret
mov
sub
bound
add
sti
sub
clc
xor
add
clc
stc
addr16
mov
insl
push
add
bound
add
add
xchg
xchg
mov
sbb
jge
cld
jmp
mov
bound
add
mov
clc
xchg
mov
add
and
add
clc
iret
jo
add
adc
add
clc
bound
add
clc
pop
pop
cmp
add
xchg
add
add
add
imul
mov
push
ret
and
dec
mov
gs
sbb
add
or
pop
icebp
or
lea
popa
add
rcrb
adc
add
sbb
loopne
in
pushf
fsts
ljmp
jmp
and
inc
clc
test
clc
push
add
add
add
sar
add
cmp
cltd
repz
add
lock
sbb
insb
mov
add
sub
aam
pop
xchg
pop
lods
mov
and
clc
into
scas
push
xchg
int3
sub
add
clc
into
push
mov
cld
jmp
xor
popa
dec
or
add
clc
and
add
dec
xor
add
sbb
push
xlat
mov
push
mov
roll
clc
or
or
jo
add
add
add
clc
fisttps
add
ds
lret
dec
lock
add
jecxz
nop
fisubs
add
adc
add
xor
add
es
add
add
add
jl
clc
dec
and
add
pop
xchg
push
add
movsl
clc
pop
lock
add
mov
clc
inc
clc
add
or
dec
je
jbe
sar
cmp
mov
add
mov
clc
repz
clc
and
xchg
and
xor
add
outsb
outsl
mov
jb
add
inc
add
sub
ljmp
add
mov
out
mov
mov
aad
mov
imul
clc
cmp
add
xor
add
clc
pop
dec
inc
add
sbb
add
test
push
out
mov
mov
add
adc
or
clc
add
dec
aam
or
add
adc
add
in
xchg
pop
inc
add
inc
add
insl
push
aam
into
jg
adc
add
add
cmc
lret
add
xchg
loopne
in
sbb
hlt
dec
lock
add
mov
clc
outsl
cmp
clc
ljmp
je
add
sahf
add
add
add
cld
jmp
cmpsb
sub
stc
add
add
mov
cltd
mov
fsubp
clc
xchg
pop
imul
clc
fiadds
clc
push
mov
aaa
out
jle
sbb
lcall
pop
push
nop
jne
clc
cltd
ret
das
sbb
imul
mov
add
add
clc
and
xchg
sub
ficoms
lea
lock
add
sti
dec
popf
aam
stos
xchg
xchg
adc
add
mov
adc
add
je
cmp
iret
and
cmpsl
clc
in
xchg
sbb
cmp
add
gs
sbb
clc
loopne
push
and
lret
xor
add
ds
je
int3
arpl
add
inc
clc
dec
or
hlt
fimull
push
clc
sete
pop
clc
mov
clc
cmpsl
clc
push
in
mov
je
test
jne
clc
xchg
add
add
add
xchg
xchg
icebp
adc
pusha
add
inc
add
mov
mov
dec
cmp
jmp
test
inc
add
loop
dec
bound
add
enter
es
into
cmp
add
cmpsl
clc
dec
fxch
sbb
inc
add
xor
in
push
ret
cmp
call
fldenv
add
mov
push
cmpsb
clc
fs
mov
add
bndstx
add
arpl
add
dec
cmp
mov
fistps
sbb
add
jmp
jge
hlt
xbegin
cmp
clc
dec
aaa
xchg
sbb
xchg
out
pop
clc
lea
bound
add
clc
or
cwtl
push
add
shlb
pop
mov
outsb
notl
add
mov
jmp
sub
jg
add
and
add
xor
add
clc
mov
add
clc
cmc
mov
int3
ficoms
inc
add
js
clc
jnp
clc
fs
das
jnp
mov
cld
jmp
pop
pop
pop
push
cli
mov
or
push
pop
mov
fwait
jno
add
pop
jns
dec
xchg
mov
add
stc
dec
mov
add
or
out
adc
add
clc
jp
cmp
push
add
fsubrs
clc
ss
add
xor
add
jae
add
mov
cld
jmp
add
ja
dec
ljmp
add
lret
das
sub
lret
add
sbb
jl
ljmp
cmpsb
clc
push
clc
or
push
push
mov
add
fnstenv
arpl
add
cmp
clc
jbe
and
add
rclb
add
add
sbb
xchg
mov
in
fidivl
clc
cltd
in
out
mov
test
ljmp
mov
addb
add
lods
addr16
mov
add
loope
pop
js
clc
sub
mov
or
outsb
stos
loope
sbb
clc
and
add
mov
mov
fwait
jecxz
hlt
xchg
xchg
push
clc
push
add
and
add
add
pop
or
clc
roll
xchg
mov
bswap
push
add
arpl
add
outsl
jne
clc
xchg
enter
ljmp
add
cli
xchg
cli
fstpl
add
add
data16
das
or
push
add
sar
out
push
mov
cld
jmp
adc
insb
data16
movsl
clc
inc
clc
jns
or
push
push
sub
cld
jmp
sub
sahf
mov
imul
filds
loopne
repnz
add
outsl
scas
cmp
add
adc
add
jbe
jbe
pop
clc
xor
add
add
add
xor
add
jmp
clc
and
inc
add
popl
push
ret
sub
es
clc
add
stc
ret
clc
out
loope
sub
fimuls
data16
imul
xchg
lods
or
xchg
xchg
and
add
cmp
add
clc
cwtl
jae
add
clc
ror
stc
ret
push
jne
push
and
add
add
fldl
test
sti
je
mov
fcompl
inc
add
movsb
clc
add
add
dec
jge
cmp
clc
push
or
ljmp
add
or
add
loope
pop
fdivl
add
cmp
mov
mov
cld
jmp
aas
sub
hlt
rclb
xor
jle
imul
adc
and
add
clc
jo
add
clc
push
add
frstor
in
ljmp
add
inc
add
cmc
xor
mov
and
add
in
mov
add
add
adc
clc
mov
add
iret
pusha
add
mov
pop
push
add
xchg
jle
clc
lods
stos
cmpsb
clc
lret
lods
mov
or
aaa
push
adc
add
aas
or
clc
cmpsb
clc
jb
add
clc
push
add
aad
lcall
pop
clc
ret
clc
jnp
and
gs
xor
add
mov
iret
addr16
arpl
add
clc
nop
mov
aam
mov
add
mov
add
add
jns
add
pop
cmp
add
test
add
cmp
pop
bnd
xor
add
add
clc
dec
and
mov
xor
add
cmp
outsl
xlat
enter
or
jae
add
add
ljmp
or
xchg
loop
call
icebp
mov
fiaddl
add
lods
sub
clc
xchg
dec
xchg
push
sbb
imul
in
adc
add
xor
add
clc
lea
lods
ljmp
int3
sub
cltd
clc
adc
add
add
sbb
in
add
fsubp
add
sbb
mov
icebp
mov
pop
pop
lods
js
clc
mov
stos
sti
jns
add
fsubs
jmp
sbb
or
test
inc
add
push
jmp
or
cmp
add
pop
out
mov
testl
mov
inc
clc
jns
inc
add
jmp
test
inc
add
pop
jns
sar
clc
mov
clc
iret
popa
add
call
clc
cld
fimull
dec
inc
clc
sub
clc
mov
fsubr
sub
add
add
and
add
loop
fs
mov
mov
add
ss
add
fcmovbe
fisubrs
clc
and
jns
mov
lea
sub
unpcklps
add
imul
ljmp
jno
add
imul
add
push
cmp
xor
add
add
mov
int
shrl
jb
add
clc
and
add
movsl
clc
add
add
dec
mov
pop
mov
ficomps
add
ret
cmp
inc
add
inc
add
inc
clc
nop
out
in
pop
add
add
jp
cmpsl
clc
dec
mov
clc
gs
mov
add
add
add
repnz
outsb
cmp
rorb
fdiv
movsb
clc
push
jmp
adcb
add
inc
clc
imul
clc
cwtl
xor
add
xor
repz
lods
loope
or
xchg
mov
push
lcall
sub
sub
mov
cld
jmp
test
mov
add
clc
push
add
or
mov
fld
clc
in
inc
clc
sub
add
sarb
mov
cld
jmp
push
adc
cmpsb
clc
mov
add
xabort
cli
mov
es
bound
add
jp
pushf
pop
dec
sub
add
add
clc
gs
icebp
mov
push
add
mov
jo
add
sbb
add
stc
cmp
inc
clc
lock
insl
or
lret
ds
add
jo
add
jp
std
xor
dec
mov
pop
clc
scas
in
mov
clc
popl
das
sub
mov
add
push
add
xchg
loope
mov
clc
xchg
jns
adc
sar
clc
outsl
and
add
mov
call
ss
ret
xor
pop
pop
fs
ds
xor
clc
mov
cmp
mov
pop
js
nopl
or
jmp
test
mov
leave
sub
jmp
scas
xor
mov
mov
cld
jmp
sub
cwtl
arpl
add
or
aaa
icebp
pushf
jle
push
sbb
or
clc
inc
clc
or
idiv
mov
data16
sarb
scas
cwtl
icebp
test
inc
add
call
pusha
add
inc
add
sbb
jno
add
pop
push
add
inc
clc
xchg
inc
add
jae
add
add
sar
sbb
adc
add
push
cld
jmp
sub
adc
add
cmp
cwtl
push
add
scas
xchg
cmp
push
add
add
add
mov
xlat
notb
add
rolb
push
jmp
sub
fs
out
xchg
jne
div
cld
jmp
jp
aas
cwtl
add
add
or
sub
xbegin
cmp
lods
dec
dec
stos
fsubl
add
sub
jmp
sub
cmp
clc
outsb
pop
clc
cmp
clc
repz
popa
add
inc
clc
sar
clc
dec
inc
add
sarl
adc
add
add
loope
nop
cmp
clc
jb
add
clc
es
pop
lock
fdivs
mov
mov
add
dec
and
add
push
call
cld
jmp
sub
mov
insb
repz
ret
cmp
sub
out
push
daa
clc
xchg
dec
mov
push
jl
jmp
mov
mov
ja
jmp
clc
rol
clc
jae
add
int3
cmp
dec
and
add
hlt
sbb
add
add
loop
pop
mov
add
clc
mov
in
push
test
mov
aaa
or
pop
jae
add
adc
add
add
test
out
push
add
repnz
dec
jb
add
lods
inc
add
aaa
or
xchg
movsb
clc
aad
xchg
fst
fildll
dec
cmp
add
add
insl
ljmp
pop
clc
mov
push
add
mov
fsub
clc
and
add
gs
divl
sub
inc
clc
int3
xchg
push
push
clc
cmp
clc
mov
add
or
clc
loop
cli
scas
jno
add
jle
cmc
hlt
xor
add
add
xchg
dec
cmp
int
clc
or
in
mov
add
add
ret
add
test
nop
test
push
adc
push
clc
xchg
in
sbb
mov
fxtract
cmp
add
add
test
ret
clc
fwait
push
mov
cld
jmp
sahf
sahf
and
pop
aas
es
sbb
and
add
adc
add
fwait
cmpsb
clc
add
add
clc
movsb
clc
scas
fdivl
clc
hlt
push
mov
cmc
ss
xchg
sar
inc
clc
in
movsb
clc
jl
lret
in
jg
imulb
addr16
aam
jecxz
mov
test
insl
mov
sub
clc
mov
cli
pop
loopne
sbb
add
fbstp
inc
add
loope
jmp
arpl
add
clc
jg
pop
mov
dec
dec
loopne
ds
punpcklbw
add
pusha
add
xor
iret
mov
cli
movsl
clc
or
clc
sub
mov
jo
add
inc
add
add
add
or
inc
clc
stos
sahf
dec
ret
ficomps
clc
xchg
xor
add
lods
ror
mov
add
adc
add
add
das
std
cwtl
or
add
sar
pop
inc
lcall
jg
adcb
add
jge
clc
or
mov
add
push
clc
jmp
addr16
xor
add
js
clc
add
add
jbe
outsb
pop
or
inc
clc
sbb
clc
xchg
lcall
insl
cmp
decl
addr16
ljmp
sbb
iret
adc
add
add
add
lods
mov
add
data16
push
mov
inc
add
popa
add
hlt
data16
fs
scas
in
dec
arpl
add
fxch
cmp
fldl
decb
stos
inc
add
sarl
cwtl
xchg
push
cmp
push
push
call
jl
clc
pop
in
sbb
fisttpl
clc
outsb
mov
add
dec
pop
xor
add
xor
shlb
add
mov
dec
or
jo
add
sbb
dec
mov
cmp
clc
push
inc
clc
xchg
je
xchg
mov
clc
pop
xchg
xor
add
loope
jl
add
lock
clc
push
dec
stos
fbld
repnz
cmpsb
clc
int
bound
add
add
ja
add
mov
ret
shlb
mov
clc
and
add
shlb
fistps
add
movsb
jge
es
xchg
inc
clc
stos
es
scas
out
xor
and
mov
add
add
add
add
clc
jl
data16
cmc
or
gs
inc
add
push
dec
out
mov
push
incl
inc
aam
cmp
or
xbegin
add
daa
clc
aaa
ss
popa
add
movsl
clc
mov
dec
jns
int3
mov
test
nop
jl
pop
cs
dec
cmp
loopne
lods
jle
sub
repz
add
int
pop
push
not
ss
ret
dec
test
mov
xchg
xchg
aam
clc
in
mov
sar
push
data16
cmp
adc
add
iret
pop
fisttpll
sbb
sub
add
fisttpl
cmpsl
clc
inc
add
imul
add
test
inc
clc
sub
imul
faddl
add
push
dec
call
jmp
outsl
jp
push
imul
jne
clc
sbb
movsl
clc
leave
stc
icebp
cmp
sub
movsl
clc
pusha
add
dec
test
out
or
xchg
loopne
push
add
mov
sub
add
loop
and
icebp
inc
clc
imul
jg
xor
add
clc
push
jecxz
lcall
add
add
aaa
test
ficomps
push
add
outsl
add
mov
xchg
mov
jmp
xchg
sub
inc
clc
sub
clc
lea
adc
add
clc
add
add
add
add
or
mov
clc
jno
add
outsl
out
pop
or
clc
mov
lcall
or
push
fistpll
cmp
clc
int
sub
jns
clc
jnp
clc
cmc
jb
add
or
add
push
pushf
pop
pop
icebp
fsubrl
cmp
mov
pop
cld
jmp
mov
xor
add
clc
jl
push
mov
pop
inc
add
add
and
cmpsb
clc
cmp
add
clc
int
sbb
insl
dec
adc
add
add
cs
add
out
add
add
mov
push
add
jmp
aaa
pop
inc
add
in
outsb
mov
or
mov
call
fisttpll
xchg
iret
pop
mov
clc
cmpsb
clc
cmp
clc
jbe
lret
in
mov
add
ret
clc
mov
rolb
add
mov
clc
sbb
xor
add
add
ret
clc
push
add
das
pop
cmp
dec
adc
int
lods
xchg
inc
add
faddl
jp
jg
add
add
scas
sub
pop
fnstcw
push
clc
sbb
clc
fadds
mov
add
xchg
xchg
icebp
push
pop
add
add
add
jle
mov
iret
mov
ja
and
xchg
xor
add
jmp
push
mov
sarl
or
cmc
stc
jne
mov
outsl
pop
adc
add
add
or
cmp
xor
add
ds
js
mov
clc
mov
add
stos
je
clc
lea
add
add
sti
push
scas
jo
add
clc
inc
add
xor
add
add
cwtl
jge
push
dec
popf
in
cli
cmp
shrl
push
dec
rolb
add
add
cmp
dec
adc
inc
add
add
add
outsb
in
clc
and
add
add
add
or
clc
daa
clc
cli
or
push
pop
inc
add
xchg
ljmp
cli
loop
mov
divl
mov
add
add
mov
push
cmp
ret
clc
mov
dec
dec
addr16
movsl
clc
inc
add
jecxz
loope
ljmp
dec
call
in
jbe
add
xchg
shll
push
out
jo
add
xbegin
mov
clc
adc
add
clc
or
clc
out
cld
mov
lahf
jnp
hlt
fucomip
cmc
ss
repnz
jns
dec
ljmp
mov
add
push
add
es
data16
scas
fsubrs
push
mov
xchg
pop
xbegin
clc
add
add
add
pop
add
add
xchg
and
add
jl
clc
movsl
clc
mov
cmp
add
jecxz
cs
out
shlb
add
add
mov
pushf
sub
add
cmp
dec
or
jl
dec
gs
push
add
cmp
fimull
or
clc
push
inc
clc
in
add
add
add
add
add
hlt
xchg
mov
add
arpl
add
clc
adc
out
sub
addr16
bndstx
test
sub
add
sahf
sub
clc
xchg
add
add
clc
add
add
sar
dec
sub
or
sar
clc
mov
stc
inc
clc
add
add
jno
add
add
inc
clc
std
enter
mov
add
nop
and
add
mov
add
clc
cmp
clc
loopne
call
add
shlb
add
std
mov
clc
movsb
clc
xor
add
outsl
sarl
inc
add
push
add
mov
add
xor
scas
loop
jnp
add
cltd
cmc
pop
aaa
push
push
clc
repz
sub
add
add
pushf
pop
mov
clc
pop
pop
xchg
xbegin
add
hlt
outsl
cmp
jns
in
clc
fistpl
mov
add
insl
dec
test
jo
add
iret
mov
js
add
sub
sbb
clc
int
dec
adc
add
pop
jl
in
push
ljmp
add
add
std
jge
fistl
xchg
adc
mov
lahf
out
pop
clc
sarb
pop
clc
arpl
add
add
cs
adc
add
addr16
fadds
mov
clc
clc
mov
clc
fists
lods
ficoms
add
out
lcall
add
test
addr16
adc
add
out
inc
add
or
mov
and
add
xor
add
add
add
push
add
nop
fisttps
xchg
fs
iret
ljmp
inc
add
into
dec
inc
clc
xchg
movsl
clc
pop
sti
aad
mov
pop
mov
add
add
es
test
cmp
sbb
pop
divb
aaa
cmp
clc
xchg
popf
mov
cmc
imul
jne
bound
add
xchg
cmp
or
clc
insl
push
add
mov
clc
add
add
clc
sbb
clc
cmp
clc
sar
and
add
dec
int3
xlat
inc
clc
test
stos
sub
clc
dec
inc
clc
lcall
sarl
leave
push
add
lock
ss
mov
in
pop
mov
add
add
add
add
mov
clc
mov
mov
in
jecxz
mov
xchg
xchg
ret
mov
aam
outsb
jecxz
xor
add
mov
dec
add
add
pop
dec
rcl
mov
push
cmp
adc
add
add
aad
das
popa
add
cmp
out
push
or
icebp
imul
scas
gs
clc
cmp
sar
jmp
add
inc
clc
dec
addr16
jmp
add
mov
add
fsubp
clc
dec
cmp
xlat
daa
clc
jne
out
cmp
mov
mov
fldz
clc
ja
ret
clc
out
out
push
mov
clc
adc
add
add
cwtl
or
push
add
out
sbb
dec
cs
inc
clc
outsb
dec
xor
add
repnz
cmp
and
add
xchg
insb
push
or
pushf
nop
push
add
add
add
add
cmp
pop
ret
inc
clc
in
mov
mov
add
mov
fwait
ss
jo
add
clc
loopne
jo
add
add
add
pop
je
add
cld
test
adc
add
add
mov
or
insb
insl
stos
mov
loopne
or
add
clc
mov
imul
pop
mov
into
mov
add
xlat
movsl
clc
dec
cld
lods
enter
xchg
or
ljmp
add
into
pop
xor
jge
cmp
cs
add
add
add
bound
add
add
add
mov
in
scas
ffree
clc
aaa
lods
jmp
sub
xchg
cmp
clc
sbb
stos
out
in
lcall
pop
push
add
std
xchg
cwtl
inc
add
adc
add
add
add
add
add
faddl
add
into
mov
clc
leave
pop
and
add
xchg
mov
icebp
cmp
add
imul
pop
call
add
mov
add
lcall
scas
data16
pop
lret
inc
add
push
pop
ret
clc
mov
add
in
ljmp
mov
mov
sbb
dec
nop
jl
xchg
mov
int3
lcall
pop
lret
dec
lret
int
mov
mov
shll
clc
mov
pop
data16
inc
add
and
ds
cmp
clc
cmp
gs
test
xchg
arpl
add
leave
insl
jne
lret
cmp
pop
out
call
push
add
aam
test
clc
ds
mov
add
add
test
gs
outsl
sbb
mov
adc
xor
add
push
pop
stos
inc
add
data16
lock
add
cld
fnstenv
inc
clc
sbb
or
int3
sbb
clc
cmp
repnz
in
loope
sti
lods
or
push
add
cltd
add
add
lcall
adc
add
add
add
add
mov
leave
outsb
mov
dec
inc
clc
sar
clc
xor
add
cmp
mov
add
inc
clc
and
add
push
add
ret
clc
fildll
jecxz
inc
add
mov
test
dec
lcall
repnz
xor
add
clc
out
dec
xchg
daa
clc
xlat
int
ss
sbb
mov
add
clc
xchg
mov
dec
jmp
sar
push
sub
stos
pop
clc
out
lock
call
test
adc
add
sub
xor
add
mov
unpckhps
pop
pop
lea
clc
xor
add
pop
cmp
arpl
add
jnp
mov
mov
jl
inc
add
in
and
aas
rol
clc
ds
testl
push
jp
add
pop
cld
in
cmp
pop
cmp
add
js
cli
add
test
fs
xchg
sub
repnz
sarb
clc
jb
add
aas
mov
or
add
add
lods
ja
sbb
push
jmp
pop
inc
clc
mov
add
mov
test
mov
dec
sub
rolb
add
or
sar
fbld
clc
imul
add
call
add
push
call
clc
jmp
clc
mov
xor
movsb
clc
sub
stos
sub
lods
add
add
outsb
mov
sbb
pushf
fucomp
test
sub
dec
jns
add
add
inc
add
in
cltd
into
data16
mov
sub
add
jmp
add
inc
add
lea
add
ficompl
xor
add
mov
sub
add
repnz
pusha
add
xbegin
add
pop
fwait
cld
sarl
add
add
add
das
stos
dec
movsl
clc
clc
dec
cmpsb
clc
cmpsl
clc
inc
add
ljmp
aaa
xor
add
add
out
das
js
jne
add
add
dec
cmp
add
clc
and
jl
clc
or
sar
jo
add
add
cmc
ds
add
loope
imul
inc
add
jb
add
clc
sub
loopne
movsb
clc
jbe
adc
add
add
mov
jge
add
cmp
clc
popa
add
clc
adc
add
add
lahf
sar
add
add
jno
add
add
test
pusha
add
xchg
in
or
clc
push
add
mov
clc
push
lods
pop
clc
or
add
fdivl
add
or
fs
loopne
sahf
sub
clc
insl
jnp
lock
stos
dec
xlat
rolb
enter
pop
icebp
rorb
adc
add
add
negl
repnz
add
add
xor
clc
mov
filds
clc
or
leave
xchg
push
push
adc
clc
stos
sbb
pushf
mov
jle
jl
add
inc
add
sbb
imul
sbb
xchg
cmp
icebp
fdivrs
adc
add
add
xbegin
or
clc
out
adc
clc
clc
stos
data16
leave
sbb
jp
cltd
inc
add
jnp
add
aaa
mov
clc
mov
add
xor
clc
imulb
add
add
cmp
sqrtps
add
mov
int
jb
add
xor
xchg
mov
ja
ret
clc
dec
sti
inc
clc
cmp
cmp
add
lods
jecxz
das
cmp
add
mov
inc
add
cwtl
mov
clc
push
add
iret
mov
pop
clc
jne
clc
push
push
cmp
pop
inc
add
push
add
jl
add
jnp
sbb
inc
clc
cmp
clc
sub
clc
clc
mov
add
mov
call
add
adc
add
out
lods
dec
jmp
add
clc
imul
lea
push
clc
loopne
popa
add
fnstenv
jl
add
mov
add
sar
add
add
add
mov
add
add
lock
lret
sub
add
jne
sahf
mov
add
add
sbb
xchg
pop
or
ret
clc
sbb
add
sahf
sar
add
add
fisubrl
test
enter
cmp
and
mov
fcoml
clc
clc
and
add
std
push
xlat
jp
add
lock
add
add
add
add
fimull
add
add
mov
ds
call
jp
icebp
xchg
lea
fstpl
clc
sub
hlt
es
pop
mov
dec
xor
inc
clc
inc
clc
pop
sub
sub
clc
das
xor
add
movsl
clc
fiaddl
add
clc
xlat
aas
mov
cmp
fmuls
sbb
add
mov
clc
inc
clc
cli
ret
popa
add
push
stc
or
icebp
xor
add
jbe
cmpsl
clc
adc
add
cmpsl
clc
je
or
pop
xchg
lcall
sahf
push
push
add
aad
lea
ss
or
xchg
mov
add
clc
jno
add
xchg
mov
mov
jp
clc
and
add
add
jg
mov
dec
test
and
in
push
cmp
clc
cmp
sub
clc
enter
clc
inc
clc
inc
add
ds
lods
repz
int3
add
add
clc
adc
lcall
data16
xchg
push
add
xchg
sar
test
loope
imul
add
enter
cmp
add
test
mov
add
mov
add
add
push
add
xchg
inc
add
sub
popa
add
sub
fimull
cmp
clc
test
dec
push
adc
add
loop
leave
jge
fwait
mov
clc
cmp
or
xchg
or
sti
dec
frstor
adc
add
sbb
add
add
data16
pop
mov
mov
clc
mov
enter
clc
jb
add
imul
fstpl
xchg
jecxz
fs
into
lock
pop
js
lea
ljmp
insl
xchg
sbb
loop
cli
push
add
xchg
xchg
stc
cmp
pop
add
add
add
sarb
or
mov
clc
lret
push
add
adc
clc
sbb
adc
add
or
push
mov
adc
add
xchg
push
pop
hlt
xor
add
xchg
adc
add
add
push
mov
push
clc
int
pop
pop
xchg
sbb
clc
int
cwtl
in
popa
add
xchg
inc
clc
sar
jl
or
clc
insb
adc
add
outsb
call
push
jle
clc
xchg
imul
xlat
inc
add
test
popf
aaa
fldcw
lret
sbb
jg
outsl
mov
clc
addr16
aad
lret
std
lahf
repz
cmp
xchg
add
popf
fimuls
pop
jns
test
clc
cmp
in
sahf
inc
clc
pshufw
cmp
pop
clc
in
xchg
clc
ljmp
add
adc
add
push
shrl
inc
clc
cmp
mov
js
xchg
roll
es
pusha
add
xor
add
clc
jns
push
add
sub
inc
clc
bound
add
adc
clc
add
add
inc
clc
jmp
out
aaa
stos
imul
add
push
add
jne
je
jg
and
sub
cmp
loop
shlb
clc
jp
clc
adc
cs
clc
mov
clc
xchg
test
bound
add
add
or
add
sbb
xbegin
add
jno
add
int
incl
add
or
jmp
clc
mov
xor
jmp
out
out
js
dec
sbb
aam
lods
lods
cmpsb
clc
push
and
add
push
pop
fbld
int
test
xchg
jge
clc
ljmp
push
add
pop
pop
pushf
inc
add
in
mov
insb
sti
jl
xor
add
clc
dec
mov
add
sahf
dec
fistps
add
test
pushf
adc
add
mov
mov
xchg
aaa
test
cmp
clc
int
in
clc
mov
aas
ds
cmpsl
clc
dec
jge
jp
add
jo
add
aam
add
cmpsb
clc
das
pusha
add
xchg
insb
lahf
add
add
pop
mov
clc
pusha
add
negb
jnp
clc
ficoms
add
frstor
push
pop
scas
call
jp
and
add
inc
clc
xabort
clc
daa
clc
jecxz
scas
out
insl
cmp
jne
add
jl
inc
clc
mov
xor
add
xchg
scas
lods
pop
pop
shll
lods
push
gs
lahf
cmp
ret
clc
dec
jmp
clc
pop
data16
fidivrs
add
clc
adc
add
leave
hlt
loope
int3
mov
icebp
mov
clc
mov
scas
inc
clc
add
add
xchg
jae
add
push
add
cmp
test
cld
jbe
push
add
cmp
add
ljmp
clc
jae
add
js
ja
dec
xabort
pusha
add
xor
add
jb
add
or
inc
clc
push
fists
ljmp
out
jecxz
movsb
clc
mov
cmp
jge
stc
and
add
scas
aas
imul
sar
sbb
push
add
sbb
lods
cmp
xchg
mov
test
mov
add
adc
add
xor
jno
add
clc
push
add
mov
clc
mov
add
pop
push
clc
push
push
sub
gs
add
add
gs
ret
clc
xchg
dec
sar
lea
cltd
mov
clc
cltd
inc
add
adc
add
add
sub
xor
data16
cltd
shll
mov
clc
add
add
add
cmp
clc
inc
clc
sbb
clc
ficompl
scas
mov
test
mull
scas
jg
add
out
data16
cmp
stos
mov
mov
fistpl
add
add
clc
mov
cwtl
xchg
mov
clc
jns
inc
add
cmp
mov
add
push
fwait
jmp
add
pushf
sti
or
add
sbb
stc
out
lret
shrl
pop
adc
add
add
lret
lea
pop
xor
add
xchg
lcall
sub
clc
outsb
sbb
iret
jns
clc
clc
mov
cmp
add
cs
popf
pop
sub
clc
push
mov
imul
push
cmp
in
stos
mov
dec
and
and
add
dec
dec
push
clc
add
add
jb
add
add
scas
test
or
cs
add
or
xchg
inc
add
add
add
fs
jp
xchg
cmp
add
aaa
xchg
or
clc
scas
jp
clc
mov
outsl
aaa
lock
add
add
ret
clc
movsb
clc
jmp
clc
rcr
lret
clc
sub
add
ja
push
test
stos
dec
add
add
clc
daa
clc
xor
add
jnp
add
sar
ds
mov
cmpsb
clc
xchg
xabort
test
lea
cmp
das
push
add
scas
in
sbb
clc
push
add
std
rcr
lea
clc
sub
xlat
mov
add
stos
mov
cltd
push
add
sbb
call
in
loope
js
ret
clc
adc
add
and
add
push
clc
dec
nop
add
add
jbe
sub
add
lea
xlat
xor
mov
add
dec
cmc
pop
cwtl
jp
add
add
jb
add
out
jnp
clc
fisubrl
add
popf
sahf
jle
cmp
add
dec
test
add
clc
jns
ja
add
adc
sbb
aad
negl
ss
add
pop
into
jl
push
mov
jmp
test
cs
add
add
add
sar
lret
aas
std
aaa
scas
push
add
scas
or
out
movsl
clc
pop
clc
pop
clc
xchg
shlb
add
call
jecxz
pop
aad
inc
add
lods
add
cmp
notb
notb
fisubl
clc
mov
iret
hlt
in
jne
add
dec
jmp
clc
pop
clc
xchg
mov
pop
adc
add
movsl
clc
pop
lahf
xabort
jno
add
aaa
test
jl
cwtl
push
add
lahf
leave
movsl
clc
and
add
bound
add
clc
sub
and
add
add
xchg
and
add
clc
ret
clc
pop
jmp
add
xchg
mov
sub
clc
sar
cmp
lods
and
add
cmp
nop
push
loope
mov
add
clc
inc
clc
pop
ss
xbegin
clc
movsb
clc
loopne
pop
fs
call
clc
loope
adc
add
cmp
ss
stos
gs
out
cmp
clc
inc
clc
mov
add
mov
add
insl
call
scas
push
add
or
add
add
loope
sar
test
cmp
mov
imul
lret
pop
test
loope
pusha
add
xchg
mov
mov
fucomip
clc
mov
mov
outsl
add
test
and
fmull
loop
jmp
dec
fldl
dec
pop
dec
sbb
clc
xchg
cmp
sbb
add
add
cmpsl
clc
pop
mov
vmovups
add
cmp
push
add
out
mov
shlb
add
imul
add
and
add
lret
dec
lret
sar
mov
clc
jno
add
add
add
add
or
lahf
mov
clc
xchg
push
clc
int
clc
pop
sub
add
icebp
add
add
add
clc
cmpsl
clc
pop
arpl
add
add
inc
add
loopne
bound
add
movsb
clc
icebp
aas
mov
add
sbb
jl
clc
pop
enter
and
add
pop
data16
mov
adc
add
bound
add
imul
stos
mov
out
mov
je
clc
jbe
clc
dec
inc
add
jle
mov
cmp
add
add
add
aad
incl
add
clc
test
cmp
test
lret
xchg
es
daa
clc
xor
add
add
clc
test
and
in
mov
clc
dec
lock
adc
add
arpl
add
cmp
push
add
int
int3
sar
outsl
sbb
int3
adc
add
cmpsl
clc
lods
cmpsb
clc
and
add
ljmp
adc
add
and
add
clc
pushf
xor
add
aam
jg
add
or
ret
clc
mov
clc
xor
add
add
dec
mov
add
cli
imul
dec
sar
nop
sub
dec
xchg
test
lea
add
cmp
js
add
rcrb
add
add
sub
loopne
gs
push
add
rolb
add
test
cld
ror
fstps
or
mov
clc
and
add
ljmp
sar
pop
xchg
jmp
scas
loopne
pop
clc
sbb
jmp
clc
ficoms
push
add
add
clc
add
add
add
add
insb
fistpl
out
arpl
add
xchg
cmp
clc
and
jecxz
shrb
add
sub
fs
dec
mov
cs
hlt
xlat
mov
clc
cmp
daa
clc
loope
pop
sarb
fistl
inc
clc
cli
add
add
cmp
sbb
lods
iret
sbb
fxch
mov
adc
add
mov
clc
sbb
clc
xor
popa
add
cmp
add
cmpsl
clc
aam
cmp
cmp
add
loope
jno
add
das
add
add
loop
ss
adc
insb
jp
clc
ud1
lcall
cwtl
dec
scas
mov
dec
mov
mov
int3
or
decl
add
in
scas
inc
clc
xlat
lods
pop
ja
dec
jecxz
inc
add
xor
adc
add
add
clc
repz
cmpsb
clc
xor
add
sbb
clc
sti
pop
adc
add
clc
mov
clc
fidivl
add
clc
out
in
imul
add
test
cmp
mov
mov
add
outsb
js
add
pushf
clc
inc
add
add
movsl
clc
push
add
dec
sub
clc
popa
add
mov
xabort
in
xlat
cmpsb
clc
aam
fcoml
add
and
gs
push
add
fidivs
add
jne
jns
add
stos
lock
clc
out
push
jle
inc
clc
sti
je
fs
jnp
sarb
xchg
or
pusha
add
sbb
clc
add
add
mov
and
add
add
sub
cmp
clc
das
addr16
mov
sar
sti
jae
add
xchg
cmp
xor
add
fcomps
jo
add
push
bnd
add
scas
adc
clc
and
mov
shl
clc
lret
xchg
add
sub
cmp
add
jp
xchg
flds
mov
clc
push
add
mov
and
gs
inc
add
xor
add
clc
jmp
add
and
clc
sub
cltd
jge
add
xabort
inc
add
xchg
std
add
aaa
jecxz
cmp
inc
clc
pop
aam
add
jmp
mov
add
pop
cmp
fisttps
pop
rcll
cmp
mov
lret
mov
test
or
clc
inc
clc
int3
sti
imul
clc
lea
out
cli
and
add
clc
mov
loope
pop
pop
add
add
mov
pop
test
add
sbb
inc
add
xchg
cld
fidivrs
insl
insb
ret
clc
sbb
mov
int
dec
loopne
push
into
test
clc
xchg
pop
xchg
pusha
add
sbb
add
popa
add
cli
push
arpl
add
mov
bound
add
jae
add
inc
add
xor
add
js
clc
mov
stc
mov
ja
clc
std
xbegin
cld
pop
jmp
xlat
int
sub
add
mov
clc
repnz
sbb
lret
adc
mov
popa
add
inc
clc
fdivs
add
cmp
add
add
inc
clc
xor
add
clc
sarb
outsb
aaa
insl
addr16
xor
add
clc
mov
adc
add
jbe
add
add
mov
xchg
call
insl
out
xor
add
fldt
push
add
cs
popa
add
cmpsl
clc
adc
add
clc
movsb
clc
dec
sub
mov
mov
add
rcrl
scas
mov
xor
imul
add
arpl
add
std
js
loop
jmp
test
sub
add
inc
clc
xchg
add
add
int
add
mov
add
cmp
add
xchg
daa
clc
push
add
jnp
jg
add
inc
clc
ds
int3
push
inc
clc
movsl
clc
adc
clc
cmp
lahf
lahf
cmp
ffree
clc
movsb
clc
lcall
mov
fistpl
clc
int3
cmp
add
add
mov
add
inc
clc
add
sub
mov
sub
add
scas
fucomi
jne
pop
cltd
or
add
jnp
cmp
mov
stc
push
and
js
and
add
add
pushf
adc
inc
clc
int3
arpl
add
mov
clc
push
add
sub
clc
add
add
add
clc
addr16
jne
add
sar
clc
jl
mov
test
daa
clc
lret
loop
cmc
xchg
mov
clc
stc
mov
xor
add
mov
adc
adc
add
bound
add
add
mov
xlat
adc
add
cmpsl
clc
jle
clc
and
add
mov
loop
and
or
clc
dec
push
add
cmp
pusha
add
bound
add
xor
clc
fstl
add
cltd
mov
imul
jae
add
fsubl
pop
mov
xor
add
add
mov
add
mov
clc
pop
jmp
add
clc
clc
inc
add
call
xchg
cmp
jno
add
push
mov
add
ret
clc
test
adc
add
push
in
inc
add
in
jecxz
pop
daa
clc
das
and
add
fcmove
mov
push
xchg
mov
imull
clc
addr16
popf
xor
clc
imul
clc
dec
mov
add
decb
dec
mov
ret
xchg
fsubrl
mov
cmc
inc
clc
popf
mov
out
enter
clc
jmp
mov
call
add
mov
add
enter
dec
out
and
add
sar
sti
xchg
sub
xchg
inc
add
cmp
int3
aam
xor
mov
add
add
mov
add
dec
jg
shrl
repz
call
clc
mov
insb
mov
test
ficoml
test
lods
das
add
add
bound
add
clc
xchg
dec
jae
add
add
xchg
jnp
movsb
clc
and
add
ret
clc
pop
out
xchg
sub
pop
shr
jg
cmp
cmp
and
add
clc
bound
add
jmp
add
or
nop
push
mov
out
loope
inc
clc
addr16
fisttps
ficoml
add
clc
or
xor
dec
xchg
pusha
add
or
pop
in
fs
adc
add
push
cmc
and
add
clc
scas
pop
push
add
popa
add
mov
and
add
into
das
pop
xor
add
and
add
add
mov
fdivrl
add
mov
jg
add
mov
mov
cmp
clc
xchg
jae
add
add
mov
loopne
out
inc
clc
mov
stos
mov
clc
aaa
jo
add
clc
add
push
add
push
xchg
shll
clc
in
inc
add
fmuls
adc
add
add
add
adc
add
ljmp
clc
popa
add
xor
clc
call
lods
mov
sbb
jo
add
clc
and
add
mov
or
out
fmull
clc
xchg
loop
push
add
pop
std
xchg
jb
add
into
pop
icebp
or
and
xchg
inc
add
data16
int3
ljmp
sti
sahf
fimuls
add
fisttps
sarl
clc
negl
xor
add
aaa
mov
push
cli
sbb
rolb
add
into
lret
adc
add
clc
test
in
mov
add
adc
clc
jmp
mov
clc
lcall
dec
mov
ja
sbb
add
dec
sbb
jbe
pop
push
add
enter
insl
pop
ja
clc
xor
clc
push
add
cmp
mov
clc
stos
pop
shll
clc
xor
add
ret
clc
cltd
inc
clc
das
stc
mov
shlb
clc
fstps
sbb
jbe
clc
sar
mov
mov
and
add
push
fcmovnbe
stos
jmp
frstor
add
jno
add
cs
cmc
fwait
xabort
jno
add
dec
xchg
or
clc
cmp
jns
sbb
jmp
vorps
int3
or
clc
adc
add
dec
clc
cmp
add
clc
std
mov
clc
scas
or
test
enter
and
add
idivl
jl
and
add
mov
icebp
dec
int3
inc
add
pop
mov
aas
jae
add
add
add
sbb
mov
add
add
add
inc
clc
lfs
clc
xlat
dec
xchg
jecxz
dec
cmp
enter
lods
fiadds
mov
sbb
pop
clc
out
mov
pop
jl
xchg
cmpsb
clc
gs
xor
add
clc
push
clc
cmp
sbb
lret
inc
add
push
add
push
inc
add
das
mov
push
add
or
add
js
add
xor
add
imulb
repz
push
pop
sub
add
aam
clc
jo
add
add
xor
ds
pop
movsl
clc
fadds
add
mov
add
arpl
add
in
ror
aaa
negl
mov
ss
xabort
mov
in
inc
clc
cltd
cmc
inc
clc
mov
add
dec
pop
imul
sub
add
mov
clc
js
add
jmp
jno
add
add
add
mov
mov
inc
add
sti
mov
clc
mov
jae
add
sbb
clc
sbb
test
cwtl
out
sti
lret
add
int3
test
cmp
clc
pop
fcomp
out
or
dec
gs
xor
add
xor
add
or
test
pop
clc
call
push
pop
cmp
add
clc
cld
push
lods
push
add
push
inc
add
cmp
jb
add
clc
loopne
adc
add
inc
add
jmp
clc
fisubl
ds
add
xor
stos
mov
jg
add
popa
add
adc
add
imul
xor
add
add
push
add
or
mov
in
outsb
mov
sar
add
loope
outsl
rcll
add
mov
add
dec
xor
add
add
repnz
cmpsl
clc
xor
add
clc
cld
mov
sub
mov
test
fcoml
jmp
add
dec
mov
clc
dec
adc
out
jnp
clc
mov
sbb
jo
add
add
add
add
or
add
test
sar
add
clc
push
add
mov
clc
jbe
icebp
pop
push
mov
mov
rorb
sbb
clc
popf
icebp
leave
xbegin
mov
push
xchg
popa
add
ficoml
add
clc
sbb
insb
add
add
aad
popf
popf
mov
and
add
xor
jnp
leave
and
add
sub
mov
clc
data16
xor
add
mov
data16
jg
clc
xor
mov
clc
xor
add
int3
jns
clc
mov
push
clc
inc
clc
cmp
call
shlb
jns
add
cmp
add
shrl
mulb
add
cwtl
fdivs
int3
movsl
clc
loope
loopne
cmpsb
clc
filds
add
push
iret
inc
add
jl
xchg
in
mov
add
push
clc
data16
and
add
add
push
loopne
xchg
sbb
sub
cltd
xor
add
clc
push
add
data16
ljmp
sbb
lcall
clc
pop
xor
add
or
add
add
sarb
ret
clc
lahf
ds
clc
push
cld
mov
imul
clc
int
ret
clc
pop
xlat
inc
clc
push
add
mov
add
add
out
mov
add
inc
add
jle
shlb
add
clc
push
dec
je
push
add
repz
jle
inc
add
bound
add
cld
mov
inc
clc
xlat
xor
add
imul
clc
add
add
push
add
clc
push
xor
add
stc
push
cli
mov
negb
clc
cmpsl
clc
cwtl
sub
add
clc
inc
add
insb
jae
add
pop
fisttps
xchg
mov
xlat
xchg
in
subps
add
cwtl
mov
out
mov
add
aad
jmp
jge
clc
dec
sub
push
fs
in
pushf
sub
jge
clc
ficomps
add
cs
push
mov
add
or
scas
out
xbegin
clc
xor
add
add
shlb
add
in
jmp
in
loop
or
cltd
pop
repz
popf
add
in
cmp
clc
jl
sub
int
xor
add
cmp
jns
fnstsw
add
pusha
add
int
iret
aaa
cmp
je
add
xor
add
add
mov
add
inc
add
or
adc
add
xor
add
lret
pop
pop
add
dec
xor
ret
add
mov
add
mov
mov
xchg
mov
sti
fsub
clc
fnstsw
decl
jns
jns
clc
sti
lods
out
cli
addr16
dec
rclb
mov
arpl
add
hlt
clc
cmp
jne
jo
add
add
adc
add
cmp
add
or
clc
mov
clc
sti
movsl
clc
cmc
xchg
out
xabort
add
xchg
outsb
shr
jp
add
sub
shll
mov
clc
int
clc
add
add
je
mov
lcall
and
add
or
clc
loope
inc
clc
or
mov
outsl
jle
inc
clc
aas
cmp
add
pushf
nop
arpl
add
clc
imul
add
adc
add
fdivrl
nop
jne
mov
add
mov
flds
jp
dec
push
add
rolb
xchg
daa
clc
cmp
inc
add
jp
ficoms
test
add
jecxz
enter
cmp
adc
scas
ret
clc
test
das
gs
fs
inc
clc
adc
add
std
icebp
pop
dec
pop
aaa
pmuludq
addr16
mov
jecxz
lods
icebp
sbb
clc
sub
xbegin
movsb
clc
cmp
inc
add
daa
clc
aaa
cwtl
inc
add
push
cmp
add
es
lods
mov
gs
xchg
add
mov
cmp
clc
cmp
cmp
mov
add
jns
add
or
dec
cld
push
mov
add
sbb
push
add
out
mov
mov
rorb
cmp
add
and
add
repnz
pop
bound
add
clc
adc
add
add
lcall
add
push
out
pop
scas
pop
mov
xchg
jns
clc
mov
xbegin
clc
popa
add
jae
add
cmpsb
clc
rorb
push
add
test
pop
clc
inc
clc
dec
and
add
sbb
clc
push
or
adc
add
add
in
call
jmp
bound
add
cmc
repz
dec
fs
xabort
clc
mov
add
add
jnp
js
test
pop
add
add
idiv
int
clc
jmp
xbegin
xchg
and
cmp
clc
pop
imulb
pop
jnp
add
dec
dec
adc
add
dec
insb
loop
lahf
cmp
gs
aas
addr16
mov
inc
clc
lret
mov
jb
add
outsb
or
clc
fistpll
dec
fs
jns,pt
test
jbe
stc
push
add
repnz
das
cmp
add
cld
ret
mov
clc
add
add
sub
in
adc
inc
clc
ljmp
js
xchg
pop
clc
push
jge
cmp
out
jne
push
add
in
cld
push
add
dec
aam
iret
jg
jns
in
jbe
clc
mov
cmp
xlat
mov
dec
push
push
push
add
cmp
pusha
add
xabort
clc
fwait
mov
clc
cmp
jmp
or
push
cmpsl
clc
xchg
push
clc
mov
imul
popa
add
nop
scas
adc
add
dec
aas
pop
mov
add
push
imul
push
lods
xlat
sbb
popa
add
out
pop
clc
std
je
enter
icebp
popl
insl
lods
mov
push
es
inc
clc
jl
inc
add
pop
push
add
or
sub
outsl
push
clc
pop
dec
xchg
mov
enter
stos
sub
ljmp
clc
or
stc
sub
sbb
in
jno
add
cmp
add
add
sub
cwtl
js
sbb
add
fnstenv
je
clc
mov
xchg
addr16
in
sbb
jo
add
aaa
jmp
adc
clc
inc
clc
or
add
add
inc
add
mov
add
je
jle
in
stc
adc
add
frstor
add
inc
add
and
add
xchg
mov
add
add
ja
clc
fs
addr16
cltd
jle
add
idivb
add
cmp
add
push
add
fnsave
clc
mov
mov
int3
xor
loop
push
rol
clc
and
pushf
rcrb
stos
insl
pop
fildll
sub
clc
es
dec
mov
lahf
mov
leave
xchg
mov
cmp
or
shl
sahf
cli
not
mov
pop
push
je
clc
int3
sar
add
cmp
clc
or
clc
in
adc
inc
add
data16
or
or
shll
xchg
jo
add
movsl
clc
cmpsb
clc
test
clc
xchg
dec
sti
fiadds
add
dec
pushf
push
add
frstor
add
enter
daa
clc
je
add
sub
hlt
mov
add
adc
add
mov
clc
mov
pop
and
add
fstpl
mov
clc
pop
dec
and
add
imulb
add
pop
fdivrs
gs
inc
add
and
add
push
add
cmp
gs
dec
xor
add
sub
in
pop
das
or
jb
add
mov
lret
loop
es
call
add
add
add
add
clc
es
sar
bound
add
clc
mov
sub
fsub
clc
jmp
aad
clc
fsubrl
add
aam
dec
das
insl
xor
add
cmp
clc
dec
outsl
push
add
rcll
add
cmc
insb
push
add
add
add
stos
adc
add
jbe
add
cltd
sbb
loop
fcoms
test
add
clc
aaa
jno
add
add
dec
inc
add
or
adc
add
repz
clc
lea
add
clc
sar
cmp
hlt
xchg
dec
mov
sbb
cmp
ret
clc
inc
add
jo
add
stos
sub
insb
int
inc
clc
push
mov
add
cmp
inc
add
daa
clc
mov
add
icebp
sti
cmpsb
clc
and
add
cli
aaa
jns
dec
and
add
rcll
pop
clc
fldl
stos
push
inc
clc
test
add
jne
sub
mov
adc
add
jecxz
std
fwait
jg
clc
inc
add
jmp
sub
lcall
jge
add
fdiv
push
pop
or
clc
cmc
xchg
lea
cmp
clc
cmp
sub
outsb
sub
mov
sub
lods
fidivs
sub
test
mov
cmpsl
clc
mov
popl
push
add
push
ds
pop
inc
clc
pop
and
cli
add
jle
imul
mov
clc
or
aas
and
add
clc
inc
clc
cld
stc
loop
push
add
fisttps
pop
or
adc
add
clc
push
pop
xabort
push
add
mov
xor
add
add
add
clc
clc
pop
cmp
add
outsb
sub
add
xor
add
clc
fdivs
mov
das
cwtl
mov
add
movsl
clc
or
sub
xchg
cmpsl
clc
hlt
mov
clc
sub
dec
xchg
sub
clc
adc
add
clc
cmpsb
clc
test
push
and
add
xchg
pushf
mov
push
mov
inc
add
pop
out
jb
add
clc
scas
mov
add
daa
clc
mov
pop
pop
jl
rorb
mov
add
push
push
add
dec
sub
or
cmp
cltd
imul
mov
jp
clc
sbb
std
sbb
std
xabort
stos
mov
cli
adc
add
or
stc
xor
add
in
jge
clc
insl
fs
adc
pop
pop
das
inc
clc
scas
add
call
add
push
es
outsb
add
add
adc
add
clc
cmp
bound
add
and
add
clc
sub
and
enter
pop
sbb
push
pop
out
mov
clc
bound
add
add
add
ror
sar
aad
xchg
mov
add
enter
das
and
add
add
popa
add
je
clc
push
outsb
bound
add
ret
clc
fucom
clc
sti
ds
idivb
lcall
lock
xchg
cmp
clc
loope
add
add
out
cltd
lea
add
cli
negl
cli
pop
and
add
out
stos
clc
mov
add
sbb
pop
jmp
push
xchg
cltd
mov
clc
add
add
inc
add
jge
inc
add
fld
clc
movsl
clc
cmp
add
add
pop
add
add
clc
cli
add
add
add
jge
aaa
es
pop
clc
sub
insb
push
and
sbb
in
fidivrs
mov
cmp
add
add
daa
clc
jnp
es
push
xor
add
into
loopne
cld
neg
adc
add
add
jg
pushf
and
add
lea
sarl
icebp
mov
pop
clc
cmpsl
clc
mov
add
mov
aad
clc
jp
mov
add
pop
clc
mov
add
mov
clc
out
sbb
dec
sub
cmp
clc
sub
jae
add
clc
inc
add
das
mov
jg
pop
cmp
add
add
add
clc
loop
sbb
add
scas
cmp
jbe,pt
push
sub
xchg
xor
add
clc
push
in
int
clc
add
add
mov
mov
cmp
cltd
sbb
or
add
cmc
repz
push
sub
and
add
add
pop
imul
jl
loopne
stos
inc
clc
cmp
lret
add
add
add
add
add
lahf
mov
inc
clc
cmp
clc
bound
add
pop
imul
sbb
add
add
add
pop
add
add
es
cmpsb
clc
inc
add
fcmovnb
clc
mov
add
add
sti
adc
add
inc
add
scas
cmpsb
clc
and
or
call
add
mov
clc
dec
dec
cmp
add
clc
cmp
inc
clc
call
jbe
decb
adc
mov
in
sbb
sti
xor
add
cmp
add
or
mov
fst
add
add
xchg
jp
xchg
imul
push
lea
scas
mov
iret
out
movsb
clc
mov
inc
add
dec
sar
clc
jo
add
mov
add
mov
xabort
mov
clc
pminsw
xbegin
dec
sbb
pop
dec
and
add
sar
clc
jl
xchg
insb
mov
clc
std
test
jae
add
cmp
imul
add
add
popf
sub
clc
or
push
mov
push
dec
pop
inc
add
mov
mov
dec
pop
shll
ds
int
clc
roll
cltd
inc
add
sbb
int
clc
xchg
imul
clc
mov
xchg
out
sbb
test
clc
loope
add
add
add
cmp
lahf
lret
sbb
clc
aaa
into
mov
add
clc
lret
sarb
sar
clc
mov
pop
clc
inc
add
pop
clc
sbb
inc
add
mov
inc
add
xchg
ljmp
clc
jns
clc
jle
mov
xchg
mov
mov
pop
lock
mov
xor
insl
int
dec
xor
add
add
sbb
add
xchg
xchg
push
add
adc
add
add
cmpsl
clc
lret
aaa
sub
mov
insl
push
cmp
clc
cmp
jmp
insb
xchg
xchg
sahf
inc
add
xchg
movsb
clc
data16
cmpsb
clc
adc
and
xbegin
mov
xor
add
add
mov
pop
push
mov
add
stos
push
add
out
mov
cmp
add
mov
add
adc
add
cmpsb
clc
iret
shlb
add
ret
mov
push
add
and
add
dec
xor
add
clc
mov
in
pop
push
clc
pop
pop
mov
jecxz
inc
clc
xchg
sub
int
test
xbegin
clc
fdivl
sar
aam
add
add
mov
mov
pop
sbb
stc
pop
add
sbb
clc
xchg
add
add
stos
pop
or
and
add
roll
icebp
dec
cmp
push
add
push
add
pop
adc
add
ucomiss
clc
or
aam
out
stc
push
clc
lods
leave
enter
cs
je
addr16
testb
xchg
test
mov
ret
clc
sbb
or
sbb
clc
xchg
sbb
mov
add
mov
outsl
or
bound
add
and
add
add
test
roll
clc
dec
and
add
xchg
enter
mov
clc
clc
ds
push
add
je
mov
jmp
and
fidivrs
xor
loope
mov
add
sahf
lret
sar
and
leave
sub
dec
cmp
add
dec
add
add
clc
fcmovbe
mov
pushf
ja
xchg
dec
aas
mov
inc
add
add
jbe
xchg
fdivrl
ret
clc
sub
add
sar
add
leave
loop
es
pop
push
add
dec
push
clc
popf
mov
clc
mov
clc
mov
add
add
push
add
adc
add
add
sub
sub
cmp
cmp
push
incb
pop
clc
cmpsb
clc
movsb
clc
lahf
xor
add
add
add
inc
clc
es
dec
mov
clc
ss
cmp
mov
pop
adc
add
xchg
insl
cmp
clc
test
and
add
add
add
outsl
call
je
out
jb
add
jge
clc
out
adc
add
jecxz
mov
add
xor
add
add
push
add
jmp
sar
clc
mov
add
add
clc
push
mov
inc
add
pop
clc
lods
out
jle
adc
add
clc
cwtl
xor
add
clc
out
pushf
int
cmp
jle
clc
inc
clc
xor
add
imull
fcmovnb
clc
xchg
mov
vmread
outsl
xabort
clc
call
add
cmp
push
sub
clc
frstor
sub
jb
add
pop
cmp
clc
sbb
sub
mov
scas
stc
popa
add
jecxz
mov
push
ficompl
je
clc
jns
fsubl
lock
clc
push
cmp
clc
mov
sub
sbb
pushf
pop
rolb
add
xchg
sbb
mov
add
repz
nop
lcall
add
adc
add
sahf
pushf
mov
push
movsl
clc
or
aad
add
cmpsb
clc
stos
jl
add
lcall
clc
int3
ds
mov
ds
fadd
clc
jge
inc
clc
mov
jmp
clc
jg
jo
add
ss
xabort
mov
je
addr16
pushf
das
cmp
mov
inc
add
ss
add
xchg
ktestw
out
dec
jecxz
pop
xchg
cmp
movsl
clc
and
xlat
addr16
cltd
cmpsb
clc
cmp
test
mov
test
daa
clc
fisubrl
add
ss
sbb
add
xchg
ds
clc
adc
add
jmp
add
test
add
jmp
addr16
adc
add
dec
inc
add
pusha
add
jmp
movsb
clc
jge
push
add
rorb
aam
clc
fsubs
and
add
pop
ktestw
lret
cltd
jecxz
xor
add
clc
fcomps
cmp
clc
xor
add
cmp
cmc
cmp
add
mov
or
sar
mov
cmp
add
xabort
cltd
jle
cmp
cmp
adc
add
inc
clc
mov
call
pop
sbb
or
add
in
mov
repnz
aaa
fs
hlt
clc
or
clc
into
cmpsb
clc
adc
add
clc
icebp
mov
xchg
push
mov
sub
sbb
shlb
add
cmp
clc
movsb
clc
dec
fmuls
nop
jge
clc
popa
add
dec
jg
imul
clc
jbe
push
jnp
cmp
clc
jmp
mov
add
clc
cmp
jge
clc
out
ljmp
xchg
cmp
sub
pop
addr16
ret
clc
cld
iret
xor
cmp
mov
testb
and
fildll
in
js
clc
jns
inc
clc
adc
add
clc
leave
xchg
dec
fistl
popa
add
bound
add
add
sar
jo
add
add
sbb
xbegin
cltd
sub
clc
mov
insb
jno
add
clc
ljmp
sar
aas
jo
add
add
push
add
jae
add
clc
xor
add
sub
clc
es
lret
mov
add
add
inc
clc
xor
add
stos
in
mov
dec
loop
stos
mov
mov
cmp
xabort
clc
fists
jmp
clc
add
add
dec
shrb
outsl
mov
aas
sub
add
std
pushf
sbb
add
inc
add
iret
cmpsb
clc
inc
clc
sub
add
add
clc
mov
add
mov
mov
enter
add
cmp
dec
pop
clc
int3
bound
add
add
js
clc
pop
sahf
insl
call
mov
jns
add
nop
or
clc
aad
add
cmp
xchg
sub
add
clc
pop
push
cmpsb
clc
push
inc
clc
jle
fs
push
mov
clc
clc
or
add
mov
add
sub
inc
clc
int3
dec
pushf
fwait
adc
insb
push
mov
gs
xbegin
cmp
clc
mov
add
clc
outsb
in
dec
imul
gs
push
push
mov
sti
sbb
int
add
fdivrs
push
pop
xchg
or
jns
clc
jnp
loope
xor
add
add
clc
cmp
dec
fcoms
add
inc
add
in
aad
add
jmp
lea
clc
dec
mov
or
add
pop
pop
dec
mov
ret
clc
mov
fstps
add
test
aas
mov
add
clc
in
dec
out
lret
sbb
jle
dec
xchg
popf
cmp
clc
or
jns
and
add
add
popf
cwtl
add
push
movsl
clc
xor
add
add
jb
add
pop
adc
add
xor
add
add
push
adc
add
add
sbb
clc
cmp
mov
outsb
mov
add
cmp
mov
xchg
ret
clc
pushf
out
in
mov
xchg
mov
dec
jmp
xor
xlat
mov
fdiv
enter
icebp
dec
mov
jns
add
cmc
arpl
add
add
and
add
fs
sub
inc
add
xchg
outsl
ja
clc
daa
clc
jl
in
jne
stos
xor
add
mov
add
sub
inc
add
pop
out
mov
add
inc
clc
push
sub
push
fistps
cwtl
push
fisubrs
arpl
add
clc
pop
pop
notb
nop
stos
int3
inc
add
cmovge
clc
fisttpl
add
add
add
clc
sub
bound
add
add
insb
mov
xchg
cmp
pop
xchg
cmp
xchg
ret
clc
in
pop
inc
clc
xchg
movsl
clc
cld
mov
add
jecxz
xchg
sub
jno
add
ret
clc
icebp
sub
clc
cmp
clc
sub
pop
insb
mov
clc
push
adc
add
add
xbegin
add
mov
inc
clc
test
jno
add
push
clc
nop
clc
dec
fbld
clc
test
and
add
ret
clc
out
cmpsl
clc
arpl
add
push
add
sahf
mov
adc
add
add
add
cmp
lods
or
add
lret
insl
cmp
mov
add
stc
mov
add
add
add
xor
jmp
pop
clc
fiadds
add
sti
lea
fwait
js
scas
and
sbb
pop
jnp
mov
clc
mov
cmp
sbb
hlt
dec
sar
cmp
mov
add
xor
stos
mov
ss
add
popf
mov
imul
clc
adc
add
clc
xabort
loop
stc
pop
nop
mov
sbb
add
add
jp
clc
jnp
add
popa
add
gs
mov
clc
sbb
add
leave
ret
clc
cli
test
nop
gs
out
adc
and
add
cmp
and
add
aas
fidivrl
fucomp
or
add
vrcpps
add
dec
push
add
addr16
lcall
int
out
or
mov
cmpsl
clc
jns
jl
pop
mov
add
add
add
cmp
popf
mov
out
push
mov
popf
in
and
xchg
test
add
icebp
lods
cli
std
lcall
add
lret
or
jmp
clc
fistpl
out
mov
sub
add
jmp
cmpsb
clc
sub
daa
clc
pop
xchg
xchg
mov
mov
arpl
add
es
push
scas
lock
sub
push
and
add
test
bound
add
push
idiv
leave
push
add
add
push
bound
add
enter
add
or
clc
xor
add
mov
add
mov
add
lods
popf
lahf
kmovw
stc
leave
push
clc
fnsave
add
inc
add
xor
add
clc
sbb
loope
stos
inc
clc
out
leave
cmp
out
push
push
mov
xchg
adc
add
dec
push
adc
add
insl
adc
lods
add
clc
xchg
in
add
sbb
clc
pop
and
add
and
add
jg
clc
push
clc
sub
add
fiaddl
leave
mov
sub
clc
sti
in
stos
filds
clc
adc
add
add
cmp
gs
xchg
sbb
cmp
add
cli
jp
mov
add
rcl
cwtl
cmp
cld
sahf
pop
cmp
clc
jo
add
cltd
roll
int
cmp
add
adc
add
dec
pushf
dec
ficoms
out
dec
jne
mov
pop
nop
test
clc
jns
enter
inc
clc
push
or
inc
clc
insb
mov
sbb
clc
sub
add
clc
push
jecxz
xchg
push
inc
clc
or
out
cwtl
iret
xchg
or
hlt
addr16
and
add
sbb
cmc
sbb
scas
or
push
add
gs
loope
push
add
add
add
clc
mov
or
mov
clc
and
add
cmp
add
js
rcrb
xchg
gs
xor
popa
add
mov
call
clc
push
add
xchg
cmp
add
push
hlt
cmp
add
xbegin
adc
add
pop
pop
aas
adc
add
add
mov
sub
loope
mov
fwait
cli
outsb
cs
lea
add
jge
into
call
add
xchg
push
add
into
inc
clc
push
out
mov
mov
add
add
jecxz
pop
shl
imul
add
push
scas
fsubrs
clc
cld
mov
push
add
mov
loope
test
cmp
adc
add
add
clc
sbb
clc
movsl
clc
mov
lret
clc
mov
clc
jmp
es
mov
popf
sarl
ss
clc
or
mov
push
clc
int3
sbb
clc
data16
loop
out
xchg
scas
movsl
clc
jle
clc
mov
xbegin
std
ljmp
clc
cmp
add
lahf
jmp
adc
popf
push
fistl
jo
add
stos
xor
add
xor
sub
out
adc
fbstp
clc
cmp
add
push
fnstcw
sti
inc
add
cmp
add
mov
test
mov
test
dec
scas
xchg
cmp
mov
cmpsl
clc
push
lahf
sbb
cmp
pop
pop
mov
clc
mov
add
jno
add
add
add
add
leave
xor
add
jno
add
mov
imulb
add
mov
arpl
add
clc
mov
clc
stc
xor
add
clc
insb
into
clc
lock
and
jecxz
add
add
movsb
clc
xchg
cs
add
add
add
clc
cmc
sarl
mov
add
push
gs
push
cwtl
add
add
mov
shlb
pop
shll
lods
divb
add
cmp
lcall
sarb
out
jle
pop
scas
sub
aas
pusha
add
aad
vunpcklps
xor
add
add
add
sbb
adc
add
clc
xor
pusha
add
lret
sub
add
icebp
sbb
and
int3
lcall
into
push
add
sbb
clc
lcall
clc
cli
jl
sbb
add
je
add
or
clc
xlat
adc
out
inc
add
leave
test
inc
add
cmp
sbb
lahf
jp
ljmp
sar
clc
out
add
add
jbe
add
icebp
stc
mov
bound
add
add
add
sub
scas
lcall
add
xchg
cld
mov
jbe
stos
sub
ret
aam
aad
lret
clc
add
add
loope,pn
popl
bound
add
insl
add
add
add
mov
dec
int
and
add
push
mov
sar
sbb
jmp
clc
push
clc
insb
mov
xor
sbb
clc
or
add
outsl
and
mov
add
add
push
imul
cmp
pop
cmp
out
movsb
clc
lret
in
lock
movsl
clc
out
xor
add
aas
fs
cmp
inc
clc
cli
inc
add
mov
mov
inc
add
icebp
mov
sbb
add
js
aas
dec
fiaddl
rcr
adc
repz
push
add
dec
movsb
clc
idiv
pop
nop
clc
test
xabort
clc
cmp
add
push
adc
add
lock
sar
clc
mov
sub
in
sub
push
test
xchg
sbb
clc
dec
data16
xbegin
add
add
clc
es
fnstcw
jae
add
cmp
insb
scas
cli
add
add
and
je
clc
cmpsl
clc
mov
jns
clc
nop
xchg
mov
xabort
fisttpl
shl
jbe
fcoms
mov
jl
or
imul
add
out
movsb
clc
popa
add
popa
add
stos
movsb
clc
sbb
cwtl
xor
ss
fbstp
daa
clc
cmp
test
clc
xchg
test
push
mov
cmp
jnp
clc
push
add
dec
out
ja
dec
icebp
ret
clc
mul
clc
cli
add
add
clc
pop
nop
jns
inc
add
imul
mov
clc
cmpsl
clc
add
add
add
test
mov
push
popf
negl
sbb
xbegin
xor
shrb
fwait
in
sar
xchg
ja
or
cmp
sti
jno
add
lods
das
cmovne
mov
in
mov
add
xchg
xchg
dec
jg
jecxz,pt
jecxz
data16
test
je
inc
add
sbb
cltd
ds
das
adc
add
add
clc
roll
clc
jge
call
pop
std
gs
xchg
mov
add
adc
add
mov
and
add
add
add
clc
sar
xor
add
jne
clc
in
add
add
clc
stc
in
gs
out
gs
movsl
clc
leave
push
sbb
mov
add
stos
jae
add
bound
add
enter
add
xchg
or
pushf
into
aaa
stos
inc
add
in
out
lea
add
clc
scas
push
cmc
lahf
push
add
ja
and
add
add
cmp
clc
push
call
hlt
dec
dec
push
add
stos
ljmp
imul
add
jne
jae
add
mov
clc
cmp
cmp
and
add
jb
add
add
add
pushl
add
and
add
pop
xchg
loope
and
clc
movsl
clc
pop
int
push
fbstp
in
xlat
inc
add
lahf
xor
pop
icebp
inc
clc
aam
xabort
add
sub
clc
iret
test
xor
add
add
add
outsl
fcomi
jmp
int3
add
add
aas
or
clc
fdivs
clc
jne
mov
lods
lret
xor
add
add
clc
push
sbb
aad
movsl
clc
mov
mov
clc
cld
add
add
jmp
jne
jbe
xchg
outsl
push
jo
add
repnz
xchg
movsb
clc
sub
add
adc
clc
xor
add
imul
clc
movsb
clc
xchg
je
xabort
dec
jno
add
lahf
and
add
mov
add
clc
int3
cmp
scas
adc
add
add
clc
arpl
add
xor
add
in
imul
dec
add
add
add
xabort
add
clc
mov
clc
push
scas
add
add
clc
mov
or
xchg
dec
adc
add
jae
add
add
sbb
hlt
mov
sbb
cmc
pop
inc
add
pop
push
add
sar
clc
sbb
push
pop
push
add
jecxz
test
inc
add
mov
in
fnsave
add
fisubs
rcrl
sti
jne
cltd
out
inc
add
sahf
out
xor
add
loope
inc
clc
cmp
clc
dec
out
jno
add
sub
or
mov
and
add
mov
clc
mov
sbb
clc
xor
add
xlat
icebp
call
and
add
add
das
fsts
add
aaa
add
outsl
and
add
add
addr16
pop
dec
in
xor
add
cmp
clc
adc
add
aam
lods
repnz
clc
sar
mov
cmp
ret
clc
inc
clc
fs
and
add
addr16
cwtl
add
data16
push
rclb
add
sbb
add
jle
clc
jae
add
clc
pusha
add
cmp
mov
das
jne
add
cmp
int3
xchg
cmp
add
lret
lods
cmp
cmp
js
pop
clc
stos
test
add
or
clc
es
cmp
out
push
sti
mov
test
sar
xbegin
clc
push
add
test
mov
aas
ret
clc
adc
add
xchg
push
shrb
test
and
jp
clc
mov
add
in
xbegin
clc
test
xchg
adc
lahf
loopne
and
mov
add
clc
push
mov
dec
outsl
repz
add
sarb
add
add
jne
imul
nop
clc
sbb
ret
clc
inc
clc
test
dec
jmp
inc
clc
sbb
pop
clc
sbb
add
cwtl
and
add
clc
push
daa
clc
mov
mov
clc
ret
jecxz
cmp
add
into
nop
lea
add
sub
and
add
jle
fisttpl
cmp
addr16
insb
movsb
clc
insl
add
aaa
mov
mov
ljmp
jp
xor
mov
in
scas
add
add
add
xchg
jo
add
clc
popf
mov
clc
out
imulb
pop
jbe
pop
fwait
popa
add
stos
or
add
add
clc
cmp
sbb
out
sbb
fs
pushf
movsl
clc
jp
ficompl
clc
in
sub
test
clc
inc
add
nop
and
xchg
iret
push
fcomip
fs
jecxz
cli
push
add
popf
mov
lcall
sub
add
add
mov
add
cmpsb
clc
mov
repnz
add
xchg
sub
xlat
js
pop
je
push
adc
or
clc
daa
clc
in
mov
daa
clc
mov
mov
mov
inc
clc
xlat
cmp
xchg
mov
cwtl
or
mov
cld
int3
movsb
clc
out
dec
cwtl
ror
fdivl
mov
or
pop
clc
sbb
or
insl
mov
clc
scas
imul
add
data16
sti
xabort
jno
add
fcmovbe
and
add
dec
icebp
sub
sub
cli
pop
adc
add
clc
insl
ljmp
clc
mov
xor
jno
add
fdivrs
and
dec
dec
mov
clc
fistpl
imul
pop
xchg
add
add
add
repz
add
ss
add
mov
add
inc
add
sar
bound
add
xchg
sbb
add
push
add
clc
xor
dec
xor
add
fsub
clc
pop
clc
cli
pop
clc
out
out
jg
loop
outsb
mov
add
add
lods
fstpl
clc
into
rorl
add
add
mov
clc
cmp
xlat
pop
cmp
pop
aaa
cmc
dec
xchg
and
push
add
inc
add
test
inc
add
mov
add
clc
mov
loope,pn
icebp
dec
or
in
inc
add
push
add
insl
lret
cmp
insl
dec
sar
mov
push
add
test
std
repnz
add
xlat
stos
scas
call
push
add
or
clc
sahf
jne
clc
sbb
clc
in
in
xbegin
lret
inc
clc
imul
fwait
adc
insl
mov
clc
movsb
clc
lahf
sbb
popf
pushf
or
clc
xor
add
clc
daa
clc
in
cmp
sbb
inc
add
ficoms
add
fildl
add
jmp
and
add
bound
add
clc
ret
clc
loop
jmp
loopne
mov
and
add
fdivp
mov
add
cwtl
mov
add
lods
push
add
mov
add
xchg
iret
mov
fmulp
test
xor
add
mov
mov
fsubrl
add
add
sub
ret
push
clc
faddp
clc
ss
shll
mov
add
fsts
add
fdivl
sub
adc
add
clc
sub
add
enter
add
jne
mov
add
pop
mov
add
add
add
arpl
add
add
adc
add
clc
sbb
pop
fimull
or
xchg
call
push
push
ljmp
clc
fldcw
popa
add
cwtl
mov
clc
jp
pop
leave
cmp
movsl
clc
push
test
add
push
clc
pavgw
bound
add
clc
jb
add
scas
pop
xbegin
xabort
mov
adc
clc
inc
clc
fiadds
clc
fs
xor
add
jne
xchg
mov
clc
jp
mov
pushl
dec
jnp
add
sbb
pop
mov
adc
add
clc
dec
mov
clc
mov
or
add
push
adc
add
clc
leave
dec
mov
jg
addr16
fcmove
mov
rolb
clc
sbb
mov
add
add
xor
add
in
xchg
mov
dec
leave
jmp
add
push
fistps
cltd
loopne
cmp
leave
mov
mov
fidivs
add
xor
add
sbb
fwait
jecxz
sub
clc
data16
pop
nop
das
ficompl
xchg
mov
clc
xchg
push
and
add
lret
sub
clc
add
add
xchg
data16
jo
add
and
add
cmp
ljmp
repnz
clc
sar
icebp
mov
lods
out
jne
jno
add
mov
clc
xor
add
outsb
sbb
lahf
dec
loope
mov
dec
das
mov
clc
sub
lea
jns
enter
in
fdivl
add
into
cmpsb
clc
lods
imul
add
add
pop
movaps
adc
cmp
add
rcll
int
mov
mov
clc
nop
inc
add
sub
sub
js
clc
sahf
add
add
clc
cwtl
lock
adc
add
ss
loopne
clc
sbb
xor
add
xchg
in
cmp
insb
pushf
mov
add
out
mov
clc
jmp
mov
paddusb
add
xor
adc
add
mov
mov
sbb
cld
xor
add
add
cmp
jecxz
es
fndisi(8087
clc
inc
add
xlat
data16
or
mov
add
es
push
clc
sbb
clc
mov
dec
cmp
clc
test
xor
add
clc
fidivrl
insl
mov
clc
sub
clc
push
add
je
add
cmpsl
clc
push
add
dec
sbb
out
stos
into
lahf
dec
cmp
add
add
add
seta
cmpsb
clc
addr16
jno
add
push
into
mov
add
ja
clc
cmpsb
clc
mov
xor
add
add
test
call
clc
push
sbb
lods
pushf
jbe
add
lret
mov
xor
fcoms
add
dec
xchg
mov
add
clc
xor
add
inc
add
nop
js
test
das
cmp
pop
adc
clc
mov
sbb
clc
push
xor
adc
add
xor
add
xbegin
clc
xbegin
shlb
add
cmp
fwait
sub
clc
bound
add
add
ret
jg
add
xchg
test
and
add
jb
add
cmpsl
clc
cltd
dec
push
add
in
ret
clc
mov
pop
xor
add
clc
xchg
cmp
add
sbb
mov
pop
je
outsl
lcall
je
mov
lret
clc
push
and
sar
ficompl
jne
cmp
and
enter
loope
popf
push
add
scas
pop
jns
test
mov
add
pop
lods
adc
out
xchg
js
incb
add
clc
xor
int3
and
add
sbb
add
mov
sbb
adc
mov
ss
add
xor
add
add
adc
add
and
add
add
push
stos
jne
fcompl
clc
sub
out
or
sbb
mov
clc
push
xlat
xor
add
pop
xchg
mov
add
test
adc
mov
lret
add
add
scas
push
add
and
jne
add
clc
rclb
add
adc
add
clc
or
add
adc
add
stos
sub
jnp
cmpsl
clc
jne
insb
mov
clc
addr16
mov
clc
iret
cmpsb
clc
jecxz
loope
mov
jbe
add
add
add
clc
push
xor
add
into
pop
push
mov
into
scas
into
jge
cmp
push
ffreep
clc
das
icebp
imul
clc
pop
sar
mov
add
stc
xor
mov
fwait
mov
add
je
add
push
xor
cmp
add
rcll
add
mov
inc
add
testl
add
sbb
rorb
sbb
add
and
push
add
inc
add
mov
add
loopne
aaa
and
aam
clc
outsb
xabort
clc
dec
xabort
aas
stc
push
push
sarl
pushf
mov
clc
jo
add
clc
xchg
test
fistpll
gs
sub
out
add
cmp
jmp
das
adc
clc
or
inc
add
jnp
push
push
out
add
add
call
add
mov
add
clc
scas
leave
xor
add
leave
xchg
and
xchg
je
add
clc
push
add
cmp
adc
add
cmp
ds
inc
add
in
ret
add
xchg
pop
rcll
xchg
call
jbe
clc
xor
sbb
aaa
and
add
add
lods
rclb
add
xchg
cmp
imul
clc
sbb
dec
push
icebp
cwtl
jecxz
lret
push
mov
add
or
add
inc
add
das
add
xbegin
add
jle
cmp
daa
clc
cld
fldt
das
mov
push
pop
mov
es
mov
clc
jp
mov
dec
pusha
add
and
add
clc
enter
popa
add
in
push
xor
add
add
mov
xor
add
gs
rcl
pop
pusha
add
mov
pop
ja
jl
xor
add
aam
ljmp
add
out
push
mov
jl
out
bound
add
add
in
cmp
push
dec
rcrl
xchg
add
add
add
mov
add
lods
mov
add
cltd
dec
dec
ret
mov
add
cld
stos
push
add
mov
lret
inc
add
ds
clc
push
add
cmpsl
clc
pop
out
out
sbb
sar
clc
push
adc
xor
add
add
add
outsl
mov
clc
lret
clc
mov
add
push
inc
add
test
inc
clc
pop
or
add
add
adc
add
clc
aam
clc
push
sti
xchg
jmp
add
sub
add
cmp
lret
and
add
in
cmp
mov
fistpl
clc
cmp
aam
add
pop
clc
mov
clc
cwtl
iret
daa
clc
fstpt
data16
cmp
xor
add
push
clc
sahf
jg
inc
clc
aas
push
and
add
or
add
jg
outsb
test
movsl
clc
sbb
jae
add
je
in
leave
mov
clc
xor
add
and
add
push
clc
iret
fcomi
scas
or
push
add
shrl
clc
lret
sub
mov
or
in
insl
int
clc
cmp
insl
adc
add
add
stos
jbe
cmp
xchg
or
adc
dec
movsl
clc
inc
add
mov
mov
ds
dec
push
and
add
cmp
fcomps
clc
xchg
xbegin
add
pop
scas
sub
ret
test
inc
clc
enter
clc
rcll
in
data16
inc
clc
pop
stc
jns
popf
cmp
lock
add
repz
add
clc
add
add
clc
jecxz
scas
loopne
cmp
inc
add
stos
cltd
push
dec
enter
sar
test
dec
rcll
add
add
xbegin
pop
insb
xlat
cmpsb
clc
aam
mov
xabort
je
jns
clc
jge
in
dec
adc
add
add
bound
add
jnp
std
mov
cmp
or
cmp
int
clc
lahf
cwtl
frstor
add
pop
ficomps
imul
loope
cmp
sbb
add
push
jno
add
stos
mov
inc
clc
dec
stc
lods
dec
rorb
and
and
add
clc
sub
add
cmp
add
in
aad
pusha
add
mov
loop
xor
add
xchg
test
clc
dec
setnp
add
mov
and
add
xor
add
clc
cmp
add
lock
add
clc
iret
fnstenv
clc
loopne
or
add
clc
mov
pop
jbe
stos
stos
pop
push
add
mov
sbb
inc
clc
insl
fucom
clc
xchg
xchg
rdseed
mov
cmp
mov
das
jecxz
out
cld
adc
add
clc
lock
add
cmp
push
cmp
fildll
push
sub
cs
fcmovbe
enter
shrb
clc
sub
inc
clc
mov
clc
pop
clc
sar
push
and
add
add
xchg
int
mov
mov
es
cmc
xor
sbb
add
add
clc
xor
xor
add
repnz
cmpsl
clc
push
repz
clc
adc
add
stos
scas
mov
cmp
clc
clc
lret
sahf
sub
pop
es
or
jge,pn
clc
sar
and
add
clc
mov
mov
add
clc
cmp
clc
divl
add
clc
cwtl
xor
add
xchg
lcall
add
pusha
add
outsl
es
jbe
clc
clc
int
and
add
clc
mov
add
add
call
clc
and
inc
clc
inc
add
lret
ret
add
add
add
add
add
dec
jp
clc
cs
sbb
xor
clc
decb
leave
imul
popf
push
add
dec
and
add
mov
jp
inc
clc
mov
xabort
add
scas
sti
pop
mov
cwtl
jnp
mov
dec
cmp
loopne
movsl
clc
movsb
clc
clc
stos
je
out
ss
insb
stos
or
or
lahf
add
add
mov
scas
xchg
int
sub
dec
jmp
sbb
xor
add
clc
lock
ret
inc
clc
mov
jbe
add
adc
add
mov
fsubrs
cmpsl
clc
inc
add
negl
adc
add
add
mov
fisttps
rorb
clc
int3
data16
xchg
adc
push
add
push
pop
stc
lcall
add
mov
std
mov
clc
jne
mov
scas
xlat
inc
add
into
in
in
xor
add
add
sbb
add
ja
add
mov
pusha
add
int
sahf
add
add
mov
lcall
clc
scas
dec
test
fsubl
insl
icebp
ljmp
clc
xor
add
test
hlt
xchg
mov
aas
or
lret
or
and
add
sub
sbb
push
add
mov
clc
scas
xchg
ds
mov
add
sti
inc
add
pusha
add
push
add
push
sahf
in
inc
clc
mov
push
jmp
mov
cmpsb
clc
push
add
int
push
repz
sub
aas
insl
adc
add
add
sub
ja
cmc
dec
stos
cmp
loop
gs
data16
aam
pop
call
pop
mov
add
test
stc
popf
mov
push
xor
add
mov
xabort
clc
mov
sahf
cmp
pop
inc
clc
outsl
leave
or
cmp
addr16
popf
jl
adc
add
clc
nop
imul
add
add
clc
into
lods
outsb
clc
push
add
loopne
jmp
and
fstl
add
or
out
mov
add
sarl
jl
add
shll
cwtl
mov
add
clc
fwait
ds
dec
xchg
adc
add
sbb
imul
cwtl
mov
add
scas
jle
roll
jge
mov
clc
dec
cmp
jns
add
sbb
clc
push
add
jae
add
clc
cltd
cs
clc
cs
xor
add
clc
sbb
clc
aad
clc
mov
add
pop
es
lods
and
add
add
daa
clc
xchg
mov
in
cwtl
dec
stos
push
jp
clc
push
add
or
cmp
inc
add
es
xchg
cmp
add
sub
rcl
adc
push
add
popa
add
loopne
mov
inc
clc
loop
test
jo
add
mov
call
lock
add
mov
cmp
add
push
dec
add
add
clc
jmp
add
test
mov
std
gs
push
add
mov
dec
or
clc
jne
clc
cmpsl
clc
jo
add
add
cltd
je
cli
test
fiaddl
stos
aas
inc
clc
push
add
mov
mov
clc
jne
inc
clc
mov
clc
ret
clc
fmull
add
xabort
clc
cmp
clc
mov
clc
and
add
add
in
test
mov
pusha
add
out
dec
popf
sbb
ja
clc
outsb
imul
xor
cmp
bswap
fisubrs
cmc
imul
fimull
clc
mov
add
and
add
cmc
out
cmp
mov
clc
xor
into
mov
sub
add
fisubrs
push
shll
jecxz
ljmp
clc
int3
adc
add
add
add
mov
clc
xchg
sub
jmp
cmpsl
clc
ss
add
mov
add
lea
add
fbstp
xchg
ja
inc
add
inc
clc
sub
fwait
in
in
sbb
clc
gs
cmc
or
or
mov
fbstp
add
cmp
or
clc
push
imul
sbb
and
add
clc
mov
pop
clc
fbld
add
daa
clc
jl
clc
push
mov
add
loopne
dec
fsubrs
stos
sub
out
cltd
fdivp
in
dec
jns
mov
push
int
add
jle
ja
out
cmpsl
clc
in
push
jae
add
add
xabort
clc
mov
add
add
test
mov
push
clc
push
add
xlat
sar
pop
xchg
out
mov
dec
push
pop
jo
add
clc
gs
mov
xchg
stos
inc
add
and
add
std
xor
add
add
xchg
push
jns
aad
out
outsb
sub
add
pop
ret
add
imul
add
cmp
dec
and
add
mov
clc
es
xbegin
mov
xor
inc
clc
imul
and
add
sti
jg
not
mov
in
ss
fwait
jae
add
add
mov
push
pop
adc
add
jmp
clc
jmp
add
cmpsb
clc
lods
fwait
sahf
inc
clc
xbegin
cmp
add
jne
repz
mov
pop
clc
ffree
clc
lods
add
jmp
sar
push
fs
scas
sbb
aam
ficoml
add
mov
jecxz
stos
add
add
movsb
clc
gs
cld
jl
push
adc
add
cwtl
mov
clc
adc
add
mov
add
add
mov
daa
clc
xchg
testl
clc
or
clc
call
icebp
cmp
clc
lea
sbb
or
or
add
aaa
in
mov
add
scas
test
clc
jecxz
je
add
push
aad
add
jns
dec
dec
jo
add
add
int
sbb
push
add
jmp
xor
add
rcl
jno
add
insl
xor
xor
add
sarb
add
pop
nop
out
lods
shlb
outsl
mov
xor
add
dec
push
clc
xabort
clc
arpl
add
clc
pusha
add
or
add
add
cmp
add
loope
or
clc
adc
add
cwtl
pusha
add
push
mov
adc
push
clc
icebp
mov
mov
cmp
add
pop
clc
pop
mov
lahf
js
mov
sar
clc
inc
add
sti
shrl
clc
fnstcw
mov
add
add
jb
add
rcrl
and
add
add
mov
mov
clc
cmp
add
xchg
fstps
movsb
clc
inc
add
mov
add
add
add
clc
ja
clc
adc
add
or
lahf
adc
add
call
and
or
clc
out
add
cmpsl
clc
inc
add
add
add
dec
or
add
clc
pop
push
imull
fidivs
add
jne
mov
add
jnp
pop
jmp
outsl
mov
mov
dec
jecxz
and
add
lods
xlat
and
add
dec
lea
in
iret
inc
clc
xchg
pushf
mov
cld
fcmovu
xchg
es
out
sti
and
push
push
add
mov
movsb
clc
pop
shrb
add
test
push
movsb
clc
fwait
divl
add
add
cmp
add
clc
sbb
clc
dec
fiaddl
in
cs
xchg
jae
add
add
push
lret
clc
sar
clc
addr16
mov
mov
out
mov
in
repz
cmp
adc
add
inc
clc
push
test
jg
clc
add
add
xchg
ret
clc
sahf
push
inc
add
iret
push
fs
leave
sbb
loop
js
clc
jno
add
add
add
add
add
add
sbb
pop
lods
lock
insl
cmp
clc
push
enter
out
test
pop
mov
or
jnp
clc
clc
hlt
jge
int3
loopne
cmp
outsl
mov
add
add
ss
jno
add
or
clc
aas
xchg
pop
bound
add
add
clc
js
mov
clc
sbb
add
add
pushf
pop
imul
clc
xor
add
sub
stos
mov
xabort
call
and
add
adc
add
es
and
add
add
and
cmp
cs
movsb
clc
inc
clc
sar
mov
inc
add
aaa
or
add
sti
dec
out
push
add
mov
mov
xor
dec
jne
push
bound
add
sbb
cmp
jle
xchg
imul
push
inc
add
addr16
shlb
add
test
mov
sub
repz
or
out
inc
add
dec
aas
or
and
add
call
pop
jg
in
push
add
sub
or
add
add
add
mov
add
clc
rcll
scas
inc
clc
add
add
add
push
add
add
in
sub
add
scas
add
add
clc
in
shll
xor
add
cmp
add
fstl
xchg
xlat
mov
inc
clc
xor
add
add
mov
arpl
add
mov
in
daa
clc
clc
ret
scas
mov
clc
int
inc
add
insl
or
push
mov
mov
add
aas
mov
sti
push
add
pop
ljmp
sub
daa
clc
stc
or
add
pop
clc
dec
jg
mov
add
add
add
mov
movsb
clc
inc
clc
sbb
clc
cmp
jp
push
xlat
stos
cmpsb
clc
leave
fs
lret
in
mov
add
push
add
cmp
add
lods
stos
cli
lcall
jl
mov
or
add
das
pop
pusha
add
out
inc
add
xchg
mov
mov
lock
add
add
sub
clc
push
shl
clc
bound
add
ljmp
xor
add
inc
add
push
add
cmc
jbe
clc
inc
add
jnp
jecxz
movsb
clc
sub
add
push
inc
clc
cmp
testb
add
cmpsb
clc
jecxz
cs
sbb
xchg
addr16
push
arpl
add
add
clc
dec
mov
clc
fwait
mov
inc
clc
loop
aas
into
xchg
inc
clc
cs
jmp
add
mov
mov
clc
adc
add
mov
add
ds
clc
mov
fimull
and
es
bound
add
clc
sti
dec
cmp
fs
add
add
scas
popf
outsb
fsts
add
mov
mov
sub
cmp
cmpsb
clc
xchg
mov
cmc
or
aaa
pusha
add
or
mov
cmp
add
fwait
das
movsl
clc
movsb
clc
popa
add
jb
add
add
std
push
add
inc
add
xabort
jo
add
loop
inc
add
mov
add
xchg
push
add
jnp
test
cmp
mov
arpl
add
push
push
add
add
add
adc
add
inc
clc
pop
and
add
xor
add
xchg
mov
add
enter
mov
push
sbb
mov
clc
and
add
mov
addr16
cltd
add
add
push
jp
add
ds
cwtl
mov
add
ficomps
rclb
add
add
add
add
jp
scas
ljmp
add
add
add
add
leave
js
outsb
fadds
fsubrs
cmpsb
clc
fsubrs
jae
add
mov
xor
clc
jns
bound
add
clc
std
mov
fidivrs
mov
cmpsb
clc
inc
add
or
clc
add
cmp
adc
clc
lret
and
add
or
add
std
leave
cmp
add
add
add
aaa
decb
repz
ss
or
add
inc
add
ss
fsubr
mov
loop
cmp
add
add
or
data16
in
xchg
je
test
scas
and
add
clc
loopne
sar
add
int3
scas
aaa
sti
push
mov
vpmadcsswd
out
cmp
add
add
inc
add
push
or
lea
ja
lock
xor
add
mov
cmp
push
clc
lret
add
and
loope
mov
add
xchg
jmp
and
add
je
add
push
push
mov
add
mov
aaa
pop
clc
ljmp
add
add
or
add
mov
addr16
or
lods
mov
aad
adc
add
int
aas
cmpsl
clc
pop
clc
arpl
add
pop
pop
or
pop
mov
outsl
xor
jns
add
cs
pop
add
add
add
add
gs
jae
add
add
jbe
cli
push
faddl
add
enter
and
call
push
mov
jnp
add
mov
clc
sub
addr16
lods
aam
test
push
add
std
iret
ss
adc
add
xchg
pushf
movsb
clc
sbb
add
add
cltd
add
add
jae
add
sbb
clc
cmp
clc
mov
lret
push
pop
sti
fistl
xor
add
clc
xchg
and
adc
add
cmp
mov
clc
data16
mov
add
xchg
and
es
scas
fs
or
jmp
lea
dec
call
add
clc
add
add
xor
add
add
cmp
movsl
clc
fiaddl
clc
repnz
jmp
mov
fimuls
shlb
fists
add
add
or
add
cmc
jo
add
add
aas
jns
outsb
je
or
fmuls
mov
pop
fsts
add
add
fldt
outsb
icebp
jb
add
add
es
or
inc
add
push
popa
add
pop
loope
inc
add
sbb
cmp
dec
sbb
js
add
mov
aam
ja
add
loop
loopne
jb
add
pop
clc
enter
clc
adc
add
add
add
cmp
add
ss
add
add
clc
cmp
clc
sbb
xchg
int
rcll
cmp
clc
mov
pop
push
clc
xor
add
mov
jge
or
mov
cli
mov
add
add
rorl
iret
push
cwtl
mov
clc
pop
lea
add
pushl
ss
popf
and
add
clc
lods
or
clc
icebp
xor
add
scas
mov
in
call
ja
add
fwait
or
inc
clc
add
add
push
inc
add
push
clc
jge
add
bound
add
clc
xor
cmp
add
dec
daa
clc
cmp
mov
lods
sbb
clc
inc
add
movsb
clc
cmp
add
xchg
out
fwait
pop
mov
das
xor
add
pop
popf
jecxz
in
mov
xchg
mov
clc
mov
in
in
cmp
stos
dec
cwtl
push
in
aas
and
add
add
add
mov
or
add
clc
or
mov
mov
add
clc
and
pop
lret
add
pop
add
add
add
add
clc
xbegin
mov
clc
adc
add
mov
jnp
clc
mov
add
push
add
out
xchg
jb
add
clc
adc
add
sti
outsb
add
add
adc
add
popa
add
idivb
pop
cwtl
rcll
pop
fdivrs
add
in
cld
pop
sbb
add
jns
mov
clc
cld
je
test
daa
clc
pusha
add
or
add
mov
add
add
push
cmp
add
clc
jle
das
sar
mov
clc
int
clc
pop
cmp
lcall
stos
mov
mov
push
mov
clc
in
pusha
add
loope
rep
scas
jmp
clc
into
mov
adc
add
push
xchg
shll
cmp
in
dec
stos
icebp
sahf
mov
push
mov
jb
add
repnz
add
fs
jp
outsl
mov
mov
jmp
in
int3
add
add
clc
push
fisubl
daa
clc
adc
add
add
add
add
repz
clc
mov
clc
xor
rol
clc
cmp
clc
in
push
scas
jns
inc
clc
ja
dec
mov
adc
add
adc
loopne
push
push
add
add
clc
lcall
pop
push
test
xor
add
aam
push
adc
add
xabort
add
and
add
scas
adc
add
add
cmp
add
cmp
cmp
push
lret
jno
add
add
clc
icebp
sub
mov
leave
iret
sbb
fwait
test
or
inc
clc
dec
js
cmp
cmp
adc
add
xchg
pop
mov
clc
push
add
nop
daa
clc
jge
clc
sbb
clc
lcall
add
xor
or
add
int
add
and
add
dec
xbegin
repnz
add
hlt
xchg
mov
xchg
pop
mov
add
je
dec
push
add
popa
add
into
cld
outsb
xchg
movsb
clc
ficoms
add
push
xchg
sar
clc
and
add
pop
adc
add
add
cli
or
mov
xabort
clc
clc
xlat
cmp
imul
popf
into
bound
add
mov
add
ss
sub
clc
xor
add
daa
clc
leave
and
add
lret
and
add
clc
mov
clc
enter
inc
add
push
add
hlt
sbb
or
add
pop
xabort
inc
clc
or
stos
cmc
pop
clc
in
push
add
sbb
add
sub
sub
clc
xchg
enter
xchg
add
sbb
outsl
stos
hlt
or
rorl
add
jge
loope
mov
add
clc
push
in
inc
add
jno
add
clc
sar
cltd
sbb
loopne
cli
xabort
test
push
add
lods
add
arpl
add
xor
add
push
and
push
scas
aaa
pop
clc
mov
add
add
dec
jmp
clc
push
into
cmp
inc
add
cmp
clc
push
lret
clc
divps
clc
in
mov
mov
mov
sbb
jns
mov
cmp
insl
sarl
int3
das
repnz
xchg
adc
add
add
cld
mov
add
clc
push
inc
add
pavgb
pop
clc
std
add
xchg
cld
cmp
sbb
xchg
add
add
pop
clc
jg
clc
or
clc
cmp
sbb
and
add
clc
idivb
clc
push
add
push
test
xor
add
add
pop
or
lret
cmp
lret
dec
sahf
lret
xor
add
loopne
int
popa
add
icebp
outsl
testb
add
add
icebp
lcall
scas
pop
jmp
add
addr16
insl
ffree
clc
pop
loop
out
es
adc
xor
aaa
addr16
push
cmp
cmp
mov
fnstenv
add
xchg
das
xor
add
jbe
mov
repz
mov
add
pop
stc
pusha
add
cmp
clc
insl
addr16
mov
ror
jne
ret
out
mov
clc
imul
add
ret
clc
pop
add
in
pop
sbb
clc
lods
cmp
pop
icebp
and
cmpsl
clc
out
mov
cltd
mov
push
fucomip
adc
add
and
add
add
add
add
cmp
push
test
xabort
push
mov
clc
jle
lcall
stos
xor
mov
xchg
js
dec
dec
or
pop
push
jno
add
dec
insl
pop
add
add
lahf
imul
push
in
cmp
add
cmp
cmpsl
clc
xchg
pop
scas
and
mov
clc
cmc
xchg
push
mov
add
push
pop
clc
or
fs
loopne
add
add
es
shr
into
jl
add
add
add
add
ret
clc
pusha
add
mov
pusha
add
cmpsb
clc
or
or
add
add
clc
lods
and
clc
xchg
fdivr
pop
sub
add
js
xor
mov
clc
loopne
es
imul
add
add
add
adc
add
xor
add
clc
dec
mov
es
or
cltd
xchg
mov
mov
lahf
and
data16
inc
clc
pop
push
add
data16
mov
clc
push
add
sub
clc
inc
clc
mov
add
adc
add
clc
jae
add
mov
ss
push
insl
push
cmp
mov
add
push
add
sti
sub
lock
add
push
clc
cmpsl
clc
cmc
insb
xor
add
add
xor
jnp
adc
add
add
test
mov
clc
mov
dec
dec
cmp
imul
add
clc
shl
clc
add
add
jnp
movsl
clc
push
clc
jb
add
xor
add
data16
cwtl
pop
rorl
add
das
and
add
add
xchg
cwtl
and
add
test
rol
clc
mov
clc
fs
xor
add
push
clc
pusha
add
and
add
clc
test
faddl
clc
mov
clc
jo
add
in
sub
clc
push
cmp
or
add
and
stos
dec
es
jl
fisubs
add
lea
jmp
inc
clc
sqrtps
add
pop
cmp
lods
sbb
xchg
sub
push
inc
add
inc
clc
cmpsl
clc
jl
add
jmp
stc
xabort
out
jp
psubw
out
mov
adc
add
std
mov
clc
xor
add
add
sar
cs
xbegin
add
add
test
adc
cmp
jge
add
ss
add
daa
clc
mov
push
xor
cs
sar
clc
dec
push
ss
ds
jmp
data16
cmp
dec
repnz
clc
fldenv
add
push
add
dec
sbb
sbb
adc
add
and
add
clc
xchg
and
sub
and
add
add
xchg
pusha
add
mov
add
sar
in
imul
clc
mov
dec
fs
sbb
add
add
xor
add
add
daa
clc
leave
adc
jne
mov
pop
repz
shll
clc
leave
and
add
xchg
dec
arpl
add
aas
out
lret
or
lcall
out
enter
icebp
ret
clc
mov
scas
push
push
inc
add
clc
gs
es
outsb
movsb
clc
sbb
dec
aad
sbb
xor
add
inc
add
call
movsl
clc
loopne
cmpsb
clc
cld
mov
and
add
add
add
clc
test
pushf
mov
inc
add
leave
hlt
xchg
aad
mov
xchg
sar
add
add
add
test
fiaddl
add
xbegin
mov
xor
ja
addr16
push
iret
loop
mov
add
sar
xchg
hlt
mov
add
cmp
push
add
mov
or
clc
xchg
dec
mov
mov
add
mov
in
jmp
add
test
test
fldt
mov
in
icebp
push
pushf
jno
add
sbb
add
outsl
xor
add
xrelease
and
aam
pop
cmpsl
clc
xchg
repz
clc
xchg
cmp
mov
add
clc
in
mov
clc
add
add
add
dec
sar
push
jg
xchg
iret
pop
mov
lcall
clc
int
pop
mov
clc
add
add
cmp
outsl
popf
cltd
cltd
mov
inc
add
add
add
and
add
or
clc
sub
add
adc
add
jb
add
add
cmp
mov
add
dec
sub
fnstsw
sbb
add
jne
add
fldenv
add
jle
sub
movsb
clc
movd
inc
clc
inc
clc
mov
add
std
mov
sbb
stos
clc
jno
add
pop
sbb
mov
clc
sbb
or
add
push
push
push
add
pop
lock
lock
clc
push
out
adc
add
add
mov
sysret
clc
shufps
insl
test
jo
add
int
clc
sbb
cmp
add
or
jp
pop
outsb
mov
clc
mov
clc
dec
mov
clc
pop
loop
leave
fiaddl
clc
mov
clc
xor
add
jo
add
sbb
add
sahf
out
add
add
clc
xchg
or
push
add
lahf
in
imul
add
clc
clc
cmp
mov
clc
fs
add
add
xchg
xabort
add
cmp
add
xor
add
clc
es
mov
pop
inc
clc
cmp
add
pop
mov
cltd
insb
jae
add
pushf
outsl
and
add
jb
add
sbb
push
add
jmp
push
pop
xor
add
jp
xor
mov
dec
xchg
shll
mov
sub
adc
add
inc
clc
add
push
fidivs
add
add
dec
mov
lods
in
into
loope
cmpsl
clc
pop
daa
clc
out
addr16
sub
pop
adc
add
sbb
idivl
add
out
inc
add
in
aaa
xchg
jo
add
pop
mov
insl
xor
add
or
clc
shlb
add
add
ret
imul
je
clc
fsubp
clc
push
add
out
adc
add
jno
add
insb
cwtl
fimull
add
sub
add
bound
add
scas
or
mov
sbb
or
push
sbb
add
add
pop
cmpsb
clc
repz
and
sbb
clc
xchg
xlat
enter
adc
add
add
daa
clc
mov
js
or
add
lret
xor
add
add
sub
cmp
jge
sub
shrb
sahf
pop
mov
xchg
mov
jmp
clc
push
dec
imul
mov
clc
bound
add
and
add
inc
clc
push
add
dec
mov
mov
or
mov
or
sbb
add
add
add
mov
clc
or
add
arpl
add
push
jb
add
testl
roll
adc
add
cmp
cmp
clc
mov
jbe
cmpsb
clc
decb
xchg
cwtl
cmp
mov
add
into
es
daa
clc
cmp
insb
test
sub
clc
bnd
pop
mov
xchg
aad
pop
enter
xor
add
inc
add
mov
decb
aad
pop
sahf
sub
icebp
jle
fs
dec
pcmpgtb
movsb
clc
sub
add
sub
add
pop
mov
dec
push
sbb
pop
xchg
jmp
clc
sub
clc
push
mov
int
fcomip
lock
xor
add
or
je
mov
cmp
add
popl
add
add
cmp
add
dec
cmp
clc
mov
mov
add
popa
add
jo
add
and
add
lods
test
test
inc
clc
cmp
clc
in
jns
clc
out
add
add
stos
iret
aaa
push
add
cmp
xabort
clc
dec
adc
clc
out
push
xor
push
mov
add
out
out
in
sbb
mov
clc
mov
cmp
clc
or
enter
jmp
push
cwtl
sahf
pop
jnp
das
incl
clc
push
xor
add
clc
popa
add
jbe
into
mov
es
push
mov
clc
jo
add
clc
pop
insl
add
mov
cmpsb
clc
xor
cmpsb
clc
scas
arpl
add
add
add
nop
fisttps
hlt
jmp
mov
clc
mov
add
clc
inc
add
mulb
cmp
clc
pop
out
hlt
mov
fildll
jl
add
adc
add
add
aam
scas
test
pop
aaa
roll
cmpsl
clc
or
std
test
sub
out
out
or
dec
aas
sar
add
dec
adc
add
movsl
clc
jl,pn
cli
clc
inc
clc
nop
pop
add
add
clc
cmpsl
clc
dec
pop
push
rolb
mov
dec
mov
add
pushf
out
cmp
xor
clc
loopne
xchg
pop
push
mov
clc
push
clc
cmp
clc
inc
add
ja
clc
pop
ret
add
inc
add
cmp
clc
dec
mov
clc
sar
adc
mov
cpuid
clc
mov
iret
xbegin
gs
ss
and
add
push
out
fmull
mov
and
ret
gs
lods
mov
scas
dec
aam
cmpsb
clc
pushf
cwtl
mov
fsubs
xor
add
jnp
aaa
push
pop
cmp
sbb
pop
jnp
insb
push
clc
pop
lea
jmp
clc
push
outsl
push
cmp
mov
clc
push
mov
clc
movsb
clc
mov
fbld
mov
inc
clc
fdivr
pop
pop
push
popa
add
jecxz
enter
gs
ficompl
shl
pop
mov
add
mov
mov
add
clc
push
jo
add
adc
cmp
nop
data16
adc
add
clc
xchg
fistpll
paddd
fwait
push
cmp
es
jecxz
ja
clc
fisubs
add
addr16
imul
cmp
call
leave
xchg
dec
cmpsb
clc
dec
das
mov
add
add
nop
mov
pop
cli
divl
jle
enter
add
negl
push
add
mov
xchg
adc
add
jnp
clc
mov
inc
clc
mov
add
repz
clc
xor
clc
xchg
mov
dec
fadd
clc
out
sbb
lahf
pushl
mov
clc
mov
mov
pop
adc
add
je
add
call
clc
sbb
clc
leave
xor
add
clc
sbb
mov
and
add
pop
jo
add
sti
outsb
pusha
add
push
jo
add
cmp
clc
test
mov
je
clc
xor
add
cmp
lcall
add
jle
clc
leave
call
xchg
outsb
lock
or
add
add
ss
inc
add
hlt
cmpsb
clc
popf
sar
add
leave
xabort
pop
fcompl
clc
jo
add
push
add
cmp
lret
clc
clc
test
jle
mov
aam
cmp
clc
dec
push
movsb
clc
decb
inc
clc
xchg
dec
inc
clc
jle
mov
add
arpl
add
add
cs
cmpsb
clc
sub
iret
into
inc
add
lret
add
add
cwtl
lret
test
cwtl
pop
or
loopne
jno
add
jp
push
add
lock
icebp
sub
jg
clc
add
add
jp
add
ret
icebp
pop
rcrb
or
mov
xor
daa
clc
ljmp
add
add
ss
call
inc
add
sbb
sahf
cmp
add
fcoms
cmpsl
clc
out
into
shlb
in
or
iret
xchg
jge
sbb
iret
ret
clc
insb
jbe
mov
ss
clc
or
jno
add
add
xor
clc
jle
push
add
mov
cmc
jb
add
add
cs
es
inc
clc
or
push
dec
mov
add
mov
int3
or
fildll
into
dec
push
add
aam
bnd
scas
lea
clc
push
add
inc
add
pop
push
xor
add
cmp
add
out
sar
out
mov
loopne
cmp
inc
clc
push
arpl
add
add
sbb
pop
mov
add
clc
inc
add
repz
faddl
mov
push
push
add
iret
cmp
clc
push
add
vmovlps
add
mov
fildll
jmp
stc
movsb
clc
mov
iret
xor
add
add
add
pop
mov
cltd
mov
clc
push
leave
push
add
adc
add
stc
xbegin
jnp
add
add
add
add
dec
cmp
clc
jo
add
in
sbb
xchg
scas
xor
add
clc
mov
add
add
clc
mov
pop
clc
dec
test
and
add
scas
dec
loope
sub
xor
add
xabort
jmp
daa
clc
pop
pop
clc
cmp
mov
add
clc
fistpll
adc
stos
cmp
clc
dec
mov
cwtl
data16
adc
adc
add
adc
add
clc
int
add
daa
clc
and
add
jl
xor
add
add
test
sbb
mov
clc
or
add
xor
add
push
add
cli
mul
clc
dec
icebp
aad
out
and
clc
dec
cltd
sarb
add
pop
clc
or
ja
clc
lock
add
jg
add
cmpsl
clc
and
add
clc
ja
push
add
adc
add
clc
adc
xchg
ljmp
clc
cmp
jnp
or
add
pop
leave
jns
clc
aam
ficompl
loopne
push
mov
movsl
clc
lret
repz
add
jb
add
xchg
xchg
dec
repz
add
cli
push
call
sub
cli
out
mov
sub
data16
cld
sub
cmp
outsl
outsb
insl
arpl
add
fistpl
jl
pop
push
clc
in
xbegin
aad
movsl
clc
mov
add
mov
clc
xchg
xor
cmp
push
or
out
outsl
xor
add
clc
lret
inc
add
mov
clc
sbb
clc
int3
add
add
ficomps
fmull
ret
int3
popf
int
movsb
clc
fstps
loope
sar
mov
cmp
add
jae
add
shlb
add
int3
mov
add
test
adc
add
add
fidivl
add
ret
in
cmp
add
test
or
dec
ficoml
add
add
adc
clc
rcll
xchg
leave
jg
xchg
push
add
mov
je
sahf
push
add
jl
mov
test
or
clc
pop
xor
add
xchg
popf
mov
arpl
add
cmp
and
add
popa
add
and
leave
push
add
add
xchg
or
pop
data16
mov
imul
in
lahf
mov
cmp
push
clc
add
add
clc
out
push
mov
mov
adc
add
daa
clc
dec
mov
mov
add
cltd
clc
dec
jle
jae
add
ss
fprem1
jnp
fs
lret
add
outsl
cwtl
mov
add
add
add
and
jmp
clc
or
test
push
mov
clc
and
add
jnp
repz
xor
clc
inc
add
std
int3
push
clc
js
mov
clc
sbb
fwait
mov
clc
fistps
xlat
dec
arpl
add
add
mov
add
sub
add
ss
cmpsl
clc
cmp
jecxz
mov
lods
adc
addr16
movsl
clc
xchg
and
add
mov
sub
push
pop
add
lcall
jae
add
add
sti
xlat
idivl
out
leave
in
xor
add
inc
clc
lea
add
xchg
xchg
repnz
push
or
push
clc
adc
add
or
call
clc
jbe
clc
cmp
stos
cmp
pop
mov
clc
cltd
stos
mov
test
ds
mov
jbe
clc
push
jge
push
add
pop
jp
fnstsw
add
add
add
repz
clc
popa
add
cmp
mov
bound
add
xchg
jo
add
out
cmc
add
add
clc
xor
add
sub
clc
ret
clc
sub
jmp
cwtl
pop
cwtl
sub
mov
add
outsl
in
insb
test
jns
cs
push
sub
push
add
bound
add
test
push
add
sbb
add
cs
mov
insl
test
pop
sub
adc
add
or
fisubl
clc
xchg
mov
push
clc
ja
xor
add
add
icebp
fldenv
clc
cmp
out
aad
scas
cmp
clc
xlat
aad
jnp
shll
add
clc
aam
mov
add
mov
fsubrp
sbb
shll
or
dec
pop
jp
icebp
nop
add
add
js
clc
test
lret
imul
add
in
pusha
add
inc
add
fstpl
inc
clc
popf
inc
add
fisttps
fimull
mov
adc
add
fxam
clc
sbb
shlb
add
add
repz
clc
pop
mov
aam
popf
imul
dec
popa
add
aaa
fs
leave
sarb
mov
ja
lods
inc
clc
scas
lcall
or
add
cwtl
hlt
shl
inc
add
jno
add
aas
sub
pop
xchg
icebp
pusha
add
flds
add
scas
call
add
aaa
xchg
iret
jb
add
add
mov
mov
cmp
imul
add
pop
adc
add
add
repz
push
in
sbb
jl
add
pusha
add
fs
dec
xor
add
add
pop
or
xor
add
clc
push
call
sub
lcall
pushf
cmp
gs
adc
cmpsb
clc
fistpll
clc
aam
add
add
add
cmp
clc
xlat
ret
clc
pusha
add
test
jge
jne
mov
hlt
adc
add
or
div
mov
shrb
leave
sbb
clc
push
clc
jle
scas
test
enter
clc
adc
add
add
add
popf
test
cltd
mov
sti
fs
icebp
dec
in
sar
clc
and
add
sbb
clc
rolb
daa
clc
push
mov
clc
sbb
clc
aam
clc
push
add
pop
outsl
outsb
stos
arpl
add
adc
add
clc
sti
cmp
clc
cmp
cmp
clc
lret
add
jo
add
sbb
add
fisttpll
add
cltd
mov
add
jnp
or
ret
clc
clc
fsubrl
clc
enter
out
add
mov
ds
add
push
xabort
frstpm(287
clc
fisttpll
cmpsb
clc
into
push
data16
int3
adc
add
adc
add
add
das
and
add
add
stos
jle
add
dec
and
add
add
dec
inc
add
or
xbegin
push
inc
add
or
das
pop
pop
cmp
clc
mov
push
add
ljmp
lret
aaa
xbegin
icebp
int
lea
lcall
xchg
es
or
mull
clc
insb
enter
bound
add
add
sbb
mov
clc
mov
add
mov
aam
sti
lcall
cmpsl
clc
sbb
add
push
scas
and
add
lahf
nop
decl
pusha
add
call
data16
cld
dec
dec
mov
add
clc
loopne
push
add
mov
xor
add
repz
clc
insl
sbb
cli
xabort
leave
int
push
fnstsw
add
clc
push
ja
stos
stos
mov
clc
int
or
add
jbe
add
in
test
push
add
mov
clc
repnz
ss
call
in
pop
adc
add
mov
sub
dec
iret
push
test
lea
add
add
push
mov
adc
add
add
cmp
or
xbegin
aad
push
xor
add
clc
cld
xchg
dec
or
add
aas
xbegin
add
imul
pop
pop
call
clc
mov
rorl
scas
scas
cmp
xchg
scas
mov
in
jns
dec
rcrb
add
cmp
clc
xor
jbe
jnp
clc
xabort
inc
add
arpl
add
clc
jo
add
leave
xchg
repnz
push
add
shll
mov
sub
push
add
icebp
mov
mov
push
add
sbb
clc
jo
add
add
mov
test
ret
clc
dec
and
or
mov
testb
add
dec
sar
add
mov
clc
push
popa
add
fisttpll
or
add
kmovw
add
test
clc
fildl
outsl
cmp
mov
pop
add
add
xchg
pop
das
dec
cmpsb
clc
pop
fsubs
add
jns
add
and
add
clc
or
cld
mov
lret
in
divb
push
push
mov
arpl
add
mov
cmp
add
fwait
xor
add
add
filds
clc
gs
pop
sbb
inc
clc
outsb
xchg
in
sub
cmp
rorl
add
cmpsl
clc
xor
pop
sub
clc
outsb
sub
dec
fstpl
lcall
clc
and
add
dec
cmc
inc
clc
push
cli
js
aam
push
push
mov
add
jmp
push
xchg
mov
add
mov
or
add
and
fisubrl
adc
add
add
dec
leave
cmp
mov
jp
pusha
add
rol
clc
and
add
add
daa
clc
lret
call
mov
imul
add
aad
clc
jmp
jb
add
push
or
push
add
std
ljmp
or
mov
mov
mov
lods
cld
sbb
or
clc
in
addr16
or
mov
xabort
clc
xchg
mov
add
push
push
sbb
push
loopne
dec
mov
insl
cmp
jbe
mov
lock
sbb
add
or
add
adc
add
cmp
add
mov
inc
add
nop
cmpsb
clc
adc
add
add
xchg
cmp
xchg
cmpsl
clc
into
mov
negl
add
in
clc
cltd
jbe
fwait
and
or
rcrl
cmp
lret
xchg
cmpsb
clc
xchg
sarb
mov
add
es
lret
fs
in
fs
mov
add
mov
cs
push
add
xchg
and
add
clc
bound
add
stc
sbb
pop
inc
clc
ds
add
pop
adc
push
add
pusha
add
adc
add
inc
add
sub
test
mov
add
mov
shrl
clc
shlb
add
jae
add
and
add
mov
add
xbegin
xchg
lret
xor
add
push
lret
jns
add
lea
adc
add
jns
repz
insb
sbb
roll
mov
dec
int
jp
adc
add
clc
sub
push
pop
cmp
add
pop
dec
and
sbb
mov
leave
ss
clc
or
ljmp
cld
cmpsb
clc
jbe
pop
add
divb
add
cmp
outsl
adc
add
cmc
aam
ret
clc
jmp
scas
pop
and
add
out
loopne
or
clc
sar
loope
sar
add
cmp
pop
clc
jge
clc
dec
lret
push
jge
push
in
dec
fnstenv
mov
fiadds
das
test
es
mov
inc
clc
xabort
add
out
sahf
call
fstps
or
add
jae
add
fs
imul
lods
cmp
fcomps
mov
jbe
div
pop
imul
sar
sar
clc
stos
test
clc
out
push
jo
add
sub
add
mov
addr16
mov
pop
push
shll
add
pop
or
add
xchg
xor
add
clc
pop
sbb
add
jne
roll
xor
add
cmp
inc
add
and
add
cs
clc
sub
clc
sub
jecxz
cmp
add
push
hlt
xchg
clc
scas
pop
sti
push
cld
xbegin
add
mov
clc
sbb
jbe
mov
push
jb
add
push
add
lea
inc
add
push
test
add
cmp
clc
fdiv
popa
add
adc
add
add
leave
xbegin
add
add
add
cmp
xchg
mov
add
push
or
dec
pushf
xchg
xor
add
and
jle
out
ss
add
mov
clc
sti
xchg
imulb
add
xchg
fwait
adc
add
mov
je
fcmovnu
pop
mov
clc
mov
mov
clc
pop
stc
fdivrs
mov
add
add
add
add
add
cmp
das
push
add
mov
je
clc
jmp
hlt
stos
mov
clc
rcll
add
inc
clc
fs
inc
clc
frstor
cmp
sar
jnp
and
add
pushf
js
stc
addr16
pushl
add
std
das
cmp
inc
clc
xchg
insl
test
dec
and
add
pop
repnz
addr16
pushf
mov
cmp
clc
enter
push
fwait
or
clc
daa
clc
sti
in
xchg
xchg
in
and
repnz
test
add
and
add
loopne
imul
sub
add
add
add
clc
ffreep
clc
dec
fidivrs
sub
jo
add
pushf
scas
pop
aaa
xor
add
and
add
cmp
cmp
adc
das
movsb
clc
icebp
jmp
add
inc
add
das
sbb
add
insb
sub
loopne
dec
xlat
insb
add
lcall
add
push
add
jo
add
rcrl
out
xchg
das
jae
add
pop
and
add
add
cmp
stc
pop
call
mov
add
add
fildll
inc
add
ds
push
inc
clc
mov
push
add
jl
adc
add
add
add
add
mov
sbb
daa
clc
popf
data16
jmp
cld
lahf
pop
cmp
je
clc
cmp
das
adc
jo
add
mov
and
dec
dec
fnstsw
sarb
clc
adc
add
xor
add
add
push
mov
xor
add
add
sti
fisubl
add
add
test
fcmovne
cmp
add
clc
inc
add
add
add
js
clc
fs
stc
jbe
clc
fscale
jge
xchg
lcall
clc
push
in
jle
adc
clc
jmp
sahf
rol
clc
and
add
mov
mov
add
gs
cmp
clc
sbb
in
mov
push
clc
imul
clc
inc
add
cmp
add
and
fists
bnd
mov
add
cmc
ljmp
clc
loope
movsl
clc
loopne
pop
rclb
pop
xchg
fmull
clc
sbb
adc
add
dec
sti
sub
clc
repnz
jg
clc
jge
fmull
lods
test
and
add
clc
push
xchg
inc
clc
popa
add
mov
mov
inc
clc
cmp
clc
cmp
add
loopne
cmp
clc
fs
jbe
data16
jbe
jbe
movsl
clc
or
clc
sub
pop
xor
fstpl
imul
xchg
mov
xchg
cmp
add
repnz
pop
ret
clc
clc
adc
repz
mov
adc
add
add
imul
jl
add
sahf
addr16
int3
xchg
mov
ret
clc
xor
add
clc
mov
dec
mov
clc
add
mov
clc
mov
push
add
popa
add
xbegin
and
add
or
mov
pop
xchg
in
loopne
fwait
push
and
add
sar
cmp
add
xchg
dec
push
add
add
jl
test
ficoml
pop
cwtl
popf
cmp
js
clc
pop
lods
shr
mov
sub
add
fsubl
daa
clc
sar
add
rorl
sbb
mov
jo
add
js
mov
clc
gs
push
add
xor
add
adc
add
fisttpl
clc
ja
or
clc
and
add
add
add
xchg
cmp
cmp
clc
sbb
pop
inc
clc
aad
or
jnp
add
add
add
add
cmc
sar
clc
xchg
sar
jg
inc
add
xchg
pop
adc
add
push
add
sbb
add
in
mov
clc
arpl
add
add
add
xchg
xchg
sbb
cmp
mov
add
clc
mov
clc
pop
mov
or
loopne
jae
add
mov
add
inc
add
cmp
add
clc
inc
clc
cld
aas
pop
aas
arpl
add
jb
add
add
push
clc
ficoms
sub
push
fiaddl
add
mov
add
lret
repnz
add
xchg
stc
insl
cwtl
cmp
push
add
pushf
mov
mov
xchg
and
jo
add
mov
in
cmp
mov
add
push
add
ret
clc
pop
mov
testb
outsb
xor
add
pop
mov
cmp
gs
cltd
leave
fs
cmp
jmp
or
clc
in
xbegin
add
aad
imul
xchg
fsts
inc
clc
adc
add
lahf
add
or
clc
or
add
add
sbb
es
or
pop
mov
outsl
lock
add
clc
push
adc
add
clc
data16
sbb
insl
gs
xchg
std
add
add
add
jnp
jno
add
mov
inc
clc
outsl
enter
xchg
or
in
sub
xchg
in
sar
jge
add
dec
aam
fidivrs
push
popf
stc
push
clc
std
dec
ss
clc
mov
pop
push
bound
add
add
sub
push
cmp
clc
mov
add
popf
pop
mov
clc
lcall
sub
scas
insb
push
add
mov
xor
add
sti
stc
and
add
js
sbb
xor
data16
cmp
push
clc
jecxz
clc
mov
push
add
cmp
clc
into
imul
dec
mov
insb
or
clc
pop
push
jb
add
add
add
cmp
add
aaa
push
jecxz
and
add
xor
mov
clc
aaa
call
add
clc
xlat
fnstsw
clc
fidivrl
add
xor
add
add
clc
pop
pop
ss
ss
add
stos
js
add
inc
clc
mov
xor
cwtl
xchg
test
std
jp
clc
rolb
add
lods
xchg
mov
dec
mov
scas
inc
add
jp
add
jno
add
add
adc
add
clc
pushf
gs
aas
jg
ljmp
push
add
and
add
out
and
pop
mov
inc
add
in
shrl
add
dec
jl
adc
test
clc
sbb
mov
add
faddl
add
sar
pop
arpl
add
add
or
sar
push
add
push
clc
pop
sub
cmpsb
clc
push
mov
xchg
dec
cmp
clc
enter
push
add
icebp
adc
add
cmp
pop
sarb
adc
add
jnp
or
aam
icebp
jno
add
cmc
lcall
test
ret
clc
jmp
add
cmp
lcall
add
inc
clc
add
push
into
cli
popa
add
addr16
leave
add
add
and
add
add
add
xchg
add
add
add
ffreep
clc
call
inc
add
arpl
add
add
or
clc
fs
mov
popf
movsb
clc
or
insb
cmpsl
clc
in
dec
or
fldcw
clc
pop
push
adc
add
fistps
clc
adc
jnp
jns
mov
add
shlb
xchg
jnp
mov
cmp
push
fcomps
add
add
xabort
repnz
dec
pop
adc
aad
pusha
add
lods
xchg
sbb
cmpsl
clc
push
mov
cmp
push
add
fwait
and
pop
pop
mov
movsl
clc
aas
daa
clc
lret
push
add
out
stc
out
pop
mov
in
test
clc
in
sbb
stos
dec
and
add
test
add
xchg
dec
cmp
add
add
adc
add
add
xchg
mov
xchg
mov
clc
or
cmp
xor
add
fucomp
adc
add
clc
divb
lahf
mov
add
add
add
clc
movsb
clc
clc
cmp
add
mov
iret
mov
scas
sbb
jb
add
add
cmp
sar
frstor
or
add
clc
repz
clc
dec
xchg
hlt
add
add
jl
icebp
and
add
lcall
add
mov
lods
incb
add
scas
mov
leave
and
icebp
cmp
clc
add
loopne
jmp
clc
data16
popf
push
clc
rol
clc
in
and
add
cltd
mov
inc
add
xchg
pop
clc
lods
add
pop
fimull
xor
rsqrtps
add
cmpsl
clc
aaa
loop
test
jo
add
add
push
clc
ds
in
inc
clc
stos
add
add
jmp
clc
cld
fbstp
add
clc
inc
clc
leave
or
add
es
clc
push
add
test
test
clc
push
icebp
push
add
sub
sar
icebp
dec
or
add
add
jo
add
pop
dec
pop
pop
pusha
add
cmp
clc
cmp
clc
lret
add
test
add
shll
add
clc
iret
pop
jbe
mov
clc
push
add
xchg
xor
add
je
dec
aas
sub
sub
add
add
fcomp
push
xchg
jo
add
push
xchg
es
jmp
add
mov
cli
adc
add
clc
sbb
jle
adc
pop
fstl
add
mov
or
clc
inc
add
mov
add
fucom
clc
faddl
add
add
add
clc
sbb
clc
fst
addr16
cli
jo
add
ljmp
add
ret
inc
clc
sub
clc
xchg
flds
xchg
popf
aad
clc
icebp
das
adc
add
xor
add
jg
lret
pusha
add
clc
dec
xor
out
jecxz
mov
clc
hlt
decl
clc
out
cmp
rorb
sbb
and
mov
leave
add
bound
add
pop
mov
add
aas
push
add
pop
lcall
cld
xchg
js
into
and
add
clc
dec
clc
xlat
sahf
mov
add
push
add
mov
adc
add
clc
mov
add
add
xchg
mov
clc
in
pop
adc
movsb
clc
inc
add
pop
add
add
clc
repnz
push
fsubrs
pop
cmp
sub
pop
jecxz
inc
clc
sti
aad
in
pop
and
add
pop
xor
add
jmp
lods
jb
add
clc
xchg
sub
add
jno
add
xchg
shll
add
fcoms
add
add
xchg
cmp
inc
clc
std
inc
clc
fwait
out
pop
add
add
divb
cltd
rcrl
xchg
mov
clc
cltd
cltd
inc
add
inc
clc
add
add
add
add
mov
mov
jp
add
mov
add
dec
bound
add
add
daa
clc
pushl
sbb
clc
jo
add
adc
add
movsb
clc
pop
jecxz
fistl
pop
xchg
jge
cmp
mov
clc
jbe
adc
add
clc
dec
cmpsl
clc
clc
and
mov
adc
fs
inc
clc
push
push
clc
gs
push
add
ja
clc
or
fwait
clc
or
mov
xchg
mov
clc
loop
cmpsl
clc
sbb
add
test
fsubrl
add
add
sbb
outsb
sbb
cmp
std
addr16
es
push
add
dec
scas
clc
pop
jns
aas
ds
repnz
pop
arpl
add
add
or
add
notb
add
push
cmp
fs
out
dec
jb
add
dec
clc
adc
add
rol
clc
pop
lock
add
add
add
jge
xchg
push
xabort
add
jle
inc
clc
and
push
es
out
xabort
add
xor
add
add
mov
dec
mov
cmp
add
add
mov
bound
add
xor
clc
xor
mov
add
shlb
add
popa
add
pop
mov
clc
push
fists
add
je
jae
add
xbegin
stc
xchg
sub
xchg
daa
clc
popf
inc
clc
and
add
clc
pop
clc
lcall
inc
add
in
adc
add
popa
add
cli
sbb
clc
fwait
jno
add
mov
clc
jno
add
cwtl
daa
clc
mov
je
clc
cmp
xbegin
add
frstor
lret
adc
cmp
push
add
addr16
and
add
push
mov
add
xabort
popa
add
addr16
sbb
clc
or
bts
push
and
add
add
add
add
cmpsb
clc
jmp
cltd
fnstcw
adc
add
clc
aas
sbb
ficompl
nop
pushl
clc
inc
add
cmp
ljmp
cmp
repz
hlt
cmp
out
push
add
or
mov
sar
dec
lods
aam
jge
rorb
test
fildl
or
ret
clc
outsb
add
add
clc
xchg
cmpsl
clc
mov
mov
add
or
clc
repnz
out
fwait
jae,pn
add
cwtl
pop
pop
clc
push
stc
call
push
lcall
mov
xor
cmp
clc
lods
cmp
pop
adc
add
xor
add
jns
mov
clc
dec
lret
lods
mov
add
hlt
daa
clc
sar
lods
mov
jnp
clc
sub
clc
mov
clc
sarb
sar
push
leave
insb
dec
push
sub
add
xor
add
fwait
cwtl
leave
jo
add
cmp
rcrl
add
mov
add
in
dec
aaa
in
and
add
add
inc
clc
stos
push
and
add
mov
add
dec
fldenv
clc
roll
jae
add
clc
std
push
inc
add
insl
cmp
add
mov
add
jl
add
iret
lret
pop
lods
adc
add
clc
int
mov
jge
add
push
add
xchg
or
pop
dec
jae
add
clc
cmpsb
clc
negl
jecxz
mov
clc
jp
clc
sub
inc
clc
out
enter
jl
clc
inc
add
cmp
test
stc
aaa
fldt
sub
idivl
mov
push
add
lret
clc
xor
add
push
add
push
mov
dec
adc
add
add
stc
pop
push
add
mov
cmp
or
xchg
jbe
clc
mov
pusha
add
cmp
rcll
xor
add
clc
aad
clc
mov
es
inc
clc
cmpsb
clc
pop
in
addr16
push
sbb
clc
aam
clc
sti
and
pop
jo
add
add
add
ficoms
add
push
add
mov
cmpsl
clc
lcall
jns
or
add
add
sbb
sub
fcoml
clc
xbegin
icebp
cmp
xchg
pop
sbb
mov
loope
xor
add
add
mov
movsb
clc
sbb
adc
add
adc
add
cmp
data16
scas
mov
stos
push
add
add
pushf
or
jbe
clc
lods
jl
faddl
add
testl
repnz
xchg
movsl
clc
pop
sbb
add
iret
inc
add
test
ljmp
clc
dec
push
jp
xchg
sti
stos
test
into
xchg
jo
add
clc
pop
loope
test
sbb
add
push
add
cmp
clc
aaa
dec
jp
clc
cmp
xor
add
sar
stc
push
push
xchg
cmpsl
clc
insb
icebp
scas
xor
add
jmp
leave
test
push
add
and
add
std
inc
clc
outsb
cmp
push
mov
push
push
out
pop
popf
aas
lret
mov
lea
add
jge
clc
cwtl
inc
clc
bound
add
push
xor
sbb
clc
add
add
add
inc
clc
adc
pop
or
insl
cmp
add
mov
or
add
add
mov
add
aad
xor
jl
nop
add
add
clc
ja
ret
clc
cmp
clc
pop
in
out
movsb
clc
jmp
adc
add
push
add
pop
rcrb
add
jbe
add
sbb
or
pop
dec
inc
clc
cmp
add
add
add
adc
add
add
push
clc
clc
leave
shl
cmp
imul
inc
clc
stc
lea
add
add
clc
and
add
repnz
adc
add
imul
sar
sbb
xor
clc
push
cmpsb
clc
push
add
sbb
clc
adc
lods
add
jg
loope
inc
add
sbb
adc
add
pop
insb
fs
sar
clc
test
test
sbb
mov
ret
int
clc
xor
pop
xbegin
and
add
add
xabort
in
jg
add
cmp
add
inc
add
clc
addr16
add
fisttpll
mov
add
ja
clc
push
sub
add
aad
add
movsl
clc
add
add
cmp
add
sbb
pop
ud2
je
ljmp
clc
fisubrl
push
add
in
in
scas
fstl
clc
nop
call
cmp
bound
add
add
clc
mov
add
jo
add
and
ret
push
clc
pop
popf
insl
push
mov
add
add
clc
data16
pop
or
push
mov
add
fistl
add
sub
test
add
jo
add
stc
fmuls
stos
sbb
clc
cmp
inc
clc
xchg
ss
idivb
addr16
add
add
stos
sub
mov
add
add
add
and
sbb
adc
add
xchg
mov
clc
stc
iret
sub
pop
mov
test
lock
loope
push
clc
jb
add
add
stos
jb
add
xchg
insl
das
mov
add
pusha
add
or
dec
rcrb
das
pop
xchg
mov
mov
and
and
xchg
push
clc
sbb
add
add
sbb
fcomps
data16
clc
lret
std
dec
cmpsl
clc
jne
icebp
dec
push
add
and
outsl
or
add
add
rorb
pop
sarl
xabort
je
mov
jl
clc
fwait
popa
add
cmp
clc
xchg
inc
clc
cmp
ljmp
fimuls
call
add
pop
push
push
das
jbe
cmpsb
clc
clc
cmp
fbld
push
add
xor
add
dec
clc
ljmp
clc
push
stc
shll
add
fwait
test
rcrl
inc
clc
push
clc
scas
cs
push
add
jae
add
add
ret
clc
sbb
add
out
mov
aaa
dec
stos
xor
add
push
add
sbb
insl
sbb
lahf
cs
mov
dec
push
clc
pop
outsl
popf
jle
add
sar
mov
mov
cs
clc
push
xchg
pop
clc
popf
jge
push
clc
out
xchg
stos
lahf
push
clc
push
mov
push
clc
sti
and
add
test
mov
clc
enter
add
inc
clc
push
add
clc
or
clc
das
mov
dec
xchg
adc
add
or
adc
add
test
dec
mov
clc
pop
dec
cmpsl
clc
pop
lods
es
daa
clc
int
iret
inc
clc
cmp
add
xchg
xchg
mov
pop
cwtl
mov
das
dec
mov
add
pop
lods
mov
clc
pop
xbegin
clc
lock
lret
sar
add
mov
sub
clc
rcrl
xchg
inc
clc
mov
add
add
clc
cwtl
adc
clc
lock
push
fs
and
add
jb
add
add
add
repz
fsubl
add
pop
push
sbb
jmp
out
pusha
add
iret
dec
into
mov
cmp
add
sahf
pop
jno
add
add
sar
test
sti
mov
sar
mov
repnz
xlat
dec
out
addr16
leave
cmp
call
xchg
cmp
push
clc
pushf
add
pusha
add
or
add
je
pop
loop
xchg
push
jb
add
clc
xchg
sbb
addr16
sar
je
jbe
mov
daa
clc
add
add
jbe
sti
rcrl
xor
add
clc
jb
add
xbegin
push
add
xlat
loopne
xchg
xchg
gs
dec
clc
jo
add
dec
rcr
lcall
push
pop
clc
rsqrtps
add
add
add
inc
clc
enter
sbb
adc
add
sar
mov
clc
add
add
aam
add
in
or
add
stos
gs
movsb
clc
pop
repz
cmc
xor
add
jmp
add
xor
add
or
dec
jecxz
push
popa
add
push
stos
mov
dec
sub
jbe
clc
mov
in
mov
add
test
add
jbe
adc
add
clc
jmp
push
push
add
lock
jns
add
mov
leave
pop
xor
add
add
add
clc
pop
cmpsb
clc
ds
clc
cmp
add
mov
and
add
fsts
in
push
jecxz
cmp
add
and
clc
fbld
add
cmpsb
clc
cmpsb
clc
jbe
clc
dec
jge
push
adc
add
push
lahf
test
imul
in
loope
lock
add
aaa
aad
daa
clc
nop
pop
jge
xbegin
cs
je
scas
mov
data16
jns
clc
sub
add
clc
xor
add
clc
int3
dec
cltd
stc
adc
add
clc
add
add
mov
cmp
sub
add
push
enter
sbb
add
pop
xchg
outsl
ret
pop
jecxz
outsl
rdseed
adc
add
or
insl
out
xchg
inc
clc
sar
jg
cmp
mov
add
in
icebp
mov
pop
int3
lret
inc
clc
inc
add
lock
mov
add
and
add
lret
mov
clc
outsl
jg
xor
add
imul
adc
add
clc
and
xchg
adc
add
lcall
add
add
and
add
sbb
sar
je
movsb
clc
mov
mov
pop
lock
idivl
xchg
stos
imul
xchg
push
clc
cmp
inc
add
clc
std
out
insl
push
add
and
add
add
add
ret
in
stc
pop
xchg
test
or
xabort
clc
or
clc
and
add
xor
add
add
daa
clc
into
mov
mov
clc
xlat
jo
add
add
adc
add
add
ljmp
addr16
pop
in
mov
pop
ret
clc
aas
mov
add
das
gs
mov
jns
add
jge
es
and
add
arpl
add
add
inc
add
sbb
mov
pushf
imul
ss
cmp
add
clc
fstps
clc
dec
out
test
dec
or
clc
xchg
cmp
aaa
aam
test
xchg
lcall
add
xor
add
repz
lcall
lret
jbe
sub
clc
dec
cmp
clc
sub
cmp
clc
and
clc
mov
add
mov
or
pop
aas
xchg
add
mov
out
lods
in
sub
mov
add
push
push
rol
clc
xbegin
inc
add
and
add
mov
clc
cwtl
mov
clc
mov
dec
jb
add
push
cwtl
or
clc
inc
clc
mov
add
out
xchg
or
sbb
inc
clc
jecxz
push
add
mov
push
add
xchg
jns
in
lock
hlt
jae
add
xchg
lods
sar
test
test
lods
push
jmp
add
lret
push
add
and
add
aas
out
repz
pop
sub
clc
push
xor
add
clc
gs
jns
inc
add
push
outsb
inc
add
es
mov
clc
inc
add
insl
das
push
add
mov
clc
pushf
sbb
sbb
cmp
sarb
add
pushf
push
inc
clc
mov
xchg
data16
clc
push
jae
add
pop
lahf
pop
pop
clc
jbe
dec
popf
mov
inc
clc
sbb
imul
add
add
es
xabort
sar
loopne
arpl
add
add
test
ss
add
in
fstl
add
xchg
xor
add
popa
add
xchg
inc
add
decl
cmp
mov
mov
add
mov
pop
clc
pushf
and
add
test
mov
lods
mov
clc
xchg
mov
sub
ljmp
addr16
sub
xabort
pop
xchg
xchg
test
cmpsb
clc
xchg
fstl
add
pushf
sar
add
insl
lea
stos
enter
add
daa
clc
cmp
mov
push
clc
xchg
mov
xchg
imul
add
sti
mov
clc
lods
or
ret
clc
ffreep
clc
shl
cmp
dec
lock
xor
add
addr16
pusha
add
xor
add
add
das
add
add
push
add
test
mov
add
adc
add
clc
fstpt
lods
das
out
call
clc
scas
push
cli
mov
sbb
stc
or
xsave
mov
clc
sub
xchg
xchg
push
clc
push
add
xchg
mov
clc
adc
add
cltd
mov
aam
mov
dec
pop
clc
sbb
add
ds
add
stos
sub
sbb
dec
jbe
mov
sbb
test
idivb
push
pop
sub
dec
jae
add
cmc
push
xchg
jmp
inc
add
and
cmp
add
adc
add
es
clc
xor
add
mov
std
push
out
bound
add
pop
cs
jmp
clc
mov
add
mov
lcall
add
cmp
dec
cmp
sub
div
sahf
ss
lock
xchg
in
add
jmp
push
ds
add
jl
mov
icebp
cmp
clc
xbegin
mov
xbegin
pop
xabort
movsl
clc
movsl
clc
popa
add
xor
lock
clc
cltd
addr16
xchg
sbb
mov
sub
add
cmp
xchg
insl
insb
addr16
lret
ja
clc
push
clc
cmpsl
clc
xor
cmp
clc
repnz
add
push
insb
push
clc
addr16
cmp
call
add
test
mov
push
or
icebp
scas
inc
clc
jae
add
add
mov
clc
jmp
mov
pushf
sub
add
push
add
sar
xchg
ret
popf
cmp
clc
fcoml
add
fisubl
add
push
add
out
in
loop
add
mov
es
mov
add
add
fnstsw
aam
add
cld
mov
add
dec
push
add
add
jecxz
ss
mov
sub
push
xlat
out
add
add
clc
push
faddl
fisubs
sbb
add
stc
mov
iret
loopne
and
add
add
jo
add
aaa
dec
arpl
add
pop
add
add
add
add
jno
add
add
data16
add
clc
out
dec
push
adc
add
xor
xchg
xchg
clc
addr16
and
add
cmp
jmp
clc
int
push
clc
mov
ret
clc
lret
lea
es
jge
rolb
dec
roll
adc
add
outsl
mov
or
add
jo
add
mov
mov
mov
add
dec
xrelease
data16
inc
add
jns
add
inc
clc
aad
xchg
push
add
leave
lret
clc
dec
inc
clc
sbb
xor
add
clc
dec
push
mov
clc
mov
xchg
push
loopne
insb
jge
inc
add
pop
jmp
add
add
clc
mov
sti
xlat
sar
scas
out
fbstp
add
add
sbb
clc
mov
xabort
add
jmp
cli
sub
clc
jae
add
xor
add
cmp
or
test
xchg
dec
inc
clc
dec
fisttpll
clc
mov
lock
push
clc
inc
clc
addr16
popf
lods
shl
out
jmp
add
std
xchg
mov
jo
add
mov
in
popf
ljmp
add
add
add
add
or
scas
mov
add
push
add
ret
clc
sub
add
int3
das
dec
pop
mov
sti
pop
addr16
add
popa
add
cmp
fnstsw
sahf
fs
pop
add
add
jp
insb
xlat
imul
xchg
mov
clc
xchg
jns
cld
mov
clc
cmpsl
clc
pop
cwtl
sar
or
and
add
cmp
xbegin
clc
adc
add
dec
cwtl
xabort
add
mov
or
cmp
clc
push
or
clc
ret
sbb
and
add
add
cmp
cwtl
repz
sub
nop
outsb
ljmp
test
das
fimull
jnp
or
inc
add
cmp
aad
imul
inc
add
int
cli
inc
add
dec
xchg
movsl
clc
pushf
imul
xchg
sar
add
sbb
bsr
sub
clc
mov
lock
jns
jns
clc
xor
add
add
es
cmp
add
test
adc
add
cmp
inc
add
mov
clc
rcrl
scas
jge
ljmp
clc
xchg
push
loop
inc
clc
push
clc
xor
mov
adc
add
lods
mov
pop
dec
adc
cmpsl
clc
push
pushf
movsl
clc
mov
out
imul
fnsave
add
mov
and
add
clc
fiaddl
decl
mov
add
dec
jl
ds
fs
mov
clc
icebp
stc
cmp
clc
sub
clc
lea
inc
add
sti
aaa
or
daa
clc
roll
sar
clc
push
add
pop
adc
add
roll
add
mov
mov
add
sbb
clc
xchg
int
add
dec
shrb
and
add
add
jg
clc
xchg
cld
sbb
clc
adc
add
sahf
cmp
daa
clc
mov
mov
cmpsb
clc
push
bound
add
loope
daa
clc
push
sub
add
adc
add
add
cmp
clc
out
adc
add
clc
mov
in
psubb
jle
fistl
clc
sar
add
scas
and
inc
clc
pmulhuw
or
add
in
ret
clc
and
add
mov
shrb
jecxz
out
in
and
add
add
add
es
cmp
mov
mov
clc
cmp
add
icebp
out
jecxz
popa
add
inc
add
dec
int
lret
mov
in
cwtl
mov
xbegin
cmc
cmp
add
and
add
cmp
lods
push
add
imul
add
push
cmp
in
sbb
mov
movsl
clc
push
dec
rcr
or
fiaddl
add
aam
fwait
pusha
add
xchg
push
stc
push
clc
sbb
dec
inc
clc
ljmp
add
fldenv
add
push
or
add
in
jl
add
cmc
jo
add
clc
xchg
push
add
test
aaa
in
pop
add
add
jle
xor
add
sbb
clc
xchg
and
add
mov
clc
lret
pop
clc
ds
sar
sahf
out
xor
sti
add
jp
inc
add
push
sahf
cmpsl
clc
hlt
xor
add
xchg
add
add
add
sub
repnz
sbb
add
push
add
fs
pop
imul
pop
mov
jo
add
mov
aas
mov
cld
call
add
xchg
int3
fs
mov
or
pop
add
add
add
cmp
cli
xor
ja
in
jno
add
sbb
add
cmovge
into
repnz
cmp
add
add
xchg
test
test
ficompl
clc
cld
sub
data16
arpl
add
clc
cmp
add
push
es
dec
addr16
dec
gs
mov
fs
iret
and
in
ds
push
pop
dec
pop
clc
xchg
xchg
sub
add
in
mov
jg
int
dec
jle
and
add
fidivl
int3
mov
fcoml
insl
incl
testb
mov
fdivrp
xor
add
add
add
clc
fld
clc
add
add
jbe
popa
add
fisubrs
stos
addr16
sbb
cmp
clc
jg
clc
fsubrl
jg
sar
pop
clc
mov
xor
add
ret
clc
sbb
clc
push
clc
lret
mov
push
push
ljmp
data16
push
xchg
inc
clc
jle
sbb
push
adc
add
clc
mov
ret
clc
jo
add
clc
sar
mov
cwtl
lods
cmp
mov
add
mov
cmp
mov
pop
pop
sub
js
or
clc
inc
clc
nop
sar
pop
clc
cmpsl
clc
cmp
repz
test
sub
sti
test
stos
add
add
add
push
add
shl
scas
rcl
ret
clc
xlat
mov
add
movsb
clc
ljmp
add
push
dec
sbb
insb
xchg
mov
add
clc
ret
clc
lods
mov
inc
clc
xor
add
push
sbb
mov
clc
xabort
xor
add
clc
xor
outsb
jb
add
repnz
sti
pop
jnp
add
xchg
repnz
add
jg
clc
adc
add
jmp
clc
mov
clc
bound
add
data16
cld
arpl
add
inc
add
adc
add
clc
xchg
lret
add
add
add
lods
test
clc
adc
je
clc
int3
jp
stos
nop
jl
cmc
sub
xchg
xor
add
outsb
and
shlb
push
lock
fs
int
dec
sbb
and
add
xbegin
clc
imul
scas
ja
insl
and
add
add
jns
jp
pop
popf
mov
add
add
clc
ja
pop
cs
inc
add
cld
lret
insb
xbegin
stos
xchg
sbb
insb
lea
mov
jmp
adc
add
inc
add
cmp
mov
clc
icebp
ljmp
and
add
push
iret
jg
mov
out
mov
je
cli
mov
adc
add
add
testl
dec
test
jecxz
xchg
pop
loop
or
adc
add
xor
add
in
sub
jnp
or
fidivrs
jb
add
and
add
clc
mov
add
add
mov
push
and
add
clc
cmpsb
clc
xchg
xor
xchg
outsb
push
int3
mov
add
clc
xor
add
pop
cmp
mov
fsubs
push
xchg
icebp
sub
add
mov
clc
mov
mov
add
iret
test
push
mov
add
clc
dec
dec
int3
inc
add
negl
cmpsl
clc
insb
xchg
push
xor
add
push
clc
mov
add
add
add
pop
pop
rorl
add
add
add
clc
call
fcomi
test
inc
add
enter
add
add
cmp
jbe
clc
push
repz
mov
mov
clc
das
xor
add
add
cwtl
mov
add
loop
test
adc
push
movsl
clc
es
icebp
mov
and
add
cmp
clc
cmp
and
adc
out
in
sbb
jns
add
add
add
clc
cli
arpl
add
sbb
clc
mov
fprem1
scas
pop
lods
mov
add
js
clc
sbb
clc
inc
clc
sbb
out
stos
fwait
bswap
xabort
push
add
add
add
add
clc
and
add
jp
add
inc
add
test
scas
sbb
xchg
adc
add
clc
dec
mov
add
test
clc
sar
pop
sbb
jb
add
dec
scas
add
add
clc
push
push
cmc
xor
add
clc
scas
sbb
repnz
add
dec
call
jge
clc
arpl
add
mov
add
loopne
push
cmp
add
mov
sbb
sti
jecxz
sbb
gs
loopne
pop
cmp
push
stos
dec
shrb
clc
xor
add
cltd
lahf
adc
add
ror
mov
add
cmpsl
clc
pusha
add
sub
add
pop
sub
clc
push
add
clc
sar
add
adc
lahf
push
add
push
fnstenv
add
add
add
add
ja
clc
mov
pop
lcall
clc
ret
clc
push
fcoms
add
jecxz
jne
clc
or
in
sbb
jo
add
add
jnp
into
inc
add
xbegin
push
sub
fwait
repz
adc
add
cld
cmpsl
clc
and
add
clc
test
addr16
int
add
jmp
add
add
clc
inc
add
sbb
clc
fs
outsb
add
add
add
cmp
add
icebp
inc
clc
loopne
sbb
add
outsb
int
test
adc
add
adc
add
add
clc
cltd
sar
cmpsl
clc
add
add
cmc
mov
push
add
mov
clc
out
outsb
sbb
jno
add
sahf
imul
clc
stc
outsl
dec
in
mov
add
clc
ljmp
stc
ja
push
xchg
fs
loopne
dec
and
mov
rclb
scas
mov
fstps
clc
out
sub
jp
clc
data16
jnp
inc
clc
ficoms
add
clc
mov
iret
lret
mov
add
or
push
add
lret
add
mov
pop
mov
clc
xor
add
faddl
mov
add
jae
add
push
sar
fisttps
in
jnp
adc
popf
cmp
imul
clc
mov
das
and
add
mov
xchg
lret
or
jp
mov
pop
clc
je
add
jns
clc
dec
sti
xchg
mov
push
add
hlt
rcll
add
sbb
pop
int3
outsl
adc
add
scas
insl
sahf
sbb
mov
pushf
mov
inc
clc
cld
push
outsb
xor
add
popa
add
out
fimuls
mov
pop
ret
clc
sbb
jbe
add
sub
add
inc
add
mov
pop
clc
data16
xor
add
add
int
popa
add
fchs
clc
xchg
jecxz
popf
sub
unpcklps
repnz
clc
cld
xchg
inc
clc
je
sahf
mov
add
mov
lea
mov
out
cmp
add
clc
sar
add
cmp
addr16
push
clc
rcl
pop
out
gs
or
jns
add
sar
clc
push
daa
clc
push
call
or
cmp
push
sbb
add
add
sbb
clc
iret
or
test
ret
or
push
add
lret
cmp
xor
sbb
in
movsl
clc
std
repnz
add
dec
std
out
inc
add
mov
clc
insl
add
add
clc
xabort
mov
icebp
jns
mov
xor
add
add
ja
add
and
xor
clc
outsb
and
add
lret
xabort
add
mov
clc
lahf
sbb
sub
ror
mov
mov
clc
jae
add
add
add
add
aaa
xbegin
clc
xchg
add
add
stos
adc
add
add
inc
clc
cwtl
aad
ja
add
mov
inc
clc
jp
sbb
clc
dec
add
add
and
add
cmpsl
clc
and
test
sub
xchg
adc
fcomi
inc
add
clc
pop
stos
icebp
sbb
add
inc
add
imul
add
add
clc
pushl
mov
add
mov
mov
clc
imull
and
mov
xor
sahf
stc
js
sar
clc
sahf
push
stc
iret
mov
add
add
lret
mov
mov
into
rolb
add
mov
add
lret
add
cli
dec
imul
inc
add
cmp
xabort
jp
testl
stc
push
dec
sbb
clc
nop
xor
add
clc
mov
clc
mov
data16
loop
xor
add
fiadds
add
loope
sahf
pop
cwtl
stc
pop
fsubrs
jns
clc
xor
sbb
add
clc
mov
clc
lahf
lret
sti
dec
sbb
dec
aaa
add
cmc
push
clc
inc
clc
insl
into
sub
notb
add
lods
jo
add
add
fwait
mov
clc
and
mov
add
popa
add
xchg
cmpsl
clc
add
add
out
xchg
aas
fcompl
clc
gs
dec
ja
or
add
cli
insb
sub
clc
out
jne
add
ljmp
mov
mull
push
clc
xabort
out
jae
add
mov
stos
into
cmp
add
mov
xor
add
cmp
and
mov
leave
inc
add
mov
mov
in
jns
sbb
clc
in
mov
outsl
int3
mov
pop
aas
mov
clc
cmp
clc
fwait
push
jno
add
cmc
sbb
shll
add
xchg
sbb
clc
xabort
loope
scas
gs
dec
sbb
clc
addr16
add
repz
xchg
push
add
pop
fmulp
xlat
pop
dec
out
mov
aaa
inc
add
divl
dec
jmp
add
add
pop
movsl
clc
out
mov
mov
cwtl
mov
add
push
cmp
mov
js
fs
mov
clc
cli
decl
inc
clc
cltd
lods
jb
add
or
daa
clc
testb
rorl
clc
or
aas
adc
clc
push
xchg
xor
arpl
add
mov
sbb
das
fnstsw
clc
xor
add
sub
jge
clc
push
clc
pop
dec
scas
hlt
sbb
add
xchg
out
ss
add
sbb
add
sar
rol
clc
popf
push
add
xchg
pop
test
add
jle
push
sar
add
mov
cltd
bound
add
mov
add
cwtl
popa
add
lock
in
sbb
add
add
add
sub
ds
mov
mov
pop
pop
xchg
adc
clc
call
xor
add
sub
mov
testb
ss
shll
add
adc
add
dec
out
push
add
aaa
dec
mov
fistpll
xchg
mov
jno
add
cmp
clc
jle,pn
xabort
add
add
clc
mov
call
shrb
ljmp
js
sbb
clc
or
sahf
jo
add
pushf
cmpsl
clc
cmp
rorb
cmp
add
cmp
cs
clc
sbb
cmpsb
clc
xor
push
add
mov
sahf
push
push
jl
add
inc
clc
stos
mov
es
inc
add
sub
and
cld
aas
xor
ss
outsb
add
add
xor
add
dec
fiaddl
jo
add
add
clc
iret
push
ficomps
add
iret
ljmp
add
sbb
add
sahf
xabort
clc
pop
fadds
xchg
sar
call
add
mov
clc
ret
clc
rol
clc
push
sar
add
test
xchg
fcmovnb
clc
fcmove
mov
js
add
jmp
add
jg
sub
cli
daa
clc
jmp
jl
lea
pop
sbb
add
dec
xbegin
es
test
add
mov
or
add
add
mov
clc
jmp
add
addr16
cltd
arpl
add
inc
clc
mov
insl
in
and
add
pop
xchg
push
pusha
add
jbe
pop
inc
clc
push
es
or
push
lret
adc
add
mov
add
add
add
or
push
xchg
cmp
add
cwtl
mov
clc
out
loopne
lahf
out
and
add
add
sbb
clc
bound
add
lods
pop
pop
cwtl
push
add
add
jp
xor
add
add
stos
test
push
add
cwtl
xor
xchg
or
add
adc
cmp
add
add
xor
add
add
addr16
in
dec
sbb
and
or
push
and
add
push
inc
clc
inc
clc
mov
pushf
mov
iret
ljmp
bts
clc
loope
mov
loope
test
clc
pop
ret
add
bound
add
add
xlat
jae
add
push
add
or
add
sbb
xchg
dec
xor
add
mov
clc
data16
stos
cmp
add
clc
aas
cmp
push
ret
clc
or
xlat
dec
mov
addr16
xlat
dec
add
add
ljmp
add
and
inc
clc
mov
push
sbb
fldenv
add
clc
and
daa
clc
clc
xchg
and
sbb
ret
data16
enter
clc
mov
add
js
add
sbb
sub
mov
lock
test
pusha
add
dec
cltd
fs
sub
iret
popa
add
das
repnz
inc
add
sbb
cmp
test
enter
fstps
and
add
dec
push
fxch
inc
add
shlb
push
fsubr
pop
out
out
cmp
jne
dec
adc
add
cli
jno
add
pusha
add
inc
clc
pop
xchg
jecxz
or
add
bound
add
dec
maxps
clc
cs
stc
rcrl
inc
clc
sar
sahf
mov
andps
clc
mov
cmp
loop
jno
add
mov
and
add
mov
cmp
clc
inc
add
stos
jae
add
clc
cmp
fwait
adc
add
add
ficompl
rorb
hlt
mov
clc
adc
add
push
mov
clc
ret
jp
add
mov
lods
add
add
sar
clc
inc
add
stos
cmpsl
clc
cmp
out
pop
lcall
inc
add
push
add
mov
clc
icebp
jg
xchg
nop
add
add
clc
test
jmp
and
add
test
int3
xor
add
insb
mov
mov
lret
popf
dec
cmpsl
clc
jmp
clc
pop
push
jne
mov
cmp
mov
push
add
xor
clc
pop
clc
dec
mov
in
xchg
sahf
xchg
pushf
aam
sar
into
psubw
inc
add
inc
add
push
xchg
push
fwait
adc
add
out
mov
cmp
sub
out
jge
gs
cs
clc
popf
pushf
mov
mov
add
loop
loopne
mov
clc
or
daa
clc
sub
ss
adc
add
inc
add
adc
add
jns
int3
iret
sahf
insb
cld
jmp
jecxz
jle
cmp
xchg
dec
mov
xlat
into
lods
mov
add
add
add
jbe
xchg
dec
and
add
inc
add
xrelease
movsb
clc
cmp
clc
xchg
int3
lods
cmp
sub
push
mov
hlt
and
add
clc
adc
add
add
adc
add
std
nop
jae
add
mov
pop
cmp
clc
insb
jo
add
add
stos
in
or
mov
clc
and
clc
ja
clc
pop
pop
sbb
clc
pop
lock
scas
rcll
clc
push
fs
into
in
mov
add
jbe
clc
cwtl
shlb
rcrb
pop
divb
xchg
mov
je
clc
cmp
push
mov
clc
jbe
rclb
add
mov
insl
leave
sub
or
clc
xchg
popa
add
inc
clc
cmp
rorb
pop
dec
cmp
add
add
mov
scas
and
add
cld
icebp
or
sub
mov
movsb
clc
add
add
loope
inc
add
sbb
mov
xor
add
add
add
add
add
mov
fwait
mov
cmpsb
clc
mov
clc
repnz
add
imul
mov
xlat
pusha
add
popf
sar
mov
vmovaps
movsl
clc
dec
pop
mov
clc
clc
mov
add
cmp
clc
cmp
jmp
addr16
push
add
into
sar
data16
nop
push
movsb
clc
cli
mov
add
adc
add
clc
ja
clc
pushf
aam
clc
imul
clc
xor
clc
xor
add
add
cmp
clc
jecxz
push
add
fld
clc
adc
or
adc
add
push
or
jp
inc
clc
mov
dec
inc
clc
pop
add
add
xor
add
inc
clc
cmc
jp
mov
clc
jmp
xlat
dec
lock
add
arpl
add
clc
ds
add
test
and
and
add
test
add
clc
jns
cmp
xchg
hlt
push
add
add
add
fnstenv
add
scas
lea
xchg
sub
test
sub
add
fstps
add
popl
add
sbb
add
ja
add
xabort
add
sar
mov
clc
cwtl
xchg
jmp
xchg
bound
add
mov
push
in
xabort
push
xchg
call
in
sub
pop
ret
add
xchg
loope
mov
gs
clc
mov
add
cmp
scas
mov
outsl
xchg
setp
add
ds
mov
xchg
rdpmc
add
scas
push
mov
in
mov
pop
push
and
mov
push
jmp
cmc
xchg
fstpl
pop
dec
popf
mov
pop
rcll
in
out
mov
out
mov
mulb
add
inc
clc
imul
jne
jno
add
ljmp
add
sub
fbld
add
xchg
ljmp
add
xor
add
clc
rolb
clc
mov
xabort
or
clc
pop
movsb
clc
jg
jp
out
fcmovb
clc
insb
adc
add
shl
insl
out
cs
add
adc
add
cli
add
or
add
mov
outsb
test
xor
add
icebp
push
add
cmp
mov
inc
add
push
sbb
dec
xchg
inc
clc
lahf
clc
mov
xor
aam
stos
add
lock
add
outsl
fnsave
add
sub
xor
add
add
in
push
add
cwtl
psrld
clc
fsubrl
mov
js
sbb
stos
lods
sbb
push
xchg
xor
jmp
add
mov
sbb
pop
push
add
add
add
and
add
out
ljmp
add
jbe
clc
xchg
outsl
xchg
jmp
or
add
gs
in
cmp
mov
add
out
out
cmpsl
clc
and
hlt
cli
push
daa
clc
mov
and
add
addr16
adc
notl
std
mov
clc
lahf
and
mov
clc
aad
push
clc
jo
add
sbb
pop
clc
push
fists
add
cmp
jmp
add
or
dec
add
add
pusha
add
mov
movsb
clc
xor
add
arpl
add
push
add
and
push
add
arpl
add
dec
jno
add
add
xor
add
mov
test
sarl
jg
add
add
repz
xor
clc
cmp
loope
jmp
clc
pop
mov
and
rclb
sbb
pop
clc
sbb
loop
adc
add
out
test
and
clc
pop
mov
sbb
add
fadd
clc
out
cmpsl
clc
pop
cli
sub
vcomiss
clc
cmp
aas
push
push
xor
add
xbegin
xor
xor
add
insb
sti
insb
stos
loop
dec
sbb
add
fnstenv
add
test
xor
add
push
push
je
clc
das
jl
cmp
jl
clc
enter
clc
pslld
clc
xbegin
out
cmp
add
pop
add
add
addr16
cmp
clc
sbb
add
test
rcr
dec
lods
dec
lret
ja
add
cmp
sub
jmp
add
and
add
push
fwait
xor
add
add
in
mov
fdivrs
cmpsb
clc
jle
or
dec
into
mov
in
test
test
mov
add
pop
add
add
clc
and
add
clc
pop
xor
push
inc
clc
adc
add
add
add
lret
movsl
clc
cmp
out
mov
add
movsb
clc
push
dec
jae
add
cmp
or
add
xor
dec
gs
sahf
stos
mov
clc
inc
clc
jb
add
clc
aaa
push
and
add
arpl
add
aas
rcll
add
jge
mov
fsin
mov
add
clc
lock
xor
add
pop
scas
dec
popa
add
sbb
das
dec
ds
out
and
add
clc
popa
add
inc
clc
push
add
cmp
add
lret
adc
mov
add
cmp
pop
clc
cmp
repz
test
int3
jp
and
add
popl
add
mov
pop
or
clc
scas
sub
mov
dec
mov
or
repz
in
sub
or
imull
out
mov
ret
cmp
add
add
clc
xor
add
inc
add
mov
mov
add
lcall
clc
bound
add
clc
jg
push
outsl
xor
inc
add
inc
add
jno
add
lret
xor
clc
inc
clc
mov
in
popa
add
dec
pop
mov
sub
add
jbe
and
add
add
jle
adc
add
add
add
test
clc
xchg
loopne
mov
xchg
jbe
in
es
loopne
pusha
add
jmp
add
aam
add
push
add
sub
gs
mov
xor
add
add
fsub
clc
lods
insb
jbe
clc
stc
cmc
pop
stos
mov
xlat
bound
add
inc
add
push
pop
out
cmp
jo
add
inc
add
data16
popa
add
xor
add
movsl
clc
mov
jmp
dec
sbb
mov
data16
mov
mov
mov
clc
nop
xlat
add
add
pop
push
clc
jne
clc
lods
inc
clc
mov
in
fstpt
sub
clc
js
cmp
clc
cld
pop
clc
and
add
clc
and
push
add
outsl
push
add
cmp
clc
outsb
movsl
clc
inc
clc
pop
add
add
jbe
sub
dec
mov
insb
test
xchg
mov
rdpmc
add
in
push
clc
clc
sbb
push
mov
clc
cmp
push
into
sbb
ljmp
add
fucom
clc
loop
shrb
fs
insl
test
clc
jns
cs
out
xchg
cmp
add
shr
lahf
js
add
jg
add
mov
lret
clc
push
inc
clc
test
insb
add
clc
lret
cltd
mov
add
mov
adc
add
add
in
out
mov
or
aaa
in
and
out
inc
clc
cmp
add
mov
sub
xchg
cmp
in
cmc
mov
cmp
push
loopne
fistl
clc
inc
add
jecxz
push
add
dec
dec
call
push
gs
cmp
jp
clc
fucom
clc
adc
add
aad
add
pop
out
cli
jmp
sbb
add
mov
add
add
jbe
js
inc
add
push
add
add
add
cmp
xor
push
add
sahf
dec
clc
cmp
add
rcrl
add
add
popa
add
pop
clc
cmp
clc
sbb
add
rcrb
add
add
scas
in
pop
mov
clc
aaa
jle
clc
sar
es
ds
clc
xchg
cs
clc
fld
clc
data16
or
mov
clc
gs
cmp
clc
stos
mov
mov
add
push
add
xchg
sarl
or
aad
inc
add
push
bound
add
jg
lret
add
adc
mov
ja
fists
or
add
add
add
add
xbegin
clc
xchg
popa
add
mov
clc
cmp
cltd
enter
add
out
sub
add
push
add
sbb
clc
dec
adc
add
in
and
add
sub
adc
add
add
lret
add
mov
jnp
clc
inc
clc
pusha
add
adc
add
loopne
inc
clc
lcall
inc
clc
jg
cmpsl
clc
mov
add
imul
fs
adc
icebp
test
add
inc
add
or
add
cmpsl
clc
sub
clc
lcall
add
sarb
add
bound
add
sub
ror
or
test
clc
jl
mov
fldt
cli
mov
add
out
aas
aam
cltd
mov
nop
sar
adc
clc
pushf
add
add
ret
clc
lods
shl
clc
in
and
add
fstl
add
cmp
pop
int3
mov
fs
push
clc
add
add
pop
dec
or
add
je
add
pop
call
add
sets
stos
dec
xor
clc
jb
add
add
and
add
fldl
clc
mov
ds
add
mov
add
sbb
add
add
data16
adc
jne
stos
fisttpl
xchg
mov
in
out
add
mov
add
sbb
jnp
cmp
add
stos
push
clc
and
fdivl
or
clc
or
add
decb
adc
clc
cmp
clc
inc
add
icebp
mov
push
clc
sbb
loop
imul
clc
jb
add
mov
push
lea
add
adc
add
in
mov
add
sar
add
add
inc
add
or
add
mov
bound
add
outsl
adc
add
and
loope
pop
xabort
sti
xchg
fwait
cmp
jg
clc
das
sub
test
cmpsl
clc
jae
add
clc
imul
add
lods
jne
sbb
add
xor
add
add
sti
dec
or
add
xchg
push
xchg
cmpsb
clc
and
add
add
repz
and
and
add
fs
cmp
add
or
arpl
add
add
clc
jno
add
mov
add
cmp
xlat
fdivrs
cmp
stos
dec
int
pop
mov
and
add
mov
add
jns
add
scas
je
xlat
xabort
cld
nop
movsl
clc
jns
clc
mov
clc
psubw
mov
testl
add
and
add
add
add
add
jno
add
add
push
add
or
mov
adc
add
add
or
pop
clc
lods
sbb
add
pop
lret
stos
adc
add
hlt
stos
adc
add
clc
nop
rorl
add
xor
add
add
aaa
je
pop
jmp
add
jg
clc
jle
dec
push
mov
add
jbe
clc
addr16
push
out
aaa
jge
mov
add
mov
add
enter
jg
xchg
mov
aam
loope
mov
clc
jo
add
add
add
jo
add
sti
cmp
jb
add
xor
add
add
idivl
call
sub
jne
adc
add
add
loope
dec
and
add
or
clc
cwtl
push
cmp
movsb
clc
xor
add
scas
lods
cmp
add
pop
pop
es
data16
dec
cmp
and
add
add
ret
clc
xor
add
clc
dec
cmp
jo
add
adc
add
mov
mov
push
add
cld
adc
xabort
or
lret
jo
add
pop
sti
lock
dec
hlt
inc
clc
mov
add
sbb
clc
pop
and
cmp
mull
clc
xor
pop
aad
loope
mov
mov
jp
dec
std
jmp
into
inc
add
and
add
push
add
push
loopne
adc
or
clc
popf
push
gs
cmpsb
clc
iret
cwtl
insl
push
mov
clc
xchg
add
add
cld
xor
add
clc
in
aas
fnsave
clc
out
sub
add
push
cli
cmp
ret
xchg
mov
add
sbb
mov
jl
xor
add
add
sbb
clc
lods
aad
popf
xor
add
push
clc
adc
add
add
jecxz
mov
mov
clc
clc
xchg
adc
add
add
mov
and
add
clc
jb
add
add
lods
jno
add
lcall
clc
xchg
or
icebp
ja,pt
jno
add
sub
xor
add
test
and
shll
add
xor
add
add
clc
jp
and
add
xor
pop
clc
fstps
loop
clc
iret
jae
add
clc
lahf
sbb
fdivrp
jl
cmp
adc
add
dec
fwait
sbb
add
clc
imull
jb
add
xchg
sbb
adc
add
mov
add
mov
clc
test
xbegin
clc
push
clc
jge
cltd
insl
xor
clc
add
add
clc
out
icebp
and
add
clc
jmp
clc
add
add
clc
adc
add
inc
add
adc
add
adc
fwait
lods
fsubrl
mov
jecxz
push
add
push
add
mov
push
pop
clc
mov
add
push
cmp
mov
clc
sar
xchg
push
rcl
dec
push
push
js
aaa
sbb
inc
add
movsl
clc
or
and
add
add
cld
lret
sahf
inc
clc
xchg
inc
clc
or
add
cmp
jecxz
sbb
clc
adc
add
inc
clc
lods
xchg
es
aas
sti
mov
push
clc
in
decb
clc
jecxz
mov
hlt
lods
or
xlat
nop
aad
sbb
add
fnstenv
clc
mov
lret
add
clc
xchg
xchg
out
cli
mov
lods
dec
jbe
sub
add
push
jnp
push
cmp
and
add
cmpsl
clc
xor
add
fwait
sbb
dec
fldl
add
clc
xchg
pop
sbb
mov
loop
mov
xchg
mov
mov
add
jle
jo
add
clc
icebp
mov
fidivrs
mov
clc
mov
shrb
mov
xchg
ds
push
clc
mov
cmp
clc
aad
clc
mov
add
dec
mov
clc
into
in
jo
add
xchg
pop
clc
test
arpl
add
add
xbegin
xrelease
clc
in
xchg
cmp
cmp
jg
clc
icebp
mov
clc
xchg
ret
clc
fldcw
clc
cmp
iret
popa
add
into
jbe
mov
pop
dec
ret
clc
ja
clc
sar
iret
outsb
fisttpll
sar
bound
add
add
dec
mov
mov
add
clc
sbb
fsubrl
and
add
clc
out
dec
daa
clc
pop
cmpsl
clc
sti
dec
cli
loopne
mov
jmp
pop
cmc
inc
add
js
or
pop
mov
pop
xor
loop
push
cltd
xor
add
fstpl
sbb
add
xabort
cld
stos
push
call
aaa
aaa
daa
clc
shll
clc
ljmp
add
es
movsl
clc
mov
add
shlb
or
clc
mov
bound
add
add
xchg
mov
add
add
clc
sub
pop
jae
add
clc
xabort
stos
sbb
add
push
xchg
mov
push
clc
mov
mov
pop
sub
clc
xchg
xlat
and
int
clc
sub
mov
loope
xor
add
jb
add
push
sar
add
imul
add
add
iret
mov
add
mov
je
xor
add
pop
enter
add
pop
nop
mov
clc
js
clc
insl
jae
add
sub
add
mov
clc
jne
add
xbegin
loopne
into
mov
pop
addr16
ret
clc
lret
adc
dec
stos
mov
inc
add
adc
test
jae
add
pop
cmp
aaa
and
mov
mov
jmp
xabort
xchg
ja
cmp
loopne
lret
aaa
imul
lcall
cmp
add
add
mov
sar
clc
mov
mov
outsb
and
pop
lcall
insb
hlt
daa
clc
and
add
in
into
into
sub
adc
add
sbb
lcall
add
lret
xchg
cmp
xchg
mov
in
push
add
cmpsb
clc
jae
add
add
add
clc
and
add
cmp
clc
lods
pop
lret
rclb
xchg
cmpsl
clc
xabort
clc
not
sub
add
cmp
mov
clc
fadd
clc
icebp
mov
fbstp
add
mov
outsl
gs
pop
lock
cli
out
dec
sub
xchg
push
add
clc
fildl
clc
gs
clc
mov
lods
jb
add
add
mov
in
std
cwtl
movsl
clc
pushl
sub
add
int
ret
add
add
std
sar
cmpsl
clc
out
mov
add
inc
add
lahf
fidivrl
clc
xlat
clc
pop
cmp
clc
jg
push
lods
ljmp
ret
clc
mov
adc
ja
cli
pusha
add
adc
clc
dec
sbb
ret
clc
rcrl
pushf
push
add
push
add
mov
push
sub
sbb
pushf
jno
add
and
add
repnz
xor
add
jns
xchg
idiv
pop
clc
mov
mov
test
pop
jb
add
mov
stos
mov
in
fs
jnp
cmpsb
clc
mov
mov
cltd
es
dec
pop
jl
xlat
inc
clc
mov
stc
jae
add
add
cltd
cwtl
lods
outsl
test
test
out
bswap
sbb
mov
add
jmp
in
lods
dec
out
jno
add
dec
gs
filds
add
imul
scas
jle
clc
cmp
inc
add
push
sbb
jo
add
clc
push
imul
dec
sub
pusha
add
test
add
push
enter
clc
fwait
or
clc
ret
jne
ret
mov
add
stc
insl
repnz
stc
cli
xor
add
jmp
mov
shl
mov
hlt
xor
add
cli
add
add
arpl
add
push
add
dec
shr
cmovge
add
pop
inc
clc
fdivs
and
add
fucomip
push
insb
mov
fildl
mov
xchg
or
jg
mov
aaa
dec
test
jl
push
ret
xor
add
es
dec
clc
inc
add
inc
clc
arpl
add
jns
gs
mov
aam
clc
adc
add
out
mov
clc
sbb
int
clc
fmull
add
aam
add
sbb
clc
cli
in
addr16
adc
add
add
cmc
fwait
scas
outsl
fstp
xor
in
push
sbb
sbb
movsl
clc
in
fisubl
sbb
popf
jo
add
push
add
cli
shll
add
xor
add
std
mov
add
leave
cmp
mov
stos
mov
lret
and
add
neg
sahf
or
jnp
and
add
mov
clc
adc
add
sub
add
scas
jmp
add
push
add
mov
ljmp
mov
cmp
add
aad
bound
add
pop
sub
data16
rorl
mov
cmpsl
clc
push
aas
shll
sub
jns
leave
dec
xchg
xchg
clc
in
pushf
cmpsl
clc
fwait
sahf
decl
aas
sar
cmp
jl
add
push
mov
add
or
add
lock
icebp
inc
clc
cmp
xlat
or
xor
add
push
add
cltd
or
clc
mov
push
add
or
jge
jecxz
mov
clc
xor
add
pop
icebp
frstor
add
add
es
mov
adc
add
test
outsl
add
outsb
out
xchg
or
fstpl
xchg
sbb
add
ss
push
xchg
icebp
sbb
add
cmp
scas
cli
call
jge
shrl
outsb
sti
cld
xchg
scas
dec
xor
add
add
clc
das
jle
clc
push
mov
push
aad
sbb
add
push
adc
add
pushl
jmp
add
into
or
loope
jns
jl
clc
mov
insl
hlt
xabort
cmp
jl
add
bound
add
add
jge
sbb
jmp
clc
pop
gs
fistps
clc
arpl
add
xchg
xbegin
add
ss
sub
push
loopne
push
add
add
cmp
es
stos
fists
add
jg
add
xlat
hlt
xbegin
add
test
add
sbb
add
xor
mov
adc
add
add
lret
inc
clc
mov
out
out
pusha
add
cmp
fisttps
add
pop
or
clc
cmp
fsubs
add
fisubrs
jmp
cwtl
hlt
jno
add
ror
ja
add
leave
jae
add
mov
dec
or
add
imul
and
add
fisubrl
das
iret
cmp
mov
cmp
iret
aad
add
cmp
clc
and
add
clc
out
mov
xor
out
pop
and
add
add
clc
mov
insl
div
in
das
loopne
lods
inc
add
inc
clc
jge
clc
ds
inc
clc
shr
and
add
shrl
sbb
clc
cmpsb
clc
mov
add
clc
bound
add
add
xlat
and
add
add
clc
push
inc
add
bound
add
dec
cmp
mov
or
and
clc
jg,pt
lret
sbb
movsl
clc
add
in
sbb
add
rcl
push
je
shlb
add
mov
pop
cmc
jne
dec
inc
add
sub
pop
movsl
clc
xchg
add
add
mov
xabort
mov
aad
out
arpl
add
clc
in
mov
jns
in
stos
pmullw
in
xor
add
rorb
xor
add
mov
shlb
sub
add
inc
clc
call
nop
dec
sbb
jge
stos
pop
sahf
cmp
add
add
loopne
shll
add
xabort
sbb
leave
arpl
add
cltd
int
clc
sub
sbb
dec
addr16
lahf
scas
cmp
add
xchg
cmp
mov
test
lcall
sub
test
dec
fs
dec
xabort
add
gs
stos
adc
add
xchg
push
mov
jle
dec
iret
test
inc
add
mov
add
add
test
enter
loop
sbb
sbb
stos
xor
add
lahf
mov
add
clc
sar
sbb
inc
add
pop
mov
add
sub
movsb
clc
sar
negl
and
add
clc
push
add
cmp
mov
clc
adc
aaa
scas
sti
das
fs
ret
clc
mov
add
fwait
data16
adc
add
add
add
jae
add
aam
cmp
loope
imul
add
imul
xchg
and
sub
clc
xchg
adc
add
or
call
add
jg
cli
outsl
mov
adc
fwait
in
sar
in
sbb
add
clc
lea
push
add
outsl
push
pop
clc
add
add
sub
clc
out
js
mov
add
add
loope
sbb
clc
incl
add
mov
clc
movsb
clc
mov
out
pop
sub
clc
in
pop
clc
ja
add
sbb
push
add
cmp
clc
daa
clc
or
clc
test
insb
cmp
dec
and
add
push
insb
sub
inc
clc
cmp
add
fstpl
inc
add
fdivrl
jns
jecxz
push
push
add
mov
add
adc
add
push
xor
add
test
jb
add
push
mov
add
aam
add
jbe
clc
out
xor
add
add
cmpsb
clc
adc
or
push
daa
clc
data16
imul
in
ret
adc
add
inc
clc
filds
add
push
push
jge
clc
sbb
add
add
add
sub
adc
clc
or
outsl
and
in
outsl
cmp
test
xor
add
cmp
addr16
popf
cmp
fs
cwtl
arpl
add
call
add
jle
adc
add
xchg
mov
test
cmp
push
add
mov
clc
into
sar
add
jno
add
add
mov
fsubrl
or
fs
adc
clc
mov
pop
sub
pop
add
add
clc
setbe
add
rol
clc
sti
adc
add
add
loopne
xor
clc
xor
add
clc
or
xlat
clc
lods
imul
cmp
clc
mov
clc
lcall
add
adc
add
clc
fimuls
cmp
cmp
ret
xchg
pop
call
add
push
add
nop
push
lods
mov
or
clc
pop
push
lods
sarb
call
xor
clc
pop
je
clc
lea
into
in
sbb
add
dec
mov
sub
cld
push
mov
add
mov
push
add
mov
mov
clc
leave
in
xor
add
clc
ret
adc
add
ds
or
push
dec
ss
insl
jo
add
add
scas
mov
out
cmc
mov
clc
stc
or
xor
add
clc
setl
adc
add
mov
aas
inc
clc
mov
cmp
add
movsl
clc
xor
add
add
nop
fisttpl
mov
adc
add
jbe
jl
clc
push
add
sub
test
mov
cwtl
icebp
add
in
leave
jp
add
push
jge
repnz
add
das
adc
add
jecxz
fisubrl
adc
lret
push
add
fimull
add
add
stos
cwtl
sbb
clc
or
add
add
inc
add
xchg
mov
test
sbb
jg
hlt
pop
stos
pop
clc
cmpsl
clc
in
push
add
pop
mov
sbb
pop
int3
fimuls
outsl
test
and
mov
inc
add
pop
clc
push
fildll
cmp
dec
fxch
loop
lea
add
movsl
clc
pop
lods
out
ljmp
inc
clc
xchg
push
and
add
inc
add
test
xor
add
cmp
adc
add
aas
xor
add
clc
dec
xchg
fcom
jge
clc
lahf
sbb
xchg
ret
or
push
lods
dec
mov
stos
out
icebp
pop
addr16
cwtl
fsub
clc
fxch
pop
pop
clc
jns
cmp
add
mov
adc
add
mov
lock
mov
or
mov
add
pop
clc
dec
stos
inc
add
push
and
add
clc
iret
push
adc
inc
add
movsl
clc
or
mov
mov
sub
leave
or
add
sbb
add
add
cmc
lret
mov
mov
arpl
add
cmp
add
add
adc
add
mov
clc
jne
add
mov
pushl
add
xlat
int
jp
jmp
add
repz
imul
push
hlt
mov
sbb
clc
mulb
add
out
sbb
clc
inc
add
out
ret
sbb
clc
pushl
out
loop
push
and
add
pop
xlat
push
add
and
add
clc
xchg
gs
fildl
clc
lea
add
and
rcl
lret
sti
add
add
mov
add
push
dec
xchg
out
adc
add
dec
add
add
icebp
lret
pop
test
test
outsl
dec
cltd
in
mov
mov
or
inc
add
mov
add
add
cli
jle
in
cmp
lea
aam
add
ret
and
add
inc
clc
cld
push
push
adc
add
adc
scas
mov
add
leave
mov
jno
add
repz
add
add
add
add
sbb
aas
push
mov
lods
xbegin
pop
pop
pop
aad
clc
pop
or
fyl2xp1
jne
add
mov
pop
aas
sbb
xchg
and
add
into
cmp
adc
add
clc
jnp
inc
clc
inc
add
cmp
jmp
or
push
and
mov
je
and
add
add
add
add
add
cmp
jmp
cltd
cmc
lret
std
test
arpl
add
jle
add
mov
pusha
add
xabort
int
adc
add
push
add
mov
aam
push
pop
repnz
iret
adc
add
pop
sbb
inc
add
push
and
add
add
push
loope
xchg
enter
pop
push
add
lret
adc
lods
lock
add
ljmp
fistps
nop
mov
addr16
and
add
clc
mov
clc
es
insb
sysret
clc
std
inc
add
popa
add
mov
add
cmpsl
clc
push
or
add
clc
xchg
cmovge
sub
in
in
in
mov
ret
ja
sbb
sbb
add
add
pop
es
cmpsb
clc
out
xchg
loope
pop
sbb
xor
xchg
and
add
xchg
pop
dec
xchg
pop
clc
adc
push
add
inc
add
lods
outsb
pusha
add
ds
clc
push
in
jbe
clc
ljmp
clc
and
add
cmp
push
add
mov
clc
cmpsb
clc
inc
clc
sub
add
dec
mov
ja
pusha
add
stos
jmp
and
shlb
clc
in
xchg
add
add
lcall
call
jle
clc
adc
add
lock
pop
clc
and
out
popa
add
xchg
cltd
daa
clc
arpl
add
add
loope
mov
in
jmp
xchg
test
clc
push
xchg
arpl
add
clc
push
call
mov
add
mov
add
add
ss
cmpsb
clc
insb
inc
add
inc
add
fstps
cmp
clc
mov
add
and
cmpsb
clc
push
sar
btl
add
dec
mov
jnp
clc
das
adc
xchg
fidivrs
clc
incb
add
xbegin
test
repnz
xbegin
out
jns
clc
sbb
add
cmc
sbb
mov
mov
add
pop
nop
adc
jne
add
lea
add
test
mov
fiaddl
inc
add
adc
int
lcall
jp
mov
add
aam
add
or
sub
cmp
clc
stos
xor
add
cmp
add
add
clc
mov
clc
push
push
imul
in
adc
add
clc
sar
sub
aaa
mov
outsb
add
add
add
add
add
mov
clc
repnz
add
xor
add
add
xabort
adc
add
repnz
add
fdivs
add
lret
clc
sub
add
dec
aad
inc
add
je
jns
idivb
push
add
pop
pop
dec
sar
clc
add
clc
push
mov
add
add
into
push
push
add
pushf
and
add
add
sbb
add
enter
add
xchg
aam
mov
arpl
add
add
sbb
test
add
cmpsb
clc
push
add
cmp
clc
mov
dec
add
xchg
mov
aas
inc
add
sti
pop
adc
lahf
mov
fistl
jno
add
pop
shll
clc
sub
mov
cld
push
scas
mov
cmp
sub
sti
arpl
add
sar
jg
lea
add
sahf
and
sub
ljmp
aad
add
rol
clc
dec
sar
clc
cmpsb
clc
pop
jae
add
into
mov
int3
jo
add
jp
or
jg
into
popa
add
incb
clc
dec
adc
add
xchg
inc
clc
repnz
clc
cmp
clc
mov
cmc
sbb
leave
insl
gs
mov
and
add
clc
add
add
mov
clc
mov
addr16
adc
fld
clc
ljmp
mov
lods
cmp
mov
add
cmp
outsb
and
add
sar
clc
addr16
rcl
popa
add
cli
push
add
iret
loop
jmp
add
inc
clc
and
fadd
clc
adc
clc
push
adc
mov
cmp
add
in
ljmp
lock
and
cmpsl
clc
or
clc
xbegin
mov
xchg
loop
mov
xchg
lods
cmp
adc
jb
add
add
mov
cmp
je
in
test
add
dec
or
add
push
add
xchg
outsb
jmp
add
xchg
cmp
loope
xchg
mov
add
add
or
clc
sub
clc
or
add
add
add
jecxz
loope
jp
add
adc
clc
outsb
jmp
add
fdivrl
clc
int3
repz
cmpsb
clc
xlat
pop
push
scas
pop
aas
dec
mov
clc
pop
aad
sub
add
clc
push
add
and
add
clc
pop
clc
jge
sbb
adc
add
add
fldenv
clc
inc
clc
xchg
sbb
inc
add
in
aaa
popa
add
shrb
xchg
ret
clc
jno
add
add
mov
sar
mov
clc
insb
sub
lea
add
add
cmpsb
clc
int3
pop
pushf
lret
imul
add
add
xor
clc
div
or
add
jo
add
add
push
dec
and
add
pop
push
test
inc
add
xor
add
clc
cwtl
lods
sbb
add
add
add
clc
lret
cmp
into
aaa
dec
adc
xlat
xor
xor
add
add
jnp
cmp
push
leave
pop
je
clc
dec
sar
push
lret
pop
jb
add
enter
mov
xchg
loop
shrb
and
add
mov
add
sub
mov
cmpsb
clc
xor
add
inc
add
cmc
push
add
mov
test
sbb
clc
gs
dec
pop
fwait
fs
fstl
add
fdivrl
sar
testl
test
mov
fcoms
add
cmp
add
ljmp
scas
push
adc
add
mov
add
fisttps
add
mov
xbegin
pop
std
sbb
inc
clc
icebp
stos
or
clc
sub
dec
int
push
add
cmp
es
inc
clc
shll
add
pop
loope
xor
add
add
mov
xchg
push
add
arpl
add
clc
fldenv
add
adc
add
add
sar
lret
scas
pcmpeqd
nop
lret
adc
add
clc
inc
clc
push
adc
add
pop
clc
scas
pop
clc
cmp
pop
push
cltd
cli
xor
add
push
sbb
jbe
jecxz
xchg
sbb
in
mov
sub
add
push
add
dec
jmp
into
negl
sahf
xchg
mov
add
pushf
cmp
and
add
adc
add
or
mov
scas
dec
in
xor
clc
fcompl
lret
in
stos
add
add
sbb
xlat
rcrb
adc
add
fsts
xor
add
lods
dec
mov
mov
xor
add
and
shl
filds
add
mov
clc
mov
add
out
push
pop
adc
add
xor
add
add
out
inc
add
push
clc
xchg
and
add
add
xchg
adc
add
pop
sub
scas
pop
add
add
clc
adc
and
add
xor
add
mov
adc
add
sbb
fdivl
pop
xor
add
add
push
cmp
or
test
filds
add
mov
add
jecxz
incl
add
clc
sub
add
jle
clc
mov
faddl
arpl
add
clc
addr16
dec
add
add
jmp
clc
test
sub
xor
add
add
mov
push
add
sbb
mov
cmp
clc
insl
rolb
add
cmp
push
add
add
add
add
add
mov
insb
mov
clc
jbe
clc
sub
cmp
inc
clc
mov
add
add
xor
add
ljmp
iret
xchg
cmp
push
xbegin
in
dec
fcoms
add
lret
jnp
movsb
clc
push
cmpsl
clc
ljmp
sbb
pop
push
add
in
xbegin
sub
clc
int
xchg
push
dec
std
and
add
clc
mov
adc
cwtl
cs
add
inc
add
adc
out
lock
dec
sub
frstor
add
push
mov
clc
out
enter
cmp
add
clc
js
fs
movsl
clc
cwtl
mov
out
pusha
add
fcoml
add
add
and
pusha
add
lret
clc
pop
stos
mov
add
pop
dec
or
loop
mov
stc
mov
clc
pop
jnp
mov
pop
addr16
bnd
clc
jp
jne
iret
mov
fldcw
das
xbegin
push
enter
jns
clc
leave
aad
push
add
xchg
mov
bound
add
and
add
repz
cmp
add
add
clc
mov
loope
mov
mov
cmp
fldcw
clc
gs
push
add
test
test
rep
clc
ret
clc
mull
icebp
or
clc
fcomi
fs
dec
cmp
xabort
mov
add
pop
repz
inc
clc
or
push
clc
xchg
pop
popa
add
psrlw
add
mov
add
xor
add
and
add
in
push
add
adc
clc
and
add
add
add
add
add
mov
test
clc
add
add
mov
add
xchg
outsb
arpl
add
add
clc
push
add
lods
adc
loopne
dec
mov
daa
clc
pop
xchg
mov
mov
in
sub
test
mov
clc
out
dec
cld
aad
add
jmp
ja
repz
insb
movsl
clc
call
add
jnp
add
mov
or
adc
in
xchg
pusha
add
out
fnop
ds
int
sub
clc
cli
add
or
clc
xor
enter
clc
and
inc
add
add
add
in
sbb
or
sbb
clc
arpl
add
adc
add
or
clc
sar
clc
cmc
xrelease
cmp
scas
jmp
or
popf
popf
shll
sar
fwait
pop
xchg
lret
push
clc
and
xchg
and
add
sbb
call
clc
lret
add
add
mov
clc
adc
add
pop
fimull
adc
add
adc
add
imull
jb
add
into
mov
aas
insl
das
addr16
in
loope
mov
add
ljmp
or
and
cmp
add
call
clc
xor
push
ss
xor
add
fnstenv
jb
add
add
clc
data16
jmp
mov
xchg
mov
add
addr16
adc
dec
pop
lcall
data16
int
aam
and
add
movsb
clc
mov
add
mov
mov
add
add
cmp
add
clc
mulb
add
ror
stc
inc
clc
dec
xor
add
push
repnz
sub
mov
clc
push
and
add
ds
add
jp
xor
add
add
ror
sbb
lret
add
mov
add
mov
sub
int
clc
sub
clc
movsb
clc
in
sbb
add
mov
clc
cmp
add
add
clc
iret
shr
xbegin
roll
add
cwtl
jg
add
in
js
clc
jnp,pt
add
pop
jbe
add
dec
xchg
ds
cmp
jl
add
push
push
dec
mov
add
push
mov
divl
jne
mov
pop
scas
jp
xor
add
ret
clc
aas
in
adc
add
add
adc
add
in
mov
cmp
addr16
mov
push
add
int
xbegin
movsb
clc
inc
clc
jns
dec
in
jno
add
stos
gs
sar
pop
cmp
push
into
add
nop
lret
in
enter
movsb
clc
xor
add
and
std
mov
cmp
jns
xlat
movsb
clc
dec
cli
cmp
xchg
mov
mov
fs
or
imul
cmpsl
clc
fwait
add
add
add
fbld
fmuls
clc
imul
add
in
jl
clc
dec
jle
arpl
add
int
clc
je
test
nop
inc
clc
out
mulb
add
cltd
cmpsb
clc
fdivp
xchg
dec
sub
add
repz
clc
test
lods
cmpsl
clc
pushl
add
es
rol
clc
adc
gs
mov
pop
push
push
fisubrl
add
and
jne
add
bound
add
clc
fcmove
cmp
hlt
cmpsl
clc
loop
adc
add
clc
je,pt
inc
clc
cmp
paddsb
test
mov
add
or
add
lret
pop
and
inc
add
push
add
pop
clc
xor
clc
pop
adc
add
push
sar
cmp
add
and
add
dec
jb
add
dec
push
add
jp
sub
jns
pop
add
cmp
mov
add
and
mov
je
dec
jecxz
or
ljmp
mov
push
add
imul
mov
adc
add
push
inc
clc
jae
add
sbb
or
add
in
jo
add
and
add
add
clc
fildll
add
xor
add
add
mov
add
mov
mov
add
dec
pop
sti
popf
lods
es
cli
mov
mov
clc
push
xchg
mov
and
add
out
sbb
xor
add
add
fneni(8087
clc
in
or
clc
and
sbb
clc
jge
mov
clc
clc
cld
cmp
add
add
add
jecxz
daa
clc
jle
outsl
mov
cmc
add
add
lret
jmp
clc
mov
clc
ds
push
mov
ss
clc
push
push
add
sub
lods
xabort
clc
out
cmp
add
stc
cmp
add
outsl
inc
clc
mov
add
int
add
add
xchg
mov
add
lret
inc
add
lods
xor
add
clc
sbb
clc
mov
add
adc
into
pop
clc
incb
clc
cmpsb
clc
cmp
clc
mov
add
xor
add
fidivl
clc
pop
and
add
movsb
clc
dec
or
push
clc
cmp
mov
in
clc
xchg
xchg
sub
add
cmc
stc
dec
dec
sbb
clc
lock
clc
fwait
jg
inc
add
mov
cwtl
xor
add
push
inc
add
sti
inc
add
pop
xor
add
ret
add
into
mov
clc
inc
add
xor
add
xor
clc
out
test
add
add
fsubs
rcll
add
dec
jl
fsubs
add
jmp
add
cmp
add
je
push
fldcw
call
lods
scas
popl
add
jno
add
sahf
add
add
call
xor
add
xlat
and
add
push
sarl
or
add
push
cli
js
lret
jnp
sub
add
add
aaa
aad
arpl
add
cmp
loope
fstpl
push
add
stos
test
and
add
push
jle
add
add
add
stos
sar
jecxz
pop
mov
clc
lahf
dec
cmp
pusha
add
jecxz
jne
inc
clc
push
and
xchg
cmp
add
js
test
mov
push
clc
loope
mov
jecxz
xchg
cmpsb
clc
xor
shll
clc
dec
sahf
pop
pop
clc
mov
enter
jb
add
add
cmp
cmovs
in
je
lea
mov
lods
push
icebp
daa
clc
fs
pop
in
inc
add
hlt
sub
add
xchg
or
lahf
imul
add
add
and
add
add
out
into
or
push
bound
add
add
clc
mov
repnz
mov
ljmp
add
es
cltd
push
pop
lcall
mov
clc
sbb
add
imul
cmp
jnp
clc
lods
mov
std
push
add
add
push
add
cmp
cmp
clc
jg
clc
xchg
push
add
dec
add
hlt
hlt
push
add
or
fistps
shrb
fsubrs
out
inc
add
or
jecxz
js
das
ds
clc
loopne
daa
clc
pop
or
cltd
ficoml
add
ss
clc
fsubs
clc
fcom
mov
mov
clc
adc
add
mov
clc
in
adc
add
aas
test
add
add
clc
and
cmp
shrb
pop
xor
add
mov
std
in
mov
testl
add
pop
clc
aam
xchg
push
pop
movsb
clc
pushf
dec
insl
rcrb
aad
mov
jg
lret
sbb
add
adc
add
mov
push
clc
push
add
pop
push
pusha
add
inc
clc
cmpsl
clc
enter
ret
clc
push
sub
add
popa
add
fstps
jle
fnsave
add
out
xchg
inc
clc
jl
gs
decb
pop
clc
push
fcompl
out
cmp
sti
fisttpl
aad
in
and
add
or
fdivrs
ficompl
xchg
jp
shll
clc
push
jl
cmp
cmpsl
clc
push
add
cmpsb
clc
cs
clc
sbb
in
daa
clc
mov
clc
mov
bnd
clc
jle
sub
jno
add
add
add
jns
clc
and
mov
clc
gs
js
insb
in
jge
mov
clc
xor
xor
add
inc
add
xor
add
add
or
add
aaa
and
add
add
sar
sar
pop
push
clc
clc
data16
pushf
dec
mov
pop
shrb
pop
outsl
int3
add
add
std
es
push
jmp
inc
add
jne
add
inc
clc
push
fnsave
cmp
pop
or
xchg
mov
add
add
dec
daa
clc
sub
clc
or
sar
jno
add
add
out
rcll
fcmovu
pop
mov
fisttpll
cwtl
scas
push
cmp
xchg
aaa
sarb
dec
lcall
scas
dec
hlt
or
add
mov
loopne
pushl
add
add
inc
add
lret
add
ds
test
fwait
xchg
adc
add
sub
stc
jmp
xlat
pop
push
add
hlt
addps
aad
lret
lahf
push
enter
stos
inc
clc
repz
xor
add
test
jo
add
std
outsb
js
mov
add
loope
mov
inc
clc
into
jns
add
mov
add
xchg
xchg
mov
add
pusha
add
mov
add
xchg
testl
imul
add
cltd
je
std
ret
clc
jl
ljmp
clc
jp
add
push
clc
ficoms
clc
scas
push
lock
push
sbb
add
out
cmc
sti
adc
add
add
lret
dec
outsb
mov
clc
jp
add
jle
popf
cmp
or
xchg
xchg
and
add
add
sahf
in
enter
xor
sbb
cld
out
cld
xbegin
std
sar
clc
push
ret
clc
sub
add
mov
add
push
adc
sbb
clc
insb
sub
mov
gs
sub
jp
lahf
jle
add
pusha
add
repnz
clc
push
pop
leave
push
add
je
clc
and
add
add
int
clc
in
int
clc
jmp
addr16
aas
or
mov
cmp
inc
add
xchg
push
add
push
add
mov
scas
push
mov
add
insl
cmp
cmc
mov
cmpsb
clc
xchg
mov
scas
fimull
mov
clc
pushf
mov
addr16
pusha
add
add
add
loop
rol
clc
jbe
adc
add
xor
out
xchg
movsl
clc
cmp
clc
rcll
add
aam
jb
add
mov
add
clc
daa
clc
das
mov
sub
dec
ret
clc
insl
iret
push
adc
add
hlt
cmc
jne
jp
sbb
cmp
clc
cmpsb
clc
ljmp
mov
add
sbb
mov
xor
add
leave
jecxz
das
loopne
daa
clc
das
and
add
clc
scas
aas
sbb
aam
mov
add
jb
add
pop
jae
add
adc
add
add
test
xor
add
movsb
clc
cld
add
in
movsb
clc
sub
add
fsubl
int3
js
or
je
add
arpl
add
and
add
test
jecxz
call
fmulp
jo
add
or
add
add
add
xchg
or
jmp
imul
add
cmp
ret
add
add
add
out
fsubrs
lods
lods
scas
xchg
inc
clc
mov
clc
sub
mov
add
jo
add
clc
cmp
clc
mov
clc
inc
clc
jae
add
adc
add
add
xor
add
add
clc
pop
cli
push
je
inc
clc
in
push
add
jmp
dec
sar
clc
out
insl
insb
rcl
mov
push
faddp
clc
mov
clc
daa
clc
into
fimuls
add
or
add
or
sar
pop
movsl
clc
pop
clc
mov
sub
clc
imul
add
scas
imul
lahf
push
add
lret
clc
sahf
xchg
mov
ljmp
push
clc
jnp
push
clc
ret
pop
fstpt
and
add
add
es
clc
pusha
add
or
cs
jnp
lret
adc
add
add
mov
add
into
shlb
add
sub
or
or
add
clc
cmp
inc
clc
sbb
ja
dec
xchg
ret
add
add
imul
add
addr16
clc
out
cmpsl
clc
pop
hlt
cwtl
idivl
int
iret
push
mov
imul
xchg
fs
sahf
jg
cmc
pop
cmp
add
dec
inc
add
cmpsb
clc
sub
gs
xchg
inc
clc
dec
lret
push
lret
sub
inc
add
mov
insb
cmpsl
clc
lock
add
fwait
jge
mov
dec
sti
out
push
mov
add
clc
push
int
mov
mov
add
mov
es
xchg
mov
push
insb
cmc
mov
clc
mov
and
inc
add
sub
mov
add
push
add
aam
add
testl
clc
je
lods
pop
icebp
dec
jp
bound
add
add
test
or
add
in
cmpsb
clc
ljmp
add
cmp
mov
sbb
add
add
aam
add
dec
int3
rcl
mov
add
mov
clc
or
pop
clc
jmp
inc
add
cltd
notl
loopne
add
mov
aad
push
dec
and
lahf
mov
xadd
lret
or
fisubs
add
sub
add
sub
sbb
add
cmp
ja
cmpsl
clc
or
clc
push
add
repz
add
shrb
clc
sub
outsl
mov
pop
jns
lret
ljmp
movsb
clc
sbb
add
cld
inc
clc
mov
test
mov
mov
clc
lret
add
dec
nop
pop
mov
fucom
clc
lods
repz
cmp
mov
jmp
inc
add
hlt
sahf
ds
sbb
test
clc
pusha
add
or
mov
repz
pop
cmp
add
sbb
xor
add
clc
test
movsl
clc
icebp
and
adc
add
ret
clc
fstpt
scas
popf
sub
stc
adc
inc
clc
sahf
bound
add
mov
add
sub
clc
sbb
jmp
adc
add
clc
push
add
cmp
clc
arpl
add
add
jl
pop
clc
int3
cmp
add
push
bound
add
add
push
add
es
lea
pusha
add
icebp
adc
clc
push
int
xor
add
pushf
jnp
mov
into
lock
clc
scas
out
jo
add
add
cld
fstps
out
xlat
mov
clc
push
add
sahf
xbegin
xchg
inc
add
test
jecxz
xchg
test
hlt
int
clc
mov
clc
push
add
insl
xchg
xbegin
sub
clc
fiadds
push
sub
adc
add
aad
daa
clc
push
test
mov
add
lret
mulb
push
add
jo
add
enter
inc
clc
dec
push
pop
xor
cmp
add
pop
mov
lret
pop
scas
pop
xchg
mov
pushf
dec
push
add
fnstcw
mov
ljmp
clc
inc
clc
cmp
jge
clc
mov
add
rorl
lock
add
cmp
dec
sub
add
and
cmp
pop
sub
jg
jo
add
repz
clc
dec
sahf
fprem1
out
and
add
clc
inc
clc
ljmp
clc
jmp
inc
add
fldt
dec
stc
inc
add
adc
arpl
add
cmp
lcall
sbb
and
add
leave
cmp
push
cmp
add
pop
clc
outsl
mov
mov
add
lret
mov
inc
clc
cmc
mov
add
mov
clc
in
or
mov
add
sub
movsl
clc
jl
js
nop
sbb
push
pop
mov
cs
clc
jo
add
in
mov
add
add
add
add
cltd
sub
imul
test
adc
mov
clc
push
mov
gs
addr16
mov
cmpsb
clc
rorb
fldenv
add
fwait
out
out
mov
lcall
in
dec
leave
aam
mov
add
clc
adc
add
int3
add
add
add
add
fcmovb
clc
enter
clc
push
add
clc
outsb
pop
test
sub
add
mov
psraw
cmp
cmc
sahf
pop
fmull
test
add
pop
ja
out
fnstenv
add
movsb
clc
pop
add
clc
lret
cmc
xchg
or
jmp
cli
ficoml
bound
add
add
stos
in
or
clc
js
clc
or
scas
inc
add
sbb
clc
fistpll
add
add
dec
and
add
add
mov
clc
or
clc
popf
inc
clc
outsb
cmp
aaa
sahf
add
add
clc
inc
clc
jne
xchg
mull
add
add
sahf
outsl
mov
mov
fstpl
clc
mov
add
jl
clc
push
clc
jnp
add
ret
clc
mov
in
out
lods
xor
add
jmp
mov
add
repnz
js
clc
jg
add
xabort
add
pusha
add
jnp
jg
dec
repz
add
add
or
scas
lea
add
aam
cltd
cmp
clc
fdivl
add
add
ret
clc
rorb
jmp
mov
add
outsl
mov
rcll
add
add
push
daa
clc
mov
push
aas
vmaxps
clc
mov
cmp
add
add
lods
mov
jg
lcall
add
nopl
add
add
mov
adc
adc
test
lods
mov
clc
add
loope
imul
pushf
push
clc
and
lcall
add
fstl
pop
clc
inc
clc
inc
clc
fwait
pop
iret
or
cmp
call
clc
dec
add
jg
add
negb
add
movsb
clc
pop
and
add
aam
sbb
add
pusha
add
xor
add
add
push
add
pop
inc
clc
xabort
clc
cli
and
add
fiaddl
and
add
add
inc
add
aad
mov
push
add
jns
imul
daa
clc
add
add
jp
sbb
sarl
fnstcw
clc
stc
nop
int
xabort
mov
mov
clc
dec
jne
add
mov
sbb
add
rcrb
fwait
stc
add
test
enter
add
pop
fstpt
clc
repnz
enter
insb
jle
fnstenv
clc
pop
imul
icebp
adc
add
inc
add
sub
cmp
rolb
add
add
cli
in
push
mov
clc
ja
add
sub
add
add
jae
add
js
clc
imul
out
mov
add
stos
mov
aas
dec
sbb
push
push
add
add
adc
repnz
sti
cmp
or
add
scas
sub
sbb
clc
xchg
ret
rclb
xchg
call
mov
add
mov
leave
jle
clc
ss
xchg
pop
or
cmp
clc
rolb
add
add
lods
push
add
add
jmp
sbb
enter
add
add
in
mov
sbb
xor
add
lret
add
fisttpl
gs
cmp
popa
add
pop
into
xchg
dec
insb
mov
cmp
pop
pop
out
popa
add
cmp
jmp
clc
data16
push
xchg
std
or
add
pop
sub
inc
clc
idivb
cmpsl
clc
xchg
cmp
cmp
arpl
add
cmp
add
push
add
out
out
jl
clc
mov
clc
push
out
push
add
add
loopne
sub
add
push
add
mov
clc
add
add
clc
push
add
fsubs
add
clc
cmp
cli
mov
mov
repnz
add
mov
pop
xchg
nop
or
add
ljmp
add
add
mov
clc
test
clc
js
mov
clc
lods
repnz
repnz
clc
mov
jne
adc
add
jge
clc
je
in
sar
clc
data16
mov
and
add
add
pop
inc
add
sti
inc
add
xchg
mov
js
mov
clc
mov
mov
xor
add
mov
add
add
clc
mov
or
add
add
add
push
add
and
ds
pop
rorb
jp
add
repz
add
add
mov
clc
insl
mov
sbb
repz
xchg
sbb
add
lods
xchg
pop
outsl
lock
dec
or
clc
mov
push
mov
add
ret
pop
movd
cmp
pusha
add
mov
iret
iret
aaa
and
pop
xor
clc
xchg
stos
dec
outsb
in
mov
mov
clc
rorl
jbe
arpl
add
clc
add
add
mull
add
in
jg
outsb
sbb
clc
cmp
mov
add
fs
add
add
lret
out
xchg
xchg
inc
clc
insb
gs
cmp
add
pusha
add
and
add
add
jmp
fsubs
cld
cmp
sahf
add
add
clc
xbegin
jg
ret
clc
fimuls
in
inc
clc
gs
inc
clc
fisubl
add
int
clc
jae
add
hlt
insl
and
add
pop
ljmp
femms
mov
repnz
clc
push
hlt
and
add
cmp
jl
fistps
popf
outsl
sub
inc
add
mov
dec
out
sbb
std
pop
xchg
cmp
add
add
stc
mov
inc
clc
cmp
dec
loope
jge
add
xchg
xchg
push
add
jge
add
add
or
add
aaa
sbb
adc
add
stc
ds
pop
lret
clc
mov
add
fcoml
add
sbb
add
daa
clc
inc
add
sar
clc
cmp
pushf
or
out
mov
clc
out
jp
addr16
push
lods
xor
add
fistl
and
add
clc
jecxz
call
push
mov
clc
cmpsb
clc
lods
and
add
clc
pop
clc
scas
pushf
aad
hlt
and
add
push
sub
js
or
sbb
mov
jg
clc
mov
ret
ds
jg
clc
mulb
add
clc
lods
nop
push
add
or
pop
clc
or
insb
not
or
clc
js
inc
add
loopne
faddl
add
pop
cmp
xor
add
push
mov
or
clc
pop
push
add
mul
clc
data16
lods
in
inc
add
pop
mov
clc
in
sar
clc
cmpsb
clc
pop
ja
and
add
and
add
clc
testb
test
in
fscale
aaa
dec
jecxz
cmp
add
lret
or
clc
xchg
loopne
jne
add
mov
clc
sar
out
xchg
and
add
je
mov
clc
jns
mov
data16
stos
dec
and
add
add
inc
clc
sar
pop
clc
scas
stos
push
add
lods
xchg
popf
xor
add
clc
inc
clc
sub
clc
sbb
arpl
add
icebp
xbegin
ss
clc
flds
or
dec
clc
or
mov
clc
mov
fcomps
add
mov
add
call
clc
mov
and
add
jmp
insb
popa
add
mull
add
vmovlps
add
add
call
add
js
clc
xor
add
mov
scas
push
add
and
add
mov
clc
cmp
add
cmp
nop
cmc
and
add
clc
mov
pop
clc
das
movsl
clc
cmp
clc
cmpsl
clc
xabort
cmp
clc
jns
clc
push
add
data16
ret
clc
and
jb
add
cmp
out
je
push
add
push
add
cmp
pop
pushf
insl
lock
cmp
jo
add
clc
dec
int3
lods
insl
divb
add
add
add
inc
clc
inc
add
mov
cmp
clc
jae
add
clc
sub
je
clc
gs
fistl
sub
xchg
sbb
call
clc
je
sar
add
idivb
jge
bound
add
psrlq
adc
add
inc
add
ret
test
push
push
xchg
lahf
mov
dec
cmp
mov
add
mov
add
add
add
add
divl
clc
in
push
lcall
pop
mov
clc
push
add
push
clc
mov
jnp
add
shl
clc
int3
inc
clc
fucomp
cmp
add
aaa
fcoml
add
in
arpl
add
and
or
cmp
xor
add
add
mov
mov
dec
test
test
pop
pop
jns
clc
cmp
in
jbe
movsb
clc
lock
jbe
inc
clc
enter
add
clc
shll
clc
out
cli
icebp
call
rorb
add
and
add
shlb
add
or
add
add
dec
jno
add
std
inc
add
add
add
clc
aam
clc
repnz
js
push
clc
jp
xchg
mov
mov
clc
ljmp
xor
add
ret
enter
and
add
pop
mov
add
test
clc
clc
sbb
xchg
push
add
lcall
clc
ja
in
cmp
mov
add
dec
repnz
clc
xor
sbb
repnz
add
add
hlt
xchg
sar
fs
inc
add
pop
lock
cli
in
dec
sub
add
test
clc
mov
push
add
pop
dec
test
cmp
imul
mov
clc
bound
add
add
clc
ja
outsl
adc
add
adc
add
add
jnp
movsb
clc
fst
lock
add
sbb
add
or
stos
pop
cmp
and
add
pushf
sbb
add
add
sbb
cmp
cmp
add
xor
add
clc
pusha
add
js
fcmovbe
jg
enter
sub
xbegin
clc
test
xchg
imul
add
fwait
cmp
add
bound
add
xlat
in
lahf
or
js
flds
out
sub
cmp
dec
and
mov
sar
sbb
int3
insb
xchg
mov
addr16
cmpsl
clc
push
xor
add
add
fwait
push
jbe
daa
clc
outsl
sbb
mov
ljmp
add
mov
movsl
clc
pop
out
pop
clc
pop
clc
mov
add
adc
add
mov
clc
insl
test
jo
add
add
sub
add
mov
divps
add
jmp
jbe
add
dec
mull
add
add
xchg
in
pushf
cmpsl
clc
inc
clc
pop
clc
and
add
cmpsb
clc
cld
pop
clc
push
add
aaa
loope
arpl
add
push
xchg
mov
test
ret
dec
sar
add
mov
mov
sub
dec
cmp
cmp
sar
adc
clc
ss
clc
outsb
pop
add
add
jl
add
sti
mov
add
out
leave
mov
enter
cmp
scas
or
aad
add
bnd
mov
jecxz
lret
push
nop
in
dec
cmpsb
clc
repz
mov
imul
add
repz
add
push
clc
push
add
dec
cmpsb
clc
add
add
jg
clc
sbb
sub
clc
data16
mov
cs
ljmp
xor
add
add
xchg
pop
clc
lea
add
add
add
add
cmp
clc
xor
add
outsb
push
cmp
hlt
xchg
pop
lea
add
clc
jmp
in
mov
ret
clc
xchg
xor
clc
push
add
inc
clc
pop
xchg
rcll
inc
add
scas
fdivrl
rorb
clc
leave
jno
add
add
movsb
clc
add
add
clc
outsl
stos
pop
cmp
add
xor
js
mov
pop
jbe
frstor
jecxz
cwtl
xchg
loopne
mov
cs
out
push
xor
add
clc
sub
shlb
add
add
add
out
hlt
cmpsb
clc
push
inc
add
mov
add
mov
fwait
xchg
cmp
add
push
add
adc
add
adc
add
sub
mov
clc
sbb
add
add
insl
xor
add
clc
test
imul
popa
add
dec
inc
add
add
add
xor
add
and
out
sbb
popf
mov
sbb
outsb
mov
add
push
mov
clc
xchg
push
clc
jge
repz
add
pop
outsl
lea
add
or
cltd
mov
jmp
jbe
mov
clc
int
adc
add
popa
add
imul
xor
mov
jmp
clc
inc
add
xor
add
add
cmp
clc
je
add
jo
add
add
stos
adc
add
and
popa
add
dec
pop
scas
leave
test
outsb
pop
shll
push
cmpsb
clc
cmpsl
clc
cwtl
insb
stc
push
cmp
sbb
sbb
clc
jb
add
pushf
aas
faddp
clc
clc
pop
aaa
mov
out
aam
add
out
divb
aaa
add
add
pop
sbb
add
lock
push
add
push
pop
push
add
push
add
es
jae
add
out
cmp
aas
cmp
mov
clc
scas
iret
sub
out
mov
add
add
gs
mov
lret
clc
jl
sar
ja
add
mov
outsl
outsb
inc
add
dec
mov
xchg
sub
test
mov
mov
push
mov
sbb
ds
cld
xchg
sbb
xchg
sar
sar
mov
add
inc
add
sar
js
gs
repz
mov
nop
jnp
adc
add
clc
or
xor
add
sbb
into
xabort
mov
mov
mov
inc
clc
inc
clc
insb
arpl
add
das
mov
out
adc
add
mov
shr
push
xchg
call
inc
clc
mov
xbegin
cld
mov
clc
mov
or
add
and
daa
clc
inc
add
cmp
add
add
sbb
mov
xchg
push
gs
clc
adc
add
add
mov
xlat
mov
clc
outsl
dec
test
fstps
inc
add
pushf
cmp
clc
sahf
std
dec
ss
inc
add
pushf
dec
movsb
clc
xchg
pusha
add
addps
jns
clc
cltd
push
add
sub
mov
mov
clc
push
xlat
xchg
rcr
dec
fdivr
out
xchg
push
add
jge
xchg
pop
ja
mov
mov
clc
push
in
inc
add
sub
pop
xbegin
aad
add
lods
sub
add
mov
enter
stos
insl
xor
add
clc
cmp
lret
bound
add
inc
clc
hlt
in
sbb
or
iret
gs
jb
add
clc
pop
clc
pop
mov
add
or
xchg
cld
clc
sub
add
fucom
clc
sub
add
sub
fs
sbb
add
loopne
lods
call
inc
clc
ret
clc
insl
cmpsl
clc
test
clc
fisubrs
add
push
clc
test
jmp
ficoms
sub
add
add
add
mov
inc
add
in
test
pop
lret
pop
clc
sar
clc
mov
iret
xchg
xor
sub
dec
jne
jp
clc
and
iret
mov
or
xabort
aaa
and
add
xchg
rorl
pop
sub
add
pop
push
pop
cmp
mov
add
jns
dec
sar
out
stos
repz
dec
push
into
aam
add
add
sbb
pop
dec
in
out
and
add
ss
mov
inc
clc
mov
imul
lcall
clc
cmp
add
xchg
out
imul
clc
xabort
lahf
addr16
mov
mov
mov
clc
mov
add
es
xchg
lods
leave
xor
add
add
bound
add
push
add
mov
test
cs
add
pop
lret
add
mov
or
dec
and
add
cltd
test
stos
or
cmpsb
clc
cmp
int
sahf
xor
add
fsubl
xor
add
aam
xor
add
add
jp
clc
icebp
push
push
sar
push
add
fidivs
add
cmp
repz
stos
lcall
add
dec
mov
sbb
cmpsl
clc
aam
clc
leave
jmp
add
je
clc
mov
add
add
add
cmc
inc
add
cmp
sub
clc
dec
daa
clc
jne
sub
data16
xor
add
add
inc
clc
sub
and
add
xabort
xor
add
stos
xlat
fidivrl
lods
iret
push
add
bound
add
sti
ret
clc
popa
add
inc
add
fidivl
add
mov
clc
je
mov
jns
clc
xor
add
and
add
clc
das
push
adc
add
add
test
aad
and
pop
cmpsl
clc
call
fcomi
or
dec
outsl
mov
mov
adc
add
add
add
add
jns
stos
pop
cmp
inc
add
leave
jo
add
clc
int3
test
xchg
xchg
mov
movsl
clc
bnd
mov
xchg
imulb
add
push
int3
push
jae
add
cmp
add
add
cmp
add
loop
adc
add
cld
jbe
test
or
inc
add
push
clc
or
xrelease
clc
jmp
adc
add
add
add
cmp
inc
clc
mov
sub
lods
cmp
add
xlat
imul
clc
ret
clc
stc
mov
inc
add
pop
ja
sub
popa
add
das
fs
jbe
cmp
jne
pushf
mov
movsl
clc
xor
add
clc
cwtl
inc
clc
add
out
int3
aas
inc
clc
pop
ret
clc
loope
add
jno
add
leave
fs
add
add
jg
mov
daa
clc
dec
push
xchg
sar
sahf
jge
clc
loop
movsl
clc
out
mov
bound
add
cmc
lods
lea
add
pop
ljmp
add
lods
nop
xchg
xor
mov
jno
add
add
jp
jecxz
sar
clc
sbb
pop
xchg
pop
out
enter
jns
add
mov
clc
movsl
clc
and
add
aad
clc
iret
fcomp
test
sbb
cltd
cmp
add
gs
jb
add
clc
pop
aam
and
add
clc
push
int
add
loop
popa
add
jecxz
inc
clc
bound
add
jmp
adc
clc
sbb
add
int3
mov
clc
inc
add
scas
mov
mov
push
add
push
jo
add
add
adc
add
test
clc
jo
add
inc
add
repnz
icebp
aas
sahf
lret
jno
add
add
outsl
enter
xor
clc
leave
addr16
das
cmp
push
leave
arpl
add
cmp
imull
add
pop
clc
or
std
cmp
js
or
clc
fbstp
add
xchg
mov
rorb
add
or
clc
push
add
fidivrl
xchg
loopne
pop
clc
sub
fildl
or
popa
add
std
xor
add
lcall
or
and
add
ffree
clc
out
popf
test
repz
mov
cld
inc
add
mov
cmp
xchg
mov
loop
xlat
icebp
scas
push
cmpsl
clc
inc
add
mov
clc
xchg
cmp
adc
and
add
out
jb
add
add
push
sub
add
mov
or
add
pop
mov
add
repz
clc
push
lret
add
adc
pop
movsb
clc
mov
cmp
clc
lcall
push
in
jmp
xchg
jns
adc
mov
test
rcrb
dec
push
sbb
push
clc
sub
lea
add
jmp
cmc
mov
add
fwait
add
add
jge
clc
hlt
add
insl
aam
jmp
jle
cli
add
in
mov
add
and
add
add
clc
add
add
clc
cmp
or
clc
dec
fwait
xchg
insb
adc
add
add
add
test
xchg
aaa
test
add
add
add
add
cmp
cs
add
add
repnz
int
enter
add
xchg
jae
add
and
add
add
clc
jb
add
mov
cmp
ret
clc
out
xor
add
jg
je
data16
fs
adc
add
insl
and
add
inc
add
xor
jno
add
adc
add
cmp
scas
mov
jle
xlat
mov
sbb
pusha
add
and
xor
add
add
rclb
clc
fwait
push
add
insl
mov
jge
xlat
enter
dec
outsb
or
clc
test
repz
add
clc
sbb
pop
cmpsb
clc
popa
add
lock
lcall
cwtl
cmp
sbb
clc
inc
clc
mov
in
push
add
das
outsb
push
add
jae
add
xlat
ret
clc
or
test
dec
adc
add
mov
scas
adc
add
clc
mov
mov
pop
clc
outsl
add
dec
pop
lcall
outsl
xor
add
add
xor
js
jp
clc
out
inc
add
cmpsb
clc
inc
clc
nop
or
fidivrl
int
out
je
sbb
int
pop
clc
fs
push
in
xchg
loop
xchg
clc
out
pop
jmp
sbb
cmp
jne
fs
dec
sar
add
in
cmpsb
clc
cwtl
leave
into
scas
push
sub
add
clc
mov
push
clc
cmp
stos
popf
add
xchg
nop
jne
clc
push
adc
add
add
dec
cltd
inc
add
jle
clc
xlat
scas
nop
fsubrp
inc
add
and
add
fisubl
add
push
scas
push
xlat
xchg
lock
xbegin
rorl
inc
add
pop
mov
push
jno
add
jmp
mov
clc
mov
dec
loope
mov
xchg
call
pop
inc
clc
dec
xchg
sub
add
xchg
pushf
dec
aad
add
inc
clc
repnz
clc
enter
aaa
sbb
clc
pop
leave
xchg
jo
add
add
add
adc
add
clc
fucomp
adc
add
and
clc
int
jo
add
pop
jae
add
add
dec
ss
add
push
or
cmp
stc
mov
or
add
push
dec
push
es
sti
data16
popa
add
mov
adc
clc
jg
fcoms
das
into
add
es
add
out
leave
inc
clc
and
add
jg
inc
add
push
add
or
pop
aam
add
mov
leave
or
add
inc
clc
dec
mov
add
movsl
clc
pushf
dec
fists
add
jl
adc
add
add
xchg
out
imul
inc
clc
sub
inc
add
fnsave
add
adc
add
xor
add
test
scas
aad
fld
clc
inc
clc
hlt
sub
incl
and
add
xor
add
add
or
out
xchg
pushf
push
mov
psubd
clc
mov
dec
in
or
ret
clc
inc
clc
enter
movsb
clc
jl
add
lock
aam
clc
jnp
add
ljmp
or
jg
mov
mov
sbb
push
scas
nop
sub
clc
mov
std
add
add
rcl
sahf
in
ja
repz
sub
clc
and
add
add
mov
outsl
sub
mov
clc
jmp
enter
mov
clc
pop
sub
add
add
add
pop
fimuls
daa
clc
xor
add
ja
adc
lods
and
clc
sbb
adc
add
add
cltd
mov
xchg
cmp
add
addr16
mov
decb
inc
clc
jns
add
mov
add
fistps
test
pop
lret
add
and
add
mov
clc
xor
or
add
xchg
shl
cmp
enter
clc
push
inc
add
and
add
clc
push
add
xor
cmpsl
clc
mov
not
iret
pop
mov
xchg
and
mov
push
push
inc
add
sti
mov
fwait
test
add
cltd
fdivs
add
adc
add
popa
add
sar
pop
clc
add
add
add
fdivrl
jnp
lods
lret
sub
push
movsb
clc
fwait
test
clc
xchg
lret
xchg
sub
xor
add
cmp
pop
int
test
and
add
or
xor
add
clc
insl
or
xor
add
clc
jle
fisubl
add
ja
clc
and
add
clc
cmpsb
clc
out
sarl
test
adc
add
clc
dec
mov
add
and
clc
jae
add
jo
add
sbb
add
cwtl
icebp
repnz
iret
sub
dec
notl
clc
das
xor
clc
mov
clc
jmp
clc
outsl
mov
out
loop
cmp
sbb
sub
clc
fldenv
stos
push
push
in
pop
xchg
xbegin
add
clc
das
inc
add
test
adc
add
clc
mov
cmp
aad
leave
inc
add
ret
clc
push
into
inc
add
push
clc
mov
cli
std
xchg
ja
fcmovnu
mov
or
data16
push
imul
push
out
xor
mov
sub
or
mov
mov
adc
add
or
bound
add
add
push
repnz
add
dec
jbe
add
add
aam
lret
mov
jo
add
jl
sub
dec
imul
or
lcall
cmp
dec
mov
mov
negl
inc
add
insl
xor
add
clc
fwait
int
sahf
or
sar
popa
add
setb
out
pop
adc
add
add
test
mov
mov
clc
adc
add
fabs
clc
outsl
jge
push
add
jg
add
mov
clc
cwtl
cmp
push
into
test
push
add
dec
fsub
clc
incl
add
scas
cmp
test
clc
dec
mov
add
fisubl
fisubs
clc
inc
add
pop
in
sbb
xor
add
rclb
cmp
clc
and
add
sbb
jne
clc
add
add
ss
clc
sbb
add
cld
xor
add
add
xchg
clc
cmp
clc
jbe
push
add
inc
clc
out
add
add
fisubrs
mov
clc
cmp
jbe
inc
add
out
imul
insb
push
clc
mov
rclb
loopne
dec
testb
add
mov
int3
lods
dec
shl
clc
sar
mov
loopne
inc
clc
jp
clc
sti
mov
jns
jmp
out
scas
jmp
repnz
and
mov
clc
and
add
add
add
or
icebp
sub
mov
clc
fcoms
inc
clc
add
push
push
add
inc
add
and
add
clc
dec
jo
add
add
dec
jecxz
cmp
mov
add
cmp
rcrl
jecxz
nop
add
add
clc
negb
add
jnp
pop
lahf
xchg
popf
mov
xor
add
addr16
data16
mov
push
or
dec
push
sti
shl
clc
clc
lret
test
scas
aas
jo
add
test
cmp
mov
clc
fucompp
popf
loop
fdivrs
mov
clc
aaa
mov
clc
sbb
mov
adc
add
dec
cltd
adc
add
addr16
testb
pop
mov
add
xor
add
popf
cmp
dec
fiadds
add
add
pop
cmp
xabort
pop
pop
cmp
clc
pushf
test
and
add
add
add
add
jge
or
adc
add
push
sub
jg
jno
add
inc
clc
xabort
dec
mov
add
add
add
std
pop
clc
repz
add
clc
cmp
jb
add
or
mov
xchg
or
clc
jge
add
sub
clc
hlt
sbb
push
add
inc
add
je
add
clc
mov
insl
je
scas
cmp
push
cmpsl
clc
gs
out
adc
add
or
clc
aas
and
add
cmp
imul
imul
adc
add
ja
sub
mov
add
sar
xor
jns
push
sbb
add
add
add
sub
dec
mov
cmp
jp
dec
or
clc
pop
pop
test
jmp
in
jo
add
inc
clc
lret
test
ds
mov
clc
and
add
clc
insl
push
add
sarb
sub
pop
xchg
fisubl
leave
sub
xor
std
fs
call
lea
jmp
or
clc
inc
clc
sbb
incb
insb
jns
fdiv
int3
inc
clc
adc
clc
in
mov
add
jmp
mov
clc
jns
or
ds
lock
test
add
push
add
fs
sbb
arpl
add
cli
mov
mov
add
clc
dec
cmpsl
clc
sarl
ds
clc
fisubl
xabort
clc
add
add
add
cmp
clc
inc
clc
std
fstpl
mov
adc
add
add
sbb
xchg
lahf
xlat
jo
add
int
clc
sar
jg
add
jo
add
clc
or
add
clc
pushf
push
clc
ret
clc
dec
daa
clc
xchg
fxtract
cmp
cwtl
pop
out
and
add
cmp
clc
pop
clc
and
ljmp
mov
clc
adc
add
xchg
xor
add
lret
cs
shll
add
aas
push
add
jp
clc
lods
sub
pop
or
clc
das
pop
clc
cmpsb
clc
int3
push
sar
add
aaa
cmpsb
clc
xor
add
ficoms
add
mov
xchg
sub
add
cmovns
mov
add
mov
sbb
clc
ss
jne
es
jg
xabort
clc
dec
fadd
clc
clc
test
or
inc
clc
dec
jo
add
repz
stc
mov
clc
xor
add
add
jecxz
inc
add
dec
in
into
inc
add
dec
mov
imul
cmp
imul
loopne
jge
out
aam
inc
add
outsb
repnz
add
add
ret
clc
sub
add
add
cmp
mov
and
add
ja
clc
mov
clc
xchg
jmp
and
add
jnp
add
add
add
add
sub
clc
call
clc
movsl
clc
adc
add
add
fsts
mov
add
pushf
push
clc
xlat
and
add
clc
dec
push
add
mov
clc
mov
or
fwait
es
inc
clc
push
clc
push
and
add
add
add
xor
add
jle
clc
xchg
xchg
fmul
mov
push
clc
jmp
call
cmpsb
clc
sarb
cld
push
jae
add
add
xchg
pop
filds
add
xchg
scas
fimull
and
add
mov
fucom
clc
add
add
cmc
fs
fisttps
fisttps
clc
sub
mov
clc
fisubrs
sbb
clc
mov
inc
clc
jp
jbe
ret
clc
add
mov
push
fmull
ss
xchg
ja
clc
aad
jbe
sbb
fwait
cmp
add
push
pop
xbegin
add
test
xor
clc
fadds
mov
and
jno
add
clc
out
push
add
cmp
cmpsl
clc
xchg
cmp
clc
test
clc
push
dec
fisubrs
or
pusha
add
sahf
cmp
fidivs
add
aas
aas
gs
inc
clc
push
sub
add
aam
jo
add
test
test
clc
std
into
lret
add
lahf
repnz
bound
add
add
or
add
ljmp
mov
jne
inc
add
pop
push
popa
add
in
mov
pop
add
inc
clc
cmp
cmpsb
clc
repz
loope
push
or
clc
adc
add
jl
addr16
mov
jae
add
clc
mov
cmp
scas
push
add
sarl
add
jmp
lea
cmpsb
clc
insl
testl
or
clc
mov
add
nop
xchg
xchg
mov
clc
lret
cmp
inc
add
outsl
xchg
xor
add
add
clc
mul
clc
xor
add
mov
jmp
clc
push
add
add
adc
add
or
fucom
clc
lret
add
add
sahf
nop
nop
push
add
jnp
xchg
cwtl
fisttpl
rclb
add
aaa
push
in
xchg
push
and
add
xchg
add
add
clc
inc
clc
jno
add
in
cmp
clc
push
add
add
or
jecxz
gs
ljmp
test
mov
pop
or
adc
add
int
mov
clc
ss
mov
sar
ja
test
dec
cli
imul
xabort
xchg
stos
std
pop
sbb
das
xchg
movsb
clc
das
jne
inc
clc
inc
add
adc
add
mov
jno
add
bound
add
clc
cmp
clc
clc
clc
pop
pop
clc
or
dec
add
add
add
fildl
sub
add
inc
clc
fs
xor
add
add
dec
pop
mov
and
add
clc
mov
jbe
shll
add
cli
pop
sti
mov
clc
sub
add
hlt
ljmp
fstl
jae
add
repz
add
enter
add
outsb
push
adc
add
in
mov
clc
mov
mov
sbb
repz
lahf
inc
add
enter
outsl
aam
clc
call
lret
clc
icebp
cmp
imul
cmp
addr16
sbb
arpl
add
add
add
popf
aas
dec
movsb
clc
pop
hlt
xchg
xchg
jb
add
nop
fsubrl
imull
in
pop
sbb
add
pop
add
add
jne
xor
add
dec
lret
clc
pop
sar
jmp
mov
mov
add
add
clc
ja
add
insb
aad
mov
jne
mov
push
int
mov
clc
dec
sub
add
sbb
add
nop
inc
clc
mov
and
add
out
adc
add
imul
loope
repz
xchg
xlat
stos
imull
sahf
cmp
pop
xchg
mov
sbb
jmp
ds
push
add
mov
mov
aam
clc
adc
add
add
jns
cmp
mov
dec
lock
dec
jecxz
pop
in
or
mov
xbegin
mov
add
enter
fsubl
dec
shrl
and
and
add
xchg
and
sub
add
pop
ret
clc
xor
repnz
rclb
clc
icebp
jecxz
adc
add
add
jg
vminps
in
dec
add
add
mov
clc
js
clc
mov
sbb
xchg
gs
lods
cmp
add
add
in
or
add
lock
add
add
cmpsb
clc
ret
sti
fidivl
add
bound
add
xor
clc
sbb
icebp
inc
clc
loopne
mov
add
add
add
pushf
enter
and
add
push
cmp
clc
push
mov
adc
add
clc
leave
fdivrs
add
lods
ret
mov
cmp
add
push
clc
cmp
add
out
mov
pop
lret
cmp
add
add
mov
clc
xchg
inc
clc
xchg
in
or
clc
mov
repz
jle
cmp
add
cwtl
fisubl
xchg
push
mov
add
add
clc
enter
adc
add
add
add
fincstp
fadds
mov
add
out
fsubl
mov
icebp
adc
add
lret
sbb
fcoml
repnz
push
add
outsb
sti
loope
inc
add
mov
clc
lods
xor
add
adc
add
inc
clc
repnz
add
add
cmp
add
out
inc
add
sbb
clc
mov
add
shll
add
aad
ret
in
arpl
add
jge
leave
roll
clc
cmpsl
clc
insb
sub
scas
hlt
dec
mov
push
add
add
icebp
cwtl
push
add
jle
add
mov
push
add
out
xchg
adc
add
add
xchg
cld
mov
loopne
mov
add
clc
data16
es
scas
jno
add
add
xor
cmpsb
clc
jmp
jg
adc
clc
and
add
int
jmp
mov
cs
mov
add
clc
out
nop
mov
in
dec
push
clc
mov
sahf
fbld
add
xor
add
clc
test
lock
pop
mov
clc
int3
popf
mov
clc
out
push
fadd
clc
test
fdiv
xchg
cmp
inc
clc
mov
or
test
add
push
clc
add
add
add
pop
dec
sbb
clc
sar
ja
add
add
lret
mov
divl
add
adc
add
clc
xabort
clc
inc
clc
inc
clc
in
lea
add
jmp
cmp
add
mov
or
pop
das
inc
add
repnz
xchg
xbegin
clc
mov
adc
out
imulb
add
pop
sahf
cmp
clc
test
sub
clc
sub
pop
xchg
ret
into
adc
sbb
clc
sbb
hlt
and
add
divl
cmp
cmpsb
clc
sahf
dec
xor
add
push
int
clc
loop
and
add
add
inc
clc
xor
add
clc
ffree
clc
pop
push
and
cmp
clc
loopne
inc
clc
lods
sbb
bound
add
add
add
pop
adc
add
add
or
in
jp
sar
add
jbe
jno
add
clc
pop
or
sub
add
add
stos
sub
add
inc
clc
jb
add
add
lret
jo
add
clc
insl
insl
inc
add
test
dec
mov
pop
loope
fiaddl
mov
cmp
mov
fwait
movsl
clc
add
add
lock
add
cs
clc
call
clc
push
add
mov
xor
add
xor
add
lea
mov
jle
add
ret
rcrl
mov
jo
add
daa
clc
loop
lock
add
push
add
imul
mov
je
clc
in
mov
xchg
fs
xchg
inc
add
mov
bnd
clc
or
shrb
and
add
add
into
xchg
rorb
loopne
or
clc
in
inc
clc
jns
add
daa
clc
sar
add
imul
clc
rolb
clc
imul
clc
or
or
or
shrb
int3
ss
xchg
fcomps
loope
mov
clc
add
add
or
sbb
add
lea
add
fmulp
xor
add
clc
je
pop
pop
xchg
sarl
clc
lods
pop
mov
clc
pop
sub
add
push
clc
mov
push
clc
mov
test
das
inc
clc
in
insb
or
int3
sub
fsubrl
clc
ljmp
mov
add
or
clc
jle
or
pusha
add
cmp
add
mov
clc
add
add
clc
lods
push
add
mov
add
clc
outsb
out
jmp
jne
ljmp
sub
dec
pop
stos
insb
fcoms
cs
add
bound
add
clc
cmp
clc
stos
mov
imul
sar
enter
add
mov
adc
pop
cwtl
lods
cmp
vorps
add
push
clc
mov
add
push
cmpsl
clc
adc
outsl
testb
or
add
imul
int
inc
clc
shlb
fisubl
clc
fstpl
xchg
push
int
clc
push
add
ret
clc
or
clc
cmp
add
int3
xor
add
clc
adc
add
je
clc
jo
add
clc
xor
add
and
add
sub
xchg
pop
out
cld
nop
jb
add
mov
ds
dec
inc
add
leave
stos
es
cmp
add
add
add
loop
ljmp
add
sar
rorb
add
mov
mov
mov
add
sub
clc
jecxz
xchg
xbegin
pop
pop
dec
inc
add
inc
add
xchg
or
add
jne
add
adc
add
adc
push
clc
sub
pop
adc
add
cmp
add
ret
clc
inc
add
and
add
clc
divb
add
jne
push
clc
pop
cmpsb
clc
pop
mov
jl
repnz
clc
enter
clc
lcall
sbb
add
sbb
dec
aas
and
add
je
clc
jmp
mov
enter
add
mov
das
xlat
neg
sbb
clc
pop
test
adc
clc
das
xor
add
dec
pusha
add
mov
cmp
clc
data16
fstp
insl
out
lret
add
xchg
in
or
add
out
cmp
mov
sub
mov
cmp
add
fsubl
add
cld
xor
add
jns
xchg
repz
add
incl
pop
jp
mov
adc
sbb
popf
xor
add
clc
or
adc
sub
add
gs
cmpsb
clc
jbe
mov
dec
lret
popa
add
stos
jmp
jmp
clc
ja
clc
icebp
jmp
add
sbb
adc
add
fistps
push
sahf
and
add
jg
clc
call
sub
xchg
cmp
movsb
clc
cmp
clc
loope
adc
add
mov
mov
test
clc
data16
popa
add
push
clc
mov
add
inc
add
mov
clc
ret
clc
cmp
add
mov
arpl
add
jne
fcoml
add
adc
clc
xor
add
out
daa
clc
mov
xchg
lret
cmp
adc
jmp
lcall
repnz
lock
push
and
add
add
xor
daa
clc
ret
add
in
sbb
movsl
clc
aad
test
sub
add
pop
xor
insb
push
clc
std
add
add
clc
sar
mov
add
xchg
fs
es
dec
pushf
mov
clc
push
lcall
sbb
fs
test
std
add
sahf
out
lods
mov
clc
outsb
jl
add
and
mov
clc
push
cmp
add
sbb
inc
add
inc
clc
js
pop
dec
mov
xchg
stos
cmp
stos
adc
add
clc
add
add
clc
ficompl
sub
sbb
clc
cmp
clc
xor
add
jnp
inc
add
and
add
clc
jp
icebp
aaa
emms
jl
add
jmp
add
add
das
leave
adc
add
cmp
stos
jne
aad
gs
in
arpl
add
clc
push
outsl
or
lret
adc
mov
mov
pop
and
and
add
clc
xchg
lret
mov
add
mov
mov
dec
pop
xlat
jne
pop
and
clc
dec
or
add
mov
jg
addr16
push
and
pusha
add
push
add
cmpsb
clc
jecxz
cmp
addr16
sub
add
push
add
repnz
add
mov
sar
xchg
xor
add
mov
enter
jle
clc
hlt
out
insb
out
xor
add
clc
mov
add
push
add
inc
add
je
clc
mov
pop
xabort
cmp
clc
xchg
xchg
pop
push
xchg
cmp
clc
test
xchg
cmpsl
clc
mov
jge
sbb
jno
add
hlt
adc
clc
dec
pop
in
push
clc
das
mov
add
add
aaa
and
add
pop
push
add
cmp
sbb
repz
mov
enter
sbb
inc
clc
pop
clc
pop
xabort
mov
inc
add
jae
add
shlb
and
sahf
pop
add
push
call
add
xchg
mov
insb
push
cwtl
mov
clc
push
add
xchg
stc
sar
ljmp
mov
inc
add
imul
add
add
add
cmp
loopne
outsl
imul
inc
add
mov
ljmp
push
xchg
fdivs
mov
clc
mov
clc
sbb
dec
and
add
or
addr16
adc
push
mov
clc
adc
dec
mov
dec
in
xchg
jo
add
clc
mov
xlat
pusha
add
sahf
mov
clc
add
add
xabort
inc
clc
pop
arpl
add
pop
clc
cmp
clc
xchg
es
int
fs
fidivrl
clc
push
add
loop
xlat
push
fidivs
pushf
fdivrl
add
add
xlat
jp
and
add
add
mov
or
jne
clc
js
add
dec
aad
cmpsl
clc
stos
mov
into
cmp
add
stos
and
add
add
clc
pop
inc
clc
dec
mov
adc
add
mov
add
pop
in
dec
and
add
es
test
in
add
add
mov
jmp
dec
xor
add
sub
sub
xor
add
inc
clc
stos
sub
add
adc
sbb
dec
cmpsb
clc
pop
ret
pop
mov
xlat
addr16
cmpsb
clc
in
daa
clc
xor
add
lahf
ds
mov
clc
test
xor
pop
sub
add
ja
add
xchg
and
add
xor
add
imul
push
pop
mov
inc
add
out
out
nop
xor
add
cmp
clc
stos
mov
adc
add
rclb
add
stos
push
xor
add
push
jp
add
test
add
lods
or
clc
pop
clc
aam
clc
inc
clc
xchg
mov
add
add
clc
mov
clc
gs
test
add
inc
add
mov
clc
adc
add
add
xchg
sub
aaa
hlt
shufps
arpl
add
pop
xor
add
sbb
mov
add
sar
add
cmp
xchg
xor
add
mov
iret
or
add
cli
test
popf
dec
or
mov
add
mov
add
pop
fmull
adc
push
add
xor
add
shrb
and
add
ljmp
xor
jnp
jae
add
add
add
shlb
inc
clc
cmp
mov
clc
pushf
push
dec
add
add
clc
je
inc
clc
loope
mov
add
add
mov
bound
add
add
aad
dec
mov
and
and
add
shlb
clc
mov
lret
mov
lret
ds
loop
sbb
movsl
clc
xchg
jb
add
xchg
xor
fwait
xor
add
notb
mov
out
and
add
pop
jmp
clc
xor
add
cltd
inc
clc
push
add
imul
xlat
mov
dec
mov
sbb
stos
xchg
xchg
ds
pop
out
push
es
mov
push
add
mov
clc
mov
add
sahf
adc
add
clc
dec
pop
lret
cmp
clc
jle
clc
shlb
add
popf
test
enter
sbb
fs
xchg
jbe
dec
fildll
cmpsl
clc
cltd
scas
sahf
arpl
add
clc
jge
xor
xchg
mov
outsb
xor
add
mov
add
xchg
push
syscall
clc
push
xlat
xchg
mov
sbb
clc
sub
clc
mov
insl
data16
je
push
test
dec
loope
imul
mov
clc
push
add
mov
clc
mov
iret
in
jp
add
lahf
and
add
mov
push
mov
add
and
js
clc
add
pop
inc
clc
mov
mov
cmp
add
xchg
sar
sub
icebp
lea
adc
clc
mov
clc
mov
aam
sub
add
insl
pop
adc
clc
clc
pop
rcrl
pop
outsb
mov
jmp
clc
call
int
imul
pop
clc
push
loop
inc
add
into
lret
mov
xor
add
clc
sbb
and
int3
gs
add
mov
xor
mov
clc
add
lcall
sub
sub
scas
push
add
incl
mov
add
push
add
inc
clc
add
add
scas
and
push
add
add
divl
jg
jnp
cmp
pop
adc
add
es
js
clc
xor
out
adc
lret
cmpsl
clc
adc
add
nop
mov
push
add
in
inc
clc
adc
add
add
dec
xabort
pushf
add
add
je
and
add
add
fbstp
add
inc
clc
ljmp
mov
cmp
cmp
shll
clc
clc
and
add
test
das
cmp
iret
bound
add
lcall
add
ficompl
add
push
push
push
add
hlt
add
add
mov
sub
add
ds
addr16
push
xchg
mov
cmp
sub
int3
js
add
mov
fisttps
clc
mov
clc
mov
xchg
add
add
iret
add
data16
dec
or
iret
nop
int
add
popa
add
clc
and
add
loope
xchg
xchg
sub
add
mov
sbb
std
sub
adc
add
clc
bound
add
mov
mov
sahf
inc
clc
stos
pushf
adc
add
add
cmp
push
stos
insb
mov
cld
xor
add
addr16
out
imul
sub
out
sbb
inc
add
add
add
push
lods
inc
clc
lods
bound
add
xor
add
je
clc
into
or
xchg
or
mov
test
clc
add
add
add
add
xor
add
add
push
cmp
clc
loopne
je
and
add
clc
mov
fimuls
add
ret
clc
and
add
jnp
mov
jbe
cltd
decl
clc
stos
jne
outsb
mov
clc
add
add
mov
lahf
mov
pop
sti
push
add
cmp
cs
clc
cmp
clc
sbb
mov
std
mov
imul
add
clc
xor
add
jecxz
xbegin
hlt
jbe
clc
push
add
adc
mov
clc
mov
loop
lret
lcall
inc
clc
stos
inc
clc
aam
ret
clc
or
jmp
cmp
xchg
gs
pop
jo
add
push
add
lods
sbb
fcoml
sub
dec
mov
mov
add
mov
bound
add
clc
lods
or
dec
push
clc
inc
clc
mov
gs
pop
ljmp
add
lock
inc
clc
int
push
clc
popa
add
repz
aas
add
push
add
lods
shr
aaa
out
pop
bound
add
add
movsl
clc
int
add
add
push
adc
add
lods
es
sbb
push
sub
data16
sub
inc
clc
dec
mov
clc
adc
add
bound
add
jle
add
sub
xor
add
mov
add
push
add
adc
add
add
movsl
clc
push
push
clc
cmp
add
add
out
hlt
dec
jbe
jo
add
clc
push
mov
mov
add
clc
sar
call
clc
jle
sub
cltd
xchg
fsubl
or
aaa
daa
clc
arpl
add
clc
out
js
clc
fwait
xabort
jg
xbegin
dec
cmp
leave
dec
xchg
and
add
clc
mov
add
mov
data16
cli
xchg
outsb
inc
add
mov
js
push
aas
jne
clc
pop
inc
add
jge,pn
clc
es
xchg
mov
or
add
mov
clc
int3
pusha
add
push
js
xor
add
test
xchg
mov
cmp
add
add
jecxz
push
add
fwait
cmc
pop
das
je
cmp
pop
cld
aam
xlat
cmp
add
sbb
cwtl
enter
adc
add
jnp
dec
frstor
adc
add
add
cmp
add
and
add
add
jne
clc
nop
call
dec
mov
mov
gs
mov
clc
jo
add
push
add
lret
mov
clc
mov
push
clc
shufps
pop
and
pop
clc
inc
add
cs
jnp
clc
pusha
add
cmp
jg
lock
inc
add
xor
add
cmp
or
clc
outsb
jns
clc
or
mov
jl
xabort
xbegin
clc
aad
cwtl
mov
loop
js
jle
outsb
push
in
sub
aaa
jmp
mov
push
jae
add
add
fsubrl
clc
testb
add
aad
clc
cli
out
fcoml
add
clc
jae
add
clc
clc
inc
add
in
sub
mov
dec
pop
dec
out
faddl
add
add
imul
clc
adc
add
xor
add
lret
jnp
jge
clc
stos
pop
aam
fwait
pop
int3
pop
xabort
push
add
or
clc
cmp
clc
jmp
clc
inc
add
pusha
add
jmp
push
cmp
clc
sar
pop
xor
lret
fsubrs
add
mov
xchg
imul
clc
je
out
jnp
push
cld
jae
add
dec
inc
add
mov
mov
xlat
inc
clc
fisubrl
loop
xchg
mov
imul
xchg
ja
adc
cmp
add
out
aad
clc
push
add
add
add
or
iret
pop
jo
add
or
jae
add
pop
push
inc
add
xor
add
clc
idivl
push
add
mov
pop
dec
and
add
clc
or
pushf
sbb
sbb
aad
clc
mov
sbb
es
xchg
xabort
ja
addr16
xor
add
push
fmuls
insl
lcall
std
add
add
clc
or
in
test
sbb
jo
add
stc
mov
aad
add
jae
add
bound
add
add
loopne
cmp
xor
popf
push
cli
dec
ljmp
add
popa
add
lret
pop
out
lea
mov
adc
rolb
add
cmp
enter
dec
mov
clc
mov
mov
xlat
mov
add
xor
add
xchg
mov
add
mov
jecxz
jp
clc
jmp
clc
push
clc
jle
sub
inc
clc
pop
outsl
pop
cmc
arpl
add
lcall
and
add
clc
push
xchg
cmp
add
mov
clc
cmp
popa
add
jnp
mov
add
sub
add
pop
and
cmp
add
add
loopne
clc
xchg
adc
add
add
inc
clc
or
jl
cs
data16
sub
add
push
add
and
push
sbb
clc
scas
in
and
add
add
mov
aaa
xchg
jp
clc
hlt
mov
add
out
sub
adc
add
aad
aas
jg
scas
mov
data16
sbb
mov
add
aas
fbld
add
jg
clc
enter
xor
add
clc
and
add
cmp
adc
add
add
cld
jns
jmp
clc
mov
clc
dec
sbb
add
xchg
jge
fiaddl
add
add
dec
push
mov
stos
out
adc
add
mov
add
loope
mov
lods
cmp
clc
cmp
into
data16
cmp
jb
add
movsb
clc
fiaddl
add
aad
add
jns
clc
and
add
clc
cmc
mov
add
lods
clc
adc
pop
or
xchg
inc
clc
test
clc
dec
xchg
jno
add
nop
push
movsl
clc
mov
add
inc
clc
mov
dec
add
add
push
add
int
clc
jnp
and
add
inc
clc
mov
add
add
add
clc
sub
inc
clc
pop
xchg
dec
hlt
outsl
lret
push
jp
mov
sbb
add
test
in
mov
cmpsl
clc
xabort
add
insb
mov
inc
add
outsb
xor
add
add
pop
sbb
add
add
add
sub
jmp
lock
clc
jns
mov
jle
push
add
int3
pusha
add
jge
xchg
or
outsb
lods
mov
mov
mov
clc
insl
xor
add
inc
clc
cmp
loopne
sbb
clc
es
xor
add
cmovns
roll
int
xor
add
shr
cwtl
call
jmp
insl
push
add
loop
xor
add
add
pop
push
add
pop
clc
dec
dec
xabort
clc
add
add
add
add
cmp
add
add
cmpsb
clc
jne
clc
jmp
add
add
clc
sub
clc
and
add
xor
fwait
jno
add
cmp
clc
sbb
jecxz
incl
add
scas
icebp
jb
add
clc
jl
dec
data16
leave
mov
xor
jl
mov
dec
xchg
xchg
test
out
insl
hlt
mov
mov
mov
mov
fdivs
clc
push
xor
test
clc
sar
mov
mov
clc
adc
add
insb
cmpsl
clc
jmp
pop
pop
clc
adc
add
cmp
in
cmp
add
imul
iret
clc
pushf
sub
clc
add
pop
pop
outsb
jo
add
cld
push
add
push
cmp
ds
add
add
and
add
fists
adc
add
xchg
add
add
add
lods
aaa
fs
outsb
push
clc
pop
jbe
out
das
cmp
add
pushf
and
psubd
mov
add
hlt
leave
std
inc
add
pop
repz
sbb
clc
pop
or
clc
enter
or
add
call
cmp
mov
int
mov
sub
and
add
jl
sar
mov
gs
test
sub
sbb
add
add
ljmp
imul
cmp
pop
inc
add
pop
clc
test
pop
sar
xchg
lods
adc
add
clc
adc
push
aam
popf
xchg
iret
gs
ss
in
fcmovnbe
shlb
add
adc
add
es
outsl
idivl
or
es
push
clc
sub
lods
inc
clc
sub
add
mov
arpl
add
add
clc
xor
add
clc
nop
pop
dec
rorl
fldcw
or
ret
hlt
cltd
pop
jno
add
in
adc
jbe
arpl
add
cmpsl
clc
das
add
add
negl
dec
jne
inc
add
nop
incb
decl
dec
cmp
clc
mov
clc
mov
inc
add
and
add
xchg
mov
loopne,pn
xor
add
clc
lock
add
jns
xchg
adc
add
inc
clc
cmc
and
hlt
jb
add
clc
sbb
clc
dec
aam
clc
or
cmp
push
cs
jb
add
int
dec
inc
add
sub
add
xchg
fldcw
add
and
add
inc
add
mov
xor
add
cs
or
and
or
clc
pop
mov
add
ljmp
clc
inc
add
pop
clc
testl
sub
mov
clc
xchg
ljmp
mov
clc
test
pop
mov
jge
fcoms
je
and
add
clc
stc
xor
add
pop
sub
pop
mov
clc
xor
popa
add
mov
add
add
lods
dec
adc
add
add
and
add
dec
out
mov
add
add
lcall
adc
add
pushf
dec
sbb
add
fcoms
adc
add
clc
lods
fadds
add
or
clc
mov
add
in
dec
xor
sbb
add
xchg
test
loop
clc
shl
clc
sub
add
lods
pop
xor
add
or
push
clc
vminps
add
pop
xbegin
dec
xor
jmp
sahf
xor
add
jne
repz
add
sbb
out
sbb
iret
push
mov
add
inc
clc
cmp
mov
pop
push
pop
cmp
inc
add
js
inc
clc
adc
add
loopne
mov
sub
or
add
adc
add
scas
xor
add
lret
mov
jbe
clc
movsl
clc
xchg
jg
clc
stos
and
and
add
add
push
mov
clc
xchg
jge
in
pop
inc
clc
pop
sbb
and
add
mov
add
lea
add
mov
add
adc
add
inc
clc
sub
clc
adc
clc
pop
or
enter
repnz
scas
nop
cmp
clc
rclb
fstpt
add
cwtl
mov
lret
add
xor
add
sbb
stos
inc
clc
cmp
lret
icebp
jle
add
mov
sbb
clc
data16
out
xor
pop
and
add
mov
add
mov
repz
cmp
add
mov
js
cmp
rclb
add
dec
lea
dec
fsubrs
insb
cmp
mov
clc
mov
data16
dec
in
stos
mov
add
neg
sub
clc
rolb
add
or
add
sar
adc
add
add
cs
mov
add
and
add
clc
cwtl
ljmp
add
sub
add
add
add
jo
add
stos
outsl
jae
add
push
mov
add
dec
add
add
push
add
mov
inc
clc
push
push
or
adc
add
ficompl
clc
call
xchg
or
fmuls
dec
inc
clc
insb
dec
push
add
pop
add
add
push
clc
stos
mov
pop
mov
pop
pusha
add
jmp
xor
add
pop
mov
or
pop
cmp
fisttps
pop
clc
or
add
jae
add
add
fsubl
clc
mov
ret
clc
clc
and
add
push
mov
mov
popa
add
pop
clc
enter
xchg
out
xabort
sarl
add
mov
push
xor
add
shrl
data16
stos
inc
clc
cmpsb
clc
jmp
dec
rorb
clc
and
add
clc
inc
clc
nop
push
sbb
mov
clc
sub
add
jnp
jl
pop
movsl
clc
ljmp
clc
cmp
leave
jo
add
cmp
jle
clc
cmp
add
inc
add
jmp
pop
sbb
cmp
add
sti
pop
inc
clc
dec
jp
insb
jne
inc
add
pop
xbegin
cmp
clc
push
adc
add
clc
outsb
cmpsl
clc
jp
add
cmp
add
in
mov
clc
xchg
hlt
jns
lahf
fmul
faddl
jge
add
fidivl
cmp
neg
rcrl
data16
rol
clc
xchg
cli
gs
cmp
addr16
and
add
add
or
hlt
in
scas
and
add
outsb
xabort
or
int
add
mov
mov
add
clc
fldz
push
fiaddl
add
add
or
add
pushf
call
add
movsl
clc
out
aaa
cmp
arpl
add
cmp
mov
add
mov
clc
pop
loope
ja
clc
std
stc
add
add
clc
fstp
clc
arpl
add
mov
add
sub
and
jne
add
sbb
clc
ja
inc
clc
mov
clc
push
push
jp
clc
iret
lods
jae
add
fstpl
adc
add
mov
clc
insl
sbb
int3
cmp
es
xor
add
inc
add
mov
add
add
pop
xor
clc
inc
add
push
add
jnp
jb
add
jbe
ljmp
into
outsb
sar
jb
add
aaa
pop
push
xor
add
mov
nop
xbegin
add
mov
clc
call
mov
add
add
clc
js
inc
add
sahf
and
add
add
popa
add
cmp
add
mov
clc
lock
pushl
add
xchg
xchg
cli
repnz
out
std
xbegin
nop
mov
dec
or
clc
xchg
or
lock
call
add
mov
add
inc
clc
push
mov
clc
mov
adc
add
cmp
xchg
or
add
aad
popl
add
out
bound
add
insl
cmpsb
clc
push
pop
fucomp
dec
imul
add
add
push
clc
sar
or
add
addr16
mov
cmp
clc
outsl
pushf
lret
clc
cmp
clc
mov
xchg
pusha
add
clc
stos
sbb
out
aaa
jecxz
movsl
clc
cltd
minps
clc
gs
sbb
aad
es
or
add
add
add
in
mov
clc
test
in
jns
clc
out
mov
arpl
add
data16
inc
add
lods
scas
xor
fsubs
add
pop
aas
aad
clc
mov
shrl
add
jle
mov
dec
cli
jmp
lods
scas
lods
out
in
pushf
mov
dec
adc
add
aaa
jbe
add
push
adc
clc
loop
or
rcrl
lret
js
lret
push
cli
arpl
add
sub
add
bound
add
cmp
mov
add
dec
ret
loop
mov
je
sub
in
mov
or
clc
adc
add
sbb
add
xor
add
jnp
nop
daa
clc
in
je
inc
add
pop
clc
mov
dec
xor
dec
dec
and
add
push
cmp
cmp
fsubl
or
clc
loop
lods
xchg
push
mov
jle
mov
add
repnz
ja
jb
add
add
push
push
push
add
xor
add
dec
gs
jne
lods
arpl
add
clc
ret
and
add
shlb
push
add
push
pop
cmc
movsb
clc
je
clc
arpl
add
lock
fs
xchg
dec
sar
xor
add
clc
test
pop
popa
add
sub
faddl
js
jae
add
clc
out
push
xbegin
lret
fmuls
add
add
pop
insl
push
add
aaa
lods
fs
int
ja
clc
mov
popa
add
lcall
daa
clc
addr16
es
and
add
or
mov
roll
in
fwait
int3
mov
push
and
add
data16
mov
clc
and
add
mov
mov
add
push
sub
test
dec
dec
mov
clc
mov
xor
add
xchg
or
xchg
test
dec
xor
add
add
sub
add
and
sarl
int
clc
mov
sti
mov
dec
fcmovne
xchg
adc
add
add
loope
xchg
cmpsl
clc
lock
add
in
pop
cmp
inc
clc
aam
push
lcall
add
cmp
adc
add
divb
rcr
aas
cmp
clc
dec
sbb
clc
sahf
int
dec
add
add
jbe
jno
add
clc
adc
add
add
rol
clc
and
add
lcall
adc
add
clc
ds
sbb
xor
test
mov
add
jnp
fs
fidivrs
clc
cld
cld
mov
pop
pop
cld
cwtl
loop
xchg
scas
lahf
bound
add
loope
sar
fistpll
add
cmc
mov
add
and
stc
sub
sahf
sub
push
add
xchg
sbb
sar
clc
lcall
repz
scas
jecxz
jg
add
into
jmp
add
mov
add
cmp
pop
xlat
adc
add
dec
cli
xchg
ljmp
cmp
add
fsub
clc
cli
dec
test
add
add
ljmp
shlb
jo
add
add
push
jge
ja
ljmp
xor
add
add
addr16
xor
inc
clc
loop
rcrl
and
add
clc
adc
add
pop
mov
cld
divb
xor
add
add
into
mov
add
sub
pop
icebp
sar
jp
clc
xor
add
leave
clc
xchg
sti
loope
sub
clc
popa
add
sahf
fildl
add
mov
rolb
add
dec
mov
push
lea
push
pop
or
clc
jo
add
clc
dec
mov
add
mov
add
aam
or
pop
and
add
inc
clc
shll
add
lods
mov
add
clc
adc
push
add
cmp
or
add
test
jnp
bound
add
clc
das
mov
cmp
clc
repnz
sahf
xbegin
add
add
clc
out
das
sbb
imul
out
fstl
rolb
add
repz
loop
fcmove
insl
ja
add
add
pop
xlat
jbe
stos
and
push
mov
xbegin
xor
add
cmp
add
clc
scas
add
cmpsl
clc
cmp
aaa
adc
add
clc
jg
imul
jmp
jmp
mov
mov
fdivp
nop
cmpsb
clc
imul
and
fcmovu
in
inc
clc
sahf
sub
add
push
clc
insb
xchg
push
mov
add
dec
mov
clc
stos
inc
clc
mov
outsb
mov
pop
clc
scas
dec
inc
clc
inc
add
iret
sbb
call
and
add
and
add
cmp
add
mov
stos
ret
clc
sub
clc
or
loope
adc
add
clc
dec
gs
add
add
test
sub
cmp
push
cmp
inc
clc
pop
dec
jo
add
add
push
or
add
lock
shl
pop
pop
loope
cmp
add
into
dec
push
add
test
pop
clc
sbb
pusha
add
inc
add
call
inc
clc
ficomps
clc
jle
icebp
xchg
mov
dec
ja
gs
cmp
mov
add
lret
test
lcall
cmp
out
xor
add
add
add
sub
add
sbb
aas
adc
mov
int3
dec
in
jecxz
add
add
jbe
lods
fldl
imul
mov
addr16
and
add
movsl
clc
pop
cld
int
cmp
pop
fisttpll
and
sbb
stc
cltd
cwtl
xchg
test
add
out
mov
clc
outsb
push
test
pushf
rcl
and
add
add
inc
add
mov
clc
add
add
sbb
ds
mov
clc
dec
cltd
mov
add
or
clc
push
jg
push
add
mov
ret
clc
xor
add
sub
add
jle
add
js
add
pop
push
dec
cltd
sub
clc
mov
clc
xabort
dec
mov
int3
fwait
sbb
clc
inc
add
cmp
js
ja
flds
add
out
jg
and
xchg
ret
clc
mov
cmpsb
clc
xchg
mov
and
add
cmp
dec
sub
clc
add
add
cmpsb
clc
push
add
push
mov
stc
xor
mov
clc
lods
pop
shrl
add
xchg
dec
pop
int3
ss
loopne
sub
clc
jle
call
imul
push
dec
push
add
push
pop
lods
icebp
and
add
add
fdivl
adc
or
outsl
cs
inc
add
rcl
ja
clc
cmpsl
clc
outsl
std
jge
clc
and
add
std
int3
sub
xchg
popf
stos
test
mov
clc
push
sub
adc
add
clc
leave
shl
mov
cwtl
and
add
clc
int
scas
jmp
fisttpl
ljmp
shrl
aam
clc
xor
add
clc
lcall
scas
mov
es
push
movsl
clc
jmp
mov
loop
or
sbb
clc
and
add
add
clc
sub
in
mov
clc
dec
in
jae
add
aaa
aaa
cmp
clc
bound
add
add
sbb
add
das
jge
cmpsl
clc
addr16
sti
sar
mov
ret
or
mov
icebp
xor
add
inc
add
adc
add
xchg
fcoms
clc
cmp
clc
fsubrl
dec
sbb
add
cwtl
sti
repz
ds
or
mov
add
mov
jnp
and
add
clc
xchg
mov
mov
mov
dec
stos
out
lock
clc
sar
cli
popf
dec
aaa
jb
add
cmp
add
sub
clc
clc
data16
stc
mov
clc
loope
push
add
pop
clc
sub
popa
add
push
clc
add
jae,pn
add
add
xchg
cmp
clc
push
add
ret
clc
sub
and
xchg
dec
push
add
add
pop
stos
mov
out
cmc
pop
mov
jb
add
clc
dec
arpl
add
fidivs
or
clc
iret
add
or
add
mov
clc
rcrl
add
push
jae
add
pop
sar
clc
mov
add
push
clc
sbb
sub
clc
cmp
clc
push
inc
add
mov
xchg
lock
sarb
add
test
test
cmp
repz
outsb
sub
jecxz
ljmp
rclb
xlat
jne
fdiv
mov
clc
test
enter
clc
repz
mov
ja
xchg
das
jno
add
add
push
data16
std
jl
add
xlat
sbb
clc
mov
clc
fbstp
adc
add
jbe
ja
and
add
repz
add
add
add
clc
icebp
sahf
jb
add
imul
clc
or
bound
add
add
jbe
clc
pop
mov
add
jae
add
sub
arpl
add
xchg
xor
add
push
pop
pop
cld
cmp
cmc
int3
inc
clc
jl
mov
pop
lods
fwait
add
xlat
cmp
xchg
mov
mov
lods
lock
add
loopne
popf
lea
clc
xlat
daa
clc
sub
clc
cmp
clc
xchg
imul
adc
stos
in
ret
cmpsl
clc
dec
mov
pushf
mov
add
xor
add
sbb
sar
iret
pop
mov
clc
stos
jb
add
imul
cmp
outsb
repnz
clc
mov
and
add
icebp
cmp
dec
pop
clc
imul
mov
gs
aad
clc
cs
add
fstps
fucomip
xchg
sti
frstor
sbb
dec
fcoms
mov
ss
pop
push
add
stos
jp
jnp
dec
stos
stos
fcmovb
clc
je
int
lahf
inc
clc
pusha
add
fwait
and
add
sbb
clc
sbb
sub
add
loope
xchg
mov
leave
adc
add
clc
stc
mov
add
pop
sbb
loopne
iret
xchg
xchg
out
push
add
xabort
add
sahf
sahf
push
cwtl
movsb
clc
lret
mov
clc
imull
clc
cwtl
ret
sbb
jle
add
inc
clc
mov
dec
push
jbe
dec
push
add
scas
sbb
clc
pop
js
clc
loope
loop
repz
xchg
fisubrl
movsl
clc
ret
xchg
shrl
repnz
std
pop
push
add
sar
add
add
clc
inc
clc
sbb
jmp
pop
add
mov
shlb
clc
dec
es
jmp
jne
sub
clc
pusha
add
ds
jmp
add
push
jecxz
test
clc
out
xchg
xchg
pop
xabort
pop
test
mov
lock
mov
clc
inc
add
xor
add
sub
add
fcomp
lcall
xchg
adc
add
clc
mov
stc
cmc
loop
sub
mov
pop
push
data16
dec
inc
clc
and
ljmp
or
add
xchg
pop
sar
dec
sub
add
shrb
jge
xchg
adc
push
xor
add
add
adc
add
mov
sbb
fstps
jno
add
add
rcll
clc
pushf
cmp
push
add
ret
pop
clc
dec
add
add
sub
scas
cli
out
or
and
and
add
add
mov
clc
data16
es
clc
or
inc
add
sub
add
cmp
clc
js
sub
add
and
popa
add
data16
cmp
jne
clc
sub
in
lods
fsubs
add
mov
and
add
add
xor
insl
sub
mov
fwait
push
add
pop
movsl
clc
inc
add
push
cmp
add
aam
dec
or
loop
daa
clc
mov
lock
cli
push
add
mov
clc
sbb
add
mov
jne
add
mov
cmp
xor
add
loopne
outsl
fs
iret
sahf
cmp
mov
add
and
outsl
mov
idivl
std
push
add
icebp
inc
add
lret
sar
in
inc
add
sub
xor
add
xchg
mov
add
add
add
xchg
sti
adc
add
sbb
add
push
arpl
add
fwait
out
push
mov
xchg
stos
ret
clc
jae
add
arpl
add
mov
fsubr
out
pop
shl
aaa
cmp
clc
mov
add
pop
mov
add
cmp
pop
push
arpl
add
push
jp
xchg
push
fldenv
dec
or
mov
mov
sar
aaa
and
adc
imul
push
addr16
xchg
fistpl
xchg
xchg
cmp
push
clc
xchg
pop
clc
fcmovb
clc
mov
clc
stc
cmp
test
icebp
cmp
sbb
test
sub
mov
ret
mov
add
sbb
add
dec
sbb
clc
sar
clc
fwait
or
add
add
add
in
fwait
mov
jl
fildl
add
mov
clc
add
add
fsub
clc
cs
sbb
push
add
dec
cmp
jmp
sub
stos
ljmp
cmpsb
clc
inc
clc
sbb
dec
insb
aad
jmp
popf
dec
jns
add
imul
stc
dec
jns
into
mov
sub
or
ret
xor
add
clc
mov
push
outsb
or
clc
inc
add
mov
add
sahf
test
xchg
xchg
rolb
add
clc
jmp
pop
push
xchg
arpl
add
clc
pop
pop
mov
sahf
icebp
jg
clc
or
jb
add
pop
sbb
lea
mov
fs
dec
xor
sbb
xchg
sar
sbb
adc
test
add
mov
add
call
pop
clc
adc
add
jle
add
inc
clc
pop
lahf
adc
add
add
add
jae
add
inc
add
pop
cmp
xor
das
popf
dec
clc
es
repnz
icebp
and
add
clc
pop
cmp
add
add
clc
push
sar
clc
scas
cs
icebp
leave
cmp
add
pop
add
add
push
lret
jg
sub
or
pop
test
icebp
sub
add
push
cmp
clc
int
pop
jo
add
add
int3
sar
shl
push
add
lret
lods
xchg
test
sar
pop
clc
aam
mov
add
mov
add
sbb
clc
jg
and
and
add
in
lock
mov
or
cmpsb
clc
jo
add
clc
sub
cmp
xor
add
xor
add
clc
loop
mov
clc
movsl
clc
repnz
clc
lcall
clc
push
es
xchg
sub
add
sub
add
jne
clc
outsb
gs
sbb
add
lock
insl
sbb
adc
inc
add
nop
shrb
mov
int3
test
clc
ret
cmp
and
pop
jo
add
mov
mov
outsb
pop
clc
icebp
xor
add
clc
push
add
add
add
es
dec
xchg
push
mov
clc
bound
add
adc
add
in
jns
movsl
clc
iret
sbb
mov
lahf
xor
jle
sub
push
clc
adc
add
add
sbb
lods
add
imul
and
cmp
inc
add
in
jne
jns
dec
jge,pn
call
adc
add
add
xchg
mov
test
nop
push
add
pop
lods
testl
lahf
jne
add
pop
jge
repnz
iret
dec
pop
jne
nop
cmp
adc
clc
sar
add
add
out
xor
add
jae
add
add
mov
clc
and
add
pop
stos
xchg
cmp
clc
int
stos
mov
dec
xchg
jo
add
mov
lret
sub
sbb
mov
sub
mov
dec
sbb
dec
inc
clc
cmpsl
clc
lcall
inc
add
add
add
add
lahf
cmpsl
clc
push
add
je
shrl
popa
add
push
add
pop
xchg
fs
fsubr
repz
fildl
cmp
add
cmp
clc
push
negl
nop
mulb
inc
add
jge
inc
add
cmc
jnp
cmc
cmp
add
jle
xchg
or
add
clc
ljmp
push
clc
jp
add
add
add
pop
add
add
jnp
movsl
clc
sar
clc
sub
clc
fcompl
testl
jne
bound
add
and
add
clc
js
dec
mov
or
dec
cmp
clc
test
add
push
clc
jnp
dec
pop
push
cmp
clc
adc
add
test
lcall
scas
mov
add
xchg
out
sar
cmpsb
clc
push
add
lret
clc
mov
cmp
pop
aam
clc
repz
lea
clc
inc
add
push
add
dec
enter
add
push
add
pop
lods
out
inc
clc
out
shrb
cmp
add
sar
adc
add
add
add
adc
add
sbb
sahf
mov
sbb
push
add
aaa
ret
add
mov
sti
jle
add
repnz
jb
add
pop
push
add
dec
enter
daa
clc
xchg
mov
sub
fisubs
in
je
and
dec
ucomiss
clc
dec
popf
push
add
clc
fwait
sub
imul
add
add
jge
xbegin
cmp
mov
add
mov
pop
push
add
and
add
call
add
add
add
push
je
cs
jb
add
inc
clc
add
out
inc
add
in
xor
add
clc
add
shlb
add
mov
dec
inc
add
adc
add
out
in
insb
mov
clc
ficomps
mov
insl
mull
add
popa
add
in
imul
sbb
add
fldl
or
inc
clc
ret
clc
sar
sti
in
mov
add
nop
xor
add
fmulp
jo
add
add
movsb
clc
sub
jl
add
lret
repz
add
add
dec
and
test
jmp
add
add
add
add
xchg
sbb
call
add
add
clc
stos
daa
clc
gs
sub
jns
inc
add
jae
add
or
nop
xor
sbb
add
jb
add
ds
xchg
and
add
into
xor
add
xor
xchg
cmp
clc
outsl
add
add
ror
inc
add
out
into
hlt
jp
add
mov
repnz
add
stos
imul
iret
mov
imul
push
sarl
mov
clc
xor
mov
add
push
test
sbb
clc
add
cmp
out
out
dec
jle
clc
pop
xchg
dec
pusha
add
stc
mov
clc
mov
add
outsl
cld
dec
mov
xor
int3
movsb
clc
and
add
bound
add
fwait
inc
clc
jae
add
clc
loope
dec
jns
clc
repnz
add
sti
jp
sar
push
add
pop
in
and
add
push
clc
inc
add
jl
iret
mov
add
inc
add
out
xchg
scas
ret
push
add
dec
ret
clc
pop
shlb
dec
mov
add
and
add
jo
add
add
fidivrs
cwtl
inc
add
ds
jp
add
cwtl
jae
add
lods
inc
add
fists
pop
dec
inc
clc
xlat
cmp
add
fisttpl
pop
mov
or
leave
fiaddl
add
int
clc
mov
dec
adc
add
and
add
add
mov
jmp
add
inc
clc
or
in
push
pop
or
int3
sahf
push
test
clc
adc
add
dec
lahf
or
clc
test
cmp
stc
xor
add
mov
or
xchg
push
or
in
pop
iret
push
xor
cmp
sbb
jecxz
jno
add
add
mov
mov
xchg
hlt
lret
xchg
pop
daa
clc
adc
add
push
loope
nop
and
jl
cmp
add
xor
add
shr
pop
mov
clc
xchg
out
incl
fadds
add
kmovw
jnp
lods
lods
mov
sar
add
es
in
dec
mov
dec
jmp
loope
fnstsw
and
add
mov
out
sti
mov
clc
int
in
add
add
add
dec
pop
shrl
mov
add
and
add
adc
add
clc
xor
add
test
clc
mov
add
push
push
clc
push
add
arpl
add
clc
je
decb
leave
jnp
add
repz
cmp
add
in
sub
xor
add
cmpsl
clc
sbb
mov
or
cmp
add
inc
clc
clc
pop
fldl
aad
jbe
push
jo
add
and
add
xchg
cmp
clc
push
insl
jae
add
xchg
imul
clc
cmp
sar
xbegin
clc
rcrl
clc
mov
cmc
fcmovne
push
popa
add
enter
clc
out
adc
add
cmp
pop
popa
add
add
add
add
adc
add
jo
add
add
adc
add
ret
add
dec
jmp
in
add
jge
clc
pop
and
clc
inc
add
loop
xor
add
clc
sbb
icebp
lods
inc
clc
out
mov
xor
cli
or
clc
pushf
fwait
arpl
add
push
push
xor
add
ficompl
sahf
test
cmp
cmp
add
pop
clc
fprem
rorb
das
inc
clc
xchg
jo
add
ja
add
jecxz
mov
mov
and
add
mov
cltd
fs
stc
std
jl
nop
xchg
popf
and
xchg
pop
xchg
adc
add
add
add
mov
jmp
add
add
add
or
clc
dec
or
add
sbb
cmp
xchg
push
add
mov
popf
mov
cmp
xchg
mov
fs
pop
xchg
imul
in
mov
sbb
inc
add
add
add
pop
mov
jbe
cmp
adc
add
insl
mov
clc
loop
add
add
mov
pop
inc
add
jecxz
jl
xchg
lret
pop
inc
add
in
out
sub
inc
clc
pop
clc
push
push
sahf
insb
sub
fnstsw
inc
clc
int
push
xchg
lea
cs
clc
xchg
inc
add
pop
pop
adc
mov
out
arpl
add
push
add
imul
clc
push
in
pop
inc
clc
and
add
pop
jae
add
add
call
clc
inc
clc
into
aaa
cmp
jne
sub
or
sub
icebp
cs
xlat
lahf
xor
mov
or
clc
mov
clc
clc
ret
je
xor
add
scas
bound
add
jb
add
clc
bnd
clc
sub
pop
xlat
xor
clc
xchg
into
ret
clc
mov
and
add
jno
add
add
clc
push
clc
test
clc
hlt
fisubl
jo
add
clc
fwait
clc
cld
push
mov
push
mov
clc
lods
sbb
xchg
clc
mov
mov
add
or
sbb
enter
and
add
clc
mov
jne
or
adc
add
adc
lcall
sub
ret
clc
dec
cmp
in
js
add
and
add
clc
fcmovbe
addr16
xchg
aad
clc
xchg
jo
add
stc
out
mov
clc
imul
add
clc
jne
clc
sbb
cmp
add
popf
push
clc
mov
add
jp
clc
mov
push
add
movsb
clc
xor
add
add
imul
daa
clc
pop
in
jecxz
sbb
push
inc
clc
sar
mov
dec
in
and
add
or
or
sub
dec
add
adc
clc
fwait
repz
lcall
pop
stos
aad
fs
jg
outsl
pushf
push
add
add
scas
mov
js
leave
sub
pop
test
push
jae
add
clc
nop
lcall
ds
clc
sar
dec
test
cmp
jbe
cmp
jle
clc
xbegin
add
clc
jge
shlb
loop
aad
dec
inc
clc
cli
xchg
cmpsb
clc
jmp
test
clc
outsb
pop
mov
jl
or
clc
mov
add
out
jecxz
cmp
jmp
clc
jle
clc
sar
xchg
loope
data16
clc
cltd
push
out
lock
mov
jne
mov
fistps
push
add
in
call
add
push
push
jb
add
vsubps
clc
arpl
add
clc
lods
adc
xchg
xor
clc
or
in
and
add
es
cltd
sahf
adc
add
cltd
pop
sahf
test
clc
jle
mov
ds
push
add
icebp
xchg
push
add
push
fidivrl
clc
push
add
add
cmp
add
lock
add
clc
movsb
clc
inc
add
cmpsb
clc
das
pop
clc
add
add
mov
clc
cmp
or
push
jo
add
cmp
scas
mov
add
repz
dec
or
add
adc
add
ud0
sahf
inc
add
jg
faddl
int
clc
dec
popa
add
pop
cld
cmp
push
dec
sbb
pop
xor
add
jnp
in
cmp
cmp
rcrb
cli
leave
jne
sar
push
out
mov
add
add
add
add
inc
clc
xbegin
in
es
xor
add
add
add
mov
sub
insl
push
jo
add
add
add
add
add
add
push
push
add
and
add
leave
cmc
popf
outsl
cmpsl
clc
add
clc
or
aaa
movsb
clc
fildl
add
sbb
add
clc
push
adc
add
data16
xor
add
and
add
enter
in
popa
add
jg
clc
fidivl
add
cmp
scas
gs
push
pop
mov
dec
ss
clc
push
es
xchg
dec
je
add
arpl
add
push
clc
stos
insl
mov
and
add
pop
xchg
fsub
clc
and
add
mov
jle
aaa
jle
test
clc
sbb
clc
pop
inc
add
jo
add
jmp
clc
xchg
dec
lods
mov
xchg
push
adc
add
sar
pop
into
sahf
adc
and
and
add
clc
inc
clc
hlt
lock
add
jg
mov
clc
rcrl
xor
add
sub
sbb
clc
in
mov
stos
pop
jno
add
inc
clc
pop
xchg
dec
cmp
add
mov
cmp
gs
jmp
or
in
aad
hlt
pop
jo
add
pop
js
mov
add
or
push
add
scas
int
mov
iret
cmp
clc
stc
add
add
test
sub
add
clc
jnp
cmp
jecxz
cmc
jnp
xchg
daa
clc
negl
in
push
add
cmpsb
clc
sbb
cld
or
fs
sbb
sub
icebp
xabort
xchg
sbb
stos
push
lcall
mov
add
lcall
lods
add
add
imul
ja
sbb
adc
add
push
scas
clc
xor
add
add
cwtl
mov
clc
repz
mov
std
mov
mov
clc
sar
cmc
repz
pop
dec
outsl
dec
sahf
sbb
clc
pop
cmc
sub
xchg
fnsave
shr
enter
add
imul
jmp
lock
mov
inc
clc
jns
add
addr16
pop
cmp
clc
pop
stc
adc
add
outsb
xchg
call
stos
cmp
add
shll
cmp
clc
cltd
sahf
add
add
mov
clc
in
arpl
add
push
add
mov
outsl
cmp
add
cmpsl
clc
jne
clc
idivb
lea
push
sar
add
add
and
add
popa
add
popa
add
mov
outsl
fs
cmp
clc
int
fsubl
add
dec
push
push
into
ljmp
add
sbb
or
push
clc
push
clc
dec
pop
and
cmp
xor
add
dec
ja
lock
add
add
pop
clc
notb
add
sbb
clc
mov
in
adc
add
lret
add
cld
in
cmp
jne
push
clc
out
sar
clc
mov
dec
push
jbe
mov
add
and
add
add
mov
out
sahf
push
add
pop
sahf
fimuls
std
jbe
jg
mov
add
add
inc
add
jp
into
fcmovne
rcrl
clc
test
add
fsubrs
add
clc
pop
sbb
clc
pop
sar
cs
add
cmp
outsb
xor
add
dec
push
push
clc
dec
in
bound
add
clc
sub
pushf
xchg
loopne
int
out
sti
or
or
add
fimull
lret
add
mov
adc
add
add
xbegin
ret
clc
xor
clc
mov
clc
fs
inc
clc
out
daa
clc
pop
cli
cltd
cli
xor
add
int3
loop
adc
add
stos
xbegin
add
pop
pop
cli
cld
jnp
clc
int3
adc
add
and
xor
add
movsb
clc
push
daa
clc
enter
fcomps
clc
into
jmp
add
bound
add
clc
cmp
add
in
cmp
add
dec
xchg
sarb
test
inc
add
push
insl
notl
in
rcl
add
add
xchg
popf
aas
nop
cmc
push
clc
sub
mov
add
add
xor
add
add
xor
add
push
or
add
mov
ficoml
add
or
cmpsl
clc
ror
repnz
mov
sbb
sarl
clc
add
clc
cmp
sahf
xor
add
clc
push
adc
xor
add
push
clc
daa
clc
xbegin
clc
xchg
lods
in
mov
clc
enter
movsl
clc
sub
clc
imul
clc
cmp
add
mov
push
bound
add
sbb
sub
add
fisttpll
cmp
clc
push
clc
sbb
adc
add
iret
arpl
add
cli
or
js
add
mov
mov
sub
clc
lcall
cld
not
sub
sbb
pop
clc
out
daa
clc
push
sti
push
add
loope
jp
cmp
inc
add
repnz
jne
push
add
dec
add
push
clc
jecxz
and
add
or
mov
jp
cmpsb
clc
aam
sub
aad
clc
pop
fs
stc
xrelease
icebp
enter
add
pop
cmp
cltd
cs
and
add
add
inc
add
mov
xor
lret
clc
xabort
clc
inc
clc
push
clc
cmp
xchg
and
out
negl
aaa
dec
sbb
or
pusha
add
add
add
lods
or
add
inc
add
jmp
clc
mov
pop
pop
clc
gs
sbb
add
cmpsl
clc
mov
xor
add
add
addr16
pop
outsl
imul
push
nop
shlb
add
add
add
das
push
add
add
cmp
add
add
stc
sahf
int
add
fisttpl
fsubl
add
push
aam
stos
repnz
int3
popl
lods
popa
add
xchg
fcmovu
in
lea
inc
add
dec
aam
mov
and
add
xchg
aaa
and
add
add
aas
repnz
stos
js
push
ljmp
dec
roll
add
pop
jmp
adc
repz
loopne
hlt
mov
dec
call
decl
or
aas
and
add
clc
out
aam
addr16
dec
cmp
movsl
clc
cmp
rorl
adc
add
push
clc
jae
add
cmc
xchg
lret
nop
scas
inc
clc
cmp
clc
sar
clc
mov
pop
dec
sbb
clc
lods
jbe
add
dec
push
mov
scas
adc
out
xchg
loop
pop
adc
add
add
jl
xor
add
clc
fs
ja
cmp
lods
sbb
pop
jns
mov
inc
add
scas
mov
clc
and
add
add
ret
add
push
add
cmp
sbb
add
aas
xchg
pop
std
daa
clc
scas
lods
cli
push
faddp
clc
inc
clc
cmp
mov
mov
clc
xor
add
or
sbb
cmp
xor
add
add
jns
cmp
or
clc
popf
pop
adc
add
add
clc
jbe
and
loope
dec
pushf
cli
or
add
mov
mov
clc
mulb
cmp
push
fisubrl
insl
sbb
clc
push
xor
add
clc
sbb
adc
add
mov
or
clc
lret
mov
leave
incl
add
clc
jno
pop
jno
add
shl
clc
add
add
daa
clc
xor
add
iret
std
and
add
int
xlat
loope
fstpl
add
clc
fildll
cmp
xchg
mov
enter
adc
add
jecxz
test
cmp
add
inc
add
shl
sub
in
add
cmp
adc
jg
clc
mov
add
dec
jb
add
xchg
in
dec
add
add
jl
gs
add
add
clc
cmp
mov
pushf
pop
inc
add
add
add
test
mov
jmp
adc
add
rclb
add
inc
add
push
test
test
xchg
cmp
jo
add
fstpl
dec
inc
add
xabort
aam
mov
add
add
loop
pop
hlt
pop
jl
clc
cmp
clc
inc
clc
sub
mov
out
xor
clc
mov
sti
leave
sbb
add
mov
clc
pop
aas
cmp
fwait
xor
add
add
add
and
add
cmp
hlt
inc
add
in
and
add
add
adc
add
dec
ss
mov
cmp
pop
mov
lret
into
cli
inc
add
out
inc
add
sub
add
insb
fst
adc
dec
add
mov
cwtl
data16
add
add
shr
rcll
push
insl
sbb
pop
and
add
add
aaa
imull
fstpt
fs
ss
add
add
stc
dec
das
dec
fists
cmpsb
clc
xchg
pop
sbb
cmp
iret
mov
xor
clc
cmp
add
jle
jno
add
pop
cmp
add
pop
clc
push
clc
sub
or
adc
add
add
sbb
jbe
push
clc
iret
cmp
cwtl
or
mov
add
lock
or
cmpsb
clc
xor
fbld
push
adc
add
bound
add
add
and
pusha
add
xchg
xchg
aas
cmp
mov
test
clc
or
jge
fmull
clc
dec
push
clc
jno
add
dec
out
push
add
and
add
gs
test
lcall
insl
nop
jb
add
jl
imul
add
sub
add
cmp
inc
add
jg
daa
clc
ljmp
clc
dec
sbb
push
pushf
xlat
sbb
add
mov
outsl
in
xbegin
add
cmp
pusha
add
jmp
mov
inc
add
cmp
add
clc
mov
xchg
adc
add
mov
repz
add
xor
add
adc
add
icebp
jno
add
pop
nop
adc
add
daa
clc
xchg
jg
clc
fucomip
and
stos
ss
xchg
add
test
sub
add
clc
shl
sub
mov
xchg
dec
in
fnsave
add
mov
lods
addr16
mov
add
enter
push
clc
pop
leave
jle
stos
jmp
clc
and
add
inc
clc
test
add
divl
enter
fcomps
and
clc
int
cmp
clc
mov
stos
pop
insl
jne
pop
xor
add
add
jno
add
pop
or
clc
jg
clc
popa
add
jmp
rcll
add
add
and
add
xbegin
xor
jp
add
and
clc
data16
imul
add
xor
add
in
ljmp
int3
and
je
sbb
add
or
add
test
je
add
into
arpl
add
xbegin
pop
cmp
mov
pop
xbegin
and
add
and
ljmp
sar
sar
push
mov
lahf
sub
cli
ja
add
and
add
lahf
cltd
xchg
xbegin
sbb
adc
add
add
cmpsb
clc
xchg
fsubrs
adc
mov
add
xchg
aam
mov
popf
dec
fisubrs
pop
mov
data16
repnz
lcall
lahf
or
push
clc
ds
repz
mov
loope
push
jbe
adc
add
clc
not
notb
add
pop
lea
add
js
inc
clc
inc
clc
and
add
clc
fmull
pop
cmp
clc
bound
add
and
add
ficomps
push
into
movsl
clc
sub
aam
add
fnsave
clc
aam
add
lcall
dec
adc
add
ss
add
add
pop
imul
pushl
cmp
nop
ror
push
add
sar
or
inc
clc
pop
inc
clc
mov
cmp
clc
test
stc
rcrb
fs
xchg
std
cmpsl
clc
dec
lret
or
add
and
add
add
stos
xlat
mov
lret
clc
clc
fidivs
mov
add
add
cmp
hlt
mov
sar
add
out
cmpsl
clc
cmp
push
imul
clc
mov
add
in
seta
test
or
cmpsb
clc
add
add
stc
nop
in
sbb
fsubr
dec
outsl
mov
popa
add
js
idivb
clc
inc
add
jbe
sbb
add
ljmp
add
loop
and
add
cmp
scas
lcall
loopne
in
hlt
pop
js
sbb
clc
sub
adc
add
add
push
clc
mov
add
mov
add
js
mov
addr16
ficomps
jge
clc
pop
dec
mov
ffreep
clc
cld
hlt
push
mov
add
add
push
mov
mov
ret
clc
add
add
or
lret
jmp
add
lahf
gs
stos
popf
sub
add
add
fcmovnu
dec
mov
inc
clc
mov
lea
add
arpl
add
add
addr16
and
int
add
clc
sbb
add
clc
add
add
add
and
add
jmp
add
cmpsl
clc
fisttpl
sbb
add
adc
add
add
add
in
jmp
jmp
arpl
add
add
mov
clc
mov
add
xor
add
mov
push
add
dec
and
add
add
add
dec
negl
dec
loope
mov
add
add
cltd
dec
add
add
test
add
add
lret
test
inc
clc
call
add
jmp
cmp
clc
hlt
jmp
jnp
add
xchg
mov
pop
dec
sbb
in
out
and
add
clc
push
jo
add
cmpsl
clc
sar
mov
sbb
inc
add
sbb
jmp
push
clc
popa
add
push
cmpsl
clc
pushf
pop
jmp
add
xor
add
mov
adc
mov
dec
loop
push
clc
mov
clc
clc
and
cli
das
push
add
pushf
insb
add
add
bound
add
add
add
mov
ljmp
jo
add
movsl
clc
leave
xbegin
inc
clc
jne
clc
jae
add
cli
mov
adc
or
clc
out
shll
add
in
pop
xor
clc
sbb
add
add
clc
mov
mov
mov
push
add
dec
xchg
pop
dec
and
add
clc
dec
cmpsl
clc
inc
clc
add
add
clc
dec
cmp
ret
clc
xabort
xchg
pop
in
test
add
add
repz
rclb
add
clc
or
sbb
clc
loop
in
pop
loope
lcall
add
adc
pop
jle
add
jno
add
xbegin
add
int
lcall
popa
add
daa
clc
push
add
popf
popa
add
mov
add
pop
jo
add
clc
sbb
out
cmp
gs
and
add
icebp
stc
jbe
es
ret
clc
test
xor
add
add
push
add
js
sbb
add
jp
repz
add
xchg
call
push
add
mov
push
pop
in
dec
jne
test
cmpsl
clc
jae
add
pop
clc
jle
movaps
ret
pusha
add
sub
push
arpl
add
test
lea
add
lock
hlt
and
fisubrl
clc
ljmp
and
add
sub
clc
idivb
mov
fistpll
add
outsb
mov
cli
fiaddl
clc
mov
or
push
clc
push
clc
in
das
sub
add
lret
mov
in
scas
call
loopne
lock
add
push
fmull
clc
jle
add
mov
in
gs
je
jg
shl
clc
mov
clc
sbb
pusha
add
or
inc
add
or
jl
cmp
mov
clc
call
movsb
clc
lcall
cmp
adc
add
fwait
aas
rep
xchg
pop
clc
inc
clc
cmp
movsl
clc
inc
clc
dec
shlb
add
mov
or
es
inc
clc
and
or
push
add
mov
add
frstor
add
out
lret
mov
aaa
loop
and
add
add
and
add
nop
movsl
clc
jbe
clc
mov
clc
xchg
call
stc
mov
test
das
inc
clc
out
movsb
clc
cmpsl
clc
fimuls
clc
adc
add
sub
in
ret
jmp
clc
xabort
dec
cld
pop
lock
inc
add
mov
add
jo
add
pop
in
or
add
pop
clc
xchg
bound
add
mov
icebp
pop
sub
add
jae
add
ret
clc
pop
dec
xabort
lods
pop
add
add
movsb
clc
cld
lahf
jae
add
test
add
push
pop
icebp
fs
and
add
negb
rcll
add
clc
or
xlat
leave
outsl
mov
jb
add
add
test
outsb
out
sub
sbb
push
xchg
inc
clc
add
add
add
in
pop
add
clc
mov
add
add
sub
clc
jo
add
add
mov
add
mov
xor
add
mov
clc
sbb
add
pop
inc
add
add
repnz
add
xchg
adc
add
clc
sar
clc
repz
int
clc
cld
sub
jp
stos
sbb
add
clc
sbb
clc
mov
xor
cltd
scas
aas
addr16
imulb
add
add
xchg
or
mov
add
push
frstor
lret
shr
xabort
mov
clc
cmp
add
pop
pop
test
cmp
jl
add
add
xchg
jmp
data16
xabort
and
fiadds
push
mov
out
xchg
adc
add
xbegin
add
xchg
test
jns
clc
mov
add
cmp
icebp
mov
mov
sar
add
pop
xchg
ss
mov
or
add
ret
clc
push
add
xor
add
test
cmp
xchg
pusha
add
mov
clc
hlt
loopne
insl
test
lock
add
add
test
mov
cwtl
xor
add
insl
imul
add
clc
xchg
mov
cmp
dec
mov
xchg
dec
mov
pop
aad
clc
push
add
mov
mov
cmp
das
mov
xchg
xchg
push
dec
mov
clc
push
add
jp
cmp
xor
cmp
push
add
std
sbb
pop
mov
mov
jnp
clc
adc
clc
mov
clc
data16
xchg
sub
add
popa
add
jne
clc
cwtl
addr16
add
pushf
dec
ficoml
add
insl
popf
mov
aad
or
clc
mov
add
add
add
sub
clc
adc
add
and
add
dec
pop
clc
push
pusha
add
nop
jns
clc
jmp
cmp
fisubrs
add
add
mov
add
enter
add
js
clc
fsubrl
inc
clc
fnstcw
hlt
pop
popf
dec
mov
add
jae
add
add
jno
add
in
xabort
clc
xor
add
ret
clc
bound
add
or
pop
lahf
fsubs
clc
enter
clc
in
xchg
mov
clc
cmp
cmp
clc
int3
cmp
inc
add
and
add
jecxz
xor
add
add
cmp
clc
jmp
add
jmp
data16
xchg
pop
test
popf
xchg
std
add
cmp
add
cmc
push
jmp
clc
xor
add
stos
adc
clc
out
mov
xor
push
xlat
add
add
imul
stos
mov
xbegin
add
cmc
add
jge
in
cs
add
add
sbb
lock
clc
adc
add
xor
add
ja,pt
clc
int
mov
cmc
and
add
fldenv
clc
inc
clc
out
loopne
pop
xchg
icebp
arpl
add
pop
loope
aam
adc
add
xchg
sub
mov
add
add
stc
add
add
add
and
add
fsubrs
sbb
imul
cmp
clc
icebp
sar
push
mov
cli
loope
fadd
clc
in
imul
add
fnstsw
bound
add
add
add
cld
out
sbb
inc
add
cmp
xbegin
bound
add
add
clc
jne
xchg
mov
add
mov
add
add
clc
sbb
mov
add
and
add
add
add
fs
loop
cmp
cltd
cli
or
add
add
clc
dec
cmpsb
clc
dec
sub
pushl
sub
jno
add
jne
insb
jns
ds
clc
out
pop
lret
inc
clc
jne
pusha
add
rcrl
sub
add
imul
mov
clc
fisttpl
imul
pop
or
int3
mov
push
xor
loopne,pt
ret
clc
mov
jle
cmp
cmp
dec
test
sub
mov
ljmp
push
movsb
clc
clc
test
dec
cmp
outsb
xor
push
cmp
femms
sbb
mov
mov
add
adc
add
ja
not
aas
jmp
addr16
stos
or
cli
cmpsl
clc
mov
mov
mov
add
add
lahf
movsl
clc
mov
into
mov
push
add
lods
shr
mov
add
push
clc
dec
test
or
sub
clc
jle
clc
xor
add
mov
mov
lea
lea
add
mov
add
test
sub
add
add
add
dec
dec
mov
mov
clc
and
add
dec
pop
notrack
clc
mov
popf
loop
lcall
add
add
xor
add
adc
out
sub
add
clc
cmp
add
aaa
leave
xor
add
xchg
mov
mov
push
mov
add
loopne
mov
mov
daa
clc
jb
add
leave
push
add
sub
pop
xor
clc
xchg
mov
clc
fisttps
mov
add
out
or
add
add
add
or
push
cwtl
lret
enter
dec
xor
add
xchg
cmp
rcrb
xchg
jb
add
cli
mov
sub
xchg
jmp
clc
cs
clc
rol
clc
inc
add
xchg
xabort
clc
lret
sub
add
aad
adc
add
add
push
mov
add
jb
add
loop
and
add
int3
mov
clc
xchg
imul
xor
add
add
add
cmp
clc
mov
stos
cmp
pop
xabort
clc
xor
clc
pusha
add
je
inc
add
adc
add
or
push
clc
cmp
clc
pop
clc
sahf
mov
add
mov
cmpsl
clc
and
add
stos
cmp
clc
aad
clc
lock
adc
add
xor
add
clc
fxch
mov
sub
pushf
push
clc
jl
clc
repz
lods
popa
add
mov
push
add
addr16
gs
inc
add
xor
add
xchg
fisttpll
dec
es
lret
insl
out
add
pop
adc
add
aam
push
lret
out
sbb
or
add
aad
clc
jbe
clc
mov
mov
or
mov
clc
sar
clc
add
sbb
xchg
add
add
stos
pop
clc
fwait
cmp
dec
out
in
push
add
in
push
add
cltd
mov
fildl
and
clc
repnz
push
add
fidivrs
and
add
clc
sbb
fwait
jecxz
rolb
xchg
xchg
rclb
jns
push
add
jmp
clc
adc
add
clc
push
add
xchg
test
jnp
dec
int3
insb
in
shl
xchg
jbe
add
in
cltd
mov
add
imul
clc
push
sar
adc
add
add
add
add
dec
fdivrs
clc
jmp
lret
sti
lods
cli
fsubl
clc
xor
add
adc
add
push
mov
clc
outsl
jge
clc
jl
insl
mov
loop
or
cwtl
ss
clc
rorl
out
xor
add
add
imul
imul
and
js
mov
mov
ss
add
jo
add
mov
xlat
mov
sub
sbb
add
dec
aad
xor
int
outsb
dec
mov
xchg
xchg
jmp
lods
mov
xor
add
dec
add
add
mov
push
ds
push
lea
xor
add
clc
jecxz
jns
sub
pop
mov
mov
clc
ret
clc
testb
loope
xchg
in
mov
and
jge
mov
add
in
xor
inc
clc
mov
ss
testl
add
xor
add
sar
sahf
pop
loopne
ljmp
adc
add
push
sub
add
mov
mov
jae
add
ret
clc
cmp
xor
add
mov
xchg
fwait
cmp
in
cs
adc
clc
fadds
ucomiss
xor
add
add
add
clc
add
popa
add
stos
mov
clc
jmp
jle
inc
add
in
cli
add
add
loop
pop
jne
add
jecxz
xor
add
add
add
adc
add
nop
jo
add
cli
dec
add
popf
add
add
fcompl
clc
jnp
cs
cmp
scas
pushf
fld1
inc
clc
dec
dec
xor
add
add
xchg
pop
pop
lret
adc
dec
add
jge
clc
bound
add
clc
stc
add
add
fisubrl
clc
cmp
pusha
add
jmp
sbb
inc
clc
mov
and
add
hlt
arpl
add
iret
mov
dec
xor
add
add
xor
add
fcomp
xchg
adc
add
add
packsswb
add
xor
add
add
push
ror
sub
add
add
mov
add
mov
ret
inc
add
lahf
cwtl
xor
add
add
add
clc
in
shl
daa
clc
pop
es
adc
add
popf
fcmovb
clc
lea
jne
clc
stc
cli
jmp
daa
clc
cmp
int
add
dec
jo
add
cmp
clc
push
add
imul
imul
shrl
std
into
jl
cmp
inc
clc
pop
in
cmp
clc
sbb
clc
lods
xor
add
add
mov
dec
push
xchg
or
clc
aad
add
dec
sub
cmpsl
clc
sbb
clc
clc
dec
xbegin
clc
aam
mul
clc
cltd
sbb
rcll
test
xor
add
or
add
ret
leave
add
add
xor
add
add
test
dec
mov
lcall
xlat
xor
pop
mov
je
std
add
out
ret
jle
clc
roll
mov
cmp
mov
mov
jne
jp
clc
dec
cltd
sbb
clc
jge
repz
cwtl
nop
mov
jo
add
mov
rorl
loope
or
loopne
sbb
mov
outsb
lock
xor
clc
clc
sub
add
add
add
add
xchg
push
sbb
add
mov
test
icebp
test
dec
and
add
clc
push
add
jns
inc
add
stc
xor
mov
ljmp
clc
gs
into
push
out
mov
sbb
dec
jns
clc
mov
dec
clc
iret
dec
push
add
push
clc
or
in
xchg
pop
clc
clc
cmp
add
dec
sbb
jge
sub
test
sahf
lret
dec
mov
add
aaa
inc
clc
cmp
outsb
pop
sub
xchg
and
add
add
mov
pop
mov
and
add
es
ss
add
clc
movsl
clc
mov
clc
cmp
test
int
mov
fnstenv
add
cmp
dec
mov
mov
add
fstl
loope
data16
cmp
data16
pop
adc
add
and
add
bound
add
clc
lret
jne
jne
add
jnp
sar
clc
call
clc
loop
and
add
add
into
adc
add
bound
add
adc
and
add
xchg
xor
add
mov
push
adc
add
add
xchg
pop
clc
xchg
jae
add
add
add
or
jecxz
mov
xor
add
pop
icebp
aas
jne
xchg
mov
cmc
jae
add
clc
and
in
jp
dec
or
clc
jne
cmp
push
clc
fstpl
add
add
clc
mov
add
shrb
repnz
mov
add
pushf
repz
inc
add
xor
add
scas
loop
loopne
adc
add
pop
insl
repz
clc
nop
mov
in
insb
push
clc
xchg
loop
sar
mov
dec
add
add
fdivr
in
nop
pop
push
jecxz
fbld
fiaddl
iret
pusha
add
in
into
lcall
and
add
or
stos
push
xbegin
mov
mov
addr16
inc
clc
repnz
add
dec
or
pop
cltd
ret
clc
clc
push
jns
inc
add
mov
inc
clc
sbb
in
xor
add
jnp
cld
popa
add
or
push
xabort
mov
clc
fldt
add
xor
add
je
fbstp
fdivrp
inc
clc
sahf
mov
mov
push
int
pop
sbb
pop
clc
dec
mov
push
adc
add
add
fcoms
mov
xor
add
pop
clc
fldz
out
cld
add
add
add
test
cmp
clc
sbb
clc
cld
jbe
clc
adc
add
movsl
clc
call
xchg
pop
xor
add
add
add
fmul
jg
pop
fbstp
pop
clc
test
movsb
clc
pop
xchg
int3
cmp
int3
push
add
push
mov
pop
cmp
imul
clc
dec
icebp
mov
push
mov
add
pop
repnz
clc
jnp
push
mov
cmc
sub
add
pop
clc
bound
add
add
insl
xlat
fcompl
lea
clc
and
add
add
cli
mov
clc
mov
clc
ja
mov
mov
lock
push
sbb
dec
adc
fisubrs
movsl
clc
bound
add
jns
clc
repnz
sar
arpl
add
loope,pt
sbb
push
push
add
out
pop
inc
clc
adc
add
lods
add
adc
add
out
lcall
pop
adc
add
cmpsl
clc
repz
and
add
cmp
mov
push
mov
cmpsb
clc
popa
add
sbb
mov
add
cmp
add
mov
clc
push
add
mov
fdivl
add
push
mov
xabort
mov
sub
clc
sub
clc
add
add
push
add
movsb
clc
inc
clc
jl
pop
push
clc
mov
push
xor
add
add
jb
add
clc
and
add
mov
add
gs
aaa
add
add
clc
loope
popl
add
enter
fxch
cmp
mov
fsts
add
ljmp
int
or
and
stos
push
push
imul
add
mov
sbb
clc
clc
loope
sbb
add
lcall
cmp
xchg
fdiv
insb
cmp
clc
lcall
mov
add
add
lods
stc
push
add
cs
add
cmp
add
mov
fisttpll
stc
jbe
clc
ljmp
add
xor
add
dec
dec
pushf
cwtl
push
int
mov
jne
cmp
xchg
adc
add
cmpsb
clc
pop
or
cld
push
insl
test
sub
aam
pop
push
add
ds
push
sbb
clc
push
addr16
pop
out
pop
xlat
xbegin
fisubs
xchg
scas
sbb
xor
add
or
push
mov
add
ja
jle
clc
dec
pop
jp
loop
pminsw
stc
lods
adc
pop
lods
jne
das
mov
add
stos
cmpsb
clc
and
add
aad
repz
leave
popa
add
dec
in
add
add
pop
into
sub
cmp
cmpsb
clc
inc
add
xor
add
push
add
add
add
sbb
clc
sbb
pushf
sbb
clc
js
out
mov
daa
clc
mov
pop
clc
fiaddl
pop
and
or
dec
sar
xlat
scas
push
add
and
add
clc
jecxz
pop
adc
add
mov
clc
lcall
clc
xor
add
mov
sar
push
cs
cmp
clc
jo
add
or
add
out
imul
mov
test
int3
movsl
clc
sub
in
mov
cli
negb
add
lods
inc
add
jmp
push
clc
fcos
addr16
fisttpll
mov
clc
jno
add
or
clc
mov
xchg
xlat
data16
adc
add
or
xor
add
xor
add
out
dec
add
push
add
ret
clc
dec
cmc
lcall
cmp
add
mov
add
stc
and
add
add
ss
in
test
clc
int3
xchg
je
adc
add
clc
test
pop
or
push
std
sbb
cmp
lock
mov
add
mov
xchg
mov
clc
mov
add
inc
add
in
mov
dec
cmpsl
clc
jns
test
adc
add
xor
in
stos
loop
ljmp
xchg
mov
dec
add
add
call
stos
or
cmpsl
clc
daa
clc
ds
sar
imul
lock
add
fadds
xor
add
inc
clc
sar
jbe
clc
xchg
xor
sub
add
out
cmp
clc
mov
test
enter
jle
add
negb
stos
xlat
xor
dec
insb
inc
clc
mov
add
sar
clc
jb
add
std
shr
mov
push
clc
jnp
pop
jno
add
sbb
mov
js
add
insl
push
lcall
hlt
fcompl
into
iret
pop
cmpsl
clc
loope
pop
ss
add
cmp
add
add
mov
add
dec
push
gs
jbe
ja
cmp
xor
add
clc
mov
xbegin
clc
inc
add
jg
clc
push
add
fstl
add
or
fs
cmp
mov
add
out
adc
add
into
dec
jl
sbb
add
add
clc
repnz
add
outsl
mov
add
add
fiaddl
add
add
lret
clc
cmp
jb
add
clc
stos
aad
dec
int3
clc
dec
bound
add
mov
outsb
fsubrs
cmpsb
clc
in
mov
cmp
clc
add
add
add
sbb
adc
add
add
push
clc
negl
aam
bound
add
fnstenv
stc
jmp
clc
arpl
add
es
sbb
clc
xbegin
add
rcr
inc
add
push
clc
mov
clc
mov
clc
adc
add
add
leave
cmp
clc
enter
add
add
in
sbb
dec
push
cmpsb
clc
jmp
js
rcrl
clc
mov
add
mov
push
mov
and
add
clc
fimuls
inc
add
jl
clc
in
mov
sahf
ficomps
cmp
add
sar
add
or
loopne
mov
cmp
clc
mov
shll
pop
imul
clc
insb
mov
add
sahf
cld
cmp
clc
mov
add
xor
arpl
add
call
add
cli
sbb
dec
ds
test
clc
leave
and
add
ret
mov
repz
add
cmp
mov
out
shl
clc
insb
leave
aad
pop
roll
add
cmp
add
cmp
xor
add
clc
jno
add
data16
cmp
jl
mov
add
ds
mov
fidivl
mov
and
add
add
mov
jecxz
xchg
push
clc
dec
add
add
clc
movsl
clc
enter
lods
push
pop
sub
cmpsl
clc
mov
negb
clc
cwtl
fisttpll
xchg
clc
xchg
jmp
clc
movsl
clc
pop
cmp
jge
mov
add
jecxz
sarb
add
push
xor
add
inc
clc
test
je
aas
dec
and
add
xor
add
sar
clc
and
add
rorb
mov
add
test
cs
xabort
in
xchg
mov
add
clc
in
cmp
cmp
add
mov
clc
cmpsb
clc
pop
jle
arpl
add
mov
clc
mov
xchg
aas
jns
push
fs
icebp
mov
jnp
test
leave
loope
imul
cmp
add
push
add
pop
je
add
adc
add
clc
in
pop
clc
and
add
clc
fisubl
lret
add
clc
jl
push
dec
jb
add
clc
fsubs
push
add
mov
clc
mov
jo
add
clc
sub
scas
jbe
add
mov
add
int
popa
add
gs
aam
add
test
mov
popa
add
xor
xchg
inc
clc
sbb
adc
add
clc
fcmovnb
clc
mov
iret
scas
stos
dec
pop
mov
add
xchg
pushf
int
mov
jle
sahf
repz
pop
clc
cmp
pop
and
clc
cmpsl
clc
ret
clc
cwtl
jae
add
add
add
cmp
clc
or
psubusw
add
clc
out
jp
clc
out
push
add
push
sbb
imul
loope
xor
or
add
insb
mov
xor
pop
add
add
add
es
aaa
in
mov
mov
push
push
add
je
push
test
cltd
aas
nop
mov
clc
scas
adc
fs
sti
jo
add
in
xchg
sar
push
add
add
sub
dec
pop
call
lods
mov
mov
push
add
dec
xbegin
add
xlat
pop
clc
mov
and
add
cmp
popf
xchg
or
out
xor
add
in
out
pop
and
add
add
add
clc
and
arpl
add
std
jecxz
sub
leave
pushf
pop
dec
cltd
adc
clc
adc
add
pop
lret
stc
stc
xor
add
outsb
js
add
aad
clc
daa
clc
cs
jae
add
mov
popa
add
filds
add
mov
mov
add
idiv
xchg
aad
jbe
aad
or
add
adc
add
add
btc
mov
sub
pop
dec
out
insl
inc
clc
xor
cmp
out
test
daa
clc
jmp
add
xor
add
add
xabort
add
lea
adc
add
int3
aaa
mov
clc
pop
cmp
add
outsb
insb
pop
push
add
add
xor
add
insl
push
clc
aam
clc
sti
stc
pop
mov
mov
mov
dec
push
repz
add
add
add
add
mov
call
clc
jmp
jecxz
pusha
add
mov
adc
add
add
ds
or
je
clc
loop
sar
push
fwait
xbegin
inc
clc
inc
clc
mov
mov
add
mov
mov
cmp
loope
inc
add
cld
inc
add
pop
gs
cmc
andnps
loopne
bswap
std
mov
add
mov
clc
pop
mov
cmp
scas
fstpl
mov
movsb
clc
nop
insb
jne
clc
xor
add
add
addr16
xchg
mulb
add
add
inc
clc
add
jae
add
add
jne,pn
add
sub
dec
xchg
xchg
cmp
jmp
mov
add
add
dec
mov
dec
pop
scas
mov
xor
add
add
mov
adc
dec
pop
mov
clc
push
clc
mov
pshufw
repnz
bound
add
add
cmpsl
clc
push
mov
clc
sub
mov
out
jb
add
test
je
adc
push
out
cmpsl
clc
clc
movsl
clc
push
lea
add
pop
mov
add
sub
add
jno
add
add
mov
clc
stos
jne
mov
clc
jmp
ficoml
sub
mov
cmp
mov
jae
add
icebp
mov
push
add
popa
add
repnz
mov
add
in
std
mov
call
add
adc
add
add
push
mov
add
clc
cmp
clc
loope
pop
push
notb
clc
test
inc
add
push
mov
add
and
add
mov
outsb
pop
and
add
dec
daa
clc
ror
xchg
push
add
fwait
or
push
add
jmp
clc
jbe
inc
add
popf
add
add
add
mov
jb
add
clc
clc
xchg
lcall
cmp
mov
data16
sbb
clc
fistps
mov
clc
ret
clc
cmp
mov
sub
ds
add
cwtl
pop
push
add
cmp
popf
add
add
clc
jo
add
mov
add
stc
mov
add
bound
add
loop
xchg
push
faddl
clc
dec
sti
push
movsl
clc
cs
clc
js
arpl
add
push
jmp
add
add
dec
movsb
clc
sar
addr16
lods
adc
data16
lcall
clc
fdiv
daa
clc
sub
sar
mov
clc
fsub
clc
lock
add
addr16
push
arpl
add
add
test
cmp
sbb
movsb
clc
mov
mov
mov
inc
clc
push
adc
add
cmp
cpuid
clc
das
push
mov
push
add
sar
outsb
xchg
int
mov
xor
loop
repz
adc
stos
out
js
jg
pop
xabort
sti
jl
das
aaa
out
adc
imul
clc
and
add
push
cwtl
imul
or
xbegin
push
and
add
or
clc
test
push
add
xchg
xchg
or
clc
push
rclb
add
sub
xor
mov
mov
add
test
mov
clc
xchg
dec
dec
pop
pushf
add
add
clc
push
fs
push
scas
mov
xor
test
jl
push
out
loopne
cmp
add
ret
xchg
add
add
add
cmp
clc
lcall
and
add
add
je
gs
mov
outsb
aaa
out
test
mov
xabort
inc
clc
aad
mov
movsl
clc
sub
clc
cs
push
jge
mov
inc
clc
push
push
xabort
clc
shlb
clc
stos
in
add
add
add
stc
sbb
clc
add
add
in
insb
push
sub
test
ret
clc
imul
enter
sbb
add
icebp
jnp
mov
mov
clc
insb
rolb
jmp
clc
in
ss
shll
clc
mov
or
xlat
push
das
insb
mov
clc
out
dec
insl
mov
or
mov
xbegin
shl
clc
jb
add
test
dec
cmp
or
add
mov
shlb
xchg
xchg
dec
inc
add
lret
mov
jge
gs
pop
aam
es
mov
add
and
xor
add
data16
mov
mov
mov
clc
mov
dec
out
mov
je
add
xchg
mov
push
and
add
mov
ftst
clc
std
test
es
xchg
pop
fdivp
jno
add
in
cmp
add
mov
mov
xor
daa
clc
inc
add
lahf
arpl
add
packsswb
add
push
clc
dec
pop
ja
inc
clc
test
add
cmc
jbe
clc
pop
add
add
add
pop
clc
insb
outsl
bound
add
cmc
ljmp
add
cmp
clc
movsl
clc
rcrb
fisubs
add
clc
or
fdivrs
lods
pop
mov
leave
daa
clc
xlat
out
test
add
push
add
sar
mov
clc
int
clc
or
sub
add
mov
push
icebp
dec
iret
leave
sbb
add
dec
adc
aaa
sbb
add
xabort
jnp
add
mov
clc
addr16
inc
add
sbb
popf
add
add
stc
nop
mov
test
insl
lret
sbb
jle
repnz
clc
movsb
clc
push
add
pop
clc
add
add
add
ds
xor
add
clc
sub
cmp
repz
hlt
xabort
pop
adc
jne
clc
mov
clc
add
sar
xchg
xor
add
add
clc
inc
add
dec
mov
das
jns
in
cmp
fstpl
xor
add
add
xchg
dec
push
cmpsl
clc
and
add
dec
arpl
add
shlb
scas
in
mov
clc
jmp
inc
add
mov
divb
add
add
add
add
add
add
fstpt
add
jne
jae
add
mov
repnz
scas
leave
mov
hlt
jge
clc
mov
aad
clc
mov
fld
clc
push
loopne
loop
jo
add
sarl
es
aad
jno
add
js
sbb
dec
jb
add
clc
add
add
sti
das
sbb
dec
mov
clc
pop
aaa
jo
add
cwtl
xor
add
clc
data16
jae
add
clc
mov
dec
imul
ficomps
xor
clc
mov
imul
leave
inc
add
sbb
add
mov
clc
lcall
jecxz
jno
add
inc
add
and
add
cmp
bound
add
push
add
cmp
clc
pop
sarb
pop
out
repnz
add
add
cmp
add
clc
jmp
inc
clc
mov
push
push
int3
jns
mov
sbb
add
in
jne
loopne
xchg
loop
jnp
movsl
clc
pop
xchg
xchg
adc
clc
mov
mov
add
add
add
repz
push
add
dec
push
das
shrb
loopne
or
bound
add
xchg
or
add
adc
ret
clc
jg
add
fwait
push
clc
sti
mov
clc
cmp
add
cmp
add
cli
jp
clc
pop
pop
add
add
lret
mov
pop
dec
in
mov
clc
jno
add
push
push
jno
add
nop
adc
add
lock
mov
clc
imul
add
inc
add
shrl
addr16
sub
fs
adc
add
push
clc
xchg
movsb
clc
cmp
cmp
mov
popf
xchg
test
clc
sub
test
negb
test
add
jne
ljmp
xabort
sbb
repz
jl
clc
cmp
in
add
add
add
add
add
clc
add
jae
add
aam
fs
sub
sbb
mov
scas
icebp
popa
add
call
addr16
jo
add
pop
sbb
add
iret
cmp
dec
adc
add
call
xchg
cs
add
xor
add
mov
mov
ss
mov
clc
mov
loopne
outsl
sbb
add
mov
in
popf
sbb
clc
leave
mov
push
in
pop
cltd
lret
add
clc
clc
imul
nop
out
lea
add
and
add
add
add
cmp
add
mov
fwait
push
jns
add
clc
fnsave
jno
add
fs
imul
jmp
decl
mov
push
add
data16
xchg
out
ds
clc
xor
js
add
fs
or
call
fsubl
mov
rep
stos
sbb
daa
clc
jbe
add
push
or
imul
mov
icebp
mov
add
jnp
rcrl
sub
out
ljmp
add
pop
cmpsb
clc
mov
add
cwtl
lret
add
or
clc
fldt
jbe
jl
clc
aam
cwtl
int
clc
rorl
clc
dec
bound
add
clc
dec
mov
add
xchg
out
sti
out
repnz
add
jbe
inc
clc
xchg
nop
cmpsl
clc
pushf
adc
add
ret
clc
pop
clc
mov
cltd
jecxz
cmp
add
xchg
in
mov
add
in
imul
shl
clc
test
add
imul
sbb
mov
jne
dec
dec
pop
gs
mov
je
clc
clc
mov
out
aas
xor
add
xchg
pop
daa
clc
dec
scas
push
lahf
ret
stos
cwtl
out
pop
xchg
pop
adc
add
add
clc
ss
clc
sub
mov
add
xchg
in
push
inc
add
xor
add
sub
clc
pop
iret
scas
call
add
mov
jl
mov
clc
jae
add
add
xchg
mov
mov
jle
clc
xchg
aam
clc
jg
add
add
cmp
fldenv
clc
inc
add
ret
dec
mov
add
push
inc
clc
filds
inc
add
sub
rep
cmp
add
lret
popf
fldcw
jb
add
addr16
dec
lcall
clc
jns
fmuls
add
xchg
sub
popf
lret
add
push
add
pop
clc
or
sub
pop
ficoms
sub
add
clc
inc
clc
cmp
jle
cmc
mov
push
add
arpl
add
xchg
dec
push
clc
or
xlat
sbb
aad
jne
xchg
mov
add
add
add
or
clc
mov
clc
movsl
clc
scas
jmp
ljmp
push
mov
inc
add
popa
add
inc
add
sar
clc
or
pop
inc
clc
out
jno
add
fucomi
pop
or
sahf
mov
loop
lea
mov
clc
stos
mov
add
movsl
clc
sbb
xor
add
data16
lss
jne
add
dec
ret
clc
popf
repz
mov
clc
clc
test
test
dec
fistl
add
data16
cmp
clc
loop
push
xchg
cltd
clc
inc
add
push
sub
add
jns
rsm
or
clc
lock
add
inc
clc
pop
imul
scas
insl
stos
sar
add
adc
add
add
push
add
cmp
add
and
add
cmpsl
clc
cmp
es
stc
jmp
stos
sar
xchg
mov
pop
insb
aam
dec
out
movsb
clc
ss
add
ret
clc
cmp
add
jb
add
jo
add
es
inc
clc
add
add
xabort
clc
clc
es
sarl
sbb
clc
cld
aaa
rcrb
adc
in
adc
clc
mov
clc
test
add
mov
arpl
add
loopne
xchg
mov
sbb
je
mov
clc
out
pop
mov
das
scas
faddp
clc
jmp
xchg
int
cmp
push
add
xor
add
dec
push
clc
ljmp
jb
add
add
or
mov
jecxz
mov
test
add
nop
popf
sub
js
add
add
aas
test
cltd
inc
add
add
lock
sti
out
add
add
jecxz
clc
xchg
xor
dec
cmp
add
adc
add
adc
add
clc
and
clc
setne
and
clc
add
add
clc
lret
jmp
push
inc
clc
arpl
add
push
clc
xor
add
adc
add
imul
stc
gs
js
shl
clc
negb
dec
mov
add
add
shlb
add
add
aad
add
dec
and
add
add
jmp
clc
in
stos
dec
cmp
clc
in
clc
fwait
pop
and
add
add
stos
daa
clc
push
cs
dec
arpl
add
mov
in
aam
mov
repnz
aas
and
add
mov
push
add
push
clc
jl
add
aad
clc
add
push
add
adc
add
clc
inc
clc
enter
add
popa
add
fs
lea
jb
add
clc
outsb
ret
clc
mov
ret
clc
bound
add
add
adc
add
or
mov
add
fwait
data16
pop
xor
add
clc
icebp
out
ds
sbb
sub
add
jg
xchg
mov
mov
adc
add
add
add
or
das
jmp
sbb
push
xchg
adc
add
mov
out
fistpll
add
pop
inc
add
sbb
adc
add
xor
add
clc
lret
mov
and
add
outsl
sub
fcmovnbe
repnz
ljmp
mov
pop
mov
add
insb
loope
movsl
clc
push
mov
rcrb
aad
lock
adc
add
mov
insl
xchg
mull
push
add
sbb
add
inc
add
sar
add
add
clc
test
test
in
or
add
loope
lcall
xor
add
popf
negb
clc
dec
movsb
clc
pop
pop
test
inc
add
push
bound
add
add
push
add
cmp
add
add
insl
xchg
and
data16
scas
mov
in
rcrl
clc
loopne
jl
inc
add
jo
add
nop
inc
add
push
mov
je
and
out
imul
push
add
daa
clc
cmp
add
cmpsb
clc
sub
pop
sbb
clc
xchg
inc
add
std
pop
in
lods
fwait
jp
cmp
enter
clc
cmp
clc
cmp
clc
stc
pop
fs
sahf
lret
rclb
pusha
add
ds
clc
xor
add
mov
clc
ds
pop
jg
ljmp
idivb
jl
repz
xchg
cmp
jne
