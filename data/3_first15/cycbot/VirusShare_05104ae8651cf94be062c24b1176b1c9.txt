iret
in
mov
mov
popf
stc
mov
sti
testl
dec
push
loope
shr
gs
sbb
outsl
pop
fisubl
add
lea
add
sub
inc
add
pop
or
call
call
call
call
push
iret
adc
add
push
bound
add
add
cltd
push
sub
je
lcall
test
call
outsl
adc
add
jl
jg
add
pop
pop
ret
call
jbe
loopne
adc
add
inc
add
push
call
add
sub
iret
adc
add
and
add
add
shr
add
or
inc
call
inc
add
scas
fnsave
pop
and
add
int3
and
call
push
push
add
lock
call
pop
mov
mov
mov
call
sbb
xor
add
call
add
pop
call
das
mov
int3
adc
shr
call
dec
in
into
or
loopne
cmpsl
call
insb
push
xchg
push
gs
das
fiaddl
jno
add
add
add
add
add
xchg
mov
lcall
je
call
xchg
push
add
cmp
add
cwtl
or
jne
hlt
gs
call
adc
push
nop
dec
mov
dec
pop
sbb
in
lods
icebp
jo
add
pop
shr
call
add
sub
pop
call
add
callw
xchg
repz
add
add
call
add
sub
call
add
fidivrs
mov
fdivrl
xchg
sbb
scas
jb
add
cmpsb
call
es
scas
mov
popa
add
sbb
call
push
and
mov
call
sub
call
subps
sbb
cmp
in
inc
call
call
pop
push
add
sub
adc
add
add
push
add
outsl
xchg
dec
in
int3
adc
add
jbe
jbe
inc
call
call
call
sub
cmp
add
add
ja
call
test
sub
insl
and
add
jo
add
jg
mov
xchg
fbld
cmpsb
call
lcall
mov
call
or
and
add
sahf
or
lret
int
add
test
enter
outsl
add
roll
add
das
in
cmp
add
pushf
mov
mov
jl
stc
adc
call
call
push
add
nop
sub
mov
add
add
or
in
bound
add
push
mov
adc
xchg
mov
shl
call
cmp
movsl
call
fld
call
leave
cwtl
or
push
add
sbb
add
xor
add
shr
add
ja
mov
int
es
jle
lret
imul
das
dec
arpl
add
xor
add
loop
cmpsl
call
lret
mov
add
sub
std
pop
jnp
mov
pop
mov
mov
call
and
sbb
cmp
mov
call
addr16
popa
add
lret
add
jmp
add
pop
scas
pop
add
add
outsl
daa
call
sbb
dec
sbb
add
int
and
add
sub
jmp
repnz
xchg
rorl
add
aad
call
call
add
mov
pop
fidivrl
call
push
mov
push
jbe
sbb
call
sbb
add
mov
shlb
mov
call
hlt
in
add
add
add
scas
jge
mov
call
adc
add
out
lock
fsubl
xor
add
call
bound
add
push
in
sub
push
mul
call
jge
add
fldcw
jmp
cmp
add
push
in
bound
add
add
xchg
adc
add
mov
mov
or
add
adc
xchg
push
call
pop
out
aaa
outsb
not
fcoms
mov
shl
call
add
mov
call
add
jb
add
movsb
call
add
add
testb
js
add
mov
add
mov
add
add
add
add
divl
callw
arpl
add
push
lcall
inc
call
add
add
movsb
call
mov
call
outsb
cwtl
cmp
pop
call
add
in
mov
add
inc
call
dec
das
cld
dec
or
call
xchg
cli
mov
jns
cmpsl
call
test
cltd
call
nop
add
xchg
pop
add
add
call
add
inc
add
daa
call
call
add
add
adc
add
loope
mov
add
add
in
testb
pop
stos
and
call
sub
add
add
add
call
add
cmp
or
or
jns
cli
jno
add
loop
pushf
pop
push
add
mov
aaa
mov
call
add
shlb
test
push
pop
jno,pt
add
call
and
add
add
call
mov
jnp
cmpsl
call
lock
out
je
add
mov
clc
outsl
add
je
leave
js
pop
dec
fbstp
jmp
ljmp
and
add
add
xchg
icebp
fiadds
call
call
call
inc
add
mov
add
call
mov
call
stos
in
out
mov
ss
loop
bound
add
and
fwait
dec
jp
aam
mov
add
ret
call
pop
gs
xchg
jle
movsl
call
add
push
pop
inc
call
and
add
cs
pop
mov
imul
sub
pop
and
add
in
jecxz
and
add
jne
add
sub
pushf
pop
and
add
mov
loopne
sbb
push
mov
call
add
mov
dec
cmp
call
inc
call
ret
pop
and
add
and
add
call
iret
aad
sbb
call
int3
or
mov
sbb
jo
add
add
call
call
call
cltd
aad
jmp
int
sbb
pop
xchg
mov
add
cmc
add
add
sbb
call
add
call
pushf
daa
call
add
sbb
call
mov
jbe
add
add
add
add
leave
cli
call
xchg
adc
mov
call
insb
or
call
call
call
leave
inc
call
bound
add
add
cmpsl
call
call
add
pop
sbb
call
push
call
stc
sub
mov
testl
call
cmp
mov
add
jno
add
mov
mov
int
xor
add
add
push
xchg
imul
sub
outsb
lods
push
add
pop
dec
and
add
dec
out
shll
call
adc
imul
xchg
test
or
filds
add
mov
sbb
pop
icebp
js
add
sbb
add
adc
add
add
aas
inc
add
out
add
sub
fists
adc
call
call
push
mov
aas
insl
dec
cmp
imul
xchg
jp
sub
or
add
shr
mov
sbb
pop
jne
xor
add
xchg
in
cs
daa
call
test
js
call
add
call
outsb
inc
add
adc
add
call
add
in
rcll
scas
movsb
call
mov
enter
call
add
inc
call
add
sti
int3
mov
add
push
call
add
sahf
jo
add
call
jo
add
adc
add
add
sbb
add
mov
add
inc
add
mov
aas
sub
call
call
add
add
mov
mov
add
call
aas
faddl
call
call
add
push
jnp
imul
call
std
inc
call
add
call
dec
mov
adc
add
imul
xor
add
add
sub
popf
push
add
arpl
add
sti
xchg
push
dec
test
cmc
arpl
add
call
add
testb
jl
jb
add
call
call
add
call
repnz
lods
mov
cmp
ret
call
mov
stc
jge
dec
jge
aaa
mov
push
shr
call
call
call
and
add
sub
call
jg
or
ficoml
shlb
call
callw
xchg
icebp
fstpl
aam
call
fldl
inc
call
shlb
add
adc
add
xchg
loopne
sbb
inc
add
out
sbb
add
add
or
shr
add
xor
add
call
add
call
and
add
sahf
pop
xor
add
call
xchg
fists
add
shrb
scas
stos
sub
pop
mov
and
add
loope
scas
mov
xor
add
add
add
ja
add
callw
add
mov
jge
lret
outsb
test
push
sbb
into
filds
fs
cmp
push
insb
sbb
add
jp
cmpsb
call
mov
cli
inc
add
fpatan
popf
test
insl
and
xlat
sahf
push
call
mov
imul
add
mov
add
pop
pusha
add
add
add
call
call
ror
int
dec
lahf
hlt
mov
sahf
fmuls
fs
call
and
add
mulb
call
jg
pusha
add
xchg
pop
push
xchg
and
fldz
sbb
js
call
add
jbe
call
fs
lods
js
pushl
add
sub
add
imul
push
add
fsubrl
xor
add
call
stc
call
inc
call
dec
call
pop
and
adc
mov
xchg
test
rcrb
mov
mov
call
into
lock
add
leave
inc
add
jnp
xchg
lret
push
mov
call
add
call
or
clc
cmp
push
mov
sbb
call
ret
push
push
add
mov
cmp
add
test
or
call
add
fcmovb
call
add
add
add
pop
call
idivl
pushl
add
ja
callw
add
cmp
call
test
call
leave
ds
or
add
pusha
add
or
lcall
jb
add
call
call
fs
pop
cmp
dec
pop
call
or
call
mov
xchg
mov
xor
add
fucomip
rorl
push
sub
jge
add
inc
call
cmp
incb
mov
add
arpl
add
cmp
call
push
call
lea
add
add
pop
jo
add
cmc
pop
mov
arpl
add
push
lahf
push
add
and
add
add
shlb
movsb
call
call
call
pop
push
add
and
add
dec
cmp
pop
jg
call
fstpt
int3
fbstp
add
mov
add
ljmp
clc
pop
movsb
call
add
add
and
add
call
sub
pop
xor
cwtl
pop
call
call
add
jle
cmpsb
call
mov
sbb
call
pop
cmp
das
mov
sbb
fdivrs
ds
sub
add
call
jbe
es
call
call
add
xchg
adc
add
enter
xor
add
jle
jnp
es
add
mov
call
jno
add
call
add
push
into
mov
pop
in
adc
add
cmpsb
call
call
add
push
sub
cltd
ret
call
call
pop
mov
add
xor
add
cli
enter
test
outsb
add
or
add
arpl
add
call
xor
add
movsb
call
add
mov
xor
add
jl
sbb
add
add
add
mov
stos
call
call
add
sub
mov
call
add
call
push
sbb
call
add
cmp
insl
xchg
sbb
fwait
fwait
cltd
jl
sbb
call
ljmp
lea
add
scas
dec
sub
ja
xor
add
push
xor
add
call
sbb
add
mov
add
shrl
lods
pop
js
test
rcrl
add
sub
and
pop
sti
dec
pop
out
jge
lods
xor
add
mov
bound
add
call
or
out
sarl
icebp
cmp
aaa
inc
call
pop
add
add
pop
pop
push
scas
pop
loop
adc
add
enter
jnp
fstpt
add
pop
add
add
cmc
xchg
outsl
xchg
leave
fs
xor
adc
lock
sub
test
cmp
movsb
call
mov
and
add
sbb
cmpsl
call
rcrl
call
call
call
call
leave
push
cmp
fidivs
add
adc
add
add
add
jge
jnp
call
add
push
add
pop
add
add
lods
ficoms
add
mov
jg
call
add
add
add
add
gs
adc
imul
add
mov
sarl
add
pop
pop
mov
js
call
sbb
add
flds
add
sbb
pusha
add
fwait
mov
stos
xchg
shr
add
test
ror
inc
add
stos
pop
movsb
call
scas
adc
add
cmp
call
pop
call
pop
pop
xchg
jnp
call
pop
mov
pop
ljmp
jg
repz
cltd
pushf
lahf
cmp
add
jne
mov
cli
addr16
in
add
ljmp
xchg
pop
fsubrs
call
call
cwtl
fiadds
add
xor
add
call
push
int
call
call
call
mov
call
add
xor
enter
add
cmp
js
add
call
repnz
fdivl
add
adc
add
lret
das
test
shlb
inc
call
aas
add
add
cmpsb
call
pop
add
add
call
cmp
add
adc
add
lcall
call
add
dec
outsb
push
call
test
add
push
and
add
add
lcall
ret
das
scas
movsb
call
call
fdivrl
mov
std
adc
add
add
add
cmp
call
nop
addr16
in
pop
call
or
add
call
cmc
mov
addr16
call
add
or
jmp
shr
cltd
pop
repz
out
lock
call
jl
xchg
jo
add
ss
push
ret
call
or
cmp
sub
mov
add
ret
call
add
sub
call
sbb
pop
das
sbb
add
sub
out
xchg
test
sub
jmp
sub
mov
popf
iret
dec
adc
add
add
add
insl
push
pop
add
lods
push
call
lods
fs
push
mov
fstl
push
add
pop
mov
sub
sub
mov
call
aam
icebp
sbb
push
jno
add
mov
mov
add
call
add
das
movsl
call
stc
test
adc
add
jb
add
std
push
add
sub
int
aaa
out
shr
aam
add
add
fisubs
add
add
fs
sub
sbb
add
call
aaa
xor
mov
imul
pop
movsl
call
sbb
icebp
or
add
add
add
push
repnz
inc
call
jnp
add
mov
call
call
inc
call
sub
sub
call
call
in
repnz
add
add
bound
add
add
mov
repz
adc
dec
mov
dec
xor
add
mov
add
mov
nop
dec
mov
add
xchg
callw
fisubs
add
call
jp
out
lahf
sbb
call
add
add
and
dec
add
aas
mov
sub
cltd
loope
dec
clc
pop
push
fcmovb
call
int
add
inc
add
push
call
add
xchg
pop
movsb
call
outsb
xchg
outsb
ja
call
pop
ucomiss
add
pop
mov
hlt
add
add
push
push
add
xor
cmpsb
call
call
fs
and
add
add
outsb
adc
add
add
sub
xchg
mov
out
push
sbb
dec
dec
add
add
add
inc
add
sahf
ret
call
shlb
inc
add
fadd
call
xor
add
dec
mov
add
add
add
add
ret
lret
fsubrl
call
je
add
sarl
call
or
daa
call
ret
cmp
add
test
call
call
cmp
call
sbb
inc
add
lret
add
add
add
pop
sub
push
or
add
mov
add
sbb
cmp
jmp
add
jae
add
call
pushf
ficoms
add
and
add
call
call
add
das
cmp
xchg
incb
add
call
dec
add
add
push
add
push
jo
add
add
bound
add
mov
pop
mov
add
mov
sub
call
and
add
mov
add
add
adc
add
add
add
add
add
mov
callw
mov
add
sbb
push
lea
add
call
add
add
fdivrs
jbe
call
shr
add
xor
add
add
add
arpl
add
sti
adc
add
lret
xchg
sub
add
mov
gs
add
inc
add
int3
stos
push
add
cmpsb
call
stc
cmp
or
call
xor
call
add
mov
pusha
add
and
add
mov
jge
outsl
bound
add
stos
push
jbe
add
shr
add
sub
int3
inc
call
xchg
movsb
call
dec
sbb
add
std
xchg
movsb
call
and
add
call
call
add
jae
add
aad
mov
xor
add
add
add
add
sub
adc
add
add
fiaddl
add
mov
add
jmp
fadds
dec
xor
add
and
sub
and
mov
adc
add
add
and
add
push
push
pop
int3
xchg
callw
ds
divb
add
callw
add
call
sarb
call
add
add
add
pop
pop
push
cs
and
js
pusha
add
sbb
pop
or
add
call
and
add
add
pop
js
cmc
and
add
and
xchg
jns
call
gs
add
inc
add
shr
test
jmp
lret
ss
call
callw
add
inc
add
loop
arpl
add
call
call
and
add
add
xor
dec
push
ficoml
repnz
imul
aas
pop
pop
ljmp
or
add
cli
add
add
call
call
rorb
enter
pop
sti
jmp
inc
call
xchg
sbb
add
aas
shr
dec
jns
pop
nop
in
dec
pop
inc
call
call
adc
add
pop
ds
xchg
in
xchg
bound
add
fidivrs
out
mov
add
pushf
pop
xchg
mov
add
add
add
movsb
call
fisttpll
xchg
mov
call
dec
movsl
call
add
call
call
and
add
call
add
mov
flds
add
movsb
call
das
sbb
lods
mov
add
jge
push
jp
sti
adc
mov
call
add
mov
call
and
add
pop
or
outsb
pop
sti
test
pcmpeqd
mov
ja
mull
mov
cmp
mov
call
mov
nop
sub
test
call
in
dec
xchg
lahf
adc
adc
sub
insb
sub
add
adc
lcall
cwtl
lea
add
out
cmp
ret
cli
call
add
cmp
call
enter
push
mov
dec
call
mov
call
sub
call
jbe
add
mov
callw
shr
push
add
callw
call
add
add
jno
add
call
call
push
or
cmp
add
cmc
xchg
sbb
mov
pop
icebp
hlt
nop
test
xchg
addr16
movsb
call
mov
add
add
outsl
mov
add
call
xchg
jno
add
int3
ljmp
call
or
sub
xchg
cmp
add
test
add
fs
adc
add
call
call
add
popf
addr16
lahf
mov
add
cmc
mov
add
call
sub
adc
add
inc
add
or
add
add
ss
sub
call
add
fadds
add
call
jb
add
sub
out
sbb
add
call
pop
imul
sub
push
add
or
push
callw
adc
add
gs
call
add
test
call
pop
inc
add
dec
sbb
ret
call
and
add
sbb
sub
sub
adc
add
add
wbinvd
mov
or
add
xchg
sub
add
or
lret
xlat
lock
add
outsb
inc
call
inc
call
call
dec
sbb
cs
imul
gs
call
ss
pop
call
add
adc
pop
loopne
nop
sbb
add
add
mov
sub
test
sub
inc
add
arpl
add
push
call
mov
flds
cmp
call
xor
add
cmpsl
call
add
arpl
add
add
pusha
add
stos
rcrl
addr16
add
je
call
mov
ds
push
decb
es
call
add
or
add
add
add
add
arpl
add
into
push
call
and
add
call
lock
es
call
dec
add
sub
insb
mov
pusha
add
loope
cld
dec
popa
add
cs
je
imul
mov
jecxz
std
cmc
out
test
dec
in
mov
pop
or
pop
lret
jbe
add
test
in
fadd
call
aad
add
loop
sub
jecxz
inc
call
mov
lahf
mov
add
aad
dec
sbb
sub
call
or
dec
mov
shll
push
add
std
ljmp
inc
add
adc
add
jmp
push
out
add
fistl
add
call
js
pop
sub
cld
jge
xchg
test
sbb
add
add
add
in
dec
stc
push
mov
sbb
add
sub
mov
sub
sub
add
inc
call
call
into
jl
push
call
add
enter
aaa
lret
call
pop
jecxz
add
add
dec
mul
call
stos
or
into
aam
leave
jg
call
enter
sub
jo
add
add
pop
icebp
push
sahf
cmc
push
add
dec
push
scas
popf
call
call
add
sub
add
mov
mov
sub
pop
mov
xchg
mov
add
fs
stos
and
add
add
leave
push
add
out
push
pusha
add
and
add
add
lea
sub
repz
xlat
dec
mov
add
call
test
xor
add
call
add
loop
xchg
sub
add
out
ja
xchg
dec
ja
call
cmp
leave
js
bound
add
call
imul
add
call
pop
out
push
add
jl
mov
call
call
movsb
call
mov
call
mov
call
call
iret
test
adc
add
sbb
xor
add
call
daa
call
xor
add
pop
int
nop
dec
pop
lahf
jbe
call
add
cld
xor
add
call
test
adc
add
call
add
je
fnstenv
mov
add
dec
std
add
add
test
mov
bound
add
xor
add
jmp
jb
add
add
fnop
jb
add
add
inc
add
aaa
call
in
cmc
testb
call
cwtl
call
xchg
gs
sub
call
rcl
pop
sahf
lods
or
call
call
mov
push
loop
sbb
call
fwait
mov
call
xor
add
rcr
pop
ficompl
add
sbb
stos
sub
inc
add
jno
add
call
fldcw
dec
into
sub
add
call
mov
mov
loopne
cmp
cmp
pop
repnz
add
mov
fs
push
add
cmp
std
adc
add
mov
push
add
lea
xchg
mov
test
jne
aas
cmp
dec
adc
add
call
xor
add
xchg
pushf
xor
add
stos
xchg
shl
call
xor
add
xchg
sub
push
push
push
push
test
aas
fs
mov
call
call
add
call
call
add
call
add
add
jbe
adc
nop
jmp
movsl
call
xchg
jmp
add
fiaddl
add
sub
call
call
daa
call
call
call
out
test
add
cmpsb
call
add
popf
mov
call
call
outsl
push
cli
std
out
xor
add
sbb
dec
enter
add
ss
add
call
add
add
call
call
inc
call
call
add
jl
cmpsb
call
call
mov
adc
call
ds
add
imul
scas
xor
add
loopne
push
sbb
cltd
add
add
inc
call
add
inc
add
pop
jle
jnp
xor
add
shll
add
add
add
xor
add
and
add
add
push
sub
test
movsl
call
add
stos
push
cs
push
cld
insb
jne
inc
add
scas
mov
fdivl
add
add
and
add
call
push
stos
and
add
or
adc
add
sbb
push
add
jo
add
aad
push
lods
sub
add
xor
add
xor
add
call
arpl
add
addr16
xchg
dec
call
xor
push
add
xor
add
sbb
add
mov
call
imul
call
add
test
mov
jmp
clc
cmp
stc
jge
cld
ja
lods
inc
call
add
movsb
call
aaa
mov
pop
enter
outsb
inc
call
or
add
adc
cmp
out
std
jns
adc
iret
mov
mov
add
mov
cmp
pop
aas
and
sub
push
ret
in
call
mov
add
add
add
fisttps
call
mov
lret
jmp
jb
add
add
sub
shr
sahf
push
add
nop
cltd
adc
add
sbb
aad
call
add
or
inc
call
je
call
mov
stos
imul
cmc
je
add
dec
ja
mov
or
adc
add
call
inc
call
fs
pusha
add
sarb
jecxz
pushl
push
cmp
mov
sbb
cmp
jae
add
add
xchg
xchg
shl
call
mov
call
call
mov
pop
clc
adc
add
ss
call
jns
jno
add
inc
call
or
xchg
inc
add
cmp
add
aad
call
add
mov
pop
pushf
je
inc
call
add
sub
xchg
sbb
lea
add
add
mov
and
add
pop
aam
mov
cli
mov
add
fwait
bnd
add
and
add
mov
add
call
test
push
lcall
call
call
inc
call
cmpsb
call
mov
dec
mov
outsb
xchg
mov
sub
cmpsb
call
fdivl
add
add
add
call
sti
mov
add
add
jg
add
add
add
rcll
and
add
call
test
repnz
sbb
push
add
sub
add
jb
add
dec
ja
dec
xchg
xchg
push
dec
push
jno
add
lock
call
callw
add
call
icebp
mov
loope
stc
ljmp
adc
add
sbb
add
push
call
testb
test
ja
outsl
in
lret
add
jmp
mov
cli
in
jle
call
mov
stos
movsl
call
pop
call
mov
call
add
xchg
aad
ljmp
ret
call
shrl
movsl
call
mov
es
idivl
xchg
cmpsb
call
stos
xor
add
call
push
add
dec
icebp
push
add
imul
add
sub
dec
push
in
xchg
ret
sbb
mov
add
in
aam
xor
add
cmp
scas
mov
fimull
add
dec
xchg
mov
pop
xchg
sub
xor
add
call
add
xchg
callw
call
je
fildl
out
mov
shl
inc
call
inc
add
and
in
test
rol
call
out
leave
rorb
call
add
add
add
inc
add
push
xlat
mov
add
dec
dec
pcmpgtd
hlt
inc
add
int3
es
add
in
and
add
xor
iret
xchg
insb
inc
add
pop
popa
add
rolb
call
push
jne
xor
add
add
cmpsb
call
roll
xor
add
call
push
and
add
cwtl
jbe
mov
sbb
add
test
push
jecxz
cltd
jg
es
sub
iret
hlt
int3
pop
ret
mov
test
arpl
add
lea
add
fisubs
call
add
cmp
push
call
add
add
pushf
hlt
mov
movsb
call
bnd
mov
add
sbb
test
lret
sub
mov
cmp
rolb
call
imul
cmc
in
xchg
out
push
add
jmp
call
mov
push
add
add
out
imul
call
add
das
in
xor
add
jae
add
add
shrl
call
and
jne
call
sub
call
add
jg
call
push
add
mov
add
cmp
add
pushf
xlat
roll
add
add
jge
out
mov
add
loope
sbb
lcall
pop
testb
add
jge
clc
sub
sbb
and
add
pop
lock
jae
add
adc
add
add
hlt
cmpsb
call
add
test
mov
sub
add
out
pop
sub
add
lret
rorl
outsl
mov
add
in
imull
call
pop
addr16
out
adc
add
jmp
insb
inc
add
mov
insl
fsubl
add
call
push
add
cmc
dec
scas
aas
add
add
add
lcall
xor
add
add
xlat
adc
add
add
scas
sub
call
sbb
add
scas
jbe
pop
fdivrl
das
stc
sbb
add
aas
scas
and
add
add
outsb
test
leave
mov
lods
call
ss
mov
call
xchg
callw
test
call
sub
insb
sub
call
insb
loopne
insb
pop
cld
sti
xchg
into
push
addr16
out
xor
add
add
add
cmp
call
dec
sub
call
int
adc
inc
call
pop
cmpsb
call
add
ja
call
add
mov
callw
popa
add
xor
add
add
dec
mov
pop
stos
hlt
ficomps
bound
add
fists
add
lock
call
dec
push
or
lcall
or
call
dec
iret
into
sbb
cmp
add
xlat
push
push
add
mov
call
add
pop
out
dec
pop
stos
jae
add
add
call
pushl
xor
add
int3
xor
add
shr
cwtl
scas
iret
sub
call
test
das
add
add
call
inc
add
imul
xchg
lahf
push
outsb
fmul
dec
adc
add
sbb
loope
rclb
add
mov
lock
inc
add
jle
in
mov
arpl
add
call
dec
xor
add
callw
add
and
add
shr
add
cld
fcmovne
and
add
repnz
mov
shr
inc
add
popf
jle
push
pop
adc
add
inc
call
lock
jp
add
inc
add
lahf
xchg
adc
mov
xor
add
shr
add
cmc
clc
call
add
add
call
xchg
push
xlat
iret
jbe
add
shr
aad
add
testl
mov
adc
dec
dec
sbb
icebp
xor
add
test
add
xor
add
icebp
mov
stos
mov
mov
scas
iret
imulb
add
mov
call
add
movsb
call
sahf
lahf
in
scas
jg
add
xchg
test
out
mov
push
add
rcrl
call
add
ret
call
call
out
jle
fisttpl
inc
add
das
js
adc
add
cmp
add
call
sbb
pop
arpl
add
call
cmp
xor
add
cmp
mov
inc
add
mov
call
ja
call
mov
sub
call
cmc
and
add
jecxz
pop
sub
iret
pop
fs
ficoml
in
insl
fstpt
sbb
shr
cmp
call
je
add
add
mov
pusha
add
cmp
add
sbb
dec
pop
mov
mov
call
in
xor
add
add
mov
mov
sub
jle
call
add
inc
add
cwtl
scas
xor
add
ja
call
add
pop
sbb
sbb
das
mov
xor
add
mov
xchg
callw
nop
inc
call
jne
call
jnp
cmp
mov
add
mov
dec
mov
push
add
jae
add
pop
adc
pop
paddq
add
loop
cli
pop
out
mov
enter
push
add
adc
and
pop
sub
ljmp
or
and
add
xchg
ljmp
add
insb
or
flds
pop
sub
cmp
lcall
add
in
mov
add
outsb
sbb
mov
jne
pop
jo
add
in
jle
xchg
push
add
jp
push
fs
adc
call
sbb
ljmp
dec
cs
push
pop
jmp
inc
call
insl
dec
mov
add
ds
loop
in
aaa
xchg
jle
fs
shrb
mov
call
mov
sbb
mov
add
inc
add
and
add
shr
call
ficoms
call
call
add
fs
push
add
push
lcall
cwtl
fstpl
ficompl
ret
call
push
fldcw
jecxz
push
add
shr
push
mov
call
call
xchg
or
bound
add
ja
call
mov
jmp
enter
addr16
add
dec
scas
sub
mov
insb
std
je
mov
add
stos
dec
xchg
xchg
mov
add
imul
pop
adc
add
add
mov
call
push
add
push
add
mov
cmp
adc
dec
fstpl
cmp
call
insb
cmp
xchg
mov
call
dec
loope
sub
add
mov
add
test
xor
jle
call
dec
outsl
xchg
sub
inc
add
jmp
cmp
call
dec
adc
add
fimull
call
call
popf
lahf
mov
call
call
call
js
inc
add
sbb
call
cmp
sbb
jle
int
int
dec
xchg
stc
push
sbb
psubusb
add
test
add
loope
adc
add
call
cmp
call
add
jae
add
xor
add
gs
inc
call
push
in
enter
and
call
add
enter
aam
adc
add
test
dec
test
add
add
ss
add
call
shr
call
add
repnz
mov
sub
xor
add
cmpsl
call
stc
or
add
xchg
loope
jp
stos
lock
add
mov
add
push
add
mov
jnp
call
call
out
cs
jl
bound
add
add
push
add
leave
push
mov
popa
add
in
ds
scas
or
xor
add
call
push
call
fsubrs
dec
dec
fs
add
push
call
ds
or
call
mov
aas
sub
bound
add
mov
mov
std
pusha
add
adc
add
call
pusha
add
insb
movsb
call
sub
add
xor
add
fsubrs
add
add
movsl
call
add
insb
push
testl
add
call
add
adc
adc
add
inc
call
fstpt
cmp
add
in
jl
es
add
sahf
mov
add
popa
add
add
jge
movsl
call
xchg
push
mov
sub
add
jb
add
aad
call
pusha
add
test
scas
lods
fisttpll
into
jb
add
inc
call
leave
dec
add
add
daa
call
dec
jmp
call
call
add
dec
lret
pop
mov
call
cld
cmp
call
jne
mov
mov
call
jge
call
xlat
icebp
in
cld
mov
add
xchg
imul
insb
imul
push
divl
xchg
push
mov
movntps
test
sub
add
xor
add
ds
sub
pop
sub
in
scas
insb
lahf
or
xor
pop
ret
call
fcomi
inc
add
mov
out
inc
add
fs
enter
call
cmp
jno
add
shr
call
add
mov
shrb
aad
bound
add
ja
repnz
lcall
gs
sbb
add
fdivl
cmpsb
call
call
ds
mov
push
loope
xchg
inc
call
add
jnp
or
call
xchg
add
add
je
lods
xor
add
testb
adc
xor
add
outsb
pushf
and
add
add
add
pop
call
jp
mov
call
out
ss
call
mov
or
xor
add
test
call
in
sbb
call
add
add
add
add
add
cmp
xor
add
dec
daa
call
add
jns
add
out
sub
cmpsl
call
mov
out
add
add
dec
xchg
idiv
aam
cmc
cltd
pop
sbb
call
insl
inc
add
loop
testb
xlat
dec
sbb
jnp
mov
mov
call
psllq
test
in
inc
call
add
add
call
scas
fidivs
int
add
sbb
pushf
out
lock
push
add
push
xchg
fs
call
js
lahf
xor
pop
fists
add
dec
or
mov
in
mov
xchg
and
add
add
add
call
add
add
call
jno
add
add
add
and
call
add
fisubrl
xor
add
add
call
add
addr16
dec
sbb
pop
pusha
add
cld
lcall
ret
call
cmp
or
call
add
jecxz
daa
call
gs
mov
lods
int
call
nop
stos
sbb
jmp
add
ficompl
add
add
call
decl
cmp
ret
stos
mov
add
loope
cmp
xor
add
mov
pushf
lret
adc
add
add
aaa
mov
call
clc
hlt
add
xor
add
ret
cmp
add
cld
adc
mov
call
xor
add
add
mov
in
jo
add
xchg
imulb
add
add
test
fs
call
jge
mov
clc
jmp
xchg
lock
pop
call
add
test
add
xor
add
and
add
call
mov
or
add
mov
push
call
sub
xchg
es
icebp
inc
add
xor
add
callw
imul
add
call
or
jae
add
add
bound
add
mov
rcrb
imulb
aad
sbb
push
add
test
jae
add
add
sbb
out
cmp
call
add
jno
add
popf
and
add
test
je,pn
loopne
lea
add
mov
call
sub
add
and
add
jb
add
add
js
call
add
hlt
test
sub
ficoml
popa
add
jecxz
test
add
aaa
and
mov
add
call
add
call
mov
add
negb
add
call
jp
add
push
cwtl
mov
call
jp
pop
adc
add
add
add
fs
scas
outsl
sbb
call
sub
idivb
and
add
call
jp
call
add
adc
add
jno
add
call
pop
jg
or
add
jg
pop
adc
add
ljmp
add
add
lods
or
xlat
fiaddl
jne
test
aas
add
add
dec
add
add
popf
mov
mov
call
stos
loopne
add
add
call
call
out
sub
test
xchg
inc
call
callw
call
mov
add
sbb
aam
mov
inc
add
mov
call
addr16
jns
add
add
add
mov
and
add
cwtl
repz
mov
add
fldl
or
sub
add
jns
call
repz
mov
test
sub
call
in
rdtsc
add
sub
add
call
shrl
add
mov
pushf
push
jecxz
stos
repz
notb
add
insl
mov
js
mov
ja
call
bnd
add
dec
mov
or
std
inc
call
lcall
sti
jl
inc
call
call
lods
call
adc
add
cmpsb
call
dec
and
add
dec
iret
and
add
mov
add
mov
in
es
jp
mov
ja
add
pop
sub
cmc
stos
or
push
jnp
out
ret
scas
sbb
mulb
add
cmp
push
mov
call
cmp
clc
cmpsl
call
mov
mov
sbb
add
add
imul
add
sbb
cltd
jge
add
ret
call
cmc
and
movsb
call
add
lahf
dec
ror
pushl
add
fsubrp
mov
pop
cmpsl
call
cltd
shr
xchg
xchg
cmp
call
shr
mov
add
outsb
sub
or
add
sub
push
dec
sbb
sub
add
in
mov
repz
add
adc
add
cld
push
add
xlat
adc
add
call
call
push
add
xor
add
scas
rcl
cli
mov
call
push
pop
xor
add
aas
or
call
add
arpl
add
shr
push
jle
add
add
lret
xchg
pop
arpl
add
call
xchg
xlat
add
lock
adc
mov
rcll
push
jns
jmp
call
shll
in
in
adc
test
call
movsb
call
es
xor
push
fldcw
inc
call
xchg
sub
add
sti
cmp
xlat
mov
add
popf
xor
add
call
add
jl
outsb
dec
ret
lcall
call
mov
test
mov
out
lods
jecxz
aad
mov
call
inc
add
mov
mov
adc
push
add
xchg
mov
call
lret
mov
adc
add
mov
dec
dec
in
icebp
push
add
add
call
call
cmp
cld
test
cmpsl
call
call
dec
clc
mov
call
add
inc
call
lea
cmp
call
es
add
sub
ljmp
call
pusha
add
call
jns
call
add
sub
add
dec
daa
call
sub
pop
xchg
test
repz
add
xlat
loop
fnstenv
call
fisttpl
mov
lret
iret
ss
pop
scas
nop
lahf
int
or
call
pop
lea
adc
dec
fs
call
jge
jae
add
call
mov
jle
dec
out
sub
call
mull
add
inc
call
dec
cmp
mov
dec
scas
mov
add
add
sti
mov
call
mov
mov
sbb
call
fsubl
add
sub
add
add
ret
aam
and
leave
jno
add
add
xlat
fcomp
cs
mov
xchg
add
add
negl
dec
aad
xor
add
add
dec
sub
push
add
ds
mov
mov
sub
shlb
call
pop
xchg
test
bound
add
add
adc
add
cld
ret
call
add
popf
and
add
in
inc
add
test
mov
add
add
call
add
cmc
sbb
js
sbb
add
pop
call
add
adc
add
push
sbb
insl
inc
add
iret
ds
call
push
out
adc
add
fcoms
adc
add
add
lock
or
or
cmp
call
fsubrl
addr16
sub
call
jb
add
fildl
inc
add
pop
mov
aam
or
call
add
add
add
imul
notb
mov
pop
mov
call
inc
add
movsb
call
call
lcall
add
das
add
add
lahf
shll
jbe
gs
cmp
mov
std
pop
and
ss
inc
call
mov
sub
pop
jmp
call
add
add
add
xor
add
inc
call
add
lock
add
jno
add
lods
xchg
dec
je
pusha
add
fimuls
call
pop
mov
jl
cld
inc
call
in
jecxz
cmpsb
call
out
jl
add
jle
or
inc
add
pusha
add
shr
call
bound
add
mov
jae
add
mov
call
cmp
call
and
add
call
mov
lret
mov
mov
rorb
pop
daa
call
pop
lods
xchg
call
mov
iret
fs
imul
add
into
push
sub
in
sbb
mov
add
dec
xor
add
add
test
clc
ja
call
add
add
popa
add
sub
cmp
icebp
out
mov
call
call
sbb
add
loop
inc
add
or
icebp
jl
add
cmpsl
call
inc
call
call
add
out
lock
call
inc
call
call
add
and
call
pop
mov
call
sub
daa
call
lea
add
movsb
call
call
adc
add
into
sbbb
push
ret
loopne
fbld
in
sub
xor
push
call
and
jne
inc
push
push
push
call
test
je
and
or
and
add
mov
add
mov
shr
push
gs
push
push
call
push
call
leave
ret
push
push
lea
cld
or
and
or
mov
add
add
xor
pop
pop
ret
jmp
jmp
nop
jmp
fsubrl
sti
mov
add
aam
fisubl
push
push
ret
out
mov
outsl
lods
sub
add
add
ret
dec
or
sar
inc
call
in
lods
test
call
pop
movsl
call
es
add
add
jecxz
add
arpl
sbb
adc
add
add
fists
add
out
roll
add
add
mov
xlat
add
add
mov
inc
mov
in
sub
add
jle
pop
cmp
add
out
xchg
dec
cmp
xchg
pop
jmp
push
stc
ret
shr
add
mov
cwtl
mov
add
add
add
push
movsl
call
repz
xchg
test
call
jmp
sti
add
pop
xchg
add
pop
sbb
sti
xchg
sti
sbb
add
call
add
add
xchg
mov
out
mov
jbe
loopne
lods
or
call
sub
jge
call
fs
jmp
jmp
add
sub
dec
into
mov
add
and
add
and
add
inc
call
mov
negb
add
pusha
add
cmc
insl
jp
add
mov
jge
call
call
aaa
inc
add
fprem
cwtl
stc
mov
scas
pop
mov
add
call
add
sbb
in
lock
sub
add
cmp
call
ror
ljmp
call
ret
enter
sub
call
push
push
mov
dec
jecxz
jns
add
add
xchg
movsb
call
cs
shr
call
call
xchg
fildll
call
xchg
push
call
add
adc
add
add
sbb
call
call
pop
jne
push
add
mov
jb
add
sub
fldcw
and
jmp
sbbb
and
xlat
dec
shll
add
call
in
mov
call
pop
xchg
jb
add
jmp
cmp
mov
add
call
shlb
add
add
add
jle
mov
mov
push
mov
dec
movsl
nop
dec
cmpsb
add
daa
call
push
ret
dec
sbb
shr
cmp
test
out
push
add
arpl
aam
fists
divb
add
out
fisubl
add
add
lcall
mov
test
push
inc
call
add
outsb
sbb
inc
add
cmp
call
adc
add
and
add
pop
test
sub
inc
add
shlb
push
aam
dec
outsl
add
callw
call
mul
call
jne
add
jno
add
add
xor
es
push
call
jmp
jp
sbb
push
call
xor
add
add
cmp
ss
pop
clc
nop
nop
add
add
add
dec
arpl
add
std
xchg
loope
call
daa
call
inc
call
cmp
push
ret
arpl
out
lret
flds
or
push
ljmp
call
or
inc
add
imul
add
sbb
call
xchg
sbb
imul
arpl
or
mov
add
push
rcr
mov
jmp
jle
call
sbb
popf
dec
jle
and
pop
sbb
add
mov
mov
loope
repnz
call
pop
call
add
decl
add
add
jnp
mov
mov
arpl
add
add
add
sbb
and
add
enter
call
push
adc
pop
cmp
in
gs
fcompl
call
int3
out
xchg
inc
call
bnd
mov
aam
ret
call
loopne
sbb
std
sti
push
add
jmp
or
fwait
sub
call
cmp
es
mov
call
jge
jp
call
gs
dec
add
jmp
aaa
arpl
add
add
jns
call
jmp
jne
dec
arpl
pop
call
mov
stc
loop
sbb
add
sbb
push
push
pop
xchg
fiadds
add
ljmp
inc
add
inc
call
add
sub
add
sbb
nop
hlt
stos
test
mov
jmp
cmp
mov
lahf
adc
add
das
push
imul
sbb
or
add
push
js
add
inc
call
mov
shr
es
out
cmp
out
sbb
mov
push
ret
xchg
enter
bound
add
inc
call
add
or
js
lahf
lods
mov
call
mov
lahf
inc
add
mov
cmp
add
push
add
pop
in
jp
ljmp
add
and
add
add
or
push
mov
mov
add
add
add
testl
or
push
sar
shll
lea
cmpb
add
call
push
aad
pusha
add
xchg
sbb
add
mov
add
call
mov
call
add
add
roll
insl
sti
add
push
mov
int3
fisubs
stos
loop
jno
add
loop
aas
sahf
call
call
lret
call
repz
jl
add
inc
call
decl
jmp
arpl
lret
cs
add
push
call
call
xchg
jg
add
jae
add
push
jmp
push
daa
arpl
rcll
add
fstl
sbb
inc
call
out
sbb
sbb
call
add
jmp
push
aaa
pop
dec
mov
std
fwait
and
add
movsl
call
xchg
test
lock
jne
push
ret
pop
sbb
loope
movsl
call
out
dec
in
mov
jle
pop
mov
add
mov
pop
cltd
push
add
push
add
inc
add
addr16
fdivrs
push
add
aam
iret
sti
scas
mov
cmp
xor
add
sub
add
push
out
mov
mov
push
jb
add
aad
call
add
add
cmpsl
call
jge
and
xchg
in
pop
call
add
add
lret
cmpsl
call
test
call
add
call
gs
call
call
add
cwtl
adc
call
std
sub
enter
ljmp
call
int
mov
adc
add
sub
ret
call
cwtl
pop
gs
cld
movd
jns
call
xchg
or
add
mov
mov
shr
in
xlat
pop
mov
cld
fldl
jp
add
sbb
dec
nop
cld
arpl
add
xchg
and
add
add
jecxz
pop
call
xchg
and
add
cmp
mov
call
sbb
pop
dec
dec
sbb
ds
incb
add
add
stos
lods
loope
pusha
add
sub
add
fdiv
cltd
vmovhps
inc
add
mov
pop
cld
sub
jmp
add
lods
iret
or
rorb
mov
add
sub
jge
call
pop
cmp
call
enter
rol
call
cwtl
mov
lcall
mov
call
call
int
cmp
call
pusha
add
add
add
push
cwtl
cmp
in
pop
xchg
jmp
push
add
adc
add
aam
mov
call
mov
xchg
jecxz
jp
fstpl
push
add
mov
add
push
mov
jmp
push
inc
xor
jno
add
pop
loop
dec
sub
add
out
test
nop
and
add
xchg
call
add
dec
into
popl
add
js
call
es
call
jmp
arpl
push
daa
rorl
ja
add
pop
fldt
scas
push
mov
dec
jle
jne
call
jmp
add
pop
dec
xchg
scas
cmp
lret
xchg
cmp
test
pusha
add
push
ret
call
call
das
push
into
jne
aaa
and
add
ret
call
scas
gs
sub
out
mov
cld
sub
call
cmp
divl
add
add
add
addr16
pop
jmp
fistps
add
push
add
mov
push
sub
jmp
test
add
fcmovnb
call
nop
xor
push
add
push
nop
outsb
fnstsw
add
add
aaa
add
add
arpl
add
or
shr
int
daa
call
sahf
jecxz
outsb
call
jp
call
jmp
aam
pop
arpl
push
lret
ret
pop
push
in
xchg
inc
add
push
pop
and
add
out
mov
call
mov
call
push
inc
add
into
xchg
ja
add
test
call
add
jns
sbb
mov
ja
call
inc
call
push
pop
and
add
add
aad
add
adc
add
daa
call
push
lods
and
add
cmc
sahf
jmp
add
sbb
ret
call
test
neg
jbe
add
in
mov
outsl
cmp
loop
sub
mov
sub
call
add
add
call
cli
push
rcl
push
mov
decl
addb
xchg
fs
add
out
test
call
mov
scas
pop
add
incl
add
add
call
das
cs
lcall
in
je
add
mov
sub
add
call
add
inc
add
xchg
and
add
add
xor
push
mov
mov
add
call
call
cmp
enter
mov
add
or
push
add
xchg
add
add
ja
leave
mov
pop
fmul
lahf
sub
sbb
and
add
popa
add
sub
add
sbb
add
pop
jge
call
add
xchg
mov
cmpsb
call
lret
sub
add
call
pop
mov
mov
stos
jno
add
shr
sub
add
mov
add
sub
add
xor
mov
add
cmpsl
call
call
clc
sub
xor
add
call
dec
int
xor
add
add
call
add
mov
add
aad
dec
out
push
xor
add
add
repz
int3
jp
test
jmp
ds
into
daa
sbb
mov
leave
in
xor
add
mov
jecxz
test
aas
callw
call
repnz
insb
movsb
call
stos
push
dec
mov
pop
push
add
adc
sbb
shll
add
call
call
sahf
push
mov
inc
call
iret
setae
icebp
xchg
scas
pusha
add
push
mov
cmc
js
add
lock
daa
call
call
call
callw
push
add
jmp
add
repz
add
sbb
add
ss
lret
pop
xchg
xor
add
add
dec
adc
add
pop
mov
call
or
fwait
bound
add
insb
pushf
and
add
add
popf
iret
bound
add
call
fstpl
fimuls
jo
add
fmuls
add
pusha
add
mov
shll
insb
hlt
rcrb
mov
push
ret
sbb
add
dec
ret
call
inc
add
movsb
call
sub
mov
call
add
in
sbb
mov
shlb
add
sti
mov
call
add
fimull
add
add
call
sub
add
scas
hlt
inc
call
icebp
lods
sub
sub
sub
shl
push
jmp
jmp
cmpsl
mov
xchg
jo
add
call
call
pop
jbe
jb
add
add
jp
and
add
add
outsb
mov
add
std
xlat
popf
test
jne
jbe
test
call
js
fst
ret
call
out
arpl
add
leave
push
call
jmp
add
sub
add
lret
call
sahf
movsl
call
call
call
fnsave
jb
add
add
adc
add
add
adc
add
add
je
mov
out
jl
aad
call
cs
aam
or
call
add
push
add
add
add
call
add
cmp
inc
add
and
lods
push
repnz
out
bound
add
stos
out
call
call
mov
test
stos
push
fsubrs
cmpsb
call
mov
lahf
jae
add
jmp
dec
fbld
and
add
add
movsb
call
push
xor
add
call
or
shr
xor
add
call
call
inc
add
add
add
rorb
push
add
dec
sub
rcrl
sub
add
shl
adc
add
mov
ds
call
add
add
mov
test
into
ja
call
push
add
call
add
mov
add
sub
xchg
movsl
call
mov
shrb
adc
add
call
je
mov
out
movsb
call
leave
or
add
pop
insb
push
add
das
negb
mov
mov
add
add
add
jo
add
xor
mov
adc
add
or
inc
call
shlb
xor
add
push
add
jmp
es
jno
add
sarb
push
pop
fiaddl
add
sahf
mov
ret
jmp
ret
ds
mov
jne
adc
add
loop
jmp
arpl
daa
call
mov
jmp
push
aaa
ret
popf
dec
push
and
mov
mov
add
mov
outsl
pushf
je
inc
add
movsb
call
xchg
or
mov
call
shll
jmp
fidivl
mov
flds
jns
adc
add
mov
pop
xor
mulb
ret
push
sub
mov
call
fs
call
mov
add
jmp
xchg
in
fiaddl
inc
add
test
divb
add
jns
cld
int3
cmp
dec
imul
popf
lods
mov
call
dec
test
pop
sbb
dec
idiv
sbb
add
loopne
mov
push
jmp
arpl
fistps
add
add
or
add
pop
sub
jmp
dec
jbe
scas
jns
jb
add
sbb
sub
push
add
test
pop
mov
adc
add
sahf
movsb
call
call
pusha
add
mov
add
push
ret
in
push
and
add
add
sbb
dec
lcall
int
rclb
add
add
push
pusha
add
test
aam
call
loopne
jae
add
add
xor
add
xlat
loope
mov
push
call
or
cld
push
ret
inc
or
and
add
mov
pop
int
aaa
mov
loope
out
bound
add
add
add
or
call
in
inc
out
add
add
out
lcall
add
fst
mov
call
lock
sub
add
xchg
xchg
jbe
call
inc
add
add
add
add
mov
add
jmp
sbb
adc
mov
and
add
xchg
in
fs
add
push
add
mov
push
add
stc
push
add
push
into
jo
add
imul
mov
cmp
gs
mov
test
popf
int
call
call
cmpsl
call
add
jmp
and
dec
mov
adc
add
add
lea
call
rcl
mov
call
dec
repnz
xchg
mov
call
out
jecxz
mov
mov
add
cli
xchg
dec
popf
ja
pop
or
push
add
jle
insl
sbb
inc
call
sbb
xchg
jns
xchg
cltd
mov
jnp
cs
sbb
shr
add
daa
arpl
or
pop
leave
call
aad
call
call
mov
add
mov
add
xlat
ret
call
add
stos
adc
add
add
leave
jl
call
jbe
call
test
and
addr16
sahf
jo
add
jnp
add
jle
lock
shl
push
das
jmp
adc
add
call
add
call
imul
mov
add
lret
add
mov
movsl
call
jno
add
jnp
xor
lods
pop
sub
icebp
pushf
shr
add
jmp
fistpl
imul
adc
add
sub
push
add
sahf
push
add
cmp
ret
jmp
arpl
xchg
fists
test
fwait
iret
adc
add
mov
dec
aad
fistps
mov
jmp
daa
sbb
or
mov
call
mov
shl
call
cmc
push
mov
insl
mov
xchg
sub
repz
add
call
mov
call
jae
add
xchg
jne,pn
ffreep
call
repz
pop
sub
sbb
and
add
scas
stos
lret
jns
add
sbb
jge
lock
iret
xchg
inc
call
inc
add
popa
add
xchg
std
outsl
inc
add
mov
shr
cmp
faddl
add
push
add
sbb
xor
add
call
leave
mov
dec
popa
add
push
rcll
add
xor
add
dec
clc
shrl
pop
fmul
jg
call
mov
inc
push
fldenv
push
add
inc
add
jo
add
add
es
out
cmp
call
in
inc
add
or
call
dec
roll
add
call
pusha
add
push
ljmp
push
roll
add
push
add
lret
mov
call
call
add
mov
add
out
mov
sbb
and
gs
inc
add
jns
and
add
jmp
push
ds
cmpsl
push
push
add
daa
call
mov
call
call
call
sbb
add
adc
fadds
push
add
add
add
sbb
call
repnz
add
xor
add
and
add
call
mov
jne
call
arpl
add
call
cmpsl
inc
add
inc
push
add
pusha
add
cmpsl
call
xchg
daa
call
mov
pop
sbb
or
jecxz
xchg
in
jns
push
add
iret
lahf
outsb
inc
add
test
lea
sub
gs
sti
sbb
sbb
add
fs
addr16
nop
lahf
push
add
sbb
mov
arpl
add
push
jno
add
ljmp
shr
jne
ljmp
cmpsb
call
scas
xor
add
add
lret
jl
mov
jns
packsswb
add
add
dec
aaa
sub
call
call
mov
push
ret
fisttps
cmpsb
call
lcall
inc
call
shr
add
add
mov
pop
sbb
call
pop
adc
add
call
addr16
enter
add
push
ret
sub
add
pop
cmpsl
call
call
add
add
std
pop
dec
xchg
int
cmp
mov
call
call
aas
xchg
pop
inc
add
addr16
adc
add
std
inc
add
callw
inc
add
callw
add
add
inc
call
mov
add
inc
call
jno
add
dec
dec
adc
add
call
fcoml
bound
add
pop
call
call
cmp
fmulp
std
and
add
shl
call
divl
add
jne
call
call
call
sub
call
push
inc
add
push
pusha
add
pop
jge
sub
push
ret
push
or
pop
dec
xchg
jl
shrl
call
add
sarl
mov
repz
push
call
sbb
push
add
pop
inc
add
push
arpl
jp
call
cmp
sub
add
clc
shr
inc
call
add
mov
scas
cltd
lret
in
xchg
ret
call
xchg
cmp
hlt
imul
call
outsl
jno
add
callw
xchg
add
out
or
mov
ja
call
add
je
call
or
and
add
xchg
push
insb
and
add
imul
sub
adc
call
test
insb
inc
call
call
pop
je
cmp
ss
mov
stos
add
add
jb
add
adc
add
shld
call
push
xchg
pop
push
call
mov
call
arpl
mov
adc
lods
or
adc
mov
call
test
and
add
dec
and
call
mov
call
add
call
inc
add
cld
test
add
add
add
call
call
call
jo
and
add
jne
popf
ret
pop
push
call
add
pusha
add
cmc
out
pusha
add
ret
dec
cmc
cmp
popa
jmp
outsl
inc
pushf
jp
or
add
int
jmp
jg
jbe
xchg
mov
stos
pop
int3
jg
push
add
lods
and
add
mov
rcrl
in
lods
xor
add
mov
repnz
mul
call
xchg
dec
dec
xchg
notb
add
shr
add
xor
add
push
add
shl
call
jne
call
call
add
jmp
xor
fs
sbb
mov
pop
jecxz
mov
shrb
add
add
jne
jmp
outsl
gs
call
not
bound
add
addr16
call
or
lahf
in
jne
es
jp
das
and
add
mull
add
cmp
add
xor
add
call
add
call
add
pop
call
iret
es
int
add
jmp
cmp
sti
inc
add
mov
call
fildll
pushf
push
add
sub
xchg
pop
dec
jnp
xor
add
xchg
and
add
push
imul
shr
xchg
mov
scas
pop
call
xchg
jecxz
push
dec
daa
call
out
shr
mov
xor
add
shr
popf
jno
add
cmp
stc
mov
push
add
push
je
push
ret
pop
jbe
sbb
call
jne
jle
js
call
fiadds
add
es
mov
movsl
call
add
seta
push
fsubrl
sub
jo
add
add
nop
decb
sbb
sub
push
call
ret
insb
shr
jp
ljmp
pop
repnz
call
call
add
cmp
fimuls
call
inc
add
mov
add
and
lahf
sub
mov
call
call
add
sub
call
push
dec
sub
jle
add
out
shll
out
aas
mov
jne
call
dec
and
add
notb
lcall
mov
add
push
mov
lock
fcmovnb
call
mov
inc
add
js
sti
in
add
add
sbb
cmc
bnd
popa
add
or
call
testb
adc
call
call
dec
pop
in
mov
mov
call
in
and
add
add
add
out
js
das
leave
pop
lea
add
call
mov
in
push
out
jle
add
add
loop
mov
aad
int3
hlt
jmp
jne
stos
add
add
out
ret
inc
call
jp
push
test
dec
xor
xchg
push
ret
xor
addb
mov
jmp
cmp
test
arpl
xchg
sbb
or
add
sub
ljmp
call
add
call
add
dec
jecxz
lock
call
sub
pop
cmp
adc
add
sbb
lock
add
mov
fisubrl
js
call
lock
mov
call
add
add
add
cmpsb
call
insl
add
arpl
sub
aam
lcall
jg
add
mov
callw
mov
mov
and
add
inc
call
fcompl
adc
add
nop
add
add
sub
inc
call
sub
adc
add
pop
stc
xchg
out
fcoml
add
add
jmp
insl
cmp
pop
pop
sarb
int
jecxz
nop
push
add
jg,pt
int3
lods
in
cmp
dec
xor
add
call
add
pop
icebp
mov
mov
popf
dec
mov
call
or
add
std
xchg
cwtl
add
add
cmp
mov
or
add
mov
add
shr
mul
call
lods
xor
pop
call
jmp
cmpsl
into
or
add
insb
cld
test
sub
add
xchg
lock
call
rcrl
div
mov
test
add
add
filds
cmpsb
call
add
xor
imul
movsb
call
add
sub
pushl
arpl
pop
call
loop
std
rolb
jns
call
jl
fs
fnstcw
mov
push
add
dec
pop
enter
add
mov
cmp
aad
call
and
add
lret
lock
loopne
pop
daa
call
sub
jle
sub
xchg
add
add
jb
add
shr
mov
add
mov
filds
add
inc
add
mov
insl
xchg
sub
add
ja
or
call
insb
repz
call
mov
pop
add
ret
aaa
pop
or
call
sub
call
adc
aas
movsb
call
lahf
dec
hlt
pop
call
call
and
add
add
inc
call
imul
inc
call
add
ljmp
mov
sub
call
je
mov
add
mov
jg
fistpll
call
xchg
clc
dec
cmp
or
mov
xchg
fcomps
add
call
cs
pop
add
setnp
call
call
call
call
adc
add
add
jne
push
movhps
call
add
call
popf
pop
je
call
push
adc
call
fwait
or
enter
add
call
call
ret
and
add
jae
add
call
mov
call
add
in
mov
call
dec
pushf
es
call
call
decb
movsl
call
add
lcall
mov
pop
xor
add
add
fwait
imul
pop
cwtl
ficoms
stos
mov
add
and
push
cmpsl
push
mov
push
ret
push
sub
pshufw
int
in
lods
out
fcompl
rol
call
call
test
or
sbb
add
out
sti
add
add
inc
call
add
lea
mov
dec
loopne
inc
call
ret
call
bound
add
call
repz
arpl
daa
and
inc
add
jp
pop
call
add
add
call
ds
daa
call
xor
add
pop
gs
daa
call
add
adc
add
repz
xor
add
std
sbb
dec
dec
mulb
xor
add
nop
pop
mov
add
add
out
sub
add
and
add
call
sbb
jle
add
xor
add
mov
add
in
fildll
gs
inc
add
imul
mov
jmp
out
sbb
fnstenv
mov
push
ret
adc
sub
std
out
sub
call
jae
add
jmp
pop
xor
add
imul
add
das
movsl
call
add
divl
gs
ja
cmp
push
push
ret
ret
fldenv
aaa
push
add
repnz
dec
sbb
flds
mov
sub
call
cmp
add
jmp
push
call
and
call
lea
add
ja
and
add
call
push
ret
sub
sbb
sub
outsl
cmp
call
call
add
pop
xor
xor
add
add
cmc
stc
call
add
test
fiaddl
add
dec
pop
call
push
or
mov
add
pop
call
mov
rcrb
outsl
push
call
push
jmp
cmpsl
daa
arpl
xor
add
pop
call
shl
call
add
ret
movsb
call
repz
stos
cli
adc
add
adc
add
add
mov
inc
call
adc
add
or
cmp
stos
pop
pop
call
add
sbb
ljmp
and
add
call
mov
call
adc
cwtl
shr
call
arpl
add
pop
mov
call
fldcw
push
jmp
arpl
in
imul
push
jb
add
cmp
call
add
call
add
dec
xor
add
pusha
jmp
dec
arpl
inc
mov
add
outsb
aam
call
cmc
inc
add
and
add
sbb
sub
add
mov
sub
sarl
mov
call
add
jmp
enter
enter
cmc
xor
add
call
call
enter
call
arpl
add
call
add
add
callw
add
call
inc
call
add
cmp
add
xor
mov
add
repnz
add
push
add
loopne
or
inc
add
in
in
out
lods
xor
add
pop
call
xchg
ret
call
add
add
add
call
es
ficomps
idivl
cmpsl
call
cmp
call
jp
mov
in
cltd
das
jae,pt
add
or
add
into
arpl
sti
push
arpl
push
lea
jmp
xchg
xchg
cmc
daa
iret
ret
xchg
in
jns
call
add
cmp
call
nop
test
repnz
ds
test
incb
add
add
cwtl
mov
xor
add
nop/reserved
call
lods
pop
push
add
insl
ret
adc
call
femms
mov
add
sub
aas
pop
incb
call
add
inc
call
pop
and
add
call
add
add
call
sub
outsb
sbb
sbb
xor
or
jp,pt
push
lahf
inc
add
dec
pop
pop
pop
xchg
add
add
call
add
push
inc
scas
xlat
stc
repnz
mov
push
ret
arpl
mov
aas
jp
sbb
push
pcmpgtw
dec
lods
xchg
stos
cmpsl
call
repz
sarb
pop
inc
add
add
add
sbb
add
dec
mov
mov
call
shr
lcall
mov
call
imul
add
imul
add
add
in
jmp
mov
call
call
call
jae
add
add
add
dec
inc
call
add
add
call
add
push
jmp
xor
jmp
add
add
add
call
add
add
add
add
add
xchg
push
inc
add
adc
add
add
dec
push
sbb
call
test
and
stc
xor
add
leave
cmp
pop
xor
lret
mov
lods
std
mov
xchg
divl
mov
xchg
sti
sbb
call
pop
jg
add
testb
aam
call
jmp
add
faddl
xchg
fcomps
in
push
into
cli
imul
mov
or
call
mov
add
push
add
sahf
insb
rcl
pop
adc
dec
cltd
fyl2x
jecxz
mov
call
add
add
add
mov
dec
fwait
call
xor
add
add
std
stos
scas
ja
push
repnz
xchg
cmp
call
dec
mov
call
add
js
call
dec
loop
ljmp
adc
add
scas
stos
out
push
add
mov
int3
jnp
push
xor
add
jl
call
ret
add
lock
out
push
arpl
add
call
push
ret
arpl
in
push
jmp
sub
adc
movsl
call
lcall
push
mov
insl
cltd
mov
lahf
pop
shlb
fisttps
add
xchg
xchg
pusha
add
sub
incl
add
jns
add
ret
call
dec
and
jne
imul
sbb
and
add
jmp
mov
dec
outsl
shll
call
mov
call
dec
cmp
add
ds
in
outsl
in
cld
mov
add
jae
add
lcall
and
ss
in
push
add
push
add
jmp
into
inc
sub
mov
call
jns
mov
shr
pushf
jmp
popa
add
loopne
sbb
pop
add
arpl
lret
sti
push
xor
add
add
jecxz
mov
jmp
ljmp
mov
mov
add
xor
add
sbb
jp
inc
add
cmp
call
es
call
add
addr16
test
inc
add
push
into
xor
add
add
add
call
jnp
sub
push
ret
adc
add
add
lcall
aam
call
jo
add
add
popl
jmp
lods
dec
enter
call
inc
call
dec
imul
add
push
mov
aaa
insb
add
add
hlt
fsubl
decl
add
add
enter
call
dec
rcrl
adc
add
imul
add
call
xchg
mov
jl
dec
lock
popa
add
ss
mov
arpl
rorb
stos
js
and
add
out
or
outsl
loopne
and
add
inc
call
pop
mull
dec
cmp
mov
add
add
sahf
loop
jle
js
xchg
mov
and
add
fs
xchg
pop
out
pop
and
add
adc
add
bswap
outsl
call
inc
add
adc
add
cli
aad
sub
call
call
fucomp
shr
push
inc
add
add
and
call
add
cs
add
adc
pop
mov
hlt
es
add
ds
push
shr
mov
shll
call
mov
imul
add
add
mov
mov
add
add
xlat
sbb
add
push
fidivl
call
add
add
jecxz
pop
inc
add
pop
outsl
in
in
and
add
call
shll
add
lahf
dec
mov
fimuls
cli
es
xchg
outsb
pop
ret
call
add
mov
fs
push
test
add
call
rcr
or
dec
and
add
sub
fwait
negl
mov
jb
add
sbb
pusha
add
xor
add
push
inc
add
cwtl
enter
xchg
mov
pop
and
loop
bound
add
call
add
add
jbe
add
add
cmp
add
push
adc
add
stos
pop
fstl
sub
callw
loope
inc
add
xor
stc
or
scas
push
or
jmp
mov
sub
sbb
add
add
sti
call
add
insl
xor
add
call
dec
cmp
imul
pop
adc
xchg
pop
call
call
dec
push
add
arpl
dec
mov
add
add
pop
sbb
je
daa
call
add
xchg
or
jecxz
pop
xchg
add
xchg
sbb
icebp
pop
mov
sub
add
cmp
call
add
push
call
jge
call
add
xchg
jae
add
in
pop
or
cmp
add
dec
push
ret
sub
mov
sbb
adc
les
add
sub
call
out
sahf
push
add
cmpsb
call
adc
and
add
mov
push
add
cmp
dec
jno
add
call
push
jmp
pop
aam
es
xchg
xor
add
ret
add
scas
cmc
and
add
call
call
imul
sbb
or
mov
sahf
fwait
inc
call
nop
mov
add
ss
ret
add
fwait
sub
add
dec
xchg
out
ret
mov
add
in
mov
call
shl
dec
inc
call
es
add
pop
cmp
rorl
dec
out
push
add
add
add
call
enter
mov
add
nop
sahf
add
add
scas
inc
add
outsb
inc
add
aaa
inc
add
cli
jecxz
not
call
add
add
inc
add
loope
rcrb
ss
dec
mov
pop
sub
add
sbb
aad
add
jmp
arpl
sub
bnd
inc
call
out
dec
add
add
ljmp
jge
add
pop
sub
out
callw
mov
clc
shr
xor
add
adc
add
add
mov
call
add
call
mov
call
push
inc
add
sbbb
and
add
add
add
add
jb,pn
add
femms
enter
add
call
push
call
decl
ret
pusha
add
push
aaa
arpl
dec
dec
push
mov
fnstsw
add
jecxz
ds
shll
fdiv
ja
fcomps
cmp
add
add
jl
jl
stc
call
popa
add
fwait
cwtl
incb
add
add
inc
add
pop
fwait
in
out
call
aas
xchg
xor
add
cmp
mov
add
jnp
call
sub
call
scas
adc
add
add
loopne
pop
out
fs
add
push
add
sub
jp
shll
call
call
xor
add
fnsave
add
pop
jno
add
pop
sub
sub
call
xlat
adc
add
sub
add
inc
pushf
shr
call
sbb
sub
test
lock
ja
push
add
push
inc
add
or
pop
repnz
xchg
mov
add
std
dec
mov
lods
fucomip
pop
pusha
add
xor
push
add
push
add
mov
call
call
cmp
push
fisttpl
push
cmp
add
bound
add
xlat
out
xchg
sbb
sahf
cmpsl
call
fdiv
jnp
inc
add
dec
push
mov
decb
fisttpl
call
mov
call
aam
call
jmp
or
call
sub
mov
jae
add
add
push
adc
add
call
xlat
and
add
sbb
jmp
ds
je
call
add
std
sbb
add
add
add
jmp
mov
or
sub
aas
pop
in
sbb
mov
xchg
bswap
and
mov
add
test
mov
mov
add
lret
inc
add
cmp
jns
ds
imul
enter
mov
call
call
mov
arpl
add
pop
xchg
divl
call
push
sti
call
call
in
sub
sub
dec
push
loop
inc
add
daa
into
mov
call
arpl
add
mov
call
add
add
stos
add
add
call
call
push
add
shr
add
dec
adc
call
xlat
dec
push
add
fistps
lcall
xrelease
add
add
add
sub
or
pusha
add
sub
lea
add
call
fisubl
call
add
cmc
leave
xlat
int
jbe
jg
call
call
es
add
add
xor
call
cmc
dec
pop
sub
js,pn
mov
inc
add
popf
lret
cld
add
add
call
fbstp
into
loope
and
add
dec
inc
call
mov
add
call
call
call
add
xchg
inc
call
adc
call
push
ret
pushf
mov
mov
mov
add
js
sub
jmp
push
sti
arpl
ds
push
out
dec
ja
js
call
call
callw
adc
call
outsl
ret
iret
insl
ja
add
ret
call
add
add
add
add
xchg
lret
cs
daa
call
add
cmpsl
call
lahf
pushf
push
add
dec
sub
fmuls
mov
add
mov
nop
in
sbb
test
insl
add
jmp
xor
call
add
jge
call
hlt
mov
call
lret
sub
call
ficompl
sub
cmp
add
test
or
push
aad
scas
in
jle
dec
pop
call
stos
sub
mov
arpl
add
int
jae
add
fdivs
fistpll
inc
add
insb
enter
cmpsl
call
inc
call
pop
cmp
add
push
add
adc
add
push
add
or
aam
sub
insb
call
add
in
sub
xchg
xchg
mov
shr
sbb
mov
sbb
scas
cltd
sbb
mov
add
lods
and
inc
ds
adc
add
call
mov
sub
ds
lcall
add
add
add
ds
xor
add
callw
lahf
insl
test
popf
mov
movsl
call
jnp
aas
out
pusha
add
mov
call
outsb
or
add
lret
in
jns
mov
lea
push
add
jmp
fistpll
add
add
insb
inc
add
cs
into
repnz
call
jg
call
sub
out
call
jl
sbb
test
push
add
push
ret
aas
test
dec
sbb
or
jmp
pop
add
add
call
mov
add
test
adc
mov
shr
pop
xor
add
add
call
add
mov
mov
mov
dec
popa
add
mov
add
pop
add
adc
pop
mov
add
adc
xor
add
call
mov
call
sub
add
fcmove
mov
xor
xor
add
shr
call
adc
add
jo
add
call
js
cmpsb
data16
jne
add
push
call
and
add
call
call
jmp
add
pop
dec
repz
dec
leave
loopne
dec
pop
pop
dec
jno
add
out
hlt
push
push
std
scas
inc
add
or
call
and
add
add
sbb
call
add
sub
call
ljmp
js
outsb
cwtl
ja
jle
sub
pop
pushf
fwait
mov
sub
rorl
loopne
sub
add
jg
shrb
and
popf
dec
callw
call
jle
mov
das
xchg
jne
mov
call
add
add
fucomip
push
incl
cmpb
iret
xor
add
mov
call
add
pop
inc
add
dec
sti
xor
std
xor
add
call
nop
xor
add
xor
add
mov
call
mov
xchg
nop
addr16
ret
call
add
xlat
clc
xor
add
stc
inc
call
mov
mov
mov
cmp
cmpsb
call
add
call
hlt
loop
outsb
xchg
call
call
push
jmp
cmpsl
arpl
or
xchg
jle,pn
shll
add
add
pushf
leave
callw
jl
call
aam
add
adc
add
mov
call
loopne
jmp
sbb
fs
sbb
shll
add
or
pop
push
ret
mov
push
pop
xor
aaa
popf
fsubrl
ret
call
mov
call
rcl
sti
mov
imul
decl
sub
add
xor
lahf
jg
cmp
aas
jmp
call
call
jg
aad
adc
add
call
sbb
add
clc
jle
dec
xchg
ljmp
add
sbb
movsb
xchg
inc
add
arpl
fs
daa
inc
add
repnz
das
call
call
and
add
add
flds
call
lret
call
roll
mov
sub
add
call
in
mov
fidivl
adc
add
add
adc
add
es
call
call
fs
adc
add
add
test
pop
loopne
xchg
stos
add
add
add
setno
call
mov
push
cmpl
push
ret
cmp
inc
call
out
stos
and
add
add
outsb
mov
add
lcall
mov
mov
imul
fcmovnbe
decl
test
add
push
ret
pop
ret
call
add
sub
xor
add
mov
add
rcrl
pop
add
add
sahf
xchg
cwtl
add
add
dec
adc
call
imul
mov
jmp
into
and
arpl
jno
add
mov
and
add
call
call
out
dec
sbb
in
jo
add
add
xchg
mov
je
jmp
sti
fisubrs
push
ret
sbb
mov
call
jmp
dec
arpl
call
call
call
add
loope
nop
push
add
xchg
pop
add
mov
jge
out
mov
pop
add
arpl
sbb
fsubrs
xchg
and
add
call
add
push
add
dec
and
jb
add
enter
call
add
js
fucom
call
cmpsb
call
add
jge
lods
pop
addr16
push
mov
add
add
adc
add
add
or
add
add
call
add
mov
lods
and
add
ss
enter
add
stc
stos
push
add
mov
add
cmp
stos
outsl
adc
add
movsl
call
sbb
add
or
ret
cmp
cmp
insl
in
mov
call
mov
cmp
add
mov
aam
inc
call
push
and
add
push
add
call
call
add
mov
call
add
add
adc
push
or
and
test
jmp
pop
dec
adc
mov
lret
loop
sbb
das
mov
mov
jle
call
clc
loopne
xor
add
inc
stc
decl
out
arpl
pushf
fcoml
add
add
pop
add
push
sub
add
call
call
ljmp
push
ret
mov
mov
sti
push
push
add
add
pop
arpl
call
inc
add
xchg
int3
daa
call
lret
cmpsl
call
js
call
push
push
ret
adcb
add
fistpll
pushl
push
ret
arpl
pop
pop
dec
mov
cli
call
sub
ds
call
inc
call
movsb
call
call
insb
call
shrl
xchg
bound
add
call
add
xchg
pop
and
add
add
call
call
lods
cmp
jp
in
cmp
xlat
mov
add
in
in
sub
sub
mov
cmp
adc
add
into
daa
call
call
or
add
mov
jmp
ljmp
add
call
add
add
jle
call
jo
add
add
xchg
mov
es
add
lret
cmp
shl
call
mov
sub
in
aas
xor
add
or
and
add
pop
add
cli
push
dec
sub
add
mov
cmp
add
cmp
and
fadds
call
leave
ss
adc
add
add
out
sbb
xchg
nop
daa
call
call
or
sbb
jmp
daa
ds
daa
daa
sbb
add
or
in
rcrl
add
inc
call
sbb
add
dec
int
add
cmpsl
call
call
dec
adc
add
sub
or
test
leave
jmp
ljmp
jmp
push
ret
mov
mov
add
add
push
add
sbb
add
mov
inc
add
xchg
cmc
arpl
cmc
mov
ja
xchg
sub
ffreep
call
in
lret
adc
add
in
and
and
add
callw
add
cli
cli
mov
cld
aad
fprem
add
add
jl
std
mov
call
jg
std
adc
add
cmc
sub
sub
xchg
xlat
call
dec
xor
add
add
test
ss
scas
and
sbb
add
fcoml
add
cmp
add
add
inc
call
inc
call
inc
add
mov
mov
mov
adc
add
xlat
xor
add
lock
mov
adc
adc
pop
jle
cld
or
outsb
mov
test
ret
xor
movsl
call
sub
stc
pop
es
call
out
mov
add
sub
call
rcr
push
push
jmp
sub
inc
sti
add
add
out
jno
add
sub
mov
fbld
add
mov
xchg
push
add
sub
add
sub
cs
add
mov
add
mov
add
xor
adc
dec
int
or
add
out
mov
call
push
call
out
jae
add
call
add
jmp
loop
cs
outsb
mov
add
fs
pop
lahf
arpl
add
decb
add
sub
fwait
pop
mov
call
call
add
and
add
add
call
add
jae
add
pop
call
add
testl
add
out
stos
xchg
imul
jp
ror
jmp
ds
fstps
add
dec
sub
add
mov
inc
call
scas
add
sub
add
push
jne
jmp
sbb
test
lcall
mov
add
daa
arpl
cmc
aaa
adc
add
add
mov
xor
jmp
dec
sub
push
call
push
add
ret
call
add
push
jmp
jmp
arpl
daa
imul
jl
add
push
add
movsb
call
fldl
call
add
xchg
aam
cmpsb
call
sahf
aas
mov
and
add
ljmp
pop
arpl
add
sub
mov
call
pop
aam
add
iret
js
xchg
pushf
mov
mov
call
add
dec
out
pop
hlt
pop
int3
adc
add
dec
inc
call
add
clc
in
rcrb
and
add
call
call
ja
cmp
xchg
xchg
mov
add
sbb
call
ja
mov
mov
add
jae
add
add
jmp
sbb
aaa
pop
pusha
add
mov
push
add
xlat
cli
add
add
push
sti
out
sub
call
cmp
inc
add
jmp
scas
das
loop
mov
inc
add
xchg
cld
push
fld
call
sub
add
nop
and
das
dec
into
insb
cltd
jp
aaa
cs
call
sbb
stc
fidivrl
jle
call
out
xlat
scas
stos
mov
xchg
add
outsl
inc
outsl
cmpsl
jnp
mov
sub
call
adc
add
inc
call
pause
mov
add
jg
call
adc
add
out
scas
aad
call
add
pop
daa
arpl
mov
cmp
add
int
stos
ss
xor
add
mov
jl
sbb
gs
aam
fnstenv
and
add
test
dec
sub
add
in
pop
mov
pop
into
cli
call
mov
scas
pop
es
call
inc
add
inc
call
mov
dec
adc
into
xchg
mov
mov
and
add
lods
inc
add
ret
or
add
ffree
call
fcoml
mov
jmp
sub
jmp
mov
xor
add
add
add
adc
add
add
pop
scas
aad
pop
sbb
test
dec
lret
mov
push
inc
call
dec
jecxz
out
dec
push
add
mov
xchg
stos
pop
or
add
jns
in
shr
jb
add
add
call
repnz
call
call
pop
sub
cld
pushf
mov
adc
add
sub
imul
call
sahf
jecxz
enter
add
sbb
call
call
in
mov
pop
loopne
xor
bound
add
nop
cmp
shrb
stos
xchg
mov
push
add
push
add
movsl
call
mov
cmp
xor
add
sbb
sbb
jmp
test
pop
enter
pop
call
or
call
lahf
mov
decl
jmp
arpl
call
shrb
call
clc
pop
cltd
fs
add
shlb
add
adc
and
add
push
push
test
call
add
add
sbb
insb
xchg
out
fcomps
int3
push
xor
jmp
aam
sub
lods
xor
add
xchg
pusha
add
sbb
push
sub
and
clc
repz
add
repz
call
insb
std
lret
in
idivl
add
fwait
jmp
xlat
clc
jnp
sub
mov
and
add
call
call
call
scas
xchg
mov
mov
arpl
add
ljmp
push
ret
sbb
call
insb
push
jmp
pop
add
lods
dec
xor
add
mov
jmp
and
arpl
les
dec
incl
adc
or
sub
ret
call
mov
call
mov
in
int3
mov
in
enter
and
add
mov
cmc
xor
leave
out
in
sbb
push
add
pop
mov
add
jns
call
xchg
pop
lock
rolb
call
add
mov
push
call
call
xor
js
call
sbb
add
sbb
add
push
jle
lea
add
sbb
add
add
mov
aaa
push
aas
cld
adc
mov
pop
add
add
dec
scas
mov
ljmp
call
and
add
flds
pop
ljmp
iret
cmp
push
jmp
mov
cmp
call
sub
push
pop
push
add
sub
mov
add
ret
call
mov
call
insb
and
mov
add
dec
mov
cmc
or
test
cwtl
roll
add
sbb
add
jne
hlt
add
mov
call
jecxz
dec
xor
and
call
lods
push
jne
push
add
cmc
and
fisubrs
add
mov
and
push
callw
xchg
jo
add
push
mov
adc
cs
inc
add
jle
pop
dec
dec
cmp
add
mov
mov
mov
call
add
pushf
pop
bound
add
stc
js
push
fldt
jg
cmpsb
call
pop
jne
pop
je
call
ljmp
cmp
add
add
fisttps
cmp
pop
xchg
inc
add
into
or
call
lret
jns
dec
nop
incl
inc
push
add
mov
jmp
mov
call
call
cmp
jae
add
add
test
call
push
arpl
outsl
mov
add
add
sbb
sbb
add
call
in
stos
lcall
add
fistps
jne
jmp
cmc
jno
add
add
sbb
cmp
arpl
int
call
pop
jle
gs
push
stos
outsb
jnp
call
call
xor
add
mov
call
add
call
xchg
and
add
xchg
push
push
add
dec
adc
call
add
js
call
xor
add
xchg
insb
add
add
call
mov
add
add
call
outsb
mul
call
mov
jae
add
roll
ss
je
jle
add
cli
test
cs
xor
and
add
call
call
push
dec
hlt
sub
call
or
repnz
add
enter
ljmp
inc
call
call
cmp
sahf
jge
adc
add
add
dec
pop
sub
add
js
in
lret
icebp
push
add
pop
add
add
in
jge
call
rcll
add
push
adc
ss
std
loop
cli
push
fs
arpl
add
mov
add
bound
add
push
call
fcomps
fcompl
and
add
mov
lcall
add
cmp
imul
xchg
mov
test
jo
add
in
sub
add
cmpsb
call
call
bound
add
and
jnp
gs
int
outsl
mov
out
or
call
add
push
ret
pop
into
outsl
dec
jmp
xchg
das
add
mov
inc
add
jge
call
decl
ljmp
push
xor
jmp
push
push
cmpsl
xor
test
xor
add
add
outsl
jmp
jbe
pop
call
fstl
call
shr
call
add
lret
xlat
rcrb
fadds
add
xor
fmul
add
leave
mov
add
shl
call
call
cwtl
add
add
sub
decb
call
in
rorb
loopne
repz
fs
call
call
add
call
adc
add
sbb
out
mov
mov
jmp
pop
sub
imul
jnp
xlat
sub
inc
call
call
call
xlat
adc
lcall
dec
and
add
call
mov
stc
hlt
or
adc
add
pop
dec
dec
pop
add
add
add
dec
js
push
add
fnstenv
add
outsb
dec
sub
jg
pop
inc
add
dec
and
add
aas
xchg
ret
push
add
movsb
call
dec
or
call
xchg
xchg
test
outsb
cmp
add
callw
inc
call
add
push
call
outsb
push
add
add
pop
inc
add
ficomps
call
shrb
jbe
add
push
push
mov
icebp
inc
call
popl
call
test
add
push
ret
pop
sbb
jbe
cltd
dec
daa
call
add
adc
cld
lods
insl
jno
add
jmp
xchg
push
int
insl
leave
xchg
dec
imul
test
ss
or
mov
jb
add
jp
lcall
mov
cmpsb
call
add
pop
push
in
repz
call
jo
add
outsl
push
call
mov
pop
xchg
jge
sbb
arpl
add
mov
add
int3
test
add
add
add
jmp
add
call
add
arpl
add
call
call
add
jle
call
jge
pop
sbb
add
dec
lock
fdiv
in
daa
call
rorb
sub
push
add
enter
icebp
mov
mov
cld
adc
pop
cmovge
sbb
lcall
add
shr
cmpsl
call
jno
add
call
cmp
shr
jae
add
call
adc
add
loope
sbb
sahf
xchg
out
idiv
icebp
push
jmp
pushf
push
fld
call
sbb
shr
cmp
add
aam
sub
add
mov
pushf
es
mov
xchg
dec
xchg
xchg
xchg
sub
pop
sub
cmp
add
push
cmp
aas
shr
fildll
lahf
rclb
add
lods
xchg
lods
scas
shr
sub
fsubr
cli
push
fcmovnb
call
movsb
call
call
pop
push
add
nop
jmp
cld
jo
add
enter
popa
add
insb
call
mov
jmp
push
ljmp
add
lret
dec
add
add
enter
push
jne
jmp
frndint
cwtl
xchg
mov
fisubs
add
adc
repz
call
cltd
or
inc
add
aaa
aad
pop
xchg
sub
decl
xor
add
call
sub
call
push
jmp
arpl
ljmp
pusha
add
test
movsl
call
add
mov
mov
jle
call
push
push
add
lods
sub
push
add
mov
add
jmp
ss
add
add
or
xlat
adc
dec
push
inc
add
ss
push
cmp
add
shr
and
add
add
pop
aas
mov
sub
add
call
add
stos
ss
call
enter
add
sbb
jmp
add
in
fists
xor
add
dec
incb
add
pop
rolb
call
lea
add
add
dec
aam
mov
call
and
add
ljmp
jmp
sub
call
jae
add
or
add
mov
or
add
mov
out
jns
add
add
add
call
iret
rorl
call
mov
or
add
inc
call
call
inc
add
xchg
ficompl
test
adc
call
insb
xor
add
add
outsl
and
add
and
add
jbe
pop
sub
in
imul
push
and
jmp
adc
fld
test
jno
add
fidivs
dec
xchg
inc
add
cmp
add
dec
cmp
add
sbb
push
push
outsl
mov
cld
dec
iret
stc
aam
jne
call
mov
dec
andb
sub
and
add
add
add
in
add
add
shrb
sub
add
inc
call
dec
sub
jle
mov
push
and
xchg
popf
js
jecxz
shrb
or
mov
sbb
mov
sub
iret
shr
inc
add
sti
sahf
mov
add
testb
fiaddl
mov
mov
jl
mov
call
aaa
aam
ss
std
sbb
decl
test
jmp
ret
jo
add
xor
call
mov
insl
mov
push
mov
test
mov
popa
add
mov
out
movsb
call
or
call
mov
add
repz
mov
inc
jmp
inc
mov
xchg
push
call
jge
or
jns
call
das
pop
test
mov
sub
mov
add
repnz
xchg
fsubrl
add
pop
push
dec
shr
adc
add
cld
sahf
int3
push
call
jnp
iret
addr16
adc
test
cli
sub
push
push
add
or
call
call
call
and
jle
add
arpl
lock
es
xor
call
adc
pop
mov
add
pop
arpl
aaa
in
cmp
call
or
and
add
shr
or
loope
call
mov
call
call
xor
movsb
call
sub
mov
jle
add
lret
shr
add
dec
xchg
mov
sldt
aam
daa
dec
add
ljmp
scas
decl
add
xchg
arpl
pop
test
add
cmpps
jns
call
leave
loopne
push
add
out
add
add
clc
leave
push
cmp
sbb
test
gs
call
add
shr
popa
add
aam
and
push
call
pusha
add
pop
sub
mov
push
jmp
add
daa
sbb
jmp
call
mov
add
add
call
call
mov
inc
call
outsb
das
addr16
add
pop
mov
call
pop
out
in
mov
cld
push
dec
test
mov
adc
add
scas
push
add
pop
call
or
mov
call
add
inc
add
jae
add
shr
xlat
ljmp
cmpsl
call
mov
call
sbb
add
or
sub
cld
push
call
es
fisubrs
add
mov
add
dec
ss
icebp
add
add
arpl
mov
push
push
arpl
arpl
call
cwtl
inc
add
test
lahf
and
call
pop
xor
add
scas
aas
fistpl
in
cld
dec
gs
rep
push
ret
sbb
or
inc
call
mov
add
idivb
sbb
sahf
stos
roll
pop
rorb
imul
cmp
lods
loope
pop
dec
mov
stos
pusha
add
pop
in
and
add
call
and
add
adc
call
or
imul
add
call
pop
adc
add
add
and
or
add
lods
leave
mov
clc
lret
sbb
scas
movsl
call
mov
pop
jle
call
imull
adc
add
test
call
call
jge
call
ja
lea
add
xor
jmp
enter
repz
add
add
pop
mov
add
add
call
cmp
cmp
jp
sub
sar
jmp
dec
loope
js
call
out
add
stos
sub
aam
pop
and
add
std
jne
call
add
push
mov
jmp
cmp
inc
add
mov
adc
fcomps
leave
shr
imul
call
call
mov
call
loope
movsl
call
add
add
sti
add
add
mov
dec
fcomip
rclb
jno
add
add
cmp
lcall
add
cmp
xor
add
call
loopne
add
jmp
arpl
call
movsl
call
add
adc
add
sti
push
dec
jbe
jle
jne
jmp
pop
push
call
call
das
push
arpl
add
stos
sbb
call
mov
call
inc
add
add
add
or
call
aad
and
push
add
xor
add
scas
xor
add
lret
stos
cld
cltd
test
out
sbb
add
jecxz
add
cmp
add
call
fcomps
push
jmp
ljmp
add
sub
push
add
call
inc
add
pop
jnp
call
js
mov
add
and
add
call
pop
inc
add
mov
xor
add
lock
test
repnz
gs
add
add
test
pop
fiadds
fstl
add
fst
aas
mov
call
lcall
int3
pop
cmp
push
adc
add
enter
loope
jmp
sti
ds
out
out
ljmp
add
add
call
iret
push
add
or
add
add
jmp
mov
sub
call
mov
sbb
cmp
jp
shr
call
add
call
lret
movsb
call
mov
call
mov
in
dec
call
xor
add
xchg
fcoms
call
testl
add
mov
call
jl
and
add
add
call
and
add
add
adc
add
add
push
ret
pushf
daa
fs
pop
adc
add
jmp
mov
mov
inc
add
mov
add
pop
call
call
test
jecxz
adc
or
nop
or
or
add
add
mov
call
add
ret
push
ret
andb
pushf
push
call
in
pop
inc
add
inc
call
call
add
call
jp
sbb
jmp
xor
inc
cmp
add
mov
add
mov
add
lods
mov
bound
add
add
push
inc
add
pop
enter
xlat
cmp
call
es
push
mov
ljmp
rcrb
call
call
xchg
mov
sbb
add
adc
add
mov
xchg
or
sub
sub
call
mov
add
arpl
xor
jbe
xor
add
add
inc
call
call
cwtl
cmpsb
call
shr
call
push
je
jmp
inc
cmp
add
jnp
pop
stc
mov
lret
in
fldl
add
pop
cmp
add
call
add
jp
call
add
call
std
std
xlat
lods
sbb
pushf
mov
dec
inc
add
xor
mov
pop
add
add
mov
shll
add
mov
stc
lods
push
loop
xor
add
clc
and
add
mov
decl
add
mov
pop
xchg
push
int3
je
add
jl
inc
call
enter
arpl
mov
add
pop
adc
dec
mov
mov
add
add
inc
add
mov
sbb
cmp
cs
xor
add
pop
out
mov
mov
call
call
lret
add
sarl
jl
js
dec
test
add
xor
add
add
test
rcrb
mov
mov
jle
mov
jmp
pop
jne
dec
imulb
add
mov
mov
pop
call
add
int3
cmc
es
add
jmp
call
add
fildll
push
add
and
add
call
pop
pop
jmp
pop
inc
add
dec
jns
call
add
cmp
lock
add
call
push
add
ss
sub
add
push
mov
push
ret
add
push
mov
jl
or
sbb
call
aam
leave
ds
pop
adc
insb
in
mov
jg
in
or
xchg
test
jge
push
mov
push
add
mov
call
add
pop
call
pop
call
add
pop
cmpsb
call
sahf
in
mov
sbb
add
inc
add
adc
push
arpl
pop
pusha
add
or
or
add
shr
add
push
add
inc
call
dec
sbb
test
sbb
loop
mov
pushl
in
pop
pop
or
call
mov
repz
pushl
into
or
int
add
add
call
dec
enter
inc
add
adc
add
in
idivb
add
xchg
push
aad
ljmp
into
lods
aaa
add
add
add
lret
sbb
add
jno
add
cmc
mov
lods
sub
mov
iret
mov
stos
add
add
add
decb
call
call
add
icebp
adc
add
es
scas
daa
call
call
cmp
ret
mov
inc
add
push
arpl
or
call
call
call
mov
test
ljmp
add
mov
cmc
lods
aam
bound
add
mov
call
mov
mov
fcoml
inc
add
jp
mov
xchg
sub
call
add
cwtl
sbb
aaa
push
mov
mov
push
ret
push
ret
int3
lea
inc
add
pop
pop
rorl
add
stos
cmp
mov
call
sub
call
push
loopne
jmp
add
pusha
add
mov
call
add
adc
cmpsl
call
sub
mov
pushf
sarb
dec
xchg
xchg
and
add
cs
mov
imul
gs
push
add
ficomps
dec
xchg
mov
mov
dec
xchg
jmp
inc
jmp
outsl
adc
add
shr
mov
jmp
lods
xor
enter
sub
mov
add
cli
iret
sbb
call
push
mov
jmp
sbb
jne
inc
call
sub
test
dec
cmp
add
fs
call
add
add
jo
add
add
add
add
jmp
arpl
add
pop
add
pop
lock
iret
fs
add
cmpsl
call
inc
call
jnp
inc
add
call
mov
sub
pop
adc
add
add
fwait
insb
int3
sub
call
loop
pop
and
add
dec
sti
out
jge
call
or
xchg
aad
dec
fcompl
add
push
out
jl
pusha
add
cmpsb
call
jo
add
cmp
rorl
icebp
cmp
call
call
shll
add
add
call
inc
add
sahf
out
daa
call
mov
mov
mov
call
add
mov
call
js
add
jo
add
ljmp
mov
into
mov
add
xchg
jecxz
cmp
inc
add
xchg
push
enter
dec
push
push
push
mov
lret
add
add
push
ret
sbb
fwait
jecxz
sarb
call
add
xor
add
dec
sbb
sbb
cmpsl
xor
add
shr
in
pop
cmp
add
add
pop
or
icebp
mov
call
xlat
in
push
pusha
jmp
add
xchg
inc
add
fisubrs
add
mov
jne
call
call
stos
add
add
sub
add
or
icebp
adc
add
imul
mov
icebp
xchg
adc
call
adc
add
add
add
popa
add
mov
mov
ret
mov
call
add
enter
popf
xchg
fistpll
jl
call
mov
cmp
mov
dec
out
dec
loope
mov
gs
jns
call
call
int3
push
mov
jmp
pop
arpl
cmp
push
ret
arpl
jp
call
sbb
jg
jl
jmp
mov
ss
and
add
jmp
fildll
xor
pop
sub
mov
lcall
or
pop
outsl
pushf
arpl
mov
rep
jmp
sbb
aaa
pop
dec
dec
jl
fisubs
movsl
call
add
xchg
sbb
out
push
or
call
or
call
push
add
pushf
add
add
xchg
mov
or
mov
mov
push
ret
mov
call
lods
daa
call
xor
add
stos
and
add
inc
add
cmp
call
in
dec
pop
xor
mov
add
inc
call
dec
xlat
push
add
addr16
ljmp
sub
call
incl
aad
lcall
mov
add
xchg
xchg
cmp
add
mov
imul
in
movsl
call
out
and
mov
cmp
add
add
sbb
jmp
sbb
sbb
sbb
sub
mov
adc
aas
jle
call
add
add
call
dec
dec
movsl
call
sbb
jne
jmp
arpl
or
add
xchg
xor
add
add
inc
add
jae
add
cmp
call
call
call
mov
fdivrs
add
add
call
iret
popa
add
imul
lahf
sbb
jmp
arpl
xchg
and
pop
call
push
jmp
cmp
rcl
lret
add
call
add
mov
mov
add
mov
call
add
jl
add
inc
push
jp
sub
call
add
mov
call
in
and
lret
sub
add
and
add
call
add
add
adc
add
test
fistpl
lret
sub
shll
add
xchg
into
in
jecxz
or
add
pop
roll
add
add
push
mov
add
sbb
dec
outsl
push
add
in
add
add
add
clc
add
add
add
mov
jmp
arpl
push
mov
cmp
jecxz
lods
call
adc
add
jbe
adc
add
lcall
push
inc
add
sti
mov
lods
add
add
lret
or
call
sahf
pop
pop
imul
jp
call
call
outsb
popa
add
sub
add
shr
call
mov
mov
add
add
push
add
inc
add
or
pop
sbb
call
faddl
lods
pop
lea
add
call
out
shr
repz
add
inc
add
mov
add
add
add
aas
in
sub
addr16
xor
jmp
sub
cmc
push
mov
xor
add
mov
jmp
arpl
call
call
call
call
pop
mov
call
mov
call
jb
push
call
ret
lret
adc
add
add
shll
test
cwtl
testl
in
jp
push
pushf
ljmp
cmc
push
sbb
add
and
add
add
cmp
adc
add
jge
push
ss
and
movsl
call
call
add
dec
dec
mov
jmp
fs
sub
inc
add
cmp
pop
mov
cmc
adc
add
ja
xor
add
sbb
int
jmp
enter
dec
out
cmp
aam
callw
mov
call
inc
add
sbb
movsb
jmp
mov
bnd
add
push
lret
dec
mov
sub
call
mov
fldenv
add
push
ret
adc
call
cs
call
lcall
dec
pushl
xor
xchg
daa
outsl
cmp
cld
icebp
in
pop
pop
lea
stos
add
add
xor
add
cmp
icebp
decl
test
add
arpl
xor
arpl
push
add
mov
add
sub
aas
add
add
call
or
lock
jmp
mov
call
add
sub
pop
call
stc
xchg
in
push
add
fistl
add
inc
call
push
mov
aam
mov
cmpsl
call
mov
addr16
pusha
add
mov
inc
call
add
mov
cli
push
add
mov
push
add
inc
call
mov
loop
jb
add
int
fucomp
or
sbb
push
jge
call
repnz
sbb
push
ret
arpl
fisubrs
sbb
pop
mov
and
add
sub
add
cld
xchg
in
pushf
pop
pop
call
call
add
inc
call
add
cmc
pop
and
add
add
adc
add
cmpsb
call
lock
mov
call
add
cmpsb
call
xchg
push
add
scas
out
sub
cmp
sbb
fstl
fisttpll
jo
add
ljmp
into
cmp
call
push
pop
add
xchg
and
out
aam
push
mov
call
cmc
insb
and
jg
test
lret
stos
callw
call
inc
add
pop
stc
fstl
push
ret
push
arpl
ds
fstp
ds
call
jmp
push
sbb
aas
fstpl
lods
cmp
call
push
cs
pusha
add
out
mov
sbb
add
call
aas
lret
fadd
call
call
mov
call
call
daa
call
add
cli
ds
dec
imul
inc
call
gs
add
add
add
call
sub
add
pop
enter
mov
out
pop
call
add
dec
add
add
add
jno
add
call
aaa
int3
mov
xchg
call
fildl
lcall
mov
fistpl
mov
fstl
cmp
add
aam
add
adc
add
call
cmp
decl
mov
push
add
daa
pop
add
nop
imul
dec
sub
add
mov
jl
je
jmp
test
call
xor
jmp
pop
arpl
mov
stc
insl
xor
add
add
add
repnz
bnd
adc
add
sbb
cmc
call
ljmp
call
mov
sub
pop
xor
add
test
bound
add
jmp
jne
sub
daa
call
add
jg
scas
lock
pop
je
in
ja
sbb
in
repz
daa
call
jge
add
or
add
pop
or
add
add
test
sub
shr
add
fldenv
add
add
cld
mov
out
es
mov
test
inc
add
xlat
add
add
adc
add
call
add
pop
mov
aas
mov
nop
mov
add
add
dec
mov
call
sbb
cs
pop
sbb
aad
xor
add
imul
ljmp
arpl
add
add
ss
pop
jbe
fbstp
add
lods
add
or
aas
sub
pop
call
call
add
rcr
adc
add
add
and
add
call
mov
jmp
inc
xor
push
add
int3
xchg
jb
add
dec
ret
push
jmp
pop
dec
sbb
arpl
hlt
adc
xchg
add
add
add
call
dec
into
xchg
push
arpl
add
add
xchg
test
inc
add
stos
das
adc
add
add
mov
and
fs
push
mov
add
dec
js
loop
jecxz
movsb
call
pop
shr
cmp
in
mov
mov
add
jb
add
ss
out
adc
add
call
sub
lods
ss
sbb
call
and
add
add
add
call
icebp
pusha
add
loopne
dec
mov
push
call
adc
sbb
je
call
mul
call
repz
pop
mov
arpl
cltd
shr
call
repnz
add
call
xchg
in
arpl
add
out
loopne
sarb
xor
add
test
xchg
sub
add
sub
daa
call
add
aam
call
xor
push
add
add
add
ret
call
mov
sub
cmp
cmc
cmpsb
call
dec
stos
lret
popa
add
cmp
shl
ror
cwtl
sbb
add
add
and
add
adc
add
xor
add
add
mov
add
mov
repnz
mov
mov
and
add
cmp
call
pushf
decl
fsts
lods
arpl
cmpsl
call
jo
add
add
ret
call
push
add
sub
push
dec
and
add
call
add
add
add
pop
inc
call
inc
add
out
or
xlat
insl
xor
add
push
adc
fwait
adc
add
lods
mov
add
add
inc
call
and
add
xchg
jg
push
add
inc
call
es
in
sub
add
daa
call
mov
daa
call
call
cmp
loop
or
lret
add
sub
add
adc
add
call
add
fldt
adc
add
xchg
jo
add
fistl
call
call
rorl
cltd
jns
add
fistpl
call
ret
in
ret
call
add
and
add
call
add
add
xchg
arpl
ljmp
jmp
push
arpl
xor
push
inc
call
call
add
es
add
adc
add
call
mov
push
ret
arpl
adc
add
dec
and
add
call
add
mov
mov
jnp
je
mov
dec
out
and
cmpsb
call
sbb
jge
mov
mov
pushf
or
sub
add
jp
call
push
sbb
je
sub
and
incl
into
dec
dec
jmp
sbb
stc
cli
popa
add
int
scas
pushf
leave
xchg
clc
leave
sub
pusha
add
mov
es
add
mov
add
idivl
cltd
sub
xchg
push
add
into
sub
add
add
add
call
inc
call
sub
test
xor
add
scas
lods
xchg
negl
pusha
add
xchg
clc
inc
add
xchg
fcomps
xor
into
add
add
arpl
add
jne
shll
xlat
inc
call
add
add
inc
call
push
jne
inc
add
shrb
dec
lock
lahf
pop
call
add
call
call
mov
out
push
add
pushf
aaa
into
mov
stos
and
add
add
add
fstp
jecxz
mov
lcall
ja
decl
aaa
outsl
arpl
call
out
pop
xchg
outsb
loope
test
push
push
ret
adc
mov
add
dec
int
shlb
and
add
pop
jg
lcall
stos
mov
in
ljmp
popf
ds
aas
fisubl
add
loopne
adc
lods
jge
add
sub
add
shr
push
add
shr
sbb
aam
call
add
or
jecxz
jmp
arpl
add
inc
add
pop
shr
push
xor
jmp
jp
fs
arpl
add
cmpsl
call
leave
clc
add
add
add
and
add
add
scas
mov
call
in
inc
add
dec
push
add
in
push
sub
mov
loopne
xor
jo
add
call
in
out
cmpsl
call
xchg
inc
call
jmp
arpl
add
jg
call
add
call
mov
adc
dec
movsl
lcall
add
mov
add
mov
cltd
push
jmp
in
arpl
shr
flds
pop
inc
add
stos
es
dec
mov
sbb
sbb
imul
push
test
push
dec
wrmsr
add
incl
adc
ljmp
out
pop
dec
mov
xor
std
sub
call
inc
call
add
sub
shr
call
int3
in
and
bound
add
rclb
add
xchg
dec
push
xchg
adc
mov
js
fisttpl
call
dec
and
jmp
sub
add
add
or
xchg
pop
mov
push
push
xor
add
cwtl
hlt
xchg
int3
mov
cmp
add
add
add
arpl
add
jg
out
fcomi
popa
add
scas
js
sub
inc
add
popa
add
cmp
addr16
cmp
daa
call
call
add
stos
jb
add
fstpl
inc
call
add
fstps
fwait
rorl
test
adc
add
add
and
add
lahf
push
push
xchg
aam
cmc
pop
call
ret
sub
add
jbe
mov
call
inc
call
loopne
push
rorb
mov
fstpl
and
adc
jo
add
mov
arpl
add
inc
call
insl
sub
mov
in
ret
jo
add
push
inc
call
call
callw
fsub
call
ds
fs
inc
call
inc
call
addr16
add
lret
xor
add
add
mov
xchg
loope
cmpsb
call
pop
mov
gs
out
pop
jg
call
add
xor
add
dec
das
outsl
int
int
insl
xchg
out
cli
aas
xchg
cmp
call
inc
add
out
call
shr
or
add
dec
mov
int3
call
call
stos
mov
call
sub
call
call
add
pop
in
add
scas
inc
call
fmull
add
add
rolb
inc
sub
add
xchg
ljmp
call
call
stos
sub
call
add
push
jno
add
xchg
and
xchg
into
xchg
fs
xchg
mov
mov
add
pop
call
add
push
add
rcrl
stos
test
add
xor
add
add
add
leave
push
cmp
call
call
cmovne
xor
add
cmpsl
call
mov
add
sbb
std
enter
xor
add
sahf
idivb
inc
call
jmp
arpl
fdivs
xchg
jno
add
push
inc
add
es
jno
add
notb
imul
shlb
int
add
add
fs
adc
add
loopne
add
add
call
mov
sbb
push
cmc
jmp
sbb
pushf
dec
add
add
call
call
push
adc
fwait
negl
arpl
add
stos
xor
add
xor
add
add
call
insl
cmpsl
call
lret
into
in
movsb
call
mov
mov
add
cmpsl
call
xor
call
jbe
aas
mov
add
fs
xchg
enter
add
jg
inc
call
jb
add
pop
call
call
insb
fmull
call
add
add
add
jns
das
dec
mov
add
cmp
xor
add
add
pop
call
cmp
inc
call
out
sub
add
fisubl
inc
add
add
add
add
sbb
call
call
pop
push
ret
jp
enter
imul
lahf
lock
sub
add
inc
add
fiadds
and
add
call
outsl
call
insl
in
mov
adc
add
add
add
rclb
jns
inc
call
pop
popa
add
xchg
jbe
cld
call
jne
mov
mov
mov
push
incb
in
jbe
call
and
add
push
in
sahf
test
arpl
add
call
jle
push
add
testb
jmp
fstps
pop
pusha
add
sub
call
call
jns
mov
out
call
xlat
jmp
call
add
jmp
gs
cltd
mov
call
add
arpl
add
add
nop
and
add
call
fldt
jmp
shr
call
test
mov
add
cwtl
sub
outsb
lods
cltd
shr
mov
call
jne
push
ret
aam
push
sub
call
mov
mov
add
add
call
add
mov
add
add
call
imul
xchg
sub
push
mov
jmp
mov
call
icebp
push
and
add
call
and
add
call
mov
inc
add
sbb
arpl
pop
sub
jg
mov
out
std
into
callw
xor
lcall
call
add
movsb
call
xchg
insl
mov
cli
xor
add
call
inc
call
call
mov
call
cmpsb
call
sbb
call
sbb
call
add
add
push
push
jmp
daa
addb
jnp
call
call
add
xchg
pop
addr16
out
shr
out
adc
add
sbb
call
cs
js
sub
jmp
test
xor
dec
xchg
jl
push
call
out
lods
sbb
jmp
jne
dec
into
or
call
sbb
mov
add
jl
add
cld
xchg
ret
call
out
xchg
in
arpl
add
icebp
cmc
aam
iret
add
push
sub
decb
pop
in
fbstp
inc
add
outsl
add
mov
lret
shl
ljmp
add
or
jp
shr
scas
fsubrs
xchg
cmp
mov
cmp
add
std
pop
lret
pop
xor
call
add
call
add
lods
mov
add
arpl
into
xchg
shl
call
or
mov
or
push
decl
push
ret
daa
arpl
ret
call
add
mov
xor
lods
pop
mov
add
pop
daa
call
add
call
mov
push
cmp
addb
cmp
imul
xor
add
add
add
mov
adc
add
add
inc
call
mov
lock
call
pop
xor
add
sbb
call
xor
add
popa
add
out
in
dec
push
mov
add
sub
push
pop
in
gs
fs
jbe
add
stos
cmc
je
or
call
add
push
mov
pop
nop
pop
cmp
ja
call
ljmp
mov
js
pop
fdivl
jge
push
mov
jmp
aam
push
jne
mov
inc
call
call
stos
jg
add
sub
sbb
add
push
add
lcall
outsl
or
fwait
lret
add
add
sub
pushf
ret
call
pop
sahf
call
call
push
mov
shl
call
notl
lcall
call
mov
call
add
xor
add
enter
negb
xchg
repnz
xor
add
aad
mov
add
pusha
add
xchg
jmp
add
add
dec
jbe
xor
hlt
in
aam
dec
fistpl
add
xchg
stc
push
add
paddw
cmp
push
jmp
pop
fbld
call
call
test
add
call
push
jmp
dec
arpl
add
sti
sub
call
pop
jbe
inc
add
add
add
add
inc
add
dec
cmc
xchg
sti
or
movsb
call
call
aam
add
jle
ficoms
call
xchg
aaa
notl
fadds
add
sbb
inc
add
mov
sti
cli
jge
out
fcoms
mov
mov
sahf
call
cmpsl
call
add
mov
xchg
adc
jp
sbb
jns
inc
add
mov
sub
lods
adc
add
call
add
cmp
add
push
mov
stc
shr
call
push
scas
jno
add
xor
add
pop
pop
jne
cld
mov
testl
inc
add
jmp
call
mov
jmp
dec
imul
addr16
adc
call
call
call
clc
jmp
push
in
mov
rcrb
adc
sub
jle
add
callw
call
imulb
mov
mov
push
into
ds
dec
jno
add
callw
call
call
add
mov
fidivl
addr16
add
call
fldcw
lret
sub
call
pop
push
add
adc
and
mov
add
addr16
fnstsw
call
in
ret
or
call
call
call
add
xor
inc
add
inc
add
jecxz
enter
call
add
add
inc
add
add
add
and
add
repz
lea
call
test
aaa
lea
call
add
jns
clc
icebp
add
add
add
sti
cli
cwtl
es
inc
call
call
dec
mov
jno
jmp
xor
adc
rep
mov
mov
add
add
add
mov
push
inc
add
mov
fsubrl
and
add
cmpsb
call
arpl
add
add
outsl
test
xchg
ficoms
dec
xchg
dec
adc
jb
add
insb
xchg
aaa
or
pop
mov
call
xor
jle
call
pop
je
jo
add
cmpsb
call
stos
fs
addr16
call
add
add
add
jle
scas
jo
add
call
add
mov
pop
adc
mov
sbb
sub
add
or
inc
call
mov
push
add
pop
fildll
jo
add
sbb
dec
sub
call
dec
call
call
in
jmp
das
sub
add
mov
cmc
fs
mov
ja
pop
ja
mov
add
call
jmp
ret
xor
fnstcw
inc
call
arpl
add
call
call
call
add
push
ja
mov
mov
call
xchg
mov
shr
or
call
ds
call
jmp
call
into
aaa
outsl
pop
mov
add
enter
add
xchg
mov
dec
in
cli
fldcw
sub
add
mov
daa
call
dec
imul
add
sub
mov
add
lahf
and
add
sub
add
mov
pop
xchg
sbb
ljmp
xor
add
call
test
push
callw
add
call
mov
div
jmp
cmpsl
arpl
test
call
pop
and
sti
insb
xchg
insl
push
jge
add
cmc
mov
ljmp
cmp
add
sub
popf
callw
sub
call
add
clc
repnz
shr
loop
movsl
call
test
sti
mov
frstor
xlat
mov
call
lods
push
add
shr
mov
lea
call
bound
add
scas
std
out
lods
callw
cmp
call
je
inc
add
call
int3
ljmp
jmp
jne
daa
arpl
call
call
inc
add
inc
call
call
xchg
divb
add
adc
call
push
mov
add
sbb
out
add
and
daa
mov
jae
add
mov
add
call
add
sahf
mov
mov
out
cmp
add
xchg
or
call
add
hlt
adc
add
call
bound
add
add
sub
sub
test
jmp
mov
leave
cmp
and
add
push
jmp
adc
arpl
jne
shlb
call
push
mov
inc
add
arpl
xor
lods
es
add
je
add
and
add
add
adc
add
cmp
adc
call
call
sbb
call
add
aaa
daa
call
imull
rcrb
jmp
arpl
call
xchg
cmp
je
call
inc
call
mov
cmc
xchg
aaa
gs
add
push
call
add
and
add
call
add
push
call
call
ret
call
in
in
call
fdivrl
call
add
test
sub
call
stc
inc
call
jnp
inc
add
jmp
and
add
inc
add
mov
call
sub
push
sub
ja
add
fbstp
push
add
sti
adc
sahf
dec
cltd
ja
ret
and
add
push
repz
xchg
out
mov
mov
jnp
jbe
inc
add
pop
scas
mov
lret
xchg
repz
fs
movsl
jmp
dec
mov
jp
sub
sub
add
xor
add
call
sbb
bound
add
dec
idivl
insl
xchg
inc
call
call
dec
mov
add
iret
stos
push
call
add
push
enter
pop
or
aam
stos
sub
add
sub
call
add
bound
add
add
push
call
dec
insb
repnz
mov
call
es
dec
pusha
add
cli
scas
jae
add
fidivs
add
test
jno
add
jns
inc
call
mov
lock
insl
jp
call
add
add
shr
add
scas
and
add
fs
fbstp
into
in
shlb
add
sub
xchg
cmp
push
pushl
push
ret
pushf
out
aam
pop
push
add
clc
xchg
rcrb
clc
mov
sub
or
shr
sub
add
push
imul
not
ja
and
push
mov
xchg
lret
repnz
add
add
cmpsl
call
push
add
sti
cmp
shr
clc
test
add
fdivr
sub
dec
lods
add
sbb
add
and
in
jge
xor
add
mov
call
call
sub
lods
movsb
call
add
cmp
pop
sub
cli
or
ret
call
pop
push
call
popa
add
nop
and
add
add
out
push
addr16
adc
add
push
call
outsb
scas
lock
add
dec
and
sub
add
push
add
inc
add
call
scas
sbb
add
jp
dec
dec
lret
push
call
add
jae
add
sub
cmp
sbb
pop
pop
inc
add
arpl
sbb
mov
cmp
mov
int
mov
add
scas
push
or
add
sbb
arpl
add
dec
int
call
mov
dec
mov
push
mov
add
jo
decl
ja
push
add
dec
xor
add
scas
add
rcll
call
mov
dec
dec
xchg
cld
movsl
call
inc
and
cmc
repz
sti
daa
inc
push
add
push
fsubrs
sbb
jg
fnstsw
add
mov
ret
call
fs
call
call
inc
call
dec
sub
call
call
flds
jge
lods
repnz
adc
add
xchg
jmp
push
add
xlat
xchg
jb
add
pop
call
add
out
xchg
stc
arpl
add
cmp
add
add
add
sbb
add
cmp
and
cmp
pop
test
xor
add
mov
mov
aad
sahf
lcall
daa
call
ret
call
or
cs
into
gs
in
sub
add
sahf
pushl
shr
int
pushl
and
pop
lods
add
add
adc
add
add
movsb
call
jae
add
shlb
cmp
call
add
xchg
adc
sub
jbe
add
add
add
cmc
lret
or
mov
call
enter
dec
mov
mov
test
pop
call
cltd
in
push
xor
add
add
call
fwait
aaa
xor
call
call
dec
sbb
je
test
sub
sub
sub
add
cmc
pop
call
mov
cmc
decl
outsl
xchg
out
fcomip
push
ret
call
negl
add
mov
mov
mov
mov
call
xor
add
out
xchg
lods
repnz
xor
add
call
fcompl
insl
xor
add
call
add
jp
add
out
push
arpl
add
cmp
sar
ds
arpl
adc
pop
jecxz
callw
pop
ret
sub
sub
xor
add
cs
sbb
call
loope
push
add
shr
std
pop
call
pop
mov
imul
pop
jmp
push
arpl
inc
arpl
cmp
add
addr16
call
mov
mov
test
jmp
aam
adc
rcl
test
inc
call
pop
call
fwait
dec
mov
pop
inc
add
jno
add
add
call
pop
xor
jnp
insb
sub
mov
mov
test
call
enter
and
add
mov
daa
jmp
ljmp
in
ror
test
or
call
notl
add
pop
sub
loop
mov
shlb
call
rolb
rclb
cmpsb
call
in
xor
add
adc
ljmp
fstpt
adc
call
shr
cmp
pop
xchg
out
inc
call
out
aad
fs
loopne
int3
ficoml
add
call
fcomi
dec
lret
aaa
cmp
jo
add
mov
push
add
fnstcw
add
test
add
add
call
xor
lahf
clc
jmp
adc
add
call
testb
xor
add
pop
jb
add
aam
call
call
add
add
add
push
fdivp
pushl
xor
into
mov
pop
mov
aad
dec
sbb
push
add
inc
add
mov
add
add
popa
add
hlt
sub
jns
push
in
fwait
push
call
lret
xor
add
push
jno
add
mov
imul
ja
stc
pushf
push
call
call
call
dec
mov
call
mov
mov
es
jp
dec
arpl
call
add
mov
clc
sahf
popf
call
add
js
shr
cmpsl
call
inc
call
call
dec
pop
call
jne
outsb
je
pop
mov
add
add
add
scas
clc
in
cli
xor
add
call
or
add
inc
add
js
add
add
push
call
push
jmp
orb
dec
push
dec
xor
add
imul
xor
add
xchg
push
push
dec
push
ret
arpl
arpl
addr16
mov
add
mov
cmp
add
jae
add
enter
push
add
or
sbb
sbb
arpl
pushf
test
sub
mov
mov
jmp
arpl
arpl
call
inc
call
add
nop
bound
add
push
ret
cmc
mov
mov
jmp
call
push
add
arpl
add
pop
adc
dec
aaa
push
add
popf
push
jbe
loopne
sbb
pop
xlat
mov
add
jp
add
cmp
push
add
pop
and
add
xchg
mov
adc
add
repnz
icebp
test
outsb
inc
add
repnz
insb
push
add
jno
add
call
shr
adc
add
pop
pop
fimuls
push
add
push
add
cld
cmovg
add
and
add
jns
jmp
arpl
push
call
adc
add
dec
push
add
pop
call
call
call
add
adc
add
call
in
push
loop
stos
push
mov
inc
call
inc
call
cs
out
lret
pop
insl
and
add
mov
fsubrp
add
pushl
jmp
outsl
jp
mov
mov
add
push
arpl
xchg
arpl
ret
shr
stc
mov
call
in
adc
add
addr16
push
jmp
arpl
inc
jne,pt
pop
ds
call
add
xchg
inc
add
adc
add
mov
add
mov
pushl
dec
add
call
add
xor
add
in
in
mov
add
in
add
add
add
test
xchg
mov
add
fs
cltd
xor
add
call
sbb
add
iret
xchg
cltd
mov
and
add
test
bnd
push
push
jmp
arpl
add
or
add
pop
pop
adc
add
cmovg
add
popf
movsb
call
xchg
adc
add
add
lahf
in
push
add
pop
cwtl
std
xor
pop
jnp
inc
add
xor
add
icebp
xor
add
call
dec
mov
or
xor
add
add
lea
sub
callw
loope
das
jge
call
xchg
push
add
add
ret
call
jmp
cmc
dec
xor
sti
daa
out
mov
add
outsb
fwait
jne
shr
pushf
xlat
cmc
sub
lret
sub
jmp
ds
or
call
call
cld
es
add
cmp
jb
add
mov
cmp
popf
xchg
sti
int3
aam
cmp
gs
movsl
call
call
das
push
call
daa
call
popf
loop
push
call
call
clc
leave
inc
call
add
aaa
adc
add
add
inc
sub
add
sub
jmp
cmp
arpl
add
add
push
add
jge
call
pop
mov
cmp
pop
dec
fldl
mov
decl
ret
cmpsl
or
call
rcr
jo
add
jle
mov
call
ret
add
mov
xor
add
call
call
gs
mov
imul
sub
push
add
jmp
push
outsl
arpl
add
add
fnsetpm(287
call
sub
call
cmp
jbe
xchg
jnp
call
add
and
add
xor
aas
mov
call
jmp
and
jo
add
and
add
aaa
insb
jmp
in
mov
mov
add
push
call
add
shr
iret
pop
out
sub
jae
add
lret
cs
adc
add
adc
add
push
add
ret
add
fcomps
mov
add
xchg
enter
add
add
clc
gs
imul
jle
add
add
sub
call
call
add
mov
sti
inc
call
sahf
into
mov
add
lea
in
in
pop
xchg
xchg
mov
add
out
xchg
scas
ror
shrl
cmp
add
cmc
dec
loopne
mov
call
inc
call
inc
add
aas
inc
call
icebp
test
pop
mov
add
add
hlt
repnz
inc
call
cli
out
cltd
dec
push
call
push
xor
add
cmp
push
cmp
add
add
call
jne
scas
lock
out
mov
call
and
lret
hlt
imul
call
call
xchg
clc
fwait
ss
call
bound
add
ficompl
pop
sbb
call
call
add
push
mov
and
xchg
ret
push
jae
xchg
inc
add
push
iret
imul
jo
add
sbb
fildl
add
std
inc
call
add
in
jb
add
je
or
add
icebp
mov
call
add
cs
jg
nop
sbb
cltd
lret
dec
mov
add
sub
mov
call
pop
test
mov
int3
ja
repnz
lret
dec
fwait
xchg
push
add
mov
ret
push
outsl
sub
call
std
push
push
mov
jne
in
stc
int
call
sbb
test
push
clc
scas
sbb
mov
inc
add
pop
dec
mov
add
adc
add
adc
call
add
callw
inc
call
adc
add
add
add
aaa
daa
call
add
clc
push
es
ja
xor
add
jmp
arpl
arpl
fs
mov
call
cmpsl
call
call
inc
add
jbe
add
pop
cmp
add
movsb
call
test
sbb
call
icebp
mov
add
cltd
jbe
lea
and
add
cmp
push
push
jmp
add
arpl
mov
imul
sub
xor
add
adc
jp
add
and
add
jg
int
adc
add
call
call
xor
add
xor
add
sbb
call
inc
call
mov
add
fstps
mov
ret
into
add
arpl
jmp
push
cmp
xchg
dec
mov
pushf
push
add
lea
lods
arpl
add
call
loopne
int3
repz
add
jmp
inc
dec
lods
pop
lods
xchg
stos
fs
xchg
sahf
ss
add
nop
jo
add
call
add
sbb
fiaddl
add
insl
ljmp
inc
add
push
add
or
loopne
fstl
out
cmp
stos
js
movsl
call
mov
push
fs
jnp
clc
rcrl
push
push
mov
add
lods
mov
add
xor
add
gs
call
pop
loope
sbb
jae
add
fmull
fneni(8087
call
call
and
das
call
adc
add
inc
add
cmp
push
mov
add
dec
es
mov
call
add
and
add
add
add
add
dec
fabs
call
inc
add
mov
or
call
jg
call
pusha
add
mov
add
add
repz
sbb
add
lahf
dec
xor
add
call
add
add
fnsave
add
outsl
and
mov
pop
adc
call
xchg
popa
add
ja
add
cmovno
add
push
jmp
aaa
sti
arpl
outsl
mov
add
add
loopne
outsb
std
xchg
and
add
mov
add
or
icebp
ljmp
mov
test
add
pop
and
sti
loopne
inc
call
aad
add
add
sub
cmpsl
call
and
sub
add
sbb
js
cmp
ds
pop
call
add
jmp
or
and
add
add
adc
add
mov
add
and
add
sbb
daa
call
add
xor
call
cmc
cltd
imulb
xchg
jno
add
call
test
call
call
add
call
bound
add
mov
jae
add
pop
push
add
in
cmpsb
call
and
int3
xor
add
rcr
inc
call
sub
jmp
aam
mov
int
dec
mov
mov
push
mov
add
add
jle
iret
rorb
xchg
pop
rcrb
jl
call
sub
add
int3
stos
mov
add
dec
cli
pop
push
stos
cmp
imul
mov
cmpl
jmp
or
xlat
callw
sbb
sbb
dec
in
int3
mov
outsb
sub
mov
dec
leave
cwtl
notb
jmp
cmp
adc
add
sub
call
cmpsl
call
movsl
call
or
call
repz
fiaddl
ret
push
push
fs
ficomps
jl
xchg
iret
aam
pop
call
add
scas
outsl
test
cltd
xor
sub
call
jl
call
xchg
dec
mov
push
ret
into
cmpsl
pop
sbb
cmp
add
sub
add
pop
cmp
pushf
faddp
call
sub
ret
ja
add
cmp
add
outsl
lcall
or
mov
mov
inc
call
call
jno
add
add
jle
push
mov
jg
mov
add
call
fwait
ljmp
add
es
call
imul
call
add
xchg
sbb
add
jne
sub
add
jle
mov
xor
add
addr16
call
mov
inc
add
shr
cmp
add
push
call
call
add
adc
add
sbb
sub
pop
sbb
push
rcrl
decl
jecxz
jmp
push
icebp
xchg
add
add
cli
jg
or
call
lock
add
add
add
jo
add
add
imul
xor
in
std
xor
add
scas
mov
call
sub
loope
pop
lea
movsb
call
cmpsb
call
pop
sbb
sbb
insl
lret
push
mov
test
testb
xor
call
add
push
cltd
push
jbe
add
jmp
or
aaa
arpl
in
adc
add
pushf
in
pop
xor
add
mov
add
inc
call
add
or
loopne
jne
call
mov
call
call
dec
xchg
jns
mov
out
pcmpeqd
call
sub
pop
xchg
rcr
mov
pop
lods
call
into
arpl
add
push
push
mov
int3
mov
call
mov
jmp
test
push
add
dec
and
add
add
jg
decl
arpl
push
add
call
add
call
jae
add
call
xor
add
call
add
cmp
test
lcall
mov
call
aad
add
add
xchg
push
call
inc
call
push
add
ret
call
add
and
add
jo
add
cwtl
push
popa
jmp
cmpsl
arpl
or
pop
fstpl
push
add
jmp
mov
ja
inc
add
mov
loope
push
add
jo
add
add
outsl
lea
add
fisubl
add
call
pusha
add
mov
add
pop
pop
arpl
add
sbb
mov
jge
call
int3
lock
add
mov
xchg
xchg
lcall
insb
xor
call
filds
inc
add
loop
dec
mov
add
call
jns
cmc
cmp
jl
call
sahf
shr
add
js
pop
mov
jmp
call
popf
sub
add
add
add
dec
cmpsl
call
jnp
fsubs
add
cmp
mov
add
imul
lock
add
add
callw
push
add
dec
dec
mov
add
call
test
add
push
ret
mov
add
call
push
insl
mov
test
in
pop
mov
int3
push
mov
add
add
add
test
icebp
pusha
add
adc
add
jle
out
jne
push
call
negl
call
call
push
call
pop
jmp
call
add
call
lea
mov
push
ret
ds
and
and
mov
call
popa
add
push
inc
call
outsb
nop
fcomi
sbb
and
lods
mov
flds
call
call
sti
cmp
add
mov
daa
call
adc
sti
inc
call
push
call
add
imull
fwait
shll
add
fs
call
icebp
sub
call
call
stc
sarl
mov
push
sbb
je
enter
mov
inc
call
push
add
and
add
sahf
ret
call
add
jmp
push
fwait
iret
popf
xlat
in
mov
add
lret
xor
sbb
add
mov
call
outsb
sahf
lret
idivl
pop
jns
jle
pushf
add
jmp
and
add
rol
call
add
add
insl
fisubs
call
inc
add
sub
add
pop
outsl
mov
add
out
pop
sahf
adc
xchg
scas
cmp
jmp
cmc
enter
mov
addr16
sti
sub
fwait
inc
add
stos
dec
std
repz
add
call
fdivs
cwtl
pop
es
mov
xchg
cmp
shr
pop
cs
lcall
adc
xor
add
addr16
call
push
add
jmp
daa
arpl
jno
add
dec
cmp
mov
mov
bound
add
ja
xlat
mov
or
mov
in
sbb
sbb
popa
add
fs
add
mov
pushf
addr16
mov
call
jb
add
call
out
lahf
sbb
add
fisttpl
mov
test
ljmp
cmpsb
inc
add
add
add
adc
add
sub
lret
cmp
fisubs
add
mov
and
add
call
cmp
and
lcall
or
call
cmpsl
call
mov
add
lods
mov
call
call
test
call
mov
push
pop
sbb
inc
call
add
call
add
callw
mov
aaa
leave
push
daa
call
inc
call
add
enter
loopne
arpl
add
xor
add
mov
jne
add
insb
mov
or
inc
call
add
dec
push
add
add
aas
sub
call
add
int
pop
adc
add
push
push
add
icebp
and
icebp
sbb
add
out
adc
add
inc
call
in
cmc
fmull
lods
cmp
push
add
fs
pop
xchg
call
fcoms
cmp
pop
out
incl
xlat
popa
add
push
enter
mov
jmp
fsts
pop
mov
call
call
call
call
call
je
add
mov
jno
add
call
adc
mov
jo
add
int3
sbb
add
jecxz
inc
add
fcomp
sub
jge
add
mov
call
add
fucomip
push
test
push
mov
loop
sub
call
inc
call
aaa
loop
xor
xchg
aam
call
add
add
cltd
pop
call
iret
or
add
lock
mov
add
push
push
stos
rcl
pop
test
fimuls
dec
jp
call
and
add
pop
jecxz
xchg
pop
pushf
test
sbb
jmp
test
and
bound
add
stos
push
mov
mov
add
xor
add
sub
in
dec
pop
cmp
dec
inc
add
out
xor
push
cmpsl
call
mov
jmp
xor
jne
pushf
pop
xchg
xchg
push
mov
lea
adc
aad
add
mov
xchg
pop
insl
and
cltd
xchg
cmpsl
call
add
and
inc
add
xsave
fdivrs
or
call
add
add
lcall
ret
lods
push
pusha
add
aad
daa
call
in
cmp
mov
call
and
add
and
jl
sub
in
out
mov
cmovp
add
call
xchg
xchg
jb
add
sbb
loop
jne
or
add
add
cmp
es
add
xchg
mov
adc
adc
jne
add
mov
insb
mov
sar
nop
je
stos
dec
push
dec
mov
add
dec
xchg
jmp
arpl
xor
call
pop
call
add
cmpsl
call
call
jp
dec
popa
add
sub
xchg
lods
outsb
stos
sti
fimuls
ret
add
loopne
pop
cmp
add
add
inc
call
add
push
ss
add
add
add
sbb
or
ret
add
sub
lcall
lods
cmp
je
call
add
xor
add
mov
push
ret
adc
add
add
rclb
movsl
mov
add
ds
loopne
add
jns
loopne
mov
mov
call
dec
add
add
fs
lret
out
sub
call
call
dec
nop
push
call
gs
mov
lret
out
cmp
mov
call
ret
call
call
push
jb
add
call
ljmp
pop
pop
sbb
call
xchg
mov
add
insl
add
add
call
das
sub
mov
cwtl
cmp
add
arpl
add
add
leave
rep
pop
cli
dec
sub
call
mov
push
jle
xor
add
adc
add
in
callw
add
lock
xchg
lock
sarb
and
add
adc
xchg
stos
jge
mov
mov
fisttpl
popf
or
mov
jle
call
call
xchg
fcoml
dec
gs
add
or
idivb
int3
dec
xor
add
iret
inc
add
pusha
add
clc
dec
fsubrs
call
push
adc
adc
pop
push
push
add
cmp
add
cltd
cmp
call
es
jp
call
jmp
push
inc
arpl
sub
outsb
pusha
add
gs
pop
dec
out
mov
jmp
arpl
add
xlat
pushf
lods
mov
jne
call
jmp
mov
push
jmp
sub
mov
ljmp
aam
bound
add
je
call
add
xchg
callw
add
jbe
dec
lahf
inc
add
mov
inc
add
es
lcall
dec
mov
mov
cmpsb
call
add
or
push
add
gs
arpl
dec
lock
jmp
hlt
int
fnstsw
or
pop
sub
add
fstpt
call
sub
xchg
adc
bound
add
sub
add
sub
adc
mov
add
int3
mov
call
pop
call
popa
add
in
mov
sbb
mov
flds
test
fnstcw
aad
call
arpl
arpl
pop
es
fadd
call
add
and
add
pop
pop
cli
out
in
cs
call
pop
rcl
call
movsb
call
add
sub
ds
mov
insb
dec
enter
call
std
test
sbb
xor
add
add
jle
std
outsl
sbb
call
das
out
decl
jmp
mov
fs
jns
add
jmp
dec
inc
add
stc
repz
lret
call
mov
pop
int3
in
cmp
add
mov
fwait
cmpsb
call
call
jmp
outsl
pop
add
xchg
in
sub
mov
fistl
add
dec
sub
jbe
sub
movsl
call
add
call
mov
test
call
mov
pop
flds
mov
out
add
add
add
and
mov
add
add
mov
xchg
jl
aad
push
add
outsl
pop
pop
insb
test
arpl
add
insb
pop
and
add
mov
inc
add
adc
add
push
cmpsl
call
call
call
jne
xor
call
aaa
rol
call
and
add
add
lods
pop
mov
cli
push
add
mov
add
flds
add
jl
fidivs
or
push
aam
sub
sbb
push
add
shr
cld
jle
fstpl
icebp
mov
mov
jb
add
add
in
add
pop
std
add
jmp
add
push
add
ja
add
xlat
in
in
adc
lods
adc
add
add
mov
incl
pop
std
add
add
add
adc
add
call
jecxz
and
add
push
fsts
inc
cmp
pop
pop
call
push
mov
jmp
fnstenv
cmpsl
push
mov
call
add
sarl
xchg
loope,pt
daa
call
sub
mov
add
add
dec
mov
call
add
cltd
push
nop
xchg
inc
add
and
add
mov
test
call
rolb
cmpsl
call
and
add
add
lods
fstpt
call
sbb
lret
and
add
dec
jae
add
add
add
add
gs
out
sahf
jb
add
add
imul
test
pop
sbb
call
call
in
jl
call
ljmp
add
dec
flds
imul
push
push
and
add
push
inc
call
shr
dec
add
add
je
call
call
in
in
adc
add
xor
fdivs
add
fdivrs
push
out
ret
cmp
pop
je
fwait
loop
fwait
xchg
dec
in
in
sub
add
clc
jnp
call
add
cmp
pusha
add
cli
jns
call
call
call
jae
add
jecxz
cwtl
add
arpl
add
call
jecxz
inc
add
add
add
xchg
mov
ljmp
jb
add
popa
inc
add
ret
adc
adc
jmp
add
iret
cs
add
pop
clc
aam
iret
xchg
pop
fildll
call
lea
add
mov
xor
add
pop
call
dec
add
add
leave
pop
pop
insb
loop
jnp
fstpt
call
outsl
aas
jg
add
ret
call
add
add
js
outsl
test
fdivrl
mov
call
mov
fs
call
call
jmp
aaa
mov
divl
add
add
xor
add
int
mov
mov
dec
add
inc
sbbb
sbb
out
or
test
add
mov
call
cmp
call
pop
int3
pusha
add
icebp
mov
call
add
mov
int3
or
outsb
jb
add
add
or
call
call
pop
call
call
call
or
mov
add
pop
int
call
xchg
lods
push
call
std
push
call
call
mov
mov
and
add
add
mov
in
mov
arpl
add
das
mov
call
mov
add
scas
imul
dec
or
add
add
mov
push
add
pop
loop
jo
add
call
inc
add
aam
add
mov
call
and
add
add
mov
popf
int3
lret
lret
call
add
add
push
arpl
int3
cmp
mov
add
xchg
ljmp
push
add
jmp
or
xor
inc
cmpsb
call
add
add
add
fcomps
xchg
loope
or
xlat
aam
and
add
add
lcall
inc
call
jg
call
cmp
cmp
add
push
push
jmp
sbb
inc
call
add
loope
fiaddl
call
call
lret
pop
xor
add
add
cmp
out
cmp
add
mov
shr
add
call
adc
add
call
stos
or
add
add
mov
add
xchg
xor
add
fwait
lcall
fs
xchg
mov
call
lcall
or
callw
clc
aad
inc
call
daa
call
add
xor
sub
xchg
xchg
sub
es
fwait
call
pop
push
push
call
pop
sbb
add
jno
add
call
add
jns
pop
cmc
push
add
in
call
mov
inc
call
push
adc
call
add
add
pop
pop
mov
icebp
jle
cmp
shlb
xchg
cmpsb
call
cwtl
mov
or
add
xchg
int3
push
pop
add
add
call
mov
jmp
cmc
test
add
call
call
pop
movsb
call
mov
call
popa
add
fldl
jge
cld
jg
iret
jnp
add
cwtl
inc
call
call
mov
je
add
sbb
add
push
das
push
lcall
adc
call
call
shl
fstpl
add
cmp
repnz
iret
push
add
loop
mov
mov
inc
add
inc
add
dec
call
test
jle
dec
in
sbb
icebp
mov
jmp
sahf
int3
sbb
xor
add
add
movsb
call
jnp
call
callw
cmp
call
call
mov
call
enter
test
call
add
insb
cmp
call
xor
add
add
sub
push
pusha
jmp
cmc
pop
and
add
push
adc
add
mov
call
push
jmp
or
mov
ret
call
pop
xchg
movsl
call
call
pop
addr16
lcall
xchg
rorl
sub
call
adc
add
call
movsl
call
add
sub
lods
cmpsl
call
or
mov
add
add
pop
xor
add
sub
in
shrl
hlt
ja
add
jnp
call
and
pusha
add
jecxz
cli
push
rep
jmp
xor
mov
pop
mov
adc
add
call
mov
push
mov
shr
jecxz
and
add
pop
push
loopne
divl
icebp
push
mov
jmp
aaa
daa
mov
cmp
jmp
arpl
es
call
mov
loop
fistpll
sbb
add
call
sbb
dec
cmp
xchg
mov
jmp
jp
jne
int3
xchg
call
add
push
add
push
insb
dec
shr
shr
and
add
add
pop
xor
add
call
jns
cmp
adc
mov
add
cmpsl
call
xchg
into
out
sbb
icebp
pop
call
add
add
cmp
call
les
test
test
cmp
add
inc
add
jp
call
call
call
pop
out
mov
jmp
push
add
in
xchg
loope
addr16
insb
pop
mov
shr
add
pop
call
call
or
push
imul
loopne
mov
call
int3
movsl
call
mov
add
mov
test
pop
sub
call
or
call
mov
call
mov
push
ret
call
in
xchg
lret
arpl
add
call
sbb
call
call
call
lock
fisttpl
jb
add
add
pop
aaa
rorb
in
stos
xchg
jecxz
fisubrl
movsb
call
test
int3
inc
call
cmp
call
add
push
add
jle
call
cmp
add
int3
popf
pop
add
add
dec
popl
add
arpl
add
add
frstor
sbb
call
push
dec
sbb
add
mov
call
add
push
add
adc
add
xchg
sbb
dec
in
decb
es
add
test
inc
add
inc
add
pop
sub
test
je
call
adc
add
repnz
add
inc
add
sub
mov
loopne
outsb
jecxz
movsb
call
add
clc
jnp
aas
mov
das
dec
sahf
push
add
clc
sub
add
inc
add
mov
sbb
call
add
cmp
add
jecxz
shr
popa
add
testl
dec
xchg
mov
add
add
fmulp
outsl
mov
clc
push
clc
lods
push
jo
add
add
xor
add
add
inc
call
cmpsl
call
iret
sbb
pop
addr16
add
mov
call
mov
call
jmp
jl
add
or
insl
in
mov
cwtl
clc
and
add
or
add
insl
lret
add
jmp
out
fsts
call
clc
js
scas
push
es
int
leave
mov
pop
out
stc
je
jle
cli
jns
call
dec
or
add
pop
gs
ret
call
add
pushf
mov
sub
call
shr
and
stos
outsl
cld
xor
add
add
mov
add
sbb
add
out
xchg
addr16
add
cwtl
pushf
dec
imul
add
push
dec
js
iret
sbb
addr16
hlt
sub
jbe
pop
fwait
or
fwait
sub
sahf
stos
mov
call
sub
std
scas
leave
out
add
add
push
or
shr
call
mov
add
cltd
sbb
call
or
pop
stos
shrl
mov
aaa
and
call
call
add
cltd
jnp
mov
add
inc
add
call
and
add
call
add
add
stos
cwtl
cmp
dec
sub
aam
pushf
lods
fucom
call
int
call
mov
gs
jb
add
add
add
cmc
push
cmpsb
call
insl
sub
add
xchg
outsl
mov
adc
add
movsl
call
test
call
in
jns
callw
pusha
add
jge
int3
mov
loopne
insb
pop
in
push
add
hlt
xor
add
pop
sarl
add
nop
inc
call
enter
call
je
xor
add
add
push
add
add
add
pop
cmp
call
loop
mov
dec
fiadds
mov
std
fistl
fsubl
xchg
mov
mov
call
mov
icebp
xchg
inc
call
call
imulb
sub
dec
mov
push
and
add
sub
call
add
lahf
aas
mov
call
pop
mov
aad
shr
daa
call
call
shr
loopne
mov
cwtl
fldt
pop
fs
mov
jo
add
sub
mov
add
in
mov
add
call
call
pop
sbb
sub
ja
push
add
int
call
xchg
inc
call
call
pop
pop
sbb
call
push
rdmsr
add
push
push
push
call
add
movsb
call
add
jne
lret
xor
add
call
call
add
mov
pushf
shr
call
mov
insb
cmp
mov
pop
popa
add
imul
sbb
add
sahf
mov
inc
call
add
sub
jl
call
inc
call
lods
jecxz
decl
pushf
in
xor
xor
push
add
mov
add
sbb
adc
add
add
or
in
mov
xor
add
push
scas
ds
sub
add
add
jg
sub
call
imul
shr
imul
push
mov
and
add
add
test
push
imul
call
sub
add
push
call
pop
add
add
add
callw
call
scas
fsts
shld
fldenv
arpl
add
and
add
call
add
jae
add
add
push
daa
call
fwait
sbb
add
cmp
call
add
add
in
jecxz
add
dec
pop
xchg
add
add
push
add
mov
add
bnd
pop
dec
sbb
repz
sub
ret
call
shr
or
add
ret
stos
clc
ret
call
sub
add
pop
out
call
jno
add
into
pushf
mov
call
mov
add
add
popf
push
rcll
add
mov
and
cmpsl
call
aad
push
lret
js
sarb
mov
jl
adc
add
call
dec
sub
push
call
shrl
push
in
push
or
xor
push
call
lock
add
lods
jle
call
mov
sub
add
pushf
dec
or
jae
add
fcoml
add
cltd
test
pop
hlt
cwtl
fnstenv
xchg
pop
sub
add
lcall
add
and
jmp
call
push
shll
add
add
add
mov
out
add
add
xor
push
xor
add
call
idivl
das
je
call
pusha
add
push
xor
add
add
mov
call
sbb
leave
sbb
call
popa
add
lcall
ror
inc
add
pushf
mov
mov
call
mov
add
sub
jns
add
fsubrl
xchg
add
add
cmpsb
call
call
sahf
sub
insl
outsl
jge
cld
insb
mov
mov
add
sbb
add
sub
into
fcmovnbe
add
add
call
add
loope
or
call
add
call
mov
call
adc
add
sub
call
shr
inc
add
mov
mov
fstpt
jnp
movsl
call
push
add
mov
cltd
lcall
popa
add
addr16
mov
hlt
xchg
fwait
push
mov
add
jg
repnz
dec
or
pop
pop
loope
mov
add
and
daa
call
dec
out
and
xchg
callw
add
jns
jo
add
cmp
add
push
stc
xchg
push
lahf
std
popf
mov
add
jns
mov
call
cmpsb
call
call
cmpsb
call
cmp
mov
jno
add
mov
call
faddl
push
imul
or
sub
insl
xchg
out
dec
pusha
add
imul
cmp
xlat
push
add
test
cmovg
add
xlat
lods
jle
xlat
jmp
xchg
cmp
mov
call
vsqrtps
add
or
call
xor
add
add
xor
call
lret
pop
movsb
call
ror
call
pusha
add
inc
call
add
fsubrl
scas
mov
add
fiaddl
add
push
mov
sub
outsl
sub
mov
fwait
dec
ja
add
mov
xor
add
add
pop
pop
cli
std
xchg
jb
add
add
adc
jnp
xor
add
add
std
adc
add
es
add
lret
dec
xor
sbb
dec
insl
loopne
add
fbld
xchg
sub
add
stc
mov
add
push
rcr
inc
call
add
jbe
cmpsl
call
add
enter
pop
cmp
pusha
add
push
add
int
gs
inc
call
ret
call
call
add
push
sti
sbb
call
addr16
cmpsb
call
call
mov
call
call
nop
xchg
inc
call
call
call
stos
mov
call
push
stc
or
xlat
xor
movsl
call
add
aas
hlt
mov
mov
or
adc
add
add
cmp
ret
call
add
call
xor
add
call
imull
mov
mov
sahf
mov
add
fs
add
arpl
add
rcll
fs
in
sbb
out
inc
call
sub
adc
add
add
sub
adc
test
pop
enter
add
lea
jmp
dec
es
bound
add
cltd
inc
call
mov
clc
or
inc
call
es
inc
call
call
jns
call
xchg
inc
call
rorb
call
std
inc
call
repz
rcll
add
push
call
add
sbb
enter
dec
nop
insb
div
and
cmp
cltd
fisttpl
mov
inc
call
or
add
add
add
push
call
sahf
pop
mov
bswap
aas
or
mov
xchg
into
insl
mov
shr
sub
imul
mov
imul
mov
das
cmp
sub
inc
add
out
push
add
xchg
sbb
inc
call
call
cwtl
cmp
adc
add
test
sub
ret
call
call
shrb
in
pushf
dec
fs
es
add
add
call
add
dec
rcr
leave
repnz
and
add
xor
add
sub
add
mov
call
add
mov
rcr
ret
and
add
add
add
add
cmc
inc
call
dec
add
add
cmp
add
jne
fsts
add
mov
and
add
lods
add
add
call
xlat
pop
xor
add
pop
push
push
sbb
add
inc
add
and
add
sub
call
sub
call
xchg
mov
mov
call
outsb
sub
sbb
ret
call
call
inc
add
inc
add
es
iret
xor
add
in
push
mov
pusha
add
sub
inc
call
aas
jo
add
stc
dec
inc
add
pop
pop
clc
test
dec
fcoms
mov
call
mov
mov
add
push
add
jns
ret
call
cmp
add
ret
clc
lods
nop
xlat
push
je
add
pop
push
cmp
add
dec
xchg
aaa
imul
callw
fs
add
adc
call
jle
push
adc
add
sub
testl
or
call
call
call
sub
xchg
xchg
inc
call
call
dec
ss
mov
push
fwait
jbe
cmp
out
lcall
mov
add
call
cmp
add
inc
add
test
daa
call
add
enter
inc
add
xor
add
xchg
loopne
loopne
adc
call
call
mov
add
call
call
call
cmpsb
call
add
add
push
lret
xor
fstpt
push
pop
call
hlt
fcomi
js
call
test
insb
jp
out
pop
and
add
shll
lock
add
sub
sbb
mov
sub
push
fmull
jl
call
mov
push
add
xlat
xchg
sbb
insl
fstpt
call
or
sbb
add
sub
jae
add
mov
lea
adc
or
pop
stos
loopne
add
add
aam
sbb
mov
icebp
icebp
test
jne
add
daa
call
call
push
pusha
add
fwait
sbb
call
lret
jae
add
xchg
dec
fst
push
mull
add
test
clc
mov
fs
jge
call
add
jne
mov
call
push
add
pop
fstpl
pop
dec
sub
push
add
lret
mov
call
add
and
add
and
sub
call
call
add
loop
fs
call
mov
add
movsb
call
dec
add
add
call
and
aas
inc
call
pop
cmpsb
call
jp
icebp
test
sub
add
lods
imul
xchg
in
in
mov
call
pop
call
call
xchg
jae
add
call
es
out
cmp
call
add
sbb
fwait
pop
jg
notb
add
jge
cltd
push
add
sub
add
arpl
add
add
push
and
sub
sub
mov
insl
pop
mov
cld
cmp
fdivs
jnp
in
or
inc
call
add
push
add
callw
add
add
cmp
jmp
and
dec
xchg
inc
call
jo
add
call
repz
dec
push
jle
add
sti
or
call
test
xchg
sub
sahf
and
add
adc
add
add
add
ficompl
lea
lock
cld
js
push
add
int
test
stos
loope
mov
sub
add
sub
push
add
call
dec
ret
call
call
mov
call
lret
cs
xchg
mov
call
jl
push
frstor
sub
iret
sbb
mov
call
pop
popa
add
cmp
sub
fisubrs
call
jbe
call
call
add
mov
iret
xchg
add
add
call
mov
add
aaa
ficompl
nop
jo
add
call
out
pop
ja
or
cmp
add
clc
push
divb
shlb
xor
add
repz
call
arpl
add
out
shll
add
sub
call
adc
add
add
call
pop
call
push
add
lcall
lret
add
test
cmp
je
add
inc
call
add
call
pop
iret
cmpsl
call
add
push
test
inc
add
jmp
jo
add
pop
cwtl
call
add
add
push
icebp
sub
add
sbb
cmpsb
call
add
jg
add
adc
mov
mov
add
sub
add
loop
cmp
add
mov
test
sbb
add
pushf
mov
call
add
add
lods
mov
cltd
adc
push
inc
add
cli
jns
mov
call
add
dec
jo
add
xchg
or
mov
je
je
stos
push
xor
add
call
add
sti
or
call
aaa
test
inc
call
call
cmp
call
add
lret
xor
xor
add
fidivrs
xchg
cmc
inc
call
call
pop
fsts
add
adc
add
add
loop
inc
add
cld
add
add
add
mull
inc
add
fistpll
mov
add
scas
call
call
xchg
and
add
add
xor
add
std
adc
add
jp
clc
cmp
push
add
add
cmp
cwtl
iret
xchg
decl
jo
add
add
mov
aad
cs
add
add
add
push
addr16
test
je
adc
stos
sub
add
repz
add
mov
mov
aaa
jae
add
je
add
inc
call
add
add
jecxz
movsl
call
sub
jb
add
or
pop
sub
dec
int
nop
push
add
sbb
add
mov
call
mov
push
int
mov
call
add
arpl
add
call
jmp
sbb
call
popf
insl
add
add
push
add
push
add
mov
add
lcall
popa
add
movsb
call
jg
jo
add
call
mov
call
hlt
clc
imul
xor
add
insb
mov
dec
je
pop
fidivrl
call
movsb
call
inc
add
and
add
and
add
call
push
lahf
sub
shr
jae
add
or
call
in
cmp
fsubrl
add
sti
sbb
dec
loopne
mov
add
xor
add
leave
push
mov
push
call
popa
add
ss
add
or
insl
mov
fprem
and
add
cmp
or
add
in
sbb
mov
inc
add
inc
call
stc
adc
add
movsl
call
into
inc
add
stc
scas
xor
add
mov
add
xor
scas
sub
roll
insb
loopne
adc
add
pop
pop
cmpsb
call
cmp
loopne
fucomip
enter
lea
xchg
fsts
mov
call
add
and
add
mov
call
sbb
sub
negl
and
add
add
call
test
pop
insb
sub
jmp
jge
in
mov
add
addr16
add
call
test
add
divl
add
popf
cmc
sub
add
lea
add
jb
add
fdivl
stos
pop
mov
call
add
imull
loope
int
jns
cmpsb
call
pop
call
call
lea
cmpsb
call
add
call
inc
add
push
call
add
push
call
add
adc
add
add
scas
push
add
adc
fidivrs
mov
call
in
inc
call
add
into
es
call
sbb
call
bnd
add
dec
jns
call
add
aaa
call
call
or
sub
scas
add
add
jb
add
mov
imul
call
add
call
add
call
add
fldl
add
iret
rolb
movsb
call
cltd
sahf
xchg
or
hlt
stos
mov
add
inc
add
jl
outsl
clc
fildll
mov
add
xor
jno
add
call
push
add
scas
cwtl
gs
sbb
push
dec
cmp
incl
add
cmp
inc
add
ljmp
fidivrl
add
sub
pusha
add
in
test
adc
add
and
jle
call
fmuls
call
add
pop
shll
test
jecxz
cmp
pop
arpl
add
xchg
jns
add
inc
call
add
xchg
daa
call
push
add
fldcw
add
rorb
add
add
in
or
test
ss
mov
and
inc
call
add
rcrb
cmpsb
call
in
add
add
add
js
lret
add
mov
push
add
fidivl
rcrb
push
lods
shll
jns
call
jecxz
inc
add
fs
dec
insl
push
pop
call
mov
pop
stos
jp
into
mov
arpl
add
int3
jo
add
add
pop
and
stos
inc
call
mov
call
call
call
or
in
lock
call
call
int
addr16
call
pop
sbb
ja
fidivrl
in
movsb
call
in
inc
call
add
shrb
call
add
add
call
add
push
inc
add
xchg
lods
call
add
sbb
in
push
std
sub
add
jle
dec
in
call
leave
dec
and
add
aas
lcall
test
xor
mov
lea
decl
dec
daa
call
xchg
inc
add
xor
add
cs
push
mov
sbb
add
jecxz
cltd
iret
notl
add
cmp
popa
add
xor
add
dec
cmp
cli
pop
in
or
add
add
add
add
and
call
push
call
fstpl
dec
pop
aaa
enter
add
gs
add
stc
test
es
add
add
hlt
in
mov
call
call
call
mov
add
ds
call
ja
xchg
daa
call
add
sarb
sub
add
xchg
add
add
add
outsl
mov
add
push
jns
dec
and
add
leave
pop
dec
testl
pop
test
push
add
inc
add
fsubp
call
add
or
sbb
aas
pushl
add
cmc
jae
add
add
leave
lods
mov
mov
jno
add
pop
fisubs
add
sbb
xchg
inc
call
sti
pop
jge
fldenv
call
in
sub
notl
ret
call
mov
call
pop
lret
testl
add
or
call
add
add
sub
lret
insl
fnsave
add
pusha
add
rorl
jno
add
add
jmp
sahf
add
pushf
mov
and
add
add
mov
push
out
xor
add
dec
fldl2t
mov
call
add
stos
imul
mov
out
adc
jle
add
call
add
int
push
fstp
wrmsr
add
xor
mov
jns
mov
xchg
fnstsw
add
call
adc
add
cmc
mov
pusha
add
dec
push
mov
call
call
call
out
fisttps
call
int3
adc
add
xor
add
xor
add
mov
dec
push
mov
add
out
ffree
call
jb
add
sbb
and
xor
add
pop
out
test
fsts
push
mov
call
mov
add
cmp
pop
fiadds
add
in
mov
xchg
mov
add
push
push
call
call
jmp
call
push
lret
lods
pop
mov
out
lahf
dec
js
xor
add
test
loop
lock
add
call
push
dec
and
add
sahf
add
mov
addr16
add
call
call
add
pop
shr
in
mov
mov
call
inc
call
call
stos
es
loope
mov
or
dec
rorl
addr16
cmc
mov
stc
jecxz
sti
clc
push
loopne
adc
outsl
cmc
mov
add
or
call
call
call
add
push
inc
add
sbb
adc
add
cmp
add
int
add
push
xchg
into
inc
call
push
insb
jp
push
stc
fidivl
inc
call
scas
pusha
add
test
add
call
fwait
xor
add
call
sbb
add
mov
add
pop
dec
cmp
jge
out
fistl
jle
pop
popf
callw
add
add
push
inc
call
push
add
mov
add
pop
maskmovq
mov
bound
add
add
push
lods
in
dec
bound
add
sub
push
add
dec
or
add
add
mov
call
add
adc
call
inc
add
in
or
jp
add
rcl
call
cs
pop
call
or
add
or
add
add
call
jno
add
add
add
add
mov
aas
imul
jle
pop
push
call
adc
add
call
imul
rcl
pop
inc
call
add
lahf
lods
sub
add
jmp
jle
cmp
call
xchg
mov
call
test
push
push
arpl
add
add
sahf
or
add
call
add
push
mov
call
mov
add
sub
adc
add
call
add
sti
pop
dec
imull
push
add
ljmp
mov
shr
add
push
add
popf
pop
call
jl
mov
jle
fisttpll
in
inc
call
ss
enter
push
call
inc
add
incb
pop
call
call
pop
fildl
call
call
hlt
pop
cmp
out
sub
jle
lods
cmpsb
call
add
mov
call
mov
xchg
or
adc
add
sub
mulb
add
call
mov
add
push
add
xor
add
add
dec
lahf
pop
pop
sub
sub
dec
ret
call
add
add
xchg
jp
add
add
cmp
inc
add
fdivl
add
testl
call
add
sub
or
add
xor
add
add
aam
add
popf
notl
add
call
call
loope
js
jns
ret
call
es
xchg
out
sub
call
cmp
add
inc
add
shr
push
or
call
ljmp
add
xchg
rol
call
add
arpl
add
dec
dec
mov
lret
mov
add
sub
insb
pop
dec
cltd
stos
lods
pop
xchg
sub
call
jg
aad
add
jp
stc
mov
lcall
jmp
sub
add
jmp
add
call
jp
add
popa
add
imul
mov
dec
das
icebp
test
sub
fsts
call
dec
or
loope
fisubs
xchg
icebp
add
add
testl
movsb
call
add
and
add
and
call
fdivrp
dec
cs
call
pop
adc
mov
insb
enter
pop
sbb
call
add
add
inc
call
call
fstpt
repz
call
lods
push
mov
push
out
inc
call
jmp
lret
and
mov
add
sahf
jo
add
push
insb
rclb
call
scas
mov
adc
add
call
add
add
pop
xor
add
or
pop
push
add
lret
add
fdivrp
or
call
shr
call
add
adc
add
shr
add
push
dec
fs
sahf
es
test
call
sbb
sub
sahf
adc
add
mov
inc
add
fiadds
add
mov
fnstsw
add
push
int3
enter
pushf
test
and
add
call
or
and
add
add
and
xchg
and
add
add
lock
add
stos
sbb
add
call
call
clc
sub
add
in
jns
lcall
add
out
fidivrl
call
insl
pop
mov
test
fidivs
add
push
or
lods
mov
adc
add
movsl
call
iret
ror
insb
cmp
add
fcomps
add
shr
or
stos
ret
call
pop
ja
call
add
add
clc
int3
pop
cmpsl
call
add
push
add
jg
add
sbb
call
frstor
jge
add
test
xchg
cmp
call
stc
popf
mov
add
lret
add
call
call
out
popf
sub
add
movsl
call
add
add
xlat
rcrb
iret
vmovntps
or
add
test
add
xchg
aam
pop
adc
add
call
add
jg
inc
call
call
fsubrl
ret
sub
movsl
call
fdivrs
mov
call
ja
mov
add
call
add
call
push
and
popf
adc
pop
mov
inc
add
sbb
add
sbb
call
xchg
loop
outsb
or
add
sahf
decl
cmpsb
call
push
pop
mov
mov
stos
adc
icebp
mov
pop
call
cmp
shr
call
jl
call
dec
pop
test
jle
call
dec
out
and
callw
add
sbb
imul
test
dec
sub
mov
add
call
mov
mov
add
loopne
lock
xchg
cmp
mov
daa
call
sbb
fwait
in
es
enter
sub
call
ds
sub
in
cmp
call
inc
call
add
out
out
sbb
add
push
or
inc
add
and
add
call
add
add
jb
add
loope
xchg
push
sbb
and
add
cli
push
cli
loopne,pn
cmp
inc
call
call
fwait
mov
call
in
pusha
add
add
sub
adc
add
pop
add
add
inc
call
inc
add
dec
or
stos
test
call
movsl
call
incl
jne
hlt
ljmp
iret
fsts
add
call
push
xor
add
das
lea
mov
popa
add
mov
add
mov
loop
arpl
add
jecxz
xchg
mov
add
inc
add
popa
add
nop
dec
jno
add
add
pop
lret
adc
add
call
adc
inc
add
mull
call
fidivrs
push
or
lods
and
push
add
cmpsl
call
add
mov
xor
add
sub
call
xchg
and
add
mull
call
add
sbb
std
jmp
out
shr
inc
call
pop
mov
cld
mov
call
test
pop
xor
add
add
sub
pusha
add
cmpsb
call
dec
imul
add
add
fidivl
cld
jl
sub
jge
scas
jne
in
mov
add
add
loop
pusha
add
imul
aaa
cmp
call
jno
add
add
sub
add
rcrl
in
cmp
mov
add
cmp
insl
pop
dec
cmc
mov
dec
stc
sub
cmc
call
cli
mov
add
loope
in
or
repnz
add
or
das
push
xor
js
add
cmc
jmp
add
add
call
fbld
add
add
lock
call
sbb
jae
add
arpl
add
inc
add
es
call
loope
mov
pop
call
sbb
es
mov
test
pushf
scas
cwtl
cs
movsl
call
add
cmpsl
call
call
call
pushf
es
inc
call
mov
call
add
add
sbb
fstpt
jecxz
shll
add
sbb
add
fnstcw
shr
adc
add
call
call
mov
pusha
add
ja
add
ds
push
mov
inc
add
or
call
add
cmp
call
cmp
mov
add
inc
call
add
popf
shr
mov
mov
mov
arpl
add
add
add
loope
aam
add
sub
inc
add
addr16
add
push
add
inc
call
fcoml
add
ffree
call
jg
jle
fdivl
call
mov
push
add
fdivrl
bound
add
xor
add
sub
cltd
mov
std
in
stc
adc
add
lcall
xor
add
xchg
dec
mov
fstpl
lea
sub
push
add
jno
add
sub
call
add
cld
mov
push
add
or
jnp
call
jl
push
mov
std
out
and
lock
add
bsr
call
add
dec
rcll
add
push
outsl
cltd
lods
hlt
push
push
call
and
add
call
mov
lcall
add
mull
sub
rcll
add
and
add
sbb
xchg
mov
jbe
loopne
cs
xchg
xor
add
movzbl
adc
mov
sub
xor
add
lahf
jmp
and
sub
call
pop
call
mov
add
call
call
dec
and
call
adc
add
xor
add
loop
daa
call
add
add
call
call
mov
mov
stos
std
test
add
sbb
mov
add
mov
add
sub
call
push
adc
add
mov
mov
call
and
add
shr
mov
push
push
sub
push
adc
jmp
icebp
fldt
call
xor
or
dec
shr
icebp
fwait
sub
call
jge
add
add
add
call
jno
add
jmp
cmpsl
call
call
jmp
add
xor
add
mov
sub
add
mov
call
call
xchg
adc
add
arpl
add
lea
hlt
popf
push
dec
push
add
adc
add
xor
add
inc
add
xchg
daa
call
add
mov
arpl
add
sub
add
aam
add
aad
in
sti
bound
add
stos
jmp
fwait
push
jg
call
mov
xchg
pop
call
in
push
add
sarl
add
push
mov
dec
int3
nop
adc
add
add
rcl
daa
call
call
mov
stos
insb
mov
shlb
call
call
add
call
jnp
mov
movsl
call
shrb
sub
in
in
pusha
add
cli
jns
fidivrs
fcmovnb
call
pop
cmp
add
or
call
pop
mov
lret
mov
add
mov
call
test
lret
popf
cs
call
jg
aas
jb
add
ja
add
xchg
fldl
add
bound
add
sbb
fwait
and
add
xchg
scas
leave
mov
add
and
add
add
ret
call
shrb
adc
add
add
sbb
call
sub
shr
push
enter
xchg
jne
cmp
mov
call
add
and
add
or
xor
add
jp
call
ret
in
ret
rcl
popa
add
je
xchg
fiaddl
call
add
mov
jp
inc
call
inc
add
sub
mov
call
push
add
call
fwait
lods
iret
lods
xor
add
jge
mov
or
push
adc
add
inc
add
cmpsl
call
mov
mov
mov
sub
mov
test
cld
fwait
or
push
call
nop
movsb
call
pop
and
add
insb
call
add
xchg
lahf
cmp
add
add
xchg
in
shll
add
aas
nop
gs
aaa
or
add
add
bound
add
add
sub
jns
add
add
add
jmp
bound
add
call
call
call
add
dec
and
call
fists
call
pop
in
add
call
call
pop
daa
call
add
add
not
sahf
call
add
add
in
cmp
add
testb
call
call
pop
and
call
inc
add
call
cltd
insb
loopne
mov
adc
push
add
cld
push
call
add
call
pop
cld
mov
movsb
call
xlat
sub
mov
call
jge
add
and
ss
clc
insb
loop
push
cmp
sub
sub
call
inc
call
jle
loop
xchg
xor
add
call
call
shr
cs
fimull
in
or
add
inc
call
call
fadd
call
enter
pop
pop
sahf
sub
js
lods
fwait
sbb
call
call
jge
add
shr
add
fsubl
adc
add
sar
or
pushf
or
clc
inc
add
lods
pop
out
movsl
call
lahf
ror
jl
add
sub
mov
add
int
mov
or
mov
mov
add
mov
call
dec
push
inc
add
push
cli
ds
add
cmp
clc
xchg
or
add
pop
sub
add
mov
repz
add
add
call
mov
gs
pushf
movsb
call
dec
adc
add
mov
jmp
sub
add
sbb
xor
inc
add
test
inc
call
sub
push
call
sub
call
int
call
or
jns
cmp
call
call
push
add
xchg
bound
add
add
call
cmp
add
ljmp
call
add
movsb
call
add
adc
add
cmc
call
sbb
call
jns
call
pop
movsb
call
call
call
call
xchg
jno
add
enter
inc
call
call
fucom
call
arpl
add
aad
call
call
inc
call
add
push
std
mov
pop
or
push
stc
daa
call
add
cli
xor
pop
adc
call
cmp
and
push
inc
call
gs
into
fdivs
sbb
stos
hlt
insl
jb
add
iret
clc
lahf
mov
cmc
pushf
pusha
add
xchg
mov
aaa
callw
inc
call
in
cltd
xchg
repz
add
add
call
jb
add
es
call
fimuls
jmp
jae
add
call
mov
add
mov
add
add
in
test
call
addr16
xchg
mov
test
movsl
call
aas
cmc
push
call
jecxz
stc
mov
sub
pushf
push
sbb
add
cmp
sub
or
push
call
push
test
mov
lea
fcmovne
jbe
mov
call
xor
add
repz
dec
aam
insl
loop
mov
and
add
divb
add
aaa
and
add
dec
int3
xchg
sar
test
push
add
pop
fs
pop
call
mov
call
ds
lret
add
dec
lahf
es
mov
fucom
call
pop
dec
mov
daa
call
mov
lret
daa
call
add
ret
call
mov
int
call
cmpsl
call
mov
pop
call
adc
add
mov
call
loopne
adc
add
add
leave
push
loope
sub
call
shll
add
sub
loope
xor
push
dec
nop
jne
add
push
pop
jl
mov
fdivs
cmpsb
call
ret
call
dec
daa
call
cmp
add
push
insl
mov
call
add
call
fsubrs
mov
aas
adc
insb
xchg
push
add
pop
int3
add
add
shr
and
add
mov
mov
pop
fcmovne
and
add
call
call
add
fmulp
mov
or
cmp
call
call
call
loope
mov
fs
call
cmp
shll
sub
test
in
imul
je
or
dec
scas
xor
add
pushf
lock
icebp
sbb
fidivs
mov
call
lods
jae
add
and
add
push
rorb
int3
scas
pop
fcoms
xchg
lea
call
push
add
test
cs
lock
cltd
shr
inc
call
mov
or
call
cmovl
add
add
cmp
add
into
repz
sbb
or
call
aaa
push
xlat
mov
jno
add
call
adc
add
jg
lea
add
pop
test
inc
add
mov
add
pop
lret
ret
shr
jp
call
call
adc
add
inc
add
lahf
divl
push
callw
call
ret
ljmp
and
add
pop
xchg
inc
call
pop
fs
test
out
add
add
add
sub
push
call
add
je
mov
dec
inc
call
push
call
sub
call
repnz
call
add
scas
cmp
add
jle
aas
scas
adc
add
cvtpi2ps
shrb
mov
loope
mov
add
call
add
add
adc
negb
xchg
decl
call
sub
stos
popa
add
mov
mov
xchg
inc
call
lods
mov
mov
call
jo
add
call
stc
xchg
sub
test
or
lods
aaa
mov
mov
cmp
loop
sbb
cmpsb
call
add
add
adc
add
sbb
add
fcompl
call
add
add
and
add
test
inc
call
add
cmp
insb
aam
loop
add
cwtl
xlat
pop
add
cs
call
push
and
add
add
sbb
mov
mov
insl
push
add
lahf
push
call
add
sbb
scas
in
add
add
mov
sub
aam
pop
and
add
sbb
sbb
add
mov
dec
movsb
call
call
add
cmp
add
insl
movntq
out
sub
pop
scas
icebp
push
lahf
shll
call
add
mov
pop
jb
add
fs
iret
or
and
fs
hlt
imul
and
push
cmpsb
call
aad
call
or
out
fwait
pop
fnstcw
call
add
inc
call
loope
jg
addr16
cmp
fs
call
call
pop
in
jmp
call
push
out
mov
das
xlat
into
push
and
add
add
ds
inc
call
push
filds
call
call
mov
xor
add
call
daa
call
xchg
cmp
add
gs
shr
dec
xchg
loope
mov
aas
sbb
sbb
or
call
xchg
cwtl
callw
nop
mov
call
jb
add
add
add
jae
add
add
fwait
scas
cmc
callw
call
aam
add
cmp
add
add
test
xchg
sub
cmp
aaa
call
mov
popf
pop
fs
inc
add
mov
add
imul
add
sub
mov
add
mov
add
add
test
fstps
cmp
aaa
imul
jge
add
repz
flds
push
and
jl
mov
lcall
adc
add
add
add
add
adc
add
call
add
jno
add
in
or
add
shrb
cmpsl
call
add
lods
xchg
adc
add
add
jg
call
mulb
add
and
call
xor
add
adc
add
add
sahf
imul
add
int
call
add
push
jmp
call
shr
pop
aam
repz
call
cmp
xlat
push
and
add
imul
mov
repz
rorl
or
call
aam
call
push
call
or
call
add
and
inc
call
call
pop
adc
jp
lods
shr
call
add
sbb
adc
add
inc
call
mov
jle
not
push
add
or
dec
out
jno
add
add
sub
call
add
mov
pop
mov
stos
decb
das
or
add
roll
add
add
push
dec
jle
adc
add
adc
call
cmp
mov
jnp
cwtl
push
add
aas
or
push
mov
jne
call
cwtl
testl
cmp
add
inc
call
add
xchg
xchg
jl
add
xchg
mov
add
inc
add
xor
add
xchg
cltd
lock
in
test
adc
scas
pop
call
ja
mov
or
arpl
add
add
enter
jb
add
mov
filds
add
sub
inc
add
pop
call
dec
cld
out
cmp
xor
add
dec
mov
addr16
sub
dec
jno
add
pop
loope
sahf
push
add
and
add
add
add
lahf
sub
js
call
add
sbb
call
aaa
adc
add
mov
in
popa
add
call
add
jno
add
call
or
sahf
dec
ret
call
ret
call
pop
into
callw
clc
sarb
int3
xor
add
add
stos
fdivrl
call
stos
mov
push
xor
add
xchg
inc
call
call
cli
insl
test
adc
add
call
mov
add
repz
add
lcall
adc
add
call
xchg
cli
inc
add
in
sbb
sbb
add
jmp
add
rcl
sub
add
sub
add
sub
push
add
call
and
add
add
push
call
loope
inc
add
or
adc
add
insl
hlt
xchg
negl
cmc
push
add
addr16
int3
pop
fcompl
fwait
leave
mov
fwait
lods
icebp
or
add
add
xchg
pop
testl
add
mov
call
mov
or
call
add
mov
ja
add
loopne
and
add
dec
push
push
psrlq
daa
call
call
add
cltd
jae
add
xor
add
jae
add
xchg
outsb
callw
test
add
ss
dec
int
dec
test
js
add
cwtl
iret
xchg
mov
jmp
lret
mov
add
add
adc
mov
adc
jb
add
cld
mov
and
add
lods
push
xchg
cmp
cmp
call
add
add
call
xchg
mov
sub
es
add
cmp
shrl
inc
call
sub
ja
call
lods
and
add
and
add
add
or
xor
add
and
add
add
insl
push
push
je
cli
inc
add
dec
test
cltd
call
mov
add
add
adc
push
call
cmp
xor
add
jo
add
call
shr
gs
cmp
call
mov
cmp
push
je
add
pop
and
add
add
shr
add
mov
ja
test
lret
add
xchg
in
loopne
cltd
mov
scas
or
call
add
addr16
add
dec
stos
fistpll
call
add
add
add
add
inc
add
callw
pop
sub
sub
adc
add
xchg
xchg
mov
into
sub
add
xchg
sti
add
add
call
popf
in
ss
clc
jmp
call
add
jg
jmp
call
cltd
xor
daa
call
call
fmulp
scas
stc
pop
push
mov
call
insl
in
push
cmc
outsb
test
xlat
sub
sub
jp
push
scas
repz
add
and
add
call
or
jns
add
add
call
fisttpl
cmp
fisttpll
stos
repz
jp
mov
add
incl
dec
mov
call
cld
inc
call
addr16
inc
call
add
mov
add
add
add
lods
iret
xchg
dec
and
add
add
ficoml
add
mov
add
and
adc
add
lea
mov
rorl
or
call
call
add
inc
call
adc
lret
rcl
cmp
jmp
mov
repnz
mov
add
add
add
aam
shr
outsb
dec
lea
out
mov
pop
push
movsl
call
or
add
pusha
add
sub
call
int3
bound
add
mov
in
or
jle
nop
pop
mov
lock
call
pop
iret
push
jp,pt
call
add
call
call
add
xchg
adc
add
call
loopne
dec
repnz
call
cmp
add
add
add
gs
sub
adc
add
add
pop
call
jb
add
add
pop
int3
xchg
mov
jp
pop
pop
sub
call
fisubs
add
mov
stos
fcmovnbe
or
inc
call
mov
rcrl
jl
call
insb
shr
vphaddudq
adc
add
fisttpl
cmp
xor
and
add
call
call
addr16
inc
add
pop
push
push
add
push
add
callw
outsl
popa
add
mov
call
call
loopne
shll
dec
int3
rcll
add
scas
cwtl
xor
inc
call
repnz
sub
add
cld
push
cmpsb
call
call
jb
add
add
mov
mov
add
int3
out
xor
add
mov
call
mov
lods
cwtl
push
add
jns
add
fisttpl
call
adc
add
call
call
cmpsl
call
inc
add
sub
jg
aad
add
pop
js
call
cld
and
cli
xchg
inc
call
xchg
inc
add
stos
lock
add
add
add
inc
add
pop
aas
sbb
cmc
and
add
add
out
shr
xchg
imull
aam
mov
call
hlt
popf
mov
call
outsb
push
movsl
call
and
push
pop
call
fcmovbe
cmpsb
call
sbb
sub
add
sub
and
add
es
xor
test
gs
out
cmp
add
add
add
mov
mov
faddl
enter
mov
add
nop
loopne
and
add
add
add
or
add
call
rcl
sub
and
inc
call
dec
fildll
add
add
sti
cmp
add
inc
call
or
call
and
jae
add
fwait
test
and
add
add
pop
cs
sub
mov
xor
add
ss
lcall
incl
cmp
gs
out
sbb
inc
add
mov
fidivrs
jnp
call
dec
dec
icebp
xchg
add
add
dec
in
cmpsl
call
repnz
add
sbb
add
pop
mov
dec
js
xor
nop
sbb
addr16
or
loop
call
call
add
pop
jo
add
call
add
loop
test
insl
das
mov
in
xchg
xchg
jecxz
add
add
add
call
add
cmc
addr16
call
adc
pop
and
popf
fdivl
add
jecxz
inc
add
or
add
mov
push
pop
shr
pop
xchg
shlb
shr
add
imul
insl
push
aaa
dec
or
add
jmp
add
bswap
jl
call
add
or
jge
jbe
push
call
popa
add
call
add
pop
jmp
fists
movsl
call
cmp
add
xchg
fsubrs
cltd
push
call
repz
call
push
add
test
call
add
adc
add
sub
es
clc
es
add
add
shlb
sbb
add
and
mov
pop
jno
add
sbb
add
ljmp
sub
fs
pop
insb
xor
call
add
scas
rol
call
scas
ret
fs
gs
add
mov
jns
mov
xor
add
test
scas
or
jae
add
jb
add
call
call
add
cli
xor
sub
sbb
add
push
sub
scas
sti
repnz
cs
in
insb
hlt
mov
arpl
add
and
int3
or
and
cs
call
call
call
cwtl
aad
call
call
add
xchg
jl
call
sub
add
mov
jmp
call
add
cli
kmovw
fwait
outsl
xor
scas
rcll
add
xlat
popf
in
insb
jbe
add
fldt
add
add
pop
mov
sar
pop
int
pop
fidivrl
mov
xchg
jne
xor
xchg
mov
call
mov
call
call
add
movsl
call
cli
imul
add
call
add
xchg
test
jae
add
jge
pushf
fdivl
cs
xor
add
dec
adc
add
test
and
pop
in
dec
mov
jp
push
outsl
mov
xchg
repnz
popf
sub
jae
add
call
call
inc
call
sbb
sahf
jmp
sub
call
add
call
push
add
cmp
mov
repz
add
add
popa
add
nop
call
movsl
call
add
add
sub
pop
sti
sub
push
add
sbb
call
call
test
call
stos
dec
sarl
shlb
test
outsl
lcall
call
xor
sub
sub
add
xchg
dec
stc
punpckhbw
add
add
add
add
add
adc
add
and
add
add
inc
add
mov
call
add
call
add
call
ja
iret
nop
test
xchg
clc
push
pop
jne
bound
add
xchg
ret
or
das
mov
shr
call
mov
add
call
inc
add
int3
adc
dec
pop
xchg
incl
dec
outsl
jl
cltd
xor
add
xchg
out
pop
arpl
add
add
adc
add
cmp
add
add
int
or
add
call
mov
fstpt
call
movsb
call
push
add
test
imul
repnz
push
add
jns
sbb
test
movsl
call
add
call
pop
je
call
add
jecxz
mov
mov
call
mov
pop
mov
fs
std
test
call
mov
and
add
cmp
sbb
inc
add
mov
sub
call
test
add
xchg
out
outsb
shr
lahf
or
add
or
xchg
cmp
and
outsb
pop
push
mov
push
add
sbb
add
sbb
cmp
lea
sbb
add
mov
aam
mov
add
xchg
and
add
jns
enter
call
cli
cmp
add
lcall
imul
add
cmp
add
xchg
and
add
add
pusha
add
cwtl
or
mov
call
call
loope
or
es
call
add
mov
test
std
mov
call
xlat
into
ss
inc
call
mov
add
cmpsb
call
call
mov
add
jecxz
sbb
jle
lret
call
add
mov
xchg
out
test
jecxz
repnz
add
jmp
test
bound
add
ja
jecxz
lcall
pop
cmp
icebp
and
js
cmp
call
jo
add
adc
add
call
adc
add
dec
mov
call
mov
mov
call
add
out
aaa
gs
add
add
add
mov
add
in
or
dec
jl
test
sbb
xor
stos
mov
call
sub
call
call
xor
cmpsb
call
cmpsb
call
lahf
push
add
sbb
sub
inc
add
push
add
mov
test
test
pop
inc
add
sbb
call
inc
add
mov
add
call
lret
dec
and
add
add
add
in
mov
rorb
sub
call
inc
call
call
sub
jge
call
sub
call
sub
jno
add
call
pop
mov
push
in
movsb
call
or
call
shr
pop
adc
add
dec
sub
add
je
push
add
cld
pop
pop
decb
cltd
cmp
add
call
int
call
call
hlt
in
cmpsb
call
mov
add
add
sub
stos
pop
call
inc
add
add
add
lods
mov
aad
mov
cmp
dec
sub
add
add
cmp
inc
call
movsb
call
jns
xor
mov
es
inc
add
sub
mov
call
mov
inc
add
inc
add
fwait
aam
psubusw
xor
add
call
add
inc
call
add
add
mov
adc
add
cltd
dec
pop
es
aas
shr
call
add
addr16
lahf
stos
xchg
outsl
js
add
pop
incb
in
ret
sbb
add
sub
call
mov
movsl
call
mov
push
add
add
sub
call
nop
inc
call
add
lods
pushf
test
sub
call
add
shr
call
add
push
call
shr
add
or
ret
xor
call
dec
ds
ret
call
pop
callw
add
mov
jns
hlt
dec
mov
mov
repz
mov
pop
xchg
sub
movsb
call
decl
lods
inc
add
and
add
ret
add
add
mov
xchg
out
test
push
bound
add
or
call
int3
or
add
rcrl
xor
add
dec
stos
inc
call
add
dec
inc
add
imul
bnd
call
int3
icebp
movsb
call
push
outsl
xchg
pop
xor
shr
lcall
dec
sub
add
shr
mov
daa
call
movsb
call
add
mov
jle
add
cmp
call
aad
stos
jg
call
mov
loopne
xchg
aam
outsb
cltd
push
cmp
hlt
mov
jb
add
repz
ret
mov
call
imul
insl
in
popa
add
in
jl
add
outsl
pop
cmpsb
call
movsl
call
xchg
inc
call
xor
add
or
imul
pop
mov
add
sub
call
push
inc
add
pop
ljmp
add
stos
cmpsl
call
jmp
call
add
fildll
cmpsb
call
add
aam
mov
outsl
push
call
sub
out
fimuls
repz
cmp
add
xor
add
add
xchg
stos
daa
call
outsl
cmp
push
add
add
js
ss
fimull
popa
add
jmp
add
jae
add
add
flds
cwtl
and
mov
add
movsl
call
mov
add
add
call
lcall
add
add
enter
test
aad
call
inc
call
stos
call
add
or
fisubrs
mov
pop
pusha
add
sub
call
arpl
add
aad
and
add
call
repz
push
popf
ljmp
aas
xor
add
cwtl
ljmp
jns
call
add
add
sbb
loopne
cmp
stos
mov
mov
xchg
sbb
add
add
in
imul
stc
aam
add
dec
jo
add
ss
add
push
add
pushf
lods
dec
dec
add
nop
sbb
call
shll
xor
add
lods
clc
stos
roll
sbb
lret
add
lods
call
je
cs
fstl
into
test
loopne
xchg
call
and
mov
test
call
add
imul
call
shrb
pushf
adc
add
out
or
inc
call
mov
add
repz
push
or
call
xlat
lret
sub
mov
add
cwtl
mov
add
call
out
es
call
dec
lock
cmpsl
call
dec
ja
jbe
add
cmp
movsb
call
add
call
add
clc
lods
mov
xor
add
fmull
call
stc
flds
pop
sbb
scas
mov
add
iret
add
sub
call
xchg
mov
call
add
pop
loope
jg
push
arpl
add
add
sub
dec
adc
add
iret
lahf
mov
push
es
add
sub
inc
add
xor
add
add
jne
add
ficoml
add
in
flds
add
add
movsl
call
add
add
cmp
dec
stos
add
inc
call
mov
cs
inc
add
stc
pop
push
repz
add
add
call
in
sarb
nop
fsubrl
sarl
shr
rcrb
inc
call
stos
notl
loopne
and
add
add
or
call
add
xor
add
rep
call
xchg
dec
rcr
xor
add
call
mov
cmp
call
ds
mov
call
fadds
call
dec
pop
sbb
pop
lret
call
add
push
sub
push
add
pop
outsl
loopne
dec
xlat
movsl
call
call
call
jecxz
jle
add
inc
add
mov
mov
mov
add
push
and
add
call
call
mov
lock
call
fldl
call
call
jmp
call
movsl
call
add
lods
jge
call
add
cmp
add
add
sbb
movsl
call
outsb
adc
sub
ficoms
in
daa
call
call
push
call
xor
adc
add
call
cli
test
shr
jne
aaa
xchg
push
cmp
ja
jno
add
add
add
dec
icebp
stc
out
test
xchg
and
add
in
pop
sbb
sti
adc
jmp
call
pop
enter
roll
add
scas
pop
jae
add
adc
jbe
call
and
add
add
pushf
sub
push
add
stos
xor
add
call
lock
dec
lods
xlat
lcall
add
sbb
shl
call
insl
sub
call
pop
lods
mov
jns
call
xchg
es
call
push
add
shlb
push
push
add
mov
lcall
call
xchg
iret
add
add
cmp
imul
push
add
push
aas
sub
add
ret
call
clc
std
cmp
push
add
cmp
call
add
sbb
add
pop
call
call
mov
sahf
into
pop
cmc
stos
xchg
add
mov
jl
icebp
inc
call
das
pop
stc
mov
stos
push
daa
call
add
pushf
fisubl
add
jnp
mov
inc
call
mov
and
add
or
add
add
add
adc
add
sub
push
pop
inc
add
sub
call
xlat
sub
call
sub
call
add
out
or
shr
call
mov
call
fstl
faddl
pushf
cmc
bound
add
add
test
xchg
sbb
inc
add
push
call
sbb
call
add
call
mov
call
add
mov
sub
cmpsl
call
enter
in
aaa
or
call
call
inc
call
ljmp
call
mov
add
mov
add
xor
push
sbb
jg
lock
add
ret
int
mov
dec
push
jns
call
sti
leave
jmp
dec
mov
fidivrl
add
add
call
ret
cmpsl
call
jmp
call
add
sti
jno
add
jge
xchg
fwait
nop
xor
add
das
push
call
xor
add
pop
adc
add
sahf
sahf
adc
add
aas
cmpsb
call
mov
call
aas
sub
xor
add
loopne
stos
out
push
call
pop
or
mov
add
jae
add
cmp
pop
jo
add
call
pop
aad
call
cltd
call
add
dec
dec
pop
int
inc
add
negb
scas
sbb
add
jg
callw
callw
fdivs
mov
lret
inc
add
ret
loope
out
inc
call
cmpsl
call
add
sub
call
jecxz
aaa
imul
aam
ja
push
dec
jg
call
adc
add
ret
call
jne
add
lret
xchg
nop
inc
call
call
xchg
jb
add
and
add
in
outsb
lods
xchg
pushf
loop
sub
push
add
fsts
fidivrs
push
loop
fistps
call
add
arpl
add
nop
popa
add
sub
cli
sub
cmp
js
xor
add
sbb
popf
cwtl
adc
add
sbb
adc
add
call
or
add
add
call
sub
add
shll
and
add
nop
sar
into
add
add
and
add
enter
call
bound
add
add
cli
sub
add
add
sahf
sbb
mov
add
adc
add
add
fucomi
push
pop
lret
sbb
add
out
mov
call
or
add
ss
inc
call
xor
call
xor
add
sbb
call
or
and
add
add
pop
sbb
inc
call
adc
add
add
pop
dec
test
call
jae
add
sub
xor
add
sbb
cmpsl
call
push
add
ret
call
test
mov
gs
adc
add
fisttps
incb
add
dec
and
cli
aam
lods
test
mov
sub
jmp
cwtl
xchg
pop
call
adc
ret
call
add
add
cmc
pop
mov
add
mov
call
insb
sub
xchg
sahf
stos
testb
xor
add
call
add
adc
xchg
fsubrs
add
loopne
cmp
add
sbb
leave
mov
add
sub
xlat
push
ljmp
mov
ja
adc
cmp
repz
add
or
adc
add
ret
call
iret
mov
cmp
mov
call
add
call
xor
leave
push
add
lret
mov
add
pushf
adc
add
out
fcmovb
call
lods
mov
call
inc
call
movsl
call
add
bound
add
pop
lahf
arpl
add
add
call
call
add
cs
sub
in
mov
add
call
fldpi
call
call
es
call
mov
xor
add
hlt
fwait
jg
call
mov
cli
das
sub
call
add
add
call
adc
add
repnz
add
xchg
or
insl
pusha
add
jns
insb
inc
call
call
jle
ret
call
mov
insl
clc
jg
and
add
pushf
cs
sub
call
mov
call
vmwrite
je
in
je
mov
jmp
call
add
mov
int3
stc
xor
hlt
ret
add
in
sahf
and
add
leave
sbb
call
add
or
add
mov
add
sub
add
push
sub
es
jmp
fisubl
add
outsl
mov
call
pop
inc
call
pop
mov
mov
dec
mov
hlt
lods
and
add
lcall
add
add
daa
call
sti
int3
lods
das
add
add
call
aam
sbb
mull
add
add
pop
and
add
add
mov
push
dec
call
pop
or
pusha
add
je
call
icebp
xchg
in
in
xchg
mov
xchg
out
adc
add
call
xor
add
fimuls
add
jbe
call
mov
pop
add
add
insb
adc
add
es
loop
aam
sub
jne
test
mov
add
or
add
test
rol
call
jbe
call
and
add
add
fisubs
inc
add
jp
pop
xchg
mov
shr
call
jmp
out
mov
adc
add
out
mov
jne
sub
mov
leave
loope
jge
call
add
sub
call
pop
popa
add
es
xor
add
outsb
sub
xchg
xor
add
add
and
test
sub
mov
add
call
sub
jge
shll
aas
jb
add
mov
loop
repnz
add
cwtl
adc
add
call
add
add
shrb
addr16
unpckhps
add
xchg
jno
add
dec
outsb
push
add
xchg
mov
add
cmp
jns
cwtl
js
add
call
sub
call
call
stos
lcall
call
add
add
call
mov
dec
inc
call
add
pop
call
in
fs
std
add
add
ss
arpl
add
dec
fadd
call
cmp
call
call
and
add
call
inc
call
add
sub
sub
movsl
call
mov
sub
inc
add
inc
add
fistpll
add
xor
dec
pushf
sub
add
call
call
or
add
jb
add
hlt
xor
add
add
ljmp
call
call
hlt
add
add
scas
push
pushf
rorl
add
nop
or
out
stos
in
mul
call
push
and
mov
call
into
jns
call
and
add
add
decl
sub
xchg
push
hlt
add
add
add
loopne
xchg
adc
add
xchg
scas
mov
call
mov
add
mov
dec
sub
add
clc
xor
lods
add
pop
sub
imul
call
call
add
call
call
add
repnz
icebp
inc
call
or
dec
popa
add
repnz
add
mov
adc
add
xor
add
jmp
sbb
push
add
popf
call
jp
jl
mov
mov
mov
add
call
jl
add
sub
lret
clc
out
add
add
mov
inc
call
add
call
add
and
add
clc
sub
add
jl
or
push
add
fadd
call
add
call
sub
add
sbb
add
mov
insl
scas
dec
add
add
ljmp
cmp
call
cld
add
add
xor
add
lods
cs
sub
notb
and
add
dec
lods
sbb
call
call
arpl
add
daa
call
sbb
push
add
stos
iret
sbb
mov
call
fcmovnbe
mov
call
call
add
addr16
dec
pop
outsl
pop
call
call
sbb
call
mov
mov
add
rorb
xor
add
xchg
push
call
dec
xor
add
inc
call
add
hlt
mov
add
and
mulb
add
outsb
in
jle
into
bound
add
add
mov
push
dec
mov
add
and
add
mov
call
add
add
call
mov
add
call
lods
push
inc
add
fbstp
add
add
add
xlat
cmp
sti
mov
add
add
in
minps
mov
push
fwait
hlt
pusha
add
dec
sub
jns
pop
outsl
push
jnp
lcall
add
mul
call
add
push
add
cltd
pushf
pop
sti
popf
call
gs
add
add
add
call
call
add
sub
add
add
call
mov
add
jo
add
adc
sbb
jg
push
add
cmp
icebp
lret
in
and
add
pop
add
add
add
jmp
add
jmp
fsubs
add
lcall
cli
in
adc
lods
stc
add
add
mov
mov
jne
sub
in
stos
sub
pusha
add
fs
add
add
sub
xor
sbb
mov
adc
inc
call
sti
ja
ficomps
add
int3
decl
out
outsb
dec
push
add
dec
repz
lret
fimuls
mov
call
push
add
int3
xchg
jge
nop
push
add
xchg
movsb
call
cld
mov
add
dec
xchg
dec
decb
or
cs
xchg
mov
bound
add
jecxz
nop
mov
call
pop
lahf
sbb
add
pop
xlat
jbe
pop
popf
and
add
cwtl
jns
mov
xor
call
ja
adc
add
pop
fs
aas
aaa
rcrl
jmp
add
call
lahf
push
jnp
jno
add
call
pop
push
add
adc
in
lcall
dec
inc
call
pop
mov
add
imul
mov
add
cltd
push
testb
mov
pop
jae
add
fstl
add
add
add
ret
jg
call
add
add
xchg
das
popf
bound
add
xchg
enter
lock
aad
add
push
add
daa
call
sbb
call
sbb
outsl
inc
call
or
decl
xchg
add
add
call
aad
call
push
dec
pop
mov
add
pop
call
add
call
add
call
add
call
add
push
mov
mov
dec
cmp
dec
inc
add
sub
dec
repz
add
lahf
lcall
js
add
jae
add
lock
sub
add
in
xchg
gs
sub
add
std
out
mov
call
adc
fistl
call
mov
add
ljmp
bound
add
pusha
add
mov
call
mov
pusha
add
insb
dec
mov
fwait
or
adc
call
add
repz
ret
call
call
loopne
sbb
popa
add
test
dec
xchg
dec
addr16
js
xchg
mov
cmp
test
call
hlt
out
jmp
inc
add
or
push
mov
or
add
or
es
add
add
dec
sarl
shr
inc
add
and
add
add
cli
push
dec
int3
mov
sbb
add
sub
add
add
sbb
add
jmp
outsb
jbe
call
adc
add
adc
xor
add
add
test
pop
lock
jo
add
and
add
call
sbb
imul
xchg
jbe
daa
call
add
adc
push
sub
pop
scas
sub
fsubs
sti
xor
add
in
imul
call
xor
add
test
mov
jmp
xchg
insb
cmp
or
add
fisttps
inc
add
add
add
xor
add
call
call
rcrb
loop
cmc
popf
adc
add
add
add
add
call
add
dec
test
inc
add
sbb
das
adc
daa
call
push
lods
aad
call
stos
add
add
repz
sbb
add
mov
inc
call
add
stos
lcall
xor
add
call
shr
in
xchg
dec
jmp
call
mov
mov
lods
not
fmull
or
add
lods
insb
sbb
add
int3
inc
call
pop
test
sub
cmc
xchg
cmp
and
add
sub
add
call
call
call
mov
cmp
pop
inc
add
mov
fwait
jnp
call
add
pop
xlat
mov
pop
das
je
call
callw
dec
push
add
xor
stc
jmp
lock
add
add
mov
add
insb
negl
add
clc
pop
das
shr
arpl
add
call
inc
add
inc
call
mov
jecxz
mov
add
arpl
add
jle
sub
push
lods
fsts
add
rcll
add
call
push
mov
jb
add
pop
cmp
add
enter
push
call
mov
sub
add
pop
sbb
add
ja
faddl
sahf
xchg
icebp
dec
dec
fstpt
add
call
leave
fiaddl
or
sbb
popf
pop
xchg
dec
pop
bound
add
jmp
js
inc
call
adc
add
add
mov
sub
test
or
add
xor
add
call
push
call
add
dec
lods
leave
mov
mov
cmpsb
call
dec
out
xlat
jnp
call
add
add
call
add
adc
add
and
add
adc
add
call
adc
add
pushf
pop
pop
push
add
outsb
in
mov
call
xchg
jge
call
or
adc
mov
test
loop
aam
test
push
add
je
call
jnp
inc
call
add
xchg
repz
jne
call
inc
add
dec
lods
aad
in
enter
call
call
call
lahf
fisubs
call
cld
mov
gs
jp
add
mull
add
add
or
add
mov
popf
bound
add
call
add
push
mov
sahf
into
mov
push
add
sbb
call
xchg
pop
fistl
inc
add
icebp
imul
call
add
xchg
in
notb
push
add
aas
es
test
pop
out
call
call
repnz
enter
mov
ret
mov
jo
add
add
inc
add
mov
xchg
int3
mov
mov
add
fnstsw
call
call
mov
cmp
and
add
test
ret
std
cmpsb
call
add
popf
jg
call
call
nop
or
stc
push
insl
jno
add
add
add
lods
mov
frstor
add
inc
add
shll
add
xchg
sbb
loop
ds
ds
call
call
add
push
es
callw
bnd
fmull
add
lods
dec
sahf
or
jae
add
call
call
mov
add
fs
jge
jae
add
jb
add
mov
adc
add
jbe
scas
sub
cmp
call
shr
call
nop
dec
jle
adc
add
add
shll
add
or
cli
adc
add
jae
add
call
call
add
adc
add
mov
mov
add
add
xchg
movsl
call
pop
mov
xchg
es
and
add
sti
inc
add
xchg
add
rcll
ja
xchg
jno
add
scas
pop
fcmovbe
arpl
add
add
and
call
add
call
mov
call
mov
iret
call
add
dec
or
out
pushf
out
adc
add
add
call
xchg
jns
add
nop
inc
call
call
test
add
sub
call
add
ds
mov
stos
push
add
pushf
push
push
insl
mov
sub
xchg
xor
add
call
call
sub
call
hlt
ja
imul
call
and
add
call
imul
call
scas
call
pop
imul
cmp
mov
call
inc
add
call
call
loopne
ficoms
sbb
mov
call
mov
add
xchg
jmp
add
or
push
call
add
call
call
add
mov
lods
test
xor
lods
fdivr
and
add
mov
inc
add
inc
call
add
push
call
nop
icebp
push
xchg
mov
fucomi
jmp
pop
aas
test
add
repnz
sbb
sbb
push
faddl
add
mov
movsl
call
out
dec
fidivrl
inc
add
mov
in
sub
dec
lea
ret
jl
int
jbe
call
call
add
scas
jno
add
add
es
test
hlt
fstl
loop
je
call
add
outsl
mov
sub
add
mov
pop
sbb
mov
je
mov
add
test
scas
sbb
jbe
and
add
add
inc
add
std
lea
push
add
insb
sti
mov
loop
pop
stc
lret
add
add
nop
cmp
add
outsb
jns
aaa
int
add
out
or
jl
and
add
int3
rorl
ss
add
mov
lods
fidivrl
add
in
pop
leave
shll
add
jecxz
fcompl
dec
in
aaa
insb
pusha
add
lret
jbe
jp
call
add
mov
add
dec
sub
add
mull
add
sti
mov
push
call
add
add
sub
imul
add
add
add
add
add
push
daa
call
add
mov
fwait
in
and
loopne
lods
pushf
int3
shr
mov
dec
sub
call
call
mov
rcll
mov
std
mov
mov
pop
mov
jo
add
adc
add
add
mov
call
add
pop
adc
add
jp
call
call
add
nop
scas
insl
xchg
xchg
mov
add
leave
and
add
fnstenv
xchg
fisubs
stos
and
xlat
xor
add
sbb
call
jg
call
in
lret
add
shr
dec
bound
add
xchg
add
add
add
hlt
fst
jno
add
add
jmp
call
add
mov
inc
add
sbb
dec
jae
add
in
loope
loope
xchg
callw
mov
call
mov
stos
sub
and
add
add
jno
add
pusha
add
iret
xchg
mov
add
int
out
clc
mov
call
mov
int
pop
pop
cs
mov
addr16
fstl
add
call
add
call
sahf
cld
jno
add
add
xchg
sbb
mov
mov
xchg
notb
fstl
add
call
int3
mov
mov
callw
add
shll
call
in
xor
add
call
inc
call
out
in
inc
add
mov
call
popa
add
xlat
push
call
dec
jno
add
add
shr
add
mov
dec
shlb
ret
call
cmp
popf
jo
add
pop
das
or
loope
pusha
add
inc
call
call
add
call
dec
xchg
xlat
and
adc
add
add
jno
add
fists
call
add
push
cmp
add
add
enter
repnz
std
lret
push
ja
loop
mov
add
push
call
xchg
mov
add
and
add
leave
int3
call
add
cmp
pop
dec
sub
add
cld
push
add
pop
rorb
inc
add
push
aas
mov
mov
sti
aaa
out
sub
mov
cmp
cmp
mov
call
add
add
pushf
fs
jmp
pusha
add
ja
call
add
iret
xor
add
stos
insl
stos
lret
fdiv
push
call
rolb
inc
add
stos
shr
mov
adc
add
mov
and
add
or
or
iret
push
aaa
mov
loop
push
notl
add
fs
aaa
sbb
cmp
lcall
call
call
fcmovnu
addr16
call
add
add
clc
or
cs
lahf
mov
xchg
pop
lcall
xchg
dec
aaa
cmp
call
insl
mov
test
outsl
push
movsl
call
jb
add
call
add
add
add
add
call
mov
call
mov
out
push
mov
dec
scas
leave
pushf
xchg
sbb
mov
add
mov
scas
cmp
push
xchg
mov
adc
add
add
add
push
add
aad
mov
call
pop
icebp
shr
call
push
dec
movsl
call
add
aad
add
lret
or
movsb
call
test
lods
fbld
add
fs
xor
add
call
cmpsl
call
xchg
sti
je
ficomps
add
jecxz
push
xchg
loopne
xor
add
call
popf
jne
dec
ja
cmp
add
add
out
adc
cmp
dec
jae
add
lock
add
add
xor
out
fists
add
stos
sub
jge
and
add
xor
add
mov
call
call
add
test
ljmp
mov
add
push
add
cmp
add
xor
out
sub
add
jo
add
cmp
mov
push
out
pop
aas
in
rcrl
int
test
pop
fcom
scas
pushf
and
add
and
add
sbb
sub
call
mov
or
and
add
add
xchg
jge
bound
add
loope
xor
cmp
xchg
movsb
call
inc
add
in
out
cmp
sbb
xchg
outsb
add
shr
sbb
add
add
test
aas
mov
jecxz
sbb
pop
mov
cmp
loop
sub
fiaddl
add
aas
in
ret
push
lahf
xlat
mov
or
call
add
add
mov
add
call
cmpsl
call
pop
mov
call
nop
jp
dec
sbb
call
mov
cli
mov
add
outsb
xor
add
fst
mov
call
in
ljmp
cmp
xor
add
fstpl
adc
int3
sub
imul
cmp
add
call
add
call
add
add
add
xor
add
dec
stc
cwtl
inc
add
xchg
ds
add
call
stos
sub
cltd
es
add
stos
stos
sub
rclb
add
ds
sarb
pop
mov
call
xchg
mov
mov
call
add
mov
add
jle
mov
stos
inc
add
sub
out
insb
pop
call
call
call
add
call
add
adc
add
push
add
xchg
test
call
mov
out
sbb
mov
call
xchg
cmc
sbb
add
cld
sub
dec
vmovlps
add
pop
mov
xchg
shr
clc
pop
jnp
fidivs
add
inc
add
fwait
aad
pop
fildll
dec
xor
add
add
add
add
jbe
cli
add
add
mov
sti
rorl
jle
cmp
add
sub
cmp
in
mov
xchg
mov
jne
inc
add
int
loope
call
popa
add
insl
push
xlat
or
test
add
xchg
callw
ljmp
scas
jns
add
fcoml
add
call
dec
lcall
xor
add
xchg
dec
fs
add
imul
add
loope
inc
add
and
push
lahf
outsl
and
add
add
push
call
or
jo
add
cmp
jnp
in
adc
popf
arpl
add
jp
jae
add
hlt
ret
call
call
mov
add
inc
add
pop
sbb
add
pop
ja
mov
mov
and
add
test
add
add
cmp
call
adc
fadd
call
add
insb
test
dec
and
add
add
sub
push
call
add
push
jb
add
mov
sub
sbb
call
call
clc
sbb
add
inc
call
loopne
add
add
orps
add
add
enter
mov
call
pop
fildll
fidivl
add
jbe
mov
sub
jecxz
dec
cltd
mov
adc
add
xor
add
add
xor
add
in
imul
dec
dec
enter
pandn
call
xor
add
sub
jae
add
call
xor
add
popf
ror
pop
xor
call
sub
mov
je
mov
fldcw
rcl
sbb
ffreep
call
cmp
xor
add
stos
pop
push
fidivrs
add
stos
rcrl
scas
sub
aas
in
jmp
add
cmp
add
sbb
aaa
shrb
call
adc
add
mov
loope
scas
leave
std
out
mov
jne
aad
mov
cmovge
jmp
leave
jne
add
ja
lret
add
out
add
add
add
movsl
call
push
add
mov
add
sub
push
add
and
call
outsb
inc
add
aaa
add
cltd
test
or
add
add
test
jecxz
ja
sbb
icebp
arpl
add
push
jp
xor
add
call
rcrb
push
lods
mov
xchg
mov
add
add
call
bound
add
add
popf
fbld
jno
add
call
sub
ljmp
call
add
add
add
ljmp
adc
add
inc
call
mov
jmp
add
sbb
mov
add
iret
push
ja
mov
and
add
jp
inc
call
jo
add
pop
adc
sub
add
mov
and
add
jne
call
pop
jl
or
add
and
ljmp
mov
xchg
add
ret
call
add
adc
bound
add
mov
cld
jo
add
scas
mov
call
pop
js
cmp
inc
add
pop
xchg
push
cmp
sbb
mov
jge
add
mov
call
mov
inc
add
mov
pop
inc
add
repz
nop
xchg
push
cmp
rcrl
add
jne
add
jne
mov
sub
insb
out
lahf
pop
outsb
repnz
xchg
sub
shr
xor
add
pop
mov
lods
stos
hlt
shr
sub
sbb
add
add
es
int
lea
add
mov
fcoml
add
add
aad
call
add
call
push
mov
push
xchg
mov
addr16
add
xchg
cwtl
bnd
sti
lahf
pop
call
lahf
lea
call
leave
js
call
dec
jg
add
lea
call
call
pop
shr
call
pusha
add
jno
add
call
add
add
add
int3
imul
add
add
stos
int
into
pop
call
into
adc
add
repnz
add
lea
or
add
addr16
out
jbe
call
clc
jl
or
arpl
add
jge
call
pop
in
icebp
mov
call
add
addr16
outsb
sbb
sub
cs
cmp
add
pop
cmp
call
aam
call
aam
call
sub
and
add
push
call
or
cmp
add
call
scas
into
loope
pusha
add
pop
in
divl
push
test
call
add
call
add
ja
add
add
add
mov
icebp
xchg
popa
add
dec
pop
pop
add
add
add
sub
iret
inc
add
call
ret
call
or
je
sub
callw
mov
and
into
or
xor
add
insb
push
add
cld
pop
call
call
jmp
mov
add
xchg
fadds
jp
loopne
pop
jnp
ljmp
add
dec
jne
adc
fldpi
dec
sub
inc
call
sbb
cwtl
add
jmp
add
ja
ljmp
add
div
xchg
push
add
movsl
call
xor
add
call
xchg
fiadds
callw
or
mov
sbb
test
ret
call
fnstcw
add
shr
sbb
std
mov
add
add
call
xchg
aas
pop
fwait
jge
pop
aaa
mov
mov
inc
call
add
hlt
xchg
mov
cmp
jp
cmp
call
fmuls
test
call
add
lcall
adc
add
add
into
bound
add
fimull
cmp
bound
add
call
xchg
sbb
dec
jne
adc
add
je
pusha
add
dec
cli
jbe
call
call
add
sbb
add
dec
adc
add
pop
inc
add
and
add
add
shr
repnz
sub
rcrl
add
clc
xor
add
add
jg
call
push
bound
add
ret
jge
adc
add
mov
fidivs
outsl
sub
jae
add
call
popf
and
add
add
rcll
jns
mov
pop
fcmovne
enter
movsl
call
jno
add
call
jbe
jmp
mov
push
add
sub
add
inc
call
inc
call
xor
add
jg
push
add
loope
pop
jae
add
xor
add
mov
push
iret
clc
fnstsw
dec
callw
call
add
inc
call
jne
adc
add
jecxz
testl
add
testb
add
hlt
pop
cmc
js
call
cmp
pop
in
cli
jecxz
fs
xor
add
icebp
push
call
add
cmp
mov
in
daa
call
call
and
add
test
mov
add
hlt
mov
sbb
call
jle
mov
mov
sbb
or
cltd
push
mov
pop
adc
add
dec
push
out
lcall
lret
das
outsb
mov
shr
add
jge
sub
inc
add
inc
add
jb
add
icebp
ja
xor
call
call
insl
loop
add
add
dec
mov
inc
call
callw
pop
fimuls
call
call
call
dec
cmp
bound
add
dec
mov
movsl
call
aam
fs
movsl
call
add
mov
arpl
add
call
add
add
sub
add
pusha
add
adc
add
call
gs
add
test
xor
add
ds
add
sbb
add
mov
jo
add
add
ss
mov
pop
out
mov
dec
sahf
loopne
lcall
pop
pop
mov
add
push
or
lods
xchg
mov
mov
mov
call
mov
call
jb
add
add
xchg
adc
add
add
inc
add
movsl
call
dec
sub
add
pop
or
mov
call
add
mov
call
cli
cmp
pop
inc
call
add
add
adc
add
add
dec
add
add
cmp
sti
hlt
dec
add
add
call
lret
add
jae
add
add
add
push
or
call
dec
mov
inc
call
call
sub
adc
add
aaa
lea
call
mov
call
das
iret
inc
add
jl
add
push
and
add
add
fxch
pop
dec
cmc
lahf
lock
gs
jbe
cltd
adc
add
add
cmp
add
push
call
call
mov
stos
fs
shll
add
in
daa
call
xlat
mov
stc
call
test
cmc
stos
mov
add
and
add
jae
add
and
add
sbb
call
add
sti
or
add
add
call
mov
call
push
jbe
call
add
xor
add
callw
call
xchg
aaa
pop
icebp
mov
call
bound
add
call
push
mov
add
callw
call
dec
push
jp
xchg
popf
sub
add
sub
lods
fbstp
add
inc
add
sub
out
aam
fs
movsl
call
add
add
cld
loop
hlt
fnstcw
into
loopne,pt
in
and
add
add
mov
scas
in
arpl
add
add
jae
add
cmp
jle
call
fwait
mov
add
or
cld
pop
call
jbe
add
dec
pop
test
lock
mov
movsl
call
inc
call
call
add
mov
add
jo
add
fwait
shrl
outsl
inc
add
dec
cmpsb
call
int
mov
fsubp
call
leave
pop
jnp
sub
repz
add
stos
aas
push
call
imul
cmpsb
call
add
iret
test
adc
add
inc
add
push
in
xchg
call
adc
add
call
hlt
cmpsl
call
mov
call
pop
call
mov
fiadds
add
cli
mov
add
jmp
add
add
add
mov
ret
fnstenv
add
add
callw
call
xor
add
cli
mov
outsb
test
callw
inc
add
or
xor
add
and
add
mov
call
aad
call
xchg
pushf
or
popa
add
outsb
out
scas
pop
inc
call
call
add
mov
jmp
call
fnsetpm(287
call
add
and
imul
inc
call
pop
push
xor
add
dec
lods
testl
sub
or
inc
add
stos
lods
popf
sti
mov
inc
call
add
ja
test
push
loope
mov
xor
add
add
scas
lea
call
or
mov
sub
popf
sti
or
mov
add
mov
movsb
call
add
mov
inc
add
sub
push
adc
add
add
add
mov
daa
call
add
es
pushf
mov
inc
add
xchg
ficoml
std
das
shr
int3
mov
jno
add
xor
add
negb
call
add
jmp
in
push
add
push
out
cld
insl
lahf
cld
push
add
add
xor
add
add
lock
add
mov
mov
fsubrs
lret
call
sub
add
jecxz
jbe
call
pop
push
ja
out
xchg
jle
dec
push
inc
call
loop
fimull
inc
add
sbb
cltd
fldt
cmp
call
lods
sub
push
add
cmp
ja
call
push
xchg
fisttpl
sub
mulb
cmc
es
loope
mov
call
jno
add
call
sti
int3
in
mov
cld
push
or
xchg
mov
add
outsb
cmp
repz
mov
add
fsubs
push
add
jmp
jbe
hlt
das
push
cmc
mov
call
jae
add
xchg
insl
call
add
fldcw
call
and
add
dec
sub
movsl
call
push
sbb
inc
call
iret
xchg
sbb
call
jp
imul
add
aad
call
mov
adc
scas
xor
nop
arpl
add
add
call
xor
jl
jl
rclb
push
and
add
dec
and
add
cmp
leave
in
xor
call
mov
xlat
xchg
mov
jl
xchg
lcall
and
add
inc
add
and
add
adc
add
in
inc
add
and
add
xchg
jmp
shr
sub
insl
mov
call
jnp
addr16
insl
call
dec
mov
call
aad
call
add
xor
add
rclb
add
mov
clc
fs
mov
sub
jbe
cmp
add
or
call
push
fsubrp
jae
add
add
pop
rcl
pop
push
xor
add
pop
sub
call
fisubs
add
jmp
call
int
fstpt
fstl
pushf
inc
add
dec
je
call
push
add
iret
in
sarb
sbb
sub
test
jo
add
lret
inc
add
xchg
adc
add
shrl
loop
sub
inc
add
in
jo
add
mov
call
mov
mov
sbb
inc
call
add
inc
add
or
or
dec
ss
add
movsb
call
es
lret
add
mov
pop
mov
out
cmp
add
dec
pop
or
iret
out
in
pop
add
adc
add
addr16
xor
jge
sbb
sub
call
in
int
add
add
add
call
add
jmp
mov
call
add
add
mov
pop
xchg
in
mov
out
lock
add
je
call
fs
popa
add
arpl
add
call
xchg
sbb
pop
imul
xor
add
jecxz
loop
mov
scas
psllw
test
add
add
shr
push
add
shlb
add
stc
cltd
clc
cmp
jecxz
callw
fidivl
jp
add
aaa
and
sbb
ljmp
pop
vcomiss
jg
add
xor
add
daa
call
rol
call
cltd
or
add
call
call
adc
add
add
out
ret
mov
call
call
sub
test
imul
insl
in
and
add
inc
call
jne
stos
add
add
add
add
in
call
call
pushf
cmp
fnsave
adc
add
sbb
add
dec
jmp
add
or
dec
push
cmp
mov
xlat
pop
mov
add
sbb
out
or
fstl
add
fstpt
add
add
mov
call
es
add
enter
dec
callw
xchg
xchg
test
int
sbb
mov
in
lret
shr
call
add
add
callw
mov
push
popf
insb
inc
call
ret
call
frstpm(287
call
pop
pop
jne
in
lahf
scas
mov
call
imul
cmpsl
call
js
add
dec
mov
cli
push
es
dec
stc
add
add
add
insl
push
pop
call
arpl
add
call
add
sub
sbb
inc
call
dec
aas
sahf
in
insl
clc
and
add
add
fldenv
call
aad
lret
in
test
lret
jb
add
nop
xchg
cmp
icebp
dec
test
call
jbe
call
sub
stos
mov
mov
call
insb
add
pop
sbb
stos
in
or
add
dec
and
add
mulb
popf
xor
add
ret
call
in
push
lea
arpl
add
pop
pop
mov
add
mov
call
jb
add
add
cltd
cmp
pusha
add
cmpsb
call
call
call
push
add
xchg
test
mov
call
sbb
call
ret
call
xor
lods
mov
inc
call
mov
add
add
add
call
adc
add
pushf
sub
call
ljmp
nop
sub
xchg
dec
ja
fdiv
in
cmpsl
call
call
mov
inc
add
cmpsl
call
stos
mov
xchg
cmp
cmp
dec
jg
add
imul
xchg
jae
add
sbb
add
mov
add
add
std
inc
add
xchg
loope
scas
fwait
decb
add
push
add
aad
popf
popf
into
in
pop
sbb
add
jns
call
call
or
call
call
ljmp
add
inc
call
xchg
mov
push
scas
sbb
dec
movsl
call
fsubs
shlb
add
call
pop
clc
js
popa
add
repz
arpl
add
enter
inc
add
sbb
call
add
xchg
pop
cs
call
testb
rcl
in
pop
call
callw
add
adc
add
push
add
lahf
mov
call
repnz
jb
add
add
out
xor
add
stos
call
add
mov
mov
xchg
jo
add
insb
or
js
cmp
pop
movsb
call
outsl
and
and
add
push
inc
call
call
hlt
pushf
incl
ja
call
sub
ret
call
shll
jge
lret
sub
add
sbb
xchg
cli
cmp
je
outsl
call
ljmp
add
add
add
cmp
add
sub
mov
sti
gs
js
das
xchg
call
add
mov
fs
xchg
ss
je
add
ss
call
jl
call
pop
push
mov
shr
rol
call
add
add
xor
add
add
add
popf
mov
sub
fldcw
aad
add
inc
add
in
push
call
call
or
or
mov
adc
xor
call
mov
mov
adc
add
ds
fsubrl
call
push
add
rorb
jecxz
cmpsb
call
sub
call
cmp
add
xchg
push
add
add
add
mov
mov
pusha
add
movsb
call
outsb
lock
add
lods
mov
cltd
and
mov
push
outsl
cld
jp
add
cmp
lcall
jns
test
push
pop
sub
call
mov
add
negb
mov
mov
add
fmull
add
jp
mov
or
sub
rclb
add
add
add
xchg
pop
push
adc
add
leave
imul
mov
add
cs
pop
cs
add
add
call
call
mov
add
mov
repz
popf
or
adc
or
add
add
lret
jne
add
jmp
add
dec
inc
call
stc
out
cmp
mov
add
jmp
jae
add
fxch
adc
add
or
add
in
pop
or
add
ret
call
mov
fs
call
and
add
in
mov
add
cmp
nop
cmp
dec
lcall
mov
pop
hlt
daa
call
call
jne
pop
sti
sahf
mov
jns
jmp
out
pusha
add
cwtl
jae
add
call
je
call
or
or
add
sub
mov
call
fcoms
push
stos
xchg
ljmp
add
call
dec
loopne
lods
push
call
call
insb
insb
jle
add
cmp
mov
mov
jmp
jmp
call
idivl
inc
call
in
push
ud1
rorl
cmpsb
call
js
fucomip
fsts
add
fcomi
ljmp
call
test
pop
dec
das
sbb
mov
call
add
push
or
or
lods
ss
xchg
scas
fcomp
pop
mov
ret
call
mov
ljmp
rcrb
ljmp
mov
inc
call
jmp
mov
rcrb
add
push
pop
popa
add
movd
call
cs
sub
lret
push
call
call
xchg
mov
and
push
add
dec
sahf
jne
mov
call
add
xchg
sbb
add
je
mov
call
fdivrs
call
add
pop
aas
push
shr
lods
and
add
add
dec
out
push
add
push
call
add
rorb
cmp
mov
jo
add
add
std
sbb
call
add
jp
