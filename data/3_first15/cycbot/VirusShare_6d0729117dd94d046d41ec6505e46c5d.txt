cmp
or
testb
dec
xor
sbb
loop
js
push
jno
jp
push
rol
add
ret
mov
add
inc
or
int3
icebp
mov
mov
repnz
mov
sbb
data16
or
nop
add
subl
jge
sbb
out
daa
mov
mov
hlt
cmpsb
mov
in
ds
ds
fwait
pop
pop
enter
gs
std
sub
or
and
lcall
xor
mov
add
leave
or
and
clc
xchg
in
inc
sahf
hlt
arpl
cmpsl
fisubrl
xchg
cmp
and
popf
pop
aam
pushf
movsb
jno
fs
test
pop
jecxz
jo
jo
loope
sub
xchg
in
in
scas
or
scas
pop
outsb
in
pop
mov
das
leave
cmova
sub
inc
outsb
ljmp
popf
insl
add
sbb
ja
lret
movsl
test
imul
popf
loop
shrl
add
sqrtps
pop
mov
movb
rorl
inc
add
ret
xor
jns
xchg
lcall
add
movb
sbb
mov
call
pop
test
pop
gs
lret
shll
stos
adc
lods
aas
xchg
cmp
jl
xchg
sarb
pop
add
push
std
jbe
imul
add
cmp
sub
and
dec
loop
jmp
test
sbb
lods
mov
das
inc
test
add
mov
stos
cmp
enter
addr16
add
add
mov
add
add
lods
lcall
test
testl
add
xor
add
add
inc
add
mov
add
das
jl
loope
ss
dec
fldcw
or
fbld
addr16
outsl
and
mov
sbb
add
fstps
iret
lock
jbe
ds
shlb
clc
jl
stc
pop
pop
xchg
lret
dec
movsl
or
add
mov
cmp
mov
mulb
movsl
out
outsl
mov
daa
xlat
test
daa
push
cmpsb
sub
xorl
pusha
add
mov
test
das
sbb
mov
or
in
daa
std
rolb
testl
mov
and
mov
mov
jnp
mov
test
adc
pusha
add
mov
jle
fmuls
aaa
bnd
das
sarb
lahf
mov
xlat
mov
movsb
mov
loop
lret
ljmp
movb
es
jae
pop
fwait
mov
and
xor
test
adc
push
sti
xchg
sub
fisttpll
push
add
add
sbb
pop
mov
sub
test
adc
dec
pop
add
in
mov
inc
ss
add
xchg
bound
mov
inc
add
add
out
ss
mov
sbb
out
and
movb
adc
in
xchg
test
in
call
in
lcall
lea
add
push
add
dec
and
push
pop
mov
add
sub
push
test
sbb
add
add
push
insb
adc
js,pt
and
dec
out
movb
fimuls
jo
pop
shr
cmpsb
in
jecxz
bound
pop
dec
cmc
sbb
xor
add
bound
push
test
xor
add
xchg
cmp
movsl
ret
pop
add
mov
pop
jmp
pop
push
push
pushf
les
adc
mov
repnz
je
push
mov
inc
fmulp
push
fsts
xchg
addr16
lock
sbb
ss
sbb
sub
jnp
pop
divl
ljmp
cmp
fcoms
shll
out
mov
fdivr
and
mov
push
mov
mov
add
jl
mov
dec
cmp
add
outsb
sub
push
push
sub
add
sbb
mov
aad
push
inc
xchg
or
add
mov
shl
ret
jnp
adc
mov
mov
out
xchg
popf
mov
add
push
rcrb
pop
cli
mov
pop
jo
ja,pt
sub
cmp
movsl
mov
cs
sub
cltd
movb
inc
add
in
and
fcoms
jne
add
dec
fdivl
fildl
sbb
sbb
sahf
add
sbb
push
pop
sub
or
cmpsb
das
rcll
out
in
ljmp
inc
out
addb
test
outsb
in
leave
subl
jnp
stos
xchg
test
and
iret
mov
add
xchg
imul
clc
es
inc
cld
lahf
scas
pop
pop
mov
lcall
add
rolb
sub
lret
xchg
xchg
add
mov
adc
cli
push
movsl
xor
add
add
icebp
repz
std
sahf
push
and
or
inc
add
lock
push
les
fisubl
test
dec
cmp
cmp
cmp
sarb
loop
addr16
inc
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
notrack
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
ret
add
add
jne
loop
ficoms
fimull
movsl
mov
push
incb
sbb
push
pop
dec
mov
subl
push
push
jne
fidivl
sub
mov
lcall
mov
or
jb
sub
sub
mov
inc
cmp
lahf
loopne
add
arpl
and
mov
push
mov
test
dec
add
and
and
pushf
push
sahf
arpl
dec
addb
adc
pushf
je
inc
add
nop
mov
jp
push
add
add
mov
mov
jno
sub
xchg
les
sub
jbe
add
loop
shl
or
mov
lret
stos
jo
clc
decb
dec
ss
das
or
lods
movsb
sub
push
cmc
pop
mov
mov
and
lret
mov
scas
inc
and
aas
fisubs
xor
pop
xchg
xchg
inc
add
add
daa
xchg
test
out
fisttpll
negb
pusha
add
aad
out
insl
add
insb
loop
dec
outsl
or
fimull
and
mov
fcomps
ret
sbb
jb
xchg
mov
dec
xchg
addb
cltd
push
add
in
stc
inc
cmp
jae
lcall
addr16
mov
cmp
test
add
xlat
divb
js
stos
loope
int
ret
cwtl
sub
pop
inc
add
out
fwait
addb
pop
cmp
rclb
sub
jb
pop
mov
add
insl
mov
mov
add
into
daa
imulb
fs
mov
add
adc
lret
pop
inc
add
sub
pop
jg
das
inc
dec
xchg
and
sbb
lock
clc
push
insl
insb
cmp
fs
add
scas
mov
call
in
call
cltd
jbe
aam
add
in
dec
hlt
lcall
xchg
pop
inc
add
add
and
fwait
imul
add
pop
mov
les
out
mov
add
test
flds
and
cld
xor
add
imul
pop
jns
xlat
lea
sub
jb
addb
cltd
fidivl
notl
mov
ljmp
insl
push
jg
addb
dec
imul
mov
pop
out
sbb
dec
bnd
and
jle
and
xor
cmp
push
sbb
es
push
sti
lret
push
push
mov
add
enter
rolb
aad
xor
aad
push
mov
pop
out
pusha
add
sahf
inc
jb
ret
fists
add
std
insb
pop
in
jl
sbb
add
jo
aas
imul
add
pop
movsl
xor
cmp
jno
add
and
cwtl
ja
mov
xor
and
cmp
push
dec
mov
sub
inc
push
inc
add
fistps
mov
add
dec
std
sub
add
aad
push
mov
lahf
dec
pop
in
dec
js
add
mov
jg
mov
incl
add
ja
sarl
add
mov
mov
add
xor
push
insb
mov
dec
sti
and
lret
addr16
cmp
pop
and
ja
cmpsb
jae
mov
add
and
ja
mov
xchg
xchg
mov
mov
push
scas
int3
je
add
push
imul
dec
jmp
cmp
flds
test
and
and
add
or
fisttpll
sub
in
xchg
jl
xchg
mov
sub
mov
add
add
and
xchg
es
push
or
call
add
jne
stos
popf
mov
push
inc
add
loopne
pop
mov
jmp
cltd
mov
mov
xor
cld
mov
sbb
jae
mov
outsb
scas
imul
xor
jl
fmull
leave
mov
add
push
or
stos
sub
pop
cwtl
pop
imul
add
shll
gs
std
mov
shll
in
out
shrb
add
add
mov
gs
daa
filds
and
test
add
hlt
lret
sahf
mov
cs
sbb
js
jp
add
jmp
mov
into
xchg
scas
inc
add
out
lock
jb
inc
nop
jmp
add
cmp
xchg
iret
xor
and
mov
xor
stos
popf
xchg
stos
repz
mov
fs
sbb
mov
lods
or
sahf
add
in
ss
fmulp
fwait
bound
loopne
sub
in
fdiv
mov
fsubrs
push
add
mov
iret
push
add
fnsave
cwtl
push
adc
pop
or
fwait
into
sub
add
addb
and
aaa
lds
aad
add
nop
cmp
pusha
add
rolb
addb
inc
add
shll
jge
xlat
es
jbe
xor
mov
xchg
movb
pop
and
lods
je
mov
xchg
cmc
leave
jns
push
outsl
xchg
loop
cmp
out
rol
add
and
je
xchg
mov
mov
jp
pop
lret
int
addb
xchg
popf
pop
mov
icebp
fwait
add
pop
daa
dec
add
js
aas
jb
fsubl
add
add
mov
es
nop
lret
inc
add
add
sub
mov
cs
dec
mov
xchg
lret
ret
jecxz
popf
insb
jmp
testb
stc
lret
aam
pop
insl
adc
sub
push
leave
pop
in
movsb
xor
mov
fs
xchg
mov
push
inc
fmulp
popf
cmc
cmp
loop
add
sbb
addb
inc
stc
lds
or
jno
movsl
jne
add
jmp
adc
xchg
repnz
inc
xchg
fcmovu
sbb
jnp
xor
mov
mov
jp
sbb
sbbl
xchg
cmp
push
shll
xor
push
clc
push
mov
clc
dec
into
jmp
xlat
mov
aaa
pop
enter
sub
bound
push
movsl
mov
rcrl
mov
or
repnz
std
sbb
push
popa
xchg
daa
sar
inc
add
cs
fstpt
das
fdivrs
lods
into
xchg
xchg
fmull
incb
pop
jnp
jl
xchg
cmpl
pusha
add
arpl
cmp
adc
cmp
lea
cltd
xchg
pop
cmp
add
dec
mov
ja
movsl
loope
push
mov
fidivrs
add
pop
and
jb
jo
cmp
cmp
or
add
lahf
pop
sbb
fdivrs
add
pop
rcrb
xchg
xor
sahf
bound
outsb
push
pop
xchg
cs
inc
jle
push
jo
inc
rolb
jns
xlat
mov
add
sub
sbb
add
jp
js
enter
test
mov
sub
repnz
mov
std
and
rcl
adc
movsl
mov
into
mov
imul
add
mov
addr16
jae
aas
out
xor
insb
fisubrl
stos
push
adcl
dec
sbb
sub
mov
test
mov
leave
out
xchg
add
out
add
add
jp
fnstsw
fistpll
and
push
lock
ljmp
cmpsl
stc
mov
loopne
mov
dec
and
mov
sarl
pop
jb
lock
sbb
inc
add
sbb
xor
addr16
jge
jg
sbbl
fisttpl
inc
add
das
es
test
jo
dec
sahf
mov
jns
fnstsw
popf
pop
add
pop
aaa
sub
lret
shr
dec
xlat
jp
lock
bound
lcall
scas
les
sbb
add
or
fs
lahf
push
xchg
popf
outsb
xor
movb
cmpsb
jp
loop
cmpsl
rcrl
pushf
test
mov
les
out
ret
adc
std
mov
add
xor
lods
cmpsl
adc
mov
or
sub
cmc
icebp
addr16
mov
or
add
add
add
mov
jge
aam
cmp
mov
jge
mov
push
push
mov
xor
std
out
cmp
fwait
lock
or
add
loopne
stos
inc
add
call
ret
xlat
ret
outsl
cwtl
jmp
sbb
addr16
pop
pop
mov
nop
inc
xchg
out
sarl
leave
loopne
jmp
add
scas
fiaddl
rcrl
xor
aad
in
ljmp
incl
add
add
jl
adc
lds
add
push
je
add
xlat
mov
popa
gs
mov
mov
imul
cmpsb
arpl
dec
pop
adc
dec
add
out
stos
addr16
notb
jg
ret
insb
lcall
push
or
mov
stos
sub
pop
pop
push
cltd
cwtl
int3
push
and
addr16
jle
pop
cmp
xor
add
insl
and
movsl
notb
push
ss
movb
inc
mov
movsl
imul
or
sarl
jge
add
add
outsl
fadds
jns
cli
daa
scas
cmp
pop
xor
jg
outsb
push
ret
or
andl
cld
add
mov
lret
jae
in
mov
sbb
aam
aad
add
add
imul
add
ret
inc
add
jo
lods
lea
cwtl
cmp
add
dec
push
dec
mov
add
sbb
cmpsb
push
leave
and
inc
andl
pushf
mov
add
dec
dec
pop
addb
repz
add
push
inc
add
add
adc
lret
sarl
call
lcall
in
sbb
add
mov
and
add
outsb
push
inc
lods
xchg
mov
popa
call
sti
xor
xchg
push
xchg
jge
add
sbb
fisttpl
out
out
lds
dec
out
in
push
push
add
add
and
sub
aam
dec
scas
cmp
ljmp
add
add
push
sub
mov
push
clc
xchg
lods
scas
sti
sti
sub
aaa
stc
fcmovu
cwtl
ficoml
in
jp
repz
movsb
dec
pop
sti
int
mov
aas
add
rolb
mov
xchg
in
xchg
cld
out
test
cmp
inc
add
sbb
xchg
push
fs
outsb
and
and
or
aam
cmp
cli
sbb
sbb
lods
add
mov
je
leave
jp
push
adc
jae
or
add
ret
add
gs
lret
pop
xchg
aas
scas
xor
data16
es
out
shl
jb
and
xor
sbb
jg
faddl
push
daa
mov
mov
jg
dec
into
xchg
push
push
outsb
add
scas
xor
sbb
popa
int3
dec
and
mov
ret
dec
xchg
xor
push
stc
and
mov
inc
add
push
ret
add
mov
add
mov
cmc
inc
add
cmpsl
or
pop
rcll
mov
add
pop
mov
mov
adc
int
xor
mov
stc
insl
mov
mov
add
popf
lret
movb
inc
shrb
xor
rolb
and
and
fidivrs
movsb
loope
fsubrs
inc
add
enter
push
addb
sub
das
ret
sub
cmp
js
aas
fwait
jbe
test
bound
movsb
fisttps
jg
mov
mov
inc
sub
add
dec
jae
add
xor
mov
addb
add
add
mov
push
andl
push
in
into
jns
aam
mov
xchg
in
mov
movsl
mov
mov
cmc
incb
xor
push
add
sub
iret
mov
leave
pop
and
adc
mov
cmp
out
into
lods
outsb
testb
pop
mov
pushf
inc
lret
int
add
and
push
mov
std
or
ret
outsb
pop
xor
dec
dec
arpl
nop
push
pop
push
xlat
pop
xchg
roll
lods
pop
sub
push
sbb
jg
pop
mov
sarb
sub
adc
mov
cmc
adc
sbb
add
repnz
icebp
ljmp
sub
or
add
cmc
stos
pop
lcall
faddl
pop
or
cld
stc
outsl
or
ja
movsb
addb
mov
inc
imul
inc
add
jecxz
cs
and
adc
rolb
movsl
bound
aaa
fisttpll
int3
loopne
xor
push
and
outsl
addb
shr
fnsave
sub
xchg
lods
push
das
push
ljmp
ret
sub
xchg
js
insb
aad
push
add
addb
push
and
xor
inc
cld
ret
add
movsb
out
mov
fwait
mov
mov
cmp
and
adc
xchg
xor
adc
addb
jmp
aaa
mov
leave
xor
push
add
jns
lahf
pop
int
dec
mov
xchg
insb
inc
add
add
imul
std
out
xor
sbb
xchg
movsb
loop
in
add
insb
mov
mov
xchg
adc
push
ret
cmp
rolb
cmpsb
push
add
pusha
add
push
mov
mov
sbb
jle
add
lea
cmp
mov
popf
jno
scas
lcall
shlb
out
or
shll
push
xor
jns
add
mov
mov
inc
add
sahf
pusha
add
inc
mov
outsl
lds
cmpl
call
insb
inc
or
scas
in
cwtl
jle
sub
sbb
sbb
dec
mov
inc
add
dec
fdivp
cwtl
stos
push
adc
and
out
dec
ror
or
mov
jp
bound
inc
xchg
lret
xor
ret
sbb
and
insb
push
lret
push
iret
idiv
ja
add
lret
into
divb
test
adc
pop
mov
xor
lods
pop
or
sti
data16
jmp
aad
add
rorl
jmp
pusha
add
sub
roll
and
lock
outsb
mov
add
add
xchg
push
test
cmc
fyl2xp1
loope
out
cmp
or
sahf
fstp
pop
lock
stos
stos
aas
jns
movb
sub
jo
sub
mov
bound
repz
add
sbb
adc
or
or
dec
mov
mov
shll
add
sbb
test
and
addb
jge
mov
fsubl
xor
mov
add
pop
and
imul
loope
pop
xor
add
jl
aad
and
stos
mov
xchg
pop
mov
mov
mov
loope
std
mov
imul
fs
outsb
movsl
cmp
add
adc
fisubl
test
push
repnz
imul
and
inc
lock
jne
dec
cmp
sahf
sub
inc
add
jns
and
sti
ret
mov
xchg
push
xchg
testl
adc
movsl
adc
push
test
jg
ds
push
adc
sarb
add
push
push
clc
pop
fmull
xchg
xor
iret
sbb
sbb
sub
add
add
mov
and
inc
add
inc
ficoml
daa
dec
push
add
movsl
lods
movb
fs
out
dec
insl
mov
repnz
add
xchg
xor
xor
adc
mov
fcom
cmp
cmpsb
cmp
in
pop
ds
cmc
inc
add
imul
add
mov
cwtl
mov
jle
sbb
out
shr
or
adc
int
adc
sub
mov
jae
sar
inc
adc
into
ja
pop
dec
ret
inc
pusha
add
sarl
addr16
push
movsb
inc
add
lret
push
sbb
dec
xchg
jge
add
xor
add
mov
mov
lret
push
insb
imul
xlat
pop
pop
mov
mov
mov
stos
aas
iret
xlat
push
lods
out
repz
sub
sti
rolb
xchg
ds
loope
jge
jbe
sub
pop
fwait
sub
insl
xor
adc
repnz
inc
add
dec
in
mov
and
mov
cltd
das
addb
pop
sti
mov
lds
cmp
inc
add
mov
cmpsb
pop
xor
lods
add
push
les
sbb
in
std
out
cmp
sub
add
mov
jge
mov
adc
mov
ret
stos
cmc
mov
mov
push
shl
jl
mov
sub
movsl
ja
mov
in
cmp
outsb
into
fsubp
lock
lcall
xchg
sub
sub
pop
push
loop
out
lcall
fiadds
mov
adc
xor
push
mov
add
inc
push
cltd
mov
add
sahf
insb
icebp
mov
add
adcl
push
fs
mov
into
jnp
add
add
mov
cmp
mov
movb
and
jecxz
push
cmpsl
add
mov
and
mov
add
push
sbb
leave
jle
xor
bound
fs
inc
add
repnz
add
add
add
in
xor
add
sub
add
xor
hlt
jmp
ret
fcomps
lret
js
mov
mov
pusha
add
icebp
addb
int
add
push
add
aad
mov
jge
mov
out
out
cmp
ds
adc
sti
cmp
imul
xchg
stc
pop
out
lods
incl
add
imul
cmp
inc
dec
ds
insb
pop
pushf
les
fsts
adc
rcrb
lock
dec
stos
cmp
rolb
bound
out
push
test
jg
mov
mov
cmp
jmp
mulb
add
shrl
add
add
lcall
int
pusha
add
movb
bound
bound
push
stos
xchg
or
add
jg
inc
adc
mov
add
bound
shr
inc
add
fbld
loop
dec
mov
stc
sbb
xchg
cmp
iret
addb
add
add
jae
pop
mov
stc
ljmp
push
movb
jp
cmc
lods
cmpl
ljmp
pop
sbb
mov
stc
or
add
mov
mov
aam
inc
das
push
sub
jne
enter
xchg
std
stos
std
ss
add
jmp
fnclex
or
cmp
mov
mov
mov
jb
jne
and
ret
in
ljmp
mov
test
xchg
enter
ja
dec
decb
movsl
mov
out
sub
jnp
xor
add
add
mov
mov
push
xor
test
mov
cmpsl
loopne
pop
jns
shrl
lods
add
mov
aaa
sti
xchg
cmp
adc
or
add
jbe
out
add
add
daa
outsl
jns
test
cmc
push
mov
mov
pop
repnz
xlat
sub
cs
inc
ret
orl
es
cmp
add
lcall
add
enter
add
push
mov
shll
in
inc
jl
ja
es
xor
mov
mov
leave
push
icebp
push
pop
dec
in
push
push
cld
sub
sbb
pop
or
lods
or
stos
inc
mov
bound
mov
out
push
add
mov
add
jmp
add
call
jns
jmp
faddl
add
push
pop
push
mov
xchg
negl
aaa
out
mov
repz
xchg
lahf
inc
fimuls
out
xchg
adc
adc
call
push
and
sbb
dec
xchg
out
fnsave
sahf
test
lds
and
call
mov
push
pop
ficoms
dec
cli
add
push
call
add
push
dec
les
sbb
add
pushf
fmuls
pushf
shll
std
mov
cld
push
fidivrs
push
pop
and
sub
mov
mov
pop
rcll
jae
push
das
inc
pop
xchg
jne
sbb
jg
les
push
pop
out
js
add
popf
bound
lahf
sbb
push
dec
cmp
xchg
sub
mov
mov
in
push
fs
clc
in
bound
jnp
lock
les
sbb
dec
rolb
xor
js
xchg
mov
add
adc
mov
sti
and
mov
pushf
outsb
notl
nop
jae
add
and
test
pop
cmp
add
add
loop
ret
cmp
sub
adc
mov
rorl
xchg
lea
inc
add
mov
dec
xor
adc
or
les
popa
mov
add
cmp
cli
mov
mov
pop
inc
add
lds
push
test
add
pop
daa
lea
jne
dec
mov
insl
repnz
dec
fbstp
arpl
add
lea
sbb
loopne
rcrb
cld
in
aaa
lret
xchg
hlt
mov
pop
mov
adc
mov
xchg
lods
out
sbb
jne
popa
int3
adc
lds
sbb
sbb
ds
ficompl
scas
and
adc
in
mov
push
loopne
ret
pop
pop
scas
es
sub
inc
add
int
movsb
jne
pop
testl
insl
rcrl
sbb
mov
push
or
xchg
or
mov
fldenv
lea
xchg
lock
int3
aaa
jmp
fiaddl
push
sub
add
in
adc
pop
sbb
test
imul
sub
add
popf
lcall
mov
mov
std
popa
sub
pop
xchg
popa
rolb
add
push
je
mov
add
add
add
push
add
cmp
jl
inc
sarb
lcall
pop
jecxz
add
les
movb
nop
pop
icebp
fwait
ret
addb
pop
fiaddl
add
and
xchg
dec
cmpl
or
add
cmp
gs
jmp
pop
loop
stos
mov
fcoml
push
jecxz
pop
cs
jns
jecxz
add
inc
shll
add
scas
add
add
movb
pop
or
xchg
adc
arpl
in
insl
mov
psrlw
addb
inc
xor
clc
xor
sub
pop
ret
cmpsb
xor
sbb
out
scas
cmp
addb
mov
cmpsb
xchg
pop
movb
dec
jnp
das
sub
xor
shlb
mov
ret
xchg
pop
fists
add
enter
push
and
arpl
push
loopne
adc
xchg
mov
xor
dec
pushf
and
paddusb
add
add
xchg
mov
cld
jo
enter
dec
roll
add
inc
popf
decl
mov
xlat
jbe
push
cltd
aad
loop
cld
cmpsb
jae,pn
adc
notl
adc
cmp
mov
int3
add
or
mov
add
lret
cmc
lret
loop
push
jo
fisttps
fs
mov
xor
mov
rclb
add
imul
loopne
mov
push
mov
jl
test
add
add
jp
outsl
inc
add
js
dec
bound
fadd
add
outsl
notb
loope
sbb
movsl
shl
loope
adc
gs
jb
sbb
push
aaa
iret
ret
nop
into
mov
jo
loop
jno
xchg
jae
mov
jge
hlt
push
jns
or
out
mov
pushf
jmp
adc
out
add
cmp
jb
ss
jne
cltd
push
fwait
shlb
add
add
ljmp
dec
out
mov
call
das
jne
into
dec
mov
sbb
adc
xchg
dec
loope
jle
jecxz
ss
push
mov
inc
add
fs
push
leave
lahf
inc
cmp
adc
and
mov
add
sbb
xchg
push
jb
jecxz
ljmp
cmp
addr16
pop
pushl
mov
push
pop
add
jno
and
lcall
test
fmulp
test
add
push
push
fdivs
sbb
add
add
mov
repz
insl
jge
add
mov
sahf
mov
or
mov
out
inc
add
clc
or
inc
cmpsb
mov
sbb
repz
add
imul
pop
mov
or
popa
mov
mov
add
add
jle
or
inc
add
push
push
repz
movsb
mov
push
rcll
imulb
xchg
adc
mov
inc
add
lret
mov
pop
add
sbb
dec
push
dec
dec
cmp
jb
lret
push
push
push
and
cmpsb
mov
adc
loopne
fstpt
pop
jbe
jne
ret
jnp
imul
cmp
add
dec
jmp
mov
ficoms
jp
mov
ret
rolb
lods
fisttpl
mov
mov
push
xor
shll
mov
outsl
pop
push
push
ja
stos
insl
cmpsl
jbe
aad
divb
lods
jae
xchg
adc
out
xor
lea
add
push
das
into
xchg
pop
scas
push
cmc
in
adc
xlat
pop
data16
and
xchg
jecxz
mov
add
sahf
inc
add
sbb
pop
jne
sub
add
movsl
or
rolb
xor
ret
xchg
mov
outsb
push
orl
inc
add
dec
stc
or
sbb
mov
ss
ljmp
inc
add
cmpsb
or
out
loop
push
add
scas
je
xchg
jns
subl
inc
fdivl
mov
ret
and
insl
cmp
cmc
cmpsl
xor
add
jge
xlat
je
daa
insl
pop
out
mov
inc
add
pushf
movsl
mov
cwtl
sbb
enter
arpl
rolb
xchg
jg
bound
test
cmp
sbb
test
xchg
arpl
popa
insb
or
icebp
lcall
push
stc
mov
test
inc
pusha
add
cmpsl
roll
cltd
xchg
rolb
pushf
pushf
adc
mov
jbe
ss
add
lcall
xchg
loope
fnsave
jg
or
mov
add
xchg
stos
sbb
adc
lods
cmp
test
xchg
mov
loope
out
pop
fcompl
lret
lock
xor
or
mov
xor
pop
mov
add
add
shlb
add
pop
xchg
xchg
mov
movb
sub
out
movsb
and
cmp
das
testl
inc
add
push
add
mov
add
in
lahf
insb
and
loopne
sti
bound
push
daa
cmp
add
mov
movsl
xchg
push
lds
jae
adc
out
lret
sbb
xor
jne
fisttpll
insl
inc
sahf
sbb
fidivrl
jmp
sub
xchg
rolb
push
les
cmp
add
xor
lods
and
xor
jb
mov
lea
cmp
shrl
add
fistpl
call
add
mov
lds
scas
dec
cwtl
cmpsl
rcr
dec
dec
and
inc
jecxz
push
push
xchg
dec
sti
insl
aad
ljmp
adc
movb
and
mov
sub
icebp
scas
and
and
out
imul
pop
push
push
das
xor
hlt
cmp
dec
xchg
jnp
and
adc
cmp
in
or
mov
mov
movsl
call
fs
adc
ds
or
aam
pop
inc
outsb
popa
test
mov
jg
fsubrl
stos
mov
xchg
mov
jns
mov
xor
mov
fdivrp
xor
addb
jg
mov
push
inc
pop
adc
out
dec
sbb
test
jbe
pop
rcrl
les
mov
add
mov
cmp
js
mov
add
lret
mov
rcl
push
push
stos
fadds
cmc
addb
gs
jl
dec
popf
rolb
or
cmp
lret
jnp
add
or
cmc
xor
xchg
or
repnz
es
adc
mov
add
xor
and
or
aad
adc
and
and
and
stos
and
add
jl
jmp
add
sub
fmul
and
mov
push
std
mov
mov
push
or
add
lcall
xor
jno
test
test
add
pop
mov
push
mov
ljmp
push
rolb
lea
add
cwtl
push
or
pop
inc
pop
mov
jl
add
rcrl
test
cmpsb
mov
and
xor
add
dec
out
out
pusha
add
cmp
sbb
bound
shll
out
mov
mov
dec
adc
enter
movsb
es
insl
mull
or
rep
push
mov
add
popf
mov
sbb
jne
cmpsb
and
pop
js
js
push
add
mov
nop
mov
movb
add
mov
mov
dec
arpl
imul
or
cmpsb
cmp
mov
jle
sti
loopne
add
fcoms
xor
adc
cwtl
inc
add
xchg
fadd
add
or
pop
cmpsl
ret
shlb
or
idivl
adc
into
or
xor
shll
aaa
jl
dec
xchg
mov
add
or
into
xchg
fs
sbb
add
fs
xor
xchg
sbb
fucomip
das
call
pusha
add
xor
xor
jae
sbb
imul
adc
addb
fsubs
lret
fld
add
push
outsb
cld
out
mulb
outsl
pop
mov
lods
in
cmp
push
movsl
mov
movb
shll
dec
mov
mov
fsqrt
pop
cmp
xor
jge
dec
loope
int3
jmp
dec
inc
add
addr16
xor
outsb
aaa
and
mov
pop
mov
ret
mov
testb
int
cld
dec
pop
test
xchg
es
cld
sbb
sbb
sar
outsb
js
mov
data16
add
mov
int
xor
mov
and
jbe
push
aaa
lret
filds
xchg
scas
jnp
xor
data16
popl
add
xchg
cmp
lahf
iret
fidivl
sub
in
push
sbb
addr16
cmp
jne
mov
cmp
mov
add
movsb
pop
jb
lods
push
mov
dec
data16
push
test
or
std
ret
rolb
jl
push
add
add
test
lds
add
add
add
add
cmp
adc
mov
mov
dec
add
rcrl
loop
jl
add
inc
add
and
int3
daa
add
inc
add
nop
or
movsb
xchg
push
push
flds
add
dec
insl
jp
xchg
lods
leave
mov
and
fiadds
mov
push
add
push
jne
ljmp
add
lret
ret
inc
movsl
inc
add
mov
add
ss
sti
dec
rorb
jo
jnp
push
out
mov
push
pop
push
sbb
loop
leave
mov
idivl
cmp
sub
in
repz
fimuls
sbb
mov
or
mov
add
test
addb
xchg
jae
aad
mov
dec
call
ret
xor
hlt
sbb
bound
jmp
je
dec
fisubrs
mov
push
inc
add
cmpl
mov
add
jo
cld
mov
pop
xchg
jb
add
lcall
sub
outsl
repz
add
push
push
es
cmp
test
mov
and
bound
adc
js
pushf
inc
adc
jne
scas
add
sub
ds
into
and
ljmp
push
popf
lret
add
add
push
lcall
pop
push
les
rclb
jl
adc
fdiv
ret
push
add
or
lret
cmpsl
mov
add
jp
cmpsb
push
add
fs
aaa
lret
rolb
fildl
sub
enter
bound
inc
add
je
xor
sub
int
mov
fnsave
and
popf
or
add
dec
cmp
or
dec
insb
scas
xor
lods
add
lcall
mov
jecxz
daa
dec
test
add
testl
lods
lods
push
cli
lahf
mov
fistpll
jnp
pusha
add
std
popf
insl
lret
sbb
push
popl
add
mov
add
call
stc
lahf
dec
pusha
add
lods
mov
jp
mov
imul
cmp
mov
sub
cmp
std
leave
test
mov
or
sbbl
xor
loope
cmpsl
outsl
movsl
ret
adc
mov
push
pop
pushf
jo
dec
fcomip
cmp
addb
pop
sahf
movsl
mov
push
and
mov
scas
into
aaa
gs
push
lds
xchg
outsb
and
jecxz
adc
cmp
xor
push
imul
repz
addb
iret
xor
fs
add
add
push
inc
ret
sbb
mov
xor
or
imul
test
mov
add
add
into
dec
jmp
inc
add
int3
pop
shr
loopne
jns
lcall
sub
popa
push
mov
add
mov
add
push
sub
add
mov
sbb
bnd
sahf
jnp
dec
adc
enter
push
movsb
add
or
aaa
adc
mov
pusha
add
dec
inc
add
hlt
jecxz
lcall
cwtl
iret
in
add
cmp
inc
add
es
fsubrs
mov
enter
mov
in
inc
add
popa
push
or
add
mov
and
lcall
jnp
dec
push
mov
in
fdivrs
adc
rcrl
icebp
xor
addr16
repz
or
xor
add
adc
xchg
dec
imul
mov
push
fidivl
cmpsl
adc
pop
jae
lods
mov
add
fcos
pop
xor
or
out
in
jno
mov
push
icebp
xchg
sub
sbb
jg
shl
sub
outsb
inc
add
push
in
or
xlat
jle
push
add
aam
cmp
pop
push
push
inc
call
ret
xor
repnz
out
sbb
add
cmp
enter
xor
xor
out
mov
enter
jae
loopne
pop
repnz
cmp
xchg
xor
cmpsl
in
in
or
add
hlt
cmp
nop
pop
repz
ljmp
repz
lcall
mov
xor
mov
nop
push
pop
or
xor
add
xchg
into
lahf
idivl
test
shr
mov
mov
mov
outsl
std
adc
in
push
jne
sahf
cmc
push
add
daa
push
sbb
xchg
push
cmp
cmp
xchg
adc
rorl
imul
and
xchg
sbb
out
stc
arpl
jl
xchg
mov
fwait
mov
pop
mov
push
jcxz
mov
jmp
cmpsl
cmpsl
pop
inc
add
push
add
clc
jmp
icebp
cmp
inc
jo
aam
mov
mov
mov
push
sub
test
push
xchg
popa
stc
loop
mov
jns
sub
pop
xor
arpl
jle
push
lock
lret
int
or
out
into
cld
xchg
cmp
add
xor
pushf
push
or
aaa
sbb
movsl
shl
fldt
outsl
mov
hlt
ret
cmc
jbe
pop
inc
add
gs
movb
sbb
lea
xor
dec
xor
mov
push
push
push
fbstp
es
in
add
push
cmp
mov
and
in
push
and
or
add
mov
mov
fsub
addb
dec
pop
dec
test
sbb
and
insb
jle
les
scas
imul
cwtl
sub
fldl
add
mov
xchg
mov
mov
pop
jge
in
push
inc
add
test
jle
mov
cmp
pop
imul
xchg
mov
jmp
or
in
xchg
psllw
jmp
sbb
jo
stos
sub
inc
mov
push
flds
add
stos
repz
mov
add
roll
inc
adc
aad
test
roll
add
xor
and
lret
sub
add
shl
cmp
pop
out
and
ret
adc
inc
addb
movb
bound
pop
jg
cwtl
sub
add
fs
or
mov
adc
push
sbb
not
cli
rolb
insl
or
out
mov
inc
fwait
mov
mov
dec
jecxz
imul
add
dec
mov
cmp
add
rorb
sti
shll
hlt
stc
xchg
fdivrl
movb
mov
test
xchg
sub
xor
scas
adcl
hlt
mov
aad
mov
sahf
pop
add
mov
stos
mov
test
test
push
add
xchg
sub
test
mov
or
clc
in
out
aaa
stc
fnsave
or
mov
or
add
add
pop
iret
out
ljmp
bound
std
fcompl
dec
or
scas
inc
xor
sti
add
in
fnstcw
movsb
mov
arpl
cmp
pusha
add
ficompl
and
and
sahf
jbe
add
push
jg
je
fildl
xor
inc
movb
cmp
bound
or
jb
aaa
in
mov
dec
lods
in
pop
mov
sahf
scas
data16
and
lret
mov
add
addr16
mov
pushf
or
lea
add
sbb
xor
add
and
push
xchg
into
and
add
in
mov
rolb
jmp
jg
les
popf
mov
cmp
es
add
ret
mov
pop
xor
add
jo
push
or
in
aaa
sarb
in
dec
push
outsb
sbb
clc
repz
inc
addr16
pop
dec
push
je
xchg
add
hlt
das
jle
movsl
mov
push
push
sub
mov
xor
pop
pop
ss
lahf
scas
sub
sub
xchg
iret
movb
stos
ljmp
add
loopne
fisubl
push
add
xor
mov
add
addb
xchg
outsb
xor
cmc
sbb
add
mov
add
hlt
in
fbstp
cmpsl
dec
leave
repnz
adc
inc
add
ret
scas
inc
add
daa
hlt
mov
insl
dec
inc
add
sub
jno
repz
inc
daa
cmc
pop
mov
cmp
rcll
pop
jo
fcomps
mov
dec
into
vaddss
les
xchg
mov
dec
out
cmp
inc
add
add
aas
inc
movb
jg
jle
std
daa
jl
fistps
push
test
test
nop
sub
jmp
add
cmp
pop
xlat
ja
mov
or
sub
push
data16
xchg
mov
mov
sbb
ret
inc
nop
repz
rcrb
int3
push
cmp
ds
scas
test
or
push
mov
out
test
out
sub
stos
in
xchg
ret
mov
hlt
or
push
adc
in
in
adc
std
fs
ficoms
ficompl
shrl
dec
adc
push
pop
cmp
movsb
xchg
cld
jg
push
add
iret
mov
pop
add
add
loopne
mov
xor
push
fnstenv
xor
or
jle
data16
lea
push
stos
push
paddusb
sbb
lock
mov
jnp
and
sbb
push
cmpsl
out
popf
in
xor
lcall
add
push
lea
lds
mov
sarl
addb
push
stc
push
xchg
stos
ret
lea
add
test
jns
xor
xchg
dec
enter
xorl
cli
fwait
xor
lea
mov
xchg
clc
mov
add
clc
das
push
jb
add
add
or
add
leave
add
pushf
cs
and
addb
loop
sbb
rcrl
ret
jo
bound
mov
lret
inc
sbb
jl
movsb
fmuls
in
jbe
jnp
add
fisttpl
cmp
add
cltd
push
pop
or
mov
xor
sub
into
addr16
or
mov
xchg
mov
js
aaa
fidivrs
jnp
push
push
pusha
add
mov
mov
movsl
push
inc
add
cli
cmp
movb
lods
jp
or
adc
movsl
aas
je
or
mov
jno
stc
lcall
mov
jp
repnz
pushf
cmpsb
dec
inc
jns
xor
xchg
pop
cmpsl
pavgb
stos
js
dec
repnz
inc
jb
sti
xchg
ja
or
add
aad
mov
pushf
jae
mov
scas
cmp
lea
nop
dec
out
sahf
aas
push
lods
cmpsb
jae
pop
and
mov
int3
out
and
nop
sub
stc
lcall
add
addb
subl
xchg
jo
and
pop
pop
scas
std
add
test
add
add
mov
dec
xlat
clc
adc
cld
pop
or
add
pop
je
insb
jno
mov
push
dec
jne
mov
in
sbb
lock
cmp
js
je
dec
mov
sub
pop
fsubs
mov
dec
jae
mov
daa
frstor
lock
cltd
push
push
cmp
inc
inc
int3
stos
es
add
pop
mov
push
dec
ret
addb
and
fimull
sbb
mov
shll
xor
int3
pop
fdivrl
in
xor
lahf
int
inc
add
add
out
lret
test
mov
add
sub
mov
rolb
pop
ret
and
push
push
adc
jp
out
mov
lea
add
adc
add
and
mov
add
add
clc
inc
add
hlt
addb
lods
popf
xchg
gs
lock
sub
pop
cmp
sub
rolb
inc
jle
add
cmp
shrl
sub
leave
or
fsubrl
push
or
push
arpl
xor
xor
mov
mov
jno
xchg
dec
dec
jecxz
adc
xchg
jl
add
jp
add
adc
and
xor
mov
mov
xchg
push
xchg
cmc
addb
push
stos
pop
cmc
jecxz
cld
out
mov
pop
mov
inc
add
jge
mov
sahf
mov
add
jp
out
adc
int
sbb
mov
mov
add
xchg
adc
push
xor
ss
sub
imul
sbb
dec
std
gs
jns
bound
mov
rclb
add
mov
jge
cmpsl
test
cmpsb
test
std
dec
leave
push
inc
aad
in
mov
outsb
dec
push
cmpsl
sbb
bound
add
ja
lahf
leave
xchg
sbb
out
test
or
xchg
jle
jno
jle
adc
stos
xor
add
data16
or
mov
xchg
pop
xor
add
out
xlat
jecxz
add
add
ja
xchg
xor
orl
mov
cwtl
test
imul
and
xor
aam
jmp
test
outsb
mov
decb
add
push
loopne
add
shlb
ss
stos
push
fisubl
inc
add
push
or
jge
into
mov
add
mov
xor
nop
jns
aaa
movl
call
push
imul
je
orl
lods
aad
jb
cs
xor
xor
stos
xchg
and
pop
and
and
arpl
lock
pop
pop
flds
inc
add
mov
push
rcrb
adc
repnz
cmp
cmp
rcrl
out
std
push
add
xchg
jge
sbb
add
sub
pop
subl
xlat
addr16
xchg
cli
sub
fldl
call
call
xchg
insb
nop
roll
mov
mov
rolb
mov
mov
mov
mov
xchg
fdivrs
add
mov
int
aad
sbb
subl
sahf
shlb
sub
cli
lret
and
mov
movsb
into
xor
sbb
stc
outsb
es
mov
lock
cmp
add
xchg
adc
lock
pop
inc
jl
outsl
sub
ljmp
mov
mov
jbe
push
stos
push
stos
xchg
xor
or
std
enter
add
adc
xor
lret
jecxz
sbb
dec
sub
iret
jno
les
out
out
out
add
add
xor
addb
push
jp
mov
sbb
adc
xchg
addb
popf
jne,pt
add
xchg
mov
inc
in
inc
add
pop
jnp
gs
leave
loope
mov
orl
xor
push
mov
daa
mov
aam
notb
mov
add
push
sbb
xor
repz
and
xor
dec
mov
iret
push
and
shl
shl
or
out
ret
push
push
dec
addb
insl
pop
xor
in
jg
sub
in
sarl
sbb
inc
add
aaa
sbb
pop
jno
xchg
push
insl
aad
add
jle
sub
loop
xor
mov
jl
add
repz
sub
bswap
cmp
leave
dec
xor
add
xchg
nop
ds
loop
jg
add
ljmp
and
into
enter
mov
iret
jne
outsb
jns
dec
adc
rorl
mov
add
leave
flds
xor
aas
xchg
movsb
push
cld
iret
cld
nop
dec
rolb
jecxz
add
sub
ret
cmp
xor
and
scas
ds
cltd
pop
pop
loop
cmp
neg
adc
mov
scas
xchg
iret
ljmp
xchg
bound
mov
add
cmp
cmc
fwait
mov
mov
push
inc
add
pop
inc
add
insl
aas
pop
in
in
movb
adc
dec
dec
mov
fists
out
dec
sti
mov
iret
imul
jne
mov
fidivl
in
or
xchg
push
add
gs
add
xor
add
stc
fdivl
sti
inc
add
int
enter
add
cltd
xchg
movsl
push
repz
add
push
icebp
pop
fs
rcrl
sub
and
push
jl
in
mov
nop
mov
dec
mov
lods
sbb
add
aas
cmpsb
xchg
mov
adc
inc
add
mov
mov
data16
fadds
loop
cmc
sahf
in
aad
jp
sub
cmpsl
js
rolb
jmp
arpl
add
out
andl
lret
xlat
test
lock
add
test
in
jnp
shl
add
add
xor
push
push
sbb
jmp
xchg
call
lahf
mov
mov
into
psubsb
pusha
add
idivl
xor
mov
cmc
cmc
inc
add
fildl
jg
imul
shrl
dec
les
das
mov
call
push
pop
pop
and
cmp
sbb
inc
xor
add
or
ss
dec
std
lcall
xchg
rcrl
jbe
aas
shl
insl
arpl
mov
xor
push
inc
adc
pop
int
pop
out
dec
sbb
mov
call
xor
jo
cmp
add
in
cmpsl
popa
or
push
sbb
aam
jle
add
add
sub
cwtl
mov
xlat
jne
mov
popa
nop
outsl
pop
sub
sub
lods
movb
fdivrs
data16
xor
pop
aad
xchg
inc
add
mov
xor
cltd
js
dec
push
out
fs
cmpsl
data16
add
dec
pop
fwait
xor
aas
pushf
js
bound
pop
iret
cmp
add
flds
out
bound
outsb
scas
fwait
sarl
lret
mov
rol
shl
jo
test
lods
mov
cmc
push
mov
xchg
lea
mov
jmp
xlat
lcall
addb
sub
mov
popf
cmpsl
sbb
xor
jo
ss
xor
add
xchg
mov
mov
mov
add
or
mov
xor
in
xor
pop
jmp
fidivs
lea
in
add
inc
add
and
fcmovnu
adc
jb
pushf
enter
mov
gs
sub
ds
pop
mov
ret
scas
lret
ja
mov
out
xchg
std
mov
add
add
cmp
dec
bound
sahf
dec
adc
iret
cmpsl
jl
and
push
add
loop
bound
sarl
mull
adc
jnp
sub
addr16
fwait
outsl
xchg
inc
add
adc
andl
or
cmpsb
repz
addb
add
fcomip
sub
push
js
add
loopne
push
xor
add
lods
xor
or
jp
fmul
add
repnz
add
mov
cmp
add
jbe
testb
out
fdivl
add
add
jno
or
add
aad
ret
adc
out
mov
je
inc
cmpsb
pop
stc
push
add
inc
dec
pop
inc
insl
dec
mov
lret
mov
mov
aam
add
lret
push
xor
cmp
outsb
outsb
fstpl
in
and
xchg
repz
arpl
mov
int3
jb
test
sbb
movsl
pop
ret
test
jnp
aas
addr16
repnz
es
js
insl
pop
iret
repz
jno
lret
loope
dec
sub
lahf
cmpsl
test
sti
iret
sbbl
xchg
icebp
repz
mov
sub
cltd
mov
adc
out
stc
add
jmp
mov
cmp
xor
test
outsl
push
inc
pop
or
cltd
std
lret
jnp
push
repz
bts
sti
add
in
cmp
pop
out
out
cld
insb
mov
stc
in
xor
mov
add
xchg
mov
out
mov
bound
push
cmp
or
jne
out
mov
and
adc
and
fidivrl
sub
mov
imul
dec
and
add
add
pop
std
mov
int3
andl
and
xchg
jno
insb
cmp
cmpsb
sahf
pop
jb
out
push
or
adc
aaa
test
test
das
pusha
add
mov
mov
cmp
sub
mov
xchg
xchg
fistps
ss
dec
push
push
inc
add
movsl
es
mov
sub
add
sbb
adc
repz
or
lock
and
bound
mov
fstpl
cmp
push
mov
mov
and
xor
inc
outsl
adc
adc
add
call
add
sbb
inc
add
mull
add
push
or
inc
add
test
ja
mov
inc
ds
dec
fdiv
fcomi
mov
nop
into
lods
ja
or
xchg
push
aaa
jb
test
aam
cmpsb
push
leave
inc
jnp
xor
fs
add
sub
mov
not
xchg
addb
add
push
pop
mov
enter
xchg
xchg
jmp
ss
jecxz
addb
pop
jb
sbb
add
pop
pop
push
jnp
mov
jp
repz
or
cmp
cwtl
push
jle
xchg
in
and
xchg
and
push
jl
sbb
xor
add
add
addb
test
and
in
push
mov
hlt
inc
add
idivw
inc
adc
push
add
sti
fnsave
mov
mov
sbb
jno
jecxz,pn
popa
addb
in
and
adc
mov
dec
jnp
lds
mov
imul
cltd
xor
adc
pop
cmc
aam
mov
ljmp
and
pop
fstps
imul
xorl
lahf
sub
iret
sahf
gs
pop
rolb
pop
stos
iret
addr16
sub
add
sbb
insb
mov
imul
incl
in
add
dec
pop
jg
sbb
push
jmp
inc
add
mov
out
test
lahf
xor
jbe
add
sub
jmp
and
jg
ficomps
mov
xchg
cmp
hlt
fnstcw
jmp
sahf
insl
jne
shll
and
adc
loope
mov
lcall
mov
add
cltd
xlat
mov
mov
daa
xor
cmc
inc
xchg
repz
mov
fs
adc
pop
jmp
out
push
add
or
pop
nopl
cltd
pop
xchg
sub
lock
cs
jg
push
aad
insl
mov
adc
add
xor
pop
inc
add
adc
push
iret
lcall
jmp
adc
add
in
inc
add
enter
add
xchg
fsubrl
add
push
pop
and
out
sahf
cmp
pop
dec
insl
jl
add
icebp
xor
or
sti
decb
cmp
jae
enter
mov
cld
pushf
lret
dec
int
add
sbb
test
loope
jo
ljmp
fidivrs
lods
push
addb
cmpsb
mov
rolb
rcl
scas
fs
push
clc
xchg
arpl
fsubp
hlt
lea
ljmp
cmp
movb
into
mov
pop
push
and
inc
add
out
jae
pusha
add
mov
and
test
and
hlt
mov
mov
pop
inc
cwtl
sarl
adc
ret
in
gs
jp
outsl
lahf
divl
pusha
add
add
sahf
sbb
inc
add
mov
flds
mov
adc
adc
movsl
mov
jle
test
imul
adc
daa
adc
dec
ds
xchg
mov
and
add
ret
mov
pop
cmp
xchg
addb
dec
jmp
lock
and
cmp
aad
test
add
sar
dec
adc
jmp
push
cmpsb
stos
adc
add
add
enter
repnz
push
and
aas
mov
mov
add
in
out
les
mov
incl
add
pop
xchg
fisubrs
jnp
movsb
pop
cmpsl
or
xchg
hlt
push
add
js
jmp
jmp
mov
dec
add
nop
sub
add
pop
xchg
jns
xchg
sbb
mov
mov
add
loop
mov
aas
lcall
jbe
rolb
mov
pop
fdivrl
mov
add
add
or
pop
push
jecxz
fldl
sbb
in
xor
ficomps
popa
cli
in
dec
inc
mov
shl
push
push
pop
test
xor
jo
xor
outsb
or
testl
out
xchg
outsb
bound
imul
ds
push
xor
sbb
xor
push
fcoml
dec
scas
push
and
and
add
out
add
push
mov
add
xchg
fdivl
ret
or
adc
mov
push
adc
ret
mov
cmp
clc
iret
dec
dec
sarl
into
lret
jae
bound
aaa
sbb
add
sbb
and
gs
inc
add
aas
movsl
lret
inc
mov
cmc
cmp
pop
mov
push
mov
movsl
jo
mov
adc
test
push
movsb
xchg
xchg
inc
add
js
mov
rolb
fiadds
stos
jns
push
xchg
test
and
cmp
pop
mov
add
stos
fiadds
in
and
add
cmp
lcall
je
add
cltd
or
add
jns
add
xchg
adc
pop
adc
add
daa
outsb
adc
adc
push
inc
add
sub
movb
bound
xchg
xchg
jp
xchg
js
clc
les
imul
adc
mov
push
icebp
cs
adc
mov
incb
dec
aam
xchg
jns
cmp
mov
inc
add
pop
adc
insb
jmp
enter
adc
inc
adc
out
push
add
hlt
icebp
aaa
repz
and
mov
dec
fs
jne
add
or
xor
sahf
sbb
mov
jecxz
sahf
data16
fistpl
push
or
les
shll
pusha
add
sbb
push
in
mov
repz
data16
pop
mov
add
mov
dec
xor
xlat
sub
test
jno
pop
and
sbb
call
add
fsubl
and
pushf
loopne
add
outsb
mov
in
or
mov
add
adc
ret
cmp
in
lods
gs
lods
mov
out
jl
fidivrl
mov
mov
loopne
push
aas
flds
jp
jne
xor
loop
push
sub
add
xor
fadds
add
enter
jecxz
mov
push
icebp
cmp
inc
add
aam
hlt
adc
ds
push
add
cmp
push
icebp
dec
cmpsb
je
shlb
dec
or
sbb
popf
insb
in
mov
mov
stc
or
add
in
adc
add
mov
clc
test
scas
mov
add
sbb
push
mov
add
sti
mov
add
rcll
ror
add
or
scas
in
orl
push
pop
ss
test
nop
fisubrs
lret
sbb
xor
jns
inc
add
jp,pt
xchg
add
fadds
add
mov
push
xchg
rolb
add
icebp
or
fwait
cmp
add
shrl
jp
iret
fdivs
int3
add
divb
xchg
mov
jge
addr16
daa
outsl
cmp
pop
or
enter
jne
cltd
mov
push
orl
push
icebp
repnz
push
lock
or
and
addb
dec
in
push
add
push
fildll
rorl
pusha
add
jb
push
add
icebp
jnp
adc
lods
adc
jp
addb
add
add
adc
xor
sbb
add
lahf
jbe
call
add
and
mov
ret
mov
add
cmpsl
pop
inc
aas
pop
pop
xchg
mov
pop
jge
fsubrs
xchg
pop
nop
and
pop
xchg
pop
cwtl
cs
push
inc
add
inc
add
insl
lods
adc
test
lahf
test
mov
loope
shl
test
add
inc
add
add
xor
js
dec
ret
lea
add
mov
hlt
dec
lock
popa
hlt
ret
rorb
mov
divb
pop
and
rorl
adc
sbb
dec
stos
mov
add
test
lds
jo
add
xor
orl
and
jno
mov
inc
lret
pushl
das
rcr
insl
jmp
lock
pop
cmpsb
cwtl
jmp
movb
add
xchg
dec
out
sbb
adc
inc
add
xor
jnp
mov
xchg
jecxz
and
int3
clc
pop
dec
imul
lahf
adc
mov
mov
out
push
das
repnz
fs
mov
push
dec
data16
jle
push
adc
aam
push
or
cli
xor
xor
mov
lea
arpl
jne
in
out
xchg
pop
and
fdivs
test
push
fs
fnstenv
lods
out
fadd
add
push
dec
sbb
bound
into
jle
xlat
pop
rcl
loope
stos
test
pop
rolb
cmp
aas
test
xor
mov
fnsave
stos
push
push
inc
add
xchg
call
pop
orl
pop
mov
aas
cltd
add
mov
mov
xchg
and
and
stos
push
call
add
rorb
xor
add
cs
or
ret
lds
lock
mov
fldt
cli
mov
adc
sbb
pusha
add
xor
inc
add
ret
das
mov
add
sbb
add
sbb
repnz
fst
xchg
pushl
xchg
das
mov
fiaddl
cmp
cli
cmpsb
lea
add
addb
aad
jp
out
stos
cmp
in
sub
inc
add
lret
aas
jae
xor
add
or
jg
fmul
mov
mov
push
inc
ds
int3
push
dec
lods
xchg
jb
add
jp
adc
pop
pop
mov
call
or
outsl
jg
les
or
out
pop
xor
mov
or
ja
add
cmp
adc
add
das
pop
or
cmp
cmp
out
mov
inc
jnp
xor
ret
cmp
push
sbb
xchg
leave
ljmp
insl
dec
mov
sub
loope
adc
arpl
into
cmp
jb
mov
cmpsl
daa
outsl
dec
push
cmpsb
cmp
xchg
outsl
int
nop
jmp
in
mov
aaa
pop
push
imul
add
adc
jae
ljmp
xor
or
add
sbb
pop
enter
pop
sub
jbe
movsl
push
or
add
mov
push
outsl
std
xchg
outsb
mov
mov
mov
aam
cld
mov
dec
in
jecxz
shll
xchg
arpl
sub
sbb
xlat
test
imul
fnstsw
imul
sub
fwait
or
xor
mov
add
pop
lahf
mov
int
ret
jno
mull
and
iret
js
pop
jmp
xchg
jo
int
cltd
sbb
fsubp
cmpsb
movsb
push
push
adc
add
add
xor
imul
add
pop
mov
xor
rcrl
add
sbb
jmp
mov
test
addr16
in
cmp
clc
xor
hlt
mov
jnp
jo
std
int
mov
and
or
addr16
clc
aad
cwtl
arpl
xor
sub
mov
xlat
inc
xor
dec
cltd
dec
hlt
movl
jne
ret
add
mov
popl
mov
mov
mov
mov
stos
jecxz
dec
mov
add
cmp
fsts
setb
sbb
out
sbb
and
mov
pop
into
cmc
mov
add
loop
gs
xchg
add
mov
lods
xchg
pushl
sbb
pop
adc
out
dec
out
sub
fcomps
icebp
or
or
call
fstpt
in
inc
dec
xchg
push
jmp
addb
and
int3
in
cltd
inc
bound
repnz
in
or
mov
iret
arpl
cltd
add
daa
pusha
add
int3
or
les
and
sub
lret
gs
cmp
lret
xchg
ljmp
push
aas
sbb
lret
fs
cltd
rolb
shlw
mov
testl
stos
mov
add
lahf
js
je
ss
fbstp
inc
add
ja
mov
fstpt
jmp
push
out
add
divl
test
ja
je
pop
mov
std
pop
sbb
in
mov
mov
xlat
idivb
add
repz
add
mov
stc
cld
adc
scas
xchg
popa
sub
adc
ljmp
dec
test
adc
das
mov
add
ret
cltd
push
pop
and
pop
pop
xor
xor
xchg
das
in
mov
or
loop
add
xchg
cmc
cmp
and
addb
std
mov
je
mov
cmp
mov
scas
test
push
lret
xchg
add
popw
std
dec
idivl
pop
int3
jmp
adcl
pop
mov
xor
or
pop
arpl
cmc
and
popa
fwait
cltd
or
xchg
shll
adc
push
pop
inc
add
out
das
push
adc
cmp
inc
add
adc
jmp
dec
push
pop
addb
mov
dec
mov
add
or
scas
rorb
lret
in
xchg
mull
mov
or
mov
xchg
mov
das
cmovs
pop
pop
jbe
repz
hlt
inc
shll
aam
lret
mov
pop
loopne
add
mov
shll
add
push
add
out
xor
dec
loopne
mov
rcrl
mov
xchg
sti
loop
cli
clc
cmp
and
iret
and
repnz
mov
xchg
mov
cmp
jl
ljmp
and
or
add
inc
xor
sbb
aaa
inc
mov
add
ja
pop
adc
iret
xor
mov
add
jp
cmc
dec
or
out
and
add
xchg
mov
mov
iret
jge
mov
int3
and
pop
lock
leave
pop
jge
mov
jl
es
dec
imul
xor
jno
popa
fidivl
aas
mov
inc
call
lods
pop
movb
lods
push
inc
mov
int
add
dec
and
pushf
das
sti
push
sub
push
movsb
or
jg
das
lods
fistl
test
add
icebp
shl
pop
xor
jg
add
popf
mov
out
adc
pop
add
stc
in
test
xor
and
mov
cmpsl
pop
pop
sarb
pop
cmp
icebp
mov
jo
mov
shrb
addr16
cmp
int3
scas
cmpsb
jl
mov
sti
cmp
dec
sub
cld
mov
in
gs
dec
sub
xchg
dec
push
sti
pushf
inc
pushf
loope
ja
jp
daa
pop
jno
dec
adc
aam
add
mov
mov
lret
les
sahf
in
mov
add
sub
cmp
inc
add
in
es
push
and
add
mov
test
mov
adc
push
rolb
xchg
addb
loope
sbb
cli
out
mov
leave
jl
loop
mov
adcl
push
test
cmp
je
sahf
cld
cmp
sub
aam
stos
cmp
xor
popf
pop
dec
jno
cs
cli
dec
xor
jne
mov
scas
fstps
add
or
pop
sahf
test
pop
and
mov
pop
addb
add
add
dec
test
mov
jns
mov
push
mov
xor
xlat
in
cmpsl
cmp
add
sbb
mov
jmp
push
add
mov
inc
inc
pop
xor
pop
mov
fnstsw
and
dec
iret
pop
push
cmpsl
xchg
xchg
cli
out
sub
pop
cmc
imul
add
imul
xchg
push
or
adc
iret
pushf
push
fmul
xor
or
leave
adc
mov
sub
inc
cld
pop
popf
jns
add
xor
pop
ds
mov
mov
leave
xchg
lcall
push
add
add
cmp
xchg
mov
pop
je
or
and
fistpl
es
or
xor
and
mov
inc
lods
jbe
sub
aaa
lds
ficompl
inc
add
or
cltd
std
aas
mov
pushf
cmpsb
pop
sti
std
nop
fcoml
add
jecxz
cltd
push
mov
popa
roll
add
repz
std
inc
mov
cmpsb
mov
jecxz
mov
sti
inc
jp
lods
dec
cmpsl
add
loopne
mov
mov
test
add
add
les
jno
mov
add
jecxz
lock
test
mov
add
inc
add
out
xor
jns
or
xchg
xor
lds
jle
pop
inc
add
add
lods
dec
xor
or
movb
rolb
movsl
cmp
jp
add
addb
bound
stos
dec
ret
sahf
fidivrs
mov
ss
push
mov
rcrb
dec
scas
and
aas
xor
sbb
insb
adc
mov
pushf
jo
cld
cmpsl
inc
test
xor
loopne
push
test
lahf
test
sbb
stc
inc
add
jno
mov
arpl
add
mov
and
dec
pop
xlat
addb
push
cmp
pop
xchg
push
js
adc
sbb
and
test
jmp
xor
addb
cmp
and
mov
out
fsubrl
push
mov
or
and
ja
cmovge
cmpsl
test
ss
or
cmc
mov
mov
mov
in
inc
xchg
lcall
sarl
xor
xor
and
cvtps2pi
xor
mov
bound
lods
popf
pop
test
dec
outsb
pop
popf
scas
jnp
js
jmp
add
or
mov
mov
mov
jmp
jne
add
mov
or
lahf
mov
xor
xor
push
jl
adc
xlat
jl
pop
movsb
pop
pop
into
out
stos
js
out
pcmpeqw
mov
lahf
inc
pop
lea
inc
pop
fcoml
xor
out
or
sbb
xchg
push
mov
iret
jnp
imul
je
inc
sbb
gs
adc
add
enter
aam
bound
call
sub
stos
fldcw
rcll
or
add
out
xchg
lods
imul
loop
push
inc
call
sbb
popa
sbb
mov
rorl
cli
push
add
cld
popa
lea
aaa
nop
mov
testb
mov
test
cs
cmp
add
int
cltd
stc
and
dec
fists
or
pusha
add
dec
dec
fldl
xchg
add
dec
push
push
xchg
add
sbb
inc
pushl
scas
jmp
out
jge
xchg
leave
jp
jnp
add
ljmp
sub
mov
push
pop
lret
ret
jmp
xchg
push
inc
sub
add
or
pop
and
iret
test
lret
lea
add
mov
dec
outsl
call
testb
sub
lahf
movb
lods
inc
add
jecxz
pushf
in
sbb
insl
pop
add
cld
mov
outsb
movsb
outsl
mov
aad
xor
lcall
leave
aam
mov
push
in
mov
jo
push
mov
add
ja
rcr
cwtl
sbb
cmp
dec
push
push
data16
jge
popf
lock
xchg
popl
sbb
pop
adc
fdivrs
or
xchg
mov
jp
mov
push
fwait
dec
lods
inc
add
xchg
xchg
scas
jp
mov
stc
xor
push
jecxz
lods
cli
iret
sub
das
lds
arpl
jmp
inc
pushl
or
stos
and
or
push
jnp
cli
mov
fsubs
daa
fsubs
add
mov
mov
fwait
std
ds
pop
mov
outsl
sub
pop
pop
adc
push
push
push
add
movsl
ret
add
pop
mov
cmp
add
inc
aas
fstpl
dec
in
mov
sub
bound
inc
add
xchg
mov
add
aam
inc
add
mov
add
fdivr
push
pushf
fildl
add
neg
mov
add
jp
mov
add
mov
xor
add
jbe
outsb
cltd
adc
ljmp
dec
cli
adc
mov
inc
add
int
lret
in
addr16
xchg
xchg
in
lret
clc
pop
insb
dec
cmp
mov
jb
push
iret
mul
mov
mov
lret
imul
xor
adc
loope
lock
nop
pusha
add
jl
loopne
ret
pop
xor
jb
add
cmp
push
push
movb
ret
imul
mov
daa
or
pop
sarl
add
dec
ja
or
add
cmc
stc
cmp
jne
cltd
pusha
add
scas
xchg
mov
insl
pop
and
mov
cmp
mov
fld
add
rolb
cwtl
and
hlt
call
sbb
cmpsb
out
lds
test
and
in
jnp
cmp
ljmp
jne
inc
lret
or
enter
add
push
jl
sub
add
cmp
or
scas
add
shll
add
je
add
add
mov
hlt
stos
pop
test
sub
add
inc
pop
or
addr16
xchg
addb
or
add
add
jge
push
dec
shrb
sub
or
add
add
mov
dec
mov
fstps
lods
jmp
popa
sbb
add
jg,pn
mov
call
lea
sbb
cltd
ud1
pop
cmpsl
jp
mov
sbb
push
mov
add
mov
add
call
xchg
add
xor
cld
and
mov
std
inc
add
mov
ja
test
ja
ss
lcall
cmpsl
xor
add
jae
or
pop
sbb
add
push
je
and
std
jg
std
and
outsb
ret
loopne
scas
aaa
fs
aam
and
push
adc
bnd
outsl
rorl
jmp
insl
add
pop
push
add
push
cmp
push
jns
xor
lods
mov
scas
loop
sahf
in
aad
cmp
aad
sub
into
and
out
fisttps
jecxz
sbb
clc
ret
fisubrl
dec
arpl
ljmp
sub
or
pop
mov
aaa
cli
rep
mov
jb
sahf
dec
pop
cltd
loope
xchg
lods
xchg
pushf
mov
es
shrl
dec
movzbl
cmpsl
cmp
out
mov
and
sbb
dec
je
mov
inc
cmpsb
cmp
add
add
mov
jns
mov
or
add
inc
add
loope
mov
out
in
mov
std
test
or
mov
jle
add
add
mov
add
pusha
add
add
or
cld
push
aas
cli
xchg
jb
pop
dec
pop
mov
das
cmp
mov
test
pop
mov
adc
sbb
ss
and
inc
nop
xchg
rclb
push
push
ret
adc
add
mov
aam
mov
jbe
pushf
fcompl
mov
mov
in
pop
mov
sbb
sub
rolb
jbe
adc
enter
xor
lock
imul
in
les
push
add
adc
sti
cs
mov
sti
sbb
xchg
loope
mov
out
lcall
pop
je
lds
xchg
movsb
sahf
xchg
lods
rolb
push
add
shlb
push
lahf
enter
adc
or
repnz
mov
and
cmp
ljmp
adc
ss
dec
pop
arpl
pop
int3
rolb
sub
sub
cmp
shlb
add
test
jmp
bound
int
call
push
sarl
clc
fcoms
push
out
and
mov
js
addb
add
mov
pop
cmp
push
lods
pop
lcall
mov
mov
inc
pop
push
test
or
mov
dec
sub
es
push
mov
fcmovnb
outsl
inc
add
in
js
int
mov
sbb
xchg
jle
or
push
jmp
test
negb
stos
push
push
jne
xchg
or
dec
lds
dec
dec
push
bound
pop
stos
push
cwtl
jae
xchg
out
repz
sbb
jnp
adc
popa
mov
fistpll
dec
or
add
lahf
ds
add
loope
mov
loopne
and
cmp
cmp
add
mov
sti
arpl
mov
pop
ficoml
xchg
push
aam
pushf
xchg
cmp
adc
movsl
push
and
jge
xchg
jne
jmp
mov
or
dec
or
mov
cwtl
addb
add
cli
dec
and
cmp
add
xchg
add
icebp
push
hlt
call
or
add
jp
dec
sbb
scas
repz
sbb
jle
sbbl
cmp
cmp
add
sub
lock
lea
enter
mov
jmp
mov
and
push
jg
lret
cmp
add
sub
push
add
mov
imul
fldenv
xchg
scas
leave
or
call
ret
fadds
insl
enter
dec
mov
mov
xchg
ret
add
jg
push
adc
int
mov
add
test
sub
lret
in
jle
aaa
out
addb
dec
das
add
arpl
push
aas
cmp
cli
push
pop
testb
mov
scas
adc
mov
bound
cmc
enter
push
divl
add
clc
test
sbbl
inc
add
movsb
or
outsl
int
mov
mov
aaa
cmp
addb
mov
mov
iret
out
jmp
clc
loope
xor
lcall
imul
push
fs
jnp
mov
out
sti
sub
std
movsl
out
addb
sbb
or
push
fidivrl
inc
add
notb
add
mov
xchg
int
cwtl
and
notb
jne
inc
ficomps
ja
push
imul
xlat
arpl
push
lcall
xchg
or
sbb
jecxz
hlt
push
ds
out
add
jbe
out
cmpsb
fs
or
xor
ljmp
xor
cwtl
les
imul
xchg
pop
add
add
mov
dec
jecxz
sahf
pusha
add
pusha
add
or
xchg
add
xchg
push
push
fcomp
xchg
je
mov
xor
jg
dec
inc
sub
fisttpl
jns
fistpl
data16
mov
cli
xchg
and
cli
mov
enter
sbb
sbb
add
jl
and
xor
nop
aad
gs
pop
roll
mov
or
mov
sub
dec
xor
push
jle
sub
inc
lods
xchg
outsl
fwait
cmpsl
lret
add
push
pop
cwtl
movsb
mov
repnz
mov
arpl
iret
daa
dec
cmpsl
mov
inc
pusha
add
push
addb
add
xchg
ljmp
fsts
inc
add
cmp
movsb
xor
xor
jl
pop
jl
jmp
inc
jle
jp
add
bound
icebp
outsl
test
icebp
sub
add
stos
scas
rorb
mov
aad
xchg
push
dec
dec
jg
ljmp
nop
iret
decb
js
cltd
or
gs
gs
or
mov
cmp
outsl
out
or
xchg
sahf
xor
popa
test
sbb
cmp
les
mov
loop,pn
movb
std
mov
shl
mov
ds
mov
xor
mov
fucomp
dec
out
add
addr16
js
jne
stc
add
mov
push
loop
add
pop
inc
add
add
pop
sbb
xchg
js
sub
test
xor
add
cwtl
mov
outsl
dec
push
dec
test
add
aam
cmp
sahf
xor
mov
rolb
mov
in
stos
and
out
movsl
popf
aam
int3
jecxz
add
sbb
add
mov
mov
outsl
adc
outsl
roll
or
add
cmp
cli
pushf
inc
add
imul
pop
iret
pushf
and
pop
shr
int
inc
add
sbb
test
dec
test
out
mov
add
int
nop
sub
push
pushf
push
mov
loopne
and
xor
or
xor
add
or
out
jo
stos
ds
fildll
push
ret
es
arpl
aaa
pop
lret
rcl
mov
add
add
push
sbb
and
fisttpl
test
roll
mov
add
adc
out
mov
sbb
mov
mov
sub
sub
cld
out
add
cmp
mov
push
add
mov
inc
add
les
adc
mov
mov
add
loop
add
scas
lods
xchg
sahf
mov
rcrl
movb
add
jp
or
mov
imul
outsb
dec
push
call
adc
mov
jnp
mov
pop
or
sbb
add
ss
xchg
dec
sub
addb
mov
mov
shrb
fstpl
fcompl
rcl
je
sub
add
cmpsb
xchg
imul
test
xor
ja
ret
pop
testb
add
adc
sub
popf
rolb
cli
pop
and
add
xor
jp
pop
and
mov
jbe
lcall
out
sbb
add
push
push
add
ja
cmpsl
shll
add
add
add
call
jnp
and
les
mulb
cmc
xchg
push
add
xchg
das
push
mov
add
add
dec
fwait
pop
cltd
sbb
cs
jg
lods
jp
mov
pop
xchg
cmpsl
and
or
add
movb
dec
aas
cmp
push
add
add
jbe
pop
imul
mov
add
xor
sbb
jo
in
mov
cmp
daa
je
pop
sbb
fnsave
add
mov
push
inc
add
add
mov
add
test
add
mov
addb
adc
dec
lods
cmp
jo
xlat
test
jo
xor
jns
push
or
xchg
data16
arpl
add
add
xchg
sbb
inc
bound
jge
lods
jp
imul
mov
lcall
test
lods
hlt
or
push
lds
cltd
mov
in
sub
mov
jg
add
add
mov
sub
icebp
aaa
addb
ja
mov
inc
mov
aad
lods
in
aaa
inc
add
in
pop
adc
scas
push
mov
sub
mov
or
inc
pop
dec
lahf
js
mov
rolb
addr16
add
inc
add
dec
ja
or
stos
dec
loope
add
push
add
stos
loop
sbb
xor
pop
lods
int3
xchg
push
out
sbb
mov
mov
popl
lock
addr16
cmpsb
loop
mov
mov
out
cmp
sub
add
mov
inc
mov
or
xor
vfrczpd
or
ret
pop
or
jmp
push
and
dec
add
or
lret
mov
add
xor
in
push
inc
cmp
mov
and
lahf
addb
std
xor
lock
fstpt
lahf
out
push
insl
jmp
or
fiaddl
pop
lahf
xor
dec
int
add
enter
mov
repnz
xor
mov
add
mov
mov
arpl
sahf
mov
mov
add
and
mov
jns
hlt
jmp
xchg
pop
adc
lods
sbb
inc
lret
adc
nop
mov
add
add
cmp
jne
imul
inc
subl
fisttps
fidivrs
gs
cmpsl
xor
test
sub
ja
jne
mov
jg
xchg
add
adc
lds
push
pop
lea
cwtl
arpl
pop
inc
add
test
jbe
movsl
andl
pop
mov
adc
jno
inc
add
fisubrs
es
xchg
xchg
arpl
inc
sahf
mov
mov
jb
mov
sub
dec
icebp
inc
add
xchg
icebp
popl
jns
xor
shll
adc
xor
sahf
jb
out
sbbl
fldl
addb
mov
mov
rolb
int3
push
subl
or
adcl
xchg
push
mov
ret
cmp
inc
add
insb
rolb
push
cwtl
mov
add
add
xlat
lahf
insl
dec
or
add
inc
add
add
add
and
push
add
iret
shr
stc
jb
add
mov
cmp
repz
add
mov
mov
mov
xchg
ret
add
add
push
push
mov
xchg
ret
mov
push
dec
push
mov
xchg
ret
add
aad
add
popa
stc
jb
and
add
nop
cmc
lods
jne
stc
jb
add
dec
push
stc
jb
add
cmp
movsb
mov
adc
push
mov
add
mov
add
add
cmp
iret
or
adc
add
add
nop
jmp
add
fstp
repz
xchg
xor
push
push
mov
xchg
ret
add
popf
movsl
jle
cmpl
add
ljmp
outsl
push
add
stc
jb
add
or
fmull
test
jb
neg
xor
push
mov
xchg
ret
popf
mov
mov
stc
jb
xor
mov
or
add
xor
fcmovnu
ret
inc
and
and
nop
jmp
popf
add
xor
cmp
loop
add
xor
jnp
iret
and
add
add
fnsave
dec
addr16
sub
nop
jmp
test
fistpl
add
mov
stc
jb
add
pushf
sbb
push
and
add
add
xor
xor
or
add
mov
subl
push
mov
xchg
ret
push
sbb
les
nop
jmp
insl
sbb
mov
sbb
add
xchg
add
mov
dec
push
mov
xchg
ret
jl
mov
or
jb
or
pushf
add
lea
stc
jb
add
xchg
lods
and
imul
add
ret
and
push
mov
xchg
ret
push
add
nop
jmp
adc
add
icebp
push
push
enter
mov
add
aaa
add
in
add
mov
xchg
ret
add
ljmp
add
add
add
adc
loopne
add
subl
push
mov
xchg
ret
mov
addb
add
jb
push
add
mov
adcb
xor
add
add
int
rclb
ljmp
add
mov
add
add
add
add
cli
mov
stc
jb
sti
add
and
stc
jb
xchg
and
add
and
bnd
add
jb
and
mov
jp
test
jb
add
pop
movsb
fnstsw
dec
inc
stc
jb
cmp
fwait
xor
stc
jb
fistpl
push
push
mov
xchg
ret
xor
add
stc
jb
ret
in
adc
aaa
cmp
jb
mov
add
ret
add
out
inc
add
or
addb
add
nop
jmp
sahf
fstpt
ljmp
xlat
inc
add
add
sbb
stc
jb
leave
add
pushf
repz
push
pop
das
jmp
stc
jb
add
push
ljmp
add
add
insl
xchg
mov
stc
jb
add
xor
xchg
inc
add
xor
stc
jb
dec
mov
add
cltd
xor
push
mov
xchg
ret
or
pop
stc
jb
add
sahf
icebp
pop
add
mov
stc
jb
add
add
nop
jmp
mov
movsl
add
outsl
mov
stc
jb
test
add
stc
jb
add
adc
inc
add
add
add
jb
loopne
mov
dec
push
mov
xchg
ret
mov
mov
push
stc
jb
xor
in
add
sbb
jmp
sbb
loopne
adc
movb
add
lret
add
jmp
xchg
popf
cmp
xchg
add
stc
jb
fcmovnbe
pushf
or
pop
ss
in
sbb
and
stc
jb
fs
cli
je
stc
jb
repz
sbbb
add
fucom
add
loop
add
add
add
pusha
stc
jb
add
and
leave
fucomp
add
add
stc
jb
loopne
add
dec
cmp
jmp
add
add
mov
push
mov
xchg
ret
add
leave
xor
and
xchg
incl
xchg
ret
dec
add
jne
test
push
mov
xchg
ret
mov
mov
stc
jb
xor
add
mov
stc
jb
add
adc
mov
stc
jb
lcall
lods
jl
nop
jmp
add
idivb
push
mov
xchg
ret
add
iret
and
nop
jmp
add
push
add
mov
push
stc
jb
fisttpl
mov
sbb
add
add
mov
in
xor
push
mov
xchg
ret
mov
jg
add
jl
jle
push
mov
xchg
ret
add
jb
cs
add
push
add
pusha
push
mov
xchg
ret
add
mov
stc
jb
add
fildl
add
adc
jmp
add
add
insl
jl
cwtl
mov
stc
jb
test
push
add
add
movb
jb
aaa
in
sti
add
pop
cmp
mov
xchg
ret
add
push
mov
xchg
ret
add
mov
stc
jb
fnstsw
add
rcll
dec
ret
stc
jb
sbb
sbb
cmp
nop
jmp
add
mov
push
mov
xchg
ret
add
int
in
mov
stc
jb
dec
dec
mov
add
movswl
stc
jb
add
add
mov
mov
xchg
ret
add
cs
add
inc
adc
jmp
insl
add
inc
les
test
mov
push
mov
xchg
ret
add
add
stc
jb
pop
add
cs
jl
imul
nop
jmp
add
testb
and
test
jmp
add
add
flds
sbb
inc
add
add
and
js
jb
test
add
push
in
mov
stc
jb
add
add
fcomi
cmc
js
nop
jmp
leave
add
fnsave
arpl
add
stc
jb
loopne
add
je
stc
jb
xor
xchg
mov
rep
nop
jmp
add
in
add
xor
je
stc
jb
pushf
add
in
cmpw
stc
jb
add
add
and
mov
pop
loopne
push
addr16
mov
fimuls
or
jg
mov
stos
sti
sbb
fiaddl
xchg
ret
add
add
cmp
add
dec
stos
mov
ret
mov
jb
add
add
movsl
movsl
sub
mov
xchg
ret
add
add
dec
mov
stc
jb
add
or
push
subl
stc
jb
in
in
add
cmpsb
cmp
xor
inc
add
mov
sub
mov
xchg
ret
add
add
cmpsb
call
mov
xchg
ret
test
mov
pop
jmp
stc
jb
fildl
mov
or
dec
sub
add
add
add
add
ja
or
sar
xorb
add
in
idivb
stc
jb
mov
mov
mov
xchg
ret
pushf
mov
repz
xchg
filds
jne
stc
jb
mov
add
add
stc
jb
add
add
add
push
push
mov
xchg
ret
pushf
mov
add
push
nop
jmp
stos
xor
mov
popf
popf
add
sub
add
add
mov
stc
jb
mov
ret
stc
jb
fcmovne
add
testb
mov
nop
jmp
cs
icebp
add
jb
add
mov
add
sbb
sub
call
add
movsl
mov
outsl
popa
fs
jb
push
add
addb
call
in
pop
add
dec
call
nop
jmp
add
add
sbb
push
mov
xchg
ret
mov
ret
push
push
mov
cwtl
lret
add
mov
add
jge
xor
ret
stc
jb
add
add
pop
pop
stc
jb
test
add
sti
add
lcall
jb
add
shl
test
xchg
mov
test
cld
stc
jb
add
jmp
xor
add
stc
jb
add
and
sbb
stc
jb
add
add
add
jo
call
stc
jb
mov
add
addb
add
nop
jmp
dec
add
push
leave
nop
jmp
aad
add
add
ljmp
leave
sub
jb
add
lea
stc
jb
add
pushf
pop
jl
dec
je
nop
jmp
mov
mov
stc
jb
ret
add
add
mov
xor
stc
jb
add
mov
add
jb
add
add
cli
pop
stc
jb
add
add
add
movsl
push
jnp
push
mov
xchg
ret
ret
add
pop
mov
stc
jb
push
add
add
push
mov
xchg
ret
xor
push
mov
xchg
ret
add
add
ss
xchg
stos
and
push
mov
xchg
ret
add
mov
nop
jmp
add
add
mov
add
stc
jb
add
xchg
add
adc
jmp
stc
jb
mov
mov
nop
jmp
add
mov
orb
insl
add
add
icebp
gs
push
stc
jb
push
add
dec
lea
stc
jb
add
insl
test
add
inc
in
push
mov
xchg
ret
add
mov
mov
sbb
repz
jb
xor
sbb
xorb
add
insl
add
add
push
push
mov
xchg
ret
add
xor
inc
add
push
stc
jb
int
jg
add
mov
add
daa
mov
xor
nop
jmp
repz
mov
add
pop
add
or
stc
jb
add
out
cltd
mov
stc
jb
add
xor
push
push
mov
xchg
ret
sahf
add
add
es
push
mov
xchg
ret
add
xchg
out
sub
push
mov
xchg
ret
push
mov
ret
dec
add
jb
add
pop
movsl
sti
jmp
nop
jmp
leave
mov
add
icebp
adc
test
imul
stc
jb
dec
add
and
sub
push
mov
xchg
ret
xor
add
jns
ja
aas
and
push
mov
xchg
ret
mov
add
xor
stc
jb
aaa
add
add
adc
rolb
xchg
ds
stc
jb
add
pushf
add
add
test
in
mov
nop
jmp
and
dec
add
outsl
inc
stc
jb
ljmp
insl
mov
nop
jmp
add
fisubrl
nop
jmp
add
add
jae
adc
fldl
repz
jb
add
add
add
pop
add
stc
jb
add
add
pop
stc
jb
repz
add
sub
stc
jb
add
add
icebp
add
loop
mov
stc
jb
jg
add
add
scas
xor
nop
jmp
add
or
sbb
jnp
inc
add
mov
in
add
int
or
mov
push
out
test
pop
adc
in
mov
nop
jmp
xor
int
sti
mov
stc
jb
jg
add
mov
lret
movzwl
stc
jb
and
xchg
stc
jb
pushf
jns
add
add
je
div
stc
jb
sti
add
jns
add
rclb
testb
sub
ret
dec
push
adc
mov
jmp
loopne
in
mov
dec
jmp
nop
jmp
add
add
leave
rcrl
mov
stc
jb
add
cmp
add
xchg
ret
xchg
add
aas
stc
jb
add
aad
add
mov
mov
xchg
ret
mov
push
imul
push
sldt
pushf
mov
mov
adc
jb
pushf
add
dec
add
mov
xchg
ret
ljmp
add
mov
xchg
ret
mov
stc
jb
fs
or
xor
inc
add
mov
addb
add
ljmp
mov
stc
jb
mov
add
add
add
pop
add
add
adc
jb
loopne
loopne
pop
add
jne
nop
jmp
test
push
add
fcoms
add
popf
mov
stos
std
dec
nop
jmp
add
add
add
jmp
add
push
stc
jb
mov
push
xlat
pop
test
nop
jmp
int
lcall
xchg
movsl
jecxz
pop
push
mov
xchg
ret
add
testb
or
mov
push
stc
jb
add
sbb
pusha
push
mov
xchg
ret
in
add
in
repz
pop
iret
inc
lret
add
int
push
add
add
pusha
add
add
stc
jb
add
add
inc
push
inc
add
push
stc
jb
add
dec
add
dec
add
test
add
stc
jb
and
ljmp
add
jb
lcall
subb
add
sahf
sti
int
xor
fs
add
testb
add
pushf
repz
jmp
mov
add
aaa
sahf
mov
hlt
leave
xor
push
mov
xchg
ret
mov
les
stc
jb
sahf
cmp
add
or
and
call
sbb
pop
add
mov
cmp
nop
jmp
sbb
cmp
cmpsb
ljmp
popf
add
cld
call
nop
jmp
add
add
lds
xlat
in
add
add
add
inc
loopne
mov
xchg
ret
mov
dec
mov
add
mov
xchg
ret
add
addb
popf
mov
stc
jb
mov
mov
jb
add
mov
in
mov
stc
jb
add
cmpsb
loope
xchg
fcomps
jb
add
in
in
fldt
cmpl
test
add
cmp
pop
mov
movb
addb
add
adc
sbb
decl
jmp
add
add
cmpsl
mov
jb
or
stos
add
fisttpl
pop
add
nop
jmp
add
add
leave
pop
cmpl
nop
jmp
add
add
xor
iret
sti
inc
add
mov
add
call
stc
jb
add
and
cwtl
mov
stc
jb
ret
add
add
push
add
stc
jb
pop
add
add
add
subb
lcall
test
or
add
jb
xor
adc
jb
pushf
mov
mov
xchg
cmc
inc
add
fildl
testb
jl
push
add
push
add
repz
test
stc
jb
add
add
add
loop
push
stc
jb
add
add
add
or
xlat
inc
add
dec
cmp
cmpb
add
add
jge
add
nop
jmp
popf
add
mov
add
jb
dec
pushf
add
add
into
jne
stc
jb
add
adc
mov
add
jb
add
jg
mov
outsl
push
mov
js
add
fildl
stos
icebp
add
add
aam
stos
push
mov
xchg
ret
add
les
stc
jb
add
add
push
add
add
push
mov
xchg
ret
add
mov
push
push
mov
xchg
ret
sahf
add
sbb
jb
add
pop
nop
jmp
insl
push
repz
or
add
add
stc
jb
add
and
add
stc
jb
mov
in
cwtl
add
nop
jmp
stos
add
mov
mov
stc
jb
mov
add
jb
ret
add
repz
mov
test
inc
add
jecxz
add
jno
add
andps
jb
pushf
pop
add
add
xor
add
cmp
nop
jmp
jg
mov
arpl
mov
xchg
ret
add
leave
test
mov
nop
jmp
add
mov
push
mov
xchg
ret
cs
and
out
add
fldl
jns
popf
mov
push
mov
xchg
ret
or
fs
pop
fstpt
stc
jb
add
movsb
push
mov
xchg
ret
aad
mov
popa
add
mov
xchg
ret
add
add
test
pusha
adc
add
fisttpll
push
mov
into
add
nop
jmp
repz
sbb
add
stc
jb
add
jg
mov
cmc
or
add
add
cmp
popa
add
jmp
movsl
add
xor
add
add
stc
jb
xchg
int
rcrb
jmp
add
fldl
add
add
outsl
outsb
dec
fs
jb
add
add
add
stc
jb
push
aad
mov
nop
jmp
fisttpl
mov
pop
mov
push
mov
xchg
ret
mov
add
mov
mov
stc
jb
adc
repz
cltd
push
nop
jmp
adc
add
or
push
push
stc
jb
insl
test
xor
or
sbb
inc
add
add
arpl
push
nop
jmp
int
push
in
lcall
ret
push
mov
xchg
ret
push
add
ljmp
and
pop
nop
jmp
xor
add
add
sub
andb
mov
leave
mov
add
push
mov
xchg
ret
add
add
stc
jb
add
dec
pushf
add
out
aad
mov
stc
jb
pushf
add
add
loopne
mov
stc
jb
mov
mov
stc
jb
add
add
xor
push
mov
xchg
ret
mov
push
stc
jb
add
add
mov
les
sbb
popa
add
mov
xchg
ret
pushf
pushf
add
push
mov
xchg
ret
add
push
mov
xchg
ret
push
add
jbe
stc
jb
sahf
fisttpll
push
stc
jb
add
pop
das
push
stc
jb
add
add
add
cmp
nop
jmp
add
pushf
add
pop
call
nop
jmp
add
ret
push
dec
xor
nop
jmp
pushf
popf
add
add
add
mov
stc
jb
mov
ljmp
stc
jb
loopne
ret
add
arpl
dec
add
stc
jb
add
add
add
fldl
in
call
and
insl
add
pop
mov
stc
jb
add
mov
mov
stc
jb
push
in
add
inc
mov
or
incl
fstpt
movsl
mov
ret
stc
jb
add
add
mov
stc
jb
popf
add
xor
sbb
jmp
push
add
add
jg
add
push
stc
jb
loopne
add
in
sahf
add
push
push
mov
xchg
ret
add
add
testb
stc
jb
add
add
sbb
jmp
add
add
jb
aad
mov
jle
test
add
outsl
in
sti
adc
add
jmp
add
add
add
mov
movzwl
stc
jb
add
mov
movsl
hlt
out
popl
stc
jb
mov
add
mov
push
mov
xchg
ret
mov
add
push
mov
xchg
ret
add
add
jmp
push
in
incl
or
sbb
jbe
fadds
add
jb
add
adc
add
mov
pushf
add
add
push
stc
jb
add
add
push
add
inc
or
add
add
in
add
mov
stc
jb
in
add
stc
jb
add
add
in
fdivrl
stc
jb
add
fldl
repnz
ror
stc
jb
add
sbb
and
inc
sub
jb
mov
repz
mov
stc
jb
mov
addr16
clc
inc
add
dec
push
add
sbb
bound
add
add
ljmp
pop
call
lcall
shl
stc
jb
mov
aaa
aad
aad
popl
dec
cmp
jmp
icebp
pushf
add
fstp
mov
stc
jb
mov
xor
leave
ret
push
stc
jb
pushf
add
add
add
add
jbe
stc
jb
fildl
sahf
jg
ret
push
stc
jb
push
add
sbb
add
nop
jmp
xor
add
add
popf
incl
sti
stc
jb
add
mov
std
call
stc
jb
repz
mov
stc
jb
test
sti
repz
scas
push
push
mov
xchg
ret
sahf
add
icebp
add
add
jb
add
add
mov
push
push
push
mov
xchg
ret
add
or
or
mov
xchg
ret
int
mov
adcl
dec
nop
jmp
add
cmp
repz
shll
fadds
xchg
ret
mov
daa
addb
cmp
jmp
lock
decl
stos
mov
icebp
aad
outsb
add
stc
jb
add
movsl
aad
stos
dec
push
stc
jb
add
add
and
std
stc
jb
add
ret
xor
stc
jb
sahf
mov
dec
add
add
popa
add
mov
xchg
ret
sti
mov
push
sub
cmpsb
out
add
add
dec
pushl
stc
jb
sbb
mov
add
pop
add
stc
jb
xchg
add
xchg
add
lea
or
add
jg
movsl
aaa
repz
mov
jb
push
add
add
popf
sbb
sub
stc
jb
sbb
mov
mov
nop
jmp
or
push
stc
jb
mov
add
decl
push
mov
xchg
ret
dec
xchg
iret
push
push
mov
xchg
ret
insl
add
add
adc
fistl
stos
pop
idivb
push
jb
arpl
decl
adc
add
push
mov
xchg
ret
add
add
bound
insl
push
nop
jmp
add
movsl
add
xor
push
fimuls
addb
add
jns
mov
test
stc
jb
add
add
lods
mov
nop
jmp
add
and
mov
bswap
stc
jb
add
push
add
push
and
cwtl
dec
push
mov
xchg
ret
mov
add
adc
scas
call
stc
jb
mov
push
addb
push
sbb
mov
stc
jb
add
pushf
stos
ret
cmp
fdiv
stc
jb
add
jge
stc
jb
add
jns
adc
and
push
mov
xchg
ret
add
aad
mov
nop
jmp
add
add
mov
stc
jb
in
add
add
icebp
mov
jb
add
sahf
leave
add
jb
mov
add
add
imul
jb
push
mov
push
add
incb
xchg
ret
add
aaa
add
jae
push
mov
add
push
cmp
add
add
cmp
add
mov
cmp
call
dec
test
xchg
add
fsubrs
lcall
mov
int
push
add
xor
add
stc
jb
add
sub
mov
add
stc
jb
aad
xor
mov
stc
jb
push
add
fisttpl
add
jb
pop
add
jno
add
jb
add
jbe
stc
jb
or
aaa
or
pushf
mov
nop
jmp
add
add
push
push
mov
xchg
ret
leave
pushf
add
add
push
stc
jb
add
test
add
pop
add
in
mov
stc
inc
add
add
xor
push
mov
xchg
ret
jl
add
push
lods
jmp
nop
jmp
cmp
testb
mov
stc
jb
sbb
mov
add
mov
jb
sbb
add
mov
andb
incl
xor
add
jmp
stc
jb
add
mov
int
pop
jae
jb
sahf
add
xlat
add
add
jb
add
pop
stc
jb
add
add
sti
add
cwtl
mov
stc
jb
fisttpl
add
add
stc
jb
dec
add
dec
pop
test
nop
jmp
jg
movsl
add
jae
jb
jl
add
xor
stc
jb
add
or
add
sti
nop
jmp
add
add
inc
stc
jb
xor
xchg
fnstsw
and
push
mov
xchg
ret
add
add
xchg
push
mov
xchg
ret
add
push
add
outsl
xor
stc
jb
mov
sti
xchg
sub
sub
jb
xor
add
add
and
and
fdivrl
nop
jmp
in
add
ret
add
push
push
mov
xchg
ret
add
icebp
or
mov
xchg
ret
add
leave
int
je
stc
jb
sti
or
mov
je
sub
jb
repz
push
mov
xchg
ret
mov
repz
lcall
incl
add
fistpl
inc
dec
pushl
stc
jb
mov
mov
mov
stc
jb
mov
movzwl
nop
jmp
push
push
cs
loopne
stc
jb
mov
int
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
fistpl
das
push
stc
jb
add
ljmp
lods
push
mov
xchg
ret
aaa
push
push
add
ss
push
mov
xchg
ret
add
imul
je
inc
add
in
add
push
mov
imul
stc
jb
add
mov
or
xchg
push
push
add
push
nop
jmp
mov
pushf
add
sub
icebp
stc
jb
mov
add
or
add
inc
push
mov
xchg
ret
add
or
add
stc
jb
movsl
add
icebp
add
add
sahf
mov
stc
jb
add
add
push
fldt
idiv
jb
adc
add
add
inc
add
jb
mov
add
add
jae
mov
stc
jb
sti
in
xor
inc
add
add
dec
dec
xchg
inc
add
xor
stc
jb
push
add
xchg
push
sysexit
inc
push
adc
stc
jb
cmp
xor
add
nop
jmp
fildl
fs
xor
add
mov
nop
jmp
ljmp
ret
sbb
incl
mov
jle
jae
nop
jmp
pop
add
add
add
adc
jb
mov
add
stc
jb
mov
loopne
add
mov
stc
jb
xor
add
add
jae
add
mov
add
divps
inc
jmp
add
add
dec
and
pop
stc
jb
add
add
add
inc
sbb
fldpi
inc
add
add
add
imul
jmp
loopne
add
add
es
stc
jb
sbb
mov
xor
jb
repz
xor
push
popa
add
jb
in
aad
add
jne
int
jne
stc
jb
push
mov
jmp
flds
xchg
ret
test
push
add
lds
addb
add
add
add
or
jb
add
ljmp
ljmp
add
push
js
xchg
cmpl
pushl
add
adc
mov
nop
jmp
add
add
push
mov
stc
jb
add
mov
sub
jmp
or
leave
add
mov
stc
jb
testb
add
mov
call
stc
jb
fucom
push
xor
mov
push
mov
xchg
ret
fisttpll
mov
stc
jb
jl
loope
add
stc
jb
add
add
test
add
stc
jb
add
add
nop
jmp
mov
sahf
add
xchg
cli
mov
stc
jb
jg
fstpt
push
mov
xchg
ret
add
add
dec
cli
stc
jb
ret
push
inc
repnz
stc
jb
add
dec
add
adc
jne
stc
jb
icebp
dec
jb
jg
dec
leave
xor
hlt
lcall
idiv
lcall
pushf
add
mov
pop
push
mov
xchg
ret
add
add
out
push
stc
jb
fildl
add
into
mov
stc
jb
add
pop
push
xchg
add
mov
add
stc
jb
pushf
sahf
add
sub
test
stc
jb
stos
cmp
mov
orb
add
xor
mov
stc
jb
add
add
mov
add
stc
jb
mov
in
sub
inc
add
sahf
add
mov
mov
push
push
mov
xchg
ret
fildl
add
add
add
push
push
mov
xchg
ret
aad
push
adc
outsb
push
stc
jb
add
and
mov
add
sbb
jmp
add
insl
add
jns
loop
mov
stc
jb
dec
push
xor
add
add
add
div
fsubrl
rcll
out
inc
add
mov
add
push
mov
xchg
ret
add
mov
hlt
call
incl
lcall
subb
adc
aad
adc
or
nop
jmp
mov
fld1
mov
stc
jb
xor
hlt
sti
rep
stc
jb
add
add
add
mov
xlat
shrb
popa
add
jb
or
pushf
aad
xor
push
mov
xchg
ret
sahf
add
jb
add
add
add
test
incl
xor
lcall
movsl
sbb
loopne
add
or
nop
jmp
add
mov
popa
nop
jmp
push
add
repz
ret
dec
lea
stc
jb
sahf
cs
add
mov
xchg
ret
add
xchg
xor
stc
jb
loopne
pushf
add
add
mov
stc
jb
xor
out
xchg
push
mov
xchg
ret
add
cmpsl
mov
popf
nop
jmp
int
xor
add
decb
jb
add
pushl
stc
jb
fstpl
adc
push
stc
jb
icebp
xor
sahf
mov
mov
test
mov
add
add
add
insb
lea
nop
jmp
add
mov
or
popa
add
jmp
mov
sti
adc
add
stc
jb
movsl
int
pop
std
add
nop
jmp
mov
jns
ret
cmpsb
mov
jmp
add
jl
mov
stc
jb
jl
add
xor
divb
mov
addl
stc
jb
sti
add
add
xchg
inc
add
xor
add
pop
nop
jmp
mov
int
add
or
sbb
jb
add
testb
rep
stc
jb
add
add
jg
call
mov
or
out
in
jg
ret
pushf
movsl
cltd
pop
push
mov
xchg
ret
add
mov
jne
stc
jb
mov
add
mov
stc
jb
add
jl
push
stc
jb
in
sahf
add
loopne
add
stc
jb
dec
mov
adc
add
add
lret
shr
stc
jb
add
insl
push
add
push
div
nop
jmp
add
mov
fcmovb
out
nop
jmp
add
loopne
push
mov
jmp
add
testb
jg
pop
pushf
popf
cmp
nop
jmp
pop
add
jns
test
sahf
push
test
mov
idivb
stc
jb
fldl
add
imul
stc
jb
pop
add
arpl
stc
jb
xor
add
add
adc
jb
fisttpl
xchg
stc
jb
add
add
mov
mov
stc
jb
xor
in
mov
ljmp
jb
popf
mulb
nop
jmp
jns
dec
add
add
dec
lea
stc
jb
icebp
add
lea
test
out
stc
jb
jl
loopne
add
add
sbb
add
add
bound
push
push
bound
pop
push
push
out
xlat
push
add
lret
xor
jo
or
in
push
add
les
sbb
faddl
pop
movsbl
xor
cwtl
mov
sub
inc
xchg
out
add
add
pop
jno
push
in
inc
add
aad
add
mov
push
popf
add
movb
pop
test
xchg
cmpsl
jbe
daa
push
insl
jge
add
fbld
aaa
cs
jae
dec
fisubs
sub
and
pusha
add
ret
fwait
xor
and
loopne
add
mov
push
rcll
sarb
pushf
sar
push
mov
movb
repz
cmp
push
cmp
jnp
cwtl
sub
mov
dec
mov
mov
dec
mov
dec
or
in
scas
jns
mov
lret
cs
xchg
fisttps
add
pusha
add
mov
imul
add
cld
pop
inc
add
sbb
lds
pop
es
jmp
add
sub
and
cmp
shll
pop
adc
in
popa
std
data16
mov
jg
faddl
test
jg
xchg
scas
or
cmpsb
cli
imul
faddl
test
and
adc
test
mov
insb
mov
fisttps
inc
cwtl
stos
test
jb
cmpsb
ret
ret
push
data16
out
inc
add
push
je
and
and
inc
test
mov
out
imul
xchg
das
lds
fnclex
mov
out
mov
lahf
jbe
cmpsl
or
addb
cwtl
xor
mov
pop
add
jmp
repz
inc
add
jbe
xchg
scas
ffreep
sub
daa
imul
out
sub
int3
sarl
call
outsl
jbe
mov
pop
xchg
push
add
sbb
nop
sahf
dec
mov
and
fcomps
cmp
nop
aas
call
mov
cwtl
xchg
out
repnz
fidivs
mov
fnstsw
dec
in
lea
cld
idivl
aad
dec
push
jns
mov
popf
mov
es
insb
jl
xchg
sahf
pop
sub
jae
dec
inc
add
lcall
xlat
push
push
push
pop
pop
outsb
xchg
lods
jg
mov
xor
and
imul
push
fisubl
addb
add
cmp
mov
mov
cmp
add
sub
xchg
cmp
mov
jge
add
subl
push
iret
stos
pop
push
movsb
or
pusha
add
mov
mov
dec
aad
imul
test
sub
jns
addb
arpl
and
xchg
mov
sub
and
stos
jg
jbe
aad
adc
dec
sub
lcall
and
xchg
jmp
movsb
push
push
lods
inc
cmc
jbe
cwtl
cld
mull
mov
push
movb
std
dec
xor
cmp
inc
aad
inc
add
imul
and
add
jbe
cmp
fdivs
mov
das
adc
push
cmp
movsb
inc
add
adc
inc
add
push
add
popf
push
movsb
mov
pop
push
lahf
les
cmp
stos
icebp
repnz
add
dec
dec
bound
or
je
je
push
out
cmp
and
adc
add
cmp
inc
mov
cs
stos
addb
cmc
xchg
sbb
mov
xchg
insl
pop
sbb
out
inc
add
xchg
add
mov
popa
jns
sbb
cmc
cmc
rolb
mov
add
fstpt
fldenv
sub
mov
ds
out
ljmp
mov
add
pushf
aad
jle
push
jo
jl
notb
ds
int
jge
push
push
push
mov
add
sub
cmp
jp
xchg
clc
js
pop
cltd
xchg
loop
add
std
outsl
aad
add
add
hlt
insl
mov
sbb
aad
mov
add
fildll
cmp
push
lds
or
in
jno
add
add
lods
fcmovnu
addr16
push
fldenv
pop
mov
add
je
mov
bound
lods
pop
mov
outsb
jp
aad
outsl
sti
or
add
arpl
mov
rolb
lcall
add
push
pop
mov
inc
fnsave
xor
in
push
cwtl
sbb
add
std
add
sahf
mov
in
out
cmpsl
imul
cmc
nopl
lret
mov
mov
jp
push
icebp
sbb
xchg
and
xchg
addr16
std
cmp
dec
daa
nop
lds
jle
mov
pop
adc
fdivs
imul
rolb
loopne
das
xchg
leave
aam
add
das
jecxz
test
fadds
in
mov
ret
lahf
dec
imul
push
shlb
and
rolb
fiaddl
add
jno
shlb
ret
orl
icebp
rorl
popa
jmp
ja
mov
xor
pop
xchg
pop
test
xor
push
mov
cmp
test
inc
add
add
add
leave
in
dec
shlb
addr16
add
shlb
gs
push
bound
int
push
inc
inc
add
cmp
mov
lcall
cwtl
cmp
aam
xchg
sbb
xchg
lods
test
not
xor
adc
ljmp
sub
or
arpl
add
jle
cpuid
xchg
rcrb
js
add
lods
aaa
xchg
sub
int
jmp
sub
repz
xor
leave
mov
add
xor
lahf
mov
inc
add
shrl
adc
cpuid
test
add
jno
shrb
jbe
jle
mov
and
pushf
in
mov
js
pushf
xchg
imul
inc
jmp
leave
aad
and
scas
dec
mov
les
inc
push
add
test
mov
add
mov
xor
imul
fsts
mov
xor
push
add
adc
sbb
out
inc
add
pusha
add
stos
jp
bnd
popf
cld
fucom
cs
pop
push
jmp
sub
add
int
movsl
lret
add
xchg
out
rolb
lea
sbb
mov
das
push
loopne
jl
enter
std
mov
in
cmc
sahf
pop
icebp
sbb
sub
pop
sbb
rolb
lods
das
les
out
addr16
gs
dec
xor
xchg
imul
pop
ret
insl
mov
push
mov
jp
dec
xchg
xchg
rolb
jmp
insl
pusha
add
push
cmovae
repnz
cmp
test
sbb
mov
out
dec
adc
jecxz
mov
insl
and
aam
lods
xchg
inc
add
dec
push
add
popa
or
daa
leave
fistpl
sub
in
aas
jmp
mov
jb
add
test
dec
mov
sub
and
and
fs
adc
or
cltd
mov
or
movb
inc
add
add
pop
test
add
addb
lret
jae
push
xor
push
sub
cs
sub
mov
loopne
or
call
xchg
mov
insl
adc
cwtl
cwtl
imul
lret
dec
cmpsl
mov
vpunpcklwd
push
add
or
mov
jae
je
add
ret
cs
add
adc
add
mov
frstor
lock
fnstcw
popf
ja
popf
jle
bndldx
add
cltd
idivb
sbb
xchg
xor
xchg
fs
dec
imul
inc
mov
sub
jnp
and
mov
inc
add
sbb
push
js
cs
sbb
sbb
pushf
xchg
cmp
int3
iret
mov
into
loopne
ret
stos
stos
and
les
dec
andl
out
add
sub
adc
and
adc
jg
or
or
fisttpl
sub
inc
add
jmp
shrl
adc
cs
xchg
sbbl
fidivl
movsb
fimuls
sub
jge
jnp
pop
dec
repz
mov
xor
icebp
mov
jns
mov
sbb
lods
out
push
jo
ret
inc
add
cmp
shlb
add
sarl
xor
adc
pop
lret
ljmp
rcll
add
lret
adc
add
mov
lcall
mov
scas
popf
adc
add
and
adc
mov
add
push
sbb
imul
ja
getsec
mov
jle
movb
add
aaa
lahf
lock
or
lea
jle
in
pop
or
scas
fiadds
and
sahf
pop
stos
inc
bound
adc
rcrb
push
arpl
repz
mulb
call
roll
add
setnp
pop
in
sub
jle
mov
sar
adc
mov
sbb
add
sub
mov
lret
add
adc
insb
stc
cli
out
add
nop
sub
adc
and
fwait
repz
dec
iret
mov
mov
imul
in
add
dec
sti
cwtl
loopne
aaa
imul
mov
mov
push
call
fildll
jae
movsl
mov
push
add
add
cli
pop
sahf
movb
xlat
dec
movl
sub
fwait
sarl
dec
add
sti
pop
es
mov
xchg
cmc
cli
adc
mov
aad
add
xchg
cltd
in
cmc
and
add
in
int
idivl
gs
adc
std
inc
sahf
xchg
movswl
jne
aam
cmp
lahf
xor
inc
add
adc
lea
pop
hlt
mov
dec
and
pushf
xchg
push
add
push
cmp
inc
test
rolb
repz
popa
ret
inc
and
jecxz
pop
xor
mov
push
add
inc
cmp
dec
fists
repnz
cmp
or
lret
outsl
jp
addb
and
add
scas
jl
add
mov
rcrb
std
xchg
push
add
popa
mov
mov
out
cmpsb
lcall
sub
inc
mulb
das
add
sbb
test
das
add
cmp
add
incl
enter
cmpsl
xor
pop
jb
rolb
add
add
jo
jae
shrb
add
inc
sbb
push
int
dec
aad
mov
or
mov
pop
popa
mov
xor
cwtl
xchg
inc
add
jg
jne
cmpsb
into
xor
add
sahf
aam
sub
jle
push
ds
and
fistpl
shll
xor
mov
xorl
add
loop
repnz
and
sub
sub
jb
add
mov
lock
mov
jl
mov
cltd
sbb
into
sarb
and
cmp
xchg
and
or
dec
mov
jae
sahf
adc
or
rclb
iret
xor
push
lret
lds
xor
pop
insb
loop
rorb
lahf
add
js
or
xchg
out
jns
push
lds
and
imul
add
test
mov
dec
push
fldcw
mov
mov
cmp
movb
inc
add
cmc
cmpsl
push
jp
fwait
add
jge
or
das
out
in
lock
fcompl
push
in
int3
mov
pop
jne
adc
jl
sbb
pusha
add
xor
lret
push
or
movl
insb
mov
sbb
arpl
ss
add
fs
cli
aas
fstpt
add
and
lret
adc
arpl
ja
and
jl
rorl
je
fcomp
nop
fcmove
rcll
adc
inc
cmpsb
push
add
add
xor
ss
je
add
push
mov
dec
sub
jp
or
xor
pop
test
dec
lret
xor
and
mov
mov
fsubrs
sti
cmp
xorl
mov
imul
adc
add
iret
lret
xchg
bound
das
das
fiaddl
adc
xchg
mov
sub
dec
and
sti
stc
inc
add
sub
ss
mov
push
jne
fs
test
idivl
mov
add
sub
repnz
cmp
insl
fbstp
dec
cmpsb
arpl
mov
pop
es
aam
loope
cmp
dec
out
mov
add
pop
inc
mov
push
mov
xchg
rcr
mov
mov
insl
loope
pop
outsb
int
je
mov
sbb
and
cmp
jno
jbe
sbb
xor
sub
or
add
ljmp
cmp
add
cltd
push
add
dec
addb
mul
ja
or
movb
xchg
adc
pushf
dec
fsub
out
inc
add
and
mov
dec
data16
mov
movsl
stos
jb
xor
cmc
push
jnp
dec
scas
insb
mov
js
and
repnz
push
push
mov
add
out
ds
push
cmp
loope
sbb
jmp
lods
lock
jb
add
add
mov
push
jb
push
jne
cli
mov
dec
cmc
xchg
mov
mov
enter
bound
loop
pop
outsb
lret
sahf
lcall
xchg
aam
add
add
push
je
loop
mov
stos
out
stc
jl
xor
test
or
es
ss
jle
dec
mov
jmp
subl
mov
xchg
push
add
pop
fisubrs
loopne
push
test
in
cs
mov
adc
push
fimuls
xchg
push
lret
fistl
dec
pop
sbb
and
mov
addr16
test
dec
ret
and
ficomps
add
movsb
dec
sbb
xor
sub
dec
xchg
jmp
mov
out
je
and
cmp
addb
shll
add
adc
adc
mov
and
sarl
xchg
lahf
into
sub
add
mov
inc
jp
inc
dec
xor
sub
mov
cmp
fnstcw
xchg
cmp
roll
push
movsb
and
ret
cmpsb
movsb
jp
sarl
cmp
cmpsl
jecxz
imul
add
daa
jl
inc
xor
cmpsl
xchg
rolb
movb
push
ficompl
test
add
into
jb
int
rolb
pushf
and
mov
xchg
data16
sbb
add
mov
add
cmp
movb
clc
or
add
inc
rorl
ds
les
push
or
mov
jle
jo
aad
cmp
jecxz
in
aad
pop
push
push
add
in
fisttpl
add
rclb
loopne
jg
mov
imul
pop
sub
xchg
scas
stos
inc
add
jno
pop
sub
xlat
jp
sahf
shlb
lds
adc
fabs
das
lods
leave
loop
dec
lret
mov
pop
jne
pop
stc
push
out
mov
mov
sub
push
cmpl
xorl
jl
pop
cmpsl
jno
sub
sbb
insl
rorl
dec
mov
mov
test
inc
stos
xchg
mov
fidivrl
push
push
inc
add
popf
or
test
repnz
int3
jmp
pushf
sub
and
nop
rcll
fcmovne
popf
mov
adc
jb
jl
test
push
jg,pn
mov
cmpsb
jae
stc
loope
push
push
xchg
sarb
xchg
xor
bound
pusha
add
pop
mov
mov
mov
in
adc
mov
arpl
mov
mov
sbb
pop
arpl
jmp
inc
add
add
aad
jno
ret
addb
popa
std
fs
jge
stos
cmp
lahf
inc
ret
test
xor
mulb
xor
jo
cmpsl
mov
popa
cld
jmp
shrb
xchg
push
mov
push
fadds
loop
dec
xchg
and
fistpl
jg
movsb
addb
leave
push
push
xor
inc
add
lds
movsl
sar
imul
daa
pop
jns
add
popa
fsubs
xchg
das
movb
pop
lret
mov
and
insl
adc
nop
mov
xchg
in
add
out
andl
add
add
popa
gs
cli
mov
mov
daa
mov
sbb
popf
jbe
loop
push
pop
adc
inc
dec
mov
je
mov
jno
pop
inc
loope
mov
mov
mov
cmc
push
loop
cmpsb
insl
sbb
in
dec
leave
pop
call
enter
ljmp
add
sub
repz
call
jae
notb
dec
sbb
pusha
add
mov
add
xor
outsl
movsb
lods
push
ror
mov
out
mov
sbb
lret
das
daa
xchg
jns
pushf
icebp
ss
jae
mov
inc
test
dec
in
lds
outsl
arpl
lock
mov
incb
nop
outsb
and
cmp
mov
add
xchg
fwait
push
cmp
push
dec
inc
cmp
rcll
xor
jmp
adc
arpl
adc
xlat
aam
sub
ljmp
call
dec
jecxz
iret
adc
xchg
push
cmpsb
mov
pop
aas
sub
lahf
sbb
push
pusha
add
std
nop
mov
xor
inc
inc
add
leave
decl
andl
clc
fisttpl
pusha
add
addb
pop
xlat
push
add
dec
fs
jnp
mov
cmp
mov
and
test
iret
shrl
dec
cmp
sbb
add
arpl
jno
add
xchg
in
lea
push
inc
aad
cmp
shl
jo
das
xor
fs
cmp
out
fists
jmp
mov
add
mov
cmpsl
or
movb
data16
inc
dec
cwtl
pop
andl
dec
push
call
ror
jp
lock
cmp
test
pop
push
and
lods
or
mov
add
ja
ficompl
xor
nop
inc
add
mov
mov
push
rorl
outsl
ret
mov
mov
adc
subl
ret
lods
sbb
in
rorl
ret
stos
cs
in
je
push
movb
cld
ficompl
add
add
les
cmp
mov
mov
js
sbb
xchg
bound
stos
or
add
inc
rolb
dec
push
clc
flds
inc
popa
push
lcall
push
or
sbb
cmpsl
push
mov
jbe
dec
xchg
addb
add
add
scas
movsb
xor
movaps
mov
stc
push
movb
pop
test
and
cmpsb
es
scas
inc
add
pop
mov
divl
mov
movsb
jp
stos
push
dec
fbld
and
mov
xchg
dec
cmc
fxch
or
addb
add
pop
sbb
adc
mov
and
add
cmp
xor
enter
cmpsb
jecxz
imull
aas
test
dec
bound
stos
mov
call
add
mov
sub
dec
push
sbb
and
jp
dec
mov
movb
mov
fadd
into
mov
lcall
icebp
and
les
shll
leave
lods
outsl
add
cmp
jle
xchg
out
fs
aas
adc
xor
rol
movsb
add
popf
ljmp
ljmp
xchg
and
fbld
mov
pop
sub
xor
mov
lcall
outsb
pop
addb
imul
les
push
mov
mov
int3
inc
add
jmp
aas
imul
iret
movntq
in
aam
push
add
mov
add
cmp
cmp
add
out
push
in
enter
aam
jo
xor
cmp
insb
push
data16
dec
insb
xchg
je
cmp
cs
jne
xor
rcrb
jne
jle
jns
add
push
std
sub
idivb
nop
movb
jle
test
dec
lods
inc
enter
pop
xchg
ja
pmuludq
inc
ja
daa
nop
push
jae
arpl
lahf
push
mov
fisttpl
hlt
ja
out
call
loope
mov
in
cwtl
cmpsl
mov
inc
add
adc
test
ljmp
mov
xchg
stos
cmp
aas
std
pop
je,pt
pop
mov
and
add
and
int
and
sub
mov
mov
jno
push
cmpsb
inc
inc
add
jecxz
mov
aam
outsl
or
imul
jno
lods
add
dec
stc
mov
leave
mov
data16
push
les
rolb
jo
xchg
int
ret
fwait
and
repz
pop
sub
push
mov
roll
jno
test
dec
mov
add
mov
inc
fdivr
add
push
in
iret
cmpsb
pop
sbb
cwtl
fistpll
movb
sbb
jno
mov
ficompl
sbb
nop
repnz
arpl
pop
fs
push
sub
sbb
pusha
add
testb
push
rcrl
lods
loopne
jmp
add
shlb
sub
cmp
xor
es
aam
and
xchg
jne
inc
add
popa
push
or
mov
and
inc
add
test
call
imul
add
jae
loop
dec
orl
enter
test
xchg
scas
cwtl
push
jmp
inc
ret
imul
inc
add
ficomps
out
lret
or
mov
cmp
ss
xlat
sbb
and
xor
loopne
jl
in
das
sbb
ss
inc
mov
inc
add
jae
mov
ss
mov
out
pop
and
das
dec
lret
jo
mov
lcall
adc
sbb
cs
sub
dec
xchg
xor
xor
xor
lods
orl
int
adc
gs
sub
add
insb
std
fisubs
add
insb
cmp
jbe
je
inc
add
dec
sbb
adc
fistps
xor
int3
xor
mov
movsl
push
add
leave
das
repnz
in
add
orl
lea
stos
push
rol
add
push
mov
mov
hlt
xlat
fdivr
test
adc
pop
jno
ja
add
jmp
lcall
fwait
seta
mov
sahf
lret
mov
insb
jmp
xchg
inc
add
cwtl
lret
imulb
adc
in
add
jnp
pop
push
add
cmpsb
fstpt
or
mov
pop
sub
ds
fildll
cmova
arpl
pusha
add
mov
fildll
push
lret
out
mov
jo
and
fmul
js
lahf
or
orl
pusha
add
movb
addr16
add
jg
add
mov
mov
daa
ljmp
add
add
lret
pop
inc
add
das
rclb
das
xchg
lods
dec
sti
ss
sahf
mov
add
lods
fwait
popf
jo
std
cli
out
add
dec
aad
lea
add
sti
fsub
loopne
mov
orl
incl
cmpsb
rorb
cltd
enter
or
sub
fs
loopne
out
sub
imul
lea
fld
add
in
cmp
test
in
and
mov
shl
loopne
movsl
or
cmpsb
cs
ret
dec
test
test
test
xchg
and
jbe
cmp
popf
or
pop
sbb
jecxz
cwtl
stos
jle
lea
loop
cmp
dec
jne
cmp
add
cmpsl
cmp
adc
js
xchg
push
add
aas
jmp
mov
insb
mov
add
dec
sub
inc
hlt
xchg
sbb
addb
jno
inc
add
dec
ja
lcall
std
jb
add
bound
loope
cmc
hlt
in
xor
daa
fsubs
mov
pop
imul
test
push
stc
jb
movb
add
and
out
aam
add
test
inc
add
int
inc
add
in
pop
xor
cmpsb
call
sub
loope
or
cld
jmp
lea
adc
lcall
add
add
rcrl
sbb
mov
xchg
lock
dec
lds
lret
mov
lret
mov
cltd
jb
test
aad
jge
mov
testl
and
outsb
dec
pusha
add
jbe
push
xor
scas
loope
jae
fists
xorl
dec
push
cmpsb
jb
jecxz
cmp
push
bound
lret
add
push
fsubrl
xor
mov
stc
xchg
mov
aam
jge
call
fs
scas
pmuludq
xchg
dec
bnd
and
add
arpl
cmp
jmp
lods
sahf
push
dec
jnp
sbb
lods
arpl
xchg
and
loope
enter
add
loope
addr16
xor
jp
in
xor
addl
nop
xchg
jmp
add
leave
mov
pusha
add
sbb
sysexit
aas
xchg
lret
lods
lahf
adc
jns
mov
cli
pop
adc
sbb
cmp
insl
pop
pop
ficoml
pop
ds
xor
jl
cmp
testl
ficompl
je
ljmp
enter
and
sub
movsl
loop
adc
scas
xchg
sbb
mov
into
add
add
and
jmp
ret
push
movsl
addb
xor
xor
push
nop
stos
mov
and
mov
rolb
xor
jle
out
jg
stos
addr16
shrl
adc
adc
aaa
je
pop
jnp
dec
repnz
orl
sub
add
imul
dec
gs
loope
mov
add
add
add
or
pop
les
shll
jmp
mov
std
push
sti
xchg
enter
aam
mov
inc
add
lret
daa
shrl
pop
out
test
xchg
cmp
cmp
in
pop
stos
cmpsl
les
pop
daa
sbb
aam
push
jo
movsb
sub
mov
mov
add
in
mov
push
mov
out
adc
hlt
loop
sub
mov
out
scas
sbb
add
add
jmp
mov
cmp
cmpsl
aad
imul
mov
pop
add
push
jle
dec
push
decl
mov
out
push
xchg
and
aad
xchg
fcmovnbe
xor
out
mov
mov
shl
cwtl
or
out
add
loope
addb
add
pushf
jb
addr16
sub
clc
inc
add
or
das
pushf
les
and
into
jbe
push
add
fwait
cli
aaa
das
popa
out
je
mov
mov
dec
rcll
inc
add
fnsave
mov
ljmp
add
dec
jl
inc
in
push
add
cmp
inc
add
pop
xor
mov
add
shl
cld
popa
nop
dec
inc
add
call
add
aas
aam
pop
movsl
push
mov
xor
test
loopne
pop
fwait
ficoml
add
cmp
and
sub
add
sbb
addb
pushf
fcoms
inc
add
test
inc
add
lcall
js
jg
xchg
in
repz
out
lods
mov
jge
push
fistpll
cmp
ss
addb
insl
hlt
out
adc
jge
or
push
pusha
add
int3
fisttpl
dec
adc
add
fdivr
aas
pop
mov
js
icebp
lret
out
fbstp
insb
enter
xchg
lret
xchg
add
xchg
inc
add
push
push
pop
xchg
pop
pop
or
mov
popf
xchg
stos
movswl
xchg
enter
ucomiss
sti
cmpsl
js
add
add
ret
sub
jmp
add
lcall
add
outsl
dec
jl
addr16
push
aad
dec
lret
and
add
sbb
daa
out
rolb
cltd
pop
push
push
mov
push
testl
pop
fisttpl
add
jge
fcoms
jo
jnp
int
jo
inc
add
cmc
push
fnstcw
mov
or
jae
add
lock
xor
jmp
cs
sbb
xor
mov
fisubl
nop
fiaddl
add
adc
pop
dec
jnp
loop
rcrb
int
push
jl
push
js
or
es
and
imul
aam
add
out
cmp
aaa
rolb
add
movb
clc
add
fdiv
loope
mov
movsl
das
cltd
sbb
das
cmc
bound
push
test
jl
and
or
adc
cmpsl
ljmp
lock
idivb
loopne
add
pop
fs
xor
les
push
xor
jb
add
push
pushf
xchg
add
add
pop
int3
jnp
std
pop
dec
dec
jecxz
sbb
lods
enter
add
lods
or
ficompl
or
add
insl
pop
movsb
add
jbe
es
hlt
mov
cmp
mov
jno
outsl
sub
pop
iret
loop
mov
lahf
aaa
push
popf
inc
or
xchg
ja
sbb
add
or
inc
cli
jmp
sub
fs
addr16
lret
add
or
mov
push
pop
nop
mov
notb
sti
frstor
add
mov
mov
rorl
imul
push
ja
inc
aaa
mov
or
push
sbb
enter
push
pop
mov
ss
mov
sub
aaa
push
jecxz
addb
cmp
mov
dec
data16
aam
push
push
mov
or
incl
add
dec
ret
clc
dec
push
mov
pusha
add
jbe
sbb
aad
stc
xrelease
ja
popa
aam
push
daa
inc
add
push
sub
jns
push
cmp
leave
xor
xchg
inc
add
or
sbb
ljmp
cltd
adc
cltd
test
and
adc
mov
test
cmp
sub
add
movsb
inc
add
arpl
jb
bound
pushw
xchg
pop
mov
cmp
mov
mov
lahf
push
cmp
pop
pop
push
pushf
loopne
leave
cmpsb
or
push
add
add
mov
sti
inc
add
adc
cmc
adc
inc
invd
addb
addb
mov
xchg
push
push
aad
inc
into
jo
loopne
xchg
test
test
hlt
xor
loopne
fs
add
add
inc
add
fdiv
pop
inc
imul
push
inc
add
dec
or
add
add
pop
lret
add
out
add
mov
add
sarl
add
mov
inc
mov
std
cmp
lret
pop
iret
mov
sbb
dec
cmp
orl
es
aam
insb
mov
adc
add
stos
adc
mov
add
add
popf
cmc
pop
movb
mov
add
cmp
arpl
mov
test
popa
push
add
cmp
inc
add
outsl
es
fsub
fistps
out
mov
scas
push
dec
cmp
jns
cld
mov
add
cli
mov
xchg
imul
les
std
mov
ss
jg
shll
xor
jecxz
add
outsb
bound
add
and
aas
push
add
pop
mov
test
loop
xor
xchg
mov
aas
xchg
into
jmp
stos
ljmp
les
xchg
lods
adc
callw
add
xchg
sub
xor
add
mov
sahf
inc
add
dec
pause
sti
mov
xchg
mov
test
sub
test
jno
xor
cld
je
add
mov
mov
push
add
xchg
pop
andl
or
mov
sbb
adc
ss
cld
pop
push
add
scas
push
xor
gs
dec
or
mov
icebp
cmp
inc
inc
iret
je
sub
jle
insb
push
aam
ret
imul
pop
inc
inc
mov
add
dec
rcrl
stc
pop
lcall
fcoml
cmpsl
push
push
adc
out
das
addb
add
cld
inc
sahf
dec
lcall
sub
inc
fwait
push
pop
cwtl
and
aas
loope
inc
add
clc
nop
adc
add
pop
cmp
jns
stos
pop
mov
ja
sub
popa
or
xchg
jbe
sbb
out
out
pop
mov
cmpsl
lcall
and
sub
dec
xor
andl
mov
push
fldcw
push
jmp
mov
es
pop
ja
outsl
ret
lods
daa
lods
pop
ret
cmpsl
xorl
pop
mov
xor
xchg
or
cli
pop
out
fdivrl
in
xchg
inc
add
and
outsb
xchg
mov
add
insb
fdivp
mov
add
push
add
out
fidivrs
adc
inc
add
enter
loope
dec
pop
int3
movsl
mov
add
out
and
lret
lcall
inc
add
jne
mov
mov
and
xor
test
adc
cmp
xor
stos
jecxz
fcoms
sub
jns
mov
adc
mov
add
sbb
pushl
jbe
add
sahf
ds
push
add
mov
addb
repz
popa
mov
addb
cli
inc
add
push
sub
stos
add
dec
mov
ret
aas
mov
jns
out
mov
clc
jl
mov
mov
pop
add
mov
inc
add
sub
dec
xchg
push
test
fidivrl
adc
lods
push
jae
les
sbb
leave
insb
in
fs
sti
mov
jle
sarb
cmp
inc
cltd
ret
jnp
sbb
xor
addb
adc
xor
pop
out
cmp
aaa
jp
inc
fwait
jae
imul
jb
out
add
cmp
aas
mov
or
aaa
dec
jae
outsb
pop
js
xor
xor
out
add
sti
xor
sbbl
pop
addb
add
imul
push
add
sbb
ret
testl
imul
call
fldl
add
ja
add
mov
add
inc
xchg
sub
dec
xlat
rolb
pushf
push
cmpsl
mov
dec
repz
dec
dec
insb
mov
leave
or
mov
inc
push
cmpsb
iret
mov
bound
cli
sub
out
shr
push
scas
js
inc
add
adc
iret
das
movsb
fstps
mov
mov
movsl
ljmp
mov
xchg
push
movsl
push
addr16
hlt
xlat
mov
push
das
shl
popf
dec
lods
mov
fistps
lods
stc
sub
add
mov
mov
addb
sbb
push
mov
std
xor
lock
test
or
dec
or
or
mov
aaa
call
jnp
mov
sub
out
xor
mov
mov
add
jb
and
xchg
cli
jno
or
sahf
push
add
rolb
rolb
rorl
xlat
pop
sub
jb
movb
out
out
nop
loopne
lret
mov
mov
mov
jge
aad
inc
add
lock
mov
add
xchg
and
jp
addb
mov
cwtl
repnz
mov
add
mov
mov
add
inc
add
fdivl
jecxz
sbb
orl
cs
es
xchg
jo
aaa
rcrb
imul
push
xchg
icebp
xor
push
mov
fstps
frstor
xor
lods
shrl
mov
jns
add
fcomps
lret
lret
mov
sub
sbb
fldenv
jp
mov
movsb
cs
test
jae
lret
add
mov
add
xor
xchg
xchg
jae
movb
xchg
notb
mov
push
push
out
jp
jns
pop
mov
ds
adc
mov
jp
gs
cld
fidivrl
sub
push
xchg
cmp
clc
dec
movb
int3
adc
fwait
mov
jle
cmp
add
icebp
mov
ja
aad
adc
repz
pop
jle
push
pop
xchg
ja
rolb
or
imul
imul
adc
sbb
mov
adc
sub
loop
xchg
dec
sbb
test
das
stc
mov
xchg
lahf
cmp
mov
js
add
add
push
ds
mov
sti
subl
adc
jno
ljmp
pop
sahf
jg
out
and
dec
jbe
lahf
xchg
lea
das
pop
cmp
ds
dec
xor
leave
push
lods
adc
sbb
push
add
out
dec
rolb
mov
loop
inc
dec
call
fwait
xchg
and
enter
scas
shlb
xchg
jge
test
pop
add
lret
lds
js
jno
inc
adc
test
add
inc
add
cmp
inc
add
sbb
incb
outsl
iret
cmp
dec
shrl
add
data16
mov
xor
int
fstpl
and
fs
addb
add
sbbl
imul
repnz
jb
dec
mov
mov
in
leave
test
add
xchg
mov
add
cld
popf
lods
xor
imul
addb
clc
pop
in
xchg
push
inc
add
fsubs
sarl
addb
in
mov
jno
xchg
int
fnstenv
and
push
pop
jmp
mov
push
mov
mov
mov
arpl
inc
add
or
add
jmp
cmp
out
add
int
lret
repnz
jmp
fsubrs
sbb
insl
js
imul
pop
lcall
add
mov
cmp
fwait
jo
mov
or
dec
fcomip
mov
fwait
addb
dec
pusha
add
add
xchg
addb
xor
sub
mov
xlat
aas
sbb
mov
mov
adc
aad
push
pop
xchg
mov
add
aam
or
sbb
dec
nop
sub
fimuls
pusha
add
cmovae
or
pop
int
or
cmc
add
sub
loope
in
test
aad
fnstenv
addb
inc
call
adc
std
cmp
adc
std
or
scas
mov
jne
adc
xchg
xlat
je
cmpsb
lret
add
loopne
lret
aad
mov
mov
mov
dec
scas
xchg
call
lret
and
js
pop
sbb
jg
xchg
lea
int3
icebp
ds
cmpsl
dec
in
pop
repz
lods
add
inc
sbb
insb
xchg
sbb
mov
pop
cmpsb
cmp
add
or
and
add
mov
add
cmpsl
jo
xchg
gs
mov
add
mov
dec
mov
xor
incl
add
mov
pop
sub
xchg
ds
mov
xchg
in
add
aam
push
inc
ret
repnz
pushf
es
cmpsb
jo
ficomps
mov
add
aad
int3
pusha
add
lock
push
mov
stc
push
add
inc
add
and
pop
mov
xor
push
add
rolb
sbb
lea
imul
fldcw
jne
xchg
testl
mov
addb
jns
jge
mov
and
push
and
mov
ret
stos
test
lods
adc
shrb
in
xor
sub
mov
fldenv
add
stos
pop
push
lcall
add
mov
mov
dec
fstpt
imul
arpl
jno,pt
mov
add
add
xchg
je
and
xorl
add
fldl
dec
cmp
or
test
subl
shlb
inc
add
lods
push
iret
mov
das
test
xor
cmp
mov
dec
xor
pop
lea
cltd
mov
xchg
rorl
repz
push
pop
lods
idivl
or
out
pop
andl
clc
mov
out
and
inc
add
add
adcl
ret
bound
or
jae
out
cmc
jle
ret
push
in
scas
movsb
je
jge
imul
lods
jno
mov
int
cwtl
mov
scas
cli
pop
push
cld
lahf
addb
push
push
xlat
mov
prefetch
lods
mov
cmpsb
pop
fwait
mov
mov
or
stos
icebp
jmp
dec
shr
out
add
rcl
jg
loope
pop
and
add
sbb
fnstsw
mov
inc
add
jne
addb
icebp
sti
mov
nop
jo
rolb
add
jbe
add
adc
and
pop
jns
mov
add
cmp
sbb
in
add
inc
add
movsb
ror
insb
loopne
jno
fiaddl
add
addr16
pop
clc
imul
sahf
lcall
sub
lock
add
adc
hlt
lods
sbb
push
jle
cwtl
es
stc
jno
sbbl
frstor
addl
int
adc
xchg
push
aam
movsb
mov
out
sub
not
push
sbb
scas
es
inc
add
dec
gs
adc
fwait
addps
xchg
stos
lods
adc
adcl
aaa
in
dec
adc
or
das
test
jl
push
mov
push
fmuls
jg
stos
push
inc
call
sti
dec
xor
xchg
push
pop
dec
mov
enter
add
dec
movsl
test
in
out
add
jp
mov
jp
loope
out
test
jmp
or
adc
xor
test
mov
inc
xchg
popf
sahf
stc
cmp
xchg
sbb
mov
sbb
inc
add
push
cmp
add
add
add
lahf
dec
jmp
mov
add
xchg
aad
mov
stc
out
mov
lods
sti
sbb
rolb
js
ljmp
xchg
adc
ss
js
jns
int
jno
mov
sub
lahf
cltd
mov
push
pop
popf
jnp
rcrb
stos
push
enter
mov
mov
add
sub
lds
cmp
sahf
mov
push
sub
inc
add
outsb
sbb
dec
or
rolb
pop
dec
ljmp
push
inc
add
les
pop
xor
and
movsl
mov
push
cmp
mov
inc
pop
mov
xor
push
pop
into
leave
jle
leave
daa
and
pop
mov
lret
mov
pop
dec
rolb
add
sub
add
add
inc
mov
add
mov
clc
and
in
jle
and
iret
das
sub
pushf
mov
pop
repnz
sbb
addr16
fnstenv
cmp
and
dec
and
out
ret
fdivp
jmp
addb
mov
adcl
xlat
xor
and
inc
xchg
add
or
mov
push
mov
aad
inc
mov
mov
or
test
repnz
leave
sub
fmul
fsts
sti
sbb
lcall
ss
cmpsb
imul
mov
test
scas
or
arpl
sbb
pop
dec
repz
and
add
insb
dec
stos
loope
add
mov
pop
pop
dec
mov
insb
and
jl
lret
jge
jo
int3
in
dec
mov
mov
das
mov
add
scas
add
leave
mov
ss
mov
xor
fimuls
cmpsl
or
loope
dec
out
xor
cmp
push
xchg
add
mov
xor
mul
cmp
xor
aaa
pop
push
cltd
iret
xchg
and
xchg
dec
movsl
and
pop
js
popf
xchg
mov
jns
cmp
movb
stos
jns
xchg
pop
addb
push
xchg
cmp
sub
into
add
and
push
xchg
test
and
or
push
sub
cli
out
mov
loop
addr16
shll
add
add
arpl
rolb
add
pop
adc
add
add
aas
mov
add
movsb
sub
xlat
ret
fiadds
addr16
fnstsw
mov
lods
loope
cmp
jnp
in
push
addb
jae
outsl
hlt
sti
adc
scas
mov
fdivrs
mov
scas
mov
sarl
mov
add
cmp
cltd
es
filds
add
aas
push
pop
adc
js
daa
xor
jne
imul
fsubrl
cli
shll
jecxz
sbb
aad
xor
cmp
out
or
add
adc
divb
jmp
lock
sub
dec
and
inc
add
cli
sub
mov
lahf
xor
fimull
lahf
out
int
and
jbe
test
push
xchg
mov
adc
push
shl
mov
shrl
pop
push
add
push
add
out
or
idiv
ds
cli
sbb
cmc
mov
ss
bound
sub
add
and
cmp
lret
lahf
pop
sub
adc
mov
add
stos
inc
jl
xchg
dec
xchg
mov
test
ficompl
pop
push
mov
sub
mov
pop
cmp
sarb
dec
loop
mov
out
add
sub
sbb
mov
aas
mov
gs
out
pop
cmpsl
iret
push
cmp
or
sub
test
dec
pop
jmp
xor
mov
inc
pop
test
in
inc
call
and
fildl
xchg
mov
pop
lock
dec
in
fwait
or
cld
clc
pop
rcrb
inc
add
mov
push
movb
add
add
out
cmpsl
ljmp
outsl
repnz
leave
popa
ret
movsl
cmpsl
fbstp
test
mov
fs
loopne
in
push
mov
dec
int
add
stos
inc
rcrl
add
ss
movb
pop
nop
sbb
mov
addr16
mov
ret
mov
and
or
jnp
push
stos
xor
and
cltd
in
cli
loop
aaa
sub
in
jmp
sahf
ss
loope
sarl
popf
aad
mov
xchg
adc
xlat
jecxz
xchg
test
xchg
fsubrp
mov
add
push
mov
add
push
jle
add
jbe
jb
lods
adc
jns
add
jne
inc
push
lcall
shl
lea
mov
popa
int
push
xchg
neg
xchg
dec
cmpsl
shrl
loope
cmp
cmp
push
xchg
sbb
fwait
pop
addb
lret
jne
jp
sub
fcmovbe
lcall
adc
push
outsl
stos
cs
fsubrl
inc
add
pushf
call
insl
daa
dec
jb,pn
add
ret
cmpsb
inc
dec
sbb
mov
add
dec
int
xor
jno
add
add
scas
sub
inc
and
inc
jge
add
push
outsb
cwtl
mov
add
aaa
xor
xlat
xchg
cwtl
cmpsb
pop
ja
lcall
inc
add
bound
out
push
icebp
or
pop
pop
test
out
add
cmp
addl
mov
mov
add
dec
mov
sub
lods
mov
add
ja
clc
jp
xchg
imul
pop
mov
movb
add
xor
push
jbe
lret
leave
xchg
inc
add
push
mov
and
pushf
int
add
out
add
popf
add
in
cmp
jo
add
testl
inc
add
add
mov
jmp
mov
frstor
xor
push
test
call
shrb
pop
leave
fbld
jge
lock
pop
xchg
jg
data16
imul
test
hlt
sti
call
add
loopne
fadds
test
dec
jnp
insb
pop
or
add
bound
push
xchg
mov
mov
pushl
std
movsl
data16
addr16
mov
cmp
test
inc
add
inc
add
iret
bound
xchg
jg
sbb
mov
xchg
push
mov
arpl
push
and
add
jno
cld
sbb
mov
imul
mov
add
dec
inc
add
add
movsl
mov
iret
into
cld
add
sub
mov
mov
pop
test
daa
outsb
sti
ret
mov
ds
loope
add
adc
clc
push
cmp
mov
inc
jmp
mov
ds
popa
rcl
push
stos
push
jo
lock
jbe
xchg
out
mov
adc
rolb
sti
sbb
xlat
add
rorl
std
lret
inc
add
adc
or
jl
jns
jle
push
scas
nop
das
xor
rolb
xchg
loop
cmp
mov
test
repz
dec
lods
push
jp
xor
lds
and
cmpsb
pop
adc
add
push
addr16
sub
aam
jmp
cmc
or
jnp
or
dec
popa
mov
add
sbb
add
test
rorb
divl
add
inc
inc
lods
loopne
inc
add
dec
roll
add
mov
daa
mov
mov
xor
inc
xchg
subl
lock
test
adc
aam
inc
addb
jne
mov
xchg
adc
mov
cmp
ds
add
ret
xlat
imul
leave
in
lahf
shlb
lcall
lods
mov
add
add
add
xchg
push
mov
test
xlat
add
add
rolb
sub
imull
fisubl
jle
dec
or
cmc
push
decl
stc
sbb
imul
xchg
sti
imul
and
fldl
imul
dec
jbe
push
mov
add
pusha
add
aad
mov
jmp
outsl
fstpl
cmp
add
mov
mov
sbb
mov
mov
add
mov
push
xchg
pop
cmp
sbb
ret
aam
or
push
jae
push
mov
lds
rclb
jecxz
inc
sbb
jmp
jae
push
mov
push
mov
push
and
pop
in
sbb
scas
adc
pop
dec
sbb
shlb
sahf
rcrl
dec
xor
pop
cwtl
ja
push
mov
dec
insl
xrelease
addr16
leave
dec
sbb
xor
pushf
mov
shrl
add
rolb
repz
pop
ds
add
xchg
movb
pop
hlt
inc
add
das
and
call
cmpsb
sti
add
mov
fildl
movsb
adc
leave
pop
xor
and
insb
out
out
mov
adc
lods
sbb
cmp
lods
out
or
addb
ret
and
jnp
lcall
outsl
cld
test
aaa
xor
inc
add
add
or
lds
jl
add
cmp
and
lea
adc
das
shrb
pushf
mov
add
dec
mov
pusha
add
add
inc
add
jle
mov
adc
ja
jl
mov
stc
mov
pop
movsb
out
push
cmp
repz
adcl
xchg
faddp
add
fidivl
fstl
add
cmpsl
enter
shl
and
xor
inc
ja
dec
hlt
xor
xchg
add
lret
pop
aad
scas
lret
xchg
pop
out
popf
addb
inc
loop
rcr
repnz
push
mov
mov
jne
sti
mov
and
ret
aas
sbb
ljmp
les
scas
mov
sbb
mov
cmp
movsb
scas
mov
movsl
cmp
adc
mov
shlb
add
fs
gs
mov
xor
mov
adc
out
add
lods
add
arpl
jbe
sub
inc
add
mov
pop
pop
sub
std
add
test
jle
mov
mov
ljmp
ja
stc
xchg
push
lea
fcompl
add
or
xor
mov
mov
push
and
imul
js
adc
adc
sarb
sub
shrl
jbe
pusha
add
add
cmp
sub
dec
inc
lcall
xor
dec
popa
adc
fwait
sub
shlb
fs
mov
fdivl
dec
and
lock
clc
pop
dec
mov
mov
xchg
mov
xchg
cmpsb
lock
int
xchg
pop
test
add
es
and
stos
ret
ljmp
jp
addb
insl
xchg
dec
jg
add
add
lret
mov
sub
mov
pop
pop
cmp
xchg
out
pop
out
negl
xchg
popa
les
nop
lods
xor
add
jo
sbb
sub
int3
jmp
cmc
push
xchg
push
lret
xchg
jne
outsb
mov
adc
sbb
aaa
sbb
cmp
pop
mov
add
data16
addb
xchg
mov
iret
dec
in
testl
rolb
movb
mov
mov
sub
mov
or
lods
out
push
pushf
sbb
arpl
ss
inc
add
cld
mov
cld
adc
hlt
mov
jge
pusha
add
cmpsl
in
jbe
lret
aad
mov
jl
xor
push
xor
addr16
mov
out
add
ds
repz
xchg
jbe
fcomi
fsincos
pop
adc
addb
jbe
aam
add
cmp
jbe
and
imul
jbe
out
mov
aad
jo
jmp
add
mov
jmp
cmc
fwait
mov
push
inc
add
cld
into
stos
sub
add
xchg
or
stc
mov
jl
dec
cmp
fisttpl
cmp
lahf
jecxz
addr16
stc
xor
fcomi
jnp
sarb
mov
nop
test
mov
xor
jae
and
add
pop
dec
add
bound
xchg
adc
test
jp
rcrl
cmp
sub
ljmp
xchg
jmp
add
es
and
ret
mov
out
out
test
out
test
js
push
pop
pop
fidivrs
int3
repz
xchg
js
add
out
push
jo
clc
add
xchg
xor
mov
add
pop
movb
int
mov
pop
ret
stc
sub
dec
jo
fld
pushf
jb
fldenv
loope
out
pushf
adc
cmp
dec
add
lret
jg
lret
adc
mov
fdivs
mov
lahf
mov
adc
pop
pop
faddl
data16
sub
add
pop
xor
sbb
addb
add
xchg
dec
inc
ficoms
sbb
cmp
in
pushf
push
cltd
xor
or
leave
sahf
mov
mov
mov
push
adc
dec
pop
movsl
jmp
and
pop
pop
or
mov
and
push
inc
add
mov
stos
pop
or
daa
or
in
popf
cld
es
push
inc
outsb
pop
mov
adc
and
faddl
jo
leave
in
cmp
shrb
jns
xor
inc
mov
xchg
fists
push
and
pop
dec
inc
daa
inc
add
pop
aam
cwtl
jle
cmc
sub
repnz
cmpl
xchg
lret
cltd
mov
jo
shll
ret
in
mov
add
and
les
out
jo
out
mov
leave
add
push
xor
sub
add
add
push
sub
inc
add
sub
xchg
std
and
sub
xor
or
sub
add
sub
stos
movsb
and
mov
adc
jnp
mov
hlt
cmpl
xlat
add
dec
xor
and
stos
mov
es
adc
js
mov
xchg
call
cmpsl
mov
sub
push
xlat
xchg
shlb
in
cwtl
jns
xor
jno
jb
jno
scas
lods
mov
push
mov
mov
addb
push
clc
mov
rorl
out
jg
or
cmp
dec
and
xchg
stos
movsl
ljmp
add
and
push
jle
mov
bound
adc
idivb
ds
lea
add
xorl
test
in
push
aas
dec
cld
jmp
sub
dec
dec
out
push
cmp
into
push
ds
mov
incb
pop
jmp
jmp
mov
inc
add
xchg
jle
xor
or
jb
movsb
or
fdivr
aas
add
std
bnd
or
add
dec
pop
cltd
les
mov
out
xchg
rolb
adc
sbb
adc
xor
add
loopne
ret
sbb
ret
push
clc
xchg
daa
dec
movb
or
pusha
add
sbb
sbbl
and
lcall
dec
push
decb
lret
mov
incl
xor
push
inc
rol
xchg
popf
stos
push
mov
shrl
bound
sub
mov
cmpsl
xlat
fdivl
outsb
sub
and
or
jno
mov
and
movb
xor
add
xchg
mov
int
jns
pop
addb
mov
outsl
into
add
inc
add
insl
into
loope
pop
sbb
lea
push
fst
sbb
les
inc
add
xor
pop
cmp
cwtl
lods
inc
sub
andl
add
add
add
push
adc
pop
mov
push
in
insw
lret
lar
mov
es
out
imul
xor
scas
cmp
hlt
xchg
sahf
pop
in
cli
fdivrl
dec
xchg
bound
rolb
mov
out
nop
mov
push
clc
push
stc
sbb
xchg
jae
shll
sub
std
loopne
cli
stc
cwtl
cmc
lds
cmc
mov
push
das
sahf
dec
cmp
mov
inc
es
mov
add
inc
add
pop
push
pop
adc
mov
or
fimuls
mulb
out
ss
lock
mov
cmp
inc
int3
adc
je
cld
arpl
jle
mov
ljmp
outsl
pop
test
test
push
movb
stos
push
shll
mov
imul
add
std
or
int3
and
xor
xchg
or
push
aas
nop
pushf
popa
outsb
jb
add
mov
icebp
and
nop
cld
xchg
mov
xor
add
sahf
sub
lret
pop
push
add
mov
fcompl
ret
clc
jno
mov
ljmp
ficompl
out
repnz
test
xor
fs
scas
xor
bound
popa
fcompl
add
mov
jae
mov
sub
je
stos
and
lcall
dec
mov
add
das
xchg
sub
and
sub
mov
xor
cmp
sub
add
stos
pusha
add
subl
mov
and
mov
cmp
and
jbe
pusha
add
cmp
pop
push
sbb
add
or
add
xchg
mov
mov
mov
add
fbld
imul
pop
inc
add
add
bound
mov
mov
repz
nop
inc
add
xchg
cltd
and
clc
or
push
add
push
hlt
sbb
cmpsl
xchg
cwtl
mov
jp
movsl
mov
stc
and
push
jnp
fs
and
xchg
shlb
add
lcall
aam
fimuls
push
fs
adc
punpcklwd
pop
divl
loop
jne,pt
dec
push
fildll
jnp
add
fidivs
and
push
negb
sbb
rolb
imul
add
fistpll
inc
add
add
sti
inc
in
leave
inc
inc
pop
je
dec
cld
and
fdivr
jo
les
fsubrs
mov
xchg
push
sahf
je
cltd
nop
mov
push
add
aad
test
xchg
jmp
and
xchg
aad
mov
pop
fistps
push
jno
addb
das
outsb
push
bound
xor
imul
adc
popf
mov
loopne
jbe
dec
adc
add
adc
cmpsb
mov
pushf
dec
out
sub
fwait
adc
rcll
addb
sbb
jp
jo
out
push
insb
sarl
sbb
mov
loope
mov
addb
push
jmp
or
or
insl
jne
jg
add
jecxz
adc
scas
mov
mov
scas
adc
push
and
mov
adc
in
xchg
in
test
pop
rolb
clc
sub
cmp
xchg
mov
dec
scas
mov
add
jbe
mov
jecxz
addb
call
jecxz
in
pop
jns
ret
mov
xor
sub
sbb
push
daa
std
testl
arpl
adc
fwait
fwait
mov
xor
and
push
das
xchg
test
popf
movsb
popf
enter
out
cwtl
mov
jb
xor
aas
push
movsb
push
sub
push
les
xor
pop
lahf
addb
sub
sahf
into
jecxz
mov
mov
imull
leave
or
pop
mov
add
sahf
cmp
lret
jmp
sbb
iret
mov
lret
mov
adc
fsubs
push
pushf
jle
dec
popf
xchg
fs
mov
mov
cwtl
mov
out
or
jecxz
mov
stos
sbb
cmpsl
addb
cld
fwait
int3
aam
aam
das
add
imul
inc
add
movsl
inc
add
cmp
fildl
xor
in
insl
inc
mov
push
xor
test
xchg
imull
add
inc
add
jge
jb
xchg
setg
pushf
jb
das
lcall
adc
dec
push
loopne
xor
cmp
cmp
mov
xchg
mov
sbb
aam
mov
jg
mov
cmp
mov
xor
adcl
lds
shll
add
dec
add
adc
or
cs
jne
scas
lock
xchg
addl
pop
rolb
adc
xor
shrd
fdivl
dec
xchg
fstpl
outsl
dec
cmpsb
lock
mov
dec
mov
shll
sub
cltd
in
fisttpl
or
aad
jo
add
sarb
lods
jl
pop
mov
sbb
lods
mov
mov
mov
jecxz
and
pusha
add
jl
jge
in
mov
add
mov
ficomps
adc
sahf
into
mov
xlat
sub
addr16
dec
adc
pop
test
sbb
mov
ja
roll
das
in
push
inc
into
push
imul
stos
lea
bound
mov
push
jle
das
inc
add
pop
cmp
mov
fmuls
stos
fisubrl
add
icebp
lcall
cmpsl
cmp
outsl
jo
cmp
loopne
jmp
mov
es
arpl
jge
loope
cmpsl
imul
add
gs
leave
cmp
jg
jb,pt
and
sub
or
add
inc
add
divb
sub
add
out
imul
push
in
cmpsb
rcrl
xor
xor
in
add
inc
and
int3
inc
enter
sub
push
xor
add
add
mov
je
xlat
test
test
addr16
jbe
lods
sbb
ss
push
inc
mov
dec
xchg
xchg
xchg
adc
mov
push
scas
inc
cwtl
imul
add
push
xchg
shll
jmp
add
in
fstps
add
out
add
mov
xor
add
ljmp
into
stc
cmp
inc
rcll
add
fidivrs
test
or
sub
pop
xor
add
pop
data16
lods
push
add
mov
prefetch
or
inc
dec
fistpll
mov
lret
scas
in
ss
fcmovb
add
xchg
push
push
fimuls
fs
cmp
addb
das
jmp
xchg
sqrtps
fdiv
aaa
sub
int
xor
js
jle
mov
xor
inc
add
mov
sbb
push
push
push
int
pusha
add
cwtl
ja
gs
cmovl
xor
add
push
jg
jmp
cmp
jmp
lret
out
jg
add
mov
data16
popa
daa
sbb
push
or
notb
or
xor
inc
add
inc
add
dec
or
dec
sub
adc
add
movsl
inc
add
adc
je
lahf
jecxz
insl
mov
fnsave
mov
add
mov
call
add
pusha
add
push
push
mov
xchg
cmpsl
negb
sbb
add
adc
push
lret
push
mov
pop
and
loop
addb
int
add
insb
call
outsb
shl
lret
dec
xor
sbb
add
ficoml
fbstp
and
jno
adc
and
xlat
push
push
cmp
mov
inc
add
add
cmp
in
add
jb
cmp
xchg
enter
or
xor
std
loop
inc
jge
mov
mov
xor
imul
aaa
jle
ret
xor
ficoml
pop
rcll
add
aad
xchg
mov
mov
insl
jae
ret
cmpsb
and
push
fs
xlat
inc
add
sbb
cmp
pusha
add
add
rcrl
inc
stos
in
loope
in
fcmovnb
add
sub
out
fldcw
call
push
add
iret
inc
pop
jl
xor
cli
inc
out
or
call
mov
pop
mov
xor
jb
sti
jp
mov
xlat
stc
ret
scas
xlat
fsts
sub
and
add
rorb
or
neg
int
rcll
and
lods
add
lock
add
fcoml
sub
dec
cltd
sbb
movb
cli
fs
callw
ss
jge
sub
xchg
and
rorl
mov
das
pusha
add
stos
into
test
stos
daa
mov
lret
cmp
shlb
add
pop
inc
add
mov
fbld
add
jbe
add
sub
rcll
sbb
inc
add
push
fisubrs
lods
jmp
ja
inc
add
sbb
add
add
push
jnp
push
add
sub
lods
sbb
add
ljmp
mov
and
push
jmp
lcall
inc
sbb
push
add
add
orl
out
shlb
outsl
iret
rorb
pop
lcall
out
pop
or
pop
jle
hlt
push
int
lret
add
lahf
addb
cs
jmp
mov
and
pop
fcoms
das
mov
and
xchg
addb
mov
jns
mov
push
xchg
pop
ljmp
adc
cwtl
mov
pop
jbe
imul
push
into
fdivrs
lret
xor
ret
jg
add
daa
lret
adc
shll
rep
lods
clc
movb
mov
xchg
mov
enter
setne
push
mov
mov
or
imul
adc
lds
add
pop
test
andl
cmp
xlat
ret
fwait
pop
data16
repnz
add
test
mov
popa
xor
shl
add
daa
popa
lock
xor
add
je
pop
in
pop
add
outsb
gs
add
cwtl
bound
mov
mov
loopne
jge
movsl
xchg
stos
sub
xchg
sbb
scas
push
xor
pop
pop
rcr
movsb
scas
mov
jnp
xchg
lcall
add
pop
adc
or
add
movsl
ror
iret
jo
out
mov
xchg
xchg
std
rorl
mov
lret
in
or
xchg
scas
push
jns
scas
int3
sbb
mov
push
sub
lods
mov
sar
movb
push
into
mov
add
daa
roll
aaa
das
jg
std
add
sub
jns
lods
idivb
mov
jne
and
xchg
das
sbb
mov
xchg
jg
mov
inc
add
cmp
repnz
push
lret
sub
push
sub
dec
leave
movsl
fxch
mov
adc
nop
sub
add
lret
in
add
or
int3
mov
rolb
mov
movsb
ds
add
test
adc
dec
addb
mov
inc
add
push
psubsb
loope
es
mov
add
outsl
fsub
into
and
jecxz
xor
jbe
mov
and
dec
push
test
je
add
lcall
mov
jb
addb
lock
aad
pop
test
std
mov
lret
dec
jge
test
mov
addl
negl
xor
and
sub
add
cmp
out
add
shl
mov
and
add
nop
stos
mov
test
out
push
mov
rcl
lahf
iret
pop
xchg
jae
addb
add
addb
sbb
sub
xchg
das
jecxz
fwait
or
push
mov
dec
mov
add
in
mov
ljmp
popa
aam
push
popa
pop
aam
cmp
mov
cmp
fmul
scas
lret
popa
int
sbb
fdivl
rcrl
mov
push
jg
lret
push
add
aaa
daa
sbb
jecxz
inc
add
pop
cltd
les
pop
mov
inc
add
mov
inc
cmc
int3
out
addb
jne
cmp
adc
pop
jno
xor
stos
pop
push
push
mov
mov
xor
jl
fwait
xor
fs
pop
inc
add
insb
jnp
into
or
fisubrs
insb
icebp
xor
jne
subl
dec
sub
stc
cmp
add
jge
cmpl
out
add
test
mov
imul
gs
cld
and
inc
add
add
insl
stos
cld
and
outsb
int3
xchg
or
mov
inc
add
add
in
mov
cmp
mov
and
cltd
fnsave
dec
add
cmp
mov
cmp
add
mov
jecxz
int
insl
fcompl
arpl
imul
sarb
fsubs
xlat
pop
icebp
mov
mov
add
xchg
rolb
std
fchs
sbb
add
mov
and
daa
dec
ss
lds
or
nop
mov
cld
inc
sbb
fbld
add
add
jae
mov
clc
ds
push
out
mov
cs
mov
aaa
cmp
leave
mov
xor
clc
cltd
pop
pop
or
das
or
adc
pop
inc
add
into
push
pop
fdivrl
add
movsl
and
push
mov
popa
out
cmp
and
aad
push
add
fcompl
lret
push
fmuls
dec
push
into
mov
popa
cmp
add
loope
or
into
and
xor
fs
add
pop
daa
int
ljmp
pop
add
mov
in
int
out
fldt
popf
movb
roll
pop
xor
mov
fstps
in
sbb
mov
bound
push
scas
inc
dec
and
sbb
add
lret
or
pop
mov
xor
xchg
xor
mov
mov
add
enter
mov
sub
addb
jne
mov
jge
in
insb
add
mov
pop
pop
mov
lcall
or
xor
push
add
mov
mov
pop
addb
sub
and
mov
xchg
jne
add
xchg
dec
push
insb
and
stos
fcoml
and
add
lds
or
sbb
fdiv
ss
xlat
out
sub
adc
dec
fstp
adc
dec
je
sub
dec
sbb
sub
fnstcw
adc
sbb
das
fisubl
dec
imul
movsb
js
imul
iret
add
mov
cmpsl
out
add
xor
inc
add
pop
movsl
out
ja
push
jmp
push
cmpsb
sbb
and
outsb
pop
inc
fnstenv
sarb
cmp
lahf
push
aad
aam
dec
sti
or
or
mov
lahf
and
cvtdq2ps
fiaddl
add
sub
dec
movsb
and
lods
xor
jp
ficoms
mov
icebp
mov
jmp
mov
mov
or
enter
inc
add
add
mov
imul
pop
jmp
cwtl
ljmp
push
add
cmpsl
mov
sti
hlt
negl
xlat
add
inc
std
or
aaa
stos
je
adc
cld
xor
mov
inc
add
add
add
pop
ds
xchg
aaa
adcl
fnstsw
add
mov
stos
and
iret
in
lds
cmpsl
je
cld
jne
insb
dec
loope
daa
mov
in
add
mov
cmpsl
stos
addb
ljmp
jno
xchg
cld
in
pop
std
dec
stos
sbb
sub
sbb
cs
decl
es
movsb
mov
movb
inc
add
inc
add
jmp
data16
pop
addl
jno
es
cmc
mov
mov
pop
inc
jg
bnd
sahf
xor
jb
rcll
xor
fwait
mov
bound
cmp
and
lock
insl
jb
cmp
xchg
int3
mov
test
lods
lahf
out
sub
pop
xchg
mov
add
jae
hlt
jmp
push
mov
ret
or
cld
insl
mov
add
into
adc
mov
loopne
fbstp
js
ljmp
js
aad
in
je
dec
mov
jmp
push
iret
jl
sub
cltd
in
cmp
jbe
packuswb
stos
daa
rolb
js
add
sub
lds
add
bound
call
and
adc
das
xor
les
jne
fidivrl
pop
cmp
imul
add
aas
loope
dec
pop
mov
out
lock
movb
xchg
ljmp
test
push
adc
jecxz
repnz
cmc
adc
add
jno
jno
scas
push
cmp
inc
addb
pop
push
nop
mov
cmp
shr
pop
adc
pop
imul
ljmp
pop
test
jmp
aaa
add
movb
cmp
stos
das
adcl
jns
push
sti
pop
push
icebp
shl
add
add
cs
add
out
cmpsb
iret
xchg
jle
pusha
add
and
aaa
mov
shll
sub
cltd
or
add
push
lret
or
push
add
ret
test
add
fistpll
sub
cmp
ds
sub
aad
lahf
aad
pop
ret
mov
add
sarb
call
add
testl
aad
addb
fistps
pop
sub
mov
shrd
cmp
test
add
add
pop
add
sbb
gs
sub
dec
cwtl
stc
stc
bound
mov
movsb
jns
cmc
lods
pop
mov
addb
push
bound
xchg
stos
adc
fld
add
add
pop
sbb
push
in
xlat
out
fs
shr
ret
insl
lea
push
shll
add
mov
loopne
cwtl
out
mov
fnstenv
jae
ljmp
inc
lock
into
insb
fnstsw
adc
xchg
into
jnp
enter
out
pop
mov
or
test
addb
mov
push
jnp
or
mov
cli
xor
inc
add
scas
push
add
jle
lds
xor
pop
repnz
gs
popf
das
add
aam
stos
movb
test
adc
jecxz
and
mov
cmp
push
cmpsl
or
xchg
mov
pop
push
dec
fucomi
dec
inc
add
add
mov
aam
addb
sbb
addps
mov
add
fisubrl
add
in
mov
xchg
xor
loopew
test
cmpsl
cmpsl
mov
add
jnp
add
popf
fldcw
jmp
cmp
ds
fwait
or
je
xchg
daa
xor
sbb
mov
push
cmc
mov
inc
add
dec
fwait
jmp
lods
negl
mov
push
sbb
push
add
repz
cld
adc
inc
js
jbe
jns
rcr
push
hlt
pusha
add
std
sahf
jp
push
add
or
clc
in
movsb
or
xchg
popa
aam
jle
or
ds
fwait
call
insl
xor
pop
push
pusha
add
es
pop
in
mov
adc
int
pop
inc
add
jp
and
add
jbe
jne
lea
cs
sahf
popl
outsb
inc
add
sub
inc
add
sti
jl
mov
cmp
cmovnp
push
push
push
cmp
sub
jge
int
test
sbb
lcall
and
push
push
pop
ss
mov
decl
cmpsl
pop
xchg
mov
jmp
sub
inc
add
adc
in
addr16
dec
shrl
rolb
pop
cmp
mov
add
xchg
arpl
aam
sub
imul
mov
mov
fidivs
jne
mov
cmp
add
or
out
push
dec
jecxz
push
cmc
pop
push
jg
push
mov
call
pop
add
stos
jne
jmp
insb
aaa
out
sbb
fidivrl
popa
loopne
adc
jmp
add
cmpsb
lret
dec
int3
je
mov
aam
add
mov
xchg
cld
pop
repnz
je
add
icebp
pop
and
inc
add
lods
inc
xor
test
dec
mov
mov
mov
out
sub
outsl
dec
adc
pushf
data16
pop
mov
jnp
cmpsl
push
cmp
mov
jae
outsb
popa
inc
mov
cmpl
mov
fnstcw
xchg
aaa
adc
push
pop
jl
jecxz
aad
xchg
jle
insl
ficoms
fdivl
mov
aad
jo
jmp
ret
dec
cs
mov
cmc
pop
xlat
leave
stos
aaa
mov
cwtl
ret
xor
cmp
pop
lods
rcl
cmpsb
std
pop
cmp
inc
add
add
or
dec
mov
mov
cmc
addb
cmp
popf
ja
push
and
or
sbb
dec
shrb
bound
mov
add
lods
mov
roll
xchg
xor
movsb
or
mov
xor
jne
add
sub
aaa
call
jno
push
es
test
or
or
and
push
enter
jp
jae
data16
mov
jmp
jae
fisubrs
add
push
push
aas
push
add
std
in
adc
or
push
imul
sahf
mov
cwtl
addb
outsb
cwtl
sub
stos
pop
lods
adc
loope
pop
push
cmp
sarl
sub
add
xchg
lods
adc
jno
scas
xor
inc
hlt
sub
jno
or
stc
das
into
cwtl
xchg
cmp
lahf
cs
jb
pop
lea
ficoml
orl
jl
pop
and
add
push
in
inc
decb
mov
jns
sbb
hlt
mov
jns
push
sbb
int3
pop
jp
sbb
or
adc
aad
mov
cmp
push
sti
filds
aaa
mov
or
test
shrb
pop
push
push
outsl
xchg
shll
cwtl
and
sbb
or
dec
fsts
icebp
addr16
xchg
mov
push
cs
mov
cmp
cld
push
inc
add
pop
notl
add
jp
sbb
sti
and
fcmovnu
scas
sbb
add
add
add
shl
inc
add
incl
sbb
pop
inc
add
add
fstpl
lock
shll
std
sbbl
dec
and
popa
jg
push
clc
mov
insl
jae
and
add
push
add
les
movl
cmpsb
rolb
or
stc
mov
adc
add
sahf
addb
add
cld
aaa
inc
popf
sbb
rcrl
push
fadds
add
popf
and
sbb
add
cmp
addr16
outsb
inc
loop
add
cmpsl
fistl
dec
inc
jno
shll
outsl
or
sub
add
lret
mov
lock
dec
shrb
push
ds
push
lods
and
cmp
cwtl
sbb
lret
outsl
mov
push
add
add
add
mov
negl
bound
nop
push
push
or
mov
inc
sbb
xchg
pop
add
pop
push
scas
pop
mov
add
adc
popa
jns
adc
adc
push
add
mov
mov
cltd
push
add
loope
sbb
pop
gs
mov
xor
js
stos
nop
data16
cli
loopne
imul
sahf
in
mov
and
sub
adc
xchg
and
jbe
xchg
loop
out
shll
adc
push
push
addr16
add
clc
or
xchg
add
pop
je
jmp
pop
stos
sbb
insl
adc
cmp
std
inc
add
mov
add
mov
sub
cmp
pop
xor
stc
loop
cmp
and
std
addl
and
or
fimull
jne
ds
dec
movq
cli
decb
jl
pop
mov
add
adc
xchg
popl
ljmp
mov
imul
or
aaa
test
sub
fstpt
add
jbe
scas
mov
xchg
das
sub
rcll
xchg
pusha
add
shll
jo
dec
rorb
aaa
jg
sbb
xor
shr
add
imul
pop
aam
cmp
addl
into
pop
inc
add
inc
add
bnd
add
lods
dec
dec
test
test
push
mov
shl
add
xchg
adc
add
jns
test
push
mov
insl
jnp
divl
xchg
jl
xlat
stc
addb
ror
insl
int3
pop
xor
mov
arpl
or
push
mov
mov
add
jge
cmp
push
mov
add
inc
add
dec
lret
out
inc
lods
add
dec
test
mov
pop
or
aaa
cs
cmp
fsubp
fucomip
test
dec
dec
aad
push
jl
cltd
jg
stc
aam
in
jge
movsl
mov
cmp
cltd
xor
cs
mov
inc
mov
mov
push
sub
and
popf
and
cmpsl
sbb
cmp
daa
test
out
popa
ret
sub
jg
rcrb
jge
xor
mov
xor
je
lahf
mov
in
lods
or
rolb
das
cmp
inc
add
gs
sbb
jno
cmpsl
push
rclb
inc
add
aaa
idiv
or
lret
adc
or
aas
sbb
icebp
leave
mov
pop
int3
mov
dec
scas
fnsave
les
xchg
inc
add
add
pop
pop
pop
pop
push
mov
stos
scas
rolb
mov
mov
outsl
or
rolb
lret
decb
dec
adc
mov
cmp
jge
mov
or
mov
insl
movsl
sub
mov
sbb
pop
mov
xchg
pop
addb
adc
jp
pushf
int
sarl
cmp
mov
lret
addb
jecxz
fsubs
sahf
xor
pusha
add
or
jle
or
add
inc
lods
iret
in
addb
cld
adc
lds
cmpsl
stc
sbb
xor
sub
stos
jae
jno
dec
sub
dec
xchg
out
sbb
cli
lahf
cmpl
sbb
push
leave
addl
cltd
cmp
push
dec
jp
add
jnp
cmp
movb
in
sbb
mov
or
fwait
sbb
push
mov
nop
push
mov
andl
inc
adc
pop
rcll
pop
jo
pop
popf
popf
lods
cld
push
add
dec
enter
mov
data16
insb
ljmp
mov
mov
movb
jmp
add
mov
imul
mov
cld
movsb
rcr
lret
push
push
int
jg
pop
push
mov
xor
cmp
stc
dec
faddl
mov
in
fildl
add
js
out
xchg
addb
mov
int3
bound
pop
jae
lahf
rolb
in
push
cwtl
wbinvd
pop
movsl
jg
je
mov
jno
aaa
mov
cltd
mov
push
icebp
sub
cmp
or
jecxz
sarl
jo
pop
pop
movb
push
lds
test
clc
fwait
lea
shlb
stos
mov
sub
call
cmp
add
bound
lcall
lcall
pop
mov
jnp
lea
xor
out
lock
pop
sbb
iret
repz
idivl
les
or
cmpsl
clc
push
leave
add
mov
xor
leave
dec
test
repnz
add
aam
xchg
pop
mov
shr
lds
call
loop
movsb
sub
add
in
inc
add
pop
or
and
int
movsb
cmp
cmp
ret
pop
xchg
push
and
push
add
add
fsts
test
rclw
sbb
arpl
daa
fmul
adc
xor
add
xor
imul
aad
icebp
mov
lods
rolb
mov
add
add
inc
add
push
in
sub
ss
add
sahf
lea
jbe
rcl
aaa
jne
loopne
pop
dec
in
daa
stos
ret
int
mov
jge
test
cld
xor
stos
add
cmc
or
cltd
inc
add
nop
out
mov
mov
add
lock
inc
add
add
bound
pop
aas
jl
push
cmc
sub
cmc
pop
xchg
popa
test
out
xor
das
shrb
popa
mov
addb
repnz
arpl
and
xor
push
pop
pushf
dec
hlt
mov
cmp
add
outsl
mov
filds
shrl
add
addb
out
into
nop
adc
cs
cs
iret
cmp
leave
xlat
adc
push
sub
or
ret
lea
rolb
sub
out
lret
stos
fwait
pop
in
add
and
xor
and
js
jae
mov
add
adc
push
inc
xchg
add
int
add
enter
shll
add
loopne
fnstsw
add
out
data16
xor
les
cmpsb
lds
pop
mov
out
mov
add
ljmp
sbb
jl
mov
pop
pop
outsb
push
test
jg
and
inc
and
pop
inc
add
ja
mov
imul
push
and
xchg
es
fldenv
int
aam
mov
jecxz
test
cld
inc
add
dec
or
enter
mov
fwait
inc
sub
cltd
push
xor
fdiv
je
addr16
in
jmp
cld
jo
outsb
jns
cmp
rolb
mov
adc
push
mov
test
loope
ret
rcrl
add
push
pushf
lea
or
sahf
dec
sub
in
ljmp
es
or
add
out
jge
hlt
loop
pop
mov
sub
add
out
imul
sub
pop
sbb
add
inc
rolb
xchg
add
xchg
scas
clc
sub
sbb
icebp
dec
sbb
mov
adc
mov
sbb
dec
lcall
adc
shrb
inc
cmp
add
fldenv
int
pusha
add
ss
lods
and
fadd
jmp
adcl
ret
mov
mov
xchg
pop
out
pusha
add
insb
jle
or
add
fldl
dec
into
into
js
cld
insb
rcr
shll
push
ss
movb
add
inc
ja
jo
cmp
mov
scas
scas
adc
xchg
mov
shl
leave
jno
rclb
mov
lahf
mov
outsb
adc
cmp
add
cmp
clc
fisubrl
call
jbe,pt
cli
scas
inc
add
aaa
push
imul
lcall
imul
push
cmp
hlt
inc
add
lea
mov
xchg
or
into
insb
adc
sub
jb
add
inc
add
add
jns
mov
lcall
movb
fildll
mov
int
mov
add
fdiv
inc
inc
add
dec
xchg
jge
mov
add
out
sti
ljmp
cmpl
rclb
fsubrs
js
movsl
xor
out
ret
insl
loop
push
movsl
adc
cmp
mov
jo
pop
pop
or
sti
cld
jmp
dec
and
pop
mov
mov
insl
sbb
fldcw
fbstp
sar
cmp
mov
push
lahf
mov
into
dec
sbb
jno
cwtl
mov
cli
cwtl
cwtl
cwtl
addb
das
imul
rorb
push
aam
and
cmp
imul
popa
insl
or
fcomps
rolb
aas
xor
pop
mov
test
and
popf
cmc
outsl
mov
addb
lds
adc
mov
push
pop
jno
sarb
jns
in
addb
add
les
jnp
fs
mov
jmp
or
rcll
inc
add
add
push
add
inc
lret
and
add
or
add
bound
insl
in
into
cmp
xlat
dec
arpl
xlat
ds
dec
push
test
movsb
xchg
inc
xor
add
sub
clc
shll
mov
call
mov
mov
int3
xor
out
push
pop
lret
stos
lds
cmp
addb
loop
mov
mov
sub
nop
enter
je
dec
push
fdivrl
sti
xor
pop
mov
and
mov
hlt
arpl
je
into
pop
mov
mov
int
inc
cmp
mov
push
fists
das
cmp
push
mov
gs
push
add
or
addl
mov
xchg
sub
xchg
leave
mov
add
test
mov
int3
clc
jno
out
insb
jno
add
add
nop
loop
out
jne
mov
dec
outsb
mov
xor
cmp
imul
add
sarb
mov
test
flds
mov
add
jmp
xchg
shl
and
insl
and
cmp
cmc
mov
mov
add
cmp
bound
mov
das
fs
or
dec
not
arpl
lea
jb
loope
and
rclb
mov
add
sti
and
xor
xor
loope
cmc
xor
mov
je
mov
jmp
in
jecxz
add
push
ficoml
xor
mov
adc
xor
lret
cld
outsb
mov
mov
sbb
or
jns
mov
mov
cld
cli
xor
jg
xor
xor
bound
mov
loopne
pop
js
push
jo
jne
push
lds
rcr
mov
mov
mov
add
pop
xchg
sbb
or
popa
sub
mov
cmc
jne,pn
addb
add
mov
jo
arpl
int
jle
add
mov
dec
fidivrl
mov
xchg
sti
xlat
loopne
jge
cltd
mov
fstpt
ret
leave
or
aaa
insl
mov
aas
and
mov
pusha
add
xor
and
pop
dec
xchg
or
xor
arpl
xor
adc
add
stc
clc
dec
sbb
xor
mov
add
ss
shl
enter
and
aaa
addb
rcl
cmp
data16
cli
jmp
xchg
movsb
les
sbb
inc
add
imul
cmpsl
inc
add
arpl
lret
add
jno
and
outsl
ds
fldpi
push
add
cmpsb
bound
imul
and
cwtl
and
testb
outsl
mov
pop
xchg
sub
adc
jo
mov
fistpl
mov
mov
fildll
rcrb
jmp
or
addb
jmp
pop
xor
pop
dec
insb
add
fimuls
clc
aas
das
cmp
and
jae
ljmp
add
add
push
jecxz
pop
pop
sbb
mov
push
sbb
or
test
push
add
aad
sub
sar
ret
movl
mov
aas
jb
add
push
bound
inc
rolb
adc
jmp
add
add
lret
or
mov
inc
addb
in
movsl
mov
push
cmp
sti
pop
xchg
ss
aad
jp
ds
xor
xchg
enter
add
mov
repnz
add
dec
out
mov
add
sub
out
lea
fistl
inc
mov
pushl
mov
dec
repnz
inc
add
outsl
rolb
add
das
fldenv
arpl
leave
cld
hlt
mov
cmpsb
sti
pop
mov
mov
iret
add
or
dec
jnp
add
cmpsl
scas
pop
mov
nop
inc
sbb
fs
repnz
add
push
adc
mov
sub
sub
jo
sbb
add
into
popa
jge
aam
inc
nop
loopne
add
jp
mov
add
xor
sub
mov
add
fdivl
mov
in
add
and
mov
lret
fadd
dec
arpl
test
inc
add
movsb
into
push
cmp
addb
lahf
mov
xchg
and
ficoml
ficompl
jp
mov
mov
stos
dec
dec
add
aad
cmp
or
cltd
pop
sbb
jmp
or
sarb
push
jle
xchg
add
mov
adc
jno
pop
xchg
repnz
stos
dec
bound
cwtl
movsl
scas
push
adc
sahf
sub
push
sbb
stos
repz
mov
imul
dec
pop
push
push
adc
inc
add
or
shlb
out
addb
add
icebp
jecxz
mov
xchg
es
lret
add
jl
adc
jno
repnz
xchg
js
xor
xor
insl
loopne
sbb
fcomi
clc
cld
jl
push
sub
sbb
lret
mov
mov
clc
sbb
jne
lods
or
add
mov
xchg
mov
pop
pop
lret
jl
xlat
es
cmc
scas
lds
les
mov
in
cld
cmc
shll
nop
inc
dec
jbe
and
ja
add
sbb
mov
rolb
add
dec
push
xor
sub
mov
mov
mov
add
jl
xchg
cs
sbb
adc
insl
out
jl
jne
push
rorl
adc
fstps
nop
sahf
push
aas
bound
dec
sub
inc
add
movb
addb
in
lret
and
jbe
ret
dec
adc
into
or
das
jbe
fidivs
jb
icebp
int3
mov
loop
daa
jge
mov
leave
sub
add
mov
int3
in
mov
jbe
push
lret
in
into
paddw
lahf
or
add
jmp
jns
xchg
pop
and
in
fs
testl
lret
pusha
add
inc
or
scas
dec
movsb
stos
xor
mov
stc
mov
test
mov
shrl
jle
rcl
inc
pop
repnz
mov
xchg
dec
mov
cltd
gs
sahf
jle
add
cltd
pop
mov
call
ja
xchg
pop
sbb
mov
pop
mov
dec
aas
cmc
imul
inc
add
add
push
aaa
jg
add
and
mov
pop
ljmp
dec
adc
loop
int3
add
sar
mov
loopne
gs
pushf
stos
mov
add
out
lods
lods
xchg
cld
jns
or
js
test
flds
inc
add
out
es
out
inc
mov
sbb
jmp
jno
je
lea
push
lods
in
push
pop
inc
add
lea
test
pop
fistpll
add
adc
add
xor
dec
addb
push
arpl
dec
jle
bnd
sub
add
sub
mov
mull
xor
jno
jle
fisttpl
add
push
push
mov
adc
xchg
sbb
aad
ret
gs
das
and
inc
add
test
adc
xchg
gs
sbb
dec
push
gs
push
jg
stos
xor
mov
decb
push
add
jp
jmp
mov
add
mov
dec
fcmovu
popa
stc
or
jno
ficompl
mov
jae
movsb
pop
xchg
cmp
push
lods
aad
es
daa
and
test
push
add
out
sbb
fistpl
push
loop
daa
mov
add
push
fs
inc
add
mov
inc
add
call
shrl
out
in
jmp
sub
push
rcll
arpl
mov
fidivs
sub
adc
cmp
pushl
dec
add
mov
cmpsb
enter
xor
aaa
xor
arpl
xor
xor
ja
mov
rcrb
sbb
push
mov
or
mov
or
mov
inc
mov
pop
fisttpl
xchg
loopne
or
fmull
mov
add
cmpsb
mov
jg
inc
add
fisttpll
sbb
movsb
insb
pusha
add
rolb
mov
aam
add
and
pop
lahf
scas
add
lods
mov
jbe
pop
test
lcall
sbb
popf
jmp
imul
out
or
test
push
adc
sub
sbb
mov
push
mov
idivl
dec
and
out
imul
pop
mov
cwtl
ret
aaa
jl
adc
mov
rcrb
in
cmpsb
addr16
mov
iret
repz
aaa
sub
outsb
mov
add
scas
and
in
dec
pop
adc
mov
xchg
aad
fs
icebp
scas
loopne
pop
push
lcall
mov
inc
add
mov
cmc
jmp
icebp
push
cltd
sbb
cld
sub
pop
insl
out
or
inc
add
push
mov
jle
fcomi
data16
dec
js
js
inc
add
testl
shll
push
mov
fs
sub
loope
fisubrl
fisubrs
stos
xchg
inc
aas
lds
pop
pop
pop
enter
cmp
sub
jnp
add
sub
repnz
or
push
push
movsl
add
das
dec
or
repnz
add
add
sti
enter
mov
rolb
jmp
jl
push
dec
aad
out
mov
sbb
dec
fucomp
sti
sbb
pop
mov
dec
ret
sar
sbb
add
insl
jmp
inc
frstor
or
add
add
stos
lret
pop
mov
lds
je
fdivrs
dec
pop
adc
xchg
mov
xor
std
push
push
adc
pop
sti
pop
fidivs
sbb
out
mul
insl
rcr
inc
sub
call
adc
faddl
stc
cmpsb
lock
sbb
imul
dec
mov
sbb
addb
movb
sub
lcall
lock
mov
cli
loope
push
dec
sbb
ljmp
jle
adcl
jne
xor
or
mov
push
adc
cmpsb
sub
cmc
pop
daa
dec
mov
scas
jnp
arpl
add
mov
sub
jg
jnp
test
cmp
pop
inc
add
add
pusha
add
add
jmp
sarl
test
pushf
addb
rep
addr16
pop
push
pop
jmp
gs
push
cld
das
fcompl
mov
rolb
push
pop
dec
cmp
add
rorl
testb
imul
test
ficoms
movb
add
push
dec
xor
arpl
add
rcrb
mov
ret
mov
cltd
xchg
jp
add
adc
cmp
push
stc
and
add
inc
add
adc
rcr
lahf
xchg
das
call
je
shr
ret
jb
in
call
mov
loope
add
in
rolb
loop
imul
and
jns
imul
push
test
jp
mov
pop
add
lods
lods
insl
xchg
lahf
enter
mov
add
test
xchg
nop
inc
and
rorl
mov
repz
mov
cmpsl
mov
add
push
add
outsl
fwait
push
mov
js
js
and
pop
add
push
dec
jmp
rolb
push
push
idiv
push
pop
mov
popf
fisttpll
int
add
insl
setl
jl
xchg
call
hlt
xchg
in
dec
lahf
dec
cmp
call
dec
or
cmp
sahf
repnz
lods
cmp
xlat
rorl
cmp
inc
add
scas
aas
mov
mov
rcll
add
pop
or
lods
xor
sub
push
loop
je
ljmp
sbb
jecxz
stos
les
sub
insb
fisubrl
push
inc
sbb
aaa
es
nop
jecxz
insl
std
enter
bound
inc
aad
and
inc
push
std
aam
xchg
lds
add
mov
cmp
mov
mov
addr16
mov
inc
add
sbb
cmc
das
gs
add
push
imulb
dec
loope
mov
lret
test
outsb
in
xchg
mov
loopne
stos
jne
sub
xor
repz
mov
and
pop
inc
data16
dec
pop
gs
leave
mov
add
mov
test
loop
lahf
mov
and
cmc
jge
adc
imul
sbb
in
scas
fsubrs
lds
or
cli
lods
dec
stos
pop
push
std
js
mov
outsb
add
ficompl
cld
popf
out
sbb
fidivrl
xchg
xor
dec
jl
addb
lret
mov
call
and
test
xor
xchg
cltd
rolb
repnz
mov
fcmovnu
jae
icebp
sbb
int3
pusha
add
cmpsl
pop
add
daa
xchg
mov
sbb
xchg
pusha
add
sti
sbb
mov
in
bound
rcl
cmp
int
pop
sbb
movsl
rcll
xor
dec
or
push
sub
cmp
xchg
scas
and
mov
frstor
jle
jbe
aam
loop
out
pop
jp
add
dec
mov
repnz
jl
jns
mov
insb
jmp
addb
sbb
mov
orps
pop
addb
inc
aas
sti
cs
int3
xchg
notb
nop
into
cli
pusha
add
sub
daa
mov
add
ljmp
and
test
push
jo
dec
inc
mov
and
push
sub
mov
mov
into
and
push
and
xchg
stos
inc
add
jae
adc
pop
out
xor
nop
jmp
scas
mov
mov
add
outsb
out
or
add
movsb
sub
xor
cmp
jg
mov
lock
or
aam
ljmp
add
jl
fistpl
movsl
clc
adc
jo
pop
add
push
dec
imul
imul
or
testb
insl
fistpll
mov
mov
mov
lcall
mov
push
into
neg
push
loop
imull
data16
or
sub
lock
ljmp
es
and
loopne
jg
data16
sahf
sbbl
or
pop
jb
fidivrs
pop
mov
movb
xor
add
mov
cmp
adc
in
xchg
out
xor
mov
mov
outsl
xchg
jmp
mov
popa
in
cmp
cmp
xchg
push
add
or
lret
and
ret
mov
dec
adc
imul
stos
and
push
push
inc
add
adc
xchg
gs
daa
dec
dec
xchg
jge
push
push
or
add
aas
loope
xchg
pop
popa
adc
and
pusha
add
out
and
gs
mov
scas
or
repnz
in
lds
pushf
pop
cmpsl
pop
rolb
movsb
and
hlt
loope
les
arpl
pop
fadds
test
cmpsb
cmp
jp
jp
add
into
div
adc
sub
add
jg
push
stos
arpl
aam
hlt
xchg
out
lret
mov
stos
popa
xchg
xchg
fiaddl
add
imul
pop
imul
adc
push
sar
mov
mov
inc
add
fwait
mov
xor
out
push
les
adc
aad
fisubrs
mov
push
jb
out
sub
mov
add
fwait
xor
push
mov
mov
pop
push
mov
add
jge
jl
test
sbb
mov
movsb
popf
or
cwtl
sbb
push
add
rolb
add
sahf
aad
xchg
jp
cmp
mov
pop
cmp
mov
adc
xchg
add
sub
add
push
insl
das
addb
inc
cld
jle
mov
cs
hlt
mov
or
int
or
nop
aaa
ja
pushf
in
and
sbb
dec
rolb
add
dec
jae
or
push
push
add
pop
adc
add
or
outsl
inc
ljmp
rep
xchg
loope
add
mov
stos
pop
stc
ret
mov
sub
and
dec
fmull
cmp
jge
pop
inc
add
sub
cmpsb
sub
ljmp
cli
sahf
add
test
shr
add
call
add
ljmp
cld
outsb
out
sarb
add
lods
push
movb
jecxz
add
repnz
scas
inc
les
dec
out
scas
jae
jno
int3
fucomip
and
movsb
push
js
into
push
xchg
add
popf
call
mov
add
fs
dec
lret
shll
arpl
push
xchg
add
xchg
pusha
add
add
cld
pop
or
pop
inc
add
sub
clc
repz
lret
arpl
dec
mov
xlat
jbe
xor
enter
in
xchg
repnz
pop
mov
iret
cltd
xchg
test
addb
jmp
sub
fcomps
add
arpl
shr
leave
rcr
add
sbb
imul
mov
pop
aaa
mov
sub
imul
fcmovbe
loop
sub
jno
lds
test
pop
or
lcall
add
movsl
jl
add
pop
movb
ja
cmpsl
clc
jp
add
add
cmc
mov
insl
inc
les
cmp
cs
xor
add
mov
lcall
outsl
mov
movsb
add
adc
mov
or
in
les
cmp
rorl
mov
pop
or
adc
ret
cmp
add
hlt
les
pop
insb
mov
in
pusha
add
clc
xlat
jmp
adc
sti
ret
das
testl
jecxz
or
shl
or
ss
xchg
push
stc
lcall
and
sahf
add
xlat
test
stos
and
bound
stos
lret
xchg
stc
dec
lret
jmp
add
xchg
jbe
lods
xor
cs
mov
mov
aam
push
jo
push
out
into
arpl
jmp
or
xor
leave
fdivl
mov
mov
dec
icebp
and
pusha
add
add
xlat
mov
push
cwtl
addb
inc
add
mov
or
sti
aaa
xchg
jmp
add
addb
clc
lods
lock
pop
add
ja
mov
loop
aad
cli
in
mov
int3
or
addb
mov
repnz
in
or
das
imul
xlat
add
add
sti
pop
dec
mov
rcrl
dec
and
leave
adc
mov
sub
addb
sub
test
push
outsb
sub
pop
cli
pop
and
mov
stos
sbb
jae
cltd
test
pop
push
clc
sub
ljmp
sub
pop
outsl
pop
repnz
test
fsubrs
fildll
or
sar
fcmovnbe
cmpps
add
inc
aam
test
xor
lods
cwtl
push
pushf
hlt
addb
and
cmp
out
sbb
and
lcall
mov
sub
add
xlat
dec
pop
es
rolb
ret
lods
add
aam
xor
add
dec
outsl
inc
add
push
dec
jno
inc
rolb
ret
sub
and
add
sarl
sub
add
cmp
sti
inc
add
ja
xor
push
mov
jbe
mov
iret
out
lahf
add
mov
sahf
inc
lahf
xchg
push
mov
mov
mov
insb
jae
add
mov
push
and
fwait
sahf
loope
jmp
lock
xchg
pop
rolb
and
flds
add
add
addl
roll
insl
stos
mov
arpl
push
cmp
lods
mov
pop
mov
sbb
testb
shl
cmp
cld
and
movsb
pop
lods
mov
add
fsubrl
push
jno
cs
out
add
and
inc
loopne
aaa
push
or
not
xchg
push
mov
add
pop
cmp
lds
sbb
push
imul
add
aaa
push
es
loopne
pop
cltd
in
pop
sub
hlt
enter
jns
and
addr16
shll
imul
mov
ljmp
rcr
xorl
adc
ret
pop
js
inc
jle
leave
in
fwait
mov
cwtl
fwait
ljmp
add
sub
pop
out
addb
cmp
in
fidivrl
jmp
add
mov
xchg
imul
add
scas
movb
lea
and
shlb
sub
mov
sbb
jle
xchg
inc
add
das
pusha
add
jo
pop
test
xor
push
mov
xor
in
das
scas
sbb
inc
add
inc
call
add
stos
scas
jo
es
xchg
pop
rorb
add
out
dec
or
sbb
push
outsl
xchg
dec
imul
out
mov
cmp
add
push
inc
push
xor
loope
loop
pop
stos
adc
add
mov
inc
or
cmp
les
dec
mov
jle
out
sbb
sarl
jne
jno
idivl
fcomip
clc
hlt
pusha
add
lds
add
cld
sub
and
sub
adc
pop
addb
xor
push
sub
ror
adc
loopne
sub
add
xor
into
inc
add
add
add
outsl
dec
rcr
cs
cmp
lea
adc
mov
ja
xor
push
mov
fdivl
in
js
call
add
das
lcall
decl
or
xchg
pop
mov
jg
scas
jo
and
jg
mov
mov
or
loope
jbe
cli
daa
in
mov
xchg
sub
push
sbb
cmp
cmp
pop
jecxz
and
call
jb
scas
mov
test
and
cmp
fcompl
cli
jne
test
std
push
add
sahf
inc
daa
xor
jnp
daa
xchg
enter
inc
add
add
arpl
repnz
popl
pushf
loopne
nop
mov
push
fdivrs
add
shll
add
adc
mov
fstpl
push
pop
mov
add
ss
push
add
xor
mov
ret
inc
add
add
lret
push
das
data16
popf
or
dec
push
scas
pusha
add
addb
das
xor
outsb
mov
sti
dec
push
add
jle
stos
fs
iret
inc
add
xchg
fcmovnbe
jg
repnz
jge
addb
jns
lods
mov
mov
add
enter
out
outsl
ja
xor
and
nop
fidivrs
fistpll
push
jae
mov
xchg
sub
jb
inc
xor
jle
stos
mov
movsl
shl
jecxz
gs
rcl
pop
lcall
inc
in
mov
xchg
sub
fcoms
es
add
cmp
mov
push
pop
adcl
xor
xor
pop
sub
rolb
addr16
movsb
fcoml
adc
jae
jne
push
sub
in
xchg
fiadds
fbstp
add
mov
mov
inc
add
dec
or
cmp
jne
mov
mov
bound
ljmp
loop
mov
dec
lods
iret
jns
inc
add
mov
mov
add
dec
cmp
inc
add
jne
jecxz
mov
mov
insb
xchg
in
arpl
or
mov
mov
testl
add
dec
pushl
sbb
out
jo
into
mov
add
cld
mov
jp
cli
and
sub
bound
adc
cmpsb
sti
dec
or
sub
shll
add
add
lods
add
adc
pop
xor
icebp
out
pop
in
out
inc
xchg
lea
and
pop
es
ret
add
lret
fiadds
jo
add
imul
push
mov
add
mov
mov
dec
or
pop
dec
sub
cmpsb
cmp
jne
cmp
iret
jecxz
dec
xor
pcmpgtd
mov
std
movsl
cld
mov
shrl
divl
xor
sub
aas
cmp
add
ds
add
rolb
add
mov
jb
les
cmpsl
aas
aad
imul
cs
outsb
or
add
mov
and
arpl
jne
add
stos
fmul
insb
mov
test
es
add
mov
clc
jmp
and
pop
adc
out
sbb
mov
popl
stc
pop
jmp
fiadds
mov
pop
pop
push
iret
push
nop
xchg
push
push
sbb
add
outsl
lods
jg
aaa
jo
cmp
call
sarb
xor
insl
mov
repnz
loopne
lock
mov
movsb
cmpsl
and
jp
add
jmp
notb
dec
lods
jb
jns
push
jecxz
sbb
leave
push
or
xlat
and
popa
mov
sbb
dec
cmpsl
add
add
fmull
movsl
les
mov
leave
fdivl
lods
lock
popf
dec
and
push
ss
movsb
aad
mov
popf
scas
and
pop
push
jmp
fs
add
push
pusha
add
add
popf
in
out
in
cmp
pop
iret
rcrb
mov
loope
mov
stc
push
lea
fsubrp
test
adc
fstpl
and
push
daa
lock
enter
xchg
faddl
push
or
leave
dec
aaa
repnz
daa
xchg
and
jae
inc
add
cwtl
fwait
xchg
pop
add
dec
mov
bound
inc
mov
sub
imul
adc
jb
jge
or
mov
les
inc
add
pop
and
jns
lcall
popa
lahf
mov
pop
lods
fst
movaps
out
mov
hlt
xor
sub
jb
mov
lret
sub
add
dec
xchg
cmpsl
mov
insl
hlt
and
dec
mov
xlat
imull
nop
leave
pop
add
adc
insl
fs
iret
dec
arpl
aam
mov
movb
xlat
pop
fcmovbe
sbb
into
jecxz
and
jge
add
push
and
cli
arpl
shrl
xor
std
xchg
movsb
mov
subl
add
mov
je
jbe
xchg
arpl
jnp
xor
aam
mov
js
je
repnz
cmp
aam
dec
dec
cmp
or
dec
xor
xchg
and
jb
mov
sarl
jmp
jno
xchg
loop
inc
add
cmp
aad
mov
xor
inc
add
sub
lret
pop
mov
mov
sti
pop
mov
cmpsl
xor
ljmp
mov
or
cld
jle
adc
push
mov
sub
inc
inc
add
enter
enter
xor
pop
js
or
sbb
sahf
or
pop
jns
adc
jnp
add
scas
mov
pop
aad
data16
jbe
push
int3
adc
mov
mov
add
mov
pop
mov
and
mov
dec
mov
clc
sbb
and
es
sbb
sbb
cmp
test
test
rcrl
outsb
mov
add
jmp
push
in
loopne
ja
or
sub
popf
or
jbe
add
jecxz
mov
mov
leave
outsl
in
add
add
sbb
mov
dec
lods
dec
int3
pop
ret
xchg
popf
outsl
pop
jne
insl
jno
add
sub
or
loopne,pt
add
push
add
or
iret
cwtl
out
jl
dec
lret
inc
add
push
int
adc
dec
dec
dec
out
xor
pop
lcall
add
gs
add
xchg
cli
jns
add
mov
jo
cmp
add
ficomps
xchg
inc
mov
pusha
add
cmp
add
or
lods
xchg
dec
mov
add
scas
popf
stos
repnz
testb
push
imul
negl
mov
and
ljmp
add
pop
mov
or
add
cmp
data16
jbe
mov
subl
inc
add
push
cmp
adc
imul
sarl
add
mov
lds
movsl
movsb
adc
lods
sub
iret
outsb
push
adc
push
mov
push
into
push
mov
bound
dec
mov
cmpsl
in
in
or
xlat
push
xchg
lea
aas
jecxz
cwtl
mov
push
in
sub
xchg
fwait
mov
cmp
fwait
leave
fisttpll
xchg
or
adc
cmc
popa
push
adc
movsbl
ljmp
enter
xor
mov
push
rolb
add
add
sbb
sub
dec
xchg
hlt
or
xor
xor
push
add
mov
arpl
clc
pusha
add
mov
add
in
aas
adc
mov
addr16
jb
and
push
in
dec
movsl
dec
rcrb
push
sub
and
xor
mov
jle
int3
lods
mov
in
rcrb
leave
push
pop
add
xor
call
mov
imul
addb
fcmovnb
xchg
jl
in
stc
imul
add
test
add
or
cmpsl
int
mov
nop
out
dec
popf
out
sti
and
inc
pop
pop
and
add
lahf
fmulp
sbb
add
xor
xor
rcll
sub
nop
cli
in
or
mov
add
push
outsl
les
repnz
mov
inc
add
xlat
mov
movsb
cwtl
jb
pop
mov
or
xchg
int3
xor
addb
popa
repnz
scas
pop
outsb
cmp
rolb
fbstp
mov
push
add
sti
cmp
scas
les
out
pop
fwait
js
pop
sbb
into
push
pop
sbb
aad
mov
add
cmp
test
cld
jle
fsubp
rcll
add
inc
sub
pop
xor
notb
aad
dec
mov
stos
int
add
pop
pop
jmp
add
ficompl
xchg
push
aad
and
jge
xchg
sbb
add
cs
lret
add
dec
xor
pop
or
add
out
pop
add
mov
js
add
mov
mov
lahf
jbe
ret
xor
push
xchg
sub
inc
add
inc
mov
xchg
push
pop
cld
adc
add
xchg
push
dec
ret
into
dec
cld
enter
add
js
bound
mov
out
push
repnz
imul
pop
shll
add
add
mov
add
repz
test
sbb
icebp
repnz
out
cli
push
mov
xchg
or
ja
fnstsw
cwtl
cmp
add
sbbl
in
mov
sbb
adc
or
mov
push
addl
in
push
jae
dec
or
into
jg
pop
cmp
sbb
mov
mov
addb
mov
lea
shll
dec
dec
cmpsb
pop
mov
adc
stos
jnp
pop
sarl
add
dec
imul
add
lods
cmp
lea
add
add
and
add
push
pop
movsl
test
mov
xchg
mov
ret
cmp
add
in
aaa
lahf
test
js
add
mov
ret
xchg
call
daa
stos
xchg
sub
cwtl
add
loope
fwait
cmc
push
shll
sbb
mov
adc
addl
mov
rorl
into
test
add
pop
sbb
add
xchg
cmc
and
jo
lds
rorl
movb
loope
ljmp
pop
inc
aad
cmp
fmuls
leave
fistpll
push
add
mov
xchg
jg
cmp
xchg
addb
jp
movsb
dec
call
fs
push
cmp
inc
add
sub
iret
fstps
mov
shll
mov
jb,pt
jne
adc
add
lret
add
sbb
adc
lods
daa
pop
out
mov
lods
jmp
inc
add
push
jmp
in
std
add
cmc
add
test
sbb
clc
xchg
notb
movsl
hlt
js
cmp
andl
add
js
xor
jb
es
jns
mov
dec
rolb
cmc
mov
ja
fstpl
in
test
popf
aam
xchg
pop
inc
add
in
std
push
push
jmp
rolb
pop
mov
jbe
push
arpl
je
cmc
rcl
mov
in
cmc
dec
imul
sub
xchg
ds
adc
add
movsl
lock
mov
mov
jbe
sbb
out
mov
mov
xlat
pop
jne
mov
adc
cli
je
push
sbb
sti
pop
es
sub
fsubrl
popf
cltd
adc
add
push
xor
or
xlat
xor
fstpl
in
in
movb
ret
add
cmc
fadds
dec
lods
in
ljmp
add
fidivl
mov
rolb
pop
repnz
cwtl
dec
mov
aam
arpl
cmc
push
jb
sahf
jns
add
mov
sahf
ja
cmc
addb
pop
cmp
jle
fcomps
jns
mov
jecxz
xor
enter
adc
xchg
es
cmpsb
mov
dec
addb
jne
xchg
add
jmp
addb
dec
les
js
arpl
or
xchg
inc
add
sub
in
xchg
mov
add
arpl
mov
sahf
mov
pop
stos
mov
mov
cld
cmp
fwait
dec
jl
jl
vpmulhuw
add
scas
xchg
mov
rol
jns
pop
mov
movsb
xor
inc
add
sahf
das
add
cmc
cmp
xor
adc
popa
push
pusha
add
cmc
ds
sbb
add
mov
lods
addb
mov
pushf
lcall
clc
pop
sub
sub
pop
sbb
add
mov
imul
xor
stos
pop
jl
xor
mov
lds
int
add
sarl
xor
xchg
bound
pop
pop
and
push
add
sti
in
mov
jl
filds
mov
fidivs
int3
scas
mov
in
lea
iret
xchg
sbb
cmp
addb
in
push
mov
pop
daa
bound
cltd
int
cmp
repz
add
xchg
rol
fisubrs
adc
aaa
xchg
in
mov
lahf
pop
in
xorl
dec
je
xchg
mov
lea
loopne
jo
push
mov
ljmp
jae
popf
jbe
les
sub
dec
inc
adc
add
adc
mov
sub
push
sbb
push
shrb
add
mov
sbb
sbb
jns
mov
scas
data16
dec
mov
data16
and
push
faddp
add
push
in
test
push
mov
rorl
pusha
add
and
test
sub
push
outsl
jno
sub
push
in
mov
pop
cli
ret
mov
sub
in
das
gs
xor
test
ljmp
std
pop
addb
mov
scas
movb
in
mov
testl
shrl
das
js
xor
rcrl
idivl
adc
cmpsb
mov
pop
out
jle
addb
repz
out
mov
movb
loope
lret
shll
decb
jl
or
out
push
mov
and
data16
and
add
mov
out
sub
outsb
clc
clc
mov
pop
int3
mov
pop
xchg
add
or
das
xor
push
testl
das
lods
inc
mov
test
or
and
xor
dec
jge
xchg
or
test
inc
add
std
sbb
addb
lret
repz
sbb
cmp
lds
insb
xor
daa
iret
jge
int3
daa
aaa
push
cmp
inc
mov
xor
out
xor
dec
mov
repnz
in
mov
jg
mov
mov
add
and
mov
lret
ffreep
add
push
shlb
sar
popa
lods
ds
in
addb
icebp
cld
and
lret
ljmp
addb
add
cmp
data16
push
jmp
add
mov
mov
scas
inc
add
fucomp
cwtl
sarl
rcrl
lds
add
js
stc
jecxz
mov
cli
jae
inc
test
add
pop
mov
pop
pop
add
pop
jp
popa
xchg
daa
jbe
into
cs
das
cmp
xor
sbbl
out
gs
push
add
fstp
pop
fildll
xor
jecxz
pushf
xchg
jecxz
inc
jmp
movsb
inc
add
add
add
pop
sti
push
add
pushf
pop
cli
jne
sbb
xchg
mov
jnp
addb
addb
add
sbb
pop
and
movb
movsl
inc
add
movsb
push
dec
in
xlat
jl
sbb
loope
mov
dec
push
jl
xchg
mov
mov
into
xor
arpl
mov
and
pusha
add
stos
add
cwtl
sbb
dec
or
push
mov
adc
enter
iret
inc
iret
imul
add
push
add
add
sbb
ljmp
rcrl
outsl
jo
outsl
cmovb
hlt
not
cli
mov
pop
inc
xchg
inc
icebp
mov
mov
pop
pop
or
call
ss
lret
fs
aam
arpl
xchg
push
in
cmp
addb
mov
add
popf
mov
pop
popf
test
and
jl
inc
add
sbb
xchg
push
mov
and
sub
xlat
add
cli
ss
aaa
in
inc
add
mov
jns
cs
shl
mov
add
arpl
add
data16
fdivs
xor
jge
mov
cmp
addl
mov
arpl
mov
into
out
pop
jnp
fsubp
cld
pop
adc
jae
subl
mov
inc
add
mov
scas
xchg
insl
mov
add
scas
popf
push
cs
push
ss
daa
insb
addb
mov
push
stos
lcall
jno
add
imul
adc
ficoms
mov
fsubrp
bound
lods
jns
pop
inc
test
xchg
lds
mulb
mov
inc
imul
xor
nop
aas
jno
jne
dec
loope
addb
cmp
and
leave
pop
movsb
mov
cmp
or
sbb
add
push
movb
inc
sub
add
inc
mov
add
add
inc
add
mov
inc
aam
pop
jne
pop
dec
mov
addr16
add
add
rol
in
addb
mov
fadds
out
add
inc
add
mov
ss
or
aaa
stc
jo
jecxz
cmp
nop
dec
adc
and
stos
pop
adc
call
clc
adc
sbb
mov
add
add
loope
add
xor
out
mov
push
mov
rolb
mov
imul
stos
mov
jo
fcomi
adc
pushf
or
xchg
cmpsl
dec
pop
xor
cli
sub
sub
jl
xlat
push
lods
inc
add
dec
mov
scas
jecxz
fisubs
mov
jne
fwait
cmp
dec
jl
sbb
sar
cmpsb
mov
jp
jo
pop
lods
inc
inc
or
add
add
cld
jne
mov
add
scas
sti
nop
cld
push
add
scas
add
adc
fs
mov
scas
imul
roll
jo
ss
push
mul
stos
push
lock
rolb
push
xchg
iret
nop
out
inc
add
pop
xchg
xchg
lret
mov
gs
jge
loopne
mov
push
jns
cld
cmpsb
mov
xor
movd
push
lock
pusha
add
mov
dec
dec
cwtl
les
ret
lods
and
xor
stc
pop
bound
int
dec
cli
xor
inc
popf
bound
and
add
adc
and
cmp
scas
sub
out
out
or
mov
add
add
jle
out
es
add
loope
push
in
stos
xchg
jne
ret
std
dec
imul
scas
mov
fstl
pop
ja
xchg
dec
insb
mov
add
cmp
mov
and
pop
cmpsb
xchg
or
or
add
mov
add
mov
xor
fstps
arpl
add
add
pop
sub
add
addb
daa
inc
add
ja
sbb
or
shlb
lcall
add
add
push
js
cli
outsb
rcll
mov
adc
cmp
xchg
mov
inc
insb
add
inc
pop
lock
push
test
sti
jl
dec
repnz
test
cmp
add
inc
add
add
cmp
call
fistl
ja
out
add
shrl
or
mov
popa
ds
sar
cmp
jle
insb
fisttps
mov
rcrb
jmp
mov
pop
xchg
in
mov
adc
push
pop
jnp
sbb
js
add
jb
pop
shrb
jbe
pop
addr16
mov
sti
nop
pop
pusha
add
lock
add
js
mov
cmp
nop
sub
out
lea
jb
mov
mov
mov
int3
mov
mov
add
adc
add
loop
lods
mov
in
adc
aam
sbb
inc
ret
pop
push
and
pop
fwait
adc
lahf
mov
add
jg
inc
add
push
icebp
nop
subl
mov
jbe
cmp
push
lret
test
je
sub
movb
mov
les
nop
dec
pop
lds
je
lahf
xchg
ds
lods
xor
mov
leave
outsl
mov
push
push
pop
add
sbb
add
pop
test
jb
mov
cli
test
add
fiadds
push
mov
pop
push
in
jecxz
xor
movsl
test
rcrb
cmp
xor
movb
mov
ljmp
gs
cmp
jg
mov
push
cld
dec
addb
insb
addr16
outsl
out
rcrb
fucomip
xchg
test
xchg
movsl
lods
mov
cld
mov
daa
mov
inc
mov
and
scas
inc
add
xchg
xchg
push
push
xor
dec
stos
lahf
mov
add
push
ror
inc
fwait
iret
pop
fmulp
outsb
in
dec
jl
inc
lds
push
xchg
push
loopne
pop
lcall
add
adc
stos
flds
sub
ljmp
cmp
lcall
adc
aas
in
mov
imul
js
xchg
mov
add
les
xor
imul
sbb
imull
jge
inc
add
add
rolb
pusha
add
lret
mov
imulb
or
xor
pop
jae
push
mov
mov
pop
inc
sbb
push
ret
dec
cmpsl
mov
outsb
pop
movsl
rolb
std
add
cmp
inc
mov
add
pusha
add
inc
daa
push
inc
add
add
cmp
dec
aas
mov
push
loope
rclb
sub
mov
push
inc
add
push
add
js
pop
outsb
mov
push
imul
add
jp
rolb
data16
cmpl
cld
rcl
les
push
shll
add
testb
cmpsb
cltd
mov
mov
inc
add
xor
jmp
in
dec
in
jo
add
std
jp
dec
enter
loope
loop
mov
fdivrs
cmp
cmp
add
sub
dec
ret
lcall
out
sbb
mov
xchg
push
in
push
and
add
call
jl
movb
inc
and
jl
jne
xor
xlat
push
add
add
dec
mov
pop
xchg
xchg
daa
cld
adc
imul
mov
addb
xor
adc
mov
shlb
icebp
inc
add
mov
dec
in
aad
fldt
mov
jg
push
lods
mov
fmull
add
aam
negl
cmc
mov
and
rcrb
cmp
adc
shrb
subl
test
adc
add
or
mov
ds
push
inc
add
in
hlt
sbb
addb
scas
movb
mov
cs
xchg
xor
adc
xchg
neg
cmp
xchg
mov
movb
aad
inc
inc
in
rol
add
ret
cmpsb
or
loope
addr16
xor
mov
push
dec
clc
enter
sub
mov
xchg
cltd
outsb
cs
pop
sbb
call
adc
and
push
adc
add
cli
dec
icebp
push
xchg
jne
add
push
mov
testl
and
movsb
push
sub
call
jecxz
mov
add
xchg
stos
cmp
or
cmp
popa
xchg
and
fdivr
nop
mov
xchg
push
push
and
add
clc
pop
adcl
adc
add
pop
adc
inc
sbb
sbb
xchg
mov
aad
test
jg
add
stos
repz
das
or
fcompl
xor
jle
sbb
sub
xchg
scas
dec
in
adc
les
repz
mov
mov
sbb
inc
add
xor
cmpsl
test
mov
or
or
fiadds
add
int
fucom
jl
sbb
push
addb
xor
add
jle
div
popf
mov
add
popa
push
pop
push
xchg
vcvtpd2psy
fmul
mov
mov
cmp
dec
sbb
pop
in
pop
out
rolb
jp
cwtl
sbb
addb
xor
out
out
fsubs
fwait
sub
pop
jb
aad
bound
jge
out
jb
push
lods
bswap
xor
add
pop
jbe
imul
pusha
add
pusha
add
popf
xchg
out
aad
jle
jle
mov
pop
pop
insb
int
pop
insb
adc
add
add
xchg
dec
scas
in
loopne
mov
adc
pop
sbb
push
dec
loop
mov
loop
fnstenv
sti
xchg
xchg
aaa
inc
mov
lea
add
mov
add
fsts
xchg
jae
push
ja
lods
and
pop
ja
paddw
add
cli
add
sub
and
inc
add
stos
lea
movaps
and
loopne
jge
add
arpl
xor
movl
mov
add
outsl
addb
mov
add
outsb
push
mov
fdivp
dec
sub
sbb
push
and
rolb
sub
pop
testb
cmpsl
pop
sub
sbb
mov
cltd
add
mov
sbbl
nop
and
add
lahf
sbb
add
and
lods
push
in
test
sub
les
stc
addb
fistl
test
add
jecxz
add
and
mov
mov
mov
sbb
pop
sub
test
bound
lock
sahf
pop
or
inc
add
movb
adc
push
fidivrl
call
rorl
lcall
jecxz
push
imul
inc
add
fmulp
mov
aaa
js
mov
in
inc
add
lods
lret
mov
dec
pop
out
loope
sbb
popf
aam
std
mov
fnstsw
pop
aas
sub
add
outsb
pop
xor
and
add
xlat
jl
roll
add
sub
or
pop
pop
push
jne
rolb
dec
inc
add
add
scas
xor
jl
mov
add
jb
ds
gs
sub
cmp
shll
or
inc
add
xchg
add
xchg
addb
ds
lret
lock
pop
arpl
adc
movsb
lods
inc
fidivs
add
push
sbb
dec
adc
xchg
stos
scas
into
insb
rolb
mov
insb
lret
add
test
gs
lock
movb
mov
aad
cli
dec
mov
inc
sub
xchg
lret
inc
add
dec
sti
push
popa
push
jmp
push
xchg
mov
add
js
jmp
xor
jg
mov
int
sbb
fldt
jae
sahf
pop
insb
xor
lahf
aad
jae
mov
addr16
popa
movsb
push
xor
push
mov
jns
xchg
pop
and
inc
add
cwtl
jne
add
xchg
pop
test
adc
adc
sub
je
cmp
pop
pop
xchg
rolb
mov
fprem
push
add
fimuls
aam
dec
jg
sahf
pop
idiv
push
pop
cmp
nop
lret
mov
fadds
add
outsb
inc
add
mov
cmpsb
pop
or
aaa
movsl
and
lret
int
and
popf
shll
sub
xchg
cld
sahf
pop
mulb
dec
ja
and
sar
cli
sti
mov
add
fldl
and
xor
push
add
mov
add
addb
push
mov
daa
adc
nop
scas
mov
mov
mov
lahf
je
push
mov
lea
inc
pop
cmp
jge
jmp
add
je
add
xchg
sbb
push
push
int3
lods
dec
in
push
jl
lahf
scas
pop
jb
or
in
je
push
jnp
xchg
jb
je
xchg
cmc
adc
out
ret
je
dec
icebp
and
xchg
cmp
mov
js
adc
push
stos
xor
filds
das
imul
and
aam
pop
std
test
jecxz
mov
add
inc
add
mov
inc
add
js
jb
enter
cwtl
mov
cmc
push
je
or
in
lock
mov
xor
dec
sub
cltd
lds
rcrb
pminub
xchg
add
mov
mov
std
dec
aad
jo
and
aas
cmpsb
mov
into
dec
xchg
fidivrl
outsb
dec
push
add
adc
or
outsb
addr16
mov
mov
jl
pop
mov
pop
inc
add
data16
scas
insl
adc
ss
mov
xchg
pop
ja
add
data16
in
dec
mov
lods
fwait
lods
je
rolb
pusha
add
jne
popf
xor
incb
add
xor
jbe
bound
sub
jns
add
mov
jge
add
inc
add
sbbl
push
push
add
outsb
cmp
mov
shrl
addb
call
dec
cmp
and
repnz
dec
lods
cmp
jno
aam
cs
adc
push
or
cltd
pop
mov
fdivl
xlat
jns
xor
jnp
mov
cmp
inc
add
add
jns,pn
dec
scas
clc
mov
pop
push
and
adc
cmpsl
push
and
adc
mov
mov
sbb
cmpsl
cmp
imul
push
mov
or
xchg
mov
aam
mov
mov
imul
mov
mov
subl
mov
lds
add
pop
fisubs
jecxz
xchg
test
dec
bound
sbb
int3
or
mov
or
mov
test
push
sarb
rolb
pop
lret
jns
lea
mov
add
ficoms
in
loop
test
pop
test
xor
add
add
in
inc
add
out
repnz
jne
test
mov
ret
in
push
sub
sbb
or
xchg
cmpsl
scas
fdivrl
insb
and
jne
adc
inc
lds
das
or
add
cmc
popa
mov
pop
lds
or
mov
in
push
test
sub
enter
push
bound
xlat
fstps
pop
sub
cltd
repz
cmpsb
mov
jae
pop
js
icebp
add
test
ljmp
cmp
ds
mull
mov
test
mov
adc
and
outsl
mov
insb
into
pop
xchg
fiadds
incb
shll
xchg
mov
or
add
mov
xor
test
mov
inc
add
cmp
les
cmp
add
mov
jmp
and
mov
pop
dec
addb
jecxz
push
mov
rolb
sbb
mov
add
ss
or
sti
inc
stc
iret
sbbl
push
jae
xchg
add
arpl
dec
mov
sti
dec
icebp
push
cmp
ja
sti
pop
fbstp
add
jp
stos
int3
adc
push
add
sti
pushl
lahf
ret
push
mov
out
jbe
ror
mov
pop
popa
fs
outsb
mov
add
push
ret
into
adc
mov
push
xchg
icebp
lock
fmul
and
dec
mov
adc
mov
cmp
repnz
push
aas
jno
add
stc
nop
scas
jmp
or
add
cs
out
ss
sub
nop
push
sbb
aaa
dec
push
add
jl
cmp
leave
add
jb
popf
xchg
mov
iret
adc
adc
pop
sbb
loop
movsb
push
pusha
add
add
mov
jb
dec
adc
push
sahf
jne
je,pt
mov
sbb
inc
add
dec
mov
inc
add
xor
hlt
les
cltd
in
das
pop
fdivl
imul
dec
xchg
push
add
and
ja
adc
mov
mov
scas
rolb
in
outsl
jecxz
jno
or
adcl
shll
out
pop
add
stos
cmp
sub
je
imul
loopne
leave
jno
dec
mov
ss
push
cmp
mov
in
movsl
mov
add
mov
mov
test
sbb
scas
jle
or
xchg
in
nop
inc
add
div
adc
mov
lods
stos
mov
add
lods
ret
add
int
add
pop
mov
mov
in
xor
pop
cmp
aad
repz
mov
cmc
pop
mov
pop
push
push
rcll
mov
je
pop
lahf
dec
adc
push
test
mov
popf
mov
add
sti
mov
call
mov
sub
mov
stos
xor
xor
sub
rorl
mov
mov
dec
out
and
dec
add
mov
sbb
outsl
cmp
lret
dec
test
lcall
inc
mov
mov
jb
add
fisubrl
pop
and
mov
les
and
sub
ljmp
mov
add
cmpsb
cmp
psllw
xor
addb
and
scas
jne
push
popf
jb,pn
movaps
int
xchg
pop
test
sub
mov
cmp
sahf
jb
or
sbb
add
out
jge
mov
mov
insb
fstps
ja
add
add
jge
mov
out
cs
dec
pabsb
inc
add
mov
and
clc
enter
call
in
sub
push
out
add
mov
mov
xor
in
inc
add
inc
add
fisubs
sub
les
or
push
movsl
addb
add
and
icebp
lds
and
add
out
and
add
rol
add
jnp
cmp
add
dec
movb
mov
jmp
dec
adc
in
movsb
les
sbb
mov
jmp
out
sti
arpl
adc
add
das
das
cwtl
xchg
fimuls
xor
jnp
mov
cmpsb
sub
add
ret
mov
aad
sti
pop
cmpsl
jae
repnz
test
mov
add
mov
movb
lods
gs
inc
mov
jae
or
add
scas
sbb
bound
jg
mov
ljmp
shll
push
jo
push
lret
xor
push
or
call
imul
fldcw
mov
inc
aam
push
stc
sbb
test
cmp
dec
cmp
xor
sub
mov
addb
inc
add
imul
into
mov
cli
sahf
push
das
in
push
sar
lcall
adc
xchg
addr16
sub
repz
stos
push
rorl
adc
add
push
xchg
test
mov
sahf
xor
ja
imul
add
ss
add
in
loope
jl
and
adc
push
xchg
or
cmp
add
loop
scas
add
and
das
jle
mov
flds
jo
mov
mov
inc
add
or
ljmp
bound
xchg
pop
dec
inc
lret
mov
movb
pop
mov
push
ret
cltd
mov
fmull
cmp
push
les
iret
imul
aad
jmp
pop
pop
sub
aam
cmc
in
cmpsb
cs
mov
push
and
int3
jnp
sbb
xor
cmpsl
mov
xchg
push
cmpsl
or
outsb
rolb
pop
gs
adc
insb
scas
sub
push
jb
fbstp
in
into
addb
add
sub
dec
and
sub
mov
or
fisttpll
scas
xor
sbb
jbe
test
sbb
mov
xchg
push
cld
les
jae
mov
popf
dec
dec
sub
add
and
dec
pop
or
mov
int3
and
out
push
mov
add
cmp
lea
lret
add
mov
push
scas
addb
mov
lahf
lahf
xchg
insl
js
dec
mov
rolb
lret
ja
fwait
out
movb
sti
cmp
pop
js
add
push
fwait
mov
sub
pop
jle
aam
fadds
and
mov
add
sub
jae
pop
inc
mov
push
adc
rolb
cmpsb
mov
test
rolb
into
jbe
sbb
add
pop
dec
cld
xchg
lea
push
cmp
sub
out
daa
lds
movsb
mov
adc
xor
fbstp
jp
push
sub
jns
jp
add
add
xor
lea
or
in
dec
clc
xchg
pop
jno
xlat
fiaddl
dec
imul
xor
sbb
mov
mov
mov
pushw
test
pop
xor
inc
add
adc
lods
mov
add
dec
mov
out
popf
lret
icebp
repnz
pop
dec
insb
test
mov
and
loope
jb
test
rolb
add
addb
arpl
testb
add
xchg
ss
scas
jmp
call
lods
add
pop
dec
push
xchg
sbb
dec
cwtl
and
pop
ja
jae
mov
pop
and
mov
or
dec
aad
mov
add
jmp
lods
and
pop
out
pop
ljmp
jmp
ja
and
in
dec
sbb
adc
sub
cmp
xchg
sbb
hlt
push
cmc
addb
adc
in
aam
adc
pop
push
adc
in
xor
arpl
out
mov
lock
icebp
xchg
cld
adc
inc
mov
xor
mov
dec
movaps
push
xlat
mov
inc
push
mov
lcall
jmp
out
push
jg
jb
mov
repnz
lea
call
insb
pushf
adc
pop
jne
addb
add
and
and
add
and
movb
inc
mov
dec
cld
out
shlb
jae
xor
mov
ja
xchg
pop
in
sbbl
scas
xor
adc
lahf
scas
jb
push
push
int3
and
sub
movsb
lods
mov
push
dec
xchg
loop
addb
jge
push
aaa
jb
add
sub
les
inc
cmovle
adc
dec
cwtl
test
movsb
test
push
fstps
rcrl
cs
cld
cli
mov
inc
jle
sbb
and
add
fmull
out
or
mov
mov
mov
add
rolb
fprem
pop
pop
mov
add
pop
gs
push
jns
sbb
jae
dec
add
out
add
or
adc
mov
or
add
ljmp
push
aam
aaa
jo
test
mov
lret
jnp
insb
sti
lock
pop
dec
inc
add
adc
fildll
pop
cmpsb
push
cli
pop
pop
dec
fs
ficoml
dec
aad
das
sub
add
icebp
jo
