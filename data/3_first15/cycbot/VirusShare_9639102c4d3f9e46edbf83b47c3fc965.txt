add
or
add
add
adc
add
add
add
add
or
lea
imul
inc
test
xchg
and
add
add
add
popa
add
or
adc
adc
push
add
add
add
adc
or
or
and
add
add
add
and
add
addl
adc
add
inc
orb
add
add
add
inc
or
and
add
addb
inc
inc
add
add
add
add
and
enter
and
mov
or
or
movsl
add
and
add
add
add
add
adc
add
and
push
add
add
pusha
add
inc
inc
add
add
add
add
add
add
add
dec
mov
roll
add
add
add
sbb
add
xor
add
add
add
and
inc
mov
add
adc
and
adc
pusha
or
inc
add
add
add
or
addb
add
or
dec
dec
ja
ss
outsb
dec
or
mov
or
and
sbb
and
dec
jb
arpl
imul
jl
jb
outsl
and
incl
shr
dec
add
add
jge
jp
pop
jmp
lock
add
dec
fwait
jne
imul
jne
jb
pop
imul
ret
addb
add
adc
add
push
xchg
in
xorb
dec
cs
add
icebp
sub
or
or
call
movsl
mov
sti
loop
cli
fmuls
jmp
adc
ja
hlt
and
push
add
add
or
adc
jge
mov
fisttpl
or
and
stos
mov
mov
scas
ja
lea
je
cmp
jns
add
lods
ljmp
je
jne
addl
xchg
rorb
mov
sbbb
dec
sbb
lea
and
popl
add
scas
or
int
add
add
inc
iret
add
lock
or
or
repz
push
push
adc
add
xchg
add
push
imul
lods
out
pop
jbe
ljmp
es
lret
push
lods
out
push
jge
mov
mov
ljmp
push
lret
lock
or
xor
or
xchg
and
sbb
jno
or
xor
jnp
xchg
inc
mov
imul
push
add
add
lret
xchg
adc
inc
and
or
dec
scas
fld1
xchg
dec
sbb
or
loop
lods
or
or
and
or
add
mov
test
sbbb
int
and
testl
xchg
add
ja
mov
dec
sbb
in
roll
icebp
pop
add
push
shr
or
or
xchg
hlt
lret
sub
es
jmp
adc
ja
hlt
and
push
add
add
addr16
pop
xchg
add
dec
or
add
add
xorl
mov
add
cs
inc
scas
dec
add
push
xor
add
and
or
and
or
loop
dec
add
cli
or
dec
loopne
movsb
scas
test
data16
loope
mov
mov
add
mov
scas
dec
add
and
inc
addl
add
xchg
add
mov
scas
dec
add
xchg
leave
add
add
adc
sbb
call
pop
test
lods
data16
test
add
lock
add
cmp
das
mov
and
lea
and
or
push
mov
inc
or
je
repz
lea
lods
jg
add
push
xchg
inc
cmp
inc
push
push
jb
and
xchg
or
xchg
or
call
jp
test
lods
ja
mov
add
pop
repz
lea
and
dec
push
psubusw
lea
lea
mov
xchg
inc
pop
dec
or
sbb
sub
jecxz
or
loop
mov
jo
xchg
jle
lea
and
or
movsb
jnp
mov
dec
in
call
insl
imul
incl
add
add
push
popf
mov
and
or
lea
sub
ja
push
mov
xchg
ljmp
xchg
adc
scas
mov
add
je
fmuls
sub
stc
or
add
enter
ret
je
add
dec
inc
je
pop
push
or
add
pop
mov
add
xchg
push
sub
inc
sub
jl
mov
ret
add
movsl
mov
or
jge
and
add
mov
mov
sub
icebp
jecxz
scas
mov
iret
push
adc
and
inc
loop
mov
and
add
add
or
pop
bnd
lods
int3
add
add
pop
lods
mov
add
add
jne
lea
dec
adc
inc
mov
jl
mov
add
sbb
xor
and
xchg
push
sub
or
and
or
and
or
xchg
or
je
scas
adc
xchg
punpckhbw
insb
or
xchg
or
roll
xor
add
lea
lods
inc
adc
push
xchg
push
sub
pop
sbb
dec
and
out
aaa
mov
or
mov
stos
dec
or
bound
or
and
outsb
mull
or
xchg
or
inc
xor
or
and
dec
and
add
add
arpl
ret
jb
mov
lahf
adc
dec
cld
and
push
cmp
add
add
inc
in
into
lock
push
pop
fdivr
or
dec
enter
jno
inc
adc
xchg
imul
nop
and
or
scas
icebp
ja
cwtl
mov
dec
dec
mov
insw
cs
mov
and
inc
cli
add
leave
mov
dec
lcall
xor
clc
lods
mov
inc
das
daa
xchg
or
sbb
push
mov
inc
int3
dec
movsb
adc
mov
imul
dec
or
pop
cmp
add
or
sub
cli
rorb
mov
sub
adc
dec
or
mov
insl
pop
daa
ss
sub
push
pop
pop
lds
sbb
inc
mov
or
push
enter
push
mov
and
push
pop
pop
test
cmp
inc
test
dec
push
add
out
test
ja
test
push
jl
lcall
nop
push
xchg
mov
inc
add
xchg
inc
popa
xchg
inc
call
push
xor
or
jo
push
sub
cmp
adcb
outsb
adc
dec
test
dec
in
cmp
lret
pushf
or
jb
jp
mov
and
das
or
shll
push
leave
add
movsl
jle
add
add
mov
sbbb
push
dec
ss
sub
lcall
pusha
lret
add
xchg
sub
jns
jg
fisttpll
push
jo
jnp
or
lea
inc
push
push
ja
push
roll
sub
fisttps
add
cmp
push
and
mov
mov
adc
push
lock
lock
jge
ds
inc
daa
adc
push
or
ja
ljmp
js
stos
aas
mov
shrb
dec
roll
shlb
cwtl
ljmp
mov
adc
mov
sub
lret
dec
aad
cmp
mov
insb
rcl
adc
xor
adc
sub
push
sahf
sbb
or
push
rolb
je
mov
and
inc
and
sub
aaa
mov
or
sbb
or
popf
pop
stos
jo
sahf
mov
push
and
jo
data16
or
push
clc
jbe
adc
dec
mov
and
ret
sbb
movsl
inc
aaa
ja
or
sahf
sbb
cld
cmp
daa
mov
lret
inc
mov
lock
mov
pop
push
dec
and
inc
xor
jge
dec
push
das
push
fwait
xchg
aaa
mov
ss
cmpsb
adc
jmp
add
sub
sub
roll
cs
jbe
push
pop
and
and
test
add
sub
mov
or
adc
dec
test
out
pop
jmp
notl
xor
lds
dec
ljmp
and
jge
dec
push
pop
data16
pop
adc
xchg
push
and
mov
push
sub
or
jge
bound
and
mov
pushf
sub
dec
inc
dec
adc
test
nop
and
add
lds
mov
dec
or
sbb
aad
mov
in
fimull
in
aam
or
aam
xor
movsb
dec
or
mov
frstor
call
stos
and
xor
and
inc
adc
lahf
push
mov
es
push
sbb
sbb
push
mov
mov
cmpsb
sub
jnp
sbb
pop
sbb
leave
push
and
pop
jge
sub
js
enter
push
sbb
jne
pop
xchg
cmp
ucomiss
sarb
mov
inc
adc
dec
mov
cmpl
jb
adcl
cmp
push
aaa
clc
fisttpl
mov
imul
dec
bound
push
scas
mov
adcl
push
dec
inc
in
inc
mov
hlt
popa
xchg
inc
dec
pusha
gs
movsl
out
adc
push
inc
inc
xor
push
add
out
sarl
enter
cs
dec
pop
xor
push
mov
push
mov
ljmp
add
push
jo
dec
push
fidivrl
je
add
add
sub
imul
fwait
cmp
push
lea
pop
pop
rclb
mov
and
fdivs
fsubr
clc
jnp
adc
leave
scas
dec
or
add
call
adc
sub
mov
mov
lret
test
loope
jge
and
nop
andl
xlat
sub
mov
cli
mov
xchg
stc
push
dec
loope
sahf
test
mov
ja
ret
lea
push
fsts
cmp
xor
xor
in
inc
and
sbb
sbb
mov
dec
out
test
data16
orb
adc
xchg
xor
sub
lret
adcb
rorl
test
mov
pop
xchg
xchg
sbb
mov
in
pop
mov
sbb
dec
push
push
and
and
lret
enter
xor
ljmp
xchg
shl
adc
inc
xchg
jne
push
popf
mov
add
and
xchg
aam
dec
addb
mov
fwait
subl
insb
cmpsl
xchg
inc
mov
movsb
or
xorl
push
and
adc
jg
cmp
arpl
out
ljmp
in
subb
push
sub
cmpsb
push
int3
sti
popa
mov
std
sub
and
jns
add
cmp
pushf
cmp
sahf
push
jmp
adc
fxch
dec
test
and
push
add
xchg
int
imul
enter
icebp
and
mov
inc
xchg
lret
push
js
cmpsl
adc
imul
dec
add
dec
cltd
jecxz
push
jae
in
stc
xchg
adc
inc
mov
adc
hlt
push
cmpsl
and
into
push
mov
pop
cmp
inc
push
lods
and
insb
or
inc
add
mov
pop
ret
cmp
dec
aam
iret
dec
loop
lcall
push
dec
and
outsb
dec
xor
sub
js
sbb
repz
cmp
fistps
movsb
sti
cmp
jge
mov
push
push
adc
popa
xor
ljmp
push
xor
aas
sub
adc
inc
jle
sbb
das
and
pop
out
mov
mov
inc
repnz
mov
xchg
decb
fdivrl
movsl
xor
mov
dec
adc
inc
xchg
inc
xlat
aam
or
js
jno
and
jecxz
fists
pusha
xchg
cmp
inc
dec
sbb
pop
push
es
push
in
pop
mov
sub
inc
jl
movsl
in
push
push
mov
adc
mov
cmp
and
lret
and
dec
jno
cmp
or
nop
jmp
cmp
imul
mov
push
cmpsl
mov
or
cs
nop
popa
and
aam
fldcw
pop
jbe
cmp
repnz
and
nop
imul
push
push
mov
push
adc
sub
insl
and
push
pop
push
movsb
adc
adc
xor
mov
inc
and
loope
inc
inc
cmpsl
dec
cmp
sbb
push
sub
cwtl
ret
xor
sub
shl
in
lret
xchg
or
lret
clc
stos
jmp
push
inc
leave
sub
mov
jmp
int
movsb
add
sbb
sub
pop
adc
xchg
in
and
xchg
push
sbb
inc
sub
icebp
ss
into
sub
test
leave
imul
sbb
popa
xor
ljmp
mov
mov
loope
scas
xchg
call
dec
out
inc
clc
push
cs
cwtl
rorl
inc
xchg
push
xor
adc
push
mov
imul
test
add
mov
ss
dec
fs
and
aam
orl
sbb
cmc
stos
and
cmc
cmp
movsb
mov
sub
and
dec
inc
cmp
sbb
mov
add
mov
out
dec
cld
psubsw
sub
sbb
sahf
cmp
lret
mov
push
shl
stc
dec
mov
call
and
sbb
ja
mov
mov
in
jno
sbb
and
inc
shrb
lods
pop
imul
aas
inc
mov
test
xlat
push
dec
dec
xor
subl
adc
add
sti
stc
je
add
test
dec
mov
call
into
push
xchg
add
xchg
call
lds
sub
pushf
mov
mov
je
dec
out
mov
push
js
dec
sbb
mov
fsubrs
xor
ja
stos
jne
or
and
sbb
outsb
xchg
xchg
lock
dec
push
insb
cmp
fldl
or
lods
add
les
adc
push
or
sbb
fistpll
movsb
repnz
pop
sub
xor
in
push
xor
and
dec
pop
dec
adc
out
sbb
cld
es
jmp
pop
mov
mov
cltd
fs
push
insl
adc
into
pop
and
lods
cmp
push
int3
fstpl
imul
inc
mov
stc
je
pshufw
push
lock
insb
movsl
pop
sbb
inc
cs
lea
scas
pop
inc
adc
nop
cmp
inc
jmp
rcll
adc
push
sub
pop
sub
sub
clc
push
out
ss
xchg
les
adc
add
pop
mov
sarb
les
sbb
daa
sahf
fcomi
dec
sub
xchg
cmp
inc
pop
test
dec
insb
pop
ss
mul
jno
push
xor
shll
mov
ret
cmp
mov
and
ja
loop
jge
jbe
sbb
push
cli
jl
out
sub
out
or
adc
inc
mov
push
imul
cld
pop
loop
jne
inc
add
ss
mov
push
jae
in
sbb
ljmp
aaa
push
xchg
inc
pop
lock
stc
into
and
sub
mov
inc
outsb
enter
xor
jl
lret
sbb
out
jmp
xor
nop
mov
sbb
xor
pop
and
jb
shl
mov
lcall
pop
pop
test
inc
xlat
xchg
je
ss
test
ljmp
in
test
sub
dec
dec
mov
mov
pop
mov
pop
daa
test
mov
arpl
lea
nop
enter
inc
test
xchg
sub
lcall
arpl
pop
inc
daa
cmp
or
push
push
sar
xchg
jmp
xchg
or
xor
and
inc
lock
xchg
dec
ret
shl
sub
push
and
mov
aam
das
popa
lcall
adc
add
lcall
or
adc
out
mov
xor
jecxz
incl
call
jmp
faddp
xchg
fwait
pop
aas
push
cmpsb
and
pusha
xchg
and
push
into
adc
test
adc
push
and
ss
mov
out
adc
dec
loopne
cmp
push
roll
xor
xor
jbe
fidivrl
lock
loop
inc
jmp
div
push
mov
cs
pop
pop
in
and
fdivr
ja
inc
pop
dec
ljmp
mov
stos
jbe
mov
and
and
mov
lock
and
xor
cmpsl
loop
mov
repnz
mov
push
fisubrs
xchg
mov
and
mov
stos
nop
mov
mov
adc
mov
data16
cmpsl
out
or
sub
sahf
inc
pop
ffree
xor
loopne
dec
fld
cs
pop
jg
xchg
cmp
mov
lret
repz
pop
pop
xchg
les
and
movsb
dec
sbb
ja
pop
aad
sub
xor
lea
pop
into
nop
mov
pop
sbb
shrl
push
adc
aaa
pop
xchg
or
les
inc
rcrl
fsubrl
or
lea
jle
xor
out
mov
sahf
jno
jp
sbb
cltd
out
rol
inc
inc
outsb
sub
cld
cmp
or
mov
stos
addb
out
xor
cs
roll
pop
lock
xchg
xchg
mov
jae
pop
dec
in
inc
or
clc
pop
adc
in
adc
add
int3
and
cmp
addb
xchg
pushf
addr16
loop
add
jmp
loopne
dec
mov
pop
test
int
fistpl
sub
adc
cltd
stos
or
and
sbb
cmp
sbb
or
cmp
test
add
adc
inc
or
pusha
xchg
ja
xor
inc
in
adc
adc
cmp
and
mov
jae
imul
push
je
or
test
pop
imul
clc
push
and
mov
pusha
inc
add
das
mov
add
sbb
mov
sti
push
lods
repz
les
lret
xchg
incb
mov
inc
icebp
lea
movb
pop
inc
in
sub
push
cld
or
leave
xchg
dec
add
cld
jle
sub
pop
je
dec
xchg
sbb
sbb
and
inc
inc
sbb
and
popa
xchg
jns
lds
adc
adc
xor
mov
nop
sub
ret
or
mov
andb
or
cmp
sbb
mov
push
pop
call
sub
add
sbb
pop
dec
cmp
and
pop
aad
and
sbb
sub
sbb
lock
and
loop
repz
push
xor
and
and
andl
stos
mov
ficoml
insb
inc
add
test
cmp
std
and
popa
xor
lret
push
pop
ss
loopne
xor
jg
push
or
xor
repnz
or
mov
sbb
and
je
pop
scas
fwait
ss
or
xchg
jle
data16
es
inc
sub
push
mov
ja
or
inc
mov
cwtl
es
or
pop
pop
push
push
or
push
pop
lock
cmp
jge
inc
rcll
shl
push
test
lods
hlt
xchg
dec
into
mov
call
and
popa
popf
das
in
mov
sahf
repz
push
ds
xorb
push
add
jge
dec
ret
dec
gs
inc
add
lea
movsb
in
jb
sbb
cmp
dec
push
jo
sbb
lcall
or
movsb
testb
stos
out
cld
jne
into
out
jns
shrb
push
iret
in
adc
imull
popa
add
xchg
sarl
inc
sbb
mov
loope
push
xchg
lods
xor
mov
pop
sbb
cmpsb
js
ja
add
xchg
mov
sti
push
adc
sub
test
sbb
repz
push
mov
adc
adc
adc
cs
jge
xchg
dec
rorb
out
scas
pop
jne
movsb
mov
sbb
adc
test
outsb
cmp
addr16
or
add
cmp
loopne
xor
xor
push
xchg
pop
lret
fwait
and
jp
push
test
xor
push
daa
ds
pop
jg
mov
sbb
jl
push
sbb
dec
fwait
sbb
xchg
jg
arpl
es
xor
mov
leave
push
mov
roll
or
add
inc
push
test
pop
sub
push
add
pop
dec
imul
xchg
fcmovbe
mov
std
pushf
sti
dec
mov
xor
fadd
xor
push
mov
dec
dec
bound
cmp
sbb
jne
jmp
out
push
pop
push
pop
push
pop
push
pop
push
pop
sub
cmc
jp
sbb
or
cmc
sub
es
push
data16
xor
sub
lea
sub
repz
loopne
sarl
sub
out
loopne
test
mov
mov
push
xor
cwtl
xchg
xchg
adc
leave
ss
mov
add
dec
jle
call
and
and
cltd
lret
sbb
test
add
push
mov
adc
mov
stos
add
test
mov
sbb
dec
xchg
dec
adc
add
fdivs
ljmp
jo
cs
test
test
push
xchg
adcb
add
rcrb
fwait
or
mov
aad
fdivrl
sub
pop
out
nop
xor
adc
hlt
adc
adc
and
js
xchg
inc
int
sub
lret
sbb
stos
mov
inc
or
and
scas
cli
xchg
icebp
sub
mov
xor
or
dec
lret
cmp
mov
dec
adc
gs
in
inc
inc
mov
mov
or
daa
test
pop
ret
dec
inc
daa
roll
or
imul
adc
dec
add
sub
cmp
sub
add
sbb
xchg
push
xchg
decb
pop
or
dec
clc
or
adc
aas
pop
lods
sub
leave
mov
push
inc
add
mov
xor
sbb
or
inc
inc
and
push
xor
sbb
or
mov
sbb
aas
lret
dec
and
in
cltd
or
dec
inc
insl
push
xchg
push
xor
sub
push
cltd
outsl
inc
ja
jnp
mov
cmp
add
sar
or
jno
in
sbb
pop
out
push
loope
push
xchg
enter
sbb
jbe
jl
add
into
and
push
sbb
push
sub
bound
xor
sub
ret
mov
repz
xchg
sub
pusha
adc
xor
popa
lret
clc
inc
adc
xor
repz
push
push
fldcw
cmp
add
ljmp
mov
dec
ret
pop
fistpll
ds
xchg
cs
lock
and
or
movsb
mov
ljmp
data16
push
jb
inc
cmpsb
and
clc
push
in
sub
push
cwtl
and
push
seta
test
or
lock
or
pop
adc
call
pop
jl
cmp
xchg
cltd
in
or
ret
cmp
add
pop
push
xor
or
arpl
andb
xchg
sbb
sub
xchg
rclb
sub
inc
insb
push
loop
push
ja
adc
pusha
fmuls
movsb
sar
or
pop
js
cltd
shr
push
xor
push
sbbw
enter
out
scas
pushl
xor
jne
sub
ret
test
lea
das
and
insb
cmpsl
or
mov
or
xchg
dec
mov
orl
daa
pause
subl
andl
cmpsb
push
nop
dec
lods
dec
pop
or
mov
pshufw
push
inc
insl
pop
sbb
push
frstor
add
push
push
les
sti
push
xchg
inc
jae
jle
xlat
xor
addb
add
aas
sbbl
cmp
fcmove
push
lcall
cmp
cmpsl
xor
cs
mov
push
mov
or
lret
or
test
xchg
and
lods
pop
lock
lods
push
imulb
xchg
mov
mov
popa
gs
adcl
scas
scas
sub
sbb
daa
push
pop
loopne
fnstcw
push
sbb
add
das
pop
call
ret
xrelease
inc
shll
push
fldt
lea
and
mov
lods
mov
lahf
or
xor
or
aaa
mov
dec
xor
hlt
cltd
jb
inc
movsb
push
ds
or
pop
jno
call
les
inc
out
dec
ret
lea
imul
and
and
mov
rcll
shll
pop
inc
add
inc
je
daa
and
jp
ja
daa
sbb
inc
xor
push
andb
inc
adc
cmpsb
cmp
imul
and
outsl
push
mov
sub
inc
mov
cmp
dec
imul
push
and
xchg
or
shl
clc
les
add
xchg
cltd
shrb
repz
test
or
and
repz
das
jmp
sub
xchg
sbb
lods
sub
fisubs
pop
int
or
sub
rcr
sub
xchg
and
sub
ds
push
clc
xchg
loope
add
jb
cmp
pop
sbb
cmpb
or
lret
cmp
lea
mov
inc
adc
das
dec
lods
add
and
jbe
dec
mov
sub
into
sbb
mov
dec
sub
mov
pop
test
inc
dec
mov
mov
rcrb
push
xchg
mov
stc
jbe
movsb
xchg
pop
xor
sub
jge
and
add
jp
fs
arpl
shlb
inc
and
and
push
popa
xchg
pop
push
jae
adc
inc
xor
pop
sarl
inc
pop
or
adc
adc
and
dec
repz
xchg
sbbb
stos
push
mov
sub
lea
inc
inc
and
and
or
stos
cmp
cwtl
ret
add
or
shrl
push
ljmp
xor
sbb
add
pop
movsb
mov
cmc
jb
ja
cwtl
ds
mov
mov
nop
push
lods
daa
stc
pop
sub
cmc
mov
sahf
mov
xor
js
popa
push
pop
mov
xchg
and
mov
cmp
add
adc
dec
enter
cwtl
pop
inc
and
xchg
push
gs
pop
xchg
into
lret
andnps
sbb
popa
xor
dec
ja
test
xor
cs
mov
not
sub
popf
inc
jmp
out
dec
push
jge
push
push
andb
adc
in
jo
sub
pop
jp
xor
add
jbe
inc
xchg
xor
push
cmp
pop
aad
lret
push
mov
push
inc
in
data16
pusha
inc
ljmp
bound
sbb
jmp
xchg
adc
cld
or
iret
int3
sub
adc
push
xor
mov
and
sub
xor
mov
in
sub
jne
mov
pop
jl
add
mov
cwtl
sbbl
cmp
mov
imul
je
cmp
inc
inc
popa
shll
dec
inc
xor
ficompl
dec
pop
and
sub
cmp
xor
add
lret
xchg
or
push
dec
sbb
pushf
pop
test
push
js
jo
push
lock
or
in
and
cld
and
lock
push
and
inc
sahf
jno
xor
mov
pop
inc
xchg
stos
popf
data16
cwtl
jbe
ljmp
in
in
xchg
or
ljmp
sub
loop
test
pop
jl
dec
fiadds
or
jp
aad
push
sub
es
das
xchg
adc
sub
insb
sbb
mov
js
sub
in
push
mov
xor
scas
das
mov
mov
mov
cltd
aad
std
jo
cmpsb
inc
or
daa
cmp
sbb
cmp
push
jne,pn
test
mov
adc
and
xor
mov
lcall
cs
movsb
mov
dec
test
mov
aaa
or
sub
pop
or
je
or
add
dec
mov
inc
mov
stos
xor
xor
mov
mov
mov
mov
pop
mov
mov
mov
push
add
add
dec
es
sbb
jae
add
and
xchg
xor
inc
push
dec
and
data16
push
in
push
sub
adc
xchg
adc
adc
fs
inc
in
jbe
or
xor
mov
cmp
and
dec
repz
inc
jno
mov
push
add
test
sub
jb
aad
ljmp
add
js
shrl
xchg
fcoms
add
add
inc
fisttpll
xchg
or
sbb
out
add
jmp
dec
add
mov
and
xchg
bound
jge
add
rclb
fimull
rcrl
imul
shl
fmuls
or
pop
push
add
in
fidivs
jmp
mov
mov
xchg
fdiv
push
cmpsb
pop
and
cmp
or
test
das
dec
in
push
mov
adc
leave
mov
dec
add
scas
mov
add
adc
inc
addl
mov
jne
dec
test
mov
lea
call
adc
lods
cs
mov
mov
mov
add
push
movsl
out
divb
das
or
xchg
icebp
ret
pop
or
dec
sbb
test
pop
inc
dec
int3
data16
and
inc
adc
dec
bound
sub
daa
cmp
shlb
or
adc
dec
pop
test
ljmp
mov
pop
movsb
icebp
and
inc
mov
push
sbb
insb
in
push
xchg
mov
xor
or
test
push
adc
test
daa
xor
and
jns
sub
or
data16
pop
push
mulb
xchg
mov
jp
ret
inc
pop
or
iret
lret
dec
sbb
pop
push
mov
outsb
sbb
insl
xchg
mov
arpl
nop
movsb
push
or
aaa
push
and
fs
or
push
sbb
inc
inc
pop
in
jns
jb
arpl
jae
je
fs
push
pusha
pop
dec
jmp
repnz
inc
sarb
cmpsl
sub
push
mov
inc
ret
in
call
cs
jae
fwait
das
cmp
inc
clc
xchg
jne
sub
dec
jmp
cli
je
stos
cmp
inc
mov
bound
push
out
testb
adcb
jns
es
mov
push
cmp
sti
faddp
lods
jb
dec
ja
inc
jns
jmp
addb
ja
push
push
std
xor
arpl
jo
inc
push
test
mov
pop
mov
jp
dec
cmpsb
dec
sub
and
xchg
add
in
xor
movsb
or
es
adc
cmpsl
loop
and
rclb
inc
pushf
scas
or
movsb
sbb
adc
mov
add
daa
rclb
push
fwait
pushf
orb
or
mov
lea
push
ret
push
push
insl
push
iret
sub
into
push
and
ljmp
cmp
test
es
mov
xchg
add
mov
es
movsb
sbb
lret
and
ret
outsl
clc
movsb
push
clc
fcmovu
ret
sar
sbb
das
push
and
jl
sbbb
repnz
jb
pop
gs
add
bound
fwait
pop
or
fsts
xchg
dec
cli
in
addr16
pop
adc
sub
movsl
fildll
sub
cmp
fs
test
inc
lods
xchg
aas
imul
adc
stos
xchg
sub
lea
dec
lret
stos
cmp
jp
ja
jno
cmp
nop
gs
adc
push
mov
sti
in
arpl
xor
cltd
daa
jb
cmpsb
mov
cs
lret
and
pop
mov
leave
clc
jge
leave
outsl
sahf
int
int
das
stc
rcrl
insb
stc
dec
ja
outsl
jne
je
jns
insb
inc
push
xor
iret
cmp
sbb
inc
xchg
scas
jns
adc
ja
repnz
xchg
mov
dec
loope
or
into
push
or
nop
out
and
push
jns
add
insb
inc
push
cld
clc
jmp
jge
js
jl
adc
cmpsb
xchg
mov
in
or
cmpsb
sahf
imul
repnz
sbb
popa
jmp
aad
xchg
dec
das
sbb
daa
inc
adc
mov
addr16
adcl
ret
push
jne
sub
lcall
cwtl
xchg
cltd
and
pop
dec
xchg
or
movsl
cmp
je
dec
aam
lcall
xor
push
inc
insb
lods
ror
cmpsl
aaa
subl
mov
push
sbbb
out
xchg
mov
adc
xor
cmp
ss
xlat
loop
push
pop
sbb
and
aas
lret
inc
ja
push
cmp
pop
jle
mov
test
subl
mov
push
ret
jns
inc
mov
mov
cmp
bound
inc
adc
sub
clc
mov
add
push
dec
cwtl
cmp
icebp
jno
test
mov
push
rcl
pop
pop
nop
leave
and
push
cltd
sub
cli
aaa
xchg
pop
xchg
dec
add
xor
gs
in
out
xchg
test
jb
jo
jns
inc
mov
cmp
daa
jge
fldcw
ret
loope
push
xchg
es
loopne
insl
sub
out
and
push
sahf
movsb
fs
fsub
testb
dec
test
sbb
mov
jecxz
ja
add
push
popf
aas
inc
inc
cmpsl
fcomps
add
lea
outsl
jmp
inc
nop
out
scas
scas
adc
pusha
jmp
cmpsb
jno
mov
jae
repz
js
das
push
xor
xor
mov
pop
adc
pusha
push
or
sub
lock
dec
insb
mov
inc
xchg
jns
nop
dec
negl
stc
xchg
pushf
mov
add
or
ss
inc
inc
or
mov
stc
add
inc
and
pop
sbb
xor
push
loope
xor
mov
xchg
lcall
inc
js
inc
pushl
and
arpl
adc
jl
add
lods
mov
sub
aam
sahf
repz
loope
aas
andl
in
and
jg
cld
mov
arpl
and
cwtl
jmp
pushf
jnp
jo
xor
dec
in
add
jecxz
ret
in
jge
mov
fisttps
pop
sbb
jge
dec
xchg
test
fs
or
pop
call
jbe
inc
push
mov
gs
ret
pop
lock
shrl
jmp
inc
pop
sbb
pusha
loop
push
push
jne
jno
or
dec
les
cmp
sub
insl
fsubrl
fcomps
inc
out
mov
push
cmp
push
mov
push
jo
push
or
mov
push
push
push
ljmp
inc
in
cli
push
inc
scas
popl
dec
arpl
lds
in
mov
sub
push
adc
xchg
xchg
jle
add
and
mov
imul
stc
sub
or
in
mov
dec
and
in
jl
mov
push
dec
sub
dec
and
in
and
fmuls
addr16
adc
xlat
insb
arpl
sbb
xchg
mov
stos
ds
adc
and
sbb
adc
out
mov
lsl
pop
and
hlt
int
mov
hlt
push
scas
mov
jecxz
inc
lea
js,pn
jle
and
jp
cld
scas
sub
mov
xchg
cmpb
cmpsb
push
or
cmp
lea
or
pop
mov
or
mov
push
aam
inc
sbb
dec
cmp
je
cltd
dec
sub
add
add
inc
and
adc
lcall
ljmp
sub
imul
bound
subb
pushf
push
clc
adc
test
adc
pop
outsl
fwait
hlt
jns
cltd
iret
test
sbb
ret
jl
scas
into
xor
push
or
push
lds
popf
mov
adc
inc
mov
adc
or
in
and
jp
push
lea
push
sub
push
dec
cmpb
cmpsb
xlat
ret
add
jmp
dec
adc
xchg
xor
mov
xchg
jae
lods
jno
rcl
adc
mov
gs
adc
xchg
xchg
cwtl
pop
mov
push
cmp
xor
and
mov
les
ss
jne
jge
les
xor
div
mov
dec
or
and
insb
or
stc
ljmp
or
push
or
mov
imul
sub
rolb
ljmp
ftst
repz
cmp
cmp
js
fdivrp
popa
iret
cs
jmp
jle
int3
inc
mov
daa
mov
sahf
or
xchg
enter
cmp
fisttpl
daa
stos
push
movb
add
pop
lcall
jp
or
jno
test
xchg
mov
je
insl
in
sub
mov
xchg
inc
jno
cli
repz
shll
popa
leave
inc
stc
mov
xor
add
sub
add
and
dec
lock
and
sub
loop
jbe
and
leave
add
sub
jmp
add
or
xor
std
xorb
cmc
lock
xor
jnp
jle
loope
hlt
cld
repnz
call
stos
fidivl
xor
mov
aaa
and
sbb
or
jo
push
pop
jge
mov
adc
inc
xchg
loopnew
sbb
mov
cmpsb
jae
adc
clc
sti
movsb
mov
push
push
push
and
xchg
push
pop
cmp
daa
adc
or
jb
inc
inc
xchg
cwtl
pop
or
mov
pop
xchg
push
je
sbb
and
pop
fsubr
lret
shrb
pushf
mov
pop
jmp
test
push
std
add
fisttps
insl
in
adc
sub
inc
arpl
jae
shll
or
sub
pop
ret
dec
lods
mov
addl
mov
insb
add
dec
add
sub
add
adc
test
sub
dec
jbe
or
push
in
xor
cmp
out
dec
rclb
lcall
and
sub
pop
inc
mov
stos
jl
data16
xchg
sbb
sbb
cs
pop
push
mov
mov
sub
pop
mov
stos
and
or
addr16
dec
ds
faddl
lods
xor
pop
ljmp
sub
jge
ret
pop
ja
cmpl
mov
or
loop
push
fs
iret
out
dec
push
xor
push
popf
inc
sub
es
cmp
push
pusha
or
cs
addr16
mov
sbb
imul
dec
jbe
mov
icebp
mov
call
sbb
sub
dec
dec
movsl
mov
mov
add
aaa
fcomi
xor
dec
mov
or
xchg
lock
sbb
jns
dec
outsb
push
imul
xchg
sbb
adc
fisubrl
sub
popf
jnp
shl
dec
sub
or
push
xor
addr16
jmp
lods
push
sub
lods
mov
mov
xchg
inc
pop
mov
cld
push
daa
inc
and
sbb
xchg
sub
mov
dec
pop
les
mov
or
ja
jmp
and
shrb
shll
jae
pop
push
ud0
push
push
les
and
loope
lds
insb
mov
mov
dec
and
hlt
lods
jae
mov
jle
lods
add
push
add
cmp
shl
rorl
aam
adc
outsb
cld
push
jno
sub
cmp
in
sbb
test
adc
push
in
fs
repnz
adc
faddp
loope
cmp
int
repz
and
pop
ror
repnz
sub
sub
mov
push
sahf
jns
jnp
fs
clc
xchg
dec
xchg
bound
sub
mov
lods
repz
xor
mov
hlt
lods
mov
stos
push
movsb
cs
mov
or
popf
add
mov
icebp
or
adc
mov
push
mov
inc
mov
test
sub
into
call
inc
std
pusha
gs
dec
lods
push
sub
adc
cmp
fbstp
push
push
rcrb
fiadds
sub
sbb
jb
push
mov
mov
dec
xor
xchg
xor
or
xchg
jp
push
ret
pop
mov
xchg
xor
adcl
add
or
sub
push
inc
mov
push
lret
pusha
add
into
jbe
push
or
test
and
popl
jno
xor
fidivs
shrb
test
cmp
and
ss
jo
aaa
and
pop
jnp
pop
insb
push
jae
jmp
mov
lods
mov
adc
sbb
xor
and
xchg
sbb
dec
inc
stos
mov
mov
das
jmp
bound
popf
push
push
nop
ja
xchg
xchg
push
push
sub
dec
popa
xor
lods
inc
movsb
sub
adc
in
and
adc
xor
xchg
lahf
push
mov
mov
xchg
and
aaa
roll
lods
xor
test
and
push
sub
adc
lahf
shl
out
adcl
lahf
outsb
test
movsl
cmc
inc
loope
add
jns
pop
mov
js
shrb
dec
or
aas
inc
movsb
cmp
in
rorl
movl
jns
mov
test
stc
enter
sbb
add
jbe
movsl
dec
int3
ret
arpl
loop
adc
daa
pop
adc
push
loopne
xor
out
testb
cltd
std
mov
mov
push
jne
lds
lock
push
xchg
and
xchg
and
push
cmp
stc
add
pop
push
andl
scas
into
dec
lea
mov
or
hlt
add
cmp
xor
xor
cmp
lock
shll
hlt
dec
inc
jbe
pop
jge
push
cmp
adc
adc
sbb
pop
jbe
or
inc
dec
or
sti
imul
mov
and
add
mov
jmp
xor
mov
jbe
outsb
lods
sub
pop
out
mov
addr16
mov
aam
mov
aad
jp
pop
push
or
or
pop
fcoms
mov
stc
sub
or
xor
sub
bound
jl
mov
nop
outsl
je
iret
call
dec
xchg
cltd
leave
inc
cltd
push
loopne
xchg
repz
mov
jns
inc
inc
mov
mov
shll
jp
mov
fidivs
or
sbb
test
mov
cmpsl
fsubl
cli
loope
mov
push
xor
xchg
stos
pop
lret
sbb
mov
jne
inc
dec
dec
sub
jbe
sbb
mov
mov
and
rcll
punpcklbw
out
out
daa
adc
dec
mov
addr16
inc
xor
mov
and
sub
outsl
jmp
push
mov
aaa
dec
mov
dec
cld
notb
js
or
cmp
clc
les
sbb
jecxz
aaa
filds
loopne
ja
jae
or
push
lods
lret
movsl
xchg
dec
jl
dec
cmp
mov
mov
cmpsb
loope
push
cmp
sub
lock
push
xchg
subl
sbb
enter
fidivs
push
call
dec
xor
fs
cmpsb
popa
xor
fcmovbe
pop
repnz
xor
xchg
lock
into
es
push
jo
aas
inc
insb
push
fs
addb
xlat
daa
stos
addr16
gs
cwtl
orl
mov
test
test
pop
lock
xchg
adc
jae
mov
das
or
cs
xchg
mov
sub
push
sbb
data16
sbb
dec
adcb
stos
xor
adc
add
mov
push
cltd
cmp
push
adc
scas
rorl
sub
repnz
movsb
aas
mov
nop
sbb
dec
pop
dec
ffreep
das
ljmp
or
dec
dec
cmpsb
mov
loop
mov
sarb
dec
pop
and
inc
out
xor
stos
mov
mov
imul
cltd
lahf
xacquire
lea
mov
and
imul
sbb
pop
xchg
jo
or
cmp
cmc
jne
scas
mov
in
push
jbe
sbb
sub
insb
inc
push
jle
les
dec
mov
or
push
push
je
xchg
mov
ja
rcl
mov
leave
bound
fs
sbbl
add
sub
pop
sbb
es
xorb
jo
dec
mov
pop
hlt
sub
cmp
jbe
addl
sub
pop
mov
stos
sahf
xchg
lods
dec
out
and
hlt
xor
int3
sbb
rol
adc
sbb
repnz
rolb
lcall
jb
sub
adc
cwtl
insl
push
sbb
add
cltd
mov
idivb
stos
call
mov
inc
cmp
sub
sbb
lods
inc
pop
pop
daa
xor
shrl
js
inc
aas
push
jb
cmp
sub
mov
stos
inc
mov
push
xchg
sbb
cmp
mov
sbb
inc
loopne
mov
rorl
sbb
scas
xor
fnstsw
push
js
adc
movsl
test
or
sbb
pop
call
inc
mov
sub
gs
sqrtps
imul
jge
inc
sbb
adc
lahf
sbb
mov
or
enter
sbb
sub
or
fwait
out
pop
je
arpl
push
jmp
inc
mov
cmp
in
mov
data16
mov
enter
push
sbb
sub
test
push
jne
jb
test
divl
in
adc
daa
sbb
inc
fwait
and
popf
pop
sub
mov
push
cli
sti
lahf
cmp
sub
push
daa
out
lods
sahf
sub
mov
outsb
adc
rcrb
adc
into
pusha
lret
or
ds
clc
lret
or
rcll
xchg
call
push
sub
adc
mov
scas
xchg
dec
sub
adc
xchg
cmp
cmc
sub
fmuls
sub
lods
prefetcht1
call
fistl
sbb
push
cwtl
or
xor
mov
pop
repz
ljmp
dec
movsb
lret
add
push
mov
inc
and
or
mov
or
mov
fs
push
or
out
pop
jl
into
push
cmp
or
int3
test
xor
dec
jecxz
xor
xchg
and
hlt
mov
sbb
ret
mov
xchg
mov
js
inc
mov
adc
mov
call
sbb
movsl
push
gs
das
pop
fiaddl
add
scas
dec
cmp
pop
cltd
aad
dec
repnz
push
icebp
js
jmp
xor
mov
fs
ljmp
mov
imul
or
in
sbb
push
cmpsb
jae
sbbb
dec
xchg
xor
adcb
fsubl
xor
inc
aas
and
lcall
mov
xor
or
and
fdivp
adc
jmp
test
enter
add
push
sarb
test
xor
repnz
jmp
jle
pusha
and
iret
stos
adc
or
push
dec
dec
xchg
psubusb
cmp
dec
movsl
dec
add
cli
mov
xor
push
repnz
int
sahf
or
dec
xchg
gs
mov
dec
cmp
mov
push
mov
adc
rclb
and
cmp
adc
xor
mov
xchg
cmp
xor
push
lea
lret
scas
push
arpl
data16
pop
sbb
dec
dec
repnz
mov
test
cwtl
das
push
stos
push
adc
cmp
bound
mov
adc
int
gs
jne
sbb
push
out
push
push
mov
add
mov
icebp
push
and
push
mov
xchg
sbb
jae
mov
xor
lock
repz
jle
stos
mov
sub
xchg
out
xchg
outsl
add
mov
pop
sbb
std
enter
sub
jne
and
dec
testl
add
ja
xchg
push
push
ss
stos
add
mov
cld
daa
mov
xchg
insb
ret
out
adc
ret
mov
fwait
adc
enter
or
jle
imul
ss
jp
arpl
dec
mov
push
dec
mov
mov
and
push
mov
push
loope
xchg
fwait
add
outsb
jmp
push
fwait
and
or
cmp
inc
rcll
cmpsb
xchg
fcompl
pop
ss
jle
stos
popa
mul
cmpsb
mov
aaa
push
push
fidivs
pop
xchg
pop
leave
jg
cmpsb
clts
mov
dec
fisubs
sub
enter
jecxz
shrl
jge
mov
das
inc
outsb
dec
fnstsw
jge
insb
mov
popa
hlt
push
adc
dec
or
sahf
jbe
mov
jge
mov
or
fwait
cwtl
xor
push
sbb
dec
mov
push
push
add
xor
mov
cltd
lahf
les
test
in
pop
and
js
and
je
or
cmp
call
add
or
push
xor
and
lock
sub
and
add
ret
pop
mov
lret
cs
fiaddl
xor
repz
std
jb
cli
xor
jae
ret
insl
xchg
adc
cmp
inc
out
paddusb
pusha
jnp
dec
and
loopne
mov
in
or
or
je
pop
out
xchg
push
adc
sbb
mov
pusha
push
rcrb
push
int3
push
inc
inc
addr16
jbe
fs
jecxz
adc
adc
mov
div
cmp
dec
dec
pop
cmp
ficoms
or
pop
adc
add
aam
xchg
or
je
aas
sbb
call
fwait
pop
cmpsb
sti
inc
push
push
stos
sti
adc
cmp
aad
stos
cltd
fisttpl
popa
test
add
test
jge
push
and
flds
aam
xor
cmp
sub
cld
adc
adc
sub
jbe
stc
cmp
sub
jb
pop
push
mov
add
push
sbb
cli
insl
xor
dec
rcrl
pop
out
pop
enter
outsb
xor
gs
mov
mov
in
mov
shlb
dec
sub
mov
jl
call
data16
mov
lods
test
mov
mov
dec
aad
pop
divb
nop
incb
push
ja
jo
xlat
xchg
and
jb
rorl
mov
jmp
push
dec
fidivs
sahf
dec
stos
mov
xchg
call
adc
jmp
xor
ret
push
or
xor
div
jp
test
es
ret
or
lgs
out
outsb
gs
hlt
xor
ret
pop
daa
daa
pop
and
and
daa
pushf
pop
insb
pop
xor
nop
lahf
movb
mov
jp
cs
aaa
and
rorb
adc
mov
packsswb
das
and
sbb
loop
in
jns
sbb
push
into
mov
jbe
push
jmp
cwtl
xabort
adc
pop
mov
ucomiss
xchg
and
mov
or
loope
hlt
into
and
inc
mov
pushf
adc
daa
mov
and
add
rolb
push
out
lcall
push
inc
lock
loop
sbb
dec
push
sahf
pop
add
pop
fdivrl
jmp
mov
cmp
inc
pop
mov
cmp
xchg
popa
dec
cmc
mov
andb
jnp
into
xchg
push
shrb
or
jb
mov
or
stos
xchg
cltd
sub
adc
pop
or
je
cmp
lret
pop
mov
cmp
into
inc
movsb
jl
dec
roll
int
adc
fs
adc
xor
scas
dec
or
dec
cli
or
jns
into
add
push
pop
in
rcrl
mov
js
repz
mov
push
dec
push
push
push
or
dec
jae
aaa
push
jnp
fwait
sbb
pop
jl
jae
push
adc
cmp
adc
xchg
das
and
fldenv
push
aaa
push
cmp
sub
cmpsb
mov
pop
cmpsb
mov
leave
loope
lock
lcall
xor
unpcklps
neg
mov
movsl
insb
or
pop
adc
insb
adc
scas
dec
aaa
ret
dec
pop
pop
dec
or
aaa
pop
push
stos
sbb
ret
and
mov
xchg
pop
inc
dec
inc
mov
fs
and
aaa
fcoms
into
adc
fcoms
add
pop
sub
out
nop
xchg
mov
cmpsb
sub
inc
shl
enter
shr
dec
cmp
test
pop
push
lea
or
sub
push
sahf
cmp
push
pop
jge
and
sti
jle
fcmovnu
outsl
int
mov
sub
mov
sub
movsl
fwait
daa
pop
pop
idivl
push
cld
out
add
jle
add
xchg
add
test
mov
xor
xchg
ds
dec
pushf
iret
adc
dec
pop
jne
cmpsl
sbb
inc
sbb
or
sar
jge
lret
test
repnz
or
mov
dec
cmpsb
or
inc
mov
in
xchg
js
sbbb
int
clc
xor
int
jecxz
push
and
mov
call
cld
bound
roll
mov
psubusb
lods
stc
das
sub
out
jp
xchg
mov
aad
dec
lret
cwtl
pop
repnz
in
mov
xchg
add
lcall
mov
arpl
arpl
add
inc
test
jnp
xchg
jmp
dec
sbb
add
lea
or
subb
push
in
and
xchg
pop
dec
iret
push
sbb
cmp
sbb
or
fsubl
pop
add
in
inc
jns,pt
add
cmp
xchg
sub
mov
dec
adc
push
jle
insb
push
popf
xor
jno
xor
nop
sub
adc
loope
cli
insb
jl
or
das
xlat
into
or
cmpsb
subb
nop
iret
and
xchg
test
add
insl
inc
jl
mov
repz
dec
cmpsb
dec
sbb
enter
add
or
mov
lcall
cmp
sub
mov
xchg
push
rorl
cld
sbb
paddd
pop
cwtl
xchg
mov
cmp
add
and
xor
inc
push
inc
cmp
iret
xchg
sbb
add
imul
or
adc
xor
mov
inc
pop
inc
sbb
sub
lret
fbld
adc
pcmpeqw
inc
mov
sahf
shlb
xchg
fwait
test
pop
sub
lods
pop
mov
sub
pushw
push
aas
push
int
cmpsb
in
inc
or
sub
ljmp
dec
adc
xor
stos
orb
ss
lret
pop
popf
add
loope
repnz
pop
jbe
lods
and
pop
call
pop
xor
mov
jb
push
es
and
xor
and
xchg
mov
outsb
stos
cli
adc
rcrl
push
nop
sub
ror
xor
test
loopne
inc
lea
les
push
add
mov
push
add
shr
cmp
mov
in
sub
shrb
pop
xchg
jge
or
cmp
lds
je
cmp
and
sbb
arpl
add
jmp
or
adc
jmp
add
mov
sub
adc
jno
aas
test
jmp
icebp
mov
lock
sub
fwait
hlt
cwtl
test
inc
roll
lea
dec
rcr
and
xchg
data16
sub
pop
adc
addr16
pop
push
mov
and
add
sub
ja
jmp
cld
and
jecxz
and
mov
sbb
in
dec
sub
clc
or
or
test
dec
aam
pop
pop
push
pop
fwait
test
xchg
push
aaa
cmp
xchg
inc
xor
dec
mov
sbb
ret
adc
pop
push
pusha
sub
dec
dec
mov
sub
xor
stos
push
xchg
push
sub
mov
cwtl
add
inc
in
mov
mov
xor
or
cmp
sbb
ficoms
icebp
push
mov
pop
lea
rorl
or
jno
xchg
xor
mov
lods
sbb
aaa
sub
insb
pop
lods
pop
push
lea
push
push
fstl
cltd
movsb
pop
sbb
ret
sub
negl
or
data16
pop
movsl
cli
xchg
inc
cmc
aas
ljmp
dec
jb
or
outsl
inc
dec
or
inc
cvtps2pd
xchg
fidivs
push
lret
adc
iret
pop
imul
pop
in
jnp
scas
or
or
insl
or
lods
rcl
mov
test
xchg
or
inc
mov
sub
aas
adc
cmp
gs
push
add
or
push
fdivl
and
inc
mov
push
out
jle
xchg
sub
sub
xor
pop
int
cltd
js
sahf
inc
push
cmp
mov
lret
sbb
push
mov
mov
orb
inc
lds
and
push
and
and
cli
lret
adc
dec
daa
outsb
inc
xrelease
add
push
cmp
sbb
mov
repz
pop
cwtl
adc
lods
sti
stos
enter
adc
pop
pop
call
mov
pop
fwait
mov
adcb
mov
add
xchg
or
jmp
cli
out
push
xor
js
je
js
xor
scas
cmpsl
outsl
and
pop
push
je
sbb
loopne
fs
inc
or
jecxz
sub
mov
and
test
iret
mov
push
nop
jne
stos
sbb
movsb
lock
add
inc
pop
or
jne
mov
rorl
mov
pop
jmp
pop
hlt
inc
xchg
or
mov
lods
inc
or
movsb
jmp
adcl
into
jno
pop
sbb
rorb
xchg
adc
rcrl
mov
jbe
adc
xor
adc
push
sub
outsb
and
ja
inc
and
and
sbb
or
ljmp
sbb
xorb
sbb
lods
cltd
xor
push
or
dec
jne
mov
mov
aas
or
enter
xchg
cs
shll
and
jae
test
inc
and
pop
jmp
or
sub
inc
out
mov
sub
mov
xchg
ljmp
jmp
add
mov
mov
sub
aaa
lahf
mov
lods
les
movsb
push
int
scas
mov
sbb
or
fcoml
loopne
jecxz
mov
sub
dec
xchg
mov
sub
in
sbb
fadds
adc
stos
add
push
stos
xor
mov
or
or
or
stos
sbb
jmp
inc
sbb
imul
sete
mov
adc
out
adc
psubusb
cltd
inc
mov
sub
test
stc
xchg
pop
es
cmp
loopne
test
push
adc
add
or
mov
mov
push
lret
rolb
push
outsb
push
cmpsb
daa
shr
mov
xchg
sbbb
sbb
push
push
push
js
adc
push
rcll
inc
jbe
in
lea
adc
setae
add
dec
or
or
daa
adc
mov
pop
push
fidivrl
sar
mov
jl
ret
inc
mov
test
cmpsl
aad
or
adcb
and
lcall
loopne
add
and
jmp
insl
lcall
sbb
jmp
or
stc
or
jne
inc
movsb
or
xor
imul
in
xchg
je
adc
sub
addr16
out
sbb
divb
mov
imul
inc
cli
xor
xchg
sahf
out
out
pop
out
es
and
or
adc
ja,pt
mov
add
inc
pop
xchg
dec
cmpsb
rorb
mov
xor
ror
jns
inc
dec
xchg
and
mov
test
popa
stos
or
pop
loop
and
push
enter
xor
jo
leave
dec
rcrb
and
inc
loopne
std
sub
inc
mov
out
sbb
cmpsl
mov
mov
es
pop
fwait
je
sbb
jnp
fwait
orb
jmp
add
xor
ljmp
data16
jns
into
adc
adc
and
lock
and
jle
sub
mov
adc
and
dec
and
xor
or
ja
and
cs
cli
gs
inc
push
xchg
and
adc
add
int
rcl
xor
sub
or
push
jae
dec
cltd
or
add
pop
leave
cmp
jl
push
dec
mov
jle
sub
and
dec
jns
ss
or
xchg
dec
push
test
mov
in
pop
je
repz
add
push
sub
adc
imul
not
cmp
repnz
pop
pop
pop
push
fimull
lock
dec
divb
push
aas
loopne
out
xor
jae
mov
es
sub
cmpsl
push
inc
nop
aaa
push
mov
xchg
add
xchg
lock
aaa
dec
or
dec
mull
sub
or
popa
and
inc
js
pusha
and
push
sbb
or
ja
adc
test
push
movl
push
mov
cs
loope
scas
mov
sub
inc
loope
jecxz
sub
mov
mov
pop
mov
je
push
inc
je
iret
push
or
mov
cli
mov
xchg
and
pop
push
fs
cmp
sub
jg
sub
sub
cwtl
cmpsl
int3
push
fadds
dec
pop
dec
call
or
xor
fsubrl
leave
adc
loop
adc
or
mov
jo
jle
mov
inc
mov
inc
pop
stos
movsl
in
jle
push
fmull
push
in
or
sub
and
cmp
push
push
and
subl
push
mov
or
mov
add
testl
and
test
fs
leave
call
push
sti
sbb
insl
pop
rorl
sbb
xchg
imulb
fldcw
clc
mov
mov
test
cld
fs
iret
mov
adc
mov
add
pop
push
inc
popa
popa
push
ret
divb
fs
add
lods
or
std
cmpsl
icebp
movsl
mov
fdivl
nop
cmp
shll
test
mov
adc
test
sbb
outsl
into
adc
or
push
jmp
ss
push
adc
pushf
scas
xor
cmp
pop
mov
and
cmp
aad
shrb
in
push
sbb
movsl
lds
jecxz
add
insl
cwtl
jbe
daa
adc
add
jecxz
or
and
add
or
and
mov
sub
mov
and
sbb
pop
stos
pop
or
add
inc
or
mov
add
lret
cwtl
push
push
in
mov
movsb
lret
js
push
jl
inc
sbb
xchg
lret
or
nop
pop
pop
push
push
movsb
dec
and
jbe
mov
or
sub
dec
roll
addps
enter
sbb
ret
or
daa
cmp
leave
mov
das
enter
popf
mov
into
dec
sub
movsb
add
rcll
push
pop
push
ret
push
in
push
or
adc
sbb
adc
icebp
dec
jle
mov
dec
push
sbb
bound
rolb
fisttpll
cmc
mov
sub
lods
pop
xor
es
scas
and
xchg
pop
and
ss
out
xchg
inc
scas
push
jo
popa
test
push
cmpsb
pop
dec
test
sub
xchg
mov
aam
bound
xchg
fldenv
sbb
xor
push
mov
sbb
mov
ds
leave
mov
imul
adc
xor
mov
test
enter
pop
mov
loope
add
cltd
mov
loopne
rcrb
shr
aam
or
adc
xchg
add
stos
addl
xchg
or
adcl
enter
push
dec
popa
inc
cmp
and
dec
or
sub
lock
cmp
inc
incl
or
ret
daa
inc
sbb
dec
rorl
adc
iret
sti
movsl
dec
sub
adc
and
sbb
bound
out
inc
cmc
and
mov
dec
clc
sbb
adc
and
mov
adc
dec
and
pop
xor
adc
mov
stc
aas
inc
stos
pop
inc
or
and
stos
ja
push
add
aam
leave
out
and
gs
aam
int3
or
push
fcmovne
mov
pop
pop
in
fmull
lds
mov
cmc
inc
lcall
mov
sbb
dec
mov
sub
mov
mov
jle
popa
in
sub
mov
inc
cltd
ljmp
adc
fsubs
cmp
in
addb
mov
cltd
mov
aam
insl
or
or
cwtl
push
xchg
add
addb
sub
in
or
addr16
hlt
ret
data16
jl
je
add
ja
jno
popa
push
int
jl
movsl
divb
lock
incb
int3
std
sub
mov
in
and
not
mov
gs
jmp
lods
and
xor
xor
xor
or
jp
pop
ds
cli
sub
repz
xchg
rcll
mov
roll
mov
xor
dec
push
call
enter
xor
push
sub
loop
sbb
push
pop
add
int3
jle
mov
sub
xchg
xchg
fistl
and
vpcmpeqw
lret
push
or
xor
test
test
cltd
or
push
repz
xchg
and
in
addr16
dec
adc
out
dec
imul
loopne
dec
dec
out
clc
fnstcw
test
sbb
imul
mov
in
clc
cld
das
lcall
jp
push
pop
sarb
lods
leave
fsubrl
push
cmp
inc
and
or
loop
sbb
arpl
sub
ret
xchg
aad
and
push
daa
sbb
pop
call
push
xchg
dec
xor
sub
xor
enter
jg
jae
mov
orl
pop
jb
cmpsb
insb
js
dec
xlat
test
mov
mov
jno
cmp
out
push
inc
jmp
xchg
dec
add
sub
dec
rorl
xor
enter
testl
pop
call
pop
icebp
hlt
stc
test
leave
jne
pop
cmp
inc
mov
add
js
inc
out
cmc
sub
and
mov
sbb
mov
pop
cmpl
cmp
lods
pop
dec
mov
inc
insb
cmp
out
sbb
adc
gs
into
test
pop
ja
repz
inc
adc
dec
jg
cli
pop
push
add
xor
xor
xor
or
lock
jns
and
adc
mov
xor
or
or
jle
fwait
js
mov
mov
sub
pop
test
adc
adc
xchg
in
je
inc
xchg
dec
pop
xchg
jge
das
pop
in
js
sub
or
les
add
nop
jge
push
pusha
mov
stc
dec
int
inc
cltd
push
fs
int
lock
jno
cmp
imul
jg
jp
das
xor
and
stos
icebp
dec
bound
dec
fdivrl
ja
decb
mov
push
shll
cmp
or
cmp
xor
sub
push
and
xchg
xlat
add
loop
push
mov
adc
and
mov
rorb
xchg
mov
cs
jge
clc
xchg
clc
push
or
sub
and
jb
ret
sarl
push
orb
ret
jp
mov
mov
jmp
dec
sbb
dec
sub
inc
xchg
jne
sbb
mov
daa
shll
add
mov
sti
xor
jbe
mov
cmp
out
dec
adc
ja
lods
push
cmpsb
push
mov
stos
pop
xor
lahf
fs
pop
mov
push
sbb
test
mov
mov
scas
jbe
dec
lock
push
mov
arpl
inc
lods
pop
mov
cli
sub
mov
mov
pop
and
push
inc
jp
xor
mov
adc
mov
in
lods
pop
inc
jno
dec
stos
inc
dec
je
ljmp
lret
mov
and
pusha
inc
mov
and
enter
sahf
xchg
rorb
mov
inc
pushf
imul
mov
addl
sbb
inc
mov
ds
inc
mov
inc
inc
pushf
outsb
sbb
data16
sub
sahf
cmp
lea
mov
cmp
mulb
xchg
sub
inc
push
inc
pop
cmp
ficoms
aas
pop
or
lods
bound
outsl
mov
adc
mov
push
movb
call
sub
pop
push
and
fisubrl
pusha
mov
das
cs
leave
cwtl
div
push
int
xchg
iret
les
jg,pn
test
test
movsb
mov
popa
adc
inc
pushf
jne
sub
xorl
xchg
into
inc
cmpsb
cmp
sbb
pop
adc
lret
cltd
jp
mov
inc
js
bound
loope
cmp
xchg
sbb
adc
es
mov
sub
inc
and
jge
outsb
xchg
add
ja
push
lods
and
insb
pop
inc
repnz
sti
movsl
and
rclb
inc
xchg
or
int3
test
push
fisttps
inc
stos
push
inc
out
jns
mov
dec
pop
or
push
dec
pusha
into
lcall
or
out
jp
mov
sub
test
add
cmp
rcll
js
pop
test
lds
push
sub
sti
ds
movb
daa
dec
mov
adc
ds
jle
into
and
lea
pop
pop
jmp
cmc
shlb
mov
jecxz
insl
loope
add
dec
sub
nop
mov
push
and
insb
fcoms
cs
movsb
and
inc
cmpsl
sub
ficoms
mov
int3
adcl
mov
push
pop
xor
cmp
sub
push
rclb
cltd
xor
jnp
lods
xchg
mov
adc
mov
leave
fimull
xchg
call
test
and
adc
es
popa
push
xchg
mov
pop
jle
inc
push
sbb
xchg
add
into
or
adc
scas
ljmp
mov
add
jp
mov
scas
jb
mov
adc
xchg
sbb
and
daa
adc
filds
movsb
and
lods
in
mov
es
imul
ficomps
cmp
push
adc
mov
jbe
mov
pushf
xchg
das
pop
inc
cmpsb
and
add
enter
divl
insl
add
loopne
movsb
lahf
push
adc
popf
loope
sub
sti
cmp
mov
and
mov
movsl
mov
loop
fnstenv
cmp
mov
xor
mov
lret
inc
lock
push
and
insl
add
and
adc
pop
arpl
imul
cmp
and
cmp
fldt
sub
lret
sub
xchg
icebp
push
mov
gs
dec
mov
mov
call
add
idiv
es
inc
loop
jle
jp
cwtl
pop
movsb
ljmp
and
mov
inc
mov
pop
das
in
push
mov
imul
sbb
or
shrb
jp
sub
jb
xlat
movsb
fistpll
xchg
or
repz
sbb
inc
dec
or
sarl
inc
pop
lret
jp
aaa
jne
orl
lods
xchg
dec
cmp
lods
les
mov
pop
scas
mov
inc
mov
or
ds
xchg
shrd
loopne
call
lret
int3
cmp
iret
mov
jne
inc
mov
fiaddl
jge
pop
add
dec
mov
and
gs
jnp
push
push
add
lret
inc
pop
adc
xchg
sahf
cld
lods
fcomi
in
int3
lock
call
adc
pop
mov
mov
mov
add
shrl
fbld
lds
xchg
daa
pop
lea
push
add
movsb
pop
jns
ret
add
cmc
test
cmpsb
and
shl
xor
sar
jbe
pop
popf
sub
jnp
add
cmp
push
xlat
dec
xor
or
mov
js
je
lds
push
sub
jne
inc
xchg
pop
or
insb
adc
inc
ja
mov
fmull
jnp
push
dec
pop
das
mov
mov
or
cmp
xchg
xchg
adc
mov
icebp
sub
fistpll
or
bound
and
add
nop
lea
repz
dec
je
mov
pop
pop
movsl
loop
pop
xor
int
fisttpll
fadds
push
lahf
push
into
jne
insl
pop
xor
add
fstps
out
xor
insl
inc
ds
fdivs
pop
adc
push
jg
int3
orb
mov
cmp
xchg
dec
cmc
fxch
gs
stos
xchg
jae
fbstp
stc
insl
loopne
fs
push
xchg
sbb
push
ret
xor
daa
push
das
call
pop
pop
or
sbb
sub
ret
inc
sahf
popa
cwtl
xchg
lahf
rdtsc
mov
or
mov
inc
inc
mov
hlt
mov
pop
push
cmp
mov
call
and
xchg
mov
cs
dec
adc
fcompl
aas
pop
xor
ret
cmp
data16
hlt
movsl
xor
daa
jne
aaa
sub
xchg
push
dec
pop
pusha
stc
es
popf
mov
nop
mov
dec
push
mov
inc
jbe
push
or
je
pop
call
jmp
or
xchg
sub
or
cli
adc
and
mov
mov
ret
add
or
inc
outsb
adc
andl
adc
push
push
mov
mov
and
mov
pop
push
or
xchg
pop
adc
addr16
enter
pop
xchg
cs
sbb
sbb
inc
jmp
arpl
dec
jo
push
add
test
loope
push
dec
push
cwtl
int
xor
sbb
add
mov
mov
mov
fbstp
imulb
push
mov
mov
jmp
aas
cmp
push
scas
loope
xchg
js
test
xchg
clc
imul
pop
cmpsl
popf
test
xchg
sub
mulb
cmp
push
pop
cmpsl
xchg
icebp
pop
and
and
lahf
jns
sub
rolb
mov
dec
mov
jno
sub
mov
sbb
call
daa
outsb
push
mov
adc
mov
cmp
and
mov
xor
ret
insb
xor
fs
pop
ds
and
push
xor
mov
push
jae
adc
fwait
mov
mov
jmp
push
mull
aas
sub
sbb
daa
cltd
jno
movsl
mov
add
mov
and
or
push
push
jmp
clc
jnp
jns
pop
test
pop
movsb
fldt
subb
inc
push
push
fadds
dec
pop
and
icebp
arpl
mov
pusha
xorb
mov
inc
xor
fnstenv
stos
pop
ret
aam
dec
xchg
xor
xchg
sbb
sbb
pop
int3
loope
push
and
imul
out
sahf
sub
pop
dec
dec
cmpsb
ja
aam
mov
repnz
xchg
ljmp
lret
or
out
cmp
pop
add
or
dec
pop
sahf
mov
cwtl
ret
loope
push
outsl
adc
outsl
sub
and
test
push
cs
adc
or
lock
adc
adc
cmp
enter
pop
xor
pop
jns
shlb
xor
cwtl
xchg
aaa
insb
call
das
or
inc
xor
dec
inc
push
inc
pop
pop
test
enter
push
inc
mov
popf
inc
adc
jle
pop
rep
shlb
sub
and
enter
sub
cmp
xlat
mov
in
or
outsb
insb
sub
jo
aaa
and
cld
pop
mov
fwait
test
or
je
xchg
or
and
xor
mov
addb
pusha
cmp
mov
or
rcll
and
jns
or
leave
sahf
dec
sysenter
and
adc
mov
enter
and
adc
fsubrl
js
std
dec
clc
sbbl
fnstenv
xchg
mov
ds
inc
jae
pop
bound
call
lods
insb
adc
into
lds
sub
stos
dec
cwtl
mov
test
push
adc
jns
xchg
mov
daa
xchg
inc
cs
push
xchg
in
repnz
push
fwait
sahf
push
iret
pop
jns
ret
jne
push
inc
enter
push
sub
or
iret
mov
push
cmp
sub
push
aas
inc
jmp
sub
shll
sub
mov
add
xchg
jp
push
jg
inc
adc
pop
mov
dec
push
mov
push
xchg
sbb
or
dec
sbb
js
pop
push
sub
mov
dec
int3
movsl
sub
jnp
mov
xchg
ret
push
xchg
data16
dec
and
cs
inc
outsb
pop
adcb
jb
pop
repz
xchg
imul
loope
stc
insb
lcall
inc
inc
jb
testl
mov
cwtl
add
xor
mov
pop
xor
fcoml
popa
pop
lret
cmp
lds
cmpsl
push
das
je
sub
push
movsb
cmp
and
adc
pop
mov
cmc
inc
pop
rorb
mov
incb
jbe
cmpsb
xor
push
jno
mov
addb
push
cltd
in
push
addr16
inc
ljmp
xor
shl
adc
xchg
rcr
sub
push
sub
push
test
in
imul
xchg
jecxz
rcrl
mov
fildl
mov
dec
push
mov
xchg
je
sbb
insb
or
ds
rorl
xchg
push
test
cmp
lock
cmp
in
outsl
cmp
fstl
popa
adc
rcrb
testl
aam
mov
sub
pop
and
pop
rcrl
sbb
mov
sbb
inc
pusha
sbb
data16
jnp
sbb
inc
or
inc
push
xchg
insb
mov
xchg
mov
mov
push
jp
push
es
sarl
dec
sub
sub
adc
popa
pop
cmp
cmp
ljmp
movsl
push
mov
pop
inc
ret
mov
dec
cmpxchg
pop
push
test
dec
jmp
sub
inc
cmp
sbb
out
push
xlat
shl
cmp
or
add
xor
jb
push
lods
les
int
orl
cld
and
cwtl
movsl
inc
add
xchg
scas
xor
call
aam
push
push
xor
xor
or
icebp
mov
in
sub
pop
das
push
push
push
std
cmp
aas
rcrb
dec
or
xchg
or
add
push
xchg
xor
pop
ljmp
test
int3
push
push
adcb
inc
js
or
inc
movsb
push
das
adc
jnp
in
push
mov
pop
int3
ss
or
ficomps
mov
push
cli
mov
std
dec
repz
fbstp
call
les
cmpsb
subl
ret
cmp
pop
or
xor
xchg
test
bound
add
roll
mov
xor
dec
jno
xor
fwait
mov
pop
dec
sbb
sbbb
orl
es
push
push
cmp
push
dec
fstpl
clc
xchg
enter
popa
int3
ret
dec
push
xchg
and
dec
aaa
push
add
and
lock
jle
ds
div
and
push
pop
dec
aaa
in
data16
test
mov
ljmp
cmp
sti
and
sub
scas
loop
sub
lret
mov
bound
mov
fsubrp
xor
lret
adc
mov
push
psubsb
cmp
imul
sbb
sub
movsl
cwtl
and
adc
rorb
mov
mov
dec
add
lods
cmp
inc
lock
mov
in
push
and
outsb
xor
cmp
test
jb
mov
xchg
in
js
es
rcrb
sahf
sub
rsm
mov
sbb
push
sbb
repz
sub
ss
sub
dec
xchg
sbb
jmp
scas
xchg
mov
xchg
pop
push
add
xlat
dec
nop
cmp
int3
inc
outsb
xchg
fistpl
xchg
stos
mov
mov
aaa
add
mov
cmpsl
lock
xchg
dec
xor
movsb
cmp
xchg
cmp
jmp
push
sub
aad
and
jnp
adc
sub
addr16
arpl
les
hlt
mov
inc
pushf
mov
je
jb
xchg
cmp
ja
stos
dec
mov
and
inc
add
jle
orb
push
add
ret
cmp
aam
adc
push
adc
xor
mov
test
mov
out
jp
cmp
xchg
adc
adc
dec
insl
pop
hlt
aam
and
pop
push
xchg
addl
mov
bound
pop
xor
adc
aad
pop
xchg
mov
sbb
stos
scas
adc
push
sub
ljmp
dec
push
jns
jo
insl
ljmp
push
xchg
jl
mov
mov
dec
dec
mov
dec
daa
dec
mov
mov
jae
or
sub
mov
mov
xor
add
pop
xor
mov
cmp
jl
jns
mov
adc
fwait
sarl
sbb
and
push
xor
rorl
mov
je
mov
pop
or
or
sarl
adc
push
scas
in
addb
inc
lcall
je
adcb
and
dec
or
xor
xchg
in
add
mov
cmp
out
jp
mov
imul
dec
push
test
inc
ret
inc
fldt
inc
adc
inc
mov
clc
push
stos
and
out
push
ss
inc
mov
adc
pop
out
sbb
mov
pop
mov
nop
fcom
push
jg
cmpsb
dec
adc
movsl
sub
sbb
inc
jae
jg
mov
insl
inc
and
fisubrs
push
inc
adc
mulb
cltd
sbb
dec
les
jb
or
push
out
xchg
add
fwait
dec
pop
dec
std
push
test
cmp
out
pop
imul
loop
movsl
shr
hlt
rorl
or
int
mov
lahf
cmp
popf
push
xchg
inc
sbb
jg
subb
or
sbb
sahf
jle
mov
jg
mov
push
dec
aam
xchg
pusha
push
xor
cs
push
xchg
notb
xchg
push
inc
lods
sahf
dec
and
imul
and
xchg
int3
push
int3
mov
xchg
in
ljmp
mov
ja
das
jmp
sbb
push
cmp
loop
jns
mov
push
push
and
cmp
push
jg
pop
and
xor
popf
push
cmp
xchg
pushf
push
mov
mov
xorb
sahf
push
jmp
iret
mov
pop
rorl
push
and
pop
xchg
push
jno
dec
cmpsb
ja
out
inc
cmp
mov
cmp
inc
and
mov
sahf
in
mov
sub
movsl
sbb
stos
mov
sub
xchg
mov
iret
arpl
cmp
aas
fildl
xchg
mov
xchg
mov
mov
mov
and
and
dec
mov
aas
or
dec
fists
aam
gs
inc
arpl
xor
daa
adc
movsl
jae
rcr
adc
lea
repnz
mov
adc
xchg
scas
push
and
ljmp
clc
xor
ficomps
fdivrl
pop
ret
pop
adc
xor
pop
mov
ret
or
ret
dec
and
and
mov
hlt
xor
xor
jbe
js
ljmp
fwait
sbb
pop
jle
and
fistl
dec
insb
push
clc
push
insl
jbe
xchg
cmpsl
sub
or
dec
adc
pop
mov
lea
inc
insb
pushf
imul
sub
mov
sbb
add
mov
cld
inc
fdivrs
sub
inc
lds
pushf
imul
out
scas
jae
xchg
adc
cwtl
cwtl
push
jmp
cli
cmpsl
jmp
mov
mov
or
mov
test
pusha
push
in
xchg
push
mov
neg
or
fcmovnb
loope
xor
jp
outsl
mov
add
adc
add
ss
das
adc
xor
or
es
jbe
leave
loop
jae
push
push
andl
mov
adc
pop
add
cmp
jo
movsb
test
fisubs
jl
push
mov
pop
popa
call
dec
das
sub
outsb
inc
pop
adc
xor
addb
xor
sbb
in
arpl
test
je
cltd
sti
adc
sbb
std
sbb
sbb
xchg
push
inc
mov
and
sbb
mov
push
sbb
and
sbb
fmulp
sbb
push
mov
jle
shll
jnp
and
xchg
add
or
and
or
pop
pusha
xor
aas
push
dec
lret
mov
cli
dec
xchg
push
inc
dec
flds
push
xchg
das
insl
lock
dec
dec
push
jns
aaa
mov
ljmp
dec
sti
cmp
push
nop
andb
push
sub
leave
or
stos
inc
mov
es
push
into
shr
pop
roll
call
mov
jle
xchg
inc
adc
subl
sahf
xor
sub
adc
mov
inc
pop
lock
jae
inc
or
sub
mov
add
jmp
push
pop
test
sarl
jecxz
add
xor
cli
pop
push
adc
adc
add
stos
xchg
inc
xchg
pop
xchg
inc
fdivl
inc
mov
inc
mov
pop
add
shlb
stc
xchg
or
xlat
in
repnz
xchg
inc
cwtl
sbb
andb
dec
inc
les
orl
jnp
jbe
sub
clc
and
imul
ljmp
mov
jmp
inc
lret
mov
decb
adc
dec
mov
lods
inc
aaa
nop
pop
sub
sbb
or
pop
push
and
push
mov
insb
sahf
fsub
cmp
test
mov
mov
aad
mov
push
lret
xor
dec
and
and
jae
hlt
mov
addr16
adcl
xor
lock
bound
sbb
dec
dec
or
nop
imul
lret
lock
scas
movsl
mov
test
mov
in
xchg
mov
cmpl
xchg
inc
or
lret
loopne
xchg
hlt
ret
jp
push
arpl
sbbb
mov
or
stos
add
ljmp
outsl
and
pop
or
sbb
and
loopne
dec
out
movsl
xor
jno
push
mov
dec
loopne
dec
xchg
cmp
nop
adc
jp
inc
bound
data16
dec
in
jbe
sub
mov
xchg
adc
pop
cmc
sbb
or
leave
inc
xor
xchg
sub
stos
popf
pop
test
cltd
mov
mov
insl
add
inc
inc
into
test
xchg
inc
pop
daa
scas
in
push
pop
xor
lea
cli
push
push
dec
mov
ret
test
leave
test
sbb
push
or
testl
bound
shlb
mov
icebp
jnp
or
int
sub
xchg
sbb
lock
fstl
ret
pop
in
cs
mov
cmc
adc
inc
sbb
sub
dec
xor
bound
movsb
xchg
stos
sub
sbb
addl
repz
push
dec
sbb
mov
dec
mov
push
sarl
lock
dec
pop
sbb
stos
dec
adc
inc
inc
rolb
mov
push
mov
adc
inc
scas
shlb
sub
das
sub
daa
xor
xchg
push
int3
jb
rcrl
incb
cmp
in
in
add
dec
dec
pop
lret
pop
pop
xchg
adc
lds
or
mov
cmp
push
jge
cmp
xchg
and
sbb
mov
dec
adc
ss
inc
inc
inc
and
xor
jle
imull
adc
xor
cmpb
inc
add
mov
sub
sbb
aam
lods
cld
imul
mov
bound
stos
dec
in
nop
adc
xchg
push
jp
imul
sub
repz
out
lock
pop
out
test
cs
cmp
ficomps
mov
test
or
jno
arpl
add
sahf
xchg
pop
cmpsb
fwait
mov
and
pushf
inc
int
cmp
out
pop
push
or
in
dec
pusha
dec
mov
test
sbb
and
or
addb
xchg
jle
mov
es
cmp
xchg
adc
mov
loope
rcr
das
xchg
in
ljmp
int3
jge
je
es
dec
mov
dec
sbb
push
popa
test
pop
lods
dec
inc
xchg
sbb
ss
add
cwtl
dec
or
pop
addr16
pushf
sub
add
xorl
push
rol
push
xor
mov
sti
xor
call
sub
data16
in
mov
push
xchg
push
daa
cmc
daa
push
daa
jnp
push
aaa
iret
shlb
mov
mov
loopne
dec
push
pop
popf
cmpsl
ljmp
out
repz
cmpsb
dec
inc
js,pn
dec
dec
adc
jle
mov
movsl
js
inc
jecxz
call
test
adc
int
mov
xchg
inc
pop
ja
jl
pop
js
jne
test
mov
pop
in
or
shl
push
adc
and
daa
xor
es
xchg
into
xor
or
imul
lds
repnz
push
push
xor
adc
jg
jg
jns
jb
fcmovu
and
cmp
push
push
dec
lret
in
repnz
ds
lcall
in
lcall
lahf
push
movsl
xchg
mov
push
xchg
inc
fcomps
je
and
ljmp
hlt
mov
xchg
fsubs
clc
inc
dec
jmp
sub
or
jecxz
xchg
ljmp
pop
xor
dec
hlt
stos
or
xchg
loopne
test
or
dec
addb
enter
fildl
cli
ljmp
mov
jmp
add
jmp
popa
push
pop
mov
add
ret
cmp
je
sub
lods
cwtl
enter
lahf
leave
jae
and
mov
das
pop
out
mov
xchg
pushf
push
cmp
and
and
sub
pop
sti
mov
js
dec
push
int3
sbb
arpl
orl
outsb
les
pop
call
mov
sbb
sub
sbb
popa
sub
leave
xchg
fcom
movsb
jo
pop
loopne
push
mov
jle
dec
ret
push
adc
inc
mov
sub
mov
stc
sub
mov
shlb
mov
dec
xchg
sbb
aas
ret
lds
and
lahf
pop
pop
outsb
mov
pushf
cmp
pop
dec
movsb
push
mov
popf
jbe
stos
push
adc
cmpsb
pop
cmp
push
cwtl
dec
sbb
xor
and
sar
dec
jle
repnz
std
fldl
xchg
jbe
jb
lcall
outsl
and
repz
imul
mov
popl
daa
and
pop
xor
sbb
jo
push
push
jns
bound
ret
data16
xchg
add
xor
fmulp
adc
xor
test
fwait
mov
inc
ret
adc
adc
icebp
in
inc
out
sub
xchg
adc
mov
in
xchg
push
jns
dec
push
pop
mov
add
fnstenv
dec
cwtl
cmp
clc
inc
dec
pop
xor
pop
cld
or
push
enter
aas
cmpsb
mov
in
nop
sbb
cmp
adc
sub
add
mov
fidivrl
ficoml
cmpsb
out
outsl
sub
jle
push
push
inc
lods
sbb
cli
mov
fwait
mov
inc
mov
inc
inc
insb
mov
fildl
addr16
inc
pushf
adc
lahf
test
sbb
je
adc
stos
add
adc
mov
sbb
std
dec
sub
scas
cli
lock
fldenv
cmpsb
stos
push
dec
js
mov
dec
or
insb
xor
mov
fwait
pop
xor
xor
enter
movsl
fwait
sub
sbb
xor
adc
cld
jecxz
xchg
iret
ja
dec
mov
mov
stos
ljmp
daa
adc
and
adc
bnd
stos
adc
test
xchg
pushf
mov
nop
mov
xchg
push
scas
adc
daa
pop
push
push
call
sbb
xor
in
lret
lock
inc
cmp
jmp
mov
push
xchg
inc
cmp
mov
cmp
push
push
mov
push
pop
jne
in
movsb
lods
sbb
movsb
ljmp
inc
sahf
sbb
push
in
lods
cmp
sbb
mov
push
scas
jmp
lcall
jb
sub
aaa
pop
testb
adc
xchg
dec
lods
insl
ss
jge
sub
adc
jae
scas
jnp
imul
data16
xchg
xor
push
rcl
xchg
movsl
test
cmp
or
or
add
sub
ret
pushf
or
mov
outsl
xchg
ret
add
ret
shr
aas
popf
inc
sub
pop
out
sub
push
mov
push
xor
xor
mov
movsl
imul
sub
pushf
cmp
imul
shrb
je
repnz
in
push
daa
ret
mov
inc
lods
and
fisttps
xor
ret
mov
dec
mov
gs
and
jmp
pop
insl
ret
xor
jae
out
xchg
call
mov
inc
shr
jecxz
adc
into
or
sbb
pop
dec
cmpsb
jl
dec
ret
cmp
lods
dec
js
or
dec
stos
insl
inc
mov
cs
inc
pop
test
pop
dec
filds
sbb
jnp
or
xor
sahf
pushf
js
mov
in
xchg
mov
mov
scas
or
or
movsb
cmpsl
negb
je
int
mov
mov
out
push
lcall
test
aaa
sbb
inc
pop
out
in
es
xor
cmp
mov
pop
or
inc
pop
xchg
fldt
xor
xchg
inc
hlt
dec
add
mov
fildll
add
arpl
leave
aaa
jns
sbb
adc
fstpt
pop
enter
pop
jbe
popa
mov
inc
mov
cmpsb
cmp
or
xor
incb
sbb
outsb
or
je
and
icebp
call
stc
and
add
sbb
jl
mov
outsl
inc
push
sub
nop
inc
sub
cmp
sarb
jg
addl
jg
pop
adcb
notl
push
sbb
xor
and
lock
xchg
push
js
mov
int3
push
hlt
imul
clc
push
inc
add
mov
xchg
aaa
roll
mov
add
push
sub
test
jle
dec
enter
call
mov
jmp
pop
out
or
xor
sub
dec
int
or
scas
dec
xchg
xchg
sbb
dec
lods
out
push
rorb
das
adc
inc
xchg
scas
jl
idivb
pop
pop
dec
cmp
mov
adc
das
mov
repz
rorb
sbb
sbb
fs
push
fnstenv
pop
or
mov
cmc
mov
or
cmc
pop
xorb
sarb
xor
aaa
sub
insb
sub
jmp
mov
sub
mov
and
jo
in
jnp
lods
imul
jne
lds
xor
mov
dec
cld
mov
mov
add
mov
icebp
or
xor
repz
sbb
or
test
pop
push
sbb
adc
sbb
mov
pop
xor
dec
lret
sarl
push
mov
mov
roll
movl
movsb
fld
maxps
fisttps
movsb
negl
cs
xor
adc
repnz
fstps
in
add
sub
aaa
ljmp
daa
call
adc
inc
jmp
test
cmp
xor
mov
mov
iret
mov
pop
mov
mov
inc
xchg
xor
lahf
sahf
jg
pop
mov
sub
mov
or
adc
fisttpll
jae
test
ljmp
lods
fwait
jne
inc
iret
inc
lock
xchg
sub
lea
ljmp
cli
add
stos
cltd
mov
xlat
sbb
push
mov
in
add
mov
adc
mov
daa
cmpsl
jbe
adc
xor
or
sub
je
notb
xor
cmc
dec
andb
and
je
das
mov
sub
push
xchg
dec
in
dec
shlb
xchg
or
pop
pop
cmp
idivb
inc
jns
mov
push
cmp
mov
xchg
xor
push
mov
outsl
decb
push
pushf
add
loope
mov
sub
xor
push
popa
pop
sub
sbb
xchg
shl
jae
andl
stos
inc
cltd
int3
shr
sahf
mov
inc
insb
mov
mov
xchg
inc
test
aam
sbb
mov
mov
je
push
cwtl
test
lods
jp
imul
js
pop
sub
popf
push
pop
std
fsts
pop
push
lds
sbb
inc
aam
push
cmpsb
enter
std
lret
int
xchg
arpl
imul
mov
mov
ds
push
test
insb
sub
sub
sbb
mov
and
rcll
test
lcall
sahf
mov
lret
or
mov
mov
inc
and
mov
adc
mov
mov
arpl
lea
fldenv
sbb
pop
xor
cltd
sbb
fincstp
loope
xor
add
insb
sbb
inc
addl
lret
aam
mov
xchg
data16
bound
mov
cld
pusha
adc
push
in
dec
adc
sarb
rcll
push
aam
mov
inc
test
in
sbb
xchg
divb
dec
pop
push
pop
push
insl
stos
test
sbb
add
icebp
cld
xchg
loopne
inc
out
pop
jbe
mov
mov
cmp
fcomi
jns
stos
dec
leave
jno
cmpsb
sbbl
sbb
bound
adcb
adc
xchg
or
nop
scas
lcall
adc
xchg
arpl
sub
pop
pop
and
nop
mov
sahf
orl
jb
and
jo
sub
lea
cltd
es
sbb
pushf
sarl
je
cmpsl
push
mov
hlt
call
xor
aam
push
jecxz
adc
adc
fistps
pop
cmp
mov
shr
dec
cmpl
movsb
fists
in
mov
pop
stos
enter
shl
enter
add
xor
inc
push
and
xor
xchg
mov
adc
mov
data16
xchg
das
cmp
lods
and
fisubs
mov
or
jbe
push
push
dec
mov
stos
das
adc
jb
dec
adc
or
adc
inc
stos
cmpsb
daa
aas
and
push
addr16
xor
cwtl
ret
out
sahf
dec
dec
xor
mov
rol
adc
lret
xchg
test
sub
sarl
das
adc
imulb
outsb
push
cmp
adc
xchg
push
add
insl
push
stos
adc
sbb
cs
stos
sbb
out
inc
push
lds
xor
cmp
negl
push
xchg
sbb
subl
pop
push
lret
push
jge
stc
repnz
dec
adc
imul
je
add
aaa
sub
sbb
cmp
cmp
push
or
pop
jo
dec
and
xor
push
dec
les
data16
ficoml
add
inc
lods
inc
dec
xchg
sub
inc
jle
dec
push
mov
pop
mov
sub
bound
loopne
dec
push
lods
cmp
in
adc
loop
pop
and
sub
paddb
cmpsl
pop
dec
aad
push
xchg
and
jmp
push
sub
sub
cmp
push
cmpsl
cmp
push
sbb
xor
cvtdq2ps
es
push
sbb
pop
add
lock
add
mov
cwtl
fdivr
sub
aam
fldenv
adc
mov
jle
or
fisubrl
andl
or
xchg
sarl
xor
repnz
frstor
inc
js
xchg
enter
xor
mov
push
loop
inc
mov
int
jbe
cmpsb
loop
adc
push
mov
daa
inc
add
rorl
scas
imul
pusha
adc
leave
repnz
dec
lcall
sbb
pop
adc
cs
je
sbb
addr16
pop
dec
and
enter
or
daa
std
adc
cli
pop
insb
xchg
arpl
adc
mov
adc
gs
pop
xor
jg
movb
fs
cmp
aam
out
inc
enter
cld
push
mov
pop
adc
in
mov
sbb
dec
and
pusha
fisttpl
lods
sub
inc
aaa
dec
shll
and
aas
cmp
mov
sub
fisttpl
pop
mov
lahf
or
test
push
enter
sahf
addr16
pop
fstpt
sub
test
add
sbb
mov
repnz
push
inc
mov
sbb
add
xor
jbe
aam
incl
call
and
jnp
mov
push
dec
ret
xor
or
push
fildll
fcomps
call
movl
push
int3
frstor
stos
inc
lods
pop
push
pop
cmc
sbb
hlt
jbe
lahf
push
dec
faddl
dec
fsubrl
pop
pop
add
insb
mov
push
cli
xchg
cmp
sbb
imul
aad
inc
pop
or
shrb
fwait
into
pop
ja
int3
dec
stos
and
push
cmpsb
inc
fsubs
or
addb
mov
ficoms
loopne
out
sti
jle
pop
data16
inc
cld
mov
mov
mov
daa
adc
pushw
jl
push
in
and
mov
jno
int3
stos
adc
jecxz
jp
push
xor
outsb
mov
test
adc
mov
xor
fwait
mov
xchg
lret
sbb
jb
sbb
popa
sub
call
repz
xchg
push
pop
pop
dec
cmc
js
call
js
pop
orb
and
lock
jl
loop
fbld
js
push
and
inc
das
push
xor
add
repnz
aam
push
push
mov
fcoms
enter
lea
insl
or
cld
in
mov
push
out
loopne
mov
cmc
lea
xchg
dec
xor
xor
push
xor
xchg
push
fwait
ret
mov
daa
inc
mov
les
mov
lea
ret
sbb
xchg
push
jno
xchg
fs
push
sub
cmpsl
sbb
mov
cmp
or
inc
and
ficomps
jmp
cmp
xchg
mov
dec
mov
xchg
faddl
mov
shrl
jecxz
add
lahf
xchg
xchg
or
pop
adc
add
outsb
imul
xor
xor
test
clc
fistpll
adc
cltd
repnz
cld
nop
stc
cmpb
cmc
fisttpl
push
add
out
sub
and
in
sub
xchg
mov
pop
dec
ja
xchg
mov
ret
fwait
push
xor
std
bound
cmc
lret
mov
pop
mov
xor
sub
xor
pop
lock
flds
out
pop
setb
call
or
dec
pop
cmp
aas
adc
cwtl
add
pop
and
testb
xor
inc
cmp
ja
xor
movsb
cwtl
mov
cmp
or
sub
test
xor
xor
unpcklps
inc
pop
rorl
iret
loopne
scas
sub
sub
in
sti
mov
scas
leave
repz
add
mov
repnz
lods
aam
mov
and
test
sarl
aas
cmp
sbb
fdivl
sbb
fistpl
fs
sbb
aaa
or
out
xchg
aam
hlt
sub
sbb
outsl
lock
pop
aaa
mov
pop
repnz
mov
fwait
jp
lock
out
arpl
lock
inc
sub
jnp
dec
pop
mov
adc
pop
push
lock
andl
push
sub
or
xchg
cmpsl
or
pop
in
dec
aad
xor
adc
pushf
loop
push
movsb
mov
jb
and
je
add
jae
jo
mov
insb
in
or
fwait
dec
test
add
cmp
xchg
sti
rcl
dec
ja
in
push
dec
adc
or
inc
mov
mov
sub
js
aas
add
xor
iret
add
pop
mov
lock
roll
and
jae
loopne
aas
dec
and
mov
cmp
into
outsb
aas
jge
push
fisttpl
xchg
into
jns,pt
pop
sub
lock
mov
cmpl
shlb
test
mov
dec
aam
cmpsb
das
imul
push
addr16
push
movsl
scas
push
outsl
loope
decb
cmp
dec
add
xchg
sub
cmp
push
lods
int
mov
push
lock
fsubs
test
test
or
pop
xchg
or
mov
push
cs
cmpl
and
sarb
fcoms
push
je
sub
sub
call
daa
inc
adc
daa
mov
sub
aad
repnz
xor
mov
es
push
enter
das
fdivs
mov
dec
push
adc
xchg
rorb
clc
push
mov
xchg
sub
xchg
add
mov
sbb
test
mov
dec
sbb
mov
lock
das
cmp
dec
lahf
test
addr16
mov
dec
fmuls
inc
sbbb
adc
rclb
inc
movsl
ret
cwtl
add
cld
insb
jb
sbb
sahf
mov
hlt
nop
in
adc
dec
inc
push
lds
jl
fsubl
dec
sub
push
inc
pop
jae
xor
push
pusha
sbbl
lret
mov
jo
pop
les
call
mov
adc
adc
add
das
lret
and
sti
ret
or
insb
and
adc
fistps
loope
ja
sbb
xchg
addr16
dec
add
int
hlt
call
ror
bound
cld
loopne
adc
xor
inc
push
je
mov
leave
pop
push
movsl
aas
add
xchg
dec
test
daa
inc
jb
or
outsb
inc
mov
adc
sbb
call
inc
into
sbb
sub
jge
js
xor
or
pop
repz
les
les
enter
or
push
stos
adc
mov
stos
ds
pop
dec
sbb
fbld
mov
imul
ja
xchg
add
xchg
and
push
in
popa
enter
int3
pop
test
seto
sub
add
in
push
and
jecxz
add
adc
jge
dec
inc
or
sbb
cmp
and
loope
stos
shlb
mov
jmp
sub
cmp
pslld
xchg
inc
lret
stc
push
lcall
les
in
notl
adc
lds
xor
sub
mov
in
hlt
xlat
cmpsb
lret
mov
aaa
add
jmp
fiaddl
adc
sbb
sub
pop
ljmp
add
cwtl
stc
movsl
rep
mov
inc
xchg
iret
out
enter
sub
and
cwtl
mov
daa
pcmpeqb
cld
sub
out
iret
scas
orb
andb
decb
insb
sub
sub
in
daa
jmp
das
adc
das
repz
jle
mov
pop
push
es
sub
fcmovb
dec
ljmp
mov
shr
sub
adc
ljmp
fcoml
jecxz
push
inc
jge
mov
cmp
fcmovnu
or
cmp
push
mov
xor
push
xchg
adc
lods
ds
cmp
iret
lcall
out
push
inc
fidivrs
jnp
sub
jno
inc
dec
hlt
push
lods
xchg
hlt
int3
cli
xlat
push
xchg
hlt
add
test
adc
pop
mov
mov
outsl
xor
leave
push
in
push
mov
in
aaa
and
add
icebp
or
jge
or
cli
mov
jb
mov
cltd
pop
pop
insl
xor
std
inc
mov
cmc
sub
or
xchg
or
loop
jge
mov
push
iret
sub
outsl
dec
rcrl
jle
cmp
out
lret
or
adc
call
mov
pop
cmp
mov
sub
cs
and
or
sbb
add
ja
sbbl
xchg
or
mov
add
inc
lea
add
jbe
dec
mov
xor
push
mov
mov
imul
xor
jbe
push
push
les
pop
xor
jmp
cmpsl
movsb
jl
clc
or
add
dec
lret
add
push
xchg
push
insb
mov
aas
mov
cmp
psubusb
sub
pop
repz
ljmp
icebp
push
push
mov
lea
pop
imul
jge
arpl
push
sbb
or
movsl
dec
clc
adc
mov
loope
out
cmpsb
inc
adc
and
cmp
push
xor
cmp
sbb
cmp
or
lods
addr16
push
adc
dec
sub
adc
or
popa
pop
push
dec
push
mov
addr16
adc
xchg
dec
mov
hlt
or
adc
inc
rorl
push
nopl
xchg
mov
or
add
add
stc
cmp
cmp
ss
and
add
cmp
jnp
je
adc
adc
cmc
test
push
cltd
and
jecxz
jg
out
jae
enter
orb
and
je
add
pop
jmp
xor
xor
xchg
shlb
movq
push
jge
insl
push
xchg
cmp
sub
inc
ja
call
jle
dec
ljmp
and
test
imul
push
add
paddsw
or
pop
movl
jb
and
or
pop
ret
push
cld
or
xor
cli
in
dec
mov
sbb
mov
pop
sub
or
mov
fs
imul
xor
cmpsb
sub
sbb
or
xor
and
sbbl
xchg
cmp
ret
push
inc
hlt
jae
dec
shrb
or
sbb
jb
push
iret
addr16
loope
sbb
ds
das
dec
xchg
fcmovnbe
cltd
add
std
or
mov
and
mov
sbb
cmpsl
sbb
push
stos
addr16
xchg
rorl
fcompl
out
pminub
mov
stos
dec
subl
ss
pop
fldl
sti
add
lds
imul
sub
xchg
sub
add
mov
push
xchg
xchg
clc
cmp
js
das
inc
dec
mov
xchg
or
enter
dec
adcb
call
ret
xchg
or
jg
jl
or
rcll
push
mov
cmp
or
xor
xor
popf
shrl
aad
lcall
mov
iret
mov
xchg
daa
int3
dec
xor
add
jge
out
decl
scas
sbb
cmp
shlb
ror
loop
and
push
push
add
push
imul
jge
cmpsb
sub
push
rcrl
xchg
cltd
je
or
xor
or
xor
shr
sbb
scas
adc
xor
in
cmp
je
bound
loope
push
push
xchg
push
in
js
lcall
add
scas
jmp
dec
pop
out
sbb
divl
sub
jg
sbb
imul
inc
inc
inc
inc
or
lret
sub
jl
adc
jns
xor
mov
inc
or
test
inc
cld
xor
mov
ljmp
inc
pop
inc
xchg
xchg
pop
sarb
dec
popa
mov
dec
or
and
xchg
xchg
jg
ja
dec
pop
add
or
pop
sbb
jno
ljmp
lret
insb
push
sbb
push
sub
movsl
ret
test
mov
mov
movsb
add
leave
rcrb
inc
xchg
mov
jno
lea
ss
nop
and
mov
cmp
mov
or
icebp
int
movaps
jl,pn
mov
stc
iret
cmpsb
clc
dec
xchg
sbb
sbb
pop
dec
inc
cli
add
lock
jns
mov
dec
push
xor
clc
aad
cltd
dec
xor
adc
inc
sbb
fs
mov
mov
jl
dec
pop
mov
jecxz
xchg
sub
insl
cli
mov
shlb
sbb
arpl
inc
push
pop
js
mov
insb
addb
mov
ror
cld
mov
push
clc
sbb
add
xor
pop
sbb
xchg
push
xor
in
adcl
dec
in
adc
fadds
movsb
adc
sub
xchg
test
jne
push
sub
mull
in
or
inc
movswl
cld
sti
xor
xchg
negb
daa
sub
xchg
xor
xor
adc
or
ja
aaa
addl
or
sbb
inc
sbb
shrl
pop
lods
xchg
adc
das
inc
mov
repz
mov
mov
inc
mov
push
adc
xchg
outsl
xchg
je
icebp
sbb
push
lret
inc
sbb
dec
push
in
or
clc
inc
je
dec
sub
inc
inc
sub
bound
push
adc
fistl
leave
mov
cmp
push
cmp
dec
jl
adc
js
jg
cmp
shrl
adc
jae
inc
push
mov
adc
outsl
bound
sbb
xchg
adc
jb
pop
mov
xchg
pop
rolb
lds
mov
or
jle
mov
bound
or
push
push
jge
pop
movl
fistl
leave
sbb
jo
fadd
jbe
jo
xor
addl
jl
nop
or
cmpsb
sbb
insl
fmuls
cs
enter
sbbb
lret
sbb
push
push
add
sahf
incl
mov
add
pop
push
adc
gs
inc
xchg
rorb
push
jmp
je,pn
or
sbb
cmp
or
call
lret
jp
adc
jmp
pop
into
or
loope
adc
arpl
sub
push
mov
add
inc
sub
mov
decl
pusha
iret
dec
push
adc
in
pop
stos
push
push
sahf
imul
ret
pushf
jnp
inc
and
in
stos
fucom
or
mov
sbb
out
jne
push
jb
mov
cmpsb
stos
insb
in
mov
adc
test
cmp
mov
inc
fdivrs
sbb
in
inc
jns
jmp
or
loop
out
sbb
fwait
xchg
lcall
xchg
out
iret
sbb
in
shlb
jl
nop
pop
out
movsb
xchg
fistps
push
dec
subl
lcall
ss
push
jbe
out
aaa
xor
cmp
cmpsl
jg
stos
pop
mov
jns
jle
cmp
push
sub
in
and
mov
inc
xor
das
sbb
mull
loopne
push
fsts
aaa
es
ret
subl
adc
jg
xor
dec
inc
add
call
xor
cltd
mov
push
inc
ret
pop
test
or
fisttpl
xor
popf
test
cmpsb
sub
and
inc
int3
nop
adc
nop
push
inc
dec
stos
out
stos
pusha
pop
dec
cmp
pop
dec
sub
xor
sbb
dec
push
gs
lods
fwait
cmp
in
das
pop
gs
pop
bound
pop
jl
sub
add
es
lcall
dec
xchg
xchg
cltd
mov
pop
cmp
cmp
add
xchg
jge
inc
addl
jbe
add
add
cmp
and
jb
scas
mov
sub
stc
call
addr16
aaa
ds
adc
ret
jnp
gs
push
cwtl
lea
xor
or
call
push
add
movsb
rcr
push
xor
or
ret
je
loopne
iret
or
out
dec
pop
mov
lret
jmp
mov
adc
sbb
ret
out
pushf
add
mov
jb
test
icebp
or
mov
iret
mov
es
jp
lcall
fcoms
enter
sbb
adc
lock
dec
push
sbb
out
sub
sbb
jo
ret
dec
or
imul
sbb
fmul
sbb
bound
sub
cmpsl
xchg
cwtl
and
cmp
std
pop
inc
ret
int3
xor
sbb
mov
adc
mov
mov
xchg
push
ja
lock
hlt
xchg
mov
sbb
add
fscale
in
and
popl
and
fildll
or
dec
add
or
leave
dec
lds
ljmp
pextrw
sbb
pop
jmp
test
lret
mov
cld
adc
icebp
sub
loope
mov
ret
xchg
pop
stc
cmp
nop
pusha
adc
rolb
shll
mov
pop
mov
neg
ja
inc
ret
in
xchg
xor
dec
mov
movsb
aad
jle
js
dec
pop
scas
push
pop
sbb
or
dec
and
inc
pop
inc
xchg
push
aaa
dec
je
fsubl
sbb
dec
adc
sbb
inc
adc
inc
or
addr16
fimull
sub
adcb
xchg
test
lods
mov
les
mov
imul
pusha
and
pop
sbb
inc
dec
jbe
aaa
hlt
jle
or
sbb
das
shll
out
or
sbb
dec
stos
mov
sbb
pop
adc
out
mov
test
loope
mov
and
lcall
cmp
and
lock
es
cmc
push
mov
xchg
icebp
xchg
test
jo
cmp
add
in
loopne,pt
dec
xchg
or
pop
out
ds
push
push
clc
lret
repnz
fisubs
jne
add
pop
pop
pop
int3
jl
mov
orb
test
jmp
movsb
fdivrs
sbbb
jbe
jbe
pop
xchg
cmpsl
in
sbb
fsub
pop
dec
cli
hlt
push
mov
xchg
adc
adc
test
movsl
adcb
sub
add
clc
xor
adc
outsb
lahf
add
imul
std
in
pop
adc
push
jle
jo
hlt
xchg
mov
fdivrp
sahf
xchg
xor
aaa
and
clc
scas
inc
in
mov
test
mov
rclb
mov
mov
stos
pop
scas
out
and
out
lods
rolb
lock
or
mov
mov
inc
int3
lock
mov
in
leave
popf
bound
push
lret
inc
divl
mov
dec
inc
scas
in
mov
mov
jecxz
out
adc
inc
fcoml
xchg
push
dec
pop
sub
add
push
xchg
pop
rolb
ljmp
in
cmpsl
jo
or
adc
push
lock
xchg
cmp
loope
cmpsb
adc
cwtl
mov
and
adc
les
in
jg
sti
inc
inc
push
scas
movsl
jl
xor
repnz
cltd
dec
dec
faddp
cmp
and
pop
fwait
xor
inc
mov
cmp
sarb
in
sbb
mov
rolb
lcall
pop
sbbl
or
or
jbe
lret
sbb
ficompl
and
sbb
mov
mov
popa
popf
adc
push
push
mov
fistpl
jmp
fildl
mov
adc
pop
pop
enter
jp
call
xor
push
insb
cmp
inc
jge
adc
push
and
pop
sarl
or
gs
push
repnz
lock
lahf
mov
and
adc
lods
roll
sti
int
sbb
add
enter
ja
movsl
iret
shll
mov
dec
popf
jmp
loope
sti
and
sbb
out
xchg
loop
andb
sub
adc
pop
aaa
scas
aaa
daa
rcrb
add
mov
mov
inc
in
pop
aaa
lcall
sub
popa
sub
jge
sub
push
xchg
icebp
xchg
outsl
pop
inc
pop
push
jne
stc
nop
or
hlt
ljmp
or
or
stos
inc
sub
xor
sbb
pop
mov
mov
adc
sbb
jge
loope
fs
je
mov
cmp
push
or
push
mov
lea
jo
clc
bound
dec
nop
add
icebp
push
lahf
lods
sti
lods
lahf
pop
add
adc
stos
pop
xchg
jae
pop
or
mov
out
insb
clc
mov
pusha
cmp
or
pop
dec
adc
sub
xchg
test
add
jmp
orl
xor
mov
jmp
or
dec
sbb
clc
hlt
xor
jl
or
sbb
std
push
pusha
xchg
and
aaa
or
jno
hlt
push
sbb
mov
or
jecxz
lock
int3
sub
imull
and
pop
push
jle
jge
fistps
fisubl
mov
fsts
xor
or
add
mov
lods
lods
sti
mov
dec
jmp
cmp
jb
adc
out
cmp
pushf
leave
lret
sbb
xchg
push
hlt
add
push
mov
cmpsl
push
sub
repnz
xor
jp
orb
scas
sti
sub
pop
mov
js
sub
adc
arpl
inc
pop
es
or
lahf
add
or
daa
insb
mov
rorb
shrl
les
pop
and
leave
aaa
lea
cmp
push
or
ret
dec
mov
cmp
lahf
and
push
and
dec
xor
cmpb
fnstcw
bnd
pop
sbb
adc
mov
jp
pop
xor
adc
fnsave
js
jmp
or
popa
adc
fcom
pop
or
lds
and
jecxz
jo
pop
xor
cmp
daa
or
lea
lahf
jge
daa
or
add
inc
test
ljmp
xor
xchg
inc
push
lret
mov
add
xor
idivl
jecxz
lock
sbb
sbb
ljmp
cmp
push
js
mov
rcrb
clc
mov
test
add
inc
xor
out
nop
ss
pusha
gs
mov
or
sbb
mov
add
in
mov
add
ret
pop
and
je
addr16
movsl
sbb
cltd
xchg
push
inc
push
pop
xchg
sbb
pop
jp
cs
imul
mov
inc
ret
push
or
fs
aaa
mov
xchg
push
xorl
mov
mov
test
push
xor
xchg
mov
adc
sbb
cmp
repz
push
shl
arpl
sbb
inc
push
mov
xchg
leave
inc
push
xchg
lods
test
push
jnp
sbb
dec
jo
add
shr
sub
adc
lcall
lods
in
cmp
daa
push
mov
mov
xchg
and
dec
outsl
push
add
pop
pop
push
gs
cmp
adc
ret
cli
inc
or
xor
adc
and
gs
out
movsl
xchg
jns
xor
imul
test
add
test
mov
in
andb
sub
imul
test
mov
lods
out
lea
adc
lods
fsubl
push
dec
pusha
adc
adc
adc
add
shlb
xchg
dec
das
mov
pop
push
xchg
jno
jae
sub
jo
adc
cmpsb
xor
jae
or
adc
inc
popa
adc
in
xchg
mov
xor
in
sub
std
dec
sub
adc
and
insl
outsb
and
mov
es
or
xor
movsb
fcoms
sbb
in
es
or
dec
or
pop
ljmp
js
jae
ffreep
pop
lret
push
mov
mov
push
out
ljmp
gs
and
pop
jo
cmpsb
push
add
lret
pushf
rorb
sub
mov
push
imul
cmp
inc
bt
mov
dec
mov
nop
sbb
sbb
cwtl
adc
push
mov
pop
jns
mov
cmp
or
dec
fisttpll
add
icebp
clc
leave
ds
pusha
mov
sub
movsb
xchg
dec
adc
mov
xchg
mov
inc
sbb
or
push
push
stos
adc
xchg
inc
xchg
jmp
imul
shl
sub
outsl
sbb
or
lcall
and
int3
je
adc
mov
jle
add
jo
testb
lret
clc
adc
or
pop
or
in
bound
sub
in
adc
and
sub
xchg
mov
adc
and
ja
cltd
push
push
cli
ds
inc
dec
inc
sbb
subl
loopne
xchg
mov
add
jb
pop
mov
call
add
das
sbb
pop
movsb
repz
lock
mov
ljmp
push
mov
loop
cld
jg
and
push
xor
jne
mov
xchg
push
inc
imul
sti
push
or
pop
addb
stos
loope
or
js
movsb
adc
out
mov
sbb
mov
xor
mov
cwtl
jne
insl
test
sub
inc
cmp
pushf
xor
ret
dec
repnz
fs
inc
in
fcoms
xchg
decb
cld
ja
rcrb
and
enter
repz
das
cli
mov
adc
lea
xlat
fstl
cli
sub
and
sub
mov
inc
pop
mov
push
jbe
mov
jp
mov
pop
xchg
rorb
mov
leave
and
inc
stc
xchg
pop
cli
xor
les
mov
or
or
inc
daa
xor
in
or
and
cwtl
inc
lds
movsb
mov
inc
pop
pushf
or
dec
cmp
aaa
mov
and
cmpsb
mov
and
push
mov
add
sbb
xor
cmc
mov
gs
daa
mov
and
push
xor
xor
stos
stos
sbbb
inc
ja
vrcpss
cmc
xchg
dec
cmpb
mov
cmp
and
push
or
jnp
repnz
lret
push
pop
push
aad
out
jl
and
or
movnti
adc
pop
xor
pop
inc
popa
adc
loope
std
mov
or
jecxz
mov
inc
jne
push
sub
mov
inc
into
daa
adc
cwtl
ljmp
stos
shl
xorb
fisubrl
mov
lods
or
bound
sbb
lret
dec
lds
xorl
push
xchg
or
cmp
pop
push
mov
mov
inc
lea
xor
adc
mov
iret
sbb
aam
jb
push
filds
mov
test
rorl
xor
fwait
repz
mov
neg
push
loopne
sbb
or
fiadds
xchg
push
repnz
cld
pushf
clc
outsb
dec
mov
fadds
sub
add
push
sub
out
xchg
lods
pop
fstpl
xchg
jnp
sbb
cmpsb
mov
push
int
dec
push
mov
dec
push
nop
nop
inc
test
mov
dec
clc
or
xor
movb
fimuls
or
xchg
pop
xor
aad
insl
sahf
test
outsb
push
sti
sbb
pop
sub
jne
and
push
inc
or
cmp
cmp
loope
shrl
sbb
jbe
sub
shlb
int3
inc
sub
sub
xchg
pop
std
sub
mov
mov
or
and
pop
out
test
or
or
mov
push
dec
push
adc
sbb
test
sarb
inc
or
aas
ret
inc
jl
fiaddl
mov
sub
cld
inc
ret
testl
es
ja
xchg
fistl
push
test
inc
and
lahf
rcll
or
xor
push
push
emms
clc
lock
jbe
cli
es
push
outsb
sub
add
inc
into
add
mov
inc
add
lods
int3
fucomi
scas
dec
and
and
dec
sub
add
add
pushf
fcmovb
loope
pop
or
pop
mov
out
jbe
scas
xor
adc
andb
pop
or
stos
pop
or
xor
jbe
pop
add
lods
xchg
xchg
dec
cmpl
dec
cmp
jl
adc
mov
popl
mov
jbe
mov
sahf
daa
nop
loopne
add
cmp
sbb
pop
outsb
add
dec
xor
loop
push
mov
aaa
rol
jns
push
mov
jnp,pn
cld
cmp
xor
hlt
or
xchg
lea
sarl
pop
loopne,pn
ja
lret
inc
ja
dec
lods
pop
or
rclb
mov
adcb
insl
pushf
pop
mov
adc
push
push
pop
movsw
mov
cmp
push
dec
sub
ljmp
add
mov
sbb
adc
adc
xor
push
ljmp
and
in
mov
add
and
push
mov
clc
cmpsb
sub
jb
adc
lods
js
movsb
aas
sbb
movsb
stos
fdivrl
pop
sub
push
dec
gs
add
push
add
je
mov
xor
pop
adcl
aad
imul
rcll
mov
push
push
dec
ss
shrl
dec
jl
mov
or
ds
adc
fs
lock
addb
cmp
pop
ss
xor
cmp
jge
lret
imul
pop
xchg
add
cmp
mov
lds
and
mov
push
arpl
enter
inc
xchg
je
nop
mov
jo
push
int3
mov
adc
icebp
test
pop
mov
adc
fwait
movsl
push
mov
jle
daa
gs
int
test
fcomi
sbb
fmull
mov
mov
nop
xchg
enter
movsb
stc
or
jno
cmp
mov
cmpsb
pushf
or
bound
push
add
dec
adc
loopne
or
ret
out
rorb
cmp
mov
imul
scas
cltd
push
jo
cmp
cld
jg
mov
jmp
or
iret
dec
push
movsl
dec
add
cmpsb
mov
mov
cwtl
cld
call
pop
div
popa
inc
xor
xor
pop
add
xor
daa
prefetch
mov
lret
jle
test
pop
int3
or
push
repz
setle
cld
or
mov
push
test
pusha
sbb
nop
dec
and
or
lcall
ljmp
das
xchg
xchg
mov
pop
in
int
pop
inc
sbb
sub
ficoml
jecxz
or
lahf
enter
stc
mov
inc
adc
pop
xor
ret
or
cmpsl
xchg
xchg
push
std
mov
push
push
add
pop
mulb
or
pop
cmp
or
cmpb
sbb
cwtl
adc
daa
and
sahf
cwtl
mov
mov
sub
xchg
dec
shlb
adc
or
push
cmc
jo
pusha
fists
jecxz
or
xor
xor
pop
sub
cli
sbb
or
xchg
jge
dec
adc
xchg
pop
mov
cmovae
inc
ja
ret
sub
dec
lcall
icebp
xor
inc
mov
and
and
out
push
ret
cmp
push
mov
dec
sub
xor
xor
in
repz
es
and
cmp
cmp
ja
cmp
imul
mov
out
sbb
mov
lcall
inc
lods
leave
aas
and
rcrl
pusha
and
data16
shlb
fistpl
es
and
jnp
dec
incb
je
inc
js
xor
pop
and
push
cmp
jns
insl
cwtl
cmc
mov
xchg
mov
inc
or
jae
loopne
push
stc
in
fwait
xchg
push
cmp
jge
outsl
popa
and
pop
lcall
xchg
and
mov
icebp
sbb
push
pop
adc
or
dec
pop
adcl
mov
xor
xor
mov
mov
mov
xchg
mov
or
cmp
xchg
jmp
sahf
jne
cmp
js
pop
jge
push
lock
sub
or
and
subl
sarl
inc
fisubrs
and
fbstp
test
shr
adc
push
xorb
aas
pop
and
cmp
vmwrite
sub
dec
push
out
cmp
fistl
mov
lods
daa
fistl
mov
xchg
dec
adc
or
dec
fcmovu
je
aad
fwait
jne
dec
sysenter
orl
sub
sahf
xchg
dec
sub
cwtl
add
sbb
xchg
cmp
dec
mov
xchg
mov
xor
aas
cli
daa
push
repz
jo
cli
out
dec
cwtl
pusha
xchg
popa
fmul
insb
sub
add
movsb
pop
imul
sahf
sbb
stc
je
aam
jle
adc
cmp
loopne
loop
xor
into
daa
pop
pushf
dec
scas
nop
test
mov
jbe
call
stos
inc
clc
or
adc
push
xor
sbbb
adc
jnp
inc
inc
dec
push
xchg
mov
shll
dec
shrl
gs
outsl
adc
add
xchg
sub
clc
repz
xchg
es
ss
xorl
test
dec
push
dec
push
add
pusha
mov
xchg
push
lea
and
jnp
cmp
or
lods
repz
cmc
test
inc
mov
int
les
push
or
leave
fidivl
or
adc
push
push
inc
clc
out
repz
xor
rcl
test
push
jae
jo
call
pop
xchg
lcall
movsl
daa
sbb
pop
inc
cmp
test
in
push
packsswb
insb
daa
and
gs
repz
insb
and
loop
mov
js
or
jb
insl
call
cmp
mov
xchg
int3
adc
pcmpgtb
jnp
xchg
pop
out
pop
adc
dec
push
sbb
jbe
or
pusha
aas
jns
push
add
dec
xchg
add
inc
popf
adc
pop
push
andb
lock
out
shlb
inc
adc
mov
push
es
push
lock
add
cmp
and
into
sti
movsb
popa
xchg
dec
in
lcall
mov
lahf
mov
and
int3
scas
inc
movsb
hlt
add
call
and
xchg
fwait
cmp
vmread
and
xchg
addb
cmp
das
xchg
push
in
or
cmp
jne
loopne
and
push
cltd
lock
push
loop
jmp
ja
jmp
mov
sub
pop
push
cmp
cs
xchg
mov
push
cmc
pushf
dec
rcrl
je
dec
jo
mov
dec
enter
pop
kmovb
sub
adc
into
jmp
in
or
or
mov
xor
ret
in
ljmp
pop
mov
pop
out
in
jecxz
gs
mov
or
movsl
pop
jmp
pop
jmp
pop
sbb
jg
adc
xor
pop
loope
ds
outsl
sub
adc
sbb
daa
mov
mov
inc
mov
fidivl
mull
loopne
push
mov
or
pusha
cmp
aaa
push
cmp
add
push
ds
jo
xor
mov
push
daa
test
inc
and
sbb
push
sub
push
cld
jo
es
mov
gs
fs
sbb
xor
inc
push
mov
xchg
inc
js
sbb
push
sub
xor
lea
pop
pop
jge
mov
xchg
es
cli
jl
xor
rorb
shll
dec
cmp
inc
xchg
test
out
inc
call
or
cmpsl
add
mov
push
movsl
adc
mov
popa
and
divl
jmp
add
js
call
test
xchg
xlat
mov
cwtl
push
ljmp
jb
inc
pop
bound
popa
push
xchg
sbb
dec
and
movb
loop
ss
aad
adc
lock
in
ror
adc
fmulp
sarl
popa
push
xchg
lock
xor
mov
xor
mov
fnstenv
shlb
add
mov
dec
pop
in
xchg
lahf
mov
arpl
cmpsb
dec
in
pusha
loopne
lods
sub
adc
sbb
jmp
mov
sbb
out
bound
adc
sub
cmp
aas
mov
or
test
adc
push
inc
xor
xchg
subl
cltd
mov
dec
mov
test
sbb
push
dec
dec
pusha
mov
adc
push
xchg
add
push
pop
and
xchg
cmp
and
push
xlat
js
or
pop
idiv
cltd
add
jbe
mov
xchg
addl
in
adc
push
fadd
cwtl
std
mov
mov
pop
imul
pop
mov
xchg
lcall
lds
repz
mov
ds
sub
icebp
ds
add
push
sub
fisubrs
repz
mov
fs
rclb
add
iret
popa
in
out
ret
or
in
lock
stc
or
pop
dec
in
call
dec
add
fidivrs
dec
mov
pop
lea
sub
pop
inc
sbbl
das
push
in
xor
ret
adc
scas
lcall
pusha
mov
push
fwait
xchg
nop
sub
subl
sub
inc
aaa
test
in
lcall
push
or
push
add
aad
mov
add
out
jecxz
xor
cld
adc
push
lret
jne
bound
sbb
jb
mov
lock
xor
or
pusha
pop
rcrl
bound
push
pop
sbb
inc
lock
lcall
inc
and
xchg
sub
lahf
or
push
pop
cli
sbb
in
daa
or
or
and
sub
adc
ss
outsw
push
movsb
dec
into
add
out
test
xlat
or
add
hlt
mov
sbb
dec
mov
or
or
adc
pop
rorl
inc
ljmp
stos
cmp
lock
in
cmp
add
xchg
shll
push
adc
mov
lret
push
adc
inc
aam
inc
pop
test
shlb
inc
xchg
mov
cmp
movsb
push
aad
cmpl
inc
push
push
out
xor
std
xor
adc
fldt
xor
sarl
fsubrs
in
sub
or
subb
inc
test
or
inc
adc
sbb
mov
adc
xchg
mov
inc
xor
scas
ljmp
arpl
sub
and
scas
idivl
adc
leave
icebp
dec
xchg
push
or
pop
loope
or
mov
fucomi
xor
cmpsb
cmp
rol
mov
stos
add
inc
jno
decl
loopne
sbb
stos
push
or
jl
mov
repnz
add
jb
jle
push
or
adc
roll
sub
sub
ljmp
lods
xchg
cmp
pop
adc
dec
jae
cmp
ljmp
push
dec
ret
push
push
dec
xchg
adc
push
or
dec
mov
fimull
cwtl
dec
mov
jg
push
xor
ljmp
std
push
insb
xor
adc
icebp
bound
cwtl
retw
dec
dec
dec
inc
enter
movsb
inc
inc
rorl
mov
outsl
mul
andb
mov
adc
jmp
dec
sub
sbb
imul
push
cmpsb
or
xchg
or
dec
push
clc
sub
lahf
fs
leave
dec
movsb
adc
mov
push
lea
shr
pop
inc
or
cmpsb
mov
aad
cltd
cld
jmp
cld
add
xchg
adc
scas
mov
jp
inc
iret
xchg
les
ret
and
adc
and
dec
adc
adc
bound
je
push
mov
cmp
jo
rorl
cmpb
fcoms
jne
in
mov
or
inc
sub
mov
aaa
cmp
fwait
and
pusha
pop
mov
andl
adc
mov
inc
sub
mov
ja
cs
or
dec
lds
cmpl
sbb
hlt
loope
and
adc
mov
inc
or
inc
jl
in
inc
jne
and
and
std
xor
lds
inc
es
test
in
stos
xor
jp
adc
loop
lret
sub
xor
rcll
add
into
inc
stos
adc
cld
mov
mov
aaa
cmp
sbb
dec
shll
mov
pop
mov
pop
repnz
xchg
jmp
outsb
xor
insb
pop
lods
mov
and
push
pop
mov
cli
inc
pop
or
test
movb
shlb
mov
pop
push
lock
cli
xor
pop
lock
adc
push
push
lret
and
dec
xchg
inc
mov
xchg
mov
imul
clc
popf
scas
es
push
inc
cs
sub
push
dec
push
loop
xor
cmp
dec
mov
in
fsubrl
fiaddl
pop
fstpl
jmp
mov
popf
lock
mov
jecxz
mov
add
clc
adc
push
xorl
pop
insb
ja
cmp
ljmp
mov
sbb
aas
push
hlt
mov
mov
ss
jno
je
mov
xor
push
frstor
add
leave
pop
mov
adc
mov
lret
and
xor
cld
test
dec
ja
shrb
ret
ss
or
jno
cmp
jae
sbb
test
mov
clc
jnp
add
iret
fisubrl
in
or
sub
mov
xchg
mov
loopne
push
dec
xchg
fcmovnb
cltd
add
mov
movsb
push
bound
adc
inc
rcrl
and
mov
clc
inc
inc
push
xchg
out
add
mov
mov
ds
pusha
xchg
xchg
jmp
bound
stos
push
dec
call
xor
sub
xor
xchg
sub
repnz
cli
or
dec
gs
lahf
fisubl
das
in
pop
call
and
mov
and
stos
sub
cmp
jo
mov
pop
cmp
arpl
cmpsb
mov
mov
adc
shlb
sbb
jae
adc
lret
in
pop
dec
adc
mov
xorl
mov
and
stos
bnd
push
inc
sbb
mov
lock
dec
movsl
popa
lods
push
and
cmp
adc
or
loop
xor
push
mov
and
bound
sbb
mov
sti
inc
out
adc
xchg
aas
fisubrl
xchg
sub
or
outsb
sbb
test
mov
jae
mov
lret
mov
mov
inc
into
sbb
dec
adc
enter
outsl
ret
fbstp
faddl
inc
xchg
int
scas
lcall
lahf
add
mov
dec
ret
push
or
adc
push
addr16
mov
sbb
int3
mov
sbb
test
adc
push
xchg
push
pop
pop
jmp
adc
mov
push
jne
lods
gs
add
daa
cld
int3
pop
push
das
mov
nop
jo
popa
lods
xchg
mov
mov
lods
add
insb
cld
inc
or
stos
test
lret
fwait
stos
and
aam
pop
pop
mov
imul
daa
xchg
lret
xor
adc
fadds
push
push
mov
sub
adc
jecxz
data16
and
pusha
inc
push
inc
adc
jmp
subb
adc
mov
sbb
sub
and
jns
xor
adc
adc
pop
in
lea
je
ss
jo
mov
aad
outsb
sarl
loope
nop
lret
push
sbbb
addr16
insb
stos
xchg
or
in
inc
dec
fcmovnu
or
push
mov
pop
sub
xchg
ds
int3
daa
fistl
push
xchg
sbb
pop
xor
add
dec
and
or
or
stos
and
into
fnstcw
mov
stos
or
jbe
in
add
push
mov
js
and
push
inc
mov
sbb
jb
mov
xor
xor
adc
sbb
cwtl
jl
cld
lea
jl
mov
or
inc
dec
mov
mov
popf
data16
inc
sbb
push
dec
aam
pop
pop
adc
jp
sub
fwait
test
pushf
jns
xchg
cmp
adc
cmpsb
out
xor
cmp
sbb
test
add
xchg
push
sbb
jae,pn
push
inc
icebp
sub
sub
xchg
jl
or
jle
fwait
iret
inc
sub
repz
or
arpl
aas
or
adc
mov
or
out
adc
pop
jo
iret
push
dec
fwait
inc
push
dec
add
daa
push
adc
out
stos
mov
imul
or
inc
jecxz
imul
sub
mov
ja
xchg
lock
sbb
ja
dec
in
mov
outsb
push
sub
add
xchg
and
lcall
or
pop
lods
xchg
sub
jo
ss
add
and
add
pusha
jae
pop
pop
fwait
sub
push
fs
ljmp
testl
movsb
inc
sbb
movsl
push
or
scas
or
or
cs
mov
push
xchg
cmp
mov
mov
push
xor
lahf
out
ret
sbb
cmpsb
push
icebp
sub
lea
inc
inc
mov
sub
into
sbb
ror
test
xchg
inc
and
push
mov
jle
dec
lret
mov
aaa
aam
je
test
pop
or
sti
iret
push
xchg
dec
mov
cmpsb
cmpsl
popf
in
xor
insb
outsb
and
inc
mov
mov
jl
les
mov
daa
orb
pushf
stc
fiadds
cmp
inc
in
test
out
push
inc
add
insb
mov
insb
dec
ret
cmp
pop
bound
stos
push
fwait
mov
ds
dec
adc
nop
jle
mov
jae
stos
inc
mov
push
sub
in
or
es
pop
ret
xchg
cltd
inc
pushf
mov
or
pop
inc
push
jle
adc
mov
fnstsw
xchg
insl
rorl
mov
sysenter
pop
popa
mov
aam
sub
int3
ljmp
sub
dec
cli
inc
bound
pop
stos
in
or
xchg
ret
and
addr16
jae
mov
aas
xchg
dec
int
jp
stos
dec
pushf
ficoms
jecxz
sti
sub
and
or
pop
cld
pusha
das
fadd
mov
lret
in
in
mov
inc
pop
in
int3
inc
push
daa
lock
xchg
imul
pop
repz
or
stc
xchg
stc
and
insl
cmc
iret
mov
xor
add
scas
sbb
dec
sbb
adc
sbb
adc
arpl
sbb
sub
lods
ss
and
test
mov
or
mov
pop
inc
cld
push
in
clc
xchg
ret
fsts
pop
sub
cmpb
arpl
sub
cmp
mov
movsb
inc
inc
jmp
ljmp
data16
stos
and
mov
pop
mov
pop
cmpb
int3
jge
das
xchg
mov
push
stos
dec
into
gs
pop
mov
and
cmp
mov
jo
cwtl
ror
in
mov
fwait
mov
mov
sub
lods
in
popf
mov
gs
loope
fcoml
sbb
iret
and
pop
inc
jg
push
add
inc
pusha
inc
leave
jl
and
jnp
movsl
lock
mov
cltd
and
loop
pop
in
frstor
adc
imul
in
add
test
push
pusha
in
sbb
mov
or
mov
push
pop
push
daa
dec
adc
sti
enter
inc
gs
sub
flds
and
dec
and
mov
pop
repz
sbbb
cs
and
mov
movb
repnz
popa
rolb
sbbb
ret
add
or
push
or
movsl
jmp
es
sub
movsb
cs
popa
and
cmp
mov
adc
or
pusha
jl
addb
xchg
add
addr16
test
mov
test
or
add
clc
jb
and
decb
sub
push
lock
ds
test
cmp
ja
lret
mov
sbb
pop
shlb
xorl
xor
cmp
push
and
xchg
test
pop
pop
mov
cmp
sbb
dec
out
inc
fisubs
adc
jmp
jge
test
xchg
push
movsl
das
mov
inc
pop
dec
decl
fisttpll
inc
sti
sahf
jmp
cli
xchg
adc
pop
lock
or
cwtl
arpl
cmp
divl
jmp
scas
jge
stos
xchg
jp
jae
lahf
jo
add
addb
sub
add
push
cmpsl
dec
movsl
xchg
dec
sbb
xor
mov
test
fbld
je
flds
jae
inc
push
push
jecxz
push
iret
push
and
sub
pop
out
imul
dec
sub
cs
shld
or
mov
sub
movsb
ds
pop
cbtw
dec
and
xorb
ja
adc
inc
adc
and
adc
adc
xor
adc
jp
test
jbe
sub
jecxz
push
dec
scas
out
dec
jne
es
in
inc
mov
inc
ret
outsl
sbb
lahf
dec
adc
lods
or
jno
repz
adc
daa
or
js
push
sub
sub
orl
inc
rolb
adc
inc
push
xchg
or
mov
into
out
adc
xor
pop
les
cmp
mov
pop
sub
add
insb
int3
push
arpl
and
call
and
mov
mov
shrb
pushf
push
rol
mov
xchg
and
pushf
mov
pop
les
cli
data16
pop
inc
xor
mov
dec
popf
cmp
testl
lods
add
js
xchg
or
sar
pop
xor
ficoml
lcall
ss
in
test
xchg
jle
es
and
loope
push
xor
inc
mov
sahf
xchg
cmp
lods
push
sti
inc
push
lods
dec
ljmp
sub
xchg
jmp
enter
xchg
dec
lods
clc
pusha
add
fidivrl
pop
mov
inc
xor
xchg
movsb
xchg
pop
dec
add
mov
adc
jge
in
adc
sub
adc
sbb
mov
sub
push
xchg
mov
scas
imul
or
aad
imul
lret
cmp
mov
add
cmp
stos
add
out
push
sub
out
mov
cmc
mov
in
jno
fdivs
ljmp
xor
or
fimull
add
xor
ret
and
ja
sub
fisubrs
addb
fsubl
or
xchg
mov
sub
addl
jp
or
push
mov
inc
jge
repz
push
sub
pop
negl
or
orb
and
dec
rorl
jo
jno
sbb
xor
or
imul
or
addr16
add
add
dec
adc
mov
aad
add
cs
jnp
jnp
insb
adc
adc
lret
or
mov
popf
jge
in
xchg
scas
push
incb
mov
jl
push
test
insl
sub
push
jmp
jo
and
xlat
call
xchg
adc
cld
push
rorb
mov
inc
pop
andl
fsts
subl
iret
push
add
push
popa
fwait
in
scas
mov
inc
fiadds
xchg
push
lock
aam
or
rcrb
mov
loopne
aaa
cli
fdivl
jge
sbb
mov
inc
sub
xorb
jecxz
add
push
sub
cmpsl
adc
push
inc
jge
addb
pop
fsubrl
or
pop
in
mov
jecxz
or
or
adc
xchg
mov
push
sbb
aaa
jecxz
fwait
push
ret
pop
sqrtps
inc
fldcw
adc
ret
loop
and
adc
shlb
pop
nop
sub
lds
dec
rcll
adc
sub
pop
jg
inc
fdivrs
mov
loop
pusha
sbb
or
sub
leave
mov
cmp
dec
adc
xchg
fisubrs
stc
pop
xchg
or
add
xor
lea
mov
mov
loope
sub
aam
add
out
adc
sub
pop
jmp
outsl
repz
mov
jbe
or
shrl
inc
aas
rcrl
popa
mov
push
pop
cs
add
mov
mov
cmp
inc
mov
in
xor
add
mov
cld
pop
add
stc
jns
pop
adc
mov
sub
imul
mov
out
mov
jmp
or
dec
es
ljmp
mov
adc
jnp
dec
jl
ja
jo
adc
push
jg
ss
leave
adc
jbe
or
inc
push
pop
sbb
rol
icebp
cmp
das
adc
inc
and
cwtl
pop
xor
add
mov
cmp
push
or
and
sub
xchg
sub
fldl
imul
ja
mov
inc
pop
or
jbe
sub
fisttps
in
xchg
push
add
inc
mov
jl
inc
xchg
and
inc
xor
pop
xchg
lcall
movsb
cmpsb
or
mov
dec
outsl
or
mov
xchg
push
daa
cmpsb
jnp
dec
push
push
repnz
mov
xor
dec
je
adc
jp
adc
outsb
or
movl
aam
incb
roll
and
in
ljmp
inc
leave
and
and
mov
add
stos
xchg
loope
and
mov
sahf
insb
sub
push
xor
push
xor
sbb
and
daa
roll
test
xchg
or
mov
sub
icebp
jg
pop
hlt
dec
cwtl
fcompl
jecxz
das
mov
pop
pop
imul
popf
inc
cmpsl
mov
push
loopne
ljmp
xchg
and
pop
add
sbb
xchg
je
cmp
or
xchg
shrl
mov
test
aaa
fdivr
push
movsb
pop
mov
sarb
fprem
pop
xbegin
out
sbb
xchg
inc
xchg
sbb
jnp
das
cmpsb
in
add
add
jecxz
popa
fbld
cmpsl
les
shrb
push
jg
pushf
mov
jno
jo
sub
test
xchg
decb
cmpb
mov
pop
xor
iret
mov
mov
sbb
cli
xor
shrb
loopne
cwtl
cmpsb
sbb
sub
sbb
cmpsb
sub
gs
or
xrelease
int
xor
inc
push
fwait
xor
cmp
outsl
test
jb
inc
test
orb
xor
mov
pop
movsl
or
mov
or
icebp
push
pop
gs
repnz
and
xchg
push
test
adc
xchg
loopne
sub
cmp
push
clc
cltd
xchg
cmp
dec
mov
mov
mov
xchg
push
dec
lcall
dec
popf
lea
sbb
hlt
je
pusha
dec
repnz
mov
ds
test
mov
or
sbb
pop
fs
sbb
or
add
push
sub
inc
push
and
das
sbb
mov
or
push
push
orl
es
inc
or
add
cld
mov
clc
mov
dec
nop
sbb
lret
jnp
out
js
mov
in
adc
adc
lret
sub
notb
push
xor
and
xchg
repnz
xchg
repnz
insl
pop
sub
sbb
cmp
cmp
sti
and
inc
dec
jmp
fs
daa
mov
pop
or
cmp
rolb
and
sub
xchg
sahf
jle
xchg
adc
fsubs
push
in
das
lret
lods
fmull
xchg
jb
push
xlat
cmovg
gs
or
add
negb
sub
in
sub
push
push
call
cmp
je
cmp
je
push
push
call
cmp
je
mov
push
push
call
and
je
push
call
or
je
push
call
push
call
mov
push
call
test
je
push
call
test
je
push
call
test
jne
push
call
push
call
cmp
je
push
call
mov
push
call
mov
push
call
mov
push
call
mov
push
pushl
call
mov
push
call
push
call
cmp
je
cmp
jne
or
jne
push
call
mov
push
call
mov
push
call
and
je
push
call
or
jne
push
call
mov
push
call
push
call
and
jne
push
call
mov
push
call
mov
lea
push
push
push
call
add
push
call
mov
mov
push
push
call
pop
mov
mov
push
call
mov
subl
push
call
cmp
jne
addl
push
call
cmp
jne
mov
call
mov
movl
push
call
and
je
push
call
mov
jmp
pushl
pushl
push
call
or
jne
shrl
push
call
pushl
call
addl
push
call
test
je
call
sbb
add
sub
mov
pop
and
and
add
mov
mov
inc
sub
add
add
inc
adc
add
or
or
push
mov
add
push
push
push
push
push
push
push
call
mov
mov
xor
mov
mov
rep
inc
cmp
jne
pop
pop
pop
leave
ret
jae
or
cwtl
add
orb
add
push
mov
add
sub
mov
push
push
push
mov
mov
cmpl
je
decl
sub
sub
add
jmp
pop
pop
pop
leave
ret
inc
xor
add
cs
add
cmp
add
dec
iret
add
pop
iret
add
jb
add
test
add
xchg
iret
add
mov
iret
add
ror
add
iret
add
ljmp
add
rolb
add
add
add
add
rolb
add
add
rolb
add
add
mov
add
mov
add
rolb
add
rolb
add
rolb
add
rolb
add
roll
add
roll
add
roll
add
add
push
roll
add
add
jp
add
mov
add
sahf
roll
add
add
enter
add
ljmp
add
rolb
add
rolb
add
rolb
add
rolb
add
add
add
push
add
jl
add
mov
add
lcall
add
rolb
add
rolb
add
rolb
add
roll
add
add
roll
add
roll
add
add
add
push
add
test
add
cwtl
roll
add
add
enter
in
add
lock
add
aam
add
aam
add
add
ds
add
add
add
fs
add
add
xchg
aam
add
add
fcmovbe
add
ljmp
add
aad
add
add
inc
aad
add
add
push
aad
add
add
mov
add
ret
add
aad
add
aad
add
aad
add
add
es
add
xor
add
inc
add
push
add
insb
add
test
add
mov
add
test
add
mov
add
add
out
add
hlt
add
push
xlat
add
push
xlat
add
sub
add
cmp
add
push
xlat
add
pop
xlat
add
je
add
xchg
add
cwtl
xlat
add
test
add
mov
add
lret
add
xlat
add
cld
xlat
add
adc
add
sub
add
cmp
add
push
fadds
add
add
insb
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
flds
add
add
cmp
add
dec
flds
add
add
insb
flds
add
add
mov
add
lcall
add
add
add
flds
add
flds
add
flds
add
flds
add
add
push
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
add
push
fiaddl
add
add
add
add
add
fiaddl
add
add
add
add
loopne
add
out
fiaddl
add
fildl
add
fildl
add
fildl
add
add
push
fildl
add
add
jb
add
test
add
xchg
fildl
add
fildl
add
add
add
fildl
add
add
add
int3
add
adc
add
push
add
pop
int3
add
test
add
int3
add
xor
add
scas
enter
into
add
mov
lret
stos
into
add
cmp
add
repnz
mov
add
add
add
add
add
add
add
lret
add
lret
add
ror
add
rcr
add
sbb
add
or
add
lret
add
add
push
iret
add
cs
add
cmp
add
dec
iret
add
pop
iret
add
jb
add
test
add
xchg
iret
add
mov
iret
add
ror
add
iret
add
ljmp
add
rolb
add
add
add
add
rolb
add
add
rolb
add
add
mov
add
mov
add
rolb
add
rolb
add
rolb
add
rolb
add
roll
add
roll
add
roll
add
add
push
roll
add
add
jp
add
mov
add
sahf
roll
add
add
enter
add
ljmp
add
rolb
add
rolb
add
rolb
add
rolb
add
add
add
push
add
jl
add
mov
add
lcall
add
rolb
add
rolb
add
rolb
add
roll
add
add
roll
add
roll
add
add
add
push
add
test
add
cwtl
roll
add
add
enter
in
add
lock
add
aam
add
aam
add
add
ds
add
add
add
fs
add
add
xchg
aam
add
add
fcmovbe
add
ljmp
add
aad
add
add
inc
aad
add
add
push
aad
add
add
mov
add
ret
add
aad
add
aad
add
aad
add
add
es
add
xor
add
inc
add
push
add
insb
add
test
add
mov
add
test
add
mov
add
add
out
add
hlt
add
push
xlat
add
push
xlat
add
sub
add
cmp
add
push
xlat
add
pop
xlat
add
je
add
xchg
add
cwtl
xlat
add
test
add
mov
add
lret
add
xlat
add
cld
xlat
add
adc
add
sub
add
cmp
add
push
fadds
add
add
insb
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
flds
add
add
cmp
add
dec
flds
add
add
insb
flds
add
add
mov
add
lcall
add
add
add
flds
add
flds
add
flds
add
flds
add
add
push
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
add
add
add
push
fiaddl
add
add
add
add
add
fiaddl
add
add
add
add
loopne
add
out
fiaddl
add
fildl
add
fildl
add
fildl
add
add
push
fildl
add
add
jb
add
test
add
xchg
fildl
add
fildl
add
add
add
fildl
add
add
add
inc
push
xor
cs
dec
dec
add
add
inc
gs
outsb
jne
je
je
add
add
dec
outsl
popa
fs
arpl
push
add
add
je
outsl
jo
imul
add
dec
outsl
popa
fs
je
imul
push
imul
outsb
outsl
ja
gs
popa
addr16
add
add
inc
popa
insb
insb
push
imul
outsl
arpl
add
dec
outsl
jbe
push
imul
add
inc
gs
jb
jns
outsb
jne
add
inc
gs
imul
js
push
add
add
inc
gs
arpl
dec
outsb
outsw
add
add
outsl
ja
imul
add
push
imul
imul
inc
outsl
jb
popa
je
add
add
ja
jo
imul
dec
inc
dec
dec
xor
cs
dec
dec
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
add
inc
gs
outsl
insb
fs
popa
je
inc
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
gs
jb
arpl
fs
jae
add
add
push
gs
imul
outsl
arpl
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
popa
jo
imul
insb
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
push
gs
push
push
jb
outsl
jb
je
add
add
outsb
fs
gs
jne
arpl
add
add
jae
insl
gs
push
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
push
gs
js
gs
imul
gs
add
add
gs
je
push
jb
arpl
jae
add
add
push
insb
jae
gs
popa
insb
jne
add
add
inc
insb
insb
outsl
arpl
add
add
gs
je
inc
imul
outsl
popa
fs
imul
add
add
inc
gs
jns
je
insl
inc
gs
jne
je
popa
outsb
addr16
inc
add
add
push
imul
jb
je
arpl
add
inc
gs
je
imul
inc
add
add
dec
jo
outsb
dec
jne
gs
add
add
inc
gs
gs
jo
popa
je
inc
add
add
insb
jae
jb
jo
inc
add
add
inc
gs
gs
jo
imul
add
add
push
insb
jae
gs
popa
insb
jne
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
gs
add
inc
gs
jns
je
insl
dec
outsb
outsw
add
add
je
inc
dec
inc
push
add
add
inc
gs
gs
imul
add
dec
gs
jo
gs
insb
insb
outsl
arpl
add
inc
gs
imul
bound
gs
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
push
dec
outsl
arpl
add
add
je
imul
je
add
add
outsl
jae
dec
popa
outsb
fs
add
add
jb
popa
je
add
add
inc
outsl
jo
inc
imul
gs
jns
je
insl
push
imul
gs
gs
push
imul
jne
push
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
imul
add
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
jb
arpl
jae
gs
jo
add
add
popa
jo
insb
insb
outsl
arpl
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
push
gs
jbe
outsb
je
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
imul
gs
arpl
add
add
inc
insb
jne
push
inc
jne
data16
add
add
dec
jo
outsb
inc
jbe
outsb
je
add
add
dec
gs
jo
jb
popa
je
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
popa
jo
imul
inc
gs
js
je
outsl
fs
jb
arpl
jae
add
add
je
outsl
outsb
jae
insb
gs
push
add
add
inc
gs
outsl
fs
gs
imul
add
add
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
add
inc
gs
gs
imul
inc
imul
add
add
imul
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
jb
popa
je
inc
imul
outsb
addr16
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
inc
jb
popa
je
inc
imul
jns
add
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
fs
inc
imul
jae
jb
insl
jo
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
push
gs
imul
bound
gs
add
add
dec
jne
je
inc
jns
gs
outsl
push
imul
add
inc
gs
inc
push
add
add
inc
imul
je
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
je
push
outsb
ja
outsb
add
add
outsb
fs
imul
gs
add
add
inc
outsl
insl
jo
jb
push
je
imul
add
je
imul
gs
add
add
imul
insb
gs
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
popa
jo
je
imul
add
jb
insl
jo
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
push
gs
gs
jae
dec
jne
gs
add
add
je
jb
outsl
arpl
fs
js
push
add
add
gs
je
push
imul
jne
push
imul
push
insb
jae
jb
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
popa
jo
je
imul
add
gs
inc
outsl
jae
gs
arpl
add
add
jb
outsb
inc
add
add
inc
jb
popa
je
dec
jne
gs
add
add
inc
insb
outsl
bound
inc
jb
add
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
imul
add
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
add
je
jne
jb
outsb
je
push
dec
add
add
push
gs
fs
imul
imul
outsl
dec
jne
je
inc
jns
add
add
imul
jo
imul
inc
outsl
insl
jo
jb
push
je
imul
add
je
popa
jae
inc
jb
outsl
jb
add
add
insb
jae
inc
jbe
outsb
je
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
jae
gs
push
imul
insb
gs
imul
inc
gs
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
add
inc
imul
inc
imul
popa
imul
insb
gs
bound
arpl
add
gs
je
inc
jbe
outsb
je
add
add
insb
jae
jb
insl
jo
inc
add
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
imul
jae
add
dec
gs
jo
jb
add
add
push
imul
insb
insb
outsl
arpl
add
add
gs
je
push
push
add
add
inc
gs
je
dec
popa
outsb
fs
add
add
push
gs
je
dec
popa
outsb
fs
add
add
push
outsb
insl
popa
jo
imul
insb
add
add
je
jns
je
insl
inc
imul
jns
add
add
push
popa
insb
imul
add
add
je
outsb
push
gs
js
gs
imul
gs
add
push
imul
jb
add
add
je
je
imul
push
add
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
inc
bound
addr16
jb
jae
outsb
je
add
inc
gs
push
dec
outsb
outsw
add
add
je
jne
jb
outsb
je
push
add
add
inc
gs
gs
inc
imul
inc
push
push
cs
dec
dec
add
add
pop
pop
inc
js
inc
jb
insl
gs
popa
outsb
fs
gs
add
pop
pop
arpl
inc
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
imul
pop
outsl
outsb
gs
je
add
pop
popa
fs
jae
pop
imul
add
jb
push
add
outsb
insb
outsl
arpl
add
pop
insb
outsl
arpl
push
push
xor
xor
inc
dec
dec
add
add
addr16
fs
outsb
outsw
add
add
gs
fs
outsb
outsw
add
add
push
push
inc
push
outsl
arpl
je
add
dec
dec
inc
xor
cs
dec
dec
add
add
push
outsb
imul
imul
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
dec
outsb
imul
add
inc
inc
dec
push
dec
cs
dec
dec
add
add
gs
je
push
arpl
imul
add
push
inc
push
dec
xor
cs
dec
dec
add
add
dec
jae
popa
insb
imul
add
imul
push
arpl
imul
imul
add
inc
gs
outsb
addr16
push
imul
addr16
jb
popa
je
dec
gs
js
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
push
gs
gs
gs
dec
gs
add
add
addr16
insb
outsl
jae
dec
gs
add
push
gs
gs
popa
insb
jne
inc
js
add
add
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
add
addr16
outsb
jne
dec
gs
js
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
push
dec
dec
dec
dec
inc
push
cs
dec
dec
add
add
je
jb
gs
gs
jo
.byte
outsl
outsb
inc
