outsb
call
loop
test
loop
out
out
in
call
loop
mov
jecxz
in
call
loop
mov
loop
sbb
loop
and
jecxz
in
in
in
in
in
in
in
loop
in
in
in
jmp
loop
cmp
loop
mov
loope
in
out
in
loop
in
out
in
loop
in
loope
in
call
loop
addr16
in
jecxz
in
out
in
call
loop
fsubr
loop
iret
out
in
jecxz
in
in
in
call
loop
fsubp
loop
push
jmp
loop
inc
in
in
loope
in
out
in
loop
in
out
in
call
loop
lret
in
call
loop
or
loop
pop
jmp
loop
push
jecxz
in
out
in
out
in
jecxz
in
out
in
out
in
in
in
in
in
out
in
jecxz
in
jecxz
in
in
in
in
in
in
in
call
loop
iret
loop
in
in
in
in
in
out
in
in
in
out
in
jmp
loop
gs
in
out
in
in
in
out
in
out
in
out
in
loop
in
jecxz
in
call
loop
cmpsb
loop
in
call
loop
xor
loop
inc
in
in
in
in
jecxz
in
jecxz
in
out
in
jmp
loop
loop
jno
loop
mov
loop
in
loop
in
loope
in
out
in
in
in
out
in
loope
in
in
in
in
in
loope
in
out
in
out
in
in
in
jecxz
in
in
in
loop
in
jecxz
in
out
in
out
in
out
in
in
in
in
in
in
in
in
in
loop
in
in
in
call
loop
pop
call
loop
pop
out
in
loope
in
loop
in
out
in
call
loop
daa
jecxz
in
call
loop
shl
loop
push
loop
xchg
loop
and
loop
in
call
loop
into
out
in
in
in
jecxz
in
call
loop
adc
loop
and
loop
es
loop
push
loop
daa
in
in
in
in
jecxz
in
jmp
loop
or
loop
mov
loop
fsub
loop
loope
loop
movsl
loop
in
jecxz
in
call
loop
cmp
loop
add
loop
out
loop
jecxz
loop
mov
in
in
call
loop
pop
loop
in
out
in
out
in
in
in
jecxz
in
out
in
call
loop
and
in
loop
in
loop
in
out
in
out
in
loop
in
call
loop
xchg
in
in
call
loop
xchg
in
in
jecxz
in
in
in
call
loop
in
out
in
out
in
out
in
jecxz
in
out
in
out
in
loope
in
out
in
loop
in
out
in
in
in
in
in
jecxz
in
in
in
jecxz
in
loope
in
loop
in
in
in
in
in
out
in
in
in
out
in
in
in
call
loop
mov
loop
fwait
out
in
loope
in
loop
in
out
in
call
loop
daa
jecxz
in
call
loop
mov
loop
sbb
loop
or
loop
std
jecxz
in
out
in
loop
in
call
loop
mov
loop
dec
in
in
call
loop
insl
out
in
call
loop
cmp
loop
inc
out
in
in
in
call
loop
dec
call
loop
inc
jecxz
in
in
in
in
in
jecxz
in
in
in
in
in
out
in
out
in
jecxz
in
out
in
loop
in
jecxz
in
out
in
in
in
jecxz
in
out
in
in
in
out
in
out
in
loop
in
out
in
call
loop
adc
loop
push
loop
in
in
in
in
in
jecxz
in
call
loop
je
loop
sbb
loop
jnp
loop
mov
loop
inc
jmp
loop
popf
loope
in
in
in
in
in
jecxz
in
in
in
out
in
jecxz
in
loope
in
loop
in
loope
in
in
in
jmp
loop
xchg
loop
in
in
in
call
loop
sahf
call
loop
and
loop
inc
in
in
in
in
in
in
in
in
out
in
loope
in
in
in
jmp
loop
cli
loop
in
call
loop
pusha
out
in
jecxz
in
jecxz
in
in
in
call
loop
lcall
in
in
in
loope
in
out
in
out
in
loope
in
jecxz
in
in
in
in
in
call
loop
xor
loop
mov
in
in
in
in
out
in
in
in
out
in
out
in
jmp
loop
sbb
loop
jmp
loop
pusha
jecxz
in
jmp
loop
js
loop
xor
loop
arpl
loop
sahf
in
in
out
in
out
in
in
in
loope
in
jecxz
in
loop
in
loope
in
in
in
out
in
out
in
out
in
in
in
out
in
call
loop
mov
loop
stc
out
in
jecxz
in
loope
in
call
loop
add
in
in
call
loop
or
loop
adc
loop
int
loop
inc
in
in
loop
in
jecxz
in
in
in
loop
in
call
loop
push
jecxz
in
jecxz
in
call
loop
mul
loop
adc
loop
mov
call
loop
add
jmp
loop
shl
in
loop
in
in
in
jmp
loop
sti
out
in
in
in
loop
in
loope
in
loop
in
call
loop
pop
jmp
loop
mul
loop
xor
loop
out
out
in
in
in
jecxz
in
in
in
out
in
loope
in
loope
in
out
in
jmp
loop
push
call
loop
sbb
loope
in
in
in
call
loop
repnz
in
call
loop
aas
jmp
loop
lret
in
in
call
loop
gs
in
out
in
call
loop
int
loop
xchg
loop
outsb
in
in
out
in
call
loop
xchg
in
in
jecxz
in
loop
in
loope
in
call
loop
xchg
out
in
call
loop
inc
in
in
in
in
in
in
loop
in
loope
in
call
loop
adc
loop
push
loop
in
loop
in
out
in
call
loop
hlt
jecxz
in
call
loop
jmp
loop
loopne
loop
xchg
loop
in
in
in
loope
in
out
in
out
in
in
in
loope
in
in
in
call
loop
mul
loop
jbe
loop
jno
loop
mov
in
in
call
loop
hlt
out
in
call
loop
outsl
out
in
out
in
loope
in
jecxz
in
call
loop
shl
loop
dec
out
in
loop
in
loope
in
jecxz
in
loop
in
in
in
out
in
in
in
out
in
in
in
jecxz
in
loope
in
call
loop
inc
jmp
loop
mul
loop
adc
loop
test
loop
lret
loop
in
call
loop
mov
out
in
out
in
jmp
loop
ret
in
jecxz
in
in
in
in
in
call
loop
jle
loop
test
loop
out
jecxz
in
out
in
out
in
in
in
jecxz
in
call
loop
icebp
call
loop
jno
loop
sbb
loop
mov
jmp
loop
sbb
loop
push
in
in
out
in
in
in
jecxz
in
out
in
out
in
out
in
jecxz
in
out
in
in
in
jecxz
in
in
in
in
in
jmp
loop
cmp
in
in
call
loop
add
loop
daa
loop
in
jecxz
in
out
in
in
in
loop
in
out
in
in
in
call
loop
xlat
call
loop
xchg
loope
in
jecxz
in
loop
in
in
in
out
in
call
loop
sbb
loope
in
in
in
loop
in
loop
in
out
in
jecxz
in
in
in
call
loop
jo
loop
push
jmp
loop
pop
in
in
call
loop
add
loop
sbb
loop
pop
loope
in
loope
in
in
in
jecxz
in
out
in
call
loop
and
in
out
in
in
in
loope
in
out
in
call
loop
inc
out
in
loope
in
call
loop
enter
in
in
in
loop
in
call
loop
pop
loope
in
loop
in
loope
in
out
in
jecxz
in
jecxz
in
jmp
loop
out
loope
in
in
in
in
in
in
in
call
loop
push
out
in
in
in
call
loop
lods
out
in
out
in
in
in
loop
in
jecxz
in
out
in
in
in
in
in
call
loop
jge
loop
xlat
loop
in
out
in
out
in
loope
in
in
in
out
in
out
in
jecxz
in
in
in
call
loop
dec
in
in
loop
in
jecxz
in
out
in
loope
in
loop
in
call
loop
int
loop
pmulhw
in
out
in
call
loop
pop
jecxz
in
in
in
call
loop
sti
loop
in
call
loop
jp
loop
or
loop
in
loop
and
loop
mov
loop
and
loop
xchg
loope
in
in
in
in
in
loope
in
in
in
jecxz
in
call
loop
mul
loop
mul
loop
into
out
in
call
loop
and
in
in
in
in
in
in
in
call
loop
push
in
in
in
in
call
loop
popf
loop
in
out
in
out
in
in
in
out
in
in
in
out
in
call
loop
dec
out
in
call
loop
or
loop
in
in
in
in
in
jecxz
in
in
in
in
in
loope
in
in
in
jecxz
in
loope
in
call
loop
dec
in
in
out
in
call
loop
into
loope
in
out
in
out
in
loop
in
call
loop
jle
loop
adc
loop
mov
loop
repz
loop
int3
in
in
jecxz
in
in
in
jecxz
in
in
in
call
loop
xor
in
in
loop
in
loop
in
out
in
loope
in
call
loop
jge
loop
jns
loop
outsl
loope
in
call
loop
frstpm(287
loop
mov
loop
push
call
loop
xchg
call
loop
push
in
in
loop
in
in
in
jecxz
in
out
in
in
in
in
in
call
loop
lock
in
loope
in
jecxz
in
in
in
out
in
loope
in
in
in
loop
in
call
loop
out
loop
or
loop
and
loop
ja
loop
or
loop
push
in
in
in
in
call
loop
sahf
loope
in
out
in
loop
in
loop
in
loop
in
call
loop
pop
jmp
loop
mov
loop
add
in
in
call
loop
and
loop
xlat
in
in
out
in
in
in
in
in
loope
in
out
in
call
loop
or
loop
ret
out
in
in
in
in
in
loope
in
jecxz
in
out
in
jecxz
in
jecxz
in
loop
in
jecxz
in
in
in
in
in
jecxz
in
call
loop
loop
loope
loop
xchg
in
in
in
in
jmp
loop
mul
loop
mov
loop
jge
loop
out
in
call
loop
pop
out
in
out
in
out
in
jecxz
in
out
in
out
in
out
in
loop
in
out
in
loop
in
in
in
out
in
jmp
loop
sub
loop
adc
loop
cltd
out
in
loop
in
call
loop
xchg
out
in
jecxz
in
in
in
loop
in
call
loop
mov
out
in
in
in
out
in
in
in
in
in
out
in
out
in
in
in
loop
in
loop
in
loop
in
loope
in
loop
in
loop
in
jmp
loop
psubsw
in
in
in
jmp
loop
xchg
in
in
out
in
in
in
loope
in
loope
in
loope
in
loope
in
in
in
jecxz
in
out
in
call
loop
push
in
in
loop
in
loope
in
jmp
loop
sbb
loop
or
jecxz
in
jecxz
in
loope
in
in
in
out
in
in
in
loope
in
loop
in
in
in
in
in
in
in
call
loop
xchg
loop
jmp
jmp
loop
dec
loop
in
call
loop
inc
out
in
loop
in
jecxz
in
out
in
loope
in
in
in
jecxz
in
loop
in
jecxz
in
in
in
call
loop
or
loop
out
loop
es
in
loope
in
in
in
loope
in
in
in
jecxz
in
jecxz
in
loop
in
jecxz
in
jecxz
in
call
loop
or
loop
xchg
in
in
loop
in
out
in
in
in
jecxz
in
out
in
in
in
call
loop
outsb
out
in
in
in
in
in
jecxz
in
jecxz
in
out
in
loop
in
out
in
call
loop
cmp
loop
scas
in
in
out
in
out
in
loope
in
call
loop
scas
loop
in
jmp
loop
popa
jecxz
in
out
in
loop
in
jecxz
in
loop
in
out
in
call
loop
data16
in
jmp
loop
adc
loop
gs
in
out
in
out
in
loope
in
call
loop
mov
loop
mov
loop
in
out
in
out
in
jecxz
in
jmp
loop
push
out
in
out
in
in
in
in
in
call
loop
test
loop
and
in
out
in
in
in
loop
in
in
in
in
in
loope
in
loop
in
jecxz
in
out
in
jecxz
in
call
loop
dec
jmp
loop
popa
loope
in
loop
in
out
in
jecxz
in
in
in
out
in
loop
in
out
in
out
in
call
loop
push
call
loop
out
loop
xor
out
in
jecxz
in
out
in
call
loop
cmp
call
loop
outsl
in
in
loop
in
call
loop
cmp
loop
pop
out
in
jecxz
in
loop
in
jecxz
in
out
in
out
in
loop
in
loop
in
loope
in
in
in
out
in
out
in
out
in
loop
in
in
in
in
in
out
in
out
in
jecxz
in
loop
in
loop
in
out
in
in
in
call
loop
stc
loop
in
jecxz
in
jecxz
in
jecxz
in
in
in
out
in
jecxz
in
loope
in
in
in
out
in
in
in
in
in
out
in
jecxz
in
out
in
loope
in
in
in
out
in
in
in
in
in
jecxz
in
loope
in
in
in
loop
in
in
in
loope
in
out
in
loope
in
loop
in
in
in
out
in
loop
in
jecxz
in
call
loop
scas
loope
in
call
loop
mul
loop
sbb
in
in
loop
in
out
in
out
in
jecxz
in
in
in
jmp
loop
jns
loop
push
in
in
jecxz
in
out
in
loope
in
call
loop
push
jecxz
in
in
in
in
in
jecxz
in
out
in
out
in
in
in
in
in
jecxz
in
out
in
call
loop
out
in
out
in
in
in
out
in
jecxz
in
call
loop
dec
loop
in
jmp
loop
and
loop
in
loop
in
jmp
loop
shl
loop
pop
call
loop
push
loop
shr
loop
dec
jmp
loop
in
call
loop
pop
in
in
in
in
out
in
jecxz
in
loop
in
loop
in
jmp
loop
loope
loop
mov
loop
popf
in
in
loope
in
loop
in
jecxz
in
out
in
in
in
jecxz
in
loope
in
out
in
in
in
loop
in
loop
in
out
in
jecxz
in
loop
in
out
in
call
loop
cmp
loop
out
in
jecxz
in
call
loop
call
out
in
in
in
loope
in
out
in
out
in
out
in
jmp
loop
add
loop
loop
in
in
in
in
in
loope
in
out
in
jecxz
in
out
in
in
in
jecxz
in
out
in
call
loop
and
loop
jecxz
loop
cmp
out
in
in
in
jecxz
in
out
in
jecxz
in
out
in
jecxz
in
in
in
jecxz
in
out
in
loope
in
in
in
jecxz
in
loop
in
jecxz
in
in
in
out
in
out
in
call
loop
hlt
in
in
in
in
loope
in
out
in
call
loop
cmp
loop
ja
loop
mov
loop
dec
out
in
jecxz
in
call
loop
mov
loop
push
in
in
loop
in
jecxz
in
out
in
jecxz
in
in
in
out
in
in
in
loop
in
call
loop
xor
loop
loop
in
loope
in
out
in
loope
in
loop
in
loop
in
in
in
jecxz
in
in
in
loop
in
loop
in
out
in
loope
in
in
in
loope
in
out
in
call
loop
ds
loop
nop
in
in
in
in
jecxz
in
loop
in
in
in
out
in
out
in
in
in
out
in
call
loop
and
loop
mov
jmp
loop
cwtl
loop
in
in
in
in
in
in
in
loop
in
jecxz
in
in
in
loop
in
out
in
out
in
in
in
in
in
in
in
call
loop
xor
loop
in
loop
in
in
in
out
in
jmp
loop
pop
loop
in
in
in
call
loop
into
loop
in
jecxz
in
loope
in
out
in
loop
in
loop
in
in
in
in
in
jecxz
in
jmp
loop
in
loop
in
loop
in
out
in
out
in
call
loop
and
loop
iret
loop
in
out
in
out
in
out
in
loop
in
loop
in
out
in
jecxz
in
in
in
out
in
jmp
loop
jg
loop
je
loop
pop
in
in
jecxz
in
loop
in
in
in
loop
in
loope
in
loope
in
loope
in
call
loop
call
loop
stc
out
in
jecxz
in
call
loop
pop
call
loop
jge
loop
xchg
in
in
loope
in
jmp
loop
push
call
loop
test
loop
mov
in
in
jecxz
in
call
loop
or
loop
fucom
loop
in
loope
in
out
in
jecxz
in
loope
in
in
in
loop
in
loop
in
out
in
in
in
in
in
out
in
in
in
out
in
in
in
in
in
jecxz
in
out
in
out
in
call
loop
js
loop
ftst
loop
push
jecxz
in
loop
in
in
in
in
in
jecxz
in
in
in
jecxz
in
in
in
call
loop
pop
in
in
in
in
out
in
in
in
in
in
call
loop
iret
loop
in
in
in
call
loop
and
loop
mov
out
in
out
in
jmp
loop
adc
loop
jmp
out
in
loop
in
out
in
in
in
out
in
in
in
in
in
out
in
in
in
in
in
out
in
in
in
out
in
loop
in
loope
in
jecxz
in
loop
in
jecxz
in
out
in
jecxz
in
in
in
out
in
jecxz
in
in
in
loope
in
in
in
in
in
out
in
loop
in
jecxz
in
loop
in
call
dec
jmp
xor
add
add
ljmp
sub
add
add
add
iret
stos
and
add
add
test
add
add
add
movsl
clc
adc
add
add
inc
add
clc
push
add
idiv
cld
add
lahf
add
add
add
fldl
mov
push
cmp
stos
sub
clc
mov
pop
enter
add
add
add
clc
jae
add
add
clc
jns
cmp
scas
shll
add
repnz
clc
push
add
or
jne
add
xchg
in
pop
mov
fcoms
add
adc
add
mov
clc
adc
add
pop
js
or
rcrl
popa
add
mov
bound
add
clc
xabort
clc
into
icebp
lods
mov
add
clc
in
dec
call
clc
push
add
cmp
rcr
dec
push
add
cmp
pushf
imul
xchg
add
push
add
add
mov
clc
jae
add
mov
mov
add
mov
dec
mov
clc
arpl
add
pop
aam
and
sub
add
mov
mov
ljmp
add
add
test
aad
popa
add
and
xchg
pop
clc
pop
int
push
add
int
cmp
xbegin
loopne
out
adc
add
mov
cmovle
cwtl
push
mov
push
sub
push
push
push
push
push
call
es
push
mov
and
xor
not
test
es
nop
nop
loop
pop
lea
xor
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
and
je
and
sub
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
andl
mov
lea
push
push
push
push
mov
push
lret
call
jae
add
out
sbb
add
clc
imulb
mov
clc
stos
mov
clc
mov
add
clc
and
cld
out
clc
xor
add
add
add
pushf
sar
clc
cmp
test
push
test
mov
cmpsb
clc
cmc
dec
arpl
add
adc
add
clc
sub
jnp
clc
pop
in
into
or
mov
or
inc
add
fiaddl
add
mov
clc
cmc
push
add
dec
cmc
insb
jg
clc
and
jo
add
clc
roll
cmp
clc
cld
xor
add
inc
clc
sub
add
movsb
clc
push
mov
stc
sbb
clc
shlb
loope
xchg
cmpsb
clc
mov
clc
icebp
or
bound
add
pop
clc
lret
sub
daa
clc
jp
add
in
sub
lcall
pop
clc
das
jbe
clc
mov
js
jmp
add
aam
ror
repz
mov
mov
xor
clc
pop
inc
clc
mov
in
push
sahf
aas
and
add
lcall
clc
test
clc
and
fdivl
add
in
xchg
jbe
fnsave
add
add
add
pushf
stos
mov
clc
pop
pop
sti
ljmp
mov
pushf
clc
aad
xor
add
push
push
push
jmp
test
sarb
or
clc
push
add
mov
add
imul
clc
std
outsb
outsl
je
xchg
aaa
ja
addr16
test
mov
and
jecxz
and
add
mov
adc
add
push
add
and
inc
add
xchg
call
add
add
push
add
stc
lcall
repnz
in
mov
dec
pop
fisttps
clc
or
jle
aad
gs
clc
fisttpll
sub
jp
jae
add
in
call
add
add
add
dec
js
clc
ret
sbb
mov
inc
clc
popa
add
test
packsswb
add
add
jmp
add
pop
test
add
xchg
lods
daa
clc
cmp
add
std
inc
clc
cmp
mov
movsb
clc
cmp
clc
or
jl
cmp
add
sbb
add
xor
add
add
add
mov
flds
add
add
dec
mov
pop
inc
add
cs
add
cmp
add
aad
add
adc
add
add
clc
xabort
loope
xchg
push
mov
scas
dec
xor
sahf
adc
add
clc
je
jecxz
sbb
clc
out
insl
pop
adc
add
in
mov
clc
sub
pop
jbe
clc
cmp
cmp
cmp
add
lock
clc
sbb
add
xchg
in
xchg
cmp
jb
add
clc
cmpsb
clc
mov
cmp
loope
mov
inc
clc
fcoml
pushl
pop
shl
clc
mov
cmp
add
fsubl
sti
mov
aas
loop
cmc
mov
clc
lea
sbb
sub
add
sahf
div
mov
clc
add
add
sub
add
fsubrl
sub
or
nop
fnsave
add
xchg
pop
jbe
clc
push
xor
add
clc
std
cmp
clc
xbegin
dec
loopne
aaa
xor
add
pop
adc
add
int
clc
je
clc
outsb
dec
and
push
add
test
or
cmp
add
push
add
sahf
push
add
add
add
repnz
ds
sar
pushf
pop
clc
mov
add
out
aas
mov
jb
add
pop
clc
shl
clc
nop
add
imul
add
xchg
cmp
mov
out
inc
clc
cmp
add
jno
add
clc
stc
mov
cmp
or
ret
clc
xor
add
lcall
fwait
sbb
add
clc
and
push
cli
sub
adc
dec
add
leave
add
add
pop
sbb
clc
mov
and
add
lcall
clc
outsb
mov
cmp
add
pop
in
in
bound
add
sar
fs
inc
add
cld
jecxz
mov
pop
dec
mov
lahf
aas
or
into
loopne
mov
xor
idivb
sti
mov
mov
shrb
add
outsb
in
mov
outsl
mov
inc
add
jl
clc
push
add
jmp
popf
outsb
cmp
clc
mov
pop
add
add
ss
clc
aas
cltd
cmp
ret
clc
fistpl
add
xchg
mov
add
sbb
clc
rcll
add
inc
add
test
xor
clc
ret
clc
in
movsl
clc
xchg
pop
imul
add
xchg
cmp
add
mov
add
pushf
ret
sub
add
clc
cmp
clc
and
add
jg
inc
add
loopne
xchg
xor
clc
xor
add
mov
xor
in
pop
mov
fwait
pushf
rcrb
rcll
fdivrl
sub
clc
adc
add
fldcw
cmp
cwtl
sbb
sarb
clc
sbb
add
and
add
clc
scas
out
outsb
loopne
pop
clc
mov
jmp
sbb
fnsetpm(287
clc
out
clc
iret
call
adc
and
add
cli
cli
add
add
add
insb
adc
add
stos
jbe
add
sub
imulb
clc
iret
inc
add
adc
add
lcall
shlb
add
ret
add
pop
fsubs
pop
mov
leave
and
mov
cmp
push
sbb
in
sub
clc
into
xchg
es
es
je
clc
ret
mov
in
sbb
or
pusha
add
cmpsl
clc
call
pop
mov
clc
or
add
and
add
or
sub
or
and
inc
add
adc
adc
cmp
add
cmp
add
sbb
and
fisttpll
xlat
insl
cli
dec
shrb
ret
scas
ja
out
sar
cmp
sbb
clc
lret
bound
add
xchg
lret
mov
ret
pop
jl
mov
add
sahf
mov
popf
adc
add
clc
mov
ret
clc
cmp
or
inc
clc
loopne
mov
ret
or
clc
pop
adc
add
loop
insl
push
data16
adc
add
bound
add
mov
mov
data16
jb
add
and
add
xchg
aas
ss
cmp
inc
add
pop
mov
add
cld
sub
mov
daa
clc
jge
clc
popf
clc
adc
add
cmp
jl
cmpps
cmp
jle
clc
xor
add
jbe
and
add
inc
clc
dec
outsl
pop
clc
lea
add
insb
fwait
das
or
imul
sub
jge
mov
pop
sahf
jmp
mov
dec
cmp
sahf
xor
clc
dec
sar
clc
addr16
stos
cwtl
pop
push
out
push
push
xabort
dec
in
xbegin
jbe
in
dec
inc
add
das
dec
dec
sbb
daa
clc
xchg
pop
fwait
mov
imul
clc
fwait
add
add
imul
add
cmc
arpl
add
clc
xchg
push
xor
clc
repz
add
clc
outsl
xchg
scas
and
add
add
outsb
fstl
or
xor
add
jp
add
sbb
add
mov
int
add
popl
add
xor
jnp
mov
flds
add
or
xchg
push
je
js
cli
and
add
in
xchg
mov
clc
jno
add
clc
rcrl
jo
add
sti
mov
or
in
ffreep
clc
xabort
lret
cmc
jne
rorb
and
add
xor
add
clc
sbb
clc
jbe
add
add
add
nop
lods
cmp
clc
scas
lret
aaa
pusha
add
decb
add
sbb
pop
xchg
mov
das
ret
clc
xchg
push
ds
cmp
add
xlat
ret
add
add
je
xlat
outsb
cmp
add
sbb
add
insb
fucomip
and
mov
push
add
jne
clc
and
add
dec
mov
add
ds
add
lock
cmp
sub
add
clc
lret
out
fwait
mov
clc
xchg
dec
cmp
mov
pop
clc
mov
clc
in
sbb
add
js
or
leave
lods
fs
stos
push
aaa
cmp
aam
clc
ret
clc
pusha
add
jg
data16
imul
mov
adc
lock
js
bound
add
add
pop
jecxz
cmc
std
sub
add
push
fisttpll
push
mov
push
in
faddl
push
add
mov
fs
ret
clc
fimull
xchg
insb
jne
mov
inc
add
mov
cmp
fucomip
in
sar
into
push
pop
test
cmp
clc
mov
mov
movsl
clc
es
cmp
clc
pop
jns
push
nop
mov
cmp
popf
mov
and
add
jae
add
ret
clc
pop
push
rorb
repnz
xchg
sbb
xor
add
clc
bound
add
sti
and
add
add
psraw
dec
pusha
add
mov
cmpsl
clc
jne
fs
pop
mov
int
fisubrl
adc
shll
cmp
pop
xchg
jl
sahf
inc
clc
mov
iret
adc
add
jmp
clc
xor
or
cmp
stc
outsb
fldl
clc
lcall
lahf
sbb
fdivrl
dec
cmp
cmpsb
clc
cwtl
pop
inc
add
pusha
add
das
sbb
dec
stos
cli
push
insl
xlat
and
add
scas
xabort
jno
add
inc
clc
dec
mov
clc
cmp
pinsrw
clc
pop
bnd
pop
das
mov
jbe
jnp
clc
call
cs
add
jge
add
shrb
mov
mov
adc
add
add
cld
and
cmp
add
js
add
inc
clc
jb
add
xbegin
add
push
cli
testl
add
pop
xchg
testb
pop
push
insl
mov
cmp
add
inc
add
xchg
push
xchg
std
push
clc
test
daa
clc
xor
mov
imul
push
add
fucompp
sahf
repnz
add
loopne
int3
or
mov
add
add
shrb
mov
sub
add
dec
mov
clc
pusha
add
cmp
push
ret
clc
push
jg
clc
mov
jmp
mov
clc
cmp
add
fisubrl
clc
or
and
data16
ret
arpl
add
cmp
shll
imul
popf
punpckhwd
addr16
call
cs
cltd
adc
add
jnp
and
add
popf
ds
cwtl
cld
inc
clc
cmpsl
clc
pop
leave
xor
dec
pushf
cmpsb
clc
call
mov
clc
ja
inc
clc
mov
add
movsb
clc
mov
mov
add
mov
add
add
bound
add
or
jp
pop
add
add
add
fs
pusha
add
cmp
xchg
mov
cmp
add
hlt
fiaddl
insl
adc
add
pop
clc
mov
in
xchg
push
jecxz
int
aaa
cmp
add
rorb
xlat
jmp
inc
add
pop
dec
cmp
out
xabort
sbb
ljmp
xor
repz
jg
clc
clc
jne
cmp
clc
push
add
cmpsb
clc
sub
iret
stc
in
mov
clc
jl
stos
mov
cs
pushf
mov
mov
sub
clc
cmp
lcall
divb
mov
mov
filds
pop
mov
add
cwtl
pop
ljmp
clc
mov
roll
clc
cmp
insb
js
clc
faddp
clc
in
add
add
clc
inc
clc
cmp
fs
fadds
push
aaa
adc
add
movsb
clc
popa
add
int3
dec
ss
lods
cli
dec
sbb
clc
lea
cmp
add
add
add
shlb
cmp
mov
adc
add
test
add
jno
add
add
pusha
add
movsb
clc
cmp
clc
pop
clc
popa
add
dec
inc
clc
hlt
jmp
sbb
pop
pop
cmpsl
clc
cmp
clc
ret
cmp
add
add
in
push
add
inc
add
outsl
iret
daa
clc
idivb
add
clc
xor
inc
clc
pop
clc
xchg
jg
fbld
fldt
xor
add
add
cmp
mov
dec
fwait
adc
or
movsb
clc
lcall
add
jo
add
pop
in
loope
mov
add
jle
add
mov
mov
fsubrs
clc
jno
add
and
jl
clc
pop
sub
clc
dec
fs
sar
add
test
fwait
adc
jne
sbb
push
add
push
aaa
sbb
jg
mov
add
cmpsl
clc
sahf
addr16
mov
cmp
sbb
es
pop
addr16
sbb
das
clc
repz
push
add
ret
clc
in
bound
add
ds
cltd
int
add
in
test
add
sbb
xchg
mov
stos
and
push
add
xchg
lret
addr16
ds
mov
cli
jge
clc
sbb
inc
clc
mov
in
or
push
ja
rcl
ss
mov
add
jno
add
clc
jo
add
aam
clc
cmpsb
clc
rcrl
add
daa
clc
into
clc
xchg
xchg
fs
mov
scas
int
jecxz
inc
add
shlb
test
aaa
jmp
mov
insl
inc
add
cmp
clc
data16
and
add
clc
pop
lret
pop
inc
clc
adc
add
jnp
cmp
iret
xabort
or
in
insb
xchg
lret
into
xabort
clc
insb
jo
add
add
mov
mov
clc
leave
and
add
add
add
sub
sbb
scas
in
mov
add
enter
arpl
add
add
into
movlps
add
cmp
pop
scas
int3
add
add
cmp
clc
mov
add
add
scas
daa
clc
or
data16
notl
add
xchg
dec
sar
icebp
xor
add
add
inc
clc
or
add
je
repnz
add
jno
add
aad
adc
add
add
push
outsl
stc
nop
ds
clc
sti
add
add
add
mov
clc
insb
stc
dec
hlt
adc
pop
sti
push
inc
add
cli
lods
cmp
stc
clc
cmp
hlt
xchg
cmpsl
clc
mov
sbb
adc
add
clc
cld
inc
clc
mov
add
inc
add
and
add
mov
dec
jl
gs
mov
cmc
push
add
sub
dec
dec
mov
add
ljmp
cmp
add
sub
sbb
mov
clc
jle
clc
add
add
add
into
and
add
outsb
dec
add
add
jno
add
sub
jns
clc
adc
add
add
das
filds
add
push
add
add
test
push
ret
clc
mov
clc
shll
add
xchg
cltd
stc
fistl
add
cld
sub
push
add
xor
add
cmp
inc
add
mov
push
jecxz
leave
cmp
clc
daa
clc
lahf
enter
xor
jle
clc
push
push
ficoms
or
cmp
clc
aad
add
mov
sub
cmp
add
cmp
add
ret
inc
add
xor
add
clc
cli
push
add
test
push
lcall
add
mov
inc
clc
outsl
fisubs
cltd
jns
hlt
adc
jg
clc
sti
dec
das
in
jno
add
clc
sbb
out
bound
add
cmp
sti
lods
gs
sub
add
xchg
mov
xor
push
std
mov
int3
mov
jl,pt
loop
test
add
push
fadd
clc
sub
add
xbegin
push
in
jae
add
clc
repnz
add
es
jbe
push
clc
pop
cmp
es
dec
pop
sar
add
test
call
and
add
add
lods
sbb
mulb
sbb
js
jmp
ret
clc
insl
xlat
cmp
testb
add
fisubrl
clc
push
jo
add
clc
mulb
clc
cmpsb
clc
jb
add
and
jg
setp
xor
add
push
clc
icebp
imul
and
add
or
sbb
es
cmc
repnz
outsl
mov
fs
mov
jmp
es
jg
mul
clc
pop
xchg
popa
add
sbb
push
pop
repz
fsubl
add
inc
clc
into
js
clc
lods
ret
loope
jg
inc
add
scas
outsb
std
adc
clc
ret
flds
add
dec
lock
ret
mov
xchg
sbb
cld
cmp
adc
or
fst
mov
je
add
pusha
add
ljmp
add
xor
add
nop
aad
push
add
sahf
add
add
in
mull
add
xchg
addr16
xor
add
inc
clc
xchg
divps
inc
clc
mov
add
aam
add
cmp
aas
xor
add
add
out
fwait
enter
add
outsb
cld
mov
jne
or
fidivrl
clc
xor
add
dec
lea
add
mov
sbb
xlat
jnp
neg
imul
clc
mov
sar
clc
fwait
jb
add
push
mov
add
cmp
sar
cltd
push
add
cmp
clc
push
pop
repz
clc
push
sbb
pop
mov
ljmp
sbb
add
clc
jae
add
push
add
adc
add
add
mov
sub
cmp
stc
lcall
mov
clc
imul
cmp
clc
pop
mov
insl
negb
add
fists
xor
add
cmp
sub
jmp
clc
jge
cmp
mov
clc
or
clc
stc
sub
gs
jno
add
add
or
clc
sub
add
pop
fbld
add
mov
bound
add
cmp
imul
clc
jmp
inc
clc
mov
add
fisubrl
scas
mov
mov
add
fisubs
test
pop
xchg
mov
cmp
mov
add
out
adc
jo
add
add
clc
out
cmp
out
pop
stos
adc
add
add
cwtl
mov
add
clc
cwtl
add
fbld
add
or
sbb
je
clc
cmp
popl
add
jle
pop
stos
xchg
xchg
cli
je
sar
repnz
std
lock
aas
mov
xor
add
clc
cmp
pop
insb
xlat
sub
js
push
cmp
xchg
add
add
movsb
clc
jecxz
adc
gs
pop
fs
loope
dec
in
pop
aas
out
mov
push
clc
loopne
sti
test
sbb
stos
xchg
sar
hlt
dec
iret
xchg
inc
clc
outsl
imul
iret
cmp
movsl
clc
dec
pop
fprem
inc
clc
nop
lock
clc
adc
clc
push
add
mov
ret
clc
out
add
shl
clc
xabort
clc
mov
jno
add
clc
hlt
mov
nop
cltd
pop
int3
clc
sub
xchg
aam
add
ret
add
adc
inc
clc
and
add
push
mov
cmp
clc
stos
mov
mov
or
and
cmp
int
pop
lods
mov
mov
clc
sub
add
xbegin
clc
xchg
adc
sbb
add
jl
clc
mov
mov
punpcklwd
add
push
add
addr16
sar
clc
and
add
clc
ret
clc
int3
or
pop
popf
daa
clc
sub
sti
jnp
adc
add
jmp
mov
jno
add
clc
imul
cmp
add
cmpsb
clc
pop
ret
fstpt
scas
aam
mov
clc
mov
clc
jp
clc
sub
test
inc
add
cmp
fistpll
clc
cmp
add
adc
add
add
clc
int3
sub
insb
xchg
lock
roll
add
mov
dec
xchg
sar
jo
add
in
or
clc
mov
sarb
cmp
pop
jnp
clc
xlat
js
sub
add
mov
testb
clc
mov
dec
fimuls
leave
inc
add
dec
fidivrl
clc
mov
add
or
xabort
clc
sbb
lock
jle
clc
cmp
lock
jno,pn
add
popf
cmpsl
clc
and
clc
mov
mov
jl
mov
outsl
lcall
clc
fsts
add
add
clc
ficoms
add
add
jae
add
add
int3
in
dec
jns
push
add
scas
xor
add
fsubrl
clc
jo
add
mov
clc
xchg
std
divl
jns
inc
add
adc
int3
adc
loopne
add
add
clc
lock
add
xchg
fsub
clc
repz
clc
insb
in
ja
inc
add
das
sub
aas
gs
out
mov
add
mov
mov
fs
xchg
imul
mov
push
add
or
sub
mov
add
sbb
sub
notl
notrack
adc
add
imul
inc
clc
adc
add
add
jmp
imul
ss
adc
add
leave
nop
cmp
pop
add
movsb
clc
in
and
mov
sub
fadds
add
adc
add
xor
add
clc
xchg
add
add
clc
aaa
jecxz
insl
ja
iret
xchg
fs
or
sarl
clc
pop
bound
add
push
lods
xor
add
repz
mov
clc
pop
adc
in
inc
clc
imul
sub
add
mov
clc
jbe
clc
aaa
mov
std
dec
popa
add
and
add
add
imulb
inc
clc
xor
add
or
clc
jo
add
clc
or
enter
mov
sar
fsubrs
or
adc
add
mov
sbb
add
cmp
das
es
lret
add
inc
add
test
add
or
clc
test
or
add
es
clc
cmp
nop
sahf
daa
clc
daa
clc
mov
jbe
add
movsl
clc
shll
mov
clc
xchg
mov
adc
add
clc
pop
call
push
add
pop
mov
fidivs
xor
add
pop
in
stos
jg
clc
pop
inc
clc
jge
cmp
add
add
test
mov
add
mov
sub
mov
add
add
cmc
daa
clc
rsm
adc
sub
clc
in
cmp
clc
inc
add
aad
pop
sar
sbb
push
clc
clc
or
mov
mulb
aaa
or
lea
aam
lods
adc
add
cli
out
jae
add
xor
add
mov
loope
push
add
repz
and
add
add
stc
lods
scas
xlat
das
lret
jno
add
adc
add
mov
rcll
add
xor
add
add
mov
out
cmp
add
jns
pop
or
clc
sbb
das
jecxz
or
clc
sub
mov
mov
insb
pop
push
testb
test
pop
clc
pop
jl
pop
dec
jns
mov
ds
clc
cmp
clc
pop
loope
push
add
clc
or
clc
jb
add
inc
add
fcomp
testl
sub
add
sgdtl
add
test
clc
mov
pop
mov
out
mov
clc
aaa
out
outsl
mov
mov
add
testb
add
push
sahf
test
clc
xchg
sahf
dec
xor
add
in
sbb
jg
clc
mov
clc
fidivrl
add
xlat
mov
clc
test
popa
add
mov
lret
das
mov
add
data16
push
mov
add
lods
xor
add
push
clc
call
or
repz
push
rcll
push
add
and
add
jo
add
push
loop
jmp
clc
mov
push
iret
pop
outsl
insb
sub
and
add
add
sahf
adc
add
xor
add
cld
adc
add
add
push
add
fstpt
clc
out
iret
popf
iret
adc
add
clc
inc
clc
add
add
add
cmp
dec
test
mov
arpl
add
cmp
pop
in
addr16
out
fdivrl
clc
loope
jnp
clc
cmp
test
jl
add
je
clc
jl
outsb
mov
aam
packuswb
jns
add
push
add
add
push
add
mov
sbb
clc
jp
add
sbb
clc
ss
daa
clc
addr16
inc
clc
cmp
daa
clc
pop
mov
cmp
clc
mov
clc
iret
pop
mov
inc
add
insb
testb
adc
add
add
add
dec
adc
add
add
mov
push
sub
loop
jmp
out
mov
clc
jge
push
sub
xor
add
xchg
sbb
clc
or
push
jge
and
int
aas
movsb
clc
mov
add
lods
cmc
lods
pushf
mov
add
clc
pop
dec
outsl
insl
stc
push
add
dec
jge
test
inc
clc
pop
movsb
clc
mov
jle
add
lods
in
dec
leave
aaa
adc
add
iret
xchg
mov
rcrb
cmp
shl
scas
dec
and
aam
and
add
clc
sar
ror
ret
imul
imul
clc
in
adc
add
clc
gs
dec
or
xchg
cld
mov
cmp
test
clc
test
pop
xor
out
xchg
movsl
clc
dec
jmp
ud1
pop
xor
add
clc
or
clc
loop
sbb
add
pop
pop
xchg
sbb
add
int3
xor
add
push
insb
xchg
cmc
push
loopne
cltd
mov
negl
sub
cmc
sbb
fmuls
sete
mov
clc
dec
pop
lods
jg
clc
xor
add
xchg
int
add
sub
push
mov
pop
adc
add
out
movsl
clc
into
cli
jb
add
fldcw
add
shrl
add
add
fwait
es
clc
dec
cmpsb
clc
cmp
sbb
mov
insb
cmp
lahf
adc
add
icebp
and
add
mov
clc
stos
xbegin
add
mov
clc
xchg
pop
clc
imul
cmp
clc
push
daa
clc
jo
add
clc
loopne
and
es
stos
cmp
add
mov
add
add
jmp
in
sar
add
mov
mov
outsb
mov
dec
sbb
sbb
jg
add
add
add
fidivrl
leave
push
xchg
dec
lret
pop
loop
jns
fcomp
sbb
lods
cmp
add
inc
add
sub
or
push
iret
or
jmp
mov
cmp
fdivr
shll
add
dec
jns
bound
add
notb
sar
jge
in
movsb
clc
icebp
add
jp
cld
or
push
xor
lods
sahf
aam
clc
data16
pop
push
add
cmp
out
out
in
mov
sbb
adc
add
fnstenv
add
or
add
add
dec
fs
or
out
or
dec
push
xor
in
nop
sahf
lock
clc
dec
jg
clc
es
test
adc
add
fiaddl
add
outsl
xor
add
xor
add
clc
inc
clc
xchg
stos
xchg
add
add
pop
jmp
and
add
clc
adc
add
int3
imul
add
clc
loope
adc
out
pop
sahf
icebp
movsb
clc
adc
add
outsb
adc
add
xchg
pusha
add
mov
clc
outsl
cld
sti
dec
adc
add
imul
jmp
std
add
add
dec
loopne
mov
sub
clc
pop
jbe
clc
xchg
imul
mov
pop
test
aaa
add
add
add
aas
cmp
mov
jns
adc
add
add
add
insb
cltd
outsb
mov
fiaddl
add
mov
clc
add
insl
lret
add
cmp
or
in
xchg
pop
imul
out
pop
jns
aad
sub
mov
push
ret
and
arpl
add
imul
pop
jae
add
or
clc
mov
sti
mov
and
add
repz
cli
std
mov
test
jo
add
clc
test
and
jl
clc
frstor
clc
push
cmp
push
jmp
add
push
dec
inc
add
gs
mov
mov
lahf
arpl
add
add
clc
mov
mov
cmp
sbb
sbb
ret
clc
cmpsl
clc
out
or
clc
mov
clc
xor
add
sar
mov
add
add
sbb
add
add
repz
cmpsl
clc
or
clc
and
mov
fmulp
outsb
sub
mov
add
clc
jmp
push
add
sar
scas
fwait
das
jo
add
mov
pop
loopne
fistps
arpl
add
hlt
cmp
add
insl
push
inc
add
mov
add
add
outsl
out
push
clc
fdivs
add
fcompl
pop
push
xor
add
clc
jl
add
pop
jle
clc
lods
cmp
add
fwait
push
cmpsl
clc
ret
clc
or
in
fs
push
add
add
flds
xor
add
es
dec
mov
clc
cmp
add
jle
iret
jnp
gs
pop
addr16
cmc
lock
outsl
cmp
fbstp
and
add
jecxz
ret
clc
ret
clc
mov
add
shll
adc
add
lcall
add
into
push
dec
je
xchg
fists
adc
loope
lret
dec
mov
clc
sbb
add
add
dec
dec
push
or
clc
jmp
repz
clc
repz
enter
std
cmp
stos
insb
xlat
lahf
push
add
rcr
sbb
cmc
jle
push
add
sub
add
sti
imul
jo
add
jmp
xchg
add
add
testl
add
js
jge
clc
dec
adc
add
pop
in
popl
add
add
testl
testb
fildll
clc
cwtl
jns
int3
mov
clc
nop
pop
cmc
ret
clc
inc
clc
test
inc
clc
sbb
mov
cli
lret
add
popa
add
mov
clc
es
xchg
scas
aad
jno
add
clc
inc
add
shlb
mov
add
fidivrl
or
clc
cmp
clc
je
cmp
clc
pop
adc
arpl
add
fs
rclb
add
or
and
pop
dec
or
add
stc
push
leave
idiv
mov
or
mov
clc
cmpsb
clc
push
call
xchg
mov
add
mov
cmp
pop
clc
or
push
add
popa
add
loope
mov
hlt
xor
add
out
pop
xchg
pusha
add
repz
pop
test
push
pop
xor
add
inc
clc
jno
add
add
add
add
push
add
push
mov
xabort
jbe
sub
add
loop
movsb
clc
test
add
dec
dec
in
cs
dec
test
clc
test
je
clc
jnp
clc
cmp
int3
ret
clc
or
add
add
pushf
sub
clc
pop
loop
pushf
int
sub
add
add
add
pop
lcall
lock
gs
call
clc
pop
decl
clc
mov
add
add
or
clc
add
add
and
std
sub
sbb
cmc
mov
xor
add
add
dec
cmp
bts
add
loop
xor
add
add
jle
iret
js
mov
mov
daa
clc
nop
xchg
xchg
sub
clc
mov
mov
bound
add
clc
or
dec
sar
cmp
cli
mov
add
add
add
clc
mov
xor
xabort
add
push
mov
adc
clc
movsl
clc
cwtl
add
add
div
mov
jge
add
xor
add
add
cmp
or
in
push
clc
mov
mov
inc
add
scas
sbb
lahf
out
aad
clc
inc
add
mov
adc
add
clc
cli
mov
clc
push
xor
mov
lret
jne
push
sub
add
iret
adc
add
mov
cli
popa
add
mov
fidivs
add
std
push
add
add
inc
clc
mov
imul
icebp
push
clc
jo
add
clc
jmp
add
pop
sbb
lcall
inc
add
cmp
add
popl
clc
and
add
pop
aad
add
imul
clc
iret
test
clc
rep
mov
out
or
add
add
test
repz
add
jle,pn
push
adc
in
jge
clc
and
stos
mov
and
add
cmpsl
clc
adc
add
insl
pop
cmc
in
cli
shrb
roll
add
mov
mov
clc
movsl
clc
sbb
sahf
jecxz
imul
add
add
rol
clc
out
adc
add
pop
mov
add
xor
add
clc
cmp
mov
add
daa
clc
xor
xor
mov
enter
sub
jno
add
push
xlat
jle
pop
lock
add
mov
add
inc
clc
clc
mov
add
xchg
adc
add
cmp
clc
xor
js
call
cld
vmovhps
push
add
enter
roll
push
dec
daa
clc
adc
add
clc
add
add
clc
jb
add
push
add
cmpsl
clc
ds
clc
aaa
mov
stos
inc
clc
test
shrd
clc
lods
cli
sar
add
jo
add
in
ja
xor
add
fnstsw
clc
mov
xor
add
xchg
into
push
add
and
hlt
mov
clc
push
clc
ficomps
add
mov
clc
pop
sub
cltd
adc
add
jne
add
pop
imulb
clc
in
xlat
das
lcall
add
out
lods
xchg
and
add
add
add
sub
getsec
nop
ss
clc
in
dec
mov
clc
add
rcll
add
cmp
add
push
add
adc
cwtl
push
sar
clc
leave
cmpsl
clc
cmp
gs
jge
clc
push
lea
clc
pop
movsl
clc
xchg
outsl
aam
flds
add
std
mov
push
pop
xchg
popa
add
push
xchg
cs
adc
add
stc
cmp
clc
sbb
movsb
clc
pushf
pop
sbb
aad
rolb
clc
cmc
pop
mov
stc
scas
mov
and
add
clc
dec
out
cwtl
cmp
adc
add
push
mov
add
jnp
cltd
sbb
cmp
outsl
add
add
add
push
mov
leave
sbb
clc
xbegin
add
cmp
decl
movsb
clc
dec
adc
add
inc
clc
cmp
shrb
push
add
js
add
xchg
jno
add
add
ja
clc
xchg
fwait
dec
sarl
clc
xchg
test
xlat
in
mov
pop
jne
dec
sbb
clc
mov
add
xor
add
aad
push
aas
daa
clc
dec
test
jl
clc
in
mov
and
fistps
punpcklbw
add
add
jecxz
sub
es
cmp
xchg
mov
add
clc
sub
push
add
out
mov
mov
loop
enter
out
dec
push
clc
clc
add
add
pop
loope
xor
add
outsl
sub
push
out
enter
push
add
jo
add
stos
sub
das
pop
clc
ret
clc
and
add
clc
push
clc
pop
sbb
clc
and
add
clc
jmp
js
add
mov
push
fcomps
add
clc
pop
call
clc
mov
add
dec
jle
mov
pop
aad
clc
mov
clc
inc
clc
xchg
xchg
in
aas
cld
call
clc
jbe
fsubl
mov
bound
add
pop
mov
add
pop
out
adc
add
cmp
clc
clc
lods
fsubl
add
clc
xbegin
add
pushf
mov
xbegin
add
inc
clc
data16
push
ja
jae
add
jns
mov
clc
daa
clc
ss
jle
addr16
add
clc
add
add
add
xchg
es
stc
pushf
xchg
cmp
clc
leave
ds
imul
clc
aam
out
and
lods
movsb
clc
sbb
pushf
stc
sbb
add
mov
push
dec
cmp
xlat
ret
clc
push
add
cmp
clc
fdivl
add
cmp
mov
and
add
add
nop
daa
clc
lret
out
dec
or
mov
aam
jno
add
add
clc
cmp
mov
jo
add
pop
addr16
dec
and
out
or
inc
clc
movsb
clc
lods
push
push
xchg
adc
add
push
add
cmc
leave
out
shr
jbe
add
add
pop
js
mov
mov
add
xor
mov
mov
out
push
mov
add
add
mov
clc
cmp
mov
clc
jg
hlt
mov
add
add
clc
and
add
int3
test
clc
or
mov
push
out
jle
aam
das
insl
sbb
dec
mov
aaa
imul
clc
sahf
mov
call
mov
fisubs
fmull
call
out
fwait
jae
add
add
dec
xor
out
sar
add
push
add
xor
cmp
jecxz
mov
test
clc
mov
add
add
add
push
add
add
add
clc
imul
add
add
and
add
add
jb
add
sbb
cmp
rcll
push
add
sar
dec
xor
add
xchg
jg
cmp
or
add
add
add
bnd
jno
add
cltd
popf
bound
add
fcmovne
adc
cmp
add
add
dec
loopne
sti
pop
clc
pusha
add
push
clc
pop
nop
in
lahf
jmp
pop
pop
outsl
pop
stos
fwait
xor
add
add
and
add
cmpsb
clc
sar
clc
and
clc
xchg
scas
fisttpl
xchg
add
add
add
add
sbb
add
clc
xor
add
fstps
fisubrl
clc
xor
add
hlt
sbb
push
mov
and
add
loopne
jo
add
dec
dec
sbb
sbb
jne
clc
cmpsl
clc
jp
or
test
clc
jae
add
test
in
clc
cmp
pop
clc
repz
cmp
and
add
mov
lcall
gs
hlt
lahf
int3
add
add
out
shlb
mov
aad
jns
mov
mov
clc
push
add
data16
test
fcmovnbe
out
mov
add
pop
sub
icebp
adc
clc
xor
add
add
xchg
xor
add
xor
cmp
add
and
add
add
add
clc
mov
mov
clc
pop
clc
mov
je
clc
gs
aam
clc
cmpsl
clc
decb
sar
ljmp
leave
and
add
xchg
mull
clc
imul
add
ja
sub
clc
mov
add
movsb
clc
sub
clc
cli
xlat
fists
ret
clc
sbb
add
repnz
es
cmpsb
clc
movsl
clc
stos
std
add
add
add
inc
add
das
ror
xbegin
in
adc
add
lods
std
xchg
scas
adc
sbb
push
add
movsl
clc
cmp
out
inc
clc
xchg
out
repz
dec
add
add
data16
push
out
xchg
sbb
pusha
add
cmp
push
add
dec
ss
clc
lods
dec
mov
add
insl
push
in
xchg
add
das
lret
ja
clc
inc
add
aad
mov
mov
mov
push
add
inc
clc
fcoml
jmp
and
add
inc
clc
jp
imul
jne
sub
mov
cmp
sbb
icebp
ror
gs
xchg
push
add
jnp
mov
dec
cmpsl
clc
pop
clc
sub
pop
bound
add
jne
clc
outsl
arpl
add
clc
negl
fucomi
push
add
sub
sbb
cmp
push
add
mov
mov
add
mov
fyl2x
out
movsb
clc
fwait
aas
inc
add
mov
pop
sbb
pop
std
jno
add
dec
leave
js
add
jne
pop
cmp
sti
and
add
pop
xchg
push
push
xchg
jl
into
xor
add
clc
imul
add
call
add
add
inc
clc
cwtl
cmp
fsubs
mov
jp
mov
das
inc
add
mov
add
mov
add
mov
mov
clc
pop
add
add
clc
mov
addr16
sahf
in
pop
clc
push
outsl
pop
inc
clc
adc
mov
mov
xlat
jp
mov
push
sbb
add
xbegin
add
add
je
inc
add
dec
addr16
ficoms
jae
add
pop
adc
add
add
add
add
sub
jg,pn
xor
add
add
sbb
add
nop
movsl
clc
mov
add
pop
mov
fidivrl
sub
pop
js
clc
jbe
loope
popf
pusha
add
test
fnsave
add
daa
clc
daa
clc
jns
add
add
push
mov
cmp
add
sub
clc
fistpl
push
add
jl
dec
cmpsl
clc
ljmp
clc
dec
xchg
data16
push
sub
push
add
mov
sar
clc
dec
mov
sub
cmp
add
add
xor
add
clc
fcmovu
in
rorl
add
add
cmp
ficomps
xchg
lock
clc
xchg
lea
cmp
add
add
loop
jg
mov
fdivrl
clc
sbb
ja
mov
fidivl
lea
mov
add
mov
clc
fcmovb
clc
mov
add
mov
cwtl
xor
add
add
jno
add
in
fwait
or
add
loop
mov
clc
lods
mov
add
add
add
insl
cli
outsl
and
add
clc
cltd
cs
add
sbb
clc
adc
fcoms
cmp
mov
aad
add
shrb
add
mov
cmp
clc
dec
jno
add
mov
clc
lcall
cmc
lods
das
or
shlb
add
mov
inc
add
xor
add
add
pop
dec
pop
outsl
or
das
jns
add
arpl
add
add
add
add
insb
xor
sti
push
add
jle
fildll
jae
add
add
add
scas
inc
clc
and
add
out
ret
clc
inc
add
out
or
iret
fcmovbe
stc
jmp
repz
pop
jmp
das
mov
sub
jns
clc
test
xchg
lret
repz
adc
jno
add
add
fs
arpl
add
std
insl
ljmp
sub
clc
mov
add
cmp
clc
js
ficomps
adc
add
mov
mov
add
add
fimuls
jno
add
clc
or
mov
imul
pop
cmp
dec
in
inc
clc
ja
inc
add
int3
bound
add
push
clc
das
fwait
sti
push
clc
test
mov
clc
pop
jg
xabort
arpl
add
cli
repnz
sahf
dec
or
clc
push
add
mov
clc
push
pop
dec
sbb
jb
add
add
cmp
clc
cmp
add
daa
clc
cmp
bnd
add
xchg
scas
xchg
sar
jns
nop
lret
mov
add
ret
clc
xchg
sub
sub
sub
add
sub
jno
add
clc
push
add
inc
clc
sub
cld
cmp
clc
cmp
sbb
or
add
add
dec
or
add
add
xchg
mov
xchg
int
xor
add
push
ss
mov
clc
test
je
push
and
sub
pop
sub
inc
clc
sbb
loopne
jmp
add
cmp
clc
mov
lret
add
jne
clc
push
clc
arpl
add
clc
std
cmp
jbe
clc
sub
ret
clc
fwait
push
dec
imul
loop
push
push
add
loop
jg
add
add
fsubr
insb
sahf
pop
dec
mov
clc
or
add
add
add
add
js
adc
add
add
in
or
add
sqrtps
add
popl
add
or
mov
imul
xchg
popa
add
push
mov
xchg
fsubs
clc
mov
sub
add
push
clc
mov
push
xabort
inc
add
ss
xchg
xor
add
add
mov
nop
and
mov
clc
jnp
frstor
add
mov
clc
lock
cmc
mov
add
add
dec
jge
or
pop
dec
push
cmc
lret
mov
clc
pop
jns
loopne
fs
xchg
repnz
add
sub
sub
cmp
clc
mov
inc
add
jbe
popf
mov
sub
xchg
inc
add
enter
pop
in
cli
inc
clc
mov
add
or
add
testl
add
xbegin
mov
push
clc
lea
loopne
add
icebp
rorl
clc
adc
imul
mov
xchg
jmp
je
clc
sbb
clc
nop
sbb
fnstcw
cmpsb
clc
lea
clc
push
add
or
add
aam
add
cmp
and
add
adc
add
mov
cmp
imul
push
add
cmp
sbb
add
mov
add
dec
cmp
inc
add
mov
movsb
clc
jbe
push
call
hlt
mov
clc
xchg
testl
jmp
and
lods
jo
add
sub
sbb
int
test
lock
add
sbb
inc
clc
out
push
clc
jp
add
mov
push
add
arpl
add
clc
cs
add
stc
adc
add
sti
jno
add
cld
sub
sub
inc
clc
insb
inc
add
cmp
lods
or
ret
clc
sti
popa
add
mov
add
mov
pop
aas
stos
cmp
mov
clc
fdivl
loopne
stos
repz
ret
clc
lcall
and
xor
add
clc
jg
clc
push
push
mov
lock
cmpsb
clc
aad
add
out
lods
test
sub
clc
xchg
jbe
fistps
add
ja
push
add
add
mov
ret
sub
adc
clc
xor
add
jo,pn
add
clc
in
dec
popf
mov
add
fistl
jmp
xchg
xabort
add
cltd
je
clc
cwtl
sbb
xlat
jne
add
iret
icebp
js
sar
hlt
dec
sub
add
pop
clc
aad
add
mov
sar
clc
or
aam
clc
mov
loop
arpl
add
add
jno
add
sub
clc
ret
clc
cmp
ficompl
adc
add
add
jnp
and
add
clc
dec
add
arpl
add
dec
dec
jae
add
push
add
ljmp
clc
fsubs
scas
sbb
add
je
cmp
rorl
clc
insb
pusha
add
or
pop
dec
and
push
adc
add
add
add
mov
clc
scas
sub
push
mov
clc
lret
or
add
mov
clc
push
sahf
imul
cmp
mov
clc
mov
or
adc
pusha
add
mov
xor
add
clc
sar
xchg
xchg
arpl
add
jae
add
push
mov
cmc
xchg
mov
add
add
fistpll
sbb
call
add
push
add
stos
dec
imul
clc
out
xor
add
in
or
clc
xor
add
adc
outsb
mov
sub
add
mov
clc
inc
add
cmpsl
clc
mov
leave
enter
leave
mov
fbld
int3
clc
aas
xchg
icebp
stos
ret
clc
iret
fildl
nop
or
add
sarl
push
aam
clc
xchg
sbb
add
sub
divb
add
sub
add
add
add
add
ret
and
add
es
ljmp
sub
mov
pop
push
clc
mov
dec
push
add
test
or
xchg
cld
sahf
add
add
add
rcr
fs
cmp
lret
sbb
push
cmp
nop
cmp
add
xchg
jg
dec
mov
in
xor
mov
mov
ret
dec
cwtl
insl
mov
adc
add
imull
cwtl
fwait
xchg
mov
sar
clc
or
inc
clc
jl
adc
add
xabort
clc
cmp
inc
add
xchg
add
add
jle
clc
inc
add
inc
clc
pop
int3
and
call
icebp
pusha
add
xor
add
and
inc
add
inc
clc
mov
sar
push
add
push
pusha
add
pusha
add
push
add
nopl
add
jno
add
clc
std
jne
jle
xlat
xor
add
clc
mov
adc
xchg
call
clc
fabs
clc
or
clc
inc
add
sar
dec
sbb
clc
cmp
add
nop
dec
fmuls
mov
mov
cmpsb
clc
ja
push
das
cld
loop
pop
out
mov
sbb
clc
push
and
add
adc
add
clc
inc
clc
fs
sti
movups
add
addr16
sar
addr16
jl
jge
mov
add
std
loop
sbb
mov
lods
add
add
clc
mov
or
lods
pop
das
rorl
and
clc
stos
in
popa
add
ret
clc
inc
add
sarb
push
add
mov
clc
cmpsl
clc
inc
add
xor
add
adc
clc
movsl
clc
lret
xor
add
pusha
add
xlat
jp
ljmp
jg
testb
loop
mov
push
add
leave
faddl
dec
mov
add
push
add
jo
add
clc
xchg
aaa
ror
sahf
cwtl
xor
add
add
xlat
sbb
jb
add
sarb
dec
cmp
jnp
stos
lret
lret
iret
stos
outsl
into
sarl
add
shlb
clc
fistpll
pop
push
add
pusha
add
push
add
aas
not
sbb
sar
cwtl
mov
push
jle
add
sub
or
cmc
add
add
xor
adc
ret
sti
fbstp
add
adc
add
add
sub
lods
daa
clc
je
clc
mov
add
add
add
loope
sbb
dec
jmp
add
push
dec
and
add
xor
add
xchg
push
mov
pop
or
add
cmp
add
and
movsb
clc
inc
add
das
cmp
loopne,pt
cli
sar
add
add
push
adc
add
cmp
push
sti
int3
mov
arpl
add
pop
mov
clc
mov
ud1
ret
loopne
inc
clc
and
add
xabort
scas
stc
das
insb
lret
add
adc
sar
xchg
addr16
push
mov
mov
add
movsb
clc
ja
jo
add
adc
add
inc
add
mov
fwait
pop
sarl
adc
add
jbe
add
insb
push
inc
add
fnstsw
pushf
dec
pusha
add
bound
add
add
sub
inc
clc
push
add
mov
dec
cld
daa
clc
add
mov
fdivrl
sbb
fsts
xchg
dec
xchg
mov
out
mov
data16
leave
out
dec
jne
cmpsb
clc
cltd
add
clc
popa
add
popa
add
xabort
sbb
clc
push
cwtl
ja
mov
cmp
mov
aas
outsb
inc
add
xabort
into
std
pop
imul
add
xchg
lea
test
add
cli
or
clc
mov
mov
add
mov
add
call
mov
cld
pop
dec
imul
xbegin
pop
sbb
jle
clc
push
adc
add
sub
jg
push
add
dec
add
add
clc
mov
or
add
mov
clc
jbe
repnz
add
cli
js
jle
jne
clc
xchg
fcompl
scas
or
and
into
mov
clc
test
fs
lods
mov
push
pop
idivl
cmp
add
and
xchg
loop
cmp
pop
xor
add
cmp
add
leave
out
xchg
adc
clc
inc
add
dec
jge
clc
xlat
stos
adc
stos
cmp
add
jo
add
pushf
jl
lods
xor
add
add
shrb
clc
mov
jle
fidivrl
cwtl
and
test
xlat
loop
cld
cmp
movsb
clc
jnp
pop
fdivrs
sbb
gs
mov
add
cmp
imul
add
sar
call
add
lcall
sbb
clc
mov
pop
data16
jecxz
adc
add
ja
cmp
out
or
xchg
enter
clc
aaa
mov
add
mov
popa
add
lods
mov
mov
add
gs
in
inc
clc
or
add
add
inc
add
icebp
jle
sbb
clc
pushf
scas
ja
clc
jno
add
clc
repnz
and
add
kmovw
sub
jge
clc
lea
clc
incb
add
lret
add
or
mov
add
and
add
cwtl
mov
outsl
sbb
dec
cltd
xor
fdivl
add
clc
sbb
stos
pop
cld
cmp
lahf
popa
add
pushf
mov
xchg
jp
xchg
mov
cmp
dec
xor
add
jno
add
add
add
clc
into
sar
clc
dec
imul
add
call
cmpsb
clc
lods
test
push
mov
add
add
pop
dec
mov
out
ret
or
outsl
mov
cmp
cwtl
lcall
clc
adc
add
sbb
push
inc
clc
fcmove
fwait
outsl
mov
add
mov
or
int3
cmp
lahf
cmp
xor
add
add
mov
fsubp
clc
rclb
add
add
or
imull
addr16
pop
clc
lret
into
pusha
add
int3
lock
xor
add
popa
add
fildl
sub
jmp
outsl
cmp
add
cmp
aas
cmp
lods
push
clc
xor
add
std
xabort
lret
add
add
out
pop
clc
jge
ja
addr16
adc
add
cmp
mov
clc
jnp
clc
ret
add
xor
jae
add
jp
out
or
dec
cli
sbb
clc
ficomps
ljmp
repz
psrld
add
test
repz
adc
add
adc
add
unpckhps
add
pop
sbb
pop
clc
loope
addr16
popf
mov
jl
add
xchg
nop
add
add
das
loope
ss
dec
or
cwtl
cltd
jecxz
adc
add
mov
inc
clc
lock
data16
and
adc
add
movsl
clc
lret
in
xchg
clc
mov
jae
add
add
fisttps
cmp
sahf
imul
jge
pop
int
sbb
idiv
out
das
jmp
or
clc
push
inc
add
cmp
idiv
mov
add
add
ret
clc
cmp
enter
lock
xchg
jecxz
enter
clc
adc
cmp
add
cmp
add
xor
cmpsl
clc
xor
add
add
loope
fstp
mov
clc
add
add
push
add
or
mov
add
sar
fdivrl
mov
mov
add
xbegin
clc
bound
add
push
sub
clc
dec
insb
stos
xchg
xbegin
add
add
fs
imul
dec
mov
cmp
icebp
inc
add
scas
ret
sbb
add
xchg
sub
add
mov
stos
mov
pop
pop
negl
clc
or
cmp
ret
jp
mov
cmp
xchg
sar
clc
jecxz
stc
jge
add
ffree
clc
cmp
fdiv
imul
or
cmp
add
add
pop
push
fcoms
add
out
push
fnsave
xor
cwtl
and
add
inc
add
sbb
dec
stos
jp
clc
inc
add
push
and
add
lahf
sub
push
cmp
pop
test
xchg
jbe
mov
mov
inc
clc
sar
sti
lods
push
jmp
mov
add
enter
mov
out
stos
jp
ret
clc
sub
je
add
add
cli
test
iret
push
ret
push
pushf
out
into
mov
add
ds
test
jo
add
add
add
cwtl
insb
in
iret
shll
add
clc
add
sub
xor
add
add
inc
clc
cmpsl
clc
add
add
add
mov
or
insl
mov
iret
cmp
clc
mov
scas
cmp
or
adc
add
pushf
neg
addr16
mov
cmp
iret
pop
mov
mov
inc
add
push
add
inc
add
cmpsl
clc
insl
out
mov
add
push
sbb
ja
clc
dec
cltd
mov
clc
push
add
jno
add
jmp
lods
lea
mov
push
mov
iret
enter
loope
cmp
xor
add
imul
jno
add
jge
into
in
imul
adc
cli
push
add
xchg
jg
add
xchg
sbb
mov
pop
sub
lods
push
out
dec
sbb
cli
pusha
add
sbb
inc
add
add
add
xchg
addr16
pop
jmp
decb
clc
jle
pop
daa
clc
loop
mov
sub
clc
sar
js
mull
clc
roll
in
aam
js
add
or
jo
add
jo
add
and
add
test
arpl
add
push
cld
pushl
add
add
in
and
add
clc
cld
repnz
aad
fdivl
sarb
dec
pop
std
nop
stc
add
clc
cmp
clc
inc
add
xchg
pop
xchg
add
add
add
and
lock
sub
jns
aaa
cmp
cs
cmp
add
cs
clc
xchg
fcomip
outsb
jl
add
mov
and
das
out
cltd
mov
push
mov
add
add
cmp
jbe
add
add
add
fucomp
test
inc
clc
xchg
mov
fsubrl
test
in
mov
incb
add
mov
or
add
sub
stos
movsb
clc
push
adc
add
or
mov
in
jge
xbegin
cwtl
std
js
xor
sbb
add
xchg
xbegin
sub
out
or
sub
clc
push
clc
fildll
test
loop
inc
add
repnz
add
fidivrl
sbb
das
sub
add
and
add
call
push
clc
mov
popf
pusha
add
push
leave
or
cmp
add
aas
jae
add
add
outsb
scas
filds
add
mov
mov
add
lret
dec
cld
jno
add
gs
in
clc
enter
jae
add
adc
add
clc
lfs
fdiv
push
add
add
stos
and
mov
clc
jae
add
pop
jb
add
inc
add
nop
enter
cmp
push
or
sbb
mov
xor
add
clc
mov
and
add
clc
aam
add
jle
adc
add
stos
mov
popa
add
push
rorl
and
add
pop
add
push
mov
add
add
xchg
clc
adc
add
add
push
add
je
add
mov
pop
push
add
stos
stc
jp
arpl
add
add
add
lret
addr16
dec
fcmovu
je
add
cmp
mov
add
pushf
mov
dec
sbb
push
aas
pop
xor
add
sahf
std
xor
add
inc
clc
and
pop
mov
sub
fdivrl
jp
mov
pop
jge
clc
mov
lret
clc
mov
ficoms
add
xor
add
jecxz
lea
clc
sti
sub
add
add
pop
int3
lock
push
add
lret
test
into
loope
imul
add
pop
arpl
add
clc
adc
add
or
clc
xchg
pusha
add
stc
repz
clc
cmp
add
popa
add
and
adc
ficoml
add
ds
test
push
add
int3
mov
add
imul
add
and
add
clc
mov
clc
sub
pop
cwtl
push
outsl
scas
adc
add
sbb
sahf
mov
add
ret
out
dec
fsubs
clc
jno
add
jnp
jl
mov
int
clc
fmull
xor
add
fcmovbe
pop
popa
add
mov
mov
clc
scas
dec
xchg
pop
mov
or
test
xor
clc
movsl
clc
dec
and
add
pop
int
stos
cmp
mov
cmc
jg
add
add
xchg
dec
mov
inc
add
ret
clc
loopne
or
inc
add
cltd
lret
into
jle
add
bound
add
add
clc
test
or
push
mov
add
lods
daa
clc
hlt
push
add
or
aaa
pop
pop
push
add
mov
add
clc
mov
in
shll
clc
test
xabort
or
cltd
rcrb
xabort
iret
mov
add
movsl
clc
push
mov
clc
daa
clc
push
in
bound
add
in
das
sub
inc
add
cmp
add
loope
bound
add
add
outsl
sbb
clc
aaa
xlat
pushf
xor
in
fmull
push
jns
sbb
mov
add
cmp
cmp
test
sti
mov
js
xor
jp
add
mov
ds
outsl
lret
jne
add
clc
cmc
repnz
add
or
clc
mov
aaa
pop
call
dec
cmp
pop
sar
mov
iret
push
clc
mov
inc
clc
idivl
leave
clc
mov
clc
cmp
jb
add
add
add
add
cs
je
aaa
dec
push
dec
js
es
pop
scas
js,pt
loope
mov
add
dec
mov
cmp
xchg
xabort
push
add
add
add
mov
int
mov
xabort
clc
sbb
in
ret
clc
das
sti
data16
and
add
add
add
push
add
adc
clc
push
add
sbb
arpl
add
inc
add
mov
clc
data16
add
add
loop
ss
add
mov
clc
addr16
inc
clc
inc
clc
adc
add
xor
add
inc
clc
pop
push
lock
push
add
dec
push
cmp
daa
clc
out
inc
add
fwait
pop
clc
cmp
push
add
jno
add
or
add
out
sub
mov
mov
stos
ret
sub
fs
scas
dec
jle
pop
cmp
clc
pop
pop
sub
dec
jecxz
mov
xor
add
add
xchg
add
add
sub
test
push
lret
inc
add
mov
jae
add
add
nop
out
jno
add
clc
mov
cmp
cmpsl
clc
mov
add
ficomps
pop
sar
shrl
call
mov
repnz
das
loopne
jns
dec
insb
loopne
xchg
scas
adc
add
gs
imul
or
add
into
cmp
or
clc
jnp
cld
jae
add
cli
data16
out
pop
sub
lret
and
add
add
add
jbe
out
sbb
ja
test
xchg
add
add
fiadds
add
clc
cltd
sub
pop
clc
xchg
imul
clc
loopne
aas
into
push
test
sub
xchg
xchg
gs
pop
dec
mov
pop
sub
stos
decl
xchg
ret
clc
lcall
mov
rcll
add
add
xor
add
xabort
pop
stc
jp
aam
rorb
add
aam
clc
lods
jae
add
add
loop
sub
or
enter
add
repz
add
add
clc
mov
fimuls
sbb
clc
data16
loop
sbb
clc
movsb
clc
xlat
add
mov
add
fcomps
add
js
pusha
add
fldl
add
pop
clc
into
inc
add
mov
shlb
iret
inc
clc
sub
ret
and
add
xchg
sbb
add
add
out
and
in
push
daa
clc
outsl
xchg
pop
rclb
dec
fcmove
movsl
clc
std
dec
lock
fs
mov
test
add
mov
mov
data16
jp
pop
jne
mov
jecxz
lret
lret
pusha
add
jl
clc
cld
jno
add
clc
repz
add
and
add
push
add
das
mov
testl
xor
add
not
mov
aaa
xabort
jl
sbb
add
ds
xchg
mov
mov
pop
lcall
xor
add
loope
and
and
add
xchg
push
in
dec
inc
add
xabort
clc
fistpll
add
add
dec
xor
add
in
fucom
clc
cmp
addr16
aas
pop
sar
pop
call
pop
clc
ss
add
xor
sbb
add
in
add
add
clc
es
sub
popf
aaa
push
add
add
xor
add
lcall
pop
cld
inc
clc
aad
or
in
fildl
add
fld1
add
push
scas
sar
and
add
push
mov
cmp
loop
fwait
loop
hlt
xrelease
add
jo
add
jns
add
sub
xchg
inc
add
dec
aam
clc
jno
add
cmp
pop
scas
je
add
outsl
dec
dec
dec
xor
clc
push
aam
fbld
xbegin
jp
jmp
or
icebp
cmp
insl
mov
mov
push
mov
mov
xchg
inc
add
sbb
add
pop
mov
sbb
xor
add
mov
sbb
xchg
sbb
stos
jae
add
add
out
pop
and
add
and
pushf
inc
add
sbb
cmp
cmpsb
clc
mov
clc
sub
mov
cmp
inc
add
jnp
test
imul
pushf
adc
add
clc
popf
jbe
pop
cmc
dec
inc
clc
popf
pusha
add
xchg
sbb
int3
adc
push
add
hlt
mov
clc
test
jo
add
clc
xor
adc
add
int
xor
add
add
adc
xor
mov
ret
clc
inc
add
push
rep
xor
add
clc
fstl
add
sbb
mov
es
jnp
add
mov
clc
pusha
add
sar
sub
clc
cmp
add
add
add
shlb
popf
icebp
inc
add
jbe
add
enter
clc
imul
stos
jns
mov
jae
add
add
test
jb
add
adc
add
add
inc
clc
lods
int3
dec
loop
adc
add
clc
mov
or
add
add
add
loopne
outsb
cmp
clc
popa
add
dec
push
pushf
dec
sbb
xlat
int3
es
pop
sbb
dec
adc
inc
clc
clc
dec
lods
push
in
mov
clc
cltd
cmp
je
and
add
gs
test
xor
add
push
xchg
data16
adc
add
inc
add
mov
push
add
vmulps
clc
mov
fisttpll
add
outsb
loopne
inc
add
push
add
mov
movsl
clc
push
add
xchg
nop
pushf
mov
add
cmp
cmp
xchg
in
xor
add
mov
or
clc
hlt
add
add
cltd
mov
push
add
mov
pop
jmp
add
mov
dec
clc
xchg
insb
lret
cwtl
loop
sar
iret
push
das
pop
sbb
add
addr16
pop
sar
fwait
cltd
out
fs
mov
add
fiadds
clc
push
add
fidivs
add
clc
in
mov
imul
add
lods
pop
cmc
ljmp
jo
add
add
clc
into
pop
test
clc
in
ds
mov
leave
pop
mov
jecxz
js
clc
iret
pop
push
add
movsb
clc
jns
popf
inc
add
clc
mov
in
outsl
adc
add
jmp
clc
fsubrl
cmp
mov
sub
add
add
add
add
add
outsb
cli
xor
xbegin
xor
add
bound
add
pop
fcmovnbe
xchg
repnz
add
fs
add
add
mov
clc
cmp
loope
icebp
fisttps
cld
xor
pop
mov
add
pop
inc
clc
sub
mov
int
in
jns
lret
clc
inc
add
mov
and
add
add
add
add
mov
add
cmp
clc
cmp
shll
arpl
add
xchg
pop
xchg
mov
add
sub
hlt
or
cmc
inc
add
push
push
stc
push
pusha
add
hlt
popf
jae
add
add
push
or
xchg
mov
push
clc
add
add
cmp
add
add
leave
xabort
adc
int3
arpl
add
sahf
mov
jne
ja
jl
add
movsl
clc
adc
and
add
xchg
stc
aam
lahf
jne
test
fwait
adc
add
add
inc
clc
movsb
clc
test
pop
aas
pop
fcmovnu
lods
cmp
add
xchg
or
jne
repz
add
imul
add
aad
push
incb
test
jg
mov
pop
pushf
aam
sub
add
pusha
add
xbegin
pop
clc
xabort
mov
clc
mov
into
inc
add
data16
mov
clc
adc
add
aaa
cwtl
pop
test
add
mov
mov
movsl
clc
inc
clc
shld
clc
sub
dec
outsl
inc
add
dec
mov
pop
clc
xchg
inc
add
inc
clc
leave
jnp
cmc
call
add
pop
jne
push
repnz
adc
movsl
clc
or
adc
add
dec
jp
arpl
add
jl
add
adc
add
add
clc
mov
clc
test
xchg
outsb
data16
aam
add
cmp
repnz
test
out
and
add
js
add
mov
jmp
lods
jno
add
clc
mov
data16
dec
xchg
mov
jae
add
xchg
leave
cmp
add
pop
lods
mov
xor
add
fildl
push
clc
je
mov
cmp
mov
hlt
pusha
add
lods
inc
clc
pop
lea
testl
sub
clc
inc
clc
add
clc
cmp
xchg
push
ficomps
mov
jnp
movsl
clc
bound
add
clc
popf
mov
cmp
pop
cltd
hlt
cmp
pop
test
jg
add
insb
fucom
clc
mov
jp
pop
clc
xchg
out
lods
inc
clc
cmp
clc
xchg
cmp
jecxz
xor
add
dec
test
pop
cmp
dec
out
test
stos
aad
clc
pushf
lods
push
outsb
dec
outsl
mov
fucom
clc
jnp
add
pop
ds
stos
xchg
xbegin
clc
in
lret
mov
add
add
bound
add
add
xchg
lret
add
add
addr16
imul
cmpsb
clc
sbb
mov
xor
add
test
dec
es
cmp
xor
add
add
popa
add
pop
add
add
outsl
stc
test
cwtl
stos
jae
add
clc
loopne
outsl
push
dec
or
add
add
cmp
clc
sub
in
ds
jno
add
xor
outsb
pushf
icebp
leave
mov
add
add
add
add
add
pop
fwait
sbb
outsl
jbe
push
ret
mov
enter
cmp
mulps
dec
mov
xchg
fstl
fwait
push
ret
clc
push
add
outsl
repz
clc
cmp
clc
fimuls
add
cs
out
xor
add
add
clc
push
add
sbb
ret
add
daa
clc
push
clc
loop
hlt
jp
adc
add
fldl
aad
push
add
js
sti
adc
cmp
add
inc
add
jnp
cmp
dec
dec
cmc
cmp
mov
clc
fistpll
clc
test
pop
clc
sbb
xchg
ficoml
clc
dec
adc
clc
and
add
cmp
or
and
add
dec
pusha
add
lahf
insl
mov
test
sbb
fs
in
xor
add
and
add
mov
xchg
sub
add
shll
add
cld
mov
add
xor
add
push
int3
cmp
add
dec
mov
jge
pop
outsl
gs
cmpsb
clc
out
cltd
int3
fsubl
or
add
add
fs
dec
scas
aaa
shrb
add
loope
clc
bnd
xor
add
add
adc
imul
clc
mov
dec
pop
jne
push
dec
jno
add
add
add
movsl
clc
lock
jg
jg
add
jbe
test
test
inc
clc
ficompl
clc
inc
add
xabort
cs
add
lahf
gs
mov
push
mov
cs
clc
sub
add
pop
bound
add
clc
cmp
clc
test
scas
and
lods
out
stc
pop
sahf
repnz
jbe
clc
fsubs
cmp
pusha
add
dec
adc
add
fbld
add
add
jecxz
in
lods
icebp
add
add
add
cmp
clc
push
jp
add
test
clc
add
add
add
xchg
rolb
push
push
jmp
clc
jg
shrb
push
cmp
cmp
mov
add
clc
or
aas
call
xor
add
jae
add
clc
cmpsl
clc
dec
hlt
add
add
mov
lahf
jle
mov
mov
xor
add
add
clc
gs
push
clc
das
ret
and
add
lcall
repz
out
xor
add
add
stos
jecxz
mov
clc
sub
or
lret
pop
clc
imul
fistps
ds
clc
cwtl
xchg
mov
add
and
add
xchg
test
cmpsb
clc
ljmp
xor
add
loope
cmpsl
clc
inc
add
add
add
clc
jns
clc
scas
aam
shlb
add
dec
lods
cmp
fisubrl
jge
add
add
out
sub
xabort
pop
sbb
xchg
xchg
cld
popf
adc
aam
clc
dec
cmpsb
clc
and
add
imul
mov
mov
add
scas
ja,pn
push
push
ss
add
xchg
adc
add
add
and
add
mov
lcall
outsb
sbb
jb
add
add
clc
aas
test
cmc
push
mov
add
sbb
clc
dec
cmp
jecxz
fstps
clc
scas
into
js
add
lahf
cmpsl
clc
cld
sbb
xchg
sub
add
push
adc
dec
jae
add
clc
xor
add
push
clc
xor
add
fiadds
clc
fadd
clc
lcall
mov
nop
jmp
lock
sahf
add
add
nop
jmp
adc
jl
add
add
cltd
add
jbe
adc
add
xchg
mov
sbb
nop
jmp
cmp
cs
clc
loope
ljmp
push
jmp
mov
adc
lds
aas
test
adc
add
pslld
add
cmp
mov
add
push
mov
add
fimuls
imul
inc
clc
jle
dec
nop
jmp
ja
or
add
icebp
movsl
mov
clc
in
jns
cmp
out
push
loope
fdivrl
add
jns
mov
xchg
fsubrs
testl
out
cmc
aam
cmpsl
clc
sbb
add
add
or
dec
pop
fidivs
add
add
push
fwait
addr16
push
add
or
xchg
in
test
int
cmp
mov
pusha
add
xor
clc
js
icebp
adc
add
cs
dec
pop
sar
inc
clc
mov
mov
xchg
ret
cmp
pop
sbb
dec
cmp
add
mov
lods
decl
test
pop
add
nop
jmp
sbb
fstpl
xchg
incl
je
sub
jbe
inc
add
inc
clc
pop
mov
jl
stos
cmp
insl
pop
mov
clc
mov
test
jp
mov
nop
jmp
lds
adc
add
test
mov
sub
aad
cli
adc
add
inc
add
pushf
imulb
mov
in
inc
add
cmp
clc
iret
out
mov
outsb
in
dec
shll
cmc
add
add
add
cs
push
add
fs
and
sbb
nop
jmp
add
add
cmp
int
dec
cltd
rcrb
clc
fs
mov
jmp
or
test
add
push
xchg
jnp
push
add
adc
lret
pop
movsl
clc
aas
addr16
popf
cmp
ja
inc
add
push
add
ficoms
add
dec
data16
fwait
push
add
test
rcll
add
fdivrl
jmp
push
add
fsubl
push
and
mov
add
idivl
add
xchg
pop
xchg
push
addr16
lock
insl
push
jbe
clc
mov
in
xabort
fwait
sub
add
dec
scas
inc
add
xbegin
or
inc
add
cmpsl
clc
cmp
in
inc
clc
xchg
mov
sub
clc
shrl
mov
mov
clc
insl
clc
aas
aaa
fwait
daa
clc
xchg
cmp
jmp
popa
aaa
cld
flds
inc
add
test
xbegin
movsl
clc
lock
add
popa
add
mov
xor
add
clc
xchg
cmp
das
sub
xchg
xchg
mov
clc
std
sti
test
sub
std
or
or
clc
push
movzwl
nop
jmp
add
add
push
mov
xchg
ret
bound
jb
add
push
mov
xchg
ret
lds
mov
mov
add
or
add
fwait
xadd
mov
add
aad
or
clc
inc
add
xchg
imul
jmp
popf
je
add
repz
ret
clc
js
inc
add
es
fdivs
xchg
mov
mov
xchg
aaa
sti
and
add
mov
add
inc
add
mov
jbe
push
mov
xchg
ret
out
icebp
jp
cmp
clc
lret
add
loop
push
mov
xchg
ret
jb,pn
sbb
add
mov
addb
ret
ja
sahf
or
add
mov
add
fcoml
add
push
add
sti
jo
add
add
add
call
add
adc
add
push
nop
jmp
gs
movsb
add
dec
sbb
push
add
bound
add
clc
bound
add
add
clc
daa
clc
outsb
xlat
lea
add
jnp
xchg
scas
mov
nop
jmp
fstpl
dec
in
mov
add
nop
jmp
xor
sub
or
xor
add
add
leave
add
scas
clc
std
inc
add
jae
add
adc
add
pop
lret
rolb
fnstsw
add
outsl
sbb
push
add
dec
movsb
clc
push
lock
loop
xchg
mov
ja
das
adc
add
add
jmp
add
add
ljmp
test
data16
das
jb
add
cmp
sti
mov
mov
xchg
ret
add
nop
inc
add
sub
add
add
add
xor
add
rcrb
add
push
sar
mov
nop
jmp
lcall
xor
push
cmp
adc
add
add
jle
nop
mov
ljmp
cwtl
jns
or
mov
sar
clc
mov
jmp
or
adc
clc
adc
jb
add
clc
and
add
add
incb
mov
clc
inc
clc
pop
jl
lea
outsl
and
mov
clc
test
add
lret
test
jb
add
imul
sub
add
enter
pop
clc
sbb
out
arpl
add
sahf
ja
fnsave
js
clc
dec
xchg
or
inc
add
xor
add
add
jmp
xchg
ret
clc
in
inc
clc
test
clc
lcall
mov
xchg
ret
popa
and
xor
add
cmp
in
push
add
add
mov
ja
popa
pop
xchg
in
lods
jecxz
sti
mov
mov
clc
out
imul
add
mov
clc
cmp
add
add
sbb
inc
clc
sub
adc
add
pop
cmp
shlb
es
repz
sub
add
add
ss
jmp
add
jnp
js
loopne
inc
clc
lods
sar
xchg
and
add
xor
add
clc
xchg
clc
xchg
mov
adc
add
ficoml
add
add
aaa
jg
add
inc
add
adc
icebp
dec
push
pop
or
out
mov
adc
clc
inc
clc
mov
lret
clc
cmp
push
add
pop
bound
add
outsl
jno
add
add
insb
sbb
fstpl
add
push
add
repnz
clc
out
es
jnp
clc
cmc
adc
add
or
faddl
shr
lcall
ret
clc
mov
clc
pop
das
jae
add
cwtl
mov
sar
je
nop
jmp
cs
xchg
sub
clc
sub
jl
clc
push
add
testb
clc
cmp
add
add
nop
jmp
gs
fdivrs
or
add
push
add
scas
or
movsb
clc
mov
and
add
add
add
add
insb
sti
std
or
mov
scas
push
mov
nop
jmp
mov
mov
jae
add
and
add
add
inc
add
xlat
add
fisttps
scas
xchg
fdivrl
xchg
xchg
xchg
cltd
jns
movsl
clc
mov
add
lea
mov
add
nop
jmp
xchg
jl
dec
cmpsl
clc
xbegin
pop
mov
xchg
inc
add
popa
add
push
adc
add
xchg
xchg
int3
xchg
adc
add
and
cmpsl
clc
add
add
dec
mov
add
rcrb
idivb
jl
jno
add
jle
add
push
adc
add
lret
adc
rcr
sbb
add
clc
iret
ret
jae
add
push
xor
add
mov
jo
add
add
arpl
add
cwtl
inc
clc
lahf
es
cmp
add
clc
mov
add
push
pop
nop
jmp
add
test
lss
mov
inc
add
push
mov
xor
add
out
xor
add
movsb
iret
inc
add
out
add
add
clc
scas
shl
sbb
clc
or
push
jnp
add
mov
clc
out
mov
xchg
aam
xchg
nop
faddp
clc
push
sbb
jmp
ja
leave
je
test
push
mov
sti
pop
clc
imul
add
jb
add
adc
add
stos
inc
add
icebp
je
aaa
cmc
jbe
insb
sbb
mov
xchg
ret
fst
adc
jnp
mov
nop
jmp
add
or
ficompl
add
pop
fbld
test
mov
clc
jno
add
sub
inc
clc
popf
call
fs
mov
push
cs
sti
mov
insb
jae
add
arpl
add
lret
mov
jmp
aaa
add
add
sub
add
daa
clc
cmc
fs
fs
gs
hlt
fcoml
add
mov
jnp
and
leave
add
push
push
add
shl
jne
cmc
imul
add
xabort
repz
clc
daa
clc
cld
add
add
clc
test
dec
out
ret
clc
jmp
and
xor
add
cmc
dec
sbb
repz
add
add
adc
add
and
add
add
sar
add
popa
add
lret
icebp
push
add
jno
add
aad
push
inc
or
add
gs
enter
arpl
add
add
add
adc
add
add
clc
repz
xchg
movsl
clc
fdiv
jno
add
icebp
adc
clc
daa
clc
movsl
clc
loopne
cmp
jno
add
stos
pop
mov
popf
call
sahf
sub
add
popl
aas
ds
and
add
mov
jb
add
fadds
add
jp
push
jl
add
xor
sub
xor
add
imul
clc
xor
clc
adc
add
pushf
sahf
lret
ret
clc
cmp
aaa
cmpsl
clc
cmp
and
adc
add
mov
clc
sbb
int3
add
add
clc
test
or
add
jl
mov
clc
mov
clc
movsl
clc
lret
mov
add
add
add
add
std
push
call
clc
sbb
xchg
push
inc
add
sar
clc
sbb
clc
xor
add
pop
mov
or
cmpsl
clc
cld
imul
gs
je
cld
rcrl
and
cmp
clc
imul
sbb
leave
das
push
xabort
push
mov
mov
mov
flds
add
movsl
clc
inc
add
in
sub
popa
add
int
inc
clc
or
add
aad
add
clc
ss
test
mov
clc
xchg
jg
stos
sbb
xchg
adc
lcall
add
lret
lcall
add
inc
add
jecxz
cmc
movsb
clc
mov
stos
cmp
popa
add
ja
clc
mov
clc
int
and
add
jg
fisubs
clc
pusha
add
nop
test
fs
and
jae
add
clc
add
add
jmp
inc
icebp
add
icebp
bound
sub
clc
inc
clc
or
sub
push
clc
jbe
clc
jno
add
mov
add
or
clc
adc
add
and
cmp
or
push
add
jno
add
inc
add
out
cmpsb
clc
adc
add
add
clc
xchg
xchg
sar
fidivl
clc
dec
pop
cld
push
lahf
xchg
mov
xor
add
outsb
push
flds
xlat
data16
mov
xor
add
add
dec
jbe
mov
clc
out
cmpsb
clc
rorb
stos
and
add
clc
int
pop
out
fldt
xor
add
xchg
clc
sbb
jl
jge
rcr
in
adc
add
cmp
cli
arpl
add
add
int
outsb
dec
inc
add
inc
clc
loope
pop
sar
xchg
jb
add
cld
ss
clc
dec
out
fidivrs
add
add
sar
clc
test
fwait
scas
adc
add
add
daa
clc
rcrb
xchg
jecxz
jle
sbb
mov
xchg
ret
or
sub
push
add
add
add
add
cwtl
sub
stos
xchg
cmp
clc
mov
mov
fs
aaa
loope
pop
sub
clc
mov
scas
test
adc
add
jno
add
out
jns
cmp
out
xor
add
clc
mov
es
es
sti
add
add
aaa
cmc
and
add
iret
mov
int
cmp
loope,pn
mov
clc
adc
add
pushf
arpl
add
fucomi
cmp
clc
addr16
mov
add
arpl
add
or
clc
mov
clc
cmp
jb
add
or
xor
xchg
js
add
imul
jge
clc
inc
add
pop
and
add
repnz
xlat
loope
sbb
jo
add
mov
clc
and
add
adc
add
inc
clc
iret
inc
clc
adc
add
lcall
pop
jns
cmc
icebp
daa
clc
fadds
add
cld
xor
add
pushf
jae
add
add
call
jmp
cs
ja
add
incb
clc
incb
adc
add
add
test
cmp
testl
gs
std
pusha
add
or
call
nop
jmp
mov
ja
pop
jecxz
jle
clc
jae
add
clc
bound
add
add
add
ret
clc
out
movsl
clc
sahf
repz
stc
divps
inc
add
in
dec
or
es
aad
add
pop
add
add
mov
add
mov
loop
or
mov
inc
add
rorl
out
test
leave
ret
jle
clc
pop
xor
add
ret
clc
xchg
in
pop
mov
add
clc
mov
cmp
add
xor
xor
mov
enter
into
xchg
mov
lea
or
bound
add
add
lret
ficoml
dec
dec
or
cmp
xbegin
sar
xchg
mov
popa
add
add
add
loope
pop
jmp
clc
cmp
cmpsb
clc
fldl
jno
add
cmpsb
clc
fst
gs
scas
lea
divb
lret
add
clc
aad
mov
in
sub
mov
add
pop
loopne
pop
clc
stos
mov
pop
ss
mov
out
scas
enter
add
jmp
ja,pn
xchg
adc
add
nop
jmp
leave
add
lds
clc
notb
add
sub
jmp
clc
adc
cli
outsl
out
lea
add
jg
add
clc
sub
inc
add
jbe
leave
pop
jb
add
clc
mov
inc
clc
in
pop
or
cmpsl
clc
jae
add
stc
cmp
nop
jmp
test
add
add
sub
sbb
xlat
jmp
mov
add
pop
pop
inc
add
and
add
lea
sub
jbe
clc
sbb
add
loope
push
mov
test
nop
jmp
leave
movsl
sub
mov
xbegin
sub
clc
xor
add
push
in
outsb
pop
sub
ja
add
or
je
mov
clc
loop
mov
js
dec
and
add
adc
add
rcll
in
inc
add
shll
add
adc
add
push
mov
xchg
ret
lock
xchg
mov
adc
add
add
pop
and
sbb
sub
inc
clc
xchg
cli
pop
clc
popf
aam
clc
xchg
aaa
lcall
int
and
add
pushf
loopne
pusha
add
mov
add
repz
add
clc
out
mov
and
add
add
clc
sub
add
add
mov
add
add
mov
mov
add
xchg
movsl
clc
add
cli
jae
add
xchg
push
incl
jmp
icebp
frstor
js
movsb
clc
dec
push
dec
in
xchg
es
std
inc
clc
dec
xbegin
clc
das
xchg
cli
mov
mov
cmp
ficompl
push
nop
jmp
ja
mov
adc
jp
xchg
nop
jmp
inc
xor
jb
lds
adc
add
cmp
add
add
push
clc
mov
sub
add
add
cmp
in
stos
jecxz
pop
stos
testl
push
lea
nop
jmp
popa
jb,pn
popa
adc
add
adc
inc
add
xchg
out
xor
add
cmp
add
sub
std
ds
int3
cmp
sub
stc
pop
sub
fnsave
ret
clc
mov
mov
popf
movsl
clc
inc
clc
aas
mov
cmp
add
add
xchg
add
sar
add
sub
and
add
movsb
clc
mov
mov
arpl
add
and
imul
movsb
bound
push
mov
nop
jmp
bound
jnp
add
clc
sub
pushf
stos
mov
or
pushf
loope
clc
leave
xabort
clc
ret
clc
push
add
sub
shrl
add
add
adc
add
jns
scas
xlat
ljmp
add
jbe
clc
ret
jge
sub
sub
clc
negl
divl
add
cmp
add
add
add
in
inc
add
jge
sbb
cli
add
clc
inc
add
push
int
add
in
data16
xchg
clc
loope
add
cmp
pusha
add
cmp
xchg
push
mov
xchg
ret
cld
jnp
ja
clc
insl
and
cltd
int
enter
loopne
pop
inc
add
cli
mov
mov
add
push
mov
push
mov
xchg
ret
and
outsb
rclb
cmp
clc
xor
add
int3
sbb
push
xchg
jl
inc
clc
stos
adc
add
or
add
movsb
add
add
pop
push
add
push
leave
daa
clc
insl
loop
add
add
cwtl
cld
das
and
scas
movsl
clc
mov
add
rcll
add
jp
and
sbb
pushf
jg
add
mov
add
add
lds
aaa
out
bound
add
clc
cmp
loopne
fs
scas
push
xabort
and
cmp
ja
lods
dec
lods
inc
add
neg
je
clc
test
pop
clc
adc
clc
jns
fiaddl
clc
pop
jge
add
mov
xor
add
xchg
sahf
mov
xor
scas
and
add
add
int
pop
cmp
lahf
ljmp
rcrl
adc
add
add
dec
hlt
lcall
mov
hlt
imul
nop
inc
add
add
ret
adc
lds
add
repz
add
add
pop
inc
clc
mov
mov
jbe
add
add
clc
pop
clc
mov
vcvtps2pd
add
gs
mov
add
mov
jmp
gs
cltd
xor
add
pusha
add
inc
add
lcall
cmc
movsb
clc
inc
clc
hlt
pop
stc
xor
in
sub
cmp
mov
sar
sub
clc
jbe
clc
and
add
and
add
pop
clc
sar
xchg
pop
iret
das
cmp
add
loopne
pop
or
push
xchg
nop
jmp
inc
lock
cmp
enter
push
add
testl
gs
pop
mov
and
xchg
dec
xchg
fadd
clc
xor
add
clc
xchg
cli
adc
dec
xbegin
cmpsb
clc
sub
xchg
fisttps
mov
sahf
out
shlb
clc
pop
loope
xchg
lret
sbb
mov
stos
fsubl
add
js
add
pop
dec
lret
clc
or
test
jmp
jb
jnp
ss
mov
nop
jmp
movsl
out
mov
je
cld
add
add
xor
mov
add
pusha
add
sbb
jl
jns
mov
clc
sub
xor
mov
clc
jne
clc
dec
push
add
mov
and
add
popa
add
inc
add
or
out
dec
mov
clc
mov
add
push
add
lea
add
add
pop
pop
fldenv
sarl
add
add
add
movsb
clc
inc
clc
mov
clc
test
into
lock
add
sub
clc
jecxz
aaa
adc
add
push
add
lea
xor
add
pusha
add
bnd
add
adc
add
add
add
xchg
inc
clc
push
add
lea
pushl
push
mov
xchg
ret
add
in
and
add
clc
ret
popf
pop
clc
leave
sub
fcmovnbe
xchg
lods
dec
in
arpl
add
add
or
cwtl
sti
pusha
add
cmp
lret
add
dec
nop
pop
push
or
clc
inc
clc
je
and
add
inc
add
fisubs
push
mov
mov
je
arpl
add
add
fsubrs
sub
push
push
mov
xchg
ret
leave
adc
fildll
push
into
mov
sbb
inc
add
clc
mov
sub
add
add
jb
add
clc
sub
mov
dec
add
add
sbb
add
xchg
mov
clc
pop
clc
addr16
dec
fs
pusha
add
sub
add
xor
add
sub
scas
xchg
ds
jl
xbegin
jb
add
clc
xor
add
clc
sbb
add
and
add
adc
add
add
add
cmp
clc
clc
outsl
xor
add
mov
pop
clc
mov
jl
jle
mov
pop
fsts
add
fldt
repz
jecxz
mov
add
decl
mov
adc
jmp
add
jnp
cli
and
add
gs
aad
jg
mov
loopne
inc
clc
hlt
imul
mov
jge
fwait
insb
add
add
outsl
adc
add
stos
idivb
or
add
mov
push
dec
out
push
add
xchg
dec
mov
clc
push
xchg
pop
fs
xchg
addr16
mov
add
add
ficomps
jns
add
cli
xor
add
hlt
fadds
add
jecxz
lods
mov
sbb
dec
rcrl
add
cmp
test
pop
sahf
dec
imul
add
mov
push
add
sbb
sub
jne
inc
clc
popa
add
dec
ret
clc
mov
cmpsl
clc
repnz
dec
xor
add
inc
add
adc
add
add
xchg
jno
add
jae
add
clc
aas
jae
add
clc
push
neg
jmp
in
push
add
test
push
gs
sub
call
out
shrb
add
add
add
jge
int3
jmp
jnp
add
popf
scas
dec
cmpsb
clc
lods
or
cmc
inc
clc
bound
add
add
add
rol
clc
ds
add
dec
pop
mov
clc
adc
fnstsw
add
lahf
xor
add
testb
add
clc
push
add
push
sbb
nop
jmp
movsl
mov
add
shrl
mov
clc
xchg
out
addr16
clc
cmpsl
clc
jne
pop
popf
sar
push
xabort
xchg
hlt
addr16
xabort
clc
dec
lock
add
add
inc
add
push
rep
nop
jmp
insl
add
cmpsl
clc
jl
mov
pop
popf
into
pop
aaa
lcall
clc
xor
std
add
add
clc
lret
push
add
push
mov
dec
mov
mov
clc
xor
mov
add
ljmp
add
cwtl
bound
add
stos
mov
insb
stc
out
and
ss
clc
jg
jle
push
mov
mov
clc
dec
test
int
in
rcll
xchg
mov
clc
xchg
sbb
sbb
mov
xchg
ret
cld
mov
add
add
sub
or
jmp
sbb
enter
add
decl
push
mov
leave
shll
lock
cmp
add
loop
cmp
clc
lods
mov
add
add
pop
mov
and
leave
out
ja
ja
add
int3
icebp
inc
clc
jo
add
push
and
add
add
cmp
in
mov
mov
js
adc
cmp
xchg
adc
adc
add
test
loopne
mov
push
add
pop
int
je
xchg
cmp
adc
clc
bound
add
das
inc
add
mov
xchg
ud2
adc
add
repz
insl
dec
js
mov
mov
add
add
call
add
add
stc
xor
gs
stos
in
push
add
popf
push
and
gs
mov
mov
nop
jmp
add
add
lcall
fists
add
clc
int3
bound
add
clc
loope
dec
sub
clc
outsl
inc
clc
or
xchg
xor
add
mov
add
inc
clc
or
clc
and
add
clc
pop
xchg
out
mov
in
decl
or
adc
mov
add
aam
clc
pop
clc
test
cmpsl
clc
cmpsb
clc
sub
nop
jmp
mov
adc
adc
mov
mov
lods
cs
xor
add
add
shll
add
cs
mov
add
add
leave
push
add
adc
add
adc
add
jg
add
add
mov
nop
jmp
add
movsb
aaa
bound
xchg
in
repnz
clc
mov
pop
sbb
add
xchg
out
and
sub
imul
add
add
cmp
clc
and
fidivrs
add
leave
jg
add
cwtl
push
pop
push
mov
xchg
ret
clc
out
cs
add
repz
add
add
adc
add
clc
xchg
test
clc
cmp
jecxz
es
mov
clc
xor
clc
sahf
xchg
pop
in
sbb
xchg
cmp
pushf
jl
clc
ljmp
jno
add
jmp
nop
jmp
test
sub
inc
add
mov
clc
jge
add
add
add
rorb
cld
jb
add
mov
mov
jmp
add
test
add
test
rcll
clc
pop
pop
clc
adc
add
jnp
adc
data16
jnp
clc
mov
add
add
add
add
add
xor
pop
into
test
gs
fmul
mov
clc
mov
cmpsl
clc
mov
popf
int3
repz
int
clc
sbb
mov
clc
loope
iret
pop
push
add
add
add
data16
data16
adc
dec
clc
int
call
sar
shll
add
roll
dec
clc
imul
clc
fbld
insl
fdivs
pop
mov
enter
nop
jmp
add
clc
cmp
clc
into
xor
add
push
push
mov
xchg
ret
aaa
movsl
add
testb
repz
add
or
mov
add
in
pop
jns
clc
mov
ja
push
add
mov
sbb
flds
add
sub
mov
mov
add
add
add
mov
pop
clc
in
pop
cmp
clc
bound
add
jmp
add
jb
sbb
in
mov
xchg
push
inc
add
add
into
loopne
iret
insb
mov
add
add
pop
push
add
adc
add
sbb
clc
stos
mov
inc
clc
lods
in
push
cmp
clc
xchg
ret
sub
sbb
or
add
or
dec
adc
add
cmpsl
clc
scas
in
dec
push
outsl
rolb
add
and
add
ljmp
dec
push
clc
add
add
loope
push
loope
push
add
push
mov
xchg
ret
lock
cmp
clc
lods
enter
sar
mov
add
push
add
sbb
add
mov
stc
xor
add
add
rclb
pop
clc
loop
es
inc
add
aam
clc
inc
add
or
sub
lcall
add
add
add
out
jo
add
mov
pushf
scas
mov
cmp
cs
add
add
add
out
mov
repz
out
cmp
rcrb
js
mov
add
into
test
and
pop
clc
add
add
add
dec
pop
sbb
movsb
clc
mov
insb
add
add
add
ja
sbb
out
ret
dec
push
add
nop
jmp
or
ja
or
sbb
pop
xor
add
cmc
jmp
add
insl
adc
add
popa
add
inc
clc
mov
add
push
add
adc
add
or
jl
push
nop
jmp
add
jnp
cmc
jmp
sbb
push
add
rcrb
and
nop
jmp
or
adc
movsl
lock
filds
add
sub
dec
and
imul
and
and
outsl
pop
lcall
adc
add
nop
jmp
mov
mov
add
and
add
lock
add
mov
add
pop
clc
ja
add
jle
sahf
mov
add
adc
add
add
sub
push
sarb
add
add
lds
mov
ret
clc
cs
pop
xbegin
jmp
sahf
mov
add
je
or
inc
clc
jnp
jne
nop
jmp
je
add
add
cld
shrl
nop
jmp
cmp
fnstsw
repz
pop
clc
xchg
icebp
pop
sub
imul
clc
movsl
clc
pushf
cmp
add
add
add
add
pop
jle
out
enter
pop
fbstp
cld
mov
pop
push
add
imul
mov
icebp
jmp
clc
mov
xbegin
add
ret
clc
inc
add
mov
clc
xbegin
adc
add
add
jae
add
jge
clc
cmp
mov
cmp
add
fadds
add
inc
clc
dec
fdivrs
inc
add
and
add
gs
pop
pop
mov
cld
ds
or
clc
xchg
es
lock
clc
bound
add
add
xchg
sbb
add
loope
jge
xabort
insl
sub
add
adc
add
xbegin
add
nop
jmp
add
cs
cwtl
cmp
jb
add
ret
mov
jnp,pn
ja,pn
popa
ja
test
add
xor
in
incb
add
gs
mov
push
movzwl
nop
jmp
cwtl
mov
mov
lods
inc
add
std
cmp
clc
adc
add
add
cwtl
mov
push
stc
leave
sar
jp
clc
pop
jle
sub
push
clc
or
mov
add
jl
xchg
into
mov
adc
add
pop
jp
cld
sarl
sbb
mov
add
add
add
jnp
xor
add
ret
clc
fs
mov
clc
push
jne
clc
dec
and
add
ljmp
mov
or
cmp
cltd
fs
ja
outsb
cli
cmp
add
je
decl
test
jmp
jnp
je
test
jae
add
clc
inc
add
mov
scas
aaa
xor
add
ret
clc
and
out
inc
add
fiadds
sbb
pushf
push
inc
add
xchg
sbb
sbb
cmc
jb
add
add
cmp
add
pop
sub
scas
movsb
clc
ds
clc
data16
aaa
ret
imul
mov
push
add
mov
cmp
nop
jmp
lcall
mov
out
mov
cmp
add
mov
in
jge
fmuls
add
add
int
loop
dec
movsb
clc
adc
add
sbb
clc
js
clc
popf
fstps
notb
add
clc
xbegin
dec
test
clc
push
add
inc
add
cld
sbb
add
arpl
add
xor
dec
imull
mov
std
push
clc
cmp
notb
add
add
ret
clc
ucomiss
xlat
leave
testl
add
cmp
clc
je
sar
clc
lcall
nop
jmp
icebp
cs
add
inc
add
loop
mov
sbb
jmp
cld
cld
adc
add
icebp
cld
adc
add
clc
gs
and
jae
add
cmp
clc
mov
ja
fsubp
clc
and
mov
clc
aas
popa
add
rolb
cmc
jmp
pop
cmpsl
clc
outsl
and
add
jmp
cwtl
mov
in
and
mov
cmpsl
clc
or
clc
jl
clc
enter
cwtl
and
add
clc
xchg
mov
add
add
xchg
cmp
mov
clc
repz
das
inc
clc
mov
clc
dec
xchg
lahf
in
xchg
roll
add
clc
push
add
inc
clc
jecxz
arpl
add
js
clc
xchg
lahf
enter
je
sbb
test
jmp
ja
fnsave
cmp
push
mov
add
clc
inc
add
sub
ret
clc
cmp
imul
add
mov
test
jbe
clc
leave
push
or
push
nop
jmp
js,pn
adc
adc
dec
xchg
push
sbb
movsb
clc
cmp
mov
xchg
ret
je
adc
dec
lock
xchg
enter
inc
clc
fcmovbe
pushf
xor
adc
add
cmp
daa
clc
jo
add
add
lock
push
dec
push
add
cwtl
dec
xchg
in
scas
mov
add
push
xbegin
xchg
xchg
sar
inc
nop
jmp
sahf
mov
enter
and
add
clc
or
cmp
stos
or
decl
inc
inc
add
cwtl
jb
add
fcomps
mov
jle
add
clc
mov
push
nop
jmp
enter
inc
add
cmp
jge
add
pop
jae
add
clc
aas
ret
clc
inc
clc
lcall
jecxz
sbb
add
add
incb
lcall
movsb
clc
cmpsb
clc
popf
fildl
add
cmp
add
xor
add
call
dec
sbb
jecxz
or
lock
add
push
add
sub
lahf
and
add
add
clc
hlt
aas
inc
add
shl
mov
clc
and
add
clc
xchg
cmp
inc
clc
leave
loop
add
push
lods
inc
clc
js
aad
es
outsb
repnz
add
jl
mov
nop
jmp
popa
add
icebp
sahf
cmp
dec
dec
pop
xor
add
push
lcall
inc
clc
aas
insl
xor
clc
rclb
add
add
add
add
or
sar
and
add
fildll
push
sub
aam
clc
adc
sar
clc
add
and
sub
and
add
add
in
sbb
mov
xchg
ret
adc
icebp
mov
stos
data16
cmp
clc
dec
and
add
clc
icebp
pop
fdivl
add
add
jns
mov
nop
xchg
mov
dec
aaa
or
stos
out
test
mov
movsb
clc
adc
add
loop
cmp
in
iret
fucomi
adc
add
dec
imul
jle
add
loopne
mov
xchg
xchg
xchg
js
ret
loope
jp
out
pop
jecxz
cmp
and
add
div
inc
add
leave
fwait
xabort
add
cltd
stc
incl
xchg
incl
ret
clc
cmp
clc
loope
clc
cli
xchg
daa
clc
enter
outsb
pop
dec
mov
add
or
clc
push
xchg
scas
cltd
sub
sbb
movsb
push
mov
xchg
ret
test
push
decl
nop
jmp
add
inc
cld
in
pop
popa
add
aam
ret
xchg
cmp
pop
adc
add
or
clc
dec
mov
add
pop
sbb
out
jmp
add
fcom
mov
push
pop
push
mov
xchg
ret
cs
mov
test
sbb
pop
clc
in
hlt
fwait
jmp
jbe
push
addr16
inc
add
decb
adc
add
add
out
jnp
sbb
popa
add
outsb
nop
lahf
shrl
xchg
icebp
sti
pop
pop
mov
imul
mov
nop
jmp
insl
mov
add
push
add
pop
xor
add
inc
clc
xchg
sbb
jl
clc
add
enter
add
push
add
nop
jmp
and
cld
or
cwtl
daa
clc
jne
clc
xchg
or
add
add
add
jecxz
jbe
or
movsl
clc
leave
mov
lock
add
add
fcom
or
sbb
jecxz
mov
ja
add
cmp
add
mov
das
mov
imulb
outsl
sub
clc
xchg
xor
testb
add
cmp
and
nop
jmp
fsts
clc
fwait
mov
mov
and
add
arpl
add
jmp
add
test
stc
push
add
stos
pop
jae
add
cmp
clc
mov
popf
or
lahf
pop
clc
fimull
movsl
clc
decl
mov
xchg
ret
and
add
ja
add
xor
divl
add
add
add
pop
jne
clc
xlat
sarb
mov
xchg
test
add
test
vmovlps
add
add
cmp
add
mov
add
mov
add
mov
clc
cmp
sti
clc
cmp
daa
clc
mov
je
add
push
dec
or
add
sahf
pop
gs
imul
xor
add
push
lahf
lret
add
push
inc
add
mov
rclb
mov
je
insl
clc
insb
push
cmp
clc
xchg
or
xlat
dec
cmp
scas
sar
clc
xor
add
fisttps
add
shl
clc
cmp
add
clc
inc
add
inc
clc
test
sub
insb
sbb
sub
nop
jmp
test
inc
add
lods
cli
and
add
outsb
test
cmp
add
sahf
fldt
or
cwtl
out
lcall
add
aaa
mov
mov
and
add
clc
cltd
push
add
push
xchg
movsb
clc
mov
add
push
add
mov
add
xchg
ljmp
jmp
add
or
mov
jmp
jge
or
outsb
xlat
fnstcw
test
fcomps
clc
pop
aaa
mov
mov
add
jl
clc
xchg
sbb
add
out
cld
ljmp
add
clc
fstpl
add
jnp
clc
mov
clc
aam
sbb
add
push
jne
nop
jmp
adc
shrl
jecxz
lock
clc
xor
dec
pop
pusha
add
adc
add
filds
add
mov
gs
jb
add
add
xchg
adc
add
dec
pop
aas
dec
repnz
sub
pop
clc
imul
add
sar
clc
stos
loope
adc
add
clc
sbb
pop
jne
pop
clc
std
ret
clc
fstpl
mov
add
add
incl
cld
fcos
call
mov
lods
inc
clc
adc
add
insl
add
fwait
jge
clc
jb
add
shrb
es
and
add
xchg
mov
add
add
or
mov
jge
nop
jmp
fldl
push
dec
lock
test
mov
decb
ret
jo
add
es
pop
mov
ja
add
sub
clc
dec
cmp
clc
fsubrl
push
out
inc
add
or
leave
xchg
xchg
repnz
cmpsb
clc
stos
jmp
test
mov
cwtl
jecxz
xor
add
xabort
pop
test
outsl
jp
sar
shr
enter
add
and
add
inc
clc
fiadds
dec
and
add
add
and
mov
adc
jmp
add
movsb
lock
jp
mov
popf
mov
mov
dec
dec
adc
add
push
add
ret
add
sub
dec
mov
mov
add
ficoml
add
clc
icebp
cmpsb
clc
pop
aaa
adc
mov
sbb
jno
add
dec
and
aaa
jno
add
jb
add
clc
add
add
out
push
es
jnp
xchg
add
clc
push
arpl
add
mov
fildl
add
cmp
ja
clc
and
jmp
jp
nop
jmp
sbb
lock
lods
jge
mov
sub
add
mov
clc
and
ret
clc
out
pop
adc
add
add
dec
scas
lods
loopne
sbb
test
nop
jmp
movsb
lds
lret
xor
add
add
stc
xchg
add
add
clc
cmp
mov
add
pop
lcall
nop
jmp
mov
lds
jg
jmp
outsl
push
pop
sbb
jne
clc
ds
inc
clc
pop
lcall
add
mov
or
pop
cmp
jbe
push
add
sub
sub
pop
push
movsl
clc
test
push
mov
xchg
ret
add
add
in
jb
add
push
jmp
add
ret
add
adc
add
out
jno
add
jmp
clc
dec
pop
decl
xor
add
add
clc
in
call
sub
clc
ljmp
into
fwait
js
add
mov
nopl
call
and
add
add
mov
ss
adc
add
clc
leave
ja
fwait
pop
clc
sti
or
jo
add
jne
nop
jmp
fldl
cs
aad
or
fldt
mov
clc
sbb
in
mov
add
dec
enter
or
cmpl
xor
clc
mov
mov
add
test
in
imul
jne
inc
clc
out
dec
jae
add
or
test
add
nop
jmp
out
cld
add
clc
pop
clc
mov
push
popa
add
inc
add
xchg
mov
push
add
push
add
mov
clc
xbegin
mov
nop
jmp
lds
ret
add
outsb
push
add
fcoms
xbegin
sub
sub
std
and
jecxz
movsb
clc
aaa
jmp
add
add
mov
nop
jmp
mov
jb
je
popa
mov
das
xchg
call
sahf
push
add
leave
aaa
lock
insl
jb
add
ret
nop
jmp
xchg
or
add
test
add
inc
add
mov
jmp
lds
jo
add
clc
mov
clc
xor
pop
and
add
loop
or
add
pop
or
clc
push
add
bound
add
test
clc
lock
jecxz
jg
jns
es
in
jb
add
add
adc
add
std
push
xchg
call
gs
jne
test
mov
jecxz
aas
jmp
push
clc
leave
inc
clc
mov
jecxz
out
inc
add
ret
jno
add
clc
stos
lods
cli
adc
add
add
add
aaa
push
cs
clc
pop
imul
or
sbb
clc
xor
add
sub
sub
gs
clc
cmp
test
ja
clc
movsb
clc
mov
or
add
pop
pop
cmp
dec
out
jno
add
repz
add
pop
xor
add
inc
add
dec
lret
out
xchg
adc
add
and
insb
xor
add
imul
add
inc
clc
sub
inc
clc
or
inc
add
es
mov
dec
divl
loope
push
add
dec
xchg
das
xor
enter
add
scas
xchg
test
lock
add
dec
cltd
out
jae
add
jp
and
add
imul
clc
jae
add
mov
add
imul
and
jp
xchg
pop
sub
add
add
xabort
mov
nop
jmp
mov
add
cwtl
xchg
xlat
jnp
add
movsl
clc
xor
add
clc
xchg
push
sbb
clc
push
jmp
nop
jmp
test
pop
xor
dec
sti
push
movsl
clc
push
add
ljmp
add
test
ja
inc
clc
bound
add
data16
cmp
sub
add
insl
mov
pushf
scas
js
jb
add
lret
mov
add
pop
jle
clc
xabort
add
aam
clc
out
xor
adc
add
clc
test
mov
addl
sub
ret
fst
jnp
fdivr
xchg
movsb
clc
cmpsl
clc
dec
imul
sub
jmp
add
es
jb
add
mov
push
call
add
jnp
dec
sub
call
nop
jmp
or
test
xor
add
push
add
bound
add
jmp
pusha
push
mov
xchg
ret
lds
push
mov
xchg
ret
ret
roll
jnp
cmp
std
mov
stc
sbb
clc
sub
add
dec
lret
adc
add
scas
xor
add
and
push
and
and
movsb
ja
movsb
clc
mov
fwait
push
pop
pop
add
and
add
mov
lret
add
add
add
lret
mov
aam
aaa
mov
add
cmc
jo
add
add
and
aad
clc
add
add
xabort
insl
sbb
clc
sbb
jecxz
inc
add
cs
out
fwait
out
inc
clc
dec
cltd
fldcw
or
push
add
sbb
push
add
shrb
clc
pop
xchg
or
sub
add
add
add
jae
add
add
add
add
clc
insl
fwait
and
mov
or
scas
mov
testb
dec
or
movsl
clc
pop
sti
add
jns
mov
xor
clc
cs
cltd
data16
jl
sti
push
ret
clc
in
aad
clc
je
call
mov
add
lret
push
mov
xchg
ret
sbb
jge,pn
add
mov
add
add
sahf
stc
pop
xor
add
adc
clc
dec
xchg
push
mov
xchg
ret
add
and
add
mov
out
inc
clc
pop
and
add
push
je
add
cmp
fldcw
clc
cld
in
clc
pop
dec
inc
clc
mov
cmp
lea
data16
aas
pop
pushf
lods
lods
pop
mov
mov
clc
mov
cmp
add
pop
mov
dec
xchg
cmp
add
add
add
sbb
jmp
jg
clc
inc
add
lcall
add
add
and
add
add
cmp
or
jmp
push
adcb
in
add
add
push
clc
aas
enter
add
das
mov
push
cld
mov
push
mov
push
mov
xchg
ret
cld
ja
clc
mov
clc
jle
clc
push
push
add
leave
add
mov
jb
and
add
lock
clc
mov
nop
jmp
jnp
sub
pop
clc
fwait
aam
clc
cmp
mov
add
cmp
sbb
pushf
ljmp
nop
jmp
add
add
popa
add
cmp
clc
adc
add
clc
test
sar
adc
add
push
add
mov
nop
jmp
gs
sahf
sub
add
mov
stos
push
xor
add
add
add
add
cs
outsl
pop
jns
out
xor
aas
push
add
pusha
add
gs
xlat
insb
movsb
clc
ja
clc
mov
clc
cmp
testb
icebp
jae
add
clc
mov
add
push
clc
fistpl
or
lret
scas
pushf
adc
add
add
clc
push
push
shlb
add
out
mov
es
mov
ds
push
fists
push
arpl
add
cmp
into
gs
mov
out
sbb
cmpsl
clc
pushf
arpl
add
sub
sbb
mov
add
cmc
add
inc
add
lret
pushf
mov
pop
fstl
clc
lret
aam
clc
push
cmp
clc
push
mov
clc
std
fwait
test
clc
movsb
clc
fstpl
push
add
jmp
add
or
jmp
and
add
inc
clc
mov
and
add
nop
jmp
insl
add
jmp
loop
dec
nop
xchg
push
add
rolb
test
clc
cmp
inc
clc
shrb
nop
rorb
div
cmp
out
stos
repnz
nop
jmp
icebp
add
mov
inc
clc
std
icebp
stos
incb
add
xchg
sbb
add
jae
add
pusha
nop
jmp
add
enter
clc
int3
pop
clc
mov
sub
enter
das
xbegin
clc
scas
mov
add
xor
add
int
repz
sbb
add
mov
daa
clc
jmp
clc
lret
add
clc
mov
sbb
add
add
add
lahf
imul
shr
cmc
repnz
mov
jns
mov
std
arpl
add
clc
dec
clc
nop
push
clc
cmpsl
clc
clc
jle
lods
outsb
mov
clc
loopne
or
clc
mov
jle
add
inc
clc
pop
iret
push
pop
add
mov
hlt
cs
mov
sub
jmp
add
cwtl
xabort
xchg
add
adc
add
out
mov
add
add
add
add
jp
clc
inc
add
filds
add
jp
clc
cmp
in
push
pop
dec
es
fnstcw
add
lret
dec
test
sub
bsf
add
sar
lret
push
in
mov
xchg
ret
add
xchg
push
add
adc
and
add
nop
in
hlt
cmpsl
clc
loope
lods
lcall
add
mov
add
leave
jecxz
into
jae
add
push
add
pusha
add
sbb
aam
in
sub
pop
xchg
push
cs
and
add
icebp
loope
push
sbb
mov
xchg
ret
add
fldl
add
xchg
mov
adc
add
ds
xchg
fsts
in
icebp
mov
dec
clc
push
add
add
add
clc
cmp
add
mov
je,pn
mov
add
cwtl
repnz
test
xor
popf
in
bound
add
push
mov
xchg
ret
adc
jp
out
lret
iret
cmp
mov
mov
das
mov
js
filds
dec
fldl
add
add
add
fs
ss
dec
mov
xchg
int3
mov
call
add
mov
sar
mov
pop
test
push
add
decl
jmp
mov
add
xchg
inc
add
cmp
jg
xlat
sbb
xor
xchg
ret
ret
ret
lcall
clc
je
sub
es
mov
jns
add
cmp
fwait
das
ret
xchg
fsubs
add
pop
in
aad
inc
clc
jge
clc
inc
add
pop
pop
gs
out
ja
add
xchg
push
dec
fdivl
add
dec
mov
data16
and
add
add
add
mov
mov
sbb
adc
add
clc
pop
jo
add
ja
mov
add
daa
clc
cmp
imulb
xchg
sbb
clc
push
add
ljmp
add
or
fnsave
xabort
xlat
lahf
int3
dec
sahf
in
add
add
add
or
clc
sub
clc
jge
ret
clc
mov
stc
cmp
clc
loope
jne
dec
fs
dec
inc
add
es
loop
jbe
lock
data16
cmp
in
sar
movsl
clc
cli
pop
outsb
sbb
sti
nop
jmp
enter
add
clc
mov
sub
mov
clc
add
test
testl
xchg
es
cmp
add
add
sub
add
nop
jmp
leave
and
leave
sahf
add
xchg
push
add
and
movsb
clc
add
add
clc
jns
clc
jl
add
cmp
cmp
inc
clc
xor
add
in
pop
loope
add
add
cmpsb
clc
shl
clc
or
rclb
cld
movsb
movsl
cmp
jnp
jo
add
xchg
loop
icebp
push
movzwl
nop
jmp
popa
add
inc
sbb
and
add
test
es
sar
jo
add
scas
enter
icebp
jnp
sbb
mov
push
nop
jmp
add
jl
cli
out
mov
dec
fildll
mov
sti
cmp
add
xor
mov
cmp
and
dec
mov
sub
push
mov
xchg
ret
movsb
cld
push
mov
nop
jmp
fisttpll
aas
imul
clc
jle
inc
add
lahf
mov
ljmp
adc
add
xchg
cs
clc
push
testl
inc
add
xchg
add
add
push
lret
clc
fincstp
stos
in
sbb
add
sub
jecxz
in
xor
clc
jmp
dec
push
push
nop
jmp
clc
out
movsl
add
jnp
add
nop
rclb
add
int3
sub
sbb
mov
sbb
add
push
stos
and
add
clc
icebp
rcrl
add
and
add
clc
sub
clc
and
in
clc
jl
or
add
mov
add
add
jmp
clc
lcall
add
clc
pop
push
sub
nop
jmp
xchg
add
xor
add
clc
mov
clc
sbb
push
add
scas
out
or
jne
pop
in
or
out
sub
add
ss
jne
clc
xor
xchg
and
pop
clc
sub
add
push
std
addr16
out
stos
xchg
fstps
clc
loop
fucomip
bound
add
clc
xchg
es
xchg
jo
add
add
clc
xchg
int3
mov
call
add
lds
ss
xchg
mov
add
cmc
sbb
dec
adc
add
push
ret
stos
mov
xchg
aad
call
inc
clc
sbb
sbb
lock
sti
xor
add
test
aam
clc
loop
push
clc
jnp
icebp
or
sbb
clc
cmc
mov
jne
pushf
push
add
adc
add
inc
clc
mov
add
mov
add
repz
lods
sldt
icebp
sbb
mov
xchg
call
jmp
add
cwtl
shrl
add
sbb
inc
clc
ret
clc
fmul
xor
add
rolb
add
inc
add
cld
jg
add
ljmp
add
lock
xchg
fcoml
add
mov
add
pop
and
add
add
clc
adc
add
inc
add
jge
faddl
add
mov
xchg
mov
push
outsl
lea
add
roll
dec
fs
loope
cmp
clc
insl
jmp
popa
add
xchg
notl
add
cmpsb
clc
daa
clc
and
mov
add
cs
add
in
xchg
inc
add
addr16
mov
js
mov
nop
jmp
or
or
test
clc
mov
fildl
add
arpl
add
nop
jmp
add
adc
dec
pop
push
cmp
lods
lods
pop
pop
jae
add
clc
pushf
fmul
pop
and
add
movzbl
clc
gs
dec
cmp
add
mov
nop
jmp
js
add
or
jle
add
sbb
xlat
or
sbb
add
clc
fcmove
xor
clc
add
cwtl
data16
std
xchg
jg
add
jno
add
push
add
int
scas
sbb
and
and
add
and
pop
xchg
scas
pop
arpl
add
sub
clc
sub
js
adc
add
jno
add
clc
cmp
cltd
js
sbb
mov
xchg
ret
popa
xor
ja
clc
mov
xor
enter
add
lahf
out
je
xchg
scas
jae
add
add
xchg
xchg
jno
add
jb
add
sub
mov
add
into
imul
add
jmp
stos
outsl
imul
add
call
clc
dec
and
add
in
jb
add
add
add
clc
sar
out
arpl
add
clc
dec
stos
sar
clc
out
cmp
movsl
clc
stos
out
loope
cmp
or
test
clc
xor
add
clc
inc
add
xor
add
fwait
testl
cmp
push
and
add
or
and
clc
popf
fs
mov
mov
ja
clc
ret
js
xor
add
aam
jne
inc
add
std
xor
add
mov
push
mov
xchg
ret
xor
push
mov
nop
jmp
mov
add
arpl
add
push
add
cmp
add
cmpsl
clc
push
clc
imul
clc
jno
add
mov
add
clc
fcomps
div
aam
sub
xabort
fwait
dec
cmc
inc
clc
outsb
test
clc
jne
clc
test
cmp
icebp
ss
clc
cmp
inc
clc
sti
pop
movd
clc
jecxz
scas
adc
add
jb
add
add
sub
add
pop
inc
add
add
mov
fxch
push
fldl
add
mov
das
mov
push
add
sub
enter
in
pop
jle
insb
clc
loopne
fmul
dec
ret
clc
mov
add
sar
pop
push
add
mov
clc
xchg
fs
sub
clc
mov
repz
ds
add
cld
mov
add
mov
mov
clc
push
stc
cmpsb
clc
out
cmp
add
add
add
divl
xchg
mov
xor
add
fcoms
std
outsl
push
xbegin
pop
mov
mov
xchg
ret
lcall
loopne
bound
add
add
clc
sar
xor
add
and
loopne
jno
add
clc
incl
pause
jmp
jnp
inc
gs
sbb
cmp
xabort
mov
daa
clc
xchg
scas
sub
fsubl
add
lahf
add
clc
jmp
clc
sbb
lret
clc
shlb
clc
push
xbegin
aaa
imul
pslld
clc
mov
or
add
jnp
cmp
clc
cmp
xchg
call
clc
aam
clc
imul
out
imul
xor
add
lcall
clc
addr16
lods
das
xor
add
mov
push
add
shrb
inc
add
movzbl
add
xchg
jbe
jbe
mov
add
cmp
in
lahf
sti
mov
xlat
mov
add
test
add
bound
add
cmp
mov
movsb
clc
imul
adc
fiaddl
and
flds
add
jecxz
mov
cli
or
inc
clc
in
sub
fcmovb
clc
clc
push
dec
xchg
arpl
add
add
mov
push
fidivl
add
popa
add
test
stc
jae
add
push
add
ss
fistpll
mov
cld
cmovge
adc
add
mov
cmpsb
clc
ljmp
adc
clc
enter
clc
sbb
clc
sbb
add
scas
pop
out
adc
push
mov
xchg
ret
or
je
xchg
sbb
jmp
js
leave
xchg
fldl
cs
sbb
add
pop
je
clc
out
cmp
clc
sbb
nop
jmp
add
aaa
add
clc
adc
add
pop
jb
add
and
add
gs
dec
push
cmpsb
clc
pop
clc
xchg
or
clc
push
clc
clc
jg
or
add
mov
xchg
sar
xor
add
pop
lea
inc
clc
inc
clc
decb
add
add
ret
clc
test
or
inc
add
stc
push
add
jmp
mov
popa
add
add
stos
ljmp
add
clc
push
mov
xchg
ret
mov
jnp
popa
add
inc
add
push
loope
jo
add
cmp
into
xor
add
add
mov
add
add
mov
push
nop
jmp
fnstcw
shll
sbb
add
pop
or
push
nop
jmp
add
mov
insl
and
add
add
in
leave
cmp
pop
inc
clc
jae
add
add
xbegin
clc
idivl
es
fisubs
jg
clc
in
aam
inc
add
repz
sub
clc
jle
pop
je
into
xbegin
pop
cmp
rcr
push
sbb
add
movsb
clc
dec
fdivs
add
inc
add
mov
clc
clc
dec
add
jb
add
dec
sub
clc
fwait
xchg
lods
adc
clc
lahf
sar
clc
pop
repnz
add
add
inc
add
dec
pop
cwtl
out
cmc
in
adc
scas
and
add
inc
clc
push
mov
and
add
adc
sub
clc
out
and
add
mov
frstor
add
ja
loopne
mov
jmp
test
lock
add
add
mov
cmp
add
loope,pt
xor
add
xchg
fistl
popa
add
lret
cmp
inc
add
xor
add
add
bound
add
push
sbb
scas
repz
clc
cmp
add
daa
clc
scas
push
add
push
mov
xchg
ret
or
ret
clc
jg
int
or
clc
jmp
fdivs
ljmp
jne
nop
jmp
rcr
xchg
adc
cmp
and
add
add
dec
jmp
add
sub
add
mov
add
insb
rcrl
add
sahf
jnp
adc
add
clc
or
pusha
add
and
add
clc
add
unpcklps
clc
es
and
movsb
clc
fistps
and
add
or
jl
cmc
xabort
cmp
mov
dec
or
add
push
add
lret
stos
push
add
movsl
clc
dec
sub
jle
xlat
lea
inc
add
push
add
adc
push
sub
dec
pusha
add
dec
cltd
xchg
pusha
add
or
sar
rcr
mov
add
push
sub
cmpsb
clc
pop
lods
test
out
jmp
add
xchg
inc
clc
mov
clc
mov
mov
inc
add
ret
clc
jg
out
cmp
in
call
cltd
mov
adc
add
out
push
clc
pusha
add
sub
add
push
jmp
popa
sahf
test
lods
aas
sarl
sahf
inc
add
js
mov
roll
out
int3
cmpsb
clc
jl
add
mov
jl
add
mov
out
sarb
push
aaa
out
gs
sub
aaa
sbb
jae
add
inc
add
aad
jp
movsl
clc
pop
gs
pop
clc
std
mov
jp
ret
clc
jno
add
add
dec
or
jb
add
cmpsl
clc
xchg
je
outsl
aad
clc
imul
nop
jmp
enter
add
test
xchg
rcr
xchg
pop
sub
add
scas
xchg
mov
add
add
add
sub
add
add
push
add
mov
rclb
add
dec
cmp
adc
cmpsl
clc
enter
imul
add
lods
fidivs
add
adc
add
rcrl
jmp
fldl
add
ret
add
out
pushf
in
incb
add
dec
mov
clc
outsl
test
nop
mov
dec
lock
scas
jo
add
call
nop
jmp
lds
lcall
mov
add
add
nop
jmp
add
adc
aas
shl
pop
ret
je
dec
aad
into
or
lea
call
add
cmp
test
cmp
add
hlt
add
js
jp
mov
add
sbb
adc
sub
clc
aaa
mov
pop
xabort
xchg
inc
add
adc
clc
lret
mov
clc
or
add
inc
clc
sub
add
rcll
mov
fs
loope
xchg
enter
mov
aad
clc
xor
add
loopne
sub
clc
xor
add
ret
clc
mov
add
out
pushf
mov
xlat
cmp
add
and
dec
fnstsw
jb
clc
aad
add
add
cwtl
xchg
xchg
adc
add
inc
clc
ds
mov
add
add
inc
clc
nop
cmp
aad
clc
adc
rolb
clc
out
and
jns
add
xchg
sbb
xchg
ljmp
inc
add
xchg
fstpl
add
clc
mov
sbb
add
add
push
mov
xchg
ret
gs
pop
leave
lea
add
clc
push
pop
fimuls
xchg
and
add
hlt
int3
inc
add
cmp
test
pop
sbb
sub
add
in
mov
clc
mov
fwait
repz
add
add
pop
mov
movsl
clc
xor
add
fsubr
fnstenv
mov
inc
add
xor
mov
clc
cld
xchg
shlb
add
jae
add
or
xor
nop
jmp
jnp
adc
mov
je
dec
mov
pusha
add
pop
clc
mov
mov
sbb
cmp
clc
jmp
clc
cmpsl
clc
fdivs
clc
data16
dec
cmp
clc
aam
aam
clc
mov
enter
lock
and
loope
js
clc
pop
jnp
mov
and
clc
pop
imull
add
sbb
in
call
js
mov
add
push
lahf
mov
adc
adc
add
mov
jno
add
es
aad
push
push
nop
jmp
cs
add
cli
add
add
adc
add
mov
movsl
clc
arpl
add
ljmp
aas
adc
add
sbb
test
adc
jge
decl
mov
icebp
jo
add
xbegin
xchg
and
and
add
add
mov
mov
jl
aas
xlat
mov
clc
gs
ljmp
xlat
fldenv
stos
inc
add
dec
mov
in
insl
test
sbb
push
nop
jmp
ret
mov
add
add
dec
add
add
cli
ljmp
lret
xor
add
add
clc
inc
add
or
sbb
testb
scas
xchg
xor
std
stos
addr16
lods
mov
sub
addr16
pop
sbb
clc
add
add
add
inc
clc
or
in
je
clc
in
sbb
clc
inc
add
clc
lahf
fistpll
jae
add
sub
sbb
clc
daa
clc
clc
inc
clc
mov
sbb
xor
add
xorps
add
xchg
leave
push
add
inc
add
mov
xchg
mov
clc
dec
addr16
hlt
push
clc
cs
inc
clc
xchg
cld
mov
mov
clc
mov
cwtl
cmp
add
xchg
pusha
add
mov
adc
mov
mov
sub
add
cli
es
enter
ficoms
jbe
lods
inc
add
and
sub
inc
clc
or
add
jmp
mov
add
bound
add
cmp
mov
add
je
sub
sub
add
aam
fs
jge
cmp
mov
clc
rclb
mov
clc
in
or
push
push
js
jmp
lds
test
mov
dec
push
add
ret
sahf
aaa
enter
inc
clc
cld
repz
push
add
nop
jmp
adc
add
add
jmp
add
clc
xor
add
das
jnp
clc
stos
in
dec
outsb
into
enter
mov
pop
outsl
mov
clc
inc
clc
cmc
sub
add
clc
mov
test
outsl
mov
and
add
loopne
insl
cmpsb
clc
pop
add
add
mov
das
mov
or
cmp
mov
cmp
divb
sti
push
cmp
clc
pop
ret
clc
jae
add
clc
adc
jmp
ja
lds
pop
cmpsl
clc
xor
add
clc
add
add
dec
xlat
ret
mov
arpl
add
fsub
clc
insb
outsb
cmpsl
clc
push
insl
stc
cmp
clc
pop
sub
leave
mov
push
mov
xchg
ret
fnstcw
sbb
loopne
aaa
lods
lahf
ja
pop
push
cwtl
xbegin
std
divl
clc
cwtl
mov
stos
mulb
jae
add
push
add
loop
mov
clc
adc
clc
xchg
push
ss
pop
enter
add
outsb
dec
sub
add
add
add
sbb
cmpsl
clc
push
add
mov
clc
movsl
clc
push
nop
jmp
fld
lds
jnp
in
out
out
xchg
mov
mov
add
cmp
mov
dec
fstpt
jnp
clc
mov
clc
imul
clc
or
jbe
dec
in
mov
dec
mov
jge
mov
fwait
pop
clc
inc
add
jl
sbb
lahf
xchg
sti
push
jmp
cmp
add
add
mov
add
add
mov
shl
clc
pushf
out
dec
add
add
js
pop
fwait
int
pop
nop
jmp
js
xor
add
gs
cmp
fistps
add
je
dec
cmp
clc
jb
add
jecxz
cmp
inc
clc
cmp
fwait
or
shr
mov
add
test
fdivrs
sbb
add
add
clc
sbb
lods
xchg
lahf
lock
dec
dec
inc
add
fcmovnu
fwait
jno
add
add
addr16
xor
data16
xor
pop
cltd
sub
clc
inc
add
aam
stos
mov
add
jecxz
adc
add
add
add
xchg
loop
icebp
mov
leave
jg
or
clc
mov
cmp
ret
clc
push
fidivrl
std
faddl
add
xchg
movsl
clc
mov
xor
add
stc
pop
jns
aaa
int
add
jns
clc
faddl
pop
pop
in
push
aad
push
clc
push
add
mov
fisubs
mov
loopne
sub
xchg
lret
jae
add
sahf
xor
add
rclb
gs
leave
xchg
fistps
xor
add
xor
add
add
pop
inc
clc
xor
test
cmp
add
sar
inc
add
xchg
test
add
lahf
cs
mov
js
nop
jmp
mov
jnp
mov
add
fdivrl
clc
dec
cwtl
push
add
adc
add
outsl
lea
add
lea
test
sub
xchg
in
sub
pop
stos
sbb
mov
mov
jle
add
xchg
mov
add
jmp
ljmp
clc
adc
add
aad
je
clc
nop
iret
insl
in
push
clc
adc
add
and
es
pop
pushf
pop
clc
cmp
jns
adc
add
clc
xor
add
add
clc
mul
clc
clc
xchg
and
clc
fisubs
flds
add
mov
add
pop
clc
aas
cmp
or
mov
clc
mov
call
sar
jecxz
mov
sbb
sbb
clc
out
adc
add
popa
add
test
leave
pop
mov
add
and
add
clc
add
ret
clc
cli
xchg
mov
insl
lods
push
add
outsb
or
cmp
push
inc
nop
jmp
add
test
mov
add
xchg
frstor
xabort
add
add
push
int3
mov
fcmovb
clc
es
push
clc
mov
ljmp
add
xchg
jb
add
jbe
sub
ds
ljmp
add
add
add
add
clc
insl
mov
jg
nop
jmp
add
jecxz
mov
fistpll
lods
inc
add
loope
push
jmp
fwait
in
and
and
add
imul
sahf
das
loop
xchg
push
ljmp
imul
jge
daa
clc
push
add
or
xchg
sahf
push
adc
add
imul
add
add
add
js
je
nop
jmp
bound
pushf
mov
jmp
jl
cs
mov
gs
addr16
repnz
pop
xchg
mov
pop
mov
add
xor
add
clc
sub
push
inc
add
mov
clc
nop
clc
mov
insb
bound
add
clc
imul
add
add
popa
add
sti
mov
adc
add
cmpl
nop
jmp
add
test
and
add
cmp
mov
clc
mov
cmp
clc
jecxz
inc
add
xor
add
insl
fstpt
add
cmpsb
clc
aaa
pop
clc
jmp
xchg
sar
test
es
je
add
push
jo
add
lahf
sbb
add
mov
dec
inc
clc
push
add
add
clc
cmp
add
jge
add
mov
pop
xchg
jnp
xor
add
clc
and
add
cmp
lods
int3
scas
mov
or
add
test
lea
movsb
clc
jno
add
loop
lcall
loop
test
sarb
scas
insl
cmp
clc
pop
sub
clc
mov
add
addr16
sarb
test
nop
jmp
gs
lds
mov
push
push
jmp
jnp
lcall
jmp
test
sbb
mov
clc
repz
add
add
pop
or
add
push
movzwl
nop
jmp
mov
rcll
sar
add
mov
and
add
push
adc
clc
push
sub
add
xor
std
cmp
clc
push
lret
sbb
jb
nop
jmp
cwtl
add
cmp
add
push
mov
fisttpll
insl
adc
or
mov
clc
adc
add
add
sub
fidivl
xchg
or
mov
cmpsl
clc
cmp
sub
movsl
clc
cmp
int
lret
sub
add
cmp
jne
clc
std
cmpsl
clc
xor
sbb
test
add
lret
cmp
incl
jmp
leave
movsb
add
sbb
mov
jge
out
xor
add
clc
add
add
pusha
add
adc
add
cmp
loope
cmp
push
add
mov
clc
bound
add
add
clc
ja
add
mov
clc
cmp
clc
xor
add
add
adc
xor
add
shl
mov
fcomip
fadds
ret
mov
test
lods
cmp
jae
add
clc
xabort
clc
cld
repnz
je
xor
add
add
clc
and
test
push
add
cs
aaa
xabort
and
add
imul
sar
clc
stos
loope
cmp
mov
mov
add
jae
add
add
sar
clc
clc
std
push
add
add
test
clc
add
add
sub
add
cmp
add
fwait
xchg
cmp
add
mov
cmpsl
clc
aaa
dec
dec
inc
add
pop
xchg
lock
clc
sub
fs
dec
adc
add
dec
sar
pop
nop
jmp
and
and
popa
add
add
fcmovnu
jecxz
fld
clc
or
hlt
or
loop
ss
pop
push
and
nop
jmp
mov
lock
clc
lea
mov
push
add
nop
jmp
and
mov
add
incl
imul
mov
test
in
and
jmp
gs
mov
inc
xchg
clc
popf
xchg
in
insl
pop
scas
and
out
aam
clc
gs
mov
dec
cmp
clc
xchg
jle
lret
data16
cli
fidivrl
lea
add
cld
lahf
jbe
mov
add
add
icebp
jl
xor
add
dec
adc
add
clc
jo
add
je
push
clc
shrb
and
add
push
out
mov
mov
dec
cmp
jmp
lret
clc
sahf
adc
clc
xchg
in
adc
lret
insl
popf
lret
cmp
mov
clc
xchg
sar
push
mov
xchg
ret
sub
adc
clc
push
pop
adc
add
jecxz
inc
clc
mov
add
adc
clc
int
iret
inc
add
pop
sbb
pusha
add
call
jb
add
add
pop
loope
clc
int
push
cmp
add
add
ljmp
notb
sbb
call
incl
add
add
gs
pop
sar
sbb
lret
mov
decl
or
fdivl
add
sub
lods
ss
inc
clc
test
cmp
rcrl
shl
nop
jmp
sub
add
call
add
jnp
sbb
add
aad
and
dec
sbb
repz
call
jl
sahf
mov
add
clc
test
mov
cwtl
lds
loope
mov
or
fdivp
mov
movsl
clc
out
add
jo
add
lret
push
add
daa
clc
or
and
add
into
out
lahf
push
add
xchg
shll
add
clc
call
lahf
xbegin
push
add
add
add
cmp
pop
js
mov
push
mov
push
add
popa
add
sar
das
pushf
xor
add
clc
adc
add
add
lea
add
add
aas
outsb
mov
rolb
cmp
add
pusha
add
sarl
pop
clc
sbb
add
nop
jmp
lock
lds
cwtl
clc
mov
clc
push
add
ret
clc
or
add
out
adc
add
clc
jbe
rorb
cwtl
push
sub
nop
jmp
add
fldl
bound
adc
add
push
inc
clc
mov
jmp
clc
add
dec
cli
cmp
push
ss
rcl
adc
add
clc
lock
add
xchg
jnp
clc
inc
add
push
lret
add
cli
addr16
jge
inc
clc
lods
fisttps
insl
mov
add
add
mov
xchg
cltd
stos
push
je
outsb
movsb
clc
xchg
movsb
clc
iret
lcall
add
fists
out
jnp
test
jmp
sahf
sahf
sbb
sbb
sub
add
dec
pop
mov
addr16
leave
jmp
enter
add
add
clc
sbb
jmp
in
in
cmp
or
and
add
pop
clc
scas
imul
out
cli
divb
add
dec
pop
mov
add
roll
loop
out
add
add
add
clc
xor
add
add
sar
clc
lahf
je
add
pusha
add
cmp
add
ret
xchg
xor
enter
add
hlt
mov
js
mov
stos
jne
clc
sub
and
cmc
cld
jbe
clc
stc
sub
add
sbb
mov
cld
dec
cmp
clc
ffree
clc
push
add
push
mov
xchg
ret
xchg
inc
enter
cmp
bound
add
fdivrs
jns
clc
fnstsw
int3
lret
aam
negb
clc
shlb
add
sti
jb
add
pop
cmpsb
clc
pop
ret
clc
js
add
mov
add
sub
or
push
js
add
popf
and
add
dec
hlt
cmp
into
ret
jecxz
mov
cmp
add
inc
add
enter
add
jnp
sbb
fwait
je
inc
clc
clc
mov
clc
stc
in
pop
out
std
out
mov
xlat
dec
add
add
outsl
xor
add
add
enter
cwtl
cmp
clc
aad
je
mov
nop
jmp
mov
add
mov
add
clc
or
scas
dec
addr16
pop
cmp
clc
adc
add
add
add
dec
out
call
sub
xchg
outsb
outsl
sar
pushf
cmc
sti
xor
add
clc
push
add
add
clc
insl
pop
sahf
cmc
jmp
or
clc
dec
pushf
jmp
inc
clc
cmp
clc
lret
fdivl
add
jnp
es
cmp
clc
sar
inc
clc
cmp
mov
lahf
mov
clc
cmp
clc
pop
cli
inc
add
and
add
repz
mov
cmovnp
clc
add
clc
or
jnp
xor
add
clc
mov
in
cmp
sbb
lret
fldl
adc
add
out
mov
and
add
loop
mov
cmc
sub
clc
xchg
cld
lock
scas
inc
add
int3
mov
push
add
mov
clc
repz
clc
leave
repz
xchg
cmp
pop
pusha
add
jmp
xchg
cmpl
ljmp
lcall
and
add
clc
outsl
call
clc
mov
or
clc
std
dec
call
cmp
clc
push
sub
push
add
mov
jno
add
clc
pop
sbb
cmpsb
clc
mov
mov
loope
and
add
mov
add
frstor
jbe
add
out
xor
add
aas
xlat
adc
add
test
clc
xchg
push
jge
out
das
ret
clc
cmp
and
ljmp
add
sub
xor
nop
jmp
popa
aaa
ja
lcall
nop
jmp
sub
hlt
sahf
ss
clc
loope
hlt
bound
add
and
add
cwtl
ret
push
lods
and
add
xchg
jg
clc
rep
push
add
inc
add
add
mov
cmp
mov
or
add
sub
lea
nop
jmp
mov
mov
add
mov
fdivrl
idivb
mov
sbb
add
repz
lea
pusha
add
int3
lods
loop
jle
add
xchg
push
cmp
sbb
clc
inc
clc
pop
clc
push
imul
cmp
hlt
das
ja
mov
aad
clc
test
ljmp
xor
clc
jle
push
out
out
dec
mov
add
add
outsl
dec
mov
cltd
lret
clc
xor
add
xor
add
xlat
ds
pop
dec
fsubrl
mov
fidivrs
clc
mov
add
add
pop
add
inc
gs
sub
mov
ror
push
mov
xchg
ret
mov
insl
push
call
add
fst
mov
clc
and
add
xor
aam
or
add
cmp
std
cmp
dec
pusha
add
mov
push
xchg
fwait
fs
push
add
push
dec
pop
add
cld
lcall
push
fisubs
mov
call
mov
add
and
add
jno
add
ret
clc
jl
pop
into
lahf
and
add
clc
test
clc
jae
add
push
aas
inc
add
fisttpll
add
xor
add
rcr
mov
add
pushf
jl
imul
movsb
clc
xchg
fsub
clc
push
mov
clc
es
das
xchg
adc
add
mov
and
adc
add
dec
add
add
add
add
add
mov
mov
clc
push
add
inc
add
ja
jecxz
cli
enter
add
clc
or
mov
and
ret
hlt
mov
clc
mov
or
xchg
ret
fld
in
loop
int
clc
xchg
repnz
aad
clc
cmp
testl
mov
add
faddl
pop
add
add
clc
adc
add
add
clc
cmp
jmp
add
add
lret
and
add
popa
add
cmc
sbb
jecxz
fistl
add
adc
add
shll
mov
mov
stc
pop
cmpsb
clc
jmp
out
nop
jmp
popa
add
xor
hlt
xchg
adc
add
add
clc
jo
add
mov
mov
jge
cmova
mov
push
clc
cld
popf
fildll
add
aaa
leave
push
push
jl
sub
fwait
dec
pop
hlt
outsl
icebp
inc
clc
xchg
jo
add
mov
add
je
outsb
in
data16
gs
pop
xchg
sbb
xchg
pop
pop
lock
mov
clc
xchg
and
sbb
and
stos
stos
clc
jg
add
mov
adc
add
jo
add
xor
add
in
sar
mov
call
lret
pop
fdivp
inc
add
cmp
add
xbegin
xchg
cmp
mov
mov
cmp
out
test
insl
ss
rorb
mov
add
std
add
idivb
xabort
dec
gs
scas
outsl
ljmp
xchg
ja
sub
jne
clc
out
loop
or
cmp
add
add
clc
mov
add
cmpsb
clc
rcr
xor
cmp
clc
xchg
or
add
pop
mov
add
mov
pop
jnp
cmpsl
clc
cmp
clc
or
clc
icebp
cli
sti
pop
sub
add
xor
add
fldenv
clc
pop
cmp
clc
int
add
push
add
leave
pop
int3
sti
data16
stc
aad
inc
clc
je
mov
iret
test
xor
clc
cmpsl
clc
lahf
ret
clc
or
fidivrl
and
add
pop
inc
add
sub
jns
clc
pop
sbb
gs
cmp
in
mov
jp
add
in
aam
inc
add
xchg
and
add
in
or
clc
fldcw
mov
add
xchg
fwait
sti
sbb
add
jns
clc
xchg
inc
clc
fldenv
push
cmp
nop
jmp
movsl
test
cmp
add
test
stos
data16
mov
mov
xchg
ret
add
push
and
scas
testl
clc
xbegin
add
mov
add
add
bound
add
push
add
cltd
clc
xchg
pop
clc
push
filds
add
lcall
add
jno
add
add
jae
add
sbb
add
add
dec
mov
cmp
add
movsl
cs
aaa
mov
xchg
ret
inc
xchg
xor
add
fsub
clc
or
cmc
cmp
pushf
push
std
insb
cli
pop
jle
scas
and
clc
gs
lret
in
cld
lcall
notl
add
sbb
jmp
cs
adc
mov
fidivrl
adc
xchg
dec
imull
mov
clc
jae
add
add
cmp
clc
and
add
clc
sbb
lahf
inc
add
pop
sbb
fadds
lock
add
mov
jno
add
sbb
test
add
pushf
int3
mov
mov
popf
je
clc
shr
imulb
or
add
push
mov
xchg
ret
movsb
ja
add
add
fs
imul
clc
mov
cmp
fmuls
adc
add
add
and
add
sti
repz
clc
jl
pop
clc
cmp
or
add
lcall
add
pop
xchg
rolb
add
add
adc
add
sar
add
jl
add
jno
add
clc
jne
int
mov
xchg
mov
insb
push
add
xchg
xchg
shl
clc
insb
mov
mov
jmp
inc
or
cs
lock
pop
sbb
clc
jmp
sub
add
jns
add
jb
add
jg
mov
jnp
and
add
clc
in
rcll
clc
divl
mov
nop
jmp
add
lcall
lcall
cs
lods
cmpsb
clc
jns
ljmp
jmp
fnstsw
sub
clc
test
jbe
ret
pop
mov
adc
add
aas
stos
dec
adc
add
jge
push
xor
add
or
popl
nop
jmp
fnsave
mov
icebp
jl
dec
daa
clc
pop
stos
inc
clc
inc
add
cmp
clc
jecxz
out
test
add
dec
out
adc
add
aad
clc
pop
hlt
add
add
clc
and
add
add
cmpsb
clc
mov
clc
cmp
mov
sar
std
movsl
clc
jge
clc
xlat
cmp
dec
int3
sbb
mov
mov
clc
pusha
add
pop
js
clc
push
add
pop
sahf
lods
push
add
dec
cmp
clc
xchg
stc
shrb
add
xchg
xor
clc
mov
jae
add
sar
ja
clc
decb
mov
cmpsl
clc
imul
jmp
cs
xor
adc
or
add
inc
add
roll
mov
aam
add
leave
mov
out
call
out
test
clc
xchg
adc
add
dec
add
nop
jmp
aaa
mov
scas
mov
mov
add
pushf
shrb
leave
movsb
clc
dec
call
mov
mov
and
add
dec
sub
movsb
clc
sete
add
xabort
clc
sar
lock
add
sbb
sbb
add
lcall
mov
mov
jmp
test
jo
add
adc
add
add
clc
mov
clc
cwtl
mov
or
add
add
clc
gs
imul
js
int
pop
jl
xor
add
xlat
cmp
clc
loope
mov
clc
sub
popf
ret
clc
or
add
xor
add
clc
cmp
add
sub
clc
das
sar
aad
jo
add
add
add
add
fcompl
ja
outsb
outsb
loope
mov
sbb
mov
add
adc
add
dec
dec
ljmp
pop
cmp
pop
arpl
add
loop
movsb
clc
xor
clc
loop
xor
add
add
push
stos
mov
mov
or
add
clc
fcomip
mov
inc
add
xchg
jns
add
ljmp
scas
adc
add
fimuls
pop
cmp
clc
mov
add
dec
addr16
sahf
rcr
testl
popf
xchg
jbe
sarb
xchg
dec
and
add
sub
push
rclb
mov
push
mov
jecxz
push
out
aaa
add
cwtl
add
scas
pop
fdivrs
add
xchg
adc
add
adc
add
clc
out
and
add
dec
pop
stos
push
add
sti
movsb
clc
fucomp
xchg
or
fiadds
add
mov
mov
out
ret
clc
inc
add
clc
sbb
jle
cmp
add
jnp
and
add
add
lods
xabort
clc
imul
clc
mov
clc
sbb
mov
sub
ljmp
lds
pop
and
add
mov
or
add
in
fmul
daa
clc
dec
sub
test
pop
xchg
and
add
xchg
test
lock
add
clc
cmp
in
and
add
jmp
pop
xor
add
add
push
fiadds
lret
cmc
out
icebp
in
mov
clc
pusha
add
popf
outsb
jns
inc
add
aad
clc
push
pushf
dec
sub
arpl
add
das
enter
pop
movsl
clc
jge
icebp
sub
add
push
add
mov
add
mov
data16
fnstsw
clc
mov
arpl
add
mov
ja
xor
pop
mov
mov
nop
jmp
or
fldenv
test
mov
nop
jmp
cs
icebp
leave
in
adc
add
clc
fldt
bound
add
clc
adc
add
sti
test
add
test
addr16
iret
jg
sub
push
push
mov
xchg
ret
out
test
xchg
mov
mov
cmp
xchg
mov
lret
clc
xchg
sbb
add
pop
xor
add
and
add
add
dec
xchg
hlt
inc
add
push
add
cmc
and
add
stos
repnz
add
stos
enter
sahf
mov
clc
jmp
jb
add
add
clc
xchg
or
xchg
fists
add
or
jge
add
or
add
pop
clc
mov
clc
gs
pop
push
cs
out
mov
scas
out
dec
xchg
adc
mov
clc
mov
pop
clc
mov
movsl
ljmp
adc
ja
xchg
in
inc
add
cltd
xchg
mov
aaa
xchg
mov
or
push
push
inc
clc
dec
lods
xor
add
add
add
gs
xchg
cwtl
lcall
sbb
mov
add
cmp
icebp
lcall
test
scas
cltd
inc
clc
push
aaa
rcrb
add
mov
add
popa
add
lods
cmp
data16
inc
clc
das
test
mov
cmp
pop
cmpsb
clc
call
add
add
add
shr
in
cmp
clc
push
imul
nop
jmp
add
test
aas
adc
add
lock
bound
xchg
clc
push
clc
loope
clc
mov
add
pop
xchg
je
jo
add
inc
add
lea
in
xlat
inc
add
fcmovnb
clc
cmp
add
clc
cwtl
rcr
aas
cs
scas
sub
add
add
or
or
adc
add
jmp
mov
xchg
push
test
push
add
mov
add
xor
and
add
clc
data16
inc
add
inc
clc
add
sbb
add
add
add
clc
aad
xor
add
push
cmp
add
insl
or
add
and
add
fldenv
add
and
faddl
push
add
cmp
cmpps
clc
aam
insl
sbb
gs
pop
adc
add
jo
add
mull
mov
clc
xor
add
jle
mov
xor
add
add
daa
clc
and
mov
add
mov
call
test
cmp
mov
mov
inc
clc
shll
add
cmp
sahf
xchg
fmuls
sbb
cld
data16
dec
cmpsb
clc
in
adc
add
jno
add
clc
add
add
je
ss
gs
adc
add
clc
sub
add
popa
add
mov
clc
cmc
mov
mov
xlat
inc
clc
stos
sbb
clc
push
mov
xchg
ret
jl
cwtl
testb
add
clc
fs
mov
sbb
clc
add
add
outsl
push
add
xabort
jne
jae
add
add
das
add
add
xchg
xchg
dec
fdivl
jge
xbegin
inc
add
mov
test
rcrb
clc
sub
dec
lock
add
cmp
xchg
mov
sbb
clc
jge
cli
jb
add
clc
add
add
and
fadds
jge
clc
jecxz
ljmp
add
xbegin
imul
add
test
jecxz
mov
push
add
js
ret
clc
cld
faddl
clc
add
add
mov
add
add
ss
movsl
clc
xchg
xabort
pop
and
add
jmp
dec
movsl
clc
xor
test
ret
push
into
pop
movsl
clc
in
jmp
clc
clc
js
clc
mov
xor
add
leave
pop
pop
std
clc
sub
jnp
clc
lcall
cmpsb
clc
test
out
fnstsw
clc
sahf
int3
sub
clc
jns
or
push
inc
clc
pop
jo
add
and
add
stos
ss
hlt
add
add
add
fildl
mov
inc
add
jle
clc
std
mov
fs
fwait
push
jmp
ljmp
push
or
xor
add
clc
jl
xchg
xor
add
iret
stos
in
jns
arpl
add
add
xbegin
add
insl
mov
xor
add
push
pop
in
int
jo
add
cmp
pop
out
jmp
add
stos
mov
pusha
add
pop
dec
lahf
repz
add
sahf
test
clc
add
add
fwait
push
add
fwait
jno
add
out
insb
es
inc
clc
fwait
pop
cwtl
leave
test
add
nop
jmp
jb
test
or
add
lock
cmpsb
clc
dec
xor
add
xor
nop
jmp
mov
add
and
add
clc
lcall
and
add
add
add
inc
add
je
clc
repz
mov
add
pop
xor
add
cs
add
lret
mov
clc
insb
fisubs
add
add
clc
mov
sarl
shl
clc
cs
repnz
xor
aaa
insb
push
add
and
add
sahf
inc
add
ret
clc
jno
add
add
push
and
add
mov
popl
aas
pop
or
insl
mov
and
cmp
popa
add
sbb
push
clc
out
push
and
add
add
add
add
sbb
push
clc
pop
daa
clc
add
add
cld
mov
aaa
jae
add
cmp
add
pop
clc
mov
clc
push
inc
add
mov
add
pop
in
cld
adc
push
jb
add
dec
add
add
cmp
add
lods
adc
add
repnz
test
xor
add
sub
mov
clc
jecxz
cli
jo
add
nop
jmp
and
clc
clc
cs
mov
pop
negl
nop
inc
add
outsl
mov
xor
sar
add
clc
add
add
push
add
dec
test
jl
mov
clc
push
test
add
mov
clc
cwtl
jb
add
add
test
cli
mov
fdivrp
incl
add
or
es
aad
clc
jge
clc
sbb
clc
push
clc
jnp
add
dec
and
add
pop
mov
add
add
ret
clc
popf
lahf
mov
cmp
or
add
add
nop
jmp
lcall
mov
data16
xchg
push
add
jno
add
inc
clc
sar
mov
jae
add
clc
icebp
loopne
int
clc
std
sub
nop
jmp
lcall
cmpsb
clc
jae
add
clc
push
add
lcall
pushf
cwtl
lock
fiadds
dec
clc
movsl
clc
and
add
lret
loope
enter
int
pop
add
push
cmp
clc
pop
es
sub
add
pop
clc
cld
inc
add
xchg
cld
out
testb
add
add
sbb
mov
mov
ja
lock
clc
jnp
icebp
cmp
clc
rcl
mov
add
imul
clc
pop
mov
inc
add
xor
add
lret
into
dec
push
add
cmc
jno
add
cltd
in
and
xbegin
movsb
clc
icebp
fldenv
add
inc
add
ljmp
xbegin
adc
add
outsb
daa
clc
nop
into
mov
dec
leave
pop
clc
jae
add
add
std
mov
clc
mov
test
add
mov
scas
lret
xchg
ret
add
adc
repnz
clc
cmp
lret
fs
mov
add
push
insl
mov
add
add
clc
ds
push
xchg
mov
clc
cltd
mov
add
fwait
test
mov
je
add
xlat
pop
push
add
jbe
add
mov
and
add
fdivrp
dec
xchg
in
xchg
sub
add
mov
ret
ds
leave
je
jns
clc
filds
scas
pusha
add
jle
clc
cmp
arpl
add
clc
cmp
incl
stc
nop
jmp
cld
gs
jb
cs
rorl
push
push
mov
xchg
ret
or
xchg
mov
xor
add
add
rorl
push
add
pop
mov
push
cmp
clc
mov
add
mov
push
jmp
add
insl
test
sbb
jg
add
inc
clc
jb
add
lret
xchg
dec
mov
jbe
jno
add
mov
mov
clc
dec
test
jae
add
stos
jns
add
bound
add
clc
mov
clc
int3
pop
sar
clc
mov
jb
add
add
mov
je
add
pop
cmp
push
clc
ljmp
clc
aaa
inc
clc
sbb
ja
pusha
add
cmp
mov
mov
push
add
cmpsb
clc
mov
mov
jb
add
clc
ja
push
je
clc
and
add
mov
mov
xchg
ret
and
fwait
ret
add
sub
add
add
dec
cmp
jmp
nop
jmp
xchg
leave
add
sahf
push
out
jbe
xor
add
add
xchg
dec
dec
in
ds
fcom
fwait
and
inc
add
sbb
add
adc
add
inc
add
sub
mov
popa
nop
jmp
mov
lock
mov
adc
add
in
ja
cmp
xabort
add
cmp
add
nop
gs
cmp
ds
mov
and
mov
add
and
add
inc
clc
icebp
and
add
mov
clc
mov
sbb
filds
add
cmpsl
clc
popa
add
cwtl
testb
cltd
sub
jbe
dec
push
iret
inc
add
fidivs
adc
cmp
mov
and
add
mov
add
sarb
clc
cmpsl
clc
mov
add
add
dec
arpl
add
add
sbb
add
add
xchg
dec
icebp
cmp
pop
daa
clc
pop
clc
push
add
aas
out
push
out
es
fsubrs
test
jmp
sahf
clc
add
jecxz
je
dec
push
addr16
mov
mov
xor
add
jge
add
push
clc
icebp
and
add
cmpsl
clc
sub
clc
mov
gs
and
add
femms
or
add
jle
mov
cmp
add
clc
in
sub
enter
add
inc
clc
fbld
add
add
push
sbb
xor
nop
jmp
jb
mov
mov
dec
jge
clc
aam
pop
push
jge
push
nop
jmp
test
add
xor
clc
push
add
js
mov
add
mov
sbb
pop
ret
clc
and
clc
mov
and
nop
jmp
adc
test
movswl
nop
jmp
jnp,pn
shll
add
lods
sub
clc
pop
dec
icebp
imul
clc
aaa
jno
add
add
loop
rclb
add
mov
cmp
lods
pop
imul
pop
clc
and
mov
jg
jmp
clc
test
add
inc
add
bound
add
add
inc
add
arpl
add
add
and
add
clc
cmp
xchg
fsubs
add
xor
or
in
data16
ss
and
add
add
mov
sub
lret
add
xbegin
data16
cld
add
mov
cmp
mov
mov
clc
adc
add
mov
ss
add
fldl
aaa
dec
fsubrp
xchg
clc
es
loope
call
add
push
call
nop
jmp
leave
mov
fmul
jb
add
clc
sbb
add
dec
mov
cwtl
movsl
clc
add
xor
add
ljmp
mov
mov
sub
mov
clc
jnp
add
in
cmp
add
loope
mov
add
add
cmp
xor
add
jg
xor
add
mov
add
jb
add
add
loope
scas
arpl
add
clc
lods
sub
sbb
mov
pushf
push
stos
notl
call
adc
mov
pop
add
daa
clc
sub
add
add
add
inc
clc
push
mov
clc
ret
clc
pop
clc
shr
roll
add
movsl
clc
sub
jmp
cmp
clc
daa
clc
dec
cmp
dec
test
xchg
xchg
mov
scas
fld
clc
xchg
xchg
xor
add
clc
sub
addr16
mov
add
add
clc
and
add
lcall
add
add
or
jp
clc
imul
decl
add
call
xchg
out
inc
add
outsl
push
add
test
add
dec
lock
insb
xlat
jb
add
pop
cmp
clc
fbld
dec
adc
sar
pop
dec
cmp
bound
add
out
mov
inc
add
scas
ret
clc
sbb
mov
xchg
ret
mov
movsl
sbb
es
or
mov
clc
lcall
add
add
xchg
add
add
xor
push
call
nop
jmp
cld
bound
clc
push
sbb
dec
and
add
push
call
add
out
jmp
clc
sbb
xchg
insb
fdivrp
iret
push
ss
in
clc
mov
popa
add
xor
add
add
jg
add
jmp
add
add
jge
sbb
clc
cli
sbb
es
dec
in
popa
add
mov
lret
jg
add
psubusw
add
cwtl
mov
jmp
xchg
in
clc
in
arpl
add
push
dec
sar
clc
pop
clc
dec
pop
pop
mov
mov
inc
clc
add
add
clc
nop
xbegin
push
call
out
and
add
clc
loopne
and
js
adc
add
add
idivl
cmp
mov
cwtl
push
push
add
and
add
clc
mov
add
sbb
aaa
xor
add
in
sub
divb
add
jo
add
mov
add
mov
mov
dec
xor
add
add
mov
xchg
add
add
std
lock
outsb
cli
push
add
rolb
add
xchg
mov
or
jmp
test
clc
xchg
jecxz
mov
clc
or
pop
cmp
ret
ds
add
adc
cmp
jne
nop
jmp
test
lds
test
movsl
call
call
clc
push
mov
xchg
ret
mov
push
add
js
mov
add
fcomps
clc
and
add
cmp
cltd
pop
clc
xor
add
xchg
xabort
clc
lret
cmc
xbegin
clc
fldenv
add
out
bound
add
xor
push
mov
xchg
ret
add
push
pop
in
mov
fsubs
add
jle
test
add
adc
add
clc
out
cmp
jne
mov
push
movsl
clc
test
jmp
leave
lock
sahf
rcl
lret
mov
and
pop
clc
push
pop
fmull
add
add
add
out
add
add
scas
mov
aad
xlat
dec
pop
mov
clc
jp
add
dec
dec
leave
lods
xlat
and
add
clc
ret
es
mov
add
xchg
in
sub
add
dec
out
cmp
xchg
out
cmp
inc
clc
dec
lret
cmp
add
fwait
jge
mov
xchg
mov
clc
cmp
add
and
fdivrs
imul
add
add
stc
jae
add
dec
adc
add
push
es
mov
in
jl
push
jne
add
add
out
add
add
or
nop
jmp
ret
mov
push
cwtl
push
fstl
inc
clc
xor
add
dec
out
push
ret
clc
mov
hlt
aam
lods
inc
add
inc
clc
jbe
xchg
and
add
add
xor
add
jecxz
mov
add
int3
sar
add
dec
fwait
std
pop
inc
add
pop
lock
mov
push
clc
lahf
adc
clc
loope
loop
lea
add
xor
add
jo
add
mov
cmp
sti
loope
jnp
xchg
xchg
cmp
xor
add
clc
dec
pop
shr
hlt
inc
clc
cs
test
pop
ds
cltd
int
sub
clc
adc
add
clc
fimuls
cltd
sub
xabort
inc
clc
inc
clc
mov
call
cmp
add
std
push
int
jl
fstp
aaa
add
xchg
gs
mov
mov
cmp
clc
cmp
flds
pop
clc
int
clc
push
add
movsl
clc
push
mov
lods
movsb
clc
ret
clc
dec
dec
adc
add
add
nop
jmp
add
xor
cmpsb
clc
xchg
pop
sti
rcr
scas
push
push
nop
jmp
jb,pn
mov
and
add
add
jbe
add
aam
mov
lret
mov
mov
cmp
bound
add
clc
xbegin
jmp
add
sub
add
lock
nop
gs
fidivrs
add
add
add
add
add
mov
cmp
call
or
jno
add
cmp
sbb
clc
out
push
jp
mov
shlb
lea
xchg
cli
cmp
clc
mov
cld
data16
es
rcr
sub
clc
cmp
mov
add
or
clc
jbe
arpl
add
pop
int3
push
stc
call
mov
xchg
ret
adc
out
adc
int
clc
mov
cmp
add
cmc
dec
sub
mov
neg
dec
mov
mov
add
push
add
lcall
add
fsubrl
mov
add
pop
adc
add
push
nop
jmp
enter
leave
cmp
stc
mov
add
in
incb
and
jmp
add
or
and
add
inc
clc
test
pop
xor
pop
push
add
test
and
or
pop
clc
lods
xchg
lret
add
ret
clc
xor
add
test
add
aam
clc
lods
jnp
shl
clc
inc
clc
xchg
dec
stc
jb
add
push
out
xchg
into
sbb
fnstcw
cmp
clc
into
adc
add
mov
add
xchg
jbe
xor
add
test
mov
lret
lock
mov
dec
fsts
in
pusha
add
loop
add
add
leave
pop
ljmp
and
mov
xchg
ret
add
mov
clc
mov
add
add
pop
movsb
clc
outsl
inc
add
cltd
dec
mov
clc
arpl
add
add
cmpsl
clc
mov
push
add
pop
clc
mov
out
cwtl
movsl
clc
adc
add
push
add
pop
and
adc
clc
pop
mov
add
or
mov
cmp
add
add
clc
lret
jmp
clc
stos
xchg
push
clc
and
add
in
ja
xchg
xor
add
sub
inc
add
lea
icebp
ficoms
inc
add
gs
jb
add
add
mov
add
cmp
sbb
add
loop
test
jp
pop
bound
add
ja
add
add
pop
mov
imull
int
clc
out
pop
int3
daa
clc
fs
pop
xor
add
xor
add
add
or
and
add
add
push
adc
incl
or
sbb
add
dec
push
xor
nop
jmp
add
jb,pn
add
clc
mov
std
and
add
repz
add
add
rclb
jle
mov
outsb
cmp
add
je
inc
add
push
fbld
sbb
jmp
popa
clc
mov
xchg
mov
jge
cmp
add
scas
and
add
add
and
add
cmpsb
clc
pop
pop
inc
clc
iret
and
add
fnstenv
add
sbb
clc
loope
push
test
js
imul
enter
mov
out
sbb
nop
jmp
add
movsb
jmp
clc
pop
repz
clc
mov
clc
xchg
xchg
push
aas
jecxz
ret
clc
add
add
clc
mov
cmp
xlat
and
add
add
shlb
add
add
mov
sbb
stos
xchg
test
clc
adc
add
dec
xchg
dec
icebp
in
pop
fs
out
sbb
mov
jae
add
xbegin
lret
sarb
test
cli
inc
clc
roll
mulb
add
lock
out
cmp
sbb
mov
movsl
clc
adc
add
fsubrl
clc
pushf
fdivs
pushf
fiaddl
jle
dec
incl
test
jl
add
xchg
xor
filds
add
clc
dec
xor
add
jle
das
insl
pop
mov
clc
jl
add
stos
adc
add
xor
add
xchg
xor
add
add
jg
clc
mov
mov
clc
push
mov
add
push
add
inc
add
ret
clc
jl
inc
add
movsl
clc
xchg
sbb
mov
add
mov
clc
loop
mov
popf
cmp
clc
rorl
pop
jle
jbe
sbb
cmp
cmp
dec
add
add
clc
inc
clc
pusha
add
movsl
clc
jl
clc
add
add
add
push
add
lret
cltd
sbb
push
mov
nop
jmp
adc
cwtl
xor
add
lcall
out
cmp
gs
mov
outsb
lret
in
mov
add
add
cmp
cmp
clc
call
xchg
data16
add
add
cli
jbe
adc
add
clc
and
add
sahf
jae
add
add
call
add
pop
sar
clc
clc
aad
add
dec
mov
add
ret
add
push
add
sbb
call
clc
shrl
add
mov
clc
cmp
clc
rcrl
mov
clc
test
jnp
push
jecxz
ljmp
pushf
inc
add
cmp
add
cmp
mov
add
inc
clc
or
pop
loop
popa
add
idivb
pushf
pop
clc
and
add
add
rclb
dec
cmpsl
clc
mov
clc
and
add
add
jno
add
imulb
or
in
testl
aam
pop
mov
fs
and
cmp
add
xchg
or
clc
pop
sbb
in
jnp
add
sub
out
or
cmp
add
cmp
add
cmp
ljmp
jbe
scas
data16
xabort
clc
daa
clc
add
add
add
mov
pushf
jg
push
add
fwait
dec
stos
aas
sub
add
clc
xchg
xor
add
or
add
hlt
push
add
inc
add
bound
add
add
add
shrl
adc
add
inc
add
stos
je
add
mov
pop
hlt
add
xor
add
push
add
ss
cli
xchg
dec
mov
clc
icebp
mov
scas
jmp
jl
sahf
aaa
lds
popa
int3
pop
loopne
popf
inc
add
cwtl
pop
std
or
cltd
push
add
add
arpl
add
call
add
icebp
inc
clc
jnp
add
inc
clc
stos
in
js
mov
xor
add
add
nop
jmp
rol
je
or
outsb
in
neg
jne
sub
loope
lret
lock
aam
clc
mov
lea
addr16
clc
dec
lods
pop
xchg
xabort
nop
jno
add
dec
lret
sub
pop
clc
xor
add
fistpl
movsb
clc
int
cmp
rcl
or
mov
xchg
cli
lods
xchg
and
add
clc
fsubrl
pop
lret
lods
xor
add
lods
xchg
in
xabort
lret
push
iret
xchg
pop
mov
repnz
xchg
ret
add
movsl
xor
add
mov
jg
pop
nop
jmp
add
jl
sbb
xor
add
push
mov
xchg
ret
adc
push
dec
sub
mov
loopne
or
clc
cmp
bound
add
in
test
daa
clc
out
push
and
add
add
mov
mov
mov
arpl
add
add
outsb
and
add
push
add
idivl
clc
flds
add
add
dec
sbb
add
adc
add
add
inc
clc
mov
ja
js
push
add
out
mov
add
clc
out
ljmp
nop
jmp
mov
cwtl
jb
enter
add
cmp
clc
mov
rol
clc
cmp
pop
clc
jp
call
mov
call
fnsave
add
lock
cmp
pop
or
add
add
jg
lret
mov
nop
jmp
add
xchg
fstps
dec
mov
popa
add
aad
add
mov
into
test
xbegin
add
push
jmp
add
in
ja
add
cmpsb
clc
ret
clc
or
jecxz
jb
add
add
imul
clc
add
add
add
out
cmpsb
clc
adc
add
mov
pop
in
leave
dec
arpl
add
clc
enter
shlb
outsl
add
add
mov
clc
fdivs
add
add
inc
add
mov
pushf
cmp
lods
mov
clc
lock
add
loopne
in
push
xchg
mov
add
ljmp
iret
cli
ret
sbb
or
in
popf
mov
mov
xchg
ret
icebp
cs
ret
clc
loop
ja
sub
add
sub
insb
adc
add
xchg
xlat
sar
jbe
enter
mov
pusha
add
lea
fs
adc
add
xor
add
or
push
add
inc
clc
fdivl
add
test
pop
lret
jo
add
push
ret
clc
rcll
ds
repz
push
or
lods
pop
mov
adc
mov
lods
cmp
clc
mov
mov
inc
add
jmp
clc
sar
lret
adc
add
adc
add
aaa
push
add
in
repnz
cmp
xchg
fs
sub
popa
add
sub
adc
add
mov
das
inc
add
out
fidivs
ss
stc
std
mov
xbegin
add
clc
rdtsc
add
push
sbb
clc
ja
xabort
xor
add
push
in
movsl
clc
jg
dec
xlat
dec
mov
xchg
out
into
pop
jmp
cmp
add
adc
add
clc
dec
push
clc
popa
add
clc
lahf
add
add
add
add
add
fs
sub
clc
loop
xchg
jae
add
cmp
or
add
pop
push
popa
add
sbb
and
add
push
insl
lret
arpl
add
lods
xor
add
into
leave
xor
pop
or
dec
xor
add
cs
scas
scas
icebp
daa
clc
leave
mov
add
jp
adc
add
cmp
clc
dec
jne
add
call
add
and
add
xabort
add
sub
jecxz
idiv
jecxz
mov
jp
out
mov
add
nop
jmp
sub
add
clc
xlat
xchg
mov
add
push
add
push
bound
add
add
inc
add
jnp
clc
xbegin
and
hlt
sub
xbegin
fdivrl
add
xchg
pop
clc
adc
add
int
mov
clc
clc
lock
lret
cmp
out
addr16
sbb
pop
mov
aas
push
jmp
ret
adc
mov
gs
pusha
add
scas
mov
or
add
addr16
cmp
add
lahf
sar
shld
mov
add
adc
add
add
xlat
inc
clc
mov
clc
mov
mov
push
add
movsbl
add
adc
add
clc
sub
inc
add
lret
bound
add
clc
dec
xchg
or
clc
das
and
lods
push
add
cltd
mov
clc
rep
mov
add
stos
add
add
cmp
clc
rcrl
sti
and
add
mov
add
adc
push
xor
int
in
mov
sbb
jl
testl
nop
jmp
out
test
rclb
cmp
mov
and
add
and
add
movsb
mov
rcrl
add
int3
push
mov
nop
jmp
add
cmp
clc
xor
add
adc
add
add
sbb
test
into
jmp
add
loop
adc
push
add
push
add
add
add
add
add
push
mov
xchg
ret
sub
loopne
icebp
mov
add
notl
add
cmp
insl
xchg
jmp
nop
mov
clc
sti
mov
add
mov
clc
adc
add
into
xor
add
xchg
push
add
mov
imul
add
clc
cmp
clc
scas
cld
mov
push
rol
clc
push
mov
pushf
jbe
sysexit
repz
add
sahf
and
sahf
test
add
add
or
cmp
xor
add
leave
mov
add
adc
add
clc
or
add
xabort
lock
add
add
es
sar
jo
add
in
jb
add
adc
add
sub
add
and
repnz
ficoms
push
addr16
cmp
and
jns
clc
out
pop
aad
sahf
fwait
bound
add
out
ds
enter
add
daa
clc
mov
daa
clc
xchg
mov
clc
or
add
into
adc
mov
clc
imul
clc
adc
add
pop
daa
clc
inc
add
adc
push
add
jne
mov
lret
nop
jmp
cs
clc
aam
loop
out
sbb
pop
arpl
add
xlat
adc
add
clc
jno
add
add
inc
add
sar
pop
ftst
clc
sub
xbegin
lcall
add
int
adc
in
in
mov
add
mov
fdivrp
or
data16
cmp
clc
das
jo
add
clc
cmp
inc
clc
lret
or
mov
stc
xabort
pop
mov
pcmpgtd
lret
shr
jmp
add
clc
sub
xor
cmc
sub
add
shl
xchg
and
out
pushf
mov
push
mov
clc
or
or
adc
add
add
add
in
cmp
jmp
mov
cs
stc
cmp
clc
xchg
xchg
jns
pop
mov
cmp
fnstsw
add
test
ljmp
add
insb
clc
xchg
or
sti
sar
mov
add
add
add
lahf
aad
clc
xlat
and
add
xchg
in
sbb
dec
int3
sti
iret
fs
outsb
adc
add
fdivl
clc
fstp
mov
idivl
xor
add
add
dec
fcoms
clc
shl
adc
add
sub
jmp
dec
inc
clc
cmc
sub
and
sbb
popf
test
fucomp
outsl
fadd
clc
nop
adc
add
mov
add
or
add
cmp
add
push
dec
dec
stos
movd
clc
fisubrs
add
das
mov
pushf
xchg
fiaddl
clc
adc
add
add
sbb
jmp
lds
sbb
sti
movsl
clc
addr16
fdivrl
adc
add
scas
adc
add
add
nop
jmp
and
dec
in
add
add
add
pop
clc
mov
inc
add
roll
stc
add
hlt
lods
insl
lods
movsl
clc
pop
sub
sbb
gs
cmp
add
sar
push
add
ret
clc
inc
clc
clc
cmpsb
clc
aaa
jo
add
mov
pop
fdivrl
cmp
add
sub
inc
clc
pop
scas
aad
push
add
pop
xbegin
bound
add
clc
xor
add
stc
insb
and
add
add
pop
gs
mov
or
add
insb
stos
pop
mov
clc
push
mov
fistl
mov
add
das
push
jmp
lahf
int
movsb
clc
inc
clc
mov
clc
in
divl
add
sub
jg
sbb
idivb
inc
clc
sahf
mov
clc
sub
es
enter
add
in
cmc
jns
mov
mov
movd
fmuls
addr16
lcall
lock
jmp
lds
ret
jl
lcall
lock
pop
in
mov
mov
in
fcomip
pop
push
pop
mov
pop
xor
add
jae
add
add
jle
push
push
mov
xchg
ret
add
pusha
add
inc
clc
das
sub
add
mov
out
mov
add
stc
popa
add
xlat
xbegin
add
clc
cmp
push
add
nop
jmp
xchg
cs
out
in
push
add
mov
mov
add
testl
cmp
cld
test
fs
xchg
sbb
fldl
and
mov
xchg
ret
ret
movsl
outsb
jp
mov
lret
add
add
stc
aas
push
mov
xchg
ret
movsb
jl
ljmp
or
add
jbe
xchg
enter
mov
clc
sub
add
pop
and
data16
xor
aad
clc
xchg
push
fs
pop
imul
add
bound
add
xchg
or
and
xlat
xor
add
add
jmp
add
xor
add
mov
stos
or
add
das
clc
mov
add
fs
or
nop
sbb
add
clc
das
xchg
mov
add
lahf
fldt
or
leave
sar
jbe
pop
clc
and
adc
add
clc
inc
add
push
push
push
mov
xchg
ret
icebp
leave
insl
adc
add
dec
push
pusha
add
fnstsw
das
insl
aas
ds
int3
fmull
sar
clc
in
inc
clc
imul
lods
mov
push
fisubrs
mov
push
clc
sbb
clc
pushf
lret
jns
add
out
mov
adc
add
inc
add
cli
push
dec
dec
lret
lcall
fists
add
xchg
lret
adc
add
xlat
push
add
jbe
cltd
jnp
repnz
stos
mov
in
sahf
and
add
push
add
mov
add
clc
or
add
clc
jae
add
outsb
fprem1
mov
nop
jmp
mov
add
clc
jp
add
cld
jbe
clc
push
sbb
add
test
lock
add
xchg
test
push
and
add
xor
clc
pop
cmp
push
add
ret
clc
jmp
clc
and
add
cmp
add
inc
clc
inc
add
mov
frstpm(287
clc
push
repz
mov
clc
mov
add
push
jns
ds
cmp
inc
add
mov
pusha
add
popa
add
mov
add
add
loopne,pn
test
lahf
cmp
mov
add
clc
pop
sar
std
fdivl
add
js
clc
std
pop
cmp
insb
cmpsl
clc
push
add
test
dec
pushf
mov
add
and
add
cmp
and
mov
clc
mov
and
add
mov
cmc
xchg
cld
test
pop
insl
jmp
add
add
inc
add
out
cmp
push
add
mov
mov
add
je
xchg
loopne
data16
pop
clc
cmp
add
je
test
movsb
clc
aas
cmp
add
pop
mov
clc
xchg
sahf
stc
cmp
popa
add
sar
add
pop
push
add
ja
in
imul
inc
add
pusha
add
adc
add
test
mov
gs
std
imul
push
add
adc
add
cmpsb
clc
cwtl
dec
movsb
clc
test
outsl
imul
sbb
fidivrl
cmp
inc
add
pop
shll
add
popa
add
fwait
dec
imul
addr16
inc
add
jl
clc
in
cmpsb
clc
jae
add
add
addr16
mov
clc
ret
clc
mov
sub
add
xor
add
clc
lret
clc
and
add
ret
cmp
and
add
or
push
fdiv
jle
in
mov
fsubs
mov
inc
clc
hlt
lahf
jo
add
clc
ficomps
push
mov
nop
jmp
jnp
cwtl
movsb
sbb
ficompl
cli
movsl
clc
xlat
imul
add
loope
imulb
into
hlt
sub
mov
leave
cld
mov
add
jle
pop
pop
push
pop
ret
clc
jae
add
ljmp
or
add
adc
add
add
sbb
inc
and
jmp
add
cs
mov
add
sbb
cwtl
test
inc
clc
mov
pop
js
add
push
add
xbegin
ja
insb
lods
jmp
add
and
add
cs
adc
add
add
scas
mov
clc
jbe
clc
sub
add
lret
scas
cli
mov
or
add
push
add
fmull
movsl
clc
call
jns
icebp
mov
dec
mov
cmp
clc
fcoms
rolb
add
pushf
mov
insl
dec
movsl
clc
clc
in
inc
add
xchg
out
test
adc
imul
mov
aaa
inc
add
mov
popa
out
mov
dec
sub
pop
nop
push
add
aam
lock
add
adc
clc
mov
mov
mov
add
fwait
lods
hlt
aad
add
cmp
sub
insb
xor
add
aas
and
add
add
inc
add
std
pop
xchg
xbegin
add
fcoml
imul
adc
add
repz
add
sub
and
mov
cmp
clc
sub
jae
add
stos
and
fidivs
push
mov
add
ja
in
clc
test
out
push
add
test
jbe
outsl
bound
add
pusha
add
iret
inc
clc
pop
mov
mov
test
xor
clc
cmp
into
clc
int
sbb
clc
mov
ss
cmp
pop
cmp
pxor
loopne
pop
push
add
lahf
rclb
add
add
cld
mov
and
add
dec
dec
dec
mov
sar
clc
fcom
jbe
rclb
mov
das
test
clc
and
inc
clc
jg
mov
add
add
adc
add
clc
out
mov
data16
sbb
push
mov
xchg
ret
fstpl
adc
xchg
bound
add
clc
mov
or
jp
out
mov
movsb
clc
in
jnp
add
jo
add
or
incl
add
sbb
sar
add
repz
jp
test
data16
out
test
jne
nop
jmp
lds
and
pop
fisttpll
lret
push
add
out
cld
inc
add
push
clc
push
add
inc
add
inc
clc
movsl
clc
popf
push
dec
lods
ja
lods
adc
sahf
xchg
and
add
jbe
clc
and
add
in
mov
cmc
cmpsb
clc
inc
add
push
add
pop
in
in
mov
ret
sub
add
int
add
jp
mov
push
push
nop
jmp
fldl
movsb
or
cs
clc
popa
add
negb
clc
ljmp
inc
add
leave
xchg
mov
pop
add
add
sbb
dec
and
add
clc
or
ds
clc
xchg
clc
jl
and
cmp
clc
and
add
cmc
sub
sbb
push
add
sub
movsl
clc
inc
add
jns
sar
clc
iret
push
mov
nop
jmp
test
out
mov
movsb
clc
xchg
clc
inc
clc
push
add
aam
cmp
mov
adc
add
popa
add
mov
push
sbb
and
inc
clc
xbegin
fwait
push
clc
inc
clc
adc
add
add
addr16
aam
xor
add
clc
inc
add
add
mov
clc
cmp
clc
lea
dec
mov
clc
fistpl
stc
dec
jo
add
hlt
mov
clc
mov
add
fwait
push
mov
mov
push
inc
add
das
fldl
add
cmc
je
dec
stos
mov
imul
add
stos
popf
push
popf
sti
push
jne
clc
jmp
clc
dec
mov
xchg
mov
or
adc
add
add
add
push
add
xchg
gs
sbb
mov
pusha
add
xchg
sbb
int3
mov
and
clc
dec
call
mov
xchg
ret
test
clc
dec
jmp
fstpt
movsb
clc
ss
imul
clc
push
mov
clc
xor
add
rcll
add
jmp
leave
imul
sub
fiadds
clc
and
pop
dec
lods
xchg
sbb
push
dec
test
ljmp
fcomip
lods
push
add
inc
add
pop
cwtl
lods
iret
mov
or
out
cltd
imul
loop
data16
int
sub
nop
jmp
cld
movsb
enter
das
pushf
mov
jmp
leave
icebp
add
mov
jae
add
add
add
aad
add
loopne
scas
dec
mov
in
gs
fisttps
add
xbegin
add
mov
bnd
push
add
xor
dec
cmp
daa
clc
in
out
sub
clc
cmp
call
int
aaa
stos
jmp
cmp
arpl
add
outsl
and
add
add
pop
rorb
jae
add
fs
loop
ja
push
add
sub
popf
jg
push
nop
jmp
jb
fisttpll
xor
xbegin
cmpsl
clc
fldl
jne
add
lret
xabort
not
push
mov
xchg
ret
or
add
or
add
clc
dec
mov
jmp
clc
outsb
sete
sar
pop
xlat
xabort
jae
add
int
cwtl
xchg
add
and
add
fs
sbb
jae
add
rorb
clc
mov
pop
mov
not
mov
add
leave
cmpsl
clc
push
clc
pop
cmp
mov
and
jmp
lds
adc
add
int
clc
decb
sbb
add
cli
sahf
pop
dec
pushf
jl
push
nop
jmp
add
sbb
movsb
xor
adc
add
add
add
add
imul
add
add
loop
cwtl
cmp
popa
add
mov
xlat
push
clc
bound
add
fsincos
sub
movsb
clc
js
dec
jmp
clc
stc
fs
es
clc
jo
add
int
movsb
clc
rclb
add
clc
ret
clc
lea
enter
sub
add
test
push
push
mov
xchg
ret
ret
je
cs
dec
xabort
clc
pop
clc
fs
jmp
jmp
clc
mov
add
add
jecxz
mov
and
inc
add
pop
iret
pop
aam
push
xor
nop
jmp
enter
add
aas
mov
add
pusha
add
mov
add
jl
cwtl
pop
rclb
add
jmp
add
jle
testl
imul
push
clc
stc
repnz
clc
out
or
clc
ret
clc
sbb
ja
xor
add
dec
cmp
clc
fimull
stos
call
add
adc
add
mov
cmp
lcall
clc
in
outsb
jge
inc
clc
pop
jne
repz
arpl
add
clc
pop
in
xor
add
add
test
jbe
add
pop
clc
pop
mov
clc
mov
clc
rcll
add
scas
leave
xlat
adc
lcall
pop
inc
add
es
cmp
sti
insb
mov
push
add
add
add
movsl
clc
jle
clc
lods
int
add
rsm
and
inc
clc
test
lea
in
jmp
das
lret
fwait
in
cltd
and
add
dec
imul
mov
nop
jmp
sahf
test
xchg
push
add
pushf
dec
loopne
into
xor
add
gs
adc
mov
es
pop
icebp
clc
adc
push
mov
xchg
ret
leave
jnp
mov
mov
sar
add
test
add
add
xchg
data16
cld
mov
add
ds
aas
test
xor
add
clc
mov
es
fidivs
push
add
nop
jmp
jb
lds
pop
dec
xbegin
sbb
add
clc
dec
lods
sahf
pop
cmp
push
and
add
mov
add
add
scas
xchg
mov
pop
jo
add
out
inc
add
insl
mov
add
add
adc
add
add
int
decl
mov
xchg
ret
xchg
data16
add
add
add
dec
xchg
push
add
adc
add
sti
lcall
hlt
lret
int3
arpl
add
ds
outsb
loop
mov
mov
or
clc
dec
aaa
test
out
imul
sub
inc
clc
adc
add
incl
sti
nop
jmp
ret
lds
adc
push
xor
add
ret
inc
add
std
jmp
clc
inc
clc
add
cs
stos
fs
pop
loop
leave
push
push
pop
outsb
xlat
push
add
loop
push
push
clc
mov
and
ljmp
es
adc
sub
jp
sbb
nop
jmp
add
xchg
sub
data16
xabort
dec
xor
add
sahf
dec
fbld
fnstcw
repz
adc
mov
mov
add
or
clc
addr16
xchg
cmp
std
dec
popa
add
lret
add
add
jne
clc
lahf
push
add
inc
clc
es
sbb
outsl
jmp
clc
in
clc
dec
mov
clc
dec
pop
mov
clc
dec
stos
mov
jmp
popa
adc
mov
add
lods
in
inc
clc
sub
add
add
nop
jmp
bound
jl
mov
enter
test
mov
clc
mov
cmp
mov
mov
push
or
shlb
add
add
inc
clc
sub
xbegin
add
add
rorb
clc
arpl
add
clc
mov
stc
dec
sub
push
sbb
clc
and
add
add
mov
dec
aad
push
mov
ljmp
cld
jl
insl
add
inc
add
adc
add
clc
lcall
adc
add
or
clc
sar
aas
movsl
clc
pusha
add
pop
loop
sub
jg
sbb
or
loop
loop
jb
add
fimull
clc
std
and
add
arpl
add
in
inc
clc
jo
add
jnp
clc
jne
gs
mov
add
nop
jmp
add
fcompl
pop
xor
add
push
mov
sub
clc
jns
xor
cmp
pop
clc
stos
jne
cmp
clc
jl
inc
clc
cmp
pop
clc
repz
push
sahf
cwtl
fsubrl
xor
add
push
mov
push
mov
xchg
ret
ja
std
push
lret
scas
xor
add
mov
nop
jmp
lock
add
or
jo
std
inc
clc
xor
add
clc
sar
lcall
movsl
clc
sub
sub
in
jb
add
in
and
add
add
clc
repnz
cs
clc
push
add
lock
add
or
add
in
test
or
mov
dec
lahf
push
clc
cwtl
jns
clc
gs
fbld
dec
jmp
jecxz
fstps
rorl
cmpsb
clc
f2xm1
frstor
leave
in
insb
mov
jnp
mov
pop
fsubp
clc
mov
cmp
cmc
cmp
pop
sbb
add
in
ja
add
fldcw
clc
int
aaa
call
mov
pop
mov
add
jmp
out
add
clc
mov
popa
add
jecxz
jns
add
jge
clc
jae
add
mov
clc
stos
notb
add
jno
add
clc
in
mov
push
mov
clc
js
ret
clc
sar
repz
mov
add
inc
add
mov
and
add
lret
inc
clc
decl
jmp
popa
mov
leave
adc
and
add
cmp
lods
xlat
mov
clc
sahf
and
add
add
clc
je
inc
add
or
loopne
xbegin
imul
es
push
add
rclb
ss
clc
mov
aad
outsb
and
sub
or
add
nop
jmp
mov
adc
sbb
clc
out
aaa
lahf
sar
and
add
in
xor
add
jno
add
int3
and
add
jo
add
xchg
inc
add
ljmp
cld
push
clc
movsl
clc
adc
add
push
add
inc
clc
bound
add
push
in
mov
add
sbb
popf
pop
sahf
stos
cmpsb
clc
jb
add
add
add
add
clc
sbb
std
pop
testl
into
gs
movsl
clc
into
sbb
add
loope
cmp
sub
nop
jmp
test
mov
add
add
sahf
loope
xchg
or
add
testb
pavgb
loop
xchg
pop
stos
cmp
add
lods
push
add
lcall
addr16
fcmovnu
xor
push
add
lcall
clc
shl
clc
pop
clc
outsb
mov
add
bound
add
dec
lock
cwtl
mov
jmp
inc
add
mov
cmp
add
mov
jmp
add
movsl
cmpsb
clc
push
add
pop
cltd
or
sbb
cs
add
ret
repnz
dec
mov
sbb
inc
and
jmp
sahf
or
add
leave
dec
dec
add
add
xor
add
push
call
nop
jmp
or
and
add
or
sti
cmp
xchg
nop
insl
pop
leave
mov
inc
clc
xchg
icebp
cmp
pop
outsb
push
lods
nop
jmp
leave
fisttpll
push
lret
cmp
nop
jne
sahf
xlat
fbstp
scas
test
add
add
sbb
cltd
mov
sti
pop
clc
xchg
cmc
and
add
xor
add
rcrl
add
das
cli
outsb
jae
add
mov
mov
xchg
ret
adc
add
bound
add
push
pop
jo
add
inc
add
inc
add
fwait
and
add
clc
mov
add
cli
mov
add
add
dec
cmpsb
clc
pop
sar
clc
and
add
mov
mov
push
xchg
or
repnz
hlt
pop
ja
aam
test
cwtl
inc
clc
mov
js
sar
pop
xchg
pop
pop
imul
sbb
out
pop
int3
icebp
ret
clc
xchg
push
add
cmp
clc
icebp
mov
mov
cmp
add
add
cmp
clc
push
add
lods
bound
add
into
mov
or
mov
clc
dec
sub
das
add
add
add
add
clc
es
sub
add
or
into
int3
push
push
add
pop
cli
fsubs
add
cmp
leave
inc
clc
sub
clc
cld
rcrb
cmp
clc
push
sbb
mov
iret
mov
incl
js
sbb
mov
in
xchg
jecxz
hlt
sub
clc
fcompl
clc
imul
add
sub
dec
fcmovnb
clc
sub
pop
insb
mov
imul
fneni(8087
clc
sub
add
clc
repz
add
adc
add
adc
add
ljmp
push
mov
xchg
ret
or
cmp
push
pop
nop
jmp
mov
clc
add
std
and
jo
add
pop
dec
mov
sub
clc
add
daa
clc
jge
fwait
cmp
mov
add
clc
into
cli
mov
clc
push
add
nop
jmp
add
push
add
addr16
loop
adc
add
mov
mov
xchg
insb
lods
cmp
add
divl
and
add
add
clc
cmp
adc
add
int
call
mov
mov
sub
clc
cli
jne
lahf
push
xlat
sub
add
add
clc
sub
add
pop
pop
jb
add
ja,pt
add
cli
push
add
test
or
insb
pushf
imul
movsb
clc
mov
push
add
push
push
add
fisttpll
sub
clc
jnp
pop
clc
imulb
clc
jns
sbb
outsl
cmp
mov
xchg
cmp
add
inc
clc
int
loope,pt
cmp
clc
out
adc
add
add
add
add
mov
test
xchg
add
add
stos
mov
add
inc
add
das
jns
loopne
pop
outsl
hlt
sub
mov
ljmp
push
mov
xchg
ret
add
clc
and
add
add
jae
add
cmp
into
xbegin
clc
mov
mov
xchg
incb
add
jb
add
in
inc
clc
mov
clc
mov
add
mov
xchg
pop
mov
add
adc
clc
and
add
sar
bound
add
clc
xchg
and
add
lret
clc
bound
add
sbb
mov
add
add
stc
loopne
fldenv
add
scas
pop
and
add
clc
aam
int3
setge
add
cmpsb
clc
leave
xchg
sub
add
pop
jp
push
add
adc
add
fstps
pushf
pop
clc
sti
ret
clc
loop
jg
cmp
add
sar
movsl
clc
add
test
out
lahf
fstpt
add
pop
adc
add
cmp
cmpsb
clc
push
sbb
dec
push
mov
addr16
mov
cmp
jmp
inc
clc
cmp
add
xbegin
test
insb
inc
insb
insb
nop
jmp
gs
adc
clc
cltd
je
mov
nop
jmp
bound
ljmp
divl
add
iret
push
add
enter
add
jns
xchg
sub
mov
roll
add
mov
leave
jmp
roll
add
add
scas
push
add
int3
clc
sbb
add
in
cmp
add
add
add
mov
clc
mov
cmp
cmp
inc
clc
pop
std
fcompl
xor
add
fidivl
add
push
add
fwait
dec
nop
jo
add
pop
mov
mov
sub
inc
add
fisubs
clc
push
lret
fisttpll
clc
cwtl
pushf
jg
clc
mov
ja
addr16
push
add
scas
sbb
icebp
nop
jmp
icebp
rcr
add
mov
add
insl
push
add
nop
jmp
insl
xor
add
xabort
xchg
outsl
ret
add
in
stc
sub
clc
lods
adc
add
clc
jle
add
sub
add
or
add
sub
adc
add
outsb
xor
add
add
mov
ret
clc
lret
jmp
fcmove
or
clc
scas
push
add
inc
add
or
mov
clc
incb
add
cmp
clc
xlat
insl
dec
mov
outsl
jge
clc
dec
cltd
sahf
push
xor
push
mov
xchg
ret
ja
in
xchg
inc
add
clc
lcall
push
clc
shr
or
in
or
popf
mov
in
ret
jno
add
loope
cmpsb
clc
jge
daa
clc
jns
paddusb
clc
loopne
ret
clc
sub
test
fs
push
jno
add
or
clc
in
rcl
and
add
add
insl
or
int3
sbb
cmpsl
clc
add
add
cmp
clc
dec
scas
sahf
cmp
add
xlat
push
add
xbegin
clc
loopne
mov
shlb
bound
add
mov
add
frstpm(287
clc
mov
clc
fs
cmp
flds
sbb
leave
adc
shll
jae
add
add
lods
jno
add
in
jno
add
mov
std
iret
mov
clc
data16
mov
xlat
pop
mov
add
add
nop
jmp
cld
ja
insl
inc
clc
out
cmp
jae
add
clc
clc
jno
add
je
nop
jmp
movsl
ja
mov
cltd
leave
push
cmp
clc
inc
clc
dec
lods
pop
add
add
clc
mov
cli
das
mov
fnstsw
sbb
fstl
clc
mov
adc
add
or
je
mov
clc
jnp
add
leave
shlb
push
add
push
popa
add
mov
cld
int
mov
jmp
gs
add
xlat
mov
sar
fiadds
add
sar
call
push
mov
xchg
ret
je
inc
clc
mov
mov
paddb
test
popf
xchg
cmp
pop
xbegin
fsubl
out
leave
lahf
mov
push
clc
xor
gs
cmp
cmp
dec
push
mov
xchg
ret
ja
add
mov
add
cwtl
push
dec
in
cmp
mov
xchg
ret
ret
fisttpll
out
mov
add
mov
mov
add
push
push
mov
xchg
ret
js
jnp
in
sub
cmp
add
fimull
pop
fnstcw
ds
push
adc
add
clc
lret
xchg
stc
fisttps
dec
cld
in
pop
std
rcl
add
add
jne
jbe
fiadds
add
nop
inc
add
pop
and
mov
fwait
cmp
or
clc
dec
add
add
jge
test
mov
mov
add
xchg
arpl
add
add
xchg
in
xbegin
mov
xor
add
add
add
jne
clc
leave
bound
add
push
mov
xchg
ret
icebp
mov
insb
faddl
stc
jg
add
ret
clc
gs
int
mov
nop
jmp
jnp
inc
or
xor
xor
and
lret
xchg
imull
dec
popf
iret
xchg
inc
clc
mov
and
mov
cmpsb
clc
roll
clc
cmp
add
int3
jno
add
fwait
adc
add
sub
sub
xchg
daa
clc
rclb
add
cmp
mov
add
out
pop
and
icebp
insb
mov
and
add
sar
clc
pop
clc
popa
add
pop
xor
mov
in
push
add
mov
clc
pop
sbb
not
push
fstp
in
insb
add
add
gs
out
xor
add
clc
outsl
outsl
pop
jne
cmpsl
clc
sub
sahf
sbb
dec
out
xabort
mov
add
clc
fimull
lods
lods
gs
xor
clc
push
clc
pop
sub
fwait
or
add
mov
sbb
add
movsl
clc
dec
dec
js
dec
mov
sbb
incl
lds
add
imul
mov
loop
and
add
rcrb
add
out
pop
je
lret
add
icebp
dec
mov
xor
add
clc
push
clc
xor
add
xor
add
add
add
add
mov
nop
jmp
icebp
in
fstpl
xor
inc
clc
dec
sbb
pop
jb
add
inc
clc
mov
add
add
out
mov
lods
incl
add
lcall
clc
dec
test
push
add
sub
xchg
push
add
mov
fldl
add
fnstenv
dec
in
das
push
sbb
xchg
ret
add
add
clc
daa
clc
outsl
out
xchg
repz
add
add
cmp
clc
dec
clc
cmpsb
clc
sbb
add
jae
add
sbb
movsb
nop
jmp
je
fldl
adc
ljmp
add
add
add
es
pop
fwait
outsb
push
add
push
add
lock
adc
add
add
add
xor
clc
fwait
pop
in
mov
stos
insl
push
push
loop
ljmp
cs
je
add
aaa
in
insb
push
add
fadd
clc
and
add
jae
add
adc
add
sbb
test
popf
data16
arpl
add
frstor
clc
and
add
aaa
shlb
cmp
pop
xor
add
clc
jp
out
xlat
clc
iret
push
daa
clc
call
mov
add
cmp
nop
mov
clc
pop
xor
int3
push
add
mov
outsl
test
mov
clc
dec
cmp
add
mov
ss
cmp
add
vmread
add
cltd
add
add
sahf
lcall
adc
add
ret
clc
das
fcmovne
sbb
dec
stos
outsl
xchg
outsl
add
incl
add
add
or
dec
jo
add
mov
insb
pop
clc
lods
int
clc
jns
clc
xbegin
add
mov
mov
incl
enter
inc
add
sarl
ret
clc
fistpl
jmp
or
lock
popl
inc
add
repnz
pop
pop
int3
outsb
inc
add
inc
add
mov
inc
clc
pop
test
clc
xchg
jo
add
clc
jb
add
test
add
rolb
add
cmp
popf
cmp
xlat
mov
add
or
add
push
dec
nop
jmp
xor
cwtl
add
cld
add
repnz
call
jnp
lds
add
add
mov
sar
or
clc
nop
clc
dec
pop
mov
xchg
push
jge
lret
std
jbe
clc
repnz
inc
clc
loop
loop
mov
fdivl
jle
clc
push
clc
mov
mov
push
mov
xchg
ret
cmp
push
and
push
adc
add
add
loop
jge
cs
dec
test
bnd
add
add
xor
xchg
pop
fisubrl
add
mov
nop
jmp
gs
ja
fst
sar
cmp
jmp
clc
ss
jne
nop
jmp
jb
leave
repnz
arpl
leave
add
xchg
test
fs
xchg
push
and
add
inc
add
push
add
xbegin
clc
leave
lcall
rcl
mov
add
add
add
add
cmc
aam
shl
clc
push
fstpt
in
pushf
mov
clc
loop
sar
clc
xchg
mov
push
add
sbb
add
fcomp
or
add
dec
fwait
mov
add
pop
xchg
jge
or
clc
xchg
test
sub
dec
pop
enter
pop
mov
and
add
add
inc
add
sub
mov
xchg
mov
jo
lcall
fstpl
movsb
dec
aaa
inc
clc
cmp
nop
jmp
lds
enter
mov
mov
add
push
nop
jmp
jl
leave
add
adc
clc
dec
xabort
clc
jge
clc
imul
clc
ds
clc
fstl
aad
int
cmp
mov
shlb
insl
mov
clc
lahf
in
inc
clc
pushf
mov
outsl
test
adc
add
ret
clc
daa
clc
incl
fnstcw
and
cld
add
out
jg
and
add
sahf
or
push
mov
clc
mov
aam
lods
or
daa
clc
pop
rcrb
sbb
rclb
clc
sbb
jmp
add
mov
fcmove
mov
sti
mov
sub
add
push
test
cmpsl
clc
fmul
pop
mov
push
sti
std
adc
add
clc
mov
xchg
adc
cs
sti
mov
add
mull
xor
add
push
fwait
jle
push
add
cmpsb
clc
inc
add
jg
sub
hlt
mov
xor
add
dec
mov
add
add
clc
sbb
clc
test
loop
add
add
mov
pop
dec
sub
clc
loop
ret
clc
jne
clc
aas
jbe
gs
sub
hlt
shlb
add
add
mov
push
cmp
popa
add
adc
add
movsb
clc
adc
add
fdivrs
clc
jl
mov
sar
xlat
mov
cmp
into
adc
add
add
sbb
mov
nop
jmp
add
aaa
bound
add
cmp
outsb
fnstenv
das
inc
add
nop
js
add
arpl
add
add
mov
add
and
add
or
jl
stos
insl
mov
push
clc
xor
xchg
lret
clc
jne
jge
clc
cltd
jp
stc
pop
sarl
call
jmp
mov
hlt
das
sub
mov
nop
jmp
leave
or
leave
mov
add
mov
push
ret
and
xchg
ret
inc
movsb
sub
jle
test
lock
mov
xchg
ret
jl
hlt
inc
clc
jp
or
addr16
sbb
clc
sar
jmp
clc
testb
dec
lret
mov
jo
incl
vpcmpeqd
push
add
in
std
cmp
cmc
cmp
xchg
arpl
add
mov
pop
inc
clc
out
aam
clc
icebp
mov
add
adc
add
jne
add
leave
add
add
add
inc
add
dec
adc
add
scas
rcrl
mov
nop
jmp
add
add
in
sub
clc
in
faddl
ficoms
jg
xlat
pop
sub
xchg
add
add
add
add
add
pop
dec
roll
add
int3
adc
add
adc
xor
clc
imul
popa
add
sbb
clc
pushf
xchg
jl
fstpt
xchg
divl
add
bnd
add
clc
xor
add
add
jecxz
lret
and
add
add
add
mov
add
sbb
clc
push
clc
adc
add
mov
add
loope
sbb
sub
cmp
push
icebp
dec
jp,pn
cmp
dec
sub
push
loope
and
add
mov
add
and
add
clc
push
dec
pop
push
popa
push
mov
xchg
ret
adc
xor
dec
or
cli
fs
or
sbb
add
add
fmul
loope
and
mov
mov
add
push
add
pop
fmul
inc
clc
xor
add
clc
dec
inc
clc
mov
add
icebp
jl
clc
inc
clc
outsb
push
add
cmc
ss
das
mov
fs
popf
push
mov
add
add
jnp
clc
mov
clc
sar
xor
add
clc
cmp
add
add
xor
or
xbegin
rclb
call
shrl
in
ds
add
jo
add
xbegin
add
jne
xchg
insl
rorl
add
push
inc
nop
jmp
or
or
xchg
mov
addr16
outsb
jmp
out
int
adc
add
mov
test
jmp
test
cmp
add
icebp
mov
sar
ss
cmpsb
clc
shrl
and
add
clc
lods
pop
loop
dec
push
push
cli
cmc
fistl
out
shlb
outsb
cmc
imul
sti
pop
sub
clc
fstl
das
or
mov
xchg
cmpsl
clc
movsl
clc
stc
cmp
sar
clc
add
mov
test
add
add
decl
mov
call
out
fldl
movsl
clc
mov
and
push
clc
movsl
clc
adc
inc
nop
jmp
inc
mov
mov
clc
cmp
jns
sub
scas
push
clc
push
add
sar
clc
sbb
cmp
add
das
jae
add
clc
mov
dec
push
mov
nop
clc
xchg
mov
pushl
lock
movsb
popa
add
dec
fsubs
clc
mov
cwtl
cmp
out
test
es
push
ja
sbb
clc
mov
add
xchg
lret
mov
add
xor
add
add
or
cmp
adc
sub
mov
fwait
nopl
add
add
and
add
mov
nop
jmp
xor
inc
clc
in
mov
add
add
clc
ret
clc
stos
loop
mov
je
add
fstp
aaa
test
ret
nop
jmp
icebp
popa
add
test
outsb
sub
clc
sub
xchg
jo
add
mov
jnp
clc
fdivrs
add
mov
sar
nop
inc
clc
jnp
inc
clc
insb
sub
push
mov
xchg
ret
add
push
clc
lahf
cmp
into
loope
pop
imul
clc
scas
lret
stos
enter
add
mov
add
das
xabort
cmp
add
in
cld
sahf
out
cmp
sahf
fmull
push
mov
pop
or
jecxz
call
fcoml
aad
push
adc
clc
addr16
inc
clc
pop
call
adc
add
std
ffree
clc
xrelease
xchg
or
add
push
insb
xchg
pushf
adc
add
clc
mov
clc
adc
add
add
sahf
mov
pushf
iret
dec
pop
rorl
mov
clc
fwait
test
inc
clc
xchg
xabort
xchg
and
push
outsb
gs
lret
add
add
add
test
clc
xabort
mov
inc
add
in
out
or
clc
data16
test
mov
add
inc
nop
jmp
xchg
adc
test
push
jmp
and
add
test
add
das
out
mov
jp
jecxz
sbb
gs
gs
xlat
into
sbb
insb
mov
fists
xchg
jns
mov
and
add
add
xchg
cmpsb
clc
mov
data16
jge
mov
add
std
mov
fisubs
add
scas
insl
cli
dec
test
mov
clc
xor
add
clc
and
xbegin
add
add
xchg
ja
push
add
ss
clc
sar
clc
inc
clc
call
outsb
outsb
call
fs
cmp
add
cmp
mov
stos
and
xchg
ret
add
shll
add
mov
jns
pushf
pop
mov
add
push
adc
ja,pn
add
clc
sti
inc
add
punpckldq
add
clc
sbb
nop
jmp
fstps
test
xor
add
and
push
mov
xchg
ret
or
add
push
add
xchg
stc
mov
xabort
jne
nop
jmp
jb
mov
lret
sbb
xabort
aam
and
add
push
add
xchg
jbe
clc
adc
clc
and
add
add
add
add
cmp
clc
cmp
clc
fwait
push
call
sbb
nop
jmp
aaa
mov
js
test
cs
jg
clc
fmuls
mov
xchg
scas
sub
push
inc
clc
addr16
xchg
nop
sar
test
sar
inc
add
jb
add
pop
lock
dec
cmp
clc
test
popf
fidivl
add
fwait
incb
cmp
clc
or
add
add
rcrl
outsb
mov
int3
das
jnp
add
jno
add
clc
sbb
sub
jmp
rcll
movsb
clc
mov
xchg
push
add
loope
sarb
sbb
dec
stc
mov
sbb
filds
or
gs
clc
js
dec
aam
cmpsb
clc
fadd
clc
jg
syscall
clc
add
or
sub
mov
nop
jmp
leave
mov
sub
clc
push
add
push
sub
mov
add
xor
add
pop
mov
add
clc
dec
and
add
mov
inc
clc
sub
add
clc
mov
pop
or
out
push
add
test
inc
clc
int
cmp
jne
push
ljmp
clc
jmp
or
add
mov
xlat
push
clc
negl
sub
add
lcall
clc
inc
add
out
pop
aas
xlat
push
add
mov
test
mov
mov
ds
into
inc
add
sub
add
loop
sub
clc
mov
pop
out
cmp
clc
jo
add
or
clc
inc
clc
mov
clc
arpl
add
cmp
add
add
push
nop
jmp
cmp
insl
popf
xor
pop
clc
int3
mov
mov
mov
or
clc
rorb
leave
cmp
clc
out
adc
add
add
stos
dec
cmp
cmp
cmc
loop
sub
add
push
add
loop
cmp
clc
mov
mov
sbb
inc
add
pusha
add
outsl
mov
nop
jmp
ja
mov
add
xchg
enter
add
add
mov
jae
add
mov
loopne
adc
loopne
rol
clc
cmp
pop
outsb
pop
ret
clc
cld
add
cltd
pop
fucomp
xchg
add
add
jnp
mov
nop
jmp
mov
lcall
call
incl
gs
dec
and
add
cmp
dec
sub
call
mov
xchg
ret
or
jnp
cltd
repz
xchg
lods
push
cmp
daa
clc
leave
xor
call
add
mov
add
ret
fs
ja
sbb
add
clc
cs
mov
jmp
adc
insl
leave
sub
mov
xchg
ret
jb
js
es
cmp
add
mov
popf
aaa
sub
rclb
ds
add
cld
lds
clc
nop
es
cltd
dec
jnp
sti
pop
sti
fisttps
adc
add
clc
inc
clc
sbb
or
clc
sub
je
shr
xchg
cmp
clc
sbb
mov
add
fwait
jae
add
cmpsl
clc
into
jp
inc
clc
or
in
fwait
daa
clc
rcl
imul
mov
adc
add
clc
aas
lock
aaa
repz
cli
cmp
xchg
cmpsb
clc
adc
jnp
daa
clc
int3
lahf
mov
sub
add
lds
mov
cmp
add
in
xor
add
sub
loope
sbb
clc
xor
add
dec
jle
test
inc
clc
sub
jl
mov
clc
repnz
mov
add
inc
cld
movsb
leave
and
add
pop
jb
add
into
hlt
jno
add
jb
add
add
push
nop
or
clc
cli
rolb
add
add
dec
dec
xor
in
dec
pop
icebp
jg
xchg
pushf
lret
shlb
add
stos
push
add
sub
add
pushf
fildll
or
add
adc
dec
jge
jbe
movsl
clc
mov
clc
fs
cmp
xor
and
dec
pop
ret
clc
ljmp
add
add
push
pop
cmp
shlb
pop
call
add
lds
loop
filds
add
add
sar
clc
sti
leave
jo
add
mov
call
incl
clc
cmp
and
add
clc
stos
and
add
mov
add
stos
lahf
frstor
add
sbb
clc
out
cmp
pop
cs
inc
jb
nop
jmp
adc
js
dec
xchg
mov
add
or
mov
add
std
cli
iret
loope
shr
sbb
divb
push
stos
mov
clc
jmp
int3
out
clc
iret
ds
clc
pop
lahf
decb
loop
and
cmp
add
cs
pop
hlt
out
cmp
fwait
hlt
pop
mov
lcall
xor
inc
bound
out
movsl
jp
in
test
fstl
neg
cmp
cmpsl
clc
and
jne
ljmp
cmp
nop
cltd
and
add
clc
cltd
insl
paddusb
clc
mov
pop
cs
lea
cmpsl
clc
adc
add
cwtl
push
clc
xor
add
clc
and
cs
sbb
dec
std
ss
add
mov
add
clc
mov
add
add
add
jbe
and
ss
out
lea
sub
add
fstl
clc
mov
cmp
mov
rclb
clc
jb
add
clc
pop
sar
leave
xor
add
inc
clc
pop
push
add
shlb
loop
and
popa
add
mov
adc
add
nop
ror
sub
inc
clc
loop
cs
clc
dec
adc
add
pop
clc
cmp
or
clc
cmp
gs
cmp
clc
repnz
jmp
clc
mov
clc
out
mov
pop
clc
arpl
add
xor
add
lea
xchg
std
inc
add
fldl
mov
adc
jmp
add
xlat
sbb
add
add
jle
add
mov
clc
lret
clc
xchg
pop
push
clc
sbb
clc
jne
add
dec
or
sbb
clc
divb
imul
add
mov
add
clc
mov
clc
mov
add
bound
add
fmuls
sub
clc
mov
pop
repz
add
mov
and
add
push
push
and
xchg
ret
fldcw
jnp
out
addr16
testb
add
hlt
lret
stc
fildl
add
push
or
pop
mov
nop
jmp
add
fistps
sar
xchg
sarl
clc
inc
clc
imul
xchg
js
sub
and
iret
jle
add
xchg
xchg
push
cmp
ficoml
clc
and
add
lock
and
lods
cmp
test
lock
jl
pop
clc
movsl
clc
mov
std
mov
clc
lret
rclb
clc
loope
lock
add
fstpl
daa
clc
test
nop
add
add
jecxz
mov
sbb
clc
push
xchg
pop
clc
in
pop
popa
add
or
movsl
clc
insb
mov
add
fistl
daa
clc
loopne
cld
mov
shlb
add
push
pop
mov
add
es
push
mov
clc
test
sub
imul
add
outsb
pop
cmp
ficoms
fstp
lock
test
ljmp
gs
fsts
and
jmp
mov
enter
test
xor
add
in
sar
push
nop
jmp
xchg
cld
cs
add
adc
add
aaa
cmp
je
add
add
pop
jbe
xor
xchg
add
clc
stc
and
add
clc
add
add
cli
pop
es
jecxz
mov
jns
testl
jg
arpl
add
add
inc
clc
jecxz
lcall
pop
jno
add
pop
mov
jns
mov
clc
sub
jno
add
stc
jae
add
pop
jmp
fcoms
add
xbegin
mov
clc
jl
dec
and
add
out
fcomps
add
pop
pop
sar
imul
sti
inc
add
inc
add
cmp
arpl
add
dec
mov
call
nop
jmp
lcall
jne
cmp
lcall
loop
push
xor
add
push
add
xchg
call
jmp
xchg
mov
movsl
aaa
addr16
loop
popf
ja
add
sar
mov
sub
mov
push
pop
xchg
imulb
es
pop
popf
sar
lods
lods
fsts
jb
add
adc
add
add
add
ret
clc
jne
add
shr
adc
add
cli
ja
cmp
jne
push
mov
add
adc
add
sbb
ljmp
mov
gs
clc
and
add
add
xchg
out
xor
add
pusha
add
push
add
lock
xor
clc
add
add
push
fldt
int3
nop
or
xchg
enter
xbegin
add
in
cmp
add
sub
clc
or
add
add
cmp
clc
inc
add
mov
repnz
clc
cmp
imulb
shll
add
clc
lcall
jmp
inc
lock
jnp
in
pop
pushf
add
dec
sub
sarb
and
add
clc
test
clc
leave
hlt
sbb
clc
xor
add
dec
nop
jns
pop
dec
test
sbb
clc
cmp
jae
add
es
icebp
stc
pop
sub
es
cmp
mov
nop
jmp
mov
add
ret
clc
inc
clc
mov
clc
mov
dec
test
mov
push
add
clc
lret
lret
add
fs
pop
lods
jg
xchg
sbb
sub
cmp
jg
sar
rcl
jo
add
mov
clc
std
ror
out
cltd
repnz
add
push
add
mov
clc
sar
cltd
mov
add
nop
jmp
or
and
sbb
arpl
add
mov
aaa
push
add
dec
inc
add
pop
xlat
test
lret
imul
insl
mov
dec
mov
into
incl
mov
cwtl
movsb
ja
sub
clc
sbb
mov
add
cwtl
int3
popa
add
stos
push
xchg
push
sar
adc
add
clc
mov
sub
pop
jo
add
int
add
jbe
clc
push
add
pop
aad
add
inc
clc
dec
rcll
add
mov
clc
int3
in
jb
add
xchg
or
xchg
in
push
int
add
mov
add
movsb
clc
insl
mov
out
in
xor
clc
fstps
clc
and
add
aas
xor
add
add
clc
dec
ja
add
repz
cld
or
sub
and
add
or
out
add
add
and
add
xchg
xor
add
clc
dec
xlat
fdivr
pop
push
jmp
incl
insl
xchg
add
aaa
add
xchg
push
das
xchg
cld
or
add
inc
clc
cmpsl
clc
cltd
jg
insl
test
clc
out
int
fidivl
add
push
pushl
nop
jmp
add
lods
aas
repz
add
add
clc
jl
clc
or
jl
clc
add
add
clc
and
add
clc
xor
add
pop
clc
sbb
add
sti
push
add
fdivrl
clc
inc
add
aad
xchg
test
aad
add
jne
and
add
add
jecxz
cmp
clc
insl
jnp
add
in
dec
gs
cwtl
rcl
and
add
clc
sub
call
add
xchg
mov
clc
or
clc
xbegin
sahf
jo
add
mov
nop
jmp
add
add
clc
sbb
jmp
pop
call
add
mov
or
aad
sbb
add
jne
inc
clc
xor
cmp
clc
imul
clc
push
add
das
clc
nop
and
add
outsl
aam
jnp
add
add
add
push
add
loope
clc
inc
clc
imul
add
jmp
or
add
xor
imul
clc
adc
add
add
nop
jmp
adc
mov
mov
mov
sub
push
nop
jmp
adc
inc
add
sar
clc
xor
xchg
clc
movsl
clc
mov
shlb
xchg
dec
fsubl
cwtl
adc
add
das
xchg
cmp
and
add
add
mov
add
ja
add
in
enter
add
push
add
or
leave
pop
icebp
ret
mov
xor
clc
das
popf
in
adc
add
addr16
dec
sbb
xbegin
sbb
daa
clc
daa
clc
pop
xchg
lret
add
inc
clc
inc
add
push
sbb
adc
lcall
and
sub
bound
add
mov
add
clc
inc
add
add
push
clc
in
jecxz
hlt
aaa
fsts
sub
mov
mov
xor
add
clc
rcll
inc
add
mov
repnz
dec
mov
bound
add
clc
lock
cs
dec
ljmp
lds
rorl
clc
mov
out
dec
outsl
sbb
adc
xchg
adc
add
clc
lock
cmp
loope
xabort
add
lahf
add
add
clc
xchg
mov
lods
xor
das
sbb
mov
push
add
pop
push
add
data16
out
inc
clc
popa
add
daa
clc
cmc
jp
outsl
cwtl
fsts
add
clc
cmp
add
insl
mov
or
add
xbegin
xabort
mov
dec
pushf
xchg
xchg
and
sbb
add
push
mov
xchg
ret
lock
add
cmc
mov
add
int
add
inc
clc
aas
lea
mov
dec
aaa
push
add
in
fsubrl
add
shll
add
arpl
add
daa
clc
in
pop
and
add
clc
pushf
adc
or
xabort
clc
lock
clc
in
push
add
test
das
mov
clc
pop
std
mov
mov
imul
nop
jmp
add
bound
int3
xor
clc
fistpll
xchg
mov
aas
imul
sar
cmp
push
add
data16
fdivrs
inc
add
decl
test
jmp
leave
lcall
jg
clc
pushf
xchg
mov
clc
adc
cli
call
add
jl
xor
add
clc
mov
add
sub
clc
fstp
push
add
add
imul
imul
add
add
xchg
jl
add
fisttpll
add
imul
add
clc
fwait
cmp
mov
shrl
stos
adc
and
add
inc
clc
sar
clc
int3
or
sub
sbb
clc
lods
cmpsb
clc
dec
aad
sub
push
call
push
insl
frstor
loope
adc
add
clc
push
add
xor
add
mov
add
jo
add
clc
lret
mov
clc
pop
pop
xchg
cmp
push
push
mov
xchg
ret
gs
loopne
out
testl
aas
push
out
lret
clc
out
data16
xor
add
dec
xor
lea
ja
add
jge
xchg
sbb
hlt
add
jbe
stos
fstpt
add
jbe
clc
std
leave
pop
xor
add
inc
clc
fwait
push
jno
jmp
mov
lret
pop
cs
test
int3
fnstcw
and
add
cmp
add
inc
clc
cmp
jmp
clc
sub
or
mov
xchg
fstpt
out
das
in
cld
cld
xor
add
add
jmp
repz
add
insl
xor
add
clc
cmpsl
clc
jg
clc
clc
cwtl
int3
pop
mov
inc
out
lcall
lds
push
adc
add
sbb
lret
cmpsl
clc
mov
fldl
xchg
ret
adc
cs
sar
clc
mov
inc
clc
jb
add
add
outsl
inc
add
xor
add
add
ljmp
rorl
stos
shll
add
sbb
inc
jae
dec
test
mov
clc
arpl
add
xor
add
clc
mov
outsb
incb
lcall
add
fists
add
sub
add
fcmovnbe
popf
or
clc
add
loop
jo
add
imull
clc
dec
dec
and
add
mov
aam
cli
and
add
sar
cli
inc
add
cmp
outsl
pop
ja
clc
push
sub
add
fs
mov
clc
push
jno
add
add
hlt
and
add
clc
xbegin
sbb
mov
das
cmpsb
clc
fisttpl
add
das
sub
clc
leave
in
mov
dec
imul
mov
clc
mov
inc
clc
movsl
clc
mov
add
cmp
pop
mov
mov
repnz
dec
loopne
cmp
add
repz
mov
clc
bound
add
and
add
lea
push
stos
bound
add
xor
add
aas
xchg
cmpsl
clc
daa
clc
out
repz
in
movsb
clc
dec
cmp
fdivl
fwait
imul
nop
jmp
xchg
mov
gs
add
lahf
pop
clc
sub
add
mov
clc
mov
sub
xchg
push
scas
sub
add
push
frstor
push
mov
xchg
ret
mov
clc
or
mov
push
add
clc
imul
push
mov
bound
add
jmp
add
add
lds
lds
popl
cmp
clc
hlt
inc
add
dec
pop
clc
fs
out
fcomp
xor
add
ret
inc
clc
cmp
in
and
add
cli
pop
jecxz
leave
ss
mov
pusha
add
jg
cs
xor
or
pop
ljmp
mov
xchg
xor
clc
nop
pop
mov
add
xor
add
clc
popf
mov
dec
jp
clc
stos
out
mov
dec
shl
lods
fisttpll
clc
in
loop
mov
cli
dec
mov
xor
add
push
add
jo
add
push
add
lea
icebp
nop
jmp
inc
jb
in
lds
bound
add
cmpsb
clc
pushf
or
sti
into
and
add
adc
add
aad
add
xchg
mov
sti
pop
cmpsl
clc
or
push
movups
add
jns
pop
gs
jecxz
jnp
clc
xbegin
sub
sbb
add
in
push
add
inc
clc
and
jg
clc
lret
and
add
add
add
clc
dec
push
add
test
test
clc
sti
push
add
add
repnz
add
inc
add
clc
and
clc
movsb
clc
fadds
add
sub
adc
mov
shlb
clc
jge
clc
test
es
aad
fstpl
adc
lcall
imul
imul
inc
add
adc
add
clc
stos
inc
clc
mov
sbb
cmp
rorb
add
clc
in
lret
mov
add
add
gs
xabort
mov
or
clc
dec
lock
add
in
outsl
cmp
clc
in
or
add
scas
inc
add
fsubp
clc
cmp
sar
mulb
fcoml
add
sar
leave
std
xor
add
xor
out
xor
add
push
outsl
imul
outsl
stc
aas
add
cmp
clc
sar
inc
add
arpl
add
push
out
pop
add
add
add
pusha
add
dec
mov
add
xabort
add
inc
add
enter
sbb
add
dec
push
cmp
add
add
sti
xor
inc
clc
xor
push
mov
mov
jg
loopne
add
add
clc
fdiv
xchg
inc
clc
push
jbe
add
pop
sti
and
add
add
call
sub
aas
pop
std
xor
add
mov
and
add
add
mov
es
lods
cmp
lods
jmp
test
fmuls
fisubl
add
lcall
sub
clc
mov
add
test
int
add
mov
add
sti
jbe
ss
sbb
mov
clc
ss
lods
jb
add
pop
mov
mov
repnz
sub
add
clc
das
sbb
pop
std
lret
jnp
adc
add
and
add
mov
push
sub
clc
movsb
clc
xor
adc
add
cmp
dec
aad
clc
ret
clc
pop
das
push
sub
test
in
outsl
inc
clc
xor
add
mov
jmp
xchg
add
add
clc
or
add
pop
xor
addr16
sub
aas
mov
cli
push
movsb
clc
dec
jb
add
pop
imul
inc
add
xor
add
xabort
clc
stc
enter
xlat
lods
cmp
mov
add
add
cmp
clc
xchg
or
aam
outsl
mov
clc
and
add
mov
xor
add
repnz
cmp
clc
out
sub
mov
or
clc
iret
adc
add
ret
clc
cs
sbb
inc
clc
sub
aam
add
outsb
popf
data16
insb
sar
clc
std
push
fs
mov
clc
jmp
jbe
push
clc
or
clc
nopl
clc
inc
clc
shlb
add
das
leave
movsl
clc
jbe
xlat
aam
outsb
hlt
adc
add
add
clc
or
add
popa
add
add
sub
add
jmp
clc
mov
or
lret
cmc
stc
repnz
sub
pushf
sbb
push
add
xchg
je
clc
fimuls
cmp
jmp
movsb
clc
sub
mov
clc
cmp
mov
pop
mov
clc
mov
clc
lcall
clc
jmp
add
repz
rcrb
jae
add
add
add
clc
inc
clc
insb
sbb
insb
test
popl
icebp
add
add
mov
mov
xor
clc
sub
lahf
dec
xchg
ljmp
insl
cmp
sub
clc
arpl
add
negl
lock
clc
enter
push
pop
idivl
fistl
add
cmp
fstl
push
clc
pop
out
lret
or
jo
add
gs
fdivrp
repnz
scas
scas
add
fmul
scas
pop
xchg
enter
daa
clc
mov
clc
lods
mov
clc
clc
cs
add
sbb
add
add
mov
add
sbb
test
jmp
add
pop
cmpsl
clc
dec
add
leave
fwait
sahf
cmp
test
out
jl
xchg
in
icebp
pop
cs
jg
fwait
mov
clc
int3
out
mov
push
add
in
cmp
add
fstpl
fistps
pop
cltd
in
or
push
clc
sub
lods
inc
clc
jmp
sub
out
sub
inc
clc
cmc
mov
fiadds
jne
jnp
cmp
cmp
lods
jnp
xchg
cmp
dec
insl
mov
cmp
cmp
test
je
dec
mov
or
mov
clc
push
pop
aaa
data16
jb
add
out
cmc
xor
add
loope
sbb
mov
sub
xor
push
add
mov
clc
add
add
push
pop
clc
push
add
flds
add
fs
sar
and
pop
dec
dec
add
add
popa
add
cmp
xchg
cli
push
add
pop
pop
ds
cmc
aas
mov
out
imul
xchg
mov
push
add
mov
clc
jecxz
insl
xchg
xor
add
add
stos
out
or
add
insb
jbe
cmpsb
clc
inc
clc
imul
add
stc
xchg
inc
clc
inc
add
call
add
outsl
adc
add
add
clc
cmp
clc
negl
jl
es
mov
sar
shrl
and
jb
add
add
pop
jge
fcoms
jbe
pusha
add
mov
xchg
es
mov
aad
dec
loope
es
mov
out
into
fadd
clc
fnsetpm(287
clc
cmp
cmpsb
clc
cmp
add
sbb
clc
mov
mov
lods
dec
das
sahf
sar
imul
clc
stc
mov
clc
xor
add
sub
add
cmp
push
clc
dec
mov
add
pop
pop
and
add
dec
outsl
cli
sbb
icebp
in
xchg
mov
xchg
into
ljmp
xchg
inc
add
icebp
mov
xlat
fisubrs
clc
inc
add
mov
push
add
ss
or
add
out
sub
sub
out
mov
clc
jae
add
and
or
push
cwtl
int
aaa
sbb
add
clc
enter
clc
ja
sbb
mov
push
add
sbb
add
and
add
clc
inc
add
scas
arpl
add
add
stos
adc
add
inc
add
repnz
pop
in
mov
sub
ret
clc
jb
add
sub
add
lock
sbb
bound
add
clc
out
fistps
cmp
pmulhw
js
or
cmp
in
test
pushf
div
mov
xchg
inc
clc
inc
clc
mov
aam
clc
mov
clc
push
mov
lret
xchg
jle
ret
cmpsl
clc
repz
add
or
clc
sti
dec
pop
cmp
pop
aad
inc
add
pop
mov
clc
sub
imul
loop
jle
add
push
arpl
add
pop
daa
clc
jo
add
xor
xchg
push
mov
inc
add
xchg
add
shr
cmp
outsb
sti
rolb
cmpsl
clc
jno
add
add
pusha
add
mov
push
ret
clc
fiaddl
clc
inc
add
sbb
add
aam
movsb
clc
loope
call
lahf
cmp
clc
in
xchg
adc
add
int
fwait
out
idivl
mov
clc
xor
add
clc
mov
mov
call
lock
jmp
ds
stos
cmc
mov
pop
add
add
sar
jmp
sti
icebp
pop
pop
ret
mov
repz
add
jo
add
sbb
push
add
imul
popa
add
pop
or
add
adc
add
clc
gs
inc
clc
out
mov
jae
add
stos
sar
add
jae
add
push
clc
mulb
add
clc
xbegin
pop
cmpsb
clc
jp
clc
jecxz
push
xor
add
sti
cmpsl
clc
jns
ror
icebp
inc
add
fcoml
fxch
fists
add
sub
add
xchg
push
sub
pop
repnz
add
mov
clc
and
add
clc
xor
add
insb
or
pushf
fcomip
sahf
mov
clc
mov
add
mov
add
xbegin
ja
lahf
ret
clc
cmp
add
sbb
ja
add
cld
jle
xor
int3
aaa
or
dec
pop
mov
clc
jno
add
mov
je
cmpsb
clc
mov
cmpsl
clc
iret
jb
add
clc
mov
add
xabort
clc
cltd
mov
add
dec
sti
or
add
jmp
call
movhps
dec
fists
movsl
clc
dec
adc
inc
add
gs
xchg
dec
sub
add
lret
cld
jl
flds
xlat
jle
clc
fists
add
add
or
add
mov
cli
sub
clc
jmp
inc
add
xchg
sub
insl
mov
add
lods
xchg
mov
clc
popf
aam
add
jnp
add
jbe
xchg
sar
sbb
inc
add
ss
clc
jg
sar
clc
push
xbegin
scas
jae
add
cltd
test
mov
xabort
test
add
xor
add
push
add
mov
clc
jns
clc
test
clc
jmp
add
add
and
int3
mov
icebp
or
add
insl
sub
clc
sub
sbb
add
mov
outsb
lret
jno
add
sbb
clc
xlat
cwtl
inc
clc
icebp
aam
std
sar
clc
cmp
xlat
cmp
add
add
dec
jb
add
into
jg
add
xchg
adc
add
mov
add
add
pop
xor
add
leave
mov
in
imul
add
cmp
sbb
rcrl
and
add
xchg
hlt
mov
push
dec
ljmp
add
clc
push
xchg
xor
int3
fsubl
repz
test
adc
add
sub
nop
jno
add
repnz
scas
notb
clc
std
lea
sub
add
repnz
clc
movsl
clc
xchg
pop
arpl
add
clc
cmp
jl
test
es
lret
popf
pop
call
jnp
outsb
ficompl
push
clc
xor
add
ss
out
imul
push
add
add
clc
add
add
cmp
out
cwtl
aad
mov
out
lahf
and
xor
add
test
xchg
pop
xchg
pop
out
lret
cld
test
xor
add
add
xchg
clc
out
mov
out
repnz
into
or
cmp
mov
sbb
out
testl
sbb
pop
mov
add
lods
cmp
fistpll
jecxz
lea
clc
xor
add
lahf
jecxz
jo
add
add
push
clc
enter
jg
cmp
cmp
add
push
mov
fsubrp
mov
add
add
hlt
idiv
mov
and
add
pop
push
add
in
adc
add
jl
jmp
inc
add
outsb
xabort
sbb
add
add
clc
jne
testl
clc
adc
or
adc
add
pop
xor
add
daa
clc
popa
add
push
clc
push
add
call
aaa
mov
clc
cli
jmp
lret
add
cmp
add
xor
add
and
add
add
mov
mov
clc
pop
xchg
add
add
clc
or
out
adc
add
add
cld
inc
clc
lret
pop
mov
xchg
mov
clc
nop
push
ret
inc
clc
dec
ljmp
xchg
push
jnp
mov
dec
out
xor
mov
and
add
xor
add
clc
xor
add
add
scas
cli
cmc
es
add
add
jnp
mov
leave
cmp
add
clc
ret
jmp
pop
data16
and
add
sub
and
add
std
adc
pop
fiadds
add
mov
divb
jmp
lods
add
add
idiv
fcomps
add
push
add
test
mov
add
xor
add
adc
cmp
mov
jns
mov
xchg
hlt
lahf
enter
outsb
int
clc
jl
xlat
pushf
and
inc
clc
outsb
jecxz
das
movsl
clc
scas
ds
xor
loopne
mov
add
clc
popa
add
in
cld
dec
pop
cmp
xor
add
insl
push
push
add
sub
clc
dec
push
dec
ds
or
inc
clc
or
aad
cli
inc
add
shlb
add
cmp
clc
sahf
dec
adc
xbegin
xchg
sbb
clc
sub
clc
and
add
clc
mov
aas
mull
add
daa
clc
pop
cli
pusha
add
fnstsw
or
clc
test
dec
pop
dec
hlt
jecxz
sar
pop
jp
clc
addr16
ja
insb
dec
scas
sub
clc
dec
dec
adc
add
push
movsl
clc
ljmp
clc
add
add
xor
add
xabort
jne
clc
fs
movsb
clc
dec
fdivrl
mov
clc
movsb
clc
xor
fimuls
xor
jecxz
lods
fcoml
and
call
outsb
dec
mov
sbb
mov
clc
jmp
pop
scas
lcall
add
inc
clc
push
cmp
call
clc
mov
add
xor
add
icebp
icebp
add
add
add
push
clc
dec
adc
add
clc
mov
fists
add
push
add
imul
push
clc
lcall
add
push
add
int3
xchg
xchg
adc
add
add
xchg
cmp
in
mov
mov
mov
clc
jle
jle
clc
cmp
clc
and
add
clc
iret
dec
fs
bound
add
inc
clc
fmuls
outsb
pop
or
int3
lock
adc
add
shr
clc
pop
xchg
mov
cmp
inc
add
sahf
inc
add
negb
divb
mov
add
add
mov
clc
xchg
outsl
popf
adc
add
jg
mov
dec
jns
dec
xor
add
cmp
clc
pop
sar
das
cmp
add
mov
clc
movlhps
jns
add
push
add
dec
cmp
clc
cmp
cmp
add
cmp
clc
xchg
add
mov
clc
fistpl
sbb
add
test
sarb
mov
loop
outsb
inc
add
rorl
insb
mov
clc
inc
clc
int3
and
clc
cmp
clc
fbld
inc
add
adc
mov
clc
repz
dec
jle
adc
add
add
cwtl
mov
xchg
aad
cmp
add
or
clc
aaa
inc
add
lods
pop
clc
inc
clc
sub
xchg
stos
out
cld
daa
clc
outsb
push
clc
and
add
clc
addr16
in
data16
imul
js
xchg
pop
int3
mov
add
mov
clc
and
sarl
out
js
clc
jns
psubd
ret
clc
js
add
jmp
add
push
add
lret
fcmovnu
mov
fistl
jge
shl
dec
mov
jmp
in
dec
mov
add
clc
cmp
clc
daa
clc
popa
add
jae
add
add
clc
in
push
stos
js
clc
es
in
mov
jge
lods
cmp
xchg
mov
xchg
in
mov
hlt
inc
add
aad
fnstsw
test
cmp
clc
lret
sub
imul
cmc
lods
ja
in
adc
add
add
fs
and
out
and
add
jge
cmp
add
add
inc
clc
dec
adc
inc
clc
lahf
pop
jge
mov
aam
dec
lret
sub
cmp
clc
frstor
clc
sbb
push
add
and
stc
xlat
fadds
add
aaa
lods
test
jno
add
push
out
dec
sbb
add
add
adc
add
ret
clc
push
add
sub
add
sub
mov
add
push
clc
ret
fmull
sar
sub
pop
jbe
cwtl
or
xchg
inc
add
mov
clc
arpl
add
addr16
or
xchg
popf
into
inc
clc
and
negl
aam
clc
arpl
add
or
adc
add
push
add
push
xchg
fcmovne
dec
arpl
add
clc
xchg
aas
dec
push
add
imul
xbegin
pop
clc
insl
das
clc
jnp
jp
add
jge
clc
outsb
pusha
add
loop
and
add
clc
scas
adc
mov
xchg
clc
adc
add
add
ljmp
pop
clc
data16
mov
jns
mov
in
cmp
sar
add
add
add
add
add
mov
loop
fwait
jl
leave
pushf
add
add
ret
clc
or
gs
fs
in
wbinvd
sbb
nop
cmp
clc
imul
mov
add
cli
dec
xchg
or
mov
js
add
cmc
clc
fldl
cwtl
sahf
cmp
clc
loop
xor
ss
add
pushf
leave
adc
add
lock
jmp
aas
test
clc
mov
xor
add
push
add
negl
popa
add
mov
pop
dec
xbegin
pop
clc
sbb
int3
data16
xor
add
add
mov
loop
mov
push
clc
mov
add
enter
loopne
leave
sar
mov
pop
repz
push
scas
cli
test
xchg
mov
dec
pop
xor
add
xchg
adc
add
add
mov
clc
cmpsl
clc
sub
clc
sub
icebp
fisubrl
xabort
clc
repz
icebp
cmc
popf
aam
outsl
inc
add
jmp
push
add
sub
xchg
pop
xor
aam
cld
pop
sub
add
sahf
xchg
sub
imull
xor
clc
pusha
add
mov
add
xbegin
jno
add
add
insl
adc
add
clc
inc
add
daa
clc
sar
or
xchg
mov
or
add
xor
loop
mov
clc
or
clc
and
leave
pop
rol
clc
xor
add
adc
clc
dec
sub
add
lahf
or
stos
fwait
divb
xchg
xchg
jae
add
add
clc
mov
lods
ljmp
add
add
adc
sbb
das
and
add
jl
cmp
cmc
mov
add
popl
add
jg
sub
iret
cli
and
add
cmpsl
clc
pop
sbb
clc
fwait
repz
xchg
nop
loopne
jno
add
and
add
in
fisttpll
dec
adc
clc
pop
push
cmc
inc
add
sub
add
faddl
clc
mov
clc
pop
jns
or
xor
add
jb
add
cmp
push
add
xor
add
add
add
add
add
hlt
ja
repnz
inc
clc
jle
push
add
lret
inc
add
and
add
jns
clc
xchg
daa
clc
jl
repnz
xor
add
jno
add
push
add
jle
clc
clc
fcomps
cmpsl
clc
sub
xchg
sbb
push
inc
clc
inc
clc
push
loope
ficoml
add
xchg
scas
jmp
ret
clc
in
je
add
pusha
add
test
cmp
inc
add
fnstsw
add
loope
add
add
xabort
mov
sar
cli
pop
fsubrp
cmpsl
clc
hlt
push
push
fistps
xor
add
stc
das
cmp
cwtl
sbb
add
push
add
aam
in
scas
loop
cmp
add
sbb
clc
into
mov
sar
push
pop
or
aad
add
add
add
imul
cmp
clc
mov
clc
push
add
popa
add
fiadds
and
sub
jnp
dec
iret
test
sbb
clc
lret
aad
dec
xchg
lcall
push
stos
ljmp
test
cmp
clc
test
push
xchg
jmp
imul
push
add
insb
cmp
rcll
dec
sbb
clc
mov
negb
call
clc
sti
loopne
xchg
cltd
loope
cs
add
cmp
add
inc
clc
cmp
adc
add
push
dec
mov
mov
jmp
jmp
pusha
add
or
add
mov
sar
jmp
sub
add
rcrl
push
push
scas
jno
add
pushf
lret
push
ja
clc
lret
push
pop
xchg
add
cmp
push
add
add
sbb
jno
add
cmpsb
clc
hlt
dec
out
jmp
sbb
cmp
pop
clc
mov
push
add
or
clc
out
cwtl
pop
cwtl
mov
repnz
cmpsl
clc
pushf
pop
out
cmp
or
cmp
add
add
in
cmp
add
mov
bound
add
mov
mov
inc
clc
push
add
mov
xchg
sti
sar
js
clc
push
add
aas
ds
pop
xchg
dec
das
jne
int
ret
fs
popa
add
sbb
or
pushf
and
add
add
mulb
or
repz
pop
inc
clc
fadd
clc
shl
clc
mov
xor
push
xchg
data16
stos
cmpsl
clc
xor
add
clc
add
add
add
jl
xor
add
xabort
xor
add
ret
push
add
xor
add
mov
add
imulb
inc
add
dec
cwtl
jge
clc
test
xor
add
clc
and
add
add
add
xor
add
clc
add
add
mov
testb
mov
shrb
xchg
pop
outsl
push
add
xchg
stc
cld
pop
cmc
sub
arpl
add
clc
icebp
mov
mov
iret
pop
mov
clc
cld
push
add
lret
add
clc
xchg
loop
dec
jl
test
mov
push
jnp
cltd
jg
xor
add
bound
add
jl
test
push
or
insl
mov
mov
xchg
sahf
jge
mov
std
adc
add
ljmp
movsl
clc
aas
push
xor
add
clc
pop
jecxz
mov
mov
sti
cmpsl
clc
rol
clc
hlt
repnz
cmp
clc
cmpsb
clc
stos
mov
call
inc
clc
out
pop
repz
add
add
xor
add
lods
in
jmp
mov
cmp
rol
clc
data16
and
sti
stos
xchg
cltd
mov
repnz
xabort
clc
arpl
add
clc
push
out
mov
loopne
sbb
test
int
movsl
clc
xor
cmp
pop
out
cld
mov
add
jp
ss
xchg
mov
test
adc
add
pop
pop
lcall
clc
testb
mov
sbb
cmp
add
call
add
push
stc
out
mov
add
jno
add
add
fucomi
mov
mov
clc
gs
fbld
add
sar
imul
jnp
clc
pop
sbb
clc
jo
add
lahf
data16
jae
add
add
out
mov
jg
notl
jecxz
js
jecxz
push
dec
add
add
xor
add
clc
push
or
bnd
clc
repz
movsb
clc
xchg
adc
loope
out
inc
add
pushf
sbb
bound
add
add
add
scas
and
add
clc
cmp
std
xchg
xlat
push
jno
add
incl
cmc
es
hlt
xchg
dec
in
clc
add
sti
push
ljmp
or
imul
dec
jbe
xor
add
pop
jmp
add
cmp
clc
fmul
xchg
or
add
loopne,pn
out
pop
cmp
add
mov
clc
test
push
clc
dec
fisttpll
addr16
je
and
add
pop
xbegin
clc
call
clc
shl
lret
add
add
repnz
clc
imul
clc
in
movsb
clc
mov
sbb
ljmp
push
cmp
dec
ss
imul
push
add
cmpsb
clc
push
in
ficomps
clc
dec
mov
dec
pop
mov
test
mov
clc
xor
in
in
lcall
add
cmp
xchg
popa
add
clc
aas
cmpsb
clc
sar
add
xor
test
clc
xor
add
vunpcklps
ja
clc
hlt
ljmp
mov
mov
cmp
add
xor
mov
clc
xchg
or
add
clc
xlat
add
add
clc
jecxz
cmpsl
clc
es
outsb
shlb
test
pop
repz
clc
cmp
clc
mov
sti
fistps
push
push
clc
fcmovnu
hlt
addr16
outsb
cmc
inc
clc
gs
adc
add
and
adc
add
ss
jae
add
and
add
outsb
xchg
in
je
loop
test
ret
clc
cmp
mov
clc
lea
cmp
clc
cltd
das
jecxz
and
add
sbb
daa
clc
add
dec
stos
adc
add
jae
add
add
das
sub
add
fdivr
sub
add
cmp
loopne
mov
clc
out
in
rclb
add
add
push
fcmove
mov
clc
popf
and
add
ja
movsb
clc
push
adc
add
clc
jno
add
clc
dec
xlat
dec
lea
xlat
sbb
pop
sar
clc
add
addr16
mov
clc
and
add
add
enter
clc
into
push
xchg
in
mov
push
add
and
mov
add
mov
xchg
pop
test
daa
clc
jbe
lahf
ret
fdiv
lods
jae
add
sti
fs
mov
jg
add
and
clc
lcall
clc
push
add
add
cs
cmp
out
xchg
add
add
add
repz
jns
inc
add
inc
add
repnz
jnp
xor
add
add
jecxz
stos
ja
fadds
add
add
add
xchg
cmc
leave
mov
push
add
mov
scas
scas
jo
add
sub
push
cmp
sub
pop
mov
bound
add
clc
mov
mov
add
pop
adc
add
test
lahf
loope
arpl
add
clc
test
aam
add
pop
outsl
sub
add
push
cmpsl
clc
mulb
push
clc
cmp
or
add
es
decb
ljmp
xchg
test
mov
fwait
rorb
pop
pop
sarb
cmp
xchg
in
adc
add
inc
add
test
outsl
jmp
jecxz
pop
clc
popf
mov
dec
cmpsl
clc
sti
roll
clc
inc
add
clc
imul
add
xchg
jnp
dec
pop
xchg
pop
int3
mov
data16
mov
sarb
inc
add
dec
mov
add
xabort
clc
outsb
pop
sub
add
insl
sar
es
lock
xor
push
aaa
cwtl
sbb
mov
mov
dec
lea
mov
clc
jo
add
and
add
inc
clc
xchg
jnp
clc
call
pop
data16
in
mov
xor
add
add
adc
add
cmpsb
clc
cmp
mov
std
scas
jle
clc
cltd
push
or
ficoms
dec
push
add
dec
repnz
pop
add
add
rorl
xchg
dec
sbb
arpl
add
add
push
pop
int
jecxz
dec
enter
add
incl
fs
sbb
xor
add
add
fs
shl
push
lcall
xor
clc
mov
add
cmp
clc
out
lea
xchg
adc
add
sub
movsb
clc
aas
shrb
add
add
cmp
outsl
cs
pxor
add
add
out
sub
mov
xbegin
clc
pop
data16
push
add
jbe
ds
dec
pop
and
add
and
add
jne,pn
and
add
add
gs
xchg
or
add
push
js
add
das
clc
xabort
push
add
repz
add
add
or
add
add
add
xbegin
jp
stos
mov
cmp
cmp
cmp
call
clc
xchg
rolb
push
add
cmp
pop
clc
mov
pinsrw
mov
es
mov
lahf
inc
clc
mov
clc
pop
mov
clc
fld
clc
sub
jge,pn
enter
cmp
das
sar
push
out
clc
and
add
add
sbb
push
das
pop
push
add
int
mov
clc
mov
xchg
cmpsb
clc
cmp
add
cwtl
sbb
loop
shr
push
sar
aas
inc
add
stos
popf
popa
add
adc
add
filds
add
hlt
sbb
ficomps
je
add
std
in
mov
inc
add
inc
clc
popa
add
in
or
dec
iret
inc
add
fwait
sbb
cmp
or
mov
aas
and
scas
push
hlt
and
mov
jno
add
clc
push
push
stos
cli
sbb
loopne
mov
cmc
sbb
mov
add
xor
add
sar
loopne
jl
clc
and
add
mov
je
add
aad
clc
or
add
add
jle
add
rorb
cmpsb
clc
or
mov
add
cmpsl
clc
sbb
adc
add
xchg
cwtl
cwtl
dec
mov
clc
xchg
add
add
add
or
ret
xchg
out
push
mov
xchg
dec
fnstenv
xor
add
clc
or
clc
aas
jle
cli
pop
ja
lcall
pop
iret
jge
or
clc
cmpsl
clc
xchg
scas
mov
sub
mov
mov
inc
add
jmp
mov
xor
add
push
xor
add
lfs
cmp
add
lods
lret
outsl
rorl
clc
test
aad
cmp
dec
sub
mov
xchg
jo
add
clc
xchg
loope
cld
jnp
clc
push
xor
add
lea
add
adc
add
add
mov
sbb
and
testl
into
and
add
fwait
in
clc
xchg
mov
add
jle
add
mov
bound
add
xchg
inc
add
mov
pop
mov
imul
imul
sub
mov
clc
scas
mov
mov
add
sbb
js
and
add
cwtl
add
add
clc
inc
clc
dec
ficomps
ds
add
xchg
aad
xchg
lret
cs
and
sub
cmp
insb
cmp
mov
lret
out
test
not
test
clc
repnz
clc
inc
add
jl
pop
mov
jp
jnp
add
stos
mov
add
stc
in
mov
fsin
gs
pop
add
add
add
sar
mov
fisubrs
add
scas
cmpsl
clc
cmpsl
clc
and
clc
sub
lods
mov
popa
add
jno
add
out
add
add
shr
or
loopne
mov
pop
outsb
cmp
dec
mov
clc
and
add
add
dec
adc
clc
rcll
add
inc
add
cmpsl
clc
insb
inc
add
adc
add
clc
add
add
add
add
and
add
mov
aaa
xor
in
push
add
lea
push
mov
mov
push
mov
int3
pop
dec
jl
cmp
mov
mov
xchg
mov
imul
cmp
jb
add
add
ret
mov
xlat
ja,pt
pop
test
clc
outsb
xchg
sub
clc
imul
aad
mov
fisubrs
jle
sti
jb
add
add
add
cs
push
and
add
add
pop
sbb
xor
add
inc
add
jmp
jae
add
cmp
shll
sar
mov
add
add
ss
add
mov
clc
xchg
pop
in
iret
inc
add
push
add
sbb
dec
jecxz
fnsave
add
xor
add
add
fcmove
jne
clc
stc
ja
jmp
mov
xor
add
add
mov
dec
movsb
clc
adc
add
cmp
sti
xor
add
inc
clc
xor
add
and
imul
imul
adc
add
jecxz
bound
add
xor
add
ja
repnz
nop
cmpsb
clc
inc
clc
and
popa
add
push
pop
jae
add
clc
aas
jae
add
or
stos
out
aam
clc
jne
std
lods
fcmovnb
clc
and
add
add
in
add
add
inc
add
xor
add
clc
movsl
clc
clc
pop
cs
jns
clc
mov
add
daa
clc
lods
loopne
ljmp
clc
ret
xchg
mov
add
addr16
pop
adc
add
cmp
clc
pop
out
pushf
push
aas
adc
add
pop
out
mov
add
pop
fwait
pop
nop
sbb
mov
inc
add
jg
scas
mov
inc
add
pop
mov
adc
add
repz
mov
xchg
dec
ficoms
add
jbe
mov
or
out
nop
test
fwait
push
inc
add
add
add
add
pop
vmovlps
add
clc
sbb
add
or
add
aam
clc
fsubs
add
test
enter
scas
ja
adc
add
add
loop
loope
shrb
xlat
dec
xor
add
add
inc
add
movsl
clc
dec
or
cmp
xlat
fwait
es
jle
xchg
pop
stos
inc
clc
cmp
sbb
out
xchg
lods
xor
add
add
pop
gs
pop
jbe
add
push
add
add
dec
jg
clc
repnz
mov
add
loope
loopne
cmp
nop/reserved
clc
sahf
int
clc
idivl
add
sub
fildll
jg
test
repnz
stc
add
add
add
clc
adc
clc
inc
add
mov
fdivl
add
add
clc
adc
mov
lea
mov
add
loope
adc
add
sub
clc
test
add
push
loop
int3
test
xlat
test
testl
clc
fwait
xor
clc
jns
add
push
int3
sar
mov
enter
cmp
sarb
mov
clc
adc
add
int
and
add
clc
add
add
clc
out
xbegin
in
shr
sar
clc
scas
mov
lods
jnp
dec
add
add
movsl
clc
sub
pop
xor
add
add
push
push
add
loop
or
add
loop
xchg
mov
and
add
je
mov
clc
js
jae
add
xor
add
in
js
clc
pop
sbb
add
xchg
repz
pop
sbb
clc
test
inc
clc
jo
add
add
flds
mov
in
inc
clc
aas
stc
mov
add
sub
add
fs
rorb
vmwrite
ficompl
and
add
dec
cmp
pop
jns
pop
clc
pop
clc
pop
clc
inc
clc
ret
clc
mov
or
divb
add
out
jnp
shl
cmp
sbb
add
add
pop
out
ficoms
data16
repnz
das
leave
inc
add
adc
movsl
clc
bound
add
add
jge
clc
fnsave
addr16
inc
clc
lock
add
popa
add
dec
mov
decb
mov
clc
loop
jp
sahf
repnz
add
add
add
cltd
xabort
clc
inc
add
lahf
inc
clc
call
add
xbegin
clc
mov
clc
mov
sahf
pop
fildl
adc
add
add
dec
jmp
lods
mov
aas
xbegin
clc
inc
add
cli
test
push
add
push
clc
xor
add
cmp
add
inc
add
push
sti
dec
xor
add
popf
bound
add
aad
icebp
hlt
imul
adc
add
clc
vmovaps
ret
clc
sub
cs
mov
lods
call
add
add
mov
push
sbb
fcompl
ffree
clc
add
add
clc
sbb
fistpll
add
sub
clc
pop
or
add
je,pt
clc
sub
pop
xlat
movsl
clc
pop
pop
and
pop
in
pop
cmp
inc
add
nop
icebp
inc
add
sahf
es
mov
jl
hlt
and
test
cmp
add
add
gs
popf
pop
es
dec
arpl
add
add
adc
add
clc
and
add
clc
sbb
stos
mov
adc
add
and
add
hlt
enter
add
dec
cmp
clc
sbb
pop
sbb
std
cmp
mov
sti
inc
clc
in
sahf
mov
pop
pop
cmp
add
sbb
add
dec
mov
sub
dec
pop
push
insl
push
add
xchg
notl
add
sti
sub
add
ljmp
sbb
clc
xabort
or
or
add
cmp
sbb
xchg
or
sar
mov
clc
push
add
ret
clc
iret
sbb
add
or
clc
jo
add
shrl
clc
stc
shll
clc
ficomps
test
cmc
mov
clc
outsb
adc
add
incl
clc
dec
movsl
clc
push
add
and
add
cmp
push
add
idivl
pop
sbb
out
cwtl
push
jle
idiv
sbb
add
mov
cltd
push
mov
mov
push
mov
clc
aad
jecxz
push
add
in
mov
add
jbe
int3
jle
jb
add
clc
pushf
mov
fisttps
outsl
mov
vcomiss
lcall
mov
and
add
mov
incb
add
mov
insb
push
clc
ds
add
aad
push
add
test
add
ret
clc
out
mov
aas
cltd
xchg
add
dec
bound
add
clc
cmp
mov
add
mov
mov
or
add
pop
std
stos
clc
lret
gs
jle
mov
notl
cmp
jnp
es
pop
dec
fisubs
clc
mov
add
add
add
add
add
or
scas
jge
clc
or
cmp
pop
mov
adc
add
jp
add
sub
daa
clc
popf
adc
add
inc
clc
cmp
dec
or
and
add
add
mov
xchg
mov
adc
add
clc
sub
clc
jbe
jae
add
mov
and
add
xchg
jnp
popf
repz
out
fwait
cmp
dec
mov
lahf
dec
testb
mov
push
mov
sbb
stos
addr16
and
clc
fldl
add
add
mov
and
jno
add
call
jmp
nop
lock
imul
cmp
mov
cmp
lret
pop
inc
clc
pop
cmp
std
movsl
clc
inc
clc
test
jl
add
add
add
dec
pop
push
and
add
outsb
xchg
daa
clc
cs
enter
mov
ret
clc
xbegin
add
pop
js
ja
stc
loopne
jmp
clc
repz
add
lods
pop
mov
lcall
sbb
add
cmp
in
dec
push
add
fisttpll
sub
repz
cmp
imul
clc
insl
in
push
add
dec
dec
cmp
clc
mov
in
daa
clc
out
lods
jg
clc
sbb
clc
das
xor
clc
mov
lock
xchg
stos
push
clc
in
or
add
mov
clc
enter
sub
jmp
fs
adc
add
imul
add
inc
add
and
add
clc
je
add
adc
add
sbb
clc
push
clc
repz
or
add
lock
loope
sbb
lcall
insl
adc
clc
jns
add
xabort
pop
jbe
clc
jge
leave
popf
xchg
jg
add
jno
add
clc
xchg
cmp
std
imul
shrl
add
into
push
mov
sub
jns
add
inc
add
bound
add
clc
aas
inc
add
mov
clc
scas
inc
add
lret
lock
xchg
mov
lods
pop
ds
clc
jns
add
and
add
push
iret
arpl
add
adc
pop
clc
xor
add
repz
inc
clc
sti
mov
mov
icebp
or
add
cwtl
aas
mov
or
clc
jmp
and
jbe
clc
fwait
inc
clc
cmp
push
adc
add
pop
aas
sbb
inc
clc
popf
pop
data16
icebp
ficomps
push
mov
push
add
mov
rol
clc
call
xor
add
hlt
jle
clc
fildll
xchg
sar
mov
icebp
nop
aaa
jb
add
lahf
int
daa
clc
js
jnp
add
add
clc
sub
clc
or
clc
js
fs
jp
xchg
aad
push
add
pop
daa
clc
cli
sar
clc
in
mov
pushf
xor
add
add
pop
sub
xchg
loopne
ret
xchg
imul
inc
add
aas
bswap
push
add
mov
add
data16
ja
shlb
clc
mov
push
gs
ss
jge
std
xchg
in
repz
push
clc
push
sti
pop
cmpsb
clc
inc
add
and
and
add
aaa
xchg
lcall
inc
clc
divb
add
add
xor
add
sti
fwait
imul
cmp
clc
lahf
leave
outsb
cld
add
add
clc
jg
add
or
add
sbb
test
lods
mov
adc
add
jge
insb
mov
clc
pop
jne
and
dec
ficomps
add
mov
clc
clc
dec
or
pop
mov
add
sub
adc
add
push
sub
nop
movsl
clc
cld
inc
add
cmp
mov
add
outsl
xchg
mov
or
mov
add
add
loope
push
add
lea
jmp
fstpl
cmp
add
lret
sub
add
mov
clc
leave
sahf
popa
add
push
sbb
add
push
loop
cmpsl
clc
add
add
clc
testl
clc
push
add
shll
cmp
clc
jnp
in
push
pop
fimull
add
lods
mov
add
clc
idiv
push
mov
clc
mov
mov
repz
clc
xor
clc
lcall
and
movsl
clc
lret
pop
push
push
in
std
pop
fnstcw
mul
clc
sub
clc
call
dec
sub
xor
add
push
add
sar
sar
add
push
add
pop
or
add
in
lahf
xbegin
add
push
push
add
mov
add
shlb
add
outsl
mov
add
es
ljmp
add
out
sbb
mov
sbb
adc
add
jb
add
add
and
sbb
mov
cs
data16
inc
add
out
fnstcw
addr16
js
jmp
add
push
clc
pop
into
or
sar
mov
bound
add
in
adc
mov
clc
faddl
add
leave
adc
add
add
xchg
pop
call
and
add
clc
or
insl
xor
xchg
push
sar
jl
cld
push
add
ljmp
scas
adc
add
stc
and
cmpsb
clc
leave
loope
clc
adc
add
add
inc
add
jo
add
js
movsb
clc
cmp
dec
movsb
clc
push
cwtl
aad
shl
jne
sti
nop
scas
stc
dec
xor
add
clc
xchg
mov
clc
ss
add
add
add
addr16
xor
add
int3
cmp
fwait
pop
dec
loopne
adc
add
add
test
mov
add
xchg
lret
or
inc
add
inc
add
push
add
call
add
add
add
stos
mov
mov
lret
cmp
clc
mov
scas
sar
fnsave
sub
add
repz
clc
sti
sbb
cli
sbb
bound
add
xchg
dec
jno
add
fimuls
add
add
add
clc
add
add
xabort
mov
add
xor
add
mov
clc
shlb
clc
ja
push
dec
pop
xor
add
clc
daa
clc
sub
clc
aad
add
aas
gs
test
in
pop
ret
dec
scas
scas
arpl
add
clc
inc
add
jl
loopne
adc
add
clc
dec
loope
and
mov
scas
pusha
add
lahf
mov
cmp
clc
and
add
jmp
add
mov
cmpsb
clc
cmp
push
outsl
inc
add
imul
in
test
mov
or
out
mov
sbb
es
sar
clc
ficoml
add
nop
lret
or
daa
clc
in
and
add
xor
mov
add
cmp
negl
cmp
cmp
bound
add
inc
add
cmpsl
clc
push
add
ss
jl
popl
lea
add
sar
loopne
sahf
mov
clc
inc
clc
aaa
mov
popf
inc
clc
jp
pop
pop
jmp
cli
out
jb
add
add
add
sahf
jo
add
insb
leave
in
into
xchg
jl
repz
cs
test
cmp
aaa
and
add
incb
add
jle
clc
mov
clc
adc
add
sub
xor
add
sub
add
mov
scas
in
sub
mov
cmp
clc
ja
pop
sbb
stos
aad
add
cs
outsl
and
add
sbb
addr16
adc
add
xchg
in
arpl
add
xor
add
add
test
jns
pop
push
add
pop
dec
sbb
sar
clc
in
inc
clc
xor
add
cmp
clc
mov
repnz
outsl
xor
lcall
jmp
mov
add
jo
add
mov
mov
add
add
add
aas
rorl
sub
push
pop
stos
fcoms
add
push
add
clc
cmp
xchg
mov
pop
std
jno
add
clc
push
add
push
pop
pop
fdivl
add
out
in
repnz
add
clc
ja
xchg
xchg
sbb
xor
add
add
lret
clc
imul
add
clc
xbegin
ja
mulb
jnp
add
sub
inc
clc
push
addr16
push
add
pushf
or
add
add
call
jne
add
cmp
jns
add
sti
aam
push
pop
arpl
add
add
add
add
clc
mov
and
add
clc
cmp
clc
pop
loop
movsb
clc
enter
mov
sub
add
sbb
out
xchg
or
incl
clc
insb
xchg
test
lea
incl
inc
add
push
add
jmp
cwtl
cltd
add
add
add
lcall
sbb
add
adc
mov
adc
add
sbb
clc
cmp
add
add
lahf
loope
repnz
stos
fcomps
bound
add
add
and
or
or
pop
dec
pop
mov
cmc
call
add
adc
add
jne
lahf
scas
push
add
out
lret
push
clc
aas
iret
aaa
sbb
or
popf
mov
clc
jb
add
clc
mov
clc
fs
fstpl
add
add
in
loopne
cmc
stos
stos
shr
mov
enter
fwait
mov
add
cmc
inc
add
mov
jl
stos
add
test
pop
lea
cmp
mov
ret
clc
xchg
lock
jp
push
pushf
inc
clc
loop
pop
aaa
ficomps
xor
sbb
mov
add
push
add
mov
movsl
clc
mov
add
and
inc
add
sar
mov
add
repnz
mov
clc
outsl
sar
inc
clc
jo
add
dec
sub
add
sti
inc
add
sar
add
test
jne
cmpsl
clc
mov
nop
mov
je
clc
xor
add
xchg
loopne
xor
add
cmp
negb
clc
das
rcll
loop
in
stos
or
add
add
add
repz
cwtl
fwait
sub
sbb
sbb
fsubl
add
movsb
clc
imul
pop
leave
test
add
add
fstps
fucomp
sub
add
inc
clc
xchg
push
enter
daa
clc
ss
aas
mov
icebp
loope
push
pop
xor
add
sub
pop
xbegin
cmp
jns
add
add
xor
add
add
add
fnstenv
add
fildll
mov
test
add
mov
bound
add
clc
lcall
add
xor
mov
xchg
jne
clc
jecxz
aad
add
lea
pop
clc
cltd
fnstsw
clc
iret
fwait
pop
push
add
xchg
mov
add
xchg
jp
sub
clc
and
add
cmp
fsubl
outsb
stos
sbb
clc
mov
add
dec
sub
push
mov
cmp
cs
push
add
data16
cmp
mov
cli
push
push
clc
dec
stos
pop
cwtl
pop
add
pusha
add
clc
ficoms
add
pop
and
add
add
cmp
inc
add
pusha
add
jmp
insl
sub
push
add
pop
mov
add
add
jmp
dec
mov
movsl
clc
or
iret
xchg
add
add
clc
loop
xchg
aaa
xchg
out
loop
cmpsl
clc
mov
mov
cmp
add
add
fcomip
xchg
out
jo
add
aaa
xor
add
add
add
add
add
add
clc
stc
negb
add
clc
jbe
inc
add
mov
xor
add
add
sbb
push
add
add
add
cs
insb
and
rcrb
sbb
lods
mov
cmp
add
sub
in
push
cmp
push
push
add
add
imul
push
add
sub
lock
clc
adc
add
add
cmp
push
fiaddl
incb
sbb
icebp
in
cmp
add
hlt
xlat
jae
add
icebp
rcl
aad
cwtl
pop
es
imul
add
outsb
push
fisubrs
add
xor
or
inc
add
sti
movsb
clc
movsl
clc
pop
cmp
lods
mov
clc
lea
mov
xchg
sar
and
add
int3
adc
add
cmp
clc
insl
mov
or
stos
addr16
xchg
hlt
xor
add
dec
push
or
mov
lods
repnz
sub
outsl
mov
add
ffreep
clc
sti
sahf
add
add
jno
add
syscall
clc
add
fwait
xchg
imul
mov
inc
add
out
xor
ret
sub
pop
imul
adc
add
sub
lock
mov
icebp
mov
adc
add
insb
pop
and
add
aam
test
decl
add
test
push
adc
add
add
in
es
out
mov
shlb
clc
xlat
stos
mov
cmpsl
clc
test
mov
sbb
shlb
add
and
add
clc
and
add
sbb
sbb
xchg
or
add
push
out
je
xor
add
push
imul
mov
adc
pushf
inc
add
xchg
inc
clc
jnp
clc
pavgb
mov
clc
in
lods
inc
add
fnsave
in
fnstenv
add
sub
clc
cmp
add
data16
xlat
fucomi
adc
add
sahf
cltd
out
pop
outsb
stc
sbb
sub
add
pop
mov
clc
jg
bound
add
xor
add
sub
xor
clc
and
add
clc
fisubl
clc
cmp
notl
rorb
add
es
xor
inc
add
aam
ret
clc
je
mov
je
cmp
out
popa
add
scas
imul
clc
cli
inc
clc
pop
inc
clc
pop
sbb
mov
in
es
std
mov
mov
add
clc
sub
push
clc
jo
add
clc
in
ss
nop
repnz
sub
test
jp
mov
push
cmp
pop
iret
xor
add
mov
pop
js
add
rcrb
or
add
cmp
push
clc
mov
inc
add
int
clc
cmp
lret
popa
add
cmp
clc
pop
sahf
pop
cmp
add
pop
pop
stos
xor
add
xabort
clc
push
mov
clc
xchg
cmp
clc
test
add
mov
dec
push
pop
clc
clc
in
mov
add
mov
add
and
add
and
and
add
sbb
xor
add
cmp
xchg
add
add
cmpsb
clc
ficoms
add
mov
jo
add
je
cmp
xbegin
add
clc
int
lcall
dec
pop
jbe
dec
rol
clc
push
in
rclb
xchg
lcall
sub
mov
add
fsubrs
mov
add
push
add
mov
ljmp
scas
xor
clc
xor
add
add
addr16
cmp
mov
mov
push
add
mov
stc
aas
pop
xor
test
imul
mov
clc
scas
mov
mov
xchg
test
addr16
or
add
fisttps
clc
jne
or
cmp
repnz
sar
test
outsl
mov
dec
dec
out
das
fdivrl
clc
lods
mov
add
mov
add
cmpsb
clc
hlt
mov
clc
scas
pop
xchg
jnp
cmp
nop
sub
into
xchg
jns
mov
clc
jo
add
add
clc
scas
icebp
pusha
add
fsub
clc
sarb
test
adc
add
pop
cmp
lock
fcom
ja
sub
pop
or
xchg
dec
dec
lcall
jno
add
shll
xchg
js
decl
cmp
clc
jno
add
popf
jp
add
mov
shlb
add
cmpsb
clc
in
cmp
clc
push
mov
sbb
clc
add
add
clc
xor
gs
mov
fsub
clc
std
adc
add
push
inc
add
pusha
add
fs
test
aaa
pop
cmp
add
add
adc
add
test
jecxz
in
mov
clc
jns
clc
lea
insb
dec
sbb
add
sbb
add
mov
loopne
shrb
shll
add
ret
clc
test
add
add
add
jg
add
mov
dec
call
pop
jge
clc
mov
bound
add
sbb
cltd
xor
sahf
mov
xlat
je
test
ret
add
add
daa
clc
insb
add
pushf
jns
stos
xabort
push
jecxz
clc
mov
clc
repz
inc
add
add
imull
pop
fs
push
clc
in
cmpsb
clc
add
add
clc
xor
add
clc
push
add
call
arpl
add
mov
clc
imul
shl
clc
jp
jns
and
add
mov
dec
clc
inc
clc
sbb
add
out
sub
xor
add
add
mov
cmp
push
add
ret
clc
xchg
dec
loop
push
add
pop
pop
mov
mov
add
es
cmc
push
xchg
sub
add
jb
add
out
fsincos
cwtl
imul
pop
dec
ds
sbb
or
add
mov
outsl
jno
add
add
inc
add
pop
xabort
cmc
mov
es
sbb
movsb
clc
jmp
es
insl
dec
nop
gs
pop
in
pusha
add
adc
add
pop
cmp
mov
lea
dec
mov
add
clc
fcmove
xor
into
popf
mov
pop
aad
jo
add
push
add
sti
loope
das
nop
or
add
add
push
add
mov
jge
cld
out
jle
clc
outsl
mov
and
add
push
or
add
add
pop
shlb
clc
notb
add
clc
stos
scas
sbb
insl
repz
fcmovnbe
mov
mov
add
mov
push
pop
mov
sahf
xor
add
hlt
hlt
clc
cmp
ret
clc
pusha
add
jg
clc
jl
mov
clc
mov
clc
test
add
xor
add
clc
pop
sub
jle
clc
leave
dec
aad
enter
sahf
sbb
push
lret
pop
push
insl
movsl
clc
push
clc
mov
movsl
clc
dec
clc
cwtl
push
loopne
sbb
mov
add
popf
iret
cmp
sbb
xchg
add
add
add
fisubrl
flds
add
fadds
add
pop
inc
clc
push
xor
pop
add
add
add
xor
sub
loopne
jl
clc
pop
popa
add
mov
pop
sbb
mov
clc
lods
jo
add
jge
clc
sarb
or
cmpsb
clc
push
push
test
clc
jl
clc
xor
add
add
add
pop
push
clc
mov
add
test
add
aad
xor
add
sar
add
sbb
rcrb
push
addr16
pop
xor
add
add
pop
ja,pt
mov
inc
clc
xchg
imul
clc
fstps
add
cmc
lret
shl
mov
sar
iret
loop
or
push
xor
add
fs
cwtl
popa
add
cmp
fisubrs
dec
test
clc
test
mov
add
pop
pop
mov
sub
add
in
cmp
das
rcl
shll
add
xchg
mov
add
add
inc
add
js
lock
jmp
lahf
dec
sub
xor
add
sar
seto
add
xchg
sbb
add
push
add
fdivrl
inc
add
add
add
xchg
inc
clc
loopne
jg
fcmovu
mov
clc
lods
out
jmp
inc
clc
xabort
iret
xor
clc
rcl
out
lods
xchg
movsl
clc
jns
imul
add
push
inc
add
add
add
add
ret
pop
jo
add
add
sub
lahf
ja
or
mov
dec
sbb
clc
add
add
sub
add
push
add
xchg
pop
lods
push
mov
clc
stos
sti
adc
add
cltd
xor
add
data16
sbb
push
outsl
add
add
add
clc
jae
add
mov
clc
out
iret
xor
add
push
mov
mov
add
clc
adc
add
inc
add
inc
add
in
js
clc
xor
hlt
xchg
jp
dec
loopne
rcrb
jl
jecxz
push
push
clc
mov
add
int3
mov
add
clc
mov
mov
jecxz
cmpsb
clc
cltd
lcall
clc
lods
pushl
add
mov
aam
cltd
dec
mov
clc
push
add
and
jl
add
pop
call
clc
sbb
clc
jno
add
clc
mov
inc
add
inc
add
jecxz
cmp
clc
rorl
add
inc
add
xchg
fisubl
add
or
add
cmp
add
adc
add
clc
dec
scas
scas
imul
push
ljmp
call
data16
mov
add
loop
xor
add
sahf
jo
add
int3
xor
add
cld
outsl
xbegin
addr16
mov
out
or
fidivrs
add
dec
mov
loop
xor
add
add
jo
add
jo
add
popa
add
in
mov
call
or
or
cs
pop
clc
stos
jne
mov
jo
add
cmc
dec
xor
pusha
add
sbb
loop
cmp
iret
push
add
insb
fsubrl
add
test
xchg
outsb
adc
add
movsl
clc
xchg
outsb
dec
test
clc
cmp
clc
out
xabort
nop
addr16
xor
mov
pop
jne
pop
cmpsl
clc
cmp
clc
jne
jl
iret
test
xor
add
roll
mov
out
das
lahf
jbe
sahf
fs
mov
clc
push
clc
xor
ficoml
add
or
mov
add
push
inc
add
movsl
clc
aaa
clc
roll
push
add
stos
repnz
das
xchg
test
add
fsubl
clc
mov
in
jne
clc
mov
add
mov
int3
xor
add
clc
aas
ljmp
clc
add
add
insl
mov
add
cmp
in
inc
add
into
xchg
or
add
lea
add
cmp
out
mov
in
movsl
clc
pop
stos
jb
add
push
add
cld
add
add
clc
mov
rorl
xabort
mov
clc
scas
pusha
add
fcoml
add
jmp
add
jae
add
cmc
cmpsl
clc
dec
push
clc
pushf
sub
inc
clc
sahf
cltd
cmp
jp
daa
clc
pop
imul
popa
add
cld
mov
clc
mov
and
add
dec
sahf
out
and
add
lods
mov
clc
sub
clc
mov
scas
pop
arpl
add
xor
clc
xor
cmpsl
clc
xchg
data16
inc
add
test
or
clc
sub
pop
clc
dec
lret
jbe
clc
dec
cmp
clc
mov
divb
clc
sub
add
or
adc
je
add
jno
add
mov
in
mov
add
roll
clc
xor
add
repz
add
and
and
sub
mov
out
aam
add
mov
stos
and
add
and
add
sar
sar
xor
add
movsl
clc
sar
cmp
jae
add
xor
add
dec
or
in
ss
into
xor
add
fldl
ret
xbegin
cmp
leave
into
das
add
add
inc
clc
mov
clc
mov
pop
fs
je
jb
add
add
in
sahf
jmp
adc
add
mov
stos
ljmp
clc
pop
sti
fiaddl
add
cmc
leave
out
call
out
jle
mov
push
scas
iret
push
clc
sbb
add
negb
clc
or
xabort
pop
mov
add
imul
sar
cmp
jp
add
add
clc
lahf
fs
jnp
adc
add
fiaddl
add
leave
jnp
jne
clc
aad
shlb
push
leave
sar
add
or
sub
add
add
clc
cmp
rcll
add
bound
add
push
lret
out
mov
clc
mov
add
jns
adc
add
add
jnp
lcall
adc
add
xor
add
dec
mov
sbb
add
mov
jno
add
or
into
and
add
pop
int
mov
clc
pop
pop
adc
add
es
adc
add
je
clc
cmpsb
clc
dec
pop
std
lcall
sbb
sar
dec
fwait
loope
out
imul
add
cmp
xbegin
xor
add
addr16
and
pop
stc
jbe
add
cmp
sub
add
and
clc
push
clc
cmp
add
sar
clc
rcrb
xor
sbb
clc
xchg
cmpsl
clc
movsl
clc
cmp
clc
xor
add
push
or
imul
push
mov
test
mov
pop
lods
xchg
xchg
push
add
sbb
cmp
call
das
mov
add
fstpt
jb
add
inc
add
xor
pushf
sahf
sar
jne
clc
dec
popa
add
adc
add
cmpsb
clc
cmp
or
dec
stc
cli
jno
add
mov
xchg
enter
push
fs
cmpsl
clc
popf
mov
cli
cmp
sub
mov
loopne
pop
ljmp
cmpsb
clc
dec
cmp
aad
add
fimuls
pop
clc
jmp
adc
add
add
scas
popa
add
dec
sar
clc
movsb
clc
add
add
add
ud0
clc
mov
popf
xchg
scas
xabort
add
arpl
add
add
cltd
xchg
xchg
mov
xchg
jne
xor
add
add
jle
pop
dec
jle
pushf
test
sbb
pushf
aam
clc
cmp
add
rcl
dec
jl
dec
repz
jl
clc
aaa
sub
add
cmpsb
clc
ljmp
test
clc
outsb
sub
or
add
xlat
pop
clc
fstl
xchg
sar
aas
push
clc
lcall
add
clc
fldl
add
mov
imul
add
push
xchg
movsb
clc
mov
mov
out
cmpsl
clc
inc
clc
in
xor
test
dec
imul
stc
enter
inc
clc
jnp
add
into
cwtl
out
adc
jmp
stc
pusha
add
mov
inc
clc
aas
sti
or
xchg
pusha
add
mov
push
clc
lahf
movsb
clc
inc
clc
cmp
add
outsb
xchg
imul
sbb
nop
and
add
xchg
inc
add
or
clc
movsl
clc
jp
fistpl
cmc
cwtl
test
dec
mov
mov
fisttps
clc
push
add
sbb
add
cmpsl
clc
jle
clc
test
ret
jg
add
dec
dec
in
mov
clc
inc
add
popf
insb
or
sub
mov
cmp
add
push
cmp
push
jecxz
push
mov
adc
inc
add
mov
lret
std
mov
add
adc
add
dec
push
mov
clc
mov
add
xchg
mov
mov
cli
and
add
jp
mov
add
mov
add
pop
mov
jns
pop
mov
test
hlt
xabort
hlt
sub
clc
incb
add
mov
scas
xabort
add
and
into
xchg
addr16
jmp
add
xor
scas
aam
mov
clc
or
add
notl
add
aad
add
popa
add
inc
clc
dec
sub
outsb
out
rorb
add
addr16
mov
clc
movsb
clc
mov
adc
cmp
push
add
lret
fmulp
mov
add
mov
inc
clc
rcrb
cmc
stc
sub
add
add
add
mov
sub
xchg
cwtl
jbe
mov
add
add
movsl
clc
pop
dec
lods
sbb
clc
dec
leave
stc
movsb
clc
inc
add
ja
add
clc
hlt
xchg
ja
add
sub
dec
pop
cmp
mov
into
test
jo
add
xchg
lock
jecxz
or
add
in
mov
jmp
add
xchg
sahf
cmc
jne
clc
gs
mov
xchg
pop
call
clc
dec
in
cltd
out
fld
clc
vshufps
clc
lods
outsl
jge
clc
ds
push
add
mov
clc
add
add
sub
testb
loope
sub
sbb
testb
add
dec
inc
clc
sub
rolb
mov
add
nop
shl
imul
jb
add
pushf
dec
aam
clc
sub
clc
sbb
pop
sbb
cmp
aaa
and
add
leave
lcall
aam
daa
clc
dec
push
or
add
std
pop
stos
pusha
add
insb
dec
adc
add
clc
xor
add
es
mov
add
or
cmc
xbegin
dec
cmp
shlb
clc
mov
push
add
arpl
add
lret
clc
cmpsl
clc
sar
sbb
pop
mov
mov
ret
clc
stc
dec
daa
clc
and
add
mov
push
sti
ds
test
add
clc
inc
clc
fisubrl
add
add
dec
pop
aaa
popa
add
int
clc
lods
cwtl
mov
cmp
and
add
dec
stos
pusha
add
and
add
outsl
mov
or
mov
add
add
outsl
mov
sbb
sub
clc
add
pop
hlt
lret
lea
cmp
sub
lcall
jbe
fld
clc
dec
sbb
inc
add
mov
sahf
negb
fwait
sar
outsl
xchg
cmp
in
ds
add
and
pop
jbe
into
jo
add
add
loopne
push
add
mov
call
add
repz
mov
mov
sahf
sbb
data16
int
add
test
enter
clc
outsb
data16
movsb
clc
sahf
and
cmpsl
clc
aad
mov
mov
clc
aad
insl
rcl
or
add
shrb
clc
cmc
xor
add
add
leave
mov
call
clc
push
bound
add
add
ds
js
negb
es
outsl
sbb
clc
gs
push
mov
inc
add
fisubrl
add
daa
clc
push
stos
jnp
add
add
fucom
clc
mov
inc
clc
dec
dec
pop
mov
and
adc
add
stc
pop
clc
sub
cltd
scas
push
loop
and
sub
imul
xchg
mov
out
pop
pop
clc
test
clc
cmp
push
add
adc
add
xchg
push
xchg
add
add
add
repz
shrl
cmp
js
sub
sar
adc
add
xchg
push
jle
enter
xchg
xor
add
pop
clc
into
jp
cmpsl
clc
aaa
dec
insb
mov
bound
add
test
sahf
dec
testl
add
sar
push
clc
mov
fcmove
cmp
clc
ljmp
jmp
clc
sub
mov
scas
das
mov
add
add
mov
dec
ja
je
add
imul
mov
jp
add
add
push
pop
dec
fs
loop
fstpl
jp
mov
lcall
not
adc
add
mov
clc
jg
test
mov
mov
add
add
or
pop
ja
push
ret
cmp
lock
add
xabort
adc
add
and
add
add
daa
clc
cmp
lcall
mov
clc
xor
add
mov
cmove
mov
add
add
add
push
mov
clc
xor
add
sbb
sub
clc
test
inc
clc
adc
add
add
xabort
inc
add
loopne
clc
mov
cs
mov
clc
clc
or
roll
imul
add
pop
imul
popa
add
aaa
lods
cmpsb
clc
mov
loope
cmp
lret
push
add
cli
adc
add
add
add
scas
push
add
ret
xlat
imul
mov
add
sub
push
xabort
aaa
jo
add
xchg
xor
add
add
call
mov
xabort
lret
test
adc
add
adc
add
lahf
out
push
add
or
xor
add
inc
add
in
xor
add
sbb
leave
adc
add
clc
push
add
fwait
jnp
dec
sbb
lahf
test
mov
aas
sub
test
adc
add
clc
cmp
add
clc
jae
add
or
js
cwtl
int3
lea
fs
popa
add
cld
addr16
mov
lock
loope
rcr
test
lea
add
sub
clc
sarl
push
add
or
clc
and
add
jge
add
fsubrs
add
test
clc
adc
add
pop
clc
repz
clc
out
das
jne
xchg
sbb
jecxz
xchg
sbb
add
mov
clc
sar
and
dec
dec
mov
xchg
push
add
test
clc
shrd
sbb
push
sbb
mov
insb
clc
cmp
xor
add
dec
xchg
mov
xchg
xor
add
es
repnz
xchg
cmp
push
bound
add
clc
inc
add
cmpsb
clc
sar
push
add
xor
add
clc
lods
ss
add
mov
clc
test
mov
mov
xchg
jecxz
push
pop
dec
arpl
add
xor
add
out
leave
aam
adc
add
fbstp
add
arpl
add
mov
cmp
cmp
pop
in
rorb
popa
add
cmp
inc
add
pop
push
add
cld
dec
daa
clc
cs
add
add
clc
and
pop
cmc
cmp
add
clc
mov
push
xchg
dec
dec
xor
add
dec
push
cmp
add
add
sbb
in
into
dec
xchg
cli
lods
pusha
add
das
stos
sbb
cmc
or
sbb
xlat
sbb
stos
popa
add
outsl
movsl
clc
pop
jp
add
in
pop
xor
add
xor
add
ja
clc
sar
out
adc
add
add
lret
aas
push
and
add
sub
add
jl
clc
jns
push
add
cmp
clc
dec
fcoml
clc
jecxz
lods
xchg
pop
es
fsubr
pop
js
dec
ja
pop
stc
shll
clc
fnsave
add
ja
add
aas
dec
popa
add
and
inc
clc
and
add
lret
ffree
clc
movd
pop
cmp
pop
clc
mov
cmp
pushf
or
mov
shr
lock
sub
clc
add
add
dec
lods
iret
fnstenv
add
pop
cwtl
xabort
add
movsl
clc
fsubs
add
mov
idivb
add
push
add
dec
pop
cwtl
inc
add
mov
in
mov
add
in
inc
clc
inc
clc
div
stc
cmc
lods
ret
clc
in
sub
fs
fdivrl
lret
xor
add
add
repnz
add
cmp
cli
bound
add
mov
add
stc
das
inc
clc
loope
jmp
fldcw
in
mov
pop
scas
lret
sub
clc
test
add
sub
leave
nop
cmp
add
vmwrite
clc
and
add
fs
pop
mov
add
add
dec
push
add
push
add
and
add
push
clc
ss
add
add
inc
add
fsubrs
pop
inc
add
cmp
clc
pop
xchg
cli
jg
sbb
add
inc
clc
imull
in
enter
clc
mov
add
clc
or
push
clc
jle
imul
clc
aaa
sbb
cmpsb
clc
test
sbb
ljmp
ret
xbegin
dec
clc
jge
add
fnstsw
out
out
push
lret
clc
mov
add
loope
mov
aas
lods
out
mov
cmc
hlt
int3
dec
push
add
shl
cmp
loopne
jbe
aam
scas
dec
movsl
clc
inc
clc
pop
or
pop
cmp
ds
das
test
dec
inc
add
xabort
push
add
repz
add
add
hlt
dec
sub
out
or
sbb
imul
add
cwtl
and
add
add
xchg
mov
cwtl
loop
inc
add
mov
mov
add
mov
out
xbegin
fcomps
mov
add
rcrb
dec
xor
add
jnp
ds
add
fnstcw
inc
add
inc
add
sar
addr16
insb
out
fxam
clc
call
sar
stos
dec
xabort
and
add
cmp
push
add
arpl
add
clc
pop
addr16
push
clc
adc
add
pcmpgtw
sbb
jecxz
jno
add
jns
jg
clc
pop
clc
lcall
add
add
cmpsl
clc
mov
clc
mov
idivl
xbegin
fisubl
lock
add
cltd
pop
leave
aad
add
jno
add
add
clc
add
add
add
mul
clc
movsl
clc
jmp
clc
bound
add
xchg
mov
cmc
sub
jno
add
xchg
or
mov
punpckldq
add
cs
xor
add
test
imul
pop
fsubr
xlat
jnp
add
and
add
sbb
scas
jbe
clc
out
inc
clc
mov
push
aaa
xchg
call
add
fstl
mov
pusha
add
mov
out
imul
xlat
pop
sub
clc
push
clc
sub
dec
loope
ss
dec
xchg
data16
dec
jne
clc
fs
add
add
frstor
cmc
jo
add
add
sbb
clc
bound
add
add
xchg
add
cltd
sub
xchg
aam
clc
jmp
mov
push
add
dec
and
add
add
dec
dec
iret
icebp
out
or
add
pusha
add
test
jo
add
shlb
add
test
cmp
add
mov
jne
add
mov
jl
xor
popl
clc
mov
add
cltd
outsb
xchg
pop
clc
scas
mov
add
add
push
add
pusha
add
test
adc
push
xchg
bnd
or
or
cmp
add
out
dec
jb
add
clc
fsts
add
add
add
xchg
jb
add
adc
inc
add
mov
lahf
cmp
call
aam
jne
test
sub
mov
mov
pop
mov
pop
sti
dec
xchg
roll
or
or
jp
and
notl
add
push
sub
push
hlt
insl
lcall
add
stos
xchg
in
out
lea
xbegin
xor
add
clc
mov
clc
ds
std
outsl
jmp
clc
sahf
cmp
add
icebp
mov
add
cmp
add
pop
mov
sbb
mov
pop
sahf
jns
cmp
push
iret
pop
xchg
loopne
imul
fsubs
add
and
add
add
and
add
clc
pop
daa
clc
inc
add
ret
push
add
sahf
in
cmpsb
clc
xchg
mov
rorb
jbe
cmc
in
fstps
fnstcw
mov
outsb
clc
dec
out
jle
inc
clc
decb
or
mov
add
xabort
mov
into
call
daa
clc
push
clc
cmpsb
clc
sti
pop
xabort
add
movsl
clc
movsb
clc
cld
lods
mov
clc
jmp
in
add
add
out
sbb
add
mov
jo
add
clc
insl
xchg
je
mov
clc
iret
cmc
sbb
clc
in
out
repz
push
add
je
xchg
dec
notl
clc
inc
clc
dec
mov
sub
clc
pop
scas
and
add
clc
push
sbb
add
into
clc
cmp
das
inc
clc
ja
lods
mov
pop
inc
clc
jp
add
cltd
aad
incl
add
adc
ss
loop
jnp
adc
add
sbb
lock
arpl
add
clc
jmp
clc
mov
insl
repnz
inc
clc
sbb
cmp
into
stos
aas
lahf
mov
js
clc
inc
clc
jle
ss
sub
push
add
inc
clc
ljmp
clc
mov
add
jg
cltd
xchg
mov
fs
cmp
aad
clc
mov
add
dec
jl
add
dec
mov
clc
sar
pusha
add
lock
add
add
add
popa
add
push
daa
clc
cmp
mov
jecxz
scas
push
mov
clc
mov
dec
pop
xor
add
cmp
add
and
add
xlat
mov
xlat
scas
mov
test
adc
add
add
add
add
movsb
clc
jns
je
clc
out
jmp
arpl
add
pop
divb
test
ret
push
sti
xchg
and
add
add
sbb
dec
and
add
push
insb
jno
add
inc
clc
lods
xor
sub
add
inc
clc
sbb
lods
add
add
mov
inc
clc
and
add
clc
out
dec
leave
cwtl
mov
add
cmp
test
filds
add
xchg
lcall
add
add
add
add
addr16
sub
add
add
sbb
clc
jnp
stos
jbe
inc
add
sub
add
add
add
shrl
in
ljmp
add
clc
and
add
adc
add
cmpsl
clc
nop
popa
add
jbe
jmp
nop
xor
add
add
cmp
clc
push
add
cmp
xchg
lahf
pop
inc
clc
xor
clc
xchg
push
mov
add
mov
clc
test
out
or
clc
es
dec
std
into
xchg
fdivl
and
add
ss
loop
dec
mov
clc
or
lods
pop
push
fwait
sar
clc
enter
insl
mov
clc
loopne
out
fsub
clc
inc
clc
ret
clc
rorl
dec
or
add
add
ret
pop
out
jbe
pusha
add
in
xlat
movsb
clc
bound
add
sub
push
add
pop
mov
add
std
sub
cmp
testl
cmp
shl
clc
lock
dec
cmp
clc
lret
jecxz
out
adc
add
add
xor
add
pop
es
inc
add
loope
jle
out
std
incl
clc
insb
cmp
mov
jmp
pop
and
add
add
clc
loop
enter
cmp
jo
add
clc
scas
cmp
fst
call
pop
int3
lret
cmp
pop
shlb
add
and
add
into
push
test
sub
add
addr16
daa
clc
add
add
es
or
jmp
clc
iret
mov
into
push
divl
clc
in
mov
add
sbb
jns
vpmacsswd
cmp
mov
add
mov
clc
ja
mov
add
cmp
add
daa
clc
sahf
sbb
xchg
clc
add
dec
ss
cmp
dec
sbb
mov
ss
xabort
cmc
push
mov
clc
push
das
rclb
add
xabort
clc
mov
mov
xabort
add
xor
push
clc
int3
xor
add
clc
push
sbb
clc
imul
clc
mov
clc
add
movhps
or
js
repz
clc
dec
adc
add
or
add
clc
jns
clc
cmp
push
jmp
jge
sbb
add
clc
lock
add
pop
fistl
add
adc
push
add
sub
mov
popl
pop
sub
sub
cmpsb
clc
pop
add
add
clc
clc
jbe
fwait
lods
scas
dec
push
mov
jno
add
aam
inc
add
xor
add
mov
add
scas
xchg
xor
mov
xor
clc
out
scas
xor
clc
test
clc
xabort
fmull
clc
lods
push
ds
outsb
aas
daa
clc
or
mov
push
add
jb
add
clc
pusha
add
dec
and
and
add
sbb
add
add
clc
cmp
aam
sub
add
clc
cltd
out
xchg
sub
cmp
add
push
pusha
add
fs
sbb
and
ss
dec
mov
out
inc
clc
jg
cmp
add
adc
add
push
clc
adc
add
add
add
cltd
push
sar
push
add
test
outsl
incl
iret
jns
pop
stos
jnp
clc
mov
add
add
test
clc
in
jl,pt
jno
add
add
aaa
adc
add
clc
cmp
pop
mov
clc
fdivrs
clc
push
cmp
pop
mov
scas
stos
mov
clc
cmp
add
xchg
sahf
je
clc
inc
clc
adc
add
icebp
xor
cmp
jae
add
in
adc
add
clc
pop
cmp
push
dec
or
add
add
xchg
out
and
jl
out
and
add
and
add
xchg
loop
lods
mov
mov
test
or
push
cmp
sub
mov
add
cmc
sub
add
add
xchg
mov
pop
arpl
add
clc
push
clc
dec
test
sub
add
popa
add
cwtl
int3
cmp
push
jno
add
iret
mov
add
clc
inc
add
std
dec
xchg
push
sbb
cwtl
fs
dec
clc
lock
add
fcomp
sar
lahf
stos
inc
clc
mov
clc
loopne
pop
icebp
and
add
popa
add
mov
cld
in
adc
add
add
pop
clc
fs
push
add
jmp
stos
popf
or
add
clc
adc
add
clc
push
pop
clc
fwait
xor
add
xchg
es
gs
enter
add
or
xor
add
add
lcall
add
cmc
fcom
clc
and
add
pop
test
inc
add
popf
mov
clc
imul
push
add
int
es
lods
mov
add
jns
das
lods
xchg
mov
cltd
push
je
clc
lock
add
pop
mov
sub
clc
out
jl
sbb
add
loop
xchg
mov
clc
nop
inc
add
xchg
sbb
stos
and
clc
fstp
mov
in
jns
sbb
clc
and
add
clc
mov
jl
push
mov
sbb
inc
add
lret
cld
scas
cmpsb
clc
inc
clc
xchg
mov
jg
imul
add
add
out
xchg
scas
iret
dec
xor
add
add
push
add
add
je
clc
mov
add
add
add
clc
lea
xor
add
sbb
outsb
jo
add
rep
clc
jle
add
sub
in
push
add
push
loope
mov
add
add
sbb
dec
into
sbb
jbe
sub
add
clc
adc
cmp
jne
clc
sub
mov
cmp
clc
out
or
add
ror
leave
pop
in
mov
mov
xchg
cmc
imul
or
out
pop
clc
and
add
dec
in
out
ret
clc
jns
in
and
add
popf
xchg
lret
add
pop
mov
clc
jo
add
dec
es
cld
jnp
clc
jg
stos
shll
add
hlt
mov
mov
add
add
sbb
add
popf
dec
call
clc
dec
fwait
mov
aaa
push
hlt
jl
clc
ret
add
shl
clc
out
fwait
sbb
mov
add
add
cmp
add
cmpsl
clc
hlt
loopne
data16
pop
ljmp
das
pmulhuw
xchg
aaa
push
add
movsb
clc
sbb
xchg
ds
mov
in
or
loope
je
jmp
xchg
addr16
cmp
scas
arpl
add
sub
clc
test
mov
fs
mov
pop
loop
ret
clc
cmp
scas
sub
loopne
cmp
stos
pop
out
pop
repz
push
imul
loope
pop
das
fneni(8087
clc
adc
add
add
cltd
nop
mov
clc
cmpsl
clc
pop
daa
clc
or
sbb
sar
jg
ljmp
dec
push
push
mov
clc
xlat
rclb
cwtl
xlat
xchg
cmp
clc
loop
fnsave
out
jmp
js
clc
in
aam
clc
test
adc
add
out
loop
inc
add
popf
xor
add
add
xor
add
clc
mov
add
sar
add
jns
call
clc
ss
loopne
movsb
clc
push
add
or
jecxz
mov
pop
repnz
add
call
lea
xor
add
outsl
cmp
clc
xor
add
clc
xor
sar
mov
add
clc
pop
sbb
add
jg
add
fmuls
iret
loopne
jne
lcall
adc
add
push
mov
inc
clc
dec
shl
clc
pop
insl
jmp
lret
cmp
outsb
lahf
pop
popf
out
xor
add
and
add
mov
pop
xchg
pop
ljmp
inc
add
add
add
cwtl
push
xabort
cmp
cmc
dec
pop
cmc
cmp
inc
add
mov
sbb
fcomip
repnz
imull
insb
sbb
data16
aam
clc
or
push
ljmp
mov
scas
sub
add
or
clc
repnz
add
in
repnz
inc
clc
daa
clc
push
add
sti
test
arpl
add
idivl
pop
xor
add
lods
xchg
hlt
cmp
jnp
add
enter
add
cmp
adc
add
cmp
mov
data16
pop
mov
sub
cmp
adc
add
out
leave
enter
jle
sub
out
push
add
test
add
pop
into
add
add
add
clc
scas
mov
clc
sbb
aas
jb
add
clc
hlt
push
add
pop
clc
cmpsl
clc
leave
sub
add
add
repnz
xlat
and
add
clc
sar
in
sub
dec
call
mov
clc
ss
clc
and
add
fisubrl
add
mov
movsl
clc
ret
sub
clc
aam
mov
add
enter
clc
xchg
sub
sbb
clc
enter
add
ds
aam
push
add
mov
fldenv
add
clc
xor
add
adc
adc
add
add
bound
add
clc
xor
add
pusha
add
dec
fwait
lahf
shr
inc
clc
icebp
jbe
cmp
int
notl
add
xchg
adc
add
add
out
sub
push
add
inc
add
xor
add
in
ljmp
clc
xchg
cmpsl
clc
xbegin
fwait
pusha
add
mov
and
add
jp
cmpsl
clc
das
loop
mov
clc
xchg
mov
add
add
ja
clc
lods
aam
fwait
mov
loop
lea
add
push
push
into
cmpsl
clc
out
cmp
clc
sub
outsb
clc
push
hlt
and
add
add
sbb
mov
movsl
clc
or
add
pop
out
dec
cmp
loopne
cmp
add
add
popa
add
mov
aam
mov
jmp
clc
nop
fsubrs
dec
and
add
add
inc
add
outsl
inc
add
cmpsl
clc
push
push
clc
sarl
lcall
clc
ret
xchg
jmp
push
ret
decl
bound
add
jno
add
add
fistps
and
cwtl
out
iret
ret
clc
pop
clc
loop
aad
adc
clc
push
test
cmp
icebp
repnz
mov
clc
mov
mov
cmp
ss
jg
clc
movsl
clc
je
out
add
add
add
mov
mov
clc
xlat
jmp
add
shrb
lea
add
clc
or
pop
dec
sti
push
add
scas
lock
add
jmp
cmp
mov
pop
clc
inc
clc
ljmp
loope
jp
push
add
xchg
push
add
sar
jmp
cmp
mov
mov
add
cmpsl
clc
mov
movsl
clc
popf
scas
dec
xchg
push
not
out
cmp
bound
add
rolb
clc
insb
shrl
inc
clc
loope
cmpsl
clc
fadds
add
mov
fsubrs
add
clc
imul
xor
add
clc
dec
data16
push
add
xbegin
pop
clc
paddq
add
pop
clc
jno
add
cmp
clc
das
decl
clc
sbb
shrb
adc
add
jmp
add
fmull
shll
cld
cmpsb
clc
lret
std
mov
clc
stos
and
add
cmpsl
clc
pushf
add
jae,pn
add
xor
data16
adc
clc
xabort
clc
cmp
add
cmp
repz
stc
inc
clc
lods
stos
mov
rcl
hlt
out
aas
clc
and
add
cmc
sbb
push
sar
jbe
mov
mov
cmpsb
clc
inc
add
mov
push
add
add
pop
int
dec
rcrb
pop
pop
rorl
xchg
lods
jge
clc
hlt
loope
lcall
pop
mov
xchg
add
add
add
bound
add
inc
add
rcl
out
iret
cltd
icebp
test
data16
inc
clc
xchg
mov
movsb
clc
mov
stos
loop
and
lcall
insl
inc
clc
mulb
sbb
jnp
clc
or
data16
dec
inc
add
jns
add
pop
sar
xchg
mov
into
mov
clc
vsubps
stos
xabort
clc
xchg
aad
in
fcompl
cmp
mov
clc
je
add
xor
add
add
outsb
xchg
xor
add
int3
sbb
stc
xor
add
push
clc
dec
sub
pusha
add
iret
push
pop
clc
inc
add
test
std
inc
add
xor
add
clc
test
mov
add
rorb
add
in
xchg
data16
sti
push
pop
outsb
clc
rclb
add
fldenv
add
or
mov
clc
xor
add
pop
xlat
std
leave
jecxz
fstp
jb
add
cmp
mov
add
repz
movsl
clc
lahf
jbe
add
sbb
ret
add
lods
out
mov
popf
xlat
push
ret
and
add
xor
add
jns
clc
jecxz
std
lock
sti
sbb
ret
mov
add
arpl
add
add
mov
clc
leave
inc
add
sbb
add
mov
clc
sub
clc
addr16
push
cmp
into
scas
call
add
cli
jnp
clc
inc
add
mov
add
aas
in
sbb
xabort
add
mov
add
mov
pop
lahf
pop
mov
clc
sbb
add
jge
clc
jo
add
add
js
pusha
add
xbegin
inc
add
adc
sub
xchg
ja
cs
xchg
hlt
pop
or
add
adc
add
sub
push
xor
add
clc
dec
sahf
mov
add
dec
xor
add
bound
add
and
rdpmc
add
pop
loop
mov
je
mov
out
xbegin
clc
push
add
outsl
push
adc
add
clc
and
add
clc
das
negb
lahf
ss
add
add
dec
push
add
testb
add
pusha
add
cwtl
stos
cmp
clc
bound
add
mov
mov
xor
data16
push
add
je
clc
dec
cmpsl
clc
dec
or
clc
divb
clc
xor
add
pop
clc
lret
and
add
idivb
clc
lods
divb
add
cmp
add
add
adc
mov
add
add
xor
add
xor
add
add
cld
cld
enter
mov
bound
add
sar
scas
dec
push
sbb
cmp
add
add
mov
ficompl
add
ss
add
in
sub
add
jae
add
add
faddl
add
cwtl
lret
push
imul
int
mov
xlat
mov
jno
add
clc
ss
in
mov
ret
clc
repnz
ss
sbb
add
add
cmp
and
inc
clc
scas
sar
add
add
cmp
addr16
imul
clc
stos
add
add
iret
mov
sahf
pop
popf
pop
negl
popf
loop
push
and
add
cmp
sub
clc
xor
add
in
cli
xchg
outsl
jmp
bound
add
ljmp
xor
add
add
sub
cmp
clc
pop
mov
add
in
jns
jl
clc
ss
mov
out
xor
add
xchg
jno
add
clc
jp
pop
jmp
sbb
clc
cmpsb
clc
dec
mov
clc
inc
add
sub
clc
sub
ss
pop
and
jae
add
ret
clc
cmp
test
clc
out
imul
cli
adc
add
pop
add
mov
adc
add
push
mov
clc
cli
push
add
iret
aaa
or
jg
nop
sbb
adc
add
clc
movsb
clc
pop
loope
pop
mov
clc
fstps
ljmp
pushf
pop
repz
clc
icebp
bound
add
aad
cmp
mov
iret
inc
add
sar
cmp
sbb
cmp
outsl
adc
mov
cltd
mov
pop
adc
add
add
mov
xlat
dec
sub
pusha
add
sbb
dec
dec
dec
jo
add
ret
sub
add
rorb
clc
jno
add
xor
add
add
lods
cmc
jle
aas
in
es
jge
add
ss
clc
addr16
int3
cmpsl
clc
adc
clc
or
test
xchg
xchg
test
push
lods
and
scas
inc
add
cmpsb
clc
pop
lock
cmp
adc
add
bound
add
fstpt
mov
in
fwait
push
mov
cmp
ret
clc
lods
addr16
mov
jo
add
gs
ret
mov
or
cmp
dec
fldcw
inc
clc
xchg
cmc
jecxz
ret
sub
cmp
lods
xor
add
clc
sti
ret
clc
es
jo
add
ret
add
add
or
add
inc
clc
roll
clc
sbb
clc
sub
aad
add
sub
dec
lock
and
add
xor
add
jbe
popf
sbb
add
aad
add
std
mov
adc
add
dec
pop
stos
mov
add
xchg
and
add
pop
clc
adc
in
dec
jle
clc
stos
cmc
fists
fs
adc
add
clc
cltd
out
mov
adc
add
push
jg
xchg
icebp
repnz
xor
add
dec
lock
clc
lea
clc
sti
pop
add
add
addr16
in
pop
jg
rcr
incb
add
sub
add
add
xchg
pop
cld
inc
clc
inc
clc
mov
pop
push
clc
mov
add
add
inc
clc
dec
jecxz
mov
add
repnz
add
push
add
clc
mov
add
cld
xor
add
mov
sar
add
pop
and
add
add
repnz
clc
jge,pt
jb
add
add
sar
mov
out
pop
and
add
je,pn
jno
add
push
add
jp
jle
mov
insl
jge
add
and
add
cmc
mov
add
aaa
fmull
xor
lea
clc
jmp
sub
push
mov
add
mov
add
and
add
clc
sub
clc
ficomps
or
clc
push
add
xlat
add
out
je
push
cltd
or
inc
clc
enter
xchg
inc
add
js
pop
inc
clc
jl
add
shr
clc
call
mov
dec
push
xlat
push
icebp
mov
jge
clc
and
add
clc
imul
clc
pusha
add
mov
out
test
scas
mov
add
mov
adc
dec
cmp
imul
dec
and
add
loope
sti
vminps
clc
insb
out
jns
pop
mov
add
inc
clc
outsb
pop
and
add
add
pop
add
leave
fdivrl
push
sub
clc
aaa
scas
adc
add
adc
add
jne
inc
clc
jle
add
push
data16
ja
add
add
sub
clc
pop
in
pop
push
add
add
dec
xchg
in
inc
clc
cltd
je
add
add
pop
loope
loop
int
add
add
sbb
add
mov
incb
clc
mov
out
in
fnstcw
inc
clc
pop
xor
add
lods
in
imul
add
xchg
imul
clc
pop
ret
clc
cmpsb
clc
popf
lret
mov
add
add
inc
add
cli
sbb
add
lods
xor
clc
push
add
lahf
inc
add
xchg
cmp
icebp
push
jmp
sub
add
ljmp
xor
loope
cmp
in
sti
mov
fadd
clc
adc
add
ret
clc
mov
xchg
mov
xabort
push
add
cs
daa
clc
fnstcw
mov
xchg
mov
clc
sbb
add
clc
inc
add
add
je
call
clc
mov
fidivs
add
sar
int3
jg
xbegin
xchg
aas
or
sub
insl
push
int3
pop
outsb
inc
clc
jp
adc
clc
clc
aaa
repnz
adc
add
pop
push
add
adc
ljmp
or
pop
fidivrl
cmc
push
add
fldcw
ja
xor
mov
push
cs
test
out
popf
int
pusha
add
push
or
clc
and
add
call
add
clc
insl
out
push
ss
loope
mov
loop
push
clc
xchg
aad
popf
add
push
add
add
stos
mov
xchg
or
clc
aad
inc
clc
ficomps
pusha
add
pop
roll
add
mov
or
fisttpll
aas
fcomps
fisttpll
aaa
pop
fdivs
mov
clc
sub
clc
lods
clc
lahf
inc
add
addr16
lret
cmc
and
add
ljmp
clc
or
sar
sbb
and
stc
mov
fdivs
fwait
negl
push
push
clc
addr16
fdivrs
clc
push
xor
clc
jae
add
clc
daa
clc
inc
add
or
add
fisttpll
mov
popa
add
mov
xbegin
add
pusha
add
cmp
clc
inc
clc
mov
or
jbe
clc
adc
xor
add
dec
sar
adc
rcr
or
clc
mov
add
push
ja
clc
xchg
jge
and
clc
mov
popa
add
fistpll
clc
xchg
cmpsb
clc
push
xchg
mov
pop
mov
cli
loopne
jl
mov
shlb
clc
jecxz
arpl
add
xor
clc
jo
add
mov
xor
xchg
mov
repnz
add
dec
clc
into
lret
mov
xor
add
push
leave
addr16
mov
jne
push
xabort
sar
icebp
jg
jl
pop
shlb
clc
jno
add
jge
jge
clc
mul
clc
adc
add
clc
adc
add
out
rcr
cmp
add
xor
fadd
clc
jmp
push
add
or
bound
add
ret
clc
sbb
and
add
mov
clc
add
add
and
xor
add
clc
sub
pop
out
repnz
clc
mov
pop
clc
jb
add
sub
add
xchg
shlb
jbe
mov
inc
clc
outsl
add
add
cmp
cmp
mov
and
add
aam
clc
out
cmp
adc
clc
sub
dec
xchg
adc
add
add
inc
clc
movsb
clc
cs
add
fistl
add
sub
cmp
fidivl
add
add
xchg
jge
add
int
add
insb
xor
add
sub
xchg
push
mov
cmp
sbb
lea
jmp
popf
dec
cmp
add
lods
sbb
outsb
fwait
inc
add
iret
popa
add
cwtl
mov
ss
outsl
cli
aaa
mov
sahf
adc
add
sahf
add
pop
pop
scas
jnp
add
repz
pop
decl
arpl
add
into
stos
dec
leave
mov
clc
and
add
mov
mov
outsl
sbb
add
add
clc
out
push
ss
add
out
ljmp
lods
dec
add
pusha
add
sbb
iret
das
and
aas
jmp
clc
xchg
push
add
adc
add
push
icebp
jae
add
add
nop
test
clc
cmp
jle
xlat
mov
clc
pop
sub
inc
clc
inc
add
xchg
jb
add
clc
xor
add
add
adc
add
clc
xbegin
pop
sar
add
cmp
test
or
mov
jns
xchg
push
push
insb
cmc
pop
lcall
add
mov
add
cmp
popf
jne
add
sbb
dec
push
add
outsb
jns
cwtl
xchg
cmc
add
add
ret
jecxz
test
sub
add
inc
clc
xchg
add
add
xor
add
scas
jbe
clc
push
insb
clc
jbe
mov
mov
aas
add
add
clc
and
add
mov
jns
dec
inc
add
lret
stos
popf
xchg
adc
clc
aam
add
push
cwtl
xchg
jg
clc
outsb
outsb
cmp
lret
in
xchg
ljmp
test
gs
xor
add
add
clc
jle
jmp
fldenv
cmp
clc
xlat
addr16
sub
add
or
add
add
fsubl
dec
pop
hlt
mov
jb
add
add
pop
mov
add
cmp
add
clc
sbb
pop
jg
int
add
add
mov
clc
xchg
push
mov
dec
adc
arpl
add
pop
lock
clc
or
mov
cmpsl
clc
shl
nop
and
add
add
mov
test
clc
call
jbe
clc
cwtl
aaa
lods
sub
pop
repz
leave
mov
iret
insb
sbb
ret
clc
lret
pusha
add
mov
add
add
jo
add
clc
inc
clc
push
add
mov
clc
push
clc
inc
add
jl
fldt
adc
add
clc
adc
add
mov
jl
mov
insb
or
sub
mov
call
xor
scas
or
inc
add
push
pop
fildl
mov
mov
mov
nop
test
push
mov
push
enter
add
sbb
clc
lcall
clc
inc
add
inc
add
push
dec
lods
sti
fiaddl
add
add
ljmp
test
inc
add
repz
stos
std
test
pusha
add
insl
mov
or
sbb
sbb
mov
add
add
add
mov
popf
push
fsubl
clc
inc
add
sbb
clc
addr16
mov
iret
or
clc
xchg
push
add
push
clc
lahf
int
add
lods
cmp
add
jle
js
clc
jmp
clc
xchg
pusha
add
mov
mov
roll
clc
dec
jle
clc
jl
sti
das
mov
fiaddl
add
shr
lods
and
popa
add
pop
cld
inc
add
inc
clc
aad
clc
xchg
icebp
out
xchg
iret
movsb
clc
pop
lea
clc
jecxz
out
mov
xor
jo
add
clc
sar
mov
clc
lahf
xor
add
inc
clc
mov
sar
jmp
repnz
push
loope
jno
add
sbb
clc
loop
sbb
clc
jle
mov
mov
into
lea
and
add
in
xchg
fucomp
sub
movsl
clc
in
jno
add
jnp
stc
mov
rcr
jb
add
clc
sub
or
and
or
add
stc
or
clc
lahf
xchg
mov
sti
ja
clc
sub
sti
xor
add
gs
shlb
cmp
mov
clc
jo
add
out
call
pop
pop
clc
data16
cld
dec
pop
imul
add
lods
add
dec
pop
arpl
add
fildll
test
jae
add
xchg
fs
es
pop
ss
sar
pop
loop
jmp
jecxz
repz
sbb
loop
add
add
popa
add
ss
int
clc
and
add
mov
mov
clc
clc
dec
jbe
mov
stc
xchg
pushf
jl
clc
push
add
shlb
in
enter
sar
sbb
dec
add
test
xchg
loop
add
jg
add
mov
clc
sbb
clc
fistl
add
add
add
dec
shrl
test
dec
popa
add
test
in
mov
ss
jns
xbegin
clc
pop
stos
mov
scas
call
sbb
push
stos
mov
add
imul
stos
pop
clc
into
push
mov
inc
clc
mov
mov
clc
pop
lock
add
mov
and
pop
and
add
add
add
cs
aaa
lea
push
add
and
xor
add
mov
add
fwait
pop
xbegin
hlt
enter
daa
clc
cmp
cmp
enter
add
outsb
add
add
je
cmp
clc
popf
adc
add
lahf
in
push
add
jns
clc
movsb
clc
cmp
clc
iret
fmull
add
sar
pop
sbb
inc
add
cs
xor
add
clc
xchg
stos
cmp
xchg
rorb
push
fildll
clc
dec
jno
add
add
out
pop
clc
stc
clc
fldcw
and
and
lret
add
clc
push
add
push
cli
sahf
lahf
or
or
mov
clc
and
add
add
dec
mov
popa
add
xchg
es
stos
mov
add
addr16
lods
mov
dec
and
add
mov
pop
mov
clc
inc
add
pusha
add
xbegin
clc
scas
aam
test
pop
js
lock
divb
add
mov
push
add
mov
add
mov
pop
pop
out
idiv
movsb
clc
bound
add
cmp
add
adc
add
xor
add
inc
add
mov
push
ret
add
inc
add
shll
loopne
rcll
add
mov
arpl
add
clc
lods
mov
insl
loopne
sar
mov
add
inc
clc
scas
dec
stc
xbegin
clc
imul
out
std
inc
clc
out
leave
sbb
add
aaa
mov
add
add
push
mov
add
sbb
add
mov
clc
mov
clc
adc
add
clc
inc
add
adc
add
add
push
repz
jb
add
add
insb
cmpsb
clc
ja
add
hlt
insl
ret
adc
adc
add
add
or
clc
hlt
cmp
add
add
xchg
dec
mov
mov
add
mov
jo
add
clc
insl
adc
add
xchg
add
or
adc
add
xchg
into
sub
sub
pop
in
cmp
clc
loope
scas
js
add
clc
in
adc
mov
or
sub
add
call
add
add
add
leave
cmp
add
sbb
dec
ret
clc
and
add
leave
cmp
add
clc
xchg
fisubl
add
jno
add
adc
add
ss
fnstsw
fwait
push
push
jnp
xchg
in
dec
add
add
add
stc
cmpsb
clc
int3
cs
xchg
sbb
leave
jne
clc
scas
dec
cmp
jmp
test
clc
jp
add
add
clc
xbegin
add
jmp
cli
sar
xchg
lcall
adc
add
mov
sbb
add
sahf
gs
add
add
push
cmpsb
clc
ljmp
iret
std
filds
clc
sar
clc
dec
test
nop
clc
lock
add
fmull
mov
je
or
adc
add
xchg
cltd
pusha
add
push
imul
and
add
clc
or
add
clc
dec
dec
mov
clc
adc
add
insl
popf
gs
pushf
cli
pusha
add
clc
dec
dec
aas
bnd
add
and
xbegin
arpl
add
jecxz
push
in
sbb
clc
xchg
push
imul
add
ret
clc
cmp
or
add
pusha
add
repz
pop
jg
or
cmp
pop
xchg
xor
add
clc
pusha
add
adc
add
add
and
add
repnz
sub
arpl
add
add
sbb
mov
cmp
out
adc
add
lods
pop
cmp
rcr
cmpsl
clc
mov
clc
aas
lcall
add
fnstenv
add
aad
dec
in
inc
add
inc
add
sbb
imulb
test
dec
inc
add
fs
jp
add
xchg
jg
sar
add
cmp
mov
fdivs
add
add
std
push
add
add
and
add
clc
push
fiaddl
xchg
dec
sti
jg
or
cmp
lret
pop
push
push
std
xchg
cmp
clc
dec
in
sarb
hlt
xchg
mov
jg
clc
movsl
clc
add
add
scas
xchg
scas
push
add
add
add
cs
clc
add
clc
loopne
adc
add
push
add
pusha
add
out
insl
inc
add
jo
add
lods
mov
push
xchg
add
add
clc
push
mov
test
add
inc
add
push
ja
push
add
sub
add
dec
jns
clc
push
cmp
mov
xchg
push
mov
cmp
mov
jle
push
pop
mov
push
xor
clc
stos
pop
dec
cmp
stos
jae
add
imul
cmp
clc
dec
fstps
sbb
jb
add
loop
jl
addr16
data16
xor
xchg
lods
ret
sarl
add
mov
clc
enter
xor
add
add
insb
cmp
push
add
ja
fcoms
jne
add
sub
add
lock
add
push
fwait
sub
sub
bound
add
add
dec
pop
inc
clc
bound
add
clc
jae
add
popa
add
jnp
sar
pushf
or
pop
push
cmp
sub
clc
cmovno
add
clc
in
dec
ljmp
add
push
clc
mov
pop
std
inc
add
mov
sub
clc
aas
test
test
clc
loope
add
add
adc
add
clc
pop
mov
push
cmp
add
repz
add
fstpt
xchg
jge
add
add
cmp
add
ret
clc
or
arpl
add
clc
jecxz
inc
clc
inc
add
pop
cwtl
sbb
add
push
imul
sbb
mov
fmull
xchg
ficompl
clc
repz
arpl
add
xchg
or
clc
clc
lea
add
mov
fnstenv
add
clc
xbegin
mulb
clc
sub
lret
out
mov
ret
jno
add
add
add
jne
jg
add
frstor
clc
jecxz
in
repz
mov
arpl
add
clc
mov
jo
add
ret
clc
cld
mov
clc
xchg
lea
mov
jge
fimull
pop
pop
mov
cmp
clc
add
add
add
push
add
imul
add
popa
add
dec
xchg
out
cmp
clc
rorb
pushf
lods
mov
clc
pop
clc
pushf
aam
clc
pop
jge
aas
lea
and
add
cld
sti
dec
lahf
shrb
clc
lods
sar
out
or
cmp
add
pop
icebp
pop
clc
pop
jle
ret
clc
ret
clc
cld
nop
sub
xabort
cmp
test
add
add
insb
mov
js
adc
add
pop
jne
in
loopne
xchg
es
pop
push
sbb
in
gs
call
imul
add
sar
inc
clc
jp
inc
add
pop
dec
sti
test
add
dec
pushf
dec
inc
add
aas
sbb
push
and
add
dec
out
inc
clc
cs
mov
mull
int3
jmp
clc
sar
clc
mov
inc
add
mov
jl
movsb
clc
je
cmp
add
add
clc
push
add
add
add
imul
test
add
lcall
outsb
and
add
add
sbb
push
clc
dec
mov
xabort
sub
clc
rcrl
std
add
sub
xchg
mov
clc
pop
cli
push
sar
xor
fcoml
into
sar
fdivr
jmp
clc
add
add
mov
fdivl
add
repz
add
push
inc
clc
shrb
jns
sbb
add
clc
stos
mov
xor
xchg
xchg
fimull
clc
popa
add
arpl
add
adc
ficoms
pop
mov
add
wbinvd
push
leave
cwtl
imul
add
inc
clc
dec
mov
add
cltd
jo
add
xchg
xor
add
sub
cli
enter
lods
xor
add
lret
push
add
sbb
sbb
arpl
add
cld
jae
add
add
mov
cmp
scas
je
loopne
fisubrl
clc
push
lahf
lret
lods
inc
clc
pop
lahf
ret
mov
mov
cmp
gs
sbb
pop
jno
add
add
add
sar
jge
mov
lock
test
outsb
jno
add
rcrl
add
hlt
cmp
add
divb
cmc
jge
daa
clc
or
int
clc
lret
push
clc
jne,pt
ret
clc
mov
add
add
add
adc
add
xchg
stc
or
add
jnp
clc
xchg
insl
mov
inc
clc
pop
clc
xor
and
add
in
jo
add
scas
leave
push
jle
xchg
cmpsb
clc
or
clc
cmp
adc
add
add
add
cmpsl
clc
sbb
or
clc
dec
outsl
push
dec
jge
jbe
add
cld
insb
repz
lock
clc
mov
add
dec
cmpsb
clc
sub
cmc
pop
jg
jb
add
add
push
xlat
fsubrs
add
cmp
clc
add
add
xor
add
add
xchg
bound
add
xor
add
add
in
imul
mov
pop
cli
mov
xor
add
add
clc
adc
lcall
call
clc
fstps
popf
fstpt
je
cmp
add
jl
add
cmp
cltd
out
scas
lods
ljmp
add
pop
and
ja
stos
fists
xabort
xchg
lcall
or
xbegin
sub
cmp
mov
pop
clc
xlat
aad
sub
clc
pop
clc
dec
xchg
cmc
scas
xabort
add
jge
xchg
dec
bound
add
jbe
lock
ret
clc
sub
dec
jbe
and
add
test
dec
fwait
xbegin
pop
pushf
add
add
add
push
clc
outsb
adc
add
or
add
and
add
in
ja
clc
push
inc
add
xchg
mov
xabort
inc
add
cmp
clc
sub
mov
sub
and
add
lret
ss
sbb
pop
mov
pop
clc
inc
clc
rclb
mov
add
sbb
jecxz
xor
add
or
add
clc
mov
sbb
movsl
clc
ss
clc
cmpsl
clc
dec
mov
adc
add
add
push
daa
clc
aam
popf
xchg
lods
out
addr16
jl
cmpsb
clc
xor
add
inc
clc
pop
push
mov
clc
cltd
in
das
or
inc
clc
add
add
xchg
and
add
movsl
clc
call
cmp
add
add
aas
lea
mulb
add
add
cmp
sbb
sbb
inc
clc
es
scas
xchg
or
into
outsb
xbegin
cli
mov
add
sub
xchg
sub
aas
or
clc
jo
add
scas
add
out
jmp
jae
add
add
mov
sub
add
add
mov
dec
xor
add
clc
ret
clc
daa
clc
fs
fadds
add
fdivs
xchg
outsb
push
std
cmp
add
push
pop
cmc
popf
mov
jmp
nop
aas
add
add
pushf
in
mov
add
out
jnp
rcll
mov
add
es
lea
movsl
clc
pop
pop
dec
in
jb
add
pop
jnp
clc
clc
outsb
leave
hlt
out
inc
add
scas
lcall
clc
pop
popa
add
call
add
mov
add
out
add
add
add
clc
or
push
inc
clc
clc
dec
push
or
dec
and
add
add
clc
xchg
add
add
clc
mov
add
jbe
imul
add
jne
sub
xchg
popa
add
outsl
sar
pop
ss
clc
out
pushl
es
cmp
inc
add
xchg
stc
cmp
sub
pop
cmp
adc
add
ficompl
clc
and
add
inc
clc
fiaddl
add
cmp
popa
add
fsubs
add
clc
jae
add
cld
ret
lcall
jnp
jl
clc
fcoms
add
jbe
clc
jg
mov
in
jne
clc
jl
clc
cmpsb
clc
add
add
add
ret
clc
sub
add
pop
sbb
xlat
out
stos
and
aad
mov
dec
sub
fsubrs
out
add
xchg
pop
push
loop
fisttpl
clc
sti
and
add
add
mov
inc
add
adc
add
add
adc
add
add
mov
lahf
push
clc
jg
xchg
inc
clc
xchg
rorl
clc
add
add
clc
repnz
add
add
clc
mov
cmp
addr16
xchg
repz
clc
std
mov
add
std
mov
xor
add
pusha
add
mov
add
in
pop
addr16
mov
clc
lods
aas
jno
add
add
dec
das
daa
clc
mov
add
jmp
clc
jge
add
mov
add
xor
add
mov
add
mov
push
add
mov
add
add
add
dec
mov
pop
sub
and
add
add
mov
out
in
ljmp
clc
lcall
cmp
or
jl
movsb
clc
test
dec
cmp
fnsave
adc
mov
add
es
mov
shl
hlt
cmpsb
clc
cld
out
pushf
aad
jnp
clc
mov
out
enter
sbb
jp
clc
jge
mov
xor
add
add
sbb
data16
push
pop
cld
inc
clc
loop
add
add
test
pop
sub
add
or
jno
add
mov
cmp
add
mov
test
pop
scas
adc
add
call
clc
mov
add
clc
or
clc
inc
clc
outsl
test
lods
addr16
bound
add
and
add
js
bound
add
add
cmp
clc
xchg
leave
cmpsb
clc
sbb
add
add
add
and
add
inc
add
jns
clc
and
add
xor
add
ja
add
pop
pusha
add
test
or
mov
dec
sbb
sub
scas
mov
fdivs
add
outsb
rorb
xchg
int
lret
clc
ljmp
add
inc
add
adc
mov
outsb
scas
push
sahf
cltd
ljmp
cld
test
mov
clc
jmp
push
or
sbb
pop
clc
testb
enter
jg
clc
mov
data16
clc
xchg
and
add
clc
push
mov
jp
jmp
and
add
clc
mov
inc
add
push
add
test
sbb
clc
lods
call
aam
mov
add
add
std
mov
mov
and
add
add
add
mov
sub
clc
adc
add
icebp
enter
jns
xchg
adc
add
or
add
cmp
ficompl
cmp
add
test
stc
add
add
add
adc
clc
pop
cwtl
cli
mov
cmp
clc
in
mov
das
sahf
out
cmp
clc
fucomip
inc
clc
mov
jbe
xor
add
ds
dec
mov
std
stos
sbb
add
adc
add
negl
sti
lods
lock
repz
xchg
or
lods
sub
sbb
jp
add
add
add
call
xbegin
mov
add
pushf
jge
mov
dec
push
add
inc
add
mov
sbb
push
inc
clc
sub
sub
clc
outsl
ds
int3
testb
add
imul
add
sbb
je
cmp
sub
add
clc
jge
add
scas
sub
mov
es
fstp
sbb
loope
jne
sti
push
add
mov
enter
clc
inc
clc
pop
jne
dec
fs
cltd
sub
push
add
mov
or
imul
clc
sub
outsl
and
mov
dec
jge
pop
dec
lcall
aaa
add
add
push
scas
mov
push
clc
ss
das
mov
add
add
rclb
add
sub
dec
jmp
js
addr16
jne
add
sbb
jae
add
jl
add
jno
add
lcall
pop
out
xor
fiaddl
clc
dec
push
or
fisubrs
aad
call
sbb
pop
clc
add
add
stc
mov
insl
aas
test
fstpl
add
xchg
jo
add
aam
insb
inc
clc
imul
stc
es
mov
lcall
lock
pmuludq
and
add
and
add
clc
mov
xor
add
movsb
clc
dec
lea
clc
jo
add
xchg
cwtl
nop
into
mov
pop
mov
xchg
dec
aaa
ja
clc
xor
add
adc
das
lret
clc
out
std
aad
add
movsl
clc
adc
add
add
xchg
and
add
mov
inc
add
jg
sti
adc
add
out
hlt
fsubl
add
add
add
add
mov
cmp
cld
aam
add
jmp
push
pop
adc
add
lcall
or
mov
add
clc
mov
dec
xor
pushf
out
gs
push
add
fsubrs
shll
clc
in
and
add
hlt
mov
scas
or
clc
or
scas
or
pushf
sahf
dec
lret
pusha
add
mov
sar
add
and
add
clc
ljmp
rcll
jmp
sub
clc
sub
jbe
jecxz
rclb
inc
clc
pop
mov
add
add
sub
xchg
push
cmp
sbb
add
push
ja
push
sar
clc
icebp
push
jmp
clc
rclb
add
add
add
add
or
xor
add
test
in
cltd
pop
inc
clc
das
nop
outsl
mov
pop
adc
add
insb
xbegin
es
lock
add
clc
adc
add
adc
add
cmpsl
clc
mov
mov
pop
fcompl
clc
jbe
dec
scas
cli
jge
or
push
lret
std
or
jne
loopne
in
in
jb
add
xchg
inc
clc
and
add
idivb
sbb
adc
outsl
lock
add
lret
out
mov
clc
mov
xchg
inc
clc
mov
add
sub
add
hlt
arpl
add
in
add
clc
xor
add
inc
add
shrb
jbe
add
add
ret
in
nop
pop
pop
pop
clc
xlat
xchg
sbb
add
or
jmp
add
jecxz
mov
cmp
clc
jns
add
data16
je
clc
pop
jmp
mov
loope
rorb
clc
mov
cltd
fisubs
add
add
cmp
decl
imul
xchg
leave
mov
shrb
add
inc
clc
xor
add
inc
clc
inc
clc
sbb
fxch
fsubs
adc
add
clc
int3
jge
into
ror
mov
stos
xor
add
mov
add
pop
mov
add
sub
stos
popf
push
jns
lret
pushf
inc
clc
adc
add
negb
into
out
je
add
sub
push
addr16
push
add
jp
jge
mov
imul
mov
jg
xchg
or
add
push
add
xor
add
mov
add
add
clc
das
pop
sbb
add
clc
mov
stc
inc
add
jnp
bound
add
sbb
lods
leave
out
out
inc
clc
out
jg
hlt
pop
loop
jne
rep
sbb
clc
dec
cmp
sar
clc
adc
add
clc
fwait
leave
out
jp
add
add
push
add
loop
sub
es
mov
xor
add
sbb
fwait
pop
in
pop
fdiv
arpl
add
fstpl
cmp
xchg
mov
movsb
clc
call
lcall
insl
xchg
or
add
ss
xor
add
add
inc
add
push
jmp
clc
loopne
jmp
popa
add
adc
xchg
daa
clc
xor
add
icebp
pop
ja
clc
jl
add
out
push
cmc
jmp
vmovaps
lahf
sti
ret
cmp
add
fcomps
clc
cmp
add
cs
adc
jg
scas
int
xchg
push
jns
push
add
insl
stc
and
add
cmp
xchg
scas
mov
aad
dec
cmc
push
xchg
enter
add
add
aas
lahf
idivb
jl
xor
add
js
into
adc
add
inc
clc
push
aam
push
add
push
add
jmp
mov
clc
mov
sbb
sub
clc
or
clc
data16
ret
clc
outsb
popf
dec
mov
sub
xor
add
add
jg
mov
sbb
repnz
cmpsb
clc
xor
add
sbb
add
add
xbegin
clc
adc
add
stos
inc
add
rolb
add
fsubr
cmp
push
cmp
clc
pop
clc
push
clc
dec
and
add
add
xor
add
sbb
pop
or
add
pop
clc
pusha
add
xor
add
inc
clc
mov
add
scas
mov
inc
add
jmp
aam
clc
add
mov
add
pop
in
mov
add
pop
jle
sub
sbb
aaa
repz
add
fldl
add
add
and
adc
add
pushf
loop
das
fs
adc
cmp
lock
xor
add
clc
pop
nop
jae
add
stos
icebp
loope
xlat
shrl
mov
pop
scas
aad
cmp
add
clc
and
sub
cmp
jns
sbb
clc
ss
jp
gs
popf
hlt
or
jg
sub
lret
lods
scas
test
addr16
ljmp
pop
xchg
enter
sub
clc
testb
dec
sti
dec
mov
scas
jl
lahf
mov
sbb
out
fcompl
stc
pop
movsb
clc
push
add
xor
add
add
add
add
push
add
dec
xor
add
xchg
loopne
test
xor
add
add
add
add
xchg
sahf
ss
clc
and
add
xor
add
xor
add
add
sarb
mov
test
add
mov
clc
mov
movsl
clc
mov
jmp
mov
pop
jmp
clc
enter
add
jp
add
dec
mov
clc
push
ret
clc
fistpl
lock
mov
add
cld
or
cwtl
pop
scas
fimull
cmc
rcll
add
nop
iret
addr16
and
xor
add
xor
add
clc
stos
xchg
inc
add
xchg
loop
inc
add
and
cmp
clc
cmc
adc
add
cmp
add
cmp
rcrl
add
or
add
add
aaa
cmp
loopne
call
push
add
xor
add
cmp
and
call
add
sti
ret
imul
js
and
add
or
inc
add
data16
mov
clc
scas
pop
push
clc
arpl
add
add
out
mov
clc
int
clc
mov
clc
test
jl
aam
in
mov
cmp
add
clc
rcll
add
add
pop
dec
adc
add
aaa
jne
test
xchg
mov
rorl
daa
clc
push
add
jmp
lret
xlat
push
add
mov
add
add
ljmp
arpl
add
mov
adc
cmp
clc
dec
pop
jp
clc
xchg
addr16
rclb
sar
push
mov
add
insb
js
in
mov
test
into
test
mov
jne
loop
mulb
jmp
stc
lahf
fisttpll
bound
add
cmp
add
push
add
push
int3
out
es
pop
mov
fs
or
in
into
xchg
cmp
add
pop
popa
add
push
add
cmp
add
sub
sub
jb
add
iret
fisttpll
add
shll
lahf
push
aaa
or
clc
push
add
jo
add
push
xchg
imul
add
xor
add
add
pop
and
add
add
js
loop
pop
inc
clc
add
add
add
add
pop
repz
dec
inc
add
xor
add
clc
test
aas
data16
aas
xchg
xbegin
clc
aam
add
stc
lock
cmp
clc
mov
add
test
clc
test
clc
xchg
xchg
mov
lock
add
rcrl
and
sar
and
add
pop
clc
cmp
add
add
xchg
lea
aad
jmp
sub
clc
pusha
add
jbe
dec
lea
inc
clc
divb
nop
ret
dec
mov
js
incl
clc
sbb
push
add
insb
std
adc
add
clc
jb
add
add
rcrl
mov
clc
imul
jae
add
add
add
add
add
sbb
dec
leave
sar
clc
jae
add
scas
cmp
cmp
clc
cmp
addr16
jno
add
add
cmc
mov
test
cmp
clc
mov
jnp
mov
inc
clc
pop
clc
xchg
data16
mov
lock
xor
add
fdivrl
cmpsl
clc
jl
add
mov
clc
loopne
add
mov
clc
es
or
ret
clc
lock
out
decb
mov
mov
cmp
sub
or
add
mov
mov
inc
add
inc
add
fbld
add
sub
or
ja
popf
mov
mov
clc
or
clc
push
add
decb
adc
fmuls
sub
xchg
pop
lahf
cmp
jl
and
add
add
pop
xchg
sbb
push
clc
xlat
negb
add
movsb
clc
cmpsl
clc
adc
add
aas
xor
add
clc
jbe
clc
out
out
and
pop
push
add
cmp
lods
test
in
ds
clc
adc
add
outsb
and
add
add
mov
inc
clc
jno
add
xchg
vmwrite
add
and
add
push
add
jnp
fimull
mov
clc
adc
add
clc
not
sub
add
add
cmp
mov
stc
add
add
out
dec
jne
xor
add
add
push
arpl
add
repnz
add
push
push
add
ja
cmp
add
or
add
and
stos
pop
aas
mov
mov
ljmp
out
clc
mov
aas
cmp
clc
push
add
in
add
add
sarb
ret
clc
sub
sbb
pop
jns,pt
pop
xchg
lock
add
adc
add
xlat
cmp
add
sub
clc
pop
movsl
clc
aad
pop
pop
iret
je
movsb
clc
xchg
in
adc
add
cmp
imul
add
xor
add
jle
push
xor
add
mov
out
lcall
clc
sub
jl
jp
loope
push
clc
jnp
int
add
lock
test
je
push
add
fldenv
inc
clc
jle
add
xchg
loopne
pushf
mov
clc
lret
push
add
pushf
mov
cmp
clc
mov
fadd
clc
movsb
clc
dec
es
js
clc
push
inc
clc
gs
push
setle
clc
and
add
clc
ljmp
cmp
clc
mov
xchg
push
add
gs
out
test
mov
clc
cmp
xchg
jp
popa
add
sar
clc
jbe
test
lahf
inc
clc
test
ljmp
or
cmpsb
clc
enter
jle
add
jp
add
lea
sub
clc
push
dec
icebp
test
cmpsl
clc
imul
push
pop
imul
cmp
imul
cmp
ss
add
pop
pop
pop
sbb
adc
jbe
add
sbb
add
sub
clc
and
add
cwtl
inc
add
adc
add
mov
repnz
clc
nop
insl
xor
mov
add
mov
jle
add
lcall
add
dec
mov
add
clc
sbb
fwait
sbb
pop
in
clc
std
inc
add
in
jne
clc
mov
gs
aad
gs
ret
add
and
add
cmpsb
clc
push
jae
add
clc
js
add
scas
clc
lret
hlt
outsl
mov
clc
hlt
mov
add
xchg
jmp
add
repz
rorl
es
mov
in
mov
sub
add
dec
mov
pop
mov
add
int
jg
into
cld
lret
test
gs
cmpsb
clc
jb
add
push
and
clc
mov
clc
mov
pop
cld
cmc
negl
mov
add
clc
mov
pop
daa
clc
mov
jecxz
jl
add
lret
and
repnz
mov
jae
add
push
add
mov
mov
clc
adc
add
add
adc
add
add
add
lret
movsb
clc
pop
es
es
add
add
clc
rcrl
repz
dec
scas
mov
clc
push
repnz
lret
clc
mov
add
add
add
add
jp
xchg
push
add
scas
jbe
push
add
dec
fsubl
testl
clc
cwtl
pushf
fadd
clc
clc
mov
jnp
adc
xor
leave
jp
mov
lea
push
add
push
add
mov
or
inc
add
fisttpll
nop
aad
clc
mov
or
push
mov
jecxz
ljmp
clc
lea
leave
aam
adc
add
cmpsb
clc
clc
sbb
clc
adc
fadd
clc
sbb
mov
sub
int3
xor
add
adc
add
sti
cmp
add
add
add
sbb
mov
clc
test
clc
fistpl
stos
aaa
sets
insl
dec
lret
jno
add
add
cli
add
sbb
rorl
push
addr16
sub
sbb
adc
add
mov
cmpsl
clc
inc
clc
pop
hlt
xchg
setp
sbb
push
clc
dec
stc
mov
mov
push
sub
add
rcll
in
sbb
roll
add
aam
add
pop
adc
loopne
sar
push
add
or
add
push
add
clc
jmp
add
fwait
sar
jle
sbb
sbb
fmul
lods
and
jmp
clc
and
and
add
aad
sar
cmp
clc
sub
test
add
repnz
add
or
clc
mov
notb
scas
mov
cmc
and
add
add
push
bound
add
jbe
inc
add
movsb
clc
fsubr
aaa
push
cld
hlt
or
push
clc
mov
clc
cmpsl
clc
loopne
out
stos
pop
cmp
clc
ss
mov
sub
ja
sub
and
add
cmpsl
clc
add
add
mov
lret
and
add
dec
jb
add
repz
fistpll
lods
pop
clc
lret
xchg
and
add
aaa
repz
sar
cli
xor
add
add
out
sub
mov
clc
addr16
inc
add
mov
clc
cmp
cwtl
daa
clc
fstps
add
loopne
out
sti
js
mov
clc
lret
dec
inc
clc
lcall
mov
clc
rclb
add
add
clc
aad
sub
movsl
clc
jae
add
pusha
add
cltd
movsb
clc
stos
dec
aad
mov
mov
clc
push
aam
xchg
and
inc
add
lret
inc
add
ja
fld
clc
test
or
sub
add
fwait
add
add
push
cmc
xor
add
add
add
push
cmovnp
mov
clc
cmpsl
clc
adc
add
adc
add
clc
jo
add
bound
add
lock
test
inc
add
cwtl
cmp
inc
clc
cltd
xchg
nop
pop
mov
add
add
sub
push
sahf
out
add
add
mov
xor
add
add
xchg
push
add
inc
add
imul
mov
add
xor
add
push
add
xor
add
add
xor
add
xbegin
add
fwait
push
stos
outsb
jne
add
int
popf
mov
or
add
xchg
leave
divb
add
mov
dec
dec
hlt
push
add
out
repz
cmp
jmp
cmp
clc
sbb
clc
lea
add
xchg
mov
or
sub
test
jns
sub
imul
add
add
sbb
add
cmc
sar
add
pop
jne
cmp
movsb
clc
adc
clc
push
jns
add
movsb
clc
and
pop
sub
jecxz
lods
dec
add
add
rcrb
add
gs
xchg
int3
inc
clc
push
pop
clc
sbb
fsubr
sub
xchg
mov
mov
add
flds
enter
add
scas
push
clc
aam
xor
add
sar
test
add
clc
pop
clc
xor
add
push
stc
pop
push
add
dec
ret
clc
movsb
clc
xchg
adc
add
sar
clc
idivb
sbb
add
xchg
mov
clc
mov
clc
leave
cmp
shl
clc
stc
sbb
int3
inc
add
inc
clc
int3
push
out
sbb
clc
or
push
mov
pop
aam
add
xor
mov
add
push
push
fstpl
add
mov
mul
clc
aaa
ss
aas
pop
mul
clc
roll
lods
movsb
clc
inc
clc
aad
xor
add
mov
add
clc
cmp
notl
and
add
loop
sbb
add
and
add
clc
and
add
add
pushf
xchg
jb
add
add
cmp
add
insl
sar
bound
add
sar
ljmp
clc
popf
test
loop
sub
pop
cmp
ret
scas
mov
clc
adc
add
fwait
fs
lahf
out
add
add
jne
mov
add
add
cmp
inc
clc
adc
jl
clc
repnz
add
or
xor
add
jb
add
clc
cmovg
add
mov
mov
add
pop
clc
xor
add
gs
popl
mov
shr
xchg
lret
mulb
add
xor
clc
data16
add
fwait
notl
add
add
call
std
pop
clc
jg
inc
add
gs
test
pop
push
add
mov
lock
add
clc
inc
clc
js
int
mov
sub
clc
mov
mov
add
es
or
push
es
add
add
clc
xor
add
rcr
inc
clc
xchg
and
add
add
add
clc
lea
call
adc
cmp
add
add
cmp
sbb
add
pop
push
pop
clc
jne
xbegin
clc
adc
add
inc
add
cmp
and
add
inc
add
aaa
mov
push
add
cmp
clc
xchg
xchg
mov
add
js
cmp
mov
pop
push
idivl
add
sahf
scas
addr16
xor
add
lcall
or
clc
test
imul
and
add
add
jge
pusha
add
test
pop
clc
mov
jbe
adc
add
inc
clc
jns
ljmp
xchg
xor
jl
clc
inc
clc
jae
add
jge
add
fsubs
add
nop
insl
pop
sub
stos
data16
repz
das
int
pop
ljmp
je
xlat
xchg
sbb
dec
push
add
mov
arpl
add
cmp
add
pop
cltd
adc
add
clc
icebp
scas
clc
ljmp
movsl
clc
shrl
clc
jle
clc
adc
add
xor
add
aas
and
add
clc
gs
popf
dec
outsb
pop
inc
add
mov
clc
cmp
clc
dec
pop
mov
add
movsl
clc
pop
clc
and
add
xchg
jge
sub
add
ljmp
dec
mov
sahf
push
inc
clc
aam
add
push
xlat
gs
pushl
mulb
jno
add
push
add
jne
sub
add
addr16
dec
xchg
out
mov
add
jmp
add
add
je
pop
mov
push
xabort
cmp
adc
add
pop
into
daa
clc
mov
dec
pop
popf
jle
mov
daa
clc
insb
popf
rsqrtps
add
cmp
mov
xchg
jns
clc
icebp
inc
add
lret
lock
aas
push
ret
out
iret
ror
and
adc
add
or
add
push
clc
arpl
add
inc
clc
lods
or
push
add
mov
call
add
add
sbb
insb
xchg
dec
int3
push
add
xchg
pushf
mov
and
add
es
ljmp
add
pop
clc
adc
add
cli
scas
aad
mov
inc
clc
cmp
add
pop
pop
xor
add
clc
mov
push
loopne
or
ffree
clc
mov
add
es
push
add
xchg
xor
cmpsb
clc
jae
add
lcall
inc
clc
cmc
mov
adc
add
adc
add
je
aaa
ret
add
mov
dec
jo
add
add
in
push
scas
sub
clc
test
sub
add
clc
jno
add
clc
push
xlat
popf
xor
add
and
add
xor
add
cmc
gs
inc
add
mull
add
sub
xlat
adc
add
clc
outsl
xchg
cmp
add
clc
push
jbe
sbb
add
or
mov
call
arpl
add
xabort
add
jle
clc
adc
add
add
jne
add
add
mov
clc
xabort
add
adc
add
add
mov
sub
add
sbb
add
add
add
dec
xchg
and
jb
add
ja
jle
jnp
clc
push
add
push
mov
clc
sbb
add
aaa
fdivl
loope
fisttps
sub
clc
movsl
clc
cmp
clc
push
jl
int3
or
add
jge
mov
push
or
cltd
jno
add
add
xchg
mov
icebp
cld
fsts
add
sub
pop
clc
shlb
fidivrs
inc
clc
pop
inc
clc
jp
movsb
clc
out
mov
mov
mov
add
jno
add
add
faddl
cmp
clc
mov
clc
cmpsb
clc
xchg
adc
add
mov
xchg
push
clc
pop
test
sub
add
add
data16
mov
lahf
jne
mov
add
mov
mov
push
add
arpl
add
ds
jbe
clc
add
add
cwtl
lods
in
js
add
int3
cmpsb
clc
mov
add
add
add
add
xchg
add
xor
sub
xor
jns
jg
repz
add
sar
dec
sar
leave
je
add
aaa
sbb
dec
call
mov
cmp
clc
out
xchg
jae
add
cld
push
clc
mov
push
fcmovne
in
aam
sub
add
mov
clc
ret
clc
sub
and
add
lea
sub
movsl
clc
xlat
pop
clc
mov
inc
add
dec
mov
push
stc
pop
clc
adc
jge
addr16
lret
cmp
ja
lret
pusha
add
lahf
call
add
mov
add
dec
cld
sahf
or
push
ret
clc
pop
pushl
push
pop
cmp
add
fidivl
jp,pt
adc
imul
bound
add
cwtl
das
jne
push
cli
cld
add
dec
test
sub
loope
imul
add
jne
pop
pushf
out
clc
stc
lahf
sbb
inc
add
cmp
push
cmp
adc
cmp
add
add
add
je
fwait
adc
pop
clc
xchg
lcall
clc
into
loopne
in
movsl
clc
shl
not
cld
dec
ficomps
adc
add
cld
mov
clc
mov
clc
stos
rorb
jo
add
pop
clc
push
in
xchg
repnz
add
fdivs
add
lock
movsb
clc
imul
add
add
jbe
fdivrl
pop
jae
cmp
clc
cmp
add
add
add
sbb
add
push
adc
pusha
add
xor
add
jecxz
sbb
xchg
mov
cli
mov
jge
inc
clc
push
loopne
sbb
clc
jmp
clc
fldenv
outsb
mov
xchg
popf
call
pop
mov
clc
cmp
stos
pop
into
daa
clc
ja
clc
cltd
cmp
mov
push
mov
in
sar
mov
data16
lret
cld
push
ljmp
add
aad
mulb
add
dec
popl
add
clc
cmp
loopne
cmp
lods
popf
ret
cmpsb
clc
lcall
repnz
and
add
clc
adc
add
add
add
aad
mov
add
dec
insb
jae
add
mov
clc
mov
pop
mov
dec
fisubl
mov
add
sub
add
jg
mov
movsb
clc
jl
add
xor
clc
and
add
add
push
add
cs
in
mov
arpl
add
scas
cwtl
and
add
clc
nop
mov
clc
xlat
xchg
idivb
jp
pop
or
sub
cli
out
ret
clc
scas
add
add
mov
insl
popf
cmp
clc
ss
xor
add
jns
mov
clc
push
dec
or
add
and
add
clc
inc
add
sub
and
pushf
push
xchg
dec
sub
aam
mov
nop
sti
jle
or
int
jmp
mov
add
clc
push
add
push
movsl
clc
inc
add
movsb
clc
mov
jp
clc
jno
add
add
stc
push
add
cmpsl
clc
test
fdivrs
pushf
icebp
lret
cmp
rcll
clc
add
mov
add
incb
add
cmpsb
clc
sub
xchg
or
push
jmp
inc
add
sar
mov
bound
add
popa
add
sar
into
fisubrs
or
out
fwait
movsb
clc
or
add
jg
add
dec
into
sbb
jmp
popf
push
mov
clc
and
add
clc
inc
clc
add
add
add
das
xor
add
iret
cmp
mov
into
aaa
outsb
sbb
pop
clc
cmpsl
clc
movsl
clc
loopne
movsl
clc
sbb
popa
add
addr16
push
and
add
mov
lcall
or
adc
xchg
insl
pop
rcl
pushf
dec
movsb
clc
xchg
jae
add
js
test
jne
add
push
add
sbb
movsb
clc
xchg
push
add
adc
clc
cmp
xor
add
add
idivb
clc
scas
lret
or
lea
mov
ljmp
call
frstor
mov
add
mov
or
sub
add
xlat
cmpsb
clc
incb
fsubl
add
inc
add
lea
lret
push
mov
add
sub
jge
clc
or
es
data16
mov
add
cmp
cmp
cltd
cli
arpl
add
mulb
add
sbb
je
ljmp
clc
mov
adc
add
add
arpl
add
clc
loope
and
add
clc
dec
pop
xchg
insl
pusha
add
in
pushf
fiaddl
add
cld
inc
clc
cmc
push
dec
push
add
mov
adc
add
clc
and
cld
mov
aaa
dec
mov
add
xor
add
add
add
out
inc
add
xchg
adc
ret
clc
inc
add
jnp
faddp
clc
sbb
xlat
cwtl
and
add
clc
fxch
lods
push
mov
add
inc
add
and
add
inc
clc
sub
inc
clc
cwtl
imul
sar
xchg
inc
clc
insl
fisubrs
sub
fwait
and
add
mov
add
clc
mov
add
mov
movsb
clc
jle
xor
jnp
outsl
pop
xchg
int3
cmp
mul
clc
test
bound
add
add
xor
mov
push
add
push
pop
xor
add
pop
clc
xchg
loope
in
mov
xabort
clc
lock
decl
sbb
xchg
push
lods
daa
clc
cmpsl
clc
mov
dec
mov
sar
mov
pop
push
out
mov
aad
mov
lock
sub
add
inc
add
cmc
jmp
push
add
xabort
loop
scas
dec
push
clc
fdivr
std
outsb
jae
add
add
jg
aam
add
fisttpl
push
add
jge
clc
fisubl
or
xor
add
sbb
movsb
clc
cmp
pop
adc
add
clc
cli
pusha
add
jge
and
add
push
jmp
inc
add
mov
jae
add
add
jnp
xabort
lods
lods
out
sbb
push
add
out
lcall
mov
mov
add
hlt
in
lret
dec
mov
fwait
lcall
dec
in
int
add
cmp
pop
adc
add
xchg
sbb
cmp
in
dec
dec
scas
lods
pop
xchg
pop
cmp
add
sub
add
add
scas
lods
pop
fldcw
dec
adc
pop
jl
clc
scas
dec
and
mov
outsb
sub
js
clc
mov
jp
push
add
mov
add
sbb
pushf
sbb
add
clc
cmpsl
clc
or
data16
fldcw
call
js
mov
push
add
mov
add
mov
add
jns
jp
add
arpl
add
clc
inc
add
push
add
pop
inc
add
sar
sbb
and
add
clc
jae
add
add
and
add
add
add
arpl
add
cmp
int3
push
clc
add
sar
or
repz
daa
clc
scas
mov
sbb
add
fs
gs
inc
add
daa
clc
cmp
jge
clc
sbb
popf
popa
add
mov
push
inc
clc
hlt
inc
add
or
add
or
add
or
add
fldcw
gs
pop
clc
lret
bound
add
add
das
pop
and
add
clc
in
cmp
clc
cmc
ss
clc
jl
jle
or
imul
xchg
mov
ljmp
sar
je
sar
clc
out
adc
add
dec
mov
add
fcompl
clc
loope
pop
sbb
clc
outsb
mov
jnp
xor
add
clc
pop
mov
adc
pop
add
add
aad
xchg
push
mull
clc
push
add
gs
cmp
loope
cmc
aam
dec
xchg
cmp
cmp
pop
cli
sub
add
dec
mov
lret
add
fs
outsb
mov
add
add
dec
xchg
loope
mov
je
clc
mov
and
stc
fmul
ss
rolb
clc
imul
clc
js
clc
jbe
movsb
clc
cmp
aaa
sub
sub
jecxz
clc
loop
pop
mov
add
cmp
add
movsl
clc
pop
push
mov
ret
dec
mov
loop
cmp
clc
insl
aad
insb
lods
hlt
hlt
aas
cmp
lock
add
pop
sti
std
mov
cwtl
push
mov
call
clc
lea
add
clc
xchg
inc
add
cli
add
add
clc
movsl
clc
jno
add
xor
inc
clc
mov
clc
fs
ss
add
add
add
repz
movsl
clc
aam
clc
pop
gs
mov
xabort
clc
and
add
push
adc
push
jge
mov
clc
jns
add
or
or
clc
fs
inc
add
push
aas
pop
sarb
das
bound
add
sbb
add
push
lods
icebp
fisubrs
or
clc
movsl
clc
xlat
stos
stos
mov
clc
aad
mov
pop
test
fidivl
outsl
leave
aam
std
pop
fs
sbb
cmp
sub
ss
fmul
mov
cwtl
cmp
jle
push
and
add
add
xor
add
clc
mov
cld
add
add
aas
mov
clc
int
add
in
data16
shll
add
pop
clc
mov
dec
sub
mov
xchg
sar
addr16
imul
in
cmc
scas
push
imul
sbb
add
inc
clc
jb
add
outsb
push
sbb
add
nop
xchg
jae
add
inc
clc
fwait
out
jl
ret
stos
cmp
xchg
outsl
hlt
in
pop
jbe
add
mov
mov
push
insb
fldcw
pop
mov
add
in
cwtl
adc
clc
hlt
mov
mov
clc
lahf
kmovw
mov
testb
lea
clc
addr16
je
clc
repnz
pop
sub
inc
add
mov
add
dec
clc
or
add
jns
mov
sub
enter
jbe
clc
sbb
arpl
add
add
sar
sar
clc
xbegin
add
add
clc
lret
in
cmp
push
add
inc
clc
inc
add
mov
add
push
xchg
cmp
add
cmpsb
clc
sar
pop
clc
ficoms
inc
clc
test
jbe
clc
cld
ret
insl
pop
inc
add
daa
clc
test
or
clc
jge
xor
add
add
jmp
jmp
dec
scas
jne
push
aad
cmp
and
add
jp
mov
clc
push
add
adc
add
cli
fwait
pop
jno
add
clc
fimull
mov
fwait
pop
adc
add
add
scas
mov
cwtl
mov
clc
pop
lret
fisubl
sub
clc
adc
add
aaa
lea
add
sar
mov
jns
add
jbe
push
add
mov
fidivl
add
imul
add
dec
adc
add
es
mov
add
xchg
dec
in
cmpsl
clc
loopne
pop
sub
sar
scas
cmp
add
jae
add
lret
clc
into
xlat
hlt
daa
clc
enter
add
in
enter
mov
ja
int3
out
aas
jecxz
movsl
clc
jbe
push
add
pop
clc
or
ss
movsb
clc
mov
daa
clc
pop
clc
mov
adc
clc
cmc
iret
sahf
mov
mov
cwtl
mov
outsl
fisttpl
clc
cmp
clc
jo
add
sub
jb
add
mov
add
xchg
sar
xchg
cmp
loopne
dec
mov
fldcw
pop
xor
add
clc
mov
inc
add
sub
cmp
clc
cmp
add
mov
inc
add
jl
clc
jno
add
insl
fdivrs
clc
xor
add
add
daa
clc
xor
add
imul
add
clc
push
jnp
add
lahf
mov
dec
cs
outsb
rcrl
add
adc
add
mov
jnp
inc
add
xor
cmpsl
clc
pop
inc
clc
sub
cld
scas
mov
clc
fistps
cwtl
and
add
fwait
icebp
cmp
add
cmp
cmp
lods
pop
lret
mov
mov
adc
clc
das
mov
or
add
enter
cmp
inc
clc
mov
clc
add
or
cmp
shl
pop
pop
loope
xor
add
clc
cmpsl
clc
mov
inc
clc
lahf
sbb
clc
je
fadds
clc
sub
add
scas
clc
xor
add
add
push
add
add
clc
cmp
sti
stos
pop
lcall
ja
popa
add
and
cld
out
in
pop
test
and
add
outsb
xchg
sbb
je
clc
cwtl
addr16
cwtl
test
and
add
loopne
add
in
outsl
clc
es
xor
sub
lods
xor
pop
js
pop
sbb
ds
rcr
cmc
xchg
incl
add
mov
push
add
jl
inc
clc
pop
aaa
xabort
pop
mov
clc
add
add
add
out
sbb
and
add
add
add
pop
clc
fmull
xchg
xchg
into
jg
repnz
add
add
or
sub
add
cmp
add
jg
cwtl
jmp
clc
sub
clc
push
add
sub
and
add
clc
pusha
add
jno
add
clc
enter
xchg
stc
iret
xor
add
add
and
add
clc
dec
lret
xchg
adc
clc
cmp
push
clc
out
into
jl
stos
cwtl
mov
jmp
push
add
add
add
daa
clc
pop
cltd
or
add
xchg
fsubrs
clc
jmp
adc
add
clc
int
hlt
into
insl
mov
mov
xchg
mov
iret
cmp
clc
cmp
sub
inc
clc
inc
clc
into
clc
push
add
iret
sub
and
sar
divl
add
sub
jno
add
js
clc
dec
xbegin
lcall
or
cmp
push
push
add
mov
scas
xor
add
push
clc
adc
add
icebp
jo
add
clc
es
gs
dec
fsubrp
push
cli
out
clc
fstps
or
aaa
push
add
aaa
xor
add
add
call
ficompl
in
mov
xlat
movsb
clc
xabort
push
outsl
xor
add
clc
imul
outsl
aaa
mov
cli
test
xchg
xchg
pushf
popa
add
and
add
xchg
iret
mov
add
sahf
adc
test
cltd
sbb
clc
lods
gs
mov
cwtl
sub
push
cli
leave
aas
adc
add
clc
add
xor
add
or
adc
into
xor
add
mov
cmovb
add
clc
push
cmp
adc
clc
mov
sbb
sti
inc
clc
fs
clc
aam
clc
or
clc
test
out
sub
clc
dec
add
add
push
clc
and
add
clc
std
cmp
insb
xor
add
add
dec
cli
sbb
add
fadds
clc
popa
add
push
sub
push
pop
loopne
add
scas
gs
adc
add
clc
ss
clc
push
add
jmp
pop
rclb
in
jmp
cs
clc
popa
add
mov
jecxz
scas
jle
cmp
cmp
push
add
mov
clc
mov
xor
push
xchg
jno
add
cwtl
ds
clc
fists
aas
push
add
es
rorl
dec
add
add
frstor
clc
fldt
aam
jne
sar
xor
add
xchg
inc
clc
and
add
clc
clc
mov
add
sbb
gs
test
adc
add
clc
in
mov
add
add
and
add
clc
daa
clc
cmp
nop
stos
and
clc
test
add
ret
clc
lahf
push
ficompl
mov
xchg
cmpsl
clc
pop
aas
and
add
add
pop
dec
push
add
xor
add
or
pop
add
xor
add
clc
es
lahf
pop
xchg
mov
add
lcall
pusha
add
mulb
clc
repz
add
outsb
rolb
push
dec
das
insb
cmp
je
cmp
clc
lock
loop
pop
int3
rcrl
mov
test
and
add
jmp
clc
push
sub
xchg
nop
or
add
cmp
clc
xchg
test
popf
xchg
dec
inc
clc
cli
push
and
add
add
add
add
xchg
ficoms
add
dec
inc
add
xor
add
xchg
or
cmp
aas
cmpsb
clc
cmp
add
and
add
and
add
clc
mov
cmpsb
clc
push
clc
mov
clc
fisubrl
clc
fcoml
pop
fcoms
pushf
out
gs
cmp
push
push
in
aaa
stc
loop,pt
xchg
or
cmp
clc
pop
clc
in
cli
popf
xchg
scas
stos
test
mov
add
std
int
mov
clc
int
lods
dec
sub
add
fisubl
sbb
add
in
add
add
sub
out
cld
scas
sbb
gs
push
xchg
out
jle
add
nop
out
popf
cwtl
push
add
and
fsincos
jo
add
sar
clc
or
dec
aad
clc
sbb
add
movsb
clc
sbb
scas
xchg
dec
int
xor
ss
jecxz
sub
add
clc
into
js
clc
mov
push
or
adc
out
rcr
adc
clc
std
rcrb
sub
mov
jbe
lea
hlt
mov
cmp
mov
js
aad
shr
mov
clc
pop
mov
rolb
add
mov
dec
test
gs
sbb
add
jns
clc
loop
in
jl
je
inc
clc
ret
jae
add
out
scas
data16
mov
std
dec
insl
mov
insl
pop
fs
iret
mov
xchg
or
mov
clc
push
clc
sbb
add
push
and
add
sbb
pop
mov
mov
add
lret
add
clc
and
add
xor
add
clc
and
loopne
leave
fwait
rorb
test
inc
clc
jmp
jnp
or
negl
pop
push
add
xor
add
aaa
inc
add
fs
jl
mov
call
clc
inc
add
jge
cmp
out
dec
cmp
mov
clc
and
add
push
data16
out
test
loope
int3
fwait
cmp
jecxz
dec
mov
leave
das
jg
mov
clc
xchg
fyl2x
push
add
sahf
in
push
add
loope
mov
add
lret
mov
lret
js
clc
cs
sub
clc
xchg
insb
insl
gs
cmp
fldl
add
add
adc
add
cmp
enter
sub
call
mov
mov
add
add
aad
clc
dec
lcall
insl
sub
ds
mov
add
add
mov
clc
inc
add
ret
clc
lcall
enter
aam
test
js
clc
test
clc
mov
stos
pushf
pop
fsubrs
lods
insl
cmpsl
clc
loope
fcomps
mov
out
dec
sub
add
jnp
add
inc
add
cmp
mov
add
jo
add
hlt
xbegin
cmp
add
stos
insl
inc
clc
hlt
ss
add
jns
add
pop
lea
pop
lahf
sub
xor
add
add
icebp
jbe
inc
clc
lret
repz
outsb
pop
sbb
add
lcall
add
js
rcl
dec
dec
xabort
pop
or
push
test
add
xchg
cli
test
or
clc
in
xor
loopne
popf
insb
ret
push
sbb
mov
add
insb
sub
push
clc
pop
out
adc
add
icebp
addr16
mov
add
clc
daa
clc
icebp
lock
mov
add
pop
inc
add
push
ds
xor
add
leave
or
lret
sub
clc
ljmp
lods
in
mov
or
cld
cmc
mov
add
pop
cs
sti
or
add
push
out
adc
add
dec
cli
sti
fildl
add
inc
add
push
add
sub
clc
xor
add
ret
clc
add
add
push
push
cmp
xchg
enter
mov
clc
mov
scas
sbb
fwait
insl
push
mov
clc
lret
sub
sbb
clc
cmpsl
clc
inc
add
pop
int3
push
add
out
sbb
imul
arpl
add
add
add
pop
fidivrs
enter
mov
push
add
fsts
loop
xor
sbb
push
repz
add
xlat
cli
xchg
adc
add
clc
lea
jb
add
or
pop
movsb
clc
cmp
test
outsl
push
add
nop
lret
das
test
sar
add
xchg
ja
daa
clc
adc
add
jg
clc
out
xchg
or
pop
clc
push
cs
add
mov
mov
push
and
add
or
jl
clc
pop
jecxz
in
mov
clc
cmpsb
clc
fmull
mov
push
xchg
insl
jb,pn
add
clc
sub
ja
pusha
add
mov
push
dec
loop
mov
add
push
lret
dec
sti
outsb
cli
mov
add
inc
add
clc
push
das
add
add
add
mov
pop
scas
jecxz
bound
add
clc
hlt
inc
clc
push
xchg
mov
inc
clc
test
fistpl
inc
clc
loopne
xbegin
roll
sub
and
popa
add
cmpsl
clc
cs
jmp
push
inc
clc
xor
add
clc
add
sbb
shlb
add
sti
iret
fadd
clc
fidivl
push
jno
add
jl
clc
mov
xchg
push
add
fnstenv
add
scas
gs
adc
add
xor
dec
inc
add
cmp
push
push
cmp
clc
lcall
pop
shll
clc
popl
add
add
jge
daa
clc
dec
and
add
add
dec
das
cmp
arpl
add
pop
outsb
cltd
xabort
clc
mov
shll
add
xor
add
das
add
pop
cmp
ret
and
add
xchg
xchg
xchg
js
ljmp
arpl
add
clc
stos
pop
add
add
sar
outsb
popa
add
sbb
add
mov
stos
dec
outsb
cmp
jbe
adc
add
adc
add
ljmp
cmp
clc
xor
mov
sar
clc
bound
add
clc
and
add
clc
je
mov
and
add
add
loopne
fidivrl
out
xor
add
add
add
gs
mov
clc
or
mov
clc
dec
sbb
push
push
add
push
add
xor
add
cwtl
stc
sarb
sbb
lahf
test
add
add
or
add
arpl
add
gs
jno
add
add
daa
clc
jbe
and
mov
or
sbb
sbb
mov
clc
out
adc
adc
add
imul
add
sub
aam
and
add
clc
sbb
out
jge
notb
fdiv
xchg
loop
xchg
ja
clc
cmp
clc
cmp
clc
fcmovbe
gs
fwait
and
add
pop
adc
push
add
cmpsb
clc
int
clc
jno
add
daa
clc
mov
ret
xchg
mov
cltd
mov
push
pop
mov
add
mov
add
jne,pt
push
add
jge
clc
or
mov
mov
add
data16
and
out
xbegin
cld
data16
mov
clc
jecxz
call
ret
pop
repnz
add
out
sub
popa
add
cld
sbb
mov
sbb
and
add
jnp
add
test
movsl
clc
inc
add
icebp
sbb
cmp
addr16
xchg
call
ret
scas
mov
test
dec
movsb
clc
lods
sub
add
xlat
cmp
xlat
jle
clc
lods
mov
add
call
loopne
and
add
rolb
call
mov
add
cmp
imulb
sbb
movntps
add
mov
ficomps
cwtl
movsb
clc
dec
mov
movsl
clc
es
inc
clc
pop
in
aas
gs
sub
xabort
xor
icebp
int
in
pop
jle
add
mov
cwtl
sar
fisttps
stc
adc
clc
dec
jge
add
out
das
mov
clc
dec
lods
ja
push
clc
sar
clc
mov
add
and
hlt
mov
cmova
push
mov
out
hlt
scas
add
and
add
cli
cs
and
mov
jae
add
clc
pop
cmpsl
clc
mov
or
outsl
cwtl
sbb
lods
fisubs
dec
or
push
add
cmp
xchg
add
add
cmpsb
clc
testb
aad
add
dec
cli
fsubrs
add
lcall
sbb
movsl
clc
stos
jle
clc
jbe
jne
pop
lock
add
add
fcomi
inc
add
jg
aaa
sar
loopne
dec
fs
fimull
divl
jge
jo
add
cltd
fwait
push
mov
clc
push
clc
adc
add
sar
clc
sarb
addr16
add
jbe
aad
adc
add
clc
sti
clc
xchg
adc
add
sub
jbe
sbb
jae
add
push
clc
dec
add
aam
repnz
and
add
mov
lcall
clc
insb
cmc
jle
jg
mov
and
sahf
xchg
in
nop
pop
addr16
int
or
add
clc
sar
or
clc
and
add
imul
fs
mov
xchg
stos
jge
sar
xchg
add
add
push
repnz
jmp
into
add
sti
insl
xor
add
and
and
ja
mov
add
add
push
into
add
add
add
aaa
and
add
hlt
sahf
pushf
xchg
mov
fimuls
xchg
divl
add
das
in
ficoml
jnp
sahf
lock
add
out
aam
cwtl
jbe
movsl
clc
es
push
add
dec
dec
jbe
clc
call
push
in
mov
mov
clc
bound
add
add
ja
and
add
clc
or
add
add
ret
clc
push
add
jne
clc
cs
jecxz
pop
clc
mov
mov
mov
cmpsb
clc
cmp
mov
mov
pop
xor
add
clc
mov
outsl
add
repz
adc
add
addr16
popf
inc
clc
sbb
add
xchg
jb
add
push
clc
xchg
call
cmp
xchg
in
stos
dec
sub
inc
add
dec
movsl
clc
mov
clc
jno
add
cli
in
test
clc
mov
ds
sbb
mov
sbb
add
mov
mov
jg
sarl
pop
das
xchg
jae
add
xchg
mov
add
clc
mov
sub
mov
es
and
add
inc
clc
sbb
mov
clc
sbb
add
jg
add
test
and
faddl
adc
add
cmpsb
clc
sub
clc
lcall
inc
clc
dec
imul
add
jae
add
fildll
clc
jecxz
adc
add
ficoms
add
mov
iret
cmp
add
pop
sbb
leave
push
clc
xchg
shr
or
jns
data16
sbb
mov
aaa
ret
pop
repz
adc
add
mov
mov
clc
fs
gs
sar
repz
dec
loop
inc
clc
jp
add
ds
jno
add
jno
add
clc
adc
add
addr16
push
add
mov
arpl
add
jle
scas
xor
sbb
lcall
nop
jmp
dec
repnz
jmp
clc
cmc
mov
aaa
or
mov
movsb
clc
movsb
clc
mov
add
mov
test
aam
xchg
int
clc
add
add
xchg
xchg
xor
add
jns
mov
sub
add
pop
cld
pop
adc
add
add
lret
aam
lock
add
push
add
hlt
out
xor
add
leave
cmpsl
clc
inc
add
adc
scas
mov
mov
cmp
pop
sbb
push
inc
clc
pop
inc
add
nop
inc
clc
and
add
test
rcr
mov
nop
inc
clc
cmp
sub
push
jecxz
push
xchg
bound
add
and
add
clc
xlat
mov
clc
mov
rcl
xbegin
clc
aad
add
jno
add
and
add
add
add
add
push
clc
jle
push
add
fisubl
sbb
jmp
cmp
mov
add
cmp
push
out
cmp
add
ds
sar
mov
pop
xchg
sbb
addr16
scas
mov
clc
cmp
jmp
ds
fcmovnb
clc
pop
mov
clc
jno
add
out
jo
add
sbb
xchg
xchg
push
adc
add
fmull
push
mov
clc
mov
fistl
push
add
ficomps
inc
add
stos
idiv
pushf
dec
outsb
mov
add
clc
inc
add
mov
clc
or
lahf
xor
add
aam
lret
push
add
arpl
add
test
out
fists
mov
in
ss
and
out
add
add
icebp
cmp
cmpsl
clc
addr16
or
sub
add
addr16
fcomps
jne
clc
cmp
cld
mov
adc
add
mov
nop
ret
push
add
gs
mov
mov
ljmp
cmp
inc
add
aam
add
xor
mov
std
cmp
xabort
dec
scas
arpl
add
xlat
sbb
add
mov
pop
test
mov
xchg
popa
add
sub
clc
or
dec
jl
fs
xor
clc
int
sub
rcll
dec
mov
gs
lcall
clc
push
mov
add
es
xor
add
add
cmpsl
clc
in
shlb
xchg
out
pop
pop
dec
loope
xor
cmp
jg
clc
add
add
xor
add
fwait
cmp
push
add
aad
add
pop
push
add
xor
add
push
add
adc
add
test
lret
fisttpll
add
and
add
jg
clc
mov
jl
xchg
sbb
mov
add
dec
jne
mov
push
cmpsb
clc
dec
ja
ja
adc
movsl
clc
jnp
add
fmuls
sbb
clc
adc
vcvtdq2ps
add
push
es
cmp
dec
nop
xchg
gs
cli
scas
inc
clc
lret
pushf
leave
adc
add
clc
ja
inc
add
aad
add
in
lea
or
clc
sbb
add
jno
add
add
add
jae
add
xor
add
lea
fcoms
movsb
clc
lods
call
cli
imul
in
jae
add
clc
sar
jmp
pop
int3
out
out
sub
pop
lahf
mov
push
data16
cld
inc
add
push
clc
es
push
cmp
mov
cmp
add
pop
xor
add
pop
es
insl
adc
add
add
add
in
pop
out
sub
dec
cmp
test
cmp
xor
popa
add
popf
mov
int
cmpsl
clc
movsl
clc
lods
arpl
add
lahf
adc
add
cmp
pop
clc
call
aaa
xchg
xchg
gs
pop
pop
daa
clc
push
cmp
xor
add
add
add
or
add
add
add
jp
cmc
xor
add
clc
das
inc
add
cmp
push
add
das
xchg
inc
clc
jb
add
test
clc
and
mov
pop
jnp
loopne
imull
iret
test
xchg
aam
fisttpll
std
loope
mov
jb
add
add
arpl
add
clc
cld
mov
jae
add
ss
arpl
add
add
test
aam
clc
pop
notb
add
push
add
jl
sti
jne
dec
or
popf
mov
add
sub
push
inc
clc
das
ret
lcall
clc
sub
clc
jl
push
mov
inc
clc
idivb
mov
fimull
push
jb
add
add
add
add
inc
clc
lret
mov
clc
jns
clc
out
rcr
mov
xchg
push
adc
add
add
int3
push
cmpsb
clc
test
cmp
add
fxch
aad
cmp
jge
push
mov
add
or
add
cmp
add
js
cmc
cmc
lret
insl
shr
fidivl
adc
jecxz
cwtl
test
and
add
or
xchg
mov
insb
nop
pop
outsb
pop
ret
clc
sbb
clc
and
add
clc
fcmove
fsubrl
adc
add
add
clc
ret
push
popa
add
mov
clc
sarb
fcompl
pusha
add
fldt
stos
xchg
xlat
fwait
dec
sbb
clc
scas
fcmovu
xchg
mov
clc
imul
inc
add
cmp
clc
in
mov
cwtl
add
inc
clc
je
mov
push
add
fcmovu
fucomp
cmc
jae
add
mov
cs
clc
jb
add
add
fwait
push
clc
jno
add
mov
clc
into
arpl
add
ret
movsl
clc
dec
fs
sahf
jnp
clc
cli
lret
mov
js
jne
mov
add
xlat
outsb
jg
clc
ret
pop
testb
ret
clc
mov
adc
add
sahf
add
add
push
add
fnsave
xor
add
add
clc
cld
mov
into
and
add
clc
ret
sar
mov
add
mov
pop
lahf
icebp
arpl
add
clc
enter
clc
jl
jns
out
test
clc
pop
test
das
shr
fs
addr16
repnz
add
int3
mov
cmp
push
add
mov
pop
mov
js
add
fs
xchg
and
add
rcll
jmp
clc
adc
fs
pop
inc
clc
outsb
pxor
ja
add
dec
inc
clc
push
add
jne
ss
js
clc
or
add
data16
cmp
bound
add
jbe
xbegin
clc
add
add
add
int
jl
in
xchg
push
add
xor
add
sbb
test
lods
das
shlb
add
sti
mov
xchg
std
mov
cltd
cld
je
fdivrs
je
push
out
pop
dec
sub
clc
mov
ret
clc
cmp
into
fcomps
cmp
aam
sub
mov
out
inc
add
lret
xchg
cmp
imul
clc
shrb
mov
fisttpl
clc
mov
divl
clc
push
add
adc
mov
inc
add
aaa
add
add
xabort
es
leave
clc
xchg
push
add
add
daa
clc
pusha
add
jns
push
pop
and
add
clc
in
lods
mov
jnp
data16
and
add
jno
add
xor
ret
clc
push
clc
arpl
add
clc
nop
loope
mov
inc
clc
ret
clc
pop
pop
clc
int3
out
mov
or
clc
cmpsl
clc
in
dec
dec
fisttpll
nop
or
into
cmp
add
push
fildll
sar
flds
inc
add
incl
inc
clc
mov
sub
dec
in
sub
sub
add
test
scas
cmp
push
jns
add
sub
clc
test
pop
jmp
add
lret
adc
add
clc
iret
or
push
add
movsb
clc
cmp
shll
add
mov
test
add
add
jb
add
mov
adc
add
imul
mov
clc
jmp
clc
scas
mov
lods
push
add
jne
clc
sar
clc
sbb
clc
mov
clc
mov
loope
test
outsl
cwtl
push
push
movsl
clc
mov
mov
clc
mov
es
mov
dec
jns
mov
clc
call
add
add
mov
clc
cltd
inc
clc
jge
es
leave
aaa
sbb
sar
add
add
add
cmp
das
out
jbe
add
pop
gs
aaa
cmp
clc
test
jle
cmpsl
clc
ficoms
ret
add
sbb
cmpsl
clc
mov
clc
push
fs
sar
repnz
clc
fsqrt
fildll
in
push
add
mov
fiaddl
xchg
xabort
clc
dec
or
mov
clc
xchg
popf
data16
fs
cmp
sbb
and
add
cmp
push
adc
stos
jae
add
clc
aaa
push
clc
adc
add
add
pop
dec
jle
mov
add
add
mov
clc
and
add
jno
add
mov
fcompl
add
clc
mov
imul
add
pushl
incb
add
loop
sti
cld
mov
stos
inc
add
in
add
add
pop
arpl
add
jbe
xlat
test
aas
cwtl
xchg
test
pop
inc
add
loope
jecxz
pop
jge
and
add
push
adc
inc
add
inc
add
call
cmp
xchg
mov
add
xchg
push
clc
out
xchg
out
sets
pop
pop
cmp
push
jecxz
push
sbb
clc
xchg
add
pop
xchg
sbb
out
mov
add
bound
add
shrb
or
shr
lea
add
adc
add
add
add
nop
lret
cmp
stos
or
add
clc
sbb
adc
add
add
pop
ret
clc
jg
mov
cmc
mov
sub
pop
mov
add
sahf
jae
add
dec
ljmp
lock
clc
lock
shrl
adc
add
adc
add
xor
add
add
push
add
leave
lock
cmp
clc
dec
adc
add
add
push
add
or
out
mov
mov
add
test
clc
adc
add
add
popf
mov
add
inc
add
sbb
pop
clc
lods
cmp
clc
jb
add
mov
clc
sbb
adc
sbb
add
dec
sbb
mov
add
and
add
adc
clc
push
cmp
mov
mov
shrl
jae
add
add
jns
scas
lahf
mov
add
je
clc
loope
xchg
adc
add
out
cmpsb
clc
mov
dec
clc
das
mov
mov
inc
add
mov
fnstcw
cmp
lcall
clc
outsl
into
imul
clc
fisubs
sbb
add
cs
dec
xchg
xlat
mov
cltd
or
aaa
negb
cmp
dec
adc
add
jmp
add
gs
shlb
add
mov
aaa
sbb
sar
cs
pop
pusha
add
adc
inc
add
mov
clc
cmp
pop
clc
sub
mov
dec
mov
mov
add
mov
cs
sbb
dec
scas
add
add
clc
pmulhuw
sub
mov
aam
add
cmp
sbb
stos
push
dec
mov
dec
cmp
clc
in
mov
test
insl
fsubrl
clc
mov
clc
sub
clc
cmp
add
aaa
xchg
mov
push
clc
mov
in
jb
add
pop
adc
add
and
add
stos
repnz
add
add
int3
mov
mov
dec
mov
add
mov
fdivl
mov
cmp
sahf
sar
clc
ds
xor
arpl
add
xchg
cmp
pop
or
out
out
mov
into
leave
shrl
clc
rcll
ss
fst
or
mov
aad
add
fwait
mov
lock
testb
clc
xchg
add
add
and
mov
clc
xbegin
push
add
imul
inc
add
gs
adc
clc
movsl
clc
adc
add
clc
mov
push
clc
stos
add
add
mov
mov
add
clc
adc
mov
clc
js
mov
mov
clc
mov
add
push
je
imul
stos
pop
clc
popa
add
mov
cltd
sub
add
lock
lea
jnp
mov
clc
and
pop
rol
clc
shrb
clc
sbb
in
add
add
clc
lcall
push
outsb
inc
add
adc
std
cmp
ja
push
stos
mov
clc
es
add
add
xor
jbe
ficoml
add
repnz
dec
xabort
dec
gs
hlt
fwait
dec
popf
or
add
mov
dec
fnsave
popa
add
stos
push
add
lret
and
add
mov
mov
xchg
inc
add
push
ret
pushf
call
inc
clc
inc
clc
mov
mov
sahf
push
clc
xchg
fbld
clc
inc
clc
add
hlt
divb
sub
push
pop
push
test
mov
push
das
div
lret
clc
inc
clc
loope
xbegin
push
clc
adc
repnz
add
or
daa
clc
cmpsl
clc
sub
sub
xbegin
adc
add
iret
sarb
out
gs
mov
sbb
add
add
sub
shll
mov
jno
add
sub
fidivrs
mov
clc
bswap
fwait
and
lock
clc
adc
clc
aad
and
cmp
xchg
movsl
clc
pop
mov
fwait
mov
add
mov
and
add
add
int
cmp
in
mov
mov
sub
fistl
clc
pop
clc
jns
roll
xor
add
add
mov
add
mov
sbb
out
gs
mov
inc
clc
pop
iret
push
jbe
inc
add
fcomps
sti
std
fcompl
add
pop
or
aaa
mov
clc
loop
or
fisubrs
clc
or
stos
add
add
add
test
clc
cmp
clc
enter
add
sub
mov
jbe
clc
cmp
mov
jl
inc
add
xchg
mov
clc
scas
or
dec
mov
xchg
mov
clc
ss
std
xchg
push
xchg
rolb
add
cmc
cmp
clc
push
add
popf
in
adc
add
add
fxch
pop
mov
jno
add
add
rolb
add
cmp
aad
lahf
jg
sbb
pop
or
or
clc
call
lahf
scas
enter
clc
cmp
add
out
aaa
clc
sbb
xchg
outsl
fcoms
stc
mov
clc
xchg
push
mov
jb
add
add
push
jg
pop
jl
xchg
out
pop
xchg
push
cmc
push
dec
mov
add
add
push
movsb
clc
xlat
fistps
lret
and
adc
add
fcomps
fs
aas
jne
clc
ret
clc
mov
push
scas
sub
arpl
add
add
push
add
aaa
push
int3
adc
pop
jmp
adc
clc
push
sub
add
ja
xbegin
clc
mov
fidivl
xchg
inc
add
jae
add
xor
add
or
clc
int
xabort
add
jecxz
cmc
jecxz
cmp
test
sti
insl
add
add
clc
push
inc
clc
inc
clc
in
adc
and
add
add
add
add
or
add
jo
add
in
in
adc
xchg
mov
jg
clc
xchg
push
jns
ds
movsb
clc
sub
clc
mov
movsl
clc
jmp
clc
mov
add
cmp
add
fldl
clc
mov
add
clc
loop
ror
sti
out
jecxz
ljmp
push
clc
push
clc
repz
xchg
push
not
outsl
mov
clc
pop
cmp
push
lcall
xchg
cli
ror
cmc
and
add
xchg
push
inc
add
outsb
xchg
testl
add
mov
cmp
add
add
add
cli
test
add
xor
add
mov
sahf
adc
add
clc
or
int3
stos
movsb
clc
mov
inc
add
into
push
add
cmpsl
clc
daa
clc
imul
nop
push
sarb
add
clc
cmp
or
push
daa
clc
inc
add
mov
clc
lods
mov
lea
add
add
clc
aad
popf
fimuls
stos
mov
pop
xor
imul
test
in
insl
cmp
add
cs
outsl
cmpsl
clc
cmp
cmp
add
mov
mov
add
fs
out
mov
pop
or
movsb
clc
dec
inc
clc
lret
fidivrl
add
clc
xchg
sbb
and
add
add
push
add
jmp
inc
clc
cmpsl
clc
aas
jp
cmp
shrb
clc
shrl
fbld
add
add
add
outsb
insl
jp
clc
stc
push
add
push
aas
jbe
push
or
jbe
mov
arpl
add
add
xchg
addr16
popl
add
cmp
clc
mov
das
stc
cmp
clc
mov
leave
mov
dec
xabort
add
cmp
daa
clc
jbe
lcall
add
mov
lods
ret
clc
cmp
clc
cmp
sub
clc
sbb
push
clc
lcall
cmp
cmp
cmp
inc
clc
adc
jbe
clc
dec
test
cmp
add
mov
cwtl
sub
enter
sub
clc
testb
add
sbb
mov
clc
push
sti
imul
ds
pop
aad
pusha
add
sbb
pop
mov
lcall
leave
out
vmovntps
add
sub
clc
into
inc
clc
pop
xabort
cmpsl
clc
inc
add
push
jg
cltd
cmp
cwtl
cmp
clc
fistpl
jne
xor
clc
add
shll
add
xabort
clc
xchg
in
jmp
clc
jb
add
fidivrs
clc
iret
sub
add
sar
mov
clc
or
add
cmp
mov
dec
arpl
add
loop
fdivs
add
clc
sar
mov
sarl
lcall
clc
adc
add
loop
push
add
inc
add
mov
add
add
sub
mov
xchg
jle
clc
arpl
add
clc
jge
clc
int3
dec
xor
add
add
clc
adc
add
sub
clc
test
add
xchg
and
add
scas
mov
add
push
add
gs
test
mov
add
mov
add
add
mov
iret
cmp
leave
scas
repz
inc
clc
add
add
into
cmp
fistps
lret
mov
add
ret
clc
push
addr16
pop
in
popa
add
js
clc
xor
add
clc
and
add
pop
inc
clc
push
add
dec
xor
add
insl
dec
int
lret
inc
add
dec
pop
dec
adc
insb
mov
add
sub
clc
in
clc
stos
bound
add
insb
decl
insb
cld
xor
add
cmc
sbb
clc
divl
add
xor
add
add
clc
cmpsl
clc
out
mov
jg
add
mov
mov
mov
add
jns
jno
add
out
pop
jle
add
lods
out
cmp
adc
add
add
fsubs
dec
mov
and
add
push
in
push
and
add
in
mov
add
add
xchg
xabort
clc
or
mov
add
add
pop
xchg
jno
add
jg
clc
lea
mov
out
add
add
xchg
test
fildl
add
mov
add
clc
mov
in
aaa
xor
add
fstps
clc
inc
clc
in
pusha
add
and
add
ss
clc
dec
int3
inc
clc
adc
add
test
add
inc
add
push
mov
sub
arpl
add
clc
mov
aad
xlat
addr16
mov
clc
test
lock
imul
mov
enter
inc
clc
lret
jl
fsubp
clc
xor
add
outsb
sahf
push
mov
int3
pop
add
add
lret
xchg
shr
inc
clc
and
add
cmp
clc
popf
lock
cmp
lock
mov
push
hlt
adc
jge
mov
and
add
clc
mov
add
add
cmp
test
xchg
pop
aas
sub
test
xbegin
clc
mov
mov
dec
stos
xor
add
clc
mov
xchg
frstor
add
jns
xlat
sub
shlb
cltd
xor
add
mov
clc
fstpt
add
mov
lret
pop
mov
push
or
in
ljmp
add
lret
add
jmp
outsl
cwtl
inc
clc
loopne
sbb
ret
clc
imulb
out
pop
xchg
jge
stc
je
outsl
ds
inc
clc
clc
fwait
cmp
add
jg
cmc
loop
mov
sbb
into
xbegin
jno
add
mov
add
push
popf
push
nop
xchg
pop
in
xchg
cli
stos
xbegin
add
lock
add
xchg
test
clc
das
pop
test
add
jb
add
add
test
fimuls
fnstcw
mov
clc
add
shlb
or
add
mov
cltd
inc
add
std
lcall
jno
add
incb
out
jle
add
add
stos
jp
clc
xchg
je
add
cmp
aas
cmp
push
ja
repnz
lods
je
mov
xor
add
mov
jecxz
or
aaa
jno
add
add
cmpsl
clc
lret
mov
clc
dec
and
adc
add
out
rorb
add
arpl
add
add
icebp
push
add
call
enter
clc
test
loop
insb
dec
jno
add
fdiv
sbb
add
add
inc
clc
or
or
sbb
mov
adc
xor
add
cltd
jg
pop
mov
pushf
dec
js
inc
clc
ja
rcrb
repz
push
dec
out
into
mov
imul
add
clc
jp
mov
xor
add
clc
xor
stos
int
clc
xchg
mov
cmp
xchg
add
imul
imul
jb
add
add
fs
sar
clc
xchg
cld
dec
loope
or
mov
add
clc
cltd
ret
clc
sbb
mov
push
clc
pop
clc
cmp
clc
xchg
pop
loopne
push
cld
das
popf
test
arpl
add
data16
pop
sar
decb
add
dec
sub
jl
add
mov
clc
dec
aaa
xor
add
pop
cmp
rclb
jecxz
xor
add
adc
add
jbe
jmp
inc
clc
lea
cmpsb
clc
dec
fsts
idivb
or
data16
popf
mov
add
jp
add
jne
clc
pop
mov
ljmp
maskmovq
idivl
fcmove
fiadds
mov
or
dec
addr16
pop
lock
add
sub
clc
cmp
clc
dec
insb
xchg
insl
ljmp
mov
clc
or
mov
add
es
loope
xlat
rorl
cmp
add
lret
or
hlt
dec
or
stos
cmp
clc
fnstcw
sti
xlat
adc
addr16
or
add
aad
ret
clc
xabort
push
add
mov
ds
test
pop
pop
dec
outsb
and
add
xor
add
add
jne
in
mov
cld
sbb
ficoms
add
add
push
jo
add
push
jae
add
add
add
nop
outsl
jle
add
pop
popf
arpl
add
xor
add
rcr
clc
fs
in
repz
outsb
fs
cmp
clc
stos
loope
rolb
add
add
add
ss
xchg
fldcw
jne
clc
fsubs
clc
sahf
and
add
in
dec
mov
clc
sti
sar
fdivrl
sarl
mov
add
mov
clc
mov
clc
jns
add
dec
lahf
jecxz
sbb
imul
fcmovb
clc
xchg
sub
shll
fmul
aam
add
and
add
popa
add
int3
mov
or
push
lea
bswap
add
add
or
cltd
fcmovne
daa
clc
leave
xchg
insb
movsl
clc
push
add
ss
sarb
fisubs
jp
dec
test
add
xor
add
fisttps
add
repz
xbegin
push
add
add
aam
cltd
mov
in
sti
sbb
add
pusha
add
inc
clc
aam
lods
mov
mov
push
add
jne
in
iret
aad
popf
jle
clc
push
add
xchg
push
ljmp
popa
add
mov
mov
sub
add
sbb
clc
xor
add
in
push
mov
mov
sub
xchg
xor
add
scas
std
mov
add
scas
hlt
mov
add
push
sbb
insl
sub
xbegin
scas
dec
in
inc
add
pop
rolb
jbe
out
fucomi
mov
add
add
pop
lods
dec
imul
adc
add
clc
inc
clc
mov
clc
mov
int
repz
aam
clc
ss
add
xor
add
out
cmp
dec
lcall
inc
add
clc
repz
cmp
xchg
fisttpll
xor
add
jl
mov
clc
pusha
add
data16
lahf
sbb
outsb
xabort
clc
push
mov
cmp
jmp
cmpsb
clc
cli
xchg
stos
xchg
loop
out
fcmovbe
add
mov
out
stos
mov
std
push
lcall
pop
stos
nop
inc
add
fs
xchg
and
add
add
aaa
pop
and
add
add
jae
add
add
stos
pushf
fs
jns
fwait
sub
pop
xchg
dec
mov
pop
cmp
jns
lcall
push
add
in
enter
jo
add
adc
add
add
fdivrl
push
add
sub
add
clc
ja
xchg
push
ja
aam
mov
iret
push
add
jnp
sbb
hlt
push
in
icebp
pop
cmp
clc
push
std
add
das
xor
cwtl
pop
mov
clc
pop
aas
jle
clc
mov
add
pushf
das
adc
add
clc
cmp
add
jo
add
lahf
pushl
into
imul
or
repz
push
xabort
adc
add
in
dec
into
ret
clc
adc
add
stos
cmpsb
clc
cmpsl
clc
sub
clc
pop
add
add
pop
add
add
and
add
add
pop
xor
add
clc
aaa
sbb
cld
push
in
lcall
or
add
add
add
lret
xchg
stos
lods
xabort
mov
out
add
popa
add
pop
ss
hlt
insl
jnp
mov
cmp
cs
add
cmp
jne
push
cmp
add
sbb
clc
sub
sar
clc
pop
clc
jmp
into
and
add
add
xchg
xabort
jg
insl
adc
add
add
out
ret
clc
and
add
add
rcll
mov
add
add
loopne
lahf
mov
clc
adc
add
add
hlt
pusha
add
xor
adc
add
dec
mov
sti
push
clc
dec
movsb
clc
clc
jbe
clc
iret
cmp
fldl
add
add
lods
cmp
add
xor
add
fwait
inc
add
jne
add
fwait
sub
mov
add
pop
fidivrs
sub
clc
js
xbegin
stos
sbb
loope
xchg
imul
sbb
jl
clc
mov
mov
lret
adc
add
pop
clc
je
ficomps
lret
in
fcmovu
leave
out
enter
ds
clc
cmp
mov
cmc
out
scas
or
adc
add
cmp
add
fists
or
clc
pushf
insl
push
push
fiaddl
jno
add
or
add
mov
jecxz
pop
cltd
test
clc
sahf
and
add
clc
lahf
lret
inc
add
jle
clc
insb
cld
dec
mov
out
fists
in
pop
aam
xor
mov
add
clc
and
fcmovu
jae
add
dec
dec
hlt
adc
add
jne
arpl
add
fidivl
add
fwait
test
scas
enter
xor
add
clc
lods
addr16
jb
add
fisubrs
scas
cld
xor
add
negb
je
add
sub
std
mov
inc
add
outsl
xabort
sti
pop
xchg
aad
jo
add
xbegin
lret
add
sar
sbb
clc
sbb
add
push
or
xor
add
insb
mov
add
mov
mov
clc
inc
add
push
mov
clc
das
pop
dec
je
xor
add
das
ja
add
add
jmp
pop
pop
push
add
add
add
or
add
and
mov
jbe
decb
lea
add
lea
mov
cmp
fs
xor
add
inc
add
push
ja
cmpsl
clc
lret
clc
mov
add
xor
clc
sub
push
rol
clc
jne
mov
mov
add
mov
inc
add
gs
out
loopne
cltd
xor
clc
adc
add
add
mov
clc
cmp
mov
mov
pop
sub
sbb
jecxz
cmp
add
mov
xor
add
nop
mov
jns
pop
ljmp
jle
jg
clc
sti
movsb
clc
rcll
add
clc
in
mov
push
add
clc
push
xchg
cmp
add
or
and
loopne
imul
clc
jge
int3
nop
dec
cmpsb
clc
cld
fdivl
and
add
clc
mov
add
sub
clc
call
clc
lcall
clc
mov
sar
cld
jmp
cmp
mov
mov
fs
mov
add
add
sub
sub
clc
dec
cld
mov
adc
add
mov
push
lret
inc
clc
cmp
insb
scas
fs
push
add
xor
out
aas
pop
ljmp
mov
adc
add
and
add
add
and
mov
add
add
jp
push
add
add
test
pop
call
out
push
add
and
add
stc
mov
add
jae
add
pop
repnz
add
pop
xchg
popf
iret
sub
mov
bound
add
clc
test
sbb
xchg
sub
fisubrs
mov
clc
ljmp
clc
xor
add
adc
add
xlat
and
add
clc
sbb
clc
test
or
fs
lcall
clc
ss
pop
ja
clc
push
clc
and
add
push
movsb
clc
dec
xor
add
into
shrb
clc
jae
add
imul
pop
pusha
add
add
add
imul
insl
pop
adc
add
dec
imul
add
ss
addr16
nop
jne
cmp
clc
cs
ret
clc
dec
push
add
mov
xor
stos
mov
add
pop
xchg
or
inc
clc
sbb
jmp
xchg
rolb
mov
pop
adc
add
clc
add
pushf
pop
clc
out
repnz
clc
test
adc
or
adc
add
inc
add
repz
fistpl
loop
mov
dec
push
aaa
es
bt
ficoml
pop
and
add
outsl
jb
add
jnp
mov
jb
add
and
add
add
mov
mov
mov
and
add
mov
push
add
push
push
pushf
pop
clc
clc
lea
clc
mov
clc
ljmp
cmpsb
clc
xchg
jecxz
push
clc
mov
inc
clc
mov
clc
xor
add
fs
incl
add
add
add
mov
clc
mov
cmp
add
cmpsl
clc
cmp
icebp
mov
rcl
movsl
clc
jbe
clc
xchg
dec
mov
add
pop
inc
add
inc
add
dec
ljmp
mov
clc
in
pop
mov
gs
daa
clc
fimuls
mov
add
aas
pop
cltd
or
inc
clc
test
mov
push
cmp
push
xchg
popa
add
sar
jp
jle
add
mov
insl
imul
stos
into
pop
or
add
add
out
xchg
loop
aad
aam
stos
outsl
mov
add
ret
clc
xchg
jp
repz
lahf
and
add
xchg
push
mov
ret
clc
arpl
add
inc
add
cmpsl
clc
repz
and
insb
mov
mov
clc
mov
push
push
pop
clc
push
clc
inc
clc
pop
jno
add
clc
test
add
add
mov
cmp
add
jmp
add
movsb
clc
lcall
test
clc
mov
hlt
fxch
fldcw
add
or
push
clc
sub
cmp
add
outsl
or
add
clc
inc
clc
adc
add
mov
in
nop
cmp
clc
xchg
mov
xchg
jae
add
add
sti
fcompl
pushf
dec
mov
rorb
xbegin
clc
loop
mov
clc
add
pop
xchg
arpl
add
js
clc
lods
xor
xlat
add
add
stc
sub
clc
xlat
in
movsb
clc
cmp
pushf
mov
test
icebp
es
lcall
sub
popa
add
jb
add
sbb
arpl
add
inc
add
pop
clc
push
clc
je
je
cmp
aam
clc
sbb
imul
dec
lods
or
jmp
test
add
add
clc
mov
pop
inc
clc
push
in
pusha
add
cs
cmp
dec
pop
clc
mov
clc
iret
ss
sub
xbegin
ret
xchg
pop
push
clc
outsl
cmp
push
ja
xlat
mov
xchg
adc
add
clc
popf
fisubrl
repnz
aas
int3
fsubr
xor
add
add
add
add
lret
cmpsb
clc
cwtl
mov
sar
stos
dec
mov
movsb
clc
leave
adc
add
clc
pop
pavgw
cmp
arpl
add
dec
das
cld
ror
pop
clc
in
dec
pop
scas
enter
fsub
clc
lods
cmp
add
sbb
xabort
sub
clc
or
clc
dec
xchg
int3
add
add
dec
push
clc
add
add
bound
add
add
in
loop
mov
and
add
pop
add
add
add
clc
jg
iret
sbb
mov
add
cmp
xchg
ret
clc
out
push
or
into
mov
add
aaa
out
push
clc
xchg
mov
cltd
mov
dec
xbegin
arpl
add
add
mov
sub
add
add
push
jo
add
in
cmp
mov
clc
xor
add
clc
mov
xchg
dec
icebp
add
add
lcall
out
mov
cmp
cmp
clc
arpl
add
add
fs
push
test
ss
pop
fists
add
mull
movsl
clc
inc
clc
or
int3
mov
clc
mov
sar
out
mov
xchg
hlt
sbb
je
clc
fsubrs
add
lods
imul
add
clc
cmp
clc
xchg
mov
test
rorl
xlat
fcomps
ret
clc
push
cmp
jns
add
fs
xchg
stos
repnz
fiaddl
icebp
inc
clc
push
and
lret
adc
clc
cmp
lret
es
add
clc
jne
clc
mov
mov
scas
lcall
mov
imul
push
xor
add
dec
inc
clc
mov
mov
jmp
add
mov
out
rep
and
add
add
clc
in
cmp
add
xlat
cmp
mov
adc
ds
mov
xabort
mov
adc
add
clc
fs
add
add
add
add
cmp
add
mov
mov
add
int
pop
or
incb
add
inc
add
jge
lods
push
add
or
clc
push
sub
jns
add
test
fs
cld
or
mov
sbb
adc
clc
cmp
sub
pop
inc
clc
repnz
js
or
add
ds
out
mov
add
clc
aad
add
jle
dec
pop
out
mov
xchg
call
test
xor
clc
or
clc
movsl
clc
sub
aad
add
add
add
push
add
xchg
sbb
clc
leave
xor
add
inc
clc
dec
inc
add
push
daa
clc
cmpsl
clc
loopne
or
rolb
add
xchg
test
xor
add
ds
jne
mov
add
cmp
clc
outsb
lea
out
xbegin
popa
add
xbegin
mov
push
clc
cmp
in
sub
mov
pop
sbb
push
add
sbb
xabort
pop
xor
add
clc
aad
mov
clc
movsb
clc
inc
add
gs
pushf
in
fisttpl
jp
dec
mov
clc
or
ss
inc
add
out
in
cmpsb
clc
xlat
pop
mov
sbb
inc
clc
cmp
clc
mov
insl
jb
add
arpl
add
add
mov
add
adc
add
mov
dec
rolb
add
cmp
cmp
add
insb
ret
clc
xor
add
sbb
add
sub
xor
add
cmp
cmp
clc
aaa
or
add
repz
add
jbe
cmp
enter
mov
clc
stc
scas
and
add
push
test
imull
pop
pop
ss
add
or
or
or
clc
mov
lret
mov
pop
clc
mov
xor
add
jne
clc
addr16
cmpsl
clc
mov
js
pop
push
add
dec
sbb
add
clc
cmp
daa
clc
dec
adc
add
add
shr
fmull
cmp
add
outsb
sbb
mov
or
and
or
add
bound
add
stc
sti
addr16
lods
jle
clc
cmp
mov
clc
xchg
xor
add
cltd
inc
add
inc
clc
jmp
ret
xchg
daa
clc
mov
repnz
mov
aaa
ret
clc
sbb
pop
ja
ret
clc
cmp
loope
sbb
add
add
cmp
jbe
add
jno
add
xchg
mov
clc
pop
adc
and
add
cmp
clc
lret
push
cmpsb
clc
xchg
je
add
mov
add
aad
data16
mov
repnz
add
add
sbb
addr16
cmpsl
clc
jb
add
fsubl
add
add
cmp
add
push
add
pop
mov
push
jg
in
mov
clc
repnz
cli
mov
shrl
and
clc
jnp
sub
clc
dec
es
cmp
jg
mull
add
push
es
pop
nop
adc
clc
lods
jbe
clc
push
dec
enter
xchg
xor
add
mov
add
add
sub
clc
jo
add
leave
aam
clc
dec
jne
mov
lods
popl
jb
add
add
dec
push
bound
add
adc
add
xchg
mov
cs
rcll
add
add
add
inc
add
leave
lods
cli
lcall
test
add
or
shl
cmp
sub
fistps
clc
hlt
mov
adc
add
pop
mov
clc
dec
cmp
add
cmp
js
add
mov
mov
aaa
scas
jae
add
push
clc
push
add
clc
and
xchg
adc
add
out
aam
inc
add
lcall
punpcklbw
add
cmp
or
bound
add
ljmp
out
adc
add
fwait
mov
clc
jmp
jmp
movntq
out
movswl
add
mov
mov
clc
add
hlt
movsl
clc
mov
add
add
add
push
es
scas
add
add
add
aas
push
add
or
das
loope
das
cs
inc
clc
stc
ret
clc
nop
xor
add
in
lods
mov
add
clc
pop
xchg
stos
enter
add
add
push
add
fsub
clc
fstp
cmp
in
lea
add
add
cmc
and
add
add
scas
pop
cmp
in
push
sti
mov
pop
mov
add
clc
cld
mov
or
clc
push
adc
add
xchg
ror
pop
mov
aas
pop
add
add
cmp
push
in
das
hlt
pop
mov
es
xchg
test
jns
dec
xchg
hlt
lcall
xchg
je,pn
clc
xchg
mov
adc
add
jl
clc
jp
mov
mov
mov
mov
jne
clc
mov
iret
pop
clc
jp
popf
sahf
mov
mov
xor
add
inc
add
mov
aas
jns
add
jecxz
adc
add
add
xchg
inc
add
cmp
shlb
add
ljmp
clc
lcall
mov
js
adc
add
fs
ss
fs
loop
lods
aaa
inc
clc
lcall
push
movsl
clc
notl
add
fdivr
rcrl
stc
sbb
xabort
clc
xchg
popa
add
xor
add
clc
arpl
add
add
xor
add
add
lock
inc
clc
cmp
clc
out
sar
sbb
imul
pushf
pushf
in
push
clc
lret
mov
popf
clc
dec
jnp
scas
mov
dec
jne
add
mov
sub
clc
movsl
clc
test
stos
pop
into
scas
jg
clc
scas
adc
mov
pop
inc
clc
sti
jmp
mov
lods
lcall
lahf
mov
add
or
pop
stos
mov
popf
popf
pop
clc
sbb
add
clc
je
clc
in
cwtl
mov
dec
and
add
xchg
aad
jle
clc
leave
mov
add
jne
xbegin
adc
inc
clc
xlat
incl
clc
jl
clc
enter
jnp
mov
pop
cmp
add
ljmp
mov
clc
test
cmp
mov
and
add
imul
adc
add
sbb
cmp
iret
jns
dec
pop
rolb
add
movsb
clc
cmp
and
out
push
add
dec
or
fwait
jge
clc
pop
es
push
adc
inc
clc
dec
mov
adc
add
xor
add
add
out
incl
add
clc
dec
cmp
or
or
clc
inc
clc
fsubs
clc
dec
incl
add
xbegin
cmp
lahf
sahf
bound
add
bnd
pop
testb
add
xchg
ret
clc
enter
xchg
jo
add
loope
movsl
clc
and
add
sub
and
add
clc
add
jmp
clc
cmp
dec
mov
hlt
mov
push
add
repz
add
mov
jnp
clc
mov
shr
sarl
xchg
xchg
inc
add
es
ret
clc
cli
out
fwait
scas
jae
add
push
add
cmp
sahf
or
sub
clc
mov
jp
shl
clc
sbb
mov
clc
dec
cwtl
push
in
push
pop
sub
clc
add
add
cmp
lret
pop
inc
add
iret
lods
push
iret
xor
add
clc
lahf
add
add
jne
in
out
sub
and
add
aad
add
dec
lock
add
jae
add
mov
clc
and
add
call
clc
js
and
jne
xchg
jge
xor
add
inc
add
mov
imul
push
add
ret
ficompl
dec
lahf
stos
pop
push
add
xor
add
dec
pop
or
add
jns
sbb
or
add
loop
inc
clc
adc
jo
add
aam
stc
cltd
inc
clc
ret
mov
and
add
insl
xor
add
add
add
jmp
clc
gs
fidivl
add
out
loopne
mov
clc
sub
add
stc
ret
clc
push
add
pop
clc
std
test
xbegin
lods
cmp
movsb
clc
es
pop
aaa
and
add
mov
add
add
add
lock
add
and
add
add
mov
lea
or
icebp
mov
push
cmova
add
push
mov
xor
add
xabort
push
pop
js
xor
add
fwait
iret
dec
push
add
adc
add
enter
clc
cmp
clc
mov
ljmp
jns
das
outsl
shll
add
icebp
cmc
dec
sub
js
lock
add
mov
inc
add
cmpsb
clc
add
fimuls
add
call
pop
test
push
scas
lods
or
clc
adc
add
add
add
cmp
cli
mov
jb
add
in
jmp
xor
add
add
int
clc
lahf
addr16
jge
out
sar
ret
push
xor
push
push
sar
mov
leave
ret
clc
pop
cmp
mov
clc
daa
clc
testl
pop
dec
pop
lock
je
popf
xor
add
xbegin
push
clc
sar
test
and
jl
ds
xor
add
int3
sbb
add
add
cli
sub
add
inc
add
je
clc
cmp
roll
add
arpl
add
sbb
jl
mov
push
add
add
add
clc
repz
add
sbb
inc
clc
push
clc
in
dec
push
out
pop
mov
clc
ja
inc
add
xor
add
ret
clc
mov
sar
xchg
insl
xor
add
add
testb
insl
data16
and
clc
xor
clc
outsl
mov
add
add
add
fsubl
clc
adc
add
mov
dec
add
lea
notb
jbe
cmp
ja
add
enter
notl
adc
add
adc
add
fmul
mov
add
sub
add
jp
cmc
cmp
or
clc
inc
add
xchg
test
add
stos
dec
add
add
clc
jmp
insl
cmp
clc
cs
add
out
imul
cld
clc
xchg
push
lods
xor
add
pop
dec
dec
jbe
clc
xor
inc
clc
cld
hlt
jge
jae
add
ror
inc
add
jl
sbb
add
mov
movsl
clc
mov
add
xabort
pop
xchg
clc
rcll
xchg
ja
clc
pop
popf
cltd
ljmp
add
vmovlps
add
mov
out
or
fstps
and
add
scas
aad
scas
loopne
rcr
in
out
hlt
inc
clc
aas
fidivs
add
jmp
aam
in
pop
ret
cs
out
cwtl
lret
add
or
add
xchg
and
add
or
push
clc
stc
ret
clc
repz
and
add
mov
idivb
push
imul
add
push
add
sbb
add
aas
lret
cltd
aas
cmp
clc
cmpsl
clc
push
clc
sbb
add
push
add
push
add
ja
and
add
add
stos
adc
add
aad
add
push
add
add
add
ret
clc
or
xchg
into
cmp
clc
cmp
xchg
jae,pn
add
inc
clc
sar
clc
popf
in
aad
ret
clc
fdivl
add
add
outsb
and
add
mov
add
xchg
cmp
push
pop
mov
lahf
jno
add
cmp
in
loope
mov
add
cmp
add
add
add
add
jns
repnz
out
sub
clc
push
push
aam
pop
addr16
mov
clc
int
fstpt
mov
inc
add
fsubrl
cmp
cmp
add
std
lcall
scas
push
ficoml
clc
sbb
addr16
imul
add
dec
ficomps
sub
outsb
lcall
adc
add
add
mov
inc
clc
mov
push
add
roll
add
add
enter
fs
scas
xchg
aad
pop
stos
xor
clc
adc
and
adc
add
jmp
clc
ret
clc
data16
mov
dec
loop
jmp
dec
sub
dec
adc
add
inc
clc
repnz
mov
xchg
jge
add
push
add
lret
test
jle
inc
add
dec
ja
clc
adc
aam
clc
loopne
test
inc
add
push
add
mov
hlt
lahf
out
mov
lods
out
ret
clc
or
cltd
push
add
add
or
mov
clc
fisubs
sub
sub
add
and
stos
or
pop
add
add
clc
loopne
clc
mov
push
add
std
adc
xchg
imul
clc
lock
add
add
clc
data16
pop
das
test
inc
add
ljmp
cltd
test
push
fcmovbe
imul
mov
inc
clc
xchg
movsl
clc
adc
pop
pop
iret
cmp
clc
add
add
add
sub
clc
sbb
clc
mov
add
fcmove
jno
add
xlat
adc
add
popf
lea
sbb
pop
mov
data16
xchg
jns
add
cli
xchg
xchg
sub
aad
add
idivl
add
hlt
lret
int
clc
mov
clc
or
jae
add
add
jne
clc
movsl
clc
lock
pop
add
add
add
add
add
add
pop
pop
jmp
add
add
mov
add
push
mov
xchg
ds
jbe
adc
clc
jge
es
sbb
cmp
add
and
add
jg
aaa
mov
pushf
aam
clc
mov
sub
aaa
sbb
add
sub
pop
dec
inc
clc
jle
ret
clc
call
fmull
test
fstpl
in
cmp
inc
clc
sti
fsts
out
sbb
add
sbb
clc
push
cmp
mov
clc
mov
inc
add
xchg
clc
fisubs
aas
and
add
clc
mov
clc
push
add
insb
xchg
xchg
jle
clc
or
xor
add
add
ss
mov
in
and
add
clc
sar
add
sub
loopne
jg
push
pop
clc
cmpsb
clc
xabort
aaa
push
add
add
pop
sbb
add
xchg
rorb
clc
scas
inc
clc
xor
add
add
aam
clc
push
leave
jo
add
add
sbb
into
mov
fisttpl
xor
add
add
clc
push
mov
clc
rcll
arpl
add
sar
daa
clc
mov
add
jbe
add
loope
sub
mov
clc
insb
lods
sbb
add
pop
cltd
popa
add
push
add
iret
rcl
inc
clc
or
clc
xchg
lret
ja
clc
cmp
xorps
jbe
clc
mov
adc
add
sub
and
add
clc
xchg
xor
inc
clc
sbb
clc
daa
clc
adc
add
inc
add
xabort
xor
outsb
or
push
and
dec
or
xabort
clc
or
bound
add
addr16
dec
lods
scas
mov
add
add
add
fwait
adc
add
stc
cmp
aas
movsb
clc
pop
cmpsb
clc
je
mov
rol
clc
xor
mov
jp
fstpt
clc
lock
fwait
xchg
pxor
fwait
xchg
push
cmp
lods
test
cmp
clc
std
mov
add
ret
add
add
roll
inc
add
jge
clc
xchg
add
add
cmp
add
mov
pop
incl
sbb
clc
sbb
clc
mov
mov
sar
sub
clc
mov
xabort
clc
out
jmp
cltd
sub
clc
mov
mov
sub
mov
cmp
add
bound
add
clc
stos
stos
push
cli
jne
xchg
clc
and
add
mov
je
add
pmaxsw
outsb
outsl
xor
sbb
cmp
clc
pop
clc
test
je
cmp
clc
and
add
or
add
add
cltd
mov
pop
lret
aam
xchg
adc
or
add
jne
and
add
into
cmp
sub
movsl
clc
dec
jmp
add
ds
out
mov
jnp
add
add
add
outsl
push
sar
add
pop
js
sahf
das
adc
fidivs
add
add
and
add
sar
clc
fsubrl
insl
xlat
mov
cs
add
sar
fcomps
cmp
dec
push
add
lea
sbb
sar
pop
or
add
and
add
jno
add
add
add
aad
cld
rolb
add
inc
add
out
mov
clc
push
lods
movsb
clc
out
inc
add
and
sbb
clc
cmp
clc
in
cmp
xor
add
loope
mov
add
or
add
sbb
jne
add
mov
movsl
clc
in
shr
scas
jmp
jg
scas
and
add
cmp
clc
jl
clc
and
add
sub
leave
push
clc
aam
shlb
add
pop
mov
sar
clc
xbegin
clc
sti
xbegin
add
clc
pop
aam
clc
sub
cmpsb
clc
sub
mov
in
adc
add
add
add
scas
xor
add
add
xor
add
add
cmpsb
clc
xor
add
mov
sbb
clc
pop
ja
clc
inc
add
push
repz
outsl
mov
or
dec
pop
scas
ficoms
clc
sub
or
cmc
add
add
std
inc
add
or
add
clc
push
and
add
das
fistps
in
xlat
pop
dec
shll
add
cmc
inc
add
movsb
clc
pop
js
pop
xchg
mov
add
xor
movsb
clc
imul
add
clc
adc
mov
clc
jae
add
adc
add
and
add
outsl
je
cmp
prefetch
sbb
and
add
clc
pop
arpl
add
jo
add
cmp
mov
clc
push
pusha
add
xlat
cmpsl
clc
jge
cmp
and
add
add
sub
pop
push
out
xchg
sub
jns
clc
repz
mov
pushf
push
add
sar
notl
add
adc
add
dec
imul
add
dec
arpl
add
or
clc
popa
add
mov
add
imul
ds
clc
outsl
iret
adc
add
cmp
clc
imul
add
arpl
add
cmpsl
clc
and
add
mov
loop
mulb
clc
fimuls
stc
inc
clc
add
add
out
inc
clc
cld
sahf
hlt
out
cli
in
rorb
cmc
in
mov
cltd
cmp
test
clc
xor
add
insl
out
repnz
ja
add
lret
inc
add
je
clc
xlat
popa
add
insb
call
mov
sbb
rcll
add
jg
dec
mov
sbb
clc
xor
add
add
lret
into
xchg
mov
add
imul
add
add
cmp
fildll
daa
clc
cmp
xor
add
jae
add
add
in
mov
clc
movsb
clc
clc
jecxz
cmp
push
or
dec
ficompl
add
add
xbegin
cmp
add
add
push
sub
add
lea
ret
clc
ljmp
push
insl
add
punpcklwd
add
in
xor
dec
js
add
and
add
add
push
clc
and
dec
stos
pop
loop
push
add
adc
clc
gs
dec
mov
adc
add
pop
pop
adc
or
xchg
dec
out
aam
xchg
mov
outsb
mov
fmul
or
jge
clc
mov
inc
clc
aad
fnsave
leave
lret
and
pushf
int
into
cmpsl
clc
cld
xor
add
mov
clc
mov
add
imul
clc
pop
leave
mov
add
add
dec
aaa
sbb
out
scas
sub
fnsave
add
cwtl
sbb
sti
clc
and
popf
push
mov
clc
cmp
clc
cmp
jg
clc
ficoml
clc
mov
clc
ds
add
test
nop
sar
sbb
clc
or
outsb
or
shlb
clc
data16
add
inc
clc
mov
clc
popf
sbb
std
int3
test
xbegin
add
rcrb
data16
popa
add
inc
add
lods
into
xchg
jbe
clc
cmp
sbb
clc
xabort
pop
in
scas
es
mov
cli
jg
clc
xor
add
xchg
mov
mov
add
out
inc
clc
sti
ret
insb
in
lea
cmpsb
clc
imul
cmp
cmpsl
clc
loopne
xor
add
in
push
add
cmpsl
clc
push
data16
jg
sub
mov
cmpsl
clc
mov
push
add
add
add
add
clc
push
mov
jmp
loopne
push
add
std
mov
jl
clc
push
clc
insb
inc
clc
adc
add
nop
or
jae
add
jmp
xchg
or
clc
sti
stc
mov
cmp
xchg
stos
mov
clc
loopne
jne
cmp
das
into
das
call
adc
add
iret
fs
inc
clc
mov
cmp
add
mov
mov
push
cmpsl
clc
lcall
aad
xchg
imul
adc
clc
jne
cmp
clc
fidivrl
jb
add
add
cmc
outsb
mov
mov
mov
inc
add
stc
cmp
aas
push
or
mov
add
push
push
add
stos
push
stos
mov
clc
push
inc
clc
xor
mov
sahf
test
pop
bound
add
ljmp
mov
arpl
add
clc
ss
cmp
repnz
outsl
pop
xbegin
pop
test
add
and
add
clc
adc
add
sub
xabort
pop
ret
clc
int
clc
iret
xchg
divb
mov
das
mov
add
push
clc
mov
test
xchg
xor
add
popa
add
xchg
fwait
add
add
add
jmp
mov
mov
icebp
lret
xor
add
sbb
hlt
jnp
clc
xchg
loop
sbb
sbb
push
push
add
into
movsl
clc
push
add
fstps
mov
adc
jnp
mov
outsl
fstl
lock
pop
pop
outsl
cmpsb
clc
nop
sar
push
inc
add
jp
loope
push
add
sub
loope
fimuls
adc
add
sub
fcomps
repnz
clc
cmc
inc
clc
leave
dec
sub
cmp
add
in
cmp
push
inc
clc
setno
xchg
mov
mov
nop
jae
add
rcrb
xor
aas
push
add
lods
mov
add
sbb
inc
clc
ds
out
jle
nop
sub
clc
adc
add
lcall
leave
cld
movsl
clc
daa
clc
pop
stos
xchg
icebp
iret
or
bound
add
js
movsb
clc
lahf
outsb
inc
add
mov
arpl
add
insl
push
mov
mov
inc
add
loop
movsl
clc
push
add
jmp
xor
add
clc
in
inc
clc
cmpsb
clc
jmp
jne
mov
adc
add
clc
cmp
clc
sar
clc
jle
add
dec
lret
add
repz
add
clc
clc
jno
add
mov
ret
clc
aaa
int
nop
gs
sbb
and
add
pop
sub
loopne
mov
pop
dec
sub
adc
cmp
mov
clc
cmp
mov
cmp
daa
clc
jns
xor
add
dec
jb
add
inc
clc
clc
dec
and
repz
add
mov
add
cmp
nop
dec
push
push
add
ds
mov
clc
push
cmp
add
std
repnz
cmp
add
call
popa
add
cmp
add
je
clc
push
mov
jl
cltd
jbe
gs
add
sub
jns
add
sahf
jmp
clc
pop
ja
clc
mov
and
add
add
and
add
clc
lock
clc
loopne
mov
add
jae
add
test
pop
clc
xor
add
sar
add
xchg
mov
clc
dec
lahf
mov
cmp
add
enter
mov
or
add
add
addr16
loop
ja
push
jl
push
add
clc
clc
lret
adc
add
test
add
push
inc
add
adc
clc
adc
and
add
shl
sub
clc
jecxz
icebp
sahf
hlt
cmp
insl
test
cmp
xor
add
add
imul
repnz
mov
add
and
add
dec
popa
add
add
add
push
add
add
xor
add
mov
or
push
into
inc
add
dec
cld
mov
fldenv
add
sub
jne
sahf
aad
out
rcll
add
mov
clc
lahf
gs
mov
clc
pop
repnz
fdiv
mov
clc
fisttpll
and
add
add
nop
cmc
xor
add
outsl
xor
add
adc
add
dec
dec
or
add
add
add
cmp
shrb
ficoml
add
dec
mov
je
loop
cmp
loope,pn
push
mov
and
mov
clc
lock
push
test
mov
add
xabort
popf
mov
mov
jmp
nop
inc
add
xchg
adc
add
add
sub
lcall
add
add
add
clc
xlat
outsb
insb
cltd
cmpsb
clc
and
xchg
pop
out
je
add
add
add
clc
push
or
add
add
out
lcall
test
clc
cmp
clc
sbb
clc
xchg
cli
cmp
sarl
out
call
into
xchg
sar
icebp
ss
addr16
adc
add
add
fldenv
add
mov
dec
sti
or
clc
aas
push
cmp
sahf
jae
add
cmc
ffreep
clc
mov
mov
add
adc
add
lods
push
imul
or
popf
imul
popf
outsl
push
push
clc
faddl
add
adc
add
nop
lcall
mov
add
mov
add
loope
and
add
clc
cmp
mov
in
or
and
add
adc
clc
xor
add
leave
cmp
negl
clc
push
add
mov
dec
icebp
in
pusha
add
movsb
clc
push
divb
add
add
xabort
iret
adc
add
testb
add
repz
clc
inc
add
xchg
sub
enter
clc
mov
mov
mov
frstor
add
js
clc
aaa
arpl
add
jne
dec
inc
add
adc
clc
pop
addr16
push
add
imulb
add
shll
mov
imul
pop
ficompl
add
add
mov
cmp
clc
xchg
pop
clc
push
aad
stos
jno
add
cmp
mov
arpl
add
ljmp
aas
imul
pop
mov
dec
aad
fs
mov
lods
movsl
clc
jbe
clc
cmc
ret
clc
loop
mov
sahf
dec
xor
add
clc
inc
clc
add
mov
xchg
pusha
add
faddp
clc
pop
adc
add
clc
loop
insb
xabort
clc
jb
add
aaa
data16
fdivrs
stos
mov
outsb
aam
inc
add
mov
xlat
pushf
cmp
mov
testb
cli
and
in
and
call
dec
push
ret
mov
clc
mov
clc
cmp
add
jp
popa
add
sub
push
xlat
jbe
mov
add
inc
clc
dec
cmp
adc
add
clc
push
clc
out
mull
add
hlt
jae
add
pop
jo
add
mov
or
stc
movsb
clc
sar
clc
icebp
sbb
add
sub
lret
sar
and
add
fcomp
js
clc
push
jle
cmp
pop
shl
ja
add
mov
arpl
add
mov
push
lea
add
aam
add
test
clc
cmp
mov
clc
arpl
add
ljmp
mov
add
mov
add
mov
clc
test
ja
xlat
xchg
sar
and
add
enter
add
clc
mov
fcomps
clc
mov
std
mov
mov
adc
add
add
mov
push
sar
jl
clc
pop
sub
add
jae
add
scas
mov
dec
clc
sub
clc
insb
ja
popa
add
or
or
clc
or
mov
enter
jmp
test
sar
jne
clc
sub
add
inc
clc
xbegin
add
add
mov
dec
jg
jp
cmp
clc
in
jns
mov
pop
dec
push
add
xchg
bound
add
clc
dec
or
xchg
dec
push
cmpsb
clc
sub
sbb
xor
add
add
pop
adc
add
mov
add
push
and
add
insb
icebp
popf
xor
add
push
push
add
stos
xor
add
add
movsb
clc
stos
push
jge
add
dec
add
popf
movsb
clc
int3
mov
clc
pop
sbb
mull
add
add
xor
add
clc
xchg
imul
ret
idiv
sahf
hlt
adc
add
clc
inc
add
cwtl
mov
test
out
and
add
add
mov
fcom
adc
add
mov
pop
mov
pushf
outsl
adc
add
pop
int
add
jae
add
clc
movsb
clc
int
clc
push
aad
mov
clc
and
add
pop
xchg
shlb
clc
adc
add
jmp
jle
add
mov
add
clc
dec
gs
mov
fnstsw
shrl
mov
xchg
add
add
add
jbe
clc
adc
jecxz
inc
add
fsubrs
fcoms
dec
loopne
inc
clc
pop
clc
out
jge
clc
mov
add
sbb
add
je
lcall
lods
imul
mov
enter
push
push
add
push
xlat
xchg
pop
out
adc
imul
add
out
push
clc
icebp
xchg
mov
clc
adc
add
mov
add
cltd
dec
inc
add
and
add
clc
icebp
dec
cmp
ljmp
popa
add
lods
dec
adc
nop
imul
mov
fcomps
mov
out
jge
clc
push
fs
jmp
add
ss
and
jge
lret
clc
cmp
add
xor
add
add
bound
add
shrl
clc
leave
arpl
add
lea
add
push
clc
nop
test
jecxz
adc
add
dec
fnsave
adc
add
data16
jo
add
clc
in
lock
fstpl
fidivs
pop
int
clc
repnz
clc
pop
adc
add
sub
data16
jno
add
xchg
dec
jne
cmp
stos
mov
leave
push
hlt
push
add
cmp
xchg
sti
mov
add
pushf
adc
add
clc
icebp
mov
add
jo
add
clc
outsb
push
add
inc
clc
xor
add
clc
fcmovnb
clc
insl
in
pusha
add
inc
add
pop
ret
clc
cmp
shll
add
clc
pusha
add
sbb
clc
inc
clc
cmp
add
clc
popf
ret
jp
clc
xor
add
clc
push
add
sub
clc
xor
add
clc
push
fwait
lret
lcall
clc
cmp
clc
sbb
inc
add
cmp
icebp
adc
clc
push
add
inc
clc
mov
mov
and
add
lea
add
add
add
add
mov
clc
js
movsl
clc
sub
add
es
cmp
mov
add
cmp
add
cmc
dec
mov
clc
dec
adc
add
pop
mov
add
jp
fyl2xp1
cmc
jmp
imull
add
and
sahf
mov
mov
add
mov
dec
xchg
iret
or
add
push
lcall
dec
sub
insb
xchg
in
pop
clc
mov
adc
clc
sahf
loope
mov
mov
repz
inc
add
stc
daa
clc
out
xchg
fistpl
clc
cs
add
mov
dec
data16
hlt
mov
clc
cmp
clc
loope
gs
xchg
and
inc
clc
insl
div
mov
rolb
add
add
loop
push
icebp
pop
xchg
jo
add
hlt
leave
mov
clc
cmp
pop
push
clc
cmp
repz
pusha
add
in
clc
and
sub
add
add
insl
sub
add
pop
clc
imul
xchg
mov
dec
mov
aad
add
imul
neg
xabort
cmp
fcomp
pushf
or
pop
and
leave
stos
pop
mov
xchg
dec
mov
clc
lock
faddl
divl
add
sbb
jno
add
pop
mov
daa
clc
push
adc
xchg
mov
add
movsl
clc
fs
xor
add
add
jl
dec
lahf
out
adc
ret
clc
lret
sar
add
pop
lea
fimull
clc
and
add
inc
clc
aad
int3
mov
clc
adc
add
scas
mov
adc
pop
push
clc
mov
fsubrl
xchg
mov
push
ficompl
loope
not
jp
popa
add
aad
jg
scas
stc
call
add
add
out
mov
in
inc
clc
popf
adc
add
dec
pop
jnp
mov
add
dec
lea
jne
fdivrl
adc
add
data16
out
imul
add
mov
clc
cmp
pop
push
jb
add
adc
add
add
add
in
testl
add
add
add
loop
xchg
sbb
xor
add
lock
add
outsb
aad
clc
cmp
add
clc
dec
scas
lods
mov
loop
je
ss
sar
xor
add
add
dec
adc
add
clc
mov
add
mov
cld
cli
sub
clc
clc
fstpl
hlt
fidivs
sar
add
sbb
clc
sar
dec
sub
shlb
sub
clc
bound
add
addr16
mov
add
and
add
clc
pop
pop
mov
addr16
jne
add
jle
imul
test
mov
testl
add
push
cld
xor
add
add
add
add
clc
cli
sub
ljmp
imull
add
adc
test
cmp
loopne
into
sar
jl
pusha
add
add
add
nop
ds
adc
add
clc
mov
clc
mov
add
jno
add
enter
cmp
fs
mov
sub
inc
add
ljmp
add
clc
inc
add
or
inc
add
mov
clc
mov
dec
mov
add
icebp
push
pusha
add
inc
add
mov
cmp
clc
loopne
cmpsl
clc
in
enter
jg
add
and
add
lahf
jnp
add
pop
shl
aam
clc
lahf
xor
lret
xchg
xchg
std
ja
negb
cmpsl
clc
inc
add
fsubs
clc
jae
add
sar
scas
push
in
cmp
add
sarl
popa
add
clc
pop
clc
adc
add
clc
xor
add
cmpsb
clc
sbb
clc
jecxz
lock
add
clc
int3
inc
add
out
dec
sti
dec
push
add
lcall
add
cmp
add
add
cmp
add
and
add
out
popa
add
int3
inc
clc
push
add
dec
icebp
pop
mov
add
iret
popf
inc
add
xchg
mov
mov
clc
loopne
push
add
mov
clc
fs
mov
jnp
ret
clc
mov
clc
cmp
movd
insl
repnz
leave
enter
insb
xchg
outsl
lret
clc
mov
fidivl
inc
clc
mov
mov
imul
adc
add
clc
aad
mov
sub
add
inc
clc
mov
add
fisttps
aaa
push
pusha
add
aam
clc
idivl
out
push
pop
clc
fucomip
mov
pop
mov
sub
push
cmp
jb
add
add
add
jle
loope
stc
mov
loope
adc
add
clc
jecxz
es
sub
xchg
stos
leave
mov
push
jle
daa
clc
fcmovnbe
insb
movsb
clc
in
add
add
pop
pop
gs
adc
add
push
fdivl
add
in
arpl
add
or
xor
add
stos
jge
dec
cmp
clc
sti
ss
clc
nop
cmpsb
clc
push
inc
clc
fldenv
add
data16
ret
mov
add
imul
clc
xor
mov
xor
add
imul
stos
jmp
jae
add
add
das
jmp
and
add
add
jl
xor
add
clc
stc
fildl
dec
push
pusha
add
in
jns
nop
push
ja
jb
add
pop
lcall
sar
sub
lcall
js
xchg
adc
add
movsb
clc
adc
add
add
ja
clc
aaa
ffreep
clc
or
cmp
addr16
pop
add
add
clc
inc
add
mov
add
mov
add
imul
fcomps
inc
clc
lock
sysexit
stos
icebp
sti
push
clc
ljmp
sbb
clc
cmp
add
cmp
sub
clc
add
add
pop
clc
mov
add
add
sbb
cwtl
cmp
inc
add
aad
das
add
add
lock
add
int3
fiaddl
add
aaa
arpl
add
mov
rcrl
pop
cmp
clc
popa
add
es
add
add
test
clc
movsb
clc
mov
fisttps
inc
add
cli
cmp
add
clc
loop
stos
dec
xchg
arpl
add
add
pop
and
add
mov
mov
add
ret
clc
and
or
lret
es
mov
clc
push
cwtl
mov
adc
jle
enter
paddq
add
mov
rcl
vmovntps
add
cmp
inc
clc
clc
inc
clc
data16
lret
pusha
add
outsb
lcall
mov
jo
add
add
pusha
add
rorb
fs
inc
add
dec
lret
add
add
clc
ret
clc
jecxz
and
add
clc
or
clc
cmp
clc
int
mov
icebp
outsl
xchg
test
or
add
push
add
xor
push
jmp
jno
add
clc
xchg
cmp
mov
arpl
add
add
xor
add
mov
adc
add
clc
cmp
fisubl
clc
popf
xchg
add
add
fsubl
add
cmp
xchg
enter
stos
popf
xchg
mov
xchg
lods
sbb
cmpsl
clc
cmpsl
clc
xchg
cmp
sbb
inc
add
mov
das
sbb
icebp
mov
add
add
sti
or
sti
sbb
clc
iret
ss
clc
cmp
jb
add
add
movhps
clc
fcompl
or
clc
sub
push
sub
jo
add
outsl
add
add
xchg
and
bound
add
sar
clc
fsubp
clc
popf
dec
cmp
sub
mov
jns
clc
mov
add
loopne
add
imul
cmc
ljmp
jae
add
xor
add
pop
jae
add
dec
test
add
xor
push
add
fwait
mov
push
add
inc
clc
scas
ljmp
outsb
mov
rolb
add
add
stc
add
add
add
sbb
mov
add
ljmp
cmpsl
clc
push
mov
jecxz
fiadds
pop
movlps
add
add
inc
clc
dec
aad
sub
add
sub
xchg
dec
cmp
push
add
gs
scas
fsubp
clc
xchg
jns
cmp
fisubs
shrl
adc
add
repz
or
sahf
iret
clc
aas
bound
add
sub
imul
mov
jg
clc
rcr
sahf
int
mov
add
push
xchg
or
clc
pop
cmp
add
iret
notl
sar
add
or
imul
leave
sbb
scas
mov
shll
clc
cmpsb
clc
cmp
clc
test
out
int3
inc
clc
add
add
stos
std
outsb
push
clc
cli
push
add
mov
nop
pop
and
add
add
add
insb
pop
fidivs
add
mov
inc
clc
mov
clc
clc
lea
loop
dec
test
jg
clc
jo
add
fnsave
hlt
fsubp
clc
test
fisubrs
je
add
add
clc
and
mov
jnp
add
call
lahf
int
jmp
adc
adc
add
clc
xbegin
int
add
ss
add
jle
add
ret
clc
in
test
cmp
cs
aas
mov
jg
jne
push
mov
jmp
inc
clc
loope
lods
ret
add
scas
pop
clc
and
add
add
xchg
inc
add
lods
leave
mov
sarl
inc
clc
in
clc
test
xchg
pop
out
pop
sub
xchg
pushf
fildl
jb
add
add
shll
add
negl
jno
add
clc
adc
add
and
add
lods
adc
out
xchg
scas
call
clc
add
add
inc
clc
sub
or
xor
add
clc
jmp
xor
add
ja
or
insl
test
push
mov
leave
std
xchg
loope
xor
add
adc
add
xor
add
incl
add
idiv
jg
clc
mov
add
add
hlt
pop
clc
xor
add
jae
add
movsb
clc
mov
add
rcl
adc
add
add
sub
add
pop
movsl
clc
lcall
shl
adc
addr16
out
pop
and
add
mov
push
out
fisubl
add
lret
clc
stos
jae
add
add
jge
push
pop
cmp
icebp
gs
add
add
cltd
pop
addr16
lcall
mov
clc
enter
push
clc
pushf
not
dec
loop
sub
pop
clc
inc
add
pushf
push
shrl
popa
add
repnz
add
inc
add
vandps
stos
iret
outsb
push
sbb
jnp
xor
dec
push
test
addr16
push
mov
pop
lods
pop
imull
cmp
pop
repnz
sub
in
inc
add
insb
icebp
sub
icebp
sbb
clc
inc
add
xchg
insl
sbb
add
aas
sub
add
out
data16
xbegin
sub
jae
add
mov
clc
or
cld
iret
rcr
cmp
popf
ficoms
add
movsb
clc
in
loope
lahf
xchg
emms
arpl
add
push
int
add
mov
dec
jmp
jnp
clc
ret
clc
stos
cmpsl
clc
in
inc
clc
loope
jne
pop
out
popa
add
mov
sbb
test
fnstsw
add
push
es
insb
in
xchg
jl
jge
rclb
or
add
add
out
and
add
clc
add
add
and
add
xlat
push
add
cmp
add
push
mov
mov
dec
jae
add
add
adc
dec
push
out
shll
add
in
inc
clc
fmull
add
add
mov
clc
es
mov
and
add
cmp
clc
in
ret
clc
mov
clc
and
add
clc
test
iret
xchg
adc
cmp
sbb
xor
add
add
aaa
insl
ja
clc
test
add
sar
clc
fwait
ja
add
and
clc
inc
add
inc
clc
loopne
cmp
mov
mov
es
mov
jbe
mov
out
jnp
addr16
int3
push
clc
or
clc
data16
cmpsb
clc
cmpsb
clc
jo
add
repnz
ret
clc
xchg
mov
inc
add
loopne
jg
mov
in
cmpsb
clc
push
pop
vmovaps
sbb
clc
dec
jecxz
mov
add
cwtl
loop
cmpsl
clc
mov
cmp
adc
add
sub
sub
clc
data16
jg
add
sar
clc
std
mov
clc
stos
sub
push
clc
movsl
clc
sahf
mulb
add
inc
add
dec
and
or
xchg
jnp
clc
mov
push
clc
pop
jae
add
add
adc
add
in
dec
push
add
add
cli
sub
pop
add
call
clc
loop
adc
add
stos
cmp
hlt
ljmp
xchg
clc
scas
cld
or
jo
add
fisubs
add
popa
add
outsl
insb
shll
add
decl
xchg
into
clc
das
iret
add
add
repz
add
jp
loop
lcall
add
xchg
jb
add
stc
sar
iret
pop
daa
clc
cmp
clc
inc
clc
cmp
xchg
fidivl
imul
add
add
or
ret
clc
int
clc
push
add
hlt
addr16
pop
movsb
clc
clc
dec
rcrb
clc
lahf
jge
add
iret
rorb
clc
rcrb
mov
clc
adc
add
int
sub
add
nop
in
pop
cli
sub
clc
jne
clc
cmp
adc
add
jmp
in
push
mov
cmp
out
sub
add
icebp
cmp
add
je
sub
cwtl
push
inc
clc
pop
clc
xchg
test
pop
pop
shll
and
add
add
push
cmp
adc
add
outsl
mov
out
pop
clc
ds
adc
add
mov
clc
iret
xor
add
add
mov
dec
xor
clc
cmp
movsl
clc
fisubl
scas
mov
push
add
xor
add
loope
fstl
out
lea
push
add
stc
movsb
clc
mov
clc
movsb
clc
cmp
clc
or
add
inc
clc
es
in
and
add
pop
clc
xchg
push
add
lea
inc
clc
add
add
inc
add
xbegin
clc
sub
xchg
cmpsl
clc
mov
adc
add
jmp
add
add
add
mov
xchg
scas
aam
int3
in
jmp
clc
mov
clc
push
add
ja
clc
out
maxps
sub
mov
pop
lods
mov
clc
in
xor
mov
jnp
or
adc
add
add
cmc
push
sar
mov
clc
imul
clc
lods
add
inc
add
mov
cmc
inc
add
xor
add
fcmove
fwait
jne
sub
clc
pop
pop
clc
icebp
addr16
or
pop
sub
es
mov
add
jp
inc
add
cmp
ret
cwtl
jne
jle
clc
movsb
clc
mov
outsb
push
mov
clc
xor
add
ljmp
xor
add
pop
rcrl
add
sbb
cmp
fscale
inc
clc
bound
add
clc
insl
ljmp
clc
imulb
add
ret
clc
push
add
hlt
iret
lcall
out
pop
insb
out
cmp
mov
loope
movsl
clc
lret
cmp
clc
or
mov
shrb
ficompl
insl
push
xbegin
clc
pop
aam
add
dec
loope
rdmsr
add
outsl
push
or
jp
lea
add
push
clc
fsubrl
sbb
pop
xor
add
add
push
pop
clc
add
add
add
bound
add
clc
addr16
lods
imul
add
fstps
clc
add
add
add
add
jno
add
adc
add
mov
fnsave
clc
or
mov
add
clc
inc
add
push
faddp
clc
xor
add
pop
dec
sar
clc
sbb
adc
add
add
xabort
pop
push
clc
inc
clc
push
clc
call
add
stos
sar
bound
add
jae
add
add
popa
add
iret
fwait
daa
clc
lock
and
add
clc
cmp
jmp
jns
pop
aaa
dec
mov
or
stos
push
add
imul
clc
xor
add
clc
insb
push
add
sub
ds
clc
hlt
arpl
add
sti
fdivrl
mov
mov
loop
inc
add
loopne
sub
jb
add
add
stos
cmp
clc
mov
scas
shll
mov
icebp
std
mul
clc
cmp
push
aad
clc
sbb
clc
sbb
clc
mov
clc
inc
add
rol
clc
scas
fwait
cmc
in
and
jns
sbb
aas
mov
sti
into
mov
add
clc
rol
clc
sbb
push
clc
aaa
scas
mov
psllq
adc
add
cli
pop
and
mov
jbe
lods
fcoml
add
add
clc
rcr
sarl
inc
clc
idivl
add
add
sbb
xchg
jmp
arpl
add
popf
outsb
sub
push
loop
xchg
stos
addr16
lahf
fcoml
add
push
clc
or
add
sbb
imull
xabort
clc
lret
xchg
cs
daa
clc
jae
add
cmp
sbb
clc
cld
mov
clc
add
add
xor
add
repz
scas
xchg
cmp
adc
add
fsubrl
xchg
jle
clc
xor
add
pop
or
sub
add
and
add
add
add
add
add
aaa
scas
jecxz
adc
add
xor
add
scas
dec
popa
add
test
clc
and
add
mov
jne
jns
add
out
jmp
add
loopne
ljmp
clc
mov
daa
clc
dec
fnstenv
add
rcll
add
fwait
into
fcmovb
clc
pushf
jle
sahf
stc
jmp
sub
mov
add
mov
clc
inc
add
lods
pop
aas
or
rorl
clc
jmp
sbb
sti
xchg
out
movsl
clc
xchg
imul
arpl
add
clc
xor
add
data16
or
add
sahf
jb
add
mulb
add
lock
add
add
mov
xor
add
add
jg
clc
add
add
test
cmp
inc
clc
fs
mov
clc
push
add
pusha
add
stc
mov
dec
nop
mov
int3
fwait
repnz
jns
lock
add
movsb
clc
xor
add
clc
sub
add
mov
push
adc
add
add
clc
jp
xchg
es
pop
add
add
clc
xor
add
test
cmp
and
add
add
clc
ja
add
push
add
rol
clc
out
inc
clc
add
add
add
pop
stos
xor
add
sub
fsubl
add
and
cmp
add
out
fucomi
cld
push
add
adc
adc
fwait
stos
int
or
enter
jns
pop
jp
addr16
xor
add
lret
sub
add
xor
add
add
out
out
lods
repnz
dec
or
and
add
cmpsb
clc
imul
lret
sub
movsl
clc
mov
clc
xchg
ffree
clc
in
cmp
mov
cmp
clc
push
add
jle
popf
push
add
lea
clc
and
clc
inc
add
aam
push
add
cld
adc
add
arpl
add
xchg
cmp
clc
je
enter
ds
mov
lock
add
clc
jle
insb
mov
sub
jmp
add
clc
lods
sbb
out
aas
xor
add
add
add
add
imul
xor
push
cmpsl
clc
push
add
bound
add
push
mov
pop
pusha
add
popf
and
add
dec
lock
add
xchg
pop
clc
jl
clc
jb
add
clc
xor
add
push
mov
dec
inc
clc
ret
clc
loop
mov
clc
cmpsb
clc
jle
clc
xabort
pop
stos
cmp
clc
jge
add
std
clc
pop
clc
inc
add
adc
mov
xbegin
add
add
add
mov
cmp
sbb
daa
clc
cmp
pushf
pop
js
add
xchg
xbegin
mov
or
push
out
push
add
sub
cs
in
pop
mov
clc
sub
add
aas
sbb
xchg
rcrl
js
jmp
bound
add
imulb
lret
out
push
add
rcll
outsl
std
ja
scas
adc
add
add
insl
in
ficomps
icebp
test
cld
int
add
and
add
fs
jg
int
clc
sbb
add
add
add
clc
cltd
mov
filds
add
xor
add
add
fs
dec
adc
loope
xchg
mov
add
dec
in
push
clc
or
sar
clc
xabort
add
mov
push
das
dec
push
pop
imul
jbe
test
std
movsb
clc
push
mov
inc
add
iret
mulb
imul
add
ljmp
test
sub
add
add
test
dec
inc
clc
xchg
cli
cs
clc
push
sub
gs
sar
sbb
add
add
mov
clc
mov
clc
lock
clc
xlat
xchg
lret
outsl
and
add
clc
daa
clc
icebp
xchg
stc
adc
add
pop
pop
fdivrl
clc
sbb
jb
add
add
je
add
popa
add
repz
add
jnp
clc
xor
add
inc
clc
sar
movsb
clc
js
add
cmp
enter
clc
jmp
push
inc
clc
xor
dec
sbb
xor
sub
jmp
and
or
and
add
add
loopne
sbb
lea
clc
incb
add
add
bound
add
push
fistpl
push
clc
jo
add
jbe
cmc
out
mov
fisubl
clc
sar
dec
xor
sub
push
enter
cld
sbb
add
jge
mov
cltd
fcoml
mov
out
mov
pop
lret
out
outsb
fmull
outsl
inc
clc
or
or
or
ret
clc
cmp
pushf
sbb
or
inc
clc
mov
add
clc
in
imul
xchg
shll
add
cwtl
jne
add
inc
add
test
mov
cmpsb
clc
cwtl
sub
mov
push
sbb
add
adc
add
clc
xchg
xor
add
hlt
inc
clc
nop
inc
clc
lods
xchg
cmp
mov
clc
out
icebp
stc
jns
jecxz
scas
int3
jp
clc
div
cmp
fwait
pop
cmpsl
clc
push
push
arpl
add
dec
int
call
clc
mov
add
fimull
inc
clc
ret
sub
clc
and
add
clc
xchg
mov
mov
adc
or
clc
add
pop
clc
push
add
sar
clc
aas
sub
jecxz
adc
add
test
xchg
cmp
gs
repnz
add
xbegin
pushf
dec
test
add
push
clc
dec
out
sub
and
add
add
add
sbb
add
and
add
add
push
cs
add
mov
jns
imul
add
add
clc
stos
addr16
fisttps
and
add
jbe
insb
or
or
xchg
lock
add
stos
in
push
mov
cmp
add
mov
clc
lahf
dec
dec
and
add
inc
add
or
jp
and
jp
insb
xchg
ret
dec
inc
add
fldcw
push
add
cmp
clc
and
add
clc
push
rcll
fstpl
add
add
ljmp
lock
clc
int3
or
xabort
mov
add
xchg
inc
add
and
add
sbb
aaa
jmp
sbb
fs
or
cmp
add
clc
or
clc
aad
xchg
pop
sbb
add
push
mov
je
clc
movzbl
add
xchg
outsl
push
scas
cmc
push
mov
sar
cmp
out
movsl
clc
fstpl
jnp
add
mov
cmp
inc
clc
and
add
test
inc
clc
js
ljmp
cmp
dec
push
insl
or
mov
mov
add
cmp
mov
popa
add
jp
clc
sub
add
stos
cmpsb
clc
push
out
das
jl
and
add
add
add
mov
imul
ds
stos
inc
add
repz
clc
inc
clc
mov
xchg
add
add
adc
add
test
mov
mov
fistl
add
push
add
imul
push
lret
clc
pop
not
xor
add
adc
add
dec
scas
es
test
xor
pop
inc
add
or
cmp
cmpsb
clc
cmp
pop
insb
lret
pop
sub
add
and
fldcw
daa
clc
xor
add
add
add
imul
push
add
mov
add
sbb
add
jnp
sar
add
inc
clc
jp
cltd
mov
stos
lods
or
add
jne
xchg
push
and
add
add
clc
in
int3
mov
adc
xchg
repnz
add
stos
and
cmp
add
dec
sub
cli
scas
pop
je
add
loopne
daa
clc
cmp
adc
sti
shl
clc
nop
pop
xchg
sub
and
add
add
add
add
ja
clc
xchg
clc
jne
clc
lret
in
xlat
in
xor
add
shlb
adc
add
clc
imul
ret
clc
mov
adc
add
popf
jo
add
add
in
data16
sub
sbb
xchg
cmpsb
clc
sarl
xor
and
xor
add
jmp
pop
clc
xchg
adc
add
clc
inc
clc
sbb
in
mov
fs
or
push
js
xlat
dec
sbb
add
sbb
add
mov
or
clc
or
add
add
dec
mov
dec
jle
mov
lret
fistpl
rclb
add
sbb
ret
cmp
loop
cmp
inc
add
pop
adc
add
test
mov
scas
jo
add
push
js
clc
out
loope
sbb
lret
sbb
mov
xor
test
mov
imul
add
sar
adc
out
cmp
sbb
clc
leave
lret
int
and
add
cltd
pop
mov
jle
mov
jb
add
add
outsl
hlt
push
fisubs
add
rclb
add
push
add
jno
add
push
xbegin
mov
add
pop
fstps
adc
add
cmpsb
clc
lods
es
movsl
clc
jbe
add
mov
lock
jbe
out
cmpsb
clc
pop
bound
add
add
mov
sub
xor
add
in
jl
clc
wbinvd
cmp
lods
cmp
clc
insb
addr16
imulb
clc
addr16
pop
jns
add
sub
pop
jb
add
loop
xchg
add
pushf
loopne
add
add
mov
lret
fnstsw
clc
xor
add
nop
cmp
nop
cmp
clc
in
psllq
clc
and
int
clc
inc
clc
push
call
pop
push
mov
mov
cmpsb
clc
addr16
lret
push
clc
stos
loope
cmp
cld
push
push
add
add
clc
jnp
mov
mov
add
jmp
or
xchg
aaa
inc
add
mov
clc
add
add
clc
cmp
push
stc
out
in
out
jno
add
sti
insl
jo
add
inc
clc
aaa
push
clc
cmpsl
clc
cmp
cmp
mov
sbb
add
xlat
dec
jnp
dec
jle
fwait
sub
data16
dec
xor
add
sbb
or
adc
clc
xchg
inc
clc
xchg
mov
pop
lcall
add
xlat
mov
pushf
pop
stos
mov
xbegin
aaa
xor
add
add
add
dec
ss
add
mov
clc
dec
mov
clc
add
add
clc
mov
clc
dec
jo
add
add
add
clc
clc
add
pop
filds
add
fdivs
add
add
xchg
jbe
aas
cmc
sti
mov
add
pop
mov
cld
dec
add
aad
xchg
sub
add
add
insl
lcall
rcll
add
out
mov
popa
add
fcomps
add
ljmp
clc
test
sub
sbb
sahf
or
fwait
insb
das
add
add
mov
je
clc
lret
mov
sahf
ds
clc
cli
aaa
add
add
fwait
stos
xchg
test
mov
add
adc
push
clc
aas
popl
inc
clc
out
cmp
out
jmp
add
js
lahf
mov
dec
repz
add
add
mov
ficoms
add
out
adc
add
data16
sub
add
jb
add
loope
xchg
cwtl
mov
cmp
adc
add
mov
add
aad
add
addr16
sub
add
mov
clc
call
dec
xabort
clc
inc
add
popf
cmp
clc
xchg
push
add
push
clc
cmp
add
mov
push
add
dec
iret
sub
ficomps
add
xchg
jge
mov
insb
test
add
push
clc
sub
push
cmp
js
clc
or
test
shrb
mov
and
add
add
iret
cs
add
lahf
aaa
xchg
and
add
jp
scas
fildll
fs
mov
clc
and
add
sti
mov
add
add
cmc
imul
dec
push
lret
pop
dec
inc
clc
in
cwtl
stos
fisubs
jno
add
add
insb
rorl
xchg
arpl
add
aam
insb
dec
cmp
jle
dec
cmp
xchg
mov
xchg
pop
pop
jl
sbb
clc
lret
adc
add
xor
or
pop
pop
add
lods
add
add
pop
call
clc
push
add
scas
rcrl
xchg
fimuls
jmp
cwtl
xor
add
clc
hlt
out
in
nop
cmp
imulb
shrl
xor
add
mov
clc
lea
sbb
sbb
icebp
sub
add
add
int3
stc
mov
xor
add
popf
jne
testb
testl
add
add
clc
rorl
ror
test
or
addr16
mov
mov
mov
clc
xor
cld
adc
add
add
push
loope
in
jno
add
mov
pusha
add
dec
int
notl
add
clc
pop
clc
mov
pop
ds
clc
push
add
icebp
push
sar
add
mov
adc
add
lahf
lock
cltd
outsl
lret
dec
leave
call
ficompl
jo
add
xbegin
addr16
and
clc
lret
push
cmp
add
sbb
int3
out
fdivl
dec
jb
add
xor
add
mov
xor
add
add
add
push
add
ss
add
jae
add
clc
scas
sbb
cli
add
add
add
clc
das
push
dec
movsl
clc
jno
add
enter
add
cmp
push
cmp
clc
fsubrs
sub
push
clc
scas
cmp
add
iret
repz
movsl
clc
gs
fucomp
mov
and
add
incl
push
clc
xor
out
jne
clc
mov
xchg
mov
clc
loopne
arpl
add
test
add
inc
add
movsl
clc
dec
gs
rcrl
cmp
add
add
outsl
divb
add
mov
sub
movsl
clc
lcall
adc
add
jp
sbb
mov
mov
mov
clc
add
jmp
add
gs
clc
add
lahf
iret
jns
add
sbb
mov
push
jecxz
jmp
clc
sbb
clc
dec
ds
add
jp
clc
jmp
jl
clc
mov
xlat
lods
push
popa
add
jmp
into
scas
push
lret
add
cmp
or
cld
inc
clc
mov
clc
and
add
clc
loopne
or
mov
xchg
jp
clc
out
jp
add
mov
clc
mov
clc
clc
fldl
repnz
aad
clc
sub
lcall
into
clc
or
outsb
es
fs
sbb
add
sbb
loopne
or
push
clc
push
add
cwtl
sbb
repnz
scas
and
add
mov
clc
test
repz
into
iret
in
cltd
ljmp
cmp
cmpsl
clc
pop
fisttpl
mov
add
add
add
loop
jo
add
mov
pop
mov
add
sar
jo
add
mov
sti
repz
add
dec
inc
add
mov
xlat
dec
int3
cmp
movsb
clc
jge
add
add
xchg
cltd
mov
clc
jl
clc
aad
pop
dec
dec
mov
rolb
add
or
clc
std
lahf
stc
dec
and
add
mov
add
inc
add
sarl
mov
pop
aaa
mov
fidivrl
add
add
dec
mov
add
pop
sub
clc
jnp
add
dec
aam
clc
int3
cmp
imul
pusha
add
loop
pop
arpl
add
sub
clc
cmc
xlat
xor
add
clc
cmp
push
ljmp
test
pushl
clc
aad
rcrl
add
clc
stos
clc
mov
add
add
add
or
add
cmp
add
lods
js
clc
add
xor
add
add
add
clc
mov
sbb
mov
and
add
jbe
jg
add
xor
add
clc
jne
add
int3
jl
clc
xchg
fidivrl
ja
jecxz
or
out
sub
clc
push
pop
cmp
jp
popf
enter
sbb
clc
pop
sbb
aas
inc
clc
jecxz
mov
pop
xchg
mov
add
xor
fisttps
insl
pop
pop
jbe
xchg
sub
add
add
sub
jmp
add
sti
inc
add
and
add
push
fstpt
push
jnp
mov
sar
shlb
xchg
xchg
xchg
ja
xchg
mov
popa
add
daa
clc
and
add
and
jecxz
in
pop
pop
rcrb
in
fsubr
data16
fistl
add
lea
add
mov
into
out
or
clc
outsb
dec
jmp
call
add
or
dec
loop
sbb
ret
push
mov
add
inc
add
push
add
push
sbb
add
in
and
add
movsb
clc
fxch
cmpsl
clc
and
add
add
adc
add
add
inc
add
sti
icebp
adc
add
add
clc
lods
cmp
clc
mov
clc
jne
adc
add
inc
clc
adc
add
add
sub
add
add
add
add
jmp
sbb
fld
clc
loopne
inc
add
inc
clc
jmp
add
in
mov
add
mov
clc
cmpsb
clc
push
dec
inc
add
pop
fdivrs
clc
push
jae
add
add
pop
cmpsb
clc
popa
add
popf
in
cmp
xor
add
clc
roll
or
push
and
add
add
adc
add
inc
clc
pop
fbld
add
clc
add
add
dec
mov
jp
hlt
xchg
bound
add
movsb
clc
enter
add
adc
add
gs
mov
clc
imul
cld
int
add
repnz
or
add
test
clc
popa
add
adc
inc
clc
pop
pop
clc
push
mov
clc
into
mov
xbegin
pop
lahf
out
add
add
dec
mov
jnp
sbb
add
inc
clc
lods
clc
sub
xchg
xchg
jle
rcr
out
mov
clc
cmp
add
addr16
ja
add
int
add
clc
mov
clc
xor
add
cmp
adc
mov
in
icebp
ljmp
sar
pop
jge
out
push
fbstp
jecxz
rcrl
and
add
clc
icebp
mov
push
fisubl
add
add
add
test
rorl
clc
push
clc
jns,pn
jns
decb
out
scas
arpl
add
cld
jo
add
clc
or
add
sbb
xchg
cmc
add
add
add
push
inc
add
pusha
add
add
add
push
clc
xor
add
cmp
clc
fldt
icebp
adc
add
add
bound
add
mov
add
or
test
or
pop
fsubrs
mov
outsl
jno
add
jne
pop
int
sub
dec
sub
add
lods
rcl
movsb
clc
lcall
cld
mov
fcom
cmc
int
rcrl
add
popa
add
xor
add
clc
inc
clc
lret
sbb
add
sar
and
lock
aas
repnz
clc
and
add
inc
clc
and
add
lret
imul
lcall
mov
mov
cs
pusha
add
or
or
jle
add
das
in
pop
dec
fisttps
pop
and
add
clc
lods
mov
add
call
sbb
push
loop
push
add
add
add
inc
clc
push
sar
test
mov
jne
enter
add
push
xor
add
mov
push
add
mov
pop
xchg
aam
je
add
push
add
sahf
jl
mov
fnstenv
add
lods
mov
mov
clc
sti
xchg
ficompl
jne
sar
add
pop
outsl
dec
ds
cmp
xchg
inc
clc
mov
clc
mov
mov
clc
xbegin
add
mov
fsubrl
inc
clc
ret
clc
loop
mov
mov
add
xchg
inc
clc
inc
add
add
xchg
add
sbb
clc
push
clc
xchg
clc
cmpsl
clc
movsl
clc
push
pushf
je
into
pop
into
dec
pop
jno
add
pop
adc
and
add
sbb
cli
fwait
xchg
and
add
clc
or
jp
push
add
lods
inc
add
lea
add
shlb
push
bound
add
pop
jne
add
and
add
daa
clc
inc
add
jmp
push
repz
clc
lahf
fmuls
fs
mov
add
lret
and
clc
xbegin
mov
clc
ss
cmpsb
clc
sub
clc
mov
add
inc
clc
xchg
sbb
clc
jg
add
sub
clc
xor
add
add
add
aaa
jmp
push
add
clc
scas
cs
add
xor
add
add
push
add
cmp
out
jno
add
cmp
je
clc
jbe
fdivs
mov
pop
clc
mov
dec
adc
push
mov
in
sub
inc
clc
into
mov
jne
add
sti
pop
sub
inc
add
fsubrs
add
shll
add
clc
repnz
mov
fldt
cmovle
aas
jo
add
clc
lods
lcall
sub
push
add
fistpll
sahf
or
xor
add
aam
clc
sar
clc
pop
aas
popf
adc
add
add
clc
add
add
add
nop
xbegin
clc
fidivl
fstpt
add
fldenv
add
inc
clc
cmp
clc
jp
sbb
jo
add
cmp
add
gs
or
scas
cld
cmp
mov
icebp
jmp
add
add
clc
repz
push
and
and
add
adc
add
loop
aam
clc
lock
pandn
cmp
or
and
add
add
sub
add
cmp
mov
add
int3
rorl
pusha
add
out
cmp
insl
add
add
lcall
clc
mov
in
cmp
cmp
pop
jno
add
mov
clc
shr
mov
cmp
push
sbb
add
mov
mov
cltd
lock
add
add
mov
adc
add
xchg
mov
and
add
or
inc
clc
in
call
cmp
inc
clc
pusha
add
push
add
mov
xlat
fldt
pop
jne
insb
cmp
dec
mov
in
adc
xchg
xor
and
scas
mov
sahf
add
add
clc
mov
cmp
or
adc
xchg
jb
add
mov
add
dec
icebp
adc
add
dec
and
add
aad
inc
clc
cmp
clc
mov
add
sbb
in
inc
clc
xor
add
add
shll
ret
clc
mov
aaa
loopne
lcall
mov
pop
bound
add
add
cmc
adc
clc
dec
adc
add
aam
clc
repz
aam
dec
jecxz
mov
clc
pop
fsubrs
pop
aam
cmp
cltd
cmp
insl
cmp
xor
js
adc
add
push
add
repnz
repz
clc
and
add
jbe
nop
mov
inc
clc
ljmp
clc
out
xbegin
xor
add
adc
add
xchg
cmp
icebp
stc
daa
clc
mov
cltd
inc
add
sbb
clc
test
inc
clc
push
mov
ljmp
xchg
pop
out
ficompl
jecxz
out
in
fidivs
xor
add
pop
sub
clc
hlt
or
add
in
mov
cld
mov
mov
mov
add
add
ss
cmp
clc
fcoml
add
test
inc
add
adc
add
add
mov
mov
xlat
js
cmp
clc
repnz
add
addr16
mov
cmp
and
add
sbb
pop
clc
xlat
inc
clc
cmp
js
clc
and
xchg
mov
mov
inc
clc
cmp
add
add
mov
outsl
xchg
ljmp
stos
cmc
ja
add
rcrl
xabort
mov
clc
ljmp
fiadds
dec
xor
loope
xbegin
push
icebp
ret
clc
shr
cmc
sub
mov
push
clc
and
add
sub
aaa
imul
jo
add
data16
jno
add
add
add
mov
clc
pop
xbegin
xchg
f2xm1
rcrl
push
xbegin
lret
sarb
lods
sbb
add
clc
jb
add
dec
cmpsb
clc
xor
sub
xchg
jno
add
clc
mov
clc
lods
and
clc
xchg
mov
mov
test
xabort
mov
pop
pop
sub
push
adc
add
add
push
add
int3
sbb
mov
and
pop
scas
mov
stos
or
xor
add
clc
mov
clc
aam
add
xor
add
movsl
clc
and
movsl
clc
sar
pop
shl
clc
adc
add
jo
add
mov
add
add
jg
clc
fwait
sub
add
rcr
mov
dec
pop
fcomp
cmp
pop
mov
or
xlat
test
mov
add
inc
clc
dec
sbb
adc
add
inc
add
daa
clc
test
hlt
dec
negl
dec
or
sar
sub
jbe
ret
xor
add
clc
jnp
add
and
add
xchg
sub
inc
clc
mov
mov
add
aaa
cli
divb
add
pushf
jmp
add
dec
loop
pop
sub
ficoms
clc
xor
add
test
dec
cmp
sub
and
add
lret
fisubrl
add
cmpsb
clc
fmull
adc
add
clc
mov
add
add
add
clc
jmp
push
addr16
add
add
cmp
imul
sbb
clc
inc
clc
test
lods
ja
push
xchg
pop
clc
cmc
ds
sbb
cmp
in
fidivrs
sbb
add
adc
adc
jno
add
add
bound
add
xchg
icebp
lcall
clc
pop
clc
mul
clc
clc
es
jl
push
add
jmp
push
repnz
cmp
insb
int3
sahf
mov
fs
inc
clc
jae
add
jl
clc
xchg
mov
dec
mov
loopne
xchg
lods
mov
mov
clc
or
sub
add
add
add
loop
repnz
push
addr16
inc
add
repnz
mov
push
add
int3
ret
clc
cmp
loopne
das
cmp
aad
clc
nop
cs
add
cmp
add
sar
pop
mov
add
ret
xchg
movsb
clc
pop
sbb
sti
mov
clc
pop
mov
xchg
lahf
stos
aad
add
sar
clc
mov
add
add
movsl
clc
sub
jmp
imul
add
lcall
daa
clc
xor
xchg
scas
push
clc
nop
xor
add
scas
mov
add
mov
add
xchg
aas
test
add
xabort
pop
mov
inc
clc
aad
jmp
clc
divl
enter
ss
add
sbb
xor
add
pop
pushl
sti
xchg
fsub
clc
mov
add
mov
clc
sub
dec
jle
lock
push
add
fldl
clc
inc
add
jbe
testl
fcompl
leave
sub
xchg
idivl
push
clc
cmp
add
lret
in
icebp
or
pop
call
add
loopne
pusha
add
jb
add
xchg
pop
sbb
js
clc
pop
push
push
jnp
clc
pushf
pop
push
mov
add
add
mov
clc
stos
adc
push
lret
xchg
movsl
clc
outsb
lcall
clc
test
mov
xor
add
dec
xor
add
sar
cltd
mov
xchg
jmp
clc
inc
add
movsb
clc
pop
add
mov
mov
clc
gs
pusha
add
cmpsb
clc
mov
add
popf
in
outsb
xor
add
add
pushf
xchg
insl
sub
ja
aad
mov
lret
add
add
or
bound
add
clc
ret
or
mov
leave
fisubl
addr16
xchg
sub
sbb
dec
push
add
xor
add
add
fcmovne
adc
cmp
clc
gs
jmp
xchg
cmp
mov
jae
add
clc
bound
add
add
aam
clc
and
add
lods
cli
out
mov
clc
sub
clc
call
mov
cld
fisubl
add
clc
sar
xor
add
add
add
add
lret
add
add
pop
pop
popf
aad
jp
repnz
add
add
xchg
pop
fdivs
clc
aaa
push
push
add
pushf
lret
out
in
mov
add
cmp
cmpsb
clc
adc
add
or
add
xor
adc
clc
fimuls
add
add
adc
add
clc
push
gs
scas
push
dec
call
add
clc
add
sbb
push
clc
push
test
pop
clc
sbb
out
lret
mov
pushl
jno
add
adc
add
mov
mov
clc
mov
clc
and
test
data16
inc
clc
inc
add
inc
clc
xchg
repnz
loop
dec
add
data16
jb
add
push
clc
mov
arpl
add
outsb
jg
ds
jno
add
out
test
dec
mov
outsb
jge
clc
inc
clc
mov
clc
adc
add
adc
add
clc
call
enter
and
add
add
clc
mov
and
add
jno
add
and
add
adc
mov
in
or
jl
jle
test
clc
push
fimuls
pop
test
sbb
sbb
clc
xchg
out
dec
insb
and
add
push
stc
jne
test
bound
add
clc
sti
xor
add
jge
jno
add
add
mov
cmp
das
adc
add
jge
add
and
add
movsb
clc
cwtl
xchg
dec
push
clc
inc
clc
clc
aaa
adc
inc
clc
and
add
add
pushf
jge
fwait
iret
mov
add
mov
jno
add
insb
sub
ja
ljmp
mov
add
cmp
mov
outsl
inc
add
dec
sbb
clc
inc
clc
and
add
aaa
loope
sub
out
insb
jo
add
iret
mov
lahf
pop
test
ret
clc
pop
mov
rolb
add
mov
cmp
iret
daa
clc
arpl
add
sbb
add
cmpsb
clc
repz
bound
add
popa
add
fidivs
add
jnp
clc
jno
add
add
call
mov
push
je
call
enter
mov
fimuls
xor
add
mov
out
ss
cmp
mov
clc
mov
cmp
clc
gs
popa
add
xor
add
sub
out
outsl
push
mov
cmp
lcall
clc
pop
push
add
and
fdivrs
mov
dec
add
add
jb
add
nop
fprem
mov
cmpsl
clc
rcr
mov
enter
push
jmp
add
jge
clc
dec
sub
pop
clc
dec
dec
cld
pop
sub
clc
xchg
push
add
mov
clc
jno
add
in
add
mov
lahf
mov
add
rclb
add
sti
inc
clc
dec
sar
testl
clc
xchg
pop
mov
pusha
add
insl
push
fdivrs
dec
movsl
clc
data16
movsl
clc
inc
clc
push
rcll
add
dec
aam
pop
clc
xchg
push
clc
jp
push
movsb
clc
inc
add
shrb
stc
or
add
popa
add
mov
bound
add
clc
je
add
fists
push
js
clc
push
add
adc
add
test
clc
cwtl
and
clc
mov
sub
outsl
imul
add
pop
jae
add
cld
mov
add
add
add
movsl
clc
xor
pop
xchg
outsb
sar
add
clc
sar
fnstenv
add
or
pop
xchg
and
jne
outsb
out
fisttpl
sbb
push
inc
add
stc
gs
loope
xor
add
add
mov
add
jmp
addr16
addr16
aam
cli
icebp
jo
add
add
in
sbb
add
mov
cmc
int
adc
mov
stos
lods
icebp
cwtl
scas
aam
clc
xchg
push
mov
clc
aas
push
clc
inc
clc
ljmp
stos
inc
add
into
mov
jbe
clc
stos
lahf
jecxz,pn
cld
adc
add
xabort
clc
jmp
dec
sarl
fnsave
dec
hlt
xor
aaa
gs
inc
add
jne
add
fstps
push
add
pop
xchg
jbe
add
jnp
clc
and
add
jne
jecxz
movsb
clc
push
add
sbb
jne
add
outsb
sbb
scas
data16
jno
add
and
add
add
dec
adc
add
or
cmp
clc
add
add
clc
stos
int3
pop
push
mov
jl
clc
pop
leave
pusha
add
mov
push
insb
out
cmp
das
lea
clc
loope
arpl
add
add
jle
jno
add
cmp
lcall
add
clc
aad
clc
loopne
sub
add
outsb
pop
xchg
or
add
lcall
mov
add
in
jno
add
clc
xor
add
pushf
fs
push
mov
jnp
fdivrp
add
add
clc
adc
add
adc
lea
dec
inc
add
sub
add
adc
add
mov
daa
clc
jle
jbe
clc
mov
pop
and
fstpl
mov
outsb
dec
inc
clc
popf
sar
adc
add
inc
clc
jge
out
sbb
dec
dec
mov
sar
xchg
xor
add
icebp
dec
push
add
adc
add
push
add
sub
sbb
popf
insb
std
cs
jb
add
out
cmp
add
add
stos
jl
add
push
jmp
clc
xabort
sar
clc
shl
clc
jno
add
add
scas
fwait
stc
mov
xabort
neg
jb
add
shll
add
xchg
pop
ficomps
scas
clc
or
dec
pop
clc
jp
pusha
add
cmpsb
clc
repz
jmp
add
bound
add
adc
add
and
add
mov
clc
xchg
aam
jae
add
xor
clc
stos
jge
loopne
shrb
into
jecxz
fistl
add
lock
rorl
das
sti
push
add
mov
movsb
clc
inc
clc
pop
push
clc
push
or
add
cltd
cli
adc
clc
and
add
sti
mov
mov
add
sub
add
test
das
mov
add
cmp
in
negl
repz
clc
enter
xchg
dec
aas
add
add
insl
das
js
clc
fidivrl
clc
sar
jbe
xabort
je
add
jg
pop
cmpsl
clc
sbb
in
enter
popa
add
negl
clc
mov
dec
data16
mov
add
scas
mov
add
loop
imul
rcr
mov
clc
aam
stos
mov
add
insb
inc
clc
repz
cmp
xchg
pop
into
lock
clc
cmpsl
clc
stos
or
dec
int
inc
add
mov
inc
add
ret
add
outsb
cmp
sar
and
addr16
jle
pop
cmp
outsb
ret
clc
or
add
lret
popf
sub
pop
out
xchg
lods
sar
ret
clc
sbb
pop
and
jmp
mov
sub
mov
push
add
stos
pushf
mov
jp
sbb
sar
add
cmp
jmp
cs
pop
sar
mov
clc
sarl
add
sarb
loopne
adc
add
iret
push
hlt
cmpsl
clc
scas
xchg
inc
add
data16
fsubs
add
out
in
jg
clc
or
add
mov
clc
or
imul
clc
cmp
add
ja
add
add
pop
inc
clc
lcall
mov
xchg
cmp
add
cmp
sti
xchg
shlb
mov
xchg
movsl
clc
and
add
mov
clc
mulb
rorl
fld
clc
inc
add
push
outsb
mov
fcompl
clc
mov
add
mov
fisubrl
mov
clc
push
inc
add
sahf
ljmp
loope
pop
mov
clc
xchg
fldenv
add
add
dec
mov
int3
inc
clc
lahf
nop
out
mov
nop
arpl
add
or
add
pop
movsb
clc
jb
add
clc
push
xor
add
pop
fistps
inc
add
lahf
sar
add
cmp
clc
push
add
in
cmp
clc
push
add
loop
enter
ja
clc
out
add
add
adc
add
clc
ljmp
clc
repnz
add
add
xor
add
add
pop
call
sub
dec
ret
clc
sar
pop
clc
cmp
add
pop
or
stos
hlt
data16
notb
cmp
add
cmp
add
imul
imul
jno
add
pop
cmp
sub
add
mov
add
clc
cs
jno
add
xor
add
clc
add
add
add
add
add
xor
add
add
pop
clc
jns
add
xor
add
add
loop
xchg
xchg
js
add
mov
add
fadds
clc
in
push
into
prefetchw
fnstcw
data16
out
pop
mov
push
add
push
loopne
mov
clc
je
cld
push
mov
push
sbb
add
in
fbld
mov
pop
push
cmp
lods
roll
add
mov
clc
dec
or
add
clc
jb
add
sbb
clc
clc
cmp
mov
inc
add
mov
clc
sar
gs
test
xchg
sbb
push
add
jo
add
add
add
add
cmp
add
pop
and
add
loope
dec
mov
loopne
inc
add
adc
add
clc
sbb
adc
clc
adc
add
add
sbb
sar
clc
jge
sar
loopne
loop
or
mov
clc
xchg
fs
xchg
adc
add
add
fcomps
clc
push
push
add
sbb
fmuls
cld
add
stos
out
mov
sub
add
mov
add
jo
add
clc
mov
add
negl
xchg
in
sbb
add
pop
mov
add
cmp
fldl
clc
stos
push
and
add
shll
add
aaa
inc
add
addr16
mov
inc
add
fld
clc
jp
test
pop
fcmovnbe
mov
add
add
add
movsb
clc
cmp
clc
cmpsl
clc
mov
lahf
outsb
cmpsl
clc
jmp
jbe
dec
cmp
outsb
aaa
iret
cwtl
push
clc
sahf
arpl
add
cmp
clc
lock
dec
mov
leave
dec
rcll
add
clc
mul
clc
frstor
cmp
ret
clc
je
adc
add
sti
hlt
loope
std
lea
test
repz
add
frstor
add
jns
add
mov
clc
and
add
lret
cld
xchg
inc
clc
test
cmp
add
jmp
add
xbegin
int3
inc
add
push
xor
add
pop
clc
push
aas
cmp
jp
or
clc
fimuls
push
cmp
jmp
add
add
add
aaa
scas
lock
add
into
cmp
clc
out
jb,pn
add
mov
clc
adc
add
add
add
clc
jb
add
clc
fsubl
clc
push
mov
add
mov
aaa
je
test
pop
aas
push
add
dec
iret
mov
out
pop
cmc
sti
push
clc
arpl
add
test
clc
das
icebp
std
mov
clc
adc
add
clc
repz
adc
nop
lods
cwtl
pusha
add
repnz
and
add
icebp
jmp
scas
mov
icebp
jmp
and
add
add
clc
arpl
add
in
dec
and
add
add
call
add
insl
mov
and
add
dec
lcall
add
or
push
aam
mov
jmp
clc
outsb
push
add
ja
ss
sbb
clc
push
push
pop
clc
cmp
add
push
addr16
adc
dec
ss
xor
add
pop
ss
jge
clc
scas
sar
jle
in
mov
aaa
inc
add
mov
mov
inc
clc
ds
adc
add
jne
lock
add
xchg
push
push
or
add
fwait
shl
clc
inc
add
out
and
pop
in
mov
add
jo
add
add
clc
mov
add
add
xchg
inc
clc
icebp
fiadds
clc
dec
scas
jmp
jl
rcrl
jns
pop
jo
add
add
or
sbb
and
cmp
data16
or
cwtl
xor
add
insl
ss
jmp
ss
jg
clc
nop
scas
sub
dec
pop
mul
clc
loopne
add
cmp
lcall
clc
cmc
aad
lods
iret
clc
dec
mov
fisttpll
aas
mov
aas
inc
add
dec
xabort
sbb
jns
push
jl
in
sub
push
mov
mov
mov
lahf
sbb
fadd
clc
mov
cmp
mov
add
xor
clc
test
fmulp
jecxz
jnp
xor
add
stc
sbb
pop
lea
add
clc
scas
cmp
in
sbb
clc
mov
add
or
sar
cltd
add
add
clc
adc
add
popa
add
mov
clc
add
add
test
xchg
cmp
imul
or
pop
clc
adc
add
daa
clc
stos
call
loopne
stc
test
sub
in
fcompl
clc
arpl
add
pop
movsl
clc
lret
mov
lret
ret
clc
adc
add
xor
add
popf
sar
clc
adc
add
add
add
add
dec
ja
decb
imul
gs
into
jbe
clc
or
add
xchg
adc
add
sbb
clc
ljmp
movsl
clc
into
xchg
jb
add
adc
add
cmpsb
clc
fs
test
mov
lret
cmp
add
dec
sar
mov
cmpsl
clc
or
stc
pop
clc
sub
sbb
xchg
shll
add
sbb
clc
push
add
cltd
out
xor
add
sub
mov
clc
adc
add
clc
sbb
add
add
clc
hlt
sbb
enter
inc
add
sbb
clc
cmp
mov
mov
add
xchg
sub
fcmovb
clc
std
mov
add
fiadds
add
fs
or
add
mov
clc
pop
sub
mov
add
sub
adc
in
nop
sar
add
mov
add
sub
push
add
sbb
add
dec
add
add
pop
dec
push
clc
adc
add
clc
xchg
daa
clc
insb
mov
loope
ja
add
inc
add
test
arpl
add
adc
add
push
and
add
icebp
icebp
cld
inc
clc
scas
fs
push
dec
daa
clc
mov
add
mov
add
add
stos
sub
clc
xchg
je
loope
sub
mov
adc
cmp
clc
and
add
clc
add
add
add
gs
inc
add
xchg
insb
pop
pop
xlat
xchg
outsb
add
aas
push
stc
roll
clc
push
add
inc
add
jle
loopne
add
mov
add
popf
fcoml
test
inc
add
test
xchg
cld
movsb
clc
sar
clc
ucomiss
dec
lods
pop
cmp
mov
mov
clc
aaa
daa
clc
data16
shll
sbb
add
pop
out
push
add
push
mov
adc
add
cmp
jle
or
test
inc
add
and
aam
cmc
jmp
lcall
cmp
clc
jge
add
xchg
xbegin
jmp
and
add
in
sahf
or
decb
xor
fistps
clc
pop
clc
inc
add
sub
add
mov
jmp
xor
add
pop
out
mov
dec
dec
xchg
xor
add
push
clc
arpl
add
dec
mov
mov
fcomi
cmp
dec
lret
xchg
lods
pop
mull
add
add
add
pop
pusha
add
sbb
add
adc
outsb
add
add
jl
repnz
add
xchg
jg
lahf
stos
sub
dec
pushf
into
div
xor
add
xor
xchg
jbe
clc
shl
xbegin
test
and
add
push
inc
clc
data16
arpl
add
clc
loopne
sbb
clc
cmpsb
clc
cld
ret
clc
pop
clc
cwtl
jae
add
push
mov
add
add
clc
mov
clc
mov
xlat
test
into
cmp
mov
xabort
clc
pop
jle
mov
call
insl
out
mov
add
clc
push
mov
jns
clc
lcall
push
sahf
ds
mov
jg
add
repz
cmpsl
clc
ljmp
inc
clc
adc
add
je
fs
sub
mov
push
add
stos
arpl
add
cmp
nop
repnz
add
insl
pop
clc
sahf
mov
add
pop
clc
jns
add
add
xor
or
cmp
add
aad
add
lods
inc
add
inc
add
bound
add
inc
add
in
add
add
sahf
cmc
inc
clc
shll
xor
add
daa
clc
addr16
adc
add
add
dec
inc
clc
lahf
pop
into
stos
cmp
stc
scas
insl
out
and
add
add
iret
int3
or
arpl
add
clc
adc
add
inc
clc
stos
sub
clc
adc
add
cmp
add
fbld
inc
clc
nop
cmp
imul
enter
ret
clc
in
jle
clc
pop
inc
add
sahf
lret
addr16
mov
shll
add
add
mull
gs
mov
mov
jne
int3
cwtl
pop
and
cmp
add
jae
add
cmp
add
add
add
add
add
mov
xchg
lods
inc
clc
nop
cmp
clc
clc
dec
jb
add
nop
stos
and
add
add
add
push
add
aam
lahf
arpl
add
xlat
xor
add
add
imul
or
clc
sub
mov
add
add
clc
adc
add
adc
add
inc
add
enter
add
sahf
cmp
loopne
pop
clc
leave
push
repz
loope
xchg
jmp
clc
dec
mov
daa
clc
xchg
sbb
or
test
clc
mov
add
mov
clc
or
sar
pop
xchg
cld
cmp
add
lahf
mov
xchg
adc
mov
out
or
push
xor
dec
push
clc
inc
clc
test
pusha
add
and
divl
add
dec
xbegin
add
add
cmpsb
clc
roll
fmull
add
std
fistpl
adc
add
sahf
out
repz
add
test
mov
into
in
pop
cmp
clc
jge
iret
push
add
pop
sub
popa
add
xchg
pop
clc
aas
sub
sar
jge
add
add
add
sar
clc
mov
jmp
clc
pop
outsl
mov
add
faddl
add
jno
add
cmc
sbb
add
pop
repz
add
add
add
test
clc
cltd
adc
add
dec
sbb
add
scas
pop
xchg
arpl
add
clc
sub
xor
jo
add
clc
xor
add
cli
arpl
add
xchg
loopne
mov
add
je
and
add
add
cmpsb
clc
pop
mov
add
sar
sahf
out
inc
clc
int
add
jno
add
clc
stc
push
and
add
hlt
cmovbe
lods
pushf
in
xchg
pop
into
je
dec
push
iret
jmp
inc
add
data16
cmp
add
fnstsw
inc
clc
cmp
mov
outsl
sub
add
dec
in
aam
cmp
aam
cmp
add
add
inc
clc
jb
add
test
or
lcall
mov
adc
add
clc
jb
add
fstl
push
add
push
mov
inc
add
cld
xchg
xchg
and
add
das
enter
mov
mov
mov
clc
pop
lahf
inc
add
sar
jp
clc
sub
stos
xchg
mov
clc
dec
cmpsb
clc
lods
mov
fwait
or
clc
adc
cmp
clc
cmp
clc
stc
mov
fdivl
add
in
or
clc
sub
sbb
out
mov
clc
data16
inc
clc
jns
clc
pop
enter
clc
pushf
mov
and
add
outsb
or
push
fadds
clc
lret
add
xbegin
sub
pop
sti
push
cmpsl
clc
fmull
mov
fstpt
dec
xchg
ret
clc
out
loope
dec
jle
xchg
or
sub
add
push
mov
add
clc
test
or
sub
lret
adc
mov
lea
mov
enter
jns
clc
pushf
shll
add
test
jl
inc
add
cmp
add
mov
leave
inc
add
mov
stos
and
add
add
adc
clc
imul
add
cmp
sbb
in
clc
mov
clc
push
add
lcall
add
clc
bnd
add
sti
xchg
jae
add
jg
jb
add
add
cltd
lods
jmp
ret
clc
hlt
xchg
mov
sar
push
add
lods
movsl
clc
sub
movsl
clc
xchg
cmp
clc
lods
stos
inc
clc
mov
in
cmp
shr
clc
mov
fiaddl
add
mov
or
lock
and
add
add
sbb
in
fcmovnbe
jecxz
cli
scas
adc
cmc
jge
xchg
scas
cmp
dec
inc
clc
imul
xchg
mov
mov
xchg
lods
shrl
mov
add
sti
fdivs
add
movsb
clc
xchg
icebp
lahf
dec
out
and
add
lcall
add
ja
add
add
xchg
pop
bound
add
dec
push
clc
lods
pop
cmp
mov
add
add
clc
pop
add
lock
inc
add
in
mull
cmp
mov
add
notl
add
jae
add
add
clc
cltd
filds
fs
jp
jecxz
inc
clc
insb
shrl
add
ds
mov
mov
sub
push
pusha
add
incl
daa
clc
push
xor
add
icebp
jb
add
clc
sbb
add
dec
xchg
inc
clc
and
add
enter
icebp
xchg
cmpsl
clc
xor
clc
fwait
mov
ds
adc
mov
add
in
push
rorb
loopne
scas
out
mov
clc
mov
clc
inc
clc
push
sbb
add
clc
dec
adc
add
add
pop
clc
cwtl
mov
add
fisttpl
gs
loope
pop
or
cmpsl
clc
sub
add
imul
clc
sar
cmp
data16
adc
add
inc
clc
fists
xbegin
add
xor
add
push
fisubl
add
add
sti
mov
clc
pop
fistpl
int
fldt
in
fsubrs
and
xchg
fnstsw
clc
clc
in
sub
pop
sbb
cmp
clc
mov
clc
jge
mov
clc
pop
clc
fnsave
xchg
idivb
pop
imul
mov
add
stc
jb
add
cmp
mov
cmp
clc
xchg
cmp
add
dec
hlt
ljmp
mov
clc
cmc
pop
push
jno
add
pop
fildll
addr16
nop
bswap
stc
mov
add
cmp
push
aam
rep
cmc
pop
mov
mov
xlat
div
and
insl
jbe
clc
pop
jl
clc
test
sub
push
add
pop
xor
add
add
gs
sub
stos
and
add
and
add
sub
add
add
movlhps
mov
inc
clc
test
clc
lcall
push
into
paddsb
lcall
add
mov
clc
or
clc
mov
inc
add
fldcw
cli
mov
pcmpeqb
iret
icebp
jge
pushf
push
add
fs
movsb
clc
scas
sbb
add
pop
xchg
faddp
clc
inc
clc
cwtl
aam
dec
dec
add
xor
jo
add
xor
clc
dec
mov
add
ljmp
ss
pop
outsl
cld
clc
jns
stos
icebp
adc
add
clc
cmp
push
inc
clc
pop
jns
or
clc
repz
add
add
push
add
pop
test
mov
sbb
clc
gs
loopne
mov
add
clc
or
clc
or
mov
add
sub
clc
fists
clc
ljmp
add
sbb
add
xchg
dec
jnp
icebp
mov
or
lahf
das
aam
into
and
add
dec
fbstp
add
add
adc
clc
mov
pop
sahf
xlat
adc
add
pop
subps
clc
dec
xor
add
add
add
push
clc
inc
clc
adc
add
into
push
add
data16
iret
mov
inc
add
mov
push
cmp
xbegin
pop
mov
add
scas
sahf
jb
add
mov
enter
sbb
clc
sub
mov
clc
xchg
or
add
cmp
xlat
enter
add
test
add
clc
inc
add
jnp
add
fnstenv
add
sbb
add
push
add
enter
cmp
out
int3
popf
pop
clc
jge
add
add
cmpsb
clc
sahf
icebp
fcomp
push
adc
add
cmc
lret
iret
jb
add
add
add
push
clc
clc
jb
add
fs
sbb
pop
xabort
sub
pushf
cmpsb
clc
mov
popf
cmp
jl
test
clc
loopne
pop
mov
pop
dec
scas
push
lsl
add
add
sti
dec
sbb
add
stos
xchg
push
aaa
imul
and
add
clc
mov
lods
pop
or
in
push
sub
jae
add
imul
ds
mov
cmp
add
add
dec
dec
es
inc
clc
in
cli
loop
and
add
add
scas
sbb
add
fnstcw
fdivl
inc
clc
in
cmp
dec
in
gs
sbb
ds
sbb
loope
clc
test
repnz
add
add
clc
and
mov
mov
add
add
add
into
add
add
nop
cmpsl
clc
sub
mov
stos
movsb
clc
and
add
add
fidivrs
imul
sub
clc
arpl
add
clc
jns
fisubrl
push
divb
clc
clc
mov
sbb
cmp
clc
dec
fsubrs
mov
clc
movsb
clc
xchg
out
mov
imul
jmp
xabort
ja
add
fstl
add
aad
jb
add
clc
jp
shll
pop
out
dec
jp
idiv
outsl
or
clc
arpl
add
sub
push
add
in
jae
add
dec
setg
mov
sbb
clc
xchg
cltd
in
lcall
popf
and
add
dec
jns
jnp
jp
sbb
xor
add
cmp
stc
stos
push
add
aad
out
cltd
xchg
out
loop
test
and
stc
sub
add
add
add
popl
add
hlt
stc
sahf
xabort
push
push
clc
mov
jno
add
fwait
leave
push
add
push
adc
add
adc
add
rorl
mov
push
and
add
clc
jecxz
pop
and
xbegin
hlt
out
add
add
add
add
mov
xlat
mov
push
shrl
ds
add
movsb
clc
cld
mov
add
cli
lret
insb
jle
mov
clc
or
dec
adc
add
push
mov
jge
jmp
cmp
add
add
add
pop
icebp
data16
cmp
clc
cld
jns
lahf
or
clc
clc
idivl
pop
xchg
jg
xchg
xor
add
mov
jmp
pop
test
pop
gs
fcomp
or
ror
ret
clc
jp
add
aas
jecxz
gs
sbb
clc
add
shlb
add
clc
iret
imul
cmp
xor
add
add
mov
ret
jno
add
clc
mov
add
push
push
aad
jge
jns
clc
dec
mov
add
cltd
mov
xbegin
sbb
dec
xchg
test
fsubrs
push
push
outsl
lods
mov
mov
adc
add
add
into
mov
bound
add
ret
clc
fldenv
into
mov
cmp
or
popl
idiv
dec
in
mov
or
mov
add
mov
inc
add
and
add
mov
xchg
cmp
push
add
test
neg
pop
pop
ljmp
add
in
and
add
add
mov
add
add
lret
add
decl
insb
int
stos
inc
add
mov
xor
add
cmp
push
add
ljmp
mulb
add
cmp
jge
add
mov
outsl
test
add
loop
sub
push
bnd
jge
add
lret
mov
loopne
adc
sar
xor
add
inc
add
jbe
bound
add
clc
jne
pop
mov
add
test
dec
pop
stc
cmp
jnp
add
inc
add
cwtl
cltd
cmpsb
clc
adc
add
dec
pop
movsb
clc
or
lock
aaa
mov
push
add
push
pop
addr16
sbb
add
pop
jae
add
inc
clc
pusha
add
insl
sbb
add
sbb
add
push
add
push
clc
data16
adc
clc
inc
clc
dec
lods
lea
xor
add
cmpsb
clc
sarl
clc
test
add
sbb
mov
jge
clc
dec
sar
jecxz
rcr
mov
adc
add
clc
xor
add
movsb
clc
cmpsb
clc
cmp
add
mul
clc
in
jnp
clc
adc
add
mov
clc
mov
add
inc
add
mull
leave
xchg
sti
xchg
push
add
pop
mov
add
filds
add
clc
test
push
sub
add
sbb
add
add
imul
aas
imulb
je
add
sahf
icebp
sub
xchg
pop
iret
push
icebp
fadds
sahf
mov
pop
ds
nop
repz
clc
mov
add
xchg
ret
clc
jne
clc
pop
clc
add
add
mov
add
aad
fidivl
stc
stos
int3
push
clc
test
mov
clc
and
add
sbb
mov
shr
xbegin
mov
add
loop
ss
xchg
adc
add
inc
clc
insl
xor
add
sub
cmp
add
cli
ljmp
jae
add
add
jns
add
ret
mov
lods
cmc
push
add
stc
test
pop
clc
inc
clc
xchg
test
inc
clc
test
or
mov
sub
clc
xchg
popf
test
stos
mov
add
cld
inc
add
xchg
cltd
mov
out
xchg
pop
clc
mov
clc
clc
test
xor
clc
imul
lahf
and
add
cmp
mov
loopne
mov
xchg
sar
push
mov
adc
add
jp
lahf
insb
inc
add
test
or
jb
add
fs
sbb
inc
clc
insl
lret
add
xbegin
sbb
vzeroupper
out
dec
push
sahf
ret
clc
pop
push
call
add
js
add
sbb
clc
or
xor
add
pop
or
aaa
mov
add
shlb
clc
iret
push
daa
clc
inc
clc
xor
clc
sbb
jle
je
pop
mov
clc
testb
pop
sbb
fsubrl
jecxz
and
jo
add
sub
xchg
mov
cltd
cmc
lcall
add
add
clc
movsb
clc
ret
clc
inc
add
movsl
clc
insl
fs
mov
iret
jp
mov
pusha
add
jmp
out
lahf
jns
or
clc
or
lock
lcall
popa
add
inc
clc
ds
int
lods
bound
add
ljmp
add
jnp
outsb
into
push
add
aad
lea
inc
add
loopne
jno
add
imul
out
or
add
clc
jmp
test
add
mov
leave
jnp
inc
add
adc
add
add
ss
dec
addr16
mov
clc
sti
sar
cli
aas
clc
imul
add
rcll
clc
inc
add
rorb
add
cmp
out
data16
out
cltd
xor
add
in
sub
jno
add
add
adc
add
int
frstor
add
out
push
clc
inc
clc
out
iret
cmc
inc
clc
xchg
shlb
xor
add
and
add
jmp
fcomip
dec
cmp
and
add
outsl
or
clc
iret
push
push
add
decl
mov
add
repnz
ljmp
add
clc
fildl
clc
sarl
or
in
leave
sbb
pop
clc
xchg
fwait
cmpsl
clc
sub
ljmp
push
dec
lahf
jecxz
jmp
cld
xor
add
into
mov
shll
add
scas
xor
add
add
call
pop
insb
aaa
sub
clc
stos
int3
mov
clc
insb
mov
clc
jg
jnp
clc
xor
jl
mov
pop
inc
add
mov
add
out
out
inc
add
cwtl
loop
icebp
mov
add
aad
xor
add
xchg
xlat
jg
shll
sub
clc
dec
call
xor
add
xchg
dec
fldt
sbb
jo
add
mov
sbb
mov
fcoms
add
and
add
push
add
push
sub
adc
add
clc
jg
add
add
add
add
divb
add
shr
jp
ss
scas
test
dec
fisubs
add
nop
jns
mov
cmp
lret
test
addr16
mov
clc
jb
add
clc
cmp
clc
add
add
fs
aaa
stc
dec
popf
nop
xchg
mov
inc
add
push
add
xor
add
insl
ja
xchg
mov
scas
pop
dec
xchg
lea
clc
out
jb
add
push
movsl
clc
dec
std
xchg
imul
idivl
cmp
clc
out
stc
gs
cmp
sahf
inc
add
in
loop
and
add
adc
add
or
clc
lret
mov
inc
add
mov
xchg
repz
out
and
add
pop
out
xor
add
clc
sbb
in
jb
add
push
insb
jnp
int3
mov
add
add
lods
fdivl
std
sub
clc
mov
cmp
clc
loop
jle
imul
mov
clc
arpl
add
iret
fwait
jp
lock
fnsave
xor
add
or
lahf
repnz
or
inc
add
or
add
test
lcall
cmp
xchg
test
cmp
add
add
jae
add
sub
mov
cmp
clc
popf
addr16
sub
clc
sbb
pop
popf
mov
clc
jp
add
test
aad
mov
add
cmp
clc
jae
add
mov
mov
clc
mov
add
bsr
mov
add
loopne
lret
sbb
fistpll
jg
jo
add
push
mov
or
clc
int3
lods
lcall
clc
sub
stos
mov
clc
shlb
test
repz
cltd
xchg
xor
add
mov
add
pushf
fmull
sbb
add
mov
das
xabort
sub
add
push
clc
and
add
xchg
std
xbegin
pop
jno
add
add
sar
inc
clc
fwait
cmp
add
mov
cmp
jmp
dec
outsl
jl
clc
xchg
jecxz,pn
push
add
sub
sub
into
xchg
rolb
cwtl
fucom
clc
pop
and
das
jns
pop
jl
push
addr16
cmpsl
clc
add
add
clc
and
iret
ja
cmpsl
clc
mov
fisubl
add
jecxz
cli
dec
push
jo
add
aad
add
xor
add
clc
mul
clc
add
test
add
jbe
mov
mov
add
lea
sub
scas
cmpsb
clc
cwtl
clc
jl
push
sub
dec
add
call
or
add
add
pop
sar
clc
cli
mov
push
inc
add
stos
test
pushf
mov
clc
loop
loopne
mov
xabort
aad
add
mov
add
icebp
scas
cmp
mov
sub
ret
clc
inc
clc
iret
aaa
inc
add
jae
add
dec
sub
insl
popa
add
rolb
cs
aas
dec
shlb
add
add
cs
clc
cwtl
aam
test
addr16
fisubl
add
cmp
jp
outsb
xchg
cltd
xchg
out
lret
popf
icebp
ret
clc
lret
ret
clc
ss
add
add
clc
inc
add
or
sub
add
scas
dec
cwtl
mov
clc
cmp
lods
sbb
cmp
or
clc
add
add
xchg
cmp
add
jne
xor
cmp
add
testl
and
add
mov
scas
ja
pusha
add
pop
xor
add
pop
push
inc
add
lahf
adc
add
add
jle
and
cld
inc
add
imul
cmpsl
clc
mulb
add
in
ja
clc
int3
xchg
fisttps
fisubs
add
std
clc
stos
mov
setbe
cmp
and
add
call
ret
clc
cmp
sbb
rolb
adc
add
test
add
add
adc
add
clc
inc
add
loope
adc
add
mov
pop
int
clc
or
add
jg
sti
xor
cld
mov
xor
add
cmp
add
into
pop
xbegin
mov
xbegin
clc
push
add
je
clc
leave
mov
pop
inc
add
mov
add
ljmp
clc
fdivrp
or
clc
mov
add
in
in
rorl
add
pop
push
and
add
lret
mov
cmp
clc
add
imul
shlb
clc
imul
xchg
stos
or
clc
lea
lret
or
mov
sti
sbb
adc
add
cmp
clc
xchg
xchg
inc
add
jle
jle
clc
lods
hlt
push
and
add
mov
push
sub
add
enter
add
add
test
jb
add
clc
outsb
in
sar
cltd
inc
clc
jne
clc
mov
sbb
adc
add
add
es
adc
add
add
jge
clc
repnz
cld
push
insl
mov
jp
and
bound
add
clc
dec
test
mov
clc
xor
clc
aad
jb
add
jo
add
add
outsl
clc
pop
repz
mov
mov
cmp
jecxz
lea
xor
add
add
inc
add
xchg
call
clc
and
add
lock
inc
clc
jo
add
pushf
xchg
fisubrs
add
test
mov
add
aaa
push
adc
add
flds
inc
add
hlt
cmp
clc
in
enter
add
clc
or
add
dec
mov
out
xchg
and
add
add
cld
fidivs
push
sarl
clc
aad
add
dec
lock
insb
bound
add
add
cmpsl
clc
mov
add
mov
clc
jnp
mov
clc
jne
sub
mov
clc
test
mov
clc
clc
pop
xor
add
inc
add
lahf
dec
sbb
inc
clc
iret
cmp
clc
test
dec
xor
add
add
dec
mov
pop
clc
fwait
icebp
outsb
lods
cmp
add
popa
add
sti
nop
lea
add
leave
mov
xchg
pop
or
xor
add
sbb
cmp
mov
clc
scas
cmpsb
clc
pop
js
clc
data16
mov
bound
add
clc
mov
hlt
and
add
sbb
mov
arpl
add
sahf
je
popf
sahf
and
add
clc
xor
add
clc
lods
in
cmpsb
clc
dec
hlt
jge
mov
clc
lahf
outsl
mov
rol
clc
ror
push
add
sbb
sarb
daa
clc
add
add
rorl
cs
ljmp
xchg
in
ljmp
adc
add
xchg
mov
dec
mov
sub
cmp
add
sub
jp
and
and
add
addr16
xchg
mov
dec
clc
mov
out
cmp
add
fldl
adc
add
pop
das
fcomps
add
add
add
add
cmp
mov
mov
clc
dec
mov
add
adc
add
aaa
icebp
es
adc
add
jnp
clc
mov
clc
std
push
clc
cmp
add
xchg
lcall
push
add
jbe
pop
test
jmp
clc
outsl
stc
xor
add
mov
cld
mov
js
add
clc
popf
cmp
in
cmp
clc
loop
dec
jecxz
push
pop
enter
jg
mov
scas
or
adc
add
clc
shrb
sar
cmpsl
clc
insl
loope
ret
sbb
sbb
add
cmp
inc
add
mov
clc
test
push
clc
jle
clc
pop
insl
mov
ljmp
ret
popf
mov
cmp
clc
inc
clc
xchg
xchg
pop
add
add
mov
pop
cmpsl
clc
out
clc
xchg
sub
add
push
xor
stos
mov
add
es
jo
add
jb
add
imulb
into
into
cmp
xchg
call
add
cmp
dec
mov
and
add
shlb
clc
cmp
push
cmpsl
clc
mov
in
je
pop
jecxz
cmp
lret
add
nop
jo
add
int
clc
pop
sbb
add
pop
data16
bnd
jb
add
clc
xor
add
xor
out
mov
add
clc
ljmp
jg
add
sbb
outsl
or
mov
addr16
pusha
add
inc
add
and
add
clc
cmp
add
inc
add
mov
repnz
push
bound
add
add
popf
fwait
in
dec
jg
add
mov
dec
sub
mov
and
add
cltd
xabort
sarb
add
xchg
iret
sbb
cmp
out
mov
cld
cmp
xor
add
clc
ret
clc
jne
pop
out
jecxz
fmull
or
jmp
add
out
xchg
scas
and
add
jg
add
sub
fs
je
aaa
mov
clc
gs
push
add
jns
add
pop
clc
rorb
jp
pop
sub
clc
movsb
clc
add
add
or
mov
dec
test
dec
inc
clc
and
add
clc
sbb
push
add
pop
clc
sahf
pop
mov
sub
or
push
rcrb
jmp
mov
clc
adc
add
mov
add
or
clc
lret
bound
add
jne
add
fucomip
pop
sti
and
add
add
push
add
mov
aas
stc
movsl
clc
shll
add
lret
xchg
lock
cltd
sub
bound
add
popf
xchg
in
repz
clc
push
xchg
fdivrl
loopne
or
rep
sbb
pop
je
clc
pop
fidivrl
add
dec
cmp
clc
cmpsb
clc
cmpsl
clc
inc
clc
xchg
pop
aad
rcr
push
mov
idiv
sbb
add
jne
add
rclb
add
jg
add
ss
clc
mov
clc
loopne
add
gs
stos
loopne
bound
add
add
pop
pop
rol
clc
fwait
enter
add
cld
int3
xor
add
add
adc
clc
outsb
leave
and
add
aas
mov
jne
adc
ja
out
ds
arpl
add
push
rcll
add
mov
clc
adc
jnp
gs
mov
add
add
push
push
loop
sub
add
jmp
ljmp
jno
add
mov
idivb
push
add
aaa
jns
cmc
push
jbe
clc
push
clc
xbegin
sti
jno
add
add
mov
mov
clc
xor
cmp
inc
add
add
rclb
ret
clc
adc
xbegin
clc
leave
mov
and
add
clc
mov
mov
jnp
mov
add
or
mov
pusha
add
push
rcrl
mov
jno
add
add
jl
cmpsb
clc
daa
clc
pop
mov
add
add
sbb
dec
xchg
imul
aaa
adc
mov
imul
sbb
add
dec
scas
xor
add
add
clc
cwtl
xor
clc
xchg
out
cmp
cld
insl
add
add
jle
lods
clc
sbb
clc
sub
rolb
sub
mov
clc
mov
sub
cmp
clc
shrl
ds
add
xchg
call
push
clc
enter
out
xor
insb
mov
clc
pushf
add
add
out
jle
mov
jmp
sub
add
frstor
add
int
add
dec
loope
sub
xor
add
add
nop
pop
hlt
imul
gs
popa
add
arpl
add
add
loopne
xor
add
in
leave
scas
rolb
clc
push
sub
add
ret
clc
lods
imul
clc
adc
add
dec
jp
enter
jmp
clc
jmp
dec
and
add
add
clc
xchg
dec
sbb
sub
in
jl
clc
cmp
popf
mov
movsl
clc
push
repz
pushf
xchg
or
cmp
into
inc
clc
xabort
mov
add
arpl
add
add
add
loopne
lods
xor
add
out
xchg
aas
dec
and
add
movsl
clc
cld
jno
add
add
insl
movsb
clc
fs
or
cmp
bound
add
add
imul
add
add
sbb
cs
inc
add
push
add
mov
xchg
xchg
mov
xchg
cwtl
mov
je
clc
push
clc
aam
add
cli
scas
aas
out
sub
push
xlat
arpl
add
xchg
mov
test
stc
inc
add
xor
add
nop
xchg
inc
clc
adc
add
push
sar
push
add
xchg
fs
mov
sar
mov
and
notb
add
leave
cmp
add
adc
add
add
jno
add
sar
inc
clc
pop
xor
add
sahf
add
push
xchg
xchg
sub
cmp
enter
clc
movsl
clc
stos
ret
clc
fiaddl
add
daa
clc
inc
add
sub
pushf
je
xor
add
add
add
lret
xchg
ret
clc
add
cmp
test
dec
or
add
add
push
cmp
adc
add
add
pop
sbb
clc
inc
clc
xbegin
clc
dec
or
clc
lahf
jp
test
or
add
movsl
clc
aaa
xchg
pusha
add
xor
add
xabort
js
clc
cmc
enter
cmpsb
clc
lock
mov
mov
push
dec
fdivs
add
jbe
or
inc
add
mov
sbb
and
add
dec
lock
or
push
outsb
mov
cmp
or
clc
inc
clc
test
xor
clc
pop
mov
add
adc
add
lret
inc
add
icebp
and
add
clc
fadds
add
in
pushf
cwtl
or
clc
pop
out
cmp
add
mov
pop
icebp
js
or
sar
clc
cmp
clc
into
fistps
sbb
clc
jge
clc
mov
clc
jmp
xor
add
clc
and
add
call
aaa
push
icebp
sbb
pop
sub
add
add
clc
pop
fstpt
ja
inc
add
sub
clc
xchg
aad
in
xor
add
add
fidivrs
in
cmpsl
clc
lods
pop
xor
aad
pop
fnstenv
add
loope
jno
add
cmpsl
clc
enter
inc
add
xor
add
rcrb
add
add
jp
test
cmp
add
fs
stos
and
add
add
add
es
or
clc
in
sar
xchg
xchg
imul
add
add
movsb
clc
jb
add
jo
add
pop
rolb
clc
loopne
fwait
popa
add
int3
sub
clc
jnp
clc
sarl
clc
iret
scas
shl
jo
add
add
scas
cwtl
js
xchg
pop
movsb
clc
cmp
add
cmp
inc
clc
lahf
pop
test
push
clc
mov
repz
add
clc
sub
clc
xchg
mov
xchg
ret
clc
pop
mov
add
daa
clc
es
bound
add
mov
jl
sub
mov
es
fbstp
add
clc
addr16
mov
clc
pop
mov
or
scas
mov
add
js
cmp
add
test
clc
insl
adc
add
clc
imul
add
add
and
adc
mov
pop
test
stc
je
mov
clc
inc
add
adc
add
clc
rcrl
pop
fcmovne
mov
mov
clc
pop
xchg
jl
clc
imul
add
add
xor
add
or
add
push
add
push
das
jg
fstp
inc
clc
mov
add
outsb
mov
add
insb
cli
mov
sbb
sahf
test
sar
xchg
cmp
mov
add
mov
bound
add
add
add
daa
clc
ljmp
mov
add
ja
add
clc
sbb
mov
jne
adc
add
arpl
add
fs
sub
add
inc
clc
xor
add
loopne
xchg
push
outsb
cmp
cmp
pop
cmp
inc
add
jecxz
xor
add
clc
mov
insl
lret
fsubl
ret
mov
aaa
add
add
call
cli
stos
insb
sub
clc
mov
leave
add
add
test
clc
movsb
clc
ficompl
add
push
mov
add
setbe
jge
clc
fdivs
mov
xchg
mov
clc
mov
mov
fsubrs
jae
add
mov
jnp
cmpsl
clc
add
add
lcall
gs
or
inc
add
push
dec
lods
aam
dec
jecxz
jmp
add
xchg
insl
in
pop
pop
or
jnp
add
add
movsl
clc
mov
data16
popa
add
cmp
clc
jge
popf
outsb
idivl
add
add
pmaddwd
add
lods
test
clc
sub
inc
add
iret
mov
clc
stc
adc
scas
pop
pop
out
jnp
mov
dec
mov
mov
add
pop
xchg
sub
std
push
add
lea
imul
clc
sbb
clc
popf
int3
mov
jo
add
add
cwtl
lods
cmp
mov
je
add
sbb
clc
sbb
clc
popf
imul
std
ficoml
add
cmp
add
inc
clc
mov
jl
sbb
clc
and
dec
rorb
scas
mov
aam
clc
sub
xchg
add
add
dec
data16
jne
cmpsl
clc
pushf
sbb
sub
fisttpl
ljmp
dec
js
add
dec
sti
add
add
add
push
or
out
dec
cwtl
insb
lahf
test
outsb
test
push
int3
movsl
clc
add
add
clc
divl
add
aas
dec
popf
testl
or
and
aas
cli
jle
rcrl
xchg
push
add
je
outsl
bound
add
clc
or
add
xchg
or
stos
dec
add
add
sub
add
bound
add
clc
xbegin
add
cmp
inc
add
in
or
add
dec
xchg
test
jp
aas
adc
add
clc
mov
xlat
sub
sti
je
xchg
in
out
mov
je
mov
add
add
jp
es
arpl
add
sbb
sbb
testl
movsb
clc
inc
add
mov
sar
clc
mov
add
std
mov
fcomp
xbegin
adc
xlat
fwait
sqrtps
add
in
cmp
clc
out
addr16
adc
adc
add
add
cmp
add
sbb
clc
sar
push
jg
push
out
dec
lret
clc
jno
add
shr
sbb
mov
cmp
xchg
fcomi
clc
movsl
clc
cmp
pop
sub
add
add
sti
cmp
mov
testl
clc
mov
ret
inc
add
imul
or
sub
add
frstpm(287
clc
pop
adc
clc
mov
sar
cmp
clc
xchg
mov
mov
add
inc
clc
jp
clc
je
clc
mov
add
xchg
fisubl
add
bound
add
ja
add
ja
jg
jmp
mov
clc
mov
push
add
leave
push
in
sbb
repz
add
add
clc
add
add
add
add
clc
repz
dec
in
sub
ja
jbe
clc
in
adc
pop
xlat
shll
add
jne
clc
add
add
shlb
clc
into
repnz
clc
lock
clc
icebp
xor
add
nop
ljmp
clc
nop
loop
mov
and
add
push
fcomi
cmp
add
xlat
je
in
dec
adc
pusha
add
fisubl
aam
clc
jo
add
lahf
int
repz
add
add
test
sub
adc
add
push
xor
add
add
mov
aam
sbb
cmp
add
xchg
mov
leave
iret
stos
fnstcw
add
fs
mov
clc
add
add
lock
clc
leave
and
jmp
cmp
or
add
jne
mov
rcrb
xor
add
clc
mov
add
dec
rorb
clc
mov
cltd
cmpsl
clc
loope
loope
scas
and
add
add
and
jns
add
xchg
inc
clc
cmp
add
mov
add
clc
add
xchg
or
std
add
add
add
and
add
mov
cwtl
adc
add
push
mov
clc
movsb
clc
push
pop
clc
fimull
test
stc
stos
ret
clc
cmp
xlat
xchg
cld
nop
mov
add
test
jae
add
jg
rolb
repnz
or
clc
xor
add
or
push
add
or
mov
mov
mov
hlt
dec
cmp
sahf
or
mov
test
mov
pop
pop
jle
test
je
add
cmp
clc
int3
mov
jae
add
add
clc
cmp
aad
sbb
fcoms
dec
mov
xchg
ljmp
add
xor
add
sbb
clc
jecxz
sbb
add
jae
add
mov
clc
repz
add
jmp
clc
mov
mov
jae
add
fldenv
pop
clc
hlt
cli
pop
xor
add
clc
fisttpll
addr16
aaa
jecxz
dec
adc
add
xchg
push
cs
mov
clc
and
cmp
add
mov
adc
add
shlb
mov
clc
sub
and
add
clc
insb
inc
add
jg
clc
sub
mov
imul
add
stos
popa
add
loope
mov
dec
add
add
dec
add
clc
pop
clc
aaa
pop
sub
jmp
aaa
cmpsb
clc
add
add
nop
jmp
push
sar
xchg
adc
add
mov
clc
js
cmp
push
imul
out
adc
add
pop
mov
mov
je
fidivl
mov
add
sub
add
adc
add
addr16
outsl
and
add
jecxz
inc
add
cmpsb
clc
ffreep
clc
adc
add
mov
jecxz
pop
cmp
rol
clc
cmp
add
mov
push
cmpsb
clc
ja
push
or
cmp
sub
scas
in
clc
cmp
pop
pop
dec
sub
mov
pop
dec
cld
inc
add
dec
push
aaa
aas
scas
mov
loope
nop
std
arpl
add
sbb
clc
sar
clc
ret
in
pop
mov
add
push
clc
cmp
xor
popf
xor
add
lea
add
sti
testb
ds
loop
dec
push
jns
add
div
mov
push
pushf
and
add
add
add
push
aad
ja
sbb
add
cwtl
mov
dec
mov
add
clc
and
add
arpl
add
ljmp
push
jo
add
lods
repnz
daa
clc
add
add
sub
clc
add
add
sbb
add
dec
imul
clc
mov
add
cmp
add
out
nop
lods
pop
in
or
clc
js
clc
mov
mov
adc
rcr
sarb
sar
xabort
rcll
loopne
push
add
movhps
mov
aad
clc
mov
rolb
add
fs
addr16
push
add
clc
stc
inc
add
out
fwait
or
clc
sub
add
out
fcmovnbe
push
xchg
sub
clc
lea
aaa
or
add
shlb
add
stos
dec
lahf
out
test
sub
clc
adc
add
inc
add
inc
add
adc
add
mov
push
jbe
loop
ret
clc
mov
add
js
add
add
int
add
outsl
jecxz
dec
jb
add
imulb
xor
add
jo
add
cmc
inc
add
pusha
add
add
add
cltd
lock
add
add
add
clc
pusha
add
cmp
adc
add
or
cwtl
loop
sbb
mov
iret
pop
clc
lock
test
mov
mov
jle
add
jno
add
fsubr
movsl
clc
insl
dec
je
xor
add
add
add
fdivrs
roll
add
cld
push
xchg
jbe
add
jle
outsb
dec
jo
add
add
in
fs
hlt
cwtl
popa
add
xor
add
ds
clc
push
enter
pop
mov
jae
add
jbe
inc
clc
ss
pop
mov
xchg
insl
jno
add
clc
ja
dec
pop
das
pop
xchg
cmc
imul
sbb
clc
cmc
lahf
je
add
xchg
mov
push
test
out
xchg
ret
xchg
or
bound
add
jle
push
cmp
add
or
or
mov
xchg
push
add
inc
clc
dec
dec
jle
clc
mov
fldl
add
add
hlt
fwait
fwait
cmpsl
clc
aad
test
and
add
mov
adc
add
fwait
imul
enter
clc
sub
add
add
add
push
mov
jnp
fs
pop
xchg
pop
sbb
clc
int
xor
add
push
jno
add
clc
or
je
jns
pop
mov
mov
xchg
loop
ds
push
mov
add
mov
add
ss
cmp
fcoms
ja
clc
pop
push
add
shrl
mov
fucom
clc
cmp
arpl
add
add
out
rsqrtps
add
or
clc
push
clc
sbb
fldenv
int3
jae
add
push
add
push
mov
repz
add
gs
ud1
sar
out
nop
clc
sar
imul
add
std
fbld
clc
dec
xchg
ret
add
std
jb
add
xchg
or
add
xchg
xabort
xabort
movsb
clc
lock
pusha
add
loope
cmp
clc
dec
adc
clc
in
lret
scas
dec
sub
add
push
outsb
pushf
arpl
add
add
jno
add
imul
xchg
cmp
repnz
add
xchg
sbb
clc
scas
fwait
xchg
mov
cmp
clc
icebp
dec
movsl
clc
mov
stc
pop
rcpps
add
mov
add
add
out
and
add
add
movsb
clc
es
or
je
mov
cmp
add
sar
test
clc
xchg
push
add
cmp
aaa
stos
xchg
clc
pusha
add
inc
add
outsb
fsub
clc
icebp
cmp
jge
clc
or
cmp
dec
add
sbb
clc
jae
add
clc
ds
clc
cmp
sbb
add
xor
add
fsubr
sar
clc
inc
add
loope
out
mov
mov
cs
fmul
aaa
lret
add
mov
fidivrl
clc
pop
push
mov
clc
sub
pop
add
add
add
mov
adc
add
aaa
repnz
add
into
push
inc
add
push
add
iret
add
add
add
push
mov
mov
clc
pop
es
add
add
xchg
in
xchg
dec
movsb
clc
dec
in
inc
clc
jl
mov
add
lock
jo
add
pop
jecxz
das
push
clc
cmp
mov
clc
dec
push
adc
lret
adc
add
sub
std
pop
bound
add
add
add
xchg
jns
cmp
dec
loope
ror
lods
adc
add
clc
iret
push
loop
into
rcll
add
notb
aam
clc
arpl
add
add
je
push
or
repnz
add
mov
xchg
bound
add
add
add
es
pop
xor
add
add
add
sar
pop
adc
add
clc
push
add
dec
insb
cmp
jns
insb
fcoms
add
add
cli
pop
insb
and
xabort
jne
bound
add
mov
into
cmp
outsl
popa
add
or
push
sub
xchg
xchg
fcomps
push
pop
mov
pusha
add
clc
cmp
sub
popa
add
pop
sub
mov
clc
mov
popf
into
inc
add
in
pusha
add
pop
and
add
cli
inc
add
imul
mov
mov
pop
int3
sub
mov
add
out
dec
push
add
cld
inc
add
cld
fs
push
add
sar
clc
mov
jbe
mov
add
jg
es
clc
js
clc
jmp
inc
clc
xor
add
lea
pop
aam
dec
jmp
sar
iret
iret
mov
dec
and
add
add
add
xor
add
inc
clc
sbb
add
imulb
clc
cld
cmp
add
add
add
dec
inc
clc
inc
add
scas
xchg
popf
jmp
push
icebp
jo
add
ja
and
add
add
mov
loope
out
fldl
add
or
and
add
add
mov
or
into
xchg
xor
fsubrl
pop
xchg
test
inc
add
mov
clc
add
add
xchg
stc
add
insl
into
iret
mov
add
mov
pop
cwtl
out
cmp
into
fs
jmp
clc
repz
add
popa
add
das
pop
sub
xchg
jmp
mov
clc
or
pusha
add
es
pop
mov
mov
pusha
add
cmp
mov
fs
cmp
clc
inc
add
das
loope
div
mov
xor
add
add
cmp
fwait
ss
xor
add
clc
aad
mov
sar
adc
add
add
xor
add
jo
add
int
clc
jb
add
clc
sarb
sub
int3
adc
add
push
add
gs
into
cmp
add
mov
aaa
cmp
add
and
add
paddb
jne
clc
xchg
int
pop
clc
ret
clc
pop
push
push
add
lods
lods
dec
pop
lret
adc
add
adc
add
inc
clc
jb
add
add
mov
test
arpl
add
cmc
incb
pop
dec
test
inc
add
pushf
outsl
push
in
mov
clc
das
push
add
mov
adc
add
add
add
clc
xchg
loope
test
in
dec
popf
and
add
add
lods
cwtl
data16
dec
mov
jo
add
ljmp
add
and
add
ds
stc
mov
dec
repz
es
cwtl
cltd
mov
add
add
add
add
and
add
clc
nop
sahf
and
add
mov
sbb
add
clc
pop
mov
mov
inc
add
int3
adc
add
dec
or
pushf
cmpsb
clc
inc
clc
imul
adc
add
add
mov
add
cmp
lea
add
data16
and
add
stc
out
pop
cmp
dec
push
dec
pop
out
xor
add
add
add
clc
outsl
mov
gs
adc
xor
add
ret
fs
addr16
adc
add
pusha
add
jp
pop
into
lea
add
jmp
or
add
ss
cmp
add
loopne
iret
push
inc
clc
cmpsb
clc
fsub
clc
and
add
add
add
add
dec
insb
clc
xor
add
mov
clc
fisubs
add
add
xor
add
mov
add
pusha
add
and
add
test
in
in
cmc
mov
add
lods
sub
push
clc
xchg
dec
call
clc
push
clc
mov
jl
adc
add
xor
add
clc
ljmp
sub
add
arpl
add
clc
sar
xchg
pop
aas
test
movsl
clc
test
adc
add
lret
test
stc
push
clc
shl
clc
xor
add
clc
sbb
add
xchg
cmpsb
clc
loop
mov
divb
add
call
add
add
add
mov
add
dec
shlb
add
mov
test
cs
cmc
bound
add
sbb
add
or
add
mov
add
lret
clc
mov
test
fs
xor
add
inc
clc
xchg
cmpsb
clc
mov
jbe
xabort
push
test
jne
add
xor
add
add
add
in
mov
cmp
push
add
dec
lret
pop
inc
clc
fs
sahf
mov
mov
add
xor
add
mov
sbb
add
loop
outsb
leave
adc
add
in
jge
pop
outsl
leave
inc
clc
mov
mov
clc
jae
add
aaa
fs
xor
add
cmp
in
cmp
sti
popf
popa
add
xor
add
in
data16
divl
add
jns
xchg
adc
sbb
clc
adc
add
jne
jnp
fs
test
in
dec
gs
js
mov
clc
loop
xchg
mov
add
add
mov
cmp
or
mov
add
add
pop
or
ret
mov
cmp
add
sbb
out
push
add
icebp
or
push
push
pop
xchg
movsl
clc
data16
mov
add
push
and
add
inc
add
iret
or
pop
push
push
add
call
ret
adc
push
add
out
mov
imul
gs
sbb
sub
and
fwait
sub
clc
loop
inc
add
dec
cmp
inc
add
es
negb
es
pop
test
mov
cltd
shlb
mov
mov
loopne
dec
mov
add
or
push
push
dec
stos
daa
clc
jp
adc
add
inc
add
mov
add
add
mov
clc
sar
jge
clc
mov
pop
xchg
int
ljmp
in
hlt
lret
xbegin
add
clc
loopne
push
add
cwtl
adc
add
scas
add
xor
xabort
cmp
push
add
dec
shrl
outsb
dec
cmpsl
clc
imul
testb
mov
add
outsl
sbb
push
sub
pusha
add
sub
enter
rclb
pop
xchg
inc
clc
mov
clc
xor
add
clc
out
lcall
faddl
jno
add
add
sahf
push
clc
shl
clc
rorl
aas
ds
sbb
jne
inc
clc
int3
in
rcll
ds
and
add
in
fldt
mov
add
sbb
lret
pop
scas
cmp
pop
clc
push
repz
add
add
and
add
mov
sbb
clc
scas
scas
push
add
sbb
outsl
psllw
add
mov
add
add
in
mov
xchg
ljmp
pushf
pushf
fdivrl
cmpsb
clc
xchg
or
and
add
mov
add
add
add
clc
cli
xchg
aad
cmc
sti
clc
fildll
add
pop
movsl
clc
mov
and
add
add
cmp
add
loopne
icebp
pop
ds
bound
add
lods
jae
add
add
sti
cmp
add
mov
aad
loopne
add
add
add
jmp
or
jb
add
fcompl
sub
pusha
add
bound
add
test
add
add
mov
push
clc
dec
inc
clc
inc
clc
push
add
jnp
popa
add
loopne
pop
mov
js
test
aad
add
mov
sub
mov
add
addr16
fcmovne
sbb
cmpsl
clc
popl
jmp
clc
ret
clc
xchg
dec
jae
add
clc
fwait
fwait
lock
cmp
clc
cli
loop
aad
stos
jmp
add
add
mov
jl
cmpsl
clc
repz
add
cmp
xchg
push
add
add
clc
test
add
or
in
dec
out
addr16
or
push
add
daa
clc
loop
in
bnd
hlt
dec
cmpsb
clc
xchg
or
outsl
xchg
xchg
sub
cmp
mov
in
bound
add
add
int
clc
add
clc
push
add
pop
add
add
clc
dec
adc
add
enter
out
je,pn
loopne
mov
sti
push
sub
add
popf
jae
add
sar
clc
wbinvd
ds
jae
add
clc
mov
nopl
in
clc
mov
xchg
clc
cmp
clc
adc
add
test
sar
mov
add
clc
es
loopne
mov
jp
or
xchg
pop
mov
mov
out
push
xor
imul
cmp
clc
or
adc
add
add
xor
aad
clc
and
add
push
stos
call
push
xor
add
inc
clc
fs
icebp
hlt
icebp
int3
cmp
clc
rcrb
clc
xor
add
je
imul
clc
cmp
clc
loope
sahf
xor
jnp
clc
pop
cwtl
dec
cmp
add
push
js
fists
mov
and
add
jne
clc
sahf
pop
or
add
aam
cmp
cwtl
scas
test
inc
clc
mov
clc
xchg
mov
dec
jnp
clc
ficomps
mov
add
mov
addr16
cmp
add
sar
sbb
rclb
inc
add
push
test
inc
clc
imul
fwait
call
das
cmp
add
push
clc
pop
push
bound
add
sub
movsl
clc
jno
add
popf
inc
clc
inc
add
push
add
xchg
inc
clc
es
dec
mov
clc
fmull
mov
add
add
clc
xchg
xchg
mov
add
add
clc
aas
jle
clc
push
add
push
jae
add
test
dec
and
cmp
pop
add
add
or
mov
clc
imul
into
lret
pop
out
cvtps2pd
add
or
clc
sahf
clc
jbe
clc
and
add
or
mov
pop
add
add
mov
cmp
xor
mov
clc
dec
cli
fidivrl
clc
or
cmpsl
clc
fwait
mov
add
mov
jno
add
out
jns
out
test
sub
add
faddp
clc
addr16
xchg
sub
adc
add
jp
pop
clc
jl
in
inc
clc
mov
mov
dec
sub
inc
clc
dec
or
mov
mov
cmc
std
js
add
jge
clc
clc
divl
clc
jmp
cs
pop
mov
sub
bound
add
pop
jl
bsf
or
adc
add
xor
add
add
pop
iret
js
outsl
sbb
movsl
clc
jne
out
push
add
xlat
repnz
std
into
pop
mov
sar
add
sar
clc
insl
repz
inc
clc
jg
pop
mov
repnz
add
ds
imulb
fs
jp
sbb
xlat
fidivrs
adc
add
jp
clc
cmc
in
sub
clc
mov
lock
mov
test
pop
mov
mov
ljmp
clc
xchg
in
push
rolb
cmp
add
inc
clc
lret
cmp
repz
mov
rcll
inc
clc
aam
leave
mov
add
xor
add
cli
in
dec
mov
add
cmp
ret
add
mov
xchg
dec
pop
scas
xlat
adc
add
add
add
test
add
incb
and
add
add
add
stos
xor
add
clc
in
xchg
fisubrs
or
add
addr16
jne
xchg
sti
pusha
add
std
sub
lret
mov
fistl
add
xchg
dec
mov
cli
jnp
sub
sbb
clc
loop
jmp
mov
xchg
icebp
mov
imul
ljmp
lret
movsb
clc
in
mov
stos
out
fcoml
add
add
aas
or
std
cmp
int3
jmp
imul
mov
add
popa
add
fidivl
clc
adc
add
clc
jl
mov
cs
movsb
clc
mov
and
add
imul
add
pop
clc
imul
pop
in
aam
add
fwait
xchg
cmp
ja
pushf
ret
pop
adc
add
add
clc
fbld
jg
xchg
leave
dec
inc
add
xlat
lret
cmp
fwait
add
mov
into
mov
clc
pop
inc
add
imul
pop
dec
add
add
ljmp
out
pop
and
add
add
xor
add
add
pushf
or
sub
pusha
add
aam
lea
mov
ds
sti
pusha
add
mov
clc
loopne
sti
or
add
add
out
jnp
cltd
mov
or
in
mov
add
add
int3
rolb
clc
decb
push
add
xlat
cmp
push
add
mov
pop
das
dec
cmpsl
clc
imul
cs
xlat
filds
add
mov
xchg
or
icebp
call
inc
add
jnp
sub
add
add
and
sar
xor
add
push
dec
stc
pop
cmp
xchg
ret
clc
cmp
add
dec
sti
mov
clc
pop
sbb
add
mov
add
fs
es
iret
lods
sub
scas
push
add
outsb
out
xor
add
add
add
adc
add
clc
into
jns
inc
clc
es
and
add
clc
int
xor
add
lret
push
clc
adc
add
add
clc
xchg
mov
popf
inc
clc
cmp
push
cmp
add
ja
lahf
sub
add
sar
stos
test
lock
xor
add
inc
clc
jmp
popa
add
push
loope
mov
clc
es
popf
xchg
push
xor
add
icebp
sti
movsl
clc
sbb
mov
xchg
lret
sbb
add
add
shrl
cs
out
jb
add
add
or
clc
or
or
add
fdivrl
sub
add
xchg
enter
fdivrp
xor
add
out
mov
std
lock
add
sti
sub
add
clc
or
add
scas
inc
add
sbb
xchg
es
fadds
mov
sub
push
clc
xchg
das
sbb
bound
add
add
add
jne
cmp
cmp
clc
fsub
clc
jg
add
dec
test
clc
scas
and
add
clc
outsl
into
mov
idivb
dec
mov
clc
inc
clc
push
add
int
cmp
clc
dec
xchg
jmp
std
or
sub
in
cmp
clc
cmp
clc
or
cmpsb
clc
sub
jmp
add
pop
xbegin
lahf
fdivrp
adc
add
bound
add
clc
inc
add
imul
clc
sti
jae
add
ja
add
add
sahf
pop
aaa
xor
add
add
loope
mov
dec
xor
add
clc
inc
add
dec
dec
jecxz
leave
push
int
xor
mov
add
add
mov
clc
and
rol
clc
mov
cwtl
mov
stos
fwait
pop
and
test
sti
add
jno
add
jo
add
clc
lahf
mov
clc
icebp
icebp
imul
add
inc
add
or
and
add
add
dec
test
pop
clc
ret
jns
pop
mov
clc
pop
push
adc
cmp
sar
or
clc
cmp
popa
add
ret
clc
mov
sbb
dec
or
test
push
add
push
cld
movsl
clc
xchg
push
in
xchg
mov
add
jb
add
add
fwait
jne
adc
add
nop
inc
clc
divl
icebp
idivb
clc
insb
pop
cmp
addr16
add
add
add
sbb
add
dec
push
adc
lcall
add
mov
clc
hlt
jle
xchg
push
lret
lret
clc
daa
clc
cmp
clc
cmp
mov
mov
pop
jne
add
xchg
jge
add
mov
mov
rorb
inc
add
mov
xor
add
clc
fistpl
daa
clc
mov
jl
and
add
add
and
add
mov
in
pop
xor
add
add
addr16
add
leave
sub
jbe
add
pop
pop
fwait
and
add
add
cs
inc
clc
mov
adc
add
add
add
div
xor
clc
cmp
bound
add
clc
mov
add
mov
leave
and
add
add
sub
add
stos
dec
insb
daa
clc
inc
add
sbb
mov
push
fldl
sti
jo
add
add
dec
xchg
sbb
lods
dec
jg
imul
data16
dec
add
add
cli
pushf
or
add
call
add
out
popa
add
imul
clc
xchg
stos
sub
xchg
nop
add
add
clc
call
jae
add
stos
pop
outsl
out
test
lahf
and
add
fisttpl
cmp
add
scas
fimuls
mov
add
scas
outsb
pop
int3
ds
ljmp
mov
cli
sub
add
jbe
mov
clc
ss
lea
adc
add
scas
cmp
push
into
enter
add
lods
shl
push
sbb
in
push
push
fbld
cmp
repnz
mov
sarl
adc
add
add
dec
test
clc
mov
cmpsl
clc
cs
or
fs
push
addr16
test
test
dec
in
cmpsb
clc
mov
cmp
clc
rcll
inc
clc
xchg
sub
lock
lods
inc
add
ss
add
ja
add
mov
dec
xor
add
or
notl
add
out
pop
fs
or
clc
rorb
mov
ss
and
clc
pop
push
loop
scas
sub
clc
mov
clc
incl
adc
add
add
clc
scas
xor
add
mov
xchg
dec
fcoml
rclb
add
cmp
clc
fs
dec
aad
add
stos
gs
fmull
mov
add
stos
sub
clc
mov
clc
ds
sar
daa
clc
and
add
add
pop
das
in
mov
js
mov
mov
sub
es
fs
lret
addr16
das
popf
xchg
fcomi
js
dec
repz
scas
dec
fidivrl
daa
clc
jb
add
mov
or
sub
jmp
add
or
jbe
clc
add
add
adc
add
clc
and
cmp
clc
mov
mov
sub
ss
and
add
xor
add
and
add
pop
cmpsb
clc
dec
xchg
sub
mov
push
add
pop
bound
add
ret
clc
stc
cld
lea
sarl
test
add
add
clc
mov
add
add
mov
rcrl
call
cmp
pop
dec
mov
clc
mov
add
js
inc
clc
cli
sbb
inc
clc
ss
cmpsl
clc
in
clc
mov
add
cmp
sub
clc
scas
call
add
test
jne
clc
fcompl
std
movsl
clc
pop
clc
or
pushf
cmp
adc
add
hlt
cld
data16
cmp
xor
clc
fwait
imulb
add
nop
pop
push
add
roll
add
push
mov
clc
sbb
ss
test
inc
add
fistps
adc
add
mov
clc
out
xor
add
add
xor
add
add
dec
repnz
cmpsb
clc
into
sti
out
pop
out
add
add
aas
stos
test
push
add
popa
add
cmp
cld
mov
add
outsl
fistps
or
mov
add
lea
add
clc
pop
fnstsw
mov
dec
notb
pop
xlat
inc
add
cmp
cmp
push
test
in
xor
add
clc
jl
xchg
imul
mov
imul
popf
cli
mov
icebp
xor
add
xor
clc
inc
clc
pop
loopne
cli
jae
add
clc
add
add
inc
clc
outsb
js
clc
in
or
clc
popa
add
inc
add
lock
add
add
dec
xchg
xor
fnstcw
pop
jne
clc
push
sarb
int
xchg
ljmp
add
out
cmc
ljmp
mov
mov
clc
fidivl
add
js
add
add
cwtl
mov
loop
pop
cmp
push
xbegin
cmp
aam
sub
clc
xor
mov
clc
lret
adc
add
clc
push
add
cs
clc
xchg
js
fcoms
or
aaa
stos
std
inc
add
lret
add
mov
or
add
or
cmpsl
clc
fiadds
add
xchg
sub
add
clc
test
pop
das
inc
add
dec
aad
xor
add
add
jge
and
add
jmp
clc
fldl
std
mov
add
add
add
sbb
lods
mov
add
sbb
clc
test
clc
ret
clc
adc
sub
pop
and
add
add
mov
cmp
fldl
add
mov
cmpsl
clc
push
clc
add
fsts
out
jne
in
sub
aas
mov
addr16
inc
clc
cmp
mov
pop
push
add
mov
add
test
and
add
add
add
pop
sbb
add
stos
in
push
clc
mov
jp
sub
aas
ljmp
cmc
aad
add
xchg
or
add
xchg
cmp
clc
push
clc
into
lods
std
iret
fs
addr16
mov
test
clc
adc
add
imul
add
jnp
add
add
clc
out
gs
push
cmp
add
add
add
push
xchg
push
mov
into
sti
cmp
add
cld
mov
pop
repnz
or
add
xor
add
fwait
and
add
clc
jp
mov
cli
es
sahf
sub
push
pusha
add
clc
pushf
push
ja
fwait
repnz
push
shrb
dec
add
add
add
clc
and
add
clc
rol
clc
imul
lcall
add
sub
add
pop
sti
adc
sub
adc
add
mov
clc
dec
lret
loop
mov
je
pop
cmp
pop
mov
sbb
pop
inc
clc
push
xor
add
aad
mov
clc
out
pusha
add
pop
inc
clc
cwtl
bound
add
pop
push
add
in
push
and
jbe
es
pop
xor
add
sub
clc
or
ret
cld
fsubl
xor
add
xor
add
aaa
sub
iret
fdivr
sub
clc
sbb
add
add
pop
gs
lods
shlb
xchg
pop
mov
add
cmp
fisttpl
movsb
clc
mov
add
sbb
xbegin
clc
popf
xabort
xchg
aad
clc
sub
add
test
mov
mov
lods
das
int
add
jge
add
and
add
filds
push
push
jne
lcall
mov
add
shll
lcall
clc
pop
scas
dec
and
add
jo
add
add
dec
icebp
push
add
dec
fsubrs
clc
pop
nop
dec
fcomps
add
cmp
xchg
movsb
clc
pushf
and
add
xbegin
add
add
es
sub
mov
outsl
mov
cmp
add
pop
nop
gs
or
lret
popa
add
insb
mov
dec
out
dec
das
mov
clc
test
pop
inc
add
pushl
mov
aas
aaa
cmc
sar
loop
inc
add
add
add
sbb
add
jae
add
aaa
mov
repz
xabort
add
mov
clc
jnp
push
add
fisttpl
dec
cmpsl
clc
je
mov
cmpsb
clc
fs
enter
movsl
clc
pop
xlat
push
and
mov
sbb
ret
clc
mov
dec
lret
lods
out
mov
add
out
xor
add
jb
add
dec
jmp
xchg
imul
jg
clc
xor
add
clc
push
pop
cltd
mov
lea
add
lods
cmc
lods
cmp
iret
in
pop
add
add
xor
add
mov
add
pop
ja
cmpsl
clc
leave
popf
lods
clc
or
test
pop
jmp
inc
clc
cld
adc
add
push
xchg
shll
add
sbb
mov
gs
push
add
insb
mov
pushf
and
add
out
ret
clc
test
pop
xor
add
inc
clc
jnp
js
push
xchg
or
xor
add
pop
cli
jg
push
jbe
mov
je
test
fs
push
fwait
cmp
clc
sbb
add
pushf
loop
cmp
mov
jp
add
mov
clc
dec
fbld
ja
in
rorb
mov
in
sub
outsl
sar
clc
inc
add
mov
ljmp
and
negl
clc
inc
clc
fstpt
or
add
je
clc
mov
adc
mov
jmp
mov
xchg
adc
add
add
dec
rclb
add
inc
clc
aam
add
and
and
add
add
rcrb
clc
fs
jl
clc
mov
clc
mull
add
sarl
clc
shl
clc
cmp
clc
add
lcall
clc
push
add
add
jecxz
bound
add
cwtl
push
shll
add
xchg
fwait
mov
jbe
add
add
mov
dec
bswap
lcall
clc
stc
push
daa
clc
outsb
jo
add
mov
inc
clc
call
aam
clc
icebp
stc
sti
mov
clc
or
add
xchg
out
and
add
add
inc
add
lock
add
cmp
int
addr16
jbe
call
mov
in
inc
clc
lock
clc
call
cltd
stos
test
mov
add
clc
push
add
add
add
add
add
cmc
push
mov
clc
mov
lods
cmp
mov
add
lahf
ss
int
mov
jge
bound
add
add
and
nop
stos
movsb
clc
fimull
add
dec
sub
ja
add
gs
mov
add
add
add
int3
and
pop
sbb
mov
shlb
popf
hlt
scas
pop
push
cli
dec
fwait
popa
add
lods
add
jecxz
jb
add
clc
jno
add
dec
adc
add
add
add
push
sub
clc
dec
lahf
xchg
stos
mov
outsb
mov
push
add
and
add
clc
jecxz
xchg
pusha
add
clc
mov
add
fdiv
cmp
add
in
fistl
mov
add
jl
clc
xchg
pop
clc
fisttpl
lret
pusha
add
clc
dec
out
xchg
push
cld
xor
add
clc
cmp
add
enter
clc
jno
add
jmp
clc
push
iret
mov
push
cmp
add
lret
dec
xchg
and
add
lods
popf
push
add
jns
mov
clc
cmp
clc
and
das
adc
imul
repz
xabort
in
mov
pop
mov
cmp
insb
sahf
sbb
jnp
js
add
and
add
add
push
add
jns
add
inc
clc
push
add
xchg
sti
cmpps
inc
add
mov
add
push
add
test
mov
outsl
aaa
cmp
lret
repz
mov
clc
pushf
push
clc
mov
add
clc
adc
add
clc
pop
push
stos
mov
shlb
add
faddl
dec
jecxz
inc
clc
pop
pop
scas
test
loopne
mov
add
xor
add
or
sahf
mov
add
nop
mov
xchg
mov
add
mov
in
cmp
add
clc
or
add
add
mov
add
clc
int
lret
xor
add
xlat
or
mov
sbb
clc
popa
add
mov
mov
nop
push
add
fcomps
add
xabort
xor
add
or
cli
enter
jmp
xchg
pushl
dec
push
clc
call
add
jmp
clc
leave
push
clc
push
add
insl
pop
test
add
lea
add
mov
clc
xor
add
scas
sub
and
add
xor
add
add
push
add
sar
clc
push
jo
add
ret
clc
repnz
adc
add
pop
mulps
mov
add
je
clc
add
add
fs
sbb
negl
add
mov
clc
lret
dec
sahf
jg
add
add
add
add
add
adc
add
jb
add
add
xor
add
clc
cmp
clc
cli
inc
clc
sub
ds
aaa
mov
clc
jg
fcoms
add
mov
inc
clc
movsb
clc
inc
clc
sbb
cmp
add
pop
adc
add
cld
mov
jne
sub
clc
sub
dec
out
clc
dec
inc
clc
in
push
add
outsb
xor
add
add
mov
cmc
cmp
clc
pop
bound
add
jns
mov
lahf
pop
pushf
jmp
popf
or
pop
xor
add
out
sub
sar
push
add
repnz
cli
daa
clc
sbb
add
dec
leave
adc
add
cmp
clc
rorb
add
add
lea
mov
out
mov
adc
add
add
in
mov
in
or
add
sar
mov
push
add
lods
mov
test
and
add
clc
adc
add
add
add
add
mov
jmp
mov
outsb
cmpsb
clc
mov
aas
popa
add
insl
in
shrl
jo
add
out
push
cmpsl
clc
xchg
repz
add
add
push
add
repnz
pop
enter
cld
fwait
jmp
repnz
xchg
dec
addr16
inc
add
pop
data16
ss
mov
pop
mov
data16
xchg
mov
lea
adc
add
lods
pop
cmp
int3
sar
add
push
or
cmp
pop
or
clc
xchg
pop
cmp
divl
clc
pop
clc
xor
add
mov
cmp
jns
call
clc
pop
xor
add
add
lea
or
lods
lcall
clc
imul
mov
cmc
dec
lahf
xabort
clc
ret
clc
insl
pop
clc
cmp
popf
cmp
sbb
push
add
or
add
add
cwtl
ret
jnp
test
add
mov
sub
shlb
add
add
jp
clc
dec
aam
aam
data16
std
lret
notb
add
cmp
xchg
mov
add
sub
mov
jmp
push
cwtl
push
sbb
out
inc
clc
push
add
cmp
add
mov
sub
cmp
in
dec
push
popa
add
xchg
movsl
clc
mov
clc
fwait
pop
dec
cli
data16
loop
ljmp
clc
clc
nop
add
add
je
dec
and
add
aas
mov
clc
jne
sub
clc
sbb
and
sub
add
dec
pop
repz
test
jb
add
movsb
clc
sub
add
xor
add
pop
sbb
add
pushf
cltd
dec
loop
pop
ret
popf
add
add
add
push
adc
add
clc
enter
clc
push
stos
mov
mov
add
push
into
push
add
test
and
xchg
movsb
clc
sub
xchg
ds
adc
clc
ss
dec
inc
clc
fmulp
xchg
imul
add
and
add
and
add
add
push
rcrl
mov
mov
sbb
push
add
std
ret
clc
sbb
inc
clc
enter
sub
clc
imul
clc
clc
lods
sti
fisubs
into
into
ret
clc
jne
push
ds
jo
add
xbegin
sbb
stc
push
mov
lret
imull
xchg
ret
add
adc
add
jge
fucom
clc
inc
clc
in
sbb
fs
mov
and
add
movsl
clc
xbegin
pop
clc
push
mov
enter
clc
xor
add
or
add
ficoml
add
and
clc
dec
movsl
clc
and
add
clc
mov
add
in
ljmp
xchg
popf
cmpsl
clc
jg
clc
inc
clc
jecxz
cmp
int3
in
jb
add
clc
cmpsb
clc
inc
add
scas
jg
and
add
sahf
push
dec
and
pop
adc
add
fidivl
add
ret
clc
mov
lea
es
sti
daa
clc
push
stos
pop
mov
add
adc
add
outsl
mov
xor
add
scas
jbe
clc
add
clc
push
std
mov
mov
add
cmp
sbb
cltd
inc
clc
push
add
cmp
jecxz
mov
add
aaa
lock
lcall
mov
clc
das
pop
repz
fistl
add
xchg
mov
clc
insb
add
add
clc
hlt
imul
add
outsl
pop
clc
jns
push
add
test
add
cmp
clc
jo
add
xchg
dec
cmp
nop
mov
clc
cmp
clc
out
es
xchg
std
pop
mov
clc
push
sbb
clc
and
add
sar
push
lea
mov
clc
lahf
jmp
clc
pop
scas
xlat
out
mov
clc
mov
ljmp
mov
in
outsb
add
add
call
cld
inc
add
loop
repz
xchg
xchg
popl
sub
jo
add
add
add
dec
iret
cld
test
inc
clc
roll
mov
stos
adc
pusha
add
mov
add
mov
sbb
in
cmp
rorb
sbb
xor
clc
jl
jb
add
xchg
jp
out
clc
xchg
test
clc
ljmp
mov
add
movsb
clc
pop
xlat
scas
ret
clc
jnp
add
imul
or
sub
add
fwait
push
mul
clc
mov
cli
js
clc
xchg
add
add
and
add
mov
pop
outsl
push
or
add
add
xchg
pop
je
pop
clc
push
clc
loop
xor
add
add
test
clc
cmp
sti
cmp
cmp
add
out
iret
inc
add
aas
cwtl
mov
jne
jle
add
add
dec
repz
hlt
xor
add
mov
clc
jnp
fadds
add
sar
or
add
clc
cmp
add
cmp
clc
ja
inc
add
mulb
add
stc
iret
add
add
clc
add
add
in
push
mov
cmpsb
clc
sub
mov
clc
sub
clc
mov
clc
cmpsb
clc
imul
add
jecxz
mov
clc
out
cs
stc
scas
addr16
xor
add
add
mov
icebp
out
sbb
cmc
ffree
clc
insb
xbegin
add
out
cmpsb
clc
or
clc
add
add
clc
xor
add
mov
mov
inc
add
int
adc
xbegin
add
xchg
xor
and
add
clc
jl
dec
jns
adc
xor
add
xor
add
clc
push
xchg
ds
sbb
add
and
add
ja
imul
jp
jl
and
push
add
add
mov
ds
repz
push
xor
add
mov
push
add
mov
clc
cmp
add
cmp
rolb
clc
in
fstps
add
add
clc
cmp
clc
lahf
dec
sub
clc
test
cmpsl
clc
lea
add
clc
cmpsb
clc
mov
pop
push
leave
cmpsb
clc
out
cltd
xchg
data16
out
test
jb
add
clc
je
jo
add
ljmp
cmp
clc
sti
ret
clc
pop
test
je
clc
imul
add
and
add
add
inc
add
cmp
jnp
add
xchg
push
push
mov
clc
in
sbb
aaa
stos
cmova
daa
clc
pushf
and
add
jb
add
add
jns
mov
stc
pop
cmp
addr16
cmpsl
clc
enter
jp
add
add
jb
add
mulb
add
cmp
add
dec
jp
add
adc
add
add
xlat
push
jnp
sar
clc
pop
dec
push
out
outsb
and
add
sub
outsb
test
clc
lret
add
mov
int3
sbb
xor
add
aad
imul
add
add
clc
mov
fwait
popf
mov
cmp
test
cs
fildll
mov
or
ret
clc
aam
movups
add
clc
paddq
clc
stc
mov
add
lods
dec
or
add
mov
lahf
lods
fsubl
xchg
test
sub
clc
push
rolb
lods
jecxz
mov
mov
add
mov
xor
sbb
fcompl
push
push
xchg
mov
mov
add
push
jmp
scas
sbb
clc
and
add
clc
dec
fldenv
add
mov
mov
fsubl
add
ret
clc
sub
clc
cld
insl
inc
add
pop
jb
add
cmp
dec
cmp
push
add
test
add
cmc
jo
add
add
jl
inc
clc
mov
cs
push
jns
add
xor
add
fwait
mov
add
mov
frstor
in
xchg
push
push
clc
cmc
call
mov
clc
loopne
add
add
lahf
cmp
mov
flds
lahf
push
add
push
sbb
clc
ret
add
popf
je
cmpsb
clc
or
cmp
enter
mov
pop
sub
mov
clc
sub
clc
cmp
pusha
add
lea
clc
sar
test
and
add
sub
stos
jl
outsl
sbb
sar
clc
out
lret
mov
leave
pop
xchg
mov
add
add
add
xchg
test
add
dec
push
jb
add
sub
ljmp
inc
clc
or
xchg
mov
mov
add
arpl
add
or
mov
sub
inc
add
cmp
outsl
mov
inc
clc
sub
fwait
xor
add
clc
add
and
cltd
clc
add
add
push
add
cld
inc
add
sbb
mov
add
cwtl
dec
pop
dec
add
add
clc
nop
or
add
scas
mov
mov
clc
xchg
push
call
out
mov
jo
add
add
sub
jne
clc
xchg
push
clc
or
add
adc
clc
xchg
cmp
cmp
clc
adc
add
aad
cmp
mov
clc
inc
clc
ljmp
jg
clc
push
popf
cld
or
xor
add
add
fwait
std
inc
add
out
pop
in
out
aaa
add
insb
cmp
dec
dec
xor
add
clc
cmpsb
clc
fadds
or
scas
mov
test
jae
add
ss
xchg
jge
or
cmp
sbb
and
add
aam
in
imul
fsubrs
add
jae
add
clc
xchg
mov
clc
clc
sti
lahf
xabort
xchg
lea
sahf
stos
inc
add
dec
sub
push
add
jecxz
je
das
mov
cmp
clc
or
jle
clc
cmp
jl
ljmp
xchg
push
enter
inc
add
mov
push
cld
cmp
clc
push
mov
sub
adc
add
imul
add
clc
mov
enter
loopne
jno
add
mov
clc
inc
clc
jge
test
inc
add
cmpsb
clc
push
fs
clc
jl
clc
dec
mov
clc
pusha
add
sub
add
mov
and
add
clc
jns
int3
imul
mov
rcrl
call
dec
xchg
or
add
or
and
add
and
add
and
add
out
fidivrs
xchg
rcll
add
cmp
clc
jae
add
add
inc
add
es
adc
sbb
clc
js
dec
dec
in
in
outsl
cld
scas
aam
clc
cli
cmc
or
xor
add
jns
loopne
shrl
dec
imul
mov
xor
add
stos
iret
push
add
or
clc
sbb
clc
or
pusha
add
jmp
push
adc
add
in
mov
mov
clc
add
and
addr16
insl
movsl
clc
lret
aam
clc
into
xor
add
clc
into
test
sbb
add
jbe
jg
dec
jmp
cmp
cmp
add
inc
clc
test
add
add
xchg
cmp
in
pop
add
add
cmp
mov
clc
loope
mov
and
add
mov
clc
inc
clc
fnstsw
clc
out
adc
add
out
es
cld
shlb
add
stos
sbb
add
lea
das
push
mov
clc
das
jecxz
sahf
cmp
xbegin
fdivr
sbb
add
imul
clc
xor
add
push
clc
or
sub
pop
clc
daa
clc
in
es
sub
stos
repz
push
sub
add
jmp
clc
mov
cmpsb
clc
jg
add
outsb
adc
ds
clc
dec
inc
add
jno
add
add
jp
clc
aam
out
ds
clc
ficoml
cmc
xchg
jecxz
pop
mov
imul
push
clc
sub
mov
clc
pop
or
cs
xchg
sub
clc
or
add
jg
cmp
pop
mov
xlat
lahf
jmp
clc
xor
cmp
clc
sbb
add
adc
add
cmpsb
clc
out
fldenv
add
clc
inc
add
jns
clc
push
clc
stos
lea
add
pop
or
jle
xor
mov
clc
hlt
push
mov
popf
ret
clc
or
jg
jne
outsb
aas
xchg
mov
xor
add
cmp
dec
sub
xchg
iret
push
add
leave
je
movsl
clc
dec
loope
mov
add
sbb
push
sbb
fcomps
add
mov
clc
xchg
cmp
add
shll
hlt
and
add
fsubp
clc
xchg
pop
clc
inc
clc
outsb
mov
in
mov
ret
clc
xabort
cmp
pop
mov
data16
xor
add
mov
loop
lret
lahf
inc
clc
xchg
push
add
fdivr
mov
add
sbb
clc
popf
repnz
pop
clc
inc
clc
mov
mov
add
sub
mov
clc
out
sub
cli
and
add
cmp
xchg
jbe
add
gs
imul
clc
inc
clc
pop
mov
arpl
add
popf
dec
lea
punpckhdq
lods
es
aaa
int
js
add
adc
add
add
imul
aas
xchg
or
clc
clc
jne
mov
mov
clc
or
jmp
adc
add
adc
add
xor
add
add
and
add
and
add
mov
xlat
pop
out
inc
add
adc
add
add
add
add
mov
add
stos
pop
push
add
mov
cmc
sub
jle
clc
add
add
cmp
add
add
jl
pop
out
loopne
push
or
stos
inc
add
jmp
mov
iret
loop
add
add
push
clc
test
add
add
dec
scas
int3
add
add
add
dec
clc
sbb
ss
clc
xchg
lret
clc
xchg
push
add
stos
inc
clc
filds
clc
sbb
sbb
add
pusha
add
and
add
add
push
mov
cmc
imul
js
inc
add
shrl
call
fistpl
fsub
clc
fs
or
pusha
add
push
cmp
xor
ret
clc
sbb
mov
jl
cmp
in
sbb
add
mov
cmp
clc
pop
aad
add
js
add
add
bnd
add
clc
fsub
clc
inc
clc
fistl
mov
clc
insb
mov
add
clc
sub
rclb
clc
or
jb
add
imul
clc
cmp
es
jle
ds
imulb
add
dec
or
lcall
jnp
add
sbb
and
mov
clc
ss
clc
and
dec
test
fnstcw
add
xbegin
aad
test
push
push
into
ret
clc
dec
jge
add
jmp
add
xabort
mov
enter
js
add
add
clc
adc
jmp
sti
fildl
inc
clc
into
cwtl
jae
add
cmpsb
clc
pusha
add
out
cmp
add
adc
add
lahf
das
jg
scas
xbegin
add
and
add
xor
add
jae
add
clc
mov
test
xchg
mov
add
