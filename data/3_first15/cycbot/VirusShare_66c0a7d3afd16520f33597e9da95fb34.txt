xor
cmc
ret
mov
mov
add
push
add
xlat
inc
add
mov
cmpsl
hlt
insb
jp
add
mov
mov
stc
sbb
adc
and
mov
mov
ss
sub
dec
cmp
fdivr
push
das
test
and
push
popf
lock
imul
and
and
jb
stos
cli
inc
or
rcll
jecxz
les
cmp
aas
push
add
inc
add
mov
daa
jnp
lds
cwtl
lock
mov
cmp
xor
add
jl
call
hlt
xlat
outsb
lock
push
xor
xor
dec
push
add
mov
add
out
sbb
loop
stos
cmpl
or
leave
sub
adc
or
inc
add
std
and
xchg
dec
int3
fs
test
arpl
adc
sbb
and
sub
hlt
rclb
push
mov
lea
sbb
iret
mov
punpckhdq
dec
subl
add
inc
sub
pop
daa
pop
mov
and
push
inc
add
add
cmpsb
into
popa
cltd
hlt
repnz
cmpsl
xorl
mov
pop
fistpll
dec
xchg
int
stos
addb
jnp
test
add
pop
je
inc
cmc
pop
xchg
imul
lea
lea
jbe
test
jo
or
push
in
xor
push
daa
movsl
jae
mov
pusha
add
idiv
inc
add
inc
pop
adc
and
push
sbb
rcr
outsl
adc
add
xchg
addb
mov
add
in
add
and
ret
mov
cmpsl
jmp
addr16
dec
comiss
popf
push
xchg
cmp
in
sbb
cmp
out
data16
pop
cmp
rcll
sub
add
and
cmp
fwait
cli
push
enter
xor
mov
sbb
xlat
pop
rolb
sar
inc
test
cmp
dec
sbb
mov
sbb
shrl
cmp
mov
data16
jns
test
lret
add
or
insl
cmc
pop
inc
add
and
sarl
push
insb
push
or
push
aas
xchg
adc
xorl
add
dec
loopne
mov
jle
hlt
sti
adc
jno
idiv
sub
add
add
mov
and
adc
mov
mov
adc
add
imul
pop
xor
sbb
aam
fidivl
jae
dec
cmp
jecxz
add
sub
repnz
and
loope
adc
add
fnsave
jl
mov
fwait
dec
popa
cmc
adc
adc
xchg
insl
fnstenv
sti
mov
mov
movb
push
dec
ljmp
popf
cmp
addr16
movsl
loopne
jae
xor
in
jge
push
or
xchg
jp
jecxz
imul
xchg
lahf
jp
inc
add
fistpl
dec
dec
fildl
dec
mov
andl
sarl
imul
adc
aas
loope
add
shlb
fwait
mov
out
add
lret
cmp
sbb
mov
push
add
fisttpl
testb
mov
adc
cmpsb
ss
sbb
je
outsl
and
or
mov
adcw
add
add
ficoml
add
lahf
and
movsl
pop
scas
aas
jbe
sahf
cld
push
inc
sbbl
mov
js
xchg
dec
test
lea
dec
mov
das
xlat
adc
add
mov
loop
xchg
xchg
mov
jle
add
push
add
lret
lods
popa
ficoml
inc
inc
and
ljmp
mov
xchg
aas
pop
test
cwtl
xor
xor
pop
in
rclb
mov
aad
adc
xchg
xchg
push
roll
leave
mov
out
or
in
cld
pop
repnz
jne
lods
cmp
fimuls
sub
mov
push
add
movsb
jb
cwtl
jge
jno
aad
push
jnp
jge
sbb
addb
addr16
lret
aas
icebp
sub
push
lods
scas
lret
xor
scas
push
repnz
popf
ret
adc
fstpl
xlat
int
pushf
lret
out
inc
inc
and
dec
outsl
push
movsl
loop
xchg
inc
inc
push
cmpl
add
mov
pop
cwtl
mov
jnp
dec
xlat
test
mov
js
inc
rolb
pop
adcl
adc
stos
std
or
clc
jl
incl
in
fstpt
in
addb
add
fs
cmp
ja
cmp
mov
add
idivb
lods
or
sbb
cmp
jg
cmc
sub
add
nop
scas
fsubrl
fnstsw
imul
lret
jmp
xor
jmp
test
fs
push
inc
add
fldl
movsb
xor
add
mov
leave
xor
fs
add
sbb
out
push
mov
xor
add
sbb
lea
mov
outsl
popa
aas
sbb
add
cmp
jbe
shlb
lret
lea
leavew
or
push
adc
add
loop
adc
jge
inc
cmp
inc
sti
lea
gs
je
lahf
xchg
movsb
cmp
fcmove
and
ret
cmp
mov
sub
das
dec
cmpsb
mov
mov
iret
push
insb
fwait
jbe
inc
aas
cs
jno
popw
add
les
insb
xor
or
xchg
mov
mov
xchg
out
clc
dec
xchg
out
xor
test
sub
loopne
ljmp
or
into
ret
addr16
insb
sbb
and
shr
outsb
pop
mov
outsb
inc
stos
mov
adc
out
add
dec
mov
sahf
push
inc
add
add
sub
inc
sub
and
stos
into
bound
rcr
lock
mov
or
add
repnz
lahf
addb
jp
or
cmpsl
xor
test
mov
pushf
mul
outsb
sbb
push
dec
aaa
add
in
sar
cmp
add
dec
test
insl
or
pushf
pop
pop
mulb
gs
push
fwait
loop
pop
push
jmp
mov
addb
arpl
add
shll
push
iret
pop
xor
mov
sub
sub
dec
xchg
repz
fcmovbe
cmp
inc
add
mov
mov
xchg
add
out
fadd
add
cmpsb
repnz
and
mov
push
jmp
xor
inc
movsb
cmc
into
cmp
movsl
jge
sahf
addr16
rcll
mov
jne
add
es
jns
push
dec
addr16
sub
add
mov
jno
es
pushf
xor
shrl
movsb
jnp
jmp
cltd
pop
cltd
inc
xchg
push
and
or
push
xor
push
jmp
std
js
or
fiaddl
shrb
dec
mov
xor
push
idivb
scas
scas
jg
movb
lock
and
outsl
fisubrs
or
mov
dec
mov
data16
push
xor
mov
stc
test
jecxz
push
jne
add
decl
xchg
cmp
push
adc
add
mov
xchg
insb
lret
mov
movsb
fbstp
sbb
fisttpll
inc
add
rol
or
adc
mov
adcl
add
mov
in
push
push
stos
xchg
lods
inc
sub
cmp
lea
add
sbb
inc
add
jmp
push
ja,pt
sbb
lea
jns
jnp
push
add
push
nop
mov
cmp
mov
idivb
daa
outsb
mov
add
out
xchg
sbb
cltd
cmp
out
negl
call
lcall
into
push
cmp
adc
add
push
pop
sub
mov
mov
shlb
imul
push
dec
repnz
movb
pusha
add
xchg
ucomiss
xchg
ds
push
lock
cmc
mov
je
aas
addb
xor
ret
ret
movsb
lods
add
sub
ds
imul
pop
or
aas
add
jecxz
jge
jp
rolb
jbe
shl
mov
cmpsl
popa
enter
push
movsb
dec
movsl
sarl
jo
movsl
sbb
add
mov
inc
jle
repnz
xor
push
mov
lds
ss
aaa
push
aas
add
leave
fcompl
ror
pop
add
mov
jecxz
jne
mov
stos
sbb
ret
xchg
insl
ss
stos
test
push
add
push
cmc
xor
movsb
cmpsl
imul
add
add
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
int3
in
lock
aad
pop
fnsave
sub
sub
and
mov
shlb
and
sub
and
divps
sub
xorl
add
xor
dec
test
jbe
xchg
sub
nop
les
fs
adc
sarl
test
out
add
jl
add
rolb
hlt
push
loopne
add
cli
scas
int3
cmp
nop
add
mov
mov
jmp
sub
ret
mov
jne
pop
outsl
nop
inc
shll
int3
jmp
mov
or
sub
int
lods
cli
insb
and
mov
scas
push
outsl
fcoms
xchg
pop
aam
mov
addb
xchg
dec
push
mov
jno
stos
xor
add
pop
mov
hlt
pop
adc
jns
shll
sbb
push
xchg
popf
data16
ja
add
or
inc
add
nop
fildll
sahf
inc
add
stc
adc
inc
int3
adc
stos
out
xchg
add
inc
mov
and
mov
jle
jbe
mov
adc
bound
and
sub
cmp
add
and
cmp
pop
dec
mov
out
je
popf
pop
call
mov
pop
jp
jo
add
je
mov
mov
insl
push
dec
cmpsb
add
lds
mov
cli
pop
mov
das
mov
add
loop
add
jg
mov
mov
hlt
test
and
faddl
add
jg
or
fs
leave
gs
pop
hlt
stos
cmpsl
int3
jmp
cmp
rcrb
add
adc
aaa
lea
inc
add
xor
insb
in
or
pop
mov
push
and
sub
mov
add
add
add
xchg
fnstsw
sbb
push
jecxz
rolb
xchg
cwtl
mov
add
push
cwtl
or
js
faddp
add
rcll
add
mov
shrl
mov
loop
mov
mov
fs
add
mov
imul
mov
js
aaa
pop
jne
dec
and
and
insl
aaa
mov
sbb
cwtl
in
mov
imul
mulb
leave
mov
imul
inc
add
in
leave
cmpsb
rcll
pop
cmpl
adc
daa
add
push
cmp
push
in
push
ljmp
loope
add
or
in
jl
jo
imul
add
enter
jno
fsubrs
add
lods
xchg
mov
xchg
jmp
jg
fnstsw
xor
aas
and
cli
sbb
mov
cld
sub
pop
xchg
jge
les
xchg
mov
add
mov
int3
pop
mov
or
add
stc
int3
add
xchg
loop
and
dec
cmp
scas
sbb
mov
ror
ja
repnz
jmp
cmp
mov
repz
aam
jl
mov
add
lods
mov
rcl
jnp
pop
mov
jns
mov
pop
add
insb
jne
fstps
lret
jle
adc
and
and
pop
jge
sub
pop
cld
add
cmpsl
sub
mov
or
add
add
jne
or
mov
pop
jl
inc
add
xor
movsl
mov
lock
add
xchg
dec
push
mov
add
add
sub
ret
repz
sub
mov
aaa
mov
sbb
movsb
aam
push
rorl
test
mov
test
and
mov
pop
mov
in
decl
out
jbe
daa
dec
cmpsl
insb
jne
add
dec
xchg
mov
ja
pushf
adc
sbb
loopne
mov
test
cmp
inc
test
adc
inc
out
movsb
xchg
aaa
mov
sbb
imulb
mov
data16
dec
jg
add
les
lds
inc
sti
mov
xchg
fbstp
add
je
inc
clc
sbb
in
out
and
aas
or
filds
sub
mov
out
addr16
out
add
push
add
add
sub
push
mov
hlt
inc
add
mov
jno
mov
cmpsl
lcall
pusha
add
outsb
fsubs
and
icebp
lret
add
mov
add
dec
sbbl
xchg
les
test
or
cs
ljmp
push
nop
pop
fsub
push
mov
or
cmpsb
rolb
leave
sub
and
or
adc
and
push
add
add
cwtl
push
nop
mov
ss
xor
xchg
cmp
add
cmpsl
adc
push
jnp
fldcw
stc
or
add
and
outsl
cmc
xchg
adc
and
pop
ficoms
fnsave
cwtl
decb
add
mov
orl
decb
add
out
lret
inc
add
mov
add
mov
jecxz
addb
pop
fs
push
mov
and
xor
insb
or
cwtl
imul
inc
mov
pop
jbe
jg
xchg
jo
add
add
sub
cmp
add
hlt
pop
mov
add
xchg
jno
pop
orl
add
aaa
cmp
mov
add
push
addr16
arpl
add
mov
mov
out
mov
mov
and
cli
adc
jecxz
dec
inc
and
mov
add
add
cwtl
xor
test
jns
ficoms
pop
into
lds
add
xchg
mov
jecxz
sub
pop
rolb
push
dec
in
or
ljmp
loop
add
leave
js
ret
adc
fdivrl
add
lods
jp
out
cmp
jmp
push
fstl
scas
mov
pavgb
push
icebp
rorb
mov
xchg
adc
adc
xchg
call
cmp
ds
scas
popf
mov
pop
pop
mov
ja
imul
iret
mov
into
jns
inc
add
shll
dec
sbb
iret
jecxz
adc
cs
rolb
test
push
scas
xchg
xchg
push
sub
pop
xor
js
push
xchg
hlt
jle
pop
cltd
sbb
pop
lret
stc
jns
aaa
push
movb
push
bound
testb
adc
xchg
push
test
push
jmp
pop
adc
jecxz
ljmp
out
imulb
jmp
push
pop
xchg
lcall
fstpl
mov
test
je
aas
sub
test
iret
mov
popa
push
xor
jo
inc
movb
cmp
insl
aas
pop
adc
sbb
and
add
fwait
enter
adc
mov
xchg
adc
push
xor
mov
and
mov
mov
out
outsb
and
dec
mov
or
incb
bound
xor
mov
add
sub
mov
ret
add
add
sti
mov
pop
push
or
in
xlat
mov
repz
cmp
mov
hlt
jae
mov
push
jb
pop
ss
lea
or
push
xchg
xchg
pop
shl
ret
ljmp
shlb
add
in
addr16
test
cs
pop
call
mov
xchg
xor
pop
dec
addr16
testb
jo
pop
cli
fldl2e
lock
pop
repz
pushf
incb
and
aas
fadds
mov
add
xor
fbld
int
or
clc
sbb
daa
push
ret
add
dec
mov
dec
fists
mov
les
imul
pop
jge
movsl
addb
pusha
add
cmpsl
fildl
bound
mov
fidivs
iret
test
dec
mov
repnz
mov
push
and
dec
icebp
mov
or
fidivs
es
add
or
add
fidivrs
or
rorl
adc
push
rcll
xor
or
pusha
add
jg
scas
mov
pop
imul
add
lcall
add
and
loopne
loopne
pop
ss
addr16
jg
icebp
mov
add
and
dec
scas
cmp
sahf
mov
mov
cmp
mov
add
and
add
rol
dec
int3
sbb
pop
jno
and
mov
sarl
ficoml
addr16
mov
cmp
addb
pop
mov
push
xchg
cmp
ds
pop
cmc
pmaxsw
addr16
adc
popf
mov
aad
cmc
inc
add
mov
xchg
add
nop
pop
inc
add
add
cmove
imul
xchg
fstl
xchg
inc
xchg
and
stos
dec
pusha
add
add
xchg
mov
in
add
and
jl
ret
or
push
add
nop
leave
addr16
loope
jb
sub
push
imulb
les
cmp
push
roll
add
repz
adc
popa
fldl
cmp
mov
add
and
mov
xchg
dec
mov
xor
imul
mov
add
pop
mov
add
and
dec
loope
lock
aas
sarb
jmp
add
add
into
dec
das
add
pop
out
fdivl
imul
dec
lock
jnp
xchg
adc
dec
aaa
in
push
in
pop
das
addb
lahf
or
jge
popa
repz
imull
out
mov
add
jl
test
jge
xor
sbb
ret
call
loopne,pt
sbb
addb
inc
add
test
pop
jecxz
jbe
jb
lret
push
aam
aas
adc
or
std
les
xor
sub
cld
cmpsb
repz
outsb
test
mov
add
dec
inc
xchg
addr16
scas
enter
add
add
add
add
add
xchg
push
mov
inc
mov
lds
jmp
shlb
sarl
pop
mov
jns
mov
in
imul
dec
and
xchg
sbb
loope
add
pop
inc
cwtl
int
outsl
and
adc
push
pop
ds
pop
mov
mov
add
test
cli
cmp
jle
rolb
add
pop
test
push
icebp
js
push
push
popa
rcr
push
hlt
dec
inc
add
dec
jbe
popf
maxps
popf
sahf
mov
sti
push
mov
add
mov
cmc
ss
rorl
cmp
dec
scas
xchg
daa
push
push
scas
shll
mov
xrelease
jbe
test
cmp
push
js
add
scas
out
xchg
pop
fstpt
push
das
lds
sbb
fsub
and
push
mov
xchg
pop
or
or
add
jb
pop
jns
inc
add
int
sbb
mov
cmc
scas
addb
into
add
cwtl
mov
pusha
add
enter
jbe
les
test
dec
xor
pop
jnp
jle
js
enter
adc
lea
cwtl
add
xchg
decl
pop
pop
push
mov
push
cmc
xchg
pop
sbb
add
lock
insb
int3
in
ljmp
outsl
rorl
and
into
add
mov
sub
or
cmc
test
or
shl
lret
mov
sub
pop
or
ss
fwait
adc
push
cmpsb
sub
mov
add
loopne
push
cltd
gs
xchg
jecxz
and
jmp
popa
sbb
std
xor
push
mov
or
jbe
popa
cmc
push
add
insb
aas
cmp
push
int
ds
out
pop
xor
in
adc
pop
test
insl
adc
add
rolb
inc
or
arpl
lods
sub
sub
inc
dec
lret
pop
jb
cld
cmp
xchg
lods
fidivs
push
mov
pushf
out
std
cltd
fistl
dec
aas
addb
into
jae
jp
jbe
pop
jl
shlb
add
lock
sbb
inc
pushf
lods
xor
lods
loope
test
fisttpll
add
xchg
andl
data16
inc
add
push
mov
or
pop
mov
add
icebp
outsl
scas
repz
hlt
mov
cmp
rcl
push
enter
mov
or
call
stos
out
mov
das
jbe
ret
jmp
add
xchg
aad
cmp
pop
test
outsb
xchg
repz
push
out
pop
xor
aas
fidivrl
jle
das
mov
data16
lahf
or
pop
add
push
fsubr
jnp
adc
addb
and
data16
rorb
js
jle
test
enter
cmp
js
mov
addl
xor
xchg
int
jno
notb
pushf
push
ret
inc
lret
jb
add
add
jle
or
aaa
shl
mov
inc
and
sbb
sbb
push
add
fisubrs
xchg
cld
movswl
sub
lock
add
pusha
add
push
lret
dec
outsb
pop
jns
jo
lcall
je
daa
test
pushf
mov
fisttpl
pop
lods
mov
ret
push
push
pop
lret
std
push
insb
mov
mov
cmp
add
lcall
stos
aad
cmp
add
pop
lret
sub
mov
ja
inc
add
add
into
lret
iret
fcomps
int
pop
push
mov
fwait
pop
fstpt
xor
mov
hlt
dec
cmp
mov
sbb
mov
adc
pop
icebp
inc
fdiv
shlb
push
jns
cmp
mov
dec
mov
or
div
repnz
cs
add
out
aad
add
rclb
in
jl
add
jp
jge
mov
jmp
mov
add
push
imulb
mov
sub
push
fwait
cmp
js
pop
aas
sar
lea
push
add
xchg
push
jg
mov
stc
pusha
add
xchg
out
repz
movsb
std
or
sbb
sub
add
imul
js
add
add
push
rcrl
dec
fcomps
push
pop
addb
in
sub
divb
push
xchg
xlat
loop
das
adc
call
test
pop
jne
cli
jb
scas
aad
ret
adc
jg
into
neg
push
add
xchg
sub
fstps
dec
add
adc
and
lcall
xchg
inc
daa
push
cmp
ja
out
xor
ficoms
dec
imul
xchg
out
scas
pushf
imul
dec
sub
xchg
inc
mov
add
mov
push
iret
or
add
mov
add
rcrb
jno
cmp
es
inc
add
insl
roll
cltd
in
add
stos
mov
cmp
add
imul
add
addb
inc
sti
aad
ljmp
add
mov
insb
dec
or
mov
inc
add
shlb
dec
mov
mov
repnz
scas
sahf
sarb
cmp
lods
repnz
jmp
push
mov
add
nop
or
in
stos
into
push
addr16
jo
scas
fisttpll
cmp
loop
in
xor
test
mov
cmpsl
jle
idivl
add
pushf
cmp
add
dec
lea
mov
mov
std
adc
mov
sub
xchg
xchg
push
sub
fnsave
push
xchg
rcrb
movsl
pop
mov
out
js
sbb
mov
outsb
sti
insl
add
cmp
mov
cmpsb
jp
addr16
mov
lahf
inc
popf
int3
arpl
movsl
push
movsl
xor
xchg
out
lea
test
inc
add
aam
clc
push
dec
inc
add
test
rorl
pop
sbb
add
inc
cmp
movsl
hlt
popa
mov
mov
jg
pop
int3
das
mov
aas
sub
xor
mov
xchg
in
inc
imul
xchg
pop
mov
lods
mov
es
pop
push
xchg
or
filds
mov
xchg
push
subl
imul
xchg
ja
stos
mov
add
cmp
dec
xor
push
push
cmp
or
mov
popa
mov
mov
jle
push
shlb
mov
fstpl
add
scas
mov
lock
ret
sbb
sbb
xor
cmp
scas
or
cwtl
lods
jo
jge
aaa
imul
fwait
lea
jle
fwait
add
cltd
ret
pop
in
or
je
int3
lods
insl
loope
in
adc
mov
add
mov
mov
cwtl
cmp
mov
rcl
push
ret
and
ficomps
mov
dec
dec
imul
test
xor
in
sbb
rorl
sbb
int
mov
sub
rolb
out
jae
mov
stos
add
repnz
rcl
jae
push
cli
xchg
jmp
cltd
mov
add
jge
add
add
sub
xchg
es
fimull
mov
cld
xchg
ja
dec
jo
icebp
push
push
pop
push
lret
jae
adc
and
insb
sbb
repnz
ja
cld
xchg
dec
or
xchg
sub
iret
pop
pop
mov
xor
or
adc
dec
and
pushf
push
repz
jp
inc
add
lods
outsb
xor
sbb
adc
movsb
cwtl
jg
mov
add
jle
push
fldln2
subl
fmull
mov
sub
add
inc
ds
sahf
repnz
fidivrs
cmpsb
stc
mov
insb
in
bound
push
cmp
or
pop
push
ja
fwait
mov
add
pop
and
popf
test
add
xor
inc
mov
push
jno
or
xlat
cmpsb
lcall
sub
or
fs
inc
push
aas
mov
pop
out
add
sbb
add
mov
jns
js
add
add
sti
sbb
jbe
jp
dec
pop
stc
mov
ss
fsubrl
pusha
add
cmp
mov
jno
mov
xchg
movl
rolb
inc
add
jp
jnp
mov
pushf
imul
adc
lods
test
dec
jo
mov
into
sbb
jmp
pop
incb
jmp
je
mov
test
push
addl
add
push
sub
fldt
pop
insl
pushf
mov
lcall
jle
mov
sub
adc
lock
data16
sbb
cmp
pop
pusha
add
mov
addb
push
jae
mov
cli
jge
cli
sbb
into
popa
test
movsl
mov
outsb
lahf
push
add
in
pop
pop
push
add
popf
sar
fwait
lods
fwait
jge
shll
jbe
add
add
pop
mov
mov
jno
scas
loop
xor
or
add
ficoml
orl
dec
mov
lock
jne
dec
jo
add
insl
xchg
inc
cmp
in
negl
push
add
sbb
mov
daa
add
in
pop
dec
xlat
lods
movsb
mov
and
mov
fsts
add
cltd
xchg
test
xor
addb
adc
sbb
inc
add
lret
push
add
out
jmp
add
xor
add
ja
jae
jmp
cwtl
jecxz
mov
repz
dec
loopne
push
cwtl
test
mov
in
push
jae
cmc
pop
and
xchg
dec
std
loope
out
mov
add
jo
call
rcrl
add
subl
imul
xchg
scas
dec
or
dec
adc
rcrb
pop
ffree
out
adc
and
popf
mov
dec
inc
add
mov
push
jo
mov
add
rcrl
stos
movsb
cmp
les
mov
jecxz
nop
mov
pusha
add
add
add
sti
fcoml
xchg
sahf
gs
test
sbb
jp
cs
std
ljmp
add
sbb
das
mov
repz
pusha
add
add
stos
fwait
cmp
xchg
cmp
cli
mov
pop
inc
jb
push
dec
addb
mov
inc
add
push
pusha
add
add
push
cli
fxch
sub
jbe
add
stc
add
std
call
popa
daa
mov
push
and
mov
aad
xor
mov
rorl
popa
xchg
arpl
pop
movsl
jmp
loope
loopne
push
pushf
stc
fsubrs
push
push
fcomip
xchg
add
es
add
sbb
enter
stc
push
add
bound
shll
add
lods
movsl
enter
adc
mov
lods
pushf
mov
add
push
mov
movlps
push
shl
lods
in
jae
adc
dec
call
push
adc
outsl
fsubrs
add
jl
inc
add
dec
out
adc
sub
idivl
mov
stos
std
xchg
sub
and
xchg
aaa
inc
inc
push
mov
xchg
mov
ss
rcl
mov
lds
jo
add
add
das
dec
aaa
jne
add
lahf
mov
in
icebp
adc
adc
fsubl
test
jp
adc
loop
xor
sbb
xchg
mov
mov
fstps
out
add
movb
xor
ds
pop
adc
adc
fidivs
push
mov
ss
push
add
fwait
into
addr16
push
aam
into
lret
mov
mov
mov
cmp
mov
pushf
xchg
cwtl
push
mov
out
out
lahf
or
jecxz
arpl
ret
mov
out
outsl
inc
sbb
mov
sub
xchg
test
stos
hlt
sub
out
jb
stc
push
test
mov
sti
mov
inc
add
dec
xor
js
jp
adc
mov
aaa
mov
and
add
pushf
repnz
add
fwait
jbe
inc
add
ret
fdivl
dec
adc
daa
push
add
and
shr
sub
dec
test
stc
sar
bnd
push
xchg
cld
lret
mov
mov
cld
adc
rorl
adc
add
stc
cmp
dec
xchg
pushf
and
in
jmp
mov
xchg
sub
jo
pop
xor
adc
imul
mov
cmc
jae
outsl
cmp
dec
aaa
mov
in
lods
fistpll
and
and
sub
cs
movb
mov
xor
mov
js
outsl
sub
rorl
push
mov
fidivrs
clc
or
dec
mov
add
adc
idivl
mov
mov
sub
push
les
int
cltd
addb
scas
sub
add
pusha
add
fucomip
or
add
imul
iret
scas
inc
add
sbb
mov
out
push
mov
inc
sbb
add
xor
daa
pop
push
cmp
cmpsl
inc
mov
sbb
xor
add
pop
fwait
rolb
pop
filds
repnz
fstl
add
lahf
jl
lods
cwtl
and
cmp
lods
jge
repnz
add
jmp
cmp
xor
jns
loop
in
into
aas
push
movsb
sub
shrl
orl
int3
arpl
sub
adc
or
sub
ljmp
popl
adc
pop
inc
mov
fstl
pop
sbb
scas
adc
mov
jns,pt
loopne
stos
cmp
fsubrp
int3
cmpsl
mov
mov
sbb
sti
sbb
fsubl
add
sub
jge
pop
push
push
jns
add
pop
inc
mov
cmp
inc
add
mov
inc
xchg
mov
sbb
add
mulb
emms
pushw
cmpsb
mov
bound
add
rolb
loopne
add
mov
mov
shll
mov
cmp
rcrb
shl
push
mov
mov
ds
jb
popf
sub
dec
in
enter
rclb
inc
sti
mov
outsb
sbb
xor
jg
jae
add
push
adc
mov
add
fcomps
jns
push
cmp
mov
insb
xchg
data16
xchg
in
pop
lea
mov
xchg
inc
out
shr
mov
pop
dec
stos
andl
mov
push
add
push
inc
xchg
daa
xor
dec
adc
cli
js
movsl
inc
dec
mov
add
pop
movb
test
fdivrl
add
cs
cltd
cwtl
and
fildll
or
add
pop
pop
mov
push
je
xorl
mov
xor
add
add
scas
imul
test
les
pop
adc
add
xlat
out
dec
fsubr
iret
imul
scas
scas
jo
hlt
push
pop
test
hlt
bound
fcompl
stc
bound
xchg
pushf
xchg
je
xchg
cld
rolb
loop
jbe
scas
imul
push
outsl
mov
outsl
sbb
pop
mov
adc
fidivs
and
dec
iret
mov
fcoms
insb
and
jp
pop
xor
push
imul
loope
push
push
ficoml
push
jle
adc
mov
add
in
xchg
add
mov
add
xchg
addr16
loope
fimuls
pop
mov
mov
sub
inc
add
sub
fstps
xor
inc
jmp
pop
rolb
xor
dec
data16
movsb
scas
xchg
jmp
stc
and
add
pop
in
and
pop
loope
lods
popf
pop
pop
lods
sub
xchg
cld
add
lcall
mov
js
leave
mov
rolb
add
pop
femms
ret
mov
es
mov
xorl
in
out
mov
push
dec
clc
cmp
call
testl
add
jmp
and
dec
leave
iret
push
bound
sbb
xlat
rolb
push
push
add
xor
stos
aad
int
jb
mov
add
or
sbb
icebp
xor
and
shll
testb
and
xchg
test
popf
mov
sbb
hlt
daa
rol
cwtl
enter
mov
aam
and
test
xor
xor
xor
roll
add
popa
pop
fwait
shr
lret
cmpsb
shrl
adc
ficoms
sarl
test
ss
fisttps
lods
mov
add
add
inc
aad
popa
push
out
inc
add
or
adc
mov
rcll
xlat
mull
popa
adc
test
jmp
sbb
addb
fisttps
jl
sub
jno
fstpt
nop
lods
mov
testb
inc
mov
in
in
movsl
sub
pop
fnsave
hlt
fnstcw
pop
fldenv
test
sub
add
stc
lret
stc
mov
fcompl
sub
mov
clc
cli
lock
scas
daa
jne,pt
insl
xor
add
pushf
dec
add
lret
pop
fbstp
sub
out
inc
add
fdivr
adc
repnz
jbe
dec
inc
add
cmpsb
repz
or
lods
and
sub
in
or
or
in
sub
pop
or
inc
add
cmpsl
dec
data16
lahf
or
shrl
mov
mov
mov
and
addb
pop
push
call
add
sub
movsb
mov
sbb
les
dec
pop
sahf
inc
add
jno
movsb
cmp
fwait
es
adc
sti
test
jle
cmp
adc
xchg
in
addb
xorl
mov
jge
ljmp
inc
add
sub
add
pop
out
xor
mov
cmp
ss
lret
add
push
lds
ss
pushf
ljmp
add
push
pusha
add
je
sbb
lret
mov
mov
outsb
add
fwait
hlt
cmp
jl
mov
push
add
sub
xor
jecxz
fs
mov
shrb
add
pop
dec
and
jnp
inc
fcomip
mov
xchg
rcrb
addb
jle
pop
daa
aad
dec
cmpl
fs
and
fsub
imul
mov
push
xlat
lods
or
aam
cwtl
outsl
fistps
add
rorb
adc
xlat
test
test
dec
pop
cmp
dec
scas
sbb
cld
stc
pop
cmpl
inc
add
xchg
sbb
add
sbb
adcl
pop
mov
lock
std
test
adc
loop
add
pop
fisttps
xor
xchg
add
shlb
loop
xchg
push
pop
nop
push
dec
pop
aas
test
mov
add
ds
fwait
loopne
jns
ja
xlat
addr16
insl
into
mov
lods
xchg
inc
xor
mov
lahf
into
mov
push
enter
push
cmc
cs
sbb
bound
mov
popa
insl
xchg
xor
fs
adc
add
mov
inc
xchg
and
pusha
add
mov
add
xor
sbb
cmpsl
shlb
sbb
add
add
mov
pop
test
jg
ret
add
test
dec
aad
mov
or
out
divl
xchg
xchg
test
in
sahf
aaa
lcall
sub
pop
and
jmp
xor
adc
add
sahf
daa
outsl
jb
push
pusha
add
lock
lock
gs
decl
in
mov
fldt
mov
mov
rolb
add
lds
mov
nop
mov
jb
push
pop
insb
xchg
outsb
cmpl
add
pop
dec
mov
xor
std
aas
and
imul
scas
mov
adc
jne
fdivr
sbb
testl
fwait
push
sbb
mov
addb
hlt
cmp
cmp
icebp
or
call
out
xchg
int3
inc
add
fisubrl
in
cmp
enter
push
testl
pop
mov
movsl
dec
pusha
add
dec
pop
bound
aad
jno
jnp
jl
or
add
add
sbb
add
sub
or
lds
push
inc
mov
sub
jae
xor
pop
fstpl
jge
add
dec
lret
mov
lcall
imul
bound
jb
add
jne
cltd
adc
repnz
sub
jecxz
mov
cli
js
notl
movsb
xchg
and
icebp
sub
inc
flds
mov
sbb
and
add
pop
push
add
cwtl
adc
add
add
inc
add
fdivrs
mov
dec
xchg
add
pop
pop
sbb
jnp
adc
mov
jbe
add
mov
lcall
movsl
inc
add
add
sbb
mulb
lcall
addb
popf
scas
lahf
dec
out
push
aam
dec
pusha
add
movb
push
jnp
sbb
jp
aad
pushf
pop
ror
mov
jp
pop
xchg
lret
idivl
push
mov
add
or
jl
mov
mov
aaa
bound
scas
shll
mov
ja
cwtl
add
shl
mov
loop
cltd
add
mov
stos
lret
or
ret
xchg
pop
add
inc
add
test
dec
in
xchg
imul
sub
arpl
pop
into
jb
loopne
and
push
lret
mov
movsl
sahf
mov
sub
add
fsubl
add
lods
stos
jne
insl
pop
leave
mov
sbb
and
aam
jle
add
cmovle
fiadds
incb
xor
sti
sbb
or
jae
icebp
xor
shll
and
add
cmpsl
popf
xchg
push
or
jg
xchg
lds
add
add
aam
cmp
push
inc
add
gs
inc
add
mov
out
rcrl
rolb
push
jle
add
and
inc
loope
adc
mov
mov
hlt
stos
jb
ljmp
sub
cvtps2pd
add
push
shrl
in
mov
stc
xorl
sbb
mov
push
test
loop
jno
pop
int
in
je
lods
scas
imul
aad
std
and
std
inc
add
rdmsr
clc
push
test
mov
test
out
enter
pop
adc
push
cmpl
adc
dec
push
xor
mov
in
jb
push
cmp
aad
pop
addb
dec
jb
loop
mov
xlat
test
pop
mov
sub
pusha
add
xchg
push
lret
xor
clc
inc
or
pop
cmp
add
and
shr
imul
mov
stc
movsl
outsb
cmp
pushf
and
arpl
testb
and
dec
sub
cmp
push
lahf
lret
neg
and
jae
sub
and
ljmp
sbb
add
ja
ds
add
aaa
mov
mov
dec
mov
or
les
pop
mov
add
imul
incb
lcall
xchg
dec
mov
sbb
lcall
mov
sbb
push
insl
push
dec
loop
xchg
lahf
add
sub
outsb
xor
xchg
lahf
stos
js
cmp
jp
xchg
sahf
mov
pop
das
xor
adc
movsl
roll
mov
add
adc
pop
mov
lcall
sub
sub
icebp
bts
or
iret
int
and
cmp
jns
mov
add
into
in
add
mov
inc
add
out
xor
or
and
inc
add
cmp
cs
popl
mov
lret
shrl
push
data16
mov
pop
dec
pop
inc
dec
daa
push
mov
add
sub
in
xor
add
loope
mov
cmp
lahf
lcall
repnz
jle
add
xchg
add
shr
aad
mov
daa
lahf
sub
jp
fcomps
call
add
cli
cwtl
pop
mov
add
mov
dec
mov
pop
mov
dec
push
add
ret
push
dec
insl
jnp
mov
addb
lods
pop
dec
icebp
mov
rol
xchg
pop
mov
add
cld
sub
lahf
xor
shll
dec
ljmp
jp
xchg
inc
add
scas
mov
jns
adc
add
add
filds
stos
adc
sbb
insb
leave
push
sbb
fsubl
fldenv
orl
fisttpl
cmp
add
mov
mov
add
sbb
xchg
das
sub
fmull
in
add
push
fbstp
js
cltd
push
add
popa
adc
fnstcw
mov
xor
hlt
mov
je,pt
add
sbb
add
fstpl
xor
add
xchg
lret
test
cmpsb
das
imul
xchg
mov
ffreep
add
and
out
jo
push
shl
xor
mov
stc
push
inc
mov
fistpll
pop
xchg
add
push
in
repz
mov
lds
mov
xchg
pop
add
inc
xchg
dec
cs
in
mov
adc
das
mov
add
inc
les
loopne
mov
add
add
sub
jge
or
ljmp
faddl
xchg
mov
sbb
mov
add
xchg
lret
xor
add
mov
inc
add
clc
inc
daa
in
add
stos
insl
push
xor
ja
in
cli
imul
addl
fnstenv
nop
fcoms
gs
add
imul
jbe
pop
push
imul
mov
dec
mov
add
pop
cmp
or
mov
punpckhdq
outsb
xchg
mov
out
loop
stos
and
jle
ja
inc
xchg
or
add
push
jbe
sub
movb
adc
jns
into
push
dec
loopne
and
mov
icebp
fcomi
jbe
xor
mov
jle
fdiv
cli
hlt
bound
fwait
mov
add
movsb
sti
mov
dec
call
mov
movsl
xor
cltd
leave
imul
add
lret
cltd
inc
add
push
mov
fisubrs
je
cltd
or
shl
fisttpl
leave
js
pop
pusha
add
add
es
lahf
mov
sbb
pop
lret
inc
out
les
dec
std
xchg
iret
jbe
sbb
and
clc
xchg
psubb
mov
add
xchg
jmp
ljmp
and
push
std
jecxz
xlat
cmpsl
adc
sub
je
jmp
cmpsl
mov
fnstsw
jbe
pop
cli
push
stos
hlt
adc
adc
xor
lret
out
daa
and
addb
mov
xlat
fiadds
fldcw
loope
insb
inc
add
imul
sub
dec
testb
nop
sub
add
and
lret
mov
jmp
icebp
mov
add
std
lods
mov
outsb
sbb
add
inc
add
add
pop
jns
xor
inc
andps
and
data16
or
test
inc
add
outsb
inc
ds
xor
push
nop
mov
scas
pop
je
rorb
xchg
xor
adc
push
lret
or
dec
add
add
test
test
xor
cmc
xchg
arpl
mov
popa
push
add
jbe
add
and
addr16
gs
inc
icebp
push
xor
aad
add
cmp
pop
xchg
xchg
adc
fsubrl
add
repz
inc
dec
push
mov
dec
insl
fstpt
outsl
dec
daa
jnp
add
cmpsb
xchg
jge
mov
or
cwtl
pop
inc
add
push
push
xor
add
or
fs
mov
popa
addb
rolb
jmp
outsb
insl
loope
fldpi
sub
inc
mov
add
xchg
scas
dec
addb
shl
repnz
xor
loopne
fdivrp
dec
cmpsl
loop
add
jbe
insl
test
leave
add
add
outsb
fsubr
ljmp
adc
and
inc
fists
xor
sbb
mov
push
xchg
jl
push
xor
mov
dec
aam
ljmp
popf
jbe
out
add
test
shll
mov
in
cli
pop
mov
adc
pop
das
aas
test
lock
stos
xchg
inc
add
push
add
inc
mov
xor
and
adc
pop
inc
jl
sub
inc
add
fs
add
mov
or
xor
mov
jecxz
jbe
add
inc
add
mov
adc
cwtl
out
int3
dec
mov
jmp
loopne
mov
rolb
bound
bound
addr16
ljmp
imul
push
ret
stc
dec
jg
add
js
mov
xchg
pop
mov
ljmp
andl
xchg
jmp
out
out
js
lcall
push
xor
mov
lods
mov
add
ret
jge
enter
sti
and
lahf
mov
pop
dec
rorb
xchg
fldcw
jmp
ja
mov
inc
xlat
pop
lret
repz
in
into
dec
outsl
adc
ss
mov
add
outsl
dec
xchg
fadds
fistpll
sub
add
jae
lcall
push
jno
in
or
adc
jmp
add
incb
add
std
mov
inc
add
test
sub
es
add
or
sub
lret
insl
sub
aaa
mov
dec
inc
adc
ret
sbb
push
popa
call
lcall
stos
inc
das
pop
mov
add
leave
in
addb
sub
jmp
popf
icebp
mov
in
jno
mov
xchg
mov
add
push
bound
inc
pop
imul
sub
cmp
fisubrl
in
cld
cmp
add
sbb
in
mov
test
js
mov
dec
iret
adc
outsl
pop
mov
xchg
outsb
add
sub
cmp
push
test
push
fwait
mov
out
lea
pop
push
lds
cld
xor
adc
dec
fsubl
in
add
stos
cmp
xchg
mov
jbe
les
addr16
shrb
aas
stos
cmp
fnsave
dec
loope
add
movsl
and
sub
femms
push
and
imul
and
cld
or
inc
add
pushf
fsts
popf
scas
mull
aam
and
xchg
mov
popa
jbe,pt
lods
cli
out
pop
fidivs
ljmp
inc
add
adc
movb
test
pop
aaa
mov
jp
rol
or
cld
popa
insl
jge
idivl
jns
leave
and
push
add
adc
mov
cwtl
mov
jp
rolb
sarb
fdiv
and
jle
scas
pop
movb
xor
popf
stc
xchg
xor
movsl
push
push
jns
mov
inc
push
out
test
das
and
mov
mov
sbb
jecxz
push
pop
fs
add
add
push
add
loope
dec
mov
mov
and
pop
inc
add
add
mov
sahf
es
xchg
fs
sarb
add
mov
fldt
sbb
mov
add
dec
mov
addb
movsl
cmp
sbb
loope
sub
fcompl
outsl
mov
es
pop
out
imul
movsl
mov
cld
dec
testb
lds
inc
jo
xchg
add
mov
xchg
mov
inc
add
inc
or
add
rcll
and
push
and
jb
dec
arpl
and
jmp
imul
add
cwtl
xor
adc
js
in
insb
mov
stos
in
xchg
and
sub
mov
movsb
ds
mov
inc
add
push
mov
adc
add
outsb
negl
add
adc
jns
pushf
cld
lock
inc
add
add
push
mov
pop
jge
push
jg
sbb
mov
jno
add
inc
add
pop
fisubrl
push
idivb
ret
xchg
dec
mov
push
xchg
push
mov
and
mov
scas
dec
mov
mov
dec
add
sub
xor
pop
ror
mov
insb
lahf
sbb
sub
leave
push
lods
leave
dec
adc
lock
lret
xor
sbbl
in
dec
vandpd
add
inc
and
push
xchg
or
stc
es
push
xchg
pop
ds
leave
movsb
pushf
push
incl
pop
ja
mov
imul
xchg
addb
mov
popf
inc
add
loop
mov
cmp
add
xchg
call
sbb
pop
cmp
pop
imul
testl
or
rclb
fsubrl
xor
add
je
add
stos
inc
add
test
sahf
ret
hlt
sub
add
cld
lods
insl
imul
and
call
inc
push
insl
pushl
add
int3
cmp
int
mov
ret
mov
xchg
jbe
mov
add
mov
in
cmp
adc
das
call
jl
jbe
insl
clc
cmp
push
mov
sub
add
test
hlt
popa
or
xorl
push
and
pop
pop
xor
or
ret
adc
stc
adc
jg
sub
pop
lahf
sbb
add
cmp
xchg
cmp
mov
xor
ja
jno
loope
fmuls
adc
inc
add
push
loopne
ljmp
aas
fstpl
icebp
sbb
add
sahf
inc
add
pop
in
inc
add
xor
mov
mov
imul
dec
mov
add
push
sbb
cli
inc
sub
shr
das
cld
icebp
cmp
call
add
inc
lcall
stc
push
dec
pop
popa
push
cwtl
mov
mov
xchg
insl
cmp
lgs
pop
mov
clc
inc
add
xchg
mov
add
rorb
push
add
lods
lods
bound
fldt
and
scas
addb
dec
mov
testb
adc
xor
clc
jmp
add
lea
gs
negl
dec
pop
fdivr
mov
insl
push
aam
out
outsl
adc
add
rolb
jo
dec
inc
add
data16
or
jns
test
fsubr
xchg
cwtl
inc
add
mov
enter
add
mov
ds
ss
call
cmp
sbb
lods
lret
dec
mov
cmp
jmp
mov
add
or
xchg
inc
add
push
jno
push
fimuls
aaa
clc
mov
sbb
cmp
fisttps
mov
push
movsb
ror
js
add
aam
sub
add
cmpsb
add
leave
or
out
xchg
sarl
xchg
inc
add
sarb
rcll
and
cmpsl
pop
data16
dec
pop
push
xchg
fwait
push
push
jl
add
push
add
jbe
pop
and
repnz
cwtl
sbb
addb
iret
add
addb
decb
adc
push
ret
stos
dec
or
mov
pop
fsubl
test
jl
cmp
cs
sub
cmp
cmpl
popf
test
mov
ret
insl
xor
push
mov
cmpsl
movsl
sbb
add
xchg
mov
mov
cwtl
inc
add
call
or
ljmp
add
popa
dec
jg
add
push
shlb
and
and
fdivp
mov
mov
mul
fs
cmc
or
or
xor
ret
rol
add
mov
stc
sbb
jb
loopne
xchg
push
dec
pop
mov
sahf
sarb
bnd
add
push
push
aas
jl
push
imul
cltd
mov
sbb
add
loop
push
rorb
insl
aaa
cmpsl
push
mov
clc
mov
push
sbb
dec
in
mov
add
add
lods
leave
xor
mov
push
sbb
push
add
adc
fisttpl
mov
repz
mov
jbe
xchg
mov
inc
add
out
push
xor
outsb
sbb
add
jl
lahf
stos
sbb
lret
xchg
inc
add
mov
lods
ret
pusha
add
test
aaa
inc
add
sbb
mov
add
insb
mov
inc
add
sub
mov
add
cmp
lcall
gs
shll
cmp
out
jnp
lods
lcall
jnp
addb
adc
mov
mov
xchg
xor
push
aas
out
mov
repnz
jmp
mov
mov
daa
mov
fwait
cmp
inc
add
xchg
loop
pop
push
mov
inc
xchg
mov
dec
in
adc
lahf
cltd
stos
das
sub
sbb
fisubl
cwtl
xchg
mov
add
xchg
mov
clc
inc
add
fidivrl
fsubs
inc
add
sub
loop
adc
insl
push
cmp
ret
jg
or
add
xchg
xor
jne
les
leave
pop
xchg
mov
repnz
sarl
add
add
cmpl
add
mov
jmp
icebp
xor
xchg
push
inc
add
ffreep
add
movsl
sbb
push
inc
std
mov
and
popa
xor
dec
sbb
repnz
loope
fiadds
mov
adc
cld
adc
sbb
cmp
pop
sahf
jmp
negl
mov
or
pop
xor
xchg
insb
int
add
add
aaa
mov
push
push
push
add
dec
cmpl
cwtl
xor
fnsave
xchg
lret
mov
imul
push
xchg
in
xchg
mov
rolb
jg
add
movb
rorl
add
xchg
andl
xchg
aad
pop
cmpsl
out
add
add
mov
xor
ret
xor
aad
sub
lds
dec
add
add
mov
pop
mov
add
cs
pop
out
ficompl
push
ficoml
dec
or
push
scas
xchg
cmp
pop
lret
push
fistpll
rcll
push
xchg
popf
std
mov
negb
mov
cmp
pop
push
popa
jg
rcll
sbb
shrb
rcll
aam
push
hlt
push
lods
xchg
dec
mov
mov
sub
subl
lea
cmp
lcall
or
add
shll
or
lret
mov
or
mov
pop
addl
jb
add
mov
xor
pop
xchg
xor
mov
or
jmp
and
rol
add
mov
xchg
or
imul
xchg
lock
rorb
mov
mov
lds
loopne
add
cmp
es
xor
ja
adc
and
call
xchg
aam
insb
adc
pushf
cmc
lock
jo
lea
mov
dec
ja
and
mov
dec
push
push
dec
pop
inc
add
sti
clc
pop
mov
ss
xchg
and
inc
cmpl
pusha
add
adc
sub
add
add
sbb
push
test
adc
xor
fadds
dec
mov
out
sarl
sub
lcall
loope
add
mov
sub
in
push
pop
mov
mov
ret
xor
mov
xchg
dec
nop
and
fwait
mov
add
out
shll
mov
shrl
icebp
ds
mov
pop
data16
dec
mov
sbb
push
out
cmpsb
jge
push
js
mov
inc
add
rolb
dec
std
xor
popf
insl
pushf
shrl
inc
add
push
add
and
pushf
daa
in
jmp
xor
arpl
cmpsb
push
mov
ret
sub
cli
cli
lcall
and
or
cs
push
fstl
enter
xchg
int
bound
and
pop
rolb
inc
add
and
repz
mov
dec
repnz
xchg
ja
js
add
sti
fiaddl
mov
movsl
dec
push
lods
xor
je
out
mov
adc
es
mov
mov
call
hlt
imul
push
out
out
movsl
insb
dec
and
daa
push
jecxz
test
lods
mov
fisttpl
add
mov
cltd
fbld
add
sub
outsb
aas
or
addl
imul
push
mov
add
push
insl
fdivrl
add
inc
fmull
js
push
rolb
xchg
dec
adc
cltd
lcall
dec
bound
jne
mov
xor
mov
pop
into
lds
sub
sub
pop
push
sub
fdivs
icebp
pop
sar
mov
addl
in
inc
ds
jle
lock
loope
xor
or
sbb
addb
add
pop
outsl
mov
push
mov
mov
test
or
xor
fidivrs
jmp
add
mov
inc
add
sub
inc
shr
jge
negb
ret
mov
call
adc
add
mov
add
adc
push
jl
push
push
js
push
xor
dec
sahf
test
mov
dec
inc
add
jb
shll
jb
add
or
and
mov
mov
pop
xchg
mov
repnz
movsb
adc
add
movsb
dec
pop
pop
daa
jno
aad
call
rolb
pop
xor
cli
shr
xor
notl
jg
mov
push
push
dec
mov
add
shll
std
in
push
fdiv
test
imul
jg
pusha
add
hlt
shll
rcll
nop
lea
xchg
mov
scas
cmp
bound
enter
xor
vandnps
and
jae
push
addb
cltd
cwtl
pop
and
cmc
dec
popf
loope
push
add
and
dec
cmc
ror
movb
std
dec
out
jge
dec
shl
add
push
pusha
add
insb
cltd
dec
data16
mov
pop
pop
push
mov
vunpcklps
jg
leave
pop
mov
insl
fdivrl
fucomi
xchg
mov
mov
xchg
jno
iret
out
mov
repnz
mov
and
shrl
das
push
rolb
aam
data16
xor
fisttps
add
adcl
cmp
add
push
inc
aas
cmp
dec
negl
dec
or
mov
hlt
inc
test
xchg
lret
mov
and
mov
mov
nop
mov
mov
add
shl
jmp
pop
xchg
nop
outsb
pop
lret
lahf
dec
inc
add
in
call
into
xchg
nop
jbe
fwait
sub
and
fcoml
push
std
jp
jne
loop
xchg
roll
scas
and
xor
lds
and
add
testb
in
sbb
add
adc
nop
dec
popa
mov
or
fcmovbe
fildll
fs
fcompl
add
rcr
fisubrl
pushf
inc
add
pusha
add
mov
in
addb
xchg
push
sub
insb
fstpl
aaa
mov
jmp
adc
mov
jnp
sub
ds
dec
cmpsl
mov
add
shll
sub
jmp
ret
mov
jecxz
add
fldt
imul
add
fsubl
dec
mov
inc
popa
dec
and
pop
cli
sub
es
push
mov
add
xchg
loop
jge
dec
xchg
inc
xor
push
fidivs
add
fadds
scas
jnp
outsl
fisubrs
cli
jle
add
in
push
xchg
stc
stos
push
ss
repnz
cli
in
ret
fnstcw
in
xor
int3
mov
add
cmp
flds
inc
add
cmp
lock
lock
add
add
test
push
add
add
or
xor
mov
mov
mov
xchg
xchg
movsl
insb
pop
repnz
cmpsb
push
lcall
add
bound
aas
mov
jo
jae
jns
adc
push
inc
add
pop
sbb
in
testl
in
mov
add
lahf
adc
jbe
out
test
mov
ss
sbb
add
sbb
sub
popa
pop
sub
shll
mov
pop
divb
push
add
xor
xor
lods
add
sbb
pop
jae
add
pusha
add
gs
lret
sub
nop
inc
pop
call
push
iret
test
sub
add
pushf
int3
hlt
outsl
mov
je
add
xchg
lret
cmp
daa
adc
add
fiadds
imul
pop
test
push
scas
mov
dec
and
mov
ss
movsb
data16
dec
or
add
xchg
xchg
jecxz
imul
pop
lods
adc
and
in
outsl
sti
lcall
jae
cmp
psllw
and
sbb
jbe
xor
lret
xor
pop
adc
jno
mov
test
inc
add
clc
addr16
mov
lret
jge
aaa
fidivl
dec
adc
fbld
sub
loopne
imul
or
test
add
in
test
jecxz
bound
add
add
dec
inc
add
fwait
lods
push
jle
sub
add
fisubrs
xor
pop
sti
int
sbb
add
mov
std
ja
rclb
call
mov
mov
ljmp
lcall
jbe
insl
loope
stos
imul
les
sbb
mov
xor
imul
sbb
stos
js
fidivrl
and
movsl
xchg
mov
add
sbb
add
add
sbb
testl
movsb
addb
bound
xchg
cld
dec
add
movb
rolb
add
popf
pop
das
cmp
adc
aad
dec
push
pop
xchg
pushf
adc
and
jo
add
add
add
xor
cmpl
rcll
dec
jmp
gs
or
add
xlat
addb
jle
cltd
gs
jle
scas
cwtl
inc
pop
dec
push
emms
lret
dec
addb
lds
enter
arpl
mov
ljmp
dec
cmc
and
add
cltd
mov
dec
hlt
test
int
mov
jae
fiadds
sarl
xchg
ret
sub
rorb
dec
xor
call
movsl
mov
fsubr
call
sbb
xchg
mov
add
add
leave
inc
add
into
and
out
adc
inc
test
adc
out
dec
sbb
faddp
mov
xchg
dec
inc
xchg
stc
cmpsl
out
pusha
add
pop
mov
pop
xor
stc
cmp
int
sbb
outsb
fcompl
dec
js
mov
cs
popf
add
add
pop
daa
mov
and
pop
jbe
adc
push
xchg
pop
jmp
dec
in
or
fildll
repnz
push
int3
fisubrs
xor
cmp
loope
in
add
mov
push
aaa
xchg
in
or
test
daa
mov
pop
mov
push
shlb
xchg
cmp
mov
lret
cltd
xchg
in
in
test
fwait
scas
sti
xchg
and
out
rolb
into
insl
ss
mov
ja
enter
xchg
or
ret
xchg
push
xor
sti
rcrb
jge
mov
sti
sbb
jae
xor
xor
mov
aaa
scas
lock
sub
cs
mov
sub
mov
adc
add
adc
cmc
jmp
sub
lods
mov
scas
mov
inc
add
add
stos
out
in
addb
push
bound
xchg
stos
xor
pop
sbb
and
cmc
xchg
rolb
dec
mov
mov
pop
push
cmc
pop
lods
dec
std
popf
inc
int3
cmpsb
cmp
jmp
ljmp
orl
popa
iret
into
xchg
gs
mov
mov
cmp
push
cmp
idivb
xchg
adc
dec
mov
aas
rcrb
popa
dec
addb
lahf
or
add
add
andl
xchg
and
inc
jmp
lods
dec
cs
leave
mov
pop
jno
popa
std
lods
fisttpll
cwtl
or
nop
push
add
or
psraw
stos
push
lret
pusha
add
repnz
push
cld
aad
jnp
xchg
xchg
pop
aad
cmpsb
sub
mov
stos
pusha
add
add
in
imul
inc
add
test
mov
jp
sahf
ror
fwait
les
jmp
push
dec
in
call
aaa
sub
mov
int3
adc
pop
punpckldq
cmp
movb
xchg
inc
add
out
pop
mov
adc
outsl
icebp
cmpsl
push
pushf
mov
adc
sub
ja
dec
jnp
popf
repz
test
out
aad
sub
ret
enter
lock
mov
pop
insb
pmuludq
cli
inc
add
lock
movb
and
xor
test
sub
es
sahf
jb,pn
pop
dec
nop
in
sub
xor
lret
jmp
les
sbb
mov
add
ds
inc
in
shrl
sub
test
lret
ja
sahf
cmpl
push
xchg
gs
inc
add
negb
mov
movb
add
add
cmp
add
jb
fcoms
cmp
push
les
inc
adc
and
and
push
cmp
push
add
jecxz
cmp
mov
add
ljmp
test
bt
and
call
xchg
in
scas
mov
sub
pop
push
fstp
sub
push
lods
adc
pushf
call
mov
sbb
add
xchg
nop
mov
xchg
cmp
inc
add
mov
inc
mov
inc
add
lcall
sahf
jb
xchg
sub
xchg
fildl
add
rcrl
mov
jmp
fisttpl
and
adc
add
aas
adc
and
scas
mov
faddp
sahf
jnp
out
movsb
repz
and
add
rolb
cmpsl
or
jnp
nop
xor
pop
adc
rolb
add
out
cmp
iret
sbb
cmp
add
repz
pop
xor
sbb
les
cltd
dec
mov
sarl
shll
cmpsb
cmp
add
lea
inc
xor
ficomps
or
mov
jmp
js
xchg
data16
push
insl
insl
iret
or
sti
outsb
inc
sbb
stos
xor
pop
hlt
and
push
in
pusha
add
out
movsb
inc
add
or
mov
or
xor
out
push
dec
sbb
push
push
cmp
movsb
sbb
lret
jmp
jmp
inc
add
add
add
mov
into
push
add
jle
addb
addb
inc
inc
add
add
addb
fcmovne
xchg
lret
dec
adcl
dec
push
int3
jmp
sti
in
test
jbe
mov
mov
pop
and
xor
pop
cmp
sbb
int3
lea
in
jecxz
std
icebp
jmp
rorl
outsb
push
out
arpl
mov
xchg
arpl
mov
movsl
mov
sub
stos
jnp
jbe
and
je
sahf
mov
jl
pop
adc
xlat
adc
shll
jbe
xor
fdivl
pop
inc
add
pop
mov
mov
jge
aaa
pop
push
clc
push
mov
jae
iret
rcll
xchg
mov
adc
or
enter
pop
pop
pop
inc
add
cmp
loopne
push
hlt
push
add
scas
mov
std
push
popf
mov
add
adc
sbb
fs
dec
cmpsb
add
push
iret
out
pop
xor
add
pop
mov
add
ss
addb
fildl
and
sub
enter
jle
stos
pushf
xor
push
sub
out
lret
out
mov
dec
mov
je
and
xor
inc
add
mov
lds
push
outsb
loopne
add
daa
mov
add
loope
fldl
outsb
stos
cmp
movb
push
push
test
dec
mov
cmp
adc
mov
lods
out
out
mov
cmp
mov
cmc
into
leave
out
inc
or
cmc
mov
add
add
push
jl
shlb
adc
addl
xchg
mov
mov
mov
and
mov
cli
adc
mov
icebp
mov
sti
in
dec
lcall
outsl
hlt
je
ja
cmp
daa
lahf
jnp
push
cmp
xchg
push
arpl
stos
cmp
xlat
cmp
dec
sub
lds
mov
add
das
ja
fldl
inc
add
pop
cmp
add
test
movsb
sbb
orl
add
cltd
das
adc
adc
push
les
jae
xor
push
mov
in
scas
in
popf
das
shl
daa
imul
faddl
jbe
push
ret
pushf
les
test
or
sub
iret
xchg
mov
mov
mov
das
cmp
call
out
outsl
imul
add
dec
inc
add
ljmp
or
dec
movb
bnd
xchg
subl
inc
add
cmpsb
xchg
test
pop
xchg
loop
mov
sbb
add
sbb
dec
adc
xlat
xchg
xchg
and
lahf
cld
insb
in
shll
iret
cmp
loopne
push
rolb
out
dec
mov
dec
sbb
mull
int3
daa
mov
cli
repnz
les
mov
push
je
xchg
push
jns
es
xorl
sub
adc
sarl
cltd
inc
cwtl
push
add
mov
mov
ljmp
movb
outsl
xor
push
pop
ss
sti
sub
addb
mov
mov
les
inc
add
add
add
data16
xchg
ficompl
cmpsl
daa
and
jo
xchg
lods
je
mov
icebp
push
and
pop
aaa
pop
mov
add
xor
test
mov
mov
fs
mov
sarl
xor
and
mov
shl
add
je
hlt
int3
mov
inc
stos
sub
mov
inc
add
push
mov
lea
xchg
mov
int3
cmc
or
stc
adc
aad
dec
out
push
gs
sbb
dec
cmpsl
xor
xchg
dec
repz
shl
push
loopne
jp
or
xor
dec
inc
sub
jb
lea
inc
jno
fcoms
sahf
sub
push
inc
sub
dec
mul
adc
jne
imul
sbb
jns
rolb
movb
popa
push
in
push
add
pop
cmpl
loope
pop
push
mov
test
add
insl
cmp
xor
mov
pop
rolb
ret
jns
xchg
pop
lret
and
push
cmc
fdivs
push
mov
stos
xchg
pop
and
mov
add
fimull
cs
ja
add
dec
mov
and
inc
cmc
mov
das
and
cmp
lock
lahf
adc
lds
push
bound
filds
icebp
mov
add
adc
cmp
add
add
cmp
gs
rcrb
test
cmpl
data16
mov
sub
push
jae
pop
iret
mov
mov
mov
sub
xchg
push
cmp
enter
ljmp
shll
repz
bnd
mov
inc
jb
or
cltd
xor
movsl
mov
xchg
cmpsl
pop
popa
mov
add
lahf
sarl
adc
xchg
incb
xor
xor
pop
shrb
xor
lahf
leave
cmpsb
ret
adc
mov
or
rclb
fs
fisttpll
sahf
cmp
adc
xchg
lret
scas
lods
sbb
xor
and
shrb
adcl
jle
push
test
cmp
xor
sub
call
add
cwtl
mov
sbb
push
les
divl
sbbl
mov
sub
fstps
push
movsl
fs
mov
fs
movsl
test
sarb
in
pusha
add
loopne
inc
add
movsl
lods
sbb
cmpsb
cmovnp
jae
js
pop
mov
jg
in
xlat
or
and
add
xchg
ja
cli
add
arpl
cmp
imul
lods
jg
ret
xor
mov
mov
lods
pop
sbb
mov
add
mov
push
add
xor
xor
js
rolb
movl
fistps
jns
cmp
push
loope
dec
int3
int
jnp
addb
xchg
xor
xor
jae
lret
push
pop
fsubrl
inc
add
mov
jl
enter
mov
and
pop
lock
mov
inc
add
xlat
adc
lods
mov
mov
cmp
ret
inc
add
mov
mov
dec
add
and
rorl
add
cmp
jno
xchg
sub
xor
popa
xor
add
add
add
mov
add
pop
pusha
add
pushf
sti
lds
jmp
in
repz
ss
lahf
adc
add
repz
ljmp
or
fidivs
cmp
jecxz
mov
xor
jp
ret
aam
add
fmuls
pop
cmp
fisubrs
ret
jg
sbb
or
xchg
rorb
and
test
push
add
push
jle
jnp
xor
cmp
dec
jmp
jecxz
sbb
pop
arpl
shl
dec
or
sbb
jae
call
repnz
mov
inc
jge
dec
out
pop
loop
outsb
pop
add
and
jno
mov
addb
add
add
sbb
dec
lods
jecxz
lods
mov
adc
mov
cmp
cmpsl
push
movsl
or
inc
xchg
dec
lea
mov
movsl
rolb
sbb
inc
add
inc
cmp
mov
xchg
mov
xchg
pop
push
jp
add
xlat
jnp
shlb
mov
jp
out
adc
ficoms
stc
add
mov
xor
sub
inc
add
rcll
jg
push
inc
mov
adc
push
and
out
ds
push
mov
sub
pop
inc
add
ss
scas
sub
repz
sub
std
add
mov
fcompl
push
or
mov
std
addl
js
repnz
add
loopne
in
call
dec
enter
rolb
xor
test
sub
addb
inc
add
and
shrb
push
jl
push
cld
fwait
mov
call
loopne
adc
daa
addb
insl
call
in
adc
in
enter
imul
shlb
add
out
cmp
in
imul
pop
sbbl
add
test
lea
adc
inc
add
test
jne
faddl
in
pop
mov
mov
rorl
xchg
xchg
lea
pop
adc
rcrl
jns
xchg
push
dec
and
in
mov
pop
mov
faddp
add
fcomps
call
daa
add
sub
outsl
outsl
mov
popa
xor
xchg
scas
or
movsb
cmpsb
shll
mov
ss
add
mov
adc
std
rcl
ja
outsl
nop
mov
add
cmpsb
lea
add
push
jbe
xchg
pushl
xor
xchg
sbb
add
add
aam
mov
add
mov
mov
mov
add
lret
push
jne
add
add
or
leave
xchg
push
movsb
lds
scas
adc
pop
pop
push
and
fidivl
push
mov
add
lock
insl
jns
sub
stc
cmp
jle
out
mov
ret
mov
decb
mov
pop
popa
pop
ss
fisubrs
ds
and
mov
loop
in
push
mov
push
and
jge
or
push
ss
xchg
js
int3
add
out
daa
jle
adc
movb
add
movb
cld
int
mov
es
add
test
scas
jo
pop
sbbl
push
fiaddl
jl
rolb
push
std
adc
pop
hlt
in
dec
mov
mov
xor
add
gs
cltd
sbb
or
in
adc
pop
imul
jecxz
movb
adc
addr16
inc
das
mov
adc
rolb
sbb
sbb
sub
repnz
xor
jns
xor
ja
pop
sub
cmpsl
mov
push
sbb
mov
loop
test
test
mov
pop
and
int
in
xchg
or
in
xchg
out
in
mov
shlb
add
mov
xchg
mov
aad
out
mov
mov
cmpsl
inc
aam
test
mov
divb
add
adc
jl
ja
scas
lcall
lock
push
out
sbb
dec
jg
popa
jp
enter
mov
jns
fwait
xor
icebp
mov
mov
out
add
addr16
ret
dec
orl
aad
rcll
push
mov
fldt
sbb
mov
aad
les
push
push
add
and
ret
add
dec
cld
insb
lret
cld
add
call
mov
sahf
aam
lods
mov
push
test
push
add
dec
aam
xchg
sbb
lret
jmp
adc
stos
or
push
mov
pusha
add
push
std
sti
mov
lcall
pop
cli
loopne
icebp
aas
mov
test
dec
xchg
xor
push
std
rcll
xor
popf
inc
add
cmp
pop
mov
sbb
in
inc
mov
xchg
scas
dec
add
or
jle
leave
fmull
inc
push
addr16
test
lret
jne
push
mov
add
pusha
add
arpl
xchg
xchg
cld
mov
push
add
cmp
mov
and
aad
sbb
cwtl
std
les
sbbl
xor
ret
in
test
pop
jecxz
ss
repnz
cli
int
mov
xor
dec
push
mov
leave
lods
sti
mov
add
add
add
clc
xchg
push
mov
daa
test
stc
sbb
add
mov
sub
add
out
mov
addb
cmpsl
push
push
imul
mov
mov
inc
add
mov
pop
xchg
push
movb
cld
dec
inc
add
jo
lea
push
sbb
push
mov
lcall
pop
push
mov
and
dec
insb
fwait
jns
dec
inc
test
sbb
inc
add
pushf
ret
pop
inc
add
cmp
loopne
inc
sub
jae
sbb
add
xlat
cwtd
sub
pop
xor
xor
lret
sub
xor
mov
xor
add
mov
add
mov
mov
cld
sbb
stc
jg
les
sub
fs
les
sbb
inc
test
adc
mov
jb
add
push
repnz
add
sahf
jp
in
iret
scas
xchg
cmp
movb
fidivl
sbb
pop
or
adc
aas
scas
bnd
mov
pop
lret
mov
cmp
cmc
push
inc
add
ja
bound
jnp
insb
cmc
pop
jecxz
xchg
sub
and
in
bound
sbb
add
pop
xchg
loop
and
add
jnp
mov
dec
fwait
loop
mov
test
cmp
rcl
cmpsb
xchg
sbb
js
sub
into
pop
movsl
lods
stos
cmp
add
fs
psubusw
std
gs
jno
int3
rclb
cmp
call
and
push
add
lret
add
add
test
mov
loopne
ret
fidivs
fldl
cwtl
adc
dec
out
mov
rcl
push
pop
cmc
cmovno
cmpsl
cmp
add
jle
fiaddl
ja
outsb
leave
jno
pop
movl
add
iret
int
mov
push
sub
cmp
sbb
adc
cwtl
rolb
add
lret
pop
fcomps
movsb
adc
out
cmpsb
repnz
int
add
push
and
lcall
jg
leave
xchg
fstl
push
push
mov
insb
insb
imul
mov
adc
pop
cld
leave
jnp
ss
pop
jg
add
stc
add
add
add
jb
lahf
lcall
add
mov
jne
js
or
inc
add
or
or
enter
imul
dec
dec
sbb
pusha
add
insb
les
fnstenv
xlat
mov
mov
mov
or
inc
add
push
mov
push
jo
xchg
dec
mov
fldenv
fisttps
cmp
addb
notb
xor
popa
out
sub
or
mov
cs
pop
ja
ret
scas
lret
cmp
fwait
mov
lcall
xor
cmpsb
jl
sahf
cmpsl
mov
add
push
loop
xor
cs
imul
movsl
jnp
and
out
push
xor
cli
jnp
aaa
xchg
and
or
cmp
inc
add
add
mov
dec
test
and
push
add
pop
ret
xchg
lods
out
leave
xchg
ljmp
add
dec
or
sbb
fcoml
jle
add
les
lock
xor
in
xchg
shrl
fisubl
test
add
sub
or
or
add
repz
fcompl
std
movb
js
fs
in
test
test
and
bound
xchg
out
sub
aam
shlb
inc
and
xchg
faddl
dec
xor
sub
fcom
inc
mov
push
push
push
mov
mov
push
or
hlt
xor
fcomps
and
mov
lret
dec
xchg
ret
sbb
notl
add
xchg
repnz
lret
dec
stos
rcrb
ret
daa
je
jle
mov
aaa
cltd
lods
cmp
add
pop
stos
cwtl
testl
xchg
addb
movsb
push
mov
sub
int3
mov
sbb
add
add
in
jp
sbb
mov
fwait
mov
shll
cmp
stos
mov
adc
cmp
add
mov
add
rcrl
dec
inc
ret
xor
ljmp
repnz
lods
data16
jne
stos
push
mov
dec
arpl
inc
addb
add
add
mov
add
cmp
or
mov
push
add
test
pushf
push
pop
mov
cltd
test
inc
add
mov
or
rcrb
outsl
inc
fistps
rorl
inc
ret
cli
mov
xor
mov
add
dec
mov
loop,pn
add
mov
add
cwtl
mov
add
pop
adc
pop
bound
data16
mov
fadds
add
jae
popf
mov
push
or
sbb
test
arpl
lahf
lret
dec
push
inc
mov
dec
mulb
ds
les
shrl
in
dec
jg
sbb
push
sub
mov
subl
xor
and
shll
or
imul
fcompl
stc
fcmovnb
cltd
std
jo
and
sub
rcll
and
jno
pusha
add
shl
into
mov
sbb
add
shr
insb
adc
test
inc
inc
scas
mov
sbb
add
cmp
data16
bound
lcall
outsb
in
add
jg
das
xchg
ja
mov
movl
xor
stos
inc
add
add
xor
push
xor
push
stos
mov
ret
xchg
loopne
addr16
add
inc
add
int
jmp
pop
jecxz
push
sub
jnp
fldenv
jns
cmp
push
mov
and
std
mov
rolb
in
aam
mov
dec
lds
mov
pop
add
xchg
or
or
jbe
pop
mov
adc
cmp
dec
sbb
jb
scas
inc
add
clc
mov
lods
or
mov
add
leave
mov
fdivrl
fnstcw
gs
popf
imul
in
mov
push
push
add
movsl
mov
fcoml
sbb
clc
in
movsb
push
jns
rorl
fldl
adc
rclb
sahf
or
out
push
pop
push
mov
cltd
test
add
adc
jae
aad
jp
add
pusha
add
adcl
testl
pop
repz
int3
adc
add
push
add
movb
daa
in
rcrl
dec
movsl
dec
rcrl
rolb
aaa
lods
pop
in
js
popf
outsl
dec
sbb
sub
inc
add
jge
add
movb
adc
sbb
mov
add
pop
or
jl
sub
add
xor
mov
inc
cmp
in
scas
repz
inc
fidivrl
imulb
or
arpl
pop
dec
push
das
dec
push
sub
push
sub
pop
and
cmpsl
and
add
les
movsbl
or
mov
in
lods
pop
int
add
add
sahf
out
out
fwait
xchg
outsl
or
or
mov
or
in
outsb
jp
cmp
and
sbb
movsl
jp
mov
mov
mov
mov
dec
sbb
and
xor
cmp
xor
stos
popa
addr16
lret
push
movsl
addb
nop
adc
xor
sub
or
in
pop
mov
xlat
jecxz
loopne
bound
and
mov
addb
pop
inc
mov
aam
dec
loopne
add
data16
sbb
lret
sysexit
mov
or
divl
sbb
ds
in
popf
or
mov
ficomps
inc
add
add
es
popa
ret
sbb
test
push
xchg
mov
lcall
repnz
shr
mov
or
out
icebp
das
divb
pop
mov
dec
insl
sahf
cmp
dec
push
xlat
xchg
xor
notrack
arpl
push
cmp
sub
add
mov
lret
cmpl
in
pop
stos
xchg
sbbl
mov
sub
cs
add
ret
mov
out
or
outsb
movsb
xlat
pop
jb
and
push
jnp
cwtl
push
and
pop
xchg
je
outsb
mov
aad
inc
movsl
or
adc
adc
mov
nop
cwtl
mov
mov
dec
aad
shll
add
push
data16
lahf
xor
xchg
push
inc
add
imul
loope
push
push
ss
add
or
scas
lret
jno
xor
add
mov
pushf
insb
inc
push
sub
add
jnp
nop
add
or
jg
xchg
sbb
ds
pushf
addb
dec
mov
lret
mov
loop
je
push
xor
push
pop
int
mov
shl
imul
test
mov
fdivl
loope
test
mov
cmpsl
mov
cs
cltd
movb
ret
or
sbb
rolb
mov
mov
mov
repnz
push
scas
out
or
stos
ss
out
and
jno
mov
xor
cmpl
pop
cmp
sbb
sub
out
xchg
lcall
neg
testl
imul
movsb
jne
movb
mov
cli
in
std
push
in
jecxz
add
and
sbb
add
jne
add
ret
test
jbe
mov
sbb
mulb
sbb
lock
add
cmp
popf
ret
aaa
lret
mov
add
inc
sbb
jno
push
inc
inc
das
dec
addb
jb
adc
inc
mov
lcall
aam
sbbl
mov
cmp
dec
xlat
mov
add
mov
push
in
mov
rol
add
pop
enter
fistps
mov
xchg
addb
stos
fsubs
movsl
push
add
jns
arpl
jo
adc
js
enter
and
addb
mov
pop
mov
call
cmp
push
in
in
movb
xor
jp
addr16
add
mov
lods
add
inc
add
xchg
push
test
fists
daa
lret
aad
add
jnp
jecxz
push
int
iret
stos
and
les
in
lock
call
push
scas
ja
mov
dec
inc
add
inc
add
out
or
sti
idivl
fcmovne
lea
sti
jmp
add
fnstenv
iret
jmp
cltd
and
pop
push
aad
add
jg
inc
add
pop
nop
fsubs
stc
xchg
in
insb
xor
jne
inc
add
jle
jnp
fidivs
xchg
cmpsl
mov
pop
scas
stos
push
xchg
sahf
addb
inc
lret
insb
xlat
movb
and
imul
mov
or
sti
add
outsb
insl
lahf
cmpsb
push
ss
push
jmp
pop
xor
jne
xchg
in
adc
cli
popa
test
adc
repnz
icebp
mov
pmulhuw
rolb
mov
test
cmp
cwtl
ret
xchg
sarb
cmpsl
push
xchg
shr
cmpsl
stos
ficoms
mov
aad
push
sbb
cltd
dec
pop
insb
add
popa
or
lock
in
xchg
arpl
xor
add
testl
lods
mov
or
outsb
das
fprem1
dec
xor
sub
mov
inc
mov
leave
push
je
push
arpl
dec
popa
arpl
mov
addb
add
fstl
imul
mov
cld
dec
mov
mov
push
sub
xor
roll
mov
stc
nop
es
add
mov
imul
test
pop
add
add
pop
push
mov
xchg
ret
scas
loopne
imul
add
out
fiadds
xchg
ret
add
sti
add
stc
nop
es
pop
mov
add
add
push
stc
nop
es
add
adc
xchg
aas
jae
xor
nop
cld
nop
jmp
aas
add
add
add
sub
icebp
nop
cld
nop
jmp
pop
sub
add
add
mov
or
stc
nop
es
lret
add
push
mov
jb
add
adc
pop
add
and
lods
pop
push
mov
xchg
ret
xor
add
imul
jge
dec
sub
nop
es
add
adc
pop
add
decl
nop
jmp
loopne
add
and
xchg
add
stc
nop
es
out
pop
pop
inc
push
mov
xchg
ret
add
push
add
ret
add
add
nop
jmp
xchg
add
add
stc
nop
es
xchg
add
xor
nop
es
add
add
fsubrl
nop
cld
nop
jmp
pop
add
xor
mov
pop
add
add
add
mov
add
xor
out
push
nop
cld
nop
jmp
and
addb
mov
add
jg
inc
and
nop
cld
nop
jmp
and
out
mov
nop
cld
nop
jmp
sbb
add
add
test
cmp
es
pop
add
push
scas
stc
movzwl
stc
nop
es
mov
add
add
movsb
insb
add
stc
nop
es
add
cs
stc
nop
es
add
cs
stc
nop
es
add
add
aas
inc
add
pop
mov
push
mov
xchg
ret
pop
mov
pop
sub
xor
and
cld
nop
jmp
sub
add
sbb
sbb
mov
xchg
ret
lret
mov
push
pushf
add
mov
add
stc
nop
es
addb
add
out
pop
pop
push
mov
xchg
ret
and
mov
ret
stc
nop
es
and
push
jbe
aas
add
lahf
mov
stc
nop
es
push
out
pop
out
add
pusha
stc
nop
es
adc
add
add
mov
insb
pop
add
stc
nop
es
add
stc
nop
es
lret
mov
adc
add
add
mov
loope
add
aas
add
xor
nop
cld
nop
jmp
str
pop
xchg
scas
mov
push
mov
xchg
ret
addb
sub
sar
xor
stc
nop
es
lock
faddl
nop
es
add
add
add
out
push
push
mov
xchg
ret
add
add
nop
es
add
add
pop
mov
stc
nop
es
jbe
repnz
mov
stc
nop
es
add
cltd
mov
push
mov
xchg
ret
add
cmp
mov
xchg
ret
jl
add
fs
mov
nop
cld
nop
jmp
pop
lret
add
push
push
popa
add
cld
nop
jmp
pop
loopne
add
xchg
add
mov
stc
nop
es
sub
xor
mov
stc
nop
es
inc
aas
add
orb
mov
nop
cld
nop
jmp
pop
pop
pop
xchg
out
ror
stc
nop
es
and
add
je
nop
cld
nop
jmp
adc
mov
push
nop
cld
nop
jmp
pop
xchg
sub
add
nop
cld
nop
jmp
add
sbb
jbe
lcall
cmp
nop
es
add
scas
lret
add
and
push
mov
xchg
ret
xor
add
dec
iret
add
stc
nop
es
and
add
adcl
addb
add
nop
es
out
sbb
outsb
push
stc
nop
es
add
fs
div
stc
nop
es
lret
aas
scas
add
mov
testl
jb
mov
jl
add
push
stc
nop
es
add
add
rclb
or
add
scas
fwait
lock
mov
push
mov
xchg
ret
fidivrl
call
es
mov
lret
dec
fwait
add
jmp
in
inc
add
add
add
stc
nop
es
mov
lret
add
scas
add
es
add
sub
add
add
mov
xchg
ret
pushf
xor
add
jb
push
mov
jbe
add
out
icebp
inc
add
imul
inc
add
loope
call
stc
nop
es
lret
jl
je
outsb
jmp
stc
nop
es
add
lret
adc
and
stc
nop
es
add
inc
add
fisubl
popa
add
mov
xchg
ret
add
add
push
mov
add
dec
nop
cld
nop
jmp
inc
pop
push
add
dec
lock
and
lret
pop
push
mov
xchg
ret
and
add
sbb
nop
jmp
sub
fsub
add
inc
add
cmpsl
mov
popf
stc
nop
es
pop
mov
adc
fiadds
xchg
ret
xor
and
add
nop
es
add
xor
fwait
add
push
mov
add
stos
xor
out
xchg
sbb
int
out
ljmp
es
mov
dec
xor
push
dec
lret
sub
add
nop
es
lock
jl
cmpl
nop
cld
nop
jmp
push
dec
imul
rep
push
mov
xchg
ret
sub
sbb
add
sbb
push
mov
xchg
ret
mov
add
mov
stc
nop
es
add
or
nop
es
add
add
add
sbb
repz
mov
xchg
ret
add
add
add
jne
stc
nop
es
lret
add
fsubs
popa
add
mov
xchg
ret
aas
mov
jae
xlat
mov
cwtl
mov
stc
nop
es
add
add
call
push
push
mov
xchg
ret
mov
add
sbb
cld
nop
jmp
add
add
add
add
stc
nop
es
add
and
loope
nop
es
lcall
out
popl
stc
nop
es
out
pusha
sub
leave
add
stc
nop
es
sub
add
mov
nop
cld
nop
jmp
pop
xchg
loopne
add
add
push
mov
xchg
ret
fiaddl
mov
out
push
push
mov
xchg
ret
add
adc
add
nop
cld
nop
jmp
pop
add
jae
addb
add
stc
nop
es
add
lret
mov
xchg
ret
xchg
js
rclb
and
add
out
pandn
es
aas
add
jl
aas
and
push
mov
xchg
ret
add
aas
add
lea
push
mov
xchg
ret
push
add
add
dec
nop
cld
nop
jmp
sub
add
fs
aaa
inc
add
loopne
call
es
sbb
add
add
popf
add
stc
nop
es
add
loopne
jle
push
mov
xchg
ret
inc
add
add
push
stc
nop
es
add
lock
adc
pop
jne
andl
mov
xchg
ret
add
fwait
lcall
push
mov
xchg
ret
add
and
shr
stc
nop
es
add
xor
mov
es
sub
lret
jae
repnz
and
mov
xchg
ret
sub
and
and
jecxz
les
cmpsl
mov
nop
es
add
add
add
es
add
add
add
add
stc
nop
es
xchg
movsl
push
sub
stc
nop
es
aas
add
xchg
mov
nop
es
add
pop
add
add
jb
sldt
jl
imul
add
add
adc
add
adc
pop
mov
stc
nop
es
add
and
dec
xor
push
mov
xchg
ret
add
add
add
gs
add
stc
nop
es
add
cmp
nop
es
add
xchg
add
add
add
sub
popa
add
mov
xchg
ret
inc
pushf
push
add
lods
mov
push
mov
xchg
ret
add
add
add
pop
stc
nop
es
add
xor
nop
es
popl
jl
adc
add
call
adc
add
add
inc
cmpsb
mov
nop
es
add
and
pop
inc
add
add
es
fwait
pop
lret
push
add
inc
add
add
stc
nop
es
adc
sub
fisttps
mov
push
stc
nop
es
fiaddl
add
and
nop
es
mov
pop
jbe
add
add
jb
add
imul
pushf
pavgb
outsb
call
stc
nop
es
mov
out
add
mov
inc
add
fwait
imul
and
es
add
add
add
dec
dec
add
stc
nop
es
add
mov
in
add
add
lods
add
push
jno
add
push
push
push
mov
xchg
ret
add
and
push
in
inc
add
add
push
add
negl
mov
xchg
ret
add
add
mov
xchg
ret
add
add
imul
nop
notl
or
inc
add
mov
add
xchg
nop
cld
nop
jmp
out
pop
add
ss
movswl
stc
nop
es
fdivl
iret
or
inc
add
pushf
aas
out
or
stos
nop
cld
nop
jmp
aas
scas
fidivrl
sub
xchg
xchg
sbb
jne
push
mov
xchg
ret
push
add
pop
popf
push
nop
cld
nop
jmp
xchg
add
add
xchg
fwait
add
lods
sub
stc
nop
es
pop
add
push
stc
nop
es
add
add
jae
add
movsb
mov
xor
stc
nop
es
lret
add
push
stc
nop
es
add
sub
out
xor
in
sub
add
sti
lret
add
std
and
in
add
add
push
add
add
stc
nop
es
sub
pushf
imul
adc
add
xor
addb
mov
stc
nop
es
add
pushf
and
call
stc
nop
es
pushf
add
sub
add
stc
nop
es
add
add
pushf
lret
lds
not
nop
cld
nop
jmp
xchg
jl
add
call
stc
nop
es
add
scas
fdiv
subl
add
add
nop
es
pushf
add
mov
push
push
mov
xchg
ret
add
add
mov
push
xchg
cmpl
andb
incl
mov
mov
shrl
nop
es
adc
scas
scas
pusha
xchg
lods
push
stc
nop
es
add
pop
mov
adc
mov
call
stc
nop
es
aas
pop
imul
dec
outsl
popa
fs
nop
es
add
loopne
in
add
stc
nop
es
mov
loopne
out
inc
fmuls
es
sub
and
push
mov
xchg
ret
add
cmp
nop
cld
nop
jmp
add
pop
xchg
add
jl
dec
adc
jl
inc
add
lret
add
nop
cld
nop
jmp
popl
sub
jl
scas
add
mov
push
mov
xchg
ret
add
add
stc
nop
es
push
add
add
movsb
stos
pusha
stc
nop
es
and
xor
xchg
add
mov
stc
je
stc
nop
es
add
lcall
pop
jne
stc
nop
es
add
add
pop
mov
nop
cld
nop
jmp
mov
and
aam
add
push
mov
xchg
ret
add
add
pop
push
stc
nop
es
jbe
fwait
mov
lock
test
stc
nop
es
mov
add
lods
and
stc
nop
es
ss
add
mov
push
stc
nop
es
out
add
push
add
add
addb
fisttpll
nop
es
pop
add
xor
nop
cld
nop
jmp
add
movsl
push
xchg
loopne
std
test
nop
cld
nop
jmp
scas
pop
push
inc
add
lret
pop
jle
test
push
add
stc
nop
es
adc
ss
rol
leave
lea
stc
nop
es
sbb
add
shlb
mov
xchg
ret
adc
lcall
nop
cld
nop
jmp
sub
popl
fiaddl
stc
nop
es
popl
add
pusha
icebp
or
stc
nop
cld
nop
jmp
pop
add
loopne
and
mov
stc
nop
es
add
add
nop
jmp
pushf
sbb
add
dec
aas
inc
add
lret
or
mov
xchg
ret
add
add
stc
nop
es
pusha
mov
add
stc
nop
es
add
add
imul
lret
jae
jb
nop
es
loopne
add
call
mov
xchg
ret
sbb
pop
pop
add
es
imul
pop
add
cld
inc
add
add
add
add
aas
adc
lock
incl
add
pusha
add
out
cmp
nop
cld
nop
jmp
mov
push
nop
cld
nop
jmp
lock
jbe
add
mov
adc
out
call
and
add
jmp
je
sub
aaa
ljmp
scas
dec
add
nop
es
add
lret
scas
imul
stc
jmp
nop
cld
nop
jmp
pop
lret
add
or
test
lock
call
pop
add
jae
mov
inc
mov
ficoms
nop
es
and
add
add
add
in
mov
stc
nop
es
scas
add
push
mov
xchg
ret
dec
pushf
mov
mov
push
mov
xchg
ret
mov
pusha
add
mov
stc
nop
es
add
pushf
and
test
nop
es
add
add
shr
stc
nop
es
add
lock
add
jmp
addb
and
add
add
mov
stc
nop
es
add
sbbl
dec
adc
xor
inc
add
add
sbb
pushf
pusha
push
mov
xchg
ret
and
imul
add
add
stc
nop
es
and
xorl
xchg
call
or
add
push
or
nop
es
mov
sub
add
or
add
stc
nop
es
add
add
jmp
mov
movsl
add
push
stc
nop
es
and
jl
add
push
mov
add
sbb
clc
or
add
pop
push
pop
add
nop
cld
nop
jmp
add
add
add
lea
push
mov
xchg
ret
lcall
nop
cld
nop
jmp
add
push
faddl
add
add
stc
nop
es
add
mov
add
push
mov
add
add
push
add
add
ss
int3
pop
push
mov
xchg
ret
add
ficoml
add
mov
je
stc
nop
es
and
pop
dec
stos
stc
nop
es
add
mov
add
mov
jo
inc
add
add
mov
nop
cld
nop
jmp
add
dec
add
ss
sub
stc
nop
es
push
lret
add
push
mov
xchg
ret
add
add
mov
cmp
nop
cld
nop
jmp
add
inc
add
add
add
incl
dec
add
cld
jne
stc
nop
es
lret
push
xor
jle
sub
cld
nop
jmp
aas
jae
aas
pusha
test
test
stc
nop
es
mov
movzwl
nop
cld
nop
jmp
and
add
push
push
mov
xchg
ret
lock
add
add
and
lea
es
add
sbb
dec
repz
call
or
add
xchg
in
call
push
add
add
add
and
es
add
add
jl
push
mov
xchg
ret
add
add
call
stc
nop
es
scas
sbb
add
dec
add
lahf
add
stc
nop
es
add
push
fwait
add
push
mov
xchg
ret
fisubl
out
add
sub
add
add
fldl
xchg
ret
add
add
add
add
push
push
ret
enter
push
mov
xchg
ret
adc
push
push
loopne
idivb
ret
nop
cld
nop
jmp
add
add
pop
add
mov
stc
nop
es
push
add
add
pop
xchg
js
inc
and
stc
nop
es
add
add
add
stc
nop
es
add
add
sahf
add
stc
nop
es
add
add
add
stc
nop
es
mov
pop
sbb
pop
mov
jecxz
mov
stc
nop
es
xchg
add
loop
jecxz
push
stc
nop
es
xchg
add
add
out
icebp
call
std
call
add
add
je
stc
nop
es
add
lock
mov
stc
nop
es
add
add
call
sti
nop
cld
nop
jmp
adc
movsl
dec
add
adc
jmp
add
std
mov
stc
nop
es
xor
add
outsl
push
push
mov
xchg
ret
jl
add
add
dec
cmp
nop
es
xorb
add
push
movsl
enter
nop
es
scas
mov
lret
or
mov
sub
and
inc
add
lcall
push
mov
xchg
ret
inc
xor
push
jae
add
nop
jmp
add
push
sub
sti
sub
push
mov
xchg
ret
xor
add
and
nop
es
and
dec
xor
jne
stc
nop
es
lock
xor
cmpsl
add
add
nop
es
fcompl
cmp
sar
nop
es
imul
and
imul
nop
cld
nop
jmp
call
add
xor
mov
stc
nop
es
pop
imul
jbe
sub
jge
stc
nop
es
add
nop
rorb
cld
inc
add
fwait
add
loopne
add
xor
mov
add
nop
es
mov
pop
and
add
inc
add
xchg
add
xchg
pop
add
push
push
gs
push
mov
cmp
adc
cmp
add
add
add
add
in
xor
push
mov
xchg
ret
add
xchg
pop
scas
adc
stc
nop
es
add
aas
fiaddl
adc
xchg
mov
es
xorb
xchg
xchg
mov
add
mov
nop
cld
nop
jmp
lret
add
add
ss
add
stc
nop
es
add
orb
add
nop
es
adc
sub
cmp
push
mov
xchg
ret
push
jae
add
mov
push
mov
xchg
ret
sub
pop
scas
add
sub
out
stc
nop
es
mov
add
pop
nop
cld
nop
jmp
add
add
mov
mov
xchg
ret
add
xchg
xor
add
add
mov
xchg
ret
pop
add
add
pop
rep
stc
nop
es
add
mov
xor
nop
es
xor
mov
std
push
stc
nop
es
mov
add
add
push
mov
or
nop
cld
nop
jmp
scas
push
push
nop
mov
nop
cld
nop
jmp
xchg
pushf
add
xchg
stc
pop
nop
cld
nop
jmp
add
dec
sbb
decl
nop
cld
nop
jmp
add
add
add
add
int
pop
jae
cld
nop
jmp
add
pop
pop
aas
add
stc
nop
es
mov
or
es
adc
add
fs
cmpl
nop
cld
nop
jmp
scas
push
pop
str
mov
stc
nop
es
add
mov
stc
nop
es
add
add
popa
stc
nop
es
add
sbb
add
dec
cmp
nop
es
sub
adc
add
mov
nop
cld
nop
jmp
add
add
and
push
mov
xchg
ret
add
xor
stc
nop
es
add
imul
cmp
cmpsl
in
stc
nop
es
aas
pop
and
cld
stc
nop
es
lock
call
int3
jne
stc
nop
es
mov
add
mov
stc
nop
es
pop
or
stc
nop
es
lock
pusha
add
out
in
cmp
nop
cld
nop
jmp
add
mov
add
xor
mov
stc
nop
es
xchg
lret
add
les
pop
test
nop
cld
nop
jmp
and
lds
add
jb
ret
dec
aas
fimull
sub
add
add
jae
adc
add
arpl
nop
es
add
sbbb
stc
nop
es
add
lldt
add
dec
cmp
nop
es
push
add
add
shl
stc
nop
es
push
add
pop
add
pause
cld
nop
jmp
pop
pop
pop
xchg
add
add
sub
stc
nop
es
add
mov
jl
shlb
call
cld
call
imul
add
add
push
mov
xchg
ret
add
add
mov
nop
cld
nop
jmp
add
add
lcall
jb
movsl
inc
lock
nop
es
sub
add
andl
jb
lret
adc
pop
leave
jmp
stc
nop
es
add
mov
stc
nop
es
pushf
add
add
add
cmp
nop
es
call
imul
pop
push
mov
xchg
ret
add
add
add
js
movb
nop
jmp
add
mov
mov
add
dec
push
mov
repz
and
ja
outsb
mov
idiv
nop
es
mov
jl
lcall
bound
nop
es
xchg
mov
jae
pop
push
stc
nop
es
add
scas
xor
movzwl
stc
nop
es
fwait
loopne
orb
pusha
push
mov
xchg
ret
jl
jae
add
add
stc
nop
es
add
pushf
pusha
add
xor
pop
stc
nop
es
xchg
add
push
fiaddl
mov
and
nop
es
andb
xchg
inc
add
or
adc
nop
es
jbe
mov
addb
mov
stc
nop
es
sub
pusha
fs
data16
push
mov
xchg
ret
pop
add
out
out
add
addb
cwtl
pop
push
mov
xchg
ret
jl
add
push
pop
scas
mov
stc
nop
es
mov
scas
aas
pop
push
stc
nop
es
aas
sub
test
nop
cld
nop
jmp
add
add
add
adc
es
add
mov
lock
inc
add
push
stc
nop
es
scas
adc
aas
pushf
out
dec
in
and
stc
nop
es
xor
pop
pop
add
rol
add
add
jbe
jne
nop
cld
nop
jmp
push
fsubrl
add
add
nop
cld
nop
jmp
mov
add
test
nop
jmp
aas
addb
mov
stc
nop
es
add
add
sub
es
add
pop
lcall
and
stc
nop
es
and
push
pop
ret
pop
push
mov
xchg
ret
add
add
call
push
mov
xchg
ret
add
add
and
inc
cld
push
stc
nop
es
add
scas
jae
add
mov
xchg
ret
add
mov
stc
nop
es
add
add
sbb
pushl
mov
add
nop
es
push
sbb
and
add
stc
nop
es
xor
lret
mov
add
jmp
stc
nop
es
dec
add
mov
addr16
call
jmp
call
add
mov
nop
jmp
lret
addb
add
nop
es
adc
add
push
ljmp
incb
xchg
ret
sub
jl
inc
and
nop
es
pop
mov
add
mov
cmp
stc
nop
es
str
les
nop
es
add
add
icebp
jle
dec
clc
dec
inc
stc
nop
es
add
add
xlat
fmull
nop
jmp
pop
xchg
add
add
add
adc
nop
es
sub
add
jp
jno
stc
nop
es
mov
add
add
cmpsl
cmp
nop
cld
nop
jmp
call
add
push
mov
xchg
ret
add
and
push
mov
xchg
ret
lock
nop
es
add
add
add
cld
nop
jmp
add
pop
add
add
add
rolb
mov
xchg
ret
add
pop
dec
and
mov
nop
es
dec
aas
add
mov
stc
nop
es
out
fiaddl
mov
lods
add
stc
nop
es
aas
add
dec
aas
add
nop
jmp
add
add
fcoml
add
mov
mov
xor
iret
mov
stc
nop
es
add
xor
cmpl
nop
jmp
add
mov
stc
nop
es
and
add
sub
loop
nop
cld
nop
jmp
mov
mov
cmp
push
mov
xchg
ret
out
aas
add
push
add
call
push
mov
xchg
ret
add
out
xchg
mov
call
or
add
pop
add
pop
push
stc
nop
es
aas
add
pop
sbb
call
stc
nop
es
mov
add
add
mov
add
mov
xchg
ret
loopne
pushf
mov
popf
add
push
mov
xchg
ret
xchg
pop
add
xchg
adc
stc
nop
es
fiaddl
dec
add
jne
push
mov
xchg
ret
and
outsl
call
stc
nop
es
movsl
add
cmp
jne
stc
nop
es
add
addb
nop
mov
es
add
add
add
imul
out
inc
add
mov
sub
nop
cld
nop
jmp
add
test
inc
add
push
stc
nop
es
aas
and
cmovp
es
xor
sub
and
je
stc
nop
es
pop
xor
popf
push
stc
nop
es
add
add
adc
push
stc
nop
es
call
scas
add
test
loopne
call
sti
pushl
cmp
nop
cld
nop
jmp
add
adc
xchg
inc
inc
or
nop
es
add
add
push
add
stc
nop
es
fs
lldt
mov
push
jge
jp
jbe
stc
nop
es
faddl
add
les
xlat
mov
nop
ja
pop
add
stc
nop
es
mov
add
add
add
add
cld
nop
jmp
mov
xchg
popl
jbe
stc
nop
es
push
fcompl
add
loope
jecxz
mov
popa
nop
cld
nop
jmp
mov
aas
add
nop
es
push
add
ljmp
out
call
add
push
out
mov
sbb
nop
cld
nop
jmp
sbb
popf
add
stc
nop
es
add
xor
adc
jne
stc
nop
es
add
and
mov
xchg
ret
add
bound
addl
mov
push
push
mov
xchg
ret
xchg
push
push
xor
xchg
dec
pop
push
mov
xchg
ret
call
add
movsb
movb
mov
stc
nop
es
add
out
scas
mov
call
stc
nop
es
add
xchg
and
out
call
fdivr
incl
add
aas
sub
add
ret
aaa
mov
lods
push
mov
xchg
ret
add
setnp
lret
add
add
add
push
mov
xchg
ret
add
add
and
ret
nop
cld
nop
jmp
adc
add
inc
add
arpl
jp
stc
nop
es
scas
push
adc
add
add
xchg
stc
nop
es
add
lret
and
pop
nop
cld
nop
jmp
sub
add
add
pop
add
mov
stc
nop
es
add
cmp
mov
xchg
ret
add
add
add
pushf
and
push
mov
xchg
ret
pushf
add
str
sar
nop
es
adc
add
xchg
inc
add
enter
jmp
aas
add
ss
pop
mov
stc
nop
es
add
fidivl
add
inc
inc
leave
mov
nop
cld
nop
jmp
jae
mov
loopne
fs
mov
stc
nop
es
add
stc
nop
es
jae
add
fsubrl
xor
stc
nop
es
inc
sub
add
push
mov
xchg
ret
pop
lock
aas
mov
stc
nop
es
inc
jae
add
nop
cld
nop
jmp
add
sub
out
add
and
stc
nop
es
push
mov
add
stc
nop
es
mov
subl
sbbb
pop
dec
add
clc
push
stc
nop
es
add
pushf
jbe
call
loop
mov
push
mov
xchg
ret
add
add
fisubl
xchg
sub
es
add
lahf
pop
nop
cld
nop
jmp
and
and
add
add
add
adc
pop
jne
stc
nop
es
add
nop
es
xchg
pop
lock
add
add
decl
add
push
mov
aam
repz
stc
nop
es
add
sub
aas
int
adc
nop
es
add
scas
jbe
add
sbb
mov
xchg
ret
add
add
stc
nop
es
dec
add
pusha
add
movsl
sbb
movsb
stc
nop
es
add
push
mov
pop
faddl
repz
mov
xchg
ret
add
add
lea
push
mov
xchg
ret
add
fwait
lret
dec
mov
stc
nop
es
mov
fiaddl
add
hlt
cs
nop
cld
nop
jmp
pushf
add
fisttpl
insb
jmp
and
adc
add
lcall
jb
lret
xor
scas
add
dec
push
mov
add
add
roll
add
js
nop
add
pop
popa
push
mov
xchg
ret
loopne
add
cmpl
nop
cld
nop
jmp
pop
fs
add
lods
sub
stc
nop
es
pop
add
ret
inc
jecxz
mov
push
mov
xchg
ret
add
loopne
add
jecxz
inc
add
test
nop
cld
nop
jmp
mov
iret
test
nop
cld
nop
jmp
push
add
add
add
inc
test
jmp
jne
stc
nop
es
add
bswap
add
jne
nop
cld
nop
jmp
aas
lock
adc
mov
push
mov
xchg
ret
addb
add
pop
push
push
push
mov
xchg
ret
pop
out
add
add
add
stc
nop
es
ficompl
jne
stc
nop
es
add
pusha
or
jg
stc
nop
es
out
sbb
add
or
add
stc
nop
es
fwait
add
jae
mov
stc
nop
es
pop
xor
lcall
jb
mov
adc
push
es
sbb
add
add
aas
pop
add
stc
nop
es
and
add
stc
nop
es
add
call
nop
jmp
jae
mov
pop
add
cmp
stc
nop
es
add
add
and
lea
stc
nop
es
fwait
add
xchg
adc
and
stc
nop
es
call
and
mov
xchg
ret
xchg
mov
aas
and
stos
dec
nop
cld
nop
jmp
add
add
adc
jns
add
ljmp
dec
add
mov
stc
nop
es
add
fimuls
jmp
add
and
nop
cld
nop
jmp
add
add
orb
jge
stc
nop
es
add
mov
nop
cld
nop
jmp
pop
sub
jae
sbb
nop
es
adc
add
dec
sub
add
inc
add
add
dec
pop
mov
stc
nop
es
add
mov
add
in
testl
nop
cld
nop
jmp
add
nop
cld
nop
jmp
add
add
mov
movsl
and
or
nop
es
fisubl
neg
push
stc
nop
es
inc
add
fwait
fs
popa
stc
nop
es
lret
mov
and
in
add
cmp
push
mov
xchg
ret
jbe
sub
test
stc
nop
es
movlps
mov
nop
es
and
add
dec
push
jmp
in
add
add
stc
nop
es
add
mov
pop
call
and
and
pop
add
add
stc
nop
es
add
add
add
sub
stc
nop
es
add
push
push
push
dec
mov
stc
nop
es
add
push
xlat
test
nop
cld
nop
jmp
add
faddl
push
push
mov
xchg
ret
add
lret
xor
pushf
addr16
jmp
add
add
jl
pop
nop
cld
nop
jmp
jl
add
movsl
add
pop
cmp
mov
xchg
ret
mov
dec
scas
add
test
stc
nop
es
add
add
popl
dec
mov
stc
nop
es
add
add
xchg
push
xchg
jmp
clc
add
out
decl
add
mov
stc
nop
es
add
sldt
push
loop
push
mov
xchg
ret
add
mov
stc
nop
es
dec
add
push
dec
jl
or
cld
inc
add
mov
mov
sub
inc
push
pushl
stc
nop
es
add
add
add
jecxz
call
stc
nop
es
scas
push
add
xchg
out
sub
cld
nop
jmp
sub
pop
add
scas
add
stc
nop
es
call
je
stc
nop
es
sub
and
sub
jg
stc
nop
es
xor
mov
imul
repnz
nop
es
add
add
xchg
call
nop
cld
nop
jmp
add
push
stc
nop
es
push
lcall
inc
xchg
mov
nop
es
add
scas
add
add
xchg
lahf
pushl
stc
nop
es
lret
add
push
add
push
mov
mov
pop
add
add
add
add
flds
add
jne
stc
nop
es
add
outsb
movzwl
stc
nop
es
mov
lcall
stc
nop
es
push
add
pop
nop
cld
nop
jmp
add
add
dec
cmp
es
pushf
and
xchg
xor
mov
stc
nop
es
and
lea
stc
nop
es
add
and
jbe
mov
nop
cld
nop
jmp
add
add
mov
stc
nop
es
and
fiaddl
push
lea
cld
nop
jmp
dec
add
pop
fwait
xchg
out
add
leave
xor
push
mov
xchg
ret
add
add
adcb
nop
es
add
pushf
loopne
add
sbb
nop
es
add
call
push
fldl
xchg
ret
scas
adc
add
add
loop
add
stc
nop
es
add
and
subl
les
stc
nop
es
push
add
push
add
dec
sub
stc
nop
es
add
aas
out
dec
add
scas
inc
push
mov
xchg
ret
scas
push
mov
add
cld
nop
jmp
movsl
imul
fmull
add
mov
xchg
ret
lret
add
add
stc
nop
es
add
add
sbb
nop
es
fwait
add
xchg
sub
add
mov
xchg
ret
add
add
add
add
sar
es
add
add
xor
jle
stc
nop
es
add
pop
mov
add
adc
nop
es
and
add
add
xor
mov
stc
nop
es
add
fsubs
stc
nop
es
add
push
add
lsl
nop
cld
nop
jmp
add
mov
push
mov
inc
stc
adc
cli
aad
cmpl
or
add
out
and
or
shrl
pop
stc
movsl
mov
sub
mov
pop
pop
sub
arpl
add
cmp
sar
cli
mov
es
jne
dec
adc
mov
mov
test
mov
dec
out
jbe
and
call
lcall
movsl
orl
inc
add
xchg
into
xlat
pop
cld
aaa
mov
shl
jnp
rorb
lcall
push
push
iret
mov
cmp
or
ljmp
mov
notb
fwait
data16
adc
addb
jg
push
icebp
or
fwait
inc
and
das
inc
add
add
into
mov
add
adc
add
outsb
cmpsl
lods
mov
push
push
cmp
sti
jg
mov
mov
inc
add
stos
pop
or
push
add
xor
add
add
xchg
add
sbb
stos
int3
addb
sub
int3
arpl
ss
sbb
inc
add
sahf
sbb
inc
add
add
add
loop
out
sub
arpl
iret
mov
add
dec
pop
iret
sub
or
push
leave
push
loope
popf
xchg
mov
inc
aas
std
sbb
mov
inc
add
shll
add
mov
add
push
add
and
or
movaps
mov
xor
xor
add
add
insl
dec
cmp
add
fldt
rolb
aam
sub
bound
dec
mov
sbb
dec
rcll
inc
push
fdivl
mov
add
rep
rcr
xchg
aam
jbe
and
push
mov
xor
cmp
inc
adc
mov
sub
fmuls
mull
enter
js
movsb
xor
add
ljmp
sti
scas
outsb
inc
add
addb
xchg
shll
cmp
pusha
add
mov
inc
add
dec
ficomps
insb
push
lahf
push
fnstsw
mov
out
xor
add
mov
mul
lds
mov
or
or
int3
pop
cmpsb
test
add
adc
hlt
pusha
add
mov
out
popa
fisubrl
in
data16
fiaddl
dec
daa
out
cmp
test
clc
cmp
mov
movsl
sub
fisubrs
sahf
jecxz
add
jp
call
outsb
push
jns
ficoms
xchg
mov
sub
and
sub
ret
push
add
or
fdivr
pusha
add
mov
std
sub
adc
or
mov
in
mov
mov
and
xor
test
in
xchg
into
iret
insl
test
imul
mov
push
rcll
jecxz
popa
inc
add
pusha
add
cltd
or
jle
daa
addr16
loopne
and
mov
mov
iret
out
sub
mov
pop
scas
sbb
sahf
sbb
cmp
out
bound
das
call
add
cmp
lret
outsb
fisttpll
sbb
add
add
enter
in
mov
loope
lock
xor
nop
pop
lahf
test
push
pop
jg
jo
jp
and
popa
sub
add
push
mov
add
mov
ss
cmpsb
push
pop
sub
cli
insl
add
push
dec
xor
sarl
movsb
xchg
adc
rol
icebp
mov
lock
sbb
jge
add
aad
fdivl
sub
push
push
pusha
add
js
loope
add
hlt
scas
sub
aam
fs
loop
movsb
mov
sub
cmpsl
xor
dec
stc
addb
or
sub
add
nop
lret
add
and
es
aaa
cmpsl
lret
push
fwait
xchg
and
call
roll
repnz
adc
cmp
cmpsl
fdivp
inc
add
mov
ud2
xor
in
scas
push
ljmp
and
bound
mov
push
test
testb
inc
fiaddl
addb
adc
jo
add
imul
add
js
add
jns
ret
and
jle
cmp
dec
lret
movsl
pop
fstpl
mov
or
push
pop
push
add
popf
mov
or
out
add
xor
int
xchg
mov
adc
inc
jbe
mov
data16
jp
test
pusha
add
add
mov
add
add
leave
test
incl
pusha
add
cmp
and
int3
ja
hlt
dec
in
fcomp
mov
push
mov
lods
jecxz
arpl
cmc
dec
je
vmwrite
notl
push
xchg
std
out
or
mov
mov
clc
mov
ret
dec
rcrb
aam
cs
or
jmp
inc
add
loope
insl
or
das
inc
add
int
jne
sbb
daa
cmc
sti
cwtl
fistpll
mov
xor
shrl
lock
out
sbb
pop
lds
rcll
sbb
arpl
add
xor
xchg
inc
add
add
loop
or
stos
mov
jecxz
sub
add
mov
sub
out
aas
arpl
rolb
pavgb
addb
or
cli
imul
je
push
jmp
sbb
xlat
dec
stos
add
mov
add
ss
outsl
stos
sub
cli
mov
int
out
stos
aam
xor
inc
pop
and
js
add
push
add
pop
mov
push
pushf
add
mov
out
adc
adc
jnp
add
mov
jmp
pop
insb
or
mov
sbb
adc
push
dec
cmp
cmpsl
sub
movsb
sbb
loopne
test
mov
insl
mov
loope
nop
jnp
ficoml
mov
xchg
gs
mov
cltd
call
pop
rorb
dec
ret
or
add
cmpsl
insb
jle
add
mov
add
inc
add
fs
xchg
mov
pusha
add
inc
mov
jge
lds
loopne
add
pusha
add
fs
repz
xor
negb
or
add
push
outsb
inc
add
jecxz
push
mov
cs
ljmp
sbb
test
movsb
sbb
fcmovb
add
movsb
add
sbb
inc
add
mov
lds
popf
or
add
mov
std
shrb
jecxz
ret
or
jno
mov
cli
mov
dec
jmp
add
imul
fabs
mov
jmp
test
dec
fwait
outsl
das
mov
pop
push
inc
add
pop
fwait
mov
add
cwtl
or
xchg
adc
stos
in
rolb
rcll
imul
sub
cmpsl
pop
mov
cmpsb
xor
scas
sbb
lcall
inc
lahf
mov
pop
addb
and
add
adc
rorl
ss
inc
add
popf
lret
pop
int3
lret
fcompl
jns
adc
fwait
push
or
xchg
and
pop
add
mov
ret
and
lahf
insl
and
jnp
lock
insb
xchg
jge
pop
or
or
cld
and
int
inc
in
jp
je
aas
cmp
into
push
xchg
and
mov
movsb
sbb
push
mov
xor
dec
addb
xchg
cmp
add
add
push
xor
push
ret
fidivl
divb
cmc
dec
or
mov
mov
inc
add
insb
or
mov
add
pop
inc
dec
jg
xchg
test
fwait
or
ss
popa
cli
jb
push
imul
add
out
out
stos
je
fs
fbld
cmp
insl
notl
mov
dec
adc
movsb
sub
xchg
dec
push
adc
adc
jg
push
ljmp
sbb
in
sahf
mov
xor
addb
add
mov
movb
inc
add
mov
xlat
divl
mov
xlat
lret
add
or
jge
jnp
xchg
or
add
lods
dec
dec
fs
movups
dec
mov
fiadds
add
and
push
outsb
jp,pn
add
test
sbb
es
mov
les
dec
outsl
push
mov
addb
inc
add
adc
mov
or
sbb
jae
pop
jmp
rcll
das
aam
idivb
call
jnp
repnz
mov
or
ljmp
mov
ret
mov
negb
xchg
nop
jnp
out
jecxz
aam
fwait
repz
out
out
push
pop
push
cmp
add
inc
imul
xor
ljmp
add
cmp
add
pushf
mull
dec
jne
and
fwait
sbb
jb
add
mov
dec
xchg
or
pop
fisttpll
xor
and
cltd
bound
pop
lret
sub
fwait
repz
fimull
mov
xchg
jle
adc
gs
add
or
movsb
jmp
mov
pop
pop
add
cld
mov
lret
stos
lods
sbb
add
xchg
aad
add
out
xchg
test
pop
dec
sbb
pminub
or
pop
lds
sbb
rcl
pop
or
sbb
pusha
add
fnstenv
repnz
jno
repnz
adc
add
sub
push
scas
aad
inc
cmp
mov
ja
mov
add
fsubs
adc
shrb
cli
inc
and
into
aaa
rorb
or
cs
cli
int
jecxz
cld
mov
add
push
mov
xchg
in
ret
sub
lret
insl
dec
sub
mov
jle
daa
xchg
xor
add
ss
push
and
rcl
stc
jecxz
inc
adc
add
xlat
mov
das
out
adc
repnz
sub
dec
xor
and
fsubrs
pusha
add
mov
push
out
sbb
pop
xor
notb
lea
test
lock
sbb
insl
scas
sbb
lret
dec
fstpt
arpl
cwtl
sub
mov
pop
xchg
in
ja
dec
jno
cld
add
adc
mov
mov
scas
pop
sub
lock
cmc
add
movsb
push
fdivrs
lret
movsw
fisubrl
nop
cwtl
lods
jb
and
fistl
das
test
pop
jo
mov
jmp
add
cld
mov
mov
int3
push
add
lods
pop
nop
push
daa
inc
shrb
cmc
xor
add
and
mov
fcmovnu
mov
sbb
mov
std
sti
cmp
mov
hlt
push
sbb
pop
mov
sbbl
dec
ljmp
fmull
leave
mov
scas
into
pusha
add
mov
ret
lock
sahf
xchg
iret
clc
push
sti
mov
test
inc
xchg
add
iret
lahf
shl
push
movsb
es
lcall
pop
rol
push
jno
add
stos
sbb
inc
jb
scas
xchg
shr
mov
loope
mov
add
ja
adc
push
jno
int3
lahf
jmp
push
cmp
scas
xchg
inc
add
inc
filds
add
add
js
xor
int3
xor
sub
dec
xchg
jmp
mov
pop
cmc
scas
jb
rcrb
push
add
mov
out
out
adc
bound
jmp
jp
test
into
pop
sub
and
mov
fidivrl
and
mov
add
and
inc
add
fstpl
fildl
pop
out
out
and
xlat
or
add
jl
bnd
int
cwtl
mul
or
addb
mov
lods
push
xor
shlb
cmc
popa
jbe
pop
add
in
jmp
mov
push
mov
scas
jecxz
loope
pop
gs
aam
cwtl
mov
loop
sbb
cmc
pusha
add
mov
ljmp
faddl
add
dec
movb
lods
sub
int
mov
add
call
test
dec
inc
inc
add
nop
stc
jmp
enter
in
scas
lds
and
scas
in
pop
aas
push
rcll
sarb
add
inc
cmc
jmp
rcrl
pop
mov
mov
jne
lea
rolb
rolb
or
adc
cmp
xlat
push
cmp
sbb
push
xchg
xchg
sbb
pop
or
rolb
jge
ja
xor
clc
lret
adc
aas
inc
call
adc
mov
xlat
sti
mov
popa
pop
mov
mov
sub
pop
mov
cmc
cmp
add
add
cmpsb
push
rcrl
mov
or
sbb
add
push
jmp
push
jg
cmp
nop
dec
push
push
add
dec
lock
add
mov
dec
push
and
shll
push
cld
lods
dec
or
lahf
cmp
sahf
lds
mov
sub
hlt
iret
xchg
add
and
pop
loop
shl
add
lret
out
and
or
jmp
in
mov
pop
inc
add
jae
aaa
sbb
mov
je
stc
clc
test
xchg
cmp
cmp
dec
sbb
pusha
add
jno
jg
add
cmp
dec
insl
addr16
int3
ds
addb
call
pop
adc
popa
sar
inc
cmpsl
out
rolb
jae
adc
addb
mov
fs
cmpsl
push
pop
jnp
outsb
jle
pop
jb
xor
rolb
xor
lcall
add
add
sti
pop
bound
mov
xchg
js
fs
cmc
push
shll
stc
sbb
add
mov
adc
push
fsubs
hlt
xor
mov
add
orl
repz
nop
inc
loopne
jg
mov
ficoml
adc
xchg
std
fisubrs
test
and
pushf
mov
adc
or
mov
icebp
adc
fwait
pop
cmp
movb
mov
imul
pop
xchg
clc
ret
cmp
and
pop
lock
xchg
xchg
out
ja
test
mov
jbe
inc
mov
cmpsb
pushf
test
mov
fdivs
push
mov
in
push
add
filds
add
fisubs
gs
adc
mov
push
cs
push
lods
jns
mov
stc
sarl
mov
bound
call
sti
push
mov
add
scas
mov
lret
push
notb
fbld
xor
xor
out
jmp
fldcw
mov
int3
insb
pop
push
fs
xchg
mov
lods
insb
aad
add
cmp
push
out
iret
in
imul
add
fmulp
test
inc
add
stos
dec
sub
neg
mov
adc
cmp
jl
add
les
sbb
imul
imul
add
sub
popf
xchg
lcall
call
jno
icebp
xlat
mov
dec
xor
sbb
mov
mov
mov
xor
testb
in
leave
sbb
orl
cli
push
fisttps
jl
fcompl
lret
or
and
push
mov
ljmp
xchg
je
mov
out
rcll
add
aaa
jo
xchg
adc
add
call
or
sti
inc
mov
push
pop
popa
push
add
std
js
pop
loop
push
add
add
cmp
sub
repnz
add
cld
bound
jge
sub
daa
pop
pop
jecxz
add
or
or
dec
adc
lds
lods
lahf
out
xchg
mov
xchg
movsb
push
gs
dec
pushf
cwtl
das
jb
into
sahf
movsl
cmpsl
sub
dec
sti
mov
jb
lret
int3
push
lods
test
es
std
and
jg
in
js
dec
mov
divl
cwtl
or
push
xchg
adc
jmp
add
or
add
mov
aam
jo
pop
je
or
fwait
cmp
jecxz
mov
add
aaa
ljmp
pop
movb
call
call
add
jmp
fadd
add
sub
add
das
into
dec
jecxz
roll
inc
or
sub
imul
sbb
jo
dec
aaa
mov
mulb
xor
popa
es
jecxz
mov
adc
fs
lods
out
xor
test
dec
push
les
sbb
adc
pusha
add
imul
stos
nopl
cmpsl
inc
add
hlt
out
hlt
filds
push
fs
sub
mov
movb
invd
dec
pop
dec
mov
rcrl
movb
push
pop
call
push
adc
lock
or
xor
and
aas
jl
sbb
nop
mov
mov
loope
jecxz
add
popf
pop
and
add
cltd
mov
cwtl
sub
test
std
xchg
inc
in
dec
xor
mov
icebp
pushf
jb
iret
xchg
sub
jg
add
stc
bound
dec
stc
xchg
in
fildl
add
inc
loop
add
sbb
fnsave
xchg
movsb
ror
push
sbb
fdivl
add
add
sbb
int
add
imul
ja
enter
mov
jecxz
lret
jb
add
jo
cwtl
sbb
frstor
jne
sbb
mov
pop
in
cmp
daa
xor
add
movb
dec
jmp
sub
add
xchg
insb
jg
xchg
add
cmp
xor
bound
mov
xchg
in
mov
ret
sahf
pop
sti
or
lret
xor
xchg
and
dec
shrl
add
xchg
xchg
cmpsl
mov
jl
scas
loop
ljmp
js
daa
xlat
adc
outsl
out
in
les
pop
lahf
shrb
es
push
aas
lods
daa
or
jnp
add
lods
push
outsb
mov
or
pop
mov
movsl
pop
push
xchg
push
mov
movsl
jno
inc
add
sar
push
mov
or
fwait
pop
xchg
mov
sub
into
sbb
aaa
adc
loope
mov
popf
xchg
cmp
pop
hlt
ds
mov
mov
lret
mov
inc
retw
xor
test
sub
cli
dec
aad
pop
dec
lret
ss
push
push
xor
jg
into
in
xor
je
cmpsl
and
movsb
xchg
jecxz
push
mov
into
subl
loop
cs
or
add
add
xlat
sti
mov
pop
insl
jb
jno
addr16
imul
popf
loopne
sub
repz
adc
push
jb
jp
add
movsb
xor
adc
std
sbb
add
nop
add
mov
mov
or
sbb
and
cmp
cs
aam
out
mov
and
dec
mov
rcr
in
jo
mov
dec
mov
pop
test
cmp
pop
add
cltd
insl
test
aas
clc
mov
loope
pusha
add
in
pop
call
addr16
pop
out
or
mov
fwait
mov
cli
test
cmp
cmp
mov
sub
gs
xchg
jb
add
pop
dec
cmp
add
mov
dec
loope
adc
pop
and
in
xchg
jne
sbb
aaa
fstpl
fistpll
mov
test
imul
dec
xchg
jp
leave
inc
add
inc
and
add
int3
roll
and
in
dec
rorb
xchg
loopne
test
aaa
mov
daa
sub
data16
jns
mov
mov
movb
mov
mov
jns
fcomi
addr16
and
pop
clc
pop
out
jg
jp
cmp
sub
add
cltd
mov
out
hlt
out
negb
add
add
mov
pop
mov
aam
lret
push
jmp
cmc
xchg
adc
lcall
ss
shrl
cmp
popf
cld
jecxz
pop
mov
mov
icebp
lods
mov
add
mov
mov
int
cmp
add
cmpsl
loopne
daa
mov
cmp
loope
add
and
loopne
or
sub
int
add
add
into
in
cmp
ret
jmp
add
call
sub
cmpsb
fcoms
mov
jge
sbb
jo
clc
call
sbb
add
rolb
add
pop
out
jb
inc
add
movsb
mov
xchg
out
inc
push
add
mov
mov
push
inc
add
add
add
sub
lahf
mov
test
sbb
xchg
push
and
int
movb
testl
inc
cli
jge
lock
into
in
inc
add
in
addb
xor
mov
pop
xlat
cld
dec
arpl
js
cltd
adc
mov
add
mov
testb
aaa
inc
add
lea
inc
je
or
adc
outsl
pop
push
pusha
add
popf
adc
xor
mov
orl
sbb
pop
les
and
pop
mov
mov
lods
icebp
out
fwait
pop
push
ss
loop
push
loope
cwtl
ficompl
mov
out
in
js
inc
les
enter
jmp
data16
mov
stos
ljmp
sub
dec
es
popf
icebp
das
ficoml
xlat
xchg
scas
loopne
ret
pop
mov
adc
icebp
sti
int
into
mov
ja
mov
lea
add
add
push
ret
jmp
sub
jns
mov
add
add
stc
push
pop
jmp
repz
and
add
je
movb
add
pushf
mov
in
inc
add
pop
vzeroall
data16
sub
int3
jge
stos
adc
adc
and
dec
lret
nop
cwtl
dec
cmp
inc
aad
cmpsb
int3
mov
nop
xor
add
sub
test
xor
cwtl
and
xchg
sbb
clc
in
fstp
ljmp
dec
movsb
cmp
add
jnp
int3
or
xchg
push
push
fs
sub
mov
jmp
mov
push
mov
mov
or
pop
add
xorl
outsl
fdivs
fsubrl
add
pop
aaa
or
sub
sbb
in
bound
push
fimull
ret
out
cmp
mov
lret
fwait
jne
sbb
aad
pop
inc
add
mov
add
and
into
xchg
mov
cmpsb
cltd
iret
mov
ljmp
cwtl
test
leave
addb
mov
cmp
add
pushf
mov
pop
lock
jge
aas
test
cmp
sbbl
addb
pop
xor
scas
push
fisttpll
sub
xchg
clc
mov
pop
mov
mov
dec
sub
faddl
nop
push
lret
je
cmpsb
xchg
mov
popf
jno
adc
mov
stos
sub
xor
addb
mov
mov
mov
cmc
test
fwait
jmp
mov
dec
mov
pop
mov
daa
and
out
add
mov
add
nop
sub
mov
mov
cmp
iret
mov
jl
data16
mov
fsubl
mov
pop
lret
aas
and
dec
stos
inc
cmpsb
call
push
loop
push
add
iret
js
movsb
jb
fdivs
mov
jbe
jnp
mov
mov
xchg
sahf
mov
add
add
cs
sub
insl
gs
mov
pop
cmp
out
les
fmulp
nop
add
mov
adc
jmp
scas
frstors
add
sub
jge
add
push
dec
cli
xor
cmp
mov
add
add
jno
jne
stos
lods
push
dec
dec
mov
add
jle
and
sub
notl
ljmp
jno
mov
pusha
add
daa
mov
adc
in
adc
rcrl
mov
inc
add
adc
xor
mov
adc
pop
mov
test
pop
sbb
cltd
inc
add
mov
or
or
add
lret
mov
lods
cmc
mov
jae
sbb
xchg
out
or
add
dec
mov
lcall
adcl
les
sub
push
sub
lahf
jbe
or
outsb
loopne
add
fstpl
mov
movsb
jecxz
add
or
sti
outsl
movb
clc
fists
jecxz
mov
test
jmp
xor
add
in
jnp
jno
xor
xchg
push
movsl
int
or
ds
inc
aas
jg
lock
rolb
loope
push
push
sbb
push
xchg
loop
imul
add
and
test
adc
push
ss
mov
add
movsl
xor
lock
mov
xchg
fildl
mov
stos
push
pop
dec
xor
neg
add
movsb
fimull
stc
in
mov
outsb
sbb
arpl
add
ja
call
iret
notb
ret
imul
push
xor
xor
mov
xchg
jbe
pusha
add
and
sti
pop
jnp
out
xor
int3
cld
xor
pop
cld
pop
negb
cmpsb
shlb
iret
jnp
movsl
mov
outsl
testl
jo
push
rclb
incl
in
add
dec
add
mov
or
mov
mov
dec
mov
jnp
push
pop
cmp
and
jl
cmc
mov
in
push
add
fcmovbe
movb
cmp
jae
add
cmp
sub
pop
mov
mov
shl
xchg
stc
mov
leave
movsb
inc
add
mov
push
adc
fdivrp
bound
lret
and
adc
movsb
clc
mov
xchg
inc
add
rol
add
add
pop
lret
out
add
add
sub
dec
leave
in
adc
imul
out
jnp
inc
add
sbb
into
ja
iret
in
pop
cs
mov
xchg
cld
in
cwtl
cli
sbb
add
add
mov
scas
fcomi
dec
loop
xor
enter
dec
adc
xchg
jb
mov
add
dec
add
pusha
add
pop
insb
xchg
dec
loop
push
add
addb
mov
add
add
xchg
cltd
xchg
in
out
pop
add
push
lcall
pop
sahf
idivl
iret
dec
cmp
pop
inc
mov
add
mov
into
xchg
xchg
es
fwait
sub
test
out
enter
jmp
bound
and
add
jae
cmp
xchg
jns
sub
out
addb
rcl
fsubrl
aas
cs
cmp
sub
dec
dec
dec
cwtl
jl
xchg
cmp
inc
stos
scas
sbb
mov
push
add
out
in
add
rolb
fildll
pop
inc
add
ud1
cmp
dec
cmpsl
test
push
sub
mov
or
xchg
stos
lret
std
popf
sbbl
movsb
sbb
sub
jge
push
aaa
sbb
repnz
add
adc
fwait
cmpsb
inc
add
add
adc
cmp
add
xchg
in
and
stos
push
das
repz
loop
xor
xor
loopne
mov
dec
nop
ss
jo
sbb
cmp
pusha
add
pop
aam
pop
lahf
xchg
dec
divb
inc
add
jecxz
or
aas
out
add
sbb
pop
fwait
adc
cmp
cmc
mov
add
test
ret
arpl
popf
nop
scas
aad
or
add
arpl
rorl
test
outsl
and
adc
lret
push
stos
les
xlat
pop
pushf
inc
push
push
addb
push
xchg
cmpsb
jmp
mov
mov
enter
scas
hlt
jno
test
mov
lods
cmp
and
xchg
test
mov
clc
in
add
lahf
pop
add
mov
jge
nop
jle
mov
movsb
mov
and
cmp
add
les
add
dec
addb
push
or
mov
push
jg
xor
out
dec
mov
in
dec
sub
aam
movsb
ret
add
cmp
int3
fcmovnb
into
dec
jne
cmpsb
jmp
add
mov
add
dec
or
fcmovnbe
lods
push
out
scas
push
and
cmpsl
jmp
sahf
rolb
sbb
mov
inc
add
into
repnz
add
add
add
int
mov
rcrl
ss
icebp
repnz
xor
pop
xchg
icebp
add
xchg
nop
nop
js
mov
rcrb
add
std
or
hlt
popf
mov
add
incl
icebp
jl
in
in
lcall
rolb
movsb
add
cmp
inc
jne
push
div
inc
add
inc
lods
popf
and
xor
xor
lret
sbb
xchg
sbb
add
sub
or
idiv
sbb
or
bound
sub
repz
fnsave
ret
pop
test
mov
jns
mov
repnz
mov
jnp
nop
in
lock
mov
int
add
jbe
adc
fs
aam
sub
scas
and
mov
ja
arpl
popf
sahf
or
sub
sub
lcall
inc
add
cltd
in
push
add
loope
add
lret
ds
call
add
mov
add
pop
test
xchg
aad
jmp
mov
cmc
lods
rolb
pushl
mov
adc
add
popf
sub
or
or
xor
subl
sub
call
adc
pop
cld
out
cmp
jl
iret
mov
mov
fsubp
ret
add
cmp
loopne
cmp
pop
movsb
mov
and
fisttps
xchg
ja
imul
mov
rol
add
stos
adc
jae
cli
out
add
dec
js
add
dec
or
aad
jae
ljmp
fsubs
add
and
movsl
inc
add
cmp
push
iret
dec
xchg
mov
mov
outsl
out
ret
iret
dec
faddp
add
add
cmp
pop
inc
ljmp
cmp
sti
cwtl
leave
xchg
popa
mov
mov
jns
rolb
decb
insl
es
sti
jl
cwtl
test
fcmovb
add
insb
lahf
rolb
cmp
loope
cmpsl
mov
fs
mul
popf
addb
cld
inc
add
test
xchg
fisttps
and
adc
add
mov
rcr
pop
add
mov
inc
add
adc
stos
xchg
loope
sbb
nop
xchg
pop
out
adc
xor
repz
add
jne
add
cmpsl
xor
leave
daa
lds
push
push
jo
add
movsb
pop
rcll
mov
mov
push
add
mov
jle
add
jl
or
icebp
push
notl
lock
mov
xchg
and
outsb
sub
or
sti
call
es
pusha
add
shlb
mov
xor
test
ret
or
sarl
dec
xor
in
pop
fbld
inc
add
insb
cltd
ss
push
mov
or
das
cmpsb
imulb
add
out
dec
add
add
xchg
in
addb
fwait
outsb
hlt
jle
inc
add
add
lods
mov
push
stc
sub
xchg
adc
jae
call
cmp
xor
jnp
or
mov
cmp
lods
jp
loopne
lret
ja
arpl
adc
imul
or
mov
jle
pop
testb
and
or
test
push
add
push
mov
add
repnz
ja
repz
out
adc
xor
xor
push
mov
dec
lret
fists
mov
inc
add
add
shlb
and
xchg
push
out
hlt
inc
add
inc
inc
daa
sbb
lea
sbb
sbb
xor
xor
sbb
inc
add
mov
test
pop
adc
push
mov
mov
jl
inc
push
popf
adc
add
add
mov
mov
fs
daa
and
pusha
add
in
aaa
xchg
jae
push
scas
or
cs
mov
adc
xor
jl
xchg
into
repnz
jae
ret
mov
jne
pop
push
lods
and
push
sbb
cmpsl
imul
add
pop
nop
sub
or
sbb
add
popf
cmpsl
fcomps
out
in
adc
icebp
sub
xor
subl
iret
js
ret
int3
jge
xlat
pusha
add
mov
jnp
jnp
mov
cmc
into
sub
push
inc
add
and
add
lock
in
inc
dec
mov
insl
imul
icebp
jl
arpl
add
mov
or
pop
fcmovb
int3
jmp
jae
fwait
add
lret
cli
push
pusha
add
movsb
in
add
cmp
push
push
rolb
mov
mov
add
cmp
test
push
adc
adcl
sub
movb
or
outsl
add
mov
sbb
push
fs
out
pop
jne
sar
lods
es
movb
pop
out
and
aam
push
add
into
xchg
out
inc
loop
int
imul
rolb
movsb
fdivp
mov
push
add
or
int3
mov
jge
pop
pop
pop
lret
sbb
mov
ja
jl
sub
dec
repz
xchg
xor
or
fnstcw
icebp
lahf
pop
xor
pop
out
ds
inc
add
dec
addb
dec
mov
dec
or
push
sbbl
pop
mov
test
out
mov
push
add
repz
inc
add
stc
mov
add
mov
jno
fstl
xchg
or
std
ja
cmpsl
lods
ja
add
insb
imul
mov
insl
enter
jb
fcomps
out
add
icebp
push
add
add
loope
mov
push
adc
or
and
aas
cwtl
push
add
mov
addb
mov
and
jne
jne
fstl
add
insb
mov
jae
xor
jo
lock
faddl
negl
data16
add
dec
stos
adc
push
int3
fcmovnu
mov
insl
ss
dec
leave
stos
scas
lods
fdiv
fcmovnbe
adc
push
in
pop
fcoms
addb
push
cltd
mov
add
les
into
addl
jbe
inc
aam
loop
xor
dec
bound
test
pop
fadds
xor
and
fcoml
scas
jns
addb
add
je
pop
movsb
cmp
push
cli
xor
lea
sub
add
les
push
mov
lods
cmpsl
jbe
adc
mov
and
cmp
int
mov
xor
outsb
mov
cmp
gs
xchg
push
test
out
repnz
cltd
sbb
pop
hlt
pop
jle
stos
frstor
add
xchg
lods
imul
dec
jns
outsb
cmp
mov
cmp
sbb
sarb
mov
mov
add
pusha
add
fldcw
ljmp
push
sbb
shll
and
lahf
fwait
lret
adc
test
pop
cwtl
dec
mov
dec
lods
sub
adc
pop
mov
add
jo
add
adc
mov
fsts
fisubrs
insb
outsb
cmp
and
jl
add
xor
pop
ss
js
jne
push
add
cmp
sbb
notl
cs
pushf
les
rolb
mov
cmpsb
inc
add
xchg
fxch
inc
add
pop
push
or
lods
mov
adc
add
daa
pop
sbb
fs
mov
cli
insb
cmp
and
add
ljmp
xchg
aam
cmp
fwait
movsb
sub
pop
insl
jecxz
mov
pop
sbb
ljmp
lret
inc
add
mov
cwtl
xchg
or
fildll
sbb
push
inc
add
cmp
mov
sahf
movsb
cmp
sub
push
sub
or
add
jae
hlt
or
leave
dec
je
cmp
fwait
or
add
mov
adc
xlat
adc
add
out
arpl
mov
insl
cltd
adc
dec
popa
ficomps
rcrl
push
xor
sarl
mov
push
pop
jl
push
into
insb
or
add
add
mov
popf
dec
ljmp
or
or
pop
cli
fdivrs
imul
nop
mov
daa
imul
out
sbb
ljmp
xchg
push
mov
mov
lea
into
lods
lea
insl
pop
in
arpl
sbb
xchg
add
dec
lods
push
jbe
das
dec
call
es
inc
add
push
sbb
test
push
mov
push
shll
cwtl
cli
loopne
mov
ficoms
pop
pop
and
int
xchg
lock
or
movb
add
push
loopne
dec
xor
cli
or
sub
mov
xchg
mov
fst
mov
test
add
lea
xlat
movsb
sbb
sbb
fcomp
pop
iret
dec
jmp
add
jl
ficompl
adc
gs
popf
push
shlb
lods
out
js
push
xor
repnz
and
xchg
std
repnz
clc
push
jl
sub
popf
xor
jle
sti
push
fcomp
cmp
out
inc
xor
outsb
push
adc
add
add
outsl
push
in
cltd
sahf
jns
push
rcll
cmp
addr16
shll
jle
std
int
out
cmp
data16
add
pop
iret
cmp
mov
mov
or
nop
jne
jecxz
add
sarl
cmpsb
cmp
add
mov
pop
gs
mov
mov
add
mov
mov
and
adc
dec
nop
jae
test
cmp
clc
data16
rcrl
mov
loope
add
ds
scas
sub
sahf
cmp
add
repz
dec
in
sti
leave
stc
aam
pushf
cmc
cltd
mov
filds
cmpl
mov
add
mov
mov
xchg
push
add
sahf
cmp
cli
jecxz
jnp
ret
and
xor
pop
pusha
add
xor
shll
in
jmp
xchg
insl
imul
loop
loopne
adc
push
and
femms
pop
out
int3
addb
dec
xlat
xchg
imul
push
sub
movsb
dec
jne
addb
jns
fcmovnu
push
loopne
or
and
inc
cmp
mov
repz
pop
push
add
sbb
repz
push
leave
xchg
addb
fidivs
add
testb
ljmp
lods
les
jo
add
add
mov
fcomps
xchg
and
cmp
cld
push
sbb
test
imul
cmp
roll
aas
pop
arpl
stos
jp
lods
inc
add
in
pop
ret
movsl
push
push
add
sbb
xchg
pop
fadd
add
add
loop
add
add
movb
inc
add
les
ljmp
add
cmpsb
into
daa
mov
inc
add
out
or
add
test
mov
jne
add
repz
loopne
mov
outsb
lahf
sbb
push
add
sbbl
fwait
xor
fisubrl
movb
lahf
jne
leave
clc
aas
and
add
fsubr
mov
mov
aas
push
add
movb
call
arpl
call
adc
xor
loopne
and
fcomps
jge
add
mov
adc
lds
cmp
xchg
std
jg
iret
lock
ret
cmp
mov
pop
mov
int
xchg
lods
cmc
je
inc
fstpl
pop
mov
sti
data16
mov
fistpll
jnp
add
je
jg
adc
ja
inc
add
add
fadd
lods
movsb
xor
or
jecxz
rolb
jl
sbb
stc
int3
pop
int
add
lods
jp
sbb
mov
sahf
xchg
clc
aad
testb
pop
popa
loopne
dec
push
adc
jae
ds
inc
add
add
in
push
icebp
dec
xor
mov
add
add
cmc
int3
imul
pop
push
add
push
cmp
pushf
bound
adc
ret
test
mov
into
sub
add
push
push
and
adc
or
mov
fmull
adc
addl
sub
or
insb
cmp
add
xchg
cmp
add
popf
scas
push
and
add
test
inc
add
adc
fstl
rolb
lret
xchg
es
push
cmp
notl
mov
push
mov
pusha
add
scas
pop
icebp
scas
mov
add
addb
out
and
cli
jecxz
ljmp
movsl
lret
into
test
shl
inc
ss
mov
xchg
xchg
dec
rcll
add
mov
add
aam
mov
or
imul
sti
jg
addb
add
xor
call
mov
jne
add
add
add
pop
pop
adc
mov
negb
sub
xchg
xchg
cmp
adc
daa
xchg
dec
mov
fisttps
sahf
push
nop
push
pop
and
cld
rcrb
into
cmp
fwait
mov
dec
cwtl
sub
bound
xchg
cmpsl
pop
cmp
mov
jmp
mov
imul
in
mov
sbb
xchg
cmpl
add
nop
xor
ljmp
jbe
mov
jle
or
xchg
insb
jmp
mov
add
add
in
stos
mov
jnp
add
stc
popa
ret
mov
add
imull
xchg
sbb
aam
lods
dec
xchg
iret
int
add
inc
dec
fwait
jp
mov
mov
repnz
dec
cmpsl
and
nop
mov
xchg
xor
sahf
sbb
add
adc
into
cmpsl
push
add
call
xchg
mov
pop
mov
fstpl
fcmovb
fstl
xchg
push
jne
ret
fmull
in
mov
xchg
insb
mov
xchg
xchg
aam
ret
dec
cmp
inc
add
in
hlt
pop
or
sub
inc
add
inc
add
xlat
clc
div
xor
rolb
and
daa
cmp
into
and
pop
fnstsw
add
add
xlat
jg
subl
out
cmpsb
in
pop
inc
jge
add
decb
fs
jle
add
imul
and
mov
mov
scas
sub
pop
xor
add
inc
add
jge
sub
push
lret
fwait
jecxz
out
and
pop
and
popf
sbb
scas
sub
sub
aad
subl
gs
loop
out
mov
xchg
data16
aam
pcmpeqw
fld
pop
add
loopne
cmc
sbb
xor
rorb
cmpsb
jmp
xchg
push
pop
mov
push
lret
xchg
aaa
mov
xor
inc
cwtl
js
fmull
cmp
mov
jmp
pop
pop
loop
xor
sbb
inc
mov
sbb
in
cmp
xor
mov
cpuid
cmp
dec
xor
ret
sub
push
hlt
cmp
daa
mov
sub
or
lahf
imul
adc
ja
aas
xchg
leave
mov
add
in
adc
jno
out
jbe
arpl
mulb
mov
sbb
adc
jge
sbb
mov
fists
outsb
das
mov
lds
push
jae
cmc
dec
int
bound
divb
sbb
and
add
and
adc
jnp
js
adc
test
cmp
fistl
mov
lcall
sbb
cmp
icebp
or
lahf
inc
add
mov
scas
data16
dec
shlb
mov
scas
and
arpl
jae
lods
add
mov
push
xchg
hlt
mov
lock
jns
lea
sbb
cmc
xor
mov
push
fcoms
cli
push
rolb
out
ret
jns
pop
add
lahf
fldt
sbb
cmpsl
inc
add
or
xchg
jg
push
les
pop
enter
in
test
sub
lods
sbb
add
jns
jmp
leave
push
or
mov
add
xor
stos
xor
fmuls
add
hlt
pop
inc
and
cmpsb
imul
addr16
jns
cmpsb
add
jns
or
mov
adc
in
cmpsl
ret
addr16
stos
in
das
mov
shrl
sub
adc
sub
sub
add
add
cmp
push
out
jle
push
xchg
pop
push
push
imul
and
add
addb
cli
pop
enter
rcl
fdivrs
add
push
add
adc
xor
fisubl
xchg
sahf
jne
add
out
inc
add
not
push
es
mov
in
cli
out
sub
cmp
xchg
pop
sbb
adc
mov
xchg
in
jno
jl
nop
xchg
jno
fnstsw
cmp
add
xor
add
cmp
in
insl
movsb
aas
inc
and
jb
sub
cs
mov
pop
xchg
xchg
push
scas
mov
sbb
les
outsl
push
add
dec
addb
negb
das
cmp
pusha
add
fsubrs
cmp
pop
lahf
mov
arpl
sub
push
xchg
mov
das
pop
adc
ss
pop
popf
in
addr16
jns
inc
add
cli
sub
insl
clc
mov
int3
andnps
lods
push
pusha
add
xchg
jo
jne
pop
rolb
pop
mov
gs
lods
jmp
sbb
and
xchg
push
xchg
sti
data16
cmp
aaa
je
popf
fcoml
addr16
dec
cmpsl
adc
add
into
ficoml
imul
fstpl
mov
mov
mov
mov
imul
cmpsl
mov
mov
xchg
repnz
fndisi(8087
adc
jns
lock
fsubl
add
add
cmovp
bound
xchg
sahf
or
xor
adc
adc
push
test
fwait
xchg
xchg
stc
clc
push
sbb
mov
fildl
xchg
mov
mov
daa
in
push
xchg
mov
fcmovbe
jecxz
hlt
rol
add
add
or
push
aaa
pop
or
mov
scas
insl
icebp
cmp
add
xchg
scas
jmp
add
movb
add
lock
ss
lods
arpl
addb
sub
xchg
pop
negb
mov
xor
out
or
pop
pusha
add
and
lea
cmc
jl
mov
pop
sbb
inc
add
xor
lahf
pop
sbb
xchg
pop
hlt
lea
and
stc
sar
imul
pop
fnstsw
or
add
add
daa
fldenv
addb
jg
and
popa
xor
add
mov
in
lods
mov
inc
xchg
push
add
sbb
mov
pop
popf
les
xor
insl
insl
xchg
adc
sbb
rol
add
cmp
dec
and
lods
jmp
cmp
bound
mov
int3
pusha
add
add
sub
in
or
clc
popa
lods
jb
add
xchg
testl
ficoml
and
add
clc
xor
mov
mov
sub
sub
lock
xchg
out
divl
xchg
sub
ret
lea
add
fsubrl
xor
loope
jmp
outsb
sub
jl
pop
pop
xchg
test
imul
jns
gs
xor
or
adc
jle
add
cs
stos
bound
stos
mov
sbb
imul
outsl
mov
or
sbb
mov
jle
xlat
dec
inc
ss
add
mov
dec
xor
inc
add
outsb
outsb
into
js
daa
les
out
stos
sub
pushf
mov
into
movsb
sub
cmpsb
les
fwait
jb
or
mov
mov
push
jnp
cmp
hlt
addb
lock
dec
pop
rorl
xlat
into
fs
test
es
mov
and
jle
push
cmpsb
rcll
pusha
add
push
movsb
pop
mov
movsb
jecxz
jecxz
push
bound
push
add
xchg
or
mov
mov
test
enter
insl
sbb
das
addb
and
and
ljmp
cmpsb
dec
dec
movsb
mov
stc
lods
jg
mov
sbb
lods
add
add
add
push
sti
jecxz
add
xchg
jmp
addb
dec
mov
ljmp
ja
shrl
mov
div
movb
add
sub
fwait
add
dec
scas
cmp
fcoml
xchg
scas
fidivrl
and
jg
mov
add
add
cmp
pop
jmp
outsl
rcll
jo
jmp
sub
lcall
pusha
add
mov
ja
loope
ret
bound
addb
jno
arpl
lret
pop
das
repnz
je
or
movsl
push
xadd
sub
inc
mov
notl
mov
dec
aaa
inc
add
sti
test
addb
xchg
rorb
repz
add
jmp
push
add
and
mov
push
add
mov
mov
sbb
fstl
cmp
xor
pushf
adc
mov
ja
mov
mov
pop
sti
addr16
stos
mov
inc
jns
push
fimuls
push
mov
cmp
jns
add
push
sbbl
leave
aam
lea
addl
mov
push
add
sub
lret
fisubrl
mov
es
xor
jl
add
inc
add
mov
sbb
ficompl
adc
jno
pop
sbb
mov
mov
sbb
push
mov
movb
dec
aam
push
add
cmpsl
sbb
dec
or
mov
incl
sti
stc
daa
push
icebp
jle
jmp
xor
add
jbe
lcall
add
mov
dec
pop
dec
push
ja
fistps
pop
stos
fcoml
jl
adc
add
insl
add
push
sub
mov
clc
das
scas
inc
adc
mov
mov
add
xchg
mov
ficoml
sub
add
aas
std
in
jle
adc
cmp
add
pop
push
sub
adc
push
jmp
jnp
add
outsl
xchg
add
cld
jmp
imull
pop
jmp
scas
loopne
cwtl
add
stc
sahf
lods
add
mov
add
jno
insl
add
jns
add
clc
test
add
cmp
add
add
and
xchg
mov
adc
mov
aas
test
cmpsb
ljmp
in
mov
xchg
mov
data16
iret
lret
insb
mov
das
push
int
cmpsb
pop
pop
push
add
in
mov
jg
outsb
sub
aaa
leave
repnz
aam
or
pop
aad
sbb
flds
mov
sbb
bound
cmp
imul
dec
cmp
add
ficoms
test
mov
fucomi
jmp
push
pop
int
addb
sbb
shrd
clc
cli
incl
andl
sub
or
in
lahf
fcmovu
cmpsb
mov
push
ret
mov
movl
pop
icebp
das
stos
cld
inc
add
sub
xor
adc
add
sbb
mov
adc
cmp
out
jne
mov
inc
not
cmp
andl
add
test
repz
jno
cltd
ret
out
xor
add
cmp
inc
add
cmp
pop
jp
xlat
jb
inc
pop
add
mov
xorl
testb
xchg
add
push
add
loopne
add
xlat
sbb
iret
stos
mov
std
out
jb
loope
mov
dec
cmp
movsl
pop
insl
dec
xchg
jbe
dec
mov
popa
mov
lock
shrb
xchg
cmpsl
rolb
aad
and
shll
mov
mov
mov
repnz
and
add
inc
add
int3
mov
pop
mov
punpckhwd
fstpl
pop
addl
mov
scas
sbb
stos
pop
popf
test
loop
stos
pop
aas
bound
test
stc
pop
stos
ss
mov
jno
call
pop
mov
test
add
fwait
add
pop
icebp
movsb
addr16
stos
insb
jg
push
inc
xor
dec
or
dec
addr16
cmp
dec
rcl
fimull
pop
inc
add
push
fwait
pop
xor
arpl
xchg
je
jo
add
in
js
jb
cli
outsb
mov
test
in
cmp
popa
in
pop
mov
inc
add
leave
pop
adc
stc
in
mov
mov
daa
cmc
jno
dec
jbe
jo
sbb
leave
cltd
sbb
xchg
mov
mov
add
xor
scas
mov
add
outsb
or
fsubs
lods
push
cltd
fbstp
ljmp
adc
dec
ljmp
mov
shll
sahf
popa
int
pop
pop
popf
rclb
push
pop
addr16
add
call
sbb
jp
xor
or
add
movsl
cmp
js
add
aaa
xchg
dec
jne
lods
pop
into
in
sub
xor
dec
sbb
sar
ds
outsl
mov
test
aad
out
int3
pop
lods
push
clc
mov
loope
std
ret
jae
sbb
jp
nop
clc
add
sbb
cmpsb
std
pop
les
mov
and
mov
and
loope
push
sub
xlat
repz
or
inc
les
aam
outsb
outsb
fdivrs
pop
jb
and
shll
cld
mov
gs
leave
pop
mov
add
aaa
sbb
lods
cmpsl
adc
push
test
arpl
ja
push
mov
daa
outsl
insb
pushf
jecxz
mov
lods
jne
or
mov
and
push
push
sbb
sti
sub
sub
in
mov
or
outsl
lods
mov
push
xor
aas
lret
ja
mov
jp
add
mov
mov
mov
add
iret
sti
mov
addr16
mov
mov
lds
hlt
push
out
dec
les
push
cltd
call
cmc
xor
push
divl
fwait
popa
movsl
outsb
jecxz
sbb
add
scas
imul
mov
sub
mov
insl
dec
sub
add
sub
adc
jge
scas
loopne
pop
jns
lahf
sub
pop
pusha
add
movb
push
imul
and
mov
and
push
mov
push
std
pop
mov
cmpsl
mov
das
rolb
jl
sbb
sub
mov
mov
bound
and
sbb
add
and
sahf
push
in
add
fists
clc
mov
nop
push
dec
sub
jle
adc
push
cmp
jmp
popa
mov
mov
fwait
and
mov
sub
scas
clc
mov
test
cwtl
addb
fbstp
and
adc
icebp
test
add
dec
jmp
add
aad
imul
aas
stc
inc
popf
sub
mov
ljmp
dec
movsl
sarl
add
in
adcl
xor
enter
sahf
inc
fs
xchg
pop
cmp
pop
add
ds
xor
test
push
roll
xchg
stos
cs
and
xlat
adc
enter
cmp
fadd
add
pop
sub
popf
loopne
sbb
or
loop
popf
lds
ffree
add
movb
inc
add
mov
addb
out
ljmp
inc
fcompl
inc
add
mov
sti
orl
push
add
mov
ds
cli
jp
push
js
addb
push
bound
dec
je
mov
int3
movb
test
lret
sti
sti
adc
push
add
dec
ret
subl
out
add
cmpsl
fcomps
div
dec
jbe
push
mov
sbb
add
test
call
std
dec
cmp
jmp
xchg
js
or
pop
test
add
adc
outsb
push
ret
lods
adc
mov
push
cmc
lret
mov
addb
mov
ljmp
sub
add
sbb
insb
mov
pop
xor
add
pop
sbb
dec
js
rolb
sbb
push
mov
insl
xchg
imul
push
adc
lods
or
dec
rcr
pop
gs
mov
jmp
dec
xor
add
xchg
inc
movsb
dec
scas
sbb
xor
jge
sub
jle
imul
or
xor
popa
iret
jle
fmull
xor
xchg
setne
mov
insb
mov
sarb
lods
and
gs
add
xchg
in
lods
cmpsb
testb
and
rolb
sub
inc
add
imul
dec
xchg
mov
scas
xor
push
mov
inc
add
mov
add
bound
ret
outsb
int
bound
mov
popf
sbb
sub
nop
jg
mov
lock
push
outsl
aad
push
mov
roll
push
stos
or
add
pop
addb
adc
adc
fwait
sahf
fists
int
cmpsl
shlb
inc
dec
and
add
pop
jo
test
stos
in
adc
mov
xor
add
fistpll
mov
call
xor
or
and
les
pop
daa
shll
je
add
call
shl
addr16
push
dec
je
push
jle
dec
mov
movsb
mov
cmp
jecxz
cmc
mov
fistps
cli
bound
popa
addr16
lock
dec
adc
test
fcmovne
movsb
rclb
lea
push
int
rolb
aaa
cli
fnsave
dec
pop
or
pop
out
adc
add
mov
fwait
jns
enter
xor
out
shlb
test
movsb
pusha
add
mov
jb
fbld
adc
mov
test
add
into
shr
lcall
and
inc
add
mov
je
ja
jmp
add
pop
popa
call
cli
sub
dec
xchg
mov
sub
bound
xor
std
jp
jp
and
loop
pop
push
jge
add
movsb
inc
add
add
test
pop
adc
jne
sub
xlat
lods
mov
dec
dec
lods
mov
add
fs
mov
add
pop
scas
jmp
lods
stc
stc
add
push
and
inc
adc
dec
aaa
pop
imul
ficoml
or
cmp
add
or
mov
loope
in
fisttpl
adc
add
jg
add
xchg
iret
xchg
ficompl
les
mov
pop
ja
add
cs
je
sti
mov
call
dec
jle
push
mov
test
cld
xchg
or
xor
fisubrs
nop
movb
sbb
outsb
mov
jl
add
jnp
or
addb
sahf
jle
pop
pop
inc
add
loope
cmpsb
cmpsb
xchg
scas
stos
mov
addr16
xor
rorl
pop
stos
and
ret
divl
adc
and
or
mov
loope
icebp
in
mov
repnz
imul
add
cmp
dec
add
push
sub
add
mov
adc
imul
inc
add
mov
mov
je
mov
mov
sbb
push
fwait
je
sub
pushf
lds
pushf
pushf
jecxz
aas
leave
mov
add
add
xchg
inc
or
enter
sbb
mov
pushf
mov
add
push
inc
add
xor
pop
jp
shrb
cwtl
in
cltd
rolb
imul
xchg
mov
dec
cmp
jno
mov
dec
shl
test
add
sub
mov
addr16
outsb
clc
cli
cmc
dec
hlt
or
xor
add
outsb
data16
jne
inc
pop
dec
rcrl
das
icebp
mov
push
cld
dec
jl
cmp
gs
stos
mov
add
jmp
ljmp
daa
and
lods
jne
dec
subl
inc
lcall
lahf
into
xchg
fisubs
mov
xchg
mov
pushf
pusha
add
or
pop
idivl
mov
fwait
repnz
rolb
sub
in
fstp
icebp
jno
add
das
inc
add
or
jae
pop
dec
or
fldl
and
idivb
add
mov
pushf
lahf
pop
movb
xchg
pusha
add
add
dec
nop
sahf
fptan
cli
inc
movsb
out
mov
cli
push
in
and
in
inc
add
xlat
lods
mov
imul
sahf
and
int
fisttpl
sub
lahf
cmc
loop
add
and
iret
out
add
add
add
xchg
pop
jne
or
and
xchg
mov
push
mov
lds
dec
sub
add
mov
mov
add
mov
iret
out
pop
inc
aam
clc
push
sbb
cmpsb
fisttpll
ret
cwtl
repnz
inc
dec
jle
jge
rcll
in
imul
add
adc
jae
imul
adc
int
jg
pop
jbe,pt
fs
lcall
pushf
addb
adc
fldt
and
insb
jno
push
fsubl
push
xchg
mov
mov
inc
add
rcrl
mov
hlt
push
jo
adc
insb
das
imul
adc
add
mov
shll
add
mov
arpl
cmpsb
sbb
scas
sub
mov
aas
cmpsb
test
int3
rcrb
cmp
inc
add
cmp
jl
fnstenv
xor
push
sub
mov
mov
push
xchg
outsb
inc
add
ss
pop
xchg
rorl
jbe
scas
xor
daa
mov
cs
pop
xchg
sbb
mov
push
fucomp
test
pushf
sub
mov
jae
loope
mov
dec
jl
or
mov
lret
loop
loope
push
jecxz
mov
jecxz
sbb
adcl
test
test
mov
dec
roll
negb
xlat
mov
mov
sbb
sbb
push
add
add
rol
mov
fsts
inc
add
or
pop
mov
add
add
jbe
dec
lahf
mov
aam
add
pop
je
sti
std
or
dec
pop
push
push
adc
push
out
mov
and
jb
add
ljmp
xchg
imul
stos
outsb
fnsave
out
cmp
mov
mov
xchg
dec
adc
mov
insl
out
or
loopne
int3
mov
int
addl
shrl
mov
add
test
add
sahf
push
outsb
xor
add
mov
popa
push
sahf
add
push
fldt
add
rcll
out
mov
movsb
je
add
aad
sub
sub
cmp
hlt
jmp
sub
sti
pusha
add
jp
add
cmp
shll
sti
or
dec
xchg
mov
bndstx
push
enter
pushf
lret
daa
mov
xchg
cmpsb
mov
jbe
clc
lret
std
mov
jge
cwtl
jno
dec
in
fcmove
clc
dec
adc
movsb
sbb
mov
int
je
mov
add
in
mov
lods
inc
pushf
sub
mov
pop
cmpsb
cmp
jle
add
pop
mov
pshufw
std
in
sub
push
aaa
add
xor
cmpsb
push
bound
loopne
fmulp
push
imul
fldl
daa
mov
insl
mov
fsub
ja
add
mov
fs
jecxz
push
ret
push
cltd
jecxz
push
fdivrl
into
lea
sbb
xor
jge
mov
nop
xor
dec
cld
pop
out
pop
out
cmp
push
fistps
mov
cmp
inc
adc
rcrb
ret
stc
nop
sub
idivb
into
jnp
outsb
call
dec
cmc
js
rolb
pop
sub
add
sarb
cmp
leave
adc
mov
leave
dec
loope
into
mov
aam
xor
sbbl
add
aad
cmc
das
and
movb
adc
jmp
mov
lahf
fisttpll
lahf
or
fwait
mov
repnz
lret
jmp
add
das
fs
sarb
movups
out
dec
lret
mov
insl
add
ja
movb
or
in
jne
jge
ret
sub
jae
js
or
jbe
call
cmc
fs
insb
shlb
mov
push
cmp
sbb
sti
or
sti
xchg
movsl
cmp
adc
fsubs
add
sub
ja
lahf
aad
aas
fsubl
jne
daa
sbb
addr16
sbb
dec
push
cmpsb
xchg
sub
in
push
mov
out
push
aaa
aas
shl
inc
fbld
mov
mov
out
jmp
rcll
les
ficoml
cmp
pop
rolb
addr16
inc
add
sub
mov
ja
ret
sbb
fistl
ja
loopne
movb
jle
xchg
mov
iret
leave
les
xchg
outsl
jecxz
jg
sbb
mov
inc
add
icebp
lods
xor
cmp
popf
cmp
push
in
stos
and
movsb
mov
jns
cmp
jp
mov
inc
lahf
pop
pop
fidivrs
pop
xor
jae
mov
add
push
insb
sbb
loope
sbb
sub
leave
xor
popa
js
lods
iret
aas
gs
adc
push
cmpsb
push
js
add
leave
mov
xchg
sbb
icebp
popf
dec
hlt
movb
enter
movsl
notb
ficomps
sbb
daa
popa
pop
push
sub
jmp
pusha
add
dec
aad
add
jae
cmp
sub
xor
mov
sbb
pop
jae
jns
add
adc
add
mov
push
inc
push
cmp
and
jb
mov
pavgw
pop
mov
jge
lret
lods
arpl
and
mov
stos
xchg
rep
out
dec
sbb
lods
ljmp
or
outsb
pop
jmp
adc
mov
mov
fwait
leave
dec
add
cmp
shl
sarb
mov
and
or
les
popf
in
jmp
add
in
fsubrl
bnd
jp
rolb
daa
shrl
int
mov
sbb
std
bound
mov
add
popf
out
scas
cmpl
cmpsl
int
popa
dec
jbe
adcl
loope
les
and
mov
add
sbb
mov
jb
sub
lods
and
mov
or
jbe
adc
arpl
mov
add
cli
sbb
mov
jle
pop
mov
jns
xchg
fwait
or
mov
dec
xor
add
daa
push
sbb
daa
test
xchg
cmp
add
add
mov
movb
gs
loopne
adc
mov
mov
scas
int
fwait
jb
xchg
inc
add
out
sbb
imul
mov
add
data16
dec
cmp
jne
rolb
xor
fucom
push
fstpt
outsl
sub
in
cmp
inc
fistpl
stos
adc
insb
out
inc
iret
mov
sub
or
clc
lcall
mov
lods
hlt
movsl
movsb
mov
sub
cmpsl
jmp
dec
mov
shl
push
sub
add
insl
sub
adc
adc
stos
outsl
sbb
xor
add
hlt
ret
add
repnz
push
out
xchg
pop
adc
pushf
mov
add
pop
dec
lods
dec
push
add
fcoms
jns
fdivs
addl
sub
dec
cmp
or
rolb
xchg
mov
mov
and
out
push
pop
jg
bound
push
jne
add
fisttpl
xor
test
cwtl
lds
popl
jmp
mov
movsl
cwtl
or
sbb
cs
add
xor
hlt
rolb
lcall
cmp
xchg
out
pop
insb
sbb
jl
imul
and
lock
mov
fstps
xchg
inc
add
xchg
or
std
loopne
xor
stos
mov
dec
xor
inc
xchg
push
mov
movsb
jecxz
fstpt
add
or
insb
out
sbb
addr16
and
push
add
aas
icebp
mov
sub
sub
int
dec
out
push
add
addr16
stos
cltd
add
mov
fld
adc
mov
into
mov
mov
data16
mov
daa
inc
jbe
xchg
adcl
add
call
lahf
in
mov
scas
add
push
mulb
add
cmpsb
out
fwait
inc
add
add
mov
sub
cwtl
xchg
loope
push
ljmp
and
xlat
loope
hlt
cwtl
xor
je
mov
add
shll
cmp
mov
hlt
or
xor
xor
xor
sbb
mov
cltd
fdivs
jle
stos
in
xchg
jne
addb
add
mov
icebp
xor
add
cmpsb
inc
addr16
in
cmp
push
and
out
mov
pop
insb
mov
mov
jp
mov
andl
in
dec
fldl
data16
and
pop
cltd
inc
add
mov
add
xor
aas
or
popf
pop
adc
xor
leave
jl
jae
jp
add
lcall
out
push
in
lahf
clc
cmpsb
sbb
cmp
popl
adc
ja
sub
loope
pusha
add
or
movsb
lea
les
ss
testl
xchg
mov
add
aam
fs
lcall
add
es
int3
ljmp
inc
add
lods
movsb
mov
repnz
add
dec
mov
add
xchg
add
add
add
xchg
in
daa
das
es
pop
mov
data16
int3
subl
data16
pushf
ss
mov
stc
adc
push
fidivrl
dec
jno
push
cltd
das
jge
push
mov
cmp
scas
cmp
sbb
xor
pusha
add
jecxz
pushl
mov
into
in
call
sbb
loop
mov
movsl
les
lret
jae
pop
cmpsb
mov
nop
es
jge
dec
mov
or
cltd
and
inc
lahf
jl
push
mov
js
stos
imul
mov
int3
cbtw
out
lock
incl
les
mov
add
mov
push
es
jne
adc
xchg
mov
les
jnp
mov
xor
into
mov
add
add
jg
or
arpl
jp
cmpsl
mov
jmp
into
push
push
ret
dec
mov
mov
sub
loope
int3
in
xor
addb
mov
cmc
repz
rclb
in
adc
das
movsl
test
jecxz
adc
mov
out
iret
adc
mov
scas
or
imul
sub
inc
add
clc
arpl
pusha
add
jae
leave
dec
cmp
mov
mov
sahf
nop
and
bound
xchg
movsl
roll
pop
sbb
jns
ret
jo
outsb
sub
mov
add
aam
adc
sub
das
mov
add
imul
dec
mov
pop
jl
jge
lret
xor
mov
jo
sti
jae
cmc
std
jge
xchg
inc
add
add
mov
pop
lret
dec
xor
notl
mov
stos
jae
jl
cwtl
jnp
enter
add
ret
loop
mov
mov
add
xchg
mov
mov
stos
test
add
and
pop
mov
cmp
pop
pop
imul
mov
sbb
clc
vpmullw
push
dec
loopne
sbb
cmc
ss
and
add
mov
sub
icebp
sub
cmp
push
loopne
sub
xchg
dec
and
xchg
pop
mov
cmp
and
dec
lods
fisttps
add
in
imul
xchg
adc
xchg
in
or
enter
jmp
inc
add
int3
push
lock
add
and
fs
es
sbb
cmp
inc
movsl
xorl
sub
dec
rcrl
in
xchg
cmpsl
push
ljmp
add
pop
mov
xchg
add
mov
or
push
add
sbb
daa
outsb
cmp
mov
mov
addb
in
jo
shll
lods
pop
leave
aaa
dec
lcall
fldl
insb
add
xchg
dec
aad
in
rcrl
add
call
mov
xchg
dec
insl
in
add
out
cmp
push
push
xor
add
push
hlt
jg
add
out
dec
jp
sbb
or
add
adc
out
inc
add
loop
ja
es
leave
test
add
xor
dec
cwtl
out
in
dec
adc
test
sub
and
pop
add
jns
enter
dec
cld
fwait
mov
cltd
push
xchg
sbb
ficompl
rcrb
lock
fisubs
pop
adc
add
add
or
mov
xorl
push
decl
pop
jg
cmp
add
fimuls
repnz
push
or
aas
jbe
shll
subl
adc
jne
ljmp
add
jg
sbb
test
rolb
cmpsl
ret
or
mov
and
inc
lahf
mov
inc
add
xor
dec
out
xchg
inc
hlt
push
xchg
pop
rorb
push
outsl
stc
dec
test
pop
insl
cmpsl
lcall
sbb
bound
cmp
mov
pop
push
mov
xor
add
call
add
loop
rorb
xor
add
xor
ret
stc
cmp
add
add
inc
add
sub
std
pop
xor
xor
mov
cmp
add
loopne
dec
test
xchg
fidivrl
dec
jecxz
xlat
inc
add
rcr
icebp
xchg
aad
iret
or
sub
mov
std
push
inc
add
cmp
and
sub
pushf
iret
pop
mov
cli
jecxz
outsl
mov
sbb
sub
je
jp
dec
fistpll
mov
add
fsubrl
add
std
mov
lds
mov
arpl
jmp
sub
jmp
test
bound
lock
insb
lret
sahf
test
ljmp
and
imul
xor
pop
stos
cmc
add
add
ds
add
ror
inc
lahf
and
data16
xor
xchg
ss
pushf
push
sbb
es
insl
lret
push
mov
or
js
push
mov
in
pop
in
shlb
jne
sub
out
lock
cmpsl
cmp
fsubrs
daa
fadds
add
sbb
adc
push
rorl
mov
sub
sbb
xchg
jmp
ja
inc
movsl
cmp
movb
orl
or
inc
fldl
add
fs
int
stc
lcall
sub
cmc
cs
xchg
out
outsb
fadd
inc
loopne
mov
mov
rclb
or
aad
mov
into
xorl
xlat
jmp
aaa
cmpsl
idivb
fdivr
mov
add
jmp
js
ja
dec
in
push
test
push
inc
add
or
ret
cmpl
sub
mov
roll
cmp
or
test
xor
movb
rcl
ret
push
add
add
mov
fistps
and
xor
lcall
jmp
add
ss
lock
movsl
or
hlt
or
xchg
pop
ret
fs
leave
sti
fsubrp
add
cmc
aas
shll
addb
mov
stos
sti
mov
xor
mov
faddl
xchg
add
mov
pop
mov
not
push
jle
jle
xlat
xchg
dec
or
push
inc
outsl
fucomp
and
xchg
mov
add
mov
mov
dec
aaa
pop
pop
bound
and
and
jl
cmp
sub
inc
adc
jns
stos
or
data16
test
mov
mov
push
scas
jbe
lahf
sti
mov
pop
mov
andl
push
add
xchg
add
push
shl
dec
shld
popf
cmp
pop
inc
out
push
aas
fs
or
mov
sub
pop
pop
roll
mov
cmc
fisubrs
fildll
pop
bnd
mov
mov
dec
mov
cli
lods
inc
aas
inc
add
jle
jnp
jecxz
out
or
cwtl
setb
rclb
inc
gs
add
add
psrld
insb
in
add
mov
loope
fbstp
mulb
test
movsb
push
adc
inc
and
adc
mov
and
sub
add
inc
add
mov
mov
cmp
push
in
cmp
std
in
and
cmp
stos
push
stos
push
fisttpl
out
out
rorl
in
add
or
push
ss
push
add
push
cli
or
jbe
mov
inc
lock
repnz
adc
inc
adc
test
cltd
int3
push
scas
pop
mov
jecxz
fists
add
mov
leave
xchg
arpl
pop
xchg
addb
push
inc
add
mov
push
mov
sarb
xor
rcll
add
aad
js
dec
insb
ss
mov
cs
xor
add
adc
inc
cmp
jbe
mov
into
es
inc
inc
stos
sbb
arpl
fwait
test
push
add
mov
cld
and
je
lods
mov
mov
lods
test
mul
jp
jmp
inc
jbe
imul
mov
loop
loop
xor
add
stos
xlat
repz
fadds
std
mov
xchg
addb
dec
or
dec
stos
fwait
bound
xor
ffree
add
sbb
pop
loope
add
mov
mov
pushw
dec
or
sub
aad
faddl
or
push
dec
dec
in
dec
jecxz
hlt
adc
out
xor
lret
jecxz
adc
push
push
add
xor
mov
mov
adc
xchg
je
jp
mov
and
fwait
mov
call
movsb
dec
test
xor
dec
pushf
sub
aad
loope
addb
movb
outsl
test
ss
inc
add
popw
cmp
pop
loopne
pop
and
or
das
mov
fimull
add
sub
mov
int
pop
hlt
xchg
add
mov
jle
hlt
sub
push
hlt
sbb
xchg
fwait
repz
xor
rcrl
test
mov
jle
push
leave
mov
fdiv
push
pop
dec
addb
leave
push
mov
add
mov
add
cld
adc
fdivr
cltd
mov
loop
fxch
in
xor
nop
sbb
icebp
lods
rolb
add
mov
shll
add
xor
movsl
loop
jle
jbe
jg
inc
jno
mov
aam
push
xor
add
shll
add
ret
adc
insb
aad
test
add
add
cmpsb
add
jge
inc
add
pop
and
sub
mov
out
jno
out
sub
xchg
leavew
inc
add
inc
add
shll
and
xchg
xchg
or
stc
pop
scas
dec
cmp
and
sub
pusha
add
sti
push
xchg
imul
rolb
add
psraw
mov
mov
push
imul
imul
jg
mov
add
xchg
pop
sub
jb
mov
out
mov
stos
scas
cmp
xor
add
or
in
mov
fildl
pop
call
sub
leave
insl
icebp
cmc
jb
out
push
loope
sti
addb
xor
lcall
in
sbb
rolb
addb
add
sbb
movsl
mov
push
inc
cs
insb
or
es
inc
add
push
add
push
push
xchg
xchg
cs
fisttpl
push
test
push
jle
mov
or
sbb
jmp
lret
add
jae
lret
es
cmpsl
shll
movups
or
in
add
jae
mov
stos
enter
pop
dec
les
sub
negl
pop
push
mov
int
roll
in
sbb
test
pop
sti
out
and
pushf
push
push
add
pop
adc
add
inc
mov
dec
or
outsb
mov
push
push
mov
cmp
inc
nop
mov
add
das
pop
xor
gs
jl
add
sbb
add
gs
fidivl
mov
add
cmp
sarl
imul
clc
shrl
sub
loop
gs
jb
mov
cmp
xchg
pop
loopne
jb
ss
ds
ret
add
push
add
lock
incl
inc
add
pop
sti
inc
add
add
fs
sbb
sub
enter
xchg
rcrl
lret
add
notl
xchg
push
add
adc
add
sbb
addr16
and
or
int
mov
lods
lcall
cmp
mov
xchg
xor
xchg
pusha
add
fmuls
fistpll
jmp
dec
inc
add
and
ja
add
jnp
mov
sub
sahf
lock
sbb
or
mov
dec
sbb
add
aaa
pushf
cmp
bound
cmp
rolb
push
xchg
insb
sub
pop
dec
mov
sbb
std
pop
adc
mov
dec
bound
cmpsb
push
cltd
inc
add
lock
add
rcll
cmp
test
xlat
popl
in
and
adc
es
inc
test
add
addr16
add
sub
es
mov
insl
push
outsl
pushf
stos
inc
add
ss
shlb
cld
pop
push
flds
movsb
je
or
mov
cmp
dec
enter
imul
and
mov
std
stos
and
xchg
sub
mov
adc
lods
adc
add
je
iret
imul
daa
or
and
mov
pop
mov
fdivp
jae
movsl
pop
xchg
mov
int
add
dec
lock
shll
dec
test
add
or
mov
movsb
out
rolb
add
xchg
xor
out
push
les
shlb
loopne
add
xchg
add
iret
mov
xchg
sub
mov
ds
and
mov
pop
int3
push
add
fsubs
add
pop
fnstsw
or
push
push
mov
and
mov
stos
bound
push
push
lret
loope
test
pop
daa
inc
add
lea
inc
mov
cmpsl
pop
cmp
mov
push
outsl
jo
cs
inc
cmp
int
add
dec
jg
pushf
pop
pop
addb
pop
add
rolb
fdivrs
pop
inc
add
pop
or
cmp
out
rorb
loopne
xor
jns,pt
jae
scas
call
xor
sub
add
je
and
adc
xchg
test
bound
rolb
mov
outsl
lahf
mov
xchg
inc
fcmovnb
add
or
and
or
or
idiv
xchg
into
mov
insl
movsl
cmpsl
shll
fucom
jnp
add
pop
inc
add
movb
add
shrl
js
inc
add
mov
and
fucomi
pusha
add
scas
push
add
sub
cli
push
popf
daa
ss
fmull
pop
inc
add
jns
dec
lcall
fwait
add
movsb
in
addl
faddl
cld
dec
sub
adc
lea
imul
jge
lock
aad
scas
fistpll
dec
stos
pop
pushf
lcall
cli
and
pusha
add
sbb
stc
popa
or
repnz
insl
or
add
addb
and
hlt
sub
nop
insb
push
imul
outsb
sub
in
cmp
dec
inc
jl
add
add
pusha
add
adc
ljmp
mov
insb
pusha
add
mov
jle
add
cmp
cmp
je
adc
inc
add
xor
push
lock
stc
sbb
pop
fst
mov
xchg
aas
sti
cmp
push
dec
cmpsl
lahf
push
pop
les
or
sbb
rcr
mov
jl
addl
jp
gs
fld
repz
mov
fcmovnu
in
in
mov
cmpsl
std
jl
fs
jbe
andl
jbe
push
aaa
enter
sbb
push
mov
and
add
sarl
fldt
stc
imul
adc
jb
sbb
mov
sub
mov
nop
hlt
mov
loope
add
hlt
data16
sub
dec
test
fcmovb
dec
cli
lock
add
cmc
inc
outsb
mov
mov
sub
jl
cmp
add
iret
push
cmp
add
lcall
and
xchg
dec
out
sub
hlt
fimull
bound
fsubrl
repnz
or
push
idivl
adc
cmp
aad
pop
leave
loop
in
or
fisttps
out
in
mov
fs
dec
pop
ja
jno
arpl
inc
xchg
flds
aaa
or
pop
cvttps2pi
pop
or
rcrl
push
xor
and
test
add
out
repz
or
push
sub
xchg
lcall
sahf
cmp
rclb
inc
loopne
dec
pop
push
cmp
adc
add
stos
ret
push
mov
aad
sub
inc
add
dec
add
dec
clc
test
add
mov
xor
in
call
or
test
add
ljmp
add
add
add
mov
cli
and
push
fwait
insb
cmp
in
shll
addb
and
push
mov
push
out
mov
jmp
push
ljmp
mov
push
push
addb
jae
fdivs
ret
rclb
add
int3
ljmp
jge
into
inc
gs
shl
sbb
lcall
js
divl
aaa
push
push
inc
push
add
inc
add
les
popa
dec
dec
mov
mov
pop
out
std
xor
add
pop
fstp
sbb
dec
mov
int3
pop
clc
jle
out
mov
or
sbb
jecxz
inc
add
jne
dec
loope
into
mov
pop
cli
push
jecxz
cmpsl
pop
sub
add
fs
loopne
or
sbb
cmpsb
push
mov
dec
push
icebp
pushf
ds
pcmpgtd
insb
sahf
fwait
inc
add
ja
pop
add
addb
xor
pop
push
in
fists
pop
in
in
negl
mov
ret
cmpsl
sub
cwtl
jnp
in
mov
lock
add
jl
jge
mov
mov
daa
and
pop
iret
sti
sbb
add
jmp
mov
xlat
call
mov
jno
fiaddl
mov
jno
jb
loope
jp
bound
cmp
adc
insl
dec
sub
lret
mov
add
sub
sbb
sub
xor
pop
xchg
and
pop
inc
add
push
ja
jbe
std
mov
call
repz
jp
sarb
xchg
and
jno
int3
jns
add
icebp
sar
mov
in
mov
add
pushw
mov
push
dec
mov
aas
aad
inc
add
push
add
dec
push
adc
xchg
sub
and
pop
testl
sbb
xchg
dec
xchg
scas
fldcw
into
push
shll
cmp
pop
lock
in
sahf
mov
popf
xor
repnz
bound
fnstenv
add
fdivl
mov
loop
cltd
xchg
test
ljmp
pop
repz
arpl
ret
push
pop
dec
scas
lea
sbb
inc
nop
jnp
sti
lret
add
outsb
pop
mov
shlb
bound
mov
sbb
xor
orl
lahf
mov
sbb
lods
sti
std
and
clc
cmp
mov
in
call
stos
jecxz
and
pop
bound
xchg
imul
pop
lret
cmp
push
sahf
imul
les
mov
mov
sub
cmp
testb
jle
mov
cmp
add
les
je
pop
lods
push
adc
and
inc
add
add
jne
int
pop
adc
xor
xchg
in
into
aam
insb
sub
add
movb
icebp
mov
or
cli
sbb
stc
sub
pop
out
das
jno
je
inc
add
add
into
cwtl
push
mov
xor
jo
repz
movsb
and
xor
mov
add
adc
xor
cs
dec
xchg
xor
jae
addb
pop
cmpsb
xchg
inc
add
rorl
pop
jbe
and
inc
push
jp
movsl
xor
insl
mov
adc
addb
or
sub
in
cltd
pop
mov
xor
mov
fstpt
mov
int
int
xchg
repz
ds
negb
xchg
mov
mov
dec
pop
dec
stc
insl
icebp
cmpsb
push
pop
subl
gs
imul
out
test
aam
sahf
xchg
jo
lock
and
pop
mov
jb
sub
mov
push
push
data16
in
popl
add
xchg
popa
xor
mov
sbbl
test
inc
add
mov
xor
daa
push
inc
and
popa
shlb
sbb
outsl
nop
xchg
lods
sbb
lock
add
aad
sarl
outsb
sub
aas
pop
mov
loope
pop
sbb
xor
addb
pop
add
jo
inc
or
movsl
fstl
cmp
rol
ret
push
xchg
pop
cmp
into
insl
push
lret
out
mov
jmp
jne
out
in
sbb
loopnew
sarb
cmp
jmp
add
push
fldln2
in
xchg
sahf
mov
dec
push
movsb
loope
pop
pop
popf
xchg
outsl
ficoml
lods
sti
aam
and
pop
xchg
not
jmp
out
xor
lcall
mov
jbe
or
xchg
movsb
stc
bound
or
add
xor
cmp
sbb
dec
je
je
jo
lds
clc
clc
call
subl
sub
add
pop
stc
mov
xor
add
mov
pop
andl
repz
add
mov
inc
loop
lods
sbb
stos
test
mov
mov
fdivrl
push
push
mov
loop
jbe
jno
js
ret
add
mov
jb
stos
sahf
dec
mov
adc
mov
lds
rcrl
jb
test
ljmp
add
enter
and
cwtl
sbb
scas
jnp
cmp
jecxz
loopne
push
in
cli
movsb
dec
lods
addb
mov
shll
adc
inc
add
iret
imul
push
lods
js
cmp
sbb
cmp
push
iret
xor
mov
dec
mov
inc
add
cwtl
xchg
and
repnz
movsb
push
sbb
dec
add
pop
mov
in
std
fistpl
adc
mov
int3
sbb
fiadds
inc
add
pop
push
jmp
pop
out
lds
aas
lods
rolb
and
popa
insb
cmp
or
lds
add
add
push
fnsave
jae
add
imul
xor
push
stc
repnz
pusha
add
mov
ds
mov
dec
pop
repnz
enter
push
loop
cmp
hlt
popf
xchg
insl
add
mulb
nop
popf
jbe
mov
add
test
jg
cmp
mov
add
movsb
outsl
mov
addr16
clc
movb
inc
add
cmpsb
or
pop
cwtl
es
notb
jge
lret
mov
xchg
push
add
mov
xchg
int
in
icebp
fisubs
mov
cmp
dec
movb
pop
add
dec
stc
xor
cltd
neg
in
aas
imul
add
push
int3
adc
mov
mov
mov
add
lods
aas
scas
push
lock
movb
insb
inc
add
add
call
pop
out
mov
jl
lret
and
test
add
xor
add
pop
ret
int3
lods
imul
add
lock
loopne
adc
mov
add
pop
int3
in
add
jmp
in
jb
fs
mov
in
xchg
insl
das
adc
cmpsb
in
jp
dec
addr16
adc
das
aam
jae
add
push
cmp
jl
xor
xchg
std
stos
movb
inc
daa
push
jnp
pop
pop
push
jle
movsl
pushf
repz
out
ret
cmp
pop
lock
nop
cwtl
or
push
or
ja
pop
popa
xchg
imul
arpl
ds
ljmp
and
add
repz
adc
daa
addl
dec
gs
push
sti
and
js
dec
sbb
mov
mov
mov
add
pop
movb
jae
je
rcr
pop
xor
cmp
fnstcw
repnz
cmp
and
cmp
mov
jns
xor
aad
into
mov
inc
add
or
rcll
add
das
sbb
jmp
mov
add
push
push
out
imul
stos
mov
mov
lahf
mov
out
jl
xor
dec
mov
mov
or
xchg
in
leave
ja
jo
add
fcomp
add
cmp
stos
and
aas
push
subl
cld
iret
push
dec
mov
mov
sbb
push
add
addb
adcl
arpl
cmp
add
fcmovbe
popf
imul
push
inc
add
repnz
js
pop
cmp
inc
dec
xor
sti
cmp
push
orl
adc
mov
add
loop
cltd
iret
jp
xchg
and
cmp
sub
add
jns
sbb
das
mov
add
out
mov
cmp
in
mov
frstor
dec
addb
lea
sub
and
mov
mov
mov
hlt
addb
pop
out
pop
jp
aaa
adc
add
aaa
sub
add
int
xor
pop
cmp
iret
cmp
fldenv
fiadds
repz
jle
lea
fildll
and
cltd
hlt
mov
pop
aas
mov
mov
ret
jg
xchg
shrl
mov
iret
mov
jno
mov
imul
dec
les
fwait
xor
mov
inc
add
and
inc
add
iret
jge
mov
jle
pop
inc
lea
inc
add
fs
sub
fcmovnu
dec
fnstcw
ds
data16
loopne
movsb
adc
mov
add
push
repz
or
mov
fs
add
inc
subl
push
mov
movsl
inc
roll
mov
xchg
sbb
dec
mov
jecxz
cmpsb
cmp
adc
mov
mov
xor
movb
lods
add
xor
data16
std
sbb
cld
sbb
enter
mov
out
or
movsb
addb
pop
xor
jmp
or
aaa
aaa
xchg
imul
mov
mov
sahf
andl
mov
xor
in
mov
jb
fxam
sbb
out
prefetch
or
int
add
fwait
dec
bound
js
test
clc
xchg
bound
xor
dec
or
or
icebp
call
insl
adc
adc
insl
mov
adc
mov
out
cltd
jp
arpl
push
popf
mov
push
xlat
add
sub
xor
pop
fdivrs
pusha
add
inc
push
mov
idiv
mov
daa
jb
cmp
iret
bound
xchg
inc
bound
dec
adc
and
cmc
fstl
add
filds
pop
pop
ljmp
ficompl
push
pop
sbb
or
ficompl
inc
mov
std
xor
mov
test
xorl
pop
adcl
add
loope
gs
xchg
cmp
out
or
insb
jge
popf
cmc
cli
loopne
add
cmpsb
adc
or
or
and
push
bound
hlt
add
lock
add
fcoml
test
mov
aam
rolb
or
imul
add
jecxz
clc
and
out
mov
cld
pop
pop
out
mov
test
dec
or
sbb
add
xor
mov
lock
mov
sbb
adc
dec
gs
sub
and
out
add
test
or
scas
jmp
and
sti
add
adc
in
sarb
adc
mov
inc
add
mov
add
into
dec
out
inc
add
mov
xchg
jno
mov
pusha
add
mov
or
rolb
scas
popf
ret
sbb
mov
pushf
add
test
pushf
pop
sbb
ffreep
add
add
sub
add
test
rcrl
mov
dec
test
xor
jmp
sub
add
inc
add
xchg
push
rolb
iret
lock
les
push
xorl
divl
jmp
xor
add
pop
cmp
cs
roll
jle
movsb
fisubl
add
popf
mov
push
movsl
outsl
pop
xchg
cmp
pushf
jae
test
popf
or
repnz
cmovae
stos
jns
js
sub
clc
bound
jns
gs
lea
xor
sbb
cltd
movsb
push
jge
add
jne
mov
in
mov
movsb
test
adc
push
xchg
push
mov
or
or
or
xchg
push
in
les
cmc
adc
xchg
test
mov
pop
repnz
add
hlt
mov
xchg
add
mov
negb
int
dec
pop
jecxz
xor
outsb
xchg
dec
sarl
movsl
mov
sbb
add
jnp
sarl
cld
xlat
lea
ret
jne
aam
sub
mov
mov
jge
or
and
mov
dec
ror
push
out
gs
aaa
clc
ret
jge
mov
aad
sbb
lds
xchg
aaa
mov
cltd
dec
das
les
add
or
icebp
xchg
and
sub
jmp
loop
add
push
lahf
add
mov
dec
jb
out
xchg
pop
jle
add
call
je
in
in
pop
repnz
call
jbe
dec
mov
add
pop
push
mov
imul
jge
xor
or
js
negl
mov
add
cwtl
mov
aad
mov
add
and
int3
ret
push
sahf
push
jecxz
sbb
fcoms
jo
add
shrb
mov
mov
enter
push
jo
sub
add
bound
and
repz
in
cmp
inc
adc
sbb
mull
mov
add
jae
dec
imul
stos
aaa
mov
sbb
fcmovbe
test
add
in
mov
movsb
mov
std
or
push
mov
bound
or
and
dec
les
lahf
lret
add
out
in
stos
push
dec
shll
jnp
mov
push
add
into
mov
fists
in
push
pusha
add
adc
nop
inc
add
adc
mov
lods
addb
jl
ficompl
addr16
fs
not
xchg
out
test
sbb
or
cmc
dec
xchg
sub
cs
out
xorl
scas
out
repz
cmp
sbb
pop
movsb
xor
cmp
lods
xchg
fmuls
out
mov
dec
mov
cmpsb
iret
lahf
pop
push
dec
dec
cld
test
fnstsw
dec
mov
stos
or
and
dec
xchg
pop
in
sbb
add
fidivrl
sbb
cmp
xor
andl
and
mov
out
ficomps
inc
add
xchg
xchg
mov
ret
jbe
sub
out
mov
fwait
leave
fistl
aaa
lahf
fldcw
out
add
mov
cmc
ret
cmc
into
idivl
mov
add
in
movsb
mov
xor
add
test
jmpw
add
stc
or
inc
add
jecxz
fists
xor
rolb
sbb
inc
sbb
daa
or
inc
add
sahf
inc
jns
rorl
adc
jns
mov
push
lds
push
cwtl
aaa
xor
add
mov
cli
movsl
call
and
dec
stos
addb
in
pushf
out
arpl
or
sbb
or
insb
dec
fsubrl
jmp
gs
mov
in
add
loopne
aaa
xor
fiaddl
fwait
insb
ljmp
adc
adc
pop
mov
cmpsl
xchg
push
movsl
and
jmp
arpl
clc
sub
jo
xor
aam
add
mov
dec
scas
xor
jmp
push
lds
unpcklps
mov
out
push
xchg
mov
shlb
cmpsl
lea
mov
pusha
add
lods
sar
cmp
pop
lret
insb
test
mov
outsl
pop
pop
and
fidivrl
mov
push
lahf
dec
cmp
add
xor
mov
add
push
push
mov
add
mov
mov
repz
sub
mov
scas
dec
fcoms
sbb
or
aad
cmp
mov
cmc
jb
ficoml
sarb
loopne
or
dec
addr16
add
cmp
adc
add
add
das
mov
or
jb
subl
out
popl
mov
sub
mov
test
sarb
mov
and
xchg
or
jbe
ja
add
lods
rcrb
mov
inc
xchg
xchg
lahf
addb
and
adc
jbe,pt
fsubrl
loopne
imulb
jnp
jge
xor
inc
je
add
xchg
fcmovnbe
jbe
loop
mov
hlt
je
add
mov
add
xchg
sti
repnz
gs
sti
int3
inc
add
movsb
xor
mov
cmp
ss
add
xchg
mov
in
addb
inc
add
js
test
movsl
mov
mov
fsubrs
repz
mov
sub
out
pop
in
push
cs
or
lods
cmp
xchg
sbb
fucomip
cmp
xor
add
adc
aas
or
inc
in
mov
pop
inc
fstpt
add
and
fs
push
sti
pop
sti
push
add
icebp
rolb
mov
lcall
je
cmp
imul
les
movsb
jge
and
lock
lcall
cmp
lcall
mov
jnp
pop
mov
dec
push
push
dec
fwait
push
add
inc
add
inc
or
push
or
cmp
addr16
mov
out
mov
pop
xchg
mov
push
pop
xchg
int
stos
repnz
shll
mov
int3
adc
sbb
add
testb
pusha
add
add
add
mov
fcomi
decl
xchg
pop
lret
xor
mov
je
jno
mov
add
mov
jb
xchg
jmp
adc
add
je
jp
idivb
std
mov
mov
xchg
ja
loope
ss
xchg
mov
mov
jp
imull
mov
add
lcall
xchg
xlat
dec
test
icebp
scas
sub
imul
and
sbb
bound
stos
hlt
idivb
add
stc
bound
xchg
inc
add
addb
mov
mov
or
fldt
dec
rol
or
mov
or
test
pop
cmpl
cwtl
rclb
psubusb
push
xchg
push
jp
mov
scas
mov
cli
pop
ficoml
add
mov
aaa
femms
xchg
in
or
jne
jbe
push
aaa
in
inc
add
std
hlt
out
xchg
sub
jae
aaa
add
pop
mov
mov
imul
lret
int3
mov
xor
push
popf
lds
les
movb
xor
push
pop
mov
daa
out
pop
out
pusha
add
div
push
pop
jge
cld
jmp
hlt
push
jne
inc
mov
jp
andl
es
push
cmpsb
mov
add
adc
pushf
dec
adc
cltd
sbb
push
mov
inc
shl
mov
daa
dec
data16
pop
mov
lret
hlt
adc
sbb
sarb
std
inc
data16
fstps
sub
int3
leave
test
add
out
mov
adcl
fstp
and
jae
mov
int
test
mov
jnp
add
nop
pop
inc
push
pop
push
test
pop
insb
lea
cmc
pop
mov
add
push
fwait
in
and
stos
out
stos
test
jge
cmc
and
push
xor
sahf
mov
repz
mov
das
sub
lods
jne
cltd
xor
popf
jge
xor
xchg
dec
jmp
data16
mov
mov
outsl
pop
in
sbb
add
cmc
jle
add
mov
lret
mov
adc
pop
and
inc
add
fidivrs
push
add
cld
decl
cmpsl
add
mov
call
xor
cmp
dec
xor
add
into
dec
sbb
add
dec
icebp
pop
jp
call
cmp
cmp
add
add
mov
cmpsb
adc
jbe
add
push
inc
add
sbb
and
shrb
inc
add
jge
push
insb
sti
lds
lret
xchg
pop
push
in
mov
jbe
or
pop
pop
cwtl
inc
add
jg
enter
mov
fwait
std
inc
shrl
mov
enter
loop
xchg
sub
pop
in
lds
fiaddl
and
mov
or
mov
inc
cltd
dec
sbb
lret
dec
add
pop
addb
jge
push
cli
fwait
adc
sub
pop
aam
add
aad
in
bound
push
in
mov
push
mov
mov
outsb
pop
mov
add
cld
mov
mov
jno
mulb
jns
mov
xchg
dec
stos
lahf
xor
cmp
movsb
dec
mov
or
add
shll
sub
clc
xchg
jbe
fdivrl
addb
mov
mov
jp
pshufw
ret
inc
int
ffree
add
add
pusha
add
xchg
in
dec
jnp
shrb
push
lock
cmpsl
imul
loopne
jns
mov
cmp
nop
mov
rorl
pop
test
icebp
sahf
mov
or
xor
insb
shlb
push
pop
push
bound
mov
cmp
jge
mov
jno
stos
dec
in
ljmp
or
outsl
sbb
inc
add
and
inc
add
out
xchg
and
xor
push
dec
pop
and
jmp
or
add
adc
aaa
rolb
add
push
add
jg
iret
cltd
xor
xchg
insb
imul
lahf
mov
mov
mov
lea
add
inc
add
scas
push
mov
cmpsl
inc
add
jb
dec
sahf
mov
addb
add
test
jl
dec
scas
lcall
mov
imul
sti
push
lret
mov
lcall
lret
cmp
jae
pop
mov
cltd
pop
das
xor
imul
out
add
mov
je
mov
mov
add
adc
xor
pop
js
outsb
jmp
add
addl
adcl
rolb
add
push
repnz
pop
ficoml
inc
popf
stos
call
loopne
cmp
cmpsb
adc
dec
sbb
mov
aas
movb
dec
mov
pop
xchg
rolb
addr16
adc
popf
sti
repnz
lret
outsb
shlb
jo
dec
xor
xlat
mov
insb
ret
jne
das
mov
jp
dec
pop
mov
movb
pop
call
addb
call
fs
daa
stos
lret
jnp
mov
xchg
movsb
inc
and
lock
lea
and
clc
sbb
mov
outsl
mov
popf
inc
je
add
inc
add
es
pusha
add
add
mov
adc
adc
lods
cmp
ja
adc
loop
je
jbe
pop
dec
mull
call
cld
out
aam
pop
cmp
imul
shll
jb
fsubrs
xchg
test
rolb
addb
push
std
imul
scas
loope
or
pop
call
xchg
xchg
add
sbb
xor
bound
xor
xor
add
roll
aas
pop
rcll
fsubs
mov
push
xchg
stos
pusha
add
inc
add
cmp
or
add
add
dec
popf
add
adc
adc
adc
pop
sti
and
add
out
es
insb
lds
push
outsl
xchg
ljmp
add
push
add
adc
or
mov
popf
sbb
les
push
jbe
add
inc
add
out
add
ja
jmp
jg
cmp
in
adc
jl
cmp
sbb
add
adc
pop
xchg
fmull
push
dec
fwait
dec
jb
mov
inc
pushf
roll
add
xchg
dec
pushf
mov
sbb
xor
mov
add
dec
adc
je
inc
add
add
sub
cmpsl
inc
clc
daa
mov
xchg
pop
ljmp
cmpsb
jne
fimull
or
movb
out
add
xchg
xchg
push
fisttpl
xor
test
int
inc
sahf
dec
mov
bound
sbb
mov
movd
pushl
clc
mov
xchg
jae,pt
add
leave
rolb
adc
cmc
mov
jge
mov
addr16
rclb
idivb
jae
cmp
inc
add
or
enter
lods
pop
pop
sbb
lahf
and
ficomps
lcall
fisubrs
add
setl
xor
int
sub
ja
inc
sub
lahf
ds
lods
jl
add
dec
push
mov
add
add
fcoms
cmp
movl
std
jle
or
addb
lret
mov
cmp
add
sbbl
lock
inc
sub
jne
mov
repnz
repz
inc
add
mov
add
mov
aaa
filds
daa
jno
or
or
inc
rol
dec
push
jo
into
push
push
ret
clc
push
mov
cltd
xor
push
in
cld
push
cltd
sbb
cmpl
add
adc
shlb
dec
xor
add
gs
mov
in
lods
movsl
jmp
pop
clc
inc
rcrl
int3
jns
movb
les
inc
add
push
mov
push
dec
xchg
pop
jge
add
cmc
test
xchg
test
add
std
lcall
into
xchg
or
mov
mov
leave
and
mov
iret
xor
and
xchg
mov
xor
xchg
pop
test
out
mov
jb
add
jne
out
and
xor
push
jge
shrb
inc
es
aaa
dec
stos
push
lods
les
or
add
or
repnz
sub
lahf
mov
push
push
loopne
xchg
repnz
lcall
ja
pop
xchg
pop
addb
add
aad
or
xor
data16
add
add
outsb
test
inc
mov
mov
and
in
ffreep
add
jb
mov
push
add
mov
pop
pop
mov
inc
add
lods
and
push
xchg
cld
cltd
stc
cli
jmp
popf
stos
in
jge
fdiv
jp
insb
mov
int
push
inc
add
mov
xlat
enter
add
adc
mov
push
cwtl
test
jg
xchg
or
add
fistpl
movsl
test
xor
xor
inc
add
insl
lea
or
inc
push
sbb
dec
pop
xchg
push
in
inc
stos
divb
jne
dec
mov
cmpsb
push
add
add
or
iret
mov
dec
mov
add
in
sbb
les
hlt
mov
adcl
leave
xchg
push
push
and
add
jecxz
push
pop
jno
push
push
dec
pop
xor
dec
arpl
push
in
push
cmp
mov
jnp
add
inc
add
std
jns
mov
add
add
mov
imul
jne
mov
repz
add
cs
out
rolb
repz
cltd
aaa
mov
xlat
or
ljmp
mov
or
add
mov
repz
jl
repz
adc
or
add
loopne
add
cli
mov
push
push
mov
jge
add
pop
aas
mov
inc
out
mov
cmp
jo
adc
add
mov
sub
sub
add
scas
mov
push
xchg
or
cmp
pushf
int3
fwait
and
push
scas
cwtl
cmpsl
xor
add
mov
movb
iret
push
aam
mov
pushf
sarb
in
lcall
or
jnp
test
add
test
inc
add
cltd
sbb
push
popa
adc
push
xor
pop
mov
pop
inc
add
jno
mov
sbb
inc
add
movb
ret
sahf
movsb
add
data16
cmp
jnp
mov
add
cmp
add
adc
add
stc
dec
lea
push
popf
push
add
in
and
add
jmp
add
adc
dec
fwait
mov
lret
fdivrp
outsl
scas
lock
rcr
in
adc
imul
inc
add
pushf
bound
adc
cld
cmp
fwait
data16
push
pushf
fildl
fs
pop
xchg
hlt
inc
add
add
push
push
mov
mov
fldcw
or
repnz
sbb
push
or
push
aas
sub
inc
add
xor
mov
hlt
cmp
and
scas
cmpsb
xor
lcall
add
mov
adc
or
cld
jb
mov
in
mov
aas
lcall
dec
mov
mov
mov
imul
dec
add
notl
das
add
or
dec
mov
in
arpl
ror
push
cmp
cltd
out
and
xchg
incb
enter
cmp
cmp
lea
jns
arpl
in
dec
mov
int3
shrl
lods
add
mov
mov
iret
fsubr
mov
mov
call
cmp
mov
inc
addb
xor
xor
xchg
mov
andl
add
stos
outsl
cmpsl
jbe
daa
pushf
cmpsw
lahf
lds
int
push
outsb
xlat
mov
xchg
das
std
out
addr16
mov
add
out
jbe
addb
negl
cwtl
cmpsl
movb
mov
add
add
and
add
mov
pop
push
adc
cltd
mov
inc
pop
insb
mov
in
icebp
mov
repnz
mov
enter
shrl
push
cmpsl
push
repnz
jge
push
dec
jns
loop
out
jle
sub
movsb
adc
xor
pop
lahf
or
aas
inc
ss
cwtl
into
leave
nop
aam
pop
rorl
dec
negb
mov
push
adc
addb
repz
out
inc
add
ret
xchg
add
or
popl
iret
mov
adc
add
rclb
jge
push
sbb
add
mov
and
push
inc
sbb
push
push
and
dec
insl
lret
cmpsb
or
or
pop
cld
jo
pop
xor
test
add
jl
adc
mov
lahf
ljmp
lcall
pop
mov
mov
add
or
mov
jge
add
movb
inc
add
or
je
push
mov
add
addb
and
jecxz
add
pop
pop
push
movsl
xchg
sbb
xchg
mov
mov
stc
mov
pop
pop
pop
sarb
test
repz
pop
jne
cmc
insb
xchg
cmp
add
cmp
mov
inc
add
dec
jl
scas
inc
add
movsb
ror
pop
inc
add
mov
adc
and
mov
jne
mov
ljmp
cld
jae
inc
add
add
imul
xchg
fnstenv
testb
in
push
movsb
out
mov
lret
lea
bound
mull
add
filds
clc
call
outsl
cmp
popf
nop
xor
icebp
sub
jmp
inc
test
add
cmp
inc
int
push
sarb
mov
loope
xchg
mov
mov
add
hlt
inc
mov
std
xlat
in
ss
push
cmp
push
cmp
insl
jbe
mov
mov
sbb
and
mov
test
std
stos
roll
pop
call
lea
inc
add
add
pop
add
jnp
ficompl
aas
or
mov
cli
xchg
xor
movsb
insb
mov
mov
add
movsb
or
inc
add
pop
lds
movb
add
xor
jecxz
aas
test
test
sub
push
in
pop
jp
repz
lods
rcll
cmpsl
dec
jp
stc
out
dec
mov
mov
cld
xor
fsts
add
fs
incl
jge
lods
scas
mov
test
daa
and
ja
dec
jne
mov
or
insb
pop
cmp
add
adc
adc
lods
adc
mov
fdivl
mov
fs
loope
add
add
push
xchg
add
mov
es
cmp
cli
dec
popf
mov
inc
add
cmp
loopne
xchg
sub
test
xchg
mov
lret
mov
lods
xchg
js
data16
mov
mov
add
mov
ficoml
push
inc
fistpll
sub
outsb
lea
push
jge
adc
add
pop
fdivrl
add
push
fwait
adc
add
mov
ds
aam
jp
adc
fmulp
jp
sub
arpl
mov
mov
dec
sarb
data16
adc
stos
ffree
mov
in
jns
cltd
pop
xor
xor
pop
mov
in
aas
and
popf
mov
adc
lret
je
call
push
push
fidivl
push
inc
inc
add
push
sahf
mov
in
jg
mov
ljmp
scas
call
add
mov
or
adc
jo
jmp
pusha
add
insb
dec
enter
arpl
movsl
dec
inc
add
mov
scas
adc
xor
or
inc
add
and
add
mov
push
cmp
in
and
dec
mov
insb
pop
sbb
or
popa
cli
pop
pop
jg
ja
mov
add
fsubr
inc
lock
cmp
lods
jno
test
ss
incb
int
adc
mov
neg
sub
sbb
sub
fisttpll
cmc
ret
fiadds
push
pushl
leave
lods
inc
dec
sub
cmc
outsb
das
mov
cld
sbb
add
cmpsb
mov
add
mov
pop
lods
jnp
add
inc
add
sbb
mov
dec
call
inc
pop
fwait
push
sub
xchg
fcomps
lods
divl
rolb
aas
mov
mov
js
sahf
ds
inc
add
add
or
mov
dec
fldl
mov
cmp
movsl
mov
lahf
jp
jno
jecxz
mov
adc
jo
cmpsb
test
push
jo
jg
sti
mov
dec
adc
or
aad
movb
fnstcw
cltd
pusha
add
outsb
dec
push
insb
scas
cmp
mov
sub
bound
lock
ret
add
mov
aad
fsts
stos
nop
das
sub
pop
ljmp
pop
and
ret
xor
adc
add
push
icebp
addb
add
inc
jo
fsubl
test
add
or
jo
push
ret
xchg
cmp
imul
add
test
sub
jmp
mov
pop
jae
adc
add
aaa
out
in
add
xor
dec
rcr
add
addr16
sub
clc
rorb
lea
add
add
out
clc
push
ss
push
add
cmp
outsl
sbb
in
add
ss
push
jecxz
ret
cmp
icebp
out
test
xchg
or
push
add
dec
rcrl
sub
insb
jno
bound
push
jo
and
repnz
outsb
out
fnsave
dec
xlat
xchg
fs
test
pop
enter
xchg
sahf
les
and
gs
xchg
rorb
lea
pop
lret
mov
cli
jp
add
cmp
movb
pop
outsb
xor
aaa
ja
or
sahf
ds
mov
bound
lods
jge
hlt
inc
add
aas
movsl
push
xchg
movsb
xchg
pop
sub
out
std
leave
test
mov
les
pop
ret
int3
mov
bound
aam
add
add
mov
je
and
jl
aad
adc
sbbl
dec
dec
cmpsl
call
out
add
fmuls
imul
test
jne
add
lods
mov
sbb
add
fwait
popa
sub
jnp
fildl
roll
adc
mov
nop
xor
push
sbb
lret
fbstp
push
stos
pushf
push
ja
sbb
addb
adc
mov
fxch
mov
pop
sbb
jne
inc
add
jp
aaa
mov
jns
in
inc
loope
inc
add
jle
sbb
push
jo
test
int
pop
lock
mov
dec
adc
add
jmp
dec
sahf
or
insb
pop
aad
mov
sbb
xchg
cs
imul
pop
int3
adc
cwtl
push
roll
add
add
decl
pushf
jle
xor
cltd
pusha
add
xor
stc
or
outsl
pop
push
arpl
or
lret
ljmp
dec
cmp
and
or
push
addr16
fldt
jge
cmc
mov
xor
dec
sbb
pushf
inc
clc
add
movsb
fs
jle
add
inc
adc
jge
fbstp
rcrl
jecxz
sbb
mov
movsb
imul
jbe
cmp
out
imul
enter
cmpsb
add
or
push
pop
scas
movsl
cltd
xor
or
xchg
jb
dec
movsl
dec
stos
jg
mov
lods
cld
mov
sbb
pop
imul
xor
lock
fldcw
dec
jnp
insb
leave
sub
pop
in
push
xor
imul
sbb
negb
fisubrl
and
add
div
sbb
add
push
inc
add
add
xor
jg
jo
mov
jl
leave
dec
sub
adc
fcmovnbe
mov
roll
jbe
inc
ret
add
arpl
mov
push
add
push
sahf
jge
test
outsl
pop
fcoms
ljmp
add
xor
lods
sti
add
gs
repnz
cwtl
enter
pop
vlddqu
mov
dec
mov
add
add
dec
dec
cmp
fidivrs
jge
add
repz
or
scas
xchg
and
loope
and
inc
add
inc
add
sub
jns
fcompl
addr16
add
fimull
xchg
mov
out
popf
jbe
loop
mov
push
push
lret
pushf
test
jmp
ror
push
stos
lcall
lcall
jb
add
xchg
push
xchg
or
inc
mov
icebp
sbb
pop
inc
adc
lea
jnp
mov
add
dec
pop
cmp
outsb
lret
js
add
addr16
lcall
je
xor
mov
movb
adc
push
clc
inc
push
addr16
ret
lock
xchg
xor
dec
mov
mov
dec
lea
shrl
rolb
loop
push
pop
xor
cmc
std
cmpsb
and
enter
in
leave
mov
outsb
dec
outsb
aam
add
lods
fnsave
pushf
js
mov
add
dec
add
add
test
fsqrt
cmp
sbb
cli
je
out
imul
hlt
push
cmp
push
test
adc
lret
dec
xchg
rorl
dec
mov
iret
int3
jo
into
mov
fsubrs
in
add
stos
push
jno
js
stos
nop
pop
cmc
mov
test
fistpl
lahf
adc
cmp
int3
popf
inc
es
icebp
out
sub
push
clc
mov
cmc
js
mov
and
sbb
out
pop
icebp
imul
xor
data16
inc
add
lea
jne
xchg
test
loopne
cmp
mov
jmp
dec
imul
xchg
mov
mov
in
movb
loopne
sub
add
rcrb
cmp
add
ljmp
test
ret
int3
scas
int3
ficomps
xorl
out
addr16
mov
lret
ss
mov
xchg
mov
adc
sub
test
add
inc
add
push
cltd
sub
add
sub
imul
das
rcr
fstpl
rolb
add
dec
fdiv
enter
bound
lahf
push
arpl
inc
inc
mov
dec
in
inc
add
push
test
sbb
add
add
cmpsl
pop
ja
inc
xchg
loope
and
in
jo
mov
hlt
add
ss
add
sbb
jns
add
aad
cmpsl
sub
add
mov
jb
mov
mov
loope
and
test
jno
test
mov
push
push
fcoml
mov
sub
dec
cltd
or
int
sbb
add
push
adc
popf
fs
inc
add
rolb
mov
sahf
sahf
shll
lea
xchg
out
mov
jge
add
cmp
pushf
insb
mov
es
rcrl
rcl
out
popa
xchg
fwait
or
mov
mov
add
add
repz
mov
mov
test
dec
mov
in
mov
jae
jnp
xchg
and
sti
punpcklwd
cld
mov
fmull
sbb
add
dec
jl
inc
jmp
cld
mov
push
or
add
inc
mov
aam
push
leave
or
mov
sub
mov
scas
xor
or
cmpsb
aaa
ret
movb
add
add
xchg
cmpsl
fxch
das
loopne
sti
sahf
outsl
xchg
mov
movb
sub
mov
sub
int3
xor
push
mov
adc
in
pusha
add
inc
inc
push
jge
push
cmp
add
mov
pop
jle
push
mov
jnp
jp
add
pop
mov
popa
mov
xchg
xchg
daa
int
add
int3
dec
jp
cmp
pop
dec
and
add
sbb
add
inc
insl
xchg
jbe
mov
gs
xchg
jns
push
mov
jecxz
dec
pop
stos
xor
rcrb
mov
lcall
push
cmc
mov
shl
mov
mov
cmpsb
mov
cmpsl
jmp
popa
leave
insl
sub
xor
ja
sar
rorl
sub
or
testl
xor
mov
mov
stos
jg
add
ja
and
or
cmp
mov
pop
sbbl
add
aad
add
sub
xor
xor
add
inc
add
mov
mov
jmp
leave
loopne
xchg
fstpt
mov
add
mov
pop
lret
adc
rorb
dec
push
cmp
cmp
add
or
push
or
inc
sarl
jl
add
fisttps
insl
mov
jb
ljmp
mov
inc
mov
clc
sbb
push
rolb
mov
mov
sub
lods
push
dec
lods
jno
jb
and
or
pop
in
pop
test
add
pop
int
imul
cli
in
pop
adc
cmc
mov
test
pop
int3
adc
testb
inc
mov
cmp
inc
daa
jbe
sbb
sub
sub
adc
outsb
out
gs
js
dec
aam
hlt
lret
inc
test
mov
fnstcw
cmpsb
sbb
inc
bound
dec
aas
stc
rclb
mov
jp
cwtl
fadd
add
add
add
push
insl
shlb
int
sub
loop
dec
in
dec
std
lods
out
pop
or
icebp
test
fwait
push
addb
aaa
add
jnp
rcrl
mov
add
add
fsubrl
shll
add
out
shr
mov
shrl
cmp
xchg
dec
lcall
stc
adc
in
nopl
pop
test
fimull
push
push
add
adc
cmpsl
add
sbb
mov
imul
test
lahf
sbb
xorl
add
sti
aaa
movsb
cmp
imul
pop
test
repz
loopne
aas
and
loope
imul
jns
icebp
pop
adc
xchg
mov
pop
in
mov
lds
movsl
sahf
mov
xor
xchg
jnp
add
enter
cmp
je
add
out
and
mov
negb
insb
fcompl
xlat
or
mov
mov
pop
insb
lret
or
cltd
push
xchg
flds
lds
add
jecxz
dec
outsb
test
pop
lds
ficoml
jnp
cmp
pop
xchg
cs
jl
mov
push
sub
push
scas
pop
push
nop
cmp
ss
pop
mov
or
or
mov
xchg
mov
in
add
xchg
fisubl
fisubrs
cld
fwait
sbb
add
mov
outsl
jecxz
jo
xchg
stos
mov
dec
push
mov
notl
lcall
mov
jl
sub
dec
pop
dec
pusha
add
add
or
jmp
add
jns
pusha
add
lock
adc
loopne
fstl
mov
fwait
arpl
add
xchg
inc
add
imul
mov
adc
mov
fistpl
adc
test
inc
sbbl
clc
xor
jge
movb
imulb
pop
dec
insb
pop
ljmp
loop
inc
add
data16
scas
in
lods
jb
pop
or
int
mov
xchg
push
push
into
mov
add
xchg
je
pop
movsb
lds
cld
sbb
dec
mov
std
mov
xchg
lods
hlt
cmp
lea
in
xor
xchg
mov
mov
jmp
xor
or
mov
fprem1
subl
lret
loop
jecxz
mov
xchg
imul
loope
adc
mov
mov
add
mov
push
sbbl
mov
test
scas
cmp
roll
addb
stc
dec
cli
jne
outsl
enter
int3
jne
add
outsb
fwait
push
xor
inc
add
fisubl
add
cmpsb
mov
minps
jmp
sbb
lcall
ret
sub
addl
xchg
clc
inc
inc
jno
pop
add
js
mov
mov
pop
pop
mov
xor
add
aaa
xor
lahf
ficompl
lret
and
mov
add
cmp
setp
addr16
nop
pop
out
cmp
out
sub
sub
mov
and
mov
sarb
and
call
in
gs
rolb
add
sub
les
pop
lcall
push
jno
jp
gs
mov
xor
add
sub
cmpsb
cwtl
inc
inc
add
mov
ficomps
adc
mov
scas
and
or
fwait
jl
add
js
add
enter
arpl
mov
add
scas
xchg
inc
dec
aas
jmp
popa
sub
mov
les
out
hlt
stc
and
test
iret
es
les
arpl
add
ja
add
jae
repnz
sbb
sti
enter
xor
jecxz
cmpsl
or
sub
add
xchg
push
cmp
pop
mov
popf
inc
cld
ljmp
and
rolb
stos
cmp
jge
out
inc
add
addb
das
fistps
or
sahf
or
add
dec
adc
pop
lods
movb
fmuls
stos
dec
addr16
fmuls
mov
test
add
mov
in
jg
in
mov
push
lds
cmpsl
bound
test
add
xor
add
mov
popl
pop
hlt
js
movsb
mov
or
mov
or
jae
mov
sbb
addb
push
sub
into
xchg
loope
xlat
fs
lds
mov
push
imul
movsb
adc
icebp
jne
bnd
and
daa
push
pop
shll
jb
add
push
shll
xor
mov
add
repnz
adc
jge
movsb
cwtl
fsubp
xor
inc
add
mov
lahf
cmp
mov
sarl
lret
mov
mov
aam
sbb
neg
lcall
and
leave
inc
hlt
jae
cmp
mov
addb
dec
dec
fcmovnb
add
mov
adc
vandnpd
pop
test
jg
fidivrl
dec
fs
call
mov
dec
and
add
ljmp
lret
add
lret
jmp
insl
xchg
aam
jae
fcmovne
std
mov
ss
xchg
and
add
xor
scas
call
push
repz
mov
je
adc
cltd
adc
push
add
dec
stos
addb
nop
popf
push
cltd
cmpsb
repnz
mul
and
sbb
dec
adc
dec
inc
add
or
insb
xchg
pop
loop
loope
rcrb
outsl
sbb
and
ljmp
lret
xor
out
xchg
mov
pushw
int3
pop
movl
or
notl
lret
pop
ja
imul
add
push
pop
sbb
inc
add
or
dec
fcom
sbb
jnp
add
dec
mov
inc
sub
nop
jmp
dec
push
in
push
test
ret
add
bound
mov
bound
sti
mov
xchg
jg
cmp
cmpsb
sbb
loopne
ret
push
rclb
mov
or
add
adc
mov
or
insl
fiaddl
add
pop
mov
add
out
jne
imul
into
jae
xchg
mov
fistpl
ret
mov
inc
xlat
jno
sbb
mov
fbstp
inc
adc
imul
lds
std
fcmovu
xor
les
push
push
insl
dec
jecxz
mov
lret
inc
add
sarl
and
in
pop
outsb
aas
and
cmp
movsl
repnz
cmpsb
mov
setne
out
inc
addb
daa
je
mov
fwait
lea
inc
sub
or
add
add
mov
repz
das
add
je
inc
add
mov
add
jns
mov
jmp
fdivrs
movsb
or
mov
ja
add
mull
add
cmp
dec
adc
fwait
dec
inc
add
add
adc
rcrl
jp
lret
adc
mov
push
pop
popl
hlt
rol
add
add
enter
aad
rcll
es
dec
or
xchg
add
addl
popa
xor
jg
push
jecxz
dec
dec
lret
sbb
ficoms
repnz
xchg
xor
icebp
and
lahf
or
pop
testb
sub
leave
dec
xlat
aas
push
add
ss
mov
push
push
pcmpeqb
loope
mov
aas
and
pop
pop
adc
pop
les
xor
aas
jl
out
clc
jp
shll
jp
lea
add
imul
inc
add
fbstp
bound
test
call
add
or
pop
scas
or
mov
stos
movsb
and
pop
pop
inc
add
into
insb
fs
pop
mov
pop
int
pusha
add
mov
jp
xor
jle
push
iret
adc
add
into
adc
fwait
in
add
out
pop
inc
inc
add
add
add
cmpsb
mov
add
icebp
fwait
jo
mov
sti
push
movb
lret
sub
fbstp
inc
add
jmp
outsb
in
mov
out
test
repz
push
push
adc
dec
cmp
push
mov
incl
and
push
jnp
aad
add
fsts
int3
fwait
ljmp
insl
gs
aam
add
enter
ljmp
ror
mov
mov
add
movb
dec
dec
push
out
sbb
fndisi(8087
cltd
pop
hlt
sub
add
fidivs
inc
add
or
fcom
arpl
mov
into
xchg
rclb
hlt
scas
rolb
cld
test
outsb
cmp
add
cmpsb
add
xchg
add
repz
out
xchg
imul
add
and
fmul
sahf
test
add
jg
sub
jno
add
mov
sub
test
dec
gs
jl
fsts
gs
sub
mov
lods
jno
punpckhdq
imul
mov
add
add
dec
jnp
sbb
movsl
adc
mov
gs
jne
sbb
jne
in
or
js
adc
cmpsl
in
loope
aas
in
push
add
mov
xchg
xor
movb
xchg
movb
in
sub
loopne
mov
xchg
mov
pop
lcall
addb
xchg
cld
pushf
dec
dec
test
add
addr16
cld
or
add
push
xchg
push
add
mov
push
aam
rorl
ss
sbb
push
mov
ds
adc
imul
xor
into
jo
and
addb
pop
pop
js
jo
xchg
icebp
cmp
pusha
add
or
sub
aaa
adc
insl
inc
pop
out
pop
shll
es
in
add
adc
int3
sbb
mov
arpl
push
addb
loope
xchg
pop
arpl
out
les
test
add
addb
sbb
