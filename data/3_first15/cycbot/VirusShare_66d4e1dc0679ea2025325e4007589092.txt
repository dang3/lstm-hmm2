mov
add
jo
add
mov
loope
xchg
dec
rolb
insl
out
nop
add
lcall
jo
mov
adc
add
jge
mov
call
sub
add
lcall
testb
add
add
jb
sti
sbb
or
das
dec
pop
push
pop
sbb
cmp
out
in
mov
add
xchg
add
mov
add
add
lahf
add
add
dec
loop
cmp
imul
inc
add
frstor
add
int
pop
lcall
pop
stos
lahf
sub
add
stos
aas
aas
shll
stc
cmp
int
scas
stos
jmp
add
adc
lds
add
cmpsb
add
push
fdivs
lcall
xor
inc
lods
fwait
test
add
out
and
mov
icebp
sub
mov
mov
mov
jo
and
mov
cmp
add
addb
cltd
daa
test
xchg
add
cmp
mov
std
cmp
pop
call
ficompl
add
int
mov
xchg
add
lahf
les
push
call
add
add
mov
add
fs
test
add
data16
add
add
add
mov
out
push
add
inc
dec
outsb
dec
fildl
mov
xor
in
pop
sub
rcrl
loop
shll
add
mov
xchg
mov
inc
adc
xor
in
stos
mov
pop
lret
add
ret
add
mov
xchg
jne
add
cli
mov
out
fcmovne
gs
or
cld
and
fnstsw
ja
inc
pop
add
fdivrs
or
ror
icebp
or
out
lea
jbe
mov
movsb
add
xchg
add
add
mov
dec
cltd
mov
cs
jnp
add
in
inc
cs
arpl
je
cmpsb
add
addb
pop
mov
out
pop
jp
leave
movb
add
add
dec
inc
add
cli
inc
in
mov
enter
test
lcall
jp
lods
pop
lods
js
in
pop
sti
pop
dec
xchg
add
jnp
sarl
or
mov
rorl
mov
repnz
add
dec
pop
insl
pop
lahf
rolb
mov
jg
add
inc
add
movl
mov
add
pop
das
and
mov
mov
cmpsl
jmp
inc
add
stos
mov
out
dec
in
test
jne
call
testb
mov
inc
add
add
aad
add
add
out
xchg
add
lock
push
and
mov
add
outsb
loopne
cmp
add
test
mov
push
add
loope
cmp
add
pop
fstpt
adc
push
add
mov
inc
add
sbb
iret
rcrl
add
movb
add
lds
add
add
add
add
rolb
gs
add
stc
pop
outsl
xchg
enter
sahf
jl
mov
stos
xchg
les
push
add
std
xor
jecxz
add
fnstcw
out
negl
imul
dec
popa
mov
xchg
mov
add
add
js
mov
lock
mov
mov
jmp
mov
add
add
add
and
mov
lods
pop
adc
add
jbe
xchg
int
mov
out
daa
jnp
pop
jo
mov
jl
rolb
mov
push
add
add
loope
mov
and
mov
add
jmp
add
rolb
and
mov
pushf
cltd
stc
add
mov
ret
aad
add
fiaddl
xchg
jbe
mov
cmp
test
fwait
pop
add
rcll
add
loope
push
dec
jle
add
das
imull
rolb
aas
lahf
and
mov
loope
icebp
xchg
pop
or
xor
call
das
push
jb
das
sub
and
mov
imul
xor
lcall
xchg
mov
push
add
xchg
lea
insb
gs
fsubs
cld
repnz
fsubl
mov
push
add
push
add
lock
add
call
cli
movb
add
add
sub
pop
push
mov
add
adc
add
or
push
add
cmp
dec
pop
out
das
lock
pushf
jae
add
adc
ud0
inc
add
or
testb
mov
ja
int
adc
aas
add
add
add
add
shrl
add
mov
addr16
dec
xor
daa
rol
ss
out
add
xor
jle
add
daa
cmp
mov
jbe
mov
jbe
push
mov
addr16
add
add
add
mov
pop
mov
pop
push
sub
adc
or
jns
std
add
mov
rolb
popf
jbe
out
xor
mov
dec
lret
mov
jmp
add
test
sub
mov
dec
jg
fsts
xor
add
std
popf
das
enter
imul
lcall
add
stos
lcall
jns
ds
dec
stos
jb
fwait
pop
repnz
lea
mov
push
syscall
je
das
into
pop
lahf
stos
movsb
add
sub
add
cmp
add
icebp
dec
push
and
mov
inc
add
add
add
mov
jne
xor
iret
pop
cmpsb
add
movsl
test
dec
mov
xchg
add
mov
lds
mov
add
push
mov
repz
repz
add
add
push
mov
out
popa
inc
pushf
mov
sub
add
add
xor
cmp
cli
mov
cmp
insl
add
lret
add
int3
in
mov
add
cli
or
pop
rorl
cmpsl
out
jns
add
rorl
sub
mov
pushf
les
xchg
add
test
pop
aad
add
mov
cmp
sti
hlt
add
mov
cld
les
sbb
mov
std
and
and
and
aaa
sub
jb
mov
push
add
lcall
add
add
outsl
jl
add
add
loope
fs
add
add
pop
rorl
push
add
add
mov
stos
mov
add
or
add
adc
data16
adc
int
testb
mov
lds
add
test
loopne
jecxz
mov
addb
xchg
xor
shrl
fdivr
adc
dec
push
add
ror
out
xorl
add
dec
jl
add
add
jne
sbb
add
mov
nop
add
mov
add
mov
add
pushf
xchg
insl
xchg
mov
xor
jp
add
add
mov
add
mov
icebp
pop
mov
add
incb
add
push
add
add
add
rcll
add
add
ljmp
add
add
add
add
jo
jo
arpl
rorl
inc
cmc
mov
push
mov
dec
xor
lret
ljmp
out
mov
push
add
mov
add
add
lahf
jae
jle
adc
mov
add
push
push
dec
testb
inc
add
iret
insb
addb
add
add
mov
cld
cmpsl
sbb
aaa
mov
aaa
and
mov
icebp
xor
mov
sub
jp
pop
dec
jmp
add
xor
sbb
sbb
push
add
mov
arpl
mov
jne
sub
push
cmpsb
add
movb
dec
sub
and
stos
mov
add
mov
mov
mov
mov
lods
xchg
into
xchg
add
cmp
mov
push
dec
icebp
ficompl
bound
mov
sub
add
mov
add
jae
ss
out
jnp
adc
pop
in
add
jle
inc
add
inc
add
lahf
dec
pushf
imul
movsl
dec
decl
xchg
push
add
mov
xchg
and
mov
sbb
pop
divl
xor
inc
add
add
add
test
clc
pop
js
cmp
add
rolb
inc
jno
add
out
cmp
fs
dec
add
add
mov
add
aaa
imul
jp
or
lods
pop
data16
faddl
add
mov
jmp
jl
add
add
inc
pop
xchg
lods
pusha
add
xchg
mov
jle
add
push
add
add
add
push
add
inc
add
xchg
add
add
sbb
xor
jne
repnz
test
test
mov
add
jg
add
fidivl
or
test
xchg
sub
js
add
add
dec
lds
xchg
add
imul
repz
add
mov
int3
stc
fcomp
push
xor
xor
mov
add
pop
rcll
movb
rcrl
fbld
in
jnp
xchg
add
add
pop
test
pusha
add
addb
add
ret
dec
sub
add
add
add
data16
pop
jno
add
and
mov
lods
call
stos
sbb
add
add
sub
arpl
add
add
mov
testb
mov
add
add
pushf
mov
pop
pop
out
add
adc
pop
xlat
mov
mov
mov
add
add
mov
in
jmp
add
nop
add
xlat
roll
xor
dec
fchs
add
mov
push
add
mov
jle
cmpl
data16
sbb
add
fsubrs
or
mov
dec
add
jg
dec
lods
cmc
das
add
mov
imul
add
jnp
loope
pop
dec
dec
or
lahf
sub
iret
mov
and
mov
mov
xchg
xlat
add
mov
mov
jne
fwait
test
mov
not
add
and
mov
rolb
add
call
push
add
rolb
inc
sub
mov
push
add
sbb
daa
mov
scas
icebp
popa
jmp
add
lds
pop
xchg
lods
addb
add
mov
mov
fcoms
sbb
insl
pop
add
mov
jne
call
ss
push
and
mov
rolb
hlt
add
or
add
jns
add
mov
xchg
and
pop
daa
jle
dec
fldenv
sbb
ret
mov
out
add
mov
xchg
add
and
mov
jno
cmp
push
xchg
test
cmp
movsl
movsl
jb
xchg
add
dec
xlat
faddl
add
add
lods
lea
cmp
mov
push
add
sub
cmpsb
add
repnz
jmp
add
add
add
in
sti
xor
shll
add
mov
mov
add
push
cltd
mov
add
cmp
add
out
adc
test
add
xor
sarb
xchg
fstl
lcall
add
add
push
push
cld
call
sub
mov
cs
es
ss
lea
push
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
sub
push
pop
push
push
jmp
jmp
add
add
xor
pop
dec
xchg
arpl
shll
sub
mov
add
cld
push
cmpsb
add
dec
mov
add
std
push
pop
push
xchg
sbb
dec
jg
and
mov
bound
mov
xlat
push
add
mov
loope
add
adc
inc
add
xchg
sti
test
popf
push
in
nop
add
enter
imul
out
jns
mov
mov
mov
inc
push
add
xchg
data16
add
popa
add
xchg
mov
loope
add
jo
loopne
pop
pop
sbb
xchg
add
lahf
mov
sub
add
add
xchg
fnstsw
inc
fldl
mov
sub
sub
add
mov
push
add
add
adc
insl
add
mov
mov
add
pop
sub
lret
xchg
add
add
dec
add
mov
insl
sbb
push
pop
pop
cld
std
pop
out
jno
jbe
std
addb
add
add
jp
push
scas
inc
enter
xchg
add
stc
ljmp
dec
add
sub
aad
add
mov
fnstenv
xchg
aas
jno
fsubr
or
mov
int
xchg
add
sahf
into
push
add
mov
and
add
add
std
test
push
sbb
add
dec
dec
pop
jnp
xchg
jge
cmp
addl
fcoms
mov
mov
add
xchg
add
jmp
test
inc
sti
and
mov
push
add
and
jecxz
ret
ja
in
pop
mov
cmp
sbb
loop
es
mov
aas
xor
subl
add
repz
mov
les
lcall
leave
or
add
pop
add
pop
roll
add
cltd
nop
add
dec
icebp
cltd
or
lahf
mov
or
push
and
mov
aas
add
xchg
add
mov
mov
xor
add
add
cmpsb
add
push
add
add
push
add
in
dec
inc
add
nop
add
add
iret
insl
imul
pop
jge
add
pop
xor
xor
pop
arpl
pusha
add
pushf
cli
sbb
push
add
add
test
aam
jl
inc
rolb
sbb
mov
imul
sbb
cmp
xchg
xchg
pop
out
pop
pushf
add
mov
hlt
add
xchg
add
cmpsl
mov
lret
sahf
mov
out
test
imul
add
add
add
lds
cmp
add
fsubs
add
test
or
add
int
sbb
mov
es
add
iret
sti
pop
xchg
popa
mov
mov
sbb
mov
pushf
add
sbb
push
add
add
mov
addb
add
add
add
mov
sbb
lcall
inc
add
pusha
add
loope,pt
add
sub
addb
and
loope
cmp
add
pop
addr16
in
lock
fsubr
inc
add
insl
imul
add
inc
xchg
fiaddl
iret
xor
xor
add
mov
fisttpl
jmp
int
add
lret
pop
out
xchg
icebp
aad
add
add
add
ficompl
test
inc
hlt
add
popf
xchg
std
pushf
xchg
add
add
xor
fadd
and
sub
aaa
and
add
push
cld
call
add
mov
jg
jnp
or
frstor
addr16
call
add
lock
in
cmpl
xchg
push
mov
addl
aaa
and
add
sub
mov
adc
data16
add
add
add
cmp
sti
stos
js
dec
adc
dec
inc
add
mov
jns
cs
lods
sub
add
sub
imul
aaa
adc
lods
test
add
pop
das
jg
lahf
int
sbb
mov
popf
jbe
push
pop
into
rol
xor
in
cmc
lret
mov
mov
stos
and
push
add
mov
add
xor
add
push
mov
xchg
test
std
test
add
add
add
icebp
jnp
jns
fisubl
testb
add
mov
add
cmpsl
jb
movsb
add
scas
lret
add
add
push
hlt
add
jmp
and
outsl
xchg
mov
jmp
nop
add
xlat
scas
jns
data16
jg
add
mov
fbld
fstps
and
dec
into
pusha
add
out
ret
out
mov
pop
enter
imul
mov
out
sub
out
mov
in
add
add
addr16
loopne
cs
inc
rolb
xor
jl
pushf
adc
add
cmp
rolb
scas
and
dec
mov
xchg
aad
add
add
mov
sbb
add
add
add
outsl
lods
hlt
add
add
push
adc
mov
xchg
lods
data16
lods
pushf
mov
dec
popa
lods
ret
push
xchg
popa
psraw
dec
cpuid
add
add
adc
lods
sbb
jecxz
add
add
jo
jecxz
pop
icebp
xchg
jecxz
adc
add
mov
add
mov
add
pop
in
or
add
add
add
test
in
scas
orl
adc
mov
mov
sar
mov
add
add
add
xchg
pop
pop
cltd
mov
mov
jnp
dec
pop
das
cmp
sbb
pop
notl
add
cmpsl
or
add
cmp
add
xor
jl
cli
sub
adc
jbe
ljmp
jnp
cmp
addr16
add
enter
cmp
add
into
pusha
add
inc
add
and
pop
xchg
mov
add
insb
adc
les
sbb
add
add
jecxz
pop
dec
popf
enter
out
fistl
jo
adc
cmp
xor
pop
mov
out
add
jo
xor
dec
addb
int
and
mov
mov
inc
add
adc
push
repnz
jecxz
mov
adc
loopne
add
dec
xchg
add
sbb
inc
add
add
add
push
adc
push
inc
mov
xchg
add
add
cmpsb
add
add
add
pop
sub
push
inc
add
aad
xor
add
jno
add
add
push
add
pop
and
add
out
jle
add
testb
sbb
xchg
add
add
jo
sub
testl
aas
push
cli
scas
loop
push
add
mov
lock
les
mov
sbb
add
jae
pop
jne
add
and
mov
pop
sbb
and
mov
add
add
inc
add
shll
movsl
push
fdivrs
push
into
jp
mov
jnp
and
mov
add
add
add
push
adc
mov
loope
add
inc
add
add
test
jg
adc
roll
add
xor
add
mov
add
pop
fdivs
mov
inc
add
add
ja
cli
scas
imul
sarl
nop
add
add
add
loope
sbb
pop
test
jg
add
inc
repnz
add
add
push
add
add
sbb
push
sbb
mov
jecxz
mov
add
mov
dec
cmpsb
add
add
add
jmp
gs
gs
add
adc
mov
pop
push
add
mov
xor
xchg
add
test
cmpl
movb
stc
mov
push
add
mov
out
adc
sub
add
jo
sub
dec
repnz
aam
xor
js
jg
cmp
notl
arpl
shll
adc
rcrl
loopne
mov
add
add
mov
add
mov
adc
cmp
and
mov
dec
push
int3
dec
and
mov
arpl
or
lock
sub
push
add
scas
clc
test
out
rorl
mov
fstl
sahf
add
fwait
mov
jbe
jmp
ret
add
mov
stos
dec
insl
add
add
scas
clc
rolb
jg
add
in
or
jnp
and
mov
sti
testl
mov
clc
pop
movb
in
lods
jo
sub
out
jno
jl
out
xchg
dec
test
xlat
mov
xchg
cwtl
cmp
sub
bound
mov
add
push
ret
jg
mov
sti
in
xchg
add
js
add
mov
addb
add
xor
clc
lcall
lods
mov
add
add
xchg
in
add
jae
sbb
cmp
add
sub
add
mov
add
xchg
xchg
add
sbb
add
mov
add
addr16
imul
add
or
add
insb
imull
push
add
into
lock
adc
mov
leave
xor
pop
shl
iret
pusha
add
das
dec
std
dec
jnp
test
inc
jp
gs
or
cmp
add
mov
adc
lods
sbb
sbb
add
cmp
add
int3
pop
push
fistpll
rolb
cltd
iret
stc
pop
lret
add
sub
mov
add
cmp
mov
adc
add
mov
push
add
add
test
inc
xor
inc
add
add
pop
sbb
std
lds
and
jecxz
test
add
jbe
sbb
add
add
mov
dec
cmpsb
add
cmpsl
testb
loop
mov
out
adc
add
add
lea
popl
xchg
add
add
push
add
lods
inc
add
xchg
adc
cmpsl
sub
or
nop
add
int
sub
add
add
ja
test
jp
push
add
testb
push
sbb
xchg
add
iret
push
add
mov
xchg
mov
gs
ret
add
daa
mov
gs
pop
arpl
or
add
lods
cwtl
and
rolb
add
dec
nopl
xchg
addr16
in
gs
mov
mov
mov
das
xor
aad
and
push
sub
addr16
ret
push
add
add
jmp
dec
stos
shrl
ret
xlat
cmp
add
xor
jns
pop
pop
and
sahf
cmp
add
add
sub
jne
or
std
add
mov
add
or
pop
outsb
outsb
scas
add
add
js
add
std
jg,pt
add
mov
repnz
add
add
pop
fwait
xchg
cmp
sti
pop
rolb
cli
xchg
add
add
add
int
cmp
add
add
mov
mov
clc
mov
or
sub
add
add
lcall
mov
add
int
lret
dec
mov
sahf
adc
jg
add
pop
cs
add
jge
pop
cmp
add
stc
adc
xor
jge
xor
je
cmpsb
add
enter
popa
push
jae
test
dec
out
ds
add
add
mov
out
int3
mov
subl
not
sub
cwtl
shl
add
add
rcll
pop
jbe
push
cmp
std
addb
add
loop
lret
int
add
cld
int
dec
stc
mov
add
or
add
add
add
add
ret
add
pop
add
add
stos
add
mov
fisubrs
rolb
cs
add
jno
jne
add
icebp
add
and
push
add
dec
mov
cmp
add
add
add
add
push
xchg
add
add
push
mov
dec
cmp
add
jecxz
cmp
jne
hlt
add
stos
mov
popf
inc
add
sub
sahf
imul
loopne
jg
mov
add
ficomps
stos
and
mov
add
cmp
clc
jbe
push
push
or
add
sub
add
fldcw
xchg
xor
jp
add
cmpsl
jo
cld
testb
loopne
dec
scas
insl
pop
aad
cmp
add
int3
xchg
jle
pop
iret
je
out
loope
add
stos
inc
int
add
scas
jnp
add
ret
dec
mov
into
inc
add
leave
popa
bound
mov
add
add
push
jg
movb
add
sbb
lea
mov
jge
add
add
mov
mov
mov
xor
mov
sub
push
add
icebp
jb
push
out
xchg
movsl
mov
mov
push
pop
and
je
and
pushf
test
addb
add
add
xchg
jno
dec
outsl
push
add
xor
inc
add
push
add
add
stos
aam
nop
add
mov
out
jmp
add
add
mov
jp
add
inc
add
leave
cmp
add
add
add
add
fcompl
mov
pop
mov
gs
xchg
and
imul
push
push
adc
push
je
aam
sub
and
xchg
push
stos
sbb
dec
mov
les
mov
add
addb
jge
add
pop
pop
xorl
cmp
hlt
add
call
add
add
jbe
and
cmpsl
sub
lcall
add
add
jl
add
mov
movsb
add
add
add
and
mov
out
inc
add
mov
data16
repnz
fcmovnb
add
insb
inc
repnz
push
or
int3
stos
push
add
mov
add
loop
int3
push
pop
cmp
mov
cs
clc
cmc
xorl
ret
jnp
js
cmpsb
add
jno
pop
xor
add
add
jg
sbb
unpcklps
push
add
xchg
add
push
sbb
sub
add
scas
out
aam
sbb
sub
testb
cmp
ret
dec
mov
inc
add
mov
push
adc
mov
add
add
scas
out
loope
call
mov
add
shl
add
inc
add
push
add
pop
cmp
cli
adc
mov
mov
lret
pop
pop
pop
call
push
addr16
mov
fdivl
mov
pop
xchg
add
aaa
inc
add
add
lcall
jmp
and
add
mov
add
add
push
lret
adc
loopne
pop
cld
jo
xor
arpl
rol
and
in
sub
cs
xchg
jg
pop
jmp
and
int
arpl
xchg
enter
xor
add
mov
js
pop
aas
mov
mov
xchg
movsl
xchg
rcrl
add
out
inc
push
lcall
adc
mov
loopne
mov
push
add
inc
add
add
add
data16
into
inc
repnz
add
fnstcw
sub
add
add
jle
push
mov
xchg
xchg
add
add
add
push
add
or
pop
imul
push
insl
repz
idivl
lcall
repz
mov
fistpll
mov
stos
cmpsl
jno
add
fwait
pop
sbb
add
ljmp
xor
jnp
add
movsl
add
xor
stc
rolb
ja
sbb
in
sub
add
mov
xchg
mov
mov
push
push
add
add
cmc
sub
add
insb
jmp
add
add
mov
add
loop
mov
mov
mov
and
fiaddl
pop
sbb
sbb
sbb
push
add
fldt
jecxz
add
add
add
mov
stos
pop
push
add
orl
add
push
imul
sbb
xor
dec
or
inc
mov
xchg
jo
adc
add
xchg
add
sahf
cs
lcall
es
add
dec
dec
movb
sahf
jbe
mov
mov
pop
push
inc
add
push
add
xlat
loop
xchg
mov
mov
sub
rolb
add
js
add
add
jle
clc
daa
xchg
add
mov
gs
add
dec
imul
jnp
add
or
dec
hlt
add
imul
add
lock
cs
scas
xor
std
addb
lahf
cld
sbb
in
push
add
add
into
sbb
add
andl
mov
popf
data16
fs
xchg
mov
add
push
add
sub
outsl
addr16
dec
xlat
or
mov
das
and
sub
add
or
add
dec
outsl
mov
mov
push
add
push
add
and
mov
add
mov
test
cmp
sbb
add
int3
loopne
leave
or
add
xchg
add
sub
test
push
sub
sahf
cmc
inc
xlat
mov
add
cld
sti
dec
add
inc
add
movsb
add
icebp
mov
or
mov
ds
pop
pop
ret
add
lods
lock
mov
add
mov
xchg
vpshufd
imul
test
sahf
test
dec
mov
notl
addr16
divl
jle
add
jbe
jns
sbb
xchg
popf
mov
dec
sub
xor
jbe
cmpl
rolb
and
add
mov
xchg
out
jae
lods
add
sub
add
mov
mov
add
add
mov
shrl
loop
roll
add
jne
add
push
xchg
add
add
sbb
jno
gs
jbe
lds
add
sub
int
add
mov
xor
imul
or
and
mov
add
mov
insb
aad
add
add
pushf
push
add
add
mov
add
iret
jp
mov
adc
pop
in
mov
inc
in
jae
mov
movsb
add
in
add
cmp
mov
add
mov
into
mov
cmp
jne
add
add
sti
jg
popa
or
nop
add
imul
dec
mov
int
int
movb
nop
add
push
repz
mov
mov
adc
pop
pop
js
dec
dec
mov
add
stos
movsl
stc
xor
add
or
dec
dec
sub
add
add
mov
push
add
add
dec
test
xor
adc
pop
adc
out
or
jle
xor
xchg
add
add
call
repnz
mov
outsb
call
add
add
int
and
stc
jmp
add
add
fmul
ret
dec
push
sub
insb
jg
sbb
jnp
sub
pop
bound
mov
jns
pop
cltd
fisttps
mov
dec
movsl
inc
add
add
mov
addb
mov
push
gs
add
jecxz
add
add
cld
xor
cmc
sbb
add
sahf
push
add
sub
stos
aas
inc
lea
fdiv
add
test
arpl
push
std
mov
in
sbb
iret
lods
jle
pop
pop
jmp
adc
add
push
add
stos
fdiv
add
add
int3
addb
and
test
add
add
push
mov
adc
movsl
rolb
pop
lahf
pop
dec
xchg
add
lea
fbstp
cwtl
mov
add
ret
xchg
mov
sbb
jb
mov
jle
bound
mov
in
xchg
scas
in
push
add
dec
mov
add
add
aam
xlat
movsl
lahf
or
add
adc
pop
les
sbb
or
mov
in
push
add
mov
loop
mov
add
add
add
sub
subl
addb
dec
push
int
add
cmp
push
jbe
nop
add
dec
jnp
outsb
adc
xor
and
mov
add
mov
testb
add
mov
and
inc
add
add
daa
pop
mov
add
xchg
popa
lahf
cltd
sub
add
add
adc
sbb
cli
jns
jno
add
hlt
add
pop
sbb
jg
inc
pop
dec
les
call
adc
xor
mov
mov
push
push
add
cli
imul
jne
pop
add
add
adc
pop
xor
add
add
pop
push
shr
pop
sbb
adc
sub
test
outsl
add
or
stos
xor
test
jae
adc
adc
xor
fsubrs
and
mov
pop
std
push
addb
leave
mov
push
add
sbb
add
jecxz
add
adc
lods
std
add
add
add
xchg
add
fnsave
mov
mov
or
into
ret
inc
add
out
out
xor
inc
add
pop
sbb
dec
pop
stc
imul
mov
cli
outsl
pop
jnp
add
mov
mov
fnstsw
or
add
leave
and
mov
jecxz
cmpsl
out
add
jmp
and
fwait
add
mov
sub
mov
add
jecxz
iret
repz
aaa
addr16
cmp
add
xor
in
mov
mov
jl
das
out
sbb
cli
nop
add
add
mov
push
xor
pop
pop
add
add
cld
add
mov
insl
add
out
add
je
insb
or
stos
mov
pop
xchg
push
add
lds
add
mov
sbbl
push
packuswb
add
rcl
sbb
xor
add
mov
rolb
addb
jecxz
mov
xor
frstor
add
mov
push
add
cmp
adc
cld
sub
cltd
mov
add
hlt
add
sti
cli
pop
outsb
inc
add
scas
iret
mov
xchg
jo
xor
jl
add
hlt
add
xor
dec
lock
add
add
ljmp
add
mov
mov
imul
add
xchg
adc
in
fisubs
add
xchg
lods
int3
cmp
test
ret
repz
jge
cwtl
sbb
dec
and
sbb
clc
mov
push
inc
sub
int
rorl
add
mov
div
add
add
ljmp
sub
hlt
add
mov
add
add
add
mov
js
add
ds
and
pop
movsl
shll
and
inc
add
das
add
mov
cld
push
popa
lods
sbb
lea
jo
push
stc
xor
cwtl
xchg
sub
add
lods
ja
add
fdivl
sbb
push
ds
repnz
btr
add
mov
addr16
addl
mov
out
lea
add
mov
filds
push
cmpsb
add
cmpsb
add
add
mov
xchg
add
and
mov
or
pop
imul
push
push
add
xrelease
push
adc
lahf
adc
xor
or
add
add
mov
jge
xchg
add
add
addb
cmpsl
ss
lock
sbb
add
jge
jno
add
push
add
rolb
pop
iret
je
inc
add
sub
add
clc
mov
mov
movsb
add
add
push
test
pop
lds
add
add
jb
out
inc
add
stc
xor
push
test
mov
dec
lock
add
mov
aas
mov
add
cmpsb
add
sarl
add
imul
cwtl
mov
push
add
inc
scas
xchg
mov
add
ja
push
add
add
daa
out
testb
add
add
mov
leave
push
cs
push
add
add
cmc
lahf
insb
sub
ljmp
and
add
js
add
sbb
aas
fwait
addb
addb
push
add
jne
aaa
xchg
aam
pop
mov
pop
xchg
cmp
add
push
add
add
add
mov
xchg
push
fbld
je
or
ds
clc
jl
add
or
int
out
cmovs
pop
cmp
push
add
mov
add
add
scas
popa
or
mov
into
addr16
pop
inc
add
loop
xor
jns
xor
pusha
add
inc
nop
add
test
ljmp
add
clc
push
pop
mov
add
mov
pop
addb
popa
push
add
psubsw
add
add
loope
add
adc
xchg
add
add
add
mov
adc
xchg
xchg
and
and
loop
lock
add
rolb
stos
sub
addb
add
add
add
les
scas
das
pop
dec
pop
out
sub
add
mov
add
adc
in
cmp
sub
add
mov
add
and
stos
sub
adc
push
out
add
inc
add
fnstenv
pop
sbb
addl
notl
fstp
sbb
addb
mov
adc
dec
cmp
add
mov
leave
mov
ja
lea
fnstenv
add
mov
xchg
add
sub
cmpsb
add
xor
scas
add
dec
inc
jle
add
js
add
add
inc
lea
inc
add
push
add
outsb
outsb
mov
cmp
pusha
add
pop
cwtl
rolb
mov
movsl
adc
push
add
aaa
jno
iret
sub
sub
add
jg
add
push
add
add
rolb
sbb
add
ja
add
add
xor
rcll
stos
fists
arpl
add
ret
add
flds
push
cmpxchg
add
add
add
jo
loopne
jo
scas
jmp
movsb
add
pop
in
push
add
add
and
add
leave
mov
add
fwait
add
je
push
add
jecxz
add
add
mov
push
sbb
add
pusha
add
xchg
add
loope
mov
xchg
lret
dec
cmp
mov
pop
arpl
add
call
add
jl
add
pop
gs
imul
and
ja
loopne
push
into
or
mov
addb
lret
mov
push
cmp
jns
aaa
xchg
mov
daa
addl
add
std
push
add
pop
lahf
popa
in
pop
fstl
test
xchg
daa
insl
mov
add
fsubs
jbe
pop
cmp
push
repz
add
lcall
mov
addb
jae
add
add
jb
inc
add
mov
add
xlat
inc
adc
hlt
add
add
in
and
add
add
add
rcr
and
rolb
or
mov
in
xchg
sbb
push
rolb
jae
lret
or
add
dec
jbe
fbstp
push
add
add
add
sub
mov
pop
sub
hlt
add
in
ret
add
mov
or
mov
or
pop
arpl
fsubl
push
add
add
add
dec
mov
add
add
out
leave
adc
imul
loop
lock
cltd
add
and
add
cmp
or
add
dec
xchg
add
push
add
cwtl
xchg
add
das
inc
add
add
mov
cvtdq2ps
lcall
inc
add
js
testb
xchg
adc
add
add
inc
sbb
pop
dec
mov
cmp
repz
add
out
add
add
or
inc
add
addb
insl
lea
ret
outsb
cmp
cmpsb
add
add
lds
mov
add
sub
xchg
add
jns
jg
adc
add
add
xor
xor
inc
add
mov
fsubrs
pushf
mov
adc
mov
add
mov
mov
mov
add
sub
mov
push
sub
loopne
scas
or
mov
rolb
aas
imul
les
adc
add
addb
xchg
add
add
xchg
ffree
add
jo
pusha
add
ljmp
pushf
out
mov
pop
cltd
add
lret
add
add
add
add
add
movsb
add
ret
rolb
cwtl
xchg
cmp
je
xchg
add
fwait
mov
mov
mov
add
insl
fildll
add
sub
mov
mov
adc
sbb
add
cmp
stos
fsubrs
aam
mov
sub
fstps
xor
add
add
popa
outsl
addb
add
add
sub
sbb
add
add
sub
add
add
call
enter
or
mov
pop
mov
add
add
aas
add
push
lret
adc
adc
in
push
add
add
mov
add
add
add
add
mov
mov
mov
jns
cmp
mov
mov
and
fs
rcl
add
push
add
int
xchg
cltd
pop
test
dec
mov
dec
rol
add
ret
insb
rcrl
cmpsl
setl
bt
mov
cli
xchg
add
mov
add
lret
testb
add
addb
push
add
add
mov
sub
add
jecxz
mov
inc
xchg
add
cltd
pop
push
insl
out
xor
addr16
adc
inc
loopne
sub
add
and
stos
sub
push
pop
rolb
sub
sbb
add
or
fwait
pop
inc
add
fnstcw
push
jle
add
fcmovbe
adc
inc
add
cmp
and
mov
mov
popa
rol
jg
add
add
lret
mov
repz
add
mov
aaa
add
mov
out
jb
sbb
dec
jne
sub
lahf
pop
nop
add
aas
in
jmp
jl
dec
ficomps
pop
ja
loop
enter
add
add
add
add
add
cmp
add
test
clc
add
loope
fcomps
add
scas
dec
cmp
adc
pop
pop
in
lahf
mov
sub
add
add
sub
fidivrl
jge
inc
clc
mov
add
add
and
sub
fwait
pop
fiaddl
add
sub
add
mov
adc
and
add
aam
rolb
lcall
dec
sahf
push
add
mov
push
inc
dec
sarl
fsubl
add
mov
outsl
arpl
mov
insb
mov
aaa
addr16
sub
out
cwtl
pop
insb
pushf
lcall
aas
add
mov
mov
xchg
mov
jl
jp
add
fidivs
add
add
pop
leave
mov
add
aas
xchg
int3
pusha
add
rcr
mov
add
mov
shll
leave
bswap
mov
mov
addb
sub
addb
add
add
adc
push
add
and
mov
in
vmovups
jmp
bound
mov
int
jle
xor
adc
sbb
or
mov
fdivrl
or
in
inc
iret
push
add
add
push
push
add
jbe
mov
jno
mov
adc
out
add
add
sub
fstpt
add
fcmovne
clc
adc
push
sbb
adc
fidivl
movsl
jp
add
add
add
out
pop
stos
adc
js
add
push
fstps
and
shll
aas
or
add
stos
adc
add
sbb
add
outsb
in
cmp
ljmp
insl
addr16
add
xor
fwait
xor
add
fldl
das
xchg
add
mov
push
add
xchg
add
arpl
inc
lods
in
add
add
mov
push
int3
lcall
add
fmulp
add
add
xor
add
add
sbb
add
xchg
ret
ss
lret
lods
cmc
dec
inc
pushf
pop
std
sbb
add
adc
addb
test
sbb
ja
adc
push
add
fdivrs
inc
dec
test
test
add
push
mov
add
insl
cmp
movb
add
aaa
adc
xchg
add
movsl
add
pop
mov
js
inc
popf
lret
in
outsb
sub
cmp
add
mov
add
test
popa
sub
fisttpll
cmp
jb
mov
sub
roll
add
test
add
movsb
add
sub
dec
pop
jge
in
add
fidivrs
pushf
xor
cmc
mov
popf
sub
xor
mov
jno
add
push
add
add
sbb
add
aam
adc
addb
mov
or
xchg
add
add
inc
ja
rolb
repnz
pop
add
dec
xchg
mov
xor
addb
inc
add
stc
aad
add
inc
add
sarl
lds
dec
jecxz
cmpsb
add
add
dec
popf
mov
add
add
sahf
cltd
and
xor
jle
add
sti
imul
enter
add
add
cmp
stos
jns
mov
into
and
mov
mov
fstl
add
push
cltd
push
pop
scas
fwait
inc
push
add
inc
add
add
pushf
push
add
add
mov
add
inc
jg
add
pop
cmp
mov
lock
inc
push
add
lret
add
mov
pop
insl
loopne
mov
scas
inc
add
inc
add
add
push
mov
repnz
and
jo
scas
cwtl
fisubrl
mov
jle
push
add
add
jae
sar
jne
add
in
xor
xchg
xchg
icebp
xorl
push
add
push
add
and
lods
test
cmp
pop
pop
divl
add
in
ljmp
mov
add
insb
and
mov
sbb
mov
sarl
icebp
adc
add
popa
lods
jmp
add
dec
xchg
add
add
adc
out
jp
shll
mov
stc
xchg
add
add
add
bound
mov
mov
fisubl
pop
fsts
jae
add
ds
addb
add
sbb
test
adc
mov
arpl
ficomps
stos
test
jae
add
pop
add
aad
mov
sub
push
add
mov
or
add
pop
push
push
add
addb
push
add
cwtl
sahf
mov
cmp
add
add
and
lcall
add
rolb
test
lds
imul
std
inc
xchg
stc
incb
add
cmpsl
jno
or
mov
add
dec
loop
pop
or
and
add
add
nop
add
add
mov
stc
ret
xor
xor
push
jmp
add
aad
out
jecxz
cmp
mov
add
ret
sahf
das
jne
jecxz
shll
push
add
add
jmp
add
dec
daa
std
fidivrs
lods
and
mov
add
addb
add
subl
mov
jno
add
add
add
add
add
in
cmpl
add
test
inc
fstl
add
xor
fisttpll
add
adc
inc
add
int3
les
repnz
cmp
pop
sahf
add
add
add
xchg
aas
clc
jno
add
add
and
add
add
mov
loope
add
aaa
jnp,pn
ret
mov
or
xchg
ret
or
daa
sbb
add
xchg
add
or
add
jne
add
add
daa
outsb
sahf
mov
adc
mov
addl
cld
and
add
xor
scas
fmuls
sbb
mov
movl
nop
add
lret
lea
add
pop
cmp
inc
jmp
pop
xor
push
add
inc
xlat
movb
lcall
add
add
mov
mov
add
sub
add
add
add
imul
mov
add
add
add
sbb
add
adc
fcomp
sbb
add
fsts
cmpsb
add
out
or
add
aas
std
mov
in
adc
xchg
movb
sub
push
add
or
mov
pop
xchg
add
add
pop
push
and
cmp
rolb
movb
sub
fisubs
cs
addb
test
add
mov
and
mov
sbbl
add
les
jns
push
adc
push
and
sbb
rolb
dec
sub
mov
lods
mov
rcl
add
add
mov
adc
add
stos
dec
cs
ss
sub
outsb
mov
mov
lret
test
add
cs
inc
push
xor
lcall
sbb
out
lods
add
lock
sbb
add
xchg
daa
outsb
cmpsb
add
lods
adc
push
adc
gs
jecxz
adc
rcll
add
add
mov
mov
inc
mov
inc
add
testb
lahf
fwait
push
add
push
add
mov
mov
mov
lock
adc
push
add
sbb
add
les
movsl
jl
mov
gs
add
out
into
popa
cli
mov
test
xor
flds
push
clc
test
call
scas
inc
add
mov
dec
jl
in
pop
mov
add
clc
cli
popa
mov
mov
add
leave
lods
aad
xchg
add
add
add
add
xchg
and
mov
imul
lcall
into
lods
sbb
js
push
add
fstpt
out
pop
xchg
pusha
add
jle
sbb
jno
push
insb
push
push
add
cli
push
add
mov
sbbl
in
sti
fimuls
add
add
in
adc
arpl
bound
mov
add
rolb
push
add
in
xchg
setbe
movb
add
mov
add
test
dec
jg
add
push
add
hlt
add
mov
icebp
and
cltd
mov
int3
rorl
sub
add
add
clc
lret
xor
pop
fwait
aad
out
ffree
add
mov
cmpsb
add
cmpsl
ds
mov
pop
mov
add
fwait
jecxz
jle
jne
call
add
mov
out
push
int
cmpsl
add
cmpl
cmp
push
add
and
ret
cmp
add
add
xchg
sub
and
mov
lahf
pop
popl
iret
cli
popa
fwait
insl
mov
and
add
pop
cld
fdiv
add
loop
cwtl
arpl
add
mov
dec
and
sub
aas
pushf
or
stos
dec
fdivr
js
xchg
mov
dec
push
add
in
adc
hlt
add
add
mov
add
xor
add
mov
add
dec
add
add
add
push
add
mov
sbb
xor
xlat
in
xor
out
inc
xchg
add
incb
adc
in
pminub
pusha
add
rolb
mov
fldcw
cmp
add
push
jnp
push
jl
add
cmp
cmp
loope
add
lret
lcall
mov
std
fnsave
hlt
add
mov
cmp
popf
nop
add
push
add
sbb
in
std
pop
ret
add
jmp
xchg
add
jae
cltd
sbb
call
popa
stc
test
sbb
adc
test
insl
jmp
in
mov
xchg
nop
add
add
push
or
or
std
test
push
xchg
or
add
lds
jo
add
ret
push
add
add
das
fbld
into
repnz
add
cwtl
mov
nop
add
add
xchg
mov
stos
nop
add
popa
mov
cwtl
adc
add
add
dec
or
fmuls
fwait
jg
fidivrs
clc
das
lock
repz
repnz
mov
or
add
add
xlat
ja
add
add
lds
add
sahf
les
outsl
out
mov
add
movsl
test
mov
imul
jl
cmpsl
pushf
fstpl
mov
popa
pop
arpl
subl
dec
pop
pop
dec
mov
jbe
jg
pop
inc
ficoml
lahf
add
mov
xchg
add
arpl
and
mov
icebp
sti
adc
pop
dec
push
add
jb
jb
sbb
add
add
add
add
add
dec
pop
adc
add
mov
add
mov
sbb
add
aam
xor
leave
rolb
nop
add
repnz
add
add
add
jmp
add
or
clc
or
outsb
sbb
add
mov
add
xor
inc
add
xor
fsubrl
dec
ljmp
xlat
jmp
xadd
mov
mov
mov
popf
out
inc
add
je
inc
add
xorl
add
xchg
add
arpl
addr16
push
aas
sbb
fs
xchg
add
aad
xor
add
add
fs
lock
add
sahf
in
sbb
enter
sbb
mov
add
test
cmp
int
test
std
jbe
loopne
mov
inc
sbb
in
xchg
add
rolb
shr
pop
js
push
and
jecxz
popf
push
add
pop
clc
adc
push
add
xchg
pop
pop
in
arpl
add
or
pop
decb
sbb
add
mov
jo
mov
dec
adc
add
add
cmpsl
rolb
add
fcoms
jg
add
pop
fisubl
dec
outsb
pop
addb
lahf
movb
add
add
mov
mov
xlat
mov
add
dec
mov
jae
repnz
lock
pushf
jmp
sub
sbb
lahf
outsb
outsl
mov
sub
add
add
add
dec
out
dec
decb
inc
add
icebp
jbe
mov
add
pop
in
outsl
mov
add
int
add
mov
push
leave
sbb
add
jmp
add
add
xchg
cmpsb
add
pop
repz
add
test
add
mov
push
pop
paddsw
xchg
add
in
sbb
adc
sub
push
add
add
lret
fiaddl
stos
inc
cmp
push
int3
insb
movsb
add
rolb
dec
inc
add
mov
icebp
or
lock
les
imul
inc
add
push
add
add
push
fisttps
xchg
sbb
add
int
add
add
push
add
push
rolb
pop
icebp
push
add
and
jne
repz
jbe
inc
ret
movb
pop
push
adc
sbb
int3
andl
je
sub
add
cld
into
push
out
push
fiaddl
lahf
addb
loop
movb
popf
pop
cmp
add
sub
add
add
add
inc
sub
xor
mov
push
xchg
add
stos
jnp
addb
add
jecxz
add
add
add
aad
xor
enter
lds
sub
sbb
xor
mov
sbb
jl
add
add
movsl
dec
popf
rolb
dec
lret
ret
clc
jo
cmp
add
imul
pop
mov
add
xor
push
clc
loopne
xor
mov
jns
imul
and
mov
adcl
add
mov
cmpsb
add
add
loop
adc
sarl
inc
add
xor
test
add
inc
add
push
lret
or
mov
jae
add
mov
into
rolb
push
mov
scas
sub
mov
das
lock
push
fldt
xchg
xor
mov
add
inc
add
int3
dec
xchg
addb
jno
add
mov
jne
icebp
insb
aaa
nop
add
dec
arpl
and
add
add
mov
into
je
xchg
sbb
pushf
cmp
add
out
add
clc
movsl
lea
fidivs
outsb
lcall
cmp
adc
push
add
add
cmpsb
add
enter
rcrl
bound
mov
loop
push
add
fmull
add
adc
jno
subl
insl
inc
sub
and
addb
sbb
add
add
push
add
add
ja
push
add
jbe
pushf
rcrl
xchg
aaa
mov
jae
mov
push
xchg
dec
jp
test
dec
outsl
mov
aaa
and
mov
imul
lods
cmp
dec
cmp
cmpsl
je
mov
add
xchg
jae
xor
scas
out
mov
add
add
test
ret
pop
jmp
mov
add
add
cld
or
pop
popa
push
add
fcoms
add
popf
filds
add
add
fsub
jg
and
sub
cmp
xor
xchg
mov
and
sbb
add
mov
data16
add
rcr
mov
repnz
add
add
mov
lea
add
addb
add
add
rdtsc
cld
inc
mov
add
cwtl
push
add
add
cs
push
add
cmp
dec
bswap
add
mov
add
add
add
mov
inc
add
cld
insl
pop
jno
fdivr
in
rolb
gs
push
add
add
add
add
loope
cmp
lret
jae
add
fidivl
pop
sbb
pop
jae
add
jmp
inc
pop
loopne
test
push
add
mov
adc
xor
xchg
das
cwtl
sti
xchg
jge
sbb
aad
add
cmp
cmp
in
shll
jno
add
or
add
push
lcall
push
add
mov
push
lods
push
add
add
pop
mov
add
in
ret
mov
popa
push
add
fnstenv
sahf
test
or
add
sti
clc
and
mov
cli
dec
gs
divl
inc
cli
cmc
cli
loop
mov
out
loopne
cmpsl
fists
add
fcoms
add
addb
rolb
jmp
pop
je
fadds
fldenv
data16
push
xchg
fnstenv
lods
or
mov
out
mov
lods
mov
add
clc
loope
lea
jge
lcall
mov
sbb
add
add
or
add
jmp
pop
add
sbb
add
pop
addl
mov
cmpsl
mov
mov
lahf
cmp
add
cmp
add
cs
fdivl
jns
or
inc
add
mov
inc
clc
call
in
mov
add
and
and
mov
shrl
fs
xor
sub
push
mov
adc
add
test
iret
xor
arpl
inc
add
push
mov
mov
sub
bswap
mov
xor
mov
or
add
push
rolb
sub
lods
movsl
dec
insb
add
mov
push
add
jns
add
add
sbb
fsts
add
or
cld
sub
cmp
add
cs
add
xchg
and
push
in
mov
mov
icebp
cs
mov
add
inc
add
add
add
mov
pop
mov
mov
add
add
jge
rolb
mov
jne
aad
in
mov
inc
add
testb
cld
add
ja
rolb
dec
cld
mov
add
cmp
out
xchg
add
mov
in
lock
push
pop
push
testl
testb
adc
fiaddl
fistl
mov
lods
ss
call
add
decl
mov
pop
inc
xchg
add
jo
xlat
xor
push
sahf
jg
jecxz
fldenv
mov
pop
or
stos
xchg
add
int
imul
xor
xchg
add
inc
and
dec
and
icebp
jg
add
mov
add
jbe
aaa
mov
push
add
mov
pop
js
push
add
in
rolb
pop
xor
or
adc
xor
or
xchg
add
mov
push
add
dec
stos
sub
mov
add
dec
das
adc
mov
aas
aaa
jl
inc
add
and
je
inc
add
add
or
dec
dec
jg
pop
pop
test
insl
sub
hlt
add
psubw
fdivrs
test
mov
bound
mov
cmpsl
mov
mov
sub
fmul
stos
mov
lret
bound
mov
mov
inc
add
or
adc
add
xchg
call
mov
ljmp
mov
sub
jge
or
idivl
roll
hlt
add
out
mov
out
sbb
add
sbb
jae
out
mov
and
movb
pop
sti
mov
add
lock
add
nop
add
push
add
daa
jae
add
push
add
push
add
loope
add
mov
testb
add
test
js
mov
mov
and
mov
add
out
jle
push
add
scas
loop
add
dec
fwait
mov
add
rcll
leave
repz
ja
jbe,pn
jns
add
loopne
repz
jne
or
adc
sbb
add
adc
data16
repz
add
cwtl
inc
add
add
jle
add
jl
scas
adc
leave
inc
add
jae
add
sub
mov
add
mov
out
popf
in
xchg
jo
cmp
addr16
add
add
add
add
pop
lods
mov
or
out
hlt
add
divl
ljmp
lock
add
mov
add
sbb
fwait
mov
adc
add
add
ret
push
add
or
xchg
add
stc
or
sbb
cmpsl
xchg
add
out
jge
ret
add
add
mov
add
lcall
add
sbb
xchg
add
cmp
xchg
ret
bound
mov
add
mov
pop
inc
pop
add
loopne
jecxz
add
sub
dec
addb
mov
mov
addb
jg
dec
push
hlt
add
mov
xor
push
mov
and
mov
cmpsb
add
ret
sbb
adc
sbb
cmp
lahf
packsswb
jl
scas
aam
xchg
test
cmp
add
repnz
mov
inc
repz
jl
repnz
add
pushf
xchg
add
mov
jle
out
dec
out
into
push
xchg
sub
cwtl
stos
mov
add
cmp
sub
gs
add
mov
addb
hlt
add
add
mov
lock
sub
jp
test
addb
mov
jl
add
inc
add
outsb
sahf
adc
cmp
add
mov
add
mov
test
aas
movsl
mov
jne
pop
inc
fidivrl
sti
add
cmp
dec
cs
rorl
data16
loopne
lds
cmpsb
add
and
add
xchg
add
cmp
add
mov
movsb
add
add
mov
add
mov
add
inc
or
sub
add
shll
add
jecxz
sbb
lods
or
addb
sbb
add
rolb
in
xor
xor
sbb
mov
pop
bound
mov
int3
mov
and
mov
lods
sbb
add
dec
mov
in
xchg
addb
insl
pop
nop
add
mov
int3
cmp
cmpsl
or
jb
cmp
test
push
mov
loop
dec
and
sbb
rcr
inc
add
add
sub
ret
call
stos
into
int
and
sbb
add
ja
ja
icebp
sbb
movb
arpl
or
dec
mov
push
add
test
pop
pusha
add
dec
and
mov
test
xor
add
or
and
mov
sub
popf
push
add
mov
xchg
add
add
add
and
xor
jno
nop
add
add
bound
mov
add
out
or
xor
subl
xor
rolb
lods
int
cmp
adc
adc
popf
xor
add
mov
push
cmp
dec
add
mov
push
add
repz
mov
enter
push
add
add
lock
mov
push
add
ds
les
loopne
xchg
xchg
and
mov
out
push
dec
sbb
add
aam
xchg
call
jnp
sarl
in
or
add
mov
push
fcmovb
loop
dec
loopne
sbb
mov
push
add
arpl
and
mov
add
leave
pop
fstl
xor
add
mov
dec
insl
xor
mov
stos
pop
inc
cmp
add
dec
ja,pt
call
lret
pop
data16
jae
cli
pop
add
xchg
add
add
adc
movb
add
add
addb
outsl
xchg
mov
add
add
add
mov
mov
lret
mov
into
outsb
sub
add
fimull
pusha
add
std
loope
add
insl
scas
ds
outsl
into
jecxz
xchg
add
stos
cmp
mov
clc
out
addr16
lds
add
lods
xchg
pop
rolb
and
fwait
daa
dec
cmp
outsb
inc
inc
add
and
inc
add
add
add
into
das
jge
add
add
inc
add
and
mov
add
mov
add
add
into
popa
ljmp
int3
leave
adc
mov
add
add
sbb
ja
add
data16
sub
sahf
sbb
adc
imul
lods
cmp
daa
jnp
add
aam
jae
add
add
mov
movsl
jmp
sbb
add
arpl
mov
cmp
push
and
mov
test
push
adc
cmp
stc
call
repz
add
add
paddb
fnstenv
add
lahf
data16
lods
lds
add
cmpsb
add
add
xor
ljmp
jne
lods
fcoms
add
ds
cmp
imul
cltd
sub
fneni(8087
add
add
lret
push
adc
adc
mov
mov
add
shrl
adc
xor
inc
rolb
movsb
add
pop
dec
lret
mov
rolb
outsb
mov
adc
mov
and
add
sbb
pop
in
and
stc
pop
or
enter
in
push
dec
les
cmp
in
mov
xor
shll
add
add
add
mov
inc
add
mov
add
data16
xchg
xor
std
rolb
dec
adc
addb
xor
add
testb
fdivrl
mov
adc
lret
xor
add
test
movb
pushf
pop
mov
dec
cli
movsl
sub
rolb
addr16
xchg
int
add
mov
pop
addb
xchg
pop
jo
inc
xor
lret
outsl
push
lock
sbb
add
sub
lret
aam
insl
push
add
rolb
add
mov
mov
sub
jge
add
sub
jo
jo
xchg
in
cmc
and
fcoms
fwait
mov
sub
fs
push
adc
mov
add
ja
add
sahf
fwait
repz
aas
inc
xchg
add
add
add
and
add
daa
mov
inc
add
add
jnp
add
test
and
lahf
or
add
add
in
fists
mov
fisttps
xchg
add
test
in
lds
add
leave
loope
dec
jmp
pusha
add
add
jle
in
cmp
sbb
cmp
or
int3
stos
inc
outsl
and
mov
push
movb
add
add
and
mov
jae
xor
add
data16
data16
add
out
mov
sbb
dec
pop
sub
out
pop
xor
sbb
cmp
addb
add
mov
mov
mov
add
adc
insb
sbb
mov
xchg
add
jmp
rolb
xchg
add
outsb
push
add
add
push
add
inc
add
jae
pop
pop
push
adc
iret
push
add
mov
stc
loop
add
mov
lods
add
add
and
movsb
add
pop
inc
add
add
mov
add
sbb
movl
aaa
push
add
mov
fstpl
mov
add
or
sbb
inc
push
add
push
add
das
and
mov
dec
mov
xor
mov
iret
push
loope
lahf
popf
push
add
lods
fwait
jno
cmpsb
add
add
add
jmp
add
add
mov
mov
add
add
add
mov
jge
mov
mov
in
mov
arpl
add
add
xchg
sbb
bound
mov
xor
out
adc
pusha
add
sub
shll
add
jp
add
or
xchg
mov
mov
pushl
mov
mov
mov
jnp
shl
mov
add
inc
sbb
add
jne
jg
das
les
or
scas
lret
inc
add
iret
jmp
pop
mov
sbb
jp
divps
add
or
add
xor
stc
sbb
mov
jle
ljmp
add
out
and
mov
xor
xchg
ds
int3
sub
or
addb
ljmp
adc
sub
aad
add
mov
adc
sbb
scas
ja
dec
jle
or
das
std
inc
add
nop
add
repz
loop
stos
icebp
jl
ret
lahf
js
cmp
loopne
rolb
mov
add
add
mov
add
jmp
lret
mov
int3
mov
aad
cmpsb
add
das
shrl
repnz
mov
add
test
loop
lcall
add
mov
iret
jl
add
pop
in
xor
in
int
push
add
outsb
dec
aas
lock
add
fistl
sub
add
xchg
jno
fisubs
cmp
mov
add
sub
add
fistpll
add
jno
sahf
in
add
inc
push
add
add
test
pusha
add
stos
popa
pop
mov
add
out
sub
lcall
into
and
mov
lock
add
inc
add
add
add
mov
jnp
or
insb
aaa
mov
add
add
movsb
add
add
mov
jge
add
or
mov
add
pop
jae
add
mov
in
cld
mov
and
lret
lahf
jns
cmp
add
rorl
add
loopne
fistpl
out
iret
movb
cli
int
add
inc
add
sbb
add
pop
pop
inc
add
stos
add
mov
add
add
cmpl
lock
decl
outsb
jo
mov
xor
loope
mov
add
add
jecxz
int
inc
mov
inc
add
inc
sbb
leave
or
jl
and
lds
test
mov
cmpl
sbb
add
fimuls
js
dec
aam
pusha
add
and
jbe
cmp
loopne
enter
fsubrs
stos
std
add
mov
push
pop
in
xchg
lahf
cwtl
cmpsl
fucomip
or
xrstor
bound
mov
arpl
add
cmp
insl
in
mov
xchg
mov
add
add
jae
mov
mov
fistpl
insb
fsubl
rolb
clc
in
xorl
rolb
push
lods
jb
imul
pusha
add
cmpsb
add
scas
outsl
mov
movb
add
cmpsb
add
inc
adc
rcll
or
and
lret
stos
outsb
mov
xor
pop
mov
push
add
pushf
pcmpgtb
mov
in
adc
mov
pop
aad
add
and
adc
xor
sub
add
ss
int3
addr16
add
add
mov
dec
sbb
push
fcomi
add
add
mov
inc
ficompl
repnz
dec
push
rolb
and
stc
sti
cmp
mov
pop
fmuls
mov
aad
add
add
jno
dec
out
add
orl
jmp
gs
add
add
add
sbb
scas
pop
mov
jle
add
mov
and
dec
mov
iret
std
iret
mov
or
xor
testb
add
cmp
insl
sub
rcrl
add
shll
add
add
fcoms
add
add
cs
dec
notl
pop
bound
mov
adc
add
add
add
aam
or
adc
push
add
add
iret
fistpl
lahf
mov
lret
std
xor
pop
fsubrp
movsb
add
jnp
data16
add
pmulhuw
jecxz
movsb
add
push
jmp
icebp
mov
mov
mov
xor
push
movsb
add
add
in
js
scas
dec
push
dec
ljmp
enter
xchg
add
popf
mov
add
addb
push
std
mov
add
add
mov
int3
lahf
dec
cmp
js
add
add
pop
inc
add
mov
cmp
push
add
fmuls
fsubrp
sbb
loop
jle
cmp
daa
sub
push
add
push
add
sbb
repnz
xchg
add
int3
dec
sub
add
sti
testl
add
aam
movsb
add
add
enter
outsb
pop
cmc
shll
add
mov
mov
mov
cmp
sbb
test
inc
add
add
push
add
inc
cltd
cld
and
mov
mov
icebp
mov
pop
loopne
or
mov
bound
mov
xor
stc
sbb
add
enter
add
outsl
les
xor
push
add
sti
adc
int
add
add
pushf
xor
sub
std
out
movsb
add
call
cld
repz
add
add
add
xlat
push
fwait
mov
add
mov
orl
add
add
add
xchg
add
jl
and
pop
rcll
out
sbb
cmp
mov
cmpsl
jmp
ljmp
fisubl
add
and
mov
fwait
push
add
loop
mov
pop
add
hlt
add
add
add
rcrl
cmpsb
add
sub
mov
fucom
add
adc
ja
xchg
add
jae
mov
lods
testb
pusha
add
and
mov
push
add
jg
push
test
ljmp
mov
mov
mov
idiv
pushf
popa
invd
add
inc
add
pop
int
fisubrl
cmp
add
add
int
nop
add
mov
mov
add
add
xor
and
add
stos
push
add
add
insb
xchg
mov
sti
rolb
mov
inc
rolb
add
sbb
xor
add
xchg
add
lahf
adc
jbe
adc
adc
lahf
lods
mov
enter
ja
add
jp
add
or
iret
push
pop
sbb
fisttpl
jecxz
jle
adc
xchg
add
sub
xchg
add
add
daa
iret
mov
loop
adc
sbb
add
xlat
sub
dec
jl
add
cmp
xor
or
add
mov
jne
icebp
cmp
add
add
dec
gs
add
pop
mov
shll
test
xchg
lret
data16
jmp
aad
add
mov
add
scas
sub
data16
daa
ficompl
ja
add
imul
mov
lds
pop
lahf
or
add
test
arpl
sbb
rolb
pop
xchg
adc
cli
les
dec
int3
sub
cmpxchg
dec
sbb
dec
rolb
jnp
rcll
and
cli
ret
mov
jb
test
mov
xlat
sbb
mov
jo
xlat
mov
xor
add
int
push
add
stos
mov
das
data16
btcl
repz
add
lahf
sub
adc
mov
xchg
pop
rolb
xor
dec
inc
add
add
add
repz
xor
mov
pushf
jns
fidivrs
addb
sub
fidivl
add
add
add
sbb
dec
pop
push
int3
mov
add
and
mov
sub
add
add
sbb
xchg
rolb
fimuls
sahf
push
test
gs
cwtl
icebp
sbb
add
add
ret
pop
leave
aaa
jnp
mov
push
add
adc
es
jge
sbb
repnz
aad
jp
jecxz
or
pop
pop
add
ret
and
add
sbb
add
aam
cmp
add
sub
bound
mov
add
mov
aad
mov
in
sbb
ret
add
lock
popa
fnstenv
inc
sub
xor
enter
cli
lret
inc
add
add
xor
stos
mov
add
test
add
add
mov
out
les
cmpsb
add
outsl
movb
stc
mov
sub
mov
mov
push
mov
add
in
fstps
addb
add
cs
add
inc
add
add
add
addb
push
add
ret
add
mov
int3
add
ficomps
fisubl
loope
into
dec
lock
push
add
out
aam
jns
add
testb
stos
stos
movsl
adc
xor
jmp
jg
stc
aam
insl
fisubrl
push
xchg
cmpsl
lret
fwait
mov
test
cmc
je
xchg
les
aam
dec
mov
push
add
nop
add
push
add
mov
add
cmp
add
rolb
hlt
add
rolb
scas
mov
jb
out
insb
addb
aam
ret
setae
add
add
mov
add
sti
cmp
sbb
and
push
or
fwait
sahf
push
add
jo
add
mov
add
clc
shll
mov
add
hlt
add
inc
add
movb
adc
fiaddl
add
and
mov
jo
add
add
test
mov
pop
out
sahf
popa
xlat
xchg
xchg
add
sbb
out
pop
lahf
xchg
add
hlt
add
movl
lds
xchg
add
push
imul
fildl
sahf
push
sbb
inc
jl
add
add
cmpsl
mov
in
add
add
scas
ret
mov
mov
sarl
add
cmp
hlt
add
cmc
push
sbb
les
stc
mov
jmp
add
cmp
or
and
mov
add
add
add
add
arpl
dec
out
pop
insb
mov
add
repz
and
ret
dec
iret
jmp
sub
les
loope
add
add
iret
sub
movsb
add
add
push
add
xchg
push
je
call
stos
ds
mov
add
jle
hlt
add
xchg
add
cli
sbb
add
cmp
add
in
sbb
add
add
rolb
mov
push
add
add
jb
lahf
mov
dec
clc
lret
cmp
aaa
push
add
cmp
add
movb
ljmp
cmp
add
aad
mov
popa
incb
inc
lock
add
or
push
mov
insb
mov
xchg
add
pusha
add
jne
add
jbe
std
mov
adc
add
add
and
mov
xchg
rolb
jo
testb
cmp
or
std
add
mov
bound
mov
add
loopne
pop
data16
xlat
mov
mov
add
nop
add
add
lea
cmp
mov
add
xchg
add
gs
pop
fisubl
sbb
sub
xor
shl
aad
cld
push
mov
add
dec
push
stos
push
lahf
fdivl
add
data16
add
push
add
push
add
xchg
add
inc
outsl
dec
xchg
jle
js
addb
stc
jecxz
in
xor
mov
add
add
inc
push
add
sbbl
sbb
xor
mov
xchg
add
fnsave
ret
add
xchg
xor
out
push
lahf
addb
sarl
add
cwtl
xchg
or
push
add
mov
imul
mov
ret
add
mov
push
add
mov
dec
lcall
cld
bound
mov
xchg
add
outsl
cmpsb
add
add
xchg
pop
xchg
sub
xchg
add
jns
add
and
mov
fdiv
sbb
fimull
cmc
jns
lret
mov
add
cmp
add
add
jne
cmp
add
add
xor
xorl
and
mov
add
pop
out
sbb
jle
out
xor
in
xor
pop
xor
dec
incl
push
pop
dec
mov
add
mov
add
dec
imul
lock
clc
push
jns
lcall
add
xchg
jno
scas
xor
add
add
icebp
call
ljmp
push
or
inc
add
pop
insb
ljmp
pop
shrl
add
add
imul
add
aam
cmp
push
or
add
test
add
pop
or
push
aaa
js
add
outsb
cmpsb
add
in
testb
add
aaa
sub
inc
gs
pop
sub
and
ja
mov
add
pop
mov
repz
repz
add
lcall
and
jg
rolb
dec
pop
inc
add
adcl
cli
jmp
sahf
int
add
add
dec
inc
push
loopne
xchg
sbb
add
push
add
add
mov
inc
add
loopne
xchg
add
pop
decl
jo
in
add
test
iret
scas
bound
mov
jae
aam
pop
nop
add
rolb
lds
or
and
xchg
mov
add
mov
add
in
mov
cld
pop
dec
add
ret
outsb
push
add
add
adc
xlat
out
xor
sub
add
ret
cmp
add
sahf
lods
outsb
pop
cld
clc
daa
xchg
mov
xchg
jo
mov
cmp
jp
bound
mov
lahf
xor
pop
int
lods
and
push
lods
sub
push
add
sbb
add
out
enter
jae
mov
add
add
push
add
add
add
mov
xor
or
add
fsts
nop
add
loop
int
cwtl
push
add
movsl
adc
push
add
adc
aas
pop
arpl
cmpsb
add
mov
add
sti
and
call
or
insl
out
mov
fstl
xor
loopne
push
jne
add
icebp
xchg
add
add
sbb
rorl
rolb
add
mov
add
mov
test
add
cli
adc
mov
add
add
add
mov
lret
cwtl
mov
and
xor
push
add
mov
pop
mov
cltd
rolb
dec
inc
pushf
adc
xchg
add
aaa
aaa
adc
add
mov
sbb
adc
sbb
mov
mov
add
inc
add
mov
jo
rolb
push
mov
mov
ljmp
add
add
les
in
mov
scas
cmp
fistl
add
pop
ficoml
popf
xor
outsb
or
mov
mov
sbb
mov
mov
cmc
inc
dec
test
add
add
rcr
mov
xchg
or
push
dec
inc
push
add
add
mov
push
xor
or
jnp
jg
mov
add
jle
add
mov
adc
rolb
add
mov
enter
add
dec
mov
add
xchg
add
stos
mov
mov
cmp
add
in
leave
xchg
jae
fcmove
jno
std
gs
lcall
add
add
idivl
jecxz
add
and
push
add
add
xor
dec
pop
mov
and
mov
pop
cld
ret
jmp
lods
stc
mov
shrl
mov
xchg
add
add
lds
or
sbbl
roll
add
add
push
add
add
jecxz
ljmp
les
push
add
lcall
pop
cmpsb
add
ds
mov
stos
mov
add
dec
jp
add
or
mov
push
enter
aam
rolb
aas
lea
or
add
xor
pop
dec
repnz
int3
imul
pop
xchg
cmp
xor
xor
add
test
sub
xchg
add
mov
loope
sub
outsl
xor
add
add
mov
add
add
add
mov
jmp
pop
add
mov
add
sub
mov
addl
add
add
add
add
fwait
xor
dec
test
xor
xchg
add
dec
imul
push
add
pusha
add
mov
sbb
aas
das
pop
xor
push
ds
add
add
add
mov
lret
inc
sbbl
mov
or
insb
inc
out
add
gs
sar
test
ds
in
mov
jmp
dec
pop
and
rolb
data16
or
insl
add
pop
mov
repnz
or
ja
loope
add
add
cli
cmc
es
mov
xchg
add
addb
testb
inc
dec
bound
mov
data16
xor
sbb
mov
fdivrl
movsl
and
add
pop
xor
push
add
loopne
rolb
push
add
add
mov
ja
lcall
mov
or
les
enter
out
mov
int3
adc
mov
xchg
mov
mov
push
add
add
add
add
gs
mov
in
push
push
mov
jl
int
jle
ja
popa
mov
add
add
mov
add
jp
dec
xchg
shl
data16
xor
and
mov
pop
les
pusha
add
add
add
mov
mov
jbe
imul
mov
fistps
das
repz
call
add
popf
and
mov
xor
ret
xor
lock
fwait
nop
add
fcomps
inc
push
bound
mov
jp
jo
daa
icebp
scas
add
add
sbb
add
out
add
mov
add
imul
or
sub
jbe
push
dec
push
testb
mov
adc
push
add
jae
add
stc
mov
lahf
xor
lods
jno
int
and
mov
add
dec
scas
adc
gs
push
pop
pop
or
add
add
lds
clc
clc
lahf
mov
add
mov
out
outsb
push
add
fcoml
pop
mov
icebp
and
popa
mov
rolb
cmp
add
mov
pop
fwait
montmul
cmpsb
add
add
add
push
add
out
dec
repz
add
add
cmp
add
and
mov
std
pop
jg
add
xchg
add
add
add
inc
sbb
rolb
sbbl
outsb
repnz
aaa
rcrl
rolb
inc
add
push
add
mov
add
movsl
imul
js
je
out
pop
lret
inc
mov
data16
add
add
pop
cmp
je
insb
outsb
and
or
mov
lock
ja
add
add
rcl
add
pop
cmpsl
repz
mov
add
push
add
add
add
ret
xlat
push
fwait
cmpsb
add
xchg
jb
sbb
nop
add
enter
addb
inc
add
add
add
xchg
add
add
scas
daa
xlat
lahf
jae
add
inc
add
loop
xor
lds
addr16
aam
push
add
out
cmp
xor
inc
cmp
add
add
add
pop
push
add
popf
xchg
jmp
add
das
sub
and
fdiv
das
push
add
mov
push
stc
test
jbe
shrl
xchg
fisttps
push
and
mov
loopne
lret
fadds
add
adc
popf
jb
mov
add
testb
add
jle
add
addb
dec
dec
aas
mov
add
xchg
add
aad
fdiv
add
sbbl
add
add
add
lock
mov
mov
jno
xor
pop
test
pop
loop
mov
pop
mov
xchg
xchg
pop
fstps
pushf
add
mov
mov
ds
ret
jg
xor
addr16
rolb
xor
add
dec
xchg
mov
push
add
movsb
add
pop
stos
ljmp
lods
or
movsb
add
add
sbb
icebp
ret
je
cmc
int3
xchg
lds
mov
and
movsb
add
sbb
mov
mov
mov
add
gs
push
add
xchg
add
inc
add
add
cmpsb
add
pop
fsubp
mov
outsb
cmp
pop
push
lret
add
dec
mov
rolb
fsubs
pop
or
inc
add
mov
cmpsl
nop
add
lds
adc
adc
pop
add
in
lock
jp
add
add
jns
cmp
add
xchg
xor
mov
cmc
movb
add
jno
add
mov
inc
clc
cmp
lods
push
add
imull
sub
add
add
sub
add
data16
add
add
rol
add
add
add
adc
jnp
xchg
adc
mov
in
push
cwtl
fadds
push
and
lret
sub
push
push
add
mov
jno
add
mov
in
jbe
iret
in
sbb
adc
sub
add
test
jg
mov
movsb
add
sbb
inc
add
jnp
mov
adc
sti
mov
push
add
lcall
sub
xor
xchg
add
mov
fwait
cld
nop
jmp
add
add
push
mov
xchg
ret
add
add
adc
inc
je
dec
jne
clc
repnz
jae
add
test
out
jbe
mov
addb
mov
clc
repnz
jae
outsb
sbb
int3
jne
clc
repnz
jae
mov
push
clc
repnz
jae
xchg
add
add
add
mov
xchg
ret
add
lret
mull
add
repz
jg
clc
repnz
jae
addl
add
mov
clc
repnz
jae
add
popf
add
fwait
cmp
movsl
clc
repnz
jae
add
aas
dec
fwait
cld
nop
jmp
xor
out
xchg
shr
add
adc
nop
jmp
add
add
or
nop
jmp
addb
addb
clc
repnz
jae
mov
add
add
inc
push
adc
fwait
cld
nop
jmp
add
inc
mov
je
sub
dec
cmp
cld
nop
jmp
add
nop
nop
add
push
push
mov
xchg
ret
inc
xchg
inc
add
cmp
mov
nop
jae
add
pusha
fbld
or
clc
clc
repnz
jae
lret
add
dec
xchg
cmpsl
jnp
inc
and
inc
adc
add
out
inc
xchg
stc
das
pop
clc
repnz
jae
cld
push
add
enter
push
mov
xchg
ret
add
adcb
add
cmp
jae
add
mov
fwait
cld
nop
jmp
addb
pusha
add
popa
clc
repnz
jae
add
pop
add
add
cmpsb
mov
imul
push
mov
xchg
ret
add
out
addb
xchg
add
add
jae
add
into
cld
jb
add
add
mov
adc
cmp
popa
add
mov
xchg
ret
out
test
dec
add
icebp
fwait
cld
nop
jmp
cmp
pop
mov
push
add
push
fwait
cld
nop
jmp
push
inc
outsb
add
push
cwtl
pop
mov
fwait
cld
nop
jmp
nop
add
add
add
fwait
cld
nop
jmp
add
nop
dec
add
xlat
mov
or
repnz
jae
add
add
mov
sub
repnz
jae
andb
js
clc
repnz
jae
fists
loope
xor
mov
fwait
cld
nop
jmp
dec
inc
add
xor
clc
repnz
jae
push
adc
add
clc
repnz
jae
and
sbb
push
mov
xchg
ret
out
or
fadds
nop
jae
inc
add
add
aas
cmc
xlat
js
jge
clc
repnz
jae
push
add
add
add
clc
repnz
jae
inc
add
mov
in
inc
add
inc
cld
add
add
add
add
add
repnz
jae
add
daa
push
add
add
add
clc
repnz
jae
pop
sbb
pusha
xchg
dec
test
fwait
cld
nop
jmp
sbbb
add
add
or
clc
repnz
jae
xor
mov
fwait
cld
nop
jmp
sbb
mov
nop
jmp
or
add
pop
pusha
sbb
clc
repnz
jae
add
push
clc
repnz
jae
add
popf
add
sub
clc
repnz
jae
inc
add
jns
fwait
cld
nop
jmp
add
xchg
add
add
dec
jae
add
clc
repnz
jae
add
xorl
mov
fimull
nop
jae
mov
xor
add
addb
xchg
clc
repnz
jae
out
push
cmp
push
mov
xchg
ret
outsb
stc
inc
jb
xchg
mov
add
repnz
jae
add
xchg
adc
pusha
jb
stos
mov
clc
repnz
jae
orb
mov
mov
inc
add
add
push
add
shll
jne
push
mov
xchg
ret
inc
mov
mov
repnz
jae
inc
xor
add
add
and
push
mov
xchg
ret
add
pusha
mov
clc
repnz
jae
add
lret
add
mov
xchg
out
inc
add
fwait
xchg
add
and
add
repnz
jae
filds
inc
and
jmp
inc
adc
cwtl
mov
int
sar
repnz
jae
add
xchg
aam
ljmp
nop
jae
cmp
je
clc
repnz
jae
dec
add
add
ret
push
add
clc
repnz
jae
into
add
add
dec
subl
push
mov
xchg
ret
fistps
xor
aas
add
fwait
cld
nop
jmp
inc
add
push
add
dec
or
mov
xchg
ret
xor
add
dec
mov
cld
nop
jmp
push
popf
xchg
add
add
jge
inc
add
into
inc
add
add
adc
repnz
jae
dec
add
add
popa
fwait
cld
nop
jmp
nop
push
add
or
nop
jmp
xchg
mov
add
xor
adc
and
push
mov
xchg
ret
add
inc
inc
xor
add
mov
add
repnz
jae
add
das
lods
push
mov
xchg
ret
add
adc
xor
add
clc
repnz
jae
or
cmp
add
pop
fwait
cld
nop
jmp
add
xchg
add
pop
or
jbe
mov
out
add
add
xor
add
add
repnz
jae
xor
or
mov
clc
repnz
jae
add
pop
pop
fwait
cld
nop
jmp
cmpsb
dec
cwtl
cld
add
add
mov
push
jae
add
inc
popf
add
jne
clc
repnz
jae
dec
addb
xchg
mov
cld
nop
jmp
add
mov
clc
repnz
jae
xchg
add
imul
add
add
add
add
cld
nop
jmp
xor
add
aad
imul
clc
repnz
jae
cmpsb
sbb
and
sbb
repnz
jae
add
add
sysexit
cmp
nop
jae
or
push
add
add
or
repnz
jae
add
inc
add
add
mov
xchg
ret
add
sahf
mov
push
mov
xchg
ret
cmpsb
pop
add
add
int
pop
jae
repnz
jae
dec
xor
xchg
dec
mov
fwait
cld
nop
jmp
add
sarb
sbb
add
pop
push
mov
xchg
ret
lret
add
stos
ret
clc
repnz
jae
pop
add
pop
jecxz
add
int3
mov
clc
repnz
jae
xchg
sbb
call
fwait
cld
nop
jmp
jb
out
cmp
cmpsb
add
sar
repnz
jae
xchg
add
or
add
sbb
nop
jmp
out
add
dec
cmp
stc
xlat
sbb
repnz
jae
add
loope
cmp
dec
add
clc
repnz
jae
cld
test
add
xor
sub
push
mov
xchg
ret
add
add
cmp
test
mov
add
adc
add
aas
add
insb
mov
clc
repnz
jae
fwait
add
xor
mov
add
repnz
jae
or
dec
push
clc
repnz
jae
cmp
jl
dec
cmp
repnz
jae
adc
cmp
inc
out
bound
mov
cld
nop
jmp
loope
addb
xchg
aas
add
call
js
repnz
jae
dec
fwait
add
mov
repnz
jae
loope
into
add
add
add
dec
call
clc
repnz
jae
fistpll
loop
mov
xchg
ret
inc
add
add
add
add
repnz
jae
dec
pop
out
add
cld
xor
mov
clc
repnz
jae
adc
mov
add
add
mov
and
cmp
xlat
inc
add
add
add
adc
mov
clc
repnz
jae
add
add
stc
sbb
add
repnz
jae
test
push
add
add
add
pop
push
mov
xchg
ret
xchg
loope
xorb
mov
sbb
nop
jae
xchg
add
add
mov
push
mov
xchg
ret
sbb
dec
pop
add
pushf
and
add
repnz
jae
popf
add
repnz
jae
add
xchg
xor
add
xor
fisttps
test
add
fwait
cld
nop
jmp
sbb
push
mov
bound
out
add
cmp
and
adc
push
fdivp
movsb
clc
repnz
jae
add
inc
add
mov
clc
repnz
jae
or
mov
imul
add
cmp
bound
mov
jae
add
add
movsl
movsl
inc
jb
test
xchg
imul
cwtl
testb
cmp
ret
add
add
xor
mov
xchg
movsb
add
push
clc
repnz
jae
or
add
add
add
clc
repnz
jae
adc
add
out
push
fwait
cld
nop
jmp
add
pop
xor
jb
add
add
push
mov
xchg
ret
add
add
add
mov
addb
add
clc
repnz
jae
add
scas
mov
push
mov
xchg
ret
add
out
add
add
add
adc
pop
roll
xchg
ret
add
add
push
mov
xchg
ret
add
add
xchg
mov
fwait
cld
nop
jmp
inc
add
add
clc
repnz
jae
mov
add
add
add
mov
clc
repnz
jae
loope
add
mov
push
push
mov
xchg
ret
test
add
lea
fwait
cld
nop
jmp
test
xorl
jb
popf
jmp
add
test
mov
push
popf
mov
mov
jae
test
nop
add
into
add
incb
pop
cmp
mov
xchg
ret
xor
add
add
clc
repnz
jae
bound
loope
je
clc
repnz
jae
add
add
sbb
jmp
jae
lret
xor
add
push
mov
xchg
ret
xchg
adc
add
add
add
repnz
jae
inc
add
xchg
pop
push
mov
mov
mov
xorb
jge
add
add
xchg
fldl
xchg
ret
adc
add
add
jno
clc
repnz
jae
pop
lret
out
out
lret
mov
fwait
cld
nop
jmp
add
add
inc
xor
insb
mov
clc
repnz
jae
add
add
sub
clc
repnz
jae
inc
add
add
add
xchg
sti
mov
fwait
cld
nop
jmp
cmp
add
add
add
jl
clc
repnz
jae
add
add
test
fwait
cld
nop
jmp
add
outsb
add
clc
repnz
jae
xchg
scas
xorl
clc
repnz
jae
add
add
clc
repnz
jae
dec
outsb
add
cld
nop
jmp
bound
add
das
push
clc
repnz
jae
sbb
add
into
mov
mov
xchg
ret
add
nop
add
add
mov
jg
clc
repnz
jae
xor
add
clc
repnz
jae
adc
add
jns
fwait
cld
nop
jmp
push
add
loope
dec
add
sub
clc
repnz
jae
add
add
adc
sbb
add
add
cmp
add
add
and
clc
repnz
jae
mov
add
add
clc
repnz
jae
inc
aas
add
loope
add
clc
repnz
jae
xchg
out
xchg
dec
xor
mov
mov
mov
clc
repnz
jae
mov
push
clc
repnz
jae
sbb
add
sub
or
add
fwait
add
or
clc
repnz
jae
add
add
xor
jae
add
add
adc
sahf
mov
push
mov
xchg
ret
test
add
mov
xchg
ret
outsb
xchg
add
es
fwait
cld
nop
jmp
add
push
add
add
push
mov
xchg
ret
mov
cmp
sbb
add
fwait
cld
nop
jmp
add
add
add
fwait
cld
nop
jmp
out
mov
jecxz
add
clc
repnz
jae
add
pop
add
push
clc
clc
repnz
jae
movsl
out
pop
mov
clc
repnz
jae
movsl
cmp
dec
push
xor
push
clc
repnz
jae
adc
fwait
into
add
lret
shr
push
mov
xchg
ret
add
fwait
pusha
push
mov
xchg
ret
add
dec
aas
add
sub
repnz
jae
pop
test
nop
add
inc
add
push
imul
nop
jae
add
dec
add
mov
sbb
jae
push
out
mov
add
clc
repnz
jae
dec
add
add
add
add
clc
repnz
jae
add
add
ljmp
lods
sldt
push
add
xchg
cld
xchg
add
lea
add
clc
repnz
jae
subl
cmp
mov
xchg
ret
mov
rolb
add
cmp
fwait
cld
nop
jmp
mov
pop
push
mov
xchg
ret
loope
add
dec
mov
fdiv
movsb
push
mov
xchg
ret
adc
out
cmpb
popf
fwait
cld
nop
jmp
cmpsb
add
add
xor
pop
call
clc
repnz
jae
fists
add
jg
push
mov
xchg
ret
popf
cmp
add
nop
cwtl
loope
add
add
add
jmp
xchg
xor
add
mov
add
inc
inc
add
repnz
jae
push
push
push
clc
repnz
jae
jb
lret
xchg
loope
xor
clc
repnz
jae
add
push
add
add
nop
jae
test
cwtl
bound
mov
sar
nop
jae
pop
movsl
add
out
add
outsl
shr
fwait
cld
nop
jmp
mov
add
outsl
mov
fwait
cld
nop
jmp
aas
mov
out
dec
jnp
pushl
clc
repnz
jae
dec
push
add
pop
sahf
push
clc
repnz
jae
jb
mov
lret
shrb
jmp
add
inc
add
and
repz
cld
nop
jmp
movsl
loope
filds
mov
clc
repnz
jae
add
xchg
add
add
add
add
call
add
add
add
lret
movsb
add
add
repnz
jae
add
add
push
mov
xchg
ret
cmp
or
xchg
rolb
xor
push
add
add
movsb
clc
repnz
jae
add
addl
add
add
fwait
cld
nop
jmp
stc
add
mov
add
jne
fwait
cld
nop
jmp
add
cmp
mov
push
mov
xchg
ret
mov
push
cmp
fwait
cld
nop
jmp
lret
mov
add
sbb
nop
jae
add
cwtl
add
fwait
cld
nop
jmp
into
fwait
cmpsb
add
add
add
rol
push
mov
xchg
ret
add
xor
add
nop
jae
loope
add
add
nop
pop
mov
clc
repnz
jae
xor
add
add
clc
repnz
jae
add
inc
pop
jb
das
cld
clc
repnz
jae
add
bound
add
mov
fwait
cld
nop
jmp
aas
add
mov
clc
repnz
jae
add
add
out
add
add
push
add
push
mov
clc
repnz
jae
mov
add
out
push
clc
repnz
jae
out
out
push
loope
push
push
mov
xchg
ret
push
xor
push
add
mov
cld
nop
jmp
fwait
or
loopne
addr16
test
add
incl
fwait
cld
nop
jmp
add
add
clc
repnz
jae
add
add
add
add
add
inc
mov
nop
jae
dec
cmp
pop
pop
add
add
in
mov
clc
repnz
jae
adc
add
popl
inc
and
repnz
jae
or
fwait
xchg
and
mov
lcall
adc
add
add
add
pop
push
mov
xchg
ret
add
loope
mov
adc
rep
fwait
cld
nop
jmp
xchg
add
add
add
push
mov
xchg
ret
adc
xchg
inc
push
mov
xchg
ret
add
cmp
add
or
in
cmp
into
add
hlt
das
add
lods
imul
add
mov
fwait
cld
nop
jmp
pop
add
out
fisttpl
nop
jae
add
add
or
repnz
jae
add
add
jb
cli
mov
fwait
cld
nop
jmp
add
je
add
repnz
jae
sbb
mov
sbb
nop
jmp
lret
add
andl
push
mov
xchg
ret
add
mov
mov
xchg
ret
stc
out
or
pop
jmp
xchg
add
add
fimull
jae
add
add
add
testl
nop
jmp
add
inc
xchg
add
add
dec
mov
repnz
jae
add
add
je
roll
nop
jae
push
xchg
mov
push
add
push
clc
repnz
jae
out
xor
adc
push
add
nop
jmp
cmpsb
push
lret
adc
mov
sub
add
fwait
cld
nop
jmp
into
out
stc
add
xor
add
jmp
inc
fwait
add
mov
rcrb
inc
inc
sbb
test
icebp
lcall
or
add
add
inc
ret
add
leave
sub
repnz
jae
loope
push
jb
add
ret
push
mov
xchg
ret
out
or
lods
pop
push
mov
xchg
ret
add
add
nop
jae
add
xchg
mov
and
clc
repnz
jae
xor
dec
add
pop
pop
push
fwait
cld
nop
jmp
out
cld
add
out
push
repnz
repnz
jae
add
aas
andl
stos
ja
fwait
cld
nop
jmp
add
enter
cld
nop
jmp
fistps
add
addb
movsb
add
ud1
add
clc
repnz
jae
add
xchg
dec
cli
mov
clc
repnz
jae
add
addb
push
push
mov
xchg
ret
add
xchg
push
mov
add
repnz
jae
xor
xor
inc
and
mov
add
lea
fwait
cld
nop
jmp
lret
add
add
repnz
jae
add
add
out
popl
repz
repnz
jae
test
lret
push
push
mov
xchg
ret
mov
adc
pop
cmp
fwait
cld
nop
jmp
add
add
out
add
in
add
leave
sub
repnz
jae
xchg
xor
stc
push
add
inc
clc
repnz
jae
add
or
add
clc
repnz
jae
lret
xchg
dec
mov
clc
repnz
jae
out
pop
adc
adc
adc
dec
push
mov
xchg
ret
add
xchg
add
ror
sbb
test
add
jae
mov
add
xor
push
mov
xchg
ret
out
add
add
xchg
add
cmpl
fwait
cld
nop
jmp
add
add
repnz
jae
add
xchg
pusha
add
pop
push
clc
repnz
jae
add
add
xor
xchg
inc
add
test
repnz
jae
mov
cmpw
fwait
cld
nop
jmp
add
add
call
mov
xchg
ret
add
add
mov
clc
repnz
jae
inc
add
lds
push
mov
xchg
ret
lret
xchg
add
dec
dec
push
mov
xchg
ret
push
fwait
pop
cwtl
mov
add
add
push
mov
xchg
ret
jb
add
add
bound
cld
nop
jmp
addb
add
jae
repnz
jae
fwait
add
add
mov
push
mov
xchg
ret
add
mov
clc
repnz
jae
cwtl
bound
ret
testb
add
cld
nop
jmp
add
xchg
add
loop
push
mov
xchg
ret
test
add
add
clc
repnz
jae
add
add
add
addb
mov
clc
repnz
jae
inc
xor
or
mov
clc
repnz
jae
xchg
bound
push
mov
xchg
ret
add
dec
jae
ret
clc
repnz
jae
inc
pusha
mov
into
xor
push
mov
xchg
ret
add
dec
add
add
leave
fwait
cld
nop
jmp
add
addb
add
cmp
nop
jae
out
dec
or
mov
nop
jmp
add
add
xor
out
push
xor
xchg
jg
ret
push
mov
xchg
ret
add
out
addb
push
add
insl
push
fwait
cld
nop
jmp
add
add
cmpsl
push
xor
sbb
clc
repnz
jae
test
add
add
mov
clc
repnz
jae
shl
pop
xorb
jnp
mov
fwait
cld
nop
jmp
dec
add
fwait
cld
nop
jmp
add
add
clc
repnz
jae
add
mov
pop
adc
scas
lea
clc
repnz
jae
add
aad
add
out
out
clc
clc
repnz
jae
sbb
add
mov
nop
jmp
sbb
add
repnz
jae
inc
xor
add
popa
clc
repnz
jae
adc
out
addb
push
add
add
fwait
cld
nop
jmp
add
cmpsb
add
add
mov
clc
repnz
jae
aas
add
add
add
mov
jne
clc
repnz
jae
add
add
inc
adc
cld
nop
jmp
add
or
jle
jne
push
mov
xchg
ret
stc
add
pushf
and
add
call
push
lret
call
clc
repnz
jae
add
rolb
xchg
add
add
fwait
cld
nop
jmp
xor
add
add
lret
repnz
jae
mov
add
add
add
xchg
in
inc
add
add
adc
add
and
add
clc
repnz
jae
cmp
dec
mov
fwait
cld
nop
jmp
add
push
inc
adc
popf
popl
clc
repnz
jae
cmp
xor
dec
incb
nop
jae
sbb
out
pusha
push
mov
xchg
ret
add
add
push
mov
xchg
ret
xor
add
je
clc
repnz
jae
dec
add
pop
pop
push
mov
xchg
ret
add
add
je
fwait
cld
nop
jmp
xor
add
outsb
inc
clc
repnz
jae
add
pop
dec
sub
xorl
add
lahf
push
push
mov
xchg
ret
add
add
add
outsb
push
push
fwait
cld
nop
jmp
add
pop
out
outsb
addl
jb
mov
fwait
cld
nop
jmp
out
xor
sbb
into
inc
add
out
add
add
sbb
repnz
jae
add
out
add
add
inc
data16
dec
fwait
cld
nop
jmp
add
add
add
add
inc
push
add
insl
mov
clc
repnz
jae
add
xchg
add
xor
rolb
into
pop
clc
repnz
jae
out
pop
out
add
add
data16
scas
cli
inc
add
or
mov
clc
repnz
jae
add
add
mov
or
clc
repnz
jae
mov
fbld
mov
jae
add
pop
adc
add
add
repnz
jae
adc
adc
lret
dec
sub
repnz
jae
add
out
out
add
xchg
add
jl
xor
imul
inc
add
xchg
add
fwait
sub
clc
repnz
jae
fwait
xchg
stc
sbb
popa
add
repnz
jae
outsb
into
addl
add
push
add
pop
and
repnz
jae
mov
add
xchg
add
call
fwait
cld
nop
jmp
mov
mov
lahf
pusha
push
mov
xchg
ret
xchg
mov
add
clc
repnz
jae
xor
xchg
filds
out
lret
add
add
add
fwait
cld
nop
jmp
filds
xchg
fwait
cld
nop
jmp
add
add
pop
add
fwait
cld
nop
jmp
add
add
dec
add
clc
repnz
jae
sbb
add
mov
mov
clc
repnz
jae
add
add
add
pop
push
clc
repnz
jae
add
outsb
loope
push
push
mov
xchg
ret
loope
fists
repnz
fadds
jge
clc
repnz
jae
add
or
clc
repnz
jae
add
fwait
out
or
cld
nop
jmp
xchg
sbb
add
xchg
cmp
pop
cmp
nop
jae
sbb
add
clc
repnz
jae
xchg
inc
add
movsl
xchg
xor
add
push
mov
xchg
ret
movsl
out
cwtl
cmp
add
in
popa
mov
add
in
add
fnstsw
clc
repnz
jae
add
cmpsb
add
add
add
repnz
jae
lret
xlat
nop
add
xchg
rolb
jecxz
add
les
fwait
cld
nop
jmp
push
add
add
add
inc
clc
repnz
jae
add
out
lods
push
mov
xchg
ret
xchg
inc
sbb
lods
movzwl
clc
repnz
jae
add
add
mov
nop
jae
dec
add
or
testl
nop
jae
inc
loope
add
call
clc
repnz
jae
add
inc
shrb
mov
push
mov
xchg
ret
add
sbb
pop
mov
mov
nop
jae
add
pop
or
adc
sbb
inc
add
add
add
jge
popa
add
repnz
jae
pop
orl
out
movswl
clc
repnz
jae
sbb
add
cmp
nop
jmp
inc
dec
add
add
adc
add
clc
repnz
jae
inc
xor
adc
push
stos
clc
repnz
jae
fistps
adc
sti
les
clc
repnz
jae
add
xchg
nop
adc
clc
repnz
jae
add
test
ret
xor
addb
test
add
stc
add
popf
add
add
add
add
add
pop
add
clc
repnz
jae
mov
add
add
popa
add
mov
xchg
ret
bound
push
fwait
cld
nop
jmp
add
popf
addb
nop
jae
add
adc
loope
push
add
xchg
fwait
cld
nop
jmp
add
add
and
mov
nop
jae
filds
add
xor
cmp
add
cld
nop
jmp
add
add
adcl
jmp
xor
into
add
add
add
mov
cmpsl
add
add
add
sbb
dec
mov
or
add
repnz
jae
out
push
add
mov
xchg
ret
pop
add
add
sbb
test
loopne
clc
repnz
jae
add
xor
stos
jne
fwait
cld
nop
jmp
stc
add
cmp
mov
xchg
ret
add
bound
fmuls
xor
inc
add
add
add
clc
repnz
jae
dec
cmpsb
mov
or
clc
repnz
jae
add
add
add
add
push
clc
repnz
jae
out
pop
add
add
out
add
outsb
and
push
mov
xchg
ret
adcb
inc
sub
pop
cmc
inc
add
inc
inc
add
mov
xchg
ret
mov
xchg
jl
iret
or
inc
fdivrp
out
sbb
dec
fmuls
add
loope
dec
mov
mov
rolb
xor
test
repnz
jae
add
mov
add
iret
inc
add
roll
add
add
js
or
fwait
cld
nop
jmp
add
add
add
mov
repnz
jae
add
cld
add
and
clc
repnz
jae
addl
add
sbb
out
sbb
cmpl
out
add
cld
nop
jmp
add
add
inc
filds
test
cmp
jae
push
add
add
add
movzwl
clc
repnz
jae
adc
dec
add
cmp
xor
inc
add
add
add
lods
clc
repnz
jae
add
dec
adc
fwait
cmp
inc
xchg
fcoms
repnz
jae
test
xchg
or
pushl
push
mov
xchg
ret
add
add
test
mov
xor
fwait
cld
nop
jmp
add
cld
add
aas
add
mov
xchg
ret
add
inc
fwait
sbb
push
out
clc
repnz
jae
add
sbb
add
push
mov
xchg
ret
adc
pop
push
mov
xchg
ret
loope
mov
or
popa
add
mov
xchg
ret
test
aas
xchg
inc
stos
add
fwait
cld
nop
jmp
pop
add
push
dec
cmp
repnz
jae
pop
lret
mov
mov
fwait
cld
nop
jmp
push
add
fucomi
fprem
incl
add
add
out
add
add
add
xlat
push
loopne
clc
repnz
jae
dec
add
mov
pop
mov
fwait
cld
nop
jmp
add
mov
push
mov
xchg
ret
inc
pop
inc
cmp
dec
inc
clc
repnz
jae
add
add
clc
repnz
jae
add
fistpll
fwait
cld
nop
jmp
add
add
add
cld
add
inc
and
repnz
jae
add
add
add
push
add
pop
push
clc
repnz
jae
add
add
sbb
mov
xchg
ret
push
add
add
xorl
shr
clc
repnz
jae
or
add
push
fwait
cld
nop
jmp
pop
add
lret
add
sbb
repnz
jae
inc
cwtl
add
inc
jmp
rclb
hlt
faddl
xchg
ret
test
fwait
popf
inc
add
in
add
roll
aaa
add
or
mov
cmp
repnz
jae
loope
add
add
addb
push
clc
repnz
jae
nop
xchg
rolb
add
sbb
cld
nop
jmp
bound
loope
add
add
in
push
fwait
cld
nop
jmp
mov
add
mov
loop
movb
push
fwait
cld
nop
jmp
or
popf
pusha
add
mov
nop
jae
xchg
adc
xchg
mov
cmc
add
add
dec
cwtl
popf
add
push
add
add
add
fisubrl
popa
fwait
cld
nop
jmp
add
inc
aas
aas
add
add
jae
push
mov
add
jecxz
movzwl
clc
repnz
jae
add
add
xchg
add
add
repnz
jae
mov
subb
sbb
repnz
jae
mov
add
hlt
add
pop
push
mov
xchg
ret
dec
outsb
rolb
xor
clc
repnz
jae
add
add
add
repnz
jae
add
sti
fwait
cld
nop
jmp
fwait
add
pusha
out
adcb
stos
negl
pop
add
push
xor
cmpl
and
repnz
jae
add
cltd
test
fwait
cld
nop
jmp
cwtl
mov
add
enter
jae
sbb
xor
aaa
js
clc
repnz
jae
add
cwtl
fwait
dec
add
inc
push
out
sbb
jae
jb
repnz
jae
xor
lret
add
incl
add
cld
loope
push
add
push
add
add
jne
clc
repnz
jae
fwait
cmpsb
addl
dec
inc
data16
or
push
mov
xchg
ret
add
adc
dec
cmpsb
add
fwait
cld
nop
jmp
add
xchg
add
push
add
jg
pop
fwait
cld
nop
jmp
add
add
add
add
mov
push
mov
xchg
ret
sbb
stc
rol
add
lea
fwait
cld
nop
jmp
stc
add
add
xchg
add
jecxz
xor
pop
push
mov
xchg
ret
test
adc
add
daa
push
sub
jae
add
fwait
adc
mov
clc
repnz
jae
fistpll
sbb
pop
inc
add
les
repnz
jae
filds
add
inc
shlb
mov
nop
jmp
add
xchg
add
lret
not
push
mov
xchg
ret
inc
pop
add
dec
leave
movzwl
clc
repnz
jae
dec
cmpsb
dec
add
mov
fwait
cld
nop
jmp
add
dec
dec
add
xchg
bound
mov
rclb
add
inc
add
xchg
mov
xchg
sbb
popa
add
cld
nop
jmp
add
inc
add
push
add
jl
fwait
cld
nop
jmp
cwtl
cmp
add
xchg
aas
adc
out
decl
pop
pop
out
out
cmp
push
mov
xchg
ret
pop
add
xchg
xor
ljmp
add
out
incl
mov
add
fwait
cld
nop
jmp
xchg
push
add
cmp
inc
mov
nop
add
aas
mov
clc
repnz
jae
add
add
test
ret
call
fwait
cld
nop
jmp
lret
test
mov
xchg
ret
popf
push
loope
out
stc
js
enter
jae
xor
lret
add
lea
fwait
cld
nop
jmp
add
add
push
clc
repnz
jae
pop
xor
add
sbb
lret
dec
cmp
repnz
jae
pop
add
xor
clc
repnz
jae
shlb
add
add
leave
push
mov
mov
imul
jae
fidivrs
push
xor
push
mov
xchg
ret
loope
add
dec
add
dec
adc
repnz
jae
movsl
add
pop
add
fimull
jae
pop
loope
add
mov
repnz
jae
add
inc
nop
nop
movsl
cmpsb
xor
sti
clc
repnz
jae
add
adc
xchg
ret
add
pop
push
mov
xchg
ret
add
movsl
mov
pop
xor
add
lret
mov
clc
repnz
jae
add
push
test
popf
mov
push
mov
xchg
ret
add
add
mov
xchg
ret
addb
add
test
testb
decl
fwait
cld
nop
jmp
xor
or
xchg
dec
push
clc
repnz
jae
pop
dec
inc
mov
push
push
mov
xchg
ret
add
add
or
clc
repnz
jae
push
xor
add
jmp
add
add
mov
test
push
mov
xchg
ret
inc
add
cmpsb
add
mov
add
add
fwait
cld
nop
jmp
xchg
add
push
add
mov
jmp
sbbb
push
fwait
add
push
loop
clc
repnz
jae
add
je
clc
repnz
jae
lret
mov
add
clc
repnz
jae
add
pusha
add
inc
mov
loope
repnz
jae
add
fbstp
addb
add
mov
push
mov
xchg
ret
xchg
add
cwtl
dec
ficoml
in
iret
mov
leave
sub
xchg
add
jle
fisttpll
test
cld
nop
jmp
sub
test
stos
fwait
cld
nop
jmp
add
add
or
add
add
testl
fwait
cld
nop
jmp
add
loope
push
push
mov
xchg
ret
add
add
mov
popf
mov
clc
repnz
jae
adc
add
add
mov
repnz
jae
add
xchg
dec
loope
mov
repnz
jae
add
out
add
add
push
push
mov
xchg
ret
add
addb
dec
scas
inc
push
mov
xchg
ret
add
adc
add
add
add
inc
push
add
sbb
push
loopne
and
push
add
inc
clc
repnz
jae
into
jb
mov
add
push
clc
repnz
jae
xor
jb
add
sbb
cmp
repnz
jae
lret
add
mov
clc
repnz
jae
dec
inc
add
testb
pop
clc
repnz
jae
dec
mov
add
inc
inc
add
clc
repnz
jae
add
add
mov
xchg
ret
add
out
lret
push
call
fwait
cld
nop
jmp
dec
loope
cmp
add
nop
jae
cwtl
cmpsb
sbb
adc
add
clc
repnz
jae
pop
inc
lret
test
jae
add
add
stc
test
xchg
movsb
add
add
add
repnz
jae
mov
jmp
mov
fiaddl
add
fildl
add
iret
jnp
pop
add
clc
repnz
jae
xor
dec
inc
lret
enter
push
mov
xchg
ret
add
pop
add
push
clc
repnz
jae
cmp
fwait
dec
add
add
addb
add
push
clc
repnz
jae
inc
add
push
cmpsb
xor
add
mov
clc
repnz
jae
movsl
cmp
popf
cwtl
cmp
add
repnz
jae
xor
mov
add
mov
nop
jae
add
out
sbb
add
mov
nop
jae
add
stc
inc
cmp
add
movzwl
fwait
cld
nop
jmp
add
add
xor
dec
jne
clc
repnz
jae
add
mov
jne
fwait
cld
nop
jmp
or
testb
cmp
jmp
add
cmp
add
clc
repnz
jae
cld
sub
add
pop
cmc
ds
clc
repnz
jae
cmp
loope
mov
mov
xchg
ret
add
jnp
clc
repnz
jae
fwait
popf
add
gs
add
push
clc
repnz
jae
add
pop
dec
add
add
div
clc
repnz
jae
out
inc
add
cwtl
cld
jmp
andl
jae
lret
add
add
add
repnz
jae
test
add
mov
mov
and
push
mov
xchg
ret
cwtl
add
dec
outsl
popa
fs
cld
nop
jmp
aas
mov
mov
clc
repnz
jae
xchg
add
add
stc
clc
repnz
jae
sarb
add
sbb
lret
mov
clc
repnz
jae
add
out
pop
push
mov
add
into
lea
add
inc
add
cmc
and
add
pop
jbe
push
add
fwait
mov
out
ljmp
add
inc
adc
sub
mov
inc
gs
mov
stc
push
add
adc
mov
jmp
add
call
jge
add
add
lahf
scas
jne
into
pop
cmp
ja
hlt
add
add
int
out
sbb
xchg
sbb
add
fldt
mov
js
push
sti
dec
jnp
stos
in
mov
insb
push
xor
pop
mov
cmp
add
jecxz
testb
mov
mov
jnp
or
pop
inc
add
add
push
add
sbb
add
mov
pushf
call
popf
inc
add
add
in
jmp
data16
add
add
xor
add
loop
xorl
adc
out
add
testb
ret
add
or
inc
add
addb
movsl
xchg
addb
fisttpl
xor
mov
and
das
mov
outsl
imul
and
mov
add
outsl
or
xchg
push
fnstenv
jl
add
out
cmp
add
data16
mov
popa
mov
or
jp
add
add
add
add
jmp
add
rolb
mov
push
cmpsl
or
rcll
add
iret
lahf
xor
add
insb
cmp
lock
nop
add
gs
add
push
add
or
fwait
leave
popf
add
push
sub
pusha
add
adc
adcl
add
cmp
loopne
mov
jns
jnp
add
or
mov
addr16
add
imul
add
add
add
add
xlat
out
push
xchg
cmc
shrl
lret
addb
add
push
mov
mov
clc
sub
add
mov
mov
xchg
mov
lret
or
lea
add
xchg
mov
xchg
out
ljmp
dec
dec
shll
add
push
add
stc
mov
add
add
pop
add
cmpl
inc
dec
add
pop
lret
adcl
or
mov
movsb
add
fnstsw
dec
mov
mov
movsl
pushf
lahf
int3
jl
add
scas
leave
and
mov
bound
mov
rcrl
bound
mov
sbb
or
gs
or
or
jb
mov
jne
add
icebp
or
add
adc
jo
ss
imul
xor
adc
rolb
repnz
push
mov
sahf
or
movsb
add
push
push
add
add
cwtl
mov
add
stc
movsl
mov
add
jecxz
add
mov
faddp
mov
push
add
rolb
and
mov
mov
push
jo
sarl
add
and
adc
mov
aam
xorl
scas
leave
push
add
mov
push
add
sub
imull
bound
mov
rolb
xor
add
add
sbb
mov
test
insl
imul
add
rolb
mov
adc
add
jbe
cmp
shll
inc
add
add
dec
xor
dec
xchg
add
add
add
out
aam
inc
add
add
jg
or
push
add
mov
add
add
rolb
data16
jle
je
or
mov
push
xchg
nop
add
add
loop
dec
not
add
outsb
leave
adc
xchg
adc
add
iret
pop
dec
jp
add
test
add
xchg
xor
xchg
add
in
cmp
mov
add
push
add
mov
ja
cmc
mov
aaa
sub
add
add
pop
aad
sahf
push
add
add
jno
add
iret
add
add
add
mov
pop
inc
add
out
mov
jle
add
push
repnz
test
sbb
adc
imul
mov
add
enter
ds
inc
jmp
pop
mov
aaa
jae
repz
ret
add
add
xor
pop
arpl
add
lret
adc
xchg
mov
xchg
fadd
add
add
aam
xchg
xchg
mov
dec
mov
pop
add
adc
add
add
mov
sub
popa
sub
cwtl
fmull
fcomps
in
cmp
hlt
add
pop
jbe
arpl
lret
pusha
add
add
add
add
mov
pop
mov
sbb
lahf
xchg
add
int3
fnstenv
add
add
add
dec
test
add
cmc
jle
push
add
addb
lock
xchg
add
rcrl
add
add
or
add
addb
add
nop
add
data16
pusha
add
cmp
dec
fsubr
or
les
arpl
add
rcll
mov
test
lods
push
inc
add
sbb
movsb
add
jecxz
lds
cltd
lods
sbb
aaa
dec
loopne
cmpsl
cmp
jbe
pop
rcrl
cli
imul
pop
xor
lret
add
xor
add
jbe
add
mov
insl
mov
test
mov
jbe
hlt
add
add
es
add
das
imul
xor
repz
mov
add
mov
lahf
mov
mov
stc
xchg
add
pop
popa
jle
push
add
lahf
jmp
add
mov
into
fcomps
stc
push
add
mov
movsb
add
ljmp
add
out
int
add
cmp
xor
lods
dec
jns
mov
lods
xchg
fstl
add
push
imul
add
add
push
cmpsb
add
lods
sub
dec
dec
push
xchg
add
push
add
mov
add
mov
push
lds
cltd
adc
out
inc
add
test
outsl
jno
inc
add
xor
pop
fwait
add
das
add
repnz
fcmovnu
movb
add
inc
add
mov
test
sbb
mov
mov
std
ficoml
add
ss
add
mov
fsub
add
cltd
jb
jb
cmpsl
sbb
sahf
sub
lods
xchg
ficoms
jl
insb
jge
dec
cmp
mov
pop
pop
inc
scas
push
adc
rolb
dec
xor
incb
es
add
add
mov
pop
mov
adc
inc
add
mov
cmpsl
jmp
mov
pop
aas
inc
lds
ds
xchg
popf
push
fcom
add
add
add
xor
rol
and
mov
pop
mov
jne
in
and
daa
pop
sub
add
mov
aaa
xor
add
mov
jecxz
add
add
popf
nop
add
aas
testb
add
add
cli
mov
add
pop
in
inc
add
lods
and
pop
cmp
pop
idivl
movsl
fimull
xor
add
cltd
movsl
mov
out
pop
or
leave
leave
add
test
mov
sub
out
mov
aam
fwait
mov
jnp
aas
cmp
fsubrl
or
inc
mov
test
add
mov
ljmp
imul
mov
add
push
add
add
pop
inc
add
pushf
inc
add
add
call
add
inc
add
add
std
rolb
dec
mov
les
ret
jae
add
mov
xor
add
test
jle
sbb
movb
mov
scas
jbe
xchg
sbb
jb
and
and
popf
aaa
xchg
add
fwait
testb
loopne
inc
sub
add
in
jne
add
add
adc
neg
inc
add
loope
pop
dec
lods
jle
adc
add
push
jns
mov
sbb
mov
pop
lcall
jnp
cmp
add
ljmp
out
addb
add
jo
jl
ljmp
rolb
sbb
rolb
or
xchg
pushf
int3
dec
jmp
dec
je
add
dec
pop
out
movb
or
add
xchg
cmpsl
ret
in
mov
xchg
xor
cmc
inc
add
rcll
add
in
pop
xchg
add
les
dec
cmc
fdivr
xor
xor
sti
adc
add
or
add
pop
in
mov
aam
mov
add
pop
addb
das
pop
sbb
icebp
mov
pop
clc
addr16
sbb
clc
stos
aaa
xor
dec
addr16
test
add
mov
sub
add
adc
mov
jno
mov
xchg
movsl
aas
lds
loope,pn
add
scas
ljmp
stos
out
fwait
sub
add
in
add
movsb
add
xor
and
xchg
dec
rcll
add
dec
test
add
insb
das
mov
add
xor
stos
movsl
xchg
cmpsl
push
dec
jp
sbb
add
add
jns
add
mov
xor
mov
popf
inc
add
mov
cmp
push
cmp
add
push
xchg
mov
mov
cld
cli
mov
add
mov
shrl
mov
test
add
sub
pop
jl
jbe
test
push
add
js
add
and
rolb
pop
popf
mov
xor
add
mov
arpl
popa
pop
dec
gs
stos
loopne
addr16
sub
js
or
add
cmp
stos
jg
icebp
popa
mov
xchg
lods
test
les
push
jbe
rcrl
sub
add
xchg
jl
add
mov
sbb
pop
pop
test
add
and
loop
test
add
add
inc
add
add
shll
addr16
add
jae
push
sbb
pop
in
push
loop
xchg
add
xchg
or
add
rcrl
sbb
popf
fbld
gs
add
bound
mov
dec
loop
loope
loop
cmp
add
bound
mov
shll
add
rcll
imul
add
mov
ss
add
jnp
add
add
cltd
mov
jge
mov
cmp
add
and
inc
mov
icebp
mov
in
mov
dec
pop
push
inc
add
dec
repnz
add
aam
add
das
jecxz
mov
out
add
repnz
mov
lahf
push
add
sbb
js
inc
add
repz
pop
daa
pop
in
cwtl
sarl
add
cmp
add
push
add
push
outsb
nop
add
push
and
add
cmp
scas
sub
pop
rolb
inc
push
movsl
pop
pop
xchg
add
das
cmp
scas
pop
mov
ret
lcall
add
adc
mov
sub
adc
cmp
pop
sub
xchg
xchg
mov
and
mov
mov
daa
jb
movb
ja
and
add
xchg
hlt
add
push
testb
jne
add
jl
jmp
test
popf
fwait
mov
mov
maskmovq
mull
mov
and
xchg
add
test
mov
add
add
rcll
jbe
or
mov
fistpl
rolb
cmp
sub
mov
test
out
mov
mov
aam
add
xchg
and
pop
jo
jb
add
sbb
add
and
add
jge
and
mov
xor
sbb
cmpsl
sahf
xchg
add
outsb
lahf
mov
add
cwtl
and
lock
jle
add
add
mov
dec
inc
out
out
push
add
sbb
mov
sahf
test
add
iret
xchg
adc
inc
add
repnz
gs
in
cmp
push
add
hlt
add
sub
mov
add
testb
cli
and
pop
jmp
push
add
inc
lret
gs
rcrl
movb
clc
sbb
stc
cmp
add
and
mov
arpl
nop
add
jp
sbb
and
pushf
pop
mov
or
add
adc
fcmovnbe
add
jp
sarl
mov
stos
or
add
mov
mov
add
add
add
pop
out
js
pop
mov
mov
push
add
mov
mov
cmpsl
mov
cmpsl
roll
out
imul
sbb
pop
imul
andl
pop
cmp
lea
add
add
imul
and
mov
add
mov
dec
and
mov
daa
sub
xchg
mov
inc
add
loope
insb
fwait
cs
push
push
pop
sbbl
add
mov
and
add
add
sub
loope
js
sbb
xor
rolb
xchg
xor
enter
rcrl
pop
js
stc
mov
add
push
or
roll
sbb
pop
rolb
add
and
add
sbb
pushf
int
cmp
add
cmpsb
add
pop
jne
cmp
or
jae
add
roll
test
call
out
into
sub
imul
data16
add
add
add
add
lock
ljmp
push
add
add
enter
add
jle
push
add
daa
mov
sti
xchg
adc
ljmp
popa
sahf
iret
rolb
dec
testb
jne
add
les
ja
cld
testb
add
or
scas
imul
xor
sub
in
leave
mov
iret
loopne
shll
jbe
out
movb
add
mov
clc
or
add
fsubs
push
movsb
add
dec
hlt
add
add
std
mov
add
loop
cld
int
add
cmpsl
arpl
inc
cwtl
lret
xor
add
xchg
loop
fcmovu
stos
push
add
jns
ljmp
push
mov
jne
lods
dec
add
mov
mov
jge
push
mov
fisubrl
fwait
into
or
bound
mov
cmpsl
push
mov
mov
mov
gs
add
fsubrl
aam
cwtl
mov
push
data16
jmp
jns
in
mov
test
jno
sub
add
notl
enter
aam
lret
mov
shl
add
add
add
jmp
inc
add
aaa
out
pop
aad
inc
stos
popl
add
add
sbb
push
add
ret
jge
cmp
jae
mov
mov
sbb
mov
std
inc
add
cmp
push
in
shll
ljmp
push
subl
and
mov
mov
add
stc
call
add
add
adc
push
add
add
add
add
add
xor
sub
add
xor
fisttps
sbb
add
or
lock
jle
xchg
add
and
mov
test
xchg
add
out
iret
xor
add
add
add
inc
add
mov
add
dec
lods
imul
fwait
rolb
lahf
cs
int3
ret
fists
add
stos
aas
mov
testb
clc
data16
add
sahf
add
inc
add
cmp
add
test
add
gs
out
jno
cmp
mov
add
or
je
mov
fwait
adc
pop
inc
add
add
out
arpl
mov
ljmp
xchg
pop
xchg
addl
mov
mov
add
pop
cmp
js
mov
add
adc
stos
addb
addl
repnz
cmpsl
gs
cmp
pop
sub
mov
add
sti
inc
add
add
cwtl
test
add
add
addb
fisubrl
xchg
add
lods
aam
jp
push
push
and
dec
arpl
cmp
rcrl
cwtl
pop
and
mov
in
or
loope
add
adc
xlat
sahf
xchg
adc
test
adc
mov
pop
cmp
cmpsb
add
lret
mov
add
add
dec
int
mov
sbb
cmp
add
pop
je
and
xchg
add
dec
iret
out
add
inc
add
sub
add
push
add
je
loope
push
add
ljmp
inc
add
inc
add
add
jmp
add
add
add
xor
add
add
adc
aaa
movsl
loop
jb
ret
adc
add
iret
jbe
movsb
add
and
mov
adc
add
jp
xchg
rolb
fstpl
push
add
sbb
sub
add
mov
int
cmpsl
mov
cmc
loop
add
pop
stos
sti
inc
stos
out
in
fisubrs
add
lods
xor
in
data16
mov
add
out
and
add
add
add
add
loopne
movsb
add
add
mov
movb
lcall
test
sti
cmp
add
pop
ficompl
add
add
jnp
add
dec
or
add
adc
arpl
xchg
shl
out
ret
cld
dec
add
mov
das
sub
mov
aas
arpl
add
mov
clc
scas
or
loopne
sbb
xor
xchg
mov
lret
add
add
xchg
add
enter
not
add
add
fst
dec
xor
add
xlat
sti
movsb
add
adc
add
add
jge
pop
adc
add
jnp
add
mov
add
add
imul
add
decb
xchg
add
clc
push
add
or
popf
push
adc
adc
lds
xchg
xchg
jo
stc
mov
add
add
add
loope
dec
mov
jg
lahf
insl
lcall
movsl
sub
jae
jmp
sub
repz
xor
push
xchg
push
add
into
dec
jo
leave
es
push
mov
stos
jno
test
cld
dec
sbbl
popf
clc
addr16
mov
repnz
iret
sub
or
inc
add
mov
adc
popa
sbb
sub
imul
push
add
fldenv
inc
or
loope
add
add
shrl
xchg
push
cmc
xchg
sub
mov
or
add
inc
add
dec
lahf
enter
add
ret
pushf
cmp
add
adc
lret
jo
out
mov
mov
ret
adc
inc
inc
add
add
add
add
in
xor
xchg
add
add
sbb
loope
push
out
in
add
add
sbb
ljmp
mov
adc
jmp
stc
xchg
cmp
lods
jbe
das
inc
push
add
gs
add
cltd
cmc
loopne
out
xor
fucomp
adc
dec
dec
or
clc
paddusb
mov
push
insl
mov
or
jmp
jl
pop
or
jnp
jb
test
js
insl
push
xchg
xchg
add
icebp
cmc
addb
lea
add
jb
imul
mov
xor
xorl
sub
out
push
add
fstpl
fistpll
add
add
add
lahf
stos
push
add
jmp
add
insb
clc
jb
lcall
cmc
pop
ret
cmp
xor
jp
add
jg
push
pop
mov
add
and
mov
scas
cmp
add
add
rolb
jb
mov
add
out
pop
lret
push
xor
push
add
mov
add
imul
mov
add
xor
cmp
add
sbb
jbe
xchg
add
mov
cld
push
bound
mov
icebp
inc
xor
out
out
sar
pop
sub
dec
daa
sub
sub
stos
stos
mov
push
adc
rolb
jno
mov
mov
js
gs
nop
add
pop
dec
lea
cs
ljmp
pop
jno
add
jp
mov
add
push
dec
mov
add
cmp
iret
call
mov
add
hlt
add
add
arpl
and
mov
push
add
xor
mov
inc
add
jge
sbb
add
add
frstor
data16
add
pop
les
inc
add
or
add
movb
rolb
mov
add
add
add
and
mov
xchg
icebp
push
add
fstl
iret
mov
xchg
add
dec
fisttps
jae
movsb
add
add
mov
mov
lcall
push
add
sti
inc
add
cmpsb
add
add
push
add
xchg
cs
mov
lret
aaa
rolb
movb
add
add
inc
add
pop
mov
ficoml
inc
jo
mov
add
add
test
add
daa
pop
loope
popa
add
mov
jmp
addr16
inc
add
add
popa
icebp
adc
aad
push
add
loop
cmovo
mov
insl
addb
repz
frstor
loop
les
dec
jl
sbb
add
dec
out
jo
pop
lds
jno
in
jmp
mov
add
add
or
int3
loop
dec
add
popa
adc
scas
push
add
add
and
mov
pop
aaa
xchg
lods
dec
push
cmp
add
or
testb
adc
mov
mov
inc
add
test
add
jmp
add
bound
mov
add
add
add
push
add
arpl
mov
in
pop
inc
fwait
sub
add
jne
addr16
add
add
sti
into
mov
mov
push
add
add
add
leave
stos
in
fisttpl
cmp
mov
mov
pop
inc
add
ret
jo
repnz
xor
xor
cli
sbb
add
mov
inc
xor
ret
insb
push
add
and
mov
add
add
and
adc
mov
fiadds
data16
inc
add
cli
and
mov
add
sub
xchg
add
add
stos
into
mov
mov
add
add
mov
hlt
add
mov
adcl
add
imul
add
ret
add
add
add
hlt
add
cmp
pop
and
test
xor
add
mov
add
add
or
mov
push
add
add
stos
rolb
adc
fildll
xor
add
mov
arpl
in
push
add
or
xchg
sahf
jae
adc
bound
mov
jecxz
mov
cmpsb
add
push
add
and
dec
addb
push
add
mov
mov
sub
cmp
adc
sbb
lea
add
jp
add
add
cmpsb
add
repnz
add
add
sbb
push
in
call
cld
xor
idivl
add
add
test
scas
push
add
outsb
lret
out
out
mov
data16
sub
scas
mov
mov
sbb
add
cltd
add
cs
jle
adc
mov
mov
mov
inc
jo
lret
mov
mov
clc
pop
mov
movsb
add
lods
enter
add
imul
sahf
movsl
aaa
xor
push
sub
sti
jo
inc
rolb
popf
fcoms
out
jmp
mov
clc
mov
add
mov
cmpsl
sub
movl
pop
fwait
push
add
jl
enter
xchg
push
lret
push
pushf
push
movb
dec
lahf
push
pop
add
jae
add
add
test
jmp
les
inc
add
add
mov
les
in
add
out
lock
push
add
mov
xor
add
jecxz
push
and
mov
mov
outsb
fwait
dec
fisubs
pop
push
xor
inc
add
in
sub
leave
cmp
add
andl
push
add
add
xchg
or
out
sbb
mov
outsb
cs
add
das
mov
repnz
imull
inc
daa
iret
mov
add
push
add
add
mov
outsl
mov
mul
add
jb
push
add
and
add
les
mov
inc
add
jbe
or
add
out
aam
and
mov
add
cmpsl
dec
and
jnp
arpl
lods
stos
outsl
pop
test
dec
lds
jnp
in
cmp
lsl
mov
add
cltd
std
jg
dec
pop
push
mov
add
add
push
add
fsub
add
add
test
add
loopne
jl
mov
test
rolb
xchg
add
rolb
xor
sub
jne
add
push
push
rolb
out
dec
xchg
add
test
pop
incl
add
cmp
add
js
add
inc
add
mov
or
add
in
adc
add
test
add
push
aaa
jg
add
xchg
sub
xor
add
add
mov
add
dec
push
cmpsb
add
add
pop
mov
add
testb
or
cmp
add
hlt
add
cmpsl
push
add
in
dec
add
testb
and
mov
rolb
dec
out
inc
fmuls
in
fbstp
or
out
bound
mov
cmp
jnp
add
addr16
add
add
add
mov
jo
or
pop
or
add
add
add
sub
jl
arpl
add
popa
mov
ds
add
mov
add
les
or
out
jno
scas
or
add
test
lret
mov
stos
scas
xorl
add
xchg
dec
in
lods
ljmp
add
cmp
add
rolb
mov
lret
add
add
add
fsubl
fsubrl
mov
in
in
adc
adc
jns
mov
insb
call
lods
and
mov
inc
das
imul
pop
jae
add
test
scas
adc
add
lods
dec
addb
jbe
aas
pop
push
aad
add
mov
clc
sti
leave
loop
mov
hlt
add
testb
cmp
or
add
pop
xor
ret
cltd
fistps
mov
add
pop
and
mov
dec
fisubrs
cmpsb
add
cwtl
or
add
add
test
and
mov
add
arpl
loopne
bound
mov
nop
add
maxps
sbb
add
add
add
add
add
sbb
push
sti
les
cmpsl
in
lahf
std
in
data16
mov
insl
andl
add
add
leave
adc
xchg
hlt
add
xchg
and
add
mov
add
jne
mov
add
add
sub
jbe
insl
add
mov
stos
inc
inc
xor
xor
sub
loopne
cmp
bound
mov
adc
cmp
add
dec
test
mov
sti
mov
or
add
mov
arpl
in
jl
dec
dec
nop
add
cwtl
mov
rolb
sbb
add
add
mov
dec
push
stc
mov
outsl
ljmp
out
pop
xchg
testl
addb
or
inc
add
push
into
imul
clc
shll
push
add
push
jb
or
rolb
scas
xchg
out
rcll
add
inc
add
cwtl
mov
dec
iret
sti
inc
add
add
add
or
test
shrl
push
push
movb
out
add
add
mov
or
cmp
add
jne
call
add
sub
add
add
add
jno
les
std
lret
add
add
mov
add
add
ljmp
lret
jno
movsl
xor
add
add
add
pop
int
pop
adc
push
insl
iret
in
add
add
mov
pop
rolb
fmul
jns
into
or
add
lret
mov
mov
arpl
jbe
xor
adc
into
mov
jle
mov
jae
add
sti
jb
addb
fcomps
int3
cmp
ja
std
mov
mov
add
add
mov
adc
add
add
fmull
movsl
cwtl
cmc
inc
add
lock
xchg
insb
iret
sub
mov
jecxz
xchg
jb
sbb
jae
dec
or
add
add
stos
daa
hlt
add
in
ret
add
push
scas
jne
jle
pop
pusha
add
add
add
ljmp
inc
add
xor
ret
in
mov
add
sbb
call
sahf
mov
jecxz
cmp
loopne
add
mov
add
add
xchg
mov
fsubs
xor
add
xchg
add
pop
jg
ljmp
add
add
sub
add
cmp
add
pop
stc
out
fldt
xor
or
ds
shrd
mov
add
jnp
add
xor
arpl
mov
hlt
add
add
jecxz
repz
fiaddl
mov
fst
add
je
test
pop
jns
add
dec
je
into
in
add
xor
add
add
test
mov
mov
add
mov
fdivl
xor
loop
call
hlt
add
add
nop
add
jl
hlt
add
push
outsl
lea
push
add
add
shll
scas
fildl
add
sub
jge
mov
xor
add
mov
or
and
das
and
movsl
test
add
mov
xchg
fistps
add
cmc
cmpl
addb
fucomp
jb
jne
test
call
mov
fwait
push
add
push
mov
add
xchg
push
scas
repz
gs
add
add
repz
jbe
sbb
dec
mov
mov
int3
fsubrl
or
pop
cmp
add
push
fiaddl
or
outsb
push
gs
cwtl
pop
jae
push
insl
jbe
call
js
jo
pusha
add
into
jno
add
ret
xadd
rcl
and
xchg
stos
pop
mov
xlat
daa
jle
pop
or
add
divl
lods
je
jecxz
sahf
test
add
push
add
in
mov
mov
dec
fs
push
xchg
add
leave
jle
ja
add
lret
test
add
mov
sbb
stos
int
add
add
lahf
pop
pop
lds
xlat
mov
push
inc
add
mov
inc
fisubl
les
fwait
rolb
xor
pop
adc
imul
add
add
cmp
lret
add
mov
sbb
add
movsb
add
lea
mov
clc
pop
sbb
push
dec
sbb
inc
add
add
xor
popa
jb
or
push
dec
cwtl
and
out
xor
lods
data16
add
cmp
cmc
addb
shr
jo
jnp
test
pop
fsub
jecxz
dec
xor
jb
scas
cmpsl
and
or
jns
fs
xor
jbe
xor
insb
jno
add
mov
bound
mov
add
sub
push
add
xchg
jbe
mov
push
add
je
adc
out
addb
add
add
mov
push
add
add
lds
sbb
inc
or
cmp
mov
inc
add
pop
jmp
add
inc
leave
pop
sbb
pop
cs
add
add
add
push
addl
push
add
add
mov
icebp
jno
iret
lret
add
and
jbe
loop
test
mov
mov
ss
sbb
popf
jbe
inc
cmp
mov
xor
or
fcmove
fmulp
in
js
inc
add
scas
mov
adc
je
jne
add
xchg
inc
add
adc
cmpsb
add
clc
repz
mov
add
incl
xchg
shll
rolb
out
push
add
add
fildll
add
inc
ljmp
add
rolb
mov
aad
cwtl
pop
jl
and
add
or
fsubl
inc
cmp
add
add
add
push
add
add
add
fidivrl
xchg
enter
jecxz
cmpsl
in
dec
fcomps
add
add
jl
xor
cmovno
pop
pop
inc
add
jne
mov
testb
shll
int3
into
mov
jae
nop
add
cmpsb
add
add
mov
dec
aad
add
add
push
add
mov
mov
add
add
mov
and
ret
or
scas
jmp
lret
add
movl
addb
sub
pop
pop
push
add
xchg
add
movb
js
icebp
cmp
mov
add
xchg
add
add
sub
loopne
outsl
inc
and
mov
ss
gs
rolb
xor
inc
add
sub
arpl
mov
inc
add
mov
add
adc
mov
mov
mov
inc
scas
addb
es
add
jnp
add
inc
add
pop
mov
in
push
sub
testb
fimull
in
add
xchg
add
aas
imul
lods
and
dec
in
add
sbb
add
ds
stos
test
pop
aam
pushf
movsl
int
push
iret
fnstsw
rolb
loopne
or
lea
push
add
mov
mov
aad
xchg
dec
xchg
add
cmp
add
out
icebp
xlat
ret
push
add
js
add
add
ja
add
aad
adc
inc
add
jnp
xlat
pushf
push
add
mov
add
iret
arpl
add
flds
mov
lret
push
icebp
xor
test
push
fcoml
mov
fcmove
lret
sbb
add
add
mov
cmp
leave
push
stc
ret
insl
ljmp
addb
jecxz
jo
mov
xchg
addr16
add
add
or
add
add
add
xchg
add
lock
cwtl
adc
test
rorl
mov
fs
cmp
in
fsubr
lcall
in
add
xor
mov
add
pushf
inc
lea
ss
js
add
popf
rolb
add
xchg
inc
sub
xor
xchg
out
into
testb
jns
mov
pusha
add
sbb
push
push
add
or
or
dec
cmpsb
add
sub
sbb
add
fists
add
gs
lahf
adc
gs
push
test
test
je
push
push
jmp
sbb
mov
add
dec
xchg
add
xor
and
mov
add
ljmp
in
and
add
add
out
scas
mov
sub
add
out
lods
cs
add
dec
xor
xchg
add
imul
add
pop
adc
sub
sbb
adc
gs
pop
rolb
add
add
pop
jb
je
lret
jnp
add
sbb
loope
lea
shll
mov
fcoms
adc
add
mov
test
mov
fidivl
add
aad
lods
outsl
adc
add
mov
add
add
add
mov
add
push
add
cwtl
gs
sub
xchg
fcoms
sbb
ja
fisubs
cmpsb
add
test
lcall
add
nop
add
lock
idivl
add
mov
cmp
mov
mov
imul
test
mov
push
mov
add
fsubrs
adcl
push
add
mov
push
add
or
fcoml
dec
data16
push
add
add
mov
and
data16
leave
jne
ja
add
and
scas
sub
add
cltd
call
add
cmp
jne
pop
xchg
add
add
add
outsl
sahf
outsl
lea
add
and
add
mov
pop
pop
dec
popa
mov
jbe
mov
mov
add
jmp
pushl
add
add
mov
and
je
add
add
add
or
and
add
inc
add
mov
add
cmp
mov
push
add
add
leave
inc
scas
mov
imul
mov
arpl
jno
dec
aas
sub
addr16
addb
nop
add
add
jmp
in
push
xor
add
call
add
pop
imul
icebp
les
clc
cmpsl
clc
jbe
jnp
cmp
add
sbb
sbb
sbb
and
mov
add
scas
push
add
pusha
add
mov
add
mov
xchg
add
lret
xor
xor
lcall
add
mov
add
mov
pop
xchg
add
out
inc
shll
xor
movzwl
cmp
add
hlt
add
inc
lret
sub
loopne
xchg
add
outsb
jecxz
add
add
add
jge
daa
andl
push
bound
mov
jl
rcll
outsl
fimuls
add
add
pop
mov
pavgb
int3
aad
add
les
out
movsb
add
rolb
xor
pmaddwd
mov
inc
add
pop
stc
les
pusha
add
or
add
push
add
mov
fstl
add
dec
add
mov
mov
mov
push
lcall
int
add
mov
or
ljmp
adc
xor
lea
push
jnp
dec
std
out
in
test
add
pop
scas
cli
clc
movsl
mov
cmpsb
add
aad
add
movsb
add
jmp
add
jns
adc
insb
inc
testb
loopne
add
outsl
fimull
insl
data16
test
add
add
rolb
add
je
jo
outsl
addr16
pop
xor
xchg
jge
sub
xchg
add
jle
testb
add
add
lock
dec
iret
xchg
ljmp
test
fdivrp
ret
add
rep
jo
xchg
test
add
sbb
or
lret
addb
sti
je
xlat
lahf
mov
dec
ds
xchg
mov
fldl
cmp
add
or
jle
lods
jb
repnz
mov
inc
add
jecxz
add
dec
cli
xchg
and
scas
std
pop
cmpsb
add
dec
and
mov
mov
test
mov
add
add
add
dec
xchg
add
add
out
iret
dec
add
add
add
testb
push
add
rolb
add
mov
add
rolb
xchg
scas
pop
jo
jg
sub
mov
imul
cmp
add
addr16
iret
addb
adc
js
pop
add
mov
add
mov
add
add
add
add
push
mov
aam
xchg
push
add
inc
add
repz
mov
add
add
repnz
add
mov
xchg
ja
add
shll
cli
mov
repnz
shll
testb
add
mov
pop
in
popf
cmpsb
add
sti
jnp
cltd
xor
addr16
push
add
ficoms
call
add
xlat
jp
adc
add
add
add
cmpsl
sbbl
add
jecxz
add
add
or
icebp
mov
add
add
cmp
cli
push
add
sub
addr16
lret
sbb
pop
ds
pop
mov
sub
push
add
xlat
and
daa
sbb
adc
outsb
xor
aas
pop
cmp
add
adc
pop
out
sub
add
jno
push
add
inc
xor
fstpl
mov
xchg
popa
pop
mov
add
les
lcall
jmp
mov
ret
test
les
mov
pop
sub
adc
dec
add
adc
cmp
add
jo
jb
sti
repnz
adc
fsubs
jmp
daa
mov
stos
push
cmpsl
notl
pop
pop
adc
mov
sahf
data16
xchg
add
add
mov
jecxz
mov
aam
call
lret
and
mov
and
cli
jns
add
xor
sub
add
outsb
inc
adc
cmpsb
add
mov
dec
push
push
xor
popa
loop
aas
pop
cmp
add
and
inc
add
pusha
add
testl
jmp
aad
aam
clc
xor
inc
jle
push
add
out
inc
test
call
adc
dec
out
pop
out
add
add
sahf
mov
inc
add
pop
out
pxor
jl
insl
xchg
ja
out
cmp
outsl
and
mov
or
lret
pop
add
out
jp
add
xor
push
inc
add
rolb
mov
lock
push
add
clc
test
or
pop
xchg
add
int
incl
add
mov
inc
add
mov
add
pop
pop
cmp
jg
add
add
movsl
in
in
push
add
mov
pop
mov
ljmp
and
ret
aam
pop
inc
jge
inc
out
adc
jo
loopne
nop
add
insb
rolb
je
in
lahf
arpl
dec
cld
mov
mov
add
cld
das
enter
add
mov
mov
add
add
add
add
push
add
pop
loope
in
adc
add
add
lds
pop
dec
inc
add
mov
mov
lahf
mov
and
in
push
addb
add
sbb
aam
xchg
add
fmul
addr16
add
xchg
adc
repnz
or
daa
dec
mov
icebp
or
mov
fxch
fcmove
sub
hlt
add
je
addr16
xchg
add
mov
dec
pop
cmc
cli
mov
insl
lds
add
xchg
inc
add
add
jnp
testb
stc
jns
movsl
sub
push
outsb
lcall
arpl
movsl
mov
jmp
icebp
pop
xor
inc
add
dec
dec
inc
or
das
mov
xor
push
imul
add
loopne
add
hlt
add
mov
add
and
mov
mov
in
sahf
data16
mov
add
mov
and
lret
adc
add
push
add
add
dec
mov
jo
sub
lds
jne
add
sub
add
mov
and
mov
pop
inc
jmp
add
das
push
or
dec
mov
rolb
add
adc
push
add
add
mov
dec
mov
add
inc
push
pop
sub
jne
add
cmp
orps
push
add
add
in
or
jecxz
mov
mov
aaa
pop
mov
mov
add
sbb
adc
mov
popf
push
sbb
jbe
gs
mov
jg
lret
sub
add
jg
mov
push
add
xchg
add
test
mov
add
mov
out
add
and
stos
loop
sarl
in
pop
aam
xor
sub
and
mov
das
add
adcl
inc
lods
sub
add
pop
sbb
adc
push
add
in
rolb
sub
jbe
sub
cld
sub
sub
add
push
add
in
dec
ret
clc
rolb
add
andl
xchg
jge
sbb
lods
inc
xchg
dec
cmp
addl
fldenv
dec
fisttpl
lods
or
mov
push
rolb
daa
push
sbb
aam
or
add
mov
mov
movsl
mov
xor
imul
fldcw
add
mov
add
push
rolb
add
adc
mov
add
pop
pop
sahf
or
mov
scas
enter
sub
pop
add
data16
ficompl
adc
daa
call
add
fadds
add
sar
lods
pusha
add
add
pop
inc
add
int3
inc
test
add
cwtl
fbstp
add
ljmp
and
mov
mov
add
rolb
je
dec
and
add
add
repnz
push
add
int3
push
add
pusha
add
add
add
jno
cmp
add
xchg
add
add
add
in
pop
ret
in
xlat
or
or
pop
test
cmc
ljmp
push
add
jge
ret
inc
add
add
jne
push
push
arpl
into
mov
sahf
call
add
mov
mov
add
pop
lock
mov
cmp
mov
pop
adcl
addr16
add
xor
add
mov
fwait
jecxz
into
stc
aas
shll
pop
je
jo
jmp
add
popa
sub
push
mov
ret
cs
add
mov
mov
arpl
add
jb
mov
les
cmp
cli
lods
das
loop
cmc
pop
fldpi
lds
das
jns
ljmp
aad
roll
mov
dec
dec
out
pusha
add
lods
fs
jmp
in
rolb
mov
add
jge
add
add
out
divl
add
add
add
in
icebp
out
adc
pop
int3
daa
icebp
add
and
push
ret
add
mov
mov
xchg
pop
dec
dec
dec
jo
jle
shll
mov
push
sbb
push
iret
int
das
insb
push
xor
rolb
imul
add
push
inc
add
add
aam
jns
jno
lsl
adc
mov
std
and
mov
jo
les
push
hlt
add
pop
add
add
lcall
js
add
insb
sbb
inc
outsl
repnz
loopne
xor
add
xchg
add
xor
mov
push
push
add
push
xchg
add
push
lret
mov
add
add
add
jb
or
adc
ficomps
add
data16
movb
enter
inc
add
sbb
rolb
push
movsb
add
xor
daa
sbb
push
fdivrs
ds
push
add
shll
pop
ret
mov
cs
mov
xlat
mov
add
je
jge
add
mov
jbe
sbb
xor
fxch
mov
das
lea
pop
in
pop
add
call
and
subl
add
mov
test
outsb
xchg
and
add
sti
jae
int
out
sti
jno
jmp
in
and
add
cmc
cmp
dec
in
mov
ljmp
rolb
pop
and
mov
add
push
repz
fwait
mov
mov
scas
in
inc
nop
add
hlt
add
fistl
call
add
add
push
add
mov
mov
sub
cmp
pop
in
mov
add
add
mov
push
push
add
iret
aas
leave
xor
or
pusha
add
add
stos
int3
push
adc
mov
add
orl
add
aas
mov
ljmp
jns
add
mov
xchg
inc
add
lds
sub
ret
clc
and
mov
mov
in
pop
cwtl
cmc
add
push
add
enter
inc
add
add
and
push
fistpll
mov
pop
dec
scas
mov
flds
stos
ss
add
add
mov
lret
cmc
sbb
cmp
cmp
mov
mov
jg
repz
scas
repnz
popf
pop
std
mov
sub
mov
cwtl
pop
in
or
enter
add
pusha
add
fcmovnb
add
lret
jecxz
dec
dec
pusha
add
test
jg
add
xchg
sub
add
jo
cmc
mov
and
xorl
aaa
mov
and
pushf
jecxz
outsb
or
pusha
add
imul
mov
pusha
add
add
lods
pop
add
adc
lret
repnz
add
xor
cld
mov
sti
inc
arpl
add
dec
in
iret
mov
add
cli
and
rolb
mov
add
and
mov
add
movb
add
mov
pop
cmpsl
mov
add
dec
clc
mov
sti
cld
dec
fmuls
push
imul
pop
xchg
data16
add
sub
add
nop
add
into
insl
test
mov
insl
sti
mov
dec
add
add
mov
ds
aas
ja
xchg
add
add
aad
add
mov
add
inc
add
clc
popf
sub
into
dec
xchg
add
mov
test
inc
add
inc
dec
mov
jecxz
add
cld
int3
aaa
jnp
xchg
add
add
inc
mov
mov
sub
xchg
add
push
add
dec
mov
sbb
insb
adc
xchg
loope
push
int
add
lods
inc
add
xchg
jb
lds
add
add
add
insb
sbb
movsl
dec
lret
rorl
test
pop
jmp
mov
inc
add
add
add
add
dec
mov
push
add
lock
pop
and
loop
ja
add
jb
adc
add
pop
rcll
add
add
dec
add
pushf
clc
push
inc
add
test
sti
movsb
add
stc
imul
add
in
add
mov
add
add
add
pop
out
cmc
rorl
bound
mov
mov
cmc
rolb
add
stos
mov
test
mov
push
in
xor
add
dec
xor
mov
add
jle
dec
xchg
sub
jp
pop
add
mov
inc
xor
push
add
add
adc
add
xor
jae
mov
test
mov
lret
xchg
lret
pop
aad
rolb
add
add
ds
loope
pop
dec
and
xor
loop
movb
add
add
add
scas
repz
dec
pop
push
add
call
cs
cmc
mov
adc
cmp
ret
lret
out
jne
push
add
pop
test
add
add
jnp
xchg
add
cmpsl
addr16
les
ljmp
inc
add
les
xor
sbb
jne
adc
pop
dec
aaa
pop
add
push
clc
jl
add
xor
add
pop
push
out
xlat
outsb
add
test
mov
inc
mov
inc
cs
pop
sti
ss
add
cmp
sahf
mov
rolb
pop
and
xchg
add
jo
jp
mov
inc
adc
xchg
add
ret
ds
pusha
add
movb
push
mov
xor
or
mov
jle
mov
xor
jns
ljmp
inc
dec
jge
mov
data16
and
icebp
xor
cmc
in
sbb
add
and
mov
inc
aad
fistpll
add
int
cli
inc
add
fnstsw
cmp
cmpsl
rorl
mov
cld
rorl
ret
xchg
insl
or
sar
loopne
in
insb
mov
mov
sti
mov
std
test
jnp
add
add
sahf
scas
test
add
add
cs
and
mov
repz
add
add
inc
dec
sti
addr16
lret
xor
int
push
add
xchg
dec
dec
pop
sbb
cmp
add
mov
insb
ja
out
cli
lods
fimull
mov
lret
jl
aad
repz
or
imul
jo
movb
and
aaa
and
and
add
push
add
adc
push
push
add
xchg
rolb
pop
out
adc
outsb
scas
xchg
shll
add
testb
add
xchg
pop
pop
inc
lret
jle
add
add
les
sbb
xchg
add
add
pop
out
jl
dec
mov
add
or
push
sbb
adc
add
or
push
add
in
in
mov
add
decl
xlat
mov
add
add
add
outsl
scas
stos
mov
scas
in
push
gs
loope
cmp
xor
xchg
add
sbb
sbb
test
mov
adc
mov
mov
movb
add
mov
out
cmp
xor
add
mov
add
dec
inc
add
add
loope
cmp
push
xchg
outsl
ss
jle
add
add
add
push
imul
mov
dec
xor
add
xor
mov
push
add
add
add
sbb
add
mov
sbb
js
add
add
lret
std
xchg
mov
xchg
xchg
add
adc
and
add
ds
add
pop
push
add
or
pop
shll
loop
pop
add
mov
xor
add
mov
pushf
add
sbb
outsb
inc
add
insl
insb
gs
or
sbb
push
add
fwait
add
sbb
xchg
inc
add
xor
add
or
lahf
adc
add
add
cmp
test
pop
dec
adc
add
adc
movsl
mov
in
push
dec
sahf
out
add
xchg
inc
add
add
lret
mov
cwtl
aaa
cmp
add
adc
mov
les
cmovl
add
leave
xor
xor
and
out
cltd
fbstp
push
xor
add
sbb
mov
lcall
sbb
add
xchg
push
add
mov
nop
add
add
rolb
sti
push
add
fstp
jmp
imul
and
mov
mov
jae
push
add
inc
add
out
push
add
add
add
into
mov
repz
mov
add
push
add
add
add
das
enter
xor
and
mov
add
add
pop
add
add
xor
cmp
add
movsb
add
add
repnz
add
data16
push
xlat
mov
rolb
pop
mov
add
adc
add
add
test
cli
popf
adc
ret
add
inc
add
add
add
inc
add
flds
cmp
jno
xor
mov
mov
xchg
add
sub
mov
mov
mov
add
mov
add
add
lret
inc
push
outsb
pop
stos
mov
imul
stos
jne
add
out
incl
add
add
add
ds
jbe
xchg
adc
mov
cmp
decl
xchg
add
or
addb
insb
jnp
push
sbb
out
rolb
out
xchg
adc
adc
add
add
lock
mov
pop
cmp
add
aam
pop
push
add
stc
pop
and
jns
pop
andl
js
xlat
push
and
add
inc
movb
add
xor
add
scas
data16
add
add
mov
jns
and
pop
pop
fsubrl
repz
ficomps
inc
add
add
fcmovnbe
jmp
and
add
sbb
cltd
pop
repnz
push
add
dec
sub
out
rolb
mov
out
cmc
int3
xchg
sub
mov
add
test
add
add
add
pop
adc
adc
or
inc
add
movb
add
xchg
rolb
add
scas
scas
add
mov
addb
scas
sbb
dec
repnz
dec
mov
enter
push
add
dec
stos
add
add
add
add
out
mov
add
pop
iret
andl
cmc
adc
add
aad
xchg
add
cmp
sbb
mov
or
dec
and
jg
rcll
add
add
add
and
mov
mov
and
insb
adc
add
mov
sub
or
lods
pop
std
sbb
xchg
jno
test
add
mov
scas
xor
in
iret
cld
jl
mov
add
mov
test
push
mov
push
fisubl
xchg
cltd
sub
push
std
testb
add
add
add
mov
add
dec
pop
jmp
gs
cmc
popa
pop
pop
cli
cmp
pop
ja
lock
add
pop
lcall
xchg
jmp
loopne
imul
inc
add
pop
test
pop
lea
xchg
dec
outsl
in
lock
add
push
add
lock
cmp
stos
inc
ss
jnp
aam
jmp
cs
xchg
sbb
add
add
add
icebp
sub
xlat
sbb
test
inc
movb
sub
jne
inc
or
add
mov
repz
rolb
mov
add
mov
out
out
pop
lods
xchg
add
mov
aas
insb
or
mov
cld
fistps
imul
popf
out
cmp
add
addr16
push
add
add
add
rolb
lds
xor
mov
pop
push
clc
mov
add
scas
pop
mov
in
inc
sub
hlt
add
push
sbb
testb
in
inc
and
mov
data16
add
stc
jno
add
enter
mov
add
out
shr
add
add
popa
push
lgs
flds
mov
mov
pushf
lret
dec
mov
fisubrl
add
stos
jge
mov
in
and
popf
or
add
add
xlat
std
movsb
add
xchg
add
add
popl
or
movsb
add
add
add
inc
add
add
add
add
add
cmp
pop
movsb
add
addb
insl
mov
cmp
and
pushf
ds
icebp
sub
pop
dec
add
mov
add
mov
lds
int
popl
pop
lock
mov
mov
push
negl
enter
ffree
add
xor
mov
xchg
add
mov
leave
jo
ss
jne
sub
xchg
lahf
pop
imul
add
lds
dec
sti
je
pop
hlt
add
cmovs
out
aaa
cmp
mov
fsubp
add
lcall
jnp
sti
test
add
mov
addr16
insb
or
jne
add
adc
addb
cvtpi2ps
sub
sub
xchg
add
test
mov
add
lods
xchg
fstpl
inc
add
add
mov
xchg
add
mov
test
sub
add
push
cmp
and
fisttpl
add
sbb
div
add
add
fincstp
dec
jb
out
cmp
cld
pop
jmp
add
adc
rolb
jecxz
inc
xor
xor
add
psubsw
add
add
inc
sub
add
add
add
xchg
xchg
addb
rcl
lds
mov
add
mov
dec
xor
xchg
add
mov
lret
popf
jae
jo
or
testl
add
mov
inc
add
ret
lods
repz
mov
add
es
rolb
rolb
add
data16
scas
inc
add
or
outsl
adc
aam
fsubrs
add
or
arpl
mov
ljmp
push
or
mov
inc
add
cltd
in
fisttpl
push
add
adc
out
lea
cmp
push
int3
push
add
push
add
add
dec
push
pop
pop
dec
adc
dec
les
movsl
stos
testb
hlt
add
jp
test
push
pushf
repnz
and
add
mov
movsb
add
mov
add
add
add
push
fldl
pop
loop
test
mov
push
pop
adc
pop
jb
sub
add
add
xchg
jle
imul
and
pop
adc
sub
std
dec
jmp
or
cmp
addr16
push
add
int3
pop
in
adc
add
cmc
push
addr16
mov
mov
add
enter
loop
pop
inc
add
mov
mov
addb
xchg
pop
inc
add
mov
mov
add
add
stc
add
mov
pop
iret
jg
jge
xchg
ljmp
push
add
lock
ds
adc
repz
setp
add
jnp
shrl
add
add
add
lock
adc
add
push
add
xchg
mov
pop
mov
sbb
add
loope
xchg
add
icebp
push
add
and
pop
adcl
test
add
ds
add
cli
aam
push
add
add
gs
add
inc
mov
push
add
add
add
mov
add
cmp
mov
or
add
pusha
add
sbb
xchg
scas
in
inc
daa
inc
add
mov
xlat
or
cmc
inc
push
add
add
sti
repz
xchg
add
mov
add
shll
cmp
movq
cmp
dec
in
pop
negl
arpl
stos
mov
dec
lret
mov
dec
test
movb
sbbl
je
push
outsb
sub
add
mov
mov
repnz
xchg
add
add
pop
xchg
add
leave
and
mov
add
punpckhbw
dec
jle
in
add
adc
inc
add
cmp
out
mov
test
cmp
cmpsl
sti
jmp
lock
add
adc
stos
xor
mov
stos
iret
sub
adc
xchg
pop
aam
data16
stos
xchg
jo
aam
pusha
add
push
mov
cmpsb
add
push
add
mov
icebp
mov
int3
inc
mov
out
add
adc
insb
insl
test
mov
jbe
and
add
xchg
add
call
push
lret
add
push
add
fcompl
xor
mov
cmp
inc
outsl
lods
sti
dec
mov
mov
stc
or
add
add
popa
pop
dec
int3
dec
add
add
add
sbb
add
outsl
sbb
add
mov
lahf
aad
add
test
fnstcw
add
pop
icebp
stc
xor
adc
mov
push
inc
call
mov
mov
iret
or
add
mov
js
add
and
add
add
or
inc
cmpsb
add
inc
add
out
and
add
or
cmp
leave
push
add
push
fisttps
int
and
mov
mov
aad
add
lcall
rolb
jl
add
lods
cli
sbb
dec
lcall
xor
sti
adc
xchg
mov
or
popa
xor
sub
das
mov
add
push
add
add
scas
popa
xchg
add
nop
add
ja
or
repnz
imul
or
add
push
stos
add
add
add
mov
imul
inc
add
jp
mov
popf
leave
sub
or
and
das
xchg
xchg
bound
mov
sub
add
xor
push
cmpsb
add
or
clc
xor
gs
inc
add
mov
mov
sbb
adc
push
test
scas
mov
and
mov
rolb
push
add
add
xchg
add
mov
test
add
push
lock
loop
inc
lret
out
lds
jnp
sub
add
mov
cmp
es
icebp
mov
mov
jbe
rolb
cmpl
adc
cmp
inc
add
xchg
cmp
addb
add
add
add
out
loop
mov
loop
lcall
cli
mov
imul
xchg
add
pop
ficoml
pop
mov
out
add
arpl
mov
popf
inc
add
imul
cld
dec
xchg
or
push
add
fcoms
inc
add
sbb
repnz
add
add
repnz
enter
or
mov
push
fisttpl
add
imul
sahf
rolb
shll
sub
sbb
int
into
xlat
popf
pop
aaa
decb
xor
xchg
add
adc
out
add
leave
shrl
add
in
add
addb
mov
nop
add
push
cwtl
imul
addb
add
add
or
dec
imul
bts
movb
push
xchg
add
and
jb
add
add
and
add
mov
mov
lods
enter
pop
xchg
add
lods
into
popa
mov
lds
in
int
mov
and
out
mov
xor
add
mov
add
add
xor
add
add
jae
push
add
mov
call
push
xorl
add
mov
movsl
sub
add
jle
add
insb
xlat
xchg
nop
add
cmpsb
add
push
add
inc
or
pop
aad
add
roll
add
add
mov
and
add
fst
add
add
cltd
inc
add
je
loope
push
add
mov
or
bound
mov
imul
addb
cmp
cs
add
pop
add
stos
xor
mov
push
sbb
add
dec
aaa
push
add
int
add
dec
dec
lods
xchg
add
in
add
xchg
add
add
jns
sub
cmpsl
inc
add
mov
sub
push
add
aad
add
lcall
dec
inc
add
inc
push
xor
xchg
dec
or
ret
xchg
cli
gs
add
mov
cwtl
cmpsb
add
add
inc
add
xchg
sbb
imul
jg
add
lret
iret
cs
mov
test
add
and
dec
fistl
add
mov
mov
and
das
xorl
cwtl
je
or
jge
jnp
sub
xchg
inc
add
leave
add
mov
push
xchg
mov
scas
das
add
in
inc
add
add
ficomps
cli
testb
cmp
ret
outsb
add
or
clc
cli
pop
cwtl
lret
mov
add
jmp
add
dec
test
xchg
add
add
ret
ljmp
push
add
mov
push
add
aad
aaa
mov
mov
inc
add
xchg
fistps
icebp
mov
add
mov
mov
test
cld
ret
decl
loope
xchg
add
adc
pop
dec
adcl
push
sarl
scas
inc
add
rcrl
xor
push
out
add
mov
ret
test
fildll
push
add
add
add
cmp
mov
add
gs
inc
sbb
add
xor
add
mov
or
cmp
add
ljmp
popf
ret
sub
stc
push
cmc
mov
sub
jno
add
out
mov
or
lret
cmp
mov
fnstcw
add
add
jo
sub
fwait
add
add
add
add
add
mov
cwtl
mov
subl
rcr
add
push
xchg
add
cmp
cmovne
outsb
or
addb
jecxz
add
inc
or
in
add
out
out
xchg
js
fs
insb
jg
and
add
sub
push
sbb
or
sbb
mov
push
pop
dec
push
push
add
add
into
in
inc
add
jns
in
test
popa
lret
test
in
scas
xchg
add
push
and
mov
mov
add
pop
loope
cmp
or
shrl
mov
daa
or
xchg
fstl
add
popa
adc
cs
add
jmp
sbb
add
icebp
call
push
jmp
add
test
mov
dec
fwait
push
add
cmpsl
jle
rolb
add
add
add
shrl
repz
dec
pop
lahf
dec
lahf
add
fcoml
arpl
outsl
and
mov
push
add
add
and
js
add
add
mov
xor
pop
jge
add
push
cmpsl
aad
add
vpunpckhdq
add
popa
add
mov
add
and
mov
or
add
mov
jl
pop
mov
mov
dec
add
mov
in
je
gs
dec
call
push
cltd
bound
mov
out
leave
adc
stc
jno
inc
xchg
add
int3
stc
icebp
loop
mov
lods
out
push
add
add
mov
inc
add
out
adc
mov
add
add
mov
add
aas
pop
jle
cmp
xor
dec
repnz
dec
pop
andl
mov
mov
add
pop
scas
sbb
or
add
dec
pop
test
xchg
add
push
in
or
insl
addb
jns
lods
sti
push
add
repnz
or
add
mov
aam
mov
xchg
adc
or
jae
adc
stos
sub
aaa
out
pop
sub
add
add
jns
add
and
pushf
pop
xchg
add
ret
mov
icebp
mov
clc
jecxz
lahf
mov
add
sarl
imul
add
add
pop
pop
lcall
add
jmp
in
stc
movsb
add
sti
sti
jmp
add
rcrl
js
in
shll
jbe
popa
movb
add
xchg
push
add
cwtl
add
add
xchg
rolb
push
xchg
add
dec
push
jae
dec
xlat
jp
mov
cmp
mov
jae
dec
ret
pop
arpl
bound
mov
mov
adc
add
add
xlat
jo
dec
in
jecxz
add
add
add
std
xchg
add
fimuls
add
and
iret
pop
addb
jmp
xchg
addb
je
addb
aas
bound
mov
add
add
adc
mov
adc
bound
mov
ja
push
jmp
add
add
aaa
mov
add
lret
add
add
mov
lea
mov
mov
sbb
add
pushf
test
inc
fnstenv
add
xchg
clc
pushf
inc
add
js
adc
movsl
add
insl
push
cmc
sbb
push
add
mov
ret
xor
xor
add
leave
imul
adc
sub
add
popf
ss
add
aam
xchg
add
sti
jecxz
stc
pop
xor
adc
push
add
stos
jbe
out
push
mov
outsl
mov
insl
lret
data16
add
ljmp
push
add
add
pop
je
mov
add
xor
data16
add
lahf
jecxz
inc
loop
fidivl
push
stc
addb
in
jmp
rolb
fwait
cmp
mov
add
xchg
mov
dec
jbe
insb
sbb
add
add
leave
add
add
dec
and
add
arpl
add
xor
xor
aaa
mov
mov
jl
test
push
cltd
lods
pop
je
mov
mov
mov
push
add
add
movsb
add
add
add
inc
add
lret
mov
add
roll
and
mov
pop
dec
testb
mov
cs
cltd
imul
lahf
push
dec
adc
js
add
cwtl
mov
add
sbb
insl
les
xchg
add
push
add
add
cs
gs
repz
in
xor
cmpsl
je
mov
sbb
xlat
sbb
pushf
stos
adcl
add
add
pop
xchg
lds
add
iret
xchg
add
mov
add
rolb
push
add
add
add
add
out
adc
or
add
xchg
mov
sub
xchg
or
outsb
ret
aaa
mov
pop
pop
loopne
stos
xlat
inc
add
add
xor
add
xchg
add
stos
add
mov
xor
xor
pushf
push
add
inc
xchg
add
cmp
add
mov
add
add
in
cmovs
add
add
push
add
in
fmulp
add
add
nop
add
add
mov
add
cmp
add
mov
popf
inc
sbb
pop
mov
cmpsl
push
push
cmpsl
testb
sbb
add
mov
adc
add
xchg
fdivp
add
mull
mov
add
add
inc
rolb
je
jge
add
imul
pusha
add
add
testl
xchg
and
enter
add
bound
mov
mov
dec
add
add
mov
add
mov
add
mov
add
ret
push
add
cmpsb
add
dec
add
mov
inc
adc
mov
mov
lods
dec
pop
iret
cmp
xchg
rolb
daa
pop
sbb
add
add
lret
int
add
xchg
rolb
lahf
sub
add
sbb
dec
lds
inc
add
test
cld
lea
dec
pop
dec
jecxz
rolb
test
movsl
mov
add
add
add
aad
bound
mov
add
mov
cmp
add
fwait
lahf
pop
in
dec
lahf
das
jns
add
push
push
inc
add
push
add
jle
add
jbe
mov
adc
icebp
jg
fsubr
adc
xchg
add
add
cmp
xor
xor
ret
add
pop
push
test
or
mov
clc
arpl
add
das
mov
popa
pop
cmpsl
inc
add
test
or
loope
add
mov
rolb
cwtl
adc
xchg
add
jecxz
mov
fiaddl
lret
lahf
sub
std
mov
add
and
les
dec
mov
add
inc
or
dec
sbb
xchg
add
sbb
add
add
mov
add
or
add
jnp
mov
add
lret
iret
mov
inc
add
adc
mov
add
add
enter
test
add
mov
arpl
sbb
movsb
add
add
std
inc
lods
fisttps
shufps
add
add
mov
lock
add
jb
sbbl
add
jecxz
clc
add
add
mov
add
add
lods
and
jno
xchg
mov
jb
sub
ds
mov
xchg
add
xor
add
data16
in
xor
add
nop
add
sbb
pop
push
add
add
sub
in
cmp
fdivr
mov
filds
scas
pop
inc
add
out
xchg
push
add
in
mov
mov
xorl
rolb
out
add
or
adc
mov
add
xchg
add
out
dec
cwtl
dec
shll
mov
add
add
inc
add
or
test
in
cwtl
ror
jo
scas
push
mov
std
call
test
add
mov
inc
lahf
addb
sbb
fildll
or
add
in
jno
inc
add
add
add
jbe
sub
add
add
add
add
xor
add
xchg
adc
enter
aaa
insb
je
push
test
cmp
adc
pop
inc
add
xor
es
cmp
sbb
rol
inc
mov
add
add
and
add
push
add
add
inc
add
push
add
mov
adc
fildl
dec
mov
or
and
inc
add
scas
rolb
jecxz
and
add
inc
addr16
test
cmp
add
sub
pop
iret
out
jbe
add
sbb
cltd
and
push
cwtl
in
xchg
add
xchg
addb
add
testb
jne
test
sbb
add
pop
fs
lds
add
sbb
data16
dec
mov
out
insl
ret
add
push
ficoms
add
rolb
mov
rorl
ss
jnp
inc
mov
jno
mov
add
add
adc
sti
or
lahf
popf
in
inc
lcall
mov
mov
sub
imul
test
mov
cmp
imul
xor
mov
imul
add
sub
push
xchg
out
out
dec
pop
fsubl
add
testb
add
add
data16
stos
std
push
mov
add
mov
lahf
sbb
mov
mov
pop
push
jne
add
add
aam
xlat
lcall
inc
add
imul
ret
jnp
mov
movb
add
add
mov
lcall
sub
sub
cs
fmull
cmp
adc
insl
fwait
dec
inc
add
flds
add
test
mov
stc
loop
sbb
add
pop
sub
add
int3
test
addb
push
mov
adc
shrl
shl
call
bound
mov
cmc
push
add
cs
add
mov
mov
cltd
aas
ja
add
scas
movb
add
cmp
add
sub
mov
rolb
jne
cli
add
add
cmpsl
jmp
add
xlat
or
mov
push
pop
jl
loope
push
push
test
ds
dec
fs
add
jl
add
pop
mov
mov
hlt
add
add
loopne
and
mov
mov
scas
insl
mov
add
mov
arpl
dec
pop
call
push
add
add
add
add
cltd
aam
in
rolb
xor
loope
pop
sti
data16
das
mov
test
push
movb
jmp
cmpsl
and
mov
push
add
into
or
add
mov
sbb
add
mov
push
add
add
aam
notl
xchg
add
aaa
leave
xchg
add
mov
sbb
add
test
xchg
rolb
ret
add
fildl
mov
in
scas
pop
pushf
pop
xlat
jge
push
inc
add
add
push
rolb
mov
mov
lret
mov
lret
inc
add
addb
add
add
outsl
push
adc
aam
shll
aaa
and
xor
add
mov
adc
pop
mov
cltd
sahf
dec
test
add
inc
add
add
add
dec
and
xor
popf
push
pop
lahf
in
lds
push
icebp
sbb
push
add
movsb
add
int
add
decl
ja
add
push
fistl
data16
sbb
mov
int
mov
notl
add
inc
sub
fnstsw
lahf
data16
xchg
add
jg
sub
add
add
add
mov
add
add
cmp
enter
add
bound
mov
jle,pt
and
mov
leave
mov
lret
cwtl
std
mov
add
add
aad
add
mov
cmp
cwtl
mov
add
or
orl
cli
mov
mov
jge
sub
mov
sti
mov
add
aam
add
add
add
std
xchg
xor
pop
sti
push
add
add
mov
movsl
and
xor
dec
scas
dec
xor
sbb
jno
es
xor
fmuls
add
dec
dec
mov
aam
je
pusha
add
aad
xor
test
add
dec
xchg
add
pusha
add
mov
cmp
jae
sub
std
xchg
jl
add
add
add
and
mov
pop
lahf
add
inc
pop
mov
sbb
adc
scas
pop
add
lods
loop
inc
add
xor
sub
out
add
add
popf
sbb
add
cld
cmp
cld
stos
xchg
jo
int
add
add
add
or
cmp
add
xchg
sub
mov
add
mov
add
jp
add
cmp
movsb
add
stos
pop
data16
ficoms
dec
stos
movb
mov
add
jns
psubusw
pop
cmpsb
add
pop
jg
inc
add
jo
stc
xchg
add
inc
add
mov
add
or
ror
fcomi
add
add
testb
adc
inc
daa
rolb
sti
out
jbe
dec
sub
xchg
add
aam
insl
enter
add
xchg
mov
rolb
jmp
insb
xor
push
push
add
adc
in
aad
xchg
lods
push
add
js
lcall
add
inc
add
repnz
mov
jnp
mov
adc
scas
loopne
ficomps
add
or
aam
dec
xor
imul
movsl
jg
clc
imul
mov
inc
sub
scas
push
add
sahf
push
jbe
lock
pop
sbb
mov
pop
sub
push
push
add
inc
xor
cli
cmp
add
add
rolb
cmp
rcrl
sbb
jns
aas
in
sub
pop
mov
mov
xor
adc
movb
add
add
add
add
addb
outsb
stos
ret
xchg
and
mov
cwtl
rolb
jecxz
add
push
movsb
add
add
popa
mov
inc
add
sbb
push
mov
jge
dec
jnp
sub
push
call
mov
add
test
add
push
pop
push
add
mov
clc
rcr
push
add
repz
sbb
cmp
addr16
add
jno
pop
movb
pushf
push
addr16
in
jno
push
mov
lret
adc
movsb
add
loopne
cmp
pop
enter
pop
je
addb
outsl
push
add
xchg
mov
and
mov
add
add
imul
add
sbb
add
add
shll
add
mov
or
mov
aam
adc
in
mov
mov
iret
ffree
add
cmp
add
mov
inc
add
xor
lock
rol
or
push
add
xchg
stc
push
add
in
popa
stos
push
add
mov
xchg
rolb
cli
nop
add
mov
add
and
and
sub
add
mov
cli
leave
fiaddl
jmp
xor
sbbl
mov
add
mov
add
mov
add
mov
add
mov
sbb
repnz
divl
dec
inc
lret
movsl
mov
xchg
les
mov
roll
jmp
mov
lock
repz
cwtl
pop
push
add
add
add
jnp
add
addb
add
mov
add
mov
stos
jne
add
mov
adcl
insb
and
or
add
cmpsl
cmpsb
add
inc
add
mov
add
lcall
pusha
add
mov
add
lods
inc
xchg
add
add
into
pushf
xor
add
add
add
mov
sti
fucompp
inc
or
inc
add
sub
sub
add
push
push
add
jl
add
outsb
pop
ss
ret
push
add
or
lret
cmp
push
add
ret
mov
inc
add
hlt
add
add
rolb
mov
add
xor
and
jbe
mov
jne
rolb
scas
aas
add
add
sbb
in
cmp
std
mov
sti
pusha
add
je
popa
jne
add
xlat
outsb
nop
add
jl
fwait
dec
mov
addb
add
scas
pop
dec
leave
push
addr16
nop
add
sahf
xchg
rolb
fmul
enter
inc
add
lret
pop
add
mov
in
xchg
rolb
cld
inc
add
in
mov
sub
add
repz
fwait
cmp
outsl
push
or
repz
pushf
and
mov
sbb
mov
sbb
mov
push
add
add
outsl
mov
mov
and
mov
and
add
ljmp
jge
add
xlat
pop
in
add
mov
fstl
add
mov
push
lret
imul
add
add
adc
add
add
mov
orl
add
add
add
or
daa
sti
int3
push
add
add
je
inc
xchg
popa
rcl
add
test
add
pop
inc
aad
cmp
test
addr16
add
int
add
adc
add
mov
leave
mov
idivl
fdivrs
stos
scas
pushl
or
sbb
outsb
scas
sub
jb
stos
cmp
js
mov
add
jecxz
sbb
or
notl
popf
lods
movb
rolb
mov
mov
add
jnp
cmp
push
repz
fcomip
add
int3
mov
cmp
pop
inc
add
fadd
add
mov
adc
add
add
mov
data16
je
mov
push
add
add
sbb
loope
add
add
rcrl
add
add
sti
stc
mov
int
outsb
fwait
inc
add
sahf
sub
jae
add
test
xor
movsb
add
mov
add
add
add
sub
cmpsb
add
mov
pop
test
and
sbb
in
int
push
std
movb
sbb
mov
cmp
pop
aam
addb
add
sub
push
xchg
add
push
add
stos
pop
push
add
add
jno
rolb
lea
push
jle
rolb
mov
pushl
jns
add
dec
or
daa
and
mov
pop
mov
sbb
enter
mov
add
and
mov
icebp
movsl
aas
pop
pop
or
add
gs
inc
dec
mov
add
add
test
data16
lcall
push
add
pop
or
mov
testb
jg
add
outsb
jl
add
out
cwtl
jns
mull
jo
and
add
mov
je
dec
inc
xchg
add
pop
pushf
push
add
xchg
add
xor
add
mov
add
not
aaa
aam
adc
fimuls
inc
add
loope
add
add
insb
add
jb
lea
cmc
outsl
popa
lea
add
das
les
addb
add
jg
add
push
xchg
and
add
cmp
sub
into
xor
repnz
out
push
add
add
dec
add
add
add
push
inc
add
arpl
insb
jae
movb
push
lock
popf
sbb
add
shr
fidivrl
ret
das
push
out
sub
loop
inc
add
add
lret
hlt
add
cmp
mov
pop
mov
adc
xlat
pop
insb
push
add
insl
popl
mov
and
add
dec
pop
daa
jns
jnp
mov
mov
jne
rolb
mov
adc
sbb
stos
cmp
andl
add
and
pop
xchg
loop
sub
sbb
xchg
fcmovb
add
lods
pusha
add
jp
adc
out
add
in
aam
sarl
testb
add
add
cwtl
push
add
jge
add
int
mov
lea
icebp
adc
fidivrl
ret
shl
add
rolb
sub
fwait
bound
mov
add
sub
add
pop
sub
add
test
int
adc
movb
xor
xor
int
add
sahf
push
add
clc
sub
cmpsb
add
fistl
mov
or
cmp
add
jecxz
dec
rolb
add
pop
and
add
add
push
add
loop
pop
stos
jns
mov
rolb
adc
add
jb
cmp
add
pop
les
pushf
sti
data16
or
add
int
add
mov
test
push
out
lcall
jle
dec
and
jp
xchg
outsb
insb
addb
add
and
dec
mov
repnz
add
cli
insb
lods
lcall
scas
push
add
sahf
lret
test
popa
mov
mov
add
test
cmp
aam
outsb
sbb
rolb
push
add
lds
inc
add
jge
jnp
mov
popa
out
dec
xor
mov
fxtract
add
addr16
add
fsubrs
add
sarl
in
jno
jo
jae
mov
dec
fidivrs
mov
add
add
mov
mov
enter
jns
mov
dec
lea
mov
sbb
pop
andl
addr16
mov
mov
lea
bound
mov
and
pushf
or
sbb
arpl
movb
jmp
sbb
fcoml
add
in
inc
add
add
pop
dec
popa
or
pop
scas
sub
dec
pop
dec
mov
ret
cmp
testb
add
push
add
add
into
jno
mov
pop
out
push
jl
add
add
gs
add
rolb
xor
add
add
add
add
pop
loope
cmpsl
mov
add
xor
pop
bound
mov
aad
mov
aad
and
mov
fst
lods
pop
or
add
add
rolb
adc
loopne
xchg
sbb
out
push
add
add
adc
out
adc
int3
in
in
orl
pop
ljmp
add
add
xor
mov
add
fnstsw
adc
cmp
xor
sti
lahf
adc
dec
mov
jne
lcall
sbb
add
jmp
mov
dec
jne
push
add
add
scas
jl
outsb
test
imul
add
mov
movsl
hlt
add
add
jge
rcrl
sub
dec
push
mov
add
jmp
add
mov
sbb
or
add
xchg
jg
add
mov
and
add
enter
adc
add
add
xlat
push
rcll
push
add
pop
pop
or
iret
pushf
mov
fwait
daa
mov
leave
addb
sub
mov
loop
push
add
test
fwait
sub
sbb
lods
jbe
dec
inc
add
mov
data16
or
mov
mov
das
sahf
mov
mov
lock
mov
push
jg
add
add
sub
add
mov
in
inc
pushf
add
inc
dec
push
pop
clc
sbb
cmp
add
outsb
xchg
roll
mov
sub
popa
scas
repnz
mov
stos
sbb
mov
mov
jae
inc
add
ficoml
add
add
mov
leave
mov
cld
push
divl
mov
pop
dec
repz
push
add
sbb
add
jg
mov
add
add
adc
push
add
sub
inc
add
add
jecxz
sbb
xchg
cmpsl
sbb
push
add
push
add
mov
sbb
add
add
mov
add
add
add
add
addb
add
add
inc
add
add
mov
xor
and
subl
add
mov
push
rolb
int
std
popa
add
add
movsl
xchg
pop
mov
insb
push
adc
xchg
jecxz
hlt
add
add
int
and
mov
add
dec
dec
inc
add
add
cmc
rolb
addr16
jno
add
add
add
sahf
out
out
jb
fistl
jle
cmpsb
add
add
or
add
mov
loope
add
add
add
add
xchg
sbb
leave
dec
and
add
push
cmp
xchg
imul
adc
mov
je
cmovb
mov
push
pop
std
mov
adc
shll
addb
add
add
pop
jge
add
test
lahf
ret
add
imul
outsl
imul
mov
add
add
xorl
cld
popf
inc
add
dec
push
add
mov
fnstsw
mov
jns
xor
and
xchg
add
sub
add
mov
data16
aam
dec
sbb
addb
mov
cvtdq2ps
sub
or
xor
out
scas
mov
aad
movb
add
dec
addb
adc
int
add
jns
pop
int
add
add
cmp
mov
add
add
in
jecxz
add
pop
pop
dec
fldcw
mov
add
scas
out
mov
add
mov
jns
lahf
sbb
add
xchg
add
fcoms
scas
sbb
mov
xchg
add
pop
arpl
aad
add
add
xchg
add
and
popf
mov
repz
mov
mov
pop
inc
cli
loopne
movntq
mov
out
push
les
data16
inc
adc
sub
xor
insb
ret
jnp
or
loop
stc
push
sub
add
pop
call
imul
cs
in
addb
push
push
adc
jo
or
add
add
add
ficomps
push
lea
mov
add
push
add
push
outsl
jo
adc
and
out
cli
xor
and
mov
movl
jae
loopne
xchg
push
jmp
add
sbb
popa
addr16
adc
daa
xchg
jne
add
cwtl
add
dec
pop
inc
cmpsb
add
into
dec
bound
mov
cmp
dec
inc
cmp
and
mov
test
mov
sub
add
inc
test
sti
and
mov
fdivl
add
fdiv
cmp
pop
stc
adc
xchg
add
pusha
add
in
add
mov
jmp
add
mov
movsb
add
push
adc
maxps
mov
or
popf
lods
and
ljmp
addr16
jno
add
sti
jo
add
out
ljmp
push
mov
cmp
mov
sbb
dec
ljmp
mov
add
xor
push
add
mov
mov
repnz
jo
sbb
jecxz
cmp
lret
sti
repz
add
and
add
add
dec
mov
xchg
add
or
lahf
rolb
xchg
adc
lods
aaa
push
add
mov
jno
mov
jg
insb
cwtl
subl
arpl
and
sbb
add
add
arpl
add
rolb
jae
add
add
add
lahf
fwait
pop
ljmp
cmp
pop
or
shl
add
add
inc
add
push
add
add
add
mov
ljmp
or
add
add
fstl
imul
push
or
mov
or
add
dec
in
dec
pop
sbb
mov
xor
dec
stos
insl
mov
add
mov
aam
add
mov
imul
add
lret
add
aas
ss
pushf
or
and
outsl
pop
negl
add
pop
popa
add
push
add
pop
ljmp
dec
fmul
and
outsb
mov
mov
add
add
add
add
ds
sub
cmp
xchg
add
mov
add
add
mov
test
jns
sbb
add
cmp
mov
mov
push
daa
jl
jo
jl
add
mov
add
cmpsl
sahf
adc
mov
push
nop
add
arpl
add
jl
lahf
ret
aam
stos
push
xor
add
push
cli
dec
nop
add
daa
adc
mov
mov
add
jmp
enter
add
xchg
add
mov
jmp
add
int3
sub
mov
mov
repnz
mov
aam
rolb
xchg
add
mov
daa
xor
mov
add
in
add
adc
int
add
dec
pop
cmp
mov
insl
xlat
arpl
int
add
rolb
lret
pop
mov
sub
dec
xchg
add
xlat
or
stc
loopne
stos
adc
add
outsb
movb
and
mov
add
xor
add
or
mov
sti
fisttpl
loope
sahf
faddl
xchg
xchg
rolb
xchg
loope
add
sub
add
mov
add
jmp
arpl
outsb
fstps
sbb
add
add
fnstenv
and
mov
sub
add
mov
sub
enter
fistpl
testb
add
popf
xor
or
rolb
dec
sub
repz
add
sub
add
adcl
popa
or
das
xor
push
add
add
push
outsl
arpl
imul
scas
in
inc
test
sub
add
sbb
add
adc
sbb
xchg
sbb
data16
push
add
add
cmp
add
add
pushf
add
mov
push
addb
add
aaa
mov
inc
iret
xchg
add
hlt
add
subl
sub
inc
add
pop
insb
int
add
cmpsb
add
imul
cmc
mov
divl
arpl
mov
call
xchg
insb
fistl
mov
add
add
mov
movb
leave
cmp
aas
data16
jle
add
add
push
inc
add
sti
mov
mov
mov
mov
mov
add
fcmovu
or
add
roll
bound
mov
inc
add
add
sbb
add
add
mov
add
push
cmp
outsb
inc
insl
rolb
xchg
inc
add
aad
fs
xor
fdivrl
adc
xchg
sti
xchg
cmp
stc
arpl
pop
add
gs
add
add
rolb
rcll
pop
adc
aam
xor
into
mov
aas
inc
add
mov
rcpps
fildl
jmp
test
add
xor
xchg
add
mov
sub
das
enter
mov
sub
sub
add
mov
add
add
test
sub
icebp
aas
xchg
into
shr
popf
mov
sub
add
outsb
dec
xchg
add
lret
nop
add
add
pop
push
or
inc
icebp
repz
stos
jp
add
and
mov
jno
add
mov
push
addb
in
lret
mov
push
add
mov
mov
scas
stos
pop
stos
or
push
add
pop
cmp
adcl
stc
sbb
add
inc
add
add
add
lret
cmc
das
push
ret
in
pop
popa
pop
addr16
fisttpl
add
add
lds
pop
jp
inc
add
out
xchg
add
dec
lods
push
add
ljmp
js
movsb
add
pop
lods
mov
movsl
push
add
pushf
imul
add
add
mov
add
and
mov
add
add
add
add
fmuls
clc
loope
push
add
ret
mov
add
mov
add
int
iret
enter
add
mov
in
aam
test
dec
pop
outsl
rolb
push
add
cmp
adc
mov
lcall
and
mov
gs
push
add
test
mov
adc
and
clc
or
push
mov
fwait
xor
add
add
mov
int3
and
add
add
add
insl
in
lcall
add
add
pushf
int3
shr
dec
add
push
add
ja
gs
stos
pop
xchg
jnp
in
add
mov
add
add
or
or
add
mov
add
dec
add
ret
add
add
mov
add
pop
push
add
movl
pop
leave
sbb
cld
lea
cli
addr16
xchg
xchg
jbe
sarl
subl
add
mov
ja
push
add
pop
stos
jae
add
and
sbb
add
cmp
int
out
test
jno
adc
adc
shll
mov
loope
aas
les
cld
xchg
add
adc
sub
hlt
add
or
daa
inc
push
dec
inc
add
movb
mov
insl
out
inc
aaa
mov
add
ret
jecxz
gs
add
xor
ds
add
stos
pop
lds
add
jl
jbe
or
out
add
mov
xor
cmpsb
add
sub
add
push
add
jle
add
add
add
push
testb
mov
add
cmp
cmpsl
addb
add
mov
jno
xor
mov
xor
mov
add
add
mov
cmp
add
xchg
pop
mov
pop
movsb
add
pop
in
mov
lahf
je
cltd
jb
ja
or
add
lea
jne
add
add
jnp
add
dec
enter
xchg
add
les
jg
dec
faddl
int
leave
dec
pop
shll
push
out
jne
add
aam
and
cmc
shll
dec
out
popa
cli
mov
rolb
add
mov
add
adc
clc
push
pusha
add
lret
cmp
in
sbb
adc
dec
mov
out
mov
cltd
mov
clc
inc
xchg
add
out
and
mov
jb
adc
in
dec
xlat
lret
add
add
pop
push
add
add
addb
push
add
add
enter
inc
and
add
or
add
mov
add
lahf
leave
test
mov
or
lea
mov
add
add
es
insl
ret
and
std
pop
call
add
lahf
xchg
mov
jmp
add
mov
push
add
sbb
jg
shr
fdivrl
icebp
out
loop
and
add
arpl
mov
add
mov
out
jl
add
lods
jo
fisubl
scas
adc
loope
repnz
add
dec
rolb
enter
pop
iret
dec
mov
in
add
xchg
add
and
mov
bound
mov
dec
adc
aam
lods
rolb
add
in
in
mov
push
loop
divl
sbb
jnp
add
add
mov
cltd
mov
movsb
add
or
fdivl
rorl
js
testb
lods
in
inc
call
add
jb
pop
dec
clc
dec
test
test
iret
test
add
or
add
xchg
jnp
xchg
test
mov
les
cld
addr16
pop
xor
mov
cmpsl
test
add
out
sbb
add
add
fstpt
add
mov
rolb
movb
mov
adc
inc
add
nop
add
add
ror
jno
jae
aam
sbb
sbb
xchg
cs
adc
add
jnp
add
pop
pop
sbb
fdivrl
dec
cmp
dec
cmpsb
add
add
pop
ja
add
jo
movl
add
fidivrs
add
or
test
daa
push
jns
aad
add
push
data16
or
lods
push
or
jg
shll
add
mov
xchg
mov
add
mov
push
out
inc
add
mov
add
aad
aad
xchg
add
in
sbb
testb
push
and
adc
call
jmp
push
add
inc
jecxz
insl
add
mov
mov
rolb
std
sbb
add
and
inc
add
into
sahf
sub
xchg
ret
out
push
mov
in
stc
and
icebp
mov
pop
pop
add
mov
movsb
add
pop
xlat
pop
push
xchg
add
push
add
push
add
add
push
push
add
and
add
xchg
jle
pushf
mov
imul
cs
rolb
cli
lcall
cmp
mov
add
dec
mov
add
add
das
roll
add
jp
add
add
out
push
les
loop
mov
in
ret
cld
in
mov
mov
xorl
mov
or
pop
cmp
cwtl
ja
dec
cld
push
push
add
sar
sub
pop
mov
jl
mov
mov
pop
lock
add
add
test
add
add
add
add
aas
loopne
fisubl
mov
mov
das
add
add
in
sub
add
mov
cmpsb
add
mov
add
into
data16
mov
add
jae
add
pop
into
call
cmp
jns
icebp
jno
add
pop
pop
jl
add
out
xchg
add
mov
mov
xor
add
jecxz
mov
push
mov
add
addl
into
cmp
add
orl
inc
add
or
add
sbb
aam
inc
add
add
rolb
push
add
add
add
xchg
add
add
lock
add
jge
push
add
push
add
pop
cmp
add
in
jo
cmp
add
add
pop
xchg
add
ret
cmp
mov
dec
ljmp
cld
iret
outsb
sbb
add
mov
add
and
mov
add
xor
add
ds
add
sti
scas
dec
sahf
pusha
add
cmp
movb
sub
pushf
and
push
add
add
mov
add
dec
sub
dec
inc
lcall
or
in
add
push
jle
push
add
add
enter
sbb
add
cs
xchg
rolb
ret
xchg
ret
mov
sbb
repz
pop
adc
mov
add
add
mov
add
add
jp
pop
cmpsb
add
mov
jmp
aaa
pushf
iret
xor
ds
add
mov
mov
into
dec
pop
rsqrtps
mov
add
add
mov
into
pusha
add
add
int
pushf
les
sub
popa
pop
jno
inc
add
add
add
push
lods
add
mov
aad
add
in
inc
add
lcall
loopne
xor
bound
mov
mov
inc
add
repnz
mov
dec
addb
add
add
lods
rorl
data16
mov
add
les
mov
mov
cmp
nop
add
add
in
cltd
out
rcll
add
xchg
add
nop
add
add
inc
add
out
pop
inc
add
data16
sub
mov
gs
add
mov
fcmovnbe
movb
add
add
add
push
rolb
arpl
mov
mov
dec
pop
mov
add
cltd
xchg
add
add
dec
movsb
add
mov
icebp
pop
jae
mov
add
dec
stos
mov
cmp
add
push
add
add
shrd
add
roll
mov
imul
sbb
jno
or
add
je
in
les
out
push
add
mov
mov
xor
cmp
mov
shll
inc
arpl
mov
and
mov
je
nop
add
mov
lods
imul
lret
test
lods
shrl
or
push
add
in
adc
mov
mov
add
add
jmp
mov
lods
jl
sbb
add
pop
cmpsl
mov
in
jecxz
orl
adc
fisubl
add
cmpsl
mov
lods
cmp
mov
add
add
mov
add
add
hlt
add
or
fisubs
xorl
add
cmp
push
in
movsl
mov
add
sbb
jo
out
jno
dec
into
pop
and
testl
or
add
mov
add
femms
jbe
and
pusha
add
jnp
fldcw
jecxz
add
lds
add
shll
add
sbb
mov
add
cmp
add
add
push
jle
add
add
add
add
mov
dec
sbb
ret
xchg
add
add
sub
add
gs
jne
lds
mov
add
add
add
loop
stos
push
push
mov
mov
cmpsb
add
sub
add
adc
xor
mov
add
dec
lahf
int
add
add
jno
ret
int3
inc
add
add
push
adc
lahf
test
pop
int3
hlt
add
das
push
add
rolb
push
add
sub
out
sbb
add
add
add
arpl
das
aas
dec
jnp
orl
insl
ljmp
testb
test
push
mov
cmp
add
fwait
pop
xchg
rolb
dec
addb
pop
add
mov
mov
shll
adc
xor
jmp
add
pop
mov
xchg
mov
dec
xor
in
mov
das
xchg
enter
xor
and
inc
add
sub
jecxz
out
dec
inc
add
add
or
xchg
add
ret
fnstcw
inc
add
mov
dec
inc
add
xorl
fstpl
xchg
stc
add
mov
mov
sbb
add
mov
push
testb
xchg
cmpsb
add
cmp
mov
mov
push
add
int3
push
cmp
pop
js
add
add
add
add
jl
xor
add
xchg
add
add
dec
xor
sub
stc
mov
sahf
mov
mov
and
mov
jae
add
xchg
cmp
mov
push
add
jbe
fbstp
test
add
or
xor
cmp
cmc
pushf
inc
mov
sbb
jmp
bound
mov
mov
or
js
add
add
outsb
mov
call
hlt
add
add
scas
repnz
lea
mov
add
out
sub
add
fidivl
add
dec
jne
ds
aam
mov
hlt
add
push
jnp
add
popf
je
in
mov
movsl
lret
testb
add
lods
fbld
add
aas
jp
popf
push
into
xor
mov
sub
out
aas
je
addb
add
int
push
add
mov
mov
add
add
add
add
push
add
sub
pop
xor
scas
cmc
gs
imul
les
jnp
dec
addr16
mov
xlat
pop
aad
cmp
xor
push
add
lds
mov
outsb
jl
xchg
mov
xchg
pop
loope
jl
pop
mov
add
sbb
inc
add
xchg
add
mov
lret
lahf
jae
sub
add
mov
daa
test
jle
add
addb
in
js
add
call
pop
cwtl
lock
ror
adc
idiv
lret
add
pop
xchg
aam
push
rolb
inc
add
ja
int
push
addb
mov
bound
mov
add
mov
call
add
add
add
xor
cmp
jp
add
xchg
aad
add
fisubrs
jl
sub
add
repz
add
fnstcw
add
cmp
mov
push
add
jmp
imul
xchg
dec
and
mov
repz
dec
push
add
add
add
add
add
lcall
add
sub
repz
negl
fmull
add
cwtl
iret
mov
dec
inc
add
enter
out
add
imul
push
add
arpl
aad
mov
add
add
adc
imul
add
clc
jle
pop
inc
xchg
add
lahf
aaa
cmpsl
or
loope
jae
jge
in
cwtl
lea
mov
pop
aad
jmp
push
add
sub
add
add
sti
shr
nop
add
add
scas
out
push
or
push
add
mov
out
cs
add
imul
add
inc
add
loope
push
add
add
add
lahf
addb
cmc
mov
int
add
xor
out
xchg
out
mov
loope
cmpsb
add
jmp
cmp
mov
cmc
int
add
add
lret
mov
je
jle
hlt
add
insb
rolb
cwtl
sbb
ja
and
mov
into
pop
fldt
adc
push
add
in
push
mov
add
mov
add
add
add
cmp
add
add
mov
pop
sti
pop
negl
in
mov
cmp
and
cwtl
pop
pushf
aas
and
mov
lcall
aas
jo
enter
das
insl
push
add
add
add
add
add
add
add
add
add
and
inc
add
xchg
add
add
cmpsb
add
dec
fwait
mov
addr16
adc
sub
and
mov
add
add
rolb
jmp
add
add
ds
add
repz
inc
xor
inc
xchg
add
add
sbb
pop
sbb
add
mov
add
jl
jecxz
sbb
sbb
or
mov
push
add
dec
xor
push
pusha
add
test
jns
sub
mov
repz
or
sbb
test
fcmovu
into
inc
shll
jle
add
add
in
adc
mov
lock
fsub
add
add
into
mov
add
jl
sbb
adc
mov
dec
and
mov
add
push
sbb
add
add
add
add
push
pop
sbb
daa
adc
movsb
add
dec
mov
add
add
loope
sbb
inc
add
mov
add
stos
jae
movsb
add
inc
sbb
jbe
add
mov
cmp
addb
add
pusha
add
dec
outsb
adc
add
mov
jno,pt
loope
add
jbe
imul
or
sbb
imul
js
add
mov
call
dec
push
pop
ds
fsubl
push
arpl
add
mov
add
add
nop
add
mov
mov
rolb
mov
add
xchg
add
mov
shll
sbb
xor
xor
leave
outsl
cltd
addb
mov
movsb
add
sbb
pop
call
or
add
add
add
adc
add
loope
movsl
les
push
add
fidivrl
cwtl
inc
in
push
adc
xchg
add
ds
add
mov
add
stc
mov
cs
mov
xchg
sub
pushf
lret
pop
loopne
scas
out
cld
out
add
cli
or
add
push
push
in
lock
fldenv
add
add
add
add
xor
sub
add
mov
add
add
mov
add
loop
jbe
or
loop
xor
inc
rolb
jmp
and
je
or
insl
xor
outsl
add
mov
mov
and
and
mov
getsec
sub
fstpt
add
add
mov
or
push
pop
dec
dec
std
fdivp
aaa
xor
and
add
xlat
xchg
mov
add
sahf
mov
inc
add
lret
mov
add
dec
call
add
enter
sbb
push
mov
in
ljmp
lods
test
add
pop
cmp
arpl
cld
ja
pop
xor
sbb
pop
sbb
jno
mov
cwtl
or
jmp
jo
pushf
mov
add
out
jge
push
add
hlt
add
xor
xchg
add
sahf
jne
or
or
sub
add
add
or
sub
add
jmp
jge
sbb
into
bound
mov
jg
mov
std
mov
mov
sti
jbe
jmp
sbb
mov
fcmove
data16
mov
lods
xchg
popf
xor
mov
sbb
popf
mov
sti
les
insb
ficompl
in
add
adc
cmp
gs
fisubs
mov
sbb
add
add
arpl
movsb
add
add
add
mov
xlat
fistl
pop
adc
pushf
mov
mov
pop
cmpsl
add
mov
push
add
stos
inc
add
add
add
jle
sbb
pop
mov
loopne
mov
add
cmp
or
clc
stos
daa
mov
les
mov
add
jp
add
mov
jmp
call
add
repz
lock
testb
xchg
add
mov
add
das
cmp
jmp
mov
jl
leave
mov
push
mov
in
inc
cmc
aas
lret
add
push
add
mov
cmpsb
add
dec
and
mov
mov
inc
sub
pop
clc
sbb
add
add
add
mov
add
add
add
add
int3
jb
pop
roll
and
mov
repnz
ss
lcall
loopne
xchg
add
add
data16
mov
add
mov
cltd
pop
xchg
and
xor
aas
or
push
add
add
add
add
mov
insl
repz
cld
and
bound
mov
sub
jnp
pop
mov
adc
cmp
pushf
aaa
dec
popa
mov
dec
cmp
add
xchg
add
stos
jo
test
rolb
lahf
mov
mov
add
add
aam
add
fisubs
add
or
mov
sub
int
adc
mov
mov
testb
cmpsb
add
add
add
rolb
cli
cmc
cmc
mov
call
or
into
leave
mov
xchg
add
mov
enter
addb
mov
mov
or
and
in
add
mov
in
ljmp
sub
push
add
out
push
sub
fidivrs
pop
jbe
and
imul
or
pop
imul
hlt
add
push
mov
cmp
mov
push
test
add
loope
inc
add
add
ret
xor
jb
jmp
cmp
mov
lret
in
jl
add
gs
arpl
add
or
push
add
incb
mov
hlt
add
mov
in
adc
cwtl
mov
mov
add
jno
jnp
add
aad
jle
mov
add
dec
adc
clc
mov
cmpsb
add
shll
mov
jecxz
stos
xor
ret
in
sub
cmpsb
add
and
inc
add
testb
add
ja
add
push
add
cmp
cmp
xchg
push
add
add
mov
inc
dec
push
add
cs
add
jae
add
mov
xor
cmpsb
add
mov
data16
or
in
jmp
scas
add
jo
adc
add
mov
addl
add
data16
jnp
jg
movsl
stos
sub
pop
cmp
add
fcmovu
movsl
sarl
sti
mov
dec
jo
cmp
rolb
imul
add
push
add
inc
add
repz
repz
mov
add
add
add
