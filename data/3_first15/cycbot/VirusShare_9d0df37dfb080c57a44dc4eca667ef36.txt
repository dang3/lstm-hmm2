xchg
ror
dec
push
hlt
mov
cmp
ret
jmp
pop
push
adc
out
and
sbbl
inc
add
mov
sbb
pusha
add
cmp
in
inc
daa
outsb
jmp
fidivrl
call
mov
cmp
jg
jmp
outsl
cmpsl
stc
pop
addr16
add
lds
out
nop
in
mov
movsb
es
xchg
lea
dec
loope
lea
in
bound
jo
xor
out
in
insb
cld
ficomps
mov
in
add
dec
imul
std
mov
inc
or
push
aaa
test
mov
dec
insl
lods
push
aam
jne
out
push
add
cmp
popl
add
mov
adc
pop
rcr
dec
mov
sti
pop
dec
sarl
jecxz
xor
fmuls
jecxz
movb
cmp
imul
popf
pusha
add
fnstsw
ds
lret
stc
dec
cmpl
lds
dec
jecxz
pop
cmp
fimuls
mov
pop
jecxz
jmp
fwait
pop
jne
jne
adc
xor
cs
ret
sub
movl
push
xchg
mov
aam
sub
dec
and
sarl
shr
aaa
sbb
nop
in
and
mov
mov
adc
add
push
mov
jmp
sub
add
add
jno
push
cld
not
jmp
add
mov
mov
xchg
clc
addb
vprotd
mov
insb
imul
lahf
aam
cvtpi2ps
aam
pop
pop
sti
addr16
addr16
add
stos
mov
and
or
or
lds
dec
xchg
mov
cs
jmp
mov
push
mov
mov
jmp
add
aad
addb
mov
sub
add
stos
mov
add
aas
dec
sbb
jae
cltd
xorl
das
add
in
push
pushf
aad
add
shr
aam
sub
pop
mov
call
sahf
addb
adc
xchg
pop
mulb
add
xor
dec
sub
mov
cmpsl
lods
xchg
outsb
inc
xchg
sahf
ljmp
add
aad
xlat
lret
clc
daa
inc
and
sbb
int3
adc
jl
cmpsb
stos
insl
js
cmp
and
xchg
gs
iretw
loope
mov
xchg
add
addb
sti
mov
add
fisubs
aaa
xchg
ficoms
jnp
and
cmp
stos
test
cmpsb
dec
int
rolb
push
mov
mov
movsl
pop
cmpsl
daa
inc
add
cld
fsts
sub
pop
and
aad
sarb
mov
dec
int
lcall
jno
adc
lds
fs
mov
and
enter
add
xor
inc
out
xor
rcrb
jb
or
or
add
add
mov
mov
jmp
cmp
lea
rcrl
fiaddl
adc
add
add
fdivrs
ds
testl
addb
mov
jmp
cmp
add
out
cld
jno
dec
iret
pop
inc
jne
leave
sbb
or
rclb
push
stos
lahf
cli
icebp
add
mov
and
dec
ret
add
mov
inc
loop
mov
mov
mov
mov
lret
mov
test
sbb
add
push
in
lahf
shl
cmc
idivl
push
mov
aaa
add
mov
insb
pop
das
adc
pop
pop
mov
xchg
fidivrs
in
aam
push
add
or
sti
nop
inc
add
add
mov
xlat
in
loopne
icebp
addb
lods
loop
and
mov
outsl
mov
pop
loopne
daa
leavew
xor
cmpsb
outsb
sub
jge
in
mov
pushl
js
push
add
into
adc
cwtl
xor
add
mov
add
jl
xlat
mov
ret
sub
insb
push
sub
jns
add
lods
jb
sub
std
mov
jp
js
and
aad
call
fwait
add
add
jae
outsl
lahf
loop
inc
mov
lods
mov
sub
jno
add
add
repz
cmp
int
and
xchg
fwait
mov
mov
add
gs
push
test
fwait
cli
pushf
insl
push
push
or
imul
mov
lcall
hlt
jg
add
out
adc
add
mov
sub
test
mov
or
cmp
mov
or
dec
mov
or
push
bound
or
ficoml
test
cmpsl
push
add
mov
sbb
cld
or
loopne
call
pop
or
sub
xor
das
leave
jae
push
movsl
bound
xchg
jg
push
in
lods
cmpsl
inc
jge
scas
loopne
xlat
cmp
test
pop
inc
add
sub
movb
cmp
bound
loope
pop
stos
idivl
dec
nop
imul
xchg
xor
pop
pop
or
or
dec
arpl
add
scas
jns
mov
pop
mov
mov
bound
jp
sarb
pop
add
mov
pusha
add
add
into
sbb
xchg
gs
cmp
add
jecxz
add
clc
jnp
decl
cmp
xor
addb
inc
enter
jl
sub
int3
and
sahf
out
mov
pushf
lods
push
push
add
nop
or
cmp
sbb
stos
pop
movb
call
ss
add
sbb
xor
shlb
enter
out
xchg
push
subl
or
add
cs
pop
inc
add
push
mov
pop
sar
sbb
mov
jge
outsl
sub
mov
rcrb
xchg
nop
adc
mov
out
cltd
out
addb
adc
adc
xchg
sbb
mov
stos
jb
movsl
sub
adc
nop
or
mov
push
imul
scas
je
dec
insb
cmp
fcoml
sbb
std
and
mov
lret
cmp
add
add
es
loope
cmpsb
scas
adc
and
cld
sbbl
jl
lcall
mov
aas
xchg
mov
pop
stos
ret
addb
cmp
lods
into
cltd
mov
jmp
jmp
jecxz
pop
nop
cmc
jbe
and
mov
rcl
push
inc
ret
gs
cmp
loope
inc
xchg
lds
pop
cmp
hlt
sbb
rolb
loope
cmp
mov
mov
dec
cmp
adc
sbb
or
inc
add
add
add
xchg
or
adc
call
pop
rorl
cmpl
mov
addb
mov
jge
and
add
xchg
loopne
and
leave
jnp
mov
mov
lock
das
lock
call
shl
cmp
sahf
sub
test
lds
sub
mov
insl
loopne
xchg
leave
leave
ss
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
inc
add
sbb
add
sub
dec
mov
fsubr
mov
lds
mov
pop
sub
push
and
arpl
dec
out
mov
add
rolb
ljmp
lahf
decl
call
imul
add
fstl
add
repnz
mov
pusha
add
cmpsb
js
clc
xchg
movsl
push
popf
lret
addb
add
hlt
sti
lods
sahf
mov
pushf
sbb
lret
cld
leave
mov
mov
lret
push
pop
mov
adc
sti
push
incl
icebp
push
addb
outsw
or
adc
mov
sbb
push
and
repz
xchg
jo
adc
idivl
cmp
and
xchg
popl
and
and
mul
xchg
xchg
cwtl
sub
add
aam
movsb
out
push
cmpsb
pop
aaa
lcall
and
es
inc
pop
into
pop
and
inc
jmp
mov
and
mov
lret
jp
sti
mov
imul
dec
lret
enter
mov
cs
fbld
rep
push
clc
add
adc
inc
add
call
add
add
into
testl
xor
mov
addb
addr16
aaa
inc
add
cltd
jle
mov
testl
cmpsb
cld
sub
xchg
in
jne
cmpsb
movsl
gs
addr16
idivl
je
jne
ljmp
lret
or
movsl
mov
lods
fidivrs
or
nop
gs
push
add
jp
mov
ja
das
sahf
sbb
cmc
loop
add
call
xchg
ret
setns
pusha
add
push
xor
pop
rcr
xchg
pushf
sbb
fs
in
sub
into
ret
and
add
mov
fiaddl
add
gs
cmp
jbe
push
add
inc
add
pop
aas
repnz
je
xor
jno
lods
mov
nop
ljmp
push
and
lock
add
es
add
xor
xchg
or
ja
lret
scas
repnz
mov
dec
cmc
add
int3
pop
cld
or
pop
xchg
cltd
dec
push
in
push
dec
iret
jo
jne
jo
mov
mov
xchg
pop
repz
je
mov
add
in
or
cmp
std
lahf
cs
sub
add
scas
mov
add
jmp
xchg
mov
push
pop
adc
addb
fwait
insl
insl
sbb
add
insl
loop
xor
mov
hlt
and
sti
stos
in
adc
nop
out
sbb
sbb
stos
or
add
mov
mov
pop
addr16
sub
lods
mov
xor
mov
dec
out
ret
dec
xor
or
mov
jl
cmpsl
int
cmpsb
push
dec
lret
aaa
sub
pop
call
add
push
mov
add
xchg
inc
mov
jge
add
cmpsb
xchg
pop
jo
jmp
or
or
add
fwait
icebp
mov
jo
jae
ficompl
dec
pop
mov
sub
and
pushf
mov
sbb
cmpl
jbe
sbb
adc
dec
and
ffree
add
les
pop
dec
imul
push
subl
or
into
mov
loopne
addb
sbb
sub
loopne
xchg
sub
push
adc
xchg
addb
data16
dec
test
add
movb
xchg
test
call
add
add
aaa
aas
stc
xchg
cmp
push
and
sar
jge
dec
test
add
pop
adc
or
mov
rol
out
lock
adc
popa
cmp
aas
movsb
pop
mov
xchg
iret
inc
pop
xchg
push
popa
jns
and
mov
ret
outsb
shrb
ljmp
dec
dec
mov
daa
nop
aam
js
xchg
inc
lret
mov
adc
xchg
insb
popa
jnp
mov
add
movsb
or
pop
mov
test
sbb
and
ljmp
sub
inc
add
push
mov
add
in
lret
adc
test
xlat
cmp
mov
enter
sahf
stc
int
movsl
adc
popf
push
bnd
ret
push
add
add
clc
bnd
in
bound
lcall
add
into
gs
xor
fildl
add
add
fucomp
and
jnp
pop
xchg
ret
andl
lds
bound
sbb
pop
mov
add
mov
push
xchg
sti
stc
push
jge
or
pushf
push
push
or
add
enter
xchg
mov
lret
or
shrb
jecxz
xorl
sbb
xor
cmpsb
dec
dec
insb
xor
add
popa
xchg
into
fisttpll
pop
and
dec
xchg
gs
rclb
dec
int
and
xchg
je
pop
or
lahf
adc
ss
mov
ljmp
iret
mov
push
or
mov
mov
jge
cs
mov
sub
mov
int3
pusha
add
imul
pusha
add
hlt
and
stc
mov
add
rorl
test
int
cmp
dec
divl
pop
push
jbe
filds
xor
cmp
add
xorl
jne
cmp
push
add
cli
fidivrl
mov
sahf
add
sub
xor
mov
xchg
inc
add
mov
jb
mov
cmp
dec
pop
iret
lods
push
pop
aad
popl
cmp
ja
aas
out
lret
xorl
js
sbb
call
andl
stos
mov
add
push
or
mov
mov
addr16
lods
push
sub
outsl
lea
out
inc
add
add
jo
and
jno
test
gs
xchg
pusha
add
mov
xor
dec
push
movsb
push
sub
in
or
pop
scas
xor
add
add
mov
xlat
mov
jnp
cs
and
adc
lock
and
mov
jne
int3
cmc
push
xchg
dec
ret
sub
pop
dec
push
hlt
test
jmp
cwtl
add
mov
cmpsl
aad
dec
sbb
add
lahf
pop
pop
ja
cld
xor
mov
inc
incb
data16
push
daa
mov
loop
push
add
add
xor
sub
sub
add
xchg
cmpl
inc
inc
add
jbe
cli
xchg
and
xor
push
mov
divb
jg
xchg
stos
xor
mov
sub
push
mov
insb
push
add
jne
pop
jne
add
imul
pop
inc
add
movb
pop
js
add
push
adc
cmp
cmp
mov
jns
push
inc
push
popf
insl
mov
cwtl
dec
pop
in
adc
fistpll
lret
mov
inc
lods
pop
push
popa
shrb
add
push
jl
insl
push
mov
mov
lret
ja
xchg
fisubl
rclb
pop
sbbl
xor
inc
add
mov
inc
inc
js
dec
test
jb
pop
repz
mov
push
ja
cmp
push
cs
rcll
in
dec
cmp
data16
or
jns
push
dec
scas
pop
sub
shr
xchg
mov
dec
xchg
fabs
loope
scas
pop
outsl
dec
dec
sbb
mov
xchg
push
outsl
jge
jmp
mov
add
or
cs
jle
test
mov
sbb
push
addl
push
testb
add
outsl
leave
outsb
out
xchg
shl
in
sbb
dec
add
mov
testb
mov
les
dec
mov
xor
cmpsl
test
leave
mov
cwtl
mov
mov
clc
js
pop
sbb
adc
and
icebp
mov
les
add
dec
pop
mov
sbb
add
dec
jo
or
xor
jne
pop
or
add
std
add
repz
in
mov
in
lret
push
mov
fistpl
scas
mov
js
cmp
add
add
loop
loop
dec
dec
adc
loopne
xlat
cwtl
sbb
push
fcomip
movb
sarl
cmpsb
xor
cmpsl
and
sub
addr16
test
dec
inc
add
adc
sti
pop
cmp
out
mov
lods
dec
das
push
and
mov
jbe
fmull
imul
cmp
inc
mov
cmp
xchg
fs
nop
pop
dec
loopne
aas
bound
dec
mov
mov
pop
imull
push
sub
add
test
sub
cli
xor
add
ret
add
xchg
iret
jg
stos
jp
dec
add
lods
popf
pop
add
pusha
add
sub
mov
fisubl
call
mov
cltd
aaa
jge
addr16
lret
and
lcall
loope
mov
xchg
pushf
in
xrelease
movsl
cli
orl
pop
push
pop
out
adc
pusha
add
adc
in
mov
add
pop
int3
mov
mov
sbb
add
inc
add
out
fs
jne
cmpsb
rcr
xchg
cmp
loop
jb
mov
add
push
insl
mov
jmp
jmp
mov
stc
stos
jnp
rcr
popf
sub
mov
jecxz
dec
jns
fstpl
dec
adc
sahf
mov
push
loop
mov
lahf
mov
inc
inc
add
sbb
push
pop
add
jge
inc
into
insl
xchg
add
dec
cmpsl
mov
movsl
call
mov
sbb
addb
or
lahf
jne
push
cs
aam
enter
loope
inc
add
pop
jmp
sbb
add
not
cmp
push
add
cwtl
sub
les
inc
sbb
pop
cs
mov
int3
into
movsl
mov
cmp
arpl
xor
scas
fsubl
dec
push
add
sti
rolb
shlb
or
xchg
mov
mov
pusha
add
sub
pop
mov
and
imul
mov
pop
ficoml
lahf
scas
in
push
mov
sub
test
in
das
xchg
sbb
adc
test
lret
cld
xlat
xchg
hlt
into
outsl
stos
lods
ja
testl
jl
pop
ljmp
pop
repnz
jp
movsb
push
test
sub
cmp
les
add
in
cmp
int
in
icebp
mov
sub
lods
andl
or
and
dec
js
cmp
add
add
or
push
dec
mov
jb
inc
dec
add
sbb
cmpl
sbb
sahf
ffree
add
jne
dec
xchg
loope
call
cs
xor
jnp
mov
pop
pop
pop
scas
dec
inc
lret
mov
test
ret
scas
negl
and
mov
push
lahf
jbe
add
movzwl
je
sbb
cmp
scas
shll
jmp
cmp
add
fsubs
sbb
sbb
mov
nop
orl
xchg
lahf
cli
loop
add
and
sub
test
jmp
mov
push
ja
js
push
nop
dec
cmp
rorl
fdivrl
shll
lret
sbb
cmp
push
pushf
in
out
insb
jmp
mov
in
andl
jl
sbb
pop
fisubrs
loopne
add
push
or
add
nop
stc
push
inc
add
mov
mov
cmp
jne
add
call
lret
int3
lahf
adc
and
rolb
loopne
add
adc
or
mov
add
icebp
lea
outsl
mov
mov
in
jnp
cmpsl
jns
add
cmpsl
mov
in
into
aam
sub
xchg
arpl
jae
jp
stos
push
std
out
pop
mov
mov
lods
sbb
cli
cmp
xchg
test
sbb
cltd
sub
jmp
insb
shrb
popf
sub
xor
mov
aaa
incl
add
sahf
mov
add
add
bound
xchg
call
xchg
dec
push
add
pop
sahf
mov
add
in
add
push
add
mov
mov
daa
mov
dec
ds
add
mov
adc
dec
or
xchg
cmp
pop
cmp
xor
movsb
mov
add
mov
jne
cmpsl
mov
adc
inc
pop
or
push
aam
test
aas
xor
cld
mov
add
loop
les
lret
mov
shlb
pop
rcll
sub
jnp
pop
popf
xor
jae
test
mov
xor
movsb
jmp
js
ja
or
add
jmp
js
xchg
push
add
aad
sti
fadds
and
push
js
fisttps
loope
mov
test
add
decb
inc
add
xchg
or
mov
out
jmp
and
pop
pop
testl
pop
or
xor
jb
mull
add
jne
xor
lds
dec
repnz
cmp
scas
popf
xor
add
sub
mov
jge
std
ret
xor
jle
pop
inc
jne
mov
xchg
outsl
add
sbb
or
ds
jne
add
sub
sahf
pop
xorl
xchg
jo
jo
cmp
stc
inc
xchg
or
fwait
xchg
jbe
dec
sub
sub
add
das
gs
gs
pop
leave
mov
sbb
or
hlt
inc
sbb
jns
mov
incl
jo
and
leave
or
dec
add
ds
jbe
fsubl
add
sahf
je
iret
out
xor
lea
pop
mov
add
jno
aam
push
xchg
push
inc
add
cmpsb
rolb
lret
or
add
and
add
ret
xor
sti
hlt
lahf
fsubrl
xorl
add
push
add
lret
jnp
icebp
mov
int3
push
rolb
aam
aad
mov
jne
push
repz
xor
add
jbe
xor
pop
pop
insl
enter
add
sbb
push
pop
push
fsqrt
add
hlt
inc
add
popa
sarl
sahf
popa
mov
pop
jb
pop
imul
dec
mov
sub
cmp
add
sub
insl
or
and
xor
xor
jnp
xlat
mov
fstl
shll
and
int3
jp
adc
addb
js
xchg
jo
push
or
sbb
adc
jmp
mov
or
add
push
xchg
movsl
dec
cwtl
mov
pop
pop
xor
jg
sbb
aam
lret
pushf
add
add
addb
push
push
mov
wbinvd
dec
xlat
xchg
std
jae
add
jns
aaa
fwait
fwait
lret
mov
shrl
stc
xchg
loopne
test
hlt
jae
call
ret
xchg
incb
into
mov
dec
jae
andl
icebp
mov
add
call
in
pushf
cli
push
aam
mov
xlat
es
test
idivl
xchg
mov
add
cmp
test
xchg
stos
sub
mov
sub
sti
daa
pop
xor
lcall
jecxz
xor
cs
pop
aas
clc
dec
lcall
xchg
enter
sti
dec
pop
push
je
cs
mov
lret
in
aad
or
test
lock
into
sti
or
sub
in
jecxz
push
test
mov
sarb
add
mov
inc
in
or
loope
test
into
sbb
fmul
mov
mov
or
ds
mov
pop
in
lods
ds
test
mov
cmp
arpl
add
add
insl
and
call
fstps
stc
aam
push
inc
add
pop
rorb
jg
jns
enter
hlt
aaa
mov
add
push
inc
add
mov
push
lds
mov
fwait
or
push
add
daa
sbb
popf
dec
out
add
mov
add
sub
int3
cmpsb
bound
push
pusha
add
outsb
or
addr16
or
cli
xor
out
je
nop
and
jo
mov
bound
in
pop
test
into
adc
into
movb
and
inc
add
in
out
aaa
adc
jmp
mov
sbb
cmpsb
push
add
cmc
xor
int3
leave
mov
pop
int3
aaa
or
adc
leave
add
add
push
push
ret
testb
xor
pushf
out
mov
mov
mov
in
dec
ficoms
xchg
aad
dec
or
dec
ljmp
mov
sti
inc
add
jbe
or
push
cmpsl
xchg
and
inc
add
lahf
cmp
inc
outsl
test
add
push
sbb
xlat
and
xchg
pop
pop
cs
push
ficoml
jns
ljmp
xchg
mov
jecxz
fs
xor
test
imul
insb
pop
dec
imul
dec
jp
sub
xchg
adc
and
xchg
and
sub
pop
fdivrl
dec
cwtl
rclb
inc
ds
popa
mov
add
add
je
or
mov
add
scas
test
fstpl
sub
pop
mov
mov
jl
imul
mov
mov
scas
and
lcall
push
cmc
adc
icebp
stos
icebp
push
mov
xlat
enter
dec
or
ljmp
call
sahf
xchg
jge
in
adc
add
test
dec
push
mov
mov
aad
adc
dec
movsb
inc
add
cmp
mov
rolb
mov
mov
add
cmc
mov
jmp
lcall
add
cmp
call
jns
mov
xor
test
aaa
das
or
aam
call
adc
add
or
dec
xor
push
setb
add
pop
mov
add
add
fstl
push
inc
add
sbb
outsl
xchg
fsubl
repz
push
addb
mov
icebp
jb
aam
jecxz
add
add
je
mov
jg
leave
movl
aaa
jae
cmpsl
and
xchg
addb
add
xlat
hlt
xor
pop
cwtl
add
inc
add
xchg
addb
add
cwtl
push
jg
repnz
aam
loop
add
mov
insb
jne
push
daa
cltd
dec
sub
ljmp
addb
movb
call
movsl
ljmp
fldt
jns
or
mov
cmc
add
cmp
pusha
add
push
add
in
inc
fidivrs
sahf
and
notb
sub
add
add
mov
add
mov
sahf
cmp
lock
out
insl
add
mov
xor
movb
seto
nop
mov
push
test
aad
pusha
add
add
pop
mov
jno
cmp
dec
test
push
in
fidivs
sbb
call
dec
push
xchg
add
sub
dec
xor
adc
adc
insl
lahf
loope
mov
ficomps
push
stos
repz
add
stos
jle
jbe
push
cmp
fmul
in
dec
cltd
call
mov
rolb
imulb
pushf
push
mov
sub
ljmp
hlt
fs
addb
repz
cmp
movb
pop
scas
int
movsl
pop
in
jnp
mov
xlat
mov
test
dec
cld
hlt
faddp
add
push
add
ficoml
sarl
sub
ficoms
jg
dec
dec
push
lret
addb
jle
mov
mov
mov
mov
sti
fsubs
test
int3
mov
pushf
dec
sub
ret
nop
push
pop
mov
in
add
add
dec
push
push
test
cs
sbb
xor
pop
insb
or
cmp
orl
ficomps
addr16
cmp
add
add
addr16
push
cwtl
andw
inc
pop
mov
out
pop
addr16
int3
test
pop
loope
jmp
rolb
sbb
push
jl
pop
jmp
mov
insb
dec
sub
shld
mov
lcall
xchg
enter
sbb
jae
xor
adc
pushf
dec
arpl
dec
xor
popf
ds
add
adc
rolb
mov
and
sti
dec
fdivrs
cmp
addb
adc
add
cltd
lods
rolb
add
and
in
in
fistpl
push
inc
add
adc
add
sub
jnp
push
push
add
inc
data16
adc
mov
xchg
lahf
fldl
push
incb
add
insl
dec
or
add
aad
xor
cltd
add
mov
test
pop
insl
or
add
lret
shll
cltd
adc
mov
add
push
or
repz
xchg
xor
rorb
mov
sarb
dec
andl
mov
mov
xchg
ds
push
push
mov
push
lds
inc
add
mov
xor
push
jle
xchg
add
loopne
xor
mov
pop
fs
inc
add
adc
adc
jae
scas
aaa
aad
addb
rorl
sar
adc
and
dec
jns
mov
fs
pop
lret
xchg
jecxz
ljmp
push
sub
in
add
jne
jno
dec
xor
lret
lret
cmc
out
jle
mov
mov
inc
add
es
stos
in
rolb
jge
popf
or
and
imul
test
mov
mov
lcall
push
xor
andl
out
mov
or
adc
or
aaa
jne
add
aas
inc
mov
outsl
addb
mov
xchg
hlt
add
push
je
mov
push
inc
add
fistps
jecxz,pt
loop
and
stos
sub
mov
mov
xor
jo
and
test
push
test
xchg
aam
inc
rorb
mov
iret
int3
mov
inc
add
and
insl
fucomi
icebp
push
xor
mov
mov
mov
call
add
stos
xor
fs
js
int
mov
mov
pop
push
imul
and
mulb
mov
jp
les
xchg
mov
ss
sbb
stos
out
iret
lock
add
mov
dec
or
negb
test
movb
js
sub
insl
addr16
push
hlt
lcall
repnz
insl
rolb
aaa
leave
gs
shrb
pop
rol
push
sbb
pop
sbb
pop
imul
rcrl
adcl
mov
mov
in
xchg
or
and
inc
pop
fildll
dec
popa
adc
sti
pop
pop
dec
mov
repz
lods
scas
adc
dec
inc
mov
jp
add
cmpsb
icebp
mov
adc
adc
jbe
xchg
push
stos
sbb
xchg
mov
add
mov
stos
push
add
dec
sti
das
mov
pop
add
inc
in
fistps
addb
addb
push
lods
mov
add
fisttpl
mov
mov
add
cld
fsubp
sub
mov
add
add
std
add
daa
inc
or
out
add
push
pop
fwait
mov
adc
fs
or
ret
sahf
mov
inc
lcall
xor
jb
ret
shl
jg
icebp
xor
std
ljmp
push
jb
inc
xchg
daa
mov
repz
outsb
pusha
add
add
jo
xchg
movsl
dec
lret
and
push
pop
aam
add
int3
idivl
cmpsb
movsl
sbb
gs
add
mov
push
sahf
rcr
stos
push
push
ret
negl
inc
mov
jbe
adc
rol
scas
cltd
in
xor
cmpsb
pop
cli
sahf
rol
add
xchg
and
mov
int3
fbld
inc
add
cwtl
mov
pop
addb
jge
mov
pushf
fimuls
insb
xor
leave
add
xchg
xor
ret
lods
mov
test
mov
addb
test
test
pop
nop
arpl
add
mov
fs
ret
mov
mul
repnz
dec
icebp
fdivr
dec
jl
dec
add
push
sbb
cmp
in
sbb
lahf
movsl
and
sahf
ret
xchg
pusha
add
inc
and
es
lret
mov
mov
pop
stos
push
repz
scas
cmp
mov
cmp
jecxz
cmpsb
arpl
mov
cmc
pop
cmp
ss
lahf
iret
inc
add
pop
adcl
sbb
sub
mov
arpl
addb
add
lea
das
addb
aam
test
sbb
out
sbb
repnz
xor
push
xor
sbb
xlat
loop
adc
ss
cmc
xchg
add
push
or
add
dec
mov
in
bound
mov
clc
push
push
push
clc
jnp
or
aam
ss
pop
in
push
rcll
sbb
lea
addb
dec
cmp
imul
js
or
mov
fbstp
adc
xchg
lcall
outsb
out
lods
into
bound
dec
xor
call
cltd
mov
sarb
xchg
and
inc
aad
mov
xchg
xchg
lock
and
lods
xchg
inc
add
nop
imul
or
lds
add
pop
pop
les
pop
sub
mov
ljmp
clc
sbb
je
jo
push
call
enter
sbb
xor
or
cmp
inc
insb
and
movsb
push
mov
cs
add
in
imul
shlb
mov
ret
arpl
cli
arpl
lock
pushf
cli
and
add
jnp
fsubrl
jae
cmc
pop
dec
lea
jmp
hlt
push
and
in
ljmp
sbb
lods
pop
outsb
xor
aam
pop
push
push
and
jecxz
mov
enter
mov
pop
aaa
or
insl
mov
add
mov
inc
sub
add
pop
push
sub
and
add
jno
adc
inc
add
aad
and
outsl
adc
add
lock
cs
cmpsl
mov
es
daa
jnp
jge
pusha
add
push
les
dec
out
sbb
add
inc
add
sbb
adc
push
push
add
adc
push
mov
clc
pushf
mov
daa
test
outsl
adcl
and
mov
pushf
push
mov
pop
lea
xchg
enter
add
arpl
cwtl
cmp
and
jb
movb
cmpsb
shl
mov
add
lods
push
cs
and
sbb
or
cli
xor
outsl
add
fsubrs
fisubs
add
push
xor
out
lods
mov
push
add
dec
cs
mov
sbb
mov
pop
loop
add
add
test
int3
call
add
sub
sti
outsl
movb
sbb
outsb
enter
sub
and
jp
push
fsubrs
adc
inc
add
sbb
xor
dec
lret
add
mov
pushf
push
fcmovbe
sub
dec
aad
push
add
adc
xchg
inc
add
repz
or
mov
add
add
add
xor
jmp
add
push
sahf
adc
add
mov
je
rolb
push
loopne
movsl
es
sti
sbb
fbld
sbb
mov
and
daa
mov
jg
jbe
xlat
add
mov
cwtl
mov
aam
insb
in
or
xor
mov
mov
add
das
mull
repnz
js
or
and
pop
outsl
mov
sbb
aaa
add
adc
call
es
mov
add
hlt
pop
pop
outsb
fldl
lret
gs
mov
add
mov
pop
lret
and
and
jb
and
out
add
iret
push
and
push
cs
cmpsl
jmp
and
shll
push
movsb
cltd
push
ret
jecxz
jge
stc
jle
jecxz
out
mov
cmp
shll
or
test
insl
xor
ret
pop
push
xor
sti
fucomp
rolb
xor
leave
mov
xchg
js
cmp
test
sti
lret
fs
lcall
fldl
jno
and
cmp
shll
jecxz
lea
cmpsb
lcall
pop
mov
outsl
popa
out
mov
add
adc
cmpsl
cmpsb
xchg
shll
imul
adc
lods
leave
addb
cmp
repz
push
inc
add
adc
adc
cmp
adc
add
daa
adc
inc
add
mov
cmpsl
mov
xchg
pop
aas
push
sti
test
inc
add
outsl
sub
push
testl
xchg
lea
std
add
insl
push
push
cmp
lret
call
add
aad
dec
pop
add
cmp
cmp
daa
sbb
add
and
adc
jge
push
sbb
dec
sub
aam
push
rolb
pop
les
and
mov
leave
loope
iret
pushf
aam
add
cmp
scas
mov
fisttpll
addb
stos
cmp
add
or
mov
mov
ficoms
inc
or
push
sbb
mov
scas
push
adc
push
add
jmp
jp
mov
in
or
mov
clc
pop
insb
test
sub
mov
push
fmull
test
ss
push
hlt
aad
mov
add
xor
cmp
cmpsb
fsub
mov
cltd
mov
aam
jl
fists
jg
cmp
addb
add
lods
sub
dec
xchg
push
cmp
jno
mov
xor
jmp
jp
hlt
cmp
outsb
inc
add
cltd
orl
mov
cs
js
mov
in
jns
pop
add
je
iret
loop
out
jl
arpl
ret
jp
mov
rcrb
sbb
fs
add
jg
insl
mov
out
xlat
jmp
mov
sbb
sahf
aam
or
out
sub
scas
addb
push
js
mov
stos
push
jg
sub
add
fists
adc
cli
rolb
lods
push
push
push
movsl
dec
int3
sbb
cmp
add
push
and
sarb
cmp
jp
xor
dec
adc
out
mov
int
add
sub
pop
adc
sub
outsl
imul
in
sub
add
repz
popf
out
stos
inc
add
mov
dec
pusha
add
mov
leave
mov
aad
xchg
outsb
push
lea
xor
inc
cwtl
inc
add
cmp
jno
loop
dec
mov
adc
inc
test
and
rcrl
lock
mov
xchg
add
insb
cmp
insl
int
mov
cmc
pop
in
dec
mov
and
jns
and
movsl
push
cmp
repnz
je
lods
nop
out
sbb
cmp
adc
sti
pop
cmp
movl
add
loop
ss
mov
push
push
pop
jge
or
add
orl
test
ss
fisttpll
cmp
pop
mull
bound
in
test
push
adc
mov
leave
pushf
xor
xchg
inc
clc
xchg
lods
pop
cld
ds
fsts
sub
ss
pop
fisubrs
sti
in
cmp
jecxz
mov
adc
mov
pusha
add
test
pop
sub
into
cmp
mov
addb
jp
xchg
out
add
pop
loop
testl
loope
mov
sahf
mov
cmp
ja
mov
sub
mov
jle
adc
negb
xchg
mov
xor
rorb
or
icebp
lahf
xchg
mov
scas
mov
add
sbbl
jo
mov
imul
sti
push
cld
pushf
push
arpl
test
daa
cli
clc
insl
inc
add
dec
sarb
xchg
push
inc
add
test
lcall
fdivrs
mov
mov
adc
xchg
outsb
and
aam
jmp
in
add
add
cmc
ja
lahf
inc
jge
jb
test
lcall
jle
dec
ljmp
fcomps
idiv
pushf
mov
xor
xchg
push
inc
add
or
mov
xorl
mov
cli
in
push
ss
movsl
sub
mov
imul
movsl
mov
lret
pop
loopne
add
les
cmp
mov
push
xor
dec
and
add
lret
push
adc
imul
ret
fisubl
add
neg
and
ret
xchg
dec
clc
scas
xor
fwait
enter
jae
jbe
daa
inc
add
icebp
push
lahf
or
mov
and
xor
lret
add
jne
add
cmp
mov
data16
jge
jae
ret
stos
sub
mov
pop
ja
mov
mov
cmp
add
stos
in
loope
mov
push
mov
push
andl
xor
addb
add
jmp
add
in
push
in
dec
mov
or
inc
add
das
mov
mov
mov
ljmp
sub
mov
div
cs
je
jns
add
sahf
and
jnp
xacquire
aam
out
mov
repnz
xchg
shll
add
dec
clc
cld
adc
jg
add
add
sbb
jnp
cmp
arpl
lcall
push
xor
das
je
push
daa
cwtl
adc
mov
jge
sub
movsb
add
std
push
test
inc
xor
inc
add
mov
and
jns
jl
push
ljmp
push
push
and
fs
mov
fs
push
push
test
imul
add
and
adc
aam
dec
es
adc
enter
xor
push
ja
fldl
test
test
rorb
inc
xchg
insb
addl
addb
mov
sub
shrb
add
out
lods
mov
int3
outsl
pop
fs
repnz
sub
add
mov
sbb
mov
lea
mov
add
movb
mov
addb
adc
jbe
lods
in
out
sub
jp
call
pop
stos
cs
jmp
inc
adc
movsl
rolb
cmc
and
push
inc
add
dec
jne
dec
in
stos
mov
or
sub
add
inc
add
enter
ret
jb
mov
jmp
xchg
dec
test
addb
pop
xchg
xor
dec
xchg
sub
jg
fstp
push
pusha
add
iret
das
push
loope
lock
sub
push
arpl
out
cmc
jnp
jbe
out
addb
pusha
add
cmp
jns
xchg
movsl
das
pop
push
daa
rolb
cld
stos
xchg
xchg
cmp
movsb
outsb
out
pushf
dec
call
add
adc
adc
add
or
xor
fisttpl
mov
fidivrs
jp
or
and
es
movb
and
or
mov
loope
push
mov
add
dec
add
inc
push
or
pushf
aaa
xor
js
dec
fidivl
adc
sbb
jbe
adc
mov
hlt
push
mov
mov
cmp
jo
jns,pn
push
rorl
or
pop
and
lret
or
jp
jl
xchg
push
cmp
loopne
mov
js
movb
fs
xor
cmp
sahf
daa
addb
add
add
out
add
jae
lahf
mov
xor
xchg
popf
hlt
xor
cmpsl
dec
ret
add
pop
fcomps
sub
inc
add
pop
sarl
test
jg
ficomps
lahf
fistpll
aam
push
push
and
adc
sbb
adc
stc
adc
cld
fimuls
mov
xor
enter
add
icebp
cmp
sbb
jmp
fisttpll
lods
xor
jne
inc
add
hlt
repz
push
mov
movsl
js
sahf
rcrl
cltd
sub
rcll
mov
lods
and
leave
aas
mov
dec
cld
cltd
jne
clc
jno
add
push
lahf
push
stos
ja
dec
movsl
dec
dec
adc
add
lea
cmp
xor
das
ror
orl
add
dec
mov
cmp
add
push
add
in
cld
pop
pop
inc
inc
or
dec
mov
mov
or
jo
and
add
jmp
cmpsl
pop
or
sub
data16
jecxz
js
stos
addb
repnz
out
sbb
in
fwait
in
sub
inc
add
jno
cmp
sbb
dec
pop
sub
xor
pop
xor
sub
mov
add
out
mov
addr16
xor
enter
adc
or
and
pop
fdivl
ret
test
inc
or
push
adc
adc
jae
cmp
inc
add
add
add
shll
add
lds
pop
dec
stc
cmpl
loope
ret
gs
int3
scas
push
add
mov
adc
inc
mov
cmpsl
lret
inc
sarl
add
mov
jp
add
mov
jb
cmp
xchg
mov
mov
test
and
sti
xchg
push
add
iret
fdivrl
lds
aam
or
stos
and
dec
push
dec
xor
movsb
js
iret
pop
insl
addb
insb
loope
sbb
std
mov
int
leave
addb
sti
test
push
out
jb
gs
mov
arpl
mov
mov
cmp
filds
add
xchg
dec
decb
sub
in
es
test
cmp
test
add
dec
fsubs
push
jae
pop
addb
stos
sub
add
lret
loopne
add
xchg
adc
cmp
aad
adc
xchg
aad
add
pop
xor
mov
dec
call
jae
jecxz
sub
pop
movsl
push
cmp
dec
xchg
test
lcall
or
and
sbb
jmp
lea
mov
add
pop
sbb
or
nop
mov
or
sub
xchg
dec
inc
cmp
cmpsl
sub
out
xorl
and
push
imul
adc
mov
loop
push
pop
jecxz
les
xchg
jnp
pop
ss
pop
idivb
ret
add
mov
movsl
mov
mov
pop
jne
repz
adc
add
addb
push
lret
aaa
mov
push
add
les
scas
adc
outsl
inc
and
addr16
pop
xchg
aaa
shll
adc
mov
jns
ret
ljmp
dec
ss
addb
inc
add
sub
das
mov
add
xor
push
cmp
cltd
mov
out
outsb
xchg
dec
mov
xchg
cltd
movsl
and
call
ret
sahf
faddl
add
lret
inc
popf
mov
dec
pop
sub
push
ret
dec
ja
jns
sbb
cmp
and
fs
rolb
pop
or
or
lds
clc
push
push
add
outsl
or
ficomps
add
bound
lahf
bound
ds
jno
cltd
jo
lock
sbb
adc
outsb
adc
je
push
pop
pop
jb
nop
pop
push
and
rcrl
push
pop
adc
inc
add
push
add
dec
pusha
add
jle
repnz
addb
mov
sub
pop
movsb
and
push
inc
add
push
sbb
pop
cmpsb
int3
fdivrl
pop
or
cmpsl
push
fdivs
js
popa
lret
popf
icebp
rcll
mov
inc
mov
out
in
scas
lods
sbb
sub
ljmp
mov
jae
push
adc
jne
add
add
int
ja
aad
mov
ret
dec
xchg
std
cs
add
add
addr16
xor
loop
dec
jo
mov
jg
jb
mov
jb
xchg
ds
pushf
pop
and
add
lahf
sub
add
mov
adc
leave
push
xchg
fistl
iret
push
pop
clc
in
outsl
dec
sub
je
scas
jecxz
add
mov
add
mov
add
fisubs
in
filds
inc
and
adc
xchg
loopne
xor
je
dec
decb
or
xchg
xchg
add
adc
inc
aaa
in
repz
mov
mov
inc
add
push
adc
mov
mov
loope
lret
cmp
push
add
shrl
jl
loop
fimull
add
add
rolb
mov
add
leave
out
jne
movsb
out
jne
in
not
xor
aaa
clc
pop
pop
pusha
add
inc
add
addb
out
xchg
cmp
mov
fildll
xchg
mov
add
enter
inc
gs
pop
push
or
fimull
add
inc
or
fisttps
in
nop
xchg
out
movsb
ds
cmp
push
cmc
mov
add
sub
loopne
sahf
ja
add
bound
fisubrs
das
jge
and
push
sbb
push
hlt
mov
lahf
ret
outsl
outsw
add
lret
inc
cltd
int
int3
stos
aas
adc
ss
in
jmp
dec
arpl
pushf
int
addb
adc
icebp
inc
add
lret
je
xor
xchg
push
inc
add
aad
and
pusha
add
fimull
aad
and
sarl
pop
lds
sbb
inc
pop
mov
jle
add
mov
mov
adc
int
sub
into
jb
insb
cli
fdivr
sub
sarl
std
hlt
pop
imul
push
iret
ret
push
dec
pop
popf
add
mov
inc
push
or
out
inc
lret
mov
inc
push
dec
cwtl
inc
add
bswap
adc
nop
insl
lds
pop
adc
push
in
lods
push
dec
fcoms
mov
loopne
inc
add
stos
lcall
loopne
mov
cmp
int
ljmp
xchg
inc
addb
scas
or
jecxz
dec
gs
mov
in
ds
mov
xor
jg
aas
nop
or
shll
add
jg
lds
aaa
mov
sbb
dec
add
mov
inc
add
repz
add
outsl
imul
push
add
and
arpl
xchg
cld
sbb
sti
stos
outsb
sahf
add
dec
out
arpl
std
mov
mov
lcall
or
mov
mov
mov
add
int3
sahf
out
in
roll
mov
outsl
call
je
mov
xor
rolb
test
xchg
adc
pop
add
jo
mov
push
int
pop
fadds
jp
shrl
mov
addr16
pop
mov
jae
jl
sub
inc
add
pop
mov
cwtl
rolb
push
stos
cmp
mov
jl
cld
mov
pop
sub
enter
xchg
mov
test
fcomps
lock
fnsetpm(287
gs
mov
aas
jo
jmp
movsl
pushl
cmp
movsb
dec
fstpt
inc
add
rolb
push
orl
add
and
stos
push
add
adc
jno
jg
aas
mov
nop
ud1
std
les
out
xchg
push
arpl
ret
add
xchg
jp
and
lret
es
mov
and
scas
sub
mov
xchg
dec
push
shlb
sti
addr16
pop
mov
mov
dec
xor
sbb
pop
fwait
and
dec
fcmovnb
add
mov
inc
add
jne
push
mov
cli
addb
roll
jne
aaa
pop
addb
and
sarb
or
in
xchg
adc
add
addl
pop
into
test
add
insb
mov
fnstsw
fldcw
inc
andl
inc
add
or
in
xchg
or
xchg
ss
mov
inc
orl
mov
je
sub
push
xor
push
aad
stc
mov
add
popf
stos
das
fwait
and
push
sub
aas
addb
call
xchg
jo
pusha
add
sbb
das
or
add
cmp
xchg
cmp
fisubrl
pop
repz
pushf
jae
xchg
mov
fwait
data16
lock
mov
bound
push
add
shlb
add
in
imul
add
mov
adc
jne
lock
pop
out
add
push
and
push
mov
pushf
adc
inc
lods
loope
add
sub
inc
add
data16
add
xor
dec
shll
test
sub
dec
jg
jae
add
scas
lock
sbb
adc
mov
ja
sub
adc
fmulp
scas
popf
push
shll
add
addb
cmp
aam
add
sbb
addb
inc
inc
add
aaa
and
push
cmp
shrl
or
dec
xchg
jge
add
push
adc
out
jnp
sarb
aam
inc
outsb
inc
and
xchg
xchg
loop
pop
cmp
dec
daa
rcl
das
inc
add
add
daa
pop
out
aad
xor
add
adc
shlb
movsb
xor
xchg
xor
dec
in
mov
adc
jnp
jne
pop
sahf
mov
add
lods
sub
into
je
test
jne
das
jb
xchg
sub
test
aas
lds
adc
xchg
mov
add
add
mov
pop
filds
jle
push
imul
mov
ljmp
fldcw
add
subl
add
push
dec
mov
inc
lret
out
sahf
stc
outsl
out
or
jge
mov
fcoms
mov
mov
add
cmp
cmp
popl
lahf
lods
outsl
movsb
inc
stc
pusha
add
pop
adc
je
test
test
mov
imul
jo
add
shlb
gs
leave
push
addr16
stos
call
push
in
aam
xor
je
mov
out
add
mov
dec
mov
mov
outsb
bound
xor
cld
mov
xor
add
cmpsb
sbb
dec
push
jecxz
lret
das
cld
xchg
das
sti
pusha
add
notb
int3
aaa
pop
or
push
dec
rcl
cli
adc
sub
inc
add
jg
negl
out
mov
add
mov
add
mov
cmp
nop
shll
pusha
add
add
jbe
xchg
decl
ret
dec
push
mov
push
and
push
mov
divb
in
or
dec
lret
lahf
stos
xchg
sahf
push
xchg
in
mov
push
out
xchg
fisttps
insl
xchg
imul
sbb
or
sub
in
lret
jnp
pop
cmp
iret
das
pop
negl
iret
and
mov
pop
nop
xchg
xor
pop
ret
add
cmc
pusha
add
into
repnz
add
sub
aas
jb,pn
inc
push
out
and
pop
adc
add
lea
pop
pop
leave
imul
stos
enter
dec
and
mov
add
adc
add
inc
add
and
add
in
test
in
rcr
test
inc
jne
push
fisttps
jmp
test
jnp
cltd
fistps
adc
clc
cmc
mov
ja
xchg
mov
stc
push
movb
aam
mov
sti
aas
pop
xchg
in
mov
jns
shlb
sub
scas
xchg
movsl
jno
or
enter
sub
pop
jne
pop
mov
cmpsb
cmp
mov
je
add
dec
pop
mov
loop
ret
loopne
sbb
inc
add
fistl
sub
push
les
or
nop
mov
mov
and
sbbl
fwait
stos
mov
lcall
fdivr
fimuls
pusha
add
push
push
mov
adc
enter
out
mov
jns
ficomps
movb
test
enter
sahf
popf
inc
leave
mov
arpl
mov
gs
add
aad
stc
add
addb
mov
adc
insl
jl
xchg
or
mov
cld
pop
mov
inc
add
ja
mov
jo
xor
add
add
cmp
jae
add
fildll
mov
sub
icebp
or
or
mov
lds
stc
mov
mov
lea
dec
cmp
cmp
pop
fucom
sub
push
movsb
pop
js
jl
dec
fcmovnu
sub
add
add
imul
jne
test
orl
insb
ljmp
inc
lea
outsb
or
inc
imul
data16
jmp
fisubl
mov
xor
xchg
mov
stc
addb
int
fmull
sbb
and
mov
inc
add
movsb
lret
jmp
add
sub
add
add
mov
fninit
and
ljmp
add
mov
aaa
loopne
or
outsl
pop
xchg
out
aaa
into
xchg
pop
mov
add
adc
xchg
gs
movsl
xor
cmp
outsl
push
leave
mov
adc
xchg
mov
into
insl
aaa
daa
and
pop
and
test
mov
data16
std
cmp
std
test
test
mov
sub
cld
lods
jmp
popf
ss
pop
add
jno
cmp
jbe
or
add
add
add
out
test
or
nop
iret
pop
cmpsl
stc
int
xor
push
add
fwait
xchg
or
test
jmp
add
jbe
jg
in
mov
jmp
lcall
xchg
jae
fwait
mov
sub
mov
mov
jmp
add
fiadds
add
stc
jbe
sarl
pop
stos
cs
rorb
popf
add
aaa
or
mov
mov
mov
push
xchg
mov
jp
or
aad
sti
imul
lods
sub
call
sub
pop
pushf
movsb
pop
adc
int
or
fidivrs
adc
jne
mov
mov
out
and
add
xchg
xchg
xor
cmp
ljmp
mov
cmp
repnz
int
add
add
pop
push
cmp
or
fsubs
jae
lods
scas
in
pop
or
movb
adc
xchg
sub
addb
push
mov
and
movsb
sbb
lcall
xchg
in
test
dec
mov
push
rcr
lods
mov
mov
rclb
add
lods
add
loopne
es
cli
push
rcl
push
fdivrl
pop
test
pop
and
fcomp
loope
shl
xor
sub
lds
add
push
or
xchg
or
inc
enter
pop
push
data16
sbb
jmp
sbb
jne
mov
ss
push
dec
jo
mov
xchg
fisttpl
push
add
jle
cmp
loope
cmpsl
sub
push
aad
movb
or
xor
and
cmc
jle
pop
sub
jmp
bound
movsb
pop
or
jb
add
sub
in
add
inc
add
adc
ljmp
adc
or
sub
adc
add
mov
mov
into
push
lods
imull
cmp
push
mov
in
sbb
frstor
ljmp
movsl
out
and
lret
nop
ret
pop
andl
clc
cwtl
xchg
scas
imul
lahf
addb
fisttps
mov
jl
dec
out
bound
inc
add
or
pop
sbb
push
add
jno
movsl
jge
push
push
add
push
js
pop
nop
lret
aam
into
scas
cmp
int3
cmp
movsb
in
ret
xor
dec
dec
stos
mov
xchg
in
sbb
mov
scas
push
into
sub
sahf
loope
test
push
add
add
imul
pop
or
std
mov
xchg
or
out
add
add
or
movsl
icebp
pusha
add
push
pop
outsl
mov
notb
dec
test
andl
out
shll
sar
cmp
mov
dec
ret
inc
add
dec
mov
scas
cmpsb
mov
xchg
mov
add
sbb
add
add
jb
fisttps
add
ljmp
xor
add
sbb
mov
adc
insl
push
jle
jp
sarb
sub
lret
in
std
xchg
xchg
enter
mov
add
jg
repnz
and
add
ds
adc
jb
dec
out
es
imul
push
push
xchg
push
sbb
sbb
popf
pusha
add
push
add
add
scas
fucom
push
icebp
mov
add
ljmp
add
and
shll
push
add
adc
add
push
xchg
xor
mov
mov
add
push
or
and
pop
add
pop
je
jp
test
adc
jnp
test
mov
cmpsb
xchg
mov
fistl
adc
and
roll
stos
aad
js
add
arpl
test
sti
imul
pop
addb
add
stos
les
in
outsb
js
xor
mov
jne
pop
xor
pushf
dec
pop
pop
xorl
push
cmp
adc
or
dec
sti
push
pop
push
enter
pop
inc
add
inc
jbe
test
adc
cwtl
scas
mov
xchg
or
out
jo
movb
add
pop
shlb
pop
push
push
push
repz
cmp
push
or
mov
aaa
dec
lds
arpl
insl
sbb
inc
pop
lods
xchg
and
jl
xchg
add
stos
push
add
data16
in
ror
inc
das
and
lret
fldcw
out
nop
add
mov
addb
and
pop
mov
jae
inc
filds
xchg
rolb
pusha
add
mov
fisubl
add
add
pop
push
xlat
xchg
xor
icebp
mov
or
dec
mov
sbb
add
mov
mov
shll
sbb
addl
add
enter
inc
add
add
in
cmp
pop
or
movsb
aas
jno
sbb
ja
insl
add
dec
xor
movsb
icebp
cmp
out
and
cltd
daa
jge
jecxz
cwtl
pop
enter
inc
add
add
xor
lock
out
addr16
das
cmc
pop
sub
mov
pop
and
mov
add
ljmp
fcoml
sbbl
push
idivl
inc
add
cmp
pop
mov
xchg
xchg
insl
mov
imul
adc
inc
add
pop
xchg
inc
add
out
add
push
cmp
mov
out
lcall
xchg
push
fsubs
add
push
xorl
pop
adc
jns
xor
add
iret
roll
adc
movsb
xor
je
xor
xchg
loop
cmp
lods
push
loope
push
ds
lods
ret
pusha
add
pop
add
pop
addb
out
dec
jecxz
add
in
popf
shrl
xchg
lret
or
lods
mov
sub
mov
mov
pop
data16
mov
pop
test
add
jo
enter
lcall
lret
mov
lret
pop
ljmp
xchg
call
fucomip
repz
xchg
inc
add
mov
xor
jmp
pop
pop
loop
ret
sub
cmpsl
je
add
bound
xchg
sub
lods
fs
cli
xor
lret
std
cwtl
jnp
xor
das
sbb
loop
bound
lahf
add
jle
or
jecxz
adc
ljmp
fcmovu
jae
xlat
sub
inc
add
add
icebp
ss
jge
aaa
decb
sbb
jno
and
cs
pop
int3
or
dec
jnp
mov
and
jne
xor
add
daa
js
mov
add
pop
pop
dec
xlat
pusha
add
add
mov
arpl
ds
mov
icebp
mov
rclb
dec
mov
inc
mov
cld
in
ljmp
sti
mov
dec
xchg
lods
push
dec
xor
mov
lret
add
out
dec
pop
lahf
lahf
mov
xchg
outsl
out
cmp
popa
loopne
lcall
push
and
cwtl
lret
mov
pop
fwait
push
pop
fisttpll
sahf
or
iret
and
popf
add
ror
flds
inc
add
ja
pushf
lods
divl
dec
ja
jne
adc
xchg
jl
jae
dec
xchg
shl
and
fnstcw
testb
xor
cltd
xchg
adc
fsts
mov
cmpl
add
dec
lods
frstor
sub
inc
add
into
arpl
sahf
jl
in
inc
sbb
sbb
icebp
addb
jge
pop
mov
pop
scas
scas
sbb
add
ret
out
xor
fistpl
cmpsb
mov
fistpl
in
mov
sub
push
push
cld
movsb
out
ljmp
test
xor
sub
test
dec
imul
nop
sub
sbb
push
jecxz
into
lods
cmp
add
cld
xor
out
add
ret
cmp
sub
inc
add
or
adc
out
popl
cmc
pushf
dec
stos
or
int
jns
cli
js
mov
lahf
pusha
add
leave
inc
add
sahf
sbb
sbb
add
popf
jne
enter
mov
adc
addb
scas
sbb
mull
push
dec
mov
cmpsl
and
mov
and
movsb
jbe
mov
dec
jecxz
add
iret
in
loope
dec
nopl
add
add
cltd
pop
xchg
sbb
mov
sub
xchg
outsb
leave
push
leave
sti
mov
jae
xlat
addb
sbb
mov
insl
dec
sahf
fidivs
add
out
fs
incb
xchg
and
xchg
push
mov
sti
repz
int
das
xchg
mov
add
mov
gs
pop
fwait
xchg
in
add
dec
sbb
jmp
add
pop
push
fidivrl
or
ret
out
mov
scas
add
dec
movsb
ja
int3
pop
arpl
inc
add
outsl
pop
push
push
ja
jmp
addb
mov
push
and
inc
add
sub
and
loopne
add
and
insl
and
cmp
movsl
add
mov
add
xchg
xor
add
add
ret
add
lds
mov
or
push
push
mov
push
in
pusha
add
in
lds
fs
jnp
outsl
out
pop
and
pop
cltd
roll
repnz
sti
sbb
adc
outsl
dec
inc
xchg
pop
mulb
mov
add
push
addb
add
and
pusha
add
mov
ret
mov
xchg
pop
mov
hlt
in
addr16
push
add
mov
fisubrl
add
nop
jl
inc
add
push
movsl
jle
add
push
fimuls
mov
stos
repnz
lods
jbe
add
push
pop
lods
dec
lods
push
lods
mov
add
js
das
mov
aam
not
clc
add
jmp
sbb
push
adc
adc
dec
pop
mov
mov
add
les
or
dec
cwtl
fistps
add
dec
jecxz
aaa
mov
ficompl
add
fadds
xor
push
add
fistpl
ret
cwtl
mov
inc
fisubrl
add
test
cmp
sbb
je
xor
adc
repnz
dec
adc
inc
add
mov
andl
jo
mov
cmpsw
adc
and
out
dec
sbb
mov
stos
lahf
sbb
cmpsb
xorl
cmpsl
data16
movsl
dec
les
cmp
movsb
adc
xchg
xor
sbb
aas
jmp
mov
and
jb
xor
add
mov
int
sub
es
jbe
sub
add
stc
iret
sub
sub
push
repz
dec
int
leave
dec
std
aam
cli
jge
clc
mov
mov
mov
aad
jb
int3
pop
lea
sub
pop
in
rcrl
dec
inc
cmp
mov
jne
icebp
xchg
mov
cmpsl
push
dec
jecxz
pop
lret
insl
imul
insl
cmp
pop
mov
cmp
sub
sub
jge
imul
add
insl
push
rcrl
mov
sbb
mov
jp
xchg
xor
icebp
mov
inc
sahf
sbb
test
lea
cs
jp
rorl
xchg
cmp
insl
mov
sbb
dec
andl
inc
add
and
pop
rcrb
add
nop
or
call
mov
adc
add
sbb
fbstp
fs
jnp
adc
incb
push
or
mov
or
insb
or
xor
addb
dec
pop
popf
sbb
out
and
add
pop
add
stos
push
jg
add
jne
inc
jl
in
inc
jl
mov
fcoml
add
dec
push
aam
and
sbb
outsl
out
divl
xor
push
ret
int3
mov
xor
loopne
mov
mov
push
add
ds
je
push
andl
pop
js
in
xor
dec
leave
ss
lret
out
js
fistpl
fneni(8087
mov
cmc
inc
sbb
sbb
ja
ret
movhps
enter
sub
sub
pop
pushf
daa
pop
pop
cmp
xchg
aas
jnp
je
push
iret
mov
pop
jmp
add
or
mov
fstps
gs
push
loop
les
in
xor
jns
mov
or
mov
add
xor
cmp
scas
push
icebp
jns
in
jmp
sub
outsl
lds
mov
mov
enter
xor
jae
cld
in
mov
loopne
movb
inc
add
pop
sub
add
lret
int3
xchg
sbb
add
pop
xchg
clc
daa
addb
add
lret
testl
mov
in
daa
pushf
cmc
cmpsb
pop
inc
idivw
add
add
mov
inc
fwait
adc
sbb
xor
scas
cmp
ljmpw
sub
mov
addb
lock
add
je
mov
mov
cli
jl
adc
inc
add
adc
inc
add
popa
push
pop
negl
mov
sub
movsb
xchg
mov
jp
lods
in
aas
mov
add
ss
bound
ds
fcoms
add
inc
add
fucomip
mov
in
add
outsb
pop
push
xchg
adc
insb
sbb
inc
pushl
mov
mov
out
loopne
add
rcll
inc
stc
pushf
test
dec
jb
add
fcomps
xchg
xchg
jo
ja
filds
and
cld
xchg
inc
cmp
cmp
gs
dec
sahf
das
loop
inc
in
mov
jge
or
mov
shlb
cmp
enter
inc
add
arpl
sbb
add
push
mov
ljmp
dec
push
loopne
push
pop
fnstsw
mov
gs
mov
divl
jp
xchg
cli
xchg
insl
mov
iret
roll
pop
mov
call
push
pushf
sub
mov
imul
outsb
xchg
pop
mov
push
add
arpl
mov
iret
and
add
or
inc
add
mov
in
mov
in
push
fdivs
push
xor
rcrb
pop
pop
enter
sbb
stc
ret
roll
shl
adc
out
cwtl
cmp
add
cmp
fstp
out
stos
shll
mov
out
iret
pushl
cmpsl
pop
jp
sbb
and
popl
add
popf
jg
sub
mov
adc
jecxz
or
loope
ja
jecxz
cli
sub
push
add
mov
sbb
ds
inc
add
cmpsl
jo
add
fiadds
imul
sub
cmp
sub
xlat
mov
add
or
daa
pop
mov
setne
xchg
stos
cs
shlb
inc
pop
clc
cwtl
and
rolb
leave
rcr
cld
mov
sti
mov
inc
fsubr
xchg
mov
jp
jns
in
int3
rolb
ds
js
add
mov
sbb
add
outsl
sbb
xchg
pop
pop
mov
sbb
xor
out
lret
sbb
cmpsl
clc
pop
mov
jb
add
addb
shll
cmp
int3
mov
arpl
sti
add
loope
add
imul
mov
mov
jb
in
mov
inc
add
jl
roll
adc
add
xchg
pop
or
addb
push
movb
stos
out
mov
sub
dec
push
jp
add
mov
jns
in
mov
xor
movb
mov
es
iret
cwtl
pop
sbb
int
frstor
mov
adc
mov
add
mov
fildl
cs
inc
jl
jns
sub
ds
roll
add
aam
dec
pop
addr16
mov
ja
imul
mov
repz
add
push
out
xchg
inc
inc
clc
jl
jecxz
and
adc
test
shrl
pop
mov
add
imul
scas
pushf
dec
xchg
ficoml
cmp
inc
add
mov
les
push
jecxz
shlb
ljmp
movsl
and
or
das
loopne
add
addb
dec
outsl
mov
mov
dec
cmpsb
mov
push
jg
fnstcw
stos
push
or
or
add
stos
sbb
in
lret
push
cmpsb
push
dec
xchg
jno
dec
out
and
stos
jae
cmpsl
push
sbb
enter
sbb
xchg
fimull
push
adc
rcll
mov
add
xchg
push
aam
imul
mov
js
and
inc
add
dec
jmp
dec
lahf
daa
fildll
dec
dec
stc
xor
dec
imul
lea
clc
aas
fidivrl
push
test
imul
xchg
jp
xor
push
xor
pusha
add
add
cld
aad
add
sub
xor
in
xchg
xor
rclb
push
mov
pusha
add
xchg
icebp
push
add
fimull
jne
pop
push
es
push
lcall
mov
add
push
add
pop
out
scas
sbb
sbb
push
divl
popa
pusha
add
cmpsl
sub
xchg
push
pushf
lcall
out
add
pop
cmc
leave
push
xorl
ret
add
into
gs
add
std
adc
sub
add
lods
dec
jbe
add
push
ja
mov
adc
and
dec
gs
add
in
rolb
fisubl
and
xor
dec
pop
push
sbb
add
stc
lock
ficomps
shrb
ljmp
lcall
inc
shrl
loop
lret
xor
sub
arpl
sub
ret
mov
ret
cli
xlat
jl
add
add
jo
in
out
sbb
sahf
ljmp
sub
add
data16
add
add
outsl
addr16
inc
pop
rcll
mov
jb
fs
cmp
cmp
jns
dec
loopne
jbe
mov
add
xchg
push
lret
in
jmp
pop
jnp
int
pop
lock
fimuls
std
cmp
xchg
stos
lods
test
jno
imul
test
jl
fs
dec
and
push
les
addb
or
mov
and
add
ret
add
adc
xchg
cmp
les
hlt
imul
js
and
and
push
lods
fistpl
dec
xor
sub
aaa
mov
xchg
mov
fisttpl
lcall
or
int
add
mov
fbstp
rolb
dec
sti
sbb
dec
xchg
into
pop
imul
xchg
lret
ljmp
daa
ss
test
mov
out
leave
int3
aas
addb
add
stos
jmp
sub
addr16
lret
lret
addr16
push
cmp
and
dec
mov
push
fnstcw
jno
cmp
xchg
dec
pop
jl
das
addr16
xchg
hlt
pop
or
ret
pusha
add
arpl
lahf
jmp
outsl
call
mov
mov
call
add
add
and
mov
pushf
outsb
and
inc
ret
add
mov
aaa
push
add
add
pop
dec
daa
lds
fcos
out
mov
stc
push
lcall
sbb
mov
push
movsb
add
cld
jmp
out
pushf
je
std
xorl
iret
fcompl
pop
popf
fstpt
enter
xor
mov
sbb
mov
movsb
sub
jo
bound
out
xchg
cld
xchg
mov
add
in
xchg
fcmovbe
mov
ljmp
pop
andl
cltd
scas
xor
std
cmp
cmp
popf
push
testl
mov
pushf
dec
daa
sahf
repnz
out
cmc
pop
adc
sar
mov
adc
rcl
pushf
mov
jle
movl
pop
ss
mov
aas
aad
pop
sbb
je
sbb
ds
mov
xchg
insb
cld
int
mov
and
cli
mov
in
call
movsl
aad
mov
mov
push
inc
jg
xor
jb
xor
int
pop
add
add
push
ret
mov
mov
in
ljmp
lods
dec
cwtl
in
sub
mov
cwtl
aam
adc
mov
rol
bound
enter
add
cmp
pop
clc
enter
stc
pop
or
mov
out
push
ljmp
sbb
jmp
cmp
add
lahf
clc
adc
in
popf
cmpsl
adc
sub
leave
and
pop
mov
gs
cmp
dec
pop
in
fcmovu
add
aas
xchg
rorb
pop
inc
fs
movsl
jge
repnz
mov
or
mov
shlb
jb
in
arpl
adc
xlat
movsl
jbe
mov
jns
push
inc
ljmp
cmovns
cmp
mov
adc
jg
jne
andl
push
xor
add
daa
sbb
das
or
mov
int
jmp
dec
movsl
mov
xchg
in
popa
mov
movb
test
addr16
adc
cmp
add
cwtl
and
lds
pop
mov
and
loop
mov
out
in
movl
adc
pop
mov
add
insl
lock
andl
sub
xor
ds
ja
stc
or
add
mov
movsb
xchg
enter
xchg
adc
sub
xor
test
gs
xchg
sahf
adc
cmp
add
lret
arpl
push
inc
add
mov
cmp
jno
movsb
lret
dec
push
pop
aas
movsb
stc
out
jmp
add
lea
into
je
add
daa
push
mov
add
movb
pop
je
lret
pop
es
movsb
mov
xchg
sbb
shr
cmp
mov
add
cli
adc
jno
add
pop
pop
ss
mov
xchg
mov
movsb
add
jbe
xchg
or
add
ret
inc
jbe
mov
mov
adc
nop
test
add
add
mov
xor
outsb
and
sub
adc
cmc
bound
sarl
xor
mov
repz
xchg
jp
adc
sbb
add
jge
cmc
dec
movsb
leave
mov
add
dec
jae
xchg
fbld
xchg
dec
lods
fildl
outsl
out
adc
jmp
dec
lock
dec
mov
pop
xor
cmp
add
cmp
negb
jns
movsb
jbe
leave
mov
add
adc
fbstp
ljmp
xchg
insl
mov
daa
mov
mov
xchg
fisttpl
arpl
inc
add
ljmp
xchg
add
add
shr
pop
rcll
mov
inc
add
pop
jmp
xor
inc
mov
icebp
adc
movsb
adc
js
and
sub
hlt
sbb
pusha
add
jo
mov
lds
add
fists
jns
nop
jle
mov
fdivs
and
ficompl
out
adc
test
cmpsb
das
or
popf
lea
add
add
enter
in
test
push
mov
adc
lcall
pop
adc
and
pop
bound
test
fidivrl
scas
ret
sbb
mov
mov
repz
lret
cmpsb
aad
sub
cmp
ljmp
jns
sub
mov
in
iret
push
mov
rcrl
or
ret
out
xchg
stos
pushf
call
and
dec
in
sbb
lds
lods
push
out
clc
cld
xchg
movsb
dec
push
add
mov
add
and
test
testb
sbb
add
xor
adcl
aad
jnp
push
addb
ss
add
adc
add
shll
loop
pop
movb
jne
lods
xchg
ljmp
cli
jp
cmp
and
inc
or
dec
cwtl
pop
jbe
xor
or
nop
sbb
cmp
push
int3
dec
jl
fwait
sbb
lcall
xchg
shll
pop
mov
sbb
fwait
sub
test
repnz
mov
lds
push
ret
mov
mov
test
fcmovne
mov
scas
jns
fimuls
jg
ljmp
xor
nop
or
dec
in
nop
sahf
cmp
push
fldenv
loope
inc
add
int3
sub
sub
or
mov
lods
pushf
push
pop
fs
add
inc
xor
push
stos
fwait
icebp
arpl
xchg
imul
add
or
or
jb
xchg
cmc
mov
and
add
or
add
push
add
test
add
divl
mov
test
test
cmp
fiadds
daa
xchg
jp
popf
out
sti
dec
xchg
mov
inc
or
add
pop
mov
ljmp
adc
add
add
addb
mov
xchg
jl
and
add
push
outsl
xchg
mov
cwtl
fcmovnbe
ret
dec
fldenv
ss
dec
sub
mov
and
sbb
push
xor
and
mov
mov
rclb
or
mov
aas
aad
or
add
imul
outsb
jns
inc
add
cmc
ds
frstor
test
inc
cs
add
push
sbb
sar
popa
gs
jl
data16
cltd
pop
popl
jb
clc
mov
addb
xchg
dec
sbb
sbb
jg
fwait
xchg
jae
jno
pop
pusha
add
sbb
lods
fcmovb
xchg
les
sub
mov
dec
in
test
mov
add
dec
mov
xor
fisubrs
shll
lret
aam
add
ret
adc
sbb
cmp
in
fninit
inc
add
fstl
push
pop
loope
inc
inc
or
lods
sbb
add
xchg
clc
in
push
cmp
mov
xor
addr16
cmp
mov
push
cmp
in
add
in
mov
inc
add
push
adc
xchg
lods
mov
jo
sub
mov
lock
sar
pop
dec
je
stos
cmp
jg
and
outsl
xchg
dec
or
cmp
inc
movb
sarl
sbb
push
add
aam
mov
dec
popf
xor
push
pop
mov
packsswb
outsl
in
jmp
leave
lock
mov
shl
cwtl
cmp
push
enter
add
dec
je
push
in
jae
pop
and
loopne
addl
frstor
pusha
add
movb
sub
mov
addb
xor
dec
sub
add
jno
mov
and
jg
cmp
mov
out
pop
outsb
mov
jae
fnstcw
stos
outsl
call
cli
sbb
pusha
add
popa
adc
mov
adc
or
sbb
mov
fimuls
cmp
fwait
xchg
cmp
push
jl
test
push
into
rclb
pop
lock
add
sbb
vpmullw
ret
out
xor
bound
rolb
cwtl
jl
add
mov
neg
call
test
jmp
add
dec
std
clc
aam
outsb
and
sbb
or
mov
pop
dec
xor
xor
sbb
and
push
add
sbb
sub
out
outsb
lret
outsl
rorl
xchg
aam
add
sbb
scas
pop
mov
test
adc
add
jae
or
add
frstor
add
lds
idivb
jns
clc
and
adc
fs
push
sarb
pop
mov
pop
js
mov
int
add
dec
cmpsl
push
push
int
ret
inc
cltd
aam
add
add
movsl
in
insb
stos
inc
xchg
push
push
movaps
mov
jl
addb
repz
fsubr
sbb
std
mov
inc
pop
inc
add
add
filds
es
rcll
pmulhw
loopne
xor
lret
popa
test
fists
les
loope
jle
and
stos
pop
add
lret
fs
jo
sahf
jae
out
sub
icebp
fs
lret
stc
dec
inc
jae
mov
inc
cmpsb
inc
mov
pusha
add
dec
das
fcoml
adc
rcrl
mov
add
adc
cld
push
mov
mov
inc
adc
test
add
or
cmp
cmp
movsl
stc
jno
mov
jae
in
dec
inc
adc
mov
push
cwtl
adc
out
lret
test
pop
push
ret
sbb
addb
push
mov
sub
lret
inc
jg
push
add
loope
mov
roll
add
inc
add
mov
jmp
push
mov
cmp
xor
mov
idiv
out
cld
pop
add
testb
leave
dec
cmpsb
xor
or
in
rorl
ljmp
pop
out
out
clc
xor
inc
dec
pop
xchg
jo
push
sub
sbb
lahf
jnp,pt
xchg
xor
jl
or
add
mov
int3
lods
ret
leave
mov
sti
imul
cld
addr16
roll
add
add
addb
mov
xchg
and
xrelease
jg
sub
jl
jg
lret
gs
lds
and
or
jae
adc
in
call
mov
inc
add
xor
imul
mov
jle
lock
add
movb
sub
shlb
sub
out
sub
jne
push
push
mov
ja
cs
stc
jmp
and
in
cmp
add
pop
mov
xchg
bound
into
andl
adc
mov
es
sub
add
jecxz
das
addb
mov
imul
gs
and
cmpsl
inc
sar
adc
add
mov
xchg
sub
inc
pop
xor
stc
pusha
add
negl
push
mov
shll
inc
add
push
sbb
scas
imul
sub
lods
jbe
scas
and
add
adc
and
ret
sbb
lret
adc
out
sbb
lahf
push
mov
mov
mov
and
sti
icebp
addb
sub
lea
add
push
pop
mov
add
les
loop
fimull
lret
bound
adc
cli
cmp
rorl
xorl
mov
xchg
jbe
mov
iret
pop
call
loopne
add
mov
stos
xchg
cli
pop
pop
xchg
loopne
xchg
loope
pop
cmp
lret
mov
push
add
aad
dec
pop
lret
push
and
add
sbb
xor
pop
jnp
scas
ljmp
call
lods
sti
jmp
inc
add
jmp
jnp
gs
bound
call
ret
inc
jge
jl
push
mov
jnp
pop
stos
sbb
cmp
pop
cwtl
jno
jne
ret
add
push
dec
int3
xchg
and
dec
add
add
sbb
and
sbb
ds
xor
inc
add
arpl
inc
or
add
xchg
imul
and
adc
cs
inc
rol
addb
sub
xor
fldl
jl
jo
add
and
xor
test
mov
adc
lcall
inc
add
rcll
push
inc
add
out
or
out
sti
daa
xchg
adcl
addb
xchg
es
sub
lret
lods
nop
icebp
push
xchg
mov
add
xor
sbb
add
jp
loopne
fstl
mov
xchg
pop
cmpsb
dec
enter
insb
pop
shr
mov
imul
dec
push
lret
dec
jle
movsb
mov
or
add
lods
pop
mov
fld
add
add
rolb
jo
icebp
pop
fists
fnstenv
les
sbb
add
cli
test
cmp
cmp
lods
sti
test
push
mov
fcmovnu
inc
add
icebp
push
add
add
repnz
mov
pop
push
jo
mov
rolb
xchg
add
mov
mov
and
dec
repnz
in
xchg
mov
loopne
and
pop
cmc
in
and
rorl
and
inc
add
ja
mov
lds
nop
inc
add
xchg
and
jge
sbb
pop
mov
popf
bound
testl
popf
adc
cmpsb
jmp
pop
pop
mov
xor
je
std
int3
addb
pop
push
xchg
mulb
cmpsb
or
jg
mov
and
add
fisttpl
jb
mov
sbb
sub
insb
jmp
lret
aam
and
lea
cmp
cmp
dec
or
push
popa
lock
jae
xchg
cmpsb
addr16
jmp
jmp
hlt
lods
js
aad
jae
jg
into
mov
add
iret
das
icebp
das
mov
dec
movsl
out
mov
imul
cmp
enter
jo
or
sahf
sbb
and
movb
test
mov
add
and
and
add
out
adc
in
add
popf
and
movb
in
add
js
hlt
sti
pop
mov
notl
xchg
dec
ss
adcl
mov
cld
inc
cwtl
push
lods
push
addr16
and
ret
pusha
add
popf
dec
push
lret
xlat
outsb
mov
popf
pop
out
xchg
cli
push
arpl
xor
push
jbe
bound
stos
inc
bnd
sahf
fimull
mov
push
flds
inc
add
leave
ja
sub
int
adc
scas
fnsave
and
jne
jne
xchg
and
mov
add
add
or
inc
add
push
add
jmp
ret
mov
inc
add
adc
push
sahf
or
dec
pusha
add
stos
dec
mov
imul
pop
bound
sbb
mov
add
lods
jne
out
int
sub
sub
ss
sbb
and
repnz
cmp
add
xchg
test
mov
inc
add
arpl
sbb
outsl
and
adc
imul
and
mov
shlb
repz
fisubrl
mov
xchg
pop
jmp
and
mov
jbe
repnz
nop
cld
jmp
inc
pop
test
insb
mov
stc
nop
jb
jnp
jecxz
add
jb
push
add
mov
nop
cld
jmp
repz
add
in
add
les
int3
dec
nop
cld
jmp
add
add
scas
mov
stc
nop
jb
jecxz
mov
mov
add
stc
nop
jb
fs
rolb
outsb
mov
push
mov
xchg
ret
add
sbb
cmp
nop
jb
push
add
test
jge
stc
nop
jb
add
mov
add
inc
mov
mov
xchg
ret
cld
add
stc
nop
jb
mov
add
add
mov
push
add
push
stc
nop
jb
mov
cld
mov
inc
add
decl
push
mov
xchg
ret
inc
push
add
pop
nop
cld
jmp
add
into
inc
sbb
jmp
xorb
add
mov
xchg
ret
repz
pop
out
mov
stc
nop
jb
stos
jnp
push
enter
nop
cld
jmp
adc
add
add
lods
in
lret
and
nop
jb
add
adc
ret
stc
nop
jb
add
push
add
sbb
xor
add
stc
nop
jb
pop
sub
xor
add
stc
nop
jb
add
mov
add
inc
push
ja
push
stc
nop
jb
lret
into
cmpsl
jno
dec
sbb
add
mov
add
add
in
mov
xor
ret
push
mov
jp
daa
jg
cmp
cli
mov
sub
add
add
adc
add
stc
nop
jb
add
cmpsl
add
add
cwtl
pusha
stc
nop
jb
add
stos
mov
push
mov
pop
jl
stc
nop
jb
add
push
push
push
mov
xchg
ret
dec
add
add
je
stc
nop
jb
add
inc
add
push
jno
mov
nop
cld
jmp
push
jmp
lds
add
std
call
lcall
add
popa
add
nop
jb
add
scas
add
cmpsb
test
stc
imul
stc
nop
jb
fs
add
cli
imul
stc
nop
jb
add
add
lods
jno
lahf
call
nop
cld
jmp
mov
add
and
xchg
lcall
nop
jb
addr16
inc
flds
enter
xorb
incl
pop
jmp
add
aaa
in
xchg
push
mov
xchg
ret
adc
add
loopne
push
push
mov
xchg
ret
add
scas
add
add
stc
nop
jb
ror
push
add
nop
sub
mov
jb
shrb
mov
xchg
ret
add
add
arpl
mov
add
nop
cld
jmp
dec
adc
push
mov
add
mov
add
add
cmp
cld
jmp
mov
mov
shrl
mov
xchg
ret
add
fs
dec
or
add
nop
jb
add
add
jb
and
add
inc
push
mov
xchg
ret
add
dec
call
stc
nop
jb
arpl
data16
add
add
lds
jmp
and
iret
mov
stc
nop
jb
ss
test
push
mov
xchg
ret
add
in
jo
inc
push
mov
xchg
ret
add
loopne
push
push
cmpsb
icebp
sahf
mov
stc
nop
jb
mov
push
cli
leave
nop
cld
jmp
shl
add
cmpsl
mov
add
nop
cld
jmp
mov
jnp
scas
push
push
mov
xchg
ret
adc
add
mov
mov
stc
nop
jb
enter
add
in
add
add
nop
cld
jmp
enter
push
push
mov
xchg
ret
add
add
add
or
xor
add
stc
nop
jb
add
inc
stc
nop
jb
in
jecxz
lods
add
frstor
nop
jb
add
fs
add
xchg
nop
cld
jmp
add
add
adc
pop
mov
stc
nop
jb
push
dec
lods
pop
mov
repz
mov
xchg
ret
lods
pop
lods
add
add
add
add
add
test
cld
jmp
add
add
add
mov
nop
jb
mov
and
hlt
outsl
push
stc
nop
jb
add
pop
test
add
jle
push
mov
xchg
ret
jcxz
add
test
add
stc
nop
jb
add
jno
mov
orb
add
add
out
add
stc
nop
jb
add
jecxz
add
adc
push
mov
xchg
ret
in
cmpsl
pop
lret
add
push
push
mov
xchg
ret
adc
add
jns
enter
jns
add
add
loopne
loopne
arpl
stc
nop
jb
arpl
stos
mov
add
sbb
stc
nop
jb
mov
sbb
adc
nop
cld
jmp
jecxz
add
lds
enter
sbbb
add
in
sbb
test
stc
nop
jb
mov
mov
stc
nop
jb
repz
add
in
add
stc
nop
jb
add
add
lea
add
stc
nop
jb
add
add
sti
add
add
add
jmp
adc
cmpsb
clc
and
push
mov
xchg
ret
add
cmp
mov
xchg
ret
loope
add
fisttps
cmc
inc
add
repz
inc
adc
add
nop
jb
add
sbb
inc
and
nop
jb
jnp
adc
and
nop
cld
jmp
loopne
add
and
js
test
and
add
nop
jb
mov
add
nop
jb
add
add
and
nop
cld
jmp
add
pop
xor
sbb
scas
mov
nop
cld
jmp
pop
add
add
popf
mov
stc
nop
jb
inc
adc
adc
nop
cld
jmp
xor
add
add
adc
les
popa
or
test
add
nop
jb
pop
and
mov
insb
push
stc
nop
jb
add
test
test
outsl
lea
nop
cld
jmp
bound
add
add
fisubrs
mov
jb
push
add
mov
push
mov
xchg
ret
mov
xor
lods
add
xchg
ret
mov
cmp
add
nop
jb
jecxz
test
pop
stc
nop
jb
mov
loopne
repz
xchg
cmp
jb
addr16
cld
inc
add
ficompl
nop
jb
lds
jno
add
sub
push
mov
xchg
ret
add
xor
je
stc
nop
jb
adc
iret
lods
push
mov
xchg
ret
add
push
push
mov
xchg
ret
add
add
stc
nop
jb
add
in
inc
push
mov
xchg
ret
mov
dec
add
push
mov
xchg
ret
add
push
fs
add
mov
mov
stc
nop
jb
lods
ss
add
mov
xchg
ret
repz
cmpsl
sub
nop
jb
add
add
add
stc
nop
jb
sbb
arpl
push
add
or
movsb
stc
nop
jb
loopne
push
mov
je
nop
cld
jmp
stos
adc
jb
scas
cld
pop
loope
add
cmp
stc
nop
jb
loopne
add
add
push
mov
xchg
ret
add
ror
nop
cld
jmp
jnp
add
push
shl
bnd
cmpl
nop
cld
jmp
jmp
push
and
repz
movzwl
nop
cld
jmp
push
add
add
cli
nop
nop
cld
jmp
repz
cld
inc
add
add
pop
push
mov
xchg
ret
stos
mov
add
add
das
push
mov
add
add
add
add
jmp
push
filds
xchg
ret
add
add
mov
xor
add
stc
nop
jb
cld
and
xchg
decb
cld
jmp
test
jecxz
add
add
idiv
call
ljmp
stc
nop
jb
jecxz
in
cld
jnp
ljmp
stc
nop
jb
push
add
stc
nop
jb
repz
jmp
subb
add
add
push
outsb
mov
push
mov
xchg
ret
scas
add
pop
out
mov
stc
nop
jb
in
xchg
sbb
nop
jb
xor
in
push
in
dec
lea
imul
nop
cld
jmp
jmp
adc
stos
sbb
mov
xchg
ret
fstpl
clc
stc
nop
jb
ljmp
nop
jb
add
scas
add
out
mov
stc
nop
jb
add
add
pop
push
mov
add
add
sbb
push
outsl
fwait
cmp
lret
mov
xor
stc
nop
jb
add
sbb
cmpl
jmp
add
push
add
rep
stc
nop
jb
add
mov
push
add
add
add
cmpsb
jo
pushl
stc
nop
jb
add
mov
es
mov
xchg
ret
add
add
mov
stc
nop
jb
in
jmp
je
stc
nop
jb
add
inc
add
mov
push
mov
xchg
ret
cld
add
call
add
add
add
clc
mov
stc
nop
jb
add
mov
popf
nop
cld
jmp
dec
add
adc
mov
xchg
ret
bound
jecxz
test
nop
cld
jmp
add
ss
inc
test
mov
nop
cld
jmp
arpl
mov
add
jne
stc
nop
jb
push
xor
mov
stc
nop
jb
add
add
xchg
xchg
lods
add
stc
nop
jb
add
add
lea
xor
mov
xchg
ret
fnsave
mov
mov
add
add
add
lds
nop
cld
jmp
dec
loopne
mov
ficoms
nop
jb
jecxz
add
ljmp
jb
dec
dec
add
add
push
aad
push
push
mov
xchg
ret
jno
jno
ss
nop
cld
jmp
mov
add
jae
popa
nop
cld
jmp
stos
jmp
addr16
arpl
stos
push
mov
xchg
ret
inc
adc
add
ss
add
cmp
inc
adc
nop
jb
pop
inc
test
add
add
nop
jb
lods
add
and
cld
jmp
loopne
loopne
adc
bound
or
movsb
stc
nop
jb
add
lds
bound
sbbb
add
add
test
adc
add
push
mov
xchg
ret
scas
add
adc
inc
sub
nop
jb
add
add
dec
in
mov
stc
nop
jb
add
lods
std
add
push
mov
xchg
ret
add
addr16
mov
push
mov
xchg
ret
into
lds
test
add
nop
jb
sub
add
pop
fnstcw
stc
nop
jb
addr16
mov
stc
nop
jb
add
addr16
sar
nop
jb
repz
test
sarl
mov
push
mov
xchg
ret
add
sbb
adc
add
nop
cld
jmp
add
add
add
rep
nop
cld
jmp
add
add
inc
lock
nop
jb
add
adc
push
mov
jb
loopne
add
mov
imul
sbb
add
inc
mov
in
add
dec
add
stc
nop
jb
add
loopne
test
xor
stc
nop
jb
jmp
add
lea
stc
nop
jb
push
add
shr
pop
stc
nop
jb
inc
jecxz
rolb
test
xchg
jo
and
stc
nop
jb
sbb
add
push
pop
mov
push
mov
xchg
ret
enter
movsl
xorl
pop
filds
xchg
ret
add
pop
lret
add
nop
cld
jmp
push
scas
pop
add
ljmp
xor
stc
nop
jb
loope
add
inc
add
push
stc
nop
jb
mov
add
movb
push
mov
dec
add
push
mov
outsb
add
add
loopne
stc
nop
jb
loopne
adc
inc
mov
cld
jmp
test
push
stos
add
add
add
add
add
nop
jb
add
js
jle
nop
cld
jmp
add
mov
adc
jb
add
dec
enter
or
nop
cld
jmp
pop
cmpsl
add
add
push
jecxz
xchg
cmpsb
add
nop
jb
pop
push
add
dec
add
pushl
stc
nop
jb
add
cmpsl
add
iret
xchg
stc
nop
jb
addr16
repz
add
rep
nop
cld
jmp
add
add
add
add
stc
nop
jb
in
arpl
mov
push
mov
xchg
ret
add
mov
add
nop
jb
lea
test
stc
nop
jb
xor
xchg
cmpl
push
arpl
jb
inc
push
mov
xchg
ret
mov
out
add
push
mov
xchg
ret
shr
lret
add
nop
jb
inc
add
repz
nop
jb
add
pop
jecxz
rolb
stc
nop
jb
add
loope
fstl
xchg
stos
lea
push
mov
xchg
ret
add
lcall
inc
add
inc
add
pusha
stc
nop
jb
mov
lods
push
flds
pop
jmp
add
add
pop
mov
stc
nop
jb
repz
push
push
mov
xchg
ret
xor
add
loopne
cmp
dec
cmp
nop
jb
add
add
sbb
mov
stc
nop
jb
xor
sub
call
stc
nop
jb
jno
shlb
mov
and
lods
dec
push
mov
xchg
ret
add
jecxz
stc
movswl
stc
nop
jb
scas
push
ror
lahf
mov
stc
nop
jb
add
push
cmc
fwait
add
stc
nop
jb
add
add
cmp
pause
cld
jmp
add
add
add
movsb
mov
jb
dec
add
add
fucomip
ljmp
loop
ljmp
jmp
stc
nop
jb
add
cld
idiv
cmp
nop
cld
jmp
add
add
es
nop
cld
jmp
add
flds
xchg
ret
add
add
add
insb
stc
nop
jb
sbb
inc
and
mov
xchg
ret
fldl
cmpsl
and
add
stc
nop
jb
add
lret
adc
sbb
push
mov
xchg
ret
lds
in
mov
sub
jb
push
mov
xchg
ret
mov
stc
nop
jb
add
sbb
jge
stos
stc
nop
jb
enter
repz
mov
stc
nop
jb
add
push
add
mov
or
push
mov
xchg
ret
loopne
adc
repz
jg
test
nop
jb
scas
in
mov
push
stc
nop
jb
add
pop
add
dec
pop
stc
nop
jb
test
repz
jnp
enter
push
mov
xchg
ret
add
push
jmp
gs
pop
push
nop
cld
jmp
repz
pop
dec
push
lods
iret
test
push
mov
xchg
ret
add
push
js
sbb
add
jno
add
add
adc
in
mov
push
mov
xchg
ret
into
add
push
lock
stc
nop
jb
push
repz
mov
jb
rclb
stos
add
aam
test
movsb
stc
nop
jb
addr16
bound
inc
outsl
xchg
push
mov
xchg
ret
add
lods
xor
call
stc
nop
jb
lret
rolb
pusha
add
lret
nop
jb
mov
add
jno
mov
nop
cld
jmp
add
loopne
add
sbb
stc
nop
jb
addr16
add
dec
mov
stc
nop
jb
add
push
add
adc
mov
xchg
ret
add
lea
add
or
jb,pt
nop
cld
jmp
add
fs
shll
sbb
stc
nop
jb
add
addr16
bound
sar
inc
add
arpl
inc
add
lods
add
addr16
jno
sbb
add
outsb
add
stc
nop
jb
add
add
sbb
insl
jae
nop
jb
add
add
adc
inc
add
add
add
test
add
push
mov
xchg
ret
add
fimuls
mov
push
stc
nop
jb
add
inc
add
or
movsb
add
add
jecxz
clc
push
push
mov
xchg
ret
loopne
add
rcl
mov
add
stc
nop
jb
add
addb
mov
nop
cld
jmp
sbb
dec
add
andb
add
add
add
into
jmp
nop
jb
add
add
sub
in
pop
add
add
out
xor
inc
add
and
push
add
push
mov
ret
lods
add
push
mov
xchg
ret
push
fldl
mov
add
nop
jb
in
add
add
xor
stc
nop
jb
in
lods
add
stc
nop
jb
mov
add
xor
add
add
stc
nop
jb
loopne
mov
add
mov
xchg
ret
add
add
mov
stc
nop
jb
add
fs
sbb
xor
inc
add
lods
pop
outsl
add
stc
nop
jb
adc
cmpsl
add
in
push
mov
lea
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
add
add
mov
jb
add
add
add
movl
stc
nop
jb
add
sbb
and
dec
sub
push
mov
xchg
ret
push
add
push
or
nop
jb
repz
add
scas
bound
sti
stc
nop
jb
add
add
add
sub
stc
nop
jb
test
add
pop
mov
stc
nop
jb
in
add
add
nop
jb
mov
add
dec
nop
cld
jmp
rol
dec
lods
add
sti
push
stc
nop
jb
mov
add
mov
aas
add
stc
nop
jb
add
pusha
push
mov
xchg
ret
add
lret
dec
cwtl
mov
stc
nop
jb
in
mov
jmp
adc
test
push
and
cmp
fistl
aas
jmp
and
sub
or
nop
jb
add
test
nop
cld
jmp
add
pop
dec
popf
push
push
mov
xchg
ret
push
lea
mov
add
nop
jb
add
mov
pop
jne
stc
nop
jb
lods
addr16
add
nop
jb
into
add
xor
mov
nop
jb
pop
add
add
test
add
push
push
mov
xchg
ret
push
add
add
mov
nop
cld
jmp
mov
jg
nop
cld
jmp
add
ljmp
and
nop
jb
repz
add
clc
stc
nop
jb
arpl
repnz
and
push
mov
xchg
ret
lods
push
add
mov
stc
nop
jb
add
test
or
add
nop
jb
cld
add
push
nop
cld
jmp
loopne
sbb
inc
add
and
nop
jb
add
adc
add
add
push
shll
movsb
icebp
inc
add
jecxz
add
sbb
popa
add
nop
jb
sbb
loope
sbb
jg
nop
cld
jmp
shl
add
jecxz
mov
stc
nop
jb
add
mov
stc
nop
jb
add
push
xor
mov
stc
nop
jb
jecxz
add
add
nop
jb
add
add
mov
xchg
ret
dec
add
test
decl
jmp
test
adc
add
sub
mov
xchg
ret
adc
bound
push
mov
xchg
ret
add
add
movzwl
nop
cld
jmp
add
stos
stc
nop
jb
add
add
add
add
jnp
jb
mov
out
dec
mov
stc
nop
jb
add
nop
mov
nop
jb
add
add
enter
xchg
neg
mov
stc
nop
jb
add
push
adc
mov
push
mov
xchg
ret
jnp
lea
je
stc
nop
jb
add
mov
jb
mov
add
sbb
mov
xchg
ret
add
inc
add
add
add
xor
inc
add
pop
and
cld
jmp
arpl
inc
add
lds
js
call
incl
jmp
mov
mov
xchg
ret
add
and
push
stc
nop
jb
mov
mov
jecxz
decl
push
mov
xchg
ret
add
jbe
shr
push
mov
xchg
ret
add
cmpsb
cmp
jb
inc
push
push
xor
sub
mov
xchg
ret
push
add
add
je
call
stc
nop
jb
pop
test
ljmp
pop
call
xor
cld
popa
stc
nop
jb
add
add
mov
nop
jb
sbb
push
mov
add
add
pushl
xor
cmp
jb
add
test
add
push
mov
xchg
ret
adc
inc
sbb
xchg
repz
add
mov
push
inc
add
add
stc
nop
jb
add
push
loopne
push
dec
add
add
mov
mov
cmpb
add
add
stc
nop
jb
lret
add
push
push
add
push
push
mov
xchg
ret
rolb
add
add
pusha
stc
nop
jb
ss
add
add
add
push
nop
cld
jmp
add
add
fs
add
nop
cld
jmp
test
loope
add
cmp
repz
mov
xchg
ret
repz
test
jp
push
mov
xchg
ret
push
dec
add
insb
mov
nop
cld
jmp
add
stos
cld
add
jb
add
add
xchg
pop
shl
stc
nop
jb
adc
cmpsl
add
fists
nop
jb
add
lods
call
subb
add
rolb
mov
cld
jmp
push
test
loopne
rolb
pop
mov
stc
nop
jb
xor
add
cmpsl
inc
lret
stc
nop
jb
mov
adc
mov
nop
cld
jmp
jnp
in
mov
add
std
push
push
mov
xchg
ret
add
add
mov
out
stc
nop
jb
add
jg
stc
nop
jb
jno
add
nop
jb
add
add
add
popa
stc
nop
jb
add
lods
into
mov
andl
orb
inc
fisttps
test
stc
nop
jb
add
stc
jmp
stc
nop
jb
ljmp
nop
jb
cmpsl
push
sbb
inc
pop
add
stc
nop
jb
sbb
push
add
frstor
pop
add
stc
nop
jb
add
mov
push
adc
cmp
jae
nop
jb
repz
fisttpll
test
nop
jb
addr16
fimuls
jb
arpl
add
add
cld
jmp
jecxz
add
add
adc
nop
jb
add
repz
int
stc
nop
jb
mov
sub
test
int
pop
jae
nop
jb
add
lret
add
cld
jmp
scas
fldl
sbb
add
mov
push
mov
xchg
ret
lods
mov
dec
add
stc
nop
jb
add
cld
into
add
jecxz
call
jmp
add
push
mov
xchg
ret
bound
add
adc
and
nop
cld
jmp
sbb
add
add
add
stc
nop
jb
push
fs
bound
lea
stc
nop
jb
add
add
in
or
nop
jb
push
push
loopne
push
int
inc
loopne
nop
jb
repz
add
push
stc
nop
jb
add
adc
jmp
repz
add
add
addr16
scas
inc
stc
nop
jb
add
sbb
jnp
add
mov
sub
nop
jb
cmpsl
pop
mov
sub
stc
nop
jb
add
add
add
nop
jb
add
add
jecxz
mov
push
mov
xchg
ret
lds
and
push
mov
xchg
ret
inc
loopne
movsl
add
jb
inc
and
push
xor
push
xorl
cmp
nop
jb
mov
imul
stc
nop
jb
mov
shrb
mov
xchg
ret
add
out
sbb
mov
xchg
ret
add
addr16
jb
push
push
mov
xchg
ret
cmpsl
jecxz
add
mov
stc
nop
jb
jmp
mov
push
mov
xchg
ret
adc
add
stc
nop
jb
dec
lods
in
test
inc
fs
mov
push
mov
xchg
ret
add
lea
movzwl
nop
cld
jmp
add
addb
pop
call
stc
nop
jb
jmp
push
je
push
stc
nop
jb
push
loopne
add
jg
stc
nop
jb
add
add
pop
sub
test
out
stc
nop
jb
push
jno
and
push
mov
xchg
ret
add
inc
movsb
fwait
lea
nop
cld
jmp
dec
add
add
push
lret
stc
nop
jb
add
bound
inc
and
pushl
stc
nop
jb
stos
rep
in
adc
arpl
mov
push
push
mov
xchg
ret
arpl
add
or
mov
xchg
ret
mov
int
stc
nop
jb
add
lret
add
in
rcr
pop
push
mov
xchg
ret
fs
add
aaa
mov
orb
incl
add
add
add
imul
jecxz
add
add
inc
add
xor
cmp
ret
add
jne
push
mov
xchg
ret
test
push
cmc
xchg
xchg
fnstsw
stc
nop
jb
addr16
ljmp
nop
jb
add
add
stc
nop
jb
lds
repz
sahf
push
stc
nop
jb
lds
addr16
cli
cmpl
nop
cld
jmp
push
add
jecxz
jl
movb
add
stc
nop
jb
xor
test
push
mov
xchg
ret
test
add
data16
push
mov
jl
inc
add
enter
mov
stc
nop
jb
push
push
pop
or
nop
cld
jmp
jmp
push
ljmp
inc
add
sbb
ret
stc
nop
jb
cmpsl
add
mov
dec
imul
cmc
pushl
add
mov
in
call
jnp
add
mov
xchg
ret
add
sbb
rolb
pop
jne
stc
nop
jb
add
cmpsb
sbb
jb
add
addr16
cli
call
stc
nop
jb
add
mov
add
stc
nop
jb
fldl
add
dec
add
stc
nop
jb
sub
popa
fs
cld
jmp
add
pop
push
mov
xchg
ret
lret
pop
xor
mov
jmp
adc
add
mov
lock
lret
in
stc
nop
jb
add
push
subl
push
mov
xchg
ret
add
outsl
mov
stc
nop
jb
mov
push
add
nop
jb
add
adc
mov
push
mov
xchg
ret
add
and
stc
nop
jb
test
add
mov
stc
nop
jb
adc
add
pop
stc
nop
jb
in
lods
xor
adc
in
add
mov
call
stc
nop
jb
sbb
fnstsw
stc
nop
jb
stos
xor
jmp
jmp
jp
nop
cld
jmp
add
popl
stc
nop
jb
push
add
insl
mov
stc
nop
jb
lea
fdivrl
lret
jmp
lods
add
scas
into
cmpsl
add
je
add
push
mov
xchg
ret
loope
add
push
mov
xor
in
mov
cmp
adc
mov
nop
cld
jmp
push
add
add
add
mov
jbe
nop
cld
jmp
add
inc
add
add
pop
push
mov
add
imul
pushf
push
mov
leave
add
add
add
add
movl
nop
cld
jmp
add
into
mov
push
stc
nop
jb
add
lea
push
stc
nop
jb
ljmp
mov
mov
add
nop
jb
add
inc
inc
jmp
nop
jb
pop
sub
add
push
ficoml
nop
jb
add
add
add
cmp
cld
jmp
jmp
adc
loope
mov
stc
nop
jb
add
pop
jecxz
mov
pop
stc
nop
jb
xor
lods
add
add
push
mov
xchg
ret
bound
add
add
add
push
mov
xchg
ret
cmpsl
add
lds
jne
push
mov
xchg
ret
test
adc
add
stc
nop
jb
cld
test
sbb
push
sbb
mov
jb
mov
add
subb
xor
push
add
icebp
dec
push
push
mov
xchg
ret
push
add
mov
stc
nop
jb
add
push
add
sbb
jbe
stc
nop
jb
add
inc
push
mov
xchg
ret
add
add
fcos
push
loopne
nop
jb
rolb
jecxz
lea
adc
nop
jb
arpl
add
inc
xchg
push
pop
cmp
mov
xchg
ret
lds
inc
sub
pop
jmp
jb
add
add
stc
nop
jb
adc
add
xchg
jmp
add
add
int
lret
nop
cld
jmp
lods
add
loopne
add
clc
add
stc
nop
jb
pop
lods
add
scas
mov
in
test
add
push
lret
fisttpll
stc
nop
jb
add
jmp
jb
jno
jecxz
test
ret
add
stc
nop
jb
add
lret
loope
lds
out
push
push
mov
xchg
ret
cld
push
push
add
pop
dec
push
mov
xchg
ret
dec
push
xor
add
pop
nop
cld
jmp
repz
lds
xor
stos
jmp
stc
nop
jb
inc
inc
add
lods
push
nop
cld
jmp
add
pop
push
xor
nop
jb
add
jmp
lret
push
lret
test
nop
cld
jmp
lea
loope
add
push
push
mov
xchg
ret
dec
lods
add
jmp
lock
push
stc
nop
jb
add
add
xor
jb
jne
stc
nop
jb
mov
jae
push
mov
xchg
ret
add
popa
pusha
add
lahf
jne
stc
nop
jb
inc
add
popa
stc
nop
jb
adc
repz
add
add
nop
jb
sbb
jmp
andb
incl
scas
add
add
push
nop
cld
jmp
inc
add
add
jnp
add
orb
add
dec
add
loopne
add
mov
mov
stc
nop
jb
mov
add
in
mov
popa
add
cld
jmp
cld
add
add
nop
cld
jmp
add
add
add
fcomi
stc
nop
jb
add
mov
xchg
ret
add
inc
test
push
add
stc
nop
jb
jmp
add
loopne
imul
nop
cld
jmp
add
scas
ljmp
stc
nop
jb
mov
scas
add
repz
nop
jb
add
push
push
add
dec
pusha
push
mov
xchg
ret
push
lods
add
add
push
les
stc
nop
jb
lods
add
jnp
sub
stc
nop
jb
add
adc
stc
stc
nop
jb
add
es
jb
add
add
push
stc
nop
jb
lret
add
push
cld
jmp
lods
add
inc
mov
nop
cld
jmp
jnp
xor
loope
add
pop
and
stc
nop
jb
ljmp
pop
add
stc
nop
jb
add
add
add
hlt
cmp
stc
nop
jb
add
add
xor
and
incl
mov
mov
jne
xor
stc
nop
jb
lods
add
data16
inc
add
push
add
adc
nop
jb
add
add
dec
push
stc
nop
jb
in
add
add
inc
pusha
add
call
stc
nop
jb
sbb
mov
gs
nop
jb
jnp
add
dec
and
stc
nop
jb
xor
jecxz
dec
push
stc
nop
jb
add
sub
add
mov
adc
nop
jb
add
add
mov
sti
mov
stc
nop
jb
fldl
or
push
or
nop
jb
mov
add
adc
jb
add
mov
mov
jb
add
repz
lods
dec
xor
dec
push
stc
nop
jb
cmpsl
fnsave
add
or
cld
jmp
adc
push
stos
add
pop
inc
add
call
stc
nop
jb
add
mov
loop
stc
nop
jb
xor
adc
mov
pop
mov
stc
nop
jb
loope
mov
nop
cld
jmp
add
push
arpl
mov
stc
nop
jb
sbb
and
inc
stc
nop
jb
jnp
sub
cld
fstp
add
stc
nop
jb
add
jnp
dec
push
stc
nop
jb
add
loopne
jecxz
add
pop
lods
stc
nop
jb
arpl
add
stc
nop
jb
loopne
add
add
lods
push
ss
jge
popa
add
mov
xchg
ret
enter
repz
icebp
nop
cld
jmp
add
add
add
mov
test
call
incl
lret
inc
ret
and
nop
cld
jmp
lods
add
sub
lea
xor
push
mov
xchg
ret
add
pop
sub
stc
nop
jb
mov
mov
add
add
mov
add
add
inc
sub
leave
push
and
pop
orl
mov
adc
shll
lret
outsb
sahf
mov
fisubs
add
sub
adc
aaa
push
jg
iret
in
ret
inc
add
add
cmp
movb
es
fldcw
mov
insl
sub
mov
js
pop
rcl
adc
or
jp
imul
add
push
inc
add
dec
fmul
nop
cmp
mov
pushf
adc
add
std
dec
aas
cld
add
mov
repnz
test
or
gs
pop
dec
mov
fstpt
test
inc
push
add
hlt
inc
add
cli
addl
mov
sbb
in
and
addb
add
lahf
jae
add
push
or
add
push
add
dec
out
ror
cli
mov
es
rcll
add
xchg
push
cwtl
outsb
dec
xor
add
pop
mov
xchg
inc
add
enter
push
or
mov
lods
xor
push
or
xchg
movsl
insl
xchg
add
push
sbb
sub
inc
in
in
add
mov
sub
fsubs
je
add
loope
popa
and
inc
add
xlat
sbb
add
push
mov
lods
and
jo
imul
push
cmpsb
add
or
cwtl
fdivrl
rolb
jne
add
inc
movsl
jle
cmp
push
cmp
push
push
incl
add
ja
xchg
ret
dec
sub
fbstp
jg
aaa
test
leave
jp
xchg
in
negb
scas
mov
push
push
add
imul
push
ret
notb
xchg
inc
mov
adc
or
fcompl
fisubs
xchg
ret
fstp
dec
jne
mov
push
rolb
xchg
pop
mov
addl
inc
add
xchg
movsb
pop
das
lods
push
aam
push
cmp
ret
int3
fwait
sub
jb
lcall
adc
mov
pop
and
jmp
push
rcr
jle
cmp
pop
xor
push
bound
adc
out
mov
cli
lock
add
das
push
leave
roll
lods
add
jp
test
push
mov
aas
mov
movb
push
pop
and
lret
pop
shrl
shl
hlt
popl
dec
pop
mov
iret
pop
add
xchg
faddl
pusha
add
jns
ss
push
jmp
jl
fldenv
imul
out
xor
cmpsl
cmp
iret
into
mov
lods
repnz
mov
in
xchg
cs
mov
sbb
fcompp
mov
xor
mov
xor
loopne
push
xor
mov
pushf
ss
dec
test
dec
jmp
das
sub
inc
add
pop
mov
int
xor
rep
test
cmp
xchg
test
in
sti
cltd
add
cmpsl
aad
in
aam
rorb
cld
xchg
pop
push
scas
inc
aad
and
cli
xchg
rclb
lret
sub
faddl
dec
sbb
movsl
pushf
pop
xchg
sub
inc
add
xor
xlat
pop
pusha
add
add
add
roll
cmpsb
xchg
xor
jl
aaa
xchg
fadds
aas
add
stos
aad
dec
pop
ret
jg
pop
rolb
add
xor
add
cmp
jno
das
jle
sbb
stc
mov
xchg
or
mov
add
cmpsl
insl
pop
rcrb
es
mov
imull
fcom
aad
xor
xchg
mov
mov
into
outsb
dec
lret
dec
lcall
fs
add
xchg
movsl
xor
mov
jbe
mov
arpl
hlt
or
loope
push
push
jno
rolb
add
ljmp
cld
xchg
xchg
push
stc
sub
shlb
xor
and
xor
hlt
data16
mov
and
fst
lods
mov
mov
jl
lock
inc
lahf
lods
mov
push
jo
add
cmpsb
in
or
lahf
addb
pop
addb
js
popf
push
mov
push
outsb
push
movb
pop
lret
movb
cmp
dec
lret
mov
roll
mov
add
add
sub
pop
mov
inc
bound
icebp
xor
and
add
insl
dec
mov
mov
int3
pop
insb
imul
insb
daa
in
xor
addr16
enter
xchg
adc
fwait
mov
jo
sbb
rcrl
arpl
xchg
pop
out
rcrb
call
mov
sbb
and
xor
add
mov
dec
into
jae
xor
mov
js
jbe
dec
jae
xchg
js
inc
add
std
cltd
imul
push
add
pop
mov
lea
add
mov
mov
cmp
hlt
imul
arpl
push
jg
mov
cmpsb
call
inc
add
fldenv
clc
pop
ss
lret
scas
in
push
push
cli
lcall
lahf
dec
add
stos
repnz
mov
shll
push
or
loopne
ja
das
mov
outsb
or
add
mov
pop
rol
add
out
add
les
int3
dec
shrl
cmpsb
nop
mov
movb
imul
jg
add
cmc
sbb
lods
mov
mov
sti
adc
cwtl
inc
lahf
jnp
in
fistpll
cltd
pop
cmp
lds
inc
add
popa
xchg
inc
lock
idivl
enter
dec
xlat
and
or
add
xchg
pop
dec
fmull
into
int3
or
in
adc
lds
and
adc
in
call
jg
dec
xchg
jecxz
das
fldl
adc
test
add
xor
sti
test
fnsave
aam
clc
mov
je
test
jb
das
cltd
sbb
sub
cltd
jl
loopne
push
and
push
add
lret
test
into
mov
or
fsubrl
inc
stc
insl
sbb
add
adc
leave
push
sbb
dec
add
roll
xchg
jg
outsb
pushf
push
mov
cld
cmpsb
and
xchg
fdivs
push
add
adc
scas
and
adc
js
bound
pop
push
push
inc
push
es
sbb
push
in
aad
decb
mov
push
rcl
cmp
xchg
pop
out
add
call
push
movsl
fadds
out
sub
rolb
cmp
lock
rcrl
adc
out
mov
lahf
pop
dec
mov
out
fbld
mov
inc
add
jo
mov
out
pop
notb
and
add
cmp
fmuls
sub
sbb
outsl
nop
scas
mov
pushf
jae
add
test
addb
mov
and
addb
test
mov
test
mov
and
jae
inc
add
jecxz
ficomps
push
jecxz
addr16
out
add
daa
ret
pop
mov
mov
xor
js
jbe
mov
inc
add
idivb
sub
add
stos
arpl
push
lahf
pushf
addl
clc
test
inc
add
inc
inc
dec
ret
dec
push
lock
jbe
aad
jmp
add
mov
jnp
pop
pop
xor
add
jo
in
fsubp
push
xlat
sub
jg
mov
xor
int3
inc
aad
adc
cs
add
dec
aas
inc
fbld
test
mov
mov
jae
mov
or
and
clc
imul
data16
sub
inc
add
repz
fs
ret
add
enter
pop
icebp
add
inc
add
and
or
mov
fcmove
sbb
pop
cmpsb
inc
pop
sub
jmp
xor
in
in
pop
adc
cmc
xor
dec
rorl
std
cmp
sub
add
test
add
rcl
popf
bound
mov
pop
cmp
notb
push
jne
testb
add
cmp
add
jecxz
cmpsl
inc
add
mov
imul
int
add
sbb
mov
dec
ss
sub
push
je
fidivl
inc
dec
or
scas
movsb
pop
xchg
fcoml
cmp
lea
mov
sbb
addl
add
jle
aad
mov
pop
inc
mov
xlat
cld
push
js
cmp
dec
adc
cmp
out
xor
repnz
call
out
lret
dec
gs
add
jne
push
fists
mov
add
jns
ret
mov
lret
in
cli
stos
sub
gs
popa
mov
pop
mov
adc
dec
cmp
push
mov
repnz
bound
and
out
mov
aaa
iret
mov
jle
imul
jns
cld
out
adc
jnp
pop
xchg
in
daa
mov
add
cs
mov
mov
mov
mov
movsb
cmp
hlt
into
jae
sahf
ficompl
lret
movl
rol
imul
xchg
pushf
aam
mov
insb
mov
dec
mov
les
jae
in
dec
push
call
mov
fldenv
into
pop
adc
int
lods
mov
sahf
push
add
fnstsw
popa
dec
ret
test
imul
and
mov
lock
mov
add
xchg
mov
push
sub
xchg
iret
sysret
sub
cmp
clc
mov
cmp
popf
rcrb
sbb
es
mov
push
cltd
pop
push
xchg
arpl
jmp
imul
dec
push
and
mov
xor
jecxz
mov
repnz
jl
fstps
stc
and
push
dec
push
add
xchg
add
sbb
mov
outsl
cwtl
fnstenv
mov
mov
and
pop
imul
sbb
add
dec
repnz
into
movsl
adc
push
jmp
mov
push
push
in
xor
add
dec
push
add
push
or
jl
popa
std
mov
shlb
add
or
jp
inc
add
aad
jnp
js
jp
add
leave
sub
mulb
add
outsl
inc
add
adc
add
xchg
je
aam
jp
inc
test
add
movsl
dec
clc
sbb
gs
fists
enter
mov
lret
nop
bound
xchg
cmp
add
push
mov
add
jle
out
mov
cmpsl
jne
cmp
sub
pop
jae
cmp
insl
mov
stos
inc
add
push
mov
loope
add
sbb
add
xor
and
int
xor
cmc
mov
outsb
std
jb
out
add
mov
mov
in
lods
push
cmp
arpl
gs
push
les
sbb
or
mov
test
add
add
je
fdivrs
add
popf
push
popa
in
push
cmc
sub
addb
add
pop
pop
imul
jecxz
ja
xor
adc
sbb
jmp
repz
cli
negl
ds
int
xor
mov
or
call
xor
aad
fstl
sub
sbb
dec
add
cmp
ret
sub
sarl
mov
aam
xor
mov
loopne
sub
lret
xchg
push
aam
add
add
add
mov
enter
push
pop
ss
sub
test
sub
lahf
rcll
cmp
out
rolb
imul
push
xchg
lods
add
daa
xor
xchg
push
adc
pop
idivb
ret
imul
add
mov
or
mov
dec
das
ja
push
mov
sbb
adc
lahf
fstl
cmp
daa
lods
int3
in
lcall
fldenv
jb
fwait
adc
xchg
add
pop
rcr
jmp
icebp
push
cmp
push
add
cmpsl
fmulp
sbb
mov
push
ret
enter
arpl
lods
inc
add
add
push
fnstsw
ret
or
cmp
add
sbb
lret
or
add
add
inc
add
out
mov
mov
jo
inc
add
add
sub
mov
lods
out
cmp
mov
xor
inc
add
jb
ss
lea
push
mov
add
mov
dec
aaa
mov
lahf
xchg
sbb
sub
pop
das
sub
mov
bound
out
adc
or
xchg
stos
mov
push
mov
dec
dec
ffreep
pop
sbb
xchg
sbb
ret
and
shll
adc
testb
jge
push
and
push
pop
cltd
mov
xlat
and
mov
lcall
sbb
insb
enter
cwtl
push
inc
add
pop
pushf
jp
je
xor
dec
out
popa
pop
flds
loopne
push
hlt
test
mov
mov
ljmp
xor
pop
test
dec
cmp
lahf
push
inc
add
jg
xchg
xchg
jp
push
adc
sbb
enter
add
sbb
insb
lds
ret
mov
loopne
cmp
scas
neg
pop
jns
es
lea
and
cld
lea
in
addb
cld
sub
cld
sbb
and
mov
lds
push
xchg
inc
add
stos
fdiv
mov
push
call
clc
jle
pop
test
clc
rolb
lods
daa
sbb
mov
add
mov
out
sahf
sti
jecxz
loope
dec
cmp
aas
insb
popf
push
divb
stos
pop
mov
sub
sbbl
test
pop
bound
out
out
dec
adc
sub
in
outsl
push
test
repnz
sbb
clc
sbb
insl
mov
js
mov
addr16
push
add
bound
xor
ret
sub
mov
movsl
mov
jno
xchg
pop
aam
xchg
and
sti
movb
push
hlt
inc
xchg
jno
push
sub
push
or
cli
add
push
pop
jo
icebp
pusha
add
loop
les
stos
jnp
sbb
pop
cli
push
sarb
fs
cld
pusha
add
rorl
les
test
mov
xchg
push
int
add
arpl
add
mov
add
add
jno
jmp
outsb
test
cmp
and
lods
push
jo
sti
movntps
nop
fisttpll
mov
ret
xchg
sbb
sti
imul
xchg
pop
push
les
out
mov
or
js
xor
inc
add
dec
mov
mov
pshufw
jnp
or
add
pusha
add
mov
scas
lahf
hlt
xchg
or
add
loop
out
xor
test
xchg
pop
aaa
xchg
adc
in
push
add
mov
call
xchg
sbb
or
mov
sub
mov
and
loope
or
out
xchg
push
and
xor
add
or
inc
cmp
sub
pop
std
lahf
mov
xchg
xchg
je
push
mov
repz
movb
jno
cmp
mov
sub
in
cwtl
daa
add
inc
movb
add
sub
aad
cmc
fsubrl
lcall
pop
addb
fptan
test
push
cmp
out
sbbl
lret
xchg
lods
mov
mov
leave
mov
cs
out
pop
loop
jb
movl
arpl
movsl
fimuls
mov
xor
ds
adc
mov
sub
xlat
repz
movsb
jl
or
add
inc
add
add
int3
fsubrs
mov
mov
xor
test
add
orl
ljmp
mov
add
or
sub
push
inc
add
add
ja
sub
gs
add
sti
outsb
jbe
mov
push
mov
fwait
cmp
loope
push
dec
pop
cmc
movsl
adc
rolb
ficomps
outsb
stc
test
dec
and
insb
outsb
rcll
mov
and
aad
cli
xor
push
xchg
xchg
push
shl
add
imul
popa
rorb
add
add
mov
mov
mov
cld
mov
and
sti
loope
jl
test
or
mov
xchg
dec
mov
dec
ret
ret
hlt
rcr
aaa
mov
push
adc
mov
nop
pop
inc
add
ret
cmp
add
imull
test
xchg
popf
mov
enter
shr
aaa
add
test
pop
mov
ret
add
inc
add
mov
ret
xor
cmp
add
clc
xchg
pop
cmp
test
bound
movsb
push
mov
or
push
pop
js
loope
add
lds
add
push
mov
pop
icebp
in
pusha
add
push
fcmovnbe
sub
cmp
shll
sbb
aam
jle
pop
cltd
mov
scas
dec
addb
sbb
pop
dec
dec
jb
lods
lahf
cmpsb
imul
movb
test
cmpsl
sub
push
pop
lahf
stos
test
leave
lods
loop
xchg
push
lret
jmp
sbb
fidivs
mov
dec
pop
aam
testl
xor
adc
add
pop
mov
pop
xchg
loope
sbb
popa
xor
cmp
leave
rorl
leave
and
ja
or
pop
inc
test
adc
imul
test
jno
adc
adc
add
insl
jmp
je
mov
add
push
sbbl
add
and
push
pop
pop
test
xor
add
mov
icebp
sub
sub
rolb
sbb
loop
sti
outsb
adc
mov
cli
movsb
pop
popa
inc
cmp
add
leave
mov
sub
inc
add
push
jns
in
cmp
nop
out
cmp
add
mov
push
loop
jge
sub
sbb
out
stos
mov
or
loope
idivl
mov
add
dec
idiv
test
and
mov
movb
xchg
mov
or
xchg
push
fdivrs
in
pop
lcall
movb
dec
mov
js
rcrl
aad
sbb
inc
add
or
or
cs
mov
ja
xor
fwait
jp,pt
stc
inc
add
xchg
insl
and
dec
lods
js
cld
lods
sbb
or
out
adc
add
cltd
push
xchg
stc
jb
add
popa
xchg
outsl
inc
fcmovu
movsl
dec
ror
mov
sarl
insb
xor
fidivrl
cmp
cli
sbb
pushf
cmp
sub
lock
adc
pushf
sarl
and
test
hlt
mov
mov
xlat
mov
add
sti
sbb
mov
dec
or
pop
cli
cmp
or
fisttps
add
cwtl
repz
add
push
push
lods
idivl
jbe,pt
das
add
add
pop
aas
push
adc
fidivrl
nop
in
inc
add
scas
imul
push
ret
fisttpl
cltd
scas
lock
dec
ja
mov
add
adc
mov
sbb
out
sti
cmp
add
std
pop
pushf
cmpsb
mov
loope,pt
adc
faddl
adc
add
cmp
mov
movsb
outsb
or
add
sub
outsb
in
lea
sub
movaps
in
stc
adc
out
ficoms
jp
add
out
sub
dec
daa
dec
int3
or
dec
dec
cmp
dec
cmp
or
push
pop
sub
fcomps
daa
mov
add
cs
jl
jp
dec
popa
pop
push
icebp
stc
call
add
nop
mov
add
test
sub
mov
cmp
pop
je
shll
add
mov
int3
mov
lods
push
les
push
in
addr16
xchg
xor
cltd
in
fidivrl
test
mov
add
inc
aas
push
jl
jp
jl
and
insl
inc
fwait
adc
dec
in
push
sahf
push
mov
add
adc
enter
sbb
icebp
add
pop
insl
sub
mov
dec
test
shll
add
mov
mov
lret
jmp
sbb
push
out
gs
push
jmp
movb
cli
adc
lret
xor
sti
repnz
or
pop
xchg
add
inc
add
sub
sbb
shl
fisttps
push
test
les
jg
pop
iret
cmp
fcoml
sub
or
xchg
sar
jnp
pop
sub
into
icebp
inc
cli
les
sub
pusha
add
loope
add
cld
and
lcall
mov
das
in
and
jp
shrl
lods
leave
mov
push
jmp
lahf
lcall
cltd
aad
mov
mov
mov
scas
mov
cs
ja
in
push
mul
enter
sub
cld
nop
js
imul
imul
jp
cmpsb
pop
pushf
pop
cmc
mov
pop
pusha
add
ds
loope
aas
adc
pop
xor
movb
add
cltd
andl
in
push
mov
jae
pop
das
add
cld
push
addb
add
jmp
fdivl
xchg
adc
adc
lret
xchg
rolb
push
pop
sub
xchg
stos
inc
add
lock
incl
cmp
cld
into
inc
add
mov
fs
adc
push
push
jp
mov
popf
fsts
push
insl
insl
cmp
mov
sub
pop
bound
pop
outsl
out
or
push
in
cmc
and
add
push
adc
add
add
outsb
pusha
add
outsb
push
mov
sbb
adc
and
clc
rorb
stos
push
fucomi
or
and
inc
nop
pop
push
and
push
daa
test
dec
maxps
inc
add
mov
sbb
dec
movsl
xlat
jno
out
jo
notb
lret
pop
test
into
mov
xchg
cmp
push
adc
test
push
mov
cltd
and
test
inc
add
xchg
pushf
call
xor
cmp
das
adc
sti
mov
mov
fwait
pop
inc
cmp
sarl
scas
in
mov
pusha
add
stos
pusha
add
pop
jge
add
jno
addb
or
jo
lods
pop
xchg
sbb
stos
sbb
in
jmp
loopne
call
out
and
jmp
pop
pop
push
fisubl
jmp
push
lret
pop
inc
mov
jecxz
and
loop
mov
jne
shlb
dec
mov
std
lcall
xchg
pop
mov
out
cltd
stos
int
mov
pop
in
cmp
outsl
sbb
pop
mov
inc
add
add
mov
bound
dec
test
dec
push
add
lret
imul
add
xchg
insb
push
inc
add
jecxz
mov
mov
fisttpl
or
dec
lret
sti
mov
int3
mov
test
add
gs
lea
pushf
cmp
add
mov
bound
adc
gs
idivl
xor
push
cmc
in
sub
adc
addb
pop
cmpsb
out
sti
mov
repz
push
jge
bound
sbb
popf
pop
xchg
ljmp
mov
data16
mov
les
gs
add
lods
rolb
jge
addb
xchg
add
xchg
aaa
shll
mov
in
loope
decb
mov
xchg
pop
xor
xchg
sbb
mov
insl
in
push
add
push
roll
pop
hlt
into
sub
sbb
fcoms
fnstsw
sub
xchg
push
fnsave
negb
inc
outsb
imul
push
add
adc
xchg
fmull
scas
popa
sti
inc
adc
shlb
sub
imul
fwait
sti
outsl
outsb
int3
fldl
outsl
mov
test
xchg
sub
lods
les
mov
imull
mov
mov
ret
push
pop
push
add
int3
add
sbb
dec
pop
mov
cs
cmp
mov
inc
test
stos
mov
pop
mov
pushf
les
test
push
shlb
and
mov
inc
add
mov
rcll
aas
mov
stos
pop
sbb
pop
mov
repnz
inc
and
sbb
add
pop
push
mov
mov
jne
imulb
xchg
ja
les
loopne
pushf
push
add
addb
inc
inc
pop
push
cmp
adc
push
adc
sub
stos
jecxz
insb
pop
add
or
dec
clc
cwtl
inc
aad
arpl
cltd
cmp
jns
cmp
add
add
jns
mov
addr16
pop
mov
mov
or
add
sub
cmp
xor
xchg
iret
aad
int
cs
jge
inc
add
in
add
rorl
push
mov
lret
out
push
icebp
imul
jmp
sub
outsl
movb
xor
add
xor
in
arpl
sub
jmp
arpl
js
xor
movb
js
cmp
add
mov
aam
pop
jb
adc
push
xchg
call
dec
int3
pop
mov
clc
fs
sbb
mov
adc
std
xor
dec
push
jno
out
repz
cmp
stos
push
inc
dec
sahf
daa
mov
jno
fldl
in
nop
scas
es
mov
push
add
push
xchg
and
cmp
sub
fimull
and
sbb
inc
add
add
xor
mov
lds
cltd
dec
push
ds
add
ljmp
scas
jns
enter
test
test
imul
scas
ret
fs
popf
js
xchg
push
leave
jg
leave
stos
aad
xor
jle
jne
sbb
rolb
mov
bsf
clc
mov
cmp
outsb
jne
test
mov
pop
push
jp
sahf
cmp
sbb
arpl
test
lcall
fisubrs
rcr
fsubl
add
dec
sub
inc
xorl
cmp
and
add
push
sbb
push
daa
dec
cs
add
outsb
rorb
in
pop
mov
jge
ficoml
add
push
shll
or
fidivrs
test
pop
stos
and
rorl
cmpsl
adc
ror
test
fcomi
cmp
mov
popf
add
mov
xorl
add
xor
testb
daa
lret
push
inc
add
sbb
clc
pushf
or
cltd
lret
enter
xchg
fisttpll
inc
add
add
mov
fcompp
dec
les
mov
loopne
daa
pusha
add
and
minps
pop
mov
add
pop
push
sbb
add
rolb
inc
add
lds
push
cli
icebp
jecxz
sbb
rolb
mov
jg
lods
mov
mov
inc
loope
pop
and
mov
and
cmp
mov
mov
and
sbb
mov
outsl
addb
stc
jns
mov
push
add
add
aas
sahf
inc
jns
inc
add
add
iret
jmp
adc
and
out
adc
test
add
daa
sub
mov
inc
xchg
push
adc
out
sbb
cmp
push
add
inc
add
and
lods
inc
add
inc
add
adc
out
addb
add
pop
ret
xor
push
jno
add
mov
sub
add
xlat
mov
and
popf
aad
xor
sub
movb
decl
push
aad
loopne
fdivrs
es
nop
lea
push
test
clc
sub
push
mov
add
push
lcall
cli
cmp
sub
cs
pop
adc
ds
add
loopne
arpl
xchg
add
imul
add
loopne
addr16
inc
inc
add
add
mov
add
pop
mov
xchg
lea
fistpll
add
jg
jmp
mov
add
inc
xchg
arpl
xchg
fstpt
mov
cmpsl
cmp
dec
es
pop
mov
jmp
jnp
fs
add
inc
xchg
sbb
sub
sbb
add
add
out
sbb
jns
push
inc
bound
dec
lods
pop
add
push
daa
cmp
aad
jge
imul
shll
addb
aas
aaa
jl
lret
pop
mov
pusha
add
out
test
jg
inc
cwtl
xchg
cmpsl
idiv
sbb
test
add
es
cmc
xlat
mov
pop
ja
sbb
inc
add
jle
aam
arpl
aad
adc
icebp
shrb
xor
sbb
jbe
test
clc
cli
mul
pop
repnz
negb
ret
pop
push
add
add
fld
test
add
mov
mov
cmp
pop
mov
mov
daa
sahf
inc
sub
mov
jecxz
or
or
insl
sbb
mov
inc
dec
xchg
nop
cmp
arpl
leave
inc
add
xor
arpl
sbb
rolb
mov
push
add
xchg
pop
pop
xchg
orl
add
jecxz
into
lcall
pop
mov
add
add
mov
and
aas
push
cmp
mov
jns
and
idivb
pop
adc
mov
add
add
test
push
imul
repnz
xlat
loop
pop
cltd
or
mov
movb
popa
repz
das
jle
and
int3
insl
mov
xor
ret
sti
dec
hlt
rolb
bound
popa
sbb
sub
xlat
dec
dec
movsl
cmp
sub
add
and
in
lods
ds
jecxz
dec
call
jno
jne
cs
xchg
sbb
insl
mov
inc
and
xor
cmp
in
ja
add
mov
test
ret
adc
add
fs
add
jnp
icebp
insb
mov
mov
mov
es
lret
fidivs
xchg
test
sub
ja
mov
pop
aad
add
out
fdivrs
mov
xchg
imul
push
test
movsl
adc
aaa
pop
and
add
out
hlt
pop
dec
mov
sbb
lcall
add
ljmp
les
cmc
xchg
cmp
add
add
and
aam
enter
sub
add
cli
dec
fs
sub
jp
jb
add
arpl
in
popf
scas
sub
push
add
shufps
fstl
and
add
add
ljmp
outsl
aam
enter
outsb
movsl
push
js
jle
dec
clc
jl
std
dec
mov
lret
mov
cmp
pop
dec
stos
inc
jo
jne
add
xchg
mulb
xchg
inc
add
inc
jnp
addb
std
sub
add
xchg
ss
jmp
gs
cmc
fwait
pop
xlat
xchg
pop
pop
jl
add
push
push
and
fisubl
testl
pop
lcall
and
xchg
dec
or
xchg
aas
fwait
and
pop
xchg
pop
inc
add
call
mov
mov
sub
pushf
pop
pop
cmp
int3
out
dec
vhaddpd
cmp
out
hlt
cltd
mov
push
mov
jp
push
add
stos
jne
sbb
pop
add
das
mov
cli
test
mov
daa
ja
loopne
or
outsl
cmpsl
cmp
cmp
jae
mov
ret
fwait
sahf
mov
and
pop
movb
mov
add
inc
outsb
jnp
jl
arpl
mov
add
sub
movb
jns
das
in
sbb
inc
test
imul
or
call
pop
sahf
or
push
dec
cmpl
movsb
mov
fadd
jne
mov
fmull
add
popf
ret
mov
add
xchg
icebp
rcrl
add
jnp
add
push
pop
or
push
neg
pop
ret
movsb
test
cmp
call
scas
push
mov
mov
sub
in
add
and
imul
push
test
push
cli
popf
cmp
sbb
mov
cmp
jmp
add
ljmp
lcall
adc
popa
addb
mov
jae
sbb
mov
test
cmp
pop
cmp
add
cmpsl
addl
add
outsl
xchg
icebp
xor
inc
xor
sub
dec
div
pop
loop
pop
clc
dec
or
call
xchg
jno
mov
push
xor
or
cmp
popf
mov
hlt
int3
hlt
mov
hlt
pusha
add
outsb
lcall
inc
cmp
scas
inc
add
pop
xchg
rorb
push
shrl
lock
pop
mov
mov
cwtl
add
add
das
enter
test
lods
and
outsb
and
aam
mov
sub
push
dec
mov
mov
mov
outsl
xchg
dec
mov
inc
mov
add
mov
jne
mov
scas
mov
mov
movsb
shlb
xchg
in
push
mov
and
fisttpll
and
mov
scas
add
xchg
les
out
pop
out
scas
mov
mov
fs
addb
inc
add
adc
addb
push
mov
sbb
jle
sub
sti
lret
mov
stos
nop
xor
loope
adc
add
pop
or
movsb
xchg
repnz
xor
mov
sbb
inc
add
es
mov
inc
das
xchg
cmpsb
popf
mov
rcll
xor
jb
add
sub
dec
mov
les
aam
mov
insb
out
mov
adc
movb
inc
add
fists
add
and
xchg
lock
mov
push
cmc
outsl
jg
xchg
or
int
adc
int3
movsb
icebp
nop
addb
into
std
push
lods
pusha
add
aam
out
inc
add
xchg
mov
add
cltd
dec
mov
inc
fldcw
mov
test
ret
add
test
fiadds
add
jns
push
cltd
pop
dec
repz
imul
add
mov
add
mov
xor
and
outsl
insl
clc
stc
pop
jae
jb
xor
in
mov
dec
mov
push
js
fcomps
lock
sub
push
icebp
mov
add
scas
sahf
add
enter
xchg
enter
jb
cmp
pop
and
mov
jo
sub
sbb
dec
push
and
jge
mov
jno
mov
pop
lea
stos
add
sbb
addb
fwait
loopne
xchg
movsl
es
lods
xor
lock
loop
inc
add
fnstenv
cli
clc
dec
inc
add
add
fistl
imulb
inc
popf
push
popa
push
inc
add
xchg
addb
je
jb
inc
add
iret
sarb
or
jle
mov
lret
addb
jmp
jecxz
add
in
arpl
lret
and
sbb
add
sbb
cmc
in
dec
mov
stc
in
jae
and
sbb
mov
jns
inc
push
sub
and
sub
cli
cwtl
sbb
add
add
ret
in
fisubl
and
jne
daa
xchg
cmpsb
dec
push
push
adc
das
lods
aas
jb
cmp
push
fmuls
inc
add
mov
sahf
pop
push
mov
add
push
jmp
mov
mov
pop
movsb
mov
sub
aad
repz
mov
add
xor
movsl
test
push
add
or
arpl
mov
fisubs
fldl
fs
hlt
cltd
pop
inc
add
mov
add
pop
loope
cmc
mov
ljmp
mov
jno
js
push
lret
dec
pop
and
xor
clc
cmp
add
imulb
pop
imul
sbb
mov
cli
mov
loopne
in
or
sbb
imul
xor
addb
sbb
add
icebp
mov
icebp
outsb
inc
addb
cltd
les
cltd
mov
mov
into
jb
add
xor
inc
pop
cmp
fdecstp
and
xor
ds
jne
mull
add
mov
add
and
push
cmp
add
mov
daa
cmpsl
in
add
push
pop
xor
inc
cmp
cli
xor
aad
cwtl
sub
out
add
fimuls
mov
lea
ficoms
outsb
push
andl
pop
in
adc
mov
add
jmp
add
push
aas
scas
insb
sti
cmc
mov
mov
lods
push
push
mov
add
mov
add
out
testb
add
movsb
mov
imul
test
push
xchg
sbb
or
test
std
mov
fdivs
fucomip
imul
xor
lcall
dec
les
jl
or
pop
or
addb
movsl
pop
fimuls
push
xchg
adc
sub
and
adc
call
dec
shrl
pop
pusha
add
add
cmpsl
sbb
mov
lods
xchg
xchg
ds
adc
cmp
test
ficompl
imul
dec
out
sub
add
and
shl
mov
add
icebp
add
arpl
jge
cmp
idivl
outsl
pop
add
add
leave
and
dec
aas
sub
xor
mov
mov
sub
imul
popf
das
lret
insl
dec
shll
or
jae
outsl
stc
mov
dec
ret
out
addb
insl
dec
and
es
mov
sbb
push
mov
add
adc
or
add
mov
rol
mov
repz
movsl
lret
cmp
inc
bound
and
movb
add
cld
std
xchg
xor
ret
sbb
add
mov
int
in
in
push
lods
push
aaa
inc
add
push
or
add
dec
lock
pop
adc
adcl
and
jp
inc
dec
push
es
cmp
sub
mov
jae
fdivrs
sbb
pop
jae
mov
int3
adc
test
insl
fidivrl
inc
mov
dec
sub
add
pop
cmc
mov
cmp
or
outsb
bnd
pushl
js
lret
mov
into
cmc
mov
xchg
out
shrl
out
jne
stc
mov
and
ljmp
ja
pushf
jg
clc
daa
pop
push
mov
push
push
les
dec
lds
arpl
xor
cmp
mov
in
dec
fldcw
mov
lcall
add
adcl
push
xchg
add
mov
xchg
cmc
out
adc
xor
add
add
xchg
test
and
inc
fbstp
addb
loop
inc
add
nop
xor
add
inc
test
scas
xchg
jmp
xchg
mov
push
jl
mov
pusha
add
inc
mov
je
sti
mov
add
lds
jg
out
add
mov
jne
jecxz
lret
pop
lock
lret
bound
aam
scas
sub
xor
stc
or
fcmovb
imul
xchg
ret
mov
movsl
pop
and
push
mov
add
test
inc
add
int3
jnp
call
pop
lds
add
sbb
stc
add
push
mov
cmp
adcl
add
or
add
jecxz
add
cli
sbb
cmpsb
adc
jmp
dec
sub
addr16
fidivrl
add
addr16
negl
fwait
mov
imul
out
xchg
mov
data16
movsl
into
xchg
push
inc
daa
mov
inc
add
mov
lds
pop
jb
mov
pushf
mov
and
xchg
dec
push
jb
adc
and
add
add
add
imul
add
mov
add
pop
aas
jb
adc
jmp
jmp
add
xor
mov
int3
add
pop
test
bound
pushf
popl
fstpl
adc
mov
jmp
enter
pop
stos
in
push
icebp
add
xchg
fiaddl
add
mov
jb
movb
push
mov
loopne
leave
xlat
out
mov
mov
add
fucom
jge
mov
add
fimuls
inc
add
add
stos
push
fbld
add
dec
or
add
cmp
mov
xchg
ret
ret
mov
sti
in
push
fcoms
push
lds
outsb
fmull
push
jbe
lock
fcoms
cmp
mov
sub
in
add
add
sub
int3
push
jp
mov
outsb
inc
add
aam
or
sub
dec
leave
push
or
xchg
inc
add
movb
test
dec
test
or
or
add
jbe
or
sti
push
fwait
sbb
xchg
fsubs
sbb
in
push
add
cmp
add
out
add
imul
shrb
mov
nop
xor
daa
out
je
cmpsl
xchg
addr16
add
outsl
cs
xchg
ds
xchg
push
add
add
int3
and
mov
add
ret
js
sub
insl
dec
mov
cld
jns
add
fsubl
dec
xchg
lds
xor
lcall
loope
fs
xlat
fisttps
int
add
adc
aaa
aas
sbb
lds
stos
xor
jl
loopne
dec
in
outsl
xor
sub
adc
leave
adc
mov
ret
outsb
pop
sahf
mov
daa
pop
push
xchg
das
xor
inc
add
adc
mov
xor
adc
les
xchg
movl
dec
out
add
pusha
add
ss
mov
pop
bsr
add
or
dec
cld
add
cmp
std
xchg
jne
pop
popa
aaa
inc
mov
push
and
daa
fsts
sbb
inc
in
jecxz
inc
add
addb
mov
xorl
xor
adc
push
outsl
and
jle
aam
cwtl
dec
adc
nop
div
in
je
add
insl
push
dec
mov
sarl
daa
inc
sbb
fcom
outsl
pop
js
and
bsf
push
loop
and
test
test
ret
test
add
cmp
and
cmpsb
or
push
mov
stos
les
pop
icebp
scas
incb
jmp
add
sbb
dec
cmp
imul
add
jge
sahf
sub
add
inc
add
add
cmp
add
jbe
outsb
jns
cmpsb
lods
sbb
data16
xor
cld
ljmp
jp
add
cmp
repnz
sbb
cltd
cmpl
pop
jp
add
or
cmpsb
shl
fidivs
mov
int
out
pop
xorl
jle
mov
add
push
popf
sub
je
out
pop
into
out
in
pop
pop
ss
rcrb
sarl
popa
cld
mov
rolb
mov
es
push
inc
add
mov
mov
aam
add
add
decl
mov
cmpsb
inc
or
adc
js
add
out
cmp
adc
mov
add
add
out
jp
add
xchg
outsl
mov
dec
push
pop
inc
add
fcmovnb
add
sub
mov
fldenv
jmp
out
andl
shlb
add
add
out
jg
mov
pusha
add
jae
cmp
push
xlat
adc
inc
inc
add
sbb
jnp
lea
add
sbb
inc
add
add
leave
loop
icebp
jae
cmp
int3
pop
rclb
and
cmpsb
fs
mov
sbb
add
ror
jecxz
add
jb
xchg
pop
jbe
aam
sbb
mov
add
mov
pushf
stos
mov
add
sbb
arpl
add
pop
jbe
stos
pop
iret
mov
mov
add
out
sub
imul
jns
out
add
sti
push
clc
mov
pop
mov
cmpsl
mov
sbb
popf
adc
dec
jne
adc
je
insl
out
fldenv
lds
add
mov
addb
jno
mov
inc
add
and
stos
or
add
jmp
push
push
add
cmp
stos
cltd
cmpsb
mov
add
push
add
mov
add
dec
fsubs
xor
lock
lds
shl
movsl
or
xor
and
sti
das
sub
ret
dec
jmp
and
mov
mov
sbb
mov
push
iret
mov
add
pop
mov
mov
mul
and
mov
push
dec
jbe
jp
scas
mov
dec
mov
mov
add
mov
rolb
mov
stos
out
and
push
testb
fwait
sahf
xlat
or
xchg
outsl
pop
dec
dec
adc
in
dec
filds
in
mov
push
out
and
jmp
mov
mov
addb
add
dec
add
std
sbb
mov
fcoms
sbb
or
dec
lret
out
call
jns
imul
and
movsl
call
mov
les
pop
mull
in
loop
mov
jp
aam
sbb
fincstp
inc
add
jmp
xor
test
pop
out
adc
jb
call
pushf
lea
add
push
and
add
lds
lock
das
add
cli
imul
lds
push
jne
add
mov
mov
rcl
inc
add
xor
push
addb
pop
mov
cmp
mov
jb
negb
sbb
add
sub
mov
push
dec
cmp
jecxz
int
insb
ja
cmp
and
daa
fs
or
xlat
rolb
dec
imul
shlb
popa
cmp
mov
repz
stc
adc
rcll
daa
addb
scas
jns
mov
add
fmuls
xorl
add
push
es
push
mov
stos
or
mov
mov
cmpsl
mov
out
sahf
mov
mov
xchg
mov
fcmovnb
jg
or
add
add
rolb
ret
jb
pusha
add
mov
sub
fdivrl
les
push
insb
loop
testl
out
test
in
test
fdivp
and
and
mov
sub
in
fldenv
xchg
xchg
and
pop
push
xchg
xor
or
test
stc
jne
hlt
or
into
jg
cmp
xor
ret
repz
pop
cltd
mov
daa
dec
mov
adc
or
mov
pop
jmp
pop
adc
in
push
or
fisubs
rcr
sbb
cmp
das
cli
cmp
sahf
insl
ret
fstpt
rolb
xchg
cmc
pushf
adc
add
lock
pop
roll
or
add
test
aaa
inc
add
hlt
repz
push
xchg
cmp
js
mov
notb
fildll
mov
mov
test
ljmp
mov
jns
mov
or
add
mov
stc
aas
imull
mov
mov
in
add
aad
dec
xchg
and
or
jb
mov
mov
push
xchg
scas
popf
mov
cmpsb
imul
daa
mov
cwtl
stos
jae
add
sub
fimuls
enter
cmp
outsl
fmuls
jns
subl
xchg
lods
dec
std
popf
adc
out
inc
add
test
mov
add
adc
xchg
mov
rolb
or
sub
jns
cld
pop
mov
push
jecxz
cmp
dec
pop
sub
add
aaa
xor
xor
insl
sbb
ds
jecxz
pop
fadds
ret
lods
stos
loop
addb
add
int3
xchg
jp
pop
icebp
xor
push
mov
mov
add
icebp
jle
add
iret
or
lcall
test
stos
sbb
mov
test
add
dec
inc
add
mov
jnp,pn
cmp
xor
rolb
clc
int
cmp
cmp
jno
popf
mov
ljmp
inc
les
xchg
icebp
pop
jb
mov
xchg
or
jns
sbb
sbb
jg
nop
movsl
insb
mov
scas
call
sbb
inc
test
insb
xchg
jecxz
add
pop
push
jle
in
push
js
inc
add
xchg
scas
int
nop
les
xor
popa
cmpsl
hlt
frstor
in
insl
iret
out
xor
fimuls
aaa
sub
add
or
add
xchg
ss
stc
xchg
mov
add
loopne
inc
xchg
jnp
push
push
sahf
dec
mov
mov
inc
add
xor
cwtl
imul
mov
arpl
testb
jo
jb
add
sub
mov
out
mov
daa
pop
movsb
mov
and
mov
imul
in
and
adcl
pop
add
lahf
mov
fs
xor
outsb
jae
rolb
mov
cwtl
pop
sub
enter
add
adc
push
xor
movsl
arpl
into
dec
xchg
aas
push
and
movsb
sub
test
out
lahf
stc
adc
mov
int
call
es
lea
addb
pop
clc
repnz
out
inc
add
mov
jecxz
add
xchg
in
es
outsb
xchg
into
popf
xchg
sbb
add
aam
add
cmp
add
add
push
leave
xchg
sub
jge
sbb
sub
rclb
add
std
mov
and
pop
xchg
sbb
insl
repz
clc
testb
mov
cld
cwtl
insb
push
pop
and
test
or
xor
mov
inc
sub
ret
lods
sub
mov
or
pop
ss
cs
xchg
dec
push
icebp
in
dec
sbb
test
fcomps
sub
dec
mov
add
add
in
push
pop
sbb
cmp
inc
fldt
sbbl
xor
add
loop
and
mov
sub
xchg
ret
push
inc
mov
dec
adc
pop
dec
loopne
imul
les
cwtl
je
add
jecxz
arpl
int3
nop
scas
aad
cltd
shrb
add
and
loopne
bound
std
imulb
add
xchg
mov
mov
xor
xor
inc
add
jne
mov
rolb
pop
pushf
loop
mov
xlat
fwait
sbb
push
imul
dec
out
cmp
mov
fdiv
lock
sti
mov
pop
add
cli
push
jne
jae
sysret
mov
bound
jp
add
and
add
data16
sub
cmp
ds
fistps
js
stc
in
sub
cmp
jl
movb
shlb
inc
inc
addb
mov
mov
dec
pop
lret
call
lahf
xor
mov
xchg
cld
jns
xchg
popa
inc
nop
mov
std
mov
mov
mov
add
aas
arpl
sbb
push
das
add
cs
and
and
mov
mov
push
ja
cmpsl
jae
xchg
loop
jns
pop
mov
sti
sbb
jb
pushf
pop
mov
outsb
push
testl
and
mov
pop
inc
nop
bound
or
pop
insl
xchg
adc
imul
fdivr
cmp
rorl
mov
xchg
rolb
fisubl
jge
jno
pop
fldcw
and
mov
in
sbb
outsl
call
shrl
mov
js
adc
xor
add
adc
mov
sub
std
sub
add
lods
xor
inc
add
add
pop
dec
mov
adc
and
test
in
daa
pop
pop
jbe
fadds
push
je
and
movups
call
call
popa
into
out
repz
sbb
lea
daa
shlb
xchg
push
movsb
dec
inc
cs
clc
push
addb
pop
push
addr16
ss
stos
push
outsb
xchg
jns
sub
add
cmpsl
and
addb
push
or
dec
jecxz
pop
dec
imul
mov
push
movsb
dec
sbb
lea
adc
fimull
ds
jnp
loope
cmp
arpl
push
std
fs
sbb
mov
sub
lret
jnp
cmp
sbb
stos
mov
or
cmpsb
les
test
jbe
jb
xlat
mov
nop
inc
cmp
dec
xchg
popf
xchg
insl
call
sbb
dec
push
addb
jp
cld
mov
cmp
lods
lahf
jae
in
mov
jno
push
or
cmp
mov
xchg
xchg
ja
popf
jbe
push
orl
fs
call
inc
add
add
in
cmc
inc
out
adc
aad
sub
dec
xor
gs
sti
in
add
mov
ja
adc
fistl
mov
lahf
or
nop
mov
aas
test
or
loop
sbb
fistps
mov
mov
mov
push
scas
ret
test
xlat
ret
pop
imul
jnp
imul
add
popa
sub
jg
xchg
pand
fcoms
jb
xchg
cmp
jns
ds
add
xor
push
sub
addb
xor
dec
lods
addb
rolb
hlt
mov
loope
loopne
aas
jae
mov
and
cmc
flds
adc
mov
sbb
xchg
xor
loopne
xchg
rolb
push
dec
arpl
mov
mov
mov
add
lret
je
add
add
push
mov
jnp
add
xchg
scas
stos
xchg
mov
inc
add
xchg
enter
add
fnclex
pop
jne
jl
add
faddp
pop
iret
ljmp
sub
rolb
jo
lock
bound
add
jle
jmp
outsl
test
lahf
mov
fdivrl
jne
mov
in
scas
fs
fwait
in
add
xchg
fisttpll
mov
mov
imul
int3
in
mov
jle
gs
push
inc
add
pop
mov
mov
ljmp
movb
ret
out
lcall
shrb
lods
cmp
jns
dec
push
iret
sbb
aaa
cmp
push
fcoms
inc
add
xor
fsubl
cmp
sub
lret
sbb
test
ror
sub
cmc
push
outsl
pop
mov
jns
insl
jb
xchg
add
jae
clc
icebp
sbb
push
jecxz
jp
pop
xor
out
aaa
ret
and
jb
xchg
cmpsb
lods
push
mov
mul
pop
das
pop
dec
pop
sbb
sbb
and
pop
lea
push
push
jb
mov
divb
cmp
daa
inc
add
sbb
sbbl
add
pop
insb
pusha
add
mov
ja
pop
jl
inc
add
loopne
repz
sbb
pop
out
test
dec
js
push
mov
or
and
mov
adc
add
cmp
sbb
sbb
xchg
imul
out
jns
xchg
imul
push
dec
xchg
fwait
and
push
scas
xor
hlt
push
cmp
hlt
out
jnp
ja
sahf
xchg
adc
icebp
lret
jp
in
sahf
rolb
sbb
xorl
in
xchg
fs
mov
xchg
cmc
cmp
clc
fcmovne
movsb
rorb
test
js
inc
add
add
push
out
pushf
addr16
ret
test
cltd
push
imul
dec
fisttpll
sti
dec
dec
and
js
bound
mov
push
das
add
lahf
xchg
cmp
mov
in
and
jo
lcall
mov
fxch
mov
je
add
mov
imul
das
je
icebp
frstor
das
xchg
repnz
add
sub
aaa
stc
test
cltd
dec
in
cwtl
aaa
and
push
inc
add
mov
mov
dec
mov
lret
movsb
mov
mov
ret
daa
test
xchg
into
ss
fildll
fistl
and
psllq
and
sub
add
add
iret
mov
sbb
jl
pushf
cmpsb
dec
push
or
popa
push
icebp
adc
iret
enter
into
mov
add
leave
cli
xor
cmc
dec
gs
and
dec
jp
movb
incl
xchg
push
insb
or
rolb
add
mov
mov
adc
sahf
pop
es
into
addb
test
jno
je
xlat
and
and
outsb
pop
lods
and
jp
divb
pop
cli
push
cmp
or
xor
fstp
daa
nop
cmp
std
cmpsl
lds
imul
pop
inc
add
push
inc
inc
add
sbb
in
lock
inc
add
jl
gs
pop
xor
add
xor
scas
std
xchg
adc
add
sahf
inc
add
fisttps
call
cmp
push
fcom
sub
push
add
pop
mov
jl
rolb
pushf
mov
or
out
fiaddl
mov
sub
insb
aas
dec
int
mov
jno
add
imul
aas
out
cltd
jecxz
sub
add
inc
add
out
push
mov
or
xchg
xchg
lea
mov
jne
int3
je
cs
ds
push
cmp
addb
fld1
outsl
pop
and
out
movsb
repnz
out
into
or
testb
repnz
rorl
add
or
xor
lds
inc
add
int3
ret
int3
cmpsl
mov
add
add
addb
xorl
jle
sbb
xor
and
mov
xor
xchg
mov
push
neg
and
push
inc
cmp
fistl
mov
jae
add
jae
add
into
scas
mov
pop
nop
add
pushf
mov
outsb
adc
xchg
mov
mov
add
add
push
loope
popa
sbb
movsl
je
inc
add
cwtl
icebp
outsb
jge
or
loop
arpl
in
or
adc
mov
cmp
loop
pushf
and
mov
ljmp
test
push
add
fnstenv
mov
ss
fimuls
or
lret
inc
add
das
cs
or
add
push
adc
stos
decl
and
or
cmp
cmp
xor
and
sahf
push
push
rcrl
xchg
addb
jmp
das
and
das
xchg
add
bound
cmp
sub
xor
jge
negl
popa
les
filds
inc
sub
iret
dec
lret
loop
mov
out
fwait
jnp
dec
iret
sub
cmpsl
sub
jecxz
mov
aaa
xchg
jns
mov
lcall
inc
xlat
ljmp
mov
mov
add
sarl
adc
add
leave
lods
xlat
clc
and
fs
push
test
das
xchg
popf
lret
in
adc
ret
dec
mov
lret
sbb
adc
sbb
jb
inc
popa
mov
add
add
enter
add
imul
mov
in
insb
cmc
xlat
jb
into
out
xor
not
lret
pusha
add
test
inc
add
test
push
test
add
and
sbb
push
and
dec
ss
jno
pop
das
fs
mov
mov
lcall
jl
test
push
ds
jnp
pop
sub
lret
dec
nop
divl
sub
in
or
pop
or
sbb
sub
xorl
shll
cmpsl
add
push
aas
cmp
xor
into
adc
pop
sti
fcmovne
stc
push
imul
dec
xchg
insl
lcall
pop
add
test
pop
std
mov
lock
jno
mov
fwait
sbb
pop
mov
daa
push
sub
stc
pushf
sub
push
and
sub
insb
sub
aas
mull
das
push
lret
sub
loop
mov
sar
mov
pushf
add
add
jle
das
pop
sub
xchg
lock
notb
lods
movsl
xchg
in
xor
jg
hlt
addr16
loop
add
xchg
in
lahf
push
pop
lcall
jnp
stos
roll
and
pop
jge
sub
mov
mov
pop
push
aam
pop
punpcklwd
clc
cmp
repz
inc
inc
or
push
lods
shr
lea
mov
and
jp
pop
cmp
rcll
pop
es
mov
or
popa
or
clc
jo
add
out
out
add
mov
cmp
ljmp
enter
add
inc
xchg
nop
lahf
sub
xchg
or
in
out
pop
adc
push
out
fdivrs
iret
ss
add
sbb
in
out
push
push
out
push
or
dec
pop
xchg
shll
cmp
push
sbb
mov
or
add
xchg
dec
sbb
add
cs
push
pop
out
aad
adc
orl
xchg
xor
stos
cmp
inc
int3
cld
hlt
shlb
loope
addb
xlat
adc
aad
lret
jp
testl
rolb
pushf
scas
inc
dec
mov
fbstp
pop
or
mov
outsl
jns
fisubl
sahf
test
mov
inc
stos
cmp
out
gs
stos
add
sub
testb
arpl
add
xchg
jb
inc
add
sbb
insl
ljmp
add
loope
push
jnp
add
cmp
push
and
or
mov
jge
add
rolb
push
int
stc
mov
pop
xchg
cmc
fucomp
je
xchg
xor
ja
jmp
rorl
add
sub
push
out
fisubrl
mov
adc
bound
cmpl
add
lds
mov
rolb
xchg
cmc
js
add
outsb
std
mov
pop
add
stos
lahf
ret
pop
fcompp
addb
test
push
fisubrl
jge
mov
daa
jl
mov
sbb
ret
leave
mov
xchg
loopne
add
outsb
out
xor
cmpsl
or
out
mov
jge
test
sbb
xchg
addb
add
push
ss
es
mov
leave
idivb
sub
bound
push
xchg
mov
lock
xchg
out
push
pushl
pop
push
cmp
mov
into
xchg
clc
adc
test
pop
mov
lods
add
out
inc
divl
xor
test
in
mov
jecxz
mov
add
subl
fsubrl
jle
dec
adc
cli
loope
sbb
add
mov
out
movsl
mov
cmpsl
push
lret
data16
test
mov
ljmp
iret
cmpsb
dec
out
jg
scas
jl
push
rolb
aam
jmp
ds
out
fdivs
mov
or
popf
inc
add
clc
push
cmp
add
push
xchg
jle
ret
rorb
add
add
add
xchg
arpl
sti
mov
imul
out
addl
inc
sbb
lahf
cmp
mov
in
addl
lods
lock
or
xor
inc
fldcw
or
jo
nop
sahf
lock
or
push
dec
fcompl
pop
cltd
dec
call
jne
stc
bound
pop
pop
fwait
roll
xor
in
and
add
sbb
sahf
xor
xor
add
cmp
pop
outsl
push
sbb
lret
cwtl
repz
or
dec
xchg
scas
adcl
mov
fucompp
adc
dec
xchg
ljmp
add
adcl
flds
pop
mov
lock
add
mov
mov
out
cmp
lods
orl
int
mov
pop
or
jb
stos
jecxz
add
add
xchg
xchg
fiaddl
cmc
ss
mov
lds
jo
jbe
iret
sub
shrb
push
lcall
fmuls
cmc
cmc
pop
cmp
rcll
add
pusha
add
jb
xchg
xor
add
add
mov
lods
ret
aam
ljmp
cli
cmpsb
cld
push
test
sub
sub
fiaddl
mov
fcmovnu
inc
incl
mov
and
push
xor
repnz
mov
inc
add
jmp
sub
repz
lcall
jecxz
daa
push
xchg
ja
shlb
mov
js
repz
in
das
and
outsl
fdivrs
sbb
js
shlb
sub
xor
fwait
xor
add
mov
add
cmp
xor
movsb
pop
bound
outsb
dec
sbb
pusha
add
dec
jae
addr16
imul
pop
mov
add
cmp
insl
jge
inc
idivb
jmp
sub
pop
pop
mov
add
lea
xchg
pop
xor
or
aam
jae
sbb
jmp
and
xor
adc
in
cltd
sub
lds
shlb
cmp
add
add
aas
mov
jl
sub
adc
add
cmpsb
in
sbb
xlat
xor
call
cmp
cwtl
push
push
pop
cli
test
jg
or
test
pop
pop
push
sub
inc
inc
inc
add
add
cmp
dec
pop
idivb
dec
inc
jne
jbe
adc
sbb
add
imulb
aam
cmc
xor
movb
jbe
jmp
mov
fmuls
cs
test
aaa
fists
dec
movb
inc
jge
add
mov
push
pop
and
cltd
mov
mov
push
xor
inc
add
ds
stc
hlt
gs
arpl
popa
xchg
jle
shll
lock
mov
lock
mov
mov
mov
fcomi
sub
pop
movsl
imul
adc
xchg
movsl
jns
in
aad
add
lock
rolb
xchg
into
mov
xlat
faddl
push
lock
add
mov
and
rolb
mov
rcrl
mov
shrb
push
xchg
push
outsb
push
sti
jl
push
pop
aas
aam
mov
cmp
in
xor
fadd
add
inc
add
sbb
daa
xchg
cmp
xchg
xchg
icebp
inc
loopne
std
inc
std
in
aad
fs
cmc
adc
das
rcll
jnp
add
and
enter
cmp
les
js
js
pop
xor
ret
rolb
push
mov
cmpsb
cmp
and
mov
test
jnp
add
pop
xchg
wrmsr
insl
cs
jl
pop
cmc
adc
add
xchg
insl
daa
test
add
add
add
xchg
je
mov
addb
imul
mov
push
xor
and
and
stc
mov
pop
lea
push
in
add
inc
add
add
into
mov
xchg
xchg
cld
ss
jae
lea
das
jns
mov
and
adcl
adc
xor
clc
inc
add
and
pop
push
add
outsb
imul
mov
add
add
add
stc
xlat
push
xor
jo
sub
inc
add
bound
push
loope
sub
cmp
rcll
pusha
add
cmp
gs
dec
xlat
lods
imul
stc
call
jp
in
das
dec
fwait
in
add
mov
inc
add
cld
push
aam
cs
ds
add
scas
stos
pop
cmp
or
popf
xchg
xlat
lea
data16
sbb
and
icebp
xor
push
cmp
add
xor
mov
pop
pop
dec
sub
pop
lahf
pop
or
lock
add
add
sti
and
out
aad
pop
mov
addb
inc
pop
mov
xchg
push
add
enter
shll
gs
cmp
push
imul
sbb
fucomi
test
mov
inc
add
push
xchg
hlt
inc
add
push
idiv
fnstenv
js
js
mov
iret
sub
test
mov
sbb
push
fbstp
add
jae
xor
int3
adc
mov
mov
sbb
je
mov
or
add
lea
xchg
sbb
jg
xor
ljmp
mov
mov
jle
call
sbb
sub
loope
add
cmp
adc
lahf
xlat
adc
dec
enter
add
arpl
aad
sub
add
inc
in
xlat
loope
and
mov
sbb
lahf
dec
mov
in
add
add
mov
lahf
and
in
inc
add
jecxz
add
push
leave
cmc
add
push
add
xor
adc
das
xor
or
xor
daa
nop
sbb
in
ret
lds
xor
test
fcoml
mov
jne
mov
int
jb
mov
jp
ljmp
loop
cmp
jmp
mov
add
mov
adc
test
cmp
inc
add
fldt
loope
rolb
jae
jno
std
mov
cmpsb
lea
cmp
dec
jmp
aas
aad
in
jnp
daa
not
in
out
movsl
add
pop
mov
in
sub
or
mov
jg
push
xor
add
xchg
fstps
jae
or
mov
fmul
aaa
imul
xchg
addb
inc
add
add
inc
add
repnz
scas
loope
dec
cmc
sbb
loope
in
add
imul
add
mov
push
xchg
adc
cmpsl
mov
mov
add
xchg
push
push
cwtl
push
add
lret
inc
adc
daa
sbb
loope
int
aam
push
les
shll
xor
aad
add
lock
in
test
enter
fs
and
daa
and
add
push
add
xchg
mov
aam
lahf
fdivl
cmpsl
je
outsl
addb
mov
les
lea
add
dec
lcall
or
cmp
cli
js
addr16
dec
xchg
add
jmp
hlt
cltd
adc
out
jb
pushf
adc
add
lea
jecxz
mov
pop
aam
popa
lcall
nop
ja
and
loope
add
sti
add
das
int3
out
xor
sub
add
repz
jg
pop
fwait
stos
add
inc
xor
add
jns
ret
mov
js
add
mov
mov
fwait
and
loope
push
add
jne
mov
fcmovne
cmp
jae
add
pop
sbb
jae
push
jecxz
add
in
pop
xor
mov
movsl
out
fdivr
in
call
xchg
addb
mov
jecxz
add
pop
sub
mov
push
xchg
or
and
mov
mov
movsl
xchg
int3
aam
aaa
daa
stos
xor
mov
jns
addl
cmp
mov
outsb
lret
rorb
xlat
dec
sti
outsb
into
dec
or
es
hlt
sub
bound
mov
and
pop
lds
jp
mov
movb
jo
dec
xchg
hlt
in
xor
int3
mov
fstpt
dec
mov
and
addb
outsl
fnstcw
outsb
jns
out
ret
xor
jbe
jno
xchg
int3
sbb
lds
xchg
push
add
idiv
push
stos
pop
insb
adc
pop
faddl
add
mov
sbb
outsl
mov
and
push
sar
pop
addb
lea
jmp
js
lock
push
push
mov
mulb
cli
sub
and
adc
xor
mov
leave
popa
xchg
fdivrp
fistps
test
dec
sahf
movsb
sub
push
add
pop
outsl
pop
and
xor
xchg
push
cli
push
fs
decl
jle
cmp
int3
push
test
mov
lods
movsb
xchg
daa
repnz
sub
test
movsb
dec
fldcw
addr16
test
add
mov
cmp
adc
aaa
ffree
jl
pop
sub
pop
pushf
test
xlat
mov
mov
movb
cmp
aam
add
jl
inc
cltd
xor
or
int3
scas
pop
in
mov
sub
pop
mov
sbb
add
ret
pusha
add
adc
sbb
sub
hlt
mov
negl
mov
outsb
sbb
js
in
gs
loopne
and
addb
lret
mov
mov
xchg
jae
test
or
mov
adc
mov
aas
in
add
inc
mov
nop
pop
inc
inc
add
and
push
ret
add
add
push
call
lcall
ds
stos
jmp
testb
stos
xchg
in
cmp
xchg
sub
xchg
push
inc
ret
test
sbb
mov
and
test
sub
loopne
xchg
xchg
sub
insb
mov
cmpsl
daa
pop
mov
jnp
cmp
enter
mov
add
or
jbe
test
ds
add
xchg
mov
test
mov
loop
imul
xchg
fstl
int
jl
xor
mov
andl
aas
lret
inc
add
add
lahf
inc
add
push
pop
push
add
popf
scas
or
xor
jnp
inc
add
sbb
mov
jl
mov
pop
add
sbb
jp
jge
add
inc
add
add
xchg
movsb
sbb
mov
add
sub
pop
jno
adc
push
xchg
and
ljmp
jge
in
les
fldl
dec
shrl
inc
add
add
jmp
mov
movsl
inc
pop
jb
cwtl
call
mov
push
sub
ljmp
pop
int3
push
push
out
int
pop
dec
xor
and
inc
add
idivl
jp
push
jle
into
cld
js
xchg
shrb
push
aam
dec
insl
sbb
mov
js
fldenv
movsl
and
leave
xchg
aaa
and
push
sbb
cld
xor
popa
jg
xlat
xchg
in
outsl
fistl
packssdw
dec
mov
mov
repz
mov
rcrb
push
out
js
cmp
int3
mov
call
xlat
jne
sbb
dec
loope
nop
roll
frstor
dec
fcomp
inc
lock
dec
mov
and
push
lea
xchg
mov
mov
xchg
test
shlb
add
cmp
lea
add
shrb
mov
sub
mov
or
call
addr16
add
cmp
stos
push
jl
xchg
cli
jge
add
cmpsl
repz
popa
arpl
add
xchg
lods
xor
in
inc
mov
test
sub
or
jne
addb
addb
jns
fldt
or
push
test
cmp
mov
dec
xorl
outsb
pop
outsl
decb
js
jle
sbb
lods
sbb
stos
dec
faddl
add
add
je
add
mov
fs
dec
mov
jecxz
cmp
cmp
cld
push
divb
add
fwait
pop
cli
addl
add
addb
out
pop
push
xchg
outsl
mov
mov
shll
adc
std
adc
mov
inc
mov
add
outsl
dec
push
mov
mov
sub
jle
mov
shl
cmpl
pop
lahf
cmp
and
mov
lods
clc
movsb
mov
pop
inc
add
dec
or
pop
sbb
mov
and
sbb
pop
inc
mov
jno
xor
mov
fdivrl
lret
inc
add
out
jb
cmpsl
loope
addb
add
mov
mov
lods
cmpsl
inc
add
add
lret
sbb
loope
jnp
imul
add
addb
add
loop
add
imul
out
pushf
pop
cwtl
cmp
push
int
add
aas
mov
mov
and
mov
cmpsb
jo
cs
adc
test
adc
xchg
in
idiv
mov
ret
test
adc
inc
pop
push
lock
outsb
sub
fdivrp
sbbl
incl
mov
xchg
imul
dec
sbb
out
cs
cmc
ja
dec
add
or
jns
cmc
or
test
and
subl
dec
std
mov
add
and
hlt
dec
fdivl
add
jle
subl
dec
std
je
add
pop
daa
push
pop
lret
repz
rolb
ret
push
test
sarb
pop
inc
js
popf
outsb
mull
cmpsl
ffreep
add
movsl
fcomi
mov
add
jmp
add
and
pop
pop
test
xchg
push
xlat
rolb
jne
pusha
add
test
mov
sub
je
mov
stc
jge
mov
arpl
pushf
push
outsl
xchg
es
imul
icebp
push
popf
je
leave
mov
add
out
inc
add
cmp
add
mov
push
mov
sbb
sbb
jb
adc
add
mov
mov
add
xchg
int3
pop
lods
mov
sub
push
ljmp
cmp
cmp
add
dec
insl
clc
or
inc
add
add
div
cmpsb
in
jg
jg
pop
mov
xlat
or
aam
add
add
pop
xchg
lods
add
jl
pop
or
lods
mov
fisubs
add
mov
mov
lea
add
add
out
movsb
pop
or
cmpsb
mov
in
scas
mov
aam
xor
mov
addb
call
and
repnz
mov
add
pop
rorl
add
adc
inc
add
gs
dec
jae
aaa
rolb
pop
jecxz
dec
fcomp
and
sbb
add
rcl
dec
mov
inc
add
jg
push
jle
adc
cmp
and
aad
add
js
push
bound
out
xchg
test
pusha
add
add
xchg
in
or
mov
push
outsb
iret
lock
add
sub
push
cmpsb
mov
push
mov
adc
inc
dec
push
dec
adc
outsl
mov
push
push
jl
rcr
xlat
xchg
les
pushf
stos
cli
jnp
mov
add
insb
imul
mov
add
pop
xchg
xor
jmp
or
imull
hlt
aaa
sub
cmp
mov
add
negb
push
fbld
add
in
hlt
pop
leave
cmp
fwait
test
in
sbb
test
lods
add
sbb
xlat
push
pop
arpl
dec
enter
call
push
fbstp
cwtd
sub
sbb
frstor
or
mov
dec
and
rolb
test
loope
lahf
fcmovb
add
fsts
js
adc
xchg
push
jno
jmp
mov
and
or
jnp
jnp
loope
mov
push
sahf
inc
mov
mov
roll
iret
bound
cmpsl
pop
ja
outsb
bound
and
js
mov
lea
adc
cmpsl
lcall
bound
pop
mov
cmp
jecxz
popa
pushf
pop
clc
fwait
inc
aad
inc
ret
popa
das
push
lods
inc
xor
sub
jo
or
dec
mov
jl
add
pop
test
dec
cmp
mov
mov
push
xor
das
sbb
add
mov
mov
add
filds
jb
cmp
mov
xchg
add
jp
repnz
and
loop
pusha
add
mov
mov
add
adc
ljmp
sbb
pop
std
lahf
lds
shrl
add
cmp
aad
inc
add
add
aad
jae
adc
lret
repz
sbb
or
pop
fs
pop
add
jmp
out
test
lahf
ret
ficomps
repz
or
loop
pop
sbb
jl
out
xchg
push
add
clc
loopne
jbe
xchg
cmp
mov
push
add
sub
stos
push
or
xor
push
xor
repnz
inc
mov
je
add
iret
gs
popa
dec
jmp
faddp
pushf
or
and
pop
call
mov
sbb
push
sbb
icebp
mov
jo
lret
ja
sbb
call
enter
mov
jg
add
in
dec
push
shr
addb
lea
imul
push
rolb
pop
xchg
loope
xor
add
add
jo
push
adc
ljmp
lret
mov
xor
call
pop
sub
sbb
add
scas
dec
cmc
xchg
and
push
pop
push
push
lock
mov
lahf
and
push
mov
xor
int3
xor
sbb
jle
movsb
cmp
adc
cwtl
cmc
fldenv
or
lcall
push
aam
std
inc
add
and
add
sahf
mul
xacquire
sbb
int
xor
inc
add
sbb
in
mov
xlat
lea
arpl
into
lds
mov
in
rolb
pop
loope
mov
mov
pop
inc
add
mov
sbb
add
add
or
pop
scas
xchg
mov
push
sbb
sub
add
add
loop
mov
push
mov
dec
mov
add
lods
inc
add
pop
fucomip
sub
add
fwait
loopne
jl
push
shl
adc
xor
js
shrb
mov
icebp
push
outsl
js
mov
cmpsl
enter
add
and
lahf
push
push
test
test
ljmp
mov
mov
addl
add
adc
add
out
fidivrs
add
lret
loop
bound
rolb
iret
push
ds
and
xchg
add
sbb
mov
add
ret
add
xchg
lcall
repnz
cltd
mov
xor
loop
push
imul
mov
inc
jb
repz
sbb
sahf
lret
es
leave
aad
daa
aam
lahf
insl
popa
or
pusha
add
lcall
xchg
jne
inc
add
mov
pop
les
jbe
hlt
jo
pop
sbbl
inc
movsl
jno
rolb
insb
loopne
cmp
sub
in
inc
add
lcall
dec
fsubrs
inc
pop
sbb
fimull
addb
jge
push
push
cmpsb
aaa
sub
in
out
push
add
or
bnd
std
mov
jmp
inc
icebp
popa
mov
pop
in
js
aad
std
loop
jnp
add
repnz
xchg
outsb
or
rolb
out
mov
jp
xchg
scas
adc
es
cmp
jno
outsl
out
push
stos
hlt
add
mov
xor
addb
and
jae
cwtl
repnz
negb
push
add
js
pop
repnz
jae
add
test
popf
dec
dec
push
add
add
fwait
pusha
add
add
push
fcoml
or
dec
iretw
adc
jg
jns
adc
xchg
cld
andl
rclb
stc
cmp
mov
sbb
insl
mov
dec
scas
jbe
in
adc
insl
roll
or
dec
jo
ret
scas
cmpsl
xor
leave
push
adc
jge
mov
add
js
inc
xlat
shl
xor
sub
inc
add
lahf
and
fnstcw
pop
scas
cmp
out
cmp
jg
push
cs
add
pusha
add
or
push
loop
aad
sub
xchg
test
mov
popf
dec
lods
in
push
cmpsl
dec
cmp
mov
add
ret
imul
add
sub
hlt
sub
mov
daa
sbb
sub
push
sahf
les
in
test
add
xor
stc
movb
mov
cmp
mov
mov
or
sub
cmp
sbb
loopne
cmp
xchg
rolb
or
jbe
or
rcl
scas
push
cmp
fdiv
dec
adc
aas
std
mov
fwait
mov
sar
cli
aam
sub
jmp
shrl
call
add
cwtl
fnstcw
gs
cmpsl
inc
adc
rol
or
shrd
lock
icebp
cmp
add
adc
mov
pop
mov
push
push
in
mov
dec
push
movsl
inc
add
lahf
or
dec
add
push
hlt
es
or
scas
add
test
sahf
lock
cmpsb
fcoms
inc
je
sub
mov
lahf
push
dec
lcall
sub
aam
sub
jns
inc
popa
flds
int
xor
movsl
fstpt
jb
aas
fsubr
xchg
insb
push
xchg
or
filds
add
mov
mov
add
mov
jae
test
add
jmp
sub
out
movb
mov
sbb
repnz
adc
scas
jg
sub
shll
mov
add
and
lods
testb
sub
xor
divb
clc
leave
jb
adc
addb
add
lret
add
xor
push
movb
mov
rolb
or
or
movsl
dec
shll
add
mov
cmpsb
dec
inc
add
fsubrl
aam
mov
js
cmp
pop
movsl
divl
or
add
xor
add
dec
je
mov
loop
pop
fiaddl
clc
out
imul
fists
xlat
push
xchg
xchg
stos
mov
add
add
mov
mov
cli
test
mov
in
mov
xchg
or
add
hlt
mov
push
in
fnsave
add
sub
xchg
cwtl
sub
sahf
das
jg
lock
clc
notb
jns
inc
inc
add
call
fsubl
pop
or
mov
enter
pop
cmp
fsubrl
or
adc
xchg
dec
mov
xchg
outsb
iret
xchg
mov
xchg
and
mov
loop
je
fldenv
fisttpl
xor
sahf
lods
popf
cld
xor
mov
addb
push
add
pop
das
or
stos
stc
jo
div
fisttpl
lods
or
pop
icebp
test
and
add
xchg
xchg
lret
imul
pop
cld
push
dec
arpl
sub
cvtdq2ps
adc
repz
add
loop
jb
mov
push
pop
sub
out
fs
mov
inc
add
add
sbb
jle
add
mov
insb
lock
cmp
stc
jb,pt
int3
adc
loop
aam
add
lods
rorl
or
pop
incl
sub
insl
dec
repz
cmpsl
out
jmp
jp
add
push
aas
leave
and
loop
xchg
inc
cmpsl
and
dec
sahf
int3
jp
pop
mov
les
mov
adc
pop
addr16
out
lcall
clc
adc
outsl
cmp
jns
add
notl
test
sub
jp
and
sbbl
adc
adc
test
in
jb
pop
sbb
pop
mov
hlt
int
cmp
push
stc
mov
add
adc
jmp
or
sahf
add
mov
jae
xchg
xor
xchg
mov
add
stc
lea
mov
cmp
fdivrs
rol
mov
push
test
add
jg
lock
jp
in
out
in
shrl
or
lret
test
test
pop
mov
push
shl
dec
jns
dec
sbb
sbb
pop
sahf
and
inc
add
adc
mov
add
imul
pop
sub
mov
jg
push
adc
xor
and
dec
jp
or
or
add
scas
int3
add
mov
add
fistpl
xchg
jb
add
test
mov
insl
jns
and
test
mov
stos
fldenv
fwait
pop
jmp
aaa
rcrl
add
sub
lcall
jmp
enter
inc
movsb
push
jmp
sbb
pop
mov
sub
adc
mov
in
adc
adc
loop
add
mulb
sub
popf
mov
mov
insb
mov
sbb
xor
add
mov
sub
dec
call
cmpsl
lods
fisttpl
cli
cld
xchg
ja
stc
jbe
xor
popa
rcll
or
and
jle
adc
in
cli
cmp
icebp
das
jns
sub
cltd
xchg
sar
daa
sbb
add
ja
fiaddl
push
scas
xor
cmp
adc
xor
cmp
pop
add
fbstp
iret
sbb
test
addr16
push
ss
xchg
xchg
hlt
add
cmp
std
ret
inc
and
aaa
or
sbb
and
icebp
xchg
and
pop
dec
cmp
push
and
xchg
ds
negl
rolb
mov
mov
push
mov
add
sti
push
fmuls
mov
adc
mov
lds
cwtl
in
pop
jne
push
mov
inc
add
xchg
push
add
add
push
add
xor
loop
pop
dec
mov
xchg
popf
xchg
int
inc
add
or
xor
cmpsl
cmp
jns
mov
in
and
inc
fcmovnbe
pop
mov
add
movb
xor
xchg
lock
call
add
cmp
pop
aam
test
addl
pop
mov
jb
andl
pop
bound
negl
leave
mov
cmp
rorb
pop
xlat
jnp
mov
dec
rolb
add
pop
xchg
mov
mov
loopne
nop
inc
add
pop
pusha
add
mov
xor
hlt
push
jnp
hlt
faddp
stos
out
xlat
les
out
add
nop
mov
fsubrs
add
ljmp
mov
unpckhps
add
out
xor
xchg
daa
push
adc
jno
mov
or
js
push
pop
cmp
and
dec
inc
imulb
mov
int3
and
mov
jae
addb
push
xchg
dec
inc
add
pop
jns
subl
xchg
mov
mov
imul
push
scas
in
jle
fs
inc
sub
mov
lds
add
insl
packssdw
push
pop
out
add
sub
fistpl
lea
add
jno
and
nop
iret
sbb
les
xor
loopne
mov
push
jmp
icebp
sti
js
sub
cmp
dec
popf
xchg
jnp
pause
push
test
insb
outsb
hlt
movsl
movsl
mov
add
push
into
mov
ljmp
movl
aaa
xchg
stos
xlat
or
and
add
rcr
mov
sbb
outsl
dec
enter
inc
fwait
push
outsl
test
mov
push
xchg
push
bound
push
mov
mov
add
mov
or
adc
xor
add
mov
push
add
pop
sbb
lret
inc
mov
leave
dec
popa
sub
mov
gs
pop
sub
cli
mov
pop
sbb
or
cmp
fnstsw
cmp
std
push
sub
add
jle
test
sub
add
jns
or
add
push
fs
sahf
cmp
adc
and
fidivrs
and
mov
inc
icebp
or
xchg
leave
xor
in
add
ret
test
in
into
repnz
jnp
mov
inc
cmpsl
lcall
mov
enter
pop
int
add
lret
push
stos
xchg
mov
inc
add
int
rcll
into
outsb
fdivl
cmp
into
negl
add
daa
add
pushf
mov
addb
pushf
hlt
and
add
lea
jns
into
jno
and
std
pop
sbb
inc
add
les
stos
pop
psubd
inc
scas
cwtl
pop
adc
inc
sbb
inc
stc
cmp
fwait
icebp
and
loop
fistps
add
add
adc
pop
and
bnd
add
shl
and
outsb
mov
jmp
adc
push
sub
lods
inc
add
in
jb
je
xchg
das
sbb
add
inc
mov
and
and
and
insl
jge
les
clc
push
lahf
sub
jge
jb
pop
cld
inc
add
loopw
add
pop
rcl
subl
add
lcall
sbb
cmp
inc
jp
xchg
fdivrl
scas
leave
adc
mov
or
mov
push
aaa
into
cmp
out
mov
cmpsl
jge
mov
add
ss
lahf
fndisi(8087
pop
pop
fiaddl
jnp
xor
daa
addb
sbb
std
nop
lock
fwait
call
sbb
cmpsl
pop
stos
adc
addb
jp
pop
sbb
mov
dec
in
mov
cmp
push
and
into
divb
sti
ljmp
fadd
add
mov
lods
lcall
push
inc
add
cmp
xchg
xor
add
sbb
dec
push
js
mov
ds
jg
inc
add
add
andl
add
loope
push
arpl
orl
jne
aad
hlt
push
jnp
add
clc
fidivrs
push
mov
pop
mov
ret
addr16
push
jne
mov
sbb
push
push
jno
dec
xor
into
sbb
ss
out
cmpsb
jnp
popa
rolb
mov
arpl
xchg
es
stos
fidivl
pop
iret
mov
inc
add
add
movsb
adcl
mov
or
int3
mov
call
mov
push
inc
mov
push
sahf
mov
push
pop
dec
pushf
adc
xchg
add
lahf
bound
mov
push
mov
clc
adc
aas
fcom
dec
sub
push
add
nop
mov
mov
and
lea
inc
add
cmpsb
inc
add
movb
adc
jnp
int
test
lret
push
inc
add
dec
sbb
cmpsl
imul
jnp
je
fadds
sti
ja
mov
mov
lcall
add
add
test
enter
jl
add
pop
and
add
cmc
cmp
jmp
js
and
xor
ret
dec
push
repnz
mov
add
daa
mov
cwtl
movb
jnp
scas
out
or
in
out
and
out
jl
mov
add
add
pop
pop
filds
mov
ljmp
mov
add
push
push
ja
mov
push
pop
rcrl
cld
lods
xor
es
cmp
out
sbb
stos
sti
xor
jecxz
pop
mov
mov
enter
fs
and
fwait
pusha
add
pop
xor
jne
jp
outsl
insb
les
ljmp
les
xchg
mov
data16
xchg
xchg
add
je
pcmpeqw
sbb
fs
sbb
xor
insl
lret
and
ds
lea
adc
push
mov
rolb
or
es
adc
jns
popl
lods
jae
cmpl
dec
imul
daa
shr
hlt
ret
pop
xor
je
sti
pop
leave
push
lea
add
push
add
and
push
ja
in
nop
push
xor
leave
hlt
cli
or
outsb
cmpsl
mov
and
add
xlat
xchg
lret
mul
xlat
cmp
dec
imull
xchg
xchg
inc
push
add
movb
movsl
popf
pop
xor
repnz
and
icebp
cmp
bound
popf
mull
mov
mov
aaa
in
cmc
repnz
out
xchg
xchg
cltd
push
inc
add
lret
jmp
sub
loope
push
lods
lret
loop
add
jns
xchg
dec
into
fisttpll
addb
and
cmp
sub
mov
adc
ret
cmp
or
push
test
inc
imul
add
jl
into
int3
push
xchg
cwtl
jl
adc
cltd
shlb
in
test
and
fxch
push
xor
mov
inc
adc
stos
push
icebp
cltd
add
sahf
push
leave
push
jo
gs
mov
mov
mov
mov
jnp
out
sbb
sub
xor
push
add
add
aam
pop
xchg
xlat
aad
call
sbb
mov
mov
inc
ret
and
nop
push
xchg
xor
js
xor
imul
mov
add
ds
adc
mov
xchg
les
cmp
xchg
sub
test
scas
jmp
jl
push
mov
cmc
movsb
push
jl
movsb
int
mov
addb
jg
clc
sbb
jmp
inc
add
int3
fistps
jnp
jbe
sbb
mov
mov
add
ror
adc
test
pop
mov
cltd
dec
cmpsl
jb
xbegin
loopne
faddl
add
lods
jmp
jl
ds
jp
es
mov
mov
push
sub
pop
mov
jmp
mov
repnz
fsts
int
ja
sub
pop
data16
loop
mov
js
std
xor
push
add
sbb
mov
ss
pop
mov
test
mov
sbb
adc
pop
sbb
sar
mov
xor
jmp
adc
stc
lret
addb
out
mov
jnp
in
add
adc
lods
lea
cmc
pop
fidivrl
lods
xor
push
mov
adc
add
mov
nop
inc
add
add
jbe
movsl
fdivrs
rol
ljmp
imul
jne
pop
loope
and
dec
sub
mov
mov
or
and
es
loope
cli
shrb
lahf
leave
adc
adc
xchg
mov
mov
lods
ret
mov
aam
sbb
xor
add
add
pop
jno
ret
cmp
sub
rcl
mov
xchg
vmovshdup
ss
add
addb
scas
jae
mov
adc
out
add
add
mov
movb
into
jmp
iret
aam
test
test
popa
xchg
bound
mov
iret
scas
mov
mov
cld
cltd
cmp
jnp
lahf
js
mov
add
mov
add
out
pop
push
cmp
add
jo
add
movsb
out
add
xchg
jmp
cmp
and
lcall
mov
adc
mov
mov
out
inc
icebp
in
jnp
add
add
movsl
int3
or
xor
jmp
and
sub
les
cld
in
cmpsl
or
inc
out
popa
gs
dec
sub
outsl
cs
push
add
add
gs
stos
cmp
sub
push
lds
xor
or
cmp
adc
or
sbb
sub
add
mov
loop
clc
std
cmp
test
add
sahf
and
insb
enter
mov
bound
cmpl
cmpsl
sahf
or
sbb
jge
adc
pushf
aaa
cmpsb
add
sahf
je
das
jmp
adc
push
add
inc
add
loopne
lcall
pop
aad
dec
lods
test
mov
pop
xchg
inc
xchg
addr16
pop
fisubl
rolb
je
jns
outsb
jp
cmp
rolb
fstpt
sub
in
movsl
sahf
fisubrl
jae
stc
test
add
cmpsl
scas
ja
repz
push
add
sarb
je
pop
cmp
je
pop
movsl
fwait
sahf
mov
nop
inc
dec
mov
adc
loope
sbb
je
add
outsl
jecxz
sti
mov
js
and
or
in
mov
jae
adc
clc
out
pushf
adc
ret
push
mov
test
rolb
mov
aad
lahf
lahf
mov
push
jnp
adc
jne
pop
dec
inc
add
test
add
adc
test
xchg
mov
add
dec
nop
sbb
adc
ss
sar
mov
push
int3
pop
je
into
add
and
sbb
test
in
xchg
out
and
xchg
mov
test
mov
outsl
dec
mov
sbb
or
je
mov
pop
mov
xchg
icebp
adc
push
rolb
movntq
fmuls
imul
xchg
clc
push
pop
push
arpl
push
pop
sub
pop
inc
mov
cmp
scas
push
inc
add
xor
fnstenv
pop
negl
xchg
pop
stos
ret
push
jne
jno
sub
outsb
mov
mov
inc
inc
cmp
loop
jnp
movb
jbe
fdivr
lods
lods
mov
nop
stos
xchg
push
loop
dec
add
mov
jno
xchg
pop
je
or
mov
movsl
jg
insb
insb
xor
xor
hlt
xor
aas
add
xchg
mulb
xor
cmp
mov
in
jmp
push
pop
ss
fdivs
pushf
out
add
inc
add
outsl
sarl
mov
movsl
and
das
jbe
adc
cmpsb
fdivl
int3
mov
popf
int3
add
stos
cmp
shlb
cmp
dec
pushf
mov
clc
mov
sub
xor
roll
int
pop
cwtl
paddsw
inc
add
inc
add
lret
cmp
push
inc
rorb
sbb
mov
mov
repnz
add
add
add
mov
or
scas
enter
scas
jmp
xorl
addl
cld
int3
sti
in
into
and
sbb
or
sub
insl
sub
push
adc
pop
test
cmpsb
sub
sarl
fstl
pop
mov
pop
call
xor
out
dec
sbb
inc
xchg
and
push
inc
jae
inc
add
push
inc
mov
add
cmc
mov
std
xor
int
mov
jle
pop
cmpsl
shr
leave
jl
add
data16
sub
xor
mov
je
cmp
xlat
cld
mov
push
sub
and
test
mov
jmp
lret
jmp
addr16
shlb
add
jl
pop
mov
mov
jle
push
mov
ljmp
pop
aaa
push
pop
adc
pop
jmp
pop
mov
mov
xchg
icebp
sub
std
push
sbb
inc
scas
fistps
mov
lods
mov
out
sbb
xchg
imul
lcall
mov
push
movsl
call
ljmp
fstl
inc
add
jb
inc
jg
add
dec
mov
sbb
add
or
pcmpeqb
data16
add
mov
adc
add
adc
jl
cmp
movsb
shll
add
jle
xchg
adc
xchg
mov
mov
inc
add
add
clc
addr16
addr16
mov
insl
mov
adc
jo
aad
mov
xlat
imul
mov
mov
addb
add
cmp
notl
bnd
imul
jle
add
mov
ds
and
fcoml
and
lods
cltd
in
test
or
cltd
mov
movl
mov
push
int3
mov
insl
and
jg
mov
mov
in
insb
lret
jl
ds
rorl
xchg
data16
dec
push
add
mov
pop
sub
mov
out
inc
add
in
dec
dec
push
cld
clc
dec
fadds
jl
fists
test
jecxz
mov
xor
aaa
and
jg
sbb
and
or
jle
push
sahf
aam
out
jbe
jb
nop
dec
addb
or
inc
cmp
cmpl
movsl
xchg
mov
enter
jnp
add
dec
cmpsl
movb
out
adc
add
mov
push
lcall
les
das
sub
movsl
leave
ficomps
push
and
imul
add
mov
pusha
add
lret
divl
xor
lods
jge
add
add
mov
mov
jp
icebp
jl
fcomps
inc
jge
cmp
add
aas
pop
mov
inc
testb
push
rolb
movsb
fldenv
add
out
and
mov
jns
imul
test
cmc
hlt
in
int
xchg
xchg
push
mov
add
subl
sub
lea
push
add
lcall
cmp
xchg
sub
addb
add
cmpl
add
jp
repz
add
jmp
push
icebp
or
and
ds
or
xchg
inc
add
testl
mov
jl
popa
out
add
add
imul
insb
and
cmc
out
addb
jo
call
es
out
mov
xchg
out
add
cmc
mull
add
fisubl
add
pop
pop
neg
mov
daa
mov
addr16
clc
rclb
std
push
mov
add
stos
mov
mov
sti
xor
in
push
cmp
nop
repnz
inc
jp
jmp
adc
daa
mov
xchg
dec
shll
in
pop
lock
and
push
daa
pop
jl
pop
and
jp
push
adc
mov
mov
insl
dec
les
and
les
mov
test
pop
xor
push
or
mov
ret
fistl
ss
and
pop
enter
arpl
std
pusha
add
ss
add
push
sub
ljmp
fimull
jno
jne
js
mov
add
data16
stc
jg
in
movsb
les
jnp
jl
inc
add
mov
sti
and
dec
repz
pop
xor
cmp
out
xor
xor
hlt
inc
gs
sbb
fucomip
out
pop
cmp
out
rcrb
cmpsb
addb
add
jecxz
adc
sub
lds
add
fimull
push
les
std
or
add
lds
in
out
and
idivl
xchg
cvttps2pi
add
aaa
mov
add
cmp
jle
repz
inc
add
sbb
fwait
sub
lret
clc
xor
cmp
inc
add
sbb
aad
or
add
push
out
jo
pusha
add
xor
fucomi
xor
jp
hlt
rcl
aas
clc
insb
scas
adc
xlat
mov
jmp
aam
lcall
or
add
sub
add
outsb
inc
jmp
movhps
mov
gs
mov
xchg
mov
frstor
add
out
ret
and
sub
popf
dec
hlt
fidivrs
and
cwtl
sub
add
cmpsb
add
add
xchg
js
xlat
fists
adc
adc
add
ffree
sbb
add
aad
dec
push
add
test
or
mov
lods
or
xor
fsubrl
addr16
xchg
jae
add
sbb
xchg
out
xlat
jecxz
js
jp
mov
int3
mov
push
add
shrl
ljmp
imul
imulb
sub
push
push
imul
inc
add
ja
add
jb
mov
cmpsb
in
insb
sbb
jmp
dec
push
pop
pop
pop
in
dec
push
mov
mov
xchg
dec
or
cmp
mov
sbb
leave
push
div
or
pop
mov
sbb
xchg
decl
pusha
add
loop
add
and
in
ret
mulb
jecxz
and
xor
and
add
dec
sbb
jno
jbe
add
mov
addb
bound
pop
xlat
sahf
lret
into
leave
repnz
leave
sub
or
call
mov
std
add
cmp
adc
fidivrs
insl
and
push
in
addb
leave
sbb
insb
sub
pop
inc
ficoms
nop
pop
rcrb
pop
or
mov
jne
add
and
jb
sti
pop
mov
adc
fcmove
mov
jecxz
jge
test
xchg
dec
enter
mov
mov
sbb
adc
pop
seto
arpl
and
cmpl
popf
fistl
add
jae
lcall
fs
enter
xor
dec
cmc
mov
cmp
cli
enter
add
imul
add
add
stos
push
push
add
add
negb
push
dec
or
xor
jbe
xor
pop
sarb
dec
push
mov
jnp
adc
outsb
sti
cmp
icebp
pop
stos
sub
loope
shlb
add
mov
leave
push
mov
sarb
and
jbe
pop
add
popa
leave
les
push
add
test
jle
jl
repz
loope
popa
mov
fcmovb
add
fstps
decb
or
push
movsl
testb
mov
cmp
fsubr
add
imul
mov
frstor
sub
das
push
xchg
ja
pop
jnp
add
ss
xlat
inc
das
mov
gs
or
jb
or
movb
mov
pop
mov
xchg
or
out
lahf
aad
add
hlt
pop
arpl
clc
adc
sbb
addr16
pushf
push
mov
xor
add
pop
mov
add
lcall
bound
or
adc
addr16
out
cltd
xor
imul
sti
ffreep
add
das
loope
repz
jge
pop
cmp
addb
xchg
fstl
mov
clc
int
cld
sub
imul
shrl
adc
mov
in
cmp
lds
nop
aaa
or
lret
jne
mov
push
add
and
add
xor
int3
arpl
pop
mov
jo
fwait
shl
jns
jmp
and
sub
sbb
push
sub
lock
enter
jp
jle,pn
and
mov
cltd
rcrl
mov
mov
xchg
int
jmp
or
movsl
cs
adc
add
scas
xchg
mov
add
cli
insl
cmp
ret
or
mov
jmp
add
call
dec
mov
add
sbb
int3
aam
push
movb
addb
add
add
aas
lods
test
sti
fwait
les
mov
out
sbb
lea
in
fldt
ljmp
cmp
cmp
int3
lods
int3
sbb
add
aad
inc
add
pop
jbe
inc
add
shll
dec
jo
add
into
int
mov
jb
push
add
push
rcll
arpl
js
loope
add
add
sbb
out
xor
push
mov
test
xchg
js
das
inc
mov
mov
inc
andl
shll
ss
inc
or
push
lods
mov
mov
js
cmpsl
stos
xor
test
mov
js
sub
bnd
xor
add
daa
xor
mov
pop
cmpsb
inc
add
sbbl
maxps
ljmp
push
int
pop
ss
push
out
fimuls
in
cmp
outsb
outsb
rcrl
jmp
mov
pop
imull
lret
js
push
add
mov
pop
ret
cmpsl
xchg
insw
lret
movb
push
push
mov
ss
xchg
xor
pop
outsl
bound
cmp
mov
pusha
add
stos
or
fstps
stos
pop
xor
push
movb
cld
testb
add
test
jmp
cmp
adc
ret
mov
xchg
xchg
push
ss
dec
cmp
add
dec
mov
adc
call
pop
aad
dec
ljmp
repnz
into
adc
repz
shl
mov
or
fisubl
add
add
mov
outsl
dec
push
add
or
outsl
dec
dec
cltd
lret
cmp
rorb
push
mov
incl
push
inc
add
sahf
xchg
pop
cmc
pop
cld
loope
xor
xor
in
pop
jno
jmp
xor
and
xor
ret
mov
mov
add
lods
pop
ret
add
push
addb
xchg
cmpsl
mov
push
sbb
stos
mov
imul
xchg
dec
mov
add
or
out
icebp
movb
hlt
fdivl
pusha
add
shrb
lock
ficompl
or
mov
daa
xchg
inc
cli
or
add
clc
xchg
and
shlb
add
inc
add
adc
add
dec
or
pop
mov
push
sbb
stc
cld
and
rcrl
in
mov
sub
rcrl
add
jno
add
rolb
test
sti
xchg
aam
pusha
add
pop
loopne
xor
addb
push
jl,pn
jae
cmc
add
imul
scas
das
popa
std
mov
lods
sti
roll
add
js
and
stos
add
adc
add
dec
daa
popf
movb
out
adc
insl
cmp
shll
add
push
add
add
shlb
leave
xlat
lock
xor
add
adc
mov
fsubs
sbb
in
fisttps
dec
jmp
jo
push
push
fcoml
outsb
jnp
int3
mov
mov
jp
pushf
repz
xchg
arpl
ret
in
repz
movsl
test
dec
xchg
mov
mov
inc
add
add
pushf
cmp
mov
add
dec
das
mov
nop
xlat
fsts
inc
add
mov
lret
lods
add
int3
cmpsl
repz
mov
daa
adc
add
ss
fsubs
and
mov
mov
sub
or
push
addb
int
pop
dec
add
sub
xor
enter
addb
jmp
inc
outsl
dec
movsb
insl
pop
xor
cmp
scas
leave
add
mov
sub
ret
pop
xor
mov
sub
add
fldcw
jno
aaa
and
push
push
pusha
add
fistps
mov
add
mov
lea
jae
inc
arpl
decb
cmpsl
cltd
adc
add
cmc
ss
mov
jne
add
pop
inc
add
fiaddl
mov
pop
cmp
add
adc
and
or
lret
shll
push
dec
cmp
ljmp
addb
push
and
ret
addr16
mov
jge
mov
sbb
add
sub
and
ds
adc
addb
arpl
xor
mov
cmp
xchg
out
xchg
and
mov
dec
cs
mov
rolb
mov
sub
std
add
dec
dec
dec
loopne
add
push
push
xchg
mov
cltd
pop
sub
subl
dec
sbb
aad
mov
sub
add
mov
cmc
xchg
pop
in
pop
jecxz
sbb
addb
add
fimull
or
or
xlat
insb
ljmp
cmpsl
scas
push
add
pop
push
pop
push
outsb
lds
adc
sbb
cmpsb
mov
fsubp
pop
dec
outsb
scas
iret
out
andl
inc
sbb
stos
bound
xchg
cltd
movsl
movsb
and
aas
jno
hlt
mov
mov
testl
add
adc
fisttpl
nop
bound
divb
xchg
es
add
jno
sbb
loop
mov
inc
add
pop
out
sbb
cmp
add
outsb
push
xchg
sbb
lock
imul
mov
fisubrl
int3
hlt
jmp
mov
mov
jne
add
add
jo
mov
decl
in
pop
inc
pop
mov
push
dec
scas
mov
fwait
cmpsl
or
leave
inc
add
cmp
xor
test
or
shl
loop
out
dec
aas
xchg
mull
add
test
sub
stc
stos
out
jecxz
mov
lds
add
inc
mov
loop
leave
or
mov
pop
in
sub
ljmp
sarb
xchg
mov
jle
lods
or
sub
loope
sti
push
dec
mov
insl
lcall
mov
push
ss
cmpsb
imul
lret
shlb
xor
and
in
or
inc
add
inc
cmc
mov
adc
add
dec
add
cltd
mov
add
test
iret
xchg
lret
in
add
cmpsl
cmpsl
mov
inc
add
add
cmp
mov
les
push
add
add
ja
add
fwait
lahf
dec
lock
hlt
sbb
test
add
call
repnz
adc
add
or
adc
aas
xchg
pop
cmc
stos
cmpsl
xor
add
and
and
jno
add
jb
mov
inc
insl
mov
addb
adc
cwtl
cmp
sub
shll
lods
test
add
xchg
repnz
cwtl
cmp
xorl
cmc
into
mov
test
add
aad
add
mov
cwtl
fidivrs
and
pop
fcompl
add
mov
sub
aam
or
xchg
xor
fmulp
mov
push
sarb
mov
push
lock
fbld
es
mov
add
pop
out
jae
add
loopne
out
dec
jnp
aad
out
out
addr16
sarl
or
aam
mov
aas
js
mov
inc
add
cwtl
push
or
xchg
xor
arpl
add
mov
adc
scas
imul
out
add
das
movsl
sbb
pop
insl
pop
rol
xor
add
outsl
stos
push
int
mov
xchg
adc
add
lcall
je
add
mov
lea
idivl
pop
shlb
jmp
sub
xchg
out
std
or
jle
addr16
mov
in
xchg
jnp
bswap
rcr
mov
jl
sbb
xchg
lods
jge
out
pop
and
jb
ud2
jbe
in
faddl
les
shll
cltd
cwtl
mov
inc
add
bound
push
add
sub
inc
sbbl
shrb
cld
jb
pushw
add
or
dec
jecxz
cmp
add
xor
jp
clc
clc
js
addl
pop
lret
cmpsb
sbb
outsb
enter
divl
mov
cli
mov
push
imul
adc
lcall
daa
inc
add
sbb
xor
dec
mov
mov
jae
pandn
mov
movsl
add
add
xchg
ja
jg
je
cmc
ljmp
push
repz
ret
cmc
jo
add
add
rcll
add
add
and
inc
adc
xchg
ds
mov
and
cmpsb
int
pop
test
adc
mov
aad
sarb
push
sbb
add
out
jecxz
arpl
lock
stos
pop
aaa
pop
xlat
and
fistps
push
push
xrelease
mov
jbe
add
stos
mov
mov
cltd
dec
loope
push
push
clc
jg
insb
adc
push
mov
addb
add
daa
cmp
mov
push
and
pop
xchg
outsb
xchg
mov
fcomip
jno
into
and
inc
add
jne
stos
mov
or
add
sub
push
aad
xchg
mov
cli
mov
jo
add
js
inc
or
mov
insb
cwtl
vmovddup
dec
inc
add
cmp
jl
repz
in
stc
sub
mov
dec
sbb
xchg
jae
in
sarb
test
xor
push
dec
pop
insb
ss
popf
test
cmp
adc
enter
sahf
sub
add
dec
nop
xchg
mov
data16
pop
dec
xchg
mov
lods
xor
fdivr
icebp
or
xor
mov
repnz
stc
inc
add
ljmp
prefetcht1
or
addb
add
add
lret
mov
popa
mov
je
shrl
shl
pop
mov
or
add
push
in
mov
into
dec
sbb
gs
addb
jo
sbb
pop
fidivl
daa
test
mov
and
cld
icebp
inc
jle
testb
push
or
add
lret
push
jns
cltd
stos
mov
add
lahf
mov
add
test
xlat
shrl
push
jns
add
mov
ss
push
pop
dec
je
lret
call
cmpsb
or
lret
push
mov
pop
mov
leave
mov
xchg
shr
inc
add
sarl
xchg
push
cmc
es
lods
nop
add
stos
mov
fldl
dec
les
test
fbstp
scas
add
adc
xchg
dec
mov
add
in
mov
jbe
outsb
or
mov
cmpsb
jno
pop
inc
leave
jnp
cmpsb
mov
xor
jns
addb
dec
repnz
cmp
rolb
pop
dec
xchg
out
mov
lods
mov
xchg
sbb
pusha
add
lds
clc
insl
sbb
outsb
or
dec
lcall
dec
les
rcr
sti
stos
test
push
jne
add
fstps
mov
push
push
pop
push
xor
cmp
test
fisubs
push
in
loope,pn
fiaddl
add
adcl
jmp
loopne
fisubl
jb
sbb
push
xchg
jg
or
pop
pop
std
inc
pop
arpl
mov
addr16
cli
in
es
dec
std
adc
jl
stos
adc
sbb
add
insl
loope
loopne
cs
pop
xor
push
add
das
or
jns
loop
aas
mov
dec
pop
fnstcw
dec
lock
insb
jnp
add
push
pop
arpl
jmp
add
or
popf
and
adc
add
add
xor
fnstsw
dec
xchg
pop
nop
es
test
out
rcrl
addb
sti
sarl
push
and
adc
popf
clc
fnstenv
in
ss
movb
push
dec
incl
xor
push
mov
ret
into
push
imul
inc
leave
cmpsb
test
incl
stc
and
and
xlat
cmc
jne
lock
sbb
mov
bound
cmpsl
mov
clc
enter
sbb
js
mov
addb
push
mov
imul
and
cs
jmp
test
jns
pop
add
cwtl
lcall
mov
outsl
or
adc
adc
mov
sbb
mov
add
add
mov
or
je
mov
xor
mov
xchg
mov
movb
daa
jl
add
data16
addb
add
add
add
pushf
test
jle
cmpsb
fbstp
add
push
xor
fucomi
cmp
addb
int
pop
in
add
stc
sbb
les
and
push
jae
lds
imul
xor
or
mov
add
pushf
rcrl
adcl
add
cld
push
mov
dec
sti
aam
out
jmp
test
xchg
test
jns
ljmp
xchg
aaa
cld
mov
cmp
cmp
xlat
pop
dec
push
lea
orl
or
stc
cmp
mov
add
sub
frstor
lock
xchg
out
addb
inc
out
inc
sbb
add
pushf
sbb
sbb
mov
pop
adc
int3
call
stos
or
cmp
loopne
xchg
cmpsl
inc
add
adc
rorl
mov
or
pop
repz
dec
cmp
movb
add
sub
push
stc
ficompl
mov
clc
inc
add
rol
add
ret
mov
mov
xor
sarl
repnz
gs
lock
rcll
popa
inc
add
fistps
or
mov
les
add
sub
test
cmp
and
lods
sahf
sbb
cltd
sbb
add
or
push
jecxz
cmp
in
fcmovnb
add
ds
mov
loopne
int3
or
sbb
sub
scas
lret
pop
xchg
mov
pop
cmp
pushf
xor
shll
add
pop
mov
in
xchg
mov
or
test
inc
xor
sbb
popa
or
xor
sbb
rclb
test
mov
push
add
out
bound
sub
xlat
pop
dec
popa
xchg
addb
push
and
jl
and
add
add
fnsave
inc
add
xchg
xchg
dec
pushf
cltd
xchg
or
fistl
stc
cli
push
mov
xor
xchg
mov
stos
fs
xchg
iret
inc
add
push
dec
or
es
roll
fiaddl
jl
jnp
sbb
xchg
aam
push
add
pop
rorb
aam
shlb
mov
add
xchg
into
arpl
push
mov
inc
add
test
bound
mov
xchg
sub
push
je
jne
inc
movsb
iret
cmp
sub
test
insl
mov
jae
mov
add
inc
add
addr16
pop
lcall
lahf
sbb
cmp
sbb
iret
jp
add
or
add
mov
std
dec
xor
inc
addb
sub
addl
inc
es
sub
shl
sbb
pop
mov
mov
add
push
addb
call
jmp
addb
fsubrl
adc
pop
ret
mov
add
add
cmp
pop
add
adc
loop
addl
jb
in
movsl
inc
push
adc
xchg
add
jae
adc
sbb
iret
xlat
sti
aas
cmp
daa
in
rcr
sub
or
divb
gs
add
mov
and
into
popf
lahf
cltd
mov
add
add
rcll
into
enter
xor
dec
out
cwtl
sub
add
dec
jns
pop
or
sbb
inc
add
add
iret
pushf
pop
lods
sti
repz
neg
ljmp
xchg
aaa
mov
sub
dec
and
xchg
rorl
fwait
pushf
rol
add
push
jmp
xchg
insb
xor
pop
lods
sub
aad
sbb
stc
ss
jne
push
xchg
and
lret
add
cli
sub
lret
icebp
mov
mov
push
mov
or
mov
and
jbe
xchg
mov
mov
mov
dec
and
std
mov
add
jnp
lcall
adc
lea
lcall
cmc
cwtl
dec
les
mov
cmpsb
and
dec
xchg
roll
pop
cmp
lea
jle
loop
jmp
push
jo
xchg
imul
add
test
daa
add
xchg
mov
out
sahf
push
call
pop
mov
push
lret
gs
mov
arpl
inc
add
mov
mov
xchg
pop
shrb
pusha
add
add
xchg
pusha
add
jge
int3
jbe
insb
adc
add
add
les
add
movsl
and
pop
movl
sub
push
popa
mulb
daa
arpl
pop
inc
add
and
stos
mov
push
arpl
sbb
sbb
pop
shrl
adc
iret
xadd
xor
inc
pop
bound
cmp
call
into
inc
add
fsubrl
cmpsb
xchg
dec
sbb
addb
pop
int3
daa
xor
push
add
mov
cli
and
jecxz
leave
mov
pop
int3
in
ret
pop
dec
xchg
mov
push
mov
dec
nop
lods
sbb
gs
mov
arpl
pop
cmp
inc
add
int3
shll
fcmovnu
adc
cmp
mov
pop
pop
dec
and
or
addr16
fucom
mov
dec
mov
loope
das
repz
add
cli
hlt
iret
ret
int3
cmp
mov
addb
test
insb
push
jns
loopne
fwait
mov
sub
add
aam
inc
add
add
sbb
cwtl
and
js
dec
mulb
bound
insb
sbb
jno
push
add
dec
sbb
xor
dec
mov
in
repz
mov
lock
ds
jns
cmp
and
jl
sbb
clc
outsb
xor
out
sahf
leave
mov
or
and
dec
test
xor
addb
push
push
pop
js
loop
inc
add
repnz
pop
inc
pop
sti
mov
or
fcomps
inc
ret
jne
pop
int3
dec
ret
pop
xor
daa
dec
cld
push
cld
push
add
push
aaa
mov
rcll
mov
push
daa
out
push
cmpsb
xchg
jp
or
test
imul
ret
jo
and
cmp
je
add
xor
add
lods
je
cmpsl
neg
xchg
push
sbb
sub
xchg
addb
jl
add
insb
popa
jge
movsl
jl
adc
cmp
cmp
mov
into
ret
daa
mov
gs
sub
mov
mov
mov
add
js
cmp
mov
sbb
ljmp
lods
sti
addb
addb
daa
xor
adc
xchg
jo
loop
repnz
ljmp
xchg
jbe
add
in
cli
hlt
or
movsl
fdivs
sub
out
or
inc
mov
pop
je
test
push
aaa
mov
mov
rolb
jbe
and
pop
mov
add
xor
xchg
sbbl
push
and
test
ljmp
mov
jns
or
sub
or
xchg
push
add
addb
mov
shll
sub
cmp
push
dec
aaa
outsb
pop
sbb
push
popa
pop
cli
dec
movb
pop
pop
rolb
lds
ljmp
push
adc
cmp
test
cltd
out
jg
push
push
fdivs
out
not
aam
adc
and
jne
or
cmp
cmc
pushf
push
mov
cmp
mov
addb
or
add
mov
dec
sub
push
sub
jmp
outsl
loopne
cmp
scas
add
inc
into
cmp
sbb
aad
add
lret
xor
jle
enter
pusha
add
or
rolb
rolb
add
leave
or
mov
jb
das
aam
divb
ljmp
cmpsl
jmp
sti
aas
scas
cld
pop
icebp
popf
adc
repz
inc
add
add
mov
add
add
in
add
pop
mov
loope
push
mov
cli
push
repz
les
mov
add
add
push
stos
repnz
pop
jnp
gs
mov
inc
daa
dec
add
aam
lret
push
and
jl
mov
xchg
jb
aaa
shrl
and
jmp
push
outsl
jmp
nop
add
adc
or
jno
sbb
xchg
mov
add
mov
add
dec
pop
fdivp
or
aas
in
aaa
or
jno
mov
mov
sbb
xchg
ror
es
pop
fcoms
in
ja
les
adc
xchg
bound
inc
gs
inc
add
sub
xor
adc
add
and
jb
add
loope
cld
push
or
sub
fcompl
sub
stos
stc
leave
dec
and
in
mov
lret
add
xchg
jge
push
mov
adc
push
mov
adc
jecxz
or
adc
mov
cld
or
and
adc
push
and
push
popl
add
stos
ret
fldt
pusha
add
push
testb
or
fimuls
sbb
repz
pop
fsubrp
iret
dec
vunpckhps
stos
and
cltd
add
dec
xchg
xchg
js
je
add
cld
cmp
mov
cld
add
dec
imulb
jg
or
mov
jmp
ret
nop
jno
add
les
ror
pop
dec
cmp
ja
xchg
cmp
mov
mov
lods
movb
push
or
idivl
add
push
xchg
arpl
sbb
cmpsb
adc
xor
jmp
mov
nop
and
rcll
pop
dec
ficompl
bound
push
outsb
add
subl
call
mov
daa
inc
test
out
daa
outsb
outsl
dec
lret
mov
pop
inc
les
popf
incb
in
iret
add
movl
and
add
fs
les
and
xchg
cmp
cmpsb
mov
test
jb
int3
push
xor
data16
ljmp
cmc
jmp
dec
ficoml
lret
jne
jl
or
xchg
mov
push
test
movb
jno
add
or
add
ljmp
xor
add
cmp
fstpt
insl
xchg
pop
mov
mov
sub
add
cmp
loope
shlb
rorl
call
add
push
jb
rclb
inc
loopne
pop
xchg
jecxz
push
lods
sub
adc
lahf
mov
dec
rolb
jg
add
ljmp
das
mov
dec
sbb
and
lcall
add
cltd
int3
mov
push
add
cmp
lcall
enter
push
add
inc
add
and
int3
enter
mov
mov
push
mov
inc
cmpsl
enter
out
or
add
dec
mov
popa
mov
push
mov
pop
enter
or
jne
cli
hlt
mov
add
dec
pop
xor
inc
ds
add
sbb
das
pop
push
out
or
ds
xchg
or
sahf
sub
cmp
les
mov
movsb
mov
jp
add
mov
sahf
setno
cmp
jbe
cmp
movsl
std
cltd
cmpsb
arpl
xor
lods
rcrb
sub
add
dec
rolb
and
scas
cmpsl
repz
mov
push
arpl
cmp
lods
ret
icebp
int3
xchg
call
push
cltd
cwtl
push
jno
lods
movsl
aam
cmp
sti
popa
jg
fisubs
cmp
add
lcall
out
mov
ret
mov
pop
popa
lods
outsl
lsl
out
and
push
ja
lcall
add
js
add
add
pop
outsb
cltd
das
mov
sub
jb
fs
ds
push
fsubrs
shl
flds
inc
add
cmc
jle
inc
scas
pop
lcall
clc
loop
fsubrl
lret
scas
jge
mov
inc
push
jns
jle
js
push
iret
sti
or
xor
jge
push
add
ret
adc
mov
addb
adc
jmp
dec
push
and
daa
cmpsl
xchg
rolb
lret
or
xchg
cmpsb
jle
aaa
adc
sub
lods
fldt
stc
leave
std
pop
insb
mov
cmp
xor
adc
lds
adc
and
ret
jbe
sub
js
popa
lea
js
pushf
rcrl
jl
adc
lock
sbb
mov
push
sbb
int
add
xor
cmpsb
mov
addb
lret
mov
add
pop
xor
mov
jnp
xchg
lods
aam
mov
ss
mov
xor
adc
decl
aaa
sub
icebp
pop
cmpsl
or
mov
idivl
ljmp
adc
aam
test
add
mov
add
jno
inc
add
xor
out
sbb
push
stos
sbb
jg
outsl
or
sbb
and
shl
or
xchg
sbb
pop
sbb
ret
and
fs
adc
add
or
and
mov
xor
mov
xchg
rclb
lret
push
hlt
xor
sub
test
movsb
shll
push
insb
dec
data16
jne
xchg
dec
xchg
push
mov
adc
pop
xor
sub
stos
movsl
add
pop
pop
sub
leave
push
add
out
decl
mov
push
xchg
sbb
test
inc
gs
in
adc
pop
and
aad
mov
sub
rolb
dec
das
in
lock
push
and
jp
adc
nop
clc
cs
imul
sbb
mov
test
cld
rclb
scas
fsubrl
cmpl
add
jns
xlat
pop
push
add
outsb
push
add
arpl
fnstenv
aam
xor
dec
into
dec
test
xor
cmp
add
xlat
sub
mov
gs
ss
jnp
xlat
hlt
jo
jb
or
sub
mov
and
lahf
fimuls
and
fisubrl
mov
mov
mov
popl
push
push
enter
sbb
je
jecxz
test
cmpl
push
jo
pushf
hlt
dec
cs
jg
bound
bound
jp
pop
rolb
push
pop
scas
shrl
jns
dec
ret
add
bsf
jle
lock
into
mov
add
into
in
out
add
mov
add
push
pop
insb
jbe
jmp
fsubr
in
fs
loop
in
inc
add
jge
xchg
insb
jle
push
dec
aam
cmpsb
iret
idivl
fiaddl
inc
add
insb
out
movsb
js
cmc
xchg
hlt
dec
mov
mov
aad
popa
and
add
add
adc
js
rcrl
insb
iret
insl
or
addb
mov
inc
sti
in
stos
fidivrl
add
mov
jle
inc
or
add
push
je
cmpsl
cltd
pusha
add
add
daa
inc
movsl
pusha
add
and
add
push
pushf
aam
xchg
xchg
xchg
mov
add
popa
bound
mov
mov
loop
in
cmpsb
sar
mov
test
cmp
cs
lods
mov
jo
and
pusha
add
jae
cld
mov
loope
push
add
rolb
sbb
popf
add
add
mov
inc
jecxz
out
inc
add
add
sub
add
xchg
push
rolb
or
mov
movsb
fldt
repz
ret
xor
mov
insl
mov
add
repnz
inc
add
gs
push
pop
lret
push
aad
adc
xchg
ja
test
fmuls
and
addr16
mov
adc
into
lds
xor
fdivrs
enter
pop
setg
cmpsb
ret
shr
dec
in
mov
popa
js
mov
sbb
ret
lods
jle
mov
loope
jge
mul
mov
push
outsl
dec
xor
insl
jle
adc
jnp
push
ret
push
add
hlt
movsl
mov
loope
add
mov
clc
subl
mov
adc
lret
pop
repnz
xchg
fcmovu
jno
pop
pop
in
iret
addb
jns
mov
mov
push
js
aas
dec
cmp
cmovb
les
mov
pop
imulb
daa
mov
fldt
inc
add
add
mov
cmp
aam
mov
add
aaa
loop
loop
push
fs
mov
outsl
dec
inc
jg
add
push
add
adc
add
stc
arpl
add
and
addr16
ret
jl
dec
cmp
movb
or
pop
mov
add
mov
inc
add
repz
sbb
mov
xor
mov
cmp
popf
mov
sub
xor
sub
loop
xor
ret
sahf
mov
loopne
xor
sarb
cs
enter
lea
xchg
mov
mov
jo
call
stos
mov
aaa
mov
js
mov
xor
and
repnz
imul
sahf
out
xchg
stc
ds
and
jge
push
pop
mov
mov
popa
and
fsubl
mov
push
std
cmpsb
pop
je
lea
mov
cli
push
scas
adc
or
repz
or
xchg
js
inc
or
bound
pop
xchg
cmpsl
mov
mov
loope
xchg
lret
imul
int
mov
aaa
addb
inc
add
add
xchg
repnz
clc
cld
dec
fldcw
add
aaa
fs
test
sti
mov
push
add
lahf
cmp
pop
es
bound
scas
scas
in
insb
sbb
add
cmp
mov
js
dec
fdivs
and
sub
and
rol
add
loope
addb
shrl
or
pop
or
lret
xor
mov
repz
add
xor
test
jb
fisttpll
lahf
cmc
mov
idivb
jno
add
add
add
jae
add
adc
mov
int3
pop
insl
sbb
imul
pop
push
pop
inc
pushf
sahf
sti
xor
cmp
fcmovnbe
push
jo
or
notl
shll
imul
push
add
xchg
repnz
subl
mov
dec
stos
mov
rorl
cmp
cld
leave
mov
push
sub
bound
aaa
test
repnz
orl
stc
in
xchg
ljmp
push
or
dec
fisubl
add
lahf
dec
test
jnp
fcomps
repz
and
dec
push
dec
and
es
sub
pop
jo
mov
push
ja
adc
in
shlb
divb
push
add
test
mov
gs
movsb
pushf
pusha
add
jne
mov
sbb
jne
push
movsl
lret
adc
add
sbb
add
sbb
aas
faddl
add
out
adc
cld
or
push
fistpl
mov
scas
inc
out
add
xlat
pop
dec
test
jo
test
aam
roll
pop
sub
cmp
mov
jns
dec
mov
cmpsl
icebp
xchg
into
jp
in
and
ljmp
add
mov
adc
add
js
insl
add
mov
hlt
jns
sub
jo
sub
ljmp
inc
popf
or
inc
add
add
inc
ret
insl
and
daa
jmp
jg
jne
popa
add
imul
cmpl
pop
inc
add
or
stos
imul
jmp
in
xor
or
fldlg2
in
mov
imul
cmp
scas
notb
aas
imul
add
shll
mov
push
mov
lods
cmp
aaa
fsubrp
pop
addl
mov
sbb
mov
movsl
mov
jge
fsubs
push
arpl
adc
cltd
rcll
mov
add
and
cmp
data16
sub
sub
pop
dec
jae
stos
fcoms
test
insb
mov
daa
xchg
add
ja
cmp
inc
add
stos
push
push
sub
cltd
push
push
sbb
xchg
mov
mov
add
cmp
addl
dec
out
xchg
xchg
push
mov
mov
add
cmp
ret
popf
dec
lahf
push
std
mov
jno
xor
mov
inc
add
into
aaa
sub
test
les
mov
add
sub
or
addb
cli
cmpsb
xorl
jg
pop
jmp
loope
xor
add
adc
add
movb
add
jg
add
in
jo
pop
dec
hlt
sub
stos
aaa
cmp
dec
pushf
dec
mov
adc
add
add
cli
rorb
sbb
movsb
stc
sub
imul
dec
push
or
loopne
movb
add
mov
mov
aaa
cs
mov
lcall
push
popf
fmull
fisttpl
inc
outsb
add
dec
pop
mov
sub
add
std
xor
jmp
ss
adc
push
jge
mov
mov
aad
mov
jge
push
xor
enter
popa
out
lds
sti
push
xchg
bound
jp
xchg
cwtl
jne
or
popa
inc
ret
add
add
inc
add
add
addb
or
fadd
push
divl
pop
bound
stc
mov
add
in
popf
stc
ja
pop
jb
lret
push
pop
ljmp
nop
sub
lret
test
flds
cmp
cltd
adc
push
add
cmp
jp
sub
add
xorl
push
jge
pushl
inc
repz
int3
stos
mov
add
add
insb
jb
adc
dec
insb
icebp
out
int
enter
cmp
add
cmpsb
dec
cmp
adc
xchg
cmp
and
repz
mov
xchg
sbb
addb
cmp
pop
xchg
addb
push
out
mov
gs
and
clc
lea
add
shrl
add
enter
add
mov
add
fdivl
es
add
xchg
jecxz
addb
add
jae
das
or
jge
add
out
test
inc
add
lret
sbb
lcall
or
xchg
mov
fiadds
add
out
movsb
loope
cmc
inc
add
add
and
jbe
aad
cmp
add
cli
inc
add
add
pop
inc
sbb
adc
ret
xor
js
and
xor
xor
and
adc
ja
sti
pop
cltd
add
mov
pop
imul
test
xor
inc
cmp
add
lds
adc
mov
test
cwtl
pop
outsb
sbb
push
insl
inc
hlt
mov
push
jbe
mov
mov
dec
dec
mov
dec
cld
mov
inc
add
flds
xor
in
jge
fs
lahf
push
xchg
je
cli
sbb
movb
add
xchg
adc
add
imul
mov
loopne
or
das
jg
into
ds
and
add
insl
ss
mov
mov
jnp
iret
lret
xor
sub
inc
add
mov
adc
mov
add
popa
push
mov
mov
lret
inc
add
imul
lcall
pop
fldenv
repnz
int
push
pop
add
sbb
and
push
aad
bound
cli
and
out
pop
lahf
xchg
jb
xchg
jnp
je
mov
movsb
sub
dec
repz
push
mov
xor
inc
aaa
aaa
insl
or
mov
add
xchg
roll
call
xor
shll
shl
dec
rcll
mov
shl
add
dec
es
je
jg
add
xchg
arpl
arpl
jae
xchg
imul
jge
xchg
call
inc
mov
cld
mov
push
popa
jecxz
out
aaa
xchg
je
add
or
dec
cmp
push
cmp
test
push
bnd
cmc
lret
in
fs
inc
pushf
jecxz
inc
add
mov
sbb
add
bound
lret
pop
pop
scas
jno
stos
aad
repnz
mov
pop
and
jno
rol
arpl
cltd
js
cmc
loop
mov
xor
push
cwtl
pop
sub
add
push
xor
cmp
outsl
imul
pop
xor
daa
add
out
arpl
shl
popa
ret
add
les
pop
push
dec
xchg
jae
sub
loope
and
movsb
ret
rolb
cmp
loope
les
in
cs
sbb
push
dec
add
dec
adc
lahf
adc
inc
fbstp
notl
add
shl
fwait
pop
sub
popf
lahf
ror
mov
xlat
sub
xchg
jmp
sub
aad
out
leave
sbb
mov
xor
xor
into
dec
shl
pop
pop
enter
jl
repnz
into
jmp
ret
rolb
imul
fildl
add
jnp
push
add
mov
dec
jns
push
mov
adc
loope
pop
jae
add
or
sahf
sub
and
dec
addr16
mov
xor
in
call
pop
pop
dec
outsl
jg
cmp
out
dec
pop
pop
pop
adc
mov
mov
add
xor
and
call
out
mov
in
dec
xorl
xlat
sub
outsb
pop
add
add
dec
xchg
push
mov
mov
xchg
mov
mov
je
jle
scas
sbb
and
push
mov
pop
and
mov
gs
jp
cwtl
loopne
adc
xchg
ffree
add
add
mov
pop
fisttpl
mov
sahf
cmp
mov
outsl
add
jecxz
jp
cmc
aam
repnz
or
ljmp
pop
inc
cs
jmp
sub
je
or
and
dec
sti
leave
ss
mov
cmp
xchg
cmc
push
and
sahf
gs
mov
out
btr
add
inc
add
push
mov
nop
xchg
out
add
cmova
jae
cld
xorl
inc
add
dec
lcall
jg
dec
pop
shl
inc
lea
push
add
cmc
inc
dec
scas
dec
scas
cmc
adc
repnz
add
leave
leave
sti
push
xchg
adc
aam
fwait
sbb
cltd
mov
fstl
imul
adc
jae
mov
mov
arpl
js
add
rcll
mov
sub
add
addr16
sub
rcrb
add
inc
insb
test
into
loop
mov
aam
fcoml
add
loop
int
xchg
dec
push
cmpsl
cmp
lock
sbb
jp
addr16
cmpl
fiadds
aaa
stos
sbb
mov
xchg
das
popf
outsl
add
xchg
stos
insl
add
sub
add
insb
mov
jg
inc
jge
in
xchg
mov
pusha
add
out
fldlg2
mov
test
aaa
mov
das
pop
cs
int
mov
xlat
fisttpll
lcallw
jae
xchg
add
xor
pop
mov
or
aam
push
stc
jbe
add
or
xchg
mov
leave
fabs
mov
cmpsb
push
je
sti
pop
pop
mov
and
add
js
xchg
into
sar
outsl
pop
arpl
lcall
das
mov
dec
push
test
inc
cmp
das
adc
push
add
xchg
push
insb
rolb
mov
mov
out
inc
mov
push
and
movsb
fiaddl
loopne
mov
je
add
lret
dec
fisubl
cli
sahf
js
scas
xor
push
inc
add
mov
repz
adc
sbb
dec
sbb
imul
cld
ljmp
xchg
jns
push
movsl
or
xchg
mov
pop
aam
add
mov
push
bound
and
lret
outsb
test
pop
xchg
mov
xor
clc
jmp
cltd
add
ds
sbb
pop
push
sarl
test
popa
xchg
sbb
dec
stos
rclb
outsb
pop
pop
mov
mov
and
bnd
pop
movsb
and
mov
xchg
xor
popa
aad
data16
in
add
pop
xlat
cli
outsb
push
jns
movb
ljmp
xchg
cmc
aaa
bound
arpl
loopne
pop
mov
add
xor
add
push
adc
hlt
cmp
sbb
add
mov
xchg
sbb
add
in
xor
jge
mov
addb
adc
mov
pop
mov
rclb
jl
add
mov
rcrl
or
mov
loopne
inc
add
cli
or
add
pop
or
sub
decl
in
push
cmpsl
test
jnp
push
push
addb
out
out
bound
mull
xchg
cmp
dec
test
push
cmp
loop
cmp
dec
sub
jb
add
push
divl
idivb
jecxz
out
xchg
push
pop
xchg
lret
push
mov
add
add
rolb
add
inc
imul
hlt
out
add
adc
sahf
pop
ret
xor
jl
ljmp
inc
icebp
pop
test
decb
mov
mov
jmp
cmp
lahf
push
xlat
or
mov
test
mul
mov
xchg
mov
or
xor
push
popf
mov
data16
mov
add
bound
popa
inc
add
insb
xor
and
sub
mov
test
cmc
ss
mov
int
pop
sar
or
add
mov
je
arpl
test
out
fsubl
shrl
lods
stos
jle
ja
push
test
lahf
repnz
fidivrs
jno
mov
push
adc
