add
push
push
add
out
out
out
out
out
out
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
sub
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
into
into
into
into
into
into
into
into
into
xchg
xchg
xchg
xchg
xchg
xchg
and
add
repz
xchg
xchg
xchg
xchg
xchg
xchg
data16
fst
rcl
rcl
hlt
hlt
hlt
int
int
int
and
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fidivl
loopne
mov
mov
mov
mov
mov
mov
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
push
mov
aaa
aaa
aaa
rol
rol
out
dec
sub
sub
sub
sub
sub
sub
sub
sub
mov
xor
inc
inc
inc
inc
inc
inc
inc
popa
popa
popa
add
loopne
loopne
loopne
loopne
loopne
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
pop
fcmovnu
fcmovnu
fcmovnu
fistl
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
mov
add
add
cli
mov
rcl
rcl
rcl
rcl
rcl
sarl
mov
mov
add
mov
sbb
add
fcmovu
fcmovu
fcmovu
fcmovu
lock
add
add
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
dec
dec
dec
shll
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
push
push
inc
pop
pop
pop
pop
pop
pop
clc
clc
dec
ds
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
xchg
xchg
mov
xor
adc
adc
adc
adc
adc
adc
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmp
cmp
cmp
incl
xchg
xchg
xchg
xchg
cmc
cmc
sahf
sahf
sahf
jae
add
add
out
out
out
out
out
out
out
out
out
out
out
out
add
add
mov
push
sub
sub
sub
sub
sub
test
test
pop
pop
sbb
rcl
sarb
cmp
cmp
cmp
adc
lock
jmp
lods
lods
lods
mov
aas
aas
aas
aas
add
add
add
xchg
fnclex
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fimull
or
or
or
or
or
or
lret
lret
lret
lret
lret
lret
enter
stos
stos
stos
stos
stos
stos
inc
inc
inc
inc
inc
inc
inc
inc
inc
out
out
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rol
iret
iret
iret
iret
iret
add
add
add
add
sub
in
pop
jae
or
or
and
and
and
and
and
and
and
and
mov
daa
daa
daa
daa
daa
daa
daa
add
add
add
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
add
stos
jle
jle
adc
adc
adc
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
mov
mov
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
rcrb
xchg
xchg
xchg
mov
adc
adc
adc
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
js
rcl
rcl
rcl
rcl
rcl
rcl
shll
lods
addl
push
push
push
push
push
push
jns
jns
jns
jns
jns
jns
jns
jg
and
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
fstp
fstp
fstp
fldl
add
cmp
push
push
push
push
ljmp
imul
lea
jne
jne
jne
jne
jne
stc
stc
stc
stc
stc
stc
stc
stc
stc
mov
sbb
sbb
add
int3
int3
jg
popf
popf
popf
popf
popf
popf
popf
popf
out
out
jp
jp
jp
dec
dec
dec
dec
dec
dec
mov
mov
imul
imul
imul
imul
fldl2t
jmp
sbb
sbb
xlat
xlat
xlat
xlat
xlat
xlat
xlat
fstp
fstp
fnsave
and
and
and
and
and
and
and
in
in
in
in
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
arpl
arpl
arpl
add
daa
daa
push
push
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
sub
sub
sub
mov
insl
insl
insl
insl
insl
and
cli
dec
dec
dec
dec
cmp
cmp
xchg
add
adc
adc
add
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
add
add
and
and
and
and
and
and
and
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
xchg
xchg
xchg
xchg
xchg
xchg
and
and
jge
jge
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
or
or
push
push
push
push
push
push
push
push
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
popa
popa
popa
popa
pushf
rcl
in
in
in
in
in
jno
jno
lock
pop
pop
pop
pop
pop
mov
add
sub
sub
sub
sub
sub
sub
pop
pop
pop
add
add
add
add
add
mov
adc
adc
lret
add
xchg
popa
popa
popa
popa
popa
popa
popa
popa
push
push
push
push
push
pop
pop
push
push
push
push
push
push
shr
out
out
out
pop
pop
pop
pop
pop
pop
pop
mov
cmpsl
cmpsl
cmpsl
cmpsl
imul
je
je
je
je
jmp
into
mov
mov
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
mov
data16
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
or
or
push
push
push
push
push
push
push
push
addb
add
cmp
cmp
call
mov
std
out
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
div
div
addr16
scas
add
es
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
and
and
and
and
and
and
and
and
add
sbb
sbb
sbb
lcall
add
scas
scas
scas
scas
scas
scas
aam
addr16
out
out
out
out
out
out
or
or
out
out
sub
add
add
loopne
add
jge
jge
jge
jge
jge
rorb
dec
dec
dec
dec
dec
dec
push
jp
jp
sub
sub
fwait
fwait
fwait
fwait
sub
sub
sub
cmp
cmp
cmp
cmp
stc
stc
movsl
movsl
movsl
movsl
movsl
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xor
and
and
cmp
cmp
cmp
mov
adc
adc
adc
in
in
in
in
in
in
in
in
in
in
in
jns
sub
sub
sub
pop
pop
pop
push
push
push
push
push
fadds
add
add
add
and
and
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
lret
lret
lret
lret
lret
lret
lret
add
add
jo
add
inc
add
add
bound
bound
mov
mov
pop
pop
pop
pop
pop
pop
pop
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
fcmovnu
fstpt
cmp
cmp
cmp
cmp
cmp
cmp
add
lea
and
and
and
test
test
xchg
les
add
inc
das
das
das
das
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
push
push
push
push
cltd
dec
dec
jo
ss
ja
add
add
add
add
add
add
add
jecxz
jecxz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jae
or
or
or
adc
adc
adc
rcl
rcl
rcl
xor
repz
push
add
ss
or
or
or
or
or
or
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
mov
mov
sbb
sbb
sbb
sbb
sbb
div
div
xchg
xchg
xchg
xchg
xchg
xchg
xchg
int
stos
stos
stos
stos
stos
stos
cmc
cmc
add
add
pop
ljmp
insb
insb
insb
xchg
xchg
xchg
xchg
xchg
xchg
test
xlat
xlat
xlat
xlat
xlat
xlat
or
or
or
or
enter
pop
pop
pop
pop
pop
loop
loop
loop
fs
call
into
into
into
into
into
mov
les
push
push
push
push
push
push
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
dec
dec
dec
dec
dec
dec
imul
imul
imul
imul
imul
dec
dec
dec
dec
add
add
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rol
enter
adc
adc
adc
adc
adc
adc
jae
jae
jae
jae
jae
jae
inc
inc
inc
inc
xor
xor
xor
dec
dec
sub
add
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jb
jb
jb
jb
inc
inc
pop
pop
pop
pop
pop
sbb
sbb
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
lods
push
push
push
push
cmp
lods
lods
loopne
add
in
in
add
jb
jb
jb
loopne
loopne
cmpsb
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xor
xor
mov
mov
aam
add
clc
clc
mov
mov
mov
out
out
stos
cmp
sub
sub
mov
mov
inc
inc
inc
inc
inc
inc
inc
add
and
rcll
xchg
ss
pop
pop
pop
add
add
xor
xor
out
out
out
out
out
push
push
push
push
push
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmp
cmp
cmp
fs
test
test
sub
mov
lcall
adc
or
rcl
rcl
rcl
rcl
rcl
rcl
roll
add
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
jge
jge
jge
jge
rol
jbe
jbe
jle
jle
add
add
add
add
rol
rol
add
jae
addr16
cli
cli
cli
cli
cli
cli
cli
ret
ret
ret
jge
cltd
cltd
cltd
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
es
fwait
fwait
fwait
fwait
fwait
add
add
fcomp
fcomp
fcomp
or
cmp
cmp
cmp
bound
bound
bound
repnz
or
aam
aam
aam
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
adc
adc
and
ds
dec
dec
dec
icebp
icebp
icebp
icebp
icebp
icebp
addl
push
push
iret
pop
pop
pop
pop
pop
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
jecxz
jecxz
cmp
cmp
ss
lret
add
add
lea
or
or
or
or
or
mov
test
test
adc
or
sbb
enter
enter
bound
bound
call
sahf
sahf
sahf
sahf
sahf
sahf
jb
pop
pop
pop
pop
add
loopne
loopne
loopne
movsl
xor
xor
jo
jo
xchg
xchg
xchg
xchg
xchg
fcmovnu
fstpt
cmp
cmp
cmp
cmp
cmp
test
test
test
test
test
and
sbb
ret
jns
jns
jns
jns
jle
jle
jle
jle
jle
add
add
add
add
add
add
mov
mov
mov
mov
fcmovu
fcmovu
fisubrs
sub
sub
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
adc
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
gs
add
pop
pop
dec
dec
dec
dec
dec
dec
dec
es
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
enter
enter
enter
enter
enter
push
push
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
repnz
push
push
push
data16
inc
add
pushf
pushf
pushf
pushf
pushf
xchg
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
add
mov
mov
mov
fldcw
cmp
add
aas
aas
aas
sbb
add
add
add
inc
mov
rcl
mov
mov
mov
mov
mov
mov
add
add
sbb
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
sahf
sahf
sahf
sahf
sahf
sahf
sahf
mov
mov
mov
mov
dec
dec
dec
dec
add
add
add
add
add
add
add
jle
data16
shrb
lods
lods
lods
lock
nop
nop
nop
out
out
out
out
out
nop
nop
es
addl
enter
es
jp
jp
jp
inc
aam
mov
sbb
sbb
sbb
jne
jne
lock
outsl
outsl
outsl
and
and
and
xor
xor
xor
xor
xor
xor
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
fildl
xlat
xlat
xlat
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
or
iret
iret
mov
xor
addl
mov
mov
mov
mov
mov
cmp
mov
sbb
insl
insl
insl
mov
add
add
dec
cmp
or
or
or
in
add
lret
lret
sti
or
or
and
and
and
add
add
add
mov
add
add
add
mov
mov
data16
bound
bound
bound
bound
bound
bound
bound
mov
fld
les
add
ret
pf2id
sbb
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
stos
stos
stos
stos
add
add
ljmp
xchg
xchg
xchg
xchg
dec
and
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jns
jns
jns
add
outsl
outsl
outsl
mov
add
mov
mov
mov
mov
push
push
push
loop
loop
loop
loop
or
loopne
ret
ret
ret
ret
ret
ret
int3
int3
int3
int3
push
push
push
push
push
push
push
push
push
mov
or
or
or
or
rcl
rcl
rcl
pop
pop
add
add
insb
insb
xchg
xchg
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
fs
push
sldt
add
add
add
es
mov
dec
dec
dec
dec
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
mov
mov
cmp
add
add
mov
mov
mov
les
cmpsl
cmpsl
cmpsl
cmpsl
sub
sub
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
loopne
add
adc
adc
adc
adc
adc
test
test
test
test
dec
dec
popf
popf
popf
dec
dec
dec
dec
dec
dec
dec
dec
dec
adc
adc
jo
jo
cmc
cmc
cmc
add
ficoms
push
push
push
push
push
push
or
or
or
add
add
mov
jle
jle
jle
jle
jmp
jmp
jmp
jmp
add
add
add
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
mov
add
mov
or
or
inc
cld
cld
cld
add
add
and
es
add
add
add
add
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
imul
imul
imul
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cmp
cmp
cmp
cmp
cmp
cmp
ss
std
std
std
div
div
div
div
notb
sbb
sbb
sbb
sbb
stc
stc
stc
aad
aad
int
int
int
int
rcl
mov
mov
iret
iret
iret
or
or
cmp
and
and
and
and
lods
lods
mov
mov
xchg
xchg
xchg
xchg
fldenv
mov
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
sub
cmp
add
jmp
xchg
lret
lret
lret
lret
in
in
in
in
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
lahf
lahf
mov
mov
out
out
jnp
jnp
jnp
movsl
fisubrs
sub
sub
sub
sub
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
in
in
in
in
add
sub
sub
sub
add
add
add
mov
loope
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
jmp
jmp
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
out
out
out
out
out
out
out
out
out
sbb
cmp
into
into
into
into
into
into
into
into
into
into
into
into
fildl
add
add
add
fs
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
sldt
add
add
add
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
das
das
das
das
ss
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
lahf
lahf
lahf
lahf
lahf
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
push
push
fcomp
sbb
mov
xchg
cltd
cltd
push
push
mov
mov
mov
mov
mov
mov
add
add
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
int
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
jmp
mov
stos
stos
stos
stos
stos
stos
stos
stos
mov
les
add
push
push
push
push
push
push
and
and
and
and
and
and
and
and
add
add
add
add
push
push
push
rol
rcrb
pop
add
add
cwtl
cwtl
mov
push
push
push
push
push
mov
fcmovu
lcall
lcall
aas
aas
aas
xchg
xchg
xchg
fcmovu
ficompl
lret
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pmaddwd
and
std
std
std
std
in
call
call
call
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
rcl
rolb
add
add
dec
dec
outsl
outsl
icebp
icebp
icebp
icebp
dec
dec
dec
ljmp
jmp
pushf
pushf
pushf
xchg
xchg
xchg
xchg
xchg
xchg
xchg
or
or
or
or
or
ja
ja
loope
loope
loope
loope
loope
loope
jecxz
jecxz
jecxz
add
add
add
addr16
in
add
add
adc
adc
adc
adc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ja
ja
ja
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
xor
mov
fdivl
sub
sub
sub
inc
inc
inc
inc
push
scas
loopne
loopne
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
std
std
std
mov
outsb
outsb
outsl
outsl
out
out
add
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
adc
adc
adc
adc
pop
add
add
add
add
add
add
add
and
and
and
cmp
cmp
xor
sbb
sbb
sbb
sbb
add
add
add
or
or
or
or
add
arpl
arpl
aad
aad
aad
aad
jmp
jmp
add
mov
addl
addl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
jbe
add
add
ja
ja
adc
add
add
rcl
shrl
dec
std
std
add
add
mov
mov
fwait
fwait
fwait
fwait
fwait
fwait
gs
gs
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
pop
pop
sahf
sahf
sahf
out
mov
add
add
test
mov
mov
test
test
test
test
test
test
jle
jle
jle
jle
jle
imul
sbb
mov
call
call
popf
popf
popf
mov
add
add
add
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
push
push
push
push
push
push
push
push
pop
add
add
add
push
push
push
push
mov
jmp
jmp
jmp
add
add
add
dec
dec
dec
dec
dec
dec
adc
adc
adc
adc
adc
sub
ljmp
sbb
sbb
add
add
mov
mov
mov
push
push
push
push
push
push
cmp
cmp
cmp
cmp
cmp
movsb
movsb
or
or
xor
add
add
add
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
add
adc
adc
dec
dec
dec
dec
dec
pop
pop
pop
mov
mov
mov
arpl
arpl
arpl
pop
pop
pop
pop
pop
cwtl
cwtl
cwtl
cwtl
cwtl
rcl
rcl
rcll
nop
nop
nop
nop
nop
fwait
fwait
fwait
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
mov
pushf
pushf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
cwtl
cwtl
cwtl
cwtl
cwtl
div
bound
bound
bound
bound
sub
sub
push
push
push
push
push
push
push
push
push
add
mov
mov
and
xor
outsb
outsb
outsb
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
jp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
or
or
or
or
or
ss
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
mov
xor
xor
xor
mov
sub
sub
xchg
pop
pop
sbb
rcl
rcl
rcl
sarl
ds
ds
pop
pop
pop
pop
pop
jb
gs
repz
mov
mov
add
add
xchg
cmp
cmp
cmp
bound
cli
cli
int
int
int
int
sub
push
push
push
push
push
push
inc
inc
mov
mov
mov
mov
or
inc
push
push
push
push
int
int
int
mov
mov
mov
mov
and
and
push
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
add
lods
lods
lods
lods
lods
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
mov
xchg
xchg
xchg
xchg
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovbe
daa
test
add
stos
stos
stos
stos
stos
stos
cs
fcomp
fcomp
fcoms
sbb
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
addr16
pop
pop
pop
pop
pop
pop
pop
pop
push
add
xor
xor
xor
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
adc
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
sub
sub
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
ljmp
add
mov
xchg
xchg
hlt
hlt
hlt
hlt
hlt
ficoml
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
je
je
je
je
je
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
hlt
hlt
mov
dec
dec
add
push
push
push
push
push
push
xchg
xchg
xchg
xchg
les
inc
inc
inc
ljmp
pop
pop
pop
pop
pop
pop
pop
div
div
div
div
div
negb
pop
mov
xor
xor
xor
mov
mov
mov
xor
fcomp
fdivrs
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
xchg
mov
rcl
rcl
xor
xor
addr16
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
rol
addb
je
je
je
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
sub
sub
test
mov
push
push
push
add
addl
ljmp
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
cli
cli
inc
inc
inc
inc
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
pop
mov
mov
mov
add
sbb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
leave
leave
leave
leave
leave
leave
or
or
or
psubsw
fsubrs
jle
jle
jle
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
rcl
jg
add
xchg
xchg
xchg
xchg
sbb
dec
sub
mov
mov
popa
stos
stos
stos
pop
pop
pop
pop
pop
mov
repnz
adc
adc
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
test
test
addl
adc
adc
adc
adc
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sub
add
add
add
or
or
add
jo
jo
jo
jo
jo
jo
jo
jo
jo
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
add
add
insb
insb
insb
insb
insb
insb
insb
insb
insb
inc
inc
inc
imul
ja
ja
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
scas
addb
sub
sub
sub
std
std
std
std
std
std
std
std
std
add
add
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
adc
adc
subb
rcl
sbb
sbb
sbb
sbb
sbb
sbb
sbb
movsl
movsl
movsl
inc
inc
inc
jle
jle
jle
jle
div
div
and
and
and
and
js
js
jp
jp
jp
jp
jp
jp
jp
add
add
add
jb
jb
cmp
cmp
nopl
inc
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
add
and
and
lods
lods
lods
lods
and
and
and
adc
xor
xor
xor
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
arpl
arpl
arpl
arpl
xchg
xchg
push
push
push
push
push
push
sub
sub
add
add
add
add
mov
div
div
jle
jle
push
push
push
nop
nop
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
fwait
iret
iret
iret
iret
iret
iret
iret
and
or
or
or
mov
mov
and
and
and
and
mov
xor
xor
xor
inc
popf
popf
popf
popf
xor
xor
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
dec
jae
jae
jae
jae
add
add
add
adc
adc
adc
adc
adc
adc
mov
mov
sbb
sbb
adc
adc
adc
xor
xor
in
in
sub
daa
daa
daa
daa
daa
daa
daa
mov
outsl
outsl
outsl
outsl
outsl
outsl
cwtl
gs
repz
cli
mov
dec
dec
dec
dec
dec
dec
jbe
jbe
jbe
ss
ss
sar
sti
sti
jmp
out
out
out
out
out
out
out
out
out
out
out
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
xlat
lret
lret
addl
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
sub
jg
jg
jg
jg
jg
jg
sti
sti
add
add
add
push
push
in
in
in
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
cli
add
data16
pop
imul
add
add
add
add
add
add
fldenv
pop
pop
pop
pop
pop
pop
in
in
in
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
ret
aas
aas
aas
aas
aas
aas
aas
cmc
cmc
or
or
or
or
or
or
or
mov
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
push
push
push
push
push
add
add
add
daa
push
push
push
push
push
push
mov
mov
inc
ret
loop
loop
loop
loop
loop
loop
loop
loop
sub
xlat
xlat
xlat
call
push
or
daa
daa
daa
daa
daa
daa
daa
daa
daa
cmp
push
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
ss
push
push
push
mov
mov
mov
mov
add
out
mov
mov
div
div
div
div
push
push
push
push
push
push
push
push
push
add
add
mov
xor
jge
pushf
pushf
mov
add
addb
data16
outsl
outsl
outsl
outsl
outsl
outsl
cmp
gs
adc
adc
adc
adc
adc
adc
adc
adc
dec
dec
dec
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
sub
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
xor
rol
stos
stos
stos
stos
stos
mov
mov
rcl
rcl
rclb
push
push
push
arpl
arpl
out
out
out
out
xchg
js
outsl
outsl
push
movsl
movsl
movsl
movsl
ret
scas
scas
scas
scas
scas
scas
cs
lods
inc
inc
jbe
jbe
jbe
jbe
jbe
jbe
jbe
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
jmp
add
add
jb
dec
out
imul
xchg
dec
sar
sbb
mov
pop
imul
adc
loopne
out
inc
push
xor
xchg
cmp
shll
shl
jg
cmpsl
or
rcrb
lret
je
inc
outsb
lds
dec
int
cmp
sbb
jb
dec
push
pop
scas
dec
addl
add
xor
sarb
jp
inc
cli
repnz
xchg
fsubr
movsl
dec
pop
shrb
push
push
cmp
or
inc
mov
push
imul
mov
test
loopne
add
rcll
pusha
sub
and
cmp
rol
fidivrl
jb
dec
dec
add
and
mov
inc
rorl
or
daa
adc
lods
sub
iret
pop
dec
andb
jg
dec
getsec
adc
ret
mov
sbb
fnstenv
cwtl
dec
pop
rcrl
inc
dec
scas
icebp
mov
pop
sbb
jae
add
and
xchg
mov
add
loopne
xchg
and
pusha
icebp
add
mov
dec
sub
pusha
cmp
insb
push
rclb
outsl
and
mov
fnsetpm(287
rcrb
push
and
or
jg
gs
mov
cmp
ffree
das
inc
lret
pop
mov
sub
adc
mov
addb
add
or
popa
int3
add
xor
cld
test
rcrb
loopne
adc
mov
push
in
pop
movsb
mov
adc
mov
andb
test
lock
sub
add
and
push
inc
clc
les
addr16
pusha
loopne
hlt
rcll
and
loopne
add
jb
or
cmpb
jbe
cmp
inc
sbbb
repz
test
inc
pusha
cld
sbb
out
fldz
or
add
test
push
lods
call
mov
aaa
lods
mov
add
add
fistpll
pusha
ja
push
cmp
jbe
rcrl
or
xchg
and
sbb
jl
and
mov
psraw
loopne
jo
add
cmpsl
cmpsl
mull
fmul
sub
and
adc
xchg
jge
andb
push
xchg
out
ljmp
push
in
adc
jno
sub
shlb
sbb
fistpl
test
add
xorb
inc
loopne
mov
leave
xchg
inc
mov
mov
test
sbbb
repz
jno
mov
add
outsl
fisubrl
inc
inc
ljmp
push
andb
imul
sbb
inc
ljmp
xchg
sub
pop
in
jmp
adc
daa
andl
mov
jle
inc
jmp
jmp
pop
cltd
jmp
shl
mov
add
cmpsl
fwait
shll
in
sbb
pusha
mov
mov
inc
inc
cmp
xchg
mov
or
inc
ljmp
mov
loopne
sub
xchg
pusha
xchg
push
mov
dec
or
shlb
andb
pop
jp
mov
xchg
sbb
faddl
inc
pusha
mov
sbb
mov
sub
mov
pop
add
loopne
fisttpl
jb
test
lock
loope
mov
xor
xchg
cmp
loopne
and
xor
inc
fwait
popa
movsl
jne
mov
add
sbb
fwait
jl
loopne
adcl
loopne
ljmp
lret
xor
xor
add
adc
addb
push
mov
push
addb
add
mov
xchg
adc
js
inc
inc
dec
cld
lods
sub
stos
mov
enter
pusha
sbb
mov
mov
add
cltd
lock
loopne
or
add
rorl
add
mov
xchg
and
imul
sub
jle
int
repnz
out
in
sub
cltd
jnp
mov
pusha
pushf
sti
jo
push
out
cmp
pusha
and
sub
pusha
imul
notb
addb
add
inc
scas
das
aaa
bound
inc
inc
stc
mov
movl
ret
idivl
pop
loope
inc
sar
jnp
xor
pop
pop
std
imul
loopne
lea
cmp
je
rol
add
sahf
adc
sub
cmp
mov
mov
fists
cmp
cld
add
pop
and
aad
fucomi
fisttpl
js
inc
cmp
and
push
inc
pusha
cld
in
xchg
inc
cltd
and
not
mov
repz
and
js
cld
dec
ss
aas
dec
pusha
lods
mov
cmp
xchg
mov
std
sbb
ljmp
loopne
add
push
adcl
xor
push
mov
and
fidivl
sbb
dec
add
or
bound
push
mov
or
mov
loop
inc
dec
pop
mov
pusha
xor
mov
inc
rclb
inc
inc
or
es
inc
push
adc
sub
imul
in
scas
shlb
or
add
repz
mov
add
lret
fstpt
jb
das
std
clc
imul
sub
xchg
sub
inc
pusha
mov
les
dec
lods
addb
dec
jae
addb
xchg
sub
and
aas
shll
stos
xchg
js
mov
icebp
fwait
shl
push
cld
outsl
insb
je
rcrl
push
cld
cmpsl
imul
mov
pusha
icebp
sarb
enter
pop
loopne
movsb
add
aas
out
and
cltd
xor
jb
add
movsl
add
jns
test
jne
xor
mov
or
adcb
xor
pop
inc
mov
add
xor
je
out
jne
hlt
jo
push
scas
rol
mov
sbb
addb
rolb
lods
mov
push
mov
insl
mov
sarb
sbb
gs
mov
in
shll
lock
lds
data16
and
pusha
scas
inc
mov
popf
imul
jne
mov
or
loopne
dec
popa
jge
pusha
loopne
shlb
nop
out
cmc
ret
or
pusha
cwtl
pop
ret
jl
xchg
push
mov
inc
out
add
inc
rclb
js
int
scas
fsubrs
pusha
fidivrs
andb
mov
imul
in
add
jno
arpl
mov
pusha
lods
inc
add
jno
loop
repnz
xor
sub
mov
shll
ja
sbb
inc
loopne
and
enter
mov
cmp
sub
pushf
and
pop
pop
mov
or
adc
push
add
xchg
addb
in
cmp
sahf
lahf
out
pusha
std
fwait
sub
cmpsl
fdivrs
add
add
xchg
rcrl
ds
mov
scas
add
xchg
or
sbb
and
inc
dec
dec
fadds
decb
sub
pop
jmp
jl
je
jbe
std
mov
loopne
add
rcr
cltd
add
add
sbb
lcall
cwtl
xor
addr16
mov
and
pusha
inc
mov
fdivs
xchg
mov
aaa
stc
sbb
mov
add
stc
mov
fistpl
jg
sbb
jae
push
jl
aas
mov
pop
mov
lcall
nop
arpl
int3
ds
and
cmp
js
push
into
or
add
fidivrs
loopne
in
mov
and
push
xchg
adc
shlb
inc
nop
and
mov
jbe
mov
push
gs
je
insb
jns
xchg
xchg
in
and
ss
mov
or
stos
insl
testb
mov
cmpb
sbb
pusha
mov
cli
and
mov
rclb
rcr
jmp
pop
js
loop
rolb
loopne
sub
sbbb
das
add
pusha
mov
cmp
xor
inc
stos
inc
mov
add
rorb
mov
lret
int3
jle
out
cmpsl
fildl
jmp
mov
mov
cmc
cmp
and
mov
mov
and
xchg
jnp
data16
xor
out
das
lcall
fs
pop
mov
mov
and
cld
or
inc
movsl
mov
scas
mov
and
mov
shlb
cmp
shlb
cmp
shlb
les
aad
jb
mov
lds
shlb
sbb
sbb
and
inc
loopne
std
or
fcom
arpl
and
js
hlt
mov
ds
push
and
xchg
push
inc
int
add
and
pusha
pop
inc
push
dec
dec
push
movb
loopne
hlt
lcall
push
inc
mov
inc
cltd
andb
rorb
push
mov
mov
loopne
xchg
data16
fistl
add
lds
inc
jno
jno
pop
lods
pusha
inc
dec
out
lock
adc
and
xor
fsubr
mov
test
and
out
dec
mov
cld
add
mov
int
in
nop
xor
sub
cmp
mov
and
lds
dec
rcll
and
in
loop
dec
repz
mov
jmp
mov
lods
jp
loopne
or
xor
sbb
jecxz
jg
and
and
inc
or
outsb
ja
iret
inc
std
repz
push
adc
inc
add
stc
loope
movaps
ljmp
stc
lods
mov
fcom
dec
cmp
stos
loopne
lds
push
xchg
sahf
outsl
flds
mov
orb
inc
pusha
push
stos
jo
pop
ljmp
push
std
ljmp
sti
iret
fisttps
addl
ret
mov
pusha
stos
pusha
mov
mov
and
sbb
push
out
gs
andb
xchg
loopne
pop
sbb
adc
push
or
and
loope
in
push
popa
jmp
stc
movsl
jo
js
sti
jns
mov
gs
shll
js
mov
adc
test
andl
loopne
adc
sub
sbb
movsl
fwait
xchg
loope
or
cmpsl
ss
je
lret
push
test
xchg
mov
fistl
xchg
jmp
jmp
adc
mov
shrl
addb
pop
bound
pusha
jb
mov
icebp
sldt
mov
xor
sti
out
xchg
push
out
mov
add
xor
adc
push
lea
aam
dec
lods
sub
mov
jae
and
pop
test
insb
filds
aam
adc
and
xlat
jecxz
cmc
sahf
std
fbstp
cmpsl
out
push
jo
int
fmulp
stc
hlt
cltd
dec
hlt
or
lods
inc
fs
xor
push
mov
stc
shll
inc
pusha
push
jmp
shl
pusha
add
mov
andb
jle
cli
xor
jle
add
jae
xlat
mov
clc
sub
cmp
pop
pop
loop
adc
jne
jbe
arpl
int3
lahf
insl
inc
mov
push
fst
mov
insb
adc
pop
sti
test
aaa
push
cs
fidivrl
andl
push
cli
repz
aaa
push
cli
xchg
cs
and
pusha
loopne
out
mov
and
sbb
mov
ror
or
out
clc
add
pusha
rorl
sub
test
add
pop
add
mov
inc
adcb
add
jb
shl
mov
loopne
add
sub
sahf
jge
sub
cmpb
add
filds
add
cmp
mov
push
pusha
mov
push
enter
shlb
jns
and
lock
push
in
or
and
rorl
inc
add
xor
popa
mov
mov
rolb
rol
jle
leave
dec
mov
mov
inc
or
and
out
in
mov
pusha
add
add
leave
jl
leave
xor
scas
pusha
loopne
pop
xchg
xor
testl
mov
add
mov
dec
movsl
popf
cmp
push
stos
xchg
or
mov
lds
xor
and
pop
pusha
mov
in
out
pop
add
pusha
ret
loopne
loope
mov
xchg
inc
test
jmp
push
aas
lret
push
fsubrs
push
sub
mov
adc
pusha
xor
xlat
orl
xor
inc
loopne
pop
scas
jnp
aad
clc
sti
testl
ljmp
das
sub
cmpsl
xchg
inc
lods
mov
lret
sbbb
mov
push
pusha
shrb
dec
push
dec
fldl
and
imul
sti
mov
std
cmpl
ss
fmulp
in
ret
data16
enter
pop
jp
ljmp
test
rcrl
cmp
addb
push
sub
add
fsts
xchg
or
adcb
lahf
sbb
addb
call
mov
sahf
and
pusha
cli
mov
lods
rolb
add
rclb
mov
shlb
inc
enter
mov
adc
mov
fbstp
loopne
pusha
xchg
loopne
nop
dec
pop
pop
shll
loopne
push
fisttpll
mov
call
jnp
pop
jno
das
pop
popa
sarl
mov
lods
rolb
lcall
in
xchg
add
or
sahf
mov
jno
adc
insl
pop
std
fwait
or
add
rorb
add
jge
sti
cwtl
jno
cmpsl
aad
and
rclb
push
dec
or
or
js
mov
and
aad
icebp
pop
test
loopne
push
and
mov
and
mov
sbb
cld
gs
cltd
jge
and
loope
lret
xor
scas
rcll
dec
jno
clc
loop
stos
loopne
int
dec
cmp
add
push
dec
lcall
mov
xor
pop
xchg
push
repz
jnp
xchg
test
test
shrb
jnp
cmovle
add
mov
loopne
rol
pusha
loopne
sahf
test
lcall
mov
add
shr
lds
pop
jmp
xor
pusha
and
lods
call
pop
push
jmp
lods
mov
pop
sbb
ja
push
and
in
jo
jg
sbb
adc
sbb
dec
add
jns
jle
xchg
sbb
and
dec
cs
add
fcomp
jbe
push
adc
fldenv
mov
sbb
cltd
adc
in
sbb
rcr
add
or
stos
xchg
sbb
sarl
arpl
movsb
shlb
fimuls
jp
fsts
cmpsb
pusha
shl
mov
dec
xchg
xchg
sbb
push
xchg
leave
cs
inc
mov
and
or
sarb
and
rcl
lcall
push
cmp
pop
xchg
ret
push
add
mov
xor
jl
xchg
addr16
leave
lcall
push
and
and
inc
xchg
shrl
add
and
add
aaa
push
fiadds
jg
loopne
xor
inc
pop
pop
popf
mov
pop
mov
fildl
mov
frstor
or
addb
inc
jmp
iret
fisubl
push
jns
lret
add
add
movsb
pusha
mov
sub
and
addr16
dec
mov
mov
pusha
pusha
mov
lcall
push
ja
fnstenv
dec
lret
xor
inc
or
cmp
stos
lds
add
add
or
sarl
and
and
mov
ret
pop
rcl
dec
sub
rorb
push
in
mov
add
inc
insl
and
sub
cmp
sbbl
sub
fucomi
xchg
pop
inc
insl
sub
pop
dec
add
cmp
les
ret
mov
pusha
mov
hlt
jae
in
xlat
sub
pusha
pusha
pop
pop
ljmp
cmpb
mov
mov
xor
sbb
and
fsubp
push
and
pusha
faddl
out
ljmp
cmp
mov
mov
dec
js
sub
shlb
cli
mov
loope
lds
and
pop
xchg
add
xor
popf
pop
fisubrl
movsl
sbb
loopne
dec
push
inc
call
out
cmp
xchg
dec
shrl
mov
or
sub
data16
sti
gs
add
cwtl
mov
fnstenv
xchg
dec
fwait
pop
pusha
push
orl
lcall
clc
and
stos
lret
lcall
dec
and
loopne
and
ljmp
mov
rcrb
jl
xchg
add
mov
or
pusha
sbb
mov
lret
movsb
inc
loopne
inc
add
out
jp
cmp
add
xchg
sbb
mov
mov
jp
and
adc
aam
stc
and
mov
adcb
cmp
add
and
rcrl
cwtl
mov
repnz
inc
add
xchg
sub
jle
inc
mov
addb
jo
pop
cwtl
inc
jno
dec
and
shlb
cmp
sub
repnz
ss
test
mov
push
add
inc
and
pusha
pusha
mov
fisttps
push
into
mov
mov
rolb
add
and
jbe
shll
loopne
addb
ror
hlt
mov
and
popf
pop
pop
xchg
out
fbld
pusha
adc
pop
mov
insb
inc
cmpsb
addb
push
inc
pusha
and
inc
fcomip
push
mov
ret
in
loopne
jg
es
rorb
or
shrb
addb
sub
pop
cli
pop
pop
fnsave
inc
dec
outsb
scas
loopne
dec
dec
fcomip
insb
outsb
aam
andb
cmp
shl
addb
inc
lock
arpl
ja
push
ret
loop
je
xchg
xchg
neg
pusha
or
jl
mov
sbb
pusha
sar
jbe
shlb
out
movsb
shlb
and
push
stc
cmpl
jb
loopne
jne
fwait
out
and
jl
adc
inc
sub
in
jns
andb
decb
sbbl
inc
shrb
adc
xor
dec
inc
jecxz
iret
mov
push
mov
je
mov
in
jmp
cmc
ficoml
andb
leave
cltd
repz
cmp
pusha
pop
xlat
aaa
add
xadd
aad
mov
fwait
cmpsb
add
loope
pop
dec
mov
jecxz
test
ret
test
in
sub
rol
push
iret
add
sti
je
js
sub
in
sbb
inc
xor
add
out
adc
out
inc
push
rolb
popf
sbb
mov
add
mov
scas
jb
mov
ss
test
test
sar
mov
jnp
and
inc
pop
add
addl
sbb
mov
jp
xchg
jle
mov
andb
sbb
and
and
data16
icebp
enter
imull
xor
and
and
jecxz
push
shlb
and
mov
jns
cmpsl
and
test
test
add
inc
sbb
out
sti
jae
shrl
pusha
lcall
xchg
test
loopne
adc
loopne
stc
scas
inc
loop
cld
sub
pusha
xor
pushf
xchg
adc
xor
push
andb
and
mov
lret
xchg
stos
sub
push
popa
repz
push
pushf
cmc
add
hlt
cmp
or
push
sub
and
insl
out
rcll
shrl
insl
roll
mov
mov
mov
and
and
mov
pop
call
test
and
sub
mov
shlb
mov
inc
inc
cmpsl
cli
pop
test
test
dec
stos
mov
outsl
mov
xchg
stos
andb
mov
cmp
daa
scas
inc
pusha
push
xor
cli
and
pop
lret
push
jmp
movsb
add
in
out
addb
pusha
je
out
xorl
xor
fs
popf
ficomps
inc
add
sti
xor
das
mov
rolb
pop
movsl
cmpsb
loopne
test
add
lods
pusha
and
imul
mov
sub
mov
sahf
adc
cmp
mov
xchg
gs
and
add
imul
mov
push
rol
inc
jle
dec
mov
sub
rclb
movsb
loopne
lea
cmp
sub
xor
xchg
xorb
arpl
loopne
pushf
outsb
sub
mov
insb
shlb
loopne
mov
andb
pusha
gs
mov
int3
jg
cmp
mov
rolb
shlb
aad
sub
loopne
inc
loopne
mov
inc
je
ret
inc
inc
xchg
out
mov
filds
or
push
sbb
mov
aaa
mov
roll
fs
loopne
imul
cmpb
pusha
pusha
adc
cmp
rol
data16
and
les
xchg
dec
xchg
push
jo
das
leave
iret
jbe
addr16
add
add
es
inc
push
xchg
mov
add
dec
inc
popa
std
cwtl
add
mov
pop
psubw
int3
or
fdiv
ss
pop
inc
cmpsl
jecxz
nop
dec
sarl
add
cld
pushf
daa
aas
push
cmp
addr16
sbb
or
andl
inc
add
rolb
andb
mov
mov
pusha
adc
lahf
js
push
lret
and
xor
andb
in
xlat
into
ljmp
push
js
jae
xor
loopne
shlb
push
and
adc
sub
add
faddp
ficoml
ret
movsl
aad
dec
sbb
loop
andb
lods
loopne
int3
sbb
sub
addl
dec
lods
xor
pop
xchg
jecxz
lds
in
mov
sub
push
xor
mov
lea
push
call
cmp
jl
cmp
jne
xor
pop
leave
ret
nop
nop
nop
nop
nop
call
movl
ret
nop
nop
nop
nop
nop
mov
push
mov
cmpl
jne
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
push
call
xor
inc
ret
nop
nop
nop
nop
nop
call
movl
ret
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
mov
push
push
mov
push
xor
mov
mov
xor
mov
mov
inc
mov
push
call
mov
mov
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
lea
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
call
mov
cmp
je
push
mov
cmp
jne
mov
pop
test
jne
test
jne
test
jne
test
jne
test
jne
cmp
je
push
pushl
call
testl
mov
jne
push
pushl
call
mov
pop
pop
leave
ret
push
add
add
add
add
add
add
add
mov
push
mov
sub
pushl
andl
pushl
call
pop
pop
test
jne
mov
leave
ret
nop
nop
nop
nop
nop
jmp
pushl
push
pushl
call
jmp
nop
nop
nop
nop
nop
mov
push
mov
cmpl
jne
call
xor
inc
pop
ret
nop
nop
nop
nop
nop
mov
test
je
cmp
je
not
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
mov
shr
push
pop
je
cmp
ja
test
jl
push
push
push
mov
lea
push
pushl
lea
push
push
xor
call
add
test
jl
cmp
ja
je
pop
pop
mov
pop
pop
ret
mov
jmp
mov
jmp
nop
nop
nop
nop
nop
jmp
pushl
call
mov
cmp
je
push
push
call
call
push
push
push
call
call
mov
call
movzwl
cmp
je
cmp
je
cmp
jne
cmpw
jae
add
inc
inc
add
xor
call
mov
add
call
pop
pushl
call
cmp
jne
lea
push
push
lea
push
push
pushl
call
cmp
jne
jmp
lea
jmp
mov
mov
jmp
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
mov
pushl
xor
pushl
mov
push
mov
mov
call
mov
cmp
jne
mov
test
je
mov
lea
cmp
jb
mov
mov
lea
push
pushl
pushl
call
xor
add
inc
pop
pop
pop
leave
ret
pop
add
dec
add
push
add
add
pop
add
inc
add
add
push
add
pop
add
inc
add
inc
add
add
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
mov
mov
test
je
mov
test
je
cmpl
jl
test
je
cmpl
je
test
je
cmp
je
cmp
jle
mov
test
jne
mov
and
dec
and
test
jne
mov
and
dec
and
test
jne
test
je
lea
mov
mov
and
mov
mov
cmpl
je
cmp
mov
mov
jg
mov
lea
mov
mov
mov
and
dec
movb
mov
jne
movb
lea
lea
lea
mov
mov
mov
and
mov
mov
and
mov
mov
and
mov
mov
and
mov
mov
lea
and
andl
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
movzwl
mov
test
jne
mov
mov
movzwl
lea
mov
mov
cmp
jbe
rolb
mov
jmp
nop
nop
nop
nop
nop
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
mov
and
push
cmp
je
call
pop
ret
nop
nop
nop
nop
nop
jmp
mov
add
cmp
jb
cmp
jae
jmp
call
andl
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
call
push
pushl
pushl
pushl
pushl
pushl
call
pop
ret
nop
nop
nop
nop
nop
push
push
call
xor
mov
mov
call
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
je
cmp
je
cmp
jne
testl
jne
cmp
je
cmp
je
cmp
je
mov
call
lea
push
lea
push
lea
push
push
call
mov
cmp
jne
push
lea
push
call
test
je
addw
mov
test
jne
pushl
pushl
pushl
pushl
lea
push
push
call
mov
lea
push
call
mov
mov
call
push
push
call
mov
call
ret
nop
nop
incl
add
add
add
add
push
lret
add
int3
add
nop
nop
nop
nop
mov
push
mov
sub
push
push
xor
pop
lea
movl
rep
mov
mov
cmp
je
push
mov
push
push
push
mov
lea
push
push
push
push
call
test
jge
pop
pop
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
push
pushl
call
pop
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
push
pushl
lea
push
call
test
jl
call
mov
xchg
andb
sahf
addb
lods
movsb
pusha
shlb
das
mov
sub
mov
mov
cmp
sub
sub
std
dec
das
xchg
arpl
lcall
loope
add
leave
mov
and
popf
outsl
mov
mov
shlb
cld
cmp
or
push
cli
dec
jno
cli
inc
repz
and
stc
dec
clc
movsb
mov
shlb
add
xor
sbb
stc
jnp
leave
mov
lds
pop
stc
pop
mov
stc
imul
loopne
orl
push
psubusb
loopne
mov
sub
and
scas
mov
cmp
fwait
rol
inc
xchg
cmp
pop
outsb
in
push
jb
cmp
jno
and
inc
xor
mov
cltd
outsl
and
cmp
lds
push
xchg
jge
xchg
xchg
gs
test
rcr
mov
and
fcom
adc
daa
sarb
andb
inc
popf
insl
popf
pop
inc
sbb
or
mov
imul
mov
out
push
sahf
push
fldl
inc
stos
in
inc
test
addb
push
mov
cmp
movsl
fs
fstpl
pop
or
rcl
std
sub
arpl
or
aaa
sbb
and
loopne
lret
mov
rolb
dec
pusha
inc
xor
rolb
pusha
mov
and
inc
add
shlb
and
cs
mov
inc
inc
mov
jns
xor
dec
adc
cmpsb
mov
mov
test
loopne
fcom
jp
xchg
sub
jg
adc
xlat
pcmpeqd
aam
or
and
fs
cmp
fmul
sub
sbbb
loopne
adc
and
mov
mov
jne
pop
lods
loopne
sub
shlb
cmp
jle
adc
jo
xor
and
add
sbb
and
ficoms
pop
xchg
cmc
lea
test
flds
pusha
sarb
jns
dec
xchg
test
mov
mov
incl
inc
cld
jb
mov
jne
inc
xor
mov
inc
pusha
jb
clc
mov
mov
add
add
test
pusha
cmp
pushf
call
sti
add
ror
sub
jae
mov
add
rcr
in
out
push
fwait
jns
popf
int
repz
pushf
arpl
jae
lods
sub
inc
xor
mov
inc
and
loopne
iret
leave
mov
mov
idivl
bound
dec
call
mov
and
popf
stos
push
lock
addr16
mov
arpl
pusha
lcall
addr16
shlb
aaa
mov
loopne
mov
mov
out
scas
pusha
inc
dec
ss
and
inc
cltd
flds
push
and
and
icebp
add
xchg
dec
xor
arpl
loopne
mov
push
test
push
cli
mov
in
mov
shlb
popa
push
sub
mov
ret
neg
cmp
mov
fdivs
push
and
pusha
cwtl
in
rcrl
mov
cli
mov
mov
sub
pop
mov
jne
push
rolb
push
rolb
inc
xor
mov
imul
popl
inc
test
mov
pusha
and
mov
iret
or
sbb
in
loop
push
and
subb
mov
pusha
daa
jle
add
cld
mov
sub
sub
push
add
jne
adc
pop
leave
jb
adc
mov
inc
inc
cmp
mov
mov
pop
jmp
pop
fdivrs
in
arpl
call
cmc
out
sub
mov
sub
jmp
pusha
xor
sub
hlt
leave
clc
pop
push
pusha
mov
aas
jne
bound
or
pusha
test
loopne
and
pushf
cltd
stos
loopne
aaa
icebp
imul
push
lcall
nop
andb
repz
movsb
add
xor
das
cmp
sub
mov
pop
lods
andb
je
add
pusha
or
fisubrl
xor
cmp
loope
js
cmpsl
dec
xor
xor
lcall
loopne
cmc
icebp
sub
jp
fwait
lods
or
add
insl
or
repnz
fwait
lcall
and
scas
pusha
and
shrb
inc
mov
enter
hlt
popa
fbstp
or
mov
rcrb
scas
loopne
dec
pop
ss
add
mov
adc
push
and
arpl
jle
sti
and
mov
popf
aam
and
add
mov
mov
outsl
popa
ror
cwtl
std
fwait
mov
int
sub
add
adc
and
push
sbb
xor
push
xorb
mov
in
enter
xchg
mov
xor
pusha
inc
xchg
lcall
mov
aaa
leave
push
adc
shl
loopne
push
adc
repnz
xchg
add
fidivrl
scas
out
inc
sbb
pusha
mov
and
bound
and
sub
in
cwtl
testb
cmc
jmp
leave
stc
into
sbb
nop
arpl
mov
shlb
inc
popa
int3
out
sub
movsb
loopne
in
xor
sbbl
stc
or
jmp
xor
dec
outsl
fdivr
js
fscale
or
movsl
mov
jnp
loopne
leave
or
pusha
pusha
inc
notb
cmp
jmp
add
jns
push
or
jge
inc
popf
and
ljmp
pusha
cmpsl
mov
andb
loopne
out
jl
loop
iret
push
nop
cmp
push
and
or
repnz
hlt
push
das
enter
leave
mov
inc
add
pop
cmp
loopne,pn
xchg
cs
subb
add
mov
pop
scas
cli
or
inc
sub
and
ds
pusha
adc
and
inc
adc
popf
cmp
add
les
add
or
shr
lret
xchg
sbb
fmul
roll
lods
jnp
add
loopne
and
sub
fcmovne
mov
xchg
cwtl
dec
fdivs
orb
sub
xchg
fistpll
add
and
push
rcrb
sub
xchg
pop
pop
sub
addb
daa
lods
loopne
push
arpl
xor
nop
mov
inc
subl
sbb
fmull
aam
cs
mov
pushf
int3
rcl
lcall
rclb
ja
lret
fadds
and
cmpsb
inc
add
pusha
jecxz
pop
mov
pusha
jle
aaa
pop
ret
cs
loopne
inc
cmp
dec
mov
stc
xlat
rcll
push
mov
loop
jecxz
stc
xchg
inc
mov
loopne
rol
dec
jmp
push
cmp
lock
and
jne
outsl
addb
bound
lea
sub
push
dec
scas
andb
add
mov
loopne
lea
ljmp
ret
inc
sub
les
dec
enter
adc
icebp
sbbl
push
push
add
adc
push
mov
mov
inc
sbb
rorl
int3
inc
aad
mov
call
pusha
mov
or
das
sahf
mov
jb
addb
shl
pop
add
and
rolb
sub
mov
xor
xchg
roll
movsb
loopne
add
and
jp
in
push
mov
inc
mov
or
ljmp
rcrl
inc
orb
imul
cmp
xchg
aaa
ds
ds
inc
std
daa
sub
vunpcklps
rcrl
mov
add
or
mov
imul
xchg
rcl
cmp
aam
push
inc
sub
sub
and
aaa
sbb
imul
imul
and
dec
push
inc
add
ror
mov
ljmp
cmpsb
pusha
loopne
jl
shll
mov
pusha
add
add
jae
sub
rol
xchg
bound
rolb
movswl
and
out
pop
fistps
inc
mov
mov
adc
pop
and
shrl
sub
xchg
push
bnd
xchg
scas
loopne
loop
pop
cmp
cli
sarl
push
mov
addb
mov
pop
adc
dec
sbb
and
mov
cld
jecxz
nop
aaa
push
xor
add
mov
mov
dec
lret
test
dec
xor
lods
mov
iret
jg
loope
add
enter
cmp
repz
rcr
jne
push
pop
inc
push
pop
adc
xor
in
outsb
addr16
pop
mov
paddsb
cmp
xchg
inc
push
in
pusha
pusha
push
jno
fcmovb
add
lds
ja
push
repz
sbb
xchg
rcrl
repnz
push
sub
fsubs
and
rcr
push
mov
mov
cmp
and
or
add
adc
loop
jnp
push
loopne
mov
and
into
test
xchg
insb
cli
jmp
bound
inc
pop
jmp
mov
adc
xor
lret
mov
andb
jno
push
mov
ror
inc
mov
aas
and
mov
xchg
lods
lret
out
aas
or
jo
add
ret
pop
sbb
add
mov
arpl
xchg
pop
ret
push
cmpsl
cltd
dec
icebp
cmp
mov
movsb
inc
inc
or
inc
loopne
shl
andb
dec
ret
cmpsl
and
dec
pop
jbe
aam
and
shr
pusha
cmp
loopne
cmpsl
fmulp
inc
jl
pop
adc
fnstsw
cmp
xor
jnp
das
popa
mov
das
mov
add
lock
fwait
add
jb
mov
orb
cmp
shl
mov
rclb
fsubp
sub
rol
xorl
mov
jle
mov
and
mov
adc
add
stos
sbbl
sahf
sub
loope
enter
pusha
je
ret
test
inc
loop
ss
fsubs
inc
aam
xchg
mov
inc
pusha
dec
out
jb
test
shlb
notb
push
mov
inc
loope
jne
xchg
ret
cmp
xor
mov
addb
and
inc
xchg
or
push
mov
mov
in
mov
xchg
lret
jmp
adc
pop
icebp
mov
andb
je
lea
movb
leave
cmp
jl
cmp
cmp
addb
dec
and
cmp
test
adcb
push
jge
fs
cmp
mov
fwait
mov
and
inc
or
jge
inc
pusha
inc
add
mov
jno
and
das
loope
rolb
loopne
daa
mov
addb
out
addr16
and
out
sbb
mov
shlb
and
add
enter
and
xchg
mov
js
mull
add
mov
mov
roll
insl
mov
das
lsl
arpl
addr16
sub
sarb
int3
mov
insl
jmp
rorb
cltd
stos
add
or
push
inc
adc
and
adcb
pop
clc
imul
jmp
push
adc
movl
xchg
lahf
stc
jmp
jg
fisubrs
mov
xor
mov
and
jle
push
dec
pop
mov
add
and
lcall
and
inc
add
add
adc
rolb
pop
aam
mov
push
add
inc
pop
ret
pushf
test
in
push
mov
mov
add
outsl
inc
inc
pop
add
pop
repz
sbb
pop
adc
jo
inc
add
shrl
sub
inc
lock
addb
add
cmp
jp
loopne
in
push
addb
pop
jb
xor
add
lret
scas
addb
dec
pop
mov
mov
push
inc
ja
cld
fcoms
call
and
and
pusha
pusha
sti
mov
out
loopne
insb
add
int3
mov
and
push
test
rolb
inc
cmpsl
mov
and
and
jle
pop
mov
out
or
lret
xchg
in
insl
and
faddp
pushf
jbe
adc
mov
dec
ret
push
das
aaa
leave
adc
and
out
pop
mov
sub
sbb
cbtw
stos
push
fstl
xor
loopne
pop
adc
inc
mov
loopne
add
adc
pop
nop
in
daa
adc
imul
mov
addb
or
mov
out
addb
and
cmp
pusha
rorb
add
mov
pusha
adcb
add
scas
push
lcall
idiv
cmp
cmpsb
rolb
xor
push
push
movsb
andb
pop
xor
adc
addb
mov
inc
lahf
mov
ja
mov
mov
pusha
add
add
mov
and
fisttpll
js
test
lods
shlb
and
pop
dec
movsb
pusha
add
pop
pop
shlb
adc
stos
and
xchg
sub
sub
subb
and
cli
fisubs
mov
andl
insb
dec
lea
pusha
inc
call
icebp
adc
pusha
subb
js
pop
and
rcrl
cmp
test
xchg
sub
jbe
clc
cwtl
fmuls
andb
andl
dec
pop
les
shl
xchg
mov
xor
jmp
lcall
and
addb
push
repz
xor
and
mov
imul
aaa
sbb
or
pusha
push
xchg
push
ja
lods
xor
jp
cmp
inc
xor
pusha
shlb
jo
pusha
xor
popf
pop
and
loopne
mov
add
xor
lea
mov
dec
outsb
popf
push
nop
clc
repnz
cld
jae
cmc
add
mov
mov
clc
mov
mov
sub
mov
xor
nop
push
mov
leave
nop
jmp
add
add
inc
or
clc
repnz
cld
jae
or
add
data16
movsb
loopne
movl
repnz
cld
jae
add
fadds
add
pop
push
nop
clc
repnz
cld
jae
or
xchg
add
mov
add
nop
clc
repnz
cld
jae
pushf
add
nop
push
mov
leave
nop
jmp
add
sbb
mov
xchg
ret
outsb
push
into
hlt
mov
in
add
mov
leave
nop
jmp
add
add
dec
nop
clc
repnz
cld
jae
dec
loope
add
push
dec
icebp
scas
mov
nop
clc
repnz
cld
jae
pop
add
xchg
data16
pop
nop
clc
repnz
cld
jae
jg
cmp
add
add
add
nop
push
mov
leave
nop
jmp
add
insb
call
mov
leave
nop
jmp
into
add
push
add
push
push
mov
xchg
ret
pushf
into
add
xchg
jnp
sti
nop
clc
repnz
cld
jae
add
iret
ljmp
cmc
push
xchg
cmp
jmp
incl
add
add
add
fadds
add
inc
and
decl
nop
push
mov
leave
nop
jmp
fcoms
add
pusha
xor
mov
xchg
ret
push
add
nop
add
mov
rcr
push
push
mov
xchg
ret
add
add
or
dec
inc
add
push
push
mov
xchg
ret
dec
add
add
add
add
pause
clc
repnz
cld
jae
sub
nop
into
insb
popa
cmp
add
clc
repnz
cld
jae
push
xor
push
loopne
add
nop
clc
repnz
cld
jae
add
add
shrb
push
mov
xchg
ret
negb
add
xor
into
testl
repnz
cld
jae
add
and
and
push
mov
xchg
ret
push
push
inc
push
bnd
dec
cmp
jae
add
xchg
add
pop
nop
clc
repnz
cld
jae
push
add
jg
into
add
mov
rcll
cmp
add
pushf
add
lods
add
ds
add
jae
add
faddl
add
in
xor
mov
nop
clc
repnz
cld
jae
add
inc
ds
add
nop
clc
repnz
cld
jae
adc
xor
add
pop
nop
clc
repnz
cld
jae
nop
dec
subl
add
push
mov
xchg
ret
add
add
cmp
add
nop
clc
repnz
cld
jae
ljmp
add
fwait
nop
clc
repnz
cld
jae
add
nop
add
cmp
add
clc
repnz
cld
jae
add
add
mov
adc
scas
enter
nop
cld
jae
add
add
into
mov
pop
nop
clc
repnz
cld
jae
add
xor
inc
mov
xor
push
mov
push
mov
xchg
ret
push
add
add
push
repnz
cld
jae
add
into
or
dec
or
mov
nop
clc
repnz
cld
jae
imul
mov
push
xchg
mov
xchg
jae
push
mov
xchg
ret
pop
add
outsb
mov
popa
add
test
add
nop
clc
repnz
cld
jae
add
mov
jmp
nop
cld
jae
add
add
or
addb
xor
nop
push
mov
leave
nop
jmp
add
xchg
sbb
sahf
imul
adcl
add
inc
push
add
popa
add
push
mov
leave
nop
jmp
insb
add
push
add
jge
nop
push
mov
leave
nop
jmp
lods
add
mov
shl
test
clc
repnz
cld
jae
add
mov
sub
nop
jmp
mov
add
add
sub
clc
repnz
cld
jae
add
test
popa
nop
clc
repnz
cld
jae
jg
mov
add
add
fwait
nop
clc
repnz
cld
jae
add
add
mov
addb
inc
add
pop
add
add
dec
pop
push
mov
xchg
ret
pushf
add
movl
rorl
mov
leave
nop
jmp
add
add
push
dec
add
lods
and
std
inc
add
xchg
xchg
iret
fcoms
jbe
add
nop
pop
nop
add
pop
imul
nop
push
mov
leave
nop
jmp
andl
or
and
cmp
fildl
pause
push
mov
leave
nop
jmp
add
nop
add
ds
test
nop
push
mov
leave
nop
jmp
add
outsb
mov
sbb
or
and
ss
push
nop
clc
repnz
cld
jae
add
add
add
pop
pop
nop
clc
repnz
cld
jae
add
faddl
sub
add
mov
leave
nop
jmp
inc
lods
add
icebp
mov
std
jne
nop
clc
repnz
cld
jae
add
xchg
sbb
jae
push
inc
mov
adc
add
int
nop
clc
repnz
cld
jae
add
incl
into
movsl
add
jb
inc
add
inc
icebp
add
add
add
dec
pop
nop
clc
repnz
cld
jae
add
add
pushf
push
nop
clc
repnz
cld
jae
add
pushf
add
add
test
call
inc
add
outsb
add
dec
sub
xchg
mov
leave
nop
jmp
mov
add
or
inc
test
pushl
nop
clc
repnz
cld
jae
add
nop
clc
repnz
cld
jae
inc
push
add
dec
add
lods
outsb
std
xchg
push
mov
xchg
ret
xchg
ds
loope
xor
add
rclb
jae
cmp
loope
and
push
int3
sbb
imul
xchg
ret
push
movsl
push
add
push
nop
clc
repnz
cld
jae
add
add
insb
testl
repnz
cld
jae
add
ret
add
push
mov
xchg
ret
add
add
les
repnz
cld
jae
incl
add
lods
push
mov
xchg
ret
into
add
mov
clc
mov
call
nop
clc
repnz
cld
jae
xor
cmc
add
inc
mov
nop
clc
repnz
cld
jae
inc
insb
push
mov
nop
clc
repnz
cld
jae
add
add
xchg
push
push
mov
xchg
ret
pusha
push
iret
cmp
loope
add
cmp
jmp
pop
nop
cmp
dec
add
pusha
add
add
add
addl
clc
repnz
cld
jae
lods
inc
mov
add
sbb
nop
cld
jae
add
add
pop
add
or
mov
test
repnz
cld
jae
dec
add
arpl
mov
sub
sub
add
loope
sbb
loope
call
movzwl
nop
push
mov
leave
nop
jmp
mov
add
into
fwait
mov
nop
clc
repnz
cld
jae
add
add
mov
nop
clc
repnz
cld
jae
mov
push
add
jne
or
add
nop
clc
repnz
cld
jae
push
xor
outsb
sti
mov
nop
push
mov
leave
nop
jmp
sbb
xor
push
icebp
xchg
sbb
in
leave
nop
jmp
pusha
xchg
add
add
and
cld
jae
jg
inc
pushf
lods
loope
add
pop
addl
cmp
ret
pusha
or
pop
icebp
add
mov
mov
push
mov
xchg
ret
movsl
add
add
mov
nop
clc
repnz
cld
jae
add
pushf
xor
call
leave
nop
jmp
dec
add
lods
insb
xchg
cmp
mov
xchg
ret
add
fsubrl
pop
add
mov
push
nop
push
mov
leave
nop
jmp
movsl
data16
add
add
lock
xchg
ret
add
mov
mov
or
cmc
bnd
add
nop
clc
repnz
cld
jae
lods
dec
add
insb
adc
lea
nop
clc
repnz
cld
jae
xchg
add
or
cmp
push
mov
leave
nop
jmp
insb
xchg
into
cmp
xchg
ret
nop
clc
repnz
cld
jae
imul
add
push
mov
xchg
ret
or
add
add
pop
nop
clc
repnz
cld
jae
add
add
cmp
and
xor
add
push
mov
xchg
ret
add
xor
add
imul
leave
nop
jmp
loope
addl
out
or
nop
clc
repnz
cld
jae
add
cmp
mov
xchg
daa
push
nop
clc
repnz
cld
jae
add
add
add
jbe
push
push
mov
xchg
ret
dec
nop
rolb
add
pusha
add
mov
push
mov
xchg
ret
mov
add
add
jg
aas
nop
clc
repnz
cld
jae
add
add
cmc
add
nop
push
mov
leave
nop
jmp
insb
add
popa
pushf
sub
push
addl
cmp
ret
imul
nop
mov
mov
xchg
ret
iret
nop
add
add
fadds
and
push
nop
push
mov
leave
nop
jmp
add
add
es
nop
clc
repnz
cld
jae
iret
dec
icebp
pop
add
push
mov
nop
clc
repnz
cld
jae
add
add
add
push
call
push
and
add
nop
jmp
and
cmpl
nop
push
mov
leave
nop
jmp
movl
mov
nop
clc
repnz
cld
jae
mov
add
dec
mov
nop
clc
repnz
cld
jae
adc
popa
sbb
insb
xchg
cmpsl
fwait
nop
clc
repnz
cld
jae
add
addl
imul
add
xchg
xchg
add
clc
repnz
cld
jae
xchg
decl
adc
inc
add
add
add
add
push
push
nop
clc
repnz
cld
jae
lods
add
or
gs
nop
clc
repnz
cld
jae
add
add
dec
pusha
dec
adc
repnz
cld
jae
fdivr
add
add
xor
push
mov
leave
nop
jmp
jg
or
out
setnp
push
mov
xchg
ret
add
dec
add
add
insl
mov
nop
push
mov
leave
nop
jmp
add
add
add
xchg
lea
nop
clc
repnz
cld
jae
xchg
add
fcomps
add
nop
push
mov
leave
nop
jmp
xchg
jg
loope
gs
nop
clc
repnz
cld
jae
add
inc
sahf
mov
addr16
nop
push
mov
leave
nop
jmp
faddl
add
or
repnz
cld
jae
add
add
pop
lods
and
lea
nop
push
mov
leave
nop
jmp
add
add
movsb
nop
clc
repnz
cld
jae
sub
xor
rolb
xchg
and
mov
pusha
in
mov
nop
clc
repnz
cld
jae
mov
fadds
insl
cld
push
mov
xchg
ret
pushf
adc
add
push
push
nop
clc
repnz
cld
jae
add
add
xchg
add
nop
cld
jae
add
add
xchg
dec
incl
ror
nop
clc
repnz
cld
jae
add
push
lods
jmp
fadd
inc
sub
mov
add
outsb
and
clc
repnz
cld
jae
imul
and
inc
and
clc
repnz
cld
jae
dec
into
xchg
xor
clc
repnz
cld
jae
mov
add
add
pop
sub
and
add
nop
clc
repnz
cld
jae
add
add
lods
imul
ljmp
ret
xchg
add
pop
xchg
push
nop
clc
repnz
cld
jae
add
add
add
mov
call
jae
xchg
xchg
out
add
mov
leave
nop
jmp
xchg
xor
notb
dec
and
push
mov
xchg
ret
add
cmc
cmc
add
leave
call
nop
clc
repnz
cld
jae
push
add
add
sarl
nop
clc
repnz
cld
jae
pop
jg
add
clc
repnz
cld
jae
pusha
add
or
pop
jmp
add
add
add
add
add
addb
nop
clc
repnz
cld
jae
nop
add
loope
ds
pop
nop
clc
repnz
cld
jae
add
add
add
popl
nop
push
mov
leave
nop
jmp
xchg
add
inc
add
nop
clc
repnz
cld
jae
add
push
dec
fisubl
mov
xchg
ret
add
add
gs
nop
clc
repnz
cld
jae
movl
nop
cld
jae
popa
add
loope
cmc
cmpsb
add
xor
jne
nop
clc
repnz
cld
jae
lods
pop
add
push
es
and
fwait
mov
nop
push
mov
leave
nop
jmp
and
sub
sbb
cld
or
in
leave
nop
jmp
xor
add
leave
push
push
mov
xchg
ret
add
inc
add
mov
loopne
sbb
nop
clc
repnz
cld
jae
add
add
add
and
andb
clc
repnz
cld
jae
push
add
jne
push
mov
xchg
ret
add
add
pop
cmp
into
add
push
push
mov
xchg
ret
add
add
movsl
push
xor
nop
clc
repnz
cld
jae
incl
cmp
in
xor
nop
clc
repnz
cld
jae
add
add
add
inc
insl
jmp
into
cmc
add
add
or
pop
adc
jae
add
add
pop
mov
in
leave
nop
jmp
add
loope
add
call
push
mov
xchg
ret
add
add
add
or
addl
push
add
nop
jmp
push
add
sub
clc
repnz
cld
jae
add
push
add
xchg
push
nop
push
mov
leave
nop
jmp
movl
add
loope
incl
add
nop
jmp
or
into
lahf
add
nop
push
mov
leave
nop
jmp
add
sti
add
nop
push
mov
leave
nop
jmp
push
sbb
rclb
xchg
xchg
ret
inc
loope
inc
push
cmc
pop
cmc
leave
mov
push
mov
xchg
ret
add
add
pop
dec
add
and
clc
repnz
cld
jae
outsb
add
or
or
loop
sti
add
nop
clc
repnz
cld
jae
add
lods
lods
xchg
add
nop
clc
repnz
cld
jae
add
add
rclb
jae
add
inc
and
nop
clc
repnz
cld
jae
cmc
add
or
add
nop
clc
repnz
cld
jae
add
push
xchg
cmp
inc
add
push
mov
xchg
ret
insb
inc
pushf
into
add
add
clc
xchg
fists
clc
repnz
cld
jae
ds
add
mov
test
movsl
jg
nop
clc
repnz
cld
jae
incl
adc
mov
nop
clc
repnz
cld
jae
add
dec
fistps
mov
xchg
ret
add
add
add
push
push
mov
xchg
ret
xchg
cmp
pusha
add
addb
nop
cld
jae
add
xchg
out
jne
call
inc
add
xchg
xor
push
nop
push
mov
leave
nop
jmp
adcl
nop
clc
repnz
cld
jae
add
add
add
add
insl
mov
nop
push
mov
leave
nop
jmp
xor
add
add
mov
add
nop
clc
repnz
cld
jae
add
nop
jne
inc
and
nop
clc
repnz
cld
jae
add
add
movsl
mov
nop
clc
repnz
cld
jae
inc
icebp
movsl
add
mov
nop
push
mov
leave
nop
jmp
mov
add
add
add
push
push
mov
xchg
ret
movsl
mov
add
or
add
pop
fld1
push
mov
xchg
ret
add
push
add
movzwl
nop
push
mov
leave
nop
jmp
pusha
adc
popa
add
jmp
mov
xchg
ret
into
add
add
pop
add
in
leave
nop
jmp
add
add
pusha
pusha
push
pushl
nop
clc
repnz
cld
jae
xor
xor
roll
loope
inc
add
add
inc
movsl
add
nop
xchg
fwait
nop
push
mov
leave
nop
jmp
add
imul
xchg
add
push
mov
xchg
ret
add
add
nop
xchg
xchg
dec
pop
mov
nop
push
mov
leave
nop
jmp
add
xor
add
cmc
pop
nop
push
mov
leave
nop
jmp
or
add
add
add
sub
push
mov
leave
nop
jmp
push
add
xor
xchg
add
mov
nop
clc
repnz
cld
jae
pop
lods
inc
loope
cmp
clc
repnz
cld
jae
and
push
push
test
repnz
cld
jae
mov
add
popa
mov
add
mov
push
mov
leave
nop
jmp
push
add
pop
or
push
je
nop
clc
repnz
cld
jae
push
mov
add
push
mov
leave
nop
jmp
add
add
clc
repnz
cld
jae
cmp
nop
movsl
add
add
clc
repnz
cld
jae
add
fmul
add
jl
shl
nop
clc
repnz
cld
jae
add
or
add
push
mov
leave
nop
jmp
add
add
inc
add
adc
mov
add
add
add
pop
add
sbb
add
add
test
clc
repnz
cld
jae
or
add
add
add
movzwl
nop
push
mov
leave
nop
jmp
push
add
add
lcall
pop
xor
add
push
movl
repnz
cld
jae
push
nop
mov
into
add
rolb
dec
nop
push
mov
leave
nop
jmp
add
mov
in
loopne
pop
dec
jno
mov
add
mov
add
add
nop
inc
xor
sbb
add
xor
mov
mov
xchg
mov
subb
mov
add
add
jae
icebp
mov
push
mov
xchg
ret
add
or
add
add
add
nop
clc
repnz
cld
jae
inc
add
add
mov
mov
nop
clc
repnz
cld
jae
outsb
add
add
add
addb
rcrb
clc
repnz
cld
jae
iret
xchg
cmp
movsl
adc
dec
shl
nop
clc
repnz
cld
jae
cmp
xchg
xchg
adc
mulps
jae
adc
mov
hlt
and
leave
nop
jmp
mov
pusha
add
pop
nop
clc
repnz
cld
jae
xchg
add
je
nop
clc
repnz
cld
jae
pusha
add
loopne
test
rclb
into
xchg
inc
add
xchg
push
add
jg
push
std
lea
nop
push
mov
leave
nop
jmp
nop
sbb
loope
jl
dec
add
jmp
add
iret
xchg
add
and
mov
xchg
ret
inc
or
movl
cmpl
jae
add
rolb
nop
push
mov
leave
nop
jmp
inc
add
icebp
pop
mov
push
mov
xchg
ret
add
nop
cmc
or
rorl
cld
jae
xchg
loope
add
add
popa
add
nop
clc
repnz
cld
jae
add
mov
fmull
aam
es
stos
jne
nop
clc
repnz
cld
jae
add
add
xor
out
incl
add
add
add
xchg
pop
add
nop
clc
repnz
cld
jae
xchg
add
xchg
xor
dec
ss
nop
clc
repnz
cld
jae
add
and
nop
clc
repnz
cld
jae
mov
add
add
or
pusha
nop
clc
repnz
cld
jae
add
xchg
cmc
call
jae
sub
add
add
jae
mov
pop
add
daa
add
nop
clc
repnz
cld
jae
add
add
test
addb
pusha
or
js
nop
clc
repnz
cld
jae
add
add
add
jecxz
push
mov
xchg
ret
into
add
add
dec
cmp
clc
repnz
cld
jae
add
xor
push
jg
pusha
nop
push
mov
leave
nop
jmp
push
add
sub
add
rclb
sbb
push
mov
xchg
ret
rclb
push
mov
and
and
call
add
add
imul
push
mov
leave
nop
jmp
nop
add
xchg
nop
sub
fistpl
push
mov
xchg
ret
add
xor
inc
add
push
mov
nop
clc
repnz
cld
jae
inc
add
add
clc
repnz
cld
jae
add
test
loopne
js
cmp
repnz
cld
jae
add
popa
nop
add
add
add
nop
clc
repnz
cld
jae
inc
add
add
jecxz
rorl
clc
repnz
cld
jae
imul
xor
repnz
cld
jae
add
cmp
and
add
nop
jmp
orl
jmp
jp
nop
push
mov
leave
nop
jmp
add
add
xchg
mov
nop
clc
repnz
cld
jae
mov
add
add
adc
jae
imul
push
mov
xchg
ret
fcompl
cmpl
push
push
mov
xchg
ret
dec
popa
or
inc
nop
jg
inc
mov
in
leave
nop
jmp
add
add
jae
inc
adc
mov
xchg
ret
dec
add
add
add
push
mov
xchg
ret
push
ljmp
mov
lods
icebp
mov
cli
rcrb
cmpb
roll
nop
clc
repnz
cld
jae
popa
mov
aas
xchg
push
mov
xchg
ret
addl
xchg
insb
loop
mov
nop
clc
repnz
cld
jae
push
incl
nop
xchg
dec
and
xchg
inc
add
add
mov
call
arpl
clc
repnz
cld
jae
pop
add
sti
add
add
jae
add
and
add
sar
pop
lods
testb
mov
cmp
shlb
jne
nop
clc
repnz
cld
jae
pop
dec
add
pushf
or
pushl
nop
clc
repnz
cld
jae
add
icebp
loope
outsb
mov
nop
clc
repnz
cld
jae
add
add
sub
insb
xchg
cmpsl
add
nop
push
mov
leave
nop
jmp
inc
add
mov
imul
xchg
ret
add
add
push
incl
add
movzwl
nop
clc
repnz
cld
jae
add
iret
pop
mov
dec
nop
push
mov
leave
nop
jmp
loope
push
incl
push
add
std
fistpl
push
mov
xchg
ret
lods
sub
add
xchg
mov
pop
push
mov
xchg
ret
add
movsl
data16
add
lods
insb
inc
push
jne
nop
push
mov
leave
nop
jmp
ds
inc
fnstenv
rclb
adc
ljmp
add
add
push
push
mov
xchg
ret
icebp
outsb
add
imul
clc
repnz
cld
jae
sbbl
nop
clc
repnz
cld
jae
mov
inc
ljmp
nop
cld
jae
add
icebp
inc
push
incl
add
nop
clc
repnz
cld
jae
outsb
add
add
inc
in
nop
clc
repnz
cld
jae
add
loope
mov
pop
jne
nop
clc
repnz
cld
jae
or
add
es
inc
add
cmp
movsl
insb
add
movsl
pop
das
sub
nop
push
mov
leave
nop
jmp
nop
add
lods
mov
incl
addl
pop
add
push
add
test
add
nop
clc
repnz
cld
jae
inc
add
bound
xchg
inc
add
add
add
jl
loopne
aaa
lea
nop
push
mov
leave
nop
jmp
mov
xchg
movsl
add
nop
clc
repnz
cld
jae
loope
subl
mov
inc
add
add
cmp
enter
nop
clc
repnz
cld
jae
add
add
mov
leave
nop
jmp
pushf
dec
add
add
nop
add
push
mov
xchg
ret
add
icebp
loope
add
add
nop
clc
repnz
cld
jae
inc
adc
cwtl
fisubrs
add
jae
jmp
iret
add
out
push
nop
clc
repnz
cld
jae
add
add
add
add
inc
add
push
mov
xchg
ret
add
insb
mov
add
xchg
and
movsb
nop
clc
repnz
cld
jae
add
inc
or
mov
mov
nop
clc
repnz
cld
jae
imul
push
mov
xchg
ret
xor
or
push
mov
leave
nop
jmp
add
loope
add
sti
call
nop
clc
repnz
cld
jae
add
add
mov
nop
push
mov
leave
nop
jmp
xor
add
stos
nop
clc
repnz
cld
jae
xchg
add
xchg
or
lcall
mov
xchg
ret
lods
adc
add
loope
mov
mov
pusha
data16
iret
ja
nop
clc
repnz
cld
jae
add
jge
or
nop
jmp
xor
adc
inc
xchg
dec
mov
nop
clc
repnz
cld
jae
jg
add
xor
add
dec
cmp
clc
repnz
cld
jae
popa
pop
add
push
nop
clc
repnz
cld
jae
add
add
mov
xchg
rcll
cld
jae
and
fdivs
nop
clc
repnz
cld
jae
rolb
or
push
adc
sbb
nop
clc
repnz
cld
jae
add
mov
inc
nop
clc
repnz
cld
jae
or
add
push
mov
xchg
ret
loope
nop
add
nop
add
roll
nop
clc
repnz
cld
jae
ds
mov
cmp
push
loopne
aas
push
nop
clc
repnz
cld
jae
popa
add
dec
add
sbb
adc
jae
into
add
or
lods
out
mov
nop
clc
repnz
cld
jae
outsb
cmc
add
xor
icebp
add
nop
clc
repnz
cld
jae
xchg
add
add
add
jmp
cmp
add
add
rol
inc
addl
add
repnz
cld
jae
imul
xchg
aaa
not
nop
clc
repnz
cld
jae
nop
insb
add
pop
add
fistpl
push
mov
xchg
ret
add
testb
xchg
adc
gs
push
mov
xchg
ret
addl
add
iret
call
inc
add
inc
add
add
and
clc
repnz
cld
jae
add
pushl
loope
movl
rorl
add
add
xchg
lods
nop
clc
repnz
cld
jae
add
cmp
jg
add
test
jb
xchg
pop
nop
clc
repnz
cld
jae
add
mov
aas
pushl
push
mov
xchg
ret
loope
inc
icebp
add
add
jne
nop
push
mov
leave
nop
jmp
add
mov
mov
leave
nop
jmp
push
mov
xchg
pop
push
nop
clc
repnz
cld
jae
add
mov
pusha
pop
add
add
dec
in
enter
push
mov
xchg
ret
cmp
xor
iret
addl
add
nop
clc
repnz
cld
jae
add
add
add
push
push
add
nop
push
mov
leave
nop
jmp
add
adc
inc
call
nop
clc
repnz
cld
jae
xchg
add
add
js
clc
repnz
cld
jae
add
outsb
xor
je
add
add
xchg
incl
add
fistpl
push
mov
xchg
ret
or
add
and
adc
pop
push
mov
xchg
ret
push
push
into
add
movsl
push
inc
add
imul
xchg
ret
add
xchg
jmp
call
nop
jmp
pop
data16
dec
xlat
push
nop
clc
repnz
cld
jae
or
xor
xchg
mov
nop
clc
repnz
cld
jae
imul
in
popa
mov
push
mov
xchg
ret
add
push
add
add
mov
xchg
ret
add
popa
add
xchg
mov
nop
clc
repnz
cld
jae
mov
loope
add
jb
adc
sub
nop
cld
jae
add
xchg
push
xchg
add
add
nop
clc
repnz
cld
jae
popa
add
push
nop
clc
repnz
cld
jae
push
xchg
loope
cmp
pop
push
and
loopne
bound
pop
push
mov
xchg
ret
xor
add
add
mov
clc
repnz
cld
jae
mov
add
sbb
insb
adc
and
repnz
cld
jae
xor
add
add
adc
mov
xchg
ret
inc
inc
push
imul
ret
mov
xchg
ret
add
or
add
das
mov
nop
clc
repnz
cld
jae
push
mov
xchg
adc
add
push
nop
clc
repnz
cld
jae
pop
add
ds
xchg
mov
inc
jb
sub
nop
clc
repnz
cld
jae
xor
add
out
sub
nop
clc
repnz
cld
jae
nop
inc
add
sahf
mov
out
dec
cmp
clc
repnz
cld
jae
push
add
add
out
shr
nop
clc
repnz
cld
jae
pushf
cmp
add
pop
push
nop
clc
repnz
cld
jae
inc
xchg
loope
or
cmp
sbb
jbe
nop
clc
repnz
cld
jae
adc
add
mov
dec
inc
nop
push
mov
leave
nop
jmp
add
add
sub
or
add
nop
jmp
nop
mov
cmp
rolb
nop
cld
jae
fadds
add
dec
cmp
seto
in
leave
nop
jmp
add
cltd
fwait
push
mov
xchg
ret
add
add
add
jb
jne
nop
clc
repnz
cld
jae
add
and
clc
repnz
cld
jae
nop
add
mov
repnz
cld
jae
add
popa
add
into
jp
jae
mov
test
call
jae
push
push
jne
jl
sbb
push
mov
leave
nop
jmp
add
or
add
jae
add
movsl
nop
andl
mov
nop
clc
repnz
cld
jae
mov
xor
nop
add
jle
mov
add
clc
repnz
cld
jae
pushf
add
cmp
sub
mov
nop
clc
repnz
cld
jae
push
add
into
add
outsb
movsl
jae
test
call
jae
add
nop
clc
repnz
cld
jae
dec
ds
add
add
jg
add
cmp
add
add
push
xchg
shlb
xlat
add
push
mov
xchg
ret
cmp
add
xor
jmp
clc
repnz
cld
jae
xchg
add
add
add
mov
mov
xchg
ret
add
or
add
xor
cmpsb
loopne
hlt
cli
xchg
sub
nop
clc
repnz
cld
jae
outsb
add
pushf
push
mov
and
out
rclb
jae
add
add
add
mov
repnz
cld
jae
nop
xor
jg
rclb
sbbl
add
mov
mov
xchg
ret
mov
add
pusha
add
and
lods
jne
nop
clc
repnz
cld
jae
sub
add
mov
push
mov
xchg
ret
inc
add
add
xchg
add
testl
repnz
cld
jae
add
add
insb
xchg
and
adc
xchg
ret
add
or
xor
fsub
push
inc
inc
xor
add
fld1
push
mov
xchg
ret
push
insb
add
add
inc
pushf
adc
and
lds
test
fdivrp
call
jae
sbb
jbe
add
nop
clc
repnz
cld
jae
add
mov
push
mov
xchg
ret
add
adc
popa
iret
cmp
xchg
int
pop
jae
clc
repnz
cld
jae
add
add
add
test
nop
push
mov
leave
nop
jmp
mov
into
add
sbb
and
add
add
push
rorb
mov
nop
clc
repnz
cld
jae
add
inc
add
add
pusha
push
add
and
loopne
inc
add
or
add
add
orl
cmp
ret
cmp
add
popa
cmp
nop
cld
jae
add
add
add
nop
clc
repnz
cld
jae
add
pop
add
add
in
leave
nop
jmp
add
add
lods
add
aaa
push
nop
clc
repnz
cld
jae
nop
xchg
push
loope
sbb
nop
clc
repnz
cld
jae
jg
pop
add
sub
add
clc
repnz
cld
jae
cmp
xchg
add
movsl
jbe
cmp
nop
push
mov
leave
nop
jmp
iret
mov
lods
dec
lods
add
test
push
mov
leave
nop
jmp
xchg
add
nop
clc
repnz
cld
jae
add
pusha
imul
mov
xchg
ret
push
or
add
xor
adc
testl
into
push
add
xchg
pushf
cwtl
push
xor
and
adc
sti
push
mov
xchg
ret
or
xor
push
nop
clc
repnz
cld
jae
add
imul
and
mov
mov
xchg
ret
add
push
add
add
add
test
idiv
call
jae
add
add
jae
xor
pop
or
nop
clc
repnz
cld
jae
xchg
add
add
add
outsl
mov
nop
push
mov
leave
nop
jmp
loope
add
dec
inc
out
out
nop
clc
repnz
cld
jae
add
xchg
sub
and
nop
push
mov
leave
nop
jmp
pushf
add
rolb
cmp
clc
repnz
cld
jae
xchg
imul
jmp
jp
add
add
add
jg
xchg
dec
jnp
nop
clc
repnz
cld
jae
add
mov
add
sbb
inc
sub
nop
jmp
add
pop
add
cwtl
stc
add
nop
clc
repnz
cld
jae
add
imul
cmp
ret
add
add
mov
xchg
ret
add
add
add
xor
push
mov
xchg
ret
add
add
addb
int
push
nop
clc
repnz
cld
jae
add
popa
push
sub
add
mov
xchg
ret
pusha
dec
fdivl
stos
nop
clc
repnz
cld
jae
jg
mov
push
push
push
mov
in
add
jae
movl
lods
push
pop
nop
push
mov
leave
nop
jmp
pop
add
xor
imul
imul
xor
call
jae
xchg
add
mov
jb
nop
push
mov
leave
nop
jmp
jg
dec
fdivl
insl
inc
add
add
pusha
add
add
insb
in
dec
pop
push
mov
xchg
ret
add
add
jg
add
nop
clc
repnz
cld
jae
add
adc
and
mov
inc
mov
nop
clc
repnz
cld
jae
cmp
inc
add
pushl
push
mov
xchg
ret
dec
into
xor
adc
lret
mov
nop
clc
repnz
cld
jae
inc
add
or
cmp
fistpl
nop
clc
repnz
cld
jae
add
sbb
add
and
inc
iret
ret
nop
push
mov
leave
nop
jmp
nop
outsb
add
rep
push
mov
xchg
ret
add
add
loope
loope
add
nop
clc
repnz
cld
jae
cmp
xor
add
nop
clc
repnz
cld
jae
cmp
add
popa
fcoml
nop
push
mov
leave
nop
jmp
inc
data16
dec
movsl
lods
cld
nop
clc
repnz
cld
jae
pop
add
jg
pop
inc
add
sub
ficompl
and
loope
pop
mov
mov
mov
movzwl
nop
clc
repnz
cld
jae
add
dec
sbbl
rcr
add
addr16
nop
clc
repnz
cld
jae
iret
nop
add
push
fcoml
mov
push
nop
clc
repnz
cld
jae
loope,pt
inc
cmpsb
andb
nop
cld
jae
jg
push
add
cmp
add
and
push
mov
xchg
ret
add
into
add
push
mov
xchg
ret
iret
cmp
add
add
add
rclb
jae
xor
push
add
or
nop
push
mov
leave
nop
jmp
add
pop
push
mov
xchg
ret
cmp
add
fsubrl
dec
scas
mov
push
push
nop
clc
repnz
cld
jae
xor
inc
pop
sub
nop
push
mov
leave
nop
jmp
xor
rolb
loopne
add
nop
clc
repnz
cld
jae
pushf
inc
add
add
lahf
jb
nop
clc
repnz
cld
jae
sbb
mov
push
mov
xchg
ret
fdivr
push
add
outsb
xor
inc
xor
nop
clc
repnz
cld
jae
into
add
loop
test
push
mov
xchg
ret
divb
add
lret
mov
push
mov
xchg
ret
add
lods
into
add
push
mov
cmp
push
mov
xchg
ret
add
add
and
add
mov
xchg
ret
push
add
add
jg
and
aam
mov
inc
add
jae
xor
add
popw
push
push
mov
xchg
ret
fdiv
add
add
pop
xchg
jno
nop
clc
repnz
cld
jae
add
dec
nop
add
test
mov
leave
nop
jmp
into
add
pushf
lahf
pop
nop
push
mov
leave
nop
jmp
inc
dec
insb
add
add
add
mov
nop
clc
repnz
cld
jae
add
add
inc
add
jl
mov
nop
clc
repnz
cld
jae
add
inc
ret
nop
push
mov
leave
nop
jmp
add
popw
shl
add
addr16
nop
clc
repnz
cld
jae
add
cmp
push
nop
clc
repnz
cld
jae
add
add
dec
add
call
mov
nop
push
mov
leave
nop
jmp
add
iret
add
xchg
ds
pop
shl
push
mov
xchg
ret
pushf
add
xchg
push
add
arpl
repnz
cld
jae
popa
xchg
add
xor
inc
pop
push
mov
xchg
ret
or
push
add
pushf
lea
icebp
nop
clc
repnz
cld
jae
xor
add
add
add
jae
pop
cmp
dec
insl
subl
nop
push
mov
leave
nop
jmp
add
add
pop
nop
push
mov
leave
nop
jmp
add
xor
add
divb
mov
nop
clc
repnz
cld
jae
nop
insb
add
add
push
mov
xchg
ret
add
outsb
add
popa
add
add
push
push
mov
xchg
ret
add
add
xchg
addl
and
push
mov
xchg
ret
add
inc
add
jnp
test
fdivrp
call
jae
add
add
in
inc
push
mov
xchg
ret
add
or
xchg
mov
cmc
or
call
nop
clc
repnz
cld
jae
add
lods
dec
ret
and
nop
clc
repnz
cld
jae
add
inc
pop
add
fsts
push
mov
leave
nop
jmp
loope
add
test
xor
xchg
inc
add
add
loope
inc
add
push
and
add
nop
clc
repnz
cld
jae
push
icebp
add
push
mov
xchg
ret
sarb
inc
add
mov
nop
clc
repnz
cld
jae
add
add
xchg
push
call
nop
jmp
add
add
and
pusha
shlb
push
mov
leave
nop
jmp
add
add
loope
xchg
nop
clc
repnz
cld
jae
add
nop
cmpl
shr
pusha
loopne
pop
push
mov
xchg
ret
or
mov
ds
adc
clc
repnz
cld
jae
movsl
nop
add
test
shlb
ljmp
leave
nop
jmp
cmp
fdivr
mov
lea
xchg
ret
or
dec
nop
add
add
add
add
loopne
and
mov
xchg
ret
into
inc
ds
push
add
clc
mov
mov
leave
nop
jmp
or
popa
rclb
aam
call
jae
add
lret
fwait
push
mov
xchg
ret
add
iret
add
push
imul
nop
clc
repnz
cld
jae
add
add
incl
sarb
fistl
scas
push
add
add
adc
loope
cmpl
mov
xchg
ret
add
add
add
fcompl
outsb
fld1
das
call
nop
jmp
lods
insb
into
iret
push
sub
push
mov
xchg
ret
insb
push
loope
inc
push
cmc
rcrl
mov
xchg
ret
add
cmc
incl
into
pop
add
jbe
nop
clc
repnz
cld
jae
add
xchg
cmp
rcrl
repnz
cld
jae
add
add
add
xor
loop
shlb
mov
stos
push
nop
push
mov
leave
nop
jmp
cmp
add
add
cmp
nop
clc
repnz
cld
jae
add
lods
or
nop
clc
repnz
cld
jae
faddl
add
xchg
loope
sbb
ja
add
add
loope
add
mov
and
clc
repnz
cld
jae
cmc
add
icebp
add
pop
out
push
mov
nop
clc
repnz
cld
jae
xor
imul
adc
xlat
nop
clc
repnz
cld
jae
add
pop
mov
loopne
fisttps
in
leave
nop
jmp
add
add
call
nop
clc
repnz
cld
jae
add
movl
add
add
xchg
push
add
add
dec
imul
nop
clc
repnz
cld
jae
add
add
neg
adc
div
nop
clc
repnz
cld
jae
insb
nop
add
nop
clc
push
mov
xchg
ret
add
ror
add
fmull
and
add
nop
clc
repnz
cld
jae
insb
icebp
sub
inc
pushf
pop
xchg
fwait
push
mov
xchg
ret
xchg
inc
xchg
add
add
xchg
stc
mov
push
mov
xchg
ret
add
add
add
sbb
inc
pop
lea
push
mov
xchg
ret
iret
xchg
inc
add
xor
push
mov
xchg
ret
inc
imul
add
repz
cmp
ret
add
mov
add
add
gs
clc
repnz
cld
jae
pusha
add
test
push
add
jae
pop
outsb
movsl
in
div
nop
push
mov
leave
nop
jmp
add
add
add
pop
nop
push
mov
leave
nop
jmp
or
add
sub
jae
add
add
pusha
add
nop
clc
repnz
cld
jae
or
mov
add
sar
call
jae
add
dec
push
mov
repnz
cld
jae
add
add
xchg
loope
loope
cld
out
aam
xor
nop
clc
repnz
cld
jae
pop
add
add
xchg
fucomip
and
incl
add
add
inc
into
xor
ds
icebp
push
push
mov
xchg
ret
xor
add
in
rclb
nop
jmp
push
adc
fadd
add
pop
nop
push
mov
leave
nop
jmp
xchg
cmp
pop
add
lods
and
mov
leave
nop
jmp
inc
add
sbb
add
nop
clc
repnz
cld
jae
add
dec
add
add
lods
roll
inc
and
clc
repnz
cld
jae
faddl
pusha
add
add
nop
clc
repnz
cld
jae
add
je
mov
nop
clc
repnz
cld
jae
cmp
add
add
pusha
cmpb
ret
ret
nop
clc
repnz
cld
jae
pop
add
pop
nop
add
add
fsubrs
jg
xor
add
push
add
lods
out
push
nop
push
mov
leave
nop
jmp
xor
dec
add
push
pop
push
nop
clc
repnz
cld
jae
add
movl
pusha
enter
mov
add
jae
add
add
jns
add
add
add
add
jg
pop
nop
push
mov
leave
nop
jmp
push
xchg
add
add
add
subb
push
mov
xchg
ret
dec
mov
add
ret
mov
push
mov
xchg
ret
incl
add
or
nop
cld
jae
add
push
add
fistpl
nop
clc
repnz
cld
jae
add
add
push
dec
imul
cld
jae
adc
add
lea
nop
push
mov
leave
nop
jmp
xchg
add
add
mull
clc
repnz
cld
jae
fdivs
xchg
cmc
xchg
xchg
ret
xchg
jg
add
xchg
add
loopne
or
push
mov
xchg
ret
nop
add
pop
mov
mov
push
mov
xchg
ret
or
inc
add
push
pop
mov
jns
nop
clc
repnz
cld
jae
add
add
add
int3
scas
mov
nop
push
mov
leave
nop
jmp
ds
cmp
push
inc
fistps
push
mov
leave
nop
jmp
xor
cmp
add
cmp
sbb
xchg
xchg
ret
iretw
iret
add
dec
add
mov
nop
clc
repnz
cld
jae
dec
inc
imul
call
cld
jae
add
dec
insb
add
xlat
dec
nop
clc
repnz
cld
jae
pop
adcl
repz
mov
xchg
ret
push
into
loope
add
add
sbb
mov
add
jae
add
add
nop
cld
jae
add
add
movl
add
dec
push
add
add
and
inc
into
cmp
push
mov
leave
nop
jmp
add
cmc
add
inc
faddl
jle
pop
xor
nop
push
mov
leave
nop
jmp
add
add
insl
popa
nop
clc
repnz
cld
jae
add
add
xchg
icebp
into
xor
xor
add
jae
add
add
sub
cmp
clc
repnz
cld
jae
add
add
add
mov
nop
clc
repnz
cld
jae
add
arpl
call
cld
jae
add
cmc
add
xchg
enter
push
nop
clc
repnz
cld
jae
rolb
mov
pop
and
and
sub
add
nop
jmp
or
pop
nop
clc
repnz
cld
jae
outsb
add
loope
fcoml
clc
repnz
cld
jae
pop
add
add
rolb
mov
add
add
jae
add
lods
fs
fcompl
mov
dec
add
push
xor
push
mov
add
rolb
add
std
and
rolb
repz
mov
xchg
inc
or
aaa
ss
and
adc
lods
add
mov
cli
enter
fs
mov
jl
adc
mov
jo
inc
ffree
popa
bound
cwtl
xor
mov
cmp
out
cmp
scas
fdivrl
and
inc
jl
in
add
pusha
loopne
imull
inc
pusha
xchg
cmp
fistps
mov
mov
test
rcll
xor
jno
loopne
ds
add
mov
test
in
inc
out
fidivl
push
jmp
mov
jmp
imul
jb
pushf
into
mov
arpl
jns
lret
add
inc
loopne
addb
push
lcall
loopne
mov
xor
add
rcrb
and
push
jo
inc
mov
pop
or
sar
lret
cmp
dec
pop
adc
addr16
loopne
addr16
mov
addb
imul
lcall
leave
inc
inc
loope
xchg
and
int3
lods
cmp
test
mov
jbe
pop
stos
loopne
jo
add
inc
and
inc
loopne
add
and
or
add
jb
in
sub
cmpb
aas
cmc
mov
loopne
je
push
pop
xchg
jmp
inc
lea
mov
inc
test
mov
ror
push
loopne
xchg
jle
popa
test
mov
inc
movsl
int
iret
sub
loopne
cmpsb
and
sbb
push
es
push
lock
add
sarl
xchg
adc
sbb
push
pop
jae
push
addb
stos
out
cmp
and
movsl
imul
int
mov
and
shrb
rolb
cmc
sahf
and
and
cmpb
mov
sbb
jo
lret
andb
mov
xor
outsb
out
stc
pop
mov
mov
inc
out
mov
inc
insb
test
and
jnp
lock
mov
and
lds
fdivrl
inc
das
mov
and
jl
dec
mov
pop
enter
rolb
inc
and
push
cmpsl
js
out
xchg
sbb
aad
sub
shrb
mov
add
or
mov
push
xchg
xchg
mov
negl
and
fistpl
ret
pushf
push
pushf
jp
add
mov
push
lds
mov
loopne
pushf
mov
mov
iretw
je
sbb
shl
mov
je
add
push
xor
adc
and
mov
sub
inc
faddl
push
lret
push
cmp
jnp
adc
call
popf
loopne
lea
adc
or
mov
fmull
mov
add
inc
mov
out
sub
js
lods
andb
filds
add
inc
gs
pop
das
bound
jecxz
pusha
pusha
jl
mov
push
and
and
lods
in
cmpsb
mov
aas
lods
mov
cmp
loope
cmp
jne
in
fcmovnu
lds
pop
ja
in
push
fadds
push
sbbl
and
inc
xor
inc
aad
dec
dec
xor
call
pushw
and
pusha
pusha
cmp
jmp
cld
sub
mov
pusha
pusha
adc
xchg
cwtl
into
push
lods
add
int3
test
aaa
cmp
leave
mov
or
bound
andb
stos
pusha
inc
dec
inc
inc
loopne,pn
mov
and
pusha
mov
sahf
push
xor
loope
pop
jmp
out
push
jecxz
idivb
cmp
pusha
rcr
pop
add
jo
shlb
cmp
stc
and
sti
push
les
add
rol
cmpsb
add
arpl
push
inc
and
sub
nop
imul
daa
sub
jbe
xchg
cld
hlt
cmc
sahf
or
pusha
cmp
sub
out
adc
mov
outsb
and
inc
mov
sar
insl
dec
scas
loopne
into
jae
pusha
ror
and
scas
inc
loopne
adc
aaa
mull
pusha
push
mov
lods
and
adc
jnp
popa
mov
mov
sbb
lcall
and
mov
loopne
leave
xlat
flds
lret
or
and
repnz
or
shr
pusha
mov
push
scas
mov
and
sbb
hlt
lods
jae
test
enter
push
addb
inc
pop
dec
call
mov
lods
pop
and
loopne
loopne
and
out
int
pusha
loopne
stc
outsb
mov
pop
jle
ss
and
bnd
and
sbb
xchg
and
and
subb
or
and
sub
sub
pusha
xor
cltd
movsb
add
inc
cli
adc
mov
scas
sub
and
sub
jnp
div
inc
add
mov
loopne
cmp
dec
rorl
mov
mov
sub
add
ss
arpl
scas
icebp
fidivrl
mov
jmp
test
cpuid
pusha
and
xor
xchg
lds
adc
ret
cmp
fnstcw
jae
rolb
jns
push
fld
cmpsl
popa
pop
inc
pop
jge
pop
aad
fisubrl
fsubl
andb
les
add
lods
mov
movsb
shlb
adc
cmp
jb,pt
add
inc
and
jnp
cmp
cld
push
add
push
pushf
popf
lods
and
lock
cli
push
add
jle
adc
js
mov
rolb
popa
pusha
and
add
rorl
mov
cmp
bound
dec
cmpsb
shl
dec
cmp
test
repnz
fisubrs
pop
ljmp
xchg
push
push
loopne
jns
pusha
push
mov
cmpsb
add
pop
add
inc
ss
pusha
xchg
gs
mov
sub
or
mov
xor
mov
push
loopne
mov
lods
pusha
loopne
inc
in
gs
pop
lds
jl
or
cmc
pop
dec
std
repz
mov
cmp
pop
sbb
pusha
loopne
outsb
jb
mov
popf
mov
mov
fadds
mov
mov
jno
adc
jp
mov
pusha
scas
inc
cmpb
push
pushf
cmp
inc
es
pusha
inc
in
shl
lods
and
xchg
arpl
sub
inc
fsubrs
jecxz
mov
inc
cwtl
popa
and
dec
shlb
lret
pop
and
add
mov
into
iret
fcompl
lret
cmp
dec
fsubrs
std
test
lods
cld
pop
ret
pusha
pusha
mov
mov
jo
sbb
mov
dec
out
mov
pop
cli
push
jae
mov
arpl
xor
and
icebp
mov
cmp
hlt
jbe
popf
and
pusha
movsb
mov
push
js
add
insl
xor
cld
loop
nop
adc
test
loopne
xchg
aaa
clc
xchg
xor
xlat
sar
pusha
and
mov
inc
and
pusha
repz
movsb
loopne
dec
pop
adc
repnz
outsl
lea
pusha
lea
push
mov
ds
cltd
stc
dec
mov
jg
add
test
loopne
shlb
pop
sbb
pop
daa
inc
in
loopne
dec
and
shr
sub
xor
aas
xchg
shl
clc
jo
rolb
mov
cmpl
imul
unpckhps
jno
lock
inc
xor
jg
push
repz
adc
addb
jns
inc
lret
or
jmp
icebp
fiadds
and
clc
lret
pusha
mov
fnstcw
pushf
or
and
adc
xchg
in
jl
jg
bound
rol
sub
pusha
and
mov
mov
addr16
or
test
cwtl
pushf
pop
ljmp
inc
push
mov
add
mov
mov
ja
loope
mov
fsts
inc
mov
loopne
nop
jno
lret
add
and
dec
jg
adc
inc
pusha
in
jg
inc
sub
add
cmp
mov
xchg
jmp
rolb
and
imul
mov
ljmp
popf
data16
cmp
addb
in
cmp
mov
inc
xchg
sub
aam
sbb
xchg
into
add
in
xor
mov
and
loop
mov
int
sahf
imul
sub
mov
mov
orl
and
rorb
mov
sbb
testl
inc
push
mov
rcrb
movq
inc
sbb
push
cmp
mov
outsb
int
loopne
adc
dec
inc
jmp
shlb
add
shlb
jb
mov
jnp
mov
fistl
inc
mov
loopne
js
test
and
je
push
ss
jo
pop
jg
dec
or
xchg
adc
add
loopne
enter
mov
inc
and
ds
mov
das
std
sub
inc
adc
idivb
loopne
cmp
shl
ds
xchg
and
loopne
lods
mov
lcall
cld
add
out
and
pinsrw
xchg
xchg
mov
xor
scas
mov
mov
fimuls
in
push
add
je
sub
inc
dec
push
inc
mov
dec
mov
les
outsl
and
shlb
inc
bound
das
xor
rcll
mov
mov
lea
or
push
aaa
sbb
cmp
dec
pusha
and
jp
mov
out
cmp
xchg
mov
and
jnp
adc
dec
repz
lock
inc
repnz
arpl
jae
adc
and
lock
cmp
add
pop
sti
jp
sbb
or
loopne
pop
int3
les
scas
inc
inc
lds
and
in
mov
sbb
xor
inc
pop
decb
test
andb
addb
mov
pop
jg
lahf
lcall
stc
lock
add
pop
popa
ljmp
pusha
icebp
enter
sub
adc
orl
mov
mulb
loopne
loop
jp
mov
cmp
pusha
mov
lock
or
andl
adc
inc
push
jne
fistpl
or
int3
dec
stos
push
push
add
ror
andb
nop
xor
mov
fnsave
mov
and
and
dec
sti
push
mov
loope
inc
pusha
sub
or
push
or
shl
test
popa
test
mov
or
add
jne
rolb
js
inc
xor
ret
dec
push
sub
movsb
mov
andb
loopne
xor
scas
imul
inc
imulb
and
xchg
sbb
lods
xchg
cmc
loopne
lret
cmpsb
loopne
adc
xchg
mov
andb
adcb
inc
mov
and
pusha
int
dec
pop
fwait
mov
mov
mov
shlb
jp
add
int
or
inc
push
sub
addr16
lret
adc
add
or
mov
ffreep
ljmp
inc
rcrb
sahf
push
aam
pop
mov
aam
ss
jno
jns
push
add
jae
adc
cmpsl
addr16
push
add
or
loopne
cmovl
pop
mov
mov
and
xchg
jnp
orl
loopne
adc
das
xor
pushf
out
pop
out
cli
and
pop
shl
mov
jle
stos
pusha
and
pusha
and
testb
cmp
xchg
lcall
add
cmp
insb
mov
jp
nop
jno
pop
lods
fwait
insl
ss
icebp
push
loopne
xchg
orl
push
and
jmp
jns
adc
xor
stos
dec
scas
jmp
pusha
mov
adc
into
or
loopne
inc
clc
mov
int3
cmpsl
andb
push
lock
movsl
sbb
loop
xchg
push
mov
sub
sahf
bound
lcall
sub
jp
loopne
jmp
sub
mov
adc
andb
add
cmp
mov
aas
jns
mov
and
add
adc
jne
jb
rolb
sbb
addr16
into
movsl
lcall
andb
rorl
cmp
xor
xor
and
shl
clc
jo
or
sub
push
mov
push
dec
and
jecxz
frstor
andb
xchg
inc
mov
add
ss
cmp
int
mov
and
fadd
imul
aaa
and
add
or
ja
loopne
or
and
mov
add
xor
push
std
xor
mov
fxch
sbb
adc
imul
aam
mov
js
adc
aam
scas
inc
and
mov
sarb
das
movsl
fnstcw
lcall
scas
sarb
sbbb
lea
hlt
inc
cwtl
femms
pusha
inc
or
enter
push
aam
mov
xchg
cmpsl
mov
and
rcrb
cmp
xchg
sti
nop
int
add
sbb
pusha
andb
popf
mov
fwait
sub
and
xchg
pusha
pop
int
adcl
and
cld
pop
sbb
sahf
add
aaa
mov
cmp
cmc
pop
icebp
fdivl
xor
mov
or
xchg
pop
push
fdiv
jecxz
mov
clc
jge
sbb
cmpsb
addb
jnp
outsl
out
inc
cs
out
out
aaa
fstps
popl
loopne
pop
mov
fwait
popf
stc
fnsave
or
mov
int3
popf
orl
add
add
mov
sub
repnz
sbb
pusha
cwtl
enter
or
add
mov
mov
outsl
add
ds
addl
inc
or
mov
and
push
lcall
push
pop
cmp
inc
loopne
jns
xchg
lods
andb
pusha
ret
inc
subb
stc
popf
adc
mov
xchg
mov
push
neg
data16
loopne
mov
sarb
cwtl
jne
mov
mov
inc
adc
stc
xor
outsb
fcoml
mov
pop
aad
inc
inc
inc
sub
jp
add
inc
andl
nop
ds
xlat
push
xlat
jp
andb
rclb
ss
adc
rorl
and
xchg
mov
subb
and
pop
addb
mov
and
ljmp
jle
and
lock
addb
or
loopne
mov
adc
pushl
int
nop
push
jge
in
mov
push
imul
pop
mov
mov
mov
inc
lcall
mov
cs
pusha
jmp
imul
andb
xchg
xchg
sbb
call
mov
inc
loopne
inc
add
clc
int
jno
arpl
xor
ja
dec
sbb
scas
fs
ret
sarb
fnstsw
inc
loopne
inc
inc
push
xchg
jl
inc
fs
mov
dec
or
nop
and
js
ret
icebp
fcmovnu
int3
movsl
call
xlat
inc
pop
add
add
movsb
inc
loopne
inc
ss
andb
movsl
cld
fadd
sarb
sbb
in
rcll
cld
bound
pusha
loopne
inc
lods
jb
jbe
je
pop
jge
mov
mov
mov
xchg
fldt
insl
jne
push
mov
rcrb
pop
stc
and
je
pop
mov
dec
rolb
pop
les
ds
leave
pop
jb
gs
shl
andb
out
sti
sub
and
aas
loope
adc
xchg
lcall
cmpsl
mov
push
fmull
out
hlt
mov
enter
mov
imul
pusha
inc
mov
pop
inc
aam
mov
mov
push
ret
mov
mov
loope
xchg
cli
mov
cmp
add
lods
loopne
push
das
dec
sbb
cmp
movl
sarl
jne
loopne
js
in
add
lret
int3
cltd
inc
lods
and
and
sbb
clc
lahf
mov
mov
cmp
or
inc
or
outsb
add
mov
insl
gs
push
cs
and
mov
fs
shlb
out
neg
pop
gs
pusha
mov
movsl
enter
imul
pusha
mov
rcrb
inc
and
rolb
xor
data16
and
jge
pop
inc
insb
or
shl
outsl
mov
addb
insb
test
add
cmp
pushl
imul
out
in
or
inc
inc
dec
mov
mov
daa
add
inc
stos
add
dec
mov
inc
aam
dec
iret
cmc
xchg
xchg
pop
out
dec
xchg
nop
push
pop
lods
divl
mov
stc
stos
mov
lahf
add
add
out
and
push
and
sarb
dec
sub
loopne
lahf
insb
out
ja
loop
pop
mov
xor
cltd
sarl
dec
xorl
mov
add
in
outsl
cmpsl
out
mov
or
or
xchg
pushf
sub
sarb
loopne
xchg
adc
jl
loopne
xor
or
out
sti
ljmp
inc
mov
daa
movsl
mov
mov
jo
add
loope
pop
mov
add
sbb
shlb
addb
nop
subl
pop
mov
pusha
sbbb
mov
jb
int3
push
add
inc
loopne
imul
add
add
add
call
imul
dec
pop
xor
in
push
mov
fwait
xchg
xchg
daa
stos
pusha
inc
sti
fldl2e
je
and
dec
pop
out
cs
inc
cmp
scas
fwait
lcall
jns
add
jmp
imul
mov
inc
andb
inc
xorb
jnp
xchg
pusha
adc
rolb
arpl
dec
dec
fldcw
mov
inc
lcall
cmp
mov
in
and
mov
pusha
add
mov
add
jge
add
mov
xor
in
and
lcall
pop
xchg
push
loopne
jmp
pop
mov
sbb
and
mov
and
add
pop
mov
adc
inc
push
mov
andb
pop
push
scas
mov
nop
loopne
and
lahf
outsl
movsb
inc
add
sub
add
mov
rcrb
mov
pop
push
and
loopne
loopne
test
cltd
add
xor
jo
mov
or
or
inc
insl
cwtl
cmp
jb
pusha
outsb
paddsw
data16
popa
enter
inc
loopne
adc
std
mov
cmp
mov
jecxz
aas
les
sbb
xor
fidivrl
inc
xor
call
popf
loopne
out
xor
shrb
scas
andb
add
je
into
mov
or
mov
jge
sti
cmc
das
xchg
cltd
cmc
sbb
into
jg
inc
and
aas
shlb
andb
das
inc
push
xchg
mov
adc
pusha
pusha
ficoms
out
jmp
sub
pop
xor
imul
pop
cli
lahf
mov
mov
stos
aad
lcall
rcr
lds
ja
roll
push
ja
and
add
shlb
xor
test
cmp
add
jmp
mov
pop
inc
cltd
lcall
inc
adc
xchg
jl
cmpsb
rolb
cmpsl
add
and
cwtl
push
or
mov
addb
fwait
ja
sub
or
clc
mov
and
push
xchg
lock
test
and
add
mov
mov
pusha
add
mov
pusha
ja
jecxz
and
xchg
xor
fcomp
push
mov
dec
lahf
or
inc
cwtl
pop
rol
in
test
and
dec
scas
mov
outsl
cmp
mov
jae
push
push
cmpsb
addb
test
inc
mov
sbbb
notl
xchg
jno
or
icebp
pop
push
movsb
rolb
sub
ficompl
in
inc
mov
addb
enter
add
shlb
cli
xor
and
dec
mov
xchg
adc
es
add
pusha
outsb
daa
mov
popf
sahf
pushf
mov
les
ret
shlb
incb
mov
js
add
add
inc
or
inc
xchg
jbe
ds
cmp
shll
pop
jge
push
mov
andb
std
ljmp
push
aad
in
push
ss
adc
fisubrs
xor
and
cld
loope
jne
xor
sub
shlb
bound
bnd
lahf
push
sbb
jno
fidivrs
pushl
decl
add
pop
imul
addb
arpl
iret
jp
fbld
push
loopne
mov
icebp
mov
clc
bound
xchg
add
or
mov
es
aam
js
das
adc
add
add
lock
sub
movsl
mov
es
inc
stos
shrl
insb
repnz
mov
insl
in
mov
rcll
and
bound
pop
nop
mov
je
dec
add
addb
mov
pusha
loopne
jb
push
mov
subb
shl
add
push
mov
sti
test
pusha
push
andb
stos
cli
sub
adcb
hlt
testb
cwtl
pop
nop
push
or
jne
loopne
push
out
in
int
inc
sahf
pushf
fwait
jo
addb
inc
pusha
shrl
push
adc
fsubrs
inc
add
add
jb
sbb
les
test
push
int3
movl
stc
cmp
or
test
mov
sti
ret
or
pop
mov
pusha
fdivs
andb
xchg
push
or
andb
mov
popf
jge
iret
scas
mov
mov
ja
jmp
xchg
cmc
push
mov
or
shl
aad
int3
push
add
adc
cwtl
or
and
rolb
pushf
fs
insb
mov
mov
mov
mov
pop
aas
es
repz
inc
xlat
jle
mov
inc
andb
test
pop
jnp
aas
stc
mov
dec
mov
gs
ds
es
loopne
jnp
lock
sub
mov
sub
in
cmp
or
mov
xchg
int
jmp
mov
add
js
pop
adc
das
jbe
pusha
cmp
mov
scas
aam
rcrb
movsl
cmpsb
shlb
jecxz
mov
in
mov
and
mov
test
test
pop
inc
push
das
andb
jnp
and
outsb
xor
dec
push
jl
xchg
jae
scas
mov
andb
mov
jmp
mov
out
adc
dec
and
loopne
js
pop
adc
loopne
fisubrs
xchg
ret
fnsave
xor
fsubrp
movsb
loopne
lock
mov
aaa
mov
and
inc
cmpb
inc
movsb
pusha
and
shl
add
movsb
shlb
sbb
sub
and
pop
push
add
rol
cmp
je
imul
cltd
jo
loopne
inc
pop
xor
clc
sub
fidivl
cli
stos
mov
mov
addb
lret
mov
or
imul
jle
push
imul
lea
lods
cmp
pusha
stos
and
imul
add
adcl
push
push
jle
pop
mov
outsl
mov
mov
mov
and
push
cli
pusha
addb
pop
mov
mov
std
mov
loope
inc
loopne
cmp
imul
mov
loopne
xor
inc
and
hlt
or
inc
std
add
mov
loopne
jmp
jle
sbb
jmp
repz
inc
test
inc
or
pusha
and
andb
lret
js
repz
std
push
mov
add
inc
inc
lret
jmp
push
shlb
and
test
inc
inc
hlt
fldt
das
fdivrl
jle
dec
dec
cs
and
dec
in
mov
push
mov
inc
call
outsb
mov
dec
pushl
testb
das
add
jg
lret
jge
in
cmp
xchg
mov
leave
jmp
xchg
mov
mov
push
andb
sbb
mov
xor
rorl
cmpsl
push
add
outsb
jp
add
adc
arpl
out
mov
sbb
cmpsb
rolb
add
rol
push
xor
mov
fildl
pusha
inc
or
jge
scas
stos
shlb
jge
jns
mov
push
dec
fld
pcmpeqb
pusha
inc
lock
jns
rol
orl
mov
out
daa
loop
aad
push
dec
ret
aam
dec
idivl
leave
jmp
dec
int
cmp
pop
in
xor
outsl
push
mov
pushf
or
xchg
jns
sub
cmpb
push
xlat
jne
and
clc
jns
mov
pusha
pusha
mov
das
or
pusha
insl
out
pushf
popf
cmp
arpl
andb
cs
rclb
aaa
mov
jp
and
mov
jb
cwtl
popf
jae
or
xor
mov
or
leave
sub
sub
and
pusha
sbb
jnp
imul
rol
call
jg
dec
mov
stc
je
call
mov
ja
stc
ret
add
and
addb
mov
mov
test
add
xchg
imul
push
mov
fldt
push
decb
mov
addb
mov
lods
pusha
and
sarb
and
fsubr
negl
movsb
mov
xlat
pusha
pop
mov
fwait
dec
std
movsl
mov
das
jbe
xor
ffreep
xchg
movsb
and
push
addb
push
cld
hlt
adc
das
movsb
addb
sub
jle
inc
loopne
push
jnp
xchg
data16
in
add
cli
add
pop
outsl
add
mov
inc
outsb
jne
xchg
pop
adc
loopne
jl
les
ljmp
ja
xchg
push
dec
testb
push
loopne
cmp
add
jne
add
and
lret
adc
or
loopne
cmpsb
inc
and
dec
adc
int
inc
and
addb
push
leave
dec
adc
shlb
mov
ds
and
sbbl
adcl
mov
shll
imul
push
cmp
incl
lcall
or
lret
inc
out
mov
xlat
clc
shlb
sub
rcr
mov
add
out
lods
pusha
loopne
mull
jo
xor
push
and
adc
scas
inc
loopne
cli
aam
clc
sbb
and
shlb
mov
shrb
add
dec
and
and
aaa
cwtl
add
push
in
mov
add
rcrb
aad
ficoml
pop
sahf
mov
in
cmpsl
add
mov
in
add
mov
addb
inc
pop
xchg
stos
push
shlb
mov
and
add
pop
mov
repz
loopne
jnp
ds
negb
add
enter
pusha
imul
dec
mov
nop
jg
stos
add
mov
cmp
fidivrs
addb
pop
and
jbe
cmpsb
loopne
rolb
loopne
add
imul
dec
jecxz
mov
fcmovb
mov
lock
nop
xchg
int3
push
dec
cmc
cmpsb
pusha
inc
icebp
int
xor
cmp
dec
add
mov
in
xchg
in
les
rolb
test
cmp
rep
shlb
pusha
inc
divb
and
mov
mov
xchg
scas
and
adc
sbb
jp
scas
iret
jmp
fsts
push
inc
and
fsubrp
adc
sbb
loopne
mov
outsl
imul
adc
inc
cltd
or
and
sti
mov
mov
add
add
repnz
mov
popf
pop
repz
mov
nop
lea
sahf
adc
add
push
xlat
push
mov
or
mov
and
jecxz
push
lahf
sarl
mov
pusha
addb
pusha
stos
pusha
inc
mov
jns
xor
mov
jnp
and
add
test
cmc
outsl
das
sti
pop
xor
sub
pop
in
mov
inc
aaa
pop
cmp
lret
aad
push
xlat
and
pusha
add
jge
mov
pusha
subb
adc
test
lods
fs
pop
cli
dec
sti
das
sbb
out
add
and
shlb
int
xchg
mov
add
jge
mov
out
lret
popa
imul
sbb
inc
and
leave
or
imul
lret
mov
aad
jno
add
cltd
push
mov
pop
cmpsl
mov
inc
mov
gs
sbb
jecxz
int3
es
mov
cmp
idivb
sub
gs
add
test
adc
mov
mov
scas
mov
mov
lcall
movsb
and
add
pop
add
pop
xor
add
mov
mov
dec
adc
rcrb
loopne
ljmp
jge
sahf
or
inc
cmp
jl
push
xchg
addb
push
inc
jmp
add
addb
inc
cmp
sub
gs
rcrl
inc
cwtl
adc
fs
dec
add
jl
and
outsb
xor
mov
cmpsb
and
lret
mov
mov
xlat
test
sbbb
rolb
repz
mov
scas
rolb
jl
mov
xlat
xchg
push
sbb
sbb
add
pusha
stc
xor
and
add
je
mov
mov
pusha
mov
adc
lods
mov
and
add
inc
push
sub
mov
mov
pusha
jecxz
mov
cld
xor
pop
lahf
jmp
xchg
jp
pop
aam
sahf
sbb
mov
loopne
shrb
sbb
push
and
pop
incb
test
dec
lahf
mov
stos
ja
js
push
orl
test
pusha
out
scas
inc
loopne
mov
out
inc
mov
mov
rol
daa
je
mov
out
push
mov
mov
shlb
sub
and
scas
inc
shlb
movsl
xchg
test
popa
fnsave
outsl
rolb
or
das
xorl
loopne
dec
out
pop
aas
dec
movsb
loopne
outsb
andb
inc
push
int
cltd
lcall
sbb
std
lcall
stc
in
divb
fwait
xor
pushf
jmp
fldl
add
xor
inc
shl
leave
push
mov
pop
cmpsl
inc
icebp
mov
fadds
push
xor
cmp
lods
pop
dec
mov
xlat
in
xor
mov
jge
push
adc
bound
add
sub
adc
xor
addb
sub
sub
and
in
xchg
mov
orb
or
mov
mov
andb
pop
loope
add
pop
add
mov
ljmp
hlt
shl
movsb
mov
dec
sbb
rcll
loopne
daa
adc
lock
lcall
jbe
lret
fimull
insl
call
out
jle
lcall
mov
jo
dec
gs
les
push
js
inc
jb
sub
inc
sub
loopne
fwait
pushf
mov
mov
test
cmp
xchg
sub
shlb
test
inc
rorb
push
and
shlb
std
adc
cld
mov
add
add
rol
daa
xchg
push
call
cmp
out
push
divl
fdivs
test
pop
clc
lcall
add
stos
loopne
push
sahf
arpl
in
das
fsubrp
pop
repnz
loopne
mov
jns
addb
cmpb
mov
shll
cmpsb
mov
orb
dec
add
mov
mov
je
push
loopne
mov
cmpsl
insl
or
je
cmc
jne
test
out
pop
insb
insb
adc
movntps
call
icebp
xchg
adc
and
clc
std
lret
add
xchg
inc
inc
dec
mov
sbb
mov
lods
mov
mov
test
mov
pusha
imul
andb
dec
mov
insl
mov
mov
shl
dec
pop
int3
mov
loopne
pop
cmpsl
test
jnp
popf
test
mov
orl
sub
xor
ja
test
sbb
hlt
andb
xchg
mov
cmpsb
loopne
pop
sub
mov
pushf
add
and
push
xchg
rolb
mov
dec
imul
jecxz
sub
insl
mov
cld
and
cmp
mov
jp
mov
rorl
lock
test
rorb
mov
push
cli
jg
shll
cmpsl
dec
jle
cmp
pushf
or
add
cltd
xchg
sbb
popf
ljmp
nop
push
xchg
mov
cli
stos
pop
ret
jbe
pusha
inc
mov
addr16
mov
add
add
loopne
inc
add
mov
or
xchg
ja
mov
aad
add
loope
pop
cmp
push
mov
xorb
rolb
in
test
add
stc
mov
mov
inc
inc
mov
sbb
fstpt
imul
loopne
ljmp
insb
ret
nopl
pop
enter
enter
rolb
repz
mov
insl
fwait
inc
cmp
and
xor
nop
mov
aad
and
mov
and
je
loope
inc
mov
adc
inc
jo
bnd
adc
fmull
faddl
cmp
shr
fsts
and
mov
jecxz
cwtl
sbb
loopne
inc
jle
push
fs
repnz
loopne
mov
jmp
mov
and
jne
push
xor
mov
mov
inc
js
fimull
jns
push
mov
adc
stc
adc
and
adc
sbb
aad
pop
inc
shrl
fisttpl
fwait
jo
sahf
scas
pop
addr16
add
jns
imul
in
cmp
sub
fistpl
sub
sbbb
inc
add
addr16
pusha
ds
cmpsb
pusha
mov
and
push
inc
repnz
mul
cs
and
sarb
inc
repz
call
int3
add
shl
adc
stc
sub
add
cmpb
stos
loopne
xchg
or
stc
mov
add
jae
mov
cmc
adc
mov
mov
mov
mov
add
sub
add
inc
pusha
jecxz
and
loopne
mov
addb
pop
dec
add
and
xor
insl
test
sti
ja
rorl
mov
iret
ss
sahf
fldt
add
sub
mov
and
shr
push
cmp
out
or
mov
mov
lcall
dec
lods
rolb
mov
mov
imul
daa
mov
pop
push
in
fdivr
adc
mov
add
addb
orl
aad
addb
mov
aas
adc
fstp
fs
pop
mov
aam
fldl
pop
hlt
and
pusha
jb
mov
imul
loop
ficomps
mov
mov
mov
or
jmp
loopne
sub
pusha
test
add
int
mov
pusha
loopne
sbb
cmc
imul
sbb
loopne
mov
imul
lret
and
shrb
and
cs
and
shlb
ret
mov
repnz
test
andb
push
jmpw
pop
or
and
adc
loopne
add
push
push
mull
add
pusha
push
shlb
loopne
jo
add
insb
cmp
jne
and
push
loopne
out
push
push
aaa
cmc
or
jmp
xor
mov
out
add
dec
in
negb
xor
fxch
or
rolb
inc
inc
sub
or
repnz
mov
adc
lods
lret
inc
std
xor
ret
pop
lahf
pop
aas
jnp
lret
outsl
add
and
mov
loope
in
out
popa
fcomps
adcb
mov
addr16
call
jbe
ret
cld
mov
js
pusha
subb
jl
mov
sbb
or
pop
lods
add
icebp
xor
daa
mov
rolb
inc
xchg
add
add
out
pushf
mov
pop
push
jmp
outsl
jbe
adc
and
pusha
test
and
jp
shlb
push
in
inc
adc
out
cwtl
hlt
lds
adc
loopne
int
xor
mov
hlt
in
scas
dec
lret
or
add
mov
fcomip
jae
inc
pusha
pop
test
outsl
pop
clc
in
out
inc
pop
sbb
dec
mov
mov
loopne
call
movsl
mov
loop
sbbl
rorb
mov
mov
inc
adcl
cmp
add
cmpsb
loopne
mov
xor
jl
pusha
add
dec
xchg
negb
cmp
jae
ss
lcall
inc
pusha
mov
call
jge
es
push
pop
xlat
addr16
jo
je
jge
xchg
push
add
pop
lods
fs
lock
and
out
addb
shlb
xchg
push
pop
sbb
lea
ret
pusha
pusha
push
ljmp
and
mov
gs
inc
stc
jl
and
arpl
mov
dec
scas
add
mov
cld
lea
cmp
out
dec
mov
mov
cmpsb
addb
clc
out
sbb
cmpsb
add
push
hlt
pop
ljmp
add
jno
mov
add
adc
out
lcall
push
inc
and
pusha
add
jo
xor
cld
add
mov
jnp
stos
add
push
ret
push
jno
call
mov
repnz
xchg
fistl
mov
add
and
and
loopne
or
fs
adc
pusha
andb
jns
ret
mov
jno
addr16
mov
add
and
or
and
and
rorb
pop
cmp
push
cwtl
movsl
adc
dec
addr16
pop
adc
andb
mov
out
sub
pusha
dec
and
loopne
ret
pop
js
hlt
out
mov
loopne
aam
inc
xor
adc
fwait
arpl
lock
dec
lret
aam
rclb
ds
mov
jp
sub
mov
adc
test
inc
and
add
jp
dec
xchg
scas
scas
jecxz
pop
inc
or
pop
push
mov
pop
loopne,pn
sahf
shl
test
add
jl
pop
emms
loop
rclb
mov
add
mov
add
out
dec
loope
or
and
lock
repnz
and
add
sub
inc
mov
rolb
lea
pusha
loopne
xchg
dec
mov
insl
xchg
adc
or
and
lcall
mov
addb
mov
outsl
roll
test
mov
shll
leave
cli
xchg
cmp
dec
lock
inc
loopne
cmp
xchg
add
mov
pusha
aad
je
daa
in
mov
ret
movsl
clc
and
rcrl
adc
test
subb
sbb
xchg
sarb
sarw
into
clc
cmpsb
loopne
ljmp
pusha
sti
xor
adc
sti
movsb
mov
jns
pusha
and
push
test
loopne
jmp
xor
jle
call
sbb
fldt
jbe
xchg
in
repz
xor
add
sub
sbb
rcrb
mov
aas
cmp
clc
mov
loopne
lret
xor
movsl
jg
cmc
fidivl
aas
outsl
and
jae
icebp
mov
xchg
push
jmp
loopne
dec
add
add
ret
xor
add
rolb
testl
inc
jl
jnp
add
add
adc
ret
test
mov
rolb
loope
and
and
mov
addr16
movsl
and
repnz
add
repz
imul
sahf
jo
and
out
lret
fidivrl
adc
jno
jge
cmp
mul
sub
pusha
shlb
push
repz
or
pop
xchg
andb
lret
cmp
and
leave
push
add
fsubr
sub
cmpb
mov
inc
mov
and
test
pusha
aaa
out
add
jns
cmp
add
leave
sahf
xor
inc
inc
arpl
aad
ret
lcall
cli
loop
les
cmp
scas
loopne
imul
repnz
cmpb
mov
inc
sub
and
jb
lahf
aad
pusha
pusha
mov
addr16
fisubrl
hlt
sbb
call
cmp
out
addb
xchg
sub
xchg
mov
loopne
lods
lcall
into
push
xchg
jns
sub
inc
jmp
into
pop
jne
push
mov
pusha
test
adc
dec
adc
jp
mov
rol
in
js
add
xlat
nop
inc
add
scas
cmpsb
rol
dec
mov
sub
jp
xchg
pusha
and
xchg
dec
mov
lods
and
jne
sub
js
dec
or
ljmp
push
mov
rorl
mov
in
sbb
fisubl
in
ja
dec
add
push
gs
rorl
pop
add
loopne
inc
sar
inc
sbb
or
rolb
inc
lods
and
push
ja
imul
add
stos
add
mov
push
xchg
inc
add
add
cmp
dec
mov
loopne
andb
mov
mov
outsl
aam
jno
push
jge
addb
and
inc
scas
add
cli
subl
loopne
icebp
mov
mov
add
add
and
movsl
mov
sub
int
mov
push
icebp
insl
mov
call
inc
mov
mov
pusha
add
jge
xor
inc
pop
fs
das
add
pusha
dec
in
iret
rorb
lcall
cmp
mov
add
mov
lock
sbb
inc
scas
js
popf
cwtl
gs
lret
mov
cmp
das
add
rorb
int
aaa
inc
int
mov
lea
clc
sub
cld
pop
pop
sbb
aas
and
cmp
inc
rorb
rcl
fimull
subb
jle
pop
sti
out
mov
fimuls
mov
loopne
mov
and
jnp
dec
push
pusha
inc
xchg
dec
xor
xchg
loopne
sub
dec
jle
jb
ds
arpl
jmp
pop
xchg
fucomip
or
pusha
add
test
addb
rcrb
shlb
inc
jb
pop
loopne
inc
lcall
ss
cmp
mov
and
in
sbb
xchg
mov
fcmovb
es
andb
add
roll
nop
test
cmp
cmp
push
stc
pop
jge
cmp
lds
pusha
or
inc
sbb
pop
sub
xchg
inc
sub
xchg
mov
push
pop
xchg
cld
repnz
push
andb
inc
inc
add
sub
pusha
mov
lcall
sub
adc
ja
add
inc
lea
cmp
aam
andb
mov
fadds
mov
cwtl
jns
mov
sub
cmp
xlat
hlt
insb
sbb
in
sbb
popa
out
xchg
cli
sbb
pop
je
bound
enter
xchg
pop
out
jns
add
or
mov
movsl
dec
popl
shlb
jb
adc
addb
cmp
xchg
mov
mov
sbb
popa
leave
vrcpss
jp
jge
adc
lret
rol
xor
daa
lret
push
jg
inc
or
mov
mov
dec
sti
sbb
ljmp
inc
mov
dec
push
inc
add
mov
cli
lea
mov
jb
jmp
mov
pop
mov
sbb
mov
inc
mov
sub
adc
xchg
lds
xlat
lods
mov
addb
loop
test
mov
adc
dec
into
cmp
rolb
jne
jge
ljmp
inc
lahf
mov
mov
or
xor
and
adc
pusha
add
shlb
lods
add
fmull
jge
push
ret
lds
rolb
aas
pop
sub
lods
in
loopne
add
and
mov
add
and
jecxz
lds
and
mov
loopne
sti
imul
mov
fildl
andb
and
and
or
imul
sti
pop
pop
divb
imul
push
shlb
addl
mov
mov
add
jmp
cs
inc
out
push
cmp
xor
add
mov
push
xor
pushf
xor
add
inc
jmp
fisubrs
aas
pop
stc
push
xchg
and
push
rolb
xlat
aad
adc
mov
loopne
shlb
cmpsb
inc
loopne
and
addb
leave
inc
or
pop
ret
lahf
xchg
pop
rclb
shlb
xchg
cmpl
adc
pushf
mov
and
add
add
xor
pusha
mov
ret
insb
inc
push
and
jbe
xlat
cwtl
icebp
notb
mov
jmp
loopne
mov
stc
pop
dec
repnz
cmp
sarb
push
dec
mov
loopne
sub
add
dec
sub
inc
lret
ds
mov
cmp
lods
shlb
rol
cltd
sbb
adc
add
or
movsb
shlb
sbb
push
pop
loop
imul
imul
jecxz
faddl
push
js
ss
mov
mov
mov
cltd
je
xor
mov
fstl
shufps
les
filds
pop
lods
fyl2x
jb
sti
scas
push
jl
xor
aaa
mov
orb
jmp
mov
mov
and
lods
loopne
xor
les
jns
test
ret
outsb
add
fcomp
push
jno
cmp
aam
addb
xchg
push
aam
mov
jmp
adc
fcompl
aad
xchg
adc
cmp
and
jmp
dec
fsub
hlt
adc
and
imul
jecxz
pop
ds
aam
test
mov
addb
xchg
add
and
jp
popf
cmpsl
arpl
adc
xor
add
daa
dec
enter
fucomip
pop
test
and
or
lea
inc
sub
lea
mov
loopne
fmull
fisttps
in
add
and
in
cld
cld
shl
xchg
inc
jnp
outsl
cmp
fisttpl
inc
add
jecxz
lret
jbe
mov
inc
scas
inc
loopne
jne
sub
xchg
pusha
inc
or
jge
fisubl
sbb
inc
rcr
jmp
fldcw
rolb
add
xchg
mov
inc
and
daa
cmp
xlat
mov
pop
pusha
mov
in
inc
cmc
shr
sub
sbb
xchg
push
rol
mov
cvtpi2ps
push
andb
int3
stc
inc
int3
adcl
out
push
loopne
or
leave
psubusw
aas
mov
pusha
rol
mov
pusha
inc
lods
shlb
push
scas
inc
cli
data16
inc
ret
jg
or
cmp
jnp
imul
pushl
outsb
mov
pop
push
inc
xorb
out
mov
mov
stos
inc
and
pusha
add
nop
xorl
les
add
lds
and
out
lods
addb
and
and
loopne
test
addr16
pusha
js
outsb
mov
or
std
mov
inc
call
das
enter
cwtl
push
mov
stc
push
jmp
mov
add
cwtl
ds
dec
dec
fldl
dec
mov
dec
mov
xor
lea
cmc
repz
lods
add
outsl
test
out
inc
stos
aad
mov
in
inc
call
into
xor
cmp
cmpb
adc
pop
xor
popf
cltd
shlb
pusha
add
rolb
addr16
dec
iret
popf
adc
std
cmp
fs
outsb
push
adc
mov
and
pusha
rcrb
out
sbb
loop
fcoms
jle
loopne
push
or
out
sub
pusha
cmp
mov
pop
jmp
add
pop
xchg
jle
repz
cmp
adc
mov
jge
dec
loope
std
js
dec
jle
call
xor
js
pop
and
loopne
jae,pt
dec
inc
cmp
mov
add
inc
pusha
sub
in
mov
mov
or
ja
mov
add
sahf
xor
pop
xor
lock
scas
ss
xchg
mov
outsl
lds
cmpsl
outsl
mov
ret
and
popa
movsl
ret
ja
loop
cmpsb
shlb
fldl
mov
and
dec
and
and
jno
mov
pusha
jge
sub
pusha
xor
add
lods
mov
aaa
scas
shlb
dec
stos
jl
rol
fdivrl
push
pushf
and
jge
inc
dec
pop
test
mov
cmp
sbb
mov
jae
loopne,pn
xchg
pusha
pusha
add
loopne
add
outsb
popf
pusha
sub
cli
lcall
dec
and
rclb
and
sub
in
ja
daa
fnstcw
clc
mov
adc
pop
in
std
repnz
aas
call
shrb
lods
shlb
addb
inc
ja
rol
dec
inc
and
iret
push
xchg
jns
mov
out
jae
inc
and
ret
dec
in
adc
rorb
outsb
test
mov
push
out
pop
xlat
iret
add
xor
or
andb
cmpsl
dec
and
inc
mov
cmc
jo
ss
cmpsb
add
adc
aaa
pop
outsl
cltd
scas
pusha
pusha
adc
pop
aas
test
add
sub
rol
or
ret
mov
sub
ja
ror
cld
psubb
pop
mov
pusha
mov
mov
into
rcrl
pop
cwtl
fiaddl
add
loopne
adc
jae
and
gs
inc
scas
imul
xor
addr16
jg
adc
push
jo
jbe
frstor
add
shlb
jl
jecxz
sbb
fcomp
pop
into
repnz
mov
loopne
cmc
adc
pop
push
stos
jne
xorl
inc
ljmp
int3
bound
inc
jne
popf
aaa
btr
loope
aas
pop
jl
push
cmpsl
mov
pop
mov
dec
clc
out
test
add
test
jmp
imul
inc
loopne
add
enter
add
rclb
addb
sub
adc
in
mov
shlb
mov
jne
imul
orl
rolb
rolb
loopne,pn
pop
ljmp
mov
adc
xchg
addb
lahf
mov
mov
in
inc
and
mov
mov
inc
pop
fstp
lcall
stos
inc
sbb
inc
addr16
popa
test
and
and
sub
into
in
add
mov
lret
insl
pop
outsb
js
enter
gs
and
and
mov
add
and
loopne
sbb
jb
jmp
push
enter
sarl
adc
aaa
push
lahf
xchg
popf
std
daa
fcmovnbe
js
daa
jae
js
xchg
xor
loopne
jge
fistpll
popa
sahf
das
xchg
add
imul
in
or
mov
and
mov
mov
mov
inc
rolb
rol
and
cmc
sub
inc
add
mov
andb
movsb
add
inc
pop
shll
inc
jno
repz
dec
ds
rolb
icebp
push
push
xor
shlb
mov
lret
mov
pop
popf
xlat
inc
push
shll
shrb
pop
sarb
mov
push
loopne
aaa
lahf
and
loopne
rcrl
cli
mov
pop
xor
scas
jno
inc
inc
loopne
std
pop
xchg
push
mov
shl
imul
push
je
dec
sub
push
loopne
xor
cmp
fisttps
imul
loopne
pcmpgtd
inc
mov
add
cmp
sub
dec
addr16
xchg
shll
or
add
loopne
mov
and
add
fnstenv
mov
push
andl
and
ficoml
icebp
stos
mov
andb
inc
mov
dec
repnz
cmpsl
adc
pop
inc
jb
pusha
and
out
fs
cmp
xchg
jl
sbb
jge
lahf
call
fists
pop
push
cli
popf
xor
pop
lahf
cld
in
push
or
mov
or
loopne
pusha
pusha
xor
and
or
popa
add
shl
xchg
push
push
jmp
mov
push
cmp
dec
frstor
roll
push
loopne
xchg
jmp
mov
mov
fdivrs
jl
mov
mov
mov
lods
and
xchg
and
mov
cmp
inc
dec
cmp
out
dec
dec
aaa
mov
vmovntps
mov
leave
push
mov
movsb
inc
sbb
cmp
mov
pop
rcl
lods
mull
lret
rorb
addb
jbe
sub
loopne
adc
jae
mov
and
lods
loopne
jnp
das
pop
jle
js
push
ss
pop
outsl
mov
inc
jl
sbb
cmpsb
add
cmc
xchg
nop
loope
rorl
scas
pusha
pusha
neg
cmp
into
popf
lods
and
add
pop
hlt
imul
jecxz
ja
inc
pushf
push
xchg
adc
es
sub
pop
pop
sbb
xchg
xlat
pop
popf
sub
pusha
pusha
inc
xor
mov
sti
ret
add
mov
jecxz
in
mov
shlb
cmpsl
rcrw
inc
sarl
pop
sbb
ficompl
and
pop
lds
popf
pushf
mov
jae
data16
and
rcrl
pushf
aad
mov
sub
lods
outsb
jmp
add
je
jge
and
jge
rorl
cmpsb
inc
and
addb
inc
push
push
pop
cld
xchg
push
arpl
addb
inc
mov
add
stos
pop
popa
mov
and
jmp
jp
push
sahf
fcoms
mov
mov
bound
jae
dec
cmpsb
pusha
and
mov
js
out
or
leave
sbb
mov
orl
mov
push
stos
pusha
and
ret
fidivs
pop
stos
and
insl
push
jp
sbb
push
ljmp
lods
mov
cmpb
imul
out
fwait
mov
sarb
inc
pushl
xchg
or
cmp
insb
lret
data16
aad
pop
lds
shr
dec
mov
testl
in
and
shlb
aad
jecxz
jmp
push
insb
scas
lahf
xchg
imul
mov
jle
inc
rolb
icebp
sbb
mov
xchg
inc
adc
in
push
and
divl
and
xorb
insb
jae
cltd
aas
push
and
bound
imul
and
repz
xchg
pop
fnstsw
mov
xorb
inc
std
and
andb
and
or
imul
std
in
ret
int
dec
xchg
shll
xchg
mov
std
sub
lea
push
pop
push
loop
mov
sbb
sub
movsb
loopne
cmp
and
and
sbb
or
xchg
lret
je
add
and
and
sbb
inc
mov
add
mov
loope
pop
into
in
mov
andb
mov
loopne
popa
cmpsl
xchg
push
cmp
cli
push
add
loop
or
mov
sub
mov
mov
rcr
push
loopne
dec
xchg
lcall
loopne
je
out
das
inc
sub
lret
jmp
jp
and
xor
cmc
lea
sbb
xchg
inc
inc
rclb
or
loopne
pop
xor
mov
repz
lods
jge
mov
pusha
and
clc
stos
pop
xchg
or
lret
push
pusha
mov
inc
dec
adc
fstpl
loopne
scas
dec
lds
mov
cmp
loopne,pn
fdivl
and
add
rcr
imulb
stos
mov
dec
mov
add
sbb
and
pusha
mov
js
dec
sbb
jne
mov
addr16
frstor
pop
lea
jmp
das
repnz
movsb
mov
ljmp
add
test
pusha
shl
push
jmp
adc
jne
cmpsl
mov
int
gs
or
inc
dec
lea
mov
das
sub
subb
popf
incl
pop
in
lret
mov
stos
and
lds
pop
jae
pusha
aaa
cs
and
data16
fcmovne
pop
fwait
mov
jecxz
push
mov
inc
and
inc
dec
mov
in
loopne
mov
sbb
je
nop
loop
adc
pusha
pusha
jl
push
sbb
mov
mov
adc
scas
loopne
loop
inc
stos
test
clc
inc
addb
mov
mov
test
and
jns
jne
mov
es
andb
sbb
cmp
inc
push
and
fcoml
mov
shl
cwtl
adc
loopne
and
movsl
cmp
mov
inc
loopne
aaa
repz
mov
push
lds
add
iret
xchg
mov
shrb
pusha
in
xchg
and
jmp
mov
addb
and
hlt
inc
les
add
in
data16
test
adc
rcll
loop
out
std
push
cmp
and
mov
popa
into
std
jae
mov
mov
mov
and
loopne
repnz
out
es
mov
loopne
mov
pusha
adc
jecxz
and
shlb
addb
add
jne
ja
sbb
aaa
xor
dec
mov
xchg
mov
loop
out
mov
repnz
mov
in
je
and
cli
enter
jge
mov
rolb
add
sub
nop
adc
mov
jge
mov
pop
mov
jmp
and
repz
loopne
add
sarl
aas
andb
pushf
je
or
add
push
mov
pusha
aad
and
fistpll
andb
pop
sbb
inc
pop
dec
add
pushf
ret
sub
imul
pusha
int
hlt
xor
jp
dec
inc
lea
mov
inc
xor
mov
pusha
fmul
in
bound
outsl
lret
out
and
adc
jl
data16
iret
mov
mov
and
mov
je
adcl
xchg
push
fwait
add
pusha
stc
cmovp
push
pop
aas
fwait
popf
jecxz
xor
inc
sbb
xchg
test
loopne
loopne
mov
bound
arpl
add
xchg
popa
clc
push
sbb
mov
stos
add
push
mov
and
loopne
adc
push
loopne
and
and
shlb
stos
and
inc
sbb
nop
flds
mov
loop
addr16
pop
fsubs
inc
andb
fwait
sarl
mov
xchg
sahf
inc
xlat
and
repz
add
cmp
pusha
and
push
scas
add
cltd
adc
js
enter
or
out
jae
stos
add
cmc
orl
ja
fidivrl
mov
adc
ret
pop
loop
inc
inc
in
outsb
gs
xor
mov
test
sbbb
mov
push
jo
xor
fistpl
and
mov
push
mov
inc
sarb
sbb
mov
daa
ss
mov
shl
ds
ja
xor
inc
add
dec
jmp
mov
mov
add
add
loopne,pn
sub
je
outsb
inc
mov
cmp
bound
mov
shlb
add
adc
mov
loopne
mov
add
loopne
push
push
push
fidivl
scas
loopne
cmc
mov
pusha
into
dec
inc
pop
int
mov
iret
in
sbb
fwait
test
data16
loopne
cwtl
out
sbb
nop
lret
fdivl
ror
xchg
loopne
mov
rolb
jno
add
addb
push
idiv
cld
jne
pop
popf
pop
ds
mov
inc
repnz
in
fucomi
cmpsb
and
push
shlb
cmpsb
add
pop
fs
rolb
fwait
in
and
loopne
mov
sbb
mov
ret
aaa
jo
add
adc
mov
call
push
mov
pusha
rclb
pop
mov
mov
out
jo
jl
jno
in
cwtl
xor
xor
pop
cmp
iret
jge
shl
outsl
mov
sbb
mov
shlb
dec
cmp
mov
rolb
add
jne
mov
out
and
xor
adc
mov
negl
inc
mov
int3
xchg
lahf
or
loopne
add
or
ret
ja
mov
loopne
std
ficomps
fldt
or
rcr
sub
and
and
xorl
pop
into
cli
jnp
jl
movsb
rolb
push
dec
jp
jo
xor
lahf
call
sub
push
call
mov
mov
inc
lret
fldl2t
mov
inc
shl
repnz
loopne
scas
adc
xlat
xchg
dec
lahf
pusha
aad
shlb
loopne
sbb
in
call
mov
cmp
jb
loopne
dec
rcrb
inc
loop
lods
rol
cmpsb
mov
loope
and
cmp
add
aam
arpl
lds
mov
fs
jmp
and
mov
popa
sub
pusha
pusha
test
inc
movsl
mov
mov
push
daa
cmp
sar
push
push
add
and
mov
push
rolb
sahf
adc
xchg
fcoml
push
inc
and
and
xchg
mov
pop
repnz
mov
add
mov
in
sbb
enter
dec
and
pop
sti
add
pop
push
jbe
pop
movsb
pusha
subb
std
xchg
cmc
jmp
ret
sub
and
pop
pop
cmpsl
xchg
jp
int
xor
out
sbb
shlb
mov
add
out
mov
rclb
mov
mov
mov
loopne
das
dec
jae
subl
sbb
pop
stos
std
xchg
outsb
dec
mov
loopne
in
clc
fstpt
xlat
insl
inc
add
add
inc
daa
lea
xchg
add
dec
das
lds
push
mov
notl
pop
int3
mov
sub
stos
test
mov
imul
in
pop
out
pop
dec
iret
sub
mov
lock
sarl
stc
daa
mov
sarb
popf
dec
sub
add
fstpl
icebp
das
es
mov
stc
leave
fs
sbbl
lahf
and
pusha
lods
test
inc
sub
adc
cmp
das
jl
add
mov
or
push
push
dec
mov
popa
jmp
lds
cmp
int
je
push
jo
icebp
pop
iret
mov
add
aaa
mov
mov
mov
int
test
loopne
push
xchg
and
dec
aas
shlb
xlat
repz
roll
daa
push
adc
test
push
adc
add
outsb
xchg
xor
pusha
loopne
xor
scas
andb
sbb
push
addb
in
fsubl
cld
dec
mov
aam
insl
in
test
loopne
aas
push
mov
inc
sbb
add
movsl
or
subb
inc
mov
sti
add
push
pop
insl
pop
pop
push
test
pusha
sbb
in
pop
or
mov
cmp
icebp
mov
mov
add
adc
xlat
pop
mov
push
inc
jge
mov
and
pusha
and
sub
shlb
mov
mov
and
cmp
hlt
pusha
cmp
push
push
dec
adc
int
addb
sahf
shll
fsubrs
and
inc
mov
dec
mov
push
loop
xor
cs
loopne
out
pop
data16
push
inc
xor
or
push
inc
dec
mull
add
add
lret
and
dec
fldl
inc
inc
aas
cmpsb
mov
rol
out
add
sbb
dec
jge
cmp
out
xor
add
pop
xor
repz
inc
popf
jbe
stc
out
test
and
mov
movsl
pop
mov
mov
mov
cwtl
and
jb
enter
adc
sbb
mov
out
sbb
rcll
lods
mov
mov
inc
add
pusha
testb
and
and
push
and
inc
mov
push
pop
clc
hlt
ljmp
pusha
and
pop
leave
sbb
or
mov
adc
lods
pusha
add
pop
jl
adc
ja
ja,pt
stos
ret
pop
xchg
add
sub
std
add
and
sti
sbb
cmp
cmpsl
aas
jo
xor
xchg
xor
push
dec
cmp
mov
and
inc
imul
cltd
mov
dec
scas
mov
inc
inc
lds
inc
xchg
add
add
add
dec
mov
jo
adcl
xchg
jns
pop
int3
cmp
and
inc
mov
mov
negl
push
imul
pusha
loopne
iret
cltd
mov
sarb
add
pusha
mov
push
mov
shlb
pop
outsl
push
push
stos
into
mov
inc
int
in
addb
push
pusha
rorb
push
sbb
lret
test
and
add
xchg
pop
cmc
roll
mov
in
sub
loopne
inc
sbb
andb
dec
pop
mov
rolb
aam
in
cmp
addb
orb
jg
lcall
mov
scas
iret
and
pusha
andb
xlat
xor
xlat
testl
xchg
add
arpl
sub
loope
imul
in
or
mov
dec
adc
clc
dec
sbb
testl
mov
ret
ftst
cmpsb
inc
loopne
dec
xchg
das
scas
fcmove
arpl
shlb
adc
xlat
sub
xchg
mov
andb
xchg
inc
ror
sbb
aad
or
inc
sbb
fs
lea
push
mov
insl
jecxz
push
push
jnp
xchg
ljmp
cmpsl
sub
sbb
add
cltd
lods
shlb
add
mov
and
and
pusha
icebp
xor
sti
add
mov
scas
addb
repnz
inc
scas
imul
jge
shlb
jp
sub
pusha
sbb
pusha
lcall
subl
hlt
cmp
fisttps
xor
sub
notb
or
push
popf
sub
inc
iret
or
mov
jae
sub
add
pop
xor
imul
lods
and
jl
mov
roll
sarb
gs
and
addb
fs
adc
dec
sub
lahf
idivl
xor
ss
cli
aad
addb
xchg
mov
lret
xor
xor
add
icebp
mov
mov
sbb
addb
add
or
sbbb
das
imul
inc
dec
mov
add
andb
stos
fwait
mov
leave
jge
sahf
sub
add
pusha
fiaddl
and
call
cmpb
xlat
clc
inc
arpl
rcr
adc
and
movsl
stos
call
jns
fidivs
inc
mov
pop
xchg
sbb
jno
in
dec
out
or
in
jg
mov
adc
rorl
lcall
fldcw
filds
sub
add
inc
ror
push
sysret
pop
es
loopne
ljmp
push
scas
and
loopne
jne
loopne
sub
mov
mov
xchg
mov
add
inc
andb
jb
push
add
xchg
loopne
inc
loopne
cmpsl
push
dec
cmp
je
ss
adc
push
xor
sub
popf
lret
mov
rol
pop
sbb
xchg
fcoml
ret
add
sbb
push
cmp
xchg
jecxz
cmpsl
mov
leave
add
movsb
andb
sbb
movsl
pop
aas
stos
add
ror
xchg
mov
or
pusha
jle
and
incb
and
add
jg
lds
pusha
pusha
mov
loopne
test
xor
lods
mov
sub
add
adc
or
shlb
pop
mov
shlb
dec
adc
es
loopne
inc
xor
and
pusha
loopne
icebp
ficompl
xor
pop
sbb
and
add
fiadds
xor
cli
icebp
push
add
jb
mov
frstpm(287
aam
andb
jns
shlb
dec
push
ficoms
mov
mov
icebp
in
or
cmp
loopne
lahf
xchg
pushf
fstl
bound
stos
jnp
fs
adc
and
ret
insb
xchg
jne
inc
push
fsubrp
daa
in
jmp
daa
incl
mov
and
jnp
add
sbbb
add
rol
fildll
repz
and
leave
movsb
pusha
pusha
out
jbe
and
cmp
or
imul
pop
inc
push
pusha
and
adcb
icebp
adc
inc
shlb
push
dec
xor
scas
add
push
shlb
mov
pusha
pusha
divl
in
loopne
push
add
and
push
aas
and
ja
adc
repz
mov
in
lahf
add
add
push
inc
lahf
test
add
and
cmp
push
jmp
mov
push
ljmpw
pop
push
cmc
out
cmc
cmp
xchg
add
sub
ret
mov
sarb
pop
loopne,pn
adc
in
adc
inc
and
mov
arpl
lock
cli
bswap
or
fwait
je
mov
xchg
sahf
lcall
inc
sub
mov
outsl
fwait
add
call
in
sub
rcrb
enter
flds
xchg
mov
inc
movsb
inc
mov
and
loop
push
mov
xor
and
popa
fidivs
push
pop
xchg
insb
pop
aas
scas
mov
mov
jnp
jecxz
enter
rolb
mov
fmull
add
xlat
aaa
xor
jl
lret
dec
into
lock
push
fsubrl
int
mov
dec
inc
jbe
mov
js
or
je
aas
sub
scas
cmpl
lock
add
push
mov
mov
enter
or
dec
pop
int3
xchg
pusha
adc
sub
addb
sti
test
nop
pop
dec
sbb
xchg
push
movsl
add
and
push
xchg
mov
xchg
rorb
ret
addb
mov
fsub
daa
cmp
outsb
mov
mov
mov
pop
std
test
enter
test
test
andb
imul
add
mov
stos
mov
and
mov
rcrl
push
lret
dec
aaa
addr16
pop
in
pop
pop
cmp
sbb
outsl
popf
jb
inc
ljmp
push
add
mov
mov
dec
stos
addb
xchg
sub
mov
mov
and
ss
inc
pop
shr
add
int
pusha
mov
loop
jg
loopne
inc
jbe
loopne
cmpsl
pop
xchg
cltd
inc
push
pop
popf
andb
push
jg
leave
push
mov
shl
cmp
shl
xlat
pop
ljmp
movhps
aaa
jp
fmuls
cwtl
and
test
pusha
mov
mov
incl
andb
jge
sbb
bound
push
push
fisubrl
mov
and
pop
into
out
and
fs
inc
andb
stos
or
lods
fnstenv
shlb
inc
and
mov
ljmp
pop
lret
lret
sarb
jg
mov
out
gs
adcb
add
and
adc
add
addb
int3
or
lahf
test
fidivrs
sbb
in
in
enter
pop
xchg
mov
insb
loope
lds
sbb
loopne
rclb
inc
push
add
mov
mov
jae,pt
sub
aas
popf
sbb
add
shlb
mov
inc
pop
in
aas
xchg
xor
and
inc
imul
in
mov
addb
inc
mov
push
inc
sarb
jge
mov
sub
pop
adc
leave
aaa
insb
jo
loope
enter
fcoml
cmp
bound
sarb
pusha
cmp
lret
add
negb
mov
test
scas
ds
out
test
push
out
sbb
sbb
int
je
cmp
fnstcw
inc
sub
jle
leave
add
dec
mov
mov
pusha
cltd
jmp
inc
call
sub
cwtl
xor
xorb
jmp
push
xchg
lods
mov
aaa
sub
or
outsl
pop
fwait
repnz
cs
loopne
lcall
mov
xchg
loopne
or
mov
es
clc
outsl
fdiv
pop
repz
mov
mov
stos
cmpsb
loopne
push
loopne
add
add
push
add
and
movsb
inc
rorb
insl
cmpsl
aaa
mov
mov
sub
inc
shll
sub
add
mov
mov
cmpsl
imul
pusha
mov
sahf
add
add
mov
or
and
dec
dec
mov
movsl
adc
fimull
pop
divb
push
mov
loopne
push
mov
pusha
mov
lock
dec
mov
lret
and
out
js
shl
pop
push
rolb
mov
inc
fildll
add
aas
jns
and
loopne
addb
rcrl
daa
dec
out
adc
adc
rcr
and
mov
lret
sub
add
ret
add
add
inc
bnd
andb
or
mov
push
lret
jb
mov
repz
push
jnp
jo
aaa
pop
push
cmp
jecxz
arpl
push
dec
pop
add
rol
outsb
shll
push
or
sbb
loope
cmp
filds
and
push
bound
pusha
rcrb
aam
adc
inc
out
mov
push
lea
push
cwtl
inc
in
add
adc
xor
jmp
add
roll
mov
or
mov
sbb
mov
jmp
sbb
add
sub
and
mov
mov
add
add
xlat
pop
ljmp
lret
stc
les
idivb
mov
xchg
sti
imul
mov
or
mov
in
into
daa
push
icebp
xchg
inc
dec
inc
jle
push
sub
loopne
jg
daa
push
jecxz
int
mov
shll
mov
inc
jecxz
mov
mov
dec
and
mov
pusha
daa
adc
pusha
into
das
push
pop
adc
ret
or
mov
hlt
add
add
pop
dec
xor
mov
xchg
xchg
mov
loopne
call
push
rol
xchg
decl
outsl
imul
pusha
sbb
test
sbb
xchg
lds
jl
or
mov
loopne
pop
and
and
dec
iret
jb
lds
shrb
mov
jbe
sbb
or
xorb
cmp
and
ja
stos
push
addr16
in
mov
aaa
mov
pusha
loopne
mov
and
xchg
loopne
xor
and
in
inc
shl
and
and
lret
and
shlb
and
xor
mul
pop
jnp
ds
add
mov
jecxz
mov
mov
mov
mov
push
dec
in
mov
shrb
add
addb
shrb
mov
and
repnz
mov
xlat
jmp
pop
fbld
or
rcrb
inc
and
pusha
add
mov
sbb
mov
cmp
out
ret
stos
mov
jecxz
mov
mov
mov
pop
int
push
xor
test
xor
test
out
and
cmpb
sub
mov
xor
cmp
add
fldcw
xchg
push
mov
out
arpl
loopne
inc
clc
pop
dec
inc
movl
dec
cmp
sbb
in
cli
repnz
movsl
popa
cmp
cmp
repnz
xchg
xor
or
inc
jmp
bound
or
sbb
icebp
mov
das
ss
and
mov
ret
loope
xor
and
mov
add
dec
xor
sub
iret
ret
mov
inc
ljmp
cmp
xor
icebp
repnz
cmp
call
into
sbb
sub
and
mov
jl
push
jmp
stos
pusha
add
inc
mov
mov
das
or
aaa
jge
rolb
pushf
ret
mov
push
andb
pop
cmpsl
dec
push
or
loop
or
add
add
imul
daa
inc
into
aam
fistl
push
mov
inc
lret
inc
mov
fadds
push
movsb
mov
xchg
jae
xchg
add
mov
addb
add
rcrl
push
sahf
adc
mov
pusha
addb
mov
movsb
rol
loop
push
sub
mov
mov
add
sbb
jg
int
dec
and
shlb
loopne
xchg
adc
andb
mov
inc
inc
mov
xor
push
cli
data16
lea
pusha
into
aaa
jno
mov
lods
loopne
jbe
cltd
ljmp
std
mov
and
adc
pop
mov
pusha
popa
inc
stc
cmp
push
sbb
gs
adc
mov
dec
mov
movsl
test
mov
mov
test
mov
into
mov
mov
pop
ja
mov
inc
sbb
dec
sti
and
and
inc
cmp
pop
fsub
mov
nop
clc
scas
pop
mov
cmc
xchg
pop
andb
xchg
scas
mov
cltd
int
notl
mov
aas
cmpsl
imul
ljmp
xchg
jno
xchg
cmpsb
rolb
call
push
cmp
gs
and
or
and
mov
stos
inc
loopne
xor
test
loopne
test
xor
dec
lock
mov
notl
hlt
cmp
and
sbb
movsl
loop
and
outsl
pop
inc
cmp
pop
mov
inc
das
aam
dec
jl
repnz
out
out
outsb
xchg
addb
add
pop
out
adc
jmp
scas
add
push
pusha
mov
sbb
add
adcb
into
mov
mov
and
jne
lcall
mov
add
push
pusha
loopne
aas
xlat
lret
lock
mov
add
adc
pusha
cli
inc
stos
loopne
push
push
add
inc
mov
ljmp
shlb
sub
pusha
inc
sbb
jno
pop
stos
add
adc
call
js
enter
inc
cmp
push
adc
cmpb
add
int
sbb
xor
and
push
loopne
outsb
pop
fidivrl
mov
inc
cmpsl
ret
insl
dec
aam
inc
sub
jecxz
and
inc
test
and
adc
scas
add
sti
cmpsb
pusha
mov
sarl
add
xchg
adc
xchg
mov
clc
or
andb
fcoml
test
enter
cmc
call
nop
ss
loope
jae
mov
push
test
mov
inc
clc
adc
adc
add
add
xor
scas
add
out
and
aas
pop
icebp
xchg
int3
add
dec
mov
rolb
movzbl
mov
gs
scas
pusha
inc
mov
add
loopne
cmp
notb
xchg
jle
push
push
addb
mov
in
cmp
add
inc
insl
mov
pusha
sub
mov
scas
lds
cld
jb
popf
ja
xlat
fwait
rclb
dec
dec
idivl
fstps
aas
add
js
sub
rcr
insl
ret
shl
jbe
push
lcall
loopne
insl
std
xor
mov
pop
xchg
inc
push
adc
cmp
outsl
mov
loope
jb
xor
imul
les
js
jg
and
aam
mov
and
xchg
fbstp
testl
scas
andb
popa
pop
aaa
insb
lret
ds
in
push
nop
xchg
fdivs
fdivl
cli
push
add
and
mov
inc
sar
cld
add
in
jb
xor
andb
arpl
fidivrl
mov
jg
xchg
add
and
xchg
aas
idivl
rol
xchg
rcl
inc
push
loop
int3
inc
shlb
or
loopne
push
inc
loopne
out
js
mov
js
mov
in
and
pusha
xchg
push
add
inc
pop
rcrb
cs
pusha
mov
and
sti
aad
into
xor
andb
sub
and
scas
mov
int3
rolb
pusha
xor
je
repz
add
stc
pop
sbb
mov
adcb
inc
repz
shl
rorb
loopne
pop
into
jae
cwtl
lahf
jge
nop
int
pop
push
bound
cmc
incl
xlat
scas
loopne
or
add
dec
inc
adc
aam
cld
mov
mov
ds
int
insb
xor
js
or
loopne
sbb
andb
shlb
mov
cmp
xor
xor
mov
sub
loopne
fs
sbb
mov
rcl
add
jb
call
loopne
xor
inc
repz
pop
and
mov
xchg
xchg
cmp
je
inc
pusha
popf
pusha
fstpt
popf
sub
pusha
clc
push
inc
cmp
cmp
jmp
mov
loopne,pn
jl
mov
sub
mov
mulb
inc
rcrb
sbbb
and
and
cmp
adc
pop
push
andb
sub
xchg
shlb
xchg
xchg
dec
pop
test
repnz
adc
mov
in
loopne
jp
inc
mov
push
mov
mov
shlb
mov
rcrb
xchg
dec
std
loop
addr16
jo
adc
and
inc
add
cmp
mov
and
mov
imul
jo
arpl
or
or
add
and
pusha
fisttps
pusha
loopne
jle
ret
addb
cmpsb
shl
pushf
arpl
sub
mov
test
pop
sbb
in
mov
cmp
mov
xor
ljmp
cmp
inc
les
loopne
and
cmp
sti
rclb
sahf
in
in
ja
pushf
cmpsl
or
stc
mov
clc
push
xor
ljmp
rcrb
daa
hlt
or
push
pop
push
loope
or
andb
shl
int3
xchg
lds
shlb
outsb
xchg
hlt
push
push
adc
push
in
fcomps
insl
and
in
fnsave
and
fisttps
pop
fstpl
pushf
inc
adc
mov
and
mov
test
cmpb
pop
mov
jmp
popf
imul
mov
inc
xchg
xchg
add
jne
inc
add
inc
cmp
pushf
aad
and
xchg
inc
call
pop
clc
jp
dec
in
mov
bound
lahf
ds
push
pusha
inc
jo
push
cmpsl
mov
test
push
stos
and
lock
shlb
inc
add
inc
add
arpl
add
loopne
sarb
mov
xlat
sbb
add
ror
mov
addl
and
mov
adc
ljmp
aaa
mov
push
cmpsb
andb
jne
mov
mov
fsts
jb
mov
sti
hlt
jbe
xchg
xor
unpckhps
fnstsw
dec
aas
jecxz
jb
mov
jne
pop
mov
out
jg
cmc
sub
inc
dec
std
pop
mov
add
addl
and
nop
and
rcll
inc
add
inc
nop
pop
js
mov
lock
mov
add
and
lcall
int
xor
mov
cs
and
std
inc
stc
mov
mov
mov
inc
es
mov
pusha
cs
add
aam
sub
stos
lea
loopne,pn
xor
or
inc
add
push
and
jae
loopne
mov
xchg
inc
sti
adc
push
jmp
sub
mov
pop
push
cmpsb
and
mov
xor
inc
inc
pop
scas
inc
mov
lock
pusha
inc
incl
rcl
add
mov
jnp
movsl
and
push
pusha
add
rcrb
cltd
fmulp
sub
cmp
andb
add
stc
rorb
mov
adcb
inc
mov
outsl
and
popf
xlat
inc
and
add
pop
mov
pusha
or
aas
adc
stc
loopne
and
inc
mov
orb
das
sub
lock
push
or
add
stc
shll
jge
filds
addb
xchg
loopne
in
sub
in
sbb
cli
int
xchg
ret
jne
lahf
mov
mov
clc
fwait
pop
and
subb
jne
push
cmp
mov
cmp
loop
out
xchg
int3
lret
rcrl
aaa
imul
jns
imul
mov
cmpsl
dec
cwtl
in
insl
jmp
sar
cli
mov
xorb
add
jl
lea
push
xchg
xor
ret
loopne
in
xor
push
daa
test
rolb
sbbb
cltd
push
sbb
and
imul
stos
shlb
loopne,pn
rorb
inc
call
push
les
rorl
sahf
stos
fildll
addb
xchg
pop
in
test
lret
cmpsb
shlb
dec
cmc
xchg
pop
xchg
addb
mov
cmpsl
push
mov
mov
add
dec
test
xchg
add
sub
mov
jb
jge
xchg
mov
imul
lds
add
xor
mov
jecxz
mov
jns
mov
movsl
lret
adc
sbb
test
adc
add
pusha
add
and
das
insb
cmp
xchg
test
cmpl
mov
sbb
add
in
jo
inc
mov
and
lock
loopne
stc
addl
and
and
xchg
aam
push
mov
add
pop
stos
add
and
stos
jp
in
jbe
aaa
mov
pusha
mov
pusha
stos
loopne
or
cmp
in
and
test
cmp
jecxz
mov
fidivl
or
pusha
test
pusha
mov
push
and
xchg
test
inc
rolb
pop
loope
aaa
inc
adc
shlb
adc
push
pop
jo
nop
jl
mov
je
jns
aam
idivb
push
in
xor
andb
mov
cmc
sbb
js
push
inc
mov
stc
imul
xchg
add
inc
push
sbb
push
xchg
enter
sbb
mov
inc
add
and
mov
loopne
addb
push
pushf
cmp
icebp
pop
dec
adc
sti
cmc
loope
test
mov
mov
lcall
aam
insl
add
mov
inc
rcrb
scas
xchg
dec
mov
test
sbb
test
sbbb
stos
add
bound
inc
mov
test
pusha
mov
pushf
jno
sub
inc
je
pusha
sub
cld
push
sarl
testb
jl
inc
addb
fs
daa
imull
jge
sbb
jecxz
les
adc
or
add
inc
adc
cwtl
fs
cmovo
add
xor
addb
loopne
icebp
das
or
fildll
inc
rcrb
mov
and
mov
cmpsl
js
xor
shl
std
scas
popa
dec
loopne
xor
pop
jae
aam
mov
fs
pop
in
xor
and
pusha
outsl
sbb
das
adc
addr16
sbb
je
ds
cmpsl
andb
and
mov
push
add
push
xor
mov
mov
or
mov
icebp
imul
loop
loopne
gs
push
add
enter
pusha
mov
loopne
inc
xor
addb
pusha
push
mov
mov
cmp
loopne
push
mov
out
cmp
cmc
inc
decb
mov
inc
lahf
fcomps
rorl
fs
pop
sub
loopne
lret
or
andb
addb
subb
or
negb
rcrl
mov
rol
popa
movsl
add
mov
push
outsb
xor
add
and
add
loopne
dec
or
shlb
mov
ds
int
mov
push
push
jno
loopne
cltd
mov
add
add
jae
xchg
movsl
push
mov
xor
loopne
pop
and
repz
add
loopne
cld
mov
mov
sub
pusha
adcb
mov
add
adc
xor
pusha
loopne
pop
ret
testl
mov
push
pop
xor
mov
push
mov
sub
int3
inc
inc
xlat
sbb
in
or
and
dec
nop
rorl
add
lods
push
mov
and
inc
jne
pop
popl
and
shlb
xchg
mov
loopne
and
and
sti
mov
popa
push
jnp
repz
testl
jb
fcoms
jle
mov
ss
pop
ret
fwait
in
mov
nop
inc
push
add
rclb
andb
movb
pusha
int3
ss
push
push
fs
lea
xor
inc
pusha
insl
test
sar
xchg
std
addl
mov
or
mov
loope
sub
popf
and
inc
sbb
out
xlat
sti
dec
lcall
inc
andb
repz
mov
out
loope
addb
mov
mov
and
inc
xor
xchg
pop
push
es
addb
pusha
xchg
enter
add
cmp
pop
fsubr
push
add
mov
loopne
mov
jecxz
xor
pop
stos
mov
daa
mov
mov
cmc
je
jl
pushf
jo
xchg
mov
daa
and
fimull
shl
lods
and
sub
and
xchg
mov
mov
rolb
mov
jno
and
andb
adc
mov
add
clc
adc
out
pop
bound
andb
and
popf
cmpsb
mov
or
add
mov
pusha
and
push
and
popa
lcall
mov
xor
cs
inc
outsl
jb
push
mov
xor
pop
loopne
loope
inc
lahf
jmp
fwait
pusha
inc
ret
sub
insb
mov
xlat
and
mov
insb
rorl
xorb
repz
add
add
loopne
pop
xor
leave
cmp
mov
vmovmskpd
call
daa
lahf
mov
imul
and
sbb
xor
scas
jno
out
push
fwait
ret
add
mov
mov
jno
add
dec
mov
push
and
cmpb
adc
inc
pop
lea
loopne
dec
xor
pop
push
push
mov
inc
rol
jns
cmp
je
mov
pusha
addb
mov
pusha
rolb
clc
cmp
pop
mov
inc
add
stc
push
and
sbb
and
sbb
dec
pop
in
int
xor
add
add
adc
xchg
shr
rclb
inc
xor
lahf
stos
push
loop
xchg
inc
icebp
and
pusha
lret
and
data16
adc
and
and
add
mov
xor
jl
push
scas
shl
or
push
and
sti
and
pusha
or
or
inc
dec
and
loopne
sbb
ret
ss
iret
cmp
loopne
addr16
idivl
dec
pop
or
push
popf
shlb
fbld
xchg
mov
xor
ret
loope
pop
pushf
push
outsb
mov
outsb
dec
pop
or
mov
lds
cmp
dec
insl
pop
sbb
xor
jnp
pop
and
icebp
dec
mov
popa
adc
jno
loope
sbb
mov
aad
addb
mov
lahf
mov
mov
and
jo
jp
jno
pop
pop
jmp
shlb
jl
pop
dec
pushf
lds
pushf
adc
rolb
mov
addb
arpl
ljmp
loop
xchg
dec
or
sysexit
loope
mov
push
daa
dec
mov
clc
mov
push
inc
rcl
shl
cli
repz
mov
push
popa
lods
add
sahf
int3
pop
enter
cmp
mov
lcall
filds
inc
add
je
shll
test
imul
aas
jecxz
adc
sbb
sbbb
dec
inc
arpl
cmp
andb
inc
rolb
into
jg
pushf
adc
cmp
mov
out
in
push
and
out
xor
pop
std
or
mov
lods
fstpl
sbb
repz
outsb
das
cmp
mov
mov
loope
pop
or
popa
adcl
loopne
testb
rolb
and
cmp
add
mov
and
in
and
pusha
cmp
cmp
add
pusha
rol
pop
sarb
and
and
mov
jg
dec
jecxz
jbe
cmc
xor
inc
jmp
mov
mov
imul
ja
imul
and
push
inc
inc
pusha
mov
stc
mov
daa
xchg
mov
loop
jne
mov
and
aas
pop
das
addl
gs
adc
mov
mov
ror
pop
mov
out
and
shr
ficomps
inc
mov
pop
add
xor
int3
test
add
jecxz
xor
add
sahf
add
dec
test
loopne
xchg
inc
aas
inc
push
js
and
cwtl
xor
adc
sub
mov
jns
gs
push
bnd
insl
push
repnz
xchg
lods
and
xchg
mov
add
pushf
push
test
cmp
jl
rolb
inc
addb
popa
dec
in
addb
and
and
cmp
daa
mov
mov
sahf
push
cmp
jecxz
ljmp
sbb
or
incl
mov
pusha
add
and
inc
inc
xor
sub
mov
jo
jmp
mov
pop
mov
mov
inc
xchg
cltd
ljmp
andb
jle
or
and
mov
lret
jmp
lock
inc
xchg
cmp
insl
dec
pusha
gs
push
andb
loopne
sbb
push
scas
lret
add
lods
movsl
repz
pusha
pusha
push
jg
inc
dec
jns
mov
push
and
adc
loopne
data16
fcmove
sbb
in
fcoml
pop
lahf
icebp
dec
inc
mov
add
xchg
fnsave
pusha
and
mov
pusha
push
dec
and
inc
pusha
enter
pushf
insb
ret
add
jge
xchg
outsl
push
xchg
dec
jnp
sub
and
adc
cmpsl
fcmovne
mov
loopne
sarb
in
loope
add
mov
jno
push
xchg
pop
sti
mov
and
xchg
arpl
ljmp
cmp
sub
inc
jno
inc
sub
xor
mov
pusha
inc
in
sahf
mov
lcall
mov
imul
in
mov
xchg
push
call
out
mov
adc
xchg
fwait
or
add
mov
pop
mov
mov
mov
in
push
repnz
sti
mov
rcl
scas
std
push
andb
or
push
fcoms
inc
mov
inc
rclb
and
data16
mov
gs
sub
insl
mov
and
and
lods
add
pop
jne
fstpl
mov
pop
jae
add
ljmp
add
inc
es
cmp
stc
in
jecxz
and
leave
push
sub
mov
jb
sarb
pop
mov
inc
movsl
pop
bound
addb
ljmp
add
pop
mov
and
pusha
adcb
loopne
mov
inc
loopne
add
sbb
flds
dec
dec
daa
add
std
mov
loopne
mov
leave
or
cltd
jp
mov
add
inc
mov
jge
sbb
lret
dec
aam
pusha
add
ror
xchg
cmp
mov
jae
push
int3
repnz
or
in
lock
test
rcrb
test
jno
and
repz
fldcw
pusha
loopne
test
shlb
cmp
shlb
sbb
push
inc
loopne
inc
jecxz
lret
dec
mov
pop
rclb
cmp
lea
cmpsl
jbe
dec
pop
jmp
aad
xchg
pop
fists
xor
pop
fst
sahf
inc
xor
cmp
ss
cmp
mov
and
dec
jo
pop
out
mov
xlat
insb
adc
xchg
xchg
addr16
std
out
xor
pushf
sub
pusha
repnz
sub
fwait
insl
mov
andb
mov
jl
in
ds
sub
rclb
es
push
rolb
iret
sub
pusha
pop
mov
imull
push
mov
cmp
and
mov
int
and
aam
dec
dec
cmp
adc
pusha
add
inc
sub
add
mov
ficoms
mov
mov
stc
xchg
lcall
jb
adc
fwait
arpl
stos
add
xchg
or
in
pushf
cmc
sbb
xchg
jne
mov
pusha
add
dec
pop
xchg
shlb
clc
push
xor
ret
pop
mov
fs
sbbb
ret
inc
leave
push
loope
inc
les
andb
rolb
adc
in
sbb
movsl
movsb
andb
mov
mov
adc
xor
pusha
add
fstps
div
jg
hlt
out
jns
lock
mov
or
inc
cmp
pop
or
mov
lods
cmp
or
mov
fwait
pop
ja
jbe
pusha
loopne
decb
inc
add
mov
mov
inc
loopne
data16
fisubl
in
sbb
and
andb
jno
jmp
leave
fs
jge
pushf
ret
sub
pusha
repnz
fidivs
hlt
mov
shrl
add
jmp
mov
sbbl
in
cltd
xor
shl
dec
jp
aad
pusha
rclb
call
xchg
cwtl
test
flds
stos
bound
aas
pushf
cmpsb
shlb
jle
xchg
xsavec
and
inc
aam
cld
fidivs
sbb
repnz
xchg
and
xchg
sbb
shl
push
or
outsb
inc
decl
scas
add
push
outsb
add
push
pop
cmpsb
add
inc
jge
fsubrs
push
mov
mov
loopne
sbb
and
roll
push
mov
sbb
sti
rolb
add
push
insl
aad
and
cli
cmpsb
mov
cmp
push
cmp
cmpsl
mov
add
cmp
and
pusha
xchg
addb
shl
pop
mov
fsts
push
pusha
rorb
add
adc
rcrb
sub
pusha
outsl
mov
inc
rolb
pop
sub
xchg
test
call
sbb
andb
test
add
jns
mov
add
cmc
cltd
pop
lret
xchg
jmp
push
insl
pusha
jbe
into
and
cld
xor
push
psllq
lret
push
inc
inc
xor
int3
popa
mov
sbb
inc
insl
and
mov
dec
sbb
aam
sti
xchg
loopne
mov
rcrl
push
cmc
jp
jge
xor
test
and
sbb
xchg
jns
cmp
cmpsl
dec
adc
mov
mov
push
push
and
mov
mov
push
in
outsl
mov
and
sub
sub
mov
es
mov
or
xor
mov
fdivrp
dec
jne
and
jo
divl
mov
ds
into
out
leave
xorl
outsb
fisttpll
add
daa
popa
enter
bound
movsl
xorl
add
add
cmc
adc
xchg
xor
inc
inc
inc
pop
cwtl
out
negb
andb
mov
xor
loopne
aam
ret
js
andb
jno
mov
rolb
jb
mov
push
mov
add
xor
int
inc
test
jmp
mov
inc
cmp
inc
add
shrb
icebp
cwtl
fisttpll
mov
andb
dec
leave
push
loopne
xchg
sbb
cmp
sub
imul
pusha
bound
das
cs
inc
out
shrl
flds
mov
mov
int3
adc
out
shlb
cld
xchg
in
lahf
test
andb
sub
aad
add
pop
fstpl
mov
int
xor
scas
xchg
pusha
or
push
or
popf
mov
lock
and
xor
rolb
mov
xchg
sti
xor
das
dec
in
add
cmp
stos
mov
xor
mov
add
mov
add
add
imul
test
and
add
in
std
jmp
sub
scas
pusha
inc
push
or
mov
mov
fsubs
dec
cmp
cmp
jmp
ficompl
inc
dec
push
enter
mov
andb
adc
or
push
jle
add
cmp
cli
sbb
andb
daa
dec
stc
pushf
xchg
ret
pusha
arpl
test
mov
mov
inc
pusha
jmp
add
pusha
or
and
push
add
ret
sbb
aas
inc
je
pusha
pusha
pop
pop
ljmp
ror
sub
shlb
sbb
cli
icebp
or
or
jo
insb
and
aam
mov
leave
mov
jle
pop
fsincos
fmull
inc
add
repnz
mov
insb
sub
pop
adc
mov
jno
add
mov
adcb
loopne
rcrl
loopne
push
pusha
shlb
jbe
inc
insb
xor
inc
and
pop
cmpsb
and
sbb
pop
neg
xor
jno
nop
mov
add
mov
mov
stc
shlb
sub
fstpl
sub
and
jb
imul
sete
and
cld
jp
inc
cmp
pop
xor
stos
loopne
sarb
and
lcall
add
xchg
andb
inc
in
pusha
inc
ret
xchg
and
mov
inc
orb
andb
in
inc
loopne
mov
cwtl
cmc
cmp
into
xchg
push
sti
lahf
mov
jne
sahf
fmul
cld
js
jmp
xchg
popa
lods
cmpsb
add
mov
fldenv
mov
or
pusha
and
mov
je
icebp
popa
mov
cmpsb
and
add
jnp
mov
mov
cwtl
fadds
rol
lods
add
xchg
or
sbb
dec
lahf
push
adc
mov
in
ficomps
pop
or
inc
push
nop
out
mov
dec
mov
dec
xchg
jl
dec
in
cmpsl
filds
divl
xchg
daa
aas
inc
mov
aam
and
fstl
add
dec
add
pusha
test
and
ds
loopne
fs
repz
loopne
addb
addb
and
loopne
dec
mov
mov
imul
ret
xor
andb
stos
hlt
pop
or
pop
ficoml
jge
dec
js
mov
xor
jecxz
pop
mov
mov
fwait
mov
push
and
jb
shlb
arpl
xchg
test
sarb
mov
cmp
lods
push
jae
add
fisubs
addb
dec
ljmp
pusha
rolb
or
cmpsb
loopne
fimuls
scas
adc
out
imul
imul
xchg
push
stos
addb
jo
mov
cld
data16
mov
lods
sub
jbe
out
cld
mov
sub
mov
test
push
or
mov
lods
shl
push
add
sub
rclb
mov
vmread
addb
shrb
insb
ror
mov
add
les
xchg
lods
mov
and
mov
mov
mov
mov
xor
sbb
xor
ret
sarb
icebp
fldt
addb
mov
xor
insb
mov
dec
cltd
cmp
test
fs
cld
adc
cltd
inc
jbe
shlb
pop
shl
stos
inc
sarb
push
lods
scas
lock
insb
daa
mov
xor
and
rcrb
sahf
shll
inc
and
add
or
add
push
gs
xchg
sub
pusha
pushf
jl
addb
sub
icebp
mov
fdivs
repz
cmp
add
insl
and
mov
jb
sbb
push
pop
mov
pop
jnp
andb
je
push
stc
test
cmpb
jbe
leave
sbb
fwait
adc
inc
sub
and
mov
inc
adc
lock
add
add
jl
std
jl
jg
add
mov
mov
push
sub
addb
or
test
jp
movsb
loopne
test
xchg
loopne
aad
arpl
andb
shlb
pusha
cld
andb
dec
movsl
xchg
add
sub
shrb
fidivl
add
add
sbb
cmp
shlb
jp
jge
lcall
addb
inc
add
push
lods
add
pop
stos
loopne
or
movsl
jecxz
fs
or
lcall
inc
and
mov
xchg
rcl
jno
movsl
stos
mov
rorl
ret
loop
sbb
pusha
dec
call
shlb
add
add
hlt
xchg
and
fwait
pop
ret
jne
rcrl
xor
repnz
inc
inc
mov
loope
mov
icebp
fdivrs
dec
xor
or
loopne
push
add
icebp
sarl
call
data16
dec
push
test
add
int
addb
add
inc
xchg
out
inc
inc
scas
addb
fildl
mov
test
and
loopne
fsubrs
mov
mov
adc
fisubs
test
int3
popf
test
jg
sub
hlt
lods
and
and
pusha
loopne
mov
loopne
insb
ds
je
addb
mov
sub
std
ds
lret
xchg
push
fldl2t
pushf
mov
jge
pop
aaa
xlat
adc
inc
rclb
cmp
loopne
into
jnp
add
shlb
aad
and
or
inc
jle
xchg
stc
and
leave
mov
lods
and
add
loopne
xchg
pop
not
jb
cmovno
jge
inc
mov
ret
iret
inc
dec
pushf
inc
ror
fs
push
sbb
andl
pusha
or
inc
dec
fidivl
sahf
mov
fcmove
stc
jbe
popa
cmpsl
repz
pop
or
std
and
mov
adcl
rol
jnp
cwtl
lock
ffree
decb
andb
stos
testl
loopne
push
aad
sub
add
int
cmpsl
nop
nop
fistpll
sbb
ret
add
and
inc
push
jmp
andb
pop
add
repnz
rep
xlat
inc
in
adc
jl
test
pop
rcrl
add
mov
scas
pusha
inc
mov
and
loopne
pop
mov
repz
push
pop
int3
adc
pusha
mov
fidivs
or
jg
push
or
psrlw
cmp
pusha
and
gs
push
dec
add
mov
mov
xor
inc
sbb
loopne
hlt
push
pusha
pusha
cmp
cmp
shrd
inc
cltd
in
pop
inc
xchg
inc
adc
test
dec
fwait
cmp
and
lds
loopne
scas
push
data16
jb
and
mov
adcb
cmpsl
das
enter
addb
xor
in
jns
ret
jo
test
or
sarb
inc
pusha
push
rorl
ljmp
pop
and
imul
pop
mov
inc
out
mov
enter
bound
jge
jne
inc
or
jmp
adc
add
cwtl
mov
pusha
adc
and
push
sub
add
adc
dec
xor
out
mov
popl
dec
pop
cmc
ja
adc
std
mov
mov
pusha
jle
push
cltd
jnp
shll
fcompl
mov
push
in
jg
sahf
xor
rcrl
cmp
cmp
and
xor
dec
sbb
imul
xor
and
xchg
les
es
shr
imul
stc
sbb
cltd
sbb
rorb
jecxz
adcl
inc
imul
pusha
add
cld
and
lahf
push
inc
inc
andb
aad
in
dec
inc
xchg
mov
into
or
push
and
sbb
push
adc
pusha
mov
loopne
hlt
arpl
pop
shrl
inc
pushf
into
lods
inc
rol
clc
jmp
out
jecxz
clc
or
insb
jne
jnp
sub
add
fimull
mov
add
xchg
add
rclb
pusha
subb
rol
in
pushf
aad
loopne
or
inc
lret
jae
dec
out
call
fistps
imul
lret
mov
dec
lock
add
scas
loopne
mov
sbb
sahf
imull
shlb
fdivrl
and
mov
jmp
movsl
js
and
or
scas
dec
mov
subb
and
xchg
mov
jge
inc
addb
ljmp
loopne
mov
shl
mov
shl
mov
jbe
inc
jge
push
inc
pop
jns
outsl
dec
je
jg
add
in
call
stos
jp
orl
mov
push
mov
iret
or
xor
sarb
lret
lods
or
adc
jecxz
pusha
and
andb
xchg
rcrl
mov
mov
push
cmpsb
rolb
sti
mov
test
mov
loopne
mov
jns,pt
pop
push
add
dec
rolb
mov
cmpsl
or
out
pop
dec
daa
push
push
fisubrs
inc
test
inc
jle
or
and
xor
jno
sub
jmp
and
mov
and
cwtl
cmp
cmc
movl
popf
pop
xor
clc
data16
mov
sub
loopne
pop
loopne
stos
addb
and
movsb
and
or
and
inc
and
stc
ret
sbb
shlb
popf
arpl
inc
pop
les
inc
pusha
mov
inc
add
or
jnp
mov
xor
push
pop
jo
movsl
add
lret
and
pop
and
shlb
mov
mulb
addb
mov
lret
inc
and
icebp
add
les
leave
repz
cli
rolb
popf
push
mov
xorl
pop
sahf
hlt
mov
cmpsl
cmc
jb
xchg
inc
fucomi
pop
data16
push
in
fsts
xor
addb
add
flds
in
shlb
ja
adc
lahf
outsl
push
test
add
sbb
mov
dec
in
push
lcall
shl
scas
add
mov
test
hlt
out
cmp
and
pop
stc
ss
and
addb
ljmp
and
push
dec
loope
sub
pusha
pusha
incl
sbb
and
sbbb
mov
incb
insl
adc
sbb
jge
int
push
inc
jecxz
addb
mov
and
mov
inc
roll
pusha
jp
loopne
leave
sub
jmp
adc
jae
jb
and
in
cs
std
and
xchg
lods
add
add
hlt
lahf
shll
testb
mov
adcb
dec
add
mov
mov
sarb
jmp
jg
inc
add
add
int
and
fstp
shrb
jo
add
dec
scas
add
and
mov
loopne
and
ss
and
mov
das
inc
mov
popf
movsb
rolb
push
mov
aas
fadd
int
xchg
mov
mov
outsb
sub
cmpsl
xchg
imul
mov
push
leave
xor
movsb
mov
push
scas
inc
jp
xchg
push
mov
out
jle
je
enter
lods
arpl
pusha
mov
add
xchg
push
xor
or
pop
loop
in
test
repnz
add
and
dec
inc
jns
add
sbb
icebp
sti
push
xor
shlb
cmp
je
imul
out
or
dec
negl
jno
dec
dec
repz
movsb
mov
mov
repz
loopne
push
roll
mov
mov
xor
add
testl
cmc
xlat
outsl
and
sub
and
and
and
pop
xchg
adc
xchg
xchg
xor
inc
iret
add
bound
lahf
mov
enter
mov
scas
push
loopne
push
lds
jno
loopne
push
mov
push
cli
shlb
pop
push
pop
in
jg
sub
xchg
sbb
addb
mov
fdivrp
dec
mov
in
mov
loopne
mov
mov
aaa
mov
mov
loopne
dec
int
xchg
cmpsb
rolb
mov
sub
mov
inc
push
popa
add
shlb
fwait
or
inc
sbb
lods
fldcw
xor
pop
aas
leave
stos
loopne
popf
ljmp
cld
inc
ret
mov
or
std
mov
jne
lds
mov
xchg
cmpsb
add
pop
mov
faddl
test
loopne
icebp
xor
test
jae
jno
mov
aas
xchg
rolb
loopne
or
or
push
dec
arpl
or
xor
test
mov
mov
pusha
aaa
aad
loopne
cmp
and
cwtl
and
lahf
int
imul
jns
push
pop
addl
mov
in
fadd
loop
xlat
fs
cmp
mov
sbbb
shlb
stos
fistpll
fldl
aas
nopl
inc
jns
adc
mov
outsb
mov
daa
cmp
test
dec
lahf
mov
clc
dec
mov
aaa
inc
mov
cmp
jb
add
cmp
out
inc
mov
mov
and
or
lea
xchg
hlt
cmpl
data16
and
clc
fiadds
pop
cmpsl
xor
mov
and
pusha
xchg
decl
andb
cmp
xlat
scas
xor
pop
push
lcall
lea
outsl
push
push
lods
shl
mov
or
pop
mov
mov
pusha
and
pop
aaa
inc
pop
fs
andb
and
in
mov
and
sub
fimull
mov
pop
mov
stos
test
inc
inc
sbb
inc
and
push
popf
scas
inc
insb
movsl
adc
shlb
iret
mov
cmc
ljmp
xchg
sub
and
or
loope
mov
sarb
add
into
push
sbb
daa
jmp
cmpsb
loopne
dec
mov
dec
xor
movsb
pusha
pusha
lret
rcl
call
scas
in
sti
addr16
ret
mulb
mov
sbb
popf
push
mov
pop
adc
or
mov
jns
xor
and
loopne
dec
xchg
aas
xor
pop
inc
cwtl
fwait
or
rcl
stc
cmp
cmp
outsb
pop
frstor
and
mov
adc
xchg
mov
and
shll
and
mov
pop
pusha
es
mov
loopne
test
xlat
push
arpl
push
fdivrl
cmp
and
mov
and
lock
cmp
push
add
stos
rol
dec
test
mov
dec
in
pop
push
les
mov
pusha
sbbb
test
inc
in
adc
rcrl
sbb
inc
sarb
pop
mov
cld
cmp
pop
outsb
ss
incb
dec
subl
testl
loopne
inc
xchg
sub
sbb
loopne
shl
stos
loopne
rsqrtps
addb
jmp
leave
push
out
jno
cmp
jecxz
sbb
jl
push
popa
adc
push
lods
add
sub
std
scas
notl
test
sub
addb
mov
shr
jns
cltd
test
dec
dec
mov
lods
pusha
add
dec
outsl
lret
repz
jnp
out
pusha
shl
icebp
addr16
popf
insb
pop
mov
jo
xchg
lods
and
mov
add
repnz
pusha
inc
add
and
jg
add
add
inc
inc
mov
call
and
loop
aas
lock
shl
mov
mov
jb
sub
mov
sbb
jns
push
lock
das
push
repz
inc
push
sub
repnz
jl
dec
dec
imul
mov
mov
lods
sti
sub
pusha
push
bound
stos
dec
lret
xchg
je
mov
stos
mov
les
mov
sar
push
jne
sbb
into
pop
sbb
push
mov
or
mov
mov
mov
popf
sub
shll
dec
ljmp
xlat
ss
inc
pop
push
inc
loopne
cmp
push
ror
mov
in
sbb
out
mov
mov
inc
xchg
movsl
push
and
dec
lret
test
loopne
cmp
das
lcall
xor
pusha
and
cmp
std
imul
mov
mov
mov
out
loopne
fcmovbe
and
or
arpl
sub
inc
or
mov
jg
daa
mov
mov
and
xchg
addr16
rcl
and
in
int
scas
and
cmp
cli
lcall
mov
test
push
lods
shlb
pop
push
add
das
cltd
jle
pop
push
jbe
mov
pop
mov
sub
sbb
sbb
imulb
sbb
ret
cmpsl
cs
push
sub
add
dec
push
mov
pop
pop
shrb
add
xchg
push
pop
in
cmpsb
inc
inc
sahf
leave
out
std
add
rolb
loopne
mov
inc
scas
inc
add
movsl
js
and
lcall
cmp
pop
xchg
mov
mov
jp
cmp
arpl
xchg
add
adc
xchg
xchg
jnp
ds
cmp
jne
test
cltd
sbb
jbe
xchg
push
mov
loopne
add
xchg
fsubrs
jge
pop
sub
in
inc
sarl
push
and
stos
add
jbe
and
daa
sahf
cmp
pop
lea
loop
xor
or
lea
dec
cli
mov
rolb
cmp
sub
shlb
insl
mov
push
inc
nop
mov
mov
jg
addr16
aam
jmp
jecxz
pop
iret
nop
mov
mov
es
mov
pop
out
xchg
cmpsb
andb
mov
inc
loopne
out
jg
ljmp
inc
inc
sti
fcoms
sub
and
aas
mov
nop
insb
add
adc
insl
loop
adc
push
nop
and
add
in
push
inc
jp
push
std
mov
loopne
inc
fisubrl
inc
add
icebp
cmc
fcomps
adc
push
cmc
aad
push
lods
and
out
rclb
sti
call
xor
and
add
pusha
jae
bound
cmp
mov
aam
test
mov
xchg
and
add
push
mov
pusha
lds
insb
jb
push
xchg
jbe
inc
push
sbb
mov
jmp
jle
pusha
sbb
push
ret
inc
lods
int
sahf
repnz
add
dec
cmp
jecxz
push
fs
pop
cld
inc
mov
popa
addr16
std
sub
add
inc
dec
imulb
adc
scas
outsl
mov
lock
andb
incl
loopne
dec
lcall
push
sahf
mov
and
push
and
fistpl
cs
andb
or
rcr
xor
lods
add
rolb
mov
and
stos
and
incl
mov
loopne
sub
cltd
mov
xchg
andb
adc
lahf
cmpsb
add
add
and
movsl
xor
scas
jae
jns
xlat
sub
mov
mov
push
jne
daa
pushf
adc
or
sub
loopne
loopne
sbb
ja
popa
add
aad
lds
loopne
aaa
das
and
repnz
cwtl
pop
out
nop
push
mov
int
inc
and
aad
add
mov
into
insl
mov
and
jg
popa
cs
sar
je
je
sub
daa
xor
clc
movsb
and
stos
leave
xor
rclb
and
jb
rolb
add
push
cmp
icebp
push
mov
jo
push
add
test
aaa
andb
das
jmp
arpl
and
subb
pop
mov
loopne
sub
pusha
fistpl
in
and
pusha
sbb
aam
xchg
roll
ss
mov
or
inc
dec
pop
and
xor
and
add
inc
push
sbb
roll
jo
mov
sub
mov
enter
gs
mov
mov
cmp
mov
mov
mov
lods
shlb
cmp
add
data16
mov
pusha
andb
dec
imul
pop
or
inc
dec
ficomps
inc
rcrb
pusha
add
jmp
cltd
cmc
addr16
dec
lcall
xchg
loopne
loope
add
sbb
and
mov
cmp
imul
add
xor
mov
lock
imul
jb
jnp
inc
ficomps
cmp
ficompl
shlb
mov
adc
push
inc
inc
dec
mov
mov
or
add
inc
mov
push
and
xorb
xchg
xchg
or
std
and
insb
lea
pop
outsb
cltd
sahf
or
add
lret
iret
sbb
mov
rorb
pusha
sbb
mov
xchg
loope
cmpsl
lret
adc
pushf
xor
movsl
das
jl
int3
sub
sbb
push
lahf
push
cmp
and
sub
rcr
cmp
movsb
and
movsb
mov
push
fcomip
pop
mov
and
mov
stos
mov
shl
repz
fidivrl
inc
cmp
inc
test
pusha
cmp
stos
ja
add
xorb
cmc
lahf
xchg
jbe
lods
cld
mov
aad
out
adc
or
lods
and
in
mov
add
sub
adcb
inc
and
js
loope
movsl
jge
adc
das
dec
mov
jg
sub
xchg
pusha
test
and
pushf
or
arpl
cmp
jg
lret
xor
mov
or
shlb
sub
mov
in
or
and
and
repz
mov
and
mov
flds
xor
lret
outsb
movsl
arpl
pop
int3
hlt
inc
jno
xchg
cmpsb
and
xchg
pop
bound
sub
testb
pop
fwait
outsb
je
mov
dec
mov
xor
frstor
shlb
into
inc
sub
mov
ja
clc
jbe
jo
or
loopne
repz
cmc
loop
add
mov
hlt
and
and
push
and
pushf
sarl
rol
add
sub
push
call
shlb
mov
xchg
mov
mov
push
iret
popf
sub
and
andb
pushf
add
xchg
loopne
nop
scas
mov
jecxz
into
repnz
dec
sbb
mov
add
rcrb
dec
add
add
push
notb
ja
jne
addb
shll
push
mov
cmpsl
rclb
fdivrl
std
dec
mov
pop
cmpsb
and
fcomps
loopne
iret
lods
add
sar
ja
xchg
pop
fdivrl
pop
iret
or
into
and
sub
dec
cmpsl
add
andb
ret
pop
divps
fs
jnp
pop
pop
xchg
and
shrl
into
loopne
fdivl
test
inc
rorl
push
outsb
push
sub
jle
pusha
and
mov
jge
shll
inc
aas
call
add
shlb
mov
lods
mov
push
andb
jbe
mov
mov
jnp
loope
stc
or
push
loop
shlb
fistpl
inc
inc
ljmp
js
outsl
jno
xor
iret
xor
xchg
dec
and
inc
pop
or
push
push
mov
andb
add
test
imul
mov
pusha
cmpb
add
pushf
sbb
imul
rol
lahf
dec
fnsave
or
addr16
and
xchg
pusha
arpl
in
mov
andb
loopne
loopne
or
adcb
repz
xchg
mov
popa
and
rolb
loopne
out
xor
out
add
or
pusha
sti
cwtl
fcoms
daa
add
mov
sti
push
out
fcomip
dec
inc
dec
inc
mov
dec
rclb
mov
pop
cli
test
pusha
lds
mov
arpl
jo
mov
jecxz
inc
and
sub
inc
push
aad
inc
ss
je
mov
push
stc
lcall
addb
faddl
or
and
xor
xchg
sbb
sub
inc
loope
aas
ljmp
scas
add
jge
loopne
out
shlb
or
add
ret
push
pusha
loopne
addb
pusha
and
loope
and
add
cmc
mov
jno
out
ljmp
jne
mov
or
pusha
jns
shll
mov
push
inc
mov
cmp
mov
dec
mov
lahf
in
imul
mov
mov
int
inc
cmpb
je
sub
add
pop
into
incl
jmp
jl
mov
jno
sub
xchg
or
test
mov
jp
and
rcl
ret
insl
mov
mov
mov
xchg
sti
or
add
sub
inc
dec
cmpsl
pushw
inc
mov
xor
cmc
cwtl
mov
push
outsb
lods
pusha
inc
and
add
xor
lcall
mov
adc
and
xchg
call
mov
inc
or
dec
aas
sbb
jb
lock
cli
sbb
dec
cwtl
imul
inc
add
and
mov
adc
inc
ds
popf
popf
push
adc
lahf
or
and
dec
inc
inc
xor
mov
add
loopne
loop
aad
mov
push
jbe
xchg
and
mov
iret
fdivrp
xchg
cmp
addb
xchg
jbe
imul
shl
add
push
fs
xchg
shlb
push
mov
add
push
scas
cld
add
insl
cmpsl
cmp
add
jne
xchg
and
rorb
rolb
icebp
mov
push
jbe
mov
ret
sbb
pop
push
fsubrp
repnz
cmc
daa
outsb
lock
pop
cmpsl
pop
mov
sbb
inc
subl
xchg
pusha
call
mov
inc
fldcw
or
and
and
cmp
es
inc
mov
enter
and
enter
add
mov
cmp
imul
adc
dec
or
loopne
loopne
pusha
inc
dec
lret
and
dec
mov
or
cmovb
test
inc
xchg
incb
ja
loopne
jge
inc
pusha
cmp
dec
les
jp
retw
mov
push
pushf
imul
aam
and
daa
xchg
dec
xchg
test
dec
push
mov
mov
mov
mov
jg
out
or
popf
pusha
aaa
notl
jns
mov
xchg
fcmove
in
movsl
add
int3
or
fcompl
mov
fs
lea
add
jnp
inc
out
inc
pop
in
jg
test
mov
aam
stc
es
bound
shrb
cmp
xor
into
xchg
ror
scas
hlt
rcr
daa
das
adc
mov
mov
ret
adc
mov
ss
fwait
xchg
pop
sbb
cs
jle
push
pop
loopne
mov
inc
mov
cltd
mov
movsb
mov
cmp
add
mov
xchg
cmp
iret
or
icebp
iret
movl
mov
or
ret
mov
popf
jne
std
mov
push
dec
cltd
lds
and
cli
cmp
xor
andb
jp
ljmp
inc
mov
and
mov
mov
loopne
les
repnz
das
cbtw
mov
adc
jbe
lret
imul
scas
loopne
in
in
mov
mov
aam
jo
or
or
pushf
std
add
xor
sbb
mov
rcl
push
add
and
sub
add
inc
shlb
xor
test
ss
mov
push
aas
rcrb
dec
stos
icebp
ljmp
jns
inc
into
pop
data16
test
sar
mov
pop
mov
shlb
push
and
test
outsl
pop
mov
lock
sbb
or
sub
mov
push
xchg
mov
pop
inc
sbb
sbb
mov
push
adc
or
nop
scas
pusha
and
sbb
pop
sub
shl
std
testb
push
rorb
roll
fs
rcll
fstpt
and
insl
fnsave
mov
arpl
add
inc
inc
add
and
or
and
loopne
imul
push
and
and
lret
sub
sbbb
add
out
loopne
cmpsb
rolb
mov
insl
shlb
pop
pop
xchg
cmp
je
repnz
shrb
mov
out
nop
packuswb
arpl
sbb
jg
repz
pusha
mov
pusha
gs
xor
pusha
mov
lahf
push
rclb
jle
pusha
pusha
and
add
cmp
loope
test
icebp
push
cmp
loopne
push
mov
inc
lcall
add
and
pop
frstor
xor
mov
jbe
inc
andb
and
mov
fisubl
jecxz
mov
loopne
dec
sbb
pushf
xor
jle
pop
mov
arpl
add
mov
insl
lret
ficomps
mov
mov
inc
inc
push
ljmp
sbb
cmp
icebp
push
xchg
sub
sub
or
pusha
jo
mov
dec
mov
mov
xor
aas
dec
test
push
rolb
xor
inc
pushf
pusha
fmul
mov
and
add
and
shlb
or
sahf
sub
stos
pusha
add
test
mov
sub
push
scas
shlb
loop
loopne
pop
xor
dec
int
cwtl
daa
add
pop
fisubl
adc
push
dec
mov
fsubrl
out
xor
and
movsb
inc
mov
pop
jnp
push
cmp
outsl
test
jno
imul
addr16
mul
mov
leave
cmpsl
fs
rclb
push
addb
ficoms
adc
pop
in
mov
jno
add
addr16
in
popf
insb
mov
pop
lcall
mov
repz
imul
das
jl
sbb
add
mov
pop
inc
mov
fistpl
mov
mov
fisubrs
mov
iret
or
subb
and
push
insl
push
add
xor
cli
adc
pusha
and
jecxz
pop
or
sbb
jo
enter
shrb
jg
lea
add
sbb
outsb
mov
pop
pop
lods
std
sub
cmp
repnz
ss
and
loopne
mov
cmpsl
pop
xchg
pop
repnz
push
mov
stos
out
popf
xor
in
clc
cmp
push
pusha
rclb
add
or
faddl
lcall
inc
and
push
adc
pusha
sub
aaa
adcl
dec
add
rclb
orl
iret
xchg
sahf
sbb
and
stos
mov
pop
xchg
ret
inc
js
sbb
out
int
loopne
sahf
mov
adc
add
int
and
in
mov
push
jno
xor
fistps
jl
shrb
enter
jge
push
repz
mov
sub
and
cmp
lcall
jnp
outsl
mov
and
inc
and
dec
notl
ftst
inc
mov
ss
sbb
pusha
cvtps2pi
and
push
mov
je
jo
xchg
ss
mov
sbb
andb
jb
lods
mov
or
sbb
xchg
subl
add
addb
jno
lret
mov
mov
fldcw
add
sbbb
andb
mov
add
lahf
add
insb
push
cmp
jle
into
sub
mov
xor
shrb
daa
scas
add
and
inc
jne
and
int
pop
adc
jno
mov
lea
lock
add
loopne
imul
mov
xchg
insb
andb
inc
cmp
rolb
jg
fcoml
fnstsw
sbb
and
aaa
jecxz
or
jecxz
sbb
in
adcl
mov
jo
leave
xor
mov
sarb
lods
andb
repz
call
sub
mov
dec
cmp
pop
aaa
stc
cmp
pop
movsl
movsl
imul
outsl
lods
loopne
inc
fcmovnbe
lcall
mov
movsl
je
jg
arpl
repz
jns
jge
dec
sub
hlt
jnp
jbe
push
dec
adc
aaa
out
sbb
pop
test
popa
loopne
shrb
inc
rol
mov
ljmp
mov
fldt
mov
jl
xchg
shr
mov
rolb
inc
add
loopne
jg
in
sub
inc
filds
push
cli
add
loopne
lahf
adc
mov
les
push
dec
xor
setno
sub
sub
pop
pop
xchg
std
pop
imul
loopne
lea
std
cmp
cmp
fildl
jmp
mov
mov
inc
lcall
mov
pusha
mov
xor
loopne
lret
dec
jp
imul
inc
mov
add
mov
adc
rolb
inc
jne
shrb
push
push
and
add
dec
jmp
pusha
sub
aam
lcall
shr
lds
daa
pop
hlt
jecxz
sub
mov
movsb
pusha
add
sbb
ds
jg
xlat
jns
aam
mov
inc
cmp
bnd
test
movsl
je
xchg
test
mov
rol
ljmp
xor
push
xchg
out
ror
ss
adc
sbb
ficomps
and
test
inc
pusha
addb
movsb
mov
push
cmp
adc
out
adc
jle
movsl
or
dec
test
andb
mov
sub
cmp
and
shr
in
shll
cltd
out
lret
add
loopne
cmp
scas
push
xchg
xor
jge
xorl
mov
bound
rol
sub
test
sbb
dec
cmp
mov
xlat
movsl
lret
int
or
std
mov
push
and
pop
push
mov
addb
jno
addb
cwtl
xor
or
movsb
and
inc
js
mov
add
pusha
jo
sbb
iret
mov
shl
lahf
fistps
pushf
push
xor
mov
jbe
lds
mov
rcrl
ret
enter
and
loopne
cmc
dec
lcall
mov
dec
push
jmp
ret
popf
ljmp
add
rolb
push
shl
push
inc
inc
xor
nop
xor
loopne,pn
loop
mov
popf
icebp
enter
add
ficomps
roll
mov
inc
pusha
cs
rclb
inc
loopne
out
adc
and
push
int3
les
jb
je
mov
les
push
mov
xchg
lahf
adc
fidivrl
dec
sar
jmp
mov
mov
daa
xchg
imul
in
loop
jo
xchg
imul
xor
lcall
mov
and
loopne
pusha
jnp
shlb
adc
add
mov
mov
ror
dec
jae
rorl
rol
adc
call
mov
andb
imul
adc
add
cmp
shrb
add
push
scas
test
mov
cmp
inc
fldcw
xchg
sub
add
pop
add
inc
and
sbb
adc
or
popl
dec
aas
jg
pop
and
mov
pushf
adc
dec
sub
popa
inc
dec
mov
loope
adc
add
int3
or
pusha
sub
loopne
sub
inc
or
shlb
test
loop
shlb
xor
xchg
out
adc
add
pusha
add
lret
lods
and
jnp
dec
sbb
and
idivl
add
aam
out
push
xlat
in
cmpsl
mov
loopne
int
cmp
jl
loope
sbb
mov
daa
outsl
inc
sbb
loopne
mov
test
fimull
addb
pusha
jae
jns
mov
fcoms
mov
pop
enter
or
push
and
sbb
and
lahf
xchg
bnd
andb
pusha
and
mov
enter
adc
mov
ret
cmc
lock
in
lds
rolb
mov
and
pop
lods
mov
add
loope
push
or
pusha
jne
mov
mov
cltd
and
add
outsb
sbb
pusha
imull
xchg
lods
jo
xor
test
jl
lahf
or
or
pop
lcall
lds
jb
ja
mov
mov
add
push
cmpsb
pusha
sub
mov
lcall
lea
cmpsb
shl
push
and
mov
test
mov
addb
push
inc
loopne
xor
xor
ja
inc
fiaddl
movaps
idiv
dec
cmc
mov
sub
mov
inc
add
shll
pushf
es
add
lret
inc
adc
imul
imull
mov
bound
std
sub
loopne
mov
adc
loopne
pushf
andl
and
pusha
add
sub
loopne
out
rolb
add
and
addb
arpl
inc
shlb
inc
repz
add
jle
jecxz
mov
sub
pusha
loop
and
call
push
repnz
shll
pusha
insl
jno
add
push
add
imul
mov
sti
push
sbb
xor
xchg
xor
push
adc
pusha
addb
rorb
addr16
sti
mov
xchg
sar
addr16
inc
mov
jmp
shlb
loopne
jcxz
in
mov
xor
andb
decb
and
stos
and
inc
andb
jle
shl
sbb
and
adc
insl
aad
and
push
sub
mov
stos
lods
repnz
xorb
push
shl
sbb
repnz
push
rorl
sahf
lds
mov
das
cwtl
lods
loopne
addb
aam
and
and
push
mov
rcr
outsl
andb
push
jmp
rclb
stos
rol
pop
xchg
mov
sbb
pop
jno
jg
add
add
cmc
lods
cmp
inc
cwtl
push
jg
sbb
and
inc
mov
insl
out
xchg
ret
push
xor
sbb
hlt
xor
add
push
jbe
add
fs
push
mov
fsubl
notb
pop
addb
into
sarl
loopne
sbb
rcrb
cmp
mov
jle
mov
and
fstl
insb
mov
pusha
mov
sub
mov
add
pushf
push
and
lcall
pop
add
lods
add
test
push
rcrb
mov
and
ljmp
push
enter
loopne
std
rol
mov
jge
and
pop
in
test
loopne
lds
push
sbb
mov
sbb
daa
cmpsb
pusha
add
ret
in
mov
mov
mov
repnz
sub
mov
cwtl
or
mov
inc
out
xchg
cmc
loopne
xor
mov
stc
das
dec
adc
mov
test
and
leave
sbb
dec
cmp
in
sahf
jg
add
popa
jae
inc
shlb
ret
mov
jp
xchg
aaa
cli
test
les
add
into
xchg
mov
addb
scas
sub
push
inc
test
addr16
sbb
fisttpl
jle
rcrb
loopne
daa
cwtl
movsl
mov
imulb
popa
add
inc
insb
and
out
sbb
lods
jnp
add
jns
shl
pop
std
cwtl
push
pusha
inc
pop
les
or
and
add
inc
or
mov
js
inc
inc
xchg
or
inc
ss
fdivrs
stos
inc
rolb
rcl
dec
dec
sub
mov
pop
sbb
and
pusha
ret
sti
or
and
std
mov
push
loopne
jge
or
adc
sbb
mov
cmp
adc
shlb
std
jp
insl
xlat
mov
mov
xchg
push
cmpsb
mov
add
dec
jo
les
inc
xor
gs
es
add
cmp
std
sub
pop
or
push
pop
mov
ja
mov
xlat
lret
pop
jl
dec
les
xor
subl
mov
xchg
int3
or
mov
fildl
dec
outsb
hlt
cmpsl
mov
insl
iret
inc
nop
data16
js
mov
mov
mov
sub
xor
insb
inc
aad
repz
popf
dec
adc
mov
add
frstor
and
subl
or
cltd
popa
or
pop
test
mov
mov
and
push
push
loopne
mov
cwtl
inc
push
mov
scas
fsubl
loopne
dec
shlb
push
push
and
add
inc
in
jno
push
pusha
adcb
adc
push
mov
adc
add
xor
nop
into
jne
mov
inc
loopne
jb
andb
scas
adc
jnp
lods
xchg
inc
sub
inc
nop
sbb
mov
push
push
and
add
cmp
lret
sub
loop
or
cld
jno
test
pop
sahf
inc
push
or
sbb
mov
dec
lods
and
mov
aas
aas
or
mov
mov
das
sub
sbb
cwtl
mov
int3
dec
pop
mov
inc
add
int
movsl
sub
fdivp
jl
gs
mov
addb
xchg
loopne
inc
fiaddl
xor
xchg
fxch
mov
and
pusha
loopne
inc
cltd
cmp
jb
and
add
clc
jge
js
int
rcr
cmp
sbb
and
mov
rolb
add
cmp
ljmp
mov
mov
sahf
jecxz
jns
add
loopne
push
cmp
outsb
inc
pop
lret
fnstcw
sbb
push
dec
sahf
inc
test
jae
pop
push
mov
sub
loopne
rcll
loopne
xchg
add
and
and
sub
inc
lock
jp
mov
hlt
adc
mov
push
add
inc
fwait
jns
and
test
ljmp
inc
movsl
or
loopne
push
inc
popl
xchg
enter
das
jmp
mov
popf
jmp
call
lea
adc
xlat
lcall
xchg
inc
adc
jo
pop
imul
and
addr16
rclb
cmpsb
rolb
andb
icebp
lret
loop
call
test
fnsave
pop
adc
out
mov
dec
jge
rcl
pop
jo
sarl
addl
mov
int3
jb
cwtl
mov
fcmovne
push
outsb
mov
add
and
mov
fwait
sbb
jle
movsb
inc
shlb
test
jne
jecxz
shlb
sbb
ds
mov
sub
add
testl
ror
jno
repnz
test
inc
and
lock
loop
mov
and
ja
dec
mov
loopne
xor
sbb
gs
pop
dec
in
push
sub
psubusw
sub
xor
shlb
nop
adc
adc
loopne
add
add
stos
addb
add
pusha
je
inc
xor
push
xor
cmp
aas
xchg
inc
movsb
loopne
sub
out
add
lods
inc
mov
shrb
sub
cli
mov
jbe
sub
and
cmpsl
testl
pusha
loopne
push
repnz
loopne
adc
add
int3
push
dec
das
pop
je
mov
pop
in
push
gs
dec
popa
adc
mov
in
pop
add
out
popa
add
cmp
and
ja
xor
addb
cld
in
xchg
mov
push
cmp
pop
shlb
add
imul
sbb
mov
das
shl
xor
push
into
stos
loopne
and
pop
outsl
mov
loopne
lea
cmpb
dec
insl
aaa
xchg
xor
inc
sarb
fidivrl
insb
add
popa
sub
inc
aam
jp
add
sub
dec
jl
mov
shl
ljmp
inc
stc
icebp
xchg
out
movsl
scas
loopne
fs
adc
andb
inc
inc
in
mov
shrb
imul
and
jb
icebp
cs
loopne
loope
imulb
xchg
dec
mov
jns
jecxz
and
mov
scas
lods
adc
mov
adc
adc
add
orb
shrb
inc
and
push
lret
xchg
push
push
ror
xor
lea
pusha
mov
divb
sub
pusha
jecxz
stc
out
lcall
xor
xor
mov
jbe
std
pushf
jo
sbb
cmpsb
loopne
xlat
sbb
sbb
divl
push
loopne
add
xorb
push
in
jecxz
loopne
adc
daa
or
jmp
das
ss
cmp
lret
dec
rcll
and
andb
rcll
imull
mov
push
jl
aas
pop
out
mov
enter
and
cmp
pop
shlb
inc
mov
mov
and
mov
add
andb
pushf
mov
cmpsb
add
lret
outsb
cmp
inc
fistps
andb
jmp
xchg
sarl
inc
pusha
add
test
mov
js
enter
call
jl
sbb
popf
sahf
std
enter
gs
mov
rol
xlat
andb
jne
mov
add
mov
mov
popf
mov
addb
outsl
gs
xorb
sbbl
or
inc
les
andb
mov
and
cmpl
xchg
xor
cld
ret
wbinvd
or
stos
addb
and
adc
lcall
sub
sarb
and
mov
cmp
or
mov
jg
outsl
xchg
data16
or
mov
out
andl
dec
insl
negb
adc
sbb
fsubrl
inc
mov
pusha
mov
pop
sbb
add
aaa
and
js
ret
pop
mov
lahf
dec
or
loopne
pusha
add
in
inc
loopne
or
inc
clc
fidivrs
sub
fldenv
and
jl
inc
and
pusha
gs
mov
loopne
shrl
rcrb
out
inc
sub
add
dec
aam
jp
mov
xor
js
push
test
push
pusha
xorb
xchg
xor
aad
pop
mov
mov
sbb
hlt
pop
pop
add
inc
repnz
andb
loopne
inc
out
jne
push
pop
popf
fmulp
inc
and
js
mov
lea
enter
xor
adc
int
jmp
inc
mov
and
out
xchg
sbb
push
mov
inc
xchg
or
lret
push
test
movsb
mov
mov
mov
mov
jg
loop
lds
rcl
sub
loopne
inc
pop
jge
xlat
pusha
fsubl
andb
mov
sbb
push
test
leave
mov
cld
outsl
adc
rclb
js
mov
shrb
push
inc
mov
jg
cmp
mov
bound
inc
hlt
pop
ljmp
cmpsb
add
sub
cmpsb
pusha
xor
cmc
lea
iret
aam
add
jge
mov
orl
add
jg
pop
lcall
notb
dec
sub
and
mov
push
shlb
and
mov
mov
hlt
incl
add
das
push
cwtl
xchg
repz
ret
scas
add
sbb
lcall
xorb
ret
push
adc
xor
adc
add
insb
pop
sub
scas
and
in
xor
out
iret
pop
push
pop
lock
mov
and
mov
out
ret
or
jne
adc
jmp
inc
aas
lds
std
xlat
cmp
cmpsl
and
jns
addb
add
imul
push
xchg
cmp
test
pop
adc
xchg
xor
push
jnp
add
adc
test
stc
dec
inc
push
cmpsb
loopne
mov
dec
inc
xor
and
stos
shrb
inc
mov
xchg
cli
add
mov
sbb
push
call
push
loop
pop
pusha
cmp
mov
xor
shlb
push
push
dec
pop
pop
cs
add
loopne
rol
cmp
mov
das
xlat
sbb
loope
dec
push
adc
std
push
mov
and
pusha
sub
orb
and
cmp
cmc
sub
pusha
ljmp
inc
and
inc
adc
jl
ficompl
inc
loopne
adc
pop
fnstcw
mov
pop
ret
xchg
xor
pop
les
pusha
andb
mov
loopne
rol
push
pop
out
add
shlb
add
or
pop
bsf
scas
sub
and
pusha
mov
aam
icebp
push
je
das
push
sub
push
add
sbb
rorb
cmpsl
push
mov
mov
mov
cmc
jl
ljmp
add
inc
fbstp
push
sahf
xlat
imulb
mov
out
pop
inc
inc
test
cltd
pop
movsb
inc
add
jo
pop
sbb
inc
jno
push
lret
sub
add
mov
andl
pop
sbb
mov
add
insl
hlt
fisubl
lock
and
das
dec
std
mov
and
xlat
pop
dec
and
pusha
pusha
xor
daa
jle
xor
xchg
aaa
push
andb
and
scas
pusha
sarb
and
add
mov
sub
pusha
push
add
add
jecxz
push
push
in
insl
fldenv
mov
arpl
enter
ret
inc
and
dec
and
inc
and
sub
sbb
dec
mov
insb
sbb
push
shl
adc
or
jp
shl
aad
jl
mov
test
addb
cmp
and
add
shlb
xor
mov
rcl
out
out
cmpsl
cmp
aaa
arpl
cmpb
inc
loopne
inc
add
rcl
mov
push
dec
aas
or
and
add
inc
mulb
rclb
fmull
sarl
mov
andb
fwait
pop
sti
leave
inc
jbe
pop
lods
cwtl
pop
fidivl
ret
in
outsb
rolb
mov
sbb
mov
cmp
rolb
aam
push
xor
push
or
loopne
push
inc
inc
add
add
push
aad
orl
subb
rolb
and
in
xchg
daa
cmova
adc
repz
adc
cwtl
push
pop
mov
sbbl
adc
mov
add
mov
mov
xchg
pop
aad
iret
sti
aas
sub
and
or
shrb
add
fisubrs
push
dec
insb
xchg
pop
and
xchg
jbe
lock
mov
sbb
mov
and
rcr
and
mov
popf
inc
mov
loopne
rorl
fdiv
sub
add
mov
gs
cmp
das
add
cs
shlb
add
leave
xor
in
and
loopne
mov
insl
call
mov
movsl
adc
stc
rolb
andb
pushf
xor
gs
rcrb
or
add
cmc
dec
repnz
std
rcl
and
jno
push
inc
js
int
pop
xchg
insl
insl
and
push
jge
test
loopne
test
sub
clc
dec
aaa
lcall
mov
fmuls
mov
inc
test
loopne
inc
inc
pushf
add
sbb
pop
fcoml
pop
daa
xchg
mov
lcall
add
jl
mov
jbe
jnp
and
fwait
xlat
jge
sbb
xchg
fwait
mov
fsub
ja
cli
dec
leave
loopne
cmp
adc
out
dec
cli
fcomip
fildll
inc
fsub
in
cmp
data16
out
jl
push
je
fs
shl
xor
loopne
fstps
ret
mov
loopne
mov
xadd
stos
pusha
inc
jnp
stc
notl
cmp
mov
stos
movsl
mov
xor
xor
loope
xor
xor
inc
xor
jns
out
std
add
mov
lods
or
test
loopne
mov
mov
and
sbb
push
icebp
pop
dec
aad
clc
lock
int
push
lds
mov
dec
push
ror
pusha
mov
mov
lahf
in
push
push
adc
dec
roll
out
sti
add
loopne
sub
push
jbe
sub
movsb
pusha
xorb
and
sbbb
mov
xchg
pop
cmp
mov
orb
push
data16
loop
add
and
jmp
loopne
scas
and
repnz
idivl
loopne
cmp
dec
fptan
iret
shrl
lret
rolb
xchg
movsl
ja
loop
pop
out
mov
add
mov
sbb
into
lds
addb
into
push
add
dec
cwtl
mov
loopne
insb
xchg
fisubl
jl
sbb
sti
inc
dec
jns
outsb
pop
push
mov
mov
add
enter
xor
push
push
loopne
jmp
jge
sub
mov
pop
shl
inc
cmp
in
push
sbb
sub
mov
pop
jl
shlb
inc
and
andb
jp
or
inc
mov
lock
scas
cmp
ret
andb
aas
push
and
push
fisttpl
mov
xchg
loopne
and
pusha
add
sbbb
outsl
shlb
in
out
dec
sbb
inc
or
fbstp
cmpsl
fstpt
fmull
pusha
orb
pop
jg
jl
fyl2x
or
mov
xlat
mov
loopne
int3
jae
nop
and
and
gs
jo
inc
sarb
and
xchg
lret
sahf
mov
inc
inc
stos
jno
and
loopne
cmp
jne
and
lods
add
dec
cmp
adc
inc
mov
pop
outsb
and
or
and
mov
and
pop
iret
jb
jnp
or
rclb
xchg
out
das
mov
jl
add
or
cmp
jno
xlat
push
lock
dec
ja
push
cmc
test
sbbb
jae
aas
sbb
das
or
pusha
shl
push
inc
inc
sub
mov
pusha
out
pusha
pusha
xor
inc
pop
push
rolb
addr16
xor
dec
jnp
ljmp
pusha
jo
cmp
or
mov
xchg
stos
jl
jmp
push
add
jmp
ret
xchg
fbld
hlt
cmp
and
rorb
js
out
cmp
push
push
or
and
pop
ds
mov
loopne
dec
in
jle
inc
out
jl
leave
cmpsl
pop
inc
ds
rcrl
and
and
movsb
add
aam
cld
add
pusha
add
xchg
cmp
inc
lea
dec
cmpsb
and
ss
xor
and
and
fisubrs
andb
mov
xchg
addr16
adc
push
pusha
and
dec
inc
stos
mov
loopne
lcall
in
add
orb
orb
scas
sti
or
sub
inc
das
je
push
or
inc
mov
mov
aam
sub
les
and
sbbb
inc
push
mov
adc
loopne
ss
sbb
or
or
das
dec
addb
dec
and
lods
and
gs
dec
fbld
push
dec
dec
sbb
lods
lods
loopne
imul
push
cltd
push
loopne
inc
into
loopne
jbe
pusha
dec
pop
out
cmp
push
pop
loopne
mov
pop
push
sbb
xor
imul
cmp
pop
addb
add
and
out
insl
cltd
sub
and
xchg
mov
clc
mov
and
inc
mov
cld
pop
movsb
mov
jge
pop
shll
loopne
mov
es
jo
add
rolb
pop
test
sbb
rolb
fstl
pop
jns
andb
xor
test
mov
dec
repz
icebp
call
cmp
cwtl
les
loopne
sub
pusha
and
popf
or
cmp
dec
cmp
pop
mov
xchg
mov
dec
pop
popa
movsb
mov
ret
add
mov
loopne
cltd
rolb
pop
xchg
pop
adc
push
in
jae
addb
shll
xchg
mov
mov
sbb
shlb
fwait
cltd
mov
jb
dec
test
pop
inc
push
and
ja
rolb
out
iret
mov
cld
pop
daa
push
adc
cmp
sarl
fimull
sbb
ja
out
mov
loopne
jp
pusha
hlt
push
push
and
mov
lock
adc
into
and
add
add
sarb
bndldx
xchg
pushf
xchg
cmc
outsb
test
mov
repz
xchg
jnp
mov
sub
inc
outsb
fstps
lea
mov
sub
push
add
sub
mov
out
shlb
inc
add
rcl
sahf
adc
stos
shl
mov
lcall
ficoms
jle
and
xorl
mov
shrb
push
popf
std
ret
mov
loopne
add
mov
xor
dec
mov
jl
xchg
mov
mov
aad
add
int
xchg
adc
and
ljmp
lock
jmp
adc
cmp
call
add
and
add
lea
rcll
sti
call
dec
cmp
dec
xor
dec
popf
nop
sub
jmp
jge
dec
imull
pushf
cmp
out
shl
mov
mov
aad
xchg
jae
xlat
inc
push
or
rcl
aad
addb
jmp
and
pushf
lret
and
inc
sbb
jno
pushf
std
xchg
jle
pushf
push
loopne
mov
inc
dec
sbb
incb
inc
adcb
rolb
and
loopne
xor
inc
cmp
cwtl
mov
and
fimuls
scas
rol
ljmp
lret
aam
mov
xor
pop
les
insl
outsb
ss
cltd
jle
xor
or
pusha
add
iret
mov
loopne
popf
pop
pop
or
std
fbld
loopne
xchg
sub
pusha
int3
mov
add
icebp
int
fidivrl
and
sbb
insl
sbb
je
imul
pop
mov
in
in
dec
and
inc
inc
or
mov
rcrl
or
inc
jbe
in
cmp
fimuls
dec
addb
and
and
mov
and
loopne
repnz
and
inc
add
int3
nop
out
imul
dec
dec
clc
lods
add
fbstp
inc
fdivr
add
subb
add
mov
xchg
and
jno
aad
mov
jno
loopne
mov
mov
xchg
fwait
das
repz
rcrb
stos
add
leave
cltd
test
add
adc
out
aaa
arpl
xchg
push
and
fsub
push
xchg
stos
nop
ds
add
xchg
add
push
outsl
push
addb
mov
mov
jno
pusha
sbb
inc
and
jecxz
andb
cli
mov
inc
mov
out
ret
call
xor
inc
push
fwait
aaa
stc
add
daa
adc
popa
adc
or
shlb
and
bound
push
sbb
mov
scas
pusha
shl
loopne
outsl
mov
inc
mov
daa
push
cs
mov
aad
adc
inc
and
push
inc
add
mov
adc
sub
pusha
push
mov
pop
mov
das
ficompl
cli
sbb
jno
xchg
push
addb
stc
sti
jg
add
mov
subb
xor
inc
inc
push
filds
lahf
mov
lret
arpl
pop
cmp
jmp
aaa
test
and
lock
ret
add
rolb
loopne
xor
test
mov
add
add
cltd
ret
mov
pusha
inc
inc
mov
loopne
sub
inc
scas
inc
and
stos
addb
rol
mov
xlat
jae
in
and
xchg
cmp
push
xchg
and
test
scas
andb
loopne
xchg
mov
sub
lcall
sarb
leave
sub
rol
inc
and
or
add
xchg
stc
jge
loopne
xchg
mov
xorb
dec
gs
and
inc
add
shl
mul
and
pusha
mov
mov
add
aad
andb
addr16
pusha
dec
xchg
mov
pop
dec
jg
cmc
push
pop
sub
loopne
push
mov
scas
pusha
pusha
out
out
jo
fs
mov
jmp
shrb
add
jp
andb
push
sub
pushf
pop
mov
loopne
and
and
pop
fidivs
js
sbb
pusha
add
out
push
pop
jl
pusha
pusha
mov
shlb
faddl
cli
inc
fld
adc
pusha
and
pusha
xor
and
sub
add
loopne
int
scas
pusha
loopne
addb
fwait
popa
mov
mov
mov
in
mov
and
mov
inc
loopne
add
jns
jg
pop
or
and
loopne
pop
lds
dec
add
sar
popf
cmovs
add
and
fmull
stos
bound
jo
fidivrs
ret
and
and
add
rcrl
insb
mov
jnp
fiaddl
lret
sbb
adc
lret
jb
cmp
out
loopne
xor
jp
dec
or
into
loope
xor
stc
sub
popa
push
incl
arpl
insl
push
rolb
stos
mov
outsl
loop
sbb
test
fs
js
lods
mov
add
sub
loopne
pop
cli
sub
inc
add
stos
sub
push
lahf
xor
adc
scas
nop
jae
shl
je
shlb
mov
add
das
rcrl
inc
fildl
mov
jle
fistpll
out
and
pusha
ffree
inc
std
mov
jp
and
clc
ja
aaa
enter
mov
sbbb
out
in
jg
js
ja
mov
pushf
mov
cmpsl
and
lds
iret
adc
dec
push
mull
sbbb
add
cmc
cmc
push
jo
fiaddl
test
mov
add
loopne
ja
mov
pop
fcomi
idiv
out
daa
shll
lock
mov
scas
sbb
and
sarb
pause
sub
and
mov
fs
inc
mov
or
push
mov
pop
mov
lock
in
in
push
xchg
xchg
int3
js
inc
loopne
pop
jo
mov
rolb
pusha
loopne
stc
and
mov
ss
xchg
scas
in
push
xchg
xchg
jecxz
add
rorb
call
andb
jmp
push
lock
and
addr16
add
inc
add
shrl
cmc
ficoms
out
dec
cmpsb
andb
add
scas
dec
xor
inc
jg
stos
shlb
les
fstpt
iret
ja
dec
repnz
fsubl
cmp
icebp
jp
out
out
adc
sbb
add
mov
and
sbb
add
inc
xchg
xor
loopne
cmpsl
fwait
clc
fdivrl
fisubl
add
fbstp
inc
daa
out
dec
sahf
outsl
es
jge
insl
repnz
shlb
icebp
xor
xor
lret
xchg
push
mov
cmpsl
mov
imul
scas
pusha
sarb
std
sub
sub
jle
stos
fucomp
fsubrl
aas
sahf
lods
dec
movsl
adc
les
mov
data16
push
and
and
and
jns
mov
cmp
adc
add
and
lock
ja
outsb
push
mov
jnp
ss
and
mov
hlt
in
inc
dec
int
rolb
add
adc
xor
add
cmp
adc
and
adc
adc
rol
sti
mov
xchg
mov
mov
int
inc
pop
jge
addb
lahf
sahf
adc
sbb
iret
jae
adc
push
dec
addb
dec
and
add
mov
mov
inc
mov
outsl
test
inc
dec
xor
and
add
shrb
ss
fadds
addb
and
out
pop
xlat
fsubrp
mov
cmp
out
and
repnz
leave
jnp
cli
sub
int
and
cmpsl
add
loopne
push
dec
or
pop
je
fisttps
insb
aas
pop
shrl
popf
dec
dec
test
inc
cmp
das
movsb
mov
sbb
pop
jp
mov
inc
or
and
jp
mov
shlb
shrb
pop
mov
lea
hlt
add
ds
dec
movsl
loop
notb
mov
and
push
pop
aam
stos
in
adc
lcall
mov
and
and
and
inc
inc
leave
adc
mov
push
ds
lods
loopne
sub
fildl
cmc
gs
cmp
dec
or
add
clc
xchg
fiaddl
cmp
pop
inc
xor
pop
cmp
bound
dec
ss
pusha
mov
loopne
dec
xchg
lods
or
pusha
cmp
test
sbbl
sbb
add
xlat
lock
sbb
rol
cwtl
cld
pop
pushf
hlt
fsubs
aas
imul
or
add
shlb
gs
out
cmp
ds
mov
push
add
mov
mov
push
fldl
mov
nop
add
ret
nop
dec
stc
inc
xchg
lret
dec
test
xor
cmpsl
leave
mov
cmpb
aaa
rolb
sub
adc
pop
jo
adc
ss
enter
loopne
incl
adc
cli
xor
rcl
stc
cmc
andb
addb
loopne
fbstp
mov
cmc
cmp
bound
add
and
lods
rol
das
cmp
pop
int3
jl
xchg
and
out
mov
cwtl
andb
addb
jecxz
inc
inc
pop
fnstsw
imul
call
or
add
loopne
movsl
pop
addb
mov
mov
inc
inc
outsb
jg
repz
pop
std
addb
aad
orl
inc
add
mov
mov
dec
xlat
aad
add
push
add
mov
and
nop
int3
or
add
std
xlat
ds
push
push
mov
call
pusha
xlat
push
out
test
loopne
add
add
or
jb
clc
mov
sub
mov
pusha
cli
push
and
loopne
mov
ficoml
mov
mov
pop
fs
xchg
arpl
lds
and
stc
andb
cmpsb
rolb
stos
inc
and
mov
shlb
lods
push
mov
roll
sub
mov
and
dec
adc
mov
jns
mov
adc
xor
pop
sbb
leave
lahf
add
loopne
in
mov
daa
adc
lods
ljmp
ret
addb
sub
loopne
jl
fildll
cwtl
mov
rolb
mov
jge
or
loopne
push
pusha
shrb
movsb
shl
fldenv
shlb
hlt
std
aam
aam
sahf
and
inc
dec
shlb
adc
push
addb
aam
inc
scas
pusha
mov
ror
pop
fsubl
adc
stos
inc
cmpb
out
sbb
push
push
daa
mov
stos
or
dec
sbb
jne
cmp
call
je
repz
ror
mov
or
inc
dec
outsl
jmp
dec
jo
add
sti
divl
mov
xchg
pop
and
addr16
jae
repnz
je
mov
xlat
cmp
loopne
pop
jbe
ficoml
pop
je
add
xchg
push
cltd
xor
sbb
clc
scas
mov
add
mov
jecxz
jno
pop
inc
outsb
aas
sbb
cmp
and
icebp
mov
xchg
lret
shlb
lret
push
sub
pusha
inc
pop
jo
and
inc
inc
and
fidivs
mov
sbb
repnz
jne
ret
pusha
add
rolb
sub
push
cwtl
out
mov
fists
addr16
inc
rcr
push
shll
fists
out
xlat
pop
mov
shrl
pusha
shl
push
add
lret
adc
jl
xor
inc
andb
int3
pop
cmpsl
jmp
adc
insl
je
mov
jne
mov
pop
cmpl
loopne
xchg
stos
add
inc
fcmovb
or
push
jp
sub
inc
adc
aas
mov
sahf
dec
and
pusha
add
into
add
pusha
xor
rol
je
mov
test
add
xor
aaa
stc
xor
inc
movsl
jae
inc
int3
add
sbb
dec
or
or
xchg
cmc
aas
orl
rorb
pusha
pusha
add
add
sbbl
mov
loopne,pn
or
inc
add
pusha
loopne
xor
js
and
mov
shlb
rolb
shl
dec
inc
bound
ss
mov
lds
and
lahf
es
loopne
repnz
repz
mov
sarl
aas
lcall
pop
stos
and
repnz
inc
add
movsl
add
push
and
xchg
add
jae
dec
push
pusha
rclb
lcall
inc
rclb
daa
xchg
inc
addl
data16
cmp
jns
and
xchg
sbb
test
jl
test
dec
daa
leave
push
add
out
pusha
mov
mov
rolb
or
and
mov
mov
andb
dec
fdivl
ret
enter
dec
scas
sub
fisubs
inc
inc
lods
inc
mov
mov
push
inc
sarl
pop
ds
mov
push
arpl
push
and
and
cmp
andb
jecxz
adc
scas
addb
and
in
fimuls
xchg
or
into
dec
mov
mov
inc
ja
in
movdqu
lea
frstpm(287
out
add
mov
or
addb
add
jmp
inc
and
inc
inc
and
dec
out
mov
or
mov
mov
cmc
std
enter
mov
sub
subb
insl
push
adc
mov
sub
sbb
lcall
jo
arpl
iret
loope
push
popf
and
fsubp
je
popf
jg
xor
add
lcall
bound
loopne
andb
adc
mov
mov
adc
sahf
and
shrb
js
scas
rcl
inc
in
adc
out
pusha
loopne
lods
inc
loopne
mov
and
mov
pop
imul
xorb
pusha
mov
and
jae
cmpsb
add
inc
clc
imul
push
cmp
push
rolb
jne
and
sahf
mov
adc
mov
and
div
mov
or
rol
adc
mov
addb
sub
stos
and
dec
aam
jbe
sbb
push
xor
pop
jnp
insb
dec
push
outsl
xchg
push
pop
push
cli
sub
and
xor
test
jmp
leave
dec
rcl
fwait
out
das
mov
inc
inc
dec
pop
dec
mov
cld
pop
call
add
pop
test
loopne
or
shlb
and
sub
test
and
mov
pusha
inc
enter
fldcw
sub
cli
addb
adcl
add
jge
push
gs
call
mov
adc
add
sbb
pop
andb
and
add
out
lods
arpl
mov
pusha
pusha
mov
add
cwtl
out
mov
inc
sbb
in
pmulhuw
push
shl
push
fwait
int3
mov
in
mov
inc
add
cmp
arpl
scas
and
in
jge
inc
rcl
inc
mov
or
cmpsl
jns
xchg
inc
data16
push
fs
add
dec
es
lahf
lock
out
jne
mov
xor
aas
xchg
add
mov
fwait
jg
inc
add
jno
andb
mov
sahf
fisttpll
and
xchg
sub
testb
andb
sub
push
orl
outsb
cmp
gs
mov
mov
jmp
popf
xchg
into
inc
mov
jne
mov
data16
fisubl
inc
inc
dec
retw
mov
pop
icebp
xchg
out
test
add
sbb
pop
lock
push
pop
std
adc
lock
hlt
pop
stc
adc
or
pusha
xchg
inc
mov
xchg
out
js
fldl
dec
lods
add
into
call
pop
cmpsl
and
sbbb
jo
repz
and
mov
lods
ret
imul
and
icebp
test
fistpl
mov
jnp
or
ret
test
or
inc
and
subb
cmc
push
enter
add
daa
out
mov
adc
rol
daa
mov
cltd
inc
cli
pop
pop
jg
rclb
push
pop
sub
add
mov
loopne
arpl
or
xor
loopne
push
lahf
in
xlat
lods
inc
push
pusha
loopne
jns
xor
scas
rolb
adc
test
sarb
xchg
test
xor
mov
mov
test
push
xlat
stc
or
aas
ret
cltd
rorb
fwait
push
mov
repnz
push
outsl
mov
stos
mov
and
mov
inc
hlt
or
add
and
cmp
repz
pop
inc
pop
dec
aaa
cltd
aas
int
shll
sub
pusha
ds
jge
mov
rorb
pusha
cmpb
insb
xchg
mov
shlb
mov
sbb
jnp
fisubrs
loopne
and
add
or
push
mov
inc
repnz
xor
aaa
mov
mov
cmp
pop
sti
pop
movsl
pop
xchg
jno
shlb
mov
push
popf
cmp
enter
push
dec
cwtl
arpl
mov
out
mov
loopne
mov
xchg
push
js
fimuls
mov
pop
dec
movsl
push
std
fwait
dec
mov
shlb
mov
int3
pop
fists
gs
push
gs
in
or
enter
insl
imul
mov
loopne
mov
repz
pop
insl
ret
push
imul
and
xchg
mov
inc
cmpsl
inc
int3
fwait
add
and
or
lea
movsb
pusha
inc
lahf
cmp
xchg
jbe
cmc
inc
mov
data16
mov
and
subb
das
xchg
push
inc
add
stos
cvttps2pi
cmpb
andb
call
icebp
sbb
pop
cmp
add
xchg
cltd
or
sbb
jne
lcall
inc
or
scas
out
int3
testl
cmpsb
rol
leave
rcll
nop
pop
xchg
push
add
mov
sub
jns
mov
pop
roll
and
lods
shl
in
loopne
mov
imulb
and
stos
pusha
loopne
pop
push
lret
rcr
leave
lcall
mov
push
and
push
pusha
add
and
outsl
fs
xchg
mov
insl
dec
cld
dec
scas
dec
push
addb
jmp
sahf
mov
add
jp
and
shrb
inc
sbbb
mov
sub
rolb
pusha
or
adcb
iret
test
mov
pushf
and
add
jbe
jp
xor
push
insb
dec
lods
bound
lods
loopne
imul
push
ret
loope
adc
adc
out
mov
cmp
xchg
stc
cmp
push
roll
and
popf
aas
imul
and
shl
rolb
xor
jmp
pop
jbe
push
into
mov
imul
mov
pmulhw
mov
das
loope
bound
mov
scas
dec
sarl
cmp
rolb
dec
fistps
add
arpl
mov
mov
stos
or
loopne
adc
add
ja
addb
jecxz
outsb
mov
and
cmp
sbb
inc
cwtl
push
loopne
mov
hlt
imul
jnp
lea
add
inc
call
pop
pop
and
xchg
dec
stc
dec
or
add
loop
adc
in
out
cmp
add
aad
mov
mov
xchg
test
mov
sbb
mov
stos
andb
insb
idivl
test
xchg
int3
out
jns
roll
and
divb
es
int
loop
mov
dec
std
mov
xchg
pop
mov
frstor
int
cld
cld
daa
jmp
or
loopne
pop
jne
adc
rcrb
add
loopne
lods
outsb
mov
cmp
sbb
data16
addb
jp
into
xor
dec
xchg
adc
pusha
shlb
in
addb
frstor
and
adc
clc
lret
jae
fstl
mov
add
out
in
adc
push
cli
xchg
into
xchg
out
mov
sar
push
shlb
mov
and
or
pusha
dec
adc
inc
jmp
insl
or
pusha
xchg
sub
add
adc
pusha
and
nop
mov
rclb
push
add
lock
addb
addr16
jb
add
out
repz
and
bound
out
pop
nop
in
adc
xchg
out
out
shl
inc
pop
out
loopne
sarb
or
pop
lock
push
out
cmc
mov
inc
sahf
loop
mov
aas
movsl
dec
jbe
pop
test
loopne
sbb
daa
repz
mov
iret
lcall
int3
add
and
sub
dec
push
pop
rorb
xor
shr
cltd
adc
addr16
in
mov
arpl
enter
imul
repz
and
xchg
lahf
adc
lcall
out
pusha
mov
mov
mulb
and
cmp
shlb
shrb
lods
fimull
inc
mov
daa
sbb
leave
jg
and
aaa
cmpsl
test
lahf
pop
mov
cmp
mov
xor
sbb
dec
std
loopne,pn
mov
and
stc
in
inc
addl
loope
push
jb
inc
pusha
inc
addb
xor
loop
or
sbb
loopne
adc
push
add
fcomp
sbb
addb
lea
in
mov
mov
inc
push
xchg
jge
and
ficompl
mov
or
pop
ds
mov
jns
mov
xlat
inc
lods
pusha
and
and
add
add
xor
rorl
add
dec
or
push
cld
out
adc
mov
sti
jb
mov
icebp
lock
inc
add
out
pusha
mov
addb
nop
push
inc
sahf
xchg
fs
lds
xchg
adc
fdivr
mov
movl
rep
push
popf
insb
xor
enter
mov
insb
in
adc
pop
mov
mov
mov
mov
rolb
or
hlt
push
pusha
loopne
out
jns
mov
out
xchg
mov
dec
incb
ficompl
inc
out
div
and
jl
mov
jp
mov
push
and
loopne
pop
fsubrs
inc
rclb
sti
test
xor
or
and
cmp
add
mov
add
loop
pop
push
scas
and
jnp
jnp
add
xlat
fsubrl
inc
dec
int3
shlb
pusha
and
mov
and
sbb
std
add
xchg
dec
out
aad
addb
int3
mov
add
or
add
lods
jge
cmp
aas
dec
push
cli
insb
loope
adc
mov
dec
hlt
ja
pusha
inc
mov
inc
push
cli
rol
cltd
stos
andb
test
loopne
jl
idivb
or
shlb
out
repz
add
push
loopne
jecxz
cmpsb
pusha
add
xchg
add
inc
pop
test
xchg
mov
hlt
sub
mov
in
rcr
daa
iret
jge
lret
sarb
or
cmpsb
mov
adc
and
sbb
test
add
sub
imul
aas
ljmp
fstps
sbb
lods
xor
testl
loopne
dec
mov
imul
idivl
je
insb
addr16
mov
shlb
lods
and
outsl
mov
sbb
cmpsb
loopne
pop
cmp
and
sbb
sub
and
ret
test
push
and
pusha
lock
lret
jp
or
loopne
test
mov
and
out
insb
push
mov
sub
loopne
push
and
cmpsb
mov
inc
shrb
cmpb
cmp
lods
and
rclb
mov
mov
iret
test
sub
pusha
push
lahf
adc
and
mov
fwait
movsl
lods
mov
mov
add
push
or
inc
loopne
sbb
xlat
loopne,pn
mov
add
mov
inc
pusha
inc
outsb
std
mov
adc
jb
inc
and
inc
sub
push
inc
mov
out
ljmp
xor
add
xchg
fs
push
fnsave
movsl
mov
lret
mov
adc
cmpsb
loopne
in
mov
loopne
lock
sub
xchg
lret
and
andb
cwtl
scas
cli
add
pop
les
pop
sub
xor
ds
rorl
loope
jno
pandn
loope
cmp
dec
push
cmp
inc
and
and
add
sarl
push
out
jecxz
or
and
jp
pop
je
sub
pusha
push
cmp
sarb
mov
in
cs
inc
test
pop
lgs
push
xchg
test
rolb
and
mov
loopne
inc
adcb
movsb
and
mov
cmc
xchg
stos
mov
push
cmpsl
xor
push
mov
loopne
loopne
leave
rcl
push
addr16
or
cs
mov
mov
and
cmc
dec
push
loopne
arpl
mov
pop
fiaddl
pop
pop
or
add
movsl
xor
daa
cmp
es
sbb
sarb
pop
and
jge
andb
nop
pop
jns
lods
jno
cmp
push
or
pusha
push
push
and
shlb
pop
xchg
push
test
stos
rclb
inc
int3
pushf
push
mov
dec
push
xor
push
dec
cmpsb
loopne
popa
jecxz
mov
inc
stos
inc
sbb
lods
mov
es
add
lea
mov
mov
sahf
jp
pushf
sar
dec
ret
std
aaa
jle
stos
out
and
pushf
inc
cmc
inc
pop
gs
sbb
movsb
pusha
loopne
cmp
sbb
cltd
xchg
pop
dec
frstor
xor
mov
pop
add
inc
xchg
jmp
xchg
mov
pop
test
insl
insl
and
sub
mov
incl
sbb
cmp
sti
fdivrs
add
jno
and
mov
add
loopne
xchg
jne
das
add
push
inc
loopne
dec
add
fistpll
addl
mov
cmpsb
andb
jg
xor
sti
jl
mov
into
das
add
cmpsl
dec
sub
jo
and
dec
out
dec
das
sub
cli
pop
sub
shlb
and
xlat
cmp
jg
push
fwait
outsl
adc
inc
and
pop
fistpl
aad
cmp
shlb
test
pop
inc
clc
rclb
addl
sub
mov
stos
add
dec
sub
mov
inc
cmc
sti
fs
fmul
test
pusha
jmp
xchg
mov
inc
and
mov
inc
and
jnp
and
and
loopne
ret
fnstsw
enter
cmpsb
and
adc
mov
sbb
mov
sub
add
icebp
dec
pop
inc
sarl
testl
jmp
inc
add
push
loopne
andb
icebp
mov
xchg
cld
les
sbb
mov
mov
add
xchg
ret
and
sarb
mov
sub
sbbb
ljmp
push
pop
scas
and
cmp
fwait
adc
sub
pusha
sbbb
stc
and
orb
dec
jnp
or
push
in
stc
insl
mov
cmp
mov
mov
or
inc
inc
jecxz
jae
test
inc
sub
dec
js
jmp
xor
insl
push
outsl
lods
shlb
andb
fstpl
sub
subb
dec
xchg
rcll
scas
pusha
and
fidivl
or
loopne
jg
aaa
js
inc
mov
jno
lea
sbb
and
sbbb
push
das
inc
into
mov
and
mov
add
and
mov
mov
and
loopne
sbb
add
xchg
scas
add
stos
and
cld
ret
cwtl
lods
pusha
ror
pop
dec
dec
aad
cmp
lret
outsb
mov
pusha
rorb
fildll
sub
sub
lods
movsl
inc
inc
push
test
sub
dec
cwtl
repz
mov
addb
stc
cmpsb
pusha
shlb
rclb
push
lahf
out
test
shlb
xlat
ja
mov
pusha
inc
add
and
cmp
add
xor
inc
inc
sbb
mov
scas
add
andb
mov
aad
mov
scas
shl
xchg
inc
mov
and
and
xchg
mov
rorb
and
je
add
std
adc
add
out
adc
xor
testl
sbbb
jcxz
dec
jp
push
pusha
pusha
sub
add
push
or
mov
aaa
jg
dec
fs
dec
dec
inc
mov
lea
std
hlt
je
mov
or
inc
int
aad
jb
call
push
popa
fbld
int
push
pop
dec
adc
cltd
pushf
mov
addb
sahf
in
or
adc
inc
add
sarb
mov
inc
add
sbb
xor
adc
mov
mov
loopne
mov
pushf
int
dec
cld
lock
jge
mov
add
mov
mov
jg
fidivl
push
jmp
divps
cmp
cli
out
sub
xchg
mov
pop
mov
call
and
js
xchg
movsb
mov
gs
aaa
dec
mov
cli
imul
add
iret
outsl
jl
sbb
lret
or
fmuls
jp
cmp
inc
xchg
mov
cmc
mov
scas
sbb
jno
push
pushf
bound
mov
inc
and
scas
fs
lcall
xchg
das
push
xchg
push
outsl
nop
jge,pt
inc
gs
sub
inc
movsb
rolb
lret
movsb
mov
jle
mov
cli
jns
add
and
pusha
stos
and
sbb
sbb
loopne
mov
or
das
loop
popf
movsb
rolb
xchg
mov
mov
xchg
mov
xlat
mov
or
hlt
mov
pop
fwait
out
test
push
out
icebp
add
shrb
nop
xchg
cld
mov
cmpsl
pop
test
jg
ss
lret
shll
mov
and
subb
loopne
out
jnp
mov
xor
in
and
inc
cs
inc
lahf
xorl
pop
sub
mov
jmp
out
push
adc
xchg
repz
xchg
or
inc
or
jbe
fst
addr16
or
mov
stc
or
inc
jecxz
jne
mov
mull
cli
push
dec
dec
insl
out
jle
push
mov
hlt
fstl
inc
sub
xorb
sub
jg
dec
sub
int3
adc
ss
sub
pusha
inc
std
sub
inc
mov
gs
daa
inc
adc
inc
rorl
inc
pusha
int
push
cwtl
test
pop
jmp
push
out
pop
pop
lret
sub
shrb
sbb
out
xor
cltd
lea
add
pushf
and
mov
inc
push
mov
dec
sahf
jne
or
jno
cmp
setnp
pop
dec
and
repz
dec
scas
mov
mov
aam
inc
and
inc
pusha
push
pop
in
and
mov
mov
pop
pop
fwait
unpckhps
jp
dec
push
mov
or
add
jp
adc
in
loope
add
xor
subl
mov
pusha
and
loopne
andb
push
in
hlt
fisttpl
cmpl
sub
pusha
ss
sbb
imul
and
inc
adc
dec
xor
mov
andb
pop
mov
pusha
jbe
sbb
sahf
popf
dec
pop
or
inc
divb
ds
inc
cmp
and
std
call
fldcw
addb
sub
lock
cmp
rolb
bound
mov
fcomi
ljmp
inc
stc
xor
adc
arpl
clc
addb
jmp
inc
mov
inc
push
fdivrl
inc
ret
and
rorb
jne
outsb
cmpsl
sub
js
and
icebp
push
xchg
cmpsl
stos
loopne
stc
in
loopne
push
cmpsl
mov
mov
jmp
cmpb
sysret
mov
inc
shlb
mov
mov
jmp
sub
and
test
lahf
xor
xor
and
loopne
sbb
mov
mov
inc
aad
mov
fld
dec
movups
mov
adc
inc
loopne
xchg
or
pop
or
mov
clc
or
inc
mov
ret
aad
insl
iret
add
cmp
rolb
inc
mov
jl
mov
pop
fcompl
es
mov
into
cmc
push
mov
mov
jno
aad
xchg
push
inc
mov
and
test
push
pop
in
and
rorb
inc
pushf
aaa
and
out
push
fwait
jbe
xlat
sbb
ljmp
pusha
and
loope
xchg
mov
test
sbb
ds
mov
cmp
xlat
dec
movsl
je
jnp
and
mov
iret
mov
rclb
cmp
mov
mov
xchg
fistps
xchg
loope
push
leave
lret
mov
cmpsl
and
and
pushf
les
fildll
sub
inc
imul
jns
inc
add
push
xchg
adc
cmpsl
adc
les
xchg
fwait
xor
ret
in
inc
test
jle
dec
test
mov
fidivrs
incl
pop
insb
xlat
out
pop
ficompl
inc
in
sbb
pusha
pusha
addb
mov
sub
pusha
int3
lods
pop
inc
or
jl
mov
mov
sub
pop
lea
and
mov
sti
cmp
flds
shlb
adc
jp
pop
dec
inc
aad
in
xchg
add
push
jb
hlt
push
and
xchg
mov
or
clc
dec
add
and
mov
pusha
pusha
xchg
shlb
andb
and
call
pop
sbb
mov
jne
sbb
aaa
mov
mov
int3
mov
mov
ret
xlat
push
xchg
mov
mov
shr
insl
and
loopne
and
cmpsb
loopne
test
repnz
xchg
outsl
jnp
cltd
loope
mulb
mov
aam
ret
rolb
mov
xchg
into
xor
or
cmpsb
and
sbb
pusha
andb
flds
addb
out
cwtl
scas
das
andb
fs
xorl
cld
out
rolb
ret
sub
mov
mov
mov
mov
mov
lret
call
cmpsl
mov
lods
cmpsl
mov
jmp
mov
cmpsb
mov
pusha
lret
out
addb
cmp
mov
jl
inc
pusha
sbb
fdivl
loope
push
loopne
icebp
shl
in
movzwl
jl
adc
mov
sarb
cmp
push
sbb
std
repz
into
int3
aam
stos
andb
xor
outsb
push
sub
ss
jnp
lret
sahf
roll
rcl
iret
aas
cli
test
push
inc
mov
cwtl
sbb
loopne
cmpsb
add
dec
mov
push
push
bound
rolb
pop
inc
js
mov
popl
addb
rol
cmpsl
push
adc
push
fwait
pusha
cs
loopne
in
and
jmp
adc
xchg
jl
fdivrs
int3
leave
hlt
repnz
mov
jne
cld
test
and
dec
into
jo
xchg
sbb
inc
jnp
je
push
fnsave
mov
test
and
xorb
mov
shlb
sbb
test
shlb
and
and
jo
out
jmp
or
jl
mov
shl
pop
add
lea
in
or
mov
xor
add
cmpl
inc
xor
cld
and
hlt
jnp
in
cmpsl
cmp
jne
adc
dec
push
pop
mov
jmp
loopne
out
shll
repz
adc
cmp
xchg
scas
add
gs
les
mov
inc
out
outsl
mov
mov
mov
int3
or
shlb
push
stc
xlat
jg
loopne
dec
push
and
sub
xchg
in
filds
add
imul
in
cmp
sbb
jb
and
push
push
fcoms
or
cmpb
mov
dec
stos
and
test
pusha
xchg
or
and
add
xchg
xchg
mov
sbb
lret
dec
mov
addr16
rcrl
adc
cmp
inc
add
iret
pop
push
adc
addb
pusha
dec
xchg
jae
cmpsb
rolb
and
les
stc
sbb
lds
pop
push
mov
and
in
lock
push
adc
pusha
ja
pop
inc
cli
cmc
scas
add
in
outsl
adc
out
cmp
jo
dec
xchg
or
shlb
and
xorb
xchg
rorb
ljmp
ror
sbb
int3
cmp
leave
fxch
mov
ljmp
pop
imul
shlb
cmp
rcll
xor
mov
sub
loopne
inc
add
scas
test
leave
test
mov
pop
cmp
test
mov
cmp
test
mov
or
mov
mov
arpl
adc
lret
loopne
xlat
lods
mov
and
jne
pusha
loopne
fisttpl
fisubs
pop
and
pushf
mov
push
andb
xlat
dec
mov
loopne
or
dec
jb
popf
repz
and
pop
aaa
repnz
cltd
dec
xchg
ds
test
and
push
pusha
and
add
pop
iret
add
shlb
popf
lcall
dec
sub
pop
pop
jge
rorb
push
xor
fcoms
testl
cmpsb
rol
inc
mov
loope
inc
ret
icebp
daa
cmpsl
sub
xchg
dec
cmp
cmp
cli
lahf
insl
push
mov
movsl
pop
loop
scas
ljmp
inc
mov
and
addr16
jg
cmpsb
add
inc
and
mov
shl
or
cli
fxch
push
inc
pop
xchg
sub
add
loopne
loopne
cmp
outsl
icebp
loop
add
adc
repnz
dec
outsb
or
and
push
push
popa
ret
xchg
xorb
pusha
lcall
addb
jnp
lods
dec
gs
data16
xchg
sbb
or
pushf
rcll
push
in
ljmp
sub
and
dec
mov
loopne
pop
jle
dec
xor
dec
outsb
push
nop
add
inc
testb
fisubrl
and
gs
and
fdivp
out
notb
inc
pop
lock
push
cmc
lea
in
add
sarb
jmp
jb
rolb
add
shr
ss
gs
inc
inc
sub
leave
mov
dec
lock
push
bnd
pop
dec
or
xorb
shlb
leave
inc
movsl
jne
dec
sbb
add
pop
push
add
movsb
mov
arpl
dec
jge
addr16
push
adc
mov
sahf
add
loopne
or
xor
stc
cltd
xchg
hlt
or
and
loopne
loope
jno
sbb
or
in
add
scas
nop
pop
push
mov
pop
inc
xchg
jg
insb
push
loopne
dec
lret
add
fmull
mov
shlb
pusha
cmpb
loop
push
adc
inc
into
or
addb
dec
lds
jb
inc
xorl
mov
jbe
lds
sbb
jns
push
inc
and
cmpsl
inc
xchg
and
shrb
mov
rol
mov
je
xchg
pop
sbb
outsl
xacquire
stos
shlb
xor
out
or
test
add
movsl
mov
mov
imull
cmp
fisttpl
in
mov
mull
mov
popf
pop
ret
imulb
loopne
scas
loopne
pop
push
dec
je
pusha
loopne
cmp
ret
add
fmull
jge
enter
rolb
inc
sub
arpl
adc
inc
jb
or
pop
data16
push
lcall
pop
clc
lret
cli
push
fs
aad
pop
repnz
mov
mov
mov
in
aam
mov
push
mulb
push
fidivs
int3
pop
mov
or
sbb
ret
inc
push
inc
jb
mov
xor
inc
inc
mov
mov
mov
mov
sbb
sub
andl
mov
shlb
js
ds
stos
jp
cmp
rcrl
inc
or
add
out
repz
jp
lcall
cmp
andb
mov
shl
in
clc
arpl
rcrb
pop
mov
pop
inc
cmp
mov
and
popl
and
mov
je
push
inc
test
pusha
fdivrs
loopne
xchg
jle
mov
jno
pop
sbb
outsl
fidivs
movsb
and
xor
push
inc
shrb
andb
in
adc
mov
cmp
adc
outsb
mov
loopne
fsts
cmp
mov
xor
popa
mov
rorb
int
iret
hlt
jge
or
add
hlt
mov
subb
mov
cmpsl
fisubs
loopne
test
loopne
loopne
jbe
shlb
cmp
jbe
aas
pop
pop
pop
pusha
insb
fimuls
clc
lea
mov
mov
xchg
rep
mov
jl
fwait
add
inc
in
add
jp
pusha
and
test
rorb
sub
add
sahf
mov
mov
add
js
addb
push
dec
mov
inc
pop
stos
addb
cli
lret
sarb
idivb
adc
sub
ret
or
fidivl
shrb
jnp
lret
into
xor
mov
mov
cmpsl
mov
jecxz
push
mov
push
lock
adc
push
xchg
stos
test
pop
cli
and
and
fisubrl
jno
or
cwtl
aam
enter
mov
jb
inc
loopne
mov
mov
inc
and
cmp
adcb
mov
aaa
push
mov
dec
icebp
pushf
sbb
popf
jb
ja
cmp
or
and
out
adc
mov
mov
and
and
data16
sub
mov
pop
xor
stc
cmp
mov
pusha
test
loopne
add
xor
inc
loopne
push
mov
mov
add
pusha
sub
repz
push
adc
ret
fsubl
pop
aas
mov
je
inc
add
sbb
pop
mov
mov
pusha
and
xchg
mov
ret
fldcw
mov
pusha
adcl
mov
mov
jmp
insb
dec
aad
stos
loopne
cmp
outsb
in
test
add
mov
sti
inc
or
pusha
shlb
mov
addb
push
addb
jbe
xlat
xchg
xor
xor
xchg
push
sbb
or
add
and
popf
fnstenv
int3
sbb
js
pop
jnp
mov
add
test
pusha
loop
rcrb
mov
pusha
add
loopne
fwait
mov
addb
pop
out
push
xchg
addb
lret
lods
and
and
cmpb
inc
mov
add
loop
loopne
cmp
fcompl
call
loopne
lock
jmp
call
dec
pop
pop
inc
xchg
xchg
insl
scas
and
lds
in
mov
jmp
pusha
loopne
sub
inc
aas
mov
mov
cs
mov
mov
jae
loopne
test
mov
js
addb
pusha
and
pop
push
fs
loopne
cmovs
scas
add
jnp
xor
or
and
gs
pop
cld
pop
gs
add
cmpsb
inc
add
add
loop
push
orl
stos
in
jg
dec
js
xchg
shl
incb
mov
mov
inc
adc
pusha
pusha
fstpt
fnstsw
mov
js
cmp
xor
in
stos
cmc
popf
lock
andl
jns
dec
imul
mov
xlat
call
shlb
iret
scas
pusha
loopne
outsl
xor
stos
aas
lods
pusha
add
jbe
ret
add
test
mov
xchg
mov
es
shr
cmpsb
inc
loopne
mov
out
cltd
icebp
xor
xchg
add
addl
lds
xor
or
stos
or
cli
lods
loopne
adc
dec
push
pusha
mov
push
iret
adc
cltd
mov
dec
scas
shl
xorl
repz
or
jne
incb
add
sbb
dec
and
cli
leave
xchg
loopne
fbld
hlt
scas
and
enter
stos
inc
mov
add
dec
mov
push
in
shlb
add
add
inc
insb
jmp
les
jne
loope
pop
push
add
mov
movsl
xchg
cmp
inc
add
adc
pop
sub
pop
fists
xor
mov
mov
add
pop
rep
jno
lahf
or
and
mov
repz
lcall
or
push
les
jg
push
xchg
mov
inc
inc
sarb
inc
push
or
cmp
mov
adc
pushf
xor
mov
cmpsl
adc
and
add
inc
lahf
stc
mov
movsb
loopne
cmp
pop
sbb
pusha
das
pop
add
or
loopne
push
into
mov
pop
mov
movsl
mov
xchg
pop
mov
inc
and
fisttps
test
imul
sbb
push
and
imul
add
and
loope
outsb
out
popf
rol
sub
mov
sub
inc
scas
pusha
add
mov
addb
mov
push
out
or
shl
jb
shrl
xchg
mov
movl
add
enter
jne
and
cmpsl
mov
cltd
mov
idivb
mov
bound
pushw
pusha
sub
mov
jnp
daa
inc
and
inc
pusha
mov
ljmp
mov
cmp
mov
push
idiv
in
es
jae
mov
mov
xchg
jo
test
orb
test
fcoml
pop
mov
pusha
and
inc
pop
daa
jo
add
jmp
inc
pusha
or
and
lods
mov
xchg
or
fildll
push
jb
hlt
cmp
dec
jg
pop
lock
sub
fsubr
xchg
and
in
push
add
dec
and
push
loop
loopne
mov
xchg
das
cli
scas
and
mov
out
inc
inc
fcompl
dec
das
dec
sbb
pusha
sub
mov
andb
movsb
loopne
mov
sub
pusha
mov
scas
jne
add
adc
lcall
pop
aam
xchg
mov
inc
mov
and
imul
and
cmpb
jp
in
mov
out
aaa
cmp
jg
rol
xchg
lcall
cmp
lock
addb
inc
pusha
lret
enter
pop
mov
add
cmpsb
loopne
pop
jle
mov
and
sub
pusha
testb
add
push
rol
jns
int
mov
cmp
fsubrp
dec
dec
mov
pop
daa
or
shrb
pop
fs
sbb
mov
loopne
jnp
sbb
add
sbb
repz
aas
sub
add
mov
mov
rcrl
add
ljmp
fdivrs
pop
jg
je
andl
addb
cmp
aaa
add
and
pop
sbb
sub
pusha
and
out
inc
sbb
pop
faddl
stos
add
mov
mov
loopne
out
call
mov
movsb
and
pop
or
sub
jns
jo
out
leave
cmp
mov
or
sbb
rolb
jbe
test
and
and
mov
jne
mov
rolb
popl
movsb
inc
xorb
pop
sarl
pop
or
sub
and
and
jnp
sbb
pop
imul
dec
lds
hlt
mov
cmpsl
jl
sti
lds
push
and
fwait
jb
loopne
sbb
lds
stos
add
test
add
xor
cwtl
out
add
inc
or
add
and
es
inc
div
inc
loop
push
lcall
popa
icebp
cmpsb
and
cmpsl
test
push
addb
mov
add
sbb
lret
push
or
add
sbb
sti
inc
or
or
shlb
arpl
or
sub
pusha
pusha
xchg
and
lcall
rolb
sub
adc
lret
popf
outsl
addr16
mov
andb
repz
jg
pop
fmul
imul
xchg
mov
pusha
mov
rolb
inc
add
inc
jo
ss
jae
andb
insl
sbb
adc
clc
inc
mov
jbe
cmp
xchg
add
sbb
rolb
mov
fisttpl
lahf
push
mov
push
sbb
and
cwtl
mov
dec
in
push
inc
inc
rcr
fwait
jmp
sub
mov
or
mov
inc
pop
jmp
repz
push
add
adc
or
and
xor
xlat
sti
adc
mov
ja
dec
lock
push
cli
mov
loopne
push
push
mov
cmp
xchg
into
jge
dec
xchg
test
and
inc
mov
out
mov
push
pop
xchg
xor
cmp
je
and
aaa
mov
hlt
loopne
cmpl
divl
js
add
orb
mov
and
xor
andl
test
inc
daa
mov
and
inc
imul
popf
imul
and
in
aas
in
sub
sub
aas
or
pop
rorb
outsb
shlb
cmpsl
add
cltd
cmp
mov
push
ljmp
push
pop
inc
cmp
rorb
rcrb
pusha
mov
xor
mov
cld
push
dec
inc
icebp
icebp
jns
add
je
ja
into
add
aaa
xchg
jmp
mov
mov
rolb
in
xchg
pop
mov
cwtl
mov
pop
cmp
adc
out
in
mov
addr16
pushf
fildl
cmp
lret
hlt
lods
mov
inc
loopne
jb
pusha
loopne
xchg
lods
xchg
cld
movsl
push
popa
popf
cmp
loopne
push
es
adc
mov
fcompl
outsb
xchg
jns
lods
mov
dec
outsb
and
shll
jle
mov
jp
sahf
hlt
sbb
pop
inc
test
into
mulb
xchg
jno
pushf
popa
push
clc
mov
add
sub
pusha
lahf
insl
in
mov
push
cltd
sbb
lahf
mov
xchg
adc
sub
cmp
jl
ficoml
dec
xchg
fsubs
pop
call
mov
jp
pop
stos
loopne
adc
inc
push
mov
mov
and
add
shlb
add
pop
jl
mov
bound
in
mov
jge
repz
ret
neg
xchg
fisubl
loopne
adc
loope
cld
push
push
push
mov
xor
ja
int3
add
loope
inc
inc
decb
aam
das
sub
loopne
or
fisubrl
inc
adcb
js
testb
and
push
mov
lret
adc
and
ret
pusha
and
addb
cmp
sbb
imulb
sub
fcmove
and
loopne
lcall
decl
or
mov
sar
outsl
out
vfrczps
adc
mov
stos
add
adcb
stos
add
mov
aaa
ret
add
in
loopne
jo
cmp
js
inc
cmpb
pop
push
cmp
enter
insl
scas
repnz
shrl
push
mov
mov
movsl
mov
nop
inc
sub
loope
adc
jo
test
pop
notl
push
and
mov
mov
int
cmp
in
scas
mov
sbb
mov
adc
scas
add
shrl
andb
inc
inc
addr16
out
cmp
outsl
mov
inc
gs
mov
cltd
aaa
or
shll
xchg
ret
ud0
addr16
loopne
test
and
inc
cwtl
loopnew
aam
in
mov
cmc
fnstcw
cld
cmpsb
shlb
dec
sahf
ret
sbb
mov
jge
shlb
jbe
dec
or
loopne
arpl
pusha
stos
jg
movsb
mov
jbe
pusha
subb
xchg
into
test
inc
mov
roll
gs
and
add
rorb
fwait
dec
les
push
xlat
out
hlt
jbe
xchg
cwtl
cmpsl
jbe
hlt
add
and
loop
in
fbld
jge
xor
and
dec
and
sub
sub
fidivrl
push
and
jg
lea
dec
aam
mov
mov
cmc
jl
push
inc
and
pop
std
pop
aaa
fldenv
pushw
mov
dec
aad
jp
and
cwtl
dec
lahf
dec
xchg
dec
mov
shrb
sub
add
repz
leave
dec
mov
dec
mov
testb
loopne
push
sub
insl
ja
mov
rdpmc
loope
mov
pusha
cwtl
aaa
inc
mov
stc
jecxz
sbb
mov
mov
orb
or
cmpsb
pusha
add
loopne
loopne,pn
repnz
arpl
jae
lods
mov
push
push
or
ljmp
pusha
inc
scas
lret
mov
lahf
lds
in
cmp
jbe
int3
push
popa
push
and
rorb
adc
or
pusha
push
sbbl
mov
inc
imul
repnz
nop
sbb
add
lods
or
orb
or
add
and
adcb
imulb
xchg
dec
jmp
daa
cmp
pusha
xchg
gs
mov
roll
inc
cs
inc
loope
shrb
add
ret
push
je
es
stc
push
sbb
add
imul
jg
add
out
lahf
and
inc
shrb
xor
pusha
xorb
cmp
and
stos
addb
fwait
pop
pop
insw
aas
pop
xchg
lock
dec
out
fimull
add
popa
movsl
data16
push
xor
leave
loopne
mov
ror
mov
mov
jl
jae
lcall
pop
pop
scas
cmp
movl
inc
loopne
js
jp
out
adc
xchg
jnp
or
clc
xor
lock
aas
mov
fxch
xchg
mov
add
adc
iret
andl
inc
pusha
push
mov
mov
push
mov
stc
and
xorb
add
leavew
sbb
shll
adc
jl
jb
inc
je
movups
inc
and
xchg
movsb
andb
gs
push
sub
ds
and
daa
inc
push
imul
cs
outsl
loope
jbe
ret
jp
fcmovne
inc
mov
sahf
sbb
dec
or
out
fcomps
stc
adc
mov
aam
je
cmp
sbb
jns
iret
mov
jecxz
and
imul
cmp
and
andb
sbb
fmull
inc
fnstenv
adc
mov
call
mov
inc
js
loopne
push
mov
jg
fisttpl
fsubl
sub
pusha
rclb
mov
push
shlb
or
mov
shlb
pusha
mov
mov
repnz
add
sbb
jo
adc
int
cs
mov
jmp
fmuls
or
or
mov
jle
fisttpl
inc
loopne
mov
daa
imul
daa
xor
mov
loope
jmp
je
hlt
aas
jmp
popl
mov
aaa
arpl
add
fldcw
pop
push
js
lea
insl
xchg
fsub
mov
rolb
and
and
mov
and
dec
inc
rcrl
mov
xchg
pusha
push
pushf
push
mov
push
pop
and
xchg
in
sbb
jno
push
xchg
stc
jmp
loopne
mov
add
fwait
mov
sbb
fdivs
pop
xchg
xor
test
and
dec
inc
push
sbb
fs
imul
leave
outsb
psllw
dec
adc
stc
jae
and
xchg
sbb
dec
daa
andb
push
gs
mov
add
pop
lahf
bound
mov
loopne
mov
test
push
jg
ljmp
and
dec
cmp
orl
lcall
bound
jmp
add
xor
or
add
enter
lcall
rcl
fs
or
data16
loope
pop
dec
int3
loop
inc
adc
lahf
sub
jle
jbe
stos
arpl
xchg
rolb
jecxz
jg
icebp
and
and
mov
inc
loopne
jb
loop
push
mov
andl
inc
add
or
and
cmc
daa
shrb
add
hlt
xor
pusha
inc
or
add
mov
cmp
rol
ret
dec
fucom
out
insb
std
xor
test
pusha
icebp
nop
or
mov
xchg
cmpsb
add
and
in
mov
loopne
jle
push
push
and
dec
dec
in
inc
or
jns
sbb
push
test
and
dec
push
ret
xchg
or
jl
fbld
and
addb
rcrl
sbb
imul
loopne
jp
loopne
enter
sti
shl
push
in
xor
xchg
add
and
add
fldt
mov
loopne
cld
cmp
insb
fnstsw
or
pusha
lret
xor
mov
mov
out
jecxz
out
cmp
pusha
add
jae
pusha
and
xchg
push
and
mov
in
or
mov
leave
dec
or
inc
loopne
or
lret
and
add
mov
sti
enter
push
mov
shlb
push
outsl
ja
mov
mov
xchg
lock
inc
mov
sub
subb
add
rol
stc
std
xchg
add
sbb
rolb
subl
mov
dec
and
mov
sti
rorb
cmp
xchg
dec
push
add
pusha
mov
jno
push
mov
lods
inc
loopne
jb
mov
xchg
inc
inc
add
rcrb
addl
inc
inc
inc
add
xchg
andb
mov
dec
pop
push
int
pop
movq
add
mov
or
data16
ret
and
inc
lods
imul
addb
and
out
repnz
cltd
jecxz
lea
out
xor
fisubrs
pusha
dec
push
or
inc
int
xlat
or
adc
and
xchg
test
pusha
mov
in
sti
lahf
push
loop,pt
jecxz
xor
pop
pop
or
push
pop
repz
loopne
ds
push
xchg
jo
in
xor
push
rol
aaa
adc
inc
push
aas
movsl
adc
add
dec
shl
inc
jno
mov
add
push
mov
pop
in
jns
and
pusha
repnz
pop
sarb
repnz
nop
mov
jo
nop
push
sahf
jno
push
jns
das
arpl
mov
mov
lock
andb
sbb
roll
inc
and
sbb
and
loope
inc
pop
jp
icebp
sub
add
rolb
xchg
stos
leave
sub
and
repnz
rolb
pusha
subb
pusha
call
push
fdivrs
mov
in
addb
aaa
psrld
stos
testl
data16
and
mov
adc
mov
inc
sbb
out
mov
add
mov
rclb
arpl
pop
cmp
add
add
jno
mov
movsb
mov
dec
pop
xchg
lods
lret
rcll
push
repnz
enter
fimull
dec
mov
mov
xchg
ss
add
jmp
dec
imul
das
fsubrs
or
pusha
mov
test
add
xchg
into
xor
aas
jbe
jo
and
push
sarl
dec
add
loopne
mov
sti
stos
into
bound
sbb
bound
pop
mov
movsl
push
jmp
lods
dec
aad
insl
hlt
testb
and
push
add
inc
sbb
pop
add
xlat
add
inc
mov
pop
ljmp
mov
pusha
sar
or
sub
rcrb
test
pop
icebp
fwait
sahf
jmp
cmpsb
loopne
jge
push
sub
sbbb
add
test
and
outsl
xor
inc
jmp
rol
dec
pop
xchg
fbld
std
mov
ljmp
mov
inc
cli
sub
pop
inc
mov
xchg
cmp
lret
mov
mov
hlt
mov
adc
sbb
das
adc
xchg
cmp
loopne
mov
rolb
pop
fstpt
int3
xchg
std
cmp
pop
mov
mov
push
repnz
cmp
andb
pop
clc
jp
out
push
test
or
add
add
pop
outsb
jne
xchg
scas
cmp
scas
rolb
pushf
int
xor
idivb
xchg
mov
mov
and
cs
and
aas
sarb
in
ljmp
push
xor
je
mov
and
lret
pop
pop
xchg
pusha
fs
jae
xchg
xchg
jp
mov
pusha
das
fdiv
pop
cmp
out
out
insl
ja
test
test
andb
push
les
int3
dec
xor
inc
pop
push
aad
and
sbbb
push
push
hlt
push
inc
leave
mov
in
add
dec
inc
dec
jnp
push
mov
inc
adc
pusha
mov
sahf
shrl
inc
rorb
rolb
or
loopne
and
inc
mov
pop
push
clc
mov
inc
or
add
cmpsl
push
jmp
es
loopne
inc
pusha
or
jmp
or
inc
andb
andb
sub
aaa
xor
mov
inc
xchg
jmp
mov
data16
mov
dec
mov
add
shl
add
inc
loopne
push
push
popf
add
orb
push
loop
pop
orl
lock
xor
repz
add
sub
sub
adc
push
push
and
pop
lahf
int
jl
shlb
out
cmc
iret
cmpsl
inc
rcll
add
push
sarb
sahf
dec
mov
pusha
loopne
ret
int
cmp
subl
jbe
inc
addb
push
jae
pop
push
imul
sub
imul
les
pop
lock
mov
loopne
adc
enter
inc
cmp
std
mov
cmpb
add
add
mov
inc
or
ret
out
dec
arpl
mov
jl
test
cmp
or
icebp
jle
jge
mov
and
and
shlb
xor
and
jmp
in
jmp
sbb
mov
add
xchg
dec
je
cmpsl
loope
mov
popa
mov
mov
add
out
adc
je
inc
shlb
loopne
mov
scas
pusha
loopne
sti
arpl
in
add
and
xchg
add
icebp
jmp
sti
loopne
fnstenv
inc
and
lock
add
pop
fs
mov
movsb
add
add
sahf
inc
andl
mov
dec
or
cmp
loope
pusha
inc
inc
adc
and
sarb
and
mov
and
or
inc
pop
stos
jo
mov
loopne
cmpsb
inc
loopne
cld
xor
mov
mov
mov
cld
mov
push
inc
mov
repz
cmp
cld
dec
sbb
push
roll
test
jmp
repz
xor
inc
fwait
mov
sti
addb
loopne
lods
xor
lds
hlt
jo
jns
divb
pusha
add
andb
mov
adcl
dec
or
or
addb
add
loopne
jle
xor
pop
aam
xchg
enter
and
test
adc
outsl
cwtl
pusha
loope
xor
insb
add
pusha
jmp
ret
adc
push
rol
rolb
loopne
pop
sbb
xchg
xchg
std
imul
test
rclb
jmp
jne
icebp
lds
inc
call
popa
xor
mov
js
jmp
xchg
dec
addb
dec
xor
xchg
add
and
fidivrs
xor
and
std
in
mov
or
xorb
and
push
stos
jecxz
cs
add
mov
add
jbe
inc
nop
imul
rolb
inc
fwait
dec
ljmp
aaa
sbb
cmp
test
mov
sbb
mov
insb
testb
out
rclb
mov
xchg
push
inc
rclb
je
cld
sub
loopne
lock
cmp
fs
sbb
xor
insl
fs
xor
push
in
and
and
xchg
xorb
xor
inc
push
movsb
and
mov
mov
xchg
dec
push
mov
push
cwtl
or
mov
inc
add
inc
dec
std
mov
rclb
sbb
icebp
imul
xor
imul
jne
jp
out
mov
mov
pusha
jle
icebp
mov
fidivrl
jno
inc
inc
call
push
out
add
mov
cwtl
pop
inc
in
mov
loopne
jne
adc
outsl
dec
xchg
jb
popf
sbb
fsubrl
loopne
ljmp
shl
fistpll
sub
rcrb
xor
jp
mov
inc
push
mov
sbb
ljmp
jne
lock
add
mov
and
jno
xchg
loopne
mov
cmpsb
pusha
add
sub
mov
hlt
popa
lea
sahf
pop
and
loopne
sbb
rol
mov
addb
pusha
adc
mov
loope
add
inc
mov
dec
and
and
cwtl
imul
repz
cmp
pushf
frstor
outsb
push
xor
pusha
loopne
sub
ror
repz
inc
andb
add
loopne
movsb
and
xchg
jbe
add
cmpsl
int3
xor
mov
rcl
mov
inc
inc
stc
dec
or
inc
mov
ljmp
jp
adc
iret
out
lods
rolb
inc
imul
mov
or
push
andb
mov
popf
shl
xchg
aaa
and
and
inc
loopne
test
rcrb
pop
adc
test
jbe
inc
pusha
dec
mov
stos
rolb
pop
dec
lods
fsts
daa
ret
add
xchg
jl
test
xor
sahf
sub
inc
aad
inc
add
loopne
shll
xorl
rolb
mov
insb
jb
loopne
ds
mov
xor
push
mov
sarb
xchg
xchg
lahf
inc
lret
repz
aaa
out
add
adcl
rolb
and
movb
addb
pop
lods
std
inc
cltd
mulb
shl
sti
lret
pop
xchg
and
frstor
loopne
popa
dec
or
inc
mov
arpl
lahf
xchg
cmp
mov
jbe
add
addb
and
aad
push
cmc
inc
stos
add
in
xchg
popf
icebp
addb
jo
stos
add
out
inc
jno
adc
nop
jns
add
jb
xchg
lods
mov
add
mov
mov
rclb
jne
inc
cmpb
push
xchg
mov
movsb
and
dec
les
mov
lea
outsl
aaa
ss
sub
cwtl
cwtl
lret
jbe
test
xorb
insb
call
cmp
pusha
pop
cmp
js
negl
mov
lods
mov
pop
and
and
sbb
dec
negl
pusha
rolb
adcl
cmpsb
inc
inc
jg
add
inc
gs
insb
lock
add
push
outsb
mov
imul
cmp
add
mov
add
rolb
ds
pusha
rolb
pusha
data16
sbb
pop
faddl
xor
popl
inc
and
sbb
add
loopne
les
mov
push
rol
or
inc
jno
jge
je
or
dec
jnp
in
xchg
aam
pusha
lcall
push
dec
xor
bound
add
jmp
mov
aam
xchg
push
insl
das
fwait
sub
sahf
ficomps
lahf
repnz
mov
jecxz
aas
adc
pop
mov
movsl
out
mov
rcrl
sbb
shrl
and
ds
mov
inc
push
xlat
add
mov
test
inc
in
and
pusha
leave
jp
lcall
add
mov
into
jo
and
mov
cwtl
xlat
sub
loopne
adc
xor
xor
jns
mov
jge
into
mov
pop
sub
rcrb
pop
mov
inc
inc
movsl
lods
and
loopne
rolb
pusha
inc
or
and
jnp
add
xchg
mov
push
loopne
jecxz
mov
add
js
test
jmp
dec
fwait
sub
inc
add
andb
or
and
arpl
mov
popf
sub
mov
add
sahf
cmpsl
inc
addr16
jl
rol
fs
in
lcall
add
adc
xchg
fwait
jmp
pushf
add
mov
inc
out
rol
rolb
negb
pusha
mov
int
push
pop
fistpll
pop
lods
addr16
loopne
inc
cmp
cmp
and
stos
mov
mov
ja
mov
and
sarl
insl
cmpl
fistpl
sbb
lods
add
dec
push
pop
jp
jge
maxps
lret
and
jp
cmpsb
and
stos
mov
and
int3
mov
mov
jg
mov
and
mov
jge
lods
shlb
mov
jge
jnp
add
stc
pop
movsb
rolb
push
aam
clc
or
add
jecxz
push
adc
mov
arpl
arpl
mov
idivl
pusha
adc
out
leave
sbb
add
sahf
push
out
jl
lods
or
sarl
xor
test
mov
nop
icebp
pop
test
add
inc
je
pusha
mov
mov
and
test
mov
cmp
lock
and
inc
mov
mov
pusha
adc
fwait
sub
and
addb
shlb
shl
push
int3
and
mov
push
sub
and
in
jge
jecxz
popf
cwtd
pop
xchg
sub
into
mov
xchg
inc
jle
rolb
dec
mov
out
sub
sti
mov
lcall
aam
leave
into
jne
rol
pusha
pop
sbb
adc
aam
inc
lret
push
rolb
sub
andb
test
inc
ljmp
ss
int3
inc
mov
add
pop
push
jge
out
or
hlt
adc
out
dec
shr
outsl
xchg
mov
int
lret
out
adc
jle
mov
inc
xlat
arpl
fprem
pop
loope
add
sub
dec
in
repz
movsb
pusha
mov
mov
andb
or
add
push
pusha
mov
push
push
push
and
pop
sbb
loopne
sub
inc
pusha
mov
add
jae
or
jb
outsl
xor
adc
jns
scas
loopne
sub
push
lret
pop
xchg
movsb
and
ds
pop
and
pop
jno
insb
aas
movsb
rol
repz
loopne
xchg
xlat
mov
fisubs
loopne
loope
inc
push
mov
jle
add
or
test
pop
in
push
and
sti
insb
test
mov
mov
adc
push
cli
fsubrl
pop
call
imul
loopne,pn
and
sbb
shl
cmc
add
jge
mov
popa
mov
mov
test
pusha
pop
rorb
loopne
mov
mov
mov
mov
stos
or
pusha
rcrl
sarl
push
int3
jle
jnp
mov
adc
pusha
mov
mov
pop
or
lods
mov
mov
js
sbb
test
add
repnz
test
pop
out
in
xchg
sbb
jmp
cmc
push
xor
and
insl
andb
leave
pusha
jl
js
mov
cmp
stos
shl
sbb
pusha
xchg
mov
mov
les
jp
loopne
pop
fbld
sub
ja
mov
push
js
fmul
mov
mov
push
out
push
push
lret
inc
fs
in
dec
ss
rcl
jno
xchg
inc
loope
or
out
xchg
inc
rorb
mov
inc
add
inc
jle
mov
add
mov
cmp
mov
shll
push
mov
bound
sub
les
jb,pt
ds
orl
sub
inc
gs
lahf
xchg
jecxz
dec
pop
mov
push
jbe
adc
sbb
shrb
push
lds
mov
cmpsb
shlb
daa
lret
lcall
dec
mov
sar
xor
pop
pop
das
ljmp
mov
faddl
int
add
sub
mov
arpl
test
add
rolb
daa
lret
in
test
incb
movsl
jecxz
out
pusha
loopne
sahf
mov
scas
loopne
imulb
inc
leave
ljmp
bound
inc
add
movsl
pop
xchg
xchg
adc
sti
ret
xchg
and
xor
inc
icebp
sbb
enter
push
mov
loop
pop
int
je
cltd
sbb
popa
mov
popa
jb
adc
gs
lahf
pushf
mov
cwtl
cmp
cld
jge
jmp
mov
rolb
mov
cmp
push
enter
add
ret
push
dec
fstpt
sub
mov
push
popf
pop
mov
aaa
mov
cwtl
jle
push
cli
test
loope
mov
inc
or
add
inc
add
adc
sbb
xchg
lret
mov
xor
xchg
push
inc
fmull
cmpsl
adc
and
inc
sub
and
xchg
inc
mov
and
jle
sbb
daa
ljmp
add
sbb
push
popa
jne
add
pop
cmpsb
and
lock
mov
andb
scas
and
and
inc
in
out
aad
ljmp
cld
jge
mov
loopne
imul
addr16
in
movsb
pusha
sarb
inc
rorb
rorb
inc
mov
jg
js
stos
push
adc
mov
js
xchg
scas
xor
push
lahf
and
mov
mov
push
xchg
repz
inc
lcall
add
mov
push
das
lcall
test
clc
cltd
and
mov
rolb
sahf
rcll
test
lea
ja
rcr
call
pusha
pusha
jl
sahf
add
mov
pop
sub
and
inc
mov
and
lea
mov
data16
pusha
cld
cmp
loopne
pop
xchg
lds
imul
jmp
imul
ror
mov
jg
andb
subl
movups
push
push
add
scas
push
add
xchg
jns
dec
sub
mov
loopne
adc
je
loopne
or
rol
or
xchg
scas
shlb
dec
cld
xlat
mov
rolb
push
jne
mov
and
mov
in
fildll
mov
mov
add
inc
inc
outsl
lds
push
mov
repz
mov
testb
mov
fnsave
sbb
jns
mov
imul
jnp
fisttpl
add
in
clc
mov
cmpsl
push
inc
add
leave
cmp
sahf
out
or
js
adc
pop
mov
movsl
repnz
mov
dec
jno
or
pusha
loope
add
add
loopne
jl
imul
lahf
fildll
ret
ret
sahf
addr16
mov
loopne
loope
inc
add
mov
pusha
jl
push
adc
fiaddl
or
push
jmp
cmpsl
popf
je
push
pop
fwait
xlat
jne
dec
cmp
outsl
xchg
xchg
add
xchg
sub
out
rclb
xchg
cli
imul
pop
add
inc
in
inc
in
xchg
loope
scas
shlb
xchg
xchg
aas
cmp
loope
xor
daa
ret
loopne
add
and
aaa
mov
rcll
jae
shlb
call
shlb
mov
add
clc
shlb
enter
adcl
fadd
fwait
inc
and
inc
lods
add
rcll
popa
jl
and
mov
and
xchg
ret
pop
cltd
mov
pop
scas
andb
inc
mov
add
inc
dec
bound
push
mov
mov
lret
mov
push
mov
pop
loop
add
fcmovnu
cmp
andb
shrb
pusha
andb
sub
sub
cmp
dec
dec
or
add
or
inc
shll
xor
loopne
pop
lahf
pop
push
pusha
mov
sahf
insl
mov
fsubrs
inc
loopne
lods
add
add
inc
cld
mov
fsubs
out
nop
inc
pop
loope
js
mov
and
mov
mov
push
and
test
jmp
sub
lcall
add
mov
pusha
pusha
pop
mov
roll
rcl
pop
sbb
and
pop
xor
loopne
icebp
movsl
and
pusha
and
scas
add
mov
and
mov
jno
jne
mov
pop
sbb
and
jmp
andb
jmp
pusha
inc
sbb
clc
mov
jg
les
fcomip
sub
shr
test
mov
shll
pop
test
sbbb
jns
add
mov
jo
add
mov
pop
cmp
mov
and
mov
xchg
loopne
adc
sub
adc
scas
pop
push
inc
jnp
mov
pusha
test
inc
sub
xor
push
mov
xchg
pop
or
inc
lds
mov
add
sbb
add
sub
arpl
and
xchg
es
pusha
test
xchg
dec
sarl
xchg
aaa
test
shrb
and
and
or
iret
insb
daa
outsb
inc
jp
popf
lcall
pusha
loopne
mov
add
mov
mov
mov
cmp
or
loopne
loopne
add
push
push
aaa
adc
cmp
cltd
xchg
sbb
or
pusha
daa
jl
xchg
mov
pop
mov
and
cmpsl
push
mov
sarb
popa
xor
and
outsb
adc
and
pusha
out
adc
mov
cmp
addr16
fists
rorb
push
roll
repnz
ljmp
cmpsl
jb
shlb
adc
repnz
rol
and
loopne
imul
jge
andb
pop
ss
jl
imul
std
mov
cmp
loopne
and
loopne
call
roll
in
and
ljmp
fwait
je
ret
ret
xor
mov
mov
add
sbb
inc
loopne
xchg
adc
xchg
insb
cld
inc
ljmp
in
mov
and
rorb
js
in
fidivs
inc
pusha
add
lds
add
pusha
push
mov
mov
pusha
jmp
mov
fmull
cmp
xor
inc
fbld
inc
loopne
in
sti
xlat
mov
cmc
or
pusha
push
rolb
inc
add
mov
xchg
shr
es
mov
insb
xor
loopne
or
xchg
iret
js
mov
mov
mov
and
inc
lds
shrb
and
and
aas
jmp
and
enter
pusha
sarl
es
pusha
andb
insl
mov
inc
or
inc
sub
add
andb
pop
mov
loopne
xchg
loope
add
shlb
mov
shlb
and
mov
pop
jl
cld
pop
or
cld
xchg
and
mov
sbb
popa
push
add
or
push
jnp
inc
das
mov
loopne
shl
xchg
in
out
xchg
sahf
nop
inc
test
mov
loopne
enter
mov
mov
int
xor
insb
stc
dec
dec
xchg
rclb
sub
add
inc
daa
aaa
jno
cmc
xchg
sub
mov
xchg
mov
push
sub
pusha
lds
nop
pop
mov
add
pop
rorb
xor
sbb
mov
loopne
sarb
pusha
pusha
push
pusha
rclb
addb
shrb
loopne
aad
xor
outsl
bswap
adc
xchg
ds
push
dec
shlb
je
dec
add
fadds
loopne
sbbl
inc
mov
in
and
pusha
push
or
rcrb
mov
mov
jbe
jo
add
shll
xorb
enter
inc
in
push
arpl
jmp
loopne
rolb
pusha
jge
loope
icebp
and
adc
movsl
stc
imul
jmp
inc
loopne
push
addb
fldenv
ficomps
and
pushf
jno
rorl
and
ljmp
inc
rcrb
xchg
push
xchg
into
daa
mov
loopne
mov
dec
jno
sub
and
loope
mov
outsl
gs
push
addr16
xor
test
jb
pop
repnz
mov
pusha
stos
and
sbbl
add
movsl
sbb
and
pusha
pop
les
mov
mov
sbb
sub
and
lea
sbb
dec
cmp
sub
pusha
pusha
lahf
scas
rolb
dec
mov
lods
or
stos
push
xchg
pop
popa
pop
push
movb
push
ja
rolb
dec
shll
dec
mov
add
push
sbb
mov
dec
mov
fstl
push
loopne
stos
cs
loopne
jl
lds
pusha
inc
adc
scas
add
inc
xchg
je
iret
vaddss
ljmp
addb
and
mov
and
xchg
jge
into
sti
int
es
mov
cltd
mov
push
cmc
jmp
push
pop
dec
cmp
lds
push
dec
int3
sub
ret
stc
rolb
jae
outsl
cmp
mov
mov
xlat
cmp
push
fstpt
jp
sub
mov
jns
fcompl
shrb
lret
mov
add
call
bound
call
cltd
mov
and
das
imul
in
andb
in
cmp
lea
daa
stos
inc
inc
push
loopne
stc
insl
movsl
jmp
fbstp
mov
pusha
and
int
lods
and
jmp
fwait
outsb
mov
xorb
and
fcomip
dec
sbb
repz
inc
sbb
cli
mov
mov
addr16
xor
or
orb
and
mov
shlb
es
iret
pop
repz
cltd
mov
and
jo
cmp
movsl
test
out
int
test
cs
and
movsb
and
inc
loopw
add
or
adc
xchg
mov
lcall
add
xchg
test
xchg
aas
dec
mov
andb
add
jns
pusha
xchg
es
pusha
repz
test
pusha
pusha
sub
jecxz
mov
into
pop
push
jmp
and
add
jnp
enter
imulb
and
rcrl
out
or
shlb
sbb
bound
inc
mov
xor
cmp
neg
testb
rclb
mov
dec
dec
push
imul
inc
xor
mov
loopne
in
pop
jl
popa
jno
or
mov
imul
dec
xchg
andb
rorb
fucomi
jne
pusha
and
sub
imul
jns
mov
iret
ret
divb
in
mov
push
xlat
jg
movsb
inc
mov
mov
fists
pop
cmpsb
addb
addb
loopne
loop
jl
sub
lret
dec
push
ds
and
and
add
mov
xor
mov
enter
mov
sahf
push
loopne
mov
fadds
push
clc
dec
fs
mov
mov
and
mov
lret
dec
or
rcrb
lds
add
and
mov
lods
pusha
cmpb
icebp
cmpsl
sub
add
fnstcw
int
lds
inc
inc
movsb
pusha
inc
test
pusha
cmp
shrl
in
lcall
pop
fidivrl
xchg
mov
mov
xor
andb
fnstenv
pop
xchg
out
xor
pop
xchg
sarb
push
out
jp
loop
arpl
lods
lock
ja
push
subl
or
or
inc
pop
push
mov
pusha
jne
mov
rcr
lahf
idivl
push
xchg
dec
fwait
and
mov
ret
pop
ja
andb
addr16
int3
mov
xor
out
sub
loopne
popf
sbb
out
in
imul
fcomip
loope
andb
and
and
and
mov
mov
push
mov
rcll
sub
and
or
inc
repnz
fnstcw
aas
mov
cmp
out
fnstsw
fs
mov
repz
std
into
xor
mov
and
out
mov
sub
push
push
fwait
aam
test
shlb
pop
cmp
es
add
inc
add
dec
fadds
bound
fwait
sbb
inc
sub
and
repz
dec
xor
mov
mov
sarb
inc
hlt
jle
add
pop
lods
movsl
lea
or
add
jmp
out
dec
int
mov
clc
and
test
sti
cltd
sub
scas
rol
lock
jns
inc
mov
pop
xchg
xchg
leave
pop
push
lret
pop
decb
cmp
and
pusha
add
loopne
int
repz
mov
push
inc
jg
adc
and
dec
mov
jne
mov
inc
add
rol
jbe
pop
test
fmul
es
adc
loopne
pop
in
mov
cmp
dec
or
das
leave
push
mov
shlb
rorl
dec
test
inc
xchg
mov
insl
cwtl
and
or
xchg
scas
andb
test
mov
dec
and
sub
int3
ret
shlb
ror
loope
mov
add
sbb
in
cmp
jecxz
out
inc
in
jae
incb
pop
adc
clc
pop
jbe
xchg
dec
pop
mov
rol
scas
aad
xchg
cld
out
sbb
jne
in
inc
sbb
loopne
add
movsl
push
add
lock
push
cmp
and
loopne
into
rolb
add
pop
repz
imul
int
and
lods
xchg
stc
insb
jno
push
mov
xor
mov
fsubl
shlb
fbstp
add
xorl
insb
loope
xor
mov
loope
shlb
and
jg
test
insl
js
in
xor
and
loopne
fisubs
jl
jae
loopne
outsl
push
leave
shrb
repz
mov
add
dec
add
inc
ror
jne
popa
cld
addr16
xchg
inc
imul
ficomps
mov
and
pop
mov
inc
xor
inc
cwtl
sarb
add
xchg
jb
mov
inc
subb
xlat
and
add
sub
push
cld
sub
aas
inc
out
cli
push
cmp
movsb
rolb
sarl
adc
das
pushf
sahf
sbb
ret
cld
lret
mov
dec
lret
cmc
fwait
push
outsl
je
jge
and
lock
dec
cmp
fcmovnbe
xchg
cmpsl
adc
call
test
add
outsl
pusha
xchg
mov
push
mov
arpl
push
cltd
stc
gs
test
mov
add
loopne
ja
fcoml
mov
pusha
inc
int
out
das
mov
or
loopne
jmp
cltd
mov
dec
jecxz
xor
repnz
add
sbb
xchg
aad
addb
aaa
loop
mov
loopne
enter
out
adc
jp
les
addr16
sarb
xchg
aad
pop
inc
test
ss
push
pop
adc
xchg
adc
enter
out
adc
test
and
add
pop
jnp
pop
mov
push
jmp
xor
rolb
fidivs
mov
outsl
adc
inc
push
andb
loopne
outsl
xor
jp
loopne
fildll
jns
add
ljmp
dec
mov
sti
cmp
jmp
inc
inc
jp
xor
daa
cmp
lock
add
ret
push
adcl
mov
shlb
imul
shl
leave
in
cwtl
push
add
mov
test
rolb
movsb
loopne
lock
add
pop
jge
insl
scas
es
add
dec
lds
std
lcall
movsl
iret
pusha
cmp
aad
in
testb
inc
or
push
add
or
rolb
push
jbe
sahf
adc
xchg
fwait
addb
rolb
inc
cmp
sub
sub
push
pushf
les
ljmp
and
add
add
add
rcll
pop
cmc
iret
out
jg
add
fsts
inc
fbstp
sbbb
aam
shrl
inc
hlt
loop
mov
add
inc
aaa
shll
mov
rcll
adc
popf
jmp
adc
jno
cli
sub
inc
and
xchg
and
cmpb
add
mov
cwtl
lret
ret
add
scas
and
mov
into
add
shll
mov
push
mov
shl
imul
push
jbe
lcall
popa
dec
fildl
inc
mov
jae
movsl
adc
xchg
jg
add
insb
enter
sbb
add
and
jo
mov
cmp
pop
pop
cmp
fdiv
xor
sub
add
and
mov
adc
popf
jb
lcall
jnp
fnstsw
sti
std
adc
add
mov
scas
scas
rolb
out
fyl2xp1
dec
jnp
jns
pop
stos
add
inc
mov
or
lods
xchg
cli
fdivrl
call
shlb
xchg
leave
adc
call
mov
shlb
testl
loopne
fidivl
push
and
shlb
and
pop
mov
push
ss
pop
int
mov
xchg
inc
stos
and
add
push
push
mov
mov
popa
addr16
mov
int3
data16
cltd
daa
popf
dec
mov
and
mov
cld
jbe
mov
mov
clc
push
mov
test
and
icebp
dec
jmp
push
andb
add
inc
lock
sub
mov
inc
add
push
push
shll
out
loopne
rcrl
data16
mov
in
push
push
jnp
jne
cwtl
fwait
scas
mov
cmp
ret
and
mov
push
jno
flds
das
lret
ror
flds
mov
cli
sub
dec
push
xchg
or
iret
xchg
ja
shlb
inc
push
call
jo
outsb
jne
je
les
jmp
dec
and
ljmp
pusha
add
inc
pop
jl
lock
and
dec
sbb
mov
and
or
and
cmp
negl
insb
mov
mov
mov
pusha
add
mov
loopne
ror
xchg
and
andb
scas
mov
lret
stos
shl
test
orb
xor
cmp
and
loopne
add
and
add
mov
aas
fimull
or
and
loopne
push
aad
shlb
jecxz
lcall
outsb
int3
mov
xchg
mov
sub
push
pop
jl
mov
mov
and
mov
xchg
mov
jecxz
ss
decl
mov
in
ljmp
in
clc
call
and
add
rorb
repz
rcrb
push
push
loope
leave
in
cld
ljmp
int
insl
mov
fstps
jle
mov
push
imul
leave
lods
mov
mov
aaa
or
pusha
adc
adc
mov
subb
adcb
addb
mov
notb
in
fwait
and
xchg
stc
mov
add
inc
rcrb
xor
sbb
mov
cmpb
stc
sbb
negb
shr
subl
rol
or
lods
and
stc
inc
inc
icebp
in
sbb
and
inc
lcall
sbb
pop
lock
rolb
push
loopne
aas
push
inc
adcl
pushf
pop
dec
dec
leave
mov
mov
add
and
popf
ror
dec
mov
and
push
cmc
nop
fwait
jo
andb
jnp
adc
add
sbb
rcrb
fwait
mov
dec
adc
add
mov
add
loopne
ljmp
inc
mov
lea
pop
in
and
push
pusha
sbbb
push
xchg
daa
lea
jmp
jp
insb
pop
enter
cwtl
imul
into
mov
mov
ljmp
push
inc
inc
scas
ja
imul
mov
imulb
and
mov
iret
in
into
scas
and
cmpsb
add
shl
mov
jecxz
jae
cltd
add
add
pusha
or
xchg
call
mov
pusha
rol
and
jno
mov
mov
adc
fsubrs
pop
and
mov
call
pusha
jp
or
and
aam
sbb
stos
cmpsb
pusha
loopne
rolb
loopne
int
jp
xor
data16
xchg
jnp
add
mov
add
in
and
xchg
leave
lds
cmp
addb
lock
rolb
mov
push
add
loopne
mov
rcrb
andb
in
in
jg
inc
arpl
mov
add
mov
out
in
lahf
ja
and
add
mov
sub
sbb
sub
orb
inc
popf
iret
scas
out
decb
outsb
inc
mov
andb
sub
pusha
mov
outsb
xchg
jecxz
sbb
negl
jo
mov
and
inc
jmp
push
les
dec
negl
les
pop
pop
mov
gs
and
jnp
addb
clc
or
jbe
lods
rolb
rcl
mov
rol
xchg
cmp
fs
inc
fwait
shrb
rolb
test
push
add
sbb
leave
xor
addb
mov
adcb
jecxz
test
shrb
jb
popf
or
shlb
add
rclb
sbb
push
and
fimuls
pop
scas
andb
shlb
out
lahf
mov
mov
fld
sub
iret
in
add
dec
push
ss
scas
jae
mov
pop
xchg
push
mov
pusha
dec
fcmove
and
sbbb
inc
nop
push
or
pusha
inc
pop
pop
test
addl
and
mov
jmp
icebp
repz
imul
pusha
cmc
mov
cmp
push
jo
mov
pop
ljmp
xchg
outsl
test
inc
and
cmp
push
sub
mov
rolb
lds
jge
push
addb
loopne
ret
in
insb
xor
adc
lods
ljmp
andb
pushf
push
or
popl
ja
aas
gs
je
mov
push
push
iret
push
sbb
fiaddl
add
sub
nop
or
push
jne
lahf
mov
enter
int3
mov
sub
rclb
ret
js
mov
loopne
leave
std
dec
add
jecxz
mov
mov
xchg
fldcw
shlb
inc
lahf
sub
pusha
pop
in
pop
mov
push
push
sbb
mov
pop
les
add
mov
sbb
push
sbb
loopne
addb
fwait
add
mov
outsl
pop
inc
test
mull
inc
cwtl
mov
shlb
mov
fsubs
addb
push
sarl
sbb
adc
add
pusha
add
sub
ret
pop
negl
push
mov
or
xchg
andb
aad
lock
mov
mov
fistpl
jo
push
les
mov
mov
in
sub
mov
jp
rcll
cmp
jg
fstpl
fcmovnu
and
xchg
xchg
mov
jg
out
movsl
add
and
sbb
push
xchg
jmp
pop
aaa
minps
and
mov
mov
or
mov
lret
xchg
shrl
ror
and
pusha
sub
je
into
scas
jnp
loopne
cs
loopne
pop
adc
clc
sub
jbe
sub
shlb
lea
call
pop
xchg
mov
xchg
xchg
dec
loopne
jbe
adc
std
out
bound
push
sub
pusha
mov
adc
add
sub
jb
aaa
aas
sub
mov
add
cmp
lods
inc
sub
sbb
lea
add
xor
cli
jecxz
ljmp
and
adc
arpl
mov
cmp
jnp
mov
add
xor
pop
dec
aaa
cmpsl
hlt
in
adc
pop
and
mov
andb
dec
shr
cld
adc
test
inc
pop
lret
mov
sbb
mov
xchg
and
repnz
mov
push
mov
bswap
mov
mov
in
insl
pop
test
cmpsl
push
sbb
and
mov
std
in
shl
mov
inc
jecxz
imul
inc
jb,pt
into
xchg
pop
imul
sahf
lea
loopne
in
adc
or
and
loopne
pop
jnp
add
add
std
adc
cld
mov
rorb
jp
inc
cmp
jnp
test
cmpsb
pusha
loopne
add
mov
loopne
lea
sbb
add
mov
inc
in
add
rcr
mov
add
jbe
xor
mov
cli
or
mov
add
lods
out
insl
repnz
pushf
xchg
lret
push
jecxz
inc
rcrb
xorl
bound
and
inc
add
sbb
aam
sub
rolb
ja
push
inc
xchg
pop
jns
adc
jmp
add
mov
andb
pop
and
cs
and
out
jae
neg
andl
jne
test
loopne
outsb
mov
sbb
cli
cmpl
out
pop
mov
cmp
ljmp
pusha
pop
push
imul
scas
inc
and
aad
and
xchg
stos
andb
inc
les
xor
js
fisubrs
mov
not
mov
shlb
test
repnz
