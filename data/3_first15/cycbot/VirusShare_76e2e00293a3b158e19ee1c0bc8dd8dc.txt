xchg
out
aam
loope
aam
in
aam
in
aam
out
aam
out
aam
out
aam
jecxz
aam
in
aam
jmp
loop
ja
loop
fsubr
loop
jg
loop
xlat
in
aam
jecxz
aam
call
loop
icebp
out
aam
loop
aam
out
aam
loop
aam
loope
aam
jmp
loop
cs
aam
call
loop
cmp
loop
in
loop
adc
loop
or
loop
shl
aam
out
aam
call
loop
sub
loop
aam
loop
xchg
in
aam
jecxz
aam
out
aam
loop
aam
call
loop
xchg
loop
push
out
aam
in
aam
jecxz
aam
jmp
loop
dec
jecxz
aam
jecxz
aam
loop
aam
out
aam
out
aam
loope
aam
in
aam
loop
aam
call
loop
insl
loope
aam
loop
aam
out
aam
in
aam
loop
aam
out
aam
loope
aam
loope
aam
out
aam
loop
aam
out
aam
out
aam
out
aam
jecxz
aam
call
loop
call
in
aam
call
loop
pop
jecxz
aam
in
aam
jecxz
aam
call
loop
ret
aam
call
loop
push
out
aam
out
aam
in
aam
in
aam
in
aam
in
aam
jmp
loop
inc
loop
aam
out
aam
out
aam
loope
aam
jecxz
aam
jecxz
aam
in
aam
loope
aam
out
aam
loop
aam
call
loop
test
loop
aam
in
aam
jecxz
aam
jecxz
aam
call
loop
xchg
in
aam
out
aam
call
loop
sub
loop
mov
loop
loop
loop
jo
loop
sbb
loop
inc
call
loop
sub
loop
out
loop
inc
jecxz
aam
out
aam
call
loop
push
jmp
loop
mov
loop
popf
out
aam
in
aam
loope
aam
loop
aam
loop
aam
loop
aam
jecxz
aam
in
aam
jecxz
aam
in
aam
out
aam
jecxz
aam
loope
aam
out
aam
jecxz
aam
call
loop
pop
in
aam
loop
aam
jecxz
aam
out
aam
in
aam
call
loop
add
call
loop
shl
loop
std
loop
aam
in
aam
jecxz
aam
loop
aam
jecxz
aam
out
aam
call
loop
jmp
loop
jmp
loop
aam
out
aam
out
aam
loop
aam
loop
aam
call
loop
das
jmp
loop
add
loop
and
loop
mov
call
loop
ss
aam
in
aam
loope
aam
jecxz
aam
out
aam
loop
aam
out
aam
out
aam
call
loop
out
jecxz
aam
out
aam
out
aam
out
aam
out
aam
in
aam
loop
aam
in
aam
in
aam
out
aam
loope
aam
in
aam
in
aam
jecxz
aam
loop
aam
jecxz
aam
loope
aam
loop
aam
call
loop
xchg
loop
stos
out
aam
out
aam
jecxz
aam
out
aam
in
aam
loop
aam
out
aam
jecxz
aam
jmp
loop
and
loop
loopne
loop
js
loop
jl
loop
jbe
loop
and
loop
dec
loop
aam
jecxz
aam
call
loop
inc
jmp
loop
inc
in
aam
loop
aam
loope
aam
loope
aam
loope
aam
jmp
loop
or
loop
sub
loop
xlat
loope
aam
loop
aam
loop
aam
jmp
loop
ljmp
aam
loop
aam
in
aam
in
aam
in
aam
loope
aam
out
aam
call
loop
outsb
loope
aam
out
aam
in
aam
out
aam
in
aam
in
aam
call
loop
mov
loop
mov
loop
mov
loop
aam
loop
aam
loope
aam
out
aam
loop
aam
jecxz
aam
call
loop
leave
loope
aam
jmp
loop
repnz
aam
in
aam
call
loop
fsub
loop
test
loop
into
out
aam
out
aam
jecxz
aam
call
loop
pusha
out
aam
loope
aam
in
aam
loop
aam
loope
aam
jecxz
aam
loope
aam
in
aam
call
loop
and
loop
cmp
loop
imul
aam
jecxz
aam
out
aam
in
aam
loop
aam
out
aam
in
aam
in
aam
in
aam
in
aam
out
aam
in
aam
in
aam
out
aam
loop
aam
jecxz
aam
loop
aam
in
aam
call
loop
or
loop
imul
aam
in
aam
loope
aam
jmp
loop
fxam
loop
shr
loop
xor
loop
and
out
aam
in
aam
jecxz
aam
out
aam
in
aam
in
aam
in
aam
call
loop
cli
in
aam
in
aam
in
aam
loope
aam
out
aam
out
aam
out
aam
loope
aam
out
aam
call
loop
push
loop
aam
out
aam
loop
aam
in
aam
jecxz
aam
loope
aam
call
loop
mov
loop
in
loop
or
loop
insl
loop
aam
loope
aam
jmp
loop
loope
aam
out
aam
in
aam
out
aam
in
aam
jecxz
aam
out
aam
jecxz
aam
in
aam
jecxz
aam
call
loop
add
loop
fwait
loop
aam
call
loop
ja
loop
sbb
loop
shl
loop
jge
loop
ljmp
aam
in
aam
loop
aam
loop
aam
out
aam
in
aam
out
aam
out
aam
in
aam
jecxz
aam
out
aam
in
aam
loop
aam
jmp
loop
add
loop
in
loop
pop
loop
aam
loop
aam
in
aam
out
aam
call
loop
in
out
aam
in
aam
out
aam
out
aam
out
aam
call
loop
adc
loop
outsb
call
loop
ds
aam
jecxz
aam
loope
aam
call
loop
push
in
aam
in
aam
jecxz
aam
call
loop
inc
jecxz
aam
call
loop
out
aam
call
loop
repz
loop
mov
loop
or
call
loop
call
in
aam
loop
aam
in
aam
loop
aam
call
loop
lret
in
aam
loop
aam
call
loop
dec
out
aam
out
aam
loope
aam
jmp
loop
ret
aam
loop
aam
out
aam
call
loop
lret
aam
out
aam
loop
aam
out
aam
jecxz
aam
out
aam
in
aam
out
aam
loope
aam
out
aam
in
aam
jecxz
aam
jmp
loop
imul
loop
inc
jecxz
aam
loop
aam
jmp
loop
out
loop
mov
loop
aam
loop
aam
loop
aam
out
aam
loope
aam
loop
aam
jmp
loop
pop
loope
aam
in
aam
loop
aam
in
aam
out
aam
loop
aam
jmp
loop
sub
loop
push
in
aam
loop
aam
jmp
loop
in
aam
out
aam
in
aam
call
loop
inc
out
aam
call
loop
xor
out
aam
jmp
loop
push
out
aam
in
aam
loope
aam
call
loop
pop
loop
aam
in
aam
out
aam
loop
aam
out
aam
in
aam
call
loop
mov
call
loop
mov
loop
int3
loop
aam
call
loop
cmp
loop
push
jecxz
aam
loop
aam
loop
aam
out
aam
out
aam
in
aam
call
loop
sub
loop
lock
aam
jecxz
aam
jecxz
aam
in
aam
out
aam
out
aam
jecxz
aam
loop
aam
in
aam
loop
aam
out
aam
loop
aam
out
aam
loope
aam
loope
aam
in
aam
in
aam
in
aam
jecxz
aam
out
aam
in
aam
in
aam
loop
aam
jmp
loop
mov
out
aam
jmp
loop
pusha
loop
aam
out
aam
call
loop
push
out
aam
jmp
loop
jg
loop
pop
call
loop
sub
out
aam
jecxz
aam
jecxz
aam
in
aam
out
aam
jecxz
aam
in
aam
call
loop
jno
loop
jp
loop
mov
in
aam
loop
aam
in
aam
jecxz
aam
out
aam
in
aam
out
aam
in
aam
in
aam
loope
aam
call
loop
add
jecxz
aam
out
aam
loope
aam
call
loop
dec
jecxz
aam
call
loop
imul
aam
jmp
loop
mov
loop
mov
call
loop
add
loop
je
loop
mov
loop
push
jmp
loop
shl
aam
loop
aam
out
aam
loope
aam
jecxz
aam
call
loop
cmp
loop
sub
loop
pop
loope
aam
in
aam
loop
aam
loop
aam
in
aam
out
aam
in
aam
jecxz
aam
jecxz
aam
jecxz
aam
call
loop
adc
loop
clc
in
aam
in
aam
jecxz
aam
jecxz
aam
out
aam
out
aam
in
aam
in
aam
jecxz
aam
call
loop
dec
in
aam
loop
aam
loop
aam
call
loop
dec
out
aam
out
aam
call
loop
adc
loop
cmp
loop
call
loop
aam
in
aam
out
aam
loop
aam
in
aam
call
loop
xchg
out
aam
in
aam
loop
aam
out
aam
jmp
loop
mov
loop
nop
call
loop
aas
jecxz
aam
jecxz
aam
out
aam
out
aam
out
aam
call
loop
add
loop
aas
out
aam
jecxz
aam
out
aam
in
aam
jecxz
aam
jecxz
aam
in
aam
in
aam
call
loop
call
loop
mov
loop
fs
aam
in
aam
jecxz
aam
in
aam
in
aam
in
aam
in
aam
jecxz
aam
jecxz
aam
in
aam
loop
aam
in
aam
in
aam
in
aam
loop
aam
jecxz
aam
out
aam
in
aam
in
aam
loop
aam
out
aam
loop
aam
loop
aam
jecxz
aam
loop
aam
out
aam
out
aam
out
aam
call
loop
lods
loop
aam
in
aam
loope
aam
loop
aam
in
aam
loop
aam
call
loop
and
jecxz
aam
in
aam
out
aam
call
loop
aam
loop
mov
loop
pop
in
aam
jecxz
aam
loop
aam
out
aam
jecxz
aam
loop
aam
call
loop
sbb
loop
cli
call
loop
sti
out
aam
in
aam
in
aam
out
aam
out
aam
call
loop
dec
jecxz
aam
jecxz
aam
call
loop
push
loop
aam
in
aam
in
aam
out
aam
in
aam
out
aam
loope
aam
out
aam
loop
aam
loop
aam
loop
aam
jecxz
aam
out
aam
out
aam
in
aam
in
aam
call
loop
nop
jecxz
aam
call
loop
sti
jecxz
aam
jecxz
aam
loop
aam
in
aam
loope
aam
jmp
loop
xor
loop
or
loop
jne
loop
add
loop
fucom
loop
sti
out
aam
out
aam
in
aam
out
aam
out
aam
out
aam
jecxz
aam
loop
aam
in
aam
out
aam
jecxz
aam
loop
aam
jmp
loop
data16
aam
jecxz
aam
loop
aam
call
loop
pop
in
aam
jecxz
aam
in
aam
call
loop
dec
call
loop
test
loop
push
call
loop
sub
in
aam
call
loop
loopw
aam
jecxz
aam
in
aam
loop
aam
jecxz
aam
in
aam
in
aam
loope
aam
call
loop
dec
jecxz
aam
in
aam
out
aam
jecxz
aam
out
aam
out
aam
loope
aam
in
aam
out
aam
out
aam
in
aam
out
aam
jmp
loop
aam
loop
mov
jecxz
aam
loop
aam
jecxz
aam
call
loop
shl
loop
movsb
in
aam
jmp
loop
mov
loop
lcall
aam
in
aam
in
aam
loop
aam
out
aam
loope
aam
loop
aam
in
aam
out
aam
out
aam
out
aam
loop
aam
in
aam
call
loop
mov
jecxz
aam
in
aam
call
loop
mul
loop
add
loop
mov
loop
xchg
out
aam
call
loop
lcall
aam
jecxz
aam
loope
aam
in
aam
out
aam
loope
aam
loope
aam
in
aam
out
aam
loope
aam
jecxz
aam
out
aam
call
loop
dec
call
loop
dec
loop
aam
in
aam
jecxz
aam
loop
aam
in
aam
call
loop
int
loop
lock
aam
call
loop
or
loop
cwtl
in
aam
call
loop
jmp
loop
jecxz
aam
in
aam
loop
aam
out
aam
out
aam
out
aam
jecxz
aam
out
aam
jecxz
aam
out
aam
in
aam
out
aam
loope
aam
jecxz
aam
loop
aam
loope
aam
in
aam
out
aam
jecxz
aam
in
aam
jmp
loop
pop
out
aam
call
loop
cmp
loop
pop
loop
aam
jmp
loop
mov
loope
aam
out
aam
jecxz
aam
jecxz
aam
jecxz
aam
call
loop
mov
loop
inc
in
aam
loope
aam
out
aam
loope
aam
out
aam
in
aam
out
aam
in
aam
loope
aam
call
loop
cmp
loop
shr
aam
out
aam
jecxz
aam
loop
aam
jecxz
aam
call
loop
shl
loop
add
loope
aam
in
aam
out
aam
jecxz
aam
loop
aam
in
aam
out
aam
call
loop
int
loop
mov
in
aam
in
aam
loope
aam
call
loop
lcall
aam
in
aam
in
aam
out
aam
out
aam
loop
aam
call
loop
jbe
loop
outsb
call
loop
mov
out
aam
out
aam
loope
aam
out
aam
loope
aam
loope
aam
jecxz
aam
call
loop
out
loop
out
aam
out
aam
in
aam
loop
aam
in
aam
loop
aam
out
aam
out
aam
call
loop
jle
loop
lahf
in
aam
jecxz
aam
out
aam
in
aam
in
aam
jecxz
aam
loope
aam
in
aam
call
loop
jl
loop
xchg
in
aam
out
aam
loop
aam
jmp
loop
mov
call
loop
mov
loop
sbb
loop
ljmp
aam
out
aam
call
loop
lcall
aam
loope
aam
in
aam
in
aam
out
aam
in
aam
loope
aam
jmp
loop
pop
in
aam
out
aam
jecxz
aam
in
aam
in
aam
call
loop
leave
loop
aam
loop
aam
in
aam
loop
aam
in
aam
jecxz
aam
jecxz
aam
jecxz
aam
out
aam
jecxz
aam
jecxz
aam
out
aam
in
aam
in
aam
out
aam
in
aam
loope
aam
in
aam
out
aam
out
aam
loop
aam
loop
aam
out
aam
jmp
loop
and
loop
stos
in
aam
in
aam
jecxz
aam
loop
aam
in
aam
call
loop
and
loop
mov
in
aam
out
aam
in
aam
call
loop
add
loop
jnp
loop
repz
aam
jecxz
aam
in
aam
loope
aam
loop
aam
loop
aam
call
loop
ja
loop
cmp
loop
js
loop
arpl
loop
adc
loop
jo
loop
or
loop
aam
jecxz
aam
loope
aam
out
aam
loope
aam
in
aam
call
loop
push
call
loop
xchg
out
aam
out
aam
in
aam
out
aam
out
aam
call
loop
cmp
loop
ss
loop
jo
loop
and
aam
call
loop
adc
loop
mov
out
aam
in
aam
in
aam
jecxz
aam
in
aam
out
aam
call
loop
ja
loop
enter
lret
aam
in
aam
call
loop
cli
call
loop
push
loop
mov
jecxz
aam
loope
aam
call
loop
jp
loop
xor
loop
or
loop
push
loop
shr
aam
loope
aam
jecxz
aam
jecxz
aam
loope
aam
in
aam
in
aam
loope
aam
loop
aam
jmp
loop
jg
loop
pop
call
loop
xchg
call
loop
loop
xchg
loop
repz
aam
in
aam
loope
aam
out
aam
out
aam
out
aam
call
loop
insl
loope
aam
out
aam
out
aam
out
aam
loop
aam
in
aam
out
aam
in
aam
call
loop
adc
loop
and
aam
in
aam
loope
aam
out
aam
loop
aam
loop
aam
in
aam
jecxz
aam
out
aam
jmp
loop
out
aam
loop
aam
call
loop
pop
in
aam
loop
aam
jmp
loop
nop
jecxz
aam
in
aam
call
loop
sub
loop
addr16
aam
loop
aam
out
aam
out
aam
in
aam
out
aam
call
loop
dec
in
aam
loope
aam
loop
aam
jmp
loop
into
loope
aam
loope
aam
out
aam
out
aam
jmp
loop
mov
loop
jl
loop
outsl
call
loop
pop
out
aam
jmp
loop
jae
loop
test
loop
aam
loope
aam
jecxz
aam
call
loop
pop
call
loop
push
jmp
loop
jo
loop
call
in
aam
jmp
loop
out
aam
out
aam
loop
aam
loop
aam
jecxz
aam
loope
aam
out
aam
out
aam
jecxz
aam
in
aam
call
loop
mov
loop
jl
loop
add
loop
movsl
loop
aam
call
loop
aam
in
aam
jecxz
aam
jecxz
aam
in
aam
jecxz
aam
call
loop
jns
loop
inc
call
loop
adc
loop
scas
in
aam
in
aam
in
aam
out
aam
jecxz
aam
in
aam
in
aam
loope
aam
loope
aam
loop
aam
in
aam
out
aam
in
aam
jmp
loop
pop
jecxz
aam
loop
aam
in
aam
loop
aam
jmp
loop
es
aam
out
aam
out
aam
jecxz
aam
call
loop
xor
loop
popf
loop
aam
out
aam
loop
aam
loop
aam
loope
aam
call
loop
fsub
loop
push
out
aam
call
loop
mov
out
aam
in
aam
jecxz
aam
in
aam
jecxz
aam
loop
aam
loope
aam
in
aam
out
aam
in
aam
in
aam
jmp
loop
push
out
aam
in
aam
out
aam
loope
aam
out
aam
jecxz
aam
in
aam
out
aam
loope
aam
jecxz
aam
out
aam
in
aam
in
aam
out
aam
loop
aam
jecxz
aam
in
aam
out
aam
out
aam
out
aam
in
aam
call
loop
pusha
out
aam
loope
aam
out
aam
out
aam
in
aam
out
aam
loop
aam
loope
aam
out
aam
jmp
loop
enter
and
aam
jecxz
aam
in
aam
jecxz
aam
jmp
loop
gs
aam
out
aam
in
aam
jecxz
aam
jecxz
aam
jecxz
aam
in
aam
out
aam
jecxz
aam
loop
aam
out
aam
loop
aam
jecxz
aam
out
aam
out
aam
jecxz
aam
call
loop
push
call
loop
xchg
call
loop
mov
call
loop
inc
jmp
loop
cmp
loop
lcall
aam
out
aam
in
aam
jecxz
aam
jecxz
aam
call
loop
sub
loop
loop
mov
loop
jne
loop
jp
loop
fsubp
loop
or
loop
jnp
loop
jge
loop
shl
loop
jnp
loop
sub
loop
jb
loop
push
in
aam
out
aam
call
loop
nop
out
aam
in
aam
out
aam
out
aam
out
aam
out
aam
out
aam
loop
aam
out
aam
call
loop
lods
out
aam
out
aam
out
aam
loop
aam
call
loop
pusha
loope
aam
call
loop
and
loop
inc
out
aam
in
aam
jmp
loop
daa
jecxz
aam
call
loop
ret
jecxz
aam
loope
aam
out
aam
jecxz
aam
in
aam
in
aam
out
aam
in
aam
jecxz
aam
out
aam
lds
dec
scas
fisttpll
adc
dec
stos
inc
add
lahf
into
out
fisubrs
add
add
add
mov
scas
sbb
add
add
dec
test
or
jbe
xchg
push
add
addl
add
leave
out
add
ret
add
or
movsl
add
inc
add
jl
stos
in
iret
adc
sub
rolb
xchg
outsl
arpl
ret
add
xor
imul
add
add
idivb
xchg
dec
rolb
add
cli
hlt
ret
add
cld
addb
add
call
adc
and
add
repz
add
sbb
add
lahf
push
stos
into
int
add
jo
leave
mov
popa
add
aaa
popa
add
add
jb
dec
push
sbb
add
add
lret
loope
or
push
add
lcall
mov
add
jno
cmp
jg
add
add
stos
loope
nop
dec
add
pmulhw
int3
jp
lret
add
jl
call
leave
stos
inc
add
popf
dec
les
mov
inc
add
push
addb
jns
add
lret
int
add
xor
addl
inc
add
fisttpl
std
lahf
std
pop
imull
xchg
aad
xor
mov
add
add
mov
bound
and
mov
or
add
xchg
mov
or
jbe
jbe
rolb
push
add
ds
and
and
out
jo
jmp
daa
add
lods
loop
inc
add
add
add
mov
stos
jbe
ds
and
pop
fists
push
inc
add
ret
sbb
jg
add
dec
inc
add
hlt
cmp
add
mov
add
xrelease
out
dec
jp
push
jno
jbe
xchg
cld
push
add
push
add
aaa
dec
popf
idivb
fcmovnu
add
add
jge
jae
stos
adc
fildll
addb
imul
or
push
add
inc
add
add
lea
add
sub
push
add
xchg
jo
sub
sbb
jl
mov
mov
add
sub
add
add
or
add
sub
add
cmp
xchg
pushl
add
cmpsb
add
add
add
daa
add
push
mov
dec
push
add
in
aad
add
add
push
add
add
lds
fwait
scas
lock
add
sub
ja
add
test
outsb
jns
xchg
push
add
push
test
jmp
or
add
and
pop
movhps
add
mov
add
add
add
mov
add
add
bound
mov
in
iret
adc
aaa
in
push
add
adc
push
inc
add
cld
xor
scas
ret
add
add
jbe
add
mov
add
add
insb
insb
push
out
test
fwait
or
hlt
dec
scas
daa
add
mov
lcall
pop
mov
add
inc
add
add
scas
xchg
in
mov
add
loop
jp
pop
rolb
push
sbb
add
cmp
in
or
sub
add
add
add
add
xchg
in
jne
and
lahf
cmc
and
inc
add
add
mov
in
add
inc
add
mov
pop
popf
xor
test
cmc
lahf
pop
pop
imul
mov
push
add
add
push
add
cmp
add
add
add
cmp
ss
xor
pusha
add
in
and
pop
repz
add
push
lret
xor
in
iret
daa
add
roll
in
mov
add
movb
in
in
jo
cmpsb
add
or
xor
add
fmul
pusha
add
add
sbb
mov
lea
add
mov
and
hlt
sarl
fcompl
push
push
xchg
xchg
lret
mov
xor
sub
add
xor
je
data16
sbb
add
sahf
aad
repnz
insl
out
xchg
push
add
stos
nop
jae
in
std
lods
jl
cmp
add
mov
insl
mov
add
add
add
xor
mov
dec
mov
add
add
sahf
mov
sbb
add
mov
mov
jns
ret
add
in
lret
out
jge
add
add
add
hlt
movsl
add
add
cmpsb
add
hlt
sahf
ljmp
add
pop
or
iret
mov
js
add
ret
mov
push
jo
pop
jae
rolb
nop
and
movsl
add
ss
addl
push
add
jne
scas
sbb
jno
lahf
addb
pop
push
push
add
add
dec
xchg
sub
ljmp
cmp
stos
mov
sbb
add
add
out
pop
sub
adc
addl
add
movb
test
mul
add
add
fsubrs
adc
xchg
adc
sub
push
add
icebp
add
sti
in
ljmp
dec
shll
jecxz
enter
push
add
cli
jg
ds
add
add
lds
pop
or
cmp
mov
dec
adc
test
mov
sahf
cmp
add
jnp
fwait
aaa
pop
mov
ljmp
add
mov
repz
aaa
sub
jae
push
add
xchg
enter
add
add
add
hlt
outsb
addl
jmp
mov
cmpsb
add
push
add
insb
je
dec
into
xchg
add
jmp
iret
mov
das
ret
add
insl
sbb
add
add
add
jmp
sbb
idivb
add
jecxz
cmp
add
ficoms
add
cmp
adc
add
je
mov
mov
les
mov
add
test
fsub
add
push
jns
add
out
inc
add
sti
mov
add
inc
add
dec
or
int3
lcall
add
mov
incl
cwtl
adc
into
popa
add
mov
add
loop
in
adc
add
add
mov
add
add
jne
lret
leave
dec
repz
add
jmp
outsl
sub
add
movsb
add
jl
jl
pop
xor
adc
jg
add
pop
call
xor
shrb
push
add
ror
xor
add
dec
sub
or
dec
add
fisubl
mov
outsl
inc
add
push
and
loopne
add
add
test
and
add
add
iret
out
pushf
xchg
pop
mov
adc
lret
outsb
mov
push
push
add
add
push
mov
add
add
add
outsb
std
sti
lret
sub
jmp
cli
aaa
push
push
mov
sub
push
push
push
push
call
test
jne
push
push
call
cmp
je
mov
lea
push
push
push
push
call
push
call
mov
cld
lea
lea
xchg
xchg
lea
lock
je
pop
add
es
mov
ret
call
out
inc
add
test
imul
mov
add
push
lret
push
add
add
add
cmp
add
imul
add
int3
push
addl
rcrl
add
int
mov
loope
sbb
jbe
mov
shl
add
sar
mov
add
jle
add
add
daa
add
pop
js
sub
mov
movl
shll
xor
into
icebp
pop
fnstsw
add
cmpsl
add
sub
pushf
mov
lret
ret
out
push
add
add
mov
dec
fisubrs
inc
add
fwait
push
xor
add
add
add
jae
pop
lea
cmp
add
add
xchg
or
cltd
inc
add
fiaddl
loop
jp
add
add
add
sti
mov
add
push
adc
add
fdivrs
add
or
ljmp
dec
test
xchg
movsl
add
lds
clc
mov
mov
stos
pop
add
adc
add
and
xchg
ret
add
push
or
rcll
adc
pop
xor
leave
xor
and
loopne
ret
sbb
inc
add
pop
pop
jns
or
cmp
ss
jl
add
add
arpl
push
int
add
cmp
stos
in
aad
push
addb
shlb
pop
adc
xlat
mov
add
jp
loope
sbb
aaa
or
add
add
push
xor
mov
add
add
add
add
add
mov
sub
sti
cmc
pop
xchg
pop
cltd
je
add
repnz
add
add
fcmovnu
lods
inc
add
jle
add
loopne
lahf
cmp
xor
xor
push
arpl
mov
iret
sub
add
mov
inc
add
dec
lds
mov
insb
stc
jae
cli
fdivr
aam
add
pop
cmp
cltd
xchg
addl
ficoml
or
pop
adc
decb
lcall
add
jl
stos
jl
bound
pop
and
mov
mov
xchg
xor
pop
mov
add
lcall
add
pop
mov
xchg
aad
clc
hlt
mov
ja
xchg
jmp
lcall
ret
push
out
inc
add
add
add
lahf
xor
add
add
cwtl
imul
add
add
addl
add
lahf
loope
js
add
add
add
add
inc
add
add
push
jae
xor
jns
xchg
or
sbb
add
add
addl
mov
add
pop
add
adc
sbb
add
add
cwtl
mov
mov
mov
data16
mov
add
jl
add
add
rolb
daa
add
add
sub
iret
cli
push
add
loop
sub
clc
mov
add
add
sti
cmpsl
add
jae
push
xchg
fdivs
add
xchg
stc
or
cmp
ror
shll
out
mov
mov
rcl
lds
sbb
mov
add
aaa
and
cmp
mov
or
dec
sahf
push
cmc
in
push
add
ret
add
add
ret
add
in
push
add
xor
xchg
cmpsb
add
ja
mov
pop
gs
js
punpckhwd
imul
push
add
or
mov
loope
sub
daa
add
and
rolb
mov
inc
add
sbb
add
dec
out
push
add
jbe
addr16
loop
out
dec
jno
int
and
add
add
iret
add
stc
push
add
add
mov
sub
mov
loopne
mov
mov
xchg
mov
mov
add
add
fsts
xchg
sti
push
mov
lds
mov
inc
add
xlat
movsb
add
jg
hlt
xchg
inc
add
add
jp
add
add
add
into
add
xor
clc
outsl
out
mov
xchg
push
add
inc
add
push
add
sahf
add
aaa
icebp
pop
dec
xchg
cmp
add
cld
in
sub
add
roll
cmp
ja
add
sti
jb
insl
xor
test
push
add
add
jge
mov
clc
mov
add
add
add
lds
icebp
adc
lcall
add
add
leave
mov
pop
xchg
movsl
add
add
movsl
add
add
add
xor
into
cmp
push
add
into
inc
add
mov
inc
add
ret
add
mov
add
sbb
mov
add
add
incl
add
adc
lds
and
xor
jge
pop
cli
sub
mov
lret
mov
add
add
push
mov
aaa
jle
add
xlat
inc
add
jge
or
lahf
ljmp
or
adc
test
push
add
sub
add
pop
inc
add
adc
mov
lods
popa
add
arpl
push
pop
loopne
xchg
sub
add
rolb
add
sub
lret
data16
pop
data16
test
addb
movl
loop
fsubrp
ljmp
mov
push
pop
xor
inc
add
in
adc
jle
mov
dec
test
aad
loopne
cmpsl
add
add
add
dec
add
fldt
mov
cli
push
add
add
scas
mov
sbb
inc
add
add
jge
pop
lahf
lcall
add
add
mov
pop
fcomi
adc
cmpsl
add
add
add
mov
add
sub
dec
rcpps
bound
push
lret
jge
add
add
rolb
repz
aaa
xchg
jp
or
add
add
mov
adc
imul
popa
add
add
and
std
dec
cld
mov
addl
add
mov
add
push
add
add
adc
mov
jg
cli
lock
cmp
and
add
and
dec
adc
push
popa
add
sbb
add
adc
or
fwait
decl
add
mov
rolb
inc
add
loopne
int3
stc
js
call
or
fwait
ret
add
add
add
inc
add
add
repnz
lods
mov
or
loop
and
pushf
scas
jnp
iret
jmp
add
mov
pop
pop
xchg
cmp
cmc
jecxz
jmp
add
add
lcall
xor
inc
add
add
add
shrb
or
test
iret
mov
mov
add
add
addb
add
add
push
add
sub
mov
nop
add
add
nop
mov
add
jp
add
add
add
add
add
push
add
add
dec
or
inc
add
jae
shlb
sub
add
add
add
add
mov
pop
mov
in
and
and
aam
mov
xchg
pop
aas
jnp
outsb
in
in
inc
add
add
xchg
lret
cltd
jle
sub
or
inc
add
add
ret
sbb
add
mov
inc
add
mov
mov
pusha
add
add
push
push
add
or
cld
xor
and
shr
push
mov
addl
push
add
mov
pop
popa
add
add
add
add
add
mov
add
aad
je
das
lcall
fistpll
cmpsl
add
mov
sahf
pop
addb
pushl
imul
xchg
jno
dec
icebp
pop
idiv
dec
inc
add
fdivrl
and
jmp
mov
in
push
add
mov
jge
mov
jb
pop
push
or
or
jmp
lock
jae
lahf
mov
add
add
add
add
rolb
fisubrs
jae
mov
or
add
add
int3
roll
mov
jecxz
fprem1
fwait
test
movl
mov
insb
push
pop
outsl
sub
mov
mov
add
por
je
push
add
pop
xor
fiadds
add
add
or
add
sbb
add
mov
jae
cmp
cs
add
adc
jbe
mov
jo
pop
xchg
cmp
add
push
add
lds
addl
xor
aam
add
mov
xchg
arpl
push
sbb
testb
sbb
idivl
add
inc
add
add
cmpsb
add
cs
cmp
lret
movb
repz
mov
add
add
in
test
xchg
ljmp
lret
or
insl
adc
sub
mov
dec
adc
dec
push
dec
mov
pushf
lock
stos
fsincos
fwait
jne
lods
pusha
add
in
addb
addb
out
js
ljmp
xchg
mov
aaa
js
add
add
cmp
cmp
lea
add
ss
add
add
lock
add
xchg
mov
fdiv
outsb
ficoml
pop
repz
mov
or
add
mov
add
inc
add
clc
stos
pop
lret
addb
ja
xchg
add
add
dec
mov
pusha
add
add
insb
jmp
loop
jbe
cmp
jae
adc
cmp
mov
or
outsl
cmpxchg
inc
add
sahf
pop
popf
into
pop
add
movsl
add
stos
decb
add
add
mov
das
addl
dec
fildl
add
add
add
add
mov
add
add
je
fldl
add
add
cmpsl
add
clc
fistpll
xchg
lods
or
add
movsl
add
test
cmp
inc
add
aam
sub
lret
bound
pop
roll
outsb
push
add
mov
lcall
int
add
shll
imul
mov
add
cmpsl
add
inc
add
int
in
mov
mov
dec
jecxz
fsub
add
test
clc
or
inc
add
add
add
out
sbb
int3
pop
dec
aam
lods
mov
pcmpgtw
dec
mov
out
pop
pop
pushf
pusha
add
lret
enter
fs
std
sub
add
add
jne
pop
pop
cmc
inc
add
popf
xlat
mov
add
add
and
add
scas
lods
stc
aas
aad
arpl
lahf
iret
lds
in
sarl
pop
inc
add
sahf
pop
or
pop
test
add
add
push
insb
movb
imulb
into
ret
test
inc
add
add
data16
add
dec
negl
sbb
add
and
cmpsb
add
add
xchg
aaa
shlb
xchg
das
mov
add
add
push
add
dec
sub
add
mov
add
lods
call
dec
sub
mov
dec
and
cmp
cmp
adc
imul
popl
cmpsl
add
mov
cmp
mov
std
leave
pop
cmpsb
add
sub
outsb
bound
addb
add
mov
std
jns
daa
add
sbb
icebp
adc
mov
sub
outsl
push
rcrl
xor
inc
add
sahf
out
popf
sub
add
lds
or
das
jecxz
mov
add
add
jbe
add
cmp
mov
add
add
adc
iret
xchg
daa
add
push
add
sub
add
jb
mov
mov
xchg
dec
iret
addb
add
add
sbb
add
repz
movsl
add
cltd
enter
add
xchg
addb
pushf
fwait
jbe
add
add
roll
dec
out
mov
add
or
add
or
jmp
addl
jle
stos
mov
jne
dec
mov
imull
pop
cmpsl
add
aas
movsb
add
add
and
cmp
call
pop
pop
cld
adc
inc
add
int
scas
je
ret
xor
in
pop
inc
add
nop
addb
add
lret
pop
sbb
pushf
adc
add
jmp
add
rolb
add
add
add
inc
add
add
mov
push
sbb
movb
add
xor
jae
lret
or
add
add
aas
mov
jle
xchg
jp
mov
add
mov
je
push
ja
rcrb
cmp
enter
add
xlat
addl
movsl
add
add
mov
add
mov
inc
add
ja
push
fidivrl
pop
icebp
ljmp
or
fdiv
bound
mov
mov
add
test
jnp
add
repnz
mov
add
push
add
pop
add
insl
cmp
call
add
cli
add
mov
stos
lret
xor
cltd
dec
sub
mov
cli
or
mov
sbb
bound
ficompl
insb
xchg
pop
add
hlt
out
lahf
mov
jmp
xlat
dec
add
add
add
push
jo
repz
leave
or
add
adc
fmuls
arpl
in
push
add
jb
inc
add
js
mov
into
ljmp
test
call
iret
mov
insb
mov
jns
add
pop
add
mov
mov
jle
ljmp
add
xor
arpl
xchg
imul
jg
jo
inc
add
sub
add
jecxz
popf
jo
stos
xchg
push
fstl
pop
imul
stc
icebp
movsl
add
add
and
add
add
push
fwait
aam
add
jg
mov
mov
add
add
mov
jns
add
push
add
lret
cwtl
mov
adc
fwait
clc
jle
add
mov
jae
addl
mov
add
nop
sub
repz
ljmp
lods
cwtl
loop
stos
ljmp
cs
in
popf
bound
outsl
jp
mov
inc
add
add
ficoms
add
pop
add
add
out
mov
add
add
xor
les
scas
xchg
scas
mov
add
inc
add
add
adc
repz
pop
dec
dec
imul
add
xchg
nop
rcll
pop
fwait
pop
sti
jo
jbe
add
add
and
sub
negb
and
add
clc
mov
clc
outsl
sti
inc
add
das
jo
xchg
insl
sub
add
xchg
fnstcw
xchg
jmp
add
aas
mov
jecxz
and
add
sub
add
add
insl
pop
push
jo
xor
cmpsl
add
hlt
dec
sbb
inc
add
dec
xchg
or
fdivs
ja
addl
loop,pn
mov
mov
cmp
movsb
add
and
je
add
pushf
mov
add
add
les
push
in
fisubs
jo
pop
pop
mov
jmp
or
outsb
lret
add
cs
add
add
add
das
std
cwtl
sub
mov
mov
dec
daa
add
add
add
test
data16
adc
cmpsl
add
mov
fistpll
stc
adc
push
sub
pop
cmp
movsb
add
pop
add
mov
xor
xchg
je
sbb
ficoml
inc
add
inc
add
leave
xor
jns
add
add
dec
cmp
xor
or
cld
pop
ljmp
lcall
mov
add
push
add
outsl
rolb
in
mov
pop
hlt
inc
add
fbld
mov
sti
push
bnd
ficompl
add
mov
jo
sbb
dec
daa
add
fadds
lock
jmp
sbb
addl
add
je
add
or
add
push
iret
cmp
mov
add
leave
pop
call
or
ds
dec
call
cmpsb
add
add
data16
insl
jg
stos
fdiv
cmpsb
add
in
rcrl
add
dec
sti
jae
int
or
mov
push
pop
sub
xchg
ljmp
add
lcall
inc
add
push
push
add
stos
sub
pushf
mov
mov
daa
add
inc
add
add
out
fistpl
dec
mov
movl
mov
sub
repz
imul
ret
add
cmc
or
add
mov
pop
pop
aam
or
fsubs
xchg
int3
mov
mov
add
add
xchg
aad
sbb
addl
aad
jns
pop
mov
push
add
add
push
imul
loopne
das
adc
test
imul
dec
addb
divb
xchg
movsb
add
movsl
add
pop
daa
add
out
nop
fwait
pop
rolb
add
add
jne
dec
pop
popf
fnsave
and
leave
call
imul
add
push
add
addb
dec
xchg
pop
int3
lret
jp
add
int
add
add
mov
add
jmp
add
sub
add
pop
imul
xchg
insl
push
shr
sahf
jmp
jl
cmp
add
add
pop
mov
xor
lret
add
insl
lret
lea
scas
adc
ss
push
add
add
call
push
push
add
cltd
jle
or
mov
add
addl
xor
lods
les
int3
dec
loop
int3
addr16
out
mov
inc
add
add
push
add
add
add
imul
add
dec
mov
add
mov
mov
add
into
xor
dec
add
pop
test
dec
xor
add
and
stos
fsubs
add
out
mov
add
add
ds
push
jb
insl
mov
xchg
xlat
adc
mov
mov
adc
lds
inc
add
add
add
mov
or
mov
scas
ficoms
add
outsl
sub
movsb
add
add
jp
data16
aad
aaa
fcoms
ret
dec
repnz
add
cmc
imul
fisubrs
xchg
mov
add
or
add
lods
loopne
pop
add
inc
add
movl
stos
cmp
add
or
jne
pop
test
out
dec
sbb
push
jmp
movsl
add
pop
fwait
jl
add
add
lock
add
add
ret
adc
xchg
movsl
add
lahf
stos
cmp
test
lret
lret
xchg
movl
das
addl
add
add
add
lret
hlt
sub
jg
mov
mov
or
pop
addl
add
das
xchg
int
sbb
jb
jae
shll
sbb
mov
jp
addl
add
test
lcall
fstpt
fadds
add
mov
cwtl
rclb
add
add
ret
add
insl
addl
mov
and
sbb
add
lea
arpl
dec
sbb
enter
aas
mov
cmpsb
add
iret
movl
inc
add
stos
or
lret
jns
push
add
jmp
dec
insl
mov
or
add
leave
sbb
dec
dec
adc
rolb
add
add
dec
adc
and
data16
xor
jmp
add
cwtl
pop
jecxz
stos
cmp
add
jmp
add
stos
scas
or
test
je
int3
bound
hlt
push
push
push
and
mov
rcll
push
sub
decb
push
push
mov
clc
imul
add
add
add
repz
add
mov
clc
inc
add
add
sbb
sub
xor
scas
xor
jge
jae
jl
add
add
add
add
stos
inc
add
call
cld
push
fnstenv
nop
and
sub
add
push
roll
roll
push
fisubs
add
cwtl
arpl
imull
mov
sbb
add
pop
mov
push
add
in
mov
ret
add
cmpsb
add
add
or
out
sub
inc
add
add
add
add
add
lds
in
cmpsb
add
cmp
fisubrs
add
xor
fwait
pop
lods
js
sahf
dec
leave
cmpsl
add
push
mov
add
sub
lret
and
mov
popf
lret
ss
add
insb
in
mov
lods
bound
enter
lahf
fwait
xor
test
and
xlat
minps
mov
add
imul
push
add
aas
outsb
ja
aas
arpl
cmp
data16
stc
out
pop
xchg
data16
ret
cmp
pushl
add
add
movsl
add
test
mov
mov
out
roll
dec
add
hlt
xchg
xor
or
jno
test
inc
add
test
mov
inc
add
addl
jo
jnp
add
add
int3
imul
aas
nop
movsb
add
add
add
jo
rolb
sbb
dec
lret
mov
fs
into
pop
sbb
add
xor
jle
add
inc
add
add
sbb
clc
repz
cmpsb
add
and
sbb
out
pop
add
test
add
sub
add
cmp
add
movsb
add
fdivl
add
jmp
sub
scas
mov
inc
add
mov
xor
adc
ja
add
sub
add
push
add
add
scas
lea
or
mov
stc
sahf
push
add
cmp
loopne
jno
jno
push
add
pop
loope
adc
mov
pop
push
add
imul
add
dec
outsb
dec
lods
lods
sub
leave
push
add
add
inc
add
nop
push
add
mov
jno
fwait
or
ja
jecxz
mov
add
xchg
adc
dec
and
std
cli
addb
out
loope
call
add
jg
adc
dec
sbb
add
jno
movl
dec
cmp
mov
push
xchg
jmp
mov
lods
scas
shl
push
popa
add
mov
xchg
out
cmc
and
imul
add
add
add
ret
popf
rol
add
lods
das
mov
imul
pop
xor
movl
add
sbb
sbb
add
lret
je
mov
cld
pop
cmc
mov
add
pop
jl
add
jo
fwait
xor
mov
inc
add
loop
mov
repz
sbb
out
mov
addr16
mov
or
add
mov
add
pop
add
aad
add
add
ljmp
cmp
add
lcall
imul
out
mov
add
movb
aad
add
sub
add
add
icebp
aam
xchg
sti
xchg
call
add
rolb
and
jecxz
xchg
jecxz
gs
adc
ljmp
addl
addb
inc
add
in
loop
addl
add
add
or
testl
dec
out
mov
push
push
movsl
add
addb
popf
add
xor
loopne
and
mov
add
mov
data16
addl
add
in
and
shll
xlat
aas
in
shlb
insb
xor
insb
jmp
cmc
push
jecxz
aaa
imulb
mov
in
ja
mov
mov
repnz
loope
cld
jne
mov
push
adc
lods
out
icebp
sbb
add
mov
xor
add
add
fsub
add
push
or
loope
adc
sbb
add
cmp
add
addl
into
sti
ljmp
mov
fidivl
in
ds
addb
repnz
pop
xor
push
add
sub
jecxz
pop
test
and
fucomp
inc
add
inc
add
add
mov
imul
imul
sbb
or
outsl
add
mov
and
adc
lahf
cwtl
xchg
and
add
test
mov
add
add
cmpsb
add
mov
test
add
add
push
jnp
add
add
add
add
pop
imul
ss
stc
dec
push
movb
dec
dec
pop
jno
inc
add
cmp
inc
add
mov
add
mov
add
add
sarl
fsubrs
inc
add
inc
add
mov
xor
jge
xor
lock
mov
icebp
cli
xchg
sti
roll
and
addl
call
add
cmp
mov
add
pop
xchg
and
xchg
repz
mov
add
std
jne
push
add
push
icebp
push
rorb
add
xchg
sbb
add
out
inc
add
mov
or
mov
adc
mov
add
add
jmp
inc
add
repz
sahf
mov
add
add
add
das
push
add
add
aad
add
movb
add
or
inc
add
cmpsb
add
add
add
add
icebp
mov
cwtl
sub
add
add
addl
out
sbb
nop
int3
xor
cwtl
cmc
mov
out
inc
add
fcoml
add
push
fiaddl
dec
bound
das
add
insl
push
call
inc
add
add
mov
add
xchg
les
push
cmp
mov
add
iret
test
fwait
hlt
scas
dec
jbe
rorb
cwtl
add
popf
data16
enter
lret
fcoml
das
pop
out
popf
jecxz
xlat
mov
mov
xlat
clc
lods
sbb
daa
add
inc
add
mov
sub
les
mov
add
push
add
leave
imul
dec
in
sbb
addl
add
pop
push
fdivrl
jmp
pop
shll
mov
cs
add
add
mov
add
add
mov
movl
clc
movl
mov
add
add
loop
mov
add
mov
inc
add
cwtl
push
cld
add
stos
jg
add
add
ret
add
add
data16
movsl
add
add
enter
js
daa
add
add
adc
ret
add
ret
sub
push
add
add
sub
movsl
add
add
stc
cmpsl
add
mov
mov
add
inc
add
add
add
add
mov
cli
iret
inc
add
cmpsl
add
inc
add
pusha
add
hlt
jo
adc
mov
add
add
add
add
mov
lods
add
adc
push
xor
rolb
add
cmp
sub
add
mov
or
add
into
das
cmpsb
add
inc
add
xchg
shl
xor
and
xchg
and
aad
inc
add
popa
add
movsb
add
add
add
mov
inc
add
dec
aam
adc
jae
jnp
add
add
decb
add
push
in
in
les
sub
xchg
mov
pop
lret
or
inc
add
add
cli
cmp
jo
and
rolb
cmp
mov
mov
add
aas
ret
add
adc
pop
push
add
cmpsl
add
jl
fisubs
ja
add
add
mov
inc
add
addl
cltd
das
push
add
add
std
mov
dec
ret
pushf
xlat
add
add
add
add
aaa
loopne
lock
add
add
fwait
les
jl
insl
xor
ja
test
jbe
add
add
data16
inc
add
call
lcall
addl
adc
or
lea
cmp
add
inc
add
inc
add
add
xchg
push
mov
pop
in
inc
add
loope
shlb
push
add
loop
mov
pop
add
adc
add
add
inc
add
jno
mov
add
add
push
fcoml
jo
mov
imul
cmpsb
add
sub
test
mov
lahf
aad
mov
push
add
pushf
into
push
cli
into
movb
add
xchg
push
popa
add
add
ss
jl
pop
in
inc
add
jb
int
in
dec
ret
add
arpl
mov
fldl
mov
xor
stos
push
add
pop
pop
ljmp
add
adc
add
add
add
adc
push
rclb
jecxz
shll
push
add
outsb
loopne
jbe
mov
iret
sbb
in
cmpsl
add
jae
jecxz
bound
imul
add
fsubs
call
add
or
jns
scas
stos
mov
add
sbb
pop
or
sbb
cmp
add
add
mov
add
add
add
test
icebp
dec
mov
repz
stos
sub
enter
data16
add
mov
out
mov
and
fildl
push
add
mov
jns
enter
add
and
frstor
inc
add
add
add
add
ljmp
mov
sbb
sbb
add
jge
add
lret
hlt
fdivs
add
cmpsl
add
repnz
mov
sbb
pop
sub
scas
leave
in
loopne
lds
sti
pop
xchg
fld
add
xchg
cli
mov
fisttpl
add
add
sti
dec
cltd
stos
sbb
jo
adc
test
or
std
popa
add
imul
jne
dec
aam
ret
add
add
cwtl
inc
add
arpl
mov
add
jmp
repnz
fs
add
ss
out
mov
cmp
jl
repnz
add
rcrb
cmp
ds
xor
mov
repnz
mov
add
add
sti
jecxz
sti
cltd
cmp
add
ljmp
repz
xor
jg
hlt
jecxz
adc
fdivl
sti
mov
add
jae
push
add
ret
add
add
shlb
push
mov
dec
stos
stc
adc
pop
mov
add
stos
addl
lock
fmuls
and
mov
das
ss
add
dec
pop
jle
popa
add
sub
push
and
add
js
pusha
add
add
aaa
pop
mov
mov
ss
cmp
push
add
mov
dec
fisubrl
add
add
add
add
add
jp
fisttpl
repz
inc
add
pusha
add
push
inc
add
adc
iret
mov
push
push
add
mov
sub
add
add
fstp
add
mov
pushf
lock
mov
jecxz
pop
popf
push
jae
std
repz
shld
lock
push
add
xchg
sub
add
adc
lds
dec
sbb
add
sub
push
add
add
lds
jecxz
iret
in
jnp
sbb
fisubrs
or
xchg
xor
pop
addl
add
push
pop
and
ja
add
iret
mov
add
les
xor
fcomps
add
test
stos
out
xchg
repz
add
in
xor
cmp
cmp
cltd
movl
add
add
push
repnz
add
pop
les
pop
mov
arpl
fcomps
pop
dec
cmp
jl
sbb
adc
cltd
pop
or
add
lea
mov
add
adc
inc
add
out
scas
pop
arpl
fldt
pop
sub
out
fsubrl
sub
add
push
minps
add
addl
add
add
mov
dec
lds
movsb
add
test
add
dec
lds
les
fwait
ss
pop
incb
mov
rcr
jl
movl
or
inc
add
add
inc
add
push
sbb
dec
roll
add
mov
add
into
imul
into
gs
sub
cmp
push
add
add
and
push
push
and
icebp
lds
xchg
pop
shrl
or
add
cmc
xor
xor
loope
sub
push
xchg
imul
add
or
iret
jg
daa
add
int3
test
shrl
add
cmp
jle
jbe
add
add
std
mov
sub
ror
or
cmc
sub
push
add
lods
aam
add
xchg
mov
dec
jns
movl
icebp
hlt
jle
add
add
imul
add
int
sbb
xchg
data16
mov
add
cmpsb
add
mov
adc
add
jecxz
jg
jg
mul
add
mov
les
imul
je
push
add
test
add
add
add
and
mov
out
mov
setg
add
pop
xchg
sub
daa
add
test
pop
push
add
mov
add
add
add
jg
hlt
push
sahf
mov
sbb
add
mov
daa
add
pop
jmp
pusha
add
out
sti
inc
add
add
add
add
add
pop
add
xor
sbb
mov
and
add
fcomi
pushf
dec
add
lahf
es
popf
mov
add
pop
xchg
mov
xchg
pop
sub
add
cmp
lea
add
sbb
mov
push
add
adc
xor
addl
add
in
mov
add
add
leave
bound
mov
push
mov
repnz
repnz
ret
add
add
add
add
mov
add
add
add
add
sahf
mov
xor
inc
add
xchg
das
push
push
arpl
cli
xchg
int3
imul
cmpsl
add
add
add
add
inc
add
fists
add
adc
add
mov
add
add
les
addb
add
add
insb
jno
xchg
jl
add
add
dec
mov
add
add
add
add
pop
add
xchg
stc
ljmp
add
xor
xchg
insl
xchg
cwtl
xchg
mov
add
add
decl
lcall
or
cmp
push
add
imul
outsb
aam
add
addb
xor
push
add
cltd
test
inc
add
js
push
add
sbb
add
add
add
fisubl
xchg
mov
pop
xchg
insl
rcl
add
mov
sub
add
add
fistl
in
mov
pushf
cmp
je
xlat
and
test
or
ret
ret
pushf
add
lds
dec
das
jecxz
inc
add
icebp
aaa
cld
dec
sbb
cmp
lahf
stos
pop
add
add
dec
jmp
add
outsl
sbb
xlat
pop
xchg
mov
or
dec
inc
add
add
fwait
push
sbb
ds
pop
je
add
add
or
pop
sub
addb
shlb
xlat
push
pop
jp
sbb
cmp
mov
mov
enter
add
add
addl
add
add
adc
adc
adc
mov
add
test
add
add
add
data16
pop
mov
add
cmp
add
mov
sbb
and
test
bound
sub
bound
fsubs
dec
push
add
in
adc
sub
pop
js
add
xchg
push
add
push
jge
insb
aam
cld
scas
mov
push
ret
push
add
mov
or
aas
jecxz
ja
in
add
pop
sbb
inc
add
mov
sbb
jnp
mov
add
aaa
addl
add
add
movl
or
adc
mov
sbb
push
cli
jb
mov
cmpsb
add
cwtl
hlt
out
bnd
pop
add
test
int3
push
cltd
adc
xchg
cmp
add
add
sbb
dec
xchg
lods
scas
daa
add
sbb
popf
in
in
add
movl
add
inc
add
loope
xor
push
add
in
mov
mov
pop
in
addl
add
aaa
addr16
js
add
adc
outsb
scas
cwtl
mov
add
lods
cmp
scas
xor
xor
push
add
mov
movsb
add
add
and
loope
mov
std
sahf
lds
rcrl
push
rorl
addb
jae
stos
xor
and
roll
xlat
xchg
lods
mov
add
add
into
pop
xchg
sbb
xchg
push
mov
add
incb
movl
push
add
movb
add
pop
sub
cwtl
fstpt
mov
push
add
jo
stc
aas
mov
pop
push
add
sti
and
adc
push
movl
jo
test
xchg
sbb
les
mov
push
add
push
push
push
add
push
add
or
add
sbb
add
add
dec
mov
add
push
push
clc
add
rolb
add
add
add
pop
mov
add
rcrb
add
cmp
call
sub
and
scas
and
xchg
test
mov
add
mov
rcrl
xlat
sub
dec
jmp
add
cmp
sub
push
add
jnp
mov
add
sub
movsl
add
add
arpl
jns
or
add
add
add
fld
add
add
add
xchg
stc
loope
dec
lods
inc
add
xchg
std
pop
jns
add
daa
add
add
add
add
add
movb
sub
jmp
jbe
loopne
xchg
out
mov
add
add
add
ss
add
xchg
mov
add
push
push
add
into
add
dec
dec
mov
add
add
cld
mov
add
cmpsl
add
sbb
add
add
add
add
add
xor
dec
mov
mov
inc
add
das
iret
xchg
data16
dec
pop
dec
cmc
dec
addb
add
jne
mov
add
hlt
dec
repnz
sbb
js
mov
add
pop
inc
add
jae
dec
mov
movl
jg
add
add
inc
add
add
add
xchg
jge
add
add
int
inc
add
inc
add
and
lods
mov
xor
bnd
and
cmpsb
add
add
lds
and
addr16
add
xor
add
divb
adc
sar
leave
mov
add
jecxz
lret
push
add
loopne
dec
push
cmp
add
add
cmpsl
add
mov
sti
dec
mov
stos
mov
pop
into
insb
pop
pop
cli
pop
xor
fwait
mov
ljmp
add
push
add
rol
add
push
cld
lcall
and
test
cld
or
pop
inc
add
fmuls
imul
xlat
pusha
add
add
add
stos
push
add
add
add
mov
pop
mov
movsb
add
dec
std
add
addl
mov
div
xchg
and
pop
jnp
add
stc
fstps
enter
js
cs
pop
mov
xchg
enter
push
add
xor
add
mov
pushf
inc
add
addb
mov
push
add
mov
or
fucomp
lret
les
out
divl
add
aas
int
dec
inc
add
lret
push
cmp
add
call
lret
aas
addl
test
add
add
add
mov
add
scas
pop
jne
add
add
shll
cwtl
out
mov
adc
push
notb
jge
push
pop
mov
add
add
ficoml
addl
aas
lret
in
lea
inc
add
pop
int
add
add
add
xchg
rclb
add
mov
add
add
cli
or
pop
and
pop
sbb
add
cld
inc
add
cltd
rorl
add
mov
adc
xchg
das
inc
add
add
jbe
js
add
pushf
cmp
xor
fwait
sub
add
add
and
sbb
push
add
sahf
xlat
sti
adc
mov
dec
push
add
add
adc
fcmovnu
mov
jecxz
cmpsb
add
call
mov
fwait
adc
arpl
add
add
sbb
sub
mov
and
jp
add
add
add
nop
movl
rcll
add
lock
add
sahf
gs
mov
add
in
mov
add
add
inc
add
add
push
xchg
mov
sub
call
add
add
add
or
mov
add
inc
add
add
and
add
push
rcll
jb
and
xchg
pop
sbb
add
int3
adc
rorb
add
inc
add
inc
add
lcall
int
xor
and
fiadds
add
fcmovbe
push
add
sbb
xor
bnd
jbe
lods
arpl
out
int3
outsb
ss
movsb
add
sbb
aam
add
loop
mov
add
xor
jnp
add
fildll
or
in
lret
ret
add
outsl
mov
add
push
xor
insb
clc
arpl
jle
add
xchg
pusha
add
sti
cmp
push
add
cmp
add
add
jns
mov
pop
ss
cmp
add
pop
xchg
ja
add
shl
sbb
addb
add
stos
addl
aad
mov
dec
jns
add
push
add
add
add
or
cmp
mov
cltd
daa
add
adc
add
pushf
adc
dec
fnstcw
lcall
xchg
pop
cmc
mov
cmp
add
push
add
mulb
mov
psllq
cmc
inc
add
lods
push
add
out
adc
or
les
pop
xor
addb
add
jge
roll
lcall
xchg
in
mov
rcr
ljmp
add
add
je
jp
xor
adc
and
add
addb
mov
add
insb
add
sbb
add
or
add
inc
add
add
add
add
add
adc
cmp
ds
xor
add
cli
insl
in
add
add
insl
inc
add
push
mov
ror
lods
daa
add
add
add
call
cld
cmp
push
add
sbb
out
inc
add
xor
and
rolb
movl
fwait
push
in
jns
add
sbb
jecxz,pn
inc
add
add
sbb
jle
mov
das
lret
pop
jmp
fdiv
addb
sbb
cmc
loop
cmp
or
sub
add
jbe
inc
add
push
movb
xchg
mov
mov
mov
push
push
add
popf
xor
jl
in
xchg
into
icebp
js
or
jb
fidivrl
scas
xchg
cmp
add
add
mov
add
out
add
mov
or
add
leave
in
pusha
add
add
sbb
outsl
push
add
les
add
add
add
cmpsl
add
das
lea
nop
adc
lahf
push
je
addl
pop
incb
add
lods
mov
loope
es
adc
fisubrl
addl
cld
adc
rolb
add
add
outsb
arpl
mov
add
jns
js
lcall
add
add
in
test
movl
jl
add
movb
add
dec
cmpsb
add
jl
call
fucomip
xchg
sbb
add
inc
add
sbb
fstpl
cmp
add
mov
add
cltd
sub
sbb
push
lret
loope
js
and
dec
cmpsl
add
les
jecxz
add
in
sub
push
mov
stos
push
mov
add
add
add
dec
lods
in
movb
aaa
aam
push
add
or
shl
add
add
inc
add
add
cmp
cmp
insl
int
jne
add
add
push
add
add
push
movsb
add
xlat
cmp
add
add
add
sbb
add
inc
add
mov
dec
sbb
dec
push
add
push
js
add
lds
int3
clc
mov
in
push
push
push
jns
or
sub
clc
call
add
add
push
add
popa
add
add
imul
icebp
mov
add
imul
add
add
sub
add
push
mov
sub
pop
adc
test
mov
add
fdivrp
iret
mov
cmp
lods
cmp
push
lods
jl
add
add
push
mov
addr16
or
pop
xchg
fistps
sub
add
fisubl
add
dec
mov
add
add
lods
adc
loope
lahf
ja
add
in
or
fsubrs
add
sbb
stc
fimuls
adc
add
add
inc
add
mov
fstpl
push
mov
cld
mull
mov
popa
add
dec
inc
add
jb
aad
repnz
or
insl
sbb
int
add
icebp
xchg
pusha
add
cmpsb
add
and
nop
dec
sbb
xchg
out
or
adc
inc
add
aas
in
roll
push
add
xor
or
adc
cmp
add
add
cld
addl
out
or
add
addb
cmp
inc
add
or
mov
sldt
lcall
ss
std
imul
insl
adc
fidivl
fwait
push
add
sub
pop
cmp
aaa
pop
pop
push
add
sub
add
xchg
sbb
mov
add
add
cmpsl
add
daa
add
bnd
add
mov
add
imul
lea
bound
push
inc
add
cmpsb
add
xor
add
mov
iret
loopne
mov
add
test
add
add
add
testl
dec
ljmp
adc
mov
jns
add
or
add
fcmovu
cmpsb
add
lcall
add
dec
jns
pop
stos
mov
add
add
mov
xor
xor
add
adc
stc
mov
add
popf
sbb
leave
or
iret
stos
scas
jmp
add
add
add
aas
mov
mov
movsb
add
add
add
add
pop
push
add
push
add
cmpsl
add
idivb
pop
data16
pusha
add
dec
stc
int3
xor
addb
pushf
mov
fdivl
fadd
add
push
mov
les
sbb
scas
inc
add
daa
add
and
push
inc
add
add
lret
fldcw
add
psadbw
mov
stc
ljmp
add
xlat
mov
ljmp
add
in
or
pop
pop
cwtl
mov
jo
cmpsl
add
add
dec
filds
jb
adc
mov
push
add
scas
in
int3
movsl
add
addl
add
repz
mov
call
xchg
aad
add
jge
add
aas
xchg
scas
mov
test
scas
test
popa
add
aas
aaa
mov
popl
add
add
add
add
aas
jbe
add
popf
cmc
cmpsl
add
ret
add
sbb
dec
jmp
into
clc
push
add
dec
inc
add
add
push
jge
sub
loope
lcall
jns
add
sti
dec
lods
dec
mov
add
movb
pop
add
ret
jp
add
adc
mulb
cld
sbb
hlt
loopne
push
mov
add
add
or
add
add
add
out
iret
pusha
add
push
add
in
adc
add
add
pop
aam
add
lea
adc
data16
sub
les
xchg
dec
hlt
in
out
loopne
fcomp
dec
aas
cmc
in
adc
jecxz
lret
shlb
add
add
add
les
pop
pusha
add
stos
lea
or
fcmovnu
add
cmpsb
add
add
add
loopne
mov
pop
mov
push
das
and
fsubl
add
add
add
jne
add
mov
jb
movb
add
add
add
dec
in
inc
add
cltd
loopne
movsb
add
add
mov
jl
aas
xor
arpl
fildll
add
xchg
add
je
cli
xlat
sbb
leave
stos
adc
add
insl
gs
lods
inc
add
test
lret
add
add
xchg
test
or
add
aas
sbb
movsb
add
dec
lea
add
mov
add
inc
add
mov
add
add
ss
push
pusha
add
xchg
in
nop
and
inc
add
add
in
rcrl
inc
add
xor
add
jmp
and
sub
push
mov
add
pushf
xchg
mov
or
mov
add
dec
lret
and
lret
ds
jmp
add
repnz
mov
mov
jg
pop
add
adc
das
or
filds
push
add
or
rolb
rolb
add
add
add
je
add
lret
xchg
jo
xor
jnp
add
sbb
sub
dec
test
fists
mov
sbb
mov
hlt
aas
pop
add
inc
add
test
cmp
stc
xchg
push
std
fxch
imul
jnp
add
add
push
ds
xchg
roll
add
roll
add
pop
add
out
xchg
pop
adc
fisubs
sbb
add
addl
dec
sbb
xchg
cld
sbb
int
pop
repz
add
push
pop
and
clc
push
jmp
add
addb
add
add
in
jbe
lret
sub
sahf
ret
add
add
decb
sbb
add
add
ss
lahf
mov
pop
adc
stos
negb
add
add
add
add
push
clc
dec
scas
movsb
add
push
add
add
lret
test
fisttpl
or
mov
fsubl
test
addl
sub
mov
iret
test
pushf
outsb
iret
dec
mov
scas
int
add
out
insl
mov
add
not
cmp
jb
jne
add
cli
movb
jmp
xchg
repnz
add
int
add
add
jmp
adc
mov
sarl
or
add
xor
or
add
jo
jne
add
or
aaa
fcoml
add
imul
jo
sbb
add
add
add
add
add
movsb
add
rcrl
add
nop
mov
jo
push
add
add
adc
lret
inc
add
roll
add
push
in
fldcw
add
mov
fdivr
rolb
xchg
fwait
addb
addb
add
or
arpl
clc
push
lcall
add
nop
nop
push
add
cmpsl
add
int
inc
add
push
add
test
sub
jae
jp
fucomi
hlt
out
lret
addb
adc
push
rolb
pop
sbb
mov
xchg
test
add
add
sub
jb
movb
add
testb
dec
jbe
ja
add
add
jp
add
jae
bound
fs
add
mulb
sti
adc
adc
fisubl
mov
lcall
push
add
xchg
jl
cmp
scas
roll
pop
roll
add
add
imul
push
pusha
add
push
add
adc
repz
add
add
fprem1
cmc
std
sub
add
mov
test
arpl
std
add
add
mov
inc
add
add
leave
ljmp
mov
add
ror
mov
or
loopne
out
movsl
add
stos
mov
dec
sbb
add
fdivs
xor
sbb
add
and
pusha
add
bound
out
pop
add
js
out
jp
loop
jnp
add
mov
mov
loop
add
loope
add
fsubs
mov
aad
add
stc
lret
sub
sbb
adc
mov
add
add
add
add
add
in
jbe
adc
iret
push
inc
add
cwtl
jae,pn
adc
push
add
xchg
sbb
mov
cmpsl
add
add
in
xchg
loop
xlat
ret
add
push
inc
add
sub
hlt
adc
add
pop
adc
into
lcall
sbb
inc
add
push
popa
add
xlat
call
add
shr
push
mov
jb
movb
add
inc
add
mov
addb
add
inc
add
addb
add
or
mov
cld
rorl
pushf
lods
jg
push
mov
les
cmc
add
in
pusha
add
fwait
insl
clc
call
add
les
sahf
push
add
add
add
add
add
lods
add
cld
cmp
loopne
push
add
pusha
add
movb
add
add
rolb
add
xchg
mov
mov
sbb
adc
icebp
shlb
push
decl
repnz
clc
adc
in
aad
xchg
insb
cmp
jle
fsubrl
sub
pop
lret
push
add
add
add
rclb
adc
cltd
or
insb
push
add
add
lds
inc
add
add
sar
adc
add
jecxz
cld
fistpl
xor
ret
add
hlt
add
and
xchg
sub
or
add
flds
add
push
mov
xor
jb
mov
enter
sbb
loop
sbb
add
add
cwtl
and
jp
add
add
sbb
jp
jg
add
mov
lds
pop
mov
js
mov
jge
mov
add
jae
leave
mov
pop
insl
cmpsl
add
rcrl
mov
add
mov
stc
sub
jmp
aaa
outsb
mov
add
shll
mov
pop
dec
sbb
data16
xlat
pop
nop
dec
pusha
add
jle
push
in
add
add
add
pop
imul
outsl
loop
stc
push
add
add
incl
iret
xchg
mov
lods
iret
push
out
ret
add
xor
sar
jg
add
lcall
mov
sub
je
fnstsw
sbb
mov
loopne
les
out
push
inc
add
add
add
int
ss
add
ret
add
add
out
lods
pop
out
mov
add
addb
repz
push
fldl
mov
add
jge
fdivl
sbb
cltd
movb
xlat
xchg
push
out
cmp
add
jp
and
pop
inc
add
inc
add
dec
or
add
jo
mov
addr16
add
or
jnp
adc
cmpsl
add
cmp
add
testl
add
add
mov
add
add
add
test
mov
pop
cmc
xchg
rolb
add
add
out
add
sub
and
nop
add
aaa
push
add
pop
mov
not
movsb
add
add
mov
test
out
cmp
mov
mov
add
add
data16
push
xor
lods
xchg
push
inc
add
add
add
add
jp
ficompl
test
out
jne
add
xchg
adc
stc
sbb
add
add
out
aas
inc
add
hlt
add
add
and
or
out
lahf
bound
sar
jo
ret
add
add
jp
and
add
add
add
arpl
ljmp
add
scas
das
movl
mov
and
jp
add
clc
xchg
jnp
add
add
pushf
add
mov
fimuls
jae
jo
es
scas
mov
fisubl
add
sbb
xchg
iret
pop
add
mov
daa
add
pop
add
daa
add
mov
clc
cmp
add
aad
lock
add
sti
or
add
scas
std
rcrl
fucomi
daa
add
sub
or
ud0
fnstcw
pop
push
add
fldl
add
add
pop
loope
mov
add
add
aad
add
imul
aad
add
in
xor
add
into
add
icebp
aaa
clc
cmpsl
add
sbb
inc
add
nop
out
into
add
mov
add
es
lock
add
into
mov
dec
add
pop
stos
push
adc
or
add
or
and
add
addl
enter
add
add
out
movl
add
add
cmp
inc
add
in
stc
addb
movb
das
fwait
pop
add
xor
xor
pop
pop
pushf
pop
add
add
jno
xor
rorl
add
lret
ds
xor
and
xchg
push
aaa
lods
jmp
sahf
mov
sub
in
adc
je
jecxz
push
loop
dec
inc
add
cld
rolb
out
xchg
push
fsts
add
jns
cmc
mov
add
repnz
add
add
add
iret
inc
add
xchg
adc
imul
imul
ljmp
jge
jbe
add
imul
roll
xchg
daa
add
movsl
add
jle
sub
xchg
fwait
or
lret
jb
sub
add
xor
sbb
xor
jns
add
add
add
add
cmpsl
add
add
add
xchg
popa
add
out
inc
add
add
add
ret
add
or
pop
xchg
sbb
and
scas
sbb
fidivl
test
cld
push
inc
add
and
jle
in
pop
dec
in
idivb
or
fdivrl
adc
mov
add
add
push
mov
cwtl
in
add
xchg
data16
add
repz
out
mov
add
add
test
add
add
add
add
mov
int3
inc
add
add
add
add
les
pop
movsb
add
mov
add
xchg
jl
add
add
adc
stc
and
addb
mov
add
sbb
or
dec
addr16
and
daa
add
add
cmp
mov
add
cmp
jb
ret
mov
insb
push
add
add
add
dec
mov
add
dec
js
add
mov
add
add
sub
sub
adc
shl
add
movsb
add
or
or
sbb
sub
inc
add
outsl
jl
stos
lahf
ljmp
mov
add
add
push
das
and
xor
cmp
and
add
mov
sbb
pop
mov
xor
dec
je
add
and
lret
imul
movsl
add
mov
fsts
outsb
push
cltd
jle
add
add
faddl
imul
add
lahf
addl
test
das
rolb
pusha
add
push
repz
add
add
sub
fwait
lds
nop
sub
incl
add
add
ret
mov
add
add
jmp
or
pop
inc
add
lods
loop
xchg
outsl
data16
add
roll
repz
push
add
mov
addb
add
mov
outsb
mov
cltd
inc
add
add
jno
fadds
pop
addb
jmp
jl
push
add
add
add
addl
aaa
mov
add
add
pop
pop
in
and
and
sub
pop
mov
iret
add
loop
and
push
cmc
addl
inc
add
and
xchg
inc
add
add
cmp
push
cs
add
mov
add
add
ja
add
enter
addb
add
sbb
xchg
nop
mov
dec
add
daa
add
movb
fwait
xor
shlb
add
sbb
lret
push
ret
add
jg
pop
hlt
addb
jne
add
add
mov
add
loop
in
ljmp
add
add
add
dec
fidivs
add
cwtl
xor
popa
add
mov
add
lret
aad
add
movsl
add
push
les
sub
test
in
jne
mov
add
daa
add
add
lahf
cli
aas
outsb
xor
jge
add
add
add
push
sub
add
out
scas
or
sbb
sub
push
add
add
jbe
mov
and
lds
cmp
add
pushf
loopne
fcoml
add
jp
add
cwtl
hlt
cmpsl
add
faddl
add
add
xor
shll
cmp
arpl
push
sbb
add
sub
rcll
pop
repz
sbb
dec
cmc
mov
push
add
fwait
aam
xchg
aam
or
in
sbb
add
or
pop
bound
lahf
cmp
mov
les
mov
add
or
dec
addb
addl
add
stc
and
data16
add
xchg
pop
lret
sbb
add
mov
add
add
mov
insl
cli
xchg
xchg
sub
jle
movsb
add
add
mov
in
dec
cs
out
pushf
std
jne
sub
mov
pop
push
fldt
inc
add
ret
add
add
fidivrs
xor
repz
scas
inc
add
add
dec
in
ret
add
lods
adc
pushf
sbb
test
jge
jecxz
sub
int
outsl
loopne
or
xor
fldcw
add
icebp
jl
ret
add
sub
add
add
cld
int
add
movl
pop
add
lcall
xor
xchg
insl
inc
add
add
add
add
add
xchg
hlt
in
lret
xchg
mov
add
mov
push
pop
pop
add
add
add
inc
add
add
mov
rcll
add
add
pop
or
adc
pop
add
scas
data16
addl
add
bound
dec
inc
add
roll
mov
das
popa
add
imul
add
jno
push
dec
sbb
push
push
add
or
jl
cmpsl
add
pusha
add
jmp
add
xor
ds
mov
mov
ret
add
add
outsb
add
je
fcmove
and
rolb
jp
add
test
xchg
jnp
xchg
rcrb
inc
add
add
add
cmp
aaa
or
add
test
inc
add
add
add
aaa
dec
in
fmull
popf
sbb
push
add
inc
add
in
dec
repz
jae
push
add
push
scas
xor
add
jne
add
pop
inc
add
mov
cli
bound
dec
bound
xchg
mov
iret
cli
lock
daa
add
imull
add
loopne
or
add
add
outsl
stos
test
in
mov
cmp
xchg
lods
add
mov
jmp
xor
add
mov
in
lds
sbb
add
cld
lds
mov
add
cltd
fistpll
add
add
and
ljmp
add
xor
add
in
je
movb
add
in
inc
add
pop
ja
addl
imul
sbb
add
sbb
loope
loopne
movsb
add
add
add
xchg
scas
stos
adc
add
int3
xchg
pop
aad
mov
cmp
loopne
pop
add
push
cltd
fisubrl
mov
pop
or
mov
jecxz
stos
mov
add
add
add
add
addl
enter
mov
and
mov
lret
add
push
add
xor
jne
repz
add
jecxz,pt
push
ss
call
push
push
add
stos
sub
out
call
push
fadd
add
loop
mov
add
aaa
ret
inc
add
in
push
add
mov
push
cs
pop
repnz
push
add
add
add
add
add
ret
add
rolb
xor
or
iret
daa
add
negb
test
mov
add
add
add
pushf
in
shll
add
cmp
and
movl
sbb
fcmovnbe
nop
and
add
adc
pushf
inc
add
cld
insb
push
add
add
cmp
mov
in
jo
cmp
lret
sahf
pop
pop
roll
add
add
add
mov
cli
xor
test
add
bound
stos
and
dec
mov
jo
or
add
lods
add
jmp
add
push
add
add
add
sub
dec
push
add
add
add
mov
add
add
inc
add
cltd
inc
add
add
add
inc
add
add
fwait
lods
notb
push
fdivrs
insb
addb
out
scas
lret
push
mov
add
nop
add
add
add
lods
loope
movb
add
fnstsw
push
pushf
nop
inc
add
add
testl
dec
roll
sbb
pop
lock
jno
js
scas
bound
add
arpl
add
lods
xchg
or
cwtl
jmp
push
add
movl
mov
cmpsl
add
add
test
push
nop
mov
sub
mov
sub
lods
repnz
or
add
int3
lret
adc
add
cmp
cltd
hlt
mov
pusha
add
cmpsb
add
add
add
aas
sub
fwait
xor
div
mov
add
push
jb
mov
lea
enter
add
mov
pushf
push
add
jne
fwait
ret
add
mov
scas
pop
pop
xchg
addl
add
push
fcmovu
inc
add
add
add
xchg
mov
add
add
adc
adc
movsl
add
add
call
dec
in
leave
mov
cmp
jmp
lods
jno
in
lods
jns
add
inc
add
movl
or
add
lcall
add
jl
lds
aas
push
add
cmp
add
mov
push
data16
add
ljmp
ljmp
repz
add
add
roll
push
add
sar
sti
ljmp
add
jle
rolb
out
add
add
add
add
jmp
add
add
pop
add
jp
and
andps
mov
add
add
ffreep
add
push
add
jle
add
and
loopne
push
outsl
pop
fnstsw
cmp
enter
add
cmp
add
push
mov
add
jns
add
imul
and
nop
sbb
shrb
xchg
pop
xchg
pop
adc
add
xor
pop
repnz
sbb
arpl
pop
arpl
add
sbb
sahf
adc
add
rorl
lret
inc
add
mov
add
scas
sub
add
inc
add
mov
add
add
les
out
mov
lcall
jmp
mov
or
add
jp
add
add
add
add
cli
mov
mov
ret
add
add
add
jle
jbe
add
add
add
inc
add
add
pop
icebp
mov
jae
stos
data16
add
add
add
add
add
pushf
scas
inc
add
push
add
iret
jmp
mov
mov
stos
addb
add
add
jle
div
call
arpl
addl
push
addl
mov
mov
in
imul
jmp
mov
fs
add
clc
movb
add
push
add
mov
jle
fsubl
add
mov
jmp
aad
in
dec
lcall
mov
add
dec
push
add
sbb
lret
cli
sbb
addb
or
in
pop
sbb
add
mov
stos
fwait
cmp
lahf
movsb
add
js
fsubl
dec
je
add
xor
add
out
cld
push
add
add
add
sti
pop
jns
cmpxchg
enter
jmp
mov
sub
pop
add
mov
imul
data16
imul
add
add
arpl
dec
dec
mov
pusha
add
add
add
ret
data16
add
dec
jle
pop
add
aad
add
adc
dec
data16
cmpsb
add
inc
add
adc
divb
sbb
add
add
int
outsl
xchg
adc
popa
add
mov
add
add
xchg
add
data16
pop
sahf
add
jns
jmp
inc
add
pop
idivb
fistl
add
or
push
push
jae
cmpsb
add
out
xor
sub
aam
push
data16
add
add
add
adc
or
add
add
add
add
jne
add
out
mov
add
mov
add
push
stos
dec
out
movb
jne
xor
xchg
popf
mov
cmc
insb
mov
xor
movl
add
xchg
push
add
mov
add
ja
xor
icebp
sub
push
add
pop
pop
stc
cltd
out
push
popl
mov
add
sahf
movsb
add
add
add
outsb
inc
add
enter
addl
ss
out
push
movb
and
mov
add
in
ss
sbb
pop
bound
mov
push
add
add
add
mov
inc
add
add
shll
add
add
push
add
ret
pop
pop
inc
add
cmp
sbb
jnp
sub
xor
and
mov
add
jb
aaa
lea
cmpsl
add
xchg
lea
imul
lahf
inc
add
mov
cli
pop
adc
mov
jp
add
test
movl
cmp
rolb
add
or
mov
add
cmp
jns
add
repnz
mov
negb
fdivl
sub
fidivrl
roll
add
iret
fsub
add
add
data16
cmp
add
adc
hlt
popa
add
leave
adc
jae
into
fcomps
lret
pop
add
out
inc
add
les
mov
dec
pop
outsl
cltd
insb
outsb
outsl
xchg
int
add
add
popf
mov
and
scas
flds
cmp
add
add
dec
data16
push
add
pop
mov
iret
addb
sahf
leave
sbb
test
ficomps
inc
add
push
bound
jae
jb
je
adc
push
sub
hlt
ret
add
fadds
add
roll
xchg
sub
shrb
xchg
dec
fisubrl
inc
add
mov
xor
inc
add
scas
jmp
mov
jne
push
add
add
add
sbb
xchg
and
and
pop
lds
cltd
add
cmp
jne
ret
popl
add
fisubrl
fnstsw
or
and
push
and
jb
and
inc
add
add
add
add
call
stos
mov
push
push
add
add
ret
add
push
add
and
jmp
cmpsb
add
add
sbb
and
stc
xor
lods
cli
inc
add
xor
add
pop
rcrl
add
hlt
push
add
int3
add
add
add
pusha
add
cld
xor
les
push
add
testl
xor
popf
aaa
lret
pop
add
add
ss
jle
xor
add
out
cld
cs
roll
or
pop
adc
sti
xchg
adc
imul
insl
cmpsb
add
rcll
dec
adc
ja
fildll
add
add
xchg
std
enter
mov
add
add
mov
jae
or
mov
mov
cmp
cli
push
pop
push
add
add
add
push
xor
mov
and
adc
jnp
add
add
add
daa
add
cmp
push
mov
addb
out
std
xchg
xor
ret
add
test
or
sub
mov
push
dec
lock
adc
inc
add
mov
call
push
xchg
pop
and
mov
add
add
add
pop
lods
xchg
and
loope
loopne
mov
add
add
aam
or
les
cmp
cmpsb
add
add
add
add
mov
sub
xlat
inc
add
test
movsb
add
add
mov
push
add
inc
add
lods
inc
add
ret
add
sti
or
add
inc
add
xchg
push
jle
fwait
mov
notb
lcall
mov
sbb
mov
inc
add
fisubl
xor
imul
jmp
imul
jbe
push
rclb
add
add
addl
out
fnstcw
movl
nop
sub
sub
mov
jnp
mov
mov
sub
add
pop
pushf
icebp
in
pop
stc
in
mov
arpl
rcrl
and
adc
cli
xchg
dec
rol
add
push
cmp
add
jge
fs
add
push
dec
adc
xchg
pop
add
add
aam
enter
jo
inc
add
add
stc
iret
adc
in
aad
movsb
add
add
movl
add
push
jle
mov
int
imul
in
pop
push
add
int3
lret
add
icebp
jp
add
add
adc
add
mov
iret
hlt
ss
in
add
movb
jne
add
test
add
add
stc
ficoml
add
add
or
and
add
adc
aad
loope
icebp
loop
pop
push
into
jns
inc
add
add
add
test
xor
sbb
sub
add
pushf
mov
inc
add
mov
xchg
movsl
add
xor
out
push
pushf
out
aas
int3
out
adc
js
add
mov
add
push
add
std
mov
insl
adc
push
and
mov
or
add
push
and
inc
add
jmp
add
push
add
and
sub
mov
out
inc
add
pop
mov
mov
push
add
xchg
out
ljmp
push
add
or
mov
or
lret
out
ret
inc
add
xchg
xchg
addb
sbb
add
xchg
push
outsb
adc
and
pusha
add
sub
add
popf
test
iret
sub
sbb
add
jmp
inc
add
inc
add
push
fdivs
mov
and
movsl
add
jmp
stos
mov
add
add
out
or
les
or
fld
add
add
add
cmp
add
add
push
add
or
add
push
add
push
mov
add
pop
pop
insl
adc
lock
add
push
sub
add
mov
sub
sbb
sbb
add
loopne
jp
cs
movups
or
arpl
lock
add
ljmp
add
sti
mov
ret
add
xor
cmp
pop
cli
push
add
add
add
sub
cwtl
inc
add
adc
jno
aas
inc
add
add
add
push
scas
push
add
xchg
sti
sbb
loope
imul
push
add
add
add
or
add
add
mov
mov
mov
add
test
add
les
jecxz
inc
add
mov
loop
pop
mov
pop
xchg
in
add
sub
lods
das
sub
jb
into
lock
mov
test
mov
mov
movl
push
add
or
repnz
fs
xor
dec
sub
dec
xor
mov
add
add
add
loop
xchg
addl
mov
add
mov
mov
add
pop
in
cmp
mov
add
mov
add
and
sahf
xor
jae
in
and
stc
pop
das
dec
push
outsb
fcomps
sub
out
inc
add
add
add
add
add
push
xor
add
mov
cmp
lcall
add
pop
icebp
call
add
ljmp
add
add
add
jp
roll
and
mov
pop
add
ret
mov
enter
add
sbb
inc
add
and
mov
mov
in
inc
add
add
leave
into
xor
add
insl
and
addb
addl
inc
add
mov
mov
add
add
mov
pop
test
iret
das
mov
cmp
add
roll
add
xchg
jge
add
add
xchg
sti
sbb
shlb
sub
add
inc
add
in
cmp
inc
add
div
adc
add
add
add
ret
add
and
or
push
add
xor
or
cmc
mov
add
fdivrl
push
inc
add
add
les
sarb
add
add
imul
jbe
iret
and
inc
add
nop
adc
xchg
sbb
cmc
mov
pop
mov
add
test
add
pop
xor
icebp
in
lds
inc
add
add
out
addl
in
or
icebp
cmp
add
add
sbb
push
add
pop
add
add
add
add
cltd
insb
loop
sub
inc
add
adc
mov
fwait
movsl
add
add
add
dec
outsb
pop
sbb
hlt
push
lods
std
outsb
lods
mov
push
add
pop
pop
and
imul
add
add
add
xchg
lret
popa
add
add
mov
sub
mov
ljmp
add
add
cmp
std
mov
push
add
cmpsl
add
insb
dec
xor
loopne
dec
out
or
add
sbb
jo
jbe
xchg
mov
add
ljmp
xchg
sub
add
or
add
roll
fsubrl
jge
iret
insb
nop
sbb
add
xor
jns
loopne
std
test
xor
xor
push
add
xor
les
pop
add
addb
cld
fisttps
sub
aas
xor
jne
add
add
les
add
xchg
lret
pop
aas
adc
lea
add
dec
mov
fstp
mov
xor
or
das
jge
add
xor
into
lods
movsl
add
je
push
fsubrs
adc
in
pop
inc
add
pop
sub
push
in
sbb
cld
jae
pusha
add
inc
add
pop
add
jle
add
movl
fnstenv
add
mov
fisubl
dec
inc
add
sbb
add
inc
add
imulb
pop
dec
addb
add
add
addb
pop
mov
add
insb
mov
in
sub
das
loopne
jno
and
lahf
mov
adc
jbe
xor
or
stos
stos
test
jne
add
hlt
or
push
add
add
add
add
add
sbb
adc
push
bound
and
adc
mov
pop
int
inc
add
mov
xchg
pop
pop
add
clc
push
and
add
inc
add
lcall
add
xchg
mov
add
add
pushf
ss
ds
inc
add
movsb
add
mov
lret
or
add
les
popf
and
mov
movsb
add
xor
sbb
sahf
push
push
add
ds
jge
xchg
cwtl
lea
add
addb
or
add
sub
cmp
add
add
add
cwtl
or
in
loope
jnp
out
cld
addb
push
pop
xor
mov
sub
repz
cmp
lret
add
push
add
dec
sbb
xlat
loopne
les
ja
cmp
add
lret
push
add
push
add
push
mov
add
add
push
movsb
add
frstor
cs
add
mov
ljmp
add
rorb
cld
mov
lret
xor
push
sahf
rcr
cmp
xchg
mov
add
add
add
movsl
add
xor
or
je
nop
push
pop
mov
and
mov
add
mov
mov
add
xchg
mov
xor
jl
jne
lret
add
add
roll
mov
or
add
add
movl
add
add
and
imul
add
mov
add
add
ljmp
add
int
fwait
rolb
jae
sub
add
jmp
hlt
jae
sarb
pop
aas
sub
mov
scas
loopne
pusha
add
add
stc
inc
add
negb
mov
add
testl
imul
mov
add
adc
sbb
add
aad
and
add
xchg
add
push
lods
mov
add
add
out
mov
fstpl
add
loopne
mov
add
add
dec
mov
xchg
cmp
dec
mov
pop
lahf
test
add
mov
leave
pushf
ret
sub
dec
push
add
adc
cld
daa
add
inc
add
add
aam
add
mov
add
add
mov
mov
mov
push
call
pop
jl
sub
mov
push
enter
lea
add
imul
imul
add
add
add
add
dec
xor
test
stc
push
cmp
mov
add
add
out
cmpsb
add
imul
daa
add
movb
add
fcmovnb
add
add
ja
xor
sbb
xchg
pop
mov
add
in
jmp
je
inc
add
popa
add
push
add
push
mov
rolb
xchg
or
in
sahf
xor
cmp
leave
cwtl
inc
add
loop
ja
add
or
or
sub
insl
scas
push
jnp
daa
add
or
cmp
fsub
add
jl
iret
popf
ss
inc
add
jno
pop
mov
adc
xchg
enter
cltd
jno
mov
jmp
add
incb
add
sbb
add
push
outsl
inc
add
add
lds
pushf
pop
add
loopne
pop
xor
cmp
add
pop
arpl
fdivr
jge
fisttpl
add
add
push
inc
add
stc
push
dec
jne
add
mov
nop
jmp
repnz
add
push
mov
pusha
add
xchg
les
sub
int3
add
repnz
adcb
add
movswl
nop
jmp
add
and
roll
add
mov
push
mov
xchg
ret
add
rolb
add
add
add
push
ret
stc
jb
add
add
mov
jmp
add
cmp
add
inc
and
jb
pop
mov
shl
add
sbbb
add
fldt
dec
mov
nop
jmp
add
add
stc
jb
mov
fucomip
add
pop
or
xorb
push
idivl
mov
stc
jb
repnz
mov
xorb
add
hlt
add
ja
mov
stc
jb
add
add
je
add
jne
stc
jb
add
add
orb
add
ret
dec
mov
push
mov
xchg
ret
int
add
mov
adcb
add
pop
add
les
stc
jb
daa
add
add
jno
stc
jb
hlt
add
add
jmp
jb
add
or
enter
add
add
add
stos
fcoml
jb
sub
filds
add
fildl
iret
push
mov
jge
je
lret
jnp
xchg
add
push
or
popa
stc
jb
lret
fildl
add
jl
loope
jb
add
loop
fcoms
jb
int
daa
add
add
add
dec
stc
jb
cmp
add
add
xchg
stc
jb
int
pop
add
mov
lds
dec
pop
stc
jb
in
addr16
pop
mov
fistpl
mov
xchg
ret
dec
leave
add
push
mov
xchg
ret
add
mov
jecxz
inc
add
add
push
mov
xchg
ret
stos
mov
add
jmp
nop
jmp
add
cmpl
nop
jmp
add
add
push
out
call
nop
jmp
stos
add
popa
add
pusha
stc
jb
repnz
add
dec
add
push
pushl
stc
jb
pop
je
js
mull
decl
push
mov
xchg
ret
or
dec
push
stc
jb
pop
mov
add
imul
add
stc
jb
stos
add
add
add
add
test
nop
jmp
daa
daa
jo
add
pop
mov
lea
stc
jb
adc
add
int
add
sbb
jmp
add
movl
jge
mov
stc
jb
add
mov
add
mov
nop
jmp
add
lret
add
add
xchg
add
push
mov
xchg
ret
fbld
pop
adc
pushl
push
mov
xchg
ret
dec
repnz
add
jne
stc
jb
mov
sub
jg
stc
jb
repnz
imul
add
adc
push
jbe
add
push
push
mov
xchg
ret
addr16
pop
fbstp
add
stc
jb
insl
add
leave
push
mov
xchg
ret
add
loope
popf
mov
nop
jmp
mov
and
test
stos
shr
stc
jb
js
pop
mov
add
add
push
push
mov
xchg
ret
sub
or
push
nop
jmp
or
add
mov
imul
adcb
add
add
daa
or
cmp
add
roll
jo
add
dec
rolb
push
xor
add
js
imul
mov
dec
mov
add
add
inc
add
or
jmp
add
add
popa
mov
mov
stc
jb
repnz
mov
mov
cmp
mov
add
mov
nop
jmp
daa
ss
cmc
xor
cmpb
add
or
pop
lret
add
jmp
add
stc
jb
add
mov
jmp
add
mov
add
nop
jmp
add
leave
lea
add
fildl
decb
orb
pushl
add
in
mov
stc
jb
repnz
add
push
add
addb
je
nop
jmp
add
add
iret
push
stc
jb
add
add
add
stos
xchg
push
pop
add
add
add
add
nop
add
div
stc
jb
add
mov
dec
cmp
nop
jmp
dec
add
add
jmp
add
add
add
adc
cmp
hlt
scas
inc
add
add
mov
add
pop
leave
stc
jb
dec
adc
mov
add
add
add
lret
mov
jmp
add
fildl
add
add
add
outsb
lods
stc
jb
out
jo
add
mov
dec
clc
dec
inc
stc
jb
bnd
mov
and
jb
add
add
hlt
or
es
add
add
mov
fbld
popa
add
mov
xchg
ret
ret
jl
push
jmp
ror
int
add
test
and
mov
add
xchg
inc
add
add
add
pop
add
aas
stc
jb
ret
cmp
fisttps
test
add
stc
jb
add
ret
add
fwait
push
nop
jmp
add
mov
add
mov
nop
jmp
int
push
add
int
js
outsl
push
stc
jb
add
xor
add
push
push
mov
xchg
ret
mov
roll
inc
add
mov
fwait
aas
roll
mov
cmp
cli
stc
jb
add
movl
mov
push
mov
xchg
ret
add
cmp
mov
xchg
ret
add
add
stc
jb
notl
fcmovnb
test
out
call
stc
jb
add
add
sub
subb
fildl
fildl
add
push
add
add
xchg
outsb
and
nop
jmp
xor
rol
add
mov
jmp
dec
add
lret
add
add
add
dec
adc
jb
add
add
add
flds
adcb
add
pop
dec
lret
stc
jb
add
dec
mov
add
add
pushl
int
add
cmp
nop
jmp
push
movl
icebp
sti
add
nop
jmp
mov
mov
inc
add
push
stc
jb
ret
or
and
push
mov
xchg
ret
mov
addl
stc
jb
mov
dec
int
add
push
push
mov
xchg
ret
add
add
in
int
idiv
jb
add
add
in
add
cmpsl
add
add
and
push
mov
xchg
ret
pop
repnz
unpckhps
add
add
add
push
stc
jb
add
xor
xor
and
jb
int
rolb
add
in
int3
push
mov
or
or
je
test
add
jb
inc
add
je
dec
stc
jb
add
movl
add
cmpsb
add
add
mov
push
mov
xchg
ret
shr
add
adc
jmp
add
add
cld
pushf
mov
stc
jb
add
mov
loopne
inc
add
add
add
jno
dec
sub
stc
jb
mov
lret
dec
push
mov
xchg
ret
push
repnz
nop
jmp
pop
js
add
addr16
add
xchg
jbe
push
stc
jb
in
add
mov
jb
dec
add
add
jo
push
mov
xor
add
add
add
and
xchg
xor
and
push
mov
xchg
ret
add
add
push
stc
jb
adc
add
add
pop
add
add
add
jne
stc
jb
popa
or
pop
mov
stc
jb
adc
add
inc
add
cmp
andb
roll
add
jmp
mov
mov
sub
stc
jb
add
add
add
testb
call
add
stos
ret
add
ja
add
hlt
sbb
call
aas
mov
and
cmp
mov
stc
jb
nop
ret
add
cli
pop
stc
jb
add
pop
add
dec
add
xchg
sbb
out
decl
add
jb
fcmovnu
popa
das
add
stc
jb
add
mov
pop
xor
icebp
test
nop
jmp
mov
pop
add
add
adc
jb
mov
add
sbb
add
add
pop
rcrb
mov
stc
jb
add
add
mov
push
mov
xchg
ret
hlt
mov
stc
jb
add
add
add
jl
mov
stc
jb
int
add
or
xorb
dec
add
addb
je
nop
jmp
mov
add
rcrl
je
stc
jb
mov
stc
jb
mov
rcr
fistpl
int
pop
jae
jb
add
test
add
push
test
jb
add
mov
push
stc
jb
add
add
mov
sar
jb
fcmovnb
js
mov
stos
jne
stc
jb
add
mov
push
stc
jb
add
mov
add
pop
adc
xor
push
mov
xchg
ret
add
push
mov
xchg
ret
add
imul
add
mov
push
mov
xchg
ret
mov
push
sbb
enter
or
add
push
daa
dec
mov
mov
push
mov
add
add
cmpsb
cmpsb
add
jb
add
mov
add
call
stc
jb
add
add
add
add
nop
jmp
add
mov
les
mov
and
jb
ret
pop
ret
movzwl
stc
jb
add
add
cld
nop
aas
push
nop
jmp
dec
insl
add
add
or
and
js
jmp
add
fistpl
mov
push
stc
jb
add
mov
nop
jmp
add
add
add
lret
cmp
and
sbb
add
add
add
mov
jl
and
jb
lret
shlb
jmp
dec
mov
mov
adc
mov
call
stc
jb
add
fistl
idivl
cmpsb
inc
add
repnz
loope
aaa
mov
dec
test
and
add
mov
push
mov
xchg
ret
mov
xchg
ret
out
add
and
pop
rep
stc
jb
add
add
sub
add
rolb
pop
pop
movl
pop
add
nop
jmp
add
out
in
xor
and
push
add
add
jb
add
add
lea
stc
jb
add
mov
push
push
mov
xchg
ret
add
popa
stc
jb
mov
add
stc
jb
jo
add
add
daa
jb
out
mov
jmp
add
add
jo
pop
ret
pop
push
push
mov
xchg
ret
cmp
jle
push
mov
xchg
ret
xor
add
lea
stc
jb
add
imul
movswl
stc
jb
add
cmp
std
mov
push
mov
xchg
ret
add
mov
icebp
sbb
or
add
imul
add
dec
mov
stc
jb
cmp
add
jp
rclb
add
mov
add
nop
add
or
xorb
adc
xor
push
stc
jb
add
pop
add
add
les
cmpsb
add
add
push
nop
jmp
add
add
js
nop
push
pop
and
push
mov
xchg
ret
add
add
add
add
and
push
add
mov
stc
jb
add
daa
add
add
pushf
push
push
mov
xchg
ret
fstpt
add
add
mov
stc
jb
fildl
jmp
lret
pop
add
nop
jmp
add
daa
movl
push
stc
jb
lret
add
push
mov
add
dec
add
add
pop
imul
mov
xchg
ret
add
ss
lds
cmpsb
add
jmp
add
je
leave
add
lea
nop
jmp
adc
stos
cmp
push
mov
xchg
ret
mov
add
stos
test
add
movb
add
stc
jb
dec
sub
loope
fidivl
rclb
out
mov
add
daa
js
add
addb
add
jb
add
add
mov
adc
jmp
add
add
pop
mov
and
stc
jb
pop
stos
je
daa
insl
rolb
data16
adcb
add
ret
rol
mov
jae
jg
stc
jb
add
lret
cmp
aad
aaa
es
and
nop
jmp
popa
add
jo
mov
stc
jb
add
lret
or
add
add
stc
jb
je
add
jb
mov
add
mov
stc
jb
mov
iret
lods
nop
jmp
js
add
nop
add
add
add
stc
jb
sub
add
mov
xchg
ret
mov
pop
mov
stc
jb
lret
add
addb
mov
xor
jle
insb
inc
jb
stc
jb
add
add
call
stc
jb
add
dec
nop
jmp
add
add
mov
int3
pop
push
mov
xchg
ret
add
repnz
xor
lret
repnz
stc
jb
mov
mov
stc
jb
xor
adc
or
popl
nop
jmp
ss
pop
leave
add
movl
jmp
js
movl
fwait
stos
stc
jb
add
roll
int
add
mov
stc
jb
dec
adc
add
push
mov
xchg
ret
daa
add
ret
rep
stc
jb
mov
adc
jecxz
test
pop
mov
nop
jmp
add
add
pop
add
add
mov
test
add
sbb
mov
stc
jb
fbld
mov
push
stc
jb
cmp
div
add
mov
stc
jb
js
cmpsl
add
and
stc
jb
add
add
mov
add
add
add
mov
push
in
in
add
ret
nop
jmp
adc
mov
leave
add
stc
jb
ret
pop
add
mov
nop
jmp
add
adc
mov
add
jb
add
leave
add
adc
mov
stc
jb
add
add
lret
arpl
mov
mov
add
adc
add
pop
xor
push
mov
xchg
ret
add
or
cld
incl
add
add
add
lret
add
jb
dec
add
pop
mov
test
adc
xor
add
add
jo
sub
push
mov
xchg
ret
add
call
stc
jb
add
mov
and
jne
stc
jb
ss
inc
add
inc
add
push
add
daa
fcmovne
rolb
add
add
mov
xchg
ret
pop
mov
mov
stc
jb
adc
mov
test
cli
stc
jb
int
add
push
nop
jmp
add
lret
repnz
add
scas
mov
stc
jb
add
mov
mov
nop
jmp
add
add
xor
adc
add
stc
jb
adc
fistpl
add
stc
jb
ret
add
add
popf
push
mov
pop
pop
cmp
fwait
adc
std
push
nop
jmp
ss
add
testl
nop
jmp
je
hlt
sub
add
push
nop
jmp
add
jo
test
mov
imul
out
or
add
lods
stos
push
mov
xchg
ret
cmp
jbe
push
push
mov
xchg
ret
out
add
fistpll
nop
jmp
lret
add
cwtl
pop
stc
jb
add
fstpt
sahf
mov
push
mov
xchg
ret
lret
add
mov
stc
jb
add
pop
add
add
jmp
dec
add
rcrl
add
idiv
jmp
fildl
fstpt
xorb
add
test
or
add
incl
add
shll
popa
add
jmp
add
repnz
fcmovne
add
nop
jmp
add
stos
add
test
out
stc
jb
add
int
jle
popa
add
mov
xchg
ret
add
add
stc
jb
add
adc
add
pop
cmpl
nop
jmp
add
mov
add
inc
add
rcll
lahf
inc
add
pop
adc
dec
adc
add
mov
jmp
dec
je
add
or
pop
add
cmpb
imul
notb
xor
nop
jmp
add
testl
sbb
insb
add
add
add
pop
nop
jmp
mov
cld
add
nop
int
dec
mov
lcall
je
add
mov
xchg
ret
mov
add
mov
stc
jb
add
add
dec
add
add
push
mov
xchg
ret
in
add
stc
jb
pop
pop
ret
lret
add
loopne
outsb
mov
nop
jmp
imul
pop
mov
das
cli
incl
add
cld
pop
addr16
rep
push
mov
xchg
ret
je
stos
jo
add
nop
jmp
add
add
jo
ret
clc
nop
jmp
in
add
xor
add
push
or
jb
int
add
push
cmp
paddsb
jmp
add
jbe
or
add
nop
jmp
add
add
adc
push
stc
jb
mov
add
add
stc
jb
add
add
lea
stc
jb
add
push
clc
nop
jmp
leave
xor
js
mov
insl
sub
push
mov
xchg
ret
add
dec
int
ret
stc
jb
xor
add
adc
js
sti
nop
jmp
push
add
add
imul
arpl
jb
adc
cld
add
test
nop
jmp
add
lea
dec
add
stc
jb
add
add
call
nop
jmp
add
mov
ffreep
jmp
int
add
add
dec
mov
add
add
add
stc
jb
mov
add
add
push
mov
xchg
ret
add
aad
cmp
nop
jmp
fistl
fildl
repnz
and
mov
mov
xchg
ret
lret
add
sub
sbb
dec
push
dec
mov
dec
cmp
jb
add
pop
je
add
sbb
shrl
jb
repnz
fbld
push
push
mov
xchg
ret
add
pop
add
sbb
jb
add
add
mov
mov
in
aam
add
add
add
jmp
add
cmp
cmp
stc
jb
leave
or
pop
repnz
subb
idivl
mov
stc
jb
mov
mov
stc
jb
mov
mov
push
imul
sbbb
add
repnz
ror
test
pop
adc
lods
xchg
inc
add
dec
add
mov
nop
jmp
add
add
mov
mov
add
mov
sahf
add
and
push
sbb
js
mov
dec
push
stc
jb
add
add
adc
jb
add
filds
fcmovnu
sbb
mov
add
dec
add
add
fstpt
lret
test
incl
add
add
add
fs
add
or
pop
add
add
in
jno
add
and
add
add
stc
jb
add
nop
add
imul
mov
mov
xchg
ret
mov
in
popa
fisttpl
call
stc
jb
ret
ffreep
add
add
nop
jmp
add
fildl
add
fsubs
jb
repnz
leave
nop
mov
mov
stc
jb
add
addl
push
mov
add
nop
fwait
add
sub
mov
inc
add
add
ret
stc
jb
testl
add
cld
imul
stc
jb
int
mov
add
add
add
push
mov
xchg
ret
add
adc
mov
xor
nop
jmp
add
xor
in
mov
push
mov
xchg
ret
add
add
aaa
push
mov
stc
jb
adc
add
cld
push
mov
xchg
ret
ss
fildl
add
ret
pop
movl
add
nop
add
add
mov
adc
mov
xchg
ret
adc
add
add
bound
cmp
push
mov
xchg
ret
pop
ret
push
outsl
mov
stc
jb
hlt
shl
cld
nop
add
add
subl
jmp
add
scas
enter
mov
add
dec
add
stc
jb
insl
dec
add
pop
neg
mov
push
mov
xchg
ret
add
ret
add
add
mov
stc
jb
int
add
int3
add
push
mov
xchg
ret
mov
cmp
mov
xchg
ret
add
add
add
cld
mov
stc
jb
mov
nop
jmp
add
add
adc
aam
jmp
stc
jb
fildl
xor
repnz
and
test
xchg
addl
push
stc
jb
add
add
add
jb
mov
imul
mov
add
nop
bnd
add
sub
add
push
mov
xchg
ret
mov
add
add
stc
jb
or
scas
xor
stc
jb
add
add
int
add
jb
popa
add
mov
call
stc
jb
testl
insb
add
nop
jmp
hlt
mull
add
add
nop
jmp
add
lea
stc
jb
add
cld
ret
lret
fimuls
subb
js
jo
je
inc
add
jb
cld
mov
cmpsb
add
add
stc
jb
add
add
adc
jb
js
add
int
lahf
add
stc
jb
dec
in
mov
jle
stc
jb
add
jo
popa
repnz
call
lea
add
nop
jmp
adc
rolb
add
fcmovne
int
add
stc
jb
add
in
add
dec
push
mov
xchg
ret
add
add
mov
adc
incl
lret
or
mov
test
nop
jmp
daa
add
fildl
mov
xchg
ret
add
insl
add
repnz
mov
add
jmp
add
add
add
mov
stc
jb
add
add
add
add
add
pop
pushl
stc
jb
adc
add
lret
movsl
stc
jb
movl
dec
test
sub
jae
jmp
fcmovnu
pop
add
outsb
mov
stc
jb
add
add
xor
stc
jb
sub
repnz
lahf
push
nop
jmp
add
mov
cmp
std
add
stc
jb
add
mov
push
add
jb
add
add
add
scas
push
push
mov
xchg
ret
idivl
add
jb
adc
add
add
pop
add
add
add
add
fildl
ret
mov
or
mov
movsb
iret
ror
push
mov
xchg
ret
add
andb
add
rclb
add
stos
push
mov
xchg
ret
sub
add
jo
add
jmp
popf
or
add
js
add
pop
nop
jmp
add
add
add
stos
add
stos
jne
nop
jmp
add
mov
adc
jmp
add
mov
push
dec
jne
stc
jb
add
mov
stc
jb
add
add
lea
lea
push
mov
xchg
ret
add
fstpt
pop
push
mov
xchg
ret
pop
add
add
aam
add
addl
stc
jb
add
add
add
add
outsb
call
subb
add
mov
aaa
int
les
stc
jb
adc
xor
add
jne
stc
jb
add
pop
insb
mov
stc
jb
mov
mov
stc
jb
mov
add
stos
mov
stc
jb
add
mov
add
add
jge
aaa
add
clc
and
nop
jmp
add
add
add
mov
cmpb
ret
daa
or
push
pop
add
push
mov
xchg
ret
add
xor
repz
jb
dec
repnz
mov
stc
jb
hlt
filds
add
add
rcll
push
add
add
stc
jb
mov
stos
jo
xchg
jmp
test
stc
jb
add
xor
add
add
jb
hlt
adc
rcrb
stc
jb
leave
add
mov
add
jecxz
ljmp
or
adc
add
cs
push
mov
xchg
ret
lea
add
xchg
fiaddl
pause
jmp
sub
mov
add
rclb
pop
xchg
inc
add
add
or
call
stc
jb
add
mov
pusha
nop
jmp
mov
notl
add
pop
push
add
lea
push
mov
xchg
ret
repnz
stc
jb
add
xor
add
push
mov
xchg
ret
int
daa
inc
add
aad
stc
jb
lret
je
add
inc
add
add
ret
nop
jmp
add
add
xlat
je
stc
jb
add
xor
push
mov
xlat
add
inc
add
add
add
add
push
fildl
add
stc
jb
fcomip
dec
add
mov
stc
jb
add
data16
add
mov
push
mov
xchg
ret
adc
add
mov
add
jb
ret
movl
nop
jmp
add
add
add
mov
stc
jb
add
add
pop
fcoml
jmp
mov
repnz
mov
jb
mov
daa
cwtl
cmpl
nop
jmp
pop
lret
add
xor
and
testl
inc
add
add
add
push
mov
xchg
ret
dec
int
ljmp
mov
add
xor
add
loop
cmp
mov
xchg
ret
or
insl
out
add
je
add
add
popf
jmp
nop
jmp
add
add
add
adc
jb
pop
pop
lea
add
add
lcall
fldt
rolb
jb
filds
add
mov
jmp
add
xor
ljmp
add
add
dec
jo
xor
fcoml
in
lahf
and
add
add
inc
sbb
add
dec
add
stc
jb
add
add
movb
sbbb
lret
add
stc
jb
add
add
add
fcos
dec
sub
jb
dec
dec
add
add
push
add
add
movzwl
nop
jmp
fildl
repnz
add
add
push
add
jmp
stos
mov
cld
lret
or
inc
add
add
dec
fwait
inc
add
shll
stc
jb
add
mov
shll
mov
nop
jmp
filds
jo
imul
nop
jmp
in
pop
repnz
add
jne
stc
jb
repnz
addb
push
stc
jb
repnz
mov
js
mov
stc
jb
fisttpl
cmpsl
add
mov
stc
jb
add
add
add
add
push
or
jb
add
shll
sbb
pushl
mov
add
pop
fdivr
inc
add
add
push
stc
jb
add
add
rep
push
mov
xchg
ret
add
add
lahf
push
nop
jmp
add
add
addr16
fbld
sbb
adcb
incl
add
add
int
jne
nop
jmp
in
add
add
add
mov
stc
jb
mov
adc
pop
push
mov
xchg
ret
add
add
add
test
nop
jmp
int
dec
add
pop
repnz
jb
pop
lea
adc
add
sti
stc
jb
repnz
add
stos
popa
stc
jb
fisttpl
add
add
push
xadd
or
call
adc
add
push
mov
xchg
ret
or
shrb
jmp
add
adc
xchg
clc
xor
stc
jb
testl
add
fcoml
jb
mov
add
stc
stos
stc
jb
pop
popa
in
lret
add
lret
add
add
jb
add
adc
movl
out
stc
jb
adc
mov
xor
add
dec
sub
jb
add
dec
nop
addr16
add
push
mov
xchg
ret
mov
movl
jb
add
add
push
add
or
sub
add
xor
push
mov
xchg
ret
add
xor
mov
stc
jb
fistl
add
add
add
nop
jmp
add
push
add
js
lcall
ljmp
add
nop
jmp
add
add
je
push
pop
push
mov
xchg
ret
add
add
in
add
nop
jmp
add
add
add
dec
mov
stc
jb
add
add
ret
add
call
stc
jb
pop
add
mov
push
mov
xchg
ret
or
add
add
add
cmp
imul
stc
jb
pop
mov
add
mov
xchg
ret
int
ret
jne
stc
jb
or
aaa
bound
shll
addb
mov
push
mov
xchg
ret
add
mov
jb
add
leave
add
insl
test
add
cmp
and
pushl
popa
add
js
shr
stc
jb
add
test
nop
jmp
pop
add
mov
add
inc
add
stc
jb
adc
mov
stc
jb
add
int
ss
das
xor
stc
jb
xor
xor
add
pop
stc
jb
mov
mov
les
stos
mov
stc
jb
leave
ret
int
pop
push
mov
xchg
ret
mov
loopne
out
ljmp
jb
daa
mov
fcoms
in
add
add
add
mov
f2xm1
add
add
cmpb
decl
js
pop
add
xlat
loop
pop
pop
nop
jmp
add
dec
div
je
add
stc
jb
repnz
daa
js
icebp
mov
add
stc
jb
add
bnd
movb
xchg
loop
decl
mov
stc
jb
mov
add
add
shl
nop
jmp
mov
add
pop
mov
stc
jb
add
stos
repnz
int
xor
stc
jb
add
xor
xor
mov
push
mov
xchg
ret
add
inc
add
add
sbb
add
jb
pop
stos
nop
mov
jns
dec
mov
add
add
add
idiv
mov
push
mov
xchg
ret
cmp
stos
stc
jb
cmp
pop
rolb
cmpw
nop
jmp
fcmovnu
mov
add
jb
add
add
xor
add
jb
dec
add
add
aad
xor
stc
jb
add
fcmovne
add
out
jbe
jo
rol
add
stc
jb
jo
fldt
fildl
imul
and
mov
xchg
ret
add
movzwl
stc
jb
add
out
adc
pop
mov
stc
jb
pop
xor
add
daa
add
inc
push
mov
xchg
ret
pop
add
mov
mov
mov
add
rcr
add
cli
test
nop
jmp
dec
add
add
fmull
mov
sub
movsl
xchg
inc
add
lret
stc
jb
add
dec
xor
pop
add
fmuls
cmpsl
jmp
js
add
repnz
filds
add
adc
or
cmp
dec
cmp
jmp
out
daa
mov
sahf
mov
nop
jmp
add
stos
fildl
repz
sar
jb
add
mov
dec
es
nop
jmp
adc
inc
add
add
stc
jb
add
add
add
decb
jb
add
add
lret
mov
nop
jmp
xor
std
mov
push
mov
xchg
ret
notl
nop
jmp
add
add
mov
push
push
mov
xchg
ret
add
add
movsl
add
stc
jb
pop
add
jo
add
faddl
mov
xchg
ret
add
add
icebp
inc
add
add
push
xchg
stc
jb
add
add
add
ss
add
stc
jb
daa
dec
lret
pop
fildl
lret
add
jb
add
add
daa
dec
test
stc
jb
sub
stc
jb
nop
add
mov
bound
repnz
orb
ljmp
dec
in
add
xor
mov
nop
jmp
dec
js
imull
add
add
add
jb
add
rcll
add
fmuls
test
jb
or
add
add
nop
jmp
add
fcmovnb
add
add
dec
shl
stc
jb
add
pop
sub
test
adc
incl
pop
add
dec
daa
leave
adc
in
sub
push
push
fnsave
jg
add
push
add
shrb
stos
inc
add
add
add
bound
mov
roll
push
icebp
xchg
les
imul
das
mov
lcall
add
pop
add
mov
leave
sub
add
cmpsb
add
add
add
adc
add
xchg
lcall
add
add
add
add
sbb
mov
adc
sbb
scas
lea
lods
mov
stos
je
xchg
data16
js
add
add
lret
inc
add
add
push
add
adc
sub
jmp
mov
and
fnstenv
add
add
add
xchg
jmp
movl
call
mov
add
mov
negb
jmp
add
addl
mov
add
pop
out
das
ds
and
cmpsl
add
add
adc
xlat
ja
pop
and
ret
add
xor
push
push
cmp
add
add
push
lahf
sub
daa
add
mov
push
add
in
aas
les
scas
lret
iret
mov
add
jno
inc
add
into
xchg
fnstsw
add
add
add
add
jg
in
lea
push
fdivs
or
or
add
jecxz
and
in
dec
mov
add
fiadds
add
test
pop
xor
addl
mov
int
push
add
add
mov
inc
add
add
pop
mov
add
adc
xchg
inc
add
ret
roll
pop
popa
add
push
imul
hlt
call
mov
dec
fnstcw
add
ds
mov
xchg
jmp
add
add
test
add
fistl
add
add
add
add
ficoms
aaa
fcmove
leave
dec
jb
dec
mov
mov
add
add
add
addb
add
mov
add
add
add
mov
add
addl
clc
call
add
sbb
out
xor
popf
cmc
and
xor
add
xor
add
dec
je
add
scas
pop
add
add
insb
rolb
jl
cld
daa
add
mov
mov
inc
add
int3
pusha
add
sbb
inc
add
cmp
sub
add
aas
xor
lods
sub
push
mov
add
push
add
add
push
add
mov
or
pop
inc
add
or
out
xchg
cld
fidivrl
das
pop
loopne
push
xchg
test
pop
repnz
add
pushf
push
ret
aam
outsl
nop
in
adc
push
add
add
rcr
movsl
add
cmp
imull
jo
add
add
pop
cmc
mov
aam
add
add
dec
inc
add
add
lock
data16
add
inc
add
xchg
inc
add
and
mov
add
rolb
add
jb
arpl
adc
push
jge
lret
aad
cs
sbb
pushf
in
push
cs
je
cmpsl
add
inc
add
addl
xor
cld
outsb
pushf
stc
icebp
aas
mov
sub
jb
bound
stos
fnstenv
add
mov
aam
push
xor
aas
inc
add
addb
xchg
and
sub
aam
adc
inc
add
add
in
ret
adc
ret
add
je
adc
mov
and
mov
mov
loopne
or
dec
lea
add
adc
outsl
rolb
add
fstps
pop
cmpsb
add
fdivp
fisubs
add
cmp
popf
push
mov
rcrl
add
cmpsl
add
addb
ret
add
movsl
add
add
out
pushf
aam
cmc
pop
loopne
add
lds
fcomp
push
lods
cmp
pop
into
lds
mov
mov
add
jle
push
cltd
sub
xchg
mov
add
pop
mov
fldl
add
add
add
addb
xchg
xchg
repnz
push
add
add
jle
dec
repnz
addl
imul
jl
ss
xchg
pop
cmp
push
add
cmpsb
add
add
mov
add
add
out
movl
adc
add
and
sahf
pop
cmp
clc
cwtl
add
insl
xor
jl
cs
add
xor
add
sti
sbb
out
sub
rorb
pop
mov
mov
divb
inc
add
add
mov
add
int3
outsb
or
xchg
movsl
add
push
add
lcall
ret
add
les
insl
cmp
imul
enter
dec
stos
inc
add
push
add
sub
add
add
add
add
data16
push
add
jmp
add
jg
add
popf
xor
fstp
sub
es
fstl
mov
push
ja
mov
add
add
test
sub
stos
insb
pop
jo
dec
cmp
lock
aam
shlb
add
iret
jmp
mov
aaa
jl
add
mov
lahf
inc
add
cltd
add
lret
add
push
add
nop
cld
push
add
add
jle
add
roll
inc
add
add
cltd
add
das
add
mov
lds
xchg
mov
push
add
test
pop
or
mov
add
int
mov
add
lock
fcoml
add
fdivs
xchg
sub
add
add
jb
shr
sbb
mov
pop
lret
lcall
mov
addb
mov
into
add
mov
and
add
jl
add
add
nop
sti
fdivrl
add
inc
add
inc
add
add
pusha
add
cmp
add
mov
add
add
mov
ss
ret
add
sub
repnz
add
adc
cld
fstpl
mov
cmpsb
add
add
cmp
add
pusha
add
scas
movsl
add
pop
sub
add
lea
inc
add
add
lds
xor
xchg
addb
mov
jmp
add
add
mov
pop
jno
adc
bound
dec
test
test
mov
cmc
dec
xchg
pop
in
bnd
jecxz
pop
add
aad
lahf
adc
cld
bound
jne
pop
cmp
add
rcrl
sbb
mov
jbe
xor
fwait
xchg
pop
mov
add
imul
add
push
add
test
add
rolb
int
in
std
push
aaa
daa
add
add
fmul
push
imul
cli
sbb
sub
ja
mov
cmp
shll
jp
push
add
and
lods
mov
add
mov
adc
push
add
inc
add
add
mov
add
add
mov
dec
insl
pop
mov
push
add
add
shl
add
or
add
cli
int
fisttpll
lret
adc
xchg
jb
fisubrs
movb
loope
add
jmp
rorl
and
xor
add
test
add
out
push
add
sub
adc
imul
push
cwtl
sti
leave
dec
xor
into
lret
add
add
imul
add
jp
loopne
pop
std
int
add
imul
mov
add
add
add
lahf
out
and
out
add
and
jno
ja
dec
dec
fnstcw
add
add
mov
cmp
add
addb
mov
dec
mov
mov
add
sbb
sbb
stos
mov
add
or
je
sahf
dec
mov
add
or
jecxz
sar
addl
sti
pushf
inc
add
add
mov
and
into
jae
add
xchg
stc
into
outsl
or
add
aaa
dec
call
or
push
sub
mov
outsl
pop
inc
add
add
setnp
insl
std
push
pusha
add
add
add
add
xlat
ret
add
std
mov
sahf
inc
add
out
cmp
out
mov
movsl
add
je
ret
stos
lret
mov
loop
addb
add
xor
mov
inc
add
add
or
pop
int3
aaa
aam
icebp
push
or
add
cmpsb
add
mov
push
and
std
lahf
xchg
mov
cmpsl
add
add
repnz
lods
push
add
inc
add
mov
add
test
add
mov
mov
fistps
push
jmp
fists
lret
add
add
arpl
movsb
add
push
in
push
add
mov
inc
add
push
add
aad
lret
add
xchg
jecxz
sub
add
out
and
movl
add
pop
scas
dec
mov
dec
js
ret
les
mov
add
outsl
test
and
fld
add
push
and
aam
movl
push
inc
add
sbb
xlat
and
aad
mov
add
push
add
in
stos
pop
and
popa
add
out
xchg
cmc
stos
jmp
add
pop
add
test
into
popf
sub
add
aaa
xchg
sub
jle
mov
jle
mov
out
add
or
movsb
add
pop
mov
jg
xor
pop
addl
mov
add
pop
nop
cmp
fcoms
add
add
jb
jo
pop
add
add
mov
cmp
pushf
lahf
add
sub
rcrl
add
insb
jmp
mov
add
add
add
xchg
addl
xor
cmp
add
add
addb
mov
stos
test
pop
imul
add
sub
xor
jo
rolb
add
push
add
add
add
add
popf
lock
add
add
add
aad
mov
add
mov
addl
jo
xchg
sub
pop
jb
or
sub
add
rcrb
ror
jae
test
mov
push
xchg
cmp
imul
lret
daa
add
jb
scas
push
gs
and
lds
cmpsb
add
push
add
dec
lods
xor
ljmp
popf
in
rolb
xor
push
add
adc
fwait
cmp
fwait
mov
lcall
sti
test
aaa
movsb
add
add
add
lret
add
or
and
jae
push
add
add
pop
pop
popf
sub
mov
add
out
nop
popa
add
stos
add
jle
add
add
mov
mov
push
add
add
add
add
add
mov
out
ficoms
add
jne
add
add
lret
lods
mov
test
call
add
add
jne
movsb
add
add
shll
push
add
aaa
xchg
push
add
inc
add
insb
ja
fdivr
push
add
rol
add
mov
add
mov
xchg
sub
mov
mov
out
jge
add
add
and
cmp
js
call
or
adc
add
sahf
or
add
imul
ds
add
dec
dec
cld
add
movb
nop
and
rol
add
add
cmc
sbb
adc
fsubrl
adc
ja
push
ja
add
mov
in
jb
lcall
sti
mov
xchg
mov
add
mov
add
pop
js
add
add
add
insl
mov
cli
sti
dec
icebp
out
sti
ret
add
add
add
add
push
add
fwait
push
add
inc
add
mov
add
jle
mov
out
fcomps
mov
cltd
faddl
divb
cmpsl
add
jmp
adc
into
push
stc
addb
add
nop
arpl
cmc
outsb
icebp
and
xchg
imul
in
ret
jns
add
movl
push
add
out
decb
movsl
add
pop
sbb
push
adc
div
stc
adc
mov
or
arpl
push
inc
add
add
in
lcall
jle
xchg
xlat
or
mov
das
mull
addb
add
pop
int
arpl
pop
jle
add
add
imul
add
add
adc
mov
in
shlb
sbb
addl
testl
add
data16
sub
add
pop
xor
mov
add
hlt
inc
add
notb
add
add
or
mov
addr16
add
adc
add
xor
movsl
add
mov
add
jno
rorb
sar
and
mov
add
add
jns
mov
aas
cmp
inc
add
mov
cwtl
imul
movl
addl
jg
or
jmp
add
in
mov
add
add
add
push
bound
dec
int3
mov
enter
xchg
jae
jge
add
sub
setns
test
add
add
call
dec
hlt
in
cmp
lcall
xchg
push
cwtl
jns
cli
dec
sub
fwait
inc
add
add
lock
or
jno
jecxz
daa
add
push
add
sbb
add
and
adc
loopne
dec
mov
xchg
out
lds
fidivl
repnz
lret
xchg
fildll
add
add
add
xor
std
cmp
out
jl
fdivrl
mov
data16
or
add
sti
adc
push
add
aas
arpl
inc
add
add
add
cli
push
lcall
outsb
lret
inc
add
add
add
pop
ret
add
xor
add
cs
and
popf
xor
jnp
sbb
xchg
cmp
sub
add
add
inc
add
rolb
add
aam
or
mov
adc
add
int3
xor
inc
add
xchg
sar
test
iret
mov
in
mov
add
scas
popf
inc
add
dec
jl
scas
stc
ficoml
mov
inc
add
add
add
add
jge
jmp
roll
add
mov
ja
fstp
or
popl
add
aam
mov
cli
arpl
popf
push
add
mov
add
gs
adc
inc
add
add
xchg
inc
add
ljmp
jmp
rsm
fwait
or
arpl
jle
add
popa
add
push
add
add
push
add
adc
dec
mov
shrb
mov
fucomip
adc
xor
add
add
cmpsl
add
mov
int3
in
or
push
add
cltd
stc
jbe
addb
mov
cmc
jg
or
lret
push
add
push
add
dec
movb
add
out
xlat
cld
or
add
jmp
add
ss
inc
add
push
addl
stos
jne
sbb
add
add
in
fiadds
cmp
mov
and
mov
cmp
nop
cmp
add
add
pop
add
adc
and
cmp
xor
lret
and
adc
out
inc
add
inc
add
adc
repnz
enter
ficoms
add
jns
xchg
sbb
add
ret
add
add
push
pop
jno
and
and
dec
sbb
add
jo
cwtl
mov
cs
insb
in
addb
add
add
add
add
add
inc
add
aas
leave
jge
notb
add
hlt
adc
xchg
mov
inc
add
add
int
add
pushf
dec
shrb
inc
add
mov
and
dec
cmp
sbb
call
pop
mov
add
test
les
push
add
add
add
push
add
push
add
add
add
add
js
add
add
int3
sub
add
insb
sub
add
pop
imul
add
outsl
xor
dec
loope
les
jne
add
push
sti
ljmp
cmp
add
mov
xchg
mov
add
add
add
sbb
mov
jo
fcomip
daa
add
imul
add
ret
add
add
loop
dec
adc
ljmp
mov
xor
inc
add
mov
add
mov
ljmp
xchg
sub
fmuls
add
out
inc
add
push
movl
mov
imul
sar
sahf
inc
add
cmp
sbb
jp
lods
mov
out
xor
mov
jnp
and
dec
add
sub
in
dec
jne
mov
add
into
and
mov
fidivl
add
movsl
add
inc
add
cmp
fdivrp
pusha
add
add
add
add
bound
jbe
enter
adc
dec
maxps
add
mov
add
mov
mov
jp
push
mov
daa
add
add
mov
add
lret
popf
jo
pop
repz
adc
pop
fisttpll
mov
add
xlat
inc
add
add
add
add
movb
add
std
mov
add
xchg
sbb
mov
add
push
fisttpl
add
bound
dec
dec
repnz
ror
scas
jmp
fnstcw
add
into
popa
add
add
int
add
add
dec
stos
roll
mov
and
aam
jno
sbb
nop
sbb
fisubrs
sbb
xor
loope
leave
mov
ret
add
shl
add
dec
daa
add
mov
nop
cltd
add
pop
add
mov
mulb
addb
add
cmp
sub
dec
repz
jns
lods
decb
inc
add
movl
push
in
enter
sub
xchg
loope
out
and
cs
mov
fnstsw
add
add
add
add
popf
mov
sti
movsl
add
push
add
push
lcall
push
add
stc
movsl
add
push
or
lock
and
add
xor
jne
std
insl
jbe
xchg
cmp
mov
add
pop
cwtl
cmp
push
or
dec
jecxz
cli
ds
add
xchg
mov
cmpsb
add
testb
add
or
push
movsl
add
jno
cmpsb
add
add
lahf
lock
xchg
popa
add
inc
add
jne
addb
add
repnz
pop
push
test
dec
out
and
push
sub
add
imulb
cli
loope
je
repnz
movb
scas
xchg
aas
or
cwtl
ret
mov
loope
inc
add
jo
sub
scas
shrl
add
sti
pop
or
mov
inc
add
out
jg
add
and
xchg
imul
movsl
add
loopne
loop
push
dec
jl
mov
pusha
add
push
cltd
xor
adc
addb
add
movsb
add
jo
push
push
scas
in
xor
pop
cmp
add
add
inc
add
add
inc
add
jnp
add
or
fnstsw
fildl
add
rol
add
pop
add
mov
mov
mov
dec
jae
in
lcall
xchg
hlt
aas
and
jne
add
lret
hlt
mov
dec
or
add
add
add
dec
jle
or
add
decb
push
cmp
add
sbb
mov
jg
sub
fsubrl
movl
xor
jbe
add
add
sub
add
mov
add
add
icebp
sbb
add
and
outsb
sbb
je
add
push
add
lea
outsb
push
clc
cmp
add
xor
lcall
push
sub
lds
xor
mov
add
xor
xchg
push
add
add
mov
add
lock
sbb
add
push
add
or
cmp
jp
add
dec
addb
xor
mov
dec
xchg
inc
add
add
push
pop
jmp
inc
add
addl
pop
jno
movb
add
movl
xchg
roll
nop
jl
pusha
add
pop
ret
add
add
outsb
pop
pop
test
mov
fwait
leave
push
add
dec
or
inc
add
add
pop
jae
cmp
add
mov
loopne
dec
ret
add
inc
add
pop
push
rolb
add
push
add
cmpsb
add
loope
ret
add
mov
punpcklbw
jae
pop
pop
gs
add
xor
aaa
aaa
fisubrl
add
inc
add
cwtl
out
jg
addl
aad
jns
rolb
sbb
jo
jmp
xchg
aad
add
fnstenv
inc
add
ret
add
imul
add
sahf
pop
ljmp
add
addl
push
popf
dec
les
or
lcall
add
mov
pop
bound
nop
scas
in
lret
cwtl
cmpunordps
add
inc
add
dec
cmp
lods
cmp
sub
add
movb
add
arpl
jmp
mov
rolb
add
movb
ret
add
adc
outsb
xor
cmp
shll
aaa
test
popa
add
mov
add
sub
add
add
ja
cmove
push
movb
pop
aad
std
sbb
add
inc
add
pop
and
imul
mov
pop
push
jecxz
push
add
add
add
cmovl
add
add
add
adc
add
mov
in
das
imul
mov
add
add
mov
fwait
cmc
sub
mov
mov
mov
fsubrl
add
add
nop
loop
cmpsb
add
add
add
add
fsubrs
add
cmc
dec
cmp
mov
js
pop
repz
cmp
pop
addb
std
mov
add
or
cmpsb
add
or
add
repz
add
add
sbb
add
fisubs
add
add
add
add
or
jae
insb
push
add
add
push
add
mov
mov
add
add
fdivr
xchg
aaa
sub
cmpsb
add
add
mov
pop
aam
add
mov
add
add
add
idivl
sbb
or
dec
test
iret
dec
pop
cltd
cwtl
push
add
xchg
xor
mov
add
fists
xor
sbb
mov
addr16
add
jecxz
in
xchg
and
pushf
push
aas
fadds
add
in
sarl
iret
mov
sbb
add
ret
cmp
cmp
dec
sbb
pop
add
xor
mov
cmp
add
push
cld
movsl
add
push
mov
adc
xor
push
add
dec
mov
add
out
in
adc
mov
rolb
ja
into
lds
xor
mov
mov
add
xor
aas
jo
jmp
int
loope
lea
add
addb
add
add
add
out
outsb
test
testl
rolb
add
in
inc
add
add
cmp
dec
stos
aaa
aam
add
add
add
cltd
push
add
les
xchg
test
mov
add
push
fisttpl
inc
add
add
xor
add
add
add
leave
fstpl
in
dec
xchg
and
rolb
dec
mov
add
aad
add
pusha
add
add
add
repnz
aas
dec
pop
add
sbb
lds
cmp
mov
add
xor
movsl
add
movl
lods
bound
stos
push
jb
sub
sub
add
add
adc
xlat
and
add
push
hlt
clc
mov
jno
je
add
lds
xchg
add
jp
add
jae
ljmp
mov
xchg
cmc
cmp
and
repz
aam
add
add
push
jae
push
add
sub
enter
push
xchg
dec
jbe
movl
int3
pushf
lods
lods
dec
push
lock
or
add
cld
add
jo
out
lods
mov
add
add
dec
or
pop
push
add
jbe
xor
data16
call
enter
shrl
add
cmp
test
xchg
out
clc
loop
addb
xchg
bound
mov
add
adc
mov
daa
add
pop
jbe
add
movsb
add
mov
add
push
add
pusha
add
add
lret
add
test
dec
mov
call
mov
idivb
push
add
add
add
mov
add
nop
lret
sub
xor
mov
ja
add
gs
add
inc
add
add
add
and
cmp
add
daa
add
add
clc
xchg
inc
add
xchg
sub
add
int
add
lods
or
nop
in
int
add
mov
adc
addl
add
add
popa
add
add
add
mov
cmp
leave
shll
cmc
je
add
lods
data16
addb
add
add
adc
mov
add
outsl
fs
push
mov
add
rolb
repz
add
add
inc
add
lahf
xor
imul
mov
add
lret
mov
add
cmp
add
jp
xchg
sub
test
pop
push
add
jb
test
jp
pop
int3
xor
add
rcrb
add
out
add
movsl
add
leave
jae
fsubr
and
outsl
out
in
xor
dec
daa
add
add
inc
add
add
iret
insl
xor
scas
xchg
fcomip
mov
repz
sub
mov
rolb
add
add
lret
addl
add
add
and
or
outsb
jle
mov
mov
aad
shrl
dec
mov
rcr
pop
xchg
push
in
add
jp
aaa
jecxz
js
adc
mov
add
mov
xchg
pop
ds
icebp
xor
add
inc
add
addb
add
add
fidivs
xor
fwait
mov
add
xchg
cltd
cmp
add
add
add
bound
mov
push
add
or
add
add
add
lret
fdivs
pop
ret
add
add
add
lock
inc
add
je
add
inc
add
push
add
add
fnstsw
pop
sub
je
add
inc
add
add
add
jecxz
mov
add
fildl
movsl
add
inc
add
mov
mov
sub
sub
cmp
adc
js
mov
add
add
add
aad
movb
add
mov
outsb
adc
lret
fwait
mov
add
add
sbb
xor
adc
sub
add
add
out
addb
nop
pop
inc
add
ficompl
xchg
xor
dec
push
add
cmp
add
xchg
adc
xchg
pop
scas
jnp
addl
jmp
sub
add
cmp
out
inc
add
addl
add
adc
stc
repz
and
sbb
inc
add
add
add
mov
ret
add
add
xorps
xor
add
lods
lock
push
add
add
mov
xchg
out
out
sub
sub
add
jb
xor
jne
call
adc
add
dec
pop
adc
bound
cli
jp
add
icebp
lcall
add
add
add
add
lods
fidivrl
mov
add
hlt
push
add
add
sbb
lret
add
pop
std
push
ja
add
inc
add
jne
xor
stc
sahf
xchg
out
js
ja
add
inc
add
push
inc
add
add
ret
pop
ret
add
add
add
int
iret
jge
out
out
bound
jmp
inc
add
cmp
add
add
add
add
lods
out
incb
add
ja
addl
je
mov
jne
add
adc
in
in
add
bnd
scas
outsl
or
call
add
pop
sub
jnp
mov
add
cmc
inc
add
mov
push
stos
arpl
popf
stos
insb
test
into
fadds
and
icebp
xor
push
add
add
sub
pop
sbb
add
cmpsl
add
add
jge
add
out
mov
add
add
add
add
add
add
add
add
and
push
les
cmpsb
add
inc
add
cmp
jg
scas
imulb
mov
add
sbb
add
outsl
repz
inc
add
sar
int3
daa
add
jo
dec
pop
addb
jbe
sbb
or
jbe
and
outsl
and
das
dec
and
mov
inc
add
add
inc
add
add
adc
or
add
adc
add
add
je
add
xor
mov
cmc
inc
add
mov
xchg
into
xchg
cmp
punpcklwd
xchg
loopne
cmp
xor
push
popf
sub
dec
fwait
mov
js
dec
movsb
add
inc
add
add
adc
mov
cltd
adc
xchg
leave
push
lcall
mov
iret
pushf
scas
inc
add
mov
add
clc
rolb
cld
dec
adc
lret
add
push
add
in
and
inc
add
test
stos
mov
add
inc
add
cmpsb
add
inc
add
mov
pop
xchg
sub
and
scas
cmp
mov
lods
pop
push
mov
push
mov
or
add
mov
jle
pushf
add
les
cld
sub
ja
xor
jge
add
pop
loopne
inc
add
add
fcoms
call
xchg
xchg
mov
add
cmp
mov
bound
lret
add
add
add
xchg
jae
adc
xchg
imul
adc
add
dec
add
xor
pusha
add
adc
pop
lret
scas
sub
out
rorb
jae
xlat
dec
add
add
pusha
add
add
stos
test
xchg
in
push
or
add
test
jg
or
test
add
add
inc
add
xchg
xlat
outsb
adc
mov
setae
inc
add
out
add
ret
cmp
add
dec
popa
add
daa
add
fwait
jns
add
sub
std
jns
notb
ret
add
sub
gs
add
add
xchg
mov
iret
mov
hlt
addl
add
add
mov
add
in
mov
add
add
add
icebp
inc
add
les
cltd
loop
add
gs
fcmovnbe
sbb
stos
sbb
push
add
loopne
push
mov
add
insb
pop
sahf
adc
aaa
mov
pop
xchg
pop
adc
out
popa
add
sbb
add
int
push
add
iret
push
addl
mov
add
xor
out
or
sbb
add
mov
lahf
pop
add
sub
in
mov
add
ss
push
add
add
sahf
fwait
stc
ds
adc
mov
add
or
add
add
add
sub
mov
jns
add
cs
add
lahf
pop
ds
mov
fiadds
mov
cltd
jno
or
out
add
test
jne
add
add
add
add
test
add
add
pusha
add
add
add
sub
fsubr
adc
sbb
or
or
scas
add
cmp
add
inc
add
add
fisubs
aam
aaa
mov
cli
fstp
sub
xor
mov
add
pop
push
test
xor
add
test
add
jo
xor
or
xchg
push
sbb
add
and
mov
dec
adc
xor
add
add
xor
addr16
push
xor
dec
or
add
das
xor
js
push
add
xchg
cmc
lcall
ja
popf
ljmp
add
test
push
xchg
ss
out
aad
les
loop
xchg
stc
and
dec
jge
out
dec
push
lods
pushl
and
mov
add
fistps
sub
pop
add
mov
add
add
insl
mov
mov
mov
add
rolb
pop
add
cmp
jo
addb
sbb
pushl
mov
ret
add
pusha
add
add
sbb
or
pop
or
arpl
in
push
or
fiaddl
clc
jge
xor
rolb
fsts
add
add
inc
add
add
push
add
add
fisubl
jbe
repnz
clc
push
add
add
xor
mov
add
aaa
aaa
stos
dec
sbb
push
scas
loope
test
mov
stos
lock
add
dec
inc
add
mov
aad
and
adc
dec
or
add
push
sbb
add
dec
and
mov
add
add
sub
roll
add
add
mov
xchg
mov
xor
call
add
out
aam
add
add
stos
lret
push
add
add
xor
mov
mov
add
add
add
add
fst
mov
jno,pn
and
shlb
jns
add
movsl
add
add
adc
lods
jl
addl
fsts
outsb
movl
add
add
mov
or
add
and
icebp
and
arpl
adc
roll
add
adc
sub
sbb
add
sbb
pop
push
js
aaa
enter
push
lcall
and
inc
add
scas
sub
ud0
lret
add
in
lds
mov
adc
aam
add
add
xchg
and
xor
push
add
jmp
add
les
mov
cwtl
jne
js
add
add
mov
outsb
sbb
sarb
add
outsl
stos
lea
leave
das
mov
add
add
add
pop
mov
add
dec
xor
inc
add
add
inc
add
aaa
or
imul
jbe
add
push
xchg
test
mov
xchg
fbstp
add
int3
dec
lds
inc
add
call
inc
add
sub
add
cmp
xchg
xchg
mov
adc
add
and
xor
ret
add
mov
add
xor
cmp
add
and
daa
add
mov
cmp
add
add
add
dec
divb
add
cmp
jns
in
mov
bound
cwtl
inc
add
call
stos
push
add
jns
xor
adc
repnz
add
lret
loopne
mov
add
call
inc
add
pusha
add
int3
adc
inc
add
repz
and
std
cmp
out
in
lea
add
xchg
in
addb
ljmp
cmc
cld
scas
jnp
push
inc
add
adc
rcrl
mov
ret
or
jae
add
add
add
add
add
sbb
inc
add
imul
test
jge
inc
add
adc
insb
adc
push
jb
add
mov
add
add
out
inc
add
fldt
add
xchg
das
ljmp
or
ret
push
add
rcrb
nop
pop
mov
sub
jmp
and
push
cld
xor
add
push
fdivp
outsl
add
mov
stos
insl
les
mov
rorl
pop
into
jno
pop
mov
roll
add
add
mov
fisttps
iret
stos
sti
pop
add
insb
add
or
ffreep
add
scas
out
inc
add
add
add
sahf
ret
mov
add
jns
inc
add
mov
add
cmp
add
call
inc
add
add
add
add
inc
add
xchg
bound
add
mov
xchg
mov
insl
dec
xor
sub
add
add
mov
add
data16
and
add
xchg
xor
stc
stos
add
mov
in
dec
stos
std
dec
xchg
and
sub
add
add
fisttpll
icebp
dec
or
dec
xchg
sbb
adc
add
sahf
cmc
adc
adc
cmp
bound
mov
mov
insb
or
dec
adc
addb
add
jecxz
rolb
add
cmpsb
add
mov
mov
push
mov
mov
add
add
out
imull
lods
fbld
add
std
flds
je
add
add
push
add
inc
add
repz
adc
mov
daa
add
add
fdivrl
lds
jno
rcl
repnz
sub
push
stc
addl
iret
pop
add
add
shlb
test
arpl
push
movsl
add
scas
add
aam
add
aad
pop
in
jecxz
adc
aaa
ljmp
add
test
pop
push
push
add
add
add
xchg
adc
xor
fs
adc
jl
push
add
add
adc
and
fisubrl
add
outsl
icebp
idivb
add
insb
and
sub
jecxz
rolb
or
mov
add
xchg
inc
add
cmp
lret
rolb
test
inc
add
add
jle
out
xchg
xor
and
lcall
mov
push
add
add
add
adc
jno
shll
add
add
dec
cmpsb
add
jns
in
addb
icebp
fwait
data16
or
add
jecxz
xor
pop
imul
add
mov
mov
hlt
into
jecxz
addl
rolb
dec
mov
bound
les
test
cmp
add
test
clc
jecxz
fldt
clc
and
scas
sbb
xor
add
add
scas
pushf
mov
movl
sti
or
dec
adc
lock
or
add
add
addr16
outsl
mov
add
push
nop
or
cs
mov
and
lahf
jns
sahf
jmp
add
add
mov
push
add
lock
arpl
pop
push
add
pop
jle
aaa
das
mov
sub
pmulhw
add
in
ljmp
bound
sahf
fsubrl
rolb
ret
add
ret
fdivrp
pop
pop
enter
pop
mov
add
add
mov
and
sub
add
add
add
add
or
add
add
jo
out
imul
iret
fdivl
fcoml
jns
add
add
add
cmp
les
dec
lret
xor
sub
add
adc
pop
add
sbb
add
lret
ss
xchg
dec
pop
bts
add
add
mov
inc
add
push
add
out
cltd
jbe
cld
js
add
outsl
mov
inc
add
jg,pn
add
jmp
add
fsubrl
sbb
push
add
rolb
test
test
imul
add
add
sub
add
add
cmc
jl
jp
clc
inc
add
imul
add
add
fbld
iret
jg
add
mov
push
ja
stc
outsl
sbb
pop
movsl
add
in
mov
dec
or
add
xchg
jmp
stc
aas
into
add
shll
mov
dec
jle
nop
mov
or
add
pop
out
cmp
add
add
jg
mov
mov
push
mov
pop
in
sub
movsl
add
xlat
xchg
fldt
sub
fnstsw
add
outsl
jae
dec
mov
add
aas
cwtl
in
scas
xchg
repz
adc
add
into
hlt
fcomp
bound
push
adc
add
test
mov
sbb
add
js
rclb
cmp
xchg
xchg
lahf
add
dec
std
adc
cmp
iret
dec
out
mov
mov
in
sub
pushf
push
add
push
add
ljmp
scas
movl
mov
add
inc
add
in
push
xchg
in
lea
or
aad
cmpsb
add
add
mov
add
add
push
push
ss
add
shll
add
jg
adc
mov
mov
lods
movsb
add
imul
outsb
shr
in
xchg
sbb
mov
cmp
xchg
pop
mov
lods
or
add
lret
pusha
add
inc
add
or
add
add
add
add
sub
jp
pop
inc
add
xchg
aas
cltd
and
adc
push
add
add
adc
mov
cli
movsb
add
xor
cmp
add
add
add
out
inc
add
add
sbb
add
loopne
push
test
dec
out
movsl
add
scas
pop
fcoml
add
add
lahf
test
add
xor
inc
add
add
adc
ljmp
movl
out
leave
and
push
add
in
ds
push
add
loop
idivl
inc
add
push
add
mov
pop
and
sub
lahf
das
jne
mov
test
cmp
add
add
pop
add
hlt
and
mov
mov
enter
repz
add
add
add
add
xchg
pop
add
add
dec
sti
ds
movsl
add
jne
lahf
enter
sbb
fcmovnbe
ret
add
sub
stos
adc
add
dec
jb
stc
and
add
and
rorb
sub
cmpsb
add
movsl
add
add
dec
test
inc
add
mov
add
fcomp
add
loop,pt
adc
ret
add
xchg
or
add
hlt
sub
dec
xor
outsb
inc
add
add
adc
fucom
add
add
jmp
xchg
add
pusha
add
fadd
add
add
add
cmc
repnz
pop
cmp
mov
add
sub
mov
rolb
push
dec
mov
add
mov
repnz
add
add
sar
leave
loop
aaa
addl
sub
add
daa
add
add
dec
fstpl
add
ret
iret
mov
shl
movsb
add
int3
pop
or
aam
dec
mov
mov
add
add
add
out
nop
cmp
add
dec
add
sub
add
add
adc
pop
add
add
push
add
xchg
and
rcrl
add
ds
add
add
add
daa
add
cmp
test
ljmp
mov
push
add
push
add
outsl
out
jmp
int3
aaa
outsl
ja
mov
add
add
mov
push
add
push
xlat
add
add
cmpsb
add
add
fisubrs
push
testl
stos
imul
mov
add
cltd
out
cmp
inc
add
or
pop
sar
pop
lds
pop
cmp
add
add
add
mov
add
lods
xchg
pop
and
inc
add
jo
in
movsl
add
add
add
jge
add
mov
add
xchg
or
add
rolb
jl
fbstp
sahf
mov
add
stc
mov
xor
bound
pop
add
mov
aad
jns
jle
aad
add
jne
add
std
js
push
add
inc
add
or
add
mov
add
fisubs
scas
sub
lcall
add
out
inc
add
sahf
mov
sub
jecxz
enter
mov
fisttpl
add
icebp
lods
jb
les
adc
jecxz
mov
adc
push
add
add
add
sub
xor
add
dec
and
loop
ljmp
jbe
add
add
inc
add
dec
push
add
inc
add
add
dec
push
add
aaa
xor
loop
addb
add
add
add
adc
rolb
aaa
jne
imul
int3
inc
add
stos
fcomi
or
add
mov
loop
stos
popf
daa
add
inc
add
inc
add
add
add
cld
loope
cmp
inc
add
lcall
pop
sbb
dec
les
addb
jge
pop
fldt
out
inc
add
add
mov
jb
adc
cwtl
cmp
add
or
lods
sti
sahf
ret
add
pop
adc
in
pushf
movsl
add
add
jne
sbb
mov
pop
and
scas
sub
daa
add
xchg
outsl
aaa
sub
popf
inc
add
add
inc
add
sub
loop
enter
xchg
sbb
xor
lods
scas
cs
xor
add
in
mov
add
cmc
addb
movsb
add
add
mov
loop
scas
pop
add
add
outsb
popf
sub
add
mov
mov
add
jae
sbb
dec
sahf
dec
loopne
addl
cli
pop
js
and
js
add
jle
push
inc
add
sub
sub
xchg
std
addr16
add
add
xchg
mov
js
add
fbld
js
cmc
sub
add
push
stos
mov
pop
inc
add
add
out
addl
add
int
add
add
add
adc
in
test
pop
mov
cmp
add
movsb
add
jle
dec
popf
xchg
scas
pop
das
loop
and
mov
adc
jge
mov
addl
out
lret
add
xlat
sbb
add
pop
div
and
mov
add
cwtl
lahf
ret
add
add
add
sub
int3
pop
lds
hlt
mov
add
pop
xor
repz
out
lcall
jne
xor
roll
cli
and
rclb
add
add
or
pop
sbb
add
aam
add
add
add
add
cmp
adc
rolb
mov
inc
add
xchg
int3
in
imul
push
or
push
add
cmp
pop
fsubl
add
add
int3
in
fadds
add
pop
jge
inc
add
mov
mov
add
add
cwtl
adc
out
leave
add
loopne
mov
arpl
cld
movl
push
add
mov
add
add
add
jge
sub
sti
fstps
xor
aad
push
mov
sub
cwtl
adc
add
push
add
xor
pop
in
mov
push
cmc
add
popf
mov
add
cs
lods
push
add
notb
enter
dec
add
icebp
mov
movsl
add
add
jo
fcomps
pop
rolb
idiv
sub
xchg
popa
add
aad
add
es
sub
cmp
add
add
add
cwtl
add
hlt
fnsave
and
add
add
je
add
add
add
test
inc
add
or
or
add
mov
add
mov
add
add
add
lods
dec
jb
out
cmc
sub
add
mov
add
ror
pop
sub
jle
add
dec
xor
out
push
add
out
setp
add
movl
out
push
pop
sbb
add
add
add
add
xor
add
lock
pop
mov
sbb
arpl
pop
hlt
lcall
repnz
mov
inc
add
inc
add
pusha
add
lock
fdivl
and
xor
outsl
mov
add
push
and
stc
lret
repz
add
outsb
repnz
addl
lds
pop
push
pushf
cwtl
xor
push
add
push
add
loopne
movsb
add
dec
imul
jnp
sub
add
xchg
std
pushf
and
test
add
add
lea
add
test
ret
add
movl
aam
cmpsl
add
add
add
movsb
add
and
add
or
lods
pop
sbb
mov
mov
mov
add
add
mov
testb
add
outsl
bound
test
add
out
jno
inc
add
dec
or
push
add
add
add
add
pop
lret
jecxz
or
sub
test
mov
cmc
sub
call
inc
add
clc
add
jle
add
std
xchg
inc
add
loope
sbb
cmp
jmp
mov
add
aaa
adc
mov
add
into
sti
call
test
enter
adc
add
rolb
add
add
add
dec
insl
push
popa
add
add
dec
mov
xor
jge
mov
add
add
lret
les
dec
xchg
push
jnp
mov
add
mov
push
sub
add
add
cltd
pop
in
and
in
into
mov
jl
mov
out
jg
fcompl
mov
ret
add
je
push
push
imul
add
add
add
add
mov
mov
pop
inc
add
mov
add
jmp
inc
add
mul
add
add
add
cld
aaa
and
push
ficoms
add
cmp
ret
add
xor
push
add
inc
add
dec
and
inc
add
push
add
add
add
add
cmp
add
add
add
add
popa
add
add
stos
and
jle
enter
mov
cltd
xor
mov
add
add
add
aad
repnz
std
out
adc
add
add
addb
add
test
pop
push
jns
add
xor
sbb
fnstcw
or
xchg
sub
int3
cltd
fdivl
int
stos
fdivr
aam
jmp
mov
add
add
add
fcmovnb
add
push
or
popf
fldt
bound
das
lret
inc
add
es
and
movb
add
call
loopne
or
nop
rorl
push
mov
add
shlb
and
mov
inc
add
add
add
xchg
jno
cli
xor
ss
call
insb
popa
add
scas
xchg
pop
aam
daa
add
add
lea
jbe
add
xlat
insb
insl
sub
dec
pop
sub
stos
addb
pop
das
in
rol
add
sarl
inc
add
insl
int
add
add
stos
xchg
scas
xchg
or
and
add
lcall
xlat
jno
mov
mov
inc
add
lret
test
add
add
aas
jl
mov
jo
push
sub
add
push
add
add
add
cmc
mov
add
ss
cltd
ret
add
add
or
add
push
add
sahf
jnp
pusha
add
fnstsw
lds
bound
fstps
sbb
std
inc
add
add
push
jno
and
inc
add
imul
add
add
jns
add
clc
and
lret
aad
add
jg
stos
xchg
dec
xchg
iret
scas
sbb
fstpl
add
add
roll
add
les
jmp
jo
in
pop
push
add
addl
add
mov
add
inc
add
inc
add
sbb
and
mov
push
sbb
loope
pop
aas
add
cwtl
pop
inc
add
mov
rolb
xor
lret
sub
popf
cmpsl
add
hlt
out
jo
stos
sbb
add
add
and
cs
xchg
jg
add
sti
pop
in
xor
pop
cld
test
mov
ficoml
add
add
push
loop
addl
add
add
inc
add
add
clc
or
add
movb
xor
lret
pop
leave
nop
pop
add
inc
add
jge
push
popf
inc
add
add
in
lret
xor
jg
push
jno
nop
add
add
pusha
add
data16
movsl
add
add
or
push
pop
fisubrs
cmp
ds
add
fmull
and
xor
xchg
add
add
add
fsts
pop
inc
add
add
add
xchg
imul
add
das
and
jo
adc
lahf
pop
aam
add
add
lods
mov
mov
add
int3
lock
add
inc
add
add
je
add
outsb
bswap
mov
add
push
sahf
dec
xlat
in
into
outsb
sarl
add
xchg
aas
movsb
add
and
and
push
ljmp
ja
add
add
add
dec
mov
movl
add
fsubrl
add
add
add
out
filds
add
dec
lock
cmp
add
and
iret
sub
out
adc
ret
add
bound
sbb
loop
mull
fwait
cmp
add
add
push
mov
add
add
add
jecxz
fldenv
add
add
dec
sub
popf
int
add
cltd
add
pop
xor
scas
nop
call
add
add
add
lahf
movb
add
movl
outsl
xchg
xchg
push
add
add
daa
add
popl
cmp
int
add
add
add
enter
add
inc
add
lahf
icebp
mov
mov
add
pop
push
add
add
mov
jecxz
repz
addl
sub
movl
pop
jp
add
jecxz
dec
cmp
icebp
ret
add
imul
jae
jecxz
dec
mov
mov
inc
add
fwait
xor
or
pop
adc
shrl
push
sub
mov
pop
mov
shll
cmp
push
add
mov
and
mov
jmp
add
loope
je
xchg
js
sub
sbb
add
lret
addb
icebp
mov
les
scas
sti
jecxz
xor
dec
ljmp
addl
sub
add
add
pop
add
stos
bound
iret
and
add
mov
add
add
push
clc
cli
hlt
cwtl
sti
scas
push
jo
push
add
add
sbb
jg
mov
dec
sbb
stos
stc
cli
sti
jo
aam
xchg
pop
inc
add
push
xchg
dec
lea
popf
ret
add
ficomps
sub
mov
push
add
add
movsl
add
mov
add
add
cmc
fcomps
jg
add
mov
sbb
aad
sar
mov
add
addl
push
pop
movsl
add
into
rorl
dec
rolb
arpl
das
mov
mov
add
add
add
add
add
add
pop
in
out
and
ja
push
aas
movb
fwait
cmp
add
and
dec
test
add
add
cmpsb
add
sbb
inc
add
int
loope
mov
add
ret
add
rolb
add
mov
jge
addb
mov
adc
clc
pop
data16
pop
and
push
add
add
add
add
dec
sti
mov
add
add
add
add
jecxz
pushf
jg
fistpll
add
add
mov
addb
add
add
add
clc
in
mov
addb
add
ds
add
pop
dec
mov
cmp
mov
sahf
cwtl
insb
xchg
pop
push
add
add
push
add
int3
cmpsb
add
lods
pop
out
aaa
scas
outsb
and
mov
test
out
daa
add
inc
add
inc
add
add
sbb
add
stc
les
adc
adc
mov
push
add
ljmp
jb
ret
add
cltd
test
fildll
xchg
movsb
add
pusha
add
sbb
add
enter
sub
loop
jnp
aaa
xchg
add
jg
add
add
imul
fcmovnbe
ja
sub
mov
mov
or
je
bound
mov
cmp
push
cli
and
int
add
add
fisttpll
mov
jmp
loopne
pop
mov
add
add
add
jnp
jo
adc
and
lea
and
pop
addl
and
lds
addl
stos
dec
push
inc
add
fistps
sbb
inc
add
add
mov
in
movb
add
mov
addb
mov
lods
push
add
lds
push
add
sub
mov
dec
into
add
mov
add
mov
mov
mov
add
add
data16
shll
repnz
test
push
sbb
mov
and
stos
push
sahf
sub
add
adc
popa
add
add
addb
jne
call
add
ljmp
push
add
jb
out
loopne
add
mov
xor
lods
or
ss
pop
lds
imul
add
rorl
data16
add
jo
add
cmp
xchg
or
sbb
add
add
addb
iret
stos
movsl
add
xor
clc
popa
add
mov
add
cs
add
mov
hlt
and
pop
add
add
fsub
add
add
add
enter
cmpsl
add
add
xor
add
lea
scas
loope
pop
sbb
add
fisubl
add
push
add
imul
sbb
add
stos
addl
xchg
std
mov
loope
pop
pop
or
xchg
stos
clc
dec
inc
add
add
add
inc
add
add
mov
add
je
add
add
js
add
add
dec
sub
cmp
test
test
cmp
test
aad
aas
dec
loope
mov
sub
and
addl
add
xor
lret
das
sbb
add
je
jae
push
add
test
inc
add
repnz
aam
std
addb
add
push
into
pop
bound
jno
jle
shrl
leave
xchg
int3
decl
sahf
fsubrl
repz
add
push
add
pop
jae
and
imul
xlat
add
add
add
add
push
add
aaa
and
bound
cmpsl
add
cmpsb
add
add
loope
scas
test
out
iret
outsb
and
jb
outsb
mov
cmp
add
scas
sbb
push
les
std
imul
xchg
push
aam
insl
in
mov
mov
or
add
or
push
pop
aam
add
repz
popf
xor
or
loopne
pop
mov
and
lock
cwtl
xchg
sbb
dec
jge
aas
daa
add
cld
mov
add
add
mov
xor
mov
inc
add
mov
xor
adc
inc
add
add
xchg
and
pop
icebp
xlat
pop
loope
adc
mov
mov
mov
jno
xor
xchg
push
ret
add
iret
jbe
outsb
mov
xor
mov
or
push
stos
pop
mov
xchg
inc
add
cmp
movb
push
add
add
jno
pop
sahf
imul
ss
dec
idiv
mov
loop
int3
repnz
sbb
add
dec
xchg
dec
stos
add
imul
repz
add
cli
or
inc
add
mov
add
add
addl
add
rolb
add
add
pop
movb
mov
mov
roll
cld
dec
cwtl
les
pop
and
add
movsb
add
dec
jne
xor
data16
in
cld
cld
les
inc
add
int3
cmp
idivb
xor
and
mov
cmp
cwtl
or
adc
add
jns
push
dec
or
rolb
inc
add
pop
in
pop
mov
xor
sub
cmp
dec
cmp
out
sarl
mov
or
cmpsl
add
mov
scas
mov
fmul
add
cmp
add
xchg
lods
mov
add
insb
data16
inc
add
add
jecxz
ficoms
add
dec
push
pop
add
add
popf
push
rorl
adc
je
push
clc
hlt
outsb
mov
mov
cmp
add
lahf
inc
add
mov
add
aaa
sub
add
sub
push
mov
add
lods
or
insl
movsb
add
in
sbb
jmp
add
mov
nop
call
dec
push
xchg
xor
pushf
movb
add
or
iret
and
movl
rcl
sbb
ror
hlt
out
shrb
add
cmpsb
add
xchg
enter
and
and
jmp
loopne
mov
add
add
aam
add
in
sub
imul
push
add
xor
mov
arpl
mov
fadds
add
pop
in
mov
faddl
add
dec
dec
pop
pop
mov
add
rorl
xchg
jo
pusha
add
test
lret
les
rcrb
jb
js
jg
jns
mov
pop
repnz
sub
add
add
xor
add
pop
add
idivl
add
add
mov
add
add
add
add
add
add
mov
add
negb
xor
push
add
add
add
into
scas
imul
inc
add
clc
dec
scas
pusha
add
push
add
add
stos
sti
sub
ret
add
add
add
cmp
test
add
mov
xchg
int3
sub
hlt
mov
or
int3
jb
ds
add
adc
int
cli
push
pop
cmp
jecxz
xchg
and
cltd
fisubs
add
add
add
fisttps
in
and
mov
inc
add
xchg
inc
add
cmpsb
add
push
add
add
add
leave
lret
in
xor
movsl
add
mov
add
sbb
add
add
rolb
add
rorl
cmpsb
add
pop
push
add
je
adc
fildl
push
cmp
sub
mov
add
out
mov
add
adc
mov
pop
add
add
xchg
ret
add
clc
push
or
lret
cltd
xchg
cmp
add
aas
in
popa
add
pop
pop
roll
add
test
stos
push
add
add
add
add
mov
xchg
sti
in
out
mov
cmp
stos
cmp
inc
add
add
data16
pop
xor
aas
dec
sbb
push
add
jns
and
push
mov
inc
add
mov
inc
add
add
add
add
in
and
and
aam
mov
push
add
add
dec
addb
xchg
ljmp
jle
cmp
out
push
add
add
jecxz
daa
add
dec
mov
addb
add
add
xlat
push
add
add
scas
add
cmpsb
add
lods
loop
jle
cltd
clc
out
jb
jecxz
mov
insb
pop
sbb
xor
inc
add
mov
ja
add
int3
daa
add
jecxz
js
cs
mov
call
add
lock
jl
add
add
jae
mov
add
add
sti
jno
lods
jb
add
mov
jb
and
sahf
pushf
or
fistl
inc
add
addl
cmp
pop
xor
movsl
add
add
loop
jp
sbb
add
mov
xor
test
jl
add
add
out
lds
mov
outsl
adc
mov
add
jl
call
movl
int3
mov
adc
hlt
mov
xor
insl
inc
add
dec
test
je
add
xchg
xchg
jae
mov
sub
xor
cmp
add
mov
xchg
fstl
inc
add
pushf
dec
adc
fdivl
repnz
add
xchg
sbb
add
add
fnstenv
jns
addl
add
add
in
pop
add
test
repz
jmp
cwtl
add
stos
clc
cmp
and
divb
add
insl
paddb
cmp
loop
push
add
stc
cwtl
pop
cmp
add
test
lea
sarl
add
lea
jno
pop
add
dec
sar
inc
add
xchg
addl
xchg
repnz
push
add
pop
pop
jle
add
xchg
xchg
mov
lods
enter
cmp
jmp
xchg
cmpsb
add
add
jle
add
add
add
mov
mov
add
lods
in
lods
jae
aad
mov
sub
add
pop
stc
jo
jns
add
sahf
mov
mov
inc
add
repz
push
add
add
loopne
adc
test
movlps
fsubrl
jns
add
aas
sbb
rolb
xchg
stos
and
vmread
addb
add
enter
cmp
add
push
or
pop
add
divb
add
jg
add
cmp
add
mov
xor
lahf
movsb
add
arpl
cli
dec
add
push
cmp
ljmp
add
sbb
add
pushf
sarl
xchg
or
loope
fldcw
les
and
xchg
aad
mov
xor
aam
xlat
scas
jae
repz
add
adc
sbb
add
add
add
jecxz
ret
add
or
add
jbe
scas
aam
ret
add
push
ss
add
cmovne
nop
jae
lahf
hlt
mov
mov
loop
push
add
in
dec
das
inc
add
sbb
add
push
add
jo
adc
addb
mov
add
mov
sahf
cli
nop
addb
add
pusha
add
add
add
xchg
add
insb
jp
add
sbb
add
movb
add
add
jo
test
push
add
test
addl
inc
add
inc
add
lds
addb
lds
sti
lds
push
add
add
test
faddp
add
test
outsb
dec
outsb
mov
fsubl
add
les
inc
add
lea
mov
or
leave
lahf
pcmpeqw
out
fwait
jae
inc
add
pop
mov
jl
loop
push
xchg
push
add
sub
out
cld
add
mov
jbe
jno
adc
mov
add
cmp
in
icebp
add
into
test
movb
add
mov
cmp
add
mov
lret
add
inc
add
add
add
adc
pop
mov
add
add
add
pop
test
add
gs
cltd
sbb
add
lea
cltd
cld
xor
mov
in
aad
add
xor
fsubl
fidivrs
add
inc
add
pop
test
lahf
sarl
add
inc
add
cmp
mov
add
add
mov
dec
mov
jmp
sub
data16
lock
cmpsb
add
push
add
mov
add
inc
add
add
shlb
jno
sub
add
sub
in
hlt
shrb
xor
addl
or
sub
addb
roll
adc
stc
sub
test
mov
push
adc
add
inc
add
mov
add
push
add
cmpsl
add
fistl
sbb
mov
jae
data16
add
int3
ucomiss
jbe
add
add
lcall
add
push
add
imul
cs
add
xor
cltd
jge
add
add
cmp
pop
test
sahf
pop
ja
add
add
mov
add
add
cmp
add
add
add
mov
test
sub
add
inc
add
sub
inc
add
jge
insb
add
add
add
scas
outsb
xchg
idivb
dec
lds
sti
in
test
inc
add
xchg
adc
scas
into
cltd
popa
add
fildl
add
add
je
add
outsb
and
sub
xchg
push
mov
enter
add
add
inc
add
add
add
inc
add
cmc
ret
add
scas
cmpsl
add
add
xor
add
sbb
and
jecxz
add
xchg
adc
inc
add
les
je
add
add
jg
inc
add
sub
add
cld
test
jno
fwait
xchg
addb
dec
push
fisttpll
sub
xchg
in
leave
sub
add
add
iret
sub
cmpsb
add
add
add
mov
adc
decb
in
fstpl
faddp
add
fsubrp
cmp
addl
pop
addb
in
push
cmp
add
add
iret
ljmp
sbb
inc
add
add
fxch
inc
add
loopne
inc
add
movsb
add
mov
ds
fdivrl
call
les
das
mov
add
cmpsl
add
add
movl
ret
add
stc
lea
xchg
stc
inc
add
add
add
add
or
jne
add
xor
sub
sbb
mov
dec
pop
add
insl
aad
out
call
xchg
adc
sub
add
add
inc
add
pop
ja
addb
add
sbb
in
outsl
xchg
cld
out
loop
clc
pusha
add
dec
mov
add
sbb
add
stos
xor
dec
test
sbb
add
add
add
push
add
add
in
adc
add
insb
int3
and
out
rcrl
add
add
cmp
rcrb
lds
adc
ret
ds
cmpsb
add
add
dec
data16
lcall
roll
sub
stos
xor
fstpl
or
lret
insl
push
add
mov
or
cli
daa
add
add
add
outsl
mov
test
add
add
add
int
add
push
daa
add
add
insb
imulb
add
dec
add
sbb
add
add
push
mov
fistps
add
sahf
imul
add
lss
scas
out
mov
je
movb
add
push
jge
add
add
sub
add
or
loopne
mov
xchg
pop
lds
sbb
inc
add
rorb
mov
add
add
dec
aaa
jb
fcompl
add
pop
sbb
repz
cwtl
jns
addl
add
dec
sub
sub
data16
add
lcall
daa
add
lds
fdivrl
xchg
dec
nop
stc
lret
addl
adc
test
add
add
add
add
add
les
jp
lahf
repnz
mov
adc
mov
add
xor
adc
fwait
push
or
dec
sub
push
add
ja
ja
add
push
out
lea
cmp
add
lahf
lahf
cld
movb
pop
iret
aam
out
push
filds
add
pop
pop
or
add
pop
and
add
cltd
std
inc
add
inc
add
add
enter
stos
repz
and
lret
pop
lret
call
sbb
xor
add
pop
push
nop
test
mov
add
push
add
add
repz
adc
cmpsb
add
add
add
or
imul
les
add
loopne
clc
mov
daa
add
push
add
leave
loopne
mov
and
lret
add
add
add
movl
mov
cli
sar
push
add
ja
add
add
ljmp
add
jbe
inc
add
movb
mov
lods
loopne
jns
jnp
add
inc
add
adc
add
jne
add
daa
add
jne
add
add
pop
sub
add
das
xor
out
xchg
je
into
push
in
movsl
add
add
shr
xchg
movsb
add
or
mov
fildll
add
int
lea
add
fwait
xchg
repz
in
and
cmp
add
icebp
inc
add
insb
roll
out
addb
shlb
add
add
test
repnz
mov
sahf
int3
xlat
mov
mov
into
mov
xchg
sub
add
mov
leave
pop
fildll
add
add
add
test
jge
add
pop
addb
aad
add
add
mov
fnstsw
add
inc
add
adc
dec
aam
add
push
outsb
adc
inc
add
push
add
dec
jl
sub
imul
les
addl
ficoml
push
add
test
ljmp
push
sbb
ret
mov
mov
test
iret
out
ja
ss
ret
add
add
xchg
into
sarl
scas
add
add
xchg
mov
dec
test
fldenv
add
add
push
enter
hlt
ljmp
ret
add
addb
mov
add
jno
inc
add
adc
xchg
movsl
add
pop
cmc
mov
add
and
push
sub
add
add
add
cmp
mov
add
or
in
fsubl
jmp
add
hlt
in
cmpsb
add
add
add
aas
out
add
xchg
mov
icebp
rcrb
mov
add
cli
into
movb
rclb
add
hlt
or
mov
add
add
test
mov
fnstsw
test
push
lahf
inc
add
adc
xchg
xor
loope
iret
lock
add
fistl
pop
or
js
mov
bound
dec
xor
roll
lcall
out
addl
fld
add
or
add
aad
test
mov
add
add
scas
sub
cmp
jge
add
sub
lret
add
push
add
mov
das
ljmp
rcr
lods
pop
jge
fcmovbe
mov
add
leave
iret
push
inc
add
xor
add
inc
add
sub
push
jmp
cmp
add
add
rolb
adc
gs
cs
jne
add
mov
add
faddl
push
mov
jmp
add
rcrb
add
add
sub
cmpsb
add
add
inc
add
add
mov
addl
test
je
cltd
movsl
add
add
add
lock
sbb
add
mov
add
add
add
add
add
out
sub
pop
add
mov
add
add
stos
adc
add
pop
add
mov
add
add
sub
push
in
sub
mov
add
add
decb
adc
add
in
repz
xor
xchg
mov
push
add
inc
add
push
add
std
sarb
movsb
add
mov
xchg
mov
out
cwtl
push
jl
dec
lods
addb
insl
les
icebp
call
add
mov
jno
movsl
add
jp
insl
cltd
faddl
add
add
and
add
add
push
cmp
rcll
pop
xor
jne
lock
xor
mov
lahf
popf
xchg
les
inc
add
xor
push
add
xor
lock
mov
add
xchg
jl
data16
popa
add
and
or
jecxz
xor
fwait
loope
sub
add
fnclex
add
lods
sbb
add
add
dec
loopne
sti
lret
xor
setnp
mov
sub
imul
add
sbb
inc
add
nop
inc
add
out
and
sti
cs
outsb
lock
pop
xchg
dec
mov
loopne
adc
pop
out
push
dec
xor
xor
adc
aam
jge
add
js
add
in
call
cmp
sub
sub
add
sahf
popa
add
add
cmc
and
fadds
push
dec
mov
xor
and
xchg
iret
movsl
add
sub
repnz
add
ret
add
add
add
mov
movl
addl
xchg
sub
add
push
addl
and
cli
xor
lret
cli
or
lds
and
sbb
add
add
and
add
repz
stos
dec
mov
add
out
inc
add
push
mov
lds
jo
push
add
cltd
test
bound
fadds
mov
mov
xchg
test
add
add
dec
lea
add
mov
dec
xchg
iret
cltd
sub
daa
add
sbb
out
mov
insl
outsl
mov
cmp
and
add
add
sbb
addr16
add
xchg
cwtl
mov
xchg
mov
inc
add
inc
add
add
jle
rolb
add
pop
push
mov
xchg
testl
pusha
add
add
and
jp
xchg
mov
xchg
push
mov
scas
cs
xchg
mov
add
add
test
negb
push
lea
movsb
add
add
add
xor
xchg
cwtl
clc
cwtl
dec
mov
add
mov
sub
pop
fcomi
pop
jne
addb
add
roll
fldl
nop
dec
jl
lock
add
lret
inc
add
in
leave
into
jbe
jnp
add
fstps
xchg
xchg
cmp
add
add
xlat
mov
add
dec
or
dec
aam
in
or
lea
cmp
cmpsb
add
stos
aad
mov
add
adc
cmp
addl
or
jg
add
cmp
adc
sub
add
aad
push
add
or
daa
add
movl
jp
sub
and
adc
jg
cmp
fidivl
fidivl
je
push
and
add
add
pop
aaa
pop
mov
aad
add
xchg
nop
mov
mov
pop
pusha
add
add
add
mov
add
mov
add
add
add
add
mulb
dec
pop
push
add
mov
jo
add
and
mov
cmpsb
add
jecxz,pn
aaa
loopne
lods
xchg
xor
shr
xor
test
mov
add
arpl
add
add
fchs
add
shr
dec
and
pop
lods
or
add
add
adc
add
add
movsb
add
add
add
add
or
or
add
add
adc
mov
int
lahf
or
lock
cld
mov
add
addb
lcall
outsl
adc
xchg
insl
mov
mov
push
xor
add
dec
inc
add
jg
repz
add
daa
add
xchg
or
scas
and
dec
lds
hlt
in
push
add
add
add
mov
pop
addb
cmp
add
adc
cmp
cmp
push
xchg
xchg
mov
add
popf
adc
push
mov
jl
insb
sti
or
js
jnp
add
je
add
and
leave
xlat
outsl
dec
decl
cmp
add
in
sahf
cmpsb
add
push
imul
pop
mov
cmp
test
sti
mov
lds
sub
add
add
mov
mov
add
cmp
add
jnp
ds
add
hlt
loope
cmpsb
add
lds
dec
add
add
insb
inc
add
add
or
add
add
jo
jmp
or
fcoml
xchg
test
sub
add
add
out
inc
add
xor
add
jb
gs
imul
dec
insb
mov
stos
lcall
cltd
or
shrb
adc
lock
push
add
xor
addl
frstor
fcomip
sub
inc
add
push
add
add
add
mov
xor
aaa
mov
add
mov
insb
movl
hlt
aam
inc
add
add
cmp
ror
mov
shrb
cld
xor
jle
imul
jp
xor
xor
inc
add
add
add
inc
add
xchg
push
add
sub
mov
icebp
insl
cs
add
pop
notb
lahf
cmp
repnz
mov
ds
inc
add
or
add
sahf
xchg
movsl
add
add
rorl
add
fnstcw
add
xor
push
cmpsl
add
lea
add
add
sub
sbb
leave
sub
sbb
pop
cmp
dec
sbb
imul
add
repnz
add
pop
pop
or
add
add
movb
pop
sbb
addl
into
pop
je
add
outsl
jecxz
repnz
ror
roll
push
and
or
fisttps
inc
add
sub
add
jnp
xchg
sub
test
pop
movsl
add
ficoml
add
insb
fstps
add
pop
sub
add
fbstp
add
add
add
push
mov
inc
add
pop
add
in
repz
add
cmp
movsl
add
add
add
clc
leave
mov
mov
mov
out
and
int3
cmp
and
sbb
add
xor
add
add
pop
xchg
sti
test
mov
daa
add
dec
aam
insb
rorb
add
add
add
fistps
cmpsb
add
rcr
addb
add
dec
cli
xchg
addl
insl
mov
sahf
mov
add
lcall
add
add
fstp
and
imul
scas
add
cmp
add
add
add
push
cmpsb
add
fldenv
je
fistps
popa
add
dec
out
rolb
add
jne
pop
cwtl
fisubrl
test
sub
add
fisttpl
aam
add
add
inc
add
add
add
push
jg
add
fsubr
sub
mov
dec
clc
sbb
fmul
outsb
fdivr
popf
lods
cli
xchg
cmp
push
lret
dec
movsb
add
dec
popf
mov
add
adc
mov
add
fwait
sbb
mov
add
pusha
add
pusha
add
add
sbb
cmc
mov
cmpsb
add
enter
jb
loopne
add
in
lea
mov
dec
dec
out
or
dec
mov
or
outsl
scas
mov
adc
add
push
mov
inc
add
fiadds
add
adc
add
aaa
inc
add
lret
push
add
roll
cmp
add
test
mov
divl
add
xor
inc
add
pop
lcall
ret
add
push
add
push
add
xchg
sub
lds
lahf
shl
cwtl
inc
add
add
jmp
xchg
jmp
sbb
add
jmp
adc
mov
stos
jecxz
popa
add
test
add
mov
or
add
push
lret
add
aas
ficompl
cwtl
addl
mov
insb
push
xchg
jg
out
push
insb
inc
add
add
add
inc
add
add
add
mov
aaa
movsl
add
and
daa
add
cmpsb
add
add
mov
jl
add
addb
das
mov
xchg
dec
xchg
insl
mov
cld
out
mov
lock
fisubs
add
sti
data16
add
mov
pop
imul
jp
add
add
add
add
xchg
mov
add
enter
or
fadd
add
mov
lds
pushf
push
add
cmp
add
lea
add
out
xchg
stos
adc
dec
call
xor
popa
add
adc
cmp
add
ds
add
mov
add
jae
lahf
and
repnz
add
add
call
outsl
sub
add
mov
dec
outsl
test
jns
mov
add
add
add
xor
movsb
add
mov
add
add
fxtract
aam
push
sub
cmp
pop
mov
js
jmp
lds
push
add
insl
movsb
add
imul
sub
std
mov
sub
insb
je
inc
add
add
push
add
ds
adc
push
aaa
shrb
add
in
movsl
add
mov
mov
xchg
mov
fidivrl
in
xlat
addb
add
jae
les
adc
mov
add
xchg
inc
add
mov
mov
std
mov
add
lock
enter
out
mov
inc
add
das
push
add
add
add
mov
or
nop
stc
cmp
insb
into
push
cmpsb
add
je
dec
xor
sub
xchg
mov
adc
and
jle
aas
pop
clc
xchg
imul
xor
outsb
int
adc
add
xchg
cmpsl
add
pop
mov
cltd
add
ja
push
add
loop
and
into
fistpll
daa
add
add
mov
push
or
add
sbb
add
mov
xchg
lds
sub
add
dec
adc
pusha
add
add
rolb
addb
push
sarl
jae
nop
jo
push
xchg
dec
ds
addr16
dec
xor
scas
enter
cmp
mov
ret
add
movsl
add
movb
push
add
or
jno
bound
ret
add
sub
movsb
add
pop
add
fwait
ret
aad
dec
and
or
mov
stos
lahf
stos
icebp
cmpsl
add
dec
cmp
popa
add
mov
add
xor
test
test
sti
push
cltd
mov
add
add
jbe
jl
adc
shrl
xchg
rclb
pop
push
mov
push
rolb
pop
stos
cli
jae
mov
fsub
add
arpl
and
int3
and
in
cmp
or
pcmpgtw
std
jp
fisttpl
xor
cltd
addl
movsb
add
movsl
add
in
rolb
repnz
xor
mov
popa
add
add
mov
add
shrd
push
lea
mov
push
add
xor
mul
add
add
add
insb
adc
fdivl
popf
pop
add
add
add
and
add
sbb
add
add
push
add
add
add
pop
aad
add
add
or
roll
mov
int3
icebp
sub
pop
and
cld
jnp
dec
leave
push
add
push
mov
add
cmpsl
add
jno
adc
loope
inc
add
jb
cmpsl
add
add
adc
cltd
out
mov
add
push
aas
pslld
mov
adc
adc
push
add
movsb
add
rorb
jne
jg
add
aad
inc
add
add
add
jp
mov
add
sbb
add
cmp
add
mov
add
cmp
pop
fwait
cs
push
add
shll
out
stos
push
add
jmp
inc
add
xor
in
dec
dec
fsubrs
enter
inc
add
ds
loop
enter
xor
lret
add
or
cmpsl
add
add
into
out
sahf
mov
pop
adc
cld
das
add
mov
add
lock
roll
cmpsl
add
add
mov
fucom
add
and
mov
add
fstpl
add
movl
je
lock
add
cmp
dec
add
rcll
xlat
insl
sub
jg
hlt
push
add
add
add
leave
stos
add
and
out
cmp
add
pop
add
dec
fisttpl
lahf
xchg
pop
data16
add
add
or
cs
add
in
inc
add
push
fimull
into
mov
into
rolb
clc
cmpsl
add
cmp
add
add
iret
es
sahf
mov
movsl
add
ret
lea
add
inc
add
mov
lds
call
cltd
test
popf
cmp
add
jmp
les
add
add
jmp
add
iret
pushf
xor
push
add
inc
add
jo
cmp
into
hlt
inc
add
add
or
add
add
test
add
inc
add
add
add
int3
sahf
adc
and
das
sub
add
cmp
add
shlb
xchg
push
mov
and
and
mov
jo
jl
iret
mov
xor
je
pop
or
sbb
pop
outsb
xchg
out
dec
dec
pop
leave
pop
cmp
add
mov
add
sbb
roll
add
sahf
jge
add
out
int
add
cli
test
fcoms
add
add
xor
or
jmp
mov
or
addb
scas
ss
sahf
add
pop
push
add
idiv
push
add
add
in
lahf
inc
add
shrb
lahf
jge
sub
add
mov
add
push
add
jecxz
in
pop
std
dec
or
int
and
xchg
fwait
adc
mov
into
pushf
repz
fstpl
inc
add
aaa
dec
xchg
repz
out
test
imul
add
fisubrs
add
stos
xor
and
dec
jnp
add
add
add
add
add
shll
add
and
jmp
nop
testl
push
lret
in
movsl
add
add
fwait
aaa
test
popf
cltd
lock
add
dec
pop
mov
ljmp
sbb
lea
ljmp
add
add
xchg
imul
add
das
lock
jnp
bound
pop
fsubl
lods
push
fwait
mov
add
add
popf
inc
add
cmp
cwtl
mov
add
add
sub
out
mov
add
hlt
addl
dec
dec
cmp
in
jbe
add
movhps
sub
cmp
mov
add
je
add
jp
int
or
stos
in
xchg
pop
add
les
push
aad
rcrl
pushf
es
add
pop
jl
add
out
movsb
add
aam
dec
adc
sub
mov
jg
decb
loopne
push
add
aam
lret
stos
nop
in
mov
push
hlt
addl
add
add
xlat
cmp
add
mov
xor
push
stc
scas
dec
jp
add
lds
xor
jbe
add
sahf
dec
push
add
fcomp
and
into
aad
loope
mov
add
add
inc
add
data16
sub
add
add
add
mov
dec
insl
push
jl
lret
test
sbb
add
add
add
and
mov
add
push
add
pop
insl
in
rolb
aas
aad
pop
aam
add
add
add
add
sub
mulb
add
add
add
fnstcw
add
jne
cmpsl
add
xor
add
and
add
daa
add
add
xchg
loope
or
add
push
add
rolb
pushf
sbb
push
mov
arpl
mov
cmp
add
ljmp
add
and
inc
add
ljmp
adc
scas
xor
inc
add
fistpl
add
lahf
push
push
out
lahf
mov
push
push
add
loope
lock
je
add
sbb
enter
jae
in
arpl
movsb
add
call
add
pop
cmpsb
add
xchg
add
dec
jne
dec
pop
adc
add
notb
add
add
cld
popf
pop
sub
in
cmpsb
add
cmpsl
add
int3
or
mov
add
iret
fildll
xchg
xor
or
clc
cwtl
add
sbb
add
add
sub
xor
add
aam
and
add
sbb
popa
add
mov
xchg
pop
xchg
dec
repnz
xchg
insl
fstp
ss
push
add
add
lds
js
add
lcall
add
sub
outsl
test
shrb
add
outsl
xor
push
cmc
imul
add
mov
add
cmpsl
add
push
add
inc
add
add
add
pop
mov
add
add
das
and
xor
xchg
enter
add
cmp
mov
movsl
add
rclb
xchg
fsts
push
addb
movsl
add
add
test
enter
aad
xchg
fwait
lock
add
jae
jnp
xor
in
ljmp
mov
inc
add
adc
pop
mov
mov
add
roll
add
xchg
addl
roll
adc
int3
data16
pusha
add
je
divl
add
fistpll
leave
xlat
mov
add
mov
scas
jg
or
das
or
add
or
sbb
and
cmp
sub
push
inc
add
add
push
add
addl
add
add
add
jae
std
add
lahf
lret
xchg
imul
leave
add
inc
add
add
stc
push
mov
and
xchg
pop
xchg
loope
pop
or
cmpsb
add
add
idivb
into
inc
add
add
stos
out
mov
xchg
mov
fdivrs
lds
lds
push
xchg
inc
add
push
add
das
sub
add
movl
add
lods
adc
ljmp
add
into
pop
mov
add
popf
mov
add
add
in
in
pop
add
aam
add
rclb
pop
imul
dec
rolb
add
add
ja
imul
sub
lahf
ja
ja
xchg
jb
aad
add
or
xchg
mov
mov
filds
out
add
adc
mov
out
dec
imul
add
aam
loopne
cvtps2pi
and
mov
xlat
stos
dec
jmp
repnz
divl
pop
xchg
cmp
or
add
and
aaa
iret
lods
movsl
add
push
sbb
sbb
add
xchg
int3
inc
add
add
roll
add
insb
sbb
add
sub
icebp
adc
mov
add
add
movb
lret
add
jmp
inc
add
out
cmp
add
dec
mov
cs
add
mov
pop
sarl
add
xor
add
jo
inc
add
add
mov
mov
jnp
jb
icebp
add
sahf
jne
dec
rcrb
add
pop
add
add
add
add
icebp
mov
aam
pop
popa
add
rolb
sub
rorl
dec
dec
addl
je
add
add
add
push
add
add
add
out
sub
daa
add
outsb
pop
cmp
add
mov
cmp
iret
lret
sbb
cmp
shr
rcll
imul
out
outsb
pop
inc
add
cs
add
ret
add
add
mov
add
add
add
add
ret
add
lea
nop
inc
add
inc
add
js
add
and
pop
mov
enter
mov
icebp
xchg
xor
mov
xchg
dec
rolb
add
movsl
add
xor
dec
test
sbb
cmpsb
add
add
add
mov
int3
insb
roll
ret
add
das
dec
jle
xchg
pop
lea
mov
jno
xchg
ret
add
jno
jecxz
cmp
add
jb
shrd
cmp
les
ljmp
enter
std
jne
mov
push
pushf
leave
popf
ret
add
movl
pop
aam
add
cld
out
jb
nop
cmp
add
std
in
outsl
or
add
stc
test
int3
nop
and
xchg
ret
lods
mov
sub
and
jg
add
add
inc
add
add
pop
adc
or
jae
iret
mov
cwtl
and
dec
xchg
cmp
xchg
add
jae
dec
mov
jecxz
mov
sarb
mov
sti
cli
jmp
add
adc
push
adc
add
add
aad
add
dec
in
dec
and
iret
add
push
add
or
in
loopne
push
jns
xchg
jo
jno
mov
roll
add
adc
dec
xchg
mov
sub
lcall
add
add
aad
add
or
add
mov
add
inc
add
jg
add
add
cmpsb
add
fwait
push
add
add
pop
scas
addl
mov
add
jo
push
pop
add
add
mov
movsb
add
add
add
add
test
add
add
add
add
add
add
xchg
addl
add
loopne
push
add
pushf
push
cmp
inc
add
xchg
inc
add
add
jbe
add
add
add
imul
add
add
jbe
add
add
test
pop
sti
mov
dec
add
mov
add
rcr
in
or
pop
sub
add
stos
mov
ret
add
testb
aas
mov
add
sub
pop
out
ret
add
test
xchg
in
incl
add
add
add
sti
aaa
jno
sbb
and
xchg
roll
xor
lock
in
pop
xor
inc
add
aaa
movsb
add
add
add
add
push
add
cmc
popa
add
add
and
push
mov
add
add
sub
int3
test
into
xchg
mov
aam
mov
fwait
movsb
add
mov
pop
dec
cmp
add
les
cmc
sti
lea
pushf
ja
jg
add
leave
ljmp
add
add
mov
add
add
ja
add
add
push
add
imul
mov
jecxz
push
fld
add
roll
test
add
je
pop
out
dec
loopne
sub
imul
add
mov
add
add
jecxz
out
enter
add
sbb
add
outsl
dec
scas
loopne
lock
xchg
ret
add
jp
add
clc
fisubrs
xor
jnp
cmp
add
sbb
add
add
xchg
and
lods
mov
dec
and
add
add
ss
shr
in
aam
or
add
loope
push
lahf
mov
and
inc
add
lahf
and
movl
add
mov
movsb
add
xchg
shll
sub
sahf
cmp
lods
cld
xor
movsb
add
cmp
ret
sbb
mov
inc
add
add
add
inc
add
lds
and
xchg
mov
repnz
insb
test
add
gs
repz
repnz
add
sbb
add
mov
jns
inc
add
add
add
jo
adc
cld
jp
add
add
xchg
xor
in
outsl
mov
add
add
call
mov
lods
sbb
inc
add
inc
add
add
add
mov
pop
add
pmaddwd
add
add
jecxz
addl
adc
enter
sbb
add
movsl
add
pop
mov
add
mov
loop
clc
inc
add
test
add
push
add
shrl
sti
es
add
add
fisubrs
add
loopne
dec
addl
aad
add
add
jg
test
mov
movsl
add
lds
pop
add
jp
fld
add
and
dec
mov
lods
adc
call
jecxz
shrb
add
sbb
mov
add
mov
jle
dec
push
add
in
pop
mov
imul
add
jecxz
seta
insb
push
add
sub
std
cwtl
addb
add
add
negb
aas
loop
imul
add
fst
adc
add
jl
xchg
test
lcall
pop
add
addr16
int3
and
test
je
addb
add
add
add
add
add
popa
add
add
jl
cwtl
mov
add
jmp
or
sbb
add
jnp
add
add
add
das
stos
mov
clc
sub
add
pop
sub
add
popa
add
mov
add
outsl
jmp
out
mov
add
and
jbe
lods
inc
add
add
out
aas
roll
dec
adc
or
add
lret
pop
int3
aas
shll
fucomip
add
fwait
mov
je
mov
add
add
add
add
jo
pushf
cmpsb
add
ficoml
add
add
mov
lret
stos
in
sbb
mov
ret
add
clc
dec
jo
test
call
movsb
add
add
jecxz
push
mov
sub
add
add
push
mov
int
add
lret
pop
out
js
addl
stos
bndstx
or
jmp
hlt
and
sbb
addl
push
cmp
stos
scas
xor
ret
add
jno
xchg
fistps
add
movl
add
lret
addl
adc
mov
add
xor
movb
rolb
ret
add
and
and
lods
std
shlb
mov
mov
add
inc
add
add
add
les
punpckhdq
add
jl
push
test
data16
je
adc
outsl
addl
add
pextrw
add
insl
sbb
loopne
pop
fwait
adc
addb
test
and
aaa
sbb
repz
xor
sbb
add
mov
sub
add
lds
pop
cli
push
test
sub
shll
push
loop
jnp
add
xor
addb
dec
in
movsb
add
lret
pop
dec
sub
push
add
push
lds
or
add
cld
xor
push
xchg
mul
add
sbb
addl
add
add
daa
add
add
gs
push
jp
add
out
pusha
add
jmp
add
add
cltd
sarl
mov
add
or
add
jns
and
aad
jne
add
add
cli
add
mov
add
add
push
pop
mov
add
adc
cmpps
add
add
loopne
xchg
and
sbb
add
add
mov
sbb
fimull
popa
add
bound
sub
add
int3
lret
insl
push
add
inc
add
fisttpl
test
adc
add
mov
add
xchg
addb
add
scas
adc
dec
push
fst
cmc
or
add
das
cli
jg
out
cli
sbb
lods
mov
add
lds
sbb
ror
sub
add
call
movsb
add
dec
dec
aas
inc
add
mov
fisubrl
and
rcrb
or
mov
inc
add
mov
test
add
loop
jle
add
push
add
mov
jecxz
in
cmp
mov
add
add
add
add
add
push
std
pop
push
roll
jge
add
arpl
icebp
test
out
mov
enter
shrb
xlat
sub
xlat
mov
adc
dec
mov
mov
add
add
icebp
mov
lcall
out
sbb
cmpsb
add
add
mov
roll
aas
inc
add
lret
out
mov
xchg
push
dec
shll
out
scas
sub
add
add
cmc
jbe
cs
sahf
inc
add
add
add
add
add
fdivrl
add
cld
pop
add
cmp
mov
lods
xor
test
mov
leave
rolb
sbb
cld
push
dec
mov
push
add
add
inc
add
pop
cmp
outsl
stos
mov
popa
add
add
cmp
mov
shr
enter
add
fdivp
sub
dec
in
shrl
mov
add
data16
pushl
jle
add
add
or
pop
or
add
iret
les
push
ja
add
mov
bound
lret
les
mov
cmpsb
add
inc
add
add
add
cli
in
dec
lret
add
inc
add
lahf
std
sub
add
add
int
mov
add
aad
xor
xor
cltd
daa
add
jg
add
addl
enter
outsb
or
add
inc
add
add
ja
stos
jne
add
add
inc
add
add
push
add
fstl
add
sub
jae
xor
xchg
and
repnz
add
push
ja
cld
adc
mov
iret
pop
push
pop
in
incl
arpl
dec
scas
loope
push
add
add
in
inc
add
mov
sbb
fbld
fsubl
lods
inc
add
mov
lret
add
push
push
movb
add
cmp
lret
sub
add
lahf
push
cwtl
jge
add
add
rolb
or
pop
mov
imul
push
add
popa
add
test
dec
aas
sbb
rcl
xchg
and
add
push
mov
add
rol
add
dec
addl
inc
add
inc
add
add
insl
ror
enter
mov
lret
inc
add
add
fcmovu
xor
stos
xchg
adc
push
pop
adc
out
and
mov
add
mov
add
rolb
add
lea
jle
dec
fcompl
test
fstps
add
push
add
add
mov
dec
push
inc
add
add
dec
je
pop
dec
add
mov
add
insl
mov
add
add
inc
add
sub
in
cmp
add
xchg
inc
add
sub
add
stos
neg
sbb
pop
add
add
jle
cltd
addb
add
mov
add
sti
movsb
add
jp
fcompl
jmp
xchg
hlt
decl
xchg
aam
dec
mov
cmp
ss
xchg
scas
lock
and
jle
mov
or
mov
out
jecxz
mov
dec
cmp
add
add
js
add
outsl
xchg
sbb
dec
mov
add
add
aaa
xchg
fiaddl
add
add
inc
add
cld
sbb
push
data16
fcomip
sub
add
jge
add
add
add
inc
add
lret
jns
scas
movsb
add
adc
into
call
mov
add
add
cmp
add
mov
add
hlt
pushf
pushf
adc
add
add
mov
xor
adc
jmp
push
add
add
and
xor
outsl
mov
clc
jb
xchg
jb
and
mov
fimuls
ds
add
jp
cmp
sbb
sbb
sub
add
add
push
fdivs
jecxz
sub
and
pop
mov
add
dec
xor
jl
inc
add
cmp
push
add
add
add
add
iret
jo
test
mov
fisubl
add
mov
inc
add
add
jbe
cli
addb
push
add
add
std
sbb
add
mov
add
stos
outsb
sub
mov
add
add
add
push
inc
add
add
add
add
repz
jg
push
add
and
add
in
test
mov
clc
inc
add
add
add
xchg
and
or
sahf
pop
add
div
test
icebp
mov
loop
mov
in
dec
add
aaa
jno
cmpsl
add
add
adc
add
out
decl
and
lret
add
add
add
add
add
push
sti
out
push
pop
add
ret
and
pusha
add
imul
icebp
leave
jle
jl
add
mov
add
add
push
add
xchg
fidivl
pop
cmp
adc
jbe
add
pop
lds
jg
or
add
in
cmc
sbb
add
inc
add
jb
xor
stc
in
std
es
cli
add
cs
mov
mov
cmpsl
add
add
add
test
ret
add
jb
clc
pop
xor
sahf
sti
cmp
add
cmp
add
cmc
dec
repnz
add
jns
add
xchg
cmp
and
jg
push
add
sbb
out
adc
cmpsl
add
pop
cld
sub
and
hlt
jbe
cli
pop
fnstcw
add
mov
inc
add
add
or
pop
iret
cmp
inc
add
sub
mov
add
stos
mov
bnd
not
dec
inc
add
add
mov
jp
stos
mov
dec
movsb
add
add
add
outsl
dec
hlt
pop
sub
add
scas
das
add
and
mov
idivb
push
add
cmp
add
lock
add
fldln2
dec
jg
popf
lods
inc
add
jns
dec
dec
movsl
add
movsl
add
mov
int3
and
xchg
addb
add
add
rorl
cmc
aam
add
jle
shll
add
mov
rcrl
ljmp
push
push
add
jmp
add
mov
or
add
int3
lret
xor
lea
add
jg
add
cmpsl
add
push
addl
add
ljmp
xchg
xor
imul
pusha
add
sub
add
arpl
lahf
stos
inc
add
add
dec
stos
movsl
add
fwait
jno
std
jl
add
adc
xchg
mov
nop
inc
add
add
cmpsl
add
cmp
add
jge
add
add
adc
rol
add
addb
adc
lahf
lods
xor
jb
fwait
data16
or
and
fadd
add
sbb
pop
nop
pop
mov
adc
add
loop
mov
mov
add
stos
or
inc
add
add
jns
add
add
add
xor
stos
xchg
or
add
sahf
xchg
movsb
add
jmp
add
add
movsl
add
adc
hlt
xor
cwtl
std
jae
cmp
aaa
in
xlat
mov
in
sbb
lret
jl
inc
add
add
imul
add
mov
addb
in
cs
repnz
loop
shrl
pop
loope
jnp
mov
add
mov
out
js
push
mov
add
add
add
out
jbe
xchg
add
jp
add
add
xchg
fidivrl
mov
clc
in
and
add
add
out
dec
cmp
inc
add
add
addl
push
std
sbb
add
cmp
add
scas
test
add
jne
pushf
mov
pop
fs
rolb
cs
adc
xchg
adc
jmp
frstor
add
xchg
push
add
ret
add
je
aas
push
add
dec
jae
push
add
push
add
add
add
add
add
add
add
lods
push
add
mov
add
cmp
pusha
add
lock
add
sbb
mov
icebp
mov
add
pop
add
add
clc
roll
mov
jnp
add
mov
lcall
jl
in
out
add
movb
bound
cwtl
lcall
mov
fisttpll
add
and
jl
mov
jnp
adc
or
add
lds
ret
push
mov
mov
add
add
mov
jb
cltd
mov
add
cmc
iret
cmp
int
add
jle
add
cmpsb
add
std
add
add
add
shrl
add
cmpsb
add
ja
add
add
add
ret
cld
push
add
add
in
rorl
add
mov
push
out
fdivrp
addb
add
fldl
add
adc
icebp
mov
add
pushl
fnstenv
ret
xor
insl
sub
sub
testl
add
and
loopne
pop
and
add
add
add
mov
imul
xchg
data16
sbb
ret
add
lock
xor
int3
xor
inc
add
scas
lahf
test
cmp
nop
mov
jnp
sub
add
pop
mov
add
add
loopne
outsb
push
lds
mov
add
bound
mov
or
add
adc
sbb
call
add
jp
out
mov
aam
mov
mov
pop
add
popa
add
dec
mov
add
and
add
jmp
push
add
outsl
mov
pop
jb
cmp
xchg
test
cld
inc
add
int
add
clc
xlat
inc
add
sahf
js
testl
jge
adc
scas
in
out
cmp
add
add
pop
add
add
dec
sub
pop
and
jno
add
or
add
jno
dec
inc
add
les
outsl
jo
xchg
iret
stos
addr16
push
movb
add
add
mov
aad
add
ds
rcl
int3
jo
adc
sbb
add
outsb
push
xor
js
jbe
xlat
sub
xlat
and
mov
jmp
add
inc
add
jo
repz
mov
and
out
mov
add
add
push
popf
mov
sub
push
sbb
inc
add
lods
scas
or
push
sqrtps
cmc
scas
hlt
test
rcl
lret
pop
pop
imull
push
cmp
mov
add
xor
in
add
or
negb
int
add
nop
or
xor
in
enter
add
cwtl
data16
or
repz
shll
jle
pop
mov
addr16
dec
push
loopne
pushf
sti
adc
sbb
popa
add
sarl
adc
scas
add
in
adc
mov
add
movl
add
push
add
add
add
add
jno
icebp
mull
dec
sub
addl
test
sub
sar
popf
adc
adc
std
add
pop
sti
mov
sub
pop
xor
addb
cwtl
addl
add
test
popa
add
lock
and
pushf
push
add
add
add
add
out
mov
add
adc
inc
add
add
xlat
pop
push
jne
int3
jmp
dec
sub
add
rcrb
push
add
add
pop
jns
roll
mov
sti
inc
add
jg
add
dec
aad
repnz
xor
imul
sahf
iret
jle
add
push
add
dec
loope
outsl
pop
mov
cmp
shll
hlt
in
data16
mov
iret
pop
addl
jo
inc
add
in
xchg
mov
jne
add
sub
pop
lds
lahf
pop
insl
les
aas
xchg
aas
popa
add
add
pop
sub
mov
icebp
dec
lods
mov
add
outsl
mov
icebp
rorl
cmp
clc
std
lret
arpl
pusha
add
xor
and
jb
push
cli
inc
add
mov
add
ret
adc
mov
insb
jmp
fsubrp
and
add
sbb
xchg
sbb
sbb
push
cmp
add
sub
add
dec
jg
fwait
pusha
add
cmpsl
add
daa
add
notrack
dec
jge
fdecstp
out
bound
addl
add
adc
xchg
push
add
mov
cmpsl
add
scas
xchg
sbb
jg
add
in
aaa
ret
add
sbb
pop
add
les
iret
std
jne
add
add
add
add
jge
push
add
add
imul
loop
mov
iret
stos
lret
dec
pop
jp
add
arpl
sub
sub
add
jb
jno
daa
add
pop
add
add
sub
jl
pop
pop
mov
add
cs
xor
xchg
shll
dec
xor
loopne
les
mov
fs
sub
dec
sbb
mov
add
jbe
je
mov
add
mov
repnz
out
jmp
addl
not
or
jne
mov
lcall
ret
mov
add
shlb
adc
push
roll
add
fpatan
dec
pop
dec
mov
add
aam
add
mov
andnps
insl
leave
jle
add
add
sets
add
lahf
movb
inc
add
and
in
aad
out
dec
sbb
dec
add
jecxz
xlat
mov
add
mov
or
push
add
cmp
adc
sbb
roll
add
add
add
adc
add
sbb
outsb
sti
inc
add
sub
xor
test
mov
add
add
xor
cmp
add
sbb
add
push
inc
add
icebp
pop
push
add
add
pop
add
sbb
add
add
pop
add
push
cld
movb
xor
jmp
dec
mov
pop
add
add
ds
pop
cmpsb
add
add
push
add
jecxz
addl
inc
add
nop
sahf
imul
xchg
cmpsb
add
test
push
cmp
pop
punpckhdq
add
fnstenv
add
rolb
sbb
dec
or
xchg
stos
add
shl
add
add
lds
jg
ss
jns
add
and
mov
mov
adc
jmp
add
add
add
cltd
ret
add
inc
add
add
push
jg
add
dec
cltd
mov
add
lods
or
pop
hlt
xor
add
out
nop
inc
add
lcall
add
push
lret
push
mov
add
addr16
mov
add
ja
add
movl
sub
add
xor
movl
pushf
add
sti
ds
adc
add
mov
add
roll
inc
add
xchg
bound
pop
pop
fwait
lods
mov
ljmp
out
sub
add
test
cmpsb
add
add
addb
add
add
adc
sub
addb
add
xor
les
ds
outsb
inc
add
add
lea
je
pop
add
add
popa
add
add
mov
inc
add
call
adc
jne
add
add
add
cmpsb
add
and
mov
dec
loop
jl
mov
jnp
jl
scas
or
sub
cltd
pop
add
cmp
push
fsubs
outsl
xchg
adc
inc
add
dec
adc
jns
outsb
stc
mulb
sbb
add
repz
fcomp
mov
out
pop
dec
mov
xor
popa
add
or
loopne
mov
add
mov
add
add
sti
jnp
add
add
add
mov
je
add
stos
loop
test
cmpsl
add
mov
jmp
add
mov
push
cmc
sub
pop
mov
lahf
and
loope,pn
je
add
jecxz
loop
pop
scas
or
mov
xchg
mov
scas
loop
int3
and
xor
mov
add
and
lret
insb
call
push
add
push
add
aad
add
push
add
jp
js,pn
add
add
out
sbb
xchg
stc
xchg
pop
lods
lahf
dec
jp
fsubl
repz
add
popa
add
pop
int
popa
add
pop
je
add
sbb
add
add
add
or
lret
sti
push
add
jl
add
or
xlat
jecxz
xchg
stos
mov
add
add
lds
mov
add
decl
loopne
cld
aam
testl
clc
push
out
mov
add
loope
or
add
mov
add
add
and
cmp
add
xchg
xchg
cmp
js
jb
mov
add
enter
jl
inc
add
add
mov
scas
cmpsl
add
add
and
les
loop
xchg
and
std
add
or
xor
xchg
sub
sarl
add
mov
in
movsb
add
mov
add
add
add
add
pop
xchg
jmp
add
xor
pop
xchg
fsubr
int3
pop
sub
add
add
mov
pop
in
mov
mov
or
add
fsubl
add
xchg
int3
cmp
xchg
adc
mov
adc
cmpsb
add
repz
ds
add
add
add
outsb
sub
mov
addr16
add
add
add
add
jle
add
scas
jne
fadds
add
out
outsb
add
rol
add
dec
jnp
pop
lret
movsb
add
add
xchg
addl
add
pop
loop
hlt
jno
dec
xchg
test
add
mov
jp
scas
arpl
jno
jnp
ret
add
add
add
pop
repz
or
in
sbb
add
add
mov
ficoml
add
inc
add
add
dec
loop
mov
add
ljmp
add
add
add
push
add
xor
popa
add
mov
popa
add
jg
add
leave
je
lcall
jp
sub
movl
add
or
lods
sub
add
in
mov
fcmovbe
ja
push
add
xchg
repz
xor
cmc
leave
cwtl
mov
mov
inc
add
xchg
mov
push
add
adc
outsl
stc
test
sub
jge
popa
add
add
push
add
insb
pop
bound
jb
jbe
or
cltd
inc
add
divl
pop
dec
ret
in
out
imul
shr
scas
pop
mov
jo
dec
out
push
fnstsw
push
daa
add
xchg
adc
int3
pop
inc
add
scas
fwait
out
outsl
lods
mov
add
cld
ret
add
add
and
negb
mov
add
add
add
fsts
push
ja
cwtl
mov
hlt
mov
push
pop
mov
jle
push
add
add
lret
mov
addb
add
push
in
add
add
pop
mov
fldl
add
in
cmp
push
test
cmp
add
add
add
popa
add
outsb
push
out
or
xchg
dec
mov
aad
sub
add
add
mov
sbb
lcall
add
add
sbb
mov
outsb
dec
pop
add
ret
and
out
inc
add
sub
xor
addl
mov
add
faddl
add
movb
mov
jmp
jno
ja
das
fsub
add
push
add
add
xor
adc
inc
add
out
mov
mov
bound
sub
or
les
imul
repnz
mov
add
cwtl
call
add
add
add
sub
into
pusha
add
add
jbe
testb
mov
mov
outsb
dec
pusha
add
int
add
add
add
stos
fadds
roll
cmc
lret
mov
xor
sub
add
add
aad
cmp
add
fsubrl
fsubrp
add
lods
call
push
push
add
rol
add
add
xlat
mov
xor
fcoml
add
fildl
jl
lods
fmull
add
sub
movsb
add
inc
add
sbb
cmp
add
xchg
inc
add
cmp
pop
cs
pop
add
xchg
aaa
push
mov
mulb
mov
sbb
pop
ljmp
add
in
mov
add
mov
add
add
add
fdivrl
pop
add
and
push
mov
mov
out
adc
dec
adc
add
psrld
cmp
lock
inc
add
add
rolb
add
or
add
add
add
add
dec
imul
std
movb
add
mov
push
push
add
xchg
es
sbb
sarb
aam
mov
add
push
add
hlt
mov
xchg
adc
ds
add
out
stc
or
imul
push
mov
xor
push
add
lea
out
negl
add
sub
add
mov
xchg
std
xchg
cmp
add
jb
stos
or
or
add
pushf
pop
dec
jl
add
add
xchg
jo
mov
add
add
cmp
mov
add
or
test
add
push
add
cltd
pop
inc
add
mov
jl
add
add
add
sarb
cmp
pop
sub
xchg
cli
push
add
xor
in
mov
stos
adc
adc
loopne
movb
pop
or
add
