xchg
rorb
loopne
xor
cld
or
pop
out
dec
loop
stc
push
test
jmp
mov
dec
and
popf
test
movb
sub
mov
rcrl
or
sub
ss
jecxz
add
jge,pn
pop
lea
cmp
arpl
mov
cmp
add
lahf
mov
repnz
jne
push
rcll
jl
aaa
cmp
in
xchg
icebp
jno
movsb
push
sbb
cmpsl
sbb
cmp
incb
jmp
cld
fiaddl
call
mov
cwtl
outsl
or
lcall
inc
or
jnp
sarb
adcl
loopne
int3
mov
jecxz
cmpl
mov
sub
add
mov
imul
xchg
repz
ss
or
rolb
xchg
outsb
insl
mov
xchg
stc
push
out
adc
dec
lret
lahf
iret
test
xchg
nop
dec
in
imul
shl
add
mov
daa
popa
movb
and
rcrb
in
das
dec
ja
or
insb
push
mov
xchg
std
lock
js
inc
add
ljmp
push
push
hlt
add
pop
xchg
cmp
inc
xchg
jno
leave
mov
and
pop
add
cmpsl
add
mov
popa
add
fsubrl
jmp
flds
shlb
add
inc
add
pop
xchg
daa
dec
xchg
xor
dec
test
push
add
addb
fldt
pop
xchg
iret
xor
add
xor
or
addb
cmp
lods
movsl
mov
xor
js
scas
imul
loope
mov
loope
mov
add
cwtl
mov
imul
sub
jg
sbb
mov
lea
jo
add
xchg
push
add
add
add
push
les
arpl
jge
pop
aaa
jp
and
outsl
sbb
test
xor
cmp
popf
popf
test
ret
jb
call
mov
outsb
mov
test
inc
add
test
fnsave
popa
jnp
movb
arpl
js
and
adc
rorl
int
xchg
or
shr
jae
dec
pushaw
add
add
out
stos
pop
ja
in
fwait
test
and
pusha
add
loope
or
lea
add
jbe
leave
mov
mov
movhps
arpl
push
inc
add
push
int
pop
enter
ret
cld
test
mov
dec
data16
mov
mov
xlat
xor
inc
sub
addb
incb
add
add
and
mov
inc
pop
repnz
or
ficoml
cmp
add
popa
int3
or
lds
out
add
lret
sbb
imul
jb
and
arpl
test
jnp
jg
sbb
lods
pop
mov
add
xchg
dec
push
das
xor
sub
lock
mov
das
xchg
cltd
mov
jp
inc
test
inc
inc
add
mov
adc
lock
and
out
mov
xor
adc
xchg
xchg
mov
xchg
sbb
pop
add
xor
shl
pop
push
cld
popl
jno
sbb
dec
bound
jno
sti
inc
add
dec
cld
mov
sub
add
and
lock
fists
stos
je
aaa
cmp
leave
rolb
add
lds
and
sbb
inc
jae
inc
add
test
bound
stc
xchg
iret
push
adc
loope
mov
lcall
xor
adc
cmp
add
jl
add
sti
mov
jmp
test
cwtl
addr16
lret
add
jbe
icebp
jge
les
aad
adc
xor
add
jo
es
mov
add
loopne
rolb
pop
xchg
sub
shl
aas
adc
pop
pusha
add
in
fwait
pushf
sbb
testl
dec
or
aas
pop
arpl
test
pop
mov
adc
add
bound
pop
ljmp
push
jl
pop
clc
repnz
adc
cmp
sbb
dec
jle
add
lods
lret
dec
push
add
xor
adc
add
pop
pushf
xchg
xor
xlat
das
pop
pop
jmp
jne
lods
mov
mov
int3
stos
out
mov
jp
xchg
ret
pop
popf
lret
pop
inc
movb
test
std
scas
call
add
dec
inc
ss
sbb
pop
sti
into
dec
mov
jns
lods
inc
cmc
in
adc
pop
fstpt
jnp
and
fildl
push
push
adc
out
test
mov
sub
and
lcall
add
mov
sarl
int
xchg
and
add
xorl
push
je
fistpl
pop
dec
lods
je
xor
inc
add
addb
js
adc
sbb
scas
fdivrp
rolb
sbb
jmp
jb
add
pop
add
cmpsb
rcrl
push
add
pop
inc
pop
inc
dec
xor
push
clc
push
daa
cmp
aaa
mov
cmp
les
push
add
jne
inc
add
xchg
std
mov
out
dec
movsl
lahf
jge
xor
add
sahf
leave
adc
add
pop
cli
movsb
push
pop
xchg
jl
insb
inc
add
adc
bound
rolb
dec
push
lea
rorl
pop
inc
ds
xchg
mov
adc
add
inc
add
and
mov
dec
addl
inc
ljmp
add
mov
mov
add
popf
adc
add
mov
mov
jns
add
add
inc
ds
imul
add
add
cmp
xchg
pop
and
hlt
fildll
repz
cmpsb
clc
fsubl
or
fimull
jge
inc
movsl
mov
dec
sar
and
cmp
dec
mov
mov
push
jno,pt
scas
mov
sub
imul
enter
repz
add
lea
mov
add
sub
in
adc
cmp
loope
cwtl
inc
add
and
add
jge
out
sbb
lcall
movsl
in
lcall
xor
xchg
pop
and
sbb
add
frstor
mov
add
ffree
pop
pop
test
xor
adc
mov
in
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
dec
test
mov
xor
mov
pop
jge
xchg
xchg
bound
inc
mul
mov
inc
add
clc
aas
adc
popa
mov
sub
push
mov
mov
mov
pop
and
rorl
ror
inc
movsb
imul
icebp
push
sub
add
push
lods
mov
repz
jl
pop
cmpl
and
enter
flds
jno
inc
pop
mov
sub
inc
dec
jne
add
xor
outsb
cwtl
insb
jae
inc
add
in
pop
jne
push
lret
bound
jecxz
imul
inc
add
testb
jb
push
xor
add
add
repnz
addb
in
adc
cmp
jmp
pusha
add
repnz
add
ss
leave
ret
dec
pop
jbe
dec
jne
push
notb
ret
mov
adc
pop
shrl
xchg
arpl
lea
ret
testb
lock
movsb
arpl
mov
loopne
movb
fistps
xchg
pop
adc
inc
and
repnz
or
and
mov
sahf
lret
leave
xchg
lgs
pop
jno
add
inc
cltd
sub
aam
or
push
mov
mov
add
add
addb
addl
xor
push
mov
ret
mov
decl
add
pop
adc
cmpsb
mov
ret
call
push
mov
pusha
add
xor
push
fistps
sub
mov
mov
adc
addb
xor
xchg
test
inc
or
add
mov
mov
mov
mov
out
adc
add
mov
cmpsb
test
mov
push
add
add
jmp
sub
adc
test
mov
inc
mov
pop
sub
add
test
imul
sub
sub
ds
sub
add
aaa
in
cli
test
lods
mov
je
push
ds
mov
xchg
fdivp
mov
bound
mov
add
mov
add
es
movsb
ss
pop
sbb
mov
call
sbb
ljmp
cs
mov
rol
lret
xor
pop
rcll
add
arpl
add
mov
pop
push
insl
mov
daa
cmp
adc
and
push
cmpsl
fwait
pop
cmp
fisttpl
outsb
bound
sarl
inc
add
sub
fidivl
test
add
test
in
lds
jle
pop
das
add
mov
add
pushf
test
mov
arpl
jmp
es
xor
add
adc
push
cmpsl
loopne
repnz
pop
pop
insl
mov
out
xor
scas
add
fs
and
push
imul
lods
repnz
add
jl
loop
xlat
cli
push
jne
mov
fisubrs
add
loop
movb
scas
les
push
fs
pop
sbb
int3
sub
or
or
hlt
rcrl
xor
adcl
or
sub
xchg
mov
cld
xlat
lret
std
or
cltd
cltd
inc
lods
cmp
sbb
jb
fwait
roll
push
cmc
sub
ja
sub
cwtl
stc
mov
cmp
test
mov
dec
out
stos
or
jb
imul
xchg
jmp
dec
movsb
sub
out
insl
dec
inc
movsl
or
jecxz
add
add
push
idivb
arpl
lcall
add
stc
push
pavgw
fdivl
sub
imul
fcoms
cmp
fildl
mov
push
jmp
mov
dec
sbb
je
mov
xchg
out
insl
cmp
mov
add
jno
jmp
and
jge
test
movsl
push
daa
add
mov
gs
test
ficoml
loope
ficoml
add
adc
mov
leave
mov
add
daa
sysenter
jmp
in
scas
insl
mov
push
sbb
inc
add
add
add
imul
xchg
xchg
clc
jnp
lock
add
cmp
adc
into
cmp
fwait
int3
dec
mov
sub
mov
pop
inc
add
jle
cld
es
mov
inc
add
jp
cmpsb
jmp
and
pushl
mov
lock
dec
sar
repnz
pop
xchg
add
xchg
loope
xchg
xchg
test
and
dec
lahf
enter
push
add
push
sbbl
repz
loope
das
dec
lret
adc
rolb
pusha
add
cwtl
dec
jmp
add
push
sub
loop
mov
imul
pop
call
ret
add
jmp
or
out
movb
andl
aad
cmpsb
push
or
or
ret
out
roll
adc
inc
xchg
pop
movsl
dec
jne
sarb
lds
aaa
pop
mov
lahf
in
outsl
out
jo
mov
push
mov
decb
test
shrb
test
cmp
je
cmp
into
xchg
xchg
negl
dec
sbbl
mov
in
in
cmp
add
and
pop
cmp
and
out
das
sub
sbb
push
repnz
bound
push
shll
sub
data16
mov
adc
sub
mov
call
fisttpll
mov
inc
add
shll
dec
xlat
aas
sahf
jo
mov
add
dec
add
inc
mov
jbe
repz
out
sub
pop
clc
jae
aas
push
push
jecxz
sub
sbbl
shll
jl
mov
pop
test
add
icebp
je
add
add
out
inc
adc
fucomp
xor
add
dec
mov
lods
bound
int
data16
jno
mov
sbb
jbe
add
pop
push
add
inc
add
test
pusha
add
in
mov
lock
dec
pop
shlb
mov
sar
enter
dec
lds
in
out
test
jmp
add
test
pop
movsl
lods
sbb
inc
stos
outsl
jo
pop
scas
sti
inc
mov
mov
push
add
add
lret
sti
mov
fs
ret
cmc
pop
jecxz
add
cli
stos
lods
dec
adc
dec
xchg
xchg
add
lret
lds
inc
xor
dec
lea
jae
xor
ss
add
rcrl
add
xchg
dec
popa
xor
loop
lds
cmp
in
dec
cmp
jge
mov
mov
das
xchg
xor
push
lcall
movb
mov
adc
bound
sbb
mov
ret
jbe
rcrl
cwtl
testl
xchg
dec
das
outsb
cmp
add
fcompl
imul
bound
int3
mov
lret
adc
mov
sub
pop
pop
push
shll
mov
and
fstpt
mov
jo
mov
sub
inc
test
inc
inc
and
xor
mov
push
loopne
addb
mov
in
jae
rolb
xchg
std
push
push
fldenv
lds
dec
sbb
xor
ljmp
rol
popa
addb
xchg
xor
push
dec
xor
sahf
mov
movsb
jge
cmpsb
push
das
pushf
add
cmpl
inc
adc
lea
or
add
mov
cmp
adc
dec
adc
jo
add
add
inc
jecxz
mov
cmp
imul
mov
dec
gs
mov
dec
outsl
gs
jae
add
fisubl
movb
insl
xlat
ret
popa
pop
fisubrs
das
and
xor
add
fldl
add
xchg
in
mov
mov
movb
sbb
sbb
mov
cli
sub
lahf
inc
add
adc
sub
push
xlat
into
imul
enter
add
pushf
js
imul
cmpsb
add
shll
pusha
add
pop
fs
add
mov
pop
and
or
add
shrl
push
movb
mov
inc
add
sub
addb
sbb
adc
movsb
stos
mov
sbb
sarb
movd
sbb
add
pop
xor
pop
lds
imulb
ja
fdivrp
andl
out
pop
std
push
out
push
mov
fstpt
push
scas
test
cmp
sti
aas
jmp
sbb
add
movsb
loop
fists
xchg
pop
cld
push
mov
mov
pop
xor
mov
jmp
enter
imul
scas
xor
jae
outsb
test
mov
xchg
sub
dec
jle
lods
xor
or
mov
push
stos
xor
loope
mov
add
ss
mov
add
mov
in
jno
jl
add
movsl
in
fs
in
sbb
pop
push
add
cmc
lds
mov
ljmp
ja
mov
sbb
les
sbb
jne
shrl
or
add
inc
add
mov
mulb
movsb
outsl
cmpsl
jge
pop
mov
mov
lods
dec
lds
or
lods
xor
jmp
daa
jl
push
add
push
xchg
ljmp
test
arpl
mov
jmp
dec
xor
mov
fistps
xor
outsb
test
lods
cmp
adc
stos
inc
inc
mov
sti
repz
rorb
push
and
mov
mov
inc
add
mov
inc
add
sub
add
jno
aas
pop
data16
jae
add
rolb
jbe
arpl
sbb
mov
imull
jnp
add
xchg
sub
push
rolb
lret
xchg
adc
adc
ret
cmp
push
mov
xchg
adc
hlt
popa
mov
add
add
scas
jo
lahf
hlt
out
jnp
insb
cltd
bound
sub
mov
jo
and
adc
push
or
and
lret
cltd
add
rcrl
add
leave
jns
es
cmc
mov
or
sub
lea
add
mov
or
and
div
jnp
sahf
add
xlat
cmc
clc
sub
pusha
add
cmp
sub
dec
xchg
pop
test
pop
and
mov
inc
add
dec
xor
push
pop
fprem
cwtl
jae
roll
dec
add
jg
test
xchg
mov
addb
sub
push
mov
cltd
xchg
js
jb
add
xchg
push
addb
adc
ja
stc
dec
or
add
mov
mov
sub
or
mov
aas
inc
mov
push
movb
add
pop
inc
arpl
jl
movsb
mov
push
jl
out
cwtl
push
pop
cs
mov
pop
fidivs
leave
fistpl
js
shlb
mov
outsl
pop
mov
add
aad
sub
add
leave
les
movsl
stos
sbb
mov
add
sbb
add
xchg
xchg
jne
imul
scas
adc
inc
add
ret
inc
sub
rcrb
out
fldl2e
mov
test
cs
addr16
cmc
mov
inc
add
mov
movsl
fdivrl
ret
pop
sub
mov
scas
out
and
lahf
enter
stos
scas
sbb
insb
notl
fsts
into
or
cmp
xor
cmc
rol
mov
inc
and
sub
sbb
sbb
mov
ljmp
call
loopne
lret
mov
add
das
and
iret
sbb
cwtl
jecxz
aad
in
adc
add
push
mov
push
sub
out
gs
adc
add
sbb
xor
fwait
lret
or
insb
aaa
pusha
add
je
addr16
dec
pop
cmpsb
dec
mov
mov
adc
mov
push
dec
xchg
data16
addr16
mov
add
push
jb
cli
add
and
test
mov
push
jb
scas
pop
pop
add
cmp
arpl
out
iret
scas
mov
cmp
xchg
jle
add
fwait
or
and
sub
clc
in
imul
sahf
cmpsb
jb
add
aad
out
xor
add
stos
xor
xchg
pop
subl
add
pop
push
sub
rclb
popa
pop
fnstenv
test
sbb
mov
add
add
add
sbb
je
push
arpl
clc
enter
or
mov
and
add
lods
data16
xor
dec
pop
jae
xor
pop
enter
sub
inc
into
aad
mov
aad
icebp
test
mov
add
mov
pop
stos
push
mov
rorl
imul
or
adc
push
dec
pop
sub
xor
jo
ss
cli
aad
add
movb
or
xor
mov
add
lret
gs
inc
add
and
and
ret
int3
pop
pop
push
xchg
mov
add
inc
add
bound
pop
mov
idiv
imul
xlat
dec
jo
mov
jae
mov
aas
inc
add
insb
pop
sbb
aaa
and
cltd
or
pushf
jae
add
pushl
push
arpl
add
sub
out
and
xchg
xchg
fisubrl
mov
xchg
mov
jl
add
cs
clc
rsqrtps
add
inc
cli
stc
xchg
stc
inc
add
sbb
aaa
sbb
push
add
inc
add
adc
add
xor
fistpl
xchg
outsb
adc
inc
mov
loopne
inc
movb
mov
sub
aaa
in
cli
pop
rol
add
inc
add
pop
cli
add
rorl
inc
add
mov
insb
mov
pop
inc
add
dec
stos
neg
cli
push
cmp
add
mov
fisttps
mov
push
js
pop
jb
adc
sbb
imull
fbstp
sub
xchg
imul
aas
pop
dec
call
dec
iret
test
and
sub
xchg
xor
cmpsb
push
mov
xor
fnstsw
add
test
mov
mov
mov
xchg
out
fiadds
inc
add
pop
dec
aam
enter
loop
add
vorpd
and
add
push
xchg
and
sbb
iret
ret
cltd
push
cs
in
mov
push
xchg
xor
adc
push
scas
ja
xor
jecxz
and
test
jge
test
mov
rcll
mov
inc
test
nop
xchg
dec
mov
add
shll
data16
bound
push
imul
add
mov
add
push
inc
add
scas
ljmp
push
add
xor
les
jae
std
cli
jecxz
sub
mov
ficomps
test
test
xchg
inc
add
es
cmp
shlb
add
sub
hlt
and
sti
xchg
jp
pushf
ljmp
mov
or
rclb
inc
xlat
lcall
sbb
fdivl
loop
jns
loopne
xchg
jg
bound
jb
je
push
leave
mov
push
repz
cmp
loopew
xor
xor
ret
and
push
leave
sub
mov
sub
push
xor
mov
aam
popl
add
lret
movb
mov
lock
jo
mov
fcmovu
mov
mov
add
in
mov
add
add
enter
xor
int
faddl
cld
xor
xchg
add
addb
jecxz
jg
pushf
inc
sbb
jns
sub
sub
xor
fwait
sub
cmpsb
imul
ss
xor
jg
pop
xchg
les
negl
test
jno
lods
dec
jnp
xor
stc
mov
jns
and
data16
mov
dec
fdivrs
stc
inc
add
or
ljmp
outsb
xchg
dec
jmp
rorb
xor
and
mov
mov
aaa
stos
add
pop
and
adc
and
std
jg
sub
cmp
jl
cs
fucomi
xchg
shrl
sbb
xchg
cmp
sub
ljmp
nop
in
movb
out
push
push
mov
cmp
mov
add
add
das
dec
fdivrl
or
add
das
add
jecxz
and
pop
and
and
aam
adc
lahf
imul
xchg
movsl
pop
dec
lds
xchg
push
xor
mov
push
nop
data16
int
inc
add
pop
lahf
xor
xchg
stc
sub
dec
rolb
cmp
add
rorb
loopne
aam
cmp
xchg
aaa
mov
sbb
sub
mov
pop
pop
test
or
popa
xor
mov
loop
add
pop
mov
inc
add
clc
fs
pop
in
pop
inc
incb
popf
loop
lds
cwtl
sbb
sbb
ds
test
and
adc
fistpl
adc
mov
mov
jne
pusha
add
add
add
mov
or
jne
aad
push
bound
popf
push
mov
aas
movsl
in
fdivrl
arpl
dec
dec
sti
cmp
mov
faddp
inc
add
cld
fstl
add
loope
push
jno
daa
jmp
out
scas
xchg
and
scas
jns
inc
ja
adc
jnp
jbe
popf
xor
stos
mov
inc
jg
mov
out
sbbl
sub
sbb
inc
add
sub
xchg
inc
add
ret
or
iret
sbb
add
stc
nop
in
enter
jl
jne
popa
and
insl
fnstsw
push
aas
repz
ror
dec
lods
dec
incb
movb
adc
push
mov
dec
jle
loope
xchg
adc
dec
ret
cmp
cmp
add
out
leave
xchg
repnz
jne
fwait
rorl
push
and
add
jmp
mov
les
sbb
push
bound
xor
lods
or
or
in
mov
fucom
push
pop
adc
jge
add
or
icebp
and
mov
sahf
jge
add
and
add
lahf
cmp
xor
jge
enter
leave
or
and
imul
pop
lret
ljmp
dec
dec
inc
add
ja
stos
cmp
out
leave
cmp
add
and
imul
movb
insb
xchg
xor
cmp
out
rcll
jmp
jno
test
adc
sub
xchg
aad
pop
imul
xchg
imul
outsb
xchg
jp
call
jg
ss
shrl
mov
add
cwtl
je
addb
insl
lret
rorl
test
ljmp
adc
pop
repz
sbb
je
test
push
fildll
rolb
xchg
push
mov
mov
sub
mov
push
push
add
fists
add
jo
inc
add
cmovb
xlat
or
or
iret
testl
shrb
addr16
aad
inc
add
sub
call
inc
add
cmp
pop
fnsave
addb
les
pusha
add
xor
pop
xor
adc
add
pop
xor
xchg
fistl
add
cmp
add
movb
add
out
push
in
fndisi(8087
jo
cltd
jl
repz
add
add
xchg
sti
jns
add
pop
pop
push
lcall
mov
push
push
imul
xchg
pop
pop
loope
fstps
addr16
mov
into
data16
cltd
addb
aas
in
leave
cmpsb
in
add
mov
rcll
bts
xor
xor
add
xchg
int
test
sbb
add
movb
add
mov
add
out
pop
cmpsb
out
aad
dec
addb
xchg
scas
push
add
pop
xchg
xorl
add
add
stos
hlt
dec
dec
cwtl
cmp
xor
push
es
rolb
sti
das
mov
add
add
jbe
outsb
inc
add
fwait
jg
nop
enter
test
mov
add
stc
aad
int
xchg
sbb
movsl
nop
xchg
sbb
lret
jecxz
add
add
stos
ja
ja
adc
adc
mov
aaa
adc
jle
jl
xchg
mov
mov
es
ficompl
insl
adc
sbb
jl
xchg
push
hlt
cmpsb
push
add
mov
pop
sarl
je
adc
push
outsl
sub
dec
test
inc
and
or
push
mov
pop
rclb
decl
jbe
test
ja
add
sahf
mov
and
lods
cs
outsl
icebp
jo
sub
add
in
push
push
mov
cmp
cmp
repnz
inc
add
jp
xchg
jo
add
fcoms
sbb
xor
aam
jmp
adc
out
lcall
lds
movb
push
mov
lret
mov
adc
add
sub
hlt
dec
cwtl
icebp
push
xchg
inc
add
lock
jl
add
ficoms
in
add
add
in
mov
mov
cmpsl
mov
xor
add
call
adc
add
push
sbbl
add
add
xor
sbb
fadd
add
je
push
je
add
outsl
icebp
fldpi
xchg
dec
icebp
mov
fldenv
add
mov
adc
rorl
std
jnp
add
loope
cli
cwtl
out
mov
lret
call
mov
sbb
jg
cmpsw
add
cmpl
mov
js
fs
sti
xor
das
lods
jle
push
mov
rolb
daa
xchg
jle,pn
jbe
aas
xor
push
add
add
rolb
add
adc
push
pushf
xchg
mov
jle
jg
scas
cmp
xor
cld
out
add
mov
mov
pop
inc
add
sbb
daa
dec
ret
gs
mov
movsl
mov
sbb
cmp
out
xlat
inc
in
mov
dec
imul
iret
pop
adc
jl
adc
inc
add
dec
lahf
stos
jo
test
xor
scas
adc
adc
inc
xchg
adc
sbb
push
xchg
mov
add
jb
or
cmp
inc
add
add
jae
popa
mov
add
sub
adc
jb
lcall
pusha
add
add
mov
push
sbb
pcmpgtb
cwtl
or
in
iret
loope
scas
sub
and
fst
push
cmp
lds
sbb
jb
arpl
jnp
lock
add
mov
add
mov
sbb
push
call
cmp
push
fcompl
frstor
cmp
push
adc
scas
adc
in
ficoms
je
add
push
mov
inc
xor
mov
imul
add
or
add
jne
sub
fstpl
imul
add
shll
test
addb
ss
xchg
ja
xchg
int3
adc
out
js
aaa
push
roll
add
movsl
jo
test
mov
adc
cli
pushf
out
pop
push
add
lret
bound
popf
lret
fbld
mov
or
leave
outsl
dec
jg
cmpsl
mov
fstpl
rclb
jae
mov
inc
mov
push
sub
pop
mov
popf
cli
ret
rolb
inc
add
aad
pop
cmpsl
sub
cli
je
push
add
pushf
and
in
fdivrl
dec
mov
fcoml
xchg
lock
movb
mov
jno
add
addb
add
out
loopne
popf
mov
cmp
int3
pop
cmp
dec
iret
mov
and
adc
repnz
xor
movb
jb
movb
cltd
lock
stos
popa
xor
fwait
jle
add
fcmovbe
hlt
insl
sbb
popa
lret
mov
push
sbb
cmpsb
xchg
pop
gs
addb
mov
shr
outsb
or
jno
xor
push
in
scas
bound
and
sarl
bound
out
lret
lds
pop
andl
push
mov
mov
cmp
cmp
sarl
pushf
cmpsb
adc
push
movb
push
mov
popf
cmpsb
inc
jge
nop
pop
xchg
aaa
fwait
in
or
dec
xor
jle
ffree
ds
rorl
add
cmp
test
add
addr16
rolb
loop
movsb
aam
icebp
and
hlt
push
or
rcrl
ret
dec
fiaddl
fsubl
sbb
inc
add
imul
add
cltd
jle
inc
add
add
sub
addr16
incb
jg
imulb
inc
add
push
cwtl
add
popf
mov
jae
xchg
add
pop
and
dec
lock
add
and
or
loopne
mov
hlt
setbe
mov
mov
hlt
xchg
mov
pop
mov
or
pop
out
or
jnp
sti
cmp
adc
sub
sahf
lret
les
pop
or
adc
imul
ja
ljmp
roll
or
pop
imull
pop
jecxz
cmp
mov
add
rcrl
test
or
sarb
dec
sbbl
or
cmp
add
jp
ja
pop
cmp
xchg
push
loopne
hlt
mov
not
push
jg
lods
iret
jb
jecxz
addb
add
je
test
clc
mov
xor
dec
movb
pop
ss
fcoml
jp
imulb
movb
fnstsw
mov
aad
add
mov
cltd
push
faddl
lods
test
lret
mov
add
pop
cmp
fldcw
push
pop
stos
sbb
or
ret
cmp
int3
xor
xlat
jge
popf
jle
jbe
mov
sarb
inc
add
or
push
aad
dec
roll
add
add
add
icebp
rolb
pop
cmpsl
pop
pop
inc
add
sub
and
cli
cli
adc
jge
pop
dec
ss
fcmovb
packsswb
cmp
mov
jo
dec
test
sar
outsl
jnp
aas
jo
sarl
insl
movsl
inc
sahf
into
sbb
or
test
lahf
cld
sub
push
mov
in
aaa
ret
sbb
les
test
or
out
icebp
jg
bound
vmread
pop
mov
add
mov
add
xor
aas
in
gs
jle
ljmp
dec
je
adc
xchg
int3
add
mov
and
push
out
jl
add
arpl
arpl
rorl
pop
out
xor
dec
stos
and
add
push
or
push
lret
add
add
mov
push
hlt
xor
iret
imul
mov
sbb
jg
adc
mov
cmp
xor
mov
add
insb
adc
cmpsl
xor
ss
xor
jp
insl
mov
mov
xchg
imul
and
faddl
sub
ss
aaa
push
inc
out
push
mov
jl
sub
add
fsubs
xchg
fsubrs
push
iret
sbbl
ja
add
popf
jmp
jle
cld
push
bound
xchg
cmp
add
add
std
repnz
push
ficomps
in
pop
cld
sahf
insb
push
stos
addr16
fistpl
in
inc
add
or
sub
lret
push
ljmp
inc
cmp
pop
mov
dec
inc
add
ret
mov
fildl
mov
hlt
mov
pop
jmp
test
fisttps
lds
popf
xlat
mov
add
out
ror
je
add
pop
pushf
sbb
xchg
inc
add
inc
add
inc
add
loop
js
jge
add
int
outsl
std
lret
jmp
dec
jbe
xchg
push
fmuls
mov
add
push
js
stos
xchg
xchg
repnz
loope
inc
addb
lock
test
pop
sbb
add
push
mov
into
mov
sub
ds
add
inc
add
and
xchg
xchg
fsubr
push
stos
out
or
fxch
mov
pop
add
fyl2xp1
and
lods
insb
sbb
add
inc
add
push
es
sbb
push
mov
addb
in
sahf
xchg
inc
fcmovb
add
add
mov
mov
mov
in
cmpsb
into
fcmove
cmc
push
das
enter
add
in
cmp
in
push
jp
jp
push
inc
add
adc
test
mov
ljmp
popf
jmp
sbb
xor
lahf
out
or
pop
mov
int3
test
addb
push
pop
pop
fldenv
fadds
sets
movsl
addb
and
and
jp
decl
popa
push
push
ficompl
loop
pop
sbb
mov
inc
add
push
mov
stos
aas
pushf
aaa
pop
fmull
cwtl
std
insl
sbb
and
hlt
js
add
cmp
pop
xor
jmp
movsb
push
jmp
jne
bound
xchg
sbb
jg
shll
jp
push
xor
add
sub
leave
aas
or
pop
daa
mov
or
dec
xchg
dec
fsubs
pop
or
jecxz
jne
test
xor
dec
outsb
adc
sbb
repnz
mov
dec
pushf
sbb
xor
cmpsl
jl
enter
movsb
pop
or
push
sahf
mov
cmpsb
pushf
pop
sub
mov
sbb
mov
inc
add
pushf
mov
add
xchg
fwait
push
push
add
or
xor
add
and
subl
stos
or
repnz
int
enter
push
pushf
ret
lret
or
ja
push
pop
mov
xchg
jae
sub
wrmsr
xchg
xor
addb
jp
movsb
push
push
xor
jmp
inc
add
dec
push
les
inc
sub
xchg
dec
stc
stos
adc
ret
scas
xor
std
xor
add
out
xchg
pop
int3
lahf
movsl
mov
push
cwtl
jbe
repnz
adc
rolb
test
mov
shlb
pop
stos
mov
and
adc
push
mov
xor
aas
and
imul
ja
inc
cmp
push
shll
sahf
push
outsl
fcoms
fidivrs
dec
outsl
xchg
lret
iret
test
xlat
aaa
pop
jo
xlat
in
and
jne
jb
add
fstpl
push
jmp
insl
inc
add
and
jp
jmp
movb
jo
lea
mov
fucomi
pop
xchg
iret
mov
pop
push
jp
fldenv
inc
pop
xchg
and
jo
jb
fisttps
ret
xchg
adc
stos
ret
and
xchg
and
mov
ss
push
xchg
push
jo
xchg
xor
data16
rol
add
fnsave
lret
and
xor
xor
addr16
bswap
pop
mov
out
sbb
dec
or
mov
sub
lret
test
cmp
adc
iret
or
ja
add
add
out
adc
add
fbstp
test
sub
sub
cmp
je
cmpsb
fcmovu
dec
inc
add
add
sub
cli
mov
mov
repz
jae
movsl
jge
shrl
clc
jno
inc
add
xlat
outsl
mov
and
cmc
push
xchg
test
xchg
jmp
in
testl
cmpl
adc
dec
std
mov
sbb
aam
cmp
icebp
movb
jne
xor
mov
dec
in
jbe
fmull
jae
call
sub
push
adc
test
stos
jae
int3
inc
negl
mov
jno
pop
dec
xchg
push
or
outsl
aam
imul
cmp
mov
jp
data16
out
aas
mov
cs
aas
das
jmp
out
arpl
mov
movsb
ss
xor
insb
cmc
loop
faddl
cmpl
iret
iret
mov
inc
add
addb
push
mov
mov
loopne
mov
movsl
pop
and
loop
mov
and
mov
rolb
push
lods
lret
mov
mov
insl
dec
xchg
out
cmpsl
mov
daa
pop
push
mov
and
sar
popa
add
pop
xor
jbe
aaa
imul
ss
xor
outsl
mov
add
jnp
and
in
outsb
mov
pop
mov
lock
cmp
sub
mov
sub
lea
mov
cmpsl
lock
fwait
sbb
adc
jmp
sbb
push
xchg
sub
adc
lcall
sbb
sti
movsl
test
aaa
add
add
in
or
out
dec
adc
nop
xchg
das
mov
mov
xor
and
outsb
enter
movb
nop
lock
dec
popf
inc
movsb
in
loope
add
mov
fldcw
mov
inc
add
imul
mov
add
xchg
mov
mov
adc
add
sbb
xchg
inc
dec
std
xor
ss
repnz
lret
add
push
in
dec
addb
addb
jecxz
fnstsw
add
pop
rcl
out
cld
sti
pminsw
imul
es
mov
cmp
xchg
scas
mov
pop
imul
xchg
and
je
lcall
add
add
ds
and
push
add
stc
sub
cmpsb
aad
lcall
fstps
xlat
rolb
subl
sbb
loopne
xchg
subl
dec
popa
dec
pop
jmp
out
inc
pop
jg
mov
lret
int3
repnz
add
mov
jecxz
stos
dec
inc
sahf
arpl
in
jae
mov
outsb
or
and
divl
mov
aam
mov
mov
mul
add
xlat
cmpsl
bound
dec
mov
and
cld
mov
pop
sbb
repz
outsl
lods
adc
pop
fstps
and
mov
jae
lea
lcall
push
imulb
je
add
fildl
inc
add
mov
int
imul
inc
add
adc
fisttpll
movb
fstpl
stos
mov
inc
lret
mov
add
cmp
push
sahf
add
stos
push
dec
mov
clc
lds
fsubrl
mov
insl
sahf
xchg
mov
add
cld
cmp
add
in
test
sbb
ljmp
sbb
xor
add
loop
cmp
enter
mov
pop
pop
aas
aas
cltd
push
dec
or
jle
dec
and
add
add
adc
inc
add
pop
dec
xor
sbb
outsb
lods
mov
mov
in
xor
fldcw
in
out
jmp
cmp
add
stos
jp
mov
addb
add
lea
into
mov
pushf
cmc
jle
test
in
mov
add
push
add
mov
add
pop
call
sbb
clc
inc
add
add
sub
rcrl
jno
mov
stos
jbe
ss
add
aam
ljmp
mov
test
mov
cmpsw
fimuls
xchg
icebp
xchg
insl
push
movb
mov
lods
xchg
arpl
sub
sub
xor
xchg
es
adc
imul
xchg
cltd
outsl
paddsb
add
cmp
mov
add
jg
in
call
aaa
lea
bound
pop
hlt
sbb
insl
cs
and
shl
mov
movb
in
imul
inc
add
lahf
sub
sub
xor
push
mov
mov
add
adc
cmp
scas
push
push
or
test
outsl
xor
add
pop
add
testb
pusha
add
add
jae
sub
in
popf
aas
loope
popa
inc
push
rclb
je
push
das
mov
xchg
test
add
add
mov
into
add
in
sbb
insb
cmpsl
leave
xchg
or
add
adc
push
imul
orl
call
leave
xor
rol
add
add
xor
add
mov
pop
rcr
jbe
and
repz
xchg
lret
cmp
mov
imul
shl
pop
cmp
fisubrl
xor
inc
fsubr
jg
inc
add
addb
test
xor
xchg
push
imulb
inc
add
imul
rorb
inc
add
xchg
aad
lods
lret
adc
jb
sar
push
fsub
jg
mov
push
push
outsb
fdivr
movb
add
icebp
cltd
addb
sbb
into
loop
push
xchg
inc
jno
shl
mov
sub
push
movsb
pop
mov
sbb
imulb
mov
outsl
mov
xchg
ret
rep
test
mov
ret
add
mov
add
pushf
sbb
pop
or
add
sub
hlt
fidivl
aad
repz
mov
mov
jle
enter
add
mov
add
testl
cmc
pop
idiv
daa
xchg
pop
add
pushl
pop
cmp
dec
xchg
or
xchg
xor
xchg
pop
adcl
or
nop
loop
mov
add
fnsave
add
scas
jne
mov
xchg
addb
mov
fidivrl
into
push
pusha
add
jbe
popa
inc
jne
outsb
lock
sbb
push
sarl
inc
push
sub
jns
sub
sub
fdivl
push
sbb
ja
add
and
lcall
addb
ss
jmp
mov
lcall
mov
mov
call
sub
hlt
mov
fs
or
dec
cs
push
cmp
nop
jl
adc
addb
aad
inc
or
or
push
ss
push
lds
lret
scas
icebp
arpl
call
in
subl
mov
dec
pop
mov
call
add
imul
in
repnz
add
loopne
jle
cmc
or
dec
inc
add
add
adc
cltd
inc
add
dec
xor
negl
ja
es
sbb
jg
pushf
test
mov
add
and
dec
jns
adc
sahf
cs
push
loopne
or
pusha
add
jbe
xchg
dec
daa
insb
jp
push
mov
outsl
pop
into
addr16
cmpsl
dec
loop
dec
cmp
fwait
ret
pusha
add
out
fstpt
add
xor
repz
mov
xchg
iret
mov
pop
ja
push
and
push
push
repnz
clc
push
and
out
leave
stos
stc
jge
fs
pop
fcomi
hlt
push
mov
imul
aad
inc
add
mov
jb
movsb
mov
add
out
sbbl
les
std
jmp
xchg
roll
das
in
mov
mov
push
out
in
sbb
add
in
lods
test
lds
adc
cmpsl
pop
out
jae
pop
sub
add
shrb
out
les
xchg
addr16
mov
lds
mov
hlt
rolb
or
push
or
add
xchg
pop
pushf
aas
xchg
xchg
pop
xor
cmc
or
add
pop
das
test
mov
mov
push
movb
xchg
lock
arpl
xorl
jae
testl
scas
dec
dec
icebp
mov
stc
push
into
and
sub
outsl
and
hlt
mov
xchg
jae
add
lods
imul
adc
and
bound
mov
add
popf
sti
test
fdivrs
and
aad
sbb
outsl
out
adc
jmp
sbb
or
ja
lret
pop
movsb
shrl
test
push
sub
add
stc
xchg
aad
inc
add
mov
rolb
jae
sub
aaa
dec
aaa
addb
movsl
lock
jno
or
adc
gs
add
lods
mov
and
shl
xor
mov
push
inc
push
mov
bound
ja
push
push
mov
dec
dec
jp
adc
cmp
test
bnd
add
popa
inc
add
loop
add
ficomps
mov
push
mov
pop
or
or
ja
and
add
mov
rcrl
repz
push
mov
ds
lea
add
movb
repnz
out
inc
push
add
out
mov
mov
push
lock
sbb
in
aaa
stos
ja
push
mov
jno
sub
stos
jp
xor
add
adc
or
divb
adc
lret
sahf
dec
mov
movsb
daa
dec
cltd
scas
rcrl
in
inc
repnz
call
and
hlt
xchg
cmp
mov
xchg
dec
sti
inc
add
adc
add
mov
push
fisubl
addb
mov
pop
dec
fisubrs
push
lock
jns
jle
stc
and
inc
push
dec
pop
inc
xchg
jns
add
sub
test
sahf
xchg
cmp
dec
mov
movsb
mov
push
inc
add
lahf
inc
add
repnz
cld
push
push
std
sub
sbb
cmp
mov
inc
add
sti
mov
push
aas
icebp
mov
mov
pop
cli
sbb
sbb
clc
movsb
pusha
add
and
push
mov
xchg
rolb
shrb
sbb
push
xor
andl
bnd
xlat
je
jae
sub
jns
add
push
mov
mov
add
dec
fmul
outsl
mov
arpl
jno
dec
es
adc
mov
sbb
outsb
pop
xor
mov
cmpsl
pop
pop
dec
cli
arpl
mov
xor
insl
call
sbb
ret
cmp
movsb
pop
sub
add
out
xor
mov
sbb
cmpl
pop
or
push
negb
and
jp
fidivs
aam
sub
push
mov
nop
pop
scas
and
xchg
xchg
das
sub
add
push
icebp
out
adc
adc
add
add
jp
pop
movsl
popa
shll
les
cld
mov
pop
aas
lods
clc
pop
inc
add
mov
test
fcompl
lods
jl
lret
pop
daa
push
leave
in
mov
dec
inc
add
add
clc
movsb
xchg
popf
icebp
shll
pop
sti
std
popa
dec
scas
in
lcall
aad
add
add
mov
mov
pop
ljmp
je
or
daa
add
mov
js
rcl
push
cmc
or
add
and
daa
loop
outsb
xor
add
mov
mov
pop
push
aas
xchg
sub
pusha
add
ret
aam
sbb
xlat
enter
rolb
ljmp
stos
int3
cmpsb
sub
add
push
idivl
push
xchg
mov
int3
cmpl
and
cmp
push
scas
pop
jb
mov
sarl
fisttpll
and
sbb
inc
add
xor
mov
xor
add
pop
in
and
adc
add
icebp
mov
adc
loop
ss
push
lods
lret
cmovns
dec
sbb
insb
adc
add
enter
add
icebp
icebp
call
stos
sti
add
mov
out
ljmp
mov
mov
xchg
sti
into
cmp
add
rcrl
pop
cmp
js
enter
pop
mov
aas
inc
sbb
leave
cmp
jae
add
push
xchg
pop
mov
inc
mov
dec
jb
rcrb
add
adc
xor
sti
mov
jnp
sbb
jmp
jo
jmp
movb
and
pop
roll
sub
xor
jns
insl
add
cmp
sub
cmpsl
scas
imul
push
mov
ljmp
mov
call
ret
pop
and
cmp
movsl
rolb
add
dec
imul
dec
daa
adc
arpl
je
inc
mov
add
mov
add
out
mov
xchg
ds
sar
test
scas
jns
test
dec
rolb
xchg
mov
add
jbe
sbb
xchg
push
aas
jno
or
add
daa
fs
pop
into
movsb
pop
pop
xlat
clc
fidivl
addb
insb
insl
mov
sub
imul
repz
loop
xor
nop
insl
pop
stc
fwait
dec
pop
xchg
xor
into
add
add
repnz
popf
sub
mov
aas
mov
imulb
or
add
and
movb
lret
xor
lods
push
sbb
out
cmp
or
xorps
cmc
push
jnp
push
sub
add
inc
pusha
add
xchg
les
pop
jne
mov
sub
les
jecxz
mov
daa
mov
dec
and
push
fcmovbe
add
sti
push
popf
cmp
mov
add
psrld
or
xchg
js
stc
sub
pop
fs
add
add
movsb
xor
push
clc
xchg
leave
aas
fists
cs
jno
frstor
int3
movb
xchg
cmp
mov
out
rcrb
aaa
ss
bswap
push
arpl
add
dec
mov
mov
sub
mov
pop
push
push
out
push
mov
addb
cwtl
or
stc
mov
rcrl
pop
and
add
pop
mov
mov
scas
push
inc
add
or
jb
shrl
enter
lods
add
inc
add
jae
fisttps
cmp
lret
sbb
frstor
add
sbb
jne
add
fwait
nop
jo
push
clc
enter
jecxz
mov
negb
arpl
bound
cmp
addb
push
rcr
data16
xchg
add
add
add
push
sbbl
jns
inc
test
add
sbb
push
add
sbb
xchg
addr16
pop
push
pop
xchg
push
adc
and
scas
rcll
loopne
or
pushf
cmp
loope
mov
pop
sar
gs
xchg
add
add
add
mov
cwtl
bound
ss
arpl
pop
push
xchg
cwtl
and
pop
dec
jnp
cmp
dec
sub
jns
inc
cmp
add
inc
mov
loopne
shrl
push
inc
aam
jg
out
cmpsb
mov
pop
jns
dec
pop
leave
rorl
imul
pop
push
add
je
jmp
xchg
pop
ss
sbb
pop
adc
stos
popf
jg
fsubl
sahf
xor
sbb
out
out
stc
cmp
pop
adc
jae
stc
arpl
sahf
sbb
stos
cmp
pop
adcl
push
lcall
popf
sahf
xor
mov
push
cmp
lods
sbb
cmp
pop
ficoms
mov
sahf
out
jae
fistpll
adc
jl
mov
xchg
mov
inc
push
jns
setle
add
adc
pop
in
stos
movsl
mov
mov
shl
es
mov
dec
xor
fwait
cwtl
lahf
mov
adc
mov
pop
arpl
mov
or
stos
push
dec
stos
sbb
add
cwtl
fidivrl
mov
faddl
inc
add
les
fnstenv
mov
cmc
inc
sbb
roll
aad
push
insl
je
or
jmp
inc
add
jmp
sub
dec
mov
les
ror
shll
push
imul
and
rolb
movntps
addr16
test
add
out
fs
xchg
or
push
iret
enter
or
add
arpl
iret
push
sbb
jne
adc
dec
je
leave
push
xor
inc
jne
nop
sti
sbb
stos
pop
je
loope
sub
pop
or
lds
bound
cmp
and
or
add
ljmp
insl
cmpsb
or
add
mov
rcll
xchg
jp
lret
xor
mov
lds
add
or
sub
nop
or
daa
movsl
leave
jp
imul
push
inc
inc
ss
std
clc
stos
test
fs
nop
push
int
rcrl
ja
ss
pop
rcr
dec
mov
sahf
pop
adc
xor
dec
add
addb
and
cmp
stos
insl
push
rolb
mov
mov
lcall
ds
add
inc
add
cld
sar
mov
dec
imul
insb
xchg
pop
xor
shl
dec
xor
jno
inc
jge
mov
out
sbb
cmc
dec
inc
add
aaa
or
cmp
stos
nop
adc
notl
cmp
rclb
mov
push
add
mov
xor
shrb
sub
cwtl
ljmp
sbb
arpl
jno
xlat
and
add
or
in
js
int3
push
imul
mov
enter
add
jb
xorl
dec
popaw
sub
lret
push
add
arpl
in
push
sti
ljmp
inc
add
add
mov
inc
scas
adc
cs
pop
std
js
mov
xor
sub
jp
dec
cmp
sbb
mov
inc
add
fs
lods
in
mov
push
fistpl
cmp
mov
mov
jle
ror
subl
add
shl
xchg
mov
mov
xchg
cmp
add
pop
lods
aaa
xlat
lock
push
cwtl
mov
in
sbb
mov
add
inc
add
jecxz
lcall
les
pop
arpl
fs
movb
inc
hlt
dec
adc
pop
xlat
icebp
outsl
push
dec
fxch
inc
add
aam
movsl
cmp
pusha
add
adc
mov
mov
and
sbb
xor
fs
add
add
mov
jae
decb
iret
int
add
push
jecxz
inc
call
xchg
sbb
scas
push
add
mov
dec
js
pop
lcall
xchg
stos
sbb
push
add
xchg
in
fs
mov
jmp
add
or
aam
add
negb
into
jbe
fstpt
imul
cmp
jmp
rorl
push
lret
js,pn
cs
lret
mov
cmpsl
jmp
adc
and
imul
or
add
test
fists
dec
aad
sahf
mov
xor
repz
iret
adc
repnz
fildll
add
xor
movsw
ljmp
rolb
mov
pop
jno
add
loop
push
repz
and
out
lock
dec
cmp
les
jo
inc
cmp
pmaxsw
mov
ret
test
lds
push
xchg
fwait
add
dec
imul
adc
mov
negb
mov
push
or
push
add
mov
or
inc
add
add
push
sub
add
test
add
popf
pop
pop
pop
xchg
mov
and
addl
ds
fninit
push
mov
add
push
into
push
mov
xchg
jg
addr16
scas
jmp
nop
call
mov
cmc
sbb
add
enter
outsl
xor
or
bound
mov
inc
leave
xor
adc
rcrl
push
movl
ja
sub
addb
in
xor
and
sbb
sub
pusha
add
cmp
add
sbb
add
pop
lods
fimull
mov
xorl
add
clc
aas
xor
sub
mov
xchg
xchg
mov
pop
xchg
addb
pop
mov
dec
mov
mov
push
aam
or
push
add
xchg
sbb
stc
mov
lods
sbb
and
das
fisubs
sbb
dec
cs
movsl
int3
test
inc
add
xchg
addl
or
add
test
xor
clc
mov
filds
adc
stc
jle
pop
sti
jp
or
fcomip
sub
inc
add
pop
dec
mov
pop
addb
mov
add
xchg
xchg
outsb
lret
and
iret
and
stc
push
push
or
sub
cmp
push
movsb
mov
mov
xor
je
addb
loopne
scas
inc
add
ss
add
xchg
lret
adc
out
jns
mov
lahf
mov
in
sti
dec
cs
pop
adc
jmp
inc
add
rolb
fdivl
add
pop
jle
xchg
pushf
mov
add
inc
add
add
jae
mov
loope
loopne
and
or
pop
fistpll
sti
dec
push
sbb
fnsave
aas
cmpsl
shll
add
and
int
add
add
cs
loop
add
in
out
push
dec
mov
push
loopne
adc
xor
nop
cmp
repnz
xor
fwait
or
cltd
out
iret
leave
sbb
cmp
mov
add
addb
xor
addr16
dec
adc
push
in
jbe
add
aaa
mov
cwtl
test
fnstcw
bound
cmp
push
in
pop
fistps
mov
movsl
pop
mov
mov
xor
pop
in
add
xchg
ret
jge
ret
std
movb
mov
and
call
lcall
mov
inc
add
stos
sarl
aaa
pushl
push
jae
add
lock
add
dec
cli
ss
sub
lcall
cmp
add
leave
push
add
jae
push
cld
rcrb
mov
decb
push
cli
fstps
daa
out
push
add
clc
pop
movb
xchg
cmp
stc
xchg
pusha
add
add
cs
add
add
add
inc
add
mov
dec
jae
add
jo
push
sbb
push
out
pop
decl
cmc
cmp
cmp
fldcw
call
xchg
fcoms
add
addb
add
into
addb
lds
sarl
xor
add
sbb
test
outsl
test
add
add
add
xchg
test
stc
shlb
add
inc
add
push
pop
lret
call
inc
lds
cmpsb
pop
inc
out
data16
xor
xlat
cmp
mov
fistpl
pop
pushf
jmp
int3
pop
jo
ds
loope
stc
lret
pop
fdivs
sub
insb
out
insb
adc
or
movsb
push
ja
add
xchg
cli
xchg
sub
insb
lock
insb
push
add
fcoms
fcmovbe
jno
lods
test
loope
push
pop
mov
lock
in
ret
lcall
mov
xchg
bound
arpl
daa
int3
lds
inc
sbb
xchg
or
loopne
lods
sahf
das
loopne
out
jnp
aaa
mov
leave
sub
loope
mov
sub
lods
out
aad
sbb
insl
cmc
xchg
inc
add
jne
fsts
sti
push
cld
stos
rolb
and
icebp
lock
call
pushf
xchg
inc
add
mov
sbb
push
adc
addb
sub
xor
add
imul
mov
jl
push
negl
lea
aas
inc
and
sbb
add
xor
test
adc
fisubs
xor
or
inc
add
lods
mov
mov
xchg
les
dec
lea
adc
xchg
and
xchg
mov
adc
fcoml
and
dec
addb
jecxz
mov
mov
mov
rolb
inc
add
mov
adc
xchg
sti
xchg
adc
fwait
add
pop
outsl
dec
xchg
add
add
sbbl
inc
add
or
cmp
jg
aad
cmp
mov
push
cs
add
lods
outsl
push
or
add
rcll
aam
cmpsl
inc
xor
push
add
or
mov
push
dec
push
add
ficoms
mov
lret
jae
xchg
mov
sub
iret
popa
bound
data16
and
scas
adc
mov
ja
frstor
or
add
nop
push
sarl
cmp
mov
stc
into
popf
jae
cmp
mov
mov
or
addb
jg
and
cli
jmp
inc
mov
add
data16
inc
ficomps
push
add
jne
int
ljmp
sarl
loopne
inc
mov
fwait
aas
lock
cli
xchg
roll
sub
hlt
ret
or
lds
data16
loop
popf
fwait
sub
sbb
lock
xchg
fwait
jb
jl
pop
hlt
outsb
outsl
inc
jmp
add
adc
push
leave
fdivs
jle
stos
in
sbb
dec
jle
popa
daa
dec
mov
sub
push
sbb
stos
mov
nop
adc
jns
dec
fldcw
add
sub
out
sbb
mov
or
inc
add
dec
enter
add
dec
clc
xchg
xor
push
pop
dec
sub
cmp
lock
add
imul
dec
sbb
lcall
sbb
add
inc
add
inc
jecxz
add
cmpsb
bound
mov
mov
ret
xlat
add
pop
mov
mov
mov
or
fwait
pminsw
sub
insl
sbb
push
add
adc
add
loope
inc
add
stos
adc
pop
xlat
je
in
cmp
into
inc
add
push
fbld
push
cmp
mov
sub
pop
push
les
test
mov
pop
popf
mov
repz
mov
jl
or
add
add
scas
pop
loopne
inc
addb
jl
mov
sbb
outsb
jno
xchg
inc
lret
data16
div
jns
stos
test
cmp
add
push
scas
out
addb
cmp
mov
pop
pop
pushf
arpl
inc
sbb
inc
push
sub
push
addr16
lods
sahf
rcrb
jge
cmp
sti
into
fcomp
testb
cmp
or
je
or
sub
dec
sti
ja
lods
movsl
pop
aas
loopne
jo
sbb
jge
or
cltd
push
add
inc
lret
mov
fs
pushf
add
out
pop
and
aas
imul
push
or
bound
inc
add
mov
mov
dec
cmpsl
cmpsl
addr16
arpl
nop
push
es
adc
push
jbe,pn
adcl
sbb
mov
add
push
jbe
mov
repz
xchg
inc
add
xchg
adc
add
cwtl
data16
cmp
mov
rorl
pop
xor
jb
out
bound
cli
jl
daa
orl
jnp
jb
lock
inc
dec
mov
and
adc
test
and
and
inc
add
sahf
jnp
shl
movsl
addr16
lods
dec
fbld
aas
addb
addb
inc
cmp
push
call
outsb
xor
adc
add
add
and
ds
addb
jnp
jg
add
push
xchg
mov
xchg
xor
lcall
xlat
xor
mov
add
test
scas
rcl
imul
dec
cmp
cmpsl
pop
fiadds
mov
jne
mov
push
cmp
inc
ret
int3
mov
add
or
test
je
repz
inc
add
adc
mov
sub
or
add
cmp
inc
add
push
lds
sub
sub
sahf
fwait
jb
mov
ffree
add
sub
pop
cmp
pop
push
pop
mov
addr16
loope
dec
xchg
rolb
fcomi
mov
inc
hlt
xor
add
jnp
push
sbb
sub
sub
negl
mov
les
test
nop
push
addr16
mov
sbb
pop
sbb
cmp
push
aam
dec
addl
mov
pop
js
lahf
and
add
lret
sbb
daa
in
lock
or
lea
add
add
sub
clc
or
mov
mov
enter
sub
xchg
test
or
addb
add
add
aaa
movsl
mov
push
sub
insb
mov
ja
xlat
bound
ljmp
pop
data16
push
cmp
xor
ror
ret
lcall
je
mov
outsl
sbb
add
cmp
and
clc
negb
clc
das
pop
ret
dec
jmp
in
fbld
imul
add
mov
add
movsb
inc
jne
aaa
push
popf
xchg
inc
push
popf
lock
jmp
push
test
bound
aad
pop
sub
out
nop
insl
pop
fsubrl
pop
cmp
add
sti
pushf
insb
rcll
nop
fwait
jl
loopne
aaa
xor
and
adc
mov
xchg
fs
mov
add
jbe
clc
add
or
imul
sbb
mov
addb
ret
add
add
adc
mov
pop
ss
sub
mov
add
jno
std
and
inc
add
rorb
xchg
and
int3
mov
shrb
jg
push
sti
jae
ss
cs
ret
filds
icebp
gs
mov
mov
sub
adc
jae
pop
push
jmp
stos
dec
lret
jmp
addb
add
jno
in
xchg
lahf
and
out
addr16
jb
jp
add
leave
fwait
ds
nop
inc
stc
inc
outsb
cmp
add
mov
mov
sbb
movsb
sbb
ds
aam
in
shlb
sbb
stos
sbb
push
add
add
cmp
cmp
jo
adc
aam
inc
add
int3
aas
in
add
fsubl
rcll
or
fistps
cmp
es
mov
mov
movb
or
lahf
insl
js
push
add
pusha
add
add
outsl
jnp
loop
lods
imul
cmc
inc
pop
and
movsb
lods
testl
add
inc
add
push
loop
sti
movsl
shrl
leave
and
fbld
pusha
add
xor
das
lcall
jae
lret
or
imul
xor
es
aad
sahf
jbe
mov
sub
out
lret
fdivp
add
out
pop
adc
dec
mov
add
add
xchg
lds
xchg
fucom
push
add
inc
add
jmp
lret
test
test
lock
push
fdivs
sub
add
inc
add
sahf
icebp
mov
xchg
cs
mov
scas
inc
add
xor
cwtl
and
adc
aaa
cmpsl
sbb
push
mov
inc
lods
mov
iret
fnstcw
add
jae
xor
sti
ljmp
pop
lods
addb
mov
push
sbb
fsubrl
xchg
js
add
decb
mov
ret
out
into
lret
sub
mov
jl
addb
daa
xrelease
sub
inc
dec
xchg
lret
sbb
sti
pop
lret
pop
mov
mov
xchg
in
in
aas
and
add
fcoms
or
mov
pop
jne
inc
rclb
xor
rorb
lret
enter
mov
dec
je
push
cmc
sub
jo
arpl
stos
jge
add
mov
incb
sub
test
nop
aam
lahf
stc
leave
inc
add
bound
push
movb
mov
inc
fistl
mov
add
add
pop
jns
dec
inc
add
sbb
dec
cmp
sbb
movsl
bound
push
xchg
pushf
mov
sbb
or
add
inc
add
popf
pop
dec
pushf
and
add
lcall
cmc
and
jl
mov
inc
push
cmp
add
mov
cmpsl
push
cmc
sub
int3
bound
sub
mov
outsl
pop
lret
outsl
jp
add
pop
lods
pushf
xchg
lods
and
aaa
sbb
test
fisubrl
stos
jmp
jp
add
daa
cmp
fbstp
cmp
xor
mov
lea
mov
xchg
push
ja
and
test
scas
pop
arpl
fstpt
xor
mov
push
dec
mov
jb,pt
test
push
ret
cmp
lret
shll
sbb
add
stos
or
inc
add
lods
mov
add
shrl
push
xchg
xor
inc
add
cld
xchg
adc
pop
push
inc
mov
in
mov
stos
popa
cmp
test
lahf
fcomp
or
cs
inc
mov
mov
addb
sahf
into
pop
push
lret
adc
jl
in
add
adc
add
mov
xlat
test
add
push
pop
movsl
and
shr
xchg
iret
mov
pop
lods
dec
jg
xchg
adc
stos
push
add
aaa
xor
addb
jl
mov
pop
mov
lahf
setb
cmp
addb
jg
xor
push
push
sub
cmpsb
in
sub
cli
xor
movsb
cmc
pushf
mov
cmp
cmpsb
leave
cld
ja
or
mov
out
rclb
bound
rcll
xchg
call
jg
sub
jo
mov
mov
inc
loope
hlt
imul
push
push
jle
inc
add
and
neg
js
lret
adcl
jl
add
push
pusha
add
jo
dec
aas
sar
sbb
xchg
daa
popf
andl
aam
out
ss
xchg
fcomps
jnp
pop
adc
add
add
addr16
mov
mov
jns
insl
ret
addb
sbb
aad
push
cmp
adc
xor
dec
and
push
sbb
aam
pop
sub
add
add
je
dec
add
xchg
outsb
inc
or
dec
pop
sahf
fdivrs
pop
cs
adc
sbb
or
push
xchg
and
addb
out
pop
xor
push
fcompl
aaa
cmpsl
mov
add
add
lcall
or
push
cmp
sub
hlt
pop
mov
add
add
cmpsb
jle
dec
stc
push
cmc
cltd
mov
fisttpl
push
jbe
pop
mov
sub
inc
add
add
mov
cmp
push
pop
adc
arpl
add
and
mov
mov
mov
ret
leave
dec
cs
add
mov
cmp
aam
rolb
mov
xor
movnti
ljmp
xchg
fcomp
ret
add
mov
sbb
cld
sub
cmp
lods
enter
imul
movb
cwtl
push
sahf
mov
add
loop
scas
add
and
adc
outsb
inc
outsl
bound
sub
xchg
lock
add
test
xor
jbe
xchg
iret
call
add
shl
mov
mov
ret
mov
dec
icebp
jle
or
scas
mov
cmpsb
aam
mov
outsl
out
mov
add
push
or
mov
repz
jp
lods
adc
jl
add
mov
adc
push
insl
pushf
jge
jno
jo
cwtl
or
scas
pminsw
and
aam
mov
xor
jp
push
dec
clc
enter
add
and
pop
in
push
or
in
movsb
add
mov
push
inc
mov
jo
loopne
sbb
xchg
push
mov
call
mov
mov
cmp
mov
insb
mov
add
loope
cs
inc
add
xor
xchg
insl
pop
add
adc
aaa
test
arpl
push
rolb
mov
cld
das
mov
mov
stos
in
pusha
add
stc
test
add
cli
fmuls
or
pop
dec
decb
cmpsl
inc
add
push
in
add
jecxz
sub
ficoml
dec
push
in
cs
push
mov
mov
lds
gs
xorl
cmp
add
lret
pusha
add
cli
dec
cmovg
add
lods
add
push
addl
divb
mov
inc
add
rolb
fwait
xor
push
movsl
pusha
add
adc
sbb
fwait
add
es
imul
test
inc
add
add
add
jp
shll
pushf
and
pop
or
cwtl
test
push
jmp
movsb
mov
xchg
push
xchg
add
mov
mov
dec
mov
movb
nop
and
test
xchg
mov
add
push
out
bound
mov
negl
adc
lahf
adc
or
jecxz
ret
cmp
sub
test
out
push
daa
mov
aaa
cmp
bound
jb
mov
mov
add
aas
add
test
aad
jl
addb
add
insb
add
lahf
and
add
push
cmpsl
addb
push
mov
imul
mov
cmp
leave
pop
in
adc
add
add
lret
rclb
into
shlb
pop
and
mov
push
je
addr16
sti
and
loope
cwtl
and
ds
mov
add
div
es
aas
sub
imul
pop
adc
fisubl
sub
cmp
jbe
push
adc
hlt
cmp
popf
xor
adc
movb
mov
ja
add
add
test
addb
add
and
incl
das
loopne
inc
add
in
add
xchg
push
addb
inc
pop
repnz
mov
test
xchg
nop
ja
mov
xor
nop
xlat
lret
xor
addr16
or
sub
jmp
into
jno
arpl
xor
daa
pop
leave
xchg
mov
fbstp
xor
jecxz
lea
arpl
dec
dec
mov
cwtl
mov
and
mov
stos
cmp
iret
and
jmp
inc
add
push
leave
pop
stos
mov
roll
lea
movsl
out
inc
jne
inc
add
mov
inc
add
xor
mov
in
loop
sbb
bound
iret
sbb
incb
add
jge
fnstsw
hlt
popf
cmpsb
and
mov
and
in
psubsw
cltd
mov
mov
mov
stos
dec
rolb
orl
add
sti
cmp
jecxz
sbb
aad
mov
xchg
push
imul
mov
lock
sbb
pop
jns
out
loope
inc
add
add
nop
sub
popa
sti
sti
outsb
aaa
das
dec
sbb
add
pusha
add
cmp
mov
cmp
outsb
arpl
repz
pop
scas
push
sub
arpl
add
sub
and
add
in
pmaxub
sbb
insl
mov
divb
add
repz
fwait
sbb
leave
call
loop
insl
lcall
jb
and
push
int
cmp
sub
mov
dec
test
jae
and
lcall
jno
mov
ds
dec
adc
xchg
cmp
shrb
inc
fnstenv
xor
add
nop
xor
add
outsl
in
pop
sub
fcomip
test
sub
sub
adc
push
inc
add
jb
cmp
add
jle
mov
ljmp
aas
into
insl
dec
cmp
popf
jbe
cmp
lock
add
jg
pop
in
jae
pop
jnp
mov
jae
sahf
popa
in
push
jbe
stos
xor
test
push
mov
mov
jno
inc
add
dec
movsl
cmp
xchg
stc
jbe
int
mov
add
inc
add
jae
bound
outsl
xlat
in
add
mov
ljmp
lcall
aaa
cmc
cld
or
out
xlat
int3
fldenv
stos
scas
or
push
xlat
test
mov
adc
and
inc
out
cmp
add
int
lea
test
addr16
addr16
pop
xchg
lods
addb
negl
loop
jge
jle
add
xor
lock
or
and
push
cmp
les
repnz
or
push
out
orl
out
test
out
inc
mov
daa
mov
outsl
idivl
dec
repnz
ljmp
or
fwait
lock
and
mov
arpl
mov
or
add
xchg
or
rcll
jae
mov
add
and
add
add
pop
or
movsb
add
vmread
gs
add
push
out
jg
inc
add
mov
in
mov
add
dec
cs
faddl
cmp
inc
popf
insb
fldt
xchg
mov
jmp
aaa
and
add
mov
insl
movb
add
mov
xor
sbb
insl
pop
mov
pop
jp
jmp
lods
cmp
cmpsb
pop
out
mov
dec
xor
in
inc
mov
in
pop
xor
pop
jns
bound
loope
push
fwait
add
movb
jmp
push
pop
insb
xor
jecxz
mov
mov
roll
add
incb
addb
sbb
push
fs
add
jbe
jge
fsubs
pushf
cmp
cmova
xlat
add
mov
add
cmp
mov
sub
je
cmp
add
in
mov
fwait
pop
xchg
xchg
movsb
lea
push
add
or
mov
add
lcall
jg
add
sbb
push
gs
xor
push
add
call
loop,pn
mov
outsb
inc
mov
idivb
pop
insl
cmc
push
mov
call
add
sub
fwait
lret
mov
lods
arpl
mov
bound
and
mov
fadds
sub
add
ret
sub
push
inc
inc
fs
xchg
jp
or
scas
xor
push
les
inc
add
and
jno
popf
add
pop
lahf
mov
int3
pop
movsb
mov
test
jno
and
xor
jge
sub
pop
push
mov
push
cmc
nop
fstpl
int3
outsl
pop
insl
mov
int3
divl
lods
cmpsl
xor
dec
call
aam
loop
test
mov
pop
adc
pop
addr16
add
xor
sub
add
mov
mov
pop
dec
lret
pop
out
push
pop
xchg
nop
add
mov
cmp
cmpsl
test
hlt
mov
mov
sbb
xchg
and
pop
jbe
jne
out
mov
or
insb
cmpsb
repnz
sbb
cmpsl
hlt
imul
or
jl
add
mov
mov
add
add
idiv
loope
adc
mov
dec
repnz
cmp
mov
ret
push
aas
fbld
push
pop
push
notb
or
dec
or
shrl
out
aas
hlt
hlt
jae
cli
and
scas
ljmp
js
mov
jns
or
in
inc
add
add
add
and
pop
jle
adc
xchg
jmp
cmpsl
mov
stos
sub
xchg
mov
jbe
xlat
dec
or
mov
dec
cmp
adc
cmpsb
pop
ret
pop
sub
adc
mov
pop
xchg
daa
and
and
dec
fistl
out
lock
into
push
sbb
cmp
adc
dec
sub
out
rep
push
add
cmpsb
mov
pusha
add
out
addr16
add
add
call
or
sbb
add
mov
lea
add
mov
xor
inc
add
mov
add
mov
add
in
test
cwtl
andl
or
ret
lret
popa
push
pop
jmp
iret
fistps
icebp
inc
and
or
or
sub
jp
out
push
mov
dec
xor
push
jno
cltd
enter
inc
add
sahf
push
popf
push
scas
loope
sti
lahf
jge
add
data16
nop
movl
inc
add
jne
aam
jbe
xorl
xchg
fisttpll
rolb
inc
repz
rorb
mov
add
dec
fsubl
sub
add
push
addr16
sti
mov
jb
or
add
cmp
les
sub
add
repnz
mov
gs
adc
xchg
ja
add
cmp
out
fs
insl
scas
fmull
divb
pop
jo
out
cltd
adc
dec
xchg
testl
jmp
test
mov
cmp
inc
aaa
cs
xchg
fucomi
sbb
out
cmpsl
dec
inc
add
sbb
lods
mov
sub
add
jg
push
jg
add
mov
adc
outsb
dec
dec
jno
scas
insl
in
add
insl
rolb
insl
cli
mov
mov
shrl
aad
add
sub
add
insb
xchg
aad
jg
xor
add
leave
cmc
xchg
cs
xchg
dec
pop
push
ss
push
and
xor
jo
xlat
rolb
jns
xlat
jo
inc
xchg
mov
movb
stos
aas
int3
imul
mov
pop
outsb
mov
frstor
jmp
add
daa
loop
into
inc
add
imul
xor
mov
popa
pop
mov
add
jo
jb
sahf
mov
daa
dec
sbb
shr
movb
add
dec
pop
pushf
adc
stos
dec
fs
or
pop
sub
cmpsl
push
jno
push
fidivl
mov
jno
pop
test
cmpsl
divl
pusha
add
mov
inc
add
mov
pop
mov
aam
inc
add
sbb
or
movsb
dec
movsl
test
pop
addb
jnp
les
inc
add
xchg
repz
loope
mov
in
jne
xor
pop
mov
popa
ret
outsl
sbb
sbb
pop
mov
add
add
dec
movb
inc
mov
push
push
in
and
es
pop
push
dec
cwtl
xor
and
xor
lds
aaa
add
inc
add
cmp
das
mov
xor
dec
les
push
mov
add
sub
scas
test
fsubl
push
jg
jmp
dec
sbb
cld
jg
cltd
or
mov
sub
int
cmp
push
arpl
push
xlat
inc
sti
cmp
add
fistps
int
shl
mov
rcll
and
inc
add
xor
add
mov
xchg
dec
xor
std
daa
jl
or
add
push
add
cmpsl
outsb
add
xor
out
adc
cmp
icebp
mov
sbb
or
push
dec
push
sbb
jno
jbe
xor
or
lock
lahf
jge
pusha
add
adc
xor
stos
daa
cmp
xchg
jno
movsl
dec
xlat
jne
or
add
inc
add
lcall
push
xor
divl
enter
adc
add
scas
jne
cwtl
je
pop
inc
add
sub
sbb
sbb
add
xchg
lock
sub
insl
andl
dec
add
adc
shlb
add
add
fucomip
ljmp
add
pop
int3
sbb
dec
mov
mov
dec
aas
adc
add
imul
dec
add
aad
inc
fcomps
addb
cltd
cld
inc
add
add
dec
loopne
shlb
adc
and
in
imul
or
jne
mov
jp,pn
mov
call
jne
xchg
rolb
or
leave
mov
mov
jno
scas
imul
push
or
push
sarl
push
mov
push
mov
add
jle
push
pusha
add
cli
pop
mov
out
jns
sbb
mov
lods
xor
add
sbb
shlb
and
mov
bnd
into
cmp
mov
dec
popf
test
test
test
inc
add
xor
bound
xchg
popa
mov
bound
cmp
sbb
lcall
xor
jo
push
addl
mov
mov
add
sbb
hlt
mov
push
movb
push
add
inc
add
sub
or
rcrb
aas
nop
xor
js
arpl
mov
bound
cmp
cmpxchg
mov
push
push
ja
pusha
add
inc
add
inc
shlb
test
incb
shll
test
fwait
out
mov
dec
insl
gs
mov
out
shlb
bound
mov
testl
sbb
add
imul
ds
jmp
xchg
dec
dec
mov
jmp
shrb
fcmovnbe
mov
push
push
aaa
data16
loop
ffree
imul
repnz
mov
sti
dec
mov
lds
clc
inc
push
jno
std
cwtl
std
lea
cmp
add
cld
out
fadd
add
push
es
or
sbb
xchg
fnstsw
popf
cli
mov
fstp
and
pop
sbb
jbe
stos
jae
adc
and
movsl
inc
add
fdivp
loopne
adc
std
int3
fwait
mov
into
or
push
repz
imul
lds
in
loop
ja
rorb
outsl
xchg
push
shrl
test
inc
sahf
fstps
or
add
sub
outsl
inc
add
addb
and
add
xchg
je
pop
jl
adc
mov
cmovbe
shll
leave
fistl
loop
push
fcom
stc
shll
pushf
mov
and
imul
lret
add
adc
cld
xchg
pop
add
xor
jmp
mov
mov
jne
dec
pop
sbb
fnsave
or
jle
xchg
dec
push
ss
xchg
loop
add
in
mov
sub
sub
mov
add
ds
mov
addl
outsb
fcomip
idiv
iret
push
mov
push
xchg
stos
loope
ret
mov
inc
lods
xchg
push
gs
ret
pop
mov
add
pop
arpl
xchg
mov
adc
stos
int
in
stos
cli
fisttps
mov
add
jb
mov
pop
push
cmp
pop
and
aam
fninit
mov
sbb
mov
test
xor
pop
xchg
inc
add
dec
aas
ret
push
int
add
inc
bound
and
imul
int3
inc
gs
jmp
cltd
xor
add
jge
bound
aaa
inc
xchg
arpl
and
insb
mov
mov
cmp
sbb
popf
das
imul
fwait
shrb
rorb
jo
test
fimull
inc
sti
inc
push
pop
outsb
mov
pop
and
xor
outsl
dec
stos
mov
sub
mov
loope
xor
sti
push
ss
aam
lea
popa
and
addr16
add
stos
jb
sbb
test
aaa
std
jmp
enter
add
cwtl
inc
add
mov
add
jo
inc
pop
inc
add
sub
jle
mov
xor
daa
inc
or
dec
and
in
or
popf
test
loopne
inc
jae
arpl
les
call
and
add
in
xchg
dec
pop
std
and
sbb
pop
outsl
lds
sbb
add
stc
xor
fsubr
mov
int3
and
sbb
fs
daa
popa
pushf
pushf
lahf
enter
loopne
mov
pop
pushf
fistps
js
or
add
push
or
int3
mov
or
sarl
add
cltd
add
and
hlt
mov
mov
sarl
sti
mov
jae
pop
ret
add
and
mov
adc
cmp
add
mov
add
sub
xor
xlat
int
pop
ss
out
nop
addb
add
jge
push
loopne
add
inc
std
mov
xchg
push
and
push
add
sahf
or
dec
nopl
ret
xchg
ss
add
out
mov
xorl
cmp
js
aam
xchg
xor
divl
xor
lcall
add
and
outsb
sbb
les
jge
enter
aad
add
mov
nop
push
and
jo
inc
add
leave
movsl
sub
jne
push
int3
mov
adc
mov
mov
sbb
mov
xor
out
xchg
pushf
leave
xor
adc
add
push
xchg
js
add
pop
hlt
imul
sub
and
mov
mov
icebp
dec
adc
mov
sbb
test
stos
jmp
adc
jmp
aaa
insb
aad
dec
xor
addb
mov
and
lcall
jns
test
inc
add
jp
mov
cmpsl
daa
daa
mov
cmp
inc
add
ret
jb
in
sti
mov
jecxz
out
in
cwtl
mov
fdivrl
outsl
adc
fwait
mov
stc
nop
es
add
xor
mov
xchg
ret
std
add
lret
in
add
add
stc
nop
es
dec
xor
add
push
mov
xchg
ret
add
movsb
fnsave
sar
es
lret
add
add
hlt
adc
push
adc
subb
add
inc
scas
mov
inc
stc
nop
es
popf
add
popa
add
stc
nop
es
add
add
push
push
cmp
xchg
add
stc
nop
es
negb
and
nop
es
add
lret
lock
lock
add
ljmp
cmp
nop
push
add
stc
nop
es
adc
add
inc
add
add
pusha
nop
cld
nop
jmp
lret
lcall
call
nop
cld
nop
jmp
xor
add
ljmp
jmp
inc
adc
cld
add
add
and
sbb
nop
es
movsb
pop
add
dec
add
sbb
jne
push
mov
xchg
ret
add
add
pusha
xchg
roll
add
nop
cld
nop
jmp
movsb
add
add
sub
mov
jb
add
lock
cld
testb
mov
nop
cld
nop
jmp
add
in
mov
pop
add
mov
nop
es
add
push
mov
test
roll
sub
add
inc
add
add
addb
cmp
nop
cld
nop
jmp
add
mov
add
add
xchg
add
je
nop
cld
nop
jmp
sub
mov
add
add
nop
es
adc
stc
nop
es
mov
add
dec
add
movsb
jnp
pop
and
nop
es
in
add
orb
push
push
mov
xchg
ret
addb
add
add
mov
stc
nop
es
pusha
add
rcr
add
mov
stc
nop
es
ret
dec
add
push
push
mov
xchg
ret
sub
pop
mov
add
jno
inc
add
add
stc
nop
es
add
add
incl
nop
cld
nop
jmp
add
push
addr16
stc
nop
es
orb
mov
jb
mov
add
adcb
cld
nop
jmp
add
add
add
push
add
stc
nop
es
add
add
add
nop
es
add
into
fstl
insb
inc
jb
stc
nop
es
into
add
add
movzwl
stc
nop
es
add
add
push
pop
lea
nop
cld
nop
jmp
rolb
xor
pop
mov
nop
cld
nop
jmp
add
mov
or
push
loopne
nop
es
add
lret
push
das
push
stc
nop
es
add
push
lret
mov
stc
nop
es
add
add
add
add
stc
nop
es
std
dec
or
int
mov
stc
nop
es
xor
add
jmp
xchg
stc
push
mov
add
add
pop
fadds
out
fbld
stc
nop
es
add
push
push
inc
add
mov
jmp
stc
nop
es
loopne
lret
dec
popl
adc
pop
stc
nop
es
lcall
movsb
in
jne
stc
nop
es
push
add
sbb
jb
into
add
pop
add
repz
nop
es
cld
mov
adc
add
nop
cld
nop
jmp
push
in
add
push
add
stc
nop
es
add
push
add
add
jo
movb
pop
stc
nop
es
add
add
ljmp
movb
mov
xchg
ret
add
inc
jmp
stc
nop
es
dec
in
add
add
pushf
add
stc
nop
es
inc
add
mov
add
stc
nop
es
add
add
xor
nop
es
add
add
bound
mov
das
and
stc
nop
es
add
add
jb
dec
sub
stc
nop
es
loopne
adc
cmp
add
nop
cld
nop
jmp
lret
add
add
inc
cmp
es
push
in
pusha
in
out
push
push
mov
xchg
ret
add
add
jne
stc
nop
es
add
in
add
movsb
out
pop
push
mov
xchg
ret
sub
xor
adc
test
repnz
pop
push
mov
xchg
ret
add
add
idivb
stc
nop
es
sub
lock
nop
jmp
add
add
add
scas
dec
inc
add
mov
stc
nop
es
ljmp
and
stc
nop
es
add
add
nop
cld
nop
jmp
mov
push
sub
cmp
cmp
inc
add
lret
ljmp
stc
nop
es
dec
inc
decb
cmpb
sub
inc
lock
add
sub
add
sbb
rclb
add
nop
cld
nop
jmp
add
add
add
stc
nop
es
add
add
pop
shr
mulb
in
mov
stc
nop
es
lret
in
jo
adc
dec
and
nop
cld
nop
jmp
push
push
add
add
add
push
stc
nop
es
add
add
xor
nop
es
mov
popf
adc
test
and
push
mov
xchg
ret
inc
push
add
inc
hlt
andl
inc
add
add
add
xor
stc
nop
es
pop
rolb
add
add
movsb
movsb
jbe
in
jmp
stc
nop
es
add
add
push
outsl
cmp
push
mov
xchg
ret
add
mov
pop
cmp
cld
nop
jmp
dec
shlb
jno
add
push
stc
nop
es
dec
add
add
push
add
jb
ret
stc
nop
es
sub
add
add
test
movb
push
stc
nop
es
add
dec
in
push
cmp
es
xor
popf
ljmp
cmpl
nop
cld
nop
jmp
add
push
sub
movsb
xchg
inc
add
nop
es
add
add
add
out
mov
nop
cld
nop
jmp
popa
cld
add
add
popa
std
call
stc
nop
es
add
add
push
mov
xchg
ret
fstpl
add
add
xchg
ret
int
add
jle
add
add
orb
add
add
xchg
nop
xadd
add
adc
add
add
ret
add
pop
push
mov
xchg
ret
adc
add
jne
nop
cld
nop
jmp
testb
pop
add
nop
cld
nop
jmp
mov
in
mov
stc
nop
es
inc
mov
popa
std
dec
xor
push
stc
nop
es
add
movb
add
push
push
mov
xchg
ret
add
mov
nop
cld
nop
jmp
add
dec
ljmp
mov
xchg
ret
add
mov
stc
nop
es
dec
adc
stc
add
stc
nop
es
add
add
shl
movsb
mov
add
stc
nop
es
rclb
lret
testb
cs
push
mov
xchg
ret
add
add
add
decl
stc
nop
es
push
mov
scas
inc
adc
xor
addl
ret
add
add
inc
sub
or
inc
add
add
lcall
inc
add
dec
adc
add
inc
int3
add
stc
nop
es
xor
add
adcb
lea
stc
nop
es
add
scas
pop
lcall
pop
pusha
stc
nop
es
adc
add
stc
nop
es
testb
mov
stc
nop
es
add
in
add
out
inc
add
add
add
sti
jmp
stc
nop
es
push
add
mov
add
nop
cld
nop
jmp
push
dec
incb
cs
push
mov
xchg
ret
push
add
fldl
add
push
stc
nop
es
sub
add
dec
adc
push
and
add
nop
es
add
lock
xor
loopne
add
sbbb
add
push
mov
xchg
ret
push
popf
add
add
jb
int
incb
add
add
pop
push
mov
xchg
ret
add
ljmp
test
add
stc
nop
es
jmp
jb
sub
pause
cld
nop
jmp
add
jmp
xor
push
xor
mov
push
mov
xchg
ret
adc
xor
cmp
jb
nop
es
add
add
or
test
add
stc
nop
es
xor
inc
inc
add
add
stc
nop
es
popl
pop
into
add
mov
jb
add
xor
addb
add
shr
stc
nop
es
popa
loopne
dec
into
ret
mov
nop
cld
nop
jmp
add
dec
adc
add
stc
nop
es
loopne
add
xor
jb
push
movsb
lret
dec
scas
add
and
push
mov
xchg
ret
add
int
mov
adc
or
pop
pusha
dec
add
cs
nop
cld
nop
jmp
dec
add
add
add
sar
mov
stc
nop
es
add
fldl
add
push
jle
icebp
nop
cld
nop
jmp
add
add
incb
add
lea
nop
cld
nop
jmp
adc
add
or
sar
es
loopne
addb
add
imul
cmp
ret
popl
add
adc
fptan
inc
add
lock
mov
xor
nop
cld
nop
jmp
dec
add
scas
pop
shr
stc
nop
es
sub
push
jecxz
mov
mov
push
mov
xchg
ret
mov
aam
lea
stc
nop
es
movsb
mov
mov
nop
cld
nop
jmp
into
add
adc
fisttpll
pushf
in
add
add
add
je
decl
adc
inc
add
push
dec
rolb
cmp
nop
adc
add
nop
es
add
add
mov
stos
xor
push
mov
xchg
ret
push
addb
add
sbb
es
lcall
jp
rclb
add
add
add
add
add
mov
stc
nop
es
add
add
push
and
es
movsb
mov
fldl
add
pop
stc
nop
es
add
add
add
out
sbb
adcb
cld
es
mov
not
nop
cld
nop
jmp
sub
add
lret
pop
add
or
add
stc
nop
es
pusha
mov
pop
push
mov
push
mov
xchg
ret
lret
or
sub
add
stc
nop
es
pusha
add
mov
dec
imul
stc
nop
es
ljmp
dec
nop
cld
nop
jmp
pop
add
add
mov
stc
nop
es
add
xor
dec
add
push
mov
xchg
ret
add
mov
add
push
stc
nop
es
xor
neg
push
rolb
adc
dec
push
stc
nop
es
mov
mov
push
mov
xchg
ret
popa
lret
fldl
popa
add
int
push
mov
xchg
ret
ret
lock
mov
mov
cmp
ret
add
movsb
add
adc
mov
cmp
ret
add
push
add
es
xor
add
add
movsb
adc
push
stc
nop
es
add
lret
add
add
cmp
mov
sub
pop
call
and
inc
and
jne
push
je
add
js
mov
out
add
cmpsl
lds
arpl
add
mov
push
stc
nop
es
in
lret
sub
ljmp
add
nop
es
xor
mov
inc
stc
nop
es
jmp
mov
add
nop
es
jmp
xor
nop
cld
nop
jmp
pusha
push
add
dec
je
stc
nop
es
cld
adc
push
stc
nop
es
add
add
movswl
stc
nop
es
lcall
dec
stc
nop
es
adc
adc
inc
push
movsb
push
mov
xchg
ret
pop
adc
js
stc
nop
es
add
add
add
xor
mov
std
mov
stc
nop
es
add
popf
add
punpckhdq
nop
es
lock
jns
rclb
clc
inc
add
add
lret
adc
cmp
jge
nop
es
add
add
nop
es
cld
fldl
sub
jnp
enter
nop
jmp
add
adc
dec
mov
nop
cld
nop
jmp
movsb
movb
add
movsb
jnp
add
stc
nop
es
add
add
add
es
cld
pop
add
push
add
mov
nop
cld
nop
jmp
orb
ljmp
inc
sbb
out
inc
add
pop
movb
lret
mov
stc
nop
es
adc
push
push
and
dec
push
stc
nop
es
movsb
popa
add
add
add
push
jecxz
jl
inc
or
nop
es
movsb
add
add
jae
and
add
stc
nop
es
add
dec
ljmp
push
mov
xchg
ret
lret
add
add
fldl
jne
cmp
nop
cld
nop
jmp
pop
add
dec
mov
nop
es
add
push
add
lea
stc
nop
es
add
add
lret
add
test
std
stc
nop
es
addb
lret
pushl
push
mov
xchg
ret
pop
add
pop
lret
ja
and
nop
cld
nop
jmp
add
push
add
pop
sub
nop
es
add
pop
jo
dec
cmpl
nop
cld
nop
jmp
add
add
add
pop
push
mov
xchg
ret
push
pop
fucomp
inc
dec
add
cld
nop
jmp
add
add
add
and
and
ret
add
nop
es
movsb
add
add
xchg
dec
inc
stc
nop
es
sub
ljmp
dec
push
push
mov
xchg
ret
int
add
ljmp
add
add
dec
add
mov
es
add
in
add
xor
push
mov
xchg
ret
add
lret
adc
push
stc
nop
es
add
dec
mov
nop
es
sub
push
popf
call
stc
nop
es
add
push
mov
xchg
ret
add
add
fimuls
scas
enter
jb
orb
pop
add
push
fwait
mov
push
mov
xchg
ret
movsb
push
test
sub
stc
nop
es
popf
add
dec
xor
xor
add
stc
nop
es
int
mov
es
add
add
add
jg
inc
and
nop
cld
nop
jmp
popa
add
add
sbb
daa
add
xchg
ret
add
pop
lret
add
push
adc
stc
nop
es
add
inc
mov
cld
nop
jmp
push
add
push
lcall
add
inc
jp
nop
cld
nop
jmp
xor
idiv
nop
es
pop
incb
push
dec
add
add
nop
es
inc
add
sbb
stos
nop
cld
nop
jmp
add
add
xlat
enter
nop
es
add
push
in
ljmp
nop
jmp
dec
add
add
fldl
testb
nop
jmp
adc
add
es
dec
lret
add
adc
add
xor
push
mov
xchg
ret
add
xor
dec
in
add
shl
nop
cld
nop
jmp
in
std
lret
push
push
add
mul
mov
cmp
movsb
stc
nop
es
add
pusha
into
fldl
add
adcb
call
popa
push
inc
call
stc
nop
es
dec
add
cld
js
enter
jb
addb
lcall
nop
add
nop
cld
nop
jmp
add
sub
lods
and
imul
es
cmp
ljmp
add
or
add
push
sub
nop
es
lock
add
cmp
es
lret
pop
ror
lret
push
mov
xchg
ret
add
add
add
push
stc
nop
es
popa
add
popl
cmpb
addr16
add
add
int
add
outsl
nop
cld
nop
jmp
add
lods
jne
nop
cld
nop
jmp
add
jecxz
add
push
mov
xchg
ret
add
std
add
scas
movzwl
stc
nop
es
add
mov
stc
nop
es
add
ret
cli
push
nop
cld
nop
jmp
add
push
add
inc
sub
mov
xor
add
stc
nop
es
lret
add
push
stc
nop
es
add
add
add
add
aam
add
stc
nop
es
push
lret
lock
push
inc
add
add
add
mov
xchg
ret
cld
inc
popa
lock
cmp
jb
add
add
arpl
or
out
decl
add
loopne
add
stc
nop
es
add
into
add
repz
nop
es
sub
inc
pop
sbb
stc
nop
es
sub
add
add
add
bound
dec
add
stc
nop
es
jmp
andb
mov
stc
nop
es
mov
add
dec
ror
push
mov
xchg
ret
add
xor
add
push
jo
push
sbb
loop
nop
cld
nop
jmp
in
lock
mov
xchg
ret
add
push
testl
adc
mov
cmp
ret
sub
movl
dec
pop
add
dec
add
add
add
mov
add
stc
nop
es
add
loopne
push
stc
nop
es
add
mov
add
and
pop
popa
nop
cld
nop
jmp
add
pop
add
cld
jmp
test
add
stc
nop
es
push
add
push
lock
jb
add
testb
nop
jmp
movsb
loopne
add
add
cld
nop
jmp
add
add
int
lea
push
mov
xchg
ret
ljmp
stc
nop
es
add
add
mov
insb
nop
cld
nop
jmp
add
add
add
nop
es
std
add
add
add
loopne
add
jg
outsb
and
nop
es
add
push
movsb
movb
xchg
stc
nop
es
inc
popl
ret
mov
stc
nop
es
popa
add
add
call
or
addb
cmp
mov
add
nop
es
pusha
xor
popa
jnp
inc
adc
mov
xchg
ret
lcall
sbb
add
stc
nop
es
lret
mov
stos
push
mov
xchg
ret
inc
add
mov
cmp
push
mov
xchg
ret
adc
aam
xchg
stc
nop
es
lcall
add
add
add
nop
es
push
add
shrl
nop
cld
nop
jmp
add
add
add
and
push
mov
xchg
ret
jmp
icebp
mov
cld
nop
jmp
std
add
add
stc
nop
es
lcall
mov
stc
nop
es
add
lret
add
jb
inc
add
add
mov
test
mov
stc
nop
es
dec
mov
add
nop
es
ret
fucomp
ljmp
jb
push
add
add
push
lock
mov
xchg
ret
jmp
push
xor
mov
stc
nop
es
lret
pop
add
add
fs
push
push
mov
xchg
ret
add
jmp
ret
rep
stc
nop
es
mov
mov
jmp
jb
add
into
lret
add
add
imul
nop
es
mov
add
ret
je
stc
nop
es
mov
add
add
add
nop
es
add
lds
fildl
jge
stc
nop
es
pusha
add
add
stc
nop
es
add
cld
rolb
mov
jmp
add
mov
add
add
arpl
add
nop
cld
nop
jmp
pop
fstl
test
jmp
add
add
stc
nop
es
add
add
movsb
add
add
stc
nop
es
rolb
scas
cld
dec
add
andl
jb
cld
scas
pop
rcrb
cmpl
es
sub
push
mov
nop
es
lret
add
mov
nop
cld
nop
jmp
add
cld
xor
sbb
mov
add
stc
nop
es
lret
ret
sarb
mov
add
jg
scas
xor
add
add
add
stc
nop
es
pusha
lcall
xor
add
mov
xchg
ret
add
add
push
andl
nop
es
add
add
jmp
dec
or
nop
es
inc
in
add
add
mov
nop
es
push
add
lret
movb
es
dec
mov
add
fildll
stc
nop
es
pop
adc
fisttpll
es
add
inc
add
jnp
add
nop
cld
nop
jmp
push
add
add
push
mov
xchg
ret
dec
add
mov
fs
nop
es
popf
ret
int3
mov
stc
nop
es
loopne
lret
lret
loope
mov
push
mov
xchg
ret
add
push
push
mov
xchg
ret
addb
add
popl
xchg
out
mov
popa
nop
cld
nop
jmp
lret
add
add
mov
push
add
nop
jmp
ret
add
lret
add
push
push
stc
nop
es
mov
push
add
pusha
add
pushf
pop
push
mov
xchg
ret
dec
add
popa
movsb
std
andb
nop
es
add
add
mov
mov
stc
nop
es
inc
popf
mov
or
stc
nop
es
add
stos
jne
stc
nop
es
add
icebp
or
test
nop
jmp
fnsave
add
ret
test
cld
nop
jmp
addb
add
testb
test
es
lret
xchg
popa
push
push
mov
xchg
ret
add
push
popa
add
cmp
stc
nop
es
add
jmp
stc
nop
es
add
add
lret
add
mov
push
push
mov
xchg
ret
mov
add
dec
push
mov
xchg
ret
add
mov
push
sub
add
stc
nop
es
xor
push
push
mov
xchg
ret
lret
orb
add
ret
mov
es
lret
popf
xor
add
call
nop
es
incb
in
mov
stc
nop
es
add
movsb
lret
les
push
dec
nop
cld
nop
jmp
adc
add
add
add
sub
cmpsl
in
inc
add
push
add
cmpb
testb
cmp
ret
scas
add
add
inc
push
movb
cld
nop
jmp
add
lret
lret
mov
and
js
nop
es
dec
add
in
ret
stc
nop
es
adc
pop
int
cmpsl
mov
es
popf
loopne
push
ljmp
stc
nop
es
add
dec
add
ljmp
nop
jmp
mov
push
adc
pop
je
stc
nop
es
loopne
add
cld
nop
jmp
mov
add
mov
nop
jmp
mov
add
ja
lods
push
mov
xchg
ret
add
push
add
add
cs
push
mov
xchg
ret
add
push
add
mov
sbb
mov
xchg
ret
add
xorb
sti
stc
nop
es
mov
scas
jmp
sub
jb
loopne
pop
add
add
add
adc
testl
push
mov
xchg
ret
add
add
loopne
stc
nop
es
add
add
and
mov
xchg
ret
add
add
pop
rep
push
mov
xchg
ret
adc
scas
incl
nop
jmp
add
pop
add
inc
jb
outsb
jne
nop
cld
nop
jmp
sub
add
pop
mov
es
lret
add
dec
dec
popf
popl
mov
stc
nop
es
ror
jmp
push
add
mov
stc
nop
es
addb
add
loopne
push
nop
cld
nop
jmp
add
lcall
int
add
stc
nop
es
lret
scas
add
adc
pop
idiv
call
add
add
ljmp
mov
add
nop
es
xor
push
nop
cld
nop
jmp
ret
scas
lret
rolb
lret
add
push
mov
xchg
ret
loopne
mov
test
nop
cld
nop
jmp
addr16
add
and
jne
stc
nop
es
adc
mov
add
nop
es
push
movsb
add
push
add
repnz
stc
nop
es
add
ret
add
stc
nop
es
xor
add
loop
mov
nop
cld
nop
jmp
add
add
add
jecxz
test
nop
cld
nop
jmp
add
fldl
push
add
or
nop
es
in
add
push
imul
loopne
add
add
lret
add
ret
nop
cld
nop
jmp
popf
inc
adcb
add
iret
xor
stc
nop
es
adc
addb
lea
stc
nop
es
add
add
push
stc
nop
es
xor
push
add
dec
add
shrb
inc
stc
nop
es
add
incb
es
push
adc
add
add
sub
nop
jmp
add
loopne
jno
inc
add
mov
push
mov
xchg
ret
add
scas
add
clc
stc
nop
es
sbbb
imul
xchg
ret
push
sub
and
stc
nop
es
add
add
nop
es
add
shlb
pop
stc
nop
es
in
add
add
ljmp
es
add
add
push
add
sar
nop
es
add
inc
add
add
stc
nop
es
add
lret
cld
add
rcll
jno
or
es
add
ror
add
jne
stc
nop
es
lcall
call
cli
incl
adc
call
in
mov
add
add
loop
add
jl
jno
daa
fwait
add
stc
nop
es
popl
add
add
jp
stc
nop
es
add
add
sub
nop
es
add
fldl
cmpb
jb
add
pop
add
dec
aas
add
stc
nop
es
mov
add
lea
stc
nop
es
add
sub
cld
nop
jmp
popl
pop
rolb
add
pop
stc
nop
es
add
add
pop
push
push
mov
xchg
ret
add
push
dec
adc
scas
jne
stc
nop
es
jmp
mov
stc
nop
es
addr16
add
add
jmp
stc
nop
es
add
add
mov
lahf
add
push
mov
xchg
ret
add
movsb
add
sub
jb
add
add
pop
stc
nop
es
push
inc
add
inc
int3
nop
push
mov
xchg
ret
add
movsb
add
add
mov
iret
or
inc
add
cld
add
add
es
int
push
mov
add
inc
add
add
add
nop
es
add
add
mov
nop
es
fldl
push
dec
add
imul
incl
adc
mov
sbb
fildl
xchg
ret
push
add
push
addb
add
sar
mov
xchg
ret
inc
dec
add
add
test
ljmp
orb
incl
add
xchg
ret
pop
test
nop
cld
nop
jmp
add
add
nop
cld
nop
jmp
add
scas
push
movsb
aad
enter
push
mov
xchg
ret
sub
pop
mov
stc
nop
es
add
lret
mov
adc
nop
es
addb
add
jmp
add
stc
nop
es
pop
int
add
cmp
nop
es
add
xor
pusha
add
mov
nop
cld
nop
jmp
pop
add
testb
out
push
imul
jns
stc
nop
es
testb
and
cmp
jae
nop
es
popa
fldl
and
push
stc
nop
es
in
push
add
in
pop
sub
mov
xchg
ret
popa
add
add
add
xchg
push
mov
xchg
ret
inc
fst
ljmp
nop
jmp
lret
add
lock
add
lea
nop
es
add
mov
add
and
cld
nop
jmp
add
add
dec
adc
jb
stc
nop
es
incb
push
xor
jae
pushl
stc
nop
es
mov
lret
lret
in
add
add
stc
nop
es
add
mov
stc
nop
es
add
and
into
add
nop
cld
nop
jmp
movsb
lret
add
fisttps
jb
add
add
pusha
add
or
nop
es
lcall
out
movzwl
stc
nop
es
dec
add
add
test
stc
stc
nop
es
add
rorl
popa
add
mov
xchg
ret
add
add
add
movb
into
mov
stc
nop
es
cmp
and
stc
nop
es
add
inc
lret
jae
push
jmp
add
movsb
movb
add
ret
psllq
sbbb
incl
fldl
push
push
add
mov
stc
nop
es
push
add
loop
mov
xchg
ret
sub
into
outsl
mov
nop
cld
nop
jmp
lcall
mov
nop
es
add
mov
push
push
mov
xchg
ret
int
dec
add
mov
nop
cld
nop
jmp
dec
adc
add
mov
ret
jp
dec
filds
icebp
jns
xor
push
inc
stc
nop
es
inc
dec
adc
ljmp
mov
xchg
ret
push
add
inc
add
je
add
nop
es
int
add
xchg
push
test
es
add
subb
add
mov
stc
nop
es
add
add
add
add
jb
add
xor
fildl
stc
nop
es
add
lret
inc
loopne
nop
es
add
addr16
mov
stc
nop
es
mov
xor
stc
nop
es
add
lret
pusha
arpl
cld
nop
jmp
add
popa
add
imul
add
add
sub
and
inc
inc
dec
mov
pop
insb
add
add
mov
nop
jmp
mov
add
add
adc
add
push
inc
add
pop
stc
nop
es
add
add
aas
jl
stc
nop
es
mov
les
stc
nop
es
add
addb
sbb
cld
nop
jmp
inc
add
add
dec
lret
xor
nop
cld
nop
jmp
mov
ljmp
push
mov
xchg
ret
pop
lret
add
ret
sub
inc
adc
nop
es
xor
xor
divb
push
mov
aaa
add
and
sub
into
roll
fistl
nop
es
push
add
mov
add
stc
nop
es
into
add
cld
lock
add
jb
movb
addb
stc
nop
es
lcall
add
add
stc
nop
es
shr
xor
stc
nop
es
add
push
movsb
lcall
or
stc
nop
es
lret
movsb
dec
in
inc
cld
push
cmp
nop
cld
nop
jmp
jmp
add
stc
nop
es
add
mov
mov
ret
test
nop
jmp
mov
lret
jo
pusha
stc
nop
es
in
dec
dec
add
add
sub
jmp
andb
inc
add
push
push
mov
xchg
ret
add
dec
mov
mov
add
hlt
incl
into
push
xchg
call
es
addb
in
popf
add
add
into
fldl
xchg
ret
add
add
add
movsb
xor
es
ljmp
into
clc
mov
push
mov
xchg
ret
push
movsb
add
movb
call
nop
cld
nop
jmp
lcall
std
mov
stc
nop
es
in
std
add
pusha
nop
cld
nop
jmp
add
shrb
xor
ja
mov
stc
nop
es
lret
dec
add
push
mov
xchg
ret
in
push
jmp
mov
es
add
add
mov
jmp
add
sbb
ss
add
loop
nop
cld
nop
jmp
add
in
mov
sahf
lea
stc
nop
es
add
add
add
nop
cld
nop
jmp
add
add
addb
je
sub
xlat
stc
inc
add
dec
add
or
nop
es
loopne
lret
add
push
push
mov
xchg
ret
shl
add
in
scas
push
nop
jge
mov
adc
nop
es
add
and
dec
nop
cld
nop
jmp
add
push
add
movsb
cmp
rcr
stc
nop
es
inc
add
andb
je
stc
nop
es
add
stc
nop
es
lret
add
add
push
mov
es
add
add
mov
stc
nop
es
add
subl
std
incl
add
add
in
xor
lock
popa
add
mov
xchg
ret
in
inc
fstpl
nop
cld
nop
jmp
addb
lock
add
subl
nop
es
add
pop
add
inc
stc
nop
es
mov
add
add
cld
nop
jmp
rcr
ljmp
sbb
nop
es
std
pop
popl
add
dec
lret
insl
jmp
nop
cld
nop
jmp
add
popf
add
mov
add
mov
iret
add
jp
fcomps
mov
xchg
ret
add
add
add
push
fcoml
nop
es
lret
add
add
push
ljmp
nop
es
sub
add
jns
stc
nop
es
frstor
adc
stc
nop
es
lret
xor
add
sbb
jg
nop
cld
nop
jmp
adc
add
fisttps
nop
es
add
add
cld
ss
jp
adc
nop
es
add
dec
add
add
jb
inc
jmp
lret
sub
stc
nop
es
add
lret
sub
adc
fistl
mov
xchg
ret
add
add
loopne
add
mov
inc
add
add
fs
and
push
mov
xchg
ret
int
push
add
lcall
mov
mov
adc
les
push
loope
xor
mov
stc
nop
es
add
stc
nop
es
loopne
ljmp
jnp
mov
stc
nop
es
add
jnp
popa
push
mov
xchg
ret
add
inc
add
add
push
add
xchg
ret
lret
add
add
int
sahf
dec
nop
cld
nop
jmp
add
add
add
ljmp
es
inc
add
dec
inc
add
repz
nop
es
add
pusha
sub
jne
stc
nop
es
add
mov
stc
nop
es
adc
and
push
mov
xchg
ret
loopne
mov
fucomp
mov
stc
nop
es
mov
push
fimuls
es
lcall
mov
es
addb
push
ljmp
stc
nop
es
add
loopne
add
stc
nop
es
add
pop
add
mov
add
nop
cld
nop
jmp
add
push
add
mov
push
stc
nop
es
sub
add
sub
in
filds
lahf
add
and
addr16
out
cmp
cwtl
bound
xchg
rcrb
mov
add
jnp
lea
dec
sub
faddp
add
add
inc
ret
popa
jo
lret
subl
pusha
add
fisubs
pop
insb
fldenv
mov
fdiv
and
aaa
pop
jb
pop
pop
imul
test
and
rolb
jp
sub
loope
js
adc
daa
add
xor
add
adc
push
test
dec
popa
lret
out
jnp
out
fidivrs
lea
jecxz
rorl
fisttpl
mov
sub
test
and
mov
imul
popa
pop
sbb
mov
sbb
add
add
push
movsb
aaa
mov
sbb
pushf
nop
sub
andl
cmpsb
jbe
adc
test
pop
ret
out
loop
in
xchg
dec
xor
pop
inc
rorb
xchg
push
movb
sub
add
push
iret
loopne
rcl
xchg
stc
cmp
lahf
daa
inc
add
es
mov
xchg
pusha
add
lret
mov
aas
cmp
fs
mov
push
pushl
out
arpl
jecxz
push
pusha
add
lret
and
sub
punpcklbw
insl
add
pop
jnp
mov
sbb
add
mov
es
lock
cmp
adc
cmp
mov
sub
jnp
cmp
std
sahf
mov
addb
and
cmp
mov
out
addr16
mov
xor
mov
loop
add
mov
call
mov
pop
jne
js
sbb
add
call
ret
push
add
sbb
hlt
cmp
mov
in
add
movb
jo
add
dec
mov
lcall
jae
testl
sub
or
mov
mov
cs
in
icebp
mov
pop
adc
add
imul
arpl
mov
out
xchg
adc
add
ja
mov
fnstenv
sub
fstps
jns
push
jne
rolb
add
arpl
shlb
sbb
movb
scas
shl
ret
jl
push
fstpl
hlt
mov
shl
cs
js
fdivrs
fdivr
les
xlat
fdivrl
fsts
popf
cmp
fcomip
movsb
sub
xor
mov
ds
test
pushf
das
incl
lea
adc
int
pop
fwait
adc
jae
filds
push
mov
push
add
outsl
mov
stc
sub
push
mov
inc
push
fisubl
add
mov
mov
xchg
add
dec
mov
push
mov
lea
mov
out
or
lret
push
add
add
push
cmpsb
xchg
sti
lahf
cmp
sub
addb
add
dec
pop
stc
adc
test
dec
imul
ret
push
or
pop
out
or
ljmp
jno
addb
sub
or
lds
push
xchg
insb
xor
hlt
mov
jns
add
ret
adc
shl
jbe
inc
add
xchg
or
push
dec
jnp
enter
daa
lcall
adcl
jne
xlat
and
xchg
sbb
inc
cmpl
sub
jp
mov
mov
enter
lret
cmp
push
fstpt
mov
adc
xchg
pop
mov
sbb
xlat
push
jo
adc
jnp
sub
in
and
dec
mov
adc
shlb
movsb
rcr
pop
in
pop
add
out
or
in
out
jge
jge
mov
jbe
aaa
inc
add
ds
add
shll
pop
xchg
ret
flds
jbe,pt
cmp
rorb
or
in
push
add
add
pop
xchg
es
test
sub
outsb
mov
sub
xor
pop
test
mov
ret
cmc
es
inc
sub
in
inc
add
repnz
mov
sti
push
pop
pop
xor
js
add
out
or
cmp
in
and
imul
xchg
pop
fwait
add
push
cmp
xchg
imul
pop
and
rcrl
mov
outsl
sbb
add
mov
insl
pop
mov
mov
ja
in
push
add
inc
add
and
sub
xchg
xchg
popa
xchg
gs
loope
mov
negl
loopne
in
and
add
pop
add
rorl
push
cmp
lret
jae
jmp
jp
push
lea
ljmp
and
negb
hlt
fwait
add
sub
push
adc
frndint
in
add
add
push
pushl
dec
cmp
pop
dec
xchg
out
mov
and
inc
adc
or
jecxz
jle
addb
add
pop
inc
add
fistpl
push
add
and
popf
pop
pop
push
pop
add
shrl
pop
out
sbb
mov
rcll
jecxz
sbb
ficompl
fildl
movsl
gs
adc
popa
xchg
test
int
lret
sbb
jo
outsb
mov
addb
or
mov
loope
fwait
sbb
dec
dec
cmp
mov
jp
mov
add
jb
mov
inc
and
cltd
and
lret
dec
addb
mov
jb
loope
jmp
add
add
sbb
pusha
add
cmc
ja
add
xchg
push
bound
mov
push
ss
mov
iret
mov
push
lods
cmp
ljmp
or
movsb
nop
add
test
pop
push
loopne
sti
test
das
jmp
mov
dec
xchg
cmp
arpl
mov
xor
push
pushl
sbb
xchg
bound
cs
rolb
pop
iret
add
sti
sbb
jl
int
adc
fldt
inc
cwtl
les
aas
mov
rcll
adc
sub
cld
fbld
push
sahf
insb
insl
mov
nop
mov
sti
cltd
push
pop
add
fsubl
and
add
imul
jb
add
dec
mov
adc
sahf
sbb
ja
cmp
outsl
out
loopne
in
xchg
push
push
add
fldl
imul
jmp
test
mov
cmp
xchg
pop
xor
add
mov
cs
leave
loope
fnsave
mulb
add
jle
fsts
arpl
cld
subl
add
pop
bound
xchg
bound
and
dec
adc
arpl
add
or
movsl
pop
dec
outsl
mov
xor
cli
aaa
xchg
mov
dec
sub
cmpsl
gs
jle
sbb
rolb
sbb
add
jno
dec
aaa
mov
mov
pop
daa
pop
adc
in
hlt
outsb
push
add
adc
mov
gs
jecxz
movsb
mov
jl
fstpt
leave
and
lahf
push
jo
inc
add
je
xcrypt-ecb
cmpsl
leave
or
ds
add
push
enter
scas
xor
aam
repnz
pop
out
dec
fwait
add
std
push
dec
mov
mov
insb
ret
sarb
jmp
add
add
sarl
xor
test
push
xor
bound
sbb
adc
adc
xchg
cmc
jl
cmp
in
stc
mov
xchg
add
ljmp
subl
cwtl
push
popf
out
add
xor
pandn
jge
fdivl
or
cmp
xchg
mov
mov
xor
iret
dec
cmp
add
mov
push
sub
mov
imul
add
dec
mov
cmp
cmp
int3
addb
jp
test
js
rclb
int3
lock
adc
loop
xchg
sbb
dec
push
push
divb
cmc
inc
mov
repnz
and
pop
insb
popf
movsl
int3
scas
pop
jbe
inc
push
add
ds
repnz
mov
ret
sar
cmp
push
mov
std
ficoml
push
add
rolb
js
jbe
add
xchg
ljmp
negb
inc
sub
dec
icebp
xor
add
push
xchg
addb
ret
add
adc
jne
cmpsb
xchg
xor
lahf
pushf
aad
mov
daa
adc
dec
adc
in
pop
je
mov
pop
les
shl
repnz
add
es
ds
sahf
enter
jp
or
mov
lods
data16
movb
sub
add
mov
add
push
xchg
test
inc
add
outsb
dec
out
jnp
pop
in
clc
jb
je
popa
or
push
cmc
and
pop
push
repz
in
das
cwtl
jno
scas
loope
add
stos
out
push
ficoml
stos
aaa
add
adc
xor
pop
ds
add
js,pn
inc
daa
cmp
add
mov
xchg
loope
cmp
push
add
icebp
dec
in
add
pushf
jns
aam
and
xchg
cmpsb
fsubrl
or
stos
xorl
rolb
daa
sbb
mov
out
movb
fwait
push
stos
or
push
cmp
add
aam
mov
sub
inc
add
add
je
add
test
out
sub
add
xor
adc
jle
lcall
pop
test
and
aam
addb
pusha
add
jb
mov
dec
mov
lcall
scas
std
or
cmp
ss
sub
in
ret
sbb
sub
pop
gs
aas
loopne
hlt
push
je
xor
inc
jae
mov
or
repnz
nop
adc
adc
fldenv
addb
xor
or
jo
and
scas
mov
and
xchg
or
add
stos
jmp
cmc
cmpsb
or
out
jecxz
movb
lods
dec
adc
inc
add
dec
jne
popf
xchg
dec
lods
gs
icebp
scas
imul
inc
add
mov
mov
pop
lea
and
cwtl
xchg
push
push
in
xchg
lahf
pop
rcrb
or
fiaddl
sub
mov
add
sahf
add
xor
fdivl
das
test
lods
jne
addr16
jo
push
mov
stos
xchg
imul
cmp
outsl
sti
mov
sub
addb
add
addb
add
incl
mov
cmpsl
sti
cmp
fstpt
xchg
lods
add
div
addb
ja
pop
cld
pop
sbb
popa
inc
add
and
push
jp
ds
cld
sub
adc
je
pop
mov
out
call
push
push
mov
into
mov
dec
mov
das
addb
fs
push
insl
mov
sbbl
adc
leave
test
adc
add
push
movsl
cmp
les
into
dec
je
sub
imul
add
cmp
fwait
repnz
aam
mov
insl
rcrb
dec
dec
jg
add
movsb
les
aad
addl
mov
out
jne,pt
js
dec
sbb
push
ret
inc
push
dec
fimull
jb
js
fldenv
clc
loope
jbe
or
sti
mov
sbb
dec
loopne
add
cmpsl
sub
mov
xor
pop
int
add
addb
pop
int3
sahf
xchg
adc
add
lea
ljmp
add
add
mov
xor
mov
add
add
rolb
fistps
out
add
bound
add
dec
add
arpl
enter
sbb
movb
pusha
add
idiv
in
and
negb
push
in
mov
or
or
mov
pop
pop
jno
add
pusha
add
add
movsb
lock
int
shll
dec
into
dec
push
add
arpl
in
push
call
cld
aad
addl
lcall
fmull
lods
push
sub
inc
add
fisubs
add
adc
fimull
mov
mov
loop
sub
push
add
mov
xchg
ljmp
adc
out
loope
aas
dec
call
leave
xchg
mov
push
in
nop
cmc
pop
or
cmp
or
lods
popa
sahf
jp
popl
add
push
int3
fmuls
sahf
popf
into
lods
loope
pop
jge
fsub
scas
iret
and
mov
aad
or
in
pop
add
mov
movb
pushf
inc
add
call
test
out
addr16
mov
mov
or
xchg
sahf
ljmp
mov
xor
roll
enter
dec
mov
add
xchg
das
add
add
out
repnz
shrl
mov
out
xchg
popf
ret
mov
ja
pop
enter
adc
gs
add
lret
mov
pop
pop
cltd
outsl
mov
mov
sbb
mov
lea
cmp
add
idivl
test
or
rcrl
sub
divb
sahf
or
das
mov
push
les
iret
repz
mov
movb
and
lahf
cmp
mov
pushf
pop
mov
sbb
and
push
bound
sub
dec
nop
pop
xchg
jg
cwtl
out
push
mov
add
popf
cwtl
and
int
push
mov
gs
add
sahf
inc
add
test
aad
add
add
xchg
mov
mov
cmp
push
jo
pop
movb
add
mov
test
and
insb
scas
sbb
into
addb
lret
push
jg
adc
add
lret
push
add
xchg
mov
sbb
addb
mov
jnp
mov
adc
dec
mov
pop
mov
packuswb
add
jmp
mov
aaa
jle
lea
movb
dec
inc
add
jg
or
addb
mov
add
loop
add
adc
jno
lret
enter
and
subl
push
add
push
mov
adc
mov
pusha
add
das
mov
push
pop
lds
or
mov
or
test
add
cmp
add
sub
dec
movsb
jmp
fs
mov
push
ret
add
push
push
add
popa
ss
push
dec
loop
addb
nop
inc
add
jecxz
sub
shrl
mov
ret
out
pop
mov
inc
add
adc
dec
daa
sbb
fsubp
dec
dec
and
cmpsl
cs
sahf
pop
xchg
repz
imul
addb
add
lahf
addr16
sub
xchg
push
lahf
or
adc
jne
sbb
in
sub
xor
test
adc
test
cltd
pop
movb
rorl
inc
cltd
sar
cmp
xchg
movsb
out
xchg
loop
jp
pop
fsubl
or
sbb
scas
push
jb
push
mov
stos
mov
movsb
sub
out
aam
iret
mov
xchg
jle
mov
cmp
inc
cs
aaa
in
xchg
testb
sub
push
dec
xchg
mov
dec
data16
cmp
idivb
mov
jae
dec
cmpsl
sti
jge
mov
adc
fiaddl
add
mov
ret
movb
and
ljmp
add
inc
add
fwait
repnz
add
mov
int3
fwait
ljmp
ds
fcompl
stos
out
inc
scas
and
push
mov
movsl
jg
insb
xchg
gs
dec
clc
pop
xor
je
xor
jb
pop
nop
or
mov
lock
sbbl
clc
inc
add
push
add
popa
inc
add
cmpsb
xchg
jbe
xchg
aam
popa
and
fsubrl
add
int3
and
insl
adc
fxch
adc
in
mov
cmp
pop
testl
loopne
cltd
inc
add
arpl
repz
adc
stc
xor
in
sub
jge
add
inc
jne
in
add
adc
mov
push
push
pop
mov
jns
fbld
addb
clc
push
lret
stc
test
mov
std
packsswb
cmp
bound
or
sahf
movb
cltd
mov
mov
movsb
int3
xchg
push
pop
lock
add
insl
mov
mov
mov
fwait
sbb
mov
ss
lret
repz
cmp
jg
stos
clc
iret
inc
mov
jno
in
out
addb
mov
and
negl
out
mov
pop
mov
inc
aas
sub
mov
and
push
cwtl
jnp
add
test
sub
in
push
movb
add
insb
movsl
inc
or
arpl
mov
adc
scas
lock
dec
xor
incb
jae
movsb
or
loope
inc
sub
fildll
sbb
shlb
sti
or
cmpsl
popf
pop
shll
mov
imul
mov
dec
xor
sbb
jns
inc
pop
mov
dec
or
ret
or
in
jp
loopne
loope
mov
lds
fwait
cld
movntps
add
push
mov
add
cmp
mov
mov
add
lahf
mov
xchg
insb
clc
gs
dec
mov
add
sbb
sbb
shl
mov
fdivl
pop
push
sbb
int
cld
ljmp
lret
cli
push
sarl
dec
sbb
sub
and
pusha
add
mov
add
jae
in
test
repz
cmpsl
mov
movb
add
notl
cmc
into
inc
das
pop
aas
mov
shlb
lret
cltd
jne
adc
add
or
pop
mov
and
cmpsb
add
lret
pop
mov
mov
lds
add
add
or
repz
push
fstl
jp
jns
mov
and
shrl
lret
call
mov
int3
ret
pop
loop
push
mov
add
sub
add
push
adc
cmp
inc
add
in
cmp
scas
sub
adc
out
sub
or
cmpsb
and
xor
sub
in
imul
std
pop
xor
xchg
pop
arpl
fistps
and
and
dec
mov
ds
and
shrb
fst
addb
arpl
dec
addb
push
scas
mov
or
dec
mov
fcoml
add
inc
add
test
mov
jae
add
insl
aas
and
pop
jne
xchg
dec
pop
shlb
inc
add
add
mov
sub
shll
sahf
fwait
xor
add
cli
ss
add
mov
lret
push
into
pushl
in
cld
int
dec
out
mov
movsb
insl
dec
iret
cwtl
jl
adc
add
adc
fldl
ljmp
jbe
add
xchg
loopne
rclb
add
sbb
add
out
add
mov
push
xchg
mov
or
inc
int
loope
add
jle
add
cmp
add
call
push
push
inc
or
loopne
lock
addb
frstor
pop
loopne
loopne
mov
sub
ljmp
fstpt
lcall
loopne
jmp
sti
lahf
leave
cmp
mov
pushf
xor
mov
xor
imul
jge
add
xchg
lods
dec
push
ffree
add
jmp
out
cmp
lods
jne
mov
xor
add
add
xlat
push
sbbl
fcoml
pop
pop
lret
mov
sub
cs
adc
mov
sub
cmpsl
idivb
shll
lods
daa
mov
mov
pushf
addb
push
std
mov
orl
fiaddl
imul
cld
adc
and
test
add
dec
xchg
stos
movb
pop
pop
lcall
jb
mov
push
or
pushf
sub
add
clc
lcall
or
xor
sti
int
xorl
xor
addb
daa
dec
mov
xchg
repz
stos
pop
mov
push
add
xor
add
jne
test
enter
cld
frstor
add
sub
sub
dec
and
stos
ret
xchg
cmc
gs
pop
mov
push
or
dec
sub
addl
enter
fs
xchg
aam
cltd
dec
sub
mov
ret
inc
add
rorl
xchg
ficompl
cmpsl
xor
xchg
movsb
sub
or
mov
jo
add
dec
pop
stos
je
aam
dec
lock
sub
mov
mov
pop
push
scas
push
mov
lcall
mov
xchg
sub
mov
mov
pop
xchg
insw
rclb
pop
cmp
cmpsl
out
add
out
mov
dec
xchg
xchg
pop
stc
xchg
stos
mov
jo
ds
es
addr16
into
lret
add
jns
fwait
call
mov
inc
add
pushf
shll
mov
int
stos
or
dec
mov
or
dec
push
dec
test
and
dec
mov
mov
movsl
aas
mov
adc
ds
movsl
xchg
mov
movsl
fisubs
sbb
jmp
or
shrb
lcall
sub
add
add
add
and
loopne
push
aad
add
adc
loope
insb
repnz
addb
rolb
push
aad
sub
and
ficompl
xor
lods
scas
and
fs
xor
push
outsb
and
push
adc
pop
aaa
sbb
lret
fldcw
inc
sbb
cwtl
das
add
call
cmp
sahf
test
mov
add
pop
add
add
jno
sbb
add
cmp
add
add
inc
mov
out
cli
in
sub
cmp
jns
add
mov
push
mov
inc
add
xor
pop
mov
aaa
jmp
dec
fsubs
daa
or
mov
mov
jb
and
sbb
push
stos
pop
clc
sbb
add
cltd
cli
stc
add
xor
push
leave
insl
dec
xor
xchg
js
xlat
pop
fcmove
ss
and
jns
push
adc
movsb
fdivrl
jl
add
push
mov
gs
lds
pop
or
test
mov
inc
add
iret
or
inc
add
jb
lods
lret
cmp
jle
inc
add
fcmovnbe
xchg
xchg
push
test
mov
xor
idiv
jecxz
outsb
out
icebp
mov
jno
loop
insb
imul
xchg
push
out
lods
sbb
jno
int3
je
adc
out
xchg
stos
pusha
add
jl
bound
fsincos
stos
xchg
xchg
inc
add
and
divb
jno
mov
insl
inc
add
push
xchg
cmp
leave
push
sbb
mov
fcomps
push
lock
mov
or
sub
mov
and
outsb
add
rcll
pop
pop
stos
push
or
in
movsb
aam
add
movsl
mov
add
shlb
xchg
xchg
mov
iret
adc
xor
rolb
add
xor
sahf
or
dec
dec
ret
addr16
mov
mov
inc
add
ret
das
call
cmp
test
dec
push
or
inc
add
add
and
fldcw
aaa
cmp
es
mov
ss
xchg
fs
add
gs
and
xor
es
add
mov
or
dec
cmp
mov
add
add
in
add
clc
mov
and
cmpsb
movsb
addb
movb
mov
out
sub
or
or
das
pop
sub
inc
add
test
mov
mov
cmp
enter
pop
jge
ficoml
fnstenv
jnp
push
repz
jl
inc
add
jecxz
cmp
in
xor
outsb
aam
addr16
cmp
mov
add
mov
mov
and
imul
aas
cltd
mov
lret
add
jbe
andl
add
jno
mov
shll
push
out
xchg
adc
mov
add
cmp
cmpsb
add
stc
daa
sub
dec
int
es
dec
and
popf
rclb
add
push
add
or
ret
fisubl
mov
mulb
lret
mov
add
dec
xchg
push
cwtl
jl
mov
aam
dec
test
adc
dec
adc
mov
push
or
lret
jl
decl
loope
frstor
add
sub
mov
lods
mov
and
cld
add
data16
add
cmpl
repnz
push
mov
fidivrs
lods
inc
add
inc
add
inc
add
mov
fwait
lock
sbb
mov
cmc
pop
test
addr16
push
leave
inc
push
mov
sbb
sub
cmpsl
push
xchg
shlb
ror
inc
inc
dec
pop
lock
jb
pop
pop
loopne
mov
cs
fldt
pop
loopne
call
sbb
bound
jnp
mov
xchg
sbb
bound
cmpsl
jecxz
test
inc
add
in
jle
ds
jg
imull
jnp
adc
lret
lds
inc
popa
in
insb
repnz
das
ja
jmp
pop
adc
sub
sbb
mov
or
and
sbb
cltd
insl
sub
mov
mov
je
sub
or
dec
int3
inc
bound
decb
adc
pop
or
push
push
xchg
cltd
adc
sahf
cli
jne
movb
enter
mov
xchg
shr
dec
and
stos
rolb
xchg
mov
insb
je
jns
cld
mov
and
or
inc
add
stos
mov
pop
movlps
mov
sbb
add
les
jl
idivb
and
mov
fwait
mov
in
cmc
and
into
mov
jb
das
daa
xlat
sbb
dec
enter
inc
sub
repnz
push
stc
ret
outsb
loopne
sbb
sub
push
adc
push
push
add
push
add
dec
je
movsb
pop
insl
loope
inc
add
inc
add
mov
mov
addb
insb
fs
aam
mov
mov
add
stos
mov
sbb
out
add
ret
pusha
add
mov
pop
cmc
mov
mov
adc
xchg
jnp
add
int
rolb
add
int3
cli
and
add
lea
mov
ljmp
and
out
sti
and
lea
jle
frstor
fcompl
jb
sbb
int3
jmp
add
es
out
push
pushw
cs
insb
and
lret
jbe
out
pop
out
jg
dec
dec
fbld
add
je
jb
fcmovnu
fidivrs
inc
int3
inc
add
or
adc
add
push
jno
addl
aam
movsl
scas
xchg
add
fidivs
pusha
add
add
gs
into
insl
ss
add
mov
xchg
mov
jo
jns
jl
cmpsb
mov
cli
sub
lea
add
or
shl
push
mov
mov
adc
pop
loopne
jne
xchg
sub
xlat
push
cmpsl
pop
nop
fisubl
lahf
fldl2e
jp
and
aaa
mov
jl
add
loop
dec
or
add
cmp
pop
adc
dec
movb
shrl
popf
xor
movsl
jl
cmp
gs
add
aaa
dec
lcall
add
test
mov
jo
mov
leave
rolb
icebp
aaa
lods
idiv
xor
cmpsb
push
inc
test
cmp
xor
push
loopne
inc
ret
cmpsb
ja
inc
add
dec
rolb
test
xchg
adc
dec
dec
inc
call
sub
xor
xchg
mov
xchg
mov
in
mov
mov
adc
or
add
das
xchg
mov
mov
mov
sbb
add
xor
mov
add
mov
mov
adc
or
xchg
cmp
lcall
std
and
jae
or
aam
data16
inc
add
mov
xor
clc
lahf
xchg
stc
adc
je
out
mov
sub
push
sbb
insb
dec
inc
add
inc
call
std
imul
xor
adc
pop
sub
les
sbb
gs
push
jbe
mov
aaa
enter
mov
int
loop
fwait
and
xchg
push
stos
mov
dec
imul
or
bound
mov
add
and
out
push
xchg
aas
out
push
into
jmp
xchg
das
clc
and
add
outsb
push
or
push
adc
pop
bound
sbb
iret
jb
mov
sub
xchg
add
jbe
add
or
lea
mov
fidivs
push
jb
jp
fmuls
push
add
movsb
cltd
movb
mov
adc
mul
push
les
dec
lods
jmp
mov
cs
mov
cmp
push
es
sub
scas
or
repnz
or
pop
dec
sbb
jmp
sbb
popa
movsl
fmull
sub
lds
add
loopne
add
add
mov
add
jnp
sub
cs
lock
sti
out
mov
cli
inc
add
fwait
bound
mov
popa
dec
clc
push
pop
fstpt
and
sub
jecxz
inc
add
push
out
pop
xchg
fmul
lcall
cmp
loope
popa
movsb
mov
push
or
lahf
mov
xor
lock
pop
push
in
les
sub
xor
sbb
dec
mov
stos
push
pop
push
add
push
sbb
into
movsb
addb
jns
aas
popf
loopne
sub
call
xor
dec
adc
jo
jo
fstps
arpl
sbb
add
sahf
ja
jge
cs
push
push
popf
pop
sub
out
aas
sbb
imul
leave
fdivs
ja
or
mov
mov
fimuls
shrl
mov
mov
add
aam
cwtl
push
inc
sub
add
add
cmp
daa
movb
add
cmpsb
fsts
pop
push
int3
jbe
sbb
out
popa
jns
cwtl
adc
jnp
xor
xchg
pop
xlat
pop
inc
add
mov
xor
and
movsb
mov
int3
push
xor
arpl
inc
push
sub
xorl
mov
xchg
dec
in
lock
cs
jns
push
pop
mov
mov
cmpsl
dec
mov
out
jo
adc
sub
add
aam
and
pop
jle
lcall
xor
dec
mov
xor
add
mov
dec
and
rorb
daa
pop
addr16
add
mov
mulb
add
outsl
aaa
cmp
aas
push
sub
dec
or
adc
lret
add
pop
add
jbe
xchg
add
mov
nop
mov
add
sub
or
rolb
add
cmpsl
inc
add
leave
insb
push
and
xor
jb
mov
loope
mov
pop
mov
xchg
inc
xchg
xchg
push
outsb
movsb
xlat
and
mov
aad
add
or
and
fcmovnb
enter
mov
dec
cmp
rcrl
add
scas
loopne
sub
push
sahf
adc
or
pop
aad
stos
idivl
sub
sub
dec
loop
push
add
movsb
pop
pop
mov
mov
cmp
add
out
stos
test
cmpsl
inc
add
in
push
stc
lea
enter
jno
enter
loop
adc
sub
rorl
ds
lods
loope
lock
push
add
fisubl
push
jmp
add
push
out
aaa
mov
xor
sahf
js
test
cld
dec
push
jge
addb
cmp
add
inc
es
push
inc
dec
xchg
cmp
mov
stc
mov
cmp
sub
and
sub
jb
imul
test
push
cwtl
inc
add
in
fstps
dec
push
out
icebp
jg
daa
out
pop
addb
push
add
add
sbb
push
inc
sub
rcl
out
dec
and
adc
push
les
aam
add
arpl
rcr
scas
push
mov
lds
addb
dec
sar
xchg
addb
adc
adc
into
int3
imul
pop
push
loop
int
imul
sub
jbe
pop
sahf
jle
je
inc
add
sbb
push
add
mov
mov
stos
or
sub
push
add
and
out
lahf
rcr
inc
add
imul
push
adc
enter
das
dec
adc
outsl
scas
fisubs
adc
add
and
mov
dec
mov
fcomps
les
xor
jg
mov
xchg
cmc
pop
push
rcll
jecxz
cmp
movsb
daa
lea
adc
add
fisubs
popa
testl
add
rcr
fsubr
into
std
lcall
hlt
incb
lods
inc
add
enter
or
pop
push
add
push
cli
inc
add
and
add
idivl
loope
addb
call
or
xor
mov
iret
outsb
mov
add
sub
cmc
mov
addb
insl
test
idiv
pop
xchg
ret
xchg
ss
add
fcmovnb
lahf
or
je
or
out
int
dec
add
sbb
mov
inc
add
xor
xor
cmp
test
push
add
ds
adc
rorb
add
add
data16
pushf
xchg
cmpsb
lret
mov
lret
and
addb
rolb
inc
or
mov
inc
mov
stos
push
stos
mov
add
mov
data16
lods
jecxz
loop
imul
scas
cli
test
mov
stos
addb
pushf
xchg
add
jg
sbb
add
iret
ret
stos
xchg
imul
pop
mov
pop
mov
inc
or
add
mov
leave
push
add
jo
int
add
sub
or
or
jecxz
movsb
mov
loopne
cmpsb
pusha
add
test
mov
ret
aas
das
push
es
add
arpl
fidivrs
mov
add
fmuls
inc
add
or
inc
out
out
shl
cmp
xchg
data16
add
mov
jne
into
js
jmp
jp
add
icebp
icebp
or
outsl
popa
jg
push
jnp
les
push
mov
and
int3
cwtl
add
mov
add
lret
mov
fsub
or
movsb
repnz
push
aas
lret
push
and
aaa
mov
cmp
stc
bswap
subl
je
sbb
cmpsl
lods
mov
cmp
iret
sbb
mov
xor
unpckhps
ror
out
mov
add
mov
fcomp
cltd
not
add
je
push
ljmp
mov
xchg
and
pop
pop
inc
cmp
sahf
dec
decb
icebp
mov
mov
movsl
sarl
mov
push
add
push
inc
add
and
mov
mov
xor
loop
sbb
add
dec
rolb
movb
add
ret
or
xchg
sub
xchg
popf
ds
and
addb
add
repz
cltd
aaa
in
xchg
rolb
mov
outsb
test
cmpsl
leave
mov
in
call
out
hlt
pop
add
imul
fwait
movsb
mov
jmp
enter
xchg
stc
aad
jl
lea
inc
mov
add
add
call
mov
data16
add
pop
cmp
imull
cmpsl
and
lahf
inc
rcrl
int3
push
cmp
stc
jg
ja
int
sub
lods
pop
sub
ja
xor
int3
ds
ds
sbb
jae
xchg
pop
mov
fdivrs
or
dec
push
ret
nop
push
loopne
es
mov
cmp
movsb
imul
mov
mov
add
and
push
enter
stc
imul
sti
mov
cld
lcall
pop
loop
sbb
iret
pop
and
mov
pop
popa
cltd
imul
js
cmpsl
lret
xchg
or
push
mov
imul
jl
hlt
xor
adc
icebp
sub
stos
sahf
cmc
fbld
dec
xchg
call
push
mov
aam
or
cld
hlt
pop
test
jb
decb
repnz
inc
add
mov
mov
mov
add
mov
stos
and
lret
jmp
dec
xchg
jns
mov
test
push
fsts
jb
pop
into
loopne
cmp
jl
addb
and
icebp
mov
mov
pop
push
cli
cmc
xor
ds
sbb
fs
add
fisubl
insl
movsl
mov
pop
push
scas
leave
enter
cld
lea
add
adc
add
out
adc
jnp
jl
lahf
int
add
jns
add
aad
fcomip
and
xor
cmp
clc
test
aam
jne
adc
rep
ds
lods
and
or
mov
in
fimuls
divl
push
inc
add
mov
push
inc
add
pop
mov
pop
push
or
test
jne
dec
out
mov
mov
add
sub
dec
daa
push
add
divb
call
push
pop
fldt
dec
inc
add
mov
adc
es
mov
fldl
ffree
add
fcomps
repnz
aas
out
outsb
rorl
gs
sbb
adc
mov
ljmp
inc
add
add
popa
aas
outsb
lea
cmp
scas
test
inc
rcr
fisubl
leave
jp
add
add
inc
rcll
enter
jmp
and
dec
jmp
mov
add
inc
add
mov
jb
jb
inc
fnsave
sub
repz
movsb
aaa
add
push
mov
xchg
cmp
mov
ret
jns
add
xchg
mov
jb
pop
push
mov
adc
fadds
mov
or
dec
or
mov
loop
fildll
dec
add
jno
in
jmp
add
jno
jo
jle
lret
ret
cld
sub
call
cld
aaa
sbb
jp
mov
in
push
movb
pop
cmpsb
mov
sbb
inc
cmp
cmpsl
lcall
out
jle
mov
inc
add
push
push
lret
std
stos
pop
jb
add
xchg
jb
add
addb
gs
inc
pop
push
dec
aam
jle
add
mov
add
ljmp
or
clc
push
test
repz
xor
add
push
push
call
and
or
shll
add
mov
add
add
pushaw
add
lock
jmp
loope
stos
addb
out
jbe
sub
fwait
pop
iret
lods
pop
xor
inc
add
pop
cmp
fwait
notb
xlat
add
scas
add
add
pop
or
xchg
cmp
add
pushf
mov
addr16
aas
xor
imull
sub
adc
scas
mov
adc
mov
mov
or
pop
xchg
ret
or
add
cmp
and
scas
inc
add
das
stos
mov
pop
or
dec
add
inc
add
mov
pop
sbb
and
sbb
push
add
rcl
push
inc
imul
jmp
add
fisttpll
enter
xor
mov
pop
icebp
in
leave
lret
xor
lret
jns
mov
push
in
out
inc
jb
xchg
or
push
add
pop
mov
mov
inc
cmp
mov
adc
das
scas
mov
sbb
cld
or
mov
add
add
aas
cmp
sub
data16
frstor
pop
jle
fwait
xor
push
add
lcall
mov
xor
popa
push
aam
add
xor
or
hlt
clc
sbb
test
sbb
lods
les
repnz
xor
sbb
add
and
addb
jns
icebp
cmp
movd
dec
shlb
add
enter
xchg
in
cmpsl
mov
aad
cwtl
mov
add
sbb
fcoml
xor
push
dec
dec
dec
push
rcrl
mov
out
xor
movb
add
loop
push
jnp
jnp
add
jg
and
adc
outsb
outsb
or
std
fidivs
lret
js
and
inc
add
and
les
xchg
jb
mov
add
jne
mov
jnp
lock
test
xor
xchg
fildll
sbb
insl
and
mov
push
mov
cmpsl
inc
add
pop
adc
jge
stos
int
int3
movsb
gs
loopne
cmp
in
clc
inc
jo
popf
rolb
cli
push
fwait
mov
mov
in
jl
push
mov
add
xchg
jbe
pop
xchg
adc
lret
xchg
cmp
and
ljmp
push
push
push
out
pop
dec
mov
mov
stos
mov
mov
add
mov
ss
fdivrs
dec
add
add
sahf
enter
cmp
jnp
push
adc
push
addr16
add
pop
cltd
adc
lods
mov
test
int
add
cld
test
cmpsb
hlt
jg
dec
or
ret
or
add
rolb
adc
add
cltd
out
popf
outsl
mov
add
enter
lahf
js
add
mov
xchg
push
or
mov
xchg
adc
ja
mov
add
cld
lods
sbb
dec
hlt
lret
add
dec
ficoms
xchg
fucomp
lcall
mov
dec
push
sti
popf
cmpsb
sbb
mov
cld
nop
in
cli
dec
orl
inc
add
xor
scas
cs
mov
dec
dec
mov
xlat
bound
test
stos
adc
ret
add
push
adc
jb
jae
cmp
ficoml
les
add
loope
movsb
es
movsl
imul
call
icebp
pop
mov
push
cmpsb
dec
and
gs
scas
lock
insl
aaa
and
test
insb
inc
mov
outsb
mov
test
shll
or
dec
push
icebp
iret
jecxz
sub
popa
mov
dec
xor
lret
mov
sarl
xchg
clc
ja
addb
test
mull
mov
cmp
pop
push
fwait
bts
mov
out
push
leave
and
xchg
ss
roll
dec
xor
incb
dec
pop
popa
fs
jl
mov
push
ljmp
xor
hlt
mov
jp
div
cltd
lcall
jg
lret
push
mov
sbb
add
push
add
or
mov
mov
jmp
fucomp
in
loop
pop
or
arpl
repnz
popa
cmc
cmpsb
inc
cmp
in
es
fisubs
cmp
rolb
inc
aam
fnstcw
mov
add
xor
hlt
outsb
scas
rolb
add
divl
sbb
jno
dec
sbb
jns
cmp
int
dec
inc
add
pop
es
add
ja
movsl
cltd
hlt
notb
arpl
mov
mov
andl
leave
mov
int3
xchg
sub
imul
jl
into
or
add
add
and
add
cmc
inc
xor
push
pop
and
inc
add
pop
fsubs
jne,pt
push
insb
pop
movsb
fistps
mul
dec
fdivrl
mov
negl
fcomi
lods
pop
js
scas
shrl
jnp
daa
pop
lds
add
add
add
xchg
je
enter
xchg
lcall
cmp
adc
data16
lret
sub
fs
ret
addb
decb
stc
sub
or
jne
sbb
lods
or
movb
mov
sbb
arpl
mov
cld
daa
cmp
xor
out
sbb
add
sahf
dec
ja
repnz
xor
sbb
cmp
push
lods
push
mov
push
add
repz
cmc
mov
xor
or
int
daa
daa
orl
mov
sub
into
adc
inc
add
or
das
pop
fimuls
push
aam
movb
inc
add
cmpsb
movb
mov
adc
add
jl
aas
xchg
sbb
pusha
add
pop
fwait
shr
sarb
mov
mov
repz
xor
cli
int3
mov
xchg
mov
push
jl
loope
mov
add
sbb
push
and
xchg
mov
dec
jecxz
and
add
inc
add
inc
cltd
cmpsb
sub
xchg
in
add
neg
cmp
xchg
inc
mov
xchg
mov
stc
inc
add
data16
add
pop
dec
out
add
lret
leave
addr16
mov
inc
add
push
imul
adc
jg
nop
push
xchg
subl
sub
dec
jb
add
dec
push
jmp
addb
add
jmp
movsl
dec
mov
jns
dec
aam
scas
dec
push
jle
mov
mov
ret
out
cmpsl
rolb
pushl
dec
lods
cld
imul
adc
or
test
add
or
pop
loope
lret
add
fstl
or
addb
dec
cmpsb
adc
mov
and
aam
out
push
arpl
dec
test
in
inc
add
lret
rcrl
add
enter
jg
ljmp
scas
lock
stc
cmp
and
dec
jle
add
cmp
orps
add
lret
xor
ss
add
les
inc
loopne
sbb
cld
xchg
add
lret
mov
jmp
loopne
pop
jne
xchg
mov
inc
add
inc
add
ret
adc
xchg
cmp
dec
dec
xor
mov
adc
dec
xor
xchg
rorb
push
pop
pop
push
mov
jae
addr16
outsl
pop
mov
and
and
mov
repnz
scas
and
or
fwait
icebp
or
jmp
xchg
mov
gs
add
jnp
cmp
lock
bound
pop
es
sahf
lret
push
mov
sarb
mov
aam
push
nop
xor
popa
jbe
add
adc
jns
imul
sahf
ret
popa
jmp
clc
inc
add
sbbl
nop
lahf
iretw
dec
mov
push
daa
dec
mov
pop
mov
addb
pop
mov
test
stc
loopne
js
imul
clc
aas
fisubrl
mov
cmp
push
scas
lret
add
aad
std
imul
jae
inc
dec
xchg
and
add
add
mov
push
jmp
sub
and
mov
outsl
repnz
mov
mov
jmp
fsubl
mul
aas
idiv
call
pusha
add
push
lahf
mov
int
mov
add
dec
dec
adc
leave
imul
int
ja
stos
cmp
fstpt
std
xchg
fistps
sbb
shl
mov
cmp
stos
push
add
pop
lds
mov
pop
loop
jb
test
and
xor
inc
add
mov
lret
ss
addr16
add
jge
mov
test
xchg
lret
cmp
int
icebp
cmp
mov
jb
jl
shrb
mov
cld
movb
outsl
cmc
or
xchg
sub
daa
cmp
out
xchg
movzbl
jns
xor
out
pop
lods
aad
pusha
add
sbb
addb
add
jnp
cmpsb
xor
add
dec
push
dec
lcall
jne
dec
test
aad
dec
imul
lcall
hlt
jge
mov
sbb
fwait
pop
push
dec
add
xchg
mov
or
cmp
jl
push
and
mov
sti
ds
cs
push
stos
pusha
add
loopne
lds
cmp
add
add
call
sub
add
sahf
cs
notb
ret
push
push
out
push
pop
cmp
add
sahf
adc
repnz
mov
jb
sbb
jnp
stos
cmp
adc
add
popa
mov
adc
push
test
movb
int
subl
int
cld
cmp
add
fucomip
jmp
cmp
inc
add
imul
mov
inc
cwtl
popl
add
jo
sti
mov
add
add
inc
jb
in
push
icebp
loop
repz
cs
shll
push
mov
xchg
cld
arpl
pop
push
movsl
addb
test
aas
cmpsb
or
push
pop
lds
xchg
outsb
loop
add
add
das
mov
adc
or
pusha
add
xchg
xlat
add
ficoms
outsl
cltd
xor
lret
dec
pop
ja
ud2
icebp
pop
cmp
inc
cwtl
in
gs
sbb
and
push
push
xchg
in
insb
test
ja
mov
mov
insl
lret
push
pop
jp
xor
xchg
pop
lds
mov
in
xlat
xor
incb
ret
mov
popf
mov
ret
imul
invd
mov
push
cs
pop
int3
popf
or
push
mov
add
jmp
inc
jne
mov
push
xchg
dec
ret
leave
stos
call
sarb
xor
jmp
jbe
lods
cmp
or
in
nop
loope
jg
sbb
lds
mov
cmpsb
clc
cmp
jae
es
jp
sbb
rolb
mov
mov
jp
xchg
fs
add
dec
mov
daa
icebp
xchg
daa
popa
data16
dec
push
mov
bound
out
dec
and
jecxz
push
add
enter
decl
sbb
in
addr16
push
in
pop
mov
iret
scas
add
xor
call
outsl
and
xchg
cmp
stc
add
aas
imul
popf
add
push
test
daa
sbb
push
pop
lea
push
cmc
daa
mov
cmp
jnp
push
cltd
jecxz
jnp
movb
outsb
sbb
mov
rolb
repnz
mov
xchg
mov
adc
mov
fimull
mov
xchg
sbb
and
jnp
push
xchg
mov
fmull
dec
pop
xor
mov
das
into
and
incb
pop
out
outsb
mov
addb
out
and
imul
and
fs
pop
cmp
pop
adc
popf
test
dec
movsb
divb
addl
xor
xor
imul
mov
outsl
jne
pop
into
mov
xor
push
adc
daa
add
mov
pop
inc
add
sbb
arpl
inc
mov
mov
into
repz
xchg
add
sbb
pop
push
cmp
fstpl
xor
inc
add
mov
sub
add
sbb
inc
mov
iret
adc
incb
xor
shl
in
cmpsl
jecxz
inc
cmp
and
add
add
xchg
stos
push
je
cmpsl
xchg
mov
leave
inc
add
lds
out
testb
inc
rclb
xor
sub
aam
incl
sub
sahf
sbb
xchg
pop
stos
loopne
mov
xor
scas
dec
sub
mov
loop
xor
mov
xchg
xor
fldcw
std
cmc
fsubl
bound
sub
mov
add
mov
mov
sbb
iret
sbb
addr16
arpl
shl
fwait
or
fmuls
jg
add
sub
lock
add
mov
or
push
jmp
add
jne
movsb
pushf
push
outsl
in
pop
mov
xor
popa
idivb
push
jl
fs
push
mov
addl
jle
cmc
fidivrl
mov
fcomi
mov
int3
test
add
push
lea
add
imul
or
add
and
inc
add
in
cmovbe
adc
push
mov
mov
push
push
js
fbld
or
sub
fxch
scas
mov
movsl
xchg
mov
add
pusha
add
jb
in
into
fwait
sbb
ret
jne
mov
or
adc
mov
into
fnstsw
movsb
sub
cmp
add
lods
push
sub
lcall
xor
add
into
mov
or
inc
sti
dec
push
inc
aam
loopnew
data16
add
inc
out
jo
iret
dec
ljmp
outsl
sub
cmp
icebp
lea
imul
pop
popf
into
mov
push
leave
lods
push
mov
pop
rolb
or
xor
test
add
inc
jecxz
movb
setno
into
cmc
sub
leave
js
aas
lock
jl
sub
hlt
mov
push
lea
xchg
movsb
les
iret
std
test
ffreep
or
cmp
in
adc
inc
add
cs
jnp
arpl
stc
lock
push
mul
jno
addb
fisubs
add
xchg
xchg
aaa
repz
movb
add
cmc
push
push
xchg
mov
mov
add
mov
sbb
movsl
cmpsl
call
add
push
into
add
repz
lret
mov
jno
popf
ljmp
or
pushf
mov
not
das
cld
pop
loop
aas
pop
enter
push
int3
xor
pop
xor
das
dec
in
mov
inc
add
rcrl
adc
jnp
mov
push
push
adc
jl
or
fsubl
add
sub
call
cmp
add
cmp
mov
bnd
addb
aas
lock
dec
ss
dec
xchg
jae
movsb
aas
sub
sbb
lea
inc
add
push
xor
add
inc
jge
sub
push
sbb
add
pop
aam
lret
and
in
jae
pop
pop
pop
mov
loope
lahf
sbb
lcall
cmc
testl
into
sub
cltd
fsubs
sub
ljmp
add
jg
pop
les
test
sub
and
xor
add
push
mov
jmp
add
mov
push
sbb
add
or
loop
xor
scas
xlat
jmp
jb
xchg
push
rep
fs
add
jmp
iret
xor
add
xor
mov
sarb
pop
or
hlt
test
xor
movsl
fcmovb
add
fsubs
xor
nop
xlat
lcall
and
popf
pop
in
into
lea
ret
xchg
jmp
inc
loope
inc
add
sbb
test
test
mov
and
pop
push
push
adc
addb
dec
sbb
les
lods
stos
imul
ror
movsl
test
lods
sbb
lea
add
add
fs
enter
add
push
fimuls
mov
sahf
cld
stc
in
or
jo
loop
add
add
loop
addb
pop
imul
mov
xor
lock
sbb
nop
aaa
or
jg
hlt
out
test
ret
jmp
dec
jne
das
xor
out
out
pop
add
cmp
xor
iret
and
cmpsb
negb
sub
add
cmp
xchg
call
xchg
cmp
imul
and
imulb
les
mov
inc
add
cmp
mov
and
sbb
mov
inc
add
fwait
arpl
inc
push
out
or
cmp
js
mov
mov
pushaw
add
cmp
jns
jnp
in
inc
add
dec
sti
repnz
jl
sbb
int
cmp
xor
sbb
mov
add
ljmp
or
lock
loope
cmp
xchg
adc
push
dec
push
pop
into
lret
and
adc
lret
pop
sbb
and
jb
dec
js
xchg
dec
ds
xor
cld
test
xchg
push
or
test
ja
add
mov
into
loope
movsb
xchg
hlt
jns
cmpsb
in
loop
add
or
add
or
jmp
adc
out
mov
push
rcpps
bound
cmpsl
xchg
mov
leave
cmp
enter
hlt
lahf
mov
cmp
push
ljmp
movsl
lcall
mov
clc
and
addb
daa
movsl
dec
out
out
gs
sbb
in
lock
or
stos
adc
popa
sub
mov
push
jge
out
ljmp
stos
ds
mov
inc
add
test
or
int3
jecxz
push
imulb
add
mov
cmpsl
mov
out
pop
add
imul
mov
push
add
inc
ret
sarb
sti
in
pop
inc
and
clc
mov
das
and
mov
clc
add
js
bound
imulb
mov
jbe
and
int3
push
xor
cwtl
push
mov
negb
sub
pop
xchg
inc
mov
add
mov
push
push
mov
cmp
jno,pn
jno
push
out
add
add
cltd
push
xchg
insb
mov
icebp
xor
cs
push
jb
mov
sbb
add
mov
shrb
xlat
sbb
xchg
ss
jb
sbb
lods
and
dec
sbb
imul
es
or
lret
movsl
arpl
jb
mov
pop
sbb
xchg
addb
call
scas
and
jecxz
lods
sbb
notl
lods
sahf
cmp
fiaddl
out
mov
add
std
and
xor
and
xchg
icebp
xor
add
fildl
xchg
add
mov
jbe
sbb
mov
aam
add
stos
xchg
push
adc
out
addr16
cli
aad
movsb
test
iret
mov
xor
dec
and
mov
in
imul
adc
sub
lds
ss
add
xor
add
loopne
shll
add
test
mov
cld
cmp
lock
lods
insl
pop
jnp
test
add
clc
mov
fmuls
or
out
idivb
mov
xor
cmc
movsb
or
aas
push
addb
add
sbb
push
in
movsb
rolb
sbb
add
leave
and
std
bound
mov
and
add
add
int3
sub
xor
inc
jbe
pop
mov
push
xchg
sbbl
addb
leave
add
sub
push
lods
pop
xchg
ret
mov
roll
and
push
iret
js
mov
mov
jecxz
mov
push
jg
mov
mov
and
xor
mov
mov
add
das
stos
cs
stos
inc
add
fstpl
dec
mov
add
mulb
mov
add
add
call
add
not
push
add
cmp
sete
add
int
add
not
data16
lds
mov
pushf
push
push
ja
in
cli
mov
enter
scas
lods
testl
cmp
mov
or
add
and
push
xchg
cmp
jecxz
outsl
ss
xor
cld
test
out
jg
add
into
add
out
test
lahf
lahf
xor
insb
xor
jbe
fstl
jno
mov
pop
daa
xchg
jl
in
add
iret
repnz
fisubrs
loop
addl
xor
mov
xlat
arpl
mov
and
mov
add
jne
movsb
cltd
addb
cmp
inc
add
das
inc
testl
cmp
movsl
sbb
cmp
mov
xchg
movb
cmp
popf
arpl
iret
test
sub
stc
cwtl
sub
push
les
std
js
ret
xor
sbb
sbb
pop
lods
loop
data16
lahf
push
dec
sub
push
xor
push
mov
inc
cs
pop
dec
imul
jnp
stc
jns
xchg
and
ljmp
sahf
fs
pusha
add
add
jno
loop
fistl
sbb
ret
push
ret
shrl
add
jne
lret
mov
in
cmpsb
cmp
or
insl
and
cmp
push
sbb
add
mov
pop
in
icebp
rorb
and
bt
dec
and
iret
out
xor
add
jl
mov
add
lret
cmp
fwait
sbb
inc
dec
push
es
cli
pop
push
cmp
imul
addr16
sbb
jp
cmp
daa
jge
cltd
inc
add
add
sub
cwtl
jg
add
ret
xchg
xchg
icebp
in
mov
mov
or
imul
pop
ja
or
and
lahf
jmp
and
into
or
test
js
add
push
cmp
ljmp
daa
sub
icebp
por
sbb
xchg
pop
push
sbbl
add
push
fnstenv
sbb
dec
out
loopne
or
mov
xchg
sbb
and
cmp
push
mov
stos
addb
jg
pop
adc
dec
xchg
mov
and
add
jl
add
push
out
dec
int3
dec
lea
adc
add
movsl
push
add
aad
mov
add
lods
aas
adc
pusha
add
inc
add
sub
aas
popa
out
add
push
mov
add
rolb
xchg
fadd
add
add
push
cmp
push
mov
leave
inc
das
jle
loopne
imul
fdiv
je
gs
jnp
test
inc
mov
mov
iret
cmp
jae
inc
xchg
push
jns
add
or
int3
jne
sbb
insb
xchg
cmp
pop
cmc
add
adc
mov
in
les
add
sub
cmpsl
clc
addr16
mov
push
pop
and
sbb
add
and
or
jo
pop
cmp
push
dec
aaa
cmp
adc
adc
add
adc
rcll
add
test
stos
sub
pop
jne
cmp
and
imul
lds
pop
sarl
movb
mov
mov
sbb
xchg
in
daa
aas
push
rcrl
jno
sbb
call
add
xchg
sub
rcll
add
out
pop
enter
or
insb
lods
pop
xchg
inc
add
or
xor
mov
and
jp
add
xor
cli
and
sub
in
cs
sbb
decb
mov
ret
and
xor
adc
pop
mov
or
stos
movsl
jecxz
das
movsb
pushf
ret
pop
xchg
jl
fiadds
jns
jecxz
jle
adc
leave
pop
shll
addb
enter
adc
std
add
int3
enter
mov
loop
sbb
add
test
lods
adc
push
leave
or
add
xor
xorl
pop
lock
mov
in
xchg
lret
jecxz
and
shr
mov
test
mov
and
add
imul
add
mov
rcrl
jecxz
sub
add
loope
popf
push
adc
add
mov
aaa
inc
cmc
inc
dec
fpatan
pop
add
mov
push
xchg
cmp
arpl
push
mov
lea
out
sub
push
and
dec
push
jb
jle
xor
or
jne
lods
dec
lret
rcll
ret
cs
jle
jne
ss
pop
jmp
xchg
adc
sahf
mov
inc
add
adc
jp
enter
lahf
mov
add
jge
or
loopne
xchg
mov
cld
ds
pop
add
das
rcrl
adc
mov
jmp
repnz
cmpsl
xchg
std
ret
mov
xor
rcrb
cmpsb
fistl
pop
lcall
leave
mov
fcomps
fisubrs
aad
sbb
add
insl
out
add
inc
add
gs
lret
fiadds
jmp
inc
add
inc
pop
mov
xchg
pushf
mov
mov
jo
pop
movsl
or
jmp
stos
aaa
std
mov
aaa
or
push
mov
arpl
jg
je
lret
pop
xchg
ficoml
add
add
jmp
add
fidivl
push
sbb
add
rcrb
pushf
add
addb
sbb
movsb
mov
testl
pop
aad
cmpsl
jno
inc
jge
push
outsb
js
es
dec
fwait
mov
sar
lds
pop
int
add
push
push
add
mov
jno
ds
pop
test
add
lock
adc
dec
shll
add
jne
add
mov
daa
sbb
or
jl
add
jle
cld
cmpsb
movb
add
shrb
es
enter
cmpsl
gs
pop
addb
adc
cwtl
push
mov
sbb
sbb
xchg
test
movsl
mov
add
add
inc
add
mov
outsb
xor
sbb
leave
not
stos
call
add
inc
add
xchg
or
aam
pop
pop
je
popf
icebp
and
test
out
mov
pop
sti
mov
je
jp
xor
cs
clc
les
stc
das
shll
addb
arpl
icebp
mov
lds
add
and
insl
pop
pop
movsl
sub
repnz
subl
add
add
cs
imul
mov
sbb
jne
insl
push
jne
or
pop
xor
scas
xchg
sbb
mov
cmp
in
fldcw
daa
data16
xor
add
rep
sbb
xchg
jbe
in
call
cwtl
std
movsb
sub
fidivl
test
out
add
dec
out
mov
push
mov
adc
add
cmp
pusha
add
xchg
xor
xchg
data16
add
test
sbbl
sub
sahf
push
lods
fstpt
lret
mov
push
imul
mov
aaa
int3
fildll
imul
fwait
insl
cld
aam
mov
ss
addb
jns
and
lock
push
bound
fs
jno
dec
fiadds
popf
stos
add
jg
lods
and
clc
cli
mov
mov
cmp
add
cld
add
jae
mov
xor
jmp
fnstenv
xchg
sbb
add
add
inc
sbb
sbb
mov
sub
adc
jle
dec
std
aaa
xor
adc
hlt
int3
dec
or
mov
insb
leave
psubsw
jge
xchg
pop
movsl
mov
fdivrs
push
lods
ret
push
sub
mov
cmp
dec
subl
addl
out
hlt
scas
sbb
xor
inc
mov
int3
ss
lea
ja
inc
pop
xchg
xor
dec
sub
inc
out
or
push
dec
fs
loope
xor
cltd
or
push
inc
cmp
pop
negb
into
bound
dec
push
adc
call
stc
icebp
or
sbb
pop
sbb
add
rolb
lock
jg
je
add
xlat
or
add
push
add
outsl
mov
arpl
in
scas
push
movsl
xor
cmp
cld
rclb
ja
test
dec
jecxz
mov
push
cmc
push
dec
push
mov
bound
insb
nop
addb
fwait
jno
sbb
in
lcall
mov
std
fs
push
shll
test
cmpsb
mov
lret
add
pop
or
jle
mov
stos
scas
adc
mov
lds
add
add
sub
jb
jmp
test
es
mov
mov
xor
add
int3
inc
mov
xor
xlat
mov
mov
push
test
in
sub
mov
jbe
xlat
pop
sbb
pop
sub
dec
gs
ret
scas
cmp
fisubs
clc
mov
lods
jb
addb
sbb
push
add
pop
iret
aaa
imulb
or
addr16
cmovl
frstor
jb
pusha
add
nop
das
mov
out
mov
xchg
cs
pushf
mov
push
xor
pop
cmp
or
arpl
lahf
and
inc
xchg
outsb
jl
movsb
sbb
fdivp
lret
call
setne
in
sarl
inc
add
push
xchg
aam
dec
pop
bound
out
push
or
add
adc
aas
push
jmp
cmpsb
fdiv
lcall
sub
add
scas
jg
aam
unpcklps
add
mov
jns
jae
sbb
adc
cmp
hlt
outsb
fdivs
sti
sbb
mov
add
jle
out
push
out
or
into
lods
push
pop
xor
lcall
out
lds
stc
add
leave
das
add
mov
fnstenv
jmp
insl
xchg
icebp
pushf
push
cli
mov
clc
pop
subl
ret
ds
adc
push
jns
int
and
sub
jl
ja
sub
xchg
out
adc
xorl
in
mov
push
notl
push
cltd
cmc
adc
inc
add
adc
adc
stos
out
pop
out
mov
pusha
add
sub
push
mov
ljmp
xchg
popl
inc
add
push
or
add
arpl
xchg
insl
push
mov
out
jle
mul
mov
sub
loop
in
cwtl
out
jp
add
add
out
mov
pop
rcrl
ja
and
and
insl
or
and
pop
cmp
sahf
stos
mov
add
and
movsl
inc
shll
ficomps
repnz
inc
arpl
inc
movsl
adc
mov
cli
dec
test
jb
pop
xchg
mov
add
mov
cmp
les
dec
pop
and
mov
inc
scas
push
lahf
fcoml
xchg
xor
cmpsb
movsb
mov
ret
add
iret
je
jecxz
mov
ret
or
addr16
or
jno
int
add
imul
xor
popf
lret
jbe
pop
push
inc
push
cmp
mov
mov
mov
xchg
inc
mov
add
hlt
test
mov
shl
aas
lcall
scas
mov
insl
xor
mov
fiadds
rorb
xor
outsb
push
clc
cmp
sarb
xor
dec
fs
jmp
repnz
sbb
pop
add
mov
adc
xchg
inc
fnstcw
add
fidivrl
add
lea
push
loope
roll
push
inc
add
mov
enter
insl
adc
hlt
icebp
clc
fnstsw
stos
out
call
cli
shrb
or
push
add
sub
int3
inc
add
add
add
stc
cmc
lock
pop
mov
mov
dec
pop
gs
mov
pop
stos
leave
iret
xor
jl
push
pop
scas
movsl
lods
push
pop
cltd
inc
lock
add
test
add
push
mov
add
inc
pop
pop
fsubl
bound
divl
sbb
shlb
add
movb
je
in
scas
push
add
jns
into
inc
add
clc
fisttpl
push
rolb
add
lahf
loope
fstpl
clc
mov
cmp
add
mov
mov
lods
in
xor
cmpsb
stc
pop
xor
ss
jns
add
add
mov
mov
cmpsl
stos
roll
mov
mov
cmc
or
mov
repnz
add
jge
in
or
lcall
xchg
inc
fstl
mov
lods
and
enter
and
push
add
lcall
addb
nop
jecxz
xchg
pop
inc
add
cli
rolb
pop
arpl
xchg
loop
bound
imulb
push
pop
in
xor
imul
cwtl
lods
cmc
jmp
movl
add
push
or
xor
push
push
movb
stos
or
mov
cmp
fiaddl
xchg
mov
pop
or
js
mov
jo
mov
icebp
pop
enter
inc
mov
mov
add
adc
addb
xchg
jle
movsl
mov
dec
repz
lret
popf
stc
and
rol
jno
ja
adc
xchg
dec
sbb
test
pop
dec
pop
push
adc
add
mov
fs
add
out
fstpt
mov
inc
jnp
out
out
jbe
in
sbb
ret
mov
shlb
in
sub
dec
jg
mov
add
leave
fimuls
add
cwtl
add
jle
popf
dec
xchg
data16
adc
cwtl
rolb
add
sub
inc
add
mov
cmp
pop
pop
inc
dec
cmp
jge
cmp
xor
pop
jno
ret
dec
xchg
sbb
fcoml
xchg
cmp
mov
cmp
mov
add
ror
sbb
inc
lcall
out
aas
cmpsb
push
push
push
xor
mov
and
cli
pop
aas
out
in
sti
mov
xor
jl
mov
mov
or
movb
cltd
shll
add
xchg
in
adc
jecxz
xchg
inc
add
shrb
adc
add
xor
subl
repnz
xchg
or
dec
push
add
dec
enter
cmp
ficoms
enter
rcrl
mov
mov
stos
lcall
pop
addb
notl
popa
lcall
mov
mov
sbb
outsb
or
sarl
stc
jge
jp
adc
cmp
pushf
shl
in
sub
add
push
testb
lods
test
dec
cli
fbstp
lret
mov
rcll
inc
add
cmpsl
and
mov
sbb
test
bound
xor
add
imul
adc
sbb
sbb
add
dec
stos
push
mov
fsubl
sub
sub
gs
andl
aaa
lahf
cmpsb
jp
jbe
ror
repz
testl
xor
mov
fidivs
pop
mov
or
pop
mov
mov
xor
pusha
add
or
jns
sub
add
sub
je
mov
cmp
push
dec
jo
jmp
add
or
xor
mov
ret
shlb
xor
inc
pop
mov
mov
mov
loop
add
loopne
nop
outsl
add
push
pop
cltd
dec
xchg
imul
loopne
aam
mov
fsubs
fisubrl
pextrw
adc
pop
dec
push
push
add
rolb
cld
outsb
pop
ljmp
aam
popa
fwait
dec
ss
mov
mov
xchg
dec
ror
lcall
cmp
jmp
mov
add
adc
aad
xchg
test
adc
push
pop
cmp
lock
mov
imul
loopne
pop
inc
add
and
sbb
pop
je
lcall
dec
fs
icebp
ret
jp
and
setle
push
jo
push
cmc
cmp
cmp
sub
test
jmp
add
pop
gs
sti
stos
xchg
jae
jns
out
lock
add
lret
into
or
movb
dec
pop
cmp
in
movb
add
stos
adc
rcrl
push
push
xor
test
pop
mov
mov
mov
jno
dec
stc
pusha
add
lcall
fisttpll
out
nop
cmp
jae
add
imul
rcrb
xchg
push
mov
xlat
scas
repz
or
inc
mov
add
std
and
fmulp
cmp
push
push
jmp
sahf
rolb
movsb
fsubrs
mov
add
inc
add
adc
mov
pop
icebp
sbb
push
into
pop
xchg
out
movsl
mov
aam
mov
push
inc
in
and
xor
sarb
pop
pushf
fldl2e
and
add
push
and
mov
add
mov
mov
lahf
mov
add
sbb
mov
nop
add
mov
push
jnp
insl
mov
sub
fbstp
movb
outsl
pop
pop
out
add
add
in
sub
xchg
cld
nop
xchg
or
dec
xor
inc
add
cs
dec
cmp
movsb
pop
lock
adc
test
sbb
cltd
xlat
inc
add
add
add
sub
push
push
adc
jne
test
inc
add
inc
roll
fs
iret
pushl
push
leave
addl
add
lea
in
or
and
jecxz
pop
push
stc
sub
popf
rcrl
sahf
sub
test
inc
add
out
jno
push
inc
add
inc
add
into
jge
pop
fistps
lods
jbe
adc
fnstcw
les
jp
jmp
je
out
ret
mov
jle
mov
adc
pop
lock
add
add
and
pusha
add
add
cmp
sub
pop
adc
mov
add
div
dec
setb
xchg
cmp
jecxz
jecxz
xchg
xchg
jecxz
adc
aaa
fdivp
lret
xchg
fwait
dec
sahf
mov
ss
lock
int3
push
sub
and
and
enter
iret
sbb
mov
shl
sbb
pop
mov
scas
imul
push
rolb
ret
xchg
mov
sahf
in
xor
or
add
aaa
push
mov
sub
loope
xchg
dec
popf
ja
or
test
and
mov
mov
jb
outsl
nop
adcl
out
mov
lods
sbb
divl
in
push
stc
cmp
sub
dec
lcall
and
or
add
push
scas
aad
outsb
mov
ret
shrl
mov
mov
cmp
dec
mov
idivb
sbb
xchg
mov
sbb
aam
adc
xor
pop
and
add
fcmovb
xchg
popa
pop
daa
push
pop
inc
pusha
add
out
xchg
test
cmpsl
jg
cmc
pop
sahf
aad
add
add
roll
stos
inc
add
fwait
pusha
add
fwait
aam
pop
ret
cmpsb
sbb
inc
and
lahf
ljmp
out
add
inc
adc
pop
sub
mov
lahf
nop
arpl
xor
aas
jbe
xchg
cmp
jle
rolb
sub
jmp
inc
add
mov
in
jecxz
add
add
pop
xor
xchg
mov
out
push
add
pop
sbb
pop
vphsubdq
rcrb
sub
and
adc
dec
cld
cltd
les
fldcw
repnz
cltd
mov
push
adc
out
add
lds
jo
pushf
pop
popf
hlt
test
push
add
push
xor
xlat
ja
ss
xchg
outsl
jae
add
or
jle
add
mov
cmpsl
mov
xor
rolb
cmp
ss
xchg
hlt
pusha
add
ja
ret
shlb
pop
pop
rolb
pop
lahf
rolb
sbb
or
xlat
fdivs
fcomp
jg
repnz
aad
push
pop
fsubl
cmp
add
mov
movsl
stos
or
lahf
ret
roll
repz
push
popa
sub
movhps
icebp
add
inc
add
xchg
sub
jb
sub
add
arpl
addb
pop
jne
cld
mov
cld
fidivl
cmp
sbb
jmp
lock
xorl
or
add
nop
shlb
test
test
pop
cli
cli
stos
addb
mov
jle
ss
aad
jnp
in
out
jbe
add
fnsave
fdivs
jg
cwtl
cld
pusha
add
adc
adc
int3
mov
adc
lds
add
adc
sub
fcoms
leave
fidivs
enter
cmp
icebp
xor
jmp
or
scas
test
int3
cwtl
pushf
sbbl
add
add
ljmp
andl
pop
repnz
pop
mov
std
dec
les
bound
add
fisubrl
mov
lea
pop
jmp
lret
dec
cs
scas
test
loopne
push
jno
adc
pop
pop
mov
cli
pop
fs
add
lods
ss
iret
push
and
les
push
mov
adc
xor
mov
mov
mov
add
andl
outsl
or
inc
je
inc
add
add
sbb
mov
pop
xor
cmc
std
xchg
pop
sub
imul
test
fs
dec
cmpsl
imul
daa
mov
xchg
inc
add
dec
mov
adc
jge
sbb
iret
lea
inc
and
mov
xor
xchg
insb
pop
adc
jge
push
test
mov
nop
je
jp
inc
add
jmp
mov
pushf
cmp
mov
std
rclb
divl
inc
add
add
and
mov
add
or
test
dec
push
sbb
xchg
sar
inc
ficoml
fmul
lea
mov
sub
lock
sbb
and
in
scas
imul
cs
sub
cmp
ret
xchg
lea
mov
inc
sbb
cmp
lds
push
jl
mov
xorl
inc
add
mov
lods
bswap
loop
sub
inc
cmp
mov
ds
mov
outsb
repnz
or
loopne
add
push
stc
xchg
in
mov
mov
nop
inc
add
inc
mov
jae
ja
add
test
or
mov
repnz
cmp
sub
add
add
jmp
mov
inc
add
lods
outsl
in
adc
jne
jg
data16
xor
inc
pop
in
popa
xor
in
cmp
add
xor
scas
jle
pop
xchg
jae
xchg
es
cmp
add
add
mov
adc
hlt
cld
jp
cmp
sub
sub
dec
gs
cs
adc
mov
add
out
sbb
loope
mov
push
fnstsw
xlat
cmpsb
mov
insb
insl
loope
shlb
loopne
add
insl
push
push
repnz
es
push
call
and
add
jns
sbb
ss
out
pushl
movsb
mov
add
jmp
sbb
and
add
push
jecxz
xlat
push
call
or
sub
lods
ficoml
aad
lret
insb
pop
roll
xor
jle
rcrl
xchg
decl
mov
call
push
les
popf
ss
adc
adc
push
inc
movsb
pop
cmp
imul
jbe
push
and
enter
cld
sbb
dec
add
sbb
xchg
add
fstps
and
jp
pop
in
add
push
push
or
int
popa
insb
mov
insl
jns
push
aas
mov
pop
add
push
int
jle
add
daa
dec
imul
or
mov
jmp
jnp
mov
sbb
fiadds
xor
faddl
ss
inc
push
ja
cmp
mov
jbe
add
ret
push
int3
sbb
filds
push
mov
push
pop
loope
dec
ss
mov
pop
sub
rolb
rclb
clc
xchg
jb
ret
in
add
sub
mov
inc
push
sti
lret
mov
ret
ficoms
add
mov
adc
and
jbe
js
out
sub
loope
cmp
xor
or
push
orl
movsb
or
pop
clc
push
xor
jno
dec
mov
fsts
movl
test
mov
mov
cwtl
repnz
pop
or
imul
das
sbb
movsl
negl
add
cli
mov
mov
out
out
jp
inc
add
dec
shr
movsb
pop
sbb
dec
pop
mov
cmp
cmp
inc
ds
ljmp
mov
add
mov
sub
aaa
adc
sahf
sbb
clc
testb
es
imul
cmp
fwait
int
jl
add
lret
and
lds
mov
fld
enter
fcmovne
cmpsl
aaa
outsl
je
cmp
mov
sarl
add
add
mov
ret
pop
outsl
jge
fnstcw
add
mov
mov
mov
data16
movsl
xchg
fldenv
sbb
lods
xlat
fnstenv
add
and
jne
aad
push
scas
mov
xchg
mov
add
sbb
loope
into
cmpsb
aam
mov
pop
pop
mov
ror
movsl
mov
mov
gs
outsl
sub
inc
icebp
fildll
pop
xchg
dec
pop
movb
mov
stc
cmp
in
fsubs
or
push
sub
mov
pop
sbb
adc
mov
jl
cwtl
add
add
pusha
add
out
mov
lea
pop
cmp
popf
rorb
std
lahf
push
or
adc
add
or
jp
mov
pop
mov
mov
mov
lds
nop
mov
jno
add
repnz
movsb
rcrl
and
dec
daa
sub
or
pop
ret
cld
mov
push
add
sbb
xchg
in
cmp
lock
outsl
jmp
add
xor
or
add
push
add
movsb
gs
ljmp
pop
sbb
add
add
and
inc
sub
add
push
add
add
and
dec
xor
test
mov
sub
insb
jmp
pop
pop
pop
xor
add
push
aaa
jne
mov
pop
mov
jge
imul
rcr
js
add
inc
push
cmpsb
in
add
icebp
movsb
jle
leave
movb
test
aas
shlb
xor
mov
inc
pop
xchg
imul
dec
fnstsw
xorl
outsl
jle
sbb
lods
es
out
outsl
or
or
sub
lods
lcall
dec
sarl
ljmp
xor
sbb
add
pop
or
sbb
push
subl
mov
mov
flds
jle
inc
jecxz
into
push
shrb
add
shrb
cmp
das
inc
add
sti
adc
or
es
subl
cmpsb
lock
sti
popa
push
mov
lea
dec
push
loop
add
jne
cmp
pusha
add
fisubs
and
lcall
mov
add
add
ret
out
add
insl
push
mov
cld
sub
add
pop
or
stc
imulb
adc
insb
lahf
adc
push
mov
faddl
or
cmp
jge
push
cmp
repz
arpl
bound
sub
dec
in
lret
push
dec
inc
add
repz
jp
jne
push
and
daa
mov
xchg
movsb
test
add
repnz
out
fdivr
sub
or
inc
add
add
ss
jo
jo
xchg
test
movb
call
fwait
mov
aad
dec
cmp
add
in
push
mov
mov
add
mov
sbb
outsl
loope
xchg
xchg
out
add
dec
push
xchg
mov
add
and
cmpsb
inc
add
adc
popa
jo
adc
scas
popa
and
xchg
sub
cmpsb
push
add
scas
pop
lcall
push
mov
adc
je
or
fldenv
out
in
add
xchg
mov
nop
sahf
movb
mov
jle
xor
xchg
add
sub
in
adc
jns
jmp
fisttps
add
loop
dec
cmp
ja
pop
jg
bound
sti
cmc
and
inc
add
ja
push
icebp
leave
sti
cmpsl
sbb
int3
push
pop
and
enter
sub
das
in
lcall
push
out
sti
xchg
lcall
or
xor
outsb
loope
popf
or
dec
pop
xchg
jg
add
ds
out
fisubs
idivl
pop
in
fadds
add
jo
push
mov
add
sub
lahf
in
push
and
sti
inc
dec
mov
add
push
add
add
mov
test
pop
iret
addr16
imul
xchg
aam
add
jbe
test
push
fldenv
lods
jg
out
jnp
pop
jl
out
lret
je
repz
and
add
mov
add
add
fdivr
ljmp
xchg
pop
repnz
xlat
jmp
js
or
add
roll
and
add
jne
pop
dec
jmp
sbb
inc
add
lds
leave
nop
lock
add
adc
and
add
enter
cli
das
mov
xchg
insl
in
mov
pop
cmc
arpl
push
mov
pushf
ja
push
hlt
inc
add
jo
addb
nop
xchg
push
decl
hlt
push
jb
dec
xchg
xor
loope
es
faddp
inc
add
adc
mov
mov
dec
lock
sbb
ja
dec
out
add
xlat
test
shll
mov
cmp
add
dec
push
xchg
lret
popa
pop
and
test
push
in
sti
xorl
outsb
loope
sub
neg
inc
add
add
inc
add
and
jne
fwait
mov
mov
ss
icebp
cli
jne
adc
movb
das
inc
add
adc
jns
add
sbb
js
dec
shll
add
inc
push
add
incb
mov
mov
xor
add
add
sbb
mov
cmp
inc
add
add
flds
push
es
xchg
add
movb
xchg
or
addb
fdiv
imul
sub
hlt
and
and
add
call
sbb
add
jmp
les
stos
dec
out
push
int3
jle
fstp
dec
subl
inc
scas
mov
popa
out
mov
daa
sti
in
and
xorl
aam
jbe
movsl
sbb
scas
arpl
fnstcw
in
inc
add
scas
jmp
lcall
cmp
pop
int
mov
add
sbb
lock
xor
dec
xchg
repz
clc
dec
cmp
dec
or
dec
insb
rcl
test
loop
loopne
faddl
mov
sub
dec
jne
push
sbb
adc
cltd
mov
or
cmp
test
adc
add
fimuls
imul
rolb
les
cltd
insb
jae
and
fwait
mov
scas
fsubl
mov
sbb
mov
outsl
cld
mov
push
shl
ja
jae
pop
mov
mov
ss
add
add
xchg
xchg
out
add
xchg
ss
mov
pop
cmpsl
add
jns
sahf
clc
call
add
adc
push
cmc
cmc
mov
fistpl
sub
movsb
mov
sub
lea
insl
mov
mov
bound
stos
mov
popf
pop
push
cmc
inc
add
xor
loop
and
add
inc
add
cmpsl
sbb
add
scas
ret
movsl
movsl
pop
and
je
fucomip
push
push
or
dec
xor
arpl
mov
repz
cmp
shl
stos
adc
add
or
jl
test
das
mov
push
data16
sbbl
dec
js
mov
push
mov
cmp
jecxz
lahf
addb
outsl
xor
daa
mov
lods
or
fisubrl
movsb
fldl
add
xchg
xor
cmp
ret
data16
lret
sbb
mov
or
cmp
mov
fcmovnbe
jae
popf
cmp
addb
mov
mov
add
int3
js
and
fsubrp
pusha
add
and
sbb
cltd
insl
mov
cmp
bound
add
lods
xchg
sub
or
aas
lahf
lret
jge
fdivs
pop
push
loopne
xchg
outsb
push
test
hlt
std
into
add
add
mov
popl
add
imul
push
adc
sbb
jno
push
cmp
or
test
xchg
sbb
add
add
add
call
fs
add
inc
outsb
scas
adcl
sub
xchg
fwait
jne
or
fstl
add
jne
pop
shrl
out
in
repz
ja
aad
js
mov
push
iret
add
outsl
inc
add
lods
fistpll
xor
push
jo
xor
insl
inc
sti
in
in
adc
ret
in
xor
add
pushf
repz
add
in
fsubrs
rolb
sti
ret
stc
xchg
inc
sbb
adc
adc
fstl
mov
addr16
cmc
adc
pop
jmp
lret
mov
add
out
or
aam
mov
or
xchg
inc
add
dec
push
adc
dec
add
rolb
lret
call
adc
add
cmovo
stc
jno
add
clc
xchg
inc
add
adc
cld
sbb
movsl
mov
loope
lret
cmp
mov
pop
lret
ret
imul
jmp
jne
icebp
imul
rorl
xlat
lahf
jge
cmp
lods
jae
sub
jnp
ds
ja
add
jb
mov
lcall
daa
sarl
icebp
mov
imul
popf
push
sbb
fsubrs
scas
lcall
cmp
cmp
add
mov
add
lret
xchg
movsl
addl
out
mov
mov
mov
lods
ljmp
jg
add
inc
ja
mov
sbb
jl
int
imul
daa
rcr
enter
mov
jae
shlb
inc
add
mov
jb
jmp
dec
ret
imul
in
mov
subl
add
inc
and
mov
sub
pop
clc
dec
aas
xor
sbb
adc
stos
outsb
aaa
mov
xor
in
dec
jp
lea
add
mov
aaa
sub
imul
in
jne
subl
fldenv
sbb
dec
in
push
outsl
movsb
movsl
ret
test
into
loopne
inc
add
mov
int
cmp
movsb
add
add
imul
mov
in
adcl
or
rclb
je
jge
lods
sub
push
sti
dec
lods
rolb
ret
cmc
xchg
fs
leave
out
movsl
ljmp
push
lock
in
fisubl
scas
clc
int
push
push
jl
shll
pop
addr16
fdivrl
int
clc
cli
lods
rcr
mov
cltd
stos
dec
mov
loopne
mov
or
xchg
jbe
add
adc
push
cmp
bound
insb
xchg
test
fdivrl
mov
fs
or
inc
add
inc
add
cmp
int
push
dec
pusha
add
es
hlt
jns
fldenv
insb
xchg
lret
mov
add
fcoms
push
and
push
movsb
addb
add
sbb
add
cmc
adc
add
mov
jle
add
add
cmp
cmp
mov
imul
mov
cmp
xor
outsb
dec
lods
xchg
jbe
lock
test
cmp
cmpsl
lret
loope
out
fldenv
adc
add
xor
jmp
idivl
sbb
mov
push
mov
sbb
bound
cmp
jle
movsb
xor
xchg
movb
test
pop
xchg
dec
mov
sub
cmc
lods
push
inc
add
or
out
insb
xchg
cld
sbb
js
mov
stos
aas
dec
mov
decl
movb
push
mov
push
sub
std
jb
add
mov
dec
outsb
jno
dec
xchg
or
mov
add
mov
les
ss
sbb
sbb
push
add
mov
mov
hlt
mov
lcall
inc
pushf
hlt
sbb
mov
std
insb
sub
push
add
dec
mov
lret
decb
adc
in
sar
dec
and
inc
adc
rcr
inc
add
xchg
mov
push
outsl
jmp
outsl
xchg
pushf
inc
incb
and
fildll
fildl
ret
je
jns
test
push
add
into
cmp
fwait
cmp
outsb
scas
inc
mov
add
push
or
out
mov
add
jp
test
adc
fistl
lock
fdivrl
hlt
adc
rol
add
sub
stc
jae
xchg
cmp
fstpt
cmpl
clc
sbb
mov
orl
shll
inc
mov
or
dec
addr16
mov
mov
pushf
arpl
pop
fnstcw
adc
push
sarb
and
cmp
sti
test
mov
imulb
mov
add
jl
sar
or
pop
outsb
inc
jb
add
pusha
add
adc
add
mov
mov
mov
or
cmpsl
mov
stc
mov
mov
mov
pushl
xchg
notl
sti
jmp
fists
sbb
mov
dec
repz
add
or
hlt
mov
pop
xchg
pushf
jmp
mov
add
xor
int
push
fcompl
push
sti
outsl
ljmp
pop
lds
aaa
dec
xchg
jge
sti
jnp
into
dec
mov
xor
scas
or
addb
test
and
push
repnz
dec
test
xor
add
and
mov
sub
into
fimuls
ret
out
test
pusha
add
loop
sbb
cmp
pop
dec
lods
and
into
insb
cld
sbb
add
sbbl
popa
lods
aad
in
enter
ss
insl
lret
mov
xchg
jnp
dec
mov
nop
jg
xor
add
mov
add
lea
and
jne
pop
repnz
add
call
dec
movsl
adc
lock
repz
hlt
je
sbb
push
add
jmp
mov
push
cwtl
and
mov
das
mov
jb
mov
sub
into
addb
addb
and
inc
add
addl
adc
add
ficoms
xor
xor
dec
fsubrs
or
adc
fwait
push
adc
adc
ret
fmuls
or
add
add
stos
int3
mov
ljmp
or
inc
or
icebp
mov
push
jp
add
push
pop
ror
add
loop
xor
jge
sbb
imul
jae
push
loopne
push
sub
je
stos
iret
xchg
push
jl
push
push
loop
outsb
icebp
xchg
flds
xor
add
notb
mov
push
lock
hlt
sbb
loop
jp
cmpsl
pop
pop
sbb
fcomip
gs
insb
add
mov
add
les
lcall
jp
or
add
lret
jge
jl
pop
xchg
cmp
inc
add
jle
sti
and
outsb
fisttps
cld
pop
and
pop
out
movsb
and
in
cltd
pop
imul
in
mov
pop
cmp
fs
mov
add
dec
shlb
jno
enter
repnz
or
mov
mov
insl
int3
adc
sub
xchg
pusha
add
out
movsl
ret
rolb
or
xor
test
dec
mov
jbe
jno
add
in
mov
inc
add
ret
sahf
fdivr
std
enter
loope
jne
and
aaa
fldl
xor
aas
aaa
jp
dec
rolb
add
push
loope
sbb
jnp
mov
iret
xorl
sbb
jae
cmp
jbe
in
inc
mov
paddsb
or
dec
xor
sarl
js
sbb
dec
pop
ss
sbbl
lret
cmp
popf
cltd
stos
mov
les
push
popf
jp
dec
call
xor
xchg
push
mov
aas
enter
add
pushf
ret
jl
pop
xchg
sbb
push
add
cmp
stc
iret
xchg
shll
dec
call
push
or
mov
add
mov
pop
dec
loopne
addb
add
push
xchg
add
lcall
jg
push
fstl
jle
jbe
mov
or
sub
inc
add
and
out
xchg
arpl
dec
jle
pop
popf
int
xor
pop
lret
push
sahf
out
cmp
lods
int
add
add
popa
inc
movsb
push
mov
xchg
in
xor
pop
fcom
lcall
add
add
mov
dec
xchg
dec
mov
pop
rorl
sub
mov
outsb
jno
jbe
aad
leave
xorl
push
pushf
push
mov
mov
mov
xchg
test
sbb
sbb
xchg
fistpll
popa
pop
add
cmp
insl
jns
jae
loope
push
mov
in
pop
jmp
pmuludq
add
pushf
push
lock
add
add
je
icebp
mov
repz
in
jg
mov
mov
addr16
movsb
pusha
add
ja
cmp
or
daa
xor
aas
inc
pop
jmp
xchg
pop
dec
out
loopne
loope
test
xor
repz
add
js
addb
add
push
xchg
add
orl
mov
fs
xchg
jmp
and
lea
mov
adc
orl
or
push
adc
inc
add
dec
faddl
loop
sbb
fxtract
xchg
jo
js
inc
dec
or
insl
pushf
mov
cmp
adc
sub
sub
add
add
movsb
les
cmp
out
sbb
mov
xchg
pop
aad
mov
test
and
icebp
jmp
mov
push
arpl
add
mov
add
xchg
inc
mov
out
daa
add
popa
mov
pushf
cmp
add
ret
push
pop
shll
fidivs
jmp
mov
adc
iret
ficoml
add
fadds
sti
sbb
clc
jp
jge
jno
adc
push
jecxz
ss
sub
add
or
sbb
movsl
ss
add
stos
lret
testl
pop
and
xor
pop
test
insl
and
add
gs
xchg
jo
rcrb
jecxz
scas
and
push
in
sub
jns
lcall
ljmp
sbb
shl
push
cld
jne
repz
or
out
xor
cmpsl
cmpsl
mov
insb
xor
std
dec
mov
jae
add
cwtl
xor
insb
imul
cmp
push
add
iret
xchg
nop
cmpsl
bound
addr16
inc
outsb
dec
cmp
mov
push
lahf
out
inc
add
or
test
adc
jno
icebp
mov
adc
inc
add
jl
sub
xor
add
xchg
mov
int
mov
inc
add
mov
fsts
pop
dec
popf
sahf
dec
mov
movb
call
nop
pop
jns
sub
add
or
sbb
sahf
pop
dec
pop
rolb
xor
pop
sti
xor
cmc
dec
and
add
icebp
push
add
jno
mov
pop
test
pop
cli
cmpsb
mov
mov
lret
and
stos
cmp
sub
add
ds
jns
sub
mov
add
mov
enter
aaa
fwait
ret
aaa
push
push
jb
xor
jnp
in
inc
lods
cmpl
iret
call
ja
adc
out
adc
add
clc
mov
ja
sahf
enter
xchg
mov
add
add
pop
jl
sub
xchg
js
adcl
movb
aas
mov
add
push
fbstp
hlt
daa
adc
xchg
mov
jb
aam
ja
scas
mov
and
out
fdivrs
aam
push
cmc
pop
js
xor
sti
push
mov
add
add
stc
movb
add
cmp
xchg
outsl
popa
sbb
js
mov
into
pop
faddl
add
xchg
in
add
popa
mov
add
negl
imul
sub
sarl
lret
data16
js
fwait
inc
add
arpl
xor
mov
jle
push
push
sub
mov
dec
imul
pop
or
pop
fwait
repz
cmp
je
js
lret
test
dec
repz
fistpll
add
icebp
sbb
dec
ljmp
jecxz
in
outsb
or
jbe
add
sbb
sub
fmulp
movsl
jno
lcall
jbe
or
jae
adc
out
jne
jge
or
movsl
out
outsl
lret
cmpl
pusha
add
sbb
jle
xor
fstl
mov
movb
movsl
inc
add
xchg
sub
iret
pop
push
insl
ficoms
popf
jns
ret
mov
stos
add
in
and
xor
xor
mov
daa
mov
mov
add
test
ret
or
pop
cmpsb
addb
mov
mov
dec
sbb
insl
adc
cmp
adc
negb
pop
movsl
push
push
out
lods
int
and
xchg
testb
cmpsl
adc
and
pop
jge
ret
in
pop
xchg
add
sub
sub
fprem
pop
push
sbb
mov
inc
add
mov
mov
enter
in
int3
pop
daa
rcrb
cmp
hlt
xchg
push
dec
idivl
or
movsb
clc
sub
add
outsl
add
mov
dec
aam
push
add
mov
adc
adc
pop
call
idivl
leave
out
scas
add
jnp
movaps
pop
loopne
pop
push
cmp
pop
mov
addb
stos
xchg
lods
push
pop
iret
pusha
add
outsl
adc
add
inc
xchg
jo
add
or
mov
push
shll
daa
sub
adc
or
stos
push
dec
mov
cmp
adc
mov
stos
mov
shll
xsave
faddl
jnp
mov
sub
inc
lret
mov
les
add
pop
lcall
mov
lods
pop
rorb
add
jp
addb
test
mov
fiadds
pop
shrb
out
iret
in
je
add
xor
loop
sub
scas
nop
pop
mov
mov
xchg
mov
jnp
fistpll
inc
add
dec
imul
add
out
push
leave
pop
lret
add
sbb
inc
lock
sub
mov
in
push
xor
xchg
sub
and
je
addb
add
nop
cmp
add
stos
lahf
ror
addr16
das
test
mov
outsb
sub
fldcw
imull
sbb
inc
add
mov
lds
scas
push
jbe
add
int
roll
add
js
lods
adc
ret
jecxz
fcompl
or
mov
hlt
stos
xchg
push
fnsave
mov
jp
pop
scas
dec
pusha
add
mov
xchg
xchg
movsb
adc
pop
pusha
add
xlat
idiv
imul
push
stos
lcall
pop
xchg
jae
push
and
inc
inc
test
push
ret
mov
aam
fyl2xp1
push
dec
stos
fdivl
cmp
add
or
push
or
xchg
ret
or
jmp
inc
add
imul
cmpsl
mov
imul
add
xlat
mov
push
add
sbb
insb
loopne
add
mov
sbb
pop
sub
mov
inc
add
fdivs
test
popa
leave
jle
scas
into
mov
ficompl
jo
or
xchg
cmp
mov
das
jb
cs
or
clc
pusha
add
popa
lahf
jae
addb
inc
add
es
int
shll
push
adc
push
cmp
imulb
pop
dec
sbb
or
xor
pop
cld
push
pop
ds
adc
stos
inc
mov
clc
inc
add
mov
adc
or
dec
xchg
outsl
data16
mov
xor
mov
daa
xor
iret
sti
fs
xor
xor
and
cltd
stos
inc
mov
jp
iret
lds
fistpll
mov
icebp
mov
jne
pmaddwd
mov
push
sub
sti
clc
sbb
xchg
mov
add
add
push
pushf
ljmp
call
or
xor
inc
add
jbe
or
sbb
adc
call
in
adc
jnp
xlat
shlb
mov
aaa
sub
imul
xchg
inc
add
dec
daa
addb
iret
adc
or
xor
mov
push
sbb
call
fwait
cmp
and
outsb
xor
add
mov
aas
fldenv
insl
ficomps
addb
nop
push
aad
dec
jg
adc
xchg
rcrb
xor
add
pop
jb
int3
loope
mov
into
jmp
xor
lea
das
mov
cmp
inc
xlat
loopne
add
xchg
enter
push
scas
xchg
mov
ljmp
ljmp
push
std
pop
cmpsb
sub
pop
aas
popa
lds
sbb
pop
into
dec
ds
mov
sbb
fstpt
movsb
push
rolb
add
push
int3
dec
mov
imul
mov
pusha
add
ds
mov
repz
mov
add
push
add
and
inc
es
pop
mov
je
ud0
loope
aam
adc
lahf
leave
jle
cli
aam
js
mov
in
add
mov
lret
enter
cs
adc
fdivrl
movb
js
pop
cltd
lcall
mov
push
gs
fistpll
mov
add
out
add
xor
shll
xchg
movsb
pop
push
jecxz
and
jl
popa
xchg
and
shll
xor
cmc
pushf
and
aaa
rolb
cli
out
mov
jp
add
pop
add
mov
mov
add
add
imul
adc
sub
lock
mov
sahf
ljmp
or
nop
sarl
stos
inc
add
addb
and
add
aad
leave
lock
push
insl
call
pop
pop
clc
dec
mov
or
ret
mov
stos
stc
cmpsb
fbstp
flds
repnz
jo
in
cli
pushf
outsb
addb
popf
and
fsubr
dec
cld
gs
mov
dec
sahf
mov
jns
lods
in
sbb
mov
test
mov
add
arpl
cmp
test
mov
jnp
sbb
add
or
dec
dec
rol
xchg
mov
add
ret
pcmpeqw
dec
pop
jne
xchg
popa
jg
lahf
push
cmp
and
push
insl
xchg
aad
mov
inc
add
outsl
add
js
ss
pop
rclw
mov
dec
xchg
repz
jno
push
pop
dec
ds
ja
subl
mov
aaa
icebp
icebp
cmp
inc
add
sub
test
lds
or
push
shrl
jmp
mov
add
mov
imul
rcl
inc
sbb
ret
test
dec
push
scas
shrb
mov
fwait
jbe
test
cmp
add
mov
push
dec
add
ja
add
stc
inc
or
jae
sbb
data16
sbb
lock
sti
sbb
iret
repnz
dec
lods
fwait
fwait
push
fisubs
xchg
and
std
lahf
mov
dec
push
fwait
addb
in
enter
enter
add
jns
mov
stos
mov
push
popf
ror
pop
or
jg
cmp
ss
add
out
lret
jns
push
sbb
cmpsl
sub
imul
sub
orl
add
test
adc
cmp
sbb
add
or
sbb
jnp
xchg
arpl
repz
pop
nop
inc
psubsw
pop
sarb
popf
mov
add
add
xchg
push
scas
rcll
push
imul
test
inc
pushf
adc
dec
test
lods
mov
cmc
mov
or
in
inc
add
or
addb
cltd
xchg
aad
inc
add
add
notb
push
lods
sbb
pop
imul
add
xchg
push
fwait
and
movb
jmp
mov
test
mov
or
pop
mov
cmpl
repz
mov
inc
add
int3
jbe
mov
mov
xchg
push
aaa
and
aaa
and
mov
xor
add
mov
ds
jmp
push
dec
add
leave
pusha
add
dec
adc
pop
push
add
add
scas
mov
stos
les
cmp
outsl
pop
insb
loopne
int
jle
icebp
mov
jmp
subl
mov
negb
and
test
dec
in
in
jge
mov
xor
imul
add
aad
or
mov
dec
pop
and
lcall
push
test
jb
pop
pop
xchg
pop
lcall
mov
fildll
mov
dec
sub
cld
mov
add
dec
fsubrl
sbb
cmpsb
js
cmp
das
mov
inc
xchg
clc
sbb
mov
jge
jmp
add
icebp
xchg
out
cmpsl
push
insl
ljmp
leave
shll
std
iret
lods
adc
aam
xchg
call
xchg
dec
dec
or
adc
cmpsb
loopne
sub
cltd
pop
pusha
add
push
stos
repz
xchg
sarb
xchg
sub
xchg
les
jp
test
add
add
imul
adc
mov
xchg
aad
or
mov
sub
hlt
aam
add
jp
add
lds
add
lea
add
dec
fwait
mov
push
pop
push
mov
mov
addb
outsb
arpl
xor
inc
mov
add
int3
in
pushf
xor
sbb
cld
mov
lret
jo
out
xchg
pop
in
and
mov
mov
lods
fs
arpl
push
lods
mov
enter
adc
jno
lret
adc
stos
inc
add
lea
jb
push
inc
and
add
sub
and
leave
popf
xchg
cltd
lea
add
sbb
fs
mov
add
imulb
sbb
mov
mov
aas
lret
fwait
ljmp
push
inc
add
xchg
lret
shl
pop
push
iret
test
mov
xchg
lea
repz
sti
mov
sub
add
mov
addb
mov
jo
inc
add
push
add
es
ret
pop
std
xchg
lods
lock
jle
jmp
pop
cmp
dec
nop
icebp
stos
fwait
test
fidivl
sub
pop
addr16
fistl
push
pop
ret
loop
addb
mov
add
jp
push
mov
faddl
push
push
movsb
inc
add
add
scas
das
mov
idivl
lahf
cmp
mov
stos
aaa
loope
sbb
mov
int3
imulb
add
sar
inc
add
push
cmp
jle
and
cli
lds
push
mov
dec
aam
clc
mov
add
pop
mov
pop
rolb
pop
pop
pop
sbb
repz
xchg
dec
dec
adc
mov
dec
out
mov
iret
xchg
sbb
test
dec
xchg
stc
inc
add
jae
add
or
fldt
aaa
pop
push
movsl
cmpsl
push
fcomps
sub
add
stos
mov
scas
insl
sbb
mov
bound
aad
ds
test
rorb
inc
add
aas
pop
cmp
lea
sbb
call
add
push
pcmpgtd
ret
lahf
enter
mov
xor
loope
pop
pop
scas
iret
jp
pop
pop
sub
aam
in
nop
nop
gs
int
insl
repnz
fsubl
sub
add
xchg
lret
add
add
push
push
fsubrp
mov
xchg
fstps
xchg
popa
ret
inc
divps
test
aaa
mov
add
movsb
push
or
and
dec
jnp
add
lahf
mov
add
stos
xchg
test
int
add
bound
mov
popa
sti
push
stos
push
fwait
fs
mov
pushf
or
ficoms
add
inc
mov
in
test
test
add
inc
add
mov
pop
loop,pn
mov
loopne
ja
lds
mov
enter
dec
in
jne
sub
add
ds
jb
in
not
or
std
xchg
aas
lret
lcall
add
pop
pop
push
push
out
repnz
sub
dec
rolb
jbe
add
push
push
dec
imul
cltd
xchg
fists
pushf
cmp
loopne
fstps
jecxz
cmpsl
xchg
loope
mov
arpl
dec
ds
dec
or
sbb
add
sti
adc
sub
jle
jo
popf
in
xor
in
cmpsl
push
pop
pushf
mov
ficompl
rcll
push
std
push
sti
jo
jge
cwtl
lods
scas
inc
add
in
fstps
call
aam
loop
lock
stos
and
mov
aaa
dec
jp
cmpsl
rolb
add
xor
popf
dec
xor
sub
out
pushf
jns
repnz
xor
or
dec
in
ficoml
je
sbb
xchg
int3
dec
sub
dec
out
cmc
and
mov
addr16
xchg
dec
mov
mov
pop
ss
add
imul
movb
add
mov
lds
fs
pop
dec
adc
test
hlt
ret
add
cmp
mov
xor
pusha
add
sbb
push
mov
stc
pop
outsl
fs
repz
mov
dec
mov
or
inc
add
mov
mov
pop
ja
xchg
loope
dec
add
lret
xchg
addr16
jb
pushl
enter
movsl
fcmovnu
in
push
fistl
pop
xlat
push
fnsave
jecxz
addb
pop
movsb
movb
jbe
mov
xchg
iret
in
scas
push
xchg
jbe
sbb
sub
lock
dec
cmp
xor
in
and
or
add
jl
sub
push
and
mov
rcrb
add
sbb
pop
scas
and
or
in
out
xchg
imul
fistpl
movsl
test
cmc
mov
ror
outsl
and
mov
and
or
push
scas
mov
daa
pop
rclb
add
pop
loopne
cmp
iret
fsubl
fwait
movsl
adc
pop
popf
and
addb
fisttps
push
out
pop
jp
xor
movsl
lods
sahf
lcall
inc
add
pop
inc
add
add
add
or
add
movb
iret
pop
sbb
xor
xor
clc
mov
sub
xchg
sub
mov
sbb
leave
pusha
add
dec
ret
xlat
jmp
jb
xchg
xchg
mov
cmpl
cwtl
xchg
cmp
and
dec
sub
xor
fisubrl
mov
xor
xor
push
mov
or
jnp
decb
sub
sub
adc
lcall
push
movl
inc
add
stos
and
pushf
xchg
cmpsl
imul
cltd
gs
sub
lahf
adc
lahf
aas
cmp
movb
xor
jge
add
shrl
and
gs
push
sbb
jg
shrb
add
pop
daa
adc
jg
scas
push
sti
sbb
in
push
cmpsb
mov
dec
mov
and
into
loope
addr16
jo
rolb
add
push
inc
add
sti
xchg
mov
and
loope
negl
test
mov
push
mov
or
cmp
repnz
add
cmp
lods
mov
lcall
pop
adc
repz
and
es
lahf
inc
add
out
dec
aad
es
add
add
in
or
repz
call
sub
movlps
fisubrl
and
push
imul
adc
inc
xchg
pushf
fdivrl
or
adc
mov
push
xorl
cmp
xchg
insl
jae
inc
add
lcall
daa
jbe
addl
loopne
mov
loope
fsubrs
aam
cmovbe
sbb
pushf
addb
cmp
or
ret
sahf
cli
in
sarb
out
cld
int
loopne
lret
rolb
cmpsb
xor
bound
mov
mov
pop
aad
dec
dec
cmpl
sahf
or
je
dec
daa
repnz
push
add
cmp
loope
popf
psrad
mov
mov
fmulp
pop
adc
test
mov
cmp
clc
mov
cmpsb
mov
inc
jns
and
jmp
cs
pushf
mov
add
cld
push
add
xchg
addb
add
xor
push
loopne
push
add
and
addb
ret
pop
loopne
dec
mov
mov
bound
sub
inc
add
scas
lret
cld
in
jle
adc
sldt
push
cli
mov
add
sub
mov
add
ljmp
test
cmp
dec
inc
add
aaa
dec
push
add
xchg
cmp
add
mov
sub
out
fsubs
int
sbb
test
aas
arpl
push
mov
add
push
sahf
rclb
leave
jmp
push
mov
fistpl
xor
and
movsl
pushf
cltd
xor
std
add
xchg
mov
push
xchg
mov
dec
sub
test
idiv
push
inc
shl
cmpsb
pusha
add
add
je
out
or
ffree
add
pop
stos
mov
push
inc
add
jns
xchg
add
cmpsl
std
aad
addr16
stc
lahf
test
ja
add
sub
in
stc
in
clc
ljmp
leave
in
mov
jns
xchg
cmpsb
hlt
xlat
sbb
fisubl
or
fmul
scas
les
insl
mov
sbb
xchg
push
add
mov
shrb
cmp
add
