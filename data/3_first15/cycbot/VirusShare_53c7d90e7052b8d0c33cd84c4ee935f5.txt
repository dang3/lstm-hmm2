mov
icebp
dec
push
call
scas
shll
add
incb
add
enter
mov
cmp
add
adc
xor
mov
ja
mov
pop
xchg
add
mov
mov
adc
push
fimull
ja
pavgw
cmp
xor
test
mov
mov
add
jb
mov
pop
mov
pop
push
mov
daa
rol
fmull
adc
mov
xchg
in
loop
mov
hlt
jecxz
stc
pop
mov
and
mov
fmull
divb
jg
shll
mov
push
xchg
push
insb
rolb
or
test
scas
dec
jle
mov
cmc
in
je
or
mov
fwait
mov
fidivrs
rolb
mov
xor
add
test
jbe
sar
leave
inc
mov
pop
fcoms
xchg
in
nop
add
adc
mov
adc
mov
lcall
adc
fistps
jle
adc
push
xchg
mov
pusha
add
pop
mov
add
push
testb
inc
pop
inc
je
das
loopne
mov
dec
dec
sbb
mov
add
rolb
mov
sub
mov
andl
inc
movsb
pop
mov
fstpl
mov
pop
popa
sahf
hlt
mov
push
mov
lret
mov
push
add
mov
add
mov
and
dec
pop
pop
sti
push
add
negl
imul
mov
pop
mov
mov
movsl
idiv
adc
test
aam
cmp
aas
cmpsl
pop
pop
ror
mov
mov
push
jecxz
add
cli
out
pop
mov
rol
ret
mov
loop
mov
add
add
and
mov
daa
sub
stc
sti
inc
andl
mov
push
popa
stos
orl
insb
mov
popf
movsb
movsl
jo
mov
mov
add
mov
add
add
mov
add
xor
and
fsubs
push
decb
roll
mov
mov
ret
pop
jecxz
add
jg
popf
add
mov
add
add
add
add
add
add
add
add
and
aas
add
lods
out
add
mov
mov
add
mov
add
or
aad
inc
fnsetpm(287
or
in
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
leave
xchg
jg
fisttps
push
add
mov
dec
out
add
sbb
or
iret
mov
cmp
iret
sub
mov
movsb
aam
aas
cs
add
jbe
sbb
add
roll
pushf
rolb
mov
add
adc
dec
mov
rolb
mov
jecxz
mov
mov
nop
add
and
mov
add
mov
jae
push
insl
dec
mov
scas
push
jecxz
jl
add
jge
dec
mov
sti
or
sub
add
add
mov
mov
clc
push
adc
mov
push
or
leave
bound
mov
lods
adc
jb
mov
add
sti
add
xchg
movsl
xor
push
dec
jle
addl
add
into
mov
sbb
sbbl
and
lcall
adc
lods
jecxz
fldcw
fldl
loopne
mov
lea
pop
pop
dec
adc
mov
fsubr
in
cltd
inc
dec
add
mov
mov
add
arpl
add
add
imul
cld
clc
mov
pop
or
jae
add
enter
add
or
add
mov
sbb
bound
mov
fadd
add
dec
and
mov
es
mov
add
lds
add
sbb
xchg
push
negl
add
sbb
jmp
lods
testl
in
sub
mov
sti
xchg
out
cmpsl
xchg
xlat
stos
stos
aam
call
call
jp
call
cmpsl
xor
sub
fisttps
and
inc
nop
add
out
es
out
cli
mov
add
jl
lods
jne
xchg
js
cmp
fdivr
adc
mov
add
cmp
inc
or
movsl
out
xlat
out
repz
mov
mov
mov
mov
outsl
mov
mov
ds
cli
sahf
int3
mov
mov
test
sbb
pop
inc
or
mov
push
add
into
xchg
mov
test
mov
mov
adc
sub
or
jnp
scas
imul
mov
adc
mov
sbb
sbb
pop
cmp
scas
cld
inc
daa
xchg
add
mov
cmc
xchg
add
and
out
pop
push
lods
inc
nop
add
dec
fsts
mov
jmp
or
add
mov
mov
inc
dec
cwtl
adcl
dec
jne
std
outsb
out
ljmp
lea
mov
lds
cmp
jae
add
mov
loopne
mov
cmpsl
std
in
sbb
scas
inc
xchg
xor
jae
add
add
mov
add
rorl
add
sub
add
incl
mov
loope
push
add
add
cmp
fsubl
mov
std
inc
ja
lret
sub
dec
loope
pop
daa
cmp
mov
mov
data16
mov
dec
or
loop
mov
inc
add
mov
add
mov
xor
mov
pop
addb
mov
hlt
jb
mov
call
mov
fs
xchg
in
sub
add
xlat
das
loope
fs
pop
mov
insb
nop
add
sbb
mov
subl
add
mov
push
add
cli
in
mov
adc
lret
or
adc
dec
in
lods
js
pop
addl
jne
ficompl
sarl
xchg
add
mov
mov
push
cmpsl
xchg
addr16
mov
or
pusha
add
add
mov
ljmp
xor
mov
xchg
lock
mov
cs
jp
add
popf
push
and
sbb
in
outsb
test
in
mov
rcrl
mov
pop
mov
inc
push
ret
testb
stc
push
aam
ret
xor
add
dec
es
and
xchg
cmp
sbb
leave
mov
sti
mov
mov
pop
add
mov
add
mov
sbb
cwtl
and
cld
sbb
add
push
fidivl
add
mov
sub
in
popf
pop
in
pop
jbe
sub
lret
mov
mov
pop
dec
mov
aad
cmc
lahf
enter
mov
mov
xor
xchg
gs
addl
mov
add
test
rcr
in
in
dec
shl
fcomp
sub
lahf
enter
aas
sub
pop
bound
mov
push
and
mov
push
les
test
cmp
dec
mov
mov
mov
xor
mov
pusha
add
jle
add
add
pop
sbb
mov
dec
cli
hlt
jg
out
jo
mov
mov
dec
rolb
mov
test
sbb
addb
and
ds
fs
lea
mov
aaa
in
loopne
mov
push
and
adc
jns
in
mov
push
xor
mov
xlat
xchg
sub
or
sahf
inc
cmp
inc
and
ficompl
clc
sbb
iret
sub
cli
sub
imul
pop
pop
fadds
mov
cmpsb
mov
std
aad
or
and
mov
add
inc
ljmp
mov
dec
inc
add
inc
xchg
loope
pop
pusha
add
loop
mov
popf
int3
or
add
cli
inc
add
addb
and
or
sbb
add
jge
add
outsl
sbb
addb
xor
outsl
test
add
add
enter
mov
add
movb
mov
mov
sub
xchg
lea
pop
pop
sbb
push
fisttps
mov
clc
mov
cmp
cmp
dec
jmp
add
fistl
xchg
add
add
mov
mov
ja
add
xchg
push
shll
mov
jbe
bound
mov
dec
sbb
adc
mov
add
not
pop
inc
sahf
mov
int
fistl
add
pop
fwait
push
cwtl
in
repnz
and
mov
jb
mov
pushf
addb
and
mov
jae
add
iret
or
call
mov
cld
add
add
lret
cld
jae
jns
sarl
add
les
cmpsl
mov
stos
mov
nop
add
and
mov
std
jle
addr16
cs
nop
add
imul
sbb
decb
mov
add
sbb
mov
add
inc
add
mov
addb
pusha
add
add
imul
mov
mov
lds
je
dec
xor
mov
inc
int
or
pop
inc
inc
sbb
out
roll
and
dec
or
call
mov
jae
cmp
jecxz
add
push
lods
xchg
add
ja
stos
adc
cli
js
out
mov
pop
imul
sbb
xlat
sub
mov
mov
fsubp
jecxz
xor
mov
xor
mov
cld
insb
sub
rolb
mov
sbb
mov
gs
aad
xor
adc
mov
push
fisubrs
repnz
push
fldenv
pop
mov
cld
subl
add
fmuls
ljmp
push
add
push
jp
mov
mov
ucomiss
cmp
clc
push
scas
mov
inc
jmp
dec
and
rolb
mov
push
add
in
lahf
sbb
add
sbb
add
pop
lds
dec
pop
jnp
mov
pop
aaa
shr
jne
ret
jns
lock
sahf
data16
mov
rol
cmpsl
push
jecxz
dec
inc
rolb
mov
inc
add
mov
xchg
add
xor
mov
dec
mov
lds
push
rolb
push
gs
scas
pop
les
mov
pop
outsl
or
add
lods
mov
adc
negb
add
mov
add
lods
repz
push
sahf
mov
cmp
jo
mov
and
mov
mov
fisubrl
ret
fwait
jmp
fcmovnb
add
jmp
out
ffree
je
mov
scas
sub
adc
pop
call
iret
pop
fcmovnbe
push
add
jbe
lcall
pushf
out
add
mov
cs
and
fbld
inc
adc
inc
loopne
mov
pop
sti
loopne
mov
pop
lret
mov
add
enter
add
add
dec
les
fucomp
push
movsl
mov
mov
test
imull
daa
inc
test
ficoms
add
inc
add
inc
add
imul
dec
ss
jns
ret
fnsave
jp
sahf
mov
mov
stos
jno
add
mov
add
add
push
add
jecxz
add
and
hlt
test
adc
sub
add
push
or
fidivrl
pusha
add
sub
lock
ljmp
add
add
mov
in
adc
es
and
inc
iret
xchg
hlt
pop
xchg
and
add
repz
pop
test
out
pop
icebp
pushf
push
add
adc
aaa
jne
aam
incb
xchg
push
sub
dec
movsb
das
imul
out
add
add
fmull
ja
push
fisttpll
or
stos
pushf
out
jmp
add
lock
dec
add
mov
and
push
cmp
jecxz
jbe
mov
sub
mov
pop
xchg
xor
popa
pop
rorl
adc
mov
std
pop
sub
fiadds
add
div
das
in
mov
mov
faddl
add
jae
mov
xchg
sbb
mov
data16
dec
dec
dec
lods
addr16
add
sbb
jle
or
push
add
aas
mov
dec
mov
xchg
mov
add
shrl
jecxz
pop
or
add
movsl
ja
outsl
arpl
push
push
and
xor
outsl
xchg
add
nop
add
std
rolb
mov
mov
pushf
sti
adc
mov
mov
sbb
into
cwtl
idivl
popa
in
popf
mov
mov
xor
cmp
cmpsb
sbb
out
jmp
ds
div
add
jle
lds
fcoml
add
add
jae
jmp
dec
sub
test
int3
stc
int3
stos
test
movl
jbe
test
xor
mov
loopne
mov
mov
inc
out
lds
jne
ja
out
push
inc
add
mov
rolb
mov
jnp
pop
dec
push
cmp
add
mov
pusha
add
jns
add
rolb
mov
outsb
mov
add
jp
add
add
mov
js
pop
stc
or
add
scas
jbe
ret
jbe
stc
xchg
popa
xor
add
mov
mov
loop
mov
cmpsb
add
mov
adcl
sub
jo
mov
test
xlat
ret
sub
add
ud1
mov
inc
jns
out
push
loopne
mov
cli
pop
xor
add
mov
das
inc
add
add
cwtl
outsl
xchg
addb
cmp
int3
jo
mov
iret
ret
repnz
aas
fldt
add
add
xor
mov
hlt
jl
pop
or
fcoms
cld
arpl
sbb
test
inc
jle
add
int
pop
jbe
xor
fistps
add
adc
mov
add
mov
lods
dec
mov
sub
dec
push
jle
add
xchg
cmp
lahf
mov
mov
lock
aas
sub
test
or
fidivs
mov
insl
mov
cmpsb
cld
jnp
outsb
cwtl
fldenv
call
les
hlt
hlt
xchg
xchg
stc
sub
iret
ficoms
sub
mov
add
pop
mov
dec
scas
mov
add
addr16
push
add
push
sbb
pop
add
add
mov
push
loopne
mov
push
sbb
add
inc
jns
popf
sub
cmp
shrl
sbb
inc
repz
dec
imul
push
push
adc
stos
mov
sbb
add
fbstp
add
cmp
add
sbb
pop
lock
repnz
add
inc
sahf
inc
mov
add
in
pop
jnp
add
adc
std
repz
mov
in
out
mov
int3
hlt
stos
mov
mov
es
xlat
adc
pop
dec
or
cmc
push
imul
add
mov
add
add
push
push
mov
push
aad
sbb
dec
add
mov
fsts
aam
in
push
sub
add
cmp
xor
mov
imul
sahf
xchg
mov
jae
dec
or
lcall
aad
cmp
scas
loop
mov
add
mov
xor
pushf
cmp
pop
inc
adc
add
fdiv
sbbl
and
jnp
xor
xor
mov
sbb
add
dec
jns
scas
cmp
add
cmp
pop
mov
loope
aaa
into
pushf
das
sub
in
add
add
push
jp
gs
add
leave
adc
pop
icebp
inc
add
xchg
stos
cmp
insl
bound
mov
sbb
mov
add
pusha
add
dec
sub
xlat
pop
mov
adcl
ret
test
xchg
or
imul
add
fnstsw
lea
mov
fs
out
insb
in
out
sbb
out
add
jno,pn
push
add
mov
das
pop
sub
mov
add
xor
xchg
xor
lcall
dec
pop
jg
popf
aaa
push
push
inc
add
test
add
out
push
rolb
loop
mov
data16
sub
sub
add
push
xchg
les
ja
ss
or
out
cmp
imull
sub
gs
add
test
jb
mov
mov
or
sbb
xchg
mov
push
add
mov
jecxz
arpl
lock
xor
xchg
sbb
sbb
add
dec
jne
add
ja
into
mov
add
xchg
test
dec
pop
int
in
mov
push
add
mov
push
inc
add
mov
addb
lret
mov
pop
test
xchg
ja
push
out
sub
movsl
cwtl
sti
ljmp
repnz
cwtl
lret
es
out
xchg
xor
add
jns
stos
test
enter
stc
push
inc
add
add
std
das
cwtl
jmp
jp
popf
sub
stc
scas
jg
dec
pop
xor
jle
cs
enter
les
push
add
fisttpll
mov
jns
stc
enter
ret
pop
je
add
add
cmp
and
and
mov
mov
cmp
mov
mov
addb
mov
loopne
mov
jbe
cmp
add
pop
fidivrl
xor
stos
pop
adc
mov
cli
and
mov
add
mov
and
mov
leave
lods
sbb
hlt
xchg
pusha
add
inc
add
cli
pop
fiaddl
mov
or
add
aad
add
xchg
cmp
dec
leave
insl
push
call
or
add
mov
cmp
sub
cwtl
push
jmp
iret
lea
adc
mov
mov
cmp
nop
add
jg
ret
pop
je
mov
sub
push
sbb
mov
out
leave
rcrl
jle
and
dec
addr16
add
movsl
mov
pop
and
push
insl
dec
aad
icebp
inc
add
lcall
in
stc
cs
adcl
xor
jo
mov
mov
xchg
out
pop
push
sbb
shll
outsl
sbb
cmpsl
add
mov
add
inc
jne
pop
aas
mov
add
xchg
pop
insl
test
jno
add
and
mov
add
mov
inc
add
dec
rolb
jne
add
jae
sub
add
lret
fidivs
daa
test
add
cs
sub
mov
push
insl
push
add
add
inc
sub
add
mov
out
add
fbstp
mov
sbb
stos
or
and
mov
add
sti
fwait
aam
mov
add
mov
mov
mov
add
mov
aam
sub
mov
test
dec
std
dec
cltd
mov
bound
mov
stos
in
aad
jmp
inc
add
adc
xor
mov
add
inc
mov
fisttpll
cmpsb
mov
sbb
imul
jne
fwait
lods
mov
lea
cmp
outsl
scas
int
inc
add
mov
add
sub
mov
adcl
push
lods
out
push
adc
or
mov
daa
cs
imul
sub
gs
mov
icebp
popa
lds
addb
movsb
int
stos
xchg
imul
push
inc
cmc
cli
sbb
push
stc
fs
outsl
adc
dec
mov
cli
into
in
jp
rorl
mov
pop
dec
mov
pop
mov
mov
cwtl
lahf
gs
frndint
dec
lea
sahf
insb
mov
jb
mov
add
mov
je
xlat
js
mov
adc
dec
popa
sbb
or
mov
sti
dec
push
push
outsb
fcmovne
addb
inc
pop
adc
mov
mov
add
mov
sbb
add
test
rolb
mov
movsb
mov
xchg
sahf
xor
mov
push
addb
jle
push
das
sbb
data16
push
rolb
mov
jae
jb
mov
ret
or
scas
fldenv
jecxz
or
xor
mov
add
adc
mov
mov
xor
xor
mov
and
cmp
dec
xor
mov
add
mov
mov
cmp
add
ja
pop
mov
imul
aas
test
mov
mov
mov
imul
push
loopne
mov
xchg
fldt
or
out
testb
fwait
push
pop
fisttpl
cmpw
bound
mov
add
lret
sbb
out
mov
push
repz
xorl
repnz
lcall
add
dec
push
jp
repz
sbb
inc
xor
xchg
sbb
jnp
cltd
mov
add
subl
mov
mov
fwait
in
ds
ficomps
sbb
and
les
xchg
iret
push
push
inc
das
lahf
push
cmpsl
lds
mov
je
dec
call
push
dec
jl
sti
and
mov
sti
pop
xchg
mov
add
mov
push
push
add
out
ljmp
imul
add
mov
xor
add
add
loop
mov
adc
and
in
inc
lds
test
movsb
cmp
in
sub
lcall
jne
adc
sub
push
add
inc
dec
cli
lods
test
repz
orl
imul
mov
hlt
pop
lcall
das
outsl
dec
cmp
cmp
inc
out
add
addb
je
cld
xchg
std
pop
out
addb
pushf
movsl
mov
repnz
mov
mov
dec
cmp
add
sbb
add
add
mov
mov
add
mov
mov
fs
adc
mov
jg
repnz
mov
push
js
mov
add
mov
test
xor
mov
add
add
fxam
xor
popa
pop
out
xor
mov
out
or
xlat
pop
adc
mov
inc
mov
into
pop
mov
ss
lcall
pop
gs
faddl
add
inc
add
ds
xor
add
xchg
adc
mov
mov
pop
inc
add
mov
add
mov
sbb
loopne
mov
add
add
mov
add
mov
xchg
rolb
mov
jo
mov
div
popf
addb
adc
mov
xor
mov
mov
jmp
add
repnz
mov
stos
xor
xchg
add
add
push
add
cmp
movsl
btr
or
lods
loop
mov
push
add
mov
mov
int3
call
sbb
add
add
sub
in
lret
les
mov
andl
sbb
hlt
out
push
sbb
sub
das
cmp
jns
cmp
gs
and
mov
rcrl
movsb
inc
fistl
mov
dec
push
adc
pushf
in
in
rcll
mov
out
in
repz
nop
add
xor
cmp
addb
sbb
icebp
push
xor
jp
int3
std
shl
outsl
xchg
inc
add
add
add
xchg
movsb
or
int
add
call
pop
and
mov
inc
mov
pop
rolb
jae
sub
mov
mov
xor
cmp
cmpsb
inc
mov
test
gs
in
mov
add
xchg
fdivrp
cltd
adc
mov
sti
inc
mov
add
jecxz
mov
jne
add
mov
mov
adc
push
mov
sub
dec
addb
icebp
cmc
stos
imul
mov
and
mov
mov
and
mov
rolb
mov
sbb
fldenv
outsl
scas
inc
jle
or
cwtl
das
mov
pop
and
mov
test
mov
mov
add
sub
ja
popa
xlat
push
aam
push
and
int
push
sub
fdivp
pusha
add
pop
push
mov
rcll
dec
pop
addb
xor
mov
sub
adc
mov
addb
push
cltd
repnz
cmp
imul
js
nop
add
cmpsb
clc
mov
mov
ja
mov
mov
lahf
xor
add
test
sbb
lods
movsl
pusha
add
notb
add
pushf
xchg
std
cwtl
pop
notl
pop
sub
cs
out
push
xchg
add
lods
cli
push
cmpsl
emms
movsb
and
mov
clc
pop
sbb
fs
out
ret
adc
mov
add
mov
icebp
xlat
add
imul
scas
cld
xor
je
add
mov
idivb
add
mov
mov
inc
add
cltd
adc
out
xlat
pop
mov
push
fldenv
pop
xor
stc
lods
cmp
ret
hlt
pop
data16
jmp
popa
call
inc
add
add
sub
pop
in
xchg
add
jno
arpl
rdpmc
mov
aad
js
ss
and
mov
sbb
popf
inc
add
sbb
out
jne
add
mov
lea
mov
pop
scas
fmul
mov
mov
or
ljmp
fidivs
add
clc
jge
and
mov
mov
mulb
and
adc
psllw
jp
push
add
mov
sbb
notb
mov
add
mov
cmpsb
pop
add
pop
loop
mov
out
rcll
cmc
lahf
add
add
adc
add
repnz
pop
mov
mov
xchg
adc
mov
add
lods
pop
addl
cld
int
scas
int3
inc
sub
stc
pop
mov
sub
sbb
xchg
jae
mov
rolb
xorl
add
mov
into
cmpsl
jle
sub
jl
cli
cltd
stos
and
add
push
mov
inc
inc
add
loop
mov
mov
add
pop
xchg
mov
add
mov
sbb
prefetch
push
add
ljmp
push
adc
or
xchg
add
rolb
mov
adc
or
clc
pop
adc
rorl
jns
add
popf
or
or
sbb
addb
inc
pushf
jo
mov
iret
cli
or
jp
mov
cmc
lret
add
ficoml
add
fnstsw
rolb
mov
cmpsb
js
push
add
push
bound
mov
mov
pop
test
mov
stos
dec
cli
lea
mov
adc
mov
or
inc
xor
mov
add
enter
pop
adc
mov
inc
xor
lock
pop
shl
pusha
add
mov
jmp
or
add
in
js
mov
add
add
mov
inc
inc
add
mov
insl
addr16
test
pop
out
jmp
jge
xchg
add
maxps
stos
test
push
add
lds
inc
test
or
ret
or
inc
mov
xor
and
jbe
pop
add
mov
sti
leave
or
scas
in
jo
mov
add
gs
jle
bound
mov
jge
aas
mov
add
lcall
push
push
add
xor
xchg
dec
jne
lcall
cmpsb
cmp
add
xchg
mov
jg
add
pop
xchg
pop
dec
rolb
mov
je
fs
jne
dec
push
aad
imul
fildll
aam
add
mov
mov
adc
push
add
addl
add
add
mulb
add
mov
scas
xor
mov
scas
les
fcmovb
add
rolb
dec
cli
addl
mov
stc
in
cs
fcoms
int3
flds
sub
outsb
rolb
add
mov
dec
popf
jno
sti
data16
push
dec
xor
sbb
ret
inc
or
test
add
clc
sbb
mov
fcomip
add
fnstcw
fwait
cmc
test
lahf
sub
mov
sbb
xor
mov
movl
jl
lret
dec
add
mov
jle
popf
lret
add
add
sub
push
fisttps
dec
pop
or
sbb
add
testb
and
dec
push
add
ret
insb
je
dec
sub
mov
mov
add
cmpsb
mov
addl
loop
mov
or
mov
mov
mov
add
ljmp
imul
adc
and
insl
xchg
cs
add
jnp
add
sbb
cmpsl
jp
dec
mov
mov
jl
push
add
add
mov
add
dec
lcall
mov
sub
pop
test
jnp
lods
mov
outsb
dec
jge
sub
add
add
and
mov
or
adc
mov
push
outsb
xchg
add
notb
dec
scas
mov
mov
push
cwtl
cmc
fstp
or
lret
ja
add
mov
add
add
mov
add
pushw
inc
push
pop
addb
rolb
mov
inc
movsb
jg
out
xlat
repz
jle
push
test
add
push
leave
push
add
inc
add
add
mov
pusha
add
mov
cld
lods
dec
imulb
mov
mov
mov
xor
add
mov
mov
inc
sbb
sbb
mov
sti
mov
xchg
pop
xchg
cmp
add
dec
aad
pop
aas
sbb
adc
mov
cmp
add
mov
add
std
nop
add
dec
fstpt
cld
dec
repnz
sub
js
es
gs
add
bound
mov
int
add
bound
mov
int
bound
mov
out
or
jge
push
incb
push
lds
adc
cwtl
xchg
mov
cmp
into
mov
pop
jecxz
lahf
lret
and
mov
fcmovnu
mov
or
add
mov
add
sub
mov
add
data16
pop
dec
fdivs
test
popa
xchg
xchg
in
outsl
fdivrs
sub
sub
add
out
xor
mov
pop
pushf
dec
dec
dec
inc
dec
inc
xchg
mov
xor
push
adcl
rolb
mov
sbb
mov
mov
add
cmp
xchg
push
add
jge
add
arpl
add
xchg
add
push
subl
mov
add
mov
mov
ss
aam
jns
jle
or
repz
sbb
dec
test
mov
rolb
mov
mov
pushl
movsl
inc
cwtl
clc
sub
jl
mov
inc
neg
shll
mov
mov
test
ljmp
sbb
gs
ja
pop
and
and
mov
dec
pop
add
jns
fcom
loopne
mov
and
hlt
xchg
add
out
or
mov
pop
stc
sbbl
std
std
fidivrs
negb
mov
rolb
lea
pop
loop
mov
pop
test
xchg
mov
sub
call
aad
jl
in
cmpsb
jg
inc
cwtl
clc
sbb
or
add
mov
mov
aaa
icebp
push
add
mov
add
jp
pop
stos
into
xchg
jecxz
lods
mov
add
fucom
add
add
inc
rolb
inc
sbbl
mov
and
mov
add
mov
sbb
add
pop
xchg
mov
mov
push
add
fistl
add
add
xor
push
add
je
add
fwait
adc
add
mov
lea
in
inc
add
mov
cmp
add
add
mov
mov
add
cltd
popa
jb
mov
pushf
pop
pop
xor
mov
insb
or
and
mov
ficomps
dec
rcll
add
add
and
mov
mov
lods
pop
ja
push
mov
jb
mov
add
mov
sub
add
sub
iret
xchg
jle
mov
mov
add
add
pusha
add
push
shll
mov
dec
adc
mov
or
imul
mov
dec
in
sbb
ss
jmp
pop
xchg
pop
mov
cmp
add
rolb
mov
jp
xchg
cli
icebp
push
add
push
sub
inc
addb
sbb
mov
test
push
add
add
orl
pop
pop
fsubrl
test
push
loop
mov
movsb
jne
jle
sub
mov
test
or
sahf
inc
loope
xor
mov
mov
and
dec
loope
jae
push
je
xor
les
ljmp
mov
scas
lahf
out
pop
mov
inc
daa
push
imul
xchg
xchg
cmp
add
adc
jb
mov
cmpl
add
mov
es
xor
pop
in
fs
mov
add
xor
lret
add
and
mov
mov
mov
mov
stos
movsb
jns
out
lds
rorl
dec
jecxz
add
mov
addb
cwtl
int
pop
pop
push
std
push
add
cmp
add
sub
adc
addb
test
aam
adc
mov
add
jl
mov
mov
mov
sbb
mov
add
or
out
xchg
add
insb
in
mov
add
add
cwtl
lret
lds
test
add
inc
loope
arpl
ljmp
mov
sbb
or
popa
mov
sbb
insb
data16
mov
push
xchg
int
icebp
pop
aaa
fdivl
pop
scas
out
pop
add
inc
jg
mov
aas
and
mov
add
fwait
add
add
stc
stc
clc
cmp
cmc
iret
pushf
pop
pop
aaa
out
push
or
adc
jmp
add
and
mov
add
sbb
rolb
pop
add
mov
mov
add
add
add
mov
movsb
mov
pop
xor
mov
fstl
adc
mov
xchg
add
mov
jg
daa
cmp
popf
cltd
xchg
add
mov
mov
addb
sbb
out
and
add
inc
ror
adc
add
dec
mov
add
cmpsb
or
mov
addb
jl
mov
add
es
mov
xor
add
add
push
cli
inc
dec
adc
dec
repnz
add
inc
sbb
mov
mov
repnz
stos
or
addb
mov
insb
addb
jp
mov
fdiv
pop
test
es
sbb
mov
and
and
mov
cmp
push
add
xor
aad
xchg
add
pop
sbb
jge
mov
pop
push
cmova
iret
xor
mov
in
addl
es
mov
shl
test
pusha
add
filds
add
mov
test
mov
adc
push
sbb
adc
mov
mov
add
xchg
mov
sti
jno
pop
and
mov
loopne
mov
mov
sub
xlat
mov
add
mov
cld
loopne
mov
dec
das
xor
xlat
push
jge
or
mov
mov
mov
rolb
mov
xor
mov
add
inc
dec
clc
inc
add
mov
xchg
add
outsl
dec
ja
movsl
pop
cmpsl
or
jbe
mov
mov
xchg
xchg
pop
out
add
mov
test
xchg
fs
xchg
add
vpcmpgtd
dec
imul
stos
fisubrs
add
add
sbb
sub
jl
dec
cs
cmc
jns
jp
inc
cld
adc
loopne
mov
addb
cltd
mov
outsb
stos
js
lcall
mov
add
outsb
aam
xrelease
aas
pop
fistpl
mov
movsl
sub
add
mov
add
mov
add
out
or
push
call
imul
jbe
add
pop
pop
lcall
adc
and
add
sbb
adc
insb
push
add
mov
add
outsl
mov
or
add
out
mov
cmp
fisttpl
mov
sub
stos
pop
dec
mov
jmp
and
or
or
add
push
dec
inc
mov
mov
loop
mov
push
add
inc
cld
sub
es
ljmp
add
mov
mov
mov
add
adc
mov
mov
mov
pushf
lahf
dec
lahf
jne
or
insb
negb
sbb
mov
or
in
subl
mov
or
addb
sbb
add
addb
and
add
loop
mov
add
jle
nop
add
jae
mov
mov
in
add
out
ret
mov
mov
rolb
mov
jmp
adc
pop
fisttpll
mov
mov
mov
inc
icebp
insb
rolb
mov
dec
repnz
cmp
and
inc
pop
mov
inc
add
or
add
out
dec
mov
movsl
in
jae
pop
stc
scas
loop
mov
sbb
ss
mov
lret
rolb
mov
add
mov
mov
pop
in
in
and
fisubrl
dec
and
add
out
iret
mov
scas
lahf
test
aad
adcl
fwait
pop
jo
mov
ja
repz
add
pop
sbb
mov
cmovo
mov
pop
jbe
into
fiadds
mov
loopne
mov
add
xchg
lret
shl
sub
rolb
mov
or
idiv
and
add
jnp
insb
and
mov
jbe
bound
mov
mov
xor
mov
imul
add
and
fisubrl
repnz
in
add
movsl
rolb
cmc
loope
test
sbb
pushf
lahf
mov
mov
cmp
xor
xchg
insl
out
inc
mov
add
inc
mov
insb
hlt
shll
ljmp
notb
xor
adc
cwtl
shll
rolb
mov
or
jb
mov
add
and
add
out
mov
and
lods
ficoml
add
mov
andl
in
mov
dec
or
and
arpl
add
dec
push
add
movsl
shll
push
shll
jnp
mov
add
add
sahf
rcpps
out
movlps
mov
popf
in
data16
add
pop
push
mov
mov
cmp
pop
add
mov
scas
xchg
mov
mov
add
add
addr16
and
add
xorl
in
add
and
jecxz
ret
pop
jns
lret
dec
jno
in
add
add
adc
xor
or
js
dec
mov
lret
push
loop
mov
add
mov
add
or
add
loop
mov
es
mov
mov
mov
push
add
mov
pop
jne
cltd
jns
xchg
add
inc
inc
leave
insb
add
mov
jecxz
pop
sbb
sub
add
leave
repnz
add
scas
lea
pop
xor
mov
mov
cmc
jmp
add
rolb
mov
jecxz
push
dec
inc
dec
roll
mov
inc
cmp
pop
push
pop
movsl
push
into
fnstcw
xor
mov
rolb
cltd
push
mov
inc
ja
mov
stos
and
mov
std
sbb
dec
xchg
out
xor
imul
cltd
mov
mov
dec
pop
xchg
pop
fidivrl
iret
cmp
sub
out
and
mov
loop
mov
xchg
ds
inc
sub
inc
scas
cmp
cltd
in
cmp
outsb
mov
cmpsb
cmp
adc
mov
or
mov
dec
roll
xchg
dec
lahf
test
lret
dec
add
xor
mov
mov
jnp
or
stos
push
add
aam
xor
mov
fisttps
sbb
mov
lods
imul
mov
push
add
rolb
mov
push
add
popa
mov
add
cwtl
test
add
add
push
mov
mov
test
mov
mov
mov
add
add
scas
lds
dec
and
mov
mov
cmp
and
mov
pop
daa
int
add
idivl
stc
mov
bound
mov
aas
je
std
inc
add
pushf
xor
icebp
jo
mov
in
pop
jbe
ret
fdivs
in
scas
and
mov
movsb
leave
iret
js
push
jle
pushf
ss
into
fsubrs
pop
jle
jns
mov
cmp
in
movl
jmp
or
out
xchg
sub
in
adc
mov
stc
in
jg
mov
mov
dec
and
cmp
out
aam
jbe
ljmp
adc
mov
add
inc
loopne
mov
mov
add
inc
or
sub
daa
mov
mov
inc
add
add
rorl
add
gs
inc
gs
add
mov
mov
cmp
dec
sbb
push
sbb
inc
repz
jns
fnstsw
lods
jnp
add
jmp
aam
xor
pop
test
sub
mov
daa
and
mov
sbb
mov
rolb
mov
add
adc
mov
add
sub
add
cmp
int3
xlat
cmp
sbb
mov
push
sbb
neg
sbb
pop
cmp
jge
xchg
fdivrl
add
add
pop
in
arpl
and
xchg
mov
add
pushl
mov
stos
adc
add
mov
bound
mov
in
ljmp
add
mov
sbb
mov
rolb
mov
adc
push
stos
test
test
add
add
pop
or
out
movsb
aad
addr16
add
mov
cltd
jo
mov
mov
add
xor
ljmp
mov
pop
sbb
or
mov
mov
xor
add
cld
test
fsts
inc
add
dec
sahf
pop
call
cli
rol
add
xor
or
jmp
xchg
add
mov
jge
add
add
mov
push
add
push
sbb
int
adc
mov
push
stos
push
cmc
inc
in
lret
add
mov
repz
add
add
sub
xchg
ja
sbb
int3
jo
mov
sub
andps
cli
and
mov
aad
ret
int3
xor
add
mov
testl
inc
fxch
gs
mov
sbb
add
sbbl
add
add
mov
mov
les
jmp
into
add
mov
pop
xchg
bound
mov
mov
pushf
rcrl
and
stos
xchg
test
mov
pop
push
add
and
mov
add
jnp
loope
push
push
leave
and
mov
bound
mov
sti
mov
fisubl
jb
mov
add
add
test
outsb
hlt
sub
rorl
mov
add
mov
sahf
jb
mov
mov
add
sbbl
and
int3
mov
mov
rcrl
addb
xchg
jae
add
xchg
mov
stc
inc
add
test
add
inc
test
movsb
rolb
mov
push
dec
add
mov
push
mov
sbb
mov
call
adc
mov
in
adc
sahf
sub
addb
jb
mov
scas
xchg
shll
sub
aaa
cli
fsts
push
mov
pushl
les
xor
mov
or
add
adc
mov
cmp
add
mov
jle
es
or
fidivrl
and
sbb
push
add
and
ficoml
add
ja
add
into
mov
iret
movsb
movsb
or
ljmp
mov
xor
xchg
add
aas
test
xor
sbb
lahf
outsb
lods
in
bound
mov
iret
xor
pop
fwait
inc
push
gs
cmc
sbb
fs
frstor
inc
mov
push
outsl
dec
jne
or
pop
push
add
jecxz
xor
push
mov
add
mov
add
ja
cltd
push
fisubrl
stos
xchg
jg
mov
add
sahf
push
and
inc
cmp
incb
add
movsl
ja
fnstenv
mov
push
add
pop
jns
lahf
mov
mov
dec
push
stos
adc
add
cli
aas
popa
xchg
push
outsb
mov
les
int
push
adc
sub
jnp
mov
inc
scas
mov
daa
int
sub
mov
add
cmp
push
repz
stc
sub
add
push
mov
sbbl
movb
pop
insb
xor
mov
popf
cmp
add
add
ja
add
test
add
mov
pop
int
cltd
in
push
lret
push
addl
mov
in
cmp
shll
or
fidivrl
mov
outsl
jne
inc
inc
movsb
les
testl
add
or
push
roll
mov
pop
push
pusha
add
test
mov
gs
push
not
lods
dec
dec
scas
and
mov
data16
sahf
popf
lods
test
mov
xchg
push
jge
addr16
cmp
pop
mov
decb
mov
imull
add
es
sbb
mov
mov
add
inc
add
pushf
pop
pop
mov
sub
rolb
inc
mov
pop
out
xchg
cmp
lcall
enter
mov
rorl
pop
inc
bound
mov
add
add
mov
jmp
outsl
push
negl
out
push
add
pop
jg
xchg
aam
jge
aaa
adc
xor
mov
jns
test
add
fs
cs
cwtl
imul
mov
jnp
jns
add
addr16
mov
add
add
add
mov
cwtl
mov
jb
mov
mov
daa
mov
fidivs
jno
imul
mov
mov
add
lods
xor
gs
dec
xor
fstp
cmp
jp
add
mov
dec
add
mov
mov
add
cmp
jl
repz
and
bound
mov
jmp
jmp
addr16
add
mov
outsl
pop
js
and
mov
mov
vpand
mov
stc
cld
in
sub
mov
add
jle
lcall
insl
cmp
adc
mov
fcmovne
sbb
push
jo
mov
popl
push
add
dec
xchg
add
repz
xchg
cltd
je
mov
mov
or
cmp
insb
add
mov
mov
insb
loop
mov
mov
orl
xor
mov
mov
pushf
aad
add
js
dec
push
aad
popf
dec
mov
mov
add
sahf
addb
lcall
sbb
sub
lea
inc
add
std
out
dec
push
cmp
and
add
stos
repnz
ja
pop
ss
jmp
mov
test
mov
xchg
jmp
jecxz
add
iret
inc
add
ljmp
rolb
xchg
lret
sbb
jecxz
mov
fstpt
cmp
in
jecxz
cmp
or
mov
mov
add
test
mov
add
push
sub
scas
xlat
lret
imul
jns
add
stc
repnz
add
mov
xchg
adc
push
out
in
lcall
sbb
adc
mov
imul
paddw
jns
sub
xchg
cli
jge
repnz
add
rolb
repz
sbb
cmp
hlt
jecxz
adc
mov
or
lahf
sbb
in
mov
mov
dec
fnsave
mov
mov
ret
pop
push
or
mov
mov
scas
mov
xor
mov
mov
mov
mov
mov
mov
pop
cs
rolb
mov
sbb
xchg
popa
cmp
insb
dec
sub
mov
add
leave
pop
and
mov
xchg
cld
xor
mov
in
jecxz
movsl
sub
pop
ficoms
add
add
rcrl
and
mov
fdivr
mov
addb
push
jnp
push
test
dec
mov
mov
stc
scas
stc
pop
mov
mov
mov
imul
mov
data16
and
jmp
lea
mov
mov
add
cltd
push
jg
cmp
mov
add
dec
inc
outsl
movsb
aad
div
sub
mov
scas
andl
add
adc
mov
add
fisubl
jl
lcall
pop
stos
cmp
add
cld
bound
mov
mov
scas
inc
xchg
inc
jne
add
add
test
add
clc
rcpps
xor
jge
stc
std
jo
mov
mov
add
add
ds
add
mov
mov
in
addb
popa
in
add
add
mov
mov
push
cmc
mov
mov
add
test
add
dec
clc
cmp
mov
mov
xchg
ja
and
sub
mov
mov
jge
sub
je
sub
add
pop
movsl
mov
pop
scas
xor
add
pop
lcall
cmp
add
repnz
aad
iret
xor
mov
ljmp
arpl
pop
inc
mov
mov
adc
mov
xor
repz
in
ficomps
mov
out
jne
bound
mov
scas
filds
mov
cmpsl
cltd
loopne
mov
insb
movsb
shll
add
add
add
dec
and
jp
mov
mov
stos
inc
lock
inc
fpatan
out
mov
mov
mov
std
mov
inc
lods
adc
fists
add
push
xor
mov
push
add
mov
push
ja
loop
mov
mov
add
fsubl
test
pushf
fs
jle
out
test
cld
test
add
in
ds
pushf
cli
mov
fnstenv
mov
push
mov
fistpl
loopne
mov
data16
fidivs
jge
xor
mov
mov
add
mov
cltd
inc
addb
repnz
addb
not
jb
mov
xor
xlat
call
add
dec
pop
push
int3
aaa
or
mov
mov
data16
hlt
xor
cmp
fwait
xor
dec
cs
and
cmp
ret
hlt
movsw
nop
add
mov
es
or
jmp
add
jge
inc
add
loop
mov
mov
xor
aas
xor
sti
cli
inc
add
add
mov
cmp
mov
aad
rorl
push
movsb
les
enter
add
outsb
iret
test
xor
mov
cmp
add
mov
mov
mov
movsl
sub
mov
cltd
es
mov
xchg
sub
inc
mov
jae
adc
sub
lock
adc
aad
xor
js
aas
mov
sti
arpl
enter
add
filds
inc
add
sbb
dec
xor
push
mov
add
stos
push
jecxz
sub
mov
jns
pushf
repz
add
ljmp
test
push
xor
test
lahf
inc
pop
pusha
add
popf
push
sub
sbb
mov
dec
and
clc
and
mov
cmp
add
add
add
pop
jbe
mov
shll
and
add
sub
loop
mov
shll
inc
test
jle
arpl
das
fidivrl
push
add
add
mov
lods
mov
insl
fdivrl
inc
mov
mov
mov
dec
add
add
xor
arpl
mov
add
loop
mov
inc
fs
push
add
stos
inc
pop
or
add
pop
aaa
sub
mov
idivl
stc
push
insl
cmp
sbb
mov
arpl
mov
stos
movsb
lods
jnp
push
pop
push
dec
xchg
sahf
mov
adc
mov
add
cmc
adc
mov
loope
add
jnp
outsl
push
add
pop
bound
mov
cmc
int3
mov
mov
add
add
jno
leave
cli
lods
outsl
fistl
add
add
aas
cmpxchg
pop
out
add
mov
mov
add
add
mov
imulb
cmp
out
enter
cmp
cmpl
mov
rolb
out
xor
mov
xchg
rcll
imul
push
pop
and
mov
pop
dec
fcoml
insl
int
cmp
add
add
call
and
mov
jae
fmuls
pop
rorl
add
mov
lret
add
cmpsb
and
mov
cmp
dec
mov
mov
addb
inc
add
rolb
or
lock
mov
mov
in
add
mov
mov
jp
adc
xchg
mov
adc
push
xor
insl
mov
push
and
clc
data16
roll
add
xchg
test
dec
inc
cmc
pop
movsb
jno
add
mov
inc
pop
jns
inc
jne
pusha
add
inc
mov
add
xor
jmp
push
out
adc
add
pop
lahf
add
mov
xchg
push
push
push
int3
xchg
or
inc
aad
pop
dec
mov
mov
fstps
addb
dec
lret
push
in
cld
cwtl
lock
add
rol
add
daa
lahf
adc
rcrl
rcll
mov
add
add
setno
js
add
sub
cld
mov
mov
add
aad
jne
test
rolb
mov
aam
add
add
mov
cmp
mov
test
mov
xor
mov
push
add
in
jb
mov
mov
es
mov
out
xchg
mov
test
daa
mov
add
flds
xchg
int3
inc
lds
xchg
mov
aam
dec
cmc
xlat
insl
scas
je
das
insb
bound
mov
stos
insb
cmpsb
jno
jl
pop
ret
or
mov
mov
jge
sbb
jmp
cli
insl
xor
mov
aas
pop
rcrl
cld
push
aas
inc
loopne
mov
inc
add
pusha
add
inc
lods
sbb
cmp
inc
add
cmp
ret
loope
sbb
lock
std
stos
xor
mov
mulb
mov
out
mov
enter
fucomip
ljmp
outsl
out
add
mov
loopne
mov
arpl
inc
add
add
sbb
aam
or
jecxz
sahf
adc
inc
xchg
mov
scas
sub
or
xor
stos
pop
xor
mov
in
popf
pop
repnz
mov
add
cmpsb
and
mov
mov
add
add
push
add
add
mov
xchg
loope
add
cmp
in
mov
jmp
ja
lea
inc
movsl
mov
roll
ficompl
mov
xchg
mov
mov
repz
test
xor
mov
imul
mov
and
ds
mov
jnp
and
mov
and
or
bound
mov
jg
xchg
add
mov
scas
sbb
ja
lock
mov
mov
lods
mov
mov
cli
imul
in
add
sub
pop
and
scas
fsubrl
lcall
mov
add
fstpt
inc
mov
add
arpl
adc
cmp
pop
out
stc
insl
decb
ds
add
cmpsb
push
xchg
sub
add
add
mov
add
jb
mov
adc
mov
push
mov
add
add
add
push
pop
add
push
jae
pop
push
push
lods
add
mov
test
inc
push
lahf
bound
mov
adc
mov
mov
add
jns
pop
push
shll
jp
getsec
loope
fdiv
mov
mov
sbb
outsl
icebp
stos
and
mov
loope
and
dec
or
push
scas
filds
add
lea
cmp
dec
jno
adc
mov
mov
lcall
fwait
xor
mov
mov
fstpt
jns
add
dec
fistl
arpl
push
adc
mov
out
bound
mov
add
mov
pop
rorl
sub
sbb
lret
es
arpl
mov
add
std
xlat
pop
lret
or
or
repnz
push
addr16
sbb
add
pop
mov
xchg
mov
hlt
sub
pop
iret
sub
inc
and
aaa
mov
pop
lahf
lret
test
push
shrl
rolb
mov
lea
mov
movsl
rolb
mov
clc
loopne
mov
adc
sbbl
jbe
cwtl
es
adc
mov
add
ret
fdivp
arpl
add
cmp
and
mov
xor
add
test
xchg
lock
mov
hlt
je
mov
jne
aaa
gs
adc
insl
sub
dec
int
dec
xor
cli
mov
stc
push
jmp
dec
rorl
pop
mov
mov
mov
movsl
test
mov
lock
mov
mov
lret
jne
jno
adc
mov
rcrl
test
add
das
gs
cmp
mov
mov
addb
sub
shrl
add
nop
add
xor
adc
add
cmc
aaa
or
pusha
add
sbb
mov
je
xlat
pop
add
arpl
mov
dec
mov
xchg
add
xchg
add
pop
dec
adc
arpl
cmp
pop
cmovo
mov
sbb
jnp
jle
dec
int3
mov
mov
sti
mov
pop
jno
int3
jbe
pusha
add
add
mov
add
mov
add
mov
inc
int
rolb
mov
xchg
pop
lret
dec
divb
or
add
int
push
pop
add
mov
or
lds
mov
push
rolb
mov
adc
pop
or
mov
imul
addb
sbb
sbb
fnstcw
pop
test
test
mov
add
iret
add
mov
cld
mov
gs
mov
lds
cld
mov
add
aam
ret
mov
push
aad
shrl
clc
cmc
xchg
jge
std
xor
inc
or
pop
in
sbb
rsm
loopne
mov
add
mov
pop
subl
and
add
push
adc
jbe
and
or
mov
mov
sbb
rolb
mov
ret
and
and
mov
xlat
inc
add
jle
fwait
repz
dec
or
imul
inc
or
mov
pop
xchg
sub
mov
xor
mov
add
fsts
lcall
add
xchg
jno
add
xor
mov
test
mov
aam
mov
icebp
push
andl
push
fiaddl
jb
mov
iret
and
mov
push
push
add
add
and
gs
adc
sbb
mov
and
mov
cmp
mov
mov
or
pop
int
lahf
icebp
fistpl
add
adc
mov
loope
add
mov
add
mov
add
mov
push
faddl
dec
mov
fwait
addb
or
sub
adc
mov
add
test
cli
mov
mov
cmpsb
enter
syscall
rolb
mov
xchg
jns
shrl
push
push
push
lret
add
xchg
add
stos
dec
mov
add
scas
xor
add
inc
movsb
outsb
jae
jnp
adc
mov
add
jo
mov
add
inc
sub
push
mov
xchg
outsb
mov
arpl
ljmp
dec
rolb
aam
push
add
addr16
lahf
push
push
add
xchg
test
add
and
fisubl
and
mov
xchg
jge
add
jle
lock
loop
mov
fdiv
mov
mov
cmp
jnp,pn
add
addb
or
add
nop
add
dec
mov
xor
mov
xchg
stos
xor
mov
sbb
add
mov
pop
adc
or
mov
or
inc
iret
loopne
mov
sbb
add
mov
mov
jecxz
ret
pop
sbb
or
and
mov
add
repz
mov
inc
out
les
jl
dec
cmc
lret
jl
pop
push
mov
lods
and
push
in
push
pop
and
into
aad
popf
lea
subl
dec
test
and
adc
mov
ljmp
mov
mov
sub
add
adc
dec
lds
leave
inc
stos
int3
movsl
mov
jno
and
cmp
cmpsl
sbb
xchg
add
add
add
and
mov
sub
icebp
sbb
pop
enter
mov
imul
fisubs
test
xchg
xlat
pop
adc
mov
mov
mov
into
jl
xchg
rolb
mov
add
aaa
aas
mov
push
adc
lcall
mov
adc
mov
mov
int
rolb
mov
insl
mov
inc
dec
mov
jbe
mov
jg
stc
xchg
movsl
pop
fisubs
mov
inc
sub
mov
mov
mov
shrl
pusha
add
js
mov
mov
lods
jmp
loopne
mov
inc
add
ror
rolb
mov
out
std
ja
and
inc
mov
jo
mov
scas
sub
inc
rcll
mov
and
add
adc
pop
xchg
cmc
jl
add
test
inc
mov
jo
mov
popf
div
add
mov
mov
out
dec
push
xlat
jbe
add
adc
mov
push
push
fs
inc
pop
in
add
mov
add
cmp
jb
mov
add
push
add
inc
pop
mov
jae
mov
clc
sbb
int
add
add
pop
loopne
mov
pop
jno
jge
dec
pop
fmull
fistpll
inc
add
repnz
inc
enter
mov
add
mov
add
push
add
or
subl
mov
add
lahf
jp
push
fidivl
jno
add
or
fldl
lahf
aam
mov
mov
adc
mov
pop
adc
push
lods
int
aas
and
outsb
add
inc
int3
mov
or
add
jb
mov
pop
dec
aas
int3
and
mov
xor
std
cmp
fsubr
fldl
mov
jns
in
lea
jbe
lcall
repnz
xchg
add
xchg
add
cmp
jne
add
mov
sbb
rolb
mov
add
mov
xchg
add
jmp
add
jge
outsl
scas
jge
adc
mov
cmp
dec
jmp
inc
add
movsl
mov
js
adc
jbe
insb
sub
mov
jae
add
aas
or
mov
mov
fidivrl
repnz
insl
lret
and
mov
stc
xor
add
mov
sub
sub
cmpsb
xor
jbe
in
inc
push
out
test
push
nop
add
add
xor
mov
xor
mov
mov
mov
xchg
outsl
mov
pop
aas
fs
out
mov
add
sub
and
mov
mov
jb
mov
scas
pop
lds
lret
inc
mov
add
jl
pop
lds
jg
cmpsl
cs
cmc
push
mov
mov
repnz
pop
adc
mov
mov
fsubs
jae
call
add
jle
lcall
mov
jmp
mov
jecxz
push
add
inc
add
xchg
sub
std
jbe
cmpsl
pop
jnp
mov
mov
xchg
pop
std
lret
enter
mov
loope
push
add
add
jne
sti
xor
jp
out
test
imul
pop
cmp
fsubl
xor
mov
test
cld
add
mov
and
mov
sbb
xchg
add
sub
popf
dec
inc
add
mov
mov
stc
pop
adc
mov
lds
out
cli
test
fwait
lcall
pop
js
add
push
inc
add
dec
stos
jbe
push
out
and
mov
addr16
fsubrp
mov
pop
sbb
add
inc
add
pop
xchg
sarl
mov
or
shll
movsl
jo
mov
mov
mov
mov
add
pop
or
mov
stos
faddl
mov
mov
loope
and
mov
jns
add
sub
push
add
pop
popf
lods
call
cmp
add
sbb
in
xchg
sbb
test
enter
xchg
pop
add
mov
add
mov
sbb
cmc
into
shll
ja
add
mov
arpl
mov
mov
xor
mov
or
add
mov
xchg
in
imul
inc
push
push
add
cmc
fcompl
bound
mov
dec
pop
testl
negl
mov
outsl
lret
aam
mov
gs
xchg
and
lods
sub
leave
jl
loopne
mov
add
cmp
inc
repz
in
jb
mov
aaa
pusha
add
fs
inc
das
pushf
sub
scas
lahf
sti
cwtl
xor
ds
xlat
add
mov
sti
ja
mov
mov
lret
jns
shrl
adc
mov
fstl
arpl
add
add
adc
mov
add
pop
testl
loop
mov
xor
jmp
jp
shll
add
cmp
test
mov
stc
cmc
addb
fdivrs
in
rolb
cmpsl
int3
sbb
cmp
rolb
mov
mov
xchg
icebp
fiaddl
jbe
mov
add
add
dec
inc
fnstenv
adc
mov
xchg
das
or
push
fucom
pusha
add
push
pop
sub
jmp
into
movl
and
add
adc
mov
lret
mov
stc
or
add
push
add
add
movsl
sub
cs
mov
mov
push
insl
cmc
fdecstp
movsb
xor
jmp
adc
sub
sbbl
pop
mov
aas
push
mulb
mov
add
fmull
stos
cmovb
mov
in
dec
mov
xchg
mov
loopne
mov
jmp
shrl
mov
inc
jno
jle
nop
add
xor
mov
cmp
add
fcmovnb
add
push
dec
ljmp
ja
test
mov
jo
mov
testl
xchg
add
pop
filds
add
icebp
fs
sbb
add
and
mov
mov
mov
adc
mov
mov
push
add
add
repz
pusha
add
movsl
lds
fsubrl
pop
push
out
push
add
mov
pop
out
cli
cmp
clc
mov
cs
mov
sbb
rcr
outsb
pop
push
mov
push
lods
jae
in
xlat
movnti
sub
add
jnp
lcall
inc
add
xchg
and
fwait
add
dec
dec
imul
or
aaa
imul
and
sub
xchg
lret
cmp
test
stc
xchg
mov
push
add
outsl
push
bound
mov
add
or
push
lcall
mov
dec
xor
adc
mov
add
pop
dec
sub
imul
mov
sahf
jno
sbb
lret
push
icebp
cmp
std
push
jae
fildll
xor
mov
add
rcl
add
xor
mov
icebp
int
mov
mov
adc
mov
add
push
pop
sub
int
push
add
push
xchg
out
fwait
and
mov
jg
mov
cmp
movaps
add
movsb
dec
dec
iret
lock
scas
push
xchg
add
mov
imul
mov
out
fimuls
mov
mov
fwait
ja
add
ss
sub
fcomp
ss
lret
add
cmp
addb
jnp
adcl
lods
sbb
je
mov
ret
jns
fildll
rorl
jp
mov
xor
add
loopne
mov
mov
lock
lock
fndisi(8087
and
mov
xor
addr16
mov
xor
mov
mov
add
mov
or
add
xchg
lahf
dec
aas
clc
movsl
out
in
xchg
add
mov
xor
cmp
int3
and
mov
int3
iret
push
scas
addb
push
pop
cmp
or
pop
mov
mov
rolb
mov
xchg
add
pop
data16
xor
mov
shll
jle
icebp
and
mov
fdiv
ljmp
add
and
lahf
loope
and
mov
xlat
jo
mov
repz
xor
mov
ss
ret
xor
dec
loope
sbb
add
dec
xor
mov
ret
popa
xchg
add
or
sahf
xor
mov
loop
mov
clc
movsb
repnz
loope
shrl
mov
aad
add
loopne
mov
decl
inc
sub
sub
mov
dec
ret
and
and
fcoms
or
xchg
mov
popf
je
mov
add
loope
add
ret
push
add
lcall
pop
das
pop
or
fmul
add
mov
jno
cmp
ljmp
push
or
mov
mov
stos
hlt
xlat
arpl
sub
add
mov
push
add
cmp
add
mov
add
add
jns
add
test
mov
and
mov
pop
cmpsl
xchg
jns
outsb
xor
mov
xor
add
xchg
out
vhsubpd
pop
lret
add
in
aaa
imul
xchg
cwtl
lea
fisttpl
imul
in
test
imul
mov
push
add
cmpsb
sub
add
add
xchg
addl
cmpsb
leave
mov
call
add
xchg
inc
pop
leave
loopne
mov
push
aaa
mov
pop
out
ret
xchg
mov
adc
mov
or
add
or
jg
jmp
sti
mov
mov
lods
cmp
mov
add
sbb
push
add
xchg
sbb
jnp
je
add
ret
mov
cmp
pop
popf
lahf
test
and
mov
das
mov
push
mov
inc
test
movsl
in
addr16
ljmp
mov
add
dec
ret
mov
mov
mov
mov
adc
mov
add
add
pop
ret
cmpsb
mov
jmp
out
data16
ret
add
pushf
xor
add
and
xchg
mov
js
mov
cmp
and
mov
scas
push
jl
notb
or
out
dec
push
push
loope
ss
xchg
rolb
scas
filds
mov
jge
arpl
mov
add
mov
in
mov
mov
add
mov
rolb
pop
jg
push
fstps
mov
mov
dec
cmp
mov
add
or
xor
mov
popa
jecxz
repz
mov
dec
push
clc
enter
xchg
pop
xchg
lock
mov
sub
call
jmp
loop
mov
lret
add
mov
mov
mov
add
or
addb
sahf
sbb
xlat
lds
loop
mov
mov
add
rolb
push
add
xor
mov
cmpsb
in
lds
cmp
push
xchg
filds
mov
add
push
or
pop
push
add
add
mov
push
inc
dec
mov
add
loope
add
daa
and
and
mov
ret
xor
mov
nop
add
add
or
mov
je
sub
jb
mov
mull
add
xchg
cmpxchg
mov
clc
jne
xor
add
jne
add
xor
jbe
push
sbb
add
movsb
adc
add
push
cmp
xor
mov
and
pop
dec
xchg
sub
xor
and
into
arpl
add
dec
push
ljmp
inc
stc
adc
fsubrl
lods
lods
push
fs
dec
or
add
add
addb
shl
mov
fcoml
int
leave
add
mov
add
jmp
push
lods
fcom
nop
add
pop
push
jo
mov
mov
inc
lods
jns
int
out
pop
aam
les
or
add
and
mov
cli
movsb
test
dec
das
std
icebp
dec
and
mov
adc
outsb
data16
das
xchg
push
sbb
xor
mov
mov
pop
mov
mov
dec
rolb
mov
push
add
jg
add
lods
jl
cmp
ja
add
add
mov
orl
push
inc
add
movsl
mov
jmp
aaa
jl
clc
xlat
push
add
out
push
sub
xchg
lods
imull
add
sub
cmp
fwait
push
jnp
je
inc
lahf
mov
cmpsb
push
add
bound
mov
add
add
mov
loope
add
add
cld
sbb
add
adc
jae
leave
insb
outsb
repnz
stos
push
sbb
cwtl
cmp
test
sub
repnz
jne
cmc
sub
or
gs
fnstsw
xchg
jno
add
jle
add
repnz
push
dec
push
add
mov
ljmp
ds
data16
push
add
inc
enter
in
negl
lahf
cltd
pushf
into
ljmp
mov
fistpll
add
mov
dec
push
cmp
pop
add
outsl
xchg
fnsave
add
in
and
dec
pop
movsb
fldl
push
fstpl
mov
in
repz
lea
inc
add
fimuls
flds
adc
add
mov
roll
inc
lds
xchg
insb
or
test
pop
hlt
jmp
add
test
ljmp
shrl
mov
add
push
push
imul
ret
cld
hlt
cld
mov
cmp
add
mov
dec
pop
jmp
adc
mov
sub
add
mov
pop
push
add
mov
push
cmpsl
pop
dec
dec
loop
mov
add
add
mov
rep
stc
lret
addb
cmp
mov
jge
add
mov
push
pop
dec
and
xlat
or
mov
mov
mov
sbb
push
stc
mov
mov
and
mov
adc
mov
sbb
inc
adc
sub
add
add
stos
les
mov
add
jmp
add
xorl
leave
movsb
ds
push
lahf
lods
mov
xchg
les
lea
sbb
and
mov
pushf
cmp
lods
aas
fcmovb
add
and
mov
xlat
js
std
mov
shll
fwait
xchg
or
mov
lea
jno
sub
jo
mov
cli
std
pushf
xor
mov
xchg
xchg
xchg
cmpsb
sbb
imul
dec
jp
mov
add
inc
add
pop
cli
jnp
mov
loopne
mov
lds
add
fcoml
adc
mov
sahf
inc
adc
mov
inc
mov
pop
dec
fidivl
push
xchg
adc
inc
add
pop
fxch
leave
sub
and
cmc
dec
fisubrs
lods
pop
insb
or
stc
mov
mov
mov
in
incl
dec
add
mov
imul
les
add
xlat
loope
dec
or
arpl
xor
add
sahf
icebp
fldt
mov
add
pop
bound
mov
clc
fwait
mov
std
ror
cmp
xchg
xor
and
mov
bound
mov
in
fadds
jmp
lcall
sbb
xchg
mov
add
rolb
mov
jmp
add
mov
fsubrl
and
mov
add
push
xor
cmc
mov
push
xlat
mov
mov
pushf
fstl
jns
mov
mov
push
add
into
add
sbb
and
out
insb
pop
inc
add
and
mov
jae
call
pushf
xchg
repnz
mov
mov
add
add
jge
pop
inc
loop
mov
ret
cmp
xchg
shld
mov
add
addr16
mov
mov
sti
out
lock
mov
push
sub
enter
clc
sbb
scas
cmp
or
add
je
loopne
mov
int3
pushf
fldl
add
sti
sarl
or
push
mov
test
add
add
cmp
mov
add
mov
adc
cli
cmp
hlt
mov
mov
add
stos
adc
xchg
imul
pop
add
inc
push
fs
xchg
loop
mov
mov
add
add
mov
add
clc
repnz
nop
cld
jae
add
add
add
jnp
push
mov
xchg
ret
addl
add
add
jno
jo
mov
dec
imul
pop
adc
inc
add
add
mov
scas
push
clc
repnz
nop
cld
jae
pop
shlb
add
aam
xor
mov
clc
repnz
nop
cld
jae
add
add
add
add
push
mov
xchg
ret
add
add
sub
add
inc
add
add
add
mov
and
repnz
nop
cld
jae
add
xchg
xchg
mov
cli
push
mov
pop
pop
jnp
add
addb
add
add
inc
mov
mov
clc
repnz
nop
cld
jae
in
daa
add
xchg
dec
cmp
repnz
nop
cld
jae
shlb
push
ljmp
mov
xchg
ret
add
mov
clc
repnz
nop
cld
jae
xorl
mov
add
clc
repnz
nop
cld
jae
add
add
arpl
sub
mov
cmp
ret
rolb
add
mov
jg
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
mov
popl
add
out
movzwl
clc
repnz
nop
cld
jae
add
test
push
mov
nop
leave
jmp
add
add
add
add
sub
add
repnz
nop
cld
jae
mov
pop
add
mov
repz
xor
clc
repnz
nop
cld
jae
cmp
add
add
add
mov
push
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
cld
jae
flds
add
jp
loop
push
mov
nop
leave
jmp
pop
mov
xchg
flds
cmc
std
or
clc
repnz
nop
cld
jae
inc
add
hlt
cmpsl
in
mov
clc
repnz
nop
cld
jae
add
add
pop
cmp
call
clc
repnz
nop
cld
jae
mov
int
xbegin
jae
sti
add
mov
add
lods
add
clc
repnz
nop
cld
jae
cmp
cmc
xchg
fnstenv
adc
ret
repnz
nop
cld
jae
ljmp
xor
clc
repnz
nop
cld
jae
add
add
mov
stos
lea
clc
repnz
nop
cld
jae
test
ljmp
daa
or
mov
nop
leave
jmp
addb
mov
mov
push
mov
nop
leave
jmp
in
and
in
stc
scas
push
clc
repnz
nop
cld
jae
add
add
jno
add
sub
repnz
nop
cld
jae
add
mov
add
shl
xchg
cld
push
push
mov
xchg
ret
add
add
add
hlt
add
push
push
mov
xchg
ret
xor
add
mov
add
cmpsl
dec
testl
push
mov
nop
leave
jmp
jae
or
mov
add
or
xor
mov
nop
leave
jmp
ja
and
add
add
push
mov
nop
leave
jmp
add
add
movzwl
clc
repnz
nop
cld
jae
shlb
xchg
test
sub
add
repnz
nop
cld
jae
add
add
mov
nop
leave
jmp
add
add
cmc
add
add
and
push
mov
xchg
ret
add
gs
xabort
nop
nop
cld
jae
inc
add
add
add
fimull
repnz
nop
cld
jae
add
movzwl
clc
repnz
nop
cld
jae
add
flds
add
movb
mov
inc
add
add
xor
add
jne
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
add
pushl
clc
repnz
nop
cld
jae
and
add
add
mov
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
enter
add
std
add
push
mov
xchg
ret
add
in
out
add
pop
dec
push
mov
nop
leave
jmp
add
add
adc
outsl
push
clc
repnz
nop
cld
jae
add
cmp
mov
ja
add
mov
xchg
ret
add
jne
mov
mov
push
mov
xchg
ret
cmp
mov
pushf
pushl
clc
repnz
nop
cld
jae
and
add
add
std
clc
repnz
nop
cld
jae
add
cmp
add
clc
repnz
nop
cld
jae
sti
gs
add
jae
nop
nop
cld
jae
pop
daa
ss
add
mov
mov
repnz
nop
cld
jae
cmp
add
rcll
in
nop
leave
jmp
inc
add
mov
test
daa
xor
test
push
mov
nop
leave
jmp
and
add
out
mov
mov
and
push
mov
xchg
ret
out
add
xor
jno
inc
add
adc
nop
nop
cld
jae
add
clc
repnz
nop
cld
jae
mov
add
add
mov
nop
leave
jmp
xor
or
shlb
push
push
mov
xchg
ret
add
add
mov
mov
cmp
jmp
cld
jae
add
pop
psubw
add
icebp
stc
shl
clc
repnz
nop
cld
jae
mov
add
aaa
xchg
sbbl
inc
add
xchg
test
inc
xchg
xor
lea
in
nop
leave
jmp
add
mov
repnz
nop
cld
jae
pop
add
sti
sarb
add
clc
leave
clc
repnz
nop
cld
jae
shlb
enter
add
test
clc
repnz
nop
cld
jae
flds
or
add
clc
add
in
nop
leave
jmp
add
jae
idivl
std
gs
add
outsb
movsl
inc
add
pop
int3
push
out
sbb
rolb
mov
movb
push
movb
cmp
ret
add
mov
or
add
repnz
nop
cld
jae
inc
ss
sub
clc
repnz
nop
cld
jae
add
add
test
sub
mov
xchg
ret
add
inc
xor
out
clc
clc
repnz
nop
cld
jae
pop
add
enter
add
and
repnz
nop
cld
jae
pop
add
add
repz
sub
repnz
nop
cld
jae
decl
or
pusha
clc
repnz
nop
cld
jae
add
add
add
add
mov
push
mov
xchg
ret
and
add
hlt
and
adc
mov
clc
push
mov
nop
leave
jmp
shlb
enter
add
ja
add
push
aam
inc
push
mov
nop
leave
jmp
mov
add
incl
push
mov
nop
leave
jmp
pop
sub
xchg
xchg
iret
push
clc
repnz
nop
cld
jae
hlt
add
add
cmp
push
add
add
or
clc
repnz
nop
cld
jae
cmpsl
in
and
mov
ret
push
mov
xchg
ret
add
add
in
pop
add
push
mov
nop
leave
jmp
hlt
add
add
jmp
addb
add
add
xchg
cmp
add
xorb
xchg
clc
repnz
nop
cld
jae
add
test
add
jecxz
xor
mov
clc
repnz
nop
cld
jae
cmp
sub
je
clc
repnz
nop
cld
jae
add
add
xor
clc
repnz
nop
cld
jae
flds
add
and
cltd
push
push
mov
xchg
ret
add
add
add
add
rolb
mov
and
clc
repnz
nop
cld
jae
gs
sti
add
add
imul
dec
xchg
sub
add
inc
sub
test
mov
jmp
add
and
mov
add
adc
repnz
nop
cld
jae
ja
xchg
add
enter
push
cmp
ret
mov
pop
add
orb
fstps
nop
cld
jae
leave
mov
cmp
sub
mov
add
clc
repnz
nop
cld
jae
add
dec
cmp
repnz
nop
cld
jae
and
in
add
add
xor
clc
repnz
nop
cld
jae
cmc
add
sti
add
fsqrt
mov
clc
repnz
nop
cld
jae
add
adc
clc
repnz
nop
cld
jae
add
inc
add
sbb
add
clc
repnz
nop
cld
jae
in
dec
xchg
clc
repnz
nop
cld
jae
cmpsl
cmp
xchg
sldt
cmp
nop
nop
cld
jae
add
test
add
mov
nop
leave
jmp
add
add
push
push
out
xor
clc
repnz
nop
cld
jae
add
add
dec
mov
clc
repnz
nop
cld
jae
leave
cmp
mov
xchg
ret
add
psrlw
add
add
repnz
nop
cld
jae
mov
add
mov
fs
inc
add
and
cmp
xchg
clc
repnz
nop
cld
jae
add
daa
add
add
add
aam
jne
clc
repnz
nop
cld
jae
inc
add
add
nop
nop
cld
jae
add
stc
add
add
add
rcll
mov
clc
repnz
nop
cld
jae
adc
add
incl
mov
nop
cld
jae
add
add
add
repz
mov
xchg
ret
xchg
add
add
ljmp
cmp
add
add
mov
scas
outsb
add
mov
push
mov
xchg
ret
add
add
dec
xor
clc
repnz
nop
cld
jae
add
mov
mov
xchg
ret
add
adc
addb
push
push
mov
xchg
ret
add
add
daa
add
ja
aad
mov
push
mov
nop
leave
jmp
add
inc
fxch
cmp
nop
cld
jae
and
xor
gs
add
add
mov
add
clc
repnz
nop
cld
jae
ljmp
add
push
mov
nop
leave
jmp
add
pop
movswl
push
mov
nop
leave
jmp
add
sub
add
cmpl
jmp
xchg
andl
mov
loopne
mov
and
pop
clc
repnz
nop
cld
jae
inc
pop
add
add
add
imul
jle
inc
add
hlt
add
adc
and
and
shl
push
mov
nop
leave
jmp
cmpsl
lcall
adc
add
shrb
fdivr
repnz
nop
cld
jae
addl
mov
cmp
dec
mov
clc
repnz
nop
cld
jae
add
inc
enter
mov
js
mov
nop
leave
jmp
add
adc
clc
repnz
nop
cld
jae
add
add
mov
lret
push
mov
nop
leave
jmp
mov
cmpsl
flds
or
nop
nop
cld
jae
add
jno
add
sub
repnz
nop
cld
jae
add
add
daa
adc
mov
push
mov
nop
leave
jmp
add
push
push
mov
nop
leave
jmp
add
flds
add
add
sub
jp
jns
add
ds
inc
add
add
add
inc
push
rcrl
push
clc
repnz
nop
cld
jae
ss
decl
mov
arpl
clc
repnz
nop
cld
jae
ja
leave
sti
mov
icebp
dec
mov
clc
repnz
nop
cld
jae
pop
add
add
mov
jb
mov
push
addb
ret
cmp
clc
repnz
nop
cld
jae
add
ljmp
jae
sub
mov
add
cmp
xor
jns
jmp
nop
cld
jae
hlt
inc
add
add
orl
clc
dec
inc
clc
repnz
nop
cld
jae
add
push
mov
add
clc
repnz
nop
cld
jae
inc
sub
add
fdecstp
testb
mov
clc
repnz
nop
cld
jae
rcrb
mov
clc
repnz
nop
cld
jae
mov
pop
or
add
xor
add
push
mov
nop
leave
jmp
mov
pop
call
push
mov
nop
leave
jmp
add
add
adc
pop
add
clc
repnz
nop
cld
jae
mov
fsincos
mov
clc
repnz
nop
cld
jae
inc
mov
dec
push
push
mov
nop
leave
jmp
xchg
add
add
add
xchg
repnz
clc
repnz
nop
cld
jae
add
sub
repnz
nop
cld
jae
pop
add
add
and
push
mov
xchg
ret
out
add
add
iret
inc
add
add
cmpsl
mov
add
movsb
push
mov
xchg
ret
add
cmpsl
add
mov
clc
repnz
nop
cld
jae
add
add
mov
mov
push
rep
clc
repnz
nop
cld
jae
ja
flds
add
or
add
push
loope
add
hlt
mov
flds
push
jbe
pusha
push
mov
nop
leave
jmp
and
in
add
test
sbb
nop
nop
cld
jae
pop
mov
sbb
add
add
clc
repnz
nop
cld
jae
inc
xor
mov
add
rcrl
xchg
fimull
add
lods
fadds
xor
dec
add
pop
clc
repnz
nop
cld
jae
ss
add
mov
push
mov
nop
leave
jmp
xchg
add
pop
inc
sti
inc
sti
mov
pop
mov
clc
repnz
nop
cld
jae
sub
and
mov
mov
nop
leave
jmp
sub
add
xchg
add
mov
xchg
ret
adc
mov
sub
mov
xchg
ret
mov
and
inc
add
enter
sbb
repnz
nop
cld
jae
xor
test
shrb
push
mov
xchg
ret
add
sti
rolb
pop
push
or
rol
clc
repnz
nop
cld
jae
add
add
mov
loop
inc
add
cmp
mov
cmp
xor
add
clc
repnz
nop
cld
jae
add
xor
push
mov
xchg
ret
pop
addl
add
cmp
in
in
je
clc
repnz
nop
cld
jae
add
pusha
add
xor
add
clc
repnz
nop
cld
jae
push
rolb
mov
mov
clc
repnz
nop
cld
jae
incl
dec
mov
clc
repnz
nop
cld
jae
push
add
pop
add
push
mov
nop
leave
jmp
ja
xor
add
nop
leave
jmp
add
add
add
xchg
addb
mov
in
call
push
mov
nop
leave
jmp
leave
add
add
sti
xchg
clc
repnz
nop
cld
jae
jae
inc
test
add
int
popa
add
mov
nop
leave
jmp
add
add
nop
nop
cld
jae
pop
push
leave
add
add
add
push
mov
jbe
and
pushf
jae
mov
inc
add
mov
push
mov
nop
leave
jmp
xor
rolb
pop
add
jns
xor
push
mov
nop
leave
jmp
add
mov
add
push
dec
mov
clc
repnz
nop
cld
jae
sti
add
in
or
je
clc
repnz
nop
cld
jae
pop
inc
add
add
repnz
nop
cld
jae
add
inc
add
mov
mov
push
mov
nop
leave
jmp
mov
add
add
add
mov
clc
repnz
nop
cld
jae
add
sub
mov
clc
repnz
nop
cld
jae
add
add
cmpsl
test
mov
nop
nop
cld
jae
add
mov
cmp
mov
add
repnz
nop
cld
jae
add
jae
mov
clc
repnz
nop
cld
jae
add
and
test
add
add
cmp
nop
nop
cld
jae
pop
mov
mov
push
mov
nop
leave
jmp
incl
pop
add
mov
adc
repnz
nop
cld
jae
add
ss
pop
clc
repnz
nop
cld
jae
cmc
inc
add
add
push
mov
lods
adc
add
repnz
nop
cld
jae
add
xchg
jg
add
repnz
nop
cld
jae
inc
add
pop
add
adc
nop
cld
jae
xor
sub
or
repnz
nop
cld
jae
add
jno
and
xchg
add
repz
mov
nop
leave
jmp
cmc
pop
add
add
xchg
cltd
push
clc
repnz
nop
cld
jae
and
add
xor
add
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
xchg
inc
mov
add
mov
repnz
nop
cld
jae
push
add
ljmp
add
add
repnz
nop
cld
jae
add
mov
add
mov
xchg
ret
xor
add
add
add
add
in
aas
add
push
mov
nop
leave
jmp
add
xchg
mov
outsl
mov
clc
repnz
nop
cld
jae
add
not
mov
ret
clc
repnz
nop
cld
jae
add
stc
pop
inc
add
xor
dec
mov
clc
repnz
nop
cld
jae
add
cmp
cli
push
mov
nop
leave
jmp
leave
add
add
add
add
clc
repnz
nop
cld
jae
add
add
addl
sahf
push
clc
repnz
nop
cld
jae
xor
leave
test
push
push
mov
xchg
ret
and
addb
out
add
rclb
xor
inc
add
xor
add
pop
clc
repnz
nop
cld
jae
add
add
sub
nop
nop
cld
jae
mov
ss
add
mov
xchg
ret
jno
xchg
add
stc
add
leave
sub
repnz
nop
cld
jae
add
cmp
cmp
nop
cld
jae
cmp
xchg
add
shr
mov
add
in
nop
leave
jmp
hlt
rclb
sbb
in
mov
cmpsl
mov
add
xor
add
xor
repnz
nop
cld
jae
fnstenv
in
add
fxch
mov
clc
repnz
nop
cld
jae
add
add
add
sti
push
clc
repnz
nop
cld
jae
pop
add
pop
mov
dec
add
clc
repnz
nop
cld
jae
sub
xor
add
clc
repnz
nop
cld
jae
mov
add
cmpsb
test
test
ljmp
cld
jae
ljmp
add
add
repnz
nop
cld
jae
add
stc
icebp
ss
push
mov
nop
leave
jmp
mov
mov
inc
pop
inc
adc
mov
pop
clc
repnz
nop
cld
jae
mov
and
add
mov
clc
repnz
nop
cld
jae
jno
add
sub
and
push
mov
sbb
fldl
inc
add
adc
add
clc
repnz
nop
cld
jae
sub
addl
rolb
mov
push
mov
nop
leave
jmp
gs
mov
add
jae
dec
call
push
mov
nop
leave
jmp
adc
add
sub
repnz
nop
cld
jae
add
add
jno
dec
dec
push
mov
nop
leave
jmp
add
cmpb
xchg
divl
add
pop
icebp
mov
inc
add
add
add
mov
xchg
mov
nop
cld
jae
add
add
push
add
jmp
nop
nop
cld
jae
ss
add
clc
repnz
nop
cld
jae
jno
add
mov
add
jge
cwtl
push
add
clc
repnz
nop
cld
jae
mov
daa
push
jg
rclb
push
fiaddl
xchg
ret
shlb
xor
cmc
mov
clc
repnz
nop
cld
jae
add
flds
add
fldcw
nop
cld
jae
enter
adc
enter
add
in
nop
leave
jmp
inc
add
mov
add
jno
add
nop
nop
cld
jae
add
add
add
imull
adc
add
repnz
nop
cld
jae
test
add
rorl
ljmp
add
add
add
pop
mov
repnz
nop
cld
jae
cmp
add
add
aas
mov
clc
repnz
nop
cld
jae
pop
mov
incl
add
cmc
cmpsl
testl
popa
test
push
mov
xchg
ret
add
mov
add
adc
jb
mov
push
jp
jmp
nop
cld
jae
add
add
add
das
add
push
mov
xchg
ret
jno
sti
in
cmpl
mov
clc
repnz
nop
cld
jae
fsts
xchg
gs
add
add
mov
mov
add
mov
push
mov
nop
leave
jmp
add
pop
cmpsl
xor
xor
mov
repnz
nop
cld
jae
pop
jae
xchg
add
sub
repnz
nop
cld
jae
pop
cmp
sti
add
add
clc
repnz
nop
cld
jae
test
mov
inc
push
mov
xchg
ret
sti
add
inc
test
mov
jp
insb
inc
jb
clc
repnz
nop
cld
jae
add
add
es
mov
push
mov
nop
leave
jmp
cmovno
hlt
subb
cld
jae
add
add
inc
add
sub
fdivrp
repnz
nop
cld
jae
sti
and
mov
add
ret
into
push
clc
repnz
nop
cld
jae
jae
hlt
add
ja
add
mov
nop
leave
jmp
mov
mov
lds
fs
shll
repnz
nop
cld
jae
mov
add
add
add
jo
mov
and
jmp
incl
mov
add
add
add
shrb
ljmp
mov
and
add
test
inc
enter
clc
repnz
nop
cld
jae
mov
add
add
push
add
push
mov
xchg
ret
cmpsl
mov
inc
add
popl
into
add
push
mov
nop
leave
jmp
pop
add
add
movswl
clc
repnz
nop
cld
jae
xchg
addb
leave
xor
push
mov
xchg
ret
xchg
sbb
add
add
xchg
push
mov
popa
roll
add
adcb
pop
add
ljmp
and
xchg
xchg
repnz
nop
cld
jae
ss
add
add
leave
jae
fsubrp
repz
clc
repnz
nop
cld
jae
add
jg
push
mov
nop
leave
jmp
enter
stc
xor
fbstp
rclb
lds
xchg
ret
xchg
testl
test
nop
nop
cld
jae
add
add
pop
add
push
mov
nop
leave
jmp
flds
add
adc
add
rep
push
mov
nop
leave
jmp
enter
ljmp
push
mov
xchg
ret
pop
leave
mov
add
add
movsl
adc
add
mov
nop
leave
jmp
add
add
mov
clc
repnz
nop
cld
jae
add
push
mov
nop
cld
jae
add
incl
add
mull
sub
mov
xchg
ret
xchg
stc
jno
add
sarb
lock
pushl
add
add
add
add
hlt
pop
add
mov
add
clc
repnz
nop
cld
jae
inc
bswap
cmp
test
idiv
clc
repnz
nop
cld
jae
add
sbbl
jae
add
add
pop
add
les
clc
repnz
nop
cld
jae
test
add
xchg
movzwl
clc
repnz
nop
cld
jae
add
incl
or
mov
clc
repnz
nop
cld
jae
fldcw
repnz
or
nop
leave
jmp
and
popl
mov
push
mov
xchg
ret
mov
jno
sub
cmp
push
mov
xchg
ret
add
mov
test
xchg
add
add
clc
repnz
nop
cld
jae
add
add
in
insl
call
clc
repnz
nop
cld
jae
add
xor
dec
mov
push
mov
nop
leave
jmp
add
add
ljmp
jmp
jae
add
add
and
xchg
xchg
jle
push
mov
xchg
ret
add
add
add
add
mov
in
nop
leave
jmp
fldenv
and
gs
add
mov
sbb
repnz
nop
cld
jae
cmp
cmp
cmp
pusha
add
pop
push
mov
xchg
ret
pop
xchg
lcall
inc
mov
jb
clc
repnz
nop
cld
jae
test
dec
add
push
mov
xchg
ret
cmp
addb
add
jmp
testl
mov
add
add
push
mov
xchg
ret
xchg
add
add
jmp
pop
add
add
add
add
cmp
xor
inc
adc
add
push
mov
nop
leave
jmp
add
and
add
dec
or
add
repnz
nop
cld
jae
push
out
xor
add
clc
repnz
nop
cld
jae
enter
add
add
scas
mov
push
mov
xchg
ret
cmp
out
add
add
repnz
nop
cld
jae
inc
add
lcall
nop
cld
jae
pop
xchg
add
add
js
push
mov
xchg
ret
add
ljmp
pop
mov
clc
repnz
nop
cld
jae
sti
incl
daa
push
add
push
push
mov
xchg
ret
xchg
pop
add
add
xor
push
mov
nop
leave
jmp
rolb
add
sbb
nop
nop
cld
jae
pop
add
addb
push
repnz
nop
cld
jae
ljmp
fsubrs
ja
fs
repnz
nop
cld
jae
add
xor
jne
add
nop
nop
cld
jae
add
add
cmp
add
add
jne
push
mov
xchg
ret
cmpsl
cmp
cmc
add
adc
test
repnz
nop
cld
jae
add
add
push
fadds
xchg
ret
add
add
fistps
mov
xchg
ret
and
enter
add
rolb
mov
clc
repnz
nop
cld
jae
cmc
and
leave
add
adc
mov
mov
clc
repnz
nop
cld
jae
inc
fprem1
add
int
shrb
mov
xchg
ret
add
pop
hlt
and
add
nop
leave
jmp
xchg
out
out
pop
add
sti
push
clc
repnz
nop
cld
jae
inc
add
gs
dec
or
in
nop
leave
jmp
add
ljmp
mov
add
push
mov
xchg
ret
push
mov
add
pop
lea
clc
repnz
nop
cld
jae
add
incl
add
nop
nop
cld
jae
pop
add
add
mov
push
mov
xchg
ret
leave
mov
add
adc
cmp
nop
nop
cld
jae
cmp
mov
push
lods
mov
clc
repnz
nop
cld
jae
add
add
adc
fnstcw
mov
push
mov
nop
leave
jmp
add
enter
add
nop
cld
jae
add
add
call
in
nop
leave
jmp
cmp
xchg
inc
mov
loopne
add
sub
add
xchg
mov
cmp
mov
nop
leave
jmp
adc
sub
flds
add
movb
add
clc
repnz
nop
cld
jae
psubq
out
push
push
mov
nop
leave
jmp
add
sti
add
add
add
add
clc
repnz
nop
cld
jae
add
add
add
addb
repz
mov
clc
repnz
nop
cld
jae
adc
add
push
mov
and
cli
add
add
in
nop
leave
jmp
enter
add
mov
nop
leave
jmp
add
ss
adc
mov
clc
repnz
nop
cld
jae
add
cmpb
shr
clc
repnz
nop
cld
jae
add
in
add
jl
popa
add
adc
mov
mov
and
sub
inc
and
neg
add
dec
add
mov
xchg
ret
pop
add
add
add
dec
xor
clc
repnz
nop
cld
jae
add
daa
add
push
clc
repnz
nop
cld
jae
add
divl
add
mov
add
clc
repnz
nop
cld
jae
add
mov
dec
call
clc
repnz
nop
cld
jae
inc
add
mov
test
push
jecxz
add
adc
add
add
mov
jne
clc
repnz
nop
cld
jae
cmp
mov
xchg
ret
add
test
add
add
xchg
sti
nop
clc
repnz
nop
cld
jae
adc
inc
add
add
add
loopne
inc
add
add
xchg
add
add
imul
nop
leave
jmp
add
add
pop
sub
lods
and
clc
repnz
nop
cld
jae
adc
xchg
add
mov
xchg
ret
pop
add
xchg
fnstenv
adc
repnz
nop
cld
jae
pop
add
cmp
ljmp
nop
nop
cld
jae
pop
adc
mov
push
clc
repnz
nop
cld
jae
add
add
cmp
mov
mov
clc
repnz
nop
cld
jae
xchg
add
aad
add
cmp
clc
repnz
nop
cld
jae
adcl
mov
xchg
ret
xchg
enter
ja
jne
clc
repnz
nop
cld
jae
flds
push
jns
inc
push
mov
xchg
ret
add
mov
sti
add
add
add
idiv
clc
repnz
nop
cld
jae
ljmp
mov
nop
leave
jmp
daa
add
inc
flds
stc
cmp
cs
push
mov
nop
leave
jmp
add
add
or
ljmp
nop
nop
cld
jae
and
add
mov
mov
add
dec
int
add
and
add
hlt
add
xchg
inc
add
repnz
nop
cld
jae
jae
add
gs
cs
insb
clc
repnz
nop
cld
jae
add
add
mov
mov
mov
std
mov
push
mov
nop
leave
jmp
mov
add
repnz
nop
cld
jae
sti
pop
mov
add
dec
push
mov
fs
add
mov
add
add
and
mov
mov
clc
repnz
nop
cld
jae
add
cmp
out
add
in
nop
leave
jmp
mov
jmp
jno
flds
clc
repnz
nop
cld
jae
add
jno
push
addb
ja
add
clc
repnz
nop
cld
jae
sub
mov
add
add
clc
repnz
nop
cld
jae
add
xchg
add
mov
push
mov
nop
leave
jmp
add
add
push
mov
xchg
ret
jmp
add
inc
xor
adc
repnz
nop
cld
jae
inc
inc
flds
mov
repnz
nop
cld
jae
pop
hlt
cmp
out
mov
not
clc
repnz
nop
cld
jae
add
mov
mov
push
mov
xchg
ret
xchg
jp
dec
and
clc
repnz
nop
cld
jae
mov
and
nop
nop
cld
jae
mov
add
or
mov
sar
nop
nop
cld
jae
ljmp
enter
clc
repnz
nop
cld
jae
ja
mov
inc
mov
lock
clc
repnz
nop
cld
jae
xchg
test
inc
mulps
sub
inc
add
or
xor
ja
push
add
dec
cmp
repnz
nop
cld
jae
add
mov
xchg
push
lret
and
repnz
nop
cld
jae
mov
add
push
std
decl
push
mov
nop
leave
jmp
leave
mov
mov
mov
clc
repnz
nop
cld
jae
out
add
ja
jmp
push
mov
nop
leave
jmp
add
add
mov
fnstenv
jb
mov
xchg
nop
leave
jmp
add
cmp
add
ljmp
repnz
nop
cld
jae
inc
sarb
cmpsl
add
add
push
clc
repnz
nop
cld
jae
add
cmp
add
nop
cld
jae
add
mov
jae
out
push
pop
clc
repnz
nop
cld
jae
ja
add
testl
push
mov
xchg
ret
mov
add
cmc
daa
cld
add
clc
repnz
nop
cld
jae
add
cmc
pop
pop
add
push
mov
arpl
sbb
sbb
add
sbb
clc
repnz
nop
cld
jae
ja
add
and
repnz
nop
cld
jae
add
add
daa
adc
push
clc
repnz
nop
cld
jae
ljmp
ss
jmp
add
add
pop
jae
cmp
add
jno
fimull
add
in
nop
leave
jmp
adc
mov
nop
leave
jmp
cmp
add
pushl
enter
nop
cld
jae
add
hlt
sub
xchg
clc
mov
push
mov
xchg
ret
pop
mov
and
push
push
mov
xchg
ret
or
add
mov
incl
pop
jmp
inc
mov
inc
add
add
add
jns
clc
repnz
nop
cld
jae
add
pop
inc
add
andl
mov
clc
repnz
nop
cld
jae
ja
add
add
test
clc
repnz
nop
cld
jae
gs
add
add
add
mov
push
mov
xchg
ret
add
mov
add
add
and
mov
nop
leave
jmp
add
add
in
rolb
mov
add
mov
xchg
ret
add
add
in
aas
je
clc
repnz
nop
cld
jae
mov
push
mov
nop
leave
jmp
test
add
inc
nop
add
mov
xchg
ret
lcall
push
adc
mov
incl
fsincos
test
add
push
add
mov
inc
aad
inc
add
test
pop
addl
popa
mov
add
mov
in
add
mov
cmp
mov
daa
mov
lock
xor
push
mov
nop
leave
jmp
ja
test
and
mov
push
mov
xchg
ret
add
add
icebp
adc
testl
add
adc
mov
add
add
dec
mov
clc
repnz
nop
cld
jae
add
add
add
add
repnz
nop
cld
jae
xchg
inc
add
popl
add
add
add
mov
sbb
test
add
add
repnz
nop
cld
jae
add
and
push
mov
nop
leave
jmp
inc
push
add
cmp
faddl
repnz
nop
cld
jae
daa
pop
rcr
stc
pop
mov
jb
mov
push
mov
xchg
ret
hlt
add
add
pop
leave
test
push
mov
stc
add
xchg
in
or
aas
add
add
mov
clc
repnz
nop
cld
jae
jno
mov
in
repnz
add
clc
repnz
nop
cld
jae
pop
add
test
xor
clc
repnz
nop
cld
jae
add
inc
xchg
pop
add
mov
nop
nop
cld
jae
out
hlt
xor
mov
sbb
push
mov
nop
leave
jmp
mov
cs
push
mov
xchg
ret
add
adc
xorl
mov
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
add
test
sub
inc
inc
add
push
mov
nop
leave
jmp
add
xorl
test
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
rolb
add
or
add
add
and
mov
xchg
ret
rolb
add
rorl
clc
repnz
nop
cld
jae
mov
pop
inc
sub
cmpsb
sub
je
sub
repnz
nop
cld
jae
add
test
stc
filds
mov
xchg
ret
daa
sti
add
add
lea
repnz
nop
cld
jae
xor
xor
pop
mov
add
push
mov
xchg
ret
add
add
inc
adc
test
push
mov
nop
leave
jmp
ja
sub
mov
enter
or
push
sub
and
inc
add
add
test
and
sahf
add
clc
repnz
nop
cld
jae
mov
idiv
xchg
clc
repnz
nop
cld
jae
xor
subl
mov
cmc
dec
mov
clc
repnz
nop
cld
jae
inc
ss
and
and
jne
push
mov
nop
leave
jmp
add
add
sbb
call
cmpb
adc
add
add
lods
sub
clc
repnz
nop
cld
jae
inc
add
daa
inc
shlb
add
jnp
jg
push
mov
nop
leave
jmp
add
mov
xchg
repnz
nop
cld
jae
add
dec
add
jmp
add
add
xchg
xorb
inc
mov
sub
add
repnz
nop
cld
jae
add
xor
pop
popa
clc
repnz
nop
cld
jae
jae
add
push
add
xchg
dec
mov
push
mov
xchg
ret
addb
add
incl
mov
clc
repnz
nop
cld
jae
ljmp
add
clc
repnz
nop
cld
jae
in
add
and
mov
movsl
jb
mov
xchg
add
repnz
nop
cld
jae
add
add
mov
lds
xchg
ret
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
nop
cld
jae
add
rolb
add
mov
jg
icebp
clc
repnz
nop
cld
jae
add
add
add
out
call
clc
repnz
nop
cld
jae
add
in
push
mov
xchg
ret
xchg
adc
add
mov
clc
repnz
nop
cld
jae
add
add
in
nop
leave
jmp
cmpsl
inc
add
add
inc
ljmp
cld
jae
ja
and
add
clc
repnz
nop
cld
jae
ljmp
add
add
add
adc
add
mov
sub
adc
repnz
nop
cld
jae
pop
adc
jb
mov
mov
test
call
in
nop
leave
jmp
cmp
mov
mov
xchg
ret
inc
enter
out
ljmp
nop
nop
cld
jae
testl
mov
add
push
mov
xchg
ret
add
ljmp
push
clc
repnz
nop
cld
jae
inc
inc
xor
push
mov
xchg
ret
pop
add
in
leave
cmpsl
testl
push
mov
xchg
ret
add
add
enter
ja
outsb
je
repnz
nop
cld
jae
add
inc
mov
add
add
add
in
nop
leave
jmp
push
inc
add
mov
mov
nop
nop
cld
jae
sub
cmp
push
push
and
mov
add
clc
repnz
nop
cld
jae
add
mov
push
shrl
arpl
mov
nop
leave
jmp
add
add
idiv
call
in
nop
leave
jmp
inc
xchg
add
mov
add
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
stc
cmp
ret
andl
add
addl
add
jmp
add
leave
enter
add
sbb
add
in
nop
leave
jmp
add
clc
repnz
nop
cld
jae
sub
add
add
add
jne
push
mov
nop
leave
jmp
add
mov
adc
repnz
nop
cld
jae
add
and
add
clc
repnz
nop
cld
jae
add
add
xchg
add
mov
xchg
ret
mov
flds
add
mov
repnz
nop
cld
jae
add
mov
mov
lods
mov
clc
repnz
nop
cld
jae
add
enter
imul
add
sbbb
add
add
add
add
and
push
mov
xchg
ret
or
leave
xor
xor
test
sub
inc
stc
hlt
add
pop
cmp
inc
ss
ljmp
mov
add
add
jae
test
mov
add
clc
repnz
nop
cld
jae
mov
push
shl
hlt
add
inc
or
hlt
in
mov
pop
ss
inc
add
add
mov
nop
leave
jmp
adc
add
and
push
add
mov
repnz
nop
cld
jae
pop
and
divl
cs
push
mov
xchg
ret
add
push
inc
add
cmc
add
adc
cmp
nop
nop
cld
jae
pop
flds
ss
add
push
cmp
nop
nop
cld
jae
pop
flds
mov
inc
adc
in
nop
leave
jmp
test
add
ja
add
je
clc
repnz
nop
cld
jae
inc
daa
jno
add
jne
clc
repnz
nop
cld
jae
mov
ja
jb
mov
push
mov
xchg
ret
add
inc
add
add
xlat
mov
jmp
incl
add
sti
add
mov
push
mov
jle
add
in
nop
leave
jmp
add
cmp
leave
add
or
clc
repnz
nop
cld
jae
add
sbb
dec
cmp
repnz
nop
cld
jae
gs
div
xchg
loop
push
mov
nop
leave
jmp
add
add
repnz
nop
cld
jae
jno
add
add
or
adc
repnz
nop
cld
jae
add
add
add
push
call
repnz
nop
cld
jae
add
add
lds
mov
push
mov
xchg
ret
add
jae
add
xchg
add
icebp
clc
repnz
nop
cld
jae
add
add
mov
pop
jne
push
clc
repnz
nop
cld
jae
xchg
testl
add
cmpl
in
nop
leave
jmp
add
add
push
push
mov
nop
leave
jmp
cmp
pop
add
ljmp
add
add
add
addb
add
cs
push
mov
nop
leave
jmp
pop
add
ja
or
test
mov
push
mov
nop
leave
jmp
mov
add
mov
xor
add
repnz
nop
cld
jae
add
sti
add
adc
repnz
nop
cld
jae
mov
inc
inc
into
add
clc
repnz
nop
cld
jae
stc
fldenv
add
mov
pop
clc
repnz
nop
cld
jae
add
leave
add
add
pop
cmp
in
cltd
xchg
rcr
cmp
add
jbe
add
sub
das
sbb
es
mov
clc
repnz
nop
cld
jae
push
cmp
add
mov
mov
xor
add
clc
repnz
nop
cld
jae
mov
sbb
push
mov
nop
leave
jmp
add
sub
add
in
clc
repnz
nop
cld
jae
inc
mov
outsl
pushl
push
mov
xchg
ret
add
add
and
mov
fiadds
xchg
ret
add
testl
add
mov
mov
clc
repnz
nop
cld
jae
jno
add
push
and
push
mov
xchg
ret
out
mov
pushl
push
mov
nop
cld
jae
cmp
add
add
add
add
clc
repnz
nop
cld
jae
add
add
call
push
mov
xchg
ret
pop
inc
add
pop
andl
jnp
leave
push
mov
xchg
ret
pop
xchg
in
push
add
ret
pusha
add
clc
repnz
nop
cld
jae
add
mov
and
clc
repnz
nop
cld
jae
add
fldcw
mulb
mov
push
mov
nop
leave
jmp
ljmp
pop
je
push
mov
xor
cmp
ja
xor
push
jne
mov
push
mov
nop
leave
jmp
xchg
pop
mov
sub
jns
inc
cmp
repnz
nop
cld
jae
sti
enter
add
mov
xor
nop
cld
jae
cmpsl
add
add
loopne
mov
xchg
ret
add
fstps
mov
xor
mov
push
mov
add
outsl
das
stos
or
ret
ds
enter
mov
mov
stc
out
or
add
in
nop
add
mov
xlat
cld
cs
sti
rolb
mov
add
mov
mov
add
outsl
rolb
mov
push
sbb
in
stos
mov
mov
add
in
movsb
cld
push
xchg
ss
add
sub
push
add
ja
add
push
inc
add
adc
mov
mov
mov
mov
jp
sub
aam
ds
and
mov
add
mov
xchg
sbb
mov
dec
xchg
mov
cmp
mov
add
push
mov
ds
mov
mov
mov
jge
xchg
jg
subl
sub
and
mov
mov
aad
push
xlat
ret
push
xchg
add
add
push
nop
add
xchg
movsb
xchg
das
jecxz
rorl
or
orl
fs
cmc
mov
rolb
mov
adc
add
movsl
dec
sahf
outsb
aaa
and
mov
fistpll
mov
dec
xor
pusha
add
mulb
lcall
sbb
pop
or
add
popa
in
fimuls
mov
cmp
rorl
lods
inc
gs
popa
jecxz
push
add
lods
sti
mov
popa
mov
jp
rolb
sbb
mov
adc
out
sub
jns
add
jle
cmp
mov
add
mov
sub
add
in
dec
push
testb
mov
jle
ret
leave
or
add
mov
add
jp
xchg
mov
inc
xchg
add
sbb
add
adc
mov
xchg
pop
lds
push
add
mov
push
xchg
push
mov
out
jno
xlat
gs
add
leave
leave
icebp
je
xchg
imul
or
add
xlat
xor
mov
outsl
or
pop
test
add
std
mov
xchg
push
sub
add
add
add
insb
xchg
and
add
xchg
into
stc
inc
push
fimull
cmpsl
adc
mov
lods
lods
lret
or
xchg
pop
or
pop
add
adc
mov
mov
loop
mov
es
xlat
push
daa
mov
ljmp
mov
add
mov
dec
cmp
mov
lds
scas
xchg
rcr
cli
lea
pop
sbb
loope
mov
mov
sti
rep
add
add
insl
mov
sub
rolb
mov
add
mov
mov
mov
add
add
cmp
inc
cmp
pop
cmpsb
imul
cmp
addb
repz
add
mov
cmc
adc
mov
jns
add
movsb
mov
lretw
dec
inc
add
sahf
je
adc
push
lds
std
cs
mov
mov
or
add
loopne
mov
add
out
jae
loop
mov
add
icebp
add
dec
mov
mov
add
fdivl
divb
add
inc
pop
and
mov
mov
add
cmc
lea
add
and
mov
pop
in
fsubr
cmp
jne
je
push
mov
mov
lea
cmpsl
cld
leave
daa
inc
add
sub
fwait
cmp
pop
mov
mov
cli
aad
pop
mov
sub
test
and
mov
push
enter
push
loop
mov
test
inc
add
inc
dec
xlat
xor
pop
mov
imul
mov
out
mov
aas
adc
repz
outsb
addb
int3
cmp
jns
bound
mov
sbb
cmp
sahf
mov
mov
mov
xchg
mov
adc
add
ret
mov
adc
orl
mov
cmp
sub
mov
pop
and
iret
push
cmp
xor
hlt
cli
jae
add
and
sbb
addb
lods
mov
jne
add
cmp
mov
mov
sub
mov
scas
cmp
lahf
sarl
fwait
dec
in
fadds
add
sbb
pop
scas
enter
rolb
rolb
mov
dec
inc
xchg
cmpsl
ljmp
mov
add
mov
fxch
js
jmp
stos
into
or
xor
add
rolb
mov
add
jb
mov
push
fisttps
inc
add
add
std
aad
mov
add
mov
adc
mov
push
mov
xor
es
fdivp
nop
add
mov
fnstsw
test
xor
mov
loopne
mov
push
push
add
mov
add
add
dec
js
jo
mov
loope
add
xchg
mov
inc
add
push
mov
mov
cmp
add
mov
push
sub
push
add
aaa
bound
mov
push
push
das
sahf
pop
mov
and
add
sub
arpl
dec
pop
sbb
jbe
mov
push
lock
cld
nop
add
lods
or
add
mov
xchg
pushf
xor
push
add
xor
mov
mov
jae
xchg
add
sti
xchg
push
dec
ss
ficomps
rolb
mov
xchg
mov
push
dec
sahf
cld
mov
sub
cmp
rolb
mov
sub
in
add
add
mov
mov
insl
clc
aam
je
fst
in
lock
xor
sub
into
xchg
stos
enter
push
out
jb
mov
add
inc
jge
inc
inc
sahf
inc
cmp
mov
scas
lea
push
add
sti
push
fsts
push
fwait
xor
mov
fbld
ljmp
popf
xor
mov
mov
jbe
lahf
enter
dec
in
test
repnz
leave
bound
mov
add
rolb
mov
jmp
mov
pop
gs
sbb
insb
xchg
leave
ret
mov
cmp
add
out
or
add
repz
or
xor
mov
pop
gs
std
rolb
mov
jl
repnz
mov
mov
fidivrs
dec
pop
jne
loopne
mov
add
dec
in
rolb
pushf
mov
mov
mov
mov
jle
xor
mov
mov
test
test
cmp
sub
pop
lahf
sbb
int3
pop
mov
stos
icebp
and
mov
mov
add
inc
and
mov
xor
push
pop
orl
imul
mov
or
xor
mov
push
xor
add
mov
js
jge
add
cmp
add
pop
jne
add
lods
dec
add
mov
jbe
std
loop
mov
jl
cmpsb
jne
inc
sub
and
outsb
mov
inc
repz
add
call
sbb
xchg
adc
add
lock
cmpsl
xchg
sahf
lock
iret
jmp
add
adc
lods
stc
inc
inc
add
leave
fwait
mov
adc
mov
push
mov
push
ljmp
mov
add
mov
jp
stos
out
jecxz
out
xchg
xor
pop
push
in
icebp
decl
adc
mov
outsb
mov
mov
add
popa
mov
add
mov
add
push
loop
mov
cmc
mov
leave
stos
rorl
add
and
adc
fsubs
aas
sbb
sbb
inc
inc
and
mov
add
add
add
mov
mov
mov
jg
add
add
mov
push
add
add
mov
ss
add
add
loop
mov
xlat
emms
pop
pop
pop
jge
mov
mov
push
jns
sti
mov
mov
into
or
cmp
imul
mov
lods
xchg
add
mov
scas
movsl
nop
add
add
add
xchg
add
or
push
popf
iret
ret
mov
add
mov
pusha
add
mov
mov
adcl
pusha
add
mov
cli
fsubr
cs
cli
mov
pop
add
dec
movsb
adc
or
add
sub
cld
add
mov
inc
add
mov
pusha
add
or
xchg
add
pop
xor
lret
add
mov
add
mov
out
push
dec
jae
in
xchg
cs
add
add
xchg
add
mov
popf
push
cmp
setb
mov
mov
add
mov
mov
xchg
aaa
call
aas
pop
aam
mov
xor
mov
adc
clc
out
xlat
and
and
mov
xlat
mov
test
push
inc
jns
adc
pop
rolb
mov
mov
rolb
add
add
pop
cmp
ds
frstor
scas
and
add
loope
adc
mov
fwait
leave
out
mov
add
pushf
inc
sub
add
ja
add
sbb
aam
popa
lret
jge
push
nop
add
jmp
fiadds
pusha
add
ljmp
add
add
inc
daa
pop
daa
push
dec
mov
mov
add
clc
push
fildll
mov
hlt
mov
mov
repz
mov
mov
lret
fcoml
mov
int
adc
fildll
xchg
sti
xor
mov
js
jb
mov
mov
mov
rolb
mov
jg
xchg
add
pop
lahf
and
mov
dec
sbb
mov
addb
sub
or
ret
fstl
int
pop
fldcw
pop
inc
sbb
sub
add
push
adc
mov
add
cmpsl
iret
call
jecxz
push
arpl
aam
add
out
mov
loop
mov
add
mov
imul
xor
mov
mov
mov
bound
mov
cmc
jg
adc
mov
add
sbb
add
mov
aas
dec
pop
test
aam
jnp
pop
addb
nop
add
mov
and
mov
add
add
ret
sbb
push
pushf
jl
push
test
fimuls
push
sub
insl
mov
mov
jmp
add
sbb
jne
fisubrl
or
mov
pop
xchg
lods
imul
jbe
popf
ret
jecxz
test
mov
jne
adc
rolb
mov
inc
xor
test
add
in
test
push
add
pop
sti
xorl
add
je
add
mov
addb
sbb
mov
sub
xlat
call
aaa
adc
lds
test
cmp
lret
sbb
fs
sbb
inc
add
lahf
mov
mov
sub
mov
adc
enter
stc
mov
int3
or
cmp
lock
sub
push
jle
jns
jecxz
or
add
push
jns
pop
push
bound
mov
cwtl
lods
lea
into
sbb
repz
cmp
push
mov
imul
clc
add
mov
add
popf
xor
mov
add
add
add
test
bound
mov
dec
dec
adc
mov
add
mov
push
jge
ds
or
fldt
mov
iret
mov
add
add
mov
or
sarl
mov
mov
test
cmp
pop
dec
cmc
lret
loopne
mov
pop
out
push
jecxz
add
ljmp
mov
add
loop
mov
ss
sub
inc
cmp
pop
lahf
cmpsb
inc
rolb
xor
ja
outsl
cmc
xor
mov
out
lret
add
and
in
mov
sub
and
int3
sub
add
mov
mov
mov
add
jno
out
pop
mov
outsb
movsl
cmp
popf
cli
popf
cmp
fcoml
pop
insb
addr16
cmc
data16
add
int
pusha
add
jne
add
sub
std
cmp
add
pop
pop
mov
and
cld
fildl
test
popa
cmc
jecxz
int
push
sbb
xchg
add
ficomps
xchg
movsb
xchg
mov
pop
or
xchg
mov
sub
adc
mov
push
stos
rolb
mov
xchg
lock
dec
xor
lock
testb
mov
imul
inc
jp
ret
loope
fucomp
imul
add
add
scas
insl
cmp
sbb
cmp
inc
fs
test
xorl
mov
mov
addb
cmpxchg
mov
mov
and
mov
add
dec
sbb
fdivrl
push
hlt
in
cld
mov
mov
push
movsl
cwtl
clc
xchg
mov
add
lahf
cltd
pop
movsb
pop
jmp
add
mov
add
add
push
cmpsb
jae
outsl
xor
pop
push
add
lock
dec
lods
cs
jns
adc
mov
xor
cltd
jne
add
sub
add
arpl
add
mov
hlt
adc
inc
outsb
popa
cmpsl
pop
in
repnz
mov
add
pop
sub
dec
bound
mov
lds
add
outsl
add
mov
mov
lds
xor
add
xor
rolb
iret
jp
and
mov
mov
add
xlat
ret
mov
rcrl
push
xchg
add
fiadds
mov
pop
jo
mov
in
inc
in
jmp
add
mov
add
xlat
jmp
out
push
add
mov
add
and
lcall
dec
jle
in
outsl
fcomps
pop
cmp
mov
sub
sti
rolb
sbb
add
add
add
fwait
inc
inc
add
inc
pop
push
scas
in
cmp
and
add
push
sbb
push
shrl
test
pop
loope,pt
push
mov
les
rolb
mov
movsl
xchg
lret
xor
add
push
aas
cmp
scas
imul
adc
mov
rolb
mov
mov
add
jl
push
inc
cmp
xchg
add
insb
cltd
or
add
imul
imul
pop
pop
scas
and
mov
xchg
cli
xor
fistps
or
mov
add
pop
sbb
jmp
out
mov
add
push
enter
xchg
pop
push
jnp
adc
cltd
mov
push
lahf
fs
push
add
sbb
repnz
shll
or
mov
mov
bound
mov
jmp
arpl
cmp
adc
sub
jg
add
add
jae
and
mov
mov
pop
clc
fwait
repz
cmp
or
fsts
add
mulb
and
inc
mov
mov
js
pop
sub
stos
in
enter
inc
fwait
sbb
lea
add
mov
in
js
outsb
mov
movsb
inc
add
mov
and
add
xor
mov
sbb
sarl
pop
mov
sub
mov
pop
in
mov
lds
jp
pop
out
push
sbb
adc
xchg
jne
jbe
out
enter
js
add
lret
push
cmpsl
shll
hlt
jge
aad
xor
xchg
fdivs
dec
jl
arpl
adc
sbbl
jge
cmp
cmp
add
push
or
push
outsb
and
add
add
mov
add
nop
add
add
jbe
push
xchg
add
sub
ja
iret
int3
mov
sbb
adc
mov
icebp
imul
imul
pop
and
mov
mov
mov
iret
xor
mov
aad
add
mov
addb
dec
mov
mov
add
mov
jmp
inc
dec
pop
and
and
mov
data16
add
lods
push
addb
and
xor
add
add
int
xchg
add
add
jp
add
out
out
push
pop
add
mov
int3
fs
in
cwtl
push
dec
in
cltd
repnz
xchg
add
fcomps
mov
add
sub
add
add
mov
fiadds
cmp
sbb
jmp
jo
mov
add
test
jmp
add
aas
mov
cmp
mov
add
das
cmpsl
jbe
lahf
outsb
dec
inc
add
push
stos
out
icebp
test
sub
popa
adc
aas
fistpll
pop
pop
add
shl
jnp,pt
sub
lods
and
mov
add
pop
pop
push
jle
add
imul
lods
shr
movsl
rolb
mov
loop
mov
icebp
mov
mov
sbb
add
pop
test
xor
mov
repz
push
mov
mov
inc
pop
cmp
jo
mov
xor
add
sub
inc
xor
cld
or
cmp
popa
jmp
bound
mov
jle
pop
inc
dec
mov
mov
sub
out
pop
pusha
add
or
add
adc
scas
popa
fidivrs
pop
enter
jno
test
test
add
or
ss
push
mov
mov
mov
test
inc
sub
lret
add
push
add
add
push
pop
orl
movsb
rolb
mov
mov
pop
fmulp
stos
inc
xchg
jns
dec
mov
xchg
fstpt
xor
add
pop
cmc
fstpt
fstl
adc
xor
jmp
cmp
repnz
jb
mov
mov
jecxz
push
loopne
mov
xlat
cs
push
fs
lcall
inc
mov
inc
add
arpl
push
xor
mov
gs
sahf
sbb
mov
jns
add
or
add
jae
sbb
outsl
adc
mov
add
mov
mov
add
add
jge
cmp
test
pop
lds
cltd
pop
scas
push
adc
popf
pop
mov
jb
mov
gs
leave
dec
xor
out
mov
scas
jmp
add
mov
cmc
sub
mov
add
inc
pushl
add
sbb
add
les
add
cmp
cwtl
addb
dec
incl
sub
push
mov
jb
mov
add
add
cmp
or
popa
aad
adc
lock
stc
push
int3
push
jnp
mov
mov
mov
movsl
nop
add
daa
mov
pop
pop
inc
add
loopne
mov
jmp
jg
hlt
adc
cli
mov
lock
xor
mov
mov
add
ljmp
mov
add
rcrl
addb
pop
and
mov
outsl
lahf
push
add
add
paddw
add
mov
negl
adc
mov
xor
mov
scas
pop
ljmp
shll
mov
mov
mov
or
test
mov
mov
pop
push
push
ret
adc
scas
je
sub
or
add
add
je
pop
in
add
cmc
test
add
clc
xor
les
notb
add
mov
add
idivl
and
fmull
sti
xchg
mov
sub
add
sbb
add
jmp
mov
mov
pop
add
fcompl
xor
inc
outsl
pop
daa
out
or
dec
test
fidivrs
add
jns
inc
inc
add
mov
add
xchg
scas
xchg
inc
movsb
mov
pop
or
lcall
ljmp
mov
scas
pop
cwtl
in
std
pushl
in
add
bound
mov
fsubs
mov
adc
mov
and
mov
out
incb
mov
adc
in
add
add
rolb
ret
mov
add
mov
sti
mov
lahf
sub
add
mov
pop
popa
sub
push
mull
add
mov
mov
jae
test
adc
jbe
cwtl
jns
adc
fnstsw
sti
xor
push
mov
mov
cmp
lret
sbb
cmp
add
mov
or
cmp
sti
cmpsl
gs
add
add
push
movsb
inc
add
loope
pop
push
and
mov
repz
mov
add
daa
xchg
xchg
das
push
dec
outsb
sahf
jmp
push
add
mov
and
roll
rolb
mov
mov
mov
sub
rolb
sti
push
lea
or
mov
add
aas
dec
ret
repnz
inc
sub
cli
shrl
cmp
cwtl
push
add
add
mov
push
add
cmp
jnp
loop
mov
ja,pt
sbb
sub
mov
xor
mov
mov
mov
add
mov
add
add
sub
mov
in
insl
xchg
add
add
ret
daa
lods
insb
int
push
add
gs
inc
sbb
lods
std
xchg
sub
xor
add
cltd
xchg
sbb
adc
aad
ret
rolb
mov
jle
bound
mov
mov
xchg
inc
add
idivb
add
cs
mov
mov
addb
jmp
add
xor
add
xor
mov
icebp
xor
mov
aaa
cltd
std
popa
mov
int
add
mov
add
lret
adc
add
xor
mov
mov
add
add
add
adc
dec
negl
mov
and
mov
mov
pop
rolb
pop
pop
icebp
leave
adc
mov
mov
and
or
mulb
cld
push
cmpsl
sub
add
sub
mov
mov
xchg
lret
inc
add
mov
mov
mov
in
mov
fs
mov
adc
mov
dec
dec
cmp
fisubrs
test
cmpsb
rep
loop
mov
mov
fs
push
js
loope
push
fstpl
mov
mov
fnstenv
mov
jmp
mov
xchg
jno
add
mov
subl
mov
add
dec
es
add
push
mov
sti
sub
adc
mov
dec
sti
sub
pop
cmp
jp
add
adc
adc
mov
loopne
mov
add
cmp
push
pop
cltd
push
cmp
test
mov
mov
mov
add
jne
pushf
rolb
mov
mov
mov
xor
jae
test
mov
fsubs
loopne
mov
add
add
pop
mov
add
adc
push
add
add
dec
or
add
xor
mov
mov
stos
or
push
push
inc
repnz
add
in
inc
push
push
push
mov
cmp
mov
mov
push
pushl
add
in
add
nop
add
ds
out
cld
dec
push
jno
and
add
aam
imul
dec
xchg
add
add
and
mov
icebp
sbb
add
adc
cmpsb
stc
mov
xchg
not
push
aas
mov
add
push
popa
xor
sbb
adc
int3
sub
or
dec
in
pop
push
enter
testb
xchg
xchg
xchg
das
jmp
jecxz
xchg
mov
jb
mov
push
lret
in
mov
cmpsl
push
add
aad
push
push
add
mov
jbe
stos
mov
flds
add
test
inc
add
ljmp
mov
add
mov
cld
stc
xchg
add
add
out
and
pop
sub
adc
mov
daa
rcrl
packsswb
mov
pushf
ja
cmp
fsubrl
push
xor
pushf
addb
movsb
inc
xchg
push
in
jne
add
mov
mov
add
mov
mulb
inc
xchg
add
pusha
add
enter
mov
push
add
add
cli
int
pop
inc
dec
xor
add
cs
fwait
push
or
mov
inc
add
shrl
fmul
push
jne
adc
dec
mov
pop
idivb
mov
rolb
mov
add
mov
sub
mov
bound
mov
lret
mov
in
fcoml
imul
ja
bound
mov
rolb
mov
add
and
add
add
dec
pop
pop
test
lock
and
mov
adc
adc
mov
insl
xchg
adc
mov
or
out
jge
add
mov
add
jnp
xchg
and
std
ss
and
adc
mov
cmc
dec
add
mov
lret
xchg
sbb
add
cmp
mov
mov
fs
xchg
and
mov
cmp
sbb
cmp
shll
adcl
inc
gs
outsb
cwtl
or
mov
add
cmp
fdivrs
movsl
jne
imulb
mov
lods
mov
dec
cli
imul
stos
repz
mov
mov
add
outsb
test
pop
sub
sbb
mov
add
xor
mov
nop
add
xchg
dec
test
push
add
add
add
inc
in
call
loopne
mov
add
mov
fisttps
add
mov
test
push
add
sub
ret
ficomps
xchg
addb
push
out
mov
shl
or
and
add
mov
push
mov
shll
mov
add
jp
inc
add
inc
add
mov
pop
xchg
adc
mov
dec
xchg
xchg
call
addr16
sbb
push
add
mov
xchg
ljmp
jp
lds
push
mov
cmp
addr16
mov
mov
lcall
imul
mov
add
sub
std
xchg
adc
dec
ss
imul
add
mov
jno
add
mov
lock
pop
addb
inc
add
jb
mov
push
das
daa
xor
addb
mov
lods
or
or
or
aam
xchg
or
addb
xchg
xor
push
push
fcomp
mov
add
sub
loope
stos
aas
add
mov
mov
notb
fstpl
dec
ds
std
imulb
out
dec
aam
add
mov
mov
xchg
movnti
jnp
arpl
and
mov
mov
add
push
daa
outsl
stc
int3
arpl
sub
rolb
mov
push
jl
mov
dec
addr16
add
add
cmpsl
mov
mov
test
ss
loopne
mov
bound
mov
ds
inc
ja
shll
movsl
adc
into
js
jb
mov
add
dec
sub
sbb
add
mov
ljmp
pop
mov
xorl
push
add
push
add
jns
cld
push
add
add
les
mov
test
add
push
add
add
or
jp
jb
mov
icebp
out
mov
sbb
add
add
in
mov
pop
jb
mov
push
daa
mov
repnz
jecxz
or
std
push
fwait
addb
sub
stc
inc
add
rolb
mov
incb
add
pop
fisubrl
push
sub
add
mov
mov
ljmp
test
add
jns
dec
and
mov
add
inc
mov
scas
addb
addb
dec
inc
add
mov
xchg
xor
jo
mov
mov
mov
lds
xor
pusha
add
rolb
mov
mov
aaa
pop
cmp
mov
imul
mov
mov
adc
mov
mov
popl
mov
add
pusha
add
cmp
dec
or
addr16
jno
mov
das
inc
add
dec
scas
pop
jbe
cmp
fs
push
mov
sbb
add
inc
jmp
insb
pop
pop
bound
mov
repnz
add
jae
sub
jl
aas
mov
add
mov
fucomip
setge
cmp
lcall
in
int3
and
mov
into
adc
loope
cmc
inc
imul
cmp
fidivl
add
test
pop
xor
push
scas
ret
adc
adc
mov
pop
mov
lcall
add
or
xchg
js
add
out
mov
jl
add
mov
mov
cmpl
push
inc
dec
insb
cltd
movsb
pop
add
mov
sub
adc
mov
mov
int3
add
add
lret
mov
mov
add
mov
mov
mov
jge
lock
stos
scas
or
add
dec
and
adc
mov
push
add
push
mov
cmp
in
lock
cwtl
dec
scas
cmpsl
fistps
pop
stos
stos
mov
stos
cmp
pusha
add
add
push
add
into
fsubl
mov
cmp
cmp
jg
pusha
add
add
movsl
mov
mov
jo
mov
or
enter
lods
ret
test
mov
mov
add
movsb
and
xchg
pop
and
mov
xor
mov
jle
add
in
sub
add
pop
mov
jne
insb
and
fcomi
ret
xor
pop
mov
gs
lret
add
sub
mov
sbb
mov
inc
adc
xchg
mov
mov
add
mov
fiadds
add
sbb
aam
xchg
push
aam
sar
dec
xchg
popa
outsb
fucomip
imul
xchg
add
add
add
in
sub
into
cmp
inc
or
scas
rolb
mov
and
pop
fildll
add
mov
push
adc
cmp
sub
iret
rolb
or
hlt
adc
pop
sub
aad
mov
mov
sahf
ss
mov
xor
or
imul
rcll
and
jl
cwtl
insl
pop
cwtl
add
mov
inc
mov
in
add
mov
jmp
inc
sti
mov
rolb
sub
jno
out
ljmp
adc
inc
inc
jp
outsl
cld
sbb
inc
inc
mov
addb
and
lods
cmp
add
adc
xor
and
mov
sahf
mov
mov
add
cmp
out
xchg
push
push
fisubrl
cld
xor
mov
mov
in
addb
push
es
movsb
test
add
mov
mov
int
pusha
add
lret
dec
xchg
mov
inc
aad
push
add
mov
call
ret
jno
add
xor
pop
and
xchg
enter
cmpsl
in
dec
or
adc
mov
insl
adc
cmp
and
sub
invd
jmp
mov
jne
or
not
out
sbb
add
xchg
adc
mov
adcl
jmp
lret
loopne
mov
sub
jg
add
cli
call
add
dec
push
add
jmp
imul
imul
cmp
fwait
inc
aad
adc
mov
idivb
insb
adc
mov
in
sbb
adc
push
xchg
pop
sub
add
mov
js
xchg
push
add
cmp
adc
stc
mov
or
mov
sub
ja
cli
loope
mov
addb
cltd
not
cmp
add
add
mov
sub
dec
jle
or
mov
add
les
add
and
mov
add
add
test
push
mov
movsb
and
add
sub
sbb
and
mov
or
mov
add
mov
insb
out
add
popa
cwtl
cmpsb
sub
or
gs
and
mov
sarl
xchg
lds
mov
mov
sub
add
loop
mov
pop
inc
add
lret
inc
rcrl
add
mov
pop
adc
mov
das
fidivrs
pop
loopne
mov
testb
push
jge
pop
jg
sbb
nop
add
cs
add
mov
test
sbb
scas
jp
mov
cmp
aam
add
mov
sbb
das
jecxz
mov
inc
xchg
add
and
scas
stc
adc
insl
lcall
aas
aad
bound
mov
loop
mov
cmp
add
ret
jl
loop
mov
xchg
rolb
clc
pop
mov
stos
adc
add
add
jmp
push
imul
add
rorl
push
add
push
add
sbb
aaa
std
in
dec
js
xchg
add
iret
sub
jnp
push
dec
add
push
cmpsl
out
sbb
test
in
mov
dec
mov
mov
loop
mov
aad
pop
js
js
mov
xchg
out
pop
mov
std
in
push
add
push
fcoml
lcall
js
jbe
addb
mov
or
inc
inc
add
dec
stc
jp
imul
add
push
mov
pop
ljmp
sub
xchg
mov
and
inc
je
sub
pop
or
add
add
inc
cli
adc
fdivrl
jo
mov
rolb
mov
mov
in
sub
jne
leave
loope
movsl
fimuls
add
jmp
rcll
pop
push
in
stc
mov
xorl
mov
and
mov
repnz
mov
adc
nop
add
push
dec
sub
into
cmpsl
push
inc
add
and
mov
add
inc
add
add
scas
hlt
sub
push
push
les
add
add
movl
std
pushf
xor
cmp
pop
dec
lahf
js
sbb
mov
adc
mov
nop
add
mov
xchg
clc
lea
enter
push
popf
fsts
push
adc
jae
adc
mov
stos
sti
or
pop
push
add
xchg
aam
add
mov
dec
insb
push
inc
aad
repz
mov
repz
popl
and
into
imul
popa
pushf
loopne
mov
add
mov
gs
adc
add
stos
sub
cmp
dec
xchg
add
pop
outsb
xor
add
sbb
mov
xchg
fists
movsb
jecxz
cmpsb
sub
filds
xchg
sub
cmpsb
mov
pop
lahf
cmp
mov
pop
js
xchg
lods
sti
pop
insl
out
dec
lods
mov
add
popa
pusha
add
push
das
cld
sahf
and
mov
xchg
and
pop
addb
xlat
jl
add
and
mov
cmc
leave
in
je
sub
add
mov
adc
mov
mov
in
test
test
sbb
jbe
popf
ror
dec
push
pop
sub
daa
mov
mov
and
add
lods
sub
sub
mov
mov
or
xchg
cmp
jmp
fwait
push
nop
add
mov
add
add
pop
mov
push
add
mov
pop
mov
xchg
aad
add
inc
lret
add
push
fsubr
pushf
sbb
or
cltd
push
add
mov
repnz
mov
cmpsl
pop
hlt
push
sbb
sub
jmp
mov
mov
add
mov
cmp
shll
outsb
stc
repnz
xchg
in
adc
mov
inc
add
mov
add
pop
push
add
mov
add
or
loopne
mov
add
lcall
mov
fiaddl
jbe
add
gs
shll
lock
or
cli
or
lock
adc
scas
into
dec
or
add
cltd
ds
out
dec
shll
mov
roll
lcall
add
cmp
mov
jb
mov
cmpsl
adc
jb
mov
add
cmp
repnz
adc
add
js
ja
jns
mov
stc
mov
and
sub
in
mov
mov
inc
mov
add
jl
sub
jns
push
push
lret
xchg
lock
xchg
jnp
add
push
mov
dec
dec
mov
jmp
and
ja
add
mov
stos
stos
mov
fldenv
xor
xchg
rolb
mov
add
loope
rcrl
cmc
sbb
lds
cmp
mov
jle
je
int
lods
fdivrs
pop
jnp
loop
mov
add
mov
mov
cld
repnz
fwait
popa
iret
cmp
add
xor
jg
jge
add
mov
scas
out
in
xor
mov
jns
add
mov
add
push
xor
mov
scas
lea
jle
fdivs
push
je
shl
push
insl
pop
add
mov
mov
push
fwait
and
dec
pop
rolb
cmp
ret
push
sub
insl
sbb
clc
mov
test
inc
dec
mov
dec
mov
inc
cmp
aad
xchg
outsb
push
mov
adc
je
gs
xchg
sti
aas
push
pop
xchg
jb
mov
movsb
aad
push
call
add
scas
das
lret
lods
sbb
inc
add
ficoml
add
jmp
mov
mov
add
add
or
add
mov
push
and
mov
mov
or
mov
iret
sbb
mov
inc
add
mov
imul
mov
ss
loope
add
add
add
mov
jnp
mov
daa
rolb
fs
test
mov
add
add
lcall
out
in
jae
and
mov
out
test
adc
dec
dec
mov
or
lret
cmp
popl
stc
sahf
psubq
pop
pop
add
pop
dec
rcl
add
mov
mov
fsqrt
into
push
mov
mov
add
addr16
fistpl
adc
or
mov
add
xchg
adc
or
mov
loopne
mov
andl
cmp
add
xor
nop
add
mov
mov
daa
fcoms
mov
shrl
fistps
jns
rcll
add
or
mov
mov
movsl
mov
mov
add
mov
mov
lcall
out
add
mov
daa
test
mov
lods
shll
add
mov
or
in
xchg
pushf
fwait
mov
insl
cmp
mov
mov
mov
repz
add
inc
and
add
push
add
add
icebp
rcrl
in
xor
cmp
xlat
lret
add
adc
mov
pusha
add
imul
pop
cmp
mov
cltd
jo
mov
in
xor
xchg
jle
ror
add
dec
cmp
ret
cmpsb
addr16
mov
and
mov
in
subl
mov
js
add
inc
add
in
pop
fsubr
and
mov
inc
push
cmpl
faddl
into
mov
outsl
inc
add
mov
add
xchg
shll
mov
ss
pusha
add
or
mov
xor
mov
push
inc
movb
mov
dec
sub
xchg
scas
scas
cmp
hlt
xchg
lcall
ds
sub
dec
add
in
and
ja
add
add
sub
xchg
bound
mov
lcall
mov
cmp
inc
add
add
addb
shll
lock
sbb
xchg
adc
leave
aam
leave
pushf
xor
repnz
pop
push
xchg
lahf
xor
add
add
dec
jg
sub
adc
add
push
add
sub
add
pop
sti
fs
mov
adc
movsl
sub
mov
inc
xchg
add
add
adc
ss
outsb
aad
jnp
sub
frstor
sbb
push
add
xchg
mov
fs
pop
sahf
lahf
add
lods
addr16
aam
xchg
movsb
mov
fldt
dec
jno
sub
es
fistl
add
mov
mov
pop
cli
stos
xchg
repnz
mov
mov
mov
das
and
sldt
mov
cmp
add
add
addb
or
xchg
rcll
add
add
aad
jno
into
mov
ds
sub
adc
add
push
add
add
inc
add
or
cmp
sbb
cmc
cmpsl
cwtl
aam
fistpll
mov
jg
mov
or
or
mov
add
mov
fdivp
push
and
lea
push
scas
push
mov
testl
in
xor
add
jne
cmpl
jg
pop
addb
sbb
sbb
cmc
lcall
mov
mov
lea
adc
mov
ljmp
inc
push
imul
es
xor
mov
xor
add
inc
add
mov
add
addb
rcr
dec
fcoml
ret
push
jne
push
or
mov
jg
xchg
or
fldcw
add
and
mov
add
add
xchg
outsw
xor
mov
inc
lret
adc
jns
inc
mov
dec
push
push
xor
pushf
popa
ds
ret
sti
cmp
aam
cmpsl
fnstcw
pop
fcmovu
repnz
xlat
mov
mov
add
or
addr16
lahf
inc
mov
bound
mov
ret
les
jmp
or
add
in
mov
and
mov
sti
add
out
mov
mov
cmp
ja
lret
es
lret
add
mov
cmp
jb
mov
mov
mov
addr16
in
repnz
mov
jle
push
add
lret
mov
test
push
sbb
add
dec
cli
push
jp
add
inc
sub
add
add
mov
in
adc
mov
cmc
add
leave
imul
repz
mov
in
jo
mov
add
add
add
add
xchg
ljmp
add
add
sbb
sub
xchg
data16
add
cltd
or
inc
fsubrl
fcmovnbe
add
jne
scas
pop
lods
xchg
mov
add
lret
aaa
test
adc
mov
lcall
nop
add
adc
mov
out
mov
sbb
lock
mov
int
lock
loope
cwtl
jg
add
adc
mov
add
add
mov
adc
fisubrs
icebp
sbb
mov
inc
fs
daa
mov
sbb
imul
push
bound
mov
mov
es
insb
mov
inc
adc
or
das
mov
fnstcw
jecxz
lahf
cmpsl
pop
adc
mov
mov
ja
xchg
xchg
add
xchg
mov
cmp
fnstsw
dec
mov
jo
mov
int3
dec
and
add
mov
add
dec
sbb
outsl
ret
push
xchg
xor
cmp
jb
mov
icebp
xor
sub
out
leave
imul
mov
popf
sahf
test
push
xor
add
add
push
or
mov
add
jl
dec
repnz
cmc
jne
add
add
mov
aaa
pop
ret
std
mov
adc
add
cld
inc
les
inc
sbbl
fimull
mov
pop
or
jbe
or
out
sbb
jle
test
test
outsb
sbb
cmp
inc
push
xchg
arpl
inc
popl
mov
mov
xor
add
leave
pop
lret
cli
dec
inc
and
imull
pushf
adc
mov
add
pushf
dec
jge
cmp
dec
mov
inc
xor
jbe
fnsave
sub
imul
add
mov
mov
mov
jl
add
inc
xor
cmp
into
sahf
mov
add
and
cld
xor
mov
push
push
jmp
jns
fwait
test
add
adc
mov
jne
add
mov
in
ret
add
mov
xor
lock
insb
test
add
sub
scas
fbld
mov
xchg
mov
loop
mov
mov
xlat
sub
add
mov
mov
mov
or
repnz
add
rolb
cmp
mov
mov
imul
push
int
or
fcomip
outsl
jp
pushf
dec
fsubrl
mov
add
add
test
icebp
mov
and
jl
icebp
lea
cmp
add
dec
fistpl
out
jg
jno
popf
lahf
cld
sbb
mov
sub
add
fucom
add
add
add
xchg
arpl
xchg
add
xchg
sub
and
mov
sbb
jno
shll
lods
add
pop
inc
add
jns
jmp
cmp
xchg
mov
loop
mov
stc
add
jecxz
and
sub
xor
add
scas
mov
or
or
movsb
or
das
cmp
add
fimull
add
xlat
hlt
push
les
or
adc
mov
ljmp
or
popf
inc
add
lret
mov
out
cmpsb
mov
lcall
mov
cmc
addr16
in
and
or
add
mov
rolb
mov
sbb
imul
fs
mov
test
into
jecxz
clc
test
xsha1
cmpsb
or
sbb
icebp
je
mov
int
push
add
repz
fmul
stos
insb
hlt
dec
xchg
and
add
stos
and
mov
or
mov
in
add
inc
stos
sbb
out
lcall
adc
gs
push
test
jb
mov
mov
add
testb
lahf
xor
mov
repnz
js
jl
and
mov
push
jg
push
and
pop
cmpsb
roll
cmpsl
mov
mov
fistpl
hlt
test
adc
dec
insl
stos
jecxz
pop
dec
fwait
add
mov
mov
dec
xor
add
mov
jae
data16
xor
add
or
stos
push
add
adc
add
adc
jb
mov
nop
add
dec
icebp
mov
add
add
add
inc
add
cmp
add
adc
mov
insl
hlt
push
in
add
mov
xor
test
mov
jle
jl
and
add
mov
rcll
jnp
inc
add
jmp
mov
bound
mov
mov
mov
cwtl
stc
nop
add
repnz
hlt
ds
mov
add
pop
imul
adc
mov
jo
mov
add
push
data16
rolb
mov
add
loopne
mov
addb
loop
mov
xor
out
add
inc
pop
movsl
mov
cmp
jns
add
cmp
inc
mov
adc
fs
subl
lods
cmc
fldcw
js
sbb
lds
xor
xor
das
ror
cmp
repnz
std
pop
stos
and
mov
loop
mov
push
imul
and
dec
mov
in
mov
mov
xlat
mov
or
imul
add
out
mov
inc
add
xorl
jo
mov
push
mov
add
sub
mov
rolb
mov
std
and
imul
xor
jg
add
mov
mov
aaa
insw
lret
stc
inc
shll
push
imul
add
cmp
iret
popa
cmpsb
mov
in
rolb
mov
cmp
push
add
imul
push
xchg
jnp
bound
mov
jns
add
rolb
mov
in
es
in
pop
xor
mov
inc
pop
sub
out
inc
inc
mov
mov
ds
pop
pop
sti
adc
adc
out
push
sarl
out
test
mov
mov
push
cmpsb
mov
pop
xchg
mov
push
sub
fisubrs
mov
add
dec
hlt
rolb
mov
insl
pop
aas
ljmp
push
sub
lods
dec
and
int
and
lret
outsb
rolb
xor
inc
add
add
mov
mov
jnp
addb
adc
mov
push
movsl
cmp
xor
mov
or
push
add
out
clc
mov
pop
fwait
repnz
mov
in
cld
ss
add
add
mov
and
add
mov
add
lahf
ss
xchg
insl
push
inc
pop
std
adc
in
in
mov
add
mov
int
daa
inc
add
and
mov
mov
jge
jno
add
addb
fisubl
lret
mov
add
call
add
lret
nop
add
jmp
movb
mov
pop
pop
add
leave
das
or
imul
fcmovbe
hlt
cmp
and
add
dec
aaa
inc
adc
inc
pop
push
lock
arpl
scas
cmp
hlt
mov
mov
add
xchg
cli
addb
icebp
mov
cmpsl
imul
stc
mov
jno
lock
mov
in
lods
pop
in
imul
jne
rorl
adc
add
sarl
aaa
in
cmp
mov
sub
mov
in
push
add
xchg
and
mov
in
mov
jns
dec
arpl
add
sub
add
lahf
mov
jmp
fidivrl
lea
cmp
dec
jnp
mov
mov
add
cmp
or
jb
mov
xor
mov
lds
add
inc
out
mov
jno
mov
add
adc
or
gs
rolb
add
or
push
jp
sbb
sbb
outsl
loopne
mov
cmp
jb
mov
clc
add
jmp
sbb
and
mov
inc
jno
add
mov
xor
mov
and
mov
pop
push
mov
mov
push
arpl
test
add
dec
sbb
jo
mov
dec
inc
cld
lahf
insl
inc
clc
fsubl
mov
je
addb
lea
lea
inc
mov
lods
xchg
jp
mov
add
xchg
or
add
inc
mov
aad
sub
dec
pop
sbb
lahf
cmpsb
xchg
aad
les
stc
xor
mov
add
add
or
dec
mov
jg
and
add
int3
adc
mov
popf
or
inc
mov
inc
inc
mov
into
icebp
and
add
add
in
sti
daa
cs
mov
aam
xor
mov
add
or
pop
xchg
inc
inc
clc
aad
jecxz
inc
mov
into
jae
frstor
add
ret
sub
and
fildll
idivl
loope
addb
adc
cmpsb
add
mov
mov
xchg
pop
je
add
lret
add
push
add
jbe
insb
shr
sti
hlt
lods
ret
lret
mov
add
add
out
loop
mov
cs
btr
xchg
ljmp
sbb
cmc
pusha
add
sub
dec
pusha
add
sub
pop
scas
push
push
add
movsl
sbb
pop
push
add
enter
add
sub
mov
add
dec
clc
ret
out
lods
jmp
cmp
xchg
mov
add
pop
sub
sbb
test
mov
nop
add
rolb
fnstenv
imul
fistpll
sub
cld
and
mov
mov
push
in
adc
out
fistl
add
add
fwait
mov
mov
or
add
notl
add
xor
add
out
inc
ret
push
js
and
mov
inc
jno
adc
mov
add
mov
int
enter
jns
adc
jns
xor
movsb
push
add
adc
mov
out
movsl
mov
jbe
cltd
fidivrl
sti
pop
sbb
loopne
mov
add
or
or
sub
inc
lret
ja
xor
ja
scas
outsb
push
fnstcw
dec
cld
rcll
push
jg
dec
mov
pextrw
inc
push
ret
ds
rolb
xchg
inc
btsl
mov
adc
addb
mov
mov
cs
das
jmp
xchg
arpl
outsb
adc
mov
das
cmc
fwait
adc
loopne
mov
cmp
call
rolb
mov
mov
xchg
loop
mov
add
pop
sub
fmull
add
mov
stc
std
adc
mov
pusha
add
mov
cwtl
mov
imul
ret
and
mov
test
mov
add
in
into
out
stos
cmpsl
sub
add
pop
fdivs
fists
add
cwtl
loop
mov
test
push
fs
mov
scas
rolb
mov
jne
add
mov
hlt
andl
bound
mov
rolb
mov
push
sbb
testb
xchg
jp
lret
int
push
out
mov
in
cmp
push
sahf
in
or
sarl
mov
cmp
stos
xchg
cmc
sbb
and
mov
hlt
jecxz
int3
lods
lret
adc
push
adc
mov
jb
mov
data16
sbb
add
loope
and
mov
aad
fistpll
add
fidivrs
sbb
xchg
mov
mov
push
test
cld
std
stos
push
push
push
enter
sub
addb
cmp
xchg
add
add
in
aad
add
iret
icebp
push
lret
add
out
je
xchg
ret
sbb
add
mov
jb
loopne
mov
adc
inc
add
fildl
outsl
sub
add
mov
mov
inc
pop
rcrl
pushl
ljmp
pop
cwtl
and
lock
add
push
jp
add
imul
xor
leave
mov
mul
loope
xor
add
mov
push
scas
add
mov
cli
push
mov
fdivrl
sub
add
inc
enter
dec
jmp
jbe
add
dec
xchg
mov
mov
adc
add
mov
orl
mov
mov
cwtl
add
daa
or
insl
movsb
sub
push
pop
sub
fs
loop
mov
stos
xor
mov
mov
cmp
mov
mov
inc
add
aas
int3
scas
cli
mov
add
push
hlt
bound
mov
mov
lret
arpl
add
jl
sti
imul
mov
pop
aaa
je
outsl
scas
mov
pop
push
addl
and
mov
xlat
jmp
lahf
xor
add
lcall
and
add
stos
xchg
cmpsb
popa
cmpsl
cmpsb
add
mov
out
sti
fldt
dec
ja
inc
push
add
jbe
add
jmp
out
lock
hlt
jns
add
mov
pop
push
cmp
dec
lock
ljmp
shll
mov
stos
pop
sbb
add
add
mov
push
test
and
mov
lcall
jle
lds
cli
xor
pop
lahf
xlat
pop
aaa
decb
or
mov
outsl
movsb
mov
movsb
rol
test
out
fdivrp
pusha
add
cli
push
mov
out
mov
add
rolb
jnp
out
cmp
call
dec
mov
add
dec
or
pop
lods
push
enter
sub
rolb
mov
inc
mov
add
in
mov
dec
push
xor
pop
mov
sbb
xor
add
rcll
pop
push
sbb
jno
testl
daa
mov
mov
fstpt
fs
hlt
jge
adcl
js
stc
lret
inc
das
cmpsb
ja
cmpsl
add
aaa
lret
adc
push
sbb
stos
and
sub
pop
jno
dec
inc
jge
and
xchg
insl
push
add
add
or
testb
mov
addb
aas
cmpsb
pusha
add
mov
push
cmp
adc
mov
mov
pop
fsubs
adc
mov
lahf
sti
fsubrl
jp
clc
sub
arpl
loopne
mov
jle
inc
push
add
addr16
pop
scas
movsb
dec
mov
pop
jg
adc
mov
add
movsb
sti
jo
mov
cld
cmpsb
jb
mov
add
lods
cmp
rcll
add
mov
mov
mov
rolb
mov
aam
lea
in
movsl
push
lret
les
add
aas
sbb
adc
add
insl
mov
mov
pop
lret
cmp
cmc
imul
ret
sub
push
pop
add
nop
add
ret
add
mov
fwait
loope
je
cs
push
add
mov
addr16
and
and
add
loopne
mov
mov
fs
add
mov
mov
dec
add
mov
test
push
mov
ljmp
aam
mov
iret
or
xor
ja
dec
sbb
mov
xchg
cli
mov
mov
cmc
mov
dec
mov
repz
dec
push
lret
add
jge
add
push
xlat
jp
in
mov
and
testl
mov
add
imul
icebp
ja
add
add
mov
jne
add
movsl
std
dec
repnz
mov
add
pop
pop
lea
add
add
mov
push
push
in
cwtl
xchg
mov
insl
cli
pop
xchg
outsl
xchg
add
jbe
movsl
sti
arpl
add
mov
lock
cmpsb
or
insb
movsl
enter
hlt
jmp
add
mov
add
cmp
insl
enter
mov
mov
cmpsb
in
repnz
inc
int3
fldl
add
mov
adc
sarl
mov
scas
ret
aas
adc
push
call
rolb
cwtl
push
add
jb
mov
mov
mov
mov
movsb
jecxz
lds
cs
repnz
add
adc
in
ss
mov
mov
in
sbb
ret
add
insb
rolb
mov
mov
jae
inc
inc
sub
xchg
cmp
xor
mov
mov
mov
ficoms
es
mov
mov
and
scas
nop
add
lcall
add
rolb
mov
pop
leave
inc
add
imul
test
jne
daa
pop
cld
cmp
jmp
jmp
mov
and
add
fwait
stos
mov
add
pop
lock
sahf
mov
repnz
inc
cltd
aam
fisttpl
inc
cmp
mov
inc
add
out
xor
ss
cld
pusha
add
inc
rolb
cs
cmp
in
out
xchg
add
scas
iret
out
cmp
hlt
mov
jle
add
outsl
test
add
hlt
push
daa
mov
add
add
jp
sub
mov
or
add
add
add
mov
stc
enter
mov
add
out
cld
mov
add
cmp
mov
mov
mov
addb
cli
pop
test
insb
pop
sub
outsb
jmp
push
push
add
add
cltd
push
iret
int
add
and
mov
pop
xor
mov
cmp
loop
mov
int3
into
lcall
mov
jecxz
jno
insl
adc
mov
icebp
sub
cli
cld
adc
mov
sub
dec
lock
test
pop
fcom
fstpl
js
ret
lea
das
test
stos
fs
add
adc
mov
rcll
jge
lahf
cmc
mov
and
lock
mov
pop
fdivrp
popf
lea
push
lock
mov
fdiv
or
and
mov
movsb
cmp
mov
mov
lahf
loop
mov
jno
add
pop
push
add
daa
mov
dec
std
jg
nop
add
mov
inc
fistl
sub
adc
add
dec
xchg
pop
test
imul
adc
cmc
adc
mov
push
pushf
xchg
sbb
dec
ret
imul
inc
add
sbb
pop
xorl
mov
add
insl
sbb
fcoms
mov
mov
cmpsl
lods
and
mov
cld
test
outsl
mov
roll
push
add
ja
add
pushf
int
add
inc
inc
pop
pop
push
movsl
lods
pushf
mov
or
subl
jbe
or
jle
add
mov
add
outsl
xchg
sti
xchg
and
mov
xlat
insb
icebp
jb
mov
cld
pop
xlat
js
inc
push
xorl
stc
addb
insb
push
arpl
sub
inc
pop
cli
dec
insb
mov
add
xchg
sbb
add
adc
mov
xchg
cmp
xor
add
imul
fs
stos
in
and
add
test
add
add
mov
or
and
rorl
push
and
ds
sti
or
gs
mov
jp
adc
add
inc
addb
jno
add
cld
mov
out
jle
jecxz
cwtl
push
add
sub
adc
mov
and
mov
xor
mov
xchg
inc
rcll
mov
mov
mov
cmp
icebp
xchg
xor
bound
mov
add
add
roll
add
xchg
cmpsl
call
scas
arpl
or
xor
cmp
pop
icebp
adc
mov
add
mov
jecxz
addr16
hlt
movsb
cmc
fcomi
stos
testb
jae
in
sbb
add
fidivs
push
mov
stc
jb
mov
mov
je
pop
lret
sti
std
sbb
inc
add
cmp
add
stos
ja
xchg
add
lret
add
out
mov
mov
mov
mov
lods
int3
enter
add
mov
add
add
int3
cmpsb
push
sbb
xlat
ja
test
mov
or
cwtl
in
insl
je
int
decb
mov
aas
insb
hlt
or
addb
mov
mov
aas
cmp
dec
addb
cmpsb
mov
jle
stos
adc
aas
bound
mov
add
nop
add
dec
int3
pop
or
pop
int3
inc
add
sbb
mov
add
mov
out
mov
add
lahf
dec
sbb
and
repnz
loopne
mov
push
add
push
dec
inc
add
rolb
imul
in
sbb
inc
in
leave
xlat
pop
xchg
jnp
cmp
bound
mov
mov
sbb
ss
fcmovb
outsl
clc
and
lods
sti
push
xor
mov
rcrl
jle
fistpll
dec
and
add
add
dec
mov
mov
add
mov
push
imul
sbb
mov
outsl
enterw
mov
ret
lahf
out
add
divb
sub
dec
mov
xchg
dec
adc
sub
dec
imulb
mov
adc
xchg
enter
jo
mov
pop
jns
lret
xchg
cmp
push
jbe
out
cmpsb
dec
dec
inc
inc
jl
test
icebp
mov
inc
push
popa
enter
mov
mov
fsubrs
cmp
pusha
add
test
jge
inc
std
aaa
fisttpll
ljmp
add
mov
das
dec
pop
int
or
daa
leave
jbe
mov
mov
add
jnp
test
xlat
mov
shll
push
dec
scas
mov
and
adc
mov
out
jl
not
push
add
add
push
mov
hlt
pop
jns
movl
dec
mov
push
je
inc
push
push
roll
fdivrl
daa
fsts
add
mov
stos
stos
mov
mov
add
add
in
jp
mov
push
rcll
addb
jne
jne
mov
inc
imul
jne
add
mov
push
xor
mov
add
add
add
push
lret
das
mov
inc
add
add
mov
aaa
cli
cmp
sbb
add
mov
mov
orl
mov
pop
imul
lods
add
fisttpll
adc
adc
add
and
jb
mov
lock
mov
mov
fwait
outsb
fildl
fcmovu
and
add
das
add
mov
push
or
cld
pop
cmp
pushw
jo
mov
into
push
dec
and
push
xlat
repnz
arpl
dec
jbe
loopne
mov
jae
out
xchg
imul
add
sahf
in
in
dec
dec
in
outsl
mov
add
adc
or
jno
add
cltd
add
dec
out
rep
daa
adc
mov
jg
out
push
add
mov
cmp
mov
jle
jmp
add
mov
mov
and
cmpsb
test
je
cwtl
dec
out
xrelease
dec
mov
fisubrs
sahf
in
pop
in
push
lock
xchg
cmpsb
add
mov
sub
add
add
mov
or
adc
add
shr
xlat
jle
loop
mov
pop
imul
out
fistl
add
sbb
cmp
loope
cmpsl
rolb
dec
jo
mov
adc
jbe
in
rolb
mov
mov
mov
cltd
addb
push
loopne
mov
aaa
mov
mov
sub
movsl
adc
mov
mov
inc
nop
add
add
mov
or
imul
jns
mov
or
test
mov
xchg
rolb
mov
sbb
add
push
sub
inc
xor
mov
popf
xor
xor
mov
leave
fldenv
add
lea
or
in
cs
outsl
test
das
shll
cs
and
mov
add
jl
add
out
inc
sahf
pop
leave
test
mov
mov
push
je
push
enter
push
inc
dec
out
push
push
inc
inc
push
mov
popf
aaa
into
ja
sbb
pop
popf
mov
shll
mov
xchg
hlt
jl
cmpsb
sbb
scas
out
push
push
movsl
sbb
sahf
addr16
js
imul
add
scas
pmulhuw
or
or
cmp
add
in
pop
xchg
mov
aad
add
pop
in
add
mov
add
std
cmc
sub
mov
hlt
pushf
dec
ret
in
jno
add
test
std
or
fsub
xchg
xor
mov
fists
add
cmpsb
aam
sub
fs
mov
scas
bound
mov
repnz
add
push
jae
add
add
ljmp
enter
jae
xor
mov
cmp
gs
data16
xchg
add
or
loopne
mov
xor
ljmp
sbb
xor
mov
inc
in
add
in
ret
ret
bound
mov
add
add
and
in
jno
movsb
test
ret
or
aam
xchg
in
xor
insl
aad
adc
add
xchg
push
xchg
mov
pop
out
call
fmuls
inc
and
mov
mov
insl
and
xchg
out
mov
ret
pusha
add
inc
mov
gs
rolb
mov
pushl
loop
mov
fld
fidivl
mov
roll
fcoms
addb
jecxz
lock
add
inc
add
roll
add
cmpsl
ret
outsb
mov
das
ret
jge
cltd
sub
add
lahf
jle
in
xlat
test
adc
push
and
in
outsb
leave
ds
imul
add
notb
mov
dec
jecxz
cwtl
push
jle
loopne
mov
mov
push
in
pop
push
add
in
cmp
jb
mov
add
jnp
imul
cmp
sahf
jo
mov
mov
addb
cmp
pop
stos
cli
fs
xor
push
add
fidivl
inc
int3
fldl
cmpsb
stc
mov
mov
add
cmpsl
repz
sbb
loop
mov
bound
mov
sub
add
or
add
negb
jl
add
mov
push
inc
and
add
add
xor
pop
inc
mov
add
lahf
sub
add
dec
fsubrs
jecxz
sti
xchg
add
mov
fcoml
cmp
pop
addb
xor
add
xchg
je
adc
mov
pop
rolb
mov
mov
push
lock
mov
and
pop
aas
xchg
addb
shr
xor
dec
pcmpeqd
scas
hlt
cld
test
cmp
enter
out
lds
test
fs
rolb
scas
nop
add
mov
add
push
cmp
jae
add
add
das
pop
or
sub
rolb
mov
sahf
or
add
js
out
call
add
fcompl
arpl
imul
push
push
bound
mov
add
push
mov
sbb
mov
mov
and
add
and
mov
repz
movsb
sub
nop
add
or
mov
dec
movsl
push
push
pusha
add
cs
jp
je
punpckhdq
xor
out
into
icebp
ret
or
or
out
adc
push
sub
adc
add
dec
lret
mov
mov
xchg
daa
mov
nop
add
in
jne
xor
mov
add
test
fdiv
je
sub
sbb
or
rolb
or
push
cmp
addb
cmp
push
lds
mov
add
ret
xorl
mov
mov
add
jge
fs
nop
add
and
mov
add
adc
insl
iret
movsl
int3
mov
sub
imul
inc
sahf
cmpsb
inc
ficoml
lret
push
add
and
mov
mov
movsb
push
dec
in
daa
mov
insl
inc
aas
ja
xor
push
or
mov
ja
popf
pusha
add
add
mov
push
das
push
das
mov
repnz
in
fildl
mov
stos
ljmp
outsb
xlat
inc
addb
daa
fcom
add
sbb
ret
mov
add
cmc
push
leave
daa
addb
cmpsb
pop
notb
dec
push
lock
fistl
sbb
sub
js
fmuls
sbb
imul
mov
mov
sti
dec
mov
mov
mov
adc
jecxz
push
add
add
mov
add
addb
bound
mov
jno
sub
xchg
pop
leave
inc
clc
mov
fstpt
in
inc
lock
in
jle
push
addb
inc
add
mov
add
les
cmp
add
repnz
in
or
bound
mov
inc
sarl
in
icebp
mov
push
test
inc
mov
dec
dec
push
and
add
xor
pop
shrl
and
sbb
adc
mov
dec
xchg
outsl
je
outsb
mov
jle
arpl
fwait
mov
dec
fsubp
mov
add
xor
mov
dec
insl
and
mov
pop
shll
add
ljmp
enter
lret
jb
mov
mov
jmp
lods
subl
stos
push
add
add
mov
add
mov
int3
pushf
notb
lret
add
and
mov
mov
and
mov
inc
add
jmp
mov
add
stos
loope
cmpsl
push
jno
pop
movsl
xchg
add
mov
mov
movsl
lds
cmc
outsb
dec
xchg
lret
xchg
and
add
mov
mov
imul
cmp
cmc
mov
rolb
xlat
adc
mov
adc
mov
jecxz
aad
pop
or
cmpsl
and
cmp
loope
dec
inc
cwtl
adc
insb
cmp
add
adc
mov
or
sbb
aad
test
sub
movsb
jbe
lret
push
add
outsl
aad
sub
mov
or
dec
out
loope
jg
or
pushf
mov
add
pop
mov
das
jnp
add
add
mov
mov
hlt
xchg
mov
lock
push
shrl
in
and
mov
mov
jl
fnstenv
pop
test
jno
add
xor
cli
enter
push
and
lds
xor
or
aaa
xor
mov
mov
adc
mov
mov
xchg
pushl
cmp
rcll
mov
push
sahf
bound
mov
mov
or
sub
sti
movsb
and
mov
aaa
jle
sub
and
ja
add
mov
mov
mov
jge
sbb
fisubl
call
cs
mov
add
pop
jecxz
jmp
add
xchg
sbb
dec
imul
push
add
xchg
out
aam
jae
push
subl
stc
xchg
popa
jno
lock
jb
mov
add
add
cli
sbb
or
dec
subl
inc
add
inc
cmp
imulb
scas
mov
mov
aas
mov
pushf
xor
cmp
xor
mov
loop
mov
data16
addb
pusha
add
add
add
xchg
pop
out
xchg
push
ds
pop
sub
add
cwtl
aam
cmp
mov
fsubrp
and
rcl
add
dec
outsl
mov
add
push
add
push
add
push
xchg
popf
cmp
fdiv
xor
add
add
mov
mov
cltd
push
pop
mov
clc
push
add
sub
mov
mov
enter
add
mov
pop
inc
adc
mov
rolb
mov
add
add
and
add
cmp
mov
dec
dec
lods
stc
lea
cwtl
cld
repnz
add
inc
addb
rcr
in
in
mov
rolb
mov
mov
in
xchg
add
loope
cmp
push
add
mov
je
sbb
pop
iret
les
cld
stos
adc
outsb
shrl
mov
addb
fmuls
sbb
cwtl
and
adc
cld
xor
xor
inc
repz
out
add
mov
mov
add
pop
repz
mov
mov
push
fcmovnu
mov
push
ds
cwtl
cmp
mov
cmp
add
add
jle
pop
popf
scas
lret
mov
sub
icebp
cld
lahf
aas
push
push
push
add
xchg
insl
ljmp
mov
sbb
add
inc
in
mov
ljmp
enter
ja
dec
sbb
cs
add
and
push
push
sbb
pop
xchg
add
add
add
mov
sub
cmpsl
dec
or
xchg
dec
add
mov
xchg
add
add
mov
ficomps
xlat
fldl2e
jbe
add
imul
mov
sbb
lcall
aam
fsub
fwait
negb
pop
dec
add
cwtl
fcomps
imulb
xor
adc
mov
in
jecxz
movsl
and
sbb
sub
xor
adc
or
fbstp
es
loope
arpl
addb
xor
mov
fidivs
rolb
addb
or
orl
push
add
add
mov
clc
inc
sub
mull
mov
inc
dec
insb
dec
xchg
and
mov
cld
jnp
push
inc
cmpsb
ja
ret
js
push
jg
movsl
sub
jo
mov
pop
push
dec
push
or
add
inc
imul
out
jb
mov
mov
sbb
xor
iret
repz
add
add
sub
xchg
push
mov
cmp
ljmp
mov
scas
sub
mov
add
jno
loope
mov
iret
enter
test
add
out
xchg
out
shll
sbb
mov
mov
mov
xor
dec
nop
add
sbb
jp
lds
mov
das
inc
add
bound
mov
iret
pavgb
mov
daa
mov
add
inc
dec
push
add
mov
jg
add
mov
int3
rolb
xor
mov
stos
enter
xchg
repz
repnz
add
lods
jl
mov
mov
and
mov
ss
dec
mov
add
push
and
mov
xor
bound
mov
mov
ljmp
sub
push
or
out
lods
jmp
loop
mov
pop
mov
add
add
xchg
movl
or
add
out
cwtl
dec
add
push
popa
jno
ss
jns
rolb
xlat
lods
lret
cld
jecxz
inc
jl
jo
mov
mov
insb
popf
leave
out
mov
inc
push
mov
mov
scas
leave
add
mov
into
outsl
cmp
cmp
hlt
ficomps
adc
pop
das
cli
cmpsl
push
jns
xor
pop
loopne
mov
add
add
pushf
jecxz
out
loope
pushf
xor
pop
sti
mov
cmpsb
pop
out
xorl
mov
sbb
push
mov
mov
cmpsl
in
sub
cmc
jne
push
rcll
mov
add
or
xchg
jl
mov
pop
or
dec
xchg
xorl
loope
lret
xchg
adc
add
aad
cmpsb
fstl
mov
loop
mov
push
cli
out
or
rolb
mov
dec
lds
gs
mov
xchg
pop
add
ja
enter
xchg
popf
aas
sub
pop
leave
mov
push
aas
add
faddl
mov
push
add
fildll
lcall
addl
aas
lock
leave
sub
cmp
cmpsb
cltd
std
sbb
add
outsb
mulb
repnz
jae
movsl
dec
mov
inc
adc
add
ds
clc
dec
dec
das
addb
cmpsl
dec
jne
popf
mov
sbb
out
sti
sub
cmpsb
mov
rolb
mov
add
stos
sub
insb
and
mov
sub
adcl
mov
jge
jg
xor
mov
add
lods
bound
mov
inc
add
test
repz
add
adc
mov
loop
mov
int
adc
mov
icebp
frstor
std
push
sub
xchg
cmpsb
mov
add
adc
mov
aad
dec
dec
xchg
mov
inc
aaa
into
repz
ficoms
sbb
sub
add
mov
pop
stc
jnp,pn
add
mov
aam
jb
mov
adc
add
add
mov
jns
imul
mov
pop
push
lds
jo
mov
cltd
test
push
add
enter
jle
add
adc
dec
movsl
or
pop
idivb
add
sub
call
lcall
mov
ret
sub
ljmp
lahf
lods
fldl2t
push
add
or
into
adc
fsts
std
aas
sbb
jge
push
push
sub
mov
ds
inc
rolb
mov
mov
or
xor
imul
add
add
mov
pop
push
call
add
xchg
inc
bound
mov
push
and
adc
mov
add
lret
mov
add
pop
std
enter
ret
daa
loope
add
mov
les
push
fdivrl
dec
adc
inc
add
movsl
lds
add
nop
add
adc
dec
jno
xor
mov
dec
lahf
and
out
xor
adc
jecxz
add
add
mov
add
sbb
rorl
mov
add
fs
inc
or
out
jae
jns
cwtl
cmp
popl
pop
sarl
adc
aaa
ret
mov
sti
push
add
mov
and
test
push
mov
mov
mov
dec
pop
test
mov
dec
outsb
dec
inc
shll
es
jecxz
push
or
add
mov
mov
sbb
or
mov
sbbl
xor
cmp
xchg
xchg
add
push
or
cmpsb
daa
xchg
push
add
loope
lock
xchg
add
aas
rolb
mov
mov
movsb
push
icebp
dec
lea
aad
cwtl
mov
dec
cmpsw
push
sub
add
mov
mov
fldcw
jae
mov
mov
sbb
pop
mov
jnp
popa
testb
out
add
in
xchg
lcall
adc
add
mov
cmp
flds
sbb
iret
mov
insl
add
mov
and
inc
xchg
add
jo
mov
add
mov
popf
mov
xchg
pusha
add
xor
and
mov
add
mov
clc
call
movsb
add
jle
sbb
mov
cmp
mov
ficoms
negl
sbb
aad
mov
ja
add
imul
clc
nop
add
add
mov
pop
and
mov
push
add
mov
aam
dec
xchg
add
push
js
pop
lahf
in
call
fistps
pop
cmc
aad
add
rolb
mov
sbb
lahf
pusha
add
jno
xchg
push
mov
pop
rol
inc
and
and
mov
repz
ljmp
add
mov
add
rolb
mov
cmpsl
sub
xlat
fldenv
add
inc
stos
xor
popf
lods
div
xlat
jmp
xchg
or
xchg
arpl
push
rolb
mov
xor
mov
int3
lds
js
xlat
cltd
xchg
adc
and
mov
and
mov
cwtl
movl
sub
pop
fwait
dec
xor
mov
jg
mov
enter
dec
add
loope
clc
decl
mov
add
jbe
push
pop
xchg
insl
rolb
mov
xchg
xlat
dec
cmp
ret
stos
jae
or
jl
adc
push
add
pop
and
mov
pop
test
or
fwait
xor
mov
add
push
add
rolb
pushf
pop
fimull
mov
into
xchg
loope
add
lock
add
add
outsl
cwtl
mov
in
aas
jge
fbld
xor
mov
jmp
xor
add
aas
out
imull
rolb
mov
add
and
cmp
mov
mov
xor
in
pop
and
mov
and
dec
insb
or
add
adc
add
and
mov
jbe
push
add
pop
rolb
pop
xchg
xor
push
daa
into
cmp
jmp
jle
rorl
xchg
cmp
mov
add
mov
dec
test
add
or
add
mov
add
ljmp
arpl
pop
mov
decl
je
dec
or
mov
loopne
mov
rolb
mov
gs
mov
mov
repz
icebp
xchg
inc
insl
cmp
mov
sahf
xchg
dec
push
fisttpl
adc
mov
xchg
pop
rolb
mov
push
add
in
sub
mov
lock
push
mov
mov
add
mov
cmp
add
jmp
int3
hlt
jl
xor
mov
xor
jl
jg,pn
dec
inc
addr16
push
add
sub
int
aad
add
addb
movsl
pop
cltd
addb
mov
and
mov
push
inc
and
jl
imul
ljmp
leave
or
mov
lcall
adc
add
push
les
sbb
add
mov
je
lret
ret
shl
mov
sub
push
lds
lret
mov
jns
jl
dec
rolb
aad
mov
test
pop
out
dec
mov
mov
sub
negb
cmp
mov
add
daa
pushf
push
add
cs
sbb
mov
mov
mov
adc
mov
jl
adc
mov
mov
inc
add
js
imull
stc
pusha
add
add
mov
sbb
xor
mov
push
loope
pop
scas
add
ds
pop
mov
addb
rolb
jg
push
scas
sbb
add
ret
iret
cli
pushf
shrl
cld
push
dec
out
rolb
mov
add
mov
shl
std
popa
mov
outsb
fstpl
add
add
ljmp
pushf
les
add
mov
push
push
sbb
loop
mov
mov
mov
fimull
xor
imul
lcall
mov
mov
movsb
stos
rorl
out
push
or
sahf
add
mov
lcall
fucomip
inc
mov
add
add
adc
pop
sub
js
add
cmovne
add
dec
dec
std
int3
xor
int3
inc
push
add
call
mov
testb
js
sahf
cmp
mov
sub
ret
into
xchg
out
test
mov
jns
inc
add
sub
add
jnp
mov
mov
xchg
out
rolb
mov
mov
rolb
sub
stos
mov
les
mov
add
pusha
add
nop
add
lock
and
mov
insl
adc
mov
lods
lods
xchg
mov
adc
push
rolb
mov
lods
jae
sub
fldz
stc
rcrl
add
inc
push
and
mov
lcall
jae,pn
in
int3
push
pop
sti
sub
sbb
ja
mov
add
int
cmc
add
mov
aaa
sbb
mov
xor
mov
lret
loop
mov
cmp
jne
jo
mov
fs
adc
ds
dec
js
add
mov
ds
leave
into
in
mov
mov
pop
sub
lcall
fdivs
add
add
gs
loopne
mov
mov
dec
or
xchg
add
or
xor
xchg
add
pop
mov
xchg
dec
jnp
push
jecxz
mov
gs
and
add
out
int3
inc
fcompl
add
lods
mov
arpl
add
aaa
rolb
mov
loope
and
cmp
imul
add
cmp
movsb
jge
add
sbb
je
push
and
aaa
inc
add
jno
in
mov
cltd
nop
add
push
add
inc
add
mov
mov
into
xor
add
ljmp
fcmovnbe
stos
pop
add
mov
dec
jns
stc
mov
mov
push
pop
mov
mov
pop
xor
iret
dec
and
jl
add
sub
ret
xchg
push
es
dec
and
push
and
ja
add
sarl
aas
push
cld
jecxz
sub
sbb
add
cld
mov
mov
adc
fcoml
sbb
rolb
enter
mov
mov
jno
cmpsl
ret
fcompl
add
xlat
lret
loopne
mov
sbb
repnz
inc
add
cmp
imul
add
cmp
xchg
and
mov
outsb
jns
pop
inc
cmp
cmp
push
dec
int3
mov
lods
lock
ss
loop
mov
or
inc
pushf
pop
test
sar
rolb
add
mov
mov
pop
mov
mov
push
xchg
fstpl
push
das
nop
add
hlt
addb
mov
push
add
jo
mov
loope
in
sub
shrl
jle
xor
add
jns
mov
xor
aas
mov
pusha
add
sub
mov
add
mov
sbb
insl
jge
add
cli
into
insb
enter
cmp
jb
mov
jns
in
mov
mov
sbb
or
dec
pop
xchg
in
mov
push
insb
mov
das
cwtl
stos
loopne
mov
sti
arpl
stos
mov
add
push
inc
add
mov
add
add
notb
add
cmp
js
add
mov
sbb
out
aam
int
pop
fcoms
ja
mov
int3
mov
pop
and
mov
mov
lea
pop
movsl
dec
add
movsl
mov
pop
insl
hlt
lahf
cmpsl
int
std
cltd
fs
xchg
pop
cmp
mov
mov
xchg
sbb
add
nop
add
in
mov
add
cmp
pop
sbb
rolb
mov
cwtl
imul
iret
push
imull
add
repz
fists
ss
xchg
in
fwait
test
roll
mov
lahf
add
add
mov
xor
inc
sub
xor
mov
xchg
out
rcrl
xor
call
call
outsb
xlat
adc
sahf
xor
insb
and
or
mov
test
rolb
mov
mov
mov
jmp
mov
sub
dec
inc
mov
mov
lahf
sub
lds
mov
fistpl
mov
gs
add
je
mov
mov
jo
mov
add
and
addr16
insl
in
lret
lods
scas
mov
fcoml
add
mov
mov
or
call
mov
xchg
jae
push
add
xor
mov
mov
rolb
test
stos
outsl
hlt
ds
push
mov
pop
mov
mov
lods
pop
adc
mov
cs
add
fldenv
loopne
mov
adc
mov
inc
les
loop
mov
repnz
testb
mov
dec
jmp
negb
repnz
sbb
mov
or
das
xor
mov
mov
adc
mov
mov
mov
cmc
mov
add
repnz
mov
sti
pop
imul
out
gs
or
mov
adc
mov
fimull
add
pusha
add
scas
sahf
decl
mov
adc
add
pop
imul
mov
cltd
cld
cmc
out
dec
mov
mov
es
mov
jmp
enter
pop
jnp
stos
jmp
fcomps
jmp
rolb
mov
cmp
mov
clc
cmpsb
mov
mov
dec
addb
daa
add
add
lret
xchg
ds
add
rolb
dec
es
mov
push
jbe
dec
or
sbb
cmpsb
mov
mov
insl
xchg
test
mov
mov
add
fdivrl
std
rolb
mov
mov
into
pusha
add
insb
mov
mov
les
and
mov
int3
xchg
mov
lock
jg
cmp
add
add
mov
mov
out
lods
lock
add
push
add
add
stc
clc
adc
lea
xchg
inc
push
inc
leave
rcr
pop
movsl
lret
mov
rolb
mov
xor
fstpl
mov
adc
add
pop
push
lds
push
out
test
mov
cmp
test
repnz
test
add
inc
adc
addb
jbe
js
lahf
fldt
sar
mov
jae
aas
loopne
mov
xchg
fsubr
out
insl
imul
adc
add
cmpsb
jnp
lret
mov
call
add
xor
sub
enter
push
out
pop
test
sbb
aas
jle
jb
mov
push
add
pushf
inc
jnp
jp
adc
xorl
push
pop
mov
stc
ret
mov
daa
gs
sub
xchg
lods
sub
aad
add
and
mov
repnz
rolb
mov
sbb
daa
lea
add
adc
jbe
jmp
data16
pslld
mov
add
pop
inc
inc
fistps
test
pusha
add
sub
pop
sbb
add
and
or
xor
mov
jb
mov
mov
or
ret
sbb
mov
daa
pop
rcll
inc
add
jb
mov
pop
cmpsl
dec
mov
cmp
roll
fdivr
sub
aad
stc
les
inc
inc
pop
push
cmp
adc
mov
mov
rolb
clc
sub
int3
inc
out
jp
add
call
cmp
mov
xchg
mov
mov
out
pop
lahf
test
movsb
adc
and
or
in
or
in
mov
jne
jns
cmp
pop
imul
mov
adc
mov
repnz
jp
mov
rolb
iret
fldl
add
stos
push
add
xchg
rolb
idivb
ja
pop
inc
add
aam
xchg
lret
adc
or
pop
adc
fisubrs
mov
add
mov
mov
popf
and
lahf
jnp
mov
mov
test
ja
jle
aad
add
sub
add
sub
jmp
add
out
xor
sub
add
test
sub
add
sbb
stc
sar
pop
stos
pushf
cltd
pop
and
mov
xchg
jg
mov
test
addb
aas
cli
out
std
pusha
add
test
std
sbb
ljmp
mov
xchg
add
cmpsl
jmp
cs
add
cmp
mov
insb
lcall
xor
pop
sbb
xchg
cmc
add
push
stc
add
mov
mov
mov
mov
dec
mov
das
vsqrtss
ja
dec
clc
xor
mov
mov
mov
add
mov
ret
add
mov
push
xchg
sarl
jnp
pop
js
add
mov
scas
insb
xchg
cltd
fs
rolb
inc
int
addb
and
jp
jle
cmpsl
xor
mov
in
loopne
mov
lcall
sub
andl
mov
sub
pop
add
mov
aas
mov
mov
add
inc
xlat
insl
pop
jmp
add
cmc
mov
es
rolb
jle
push
add
or
mov
mov
add
int
imul
mov
add
fucom
add
sysenter
jle
sahf
icebp
sub
call
mov
add
outsb
roll
add
jmp
and
call
mov
inc
addb
mov
sbb
add
add
cmp
and
sbb
sub
lcall
pop
pop
xor
loopne
mov
push
inc
add
adc
mov
push
je
cwtl
hlt
push
mov
mov
arpl
inc
and
mov
mov
addb
or
jecxz
btc
pusha
add
sbb
add
jl
adc
idivb
test
jecxz
pushf
sbb
add
stc
pop
pop
mov
nop
add
pop
sti
sahf
es
cmp
sub
loope
nop
add
aaa
movsl
incl
add
ror
mov
int3
addr16
bndldx
daa
mov
mov
ret
insl
fwait
pop
xchg
add
mov
mov
adc
mov
leave
jae
out
pop
push
lret
in
xorl
sbb
push
loopne
mov
xchg
ret
pusha
add
mov
insb
out
inc
add
cli
mov
cwtl
adc
mov
mov
push
mov
mov
and
sbb
add
loope
pop
and
repnz
mov
inc
add
clc
shrl
sbb
mov
sub
insb
fdivs
clc
xor
dec
pop
fildll
xchg
popa
divb
mov
add
leave
push
lcall
lods
sbb
cwtl
scas
jbe
mov
ljmp
sub
or
xchg
xchg
xchg
xlat
dec
nop
add
xor
mov
inc
mov
bound
mov
sbb
out
je
cmc
into
inc
add
mov
in
or
aaa
jg
test
pop
rolb
mov
je
cmp
push
movsl
out
inc
adc
pop
mov
add
ja
or
add
mov
fnstenv
ljmp
add
stos
iret
leave
xor
inc
rolb
sarl
rolb
mov
paddb
outsb
es
popf
dec
popf
lcall
xor
jmp
add
xchg
sub
pop
lock
add
jnp
mov
jmp
inc
add
xchg
les
jl
add
push
aad
lret
or
add
push
int3
pop
rcl
into
aaa
jge
and
or
fcompl
sahf
ss
xor
mov
add
ficomps
pop
std
or
adc
mov
dec
push
fistpll
xchg
mov
jbe
mov
mov
pop
add
sbb
pop
out
add
mov
or
pop
call
dec
addb
call
scas
add
mov
mov
mov
mov
cltd
lea
daa
inc
mov
int3
mov
shrl
pop
cmpsb
cmp
fsubs
es
repz
rolb
mov
xor
mov
jp
out
dec
mov
inc
add
pop
aas
int
aas
mov
in
inc
add
ret
test
xchg
das
pop
test
sub
adc
push
add
lahf
in
mov
movsl
cmpsb
addr16
loop
mov
add
add
mov
jg
and
es
fnstcw
jle
add
mov
dec
xor
sti
push
std
or
jno
dec
mov
mov
stos
ja
or
iret
pop
lret
lret
xchg
popf
lea
add
fistpl
into
mov
and
lock
scas
push
test
lds
sbb
push
subl
pushl
mov
push
stos
adc
testb
test
push
and
mov
add
sub
ffree
add
fsts
fists
jbe
fsub
arpl
loop
mov
aam
mov
add
add
dec
test
xchg
jno
add
adc
subl
add
notl
mov
add
or
nop
add
mov
rolb
mov
cld
mov
sub
mov
repz
mov
inc
add
sub
mov
aad
cmp
mov
jb
mov
dec
cmpsb
cmp
gs
jns
push
add
lret
bound
mov
ljmp
add
mov
push
addr16
rolb
mov
sub
jle
cld
int
push
out
xchg
push
lock
jo
mov
iret
jbe
add
out
xchg
or
jge
shrl
cmp
add
std
mov
mov
fs
mov
arpl
mov
adc
jge
push
cwtl
imul
push
repz
cmp
pop
mov
vpandn
dec
cwtl
xchg
and
sub
sub
icebp
jg
sbb
dec
xchg
bound
mov
fisttpl
jno
add
or
and
movsb
movsl
and
adc
inc
mov
sub
cmpsl
stc
push
cmp
nop
add
add
or
add
je
inc
jnp
inc
or
lcall
jp
xchg
cmp
bt
pop
js
loopne
mov
outsl
push
fmulp
and
repnz
cwtl
pop
adc
cmp
in
and
repnz
mov
fldenv
push
push
jmp
mov
xchg
pushf
push
cmp
sbb
mov
mov
push
aas
test
add
imul
add
pop
loope
addr16
jecxz
sub
sbb
pop
jae
getsec
dec
xor
addb
jmp
mov
add
ret
dec
dec
inc
and
mov
loope
add
xor
mov
sub
outsl
insb
lds
mov
add
repz
add
mov
aam
pop
mov
mov
mov
repnz
ret
repnz
loopne
mov
mov
jecxz
lahf
mov
insl
mov
sahf
push
add
int
jg
rolb
mov
add
jns
dec
adc
pushf
dec
fbstp
xchg
dec
shl
and
mov
push
test
xchg
gs
xchg
scas
add
int3
mov
mov
fsubrl
rolb
cmpsb
push
int
and
addb
push
add
fucomp
leave
pop
jge
out
loop
mov
mov
add
xlat
and
mov
mov
pop
dec
insb
popa
leave
test
fwait
and
in
xor
sti
js
add
les
dec
xchg
add
mov
xchg
pop
dec
or
add
cwtl
pop
cmc
add
ret
test
pop
dec
das
xchg
mov
mov
add
cltd
sbb
add
mov
scas
jo,pt
mov
add
add
cmp
mov
add
add
mov
sub
mov
sbb
pop
loopne
mov
out
popf
addr16
lahf
das
mov
faddl
add
inc
jl
divl
roll
mov
add
stc
add
mov
insl
les
inc
rolb
mov
pop
popa
push
sbb
jno
fidivl
in
stos
lods
sub
je
pop
stc
out
adc
mov
mov
test
add
mov
sub
outsb
fnstenv
push
fmulp
mov
mov
push
sub
mov
mov
xchg
push
add
stos
pop
add
mov
lock
xchg
movb
mov
rolb
inc
flds
loop
mov
inc
lds
rolb
mov
sub
mov
mov
add
test
in
push
add
add
mov
mov
movsb
bound
mov
sub
mov
call
sub
fdiv
and
mov
dec
adc
pop
cmc
add
fwait
push
add
add
sbbl
stos
clc
add
xor
jnp
mov
test
jge
or
jmp
add
clc
mov
mov
enter
nop
add
add
mov
add
out
je
popa
xchg
stos
clc
sbb
add
repz
push
and
das
aas
lds
fwait
and
mov
nop
add
xor
and
mov
aam
add
add
jns
add
cmp
fidivrl
xor
mov
outsl
add
decb
es
cmp
and
loopne
mov
stos
xor
test
cmp
ja
mov
mov
add
push
cmp
add
push
sti
cmp
push
push
rcrl
adc
sub
cmc
mov
jg
or
ljmp
sbb
repnz
push
cltd
mov
les
mov
mov
mov
sahf
aad
jb
mov
xor
add
cmp
xchg
cld
sub
and
cmpsb
sbb
adc
mov
add
adc
rolb
mov
mov
add
add
xchg
es
stos
mov
add
adc
mov
xchg
add
mov
lods
mov
mov
dec
out
lret
pushw
mov
mov
add
push
or
mov
add
in
fnsave
mov
jecxz
rcll
lea
xlat
movsl
test
push
add
xchg
les
or
mov
add
push
lods
inc
decl
lods
dec
mov
mov
nop
add
add
mov
mov
push
or
xchg
cmpsb
rcrl
mov
jo
mov
mov
or
sub
pusha
add
in
add
dec
and
scas
push
add
fidivrl
and
mov
lds
mov
jnp
test
inc
add
mov
imul
mov
inc
add
and
outsl
mov
fcomps
cmp
jl
add
adc
mov
popf
mov
mov
mov
jae
xlat
and
sub
xchg
out
je
xchg
mov
sahf
fidivrl
mov
mov
movsb
mov
jp
lock
sub
jns
and
into
leave
xor
dec
adc
rol
add
mov
xor
and
int
pop
push
xorl
and
add
xchg
imul
mov
add
sub
mov
push
and
add
fldt
out
fwait
cmp
ror
mov
lea
nop
add
icebp
pusha
add
enter
movsl
jae
cltd
xor
popf
sub
jl
icebp
adc
arpl
cmpl
clc
and
mov
pop
loope
int
cmp
mov
sbb
add
xor
outsl
das
push
add
sub
daa
jae
fdivrs
mov
mov
inc
add
jle
add
add
mov
mov
xlat
jle
add
outsb
movsl
into
lock
mov
test
pop
xor
mov
or
outsb
mov
xchg
add
mov
addb
sub
push
mov
mov
in
add
mov
pslld
mov
cwtl
xor
dec
mov
mov
add
cmp
mov
out
add
jno
xchg
add
pop
mov
addr16
pop
out
dec
cmpsl
push
fistpl
sbbl
jg
add
sbb
add
mov
add
movsl
lock
add
inc
jbe
xor
xchg
adc
mov
jp
xor
or
mov
mov
cld
push
fnstsw
add
mov
cmpl
das
dec
gs
xchg
loope
jo
mov
jae
mov
lret
add
mov
and
lock
mov
ret
movsl
or
add
mov
addl
movsl
sbb
fwait
sbb
add
sub
mov
rcr
bound
mov
rolb
mov
or
mov
add
mov
cli
jge
xchg
pop
and
add
mov
mov
ret
arpl
jge
push
imul
rolb
mov
mov
lock
popa
and
mov
mov
aas
test
adc
mov
mov
js
pusha
add
mov
and
ret
dec
andl
mov
ds
jecxz
pushf
mov
mov
in
push
pop
xlat
cwtl
jle
sti
jmp
dec
mov
pop
ljmp
add
xchg
mov
inc
leave
and
mov
iret
cmp
out
adc
shll
mov
mov
lods
pop
and
sub
insb
xor
mov
sbb
mov
fmull
shll
ret
jae
scas
xchg
xchg
adc
mov
adc
in
jmp
fstps
sub
sbb
test
xor
mov
push
mov
mov
add
and
addb
clc
dec
mul
mov
add
pop
pop
dec
inc
add
push
mov
add
repnz
cmp
push
sub
xchg
xchg
cmpsb
jge
sub
rolb
mov
cmp
push
rolb
mov
add
xor
dec
push
dec
add
movsb
or
add
inc
je
in
movsb
push
mov
addb
fabs
xchg
add
add
mov
js
lods
inc
push
aaa
sbb
cmp
out
pushf
fnstenv
add
repz
fbstp
add
mov
add
add
gs
subl
inc
add
push
add
loopne
mov
push
add
addb
ret
loope
add
fnstsw
pop
jmp
pusha
add
adc
rolb
fistpl
add
nop
add
fistpl
xchg
or
adc
rolb
mov
jecxz
add
popa
fidivs
cmpsb
or
add
addr16
addb
push
clc
cld
mov
mov
loope
inc
lahf
stos
sub
adc
inc
test
push
in
movsb
sub
mov
xor
jnp
add
mov
das
or
lds
xchg
sub
sbb
or
out
add
enter
adc
push
sbb
roll
inc
add
add
pavgw
push
ss
test
lcall
outsb
dec
cwtl
inc
mov
xchg
out
or
pop
outsl
movsl
sbb
leave
addb
rolb
mov
add
stc
pop
jo
mov
hlt
xchg
pop
iret
rolb
mov
mov
lahf
or
out
in
jb
mov
iret
call
xchg
call
adc
mov
add
xor
mov
jb
mov
lahf
testb
cmp
xor
in
lods
das
in
dec
mov
add
xor
stc
add
mov
addr16
clc
mov
push
sub
add
insl
hlt
out
add
inc
movsl
push
add
outsl
dec
mov
sti
aaa
jb
mov
add
xchg
jb
mov
mov
pushf
pop
xor
mov
sbb
push
out
mov
gs
mov
jbe
adc
sbb
imul
mov
in
pop
xor
mov
mov
mov
ret
ljmp
add
mov
mov
push
rolb
mov
in
jp
lahf
mov
or
aas
addb
test
xor
mov
test
mov
addb
push
xchg
mov
add
add
add
adc
test
pop
out
js
add
rolb
adc
popa
mov
hlt
into
dec
fiadds
sti
daa
or
imul
or
dec
sbb
dec
imul
mov
and
lock
sbb
icebp
push
in
fprem
xor
jo
mov
stos
sbb
xor
aad
arpl
add
add
sbb
fnstcw
dec
repnz
in
pusha
add
inc
jp
fisubrl
cs
cmp
dec
lock
jecxz
adc
fcomip
les
adc
mov
cmp
icebp
push
sbb
xor
mov
mov
cmpsb
sbb
sbb
cmp
cmp
daa
xchg
xor
mov
mov
push
popf
sbb
xchg
add
cmp
fadd
add
hlt
inc
pop
and
add
out
add
mov
gs
mov
adc
xlat
jns
adc
add
lods
xchg
mov
movsb
mov
cwtd
pop
inc
sbb
rorl
cmp
fisubrl
repz
mov
adc
test
sbb
addb
cmpsb
test
xor
mov
lods
das
clc
xor
push
pop
dec
popa
mov
mov
mov
loopne
mov
mov
mov
arpl
mov
lods
pusha
add
mov
imul
repnz
in
in
cmp
mov
flds
fisubrl
hlt
and
dec
or
aaa
xor
outsl
notl
shl
cmpsl
ds
das
pop
dec
lret
cli
test
in
mov
mov
inc
mov
lods
fcmovb
push
cmp
xor
data16
and
cld
lock
cmp
ret
out
imul
fst
adc
mov
jns
pop
rolb
mov
pushl
mov
in
cmp
jno
xchg
pop
popf
sahf
sbb
add
cmp
sub
add
push
add
mov
cmp
sub
popa
imul
fsubl
add
add
mov
scas
movsl
or
movsb
testl
add
rolb
mov
pop
xorl
frstor
shll
pushf
dec
push
mov
int3
inc
add
add
jno
xor
sbb
cs
cmovnp
push
adc
mov
jnp
cmp
push
add
out
scas
pop
inc
jno
sahf
inc
xor
add
add
cmp
stos
repnz
push
cmp
add
cld
mov
mov
repnz
and
mov
fisubrs
lcall
test
lret
jge
rolb
sbb
mov
add
iret
nop
add
push
jo
mov
mov
sub
add
jb
mov
or
sub
jo
mov
mov
add
lret
mov
enter
add
sub
rorl
mov
imul
enter
add
lcall
cmpsl
cli
jae
adc
mov
add
mov
outsb
ss
add
dec
sub
adc
cmp
xchg
fbstp
and
mov
dec
lcall
add
lret
lcall
inc
pop
ret
sbb
add
fnstenv
les
out
inc
sbb
adc
arpl
mov
mov
add
fstpt
mov
gs
repz
add
mov
icebp
jnp
xor
sub
or
lahf
mov
mov
push
jne
cwtl
negb
add
leave
sub
dec
out
or
jg
jbe
add
mov
mov
int
add
pop
mov
add
add
xor
mov
add
or
lcall
mov
dec
mov
mov
xchg
mov
mov
inc
add
and
inc
pop
xchg
push
push
mov
pop
daa
dec
int
aam
loope
cmp
mov
inc
test
and
xor
add
xchg
out
cltd
pop
xor
in
add
iret
sub
add
push
mov
push
dec
jb
mov
sub
imul
mov
and
data16
add
push
add
fisttps
leave
sbb
mov
add
cmp
pusha
add
mov
mov
jno
add
loope
xor
mov
add
xchg
stos
push
pop
sub
test
add
add
mov
mov
push
ficoml
dec
fistpll
in
rolb
mov
pop
fsts
cs
addr16
shll
lods
add
cli
in
enter
fldl
rolb
mov
jge
div
loopne
mov
add
fimull
pop
ljmp
mov
add
add
rolb
mov
daa
pop
xchg
xchg
call
mov
sub
xchg
ss
jo
mov
add
sti
lock
test
jl
lahf
mov
mov
pop
sbb
aas
xor
ja
pop
sti
negl
push
loope
cld
push
push
add
mov
mov
xchg
loope
dec
jp
out
push
sub
push
add
add
mov
xchg
add
and
mov
pop
jl
loop
mov
in
adc
jg
add
add
add
mov
rcrl
xor
mov
lcall
aas
fidivl
add
mov
xor
sub
inc
inc
push
add
cmp
js
dec
fisttps
adc
test
mov
es
test
dec
test
add
add
mov
imul
and
adc
mov
push
mov
pop
jno
icebp
sub
add
in
addr16
pop
jns
roll
mov
jmp
push
xchg
push
fimuls
mov
push
and
mov
les
je
adc
mov
and
mov
jns
xchg
or
daa
pusha
add
mov
mov
mov
lds
sub
and
mov
fsts
mov
or
mov
mov
jo
mov
rolb
mov
mov
loopne
mov
pop
fldenv
mov
mov
and
xchg
lcall
jg
movsb
jp
mov
mov
roll
mov
enter
flds
add
xor
add
ret
jl
push
add
mov
add
gs
push
add
lods
xor
jo
mov
cs
inc
fldt
data16
and
cmpsb
icebp
inc
addb
aam
mov
mov
or
leave
aad
xchg
in
lods
ret
fs
loop
mov
jle
cmp
insl
fisubs
mov
inc
add
inc
push
cmp
dec
cmp
push
decb
jl
cmp
cmp
mov
mov
mov
lods
inc
jno
inc
jge
add
icebp
adc
and
jns
or
mov
jne
into
xchg
add
add
mov
pop
xor
add
insl
fldenv
mov
mov
in
lods
sbb
jb
mov
mov
pop
sbb
out
jno
add
cwtl
push
nop
add
pushf
in
lock
mov
addb
push
xchg
repz
add
adc
test
add
jg
movl
rolb
js
shl
add
push
stos
adc
les
or
add
movsb
sbb
movsb
or
inc
pop
pop
bound
mov
out
aas
shll
and
mov
add
in
cs
or
mov
out
xchg
xchg
lods
fldenv
add
mov
add
sbb
data16
mov
mov
in
mov
rolb
mov
xchg
cmpsb
std
pop
loop
mov
ja
mov
and
sub
xor
mov
xchg
mov
mov
rolb
sbb
lcall
scas
cld
pop
scas
aas
lret
mov
ss
cmpsb
lods
idivl
in
dec
mov
mov
lahf
ret
pop
imul
xor
sti
lods
cmp
cwtl
adc
jae
add
enter
loop
mov
in
rolb
mov
rcll
mov
jne
push
mov
mov
push
movsl
repnz
mov
add
cmp
mov
pop
pop
mov
mov
lock
sub
clc
push
add
push
arpl
mov
in
inc
pop
xchg
aaa
sbb
stos
mov
and
mov
pop
dec
mov
in
aam
add
insb
cmp
xchg
inc
add
pop
mov
cltd
mov
aas
pop
in
push
in
out
ret
or
fldt
enter
add
mov
cld
dec
movsb
fidivrl
out
fwait
in
aam
out
call
mov
or
xchg
add
mov
inc
add
lahf
dec
out
add
push
xchg
mov
add
dec
pusha
add
les
mov
addl
xchg
push
shrl
add
pop
pop
ljmp
push
scas
cmpsb
imul
xlat
mov
aaa
adc
mov
out
std
out
inc
sub
add
add
jne
sub
bound
mov
leave
pop
das
mov
jmp
sbb
pop
pop
clc
movsb
je
sbb
xor
int3
cmp
mov
add
cmpsb
arpl
add
test
mov
dec
imul
add
inc
add
imul
nop
add
pop
pusha
add
mov
pop
cli
outsb
dec
stc
imulb
xor
mov
inc
add
or
fidivs
or
sbb
pop
aam
popa
cmpsl
or
inc
iret
sbb
rolb
mov
mov
loope
test
mov
add
fucompp
lods
jb
mov
mov
imul
jg
inc
add
lds
lds
icebp
mov
stos
enter
mov
add
mov
push
mov
out
jp
mov
or
add
rorl
in
push
sub
ficoml
add
lret
in
rolb
lret
push
rolb
mov
pop
dec
enter
push
add
add
sbb
jne
arpl
das
mov
mov
mov
mov
out
aas
and
inc
mov
add
pop
movsl
sbb
mov
pushf
in
adc
and
push
push
loop
mov
xchg
notl
in
aad
mov
outsl
mov
add
imul
add
jecxz
fstpl
add
dec
sub
or
inc
adcl
mov
mov
mov
mov
mov
rolb
mov
inc
or
inc
add
mov
mov
stos
and
adc
mov
xchg
mov
mov
fs
les
cwtl
dec
cmp
add
mov
out
or
sbb
pop
pop
pop
out
add
mov
scas
adcl
out
rcll
cmp
mov
out
fbld
add
inc
dec
rolb
mov
mov
jne
aam
add
aas
or
jnp
aas
xor
mov
ds
mov
hlt
pop
in
lret
push
mov
pop
out
push
and
mov
test
jmp
jle
xchg
add
pop
dec
xchg
add
pop
mov
mov
mov
mov
out
or
jle
addb
call
out
fwait
sbb
hlt
imul
sub
xor
add
pop
push
add
in
fcmovnbe
filds
imull
mov
jb
mov
adc
repz
pop
pop
push
fwait
out
add
mov
negb
add
xlat
add
popa
insl
sahf
mov
add
mov
movsb
fsubrl
stos
push
insb
xchg
cli
clc
mov
add
mov
adc
push
sub
jbe
add
popl
scas
xor
add
int3
adc
mov
xchg
dec
xor
add
nop
add
mov
add
and
lret
mov
inc
add
sti
out
xor
fstl
cmpsl
or
push
or
mov
sahf
out
push
loopne
mov
mov
xor
mov
jns
test
addb
jmp
arpl
sbb
jg
jp
aam
aad
mov
mov
mov
add
inc
jge
orl
push
add
inc
add
add
add
add
ds
jle
int3
cld
xchg
arpl
sub
or
arpl
add
add
sub
add
lret
xchg
clc
inc
add
jns
fcmove
push
add
push
add
mov
inc
push
cs
shll
mov
pop
cld
iret
or
mov
lahf
movsb
add
mov
mov
and
lret
dec
movsb
mov
pop
stc
push
adc
lods
hlt
dec
mov
not
aas
call
pushl
icebp
cwtl
fdiv
lea
mov
js
add
or
pop
sbb
xchg
fld
push
push
mov
outsl
xchg
add
mov
cmp
cltd
in
add
lea
mov
xor
jg
mov
push
mov
test
inc
in
aam
test
addb
pop
xor
add
aas
cltd
pop
pop
ret
mov
mov
adc
mov
mov
dec
jmp
rolb
fs
mov
mov
pop
dec
xor
mov
sbb
dec
cs
popf
jg
lock
mov
mov
mov
bound
mov
or
or
add
push
mov
pop
jno
jmp
mov
cmpsb
add
inc
mov
rolb
mov
add
jmp
insl
cmpsb
or
mov
xchg
jae
rolb
mov
cmp
jg
add
int3
lock
add
add
pop
sbb
mov
jg
cli
push
in
mov
or
inc
add
inc
test
movsl
mov
sub
xchg
push
add
mov
add
mov
sarl
mov
leave
push
dec
test
out
sbb
in
lods
add
iret
mov
ds
lahf
paddq
add
add
andl
mov
fildll
arpl
cli
popa
fildll
pushf
sbb
add
mov
std
mov
pop
das
lock
mov
adc
push
cmc
dec
in
scas
dec
lret
sub
negl
add
sbb
dec
gs
push
add
cmp
js
ret
inc
xor
fadds
addb
sub
mov
or
add
shll
mov
add
jno
jge
jg
jb
mov
xor
outsl
out
in
data16
fnsave
gs
jno
popa
fidivrs
fisubrs
aad
xchg
add
xchg
mov
outsb
or
pop
rcrl
mov
ja
jp
jne
addb
jnp
xorl
mov
add
outsb
pop
fsubrs
nop
add
sub
inc
adc
pop
nop
add
sub
jae
add
insl
lahf
mov
jbe
add
mov
mov
inc
into
enter
dec
in
cwtl
test
nop
add
es
mov
fdivs
dec
nop
add
xlat
lahf
ljmp
rcl
add
add
push
sub
xor
arpl
inc
xor
test
imul
xchg
mov
incl
iret
dec
pop
das
fsubl
sarl
adc
out
pop
lahf
mov
sub
add
insb
mov
mov
scas
fs
incl
punpckhwd
xlat
call
dec
sti
pop
add
mov
jle
mov
repnz
mov
add
add
gs
jp
dec
jecxz
or
insl
xchg
dec
jmp
add
mov
mov
sti
fists
pop
fldl
push
shll
call
sbb
add
mov
dec
mov
add
add
jbe
popa
leave
fldenv
cmp
dec
test
pushf
es
dec
test
and
xchg
sbb
fldl
cmpsl
xchg
and
pop
xchg
scas
ret
cmpsb
or
les
add
aaa
je
adc
xchg
mov
mov
add
sbb
add
ficoml
mov
add
mov
addb
dec
xor
mov
push
pop
jo
mov
xlat
inc
add
mov
and
pop
imul
lahf
push
inc
popa
cmp
addl
mov
add
mov
out
add
ret
ljmp
push
std
enter
push
lock
xor
mov
mov
add
mov
sbb
out
lds
mov
pop
push
jecxz
fs
xchg
mov
out
outsl
push
add
pop
push
add
loop
mov
pushf
out
repnz
fucomip
xchg
mov
mov
cmp
fmul
push
cmp
out
xor
xchg
cltd
ficoms
add
mov
and
daa
ja
lds
xchg
lea
mov
in
idivb
iret
lock
xchg
cwtl
sub
lds
pop
mov
addl
repnz
mov
sub
mov
std
imul
scas
mov
mov
cmpsb
arpl
mov
pop
sbb
add
imul
icebp
mov
add
cli
scas
sahf
jae
lods
sbb
mov
lcall
jmp
filds
add
mov
xor
mov
mov
or
and
add
mov
add
push
addr16
dec
push
add
xchg
repnz
mov
out
outsl
in
inc
fistps
stc
shll
data16
push
imul
mov
shll
dec
mov
sub
push
jp
add
into
lods
out
mov
add
xchg
addb
sub
jbe
imulb
add
add
inc
add
mov
hlt
jmp
add
rolb
mov
lcall
mov
loop
mov
call
push
pusha
add
pop
ficoms
mov
shl
ds
rolb
stc
mov
mov
into
scas
add
stos
add
ret
sub
mov
fsubrs
idivl
lock
push
xlat
push
and
mov
add
dec
and
mov
sbb
in
outsb
in
or
mov
or
mov
mov
xchg
add
add
mov
test
mov
mov
xchg
je
nop
add
sbb
add
mov
inc
scas
sbb
mov
js
leave
add
add
cmpsl
jae
lret
sbb
das
fists
sbb
push
add
inc
cmp
daa
fdivrl
xchg
adc
add
and
push
pop
cs
jge
out
repz
hlt
jne
cmc
inc
test
sub
lret
scas
dec
in
sub
clc
or
stos
addb
sbb
add
aas
shr
and
mov
das
inc
xor
lret
cmp
lcall
ret
and
out
bound
mov
sbb
aaa
lahf
mov
jno
xor
xchg
xchg
mov
mov
lock
add
rolb
mov
cmp
fsubrs
jmp
adc
mov
mov
mov
mov
insb
xor
add
add
mov
add
mov
cli
mov
pusha
add
mov
push
add
mov
mov
add
popf
xchg
into
fcomi
add
mov
push
fiaddl
jne
adc
outsl
xchg
out
mov
add
mov
mov
stos
jge
not
add
sti
pushw
mov
adc
mov
cmp
test
je
call
mov
ss
mov
pop
add
cmc
xor
mov
out
inc
arpl
repnz
pop
cltd
xchg
in
andl
and
add
or
mov
push
in
loope
rcrl
jb
mov
int3
pop
shl
mov
mov
imul
jg
xchg
inc
mov
in
and
sbb
outsl
je
testl
add
ret
add
mov
rolb
xchg
out
dec
pop
int
rolb
movl
dec
xchg
mov
and
mov
dec
jle
jnp
push
jg
mov
mov
push
mov
xchg
repz
mov
inc
inc
pop
enter
es
add
call
lahf
push
loop
mov
fimull
test
or
andl
into
pusha
add
pop
mov
push
rolb
in
or
jne
aam
fnstcw
mov
js
cs
add
mov
mov
mov
jle
mov
add
adc
mov
mov
cld
lock
cmp
jecxz
insl
mov
daa
sub
ficoms
sbb
pcmpeqw
mov
mov
adc
add
xchg
add
and
ss
push
or
add
mov
fsubrs
dec
pushf
imul
push
add
rcrl
add
add
add
adc
out
add
leave
dec
and
in
xchg
fcoms
mov
aam
pop
or
add
mov
mov
mov
les
dec
loop
mov
push
mov
lds
add
and
add
leave
jmp
add
or
jp
adc
sub
xchg
lret
and
into
jo
mov
clc
mov
mull
movsb
fdivrl
push
push
add
push
lret
je
sbb
jg
cmp
jmp
add
mov
add
ds
xchg
rolb
mov
add
mov
popf
mov
arpl
les
mov
add
cmc
mov
adc
mov
add
subl
and
mov
add
pop
test
mov
mov
dec
inc
sahf
sub
xchg
add
in
es
sbb
add
cs
dec
dec
push
jne
mov
outsl
mov
and
inc
add
aaa
sbb
add
xor
mov
xchg
jo
mov
xor
ret
dec
mov
or
jno
movsl
aad
outsl
es
add
pop
sbb
add
or
ficomps
outsl
push
imul
mov
mov
scas
bound
mov
mov
outsb
add
mov
test
imul
sub
mov
ds
mov
dec
mov
pop
mov
add
rolb
sub
adc
cmp
pop
repnz
rolb
mov
mov
mov
lock
shll
daa
mov
mov
add
mov
add
repz
into
push
add
std
sbb
std
mov
mov
enter
mov
out
movsl
mov
mov
sub
jae
mov
movsb
mov
push
xor
mov
add
fcoms
add
add
mov
addr16
sahf
add
mov
or
push
push
add
cltd
fdivrp
imulb
mull
add
push
add
test
pmaxsw
sub
add
mov
mov
lds
ja
add
into
call
push
xchg
add
scas
sldt
mov
xchg
xor
mov
inc
adc
mov
add
push
es
dec
addr16
lret
daa
pop
jnp
std
jne
sub
jo
mov
xor
add
int
add
mov
sti
in
mov
add
mov
inc
adc
mov
js
add
loope
mov
mov
cmc
sub
push
sub
cmp
adc
idiv
sub
mov
mov
push
pusha
add
lods
ljmp
mov
mov
jecxz
les
inc
movsb
cmp
ret
ss
mov
mov
add
and
mov
lret
mov
or
fwait
lret
add
inc
pop
lcall
clc
flds
mov
mov
mov
or
xchg
or
inc
add
data16
add
lcall
out
push
testl
add
cmp
divb
xchg
adc
test
add
jl,pn
mov
mov
mov
mov
push
pop
outsb
nop
add
int
adc
lods
out
stos
rolb
mov
jg
outsb
add
push
mov
dec
mov
cmp
pop
jae
ds
dec
faddl
add
loopne
mov
addb
rolb
mov
std
cmp
add
jb
mov
loopne
mov
push
sbb
mov
xor
sub
loope
add
lret
and
sbb
mov
addb
pop
lahf
cmpsl
dec
lret
xchg
cmp
dec
and
mov
mov
push
outsb
mov
add
add
push
shll
ret
xchg
mov
mov
add
add
addr16
add
lret
popa
out
xor
inc
ret
mov
mov
add
add
pop
rcrl
in
lods
dec
mov
pop
ljmp
xchg
cmp
cmp
mov
sbb
dec
xchg
cmp
rolb
mov
sbb
enter
lcall
dec
in
out
lock
mov
fs
mov
add
adc
jge
mov
jge
add
mov
into
lock
movsl
adc
adc
out
aam
push
add
fistpll
add
mov
and
mov
add
jae
add
add
pop
mov
lods
stos
fcmovb
add
cmp
adc
or
mov
pop
sbb
cmc
add
test
mov
mov
cs
rolb
mov
das
cltd
push
pushl
xlat
jle
cli
std
ret
lock
insb
jg
add
xlat
dec
sub
dec
jae
mov
add
js
cmpsb
and
mov
cmp
mov
jns
add
insb
push
jge
aas
incb
out
add
jl
dec
orl
aas
cld
inc
xor
xchg
pop
test
sarl
add
mov
mov
imul
fmull
mov
push
add
and
imul
mov
add
mov
mov
and
das
gs
test
data16
rolb
mov
push
add
movsl
lods
xchg
pop
jge
dec
xor
mov
mov
cmp
pop
xchg
mov
movsl
dec
testb
sub
jbe
sbb
jmp
add
push
hlt
cltd
jle
int
scas
cmpsb
mov
es
push
dec
adc
push
lock
inc
pop
push
add
test
add
dec
mov
adc
scas
cli
sub
and
mov
push
rolb
mov
sar
push
repnz
addr16
add
fwait
xchg
insl
popa
mov
cmp
or
mov
pop
inc
add
mov
jb
mov
fwait
les
add
int
cs
insl
inc
add
dec
ret
lret
in
gs
outsl
dec
mov
xchg
sub
rolb
mov
add
outsb
dec
mov
pop
loope
add
mov
xchg
cmovns
sti
pop
dec
sahf
push
jecxz
adc
jno
xor
mov
cld
test
dec
xor
add
mov
mov
repnz
ss
inc
lds
popf
sub
push
add
xor
push
sub
and
add
mov
dec
or
in
and
mov
rolb
mov
add
mov
test
gs
fsubp
adc
and
or
or
mull
add
fmuls
dec
and
mov
dec
mov
mov
jge
add
xchg
push
add
in
fldl
add
and
sub
cmpsl
jo
mov
cmp
pop
fidivs
in
pop
je
mov
add
sub
mov
jne
addr16
add
negl
push
adc
and
mov
mov
sub
inc
jl
inc
xlat
addr16
add
mov
xor
mov
xchg
addb
xor
mov
add
mov
add
add
add
fnstenv
out
dec
call
ret
push
inc
pop
mov
sub
or
add
add
or
add
subw
jmp
xor
add
jmp
fiadds
into
call
loope
rcll
into
dec
jae
pop
jmp
adc
xlat
adc
mov
mov
in
dec
pusha
add
arpl
mov
add
push
mov
dec
outsb
mov
or
add
lcall
pop
addr16
aam
outsb
rolb
cmp
sub
cmp
xchg
sahf
mov
fadd
add
mov
pop
rolb
imul
add
add
loope
pop
roll
movsb
jbe
lcall
int
add
repz
xor
ljmp
inc
or
add
mov
adc
mov
xchg
xlat
jle
fs
mov
mov
pop
dec
push
xor
mov
pop
push
mov
rolb
inc
popf
subl
inc
mov
push
fnstsw
add
stos
adc
mov
add
xchg
imul
xchg
in
leave
add
add
into
fwait
xchg
ss
dec
mov
mov
ja
jp
mov
add
add
mov
pop
add
and
mov
add
add
in
sub
adc
addb
data16
jecxz
cmp
daa
das
sub
stos
shll
add
insb
mov
mov
mov
mov
add
mov
mov
mov
mov
add
ja
add
add
adc
mov
sbb
pop
leave
pop
lock
push
movsb
les
gs
mov
insl
jns
or
cmpsl
mov
xor
mov
mov
cmp
mov
pop
sub
mov
out
push
loop
mov
mov
mov
jne
fs
sbb
pop
pop
cmp
mov
add
repz
add
lock
scas
adc
mov
icebp
sub
in
test
std
inc
mov
inc
mov
fidivrs
mov
mov
add
pop
daa
sbb
or
out
push
adc
daa
mov
mov
clc
mov
dec
sbb
loopne
mov
inc
add
add
sub
mov
push
in
mov
jne
andl
mov
loopne
mov
mov
jmp
lahf
rol
xchg
xor
add
mov
iret
divb
add
sbb
iret
and
adc
jno
nop
add
xor
mov
and
inc
enter
in
addr16
adc
mov
mov
adc
add
or
mov
dec
in
mov
add
add
mov
add
mov
jbe
pop
lcall
es
fisubrl
jae
xor
mov
loopne
mov
mov
pop
mov
mov
add
mov
mov
inc
out
nop
add
cmp
rolb
mov
adc
mov
popf
cmpsl
adc
mov
xor
jl
cmp
test
flds
mov
imul
mov
dec
rolb
mov
scas
int
jmp
mov
inc
pop
jg
out
push
mov
rcll
inc
mov
sbb
mov
add
mov
add
mov
cmpsl
sub
cld
or
pop
std
repnz
mov
mov
add
add
jmp
mov
mov
add
xor
fldcw
pop
cmp
inc
fstpl
in
jb
mov
icebp
push
add
mov
add
test
out
mov
cmp
and
dec
push
out
rolb
mov
push
mov
push
out
sbb
push
add
cld
mov
sbb
fwait
into
jge
mov
add
cmp
in
inc
and
mov
inc
sbb
jge
add
repnz
cmpsb
in
push
add
addl
pop
loopne
mov
mov
sub
add
scas
jmp
jle
in
add
cli
add
gs
mov
lret
out
outsl
push
pop
out
in
sub
dec
jg
adc
add
bound
mov
arpl
fsts
add
mov
sbb
add
das
jbe
sahf
adc
adc
add
mov
scas
test
fdivr
in
add
sub
cs
cmp
les
add
add
loope
cli
es
mov
mov
inc
mov
mov
iret
jnp
es
cld
jne
mov
mov
js
inc
roll
mov
add
dec
dec
pop
xor
jbe
dec
aad
mov
mov
movsl
mov
mov
imul
add
lds
ret
mov
in
adc
pop
xor
out
mov
loop
mov
lcall
imul
ds
cwtl
jbe
inc
js
aaa
pop
les
in
xchg
sub
fimuls
mov
jmp
add
iret
mov
inc
js
in
imul
insb
inc
scas
pop
sbb
add
cs
mov
sbb
inc
cld
pop
push
dec
test
add
dec
mov
aas
daa
mov
sbb
stos
in
addb
dec
mov
add
or
aas
movsb
inc
add
inc
jecxz
jmp
insl
jns
pusha
add
and
mov
jg
inc
in
fwait
int
stos
push
xchg
mov
lds
cmpsb
adc
insb
add
mov
data16
xchg
lcall
mov
mov
cwtl
jo
mov
ret
dec
mov
mov
cwtl
test
rolb
mov
loopne
mov
cmp
mov
stc
outsb
mov
aas
cmp
cmpsl
or
mov
sbb
mov
shll
cmp
sbb
jbe
add
add
lcall
bswap
sti
cmc
sahf
mov
scas
std
push
pushl
add
mov
daa
out
rolb
or
repz
mov
add
fcoms
add
cmpsl
cmp
or
insb
push
add
adc
stc
inc
or
les
xor
add
testl
mov
in
jmp
push
jb
mov
in
mov
mov
or
lods
mov
mov
mov
mov
dec
or
add
mov
scas
pop
or
add
push
aam
fbstp
xor
xchg
push
mov
mov
add
mov
out
push
push
in
mov
aaa
or
and
xchg
cmpsl
push
mov
aam
sbb
and
mov
push
add
mov
popa
lea
xor
mov
cld
jp
hlt
dec
movsb
pop
jp
testb
out
stos
addr16
add
push
fwait
jmp
push
scas
ret
cmp
add
test
lods
xchg
jne
add
mov
lods
dec
mov
add
add
mov
sbb
ret
dec
fs
push
jle
jae
cmp
mov
add
jae
jecxz
add
xor
outsl
mov
mov
mov
iret
or
std
or
add
pmuludq
shll
cmpsb
pop
fsubrl
sbb
test
rolb
xor
dec
jmp
js
inc
insb
test
add
lods
inc
and
mov
push
add
lret
jo
mov
fsubp
addb
stc
pop
rcrl
fldt
mov
mov
mov
sahf
ja
sub
mov
.byte
.byte
xchg
.byte
