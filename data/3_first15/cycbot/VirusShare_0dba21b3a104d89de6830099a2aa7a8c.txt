imul
add
loopne
cmp
je
jg
sub
int3
sbb
add
mov
lock
mov
je
addb
les
lods
bound
faddl
add
fbstp
sbb
add
daa
stc
xchg
jp
popa
add
je
mov
imul
pop
xor
cwtl
fisttpl
adc
or
inc
add
pop
test
addb
add
fwait
push
sbb
add
pop
loop
add
imul
add
jle
push
mov
add
jne
lret
roll
add
imul
add
fsts
push
addl
sub
insl
lds
push
cli
xchg
cltd
outsl
mov
xchg
out
or
aam
mov
mov
hlt
out
xchg
in
rcrb
add
pop
ss
push
outsb
add
sub
test
xchg
add
dec
testb
es
addb
add
gs
dec
sub
add
push
mov
lds
jmp
add
pop
or
stos
and
push
cli
inc
add
add
insl
xor
add
xor
mov
das
lcall
sbb
out
push
mov
add
inc
add
push
cwtl
stos
or
sub
xchg
aaa
push
pop
dec
xchg
lahf
xchg
test
pushf
fldenv
sbb
pushf
xor
ret
add
add
add
add
or
xchg
push
add
sbb
ret
add
or
xor
mov
shll
push
xchg
test
aas
or
add
xchg
ffree
add
shr
addl
xchg
mov
loope
add
mov
add
jo
les
stos
sbb
sahf
in
lret
addb
mov
inc
add
ret
ret
add
js
aad
sbb
ffreep
add
add
xor
or
add
lahf
pop
add
std
movl
js
add
addr16
jno
add
jg
add
clc
lds
addl
sti
adc
hlt
cs
addb
add
cmp
mov
add
add
sub
cmpsb
roll
jl
and
outsl
fimull
add
rcrl
test
xor
loopne
push
push
mov
jge
stc
movb
add
ret
fnstcw
es
enter
out
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
notrack
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
ret
int3
mov
cld
cs
lea
xchg
or
xchg
lea
repnz
pop
add
ss
cs
ret
add
add
aad
pushf
aaa
jae
add
add
pop
fistpll
and
addb
adc
adc
int3
fcomps
enter
mov
jbe
add
add
fists
call
push
addr16
fsubr
stos
sbb
mov
fsubs
aas
jae
add
js
pushf
mov
add
xchg
addb
sbb
add
out
ja
push
add
repnz
or
aaa
fwait
adc
cmp
inc
add
add
pop
push
leave
cmp
negb
iret
push
lds
rolb
add
test
popa
add
es
addb
or
add
out
lahf
pop
add
stos
mov
sbb
mov
add
int3
cmpsl
paddq
mov
shll
adc
into
out
not
call
ret
hlt
addl
ds
push
push
and
je
pusha
add
mov
aad
jnp
push
xor
mov
mov
pop
rcrb
add
sub
mov
dec
arpl
push
push
movsb
mov
sbb
jl
ss
jmp
imul
xlat
mov
sbb
int3
cmpsl
leave
or
sahf
jae
inc
add
sub
call
loop
int3
mov
ret
add
jle
add
sbb
add
add
loopne
roll
aad
jecxz
cli
and
notb
mov
add
ret
add
jo
cmp
xchg
lods
lock
lods
add
add
cmc
lds
out
add
outsb
push
xor
add
adc
add
into
fadd
add
aaa
mov
cwtl
ljmp
fwait
inc
add
push
test
dec
push
jns
outsl
push
ror
gs
add
fs
popf
xor
add
push
add
fmuls
dec
das
dec
inc
add
mov
fldcw
inc
add
push
in
jge
add
sbb
pop
mov
mov
in
lahf
lahf
or
pop
pop
and
push
fwait
in
pop
mov
in
inc
add
ds
addb
pop
repnz
add
inc
add
movl
adc
and
arpl
add
daa
ret
add
mov
das
push
sbb
jmp
jo
mov
in
xor
lds
lods
icebp
inc
add
std
loopne
les
shl
cli
inc
add
leave
and
lret
mov
movsb
stos
in
shl
sbb
nop
jmp
aas
xchg
add
addl
mov
add
mov
loope
add
add
add
add
mov
push
mov
sti
mov
mov
les
inc
add
es
es
jmp
adc
mov
mov
dec
sbb
in
add
jo
rolb
lds
mov
add
or
add
push
loopne
jb
addl
push
adc
decl
fwait
aad
add
dec
or
movsb
xlat
cmp
add
xor
sahf
rclb
call
shll
scas
inc
add
stos
xor
test
js
add
push
push
fwait
lock
js
inc
add
cmp
addl
push
mov
popf
or
loop
add
int3
mov
out
imul
cmp
leave
dec
or
pusha
add
add
mov
loopne
icebp
addl
mov
popf
stos
movb
pop
inc
add
aaa
testb
ds
mov
bnd
cwtl
push
lcall
dec
js
fmulp
les
out
lret
addb
hlt
frstor
mov
pushf
fimuls
fwait
into
pusha
add
fsubl
add
mov
add
mov
push
sub
mov
push
mov
mov
data16
add
adc
and
xchg
pop
pop
dec
or
add
add
push
int
add
cmp
push
push
inc
add
xchg
cmp
mov
pop
roll
fcomp
or
jbe
pushf
movsl
lahf
fsts
inc
add
xchg
div
test
sahf
test
cmpsl
mov
daa
jg
and
pusha
add
xor
mov
iret
lods
arpl
fcmovbe
and
push
lret
cmp
add
cmp
add
js
add
loope
hlt
idivl
repnz
cli
or
jge
aaa
pop
ret
xor
sub
in
in
insl
cmp
xor
sbb
pop
out
adc
xchg
xor
mov
add
jp
mov
ret
add
add
add
add
add
add
jne
push
jp
outsb
sbb
add
in
add
mov
ss
sbb
cmp
push
add
xor
cwtl
inc
add
rolb
xor
add
sub
add
add
push
add
addr16
pusha
add
add
gs
add
or
pop
push
xchg
int3
std
fcmovne
in
outsl
xor
push
add
in
in
cmovg
xchg
jb
jno
mov
pop
dec
out
test
loopne
adc
cli
xchg
push
adc
arpl
stc
js
mov
push
test
add
add
call
leave
jo
mov
aad
push
lret
test
xor
lcall
lret
mov
push
xchg
out
sub
loopne
std
ja
movb
mov
and
rcrb
fistps
push
cmpsb
sub
nop
dec
rolb
add
sbb
pop
out
mov
pop
push
stc
stc
movb
add
test
insl
sub
and
and
jge
xchg
mov
push
inc
add
xor
rol
add
add
cmp
add
xchg
mov
mov
dec
aam
pushf
dec
addb
xchg
dec
daa
cmp
pop
or
add
and
outsb
leave
mov
inc
add
ja
add
inc
add
loop
loopne
pop
insb
lods
ljmp
cwtl
lcall
cwtl
ljmp
ret
cmpsb
lds
in
cwtl
and
adc
popa
add
mov
push
adc
mov
push
mov
pop
incl
iret
jmp
cwtl
xchg
and
pop
aas
cmp
test
and
add
or
mov
dec
rorl
add
mov
push
lret
inc
add
mov
mov
or
cmp
lock
dec
xor
decb
pop
out
add
cmp
mov
sti
xor
out
std
inc
add
mov
fildll
xchg
ret
pop
js
mov
add
mov
hlt
push
loopne
in
fidivrs
in
addl
les
xchg
ja
pop
add
sbb
repnz
add
add
add
bound
movl
fists
sahf
loop
add
sub
add
xchg
inc
add
xor
sub
mov
adc
push
jnp
fidivl
lods
mov
or
leave
into
jmp
jg
push
nop
xchg
fldenv
arpl
and
in
mov
lahf
data16
add
push
adc
jno
addb
inc
add
mov
pop
pop
cmp
call
mov
test
xor
lahf
mov
pop
mov
movl
je
mov
cmc
mov
add
mov
jg
dec
mov
imul
test
addl
rcr
cmpsb
pop
or
movsl
lahf
adc
sbb
ss
and
test
mov
ret
add
arpl
push
pop
call
inc
add
leave
mov
jmp
test
scas
mov
add
lahf
pushl
int3
out
aad
enter
mov
bound
jmp
xlat
testb
clc
ja
addl
outsl
ds
add
cmp
daa
xor
addb
loope
lea
out
sub
sub
pop
cmp
loopne
sbb
cmp
add
pop
ret
or
jg
pop
or
insl
lcall
mov
push
mov
mov
add
mov
dec
jno
xor
or
inc
add
loope
lds
movb
add
test
xlat
call
in
mov
xor
add
out
js
jno
jp
jbe
sub
pop
mov
shrl
push
add
lret
daa
jne
sar
ficomps
push
add
cmp
mov
sbb
mov
mov
dec
add
fidivl
xchg
adc
mov
add
push
lds
loope
ret
add
sub
pop
mov
or
mov
add
xor
pop
add
xchg
inc
add
jp
mov
sub
hlt
mov
push
pop
rol
add
jecxz
fsubs
xor
xchg
sbb
mov
ljmp
mov
and
repz
add
add
movb
sub
roll
pop
inc
add
lea
into
pop
xchg
dec
add
sub
and
push
pop
ljmp
jno
add
shlb
jl
fs
add
sbb
sub
scas
out
repnz
add
mov
les
ljmp
movsb
and
dec
lcall
aam
add
mov
add
mov
adc
pusha
add
addl
pop
mov
add
add
std
rolb
cld
repz
xor
sbb
push
add
stos
loopne
addl
in
in
popf
mov
sbb
mov
inc
add
jl
mov
jbe
cltd
popa
add
ljmp
movsl
mov
add
add
test
out
inc
add
in
scas
jmp
mov
icebp
xchg
add
mov
jle
cmp
mov
popa
add
cwtl
mov
cli
into
in
add
dec
cmp
aad
xor
mov
jge
movb
cmpsb
mov
stc
lcall
xchg
inc
add
test
test
add
mov
out
sub
add
bound
cs
push
add
pop
add
gs
test
mov
add
roll
push
xor
add
call
imul
ret
add
add
mov
addb
sbb
xor
add
push
hlt
fnstsw
pop
idivb
insl
mov
add
inc
add
addb
je
add
cwtl
lret
mov
lock
xlat
stos
mov
sbb
mov
loope
push
rorl
outsb
and
aas
repnz
lods
insl
rcr
sti
inc
add
add
add
mov
inc
add
mov
dec
repz
push
inc
add
bound
out
movb
add
add
stc
movb
add
add
push
xor
push
xchg
loope
push
dec
test
push
push
std
arpl
inc
add
add
jne
mov
adc
cmpsl
fisttps
adc
add
sbb
frstor
ljmp
xchg
fisttpll
outsb
cmpsb
ja
mov
adc
add
xchg
pop
les
popf
sbb
je
adc
aaa
jge
dec
jmp
xchg
xchg
addl
imul
or
pop
test
in
xor
loopne
push
out
pusha
add
sbb
sub
xor
fstps
aad
jl
mov
add
add
rolb
loope
add
push
in
add
jno
and
sub
cli
repz
add
jo
push
and
sub
roll
iret
enter
movsl
pop
test
add
mov
xor
jo
adc
stos
jg
dec
outsb
bound
nop
iret
loope
mov
in
sti
sbb
pop
push
movsl
lods
cmp
push
scas
adc
cmp
add
push
lret
nop
xor
leave
clc
lods
fcomps
fs
add
je
test
mov
addl
mov
pop
scas
mov
enter
xor
call
arpl
mov
mov
hlt
addb
xchg
inc
add
je
and
jp
in
mov
adc
aad
mov
dec
repnz
loopne
bound
cmp
add
push
jp
das
ljmp
test
in
enter
fidivrs
addb
fildll
add
or
dec
push
pusha
add
aas
sub
in
imul
xor
add
stos
out
xor
in
out
add
imull
mov
jge
test
outsb
jns
add
outsb
pop
lds
mov
fdivl
cmp
add
xchg
divl
push
adc
add
add
ficompl
add
jp
psubsb
inc
add
addb
add
pop
daa
inc
add
mov
sbb
in
jbe
and
mov
insb
addb
dec
or
adc
pushf
adc
add
lahf
leave
push
fstpt
pop
add
lods
hlt
clc
outsb
lahf
pop
xchg
movl
dec
cmpsl
bound
add
push
push
pop
mov
stos
daa
arpl
jns
jecxz
out
mov
mov
add
fmul
ret
add
pop
mov
enter
mov
add
fwait
jmp
in
in
inc
add
add
addl
or
in
sbb
add
mov
arpl
scas
push
dec
movb
pop
add
imul
addb
lahf
cmp
out
jle
js
jmp
rolb
add
sub
xlat
mov
addl
nop
and
or
pop
xchg
addl
xchg
addl
and
adc
and
stos
js
leave
push
push
mov
add
push
xor
les
in
repz
mov
js
movhps
add
jb
mov
xchg
adc
fwait
pop
add
dec
fwait
pop
xchg
rorl
roll
aad
and
ret
mov
add
loop
jne
push
mov
add
and
inc
add
mov
insb
xchg
cmpsb
jbe
cmp
and
ljmp
jne
add
scas
repz
add
cli
arpl
sbb
js
cltd
jp
inc
add
add
pop
fidivs
push
mov
in
jno
xor
add
mov
add
add
divb
addl
cmc
scas
repz
mov
add
inc
add
pop
jecxz
add
push
fisubrl
add
push
jecxz
hlt
testb
add
outsl
add
sbb
roll
xchg
inc
add
test
out
je
mov
or
add
lock
jne
add
pop
pop
mov
outsl
addl
inc
add
outsl
lds
mov
shl
lock
mov
mov
add
add
out
ficomps
xor
xchg
outsb
push
cwtl
xor
repz
mov
sbb
add
loop
add
mov
push
xchg
inc
add
loopne
scas
push
add
dec
adc
loope
inc
add
mov
insb
push
inc
add
fldl
add
leave
dec
sub
xor
lock
inc
add
shlb
jecxz
je
add
add
cmp
movsl
das
lods
mov
cmpsb
clc
or
and
dec
fadd
add
add
popf
fs
addl
jbe
jmp
in
add
add
push
adc
nop
pop
pop
testl
lret
sbb
xor
mov
lock
add
int3
cmp
push
add
out
cmp
data16
pushf
xchg
adc
jns
jg
outsl
in
mov
cli
push
pop
stos
out
add
insb
lcall
imul
xor
lcall
pushf
mov
aaa
lock
inc
add
dec
lods
nop
lahf
inc
add
jne
aaa
mov
fdivs
add
dec
mov
cmc
xlat
mov
cmp
mov
repz
es
jecxz
jle
add
fnstcw
fstpl
add
cmp
test
leave
hlt
mov
add
add
cmp
and
xchg
sti
aas
jbe
and
ficoms
xchg
setae
xor
aaa
cmp
in
mov
inc
add
out
add
rolb
sbb
adc
add
mov
aam
mov
call
add
add
adc
adc
and
jno
enter
push
out
adc
add
sbb
or
push
add
adc
ret
cli
addb
xor
fnstcw
int3
and
hlt
inc
add
mov
lock
push
mov
insl
repnz
xor
es
jle
es
push
xchg
leave
mov
lods
sbb
sub
cwtl
mov
push
pop
xchg
and
add
and
add
add
fyl2xp1
movb
xor
jp
push
test
mov
in
add
loopne
sbb
dec
test
movb
loop
mov
inc
add
iret
negl
add
add
out
jmp
jo
inc
add
ret
add
add
adc
add
gs
hlt
std
mov
mov
sub
ss
pop
sbb
mov
push
push
cwtl
and
das
add
inc
add
jb
les
pop
jge
shlb
addb
or
fdivp
xor
add
xor
roll
mov
pop
idivl
fisttpll
jl
add
add
add
test
lahf
loop
add
xor
add
mov
add
add
loopne
dec
mov
inc
add
cmpsl
gs
add
movb
and
adc
addb
sbb
ds
add
insl
pop
insl
push
add
push
dec
js
xchg
pop
rolb
cmpsb
cmpsb
iret
hlt
mov
lcall
jmp
imul
inc
add
in
xchg
shll
add
push
dec
movsl
and
or
add
push
fadds
mov
adc
mov
les
inc
add
cmp
push
cli
mov
or
lods
stos
dec
xor
cmc
pop
incl
mov
fistl
inc
add
test
push
or
jl
loop
mov
xor
pop
cmp
pusha
add
xchg
fcompl
jo
add
fwait
rclb
sub
cmc
dec
and
add
push
add
add
pop
cmpsl
sbb
dec
xlat
xor
out
enter
add
pop
push
xchg
push
movb
pop
xor
fsub
bound
dec
stc
add
dec
sarb
cmc
jp
mov
dec
xor
lahf
xchg
std
bound
out
movb
js
addl
call
xor
leave
clc
call
imul
or
lret
jo
test
aad
and
stos
inc
add
pop
aaa
inc
add
dec
mov
cmpsl
add
loopne
add
test
stos
mov
add
cltd
mov
jg
add
add
addb
dec
addl
ljmp
push
cmp
int3
ret
add
stos
inc
add
dec
movsl
add
mov
lods
pushf
push
add
jns
inc
add
push
nop
push
lods
addl
add
mov
nop
mov
mov
adc
mov
es
nop
dec
lds
add
pop
or
xchg
mov
pop
pop
dec
xor
sub
movsb
mov
loopne
repz
add
aaa
inc
add
lods
mov
mov
jle
mov
mov
add
xor
push
addb
add
inc
add
out
inc
add
add
jge
addl
jae
pop
std
ret
add
jnp
out
addb
add
fimull
pop
mov
fiadds
lea
add
call
jae
sbb
hlt
and
stos
xor
adc
push
testl
in
and
in
lcall
idivl
bnd
xchg
lret
xchg
and
add
aam
rolb
add
rolb
xchg
push
imul
mov
rolb
sahf
push
and
jmp
dec
clc
lcall
aad
pxor
add
roll
leave
and
pop
pop
inc
add
xchg
ljmp
xchg
add
hlt
clc
or
sub
addl
push
mov
add
jb
xor
xlat
imul
mov
inc
add
jns
movsb
fs
pop
pop
or
loope
add
jle
cmp
jne
addl
mov
push
adc
add
mov
jmp
dec
lock
repnz
pop
lds
rcl
addl
mov
mov
pop
jns
movb
or
clc
bound
inc
add
test
or
xchg
inc
add
xchg
lds
outsb
daa
jmp
or
sub
stc
xor
sub
nop
clc
outsb
mov
addl
add
xchg
cmovg
ficompl
mov
inc
add
mov
mov
mov
add
fcomps
jge
pusha
add
add
bound
add
adc
inc
add
cmpsb
inc
add
and
rolb
in
xchg
push
jne
pop
add
ja
cld
fadds
or
dec
mov
mov
ds
fldcw
ficoms
int3
pop
add
push
aam
div
loop
pop
leave
sbb
imull
jae
jb
mov
jb
pop
fmull
aad
push
inc
add
xchg
add
fistl
jnp
or
jecxz
push
mov
je
in
mov
in
mov
sub
add
xchg
stos
out
mov
sbb
es
leave
pushf
or
loope
shlb
adc
add
data16
dec
mov
add
xchg
mov
pop
adc
dec
and
gs
repz
scas
xor
add
mov
jl
dec
iret
in
rolb
mov
out
mov
repz
pop
stc
cs
add
cli
pop
sub
push
mov
ljmp
aaa
pop
mov
xor
xor
movsl
pop
add
dec
out
lret
fcoml
add
jbe
rcrb
lds
sbb
add
jns
fbstp
sbb
cwtl
ss
aas
popa
add
cmp
add
jbe
int
scas
add
push
add
add
sbb
cltd
inc
add
mov
out
add
sbb
lods
pop
sahf
xor
xlat
cli
or
add
dec
inc
add
add
xchg
cli
xlat
insl
addr16
and
nop
lods
inc
add
add
xor
stos
jns
rolb
lea
add
ljmp
push
and
adc
sbb
addl
cs
add
push
idivb
in
scas
mov
fimuls
test
mov
decb
or
or
add
mov
push
xchg
mov
add
pop
pushf
sbb
jbe
sub
cmpsl
inc
add
push
add
rolb
push
push
mov
fdivp
lahf
lret
pop
lcall
and
jle
add
addl
fs
loope
push
or
mov
sub
aas
inc
add
bswap
pop
ret
push
lret
sub
test
add
addl
sbb
push
lds
or
add
imul
ret
add
inc
add
jmp
add
mov
add
pop
pop
add
sbb
out
mov
repnz
cmp
xchg
jo
add
rorb
int3
mov
jg
xor
jne
roll
add
add
int
add
jnp
in
pop
pop
cmp
out
inc
add
add
inc
add
fdivs
mov
push
aam
popf
inc
add
mov
loope
push
add
roll
cmpsb
jg
addl
fwait
or
and
inc
add
cmp
mov
mov
jecxz
inc
add
shll
add
scas
sbb
dec
test
fcompl
fnstsw
push
mov
pop
call
lods
mov
and
jae
ja
jl
imul
add
mov
cmp
gs
addb
ffree
add
mov
iret
add
add
sub
test
push
pop
inc
add
add
sbb
add
insb
lock
inc
add
and
and
mov
pop
jge
outsb
cmp
add
mov
add
dec
in
dec
addl
rolb
add
xchg
pop
int
mov
add
and
push
out
aas
rcrb
nop
mov
int3
fsubr
stos
movsb
mov
das
cltd
cmp
sub
sbb
sub
popa
add
cld
push
addl
fadds
add
mov
int
add
jnp
pop
mov
add
pop
shlb
xchg
lods
addb
add
shr
out
scas
cld
dec
xor
into
push
xor
aaa
lcall
or
and
mov
dec
or
jmp
addb
xor
add
pop
push
sbb
loope
in
lea
xor
add
add
test
push
aad
imul
rolb
xchg
sbb
jl
sti
xor
dec
mov
mov
insb
scas
into
sbb
bnd
inc
add
sub
add
jp
sbb
inc
add
roll
add
jns
add
sbb
add
fldt
mov
mov
xchg
add
add
or
sbb
add
add
sti
ljmp
xor
sbb
jns
add
add
loop
ljmp
add
icebp
stos
inc
add
movsb
out
add
inc
add
test
decb
xor
push
add
movsb
movl
pop
stos
adc
xchg
push
mov
jnp
push
mov
mov
sbb
mov
lahf
pop
sub
jnp
aaa
test
push
sbb
stos
mov
jp
pmullw
xor
arpl
pop
fstl
aam
mov
or
out
push
cmp
lcall
add
repz
fcoml
jne
jg
and
and
in
imul
cmpsb
outsl
loop
arpl
and
into
inc
add
add
fsub
jp
dec
ja
jl
fadds
add
mov
mov
ret
out
mov
cmp
or
lret
rol
add
or
and
out
pop
adc
cmp
pusha
add
fsubrl
cmp
daa
popf
adc
popa
add
add
arpl
add
js
lods
jo
std
fists
cmp
stos
out
in
mov
jns
add
push
mov
push
pusha
add
pop
js
insw
or
inc
add
clc
fucom
jmp
jecxz
add
add
cmp
leave
dec
adc
jbe
or
and
pop
pop
insb
or
cltd
dec
insb
loop
pop
adc
out
xchg
push
add
fwait
mov
scas
dec
ja
mov
add
push
and
mov
lret
ds
pop
imul
sub
lds
pop
mov
pop
or
pop
mov
push
cmp
and
mov
inc
add
add
fldl
addb
mov
jp
arpl
sub
mov
daa
sbb
es
cmp
add
stc
adc
mov
add
or
jno
add
or
incb
add
mov
add
push
and
adc
jns
sbb
lcall
lock
mov
xchg
fimuls
and
xor
add
stos
mov
loope
cld
adc
repnz
push
arpl
setns
jmp
fsubrl
das
movsb
out
movl
add
add
lods
clts
add
repz
hlt
xchg
pop
or
xchg
shl
pop
jmp
add
out
inc
add
test
dec
add
call
dec
enter
cmp
sti
loopne
xchg
jae
mov
das
push
sahf
addl
xor
add
in
add
cmp
xor
cmp
jge
or
es
bound
add
jp
stc
push
loope
cli
and
add
and
push
push
mov
dec
xor
out
jae
add
out
popf
mov
sbb
test
in
arpl
out
add
es
add
mov
pop
mov
push
lea
fsub
outsl
pop
jge
ss
in
lret
cmc
test
cmpsl
insl
sbb
cmpsl
int3
mov
cwtl
rolb
lds
inc
add
cmc
or
mov
out
add
sub
in
int
and
fldcw
scas
sbb
mov
test
mov
add
cs
xor
fdiv
mov
arpl
jmp
in
bound
cltd
ror
cmp
add
dec
xlat
inc
add
enter
add
pop
cwtl
mov
in
adc
enter
stos
mov
dec
movb
dec
movl
add
add
clc
in
push
jmp
add
xor
scas
movl
fadds
rolb
repz
out
or
xchg
push
xor
into
addl
mov
aaa
pop
in
xor
lahf
dec
lret
ds
sbb
out
xlat
jmp
in
es
loop
dec
rolb
lods
dec
add
inc
add
add
aaa
lods
cmp
mov
movsb
mov
push
sti
jp
bound
ret
stc
fidivrs
jmp
jle
add
mov
scas
push
addb
add
stos
cmp
sarl
or
mov
push
movsb
loop
mov
pop
add
jl
adc
xchg
repz
inc
add
jae
rcrb
or
imul
sub
or
add
add
gs
add
and
and
repz
mov
add
insb
or
sbb
aam
les
pop
add
xchg
cld
jecxz
mov
xchg
sbb
lods
xchg
or
add
dec
addl
jge
xor
cli
push
xor
fisttpl
mov
dec
mov
xchg
pop
mov
add
pop
dec
jne
mov
stc
bound
jo
sub
mov
lret
add
insl
out
je
mov
insl
dec
imul
add
sub
jl
sub
not
adc
add
pop
push
sbb
or
aaa
jns
stc
jnp
add
pop
sbb
jbe
xchg
xlat
aas
inc
add
push
add
dec
loop
mov
pop
lret
lahf
fiadds
jge
test
mov
cmc
mov
mov
int
movsl
repnz
in
pop
push
out
pusha
add
mov
fstl
lret
addb
cmp
add
xchg
cli
pop
push
mov
add
fsubp
aas
sti
inc
add
bound
cmp
stos
nop
jecxz
mov
addl
adc
cmp
ja
sbb
outsb
mov
push
jecxz
cld
xchg
es
adc
add
add
xchg
inc
add
xor
or
movb
push
push
jl
add
push
and
bound
lret
les
je
aad
lret
sahf
mov
and
and
movb
jae
mov
in
incb
popf
hlt
mov
daa
cmc
sti
lret
add
dec
out
push
xor
out
fcompl
aas
scas
ret
adc
add
pop
iret
xor
js
int
add
mov
jp
stos
mov
inc
add
inc
add
ret
adc
out
sbb
xor
jmp
mov
push
lock
aas
add
dec
add
inc
add
push
mov
jbe
loop
add
xchg
sub
fimull
aas
sub
add
rolb
mov
rol
add
decl
cld
outsb
int
and
cmp
add
movsl
cmc
insb
xor
pop
cmpsl
push
icebp
jmp
add
mov
inc
add
xchg
push
in
ljmp
add
lret
std
adc
mov
xor
pushf
cmp
add
and
scas
scas
mov
adc
cmp
mov
int
add
inc
add
mov
cmp
loope
mov
or
shl
adc
dec
jp
test
out
pop
mov
movb
aas
jg
push
call
xor
jl
add
mov
add
jbe
pop
or
mov
push
das
loope
add
mov
push
cmp
cmp
sbb
test
iret
push
jne
insl
stos
scas
mov
ret
and
sbb
rolb
inc
add
scas
stos
adc
pusha
add
sti
loope
rorb
fs
sub
data16
testb
hlt
or
xor
into
mov
xor
nop
pop
and
imul
scas
jb
clc
cmpsb
dec
mov
add
mov
cmpsb
sarb
add
push
add
bound
aad
mov
add
sub
into
push
mov
out
shlb
ret
add
jb
add
add
and
adc
gs
pop
xchg
movsb
data16
arpl
icebp
mov
mov
shl
mov
testl
or
add
cmc
fmull
fisubrl
xor
add
icebp
aam
loope
aad
out
fwait
pop
and
inc
add
add
add
pop
jecxz
outsb
cmp
pop
cwtl
jp
add
das
loopne
popf
fwait
lods
cmpsl
sbb
jns
je
out
inc
add
pop
addb
loop,pt
add
lods
movsb
adc
sub
add
push
pop
xchg
jmp
or
ja
push
pop
push
in
mov
xlat
sbb
jne
mov
dec
sub
in
mov
add
movsl
dec
fnstenv
stos
push
xor
jnp
xchg
shrl
mov
xlat
ret
add
addb
rol
add
jo
insl
cmp
add
rcll
in
push
in
pop
mov
add
les
test
arpl
hlt
mov
call
mov
rol
add
icebp
xchg
loope
jb,pn
mov
sahf
je
add
je
mov
sub
push
popl
add
push
leave
lret
mov
or
fcomps
pop
cmp
lds
dec
test
lock
test
or
lahf
lea
jle
xor
push
outsl
addr16
add
pop
push
jmp
cs
dec
addr16
fcomip
mov
and
or
fwait
sbb
ljmp
cwtl
xchg
xor
decb
mov
jecxz
addl
std
cld
cmp
mov
nop
jecxz
fistl
out
mov
pop
in
lcall
add
in
fwait
call
jae
add
mov
outsl
js
add
cmp
int3
jecxz
add
pop
pop
mov
xchg
inc
add
jecxz
hlt
dec
jmp
addl
add
sub
lea
or
mov
pop
jne
add
jns
cmp
insb
sub
inc
add
mov
push
xchg
adc
les
fldt
pop
ja
sub
add
aas
insb
pop
icebp
push
lock
add
leave
idiv
sbb
xor
roll
addb
add
bound
xchg
mov
add
repnz
or
inc
add
inc
add
pop
in
jg
xor
add
test
frstor
js
inc
add
xchg
mov
stc
jle
dec
dec
addl
fimuls
add
test
outsl
lds
xor
dec
mov
xchg
call
out
pop
add
inc
add
add
xor
pop
pushfw
mov
sbb
pop
fsubrl
xchg
jb
sub
fs
cmp
lods
call
stos
adc
sarb
shrb
fcoml
add
cmpsb
push
add
mov
mov
cltd
lea
dec
fiadds
inc
add
mov
xor
add
stos
xchg
and
xor
xlat
push
mov
add
lds
cmp
add
push
lds
sub
fwait
rorl
jg
loope
pop
and
jb
pusha
add
imulb
push
pop
inc
add
cltd
xchg
xor
aam
sub
xor
in
in
rolb
jecxz
xchg
mov
ljmp
jle
cmc
mov
xchg
sbb
lock
add
add
add
jbe
out
pop
jmp
and
xor
cmp
fwait
dec
dec
jg
loop
inc
add
mov
outsb
rsm
inc
add
cli
xor
mov
int
inc
add
fcmovb
add
loopne
sbb
cmpsb
mov
or
sti
fwait
jmp
imul
push
imul
cmp
inc
add
hlt
xor
sahf
aad
insl
lock
sbb
push
dec
ret
add
xchg
mov
xor
ret
addl
shlb
push
aas
call
add
add
and
sbb
das
data16
sbb
and
mov
mov
ss
adc
add
outsl
bound
hlt
xchg
mov
filds
sti
insl
div
stos
mov
mov
outsb
pop
cld
inc
add
mov
xchg
pop
movsl
movsb
call
add
dec
dec
mov
sbb
out
fildl
or
mov
add
insl
xor
ret
add
cwtl
xor
addb
out
add
fwait
shlb
mov
mov
add
lock
add
insb
test
lods
pop
fistpll
add
mul
mov
inc
add
add
and
sub
ret
add
mov
addb
mov
icebp
mov
add
cwtl
xor
push
sub
repnz
idivl
gs
ss
lret
addl
popf
or
add
mov
lea
add
sti
addl
add
mov
cmp
add
std
outsl
jae
push
iret
cmp
inc
add
inc
add
and
ss
stos
pop
loopne
fmuls
lea
push
into
movl
add
and
bound
fstps
je
dec
push
fstps
add
out
pop
ljmp
mov
movb
test
mov
pop
push
xchg
les
jnp
mov
and
push
stos
pop
dec
jl
shlb
add
sahf
std
xchg
cmpsl
insl
das
mov
jecxz
add
pushf
in
int
add
add
mov
adc
dec
sub
mov
iret
mov
xchg
jne
mov
dec
lret
xrelease
adc
cmp
dec
in
adc
add
add
jmp
pop
fistpl
mov
add
nop
mov
and
into
mov
or
adc
add
jns
or
cmpsb
pop
ja
xor
xchg
push
push
add
push
add
lods
iret
rcrl
movsb
icebp
cmp
add
adc
add
and
mov
bound
loope
mov
jno
add
stos
mov
mov
pxor
addl
add
pop
out
dec
aad
mov
add
mov
mov
jns
push
imulb
add
jecxz
outsb
sbb
add
dec
addb
inc
add
push
dec
mov
pop
pushf
inc
add
jle
pop
push
sub
insb
loopne
inc
add
pushw
mov
aaa
sbb
lds
sahf
cmp
xchg
sbb
shll
or
xor
je
mov
add
push
ret
add
add
mov
xchg
or
lds
push
inc
add
add
pop
and
cli
sbb
gs
xchg
cmpsl
cmp
add
pop
fidivrs
jp
add
mov
adc
cld
fistl
pop
out
es
xor
or
and
dec
pushf
xor
pop
push
dec
push
out
or
gs
mov
clc
movl
addr16
jae
xor
push
add
jge
outsl
cmpsb
rcrl
inc
add
mov
and
icebp
ret
add
leave
les
push
dec
dec
mov
sbb
mov
dec
push
shll
cmp
enter
pop
dec
pop
lods
rcrl
push
and
and
in
jmp
aad
mov
push
push
sti
inc
add
add
into
cmp
inc
add
xor
inc
add
add
push
adc
loope
mov
repnz
adc
push
pop
push
mov
jb
cmp
mov
das
emms
rorl
aaa
out
and
inc
add
add
and
cbtw
insb
sahf
enter
addl
and
xchg
scas
outsl
loopne
xlat
or
add
mov
add
sbb
xchg
aas
in
aaa
add
ret
add
or
es
adc
mov
add
inc
add
fisubrl
out
gs
sti
pop
xchg
sub
xchg
push
fbstp
test
bound
pop
imul
xor
add
roll
loopne
cmpsb
jb
addl
add
add
stos
sub
stos
fcoml
cmp
inc
add
iret
nop
sub
sbb
or
or
jnp
aad
add
add
loop
xor
aad
cmp
movsl
in
lret
cmp
push
movb
inc
add
xchg
xchg
mov
add
pop
mov
jge
scas
bound
mov
roll
add
mov
add
sbb
or
imul
cld
outsl
pusha
add
push
sarl
inc
add
pusha
add
mov
push
lahf
cmpsl
lds
mov
movsb
inc
add
dec
xor
fidivs
add
popf
rorl
stc
int
lcall
test
mov
mov
mov
mov
add
sti
rcrl
adc
clc
iret
push
push
jns
mov
repz
add
repz
add
mov
sbb
shr
xchg
xchg
jecxz
pop
lahf
clc
add
outsl
add
push
adc
imul
push
adc
mov
xor
leave
mov
jmp
mov
push
stc
lret
mov
aas
call
pop
add
push
dec
sahf
sahf
mov
shl
xlat
fisubrl
inc
add
imul
add
rcll
xor
mov
mov
aad
dec
mov
inc
add
lods
or
add
add
filds
add
mov
repnz
add
mov
sbb
xchg
idivl
mov
push
jmp
icebp
fwait
stos
push
xchg
adc
arpl
lock
add
push
fdivrs
insb
push
sub
out
ljmp
sti
iret
into
add
aas
cmp
ja
dec
xchg
out
ds
sbb
stos
outsl
add
cmpsb
loope
add
arpl
dec
ret
add
stos
insb
ss
push
sbb
ljmp
repnz
cmp
push
addl
insl
sbb
inc
add
xchg
sub
mov
mov
mov
push
add
mov
pop
jo
test
mov
mov
xchg
jmp
push
push
outsb
lods
sar
addl
xchg
mov
mov
rcll
fstpt
pop
fildl
insl
mov
add
dec
popa
add
add
ljmp
sub
rolb
dec
aam
add
pop
clc
xchg
xor
in
cmc
push
jmp
push
clc
in
add
hlt
lahf
mov
lods
div
add
mov
popa
add
lods
xchg
sbb
add
adc
scas
pop
add
mov
sub
add
xchg
sbb
mov
cmc
roll
cld
push
or
push
xchg
inc
add
cmp
arpl
pop
scas
jge
add
sti
rolb
cmp
push
dec
or
repz
into
leave
jb
sbb
in
and
pop
pushf
dec
imul
sbb
ja
add
add
mov
inc
add
bound
adc
cmp
movb
in
test
scas
lods
into
js
out
mov
add
test
sub
xor
aam
add
ss
and
push
bound
jno
outsb
xor
mov
dec
add
addl
pop
sbb
xor
daa
sub
add
jae
add
xchg
mov
int
add
add
pop
popl
cmpsl
mov
mov
add
test
test
inc
add
add
cli
dec
cmpsb
outsl
mov
or
imulb
les
fwait
cmp
add
icebp
jmp
gs
daa
pmovmskb
outsb
fistl
push
mov
bswap
sub
add
push
hlt
aad
lahf
xchg
cmpsl
cmp
mov
bound
cmp
adc
add
enter
into
call
mov
inc
add
aad
frstor
add
inc
add
add
mov
sbb
pusha
add
adc
lret
stos
pusha
add
add
inc
add
jge
fidivs
push
lea
add
push
loop
xor
jmp
jnp
add
xchg
leave
or
add
pop
addb
add
pop
mov
bound
pop
add
lret
jb
add
movsb
push
das
inc
add
add
add
inc
add
roll
xor
inc
add
add
setae
stos
pop
inc
add
movb
aaa
js
pusha
add
jo
lahf
loopne
mov
dec
xchg
shlb
mov
push
aam
add
or
push
add
sbb
pop
mov
pop
mov
shll
stos
mov
rorl
bound
and
push
cmp
add
push
mov
and
shrb
lret
pop
push
les
mov
xchg
mov
out
inc
add
jae
sbb
stc
es
add
movb
sub
add
push
mov
aaa
fstpt
dec
cmpsl
cmpsb
push
movb
movb
outsb
inc
add
mov
jb
lret
add
or
dec
sbb
in
pop
add
add
cmpsb
pusha
add
mov
push
popa
add
cwtl
loope
add
push
pop
mov
xor
push
inc
add
outsl
adc
out
movsl
mov
cltd
ret
add
aaa
popa
add
mov
mov
mov
jns
cmc
sbb
cltd
in
das
push
jae
dec
jle
push
les
jecxz
or
addb
mov
jge
xor
loopne
add
test
addb
add
xchg
inc
add
xor
or
add
ror
ret
add
or
adc
dec
jbe
popf
in
xchg
jg
ljmp
add
stos
jecxz
nop
sub
mov
xor
repnz
test
add
adc
scas
pop
stos
icebp
inc
add
add
mov
or
add
mov
insb
cltd
add
inc
add
insb
and
add
add
push
add
jge
add
inc
add
sub
mov
cld
xchg
aaa
adc
cwtl
into
cmp
sahf
mov
pop
dec
pop
adc
push
pop
add
mov
out
enter
add
mov
add
test
mov
cs
and
ret
cli
mov
sarl
test
repz
out
push
cs
sub
add
mov
add
imul
pop
add
push
xchg
mov
stos
push
add
xor
pop
roll
les
test
xlat
xchg
adc
pop
push
and
and
mov
sar
sbb
pop
fsubl
add
mov
add
cmp
mov
add
jne
dec
cmp
xor
add
dec
std
lock
xchg
jae
add
push
addl
lds
push
dec
mov
add
mov
add
popf
add
aam
add
cmp
xor
ret
add
add
das
popa
add
cmp
and
es
sti
sti
rolb
add
add
jmp
das
shlb
and
push
add
ja
pop
lods
push
shrl
jg
adc
idiv
inc
add
idiv
and
mov
sbb
outsl
mov
xchg
cwtl
jno
clc
addb
push
cmc
sub
sahf
nop
xchg
in
mov
fcomps
xchg
pop
sbb
sub
add
lcall
add
addr16
cmpsb
fidivs
pop
add
les
cmp
and
add
mov
pop
add
movl
jp
jb
or
sbb
pop
gs
icebp
loope
xor
cmp
xor
stc
shll
xor
mov
add
add
mov
add
add
mov
add
popa
add
test
jp
mov
or
cs
outsl
xor
xchg
or
ret
or
add
jp
push
xchg
in
add
add
lret
aam
divl
stos
adc
add
sbb
int3
fisubrl
add
shrl
sub
sbb
add
add
add
push
pop
add
xchg
jecxz
outsl
mov
jns
dec
push
stos
testl
add
pop
pop
pop
jae
pop
addl
sbb
lds
test
test
push
aaa
insl
ss
mov
mov
add
add
push
push
mov
cmc
sub
icebp
loope
add
mov
movl
outsb
pop
mov
add
add
sbb
xchg
bts
frstor
add
lret
int3
shll
sub
jle
pop
dec
leave
pushf
jmp
test
dec
pop
gs
add
push
pop
add
dec
mov
pushf
aad
loopne
add
call
jle
pushf
lahf
in
clc
sti
cmp
mov
xor
bnd
pop
loopne
loope
add
ret
add
sbb
int3
stc
mov
mov
rcl
push
test
push
jbe
test
cli
popf
lea
add
add
jp
mov
mov
bound
cld
pop
or
sub
or
adc
adc
rolb
add
add
inc
add
add
cld
sub
mov
fbld
add
fbld
mov
sbb
push
addr16
out
pop
mov
insb
mov
add
sahf
imul
stos
jb
add
add
jne
and
cmpsl
or
fisubrl
icebp
mov
mov
sub
out
mov
adc
sbb
imul
xchg
add
gs
mov
stos
fstl
xor
cmp
xchg
cmpsl
bound
jbe
fildl
addl
xchg
movsl
in
pop
xchg
and
bound
ret
mov
mov
jne
add
roll
jge
es
loopne
and
xor
dec
dec
out
jmp
jmp
adc
sahf
cs
movl
add
xchg
adc
ret
sbb
lret
or
fidivs
add
dec
cs
add
dec
lock
rolb
sub
stos
mov
in
icebp
add
loop
add
sub
add
push
or
sbb
dec
cs
test
and
push
jnp
roll
xchg
addb
cmpsb
and
xchg
fstpt
lcall
addr16
add
add
cld
cltd
push
push
push
and
testb
decb
add
dec
pop
dec
roll
push
inc
add
add
or
or
mov
or
mov
js
add
mov
xchg
push
loope
mov
xchg
or
add
push
dec
push
sub
ds
push
jg
rcl
out
cmp
addl
adc
add
movl
add
add
jb
pop
addl
cmpsl
xchg
movsb
loop
sbb
std
jbe
lods
scas
cld
and
lahf
dec
leave
inc
add
jle
cmp
lret
test
mov
test
add
adc
or
add
pop
popf
addl
add
leave
sbb
adc
outsl
mov
add
out
dec
ja
pop
push
test
rcrl
add
loop
cli
or
stos
mov
or
stc
and
cmp
sar
cmp
mov
jle
mov
cmc
xor
xor
div
rsqrtps
mov
mov
or
out
mov
jp
pop
dec
cmp
add
int3
or
hlt
repz
xor
sbb
pop
sub
pop
cmp
call
aad
pop
add
icebp
xchg
roll
and
xor
fdivs
jmp
jno
test
in
jmp
into
arpl
insb
inc
add
or
add
lds
je
or
xor
add
sahf
jne
das
ljmp
mov
cmp
movb
hlt
es
scas
idivl
in
pop
pop
call
sbb
aas
push
rolb
add
nop
jae
add
mov
xchg
fs
cmpsl
mov
loop
push
dec
outsl
rcrl
and
add
in
xor
xchg
test
pop
add
cmp
xor
xchg
xor
mov
test
rolb
cmpsl
or
xor
push
add
add
stos
mov
add
pop
pop
outsb
rcrl
or
inc
add
add
loope
mov
ljmp
mov
movb
lock
add
inc
add
sub
or
stos
add
in
and
jns
int
add
addb
arpl
pusha
add
xlat
pop
add
jl
gs
lea
push
push
adc
test
dec
mov
mov
faddp
add
mov
cltd
lock
popf
mov
add
xor
sub
stos
jg
add
add
cmp
addl
add
arpl
pop
loope
mov
mov
in
dec
test
nop
xor
mov
rolb
out
outsb
enter
add
dec
roll
aaa
mov
shll
add
add
addr16
mov
xor
add
add
mov
and
inc
add
insb
pop
add
push
xchg
test
adc
or
jns
push
add
xor
hlt
cmc
push
inc
add
push
mov
es
lret
mov
add
leave
fdivrs
jge
mov
mov
add
mov
jns
roll
add
add
push
fsubl
cmp
aaa
iret
inc
add
pop
or
out
inc
add
or
push
xor
add
inc
add
add
test
shrb
pop
test
sub
mov
xchg
fs
repnz
call
push
pop
into
mov
add
cmp
add
xchg
sub
add
roll
add
xchg
dec
std
addb
inc
add
add
ret
push
sbb
outsb
jno
addr16
add
inc
add
addb
add
lret
insl
and
rorb
arpl
movb
sub
or
ficomps
push
clc
cmp
inc
add
add
int3
int3
aaa
movl
adc
jl
add
test
shlb
mov
xchg
sbb
sub
pop
sbb
cld
mov
xlat
ret
add
jle
gs
push
mov
mov
add
pop
add
testb
ljmp
fsubrs
repnz
jb
fdivrs
mov
loop
mov
push
cmp
lret
fwait
rorb
add
add
add
xor
add
lret
leave
and
adc
mov
rolb
add
pushf
mov
das
shl
mov
cwtl
fisubl
add
add
add
mov
insl
fsubs
jnp
mul
dec
mov
dec
dec
lahf
jecxz
sbb
jne
sbb
movsl
mov
imul
jno
das
and
cmp
add
fcompl
add
dec
out
add
mov
call
fidivl
enter
es
and
xor
dec
xor
dec
movl
add
addl
jno
mov
imul
sahf
testb
cmp
sbb
xor
add
add
mov
out
add
adc
xchg
and
mov
pop
sti
lds
jle
sub
sarl
or
cmp
push
add
mov
je
add
stc
mov
mov
xchg
mov
add
test
cli
mov
outsb
dec
mov
mov
fwait
sbb
add
daa
pop
pop
lcall
negl
sbb
ljmp
inc
add
or
icebp
push
add
rolb
push
push
and
int3
sbb
add
push
add
cmc
movb
les
cmc
push
adc
test
mov
and
addl
popa
add
sub
inc
add
mov
sub
inc
add
sbb
test
outsl
jecxz
loop
push
into
pop
sub
int3
addr16
add
push
std
addr16
xchg
jg
and
mov
jb
jne
add
add
add
jne
out
add
leave
adc
adc
cld
inc
add
jno,pn
sbb
add
or
adc
in
idiv
xchg
arpl
lods
gs
iret
push
pushf
and
push
movb
adc
ss
outsb
mov
cmpsl
pop
add
rolb
jge
or
icebp
xor
aas
mov
sti
int3
mov
cld
repz
add
add
imul
push
movl
lret
xor
add
jecxz
sbb
in
nop
xchg
jno
stos
sarb
jo
int3
test
xor
dec
popa
add
out
addr16
pop
cmp
adc
and
bound
mov
inc
add
add
adc
mov
push
call
add
xor
insl
cmp
add
fadds
rolb
cmp
test
inc
add
mov
add
outsb
xchg
xor
sub
mov
int
add
pop
inc
add
shrb
lcall
jae
stc
mov
imul
insl
mov
cli
stos
movl
fbld
popf
pushf
loopne
sbb
scas
addl
push
loopne
mov
in
sub
and
pop
add
jo
jecxz
add
push
or
lea
lret
add
repnz
mov
cmpsb
mov
pop
inc
add
pop
ja
js
pushf
cmp
mov
add
mov
push
add
add
das
bound
mov
mov
add
les
or
add
pusha
add
cmpsl
or
push
imul
or
xor
ret
add
mov
sbb
roll
outsl
sbb
add
sahf
cmp
add
dec
xchg
push
mov
lret
sbb
cmp
movl
jbe
jo
dec
add
gs
add
rolb
cmp
repz
add
xor
push
fists
icebp
inc
add
or
inc
add
xor
xchg
jo
scas
and
pop
add
xor
aas
jns
xchg
aam
push
test
mov
lcall
and
dec
push
popf
popa
add
xchg
cmc
rol
add
je
add
pop
add
je
mov
mov
fs
addl
add
pop
mov
and
and
arpl
cmp
xlat
and
jb
shll
add
lcall
push
mov
xor
and
xchg
cmp
jb
jne
int
push
add
mov
into
or
sbb
fwait
in
cmp
add
mov
dec
push
nop
push
roll
inc
add
sbb
sub
mov
dec
nop
and
add
in
sub
sbb
cmp
mov
repnz
add
arpl
fninit
idivl
mov
or
xor
in
adc
nop
add
cmp
jp
mov
xlat
add
movsb
mov
jno
add
sub
pushf
pushf
pushf
fcmovb
add
movsb
push
adc
add
and
mov
js
enter
sub
push
xchg
pusha
add
test
mov
inc
add
or
jno
add
fwait
inc
add
jg
std
movsb
popa
add
out
loopne
add
ljmp
sbb
dec
stc
and
xor
jo
ret
pusha
add
fcoml
or
cmpsl
pop
mov
push
pop
mov
mov
sti
mov
jp
les
jns
inc
add
sub
loopne
ja
add
mov
sub
addb
mov
rcr
jge
lcall
mov
loopne
pop
jmp
jo
add
cmp
mov
add
addps
stos
leave
jo
arpl
inc
add
cltd
lahf
inc
add
loop
add
outsl
inc
add
add
and
mov
add
mov
cld
jne
add
test
sbb
ret
push
mov
inc
add
sbb
pusha
add
pusha
add
idiv
lahf
movsl
or
add
stc
add
pop
adc
in
insb
cmpsb
inc
add
inc
add
xchg
js
pop
mov
mov
pop
idiv
cmp
add
jp
jl
mov
stos
inc
add
rolb
add
adc
int
add
or
sub
mov
pop
mov
addb
mov
sti
in
xor
sbb
sti
ljmp
cltd
iret
sysexit
xchg
jo
add
mov
push
adc
dec
pop
xchg
enter
loop
add
aas
std
and
arpl
cmp
pop
icebp
pop
lcall
sahf
jno
arpl
nop
sti
xchg
mov
xchg
call
xchg
add
sbb
aas
dec
clc
lret
lods
mov
add
mov
add
jg
or
jae
repnz
movsl
xchg
cmpsl
and
popa
add
and
sub
pop
inc
add
push
xor
add
movsb
lahf
dec
mov
ljmp
or
add
faddp
add
add
add
pop
add
arpl
lods
inc
add
lea
sbb
leave
adc
mov
scas
in
adc
add
cmpsl
pop
and
pop
adc
add
rolb
addl
add
fldt
out
shl
shlb
push
push
add
pop
in
loope
pop
incb
mov
jbe
inc
add
rolb
addb
jno
inc
add
and
into
push
movw
fs
lds
and
inc
add
add
add
add
fildll
cltd
enter
push
enter
mov
jg
mov
dec
dec
dec
addl
jb
mov
jns
fcmovbe
sbb
out
in
cmp
add
outsb
mov
popf
adc
add
xchg
ljmp
stc
repnz
cmpsb
popa
add
outsb
mov
cmp
dec
jns
test
cli
roll
mov
rolb
add
add
and
or
cmp
or
cmp
xchg
movl
lock
or
arpl
daa
addl
inc
add
addb
jmp
inc
add
addb
add
add
adc
xor
add
add
mov
fistpl
add
add
and
cmpsb
xchg
sub
fildl
test
add
addl
insl
xchg
gs
cmpsb
cmc
add
add
xor
add
sti
push
cmpsl
out
add
pop
stos
dec
pop
fldl2t
jecxz
push
and
adc
mov
cmp
pop
ret
push
mov
addb
int3
data16
sbb
jle
add
mov
test
mov
ficoms
add
push
stos
std
or
mov
in
push
movsl
test
mov
sub
cmp
add
movl
and
add
cld
adc
add
jbe
addb
mov
add
fsubs
mov
or
add
sarb
mov
dec
jl
test
pop
roll
pop
mov
cmc
push
mov
xchg
inc
add
add
and
add
adc
pop
mov
lock
pusha
add
sub
xlat
gs
add
push
and
xchg
jge
mov
ljmp
add
stos
jns
popf
push
outsl
jne
add
pop
mov
sub
xchg
ja
add
je
and
xlat
ret
mov
jb
lahf
imul
cwtl
cli
stos
cld
mov
std
loope
add
fcoms
add
push
jne
mov
add
mov
xor
sub
cs
movsb
popa
add
add
call
mov
out
xor
dec
inc
add
push
adc
pop
sbb
jne
add
aaa
xor
mov
mov
push
push
xlat
mov
lods
loopne
outsb
push
sub
out
inc
add
add
aam
mov
ds
je
dec
jmp
add
xchg
mov
fistl
push
bound
movsl
fldt
and
addb
dec
mov
rolb
add
push
mov
inc
add
mov
test
mov
cmpsl
insb
loopne
imul
xlat
xchg
arpl
mov
or
xor
dec
popf
xchg
fisubs
mov
aas
fwait
xchg
add
cmp
pop
inc
add
outsb
mov
inc
add
add
rol
add
sub
sub
mov
addb
cmp
stc
push
mov
stc
sbb
push
adc
mov
js
jmp
addb
repnz
iret
popf
fdivs
cs
ja
mov
popf
test
fcmove
add
xchg
lds
movsb
sub
jbe
push
inc
add
stos
mov
addl
addb
or
addl
add
pop
dec
xlat
pop
mov
mov
xchg
mov
cli
aas
push
or
adc
test
mov
imul
dec
sbb
jl
jecxz
in
xchg
push
add
xor
adc
int3
jo
add
add
jmp
rcr
push
ja
test
dec
dec
inc
add
inc
add
repnz
add
add
or
pop
movsl
rcrl
addb
fs
outsl
inc
add
int
pop
test
add
add
sbb
sub
dec
rolb
mov
test
cltd
dec
push
sbb
add
lds
aad
out
dec
or
mov
popf
out
addl
ss
add
pusha
add
add
mov
mov
cmp
lods
repz
xor
std
push
add
xchg
dec
lods
mov
lods
xor
inc
add
sbb
add
lret
pushf
enter
sti
in
pop
xlat
addb
in
out
push
add
adc
mov
push
xor
sbb
add
imul
jmp
mov
pop
dec
mul
xchg
shll
push
out
add
push
jno
sbb
add
dec
and
fidivrs
sub
add
mov
cltd
aas
test
xchg
cmpsb
mov
mov
cwtl
in
add
pop
faddl
ds
mov
add
lret
inc
add
xchg
cmp
stos
js
and
imul
idivb
or
fisttpl
hlt
pushl
fcmove
mov
mov
movb
out
pop
scas
les
cwtl
rolb
add
pop
inc
add
call
cmp
sbb
xor
ds
test
jbe
or
add
mov
add
fcmovnb
add
jo
es
jg
lods
dec
cli
push
add
sub
outsb
outsb
xchg
pop
data16
lcall
inc
add
mov
and
loopne
adc
repz
push
aas
jns
leave
into
mov
lret
mov
add
push
push
addb
adc
xchg
mov
add
insb
or
inc
add
add
pop
iret
mov
add
add
mov
inc
add
insb
leave
fdivrl
xchg
add
and
add
outsl
dec
aam
or
jne
and
pop
xor
push
mov
jbe
je
mov
mov
add
push
dec
cmp
movb
loopne
sti
dec
dec
movl
fxam
fldcw
cmp
sub
add
rolb
movsl
int
fdivrl
push
jp
addb
adc
push
mov
in
lock
jmp
or
inc
add
testb
scas
add
ret
sub
leave
popf
cmpsb
stc
fisttpll
add
mov
sbb
or
scas
pop
sbb
or
add
inc
add
outsb
adc
nop
and
int3
fwait
jns
add
ss
fmuls
mov
sbb
mov
outsb
pusha
add
aam
pusha
add
fldcw
mov
sti
call
and
bound
dec
xchg
xchg
xchg
test
add
outsl
jmp
push
mov
sub
hlt
pop
jle
cmp
fs
adc
jl
xchg
cmp
jmp
cmp
push
dec
cmpsl
aam
xchg
xchg
into
mov
jbe
adc
xchg
pop
adc
icebp
insl
int3
bound
or
sbb
mov
add
fiadds
add
jb
pop
cltd
loopne
out
mov
add
add
js
movsl
mov
pop
pop
add
iret
jp
dec
sub
jle
push
pusha
add
dec
roll
aad
insb
idivl
pop
add
jno
les
out
fdivl
add
inc
add
lock
enter
and
push
popf
test
sub
xchg
lahf
addr16
lods
adc
push
sbb
mov
mov
add
int
dec
sbb
enter
test
fsts
add
iret
push
pop
add
addl
jne
or
or
xor
inc
add
mov
pop
or
lret
ljmp
fsubrl
stos
jle
add
mov
pop
add
stos
arpl
nop
and
sbb
nop
push
repz
mov
pop
pop
jo
addb
xchg
push
mov
int
jg
add
jbe
inc
add
mov
fs
dec
xor
test
add
jmp
stos
sti
xchg
cld
je
cmc
iret
cmp
lret
loopne
cli
test
popf
pusha
add
add
ret
add
into
jp
cmp
xor
jmp
push
ds
pop
mov
add
leave
dec
addl
pop
mov
ljmp
punpckldq
aas
mov
push
daa
xchg
call
pop
daa
inc
add
iret
mov
cmpsl
push
add
jnp
mov
add
mov
test
popf
notl
jns
add
add
cmpsl
lcall
jecxz
add
jo
add
add
pop
loope
jle
jnp
sub
mov
xchg
mov
or
mov
test
jp
scas
insl
push
add
mov
loopne
add
sbb
into
jp
xchg
bnd
push
mov
sub
fadd
add
xchg
ret
xor
xchg
call
add
mov
imul
cwtl
xor
sahf
pushf
push
mov
enter
mov
into
mov
pop
iret
lods
ss
lods
je
add
dec
lea
add
jg
in
mov
jmp
add
rcrl
add
hlt
mov
add
cmp
xlat
dec
loop
data16
jmp
mov
add
loop
addl
rcrb
sub
movb
fisubrs
xchg
out
pop
push
mov
add
scas
insb
mov
fisubrl
push
jo
jns
cmp
mov
aam
mov
jns
lods
sbb
sub
add
jnp
dec
sub
loop
sbb
mov
cmp
xchg
lahf
std
pop
rcr
push
movl
add
inc
add
sahf
filds
das
in
test
jmp
and
and
push
sub
add
addl
xchg
cmp
cmc
pop
cmp
inc
add
add
or
pop
adc
sarb
lods
or
pop
lds
cmp
add
loope
or
add
mov
mov
rol
add
loope
mov
loopne
mov
shll
not
dec
mov
mov
das
dec
cmp
pop
inc
add
addl
add
xlat
and
dec
pop
adc
add
push
push
mov
iret
mov
inc
add
in
dec
scas
repnz
inc
add
movsl
pop
and
outsl
into
xchg
mov
jbe
or
push
push
mov
dec
mov
fwait
testb
fwait
adc
fistl
incl
add
pop
add
inc
add
jmp
push
sti
xor
lret
and
divb
xor
xor
in
add
imul
movsb
add
jbe
pushf
ret
pop
testb
mov
push
loop
add
mov
jmp
leave
xor
lock
aas
loopne
push
ret
add
ja
add
cmp
add
sti
test
inc
add
pop
sub
les
xchg
in
aaa
pop
hlt
nop
outsl
js
add
mov
mov
add
add
lahf
pop
and
and
inc
add
adc
xor
mov
push
pop
add
ljmp
mov
and
adc
dec
pushf
rolb
adc
addb
fs
leave
es
or
jns
jl
cmp
push
pop
lcall
sbb
std
fildll
add
push
in
add
mov
sbb
mov
inc
add
imul
or
lcall
pop
add
and
sbb
add
loopne
dec
mov
sub
addl
jl
xchg
mov
dec
mov
pop
neg
nop
mov
insl
in
add
daa
xchg
jmp
jo
inc
add
add
das
mov
add
pushf
mov
mov
mov
push
in
test
inc
add
add
pushf
or
dec
mov
xlat
inc
add
dec
pop
mov
add
and
fs
add
adc
jnp
repz
jo
mov
jnp
lret
pop
daa
scas
xor
mov
add
mov
push
ret
push
lret
xchg
stos
add
addl
add
dec
mov
sti
jle
sti
push
and
in
out
add
or
dec
sbb
mov
xchg
sarb
push
sub
mov
xor
rolb
stc
addl
add
fs
adc
add
mov
add
sbb
mov
push
jl
movb
xor
scas
idivl
add
adc
insl
push
clc
outsb
sub
jb
mov
dec
stos
inc
add
ja
pop
add
push
lcall
sbb
dec
aam
test
push
add
add
cltd
add
mov
mov
jle
stos
fs
lods
pop
fsubrp
nop
push
adc
cwtl
xchg
notb
xor
sbb
popa
add
mov
roll
push
lods
sbb
jo
add
cmc
push
in
clc
fimull
dec
movsl
iret
and
mov
aam
insb
dec
jno
add
mov
mov
sub
frstor
push
repz
ficoml
loopne
call
arpl
pop
lods
push
jge
and
movsl
ficompl
addb
hlt
or
fwait
gs
jl
add
cs
add
add
xchg
sub
test
fidivl
clc
push
jo
sub
testb
and
in
cwtl
popa
add
stc
fs
fisubrl
xchg
push
int3
lcall
addr16
mov
mov
and
add
pop
mov
push
out
shrl
arpl
add
aaa
push
popf
in
lret
imul
add
les
mov
xor
push
sbb
add
add
dec
mov
movb
nop
jno
ret
add
mov
fistpl
jp
or
pop
xor
xchg
nop
mov
push
push
xchg
xchg
gs
add
mov
shrl
sbb
in
in
add
pop
mov
fyl2xp1
dec
je
int3
test
mov
add
cmpsl
popa
add
lret
pusha
add
and
adc
popa
add
mov
in
pusha
add
inc
add
add
roll
pushl
scas
adc
repz
dec
scas
pop
and
sub
dec
add
adc
jle
jecxz
ds
inc
add
fcoms
mov
pop
into
jg
daa
loope
sbb
pop
out
cmp
int
out
xlat
out
add
sub
push
fchs
and
sub
in
outsb
and
clc
xor
pop
or
lods
les
jecxz
sub
cmp
fdiv
mov
sti
inc
add
push
xor
iret
pop
fwait
hlt
cwtl
scas
iret
ficompl
bound
movsb
movl
mov
addb
cmc
ja
add
cmp
add
rolb
stos
imul
lods
sbb
mov
inc
add
add
pushf
testb
negb
lret
add
xchg
es
push
and
xchg
or
test
xlat
push
sti
dec
and
mov
xchg
pop
push
pop
add
and
ret
add
cmpsb
cwtl
sahf
mov
add
jp
lret
loop
and
addr16
pop
add
ljmp
icebp
and
dec
insl
imul
loop
add
jnp
add
mov
push
sti
push
sbb
stos
sub
jb
imul
push
mov
popa
add
adc
test
dec
outsb
xor
add
jp
xchg
pusha
add
leave
xchg
loop
sti
and
pop
sti
pushf
je
pop
add
daa
add
and
inc
add
js
cmp
cwtl
dec
pop
push
int
int
jno
hlt
jno
add
mov
jne
add
adc
pop
dec
movsb
repz
lret
mov
lcall
je
push
add
push
adc
lret
popf
xor
fidivl
add
add
inc
add
mov
movsb
inc
add
je
add
div
and
xchg
loop
sti
adc
pop
cmpsl
icebp
out
push
loop
inc
add
movl
imul
mov
dec
cmp
jl
stc
jmp
lods
mov
add
push
mov
hlt
push
add
jo
popa
add
xchg
call
add
add
mov
adc
loope
dec
jle
xchg
mov
ret
mov
pop
iret
xchg
pop
add
add
test
mov
jmp
movsb
or
test
rolb
stc
insb
adc
xor
cmp
inc
add
mov
push
add
jmp
add
push
or
push
add
sarl
js
sub
sub
popf
sbb
cwtl
jb
std
movl
popf
addl
add
mov
mov
push
xor
add
mov
in
add
movb
mov
insl
xlat
and
cmp
adc
sub
repz
pushf
out
adc
lock
add
aaa
xor
xor
add
rcr
mov
daa
roll
hlt
xchg
int
sarb
loopne
or
pop
les
repnz
add
cmp
adc
popa
add
add
in
and
jmp
addr16
add
add
or
ret
add
out
push
add
mov
add
dec
dec
mov
add
fbld
jmp
add
ds
fwait
in
add
movb
ljmp
jge
addb
outsb
clc
adc
xor
enter
addb
mov
push
dec
cs
add
loope
xchg
mov
scas
lock
daa
pop
jp
in
fs
addr16
ret
add
lret
add
add
sbb
int
add
push
les
sbb
addb
mov
lods
mov
add
add
shll
jge
daa
scas
dec
dec
and
fldl
add
in
inc
add
sbb
add
fdivs
repz
sbb
push
or
add
add
mov
into
mov
mov
ret
add
xor
sahf
test
pushf
icebp
xor
mov
pop
mov
mov
es
mov
add
hlt
mov
in
sub
sbb
jns
jg
add
add
cmp
jo
int3
cmpsl
pusha
add
ss
fsubs
add
lods
ja
add
xchg
mov
ret
add
fs
addl
jmp
add
clc
das
push
mov
out
adc
add
push
scas
addb
in
shrl
fisubs
int
fstps
testb
adc
jle
clc
push
xor
mov
sub
dec
push
daa
mov
or
cld
mov
add
iret
add
add
adc
push
pop
fnsave
pusha
add
cld
mov
rolb
pop
fucomp
outsl
pop
xor
jne
dec
inc
add
pop
loop
add
shrl
adc
push
fildll
aas
sub
rcr
rcr
jle
push
lods
xchg
mov
or
dec
cwtl
fldt
xchg
dec
pop
jg
sti
fadds
cmp
sbb
in
mov
inc
add
add
xchg
sub
jge
cmp
cmp
mov
cmp
cs
push
cwtl
aad
lcall
add
mov
add
shr
add
inc
add
add
cmpsb
add
rorl
add
es
fsubl
movsb
inc
add
ja
cmpsl
js
mov
add
lds
push
mov
sti
in
xchg
std
inc
add
add
dec
ds
int
mov
mov
xor
add
aam
mov
or
add
cld
inc
add
xor
pushf
aad
adc
add
imul
lea
mov
sti
in
inc
add
sbb
cs
imul
jns
mov
loopne
sbb
add
add
stc
push
pop
repz
push
ljmp
icebp
ljmp
aad
stc
dec
clc
in
and
sti
add
lock
test
lcall
add
mov
lock
sbb
add
jo
jb
lods
mov
add
jmp
jmp
or
gs
jg
add
int3
ftst
push
inc
add
push
inc
add
or
xor
sbb
add
daa
mov
enter
daa
jne
scas
cwtl
cmp
inc
add
mov
mov
sub
add
clc
jle
mov
add
inc
add
add
loopne
inc
add
mov
jle
or
add
add
loopne
in
fiadds
pop
movsb
jbe
pop
inc
add
mov
mov
fimull
cmp
addb
int
jmp
and
or
and
dec
cmp
outsb
out
or
add
inc
add
repz
pop
aas
pop
popf
in
and
dec
mov
mov
jno
aas
and
aad
lcall
in
add
in
leave
and
out
add
mov
push
fsubp
es
insl
inc
add
pop
xor
sbb
and
ds
adc
add
xchg
add
or
dec
jno
adc
adc
ds
xchg
sbb
insb
dec
cmp
aad
pop
add
pushf
mov
jmp
jnp
out
lods
shl
xor
sub
add
xchg
loop
fdivl
pop
add
mov
mov
rcrb
cmovg
inc
add
addr16
sahf
lret
imul
push
add
and
add
aam
inc
add
mulb
in
add
int3
fstp
xor
cmp
fisubrl
movb
add
repnz
add
pushf
sub
add
repz
stos
ja
movl
test
xor
xlat
lds
xchg
aaa
nop
fst
dec
movsb
dec
add
add
add
jecxz
mov
jns
add
add
add
push
lret
pop
inc
add
sbb
dec
push
mov
or
stos
movb
stc
jne
adc
inc
add
adc
dec
pop
add
cmp
push
das
cs
test
jne
sar
mov
pop
push
or
addb
add
fimull
mov
gs
mov
adc
inc
add
sub
pop
xchg
lahf
testb
inc
add
add
mov
pop
or
xchg
adc
fists
arpl
addl
pop
xor
add
sbb
ret
lret
movd
xchg
mov
xchg
fbld
and
out
in
add
es
inc
add
add
adc
add
and
roll
adc
aam
dec
and
and
fistpll
cmpsl
jmp
add
push
mov
loope
icebp
out
add
stc
mov
and
fs
mov
add
enter
add
das
adc
addl
inc
add
add
xchg
lea
in
pop
repnz
mov
div
cmp
repz
xor
movl
add
je
hlt
push
add
xchg
sbb
add
add
lret
lahf
push
add
sbb
add
adc
mov
adc
popa
add
add
cli
mov
xor
add
xor
add
js
imul
jb
cmp
outsl
lret
ljmp
sub
or
add
mov
dec
sbb
aam
add
jbe
sub
mov
xor
fwait
cmpsb
jmp
inc
add
ljmp
mov
in
cmpsb
daa
xchg
lds
faddl
and
dec
mov
xor
adc
add
mov
stos
cmpsl
and
ds
mov
add
repz
nop
test
call
add
stos
pop
jp
dec
jg
sub
jae
test
mov
sahf
pushf
in
sub
sti
div
cmp
fdivl
and
inc
add
mov
add
pusha
add
add
movsb
jmp
add
mov
xchg
jl
into
push
mov
bswap
data16
jno
cmp
cwtl
dec
jne
or
mov
add
xlat
or
data16
aad
enter
mov
nop
jmp
add
clc
addb
xor
push
mov
xchg
ret
add
jp
imul
stc
jb
add
pop
add
jmp
lret
and
add
aad
or
ss
mov
sub
fildl
jl
mov
cmpl
add
push
fstpl
mov
xchg
ret
add
xor
mov
nop
jmp
or
cmp
imul
jmp
aad
adc
adc
add
mov
add
jne
push
mov
xchg
ret
mov
add
add
push
mov
xchg
ret
xor
add
add
add
mov
add
jb
ljmp
pop
xor
test
nop
jmp
add
add
leave
mov
stc
jb
add
and
add
stc
jb
mov
and
cmp
sub
add
cltd
testb
sub
ret
mov
or
stc
jb
add
aad
adc
shr
stc
jb
sbb
mov
add
add
lret
stc
jb
add
add
leave
nopl
adc
inc
add
jg
enter
adcb
add
outsb
aam
fldl
adc
test
jb
adc
mov
adc
add
pop
pop
stc
jb
cmp
jl
scas
stos
xor
stc
jb
arpl
scas
clc
addr16
mov
addb
add
add
jb
loop
ja
add
add
or
push
mov
xchg
ret
imull
insl
mov
stc
jb
iret
add
cmp
add
xchg
stc
jb
add
cmpsl
add
push
pop
jnp
add
incl
nop
jmp
cmp
inc
add
mov
add
mov
add
rorl
stos
stc
jb
addr16
pop
add
add
iret
rep
stc
jb
add
fldl
jl
xchg
cli
pop
push
mov
xchg
ret
add
cwtl
je
stc
jb
sub
loop
nop
jmp
add
add
add
mov
mov
orb
movq
add
stc
jb
add
fldl
mov
dec
cmp
jb
add
sar
add
jb
scas
clc
pop
loopne
and
bound
call
jmp
cmp
add
mov
leave
inc
stc
jb
add
pop
add
arpl
sub
add
add
out
je
stc
jb
aam
mov
push
stc
jb
add
cmpsb
loopne
push
add
stc
jb
aam
cmp
pusha
stc
jb
add
or
addb
add
add
stc
jb
cmpsb
sbb
test
or
jb
add
add
or
add
arpl
mov
sub
jne
inc
add
add
les
mov
jb
add
add
jo
popa
stc
jb
add
cmp
and
iret
mov
stc
jb
aam
leave
add
add
arpl
jmp
and
cmpb
call
add
add
add
mov
and
push
add
pop
cmc
iret
jne
stc
jb
clc
or
xchg
fwait
mov
stc
jb
add
add
add
jecxz
jne
stc
jb
aam
add
add
stc
jb
nopl
mov
mov
stc
jb
add
outsb
cmp
jne
mov
stc
jb
pop
adc
jo
add
add
stc
jb
cmp
xchg
jl
cmp
lock
mov
xchg
ret
jb
mov
in
add
push
mov
xchg
ret
mov
jmp
stc
jb
xchg
cmpsl
cmp
or
jb
mov
adc
cmpb
mov
nop
jmp
add
add
mov
stc
jb
push
jp
clc
add
add
stc
jb
push
pop
fst
ds
mov
subb
and
mov
int3
std
mov
add
stc
jb
cmp
add
mov
push
mov
xchg
ret
add
add
cmp
ret
nop
jmp
pop
add
add
pop
mov
inc
adc
jb
add
add
mov
xchg
ret
mov
push
lea
pop
loope
add
mov
leave
seto
sub
stc
jb
or
add
or
addb
add
add
xor
aad
inc
add
add
add
iret
add
aad
mov
stc
jb
add
xchg
cmp
je
stc
jb
cmp
cmpb
jb
add
cmp
aam
mov
nop
jmp
pop
adc
add
roll
mov
stc
jb
add
add
add
add
mov
nop
jmp
jo
push
or
add
subb
and
add
add
imul
add
mov
dec
or
jb
add
add
or
jo
ss
mov
push
mov
xchg
ret
add
scas
mov
movzwl
stc
jb
aad
add
add
xchg
mov
xchg
inc
add
arpl
add
test
add
stc
jb
add
cmp
push
mov
xchg
ret
add
add
xchg
dec
and
push
mov
xchg
ret
addr16
add
jmp
or
loopne
add
iret
pop
stc
jb
add
cmpb
or
add
add
jb
add
sub
stc
jb
add
add
add
data16
jne
stc
jb
adc
loop
mov
jmp
add
add
pop
add
jp
out
xor
push
mov
xchg
ret
adc
mov
push
mov
xchg
ret
cmpsl
mov
movb
or
int3
lods
leave
cwtl
add
xor
add
pop
push
push
mov
xchg
ret
add
adc
adc
mov
push
mov
xchg
ret
add
jmp
add
add
mov
or
mov
xchg
ret
scas
add
jbe
es
stc
jb
mov
jp
add
stc
jb
jb
add
stc
jb
add
add
dec
pop
stc
jb
xchg
add
add
add
mov
stc
jb
add
add
mov
mov
cmpl
nop
jmp
add
mov
stc
jb
add
and
ja
push
push
mov
xchg
ret
pop
xor
add
stos
rep
stc
jb
cmpsl
subb
add
nop
jmp
cmp
mov
cmpsb
clc
add
aam
add
stc
jb
add
xchg
add
add
adc
stc
jb
verr
out
push
stc
jb
cmp
leave
jo
inc
add
repz
add
add
add
stc
jb
add
cmp
pushl
push
mov
xchg
ret
aad
jp
lret
add
stc
jb
add
adc
mov
mov
stc
jb
add
add
add
mov
ret
add
lods
stc
jb
add
add
jo
add
xor
out
inc
add
add
jl
mov
add
nop
jmp
add
roll
outsb
xor
push
mov
xchg
ret
xchg
and
sub
jb
add
add
or
sbb
push
add
xchg
xor
jmp
add
add
iret
mov
in
adc
dec
cltd
hlt
xchg
jne
jne
stc
jb
add
mov
sar
jb
mov
sbb
sbb
mov
cld
stc
jb
add
mov
les
nop
jmp
add
mov
stc
jb
add
add
jp
jp
push
and
nop
jmp
push
aam
add
cmp
fists
jb
adc
add
jp
add
dec
movswl
stc
jb
outsb
add
add
push
stc
jb
add
and
mov
xor
add
add
mov
add
lcall
add
or
fistl
mov
xchg
ret
add
cmp
add
jb
add
mov
int3
mov
stc
jb
or
aad
add
xor
push
push
mov
xchg
ret
jg
add
into
xchg
nop
jmp
add
mov
fisttpll
in
add
stc
jb
add
add
je
add
ljmp
jmp
and
outsb
outsb
ss
and
mov
stc
jb
aad
add
add
rep
stc
jb
jl
add
std
jp
test
nop
jmp
add
add
add
xor
cmp
xchg
call
add
push
mov
xchg
ret
add
sarl
add
stc
jb
sbbb
add
stc
jb
packsswb
cmp
add
push
je
fldl
je
sub
outsb
jmp
and
aam
mov
mov
stc
jb
add
add
add
xor
mov
push
mov
xchg
ret
add
xor
adc
add
clc
dec
inc
nop
jmp
add
mov
mov
add
jb
add
mov
jp
lods
and
imul
xorb
sbb
nop
jmp
clc
jp
add
cmp
add
add
jno
add
es
stc
jb
iret
xchg
fdivp
movsb
stc
jb
add
add
push
mov
out
dec
xor
cmpsb
add
filds
movsb
xor
subl
incl
add
shl
gs
add
add
stc
jb
add
or
push
add
adc
sbb
jb
add
add
add
add
mov
xchg
ret
or
add
add
stc
jb
add
adc
addb
pop
stc
jb
mov
add
sahf
ret
stc
jb
add
jg
cmp
stc
pushl
push
mov
xchg
ret
mov
xor
stc
jb
add
test
jb
add
sbb
stc
jb
add
loopne
addb
clc
lea
stc
jb
add
push
pop
add
push
mov
xchg
ret
or
add
push
push
mov
fadds
add
add
mov
pop
push
mov
xchg
ret
add
mov
add
jb
and
and
cmp
xchg
stos
push
mov
add
outsb
add
mov
scas
pop
mov
sbb
jb
mov
scas
mov
jmp
std
mov
mov
add
add
add
jb
fldl
repnz
add
add
add
loop
xchg
xchg
imul
add
jmp
ljmp
pusha
add
add
add
icebp
push
insb
sub
stc
jb
or
jb
mov
xchg
add
arpl
push
xchg
lods
and
stc
jb
add
psrlq
add
stc
jb
or
ljmp
scas
jne
nop
jmp
add
mov
inc
add
adc
stc
jb
add
aam
loopne
xchg
ret
add
add
push
mov
xchg
ret
add
scas
add
jb,pt
nop
jmp
fucom
xchg
mov
movsl
xchg
dec
rep
push
mov
xchg
ret
ss
xor
stc
jb
add
lock
stc
jb
jg
add
add
les
add
and
stos
push
push
mov
xchg
ret
mov
roll
dec
stc
jb
add
add
add
xor
shrl
add
stc
jb
clc
add
xchg
add
xor
test
nop
jmp
mov
iret
add
test
mov
mov
cld
add
xchg
add
jo
add
movb
mov
xchg
ret
add
mov
cmpb
incl
iret
fildl
aam
ltr
add
stc
jb
cmpsl
sbb
add
dec
push
stc
jb
addb
adc
mov
mov
xchg
ret
add
divl
add
push
stc
jb
leave
addb
xor
jo
mov
nop
jmp
add
add
cmp
ljmp
add
add
str
cmpb
add
cmp
std
add
and
push
mov
xchg
ret
aad
ret
push
push
mov
xchg
ret
jl
add
xchg
xchg
je
add
add
mov
jb
add
ja
jl
mov
add
add
mov
dec
iret
add
add
push
lea
nop
jmp
cmp
jo
xor
push
mov
xchg
ret
outsb
xchg
add
jmp
addb
scas
jno
mov
stc
jb
add
cmp
and
sbb
adc
add
add
cmp
dec
stc
jb
add
sbb
add
je
stc
jb
cmp
lcall
mov
jmp
add
pusha
aad
add
mov
mov
add
sub
jb
add
add
cmp
push
nop
jmp
ja
or
mov
into
lea
stc
jb
add
inc
add
addb
add
add
add
jb
add
inc
sub
and
inc
add
pop
add
test
sub
cld
add
out
xchg
mov
mov
mov
xchg
ret
mov
cmp
push
mov
xchg
ret
add
hlt
test
add
add
pusha
add
xchg
push
cli
add
stc
jb
iret
add
and
nop
jmp
add
rcll
add
or
test
stc
jb
std
jg
loope
add
stc
jb
mov
mov
unpcklps
lods
mov
push
mov
xchg
ret
add
leave
cmp
nop
jmp
add
add
imull
mov
stc
jb
mov
xchg
push
shll
push
stc
jb
xchg
mov
jb
arpl
xchg
mov
add
mov
stc
jb
testl
test
adc
add
jb
xchg
add
test
test
stc
jb
add
push
lds
loopne
add
add
xchg
push
mov
xchg
ret
add
cmp
mov
stc
jb
add
sti
add
push
mov
xchg
ret
mov
push
mov
add
add
shll
add
xor
add
mov
xchg
adc
je
lea
nop
jmp
add
testl
nop
jmp
clc
push
mov
pop
mov
nop
jmp
pop
fistl
add
add
sbb
jmp
xchg
cmpsl
add
sldt
jne
stc
jb
cmp
add
rep
push
mov
xchg
ret
add
add
xor
stc
jb
scas
mov
add
cmp
nop
jmp
and
fildl
add
mov
stc
jb
add
cmpsb
add
mov
push
nop
jmp
add
add
ret
add
sbb
jb
add
add
cmp
push
mov
xchg
ret
add
mov
nop
jmp
add
add
mov
add
jb
iret
add
pop
stc
jb
add
mov
and
add
mov
stc
jb
ljmp
jb
add
cmp
cmp
xor
add
rcll
mov
add
xor
stos
mov
push
mov
xchg
ret
loopne
outsb
sbb
pop
lock
incl
mov
add
popa
add
mov
xchg
ret
push
ss
push
sub
stc
jb
clc
mov
mov
push
mov
xlat
add
add
clc
add
sbb
jne
mov
stc
jb
add
add
nop
jmp
addb
pop
add
mov
jl
stc
jb
add
add
loopne
mov
jb
cmp
add
add
add
add
jb
add
add
adc
add
push
mov
xchg
ret
jl
pop
and
data16
nop
jmp
add
add
add
into
mov
stc
jb
fildl
adcb
clc
mov
add
jb
add
leave
fildl
add
push
stc
jb
add
add
arpl
mov
decb
pop
fildl
xchg
ret
add
cmp
adc
incl
adc
or
mov
arpl
stc
jb
mov
pop
push
mov
xchg
ret
add
adc
pop
out
push
mov
sbb
in
add
add
lret
sub
pause
jmp
add
arpl
nop
jmp
addb
jo
mov
popa
adc
add
jb
push
push
add
fistps
jb
add
adc
loop
mov
stc
jb
and
dec
and
push
mov
xchg
ret
mov
arpl
push
add
stc
jb
and
add
mov
aas
mov
stc
jb
mov
cmp
add
and
inc
push
mov
xchg
ret
aam
and
rdpmc
rclb
add
sbb
add
daa
push
mov
stc
jb
add
out
add
jmp
stc
jb
add
xchg
mov
push
stc
jb
jp
add
aam
adc
out
push
stc
jb
add
add
adcb
incl
mov
cmpsb
add
jo
add
les
jb
scas
std
add
cmpb
pop
movzwl
stc
jb
jo
jp
xchg
sub
push
aam
add
fnsave
mov
nop
jmp
push
mov
xorb
cwtl
mov
nop
jmp
mov
pop
mov
stc
jb
cmpsl
jl
add
cmp
add
jb
aad
xchg
add
add
call
clc
sbb
push
mov
xchg
ret
sbb
in
mov
stc
jb
mov
ss
dec
pop
push
mov
xchg
ret
fildl
add
mov
inc
add
mov
stc
jb
add
mov
xchg
cmp
add
jb
push
stc
jb
str
xchg
mov
xchg
ret
add
scas
mov
nop
jmp
or
cs
stc
jb
and
add
add
bound
sbb
pop
and
jmp
add
add
add
add
xor
movzwl
stc
jb
add
cmp
push
nop
jmp
add
add
js
js
nop
jmp
add
add
clc
or
add
incl
jp
add
add
cmp
push
mov
xchg
ret
jl
adc
jbe
push
nop
jmp
cmp
add
inc
add
add
pop
inc
push
mov
xchg
ret
add
cmp
push
stc
jb
add
aam
add
add
jmp
stc
jb
jg
mov
fmull
add
pop
push
cmpsb
and
dec
dec
nop
jmp
add
add
add
adc
adcb
push
pop
add
add
jp
add
add
je
stc
jb
adc
pop
imul
sub
ret
mov
add
add
xorb
xchg
push
fldl
mov
push
push
mov
xchg
ret
adc
ljmp
push
mov
xchg
ret
add
adc
xchg
repnz
sarb
stc
jb
ljmp
add
arpl
mov
xchg
clc
pushl
scas
mull
pop
push
stc
jb
ja
add
add
add
or
add
jb
add
cmp
add
add
jb
mov
add
or
stc
jb
pop
cmpsl
cmp
mov
cmp
cmp
mov
xchg
ret
sbb
jno
stc
jb
adc
mov
arpl
mov
add
stc
jb
add
mov
push
mov
in
and
cli
jge
push
add
add
add
inc
add
push
nop
jmp
sarl
mov
add
addb
incl
jo
cmp
xchg
inc
add
dec
nop
jmp
add
add
mov
mov
add
lahf
or
add
jb
add
ss
ror
stc
jb
add
jl
add
mov
stc
jb
addb
add
add
jmp
mov
outsb
jb
jmp
stc
jb
mov
mov
in
add
add
add
xchg
or
add
jb
add
push
push
mov
xchg
ret
push
jl
rolb
add
stc
jb
cmp
xchg
cmp
push
mov
add
inc
add
add
push
add
rorl
jmp
adc
add
add
add
add
sbbb
xor
add
adcb
push
aad
add
outsb
add
add
add
int3
mov
stc
jb
add
mov
sub
stc
jb
add
bound
xor
sub
push
mov
xchg
ret
cmp
outsl
add
stc
jb
add
pop
add
add
loop
push
mov
xchg
ret
add
add
les
push
mov
xchg
ret
add
cmp
jmp
iret
pop
adc
cmp
pushw
sti
stc
jb
mov
add
add
add
pop
cmp
jb
add
add
addr16
mov
stc
jb
clc
ja
cmp
shll
mov
stc
jb
jg
mov
add
stc
jb
jo
ss
mov
add
sub
loop
jmp
add
add
mov
shl
add
mov
add
add
fsubrs
add
add
add
add
cmp
add
sub
add
sub
inc
add
cmp
add
add
jmp
add
xchg
pop
lea
push
mov
xchg
ret
sbb
stc
jb
add
adc
xor
mov
mov
stc
jb
jl
ja
mov
pop
stc
jb
and
jp
mov
add
das
or
stc
jb
add
add
leave
add
call
mov
jp
adc
and
aad
add
stc
jb
fstpt
add
add
cmp
jb
add
add
pop
adc
pusha
push
mov
xchg
ret
add
add
add
into
lea
stc
jb
arpl
and
xchg
or
stc
jb
cmp
cmpsb
add
arpl
ja
add
add
sbb
cmp
incl
adc
cmp
dec
mov
push
mov
xchg
ret
add
leave
mov
jb
jb
add
mov
movzwl
stc
jb
add
xchg
xchg
mov
jb
cmpsb
jl
add
cmp
and
repnz
pop
cmc
sbb
jne
stc
jb
add
leave
add
inc
add
mov
stc
jb
mov
clc
jp
test
nop
jmp
cmp
add
addr16
stc
jb
sbb
add
push
jnp
addb
cmp
jl
add
jb
add
push
add
add
push
stc
jb
jb
add
rcr
mov
stc
jb
adc
sbb
stc
mov
stc
jb
mov
add
in
inc
cmp
xor
add
js
add
or
sub
pop
add
add
add
add
iret
call
stc
jb
pop
and
add
add
nop
jmp
add
mov
cli
mov
stc
jb
add
or
jecxz
add
add
add
jge
les
push
mov
xchg
ret
add
aas
xchg
stc
jb
add
add
dec
add
mov
xchg
ret
cmp
idivl
add
adc
add
std
adcb
sar
adcb
cmpb
popa
add
jb
divl
add
add
stc
jb
cmp
add
std
push
cmp
jb
add
add
les
ret
add
mov
mov
stc
jb
xchg
jb
add
push
mov
xchg
ret
add
add
add
mov
stc
jb
mov
add
xchg
pop
add
popf
push
nop
jmp
add
add
and
mov
push
stos
and
push
mov
xchg
ret
mov
cmp
orb
incl
mov
add
add
add
stc
jb
mov
add
mov
jmp
xor
aad
mov
dec
push
stc
jb
add
add
leave
mov
dec
movzwl
stc
jb
cmp
or
inc
add
add
jae
in
push
push
mov
xchg
ret
cmp
xchg
bnd
jmp
stc
jb
mov
mov
stc
jb
push
add
add
add
add
add
jb
add
add
add
stc
jb
cmp
add
dec
dec
nop
jmp
xchg
add
outsb
and
add
stc
jb
adc
pop
adc
mov
stc
jb
pop
mov
je
add
nop
jmp
add
push
stc
jb
add
aad
sbb
add
push
mov
xchg
ret
xor
iret
loopne
stc
jb
mov
std
test
inc
repnz
incl
cmp
loop
and
xchg
mov
add
add
add
stc
jb
adc
add
mov
xchg
stc
push
stc
jb
add
cmpb
mov
out
mov
stc
jb
add
test
cmpsl
pop
pusha
stc
jb
pop
jl
addb
or
push
push
mov
xchg
ret
add
add
add
add
jg
stc
jb
arpl
addb
jp
xor
stc
jb
add
add
add
mov
sbb
incl
add
add
add
push
mov
xchg
ret
loop
pop
xchg
push
lock
rolb
leave
stc
jb
add
orb
mov
stc
jb
adc
loop
leave
mov
adc
inc
add
outsb
add
or
stc
jb
cmpsb
add
add
stc
jb
add
and
jg
mov
stc
jb
add
add
add
jmp
mov
push
mov
xchg
ret
add
add
add
call
stc
jb
adc
or
mov
call
incl
add
add
dec
je
stc
jb
ja
clc
ret
add
nop
jmp
add
add
add
add
nop
jmp
xchg
mov
add
inc
stc
jb
divl
add
fildl
add
loope
add
jbe
stc
jb
aam
add
adcb
mov
mov
xchg
ret
jp
psrlq
lea
nop
jmp
or
add
mov
add
nop
jmp
add
cmpb
add
add
or
inc
add
add
mov
sub
sar
adcb
add
scas
mov
movzwl
push
mov
xchg
ret
mov
nop
jmp
mov
or
sar
jb
adc
adc
mov
sar
orb
add
je
stc
jb
add
jp
mov
nop
jmp
and
outsb
add
add
out
xor
stc
jb
mov
add
add
add
push
and
inc
add
push
stc
jb
add
jp
cmp
mov
stc
jb
add
mov
stc
jb
add
add
cmp
jae
jb
mov
add
mov
stc
jb
add
add
or
add
add
add
std
subb
mov
add
add
lret
xor
and
push
mov
push
mov
xchg
ret
jg
add
imull
andb
add
mov
fisttpl
stc
jb
addb
addr16
imul
stc
jb
add
add
addb
test
nop
jmp
add
cmpsl
mov
add
add
and
stc
jb
mov
add
push
stc
jb
add
aad
outsb
add
mov
xchg
ret
jl
add
xor
inc
add
jb
shll
add
nop
jmp
scas
add
leave
jl
add
stc
jb
iret
add
and
cmpsl
jo
mov
jb
add
add
push
or
jmp
add
mov
outsb
add
add
sub
mov
xchg
ret
add
mov
cmpsb
add
sti
mov
push
mov
xchg
ret
add
addr16
mov
stc
jb
add
add
or
cmp
add
lea
addb
sbb
pop
stc
jb
add
bsf
jl
mov
idiv
stc
jb
add
call
stc
jb
add
shrl
add
push
mov
xchg
ret
cmpb
mov
xchg
ret
cmp
dec
xor
push
mov
xchg
ret
add
jp
and
push
mov
xchg
ret
add
adc
jb
add
add
jp
add
pop
out
call
incl
add
outsb
mov
add
incl
sldt
add
pop
stc
jb
scas
loopne
xorb
dec
pop
push
mov
xchg
ret
std
jp
cmp
notl
incl
add
daa
out
add
jmp
pop
add
cmp
mov
mov
stc
jb
mov
add
add
stc
jb
add
mov
add
add
das
push
stc
jb
mov
add
add
inc
and
jb
xchg
jg
add
lret
stc
jb
mull
add
add
jb
ja
add
mov
ja
sub
dec
sub
jb
jl
aam
add
jb
add
add
cmp
mov
add
cmp
push
jle
inc
add
loop
add
jo
call
pushl
loopne
add
stc
jb
mov
pop
dec
sub
stc
jb
clc
outsb
add
dec
add
stc
jb
mov
jg
or
rclb
add
add
add
inc
add
nop
jmp
mov
or
jg
jmp
add
add
cmp
stc
jb
add
add
add
mov
pop
stos
stc
jb
push
add
add
add
sbb
js
jmp
cmp
push
test
in
jmp
add
add
addb
or
clc
incl
jg
add
xchg
mov
add
stc
jb
jg
add
add
add
add
jb
add
cmpsl
nop
jle
jns
stc
jb
mov
push
add
mov
push
mov
xchg
ret
add
jae
xor
test
stc
jb
addr16
or
leave
loopne
stc
jb
add
add
stc
jb
xorb
cmp
jmp
cmpsb
mov
xor
mov
add
stc
jb
add
andb
pop
inc
add
push
stc
jb
clc
loop
add
add
in
mov
stc
jb
cmp
jg
aam
cmp
pop
jae
jb
add
push
cmp
add
imul
and
fildl
add
cmp
std
mov
fisttpll
test
add
add
jb
mov
adc
jb
addr16
iret
jo
jb
ss
add
cmp
into
mov
push
mov
xchg
ret
add
push
mov
xchg
ret
add
add
add
stc
jb
mov
sbb
pop
stc
jb
iret
adc
add
add
mov
inc
jp
nop
jmp
ja
sldt
cmp
mov
inc
add
add
mov
mov
push
mov
xchg
ret
add
add
push
nop
jmp
add
clc
mov
xor
push
mov
add
stc
jb
cmpsb
loopne
ret
add
push
push
mov
xchg
ret
cmp
je
stc
jb
fldl
add
adc
dec
mov
nop
jmp
add
add
out
mov
nop
jmp
or
mov
popa
add
jb
ja
add
stc
jb
aad
xorb
mov
div
stc
jb
add
mov
nop
jmp
add
add
add
ds
stc
jb
add
add
push
nop
jmp
mov
iret
add
jb
nop
jmp
scas
or
add
jg
stc
jb
fcmovnbe
add
inc
push
adc
stc
jb
and
cmp
pop
add
stc
jb
add
add
mov
push
push
mov
xchg
ret
aad
mov
add
jl
stc
jb
add
add
jmp
sar
jb
mov
aam
add
xchg
mov
jb
add
jl
add
movzwl
stc
jb
add
add
add
add
push
mov
add
leave
add
inc
fiaddl
out
popa
add
adc
shl
inc
add
mov
add
cmp
stc
jb
add
ljmp
add
stc
jb
add
add
sldt
or
leave
sub
jb
add
add
add
mov
jmp
add
add
addl
dec
push
stc
jb
shll
mov
stc
jb
cmp
mov
rolb
add
shr
mov
stc
jb
addb
mov
push
mov
xchg
ret
add
push
mov
xchg
ret
std
arpl
add
popf
xor
stc
jb
add
in
add
iret
and
xchg
add
xorl
insl
lock
cmp
addb
inc
add
out
loopne
lahf
add
xchg
xchg
pop
mov
xchg
inc
add
repnz
and
test
stc
imul
divl
mov
adc
jle
mov
sahf
fsts
lock
test
inc
add
cmp
sbb
mov
add
add
stos
jg
gs
rol
add
test
fs
call
add
std
xchg
mov
inc
add
insb
jnp
das
xor
cmp
sbb
jl
out
add
push
push
stos
mov
pop
add
fistl
mov
aas
sub
add
add
jb
mov
les
pop
add
push
or
mov
cmp
add
sub
mov
lcall
das
mov
enter
jle
add
mov
outsl
stos
loop
insl
incb
add
in
add
divb
es
out
out
add
jle
dec
lods
sub
and
mov
movl
cld
add
mov
xchg
jno
add
enter
negl
addr16
cltd
popa
add
dec
dec
inc
add
push
dec
jl
cmp
inc
add
das
pop
addl
mov
addb
pop
lds
test
or
movsb
outsl
daa
ja
xor
mov
mov
sub
sbb
daa
jo
test
sbb
xor
mov
cmovp
inc
add
cmp
and
mov
movsb
dec
or
inc
add
test
scas
fwait
aad
push
xor
outsb
fidivs
jle
sub
push
addb
sbb
aam
add
insb
sahf
jp
sub
cmp
test
pop
mov
add
add
mov
add
add
cld
data16
inc
add
lret
iret
sbb
adc
dec
jbe
add
test
and
jbe
outsb
negb
add
push
mov
je
add
mov
movl
mov
pop
addb
add
mov
int
js
add
je
and
call
mov
testl
add
cmpsb
mov
push
lods
icebp
rcrb
push
push
add
add
test
sbb
add
add
in
jne
xor
in
addb
addb
icebp
sub
or
mov
or
aam
mov
addl
add
in
xchg
jl
add
stos
xor
jmp
add
ud1
icebp
lds
push
insb
mov
and
sbb
dec
push
xchg
dec
fistl
sbb
jo
add
and
xchg
adc
add
ljmp
loopne
stc
mov
scas
and
dec
jne
inc
add
push
fcomps
add
shrl
add
pop
mov
insl
xor
xor
add
add
leave
insb
or
sti
lret
repz
mov
outsb
push
inc
add
addb
std
sub
pushf
mov
ret
add
add
mov
cs
push
add
fs
add
out
int3
lahf
pop
loop
popl
add
stc
fwait
pop
int
add
hlt
push
dec
xor
cmc
jp
pop
scas
das
cli
pusha
add
rclb
mov
add
setnp
in
mov
add
dec
out
cwtl
aam
imul
inc
add
add
test
movb
mov
jbe
ss
rclb
add
cmp
test
repnz
loop
stos
jne
or
mov
add
add
fwait
rcrb
inc
add
lock
xlat
mov
cmp
add
lahf
pushf
adc
add
xchg
test
clc
popf
sbb
inc
add
dec
mov
lahf
pop
ja
addb
cmp
sti
fisttps
outsb
cmp
push
arpl
mov
add
inc
add
xchg
sub
lods
xchg
int3
je
inc
add
fxch
xor
xchg
pop
dec
fs
add
cmc
dec
inc
add
gs
xor
aam
mov
inc
add
mov
or
add
xor
add
nop
jmp
add
js
add
inc
add
push
fiadds
in
jnp
mov
popa
add
and
out
icebp
out
leave
mov
add
add
jae
je
popf
loope
pop
ret
add
add
arpl
cmp
repz
cmp
sar
das
dec
sbb
iret
icebp
or
mov
dec
sbb
mov
movb
out
xor
movsb
mov
icebp
pop
dec
call
lret
mov
cmp
cmp
jb
dec
movsb
mov
pop
and
pop
xchg
rolb
insl
mov
into
addb
mov
add
je
jnp
xor
out
push
add
je
or
outsl
insl
lods
push
fbstp
mov
test
add
mov
movl
inc
add
or
or
lret
sub
movb
jnp
xor
add
rolb
es
push
in
sahf
dec
xchg
cwtl
add
lea
les
fildl
add
lret
into
lds
mov
push
fsts
sbb
push
out
mov
add
enter
add
pop
or
or
add
fdivr
out
sbb
nop
adc
dec
xlat
mov
mov
mov
xor
gs
add
mov
add
add
dec
cmc
push
out
ljmp
daa
insb
lahf
scas
dec
ss
adc
inc
add
int3
mov
pop
scas
negl
in
das
add
xchg
roll
pop
push
xchg
xchg
rolb
push
and
mov
cmp
add
mov
jo
add
add
sbb
lods
sub
outsl
xchg
lock
enter
mov
ret
add
add
sbb
addb
fisttps
lods
sub
add
jb
stos
mov
shl
bound
mov
aam
ja
mov
addl
sub
pop
fisubrs
inc
add
mov
aas
mov
cs
fidivrs
mov
ja
adc
mov
in
cld
cmp
pop
add
jno
add
addl
ja
hlt
cmpsl
adc
add
add
add
movl
add
add
pop
add
xchg
pop
jge
mov
add
sbb
fcmovne
or
or
add
sti
movl
inc
add
out
mov
sub
add
sbb
inc
add
faddl
inc
add
pop
xchg
sbb
add
sti
leave
pop
xchg
push
aaa
div
sbb
aas
mov
lods
push
and
clc
xchg
cmovb
ret
push
mov
push
mov
es
out
push
add
and
ret
add
or
add
pop
mov
addl
or
add
insl
bnd
push
int
add
mov
sub
mov
pop
add
dec
jecxz
push
jp
cmc
fnstcw
sbb
stc
stc
adc
add
sbb
hlt
into
sahf
insl
pop
dec
cmp
adc
jns
sub
add
fwait
into
or
imul
test
sbb
mov
add
inc
add
or
aad
loope
insb
add
clc
adc
loopne
jp
add
add
in
repnz
sbb
ds
add
cld
and
inc
add
test
push
imul
fs
add
das
mov
movsl
sbb
mov
call
adc
add
jg
inc
add
movb
inc
add
sbb
mov
inc
add
mov
or
sti
mov
clc
or
cmp
sub
mov
lret
add
xor
insl
mov
add
xor
push
xor
add
add
push
and
pushf
daa
sbb
push
push
sub
in
enter
pop
sti
push
xchg
or
jo
sub
addr16
aam
lahf
std
lock
adc
push
addl
ret
add
adc
mov
cld
mov
jb
enter
int3
mulb
adc
jb
pop
xor
cmp
add
shlb
add
add
fsubr
cwtl
xor
mov
add
xchg
ja
add
xchg
pop
lods
das
inc
add
mov
mov
stos
cld
movl
sub
sbb
addl
mov
sbb
adc
xor
je
dec
pushf
sub
push
shlb
add
jne
iret
push
sub
mov
add
add
add
sar
sbb
enter
add
inc
add
pop
xchg
fwait
movsb
pop
xchg
out
test
dec
dec
push
sahf
mov
jge
jmp
fsts
jmp
push
cld
sub
xchg
and
jle
add
sbb
arpl
cmc
cmp
enter
mov
movsb
xchg
jb
or
mov
cld
adc
mov
enter
xchg
cli
push
fsubl
add
popa
add
jnp
cmp
cmp
cmp
add
movb
fnstcw
addl
pop
pusha
add
inc
add
add
roll
pop
sbb
sahf
mov
jge
int3
cltd
and
aam
mov
repnz
mov
aad
or
add
and
jge
push
sub
dec
sub
and
loop
lods
scas
cmp
lret
push
ljmp
add
mov
add
in
popa
add
movb
xchg
cmpsb
cmp
shrb
gs
sarl
mov
and
cmp
mov
adc
sub
sub
mov
aam
popf
inc
add
std
inc
add
nop
mov
cmp
je
add
and
frstor
add
cmp
push
mov
inc
add
jmp
or
or
mov
xchg
mov
ffree
add
add
add
add
cltd
and
add
or
ficoms
or
add
in
add
insb
insb
cwtl
mov
cmp
push
add
hlt
pop
jg
push
cmp
ja
inc
add
and
ds
add
cwtl
pop
ret
add
jp
jg
push
or
jns
ret
dec
push
add
adc
inc
add
add
sti
fwait
pop
ja
clc
ja
nop
pop
stos
and
xchg
pop
mov
pusha
add
mov
jne
scas
push
arpl
cli
shr
mov
and
add
or
scas
jae
dec
cmp
or
jns
or
xchg
out
add
filds
lcall
mov
add
add
push
sbb
pushf
and
ret
add
push
mov
frstor
add
ja
add
cmp
mov
add
xor
fidivs
bound
loopne
outsb
cmp
mov
mov
les
jl
lds
bound
jmp
je
aad
lods
les
mov
xchg
rcl
jb
fisttps
hlt
jns
mov
icebp
in
xchg
insl
mov
cmp
add
fs
push
dec
dec
popf
jge
or
push
mov
int
sbb
sbb
mov
jne
add
add
adc
cli
sbb
js
insl
sub
and
test
cmp
pop
jmp
pop
test
in
mov
sub
add
hlt
push
mov
mov
xlat
pushl
fldl
lods
and
cmc
mov
jmp
cmp
movsl
and
adc
sub
notb
call
mov
xchg
enter
mov
pop
fstpt
repnz
ds
addl
cmp
insb
fidivrs
add
pop
add
xlat
push
test
sar
idiv
outsl
add
sti
inc
add
cwtl
hlt
in
dec
pop
and
jbe
add
loope
sub
je
aam
aad
addr16
add
push
jmp
repz
jno
add
or
addl
addb
push
add
movb
lods
pop
data16
arpl
mov
and
or
xchg
mov
xor
adc
inc
add
mov
pop
inc
add
std
adc
scas
pop
and
sahf
and
dec
push
lcall
push
add
add
lods
xchg
insl
xchg
pop
js
or
jecxz
jl
insl
lcall
mov
negl
iret
cwtl
insb
fsubr
dec
js
sub
add
or
sub
xchg
adc
inc
add
cs
xchg
push
push
in
movsb
cltd
pop
mov
sbb
add
dec
dec
clc
cld
popa
add
add
popf
in
stos
call
sahf
ss
mov
or
filds
and
stos
aad
icebp
imul
mov
loopne
pop
mov
add
add
cwtl
dec
dec
sub
mov
ds
xchg
lgs
je
je
mov
dec
testb
ret
add
lret
xor
outsb
ret
mov
sbb
add
lock
out
rol
add
cmp
movb
std
and
xor
and
out
popf
pusha
add
arpl
stmxcsr
add
add
add
ljmp
js
loop
sbb
sbb
in
add
jge
xor
xchg
xchg
bound
mov
sbb
add
add
adc
pop
sbb
push
call
out
pop
in
das
fdiv
jnp
add
je
jno
aaa
or
cmp
popa
add
stos
push
jg
pop
insb
insb
pushf
cmpsb
jp
mov
aad
push
lock
pop
xchg
cwtl
mov
xor
add
test
out
push
add
and
adc
imul
daa
in
jg
push
daa
inc
add
idiv
in
aad
roll
push
inc
add
das
dec
push
and
sbb
adc
or
jnp
push
inc
add
jecxz
push
addl
sti
shl
jae
cmp
addb
add
mov
add
add
xchg
lock
add
mov
fsts
add
and
nop
inc
add
sub
enter
add
sbb
add
iret
repnz
cmc
lret
negb
push
add
or
fcomps
fmull
ret
mov
add
mov
mov
mov
pop
clc
outsb
mov
cld
test
mov
movsl
das
pusha
add
add
jbe
ljmp
aam
ljmp
jp
mov
push
mov
adc
add
hlt
inc
add
add
add
ret
add
js
add
mov
jno
fs
enter
mov
rolb
or
test
pop
sub
lods
inc
add
jns
pop
aam
ret
mov
dec
cld
push
add
pop
inc
add
mov
and
test
fistpll
add
cmp
aaa
addl
enter
mov
ret
add
add
add
xchg
adc
cmp
or
dec
fcmovu
pop
add
loop
aaa
jg
mov
das
xchg
push
cmp
add
xchg
fcompl
cmpsl
data16
xchg
mov
popf
stos
insb
mov
jmp
add
add
jl
jne
das
xchg
xor
fldcw
ret
inc
add
mov
add
xchg
pop
pusha
add
stos
jg
cmp
ret
add
push
mov
mov
add
lret
lods
hlt
mov
shrb
movsl
jbe
add
sub
idivb
add
cwtl
fwait
mov
push
add
add
inc
add
addb
int3
pop
xor
mov
add
cmc
lret
dec
mov
je
gs
roll
pop
fldenv
lods
icebp
inc
add
xchg
jns
outsl
jp
add
ror
test
push
pop
add
add
jbe
add
mov
cmp
out
movsb
pop
ret
add
pop
pusha
add
ljmp
jae
es
test
rclb
test
clc
jne
in
ja
and
loop
mov
xchg
divl
mov
add
add
add
paddb
mov
aas
xchg
pushf
dec
or
inc
add
jmp
and
mov
add
jmp
je
fdivrs
lea
sbb
movsl
pop
roll
mov
add
inc
add
jo
loop
jecxz
add
pop
ret
add
add
arpl
ret
add
leave
jmp
cli
ds
push
xchg
sub
in
adc
test
xlat
ret
or
dec
nop
push
dec
imull
add
mov
ja
cmp
mov
add
ds
add
lods
cmp
enter
jecxz
loop
add
add
in
out
add
lods
xor
push
add
daa
lea
push
sbb
int3
mov
ss
loopne
push
jbe
dec
aad
add
dec
jle
xor
loopne
in
or
or
add
jecxz
int
add
addl
pop
push
cwtl
leave
ja
out
leave
aas
fnstenv
int
fidivl
roll
enter
add
imul
lods
call
enter
add
add
bound
add
mov
loopne
add
add
mov
add
cs
and
movsb
shr
jg
add
xor
test
adc
or
sbb
add
mov
rolb
or
xchg
adc
sbb
sub
add
sub
mov
out
in
add
xchg
push
inc
add
add
mov
inc
add
fcoms
pop
dec
fidivl
aam
fcoms
add
sti
mov
mov
rorb
fistps
movl
add
pusha
add
pop
sbb
cs
pop
and
movsb
xchg
into
dec
movsb
add
xor
add
fcomps
sub
jge
movl
mov
xor
sbb
adc
add
add
lahf
roll
push
pushf
clc
cld
cmc
xchg
or
sbb
cs
push
push
add
sbb
fwait
adc
inc
add
in
stc
lret
insl
push
add
inc
add
js
loopne
or
xor
roll
inc
add
add
inc
add
xor
pop
mov
push
push
mov
mov
add
sub
lahf
or
test
sbb
add
int3
cs
add
add
clc
notl
ficoms
movl
jge
mov
inc
add
jne
add
jp
or
inc
add
lds
ljmp
xchg
adc
and
sbb
mov
in
movsl
and
nop
je
and
sbb
iret
divb
add
sub
add
xchg
addb
lret
ss
test
cmp
lock
add
std
dec
or
outsb
fnstsw
xor
insl
or
pushf
cli
addb
lea
mov
add
iret
test
lock
inc
add
js
negl
inc
add
and
rcll
mov
jbe
loop
add
add
pusha
add
mov
test
or
add
mov
add
repnz
mov
xchg
mov
adc
xor
sbb
mov
sbb
mov
add
mov
ret
sbb
sub
test
sahf
adc
das
imul
sti
xchg
sbb
popf
and
jp
jl
data16
mov
lock
add
loop
add
and
test
pop
fisubl
jg
add
dec
movb
mov
mov
mov
insl
movsl
inc
add
jno
addl
push
enter
aam
inc
add
xchg
mov
add
fbld
add
xchg
addb
and
test
mov
outsb
call
cs
out
and
loop
addb
shrb
sub
pop
dec
jo
push
add
sbb
xchg
jle
add
pushf
sub
jp
arpl
ds
mov
std
scas
pop
sbb
cs
popf
movb
ret
add
jl
scas
xchg
lods
adc
inc
add
data16
cmp
cmp
add
lret
fcmove
add
or
into
movsb
mov
add
jno
ret
lds
inc
add
jne
fldcw
dec
roll
add
add
inc
add
in
pop
sub
dec
or
xchg
pop
add
rorw
nop
and
loop
add
mov
es
mov
insb
mov
fs
scas
cmp
add
add
ds
inc
add
mov
in
in
imul
add
and
into
xlat
or
jbe
or
add
or
sbb
pop
mov
mov
lds
add
mov
addl
and
push
pop
out
pusha
add
add
cltd
xchg
sbb
pop
sahf
push
arpl
lea
lcallw
mov
pop
cs
add
cmp
or
iretw
ja
bswap
cmpsl
dec
addl
add
mov
fwait
je
sub
lret
add
push
and
or
add
shrw
std
and
sub
fidivrs
es
xchg
adc
sbb
shlb
pop
aad
add
lahf
mov
and
mov
lods
mov
dec
adc
jae
enter
mov
add
lcall
or
add
sub
xchg
dec
mov
loope
jno
adc
outsb
test
loope
xchg
mov
lret
pop
adc
add
lods
lcall
outsl
sti
addl
fdiv
or
mov
rcl
fstl
popf
push
lock
imul
add
sbb
cmp
add
sbb
roll
add
add
add
in
pop
sahf
aam
and
jmp
add
sbb
sub
add
sub
xor
sub
lcall
and
and
addl
sbb
movsl
pusha
add
add
mov
mov
add
push
add
cltd
mov
sub
add
roll
push
mov
cwtl
movsb
cwtl
pop
mov
push
adc
add
adc
xchg
inc
add
in
dec
pop
pop
or
fcmovnbe
loop
add
dec
ss
sub
ret
add
inc
add
push
es
pop
add
fisttpll
outsl
adc
add
in
lahf
rorl
aas
popf
dec
jmp
jp
add
out
inc
add
fsubl
add
sbb
imul
test
cmc
fsts
pop
jle
xor
sbb
xchg
insl
xor
movsl
mov
xchg
mov
push
cltd
scas
xlat
or
std
setb
jb
repnz
movl
push
repnz
outsl
scas
mov
pop
std
sahf
lahf
or
into
xchg
mov
int3
cmp
testl
add
add
add
adc
dec
rolb
bound
pop
lock
sub
leave
lds
jecxz
jae
insl
cli
adc
out
push
jo
in
pop
mov
pop
clc
fstpl
enter
adc
pop
pop
add
add
xlat
aas
arpl
imul
mov
jo
rolb
add
jmp
jg
mov
and
jno
adc
add
cmpsl
mov
inc
add
in
mov
cmc
dec
xchg
inc
add
sahf
push
push
jne
outsb
popf
xchg
js
scas
pop
jne
repnz
add
cmc
sub
loope
mov
popf
std
cs
add
xor
sub
ret
mov
mov
les
fwait
test
test
movl
dec
test
xor
aas
addb
out
mov
sbb
test
xor
daa
or
mov
test
fldcw
jbe
outsl
in
aaa
sub
fmull
popf
xor
test
std
lret
add
mov
inc
add
inc
add
gs
decb
popl
add
add
mov
in
xchg
jne
dec
repnz
xchg
mov
ficoms
in
add
xor
jbe
cmpsb
out
push
add
aam
pop
xchg
cmp
sub
add
adc
in
add
ds
int3
sub
rcrb
cmc
xor
push
repz
add
xor
loope
icebp
addb
cmp
inc
add
jg
jmp
add
fcmovbe
mov
fcmovnu
shlb
movl
cmp
mov
cs
lds
push
mov
add
or
arpl
ret
add
mov
popf
cmpsl
jg
add
pop
push
add
cmp
addl
add
mov
add
add
cmpsl
inc
add
std
mov
jecxz
inc
add
mov
dec
sbb
add
imul
iret
sbb
movb
ljmp
add
mov
aaa
sbb
mov
shl
cld
mov
mov
mov
repnz
mov
aam
fbld
add
clc
sbb
add
inc
add
push
nop
dec
add
adc
cmpsb
xchg
mov
and
fwait
cmpsl
jecxz
mov
es
inc
add
fwait
repz
rcll
xor
hlt
jnp
cmp
scas
dec
cwtl
repnz
pop
int
and
cmp
insl
out
test
imul
fdivs
mov
xor
jl
shlb
add
push
test
xchg
je
roll
mov
gs
ljmp
decl
bound
adc
shl
fwait
insl
jnp
pop
sub
stos
gs
andnps
add
pop
test
insb
push
ret
add
int
or
or
ja
add
nop
mov
add
xlat
xchg
jl
add
lods
jae
dec
dec
call
jg
add
add
fisubrl
xlat
iret
push
test
rolb
ja
outsb
jp
pusha
add
add
mov
lock
jbe
cld
std
mov
add
lahf
push
stos
fst
sub
or
mov
inc
add
add
fnsave
add
aam
inc
add
add
addl
stos
loopne
push
mov
decl
cmp
notl
mov
add
test
pop
mov
fsubrl
xor
fisubrl
mov
fistpl
jns
add
lcall
add
js
mov
add
mov
xchg
cmp
sub
mov
in
sbb
cmpsl
loop
repz
push
cmp
out
fstp
mov
push
movsl
popa
add
sub
push
jp
pushf
mov
mov
add
jg
adc
adc
and
push
jg
mov
imul
sbb
or
iret
dec
std
mov
push
pop
and
cmp
test
add
add
aad
movsl
add
dec
mov
pop
inc
add
stc
mov
loopne
negb
sbb
rolb
add
fwait
iret
sub
sbb
push
xchg
out
jecxz
inc
add
jmp
add
pop
xchg
push
popa
add
jo
cmpsl
call
popa
add
xchg
loop
push
jns
add
mov
leave
scas
add
movb
xor
test
fs
and
cmp
repnz
pop
mov
mov
add
ja
adc
in
cmc
addb
dec
mov
je
cmp
pop
arpl
decl
cmp
add
dec
test
and
jns
mulb
add
jbe
inc
add
push
lods
add
mov
add
xchg
mov
add
lock
or
mov
cltd
jmp
xchg
arpl
ja
add
add
pop
lock
push
pop
push
mov
fisubrs
add
add
add
psubusw
add
repnz
add
fwait
xchg
sti
test
xor
xchg
jmp
adc
pop
pop
adc
rclb
cmp
cli
pop
add
mov
add
test
dec
dec
imul
and
pop
lret
pop
push
sbb
imul
sub
and
add
inc
add
mov
loop
cmpsb
mov
sub
out
mov
add
add
jns
add
lds
and
jge
xchg
lods
jb
in
lds
xchg
cmp
into
jno
or
pop
loopne
adc
imul
insl
jl
sub
inc
add
xor
pushf
sahf
mov
add
add
push
add
data16
dec
sbb
cmp
nop
imul
adc
mov
add
repz
loopne
adc
pop
sbb
je
xchg
add
dec
loopne
rcrb
xchg
in
add
xchg
adc
ss
mov
mov
out
in
xchg
add
bound
xchg
mov
cmpsl
clc
push
add
rcrl
in
inc
add
mov
mov
sbb
int
movswl
sbb
cli
negb
je
movl
loop
movsl
bound
add
push
sti
les
sbb
xor
add
push
scas
push
aas
movb
sub
and
lds
xchg
mov
sti
and
xor
sahf
xor
jnp
jne
add
dec
jb
cwtl
out
pop
movb
cmp
mov
or
inc
add
add
int3
addl
popf
std
push
mov
icebp
ja
and
lea
jg
sub
xchg
gs
test
add
into
ret
sub
mov
fildl
mov
arpl
or
popa
add
test
dec
movl
hlt
jne
pop
add
stc
out
mov
jmp
sbb
loope
add
enter
jne
mov
mov
dec
push
bound
addl
fmul
roll
pop
fwait
xor
mov
add
scas
inc
add
fndisi(8087
addb
cs
aad
ja
jb
jo
add
mov
jae
lods
and
cmp
pop
gs
mov
call
outsl
xor
repz
add
test
push
add
enter
movsl
adc
mov
add
call
add
jb
inc
add
add
adc
mov
js
add
xchg
in
dec
jb
bound
movsl
inc
add
mov
xor
daa
jl
mov
out
movsl
jnp
int
movl
mov
add
mov
mov
add
mov
clc
mov
jmp
out
js
mov
and
sub
in
popa
add
test
cmp
sbb
hlt
jo
xor
pop
addl
jns
mov
sub
hlt
ret
add
mov
cmc
push
loopne
out
add
insb
pop
inc
add
or
stc
ljmp
adc
pop
outsl
fcoms
into
addl
push
out
pop
std
ret
add
adc
sahf
mov
add
pushf
add
aam
mov
cwtl
in
push
int3
stos
adc
mov
imul
ss
add
sahf
iret
and
push
ret
add
imul
push
push
pop
mov
mov
and
insb
sbb
push
mov
dec
test
fstpl
dec
arpl
sahf
js
idivl
adc
test
addb
out
mull
stos
out
xchg
fwait
cmc
movl
ds
adc
add
inc
add
jo
xchg
cs
add
sub
bnd
xchg
test
imul
jecxz
add
xchg
js
es
in
xchg
inc
add
add
jp
sub
les
int
sbb
mov
add
clc
mov
add
fcoms
inc
add
push
int3
inc
add
fwait
icebp
inc
add
inc
add
xor
das
mov
std
in
aaa
adc
jmp
push
add
add
pop
jnp
inc
add
add
and
push
xchg
je
add
adc
cmp
arpl
lret
inc
add
jp
jl
add
outsb
in
sti
ds
fwait
mov
mov
in
lods
jge
dec
icebp
push
mov
rolb
add
scas
insb
sbb
imul
std
xor
sub
add
out
jo
std
xlat
ret
add
add
push
imul
in
jno
add
add
fcoml
test
ja
push
fwait
bound
inc
add
push
pusha
add
or
scas
sbb
add
loope
mov
mov
push
push
jbe
addr16
sahf
or
mov
out
mov
movl
in
fcoml
add
add
bound
add
popa
add
je
add
loop
mov
add
ljmp
bound
push
ljmp
add
addb
add
jp
jg
push
ret
leave
mov
jp
and
push
shll
decb
in
add
lds
mov
js
les
test
mov
mov
add
jmp
dec
xchg
pop
inc
add
sub
icebp
push
sub
jge
pop
std
mov
lods
cwtl
sahf
nop
dec
mov
insl
push
stos
bound
and
and
dec
inc
add
test
xchg
sti
push
add
fwait
addl
iret
jge
mov
mov
and
add
inc
add
xor
insl
adc
add
cmp
in
shlb
mov
dec
push
fcomps
mov
dec
push
xor
scas
adc
jl
inc
add
pop
cltd
lds
test
push
sti
sbb
das
jl
push
aad
sbb
and
sub
add
push
add
dec
xchg
or
fucomi
lret
sbb
or
enter
adc
lcall
aas
add
jbe
into
mov
movl
or
xor
and
mov
lea
add
fidivrl
into
dec
jmp
add
add
mov
cmpsb
inc
add
cli
add
sub
lcall
addl
lods
push
sbb
popa
add
inc
add
js
inc
add
or
add
pop
test
add
jp
icebp
or
cld
mov
add
jnp
cltd
rolb
push
insl
and
int3
jne
push
add
push
jle
xor
aad
cmp
sub
add
push
scas
pop
xor
hlt
cmp
sti
add
adc
add
ja
jge
xchg
out
dec
addl
sbb
in
test
push
negl
adc
in
inc
add
addb
nopl
lret
aaa
je
inc
add
add
add
lods
cmpsl
js
jbe
add
cmp
jo
pop
out
out
dec
mov
adc
mov
sbb
sub
roll
cwtl
mov
adc
xor
flds
xchg
jp
stc
mov
insl
add
into
or
sub
add
add
pop
xchg
in
adc
lods
cmp
push
es
ja
jnp
xchg
jo
push
std
fldl
add
jge
mov
ljmp
stc
inc
add
rcrl
lea
jb
add
sub
add
ja
adc
fisubrs
push
add
push
sub
push
pop
adc
cmp
add
add
add
push
sub
and
scas
fidivrs
add
bound
push
out
ficoml
movb
popf
jl
in
sub
adc
dec
insb
dec
mov
add
cmp
add
std
js
dec
ret
adc
mov
inc
add
mov
inc
add
add
push
js
xor
sub
cmp
xchg
inc
add
inc
add
mov
aad
testl
enter
add
les
and
stos
stc
test
xor
xchg
cmc
addb
pop
push
and
push
stos
mov
movl
cmpsl
lea
adc
add
add
or
push
inc
add
or
cmp
xchg
lods
ss
adc
adc
mov
stos
js
xor
adc
add
hlt
mov
lea
pop
add
jle
add
add
in
sbb
in
fwait
add
movsl
adc
cmpsl
mov
add
add
faddl
add
dec
roll
movsl
mov
jae
imul
add
add
test
add
inc
add
cld
inc
add
mov
lret
fwait
adc
test
adc
cld
daa
cli
inc
add
hlt
jp
lcall
add
sub
mov
add
add
mov
add
in
pop
sub
fadds
add
shlb
push
sbb
sbb
ja
jle
stos
jns
movsl
adc
and
sahf
stc
jecxz
push
dec
or
inc
add
lcall
loop
movl
push
in
jl,pn
add
scas
imul
cmp
jmp
daa
cmp
xchg
lds
pop
rolb
ret
add
add
adc
shl
mov
pop
jnp
aaa
or
add
fprem
push
inc
add
add
add
roll
inc
add
lock
dec
stos
cmp
add
int3
fcomps
int3
dec
cs
add
cmc
or
fstpl
adc
add
mov
out
dec
pop
jns
and
push
jmp
pusha
add
add
jle
nop
pop
outsb
add
in
mov
test
data16
adc
addl
xlat
jecxz
add
add
push
mov
ds
test
test
xlat
cltd
lcall
add
out
and
adc
add
mov
sbb
ljmp
mov
sub
xchg
add
popf
dec
movb
add
xor
fmuls
int3
addl
lea
sub
or
inc
add
ret
cmpsb
and
cwtl
or
inc
add
inc
add
add
mov
pop
add
push
gs
add
test
sbb
mov
cltd
push
lods
adc
cmpsl
jbe
das
xlat
aaa
mov
mov
out
adc
and
add
outsl
mull
jmp
mov
stc
mov
aas
adc
dec
mov
mov
or
add
test
push
push
out
out
loopne
add
pop
cli
mov
jo
cmp
push
jge
in
mov
cmp
aaa
loop
push
mov
add
lret
dec
jge
jbe
add
jb
xchg
movl
mov
ret
dec
jns
lods
lea
int3
addb
lret
xchg
xor
add
add
inc
add
cmp
in
xchg
out
in
add
sub
adc
movb
sti
cmp
std
sub
imul
popf
xchg
and
mov
into
sbb
int3
mull
and
rolb
jge
std
out
addl
mov
decb
mov
push
mov
push
add
lock
test
and
movb
add
test
aad
mov
les
xchg
pop
add
jbe
lods
xchg
enter
mov
xchg
out
pushf
lret
add
cmp
test
in
jmp
enter
aam
add
cwtl
and
xor
movsl
xchg
or
cmp
stos
ja
sti
cmc
movsl
or
push
add
add
cmp
jp
lcall
addb
mov
faddp
add
add
sarb
add
add
ror
adc
lret
nop
mov
add
std
dec
or
movb
push
rclb
popa
add
dec
icebp
fstpl
lcall
scas
fcom
xor
cmp
add
popf
mov
add
xchg
mov
inc
add
and
sbb
push
addb
sbb
fs
mov
test
insb
movsb
push
cwtl
sbb
inc
add
add
sti
xor
aam
stos
fisubrs
frstor
ret
add
cmp
and
sbb
roll
add
je
add
add
jge
movsl
or
adc
mov
pop
push
cmp
add
mov
jns
sub
add
push
sbb
mov
pop
xchg
movsl
xor
mov
mov
ficomps
cmpsb
mov
loope
push
mov
add
push
dec
out
jns
or
pop
out
shrb
ja
or
test
pop
add
xchg
sub
imul
add
adc
add
inc
add
cmpsb
dec
xor
nop
adc
std
sub
dec
imul
pop
nop
mov
mov
pop
inc
add
add
dec
push
hlt
inc
add
xor
cli
and
sbb
add
aaa
mov
add
imul
imul
cmpsb
push
out
movsw
addr16
bound
push
mov
dec
lods
scas
lcall
sub
push
jno
add
test
stc
cmp
test
add
mov
pushf
test
in
lods
jecxz
addr16
add
cmp
add
notb
rolb
data16
mov
fiadds
add
add
add
mov
addr16
mov
add
xchg
push
add
test
pop
mov
out
test
mov
es
push
push
adc
data16
repz
cmp
jae
mov
mov
lret
dec
cmpsb
jnp
add
jae
xchg
into
js
dec
inc
add
jecxz
lods
sub
push
add
and
outsb
mov
stos
jne
xor
push
lock
and
stc
mov
pop
fwait
mov
mov
stc
jo
sub
lods
inc
add
loope
notb
mov
add
add
sti
dec
sub
out
add
push
add
sbb
in
lds
add
stc
xchg
in
cwtl
xchg
mov
movb
add
mov
dec
or
add
add
test
xlat
int
sub
push
jne
popf
les
jae
cld
rcll
sbb
outsl
inc
add
and
sub
and
cli
and
jg
xor
push
add
add
mov
arpl
data16
add
enter
test
aas
in
movb
fistps
add
add
inc
add
call
mov
movsl
stos
sti
adc
rolb
dec
fnstcw
add
jle
pop
jle
outsl
sahf
int
jmp
stos
out
and
out
push
pop
aad
dec
jbe
ss
xchg
adc
fidivl
mov
lahf
lret
sbb
aaa
dec
fcom
repnz
fists
xchg
xor
pop
push
pop
movb
and
and
movsb
outsl
bound
bound
jg
and
xchg
imul
movsl
in
or
cmp
add
cmp
dec
fisubl
lea
cmc
push
icebp
mov
std
mov
out
jb
or
arpl
inc
add
or
add
dec
sbb
add
bound
movsb
push
lods
mov
push
fists
xlat
mov
mov
out
stc
lea
or
add
pop
pop
inc
add
or
add
xchg
mov
cmp
dec
xor
out
test
pop
movl
daa
insb
mov
pop
scas
sub
add
cmpsb
push
enter
mov
cmp
mov
add
dec
shrl
loopne
xor
ret
fbstp
pop
out
pop
cmc
clc
push
push
fcmove
push
imul
dec
aaa
push
jp
sbb
loop
loop
mov
inc
add
pop
jae
mov
sarb
mov
cmpsb
xor
add
jge
or
iret
inc
add
add
out
stc
lock
mov
mov
pop
movsb
call
sahf
lcall
ja
add
sub
jg
add
push
adc
sub
add
xor
mov
testb
add
bound
dec
sahf
jbe
lcall
add
mov
sbb
cmp
mov
push
xchg
ret
ja
data16
mov
xchg
aas
lahf
pop
dec
jb
add
add
pop
and
adc
sbb
lods
leave
aad
pop
test
movb
pop
or
cli
mov
fsts
sahf
fdivr
fildl
jecxz
add
in
shrb
add
add
gs
ret
add
or
test
sbb
in
lds
xor
std
mov
pop
and
mov
pop
and
sti
arpl
mov
add
xor
add
sbb
mov
movb
pop
mov
movb
inc
add
mov
addb
cmp
xor
inc
add
dec
mov
push
nop
pop
push
sahf
popf
mov
movsb
enter
sub
or
ret
add
int
outsb
xor
add
mov
xchg
push
sbb
add
add
push
push
push
mov
inc
add
dec
inc
add
in
ret
decb
enter
inc
add
mov
daa
mov
fisttpl
or
fisubrs
in
testb
mov
cli
sub
add
jecxz
add
mov
addb
push
ret
add
in
push
loop
and
loop
xor
roll
les
cmp
pop
xchg
push
addb
add
inc
add
ja
cmpsb
push
xor
test
adc
outsb
xchg
or
into
or
add
or
mov
add
add
xor
out
out
push
add
sub
or
add
adc
negl
dec
lret
xor
adc
rcrb
inc
add
add
stc
or
sbb
add
add
or
push
lds
xchg
inc
add
jle
mov
jbe
dec
mov
mov
inc
add
lret
dec
cmp
xor
std
inc
add
mov
add
cld
mov
mov
push
addb
and
add
cmpsl
test
add
popf
pop
fcoms
outsl
pop
aaa
adc
decb
add
mov
sub
mov
cmpsl
or
in
xchg
xchg
xchg
lds
add
push
cmp
call
mov
mov
fstl
lret
mov
rcl
and
fldcw
xchg
rclb
mov
inc
add
add
cli
xor
pop
movl
and
repz
sub
add
mov
inc
add
push
dec
inc
add
add
dec
push
pusha
add
test
pop
movsb
fdivl
sbb
jo
aam
add
dec
or
dec
mov
xchg
push
inc
add
xchg
push
xlat
sbb
or
push
add
add
mov
fisubl
cmp
insb
push
outsl
cwtl
les
adc
into
mov
mov
push
dec
nop
jl
pop
xchg
xor
add
lods
gs
sbb
add
add
mov
stos
test
add
mov
arpl
and
test
dec
mov
flds
add
mov
cld
aad
mov
add
loopne
icebp
movsb
ds
inc
add
test
sbb
cmc
cltd
iret
inc
add
inc
add
add
mov
add
or
add
cmpsb
aad
stos
mov
add
xor
sbb
cltd
ja
cld
movsl
cmpsb
scas
pusha
add
sbb
add
add
push
add
ret
add
jp
push
add
adc
pop
add
xor
add
imul
xlat
les
std
push
imul
leave
cmp
add
add
int
or
mov
out
push
roll
loop
xchg
push
icebp
out
addl
jne
bound
out
or
movl
add
jle
rcrb
add
add
add
ja
cld
jl
adc
sbb
add
fisubs
arpl
movb
fistpll
addb
movb
add
add
lock
imul
in
sub
add
mov
mov
pop
and
inc
add
fsubrs
rcl
ljmp
mov
push
cmp
dec
mov
sbb
xchg
pop
cmpsb
mov
jns
addb
sbb
dec
push
mov
push
add
rolb
scas
outsb
imul
insl
mov
enter
jle
pushf
lret
push
add
insl
sub
sub
inc
add
sbb
popa
add
add
icebp
xor
add
ficoml
lods
xchg
addr16
movsb
ret
add
sub
mov
mov
int
push
add
bound
in
aaa
sub
cmp
jmp
jmp
mov
add
pop
push
add
add
jnp
dec
arpl
sub
push
xchg
movl
add
and
add
repz
call
xor
mov
daa
xchg
out
sbb
mov
add
cmp
outsb
lret
add
dec
and
mov
iret
adc
cmp
pop
mov
jge
add
movsb
lret
gs
mov
cmc
mov
add
cld
mov
add
arpl
mov
int
mov
add
les
dec
and
mov
popa
add
mov
mov
add
addb
lcall
out
jmp
sbb
cwtl
and
mov
jg
add
mov
add
addl
sub
ret
mov
dec
and
push
mov
addb
das
jge
push
fisubrs
inc
add
data16
sub
dec
aad
and
daa
sahf
mov
call
nop
dec
movb
sarb
inc
add
adc
and
icebp
in
add
gs
inc
add
leave
fbld
movsb
xor
leave
aad
addl
add
nop
pop
push
ror
jecxz
push
jg
lea
dec
addr16
fcom
test
out
fistpl
addb
push
or
xor
adc
nop
cmpsl
mov
aad
sub
add
loop
mov
dec
aam
and
sbb
mov
cmp
add
add
jg
add
dec
xor
fisttpl
xlat
xor
es
xor
insl
inc
add
add
add
mov
cld
aas
dec
and
stos
xchg
out
push
out
pop
mov
sub
cmp
xor
jl
arpl
sub
shr
sbb
sbb
or
mov
mov
daa
dec
addl
mov
pop
lret
loop
aas
mov
rcrl
popl
add
das
fcomp
fisttpl
and
lds
stos
addl
sti
pop
sahf
inc
add
add
add
nop
nop
nop
pop
movb
imul
outsl
adc
sahf
xlat
push
les
fwait
jno
mov
add
aaa
lret
mov
jmp
push
or
cbtw
mov
cmp
jmp
push
sbb
add
rolb
add
fwait
push
jecxz
mov
sub
pop
pop
mov
int
aad
movb
stc
loop
div
fstpt
mov
mov
aad
gs
insb
jbe
mov
mov
roll
shl
aas
push
aam
and
adc
cli
mov
ret
add
xor
adc
jmp
dec
fxch
dec
js
mov
movsb
icebp
add
inc
add
push
xor
arpl
je
push
sahf
dec
mov
shrb
add
mov
lods
mov
aas
cmp
mov
xchg
sbb
sti
out
cs
xlat
int3
nop
ds
stos
inc
add
nop
ss
jne
add
mov
out
adc
in
or
mov
add
lahf
jmp
lcall
fabs
cld
icebp
ret
add
bound
popf
sbb
nop
sub
xchg
gs
xchg
loope
mov
iret
scas
pop
xchg
stos
js
ja
int
arpl
dec
mov
out
lcall
das
inc
add
push
cmp
outsl
fists
out
push
dec
cmpsl
adc
mov
push
cli
aad
add
push
inc
add
sbb
out
mov
pop
push
insl
sub
dec
hlt
in
test
popa
add
int
sub
push
stos
cmpsl
jp
dec
std
or
stc
lods
frstor
xor
pop
roll
add
mov
sti
and
dec
out
add
mov
pop
inc
add
pop
push
outsb
stc
jno
ret
es
pop
iret
dec
cmp
imul
pusha
add
pop
and
sbb
fwait
and
push
or
jnp
out
pop
lods
insl
xchg
outsb
xchg
hlt
sub
add
in
mov
xchg
roll
sbb
nop
rcl
sti
mov
and
lock
fists
inc
add
inc
add
jl
mov
cmp
add
popf
repz
lret
or
int3
sbb
jnp
push
lcall
pop
mov
and
sub
jge
add
lds
iret
xor
movb
add
sub
stos
sbb
and
sbb
pushf
stos
addl
scas
std
mov
add
test
cmpsl
lahf
pop
incb
cmpsl
popa
add
mov
add
push
addl
add
or
cmpsl
and
clc
lcall
and
fdivrs
arpl
shlb
cmp
jecxz
mov
xchg
mov
clc
stc
fdivs
add
in
ljmp
les
clc
cmp
imul
sub
movsl
add
xlat
stos
pop
add
jmp
add
and
jne
mov
testl
ret
xchg
insb
sbb
mov
leave
mov
std
ljmp
xor
das
add
add
jns
loope
jns
jge
iret
xor
cld
daa
loop
add
cmp
in
fwait
mov
loope
mov
mov
mov
sub
pushf
xor
into
arpl
pop
jl
cs
push
jmp
pop
xchg
movw
ret
add
and
or
inc
add
mov
test
iret
add
je
add
and
push
icebp
jbe
inc
add
cmc
mov
xchg
adc
cmpsl
hlt
adc
xchg
jp
mov
rolb
mov
cmp
jl
xor
sub
add
daa
jns
and
jecxz
sar
pop
rolb
add
pusha
add
push
add
add
inc
add
pop
movsl
sub
inc
add
inc
add
pop
movl
add
out
lea
outsb
sub
call
cmp
fidivs
cmp
insb
test
movsb
js
pop
in
inc
add
pop
inc
add
push
movb
mov
lcall
iret
mov
ja
mov
pop
add
jno
cmp
dec
xor
mov
cmpsb
addl
jle
pop
jecxz
add
xor
add
mov
pop
pop
insl
xor
add
popa
add
add
and
test
sub
push
je
add
push
add
add
ror
xchg
sub
shll
fldt
flds
push
movl
outsl
adc
jmp
dec
and
ljmp
add
add
icebp
mov
aaa
mov
and
jge
xor
inc
add
iret
dec
in
fnstsw
adc
dec
outsl
outsb
push
mov
pop
movsb
fstpt
add
aad
std
inc
add
add
iret
fildll
jge
int3
push
cmp
xor
lods
insb
jae
xchg
adc
inc
add
pop
mov
movb
and
cwtl
incl
add
sub
lods
cmp
jne
inc
add
sbb
movb
fstpt
push
push
cld
pop
fwait
pop
pop
mov
int3
mov
add
dec
jl
jmp
xor
push
scas
lret
mov
add
rorb
loope
add
repz
mov
loop
add
add
xor
jo
mov
xlat
les
pushf
inc
add
sub
sbb
inc
add
ljmp
xchg
jg
addl
dec
loopne
std
xchg
jae
add
sub
and
add
add
aad
popf
insb
push
mov
add
ret
add
dec
jno
inc
add
bound
or
sarb
add
call
cld
dec
fdivr
sub
add
pop
pop
imul
pop
add
roll
add
add
add
jmp
test
jg
dec
or
add
hlt
lods
push
mov
das
es
jge
sub
test
mov
jge
testl
addb
gs
sbb
cwtl
call
and
adc
cmpsb
or
lcall
testl
rdmsr
mov
inc
add
sbb
add
mov
fidivrs
stos
or
or
xchg
xor
adc
xor
add
sub
push
push
movb
aaa
inc
add
fmulp
inc
add
xchg
push
or
lret
ja
int
pop
fwait
sub
inc
add
mov
xchg
push
lahf
mov
sti
inc
add
pop
mov
int3
jne
hlt
lock
ficomps
jns
and
xchg
cmp
lahf
xchg
mov
adc
repnz
and
and
mov
movsl
js
mov
jecxz
jno
cmp
ljmp
gs
mov
mov
add
dec
cmp
adc
pop
add
add
pop
fbld
add
mov
xchg
mov
cmp
cmp
xor
pop
mov
rolb
dec
jo
jae
sub
clc
popf
roll
in
add
stos
cmp
je
add
test
test
movsb
sbb
pop
call
loopne
add
and
lahf
jle
jo
add
test
loop
lret
inc
add
pusha
add
add
faddp
add
sub
ds
add
les
mov
leave
enter
outsl
push
ds
adc
adc
inc
add
inc
add
xchg
inc
add
xor
or
inc
add
lret
cmp
les
rcl
pushf
xchg
stos
cwtl
ja
add
add
ds
loop
add
push
sub
or
ret
add
push
ret
add
adc
add
jecxz
cmpsl
mov
sub
add
add
enter
std
xlat
pop
xchg
jo
add
fidivrs
jns
add
xor
add
add
enter
add
pop
out
gs
enter
imul
xor
and
aam
add
dec
add
jo
or
sbb
lds
mov
bound
lret
add
aam
mov
popf
movl
ja
cmp
xor
add
and
dec
sub
fwait
in
xchg
inc
add
scas
and
xchg
enter
test
addb
mov
pop
add
add
imul
mov
pusha
add
repnz
pusha
add
fmul
pop
addb
add
lods
xor
sbb
jecxz
xchg
inc
add
mov
or
adc
cmpsl
cltd
in
mov
add
mov
shll
add
add
xchg
je
fldt
fisubrs
out
mov
movl
xor
pop
push
mov
cmc
test
repnz
test
mov
dec
pusha
add
or
xor
dec
js
mov
push
jl
add
add
inc
add
addl
les
pop
fucom
fstpl
aam
push
hlt
addr16
inc
add
fsubrp
or
scas
mov
loopne
add
cwtl
jb
sbb
sub
call
cmp
outsl
sbb
cmc
pop
add
scas
push
add
adc
mov
jb
add
rolb
pop
adc
bound
clc
stc
add
xor
and
test
roll
add
pop
movb
or
jmp
inc
add
pop
out
mov
test
into
movl
push
add
insl
cwtl
mov
dec
addl
xor
cmp
insb
jae
push
or
mov
cs
jp
add
mov
add
insb
fildll
cmp
pop
sub
push
icebp
lea
xchg
inc
add
jle
addb
add
enter
pushw
data16
or
add
and
add
cli
sbb
movsb
jns
cmpsl
inc
add
add
pop
xchg
dec
sub
xchg
test
popa
add
add
xchg
sbb
mov
sub
notb
cmpsb
add
out
stc
loopne
and
add
incb
shr
mov
add
sub
je
jecxz
out
fucomp
xor
notb
sbb
inc
add
repnz
ljmp
lahf
adc
movl
xchg
mov
testb
fisubs
inc
add
jns
inc
add
add
rcrb
add
xor
fs
add
lea
arpl
mov
mov
lret
xlat
ljmp
lahf
jl
sbb
lret
push
mov
outsl
add
push
insl
inc
add
sbb
or
dec
bswap
or
add
test
addb
add
add
imul
xchg
add
lcall
popa
add
jns
lds
pop
dec
mov
adc
int
lods
out
push
cmp
xchg
outsl
adc
data16
daa
mov
push
in
adc
lcall
ja
sbb
das
hlt
cmp
add
nop
hlt
sub
cs
push
fldt
add
pop
scas
scas
cwtl
jbe
or
add
mov
daa
call
mov
leave
dec
daa
rorb
push
das
jl
pop
fcomp
and
fistps
stos
inc
add
cmp
xor
adc
add
rolb
imul
roll
cmpsl
or
shlb
add
pop
push
insl
lds
push
in
rdmsr
cmp
and
lods
call
lods
in
idivb
ret
add
lret
pop
mov
rorl
dec
adc
mov
in
addb
xchg
enter
inc
add
mov
movl
inc
add
stos
addl
fcmovnu
addb
icebp
into
dec
cs
inc
add
cmpsb
mov
test
outsl
inc
add
lret
pop
hlt
stc
sub
add
jp
push
sub
test
jp
add
mov
insb
xchg
jp
add
jbe
jg
in
mov
add
aaa
negb
mov
mov
stos
sbb
in
pop
ljmp
xchg
mov
std
loope
push
div
int3
mov
test
sbb
mov
addl
add
fs
ljmp
add
jl
pop
call
push
rcl
xor
int3
push
xchg
leave
in
xchg
rolb
mov
mov
paddw
cmp
adc
add
jnp
xor
jae
xchg
adc
adc
lods
xor
mov
add
add
adc
mov
add
sub
pop
leave
lds
sub
aaa
jp
pop
adc
lock
repz
in
lods
push
add
add
add
rcll
add
les
pop
arpl
in
push
jp
aad
and
jb
pop
xchg
stc
movl
lea
and
sub
insb
ss
ja
xor
cmp
cmp
aad
es
sbb
jae
mov
divb
lcall
mov
mov
xchg
movsl
pop
or
inc
add
ds
jns
dec
pop
mov
pop
add
fidivrs
ficompl
arpl
popa
add
data16
dec
ljmp
incl
xchg
inc
add
in
arpl
es
out
sub
push
insb
out
sub
inc
add
pop
insl
sbb
xor
add
push
pop
inc
add
loop
lea
daa
sbb
insb
addl
aad
add
inc
add
sbb
scas
test
das
sub
cli
xor
test
aaa
addb
mov
add
add
lods
fwait
or
add
mov
adc
dec
mov
xchg
xchg
addl
insb
mov
and
les
xchg
and
and
xlat
mov
mov
add
into
scas
nop
in
ret
add
add
mov
out
out
mov
push
mov
shll
add
fistps
test
test
in
jecxz
int
add
insl
and
notb
push
cmp
imul
lds
inc
add
jne
sbb
jle
mov
mov
lcall
push
pop
addr16
fwait
cmpsl
fdivrp
sub
sub
adc
inc
add
out
jecxz
roll
rcrl
gs
jmp
call
pop
testb
pop
daa
cmp
inc
add
xchg
repz
cli
lcall
addl
xor
add
jp
aas
sub
cmp
leave
add
les
mov
test
popf
pop
and
pop
cmpsb
jge
add
les
aaa
leave
popf
mov
cmc
repz
push
push
addb
add
pop
add
addl
mov
imul
xor
add
cld
mov
out
cwtl
es
and
adc
adc
add
add
in
pushf
dec
int3
stos
popa
add
mov
dec
cmc
ret
add
loope
xchg
pop
push
fildl
ja
mov
aad
add
jp
movl
jno
fxch
push
mov
and
pop
imulb
add
fs
add
add
loop
xchg
pop
fildl
add
stos
addl
cmp
xchg
aas
jae
cld
xchg
sub
nop
je
pop
fwait
lret
xchg
scas
das
pop
loop
dec
lahf
mov
pop
pop
dec
fldcw
pop
cmp
leave
jb
ljmp
lea
jne
bnd
add
scas
stos
movsb
test
or
push
lret
addl
mov
int3
cmp
testl
mov
add
xchg
in
add
cmpsl
mov
add
aaa
pop
xor
pop
mov
lods
imul
mov
out
mov
fs
dec
pushf
sub
push
test
push
shlb
loop
fs
pop
xor
mov
inc
add
ss
inc
add
bound
loopne
add
xchg
hlt
sub
sbb
cld
cmc
add
pop
xchg
push
ret
addl
cmp
xchg
call
shll
cld
and
mov
add
adc
clc
xor
add
cmp
add
mov
dec
jns
imul
iret
insl
inc
add
mov
mov
add
add
add
dec
sbb
add
xchg
xchg
mov
add
add
mov
add
ret
xchg
and
add
movb
icebp
iret
push
cmp
pop
sbb
fwait
xchg
cmp
cmp
xchg
mov
scas
mov
cltd
push
pop
sub
or
cltd
jnp
rolb
xlat
sti
insb
insb
mov
movl
add
xor
mov
neg
outsl
nop
push
mov
sub
int3
sbb
push
js
push
push
out
or
cmp
mov
mov
in
out
fidivrl
add
adc
add
mov
repz
pop
jmp
add
bound
and
addb
xchg
mov
add
in
arpl
aas
into
inc
add
mov
insl
push
out
dec
movb
add
in
das
inc
add
jl
js
mov
inc
add
dec
jle
mov
mov
add
out
cmc
addr16
pop
sbb
enter
add
outsb
cmp
inc
add
notl
movsb
mov
sbb
mov
add
mov
push
aaa
jne
or
dec
enter
lds
mov
inc
add
and
cmc
and
std
jecxz
ret
add
add
mov
test
pop
sbb
lret
test
rclb
imul
add
das
push
aad
pusha
add
clc
int
movl
xor
testl
cwtl
or
out
mov
push
mov
loope
or
cmp
xchg
idivl
out
inc
add
add
pop
pop
leave
lods
shlb
insl
fwait
jl
add
loopne
xchg
and
adc
ljmp
pop
and
add
inc
add
lods
std
div
push
mov
cs
ljmp
cmp
icebp
xor
cld
icebp
or
popa
add
shlb
in
add
push
mov
shrb
push
std
lods
daa
pop
arpl
lds
mov
add
lret
addb
pop
repnz
xchg
lahf
sub
sbb
mov
xlat
in
ljmp
sub
sbb
fprem
sub
lcall
add
pop
lahf
jne
mov
add
inc
add
scas
xchg
add
loope
xchg
addr16
rcr
jb
add
loopne
ds
lret
pop
inc
add
jo
cmp
pop
nopl
add
jl
jns
jp
in
fwait
das
loopne
push
loop
ljmp
out
mov
lcall
jne
inc
add
mov
adc
repz
cld
ss
mov
mov
xlat
iret
dec
dec
lret
sti
jle
xor
sbb
jecxz
movb
in
repnz
xor
push
mov
popa
add
lock
test
fistpll
iret
aaa
push
cmpsl
or
stc
sbb
inc
add
aam
sbb
sbb
xchg
inc
add
sbb
sbb
push
xor
pop
inc
add
mov
jl
out
pop
cwtl
je
add
add
sti
jne
loope
add
mov
jae
mov
pop
adc
dec
xor
out
js
mov
add
inc
add
push
aas
inc
add
jns
cld
xchg
movsb
out
add
add
addb
add
scas
inc
add
lcallw
divl
add
ret
add
pop
ja
insl
mov
add
jge
sti
and
cmc
fs
add
pop
cwtl
sbb
inc
add
es
nop
jo
xor
std
xlat
roll
je
mov
adc
dec
jns
test
daa
adc
inc
add
mov
ret
mov
inc
add
add
add
addl
cli
dec
push
dec
sub
lcall
cmp
inc
add
lods
sub
sbb
push
xchg
int
sub
adc
gs
outsb
jno
or
xor
adc
adc
stc
mov
stos
pushf
mov
out
push
add
adc
movb
sub
add
movl
add
mov
cmp
mov
push
pop
pop
or
push
push
repnz
pop
in
push
or
movb
inc
add
bound
sbb
xchg
jmp
push
sarb
push
mov
jns
sub
loope
jno
pop
push
ret
inc
add
push
inc
add
addb
and
sub
add
dec
fistpll
shll
mov
add
mov
add
test
jl
popf
roll
sbb
push
push
add
into
lea
add
divl
imul
xchg
jmp
add
movsb
test
pop
jge
adc
xor
jns
sahf
pcmpgtw
add
clc
aam
negb
inc
add
mov
or
lret
push
mov
inc
add
arpl
jb
add
stos
loope
xchg
xchg
les
cld
clc
dec
cwtl
out
xchg
imul
xchg
mov
cmp
sub
stc
dec
dec
and
loope
adc
sete
das
push
mov
sbb
rcpps
add
rcll
mov
ret
add
adc
jl
jns
pop
add
mov
add
add
stos
arpl
pop
and
xor
sub
lock
in
fs
setle
add
mov
loope
sub
add
pop
js
gs
xor
pop
mov
adc
and
mov
int3
push
dec
pop
out
dec
mov
xor
add
je
add
mov
pop
fs
scas
lret
std
pop
fnstcw
add
arpl
jp
fsubrs
repz
lret
xor
add
notl
js
push
push
icebp
or
in
add
pop
mov
das
xor
shlb
int
add
or
mov
arpl
mov
pop
add
repnz
fidivs
mov
arpl
pop
lds
sbb
stos
test
mov
or
adc
loopne
fldt
jecxz
movl
test
and
fs
jmp
add
out
add
aas
cmp
stos
pop
rolb
add
xor
out
mov
scas
addr16
stc
aaa
or
shlb
movl
xor
add
adc
mov
lods
or
sti
pop
xchg
dec
xchg
addb
or
ja
dec
repnz
add
mov
adc
sub
cli
notb
sub
cmp
mov
std
xchg
sti
pop
arpl
cli
mov
push
pop
fwait
mov
aam
test
cmp
loop
and
pop
mov
ret
jge
add
gs
shl
and
mov
add
add
add
lahf
adc
sti
xor
mov
roll
cmp
addb
cmp
loopne
fistps
frstor
rolb
addl
and
outsl
add
pusha
add
ss
lcall
jnp
cmp
sbb
ja
gs
lcall
decl
mov
add
cmp
add
notb
fs
pop
jae
add
sub
xchg
pop
sahf
pop
dec
inc
add
popf
sbb
add
add
dec
and
sbb
add
ja
mov
stc
sbb
outsl
pop
inc
add
cwtl
sbb
cmpsb
scas
ljmp
repnz
stos
roll
mov
inc
add
sbb
or
jae
lret
add
scas
push
cmp
cld
lds
ja
push
add
adc
add
dec
and
xchg
les
lods
in
add
mov
in
jns
sub
roll
xchg
test
shll
pushf
lds
cltd
dec
loopew
addl
stc
jl
popa
add
ret
mov
cli
push
and
out
xchg
test
leave
leave
mov
mov
mov
in
outsl
jae
pop
jo
aam
push
hlt
inc
add
call
mov
dec
lret
mull
jo
add
jno
outsl
cli
sti
jle
sbb
loopne
ja
jecxz
add
cmc
push
scas
jnp
pop
jno
mov
test
sub
test
inc
add
loopne
inc
add
addl
or
jle
dec
in
ja
aas
clc
cmp
lods
fnstenv
hlt
mov
jge
sbb
sub
lds
test
lods
xchg
dec
push
stos
leave
sbb
ja
mov
or
loop
add
aaa
cmp
mov
push
add
rolb
or
add
fdivrs
mov
inc
add
pushf
arpl
ljmp
stos
or
inc
add
xchg
pop
rcrb
lret
faddp
add
iret
sub
mov
sbb
sbb
scas
test
scas
addr16
ljmp
dec
in
and
add
aam
and
inc
add
es
lret
js
mov
scas
cltd
mov
add
cmc
stos
lret
push
clc
and
or
add
add
dec
mov
push
mov
push
roll
stc
sbb
jge
add
add
jge
bound
jne
jnp
mov
iret
stos
mov
push
mov
xchg
icebp
pop
xor
jns
mov
cmp
xor
push
ja
add
ret
mov
mov
dec
dec
mov
push
cmpsl
adc
sbb
add
fldcw
enter
mov
push
push
dec
dec
pusha
add
sbb
add
inc
add
test
lret
enter
inc
add
xor
out
es
add
xor
add
jp
sbb
inc
add
les
incl
jbe
adc
into
clc
lcall
mov
or
lods
cwtl
in
fiadds
xchg
dec
inc
add
mov
icebp
jae
sbb
inc
add
add
and
call
loopne
dec
pop
stc
idivl
lahf
pop
imul
add
dec
cmc
data16
arpl
pop
addl
aam
loope
fmull
inc
add
stos
fwait
imul
xlat
and
pop
adc
add
add
adc
xor
add
scas
pop
in
andps
leave
addl
addb
sub
add
addl
test
ja
addb
mov
rclb
add
add
push
pop
sbb
adc
add
mov
fnstenv
pushf
daa
pop
sbb
cwtl
mov
push
cmpsb
inc
add
out
cmp
pop
and
fiadds
sbb
arpl
inc
add
clc
push
cmpsl
bound
fs
xor
shll
add
add
add
jae
inc
add
add
mov
add
pop
add
add
add
out
cmp
push
pand
mov
add
in
add
add
ja
pop
int3
nop
sbb
cmp
popa
add
mov
adc
ret
xchg
xlat
mov
lahf
jg
adc
pushf
mov
mov
mov
mov
add
mov
jne
sti
lcall
jecxz
pop
bound
int3
push
and
lcall
push
cmpsb
mov
dec
or
add
add
add
inc
add
insl
clc
movl
mov
add
add
sub
add
and
popa
add
dec
iret
loopne
xchg
mov
and
imul
and
lret
mov
mov
xchg
pop
pop
mov
repz
int3
add
mov
stos
ss
dec
jle
loopne
add
enter
pop
test
jge
fs
fs
cld
fnstcw
or
jbe
or
stc
fwait
push
mov
stc
shlb
fcoml
push
notb
popl
add
pop
adc
or
jbe
xchg
xchg
cmc
stos
cmpsb
rcll
dec
push
lods
mov
in
ret
cld
pop
mov
stc
aas
loopne
xchg
sub
mov
mov
test
les
and
mov
iret
test
ljmp
xchg
mov
xchg
loopne
push
cs
adc
sbb
out
scas
sti
pop
mov
add
addb
shlb
inc
add
pop
mov
xchg
fsubrl
sub
into
mov
sub
jge
or
add
pop
sahf
js
mov
stos
addb
mov
stc
mov
add
add
adc
in
out
test
dec
sahf
test
add
mov
mov
outsl
jle
je
dec
test
jg
call
dec
popa
add
sarb
xchg
jno
xor
bound
cltd
enter
lret
clc
cmpsl
dec
inc
add
xor
add
adc
mov
fldenv
add
nop
movsb
xchg
pop
bound
add
sub
dec
imul
aad
stos
gs
data16
aas
outsl
nop
cmp
loopne
add
push
addb
sub
add
add
cmp
add
lcall
fprem
or
testl
pop
dec
pop
jae
test
xchg
xchg
lret
int
pushf
hlt
addb
add
ja
icebp
dec
push
stc
int
dec
cmp
xlat
das
inc
add
ljmp
sbb
movb
cld
lea
xor
xchg
sub
mov
or
scas
lret
out
adc
fstpl
add
xchg
xchg
ret
add
add
add
sbb
add
lahf
cmp
xchg
mov
insb
jp
lcall
add
jecxz
add
inc
add
mov
or
xor
push
insb
dec
fsubrs
rolb
div
dec
cmc
xchg
or
addl
lds
sbb
js
ret
add
add
sub
add
ljmp
pop
sbb
lods
add
or
add
add
and
push
sbb
cli
pushf
xchg
jno
test
out
fisubrl
insb
xor
das
pop
mov
or
mov
movb
pop
fists
shll
movsl
xchg
pop
popf
outsl
or
leave
pop
add
xchg
pop
popf
mov
das
lods
push
mov
pop
inc
add
dec
pop
and
xchg
test
addb
adc
jae
add
adc
popa
add
mov
leave
cld
int3
mov
bound
cmc
mov
data16
roll
mov
out
insl
fwait
insb
cltd
or
push
add
adc
add
add
cmpsb
dec
jmp
sti
stc
lcall
addb
jae
inc
add
add
jge
movsb
addb
add
add
push
lret
movsb
addl
es
mov
lret
mov
in
xchg
adc
in
popf
add
adc
and
scas
jne
dec
popa
add
shr
push
out
movb
jo
pusha
add
xor
push
fimuls
add
ss
mov
add
fiaddl
add
pop
sti
dec
jns
or
xchg
push
jmp
jp
rolb
repnz
add
pop
inc
add
fwait
jbe
push
sub
repnz
dec
addr16
add
test
scas
mov
add
xor
sahf
or
add
mov
movsb
cmc
sub
es
add
sub
push
mov
ds
scas
jae
enter
aam
cs
dec
inc
add
adc
mov
cmpsl
in
mov
add
sub
pop
mov
out
mov
sub
or
jno
cmp
leave
mov
adc
jge
add
or
xor
add
stos
mov
aad
mov
movb
addb
fisubl
add
out
in
mov
mulb
fcoml
push
jb
mov
out
push
addr16
pop
stos
pusha
add
add
and
out
stos
dec
iret
cld
sub
outsl
push
insb
sub
add
push
push
ja
add
add
fsubp
aam
or
add
jb
dec
pop
int3
daa
pop
cmp
xchg
mov
add
push
mov
xor
outsb
rolb
mov
imul
jg
scas
movl
data16
jle
movl
add
dec
jmp
jae
push
or
or
add
add
lea
pop
loope
dec
xchg
inc
add
push
rolb
roll
ret
add
add
cmc
push
sbb
xchg
mov
jb
addl
add
fldenv
bound
sti
insb
mov
leave
adc
popf
addl
jnp
mov
stos
pop
aas
icebp
jl
add
addl
cld
jae
inc
add
js
add
das
faddp
add
add
and
roll
pop
and
push
ret
add
insb
sti
out
rolb
mov
movb
mov
add
in
mov
aam
movsb
dec
xchg
jp
pop
sub
cli
xchg
adc
mov
movl
aaa
mov
pop
stc
sbb
sbb
cwtl
gs
add
pop
add
roll
inc
add
add
insb
mov
add
imul
xchg
push
add
mov
dec
mov
sub
call
jae
add
pop
add
sub
loop
pop
inc
add
ljmp
call
inc
add
add
push
xchg
mov
lds
movb
push
xor
inc
add
mov
test
and
xchg
les
popa
add
mov
add
ret
or
sbb
ss
add
jnp
in
enter
add
mov
sub
jmp
add
cli
fistpl
push
pop
cmovge
sub
add
addl
pop
sub
addl
add
jp
in
mov
xchg
cmc
jge
sub
ret
add
jbe
xchg
pop
mov
in
mov
push
loopne
or
sbb
sub
add
add
mov
mov
ret
add
cwtl
push
movsl
call
add
cwtl
out
loop
fcomps
dec
cld
adc
lods
int3
rolb
leave
pop
xchg
das
fwait
dec
leave
roll
ret
add
add
cmc
jle
xchg
enter
or
add
cld
ds
dec
adc
repnz
testb
loopne
in
dec
cmp
bound
cmp
mov
arpl
popf
inc
add
addb
add
mov
stos
mov
lahf
ret
lahf
movl
std
jg
outsb
stos
out
popf
mov
xchg
std
inc
add
mov
stc
or
addb
add
mov
inc
add
mov
icebp
addb
add
add
jne
test
add
add
push
jmp
push
in
xor
hlt
xor
add
test
insl
lahf
stos
bound
and
adc
das
sti
jp
movsl
aas
sub
and
mov
pop
or
add
mov
or
rolb
jge
add
sbb
or
sahf
addb
addl
leave
pop
aam
lock
add
or
aaa
daa
sti
out
test
daa
or
movb
lds
mov
fidivrl
add
int3
xchg
in
lods
mov
jge
add
je
dec
jecxz
call
inc
add
xchg
roll
add
aaa
movb
add
mov
add
mov
add
xchg
addb
add
add
xchg
mov
pop
fdivrs
out
enter
xor
jl
iret
sbb
dec
xchg
mov
sbb
and
or
push
movsl
fs
and
popa
add
addl
add
and
mov
dec
pop
loop
adc
clc
popa
add
add
sbb
mov
cmp
adc
daa
js
mov
bound
sarl
cltd
outsl
ja
mov
scas
fdivs
int3
divl
movl
and
adc
cltd
mov
add
lret
aad
lea
mov
mov
roll
inc
add
add
mull
sahf
push
ljmp
add
mov
add
cmp
pop
movsb
add
in
jns
sub
lods
mov
hlt
lahf
dec
inc
add
push
sub
adc
jns
inc
add
add
pop
add
add
dec
fnstenv
bound
sub
add
adc
xchg
mov
jbe
mov
ret
and
jno
out
pop
mov
push
bound
mov
movsb
mov
arpl
mov
add
imul
add
sti
cmp
add
mov
or
movsb
pop
add
add
dec
ja
push
xor
mov
sbb
dec
rolb
add
imul
and
call
add
xchg
mov
pop
sub
mov
movsl
cli
pop
aad
inc
add
xor
int
fldl
mov
mov
push
fwait
or
xchg
xor
dec
sbb
cs
dec
dec
mov
inc
add
test
inc
add
iret
and
add
jno
clc
movsl
pop
adc
xor
aaa
and
sub
mov
pop
add
push
inc
add
test
lods
ja
ljmp
lret
jne
sub
fcomps
clc
sub
and
push
sbb
out
pop
adc
cmp
add
push
add
jp
mov
addb
pop
test
adc
lock
pop
inc
add
adc
add
mov
pop
repz
ljmp
or
push
sub
cmp
lcall
outsb
push
adc
add
out
je
stos
clc
add
mov
add
sub
mov
xor
gs
int3
mov
xor
add
mov
movl
out
ret
xor
xchg
decl
ds
rolb
mov
inc
add
cmpsb
dec
mov
insb
test
fildl
psubsb
fsubrs
sbb
sbb
addr16
add
fadds
dec
jecxz
or
sbb
add
movsb
xor
aad
aas
idivl
ffreep
add
lret
add
add
mov
add
int3
add
cld
mov
xchg
add
sbb
add
out
outsb
insl
xchg
test
cmp
mov
mov
movb
cmpsl
xor
testb
test
xchg
aad
fstps
sbb
xor
shlb
adc
ds
add
pop
rclb
fiaddl
add
pop
into
addl
add
ss
add
lods
jne
test
fstps
int3
aas
ud1
outsb
shll
xchg
scas
movsb
sti
dec
clc
sbb
add
add
pop
std
inc
add
and
sub
mov
sub
sti
pusha
add
pop
bound
stc
or
dec
sbb
pop
out
dec
int
add
repnz
add
add
sbb
ficomps
push
popf
inc
add
loop
add
adc
add
aas
mov
add
cmp
xchg
cmp
add
cltd
mov
add
add
dec
rcr
jmp
enter
je
dec
add
xor
jo
add
lds
jne
aad
pop
add
push
add
add
sub
dec
out
push
jne
adc
das
shrl
xlat
inc
add
dec
mov
pop
in
add
and
sub
mov
imul
push
or
ret
add
add
add
pop
pop
pop
xchg
shr
push
pop
hlt
test
add
jns
int
rcrl
das
jno
mov
pop
popa
add
add
rclb
add
cmp
cmpsb
call
daa
mov
push
cmp
adc
addl
jmp
sbb
add
push
jl
sub
mov
rolb
test
or
jmp
jns
ror
lock
std
cli
pop
pop
popf
ror
push
add
mov
mov
aam
in
and
hlt
xchg
bound
mov
cmp
push
cmp
pop
add
in
cmc
jne
stos
xchg
in
xchg
imul
add
or
add
jecxz
add
xor
sbb
call
adc
test
nop
sbb
dec
or
add
mov
jb
add
add
fmulp
ja
add
jmp
add
test
sbb
ret
add
iret
dec
mov
pop
xor
mov
fstl
push
add
and
jbe
add
std
loope
mulps
mov
cld
int3
or
add
add
pusha
add
es
add
or
outsb
enter
cmp
add
add
ret
add
pop
pusha
add
stc
daa
mov
popa
add
inc
add
neg
xchg
or
adc
add
xor
fsts
scas
imul
add
add
mov
xchg
mov
bound
ljmp
ret
xchg
clc
push
lods
xor
mov
or
sub
in
imul
pop
push
push
add
icebp
imul
add
cmp
pop
insl
jne
fs
cli
addb
mov
test
arpl
mov
stc
aaa
adc
jecxz
add
lahf
and
cmp
dec
mov
push
inc
add
jo
cmp
pop
add
add
test
lods
mov
mov
xor
dec
pusha
add
out
hlt
push
in
pop
addb
or
test
cs
push
dec
add
lds
xchg
or
dec
or
mov
sub
jno
std
movb
icebp
adc
add
xor
out
and
mov
dec
xchg
mov
xor
or
mov
sbb
dec
lahf
mov
cmp
adc
pop
add
movsl
test
imul
push
add
std
or
mov
enter
pop
fsts
es
scas
sbb
add
les
dec
fsts
hlt
xchg
sbb
jno
push
roll
in
mov
cs
push
lods
push
stos
mov
xchg
cmp
dec
cmp
and
and
inc
add
jp
pushf
xchg
in
popf
aas
pop
repnz
std
jnp
pop
icebp
push
jl
adc
repz
fadds
sarl
inc
add
add
fld
add
add
inc
add
sub
fstp
and
fistpll
jne
push
sub
cmc
int
popa
add
sub
push
stos
fucomip
fs
mov
xchg
mov
es
jae
jecxz
in
movsb
roll
push
addl
icebp
push
add
cmc
and
dec
adc
out
lods
movnti
push
mov
adc
lcall
ljmp
cmp
fbstp
mov
jbe
mov
imul
add
mov
in
frstor
flds
mov
mov
add
jns
dec
mov
xor
dec
addb
int
pop
push
outsl
pop
xchg
xchg
and
out
add
push
insb
cli
cli
xor
cmp
add
lea
add
dec
pop
negb
test
mov
xchg
insl
mov
jp
ljmp
xchg
jns
inc
add
ljmp
add
add
fldt
add
cmp
cmpsb
mov
dec
int3
dec
outsl
clc
mov
mov
add
imul
test
pushf
cmc
add
fisubrl
mov
sbb
sbb
add
je
push
adc
test
and
inc
add
inc
add
out
lods
stos
xchg
hlt
bound
cmp
pop
add
push
add
mov
cmc
es
data16
xor
addl
mov
xchg
push
and
mov
add
adc
inc
add
je
pop
enter
xchg
push
inc
add
mov
add
add
addl
ret
loop
sahf
mov
roll
add
divb
add
ret
aad
arpl
and
jb
dec
jl
dec
std
or
mov
inc
add
add
xor
jp
cltd
push
xchg
lahf
xor
mov
addl
cli
dec
and
jbe
mov
mov
jbe
mov
push
jge
mov
dec
push
rolb
lds
push
add
mov
adc
cmpsl
lods
aam
pop
dec
mov
add
std
xchg
mov
lock
cmp
out
popf
cmp
add
pop
rclb
lcall
inc
add
out
movsb
outsb
or
xchg
add
adc
xchg
mov
bound
sbb
mov
jne
add
out
pop
add
push
push
mov
iret
addr16
cmp
dec
insl
xchg
mov
pop
in
aam
stos
je
dec
push
push
rorl
cmpsb
dec
int
movl
add
ret
dec
pop
sete
mov
mov
movl
mov
add
addl
cmp
pop
inc
add
lret
add
mov
xchg
mov
add
fdivr
dec
test
xchg
fsubl
add
xchg
movsb
movb
add
xchg
xchg
dec
mov
xor
cmc
push
dec
jge
add
xor
ljmp
or
jns
jl
push
add
xor
push
add
jle
push
lods
in
cmpsl
add
xor
add
add
rolb
xor
cmp
movb
xor
or
add
mov
out
shll
push
imul
or
xchg
cli
in
outsb
int
xchg
jnp
popa
add
add
movl
inc
add
rolb
shll
fwait
cltd
pop
add
addl
cmp
jo
fidivrs
add
add
mov
into
jnp
in
adc
add
sbb
add
push
stos
insb
pusha
add
mov
cwtl
and
nop
je
add
repnz
sub
stos
push
lret
movsb
test
fs
inc
add
outsb
filds
adc
mov
pushf
xchg
dec
aam
push
roll
cmovbe
outsb
bound
in
movl
mov
adc
fnsaves
add
jp
mov
and
int3
sbb
push
xchg
bound
loope
push
mov
xchg
enter
dec
out
aam
test
lods
arpl
cwtl
pop
idivb
es
and
push
pop
movsb
bound
sub
add
mov
add
push
pop
pop
fcompl
pop
mov
add
add
adc
stc
imul
test
adc
jg
aam
xchg
and
cld
mov
imul
aam
add
jbe
outsb
sub
insl
aaa
push
add
sub
xchg
mov
mov
ljmp
push
test
in
xor
and
cmp
add
sub
stos
push
adc
cmp
lods
pop
push
jmp
dec
push
stos
jmp
add
sub
lret
inc
add
sub
sub
mov
lret
lea
add
popa
add
leave
aad
imulb
adc
add
cltd
ficomps
jmp
push
lret
xor
xor
ds
jle
hlt
push
js
imul
pop
dec
popf
mov
jecxz
add
jae
daa
add
or
scas
inc
add
in
jmp
xchg
push
mov
lock
push
adc
iret
push
out
movsb
mov
addb
cltd
ja
dec
sbb
es
inc
add
dec
fwait
push
fbld
loopne
es
int3
add
mov
icebp
out
jge
mov
or
loope
les
outsl
out
pop
movl
leave
cmp
add
and
pop
fstpt
addr16
movb
add
pop
pcmpeqd
add
nop
mov
cltd
pusha
add
faddp
add
xchg
popf
roll
add
xchg
shlb
add
and
out
jns
ret
mov
rcrb
aaa
and
insb
stc
lds
outsb
dec
adc
xchg
xlat
pop
lahf
stos
dec
mov
mov
or
mov
add
fwait
ret
ds
jne
xchg
mov
loope
add
add
add
mov
jmp
and
in
add
jp
rolb
pop
out
pop
into
dec
fadds
addl
sbb
cmpsb
jns
addl
and
daa
sti
mov
jle
fwait
out
mov
xchg
ja
push
test
add
cmp
addl
adc
xchg
test
addb
pop
sbb
xchg
push
add
cmp
mov
aam
jno
pop
addl
outsl
jg
out
pop
add
xor
add
add
addb
or
stc
leave
pusha
add
push
xor
setno
lods
sub
add
scas
xchg
push
push
ret
pop
push
inc
add
pushf
cli
fcompl
add
sbb
and
push
and
gs
les
xchg
movsb
pop
mov
add
test
in
adc
sub
mov
leave
pop
add
test
jb
cld
stos
adc
add
jmp
mov
adc
call
xchg
sahf
cs
mov
jae
cmp
inc
add
push
cmp
adc
sub
mov
lahf
xor
push
mov
adc
mov
dec
mov
pop
fs
xor
js
fsubrp
xlat
mov
push
push
aam
movb
xor
out
add
pop
add
adc
mov
add
inc
add
push
mov
fbld
jmp
aam
mov
out
xlat
hlt
ja
sub
jge
lahf
mov
leave
sbb
out
dec
mov
inc
add
add
bound
aad
mov
or
movsl
pop
rolb
add
inc
add
adc
add
add
addl
add
scas
mov
mov
nop
jbe
jne
jmp
xor
sub
pop
movsb
cmpsb
mov
push
add
out
pop
lcall
add
add
sub
es
xlat
pop
mov
mov
mov
add
pop
adc
imul
dec
and
mov
insl
popa
add
stos
xlat
xor
mov
add
roll
add
mov
pop
cli
popa
add
icebp
and
mov
pop
decl
and
add
push
push
or
lock
mov
mov
mov
sub
imul
popf
jno
mov
fwait
sub
push
sub
push
add
push
ds
mov
aas
push
mov
cmpsl
aaa
test
repz
fisttpll
addl
clc
loopne
jmp
push
test
popa
add
dec
add
lods
addl
movsb
lods
enter
add
scas
jmp
dec
dec
mov
jns
loop
add
inc
add
scas
push
push
stos
lret
js
dec
add
imul
jno
add
cmpxchg
add
or
popa
add
into
mov
call
int3
out
jns
push
adc
and
test
add
push
out
cmp
mov
push
add
dec
inc
add
roll
ja
push
and
mov
mov
add
outsl
jb
push
popa
add
fcoml
add
roll
int3
stos
lret
lret
xchg
cld
lock
push
roll
jp
mov
mov
jg
add
or
mov
pop
jecxz
dec
ss
add
in
in
or
add
addl
xchg
pop
sti
movsb
out
lock
mov
add
add
push
data16
add
imul
iret
xor
and
and
lods
sub
hlt
sti
cmp
movd
shlb
dec
or
stos
mov
sbb
inc
add
add
cli
mov
add
and
divb
mov
fld
add
pop
lcall
xor
add
push
jmp
shrl
or
push
jnp
bound
cmp
in
mov
xchg
adc
and
inc
add
mov
add
or
and
xchg
dec
inc
add
xlat
stc
push
xchg
jmp
pusha
add
divb
mov
add
push
outsl
add
ja
test
jle
jecxz,pt
push
dec
hlt
lahf
push
lods
sub
sbb
rcll
add
pop
imul
stos
test
movsb
das
push
sbb
ja
lcall
lahf
addl
push
imul
dec
test
or
lcall
mov
or
das
pop
loop
cmp
add
mov
ljmp
inc
add
add
ficomps
adc
imul
mov
add
inc
add
pop
inc
add
sbb
daa
inc
add
daa
push
or
add
imul
xor
add
add
dec
push
dec
cmp
or
repnz
imul
shlb
daa
and
add
mov
pusha
add
cli
dec
into
shrb
pop
adc
mov
sahf
addl
imul
dec
pop
aad
add
add
roll
add
int3
mov
roll
icebp
mov
jbe
mov
hlt
jmp
inc
add
inc
add
add
xor
mov
sbb
jmp
add
or
out
cmpsb
xchg
fmuls
dec
ret
pushf
adc
push
insl
mov
jmp
add
inc
add
jb
or
add
lods
and
fidivl
lret
pop
dec
jle
add
jno
aam
out
dec
mov
xchg
xlat
call
lods
and
adc
mov
sbb
add
lds
imul
inc
add
mov
leave
add
fsubr
lcall
rolb
jl
fstl
xchg
repz
pop
dec
addb
rorl
jecxz
enter
xor
js
and
cmp
add
into
cmp
jno
jp
or
jbe
dec
addb
fildll
sbb
adc
clc
lds
mov
out
push
loopne
shrb
pushf
addb
mov
cmp
add
cmp
add
add
ds
jg
add
sti
lret
add
mov
and
xchg
jbe
aas
xchg
icebp
loopne
sbb
add
cmc
das
icebp
movsl
push
fcoms
mov
push
dec
adc
add
arpl
xor
inc
add
jnp
in
sbb
add
lea
sbb
and
cmp
xor
lds
or
mov
dec
mov
fisubrs
sub
das
enter
cmp
roll
sti
jns
add
add
add
pop
mov
push
cwtl
dec
stos
mov
stc
mov
fbld
push
pop
test
mov
jns
add
dec
repz
add
inc
add
push
int
jno
xchg
mov
in
xchg
pop
addl
and
mov
add
mov
arpl
icebp
outsb
aad
add
inc
add
fcmovnbe
shr
dec
cmpsl
call
inc
add
add
xchg
shlb
add
xchg
insl
jns
pop
jb
aam
add
ljmp
int
and
fistps
cld
inc
add
xchg
mov
add
cmp
add
ja
dec
popf
jp
imul
or
push
fcoml
mov
mov
xchg
xlat
xchg
popa
add
in
dec
mov
sub
add
cld
add
xchg
movsl
in
into
jns
or
add
add
int3
clc
cmpsl
mov
add
adc
cmp
fs
outsb
roll
cli
sbb
add
addb
jmp
lea
pause
mov
push
push
pop
rolb
out
movl
js
add
push
add
add
imul
or
in
xchg
sahf
jl
add
test
dec
dec
xchg
in
mov
inc
add
out
clc
xor
cmc
mov
or
push
gs
add
js
inc
add
mov
add
addb
xor
int
add
add
rolb
sbb
fdivrl
addl
shll
add
jbe
insl
add
ficoms
ja
add
xor
xchg
inc
add
add
add
lods
insb
adc
sahf
int3
shr
cld
mov
add
test
dec
ss
lock
sub
jnp
std
lods
lret
add
out
add
add
lret
sub
aam
add
sbb
sub
add
cs
cmp
add
ret
dec
or
add
add
in
sub
inc
add
push
and
divl
mov
les
notl
add
out
mov
fstpl
sti
inc
add
stos
mov
add
xor
add
sub
test
movsl
inc
add
dec
int
add
iret
movsb
xchg
mov
add
pop
pop
popa
add
aas
cltd
xchg
push
pop
adc
push
sbb
mov
add
stos
jb
popf
aam
push
ljmp
aam
cmp
cmpsb
mov
fadd
add
les
mov
sbb
hlt
lods
loop
add
push
jno
and
dec
inc
add
add
pop
dec
mov
insb
cwtl
or
lds
iret
in
mov
mov
mov
fidivrl
mov
movl
xchg
dec
dec
xlat
add
pop
cwtl
mov
movsb
mov
xchg
js
push
mov
int3
inc
add
test
add
add
push
adc
mov
fcomps
sbb
fiaddl
stc
inc
add
iret
cmp
sbb
xchg
or
add
and
rorl
test
add
sbb
addr16
mov
es
daa
inc
add
sub
cwtl
ret
add
xor
fsub
loopne
push
cltd
std
mov
push
jns
imulb
pop
add
push
adc
mov
add
adc
add
xlat
pushf
iret
out
outsl
leave
pusha
add
nop
lock
rsm
jle
add
add
insb
jp
inc
add
mov
jle
xchg
fwait
cmp
jne
cmp
or
xchg
fcompl
and
jne
lahf
movb
jno
jge
push
sbb
push
add
lcall
xchg
icebp
pop
or
ds
push
imul
fists
push
test
or
add
or
cmp
sbb
fldl
and
cld
mov
insl
dec
gs
mov
lods
insb
and
adc
xchg
dec
cmpsb
inc
add
add
add
add
mov
enter
ficoms
das
jle
cmp
pop
dec
push
add
movl
jb
das
dec
ja
push
movb
jbe
iret
inc
add
jmp
scas
lahf
in
cwtl
ret
and
fiadds
add
lret
enter
xlat
push
add
sbb
push
arpl
pop
mov
fcmovu
adc
mov
add
stos
or
jae
ja
dec
movsl
or
mov
mov
lds
outsb
cmp
aam
pop
adc
in
mov
data16
add
mov
adc
sti
xchg
nop
cwtl
sbb
add
lea
add
pusha
add
xchg
inc
add
inc
add
jns
pop
push
add
add
mov
addb
sub
add
xchg
arpl
adc
bound
push
aas
jge
jbe
jb
aas
mull
inc
add
sbb
out
inc
add
or
addb
lcall
inc
add
aam
add
adc
add
xor
add
adc
cli
cmp
les
or
je
mov
pop
lods
mov
outsb
sti
movsl
inc
add
leave
mov
add
add
dec
xor
mov
in
push
xchg
lods
sub
add
add
mov
or
inc
add
mov
add
adc
xchg
nop
jb
clc
mov
mov
dec
arpl
mov
out
fsubrs
push
add
pop
sub
mov
ss
rolb
dec
ljmp
out
add
das
sub
add
adc
mulb
test
in
stos
addl
or
cmp
sub
mov
push
sahf
pop
lods
dec
in
push
and
arpl
push
inc
add
jb
addl
imul
push
movl
adc
add
jecxz
fcomp
cmp
xor
xchg
addl
push
outsl
push
addb
or
mov
call
dec
sub
jecxz
push
add
mov
rolb
mov
inc
add
addr16
xchg
arpl
jo
pop
xchg
pop
dec
ret
roll
sub
mov
cld
xlat
mov
aad
xchg
mov
in
and
sub
sti
flds
adc
pop
cmp
jns
add
idivb
iret
pop
mov
int
cmp
repnz
fmul
dec
adc
add
xchg
pushf
xchg
test
fistpll
test
jecxz
add
stos
mov
rcrl
lret
push
add
movb
dec
xor
mov
leave
addl
sbb
and
lods
xor
jge
outsb
fsubr
add
cli
in
outsb
add
or
cld
fildl
lret
jne
lret
aaa
bound
or
and
xor
mov
outsl
fsts
inc
add
arpl
pop
jb
pop
sbb
add
sbb
push
loopne
negl
sub
rcrl
pop
fisttpl
mov
jne
cmp
fistpll
adc
cmp
sbb
jp
inc
add
jnp
adc
add
shrl
test
xor
cmp
mov
add
push
cmp
je
xor
push
mov
movsl
and
stc
fs
sub
stos
inc
add
add
cld
ss
add
inc
add
add
incl
add
ljmp
xor
cld
inc
add
cmpsb
nop
and
and
lahf
mov
cmc
sub
je
test
and
test
adc
movsl
and
cli
ds
add
pop
repz
int
rcrb
and
test
out
jmp
dec
push
adc
sbb
jg
out
cmp
clc
repnz
rolb
add
fcmovnb
add
fcomps
mov
imul
int
cmpsl
sub
fwait
or
mull
or
scas
xchg
dec
nop
rol
add
xor
pusha
add
fcmovbe
fldl
cmpsl
jg
jge
mov
xor
mov
cmp
add
add
adc
add
jp
lds
jl
mov
mov
pop
sti
testb
cmp
movl
add
js
add
xchg
out
cmc
push
xchg
xchg
jle
lahf
or
cmp
fs
add
sbb
dec
cmp
lcall
jae
dec
cwtl
les
arpl
or
add
inc
add
fisttpl
xor
push
bound
lret
and
inc
add
and
or
in
inc
add
pop
mov
pop
mov
mov
or
adc
pop
xor
fldenv
cltd
jo
jmp
jb
sbb
add
dec
out
movsb
mov
push
add
add
in
add
out
addl
in
mov
repnz
addl
das
movl
push
jecxz
clc
cmp
gs
jge
loopne
add
sbb
mov
rorb
mov
add
push
mov
jl
test
add
mov
popl
mov
xor
fnstenvs
ja
aaa
jle
stc
aas
je
add
add
xor
add
das
fucomi
addl
ja
add
add
sbb
add
enter
pop
pushf
out
cli
std
jmp
add
cltd
loop
or
in
xchg
inc
add
bound
mov
xchg
pop
popl
movb
add
pop
lret
dec
inc
add
add
cmp
cs
mov
daa
testb
jo
add
mov
sub
fwait
aam
sub
in
xlat
lret
cwtl
pushf
xchg
adc
jno
xchg
add
cmp
add
cmp
sub
pop
push
push
add
inc
add
xor
add
cltd
lahf
sub
fisttpll
mov
add
push
lods
fldcw
mov
scas
imul
add
outsl
cmc
int3
test
icebp
mov
repnz
stos
ret
and
pop
int
xchg
lea
add
testl
push
mov
aad
jge
loope
xor
add
cmp
cmp
je
add
add
add
pop
push
xlat
jmp
pop
and
mov
xlat
pop
gs
adc
std
fwait
jecxz
add
xchg
sub
xchg
adc
mov
add
pop
xchg
sub
fstl
lock
mov
add
aad
add
mov
add
pop
sbb
add
and
mov
pop
dec
dec
test
adc
scas
addl
add
pop
jo
ds
adc
pop
mov
add
std
push
xchg
inc
add
fistpll
aam
xor
push
sub
lds
mov
out
add
imul
jmp
add
adc
mov
sub
inc
add
adc
mov
stc
cwtl
mulb
fsubr
jmp
add
xor
test
xchg
les
mov
jne
add
js
pop
add
rolb
add
push
stos
addl
dec
ljmp
out
jne
inc
add
dec
out
jns
cltd
mov
add
dec
xlat
sti
cmp
test
push
mov
jmp
xchg
dec
mov
cmp
cli
dec
xchg
xchg
inc
add
test
xchg
scas
movb
bound
sbb
js
jbe
ds
in
dec
cmc
repz
mov
decb
add
fisubs
ss
bound
cmp
xchg
inc
add
mov
jecxz
cmp
add
push
sub
add
jge
push
xchg
cli
in
stos
addb
inc
add
xlat
jl
xchg
filds
loop
jnp
add
add
add
mov
push
fs
test
roll
addr16
add
insl
xchg
ds
add
cwtl
pop
add
xchg
ds
mov
std
mov
sbb
ret
add
fwait
adc
add
add
lods
repz
sub
pop
add
movb
cmp
cmp
sbb
xchg
lea
and
add
add
sti
inc
add
add
add
vmread
or
scas
sahf
roll
ret
add
dec
sub
jl
push
xlat
sub
mov
jle
or
movl
inc
add
addr16
in
mov
add
cmpsb
stc
add
add
inc
add
mov
jb
out
clc
push
jne
mov
dec
push
dec
pop
fidivrs
stc
rolb
add
addb
add
jns
das
inc
add
mov
or
add
outsb
adc
add
dec
lds
in
sbb
cld
xchg
loop
add
mov
test
mov
mov
lret
sub
fidivrl
cmp
lahf
int
or
add
adc
add
dec
gs
sub
int
cli
cli
mov
sub
mov
sbb
int
sahf
adc
add
add
outsl
sahf
stc
inc
add
addb
addb
xchg
inc
add
add
sbb
add
add
iret
adc
js
into
push
inc
add
insb
adc
lock
jns
inc
add
aam
test
push
dec
addl
mov
aaa
adc
inc
add
cmp
cmpsl
push
loop
ja
push
scas
addl
sub
arpl
add
and
dec
cmp
addr16
lcall
inc
add
add
and
mov
mov
add
fsubrs
pop
cmc
fwait
xchg
inc
add
fldenv
add
cwtl
inc
add
jle
xor
mov
add
push
xchg
bound
nop
bound
out
addb
cmp
xchg
jl
xlat
les
and
stos
adc
or
and
addr16
lea
jp
mov
cwtl
push
ss
mov
in
cs
lods
or
sub
arpl
pop
mov
mov
sbb
test
mov
add
add
aam
dec
xor
cmc
jg
pop
jmp
add
jbe
add
adc
add
push
jbe
rclb
fsubp
aaa
jne
add
jg
rolb
and
add
out
xchg
inc
add
mov
movsb
stos
sbb
add
add
add
decl
stos
mov
adc
add
mov
or
mov
add
xor
iret
push
dec
mov
in
mov
jae
es
xor
xchg
or
jge
xchg
xadd
dec
inc
add
inc
add
addl
in
pop
in
dec
test
ljmp
outsl
add
pushw
pop
mov
popa
add
out
add
ficoms
push
cmp
mov
fistps
arpl
sub
sbb
outsl
push
add
add
cmp
mov
out
cmc
int
pop
push
xchg
mov
movsl
shrb
sbb
arpl
rcrb
pop
lock
movsl
lds
mov
sbb
mov
adc
add
test
mov
and
sub
leave
or
popl
adc
fldl
add
xchg
push
push
add
ja
mov
add
push
inc
add
addb
jb
dec
or
add
roll
add
sbb
in
loopne
addl
jge
out
in
loope
icebp
xchg
into
roll
add
add
add
sbb
xor
mov
add
add
or
mov
sub
ljmp
sub
or
ficoml
add
mov
add
mov
mov
add
lods
faddp
add
add
cli
mov
and
xchg
mov
roll
cmc
sub
mov
add
xchg
outsl
mov
xor
sbb
out
addl
sbb
adc
fmull
scas
addr16
stos
ret
add
cmp
sub
lahf
xchg
ss
insl
test
cmp
add
pop
mov
fimull
add
xchg
dec
bnd
lret
add
nop
ficoms
ret
add
add
add
dec
inc
add
add
es
out
xor
shl
pop
pop
push
movsb
pusha
add
push
jmp
add
mov
test
bound
fdiv
leave
dec
mov
outsl
push
add
fwait
xor
jle,pt
repz
mov
pusha
add
add
add
add
mov
add
cmp
or
jmp
push
jp
dec
mov
enter
cmp
add
push
pop
leave
mov
xor
mov
jg
add
mov
outsb
movsl
or
repnz
stos
jno
inc
add
fcmovne
imul
push
call
sti
addl
loope
xchg
inc
add
mov
add
mov
jg
mov
ljmp
mov
dec
jg
pop
je
dec
mov
or
cmp
mov
add
sub
mov
rorb
mov
jo
das
xlat
add
loope
and
outsb
cmc
int
lret
mov
sub
add
hlt
in
lret
movw
arpl
sub
in
sbb
test
es
int
jge
dec
fcomip
xchg
push
add
insb
add
mov
adc
jne,pt
mov
sub
sub
loop
add
in
add
add
pusha
add
xchg
adc
add
popa
add
outsb
and
adc
les
mov
add
or
jg
mov
jmp
push
enter
add
arpl
je
fbld
movl
dec
jo
mov
add
inc
add
mov
or
test
mov
cmp
je
or
jp
loopne
pop
sahf
mov
push
mov
mov
mov
add
jae
lods
mov
push
add
movsb
and
xchg
roll
push
sub
sbb
roll
add
add
lock
out
call
pop
outsl
dec
dec
mov
pop
test
xlat
push
xchg
sbb
aam
jle
xchg
adc
mov
aad
popf
lret
movsb
inc
add
pop
mov
jg
popa
add
dec
adc
cs
add
repnz
jno
xchg
scas
push
lock
xor
add
add
xchg
mov
pop
stc
mov
roll
mov
add
inc
add
xchg
mov
nop
or
sub
add
xchg
ret
add
push
mov
aam
inc
add
mov
xor
add
pop
add
cli
lcall
arpl
addl
add
push
add
dec
xchg
std
jb
movb
pop
sbb
loope
push
out
xchg
lahf
inc
add
xchg
ljmp
cmc
inc
add
inc
add
loopne
mov
mov
or
add
lods
xor
add
call
leave
adc
lods
adc
aam
or
lods
scas
mov
pop
mov
or
push
mov
jmp
les
push
aad
lods
cmp
push
sub
pushf
inc
add
movsl
xchg
leave
aaa
pop
mov
mov
inc
add
dec
test
xor
imul
add
mov
movb
inc
add
push
adc
dec
pop
and
fiaddl
pushl
sbb
scas
sbb
mov
add
add
inc
add
gs
adc
mov
add
add
pusha
add
call
call
jle
push
out
test
pop
jbe
lahf
lret
movb
push
stc
push
sub
xchg
sub
cmpsl
fldl
into
aad
addl
movb
nop
fbld
pop
ret
inc
add
inc
add
sbb
dec
enter
cmp
sub
add
add
bound
lcall
out
fwait
push
add
stc
or
aaa
daa
pop
sbb
push
add
jl
aas
dec
push
lds
out
ret
add
aad
or
fs
mov
popl
add
push
jmp
int
sbb
mov
in
cld
inc
add
jge
add
test
fwait
inc
add
in
insb
push
inc
add
std
mov
and
scas
in
add
divb
add
dec
int3
xchg
sub
jnp
bound
and
out
add
add
sub
add
aaa
pop
mov
sbb
add
movsb
mov
fiadds
ss
add
lea
nop
adc
add
mov
stos
push
xchg
and
dec
pop
xor
lods
jmp
lods
add
cmp
push
out
dec
idivb
jp
cmp
stc
lods
add
popf
out
add
add
faddp
add
bound
jb
mov
mov
adc
outsb
outsb
insl
fsts
adc
pop
add
pusha
add
bound
scas
xor
mov
in
xor
add
in
xor
fisubrl
mov
add
cmp
ret
add
ss
jbe
xchg
jl
imul
mov
bound
mov
jecxz
ret
add
int
sahf
lods
dec
insb
adc
add
insl
scas
lahf
mov
xor
stos
push
test
add
and
add
add
add
inc
add
cltd
decl
pop
jp,pn
jmp
shll
repz
inc
add
xchg
jo
loope
and
cs
add
movl
lea
or
pusha
add
addl
addb
mov
cmc
lret
and
fucomip
add
ret
add
sbb
mov
inc
add
pop
ljmp
add
aaa
movsb
push
add
cmpsb
jmp
test
sbb
mov
or
repnz
clc
pop
pop
pop
shr
mov
pmullw
sbb
push
icebp
dec
inc
add
add
mov
addl
inc
add
je
scas
enter
jo
loop
inc
add
add
cs
insl
loop
push
mov
sarl
gs
hlt
pushf
aas
sub
stc
nop
out
sti
push
cmp
rcrl
xchg
aam
sbb
mov
add
and
int3
add
imul
adc
je
push
or
jae
divl
xchg
ja
daa
jns
add
rorb
xchg
leave
mov
icebp
jns
pop
xor
int3
dec
jne
add
xchg
mov
cwtl
mov
sbb
pop
je
add
cli
lahf
test
push
add
inc
add
shll
push
int
pop
jge
out
jns
cmpsb
mov
add
push
dec
inc
add
add
aaa
in
jmp
fidivl
cmp
mov
add
dec
addl
add
and
test
lret
cltd
or
call
and
jne
add
add
fsubl
dec
jp
bound
out
add
mov
and
in
jo
cli
out
jl
jmp
push
mov
dec
imul
push
int
cmp
fstpl
push
and
js
iret
xchg
dec
mov
aaa
leave
fdivl
lret
jno
test
mov
add
std
jns
add
aaa
xchg
pop
mov
adc
dec
and
pop
fidivs
lret
rcll
mulb
dec
fwait
dec
sbb
sub
lock
mov
add
ret
sub
es
sbb
push
jecxz
add
add
int3
lods
jbe
call
fnsave
add
pop
test
shll
jns
add
add
mov
hlt
lods
dec
cmpsb
fsub
xor
mov
lock
add
mov
add
aas
pop
dec
leave
aas
and
outsl
nop
iret
repnz
push
jns
ret
and
push
mov
add
jecxz
add
jecxz
add
add
add
add
aam
leave
repnz
out
addb
mov
xor
mov
leave
or
jb
addb
cmpsb
mov
test
mov
call
sahf
movl
mov
xor
xchg
xchg
bound
fimull
mov
cmp
mov
ljmp
fwait
rorl
mov
sbb
icebp
daa
adc
and
adc
xchg
pop
xchg
fsubrl
paddq
add
cmp
movsb
fwait
jmp
push
divl
mov
call
ja
leave
fistl
repz
ja
popa
add
gs
and
xor
aaa
jl
cld
cmp
into
test
ffreep
add
inc
add
insb
and
imull
addl
xor
push
sub
add
mov
inc
add
sub
mov
gs
mov
inc
add
add
add
mov
adc
les
push
add
cltd
mov
test
mov
mov
cmp
pop
adc
fnstsw
jno
je
adc
mov
sub
cmc
push
repz
add
add
movl
add
dec
pop
cmp
push
fnsave
ja
addl
add
xchg
lods
jp
push
test
hlt
sbb
fcoml
add
faddl
add
cwtl
popa
add
add
aaa
sbb
or
pop
fsubp
mov
sub
push
add
pop
daa
pop
push
aaa
pusha
add
scas
or
add
jle
lds
mov
mov
pushf
jge
inc
add
fidivrl
and
adc
lock
addl
cmp
add
xchg
stos
mov
movl
cmp
lret
jle
out
mov
xchg
sub
sub
jne
out
adc
movl
addl
int3
test
push
sbb
dec
or
decl
test
mov
rclb
jno
gs
xchg
rcll
xchg
xchg
fldl
fiaddl
pusha
add
push
flds
movsb
xor
add
popa
add
inc
add
add
cmp
lock
xor
add
je
lock
ret
adc
dec
adc
ljmp
mov
loop
xchg
push
roll
jle
mov
add
xor
rcll
xor
out
adc
add
add
cmp
pop
movb
mov
bound
clc
in
or
nop
add
mov
jg
fstpt
pop
icebp
xchg
dec
stc
fcompl
imul
mov
hlt
ret
add
stos
push
mov
addr16
stc
aam
xor
xor
adc
mov
test
gs
rolb
pop
inc
add
insb
adc
movsl
sbb
add
add
push
test
xor
aas
aam
add
mov
dec
addr16
xchg
lahf
push
aaa
sub
mov
cmc
outsl
shlb
add
int
and
cltd
ljmp
leave
pop
add
fildll
add
xor
pushf
mov
sbb
xchg
test
mov
std
ds
pop
add
add
mov
fbld
mov
add
add
es
lock
out
add
test
xlat
dec
popa
add
mov
add
add
fcmovne
mov
dec
clc
test
stc
das
adc
xor
add
imul
mov
add
mov
mov
lret
insb
mov
movsb
push
dec
out
push
add
add
add
adc
out
test
icebp
mov
movsb
outsl
push
push
mov
jl
add
cwtl
sbb
pop
xchg
jns
jl
inc
add
clc
enter
rolb
lds
mov
add
mov
mov
add
and
lods
loop
ja
addl
rorl
add
sbb
leave
addl
es
add
push
lret
rcrl
add
xchg
fdivs
fwait
sub
jae
inc
add
or
add
xcrypt-ofb
pop
adc
test
add
xchg
js
add
add
inc
add
mov
jl
lcall
xchg
ljmp
stc
dec
notl
frstor
add
cmp
gs
addr16
pusha
add
iret
pop
and
bound
aad
mov
cld
repnz
je
add
mov
sti
add
mov
add
push
je
cltd
mov
jae
dec
lea
add
cmp
out
test
insl
shlb
add
pop
ljmp
fiadds
cld
sbb
push
sbb
xchg
jecxz
popf
out
xor
mov
jbe
mov
sub
sahf
jmp
imul
loop
jp
out
outsl
insb
into
dec
out
das
pop
imul
mov
loopne
mov
repz
leave
cmp
add
add
push
out
mov
movsb
ds
enter
adc
add
cmp
xor
mov
add
add
mov
mov
add
repz
pusha
add
inc
add
fiaddl
dec
movsb
mov
add
push
jnp
jmp
add
repz
jg
addl
push
movsl
inc
add
and
pop
pop
imul
sti
mov
aad
enter
fcmovu
adc
add
rcll
lock
test
xchg
or
lahf
add
pop
jge
clc
add
inc
add
div
mov
loopne
add
jmp
fistpl
xchg
loopne
lret
ss
jno
xchg
cld
pop
lcall
movsb
inc
add
cs
pop
and
xor
fmull
icebp
pushf
lods
push
add
jns
std
fistl
fwait
in
jnp
add
insl
xchg
mov
adc
add
adc
or
or
das
imul
add
add
and
mov
adc
sub
and
inc
add
mov
and
shr
lret
iret
jle
pop
cwtl
shlb
sti
fnstenv
adc
add
fdivs
shl
out
dec
push
mov
scas
cli
and
addl
jg
inc
add
xchg
fs
sbb
pop
dec
rcr
adc
mov
dec
sbb
add
mov
dec
push
add
std
stos
cs
mov
test
das
push
scas
repnz
addl
or
std
push
movsb
imul
in
bound
fwait
mov
outsl
lret
outsb
push
dec
inc
add
popa
add
scas
push
insb
pop
inc
add
dec
xor
and
imul
ds
add
add
arpl
xchg
stc
jbe
mov
stos
mov
inc
add
xchg
das
adc
roll
or
aaa
ret
add
add
sbb
movl
cmpsl
dec
icebp
call
jmp
lods
pop
or
aas
or
cmc
or
scas
mov
cmp
adc
ds
mov
push
add
add
or
cli
fstpl
hlt
or
inc
add
fucomp
in
cwtl
jmp
in
mov
jns
ret
inc
add
push
out
pop
std
cmp
fcoml
pop
push
mov
addl
mov
fldt
mov
add
fnstsw
inc
add
sub
dec
lea
jecxz
and
push
addb
push
mov
imul
in
das
inc
add
dec
jmp
mov
add
add
mov
inc
add
iret
lods
aas
cmp
rclb
ja
aam
pushf
cwtl
imul
popa
add
sub
loop
and
pop
nop
fs
sti
pop
imulb
add
in
pop
dec
adc
das
aaa
fs
mov
mov
jnp
pusha
add
test
sbb
jg,pn
imul
mov
sub
inc
add
xor
xor
movsb
sub
fiadds
push
add
fcmovnb
add
addr16
out
mov
add
mov
add
addb
add
sbb
in
add
xchg
call
add
repnz
sahf
jb
testl
fdivrl
push
call
fs
lcall
add
scas
pop
leave
cmp
and
add
pop
divl
pop
jl
add
fsubrs
add
mov
mov
sub
mov
jbe
adc
sbb
fs
iret
js
add
std
in
sub
test
add
dec
inc
add
pop
or
or
push
inc
add
ss
cmpsb
aaa
sbb
mov
pop
mov
shlb
add
jl
mov
fsubr
mov
or
loop
fimuls
in
xchg
jmp
push
sbb
jne
cmp
xchg
mov
mov
imul
pop
sub
cli
cmp
aad
in
pop
faddl
scas
les
jns
fildl
jle
lret
int3
cmc
and
sbb
xchg
add
add
jg
add
into
push
movsb
aas
mov
add
mov
lret
aaa
fdiv
cmp
add
cmp
mov
mov
add
mov
xchg
adc
mov
mov
lds
out
and
rcr
inc
add
insb
adc
mov
ss
mul
mov
fmull
ss
mov
in
push
add
and
fmull
add
and
mov
roll
addl
loopne
addl
lods
outsb
cmp
add
int
add
push
fstpt
push
roll
add
add
and
push
jbe
add
mov
arpl
into
int3
or
cltd
push
daa
sub
repz
add
jmp
add
add
aam
popf
and
inc
add
adc
arpl
call
push
push
jae
add
sbb
popf
push
add
pop
and
jne
lret
idivb
add
push
leave
push
mov
jns
adc
in
xor
pop
xchg
xchg
in
test
ficompl
add
push
bound
xchg
inc
add
fcoml
sub
mov
jp
imul
add
xchg
mov
jae
and
dec
scas
push
cmp
jnp
jno
add
push
push
inc
add
pushf
add
push
mov
stos
leave
lods
xchg
in
fiadds
add
add
imul
scas
sbb
mov
loope
mov
addl
or
not
or
or
lods
add
stos
clc
inc
add
add
jmp
scas
pop
mov
xchg
call
test
out
hlt
sbb
repz
sbb
ss
imul
add
ret
add
push
push
outsb
sti
push
mov
mov
add
out
xor
sahf
in
mov
cmp
add
mov
enter
add
mov
add
or
mov
inc
add
add
cld
mov
enter
mov
addl
mov
push
add
hlt
push
test
mov
add
in
mov
add
xor
in
or
mov
pop
jge
add
roll
ret
add
cwtl
in
add
add
imul
sahf
fisubrs
negl
adc
mov
mov
rcrl
jae
jo
les
dec
in
xor
mov
pop
scas
fldt
mov
add
popf
aas
cmpsb
movsb
daa
ja
mov
imul
sahf
push
push
dec
push
ret
jbe
jae
and
out
jno
lret
pop
sub
xor
and
add
stos
dec
mov
xor
outsb
jno
insl
mov
add
scas
in
js
add
imul
xor
jp
push
dec
mov
jp
pop
xchg
and
jbe
js
lds
lahf
xor
adc
mov
lea
test
adc
or
jl
add
dec
cmp
mov
mov
daa
movsl
lret
dec
roll
clc
mov
add
mov
cmp
add
mov
add
dec
in
outsl
sbb
mov
rol
add
outsl
inc
add
cmp
aad
dec
mov
in
push
dec
cmp
out
add
mov
roll
mov
movsb
cmp
jb
rcll
mov
jle
repz
out
ja
push
or
lds
add
push
adc
inc
add
fs
cmpsl
or
jnp
add
aam
inc
add
fmuls
cli
lahf
push
jns
add
xor
outsb
sub
mov
add
sub
rol
add
jg
or
iret
minps
xchg
jno
add
lea
stc
addb
aad
jbe
les
inc
add
addr16
loop
mov
add
int3
popa
add
movb
cmp
push
inc
add
lcall
stc
jl
aam
sub
mov
xchg
mov
inc
add
lret
pop
jb
in
aaa
pop
loope
mov
jb
notb
movb
mov
add
test
int3
cmpsb
out
inc
add
movsb
frstor
add
cs
add
imul
add
adc
add
xchg
or
mov
mov
daa
push
loopne
push
add
iret
cmp
pop
xor
sub
jmp
inc
add
inc
add
sbb
rcr
pushf
or
add
mov
fidivl
in
aaa
leave
mov
fnop
dec
stos
or
mov
sbb
xchg
ficoml
in
sbb
bound
repnz
cmpsb
and
lret
add
add
les
push
add
add
repnz
push
add
jbe
das
fdivrl
roll
cmp
cwtl
mov
xor
addb
ljmp
sub
and
mov
xchg
cmp
std
out
xlat
mov
push
scas
cmpsb
dec
fmulp
pushf
pop
ret
add
stos
lret
mov
push
scas
jmp
fbld
add
iret
jecxz
add
add
addl
rolb
sbb
add
cmpsb
ret
mov
or
add
lea
add
daa
add
or
fstpl
addb
sub
add
fwait
repz
add
out
psubsw
add
sbb
lds
negb
add
lds
iret
insb
and
out
out
bound
xchg
mov
sub
nop
xchg
and
add
insb
adc
sub
mov
xor
lea
add
add
out
pop
jecxz
ret
add
add
addl
add
adc
inc
add
dec
enter
cld
fucomip
inc
add
add
push
adc
add
fisubrl
mov
dec
aas
jp
roll
repnz
out
add
inc
add
cmp
add
imul
flds
out
cs
fistpll
pop
ss
shr
inc
add
out
xchg
mov
jecxz
out
imul
add
dec
das
lahf
cmp
mov
insl
inc
add
popf
xlat
xor
add
in
ss
sarb
jnp
testl
add
mov
in
cmpsb
jmp
sahf
inc
add
repz
jae
aas
jp
pushl
sbb
insl
add
lret
out
cmpsb
sbb
lahf
cmp
int3
cmpsl
xchg
roll
add
out
mov
addb
push
loopne
lods
into
fadds
mov
add
add
push
in
addb
iret
clc
int3
rcr
xor
or
sub
sti
mov
xor
push
addl
add
les
mov
jne
fwait
stc
pop
sti
jo
pop
xor
mov
add
dec
sub
mov
fldcw
sbb
and
arpl
mov
jbe
rol
add
cmp
sbb
push
rolb
out
cmovne
pop
repnz
ljmp
outsl
jge
cmpsb
add
stos
and
adc
out
jecxz
xchg
cmpsl
mov
dec
clc
ljmp
mov
rcrl
inc
add
pop
mov
sub
rolb
mov
jns
push
add
add
lods
mov
push
int3
les
jno
or
in
add
push
or
ss
xor
jecxz
into
popa
add
add
mul
movsl
and
and
jmp
shl
inc
add
add
ss
push
and
or
pop
jp
cmp
call
mov
sbb
push
imul
cmp
add
add
xchg
daa
xchg
movb
hlt
mov
daa
xchg
or
pop
aaa
js
add
or
inc
add
fstpl
add
jns
inc
add
jl
add
fisttps
imul
add
pop
adc
repnz
mov
fbstp
fnstenv
pop
pop
mov
ss
or
xchg
add
pushf
mov
insl
movb
and
aaa
xchg
add
or
inc
add
lds
test
add
nop
rcrl
xchg
cmpsb
fs
gs
cmp
pushl
lds
inc
add
lahf
push
in
cwtl
fsts
add
add
cwtl
sub
add
jl
xchg
repz
leave
push
es
push
popf
data16
jle
xor
xchg
jnp
push
fwait
hlt
mov
add
or
imulb
add
aad
cmp
mov
idivl
adc
test
xchg
mov
jg
add
pop
hlt
push
sbb
jmp
add
add
sbb
mov
add
stos
cmp
pop
rclb
cs
and
jle
sti
or
mov
sub
mov
mov
fmulp
aam
andnps
movb
xchg
cmp
add
shll
lods
sarb
add
icebp
push
or
pusha
add
push
movsl
adc
add
mov
jg
pushf
xlat
pop
pusha
add
jmp
or
sahf
and
xchg
pop
fildl
mov
aam
lret
and
pop
cmpsl
or
sbb
inc
add
cld
test
xor
stos
adc
imul
add
add
dec
out
mov
bound
mov
out
nop
pop
add
jecxz
hlt
mov
hlt
les
mov
pop
pop
imul
mov
sahf
or
or
adc
add
pcmpgtd
leave
adc
pop
inc
add
add
cmp
nop
xchg
or
gs
dec
and
lds
lock
loop
cmpsb
push
roll
add
out
inc
add
mov
call
sbb
add
out
test
xor
xchg
imulb
cmp
into
arpl
sbb
lods
sbb
loop
add
and
ret
add
add
jnp
add
add
test
adc
icebp
daa
pop
lock
out
stos
addl
nop
xlat
dec
fistl
call
imul
lods
in
sbb
hlt
sarb
cmp
xchg
mov
push
add
dec
mov
jmp
push
insb
and
push
out
adc
addl
mov
imul
mov
add
mov
aam
jcxz
add
ljmp
xchg
add
push
add
add
add
es
adc
mov
sub
jmp
addr16
clc
hlt
lcall
push
int
mov
add
push
xchg
out
dec
sub
ret
add
sub
sbb
adc
out
and
push
cli
into
cmp
icebp
call
cwtl
xor
jbe
add
bound
arpl
inc
add
insl
daa
mov
add
jnp
xchg
mov
fs
sub
jmp
add
add
ljmp
push
outsl
inc
add
test
ss
movsb
xchg
push
imul
mov
pop
sbb
add
adc
icebp
inc
add
push
roll
mov
clc
sbb
add
cmpsb
insl
rcr
bound
aas
inc
add
mov
fisttps
divb
fldt
divb
mov
add
add
roll
add
stos
lahf
inc
add
ret
add
add
cld
outsb
jle
push
pop
je
mov
das
rcrl
mov
add
cwtl
sbb
jb
pop
push
addb
pop
add
adc
jb
push
add
sub
add
add
iret
inc
add
shll
movsl
pop
pop
ret
add
fs
add
mov
aaa
add
push
fxch
xchg
mov
mov
push
add
aam
mov
icebp
mov
inc
add
add
pop
out
mov
add
add
clc
and
bound
js
ret
in
in
jne
or
add
xor
add
dec
addr16
data16
dec
psubsw
adc
and
clc
jo
insb
into
sbb
push
sub
cmp
push
add
mov
and
adc
sti
lcall
imull
dec
pop
jnp
shrl
test
xchg
movl
cmpsb
pop
pop
mov
sbb
addb
pop
repz
ret
pop
add
pop
cmc
mov
fstl
arpl
mov
js
add
std
mov
push
mov
int
sbb
fidivrs
jb
movl
jo
add
out
xlat
dec
and
pop
or
add
jns
aam
add
cmpsl
dec
or
loopne
mov
int3
aad
lret
cs
mov
push
lock
adc
push
push
mov
test
lea
jo
inc
add
icebp
fidivrl
fcmove
out
jmp
add
in
cs
lret
sbb
ret
jl
dec
clc
dec
adc
addb
cmp
fwait
cmpsb
inc
add
and
cs
je
dec
movl
dec
adc
add
hlt
push
mov
xchg
push
pop
add
shrl
mov
add
jmp
cmpsl
jb
bound
insb
jb
cltd
mov
inc
add
lret
and
ret
add
sahf
cwtl
arpl
lcall
add
fisttpl
test
lahf
in
mov
repnz
pop
idivb
arpl
aaa
mov
rorl
lods
faddl
scas
dec
pop
outsl
lret
or
pop
push
leave
push
xchg
sbb
and
filds
add
test
jae
ret
jbe
xchg
jle
add
pusha
add
shll
add
mov
mov
imul
jns
frstor
mov
gs
adc
std
mov
sti
adc
idivl
mov
xlat
push
add
cmpss
mov
add
popa
add
dec
fwait
je
push
pop
add
inc
add
fwait
mov
mov
xor
xor
or
push
jecxz
add
add
and
jns
xor
sarb
mov
icebp
fcom
mov
loopne
xor
mov
fucom
jne
rolb
push
pop
lods
and
mov
sub
mov
jnp
xchg
fstpl
add
add
loope
and
pop
mov
jnp
mov
into
clc
cwtl
mov
mov
and
sub
outsl
fbld
je
add
into
mov
jae
shrb
cmc
jmp
and
xor
add
dec
fistpl
roll
or
add
jmp
and
add
add
xchg
mov
add
xchg
jns
ret
push
mov
stos
sbb
ret
pop
adc
lea
and
and
mov
leave
push
roll
in
dec
pop
in
add
inc
add
sbb
add
int
lods
push
cmp
sbb
or
fsubrp
rorb
addl
add
mov
addl
arpl
mov
add
add
add
jle
ljmp
hlt
xor
bound
sub
add
or
pop
sub
sub
inc
add
add
sar
jb
sbb
add
xchg
cld
mov
aaa
mov
and
cli
dec
std
pop
data16
pop
add
loopne
add
ss
jl
iret
jo
in
xchg
dec
imul
adc
add
cmp
and
sbb
add
add
data16
shlb
cmp
mov
loope
sahf
addr16
out
push
sahf
aad
mov
sti
add
pop
scas
xchg
negl
and
add
ret
add
add
add
add
add
mov
add
iret
lea
not
leave
cmpsl
jmp
popa
add
mov
test
add
fistpl
pop
mov
movl
outsl
and
idivb
pop
dec
or
sarl
test
mov
dec
lret
mov
data16
adc
inc
add
inc
add
mov
mov
add
dec
mov
cmp
mov
ja
add
nop
pop
mov
xchg
bound
jecxz
add
mov
add
sbb
add
inc
add
out
jge
cli
cmp
insb
inc
add
lret
and
cltd
cmp
call
mov
add
hlt
push
pop
jno
mov
mov
dec
insb
dec
adc
mov
insb
movl
scas
aas
jo
add
rolb
adc
cmp
jle
mov
mov
add
pop
pusha
add
mov
xor
sub
addb
xor
add
add
lahf
cwtl
sub
push
jnp
movsl
cmp
add
les
shlb
and
cmc
mov
add
mov
dec
popf
es
rolb
sub
or
lods
dec
int3
add
cld
pop
mov
or
mov
cmp
add
dec
lea
dec
adc
add
insl
sub
add
test
adc
cmc
jl
lret
scas
sahf
cmp
add
int3
mov
fprem1
cltd
sbb
iret
lea
add
dec
dec
xor
push
outsb
mov
adc
cmp
cmpsb
jb
call
and
mov
lods
mov
int
mov
hlt
or
dec
xchg
out
fnstsw
hlt
adc
aaa
xor
jns
shlb
shrl
sub
imul
mov
mov
out
lods
or
popf
test
int3
mov
sub
sti
adc
mov
loopne
add
adc
jnp
pmulhw
cmpsl
cmp
ljmp
divl
imul
and
pop
out
testl
xchg
fistps
push
ret
scas
sbb
repnz
add
nop
inc
add
lock
mov
jne
lret
mov
add
mov
sbb
add
push
add
sub
lods
dec
addl
js
int3
and
insb
mov
sbb
sub
inc
add
xor
sti
cmpsl
and
inc
add
add
dec
les
addb
add
jbe
mov
daa
and
hlt
dec
push
xchg
leave
outsl
xor
mov
xor
add
movsl
in
xor
add
mov
mov
notb
cs
jbe
rcr
cltd
ds
add
mov
dec
ret
add
and
jae
out
decl
xchg
ret
data16
cli
roll
mov
add
fildl
pop
out
enter
roll
inc
add
xor
add
sub
add
xchg
add
jne
cmp
xor
fidivs
push
mov
incl
push
pop
mov
jne
cld
lret
rolb
repz
fwait
rcr
jecxz
test
add
xchg
or
xchg
and
mov
pop
lds
mov
sarl
sub
rolb
cmp
sub
mov
jecxz
sbb
test
jmp
out
cmp
hlt
out
imul
or
add
xchg
sub
leave
ret
xchg
push
sub
add
sbb
adc
sbb
xchg
inc
add
adc
pop
jbe
dec
fidivrs
inc
add
jmp
test
repnz
movsl
sub
add
add
incb
leave
loop
add
add
lahf
sub
pop
sbb
xor
jp
sahf
sbb
xor
int3
dec
mov
or
add
xchg
mov
sub
inc
add
mov
scas
mov
lock
cs
loopne
cmp
sbb
test
add
add
ret
add
jne
add
sbb
dec
or
xor
out
insb
or
fcompl
dec
notl
fisubrs
xor
out
mov
push
sub
add
loope
mov
xor
add
push
add
jbe
push
or
adc
dec
cltd
cwtl
cwtl
ss
test
inc
add
roll
add
add
add
iret
int3
int3
inc
add
or
aam
fwait
stc
jmp
in
add
out
add
test
jge
pop
mov
in
test
sti
xchg
and
xchg
pop
rcrb
and
push
adc
cmovnp
add
add
std
mov
cmc
testl
imul
inc
add
pop
mov
xor
xlat
dec
cli
mov
push
mov
bound
movsb
mov
pop
push
fldz
mov
js
stos
aas
and
jno
popa
add
pop
and
xchg
xchg
mov
aad
inc
add
add
xchg
ss
mov
xor
fidivrl
lret
repnz
mov
addl
inc
add
cmp
push
daa
das
cmp
xchg
xchg
push
add
mov
loopne
push
xlat
pop
int
add
push
sbb
sbb
mull
jae
and
and
add
in
add
pop
mov
mov
add
add
jno
hlt
inc
add
push
xlat
add
cld
xlat
cmp
add
mov
xchg
daa
es
add
sar
pop
imul
inc
add
testb
ret
sbb
sub
dec
in
cmp
cld
ucomiss
jne
add
add
pop
mov
add
hlt
xor
add
in
cmc
xchg
ficoml
sbb
ret
in
pusha
add
mov
pop
rep
push
lret
push
pop
add
outsb
push
fsubl
add
add
bound
add
movb
add
out
adc
xchg
xor
repnz
mov
fsubr
pop
jne
add
rolb
std
sarb
addb
xor
dec
addb
mov
add
in
cwtl
and
in
or
mov
add
jp
or
cld
movb
shlb
sbb
mov
test
popa
add
dec
imul
mov
add
addb
mov
int3
xor
xor
xor
xor
lahf
xor
cmpsb
pop
dec
aaa
test
pusha
add
movl
adc
add
pusha
add
inc
add
mov
cmpsl
xchg
mov
add
push
stc
jae
je
dec
cmp
jmp
jmp
shlb
mov
inc
add
hlt
or
int3
ja
pop
arpl
jns
rolb
add
sbb
adc
pop
cmp
scas
jmp
jbe
xchg
cli
les
mov
outsl
xor
mov
xchg
inc
add
scas
loopne
lods
icebp
roll
cmp
pop
iret
dec
test
paddq
add
push
cwtl
mov
int3
out
add
cmp
pop
fmull
cli
test
cld
xor
into
xchg
xchg
out
lds
xchg
xor
mov
mov
ret
mov
adc
int3
and
jge
add
and
adc
mov
fnsave
pop
or
cmp
mov
cmp
cmp
mov
addl
sahf
sbb
testl
lea
rolb
add
fisubs
jmp
dec
test
scas
es
dec
cmc
inc
add
sub
test
add
sti
sbb
jnp
dec
fcoms
lods
adc
or
ja
xchg
xchg
scas
xchg
adc
dec
out
stos
inc
add
pop
dec
clc
jbe
add
test
insl
sub
lcall
push
test
mov
add
jmp
sbb
add
push
mov
mov
mov
pusha
add
push
addb
dec
ret
add
mov
add
xor
pop
fwait
arpl
jmp
dec
mov
repz
mov
xor
jbe
insb
aad
mov
xor
test
pop
push
insb
or
test
push
push
mov
sub
mov
hlt
sub
cmp
adc
lret
cmp
testb
stos
fcmovb
add
std
mov
adc
push
movsl
ret
inc
add
cmpsb
mov
jle
pop
dec
mov
jg
fs
add
push
add
add
aam
push
roll
push
add
aaa
inc
add
add
movsb
imul
aad
add
popa
add
lods
stc
mov
add
cmp
mov
xor
mov
clc
add
test
lahf
imul
movsb
iret
jb
insl
add
inc
add
addl
dec
into
das
xchg
push
pop
repnz
test
and
out
pushf
js
push
fwait
cwtl
inc
add
pop
test
add
out
inc
add
cmp
fs
mov
out
push
addl
adc
mov
dec
add
inc
add
enter
dec
mov
xor
add
pusha
add
int
or
or
mov
sbb
cmp
lahf
mov
push
in
adc
or
or
inc
add
movsl
mov
mov
mov
in
xor
push
out
push
lret
roll
xlat
push
cmp
fistpl
test
rcl
adc
mov
mov
repz
lahf
data16
lahf
das
es
add
add
push
sub
and
jbe
sbb
loopne
inc
add
mov
dec
ret
add
imul
out
leave
outsl
xchg
mov
jmp
xchg
xor
adc
add
xchg
xchg
mov
loope
std
inc
add
aaa
into
jo
cmp
stos
icebp
and
daa
stos
stc
test
dec
xchg
cmp
leave
mov
jno
mov
mov
inc
add
cmpsl
into
pop
addr16
adc
pop
push
add
cmp
in
sub
mov
add
out
pop
and
inc
add
jle
mov
jmp
aaa
add
ss
push
add
add
enter
or
arpl
mov
xchg
addl
shl
mov
mov
aad
iret
adc
stos
movsl
dec
gs
mov
xchg
or
je
xchg
add
lret
pop
add
xchg
mov
rolb
hlt
hlt
jno
addb
outsb
add
and
movl
rcrl
mov
and
mov
inc
add
pop
dec
adc
dec
ja
movb
fstps
jg
cmp
xor
dec
xlat
in
in
mov
mov
xchg
dec
add
and
rolb
add
icebp
sbb
adc
std
sub
fcomps
push
and
je
mov
add
outsl
cltd
aaa
aaa
cmp
add
mulb
pusha
add
dec
jae
fsub
js
in
leave
out
pop
test
xchg
xor
data16
jns
fwait
inc
add
pop
mov
out
mov
xor
insb
jge
adc
addb
xor
push
out
or
cmc
or
cmp
add
add
stc
jbe
add
fcmovbe
pop
es
push
jmp
addb
fs
ds
add
dec
in
aas
or
add
inc
add
addr16
icebp
rolb
dec
addb
or
dec
cmc
out
xchg
fsubrs
add
dec
inc
add
sub
loopne
add
movl
add
mov
dec
pusha
add
push
dec
shrl
cld
sub
pop
incb
add
push
and
adc
pop
ret
add
push
mov
jns
les
hlt
xchg
mov
pop
jbe
and
in
jp
fldt
mull
pop
xlat
pop
add
sub
xor
inc
add
push
mov
push
push
mov
test
xor
mov
pop
dec
push
into
lcall
pusha
add
add
add
jae
cld
push
and
push
add
das
int
cwtl
addb
push
push
xlat
xchg
sub
add
cmp
add
add
icebp
xchg
xchg
pop
sbb
dec
aad
add
xlat
push
sbb
add
nop
mulb
aas
mov
jp
cmp
ret
add
fsub
rclb
add
not
loopne
filds
add
pop
mov
in
call
add
imul
add
stc
pop
jle
aad
sub
mov
pop
inc
add
ret
add
cwtl
or
mov
bound
add
xchg
adc
lret
inc
add
dec
jmp
roll
sbb
lahf
xor
pop
lds
xchg
mov
mov
sti
add
xchg
jp
add
aas
add
inc
add
stos
mov
rolb
add
add
xchg
mov
jbe
add
in
add
addr16
pop
push
push
jns
das
add
mov
pop
push
add
mov
ss
mov
mov
shll
dec
sahf
jne
test
adc
adc
fisubrs
sbb
lods
cli
inc
add
dec
mov
add
out
test
add
sbb
push
int3
repz
shlb
and
outsl
jb
dec
aas
sub
mov
and
out
mov
daa
clc
pop
mov
fwait
outsl
cwtl
leave
adc
push
sbb
adc
cmpsl
std
jne
jecxz
out
mov
notb
jmp
lret
cmc
lock
inc
add
into
adc
adc
addl
sub
adc
mov
fcompl
arpl
mov
add
lret
ret
add
int3
dec
movsl
les
xchg
sub
xchg
insb
in
std
sub
xchg
mov
push
pop
addl
mov
rol
add
mov
fildl
jg
addl
add
icebp
mov
addb
test
aam
mov
xchg
lds
in
addl
out
lcall
cmp
std
xchg
shrb
test
inc
add
add
push
sahf
cmp
add
repz
add
add
add
