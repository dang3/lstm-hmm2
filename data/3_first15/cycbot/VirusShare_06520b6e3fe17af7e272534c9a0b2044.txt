movb
idiv
add
call
xchg
pusha
add
add
add
add
push
bound
adc
add
ljmp
xchg
xor
js
add
incl
lcall
scas
les
cmpsb
add
inc
add
add
mov
pop
push
out
cmp
xchg
mov
icebp
into
sub
icebp
xchg
dec
adc
add
cs
jg
add
cmp
pop
and
addl
inc
add
add
call
add
mov
popf
mov
add
popa
add
xchg
cmp
fistpl
add
int
add
jmp
lcall
daa
add
lahf
jne
push
mov
insl
fistpl
mov
add
lret
adc
cmp
add
sbb
inc
add
lcall
daa
add
jae
add
dec
pushf
mov
int3
sub
add
into
dec
shll
loop
xor
decb
rorl
jb
xor
or
shl
add
sub
add
pushl
decl
and
outsb
jp
adc
je
xor
add
or
mov
scas
outsl
pop
in
xchg
mov
fbld
adc
pop
cmp
cmp
mov
mov
lret
negb
cmc
cwtl
in
mov
lcall
imul
add
sub
jnp
push
in
add
decl
into
dec
lods
sbb
jg
lahf
jb
pusha
add
pop
xchg
lods
cmp
add
add
add
call
pop
jbe
mov
pushl
sbb
mov
cltd
mov
ret
add
pop
addl
cmpsl
add
add
jnp
fildl
dec
cmp
inc
add
cmc
cmp
dec
xor
push
dec
popa
add
movsl
add
add
add
pop
roll
add
cmp
aad
std
push
xlat
lods
cmpsl
add
jo
jno
add
decl
daa
add
sahf
data16
lret
divl
add
cmp
add
add
in
xchg
sub
add
ds
jp
add
jg
mov
add
add
pop
out
jge
loopne
inc
add
inc
add
sub
add
add
arpl
dec
loope
add
ljmp
add
push
push
adc
add
roll
add
jne
test
adc
add
pmulhw
sbb
or
ljmp
pop
mull
add
or
insb
xchg
pop
test
add
cmc
enter
add
jg
stos
sub
xchg
data16
sub
push
std
add
sbb
out
pop
push
inc
add
fbld
add
sub
add
add
pop
in
add
mov
sahf
push
in
arpl
cmp
pop
xchg
inc
add
lock
mov
add
pop
mov
jno
add
scas
xor
fcoms
aam
add
ljmp
pop
or
jns
add
mov
cmp
push
and
clc
cmp
add
add
add
add
jae
dec
pop
rolb
loope
fwait
jle
add
dec
sarb
movl
add
add
add
add
sub
add
add
add
xchg
pop
xorps
incl
das
push
push
int
push
imul
in
xor
pop
test
mov
aam
mov
add
mov
mov
cmp
mov
outsl
stos
movl
movb
movsb
add
ja
xchg
aam
add
cmp
add
jl
aad
mov
cld
bound
roll
in
xor
add
clc
ds
outsb
lret
mov
add
push
clc
xor
lret
aaa
xchg
lds
fbstp
adc
sub
add
test
inc
add
add
inc
add
test
fwait
sbb
ja
mov
sahf
mov
add
ret
jnp
add
adc
fchs
add
mov
aaa
jns
push
je
sub
push
cld
bound
lds
jae
stos
dec
mov
add
pushl
sub
in
cmp
dec
movsb
add
mov
cmpsl
add
incl
add
add
addb
add
mov
insb
and
stos
data16
sub
pop
stos
fldcw
xor
sahf
cmp
in
mov
fsts
cmp
lcall
add
int3
xchg
dec
mov
cmpsl
add
mov
add
lea
mov
aam
hlt
sahf
sub
sub
xchg
cld
mov
hlt
add
call
mov
add
sahf
scas
push
xor
mov
repnz
dec
xchg
pop
les
lds
and
jl
push
or
add
cmp
add
pop
add
add
add
add
fcoml
movb
ljmp
loopne
sbb
jb
xchg
ss
mov
stos
adc
enter
add
add
inc
add
rcrb
xor
push
add
dec
inc
add
shll
xor
aad
cmp
or
nop
out
data16
add
add
call
or
pop
icebp
mov
ret
add
rcr
inc
add
in
cmp
daa
add
add
nop
sahf
mov
push
fldt
add
xchg
add
lcall
push
add
adc
add
add
testl
fstps
add
fwait
lret
add
test
xlat
or
add
jne
push
dec
inc
add
cmp
mov
add
loopne
fdivrp
cmc
lods
and
into
test
mov
add
add
sub
fsubrs
into
fists
outsb
je
add
mov
add
pushl
add
mov
movb
call
add
pop
movl
mov
sbb
add
mov
add
fs
add
lret
dec
cmp
xchg
mov
add
or
add
add
add
xor
call
xor
push
clc
sub
addl
add
xchg
aam
jns
fbstp
dec
shrl
out
scas
or
ljmp
fnsave
add
add
inc
add
add
add
jbe
and
xor
mov
enter
or
adc
data16
test
hlt
mov
stos
stc
mov
add
add
or
and
imul
push
add
mov
pushf
fbstp
push
and
jecxz
arpl
ret
add
add
incl
ljmp
xchg
push
mov
hlt
rolb
xlat
dec
adc
xor
pop
repz
mov
ljmp
shll
xor
xchg
push
call
int3
jne
cmpsl
add
sub
addl
xchg
sub
adc
mov
push
cmp
decl
pop
add
add
jecxz
sub
addl
add
dec
and
add
cmp
push
jmp
xor
sub
jb
add
jb
cs
dec
loopne
jg
repz
lods
out
in
das
lock
push
add
call
inc
add
cmp
leave
fwait
repz
xchg
jl
xchg
dec
xor
xchg
leave
ja
je
add
cmpsb
add
push
imul
lea
push
sbb
add
add
add
ljmp
inc
add
pushl
js
test
out
push
cmp
sub
loope
xor
pusha
add
add
int3
sbb
mov
pop
daa
add
out
sbb
addl
add
fwait
mov
push
xor
movb
jecxz
sahf
out
ret
xchg
jmp
jb
adc
xor
add
add
stc
cmpsb
add
leave
jmp
mov
cltd
int
cmp
add
pusha
add
xchg
mov
loope
les
inc
add
mov
mov
fists
xor
mov
das
mov
pop
cmp
mov
mov
add
clc
sbb
add
mov
popl
jno
repnz
rclb
rclb
shlb
in
mov
scas
rolb
add
decl
add
sbb
iret
push
dec
xor
incl
mov
jp
pop
in
mov
push
xchg
fucom
add
lahf
add
adc
jmp
add
add
cmc
pop
add
lcall
clc
mov
stc
dec
add
mov
jnp
add
cmovns
jbe
push
mov
call
add
jge
xchg
movl
mov
xchg
fwait
adc
pushl
jmp
scas
das
out
jmp
add
add
xchg
sbb
push
sub
mov
lret
test
rol
add
adc
xor
add
mov
jne
mov
add
add
stos
jp
add
addr16
imul
ljmp
lods
add
fbstp
add
add
xchg
push
adc
xchg
mov
add
test
push
sub
mov
add
sti
repz
movl
inc
add
lods
movl
add
lds
das
icebp
addb
add
out
in
mov
mov
dec
repz
sbb
cmp
outsl
fdivl
dec
clc
and
stc
adc
add
add
mov
bound
fildll
arpl
cmp
push
pop
in
xchg
fwait
add
add
lret
popf
rolb
addl
push
jno
les
mov
add
push
cmpsl
add
in
pusha
add
pop
ljmp
mov
enter
add
push
cltd
scas
addb
add
add
imul
add
aaa
shrl
lcall
jge
xor
aas
adc
add
decl
fdivrs
sub
add
pop
lcall
add
cmp
add
and
mov
lahf
data16
or
add
sub
imul
test
addb
in
xlat
fistpll
add
movb
dec
jg
decl
popf
iret
pop
xchg
roll
add
cs
add
add
or
out
fstl
incl
in
xchg
mov
or
add
jge
xchg
lods
push
pop
aaa
jle
out
decb
add
test
icebp
pop
or
data16
sbb
add
rcll
bound
inc
add
pop
or
add
add
inc
add
mov
add
jmp
inc
add
add
fadds
and
sbb
add
add
inc
add
dec
push
push
fdivs
jnp
mov
push
jge
in
inc
add
fcmovnbe
and
xor
roll
mov
jle
cmp
pop
and
fucom
add
rcrb
add
aas
out
insb
outsl
test
add
fbstp
jmp
ja
add
test
cltd
insb
call
xor
jmp
sub
sub
dec
rolb
mov
imul
adc
add
push
cmpsb
add
mov
add
pop
add
test
test
mov
fdivrl
and
aaa
push
xor
lahf
mov
outsl
fwait
rorb
out
cmp
dec
lcall
add
decl
mov
mov
add
aas
cmpsb
add
inc
add
jbe
ja
add
in
or
push
imull
imul
cmp
inc
add
rcrl
push
out
xchg
mov
add
cmpsl
add
sbb
int
sbb
mov
sahf
and
pop
push
movb
add
mov
add
cmpsl
add
cwtl
movl
roll
add
sbb
add
mov
out
in
out
sbb
add
add
mov
inc
add
lahf
cwtl
ret
add
xor
fnstcw
xchg
fs
movsb
add
repnz
lcall
add
sbb
jae
push
arpl
add
and
push
mov
ja
adc
add
loopne
and
cmp
mov
add
addr16
sbb
add
roll
repnz
outsl
rolb
mov
add
add
cmpsb
add
xchg
inc
add
sbb
repz
jmp
adc
lcall
pop
scas
add
pushl
dec
dec
xor
mov
add
xlat
adc
ret
mov
jle
add
push
add
pop
xchg
jo
aam
addl
add
mov
add
inc
add
or
sbb
sbb
xor
mov
xchg
leave
xor
adc
or
addb
mov
xchg
inc
add
add
inc
add
cltd
imul
fnsave
push
les
std
or
je
movb
sbb
xchg
repnz
outsl
cmp
xor
mov
add
add
dec
inc
add
xlat
xchg
push
adc
data16
cs
jmp
add
add
xchg
jle
add
cmp
add
cmpsb
add
cmp
inc
add
fdivs
add
jmp
std
and
loopne
and
leave
sub
movb
add
insb
jae
movsb
add
mov
pop
add
add
pop
jne
add
pop
in
dec
and
jo
arpl
je
add
cmp
cmpsb
add
jbe
add
lcall
movsl
add
mov
pushf
aad
cmp
mov
add
xor
dec
jnp
mov
stc
xchg
faddl
push
add
xchg
xchg
movl
fcom
mov
add
les
add
xchg
stc
mov
add
mov
add
add
adc
lcall
mov
jp
cmp
fdivrl
push
lret
add
xchg
mov
dec
mov
cli
popf
and
in
or
adc
mov
lds
sbb
add
add
dec
ljmp
ds
insb
jle
mov
fbld
add
add
pop
nopl
cli
hlt
stc
insl
push
mov
add
ret
add
jo
pop
xchg
pop
jno
ret
dec
insl
sbb
fisubrs
and
jne
cmp
mov
cltd
push
dec
leave
pusha
add
cmp
in
mov
mov
push
push
mov
add
add
les
addb
inc
add
push
fwait
loop
shll
pop
add
call
or
movsb
add
push
add
sub
addl
pusha
add
sub
jmp
mov
sbb
mov
add
sahf
xchg
mov
and
cmp
lcall
add
pop
js
mov
inc
add
xor
aam
inc
add
jg
or
incl
dec
mov
add
pop
pop
add
add
cmp
add
mov
add
add
pushl
cmp
clc
fadd
add
dec
into
bound
sbb
xchg
call
mov
add
xchg
mov
mov
inc
add
xor
add
or
dec
dec
in
mov
divl
movsl
add
in
sub
fidivrl
xor
mov
add
xor
add
lahf
leave
jbe
pop
add
push
mov
fnstsw
pusha
add
cwtl
adc
ss
insb
push
add
inc
add
add
pushl
lods
and
mov
mov
xlat
inc
add
out
ficoml
lret
push
xchg
adc
add
incl
add
clc
xchg
mov
out
mov
add
pushl
nop
sub
aam
lea
push
addl
inc
add
or
notl
jne
scas
pop
jne
add
push
fs
mov
scas
daa
add
popa
add
add
mov
add
xor
add
add
inc
add
mov
jbe
jb
add
ret
add
cmp
jl
pop
xchg
test
test
push
lds
jo
aaa
aad
ljmp
popf
fiadds
test
out
fucomp
pop
xchg
inc
add
xrelease
and
xor
in
adc
mov
dec
mov
xchg
clc
mov
cmp
mov
arpl
mov
xor
out
inc
add
add
std
add
cltd
dec
jae
or
fiadds
xchg
xchg
scas
pop
enter
lret
shll
addb
add
ret
xor
insb
or
movsb
add
jp
mov
jl
and
push
and
into
mov
pop
ljmp
adc
add
shrl
in
jg
jb
push
mov
sub
xor
call
and
jne
dec
push
call
test
je
movzbl
add
mov
add
mov
shr
push
push
addl
call
push
call
leave
ret
push
cld
mov
push
push
mov
lods
xor
mov
sub
add
mov
add
stos
xor
pop
pop
leave
ret
jmp
jmp
jmp
aam
add
add
ljmp
jmp
inc
pop
mov
mov
not
fxtract
sub
mov
or
sub
fistps
iret
sbb
add
sub
fisubl
add
add
fwait
pop
add
dec
inc
add
mov
jmp
add
add
rorl
add
add
outsb
mov
add
lahf
addb
psllw
clc
test
or
sub
push
pop
add
push
xorl
add
je
xor
push
data16
out
sub
jne
adc
sbb
add
imul
inc
add
sub
jg
cmp
add
add
xchg
mov
mov
xchg
xor
out
mov
push
add
in
cmp
pop
mov
fucomi
lahf
fiadds
in
push
decl
jmp
sbb
fbld
add
je
jmp
push
out
imul
data16
ss
pop
icebp
iret
jge
xchg
push
rorl
test
icebp
and
add
lcall
add
movl
out
movsb
add
add
lcall
pushf
add
incl
mov
xor
add
sbb
push
add
push
and
cltd
dec
push
jmp
dec
sub
push
inc
add
insb
inc
or
pushl
push
arpl
push
add
pop
sbb
add
jl
fwait
cmp
xor
add
push
rolb
add
adc
mov
mov
cwtl
aas
data16
or
call
add
add
mov
rolb
push
shl
jmp
push
add
adc
ljmp
lea
stos
repnz
ret
add
add
scas
loopne
rorl
aam
mov
add
in
repnz
add
add
lahf
xor
add
cmpsb
add
test
mov
pusha
add
add
sahf
mov
jmp
mov
lock
aas
inc
mov
push
xlat
add
inc
add
xchg
leave
mov
pop
add
lea
ljmp
add
add
add
add
add
add
pop
add
adc
cli
stos
leave
fs
dec
popf
movsl
add
or
jecxz
adc
imul
and
fiadds
add
push
repnz
add
add
mov
add
jmp
push
xchg
and
aam
lret
jne
push
ret
or
movsl
add
add
xchg
cli
add
lcall
add
pushl
push
mov
mov
sti
adc
out
stos
xor
mov
cmp
int
mov
int
je
push
ret
repnz
jmp
mov
dec
ljmp
aas
test
sbb
add
incl
xchg
push
add
adc
mov
sbb
and
push
stos
loop
call
sti
movb
add
dec
ja
lods
sbb
mov
lock
push
xchg
movsl
add
ds
add
push
or
pop
addl
add
adc
cmc
sub
mov
dec
add
push
push
xchg
cmp
arpl
cld
fildl
addb
into
cs
psubsb
mov
add
addl
add
add
inc
add
xchg
push
add
add
add
mov
arpl
addl
sti
jb
inc
add
movl
add
test
std
jnp
inc
add
das
jb
out
bound
iret
mov
sbb
add
xchg
mov
pop
cmp
ret
add
call
jmp
sbb
js
js
mov
shlb
cwtl
movsl
add
pop
out
clc
lock
pusha
add
sub
and
ret
add
mov
pop
sub
movl
add
jmp
add
add
cmp
ret
add
inc
add
xchg
sub
push
jmp
sub
ljmp
pop
and
loopne
cltd
push
cltd
push
cmpsl
add
add
mov
add
adc
movl
push
push
mov
je
add
inc
jae
js
call
add
mov
inc
add
stc
sbb
add
in
jo
dec
pop
add
mov
cmp
fistpl
loope
mov
aas
addr16
add
lods
fcomip
and
cmp
loope
stos
mov
mov
iret
xchg
lahf
mov
xor
add
add
addb
add
lds
dec
lock
add
inc
add
add
iret
push
inc
add
clc
iret
rcrl
test
sub
xchg
addl
add
lahf
add
dec
out
add
addl
add
int
pop
cmp
add
pushl
sub
lahf
cmp
mov
jge
test
inc
add
ret
data16
aad
jl
add
js
into
mov
lock
stc
inc
add
cld
addl
decl
or
push
add
ljmp
jmp
in
and
pop
inc
add
dec
add
push
dec
repz
add
cli
push
add
mov
add
add
fyl2xp1
btc
add
addl
pop
push
mov
add
add
decl
aas
jns
add
nop
repz
push
or
enter
xor
bound
clc
imul
xor
jb
add
icebp
gs
mov
add
dec
sub
add
addl
test
add
dec
push
leave
adc
outsl
xchg
int
imul
dec
jne
xchg
stos
push
jecxz
sub
fmull
adc
add
add
shr
inc
add
and
sub
fists
jne
jmp
js
add
cs
add
jmp
add
jmp
jmp
enter
add
add
xlat
ljmp
push
ret
push
arpl
sub
stos
mov
adc
mov
xor
sub
push
and
mov
pop
adc
add
add
mov
cmp
add
in
mov
push
fimuls
jle
imul
mov
add
add
test
push
in
movb
pop
add
add
movsb
add
rcl
pop
movl
outsl
or
fstl
insb
jl
add
popa
or
cltd
mov
add
xlat
inc
add
add
add
inc
add
pop
add
and
cmp
ss
ret
inc
add
addb
iret
cwtl
loope
test
xchg
cwtl
and
mov
add
sbb
decl
add
push
adc
sub
sbb
add
add
repnz
mov
adc
xchg
mov
add
jae
jg
add
push
out
jne
cmp
push
jmp
fldenv
push
dec
pop
aad
jg
add
adc
fcomps
add
add
jmp
add
add
xor
or
add
add
add
add
add
sub
add
aaa
add
add
int
dec
cmp
dec
data16
int3
dec
bound
cmp
xchg
push
pop
adc
add
mov
adc
add
cld
cmpl
rcl
xchg
in
pop
add
lcall
pop
ret
sbb
jae
add
push
outsl
adc
addb
outsl
sarl
out
ljmp
addl
pinsrw
cltd
cli
push
adc
mov
jmp
sbb
push
sbb
add
idivb
test
push
pop
loop
jo
add
push
insb
dec
fists
add
out
push
mov
jne
fidivl
add
pop
push
and
out
inc
add
add
cmp
add
data16
add
jmp
aas
movsl
add
add
push
adc
daa
add
sub
add
add
cmp
mov
add
add
add
bound
call
sbb
mov
cwtl
test
addb
stos
mov
sub
fstps
push
add
pusha
add
gs
add
mov
adc
add
sub
bound
jp
incl
push
mov
jmp
push
popa
push
push
shrl
add
lcall
out
shld
adc
and
cmc
inc
add
cs
jp
addl
add
mov
add
data16
add
movl
add
push
test
mov
aas
dec
xlat
loop
arpl
outsb
daa
add
add
nop
jl
add
stos
xchg
dec
addb
mov
jmp
js
push
cmpsb
dec
push
dec
movl
loop
jmp
fnstcw
insb
repz
or
push
ret
lcall
xor
ret
insl
outsb
scas
xor
out
or
add
dec
cmpsb
add
push
xchg
jmp
or
enter
cmp
shl
loop
xor
das
push
lds
clc
and
sahf
fidivl
icebp
mov
jle
scas
test
sti
xchg
loop
sub
add
mov
stos
sub
add
into
adc
icebp
sbb
push
xchg
xor
cmp
movl
push
jge
mov
add
add
shrl
push
ret
lcall
push
ret
sub
outsl
shll
loope
mov
cmp
add
add
add
add
xchg
icebp
out
movl
sub
add
mov
push
sarl
or
add
les
xor
addb
lods
enter
pop
aas
fcmove
std
fldenv
sub
mov
add
add
add
jmp
aad
leave
mov
mov
push
mov
in
add
lea
add
add
mull
add
add
add
in
ja
add
call
add
popa
add
scas
mov
add
decl
add
popa
add
add
aad
cmp
adc
aam
jmp
loop
movb
cmp
out
test
mov
iret
push
fwait
cwtl
adc
add
pushl
or
dec
push
ljmp
add
adc
add
mov
aad
inc
add
sub
mov
dec
and
mov
add
mov
pop
or
ffree
add
add
es
add
add
jno
fbld
xor
and
test
mov
daa
add
adc
xchg
je
add
out
hlt
xchg
mov
jecxz
ja
add
loop
cld
mov
roll
decl
das
add
dec
mulb
pop
adc
addb
mov
add
add
mov
xor
sbb
call
pusha
add
ret
add
scas
jne
add
adc
movsb
add
add
add
cmp
push
ret
xchg
cld
push
adc
push
xchg
jp
fwait
mov
inc
add
mov
add
adc
add
cmc
cltd
add
cmp
jl
int3
cmp
ds
sbb
rorl
inc
add
add
dec
jnp
sub
add
repz
aaa
xor
mov
add
js
in
inc
flds
pop
inc
add
or
xor
cmc
jle
sub
add
inc
add
mov
incl
dec
cmp
ret
add
push
add
add
add
sbb
add
pop
sub
lock
inc
add
push
int
jg
add
ljmp
push
jmp
adcl
cmpsb
jb
add
enter
cmp
rolb
cld
pushf
ret
add
adc
movb
add
outsb
pop
jne
testl
addb
xchg
loop
xlat
pop
cmp
addb
push
xor
outsl
mov
enter
add
add
jae
inc
add
clc
movsl
add
call
add
add
movl
aad
cmp
fadd
add
and
das
xchg
in
dec
push
or
cmpsl
add
ljmp
addl
lea
inc
add
pop
out
ds
xlat
pop
test
jl
lcall
add
incl
cmpsb
add
sub
push
add
jne
jmp
lock
dec
pop
mov
add
add
add
add
lcall
add
arpl
movb
mov
mov
testl
push
adc
add
xchg
jg
add
pop
add
jnp
and
jge
aad
add
mov
jmp
add
int
and
je
add
push
jmp
pushf
push
dec
xchg
jbe
push
out
or
cmc
lret
call
dec
push
ss
inc
add
mov
push
ret
push
push
fistpl
push
call
jmp
dec
mov
jmp
push
add
movsl
add
stc
fisttps
outsl
dec
pusha
add
das
mov
stos
insl
rcll
sbb
ljmp
arpl
cmp
dec
lea
sbb
add
add
test
addb
test
push
imul
push
mov
inc
add
addr16
int
lret
mov
decl
add
pop
inc
inc
and
hlt
in
aas
inc
add
add
pop
jb
sbb
xlat
ds
inc
add
sbb
ss
pop
lahf
fwait
insb
dec
and
nop
ja
roll
jmp
add
add
mov
pop
into
mov
movsl
add
mov
add
add
add
add
add
ficoms
add
sbb
in
or
pop
dec
adc
add
scas
in
jmp
jecxz
shll
hlt
dec
lods
enter
js
sub
loop
and
movb
add
cwtl
scas
out
loopne
mov
inc
add
js
adc
lcall
pop
aas
add
sub
push
insb
ret
adc
add
fidivrl
add
pushl
jmp
sbb
lcall
pop
das
fists
mov
pop
movsb
add
fdivp
pop
inc
add
add
ljmp
insl
out
cmc
rolb
add
add
add
incl
add
add
test
adc
add
xchg
out
test
inc
add
popa
add
inc
add
adc
popf
mov
cld
lcall
mov
push
lods
fnstenv
pop
xor
scas
adc
in
jb
lods
or
push
mov
leave
fnstenv
add
mov
add
or
sub
add
inc
add
add
rolb
mov
jmp
in
out
sub
add
movq
push
ret
mov
notb
pop
push
add
ljmp
js
in
stos
fwait
jns
pop
imul
add
sbb
daa
add
mov
sahf
add
add
xor
xor
adc
sahf
sub
xor
dec
jp
lods
jecxz
jne
loope
test
mov
call
rorb
add
adc
pop
adcl
add
add
fistl
push
xor
add
repnz
ja
push
mov
mov
jmp
add
hlt
les
adc
push
lea
add
jae
add
add
sbb
pop
sbb
bound
and
pop
movsb
add
xor
add
push
push
pop
jg
shl
jmp
jle
dec
add
or
iret
xchg
test
add
add
movsb
add
and
std
push
jecxz
js
add
add
mov
scas
mov
mov
inc
add
and
sub
inc
add
push
clc
and
roll
clc
std
sti
mov
add
pop
add
inc
add
mov
loopne
xchg
mov
in
fdivrl
add
add
add
js
add
add
arpl
mov
add
xchg
aas
cmp
add
add
ljmp
jl
sbb
in
xchg
repz
movl
cmp
add
add
addb
pop
add
add
notb
mov
add
mov
int
xchg
jmp
mov
add
iret
mov
cld
and
add
mov
xlat
pop
push
jp
outsl
push
dec
sub
pushl
xchg
pop
add
addr16
pop
and
push
add
movsb
popa
add
push
or
nop
fcoms
addl
in
lods
mov
rcrb
mov
add
lcall
add
push
jle
xchg
jb
xchg
pop
cmp
add
add
adc
out
push
pushf
mov
add
add
add
push
xchg
or
sar
mov
push
ret
and
sbb
jmp
mov
jbe
add
mov
cmp
add
pop
mov
cmpsb
dec
insb
imulb
add
add
add
jns
add
mov
repz
pop
add
push
sub
inc
add
add
pop
push
push
add
inc
stos
push
push
aas
inc
mov
std
out
mov
and
pop
movb
add
add
add
in
sub
add
lret
in
pop
cmpsl
add
mov
enter
xlat
rol
add
loop
or
test
lods
sub
in
sbb
add
mov
add
mov
jb
add
std
add
jmp
add
lock
mov
movl
repz
jmp
add
add
add
pop
jmp
stos
push
push
add
and
mov
add
repz
addl
sub
stos
je
stos
ja
rcl
jbe
sbb
add
inc
add
mov
mov
clc
mov
lea
add
add
jae
add
dec
lods
push
mov
push
and
pop
flds
popf
lcall
lcall
repz
jo
and
cwtl
jle
add
sbb
testl
add
push
push
push
fdivrs
jns
add
adc
stos
pop
sbb
add
addl
jae
add
ret
mov
add
out
cmc
in
pop
out
and
add
call
add
data16
jmp
addb
jp
mov
push
push
add
jmp
push
rolb
add
pop
add
add
xchg
jecxz
adc
add
call
add
push
inc
negb
push
aad
movl
xchg
and
mov
mov
add
add
add
sbb
or
add
and
jne
add
add
daa
add
sub
cmp
pusha
add
add
mov
mov
sbb
add
push
out
das
xchg
iret
out
inc
add
jmp
outsl
imul
dec
pop
xlat
out
out
push
add
jmp
mov
decl
addb
xchg
sar
pop
inc
add
push
push
cmp
add
jmp
add
inc
add
dec
xchg
inc
add
addb
pop
arpl
mov
sbb
add
mov
xchg
fwait
pop
rcll
ljmp
repz
out
jns
cmp
aam
cs
add
data16
add
ja
xchg
xchg
sub
or
pop
sbb
push
jmp
push
mov
add
lock
inc
add
into
sbb
push
jne
push
ret
std
inc
add
jne
lods
sub
pop
jp
jae
adc
imul
cwtl
cltd
and
pop
push
jns
mov
or
and
js
data16
imul
and
lcall
adc
aam
stos
and
addb
add
popl
call
add
add
add
pop
mov
pop
sbb
ljmp
adc
js
cld
add
popa
add
mov
add
mov
fisubrl
add
cmp
add
and
out
or
fsubl
adc
xchg
mov
js
sbb
pop
ljmp
es
ret
add
lock
jae
add
push
jne
add
add
fidivrs
xchg
out
pop
inc
add
sbb
or
aam
add
cmc
or
add
add
add
add
adc
pop
mov
stos
lds
negl
lahf
cmp
add
sarl
repnz
arpl
or
add
sub
lock
cmc
scas
cwtl
fisubs
jns
add
inc
add
push
add
add
add
mov
xor
jnp
xor
adc
add
add
add
adc
and
cwtl
call
add
pop
ss
in
repnz
add
add
and
jp
push
and
add
in
or
and
pxor
setge
dec
leave
mov
sbb
add
mov
adc
add
loop
ja
repz
mov
mov
add
add
das
push
enter
das
lcall
pop
fwait
cs
add
xchg
push
addb
movl
xchg
popa
add
mov
inc
add
add
add
jmp
sub
adc
mov
add
add
sub
push
add
pop
pop
jp
push
add
mov
pushf
mov
lds
imul
mov
arpl
mov
lds
int3
mov
roll
push
push
mov
xchg
mov
js
mov
loop
inc
add
rcrl
jb
add
or
fidivrs
add
lahf
adc
add
or
mov
ljmp
jbe
add
push
addb
add
xor
dec
rclb
pushf
dec
aas
call
add
loopne
aam
push
lods
pop
popa
add
and
and
xor
aad
add
and
lret
cmpsb
add
mov
dec
mov
mov
push
ret
push
mov
data16
pcmpgtw
cmp
add
add
add
scas
pusha
add
sbb
add
mov
and
add
popa
jle
sbb
and
movb
je
addb
and
test
jl
les
xchg
mov
add
mov
pop
mov
add
and
addb
add
sbb
adc
push
aas
test
in
add
stc
jae
xor
cs
nop
dec
xchg
lods
pop
jmp
pop
add
jb
insb
sti
xchg
bound
add
incl
rolb
add
add
insb
enter
push
loope
fildll
adc
add
aas
cmp
add
fisttpl
push
ret
jmp
push
into
iret
add
test
add
add
mov
mov
cmp
call
rcll
push
iret
shrb
test
add
daa
inc
add
pop
shr
scas
int
add
fxch
in
out
iret
xchg
xchg
mov
add
inc
add
sub
es
cmp
jb
add
test
add
bound
add
ljmp
cmp
jmp
cmp
sbb
push
imul
jmp
add
icebp
ja
xchg
add
jmp
add
movsb
add
add
iret
xchg
aaa
and
movsl
add
js
cmp
add
xchg
mov
xor
inc
add
or
rolb
call
push
cmp
add
adc
add
stos
xchg
cmp
lea
notl
fistpl
adc
mov
out
fyl2xp1
mov
add
and
sbb
add
pop
cmp
add
testb
and
jle
enter
fbstp
add
decl
mov
add
leave
jbe
push
leave
movsb
add
cmp
js
mov
jecxz
stos
popf
add
ljmp
add
cmp
add
xchg
and
lcall
push
mov
dec
dec
mov
xchg
cld
cmp
lock
xchg
loop
cmp
add
lcall
cmp
ljmp
ss
mov
add
jno
pcmpgtd
mov
add
aam
jo
inc
add
mov
jp
push
roll
xchg
je
add
add
jne
mov
lret
mov
dec
pop
add
push
mov
add
add
add
sub
jae
jns
jns
popf
mov
push
add
add
jnp
push
ss
add
sti
test
push
jne
add
add
pop
addb
add
add
dec
imul
add
mov
in
rolb
and
adc
pop
ret
add
xchg
xor
or
sub
or
adc
test
pop
jae
pop
mov
push
pop
add
mov
push
ds
roll
push
mov
inc
add
jle
add
pop
jmp
push
ljmp
add
cwtl
dec
addb
or
add
add
add
cmpl
push
ret
jbe
aas
and
mov
lcall
add
pop
lea
cmp
outsb
sbb
jo
push
dec
aas
xchg
out
cmp
add
movl
jmp
cmpsl
add
add
add
in
push
daa
add
mov
push
dec
cmp
outsl
mov
addl
xor
add
push
mov
jp
mov
psadbw
push
add
mov
mov
out
lcall
pushl
ljmp
or
add
adc
popa
add
ljmp
inc
jmp
orl
push
call
jmp
adc
push
shll
add
cltd
sub
pushf
ljmp
ret
sub
idiv
loopne
int
lea
jmp
into
add
ja
push
add
add
xchg
enter
add
add
add
add
mov
inc
add
jo
int3
inc
add
sub
mov
and
cmove
pop
and
cmp
aaa
imul
mov
add
cmpsb
add
cs
es
cmc
jno
or
cltd
aad
sahf
sbb
add
int3
out
adc
js
add
add
sub
push
mov
inc
add
add
mov
icebp
or
or
add
xchg
xor
or
mov
add
push
jmp
cmp
das
jmp
rcr
mov
dec
xor
add
mov
add
jmp
or
mov
sub
ja
add
add
pop
imul
addb
mov
add
decl
dec
clc
xor
sub
add
or
fnsave
and
pop
xchg
lods
cmc
mov
fdivrp
push
mov
jmp
jb
clc
mov
cld
fucomi
dec
xor
add
in
jmp
add
outsb
mov
jg
inc
add
lds
dec
enter
jns
mov
sbb
xchg
aad
mov
add
jbe
jg
sub
cld
sar
mov
add
push
negb
mov
jmp
aam
add
pushl
loope
xstore-rng
cmpsl
add
add
outsb
div
outsb
dec
mov
push
sub
dec
ret
add
rorb
add
add
stc
je
mov
pop
add
fcomp
hlt
dec
lds
fisubl
lret
test
add
add
les
and
mov
add
data16
in
mov
sbb
addb
mov
cmpsb
add
ret
add
lcall
shrl
jge
jmp
popa
lcall
lahf
sti
adc
in
faddl
and
or
push
add
mov
leave
cmp
mov
enter
int3
in
in
int3
add
inc
add
pushl
jmp
or
daa
add
xchg
lods
out
cmc
stos
dec
inc
add
pop
ret
add
inc
add
add
dec
cltd
sbb
scas
xor
add
add
pop
add
ficoml
push
ret
inc
enter
or
lret
cmpsb
add
cmp
jno
mov
add
movsl
add
add
test
cld
pop
adc
add
sbb
test
pop
out
stos
cmc
mov
xchg
inc
add
mov
and
lea
jmp
data16
jp
cmc
fcmovb
add
add
ljmp
lahf
loopne
mov
pop
dec
movl
repz
or
addl
inc
add
dec
fldcw
add
add
cmc
loope
sub
add
fadds
mov
push
bound
and
daa
add
es
add
movsl
add
stos
movsl
add
sub
lods
push
aam
add
add
add
jmp
cmp
fcomip
jle
in
int3
push
fidivs
mov
pop
add
push
push
add
lods
xchg
pop
mov
in
sarb
adc
pop
adc
sub
call
movl
cwtl
push
mov
push
push
jmp
push
inc
add
aas
in
mov
mov
test
icebp
jmp
push
push
push
ljmp
lahf
cmp
ljmp
bound
mov
cmp
push
push
add
dec
mov
les
xchg
das
loopne
lea
movsl
add
fnstcw
inc
add
addb
add
aam
add
add
ja
push
xchg
ret
add
call
mov
jmp
in
dec
push
insb
push
sub
sub
push
decl
push
ret
in
push
fisubl
mov
mov
add
cld
arpl
ljmp
add
add
xchg
lods
js
stos
xor
mov
and
cmp
je
rcrl
mov
mov
add
data16
movsb
add
add
loopne
inc
add
add
mov
add
and
test
jb
pop
sub
push
jmp
insb
push
cmp
push
mov
xchg
cmp
cmp
push
mov
cmpsl
add
inc
add
add
add
inc
add
rorl
pop
scas
xchg
jno
imul
inc
add
sbb
lods
cmp
in
in
lahf
lock
cmp
xchg
lods
add
decl
cmp
pop
jnp
xor
fldcw
in
mov
push
dec
cmc
cmp
mov
cs
add
decl
test
outsb
add
jmp
cld
mov
xor
add
inc
add
add
pop
cmc
inc
add
cmp
shr
xor
test
ja
jl
add
out
xor
add
cwtl
roll
sbb
mov
roll
add
clc
xchg
cmp
call
xchg
mov
add
dec
add
sbb
out
push
bound
test
jmp
push
ret
push
add
add
add
add
sbb
mov
sub
xchg
cmpsb
mov
add
sbb
lea
add
aas
sbb
ljmp
cwtl
frstor
jne
add
add
aas
iret
jg
mov
test
bound
sti
add
incl
add
iret
lret
fadds
add
movl
mov
mov
add
sub
cli
call
add
call
push
ret
add
push
mov
inc
add
js
div
push
adc
cmp
add
sbb
pushl
pop
push
lcall
int3
mov
add
inc
add
jl
cwtl
mov
sub
add
pop
ljmp
insb
lock
push
add
push
add
iret
loope
mov
mov
or
repnz
adc
xchg
into
jl
test
dec
jbe
repz
add
pushl
mov
fstpt
out
loop
mov
dec
xchg
dec
add
ds
adc
push
adc
adc
add
pop
xor
add
add
ret
add
pop
push
ss
add
adc
mov
into
xchg
mov
pop
repz
icebp
xchg
ret
cmpsb
add
add
add
test
add
xchg
jo
push
add
sub
push
rolb
insl
mov
add
pop
adc
dec
sub
aaa
xor
addl
add
aas
jl
dec
pop
roll
adc
xchg
insb
mov
dec
add
add
lods
mov
lods
push
mov
mov
sbb
mov
push
push
or
imul
cmp
cmp
addl
outsb
pop
push
push
add
in
jp
test
cwtl
push
mov
ss
in
mov
mov
mov
add
addr16
mov
sbb
mov
ret
mov
jmp
mov
pop
add
cld
movb
out
and
daa
add
aad
popa
add
add
add
shrb
jmp
aam
push
js
or
rolb
imul
dec
das
cwtl
jae
addl
add
jb
add
js
mov
add
lea
add
bswap
data16
cwtl
scas
inc
add
data16
cmp
lods
js
arpl
jo
pop
lods
or
add
pushf
mov
inc
add
std
in
lds
aam
and
fiadds
or
add
add
out
xor
sbb
mov
inc
jmp
add
and
push
roll
add
aam
push
add
add
add
aam
mov
imull
aas
lods
mov
pushl
and
movsl
add
ficoms
add
mov
or
mov
jmp
xchg
push
das
testl
xchg
xor
sbb
roll
incl
add
push
xor
and
les
sbb
inc
test
dec
push
jne
add
sti
addr16
jae
add
add
sbb
inc
add
adc
fdivrs
pop
sbb
mov
add
adc
add
sbb
push
pop
inc
add
out
hlt
mov
add
add
cmp
add
add
jmp
push
mov
add
cmp
pushl
jb
cli
mov
inc
add
incl
ljmp
mov
decl
push
ret
add
out
adc
add
movsl
add
push
mov
loopne
mov
xor
arpl
dec
sbb
in
in
fdivl
adc
mov
stos
movsb
add
loope
mov
xchg
int
jns
lds
mov
xchg
call
addr16
ret
mov
cmp
ret
das
mov
inc
fildll
rcll
add
add
add
in
js
dec
leave
push
inc
add
les
mov
pushf
push
out
decl
pop
inc
add
lcall
clc
aas
pop
jecxz
add
call
out
xor
add
and
mov
add
scas
adc
imulb
add
arpl
add
dec
push
insl
pop
call
in
add
add
jbe
fiaddl
add
inc
add
and
mov
mov
mov
add
ljmp
shl
jne
jecxz
mov
add
jmp
or
and
in
pop
shll
jmp
std
lret
lret
add
ficoms
popf
and
aam
jecxz
out
pop
xor
add
imul
add
ljmp
jno
dec
sbb
mov
adc
ljmp
add
cmpsl
add
adc
add
icebp
and
or
add
lret
adc
into
add
adc
mov
add
stos
les
mov
push
into
ds
add
xor
or
and
test
jmp
dec
scas
xor
or
pop
stc
inc
add
jb
sahf
test
add
pop
and
or
pop
xor
add
sub
movb
decl
ja
add
sub
aad
in
jmp
pop
in
mov
add
adc
add
inc
add
add
bound
aaa
or
insl
loop
xlat
or
add
cmp
insl
clc
call
ljmp
jp
sbb
test
mov
add
sbb
push
push
xchg
movsl
add
js
out
scas
push
push
mov
imul
jbe
loopne
scas
imul
add
add
add
arpl
cltd
movl
movb
add
hlt
addb
pop
xor
mov
rolb
cmp
add
addb
xchg
dec
pushf
enter
mov
out
ds
add
add
pop
fmull
add
add
jne
pushf
lock
push
add
push
adc
push
repnz
xchg
pop
hlt
xchg
testb
fmul
jg
push
lea
aaa
pop
and
mov
add
lock
aad
addb
scas
mov
add
push
rolb
les
mov
fmull
cmovs
jmp
push
fldcw
popa
sbbl
pop
jmp
sub
addb
sbb
lods
fisubs
add
jle
cmp
jg
pusha
add
repz
add
push
mov
lods
int3
bnd
aas
xor
pop
mov
popf
sbb
sbb
xchg
bound
adc
or
cmpsl
add
ficoms
loope
aaa
sahf
shrb
or
xor
mov
test
hlt
fsubr
addr16
stos
mov
add
add
jne
jmp
mov
add
and
or
sub
call
icebp
inc
add
push
push
and
in
adc
add
jb
jecxz
xchg
pop
insb
or
add
jecxz
loopne
inc
add
add
cmp
ret
fldlg2
out
ds
pushl
add
add
push
sub
aas
push
add
adc
stos
push
ret
dec
mov
cmp
push
movl
fstpt
add
add
mov
mov
add
inc
add
add
or
add
add
adc
xchg
enter
add
add
add
add
mov
sub
cmpsb
add
add
incl
dec
fwait
je
mov
ljmp
imul
jmp
movl
mov
inc
dec
add
das
push
popa
fnstcw
add
imul
add
mov
add
jg
or
ret
xor
add
and
and
fwait
push
fs
aad
add
add
sub
nop
shlb
insb
jb
add
mov
add
aam
jbe
int
out
push
insl
push
mov
add
cld
fcomi
jns
add
mov
cmp
ret
mov
arpl
movsb
add
add
add
negb
jnp
or
dec
sbb
gs
add
sub
ljmp
jns
add
pop
jno
imul
arpl
stc
inc
add
pop
push
mov
add
add
add
mov
add
add
jo
dec
daa
add
add
or
jno
or
mov
decl
xchg
pop
les
je
add
lcall
sub
add
add
inc
add
mov
incl
cmp
rcl
filds
cmp
sti
in
clc
add
popf
hlt
xor
clc
stos
std
inc
add
sub
add
xor
add
fcmovne
jo
test
dec
cld
mov
lds
push
dec
test
mov
movsb
add
jmp
std
and
sbb
lret
xor
cmp
aam
jbe
jl
add
push
loopne
cmpsl
add
test
fcoml
mov
mov
repnz
add
int3
rclb
dec
xchg
add
add
jmp
add
mov
or
inc
add
lods
dec
addb
add
pop
gs
xor
xlat
fdivrl
addb
add
add
movl
add
sbb
add
cmp
add
mov
add
sbb
in
pop
sub
add
es
jge
or
mov
xchg
dec
jle
notl
and
add
pop
jge
and
pop
fldenv
adc
add
addl
inc
add
mov
xor
add
dec
add
add
add
inc
add
jp
add
xor
leave
push
aad
imul
add
arpl
lds
test
and
test
inc
add
inc
add
sub
test
add
ljmp
stos
push
add
in
push
lock
enter
or
ss
jmp
mov
xchg
fdivrp
hlt
mov
add
add
add
add
jmp
or
inc
add
add
add
pop
or
lock
ret
idivb
fists
in
loop
sti
xchg
mov
add
jl
xor
jp
add
jns
add
xor
mov
add
sub
pop
sub
mov
add
pop
lret
call
icebp
les
sub
inc
add
mov
add
add
add
ds
mov
add
add
add
add
mov
ja
lret
inc
add
pushf
xchg
dec
or
push
ret
add
sbb
out
test
lods
mov
stc
cwtl
cli
sbb
dec
xor
adc
add
add
invd
lods
fwait
pushf
insl
cs
add
pop
jmp
arpl
push
mov
js
xor
add
cli
out
mov
mov
add
jmp
add
addb
pop
addb
popa
add
add
test
cwtl
bound
ss
or
enter
aam
add
pavgb
and
call
shl
or
xlat
lret
push
scas
les
addl
repz
test
push
lds
add
add
add
adc
cld
mov
cmp
pop
add
and
xchg
cltd
pop
add
add
mov
cmp
or
jg
mov
int3
dec
fadd
add
shl
add
push
ret
and
push
and
dec
addb
add
add
add
xchg
jno
add
add
aaa
insb
sbb
xlat
and
push
pop
pop
js
mov
inc
add
sbb
add
sub
into
negl
mov
add
and
iret
cmp
add
add
and
push
aam
divl
loope
jg
add
test
push
add
addl
lcall
add
sub
cld
mov
mov
ljmp
sbb
adc
add
jmp
add
mov
add
add
sub
xor
adc
movzwl
jmp
mulb
push
repz
arpl
mov
into
cmpsb
add
push
idivb
je
ret
mov
sbb
lods
in
inc
add
add
repz
push
add
sbb
out
and
sbb
test
add
and
data16
xchg
pop
and
or
daa
add
adc
cmp
scas
out
pop
aas
xor
mov
sarb
sbb
jmp
lcall
in
adc
add
inc
add
js
scas
push
mov
rolb
add
add
dec
ss
add
lcall
jmp
push
test
mov
fnsave
mov
dec
jg
jecxz
or
and
sub
outsb
pop
shl
add
add
lock
add
jmp
idivb
into
iret
addl
add
adc
xlat
mov
cmp
add
xchg
xchg
sbb
dec
jg
mov
sub
les
dec
ret
add
add
add
je
add
test
pop
movb
add
push
add
lea
les
pop
add
add
cld
mov
cltd
fimull
ret
add
stos
pop
add
jmp
adc
sbb
mov
shrl
xor
push
inc
add
jae
add
insb
mov
lods
addb
jmp
add
rolb
sbb
sub
lock
jbe
add
mov
push
or
jmp
add
jg
add
pop
jmp
fsubrl
dec
cmpsb
add
lock
add
out
mov
shr
jmp
inc
pop
notb
push
loope
push
cltd
lods
xor
in
into
dec
inc
add
call
out
daa
add
sub
xchg
push
xchg
fadds
negb
add
push
inc
xor
xchg
div
sub
push
stc
mov
push
add
aas
mov
add
xor
jne
add
mov
pop
fcmovnbe
dec
sbb
add
jmp
pop
pop
jo
push
jecxz
push
pop
jmp
jb
push
into
xor
pop
mov
add
rorl
das
in
add
jbe
negl
pop
adc
add
adc
pop
push
popf
sbb
hlt
dec
sub
fisubrl
je
add
cmp
xor
add
push
xor
adc
in
out
test
addl
add
add
dec
aam
jmp
aad
or
xlat
xchg
call
cmpsb
add
or
aaa
fsubrs
mov
add
or
inc
jmp
add
add
pop
mov
mov
push
push
add
add
sbb
sti
movsl
add
vmwrite
loopne
push
std
shlb
sub
outsb
push
push
cwtl
shll
fcoms
lods
mov
ss
imul
add
add
add
jbe
sub
sbb
je
cld
out
fimuls
mov
and
cmpsl
add
adc
inc
add
ds
push
cli
mov
add
push
push
sti
jbe
mov
lret
xchg
sub
fildll
cs
cmp
addb
add
add
movb
add
pop
add
insl
pop
insb
test
das
stos
adc
call
nop
lahf
into
mov
test
push
or
add
or
xor
or
add
add
jp
lock
dec
cmp
add
push
dec
and
add
out
pushf
pop
push
xor
jmp
jb
adc
mov
popa
add
adc
pop
insb
push
enter
sbb
test
mov
sub
iret
and
sbb
add
jmp
add
or
inc
add
lods
addl
add
aam
jmp
shlb
dec
dec
fistpll
add
imul
cmpsl
add
xchg
jl
arpl
imul
addl
mov
fwait
cltd
lea
mov
sub
push
xor
lds
mov
stos
and
cli
sbb
int3
jmp
push
push
xor
add
cmc
pushf
lret
and
xchg
rclb
adc
stos
rolb
add
or
mov
hlt
adc
and
incl
add
xor
fmul
bound
ljmp
popa
add
push
scas
cmpsb
add
xchg
fadds
add
and
ret
add
push
mov
jmp
popa
xchg
xchg
push
idivb
idiv
call
sbb
pop
lods
iret
outsl
add
add
add
lcall
add
mov
test
int
add
arpl
dec
rclb
stc
call
cmp
daa
add
sbb
mul
add
lret
push
push
mov
jmp
xor
push
cmp
jae
add
cmp
sbb
add
add
jmp
or
addr16
add
add
dec
sbb
ds
loop
jmp
das
fnsave
bound
jns
push
cmpsl
add
xlat
fxch
addl
das
sbb
and
inc
add
and
jl
add
push
xor
mov
int
add
mov
aad
jmp
pop
bound
ret
add
nop
loop
popf
popf
fcompp
ficomps
mov
inc
add
stos
or
mov
add
dec
jbe
les
inc
add
pop
xchg
mov
adc
pushl
mov
mov
add
inc
add
add
fnsave
or
or
jae
jmp
push
aas
mov
and
lods
push
add
popa
add
sti
xlat
bound
sub
cmpsb
add
idivl
ss
add
shr
push
ret
into
dec
add
sbb
add
adc
ja
addb
push
add
in
push
add
add
les
inc
add
add
pushl
pop
sbb
divb
bound
fdivl
shrl
inc
inc
add
push
inc
add
sub
add
pop
push
push
xor
add
inc
add
add
loope
enter
and
push
pop
je
add
aam
add
and
data16
xchg
out
pxor
sarb
sbb
sub
ss
sub
add
add
idivl
ret
add
sarb
in
sbb
and
mov
add
call
lea
call
jmp
push
push
adc
testl
jmp
inc
out
out
das
mov
add
add
mov
je
add
insb
push
add
aad
call
mov
mov
cmp
mov
add
add
add
add
lret
out
pop
inc
add
popa
add
lock
jl
fldcw
idiv
jmp
sub
fisttpll
jle
add
sub
mov
jmp
inc
ret
pop
inc
add
fsubs
fdivrs
fnstsw
push
push
jmp
mov
aam
add
mov
mov
jmp
pop
aam
inc
ss
add
fisubrs
add
std
ja
add
outsl
dec
sub
fiaddl
mov
xchg
movsl
add
jg
add
in
popf
mov
popa
add
lea
sub
insl
inc
add
aas
insl
scas
push
sbb
scas
aad
call
push
add
add
adc
jne
add
jmp
dec
cmp
add
add
and
cmp
fisubrl
negb
int3
scas
insl
dec
sub
xor
jmp
je
add
add
inc
add
addl
loope
inc
add
repz
sti
and
aad
add
mov
sbb
inc
add
xchg
test
dec
mov
add
jg
fidivrs
cli
mov
cmp
mov
lods
je
jmp
test
xor
xchg
mov
clc
jg
add
movb
add
or
add
decl
or
sahf
jge
add
fwait
dec
adc
mov
pop
mov
fldcw
mov
call
jmp
jle
inc
add
xor
cwtl
push
addb
add
incl
std
and
sbb
cmp
push
mov
sub
insb
sahf
scas
rolb
sbb
add
roll
call
lcall
and
movl
add
mov
and
mov
mov
roll
adc
mov
loopne
xchg
imul
adc
jmp
push
fldcw
js
dec
sahf
add
mov
movzbl
add
ljmp
stos
push
addb
and
movb
addl
add
add
add
out
ljmp
outsl
popa
fs
or
cltd
xor
xor
rorl
add
dec
in
sub
add
dec
adc
sbb
and
std
test
adc
add
add
decl
adc
mov
mov
pop
pop
add
ljmp
fcmovbe
adc
mov
jmp
mov
inc
inc
mov
fwait
sub
insb
repnz
ror
dec
jecxz
add
add
add
xor
add
push
add
xor
add
test
leave
cmpsb
add
sub
add
add
lret
jecxz
aaa
repnz
addb
add
sbb
insl
adc
inc
add
hlt
ds
in
push
push
pop
add
movsb
add
sbb
pop
adc
push
popa
jmp
push
jb
pop
or
ljmp
inc
xor
jmp
inc
sbbl
fs
add
and
push
xor
dec
sahf
std
jne
add
test
inc
add
jge
popf
pop
mov
add
add
stc
test
inc
add
fisubrs
adc
mov
add
mov
call
push
ret
push
popa
ljmp
mov
add
jae,pn
imul
push
stc
push
cmp
cmp
bswap
jle
add
add
add
mov
cmp
mov
xchg
stos
rclb
xchg
cmpsl
add
aas
scas
add
dec
sbb
pop
jmp
inc
das
add
adc
ja
call
in
push
xor
jmp
andl
push
xor
mov
add
add
mov
jg
repnz
jns
sbb
and
in
lret
in
decl
lea
ret
xchg
js
xchg
xchg
add
ljmp
add
das
repz
adc
sub
call
cmp
mov
add
cmp
pop
sub
add
cld
inc
add
out
lret
adc
add
xor
repnz
movl
in
add
xchg
cmp
stos
add
notb
push
ret
xor
ficomps
test
jnp
add
jmp
add
jl
cmp
testl
sarl
leave
adc
add
add
add
ljmp
repz
pop
and
popf
data16
cltd
pop
lea
lahf
add
decl
out
jb
incl
add
inc
add
xchg
nop
add
shrl
test
xchg
mov
test
jmp
add
cmp
mov
mov
call
dec
lds
add
dec
lock
xchg
cltd
mov
and
or
icebp
fildl
add
js
add
dec
ja
add
in
stos
repz
add
imul
and
scas
jno
jmp
pop
add
shlb
out
out
fdivrl
mov
add
jb
add
into
test
inc
add
mov
cmp
divb
jo
xor
push
add
cwtl
fimull
add
jmp
inc
add
lret
in
ret
add
jg
add
add
push
popf
arpl
addl
pop
inc
add
out
dec
test
fisttpll
imul
in
nop
mov
push
data16
lea
mov
add
push
aad
add
jmp
cmc
dec
mov
xor
hlt
push
jl
add
xchg
inc
add
sbb
add
daa
add
test
outsl
mov
push
add
cmpsb
dec
addr16
xor
add
sbb
add
and
add
add
sbb
lods
or
xchg
cwtl
out
dec
cs
and
cmp
cs
mov
add
push
ret
xchg
sbb
mov
xchg
pop
lds
sub
into
cmp
add
add
addl
stc
jmp
popf
pop
add
aas
cli
addr16
add
add
add
add
add
mov
jmp
sub
scas
insb
insb
iret
jmp
add
push
iret
sbb
ljmp
mov
mov
add
hlt
pop
xchg
out
or
add
dec
rcrl
push
in
xor
add
in
aas
test
fisubrs
scas
test
and
nop
repz
add
inc
add
dec
add
push
cmp
add
pop
inc
add
lret
add
pop
aad
into
jle
fisubl
mov
mov
add
shrb
ret
or
add
fsubs
test
push
test
add
stc
push
add
mov
push
insb
xor
jmp
notl
push
xor
out
jo
test
imull
movsb
add
xor
jae
add
cltd
or
add
dec
xor
add
mov
add
inc
add
call
add
popa
add
add
add
add
and
iret
cs
stos
popf
pop
cmc
add
push
push
inc
add
jp
jg
ja
add
add
es
pop
test
sub
add
push
test
shl
add
jmp
incl
add
pop
sti
test
addb
add
ds
sbb
sarl
gs
add
add
lcall
add
add
call
jle
cltd
mov
ljmp
push
sub
sub
add
jecxz
les
test
movb
aam
add
xchg
jge
cwtl
addb
incl
incl
pop
mov
push
add
je
ret
pusha
add
fcomi
sub
sarl
xchg
movl
add
add
and
cmp
dec
add
pusha
add
lods
bound
cmpsb
add
adc
cmp
sub
add
fcompl
jnp
loopne
cmp
add
cmc
incl
cld
and
add
jp
ret
add
cmpsl
add
lods
fsubrs
jbe
fiaddl
add
or
clc
repz
xor
add
ret
add
lcall
add
add
neg
jbe
add
pop
mov
imul
add
call
xchg
scas
fimull
je
and
lods
adc
xor
sbb
mov
xor
ja
pop
and
push
add
shrb
push
jo
int3
mov
je
fadds
xchg
insl
xchg
repz
data16
add
bound
mov
add
xchg
mov
add
add
add
inc
add
mov
add
sub
add
add
ds
add
mov
add
test
lret
clc
addl
xchg
mov
pop
add
add
cmp
arpl
mov
aas
dec
loope
inc
add
mov
data16
rolb
aad
pop
enter
sub
add
fists
add
add
add
add
jmp
mov
cmp
sbb
ljmp
movb
stc
cwtl
or
inc
add
jge
xchg
push
lods
push
mov
jmp
jmp
adc
mov
roll
add
add
add
lahf
movsl
add
add
cmp
push
ret
sbb
js
cmp
rolb
neg
test
repz
imul
push
xchg
test
inc
add
ret
add
xlat
push
or
insb
out
jmp
mov
dec
dec
add
incl
inc
add
add
xor
mov
pushf
jle
test
jmp
pop
cld
and
push
add
or
inc
add
in
arpl
cltd
sub
cmpsl
add
stos
jmp
pop
push
push
push
push
xchg
inc
add
add
add
call
add
add
cmp
sbb
pop
dec
mov
push
or
sbb
add
add
adc
ja
xor
inc
add
add
xor
add
add
ret
add
jmp
ficoms
or
test
add
ljmp
xchg
mov
aad
add
dec
push
add
add
ljmp
addl
add
add
pushl
aad
or
mov
sbb
leave
pop
lcall
loopne
mov
out
or
add
push
ret
push
idivb
jl
add
mov
or
add
push
loopne
imul
icebp
arpl
addl
xor
fwait
dec
add
jmp
sub
xor
cltd
add
aas
dec
stos
stos
inc
add
lret
add
sbb
sub
clc
cmp
add
add
call
mov
push
lret
cmp
xchg
cmovnp
pop
adc
add
sub
sub
and
imul
add
and
adc
jmp
sbb
add
data16
add
jo
dec
and
push
xor
add
jmp
add
out
ljmp
add
add
add
mov
dec
movsl
add
mov
inc
jmp
lock
push
js
jb
jge
add
add
data16
push
add
out
mov
add
gs
push
add
xchg
push
cmpsb
add
mov
mov
add
gs
inc
add
iret
cmp
add
add
pop
sbb
arpl
mov
call
arpl
sub
sub
sbb
add
jns
push
add
aam
cmpsl
add
js
add
outsb
jle
jle
mov
mov
loop
sbb
icebp
inc
add
addb
inc
add
add
add
xchg
jnp
and
push
lahf
rorl
xor
jmp
jb
inc
aas
pop
mov
add
cltd
addb
and
popa
add
in
ret
out
lea
add
add
jmp
aaa
cwtl
jbe
add
test
lods
xchg
fisttps
push
and
incb
sub
jbe
cmp
inc
add
xchg
insl
add
loopne
pop
repnz
mov
xchg
sbb
outsl
pop
nop
outsb
mov
addb
jp
repz
mov
mov
inc
addr16
add
inc
push
cld
inc
add
ljmp
lods
mov
add
pop
cmp
add
or
cmp
add
mov
push
sbb
stos
jmp
push
push
or
dec
lret
xchg
jns
dec
jl
movl
jmp
pop
sbb
shrb
jmp
mov
mov
add
repz
dec
dec
out
jae
enter
repnz
add
adc
jbe
enter
add
add
popl
dec
sub
cmpsb
add
incl
or
cmpsl
in
incl
das
push
and
cmp
add
std
imul
jmp
cmp
pop
pop
cmp
mov
imull
outsb
jne
bound
jb
jl
sub
stos
loope
cmc
icebp
xchg
imul
outsb
cmp
in
lds
sub
dec
jmp
ret
stos
ret
cmp
push
movl
cs
lods
add
test
push
test
cs
mov
pop
mov
adc
add
add
pop
sahf
pop
outsl
fwait
push
add
add
call
test
pushf
sbb
add
shl
add
add
add
addb
sbb
ljmp
push
inc
arpl
je
call
mov
fidivrl
push
sub
mov
out
movsl
add
pushl
jmp
das
fnstcw
push
and
addl
add
add
add
add
popa
add
addb
faddp
add
sub
stc
jnp
addl
inc
add
jbe
add
add
cmpsb
add
sub
mov
fldl
jmp
add
data16
aam
add
add
xor
jmp
mov
add
xchg
shrl
call
xchg
repz
add
push
mov
sub
roll
fwait
push
or
jmp
inc
add
adc
add
jno
cmpsl
add
mov
jb
cmp
rcrb
xor
add
mov
cmc
jno
add
sub
sti
push
fwait
scas
jg
fisubrs
push
add
jmp
push
push
cmpsl
add
inc
add
bound
lods
sahf
incl
jbe
jmp
ret
das
push
dec
push
jns
add
sbb
add
arpl
add
popf
jge
bound
cltd
imull
cmpsb
add
movsb
add
xor
aam
mov
call
push
fcomip
push
dec
push
pop
popf
leave
jge
add
in
lahf
fsubrs
lods
push
inc
add
jo
add
pop
popf
mov
fisubl
cmp
loopne
add
lcall
xchg
sahf
mov
pushf
lret
and
xchg
cmp
pop
add
adc
push
jmp
dec
lock
out
psubusb
cs
outsb
push
clc
mov
ljmp
jle
sub
out
mov
enter
sahf
cmp
inc
add
add
jmp
pop
add
xchg
pop
inc
add
add
cmpsb
add
add
or
add
jmp
fildll
test
fistps
cmpsl
add
push
add
xchg
cld
or
sub
pushf
movsl
add
adc
xor
add
ljmp
add
jmp
ret
icebp
jl
test
jae
cli
jb
add
movl
sbb
add
add
decl
call
push
dec
ljmp
movb
jg
add
dec
sub
fdivs
xor
pop
repnz
push
roll
pop
jmp
push
arpl
xchg
add
push
roll
movsl
add
add
nop
sub
add
test
pop
pop
pusha
add
add
add
fsqrt
std
adc
dec
loop
insb
addb
push
out
sbb
or
jle
jmp
in
push
inc
lock
add
daa
add
add
add
ret
add
jns
fisubrl
loopne
jmp
push
add
push
mov
mov
aam
add
push
inc
add
inc
add
xor
add
add
mov
cmc
add
jmp
add
je
add
add
imul
loop
and
lods
inc
add
xchg
mov
pop
incl
inc
and
and
call
enter
scas
test
xchg
jge
mov
jo
jo
stc
jbe
add
mov
repnz
movsb
add
addl
in
fwait
nop
xor
mov
mov
add
mov
mov
add
jmp
test
or
jb
les
stos
imul
jmp
push
push
sbb
mov
add
add
movsl
add
jno
add
scas
pop
lret
out
leave
adc
push
and
inc
add
push
mov
jnp
add
add
lcall
in
pushf
mov
add
xor
inc
add
xor
popa
add
mov
int
add
push
lock
je
add
movsl
add
test
repnz
adc
add
addb
add
addl
add
add
add
push
adc
into
push
testb
or
scas
xor
jle
mov
add
push
jmp
push
sub
xchg
push
adc
loopne
mov
and
jmp
push
ret
add
mov
add
loopne
dec
popf
jg
jg
add
sti
cmp
jb
inc
add
add
ret
cli
inc
add
cli
addb
test
stos
pop
and
addl
ret
ret
add
inc
add
mov
add
add
add
mov
jns
mov
add
sbb
mov
add
sub
add
pop
std
pop
mov
jecxz
add
push
and
push
into
mov
shlb
dec
minps
push
testl
movb
mov
fdivs
xchg
adc
dec
cmp
add
push
test
call
jmp
push
in
dec
pushf
fcmovbe
sbb
add
xchg
and
add
push
sbbl
popa
add
loopne
scas
push
add
add
test
mov
out
and
scas
adc
inc
add
add
cs
or
add
jmp
add
sub
adc
sub
and
pop
add
ja
add
sub
sub
in
jns
and
roll
sub
add
test
mov
fstps
add
add
imul
out
nop
push
lods
mov
mov
popa
add
and
movb
out
mov
jmp
add
gs
adc
add
rclb
cmp
mov
mov
and
mov
test
pusha
add
add
rcr
lods
or
dec
jno
fidivrs
add
add
jmp
add
pushf
lcall
fwait
or
jne
jmp
push
call
xor
cmpsb
push
push
jle
add
add
xor
call
leave
arpl
adc
dec
mov
lock
add
jge
add
add
insl
xchg
cmc
outsb
rolb
mov
or
jae
stos
sahf
add
cmp
add
add
outsb
xchg
inc
add
add
dec
cmp
addb
dec
adc
mov
dec
maxps
and
pop
rcl
daa
add
add
mov
mov
add
jmp
push
inc
pop
or
call
add
push
push
push
push
call
jmp
push
arpl
out
dec
xlat
enter
push
ja
mov
xchg
adc
aad
xchg
arpl
popa
add
pop
jmp
aam
push
or
pop
loop
or
in
add
or
add
pop
dec
roll
cmp
or
add
mov
sahf
cli
enter
cmp
add
addl
mov
inc
xlat
pushl
das
das
enter
std
cli
pop
out
xor
test
pop
nop
push
add
ret
add
dec
mov
loopne
jg
add
stos
mov
jmp
add
cltd
nop
popf
clc
sbb
roll
xchg
or
sub
pop
mov
add
add
sub
cmp
push
testb
xchg
call
stos
in
fmull
add
mov
jmp
cld
pop
mov
mov
inc
add
loope
adc
add
decl
or
dec
fs
sub
add
fwait
inc
add
and
push
sub
dec
xorl
test
push
ja
add
inc
sbb
fldcw
jnp
sub
test
add
pushl
pop
pusha
add
add
fildl
lcall
add
or
cltd
xor
xchg
out
push
sbb
push
aas
add
xor
add
out
adc
cmc
data16
add
jecxz
xor
addl
add
mov
mov
dec
jno
push
inc
add
in
pop
cs
repz
bound
in
cmpsb
add
add
lcall
out
ljmp
cmp
and
fbstp
pop
fwait
into
push
ja
out
inc
add
add
jmp
dec
lea
ljmp
jmp
cmp
cltd
jle
and
jmp
push
mov
push
sbb
test
push
sar
pushl
sub
pop
je
xchg
sbb
push
out
out
xlat
mov
add
dec
stos
pop
xchg
rcl
cmpsl
add
call
push
rcl
push
stos
push
ret
add
arpl
push
nop
out
stc
enter
xchg
in
and
fnstenv
add
push
dec
inc
add
xchg
push
fdivr
adc
add
stos
test
movsl
add
and
int
mov
add
cmp
push
push
push
mov
addl
out
js
mov
aas
out
mov
js
mov
cli
test
dec
in
clc
add
mov
or
movl
test
das
push
mov
popa
add
or
dec
push
ret
add
dec
pop
and
cmp
aaa
xlat
das
jp
add
clc
scas
into
imul
xchg
mov
add
and
imul
inc
scas
add
lcall
nop
nop
ja
inc
add
add
sahf
lcall
add
xchg
xchg
stos
and
sbb
in
inc
add
call
add
xchg
adc
hlt
sahf
inc
add
lds
cwtl
out
stos
daa
add
icebp
fs
jmp
cmp
and
hlt
mov
mov
add
inc
add
stos
stos
loope
aad
add
add
data16
inc
add
add
decl
test
out
fcompl
add
add
xchg
jb
mov
xchg
out
add
xlat
loop
in
add
imul
xchg
int3
ljmp
adc
cltd
sarb
push
add
pop
jb
sub
loop
mov
add
sub
jg
out
cmpsb
add
fcomip
xor
shl
add
add
test
jo
add
push
xor
add
test
out
sbb
shr
or
pop
ljmp
scas
inc
add
add
aas
iret
mov
ljmp
inc
insb
insb
jmp
dec
cmpsb
jmp
test
mov
insl
or
jb
sahf
repnz
out
out
stos
mull
adc
mov
out
add
int
je
adc
pop
out
lock
add
shufps
add
sbb
or
or
or
aad
addl
add
add
imul
js
or
std
fcoml
stos
jp
mov
pop
addb
add
mov
jge
jge
jne
add
imul
call
push
push
add
adc
pop
rclb
jbe
add
fwait
xchg
and
cmp
mov
add
xor
jb
pop
jns
fnstsw
push
jne
adc
or
lock
xchg
cltd
stos
push
std
push
stos
int
es
jnp
push
add
in
and
clc
ds
add
mov
cmpsl
inc
add
sbb
push
insb
xor
std
inc
add
je
inc
add
and
jnp
push
pushf
dec
out
ljmp
mov
jecxz
mov
movb
adc
movb
mov
sbb
mov
add
jmp
dec
call
add
lcall
add
call
movsl
add
add
jmp
add
mov
test
add
add
out
mov
xchg
sub
adc
add
addl
jb
sbb
addb
add
mov
out
mov
shl
add
mov
into
leave
push
jns
add
add
push
xchg
js
add
add
add
jne
inc
add
add
jae
cld
fcoml
pop
sbb
add
mov
clc
push
or
add
jno
sarl
jg
cld
mov
dec
xchg
cs
dec
div
and
inc
add
jmp
add
xchg
cmpsl
add
add
mov
pushl
sti
dec
loop
mov
add
mov
jne
jmp
enter
leave
sahf
cmp
jg
lret
iret
popf
cmp
xchg
call
fsubr
sbb
fmul
ffree
add
and
mov
loope
inc
add
pop
cmp
add
hlt
adc
scas
jne
and
mov
add
add
cmpsb
add
push
and
test
sahf
movsb
add
jo
icebp
mov
add
lea
call
jnp
addb
lea
cwtl
and
mov
lock
repnz
std
roll
call
xchg
int
popa
add
mov
insl
or
mov
xor
or
outsb
sub
lods
mov
adc
add
add
fnsave
int3
sub
out
xchg
hlt
jno
sub
fcompl
add
fidivl
and
xor
push
or
stc
sbb
shrl
inc
add
aam
push
mov
add
add
add
jl
sbb
into
mov
mov
xor
add
inc
add
add
sub
xor
jmp
into
push
aas
mov
sub
stos
test
and
iret
mov
gs
lock
pop
lds
xor
stos
mov
das
pop
jb
shl
add
mov
add
aam
push
inc
and
push
jp
jnp
lods
fdiv
test
cmp
add
ficomps
jecxz
into
addl
mov
dec
jno
aam
or
in
or
push
call
mov
call
es
pushl
insb
sub
idivb
jnp
lea
ds
call
scas
sbb
cltd
daa
add
add
mov
add
add
add
inc
add
add
add
push
xor
add
add
inc
add
and
in
pop
push
add
add
or
dec
movb
xor
cmp
xor
add
add
jl
cmp
fistpl
add
flds
js
add
sub
mov
jmp
jb
arpl
add
daa
add
dec
and
roll
add
pushl
push
ror
movsl
add
pop
jl
sub
add
cmp
cwtl
stos
push
insb
stos
inc
add
add
add
cli
arpl
jmp
adc
ja
loop
cmpsl
add
ljmp
and
ljmp
adc
cmp
xchg
addb
add
mov
push
adc
cmp
add
add
dec
rsm
lea
test
mov
mov
jge
in
adc
imul
jmp
add
packssdw
roll
pusha
add
push
add
jmp
pop
push
push
ljmp
add
or
int
bound
push
xchg
add
repz
cmpsb
add
pop
lods
outsl
rcrl
and
push
cmp
movsl
add
test
test
mov
add
and
jae
lret
movsl
add
add
mov
addb
add
stc
sbb
int3
roll
add
add
test
decl
jmp
aam
push
push
adc
add
ljmp
mov
int
push
mov
add
repnz
inc
push
js
add
shrl
or
add
ret
add
sbb
repnz
fistpl
por
inc
add
bound
cmc
mov
test
ljmp
push
inc
add
pop
lea
jae
jne
xchg
out
ss
add
xor
aas
jp
fstps
incl
jmp
jle
cltd
or
out
pusha
add
fistl
pop
iret
movsb
add
add
add
add
rcrb
add
jmp
sub
dec
dec
fildl
jns
lcall
loop
aas
jne
mov
ret
push
les
mov
in
dec
imul
inc
add
add
mov
aad
bound
dec
dec
call
addr16
add
add
jns
aad
push
lods
aad
sbb
test
add
mov
push
ret
push
imul
add
push
leave
lret
add
sub
mov
add
mov
daa
add
mov
pop
add
xor
and
pop
lret
mov
jb
add
add
popa
add
dec
inc
add
cs
int
imul
mov
je
movl
mov
mov
pop
add
push
inc
add
sbb
fldenv
in
sub
add
add
cltd
and
out
add
std
mov
add
pop
das
cmc
and
test
aaa
push
add
loopne
ret
add
add
std
sub
add
xchg
pop
lods
cmp
xor
fldl2t
push
jae
mov
add
add
add
mov
jmp
push
xchg
cmp
xchg
adc
push
popa
jmp
lock
jmp
add
add
jecxz
ds
mov
add
xor
mov
add
mov
addl
sti
lods
adc
mov
test
outsb
lds
dec
pop
add
repnz
daa
add
add
add
lcall
jno
in
mov
mov
mov
xor
add
inc
add
add
add
mov
aaa
or
jl
xor
test
inc
add
pop
repnz
xchg
jb
jmp
add
add
in
mov
mov
or
push
mov
test
add
add
pop
mov
sub
testl
add
iret
test
or
cltd
or
cs
add
dec
stc
xchg
sbb
sub
add
out
push
cli
addb
je
jmp
enter
and
mov
incl
adc
add
push
lock
test
in
clc
sub
add
rorb
sub
add
pop
sub
into
stos
push
movl
rol
add
repnz
movb
add
fcoms
lret
add
and
iret
sti
fisubs
sbb
ret
pop
mov
jae
loope
or
mov
cmc
imul
add
xor
mov
add
sbb
sub
or
mov
mov
int
filds
inc
add
roll
lds
push
jo
cmp
and
insb
sbb
imul
pop
adc
sub
stc
ljmp
decl
add
cld
push
jle
push
shufps
mov
push
mov
lahf
mov
andb
pop
adc
add
push
push
and
adc
sbb
adc
push
std
mov
add
repnz
ret
mov
add
lcall
or
add
or
add
add
lock
add
jne
es
fnstcw
add
mov
add
mov
inc
lcall
addr16
jns
lcall
fwait
aad
f2xm1
xor
sub
addb
popa
add
test
sahf
lahf
outsl
int3
jns
stos
and
add
and
les
xchg
sub
lcall
add
cli
sub
int
out
daa
add
setge
jbe
in
pop
jno
add
idivb
jmp
add
add
mov
and
push
jno
movsb
push
ret
popa
sbb
add
pop
insl
addl
add
add
aaa
jp
fwait
sbb
xchg
inc
add
fistpl
test
sub
scas
push
popf
mov
add
add
lods
arpl
mov
movl
xor
inc
add
fisttpll
add
push
jmp
push
notb
pop
dec
mov
int3
movsb
add
hlt
jmp
dec
adc
cmp
ret
add
xlat
jl
out
test
push
inc
add
sahf
hlt
jge
add
clc
jl
add
sbb
lcall
add
push
push
ret
add
push
push
jmp
xor
jmp
ret
jmp
push
pop
jmp
sbb
sbb
push
and
push
xchg
dec
inc
add
sub
sbb
addb
loopne
sub
mov
outsl
jmp
stos
pop
loope
loope
loop
cmp
add
inc
add
add
pop
jmp
pop
adc
ret
add
sti
xor
jg,pt
fldcw
fcoml
sahf
inc
add
cmp
rolb
icebp
inc
add
cmp
jg
xor
clc
call
jmp
add
inc
js
mov
add
fbstp
fcmovnb
add
stos
push
pushf
push
jb
add
add
repnz
jno
int3
cld
sbb
stos
sbb
add
add
pop
ret
sbb
cld
dec
push
add
or
pop
popa
add
frndint
lea
xor
insb
sbb
je
add
scas
mov
pop
stos
fld
add
ds
cwtl
scas
iret
jnp
daa
add
and
or
mov
sar
cmp
xchg
clc
enter
add
popa
add
aas
mov
pusha
add
mov
mov
incl
loop
popf
jo
les
out
shll
repnz
add
push
add
push
ret
ret
setp
repz
push
jge
sub
add
pop
lods
roll
add
addb
add
movsl
add
xchg
jns
mov
jmp
jle
fxam
arpl
pushf
xor
in
sub
add
int
lea
mov
xchg
iret
xor
bound
popf
in
cmp
push
adc
add
add
add
or
icebp
mov
rorb
or
adc
sub
ja
dec
movl
add
test
cmp
mov
or
repnz
les
loopne
int3
pusha
add
outsb
dec
dec
push
sbb
stos
jb
push
sbb
test
data16
call
push
adc
imul
das
ret
add
sub
and
mov
in
sub
aaa
stos
cmp
fildll
add
movb
pop
push
add
les
lods
sub
out
sbb
pop
jnp
cmp
bound
lea
jecxz
mov
outsl
mov
div
jmp
cmp
das
dec
ljmp
adc
sti
imul
mov
xor
cli
ja
lea
adc
add
cmp
not
pop
add
test
bnd
cli
xor
sbb
push
loope
xchg
cs
and
arpl
push
sbb
imulb
add
and
push
inc
add
xor
adc
lcall
roll
jno
and
inc
add
dec
cmpsb
add
xor
push
mov
or
aam
dec
add
roll
dec
adc
ja
call
cmpsb
push
push
out
xor
arpl
mull
push
jg
call
xchg
cld
bound
mov
pop
add
adc
cli
mov
adc
dec
push
add
cmc
mov
scas
fcoms
mov
rep
xchg
jns
pushl
jmp
popa
sub
inc
add
add
add
pop
movsb
add
enter
adc
dec
and
add
push
jmp
jmp
jnp
inc
add
xchg
xor
jl
cmp
add
add
movsb
add
repnz
lcall
add
sahf
loopne
inc
add
sar
aam
add
add
pop
test
loope
sarl
add
push
ret
sbb
mov
fidivs
out
repnz
jg
add
pop
and
jp
das
pop
add
add
or
add
leave
mov
sub
mov
lcall
pop
xchg
pop
mov
pushf
mov
add
add
dec
or
inc
add
test
push
push
adc
add
or
add
ljmp
stc
push
mov
cmp
iret
mov
mov
clc
pop
dec
inc
add
icebp
mov
add
nop
fdivs
fs
clc
int3
rolb
and
jbe
dec
cmc
mov
mov
dec
inc
add
add
or
mov
aam
add
jae
mov
dec
cs
jle
test
add
sbb
xor
cmp
mov
pushf
jmp
les
cmp
sub
arpl
test
add
inc
add
add
incl
jb
js
mov
mov
sahf
jg
pop
rolb
add
call
add
push
ret
inc
imul
ljmp
or
pop
dec
pop
inc
add
rclb
add
call
in
lods
xor
aam
mov
lods
xor
hlt
sahf
loopne
ret
add
push
jmp
dec
mov
bound
mov
js
test
in
rolb
iret
fimuls
add
les
lods
jle
push
fisttps
add
cmp
jns
jno
jne
dec
xchg
mov
push
cltd
pop
push
mov
sub
add
cmp
add
add
or
add
add
pop
add
add
rolb
out
dec
call
pop
adc
add
mov
add
add
dec
not
into
std
movswl
add
imulb
daa
add
je
rorl
sbb
add
xchg
js
and
dec
call
faddl
add
xor
jmp
xor
into
cmpsb
adc
mov
mov
add
lcall
xor
insb
or
sub
add
cmp
loope
mov
hlt
xchg
jb
mov
in
xchg
int
add
aad
pop
fwait
hlt
aas
les
add
jbe
add
push
and
movsb
add
fxch
jp
add
lock
dec
and
into
mov
fs
add
mov
add
jmp
into
mov
add
test
mov
jns
add
mov
movsb
decl
sbb
jmp
sub
stos
js
cmp
push
xor
jmp
push
in
add
out
ds
inc
add
fcomps
daa
add
movb
stos
push
sbb
mov
mov
scas
push
fwait
inc
add
add
out
inc
add
bound
pop
fdivl
add
idivb
add
add
jmp
cmp
addr16
dec
or
pop
jmp
add
js
aam
jmp
ja
decl
jecxz
dec
pop
lds
aam
faddl
push
ljmp
insb
inc
add
add
push
fcomp
das
cmp
add
ljmp
cli
mov
negb
push
inc
add
pop
stos
cmp
out
sub
ljmp
push
ret
push
arpl
popl
incl
xchg
xchg
mov
or
jg
cmp
mov
divb
inc
add
xchg
mov
addb
dec
popf
push
rclb
adc
stos
fcompl
fsubr
mov
add
pop
add
ret
add
or
add
sub
out
push
mov
add
rcrl
int
add
ret
add
pusha
add
add
add
push
jmp
ret
aaa
mov
loopne
in
lods
mov
add
int3
mov
sarb
scas
into
push
out
pop
data16
jl
add
dec
shll
je
push
mov
add
and
sahf
imul
add
fwait
xchg
lea
xor
outsl
in
dec
outsl
adc
or
adc
add
sbb
shll
adc
or
push
or
test
test
add
add
and
cmpsb
add
xor
test
jmp
push
add
add
popa
jmp
cmp
inc
insb
cmpsl
add
dec
mov
test
push
add
dec
xor
add
sub
add
push
test
xchg
dec
rolb
lea
add
jmp
iret
pushf
mov
push
mov
pop
mov
add
popa
add
pop
dec
mov
imul
int
sub
add
mov
add
test
int
or
xchg
btr
add
cli
pop
dec
mov
add
outsl
add
adc
xor
inc
add
add
lcall
lret
add
bound
stos
xchg
fstpt
loop
lods
adc
add
add
xlat
or
xor
add
and
test
mov
dec
lcall
xor
scas
addl
jge
add
mov
cmp
pushf
sbb
lcall
add
mov
out
jl
sub
repz
xchg
jnp
fidivl
rolb
cmp
add
add
add
dec
pop
addb
xor
int3
jle
lods
add
decl
mov
add
push
jmp
push
addr16
lahf
in
sahf
mov
clc
add
incl
push
std
aad
enter
and
mov
add
ljmp
ja
add
addl
xor
add
jle
inc
add
enter
dec
xor
pop
and
push
lahf
roll
add
hlt
inc
add
sub
addl
hlt
push
mov
add
cmp
add
mov
mov
pop
inc
add
add
ret
add
test
add
and
ret
sbb
add
pop
add
mov
adc
add
add
incl
inc
add
sbb
mov
addl
adc
xchg
scas
aam
jl
ret
add
inc
add
stos
inc
add
or
insb
xchg
gs
add
sub
call
add
add
xor
push
push
ret
push
pop
testb
add
icebp
jno
and
cld
ret
add
addl
pop
sub
mov
add
addb
out
add
fcoml
repnz
mov
add
repz
add
repnz
mov
mov
jmp
stos
ljmp
popa
add
adc
lcall
sub
push
inc
add
push
cmpsb
addr16
pop
cmp
pop
pop
mov
or
sbb
les
stos
insb
push
ret
jmp
mov
dec
pop
mov
nop
in
movsb
add
fists
add
jne
push
ret
push
xchg
in
loop
or
add
mov
or
push
xor
add
in
out
push
repnz
pushl
mov
std
pusha
add
call
loop
enter
sub
add
push
add
scas
int
cmc
cmp
jle
pop
add
addb
sbb
xchg
aam
and
mov
movsl
add
add
je
push
jns
jl
ljmp
rolb
jns
sahf
rclb
int
cwtl
pusha
add
cmp
add
add
add
inc
add
add
push
sahf
fnstcw
cmp
add
ljmp
inc
add
sub
outsl
pop
movups
add
ja
add
pusha
push
push
and
add
stc
pop
out
into
xchg
shlb
add
mov
mov
sar
ljmp
jb
icebp
inc
add
imul
int3
das
std
add
sar
dec
in
sahf
adc
adc
or
adc
outsl
cmp
mov
pop
mov
mov
add
leave
and
ret
add
push
add
decl
stos
lods
pop
mov
add
cmp
push
or
mov
and
add
inc
jmp
aam
into
popa
and
push
dec
cmp
xor
loopne
sete
fs
mov
dec
adc
xor
pop
cmp
sbb
lock
mov
sub
sub
test
and
jae,pt
sub
lock
icebp
imul
call
movsb
add
cmc
and
add
push
add
add
rcrl
mov
add
add
xchg
pop
pop
jp
push
fdivl
dec
sti
addl
xor
mov
push
ret
pop
push
add
mov
and
inc
add
push
adc
dec
stos
mov
dec
and
dec
aas
addl
decl
addl
add
ds
icebp
idiv
inc
push
inc
add
rolb
call
push
jmp
push
sub
bound
sbb
add
mov
xor
dec
in
cmp
add
cwtl
push
les
test
sub
test
add
test
roll
xchg
imul
inc
add
fistps
push
scas
idivl
xchg
pop
les
xchg
aas
clc
movb
add
roll
push
add
pushf
pop
loope
inc
add
mov
push
out
cld
pushl
flds
jbe
add
push
pop
out
jmp
add
mov
push
jmp
pop
enter
xor
cwtl
lcall
mov
test
mov
add
add
mov
xlat
and
push
sub
hlt
jbe
adc
add
sub
daa
add
add
jecxz
mov
xor
adc
outsb
cmp
xor
not
push
addl
add
or
jo
add
enter
lock
ss
add
push
jmp
sbb
or
les
jae
mov
xchg
sub
add
lock
add
movl
mov
inc
add
add
add
dec
pop
add
add
dec
decl
test
sub
lahf
mov
stos
mov
cmp
movb
sbb
jmp
push
ret
aas
push
dec
fwait
add
sbb
js
stc
mov
xor
add
push
pop
add
add
jmp
adc
add
mov
add
sub
inc
inc
add
aas
push
push
xor
das
xor
jae
sbb
cmc
roll
add
movsl
add
rol
add
sub
add
scas
pushf
ret
add
rcll
add
or
add
and
in
push
inc
add
ds
mov
into
stos
imul
adc
or
dec
or
push
lahf
mov
jns
xchg
mov
mov
sub
shrb
pop
add
int
cltd
arpl
inc
add
popa
jmp
push
add
push
push
inc
add
add
ret
jnp
pushf
pop
je
add
lcall
out
addr16
add
add
add
repnz
dec
push
mov
jmp
das
sub
dec
dec
jl
sti
mov
inc
add
test
jl
jmp
add
add
pop
and
inc
push
sub
and
ds
fisubrl
add
mov
xchg
push
daa
add
add
add
decl
fistps
add
xor
mov
jmp
jb
addl
add
adc
lock
ljmp
xchg
aas
push
push
fisttps
cmpsl
add
sub
mov
decb
or
mov
add
add
add
std
fcompl
addb
leave
mov
add
push
jmp
cmp
filds
inc
add
xor
xchg
out
or
mov
add
inc
add
pop
fsubs
dec
ss
add
add
jae
lods
and
ss
cld
daa
add
ljmp
insb
gs
ret
popa
shl
cmp
into
jge
add
cmp
pushf
ret
add
addr16
add
popf
mov
add
loop
ret
add
xor
aas
add
lcall
jae
add
add
push
fcmovnb
add
or
cs
add
xchg
mov
add
lcall
rolb
std
inc
add
sbb
push
push
mov
jmp
orl
xor
xchg
ja
mov
pop
jne
dec
repz
add
jg
add
test
ja
add
push
or
push
and
fldcw
negb
roll
mov
cs
pop
addl
add
ljmp
addl
add
stc
pop
adc
cs
add
scas
lret
dec
mov
add
add
out
xchg
mov
lea
mov
jns
jbe
icebp
xchg
sub
loope
and
addb
or
jbe
add
dec
data16
push
cmc
cwtl
shl
pop
rolb
push
mov
push
xchg
mov
add
add
push
addl
lods
xchg
and
add
xchg
into
adc
mov
jecxz
mov
aaa
push
dec
dec
movl
mov
add
lods
stos
sub
popa
add
lds
mov
dec
mov
xchg
jne
out
mov
sub
jmp
popa
push
push
add
mov
pop
mov
cld
cmp
rolb
roll
add
arpl
pop
addb
fwait
movsl
add
xor
mov
add
mov
and
and
push
add
inc
add
xor
dec
or
popf
cmc
or
add
or
push
xchg
cltd
and
aas
cli
lea
loop
and
add
stos
mov
push
je
push
ret
arpl
mov
add
and
fisttpll
push
fldt
fcmovne
cltd
jl
addl
add
push
sub
xchg
adc
jmp
add
aad
loope
addb
cmp
cmp
sbb
add
add
xor
add
les
lock
add
ljmp
pop
pop
cmp
call
mov
push
sub
or
pop
fiaddl
mov
jbe
movb
mov
add
add
add
ret
fwait
shl
add
iret
push
mov
lcall
data16
test
cmp
lahf
and
and
pop
push
push
add
jmp
add
sub
data16
push
aam
inc
add
pushl
nop
inc
add
dec
popa
add
shlb
decl
fidivs
adc
adc
push
adc
mov
add
icebp
shl
add
mov
lahf
dec
pop
add
icebp
push
sahf
jl
roll
dec
fbld
dec
call
pusha
add
xor
add
xchg
xchg
cmc
add
cmp
imul
mov
addl
add
inc
add
dec
aas
movsl
add
and
shl
add
outsb
imul
mov
add
add
add
dec
mov
inc
add
icebp
add
dec
bound
je
mov
add
adc
mov
mov
movsb
add
cld
push
lds
push
sbb
add
movsl
add
cwtl
in
jmp
lock
inc
push
pushf
icebp
roll
cli
repnz
jecxz
sbb
mov
test
push
xor
jmp
insb
xor
dec
lahf
push
js
mov
addr16
jb
rolb
push
or
add
pop
jne
add
mov
mov
mov
decl
decl
sbb
xor
lret
jle
jne
jmp
aas
call
arpl
dec
int3
cs
or
xchg
pop
add
xor
mov
cmp
faddp
add
xchg
lock
push
jmp
pop
popa
out
addl
fcoms
sti
mov
dec
test
test
fwait
inc
add
add
add
add
call
xchg
adc
add
add
addb
push
mov
cltd
add
or
pushf
push
add
shl
add
test
sti
bound
test
clc
pop
mov
add
jp
add
and
out
mov
lods
cmp
mov
add
jno
mov
cmpsl
add
lret
jmp
idiv
inc
add
lcall
lahf
mov
add
inc
add
add
jbe
lret
xor
add
ja
add
add
pop
add
mov
pop
inc
add
lock
pop
ljmp
hlt
les
jb
pop
into
jne
add
ficompl
sub
jmp
mov
out
jg
or
add
out
jmp
add
mov
jmp
push
arpl
cmp
in
clc
pop
add
jne
jmp
or
add
add
popl
jmp
adc
and
movsb
add
cltd
xchg
mull
bound
add
jle
int3
imul
ret
add
add
mov
ds
add
mov
setbe
lcall
pop
adc
mov
js
pushf
inc
add
lock
sbb
mov
add
mov
in
jmp
add
mov
add
add
incl
pop
stos
mov
add
xor
js
jmp
sub
and
jne
sub
add
out
sbb
add
add
jne
add
fwait
lea
gs
pop
aas
push
arpl
divl
js
inc
add
add
jne
cld
roll
mov
in
std
lock
push
testb
add
add
adc
mov
sbb
add
push
mov
jmp
lock
arpl
inc
add
or
pop
pusha
add
mov
xchg
enter
add
xor
jmp
and
pop
mov
jnp
add
into
xor
add
add
bound
inc
add
rclb
imul
and
add
repz
add
outsb
jns
add
inc
add
adc
js
mov
adc
sbb
push
jmp
push
insb
addb
add
movsl
add
add
lcall
add
scas
cs
dec
mov
cli
inc
add
cmc
inc
add
in
xor
mov
sahf
push
mov
dec
add
repz
cli
test
pop
add
icebp
scas
dec
and
mov
fcoms
add
push
push
ret
imul
iret
mov
pop
clc
add
jmp
insl
hlt
paddusw
test
add
stos
push
mov
xchg
fcmovnu
cmp
push
add
rolb
in
pop
loopne
or
aaa
dec
mov
adc
mov
xchg
inc
add
mov
add
add
add
add
stos
cltd
xchg
mov
cs
sub
add
adc
mov
push
cmp
add
call
push
ret
pop
inc
inc
ljmp
pusha
jmp
push
add
mov
dec
fidivs
adc
lahf
adc
xor
pop
mov
cmp
cmp
add
xchg
test
mov
add
inc
add
in
and
lods
out
dec
popa
add
nop
popf
out
rolb
xchg
xor
scas
add
decl
addl
add
xchg
lcall
jb
add
movsb
add
incl
add
add
leave
ja
add
and
dec
and
cld
lret
lcall
inc
add
addl
out
rolb
add
repnz
add
add
add
lods
jns
sti
shll
pop
jns
ja
addb
iret
es
clc
scas
add
lods
jnp
add
mov
push
sub
dec
lret
mov
call
xorl
mov
inc
add
inc
add
lea
add
out
dec
jb
add
xchg
addr16
mov
cmp
lcall
das
stos
xor
jb
add
lock
jge
add
sbb
xor
xor
add
addl
add
sahf
sub
arpl
mov
test
mov
hlt
push
adc
jmp
aam
in
mov
nop
adc
add
pop
cmpsl
add
jo
add
add
add
bound
hlt
inc
add
pop
outsb
shl
add
fiaddl
add
fildll
add
cltd
bound
jle
das
inc
add
shrl
xor
xor
mov
inc
add
movsl
add
xor
add
mov
mov
add
pop
xor
adc
popf
inc
add
add
les
repnz
or
adc
pop
lds
mov
mov
pop
into
adc
xchg
gs
mov
adc
call
sbb
push
ret
dec
pop
push
xchg
jge
test
add
add
add
call
jmp
add
icebp
insb
jg
ljmp
inc
add
insl
clc
inc
add
mov
push
add
add
daa
add
add
add
add
decl
cmpsl
add
in
jp
test
in
fiadds
sub
addl
add
js
add
add
or
aad
xchg
fisttpll
push
add
inc
add
test
add
jg
add
add
in
mov
sbb
add
push
add
repz
cltd
addl
add
add
add
mov
nop
xchg
xlat
hlt
int
add
dec
iret
mov
add
int
ds
push
inc
add
addr16
dec
inc
inc
add
enter
add
imul
lea
jmp
push
push
push
push
sahf
mov
ja
mov
push
push
push
sub
test
pop
lcall
sbb
jle
call
add
stos
ret
add
add
sti
std
ficompl
inc
add
cli
mov
pop
add
mov
cld
and
movsl
add
scas
cmpsl
add
and
mov
sub
and
out
mov
ret
add
add
add
leave
jg
imul
add
fcompl
aad
mov
cld
cmp
popf
repnz
addb
jnp
test
push
ret
push
pop
stos
push
push
cmp
bound
mov
cmp
incb
add
clc
ret
add
mov
repz
testl
add
addr16
gs
mov
adc
add
add
jno
add
lods
add
decl
aad
inc
add
add
inc
add
add
push
ret
add
add
adc
ss
enter
xor
cmp
sub
add
rolb
ljmp
add
add
inc
add
push
das
inc
add
sti
xchg
test
jae
jle
xchg
mov
jno
push
mov
sbb
inc
push
ret
into
push
jb
push
fists
cmp
add
cmp
xor
jg
cli
pop
mov
dec
imul
mov
test
add
mov
lock
addb
jb
add
add
and
scas
pop
popf
add
decl
stos
movb
loop
stc
fimuls
add
jb
add
bound
mov
sub
hlt
push
repnz
sti
mov
lcall
add
push
addb
add
add
adc
pop
and
out
inc
add
add
test
add
fnstsw
add
ffreep
add
add
lret
pushf
loope
inc
add
aas
pop
ds
outsl
addl
loop
pop
and
inc
add
add
mov
sub
adc
pop
arpl
jne
pop
inc
add
jb
inc
add
pushl
das
and
jbe
xchg
or
add
ljmp
fld
add
popa
add
sub
mov
sub
add
and
cmp
addb
xchg
and
idiv
adc
xlat
pusha
add
cs
int
add
add
sbb
mov
push
jmp
sub
push
call
cmc
pop
lahf
mov
adc
jecxz
stos
pop
pop
stos
cli
sub
add
in
xchg
inc
add
add
add
add
pop
out
call
ret
or
aaa
icebp
xchg
dec
mov
xchg
shll
popa
add
mov
jmp
scas
pop
add
cmp
mov
jo
sbb
xor
add
add
add
clc
rep
add
incl
xor
jmp
adc
push
adc
sub
pop
push
cmp
push
nop
inc
add
add
decl
adc
or
adc
add
mov
add
push
lods
sahf
fisubrl
xor
inc
add
fisttpll
icebp
test
imul
cld
aad
pop
push
out
cmp
add
jge
cli
xchg
jge
add
xlat
add
std
leave
push
mov
add
cmpsb
add
rolb
mov
cmp
out
dec
jge
add
mov
sub
xchg
leave
push
out
cmc
push
add
loopne
mov
jne
jmp
jb
dec
pop
in
paddusb
mov
call
adc
mov
addb
lods
add
jmp
add
inc
add
push
sbb
add
cmp
add
pop
dec
imul
xchg
mov
pop
sbb
pusha
add
jmp
lret
xor
and
jno
sub
push
sub
arpl
lcall
add
incb
sbb
add
ljmp
ja
add
sbb
push
inc
add
jle
fldcw
add
jge
xor
add
out
fistps
push
popa
jmp
push
pop
cmp
xchg
add
jmp
pop
mov
ds
out
add
push
mov
addl
add
decl
push
or
mov
push
jmp
ret
dec
std
pop
je
add
add
roll
mov
hlt
insl
jo
adc
mov
aaa
cmc
popa
add
add
push
repnz
jne
sub
std
sub
or
movsl
inc
add
enter
xor
int
lds
add
mov
enter
movl
add
add
pop
repnz
inc
add
arpl
xlat
pop
mov
add
add
mov
out
int3
scas
sbb
push
add
add
jmp
xchg
add
push
pop
mov
call
jmp
insb
cmp
cmc
push
pop
mov
jge
arpl
std
jmp
sub
inc
add
add
or
push
add
jmp
jb
insb
cmpsb
incb
xchg
bound
ret
add
or
int
add
cmp
test
sbb
push
cwtl
pop
aaa
nop
jbe
cwtl
lock
add
shll
add
data16
insb
add
add
push
jmp
push
das
jb
popa
add
int3
xchg
in
mov
imul
add
add
incl
les
js
mov
arpl
leave
mov
repnz
dec
cld
neg
insl
jl
add
cmp
add
jbe
add
mov
arpl
fiaddl
lcall
xor
insb
in
pop
jg
mov
dec
test
mov
mov
jmp
sub
xchg
shrl
add
loopne
add
add
inc
add
das
ret
addl
xor
das
inc
add
add
lret
pop
fmul
sti
and
daa
add
mov
call
inc
push
add
add
xchg
shll
add
mov
push
ljmp
ds
add
add
cmp
lcall
stos
popf
fisttpll
outsb
mov
mov
add
adc
add
testb
jl
imul
add
add
mov
pushf
movsl
add
add
add
roll
movsb
add
adc
rcll
and
or
add
add
add
push
ret
sub
mov
pop
cmp
push
mov
loop
icebp
or
and
ret
add
pop
arpl
ret
add
inc
add
arpl
pop
and
popl
dec
push
add
lcall
lcall
sbb
dec
pmullw
jp
jge
repnz
pop
lcall
fwait
cwtl
inc
jle
pop
sbb
fcomps
jne
ffreep
add
mov
or
add
in
repnz
pop
cltd
inc
add
test
mov
add
add
push
jmp
sub
insb
push
xor
fbstp
loope
test
loop
cmp
cmpsb
add
xlat
aaa
daa
add
xor
jp
xchg
mov
xchg
ss
lock
cmc
adc
xor
into
and
add
jmp
add
add
add
add
xor
add
scas
into
push
jmp
xchg
out
inc
add
add
add
iret
fisttpll
jne
add
out
ss
jne
add
test
mov
lret
add
dec
push
xchg
push
add
in
in
mov
sub
mov
pop
imul
lock
xor
jae
clc
aam
addb
xchg
mov
or
and
dec
pushf
dec
bound
cmp
push
add
out
mov
mov
in
aad
add
inc
add
inc
add
or
ja
movsb
add
push
cmp
or
jmp
into
inc
sub
add
push
pop
call
add
push
addl
push
push
cmp
ds
add
cmp
push
inc
add
jmp
inc
add
loop
inc
add
jmp
add
das
insb
pop
or
ljmp
cmpsl
add
aas
movb
and
pop
call
in
jnp
jg
cmp
pop
pop
in
into
lods
shll
test
inc
add
call
nop
xor
call
pop
stc
jp
test
xchg
dec
iret
ljmp
add
add
push
int
add
ja
sub
add
push
add
std
fdivr
push
arpl
loop
push
lret
fdivrl
pop
inc
add
mov
imul
add
ret
add
xchg
mov
pop
sub
mov
add
decl
das
cli
sub
mov
jg
sbb
pop
cmp
sub
aaa
inc
add
push
fcomip
push
cmp
add
adc
icebp
pop
push
inc
add
in
xchg
adc
pop
adc
cld
jecxz
decl
sbb
and
xor
loopne
mov
mov
add
test
lods
lds
ret
add
adc
mov
xchg
cmp
push
and
movb
daa
add
add
cmpsl
add
add
add
and
jae
mov
pop
stos
stc
outsb
sahf
or
add
sbb
imul
add
xchg
stos
cld
aaa
daa
add
movsb
add
stos
pushf
stos
jp
cmp
addb
ret
push
mov
add
mov
add
mov
jmp
dec
push
addl
or
add
adc
jg,pn
nop
loope
scas
negl
add
std
das
test
clc
into
aaa
fucomi
bound
or
add
jmp
lcall
pop
addl
shr
orl
add
or
mov
les
pop
sbb
call
lock
adc
and
cmp
imul
add
test
mov
adc
pop
jg
add
out
cld
ss
add
add
sbb
imul
pop
sub
xchg
and
jb
mov
jmp
and
inc
mov
dec
icebp
sub
sbb
push
jmp
jmp
push
popa
mov
mov
add
sub
pop
in
stc
les
and
repz
rolb
add
in
rolb
jno
outsl
test
inc
add
jns
add
cmp
add
mov
inc
add
mov
add
das
jmp
mov
push
sbb
push
lock
pop
push
cmp
add
loopne
ret
add
jns
imul
add
popl
ficompl
push
jmp
push
push
lods
bound
sbb
jecxz
xor
add
add
call
cwtl
or
mov
dec
jle
aam
sti
jnp
add
add
mov
add
add
jmp
lret
sub
cmp
cld
add
incl
push
addl
push
add
mov
jmp
add
add
push
insb
out
sbb
movsb
add
add
add
sub
fstpl
popa
add
movsb
add
sub
movsl
add
mov
ja
push
pop
add
lods
je
add
sbb
lods
scas
call
inc
pop
push
js
imul
adc
cmp
dec
ret
jmp
cmp
stc
sub
pop
lret
push
pop
push
mov
or
add
add
loop
iret
jns
iret
test
mov
in
sub
or
pusha
add
popf
mov
add
sahf
adc
add
and
and
cmp
add
icebp
into
or
add
pop
aad
sub
mov
push
cmc
testb
lcall
add
sbb
hlt
mov
add
add
add
jmp
sbb
into
inc
add
push
in
out
xor
sar
int3
xor
out
in
data16
xor
add
and
insl
mov
fld
add
push
mov
mov
add
faddl
add
push
sbb
add
popf
das
pop
movl
sbb
stos
les
ret
cld
or
insl
pop
push
fisttpl
add
jmp
scas
jmp
add
mov
add
mov
add
lea
aas
ret
pop
in
lret
test
add
test
cmp
cmp
add
jnp
movb
pop
jns
adc
cltd
jne
inc
add
add
fsts
in
cs
filds
rol
aam
adc
xchg
stc
daa
add
je
add
jge
mov
add
or
add
pop
mov
rclb
sbb
pop
and
inc
mov
push
cld
shl
add
cmc
imul
lds
cs
add
sub
add
mov
pusha
add
add
add
and
repnz
and
out
ja
aam
add
xchg
pop
mov
mov
cld
add
jle
jo
add
adc
in
sbb
aaa
adc
add
add
push
lcall
push
push
stos
das
rorl
in
adc
inc
add
add
sahf
icebp
cmp
jo
dec
stos
imul
add
bound
ret
add
mov
jmp
lock
clc
in
xchg
cmpsl
add
jg
add
xchg
clc
das
and
cmc
test
nop
sub
add
add
decl
test
sar
jmp
enter
mov
decb
jp
hlt
enter
out
jb
pop
pop
lcall
add
dec
push
in
addl
inc
add
mov
repz
mov
cmpsl
add
add
sbb
jne
push
ret
sbb
push
fs
rcrb
and
sub
lods
lcall
add
add
jne
add
add
add
cmp
add
ljmp
push
repz
jne
outsl
sub
add
xchg
push
addr16
push
cmp
pop
xor
fsubrl
add
pusha
add
inc
add
add
rolb
decl
jmp
mov
inc
add
movsl
add
cmp
fldl
pushl
rcrl
iret
ret
add
out
xor
call
ja
add
fwait
jne
add
push
roll
dec
sti
add
movsb
add
sub
jmp
ljmp
add
pushf
xor
rorb
cmc
add
mov
push
add
cltd
mov
inc
add
mov
js
push
inc
add
add
inc
add
test
arpl
add
cltd
xchg
outsb
mov
xchg
sahf
rol
add
add
lcall
adc
addb
push
add
add
je
rolb
idivl
add
pop
add
add
or
leave
mov
pop
fcmovnb
add
pop
das
add
add
add
cmp
leave
fistpl
mov
mov
fwait
xchg
or
lods
cli
movsl
add
add
cmpsb
add
xchg
mov
xor
adc
add
add
add
pop
add
and
jge
test
in
je
jb
pop
aam
or
add
cmp
test
mov
out
cmpsl
add
xchg
in
test
adc
xor
dec
imul
inc
add
add
mov
push
ret
aam
add
mov
add
inc
add
mov
pop
jae
add
lods
sbb
sbb
mov
scas
xchg
pop
in
and
fisttpl
mov
add
mov
stos
jg
add
add
add
and
add
sub
add
movb
add
hlt
jle
xchg
fisubrl
cld
imul
jmp
adc
mov
inc
add
add
shll
xchg
ds
or
mov
add
lock
xlat
js
dec
addl
mov
push
sub
push
push
ret
push
jb
push
lods
insl
or
pop
sbb
add
jmp
add
push
jmp
xor
inc
add
add
jnp
aas
adc
jns
add
xchg
stos
xchg
dec
mov
and
adc
iret
mov
addl
sub
mov
push
stos
or
mov
aaa
xchg
dec
xchg
idivl
scas
pusha
add
bound
push
dec
lods
cwtl
movsb
add
int3
push
or
daa
add
jp
lcall
xor
add
push
jmp
xor
stos
pop
rolb
call
pop
mov
daa
add
call
xchg
icebp
xlat
mov
add
add
mov
xchg
das
clc
insb
ret
add
cwtl
shlb
movsl
add
lds
and
push
lock
add
mov
test
inc
clc
jle
lcall
enter
add
into
adc
loope
dec
call
adc
xchg
ss
enter
and
xor
cs
add
xchg
pop
or
sbb
icebp
movsl
add
divl
inc
add
je
add
jns
add
ja
or
das
lcall
addb
cltd
adc
into
mov
arpl
out
ds
ficoms
outsb
mov
add
lcall
pusha
add
in
shrb
sahf
enter
lcall
incl
mov
or
mov
rcrb
pusha
add
xchg
adc
test
add
scas
and
sahf
pop
push
mov
jg
or
jbe
rorl
into
and
mov
mov
push
ret
negb
push
or
and
mov
or
jg
add
xor
sahf
in
int
add
add
fisubrl
dec
fldt
push
mov
jo
add
dec
xchg
adc
adc
int
add
sbb
mov
nop
call
sub
bnd
dec
sub
cmc
inc
add
movl
sbb
insl
sti
xor
arpl
push
jns
add
or
addl
xchg
jecxz
push
mov
add
add
mov
add
jmp
clc
fdivrp
call
push
adc
adc
xor
push
dec
jmp
add
ret
call
push
movb
sbb
int3
test
add
incl
aad
xchg
push
ret
xor
mov
aas
das
in
sub
fwait
cmpsb
add
std
cli
xchg
jno
or
fwait
or
push
sub
xchg
pop
sub
daa
add
adc
inc
cmpsb
jmp
push
test
inc
add
add
add
xor
add
mov
inc
add
addb
leave
js
mov
dec
dec
rolb
push
jle
push
aaa
pop
fildl
aam
loope
add
in
fucomip
add
xchg
sbb
jmp
push
ljmp
cmp
xchg
inc
add
idivb
and
pop
arpl
movl
addr16
add
imul
or
icebp
sti
xchg
xchg
xchg
sbb
add
mov
nop
ds
add
inc
add
bound
lret
dec
push
outsl
xlat
lds
sbb
bound
in
imul
push
dec
imul
add
js
lahf
add
pushl
add
or
cmpsl
add
or
inc
add
add
xor
pop
ss
das
cmp
aaa
sbb
test
ljmp
pop
inc
add
jecxz
bswap
mov
add
add
add
add
add
mov
add
mov
jl
xor
in
test
jne
push
mov
jmp
push
xchg
xchg
inc
aas
add
mov
add
sub
sub
inc
add
add
mov
addb
add
mov
call
and
push
mov
push
sbb
aaa
daa
add
add
in
ds
add
cmpsb
add
add
into
rolb
lcall
sub
add
mov
add
add
adc
inc
add
add
std
mov
add
in
out
daa
add
push
fnstenv
mulb
add
push
add
dec
adc
fcmovne
test
mov
mov
pop
in
xchg
fnstenv
cmp
add
add
add
sbb
pop
addl
das
ret
add
add
test
mov
and
repz
or
dec
addb
cmp
add
fildl
add
sub
add
cmp
add
add
shrb
data16
jle
add
mov
add
ljmp
out
adc
addb
outsl
mov
add
or
dec
jb
add
cli
pop
push
xchg
mov
add
loope
xchg
cmp
add
int
lock
imul
add
push
inc
add
das
mov
arpl
jno
rorb
jmp
add
inc
add
add
lret
cmpsb
add
ja
sub
pop
sub
pop
sti
lcall
std
dec
nop
addb
into
sub
add
popf
test
pop
xchg
xlat
inc
add
scas
outsl
adc
add
mov
aad
out
les
push
add
push
add
add
pop
add
add
fdivrs
and
sti
mov
add
add
mov
pushf
mov
add
rolb
lret
scas
mov
cwtl
mov
mov
add
cld
fmull
dec
pop
mov
icebp
mul
add
jl
add
addl
mov
add
xchg
jle
decl
sysenter
ds
scas
pop
les
out
add
call
fdivrs
mov
jo
xchg
fisttpl
add
lcall
push
and
div
psraw
roll
mov
mov
pop
scas
mov
or
cmp
dec
sub
add
add
jnp
push
or
inc
add
dec
add
jae
mov
dec
push
into
out
pop
enter
sbb
dec
and
jmp
add
in
movsl
add
or
adc
outsb
mov
incl
dec
and
lods
lock
dec
sub
push
ja
add
jbe
add
jmp
cmp
jns
addl
add
fincstp
lds
mov
flds
clc
dec
lret
movsb
add
and
aas
ds
and
insl
add
mov
xchg
dec
cmp
ds
ret
cmpsl
add
add
add
pop
sbb
fwait
aaa
jno
incb
xchg
pop
addl
add
cmp
out
cmp
mov
pusha
add
add
xchg
jg
data16
xchg
adc
jl
add
add
notb
add
pop
jb
ds
jo
fdivrl
add
add
xchg
cld
mov
add
adc
add
add
add
mov
fmuls
lds
sti
out
dec
mov
add
cmp
inc
add
jge
fstps
scas
pop
sahf
mov
das
add
popf
mov
out
int
mov
add
dec
push
push
add
dec
mov
std
xchg
sbb
lds
dec
scas
lods
shll
lods
xchg
cmp
add
mov
lods
pop
loop
mov
test
stos
arpl
mov
filds
fldenv
ret
add
mov
xchg
loope
pop
nop
mov
fucomi
mov
mov
xchg
inc
add
imul
movsl
add
sub
ljmp
ficoms
bound
popf
xor
aaa
inc
add
add
add
mov
pop
pop
xchg
cmp
add
add
movl
adc
add
stos
push
push
out
sub
loop
lahf
int3
cmp
add
stos
inc
add
mov
add
add
pop
in
les
bound
and
push
push
movl
and
js
addl
pusha
add
add
fwait
sahf
xor
rcl
mov
pause
sub
dec
pop
adc
cmpsb
add
push
add
jne
xchg
sbb
add
movlhps
movl
add
lahf
loopne
pop
icebp
lret
add
jmp
mov
cld
stos
iret
lahf
xchg
js
push
das
mov
addl
add
dec
fsubrl
add
dec
jae
sub
mov
mov
xor
xchg
movsl
add
sbb
add
add
add
ss
sahf
rolb
mov
stos
or
add
or
outsl
and
mov
xchg
mov
mov
add
cmp
add
jmp
and
and
fucomip
xchg
cld
add
ljmp
add
mov
mov
push
mov
add
xchg
sub
add
mov
aam
add
add
jmp
movb
add
pop
pop
enter
jle
add
test
mov
jb
mov
pop
pop
add
push
movl
add
mov
cltd
hlt
mov
xchg
adc
inc
add
test
xor
inc
add
aad
pavgw
popa
add
add
add
inc
add
add
idivb
rcrl
dec
inc
add
dec
sub
xchg
insb
jmp
fnsave
mov
nop
sub
or
xchg
mov
lods
mov
add
lock
aaa
loop
and
icebp
cmp
add
jp
jns
jmp
sbb
jne
xchg
push
jno
add
dec
sub
sbb
mov
sub
mov
add
mov
add
idivb
rorl
cmpsl
add
add
add
lcall
add
add
jge
add
or
dec
test
inc
add
lret
int3
fsubl
dec
popl
add
pop
and
or
mov
push
lret
push
xchg
add
lcall
das
inc
add
add
nop
adc
pop
dec
push
jg
add
xlat
xor
pop
adc
fcomps
fnstsw
cli
daa
add
lret
cmp
add
xchg
loopne
push
in
out
shr
insl
and
push
inc
add
add
fists
scas
pop
xchg
lock
add
stc
js
add
arpl
leave
mov
decl
mov
add
test
aam
add
addl
jmp
add
lea
xlat
dec
leave
into
mov
mov
cmp
jbe
jno
cmp
lds
cmp
fmuls
xchg
icebp
adc
jge
dec
and
jecxz
cmp
lds
dec
jle
test
cmpsl
add
aam
add
xor
mov
fstps
mov
nop
adc
add
hlt
jae
stos
push
mov
iret
xchg
xchg
jg
jmp
mov
add
hlt
dec
push
fisubrl
mov
xchg
sbb
ljmp
lahf
mov
sbb
mov
fcompl
cmp
add
or
mov
decl
cmpsb
add
mov
add
xchg
aad
add
jmp
cmpsl
add
mov
pop
cmp
add
dec
das
mov
lods
cmp
les
ret
add
adc
out
add
pushl
rolb
add
lahf
and
add
sub
dec
jae
lcall
sub
cmpsb
add
add
add
jmp
add
add
movsb
add
out
xchg
dec
fucomip
push
add
add
lcall
add
add
stos
cs
xchg
inc
add
divb
add
pop
outsb
adc
xor
cltd
mov
add
lea
mov
add
out
add
push
xchg
lock
mov
mov
add
mov
inc
add
rol
add
movsb
add
lea
adc
loopne
inc
add
sub
cmp
and
jp
pop
loope
icebp
les
roll
int
xor
lock
into
and
xor
add
adc
ljmp
cmp
inc
add
add
aad
push
pop
push
shrl
ss
add
out
pop
dec
or
add
mov
add
aas
cld
ret
add
push
inc
add
mov
lods
fnstenv
inc
add
push
add
add
movsl
add
add
add
cli
fcomi
jb
inc
add
add
add
jbe
mov
push
jo
addb
jge
add
jmp
iret
push
pop
repnz
inc
add
cmp
xchg
xor
and
push
pop
push
xchg
stos
inc
add
shlb
mov
xor
js
outsb
movsb
add
test
ja
adc
stc
scas
gs
fisttps
mov
dec
inc
add
les
jnp
sub
push
push
das
or
ss
shlb
pop
add
fdivrs
into
icebp
sub
bound
sub
adc
add
add
jge
out
add
xchg
lret
adc
add
add
add
xchg
xor
cwtl
jmp
data16
xchg
inc
add
lods
loopne
dec
xchg
xchg
cmc
mov
add
std
insb
mov
add
add
add
sti
loop
xchg
out
imul
adc
add
pop
fcomps
add
testl
data16
pop
jo
and
loopne
movb
add
add
push
mov
and
daa
add
mov
jnp
mov
sub
lds
dec
xor
push
movsl
add
loopne
pop
add
or
add
pop
mov
add
mov
xchg
or
add
xchg
clc
jl,pn
add
rolb
mov
out
jg
daa
add
rorb
daa
add
push
mov
push
mov
dec
sbb
popf
hlt
fwait
aad
dec
mov
mov
aad
roll
xor
and
add
clc
mov
pushl
or
sbb
out
arpl
testb
xchg
cwtl
mov
adc
push
pop
cld
mov
jno
dec
bound
mov
add
add
mov
pop
ret
add
jno
mov
add
add
cmp
sub
rolb
cwtl
test
adc
out
cmp
incl
mov
add
setp
add
into
outsb
sbb
sbb
xchg
pop
add
pop
add
ds
dec
popf
xchg
add
decl
roll
pusha
add
and
mov
cmp
addb
add
jp
add
push
push
movsl
add
in
push
pop
outsl
addr16
cmpsl
add
add
add
jmp
add
cmc
cmp
stc
int3
jecxz
mov
push
bound
inc
add
jecxz
addl
and
repz
imul
mov
out
fsub
add
adc
les
mov
ss
add
add
out
xor
pop
mov
add
pop
xor
mov
cltd
aad
inc
add
push
mov
fdivl
add
jmp
xor
add
hlt
and
cmp
add
fsts
pop
adc
push
pop
mov
lcall
jecxz
nop
imul
cmp
add
dec
mov
popa
add
add
add
push
cmpsb
add
mov
mov
imul
or
mov
imul
adc
add
add
stos
push
push
shrb
popa
add
pop
mov
mov
add
test
hlt
cmp
add
add
in
inc
add
pop
stc
add
pop
cwtl
and
decl
add
add
add
cmp
movsb
add
mov
mov
mov
mov
dec
inc
add
cmc
mov
add
push
fwait
aaa
and
movsb
add
add
incl
fisubrl
jmp
add
addb
add
adc
adc
fisubrl
xchg
dec
xchg
dec
or
dec
sub
lcall
addb
in
xchg
sub
xchg
dec
loopne
pop
in
push
jns
dec
push
adc
ret
add
jo
adc
sbb
or
clc
add
dec
xor
es
push
jl
aam
add
arpl
mov
add
add
negl
rcrb
lock
rcll
std
roll
cld
mov
add
cmc
add
decl
fwait
push
fsubrl
mov
add
lds
push
in
stos
out
adc
hlt
incl
inc
add
adc
jae
add
add
add
add
jge
add
sub
add
mov
mov
add
lcall
push
loope
xchg
jmp
addl
push
addl
lea
xchg
push
mov
stc
push
mov
add
pop
cmp
add
and
fwait
mov
jmp
pop
mov
add
add
mov
add
add
add
add
push
mov
add
jmp
lret
negl
or
call
push
sub
addl
iret
add
add
dec
or
lahf
dec
or
add
push
aas
aam
mov
imul
int3
pmulhw
aas
ret
add
push
test
inc
add
add
dec
movl
rcrb
outsl
mov
pop
and
repz
and
mov
add
loope
out
pop
fldl
lcall
inc
add
mov
mov
add
jp
add
add
dec
arpl
test
add
xchg
lahf
push
add
imul
xor
enter
pop
cmp
in
dec
sub
add
loope
cwtl
out
xchg
lcall
mov
mov
xchg
mov
lock
push
mov
add
adc
or
lahf
test
cs
cmp
pushf
lret
fildl
jmp
add
mov
pop
jae
or
add
push
dec
loope
add
outsl
inc
add
add
bound
test
out
les
push
add
data16
mov
movsl
add
roll
lods
imulb
fsubl
repz
addb
add
add
add
addl
add
jg
push
bound
nop
mov
int
jno
repz
push
pop
cmc
loopne
stc
dec
and
fistpll
das
xor
mov
and
push
or
xchg
add
pushl
add
add
jge
jno
mov
daa
add
ljmp
xchg
mov
add
flds
test
pop
rolb
stos
nop
mov
add
jecxz
lea
fcmovnb
add
popf
test
mov
adc
addl
pop
add
jp
add
loope
in
push
and
iret
popa
add
add
pop
mov
add
stos
roll
xchg
test
sub
js
sahf
iret
pop
jmp
add
push
roll
flds
out
and
cmp
jge,pt
movb
add
add
call
arpl
inc
add
and
notb
out
out
sbb
add
jle
data16
add
ljmp
arpl
enter
ljmp
rcl
pop
popf
vpshaq
pop
stos
cld
test
sti
lcall
mov
imul
rol
add
jb
std
push
push
add
ljmp
or
repnz
add
ja
add
mov
mov
push
xor
dec
mov
sub
add
add
rorl
mov
and
mov
sub
stc
loopne
cltd
shll
mov
add
push
mov
add
filds
add
add
add
jge
das
jbe
xchg
aad
mull
fcoml
addl
xchg
push
mov
add
add
sti
filds
aam
bound
nop
mov
add
push
sti
add
nop
mov
mov
add
add
stos
cmpsb
add
sbb
add
incl
out
movb
jg
jge
iret
mov
add
add
xor
les
mov
addb
jmp
add
bound
lret
inc
add
add
add
add
call
xchg
data16
decb
add
loop
pop
mov
repz
inc
add
adc
push
outsl
and
pop
fcmovnbe
addb
cmpsb
add
rolb
popa
add
roll
add
int
mov
add
add
fsubrl
loopne
addl
push
aaa
stc
sbb
sbb
out
cs
or
pop
sub
add
outsl
aam
call
pop
mov
adc
add
pop
add
je
addl
cmp
sbb
ss
sub
add
nop
mov
cmpsl
add
cmp
adc
add
incl
jmp
add
lea
movsl
add
add
dec
sbb
sub
or
add
ja
sub
ret
cmp
xchg
aaa
xor
add
clc
ret
pop
in
dec
jb
adc
mov
in
std
add
inc
add
push
movsb
add
aaa
jo
mov
add
nop
dec
lods
shl
add
add
xchg
aas
xchg
xchg
cld
sbb
addr16
dec
push
add
test
and
or
in
in
jg
add
xor
adc
add
cmp
sti
sbb
addb
sti
mov
js
add
rolb
fsubs
call
jns
add
sbb
dec
mov
push
jae
add
mov
mov
ljmp
add
add
xor
add
stc
shlb
and
sbb
mov
notb
int3
jnp
stos
leave
insl
test
mov
bswap
insb
hlt
cmp
addl
addl
add
add
jg
add
xchg
ror
pop
cmp
sub
repnz
push
lods
lahf
ret
add
loopne,pn
adc
add
insb
lods
addl
sub
lahf
addb
add
add
sbb
add
add
sub
dec
xchg
mov
adc
and
push
stc
je
add
sbb
lods
add
cmp
add
sub
addl
cmp
or
add
incl
add
add
mov
fidivrl
mov
xor
fnstcw
dec
sarl
clc
inc
add
sub
addl
jne
fdivrs
add
mov
push
push
add
add
or
dec
insb
loop
jmp
push
pushf
and
loope
push
sub
cmc
lods
xor
and
xchg
or
call
sub
add
roll
hlt
movl
dec
xor
jle
or
inc
add
add
dec
imul
jnp
add
cltd
xlat
sbb
mov
loop
pop
jge
adc
add
add
pop
adc
and
movsl
add
and
mov
mov
add
call
sub
imul
mov
jge
mov
ss
scas
ficomps
mov
jmp
and
jns
jmp
std
push
sahf
fdivr
cmp
add
lods
data16
js
decl
shrl
iret
arpl
add
call
or
inc
add
int3
xchg
jp
add
dec
sub
jmp
cmc
and
push
lds
fmuls
add
or
mov
add
jge
add
sub
mov
mov
add
add
add
fstpt
cli
stos
cs
movl
mov
cmp
inc
add
xchg
addl
std
mov
push
lea
add
add
xchg
fwait
pop
mov
ja
add
dec
or
lret
cld
ret
add
pushl
cmc
jo
shlb
addl
mov
int
xchg
fildl
divb
jne
sti
mov
loope
daa
add
inc
add
add
add
xchg
out
stc
mov
add
xor
insl
dec
loopne
fisubrl
cwtl
mov
add
and
fwait
movsl
add
add
adc
cmp
std
sub
bound
repnz
add
sbb
add
pop
jl
mov
mov
add
sub
jmp
add
pop
add
add
or
ljmp
mov
add
add
adc
jnp
nop
jmp
add
add
in
inc
add
dec
and
or
add
out
cmp
add
add
pop
pop
rcll
push
jp
cmp
add
add
lcall
ljmp
add
aaa
fisubl
add
mov
dec
lcall
data16
pushl
inc
add
jno
lret
test
push
adc
rclb
js
add
insb
in
and
push
int3
aas
cli
cmp
add
mov
push
nop
or
aad
jp
nop
addb
jnp
adc
out
ret
cmc
daa
add
out
filds
push
pusha
add
and
inc
add
pushl
and
cmp
add
leave
test
add
roll
add
push
testl
add
push
mov
push
dec
mov
out
xchg
out
push
pushf
jnp
mov
adc
add
push
inc
add
add
dec
testb
ljmp
shl
jle
add
shll
repnz
dec
rcll
and
push
jg
adc
add
add
add
sub
xchg
cmp
lahf
mov
cmc
push
mov
in
pop
lea
lret
xchg
pop
movsl
add
dec
shrb
add
or
scas
mov
cmp
mov
add
notl
add
pop
fidivrs
sahf
nop
movsl
add
adc
add
lea
es
add
add
lods
xchg
call
add
add
pop
xor
add
popf
cmp
jmp
xor
aas
decl
add
add
xor
inc
add
adc
leave
and
movsl
add
cmpsb
add
add
and
add
adc
mov
aas
addl
add
in
push
inc
add
mov
add
add
jno
add
fcmovnb
add
iret
out
int
jns
dec
js
add
xchg
cmp
fisubl
arpl
aad
mov
and
es
add
add
neg
or
pop
mov
in
out
in
cli
xchg
mov
add
mov
jb
add
add
std
jnp
dec
sahf
cmp
sbb
xchg
push
xor
decl
push
popa
add
fcomps
outsl
rolb
lock
in
pop
out
lock
add
ret
add
xchg
mov
dec
shll
add
xor
add
cltd
and
push
ds
ficompl
in
xor
xchg
pop
mov
inc
add
add
add
add
sbb
insl
mov
iret
test
jecxz
pop
fdivrl
mov
dec
xchg
xchg
jne
adc
add
movb
in
adc
cmp
leave
adc
add
mov
movsb
add
add
add
jecxz
xor
leave
popf
mov
add
adc
mov
inc
add
ds
jge
test
add
mov
movsb
add
dec
cli
stos
bound
dec
movsb
add
les
xlat
loopne
stos
fmul
cwtl
int3
test
nop
xlat
sbb
test
or
xchg
jl
cmc
rolb
daa
add
data16
add
xor
sub
pop
add
add
decl
jbe
xor
xchg
cmpsb
add
leave
movl
or
lods
cmp
inc
add
insb
push
fldenv
add
add
and
adc
daa
add
xchg
pop
sub
inc
add
ljmp
mov
fdivl
add
add
movb
mov
cmp
lea
cld
and
push
pop
inc
add
cmp
pop
add
add
add
int
add
cmpsb
add
xchg
les
lods
and
inc
add
add
add
inc
add
add
fistl
stos
cmpsl
add
arpl
sub
pop
add
lea
loop
in
lods
aas
ret
add
xor
roll
add
mov
jb
add
add
sub
add
sub
lods
gs
add
dec
inc
add
scas
pop
pop
pop
pop
ljmp
in
adc
add
xchg
loopne
dec
filds
push
cs
jns
add
ljmp
add
and
pop
mov
mov
inc
add
adc
add
incl
push
adc
push
jecxz
jmp
pop
add
addl
add
call
jge
sub
add
add
xchg
jbe
jne
mov
mov
jns
hlt
iret
aaa
mov
jecxz
add
aas
xchg
into
cmp
cltd
inc
add
lds
loope
rorl
cwtl
cld
in
les
jmp
pushl
inc
add
out
adc
fstp
cmc
loop
inc
add
pushl
add
ljmp
push
mov
add
inc
add
and
out
je
add
add
clc
in
mov
mov
sbb
inc
add
das
data16
sub
mov
add
or
add
add
mov
jns
fsubs
ds
lcall
test
addb
add
push
adc
jl
jle
add
add
or
inc
add
scas
iret
xchg
lahf
cmp
add
dec
outsl
negl
mov
xchg
mov
out
cmpsb
add
mov
mov
add
ljmp
mov
movsb
add
cwtl
addb
mov
xor
add
loopne
cmp
rolb
push
cmpsb
add
es
sbb
test
pop
mov
rcrl
pop
pop
ret
add
aaa
add
inc
add
add
add
fcomp
enter
jno
add
jmp
pushl
lcall
jmp
ret
add
shr
outsl
in
inc
add
add
xchg
mov
add
loop
call
xchg
out
or
xor
loop
mov
add
test
jne
call
mov
add
sub
decl
hlt
add
pushl
cld
add
call
dec
adc
cmp
cwtl
mov
roll
lret
aaa
inc
add
add
add
mov
call
push
movsl
add
jbe
add
idiv
push
add
ljmp
addl
test
pop
add
test
pop
les
xchg
js
cli
add
xor
addl
daa
add
loopne
enter
push
addl
add
shrb
ds
pusha
add
xchg
addl
mov
add
cmp
add
fwait
jbe
cmpsb
add
int3
jne
mov
and
jae
mov
add
incl
incl
and
jno
sbb
ret
add
fildl
in
incl
jmp
mov
addb
add
dec
jno
add
lcall
or
insl
add
hlt
fdivrl
cld
or
mov
cmpsb
add
and
repnz
sahf
addb
pop
xor
pop
sbb
ficoml
add
out
add
ljmp
xor
mov
lds
sub
mov
inc
add
push
ret
add
aam
add
add
add
add
pop
js
movsb
add
and
in
popa
add
xchg
push
jg
clc
outsl
fsubrs
mov
stc
outsb
jb
add
call
add
add
mov
add
add
add
mov
add
and
adc
outsl
nop
addb
mov
movsb
add
sar
lret
and
sub
or
mov
dec
push
mov
pop
jbe
dec
pop
jnp
loopne
fcomi
loop
in
jecxz
ljmp
daa
add
or
sahf
ret
add
add
mov
push
addb
insb
pushf
pushf
or
or
add
mov
sbb
cld
inc
add
jecxz
out
test
stc
push
pop
push
dec
mov
add
adc
mov
adc
fnstsw
adc
push
pop
xchg
pop
daa
add
jb
cs
in
pushf
add
call
xchg
push
or
add
jle
dec
cld
out
push
icebp
fdivrs
add
mov
add
fisubs
add
je
pushl
mov
out
mov
or
lods
ja
push
idiv
in
clc
test
jp
into
outsb
lods
rdtsc
xchg
ret
add
pop
cmp
push
inc
add
lret
pop
loop
mov
mov
add
decl
call
add
popf
out
sbb
sarl
les
sub
add
add
in
scas
stos
ret
add
je
add
jne
xchg
pop
fsubs
add
xor
add
jmp
jb
imul
sub
add
stos
add
adc
pop
fwait
cli
add
mov
or
popf
sub
push
data16
into
cmc
arpl
jecxz
adc
out
inc
add
jge
add
shl
add
jl
push
mov
add
xchg
push
inc
add
lret
ret
add
add
inc
add
das
push
add
and
rcrb
fstl
push
fsubrl
add
lds
lods
scas
hlt
sbb
decl
lret
ficomps
cmp
add
sub
ss
lds
dec
movsb
add
addb
stos
cmp
mov
cmp
inc
add
std
add
decl
sbb
push
pop
jle
bound
mov
leave
aas
adc
add
cmp
addr16
xor
push
pop
push
inc
add
shrb
add
scas
jp
add
das
sbb
xor
xchg
cmpsl
add
or
cmpsb
add
nop
lock
add
jecxz
xchg
cmp
mov
pop
jbe
push
addb
lret
daa
add
enter
add
insl
movl
add
inc
add
cwtl
jnp
movl
dec
pop
push
dec
dec
das
bound
into
and
imul
mov
add
out
and
out
insb
std
xor
test
xor
push
cltd
test
mov
insl
loope
add
mov
sbb
incl
call
add
add
add
push
loop
notb
xchg
int
mov
pop
jge
add
out
divb
add
dec
lds
mov
fadds
pushf
cmc
mov
loopne
popa
add
scas
sti
sbb
cmp
add
sub
mov
cmp
add
mov
out
mov
add
push
mov
jne
jg
es
mov
jae
cmc
xor
sbb
test
add
out
mov
addr16
out
ret
add
pop
push
cmpsl
add
pop
adc
mov
and
or
add
inc
add
push
je
mov
add
out
movsl
add
jge
mov
fwait
jb
mov
ljmp
add
addl
lcall
add
jg
sbb
mov
dec
and
inc
add
decl
inc
add
push
add
add
outsl
push
shll
add
add
scas
into
in
idiv
into
fimuls
daa
add
fcomps
push
clc
movl
add
xor
incl
inc
add
xchg
fmull
pop
lods
cli
and
call
cmp
mov
stos
data16
shr
negb
decl
arpl
roll
dec
cwtl
sbb
inc
add
inc
add
cmp
push
cmp
sub
mov
add
decl
add
mov
and
xor
add
jecxz
xchg
movl
jg
add
add
lcall
cmp
into
test
xor
lods
pop
dec
hlt
xor
push
push
jecxz
push
lods
data16
les
pmaxsw
sbb
jb
scas
xor
cmc
test
enter
stc
call
and
addb
mov
add
icebp
push
jne
loope
fwait
sbb
popa
add
out
add
inc
add
lcall
addl
add
roll
scas
or
iret
cwtl
mov
sahf
add
lcall
cmc
cmp
sbb
pusha
add
sahf
ficomps
sub
scas
movsl
add
add
stc
ret
add
sub
jbe
inc
add
add
add
loopne
xchg
mov
inc
add
add
jmp
add
push
jns
add
xchg
adc
in
imul
or
mov
decl
adc
add
out
call
pop
mov
pop
xchg
in
inc
add
out
pop
mov
add
add
xor
test
push
add
pusha
add
or
add
lahf
inc
add
cmp
xor
push
jl
ret
add
add
icebp
or
js
data16
mov
into
mov
push
fadds
add
jae,pn
cld
and
mov
mov
add
pop
dec
aad
cs
std
adc
outsl
xchg
cmp
xchg
push
lret
cmp
add
sub
add
or
sahf
lock
add
add
dec
lahf
popf
aad
xchg
pusha
add
inc
add
add
inc
add
and
loope
inc
add
clc
sub
mov
out
adc
xchg
cmp
incl
dec
xchg
repnz
ret
xor
jmp
es
mov
filds
add
add
add
xor
add
mov
add
add
mov
pop
mov
mov
push
push
sub
aas
jmp
add
mov
dec
cwtl
xchg
xchg
adc
add
mov
bnd
sahf
stos
rolb
enter
arpl
fldenv
pop
push
jmp
add
pop
ds
xchg
sub
adc
cltd
cltd
push
sti
daa
add
add
incl
jmp
add
cmpsb
add
mov
clc
inc
add
pop
pop
mov
ljmp
mov
lea
add
pop
pop
jnp
call
mov
mov
xchg
mov
lcall
add
les
sub
add
sub
mov
add
sbb
roll
and
inc
add
out
or
add
aas
testl
inc
add
out
imul
add
mov
xlat
les
inc
add
add
sub
add
scas
mov
cmp
add
ret
lcall
add
inc
add
pushf
ds
push
movl
ds
add
pop
nopl
fisubl
and
mov
sub
sub
add
cmp
std
lea
mov
mov
push
roll
je
add
lea
push
and
xor
push
jle
add
call
roll
add
dec
inc
add
test
jecxz
push
mov
addb
fbstp
mov
jae
mov
xchg
jmp
test
jmp
adc
or
jns
add
sub
mov
add
and
mov
loopne
mov
popf
jae
jge
cmp
add
in
add
dec
loop
jns
cmpsb
add
mov
push
or
add
jmp
clc
push
ljmp
nop
jne
int3
aaa
inc
add
and
xchg
dec
fimuls
rolb
cmpsl
add
mov
aad
test
push
popa
add
js
add
imul
fisttps
pop
das
out
jo
aad
pmulhuw
mov
push
sbb
and
cld
lea
ret
add
adc
or
out
dec
cs
and
rep
add
mov
add
into
adc
push
fs
shlb
add
add
add
jo
add
add
mov
or
sbb
or
xchg
jae
and
rolb
and
mov
lds
inc
add
mov
and
xor
sbb
adc
mov
push
mov
xor
pop
repz
push
jae
add
addl
roll
add
dec
cmc
adc
add
hlt
in
rol
add
sti
lea
add
add
add
add
add
cmp
outsb
cld
aas
sahf
inc
add
add
movsb
add
scas
pop
sub
sub
js
stc
sub
add
or
jne
add
data16
mov
xchg
push
clc
jecxz
and
cmp
lods
cmp
stc
repnz
fwait
arpl
mov
add
cmp
cmp
xchg
dec
shll
sbb
loop
out
insl
lret
in
dec
jns
arpl
xlat
xlat
and
inc
add
dec
sub
pop
addb
dec
mov
or
add
add
test
insl
loopne
jns
rorl
mov
add
pop
mov
ss
adc
xchg
pop
add
add
jno
cmpsl
add
add
notl
mov
pop
jbe
mov
addb
add
add
jo
shll
add
fistpl
pop
mov
pop
and
nop
pop
sbb
pop
mov
popf
lcall
and
movsl
add
cltd
dec
movb
in
pushf
and
iret
mov
add
dec
dec
jae
add
out
fisttpll
out
fidivrl
add
add
pop
xchg
inc
add
add
add
mov
or
add
mov
loopne
stc
mov
add
add
jecxz
out
cli
lcall
inc
add
add
insl
imul
mov
add
or
inc
add
dec
mov
or
jne
mov
lret
nop
sub
addb
add
sahf
mov
jmp
cmp
jl
add
add
adc
xor
ds
push
push
push
movb
cmp
add
in
pop
roll
addb
push
add
imul
jno
out
mov
inc
add
loope
mov
add
pop
xor
xchg
out
fidivl
pusha
add
cli
loop
add
add
add
movl
pop
popf
push
pop
movl
in
shll
jbe
int3
nop
adc
jnp
mov
inc
add
adc
mov
sub
or
cmc
movl
or
sbb
add
incl
cmp
mov
dec
fs
data16
add
cmp
ds
shrl
add
stos
gs
jnp
add
test
lds
sbb
pop
hlt
insb
push
and
or
add
add
add
imul
popa
add
add
jle
sbb
repnz
jl
pop
add
bound
jno
imul
add
jmp
xchg
add
sbb
add
xchg
std
lea
call
pop
mov
xchg
sub
js
cmp
push
addl
seta
hlt
pop
lods
sbb
add
add
add
add
add
dec
mov
stos
mov
add
add
cmp
add
push
rolb
rorb
mov
xchg
mov
les
imul
ret
sbb
iret
fxch
mov
repz
nop
clc
and
mov
add
stos
fwait
scas
lret
dec
xchg
in
mov
leave
call
jecxz
or
lods
test
fistpl
aaa
xor
add
push
lock
nop
mov
icebp
mov
mov
cmpsb
add
cmpsl
add
imul
add
push
cmpsb
add
add
add
inc
add
or
ret
push
addb
add
xchg
mov
add
add
addb
add
add
add
stos
popl
push
xchg
add
pushl
lret
add
movsb
add
add
add
inc
add
dec
xlat
dec
iret
add
lcall
adc
hlt
movnti
add
jmp
pop
lods
int
add
add
add
xchg
mov
adc
dec
inc
add
dec
mov
add
push
sub
mov
lcall
pop
mov
xchg
lds
add
pushl
sbb
mov
cmp
aas
imul
sbb
add
call
add
add
add
fmul
jl
arpl
mov
je
out
add
jmp
add
jge
dec
lock
add
mov
mov
mov
push
dec
inc
add
cmpsb
add
and
lods
jo
sub
popa
add
jmp
bound
xchg
push
movsl
add
mov
sbb
aas
cmpsb
add
add
xchg
lcall
incl
mov
pop
popa
add
in
sarl
push
push
add
xor
add
xchg
jno
mov
in
xchg
pop
inc
add
rcll
outsl
sti
out
adc
add
sub
mov
call
xchg
push
inc
add
add
ss
xchg
fidivs
mov
push
cmp
aas
pop
sub
daa
add
iret
int3
fsubrl
mov
dec
adc
fstl
in
nop
xor
fdivs
test
mov
add
ss
or
push
fdivrl
add
add
ds
movb
pushf
iret
aad
ds
xchg
js
sti
xor
fwait
xchg
out
mov
cmpsl
add
ficompl
push
mov
add
mov
cmp
movb
add
add
mov
fmuls
popa
add
add
movsb
add
pushl
enter
icebp
leave
shl
add
sub
dec
and
pop
mov
add
add
add
add
dec
mov
leave
repnz
pop
xchg
jmp
push
push
xor
add
push
add
inc
add
sub
pop
in
jbe
add
add
pop
pushf
push
outsl
cld
movl
decl
sub
mov
add
cmpsl
add
mov
add
adc
imul
mov
add
call
jecxz
lret
cmpsl
add
mull
sbb
pop
in
inc
add
add
stos
hlt
cld
ljmp
or
pop
lods
pushf
in
dec
sahf
mov
sub
dec
jne
fwait
pop
loopne
fwait
xchg
push
mov
cs
sub
dec
mov
ds
cltd
in
jno
imul
xlat
aam
mov
add
add
add
xchg
roll
add
inc
add
out
push
sti
and
xchg
jae
inc
add
dec
add
add
cmp
cltd
sbb
add
or
sbb
jge,pt
notl
lea
out
fidivs
add
add
leave
addl
rorb
mov
int
add
insb
fidivl
add
add
add
xor
cmp
inc
add
mov
add
and
inc
add
ret
add
jmp
ss
push
sub
inc
add
push
decl
xchg
bound
push
or
rolb
pop
mov
add
incl
add
movsl
add
faddl
ja
add
pop
add
scas
mov
or
add
test
add
add
xchg
mov
add
jecxz
imul
js
mov
jo
loopne
add
jmp
add
sub
es
or
mov
add
enter
add
xor
pop
mov
imul
xchg
outsl
mov
lea
xchg
mov
shll
add
and
xchg
dec
scas
sti
jnp
add
fwait
mov
lahf
mov
jmp
push
adc
push
add
pushl
inc
add
or
ret
add
call
jb
jge
div
mov
add
mov
in
movsb
add
in
into
dec
or
sbb
out
xchg
inc
add
addl
mov
incl
add
call
sbb
cmp
push
inc
add
add
add
insb
sub
jbe
repnz
add
icebp
pop
test
dec
or
xor
add
inc
add
add
push
and
repnz
jp
cmpsb
add
insb
cmp
add
add
into
jne
add
into
mov
aaa
push
ficoml
inc
add
sbb
iret
roll
pop
mov
call
arpl
aam
cmpsb
add
cltd
daa
add
and
outsb
fisubs
dec
pop
mov
jge
xor
sti
addb
pop
add
lcall
int3
pop
ret
add
push
xchg
sbb
pop
dec
in
or
add
incl
mov
jmp
sbb
push
add
jecxz
and
add
fcomp
xlat
sub
out
notl
push
enter
add
adc
sbb
add
add
sub
rolb
in
addl
add
icebp
outsl
mov
jg
add
pop
into
into
xchg
ret
add
inc
add
adc
add
adc
insb
jle
test
fidivs
popl
leave
adc
ds
in
sub
lcall
dec
dec
mov
add
or
in
movsb
add
add
out
sbb
and
push
pushf
in
mov
lock
lods
add
add
popf
jo
add
pushl
mov
fisttpl
pop
push
pop
push
mov
cli
cmp
int
add
outsl
lock
or
xchg
sbb
in
inc
add
add
lret
push
mov
ret
push
mov
adc
sub
xchg
pusha
add
shrl
mov
add
scas
ja
iret
ja
mov
mov
push
fldt
jns
scas
xchg
pop
or
add
push
add
lea
daa
add
add
add
fisubrs
icebp
mov
lods
imul
adc
in
mov
jne
mov
xchg
cmp
push
dec
push
jg
dec
in
ljmp
mov
xlat
nop
dec
or
mov
or
or
lock
push
repnz
mov
push
je
jbe
add
push
mov
scas
lahf
mov
add
testl
mov
adc
push
cmp
aad
dec
pop
call
popa
add
add
sbb
add
pop
add
add
lock
dec
pminub
scas
in
jp
pop
or
testl
std
add
jge
add
mov
adc
lods
pop
test
add
fwait
scas
filds
gs
aam
aas
cmc
cwtl
test
adc
or
rolb
lea
add
in
lcall
addl
pop
xchg
pushf
mov
cmc
in
jle
pushl
aaa
cmp
add
aam
cmp
jmp
xchg
out
push
aaa
add
mov
pushf
inc
add
add
in
inc
add
imul
popf
rolb
and
lods
cltd
data16
add
add
in
hlt
je
bnd
test
add
sbb
lret
fs
xchg
cmp
fs
add
dec
mov
mov
and
mov
int
cli
leave
shll
adc
fistpl
push
mov
loope
lea
pop
push
add
add
push
cmpsl
add
fisubs
xchg
xchg
fmul
aam
scas
popa
add
xchg
mov
test
push
rolb
loopne
jle
bnd
add
cmp
in
repz
jne
xchg
mov
inc
add
add
inc
add
fs
cmp
add
mov
add
dec
push
jl
aas
jnp
add
aaa
shlb
leave
outsl
add
jg
xor
enter
add
add
fisubl
add
add
lds
pop
mov
rolb
add
add
sbb
dec
or
push
add
scas
std
not
push
cmp
xlat
pop
outsl
pop
and
enter
rcrb
add
jb
add
or
and
dec
test
pop
pop
jns
cmp
ror
lahf
cmp
dec
cmpsl
add
push
jecxz
mov
fdivp
or
sbb
mov
mov
add
add
ljmp
add
add
add
cmpsl
add
data16
xchg
lret
add
jbe
push
xlat
sub
roll
insl
adc
mov
add
add
sbb
jg
jae
popf
xor
add
pop
lock
add
arpl
loopne
mov
lcall
add
add
cmp
sub
call
cmpsl
add
movb
jecxz
or
sub
int3
ja
and
push
stc
mov
sub
jns
xchg
in
icebp
pusha
add
lcall
add
pop
jae
stc
inc
add
dec
sbb
fbstp
xlat
int
add
in
add
mov
add
mov
add
jp
mov
inc
add
notl
fmuls
pop
mov
in
mov
add
add
mov
xor
or
daa
add
sti
popa
add
shll
mov
jmp
nop
or
pop
add
inc
add
adc
jle
std
gs
aaa
add
movl
add
ret
xchg
pop
ret
add
incb
decl
pop
add
add
lds
mov
add
add
add
lea
add
cs
add
lock
mov
lods
cmp
out
mov
mov
add
lods
and
lock
xchg
imul
xor
mov
cmpsb
add
sub
add
push
sub
mov
xchg
repnz
out
int3
sbb
and
inc
add
ja
add
and
inc
add
jl
add
ds
pop
cmp
pop
add
adc
les
xor
push
sub
inc
add
int3
jl
mov
in
movb
xchg
and
or
add
test
mov
add
jg
inc
add
ror
notb
inc
add
add
add
mov
iret
mov
jnp
sub
add
xor
or
sbb
cwtl
cmp
mov
add
push
add
aad
sbb
imul
add
fldl
mov
add
pusha
add
cmp
add
scas
cmp
add
add
cmpsb
add
lcall
jle
inc
add
loopne
mov
stos
cmp
outsl
or
lods
mov
add
add
jmp
pop
fwait
dec
or
adc
incl
add
pop
push
adc
int3
xor
add
inc
add
in
push
out
sbb
add
aad
imul
imul
add
mov
add
mov
mov
mov
inc
add
add
icebp
ss
lret
mov
jne
add
int
mov
add
mov
bound
ds
sbb
adc
cmp
sub
add
add
incl
int3
dec
sub
xlat
sub
add
add
shrl
mov
add
rolb
cmp
icebp
lods
aaa
xor
add
and
pop
movsb
add
add
inc
add
add
and
addb
roll
lds
addl
xor
add
call
movl
push
clc
sbb
in
shll
test
cld
fmul
mov
aaa
xor
add
outsl
pop
ficompl
mov
push
and
test
add
stc
push
add
mov
add
add
add
ljmp
icebp
sub
add
lock
pop
xchg
ljmp
pushf
or
outsb
lahf
mov
add
cmp
sub
xchg
add
mov
lds
ret
pop
int
data16
add
data16
jae
add
jmp
xchg
add
add
inc
add
shl
cmp
jnp
aaa
popf
testl
ss
add
incl
sub
stos
loope
mov
jbe
pop
movsl
add
mov
arpl
inc
add
daa
add
adc
add
sbb
jno
add
insl
add
add
jmp
out
sti
mov
arpl
shrb
in
cmp
addb
push
mov
ja
sub
push
push
mov
add
rolb
xor
mov
add
add
imul
movl
push
cmp
cmp
add
add
add
sbb
mov
roll
clc
mov
stc
sbb
stos
std
mov
add
inc
add
nop
cmp
mov
incl
add
popf
mov
jb
sub
add
inc
add
std
jne
inc
add
dec
movl
test
ficomps
roll
add
mov
sbb
mov
test
dec
fsts
add
ret
add
push
cmp
xchg
icebp
popa
add
add
ficompl
nop
add
ljmp
add
outsb
mov
addb
pushf
pushf
iret
fidivl
pop
push
insl
xchg
cmp
pusha
add
jg
cmp
mov
mov
jecxz
mul
add
mov
icebp
addl
pop
add
out
mov
add
add
add
adc
decl
add
fistl
add
sbb
add
add
jmp
add
add
int
icebp
inc
add
add
jmp
mov
pop
jne
add
jle
inc
add
push
jns
sti
loopne,pt
inc
add
aad
les
movsl
add
pop
stos
in
test
insb
jle
popa
add
cld
aaa
out
insb
rcll
insb
mov
stos
pop
dec
inc
add
add
add
sbb
scas
out
popf
mov
add
rolb
or
in
cmp
mov
popa
add
mov
sub
dec
mov
add
shrb
push
push
add
add
add
jle
mov
sub
imul
jb
add
push
add
pop
int3
mov
negb
pop
mov
outsl
cmpsb
add
add
sarb
roll
leave
cmp
movsl
add
lods
cltd
add
call
jo
pop
pop
and
xor
popf
inc
add
mov
in
cmpsb
add
cmp
add
cmp
fst
les
cmpsb
add
add
dec
lea
cld
cmc
addl
and
adc
inc
add
shll
add
mov
int3
data16
add
cli
dec
mov
mov
rolb
mov
sub
jle
push
mov
pop
in
aaa
sub
add
cmp
jl
jle
jae
jno
add
dec
fadds
cmc
add
add
add
