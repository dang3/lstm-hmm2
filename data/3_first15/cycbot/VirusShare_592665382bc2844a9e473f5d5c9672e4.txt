sub
or
mov
mov
add
inc
es
fwait
jmp
jbe
cwtl
cs
add
mov
xchg
pop
add
xor
mov
or
add
rorl
xchg
jnp
int3
xchg
sub
sbb
pop
or
mov
sbb
cmc
pop
rolb
ljmp
or
add
add
add
out
push
mov
lea
scas
daa
repnz
jmp
js
mov
xchg
jge
add
sub
loopne
out
pop
dec
bound
mov
add
push
sub
jnp
add
pushf
mov
jmp
rolb
stos
dec
addb
add
fisubrs
insb
add
mov
add
aas
add
add
mov
cmp
add
xorl
add
add
mov
jl
into
or
add
dec
adc
clc
xchg
and
mov
add
fdivrs
fisubl
xchg
hlt
add
in
jecxz
jb
in
mov
mov
bound
mov
mov
nop
add
adc
add
add
xor
dec
jmp
mov
sub
add
add
clc
add
addb
add
add
add
mov
stos
mov
imul
push
add
push
and
mov
iret
insl
loop
xchg
and
adc
mov
rolb
rolb
lea
xchg
mov
popf
cmp
cmp
mov
jg
or
or
sbb
add
cmc
pop
sbb
arpl
jl
xchg
push
mov
add
add
add
sbb
sbb
cmpsl
scas
insl
sbb
sbb
inc
add
call
fcoml
xchg
xor
das
in
fnsave
add
pop
outsl
pushf
adc
ror
rolb
stc
cmp
push
mov
mov
movb
in
adc
mov
data16
cmc
fisttpl
mov
add
mov
add
push
jle
sub
imul
out
mov
lea
loope
pop
push
or
add
lret
cmp
sub
mov
push
xor
aas
cli
adc
add
add
add
mov
pop
bound
mov
dec
cli
nop
add
rolb
int
add
rcrl
add
mov
and
inc
test
add
loop
je
add
mov
rolb
and
mov
add
outsb
xor
cmp
aas
jmp
cwtl
sbb
add
cmp
rcll
jae
jno
add
inc
add
fcomi
add
rcrl
ljmp
lret
dec
sub
jno
add
mov
sub
mov
out
addr16
pop
scas
mov
xor
mov
int
shrl
pop
aas
inc
test
lcall
mov
add
fsubl
repnz
sbb
add
push
cmpsb
add
pop
in
jbe
and
mov
mov
pop
push
adc
imul
push
add
ss
loop
dec
int
outsb
xor
movsb
add
inc
add
mov
mov
mov
mov
and
lods
lock
mov
testb
call
stc
mov
add
add
pop
or
sbb
fwait
test
xchg
add
jno
jg
cltd
mov
mov
jbe
rolb
fbld
push
add
inc
add
cmp
add
lock
add
add
out
in
addb
icebp
aaa
or
inc
add
jmp
scas
cmp
pop
cmc
xor
push
add
mov
out
movb
mov
xor
rolb
aad
es
jp
jns
dec
rolb
jae
add
pop
xor
cltd
in
out
out
add
mov
add
movb
int3
inc
add
orl
mov
mov
cli
push
add
add
add
cmp
into
sub
add
add
in
cmp
addr16
pop
jmp
add
mov
pop
js
mov
xchg
add
pop
add
mov
jmp
testl
lret
mov
xlat
ljmp
cwtl
push
add
stos
xor
lahf
pop
fdiv
mov
jnp
or
out
fstp
jno
pop
lahf
mov
icebp
jl
add
nop
add
rdpmc
rolb
cltd
add
mov
push
cmc
daa
mov
sub
int3
mov
lea
pop
jg
jno
std
xlat
push
add
iret
adc
add
pop
inc
add
jae
add
add
xor
xorl
add
add
roll
mov
add
add
pop
cwtl
push
add
lds
pusha
add
cmp
push
xchg
add
jbe
popf
jmp
int
fdivrs
cmp
in
jge
sbb
mov
mov
add
xlat
jo
or
mov
add
add
mov
pushf
sahf
cmp
pushf
cmp
xor
ja
mov
mov
sub
pop
sti
imul
mov
das
jecxz
aam
xor
cld
adc
mov
xchg
or
push
lods
jbe
test
fnstenv
hlt
add
add
adc
dec
mov
dec
incb
cmp
add
mov
pushf
stos
mov
add
add
push
add
dec
jno
add
test
insl
test
mov
add
or
add
cmpsl
adc
sub
and
mov
push
add
adc
lcall
add
sahf
shl
sbb
dec
orl
loopne
out
push
add
sub
mov
rolb
add
add
mov
adcl
sbb
mov
shr
cli
mov
sub
xchg
mov
jbe
xor
xor
subl
add
sub
inc
add
in
mov
testb
add
push
add
mov
daa
jmp
jecxz
add
dec
inc
push
add
popa
xchg
add
mov
outsb
lods
addb
cli
ss
add
add
popa
ficoml
add
add
popf
pusha
add
add
enter
add
dec
fisubs
mov
add
cmp
pop
xor
lods
jle
fldcw
mov
add
add
cmp
cmpsb
add
mov
clc
mov
mov
movsb
add
add
or
pop
pop
imul
add
add
mov
shll
mov
xchg
mov
add
push
ljmp
pop
data16
in
stos
mov
ljmp
and
pushf
or
int
push
nop
add
mov
stos
mov
add
bound
mov
mov
add
adc
fiaddl
add
jns
add
lea
imul
lahf
jb
rolb
mov
lahf
jge
mov
sub
mov
fsubr
cmp
push
push
cmc
fsubrl
lds
add
cmp
dec
je
iret
in
jne
leave
cmp
pop
out
je
xchg
mov
scas
in
outsb
jns
test
mov
sub
push
push
push
cld
call
sub
mov
cs
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
jmp
jmp
add
add
xor
add
mov
and
add
in
dec
lock
inc
add
xor
add
mov
add
jb
scas
pop
xchg
outsb
mov
lods
addb
xchg
add
and
mov
add
mov
pop
lea
dec
ror
dec
fsubrp
jp
push
imul
ljmp
xchg
or
add
push
into
and
mov
int
sbb
add
pop
lret
sub
push
add
add
test
add
loope
test
out
addr16
dec
adc
lock
fidivs
arpl
pusha
add
mov
mov
xlat
inc
xchg
into
rolb
lcall
or
add
sbb
jno
fucomip
xchg
push
add
sbbl
inc
add
icebp
rolb
or
cld
das
jo
xlat
push
add
movl
add
jp
or
cmpsb
add
ficomps
add
insb
ja
add
mov
arpl
add
mov
push
add
stos
mov
add
movsl
sbb
scas
or
adc
add
pop
or
add
fisttpl
add
xor
les
lods
jno
fbld
sbb
and
shll
pushf
ret
addr16
repnz
outsb
scas
xor
mov
sar
add
test
add
add
xchg
add
add
rolb
jnp
add
in
lods
in
sub
aam
iret
cltd
js
add
xor
inc
xor
mov
in
jl
add
mov
add
add
push
add
repz
fstp
mov
add
lea
adc
ret
add
sbb
add
jne
test
dec
icebp
pop
mov
xor
inc
add
add
sub
nop
add
ljmp
jbe
dec
push
add
mov
mov
add
or
add
adc
add
movb
add
into
xchg
add
add
add
xchg
xchg
jns
add
push
cmpsl
js
add
mov
jp
leave
add
cmpsl
mov
sbb
add
add
mov
add
int3
test
adc
or
add
sub
push
mov
and
hlt
add
dec
cmp
dec
jno
add
inc
push
add
mov
add
mov
cmp
xchg
in
mov
cli
sub
inc
add
add
popf
ret
in
push
and
sbb
aad
stos
lret
mov
add
add
pop
or
daa
fimuls
rolb
hlt
add
xchg
add
fcmovnu
push
dec
mov
test
je
shrl
push
add
jne
jo
add
mov
or
add
in
push
add
in
mov
dec
cmp
mov
icebp
inc
add
xchg
add
rolb
les
les
cmp
addb
mov
loope
sub
lea
movsb
add
or
xor
add
add
cmpsb
add
add
mov
mov
pop
aas
jb
inc
add
les
lods
jg
test
mov
out
mov
jno
xchg
add
jb
pop
push
mov
xor
scas
subl
ret
mov
fidivrl
push
add
add
add
mov
add
outsb
sbb
daa
sub
test
ljmp
jg
add
add
in
cmp
add
stos
lret
adc
movsl
jle
lret
add
out
mov
add
mov
add
ret
rolb
jne
mov
add
mov
loop
xchg
insl
lods
arpl
add
add
add
jl
stos
popa
cli
inc
arpl
ja
in
dec
pop
mov
movsl
movsl
ret
sub
addr16
ret
mov
aam
movsb
add
add
movsl
xchg
add
add
js
addr16
mov
mov
dec
nop
add
add
fstl
add
js
mov
ja
pop
ret
pop
negl
pop
xchg
or
dec
aaa
je
nop
add
add
xor
cwtl
add
mov
out
cmpsl
lods
jp
add
add
pop
push
add
rolb
das
std
mov
xchg
cmp
push
push
cwtl
xor
shl
rol
add
jo
jmp
cmpsl
mov
sbb
add
and
add
std
jo
add
mov
mov
nop
add
and
and
aaa
movl
add
fmul
in
inc
add
clc
xchg
xor
ds
sahf
outsl
loope
in
daa
outsb
add
test
mov
push
mov
mov
pushf
arpl
shrl
mov
mov
xor
add
leave
inc
add
add
mov
rolb
mov
test
jno
sbb
push
insl
enter
cwtl
rcl
and
mov
sub
add
add
cmp
add
ss
loopne
and
pop
out
xor
jb
movsl
add
mov
cmc
movsb
add
add
add
adc
ljmp
ss
aad
test
mov
xchg
mov
mov
cli
insb
sbb
movsl
fucom
add
add
fdivs
mov
mov
fisubs
jecxz
pop
rolb
add
movsl
or
push
das
mov
add
mov
add
add
add
add
adc
push
and
mov
test
adc
ljmp
push
push
or
enter
addr16
xchg
add
add
add
and
add
das
pop
incb
mov
adc
xchg
pop
pop
mov
add
adc
jb
xor
out
test
ds
inc
add
dec
je
mov
push
add
pop
sub
inc
xor
movb
imul
add
add
add
insb
mov
lods
or
inc
xchg
mov
add
add
outsl
into
mov
in
loopne
mov
in
add
add
add
add
andl
mov
rolb
mov
bound
mov
fwait
xchg
add
add
add
icebp
mov
sarl
mov
add
mov
add
xchg
or
clc
fucomip
icebp
inc
add
fsubl
sub
add
loope
cmpl
in
add
mov
stos
sub
add
int
push
lcall
movsb
add
add
rolb
cld
ja
bound
mov
xlat
pop
and
sub
sbb
add
les
add
aad
fsubl
push
add
lahf
inc
loope
add
and
add
mov
pop
dec
insl
mov
scas
bound
mov
add
cmp
mov
add
adc
add
add
adc
popa
dec
enter
mov
sti
adc
pushf
mov
or
cmp
add
push
add
add
xlat
mov
fwait
testb
popf
pop
dec
repz
sub
add
add
jmp
sub
add
fnstenv
add
popf
in
xor
push
aam
xor
add
dec
sub
dec
jle
add
fistl
jp
xchg
add
add
adc
push
lea
pop
mov
add
add
add
add
mov
movb
cmpsl
xor
rolb
call
mov
add
and
mov
add
add
mov
cli
or
bound
mov
std
ljmp
dec
and
sub
stos
add
add
addb
mov
xchg
xor
sbb
sub
out
add
add
add
dec
iret
movsb
add
add
mov
jmp
dec
xor
mov
movsb
add
sahf
adc
dec
sbbl
mov
push
rcll
stc
jae
add
inc
add
add
mov
add
mov
mov
add
mov
out
adcl
loop
jmp
test
sbb
and
add
mov
lcall
sar
stos
mov
push
test
mov
loopne
cmp
push
add
add
popf
enter
jae
add
enter
xchg
add
and
xor
repnz
add
adc
aam
dec
out
jge
sti
mov
add
cmpsl
icebp
inc
fbld
testb
dec
sub
add
jae
xchg
add
daa
push
addb
xlat
sbb
add
rcl
fldcw
sbb
xchg
push
push
fmul
fdivl
cmp
inc
add
insb
adc
add
ret
flds
add
adc
shll
add
mov
repz
jmp
add
mov
ja
popf
testb
in
sub
popa
cmp
cmp
push
insl
loopne
sbb
out
test
adc
mull
xchg
cmpsb
add
hlt
add
out
jecxz
and
mov
dec
and
add
testl
add
je
dec
xchg
inc
add
add
mov
addr16
add
push
roll
add
sub
inc
add
mov
fistps
inc
sarl
mov
movsb
add
ss
add
jl
ret
insl
dec
outsb
iret
mov
lea
cmp
out
cmp
add
dec
fndisi(8087
sahf
pop
and
mov
add
cmpsl
imul
cmp
add
add
pop
jnp
add
add
mov
fbld
jle
mov
add
xchg
mov
add
sbb
and
lret
popa
jns
imul
cwtl
dec
je
cmpsl
mov
fs
xor
adc
js
or
adc
int
aaa
fwait
push
hlt
add
add
mov
stos
sub
js
je
add
in
xchg
add
ja
mov
mov
mov
pop
add
jg
idivl
rolb
pusha
add
addr16
add
sub
adc
xor
or
mov
add
add
pop
cmc
insl
dec
xchg
roll
mov
add
pop
mov
out
inc
add
imul
push
add
sti
push
popf
cmpsb
add
adc
mov
mov
xchg
and
add
sub
xor
pop
add
mov
add
fcmovu
and
mov
add
add
repnz
insb
add
xor
or
data16
inc
adc
mov
cmp
jp
daa
cmc
jns
xchg
add
add
cmp
mov
add
xor
pop
sbb
js
add
daa
lea
mov
sub
cmpsl
xor
add
das
bound
mov
rcr
cmc
ds
add
dec
inc
pushf
jg
cmpsl
jns
add
pop
icebp
mov
xchg
xchg
add
dec
cli
inc
add
pop
and
addl
lcall
add
add
add
sarl
movsl
outsl
jge
data16
push
sbb
sub
xor
lea
dec
inc
add
add
push
jnp
add
pop
shll
add
add
nop
add
jmp
dec
xchg
cmc
xchg
add
add
lcall
cmp
adc
or
and
mov
add
add
jbe
outsl
out
push
scas
insl
scas
mov
add
xchg
aad
ss
lret
mov
add
dec
bound
mov
push
fdivl
sbbl
add
mov
jmp
es
rcrl
pop
popf
stos
adc
add
add
xor
out
ds
push
add
xchg
data16
jns
mov
mov
dec
mov
iret
xor
ret
push
add
mov
push
add
nop
add
add
movb
lea
add
loope
add
pop
and
mov
add
add
xor
sbb
mov
add
insb
repnz
add
add
xchg
sbb
inc
mov
cmp
push
add
mov
jne
cltd
adc
loope
movsb
add
in
aaa
bound
mov
jns
add
dec
in
dec
movb
add
add
add
lret
testb
popf
mov
call
leave
xor
xchg
pop
imul
andl
add
mov
add
mov
push
xchg
or
movsl
loopne
pop
stos
push
add
push
add
add
add
data16
add
rolb
add
loop
rolb
cs
cld
sbb
leave
add
out
and
mov
add
mov
pushf
fsubs
add
insl
pop
add
add
mov
and
mov
add
cltd
xchg
cmp
push
xchg
dec
or
add
jmp
add
add
pop
iret
repnz
popa
xchg
xchg
add
out
jl
add
sub
rolb
xor
mov
and
mov
add
add
add
popf
xchg
scas
cmpsb
add
das
sub
push
lcall
cmc
pop
or
or
fisubrs
kmovw
pop
pusha
add
push
add
add
in
outsl
fdivs
jge
loopne
xchg
lds
xchg
pop
jns
rolb
mov
push
inc
add
dec
jb
fsub
add
jno
inc
sahf
xlat
pusha
add
xchg
add
movsl
lds
add
add
mov
dec
hlt
add
add
add
add
daa
imul
add
add
fadds
enter
dec
mov
adc
add
mov
mov
in
data16
mov
test
enter
dec
dec
cmp
inc
add
add
jp
and
dec
shll
add
and
cmp
dec
hlt
add
or
sub
add
outsb
stos
ret
cmp
add
hlt
add
test
inc
xchg
add
push
cmc
add
add
mov
push
add
add
add
xchg
xor
jns
outsb
into
ret
outsl
or
ja
and
js
cli
mov
jl
inc
add
xchg
imul
pop
dec
lahf
jle
je
pop
in
inc
mov
mov
dec
clc
or
add
mov
add
adc
loope
adc
mov
jmp
sub
add
dec
xor
das
out
sbb
push
add
nop
add
add
sbb
scas
mov
add
sbb
scas
xchg
add
mov
out
xchg
add
inc
popa
clc
test
cmpsb
add
xor
std
imull
pop
imul
mov
add
mov
ja
loope
pop
sti
and
mov
jo
xor
mov
into
pop
cmp
insb
adc
lods
push
add
add
cs
or
add
inc
add
roll
cmp
add
pop
dec
outsl
mov
fmull
xor
pop
xor
rolb
int
add
and
or
xchg
fbld
mov
dec
loop
jp
push
add
push
add
nop
add
into
out
cld
jno
add
add
cmc
cmp
test
xor
jo
test
mov
xchg
add
mov
push
int3
jnp
push
add
mov
add
repz
cs
add
fnsave
add
mov
in
add
mov
add
add
add
out
add
sbb
ss
add
jle
mov
test
add
repz
sub
mov
js
add
add
outsb
mov
mov
sbb
rolb
les
fxch
outsb
sbb
sbb
lret
pop
cmc
hlt
add
add
push
add
add
addb
add
mov
mov
add
xchg
xchg
mov
push
add
add
mov
add
cmp
cld
popl
and
mov
xchg
add
jno
int
shrl
je
push
add
add
and
fwait
hlt
add
pop
enter
ret
outsb
add
mov
mov
mov
add
mov
add
push
add
jae
adc
push
into
lahf
sbb
cmp
inc
add
fstl
mov
lods
addr16
add
sbb
xchg
add
mov
add
add
add
add
mov
js
add
jg
add
clc
dec
xor
xor
adc
jo
push
sbb
popa
fcoml
popf
pop
xchg
shll
sbb
lcall
add
sub
hlt
add
test
les
xor
rolb
add
add
faddl
add
pop
inc
add
lods
test
add
push
add
add
sarl
add
mov
in
jg
sahf
test
add
add
shll
insb
rolb
mov
mov
cmpsb
add
nop
add
add
mov
cvtpi2ps
cli
mov
add
mov
mov
mov
add
mov
push
add
add
test
add
mov
cmc
rolb
jl
add
loope
add
and
mov
add
enter
je
sbb
ds
add
add
or
lods
dec
dec
adc
rolb
add
arpl
jg
add
sub
or
add
add
mov
dec
aaa
call
cmpsl
and
add
nop
add
xor
add
sti
cld
ficomps
int
mov
cmp
mov
fsubs
push
fmulp
sub
add
pop
mov
add
add
and
mov
add
adc
cltd
adc
fistpll
xor
out
rolb
push
add
sub
mov
add
add
enter
outsl
in
lahf
or
leave
mov
or
jmp
fwait
push
stos
bound
mov
cmp
add
add
add
sbb
xor
lcall
add
mov
push
or
out
fnstsw
repz
and
mov
add
push
cli
stos
je
mov
jo
push
add
xchg
add
add
mov
lds
rcr
iret
cmp
xchg
dec
sbbl
ror
mov
sbb
push
add
cmc
out
cmp
fadd
add
cmp
xchg
mov
mov
sub
add
xchg
add
dec
xchg
add
addb
add
or
aas
hlt
add
add
add
add
addb
jp
and
add
enter
add
add
pop
das
mov
loope
and
inc
iret
fstpt
jno
imul
pop
ja
loope
add
loopne
jbe
or
adc
add
inc
out
mov
iret
dec
and
mov
imul
add
mov
movsl
icebp
cmc
mov
add
mov
movsb
add
push
fstps
jne
ds
mov
lods
popf
or
loope
rolb
js
into
decl
aas
adc
add
mov
or
movsl
pop
pop
bound
mov
lea
pop
lock
or
dec
js
inc
add
adc
add
add
int
mov
sub
in
pop
xchg
add
push
add
dec
in
inc
add
inc
jg
add
add
add
mov
push
add
cwtl
inc
add
mov
les
pop
mov
xchg
loope
bound
mov
jb
imul
add
dec
add
xor
notl
testb
add
fldcw
adc
mov
movsb
add
aam
add
mov
data16
rolb
cmp
stc
testb
insb
fistpl
cmpsl
adc
hlt
add
call
mov
xchg
ror
into
std
aam
dec
loopne,pn
mov
add
cmp
jno
dec
rolb
sub
outsb
les
push
or
loop
inc
sub
add
or
call
push
int
add
add
sbb
mov
pop
cltd
outsl
pop
sub
test
bound
mov
sub
jo
arpl
add
loopne
mov
out
jecxz
add
addb
orl
cs
mov
mov
inc
add
xchg
mov
fabs
fwait
inc
add
pop
in
jl
add
mov
cmc
into
cmpsb
add
dec
movl
mov
mov
add
add
add
jns
add
mov
push
mov
nop
add
fwait
aaa
data16
push
add
add
add
add
fimuls
lods
rcll
add
stos
and
push
add
rolb
push
mov
or
push
add
lds
lds
mov
add
add
mov
push
push
repnz
add
mov
add
add
push
jl,pn
or
add
mov
jecxz
sub
in
int3
xlat
je
dec
addb
add
test
imul
jne
adc
and
mov
addr16
bound
mov
add
add
lods
jns
les
mov
add
mov
movb
mov
movsb
add
sub
jmp
mov
mov
popa
jo
pop
movsl
xor
pop
and
fwait
movsb
add
jecxz
add
addr16
dec
jae
mov
je
ret
mov
add
jo
cld
adc
cmp
add
add
test
or
ret
je
test
test
adc
loope
fsubrl
mov
in
cmp
mov
add
add
imul
add
xchg
movsl
pop
imul
addb
add
xor
and
mov
xor
loopne
data16
inc
add
mov
pop
cmp
pop
ds
in
pop
test
add
sti
js
add
add
xor
in
push
sub
add
lret
adc
mov
xchg
stos
loope
sub
sbb
xor
dec
add
add
out
add
add
push
adc
xorl
scas
add
mov
daa
cmp
add
ljmp
adc
mov
scas
icebp
adc
daa
pop
test
add
push
mov
xor
xchg
push
mov
xor
add
mov
add
sub
mov
dec
into
fidivrs
int3
cltd
ja
add
lds
add
push
testb
test
add
adc
or
inc
add
jmp
push
push
lret
js
aad
add
pop
jb
in
inc
add
fimuls
testl
in
add
frstor
and
mov
int3
roll
add
add
sub
stos
cmc
mov
fidivrs
mov
ret
add
add
shrl
dec
cmpsl
fstpl
dec
add
mov
add
add
add
add
jmp
addb
pop
jle
mov
in
add
mov
xlat
and
cmp
push
add
loopne
mov
mov
movb
cmp
pop
dec
or
aaa
pop
push
add
sbb
dec
outsl
mov
mov
mov
or
fstps
dec
xor
pavgw
add
pop
mov
fldenv
dec
adc
push
add
fmul
in
push
inc
add
lret
add
push
inc
std
call
fistps
add
adc
mov
add
add
push
sbb
ret
or
add
jp
fsubrp
xchg
add
add
add
add
sub
dec
repnz
enter
lock
adc
or
ret
inc
add
cmp
mov
jne
xor
fisttpll
cmp
add
ja
dec
aaa
shl
mov
mov
xor
stos
rcrl
rolb
dec
imul
jg
mov
sub
aad
loopne
repz
push
add
call
add
mov
push
add
outsl
js
xor
testb
shr
pop
xchg
aad
scas
and
mov
mov
sub
add
push
aad
pusha
add
leave
mov
out
add
aam
addb
clc
pop
jp
jp
add
add
movb
add
call
scas
cmp
add
add
cmp
add
les
out
inc
addb
rolb
adc
mov
inc
add
add
sbb
and
mov
jae
add
add
arpl
dec
outsl
in
outsb
jnp
inc
push
jecxz
shl
add
push
cwtl
cmp
sbb
add
mov
add
adc
sub
repnz
add
daa
add
mov
cmc
addb
movsl
and
call
add
stos
stos
int3
sbb
ds
inc
push
cmpsl
jmp
arpl
inc
add
add
arpl
add
add
sahf
lock
mov
jns
pop
movsb
add
add
mov
add
std
cmpsl
push
cmp
sbb
add
pop
iret
or
add
push
add
loop
mov
cltd
mov
cmp
add
jg
ficoms
mov
mov
cmp
push
add
in
sbb
push
add
mov
add
and
add
pop
mov
cmp
add
add
fcomp
sbb
and
add
mov
pop
mov
jbe
out
inc
lret
add
add
add
add
inc
add
loopne
lahf
std
in
add
cwtl
pop
out
add
xchg
xor
lods
push
add
xchg
add
cli
dec
mov
push
add
mov
push
pop
testb
pusha
add
bound
mov
lods
mov
in
cmc
dec
xor
xchg
scas
add
stos
imul
xor
sub
pop
mov
sbb
ja
pop
repnz
push
icebp
ja
or
lods
in
leave
fisttpl
ficoms
add
test
xchg
add
push
add
rolb
add
pop
jb
sub
fidivl
jmp
add
mov
lret
add
scas
mov
add
mov
jmp
icebp
add
sahf
dec
popf
xchg
inc
add
fnstenv
hlt
add
xchg
stos
mov
add
add
xchg
fcoms
mov
dec
sub
add
push
add
lahf
popf
rolb
repnz
pop
popf
dec
mov
mov
or
inc
add
add
mov
mov
jl
add
cmpsl
push
loope
outsl
and
mov
xchg
rolb
add
lret
add
mov
add
sub
scas
inc
add
mov
sub
fiadds
imul
push
mov
and
and
mov
jge
in
sti
jb
lods
push
jl
ja
add
add
xor
xchg
inc
add
mov
xchg
mov
add
add
add
add
add
pop
pop
mov
add
mov
xor
jg
iret
repz
mov
lods
pushf
xchg
add
das
sbb
ret
and
jb
pushf
sub
int3
jo
xchg
add
add
add
sbb
mov
out
orl
and
mov
imul
add
add
add
xchg
gs
add
sbb
push
add
ret
add
inc
je
add
outsb
out
dec
in
inc
add
adc
pop
add
cli
add
ljmp
add
dec
cmp
pop
and
mov
insl
mov
sub
add
add
pop
pop
or
add
call
add
cmp
add
pop
jne
out
xchg
add
dec
push
aas
inc
mov
add
outsb
mov
xchg
add
xchg
pop
mov
mov
cmc
or
add
add
mov
jb
stos
sbb
movsb
add
shl
jmp
sbb
popf
mov
rcll
aas
mov
cltd
or
sbb
sub
negl
pop
in
mov
inc
addr16
inc
add
add
mov
sbb
popf
jbe
call
aas
pop
pop
mov
add
sbb
fisubs
add
add
sub
dec
jbe
push
add
add
pop
xchg
add
sbb
jnp
add
jb
adc
mov
icebp
pop
xchg
sub
mov
add
lcall
in
lahf
xchg
mov
icebp
testb
enter
outsl
out
push
add
add
add
repz
ret
data16
mov
add
jmp
jecxz
add
xchg
add
xor
add
addr16
add
sub
addb
add
mov
ret
push
add
dec
mov
fcoms
add
push
add
inc
add
or
test
push
add
int3
shrl
add
pop
stc
pop
cmp
xchg
sub
inc
add
out
bound
mov
sub
add
cwtl
in
cmp
loopne
addb
push
add
loopne
add
in
adc
xchg
testb
add
push
repz
add
pusha
add
sti
xchg
add
inc
add
inc
shll
add
xor
add
add
add
pop
out
xor
xor
add
pop
pop
fcomps
fsubrs
pop
mov
mov
lock
mov
test
fucomip
lods
enter
aas
imul
xchg
std
iret
xor
testb
mov
pop
adc
rolb
lds
lds
rolb
add
xchg
xchg
pop
push
fwait
lahf
cmp
mov
add
add
jge
or
xchg
add
inc
and
aad
mov
jno
movsb
add
cmp
out
addr16
add
mov
and
mov
sbb
lods
mov
pop
push
add
add
xchg
jg
pushf
and
mov
les
daa
dec
xor
aad
add
sub
sbb
mov
stc
mov
pusha
add
fdiv
je
sbb
popa
sub
xchg
sub
mov
mov
pop
cmc
dec
and
mov
add
add
cli
mov
cmpsl
fistps
in
mov
cmp
add
lcall
xor
and
stos
nop
add
leave
xchg
in
andl
inc
shrl
adc
cmp
add
lcall
pop
dec
xor
mov
pop
sbb
mov
mov
test
pop
adc
lds
add
stos
sub
lcall
xor
mov
decb
out
inc
jne
sub
jb,pn
pop
lret
push
add
rolb
pop
or
sahf
js
xchg
pushf
ficoms
or
add
in
or
add
add
jl
dec
sti
add
add
rorl
jno
xchg
add
add
sbb
add
sub
add
cmpsb
add
mov
cmpsl
in
adc
mov
add
add
je
cmp
lds
fimuls
pop
lock
fwait
lret
jmp
xchg
mov
add
cs
inc
add
add
jno
pop
int
outsl
int
add
adc
inc
in
add
push
add
out
in
add
cmp
shl
add
add
lcall
add
add
sarl
popf
imul
dec
inc
insb
or
into
loop
pop
sbb
dec
jmp
or
or
testb
add
add
mov
fidivl
int
add
mov
or
pushf
push
daa
sub
dec
clc
loopne
ljmp
cmpsb
add
clc
pop
cli
push
jecxz
add
mov
add
lcall
sub
imul
mov
add
or
and
mov
stos
incl
and
sub
push
mov
addb
add
and
add
jb
pop
mov
loopne
mov
ret
inc
or
icebp
lods
daa
rolb
stos
add
mov
mov
add
in
inc
add
mov
xor
data16
add
and
mov
add
add
scas
insb
xchg
cwtl
ljmp
add
mov
push
xchg
mov
push
mov
pushf
mov
xor
add
icebp
ret
jo
push
mov
rorl
push
add
push
into
inc
pop
and
lcall
cs
mov
xchg
pop
pop
icebp
dec
iret
clc
mov
jg
cmpsb
add
in
iret
xor
and
mov
test
das
aad
add
mov
aas
sbb
xor
add
jnp
add
rolb
mov
xchg
adc
or
add
add
add
stc
movb
push
add
mov
pop
jecxz
pop
cs
data16
add
outsl
fstpt
mov
aas
aaa
inc
add
add
add
push
jl
add
pop
push
xchg
popf
pop
dec
or
outsb
jno
cmp
or
outsb
xor
push
add
add
add
scas
in
mov
add
add
or
cmp
mov
add
js
rcll
mov
add
notl
jp
mov
stc
test
mov
add
js
sbb
rolb
insb
sub
or
xor
push
hlt
add
pop
push
add
add
add
push
add
push
push
add
mov
sahf
and
adc
push
add
mov
and
add
adc
and
push
insl
cld
sbb
es
xchg
xchg
or
add
push
mov
add
jmp
dec
hlt
add
add
xlat
sti
sbb
test
fldt
dec
flds
das
mov
push
loopne
movsl
das
fnstenv
mov
add
add
mov
cmpsl
cmp
add
addb
add
test
add
sub
inc
add
cmp
dec
das
xchg
stos
sub
cltd
mov
daa
cld
test
lcall
jb
inc
loope
xchg
int
nop
add
imull
mov
pop
icebp
sar
mov
loope
scas
mov
mov
test
jb
mov
mov
xchg
add
add
fisubrl
lcall
mov
mov
stc
stos
inc
sbb
adc
xchg
mov
add
add
add
add
jmp
jecxz
add
mov
push
mov
push
add
push
adc
sti
xchg
add
rolb
add
loop
pop
and
mov
add
dec
gs
add
adc
in
dec
cmpsl
and
sbb
add
add
mov
outsb
orl
xchg
fcmovnu
add
mov
sbb
jmp
add
add
add
jbe
enter
add
add
add
xlat
sub
iret
js
add
adc
inc
add
cmp
and
add
lret
movsb
add
clc
add
mov
add
mov
mov
jge
add
or
add
add
int3
sbb
and
inc
add
add
add
lret
outsb
mov
sbb
dec
negl
inc
add
dec
add
fisttps
and
mov
mov
add
pop
push
out
ja
add
mov
push
add
mov
mov
mov
jl
test
push
xorl
mov
or
jmp
sub
ret
jmp
xor
jbe
or
cmpsb
add
mov
cmp
movsl
mov
lcall
add
repz
mov
jne
add
push
add
sub
add
xor
cmp
test
insb
leave
cmpsb
add
add
ds
add
cmp
add
lods
testb
movsb
add
fnsetpm(287
add
sub
test
add
push
add
cmp
or
add
scas
rolb
mov
mov
fldcw
ss
dec
jge
xchg
mov
int3
sub
add
rcll
lret
mov
add
ficomps
cmp
add
add
mov
add
add
rolb
outsl
jo
and
mov
leave
adc
mov
cwtl
sbb
mov
adc
mov
test
sbb
orl
addr16
mov
lret
pop
je
dec
xor
daa
push
add
add
addb
mov
and
mov
add
imul
push
jne
add
add
add
add
add
mov
add
mov
add
add
adc
fsubs
inc
mov
sbb
and
mov
add
add
fs
mov
jae
cltd
inc
divl
fidivs
xlat
cmp
mov
ds
mov
mov
adc
and
shrl
cwtl
inc
add
add
xor
bound
mov
add
add
sub
addb
pusha
add
cmc
test
data16
xchg
add
mov
stos
cs
pop
test
fs
add
add
movb
add
lea
jno
jp
arpl
cmp
idivl
add
lds
pop
dec
jb
sub
sbb
lock
add
js
ret
sbb
das
repnz
add
jae
add
add
sub
sbb
test
add
out
cwtl
fidivs
mov
add
mov
cwtl
xor
add
ljmp
add
lcall
dec
mov
add
mov
hlt
add
stc
lods
jmp
add
mov
adc
add
add
cli
mov
sub
aaa
adc
jno
lcall
push
mov
add
add
push
sbb
jb
mov
test
outsb
push
add
push
add
pop
jbe
push
add
add
test
mov
rolb
xor
mov
mov
add
mov
ljmp
add
add
add
mov
jecxz
popa
jmp
je
push
add
add
movsl
fwait
in
shr
adc
and
mov
and
mov
les
xchg
add
in
jnp
addb
jo
pop
test
mov
pushf
pop
lret
addr16
add
imul
push
dec
xor
xor
mov
stos
rolb
inc
pop
fwait
add
add
jo
pop
jl
sub
std
fmuls
mov
ja
or
mov
push
and
cwtl
and
jecxz
add
ja
add
add
bound
mov
push
mov
add
mov
cwtl
les
js
add
xlat
mov
pop
insl
rcrl
dec
xor
mov
add
mov
add
mov
addl
sahf
jo
loop
stos
cwtl
push
add
add
movb
cld
jge
xchg
add
add
dec
aaa
and
mov
add
push
jbe
push
add
je
sbb
add
pop
jecxz
add
add
movl
cmp
pop
mov
lea
aad
pop
dec
jnp
add
dec
mov
pop
xchg
lods
mov
pop
mov
mov
lret
test
or
push
add
adc
xor
mov
cs
add
dec
dec
outsl
int
add
add
ds
mov
push
in
out
js
fistpll
pop
jg
add
stos
jecxz
icebp
fucomip
pop
scas
stc
mov
pushl
add
sti
out
inc
xor
mov
add
leave
xchg
shll
lret
ss
push
add
dec
repnz
rolb
xor
add
mov
add
into
xchg
sub
pop
test
xchg
add
dec
scas
pushf
and
lods
decb
ljmp
add
mov
add
mov
aad
mov
pop
daa
roll
repnz
add
cmc
and
xchg
inc
push
add
gs
add
add
mov
push
add
sbb
add
out
bound
mov
cltd
setae
add
stos
inc
add
add
sbb
mov
and
add
data16
mov
xor
sub
inc
add
aad
add
cmp
imul
lock
mov
loop
pop
std
mov
incb
std
jmp
pop
dec
testl
addr16
icebp
adc
icebp
out
or
add
add
or
cli
cli
add
gs
aas
mov
add
fsubrs
imul
data16
insb
push
mov
add
pop
sub
cmpsl
cmp
loop
push
add
test
adc
cs
add
add
hlt
add
add
and
cmp
add
ja
add
jns
movb
ja
fmull
icebp
sbb
ljmp
cltd
out
andl
mov
add
cld
push
add
add
add
xchg
aam
mov
add
dec
in
add
sub
add
data16
add
add
add
rolb
and
dec
xor
pop
das
rcrl
test
dec
dec
fiaddl
test
or
daa
arpl
rolb
sbb
add
add
ljmp
adcl
and
mov
add
add
add
stos
pusha
add
add
addb
add
mov
mov
add
push
inc
add
xor
adc
mov
in
cmc
not
add
scas
add
add
arpl
sbb
inc
add
mov
or
add
add
add
push
cmpsl
pop
pop
xlat
jne
arpl
out
mov
in
xor
cmp
mov
mov
add
add
lahf
push
jae
add
mov
stos
addb
je
dec
out
and
dec
sti
add
in
dec
xchg
mov
add
insl
mov
xlat
xor
mov
ficoml
adc
fcmovnu
push
pop
jl
push
jmp
shll
movsl
or
mov
xchg
ret
push
loope
mov
sub
adc
into
rolb
mov
fwait
xchg
add
sub
xchg
push
add
addb
addb
add
je
and
aaa
xchg
add
add
or
in
push
outsl
jmp
push
imul
add
mov
add
add
jge
xlat
enter
dec
mov
add
mov
cmp
addl
pushf
insb
sbb
lea
add
stc
or
push
adc
leave
repz
add
add
stos
sub
cmp
xchg
cli
adc
jns
dec
testl
addb
daa
xor
in
sub
or
mov
add
negl
and
mov
call
add
mov
cmc
and
jmp
sbb
add
mov
cmp
imul
add
jmp
xlat
nop
add
bound
mov
jmp
lods
hlt
add
sbb
fwait
sbb
and
fwait
data16
lcall
dec
cld
push
add
movsb
add
add
pop
rolb
mov
and
xor
rolb
and
add
mov
test
add
inc
add
mov
dec
popf
adc
sub
pop
xor
popf
mov
add
test
cwtl
ljmp
inc
add
add
jecxz
iret
cld
lret
xor
mov
rcll
cmp
data16
add
dec
cmc
inc
pop
shll
jp
mov
inc
mov
push
testb
add
and
mov
mov
adc
dec
dec
mul
add
adc
mov
add
iret
pusha
add
faddl
jbe
lea
mov
or
pop
cmp
add
fucomip
pop
xchg
add
in
xchg
mov
pop
add
fcompl
jl
lea
test
fistpll
dec
mov
popl
add
add
xor
mov
test
add
xchg
sbb
xchg
int3
xchg
add
add
xor
in
mov
into
fsubs
push
aas
add
mov
push
aas
mov
add
lock
lods
iret
aaa
fwait
or
add
add
add
add
ljmp
xor
repnz
or
inc
push
add
clc
xlat
lods
movsb
add
faddl
add
add
xor
popf
or
mov
aam
inc
jg
jecxz
testb
outsl
movsb
add
add
or
pop
in
inc
add
dec
out
loope
or
sbb
imul
das
jae
add
shr
add
add
jo
mov
push
add
push
add
mov
add
enter
xor
out
into
clc
jmp
or
mov
add
inc
loope
add
add
ficoml
add
add
xchg
sbb
call
xchg
lock
inc
add
pop
lret
push
sub
in
out
mov
inc
pop
movb
add
lods
daa
or
adc
push
add
add
sahf
sarl
jg
add
test
mov
dec
cwtl
adc
outsl
push
add
add
add
lods
imul
mov
add
jne
add
and
mov
xchg
add
add
jp
fisttpll
mov
xchg
xchg
add
outsl
loope
add
add
mov
jb
push
add
add
sbbl
js
add
mov
jge
add
add
mov
dec
mov
out
repz
pop
repnz
add
arpl
shrl
pop
shll
add
add
icebp
rolb
pop
rolb
iret
mov
cmp
xor
add
add
add
fmuls
fxch
test
xor
mov
adc
add
add
loop
push
add
inc
cltd
cmp
ror
pop
jnp
add
or
add
add
and
mov
pop
xor
fdivrs
data16
add
dec
cmp
and
mov
mov
or
mov
lds
cltd
xor
movsl
push
mov
adc
add
pushf
pop
or
lods
arpl
add
fisubl
mov
iret
dec
cmp
add
insl
pop
inc
popa
inc
add
es
scas
dec
shll
mov
daa
jmp
jp
jl
pop
mov
add
arpl
pop
push
add
add
inc
add
add
lret
xor
ficomps
mov
add
divl
movsl
mov
outsb
icebp
push
add
mov
cli
jno
add
js
xor
notl
add
sahf
mov
jns
sbb
add
add
add
add
add
mov
add
lret
pop
int
jns
call
bound
mov
add
enter
add
add
pop
int3
jmp
int
add
add
add
out
mov
add
in
lods
mov
add
dec
mov
icebp
push
add
xor
testb
xchg
pushl
pusha
add
stc
dec
mov
cmpsb
add
add
hlt
add
enter
and
jno
add
stc
loope
ds
rcll
add
sbb
ljmp
cmp
out
sahf
rolb
addr16
push
add
loope
add
add
sbb
in
xchg
xchg
add
add
mov
mov
add
add
jg
jge
sub
scas
pop
and
add
add
add
add
aas
mov
add
add
and
mov
add
mov
add
pextrw
xor
hlt
add
add
add
adc
or
xchg
xchg
add
xor
jo
xor
add
test
cmp
movsb
add
movsb
add
add
add
add
xchg
add
push
or
rolb
cmp
arpl
daa
mov
mov
xor
add
setge
lock
xor
xchg
or
int
lock
das
decl
pop
popf
insb
out
rolb
mov
shll
add
and
mov
das
fwait
movsb
add
xlat
scas
xor
mov
aaa
rolb
add
ret
pop
dec
ds
testb
stos
mov
xor
sub
out
shrl
shrl
stos
call
outsb
inc
add
add
dec
inc
loopne
cmpsb
add
add
and
mov
add
add
inc
int3
xchg
inc
inc
add
add
leave
dec
cltd
in
scas
push
mov
js
adc
shll
fisubrs
rolb
inc
add
cmpsb
add
mov
mov
xchg
add
xor
mov
cmp
push
add
add
inc
add
add
push
sub
cmp
inc
add
add
and
imul
scas
inc
push
add
mov
add
testb
inc
imul
cwtl
call
mov
int
fstpl
aas
or
add
add
add
add
insb
adc
mov
fidivrs
mov
cltd
inc
enter
add
push
nop
add
jo
add
mov
add
push
add
add
add
mov
add
ror
movsb
add
adc
fwait
jb
cli
mov
arpl
push
add
pop
adcl
mov
inc
add
add
mov
push
xor
out
add
add
or
repnz
clc
or
pusha
add
or
add
adc
jge
outsl
mov
mov
jne
add
push
testb
xlat
or
inc
add
sbb
sub
inc
aaa
push
add
lods
nop
add
mov
xchg
loopne
loopne
xchg
jmp
fwait
pop
lcall
add
inc
add
hlt
add
sbb
sub
add
dec
xor
xchg
movsb
add
sti
data16
xor
sahf
cld
inc
roll
add
add
cmp
cmp
mov
loope
sub
jnp
add
movsb
add
add
mov
pop
nop
add
or
imul
cmp
mov
push
or
js
add
add
sarl
jmp
enter
movb
lds
loope
push
add
or
inc
cmc
pop
addb
lret
fiaddl
add
lea
bound
mov
repz
cld
add
xchg
add
jl
add
add
add
add
xchg
add
xchg
add
add
push
add
insl
dec
mov
ret
fs
test
cmc
add
clc
popa
mov
inc
pushf
inc
dec
shl
in
les
xchg
add
hlt
add
xchg
add
or
add
add
pop
test
and
add
mov
lret
in
sbb
lahf
fistps
mov
mov
mov
push
repnz
mov
leave
lahf
test
xchg
add
mov
iret
add
add
xchg
or
movsb
add
pop
xchg
sti
ds
add
mov
mov
lea
and
mov
push
jecxz
aas
sub
inc
outsl
mov
fdivs
xchg
add
add
cli
jne
insb
popf
call
jecxz
add
xchg
add
in
insb
sub
lret
rolb
sarl
loopne
dec
in
movsl
jnp
add
add
cmp
add
out
cmpsl
fcmovb
add
mov
jg
add
popf
or
add
data16
sbb
jle
insl
jle
xchg
add
pop
fmulp
cltd
xor
outsb
add
jge
add
mov
pop
sub
dec
pop
jecxz
add
int
pop
xchg
add
out
clc
xchg
scas
es
add
add
sub
lods
cld
aas
push
cwtl
add
push
jecxz
add
add
ret
cltd
cmp
pop
push
cmp
cmpsb
add
jmp
mov
or
add
add
mov
jecxz
movb
add
push
add
fwait
push
add
loopne
lcall
mov
add
add
stos
jmp
add
add
add
pusha
add
mov
jmp
arpl
and
rolb
xchg
repnz
or
add
addr16
inc
add
arpl
add
loope
testb
push
add
push
add
lds
int3
dec
fstps
add
adc
ja
popf
cmp
shll
enter
addr16
mov
cmpsl
jo
sbb
add
enter
pop
xor
call
addb
sbb
add
enter
adc
pop
inc
push
add
xor
push
hlt
add
mov
iret
pop
push
add
inc
add
add
add
mov
ret
inc
inc
and
mov
mov
shrl
mov
mov
clc
mov
rcr
lock
add
add
pusha
add
and
mov
test
pop
mov
iret
xor
scas
shll
add
into
mov
ja
mov
out
imul
push
sub
add
add
add
data16
add
cmp
add
add
add
inc
add
add
pop
rcr
pop
cmp
add
jo
pop
je
xor
push
lret
fldenv
mov
jnp
sbb
add
test
dec
lahf
mov
ds
lret
jno
or
add
lret
leave
mov
add
mov
dec
rolb
inc
cmp
mov
inc
imul
xchg
inc
lds
add
ret
xor
mov
add
mov
sub
add
addb
xchg
add
mov
cli
aam
cmp
stc
or
add
mov
add
xor
aas
jb
cmp
add
pop
ror
aad
add
dec
cmpl
add
or
rcrl
add
xlat
inc
add
sti
pop
cltd
xchg
std
ljmp
add
inc
add
bound
mov
popf
push
add
add
mov
or
add
out
sub
add
lods
int
push
fnstsw
lret
add
adc
add
add
cmp
or
fnstcw
add
pop
push
add
adc
lret
mov
movsb
add
xchg
mov
mov
fst
and
add
mov
mov
xor
inc
cmp
add
fnstcw
fstpl
add
ds
xor
jne
scas
or
jmp
jns
mov
add
push
add
add
mov
sti
jnp
imul
add
and
jbe
push
cmpsl
mov
aad
jg
mov
incb
pop
xor
xor
jae
add
add
xchg
mov
cld
mov
jo
mov
add
mov
lahf
hlt
add
inc
andl
add
mov
xor
inc
bound
mov
sbb
popa
add
xchg
fidivs
mov
xor
mov
push
jae
add
jne,pn
add
ret
xlat
inc
add
inc
sub
dec
in
testb
adc
cmp
add
or
and
mov
add
mov
imul
or
add
ljmp
mov
aad
lea
arpl
add
mov
dec
sbb
mov
add
sbb
add
arpl
and
call
rolb
movsl
jbe
dec
pop
and
add
xlat
mull
add
movsl
mov
mov
jbe
add
mov
sub
rolb
add
push
adc
outsb
loop
outsb
jbe
data16
inc
add
add
push
add
xor
push
add
dec
add
add
in
cmc
xor
pop
rolb
add
mov
add
add
xchg
push
add
add
es
add
push
sbb
push
add
mov
bound
mov
push
add
icebp
inc
add
xchg
sub
movsb
add
stos
std
xchg
icebp
out
sti
push
add
add
popa
lea
pop
xchg
pop
mov
dec
imul
xchg
dec
loopne
lret
lea
mov
xchg
mov
add
lea
add
mov
push
mov
test
test
xor
mov
mov
mov
addb
add
add
add
cmc
xchg
add
loop
push
pushf
xchg
add
mov
add
imul
popf
cmpsl
nop
add
aad
add
add
or
add
mov
xchg
push
jle
add
add
add
sbb
xor
and
mov
shrl
or
add
add
push
aaa
fcoms
cwtl
aas
dec
sub
sbb
ja
add
add
test
dec
enter
mov
xchg
aam
and
add
and
lds
ret
loop
movsl
fwait
jbe
and
mov
mov
xchg
jne
push
add
pop
sub
push
aas
ds
add
insb
test
xor
add
daa
push
add
xchg
add
add
lcall
cmp
pop
or
roll
add
mov
ret
add
add
mov
mov
hlt
add
fistps
dec
pop
fisttpll
add
test
mov
add
add
dec
cmp
fucomi
inc
sbb
pop
pop
loop
xchg
add
sub
mov
mov
fldcw
add
jno
incl
aaa
das
xor
add
add
rolb
sub
mov
add
dec
add
fcomp
mov
loope
insl
push
test
push
add
in
fimuls
mov
add
xchg
mov
add
add
ret
add
pop
mov
jbe
cmpsb
add
mov
imul
outsl
push
test
sbb
push
inc
push
repnz
mov
inc
add
add
js
into
addb
leave
mov
and
bound
mov
sub
sub
mov
lods
xchg
sbbl
add
mov
mov
or
scas
cld
ja
add
pop
insl
xchg
add
cli
xor
test
rolb
mov
cld
sub
pop
inc
iret
sub
fdivrl
mov
addb
daa
xchg
add
addb
and
mov
iret
movb
cmc
int3
xor
aam
fwait
push
cmp
add
sub
adc
add
jb
lods
xchg
dec
adc
pop
incl
cmp
sub
pusha
add
ja
sub
sbb
push
add
add
xchg
xchg
fldenv
stos
mov
icebp
cwtl
stos
add
mov
sbb
jecxz
add
add
pop
testb
stos
mov
dec
sub
sbb
aas
add
xor
mov
js
in
ljmp
jb
ljmp
sbb
cs
movb
mov
add
add
outsl
jecxz
loopne
xchg
scas
stc
sbb
add
orl
leave
sahf
ljmp
scas
enter
arpl
int
les
mov
add
dec
cmp
add
testl
and
push
sbb
insb
push
pop
call
xor
hlt
add
lret
pop
sub
add
or
inc
icebp
add
mov
rcll
ja
jbe
mov
jb
mov
pop
push
lcall
add
divl
sbb
inc
jnp
adc
add
mov
pop
push
add
outsb
insb
pop
xchg
rolb
jae
pop
lea
adc
add
sbb
xchg
rolb
cld
sub
add
movsb
add
mov
fbstp
frstor
add
xchg
pushf
movsl
out
icebp
cltd
pop
adc
add
sub
mov
add
pop
shrl
xchg
call
add
add
add
add
testb
pop
insl
stos
icebp
mov
fdecstp
add
inc
add
sbb
jmp
sub
or
sbb
in
add
rolb
cwtl
cli
jl
add
mov
add
push
sahf
cmp
add
test
push
mov
lods
push
add
outsl
sub
adc
add
inc
pop
cmpl
stos
pushf
add
inc
test
rolb
les
push
add
cmpsb
add
add
fnstenv
pop
incl
cli
cli
jg
add
add
sbb
popa
push
add
gs
sub
dec
addb
add
rcrl
xor
testb
add
dec
cwtl
mov
sbb
xor
pop
mov
in
repnz
rolb
mov
add
dec
in
incl
data16
imul
lahf
cmpsl
rolb
add
sub
xchg
add
inc
stos
push
add
aad
pop
sbb
ss
insb
inc
add
nop
add
cmp
xchg
add
push
add
dec
fmul
xchg
add
add
add
in
mov
mov
insl
cwtl
jg
add
leave
jl
add
xchg
popf
jmp
add
sub
xor
add
in
sbb
inc
xor
add
aaa
addb
pop
bound
mov
cld
rolb
cmp
cltd
mull
mov
add
push
add
push
add
pop
int3
sbb
outsl
insb
das
cld
in
xchg
out
test
aas
mov
aas
pop
inc
add
cld
int
dec
xor
mov
stos
cwtl
mov
rolb
sbb
mov
fwait
mov
add
add
add
jg
add
incl
add
sbb
addb
push
pop
out
jno
adc
sahf
add
mov
nop
add
cmp
dec
cmpsb
add
inc
or
ja
popf
pop
fidivrs
mov
add
test
adc
pop
popa
js
adc
jbe
sub
add
mov
mov
insb
jns
iret
inc
add
mov
into
scas
adc
or
fwait
outsl
push
adc
movsl
dec
add
add
add
add
xchg
add
sub
jne
sub
loope
fwait
cmp
mov
daa
js
add
sbbl
mov
push
je
jecxz
bound
mov
xlat
je
fsubrp
pop
hlt
add
add
add
aam
fildl
pop
mov
sub
add
push
sub
lret
fists
add
mov
add
add
popf
pop
pop
nop
add
jecxz
push
add
adc
les
sbb
int
mov
adc
xor
cwtl
aad
iret
lret
ja
xor
mov
add
add
mov
fidivrs
call
cwtl
rolb
push
add
add
addb
add
push
jl
add
mov
add
add
add
add
mov
inc
push
add
adc
add
add
cmp
fldl
jne
pop
out
enter
add
or
sahf
pop
inc
add
mov
add
movsl
xor
add
xor
add
add
add
push
add
lods
mov
addb
cltd
xchg
add
clc
arpl
test
fbstp
ret
and
mov
lcall
add
test
jmp
lods
les
add
mov
mov
add
xchg
pop
shl
sub
mov
in
inc
mov
movsb
add
add
aas
cs
mov
add
xchg
bound
mov
cmp
add
add
jae
sar
imul
add
xor
add
adc
loopne
cmpsb
add
pop
dec
xchg
pop
mov
mov
stc
fldl
fists
add
out
cwtl
fdivp
mov
add
stc
pushf
rcl
add
push
and
add
add
aas
mov
stos
mov
bound
mov
icebp
jno
iret
dec
bound
mov
dec
push
dec
jge
add
jb
dec
cmc
dec
xchg
xchg
pop
or
mov
fstl
or
fcmove
dec
cmpsb
add
add
adc
test
inc
add
mov
add
add
add
and
push
jns
scas
mov
jo
sub
gs
sbb
push
lods
ljmp
jnp
out
push
jmp
addb
add
add
add
and
mov
mov
ret
into
imul
dec
cmpsl
popf
dec
out
jp
or
into
jns
inc
add
fwait
loope
add
add
add
movsl
lea
outsl
int3
movsb
add
and
mov
xor
call
cmpsl
mov
mov
jne
push
fnstcw
popf
pop
aaa
and
and
aas
sub
scas
adc
add
mov
movsb
add
pop
inc
add
add
sub
add
dec
xchg
sub
loopne
nop
add
andl
arpl
mov
add
xor
or
addb
add
pop
addb
jg
loope
add
adc
jbe
dec
mov
mov
and
sub
add
mov
into
add
in
xchg
add
pop
push
addb
add
xchg
testb
test
add
jp
inc
add
paddusw
add
push
add
repnz
add
mov
lcall
mov
lock
popf
jp
add
add
je
xchg
cmp
jae
add
out
and
dec
or
add
push
add
pop
in
pop
cwtl
int3
lods
out
mov
mov
push
into
testb
pop
inc
add
lcall
into
repz
jns
add
add
add
stc
push
std
xchg
mov
icebp
inc
add
xlat
scas
icebp
test
push
jl
xchg
add
addb
addb
add
add
std
hlt
add
lds
add
inc
add
add
add
mov
and
in
fistpl
add
loop
xchg
int3
xchg
mov
add
stc
pop
es
sub
setg
pop
rorl
and
add
fwait
sub
sub
mov
pop
fldenv
mov
add
mov
imul
add
iret
dec
outsl
xchg
mov
add
inc
add
cmp
enter
loop
fstps
outsb
loope
sahf
cmp
add
add
inc
inc
push
jo
aam
cmpsb
add
add
mov
mov
lahf
fs
push
jge
jl
push
add
add
add
mov
xchg
add
sbb
pcmpgtb
fisubrs
xchg
clc
movb
dec
xor
mov
fcompl
pop
add
mov
loop
fdiv
xlat
mov
dec
sub
add
mov
int3
inc
add
xchg
add
add
stc
insl
aas
les
js
xchg
pop
xchg
push
sub
add
mov
test
inc
add
add
jne
add
loopne
jmp
add
gs
cmp
adc
inc
add
int
stc
push
add
and
fwait
or
scas
sub
mov
clc
cmp
add
mov
xchg
add
js
insl
daa
pusha
add
bound
mov
sub
movsb
add
adc
xchg
mov
jmp
add
add
fadds
xchg
bound
mov
clc
js
add
repnz
insb
sbb
xchg
stos
adc
adcl
dec
push
cld
cmpsl
daa
cli
scas
scas
xor
insl
lret
addb
add
push
add
daa
popa
mov
jno
lock
add
add
add
mov
mov
mov
addb
outsl
or
push
bound
mov
or
mov
repnz
add
mov
test
add
repz
cmpsl
xor
mov
pop
repz
mov
aad
add
daa
das
mov
push
add
dec
int
add
add
pminub
pop
mov
add
add
add
shll
insl
xchg
mov
push
add
add
out
addb
stos
push
aad
dec
in
movsl
mov
add
repnz
sti
icebp
cltd
mov
adc
dec
xor
repnz
jp
pop
push
mov
ret
aam
lret
mov
jmp
and
mov
mov
push
add
addr16
pop
pop
adc
pop
sub
aam
inc
add
cli
jno
call
add
add
jo
pop
stos
ret
xor
std
ret
xchg
inc
add
mov
mov
rep
xorl
add
jbe
ss
lret
rolb
int3
xchg
pushf
add
adc
add
mov
jnp
xlat
mov
xor
stc
stos
add
mov
scas
fbstp
int
movsl
stc
icebp
xlat
or
jmp
adc
add
add
add
shll
cwtl
push
add
add
cvtps2pi
loop
inc
add
data16
test
in
add
xchg
ret
dec
das
inc
mov
cmc
aad
pushf
adc
mov
add
pop
jnp
adc
cmp
mov
lods
rorl
xor
cs
cwtl
cmp
add
cmp
add
add
mov
add
mov
add
add
arpl
and
dec
ds
imull
outsl
sub
mov
int
scas
mov
add
and
mov
add
mov
sbb
adc
mov
adc
mov
sub
or
fxch
or
add
sbb
loope
mov
xlat
movsl
dec
add
mov
add
jb
les
cmc
xorl
adc
jmp
xchg
add
cmc
sbb
pop
add
mov
enter
and
loopne
inc
out
filds
out
inc
add
in
shll
add
fadds
push
add
add
add
mov
add
dec
int
or
add
mov
ljmp
sbb
pop
movsb
add
ret
jne
sbb
rolb
xchg
movsl
push
add
add
dec
fbld
cmp
add
adc
ret
test
fdivrl
add
ljmp
add
add
lea
fwait
loop
jle
stc
xchg
in
ret
adc
cmp
gs
lcall
fsts
pop
nop
add
insl
test
add
stc
jp
arpl
add
add
jo
rolb
sub
add
mov
pop
cmp
adc
fmul
les
push
add
sbb
jbe
loope
pushl
add
scas
pop
jns
push
add
rcrl
cmp
sub
adc
sub
push
add
mov
out
mov
cmp
add
fldcw
cmp
add
cmp
mov
jno
in
add
add
adc
insl
insl
aam
and
pop
iret
jno
add
add
add
xchg
xchg
movsb
add
add
add
add
add
mov
iret
int3
gs
lods
mov
inc
add
mov
add
in
rolb
mov
test
mov
add
xor
push
sbb
cmp
inc
add
std
cmp
push
aad
add
pop
mov
mov
ja
add
mov
push
add
add
ds
add
push
add
add
dec
fsubl
in
lret
add
outsb
das
and
mov
ljmp
jl
jnp
pop
xchg
add
push
add
ja
sub
scas
mov
test
arpl
cmpsl
addb
stos
fstpt
add
add
add
data16
add
int
insb
stos
clc
cmp
add
inc
add
jg
add
int3
dec
ja
jp
scas
sbb
add
in
sti
test
and
mov
add
and
imul
mov
fcmove
gs
cmp
lock
add
andl
stos
mov
add
add
xchg
test
sub
clc
pop
jle
cmp
add
add
and
mov
add
add
mov
mov
pop
xchg
add
lcall
add
jmp
ret
add
mov
das
adc
add
mov
inc
add
add
ret
movsl
cmp
add
mov
dec
les
sbb
add
xor
jae
add
jne
add
mov
and
mov
in
mov
inc
add
add
push
add
popa
aas
dec
xor
inc
add
add
add
fwait
jl
pop
cwtl
mov
add
dec
pop
pop
dec
inc
add
add
mov
add
clc
and
sbb
add
inc
loope
push
add
rolb
jo
into
outsl
jmp
dec
add
add
mov
lods
or
lahf
ldmxcsr
add
jmp
cmpsb
add
call
xchg
pusha
add
jg
add
ljmp
cmpsl
fsubrl
add
mov
add
dec
psubusb
jl
test
cmp
fsubrl
add
ret
test
sbb
add
clc
in
or
jmp
mov
call
add
mov
addr16
pop
lcall
jecxz
add
xor
cltd
addl
and
dec
mov
mov
lret
inc
cli
cltd
mov
je
mov
jp
cli
lds
iret
ja
add
int3
decl
mov
mov
add
add
add
addb
leave
sub
sbb
dec
jge
cmpsb
add
mov
addb
add
add
xchg
add
add
data16
mov
mov
dec
daa
stos
sub
int
pop
mov
add
adc
outsl
mov
lcall
rcrl
mov
add
ret
fwait
sub
cmpl
inc
cmp
mov
xorl
add
adc
insb
xor
cmp
imul
gs
cmp
test
mov
mov
mov
jo
xor
push
add
add
push
add
movb
add
xchg
adcl
add
add
adc
dec
insl
jmp
pop
pop
add
cmpl
jg
mov
das
enter
xor
add
xor
adc
add
dec
or
outsl
adc
mov
in
sbb
add
add
or
add
aaa
cmp
add
add
xlat
cmp
add
addb
add
test
scas
aad
xchg
or
insl
das
popf
pop
dec
jp
xlat
imul
lods
enter
adc
in
xlat
push
push
add
dec
popa
test
imul
cmp
rolb
mov
add
aas
add
add
jo
adc
add
jle
add
add
out
lret
xor
daa
dec
dec
scas
add
jno
dec
xchg
dec
inc
add
and
mov
mov
adc
cmpsl
inc
mov
add
sbb
add
sub
inc
add
ja
and
add
loope
loop
mov
xchg
aas
sub
jl
lret
mov
shll
pushf
inc
add
mov
loopne
jmp
std
popf
fsub
mov
mov
popf
dec
pop
iret
push
and
mov
xchg
lds
popf
out
lds
inc
cmpsl
sub
fcompl
dec
les
dec
pusha
add
adc
les
or
imul
movsb
add
movsb
add
fstps
je
mov
add
xchg
add
daa
inc
add
rolb
mov
add
jnp
inc
add
testb
fld
add
cmp
das
ret
cwtl
adc
in
iret
inc
add
into
mov
lahf
fnstsw
imul
xchg
add
nop
add
out
das
mov
pop
movsl
sub
pop
iret
sub
jecxz
add
xchg
lds
mov
add
stos
inc
add
add
lods
addb
add
fwait
sub
cmp
add
add
sti
popa
mov
test
vmaskmovdqu
add
add
add
aam
lods
rcll
fstpt
test
jb
push
add
pop
mov
add
mov
add
xchg
add
xor
decl
jo
dec
data16
sbb
add
dec
aad
add
add
pop
sub
adc
insb
aam
out
imul
lcall
add
pop
jmp
add
mov
aad
jl
add
in
push
jle
sbb
sub
add
sbb
jb
adc
jb
lock
add
and
and
mov
sub
lar
mov
xchg
add
add
add
idiv
cltd
sub
scas
xor
sbb
ficoml
add
repnz
sub
add
push
add
xor
dec
aas
sti
mov
xchg
add
add
pop
loopne
ficomps
dec
cmc
xchg
stos
dec
lahf
cli
dec
notl
xlat
in
lea
add
xchg
sub
mov
test
pusha
add
add
push
push
add
in
xchg
add
sbb
fwait
movl
sub
arpl
lcall
sbb
add
mov
addb
add
add
dec
push
cmp
or
pop
add
ret
push
in
test
addr16
add
mov
mov
and
mov
bound
mov
add
xor
push
add
add
add
int3
nop
add
pusha
add
xlat
movsb
add
fsts
add
add
bound
mov
pop
mov
pop
pop
test
mov
or
adc
sbb
aam
out
mov
xor
jne
add
mov
int
js
mov
in
add
cmp
popa
aam
add
add
orl
mov
add
pop
loop
ficoml
std
mov
mov
add
adc
rolb
into
stc
repz
add
jecxz
add
into
hlt
add
add
mov
push
add
cli
leave
clc
inc
add
inc
or
lock
test
sbbl
out
dec
mov
cmp
mov
add
fsts
jle
int3
pop
sbb
add
cmp
add
lods
movsb
add
xor
mov
add
add
arpl
add
mov
add
mov
add
leave
push
mov
add
xchg
mov
add
and
mov
pop
cmpsl
stos
ja
gs
add
cltd
in
cli
add
push
int3
insb
and
add
cmpsl
jns
add
xor
aaa
scas
sub
add
add
montmul
cmpsb
add
add
mov
add
punpcklwd
add
adc
inc
adc
jle
sub
cmp
add
add
add
or
mov
sbb
ds
pop
bound
mov
gs
int
movsl
in
aaa
aaa
movb
mov
cli
add
mov
ret
pop
sbb
dec
cltd
pcmpeqd
lock
push
add
iret
mov
sub
add
add
mov
xlat
mov
push
add
add
adc
insl
loop
cwtl
in
jg
cmpsl
in
mov
cmpsb
add
cmp
push
daa
mov
inc
add
add
popf
sub
add
mov
add
add
add
sub
cmpsl
push
add
xchg
adc
lock
xor
dec
enter
add
mov
xchg
add
jno
pusha
add
test
or
add
mov
cld
or
add
and
adc
cwtl
jl
cmpsl
inc
mov
add
add
and
mov
outsl
in
jl
xchg
add
and
add
std
inc
add
sbb
shll
out
jp
add
add
rolb
imul
push
xchg
inc
add
jle
rolb
and
dec
fs
jo
cs
xchg
add
add
jnp
out
sbb
outsb
add
inc
add
gs
dec
jnp
add
mov
ja
loope
ja
out
pop
cmp
mov
mov
insl
cmpsl
aam
and
mov
xor
lea
dec
mov
add
add
repnz
add
cmpsl
push
add
out
movb
add
inc
add
adc
add
add
repnz
add
add
add
nop
es
add
jmp
inc
push
mov
xchg
ret
add
les
hlt
add
xor
push
mov
xchg
ret
add
cltd
cltd
add
nop
es
add
lret
add
lret
lahf
pop
stc
nop
es
adc
push
add
lret
ja
addb
jmp
stc
nop
es
add
loopne
pop
add
stc
nop
es
add
add
stc
nop
es
add
add
mov
stc
nop
es
or
testb
xchg
or
mov
es
test
rcl
jae
jbe
or
cld
nop
jmp
add
movsl
add
or
or
nop
es
add
xor
popa
add
nop
es
pop
add
add
adc
aas
aam
add
or
add
mov
out
inc
add
es
test
movl
add
mov
add
notl
mov
stc
nop
es
add
add
add
jle
lock
mov
xchg
ret
lret
data16
in
idivl
nop
es
add
sbb
fs
add
nop
es
add
lret
aam
push
stc
nop
es
pop
add
add
xchg
add
nop
es
sti
sbb
add
push
add
fldl
jbe
stc
nop
es
sub
in
add
inc
add
inc
mov
jmp
add
popa
add
lods
add
add
nop
es
xchg
add
fimuls
test
nop
es
add
les
and
add
nop
es
add
xchg
or
xor
inc
xor
stc
nop
es
add
add
add
jb
add
jae
add
fisttpll
test
add
nop
es
add
add
add
stc
nop
es
add
add
es
add
addr16
xlat
inc
add
icebp
add
jno
sti
xor
or
nop
cld
nop
jmp
add
add
and
imul
xor
add
stc
nop
es
add
sti
jo
aad
pop
nop
cld
nop
jmp
inc
pop
pop
mov
push
lods
cmp
nop
cld
nop
jmp
push
lods
add
xchg
sub
out
in
and
nop
cld
nop
jmp
in
add
add
add
cmpl
call
add
nop
es
shrl
rcll
icebp
nop
cld
nop
jmp
cltd
or
xchg
cmp
nop
es
add
popl
sti
stc
nop
es
inc
add
mov
add
add
xor
pop
push
stc
nop
es
add
add
popa
filds
es
mov
stc
nop
es
add
repnz
inc
push
mov
xchg
ret
add
add
test
ret
add
add
stc
nop
es
sub
aam
add
mov
ss
nop
es
push
mov
add
add
clc
add
jg
nop
cld
nop
jmp
lret
push
mov
nop
cld
nop
jmp
push
add
add
adc
les
stc
nop
es
xchg
in
push
push
mov
xchg
ret
add
jb
xchg
mov
stos
pop
push
mov
xchg
ret
mov
dec
dec
outsl
pushl
push
mov
xchg
ret
xchg
add
fbld
jg
stc
nop
es
or
add
rorl
add
nop
es
xchg
add
adc
inc
add
nop
es
in
loop
add
add
es
addr16
add
or
movsl
addb
rolb
gs
es
add
xchg
add
lock
add
stc
nop
es
sti
add
add
xchg
sbb
shl
push
mov
xchg
ret
add
lods
add
pop
mov
stc
nop
es
loop
add
add
jle
dec
push
stc
nop
es
cld
add
roll
add
add
add
nop
es
sbb
stc
nop
es
sti
adc
lahf
cmpl
nop
cld
nop
jmp
icebp
add
add
add
jno
push
nop
cld
nop
jmp
add
outsb
inc
add
mov
cld
nop
jmp
sti
add
in
jl
adc
add
jne
push
mov
xchg
ret
dec
mov
add
push
nop
cld
nop
jmp
in
push
xchg
add
es
add
cmp
fists
stc
nop
es
add
in
push
add
hlt
add
sub
push
mov
xchg
ret
loop
jb
icebp
sub
and
add
stc
nop
es
rcll
cmp
mov
push
mov
xchg
ret
add
add
add
nop
jmp
xchg
add
mov
cmc
insl
pop
push
mov
xchg
ret
test
sbb
fsubs
add
cld
pop
push
mov
xchg
ret
test
add
push
push
mov
xchg
ret
push
or
xchg
xchg
pop
pop
dec
popa
stc
nop
es
add
es
add
add
xorb
pop
ja
ja
push
add
es
xchg
add
mov
cmp
add
push
nop
cld
nop
jmp
test
add
jp
addr16
push
add
stc
nop
es
add
or
loopne
data16
inc
push
mov
xchg
ret
add
add
movsl
or
jp
movl
repnz
add
pushw
nop
es
sub
add
xor
imul
nop
es
add
fadds
insb
call
stc
nop
es
test
add
push
push
mov
xchg
ret
aam
xchg
add
add
mov
mov
nop
cld
nop
jmp
inc
lods
cltd
jl
add
xor
push
mov
xchg
ret
fcomps
outsb
add
lret
mov
xchg
ret
add
addr16
add
rolb
dec
pushl
stc
nop
es
pop
in
add
adc
fisubl
jbe
stc
nop
es
add
adc
rolb
aam
in
add
mov
stc
nop
es
push
xchg
adc
add
test
nop
es
add
cmc
add
stc
nop
es
add
xchg
add
jae
add
add
sti
incl
adc
dec
add
cltd
jnp
jnp
add
stc
nop
es
add
fildll
add
push
stc
nop
es
xchg
mov
icebp
fwait
shl
stc
nop
es
add
or
test
push
add
add
add
nop
cld
nop
jmp
adc
add
add
add
pop
stc
nop
es
ja
test
in
or
pop
add
pop
add
stc
nop
es
in
mov
mov
stc
nop
es
add
aam
andl
nop
es
add
sti
sub
add
or
cld
nop
jmp
adc
jb
add
loopne
add
xchg
add
aad
pop
call
nop
cld
nop
jmp
les
jno
test
inc
std
mov
stc
nop
es
push
add
fsub
or
mov
es
add
lret
add
dec
push
xor
stc
nop
es
ja
loop
xchg
add
arpl
cld
nop
jmp
addr16
or
adc
mov
xor
inc
add
jae
add
nop
cld
nop
jmp
cld
add
add
cltd
repnz
nop
es
add
add
pusha
nop
cld
nop
jmp
add
push
add
enter
xchg
repz
add
loopne
icebp
sbb
xor
push
mov
xchg
ret
cltd
add
sub
mov
xchg
enter
stc
nop
es
add
divb
xchg
stos
ret
cmc
add
data16
in
add
clc
nop
cld
nop
jmp
fadds
jno
add
adc
add
pop
add
add
xchg
shll
add
es
sbb
cmp
outsb
xchg
sub
arpl
nop
es
add
sar
es
mov
lods
xchg
repz
sub
js
nop
cld
nop
jmp
lret
add
lret
lods
jno
movsb
add
pushl
nop
cld
nop
jmp
add
add
add
dec
add
nop
es
add
ja
mov
outsl
mov
stc
nop
es
lods
pop
adc
fstpt
stc
nop
es
sbb
pusha
add
jno
add
stc
nop
es
adc
add
or
push
mov
xchg
ret
add
add
sbb
add
stc
nop
es
adc
movsb
add
inc
add
add
mov
stc
nop
es
lods
pop
sub
add
add
nop
es
add
loopne
xchg
insl
mov
nop
cld
nop
jmp
add
mov
cmp
add
add
nop
es
add
adc
add
pushf
mov
stc
nop
es
jl
cmp
add
dec
rep
stc
nop
es
add
pop
add
dec
cmpsb
add
add
or
adc
nop
es
in
xchg
mov
inc
and
mov
mov
stc
nop
es
xchg
dec
add
nop
cld
nop
jmp
xchg
xchg
lds
es
stc
nop
es
icebp
push
pop
stc
nop
es
add
test
xchg
add
inc
add
nop
es
add
add
add
and
push
mov
xchg
ret
xchg
adc
fbstp
stc
nop
es
xchg
pop
add
dec
dec
nop
cld
nop
jmp
add
lret
sub
dec
shr
stc
nop
es
push
cld
icebp
loop
add
push
add
stc
nop
es
add
jp
xchg
icebp
sbb
jle
out
push
add
stc
nop
es
cltd
add
add
jb
dec
jae
xchg
sti
add
xchg
and
mov
add
nop
cld
nop
jmp
add
push
fwait
xor
stc
nop
es
fadds
add
pushf
push
mov
subl
inc
scas
add
add
xor
sbb
stc
nop
es
add
in
add
add
fimull
mov
push
nop
cld
nop
jmp
dec
or
popa
pop
sti
lds
add
stc
nop
es
mov
or
mov
in
xor
add
add
add
mov
jne
add
inc
add
push
or
nop
es
shll
add
add
nop
es
loopne
add
add
add
sar
nop
es
cmp
add
dec
push
lods
push
add
push
mov
xchg
ret
add
or
inc
add
push
add
lret
sbb
cld
nop
jmp
fdivs
dec
fdivrs
add
out
mov
stc
nop
es
cmp
mov
mov
push
mov
xchg
ret
add
add
fiaddl
inc
ljmp
xchg
add
sub
stc
nop
es
xchg
cltd
add
cltd
add
stos
nop
cld
nop
jmp
xchg
add
add
add
add
push
push
mov
xchg
ret
add
dec
andl
nop
jmp
add
add
jb
lea
scas
enter
jb
fadds
add
add
cwtl
mov
stc
nop
es
add
add
in
aas
mov
stc
nop
es
add
add
icebp
dec
pusha
push
mov
xchg
ret
add
adc
pop
mov
stc
nop
es
add
add
cltd
out
jbe
inc
add
push
mov
xchg
ret
loopne
loopne
or
add
add
push
nop
cld
nop
jmp
addr16
add
jae
add
nop
cld
nop
jmp
or
and
stc
nop
es
mov
push
cmp
inc
inc
add
nop
es
add
repnz
add
and
stc
nop
es
mov
add
nop
es
mov
add
in
mov
fsub
inc
add
cmp
loopne
push
pop
or
jmp
add
add
mov
dec
stos
push
mov
xchg
ret
lret
add
jno
test
inc
roll
movsl
cltd
cmp
nop
cld
nop
jmp
add
or
and
mov
iret
inc
add
es
add
cld
nop
jmp
inc
add
loop
lods
pop
in
push
add
jns
mov
adc
nop
es
add
xchg
add
shrl
es
jb
roll
movsl
add
mov
std
push
nop
cld
nop
jmp
or
add
icebp
mov
jne
stc
nop
es
icebp
add
rcl
add
repz
mov
xchg
ret
inc
xchg
add
adc
jle
push
mov
xchg
ret
aam
aam
es
mov
push
mov
xchg
ret
add
es
add
shll
shrl
jb
add
add
sbb
divb
mov
stc
nop
es
xchg
mov
push
insl
call
stc
nop
es
add
add
inc
mov
mov
xchg
ret
add
dec
add
adc
jb
add
or
jnp
repnz
cld
nop
jmp
add
xchg
cmc
xchg
add
lock
add
lock
add
es
in
mov
add
jmp
les
ja
inc
jb
pop
add
stc
nop
es
add
inc
add
scas
test
push
mov
xchg
ret
icebp
push
add
xchg
add
xor
xchg
aas
pusha
stc
nop
es
jae
or
add
add
xor
jl
inc
adc
nop
es
dec
dec
fdivr
dec
popa
mov
jb
jae
es
add
add
push
push
mov
xchg
ret
add
pop
cmc
or
mov
stc
nop
es
es
add
sti
add
ja
lods
mov
stc
nop
es
add
add
jmp
add
add
ficoms
cld
nop
jmp
sub
add
sbb
mov
push
stc
nop
es
add
add
lret
and
mov
xchg
ret
cmp
add
add
push
nop
cld
nop
jmp
add
mov
cmc
sub
in
add
cli
out
stos
into
push
lahf
add
push
sub
sbb
mov
stc
nop
es
fs
push
add
mov
sbb
fistpl
lahf
push
add
mov
add
stc
nop
es
filds
add
cmpl
nop
cld
nop
jmp
add
dec
add
and
adc
dec
pop
stc
nop
es
popa
cld
roll
add
add
pusha
push
mov
xchg
ret
cmc
add
xchg
add
or
nop
cld
nop
jmp
dec
add
mov
stc
nop
es
add
add
stc
call
pop
add
aam
dec
dec
pop
push
mov
add
lea
jle
int3
add
mov
testl
add
add
xchg
mov
mov
es
inc
add
add
add
nop
es
cmp
movsl
loopne
add
add
add
add
add
stc
nop
es
xchg
add
pop
and
mov
mov
xchg
ret
repnz
fdivrs
shr
stc
nop
es
add
add
add
pop
add
nop
cld
nop
jmp
add
add
add
push
mov
stc
nop
es
add
jb
add
dec
add
push
mov
xchg
ret
add
add
cmc
add
out
je
stc
nop
es
jno
dec
in
add
in
add
add
bound
repz
nop
cld
nop
jmp
add
add
lret
aam
ja
add
mov
xchg
ret
add
add
and
nop
es
add
mov
xchg
add
add
adc
add
add
xchg
fimuls
mov
xchg
ret
inc
add
add
xchg
add
stc
nop
es
sbb
add
fs
rolb
jo
bound
mov
add
ds
stc
nop
es
add
add
sarl
mov
call
stc
nop
es
add
add
add
stc
nop
es
add
fdivp
movsb
stc
nop
es
add
add
add
add
idiv
call
push
add
xchg
add
add
add
stc
nop
es
add
addr16
add
or
add
or
add
mov
add
stc
nop
es
add
add
push
mov
xchg
ret
in
add
inc
add
and
repz
add
xchg
sub
add
loop
stc
nop
es
sub
lods
xchg
loopne
movb
lea
push
mov
xchg
ret
add
sti
dec
ljmp
add
jae
jp
add
dec
not
push
mov
xchg
ret
mov
or
add
dec
sub
stc
nop
es
add
loop
lret
add
push
mov
xchg
ret
add
add
add
loopne
subl
push
mov
xchg
ret
adc
push
nop
cld
nop
jmp
icebp
add
mov
outsb
mov
fs
cltd
add
stc
nop
es
pop
push
dec
push
add
add
mov
stc
nop
es
cmc
add
add
add
pop
mov
stc
nop
es
add
cmp
jp
gs
xorl
stc
nop
es
inc
es
outsb
mov
nop
cld
nop
jmp
loop
cmp
and
push
mov
xchg
ret
in
lret
les
mov
add
stc
nop
es
add
adc
mov
cmp
ret
add
fs
mov
sub
push
jecxz
add
data16
roll
cmpsb
add
mov
stc
nop
es
add
icebp
add
jae
add
jle
add
sbb
add
divb
add
pushf
adc
add
nop
es
repnz
testb
and
push
mov
xchg
ret
aam
mov
enter
jb
add
sti
les
jl
add
stc
nop
es
add
add
pop
nop
cld
nop
jmp
cmp
cld
aam
cltd
cmp
add
nop
cld
nop
jmp
add
sti
sub
fs
push
stc
nop
es
pop
add
xchg
mov
stc
nop
es
filds
add
stc
nop
es
add
mov
data16
add
add
dec
stc
nop
es
add
add
test
add
nop
es
add
repnz
jg
les
cld
nop
jmp
add
add
add
mov
xchg
ret
add
add
dec
mov
add
jne
stc
nop
es
cltd
adc
mov
es
popa
dec
data16
pop
stc
nop
es
add
sub
sbb
nop
es
xchg
sub
imul
nop
cld
nop
jmp
add
lret
add
add
jnp
adc
nop
es
add
add
add
lds
test
push
mov
xchg
ret
pop
loop
movsl
jae
stc
mov
stc
nop
es
or
icebp
mov
ficoml
nop
es
xchg
add
adc
push
nop
cld
nop
jmp
add
add
popa
es
mov
mov
xchg
ret
add
xchg
adc
movsb
add
es
add
add
jl
cmc
ja
add
stc
nop
es
es
add
xchg
add
mov
add
stc
nop
es
add
lods
xchg
jmp
stc
nop
es
xchg
push
dec
mov
xchg
int
add
stc
nop
es
sub
add
mov
stc
nop
es
jno
push
movsl
mov
es
icebp
mov
add
sub
addb
push
mov
add
dec
add
add
xor
push
cmc
sub
nop
es
add
repnz
inc
mov
add
stc
nop
es
xchg
popa
add
add
stc
nop
es
jb
sti
add
adc
out
xchg
stc
nop
es
add
and
and
mov
cmpl
nop
cld
nop
jmp
cmp
add
sbbb
dec
ja
add
cld
add
int3
mov
stc
nop
es
fcoms
movsl
cmpsb
add
mov
stc
nop
es
add
add
loopne
cwtl
push
nop
cld
nop
jmp
test
sub
in
add
add
cmp
nop
cld
nop
jmp
add
add
add
fdivrp
nop
es
test
add
add
adc
push
ds
push
mov
xchg
ret
or
movsl
xchg
ffree
push
mov
xchg
ret
add
add
add
lea
mov
xchg
ret
cld
cld
fs
loop
out
add
addb
add
stc
nop
es
data16
lret
lret
mov
add
cld
nop
jmp
pop
add
dec
mov
nop
cld
nop
jmp
add
in
lods
pop
add
nop
jmp
jno
cltd
add
add
mov
add
pop
push
nop
cld
nop
jmp
add
cltd
in
xchg
add
inc
jp
fiadds
add
stc
nop
es
ja
add
fmull
nop
jmp
ja
add
addr16
jge
popa
stc
nop
es
add
add
loopne
testb
add
and
mov
mov
stc
nop
es
cld
add
mov
stc
nop
es
add
jp
add
in
mov
push
sldt
stc
nop
es
add
add
push
mov
xchg
ret
jae
add
or
dec
int3
mov
push
mov
xchg
ret
sub
lahf
mov
stc
nop
es
xchg
les
inc
enter
es
add
add
add
add
add
stc
nop
es
xchg
outsb
add
push
add
cld
jmp
stc
nop
es
add
add
add
movsb
stc
nop
es
xchg
lods
data16
add
cmp
nop
jmp
adc
lret
addr16
fdivr
nop
es
icebp
sbb
add
add
mov
es
test
cld
inc
es
inc
or
nop
es
add
add
cld
loop
test
nop
cld
nop
jmp
mov
icebp
xor
inc
add
jle
stc
nop
es
xchg
sbb
testb
add
xor
add
test
add
test
lock
nop
cld
nop
jmp
xchg
xchg
add
data16
mov
xor
pushf
push
stc
nop
es
add
popa
mov
add
call
stc
nop
es
test
add
add
mov
add
mov
add
es
pop
ja
cltd
adc
add
daa
bound
mov
cld
nop
jmp
push
add
addr16
add
stos
push
stc
nop
es
dec
aam
sbb
stc
nop
es
cltd
mov
add
stc
nop
es
sub
mov
add
enter
add
stc
nop
es
sub
aam
arpl
lea
push
mov
xchg
ret
add
mov
and
mov
pop
stc
nop
es
add
add
mov
stc
nop
es
add
push
add
and
mov
xchg
ret
add
mov
nop
cld
nop
jmp
in
sub
fistps
nop
es
push
add
add
loop
test
mov
stc
nop
es
add
in
loop
push
stc
nop
es
mov
add
mov
pusha
add
add
stc
nop
es
in
add
aad
sbb
nop
jmp
push
ja
xchg
add
add
sub
nop
es
add
inc
add
mov
js
nop
es
xchg
add
nop
cld
nop
jmp
add
push
testl
nop
cld
nop
jmp
add
mov
nop
es
mov
add
adc
cld
nop
jmp
add
es
test
add
and
push
mov
xchg
ret
jno
add
add
jne
nop
cld
nop
jmp
add
imulb
inc
sub
nop
es
mov
cmp
in
cmp
mov
xchg
ret
jl
pop
aam
add
mov
cs
add
or
add
mov
add
outsl
mov
stc
nop
es
sbb
into
xor
stc
nop
es
add
lods
in
add
push
mov
xchg
ret
add
nop
cld
nop
jmp
add
add
add
jb
filds
xchg
xchg
add
fisttpll
jb
push
es
lret
sbb
pusha
add
movsb
push
mov
xchg
ret
add
addr16
add
push
stc
nop
es
add
add
mov
stos
notl
pop
add
outsb
xchg
add
into
push
stc
nop
es
pop
add
add
pop
push
mov
xchg
ret
push
add
cltd
add
cltd
lret
in
jno
dec
je
add
add
add
add
add
add
stc
nop
es
add
repnz
add
js
test
cld
nop
jmp
add
add
add
nop
cld
nop
jmp
popa
outsb
or
fs
mov
add
cld
nop
jmp
sti
fs
add
addr16
loopne
add
nop
cld
nop
jmp
xchg
or
fiaddl
es
aam
or
cmp
sub
leave
roll
xchg
ret
jp
add
add
add
add
add
mov
stc
nop
es
or
lret
xchg
not
and
in
stc
nop
es
add
in
out
pop
nop
cld
nop
jmp
add
add
fmuls
cltd
sbb
xchg
std
ljmp
add
sti
pop
add
pop
add
outsl
roll
xchg
ret
lret
add
add
lret
rolb
pop
mov
push
mov
xchg
ret
filds
cmp
les
je
call
stc
nop
es
icebp
add
add
or
nop
es
add
popa
add
add
cmp
stc
nop
es
mov
add
xlat
dec
pop
stc
nop
es
add
add
add
add
loopne
stc
nop
es
popa
or
add
add
add
push
mov
xchg
ret
push
add
add
push
mov
xchg
ret
jp
add
add
push
push
push
mov
xchg
ret
add
add
mov
call
stc
nop
es
push
add
mov
and
stc
nop
es
add
sub
add
mov
cmp
ret
mov
add
push
stc
nop
es
add
cmp
push
jl
ja
mov
jbe
movmskps
nop
es
push
add
add
fs
jnp
pop
push
mov
xchg
ret
add
add
pop
stc
nop
es
mov
outsb
mov
add
addr16
add
nop
cld
nop
jmp
add
test
mov
pop
push
mov
xchg
ret
add
xchg
add
add
cld
into
inc
add
xchg
add
call
push
mov
xchg
ret
xchg
data16
push
stc
nop
es
jno
roll
test
add
int
stc
nop
es
aam
cmp
sbb
in
pop
mov
stc
nop
es
xchg
add
jl
add
add
test
nop
cld
nop
jmp
jp
xchg
add
call
stc
nop
es
add
mov
mov
stc
nop
es
add
cltd
add
add
and
stc
nop
es
add
add
cltd
adc
push
fadds
xchg
ret
add
cmp
dec
test
add
stc
nop
es
add
add
add
add
mov
stc
nop
es
add
add
add
stc
nop
es
cmc
add
leave
push
push
mov
xchg
ret
add
test
add
stc
nop
es
add
mov
add
stc
nop
es
jno
xchg
add
add
popl
stc
nop
es
sti
mov
pop
filds
insl
add
stc
nop
es
add
xchg
add
pusha
add
stc
nop
es
dec
ja
mov
mov
nop
cld
nop
jmp
movsl
popa
push
jg
inc
and
nop
es
cld
filds
add
add
inc
add
push
add
jb
mov
ja
mov
add
adc
es
sti
add
mov
add
nop
es
aam
in
add
loop
mov
es
cltd
jp
jp
sub
cwtl
je
stc
nop
es
or
jp
add
push
mov
xchg
ret
repnz
sub
jne
push
mov
xchg
ret
add
add
test
add
inc
stc
nop
es
xchg
mov
adc
push
mov
xchg
ret
dec
add
add
test
jb
pop
push
test
add
add
arpl
ror
mov
stc
nop
es
sub
addr16
pop
pusha
push
mov
xchg
ret
outsb
add
add
addr16
jno
mov
stc
nop
es
add
push
daa
mov
jb
cmp
add
rep
stc
nop
es
ja
lret
add
jmp
jb
in
add
test
popf
push
mov
xchg
ret
push
xchg
add
mov
push
addb
sbb
nop
es
add
or
cmc
add
or
nop
es
pop
cltd
add
add
pop
stc
nop
es
add
fdivrs
add
cmp
popa
add
mov
xchg
ret
fists
jno
add
xorl
nop
es
loopne
add
sbb
add
pop
push
mov
xchg
ret
add
add
mov
mov
enter
add
add
add
add
in
dec
cmp
es
movsl
loopne
add
push
stc
nop
es
add
mov
add
add
stc
nop
es
dec
inc
sti
add
cld
nop
jmp
in
cmp
or
add
jb
out
jl
stc
nop
es
sarl
mov
stc
nop
es
pop
cmp
add
sbb
stc
nop
es
sub
mov
nop
cld
nop
jmp
add
xchg
add
add
push
push
mov
xchg
ret
popa
add
add
repz
jb
add
aam
add
dec
dec
add
stc
nop
es
in
or
add
mov
testb
shr
stc
nop
es
add
add
or
std
mov
stc
nop
es
ja
adc
jne
stc
nop
es
add
jne
nop
cld
nop
jmp
pop
add
movsl
inc
add
cmp
inc
sbb
nop
es
jp
add
add
mov
sub
test
jmp
call
loop
push
cld
sti
loop
add
stc
nop
es
add
sbb
popa
jno
xchg
mov
je
nop
cld
nop
jmp
mov
push
push
mov
xchg
ret
add
mov
add
cmp
jmp
fldl
xchg
ret
add
add
cld
pop
cmp
nop
cld
nop
jmp
ja
sub
shll
stc
imul
stc
nop
es
dec
ja
add
inc
stc
nop
es
add
add
add
add
movb
add
add
add
push
mov
xchg
ret
add
add
add
xor
xor
add
stc
nop
es
add
pop
cmp
movsb
stc
nop
es
add
add
cmp
push
mov
xchg
ret
add
rcrl
add
test
add
nop
cld
nop
jmp
cmc
cmp
push
in
push
push
mov
xchg
ret
add
xchg
add
in
push
add
xchg
pop
fs
repnz
je
nop
cld
nop
jmp
add
in
test
jge
nop
cld
nop
jmp
add
add
add
shll
repnz
call
idiv
ljmp
and
or
repz
nop
es
add
add
add
scas
nop
push
mov
xchg
ret
add
add
inc
add
stc
nop
es
lret
add
xchg
stc
nop
es
mov
pop
push
sub
stc
nop
es
add
or
fadds
ror
add
stc
nop
es
add
xchg
in
fsubrl
rcll
aad
add
adc
add
and
mov
xchg
repz
stc
nop
es
adc
cmp
add
mov
nop
cld
nop
jmp
repnz
sbb
xor
add
stc
nop
es
or
pfcmpge
es
add
xor
lea
push
mov
xchg
ret
add
add
add
add
dec
mov
nop
cld
nop
jmp
add
jno
sbb
test
stc
nop
es
data16
decl
push
mov
xchg
ret
jb
cmc
sub
mov
stc
nop
es
add
add
jae
mov
nop
cld
nop
jmp
cmp
add
pop
lret
add
push
push
mov
xchg
ret
cmp
fs
add
stc
nop
es
jae
jp
add
in
movsl
out
lea
stc
nop
es
xchg
filds
test
push
test
add
stc
nop
es
sti
fs
add
lods
stc
nop
es
cmc
add
add
add
pop
pop
jne
nop
cld
nop
jmp
imulb
add
add
lods
stc
nop
es
add
push
jl
add
add
add
nop
es
push
sti
sti
aam
mov
stc
nop
es
xchg
add
stc
nop
es
sub
test
adc
lods
sub
stc
nop
es
add
fisttps
es
add
mov
push
mov
xchg
ret
jp
add
cmc
loope
call
stc
nop
es
add
les
nop
es
add
roll
add
nop
es
pop
add
xchg
in
mov
push
mov
xchg
ret
add
mov
idiv
scas
add
stc
nop
es
add
add
mov
dec
push
mov
xchg
ret
jl
add
add
mov
add
stc
nop
es
test
add
movsl
filds
loop
add
nop
cld
nop
jmp
add
add
add
push
mov
and
adc
fs
add
call
stc
nop
es
aam
add
rolb
push
add
cmp
inc
add
loop
add
out
rep
push
mov
xchg
ret
add
add
add
cld
nop
jmp
ja
mov
movsl
add
sub
stc
nop
es
in
sti
dec
xchg
dec
adc
sbb
fistl
repz
add
cld
add
add
pop
lea
nop
cld
nop
jmp
cld
icebp
cmp
add
mov
loop
add
dec
test
xchg
add
fmuls
es
cmp
icebp
icebp
add
and
mov
cli
add
lret
add
add
push
add
mov
xchg
ret
dec
add
fcomip
sub
stc
nop
es
loop
add
jno
int3
call
stc
nop
es
xchg
add
xchg
imull
jno
stc
nop
es
xchg
cmp
or
loopne
add
mov
add
lea
nop
cld
nop
jmp
les
add
dec
or
xchg
push
mov
xchg
ret
add
add
outsb
mov
clc
stc
nop
es
test
cmp
pop
add
mov
movb
add
nop
es
add
stc
nop
es
sub
mov
and
nop
cld
nop
jmp
in
sti
ja
popa
add
pop
inc
stc
nop
es
cmp
add
add
lods
push
jnp
testb
cmp
ret
add
add
dec
or
es
mov
add
test
add
rep
stc
nop
es
roll
ja
ja
add
push
mov
xchg
ret
add
fs
dec
add
pop
add
push
mov
xchg
ret
repnz
add
les
stc
nop
es
add
add
and
out
adc
mov
xchg
ret
add
add
add
stc
nop
es
add
add
roll
add
iret
or
inc
add
xchg
or
add
movl
xor
jb
cltd
add
es
or
nop
cld
nop
jmp
cmp
add
add
add
mov
repz
add
jb
add
add
or
mov
xchg
ret
add
add
lahf
mov
stc
nop
es
add
ja
or
push
add
shll
ret
push
mov
xchg
ret
add
sub
add
jne
stc
nop
es
adc
lret
stc
nop
es
add
or
nop
es
add
add
sbb
mov
xchg
ret
push
lods
roll
loop
sbb
aam
cmc
mov
nop
jmp
dec
add
add
mov
jle
stc
nop
es
xchg
add
add
fistps
push
push
mov
xchg
ret
jno
inc
inc
add
mov
push
mov
xchg
ret
dec
popa
jl
ja
call
jb
pop
add
xchg
add
xchg
push
adc
xor
je
jbe
mov
call
cli
ljmp
push
stc
nop
es
pop
push
add
mov
inc
add
sbbl
cmp
incl
xchg
xchg
add
dec
mov
dec
push
push
mov
xchg
ret
pop
xchg
jno
add
add
sub
imul
and
add
sbb
push
stc
nop
es
or
add
mov
xchg
out
and
nop
cld
nop
jmp
add
jl
add
sbb
es
mov
add
mov
push
add
mov
stc
nop
es
icebp
add
mov
ret
jns
imul
nop
jmp
add
add
test
add
add
add
push
add
nop
es
divb
popa
stc
nop
es
add
add
mov
jbe
stc
nop
es
add
popa
in
add
pop
stc
nop
es
add
adc
cmp
jo
nop
cld
nop
jmp
testb
cmc
movsl
xchg
add
stc
nop
es
add
lea
arpl
inc
add
add
add
scas
jmp
stc
nop
es
popa
xchg
sbb
pop
push
mov
clc
aad
pop
mov
and
add
add
out
out
imul
add
addb
jb
or
add
fisubrl
jae
in
ror
mov
add
cmp
rolb
divl
les
sbb
xor
mov
xor
cwtl
cwtl
addr16
addr16
out
sub
add
cmpsb
add
add
add
xchg
inc
add
rolb
sbb
and
inc
xchg
shrl
int
add
ret
js
scas
mov
mov
fnstsw
jge
mov
and
mov
add
add
and
lock
inc
add
pop
push
add
add
add
lret
add
add
add
add
mov
add
cmp
mov
add
rolb
fs
add
cli
stos
cs
jae
pop
cmp
add
cmp
add
sbb
je
dec
adc
fiaddl
js
add
popf
mov
jne
add
xchg
xchg
add
xchg
jp
pop
dec
push
test
ds
push
rolb
mov
ds
les
iret
punpckhwd
xor
sub
fstl
stc
pop
add
or
flds
test
data16
dec
pop
pop
out
xor
and
mov
mov
out
push
add
xchg
add
lea
pop
mov
sub
xlat
push
clc
cmpsl
notl
add
add
pusha
add
add
and
push
jno
std
testb
mov
or
add
ret
lret
add
push
mov
add
xchg
push
add
add
jmp
ficoms
push
mov
outsl
ret
add
add
in
xor
mov
add
add
outsl
out
or
lods
xor
add
and
add
das
mov
add
addb
sub
push
daa
push
add
add
jp
add
add
adc
inc
cmp
mov
jle
lret
lret
je
rolb
das
mov
jle
add
jp
add
cmpsl
ja
add
add
in
sbb
add
add
add
fwait
pop
daa
mov
lahf
mov
sbb
add
scas
loope
icebp
das
xor
popf
ret
add
add
ret
add
inc
mov
in
pop
add
jns
add
lea
add
sub
adc
xchg
mov
imul
aas
and
mov
add
iret
lahf
lods
mov
add
add
add
data16
and
add
adcl
loope
addb
mov
div
pop
scas
mov
insl
and
addb
push
divl
rcrl
lods
mov
lcall
arpl
and
mov
test
mov
lock
jmp
add
push
jp
mov
lods
jno
add
add
lock
mov
cmpsl
xchg
add
lea
mov
add
add
mov
or
or
in
sbb
test
aaa
jae
pusha
add
cmpsl
jns
pop
testb
and
rcrl
push
add
add
testb
pop
mov
mov
fcmovnu
mov
push
add
mov
into
out
xchg
in
pop
les
pop
imul
add
adc
inc
out
lock
dec
mov
mov
cmp
add
adc
daa
lahf
push
add
mov
stc
and
mov
add
mov
sbb
test
add
mov
sbb
rcrl
faddl
cwtl
mov
loopne
inc
add
lea
mov
add
pop
imul
add
xchg
mov
mov
out
sub
testb
add
add
add
mov
add
in
insb
fbstp
sbb
add
mov
sub
incl
mov
xor
mov
add
hlt
add
pop
incb
mov
xchg
lock
test
add
add
add
add
mov
add
add
add
outsb
and
mov
sub
xlat
stc
dec
mov
add
jl
ret
add
add
add
testb
cld
cmp
lret
xchg
add
mov
sbb
add
aas
repnz
add
add
pusha
add
insb
add
mov
add
jp
add
psllw
mov
dec
jecxz
add
jg
aas
xchg
addb
rolb
xor
xor
or
ljmp
cmp
lock
mov
ret
scas
xchg
out
cmpsl
das
sahf
cld
int3
xchg
add
and
inc
js
testb
push
sbb
sub
or
add
dec
loopne
add
mov
in
or
add
jecxz
adc
jno,pn
add
add
aam
jmp
adc
testb
repnz
add
add
add
dec
in
add
xor
ljmp
loopne
xor
out
push
aam
dec
sub
mov
inc
add
add
in
test
push
add
add
popa
std
addb
cmp
and
aam
faddl
adc
cltd
inc
add
jl
push
add
data16
insb
sbb
addl
add
bound
mov
sub
add
mov
sbb
add
insb
loop
mov
rcll
xor
add
add
add
ljmp
add
mov
sub
xor
ficoml
sub
iret
cmp
test
add
jmp
mov
andl
dec
lods
mov
xchg
dec
rolb
mov
bswap
xchg
add
pop
test
push
push
add
addb
jns
add
add
mov
idivl
insb
cmp
add
adc
arpl
sahf
mov
outsb
sub
jl
add
or
pop
cmp
add
shrl
mov
mov
dec
mov
cmc
adcl
add
add
popf
ds
add
loopne
adc
xor
dec
push
add
lock
lds
rolb
cmp
lcall
dec
sti
cmpsb
add
scas
push
ljmp
add
out
mov
shl
add
cmp
add
test
test
mov
inc
add
sub
jae
add
add
add
add
mov
ret
xchg
add
add
outsl
rolb
addb
aaa
push
add
mov
sbb
sub
repz
push
add
scas
cs
int3
nop
add
xchg
add
pop
jno
add
icebp
test
clc
leave
push
inc
push
xor
add
lret
cwtl
add
add
jnp
cmpsl
pushf
inc
add
xchg
stc
les
push
add
arpl
add
sub
add
mov
jbe
ja
add
pop
cmc
loopne
add
fndisi(8087
frstor
js
mov
adc
mov
jecxz
or
add
or
and
push
faddl
dec
enter
mov
jbe
fwait
lock
add
call
mov
cmc
dec
call
jle
add
add
xchg
xorl
loop
jne
inc
add
imul
mov
or
add
imul
in
mov
sahf
fisttps
pop
xor
cmpsb
add
scas
je
cmp
fnstenv
cmpsb
add
fsubp
add
add
pop
ds
loopne
jge
add
cmpsb
add
add
mov
add
out
xchg
add
xor
into
rcll
mov
add
mov
sbb
hlt
add
outsl
push
add
stc
pop
bound
mov
jp
pop
lahf
sub
and
mov
jle
test
imull
mov
imul
sahf
rolb
jge
add
mov
add
jo
mov
sub
add
fidivl
push
ljmp
sub
jg
rolb
pop
inc
arpl
add
mov
dec
add
adc
pop
xchg
mov
add
add
add
add
add
iret
pop
lea
iret
lods
lret
inc
jae
out
mov
add
jmp
adc
jne
add
daa
iret
gs
or
add
jbe
out
sbb
stos
in
out
mov
inc
jg
mov
sbb
movsb
add
add
add
mov
dec
es
das
pop
ljmp
add
mov
add
repnz
add
ja
aaa
mov
addb
out
add
cwtl
rolb
jno
add
ret
or
jns
add
addb
xorl
rolb
sahf
clc
and
add
add
inc
divl
xchg
dec
xchg
add
test
mov
pushf
hlt
add
loopne
insl
pop
shrl
xchg
add
sbb
arpl
add
or
aas
pop
movb
pop
pop
cs
adc
mov
add
adc
sbb
clc
cmc
push
or
jg
fdivrl
out
xor
adc
mov
inc
add
sbb
gs
add
add
imul
scas
dec
pop
loope
push
add
stc
mov
mov
add
in
mov
mov
jo
inc
add
xchg
test
sbb
push
xor
mov
jne
add
xor
cmp
add
hlt
add
in
clc
decl
add
fcoml
fwait
sub
add
lret
iret
pushf
in
mov
loop
jo
dec
jno
xchg
adc
push
add
mov
add
icebp
mov
add
movb
ljmp
mov
xor
sbb
inc
add
mov
mov
xchg
and
push
xchg
pop
in
in
arpl
sub
mov
jmp
cmp
add
add
mov
push
loopne
cmp
sub
add
mov
add
mov
add
xchg
pop
test
mov
add
add
add
mov
ret
xlat
rolb
ljmp
je
mov
cmp
xchg
add
inc
add
or
add
mov
fisttpll
insb
gs
push
push
xchg
test
inc
add
test
lods
pop
xor
rcrl
adc
cmp
add
add
or
pop
dec
mov
and
add
in
cmp
lock
adc
into
cmpsb
add
add
add
sti
adc
jecxz
cmp
ficoml
mov
add
add
insl
inc
add
xor
mov
and
pop
dec
push
cmpsb
add
add
mov
xor
push
sarl
add
and
mov
mov
lods
pop
cmp
add
xchg
lret
lds
add
push
lods
outsb
or
dec
jg
fldt
add
push
add
idivl
adc
dec
jo
pop
scas
enter
punpckhwd
loope
dec
sub
js
add
add
add
add
pop
into
hlt
add
dec
int3
fucom
movb
insl
adc
cmp
mov
adc
sbb
mov
fbld
add
jns
pop
xchg
add
gs
add
int
and
mov
sbb
test
add
sbb
push
addr16
lds
in
add
mov
cmp
stc
xor
cltd
or
jmp
add
pop
mov
cmc
cmp
add
add
add
mov
xchg
mov
addb
add
out
int3
push
add
pop
rolb
pop
adc
jno
lods
jns
movb
add
ja
add
jp
sbb
rcl
add
sub
je
hlt
add
data16
xchg
dec
lret
addb
pop
lods
pusha
add
add
fstpt
jno
stc
js
rolb
jg
inc
and
sti
xor
jmp
daa
cmp
pop
jmp
rolb
add
scas
in
loop
push
test
add
lea
jl
popa
cltd
shl
add
add
mov
sub
add
dec
daa
testb
mov
daa
dec
out
into
movb
add
and
push
popf
nop
add
out
xchg
clc
test
movsb
add
cmc
jge
adc
xchg
add
add
daa
or
add
cmpsb
add
add
add
add
add
mov
cld
cld
jo
xor
imul
pop
cmc
into
dec
jg
das
mov
outsb
mov
add
add
push
add
test
test
push
add
add
add
std
push
lods
fists
add
mov
addb
and
mov
jle
inc
cmc
cmc
ja
adc
subl
add
add
std
cmp
push
add
mov
pop
jb
pop
dec
xchg
cli
pop
sub
stos
xchg
add
mov
xor
negl
cwtl
movb
add
add
add
cwtl
mov
jge
or
add
xor
mov
xor
jb
or
call
xchg
cmp
xor
xchg
daa
arpl
add
or
insb
mov
pop
std
add
in
jns
pop
mov
sbbl
mov
pop
stc
pop
mov
mov
loop
mov
pop
daa
mov
cmp
push
add
dec
pop
test
xor
fs
mov
jl
add
mov
sbb
cmpsb
add
add
mov
pop
jle
add
inc
add
loop
fdivl
das
ja
jae
jle
pop
pop
lods
mov
mov
dec
mov
mov
into
fdivrl
or
mov
sbb
add
sbb
fldl
add
rolb
mov
out
movsb
add
das
pop
add
mov
imul
sub
and
stos
icebp
jns
add
xchg
movsl
mov
lcall
insb
cmp
add
call
xchg
push
sub
out
xchg
add
add
cmpsl
mov
mov
sub
add
outsl
leave
int3
sbb
mov
ja
push
push
add
inc
mov
inc
and
add
scas
ret
jns
add
cmpsl
pop
jb
mov
mov
cwtl
mov
push
stos
inc
dec
add
and
sahf
aad
add
add
add
or
push
add
adc
add
add
call
in
les
add
mov
add
shll
xchg
add
je
das
pop
sbb
test
test
fsubl
repz
add
add
sbb
pop
xorl
add
dec
test
add
add
mov
movsb
add
mov
int3
repnz
jno
stos
mov
add
icebp
xor
lea
add
cmpsb
add
push
inc
add
add
xor
fcomps
dec
rolb
stos
inc
add
inc
add
add
ja
sbb
mov
pop
and
mov
fcomps
add
add
mov
jge
add
fwait
je
or
mov
add
add
loop
arpl
add
and
icebp
and
cmp
fwait
cmp
or
adc
push
add
mov
ret
into
in
aas
mov
jne
mov
add
mov
in
lods
in
jle
add
into
add
imul
into
mov
xchg
int
dec
stos
data16
leave
push
in
ds
pop
mov
mov
mov
sub
mov
xchg
add
inc
pop
mov
add
add
inc
int3
movb
fsubr
inc
mov
xchg
add
add
jns
add
push
adc
add
mov
sub
sub
add
out
lock
repnz
fnstsw
add
cmp
int3
fmul
lods
int3
mov
lahf
addb
push
add
add
insb
movsl
popl
xorl
mov
enter
sbb
fisubrs
in
fisttpl
sub
push
rorl
loopne
pop
and
mov
loope
add
out
rolb
mov
cld
ljmp
adc
iret
dec
jno
sub
sub
pop
fistpll
pop
js
add
data16
cld
bound
mov
sbb
add
mov
dec
or
mov
push
mull
mov
repnz
mov
add
add
jmp
addb
mov
nop
add
clc
xor
and
mov
mov
sub
sbb
lcall
mov
fs
push
imul
add
mov
add
add
dec
nop
add
testb
shrl
add
add
dec
fsubrs
push
xlat
mov
add
inc
outsl
sbb
dec
and
stos
movb
dec
scas
test
cmp
imul
jecxz
inc
add
loope
outsl
mov
add
xchg
add
scas
test
or
pop
pop
mov
test
add
jno
addl
or
add
inc
add
ret
add
fsts
push
mov
add
insb
dec
dec
sti
push
add
inc
lcall
loopne
cmpsb
add
add
mov
pop
subl
xchg
mov
cltd
clc
lret
mov
loope
lahf
push
add
out
insb
lcall
addb
add
mov
adc
into
fmull
movsb
add
stc
pop
add
addb
add
aas
decb
mov
mov
xor
insb
xchg
add
rolb
mov
xor
inc
mov
aas
out
push
mov
add
add
out
insb
xchg
push
add
push
cmp
mov
jb
addr16
or
lds
sub
mov
add
jmp
mov
add
loopne
and
mov
add
add
pop
add
mov
or
lods
and
add
ja
add
xor
xchg
lds
pop
jnp
add
xchg
add
les
cmp
or
insb
and
mov
adc
xor
add
adc
jmp
leave
mov
add
int3
xorl
rorl
xor
mov
add
ss
jp
popf
in
or
mov
add
jle
dec
addb
sbb
sbb
jp
add
mov
out
push
add
add
mov
jl
add
pop
fisubs
push
add
add
icebp
pop
int3
leave
movsb
add
add
loope
inc
add
arpl
push
add
pusha
add
clc
divl
add
iret
popa
fwait
movb
sub
and
repz
or
push
sub
add
rolb
or
xlat
and
dec
push
lds
add
add
not
add
sti
fwait
xchg
add
pop
sbb
add
push
mov
add
stc
jne
or
add
popf
clc
movsl
out
pushf
stos
insl
scas
stos
fsubs
das
sub
sub
add
add
cmc
push
adc
add
inc
add
add
sub
inc
add
add
scas
lret
jb
mov
add
add
push
inc
das
test
add
addr16
add
push
add
mov
sbbl
js
lea
add
adc
or
and
mov
movb
popf
pop
fadd
add
xor
fsts
mov
jae
inc
addb
imul
icebp
adc
insb
cmp
xlat
xchg
push
mov
sti
mov
add
cmp
add
fsts
xlat
push
add
add
mov
xrelease
add
xchg
mov
aas
test
add
adc
cmpl
in
movb
js
int
add
lods
add
pop
or
add
add
mov
cmc
repz
pusha
add
daa
test
add
mov
mov
add
sbb
mov
fisubs
add
pop
test
movb
xor
mov
jmp
add
xor
mov
add
add
rolb
stos
in
add
add
add
add
add
add
add
inc
insl
popa
adc
mov
imul
pop
repnz
shr
repnz
in
in
jne
push
add
test
push
add
ja
add
addl
pop
ja
push
cld
addr16
jg
add
add
jno
int
ljmp
add
outsb
push
add
addl
add
ljmp
fistpll
add
push
popl
movsb
add
sbb
ds
repz
in
adc
pop
cltd
testb
xchg
fisttpll
mov
add
ficoml
andl
mov
add
add
stc
dec
push
ds
test
xor
sub
imul
iret
add
xchg
add
cld
stos
rolb
inc
add
test
cmc
ret
add
out
adc
aas
insl
fidivl
rcrl
add
pop
test
mov
sahf
std
mov
xchg
xor
or
or
inc
outsb
cmp
pop
dec
outsl
mul
push
testb
xor
mov
xchg
add
inc
add
out
push
add
xchg
movsb
add
pop
insb
aas
lret
lcall
add
add
addb
jge
add
pop
icebp
inc
add
aam
jbe
pushf
xchg
xor
push
add
lret
out
lahf
xchg
mov
rep
add
push
add
sub
add
xchg
add
call
dec
add
ja
add
add
test
jo
in
fwait
push
inc
mov
cmp
dec
xchg
imul
push
dec
mov
or
add
xlat
xchg
mov
lods
fnstcw
mov
out
xor
mov
adc
push
jge
ret
std
stc
mov
add
jb
outsb
pop
popf
pushl
daa
movsl
imul
dec
leave
mov
ret
pop
dec
inc
add
jmp
ret
push
mov
add
ja
jle
add
fnstsw
jbe
sub
pop
sahf
cmp
jmp
aad
sub
jmp
add
mov
xor
jl
add
fnop
add
sub
add
add
mov
and
mov
add
add
push
movb
rolb
inc
xchg
sti
xlat
f2xm1
add
lods
addb
add
push
cmp
pop
xor
outsl
dec
jmp
cmp
jmp
sub
add
inc
imul
dec
inc
jae
cwtl
inc
int3
jns
dec
jno
adc
ljmp
add
add
arpl
aas
imul
in
enter
mov
pushf
pop
rolb
mov
mov
pop
xchg
add
leave
in
out
outsb
or
add
mov
imul
add
pushf
sub
dec
jecxz
push
add
mov
add
cmp
add
add
xchg
mov
push
add
add
out
push
dec
push
fidivl
ss
cmpsl
push
add
add
pop
pop
mov
mov
ret
sub
mov
addb
cmpsb
add
bt
push
add
dec
jns
out
push
add
xchg
fdivrl
adc
dec
fsubs
add
nop
add
cmp
add
pop
and
mov
xchg
scas
fadds
mov
mov
sbb
xor
arpl
add
add
in
not
pop
out
inc
add
pop
jbe
mov
add
add
mov
push
mov
add
add
add
mov
sub
mov
icebp
add
mov
add
enter
ja
test
dec
pop
adc
inc
add
cmp
xor
lcall
pop
movlps
dec
out
pushl
pop
mov
inc
iret
movb
add
mov
sahf
test
or
add
fcompl
aad
inc
add
inc
add
mov
repz
add
je
stos
push
add
rdpmc
stos
addr16
add
add
add
sub
scas
add
arpl
adc
push
movsl
jmp
add
bound
mov
jo
xchg
add
sbb
push
xor
call
add
sbb
sbb
scas
lret
dec
dec
xor
xor
sti
cmpl
inc
cli
jb
movsb
add
add
stos
pop
imul
hlt
add
mov
jo
sahf
jge
add
dec
imul
iret
add
add
mov
out
bound
mov
add
mov
add
jno
jl
js
xor
imul
movb
pusha
add
je
mov
xor
rolb
sbb
fwait
cmp
loop
ret
or
or
add
shll
andl
add
testb
mov
or
xchg
icebp
jae
sub
insl
jno
cld
cmp
pop
fdivl
cmp
jmp
test
dec
sub
add
add
jp
add
mov
add
add
add
sub
xor
jne
dec
lcall
add
fidivl
add
dec
sub
add
jg
mov
pop
inc
repz
testb
add
out
jns
add
mov
pop
mov
add
and
mov
sbb
cmp
push
add
in
dec
lret
mov
cmp
xor
push
test
out
jl
add
mov
sub
mov
mov
testb
add
push
add
cmp
lods
stos
pop
cltd
mov
add
orl
mov
mov
add
mov
mov
mov
daa
in
out
cmpsb
add
add
xor
cmp
aam
and
mov
in
ret
add
pop
mov
imul
mov
mov
iret
addr16
add
jecxz
push
add
push
popf
in
push
add
add
lods
mov
addb
imul
fldcw
fmuls
pop
add
or
add
call
mov
movsb
add
lods
add
jne
add
out
pop
mov
or
push
add
mov
and
popa
add
mov
add
movsb
add
in
mov
add
jg
push
xor
mov
fmulp
jno
add
rcrl
mov
add
outsb
cmc
insb
adc
mov
adc
les
scas
outsb
cmpsb
add
add
mov
add
stos
dec
pop
mov
cltd
mov
or
xor
mov
cs
add
int
add
sub
add
sbb
lock
add
push
or
scas
xchg
add
add
xchg
add
add
shl
out
mov
lret
rorl
in
addb
icebp
call
add
insl
aas
clc
sbb
add
std
lret
xchg
cmp
add
jecxz
xor
xor
insb
outsb
stc
sbb
push
mov
cmp
mov
inc
add
xchg
cmpsb
add
sub
iret
cmp
call
cmp
xchg
lods
mov
test
and
dec
or
addb
dec
add
mov
gs
mov
mov
lret
sub
arpl
xchg
add
inc
add
mov
lods
inc
add
add
add
jb
push
scas
les
data16
jp
ss
scas
test
scas
xchg
add
aam
mov
mov
add
and
mov
data16
mov
or
pushf
push
mov
shll
xchg
fsubrs
add
bound
mov
push
mov
gs
std
mov
cmpsl
outsb
ja
add
xor
test
xor
fidivs
clc
inc
add
dec
nop
add
lret
push
outsb
sbb
cmp
mov
jae
loopne
pop
lods
mov
jnp
add
cmp
add
add
cmp
bound
mov
stos
inc
addb
or
stos
pop
or
add
bound
mov
mov
mov
mov
push
sbbl
lea
sbb
in
das
xor
lret
lret
add
mov
imul
add
mov
mov
jmp
inc
les
mov
add
movsb
add
add
adc
in
add
addb
xchg
add
in
addr16
add
mov
loopne
lock
add
daa
push
fdivs
pop
and
add
mov
mov
add
pusha
add
mov
add
xor
sbb
add
xlat
mov
add
add
aam
leave
rcll
add
arpl
dec
inc
imul
jmp
fadds
mov
and
dec
sbb
inc
icebp
fcmovnb
rolb
jbe
mov
pop
xor
mov
mov
jno
add
les
mov
pop
nop
add
add
add
popa
pop
aaa
stos
int3
push
add
psubusw
add
scas
sbb
add
jo
rolb
pop
and
ljmp
imul
add
cmpsb
add
add
lea
fildll
lret
jo
rcll
mov
and
cmp
ljmp
pop
movb
arpl
add
push
inc
add
add
jg
add
int
into
xchg
add
loop
pop
std
popa
push
addb
jecxz
pushf
movsl
add
jg
add
add
outsl
push
jb
and
cli
pop
and
mov
into
bound
mov
xchg
add
addb
shll
sub
repnz
add
data16
stos
nop
add
inc
fists
sbb
popf
jp
add
mov
sbb
daa
adc
jo
sub
fstpl
jbe
dec
push
add
negl
mov
add
loope
in
push
add
add
or
xchg
add
push
add
mov
pop
stos
push
pusha
add
jae
into
dec
aad
add
add
hlt
add
aas
sbb
pop
inc
aad
inc
mov
add
add
xchg
aam
cmp
out
andl
pushf
or
add
stc
rolb
mov
add
movsl
fcomps
mov
mov
loope
jmp
inc
add
fimuls
scas
inc
jo
lods
jne
aad
mov
addb
cmp
xchg
jbe
mov
dec
or
jno
data16
add
sub
repnz
outsb
cmpsb
add
add
add
add
pop
or
icebp
rolb
add
add
cmpsb
add
push
stc
daa
ljmp
daa
pusha
add
push
push
add
out
jae
aam
adcl
xchg
inc
add
sub
xchg
xor
mov
ja
add
cmp
add
test
dec
imul
es
mov
jae
out
and
lret
add
aad
dec
add
push
pop
dec
jmp
add
mov
jl
out
mov
cwtl
and
mov
xor
jno
jbe
adc
fisubs
pusha
add
xchg
add
scas
fcoml
int
int
mov
and
mov
fiaddl
push
add
movsb
add
test
psrld
movsb
add
mov
pushf
fmul
xor
add
sbb
iret
test
mov
mov
add
inc
push
cmp
add
xchg
add
add
push
add
add
add
add
cs
add
add
xchg
sub
add
add
inc
add
add
add
incl
add
rol
add
pop
mov
add
add
xor
xchg
les
add
imul
mov
mov
lcall
sub
adc
add
dec
rolb
clc
fwait
out
nop
add
rcrl
mov
repz
fnstcw
sub
out
adc
pusha
add
add
xchg
xchg
testl
and
mov
add
pop
xchg
add
add
vcvtdq2pd
jge
psubq
inc
add
cltd
les
mov
mov
enter
mov
dec
shll
lcall
add
pusha
add
add
add
mov
add
jo
and
sarl
mov
cmp
lcall
shl
js
add
xlat
and
mov
cld
cmpsb
add
mov
sub
sub
test
inc
add
add
add
add
add
and
cmc
rolb
push
andl
or
addb
sub
xlat
mov
jns
jg
leave
les
xlat
cli
cs
sub
add
mov
cmp
xchg
or
xor
xor
fsubrl
arpl
add
pop
in
out
mov
sahf
rcl
add
add
push
and
das
addb
inc
add
nop
add
add
mov
add
jbe
loop
jge
add
xchg
add
fisttpl
jmp
addb
ret
add
and
add
xor
popa
bound
mov
divl
xor
add
xchg
add
push
add
jg
fisubl
add
lock
pop
pop
cwtl
mov
imul
add
add
insb
and
dec
mov
add
add
loope
fdivs
xchg
mov
inc
add
repnz
add
cwtl
data16
and
mov
add
data16
add
sub
cld
outsl
push
ret
mov
xor
sbb
adcl
add
aas
jge
popa
and
mov
jmp
scas
test
arpl
and
add
push
xchg
xchg
ret
push
xlat
and
add
dec
rolb
movb
daa
push
add
sbb
shr
xor
leave
mov
shl
add
add
push
mov
imull
daa
popf
and
push
add
add
add
add
dec
add
add
add
sub
pushf
mov
add
push
jl
ljmp
mov
cltd
pop
jecxz
push
add
add
add
stos
sub
pop
or
sub
mov
add
xorl
xchg
add
xlat
lret
add
add
add
xor
loopne
or
test
inc
add
add
or
pop
push
hlt
add
mov
mov
xchg
add
cld
in
xchg
push
aad
add
xchg
add
add
dec
sub
add
add
add
xor
push
inc
add
cmp
add
dec
mov
outsb
pop
negl
add
xor
mov
leave
rorl
add
pop
data16
add
cld
inc
adc
sti
cmp
mov
jecxz
movsb
add
add
jle
add
add
add
loopne
jae
add
add
mov
xor
das
dec
aad
addb
add
pop
push
cli
pop
add
add
enter
daa
xor
adc
add
iret
loope
and
mov
testl
pop
dec
testb
mov
mov
mov
fsubr
ret
repnz
pop
mov
mov
test
mov
sbb
addb
fwait
xor
aad
cltd
mov
rolb
enter
mov
fadds
mov
idivl
add
mov
add
out
outsb
int3
pusha
add
sbb
mov
mov
mov
and
mov
addb
add
jne
add
add
rolb
dec
mov
les
or
lock
cmp
add
dec
int3
sbb
ret
mov
subl
je
inc
add
gs
ja
add
add
mov
sbb
mov
xchg
loopne
addb
add
jge
lods
fildll
rdtsc
mov
aaa
jmp
in
push
cli
or
test
leave
xchg
add
add
mov
imul
leave
out
xor
lcall
push
pop
sahf
inc
add
dec
shll
jmp
push
sub
cmpsb
add
lds
mov
add
mov
int
out
xchg
in
inc
add
add
or
add
lret
lret
push
add
pop
lock
mov
adc
dec
arpl
mov
iret
mov
lds
add
stc
xor
ret
call
out
std
stos
xor
fldlg2
fisubrl
add
inc
jnp
add
ret
add
cmp
jmp
add
add
sbb
mov
mov
or
test
xor
aam
fcoml
push
fnsave
insl
call
cltd
add
rolb
aas
mov
popf
das
aas
cld
inc
sbb
mov
pop
xchg
sbb
mov
jae
testb
icebp
hlt
add
fsts
add
data16
add
add
or
and
mov
shrl
mov
int3
shll
and
mov
add
icebp
cmp
add
add
and
xchg
icebp
in
rolb
sub
jecxz
mov
dec
scas
push
add
add
aaa
add
jbe
clc
leave
mov
or
jae
out
je
push
add
add
test
ret
mov
mov
xchg
fadds
mov
fsubs
addb
dec
imul
mov
mov
mov
add
fists
jae
dec
mov
insb
cmpl
add
add
add
add
mov
sub
ljmp
add
lcall
cli
xchg
test
cwtl
mov
add
add
dec
mov
add
add
outsl
add
bswap
sbb
leave
jno
out
pop
je
inc
insl
testb
add
fcomp
enter
insb
js
sub
add
add
pop
sahf
add
mov
ret
mov
stc
sub
pop
mov
mov
or
stc
stc
cli
ja
pop
ret
jg
inc
push
push
stos
pop
add
scas
sub
movsl
data16
mov
add
lret
pusha
add
addb
icebp
inc
add
add
mov
pop
mov
jns
add
mov
jmp
and
mov
out
cmp
and
pusha
add
sti
pop
imul
dec
mov
in
jnp
imul
dec
test
icebp
pop
push
scas
lds
inc
add
movsb
add
les
mov
add
jmp
imul
fistps
xlat
std
jg
pop
and
mov
jno
add
push
add
jb
cs
add
loopne
adc
add
push
add
add
add
jb
cmpsb
add
add
jns
arpl
out
mov
dec
in
ret
repnz
add
mov
daa
pop
mov
negl
mov
lock
dec
insb
jns
add
les
pop
fs
int3
mov
inc
add
add
aam
jo
adc
aad
add
or
add
cmpsl
jb
dec
cld
mov
call
sbb
xor
int
bound
mov
add
in
lods
xchg
add
lods
enter
pop
inc
add
xchg
xchg
sbb
add
push
mov
fiadds
cltd
or
mov
add
sub
mov
addb
adc
sub
add
add
hlt
add
add
popa
push
fmul
cmc
lret
add
pop
fldt
pop
cmp
pop
shll
mov
call
nop
add
cmc
jns
aam
lahf
pushf
hlt
add
add
mov
and
cmp
fwait
daa
xchg
cmpsb
add
or
mov
iret
in
sub
or
addr16
add
popa
lea
add
add
aad
push
out
xchg
fmull
test
adc
testb
add
xchg
sbb
cmc
adc
add
and
mov
or
inc
add
pop
insl
sbb
xor
arpl
add
add
int3
hlt
add
int
add
addb
sbb
pop
cmpl
mov
add
add
icebp
fstpt
and
mov
loop
outsb
daa
dec
xchg
push
dec
insl
aad
fcmovbe
xchg
dec
cmpl
ljmp
dec
movl
add
mov
cmc
sub
xchg
cmp
cmpl
std
cmc
mov
movb
push
cs
dec
stos
cmp
push
subl
jl
mov
pusha
add
add
jge
add
fmull
add
add
pop
scas
fcomp
add
add
loop
mov
add
popf
popa
rolb
or
insb
ds
add
jmp
jp
lds
sbb
scas
mov
orl
pop
and
add
rcll
mov
dec
add
mov
mov
add
leave
ret
push
test
add
lcall
add
movb
mov
leave
inc
push
add
inc
add
add
add
movsb
add
fcos
xchg
add
dec
fistpll
pop
testb
dec
pop
push
add
movsb
add
add
pop
cmp
add
jg
test
xchg
aam
test
add
test
dec
cmp
add
add
xchg
xchg
ja
add
push
cmp
push
add
pop
mov
ror
insb
push
add
add
add
leave
fcmovnbe
add
or
add
pop
and
fnstsw
xchg
mov
jg
icebp
lea
jb
mov
add
xchg
mov
mov
sub
xchg
push
lcall
cmp
add
add
ss
dec
push
add
add
ja
add
test
and
pop
inc
cmpl
mov
add
xchg
push
lods
mov
inc
sub
mov
fcomps
sbb
out
into
add
lret
sub
mov
add
pop
and
mov
scas
sub
adc
pusha
add
dec
xchg
fincstp
stos
aaa
jno
movsb
add
mov
or
add
mov
or
dec
cmp
add
or
add
mov
xor
aam
jns
cli
hlt
add
add
push
xor
shr
pushl
ret
add
add
mov
sbb
adc
mov
push
add
iret
add
add
sarl
jle
sahf
xlat
fs
jo
sub
dec
bound
mov
mov
xchg
mov
add
das
jecxz
add
orl
adc
xor
sahf
iret
sbb
stos
lods
pop
xchg
add
cmpsb
add
dec
sbb
jecxz
push
add
test
push
pop
xchg
xlat
dec
sbb
in
rolb
stos
jmp
std
sahf
lea
add
mov
push
add
pop
test
loop
int
xchg
pop
mov
mov
add
out
test
add
push
add
sbb
cmp
aad
or
add
addb
test
fdivrl
sbb
push
xchg
dec
sbb
add
cmpsb
add
mov
mov
jg
roll
mov
sti
push
add
cmp
test
add
add
aam
or
movsb
add
pop
enter
ficompl
test
add
mov
nop
add
movb
add
xor
rcll
add
pop
sub
lret
int
add
mov
out
lcall
and
mov
push
add
mov
inc
add
dec
inc
lea
add
adc
add
push
out
addb
add
add
add
add
pop
insl
das
xchg
mov
sti
addl
or
cmp
mov
sub
out
data16
add
out
add
and
fdivrl
iret
mov
cmp
mov
cwtl
cmp
mov
lods
ficoml
sub
js
add
mov
pop
out
ljmp
in
ljmp
stos
dec
lea
add
outsb
rolb
daa
mov
out
gs
repnz
test
add
add
add
and
mov
add
dec
dec
push
add
and
mov
mov
mov
mov
cmpsb
add
add
popa
mov
je
pop
and
movb
add
rolb
cli
push
add
sti
add
add
ja
call
add
imul
xrelease
add
hlt
add
mov
add
pop
and
data16
lea
add
push
add
add
outsl
push
add
add
popf
daa
scas
in
test
and
xchg
jl
xor
jno
imul
inc
movsb
add
js
mov
pop
add
std
ja
rcll
add
clc
sub
in
xchg
sbb
adc
int3
sub
add
pop
sub
push
add
cmp
add
mov
out
mov
add
call
pop
fcoms
mov
pop
call
rorl
push
int
add
dec
mov
add
mov
cld
push
cmp
sub
jno
sub
lret
fadd
inc
inc
add
ja
lds
add
cmp
cmp
add
gs
add
add
add
jge
add
and
testb
add
cmp
inc
add
add
addb
xor
inc
add
and
shll
push
les
cmpsl
in
pcmpgtw
inc
push
ljmp
dec
and
mov
pop
push
add
adcl
pusha
add
mov
add
add
data16
rorl
pushf
adc
pop
xchg
ret
pop
jnp
dec
fsubp
add
dec
out
mov
ja
add
testb
sbb
into
push
add
jmp
add
add
fwait
test
mov
mov
add
push
inc
out
add
subl
lret
inc
and
in
add
xor
in
mov
ljmp
xchg
mov
mov
xchg
add
adc
call
inc
add
xchg
cmp
add
addb
cmp
test
mov
imul
aam
movb
adc
test
xchg
pop
sub
fcoml
xor
cmp
imul
out
sbb
xchg
add
push
aas
addb
add
add
pop
cwtl
fdivrl
add
add
add
es
addb
xchg
add
or
lods
lea
dec
xor
pop
and
mov
jnp
add
js
fnstenv
in
jg
add
mov
push
dec
cli
adc
mov
add
cld
or
mov
add
mov
sub
adc
xchg
add
test
in
xor
mov
inc
insl
fiaddl
add
ret
mov
add
adc
arpl
add
add
add
loopne
jge
stos
mov
pop
dec
pop
stc
shll
inc
movsl
mov
or
add
clc
int3
cs
add
fisttpll
testb
addb
add
sbb
add
mov
pop
add
inc
xchg
test
mov
and
mov
shl
add
add
add
data16
push
xchg
add
xor
sbb
dec
mov
add
insb
mov
imul
mov
push
cmp
jg
add
dec
insb
mov
xchg
mov
ja
add
icebp
adc
icebp
int
add
mov
add
mov
add
aaa
push
and
call
cltd
mov
jnp
mov
cmp
mov
cmpl
rolb
outsl
mov
in
sbb
add
add
mov
add
jge
jb
dec
xchg
add
ljmp
push
inc
add
mov
adc
jl
sub
add
add
add
sbb
jns
add
mov
test
jbe
movsl
aaa
in
lahf
or
xor
dec
je
jo
push
pop
fnsave
jae
add
push
inc
add
add
stos
jns
hlt
add
outsl
and
inc
jnp
add
testl
stos
adc
stos
mov
push
lods
xchg
dec
cmp
stos
roll
inc
les
cld
decl
adc
icebp
fildll
adcl
into
push
add
push
stc
sqrtps
lcall
inc
add
xor
rolb
xchg
add
lret
jmp
out
add
xchg
adc
push
test
lret
inc
xchg
movsb
add
ret
aaa
jae
sti
add
add
sbbl
scas
les
mov
gs
aam
jge
jmp
adc
push
add
jl
sti
hlt
add
movsb
add
imul
cli
jl
xlat
lock
in
lret
mov
add
aaa
fnstsw
std
xchg
add
lret
movsb
add
mull
add
add
adc
cmp
mov
add
movsl
test
lds
add
outsl
dec
mov
add
adc
int3
into
sub
cmpsb
add
add
movsl
mov
push
add
mov
add
fistps
adc
or
lahf
test
inc
pop
add
jmp
rolb
add
push
sub
dec
pop
mov
ret
in
pop
movsb
add
popf
data16
lahf
xchg
add
add
loope
mov
ljmp
add
imul
push
add
pusha
add
in
gs
mov
mov
jb
div
sub
lea
sti
adc
data16
int
jg
fdivl
mov
in
xor
add
mov
add
insl
jge
dec
mov
or
jp
cmp
or
jb
mov
add
add
add
mov
add
add
mov
jno
add
add
add
pop
pop
cmp
add
add
add
pop
push
add
add
add
inc
sbb
add
push
add
cmp
adc
out
or
cwtl
out
or
je
pop
fs
adc
aas
pop
lds
dec
mov
jmp
add
add
lock
mov
mov
add
add
mov
adcl
xor
add
sub
adc
mov
cmc
stos
cmpsl
inc
add
out
pusha
add
test
push
jp
adc
pop
sub
icebp
add
mov
add
add
add
mov
add
inc
xchg
add
sub
add
cmc
jecxz
test
cmp
sbb
add
add
pop
sub
xor
sti
push
add
test
xchg
mov
pop
cmpsb
add
add
jns
addb
push
icebp
addb
lahf
jne
fstl
add
xchg
xchg
add
add
mov
add
push
add
jns
mov
add
push
out
push
in
mov
add
add
add
xchg
cmpsb
add
scas
fwait
call
add
sbb
or
mov
or
out
rorl
add
add
add
sbb
out
insl
loop
popf
ret
adcl
inc
add
pusha
add
xor
rcpps
pop
push
add
and
mov
jp
add
add
sub
lods
xor
push
jg
add
cmp
add
ja
stos
jle
dec
adc
test
sbb
sub
or
pop
push
add
add
mov
push
add
lahf
in
add
mov
mov
add
pop
pop
mov
outsb
push
add
jmp
add
outsl
and
xchg
mov
stos
dec
jp
mov
mov
xchg
add
push
mov
mov
add
add
sub
iret
pop
loope
pop
scas
out
add
push
add
clc
cmp
inc
out
mov
add
add
add
mov
pusha
add
bound
mov
add
inc
popf
lea
xlat
pop
and
mov
lods
pop
outsl
icebp
pushf
stos
inc
add
dec
popf
adc
add
imul
add
mov
add
add
or
dec
sub
enter
add
adc
xor
fistpl
pop
mul
mov
inc
xor
dec
and
dec
ficompl
add
imul
dec
and
cmp
add
sub
add
xchg
mov
cmpsl
mov
in
sub
add
add
rolb
popf
clc
fwait
pop
frstor
adc
mov
jae
pop
scas
in
jnp
rolb
adc
call
imul
xchg
mov
inc
add
mov
add
cmc
mulps
ret
push
add
push
ljmp
mov
aam
add
mov
pop
movsl
dec
and
mov
push
leave
mov
ret
stos
sahf
sub
lock
jge
add
and
imul
cmp
out
fisttpll
fucomp
or
push
add
jb
mov
push
add
add
loopne
sbb
test
add
xor
pop
xchg
add
push
out
cmc
adc
add
add
pusha
add
aaa
or
adcl
add
mov
insb
idiv
js
add
jmp
arpl
add
sahf
outsb
out
faddl
mov
movsl
loope
daa
pop
sbb
fidivrs
mov
mov
pop
icebp
in
or
pop
mov
sub
jo
gs
into
jo
xchg
add
add
arpl
add
and
scas
cmpsb
add
mov
pusha
add
rolb
data16
add
add
pop
sub
ret
lret
sub
dec
mov
add
mov
add
xor
inc
mov
pop
jmp
lret
add
sub
add
xchg
add
pop
and
add
and
add
add
mov
add
lcall
add
std
jne
add
sub
pop
mull
mov
xchg
jo
sbb
fistl
xchg
add
mov
pop
out
je
sub
addb
dec
cwtl
stc
cwtl
xchg
jns
and
add
or
sahf
std
sbb
out
mov
je
dec
je
cwtl
lock
mov
add
add
sbb
out
xchg
add
popf
dec
jns
jns
pop
and
cmc
addb
add
xor
fildl
mov
aad
jmp
scas
jnp
add
dec
mov
push
das
les
mov
add
popf
pushf
popa
lahf
sbb
iret
fidivrs
add
pushf
fdivr
data16
arpl
test
add
sub
and
mov
mov
xchg
add
testb
cmp
add
jo
or
mov
add
add
add
mov
cmp
mov
add
insb
popf
dec
shrl
fcoml
clc
push
and
je
enter
jmp
test
add
mov
add
enter
add
dec
inc
inc
add
rolb
movsb
add
add
out
sbb
loop
add
mov
add
in
ja
ret
add
sbb
add
bound
mov
lock
xchg
add
pop
mov
add
sbb
adc
dec
mov
in
int
pop
fbstp
add
push
add
sub
lds
stos
das
xchg
sbb
adc
fdivrs
dec
lods
arpl
orl
cli
or
add
leave
fwait
repz
test
movsl
mov
fcomip
or
add
add
add
xor
in
cld
mov
add
pop
call
add
dec
daa
out
and
cmp
rcll
adc
aad
push
add
inc
shl
mov
rolb
adc
add
popf
nop
add
add
mov
push
add
jbe
into
lahf
add
sbb
add
add
and
mov
in
xor
out
xor
lret
and
mov
pushf
iret
sbb
movb
dec
jne
add
dec
push
fsubrs
repnz
cs
in
dec
ret
inc
mov
mov
in
sbb
mov
sub
dec
pop
jmp
inc
add
fdivl
rolb
add
add
cmpsb
add
std
pop
adc
mov
movq
add
mov
cltd
jmp
cmp
sub
mov
fwait
pop
fwait
mov
mov
add
xchg
or
cs
pusha
add
or
sbb
aaa
cmp
pop
add
ficoms
add
mov
dec
xor
popa
movsb
add
lcall
add
rolb
rolb
inc
adc
xor
mov
mov
popf
xor
sbb
inc
add
mov
aam
sub
add
mov
stos
sti
loop
into
lds
push
stc
inc
mov
push
add
xchg
add
bound
mov
mov
inc
add
sbb
add
xchg
add
add
add
jno
dec
test
mov
popf
dec
sar
mov
loop
cli
cs
mov
push
add
mov
aad
add
add
imul
add
mov
add
xor
out
or
int3
jge
aam
fsubs
or
add
cld
jg
add
or
outsb
nop
add
jno
dec
out
or
add
ss
add
mov
in
in
mov
lret
sbb
pop
movsl
sbb
xlat
mov
xchg
dec
das
push
movsl
and
add
adc
cmp
pusha
add
add
gs
dec
ficoms
push
add
pop
daa
jg
outsl
and
imul
add
xor
lea
daa
stc
cmpsl
cmpsb
add
call
add
push
in
in
out
inc
cltd
enter
leave
fmuls
add
loope
add
pop
pop
inc
addb
add
add
ss
add
xor
lret
cmp
add
add
add
outsb
xor
or
mov
les
das
xor
add
or
mov
loop
test
adc
rolb
insl
cmp
add
addb
addr16
das
dec
mov
add
mov
cwtl
dec
mov
popa
in
mov
pop
or
cli
rolb
xchg
add
mov
ret
dec
cmp
add
int
and
cmpl
mov
add
add
jge
in
aaa
adc
add
mov
movb
add
mov
add
jae
std
pop
leave
loope
rcl
add
aaa
mov
adc
test
add
jg
jb
dec
imul
mov
mov
mov
ljmp
xchg
add
movsl
add
push
xor
mov
aad
cmp
add
rolb
xor
push
imul
add
fs
push
add
imul
movsb
add
in
outsb
gs
and
add
jnp
add
add
outsb
movsb
add
outsl
mov
add
jo
and
in
or
mov
cmp
in
cmc
and
ret
add
repz
js
sahf
out
dec
pop
cltd
sbb
add
mov
jbe
sbb
stos
mov
jo
mov
or
fnstsw
cli
pop
dec
jp
mov
mov
loopne
rorl
loope
bound
mov
scas
adc
aas
clc
fstps
test
mov
mov
xor
insb
xchg
sub
add
add
jno
inc
push
add
add
dec
imul
inc
mov
and
mov
cmpsb
add
push
mov
clc
mov
xchg
cmp
rolb
pop
addb
sbb
and
cmp
add
add
mov
call
add
icebp
rolb
adc
and
mov
test
jg
cmp
rcpps
push
add
mov
js
pop
setnp
mov
mov
xchg
add
add
adc
imul
scas
stc
scas
fsubrp
or
push
push
add
jg
add
stos
or
sub
jge
leave
dec
stos
pushf
pusha
add
or
add
cmp
push
add
jle
add
enter
xchg
loopne
inc
add
add
ja
add
stc
fmuls
lea
add
dec
testb
add
aas
push
test
aaa
imul
icebp
add
mov
add
xlat
fwait
ljmp
nop
add
add
pushf
sub
add
out
ss
push
clc
rolb
pop
pop
subl
add
add
pushf
mov
sub
add
add
lahf
jp
std
sub
cltd
pop
fiadds
mov
jae
sarl
push
cmp
aad
mov
mov
stc
idivl
sub
cltd
out
or
pop
ret
mov
lcall
add
out
mov
add
mov
dec
rolb
pop
xchg
and
mov
xchg
add
pop
ds
mov
inc
add
and
je
sbb
pop
movsl
cld
xor
add
mov
aas
inc
add
xchg
int3
pop
sti
stc
xlat
push
add
aas
adc
lcall
push
popa
lock
leave
or
xchg
add
scas
ret
jp
add
or
adc
ljmp
or
adc
inc
xor
jno
clc
testl
fdivs
mov
adc
dec
mov
xchg
add
jle
js
adc
leave
sbb
add
rorl
jo
jp
add
icebp
testb
add
or
lock
les
imul
mov
push
mov
xchg
jnp
add
push
addb
sub
icebp
add
mov
add
cmp
add
add
insb
inc
add
add
xor
adc
add
insb
imul
xchg
add
jmp
test
jb
sub
add
lret
mov
jo
pop
cmp
mov
push
xlat
test
xchg
push
daa
cmp
add
in
lods
mov
arpl
enter
test
out
jo
or
add
clc
push
xor
icebp
movb
xchg
stos
xor
popf
clc
imul
add
push
cmp
add
insb
testl
outsb
sub
aas
inc
sbb
repz
xchg
stos
addb
add
cmp
jns
pop
or
cli
mov
add
jle
mov
shl
add
testl
add
xchg
add
jnp
jb
and
outsb
fcmovbe
popf
imul
pop
add
add
adc
xor
jno
pop
add
add
jp
add
pop
xchg
mov
repnz
add
mov
add
add
push
aam
push
in
fcoml
adc
sbb
cmp
adc
shll
adc
in
jno
rolb
stos
jbe
xlat
rolb
add
repz
add
add
add
scas
test
data16
lds
add
add
jbe
push
add
add
add
stos
xchg
ljmp
add
add
scas
shll
or
movsl
inc
add
xchg
test
cmp
popf
and
mov
sahf
mov
add
sbb
out
sub
pop
or
add
pop
rolb
aaa
data16
add
sub
mov
lea
jle
mov
aad
inc
add
inc
add
int
add
jns
add
add
in
fsubs
testl
add
add
sti
xchg
add
add
aas
sbb
lret
add
ret
dec
push
out
or
inc
add
je
xchg
adc
lea
popf
lods
les
roll
mov
cwtl
cli
pop
jb
shll
push
or
mov
nop
add
mov
push
add
ljmp
std
xchg
add
xor
dec
mov
in
inc
add
ljmp
xchg
add
into
adc
sbb
add
add
std
aas
push
mov
or
movsb
add
in
decl
xchg
add
shr
cwtl
shll
lock
outsl
add
mov
out
push
adc
add
ljmp
add
insb
jns
lcall
pop
xchg
enter
je
xchg
addb
pop
jecxz
out
sub
cmpsl
hlt
add
mov
stc
std
out
mov
add
add
or
lds
insl
mov
inc
add
add
test
lret
jbe
mov
insb
mov
add
mov
dec
mov
sahf
pop
mov
imul
mov
mov
ret
subl
xchg
add
add
js,pn
in
sbb
add
scas
dec
push
scas
or
mov
mov
movsb
add
add
les
pop
movsl
mov
out
loopne
rolb
add
mov
xchg
add
loope
mov
adc
les
lea
or
add
add
out
adc
jle
js
add
movsb
add
jp
xor
xor
test
add
add
jle
incb
add
add
fidivs
fisubl
add
add
add
imul
xchg
xor
repz
rolb
push
mov
jnp
gs
out
imul
pop
jg
stc
pop
bound
mov
push
add
add
imul
and
sbb
mov
data16
stc
dec
or
add
cmpsl
jb
dec
xchg
stos
cmp
mov
cmp
movsb
add
jno
sbb
push
cmc
cmp
nop
add
add
add
add
add
push
adc
mov
out
lods
decb
cmp
sbb
add
push
cmp
xchg
jnp
scas
add
jg
enter
out
or
out
pop
out
mov
cltd
lahf
ljmp
mov
add
in
insb
stos
xor
leave
and
shll
add
fldenv
inc
or
dec
mov
ja
add
iret
pop
push
add
pop
stos
push
add
add
dec
rolb
or
push
xor
add
add
repz
cmc
mov
mov
cltd
mov
add
out
cld
or
mov
add
mov
and
add
mov
push
add
testb
or
mov
cmp
pop
stos
in
jmp
cmp
lahf
xlat
out
in
aam
hlt
add
dec
testb
sbb
nop
add
adc
mov
stos
call
fidivrl
xor
ds
add
xchg
add
mov
add
lods
push
add
call
leave
adc
enter
mov
cmp
mov
pop
lcall
add
mov
cs
mov
lds
fisubrs
sbb
or
pop
inc
add
add
rolb
xor
aam
dec
xor
mov
xor
push
cmp
lret
int3
or
cmp
add
add
inc
test
sbb
add
fstl
adc
xchg
clc
js
movb
cmpsb
add
or
add
xchg
mov
clc
sub
add
add
add
rolb
mov
icebp
out
jnp
add
cli
mov
dec
lock
ret
and
mov
add
repnz
cmp
add
pusha
add
add
bound
mov
add
add
testb
add
stos
lods
xor
add
push
add
add
cli
or
fnstsw
in
pusha
add
scas
flds
in
add
add
or
add
loopne
and
mov
add
add
or
mov
jp
add
lds
jmp
add
mov
ret
testb
add
adc
add
or
ret
pop
pop
subps
add
push
add
push
in
pop
add
add
ds
add
iret
scas
les
pop
mov
dec
cld
scas
aad
add
add
xchg
xor
jmp
addb
adc
cmp
movsl
pushl
inc
daa
xor
out
adc
add
mov
imul
xchg
lret
push
sbb
mov
enter
push
add
sbb
push
add
add
add
iret
aad
add
je
and
cld
imul
xor
cmp
add
cld
push
lret
push
fwait
test
scas
in
cmpl
insl
mov
inc
add
ss
dec
xchg
fdiv
add
add
push
add
sub
cmp
aaa
xor
jle
xchg
clc
xchg
aam
or
aad
push
loope
decb
jno
mov
inc
add
inc
add
add
jmp
cli
dec
xor
int
je
ds
adc
iret
xor
test
inc
add
xchg
add
add
xchg
add
add
mov
xor
pop
dec
mov
sub
xchg
sub
cmp
add
mov
add
add
xchg
mov
cmp
fisubrl
rolb
test
dec
out
add
mov
bswap
jb
out
push
push
mov
add
loop
insb
loopne
and
mov
loop
sti
dec
fwait
das
ret
xchg
add
add
add
aaa
mov
push
inc
lds
add
addb
mov
add
cmp
test
sub
xor
aad
add
dec
or
or
mov
add
mov
add
mov
cmp
mov
add
cmc
outsb
ja
out
sti
cmp
ret
xor
rolb
xchg
add
cmp
add
add
aad
loope
add
add
mov
add
jnp
call
imul
add
jmp
sbb
cltd
pop
cld
insb
cli
data16
add
cwtl
dec
insl
psrld
decb
mov
lahf
and
add
pop
nop
add
movsl
mov
fidivrl
cmpsl
dec
nop
add
push
icebp
lcall
icebp
adc
add
lods
ljmp
jmp
add
aas
test
cld
out
or
mov
sub
fdivrs
fisttpl
add
mov
ret
push
bound
mov
push
inc
fisubrl
clc
sbb
add
mov
sub
mov
lock
add
testb
add
add
xchg
mov
cld
adc
out
aam
pop
into
jbe
mov
sahf
mov
jo
stos
clc
shll
mov
aad
mov
mov
js
loope
test
outsl
test
add
insb
sti
icebp
push
imul
inc
add
lea
add
xchg
add
jbe
push
add
cmp
ja
jle
pop
aam
fldcw
jae
inc
add
testb
add
rolb
add
adc
push
test
and
dec
out
add
je
xor
pop
dec
mov
sub
xchg
insb
mov
pop
jg
sahf
jne
sbb
mov
mov
repz
rolb
pop
and
mov
pusha
add
add
mov
data16
mov
or
xchg
nop
add
push
add
addb
sahf
pop
xor
cltd
test
ds
add
movsl
jl
sahf
jecxz
add
add
pop
out
jecxz
add
mov
add
das
or
lock
ds
cmp
add
adc
inc
add
rolb
inc
add
insb
jg
cwtl
icebp
popf
jno
rorl
iret
imul
xlat
lea
adc
add
xor
aas
test
sbb
ffreep
cs
push
add
shrl
adc
scas
adc
outsb
push
add
lcall
cmpsl
mov
cmc
dec
cmova
movb
add
test
call
mov
add
pop
cmc
mov
inc
adc
add
pop
gs
movsl
pop
xchg
test
mov
cmp
add
in
loopne
xchg
add
jnp
ret
push
pop
or
add
arpl
add
or
ret
cmp
or
add
cmpsb
add
in
sub
or
adc
sahf
mov
inc
add
xor
jecxz
add
xchg
orl
add
adc
data16
add
pop
insl
xchg
in
mov
xchg
add
adc
nop
add
add
fsubl
add
mov
add
out
cld
dec
ds
mov
cs
lahf
fs
add
pop
in
add
mov
mov
xor
mov
sbb
add
sti
sarl
xor
data16
aas
mov
loope
add
mov
add
cmp
sahf
add
mov
pop
cmpsl
xchg
sbb
xchg
pusha
add
add
mov
sub
mov
dec
clc
pop
push
add
in
add
pusha
add
clc
xor
or
add
jae
xchg
add
mov
fcom
xor
push
mov
addb
add
adc
sbb
in
cmpsb
add
decl
add
aam
lock
pop
jmp
cwtl
dec
push
fcompl
test
or
cmc
out
mov
pop
inc
mov
push
iret
nop
add
js
imul
addb
xlat
sub
sbb
or
add
add
pushf
sbb
add
into
pusha
add
movl
mov
movb
mov
cmp
pop
mov
push
add
xchg
icebp
std
mov
mov
mov
popf
pop
mov
sub
cmc
adc
mov
xlat
cmpsb
add
mov
push
fsubs
add
add
add
dec
sbb
inc
add
mov
imul
add
push
pop
gs
dec
mov
fcoml
shll
popa
jmp
cmpsb
add
add
out
add
add
out
in
cmp
js
adc
hlt
add
in
jmp
leave
imul
mov
add
pop
cld
add
add
or
sub
xor
imul
push
add
dec
mov
add
pop
lock
add
xchg
add
stos
jl
cmp
jecxz
test
add
testb
addr16
rorl
fadds
clc
mov
push
add
cli
aaa
mov
lds
out
jae
lahf
cld
repnz
rolb
add
into
dec
inc
testb
jb
lods
jg
push
aad
add
add
add
loope
shll
add
lods
mov
adc
sahf
stc
ljmp
out
scas
jl
push
cli
xor
or
add
cltd
mov
sbb
mov
add
add
inc
pushf
scas
adc
add
test
loopne
ds
add
cli
mov
ds
inc
add
in
cli
movb
sarl
or
sbb
add
add
push
jle
in
mov
add
jecxz
xchg
add
mov
je
cmp
xor
adc
xor
push
insb
inc
test
add
inc
add
mov
cmp
mov
mov
add
xlat
dec
add
cmpsb
add
push
xchg
enter
icebp
add
pop
sahf
aaa
icebp
adc
add
sub
cmp
insl
sub
adc
xchg
add
cmpsb
add
pop
dec
ja
add
ja
add
jle
add
adc
pop
sub
mov
add
rorl
lock
push
pop
and
sbbl
mov
rolb
pop
fcomi
add
push
dec
add
add
add
mov
push
add
add
cwtl
call
push
ficompl
add
add
sbb
outsb
xor
mov
mov
mov
outsb
dec
inc
add
leave
jo
addr16
push
xchg
orl
dec
test
mov
pop
sub
cmp
lods
lods
loope
add
cwtl
inc
xor
add
movb
cs
jo
fdivrs
add
add
sub
mov
test
shll
cmp
std
or
pop
push
xchg
add
pop
pop
dec
loop
fisubrs
jns
mov
add
aaa
jge
add
add
add
add
ret
jecxz
sbb
lods
and
lret
jmp
add
add
outsb
sub
add
into
in
and
in
mov
mov
bound
mov
jbe
add
fidivrl
push
aad
testl
call
enter
push
add
add
mov
add
add
push
or
int3
push
jb
sub
and
test
pop
sub
imul
mov
enter
xor
mov
push
add
add
loopne
rolb
pop
pop
test
mov
sbb
add
fwait
repz
add
mov
das
inc
add
push
add
add
cmp
jl
lock
pop
out
or
sbb
sbb
cwtl
hlt
add
rolb
enter
jnp
cltd
mov
pop
fcomi
aas
faddl
jb
mov
add
iret
out
pop
cmp
xchg
adc
xchg
jmp
add
and
mov
fdivr
movsb
add
xchg
pop
outsb
insb
addb
add
or
add
add
lahf
js
xchg
add
fsubr
cs
push
add
nop
add
insb
mov
add
add
sbb
add
loopne
out
cmp
inc
add
ja
push
add
mov
mov
add
xchg
inc
lods
mov
add
mov
loop
cs
out
icebp
hlt
add
add
mov
add
add
cmp
loop
addr16
cmpsb
add
adc
insb
push
out
dec
incl
add
mov
lea
xrelease
jmp
mov
mov
xor
mov
into
pop
push
add
jl
add
test
jae
adc
mov
aaa
lock
add
add
dec
jne
hlt
add
jp
add
orl
mov
mov
addr16
mov
out
lds
mov
push
push
mov
sahf
fildl
jg
das
dec
dec
and
mov
add
mov
clc
mov
and
add
add
add
mov
mov
jl
iret
sub
jl
or
bound
mov
add
clc
push
fistpl
outsb
jae
aas
test
subl
mov
jl
push
xchg
mov
imul
add
loop
enter
insb
ret
push
add
dec
sbb
js
push
icebp
inc
cmc
int3
mov
push
sti
mov
and
lret
fbld
add
add
add
popf
into
icebp
dec
dec
mov
mov
mov
fwait
add
inc
add
inc
mov
or
mov
lea
cltd
inc
add
adc
lea
add
add
and
adc
ficomps
mov
adc
mov
inc
add
and
jno
rolb
fidivrs
or
xchg
inc
mov
push
sbb
out
rolb
cmp
add
jne
test
ret
dec
pop
xor
jbe
fsubrl
stos
iret
xchg
push
jnp
fnstenv
add
pop
dec
imul
dec
int
fildll
push
or
add
sub
mov
arpl
sub
add
jl
in
imul
adc
test
and
push
cmp
or
xor
das
into
xchg
add
lahf
xchg
pop
add
add
dec
lods
xchg
mov
leave
loope
pop
cmp
mov
lret
daa
cli
add
pop
dec
test
add
add
in
mov
test
add
or
sbb
sbb
add
add
cmp
jg
add
xor
and
xchg
mov
pop
jp
add
xlat
int3
xlat
inc
add
out
lds
add
mov
test
and
xchg
call
daa
add
data16
enter
or
xor
imul
imul
ret
add
mov
andnps
jmp
dec
and
add
test
popa
dec
out
ret
sub
dec
add
add
add
jne
rolb
push
ret
mov
add
dec
mov
inc
jmp
rolb
sbb
hlt
add
mov
push
add
sub
push
addb
pop
addb
push
add
fwait
mov
add
add
lcall
fnstcw
sub
fwait
dec
push
hlt
add
mov
xchg
rolb
loope
add
add
cmp
inc
sbb
add
add
inc
add
mov
rolb
cmpsl
test
loopne
rep
cs
js
test
add
add
mov
mov
adc
repnz
add
std
scas
add
and
mov
push
xchg
add
fsubrl
inc
add
add
ja
out
pop
ja
add
mov
ja
adc
orl
add
dec
cmp
or
gs
dec
add
xor
nop
add
push
add
mov
loop
and
mov
cmp
inc
adc
sub
add
jecxz
add
dec
jae
repz
movsl
lods
jl
add
mov
add
sti
les
scas
mov
dec
out
icebp
fwait
ret
fadd
push
adc
add
xor
lods
ret
fbstp
add
fldt
fdivl
add
add
push
add
xchg
add
sbb
cmc
das
fimuls
insl
gs
inc
add
add
add
cltd
adc
dec
dec
jge
push
push
add
mov
jg
push
sub
scas
add
mov
in
loope
add
sub
addr16
adc
insl
data16
xor
push
dec
add
mov
add
inc
add
pop
adc
add
rorl
add
add
out
add
outsb
mov
and
mov
add
mov
cld
mov
jnp
add
add
out
ja
loopne
add
cmpsb
add
dec
insb
in
mov
xchg
add
add
mov
jno
pop
pop
fiadds
test
add
data16
movsb
add
add
jge
sbb
or
jp
pop
jge
mov
ds
enter
imul
dec
clc
push
push
add
sbb
jmp
mov
cmp
pop
push
push
outsl
push
add
pop
jno
sbb
rolb
addb
inc
add
dec
and
mov
sub
daa
xor
sti
scas
ljmp
sub
xchg
or
add
xor
pop
add
mov
inc
movsb
add
testb
xor
jmp
fistpl
sbb
xchg
jo
xchg
add
mull
mov
add
cmp
push
add
addb
xchg
xchg
fidivrs
cmc
add
xchg
lcall
pop
int
sub
push
jl
stos
cmp
das
stc
mov
aaa
inc
add
mov
add
arpl
add
push
mov
adc
and
arpl
imul
inc
gs
xchg
add
mov
jnp
add
aas
or
testl
cmp
dec
icebp
mov
or
add
stos
in
dec
fdivrl
inc
pop
fwait
mov
mul
add
mov
insb
lods
jnp
lds
add
sbb
or
dec
xchg
mov
movsb
add
add
mov
js
adc
add
test
and
mov
add
popf
and
mov
sahf
cld
test
add
mov
rolb
xchg
hlt
add
inc
add
clc
push
add
dec
dec
outsl
sbb
pop
nop
add
in
pop
dec
push
ret
add
stc
cwtl
or
cmpsb
add
jecxz
inc
add
add
push
xlat
adc
mov
or
mov
insl
nop
add
ret
jno
mov
adc
pop
push
adc
fiadds
fistpll
pop
jbe
mov
paddsb
cmpsb
add
iret
pop
mov
push
in
rolb
cld
adc
adc
cmp
insb
mov
bound
mov
add
insl
push
add
adc
orl
fcomps
pop
stc
dec
movsb
add
add
add
xchg
div
roll
add
mov
cwtl
subl
inc
add
add
cmp
add
add
add
int3
mov
add
daa
sub
ret
add
xlat
adc
add
addr16
add
flds
imul
test
mov
aas
adc
movsl
add
sub
ds
adc
loope
cmp
add
mov
push
add
xor
xor
pop
dec
pop
push
add
add
mov
add
mov
lock
mov
insb
pop
inc
neg
and
pop
bound
mov
mov
lret
pop
xchg
add
icebp
pop
les
scas
xor
add
int3
sbb
add
int3
enter
in
dec
mov
data16
xchg
inc
add
test
cmpsl
cmp
mov
add
add
dec
sbb
add
pop
data16
hlt
add
xchg
add
and
mov
addb
add
add
xor
imul
add
mov
lds
sbb
loope
add
mov
xor
std
push
add
add
xor
mov
aam
ja
sahf
repnz
push
add
add
sbb
ljmp
test
push
add
aaa
cs
pop
sub
mov
jp
sub
and
cmovae
add
xor
loope
addb
lods
push
add
add
add
adc
cmp
add
lret
mov
sbb
mov
inc
add
or
adc
dec
int3
inc
add
add
loopne
inc
add
add
adc
mov
dec
add
mov
add
int3
pushf
push
jmp
add
cmp
in
mov
add
mov
add
imul
xchg
add
xor
xchg
and
add
adcl
xor
adc
out
out
shrl
cmpsl
jae
add
das
clc
pop
pop
or
fadd
lock
xchg
add
and
data16
add
test
ret
pop
mov
xor
jmp
imul
sahf
sub
enter
scas
ficoms
add
and
push
pop
mov
test
ficompl
add
add
dec
jae
jb
pop
enter
popa
lcall
push
cmpsb
add
xor
mov
push
add
inc
add
and
mov
add
loop
pop
push
add
addb
cs
add
mov
dec
and
pop
hlt
add
pop
rcll
lcall
adc
fsubs
js
pop
dec
push
add
out
pop
movsb
add
add
sub
test
mov
push
sbb
mov
outsb
or
fdivrs
flds
and
int
mov
add
add
push
in
push
loopne
out
mov
push
dec
jns
hlt
add
pop
addr16
xchg
icebp
xor
lahf
pop
inc
add
add
jg
roll
mov
jle
ret
add
push
add
mov
int3
bound
mov
daa
and
pop
xor
pop
xchg
loop
test
adc
aad
aam
repnz
outsl
dec
mov
and
lahf
test
movb
add
add
mov
xor
jl
aaa
nop
add
movb
inc
or
dec
mov
or
fcomps
std
imul
and
test
lahf
inc
mov
cmp
aad
and
scas
add
lock
mov
add
jnp
pushl
add
data16
add
mov
adc
inc
out
xchg
rorl
mov
pop
mov
and
add
mov
add
test
add
popf
enter
cmpsl
push
add
add
mov
dec
sti
push
add
add
and
lea
dec
shl
add
int3
mov
lret
lods
add
rolb
loop
xchg
sub
mov
mov
stos
xor
and
mov
std
fidivrl
lcall
jae
sub
pop
bound
mov
xlat
add
add
popf
testb
and
jl
sbb
repnz
insb
lahf
dec
adcl
rorl
sub
cmpsl
in
aad
add
xchg
cs
repz
jge
push
je
int
add
add
out
popa
std
inc
add
pop
jge
add
pop
cmp
je
inc
les
push
fistpll
stc
out
cmp
add
add
sbb
push
mov
cmp
add
sub
pop
jle
add
add
add
sbb
std
mov
add
bound
mov
sub
pop
push
add
sbb
add
and
add
fldenv
cmp
pop
pop
mov
cmpsl
mov
adc
test
call
add
int3
inc
in
out
add
jb
mov
sahf
dec
movb
and
mov
add
daa
cltd
mov
vmovdqu
mov
push
add
loope
outsb
dec
enter
insl
push
sahf
std
dec
mov
mov
fiadds
cmp
jne
shll
pop
addb
mov
adc
xor
js
add
add
das
jmp
add
add
les
mov
pop
xchg
add
cwtl
inc
out
jo
add
push
add
shufps
jmp
pop
xchg
add
and
mov
notl
test
mov
xor
fwait
int3
popa
cmc
pop
add
add
mov
out
add
add
add
add
add
dec
push
mov
dec
add
mov
add
cmpsl
or
add
add
pop
cmc
adc
sub
sub
fucom
add
iret
pop
mov
or
add
add
dec
cmpsb
add
lahf
push
hlt
add
outsb
mov
dec
movsb
add
loope
inc
add
insb
into
mov
les
sahf
jo
je
and
or
jl
adc
addr16
add
add
sahf
and
cld
or
imul
add
jl
pop
hlt
add
fiaddl
js
add
add
inc
std
sub
or
inc
in
mov
fdivrs
add
sub
add
add
ret
dec
or
add
add
movsl
popf
outsl
cmp
add
mov
or
add
jle
outsb
pop
jno
fildll
mov
sbb
add
mov
dec
stc
push
fmull
nop
add
add
aaa
add
and
mov
xchg
xor
add
daa
inc
add
adc
push
je
dec
and
test
add
ja
mov
sbb
outsb
ja
and
add
add
ja
sub
arpl
add
pop
mov
call
add
test
add
mov
add
xchg
daa
fnstenv
fwait
ret
test
xchg
add
mov
rcrl
add
mov
cmpl
subl
daa
pop
rolb
out
inc
pop
jp
cli
or
add
add
or
add
or
add
aas
inc
movb
cmp
xor
rolb
loopne
loopne
bound
mov
pop
addl
movsl
mov
cmp
push
in
popf
add
mov
sbb
or
mov
mov
push
add
mov
mov
pop
daa
mov
xor
mov
stos
inc
add
es
add
add
ror
fistpl
movsb
add
lods
push
add
pop
in
mov
and
test
dec
cmpl
ljmp
out
ja
test
and
sub
add
lahf
mov
sbb
xchg
test
and
mov
lahf
adc
cmp
add
mov
in
clc
mov
add
aad
mov
pop
addb
add
push
rolb
sub
add
add
add
inc
add
les
mov
or
xorl
sti
mov
enter
dec
call
pop
or
outsl
sub
add
aad
repz
outsb
jbe
mov
and
mov
adc
xor
add
imul
nop
add
push
filds
test
add
insb
int
jp
inc
cld
jns
add
add
hlt
add
cltd
push
stos
pop
clc
arpl
push
rol
add
push
loope
adc
out
jmp
add
ret
jmp
inc
hlt
add
fidivs
cs
jns
push
add
loop
imul
add
pop
dec
add
add
add
xchg
mov
add
add
mov
push
add
and
addl
add
pushf
int3
pop
fdiv
nop
add
mov
pop
repz
mov
jmp
dec
popf
pop
imul
dec
scas
inc
dec
dec
push
push
mov
or
mov
xchg
add
aaa
jne
inc
mov
push
add
mov
add
add
dec
and
movsb
add
xor
add
add
mov
cmc
cmp
add
fists
xchg
push
add
xchg
sbb
mov
nop
add
inc
lret
xor
add
adc
add
lahf
insb
jge
in
dec
adc
std
add
mov
inc
add
jns
add
add
jp
add
jns
xchg
cmc
iret
arpl
out
lcall
sbb
scas
push
add
sbb
sub
add
repnz
in
scas
sub
test
add
jg
add
rorl
add
add
or
je
clc
stos
xor
push
add
lods
lcall
fucomp
add
sub
xlat
add
jae
inc
shll
cmp
scas
push
add
les
popf
std
stos
je
jecxz
mov
xchg
dec
out
xchg
add
hlt
add
loop
sub
xchg
sbb
das
lods
cld
jno
add
adc
jge
xchg
insl
cmp
fnsave
out
inc
add
rcr
movsl
jbe
cmc
fcomip
sbb
insl
fadds
imul
add
or
in
xor
cmpsb
add
fildll
add
add
lret
sub
addb
js
mov
in
mov
add
stos
stos
movsl
cmp
add
nop
add
lret
mov
push
add
mov
add
lea
insb
iret
xor
mov
data16
add
sarl
jae
add
add
pop
inc
push
icebp
movb
out
mov
add
je
loopne
xchg
rcll
add
mov
jge
ret
cmp
lds
add
xor
mov
cmp
push
add
add
icebp
pop
sbb
js
cli
aam
add
add
sbb
add
data16
in
iret
daa
pop
sub
xchg
add
add
or
pop
out
pusha
add
mov
or
int3
pop
ret
inc
insb
fcompl
test
fld
mov
add
push
add
jns
pushf
jne
pop
ds
add
push
add
je
inc
add
sti
mov
pusha
add
adc
test
add
outsb
sub
lds
add
fildl
mov
loopne
push
lds
sub
add
std
repnz
mov
sub
add
jge
test
add
shrl
out
mov
mov
xlat
repnz
add
add
filds
mov
add
add
mov
mov
add
and
imul
push
fs
movsb
add
pop
icebp
xlat
mov
add
jae
add
add
sbb
add
js
in
push
pop
push
imul
mov
jns
ljmp
outsb
out
outsl
movsl
add
clc
fildll
pop
rolb
aam
in
das
pop
out
jne
add
add
add
rolb
inc
add
pushf
mov
lret
dec
sub
add
inc
add
add
push
add
jl
scas
push
sub
lds
add
sub
sbb
xchg
sahf
jns
add
add
cmp
stos
add
mov
add
lcall
pop
popf
fldl
ss
mov
imul
mull
rolb
adc
add
adc
pop
fldt
inc
jae
and
push
add
add
rolb
push
push
add
aaa
adc
add
add
mov
xchg
add
lret
in
add
add
add
push
push
add
xchg
or
fildll
add
jmp
scas
inc
add
iret
lahf
getsec
cmp
add
lahf
sbb
mov
sbb
stos
into
add
mov
push
movb
cltd
sub
xor
or
pop
jnp
out
gs
out
jns
mov
push
add
das
lods
jg
add
xor
jmp
jg
xchg
add
add
add
add
inc
add
cld
lods
test
pop
imul
add
sub
lea
lea
add
lret
adc
dec
bound
mov
xor
and
add
add
mov
call
icebp
daa
sub
add
xchg
add
insl
fstpl
sbb
stos
and
add
add
or
add
sbb
mov
cmp
add
out
mov
or
add
and
mov
mov
add
pop
loopne
jmp
cli
dec
and
lds
icebp
add
adc
jae
add
outsb
ljmp
arpl
xchg
add
jg
ret
sbb
add
arpl
add
and
popf
adc
pop
and
cltd
inc
add
add
int3
loope
cli
lods
lock
rolb
xor
or
jl
imul
cmp
mov
mov
aaa
inc
xor
xchg
add
inc
add
cli
and
loop
lds
add
loopne
xchg
add
xchg
add
andl
inc
movsl
xchg
and
mov
std
mov
fyl2xp1
cltd
scas
push
add
repz
out
out
xor
inc
push
add
cld
adc
dec
mov
lds
add
add
into
pushf
and
mov
inc
addr16
int
xor
jne
xor
inc
add
loop
push
add
cmpsb
add
add
add
cld
jno
add
idivl
mov
add
add
add
fisttpll
mov
and
mov
std
adc
add
inc
add
push
popf
jecxz
cmp
mov
push
sbb
add
pop
add
mov
popa
mov
adc
mov
into
cmpsb
add
cmc
and
add
mov
jnp
dec
pushf
call
pop
jbe
ret
sub
add
dec
adc
pop
jl
jbe
mov
inc
test
mov
xor
add
testb
push
test
mov
add
pop
and
mov
mov
call
xor
add
mov
inc
dec
cmp
rolb
mov
mov
mov
cmc
test
mov
imul
add
imul
dec
dec
add
mov
add
xchg
mov
add
testb
popf
daa
and
add
add
sti
daa
jne
jae
aam
pop
cmp
adc
adc
and
add
ja
sbb
mov
ja
jge
mov
mov
mov
cmp
push
add
add
mov
or
fildll
add
shll
mov
mov
pop
lods
cltd
dec
inc
xchg
sti
xchg
rcrl
dec
inc
add
mov
sub
mov
call
mov
mov
outsl
inc
add
cmp
aas
mov
daa
dec
xor
mov
addr16
aam
add
add
add
stos
mov
cwtl
or
sbb
into
lock
mov
sbb
mov
in
add
mov
sub
pop
lock
sbb
out
rolb
cmp
or
cmp
cmp
cmp
cmp
or
jle
inc
xor
mov
cltd
stos
xor
add
dec
and
adc
and
mov
out
cmp
dec
mov
mov
aaa
pop
out
adc
mov
sub
add
jecxz
add
add
mov
mov
add
outsl
faddl
xor
ret
cmp
inc
add
lcall
cli
xchg
mov
cli
cwtl
pop
pop
push
rolb
mov
ss
push
mov
fisubrs
in
cs
aaa
sbb
in
lods
lret
fimuls
jb
scas
or
sub
gs
mov
loopne
daa
xchg
add
sbb
push
in
pop
sub
jge
mov
mov
cmp
dec
xchg
sub
mov
test
cltd
jns
mov
mov
add
add
mov
add
outsb
add
mov
dec
mov
outsl
mov
cmp
add
xorl
push
add
in
rolb
add
mov
mov
push
rorl
xchg
rol
add
dec
mov
in
pop
dec
sub
cmpsb
add
into
inc
add
das
push
add
add
lea
data16
jbe
jmp
fcompl
popa
cmp
mov
add
xor
and
sbb
repz
add
fsub
add
jb
mov
add
add
push
aad
imul
mov
xchg
add
repz
xchg
ja
insl
mov
lret
rolb
ds
rolb
hlt
add
sbb
sahf
and
pop
aam
mov
popl
mov
mov
scas
js
rcll
xchg
push
popf
out
insb
adc
or
pushf
push
add
add
rolb
push
push
les
gs
add
mov
inc
or
jno
cmp
or
add
xor
add
mov
rolb
dec
sub
mov
repnz
mov
jbe
gs
add
add
lcall
or
add
lock
push
add
sub
add
add
jo
sub
lods
add
insl
xchg
adc
pop
pop
loopne
sarl
fiaddl
mov
out
je
dec
jne
jo
or
arpl
inc
js
xchg
addb
add
inc
jo
out
sbb
imul
add
inc
bound
mov
add
dec
dec
les
das
test
ja
inc
pushf
and
add
add
addb
sbb
push
add
nop
add
jns
pop
jb
xchg
add
mov
or
add
xchg
daa
dec
repnz
xor
popf
cmp
adc
add
addb
out
jmp
push
cmpl
jbe
ds
pop
popf
stc
xchg
dec
push
push
add
dec
xor
mov
add
add
stos
popa
xorl
add
add
mov
cmp
add
cmp
lock
aad
stos
mov
pusha
add
cmpsl
add
hlt
add
fisttps
or
and
in
push
lret
mov
dec
ficompl
or
fcmovbe
int3
push
xor
aas
add
mov
xchg
add
iret
dec
in
fstpt
jb
pop
mov
push
cmp
or
add
cmp
push
pop
add
mov
add
into
pusha
add
dec
inc
add
push
add
data16
add
inc
lret
aam
fdivl
loope
jg
add
add
in
or
les
fs
add
fcmovnu
aaa
jbe
inc
add
movsl
dec
call
test
or
inc
shll
xor
and
mov
add
rorl
add
arpl
mov
fcmovbe
add
push
insb
mov
mov
add
xor
jb
pop
loop
or
and
mov
fwait
stos
sti
adc
mov
mov
movsl
in
idivl
jae
add
cltd
lahf
mov
jp
xchg
add
fldl
loopne
push
add
addb
dec
call
add
inc
and
das
xor
xchg
jmp
add
mov
add
sbb
and
lock
addr16
mov
fcoms
xor
cld
push
add
hlt
add
add
add
add
mov
sahf
test
call
stc
pop
mov
lock
out
lcall
cmpsl
push
pop
add
pop
mov
add
add
popf
fs
movsl
or
add
inc
add
xor
adc
adc
call
cmpl
sub
add
and
mov
call
add
insl
xchg
add
cmc
xchg
lret
mov
aas
mov
pushf
call
add
fbstp
add
push
add
aam
cli
inc
add
add
add
fdivrl
sub
add
test
push
add
std
movsl
jno
mov
jb
bound
mov
jae
mov
add
and
and
mov
xchg
add
add
outsl
dec
outsb
les
fstpl
gs
stos
addr16
lret
add
mov
fwait
cmpsl
stos
js
add
lret
in
inc
imul
in
mov
add
mov
add
mov
mov
fisttpl
pop
push
sub
adc
add
add
mov
adc
push
add
fdiv
add
ret
gs
add
xchg
pushf
xor
xor
adc
xor
or
test
pushf
flds
mov
push
mov
mov
add
add
add
or
fdivrl
add
popf
dec
xor
sbb
sub
cs
sahf
and
aad
sbb
or
add
add
mov
scas
mov
cli
aaa
mov
add
add
add
int3
pop
dec
fcmovnu
arpl
cmp
add
inc
add
shrl
xchg
mov
and
jbe
test
mov
or
mov
cwtl
aas
roll
mov
mov
ret
pusha
add
add
mov
cld
adc
push
add
add
sbb
xchg
jo
cs
addb
jge
inc
add
shrl
mov
or
or
mov
add
add
cmp
fwait
repz
daa
mov
enter
add
mov
iret
sbb
lods
lods
xor
xchg
add
in
xor
mov
int
jp
jae
jecxz
add
xlat
test
push
add
adc
or
loope
cmp
sbb
mov
rolb
add
lret
or
pop
daa
clc
data16
mov
sub
int
loopne
adc
add
lds
add
mov
push
out
xchg
xchg
scas
test
xor
pop
mov
inc
add
pop
inc
add
cmp
xor
adc
stos
add
pop
testb
add
sbb
sbb
push
iret
pop
les
dec
enter
pop
loope
add
test
add
imul
pop
bound
mov
add
pop
test
cmpsl
clc
xchg
add
cmp
add
add
lcall
add
add
rolb
mov
add
add
add
or
add
mov
bound
mov
int
push
aaa
cmp
arpl
add
or
and
mov
push
cmp
dec
pop
cmp
das
jno
rolb
loopne
dec
mov
sub
add
enter
mov
add
add
cmp
mov
sbb
sbb
add
pop
daa
pusha
add
fwait
pop
xor
adcl
jae
and
mov
test
add
repnz
rolb
lcall
dec
mov
xchg
jl
add
dec
xor
cmp
mov
lea
add
pop
shrl
sbb
dec
sbb
lret
mov
or
movb
push
add
int
push
add
js
add
fadds
add
icebp
rol
add
das
icebp
xchg
loopne
cmp
xchg
add
add
mov
dec
add
pop
inc
bound
mov
or
add
add
sub
mov
mov
js
pop
ret
push
add
test
roll
mov
inc
inc
repnz
pop
pusha
add
push
push
add
xor
and
add
cmp
and
mov
or
je
sbb
add
bound
mov
add
addb
movl
add
lcall
or
mov
mov
dec
rcr
sbb
lea
mov
ds
dec
mov
sub
fldt
leave
xchg
xchg
add
add
lret
popa
and
inc
or
add
push
add
cwtl
jp
add
rolb
je
xchg
add
je
mov
ja
into
xchg
pop
inc
ret
enter
popf
xor
aas
adc
sub
jp
rcll
cs
pop
std
imul
inc
add
jl
sbb
push
add
adc
jnp
jp
add
add
push
mov
test
cmpsb
add
add
xor
xor
pop
mov
lret
add
sahf
mov
xchg
add
mov
xor
das
adc
jns
sub
adc
stos
adc
dec
xchg
add
inc
mov
mov
mov
les
mov
push
in
pop
ret
mov
lcall
jbe
mov
add
lds
dec
int3
mov
popa
jmp
and
mov
fwait
inc
add
mov
push
add
add
pop
sub
add
cwtl
push
add
jmp
adc
mov
lcall
mov
pop
push
adc
add
dec
cmp
test
add
mov
lret
xor
push
bound
mov
mov
add
push
add
adc
and
jae
stos
xchg
and
cwtl
imul
inc
add
rolb
repnz
jle
addb
les
cmpsl
inc
aam
jmp
xor
push
mov
mov
and
add
mov
cmp
addb
add
sub
pop
mov
ljmp
add
jecxz
pop
lret
push
jne
imul
xor
add
add
add
add
xor
add
add
mov
out
xor
add
stc
push
jns
sub
aas
call
testl
stc
lcall
loopne
in
int3
xchg
add
test
enter
add
push
push
mov
pop
jecxz
out
rolb
mov
fistl
add
add
test
add
aam
xchg
push
stos
sbb
into
xchg
add
add
jp
aad
add
dec
sub
arpl
cmp
xor
jmp
add
inc
jecxz
mov
cmpsb
add
add
add
add
sbb
std
stos
add
mov
mov
lcall
or
jbe
xor
xor
add
dec
icebp
stos
out
xchg
mov
in
push
and
mov
repz
lcall
add
push
add
fwait
lds
std
push
add
add
xchg
add
lahf
rolb
rolb
mov
add
pop
cmp
into
xchg
add
mov
scas
add
mov
mov
add
pop
add
mov
add
add
inc
sti
stos
cmp
add
addr16
arpl
push
push
add
xchg
cmp
ret
adc
mov
out
add
push
add
cmp
mov
push
add
add
or
inc
or
add
fwait
pop
mov
rolb
add
sbb
aas
jge
xchg
add
or
add
sub
mov
ret
scas
push
add
xor
mov
adc
int3
push
add
sub
sub
dec
dec
movsl
and
add
aam
int3
jb
cwtl
ret
ljmp
pop
test
add
ret
jne
push
ja
add
sbb
add
ja
add
mov
push
sub
xchg
aas
sub
or
mov
imul
loopne
je
stos
dec
xor
jns
mov
pop
sbb
ret
rcrl
and
dec
pop
add
add
add
add
popa
scas
dec
arpl
xor
jne
leave
push
lcall
lods
sub
addb
gs
fwait
dec
rolb
leave
lret
xchg
mov
bound
mov
ret
dec
das
pop
lret
xor
add
dec
test
add
loopnew
dec
xor
daa
cmp
jae
inc
add
ljmp
sbb
movsl
bound
mov
add
aas
int3
xlat
fadds
xor
imull
lock
mov
add
int
xchg
pop
lods
jnp
push
add
scas
aad
mov
imul
mov
sahf
xor
mov
add
stos
add
mov
mov
inc
add
aam
sahf
dec
mov
sub
mov
add
outsb
cmp
rolb
add
jb
add
mov
push
add
fwait
push
add
and
mov
add
add
or
inc
add
add
data16
inc
add
sub
pop
loop
jbe
outsl
roll
rolb
and
xchg
inc
add
add
add
mov
or
mov
out
mov
das
lock
lret
add
mov
add
xor
add
jb
adc
add
and
push
add
add
push
popa
mov
movsl
add
mov
mov
dec
cmp
add
dec
loopne
sub
add
add
repz
xor
xchg
mov
cmp
jl
cwtl
repz
or
add
loop
data16
dec
pop
jb
cwtl
sub
in
in
mov
mov
add
add
mov
ja
movsb
add
push
add
sub
mov
testb
jg
addb
mov
add
mov
add
jge
add
add
inc
add
add
mov
and
and
add
mov
xchg
xchg
add
jo
mov
xor
mov
mov
scas
jp
cltd
dec
and
mov
lock
loopne
pusha
add
push
gs
pop
xor
lcall
add
add
mov
jle
adc
xor
jmp
push
add
jmp
push
add
jg
add
add
mov
cld
adc
add
xchg
push
add
mov
sarl
lahf
outsl
rol
popf
cmp
repnz
add
add
inc
add
add
push
sti
pop
mov
hlt
add
cmc
xlat
or
add
loop
inc
add
add
fimuls
fwait
shrl
out
ja
xchg
add
setle
add
shrl
add
push
sbb
add
jmp
cmp
add
enter
int
fmul
cwtl
mov
shrl
add
mov
xchg
add
push
jno
add
add
add
add
aaa
inc
add
or
or
mov
push
add
add
in
jne
sbb
out
fucomip
or
jno
lahf
xchg
add
adc
movsl
insb
movl
push
push
and
xchg
pop
xlat
dec
in
testb
add
sub
cmpsl
test
add
add
add
outsb
push
add
mov
push
and
mov
push
xchg
rcrl
inc
add
jmp
and
mov
cld
cmp
xor
call
data16
je
push
or
ds
add
decb
add
xor
call
add
mov
add
adc
fwait
xchg
add
mov
add
add
jbe
cmp
add
sub
mov
js
lds
int3
sbb
outsl
test
ja
pop
pop
fnstsw
mov
pushl
pushf
shl
or
add
push
and
movsb
add
inc
leave
mov
into
roll
mov
add
sub
inc
add
add
in
rolb
rolb
sbb
mov
into
cmp
pop
add
pop
mov
cmc
dec
lods
xor
stc
push
roll
pop
test
mov
add
push
add
add
inc
rorl
popf
in
hlt
add
mov
int3
push
loopne
ret
rcll
mov
cmc
addr16
cmp
insl
jno
imul
add
outsl
mov
dec
fcmovnu
popf
xchg
add
in
inc
add
movsb
add
add
push
sbb
add
orl
jg
sbb
mov
flds
and
mov
add
add
or
add
add
pop
or
or
xlat
mov
stos
push
pop
mov
push
xor
push
pushf
and
push
add
pusha
add
clc
or
pusha
add
mov
lods
push
lds
rolb
pop
cmp
jns
xchg
enter
inc
cli
orl
push
pop
or
cmc
xor
test
fistps
add
add
mov
add
in
xor
pushf
gs
jp
add
aaa
cmp
jmp
add
test
mov
add
add
std
call
sbb
into
push
int3
fcomip
add
add
inc
add
add
cmp
in
xor
int3
or
cmp
add
add
add
add
add
push
mov
push
fcomps
xor
addb
push
add
cmp
add
add
mov
add
fstps
cmp
add
inc
add
mov
or
cltd
xor
imul
scas
or
adc
test
mov
jmp
xchg
lock
add
pop
arpl
or
push
pop
add
lret
xchg
ja
addb
aas
xchg
add
pop
and
add
add
add
inc
iret
add
adc
pop
sbb
ds
loop
sub
fistl
add
dec
cmpsl
sbb
dec
js
and
mov
sub
test
jl
pop
jge
lcall
pop
call
add
cmp
lret
cmc
mov
push
pop
iret
and
cltd
mov
xchg
inc
and
and
mov
movsb
add
pop
cltd
mov
stc
cltd
leave
mov
add
lods
jns
cmp
add
ficompl
pop
jge
sub
js
hlt
add
jnp
jge
pushf
pop
xchg
mov
sbb
scas
mov
mov
and
mov
add
loopne
jno
xor
add
adc
cmpl
test
mov
outsb
pop
cmc
fdivrl
cld
push
add
movsb
add
push
add
mov
addb
lods
inc
push
add
add
add
cmp
mov
add
aam
mov
mov
ret
aas
mov
xor
xchg
mov
add
mov
or
loope
xchg
sub
add
add
dec
insl
pop
push
cwtl
loope
mov
test
js
push
add
xchg
add
cs
xor
add
loope
add
add
mov
jb
dec
mov
add
add
mov
fimuls
mov
add
push
add
sbb
rcrl
adc
out
inc
add
mov
dec
mov
int3
xor
add
xor
xchg
add
cwtl
inc
add
add
imul
iret
sub
sbb
add
inc
add
outsl
pop
mov
inc
sbb
fstl
xor
push
adc
mov
pusha
add
loopne
rolb
push
add
add
pop
mov
add
add
inc
adc
scas
add
mov
add
add
mov
sahf
sub
add
addr16
xchg
stc
inc
add
mov
add
loop,pn
push
lret
mov
gs
add
push
addl
cmpsb
add
jno
out
push
or
in
mov
add
add
pushf
xchg
in
inc
add
add
stc
cmpsb
add
sti
sub
sbb
xchg
stc
repnz
cmp
dec
leave
add
cli
rolb
data16
enter
mov
mov
add
sbb
fwait
daa
push
add
mov
push
addb
mov
add
jmp
test
add
popf
lcall
pushf
dec
add
mov
cmp
jge
push
push
jo
movsl
xor
pop
rcll
add
sahf
sti
out
stc
aam
xchg
add
add
add
gs
sbb
xor
clc
jo
and
push
add
xlat
inc
add
add
add
inc
lock
dec
jae
dec
dec
cmpsb
add
add
add
pop
data16
add
sub
insl
sbb
or
js
popf
adc
jecxz
loope
dec
pop
mov
add
mov
daa
clc
ljmp
lret
call
jp
sub
mov
popa
push
add
int
stos
je
ficoms
jmp
add
js
add
popa
mov
imul
clc
lgs
aad
or
add
add
mov
loop
pop
lcall
cmp
push
add
push
addb
add
scas
inc
pop
cli
mov
add
sub
fcomi
add
data16
sbb
ret
pop
arpl
in
es
inc
add
rcr
stos
jbe
jg
lods
fisubrl
aaa
shll
movsl
push
add
inc
add
incb
cmp
add
add
add
jmp
dec
xor
frstor
subl
add
dec
push
mov
cmp
or
sub
cmp
pop
push
add
add
push
ret
xor
add
in
inc
fistps
mov
push
add
cmp
add
rolb
inc
add
mov
add
insl
xchg
add
pop
scas
js
xchg
jge
pop
pop
cmpsl
cmp
pop
xchg
add
add
cmp
mov
add
mov
xchg
add
lahf
test
arpl
imull
pusha
add
lret
loopne
mov
testb
or
ja
add
pusha
add
mov
xor
nop
add
daa
nop
add
add
sarl
add
inc
mov
add
jbe
and
mov
add
arpl
movb
add
mov
add
cs
bound
mov
mov
mov
stos
imul
pop
fld
mov
add
test
add
daa
dec
jb
pop
xchg
add
add
mov
add
fnstsw
add
aas
pop
mov
add
pop
and
add
add
add
sub
mov
pop
sbb
mov
icebp
ret
loopne
icebp
fisubs
sub
daa
mov
insb
aas
leave
fmull
mov
mov
xor
movsb
add
add
aas
inc
add
stc
or
mov
add
mov
test
sbb
je
dec
sub
popa
imul
mov
lret
mov
rolb
leave
push
and
lods
sub
loop
rolb
fxch
push
xorl
mov
jns
add
addr16
or
cli
adc
and
and
pop
mov
nop
add
xor
jnp
loope
add
pop
sbb
add
add
mov
stc
lock
mov
xor
inc
mov
sub
add
cmpsb
add
add
flds
mov
inc
add
add
add
dec
aaa
push
add
add
sbb
add
ret
fists
mov
lret
into
aam
loopne
push
add
insb
movsb
add
cmp
rolb
pop
les
out
xor
pusha
add
sub
les
pop
icebp
fsts
sbb
mov
add
add
cmp
ficompl
cwtl
testb
add
jmp
add
fbstp
add
sahf
arpl
imul
add
mov
add
add
add
dec
sbb
sahf
adc
movsb
add
add
popf
cmp
out
add
inc
cld
imul
push
sub
popa
addr16
add
into
xlat
push
jl
push
add
sbb
add
addr16
mov
add
add
add
push
add
add
push
call
pop
adc
mov
mov
test
sub
add
bound
mov
add
pop
add
mov
add
add
mov
add
jmp
add
mov
add
add
lahf
pop
hlt
add
cmpl
sti
mov
ret
enter
shrl
add
dec
outsl
inc
sub
das
mov
adc
shrl
pop
stos
xlat
jecxz
jge
inc
add
mov
jle
add
add
inc
ljmp
add
loope
daa
out
sbb
in
push
add
rolb
pop
cwtl
jns
adc
mov
daa
dec
add
sub
hlt
add
adc
mov
sub
fisttps
clc
ja
mov
dec
in
rolb
call
pushf
rolb
fs
xchg
movsl
adc
fiadds
add
mov
sub
add
mov
testb
and
loopne
outsb
ret
sbb
mov
dec
adc
outsl
push
add
stc
addb
sti
out
mov
ja
cwtl
pop
push
add
pop
in
add
add
icebp
int3
sbb
loope
pop
sbb
or
dec
scas
mov
pop
test
xor
add
lods
xor
add
mov
pop
fnsave
dec
xchg
adc
mov
add
lods
and
mov
stc
add
js
add
sub
mov
lods
inc
add
cmp
inc
bound
mov
cli
mov
jle
rolb
aaa
cltd
pop
enter
sbb
sbb
xchg
add
iret
push
add
inc
rolb
add
mov
lret
xor
mov
push
add
cltd
mov
mov
in
add
add
lcall
testl
mov
std
cmp
add
mov
add
cmp
push
ljmp
mov
fnsave
push
add
push
add
add
add
add
in
test
mov
rolb
mov
add
je
mov
roll
lods
movsl
push
fwait
mov
dec
inc
sub
ja
add
push
enter
jmp
add
add
add
push
add
daa
test
xchg
jae
push
addb
add
add
add
dec
int3
dec
es
lods
cwtl
in
nop
add
dec
shl
add
je
inc
pop
or
push
sub
xor
pop
out
cmpsl
jo
jmp
add
dec
insb
scas
jae,pn
cmp
add
insb
mov
mov
add
add
sbb
add
sub
movsl
stos
pop
mov
adc
sbb
cmp
mov
inc
add
pop
dec
inc
jb
movsb
add
add
in
adc
inc
testb
jb
dec
sbb
dec
mov
add
add
add
aaa
lds
into
xor
add
ds
add
stos
push
add
add
mov
mov
xorl
add
out
jecxz
fucomip
leave
in
add
add
mov
xchg
jo
outsl
loop
cmp
sub
cmp
jno
pop
imul
sub
add
cs
sbb
add
add
std
rolb
fs
mov
jne
out
and
mov
add
idivl
mov
pop
push
add
add
fisttps
or
add
xchg
mov
je
data16
xor
lcall
and
adcl
jns
fsub
add
push
pop
inc
ja
stos
xlat
cmpsb
add
sub
add
pop
fcmove
mov
testb
daa
mov
jns
add
mov
pop
call
add
add
add
xchg
out
push
and
jns
xchg
push
dec
je
stos
mov
add
add
or
jg
add
adc
push
add
mov
loop
and
inc
add
add
inc
add
imul
es
pop
or
ficompl
hlt
add
aaa
jmp
outsl
mov
add
add
add
mov
es
jl
cmp
push
mov
xchg
mov
bound
mov
ds
add
jp
add
rorl
addb
jnp
add
mov
cmp
push
cmp
gs
daa
pop
aad
fisubl
addl
dec
and
or
push
add
inc
add
xchg
jg
test
test
test
add
inc
dec
cmpsl
mov
cmpsl
fstl
and
or
add
testb
mov
lahf
and
insl
in
ja
std
mov
les
addl
xchg
jl
inc
xrelease
outsb
sub
xchg
lret
outsb
jae
add
adc
addb
add
sub
das
sbb
add
sub
rolb
sub
cmp
mov
add
jb
fldl
stos
sar
mov
adc
sub
mov
mov
add
add
cmp
add
mov
add
aas
cmp
lods
mov
xchg
shll
add
jg
add
scas
shr
add
adc
ficompl
lods
add
rolb
add
jnp
add
add
mov
jns
add
mov
sbb
add
in
mov
lock
ficompl
add
add
cli
push
cmc
rcll
pop
pop
nop
add
add
dec
xlat
and
ret
add
xchg
add
or
mov
pop
cmp
outsb
mov
xchg
add
fwait
add
outsb
sbb
jnp
add
cmp
push
cmpsb
add
imul
add
ljmp
gs
mov
jg
add
or
dec
jnp
xorl
flds
mov
adc
push
add
jne
xor
mov
js
daa
jp
push
cld
jecxz
jns
push
push
fistpll
adc
sbb
in
mov
add
add
je
icebp
aam
pop
pop
jl
dec
sub
sti
xchg
out
jecxz
add
add
addb
fcomip
pushf
rcrl
add
repz
mov
cltd
mov
and
shr
loop
mov
xchg
xor
jb
add
out
jmp
or
repnz
add
mov
sbb
pop
idivl
pop
jecxz
add
popf
inc
gs
int3
mov
sbb
mov
push
xor
mov
loopne,pn
mov
int3
mov
add
push
ficomps
and
mov
loop
insl
dec
mov
inc
add
aas
out
addr16
ljmp
scas
mov
sbb
sub
fsub
add
xchg
add
jl
add
add
add
dec
dec
popa
outsb
repz
mov
int
mov
nop
add
xchg
sub
aam
jae
inc
pusha
add
sbb
add
mov
cltd
imul
mov
aas
cmp
add
push
add
jno
add
add
fdivr
movl
lods
aam
inc
add
inc
add
data16
or
loope
popf
jb
mov
pop
jmp
add
add
add
xchg
add
pop
cmovs
das
xor
inc
add
daa
mov
mov
pop
dec
test
mov
call
xor
cmp
xlat
insl
mov
push
pop
insb
jne
out
je
inc
add
mov
mov
push
popa
bound
mov
mov
push
sbb
mov
mov
add
cmc
ds
add
jbe
sbb
out
cltd
sbbl
add
add
add
mov
add
adc
loop
nop
add
popa
dec
mov
add
and
scas
addr16
mov
xchg
add
xor
lea
jno
add
mov
and
mov
outsb
or
add
add
or
add
or
add
jnp
mov
add
xchg
pop
xchg
movsl
xorl
push
sti
sub
xor
sbb
add
pop
push
add
jg
add
add
lea
cmp
mov
push
mov
in
inc
add
xchg
stos
mov
pusha
add
dec
or
inc
add
xchg
add
daa
arpl
add
add
add
mov
add
add
inc
sbb
mov
adc
js
imul
add
and
jnp
push
add
xor
dec
rcrl
add
add
aaa
sub
add
add
jo
repnz
adc
mov
testb
sub
xchg
sbb
sbb
add
add
xchg
add
loope
add
fcoms
jnp
jecxz
add
cld
lret
out
das
bound
mov
testb
add
jg
mov
iret
mov
testb
jecxz
add
adc
cmpsl
xchg
ljmp
mov
mov
or
jbe
repz
out
jns
cmp
mov
and
adc
lock
mov
add
inc
leave
rolb
into
inc
xor
scas
mov
sbb
inc
repnz
add
add
adc
sahf
dec
je
pop
adc
imul
add
sub
add
dec
dec
and
jg
ds
sub
insb
lret
lcall
inc
add
in
add
push
push
add
mov
mov
add
sahf
setns
push
rolb
sbb
je
fsubl
mov
in
std
add
adc
jnp
iret
pop
lahf
add
mov
test
sub
mov
jmp
pop
dec
lret
faddl
scas
insl
iret
shrl
movb
adc
std
orl
xor
ficoml
sub
adc
popf
push
add
add
add
jecxz
aad
std
mov
add
add
pushf
les
mov
push
popa
out
add
fisubs
add
pop
mov
jge
insl
inc
rolb
inc
fcmovb
leave
out
jmp
movb
add
imul
add
stos
mov
adc
in
ret
jne
lcall
sub
sub
hlt
add
test
lret
sbb
cld
and
mov
repnz
add
inc
add
aas
jbe
push
std
sub
sbb
add
push
std
push
add
daa
int3
mov
push
add
rolb
push
jp
scas
inc
add
pop
cmpsb
add
add
xchg
outsl
and
das
push
jns
jno
sti
cmp
lods
insl
mov
stos
push
add
mov
aad
sub
sbb
add
mov
ficomps
push
xor
pop
add
dec
jo
enter
and
mov
mov
xchg
add
add
inc
add
jecxz
add
repz
add
push
add
cmp
incl
mov
or
add
mov
pop
addb
add
mov
loope
jne
push
add
loopne
jle
add
in
jb
cmp
outsl
aam
movsb
add
add
and
mov
sahf
sarl
test
cmp
add
mov
gs
icebp
or
jmp
rolb
jl
add
jg
mov
add
pop
sbb
add
adc
add
pop
je
fcoms
jg
bound
mov
mov
mov
push
sbb
add
fdivrp
add
jmp
add
lods
insb
rcrl
xchg
inc
les
popa
jo
inc
xchg
add
mull
aaa
pushf
imul
jns
xchg
add
daa
testb
cli
popa
xlat
adc
and
outsb
fwait
jl
ljmp
inc
xor
jmp
add
add
push
add
add
call
dec
dec
popa
xor
sub
repz
out
inc
cmp
out
test
mov
jle
adc
pop
movsb
add
add
in
inc
movsl
push
shl
add
int
out
ja
sub
das
sub
lret
lods
mov
pop
add
add
loopne
xor
dec
xor
aas
dec
dec
loop
fnstsw
add
dec
add
cmp
ds
loopne
loopne
push
add
rolb
sub
inc
add
in
test
sti
cmp
testb
es
pop
fidivl
lret
jnp
add
xor
imul
clc
mov
dec
mov
add
movsl
call
lds
xchg
data16
add
add
add
test
add
push
jg
addb
mov
xor
out
sbb
jp
xchg
add
stos
adc
sbb
sub
pop
adc
test
daa
xchg
dec
xchg
add
or
add
sbb
ror
sub
add
cmp
sub
mov
add
aam
in
push
add
hlt
add
loopne
and
test
cmp
int
aam
stos
cwtl
sub
data16
add
mov
rolb
pop
adc
cs
xor
mov
mov
mov
add
stc
hlt
add
or
add
xor
cwtl
dec
mov
add
mov
les
leave
fisttpl
add
xor
cmc
int3
gs
mov
lret
jns
popa
cmp
lret
testb
cmp
add
add
xchg
mov
add
xchg
push
add
mov
add
clc
sub
add
nop
add
jmp
jg
ds
insl
adc
and
mov
add
cmpsl
sub
mov
dec
mov
and
mov
cmc
jle
stc
arpl
or
daa
mov
mov
xchg
push
jbe
adc
inc
add
inc
add
sbb
adc
lret
push
add
addb
fisttps
testb
cmpsb
add
aam
cmp
jl
add
mov
ffreep
dec
sti
testb
dec
inc
add
push
inc
bound
mov
