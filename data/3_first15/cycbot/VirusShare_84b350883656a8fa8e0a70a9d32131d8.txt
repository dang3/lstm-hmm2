cltd
jmp
sub
pop
mov
ficompl
cmp
xor
dec
pop
outsb
test
test
jmp
ret
divb
sub
add
notb
mov
arpl
mov
add
add
inc
add
sub
movsb
push
add
cld
mov
rolb
hlt
xchg
add
std
les
mov
mov
bound
pop
fisubrl
adc
push
fwait
data16
fwait
in
scas
lods
data16
sub
pop
fxch
sbb
xor
ja
add
test
rcll
jne
iret
sub
push
sbb
and
insb
clc
pop
stos
mov
pop
dec
cli
int3
jmp
cwtl
out
add
cmp
jbe
push
push
fs
push
insl
and
xchg
jmp
xor
cmp
addr16
rorl
int3
and
outsb
rorb
mov
addb
out
clc
cmp
sbb
insb
aas
push
push
add
mov
cli
scas
cmp
xlat
call
cmp
das
xchg
jmp
push
push
insb
jecxz
bound
rcr
mov
int
mov
add
insb
cld
sbb
loope
inc
add
repz
mov
test
sub
pop
lods
fsubl
popf
bound
rcr
xchg
sbb
add
sub
hlt
and
arpl
add
lods
mov
xor
xchg
addr16
scas
pop
cmp
scas
stos
scas
fnsave
int
pop
mov
lods
mov
add
imul
add
push
push
add
mov
or
sub
jno
xchg
jns
cltd
movb
cld
xor
loope
pop
repnz
in
add
rolb
aaa
imul
push
arpl
jo
xlat
jecxz
sbb
push
cli
adc
push
adc
pop
stc
mov
outsb
jb
add
cli
jge
add
pop
jae
mov
dec
rorl
add
mov
jmp
mov
cli
sahf
aam
mov
shll
mov
add
adc
jne
jmp
push
arpl
push
mov
les
mov
cmc
pop
out
das
test
xchg
fwait
adc
dec
pop
insl
pop
sub
dec
cmp
mov
add
and
or
add
cmp
push
add
lcall
jmp
lods
push
push
fldl
insl
jl
sbb
sub
es
outsb
inc
add
movsl
xor
push
icebp
pusha
add
adc
mov
xor
test
push
or
or
arpl
cwtl
and
arpl
in
or
xor
jle
pop
xor
mov
add
ficoms
sbb
pop
insl
leave
rolb
xchg
mov
and
cmp
mov
and
clc
mov
addb
mov
mov
jns
subl
sub
jle
inc
xchg
in
sub
fdivrl
ljmp
movsb
add
add
cld
push
push
push
push
push
push
push
push
notrack
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
ret
add
add
mov
js
push
mov
jge
inc
mov
mov
dec
pop
dec
dec
inc
clc
jnp
addb
sub
sbb
jecxz
jne
lcall
xchg
loope
imul
push
aam
xchg
bound
add
adc
and
incb
ror
mov
add
stos
rorl
add
cmp
dec
mov
sahf
ss
and
push
iret
gs
or
add
jl
push
add
testb
add
add
jge
sbb
fs
or
cmp
in
jnp
push
inc
loope
roll
jae
or
sbb
lea
or
sub
dec
fidivs
int
stos
dec
adcl
rolb
js
sahf
jb
sub
push
mov
jmp
mov
out
jecxz
push
negb
dec
xor
add
dec
push
add
dec
mov
rorl
xchg
cmp
ljmp
das
push
dec
jns
pop
pmulhw
je
add
add
mov
push
add
push
inc
add
mov
pusha
add
push
mov
add
ucomiss
cmpsb
loop
cmpsb
decb
xchg
data16
sub
nop
in
lret
xor
add
add
sub
leave
imul
cwtl
xor
les
divl
pop
test
aaa
aas
fnstsw
sbb
sahf
movsb
and
test
jg
pop
and
push
mov
xchg
out
addb
mov
adc
inc
add
jge
outsb
fbld
stos
mov
add
inc
add
jle
mov
adc
xlat
out
repnz
subl
fstl
push
jge
and
ss
in
sub
loopne
add
jecxz
jmp
jmp
mov
and
aaa
shll
out
popa
repz
cmpsl
pop
in
dec
or
loop
adc
rolb
adc
insb
faddl
jmp
pop
adc
add
add
jge
fimull
mov
or
add
dec
jns
js
xchg
mov
mov
pushf
adc
dec
push
je
jecxz
cs
mov
call
aaa
rolb
inc
add
add
out
sub
and
xor
int3
sub
push
std
push
outsb
sbbl
nop
les
std
mov
outsb
dec
orl
stos
mov
inc
add
cmp
pop
mov
xchg
lahf
push
addb
mov
add
cmc
notl
out
dec
outsl
aaa
or
loope
ss
test
xor
pop
sub
fisubrl
and
and
lret
adc
jb
xchg
sahf
inc
add
frstor
pop
loope
js
lret
addb
daa
int3
scas
xchg
cld
lret
addr16
hlt
test
loope
pop
out
sbb
out
xor
add
addr16
cmp
push
push
jne
pop
sbb
lcall
icebp
js
cli
or
dec
data16
movsl
add
popf
or
les
jl
aad
pop
lea
sub
scas
sbb
add
shrl
dec
stos
cmpsl
xor
in
xchg
dec
ds
xchg
jnp
push
add
pop
stos
out
into
xchg
je
pop
mov
pop
push
sbb
cmp
cmp
xor
inc
add
add
aam
sub
add
lock
add
lds
push
sub
and
insl
mov
ret
jmp
add
fdivrp
int
sti
mov
add
inc
lret
add
mov
popa
cmp
add
add
out
and
rorl
inc
sub
stos
mov
popa
das
pusha
add
fnstenv
add
mov
dec
popf
or
jp
jp
adc
addl
rolb
int3
mov
sahf
xchg
lahf
ficomps
ds
scas
jns
int
or
fnstenv
repnz
and
cltd
or
in
test
imul
cmc
aaa
sub
sbb
rorl
jecxz
jmp
rolb
out
fsubrs
and
mov
sbb
mov
dec
pop
js
cmc
popf
mov
icebp
inc
shrb
bound
in
xchg
bound
gs
lea
add
enter
dec
sub
adc
repnz
pushf
adc
xchg
jo
lods
shll
insb
loop
out
jle
ja
jp
daa
jne
xchg
lret
push
push
jp
sub
xor
push
pop
mov
xlat
js
sbb
and
outsl
into
mov
insl
adc
cmp
movsl
sbb
ds
sub
mov
sarb
mov
push
dec
jmp
lea
lds
mov
mov
xchg
hlt
hlt
lret
pop
xor
out
jg
sbb
add
in
pop
movsl
cltd
mov
add
dec
xor
inc
add
add
and
lret
loop
push
xor
or
add
in
out
add
jbe
int
repz
xchg
outsl
adc
pop
mov
js
sti
jle
add
jp
mov
mov
add
push
jle
pop
sbb
mov
xor
add
mov
fwait
push
and
xor
jl
add
fildll
out
rorl
aas
in
mov
mov
scas
call
jl
add
std
sub
jo
sub
mov
pop
pop
lret
ret
add
pop
add
jp
push
adc
stos
movsl
movsb
cmp
push
out
popf
xchg
and
pop
mov
hlt
scas
adc
rol
xchg
repnz
fimuls
sbb
sbb
cmp
test
push
or
rolb
pusha
add
mov
test
aam
jne
jmp
mov
add
lret
fs
into
fwait
mov
fisubl
lret
pushl
mov
out
jae
or
jle
cmp
add
push
cmp
js
fcmovnbe
xor
cltd
or
jge
fwait
ljmp
sub
rolb
jmp
loop
das
dec
xchg
cmp
sub
fdivrl
jne
leave
and
pop
push
dec
addb
outsb
gs
push
es
arpl
push
inc
or
push
cmp
iret
int
pushl
fimull
add
loope
lds
fildll
test
stos
pop
or
iret
sbb
push
push
xor
jecxz
add
dec
push
xchg
sbb
lea
sbb
jae
add
sbb
add
aas
and
out
shrl
sub
push
xchg
jg
sub
ret
xchg
lcall
aam
outsb
aad
in
jl
insl
jno
inc
add
lods
outsl
addb
mov
and
adc
in
xchg
loopne
or
jnp
arpl
mov
les
addb
jnp
popa
add
inc
add
jp
or
pop
xor
enter
or
shll
adc
push
hlt
cltd
insl
hlt
dec
or
outsl
push
into
cli
dec
in
push
mov
lock
add
jnp
inc
xchg
pop
scas
clc
lods
push
insl
in
insb
insl
fisttps
mov
add
test
xchg
cmpsl
cmp
mov
add
push
stos
sub
add
insl
adc
jmp
mov
jnp
mov
addb
ss
push
cmp
in
scas
inc
aad
jae
jge
xor
mov
add
sbbl
xchg
dec
fisttpll
inc
add
ja
sbb
test
notb
add
and
rcll
mov
fs
lods
mov
das
dec
dec
and
gs
jmp
and
cwtl
call
fisubl
add
cmp
mov
adc
fnsave
js
xlat
scas
pop
stos
push
inc
mov
jle
jmp
test
inc
add
cmc
jge
fimull
mov
push
sub
xchg
jge
push
sub
mov
pop
ret
push
leave
ret
out
add
gs
mov
mov
popa
sub
rolb
lcall
adc
add
sub
cltd
es
fimuls
add
push
push
dec
int
cwtl
sbb
out
repz
add
clc
loope
mull
pop
mov
call
hlt
cld
outsb
lds
adc
xchg
jb
dec
mov
testl
dec
addb
cmpsl
jnp
mov
outsl
xchg
jbe
sbb
inc
cmp
mov
push
xor
add
mov
lret
sti
les
mov
jno
inc
jp
imul
jg
js
add
push
fcompl
ss
cli
addb
mov
mov
add
rolb
fstpt
sbb
sub
stos
add
inc
add
xchg
adc
or
sbb
clc
jg
mov
mov
addl
dec
pop
test
mov
pop
nop
movsl
insl
rol
add
test
ss
inc
add
push
int3
lahf
out
or
and
fidivrl
lret
xchg
dec
inc
mov
fiadds
add
inc
add
into
les
call
dec
jno
cvtps2pi
add
inc
js
add
js
daa
dec
mov
pop
push
js
lcall
icebp
push
push
xchg
lcall
lea
mov
and
out
bound
scas
fmuls
inc
lcall
mov
fstps
in
pushf
sbb
pusha
add
cld
sub
loopne
mov
add
mov
ljmp
and
shll
jo
xor
mov
adc
pushf
cmp
mov
aad
push
subl
add
cmp
add
pop
jns
test
rorl
jno
fs
xor
cwtl
imul
lahf
repz
mov
mov
add
xor
sbb
jp
lret
add
mov
xchg
mov
bound
enter
push
addb
sub
mov
sub
sub
out
out
xchg
push
repnz
mov
stc
out
jb
xchg
cmp
addb
loop
imul
insb
sbb
clc
xlat
test
pop
cmp
pop
pop
xor
lahf
into
lret
mov
insb
pusha
add
sbb
stos
or
inc
add
aaa
sub
inc
fmul
js
xor
xor
iret
imulb
and
jecxz
repz
cli
push
add
add
and
fistpl
add
daa
loopne
push
movsb
jbe
add
lock
inc
add
movsb
cmp
push
fimull
adc
add
or
inc
add
jns
pop
sbb
movsb
inc
add
mov
adc
fmulp
push
jns
pop
jg
sub
add
imul
imul
addr16
adc
stos
xlat
mov
mov
add
mov
cmp
test
and
xchg
jo
add
adc
fbstp
hlt
and
or
jb
in
mov
inc
add
pushf
cmc
push
push
div
push
add
push
mov
jno
xchg
pop
clc
jns
push
cld
mov
sahf
repz
pop
or
mov
or
jl
ja
xchg
jo
inc
add
std
pop
stos
dec
testl
test
ss
fildl
dec
lret
ficoml
imul
outsl
cmp
ret
das
add
aad
movb
and
cmp
pop
sub
jle
add
sbb
cmp
fldt
or
sub
mov
popf
jbe
jbe
and
jg
faddp
add
xchg
pop
test
xor
sbb
pop
repz
push
popf
xchg
movsb
add
inc
add
scas
adc
lock
add
lahf
mov
xor
mov
test
add
mov
arpl
push
movsl
xchg
jp
out
cs
or
popa
jns
inc
addb
outsl
and
push
rep
push
aad
shll
ds
cmp
push
push
jb
ret
fsubrs
addr16
ja
xchg
movsl
xor
inc
add
in
addr16
sbb
dec
sub
stos
icebp
lods
rcll
inc
cld
std
xor
jb
int
xchg
rolb
mov
mov
inc
lods
sub
addr16
cli
push
and
sub
fldl
stos
sbb
add
ss
pusha
add
add
inc
push
in
jnp
add
sbb
and
sti
push
xchg
and
mov
inc
add
insl
lret
sbb
push
test
les
and
xchg
aam
dec
in
aam
jo
out
fdivrl
add
add
movsb
mov
fisubl
dec
lods
bound
out
stc
jmp
push
inc
push
bound
inc
imul
jmp
out
fnstsw
add
push
add
cmc
push
fidivl
cmp
bswap
sbb
inc
add
adc
pop
scas
ss
or
icebp
roll
dec
lret
push
mov
and
cmp
lea
sbb
xchg
mov
movsl
je
push
leave
lods
int
loopne
cmpsb
sub
add
jge
insb
cs
lret
adc
mov
pop
inc
add
iret
mov
and
xor
pop
in
mov
pusha
add
and
add
mov
fmull
out
dec
mov
dec
xchg
and
xchg
addr16
shrl
ret
mov
test
nop
dec
add
test
repnz
pop
push
push
add
rolb
jecxz
loop
into
push
sti
inc
add
pop
sbb
jmp
inc
aas
rcrb
add
mov
xor
add
ds
mov
push
sbb
fildll
push
inc
add
insl
lahf
mov
adc
repz
inc
add
cmp
notl
in
jb
mov
daa
push
push
out
bound
into
inc
dec
andl
or
mov
and
and
insb
enter
or
out
fstpl
sbb
push
cltd
es
pop
imul
cmc
push
clc
push
lds
scas
outsl
into
inc
lret
jl
sub
and
gs
in
into
fmul
inc
arpl
lcall
mov
add
repz
in
dec
nop
mov
in
push
mov
fcmovnu
xchg
xchg
les
push
nop
jmp
ds
test
xlat
cmp
cmp
jbe
loopne
stos
pushf
adc
loop
fstpt
push
pushf
pop
mov
loope
cmpsb
dec
mov
xchg
or
addb
xchg
cltd
mov
fwait
pushf
inc
jo
push
add
inc
mov
jl
pop
scas
iret
loop
ss
scas
xor
xor
stos
jp
pop
cmp
push
mov
pop
movsl
sbb
subl
scas
rcrl
mov
mov
cs
and
std
inc
rolb
popa
add
cwtl
fnstenv
testb
aaa
cli
idivb
aas
sahf
shlb
jb
icebp
stos
daa
mov
nop
shl
sti
mov
add
popa
pushf
sbb
mov
jl
pop
cmp
cmp
add
jle
testl
add
sbb
cmp
orl
or
push
add
fdivl
cltd
sub
mov
sbb
mov
pop
fwait
mov
out
push
push
je
arpl
dec
xor
addb
or
inc
add
jo
decb
les
jg
ljmp
rcrl
xlat
shr
jmp
jae
jae
rorl
test
add
cmp
push
adc
loopne
xor
popf
ror
cwtl
stos
sbb
xchg
leave
fiaddl
les
sbb
jns
add
add
pushf
mov
adc
xor
pop
push
imul
add
cmp
stos
sbb
testl
in
or
shll
iret
xchg
sub
cmc
xor
in
js
outsb
or
pop
push
icebp
out
mov
add
das
movsl
pop
cmp
out
push
inc
add
or
loopne
add
mov
les
ljmp
lds
adc
xchg
jg
adc
arpl
xor
dec
in
add
std
test
movsl
test
jg
mov
lret
push
xor
es
inc
jo
lret
sbb
imul
rolb
add
mov
add
inc
sbb
dec
sbb
scas
ds
inc
add
sbb
call
pop
sbb
xor
sbb
add
inc
push
add
stc
cwtl
dec
movsb
inc
adc
push
inc
add
mov
dec
pop
aad
add
das
es
loop
out
sub
mov
cmp
loope
in
in
sub
mov
mov
add
in
dec
push
les
dec
scas
xchg
mov
xchg
add
mov
adc
and
sbb
dec
adc
cmpsb
push
push
ja
add
sbb
fisttpll
dec
push
add
lods
xor
add
jl
mov
lcall
inc
addb
and
dec
push
mov
mov
jbe
mov
scas
xor
mov
call
sub
pop
lds
add
inc
xchg
pop
in
push
xchg
pop
repz
mov
inc
add
lock
lcall
add
xlat
test
inc
inc
add
push
xchg
mov
or
mov
add
scas
in
push
in
enter
dec
mov
adc
sti
mov
mov
movsl
adc
adc
add
mov
hlt
jae
fsts
popa
sub
dec
movsb
xchg
lcall
xor
xchg
push
jecxz
dec
xchg
imul
mov
stos
pop
push
in
insl
cmpsb
pop
mov
ret
in
fdivp
aam
add
insb
jno
inc
sub
jne
lock
test
test
and
and
mov
arpl
jns
test
jmp
push
fisubrs
aam
movsb
adc
push
ds
pusha
add
cmp
or
dec
mov
stos
adc
sub
push
addb
dec
mov
andl
jne
fistps
dec
push
movsl
sub
xlat
inc
add
push
fildl
mov
cmpl
bound
jge
xchg
jecxz
jne
scas
push
jns
movb
int
and
adc
arpl
loopne
jl
stos
insb
loop
add
xlat
rolb
pop
xchg
gs
mov
mov
andl
enter
lahf
sub
mov
inc
add
mov
inc
in
insl
xchg
mov
add
pop
popf
xchg
mov
dec
out
ja
arpl
call
add
ret
test
or
dec
push
add
or
add
dec
cmp
adc
leave
cmpsb
out
mov
test
mov
add
std
push
insb
int3
sbb
inc
mov
pop
rcll
pop
shrl
inc
hlt
mov
add
xchg
xlat
repnz
jbe
hlt
sbb
enter
mov
add
les
jbe
pop
mov
push
fsts
mov
sub
add
nop
xchg
das
adc
push
add
rolb
sbb
stos
out
inc
add
xchg
loop
sub
add
movsl
pop
fwait
cwtl
das
jns
xchg
imul
dec
aaa
outsb
pop
sbb
fadds
xchg
int
sub
fisubs
add
or
add
pop
jnp
jmp
incl
and
sub
addb
add
sub
xor
add
sub
or
cmc
lret
add
push
loope
in
or
add
ret
pushf
xor
xor
cmpsb
test
lcall
test
jns
sbb
in
sub
xchg
sub
das
movb
movsb
cmc
cwtl
mov
mov
add
out
loope
cmp
rcr
add
xchg
or
rolb
pop
fidivs
addb
dec
push
lods
icebp
xor
push
popf
adc
push
or
imul
int
ja
pop
aad
push
or
jg
xchg
movsl
jmp
into
or
push
pop
pop
ss
aaa
cld
scas
push
lods
adc
xor
push
ret
pusha
add
cmp
push
xlat
icebp
pop
dec
pop
jecxz
stos
cli
in
adc
mov
mov
add
xor
dec
sub
adc
xlat
dec
xlat
xor
inc
add
inc
mov
test
neg
popf
cmp
inc
add
rolb
mov
sbb
rolb
mov
push
xchg
jmp
test
inc
loopne
loop
pop
addb
cwtl
add
out
add
xchg
add
add
mov
imul
push
fisttpll
aam
mov
cli
xchg
push
lret
lcall
ret
and
xor
enter
push
mov
add
cmpsl
and
or
fs
mov
cmp
push
addb
shrb
mov
bound
ljmp
xor
add
mov
mov
inc
fdivrl
aam
in
pop
pop
popa
aad
repnz
rcr
mov
add
mov
mov
rolb
pushf
ret
xor
cmp
aas
mov
sbb
addb
xor
bound
cmp
pop
arpl
dec
pop
stc
arpl
jns
add
loopne
adc
leave
dec
xchg
fwait
push
pop
cmc
push
je
ja
mov
repnz
sbb
insl
lahf
hlt
clc
jge
into
cld
mov
push
add
clc
les
mov
pop
lret
mov
addb
xor
sbb
jb
data16
repnz
add
add
data16
lret
push
stos
sbb
inc
add
or
insl
pusha
add
pop
add
pop
js,pn
mov
pop
xchg
mov
es
mov
mov
popf
test
and
xlat
push
les
or
inc
pop
xor
xchg
cmp
pop
add
adc
imul
inc
ret
sbb
cmp
loope
into
mov
add
and
pop
push
jl
in
and
adc
iret
sub
and
mov
inc
add
into
cmp
mov
into
mov
addb
mov
inc
insl
stc
sbbl
mov
dec
rcll
sbbl
int3
shll
xlat
mov
das
movb
loop
push
movb
mov
in
jmp
xchg
lea
jbe
popa
add
std
cmp
ljmp
push
add
push
into
push
add
inc
cmp
mov
setne
nop
adc
aas
es
mov
add
stc
les
pop
idiv
sbb
fcom
xchg
jle
out
pop
std
call
leave
cmp
jmp
pop
pop
insl
lahf
inc
add
mov
add
jns
in
jge
dec
xor
add
dec
pop
popf
and
xchg
cmp
std
adc
lret
outsb
xchg
dec
dec
std
and
bound
sahf
push
sub
arpl
push
mov
xchg
out
dec
gs
mov
mov
inc
add
cmp
mov
mov
into
cmp
ja
lret
stc
or
lret
jnp
push
add
pop
mov
inc
sbb
add
aas
jno
cmp
add
mov
mov
lods
lcall
gs
xor
mov
pop
push
jbe
in
stos
leave
ds
pop
fistpll
pop
ja
pop
rolb
stos
jg
push
lret
mov
adc
fisubl
add
add
dec
or
dec
inc
fwait
push
pop
jmp
aaa
pop
push
push
xchg
and
add
cmp
out
mov
outsl
hlt
pop
inc
das
arpl
leave
jecxz
adc
push
mov
fs
jno
push
mov
add
sub
ja
adc
cmp
in
fiaddl
cmp
out
aaa
lahf
jl
out
xor
mov
add
push
mov
push
push
xor
mov
xor
sbb
xchg
push
stos
test
sbb
add
rcrl
fwait
ret
fbld
xchg
pop
mov
dec
addr16
cmp
lods
sub
stos
loope
das
out
mov
push
inc
mov
add
adc
out
jno
icebp
adc
fistpl
idivb
mov
into
fsubl
add
add
add
jb
pop
mov
add
dec
sbb
rolb
mov
add
inc
or
add
cmpsl
pop
cmpsl
jbe
pusha
add
or
stos
cltd
sahf
in
in
jg
shrl
or
cmp
pop
out
subl
mov
jae
xchg
sbb
aam
imul
pop
jp
cld
cmc
cmp
popf
call
mov
add
dec
pop
cmc
mov
addl
add
mov
lods
stos
pop
push
jae
das
cmp
outsb
popa
xor
cld
and
rcll
repz
ret
lea
test
sub
add
insb
jecxz
mov
daa
mov
ret
mov
mov
or
xchg
lahf
daa
incb
rorl
outsl
jg,pt
jo
sbb
clc
and
jmp
or
add
negl
push
add
lahf
enter
mov
add
xor
or
mov
mov
call
nop
jne
push
mov
jbe
sbb
cwtl
ret
jge
loop
add
add
xchg
bound
out
jbe
addb
mov
xchg
sub
call
add
mov
add
addb
scas
push
inc
sbb
in
push
mov
clc
jp
decb
or
pop
and
out
lods
add
add
lea
add
inc
insb
mov
in
add
xlat
mov
fs
xor
js
jo,pt
cmp
add
mov
sub
add
add
popf
je
inc
out
add
fistpll
negb
cmp
scas
in
aas
stos
enter
addb
xchg
pop
push
les
mov
adc
adc
mov
or
mov
add
addb
add
icebp
jp
xchg
sti
faddp
inc
icebp
jns
push
in
dec
mov
sbb
cmp
fs
imul
mov
int3
pop
pop
xchg
mov
cli
mov
and
lcall
pop
sti
push
dec
push
pop
mov
sbb
cmp
jb
sub
cwtl
mov
outsl
mov
xchg
push
addr16
int3
dec
add
push
and
push
gs
insl
push
add
add
sbb
sbb
shl
nop
pushf
in
adcl
pop
xor
mov
repnz
ret
ja
mov
inc
mov
loop
mov
test
sar
or
icebp
iret
addb
add
add
sbb
mov
aas
jg
xchg
mov
pop
cmp
push
pop
pop
movsb
fildll
add
mov
inc
ja
push
lcall
and
add
aas
sbb
scas
dec
dec
xlat
mov
mov
dec
ja
aad
in
orl
add
or
sbb
rolb
mov
cwtl
pushf
and
add
cld
lods
mov
arpl
jnp
add
dec
sahf
xchg
jg
les
sahf
cmp
add
shll
imul
add
les
addb
cwtl
fimuls
and
sub
popa
xchg
and
push
in
das
cmpsl
cld
xchg
pop
mov
rclb
jp
test
popl
gs
testl
arpl
inc
add
xor
cltd
dec
dec
push
xchg
scas
push
add
pop
adc
mov
adc
insl
sbb
dec
xlat
inc
add
jns
push
fsts
dec
fdiv
mov
jmp
push
imul
cltd
dec
mov
and
fcmovne
cmp
mov
out
cmp
mov
sti
xchg
add
adc
cmp
pop
jle
push
in
lods
lahf
sbb
lds
xor
testb
je
dec
fsubs
add
sbb
out
inc
add
push
add
add
inc
cltd
imul
stos
jnp
fbstp
jbe
cmp
mov
popa
movsl
daa
stos
xor
add
clc
mov
pusha
add
add
notl
xor
stos
aam
jo
int
lret
in
bound
ds
mov
lea
push
cmp
ljmp
sub
sub
lcall
pusha
add
imul
mov
cs
xchg
or
xor
inc
sub
bound
fstpt
out
pop
fsubr
fmuls
loop
dec
sub
xchg
shl
dec
sub
stos
arpl
push
fnstsw
psrld
lods
ja
shrl
xor
dec
popf
push
pop
iret
ret
ljmp
jno
add
addb
mov
ret
fmulp
mov
mov
addr16
pop
pop
icebp
sbb
jnp
adc
rcrb
nop
scas
sub
xchg
add
jae
cmc
cmp
add
cmp
cmpsb
adc
mov
xor
jbe
in
inc
add
and
cmp
push
jno
dec
cli
pop
xor
addb
shl
dec
inc
xchg
out
xchg
dec
or
pop
pop
or
mov
add
mov
push
and
dec
mov
lret
sti
arpl
cmpsb
xchg
sti
jl
stos
or
push
xchg
and
arpl
mov
push
ret
or
dec
int3
sbb
add
fcmovbe
sub
xor
outsb
cltd
psllw
add
and
neg
out
mov
mov
jge
add
sub
ffree
add
cwtl
xchg
in
ja
dec
and
mov
in
inc
add
mov
shll
dec
cmp
dec
mov
dec
addb
iret
push
fs
sub
fadds
daa
leave
xchg
mov
xor
addb
add
xchg
sbb
push
cwtl
mov
xor
addr16
das
cmc
outsb
jnp
cwtl
ljmp
dec
push
cltd
mov
popa
jmp
cmpl
out
lock
pusha
add
pop
cmpsb
sub
cld
lock
push
xchg
mov
mov
dec
dec
cmc
stos
arpl
sti
or
xor
out
pop
stos
xorl
ds
lahf
in
fisttps
mov
inc
add
mov
adc
int3
pop
xchg
cmp
lock
xchg
mov
add
cmp
lds
sahf
sbb
in
adc
or
ret
pop
lds
adcl
inc
aaa
mov
lds
add
push
mov
add
subl
stos
add
mov
xor
std
inc
add
jmp
add
pop
pop
addr16
ljmp
push
cmp
add
out
add
and
data16
add
stos
stos
mov
ret
add
mov
add
in
rclb
xchg
sub
data16
ds
mov
test
jle
enter
dec
jbe
nop
sub
stos
cmc
dec
das
testl
pop
out
push
xchg
dec
jns
movntps
dec
inc
jae
pop
frstor
cmp
add
popf
adc
xchg
sarl
sarl
notb
cmp
imul
sti
gs
cmp
add
int
xor
into
jno
cltd
addr16
ss
jbe
add
cmc
jle,pn
add
popa
push
push
int3
ja
rcrb
add
aaa
fidivrs
stos
xchg
or
mov
push
push
xchg
pop
es
cmp
add
mov
jns
pop
repz
cmp
call
fmull
xchg
js
cmpsb
add
xlat
jns
pop
sub
or
scas
insb
fsubrs
mov
out
mov
sbb
pop
mov
popa
xchg
movsl
sbb
imul
push
pusha
add
adc
sbb
shll
testb
test
pop
ret
and
jecxz
mov
inc
outsb
lds
add
cld
pusha
add
cld
lret
scas
sti
inc
add
jmp
je
add
sbb
sub
shl
repz
dec
popa
pop
xlat
stos
push
pop
stc
xor
or
divb
addb
adc
add
repz
dec
aam
negb
imul
push
mov
popa
arpl
xchg
in
cmpsl
pop
sbb
stos
fbstp
addb
cmp
rolb
pop
jns
pop
dec
outsl
add
mov
xor
loopne
cmp
add
daa
popf
xlat
test
push
xchg
cwtl
jno
xlat
cmpsl
push
add
imul
cmp
test
aad
mov
mov
add
imul
insb
cmp
push
test
xor
hlt
daa
dec
mov
jge
push
sub
xchg
fidivrs
daa
outsb
lret
sbb
iret
mov
push
add
xchg
lret
stos
out
and
add
push
ficomps
push
aad
pop
or
test
dec
and
inc
mov
dec
add
or
dec
lods
xlat
add
jmp
mov
xchg
std
jg
or
add
stos
addb
jecxz
jns
dec
push
mov
inc
mov
add
push
add
es
cmpsb
cs
add
iret
lea
add
dec
add
add
mov
shll
mov
cmp
or
add
and
push
xor
leave
xor
mov
add
icebp
xchg
lcall
pop
jl
cmp
cmp
hlt
out
das
repz
jle
sbb
add
sbb
and
ss
loope
sub
dec
jg
sbb
mov
add
ffreep
jb
movsb
adc
add
pop
aaa
cmpsl
add
sbb
pop
add
jne
add
add
mov
push
popf
or
pop
pop
pop
shrl
mov
iret
hlt
das
fwait
addb
xchg
icebp
mov
add
add
cmp
and
fwait
mov
mov
add
outsb
pusha
add
xor
cmpsb
addr16
inc
dec
ds
addb
jne
add
add
xor
and
xchg
inc
add
cmp
sub
dec
xchg
or
mov
add
or
arpl
jnp,pt
lahf
stos
mov
fistpll
mulb
add
imul
jl
out
adc
add
cli
bound
adc
push
test
jo
xorl
pop
xchg
xchg
nop
testb
test
add
add
dec
jg
in
lods
mov
adc
mov
sbb
add
lods
ja
rolb
popf
aad
lret
fmull
ffreep
mov
test
pushf
xchg
jg
or
add
xor
dec
or
test
shrb
lcall
add
adc
pop
in
in
pop
xlat
push
hlt
out
xor
cmpsb
gs
sub
push
frstor
insl
cs
sub
add
pop
std
ljmp
sahf
cmp
call
push
xor
mov
or
insb
test
mov
xchg
push
cmpw
je
lret
cmp
test
xchg
inc
or
inc
add
subl
push
cmpsl
fnstsw
add
pop
jb
jmp
aad
pop
pop
movsl
das
std
xchg
push
add
add
inc
add
lcall
adc
lock
cmpsb
mov
push
add
xchg
in
cmp
add
add
loopne
cmp
mov
ret
pop
pop
jo
cmp
add
mov
sub
pop
lock
mov
jmp
dec
cmc
arpl
add
pop
fs
mov
cmp
pushf
or
out
out
jb
rclb
xchg
loop
push
fdivrp
pop
outsl
mulb
adc
cli
mov
leave
xchg
pop
inc
add
cmp
lods
clc
mov
jbe
sub
and
push
push
mov
gs
cmpsl
rolb
ds
cmovne
push
inc
ret
or
xor
add
dec
xchg
into
mov
push
xchg
pop
fdivl
test
in
dec
lahf
es
add
das
mov
add
test
add
idivl
cld
dec
xchg
cmc
int
mov
jno
fnstcw
lds
pop
dec
mov
xorl
add
in
push
std
adc
dec
movzwl
mov
outsb
cmp
or
add
cld
xchg
sub
rolb
add
dec
and
sub
lahf
inc
add
xlat
inc
add
mov
add
dec
mov
bound
mov
ja
mov
add
jg
sahf
daa
and
mov
sbb
mov
sbb
inc
js
inc
add
add
or
inc
add
inc
movsb
js
mov
xchg
out
adc
popf
ret
lret
es
fnstcw
addb
enter
fisttpl
xchg
mov
jbe
cwtl
cmp
add
or
mov
data16
jge
jae
jmp
icebp
in
daa
les
fnsave
jo
scas
pop
xchg
ret
sub
jl
cmp
push
not
dec
adc
lods
daa
push
insb
and
add
pop
lods
into
sahf
sbb
es
xor
xor
adc
stc
sub
fisttpl
nop
ret
pop
out
jecxz
sub
imul
add
loope
int3
ss
not
mov
pusha
add
rcrl
int
jg,pn
add
test
mov
add
xlat
iret
hlt
pop
out
xrelease
push
enter
test
rep
jle
add
push
sbb
mov
aam
nop
mov
xor
dec
jae
or
std
pop
aam
inc
add
std
jne
adc
xchg
stos
sbb
into
cmp
add
fidivl
lcall
cmp
imul
xchg
push
lret
call
mov
sub
dec
dec
addr16
mov
cwtl
jae
push
xor
jo
push
mov
or
push
and
out
out
add
inc
lds
cmc
pop
out
hlt
adc
mov
cmp
daa
cmp
add
pop
cmpsl
fst
iret
add
and
add
loopne
cmp
ss
mov
jp
addb
add
enter
and
in
mov
ret
xchg
and
mov
or
add
push
sub
in
dec
xor
jmp
in
loopne
or
jmp
xchg
dec
xchg
lds
pop
ficoms
inc
add
inc
add
jmp
loope
mov
add
hlt
test
aaa
xor
cs
add
repnz
add
out
push
sub
xor
pop
xchg
pop
pop
or
int3
push
in
jp
push
or
popf
aaa
scas
in
push
cmp
and
fs
xchg
push
mov
enter
scas
mov
add
ret
jae
adc
notb
clc
insb
jle
add
imul
loope
add
or
in
push
add
das
out
mov
daa
wrmsr
out
dec
add
add
pop
je
add
mov
dec
sub
and
cmp
dec
or
push
ret
testl
adc
mov
rolb
sbb
bound
insl
pop
fbstp
push
pop
mov
sahf
lret
clc
jb
test
xchg
dec
mov
ljmp
mov
add
call
dec
add
enter
lods
push
add
dec
aas
xor
test
ret
inc
cwtl
sbb
cmp
jb
sarl
dec
ret
add
xchg
sub
push
add
aaa
xchg
push
js
xor
stos
dec
adc
aam
push
push
pop
out
icebp
mov
pushf
push
mov
clc
fs
dec
aam
mov
popa
push
ds
add
stos
shlb
std
data16
cld
sub
cmp
mov
mov
rcr
shll
jo
insl
lret
fdivrl
pop
filds
cmp
xchg
out
jnp
sbb
daa
cmp
push
jecxz
and
ret
ja
lock
lock
add
add
mov
leave
jl
mov
mov
xor
inc
lcall
iret
mov
push
add
pop
add
add
lds
nop
jae
add
mov
jg
add
add
lock
sbb
add
lahf
xchg
jno
mov
xor
add
inc
add
stos
adc
lock
imul
xor
add
es
adc
inc
add
push
add
in
sub
lock
lods
aad
inc
adc
std
test
push
add
xchg
or
sarb
enter
cld
pop
jmp
inc
push
sbb
leave
mov
sbb
cmpsb
adc
mov
int3
mov
repnz
mov
and
cli
sub
ror
sti
cmc
adc
mov
xchg
ljmp
lea
sbb
and
test
je
add
ret
rcr
mov
jle
xorl
or
stos
fst
int3
sbb
cmc
ds
xor
sbb
test
sahf
je
ss
mov
sbb
pop
nop
xchg
mov
mov
repz
rol
add
lods
scas
push
sub
jns
push
xchg
lret
push
mov
add
hlt
mov
mov
push
jmp
pop
dec
xchg
out
mov
add
xor
add
stos
out
movsl
out
mov
and
jae
jae
cmpsb
ljmp
dec
mov
test
jns
sub
iret
mov
cli
imul
xchg
cmp
sub
jmp
push
pop
mov
mov
adc
sub
aam
out
push
lret
std
xchg
mov
adc
cltd
pop
sub
adc
mov
inc
scas
lods
or
aaa
add
and
mov
push
std
or
aam
adc
clc
loope
sbb
movsb
lods
jnp
mov
mov
mov
push
push
or
sahf
xchg
imul
inc
neg
jne
add
into
stos
je
testb
mov
pop
adc
inc
cmpsb
icebp
mov
fwait
push
fistl
pushf
das
pop
pusha
add
adc
ds
addr16
ja
adc
jle
aam
rcr
jge
inc
xchg
out
or
add
lahf
fidivrl
lods
icebp
adc
sub
add
cmpsl
pusha
add
les
andl
imul
and
arpl
out
xchg
push
je
or
bound
mov
fcomip
jne
mov
ss
push
dec
pop
inc
add
addb
add
mov
mov
outsb
xchg
xchg
adc
mov
js
sub
jmp
cs
add
enterw
notl
movsb
xchg
addb
fistpll
adc
mov
add
ja
mov
xchg
les
aas
sub
add
push
add
icebp
cmpsb
jb
cld
aaa
cmovge
and
mov
lret
mov
mov
ret
mov
out
mov
push
test
test
adc
mov
push
adc
lcall
jno
sbb
lds
jnp
and
xchg
sbb
mov
mov
sbb
and
add
test
mov
mov
cs
pop
bound
fsubr
es
xchg
sbb
sub
or
insb
jae
inc
add
outsb
lea
mov
pop
daa
shl
mov
xchg
push
lret
xchg
repz
lahf
addb
sub
push
dec
and
iret
bound
inc
push
jne
ret
ret
test
daa
icebp
mov
pop
push
ja
xor
add
xlat
push
das
mov
mov
jbe
mov
xchg
stos
xorl
push
xchg
or
fs
adc
push
pop
mov
mov
jmp
add
bound
fsub
xchg
movsl
in
jecxz
add
add
mov
inc
add
mov
ret
mov
pop
fdivs
pop
or
inc
add
sbb
mov
arpl
pop
test
ljmp
mov
add
cmp
and
push
mov
mov
cli
mov
adc
and
lret
xor
xor
add
cmp
out
hlt
es
ja
sbb
cmp
not
loopne
movb
xchg
jbe
add
push
stos
dec
iret
add
push
and
ds
jns
stc
adc
clc
inc
add
xor
xchg
pop
cmp
xchg
sub
dec
fidivrl
push
add
push
ljmp
bound
dec
test
jne
push
stos
xor
mov
stos
push
into
push
adc
cld
es
and
cmpsb
lock
mov
adc
call
push
adc
fs
out
push
xor
pop
xor
pusha
add
cmp
mov
cmp
bound
xchg
adc
ss
shl
imul
push
pop
and
inc
add
jmp
cmpsb
pop
push
movsb
sbb
rcl
mov
inc
add
cmpsb
cs
ja
push
push
imul
ljmp
jns
fisubl
lret
xor
add
sub
cli
fildl
add
bound
dec
arpl
add
push
ja
scas
cmp
jne
cmp
jge
lds
aas
rolb
add
pusha
add
leave
jle
insb
mov
mov
lods
fadd
xor
jmp
cmpsb
loopne
jno
push
outsl
mov
push
pop
adc
loop
jmp
fisttpll
rolb
out
xchg
fldcw
lods
jbe
rep
ret
or
test
movsb
sub
xor
fidivs
add
jp
push
dec
das
stos
or
les
xchg
xor
add
add
pop
aad
dec
mov
scas
popa
insb
jno,pt
test
adcw
fsubrp
jb
es
bound
icebp
dec
stc
daa
push
mov
or
or
or
push
dec
arpl
xchg
cld
add
inc
pop
jb
sti
ret
cmpsl
fdivrs
adc
and
add
pop
leave
mov
sub
fidivs
xor
jecxz
sub
cmp
push
xchg
bound
jns
aam
test
add
popa
ljmp
sbb
bound
inc
add
clc
push
dec
jae
repz
std
push
into
testl
jecxz
lret
pop
rolb
xor
sub
mov
lret
inc
add
dec
sbb
fs
cmp
std
bound
je
fwait
mov
es
mov
and
mov
dec
lods
cmp
jecxz
add
icebp
dec
gs
out
inc
sub
loop
mov
or
shll
mov
push
pop
stos
pushf
push
incb
call
lahf
and
sti
outsl
imul
mov
daa
xchg
scas
mov
xor
jbe
sbb
rcll
fimuls
pop
imul
xor
and
in
stc
jbe
add
test
lcall
ds
shll
inc
add
cmpl
fsts
push
or
add
jl
pop
sti
insl
pop
mov
push
test
ja
nop
xchg
or
xchg
test
jae
xor
add
cltd
cmp
push
add
push
push
sahf
lahf
in
pop
clc
push
add
jnp
sub
sbb
cmpl
cs
js
jne
das
movsb
xor
jns
add
cmp
mov
inc
add
aam
jle
and
mov
dec
stos
fwait
mov
add
repz
roll
push
mov
movsl
mov
icebp
push
lret
xor
inc
dec
mov
xor
repz
stos
cmp
inc
test
les
jl
pushf
adc
jl
add
sbb
pop
push
push
mov
mov
aam
pop
cmpsl
sar
clc
dec
dec
xor
push
sbb
in
sub
fsubl
add
add
aas
pop
push
into
stos
scas
sarl
icebp
bound
mov
imul
dec
leave
bound
pop
sub
mov
and
push
xor
cmc
add
jge
inc
add
ret
aas
or
add
mov
mov
or
inc
add
adc
adc
stos
in
inc
add
and
mov
sbb
push
jg
push
mov
mov
and
mov
mov
add
jb
aad
jl
flds
mov
push
xchg
push
les
outsl
outsb
or
and
sbb
add
je
int3
icebp
adc
movsl
cmp
clc
rcl
pop
lret
repnz
imul
add
popf
inc
add
add
repz
loop,pt
roll
dec
sbb
xchg
stos
sub
mov
xlat
mov
ret
insl
stc
push
nop
in
in
int3
pop
jl
call
repnz
adc
lcall
mov
dec
test
repnz
pop
movsb
xchg
daa
addb
add
mov
push
mov
dec
in
ljmp
jmp
sbb
adc
cwtl
jle
pop
xchg
stos
sahf
push
jno
add
gs
pushf
jae
add
jg
sub
cld
mov
cld
insl
push
iret
sbb
les
ret
aas
cwtl
repz
xchg
jl
adc
mov
adc
mov
lret
pop
push
jno
js
add
mov
pop
mov
jge
fidivl
add
xlat
push
fsubrs
bound
cmp
punpckhwd
inc
add
dec
fisubrs
sub
out
arpl
jmp
inc
mov
xchg
sub
add
aam
xor
and
imull
daa
aad
mov
ss
pop
pop
mov
inc
add
or
add
push
dec
inc
add
push
int
cs
in
les
push
testb
or
aam
cmp
xor
xor
imul
repz
mov
scas
rcll
mov
fs
inc
in
rcl
mov
mov
lret
lret
jp
add
repz
jecxz
xchg
mov
arpl
adc
adc
dec
or
adc
stos
imul
and
pop
mov
add
jbe
add
lea
mov
cmpsl
lods
aad
fstpl
mov
add
int3
cs
jae
cmp
fs
pushf
clc
int3
inc
add
loopne
ss
jae
pop
cli
ds
or
pop
push
jecxz
xlat
ss
or
cmp
and
push
cmp
sbb
push
push
lcall
add
and
push
dec
repz
pop
mov
leave
push
add
cmp
cs
ja
cmpsb
arpl
nop
lcall
mov
stc
jge
adc
add
movb
adc
cmp
mov
xor
lods
sub
cld
hlt
mov
sbb
lret
jecxz
fwait
mov
mov
add
sbb
fiadds
add
cmp
rolb
movsl
sub
mov
dec
rorb
mov
mov
cmp
mov
add
push
and
jns
jl
dec
cmc
insl
jb
inc
adc
pop
int
fmulp
cwtl
mov
std
fiaddl
add
outsb
test
xor
fcmovne
pop
ret
jns
out
pusha
add
jl
push
jnp
sub
inc
insl
and
sub
cmpsb
sbb
cmp
movsb
jecxz
mov
add
pushf
sub
pop
mov
mov
jne
daa
pop
pop
sub
nop
arpl
mov
pusha
add
inc
daa
test
mov
dec
pop
rorl
in
dec
adc
gs
and
adc
pop
xor
cmp
sub
push
movsl
pop
into
xchg
test
sbb
sbb
add
sbb
add
cmp
lods
cmp
dec
inc
pop
cld
rorl
sbb
test
or
push
sbb
ss
lret
lods
mov
insb
push
xor
and
stc
mov
add
or
dec
iret
sub
icebp
sbb
add
jg
add
add
ret
rcrl
push
xchg
mov
out
jnp
jmp
add
dec
js
cmp
push
scas
adc
inc
add
out
add
cltd
xor
pop
or
shrl
fsubrl
mov
idivb
mov
sahf
rclb
insb
test
mov
loope
and
test
fmuls
add
int3
inc
fldenv
testl
add
push
xor
iret
popl
fwait
push
xor
lgs
pop
mov
jl
in
loop
int3
in
and
arpl
pop
cs
add
add
arpl
or
out
add
push
mov
pop
mov
pop
lods
fisttpll
xlat
jmp
add
or
pusha
add
mov
mov
mov
ret
clc
cmpsb
xchg
pop
xor
bound
rcr
jae
pavgb
dec
pop
test
imul
lds
cld
adc
sbb
and
cmp
outsb
add
xchg
mov
lea
jne
mov
test
add
lea
icebp
movsb
dec
push
sub
dec
push
sbb
xchg
cltd
jg
inc
add
cmp
add
or
ret
leave
fidivrl
mov
aas
xchg
xchg
mov
pusha
add
fldt
std
inc
out
sarl
dec
jnp
pusha
add
movsl
popf
xchg
adc
adc
std
test
cmp
push
push
movb
rolb
add
stos
jecxz
nop
adc
xchg
add
or
jae
push
jnp
stos
movb
push
jp
jp
pop
mov
cmc
xor
cmp
test
cwtl
punpcklwd
ret
add
cmpl
mov
addb
push
std
lcall
jmp
mov
mov
test
adc
push
sub
jl
or
sarb
mov
aad
inc
add
dec
inc
add
lcall
aaa
scas
jg
stos
or
add
icebp
fistpl
jg
and
scas
push
push
mov
jmp
out
mov
decl
adcl
mov
dec
aad
rorl
loope
push
xchg
xor
daa
mov
mov
add
lods
aam
fisubrl
es
insl
lods
and
sbb
out
loope
lea
ret
jae
pop
sbb
push
add
clc
or
imul
jmp
pusha
add
jb
insb
pushf
mov
dec
sti
rcll
aam
xchg
rcll
add
lds
jnp
jl
mov
pop
icebp
add
sbb
or
adc
push
stos
jne
ds
mov
test
nop
mov
out
mov
addr16
leave
dec
cmp
add
js
xor
push
mov
lcall
or
sbb
mov
push
repnz
in
dec
mov
push
ret
in
and
rcl
jl
fs
data16
mov
or
mov
pop
aam
add
and
cwtl
mov
push
push
xor
add
mov
in
jo
and
pop
xor
xchg
aas
mov
je
lods
push
js
rcll
mov
arpl
dec
divl
movsb
xor
add
add
mov
jge
out
ljmp
cmpsb
filds
adc
leave
rorl
stos
push
add
fcoml
call
or
mov
inc
add
add
insl
adc
ret
es
dec
inc
mov
dec
cld
jno
mov
mov
jle
imul
dec
pop
std
mov
jl
add
add
sbb
inc
push
mov
icebp
xorl
mov
add
mov
mov
imul
mov
ja
sbb
gs
add
aaa
notb
das
popa
rolb
lcall
mov
movsb
add
fidivrl
clc
jns
pop
leave
iret
cs
jno
or
mov
dec
in
stos
sub
fidivs
lock
add
push
sti
mov
jp
push
or
out
add
or
cmpsl
movb
and
stc
xchg
push
jae
add
mov
sub
insb
mov
popa
or
lcall
insb
jge
mov
xchg
mov
ljmp
sub
or
lods
fdivrp
fs
hlt
adc
push
push
sub
pcmpeqw
add
movb
inc
add
stc
clc
outsl
dec
pop
mov
bound
addb
dec
push
pop
cwtl
test
or
inc
subl
jns
dec
lods
mov
ss
rclb
sbb
pop
mov
out
fidivrl
leave
fwait
xor
add
fimuls
leave
fwait
out
xor
push
shll
cmp
in
inc
cmp
jb
test
inc
push
test
pop
add
xor
mov
cmc
mov
mov
pop
aaa
cmp
inc
add
add
test
and
adc
popf
iret
inc
add
scas
sub
pop
push
pushf
and
and
pop
sub
add
enter
push
mov
dec
sub
out
jl
inc
add
loop
lea
sbb
sbb
fsubrl
mov
fistl
sar
lock
imul
add
inc
add
dec
mov
push
add
jbe
mov
dec
in
mov
out
in
xor
xor
jmp
das
mov
sub
dec
jge
push
mull
jnp
add
dec
push
jo
ret
adc
ret
add
xchg
adc
jbe
roll
mov
rolb
sbb
xor
bound
xchg
jns
adc
sbb
divb
outsl
xchg
or
leave
jmp
jecxz
and
ret
addb
mov
sub
add
mov
shll
std
bound
and
fwait
inc
add
pop
js
adc
in
repz
addb
mov
dec
lds
add
pop
repnz
jno
shrb
lods
movsl
cli
movsl
and
out
mov
out
dec
sub
and
mov
jae
or
ds
xor
and
sub
addr16
imul
pop
leave
iret
jns
add
clc
std
jns
pop
lds
data16
jg
mov
js
and
pushf
insb
mov
clc
loop
push
mov
add
cmp
je
mov
xor
cli
mov
sbb
pop
nop
fmuls
jne
dec
mov
dec
sarb
pop
fcmovnu
test
mov
imul
mov
sbb
sbb
insl
sub
pop
in
mov
mov
jnp
faddl
ret
pop
mov
mov
mov
and
inc
add
adc
jae
mov
and
fsubrs
cmp
jne
mov
jnp
addb
cmc
xchg
ljmp
in
mull
sti
jns
test
pop
mov
inc
pop
pop
inc
add
insl
or
and
inc
adc
stc
fnstenv
cmp
lcall
mov
into
and
mov
icebp
loop
xor
add
dec
inc
add
sbb
pop
jl
xchg
add
addb
add
sub
std
jg
and
add
jne
icebp
push
fsubl
add
adc
es
sub
mov
inc
add
dec
pop
or
leave
cmpsb
push
push
jbe
dec
arpl
ja
pop
scas
and
repz
pop
fwait
sbb
lods
rolb
out
bound
cmpsl
jge
xlat
repnz
mov
aas
repz
imulb
rcr
nop
or
xor
jge
jne
push
mov
sub
into
pop
pop
sbb
lock
sbb
mov
pop
push
sbbl
repnz
cmp
ds
imul
xlat
jp
xor
xchg
lea
pop
dec
out
push
xchg
push
and
sbb
or
jmp
add
sub
xor
or
popf
aam
jo,pt
or
fcoms
xrstor
and
sub
test
add
mov
inc
add
call
dec
pop
aam
shrl
add
lock
ds
pop
sbb
jecxz
dec
call
xchg
int3
dec
hlt
test
add
xor
leave
pop
mov
add
mov
add
jle
add
dec
btsl
mov
js
and
mov
repnz
push
aam
add
outsl
mov
pop
xor
add
xor
push
loope
add
adc
outsl
mov
sub
jns
movsl
mov
cs
add
arpl
test
xor
movsb
cmp
bound
jp
je
push
or
mov
je
add
and
addb
add
ret
jmp
je
adc
nop
test
in
mov
add
xor
fidivl
ss
addb
loopne
imul
sub
mov
push
push
pop
outsb
pushw
pop
push
sarb
stos
jbe
aas
mov
scas
rolb
test
pop
bound
lea
sahf
push
inc
add
dec
mov
out
xchg
and
in
movsb
mov
sbb
pushf
movsl
lock
loope
fbld
or
pop
stos
cmp
dec
test
not
jnp
sbb
pop
mov
mov
popa
push
xlat
or
mov
in
xchg
loop
popf
fwait
sub
xchg
insb
mov
xor
xchg
lea
les
or
fisubl
jmp
dec
inc
add
push
jb
push
pusha
add
addb
inc
ja
mul
xchg
jbe
stos
adc
fsts
jne
add
mov
stc
add
inc
lcall
ret
in
je
mov
out
pop
push
cld
jb
jle
ret
je
xchg
cmpsb
mov
sub
inc
add
aaa
sub
lods
sub
out
punpckldq
and
jmp
xlat
or
nop
imul
arpl
aaa
mov
int
jno
sbb
jno
je
jecxz
pop
cmp
add
in
xor
pop
cmpsb
and
mov
setae
jg
rol
add
mov
stos
mov
add
out
cmpsl
mov
mov
xchg
push
cli
out
cmp
out
xchg
push
js
push
icebp
fcmovnbe
lret
xchg
cwtl
test
inc
add
pop
ret
lds
mov
movsl
frstor
mov
repz
stc
out
test
push
add
add
gs
xchg
mov
cli
inc
cmp
cltd
cmp
loopne
ja
lret
repnz
mov
dec
fnstsw
lcall
cmpsl
ljmp
addb
add
and
and
scas
aad
fidivrs
adc
add
not
das
inc
or
jg
pop
out
and
scas
js
inc
ja
pop
ficomps
fiaddl
add
dec
movsl
ja
repnz
repz
add
test
add
movsb
aam
xchg
push
mov
add
movsb
xchg
add
inc
std
fnstcw
add
sbb
addb
loopne
fwait
hlt
sbb
jbe
or
imul
insl
clc
cltd
cli
cmpsl
or
mov
mov
jae
paddq
and
sub
mov
fs
mov
sbb
adc
adc
sti
dec
enter
scas
inc
std
fsubrs
stc
arpl
fstp
xchg
mov
loopne
cwtl
daa
je
hlt
adc
or
mov
inc
lret
add
sub
lret
and
insb
mov
mov
xchg
out
imul
add
stos
cmp
pop
inc
add
add
cmp
jl
add
jo
lea
push
pop
cs
jle
jl
add
scas
mov
jl
xor
jle
pop
inc
cmp
inc
xchg
cmpsl
addr16
push
or
add
scas
es
mov
arpl
cltd
sub
inc
add
aam
stos
mov
add
jnp
pop
cmpsl
into
pop
movsl
adc
mov
cmp
ljmp
add
mov
sub
lods
pop
sbb
lret
dec
jge
inc
add
jbe
push
rclb
js
cmp
mov
sbb
test
add
mov
sbb
lock
sbb
outsl
sbbl
xor
cmp
inc
add
jg
add
and
add
add
dec
aad
adc
inc
add
xchg
movsl
xor
push
fiaddl
and
pop
outsl
pop
fisttpll
push
xchg
mov
loopne
cwtl
sub
aam
ja
pushf
cmp
mov
dec
mov
int3
mov
sub
lret
std
dec
dec
jle
outsl
fwait
cmp
sar
jns
js
fwait
jns
and
add
les
lret
lret
xchg
std
mov
in
insb
cmp
nop
inc
add
inc
add
mov
jmp
ret
jno
int3
pop
mov
shl
mov
mov
call
movsb
aam
mov
inc
add
add
jae
jbe
xchg
shlb
dec
mov
mov
or
or
or
out
lds
inc
sbb
push
fwait
mov
cmp
arpl
cmpl
xchg
and
in
mov
xlat
movsl
lods
xor
lods
testb
or
mov
mov
icebp
ret
mov
js
lahf
into
lcall
adc
dec
dec
adc
in
cld
cmp
inc
add
icebp
dec
cmp
mov
pop
dec
stos
sahf
lods
sti
leave
aad
movb
sub
movb
add
mov
adc
pop
ja
push
outsb
lods
sub
xchg
push
mov
cld
cmp
sbb
pop
loope
jle
add
addr16
add
xor
cmp
arpl
mov
js
xor
les
inc
aas
push
testb
sbb
enter
decl
mov
sbb
jg
inc
xchg
xor
inc
add
or
out
inc
add
gs
mov
pop
add
outsl
xchg
mov
adc
or
or
dec
mov
xchg
mov
icebp
push
xor
cmp
pusha
add
mov
in
cmc
ret
sbb
cmpsb
int3
jg
sub
cli
push
mov
sub
add
add
or
add
icebp
add
xchg
je
pushf
mov
inc
cmpsb
je
sbb
inc
or
bound
push
gs
add
adc
jecxz
adc
scas
mov
mov
mov
add
inc
mov
xchg
cmpsl
dec
stc
daa
pushf
mov
fadd
add
popf
xchg
mov
adc
cmc
xor
lahf
mov
addb
bts
jb
inc
add
loopne
add
adc
dec
xor
push
fidivrl
add
mov
fadds
mov
outsl
loopne
mov
cmp
into
aam
mov
jo
or
sbb
and
add
push
dec
jb
pop
xor
jb
outsb
cmpsl
push
movsl
push
add
cmp
jbe
pop
cs
pop
dec
dec
aad
push
xchg
and
rcr
add
sub
pop
loope
pop
xchg
je
repnz
lahf
push
out
fisttps
xor
sbb
subl
das
mov
jo
mov
and
movb
test
xchg
pop
sub
add
push
in
add
aam
addb
xor
jnp
xchg
stos
and
mov
out
inc
popf
pop
arpl
fnsave
bound
in
fadd
add
adc
inc
add
and
push
sbb
test
push
ljmp
xor
mov
daa
add
js
mov
dec
push
xor
aam
fidivrs
stos
adc
mov
leave
into
rcrb
in
jle
adc
jb
xchg
std
aas
ds
test
roll
mov
add
pop
mov
mov
imul
add
adc
add
sbb
sti
sbb
loope
push
sarl
xchg
inc
add
xchg
mov
or
or
adc
stc
jb
testb
add
roll
mov
inc
add
mov
cmp
mov
add
mov
pushf
push
enter
pop
arpl
push
inc
add
mov
inc
add
sbb
pop
inc
add
repz
dec
and
stc
cli
into
fidivrs
jmp
pushf
jnp
push
jg
fmull
jecxz
pusha
add
lea
pushf
xchg
fcom
pop
mov
cmp
or
test
pop
cltd
xchg
and
ja
sbb
in
sbb
or
push
mov
and
gs
hlt
mov
mov
pop
les
mov
sub
lods
idivb
outsl
push
add
popf
lods
movsb
jb
hlt
push
insl
cmp
or
cmc
sbb
sahf
cld
cmp
mov
and
pop
les
xor
or
movsl
nop
adc
jl
ja
shrl
xor
inc
add
mov
leave
push
lret
divl
adc
es
sarl
popf
cmovs
mov
nop
in
fistps
add
mov
push
bound
push
xlat
fucomi
adc
sub
loope
das
test
ds
mov
lcall
add
xchg
jae
jbe
xchg
and
in
pop
mov
orl
clc
xor
or
imul
cmc
insb
mov
jne
jg
add
hlt
and
ds
xorl
arpl
test
jg
add
and
lcall
xchg
clc
pusha
add
xor
stos
shl
xchg
pop
push
inc
add
addb
add
sbb
scas
add
psubq
pop
notb
add
or
inc
add
dec
xchg
sub
out
std
adc
add
cmp
xor
mov
mov
dec
cmp
xlat
jg
lahf
pmullw
xchg
or
dec
stos
fldcw
lret
inc
add
cmp
call
xchg
js
addb
jnp
mov
fiadds
cwtl
xchg
push
xchg
jge
aad
adc
je
icebp
or
test
dec
mov
add
jp
push
dec
sarl
or
pop
mov
inc
add
pop
mov
gs
mov
and
mov
int
out
clc
xor
out
std
sub
bound
pop
xchg
lds
or
js
mov
xchg
arpl
shrd
fwait
dec
push
mov
je
xlat
xchg
lods
stos
pop
sub
mov
mov
mov
in
daa
popa
push
pop
out
add
mov
hlt
jecxz
xchg
repnz
ret
push
mov
int
jne
je
cmc
pop
xchg
into
in
xor
negl
out
add
jle
lcall
loope
psubq
add
mov
and
aad
push
mov
pop
inc
mov
sbb
cmpsb
cwtl
adc
add
mov
lret
add
push
gs
mov
fsubs
add
lods
test
test
hlt
push
outsl
jl
fwait
lods
add
loopne
jge
les
in
mov
add
cmp
sti
call
int
dec
xor
call
lods
xlat
aaa
cwtl
shl
mov
fdiv
lret
mov
mov
and
mov
rolb
insl
sbb
popf
jl
in
roll
and
jae
adc
stos
inc
add
ret
aad
push
popa
or
jb
lods
and
insb
jge
sahf
inc
add
or
xor
in
rol
in
adc
dec
add
pushf
daa
arpl
aaa
ret
rcrl
push
mov
fcom
popa
fbstp
sub
sti
int
add
mov
mov
decb
inc
and
add
out
jp
orl
cli
out
add
fldenv
inc
add
mov
lods
les
jmp
xchg
test
add
lods
test
xchg
cmp
inc
push
mov
jae
stos
stc
dec
fcompp
and
ljmp
add
inc
add
mov
push
sbb
xchg
ds
repnz
sbb
bound
sbb
or
test
out
or
push
in
sub
es
inc
inc
js
jge
jae
sahf
xor
add
int
shrb
adc
push
std
cs
enter
xor
push
fdivrp
rcll
xchg
jnp
movb
add
aad
sbb
sbb
int
add
mov
daa
mov
icebp
xor
lcall
xor
gs
out
mov
xor
add
movsl
in
ss
and
sub
in
ret
cmpl
mov
jno
jo
add
fisubrl
adc
xchg
jp
adc
inc
lret
lods
xor
dec
out
rclb
xchg
mov
adc
icebp
sbb
sbb
loop
stos
sub
xlat
mov
add
sub
sahf
cmp
out
pop
int3
sahf
addb
push
iret
cmp
dec
adc
rcrl
mov
mov
jae
rolb
pop
or
into
insb
into
fsub
fucomp
gs
popf
mov
or
sub
mov
or
cmp
xor
jno
fs
push
add
enter
mov
lea
add
ret
leave
pop
imul
stc
and
cmpsl
dec
pop
mov
jmp
popa
loop
and
clc
xor
jl
add
aam
pop
add
cmpsb
sbb
cmpsb
or
jg
out
mov
in
jb
clc
call
aad
and
divl
mov
sbb
sub
sbb
mov
ret
mov
xor
stos
adc
movsb
jp
jl
sbb
or
sub
add
jl
xor
mov
cmp
pop
mov
stos
loope
pop
sub
or
pop
xor
push
loopne
add
xchg
ljmp
mov
lock
out
sub
add
add
bound
xchg
stos
or
int
jl
push
insl
pop
pusha
add
arpl
add
sahf
shll
mov
popf
scas
sbb
addb
cmc
mov
fs
sub
jae
add
push
adc
cmpsb
mov
sub
xor
sbb
add
xor
cli
aad
mov
in
cli
fisttps
rorl
xor
and
xchg
push
jmp
jnp
add
add
xlat
loope
mov
mov
xor
sub
push
cmp
ret
inc
add
push
neg
repz
jmp
adc
lret
mov
loopne
sub
ficomps
and
mov
dec
push
sbb
cmp
pushl
outsb
mov
add
lret
cmpl
mov
addb
lret
lret
into
sub
xlat
adc
add
push
mov
int3
mov
out
lods
int3
add
xchg
push
cmp
cmp
faddp
add
add
sub
andl
pusha
add
pop
fs
and
cmp
push
xchg
addb
sahf
leave
push
inc
add
jno
push
fisttpl
add
sbb
popf
rcll
fcompl
add
and
mov
or
shrb
fsubrl
ret
and
jnp
add
gs
mov
xchg
fildll
leave
fdivs
int
pop
lods
stos
fwait
rolb
adc
icebp
addr16
out
pop
push
gs
je
jnp
andl
add
lahf
fstps
bound
out
xchg
sbb
adc
pushf
inc
add
push
sti
pop
daa
ljmp
mov
nop
in
pusha
add
and
xlat
loop
xor
sti
mov
pop
sbb
adcl
cmp
and
jmp
jo
pop
or
add
pop
and
dec
outsl
mov
dec
pop
jle
jbe
add
cwtl
inc
add
cld
hlt
xchg
push
add
and
leave
and
xor
sub
mov
dec
inc
add
add
pushf
leave
cmp
push
push
adc
movl
js
add
sub
insb
pop
js
and
repz
pop
lods
aam
adc
hlt
mov
pop
sub
push
push
mov
sbb
addb
hlt
push
cli
pop
ret
cwtl
lods
jmp
nop
push
jo
mov
sub
rol
add
push
je
mov
cmc
jle
cmp
jle
xchg
into
or
pop
test
out
enter
mov
or
cmp
mov
add
dec
aam
push
add
mov
lods
mov
inc
add
sub
notb
add
imul
add
or
mov
push
cmp
aam
add
inc
fisttpl
xchg
mov
jnp
add
xor
emms
repz
inc
nop
and
aad
cmp
or
xchg
fxch
mov
push
stos
leave
or
jmp
lcall
stc
mov
add
pop
add
nop
out
leave
negl
rolb
xor
test
repz
add
xor
jns
mov
add
arpl
cmc
out
add
inc
or
in
sbbl
pop
jmp
adc
xchg
ret
and
push
test
mov
sahf
xor
pop
adc
xchg
pop
cwtl
cltd
hlt
pop
sub
add
outsb
ds
call
pop
in
cmp
push
xor
adc
lock
jno
add
jecxz
and
mov
addr16
inc
add
imul
cmp
sbb
mov
pop
push
xorl
cltd
cmp
push
repz
mov
fmuls
xchg
jmp
or
add
aas
sub
shll
mov
push
lods
fwait
or
mov
in
in
je
imul
mov
inc
pop
fstps
or
cmpsl
xor
adc
add
or
addr16
mov
sbb
mov
add
sahf
lahf
lahf
sbb
les
push
into
stos
dec
loope
ja
sbb
daa
push
mov
cmp
and
push
mov
push
and
ret
push
jns
ret
addb
xchg
xlat
mov
ja
cmc
repz
and
pop
mov
add
inc
in
rolb
sub
jbe
ss
add
insb
test
je
lcall
rcr
sbb
add
xchg
cltd
jecxz
fsts
mov
lds
add
mov
je
popa
fst
xor
out
std
xchg
mov
push
add
xchg
aad
sti
sub
mov
add
pop
leave
xchg
sbb
add
stc
les
cs
add
jmp
popf
push
inc
add
ret
inc
pop
inc
pop
out
xchg
outsb
jns
shll
loopne
jmp
scas
push
inc
add
int3
push
push
and
out
push
or
add
push
into
hlt
sub
cmp
insb
jb
loopne
cmp
jmp
arpl
test
ret
in
daa
cmp
add
add
cmp
sahf
cmc
jae
dec
insb
into
clc
setg
jnp
mov
xchg
stc
loope
mov
add
jns
pop
and
lea
and
pop
je
aaa
add
push
jnp
dec
mov
or
jb
mov
stc
xlat
fs
xchg
xor
loope
ficomps
inc
add
add
jns
push
mov
lcall
push
repnz
adc
fnstsw
mov
sbb
xchg
orl
jmp
stc
add
or
xchg
xor
mov
je
roll
adc
fmull
add
add
dec
cwtl
jmp
xor
int
mov
add
int
add
mov
repnz
pop
mov
fisubrs
ret
adc
push
in
adc
lods
pop
cmp
stos
mov
dec
inc
rcrb
jmp
add
cs
js
inc
add
inc
sahf
xchg
aad
add
add
sub
loopne
add
add
add
push
xchg
xchg
jg
add
jnp
cmpl
push
addr16
sbb
in
fcmovb
or
mov
or
fidivrl
add
int
test
sbb
movsl
jl
lahf
sub
add
push
cmp
test
and
cltd
adc
pop
dec
mov
cmp
mov
dec
fs
xor
add
pop
sub
mov
rolb
dec
std
mov
fmull
add
out
addb
add
lret
call
xchg
into
prefetcht1
mov
call
mov
pop
aam
push
fdivrs
outsl
lock
sub
mov
jp
push
add
aaa
xor
popa
mov
cmp
ror
xor
add
jl
stos
repnz
addb
push
int
add
movsl
jle
jae
add
adc
pop
push
wrmsr
pop
jnp
jmp
and
sub
xchg
sub
aas
mov
lods
outsl
pop
xor
and
mov
pop
sub
mov
fdivs
nop
and
cmp
lods
dec
dec
mov
imul
inc
xchg
insb
sub
and
mov
xchg
cmp
xor
add
xchg
inc
sti
addb
jo
adc
out
fsubrs
imul
fdivs
push
cli
popf
cmpsl
gs
pop
cmp
or
int
lret
cmpsb
ljmp
dec
pop
add
fcomp
mov
jl
push
imul
pusha
add
mov
add
ja
add
add
xchg
pop
loop
push
pop
mov
movsb
lret
sub
or
or
addr16
ret
cmp
jb
test
repnz
insl
adc
mov
loopne
pop
fucomp
push
xchg
hlt
mov
mov
xchg
insb
jb
dec
bound
jb
imul
add
xchg
mov
pop
test
cld
or
add
dec
push
sub
adc
mov
jne
popa
in
outsl
pop
mov
insl
icebp
leave
cmpsl
xchg
and
add
mov
jbe
inc
lret
sahf
sbb
pop
and
mov
fwait
lret
loope
aam
add
sbb
xor
movsl
out
pop
xor
cmpsl
mov
inc
dec
mov
jge
pop
mov
sbb
int
inc
stos
or
int
repz
add
subl
jge
mov
push
mov
adc
or
jle
pusha
add
test
add
jns
testb
dec
flds
imul
scas
adc
add
repnz
testb
rolb
push
in
std
insl
fisubrs
pop
sub
inc
add
subl
sbb
push
push
push
test
aad
xor
cmp
test
addb
add
sub
add
add
cmpsl
cmpsb
and
pop
pop
adc
sub
aad
mov
push
push
loop
js
cmc
push
dec
sub
lods
adc
inc
in
mov
jp
add
add
or
jo
sub
jp
push
in
clc
xchg
mov
xor
das
lods
data16
pop
and
push
movsl
pop
mov
add
xchg
cmpsb
in
repz
jl
add
jns
hlt
faddl
movl
rol
add
aas
push
cmc
mov
inc
add
adc
add
add
add
sub
movsl
pop
loopne
clc
lea
std
std
pop
int3
into
rolb
ret
add
mov
push
imul
inc
add
push
std
cmp
mov
cmpsb
and
add
setnp
add
add
pop
mov
mov
lock
cmp
cltd
push
add
stc
pop
mov
movsb
pop
pop
sub
mov
xor
stos
jno
dec
pop
test
mov
fwait
out
mov
cmp
push
adc
mov
in
inc
add
data16
in
enter
jno
testl
mov
in
cld
push
into
pop
sbb
push
jmp
nop
loopnew
repz
ficoml
out
cmpsb
cltd
add
dec
ret
pushf
sub
add
add
mov
cs
add
fistps
push
lods
in
jbe
inc
add
jp
das
inc
add
xchg
cmp
pop
jns
es
jg
sub
lock
mov
pop
sub
iret
addr16
or
add
xchg
mov
dec
mov
jae
movb
popf
sbb
lcall
push
les
cwtl
aad
pushf
lcall
jae
sahf
fisttpll
mov
mov
cmpsl
xchg
es
imul
lahf
ss
mov
add
out
pop
xor
jmp
mov
jno
outsl
lcall
xchg
sub
aad
add
test
lret
xchg
sub
fwait
push
xor
fstps
jns,pn
cltd
mov
add
incl
add
roll
and
sub
inc
and
cmc
add
xchg
mov
and
or
mov
pushl
cld
cmp
repz
out
pop
pop
sbb
lea
push
add
addb
aas
inc
add
and
push
push
mov
pop
cmp
sub
pop
movl
xchg
mov
xlat
in
or
adc
imul
imul
cmpsl
or
mov
lds
cmp
xchg
pop
popf
inc
add
lock
imul
nop
xchg
dec
hlt
and
shrl
pop
cli
dec
adc
jle
sub
adc
arpl
cmpsl
lahf
les
rol
jo
and
inc
mov
jb
add
not
pop
dec
xor
pop
jae
add
fadd
add
add
fs
add
pop
push
movsl
xchg
sub
pop
data16
xor
pushf
out
movsl
out
cltd
cmp
stc
jb
pop
inc
add
pushl
add
push
mov
xchg
ret
mov
pop
pusha
add
cmpb
add
add
jns
add
dec
adc
movsl
aad
add
xor
lock
mov
xchg
ret
insb
lock
loope
je
stc
jb
xor
add
mov
call
stc
jb
add
insb
add
out
mov
rcr
jmp
nop
jmp
add
dec
in
cmp
sub
add
add
add
roll
cmpsb
les
jmp
pop
jns
mov
mov
stc
jb
add
push
mov
xchg
ret
jns
add
jns
popa
add
jb
add
cmpsl
add
cmp
add
add
add
add
outsl
push
stc
jb
add
add
jl
jmp
cmp
add
stc
jb
add
add
mov
push
loope
add
jns
mov
inc
push
mov
xchg
ret
add
jle
add
jmp
push
mov
xchg
ret
mov
sbb
sbb
add
add
sar
xor
add
add
in
add
inc
add
movsb
nop
jmp
cmpsl
add
add
add
loopne
pushl
nop
jmp
add
add
add
loop
stc
jb
sbb
stc
jb
mov
mov
or
jmp
in
pop
in
fdiv
add
mov
nop
jmp
cmpsl
add
and
scas
call
stc
jb
lock
push
aaa
jns
sar
subb
add
les
add
hlt
gs
jne
stc
jb
add
add
subb
add
lock
add
push
stc
jb
mov
add
aas
add
add
add
add
icebp
nop
jmp
insb
test
add
mov
stc
jb
faddl
or
jl
and
jb
add
push
add
pop
push
mov
mov
mov
add
add
add
dec
add
mov
xchg
ret
mov
ret
stc
jb
sbb
dec
faddl
add
pop
jno
push
scas
enter
sbb
add
add
in
add
nop
int
rclb
jmp
and
pop
dec
add
lcall
add
test
inc
push
test
test
jb
mov
mov
stc
jb
outsl
mov
add
stc
jb
add
out
push
pusha
stc
jb
add
add
add
sar
jb
add
pop
push
arpl
add
adc
stc
jb
add
dec
popl
js
stc
jb
add
roll
mov
add
xlat
sbb
sbb
sbb
add
dec
sub
jb
dec
add
add
dec
mov
stc
jb
add
add
jp
nop
jmp
in
add
add
add
jmp
push
mov
xchg
ret
cmpsl
insb
dec
mov
mov
xchg
ret
mov
push
stc
jb
inc
sub
dec
mov
mov
stc
jb
add
add
mov
stc
jb
add
add
js
nop
jmp
inc
les
add
dec
add
mov
stc
jb
les
inc
and
sbb
repz
jb
add
add
sub
and
add
add
add
push
push
mov
xchg
ret
sub
loope
add
insb
dec
stc
jb
mov
test
add
add
jb
les
add
sti
stc
jb
xor
pop
sbb
inc
in
stc
jb
inc
push
mov
dec
add
stc
jb
add
jl
add
pop
repz
add
mov
jecxz
inc
sub
xor
add
stc
jb
add
addb
add
in
add
mov
lret
push
push
mov
xchg
ret
mov
test
leave
sub
jb
cmc
push
jno
mov
stc
jb
add
aam
add
nop
jmp
pop
add
rol
add
cld
or
and
add
add
cmc
mov
popa
add
jb
add
jns
inc
push
mov
xchg
ret
cmpsl
movsl
add
in
pushl
nop
jmp
lock
les
add
pop
add
stc
jb
add
cltd
mov
scas
push
stc
jb
add
add
outsl
mov
nop
jmp
mov
mov
push
stc
jb
popl
mov
sub
orb
add
jns
cmpsl
cmpsl
jl
push
push
mov
xchg
ret
outsb
add
mov
dec
mov
push
mov
xchg
ret
add
xor
push
stc
jb
xchg
add
cltd
sub
add
fimull
les
add
in
pop
add
add
insb
mov
nop
jmp
pop
in
in
add
push
add
stc
jb
xchg
in
pop
sbb
inc
cmp
mov
xchg
ret
add
in
add
push
mov
xchg
ret
in
add
add
popa
stc
jb
add
add
mov
xchg
ret
add
outsb
mov
jb
xor
lock
and
fadd
repnz
test
add
or
add
add
jb
add
add
add
sub
pusha
stc
jb
add
rcrl
xchg
push
movb
subl
stc
jb
mov
lods
mov
stc
jb
sub
outsb
adc
outsb
add
mov
stc
jb
add
add
enter
adc
jb
add
add
arpl
add
add
jb
pop
add
xor
nop
jmp
add
dec
dec
add
roll
mov
lcall
jns
rolb
call
stc
jb
inc
add
out
push
push
mov
xchg
ret
fsubrl
fdivl
jmp
stc
jb
rcl
popl
cmp
push
sbb
fsubr
add
inc
add
xor
mov
stc
jb
cmc
inc
push
add
jb
add
mov
add
mov
add
mov
stc
jb
pop
add
add
push
mov
xchg
ret
add
cmpsl
inc
jns
repz
mov
xchg
ret
add
add
test
nop
jmp
add
and
mov
nop
jmp
pop
add
jl
add
rep
stc
jb
popl
add
cwtl
call
stc
jb
push
mov
in
mov
xchg
lcall
jb
mov
sub
add
stc
jb
add
les
cmp
xor
add
stc
jb
add
ret
add
add
mov
dec
push
push
mov
xchg
ret
add
in
add
push
push
mov
xchg
ret
xchg
add
mov
cmpl
nop
jmp
dec
mov
ret
stc
jb
dec
mov
add
sub
dec
fldl
xchg
ret
add
adc
nop
jmp
add
add
cmpsl
pop
add
add
int3
mov
stc
jb
add
jmp
push
add
out
pop
cmpsb
popl
jno
inc
add
call
addb
xor
lock
aaa
imul
adcb
pushl
add
add
jg
clc
push
add
nop
jmp
add
mov
or
push
mov
xchg
ret
pop
in
outsl
xchg
adc
stc
jb
add
add
xchg
mov
popa
add
mov
xchg
ret
pop
fsubr
dec
shl
stc
jb
add
lock
add
push
push
mov
xchg
ret
jge
pop
add
cmp
inc
or
add
push
dec
mov
cmpsl
loope
add
push
mov
xchg
ret
mov
les
stc
jb
add
add
add
rep
push
mov
xchg
ret
add
add
add
mov
nop
jmp
outsb
cmc
sbb
add
dec
or
add
jb
les
mov
jae
stc
jb
inc
sub
inc
int3
add
stc
jb
add
mov
insb
shr
push
push
mov
xchg
ret
pop
outsl
movsl
add
or
pusha
adc
add
and
sub
mov
push
stc
jb
popl
inc
fmull
add
pop
stc
jb
push
add
add
pop
add
pop
pop
stc
jb
xor
jmp
cmpsl
add
mov
mov
movsl
pop
push
xorl
add
mov
adc
add
or
mov
xchg
ret
add
jl
dec
call
push
mov
xchg
ret
add
cmc
add
mov
stc
jb
add
cmpsl
loope
mov
or
loop,pn
add
cmpsl
pop
push
push
mov
xchg
ret
sub
js
inc
call
inc
add
add
push
pop
ss
mov
stc
jb
in
inc
add
mov
xchg
ret
add
dec
add
push
push
mov
xchg
ret
cmpsl
dec
inc
cmpsb
dec
sbb
stc
jb
in
pop
add
jl
inc
in
jb
les
add
aas
stc
jb
add
add
les
push
and
stc
jb
push
add
mov
xchg
ret
mov
ret
inc
add
xchg
icebp
inc
add
jmp
je
add
stc
jb
les
add
mov
push
mov
xchg
ret
cmpsl
add
inc
inc
add
mov
xchg
ret
mov
push
nop
jmp
vpmadcswd
movsl
repz
cwtl
add
push
mov
xchg
ret
add
mov
cmpb
add
add
stc
jb
mov
dec
in
inc
add
test
jne
push
mov
xchg
ret
add
mov
jb
add
add
test
stc
jb
add
add
push
add
rolb
mov
stc
jb
add
mov
mov
add
stc
jb
rol
add
add
fnstsw
stc
jb
add
movsl
in
std
add
stc
jb
add
add
mov
stc
jb
add
jns
and
jb
mov
inc
add
mov
push
jb
cltd
add
add
lea
stc
jb
jmp
dec
cltd
dec
push
mov
xchg
ret
add
mov
add
stc
jb
inc
and
rcrl
mov
stc
jb
in
add
cmpl
nop
jmp
pop
add
add
call
nop
jmp
mov
push
test
add
stc
jb
insb
xor
sbb
pop
adc
add
in
add
add
nop
jae
stos
stc
jb
add
outsb
in
add
popa
add
jmp
jmp
dec
cltd
decw
dec
add
xor
and
add
stc
jb
add
add
pop
jmp
inc
jp
nop
jmp
movsl
sbb
add
mov
add
add
stc
jb
and
add
mov
test
add
stc
jb
lock
movb
xchg
ret
dec
add
xchg
push
aas
dec
push
mov
xchg
ret
jl
loope
sbb
pop
je
stc
jb
add
push
nop
jmp
add
add
add
sbbb
dec
pop
sub
lock
sbbb
dec
add
mov
jb
adc
mov
mov
jb
add
add
dec
jle
push
adc
push
stc
jb
mov
add
mov
jb
mov
add
add
daa
cmp
adcb
pop
jns
sub
mov
add
add
jb
add
mov
add
stc
jb
lock
mov
popa
jmp
aas
adc
incl
faddl
pop
pop
add
idiv
incl
roll
jns
mov
jns
stc
jb
insb
add
outsl
mov
movzwl
nop
jmp
lock
cs
cwtl
pop
nop
jmp
add
sbb
add
hlt
jae
add
nop
jmp
pushf
add
mov
pop
stc
jb
sbb
cmc
xchg
cltd
xor
stc
jb
add
add
xor
test
nop
jmp
add
rcrl
addb
lds
daa
out
mov
stc
jb
inc
lock
stc
cmp
nop
jmp
add
add
sub
stc
jb
add
add
sbb
popa
add
jb
mov
pop
pop
push
nop
jmp
inc
dec
mov
add
nop
jmp
add
inc
lock
add
and
xchg
mov
push
stc
jb
cmpsl
dec
mov
add
mov
jb
out
push
cmc
leave
push
nop
jmp
add
inc
cs
sub
mov
add
stc
jb
inc
mov
in
shr
stc
jb
pop
dec
dec
in
mov
testl
push
sti
inc
add
outsb
add
cli
add
stc
jb
jle
dec
add
add
push
rolb
or
jmp
pop
add
sub
repz
test
or
add
lcall
push
aaa
mov
fs
inc
add
add
cmpw
stc
jb
test
add
fisubl
jb
adc
mov
add
mov
xchg
ret
add
dec
inc
stc
jb
and
mov
add
stc
jb
add
inc
add
fdivrl
stc
jb
add
cmc
decl
cmp
add
add
and
push
mov
xchg
ret
mov
add
jb
pop
pop
add
add
add
stc
jb
add
inc
xor
stc
jb
push
in
mov
stc
jb
pop
push
pop
dec
sub
stc
jb
mov
xchg
inc
add
mov
stc
jb
add
cmpsb
push
add
jmp
or
or
add
push
les
mov
add
adc
xchg
add
inc
add
add
stc
jb
add
mov
mov
push
mov
xchg
ret
add
out
shr
push
mov
xchg
ret
xchg
fcompl
iret
mov
stc
jb
add
cmpl
nop
jmp
add
xor
or
jp
jmp
add
sbb
add
sub
mov
dec
jne
add
stc
jb
jl
add
jle
add
push
mov
xchg
ret
add
add
jb
add
cmc
add
add
xor
stc
jb
outsl
add
add
mov
pop
stos
nop
jmp
add
add
add
jb
add
add
add
icebp
inc
add
aam
add
xchg
add
sub
add
jb
push
outsl
add
out
repz
incl
add
add
and
add
stc
jb
cmpsl
add
pop
add
gs
jbe
add
stc
jb
les
add
mov
js
stc
jb
cltd
mov
loope
mov
mov
xchg
ret
outsb
outsl
cmpsb
cmpsb
cltd
call
clc
inc
add
pop
add
add
repnz
ljmp
mov
loope
add
call
add
pop
pop
in
mov
nop
jmp
mov
loope
mov
loop
jne
stc
jb
add
in
call
incl
add
add
shlb
push
inc
push
lcall
ljmp
pop
jle
lods
sub
stc
jb
add
fistpl
jb
dec
dec
test
add
adc
push
pop
push
push
mov
xchg
ret
add
add
mov
mov
jb
add
add
sub
add
xor
add
stc
jb
mov
add
add
mov
nop
jmp
mov
add
movsb
ds
nop
jmp
mov
and
aad
add
sub
jb
pop
outsl
mov
mov
cmp
jb
push
add
mov
xorb
add
add
add
jl
in
pushf
pop
stc
jb
in
xor
pop
sbb
inc
mov
nop
jmp
mov
faddl
dec
add
add
mov
xchg
ret
mov
mov
stc
jb
cmc
mov
sub
and
jmp
adc
add
in
add
inc
adc
jb
add
add
adcb
add
add
mov
add
popa
stc
jb
in
adc
add
xor
pop
stc
jb
sub
jl,pn
mov
inc
movsl
jp
mov
stc
jb
pop
add
mov
xchg
ret
add
mov
je
stc
jb
lock
jle
outsl
arpl
add
jb
inc
add
add
jmp
add
add
dec
mov
sbb
andb
push
mov
dec
mov
stc
jb
add
sbb
add
and
nop
jmp
cmpsb
inc
add
add
sub
test
inc
add
movsl
cs
mov
stc
jb
movsl
add
test
addb
add
pushf
add
stc
jb
add
add
sar
jb
mov
add
outsl
xchg
mov
jb
sub
sarl
stc
jb
add
pop
add
mov
int3
add
stc
jb
sub
jmp
out
incl
add
add
add
imul
fadds
xchg
ret
push
decl
fildl
xchg
ret
test
xor
nop
jmp
lock
add
push
adc
andnps
dec
mov
dec
add
jg
jno
xchg
inc
add
push
in
inc
add
add
andb
add
nop
jmp
pop
mov
movsb
stc
jb
pop
cmpsb
add
add
sub
in
add
popl
dec
push
cmpsl
pop
mov
stc
jb
add
add
add
cmpsb
mov
jb
add
jmp
jmp
add
sub
jmp
push
stc
jb
pop
loope
add
rolb
ror
stc
jb
faddl
pushf
add
dec
lods
mov
stc
jb
faddl
jmp
sbb
mov
xchg
ret
jle
jns
mov
inc
repnz
add
add
inc
divb
sub
jb
mov
fcoml
lahf
add
stc
jb
pop
add
outsb
cltd
sub
loop
push
mov
xchg
ret
and
add
inc
and
nop
jmp
mov
inc
loop
ljmp
jmp
add
add
scas
push
stc
jb
in
movsl
add
add
lret
stc
jb
add
add
push
insl
sub
push
mov
xchg
ret
dec
sub
and
jmp
add
add
add
sbb
jmp
mov
add
add
loope
add
push
push
mov
xchg
ret
pushf
xor
add
gs
call
stc
jb
and
mov
push
mov
xchg
ret
cmpsl
add
add
mov
in
xlat
inc
mov
and
jnp
add
pop
mov
push
mov
xchg
ret
add
add
into
add
nop
jmp
outsl
add
loope
add
stc
jb
sub
add
add
add
pop
push
mov
xchg
ret
jle
add
sub
clc
stc
jb
loope
add
adc
push
mov
xchg
ret
mov
jl
adc
jb
pop
outsl
add
add
stos
lods
nop
jmp
adc
push
mov
and
jmp
lock
add
add
xchg
ds
stc
jb
sub
mov
divl
sti
push
push
mov
xchg
ret
dec
insb
add
add
push
stc
jb
add
add
mov
xor
add
nop
jmp
pushf
lock
pop
clc
push
stc
jb
add
cmpsl
add
cltd
sub
lods
pop
push
mov
xchg
ret
add
add
add
mov
stc
jb
add
inc
dec
mov
push
mov
xchg
ret
mov
pop
hlt
pop
or
jb
cmc
cmpsl
cltd
add
test
sti
call
incl
xchg
add
je
cmpl
push
mov
xchg
ret
add
mov
stc
jb
jns
jns
cmc
add
add
fildl
xchg
ret
shl
add
mov
nop
jmp
and
add
xor
push
mov
xchg
ret
add
xor
lret
jne
stc
jb
mov
adc
push
mov
xchg
ret
add
jmp
add
stc
jb
add
jns
pushf
push
stc
jb
movsl
cmc
add
movzwl
stc
jb
xchg
jmp
sub
jmp
add
pop
jl
add
add
div
lock
sbb
dec
adc
std
cli
inc
add
add
mov
mov
xchg
ret
add
push
mov
xchg
ret
add
sbb
and
mov
push
mov
xchg
ret
test
add
adc
push
push
mov
xchg
ret
add
lock
add
dec
cmp
mov
xchg
ret
dec
add
sub
test
add
stc
jb
add
add
sbb
add
sub
add
add
movsl
add
add
push
stc
jb
pop
add
cmp
jmp
add
dec
xor
or
jmp
add
inc
add
add
sub
imulb
clc
stc
jb
jle
add
popl
add
stc
jb
add
add
sub
add
cld
incl
add
add
pop
pop
push
mov
xchg
ret
add
sub
mov
inc
add
jl,pn
lea
stc
jb
add
mov
and
stc
jb
add
add
add
addb
incl
add
add
jmp
mov
stc
jb
lock
add
test
rcrb
jb
inc
mov
dec
sub
stc
jb
mov
add
stc
jb
dec
pop
jns
out
and
aad
jb
cmpsl
mov
mov
mov
stc
jb
mov
hlt
inc
add
add
or
jbe
ljmp
add
push
jne
stc
jb
inc
mov
movb
test
push
mov
xchg
ret
add
add
jmp
stc
jb
dec
add
jb
mov
pop
xchg
outsb
lds
add
add
jge
movsl
mov
out
mov
adc
jb
xchg
add
mov
stc
jb
mov
cltd
mov
je
js
jb
add
outsl
add
lret
mov
push
mov
xchg
ret
pop
cltd
adc
movb
jb
cmpsl
jl
cmc
pop
add
jne
nop
jmp
add
add
cmpw
nop
jmp
in
add
cmpsb
cltd
mov
stc
jb
add
inc
add
add
xor
stc
jb
add
jle
movsl
dec
popl
in
inc
add
add
sub
inc
add
add
add
pop
stc
jb
cs
inc
pop
pop
add
pop
call
stc
jb
add
adc
incl
inc
add
xchg
jmp
pop
mov
nop
jmp
loope
jns
add
test
nop
jmp
add
mov
stc
jb
add
add
push
push
mov
xchg
ret
cltd
xor
mov
fists
pop
xchg
pop
add
cmpsl
cmpsl
and
ficomps
jb
sub
jmp
xor
jmp
add
add
add
fstl
jb
cmpsl
push
dec
cmc
add
mov
mov
stc
jb
add
in
outsb
je
stc
jb
add
or
stc
jb
pop
add
cmpsb
loope
call
lcall
add
jae
push
mov
xchg
ret
add
cmpsl
inc
or
jb
add
mov
mov
fcmovu
inc
add
add
mov
stc
jb
push
add
lret
in
add
add
or
add
sub
mov
add
popf
movswl
nop
jmp
mov
jmp
nop
jmp
lock
mov
or
nop
jmp
push
add
negl
mov
stc
jb
jns
add
add
jge
repnz
jb
add
add
mov
xchg
ret
add
cmpsl
cmpsb
lds
shl
stc
jb
add
lea
push
mov
xchg
ret
add
cmc
movb
add
stc
jb
in
add
outsb
fnstsw
stc
jb
in
add
ss
sub
jl
pop
add
roll
pop
ss
and
imul
add
pop
add
add
cmpb
loope
jmp
inc
add
xor
add
stc
jb
mov
mov
stc
jb
mov
sub
in
push
push
imul
subb
loope
fwait
mov
stc
jb
dec
add
mov
add
push
mov
xchg
ret
dec
lock
add
stc
jb
jmp
add
nop
jmp
mov
sub
mov
stc
jb
add
mov
push
stc
jb
add
add
sub
fadds
stc
jb
insb
add
add
mov
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
add
lahf
push
stc
jb
cmpsl
sub
add
adc
jb
add
outsb
add
push
push
mov
xchg
ret
mov
add
in
cld
and
push
mov
xchg
ret
xor
sub
add
mov
inc
add
add
repnz
jb
lea
push
mov
xchg
ret
sub
in
pop
call
stc
jb
add
pop
add
push
cmpl
mov
xchg
ret
add
in
dec
nop
jmp
add
cmpsl
inc
add
or
stc
jb
add
add
pop
mov
stc
jb
test
movb
mov
xchg
ret
add
in
push
repnz
out
mov
nop
jmp
add
outsl
mov
enter
test
pushl
add
mov
stc
jb
jle
cmc
add
shl
stc
jb
outsb
in
mov
in
adc
or
sbb
inc
add
jns
jg
adc
stc
jb
add
mov
add
mov
xchg
ret
add
add
push
mov
xchg
ret
cmc
add
or
xor
add
stc
jb
insb
add
dec
nop
jmp
add
lock
jl
mov
push
mov
xchg
ret
push
fstpt
stc
jb
pop
inc
add
dec
pop
push
mov
xchg
ret
add
mov
add
call
push
pop
add
xchg
and
stc
jb
insb
cmpsl
dec
add
dec
nop
jmp
mov
pop
add
mov
push
jle
test
stc
jb
add
add
push
mov
int
add
je
stos
add
xchg
dec
mov
stc
jb
pop
pop
add
sub
scas
mov
nop
jmp
cmpsb
lock
jb
loope
add
dec
add
xor
push
mov
xchg
ret
pop
add
dec
push
stc
jb
in
add
fsubl
pop
stc
jb
movsl
jle
add
push
mov
and
push
mov
xchg
ret
add
add
arpl
add
inc
filds
xchg
ret
add
mov
stc
jb
mov
mov
add
movzwl
stc
jb
sub
add
mov
cmpsb
inc
add
test
jb
loope
add
popa
out
add
mov
stc
jb
inc
jmp
mov
leave
sub
jb
mov
jmp
outsl
push
nop
jmp
outsl
and
add
jb
add
out
les
add
push
nop
jmp
add
inc
add
mov
add
fldenv
stc
jb
add
add
outsb
push
jmp
idiv
jb
mov
add
add
cwtl
add
stc
jb
cmc
mov
jge
test
nop
jmp
mov
adc
push
mov
xchg
ret
add
out
lods
stc
jb
add
sbb
dec
push
push
mov
xchg
ret
jmp
add
loopne
stc
jb
add
cmpsl
mov
sar
call
add
add
cmpb
add
popl
push
int
inc
or
jb
add
add
add
cmpsl
loopne
mov
nop
jmp
add
add
mov
stc
jb
lock
stc
jb
pop
mov
add
mov
push
mov
xchg
ret
cmpsl
add
add
ds
stc
jb
add
add
inc
add
stc
jb
mov
add
call
lcall
push
sahf
mov
nop
jmp
pop
insb
add
in
dec
loope
dec
stc
jb
pop
cmc
add
mov
out
push
stc
jb
add
mov
and
out
jae
mov
push
mov
xchg
ret
add
ret
nop
jmp
cltd
add
add
add
mov
sbb
incl
cltd
add
mov
push
mov
xchg
ret
add
popl
nop
jmp
add
sub
pop
push
mov
xchg
ret
add
add
mov
and
stc
jb
insb
add
add
add
push
stc
jb
add
add
sub
lret
or
jmp
add
insb
roll
add
jns
stc
jb
dec
mov
push
sub
dec
nop
jmp
mov
inc
add
insb
dec
test
nop
jmp
movsl
add
pop
or
jb
add
out
mov
pause
jmp
mov
lock
pop
jg
outsb
and
mov
xchg
ret
add
add
add
push
sub
lock
add
adc
jmp
add
add
jecxz
add
dec
inc
add
dec
fs
jb
in
mov
orb
dec
sbb
cmp
stc
jb
sub
add
jmp
add
add
pop
dec
mov
cltd
cmp
nop
jmp
sub
xor
jns
jne
stc
jb
dec
lock
or
jb
add
add
add
mov
sar
jb
outsb
add
add
add
notb
xor
add
add
jle
push
stc
jb
add
mov
pop
sbb
cmp
call
mov
inc
add
mov
stc
jb
xor
add
sbb
jb
add
mov
cmc
adc
cmp
jge
stc
jb
add
in
in
add
das
add
nop
jmp
add
in
outsb
jns
loopne
adc
sar
subb
add
pop
add
mov
dec
mov
stc
jb
loope
push
mov
xchg
ret
inc
loope
mov
xor
hlt
inc
add
add
mov
pop
push
mov
xchg
ret
mov
movsl
add
loope
add
ss
mov
stc
jb
add
fimuls
cmc
inc
add
jge
mov
jl
add
stc
jb
out
cltd
add
add
mov
push
mov
xchg
ret
add
gs
dec
stc
jb
cmpsb
mov
daa
insb
rep
stc
jb
cmpsl
add
in
add
ds
stc
jb
add
sub
push
mov
xchg
ret
inc
mov
jne
stc
jb
pop
out
sub
stc
jb
cmpsl
mov
jne
nop
jmp
add
and
pop
add
bnd
rep
stc
jb
pop
movsl
add
inc
add
pushl
nop
jmp
sub
add
push
stc
jb
add
fsub
add
cmp
clc
inc
add
jns
cmpsl
inc
je
ret
stc
jb
cmpsl
outsl
cltd
add
inc
mov
adc
jb
movsl
sub
adc
mov
stc
jb
inc
inc
sub
mov
call
cmp
incl
push
mov
outsl
lods
mov
stc
jb
add
jns
push
push
mov
xchg
ret
loope
add
xchg
sar
orb
incl
add
add
add
push
push
xchg
cmpsb
pop
add
stc
jb
jge
add
inc
jmp
fdivrp
stc
jb
cmpsl
add
push
mov
xchg
ret
add
outsb
xchg
dec
add
jbe
mov
nop
jmp
add
int
dec
cmp
jb
add
out
sub
arpl
and
stc
jb
mov
add
stc
jb
add
mov
xor
add
lcall
loop
mov
lock
and
dec
mulb
out
cmpsb
dec
mov
and
stos
movsb
sub
sub
mov
add
add
pop
pop
loopne
add
outsl
hlt
outsl
adc
int
sbb
mov
mov
add
push
repnz
daa
ror
sub
rclb
add
lahf
jge
jns
inc
mov
testl
int3
pop
ljmp
dec
or
shlb
outsb
clc
xor
xor
rcll
add
aas
incb
std
cmp
movsb
repz
dec
les
fildl
addr16
mov
into
jl
incb
cltd
jo
shl
leave
and
in
loop
cmpsb
iret
lret
lds
fucomp
fisttps
xchg
data16
hlt
fsubrs
xchg
push
add
sti
add
lods
ja
pop
pop
cmp
jb
xchg
cmpsl
out
adc
roll
pop
imul
add
mov
add
hlt
int3
sub
jb
add
icebp
jmp
ljmp
mov
test
test
pop
inc
mov
and
rcrl
xor
movb
stos
push
xchg
ficoms
lret
cmp
into
in
jle
icebp
add
sarl
jecxz
cld
loopne
xchg
ret
sti
inc
addr16
mov
push
push
mov
mov
mov
push
jbe
dec
out
clc
inc
add
in
pop
sbb
or
xor
pop
sbb
loope
out
push
sub
jle
add
and
add
leave
shll
sub
lcall
push
and
arpl
test
and
adc
nop
pop
lcall
sub
aaa
push
xchg
inc
add
xor
rol
add
das
push
add
pop
fsubrs
add
jp
enter
adc
sub
mov
pop
pop
adc
shr
xchg
data16
aas
sbb
lods
aad
push
pop
mov
add
cmc
and
or
clc
js
jp
and
mov
xlat
in
inc
dec
dec
ds
cmpsb
adc
outsl
ss
add
rcll
add
add
dec
sbb
je
push
int
test
int
movb
push
push
in
fdiv
push
xor
sub
cmp
fcmovbe
lret
pusha
add
addr16
add
insb
ret
out
xor
push
sbb
fs
jbe
sbb
mov
test
cmp
inc
add
loope
cwtl
cmpsl
stos
dec
push
cld
psubq
movsl
add
xor
and
loop
movb
mov
mov
jmp
dec
enter
loope
leave
shll
and
add
jmp
aas
jl
push
test
xchg
lods
stos
enter
add
mov
sub
jmp
sbb
add
xor
insb
les
test
jne
sub
jl
shll
sbb
lock
shrb
inc
add
pop
mov
and
addb
imul
jbe
inc
lea
lods
inc
mov
iret
imul
add
add
jne
add
popa
dec
dec
jno
push
cmp
lret
into
insb
push
sqrtps
imul
test
ds
pop
out
mov
pop
addb
sbb
shrb
or
mov
adc
jne
fs
xchg
filds
xchg
push
jb
popf
inc
mov
inc
cmpsb
sbb
add
pop
sbb
mov
fiaddl
mov
add
dec
shl
movb
mov
les
mov
bound
std
sbb
cmpsb
sbb
pop
push
mov
and
rclb
push
and
cmp
flds
or
inc
adc
dec
fwait
dec
jmp
xchg
sahf
and
jmp
jge
inc
daa
repnz
addb
mov
or
pop
xor
cmc
ds
lret
push
dec
cmc
and
add
mov
add
push
cli
dec
xchg
add
push
movsl
into
pop
mov
add
test
jge
add
dec
inc
add
add
inc
repnz
xor
add
sub
sbb
xlat
mov
mov
or
add
dec
cmpsb
xchg
stos
in
pusha
add
leave
js
call
pop
sbb
xor
bound
mov
gs
dec
sbb
pusha
add
and
sbb
idiv
cltd
sub
stc
sub
sub
loop
add
loope
es
jns
mov
fucom
push
jno
push
addb
inc
and
out
inc
add
jnp
and
mov
inc
push
test
xchg
or
add
add
sub
inc
cltd
std
lods
lcall
cmp
mov
pop
aam
inc
dec
and
jne
jb
mov
cmp
jns
adcl
push
xchg
push
dec
pushl
int3
icebp
jmp
push
cmp
add
jb
push
sbb
loope
push
dec
jae
je
fisubrl
push
cmp
ja
pop
outsb
int
add
mov
ja
sub
mov
fisttpl
ret
test
lret
mov
icebp
aaa
aam
lods
mov
mov
mov
ss
das
test
xchg
mov
push
dec
insb
and
pop
and
cmp
inc
push
sbb
stos
clc
push
jae
aas
mov
add
xchg
inc
add
mov
adc
cmc
lea
xchg
test
in
jmp
pop
jnp
sub
dec
incl
add
add
cmp
popf
rcl
scas
loop
out
jne
push
les
lcall
fdivrs
out
sub
insb
ficomps
inc
mov
cltd
mov
xchg
addb
xchg
or
sub
jo
jmp
xchg
rclb
mov
add
push
mov
add
add
cmp
repnz
add
xchg
out
mov
sahf
add
mov
xchg
xchg
push
mov
addb
xor
popf
clc
dec
out
jge
push
xchg
pop
out
popf
mov
xchg
inc
mov
adc
mov
lods
sbb
cmp
mov
loopne
loopne
adc
adc
inc
adc
stos
das
pop
faddl
sti
xchg
xor
stos
and
add
imulb
mov
push
add
pop
mov
imul
movb
cltd
xchg
xchg
jge
outsl
or
clc
push
and
sar
mov
inc
xchg
push
fnstenv
fs
or
insl
jb
add
stos
push
sbb
aam
orl
add
lcall
add
xor
sbb
ret
adc
fcomi
je
dec
popa
inc
add
jge
jg
pop
mov
add
aad
xchg
mov
fisttpl
or
jo
pop
xchg
pop
jge
add
mov
pop
pop
xchg
popa
in
cltd
enter
sub
xlat
and
xchg
adc
push
pop
pop
mov
pop
or
in
mov
stos
shrl
mov
jecxz
mov
xchg
int3
and
add
and
aad
cmp
add
xor
adc
fidivrl
test
out
xor
pop
or
mov
outsb
jo
xchg
leave
xchg
testb
sbb
lods
and
rolb
leave
inc
add
jg
hlt
mov
xchg
lcall
les
fcoms
pop
inc
push
stos
adc
xor
mov
loope
pop
inc
add
dec
cmp
mov
lret
fcomps
inc
push
pop
mov
imul
mov
pop
and
and
js
pop
xor
sub
add
mov
or
in
add
nop
into
sbb
mov
mov
loop
lods
aaa
sahf
mov
cltd
or
imul
add
lcall
and
mov
xchg
or
adc
add
leave
cmp
enter
xchg
outsb
mov
stos
pop
dec
out
jbe
cld
aad
add
pusha
add
arpl
mov
in
std
in
add
std
mov
fcompl
adc
xchg
lea
int3
adc
mov
pop
mov
push
ljmp
inc
rolb
mov
ds
push
sub
add
jno
add
or
mov
or
lahf
push
inc
outsb
jns
stos
jmp
rol
mov
jg
cmp
push
add
push
xor
cmpsb
pop
ret
or
inc
add
sub
add
mov
mov
push
push
add
daa
sahf
mov
pop
test
jno
sahf
mov
dec
fidivrl
push
add
add
hlt
xchg
mov
sub
or
addb
xchg
and
add
sti
cltd
mov
mov
bound
shll
add
out
js
into
inc
add
add
call
mov
daa
mov
cmpsl
dec
loop
fcmovbe
std
int
call
cmp
add
add
mov
int
movb
pop
adc
or
cmp
inc
mov
pop
add
ret
add
add
gs
inc
nop
cmpsl
push
lods
push
mov
jb
sub
mov
popa
push
fwait
xchg
and
sahf
lock
pop
xor
rcrl
lea
leave
cwtl
lahf
and
test
jmp
dec
loopne
xchg
mov
push
dec
add
repnz
and
xor
andl
lret
lods
mov
fbstp
out
jnp
rolb
xchg
push
in
add
sbb
es
mov
sub
js
and
imul
dec
dec
test
icebp
cmp
push
push
sbb
jp
out
inc
add
orl
mov
rolb
jno
mov
je
add
mov
int3
xor
in
add
cmp
add
subl
add
xor
rcrl
pop
mov
jbe
addb
shr
xchg
jnp
pusha
add
movsb
hlt
je
add
aas
pop
sbb
push
push
push
das
mov
lret
cli
js
fwait
ret
loop
mov
fdivl
mov
and
and
pop
mov
jle
aas
sbbl
mov
addb
cs
mov
test
mov
dec
insl
dec
aaa
pusha
add
pop
dec
cmp
push
add
add
mov
pusha
add
repz
pop
adc
addr16
add
imul
call
lret
add
mov
add
mov
ret
push
addb
mov
sbb
das
and
inc
pop
mov
fistpll
add
cmp
cmp
cmp
repnz
adc
outsb
mov
adc
test
rolb
jle
icebp
cmpsb
xchg
pop
pop
jge
negb
shrl
xchg
movsl
sub
fstp
adc
add
cltd
fwait
lahf
outsb
pop
and
add
add
inc
add
lret
out
incb
es
outsl
add
mov
gs
mov
pop
jmp
cmp
push
outsl
addl
in
cmp
sbb
sbb
loope
mov
andl
scas
das
adc
ljmp
fidivl
sub
fdivrl
lock
add
push
cs
lds
lds
popf
das
mov
ss
movb
mov
xlat
lahf
mov
ja
xchg
testb
add
mov
ss
add
incl
add
test
fs
add
add
xor
mov
popf
push
jmp
ds
xchg
test
jl
sbb
add
cwtl
outsl
jge
test
add
add
jmp
imul
and
es
mov
mov
inc
xor
add
add
hlt
fistl
adc
int3
jb
lcall
daa
mov
or
dec
mov
rcll
xor
enter
out
ds
and
scas
in
inc
pop
lret
xor
addb
dec
xlat
xchg
push
jnp
xchg
fmull
popw
cmpsb
icebp
pop
cld
lahf
push
popf
xor
push
pop
mov
in
push
adc
push
mov
cmc
stos
mov
jno
jns
test
pop
jmp
jbe
push
xchg
loopne
xchg
jbe
jl
add
shl
hlt
mov
cmp
push
inc
rolb
dec
addb
mov
cmpl
and
mov
lret
cli
lret
ret
bound
inc
out
jp
notb
fisubrs
inc
push
pop
push
mov
int3
xchg
push
push
cs
repz
and
mov
sbb
dec
loop
dec
sbb
outsl
fcmovnu
xchg
sbb
scas
add
dec
je
adc
lods
dec
xor
inc
jge
jg
xchg
sub
stos
cmp
jo
fisttpl
imul
rcr
mov
lock
ja
lret
ret
dec
xorl
dec
into
test
mov
push
add
je
das
lock
in
jmp
ljmp
add
stc
push
add
cld
mov
jne
push
pop
or
xor
xchg
lcall
iret
insl
mov
push
sub
stc
shl
pop
or
mov
aad
dec
mov
les
mov
stc
ja
and
sbb
pop
pop
mov
pop
pop
out
movsb
out
dec
mov
jno
addb
jecxz
lods
ds
and
movsb
dec
fnstcw
sbb
imulb
and
sbb
and
lret
add
dec
cmc
xchg
mov
add
je
mov
jne
push
cs
ret
pop
addb
rorl
test
mov
ret
cmp
sub
push
idivb
pop
jne
outsb
xchg
test
and
in
xor
jge
add
repz
mov
ss
test
dec
push
popa
iret
jecxz
test
lock
xor
xchg
mov
hlt
inc
add
pop
cltd
xchg
shlb
add
push
add
push
lcall
out
add
inc
mov
mov
sub
or
out
cmc
or
pushl
rolb
ficomps
std
iret
sbb
cmp
bound
xor
sbb
add
jp
in
inc
add
cli
add
xor
jge
inc
add
outsl
push
cli
lcall
or
addb
inc
add
cmp
test
in
sub
jle
add
add
hlt
sub
add
stos
les
mov
fwait
enter
push
xchg
add
cmp
xchg
dec
cltd
bound
ljmp
push
sub
adc
sbb
xchg
rcll
ja
std
out
xchg
lret
adc
add
data16
pop
push
sub
out
ficomps
adc
mov
add
xchg
mov
adc
test
xor
movsb
jns
into
or
addb
add
jno
popf
jge
add
push
shrb
xor
xor
icebp
pop
popf
jp
add
call
leave
xor
sub
out
fisubs
movb
stc
movsl
cmp
sbb
mov
mull
add
jge
pop
int
push
cmp
mov
add
mov
add
js
mov
repz
xor
lahf
jb
pop
call
push
push
and
pop
lret
inc
shlb
and
add
jb
sbb
gs
jl
xor
push
lret
mov
pop
daa
fwait
inc
add
movsb
aad
mov
or
fcomps
das
push
adc
xor
sti
mov
js
std
movsb
test
lods
stos
xchg
add
sub
dec
cmp
rcrb
aas
cmp
or
mov
in
gs
jmp
xor
mov
scas
mov
popa
mov
aas
cmp
in
ds
out
gs
jmp
cmpl
jbe
push
cmp
jle
ja
cmpsl
adcl
testb
sub
adc
sbb
fstps
jmp
push
push
cmp
stc
push
or
mov
add
or
scas
add
xchg
mov
pop
sub
dec
lcall
cltd
dec
int3
cmp
shl
arpl
mov
push
push
lret
aad
outsb
and
scas
imul
jp
xor
adc
into
rolb
xchg
imul
cmpsl
call
sub
imul
lea
xchg
iret
addr16
sub
ret
push
xchg
cmp
ret
ljmp
adc
push
sbb
jecxz
or
out
cs
xor
scas
xchg
daa
jo
and
ljmp
cmp
cmp
pop
int3
cmc
mov
clc
pop
jmp
dec
enter
jae
xchg
cmc
sbb
jb
or
pop
mov
add
push
push
mov
xlat
scas
movb
inc
test
ss
insl
xchg
sub
mov
lods
or
inc
add
add
pushf
mov
out
mov
lock
nopl
push
mov
ror
sar
test
ret
mov
sub
dec
fwait
mov
out
shll
insb
mov
lock
add
jge
and
jae
aas
xor
jno
loope
dec
push
mov
cmp
sti
inc
mov
in
jmp
jmp
xlat
aam
sub
jno
test
test
cmp
sbbl
push
push
jmp
call
cld
fwait
push
xchg
jecxz
repnz
div
iret
dec
cltd
push
pop
mov
fs
out
leave
mulb
addb
or
mov
push
lret
mov
add
dec
cmp
push
add
aam
cmpsl
scas
and
pop
sbb
xchg
pop
hlt
mov
fsubrs
shlb
pop
sub
xchg
pop
test
xchg
add
pop
popa
fidivrl
icebp
add
add
dec
fs
jp
jmp
jae
sub
cmp
jae
add
ret
mov
sbb
push
fwait
mov
add
jo
push
test
inc
add
shrl
mov
pop
push
icebp
xor
orl
add
sub
push
or
ss
mov
adc
jecxz
adc
add
add
mov
xchg
in
mov
add
imul
mov
mov
shl
fdivrl
add
ljmp
jo
ret
jecxz
pop
rep
iret
out
jl
imul
jo
cmc
cwtl
xor
lret
lret
aam
adc
dec
fisttpl
add
jb
movb
add
pop
xchg
pushf
imul
xchg
jbe
pop
fcoms
or
movsl
cli
aas
test
sbb
mov
popa
jl
dec
pusha
add
xor
in
pop
data16
lods
jecxz
stc
es
xor
lock
pop
pop
jno
xchg
fwait
ljmp
jno
repz
cmp
add
inc
add
push
push
jne
into
inc
add
inc
movb
out
repz
stc
fistpll
ret
add
lret
cmp
and
fnstenv
inc
xchg
into
insb
sbb
stos
dec
int3
arpl
inc
pop
pop
jecxz
movsl
or
xchg
repz
movsb
int
adc
dec
insb
cmpsb
js
loopne
lock
push
mov
jecxz
add
xchg
std
pusha
add
xchg
insb
sub
or
mulps
test
rolb
push
jg
xchg
mov
ja
sbb
cmc
clc
ficoms
and
movsb
pusha
add
cmp
and
bound
xor
add
or
xchg
insb
or
pop
xchg
jns
xchg
stc
div
bound
pop
imul
les
leave
das
mov
jg
daa
inc
add
out
fwait
out
rclb
jmp
ljmp
pushf
les
data16
add
cmp
push
clc
mov
ret
mov
add
out
pop
dec
xchg
mov
and
cs
inc
aam
sbbl
sub
cltd
hlt
cmp
add
mov
mov
add
repnz
push
add
push
sbb
enter
sbb
push
ds
add
lahf
scas
fcmove
addb
jns
dec
sbb
or
xor
das
push
add
xchg
mov
out
jl
xor
jecxz
int3
popa
dec
iret
fdiv
or
arpl
jae
jne
add
and
mov
add
movsl
cmpsl
adc
frstor
and
xor
cmp
add
loopne
push
stc
add
mov
inc
rolb
adc
divl
add
xchg
inc
add
add
pusha
add
cmpsb
jecxz
aas
mov
sub
push
mov
decb
mov
add
lret
ljmp
data16
jno
add
mov
sarl
pop
mov
cmc
xor
pusha
add
shll
add
pop
cmp
cmp
add
in
cmpsl
inc
add
mov
xlat
imul
pop
and
stos
repz
add
arpl
sbb
into
cltd
xor
dec
ret
add
call
xchg
roll
sub
sti
pop
fists
mov
cwtl
das
fstpt
adc
das
pop
mov
rcrl
push
loopne
inc
add
sbb
inc
add
jle
arpl
jb
pusha
add
adc
push
lock
divb
adc
call
pop
inc
fimull
sbb
notl
mov
cmp
fisubrs
aad
and
sahf
insb
stc
orl
push
add
push
jb
les
fisubl
adc
sti
inc
add
inc
push
dec
daa
sub
loopne
mov
mov
sub
sahf
mov
jns
jo
push
imul
mov
push
in
jns
xor
mov
add
sahf
int3
sbb
dec
orl
xchg
add
das
sahf
cs
jmp
out
stos
adc
lret
in
sahf
jecxz
mov
mov
push
adc
addr16
aam
pushf
jle
push
mov
fdivrl
pmulhw
add
stos
jnp
pop
add
ret
out
jb
xor
mov
imul
sti
add
xchg
sub
cwtl
mov
ss
xor
or
loope
bound
push
inc
add
push
xor
and
ljmp
pop
loopne
test
es
scas
adc
jo
cmc
test
sbb
and
add
fadd
add
add
cmp
outsl
push
push
add
mov
or
dec
dec
outsl
mov
ss
fldt
scas
imul
daa
adc
sub
dec
jp
mov
arpl
mov
inc
dec
xchg
cmp
dec
dec
mov
lods
int3
jb
pop
leave
neg
les
cmp
ret
in
mov
pop
pop
fildll
clc
push
test
test
push
scas
mov
add
leave
hlt
aas
cs
movsb
shrb
in
add
filds
lret
mov
push
mov
fwait
loope
add
pop
arpl
push
add
adc
scas
loop
pop
push
sbb
aaa
inc
add
add
inc
add
mov
fisubrl
shr
and
js
adc
and
stos
add
ja
add
rcl
scas
imul
adc
mov
or
mov
bound
je
movb
cmc
mov
pop
inc
add
in
fimuls
ret
jo
xchg
lods
cmp
and
addb
cs
cld
jb
mov
aam
dec
jbe
add
cltd
add
push
arpl
xorl
mov
add
xchg
cmp
int
fcoml
sub
fs
dec
mov
jmp
xchg
add
jmp
test
or
sub
cmp
and
in
pusha
add
push
in
pop
idiv
es
shlb
aaa
and
ja
dec
std
sbb
xor
pop
loope
jge
test
or
xor
test
test
loop
repz
and
aam
aaa
jno
jo
ja
add
out
cmp
pusha
add
push
pop
push
and
add
sub
adc
ljmp
clc
cmp
or
add
fidivs
xchg
mov
cli
or
mov
icebp
test
out
scas
pop
fbld
mov
lock
loope
sti
mov
jbe
iret
inc
xchg
mov
rolb
and
pop
rolb
mov
jle
add
cmp
mov
bound
inc
add
sbb
test
cmc
xor
fs
pop
jle
in
mov
cwtl
rcl
add
adc
push
idivl
add
dec
out
xor
jmp
pop
mov
cli
lcall
push
add
xlat
xchg
mov
xor
inc
adc
iret
sahf
push
add
lock
sbb
inc
cmpsl
scas
outsb
pop
pop
loope
mov
lods
cmp
lods
xchg
cltd
cld
mov
xchg
shrb
insl
pop
lret
inc
add
xor
pop
xchg
out
push
or
inc
fsubrl
dec
hlt
fwait
inc
add
sarl
and
mov
xchg
or
or
je
mov
jmp
jb
daa
and
push
xor
inc
add
out
cmp
xor
sbb
pop
cmpsb
lahf
fcmovb
add
jns
filds
cmp
shrl
insl
jge
push
pop
movsl
push
add
dec
xchg
scas
ss
push
stos
ds
inc
push
mov
fisubs
lret
add
jp
or
data16
flds
shrl
pop
jg
stos
rolb
xchg
xchg
adc
aaa
test
outsl
scas
jnp
xor
add
adc
mov
push
shll
add
jg
cmp
cld
lret
pop
push
jne
out
push
mov
xor
push
test
xor
mov
jp
add
push
or
fwait
pop
jge
push
fs
or
inc
add
mov
insb
scas
add
sub
xlat
insb
inc
add
xchg
test
mov
leave
test
pop
loopne
lret
jl
sub
std
out
jae
outsb
mov
jl
adc
mov
xor
aam
js
xor
or
data16
push
add
inc
add
adc
jecxz
imul
inc
and
icebp
mov
pop
insl
fsubrl
push
inc
out
pop
movsl
popf
dec
sub
mov
jnp
jne
cmp
dec
xor
pop
mov
add
jne
xchg
bound
pop
jnp
jnp
and
ja
stos
push
add
add
cmpl
push
add
lods
fs
xor
leave
mov
test
cmp
inc
add
fst
inc
out
mov
lret
fiaddl
add
fiaddl
movb
mov
fimuls
mov
das
mov
dec
int
xchg
in
iret
loopne
and
ret
stos
loop
jb
loop
push
ds
inc
fs
dec
pop
inc
lcall
inc
add
insl
jp
cltd
xchg
leave
jecxz
pop
mov
js
cmp
aam
mov
fsubrl
mov
imul
jg
fistl
rclb
lahf
mov
clts
add
push
inc
add
add
mov
mov
mov
jecxz
add
xor
add
jnp
xor
inc
mov
sub
add
jbe
mov
dec
add
aam
imul
and
or
ret
mov
aad
sarl
ds
adc
add
mov
lret
xchg
addb
lds
jae
jo
sub
insl
adc
in
aas
push
jbe
lds
cmpsl
int3
cltd
push
jo
xlat
fmuls
imull
cmpsl
movb
fidivs
cmpsl
mov
insb
movb
and
lret
push
add
je
xchg
pop
sarl
add
jbe
add
test
dec
or
pop
pop
arpl
mov
out
dec
and
mov
push
test
outsb
cmp
xchg
xchg
push
or
add
xor
add
mov
bound
xchg
test
ja
mov
dec
stos
stc
jbe
xor
iret
mov
mov
pop
fs
mov
jae
jne
push
ds
inc
lods
out
adc
dec
and
pop
ja
push
cmp
add
xchg
int
add
add
jne
rcrb
pop
test
mov
mov
movb
shlb
add
clc
mov
sub
push
add
imul
aas
fcoml
jg
ss
sbb
mov
mov
add
inc
add
lret
xchg
cmp
dec
fnstsw
xchg
push
add
xor
cmpsl
rol
add
pushf
pop
sub
hlt
dec
js
mov
jno
cmpsb
aad
cmp
loope
mov
push
aam
gs
stos
adc
loopne
add
mov
fwait
mov
fdivrs
inc
out
jae
xor
mov
push
add
and
js
les
push
pop
jmp
aaa
jecxz
cld
call
rcrl
push
xchg
dec
fcomi
xor
cs
mov
out
pop
in
jecxz
aas
mov
pushf
dec
loopne
xchg
test
add
push
mov
mov
mov
cwtl
xchg
sub
xchg
xor
add
jecxz
ss
pop
mov
pop
aas
loope
out
xchg
and
fsub
add
mov
mov
push
mov
or
or
inc
add
movsl
and
bound
icebp
xor
pusha
add
jb
add
movsb
adc
xchg
mov
std
mov
imul
xchg
xchg
repnz
lods
dec
ja
and
push
jmp
popf
add
xchg
push
jecxz
sub
or
xor
loopne
out
xchg
mov
inc
or
out
xchg
sbb
movsl
cltd
addb
cltd
sbb
pushf
jmp
mov
loop
mov
add
xchg
mov
fidivrs
fld
mov
add
movb
xchg
mov
sub
stos
and
mov
aaa
xor
mov
xchg
mov
idivl
lret
insl
mov
imul
jmp
xchg
mov
ljmp
mov
cmc
dec
orl
mov
add
add
adc
movsl
clc
cmp
jmp
push
add
add
or
pop
in
in
mov
mov
hlt
jno
cmpsb
cmpsb
imul
loopne
push
adc
dec
addr16
dec
pop
or
out
lds
add
call
mov
add
or
add
cli
imul
xchg
add
fnstenv
xchg
movsb
arpl
fstpt
test
cmc
aam
ret
rclb
mov
pusha
add
movsb
jo
mov
sub
mov
xor
addb
jmp
inc
lods
sub
lcall
push
inc
pop
xor
fsubl
stos
jge
add
mov
jbe
xchg
pop
pop
cmp
push
movsl
test
inc
arpl
sub
dec
imul
sbb
adc
add
cmp
sbb
mov
mov
mov
dec
sub
scas
lret
xor
lock
leave
cli
push
addb
aam
xchg
dec
out
fimull
fcmovnb
movsl
xor
push
clc
add
cmp
shrb
mov
add
mov
cmp
push
int3
jnp
rclb
push
mov
out
add
cmpsb
scas
fcoms
xor
aaa
mov
pop
adc
cwtl
or
and
sub
cmp
js
inc
popa
insb
ror
push
fstpl
divb
iret
nop
add
movsl
outsb
mov
or
sahf
fmuls
add
aaa
adc
sti
movsb
push
xchg
xor
movsl
hlt
and
lods
jae
leave
add
test
mov
icebp
test
inc
add
out
sbb
adc
push
jecxz
dec
dec
fcmovnu
sbb
xor
add
fs
enter
pop
push
push
test
xchg
cmp
pop
jge
jns
out
outsb
rcrb
jns
lds
test
or
mov
sti
adc
xchg
aas
xor
stos
into
mov
mov
cmp
mov
lret
mov
cmp
add
push
mov
xor
inc
gs
and
mov
cmpsl
in
mov
std
mov
mov
stc
ret
out
mov
sbbl
rcr
pop
jg
ds
and
push
mov
xchg
cltd
dec
clc
cmp
push
jmp
pop
leave
xchg
js
es
add
cmpsb
leave
cmp
dec
push
sub
or
stos
shll
add
add
sub
aam
lods
push
jg
cld
push
xlat
movl
cmp
test
or
clc
push
cmp
lahf
push
adc
inc
add
jecxz
sub
lds
push
lea
mov
pop
aad
mov
xchg
pop
call
inc
add
push
add
pop
lea
rcll
push
mov
mov
add
pusha
add
sbb
sarl
mov
sbb
jmp
scas
jmp
rolb
or
fcomip
test
mov
jns
negl
cs
mov
aam
fldenv
mov
sub
xor
movsl
je
mov
xchg
and
ds
push
cli
lret
hlt
push
push
lret
lock
add
mov
out
push
and
std
cs
mov
mov
fdivr
sbb
dec
push
xchg
pop
add
rolb
cld
mov
mov
jo
std
cld
mov
pop
ret
cltd
sub
stos
fadds
add
pop
aas
or
xor
cld
push
imul
mov
inc
add
dec
sti
testl
dec
mov
mov
mov
aad
or
jno
lods
or
insl
mov
lock
aam
adc
dec
out
lea
inc
add
and
repnz
les
push
sbb
or
or
rorl
sti
in
dec
enter
sub
fdivl
nop
les
movsb
add
mov
or
loop
mov
xor
xchg
sub
mov
cs
popf
fcoml
cli
lcall
sub
add
and
inc
add
push
adc
lret
add
jbe
mov
inc
add
dec
push
arpl
rolb
dec
add
es
nop
push
xchg
or
sbb
push
fld
add
jno
add
pop
fiaddl
dec
push
int3
nop
addb
cli
fmull
lret
aam
lods
and
push
fistl
pop
aas
dec
jno
js
fistl
sti
mov
pop
mov
loopne
out
jmp
mov
push
mov
mov
imul
psadbw
std
add
shll
xor
frstor
sub
sbb
outsl
xor
mov
comiss
inc
add
or
jmp
cs
jno
add
mov
adc
sbb
add
xlat
jno
or
push
loopne
test
cmp
dec
vcvtps2pd
add
rolb
add
pop
ror
testl
sbb
dec
mov
int3
roll
and
sbb
mov
xor
sbb
iret
dec
stc
xor
add
dec
cltd
into
pop
ret
std
or
cmpsb
test
push
clc
repz
mov
add
adc
nop
ds
fxch
mov
inc
ss
jecxz
scas
xor
add
push
icebp
and
xchg
cltd
cmc
aad
add
sbb
add
add
popa
mov
movsb
pop
repnz
or
imul
add
push
bound
std
dec
mov
test
jge
push
xor
out
ds
add
add
das
mov
xchg
add
cmp
inc
add
outsl
adc
add
mov
mov
movsb
sbb
mov
cltd
pop
jne
pop
iret
aaa
mov
fmull
pop
inc
rcrl
xchg
inc
add
ljmp
into
addb
dec
inc
add
out
mov
push
out
loop
xor
and
movsl
aam
adc
dec
push
pop
xor
and
add
lret
jecxz
cwtl
xlat
xchg
inc
add
add
leave
cmp
shll
cmpsb
or
dec
mov
pop
aam
xchg
fcomip
fdivs
add
push
fwait
cmp
add
insl
loope
fdivrl
and
dec
inc
add
add
mov
cmc
mov
or
out
aam
ljmp
xor
add
cmc
mov
in
pop
adc
sti
add
adc
popa
sbb
gs
flds
sbb
xchg
ja
mov
pushf
fists
pop
add
mov
cmc
fdivrl
rolb
add
mov
jl
mov
adc
lods
imulb
or
push
test
add
jo
mov
cmp
cmp
insb
and
add
icebp
inc
sbb
pop
or
clc
std
push
clc
ficomps
ljmp
fisubrl
xor
and
les
test
jnp
jge
adc
fcoml
cmp
inc
add
fcoms
mov
xor
sbb
dec
adc
add
jb
inc
add
jns
mov
push
fwait
cwtl
pushw
icebp
ret
ljmp
stc
popa
jne
aad
adc
add
mov
pop
mov
iret
inc
add
cwtl
inc
xorl
ja
std
jle
cmp
mov
add
lret
xchg
les
dec
inc
cmp
incb
mov
cmp
hlt
lods
sahf
ficomps
aas
rolb
cmp
shll
nop
sbb
jge
adc
fwait
lock
pop
mov
popf
jno
call
scas
and
js
push
test
mov
xchg
add
pop
sbb
or
inc
fcomps
jmp
je
add
rcr
addr16
mov
lea
addb
xorl
jge
inc
add
xor
inc
icebp
mov
mov
pop
mov
inc
fistpll
add
cltd
inc
sti
into
sbb
ljmp
in
rorl
xor
into
cld
or
dec
xor
ret
mov
cmp
int3
mov
or
inc
add
lcall
push
lahf
mov
add
rcll
jp
push
ret
cmp
xor
jns
repz
sub
lcall
add
inc
dec
xchg
push
addb
push
enter
in
je
xor
pop
stos
sub
adc
nop
cmpsb
loope
add
imul
nop
add
sti
mov
pop
sbb
sbb
xor
stos
cmp
pop
jno
mov
cmpsl
cmc
add
push
in
add
jno
mov
mov
repz
cmp
add
inc
add
add
and
scas
mov
mov
add
addb
dec
jl
and
xchg
push
lret
adc
add
outsl
repnz
movb
aas
push
mov
cld
xchg
in
repz
adc
push
out
push
outsl
add
test
les
pop
xchg
sarl
leave
xor
scas
sbb
rorb
fcomps
add
jns
jns
push
ds
sbb
dec
mov
dec
fbld
dec
jle
fwait
loope
mov
iret
xchg
xor
mov
inc
std
inc
mov
ret
xor
hlt
daa
jmp
mov
push
orl
aam
cmp
add
loop
adc
inc
int
insl
in
rorb
mov
dec
xchg
insl
jne
add
jbe
divb
jnp
in
jle
add
bound
jbe
add
add
add
dec
xchg
add
jl
fdivrl
daa
insl
xchg
sbb
aaa
popf
push
cmp
add
outsb
pop
nop
mov
mov
mov
mov
jmp
pop
xchg
lret
mov
adc
sahf
loop
or
xor
add
jge
mov
loope
cli
pop
mov
jb
movsl
aaa
push
push
cmpsb
idivb
sbb
xchg
sbb
in
fs
lds
inc
add
nop
mov
sub
jne
cmp
dec
cmpsl
fsts
fisttpl
add
pop
xor
jmpw
pop
mov
mov
xchg
mov
in
addb
fwait
mov
pop
add
pop
cltd
adc
in
xchg
dec
scas
add
sub
fistpll
inc
add
and
jmp
imul
push
mov
push
addb
sysret
sub
mov
push
xchg
fstpl
or
push
or
pusha
add
add
icebp
imul
push
or
sbb
mov
lods
lock
pop
sub
dec
and
js
and
sahf
inc
sahf
jne
int3
add
lahf
xchg
xchg
add
sbb
or
push
cmp
or
jbe
xchg
add
jbe
push
lods
ret
test
inc
add
xchg
out
jge
sbb
jnp
imul
mov
movb
inc
add
and
fnsave
ja
mov
mov
insb
xor
or
mov
jp
push
fadds
popf
fisubrl
push
mov
dec
inc
add
or
xor
xchg
pop
les
mov
dec
sub
add
cmp
bound
inc
bound
enter
add
pop
movsl
js
add
cmp
and
cmpsb
aam
pop
xchg
xlat
cli
mov
pop
ljmp
pop
addr16
xor
loop
add
rolb
ret
les
push
pop
ss
push
add
addr16
sub
les
xchg
mov
fwait
xor
aam
add
add
mov
outsb
popf
dec
movsb
rolb
push
xor
test
inc
add
or
leave
inc
std
xor
inc
stos
sbb
jae
xor
sahf
jnp
fsubrs
cwtl
cmpsl
mov
push
mov
cmpl
movb
or
lahf
jecxz
loop
dec
dec
sbb
lcall
inc
in
sub
in
add
arpl
add
repz
and
sub
cmp
rolb
in
ds
rolb
add
movb
push
add
imul
and
out
inc
push
add
jg
int
add
nop
add
mov
jne
dec
je
movsb
aam
xchg
push
add
ss
mov
add
xchg
adc
dec
stos
cmpsb
or
sub
test
pop
sbb
dec
mov
test
popa
cmp
jne
and
int3
sbbl
mov
mov
lahf
cmp
fnstsw
jnp
cli
dec
inc
adc
cmp
add
dec
push
inc
add
data16
sub
push
push
mull
sub
add
and
mov
lods
imul
inc
sahf
ss
pusha
add
add
outsb
scas
subl
mov
cwtl
mov
mov
ss
push
pushf
pop
stc
fists
mov
pop
push
add
xchg
nop
add
xor
push
add
ja
mov
sti
popf
xor
mov
lods
hlt
fnstenv
mov
addb
jmp
jno
pusha
add
rolb
xor
repz
sahf
cmpsl
idivb
in
add
movb
xchg
xchg
movsl
mov
stc
ja
mov
movsl
mov
mov
add
cltd
adc
add
mov
dec
inc
lret
shrb
repnz
mov
pop
push
leave
pop
inc
icebp
xchg
push
mov
cli
dec
int3
push
call
or
mov
int
aad
ror
into
movsb
push
cld
les
xchg
sub
push
sahf
push
js
jl
out
les
sbb
ret
sbb
jno
add
sahf
jmp
iret
in
inc
jbe
notl
mov
mov
sub
data16
jg
outsb
in
sub
xor
in
movsl
pop
je
cltd
jp
mov
cmp
out
out
lret
cmc
roll
ljmp
mov
stos
stos
xchg
in
cwtl
cmpsl
push
pop
xchg
enter
addb
hlt
pop
xchg
shll
rolb
dec
fdivl
push
gs
push
xchg
and
in
inc
add
mov
adc
pop
in
cmp
test
cld
enter
int
pop
stos
adc
push
add
push
and
movsl
xlat
xor
and
inc
aam
mov
xchg
bound
cmpsl
cmp
aam
flds
push
xchg
fs
adc
push
jg
arpl
pushf
jl
mov
mov
in
ficompl
movsb
jmp
push
cmc
les
push
insl
pop
pop
les
in
add
dec
fidivrs
add
sahf
popw
push
push
xlat
sbb
sbb
add
andnps
pushf
sbb
stos
mov
add
sub
je
mov
lcall
push
add
repz
leave
xlat
sti
pop
inc
in
sbb
pop
imul
movl
fistps
and
pop
jo
jle
push
mov
add
dec
mov
adcl
sbb
inc
add
jb
add
xchg
mov
xchg
mov
sub
pushf
mov
stos
ljmp
add
sbb
lret
fnstenv
pop
sbb
bound
jl
jp
repnz
fstps
pop
or
loopne
add
and
jle
sarl
les
in
push
add
mov
rolb
ffree
add
add
jns
xchg
and
add
add
xchg
imul
filds
es
int3
ret
cmp
jmp
scas
loop
cmp
loopne
lret
into
pop
ret
loop
std
mov
addb
fldt
pop
sub
xlat
fdivrp
out
and
hlt
ljmp
mov
repz
cmc
or
adc
pop
or
stos
lock
inc
mov
mov
fnstcw
inc
add
inc
add
xor
dec
movb
push
xor
out
mov
out
je
dec
popf
nop
aad
lcall
xchg
cmp
jae
seta
and
mov
rolb
aas
shrb
fstpl
in
cmp
std
mov
cmc
ret
jle
mov
movsb
fwait
repz
fcoml
dec
mov
add
mov
mov
lcall
push
imul
pop
enter
adc
xor
rolb
loop
xchg
stos
adc
movsb
and
in
push
push
or
fcomps
out
iret
jo
add
cmpsl
out
repz
or
jo
push
push
outsl
lds
jle
jge
ljmp
mov
jns
add
mov
pop
or
int3
insl
aad
aas
mov
cmp
add
jne
sti
nop
ja
adc
mov
xchg
fcmovnb
add
add
add
faddp
add
roll
and
xchg
stos
imul
sarl
addb
add
addb
add
pop
add
adc
cli
mov
imul
lea
xor
int
shrb
scas
xchg
adc
inc
dec
pop
cmp
bound
mov
cmp
sarl
rcrl
cli
mov
data16
jmp
stos
and
mov
das
les
xchg
scas
cmp
jno
jmp
loope
push
test
mov
xlat
dec
imul
mov
jbe
mov
cmp
pop
push
dec
cmpsl
leave
and
mov
pushf
jae
icebp
push
rolb
add
add
addb
in
inc
mov
mov
inc
das
sub
push
cmp
hlt
jmp
pop
xchg
sti
ret
add
mov
test
sahf
addr16
sub
outsb
inc
add
repz
and
loop
jecxz
cs
push
mov
inc
push
lock
imul
xorl
add
pop
popa
lea
fwait
out
xchg
push
in
rclb
int
shrl
mov
cmc
arpl
mov
add
mov
or
insl
scas
mov
std
mov
mov
sbb
out
cmpsb
popf
mov
dec
int3
mov
addr16
imulb
and
xchg
cmp
rcll
xchg
mov
push
cltd
jg
scas
mov
ja
xlat
jne
mov
push
fcomip
add
outsl
cs
sbb
call
icebp
or
xchg
sbb
xchg
add
sbb
iret
add
add
add
lahf
pop
into
cs
xor
dec
cmc
inc
add
roll
mov
and
not
or
je
dec
ficomps
in
addb
nop
addb
push
in
cmp
or
mov
in
jnp
stos
xchg
insb
lods
adc
cltd
and
push
jo
ljmp
xor
sub
xor
or
jg
dec
pop
nop
cmp
ret
inc
cmp
xchg
mov
int
adc
fcmovnb
or
sbb
mov
jmp
fsubs
mov
notl
aas
shrl
lret
lods
cmp
jb
cmp
add
fsts
adc
push
loopne
mov
fldl
xchg
inc
pop
add
add
fisubrs
pusha
add
sbb
inc
add
or
loope
inc
add
out
fnstsw
mov
addb
mov
in
xor
nop
arpl
add
je
out
inc
cmp
cs
lock
jl
adc
lcall
outsb
enter
xor
fildl
add
js
out
insl
ret
and
jmp
ss
jge
adc
clc
outsl
imul
add
adc
inc
add
dec
and
pop
aas
and
add
idivl
add
pop
or
xor
jmp
loopne
pop
or
idivb
aam
sbb
pop
xchg
in
add
jge
addr16
lods
stc
xchg
jmp
lock
add
sar
ret
dec
in
mov
test
sub
dec
scas
sub
inc
add
mov
sahf
lock
into
cmp
stc
in
inc
add
fldt
leave
sbb
pop
add
cmp
dec
jg
adc
fwait
push
dec
sbb
push
push
in
dec
js
add
add
stos
pop
adc
inc
add
ret
xor
xor
add
mov
cmpl
dec
mov
add
in
add
insb
cwtl
xchg
adc
add
add
daa
fldpi
fldl
dec
adc
mov
push
push
dec
xor
fcoml
jb
mov
int
or
add
loop
ret
inc
add
or
xchg
mov
ret
std
daa
stos
add
stos
stos
lcall
test
and
push
add
push
and
add
inc
call
add
cltd
and
aaa
xor
add
mov
js
out
sahf
outsl
mov
insl
inc
add
dec
std
mov
or
fdivp
nop
adc
popf
sub
push
in
mov
addr16
mov
clc
ljmp
add
add
mov
add
lahf
mov
rolb
xor
push
mov
adc
data16
popf
xchg
int3
cmpsb
out
and
sbb
pop
jo
pop
push
sbb
adc
mov
rdpmc
add
sbb
push
add
lods
cmp
ja
test
add
push
and
add
rorl
cli
cmp
mov
pop
mov
iret
mov
mov
inc
les
outsl
pop
es
jae
addb
add
mov
or
jns
add
xchg
loopne
cmpsb
movb
mov
jo
insl
loop
repz
repnz
std
add
inc
mov
jl
xor
ret
add
lcall
filds
jg
pop
adc
lret
add
es
xchg
addb
ljmp
mov
stc
jmp
daa
out
mov
test
cltd
mov
push
push
add
jmp
outsb
dec
leave
mov
inc
add
sar
scas
xor
and
repnz
js
je
and
adc
xchg
mov
push
xchg
push
or
daa
in
xchg
das
out
mov
vmovaps
out
in
sub
pop
clc
movsb
mov
sub
add
cmp
in
adc
jbe
mov
test
les
sub
aas
cli
and
add
lds
scas
cmp
pop
stc
pop
jbe
loope
and
idivb
outsl
mov
pop
lods
xor
ss
rcl
pop
lods
xchg
cwtl
fistpl
out
rorl
push
inc
pop
mov
sbb
in
fwait
cmp
push
mov
cwtl
xchg
inc
add
push
sbb
imul
loope
lret
jnp
pop
and
push
cmpsl
pop
push
mov
sti
xchg
or
push
stos
mov
loopne
shll
subl
pop
subl
ss
mov
jo
pop
add
cltd
jb
enter
clc
push
mov
lds
mov
cmpsb
subl
int
add
and
addb
mov
mov
push
mov
movb
stos
push
insb
pushl
popf
in
fisttpl
jge
out
cmp
out
cmc
imul
mov
mov
mov
mov
add
out
xchg
pop
mov
clc
and
jo
add
into
xlat
cltd
imul
es
push
add
jo
mov
jmp
lea
lcall
and
xor
cs
pop
sbb
mov
xchg
insb
mov
mov
jp
dec
lods
mov
sub
pushf
inc
imul
mov
div
iret
mov
push
int
cmp
push
mov
out
cmp
jns
push
fnstsw
push
icebp
sub
push
imul
push
outsb
stc
ds
mov
jg
es
mov
push
adc
icebp
stc
mov
and
jne
add
test
mov
test
popf
popf
nop
mov
mov
int
js
add
add
loopne
add
jp
jno
mov
add
sbb
ficompl
mov
inc
std
stos
nop
mov
or
imul
and
mov
es
cmpl
stos
repz
add
aas
scas
out
enter
in
shr
imul
repz
or
xor
mov
in
test
jg
inc
add
jae
add
push
dec
or
xor
das
push
mov
add
fsts
aaa
jp
incb
cli
sub
daa
xor
and
push
inc
lods
je
stc
lock
add
and
push
ffree
add
dec
xor
sub
add
pop
stos
or
adc
dec
mov
adc
sti
pushf
lea
jl
adc
ja
cli
cmp
add
mov
jne
mov
dec
xorl
add
scas
sahf
fnstcw
repz
neg
bound
pop
decb
cmpsb
insl
daa
xlat
loopne
or
fsubp
jo
sbb
imul
push
pop
nop
stos
out
push
movb
add
into
loope
ret
and
scas
sub
push
add
xor
fistpl
mov
cmpsb
adc
scas
loop
xchg
cmp
push
test
cs
mov
xchg
and
add
xchg
stos
pusha
add
es
adc
call
add
das
mov
push
inc
add
and
pop
test
add
ds
sbb
push
and
addl
in
scas
cmp
or
mov
xor
cmp
adc
inc
push
push
cltd
xchg
out
neg
leave
sahf
das
outsl
dec
inc
out
push
and
stos
cltd
mov
test
push
cs
adc
imul
daa
dec
outsl
aam
mov
jmp
ss
push
mov
out
sub
flds
test
xor
loop
jnp
mov
int
add
push
sti
dec
insl
xor
push
xor
cltd
fcoml
pop
xor
negb
iret
and
mov
sbbl
ss
add
stos
xchg
adc
movsl
push
sbb
inc
add
add
test
aam
out
pop
push
inc
add
lcall
push
sub
fptan
mov
push
sbb
fwait
xchg
rorb
add
jbe
cmc
loop
addb
xor
dec
inc
add
sub
call
jle
push
xchg
cld
daa
std
mov
and
in
xchg
test
bound
fwait
dec
jp
loopne
mov
mov
adc
int3
cmp
cmp
fisubl
pop
addb
addb
jle
cmp
jae
add
bound
jne
icebp
adc
mov
cmp
add
cmp
add
jecxz
clc
or
add
setno
dec
imul
in
test
stos
xor
dec
movb
out
add
cmp
fcmovbe
inc
add
xor
loope
jno
repnz
sbb
push
out
out
daa
mov
fsts
shll
or
aas
in
sub
in
int
jge
jmp
aaa
mov
push
add
out
mov
cmp
or
mov
sbb
sbb
add
or
je
sub
cmp
mov
mov
enter
adcl
mov
test
arpl
add
fidivl
pop
outsb
push
into
pop
pop
cmp
or
push
push
ret
add
sbb
mov
loop
cmp
dec
mov
push
vmwrite
dec
sub
js
add
aad
shlb
add
mov
int3
or
push
adc
test
out
std
jg
pop
loope
jae
or
xchg
jbe
subl
push
mov
es
adc
add
sbb
and
pop
jno
test
xor
mov
inc
add
ljmp
sahf
adc
sub
xchg
fwait
sahf
add
adc
aam
add
inc
add
add
add
insb
aas
fsubs
fidivl
mov
xchg
jns
insl
cmp
arpl
add
rcll
ret
sub
jecxz
test
dec
push
cwtl
mov
ljmp
or
icebp
pop
mov
cld
adc
mov
loopne
daa
scas
xchg
les
mov
mov
xchg
sarb
aad
je
cwtl
jnp
test
add
jecxz
dec
shlb
pop
push
fwait
xchg
cmp
add
sub
into
xor
sub
rorb
cmc
xchg
jne
pop
adc
stc
mov
mov
mov
data16
add
jo
push
add
mov
pop
aad
fadds
inc
cmpsl
inc
bound
push
add
ret
outsb
repz
sub
mov
xlat
sti
aad
and
xchg
adc
pop
lea
sbb
popf
lds
sti
imulb
mov
adc
sar
inc
add
jns
pop
lea
sbb
les
jno
add
out
add
mov
aas
inc
out
add
out
jne
inc
add
pop
xchg
loop
or
aas
mov
xchg
cmp
cli
xchg
mov
cwtl
jb
and
addb
rolb
xchg
jns
loopne
push
fimuls
das
insl
and
outsb
push
sbb
add
dec
addr16
push
pusha
add
mov
lcall
push
popa
fadd
add
add
sbb
jl
loop
pusha
add
out
test
xor
insl
jns
shl
bound
aam
inc
insb
outsb
popf
or
out
cmpsb
clc
jne
clc
xor
sub
inc
cmp
fimuls
add
repz
push
bound
and
aad
jg
aaa
xor
repz
push
jne
loopne
ljmp
inc
add
add
pusha
add
mov
mov
sbb
das
iret
insl
movsl
xor
jle
dec
test
push
add
inc
add
push
jns
sub
inc
loope
sub
push
imul
mov
je
add
xor
cmpsb
xor
and
mov
cmp
sbb
outsl
lock
adc
add
add
xchg
int3
outsb
mov
testb
out
sub
cltd
shl
outsb
cmp
ret
hlt
test
inc
cs
jnp
fisubrs
ret
cmpsl
mov
add
mov
in
daa
rol
add
outsb
cwtl
xchg
dec
popl
je
push
mov
add
dec
add
lea
sbb
ret
adc
cltd
test
jmp
cmp
mov
xchg
jge
adc
dec
out
ds
add
jmp
popf
adc
les
push
movsl
jle
add
jmp
scas
mov
movb
push
sub
jl
inc
add
mov
mov
jb
mov
cmp
cmpsb
xchg
adc
jmp
fucomi
enter
xor
mov
rorb
popf
xchg
inc
push
add
aas
movsl
jnp
add
outsb
jbe
sub
push
dec
mov
cmp
adc
sub
aam
adcl
cmpsl
mov
aaa
leave
sbb
cmp
dec
hlt
je
inc
adc
jge
aam
fadd
add
aaa
movsb
pusha
add
add
inc
xor
jo
xchg
inc
xchg
jl
jecxz
jb
out
sbb
push
cmp
pop
inc
add
mov
dec
popa
adc
jmp
mov
dec
imul
pop
jnp
and
push
mov
movsl
xor
icebp
xor
cmp
pop
xlat
or
add
add
inc
jb
jecxz
push
sarl
ljmp
add
xchg
xchg
jp
add
add
add
push
inc
add
insl
lds
mov
out
sub
scas
arpl
add
pop
ds
cwtl
push
or
jge
scas
cs
ja
xlat
add
add
outsb
pop
xchg
inc
add
pop
das
mov
into
ds
nop
and
or
hlt
dec
pop
push
add
rolb
fists
add
or
add
leave
mov
cmp
push
addr16
stos
dec
sahf
push
mov
movb
faddl
and
adc
or
orl
inc
add
loopne
add
adc
loop
mov
rolb
inc
add
aas
jns
aam
int3
leave
adc
jle
cld
push
add
dec
sbb
cld
enter
movsl
adc
shlb
fidivs
xchg
cmp
pop
jb
ss
sub
add
out
pop
push
movsl
jne
dec
sbb
jbe
jg
adc
add
aam
jp
xchg
jbe
add
push
sti
movsl
scas
fucom
mov
dec
mov
add
movb
clc
pop
ret
push
sahf
mov
out
push
leave
int3
dec
stos
fcmovb
add
imul
repnz
pop
test
add
insl
movsb
nop
jo
add
cmp
mov
or
add
push
jge
lret
dec
orl
shlb
movsl
ret
out
fs
cs
jle
jbe
jecxz
popa
add
mov
pop
and
xchg
xchg
dec
test
cmp
filds
call
sbb
mov
cmp
inc
add
outsl
mov
xchg
les
jge
jb
or
mov
jne
xchg
addb
ja
xchg
add
les
ljmp
je
add
push
loope
inc
sbb
xor
in
js
sbb
mov
adc
in
inc
cmp
inc
push
or
outsl
add
pusha
add
or
add
test
lods
dec
jae
stos
jl
dec
mov
aam
pop
jae
andl
lret
repz
addr16
addb
xchg
jp
jbe
es
daa
jl
js
movsb
incb
or
je
out
and
loope
or
adc
les
sbb
inc
add
fwait
into
shrl
sahf
push
xor
and
stc
dec
cmp
xchg
sub
inc
add
movb
sbb
cwtl
mov
insb
fisubs
pop
add
push
adc
test
lcall
jmp
mov
xor
xchg
sub
add
xor
icebp
lret
sti
sub
add
jp
inc
test
xor
cwtl
cmp
out
cmp
lods
sub
out
outsl
jge
neg
out
arpl
dec
adc
cld
test
movsb
xchg
jno
addb
mov
or
out
add
sub
fsubrs
cmp
and
mov
aaa
adc
lahf
adc
jns
movsl
sbb
jbe
out
lock
test
and
inc
add
cltd
add
xor
pop
mov
scas
std
add
mov
test
and
xchg
sub
push
sbb
pop
aas
pop
dec
cltd
in
lds
aaa
jo
iret
pop
imul
js
push
insb
nop
jmp
mov
inc
add
stos
inc
add
push
dec
and
jae
and
add
movsl
mov
stos
mov
or
dec
subl
lods
cmpsb
inc
call
or
stos
addr16
addb
cs
add
cli
xchg
addr16
rolb
and
stos
jne
cmp
addr16
push
in
add
enter
and
add
pop
ja
push
movsb
dec
add
add
add
adc
lods
lcall
mov
or
icebp
jno
repnz
addb
pop
fsubr
push
and
aam
dec
pop
or
in
pop
adc
and
rol
add
mov
inc
add
stos
or
jge
jno
in
add
sahf
insl
std
test
xlat
rcrl
pusha
add
and
rorl
test
mov
push
add
stos
add
jmp
sub
sbb
rorb
mov
les
arpl
jbe
addr16
jb
sub
or
add
hlt
push
or
mov
push
test
xor
repnz
std
sub
mov
inc
add
les
es
bound
and
or
inc
pop
cmp
fs
add
pop
lds
jnp
push
or
dec
cmp
adc
repnz
adc
add
stos
loopne
adc
mov
add
dec
rol
jne
and
hlt
push
push
cmp
inc
add
hlt
adc
out
cltd
adc
mov
mov
dec
notb
das
adc
cltd
mov
lret
std
sbb
inc
repz
or
lret
dec
cwtl
cmp
xlat
negb
in
movsb
pop
fsubrp
jns
push
add
rolb
add
lcall
push
jmp
mov
addl
ds
mov
adc
test
add
pop
or
mov
add
arpl
adc
inc
loop
mov
inc
sub
push
and
cmp
arpl
add
sbb
sub
jnp
mov
xchg
mov
inc
add
xor
push
mov
add
or
into
jg
movb
addl
hlt
xchg
rcll
or
add
out
sbb
push
xchg
shlb
sbb
aaa
jp
add
or
or
inc
add
xchg
sbb
jns
test
test
clc
mov
sahf
dec
sub
ret
push
or
mov
addb
les
bound
cmp
add
pop
outsb
int
mov
mov
add
mov
iret
lods
xchg
dec
sbb
int
push
jns
push
cld
je
push
scas
addb
arpl
nop
rorl
and
adc
adc
dec
test
and
cmp
push
addb
xchg
ja
add
push
mov
movsb
adc
and
cmpl
or
leave
adc
fsubrl
add
lret
std
mov
add
les
data16
cwtl
stc
mov
add
cmp
je
daa
fs
aaa
test
add
movsl
sub
add
cmp
inc
sub
or
and
in
pop
fwait
mov
test
arpl
stos
mov
fs
aas
sub
scas
sbb
stos
jg
cmp
push
inc
imull
int3
jle
cmpsb
stos
jb
add
push
dec
addb
mov
aaa
sti
and
push
cmpsb
mov
mov
lock
add
jecxz
push
add
les
sub
add
out
xchg
or
or
adc
lret
pop
push
add
add
mov
add
stos
rcrl
push
push
sub
in
not
test
and
outsb
pop
mov
mov
mov
clc
loope
lcall
fimull
xor
add
test
add
leave
add
fldenv
xor
cmp
ss
filds
leave
imul
cmp
inc
add
add
push
loop
testb
inc
add
xchg
aas
enter
mov
mov
arpl
stos
xor
push
mov
inc
add
ret
rcrl
mov
add
sarb
jo
sub
push
xchg
lret
mov
jmp
inc
add
lcall
out
loop
rolb
add
cmp
sbb
add
push
movsb
cltd
mov
mov
icebp
pop
sub
inc
cmp
xlat
lock
inc
add
xlat
cmc
push
jns
and
add
in
cmp
push
push
cld
or
add
add
push
cs
sub
lea
push
push
fnstenv
xchg
xchg
jno
lcall
mov
xchg
lcall
sub
mov
jg
movsb
push
sbb
inc
add
cli
inc
add
mov
mov
mov
sbb
and
in
arpl
jb
adc
sbb
icebp
decb
insb
xchg
jbe
xor
mov
xlat
addb
addr16
shrb
add
add
jl
adc
mov
xor
add
push
sub
test
les
popa
push
sbb
daa
jo
push
stos
dec
jmp
inc
sahf
fucomp
push
add
add
addb
fnstcw
movsl
pop
inc
add
notl
mov
fmuls
push
add
fisttpl
repnz
dec
push
dec
sarl
ret
push
or
gs
in
mov
clc
mov
inc
add
insl
loope
mov
ljmp
xchg
test
jge
bound
dec
aas
mov
jo
jl
inc
add
cmp
pop
addb
jge,pn
daa
inc
add
jno
es
jge
cmpsb
xor
push
add
test
mov
cli
stos
jl
mov
add
jno
xor
les
sahf
push
or
adc
add
mov
mov
cli
fisttpll
xchg
dec
sbb
xlat
fisubs
dec
sub
into
sbb
push
pop
aad
sti
add
fsubl
fs
add
sub
push
cmp
out
rolb
add
jnp
pop
or
es
insb
daa
repnz
jo
sahf
push
and
or
jne
fisttpl
or
xchg
in
ljmp
movsb
movsl
mov
or
add
add
incl
divl
and
dec
fidivs
movb
and
adc
jns
outsb
pop
fidivrs
lods
cmp
dec
push
out
dec
jp
push
mov
cwtl
jo
xchg
mov
xor
sbb
xchg
out
insl
mov
sbb
xlat
out
inc
add
pusha
add
add
int3
ret
sub
xor
movb
pop
push
push
nop
and
mov
jbe
cmp
sahf
add
std
xor
xor
dec
add
imul
mov
and
inc
add
roll
and
fldenv
pop
cltd
mov
mov
inc
add
ljmp
inc
test
loopne
in
cmp
pop
fldenv
call
dec
movsb
mov
stc
inc
add
jg
xchg
in
dec
pushf
aas
push
push
or
mov
out
popf
xchg
inc
add
fistps
cmp
hlt
repnz
mov
shlb
pop
mov
sbb
cmp
js
or
push
stos
fs
aam
outsb
add
ret
sarb
loop
push
sbb
adc
fimuls
nop
jb
sbb
xchg
shll
xchg
pop
adc
adc
out
pop
outsl
jne
lahf
in
mov
ja
jl
add
jo
jmp
cmp
add
dec
mov
js
test
cli
jmp
mov
pand
outsb
adc
adc
or
imul
jmp
vaddss
dec
rclb
mov
cmp
add
add
mov
lock
lods
lock
repz
jno
ss
xchg
inc
les
sbb
sub
add
push
cmc
mov
loope
into
fsubs
dec
inc
add
fsubs
xor
xchg
xchg
repz
xor
repnz
mov
data16
inc
addb
mov
pusha
add
jbe
leave
pop
std
sub
imul
mov
arpl
mov
add
stos
push
je
push
mov
outsl
push
add
jns
insb
and
addb
add
xor
sti
lds
push
push
test
aaa
and
std
add
jl
fxch
mov
add
in
insb
jmp
outsl
mov
push
sub
mov
scas
lret
mov
cltd
mov
lock
xor
dec
in
out
cwtl
cmp
mov
cmp
and
loope
xchg
outsl
jne
in
mov
fidivrl
mov
mov
jle
ljmp
jne
int3
nop
movb
outsb
bound
fs
jmp
insl
jecxz
and
cmp
add
sbb
cmp
cmpsb
push
inc
add
pop
sub
add
push
testl
jbe
or
or
hlt
repnz
or
pop
pop
adc
pop
and
add
insl
cmc
imul
popf
call
outsb
xchg
add
sbb
das
cmpl
call
add
push
nop
or
iret
lea
add
sub
pop
ficoms
and
daa
mov
dec
loopne,pn
popa
scas
or
outsl
sub
inc
jbe
bound
jno
mov
rcrl
out
xchg
jp
test
pushf
inc
add
xchg
movsb
mov
lret
imul
push
cltd
and
mov
adcl
jo
aad
clc
dec
cwtl
sti
dec
inc
addb
mov
dec
test
mov
mov
test
aam
push
loope
mov
add
fldl
jp
adcl
add
cmpl
ds
pop
sarb
nop
or
xchg
sbb
mov
subl
movsl
mov
daa
lds
enter
jae
int3
adc
xchg
int3
lods
push
into
rorb
add
add
aam
das
mov
je
jg
mov
adc
popa
lahf
fmuls
popl
adc
adc
dec
push
ja
cmp
dec
cmp
xor
pop
dec
cmp
dec
popa
out
dec
inc
popa
leave
push
mov
mov
mov
pop
jne
stos
add
mov
jno
ljmp
cmp
data16
movb
outsl
icebp
pop
or
sbb
jne
xchg
shrl
stos
jmp
xor
add
add
bound
dec
int
xchg
pop
add
inc
mov
push
lahf
lea
pop
icebp
fsts
add
xor
xchg
jge
adc
aam
movsl
faddl
dec
stc
sbb
int
dec
in
xor
push
imulb
hlt
cmc
xor
mov
xchg
pop
jno
or
ljmp
insl
movb
xor
icebp
popf
divb
ret
fadds
jae
adc
movsb
dec
mov
int
pop
outsl
add
xor
xchg
rolb
repz
pop
and
loopne
ret
mov
repz
orps
inc
add
jbe
subl
mov
add
loope
insb
jmp
ljmp
int
add
aad
xchg
add
add
xchg
mov
xor
push
std
lahf
jbe
mov
cld
pop
enter
inc
add
jbe
dec
xchg
sti
jg
insb
stos
inc
bound
outsb
lea
pop
adc
and
icebp
jns
movsb
pop
std
xor
or
add
into
cld
subl
repz
popa
stos
sti
adc
cmp
cmp
cmp
movb
mov
dec
or
lods
push
add
out
testl
xchg
jecxz
xchg
and
sub
std
adc
xchg
add
icebp
imul
cmp
adc
pop
or
xchg
cmp
fchs
stos
cld
dec
les
mov
adc
popf
sub
adc
add
add
testb
test
lds
add
je
shll
cmp
adc
imulb
movsl
repnz
inc
add
sub
pop
stos
pop
inc
and
mov
add
xchg
mov
push
cmp
popa
jae
adc
add
add
jp
add
lock
cmp
test
fwait
jecxz
push
jmp
outsl
cli
push
movb
popa
push
add
dec
les
sub
aaa
mov
clc
adc
js
scas
pop
sbb
push
pop
aaa
jge
pop
inc
lods
dec
lea
sub
add
add
mov
iret
pop
out
jo
loop
test
rol
or
in
std
rolb
loop
add
xlat
je
or
xor
insl
jle
jle
imul
jle
out
sbb
add
mov
lret
enter
sbb
shl
bound
lcall
dec
in
or
and
cli
adc
add
xor
dec
xor
test
sbb
dec
push
xor
add
rcll
and
xchg
dec
test
xchg
mov
out
cltd
xchg
cmp
dec
andl
lahf
sbb
add
sub
add
movsl
dec
xchg
out
push
xor
jb
or
xor
sub
pop
call
or
scas
cwtl
add
or
xchg
sbb
xchg
insl
loopne
sub
loope
adc
je
sbb
cmp
sti
int3
rcrb
pop
repnz
mov
test
push
iret
mov
adc
dec
pop
fwait
jo
stos
pop
scas
pop
setb
xchg
or
add
lock
out
add
mov
add
xchg
loopne
jge
sub
idivb
test
add
or
addb
mov
stc
dec
in
add
mov
test
cmp
cmp
fwait
jmp
xor
pop
xor
movsb
mov
jbe
and
jnp
add
mov
push
in
mov
cmpsl
sbb
aas
lret
pusha
add
add
fimuls
in
mov
popf
scas
jns
adc
lahf
cwtl
inc
test
inc
add
jae
jl
mov
dec
pop
mov
and
cmp
repnz
sub
sbb
adc
push
pop
mov
pop
sarl
dec
addb
mov
add
add
sarb
ret
ret
test
xchg
fsubr
xor
shll
pop
sbb
add
cmp
leave
enter
inc
add
sub
jecxz
mov
jl
clc
add
fsubl
add
xor
movsl
in
xlat
push
lods
and
ret
inc
mov
ret
int
xchg
mov
mov
incb
pop
testb
orl
inc
and
mov
sbb
popa
pop
mov
and
add
xor
lea
lock
fdivs
cmp
jne
movb
out
mov
das
cmpsb
and
movb
cmpsb
cmpl
out
fisubrs
jno
cmp
jne
lret
mov
cmp
call
repnz
sub
das
cmp
ret
mov
sbb
pop
push
and
push
and
int
push
and
mov
sub
xlat
divl
or
nop
in
cmp
mov
dec
addb
movb
add
outsl
ds
in
push
movsl
sbb
cmc
mov
popa
jnp
call
mov
push
pminsw
jmp
mov
ds
mov
aaa
sti
outsl
cmp
xor
xchg
movb
sub
dec
adc
out
jmp
out
test
jmp
xchg
bound
inc
add
xor
mov
dec
ret
push
jmp
repnz
fs
scas
cmp
rolb
dec
xchg
mov
add
in
xor
lds
dec
mulb
pop
xchg
lret
adc
mov
pusha
add
cli
and
or
xor
ja
push
add
test
adc
add
add
add
sub
xlat
pop
push
repnz
or
lds
add
xchg
inc
add
push
rolb
int
jnp
or
rcrb
leave
rcll
xchg
adc
enter
cwtl
inc
les
jmp
out
inc
loop
mov
pop
lcall
cmpxchg
rol
add
xor
add
in
fcoml
xor
mov
and
lods
cld
out
xor
push
in
icebp
repz
mov
movsb
cli
xchg
test
jne
fcoms
sub
sbb
mov
adc
popa
push
and
addb
add
enter
push
add
iret
outsl
pop
aam
inc
jg
ja
outsb
iret
pop
iret
loopne
xchg
dec
addb
movsl
ss
scas
scas
mov
ud1
add
icebp
shrl
push
and
mov
fistps
stos
pop
rolb
jbe
stos
lahf
push
testl
fistps
aaa
jae
add
int
data16
insl
pop
cwtl
fildl
add
mov
mov
dec
fsubl
loope
hlt
mov
in
cmp
adc
push
ret
cmp
fnstenv
pop
cmp
jo
ja
mov
push
jno
add
and
pop
dec
ret
push
fcoml
das
ret
add
out
jecxz
call
mov
fimuls
stos
dec
sub
test
pop
mov
push
pop
xchg
inc
add
add
fwait
mov
out
notb
sbb
sbb
arpl
jg
data16
lods
loop
pop
test
ds
rep
xor
mov
fsts
fimuls
stc
mov
xchg
or
out
fucomip
pop
les
pop
test
add
dec
inc
xchg
sbb
and
sar
movsl
fwait
js
add
push
xor
fidivs
sbb
mov
adcl
add
xor
clc
inc
cs
add
pushf
jle
push
loop
mov
hlt
inc
mov
out
jle
mov
adc
push
cmp
or
addb
movb
add
mov
inc
add
sbb
in
scas
shll
jp
add
mov
cmp
cwtl
iret
sub
enter
push
gs
pop
js
rolb
pop
aam
pop
or
aas
push
mov
repz
cltd
out
mov
inc
add
dec
movsb
fsub
out
insb
call
dec
xchg
and
xor
scas
xchg
mov
add
add
push
loopne
js
xchg
outsl
loope
int
mov
mov
repz
sbb
notb
mov
ret
loop
sahf
add
mov
lock
inc
add
test
dec
mov
enter
pop
xor
ss
rcll
insb
bound
ret
imul
cld
cmpsl
mov
push
lods
jmp
sbb
jmp
cmp
jnp
mov
xor
mov
push
mov
pop
add
or
mov
outsb
shll
sbb
call
fists
mov
mov
push
pop
ret
out
shll
push
lahf
cmp
sbb
cmp
sub
add
pop
outsl
leave
daa
inc
add
andl
push
add
scas
add
fidivrs
cmp
xchg
pop
dec
sarb
imul
scas
cmp
inc
adc
mov
add
mov
and
leave
or
les
cltd
mov
add
cmp
xor
xchg
push
ss
add
mov
or
sub
out
addr16
imulb
lahf
dec
ljmp
subl
jecxz
dec
xor
mov
inc
shll
ret
lahf
es
lods
bound
test
xchg
call
or
aaa
lahf
push
jg
cmp
mov
je
xchg
dec
xor
in
fdivrp
jae
lahf
cli
popf
rolb
js
add
fnsave
addb
stc
addl
call
sub
movl
fisubrs
or
lock
lods
sub
adc
push
movsb
js
cmp
sub
cmpsl
mov
push
and
inc
jl
shlb
out
scas
pop
repz
add
inc
or
dec
mov
enter
fcomip
enter
into
rolb
jmp
cld
fiaddl
movsl
inc
mov
jne
inc
mov
fldl
mov
fcoms
add
mov
cmp
add
test
push
daa
cld
adc
das
ja
add
and
in
pop
rolb
add
add
xchg
mov
shl
stos
js
das
divl
lods
jb
jle
fiadds
xor
jae
xor
inc
leave
lods
mov
cmpsl
or
mov
jg
dec
xchg
add
add
popf
xor
rorl
mov
and
jb
enter
sbb
cmp
push
xchg
jl
add
mov
cmpl
xor
or
dec
movsb
lahf
fisttpll
cmp
loopne
pushf
ror
or
add
push
mov
les
rol
jae
push
test
cmp
xlat
aam
out
add
lea
xchg
jno
cmp
add
test
fmuls
add
push
mov
dec
jecxz
aad
sbb
xchg
jg
mov
inc
js
add
jo
jp
or
movsb
mov
sub
sub
out
cmp
lahf
or
dec
mov
lods
xor
mov
xchg
fmul
leave
dec
cltd
jb
xchg
add
test
in
lods
cli
add
lods
mov
std
xchg
and
leave
jae
xor
inc
fsubs
out
call
fiadds
fs
pop
stos
call
and
es
repz
imul
lcall
mul
xchg
jge
add
daa
pusha
add
loopne
and
xor
in
mov
xchg
pop
cmp
pop
cwtl
jecxz
cmpsb
or
dec
xor
add
inc
adc
nop
mov
loopne
test
push
push
and
cmp
add
out
inc
xchg
mov
add
add
push
stc
jecxz
daa
push
pop
fstpt
jae
push
add
das
pop
scas
xor
lods
sbb
lret
test
jo
mov
sarb
lcall
add
add
and
dec
mov
adc
cmc
das
push
mov
mov
push
add
cmp
iret
mov
dec
test
xor
cltd
mov
jge,pn
es
mov
xchg
jge
mov
mov
adc
adc
imul
push
xor
mov
ret
add
pop
dec
cmp
mov
cmpsl
lahf
push
sbb
movl
seta
add
lea
jns
addb
adc
test
std
loop
loope
std
sbb
in
aad
rol
sbb
cld
sub
fwait
push
dec
sub
push
fwait
sub
add
gs
out
mov
or
mov
add
mov
dec
stos
inc
cli
fs
add
and
ja
push
scas
adc
out
rclb
ja
cmp
adc
ret
dec
out
add
popa
lret
out
mov
push
sub
lods
sahf
jg
push
mov
jecxz
mov
ret
das
inc
add
add
rcrl
add
leave
addr16
lods
stc
and
pop
xor
add
data16
vpavgw
sti
icebp
inc
pop
ds
aam
repnz
cmc
loop
and
xchg
sub
push
adc
insl
and
out
jnp
imul
pop
jb
cmp
add
and
mov
addb
and
add
dec
mov
fs
ljmp
adc
pop
jge
popl
add
fwait
push
fs
int3
sub
add
xor
jecxz
pop
mov
pop
push
fisttpll
lcall
ljmp
add
jecxz
xchg
es
nop
insb
add
add
out
mov
jnp
mov
jae
imul
adc
sub
sub
ret
xor
cmp
jge
mov
fwait
mov
mov
imul
popa
pushf
adc
jo
or
jecxz
cmpsb
test
lods
fistpll
fdivrl
and
add
iret
pop
sbb
push
sub
jo
fldcw
ret
cmc
push
and
push
xchg
mov
shlb
mov
jno
push
or
mov
dec
mov
out
sbb
loop
xchg
jp
mov
aas
mov
int3
xchg
xor
lahf
lea
jg
mov
or
or
mov
jne
push
or
lds
and
cli
movsb
push
sarl
dec
das
and
add
add
push
push
add
pop
loopne
dec
inc
xchg
jnp
call
push
jno,pn
punpckhbw
adc
or
popf
ss
lock
and
add
lds
icebp
nop
inc
xlat
mov
cmp
mov
pop
insb
iret
ret
pop
inc
mov
and
sub
cmp
lods
xor
arpl
imul
xchg
pop
pop
lcall
pop
jns
jle
add
push
rolb
iret
insb
rcrb
sbb
cli
push
add
mov
or
cmc
fidivrs
cmpsl
int
and
sbb
add
mov
iret
bound
pop
and
sbb
in
nop
fdivrl
cmp
add
cld
mov
add
out
jb
add
cli
mov
stc
loope
mov
repz
add
cmp
add
leave
adc
and
mov
adc
mov
imul
icebp
push
sbb
stos
sar
pop
cltd
push
lock
mov
cli
mov
cmp
mov
fidivrs
add
leave
repz
lahf
test
nop
pop
jp
and
cmp
add
sarb
insl
sbb
shld
fimull
loope
adc
ljmp
add
lret
xchg
sahf
enter
sahf
fistl
cli
adc
addr16
dec
pusha
add
test
es
cli
out
add
jns
enter
fbld
mov
es
std
scas
test
into
inc
add
aad
inc
adc
iret
jbe
xor
push
add
push
or
mov
add
jp
rorb
test
inc
sub
and
insb
test
sub
inc
add
jp
movb
dec
jnp
insl
in
addb
cli
in
mov
add
xchg
insl
dec
aaa
push
sbb
shlb
hlt
enter
pop
js
out
lock
cmp
xchg
add
nop
inc
ja
int
adc
sbb
mov
cmp
addb
cmp
mov
pop
cmp
aam
movb
xchg
arpl
imul
add
xchg
lahf
loope
leave
lods
push
add
sbb
add
fs
xor
aaa
aad
test
cs
add
cmp
mov
movl
sti
mov
rolb
mov
fstps
das
sub
into
jg
dec
movb
add
cmc
ret
in
push
add
loop
add
mov
push
xchg
adc
pop
push
fistpl
cmp
jbe
lock
dec
xor
bswap
pop
inc
add
dec
das
rep
xchg
mov
add
fbstp
cwtl
dec
cmpsb
test
pop
fst
mov
cltd
dec
outsl
jns
sbb
cwtl
push
pop
mov
mov
negl
mov
or
cmc
mov
rcl
daa
insl
mov
pop
or
add
mulb
data16
sub
insb
or
dec
pushf
xor
popa
mov
push
ja
push
sub
dec
and
add
pop
adc
fiadds
add
dec
in
pop
bound
repz
adc
repnz
lods
cmp
cmc
es
and
repz
sbb
fldt
adc
cmp
clc
rol
roll
inc
add
hlt
mov
push
jecxz
test
repnz
cmpsb
in
in
cmp
or
lret
ss
sbb
gs
jns
leave
push
xorl
pop
stos
lcall
repnz
mov
push
fldcw
jnp
and
fwait
mov
push
cmp
adc
mov
insb
jmp
add
xchg
mov
pop
in
test
add
jecxz
or
stos
mov
xor
inc
add
jb
sub
sub
mov
jo
data16
add
xlat
mov
sbb
enter
xlat
xchg
ret
cmpsb
cmp
movsl
sti
sbb
or
mov
fisttpl
lret
repnz
jg
or
push
push
shll
add
repz
jl
jne
sub
aad
push
roll
push
std
rcll
xchg
mov
rolb
xchg
fnstenv
je
xor
add
add
in
rolb
add
call
mov
and
aam
add
cmp
xchg
xchg
jns
push
movb
or
push
mov
dec
sub
mov
cli
mov
cmp
cmpsb
jne
lcall
sbb
stos
jns
pop
and
daa
mov
inc
xor
mov
ds
lahf
test
aaa
mov
push
dec
cltd
clc
jle
add
stc
mov
adc
jmp
and
ljmp
cs
cld
in
addb
xor
add
ljmp
bound
sub
mov
rorb
jno
add
arpl
or
mov
sbb
push
or
bound
mov
sbb
movsl
push
jg
loop
adc
pop
nop
sub
add
pop
jp
jecxz
sub
or
pop
test
enter
addb
mov
rcrl
jae
insb
pop
test
fidivs
pop
push
fndisi(8087
xchg
cld
inc
out
cmp
movsl
mov
dec
int
movb
mov
add
popf
jecxz
pusha
add
cmp
sarl
addl
push
pop
rcrl
xchg
test
adc
cmp
jmp
cltd
or
movsb
add
or
je
negl
sbb
xor
mov
repz
ss
fwait
push
push
rclb
pop
push
mov
movsb
push
xor
fldcw
add
ret
mov
adc
sbb
inc
sub
jbe
sbb
lea
push
or
imul
sub
movb
pop
aas
jns
scas
push
fmuls
xchg
sbb
aaa
mov
out
push
hlt
frstor
inc
add
add
add
push
lahf
cwtl
insb
and
stos
mov
or
push
add
fwait
test
cmc
sbb
loope
add
cmp
mov
adc
movsb
dec
lock
xchg
mov
lock
ficoms
lcall
add
repnz
jp
rcll
and
sbb
add
jo
xor
gs
stos
loope
push
xor
negb
xchg
push
xchg
in
adc
jecxz
ja
addb
fs
push
jmp
inc
idivb
leave
dec
add
leave
mov
push
pop
cmp
xor
dec
inc
add
int3
inc
add
cmp
mov
mov
cltd
inc
add
add
es
cltd
cli
mov
and
add
addr16
add
loope
scas
xor
rcll
movb
jecxz
jnp
je
mov
add
mov
mov
rorb
push
jle
in
in
and
dec
rcr
xchg
lahf
jle
pusha
add
sub
movsb
push
call
test
jne
jbe
gs
js
cli
insb
inc
add
add
insl
jb
and
cmp
add
add
movsb
adc
jno
outsb
test
and
mov
sub
unpcklps
movsl
xchg
cmp
cld
adc
sti
lods
incb
add
add
sbb
dec
lock
push
nop
add
popf
mov
mov
out
or
jg
xor
add
mov
xor
add
jae
mov
ret
lods
cltd
mov
mov
push
push
xchg
cmp
iret
adc
cmp
add
mov
outsl
pop
rorl
pop
es
adc
push
cld
jb
into
xchg
push
int
add
sbb
cmpsb
mov
xchg
mov
xchg
and
cmp
out
mov
int3
stc
test
imul
mov
sbb
mov
push
jmp
sbbl
in
cmp
scas
int
pop
andl
fs
hlt
lock
cmpl
in
lcall
push
mov
bound
cmp
mov
in
mov
xchg
mov
sbb
outsb
jno
pop
cmp
push
daa
idivb
xchg
movsl
adcl
addb
les
sub
imul
and
hlt
inc
xchg
jnp
enter
dec
hlt
xor
sbbl
adc
out
adc
dec
sub
xor
dec
addb
sub
push
stos
repnz
mov
add
or
daa
out
daa
ss
out
or
push
js
ret
cli
rolb
add
testb
jmp
add
into
outsl
icebp
stos
test
addb
pop
popa
mov
imul
movsl
xchg
ss
cltd
cmp
mov
mov
dec
sarl
nop
push
xchg
sbb
cmc
add
dec
pop
or
pop
out
mov
clc
fwait
sbb
add
in
dec
and
mov
hlt
push
aam
sub
psubsw
rorl
mov
call
jbe
out
rolb
shlb
add
ret
and
cs
outsb
das
mov
pop
imul
mov
xor
jmp
es
cmpsl
pop
sti
in
inc
add
jge
mov
xor
jp
sti
ds
pushf
add
mov
adc
clc
xor
lea
stos
mov
in
popf
dec
xor
pop
xchg
cli
cmpsb
mov
sti
jle
movsl
clc
pushf
aad
test
adc
dec
mov
or
add
and
mov
xchg
mov
lea
loopne
sub
push
add
popa
dec
adc
push
outsl
cmp
rorl
imul
inc
inc
mov
push
cmp
jb
adc
jge
mov
add
jecxz
inc
inc
add
and
lcall
mov
cmpsl
sub
das
mov
add
inc
fisubrl
cli
and
in
dec
xchg
sbb
stos
scas
push
int
and
mov
in
aas
mov
loop
inc
add
xlat
xchg
jl
push
mov
mov
ljmp
cmp
add
es
xchg
add
call
pop
jae
dec
mov
cltd
int3
insl
inc
add
aaa
xorl
rolb
imul
dec
notb
repz
sbb
xchg
xchg
sbb
call
xor
gs
xchg
push
insb
push
add
lock
nop
mov
cld
shrl
xchg
sbb
and
cltd
les
test
cltd
push
cmp
and
repnz
and
and
nop
outsl
arpl
inc
add
add
movsl
cmp
push
lahf
shr
cld
mov
adc
dec
pushf
fistps
mov
roll
cmpsl
test
les
aaa
and
pop
cmp
inc
test
mov
lret
in
mov
scas
cli
icebp
xchg
out
mov
mov
testl
add
dec
cld
outsb
movsb
sbb
add
dec
loop
push
imul
in
mov
in
lods
fucom
cs
xchg
imull
popa
dec
outsb
jnp
pop
cmp
push
jo
add
cmpsl
aas
jge
mov
mov
xchg
out
mov
mov
or
sub
hlt
jl
mov
cmpsb
ficomps
add
lods
mov
pop
pushf
dec
mov
cmc
add
aas
out
lret
mov
jmp
push
adc
push
scas
test
fsubrl
cld
cltd
xchg
test
fcomps
adc
movb
out
in
sahf
cltd
stos
inc
add
sbb
mov
gs
inc
in
lods
jbe
push
fnstsw
fwait
lods
push
cmp
adc
adc
lret
inc
subl
inc
add
push
inc
add
les
add
fcomi
imul
cmp
jge
and
push
dec
mov
or
jmp
lea
mov
in
xchg
cltd
popa
icebp
cmp
leave
shrl
add
addb
push
iret
jp
ds
xchg
aaa
enter
rorb
jnp
cmp
cmp
bnd
jg
add
test
xor
cmp
loop
in
add
in
add
cmpsl
xor
aad
push
jne
and
movsb
shl
jne
dec
fcomps
mov
addb
jl
add
push
fs
cli
ja
jb
xchg
loop
dec
ret
int3
push
fs
sbb
mov
imul
lret
inc
add
mov
je
push
cmp
jle
movsb
mov
cwtl
sbb
inc
add
sbb
fmulp
add
add
call
jp
movsb
lahf
ret
and
add
lods
xor
cmp
add
cld
testl
or
pop
push
loopne
add
mov
cmpsb
mov
jg
pop
addb
ficoml
sarb
pop
in
push
fnstsw
push
fs
iret
sbb
sub
ljmp
outsl
in
inc
add
in
call
add
jns
push
icebp
and
dec
arpl
xor
jp
mov
je
sub
ja
push
add
cmp
add
fstl
call
and
das
data16
jle
add
push
push
movsb
das
add
xor
sahf
xchg
cli
aaa
das
adc
divb
lcall
cwtl
add
push
dec
xchg
jl
aam
dec
jl
rcr
loope
mov
and
in
xchg
dec
insl
cmpsl
sbb
jnp
pop
icebp
in
inc
add
add
popf
xor
pop
or
cmp
outsl
insl
mov
stos
nop
fsubl
pop
mov
push
add
and
je
jno
add
xor
mov
adc
and
add
js
lods
or
add
mov
mov
add
sbb
mov
ret
mov
clc
movsl
loop
call
stos
in
push
cli
mov
mov
inc
mov
lock
pop
add
test
fldcw
lret
add
iret
xlat
sub
mulb
sbb
fwait
mov
jl
daa
cmpsl
xchg
sbb
sub
dec
sbb
addb
mov
jne
insb
cli
in
pop
fisttpl
in
jmp
mov
pop
es
js
faddl
mov
or
loope
cmp
movsl
and
push
push
mov
sbb
add
push
push
xchg
push
adc
out
gs
aaa
lea
add
sub
fcomps
int3
push
cmpsb
jne
lds
mov
add
pop
lock
dec
or
and
sub
stc
push
sub
ds
out
mov
cmp
pop
icebp
test
rsqrtps
jmp
cmp
stos
js,pt
into
mov
or
test
mov
movsb
mov
pop
jbe
sti
jge
dec
adc
movsl
xor
cmp
inc
add
inc
add
outsl
adcl
add
pop
mov
popa
xor
sub
sbb
inc
add
push
shlb
mov
push
cld
sub
sub
jmp
push
stos
add
dec
in
mov
sub
add
add
invd
cmpsl
mov
ss
jbe
scas
cmp
pusha
add
xchg
popa
testl
data16
and
xor
repz
push
jns
das
push
add
adc
add
lea
add
push
sbb
adc
enter
xlat
das
sub
inc
pop
sub
add
sub
pop
cld
push
add
xchg
mov
es
sbb
movb
lods
add
jo
fstl
add
inc
add
mov
mov
add
push
xor
sub
std
sahf
loop
je
mov
inc
add
add
clc
jo
icebp
jne
scas
jg
mov
jl
jp
bound
fimull
push
inc
jnp
jae
popa
test
inc
add
add
pop
movsl
mov
cmc
imul
sbb
xchg
aam
shlb
inc
cmp
xor
cmpsl
outsb
into
xchg
mov
adc
dec
fstpt
add
movsb
and
sub
cli
mov
push
cmpsl
mov
push
arpl
push
add
add
inc
add
pop
ffree
push
xor
ss
movsb
pop
das
add
mov
aam
jmp
adc
sub
es
ret
jo
add
in
in
insb
xor
notb
ss
fists
pop
dec
adc
aas
out
push
lea
and
xor
insb
dec
adc
push
and
rolb
scas
mov
jno
les
addr16
push
popf
lcall
out
mov
hlt
mov
dec
or
cmp
pop
mov
fcmovu
lret
adc
imul
call
sahf
jg
les
movsb
in
cmp
mov
outsl
stos
jnp
add
pop
outsb
fidivl
mov
add
popf
movl
cmp
mov
pop
mov
je
shll
fs
jnp
fsub
cwtl
push
mov
xor
gs
add
sub
sahf
idivb
popf
jns
jns
or
into
lods
push
lahf
icebp
arpl
mov
out
sbb
jecxz
jnp
lods
cltd
outsl
fmull
mov
scas
lcall
popa
dec
mov
sbb
mov
xor
fistpl
mov
add
push
and
das
mov
lock
in
out
sub
pop
jo
add
fwait
out
or
or
mov
daa
mov
jbe
sub
xchg
mov
pop
push
cli
ror
sbb
adc
dec
fsts
fnstsw
lret
adc
in
repz
add
sbb
push
dec
js
add
or
jns
int
cmp
dec
xor
popa
mov
loope
lock
mov
xor
add
je
sbb
inc
add
cmp
add
rcll
outsb
mov
sbb
xor
inc
add
test
pop
and
pop
dec
dec
jae
xchg
jp
mov
push
cmpl
lret
jns
push
in
xchg
mov
stos
sbb
sarl
movups
cmpl
stos
sbb
mov
in
pushf
jnp
mov
ja
inc
add
cmpsb
add
scas
push
les
out
add
das
stos
sbb
add
daa
mov
jno
imul
xchg
fdivs
and
lods
sub
mov
rcll
add
sub
rcrl
mov
mov
pusha
add
or
aam
xorl
pop
arpl
add
xchg
sub
xchg
jge
iret
repnz
cmp
add
lcall
jbe
or
cwtl
stos
das
inc
add
add
add
ds
xchg
mov
or
repnz
add
movsb
stos
sub
xor
test
add
faddl
add
iret
lods
jmp
pushf
out
test
hlt
inc
add
mov
push
frstor
add
add
push
ret
daa
mov
inc
add
rclb
add
dec
add
xlat
inc
loope
pushf
cmp
xchg
data16
pusha
add
dec
jb
repz
nop
mov
scas
xchg
pushf
adc
add
push
shlb
outsb
dec
cmp
daa
ljmp
jns
mov
aaa
mov
movsl
fsubrs
dec
mov
lahf
or
insb
jbe
adc
add
or
jae
inc
add
add
mov
or
xor
addb
stos
ljmp
adc
fwait
add
mov
addb
rolb
ret
repz
js
lods
cmp
add
lret
lods
sahf
add
sbb
call
in
push
push
add
loop
fnstenv
or
mov
add
push
sbb
add
into
cmpsl
lea
pop
and
gs
jmp
cmp
popf
bound
mov
cmp
mov
leave
sbb
xchg
mov
pusha
add
mov
fisttps
clc
rcrl
and
outsl
xchg
mov
fbstp
comiss
sub
ficoml
or
lea
push
add
scas
sbb
add
and
ffree
testl
add
lret
add
push
out
xor
lods
stos
mov
imul
mov
sub
movsl
xchg
push
scas
fwait
shll
push
add
xor
mov
xlat
sub
fs
rolb
fwait
dec
ret
push
push
and
pop
push
dec
xlat
leave
movsb
jb
call
add
ror
add
sbb
cbtw
jg
add
fnstenv
xchg
insb
mov
ja
hlt
inc
sbb
into
js
out
sub
inc
add
movsl
leave
test
cmp
into
fsubr
loopne
movsb
inc
daa
mov
fs
out
clc
jg
ds
push
rol
pop
outsl
ljmp
sbb
push
imull
mov
add
fsubs
and
pop
dec
lahf
mov
ds
inc
lahf
mov
test
or
push
movsl
push
fwait
and
dec
dec
mov
add
ja
cmp
add
cld
cmpsl
pop
cmp
add
test
roll
or
mov
negl
xchg
das
xor
add
add
push
ror
xchg
addb
push
pop
repz
push
jge
jae
add
or
or
pop
ret
leave
or
mov
hlt
mov
add
inc
add
add
cmp
push
pop
ljmp
popf
insl
fstl
stc
insb
imul
les
add
add
and
or
in
mov
mov
add
add
popf
fbld
mov
lods
cmpsl
push
movsl
push
sarl
bound
adc
jnp
aad
push
ret
mov
adc
mov
pushf
imul
fstp
aaa
fldt
cld
push
cmp
add
lret
sbb
inc
movsb
cmp
xchg
cmp
push
inc
sahf
pop
lahf
and
lock
add
push
outsb
mov
rcl
push
add
addb
add
loopne
cmp
add
mov
enter
add
cmp
sub
add
mov
mov
pop
pminub
push
adc
sbbl
jmp
out
mov
add
jbe
sarb
ljmp
dec
add
dec
inc
les
std
jle
out
stc
in
adc
packssdw
lret
mov
dec
pushf
fdivr
das
scas
xor
aad
push
in
sarb
sub
in
sub
iret
mov
and
mov
jo
cmp
xor
js
movsl
jecxz
adc
push
xchg
cmpsb
adcl
mov
addb
sub
sbb
mov
sbb
nop
in
rolb
jge
mov
test
movsb
jnp
pop
arpl
mov
movb
mov
push
add
jge
cmp
popf
mov
int
inc
add
popa
sub
xlat
imul
mov
push
sbb
push
lret
adc
inc
arpl
lods
pop
and
pop
movsb
and
nop
stos
movsb
movb
test
sti
hlt
cltd
push
cmpsl
pop
mov
mov
jge
out
daa
dec
cmp
pop
and
fdivrl
ret
inc
add
rep
mov
rcll
add
cltd
loopne
dec
mov
jns
daa
arpl
xchg
rorb
sbb
or
mov
add
xor
adc
pushl
ja
leave
rolb
repnz
sti
fldcw
daa
cs
jmp
pop
stos
push
add
xchg
mov
ljmp
sub
dec
into
frstor
es
cld
cmp
adc
xchg
call
insl
imul
pmaddwd
repnz
sub
movl
daa
int3
xchg
mov
pop
mov
addb
dec
jb
add
lods
shlb
shlb
xchg
out
and
movb
add
imul
dec
mov
add
in
add
popa
cmp
xchg
outsb
add
fs
add
popf
imul
repz
add
mov
cli
push
lcall
xor
dec
shll
call
cmp
notb
xor
mov
sahf
inc
add
pusha
add
loop
daa
fiaddl
js
jb
jnp
je
cmp
jl,pt
adc
test
int
addb
jbe
enter
cmp
sbb
xor
outsl
push
sbb
jl
out
mov
popa
add
add
add
fs
in
lret
xor
push
and
push
push
jne
mov
test
and
xor
cmp
add
and
mov
stos
mov
dec
add
push
add
or
mov
dec
and
dec
scas
adc
add
push
pop
jp
fs
jo
cld
fiadds
add
or
in
movsl
jnp
and
aad
adc
cmp
pop
cmovno
add
inc
add
repnz
aad
xchg
cmp
test
out
pop
pop
out
xchg
mov
int
or
and
fnstsw
dec
test
sub
sub
xor
mov
adc
or
aad
sbb
mov
fwait
sub
pop
jnp
add
push
jnp
push
adc
mov
add
cmp
push
aad
test
fistpll
xchg
mov
fisubs
mov
dec
jno
xchg
mov
jbe
jns
xchg
je
je
mov
outsl
dec
cmp
dec
pop
hlt
fldcw
loope
test
les
dec
andl
mov
lea
push
scas
repz
pusha
add
adc
push
outsl
sbb
adc
shlb
sub
dec
imul
xchg
mov
test
mov
pop
scas
jnp
or
or
add
xchg
jb
daa
loopne
rorl
stos
or
rolb
arpl
scas
arpl
sti
sbb
hlt
fldl
inc
add
add
cmp
loopne
xchg
mov
adc
cli
sahf
lds
std
into
cmp
aam
sub
into
shrb
mov
pusha
add
pop
sahf
fucomip
cli
cmpsb
ds
sbb
rolb
mov
add
aam
pop
dec
mov
adc
sarl
lods
cld
dec
mov
add
adc
xchg
mov
out
xchg
mov
push
inc
and
rolb
jp
add
les
clc
xchg
loopne
mov
add
js
ror
repnz
test
mov
and
int3
mov
cmc
adc
add
mov
xchg
enter
inc
add
push
cmp
cli
jae
push
movsl
jae
xchg
imul
cltd
sahf
fsubs
aaa
xchg
jo
mov
daa
in
push
xchg
cmpl
and
jbe
pop
loope
inc
cmp
add
fsub
scas
mov
inc
aas
jmp
push
aad
add
cmpsl
add
mov
cmpsb
xchg
cmc
mov
lds
stc
lock
lea
dec
daa
and
ret
xlat
cmp
insb
cmc
movb
add
jno
push
test
mov
add
pop
out
pushf
pop
jmp
out
or
mov
pop
or
fmuls
jbe
pop
into
ja
sahf
divl
loopne
mov
hlt
or
add
scas
out
inc
icebp
push
cmpsb
pop
inc
les
dec
lods
mov
push
dec
nop
cwtl
leave
adc
xor
fs
add
push
cli
pop
mov
mov
xchg
mov
dec
aas
and
sbb
jmp
xchg
in
or
inc
add
add
inc
add
mov
inc
add
imul
in
pop
cs
add
popf
fcomip
mov
dec
sub
and
push
popa
mov
add
add
mov
pop
mov
push
add
sub
dec
es
and
mov
cmp
xchg
cmp
push
sub
dec
push
fsubl
inc
dec
lods
out
les
inc
add
xchg
lods
or
fnsave
dec
int3
cmpsl
and
jecxz
push
cmpsl
pop
addb
or
stc
les
mov
inc
add
icebp
mov
add
mov
fnstsw
and
popf
mov
loope
fcoml
jo
pushf
es
inc
lret
mov
sti
sbb
or
add
addb
in
pusha
add
cmp
scas
ja
mov
rorl
add
add
imulb
mov
push
push
inc
add
mov
inc
add
mov
pop
lret
loop
lods
data16
pop
enter
push
pop
mov
xchg
cmp
mov
xchg
rorl
dec
pop
push
js
push
cmp
xchg
jecxz
sbb
add
icebp
mov
dec
xchg
sbb
sub
ret
add
loopne
inc
add
rcrb
int3
aad
std
dec
rolb
add
pusha
add
mov
xchg
ret
or
sarl
dec
inc
or
test
imul
cmp
add
je
cli
shrb
mov
int3
js
movsl
mov
sbb
jae
or
dec
pop
add
or
jge
fnop
repz
aaa
sub
out
xor
add
int3
or
sbb
cmp
add
addr16
jge
fdivs
add
mov
inc
add
push
icebp
mov
jnp
add
es
out
sbb
rolb
fwait
inc
ret
mov
add
cmp
mov
lock
mov
imul
cmpsl
js
fbld
push
loopne
xor
sbb
pop
jne
jle
cmpsl
les
rorl
movsl
aad
pop
xor
add
pop
ret
inc
xchg
xor
push
cmp
in
dec
ljmp
ret
inc
shll
imul
decb
cmc
add
dec
xlat
sbb
cmpsl
jae
inc
scas
fs
out
sbb
lea
fimull
insb
lret
xor
mov
lods
cmp
and
daa
pop
pop
pop
jmp
adc
pop
in
pop
in
pop
mov
sarl
loopne
mov
xorl
cmc
inc
fmull
pop
adc
push
into
into
or
and
pushf
jo
bound
sti
mov
lods
or
pop
loope
iret
movsl
and
fiadds
fs
jne
and
ss
movsl
movsl
cmpl
cmp
add
push
add
movsb
mov
mov
aaa
cmp
fld
add
xchg
ret
and
mov
leave
gs
dec
jg
pop
jbe
mov
mov
pusha
add
ffreep
add
and
add
inc
add
mov
sbb
scas
push
add
sub
jnp
add
mov
enter
adc
fmull
in
jg
add
cmp
and
loope
sbb
lds
imul
mov
mov
add
aad
push
or
punpcklbw
test
jg
mov
imul
xchg
pop
xor
jg
xchg
pop
jmp
jecxz
xor
ficoml
movb
sbb
test
test
movsb
add
jne
xor
sub
lahf
sbb
sub
ja
outsb
call
out
xor
clc
out
cmc
ja
imul
sahf
fldlg2
mov
or
jg
int
addb
mov
fisttpll
jno
call
add
fisubrl
addr16
daa
cmp
jo
xchg
dec
push
jcxz,pn
sbb
pushl
loope
jg
stos
xor
sti
testl
pop
fldl
add
out
ds
cmc
repz
scas
loopne
test
pop
sbb
jae
adc
pop
sub
add
out
xchg
in
leave
push
push
pop
xor
cli
data16
push
add
in
repz
push
push
cltd
mov
xchg
adc
inc
sbb
shlb
add
cmpsb
sbb
sbb
ficompl
xchg
aas
js
mov
cmp
add
jecxz
mov
add
out
enter
jnp
jno
or
sub
jo
cmp
popa
fildl
stos
or
add
in
sahf
jg
rep
or
lret
sti
mov
jge
sti
enter
push
push
push
cli
push
test
lahf
icebp
test
pop
push
and
rcrb
xchg
sub
shl
xor
mov
sub
and
push
adc
cltd
sbb
xor
pushf
xchg
or
sarb
pushf
ret
imul
sub
aas
je
ret
popa
and
leave
arpl
filds
mov
dec
xchg
dec
adc
adc
add
cmp
or
enter
add
stc
or
sbb
rcrb
dec
test
mov
js
mov
add
lahf
adc
stc
xor
mov
dec
fistl
inc
movsl
mov
in
cltd
out
sub
jmp
inc
xor
and
or
inc
or
cmp
jmp
int3
out
in
repz
add
sub
fnstenv
pop
loop
push
cli
xor
test
add
push
aam
clc
mov
jnp
add
add
pop
cmpsl
mov
testl
or
sahf
inc
xor
movsb
into
lods
cwtl
jle
adc
in
adc
fcoms
pop
sub
icebp
fdivr
pop
iret
add
jns
inc
adc
cmpsl
fwait
repnz
es
add
out
inc
dec
addr16
sub
add
adc
add
sub
call
test
add
nop
mov
leave
popf
sbb
lods
lods
add
pop
cltd
popa
or
sti
cmp
sub
std
adc
je
add
xor
sub
jo
aaa
rolb
pop
int
mov
xor
loop
sti
mov
cltd
cmpsb
xchg
ret
add
dec
sub
push
cmpsb
mov
je
dec
rolb
outsb
mov
addb
add
cltd
ds
inc
add
cli
jnp
push
sub
push
std
sub
out
fstps
cmp
movb
push
ret
lea
mov
dec
daa
insl
push
push
add
fimuls
cmp
jg
shlb
push
pop
or
lcall
xor
push
cwtl
lea
addb
push
cwtl
outsb
adc
imul
jmp
add
fmuls
out
xchg
lcall
mov
mov
addr16
into
sbb
inc
add
ror
je
jae
pop
xor
inc
mov
fsubs
arpl
cmp
pusha
add
push
popf
push
mov
outsb
dec
mov
cs
cmc
pop
aam
movb
ret
ja
sub
dec
cmp
adc
out
cmp
sbb
mov
movsl
dec
xchg
add
xchg
lret
jns
adc
dec
jle
lahf
aad
add
addb
iret
int
dec
divb
jbe
cmp
push
leave
pop
and
xchg
repnz
sarl
daa
rcll
cmp
jno
pop
or
fnsave
in
mov
mov
mov
jl
or
aad
sbb
outsl
dec
add
bound
inc
add
sbbl
lret
xchg
add
inc
adc
mov
movb
add
mov
xlat
mov
jp
lods
daa
insl
sub
sub
lods
pusha
add
mov
pop
js
cmp
movsl
mov
fdivrl
inc
add
clc
ljmp
push
popf
cmp
fldcw
sub
or
dec
sub
pop
add
bnd
or
xchg
out
cmpsl
xchg
mov
dec
scas
xor
inc
add
decb
push
add
fidivrl
push
fiadds
inc
in
inc
xchg
popf
mov
out
sbb
push
xchg
daa
fimuls
sub
xchg
loope
enter
add
xor
inc
loop
lret
cltd
aam
push
fld
adc
jo
or
js
test
test
incl
xor
lcall
addl
arpl
mov
inc
add
test
rolb
sbb
xor
js
pop
cmpsl
jmp
imul
sub
sub
xchg
out
scas
adc
into
fwait
jo
adc
sub
jae
mov
mov
add
sub
xor
aad
sbb
cmp
push
cmpsl
sbb
loope
mov
mov
icebp
mov
push
bound
xchg
js
pop
xchg
dec
jb
arpl
in
test
imul
ljmp
out
cmp
mov
adc
and
mov
add
sbb
pusha
add
cs
lods
add
push
add
lcall
addb
loop
pop
xor
add
push
dec
gs
add
add
mov
pop
sbb
jecxz
add
stc
insb
cmp
mov
pop
fistl
add
mov
and
mov
shrl
sbb
add
push
movsl
ret
ret
stc
push
sbb
pop
and
frstor
stos
out
xor
add
pop
cltd
xchg
sbb
mov
pop
mov
sub
ret
les
addb
pop
movb
inc
add
lods
hlt
inc
mov
dec
adc
add
add
mov
or
hlt
push
sbb
lret
jnp
mov
push
lret
sub
add
inc
data16
fdivp
add
cmp
or
mov
sahf
cmpsb
xlat
jp
outsl
pop
push
pop
repnz
xchg
call
cmc
fiaddl
jp
sahf
pushf
mov
rolb
sub
loope
mov
movsl
insb
test
popa
add
cmp
inc
xor
outsb
xchg
xchg
pop
cmp
cltd
cld
xor
imul
pop
inc
add
pop
sbb
and
add
test
add
je
pushf
jo
cld
pushf
lea
push
outsb
dec
cld
jecxz
stc
das
fnclex
sub
jbe
repnz
sti
stos
addb
cmp
mov
sub
fisttps
xchg
sti
xor
sahf
jge
lods
xchg
cs
jl
add
das
mov
ficoms
add
xchg
jle
nop
cmpsb
repnz
mov
jge
pop
shl
addb
and
lcall
div
mov
xor
add
add
rcll
sub
in
enter
jg
add
xorl
mov
mov
mov
push
adc
mov
popf
xor
jecxz
jns
pop
or
xor
xchg
cmpsl
das
mov
add
jo
je
sbbl
jo
js
leave
mov
dec
push
jb
pop
out
sahf
js
ret
lret
push
dec
lods
cmp
arpl
cmp
mov
xchg
aam
inc
mov
pushf
or
inc
ss
adc
test
sbb
xchg
push
add
pop
ja
filds
or
lcallw
and
add
fmull
test
movsb
rcrl
scas
mov
xor
rclb
arpl
or
mov
or
and
les
xor
push
sarl
mov
fiaddl
xor
mov
and
lret
xchg
sub
idivl
in
push
jnp
pop
aas
cld
std
ror
push
add
add
les
cld
cs
sbb
dec
into
out
xor
xchg
and
into
and
cmpsl
xchg
outsl
or
out
insl
jnp
dec
sbb
add
xchg
addb
ret
bound
xor
pop
popa
mov
loopne
cmp
addb
cmpsb
pop
xor
sar
or
xchg
xchg
es
out
sub
rcrl
mov
pop
pop
lret
push
add
pop
dec
push
test
add
and
fldenv
sub
add
repnz
add
fldt
push
sub
pop
in
mov
push
icebp
mov
out
les
fdivs
icebp
lock
sbb
stc
mov
test
sub
inc
add
sub
out
pop
and
fstp
jno
add
ss
inc
add
fwait
lea
xor
pop
mov
fs
mov
add
inc
add
enter
idivb
in
adc
add
or
inc
jbe
mov
aaa
sub
sbb
out
add
inc
adc
dec
into
cli
popf
dec
rolb
fdivrs
outsl
push
out
add
pop
and
rolb
mov
mov
idivb
scas
sarl
test
shlb
loopne
into
stos
pop
out
aad
xor
mov
cld
push
addb
mov
fcmovbe
mov
jle
mov
sub
sub
mov
dec
sbb
jecxz
aam
add
scas
or
je
div
mov
jne
pop
mov
jns
jbe
popa
ja
jo
addb
mov
push
jmp
sub
cwtl
and
dec
push
movsl
rcrb
leave
push
pop
xor
push
test
lea
adc
cmp
inc
inc
inc
add
cmpsl
adc
jg
adc
sub
add
add
jne
roll
mov
fwait
sub
push
add
push
cli
push
push
cmc
cld
addb
sbb
add
movsl
xchg
loop
mov
xchg
xor
add
loope
pop
popf
push
cmp
push
scas
pop
fisttpl
ret
add
ljmp
dec
stc
sub
cmp
mov
add
push
mov
divb
add
jle
fsubl
aas
add
jo
sbb
jmp
cli
aas
inc
add
mov
enter
fisttpl
jmp
cwtl
sub
push
sbb
cmp
pusha
add
test
call
in
add
add
nop
mov
or
and
cmp
movsl
lea
add
add
int3
ds
aas
lahf
inc
add
fnsave
add
inc
mov
mov
xor
aas
jl
inc
add
fisttpl
xchg
test
leave
jmp
bound
rolb
lahf
add
push
rolb
xchg
and
mov
and
testb
add
sub
mov
jbe
push
imul
push
mov
hlt
cmp
mov
or
lock
out
lret
adc
mov
add
cwtl
out
shl
addb
xchg
mov
sahf
fdivs
push
jp
ja
add
add
mov
ror
aam
mov
mov
xchg
int3
out
mov
adc
jg
add
inc
add
jmp
sbb
lahf
in
add
push
lods
sub
imul
mov
jge
pop
das
dec
adc
fsubl
pop
add
xchg
in
sar
mov
fsub
inc
ds
testb
cltd
test
addl
mov
sbb
dec
cli
mov
je
push
inc
xchg
test
add
cmp
pop
lret
push
jae
fnstcw
stos
cmpsl
repz
mov
test
sbb
add
ja
fnstcw
add
push
lcall
dec
pop
push
push
test
hlt
inc
add
fwait
cwtl
xchg
xor
arpl
add
stos
mov
popf
arpl
inc
add
add
add
addr16
in
ljmp
add
out
and
dec
lods
test
sub
or
add
inc
jne
add
arpl
stos
jle
in
mov
imul
lods
inc
add
or
dec
sub
dec
or
and
add
cmp
mov
push
pusha
add
into
aaa
jae
adc
loopnew
adc
add
add
and
jne
mov
add
mov
and
cmp
adc
pop
outsl
mov
orl
pop
mov
sbb
imul
push
add
pop
pop
push
movsb
lret
jo
in
leave
cmp
andl
xchg
sub
sub
push
pop
fprem
nop
xchg
push
add
cmpl
xchg
popf
hlt
movsb
jbe
adc
cmp
xor
cmp
in
fidivs
and
jmp
xchg
loop
mov
inc
add
dec
adc
pop
lret
xchg
dec
or
cmp
jle
arpl
xor
add
lret
lret
adc
mov
sbb
std
inc
cltd
jg
dec
sbb
add
pushf
fnstenv
mov
call
inc
add
add
mov
add
fistpll
sbb
cmpsl
add
inc
jae
ret
mov
addr16
mov
in
pop
addb
add
dec
mov
jae
les
js
mov
push
loope
xor
add
fbld
les
fmuls
xlat
dec
xchg
mov
push
push
call
lret
cmp
repnz
xchg
adc
sbb
cmp
and
idivl
push
aas
add
addb
xor
data16
fists
or
xor
mov
inc
add
lret
mov
loopne
inc
add
jge
pushf
inc
add
inc
jbe
mov
repnz
outsb
fidivrl
dec
xchg
test
lret
test
test
mov
mov
lods
xchg
es
sub
push
test
lods
and
add
cmp
repnz
out
mov
push
push
ret
rorl
mov
xchg
cmc
pushf
mov
rorb
fcmove
mov
stos
out
dec
and
adc
add
and
inc
add
add
add
adc
add
add
add
fisttpl
add
jl
addb
adc
out
sub
cmc
aad
std
movb
inc
add
or
lret
les
inc
add
push
cmc
xor
mov
cmpsb
xor
push
dec
xchg
mov
call
xor
test
mov
add
add
cmpsb
data16
leave
aas
inc
add
outsb
and
fidivrs
dec
cmp
mov
in
dec
repz
sub
cld
rol
add
cwtl
out
mov
mov
xchg
rolb
shll
push
mov
clc
xchg
in
test
mov
test
add
add
clc
pop
lcall
rolb
xchg
xor
pop
mul
xchg
jo
pop
iret
outsb
dec
push
scas
dec
nop
clc
xchg
not
jp
mov
scas
lahf
out
push
xlat
mov
xor
mov
std
sahf
push
stos
mov
add
xchg
out
dec
xchg
popf
aas
hlt
jb
sbb
call
sub
fisubl
shl
in
add
lock
test
pop
xchg
stos
test
daa
cmp
pop
xchg
sbb
jae
add
cmp
movsb
in
loopne
push
mov
lock
jbe
add
cld
stos
out
mov
xor
fdivl
add
call
push
jl
xchg
cmp
and
popf
jge
iret
movsl
cltd
test
or
sub
lea
jecxz
mov
dec
or
adc
lahf
mov
jg
mov
lea
rorb
pusha
add
mov
add
add
enter
popf
jl
adc
lret
es
cmp
pusha
add
out
adc
cmp
or
cwtl
psrlw
stos
call
jmp
push
in
lock
mov
push
jg
add
xor
pop
jmp
int
in
mov
fcompl
frstor
mov
popa
push
add
stc
stos
and
icebp
je
adc
jbe
pop
test
push
addb
cmpsb
or
xchg
xchg
mov
sbb
cmp
push
pusha
add
lcall
int3
or
mov
cld
fnsave
xchg
btc
addb
cmpsl
rolb
xchg
stos
stos
mov
dec
cmp
mov
inc
add
stos
shl
sub
sti
push
pusha
add
std
in
cmp
sub
js
add
sbb
push
scas
sub
pop
sub
sbb
nop
xlat
dec
movsl
mov
pop
mov
movb
xor
sbb
clc
addb
mov
rcrl
rcrb
lahf
sbb
addb
add
enter
cmp
sub
add
rolb
enter
std
outsl
test
and
out
add
adc
mov
sbb
add
add
mov
ljmp
mov
sarl
xchg
push
jmp
push
jns
mov
sti
ljmp
lods
mov
pop
test
test
pop
dec
lcall
scas
outsb
fwait
cmp
clc
push
std
cmp
psubsw
loop
cmc
cmpsb
stos
jne
pop
add
cmpsl
rolb
xchg
pop
cmpsb
inc
add
dec
and
push
cli
mov
hlt
lods
wbinvd
xchg
lcall
mov
data16
rolb
loope
and
cmp
adc
mov
js
adc
rorb
mov
or
insl
add
lods
iret
push
and
in
mov
add
adc
mov
aad
data16
sbb
dec
xchg
or
shll
dec
mov
xchg
test
