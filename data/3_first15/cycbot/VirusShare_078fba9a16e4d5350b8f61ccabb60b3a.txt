mov
test
daa
mov
out
or
out
out
out
out
out
out
inc
inc
pop
out
jp
jp
daa
out
out
bound
push
out
dec
dec
inc
inc
inc
out
out
sar
clc
adc
jne
rorb
cmp
dec
inc
xor
xchg
pop
pop
pop
addl
adc
adc
adc
out
div
push
ljmp
mov
mov
pop
out
out
out
and
es
popa
popa
popa
mov
jmp
imul
sub
jbe
and
cli
adc
ss
pop
xchg
or
or
addb
int
test
mov
cmp
cmp
jge
inc
mov
jg
jg
cmp
ret
jmp
aas
scas
scas
scas
pusha
pusha
pusha
pusha
imul
imul
jl
lods
inc
inc
inc
inc
mov
push
push
push
push
jmp
xchg
xchg
xchg
push
push
push
push
push
push
mov
out
out
je
push
cmp
cmp
cmp
ss
loop
movsl
out
out
fwait
fwait
fwait
fisttpl
ss
fstp
fldl
out
mov
int3
int3
int3
int3
cmp
mov
loop
loop
loop
or
or
or
or
out
push
push
push
mov
rcl
rcl
rcl
rclb
push
push
cmp
arpl
xchg
add
add
add
les
fnstenv
out
out
mov
mov
repnz
nop
nop
rcl
rcrl
cmpsb
cmpsb
rol
fwait
fwait
fwait
fwait
fwait
fwait
fwait
shl
test
shll
in
iret
sub
ds
test
jb
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
stc
stc
stc
outsl
outsl
outsl
sub
sub
sub
loop
pop
pop
sub
xor
xor
test
test
jle
out
push
push
aad
pop
jae
fwait
aam
les
int
inc
inc
inc
in
in
in
in
and
push
aad
out
pop
pop
aam
out
out
mov
inc
inc
jbe
icebp
icebp
xor
mov
push
add
add
jecxz
mov
pop
sbb
dec
dec
lahf
lahf
mov
sbb
push
iret
iret
out
push
push
push
push
or
mov
scas
scas
adc
jge
jge
les
cmp
cmp
clc
clc
clc
addl
into
cltd
cltd
xchg
jns
cwtl
insb
insb
insb
insb
out
rol
out
inc
mov
call
jne
jne
popf
popf
cmp
cmp
aas
sub
mov
pop
lcall
ss
ss
out
out
out
out
out
push
inc
inc
cmp
dec
dec
enter
mov
ds
loop
jmp
xchg
xchg
imul
push
push
xchg
stos
stos
mov
mov
imul
call
loopne
loopne
mov
js
or
or
or
movsl
cwtl
jae
leave
in
in
lods
ss
daa
mov
sub
loop
dec
dec
rcl
inc
inc
cs
inc
cmp
pop
xchg
xchg
xchg
xchg
flds
inc
inc
push
cli
sbb
test
js
shrb
cmp
call
shll
jbe
jbe
cmpsl
aaa
dec
cwtl
push
jge
push
aad
into
lods
adcb
dec
dec
mov
out
in
in
sti
sti
sti
xor
sbb
sbb
pop
mov
test
lretw
lret
sub
sbb
jmp
leave
leave
leave
leave
pop
pop
lods
mov
dec
adc
add
jl
loopne
daa
daa
daa
push
push
push
mov
mov
push
insb
insb
insb
xchg
test
rol
cs
xlat
xlat
xlat
xlat
test
jne
lea
dec
dec
dec
lea
icebp
inc
inc
inc
inc
inc
inc
inc
lret
lret
fcomp
out
out
out
pop
pop
and
jg
inc
inc
inc
inc
jge
jge
sahf
out
in
in
mov
push
push
push
push
push
push
ret
ret
ret
ret
push
clc
clc
clc
xor
xor
mov
rcl
sbb
loope
mov
insl
insl
insl
les
ss
out
sbb
lret
lret
mov
mov
or
and
sub
sub
test
data16
pop
sub
mov
lcall
repnz
out
iret
iret
xchg
mov
dec
dec
ficomps
pop
pop
pop
pop
pop
pop
pop
pop
pop
rcl
shlb
sbb
cltd
cltd
out
out
in
in
in
in
pop
cmp
imul
outsb
out
out
out
pop
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
mull
test
mov
insl
or
out
out
add
and
and
push
sbb
push
outsl
data16
rcl
rcl
shrb
xchg
test
add
sub
sub
imul
mov
pop
xchg
aaa
addb
stc
stc
stc
pusha
pusha
pusha
pusha
pusha
mov
shll
out
out
out
mov
dec
dec
dec
scas
mov
mov
mov
mov
inc
inc
rcl
rcrl
mov
mov
jg
xor
and
inc
inc
lods
lods
lods
imul
in
push
push
jb
jb
hlt
hlt
hlt
mov
sub
inc
into
das
das
rorb
out
out
out
or
and
and
and
inc
inc
inc
lret
test
test
test
lock
dec
daa
jb
aaa
ficoml
fcmovnu
xor
pop
pop
jecxz
xchg
jle
mov
push
push
push
push
lods
sbb
mov
xchg
imul
stos
div
div
notl
pop
in
in
in
in
out
out
out
out
imul
adcb
sahf
sahf
aas
fcmovu
fcmovu
fcmovnb
pop
mov
cmpsb
pop
pop
pop
pop
push
push
push
push
and
imul
xor
xor
xor
xor
enter
xor
fcmovnu
fisttpl
mov
fisubs
int3
mov
jo
jo
ud1
into
into
pop
pop
pop
pop
pop
cmp
cmp
cmp
shl
out
div
div
div
neg
and
test
cmpsl
aam
mov
rol
rol
mov
sbb
xchg
xchg
xchg
xchg
xchg
cmp
xor
adc
mov
or
fcmovu
fimull
getsec
aaa
aaa
aaa
aaa
cs
aam
sbb
sbb
out
out
out
out
out
out
sahf
sahf
paddq
test
sub
out
dec
and
and
push
ret
xor
aaa
aaa
aaa
xor
hlt
hlt
xor
sbb
mov
movl
mov
cmp
inc
inc
movsl
int3
int3
ja
cmpsl
cmpsl
negb
out
lods
lods
lods
mov
mov
aam
ja
inc
cmp
xchg
pop
jle
lcall
data16
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
jne
add
add
inc
jo
inc
imul
pop
pop
pop
pop
pop
pop
cwtl
out
loope
mov
push
push
push
push
add
add
ds
out
loop
xor
add
into
arpl
pop
pop
cmp
sub
sub
mov
out
adc
ds
dec
mov
pop
addb
xor
push
int3
fcmovu
mov
jne
pushf
sbb
or
sub
ds
mov
inc
out
out
out
out
pop
pop
pop
cmp
jae
adc
or
push
push
push
loop
push
push
push
push
push
imul
dec
dec
dec
out
lahf
cmp
jp
dec
xlat
enter
test
sub
sbb
jns
mov
mov
dec
xor
mov
out
out
out
daa
daa
daa
lods
loope
pop
aaa
aaa
aaa
aaa
pop
xchg
xchg
xchg
xchg
lcall
pop
pop
pop
pop
pop
pop
out
aas
mov
cmp
sbbl
loopne
data16
pop
pop
jle
mov
pop
pop
pop
pop
pop
pop
mov
cmpsl
jns
imul
mov
mov
xchg
push
or
insl
jo
add
dec
jmp
mov
mov
mov
inc
push
push
push
or
or
cmp
lahf
lods
sbb
sbb
cmc
push
sahf
sahf
xchg
fldl
jcxz
mov
inc
mov
repnz
test
push
push
inc
inc
inc
stos
adc
adc
call
pop
mov
push
imul
incb
sarb
inc
mov
push
imul
jno
popa
popa
leave
leave
lcall
out
iret
add
mov
jecxz
jecxz
inc
inc
inc
add
pop
xchg
xchg
xchg
xchg
out
je
rcl
ds
sbb
mov
cs
out
out
out
out
sarl
mov
or
or
or
xor
hlt
repz
inc
inc
inc
sbb
sarl
mov
push
push
ret
ret
rcll
out
sub
div
sbb
mov
fcom
mov
inc
inc
inc
inc
xlat
xlat
xlat
xlat
xchg
rcrb
clc
sbb
sbb
aam
rol
rcrl
pop
adc
adc
jecxz
inc
loop
loop
into
into
into
add
add
lock
addl
or
mov
sub
arpl
pop
sub
cmp
daa
daa
pop
inc
inc
inc
and
cmpl
int
mov
aas
push
push
push
call
push
es
addr16
fisttpll
jne
xlat
cli
cli
cli
cli
jb
jb
bound
push
mov
mov
mov
lods
lods
lods
lods
lods
pop
pop
cld
xchg
xchg
xchg
xchg
push
push
mov
rcl
xor
xor
out
out
sbb
out
mov
int
int
scas
scas
sbb
xchg
xchg
xchg
xchg
pop
pop
or
or
ss
insb
insb
icebp
pop
clc
clc
clc
clc
clc
add
jp
jp
jno
bound
add
ret
ret
pop
xchg
mov
mov
loopne
mov
mov
enter
xor
lods
aaa
aaa
and
push
js
js
addl
bound
mov
push
mov
mov
sub
or
ss
pop
cwtl
cwtl
cwtl
or
inc
cmc
int
int
cmc
inc
inc
xchg
xchg
push
popf
popf
add
add
mov
test
xor
xor
inc
pop
pop
pop
pop
pop
adc
out
mov
pushf
sbb
incl
cmp
cmpsl
cmpsl
xchg
test
jnp
mov
xchg
lods
lods
adc
adc
fisttpl
add
add
add
mov
jb
sbb
movsb
movsb
movsb
movsb
scas
scas
scas
movsl
jb
jb
mov
scas
scas
pop
daa
adc
out
out
out
aam
icebp
cmp
aam
aam
xor
addr16
in
pop
add
add
out
xor
mov
mov
mov
movsl
jecxz
push
push
mov
add
inc
mov
mov
addl
adc
adc
adc
jno
movsl
movsl
movsl
and
and
push
stc
stc
stc
stos
xor
lcall
rol
fdivrl
or
adcl
mov
mov
out
jl
inc
pop
pop
pop
cmp
xchg
loopne
loopne
std
std
add
cmc
es
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
movsb
and
sti
incb
push
push
push
push
nop
nop
nop
nop
nop
inc
inc
inc
inc
xor
xor
mov
jne
jne
xchg
xchg
jns
decb
mov
sbb
sbb
lea
mov
cmp
imul
stc
lahf
lahf
test
insl
insl
jmp
rcl
cltd
add
xchg
fstp
fstp
fstp
and
xor
aas
or
popa
insl
add
add
sub
sub
cli
addl
js
outsl
outsl
outsl
outsl
outsl
push
push
push
fwait
leave
leave
leave
dec
addb
jle
jle
rorb
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
mov
stos
cmova
mov
jmp
int
int
mov
mov
mov
sbb
sub
out
out
out
out
out
out
lcall
adc
adc
in
fstp
push
mov
jmp
jnp
jnp
imul
xor
outsl
outsl
cmpsl
cmpsl
cmpsl
popf
popf
div
fstps
pop
xchg
dec
dec
xor
xor
xor
xchg
pop
imul
sub
sahf
lahf
lahf
lahf
scas
scas
jno
jno
jno
jno
inc
loope
inc
inc
inc
inc
inc
inc
inc
xchg
out
out
js
cmp
or
ror
orl
mov
in
fs
adc
adc
xor
xor
xor
xor
xor
aam
adc
jb
jb
jb
repz
scas
scas
dec
insl
scas
scas
scas
stos
stos
mov
mov
jmp
mov
in
clc
loope
cwtl
cwtl
cwtl
popa
imul
ja
ja
ja
imul
repz
lret
arpl
leave
leave
movsb
movsb
cltd
xor
xor
xor
cmpb
cmp
rcl
rcl
mov
rol
aad
sub
sub
sub
mov
test
inc
loopne
xchg
xchg
xchg
xchg
xchg
enter
mov
pop
lea
lods
es
push
push
call
loopne
loopne
loopne
loopne
aad
dec
dec
andb
test
je
je
hlt
int3
int3
int3
int3
int3
int3
fcmovnu
mov
jle
sub
cltd
cltd
cltd
cltd
cltd
pop
mov
sub
div
div
dec
test
inc
icebp
hlt
jae
shll
cmc
pusha
inc
inc
inc
inc
inc
sub
shl
in
and
mov
mov
mov
scas
fstp
jb
inc
inc
inc
inc
push
daa
daa
pushw
rcrl
jge
pop
in
pop
pop
pusha
pusha
pusha
push
rcl
rolb
jne
jne
jne
ret
pusha
pusha
pusha
add
outsb
outsb
movsl
movsl
int
push
push
push
out
xor
stos
dec
ss
into
into
into
es
rol
mov
sub
and
and
in
decb
dec
dec
dec
dec
dec
fisubl
mov
arpl
enter
and
pop
pop
pop
pop
mov
out
xchg
xchg
inc
inc
xlat
xlat
xlat
sub
mov
jb
jb
add
add
ss
inc
inc
inc
inc
jecxz
cmc
call
xor
xor
mov
repz
divl
push
aaa
and
jne
pop
mov
or
jmp
lret
daa
daa
push
push
dec
dec
repz
addb
cld
cld
cld
cld
addr16
test
cmp
cmp
inc
std
adc
adc
mov
rorl
xchg
xchg
xchg
xchg
xchg
xchg
and
sbb
xor
xchg
int3
sub
xor
mov
mov
mov
mov
mov
cmp
out
cmpsb
cmpsb
lret
lret
lret
lret
lret
lret
lret
lock
in
in
in
imul
ja
mov
daa
daa
daa
daa
or
ljmp
ljmp
push
pop
mov
in
daa
aad
ljmp
vmread
popf
popf
sub
sub
sub
mov
mov
test
or
jb
inc
cwtl
cwtl
cwtl
cwtl
mov
movsl
movsl
movsl
lea
rol
jge
jge
jge
jge
cmp
cmp
movsl
movsl
movsl
movsl
inc
inc
adc
adc
sbb
out
out
pop
mov
fsubrl
sub
push
insb
mov
scas
scas
xchg
xchg
jp
add
or
fs
push
xlat
data16
and
jl
pop
pop
repz
jnp
das
das
das
das
das
lods
lods
lods
lods
xchg
fldl
add
movsb
in
ret
into
cmpsl
rcl
rorb
xchg
xchg
mov
pop
xchg
iret
inc
inc
inc
inc
inc
jge
mov
clc
mov
bound
movsb
movsb
movsb
sub
sub
sub
push
push
push
push
push
push
push
mov
mov
xor
or
notl
ret
ret
ret
ret
ret
mov
pop
pop
pop
inc
popf
popf
loope
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xor
and
rcl
enter
iret
iret
iret
iret
xor
jle
cs
adc
adc
adc
adc
inc
inc
inc
cmpsl
fcmovnu
fistl
push
push
push
push
out
out
out
out
rol
movsl
movsl
movsl
mov
xor
pushf
lods
mov
out
call
xchg
xchg
xchg
xchg
cld
scas
scas
popf
sub
and
cwtl
int
stos
sti
shlb
dec
lock
pop
ds
out
stos
stos
cld
cld
adc
push
cmpsb
lods
es
int3
int3
aaa
aaa
aaa
aaa
jl
pop
int
rcl
push
lods
lods
or
sub
mov
mov
push
add
das
mov
xchg
xchg
out
jns
dec
div
mov
pop
pop
gs
pop
bound
inc
aad
or
dec
dec
dec
dec
and
and
mov
push
dec
xchg
mov
repnz
pop
sub
arpl
dec
dec
dec
xchg
and
rol
and
mov
pop
pop
pop
aaa
aaa
repnz
addb
insl
ds
sti
or
or
push
push
push
jl
lods
lods
pop
gs
or
dec
dec
dec
dec
addr16
lock
out
pop
pop
iret
aam
aam
cmp
or
or
or
or
cmpl
cmp
cmp
push
push
push
shl
adc
jge
jo
dec
dec
adc
adc
mov
jle
or
sbb
scas
sahf
sahf
push
push
daa
daa
daa
int3
int3
int3
jno
jno
dec
dec
cmp
int
les
das
ret
and
and
mov
lock
ljmp
sub
xor
add
jge
jo
popf
popf
popf
popf
popf
popf
popf
leave
jo
mov
sbb
add
cmpsl
cmpsl
add
mov
in
in
mov
addb
xchg
xchg
xchg
mov
cmp
rcl
rorl
xor
mov
dec
leave
leave
jp
dec
dec
dec
dec
sub
arpl
and
dec
out
out
inc
inc
inc
inc
push
xor
xor
stc
stc
stc
dec
lods
lods
lods
lods
sti
sti
call
aad
aad
fnstsw
lcall
pop
pop
pop
jl
lock
sub
sub
jno
sbb
aad
fisttpll
inc
inc
mov
ficoms
push
push
rorl
mov
sub
outsl
cld
cld
mov
cli
loope
rcl
or
or
lock
lea
imul
movb
or
in
in
in
in
in
push
mov
inc
inc
inc
stos
stos
stos
stos
push
jae
jge
mov
sub
icebp
lock
push
push
imul
iret
iret
iret
or
or
ljmp
pop
pop
fistps
xor
leave
inc
push
jno
adc
adc
mov
rcl
or
mov
cmp
insl
mov
cmc
cmc
cmc
cmc
fcomp
fcomp
fsubrs
add
pop
xchg
mov
addr16
xchg
xchg
xchg
pop
pop
pop
mov
adc
pop
cmp
inc
inc
imul
pop
pop
mov
sbb
scas
push
mov
div
lea
mov
fwait
fwait
fwait
add
scas
push
insb
inc
inc
inc
dec
dec
leave
orb
xchg
gs
out
inc
inc
sahf
fisubl
mov
clc
clc
mov
xchg
mov
sub
sub
int
int
push
push
mov
mov
int
int
and
and
int3
int3
or
mov
pop
pop
pop
pop
pop
pop
pop
das
das
das
adc
div
div
div
divb
pop
push
push
push
push
push
push
push
push
pop
pop
call
push
sbb
sbb
dec
dec
dec
jmp
fxch
int
lret
cs
ret
lret
jne
jne
es
fimuls
push
jp
fldln2
in
mov
fcmovnu
fildl
or
cmp
and
cmpsb
cmpsb
cmpsb
mov
mov
sbb
into
into
and
cmp
sbb
out
inc
std
std
sti
js
js
add
aaa
push
push
cmc
insb
add
jne
push
aaa
pop
pop
pop
pop
adc
adc
iret
iret
push
push
shll
mov
les
insl
insl
es
cmp
cmp
dec
dec
cmp
mov
cmp
xchg
pusha
pusha
pusha
jb
dec
dec
sub
jbe
mov
mov
rol
inc
lock
and
cwtl
loopne
sub
ret
ret
ret
xchg
or
or
cmp
cmp
push
or
or
ret
stc
stc
stc
sub
xor
movsl
movsl
movsl
je
out
add
and
outsb
leave
stos
inc
inc
and
out
out
mov
sbb
out
daa
fdivrl
lods
lods
jecxz
adc
adc
rorl
mov
push
adc
addl
addl
fxch
int
mov
mov
hlt
hlt
sahf
sahf
jmp
push
out
xor
ret
cmp
jae
std
pop
das
das
das
das
sub
sub
arpl
pop
pop
pop
bound
ret
ret
ret
ret
ret
ret
ret
ret
ret
push
push
test
mov
aad
add
xor
or
or
mov
or
dec
inc
cmp
ds
notl
nop
jne
lock
or
or
sub
scas
scas
scas
scas
and
and
and
and
xchg
mov
cmpsb
ret
cmp
inc
inc
inc
push
push
fcmovnb
aaa
outsl
outsl
rcl
rcl
rcl
or
pop
pop
pop
insl
mov
mov
dec
dec
dec
pushf
pushf
pushf
adc
mov
cltd
push
push
push
push
cmpsb
sbb
ds
scas
js
lods
lods
lods
inc
inc
sub
sub
stos
stos
js
rol
push
addr16
xor
xor
xor
fnsave
jecxz
fmuls
call
cmp
stos
sub
sub
aaa
mov
inc
mov
add
add
push
out
stos
insb
insb
sub
icebp
icebp
icebp
icebp
xor
dec
dec
dec
div
sbb
repnz
out
out
out
out
out
xchg
out
out
out
out
test
push
addb
or
or
mov
sub
jnp
dec
imul
lret
push
sbb
cmp
movsb
movsb
ret
ret
sub
cli
cli
cli
cli
test
out
ja
bound
jg
jg
out
in
in
inc
inc
or
dec
dec
dec
sub
cwtl
mov
mov
out
test
mov
xlat
xlat
or
or
inc
inc
inc
inc
inc
inc
cmc
jmp
mov
mov
sarl
aas
aas
xor
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sub
pushf
pushf
aam
sbb
sbb
test
test
cmc
inc
inc
inc
inc
inc
pop
fxtract
roll
sbb
bound
dec
xchg
sbb
jb
jb
adc
jp
dec
jp
jp
add
enter
dec
dec
dec
enter
test
rcl
cli
jo
inc
fmuls
cmp
inc
add
sub
je
pop
shll
add
cld
cld
arpl
pop
add
lret
sub
aam
les
xchg
test
add
loop
movsl
and
sub
add
add
inc
add
dec
add
add
add
je
push
fisubrs
dec
add
mov
gs
cmp
lcall
jae
insb
add
xlat
jg
mov
fsub
pusha
add
insb
add
ds
loopne
push
cmp
ror
add
inc
add
or
sbb
mov
mov
ja
mov
data16
cmp
adc
jne
sbb
add
mov
add
popa
test
cmp
sub
pop
and
jmp
ficomps
xorb
cwtl
sub
fcmovne
sub
pop
cmp
mov
add
lahf
mov
adc
lods
das
xor
subb
in
lods
divb
sub
push
adc
add
fsts
fsub
repz
mov
add
add
test
dec
add
int3
stc
scas
push
sahf
adc
lcall
add
fcomps
add
lcall
data16
pop
mov
cmp
jl
push
jecxz
movsl
shrb
xchg
imul
lahf
loopne
pushl
jg
inc
jns
xor
add
dec
add
add
out
movsb
ja
add
fisubs
add
mov
add
and
enter
mov
add
stc
fbld
jecxz
pop
adc
test
pop
out
xlat
xor
mov
cmp
in
add
aam
fwait
push
add
lahf
call
add
pop
push
add
je
mov
ds
sub
adc
adc
xchg
add
into
push
hlt
fistpll
jge
inc
jmp
orl
scas
xchg
push
xchg
and
mov
xchg
sbb
sub
and
pop
jp
pop
and
cltd
cmp
test
add
adc
into
mov
adc
int
mov
mov
cmc
das
adc
adc
dec
add
xchg
out
mov
dec
lcall
add
scas
dec
add
lock
add
push
add
jg
test
mov
jmp
jo
adc
or
add
adc
icebp
hlt
addl
sbb
idivl
test
add
call
jne
insb
add
inc
jae
pop
in
cmpsl
mov
adc
sbb
loope
jno
sbb
scas
xchg
enter
push
int
dec
popf
enter
arpl
hlt
sahf
push
divb
testl
xor
mov
sub
imul
xchg
add
xor
cmp
rol
cmc
dec
int
repnz
add
icebp
test
xchg
aam
popa
push
adcl
xchg
sub
rolb
add
jmp
or
mov
mov
insl
test
int3
jecxz
mov
fldl
mov
ret
rcr
loop
aaa
jg
push
fistl
mov
add
xchg
and
fwait
add
dec
add
cmpsb
jmp
popa
xchg
out
or
pop
sahf
out
pop
adc
dec
mov
add
jbe
cwtl
jae
fistpll
add
pop
ja
mov
dec
add
mov
icebp
adc
ljmp
dec
add
pop
xor
add
mov
mov
sbbl
call
push
add
mov
repnz
hlt
in
mov
inc
mov
push
sbb
repnz
lock
add
imulb
fdivrs
mov
dec
add
cmp
mov
pop
pushf
dec
hlt
add
dec
add
pop
in
dec
add
in
sbb
es
jns
imul
xchg
xchg
mov
test
fnstenv
add
sbbb
lfs
sbb
sbb
dec
add
fildl
add
mov
cmpsl
adc
xlat
movsb
les
out
push
or
loop
add
pop
cld
sarl
cmpsl
mov
add
in
mov
mov
mov
add
fs
out
inc
add
add
mov
push
mov
inc
mov
test
add
lret
stos
pop
out
out
xorl
in
inc
add
add
das
inc
bound
mov
add
add
outsl
push
add
push
and
sub
jle
add
push
out
push
adc
add
pop
jb
add
in
add
dec
add
test
shlb
lods
mov
cmp
jns
mov
jnp
std
xlat
add
cmp
lcall
or
cmp
testl
ficomps
ss
add
add
pop
stos
popa
sbb
cmpsb
dec
add
ljmp
cmp
add
js
in
pop
push
nop
or
mov
add
fwait
test
add
sbb
inc
dec
or
push
pop
push
sub
inc
add
sbbb
lods
rcl
cmp
inc
outsb
add
add
push
cmpl
dec
addr16
mov
add
xchg
jo
scas
sub
push
jnp
add
add
dec
add
push
add
mov
cmp
and
add
xchg
pop
sbb
repz
mov
add
pop
push
dec
add
imul
hlt
test
cld
and
mov
bound
cmp
mov
call
pop
xchg
shlb
mov
pusha
add
pop
in
test
pop
lods
xchg
das
lods
into
cmc
rcll
iret
outsb
add
leave
ds
loope
dec
mov
jno
or
add
and
les
iret
loop
movsl
pop
pop
insb
add
add
xor
sub
mov
das
pop
cmp
add
add
dec
xchg
mov
cmp
push
pop
dec
add
pop
lahf
jbe
mov
sbb
xor
add
stc
push
push
jae
lods
mov
push
or
arpl
sti
mov
sbbl
add
mov
cmp
add
sub
shll
cmpsb
xchg
ja
jp
sahf
mov
nop
mov
push
push
insb
add
push
cmp
shlb
repnz
xor
cltd
sahf
push
jb
dec
add
inc
add
mov
popl
mov
pop
xlat
mov
inc
add
out
add
and
add
jge
mov
fprem
lea
xor
sbb
push
cmp
lahf
cld
ds
pop
in
or
stos
pop
arpl
add
fld
pop
stc
sbb
in
add
sbb
push
add
add
jae
push
push
sub
fldt
add
and
mov
add
or
and
test
mov
pop
fdivrp
mov
sbb
shl
xor
push
lock
movsb
mov
mov
add
adc
aaa
push
aam
iret
jb
add
popf
or
fwait
pop
push
mov
add
in
inc
add
mov
add
jle
jnp
push
or
or
xchg
fwait
movsb
cwtl
out
mov
data16
das
inc
push
and
pop
sti
iret
in
data16
lods
fwait
sub
ja
test
xchg
test
mov
mov
add
xor
add
push
add
jne
cltd
mov
mov
jg
lds
inc
cmp
and
or
mov
insb
add
dec
add
ss
add
xchg
mov
adc
mov
add
sub
out
mov
push
jmp
mov
iret
xor
movsb
inc
xor
decb
cmpsb
xchg
outsb
add
adc
mov
cmp
add
jecxz
stc
jnp
add
add
jb
clc
jns
xchg
xchg
sahf
adc
cmp
pop
cwtl
daa
test
in
xor
pusha
add
xorb
dec
add
ljmp
and
xchg
adc
stc
pop
ret
sti
leave
push
push
test
or
pop
push
sahf
mov
cli
nop
cmp
push
mov
imul
dec
xchg
and
addl
mov
xchg
std
mov
outsb
add
mov
cmpsl
sub
and
fcomps
mov
add
stos
in
push
sti
dec
add
add
in
dec
cmp
pop
adc
popa
bnd
ss
or
ds
add
outsb
add
jnp
rol
mov
out
clc
hlt
movsl
rcll
pop
xchg
or
icebp
fisttpll
mov
xlat
movsb
jg
add
loop
lods
push
push
imulb
out
ficoms
insl
jg
cmp
cmp
mov
js
add
xor
mov
mov
mov
inc
add
jp
add
insb
add
mov
mov
jecxz
add
mov
popa
leave
data16
test
aad
ljmp
mov
clc
das
cld
outsl
jle
fbld
in
adc
add
imul
loopne
leave
mov
xchg
jg
ret
push
or
cmp
add
mov
clc
inc
add
cmpsl
insl
repnz
push
add
pop
lods
fldenv
aad
and
push
cmp
fldenv
inc
pop
mov
add
jnp
add
add
mov
dec
jp
imul
add
clc
add
adc
int3
scas
fisubs
mov
sbb
add
xlat
mov
sahf
lret
fcmovne
push
xor
jge
push
fsin
test
movsb
stos
xor
lock
jge
pusha
add
insl
push
add
jno
add
dec
add
sysexit
xchg
movsb
cmp
cmp
add
dec
add
sub
int
jle
lret
lea
add
ljmp
into
xchg
iret
mov
and
pop
or
sub
ja
mov
add
sarl
insl
sbb
rorl
sub
jmp
add
dec
xchg
aad
clc
fisttpll
add
ds
inc
stos
data16
cmp
add
and
dec
add
add
pop
pop
icebp
pop
cmpsb
xor
in
mov
add
xchg
add
ret
pop
inc
push
mov
rcr
mov
add
loop
in
mov
daa
jno
xchg
cmpsl
add
into
cmp
arpl
cmp
add
jmp
mov
ja
push
cs
xor
add
inc
add
inc
add
inc
nop
cmp
es
mov
jmp
sub
es
add
add
in
insb
add
cmpb
js
pop
or
ljmp
jg
jmp
xchg
imul
add
clc
lods
sbbl
dec
add
dec
add
and
mov
and
and
add
bound
aaa
cwtl
or
addb
scas
mov
les
or
cli
scas
ret
xchg
test
jno
psadbw
pusha
add
push
nop
lahf
mov
add
out
or
xchg
sahf
leave
aas
jo
or
mov
or
push
jge
loopew
jle
fistl
mov
nop
hlt
mov
and
bound
jae
or
fcmovbe
add
inc
add
mov
add
add
les
add
xchg
sub
add
add
pop
mov
xor
das
js
dec
add
adc
add
add
out
adc
pop
fbstp
add
adc
pop
mov
xlat
or
xor
adc
mov
pop
sbb
mov
cmp
cmp
add
add
add
mov
sub
jno
clc
jne
enter
outsl
movsl
jecxz
cmp
and
les
jne
ljmp
ja
jb
inc
or
inc
add
add
lock
loope
jmp
mov
iret
sbb
or
sub
int3
pushf
and
dec
add
push
mov
sbb
mov
adc
xchg
ds
cmc
jbe
sub
jecxz
shrl
imul
or
fdiv
add
aad
adc
nop
jmp
add
addb
mov
push
cli
jns
mov
add
xchg
mov
pop
shrb
lods
sub
inc
addr16
xchg
push
push
jmp
add
and
pop
mov
stos
fwait
mov
or
add
mov
clc
adc
aad
std
stos
mov
dec
in
pop
int3
mov
inc
andl
mov
add
scas
mov
dec
add
add
dec
fimuls
pop
add
mov
and
push
mov
xor
lea
push
fwait
cli
dec
mov
push
add
dec
mov
fidivrl
adc
lcall
xchg
mov
pop
pop
add
mov
mov
add
sub
insb
add
add
scas
pushf
mov
mov
jns
mov
jo
addl
jecxz
shl
pop
out
cmp
add
xchg
pop
cld
lret
leave
outsl
in
push
push
mov
xchg
push
fidivl
ret
push
sub
sbb
inc
push
in
ja
cwtl
test
push
std
mov
mov
cwtl
xchg
inc
mov
adc
arpl
add
neg
xchg
outsb
add
mov
mov
sub
ds
lret
pushf
sub
in
jecxz
cmp
aas
dec
add
jbe
addr16
imul
xor
mov
ss
jbe
push
add
aaa
pop
jmp
add
push
mov
cmp
add
mov
dec
mov
jle
push
fnstcw
test
add
pop
ljmp
pop
dec
add
clc
xlat
dec
cmp
ja
icebp
out
cmp
inc
push
and
adc
add
sbb
roll
add
or
add
imul
add
add
add
lds
aad
adc
rcrl
cmp
lret
ret
xchg
mov
shrb
pop
pop
inc
mov
xchg
or
mov
pushl
add
sub
cltd
mov
mov
add
sbbl
add
inc
in
test
mov
cmc
jmp
xchg
jb
xchg
add
mov
xlat
in
call
adc
push
sbb
sbb
and
cmpsb
xor
gs
stc
add
add
push
adc
sub
push
cmp
pushf
xor
add
imul
rcrb
sbb
fidivs
fidivl
dec
push
adc
pop
add
frstor
int3
das
xor
sub
jnp
aad
ljmp
xor
jno
xlat
inc
jl
jmp
xchg
out
jns
mov
push
inc
mov
cmp
xor
iret
repnz
xor
enter
ret
aas
in
pusha
add
inc
or
out
pop
cmp
jecxz
ljmp
and
mov
lea
sub
movl
clc
push
lea
call
sub
add
add
and
mov
cmp
je
mov
push
push
push
cld
call
test
jne
dec
add
mov
add
push
push
push
push
push
call
test
jne
xor
cld
push
es
lea
movl
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
add
mov
add
not
cld
xor
test
cld
jne
call
xor
mov
add
ret
xor
mov
mov
stc
mov
bnd
cmp
mov
mov
mov
inc
or
lea
lea
add
xchg
shr
xchg
lock
and
sub
cld
jne
push
mov
jne
jnp
inc
xchg
pop
popf
cltd
test
push
es
push
rcl
aam
add
jne
jg
sbb
sahf
push
mov
std
pop
or
shlb
mov
pop
pop
mov
fcoml
mov
jp
nop
xchg
jb
daa
lds
add
div
test
xchg
dec
add
dec
add
adc
addr16
mov
pop
inc
mov
fs
sub
cmp
scas
outsb
add
std
jno
lret
xor
roll
test
add
test
jno
test
mov
arpl
push
jns
sarl
add
jno
inc
add
sub
cmpb
fs
jle
add
jecxz
lahf
imul
mov
das
cmp
aam
and
dec
pop
add
pop
push
mov
clc
jle
scas
cmc
inc
add
xchg
mov
mov
add
cltd
fistl
add
lock
inc
add
pop
sbb
sbb
sbb
pop
stc
loop
add
pop
insl
sbb
or
repnz
sub
add
mulb
inc
lock
fwait
inc
dec
add
jl
add
xchg
add
in
in
add
pushl
xchg
add
fldcw
lods
push
add
jo
je
add
jmp
aad
add
aad
in
add
ja
push
lcall
mov
mov
and
mov
add
ljmp
iret
sub
mov
std
iret
push
jl
mov
sarl
add
sub
xor
mov
xchg
add
adc
dec
add
mov
icebp
jne
aad
add
lret
addr16
dec
add
test
out
pop
call
dec
in
add
add
iret
or
ret
inc
add
popa
dec
add
mov
push
leave
imulb
add
add
mov
sbb
inc
jno
ja
adc
jp
cltd
inc
inc
inc
adc
add
add
fidivl
out
cmp
push
scas
jno
jmp
sbb
test
lea
add
jnp
add
add
ss
add
mov
call
gs
lret
lret
repz
jno
lret
out
jge
mov
test
push
pop
add
or
cmpsl
inc
sbb
cli
fisttps
xchg
jmp
and
pop
ds
cmpsb
aad
xchg
mov
sub
cltd
push
sub
add
and
mov
sub
fistps
or
or
jno
rcrl
add
jnp
gs
leave
enter
ret
xor
mov
mov
sub
ficoms
mov
mov
cmp
sub
dec
push
add
jne
jo
adc
negl
das
fldl2t
outsb
add
inc
jnp
xchg
popa
push
in
pop
lods
icebp
add
inc
add
mov
add
jae
sbb
out
int
enter
xchg
stos
or
xor
das
sub
mov
arpl
add
push
pop
lock
adc
add
mov
ds
inc
add
mov
pushf
mov
pop
add
dec
push
stos
xchg
add
pop
daa
push
iret
pop
pop
pop
mov
out
call
fcmovne
or
push
add
push
jbe
or
sahf
mov
mov
addr16
jmp
add
jmp
int
stos
in
pop
arpl
mov
outsb
add
add
xchg
movsl
test
jae
add
icebp
xchg
sub
flds
sbb
out
add
test
nop
lock
add
add
jbe
inc
fsubrl
mov
xchg
jo
popf
add
aas
or
sub
cmpsb
fs
push
xchg
xor
sub
call
out
into
repz
adc
call
cld
out
add
cld
and
out
add
jecxz
pop
pop
test
add
mov
inc
repz
fistpll
cmc
jb
fimull
add
cmp
add
push
add
int3
into
jo
add
mov
not
daa
cmp
mov
mov
dec
pop
jg
mov
push
or
add
add
add
xchg
pop
out
push
push
scas
fsubl
loop
das
das
aad
xchg
xchg
pop
or
push
mov
add
inc
add
mov
lock
stos
add
test
xchg
dec
add
add
mov
lds
add
or
lahf
jle
jl
movsl
jmp
cmpsb
enter
add
data16
jbe
and
mov
push
outsb
add
fcoms
int
in
cmp
push
add
sub
xchg
sbb
mov
push
lahf
imul
pop
mov
aam
cmp
repz
lods
aaa
mov
adc
popa
int
les
ljmp
nop
aam
add
jne
jbe
add
xchg
data16
push
pop
sarl
fildll
or
push
jno
lcall
jo
add
add
jg
jp
and
frstor
cld
repnz
pop
fidivs
lea
push
daa
mov
dec
jg
lods
ret
out
push
aaa
jne
mov
add
add
jl
int3
fwait
xchg
jae
add
nop
enter
loopne
push
sahf
lods
fcmovu
or
data16
test
sbb
lds
adc
mov
test
sub
sub
mov
add
add
adc
pop
cli
add
ret
jo
popf
jne
and
or
pop
test
pop
and
fidivrl
add
push
inc
mov
mov
inc
xchg
push
out
out
mov
or
xor
mov
push
add
sbb
out
lcall
dec
add
call
cmp
push
lea
inc
mov
stos
dec
add
and
mov
cmp
add
popa
mov
add
jg
xchg
shrb
adcb
mov
add
add
xchg
rclb
lods
jp
xor
fnstcw
add
cltd
mov
add
add
cli
jp
pop
in
cld
addb
shlb
add
repnz
and
and
mov
jae
jne
shll
xchg
adc
popa
mov
add
out
mov
fxch
leave
xchg
pop
push
cli
cmp
push
jmp
shrl
mov
outsl
arpl
and
mov
push
stos
add
enter
in
nop
sbb
sbbl
fwait
pop
mov
int
add
loopne
cmp
mov
aas
popa
or
iret
lcall
stc
pop
les
adc
add
jae
xor
pop
je
dec
pop
pop
dec
arpl
xor
dec
add
xchg
jl
add
sub
aas
mov
and
lds
push
adc
sarb
pushf
mov
mov
dec
add
or
scas
jno
push
sahf
add
ljmp
add
add
mov
out
mov
cmp
in
jg
dec
add
in
mov
mov
and
imul
push
rcrl
and
dec
xor
mov
add
sbb
shll
add
adc
inc
sarb
add
dec
add
push
scas
or
in
or
loop
mov
popa
fmuls
lods
ror
sbb
lret
lret
jbe
cmp
ljmp
add
inc
add
add
mov
shrb
int
icebp
mov
mov
dec
mov
add
and
pop
mov
cmp
xchg
in
and
dec
add
insl
rcrl
cmp
les
ss
cs
xchg
in
add
in
add
shrb
add
xorl
inc
lea
sub
jno
fimuls
nop
shlb
outsl
cmp
push
fiaddl
iret
cs
inc
add
cmc
cmp
imul
out
in
pop
dec
stos
jg
add
pop
inc
mov
mov
add
jno
xlat
aaa
cs
out
add
ljmp
add
sub
mov
fisubrs
add
fstpl
inc
mov
push
and
lfs
cmp
mov
push
and
lock
add
sti
sub
insl
sub
jge
cmpsl
out
pop
loope
add
imul
in
cmc
test
in
mov
pop
xor
je
add
stc
mov
stc
mov
movsl
or
lock
add
ficomps
sub
pop
mov
mov
cmp
rcrb
aad
pop
in
dec
xchg
mov
sahf
enter
bound
rolb
add
scas
cld
aam
fisttpl
xor
scas
cltd
scas
gs
pop
imul
push
addr16
cmp
jno
sub
pop
icebp
fiadds
fwait
add
pop
push
inc
push
push
add
cmp
add
fcmovnu
cmpsl
push
cmpsl
lods
adc
nop
sbb
out
inc
add
add
add
add
nop
arpl
push
shlb
or
repnz
add
adc
mov
dec
inc
add
sti
movsb
jb
add
pop
add
lcall
add
sbb
data16
add
add
fcoml
sub
fcmovbe
xor
lds
out
mov
into
pop
rcll
lods
ret
or
push
add
in
ret
movsl
dec
add
or
add
mov
jl
push
jae
scas
jnp
add
movsb
jg
lods
mov
mov
add
lret
jb
add
in
cld
or
iret
jle
xor
rorb
icebp
movsb
dec
add
jmp
push
sub
and
in
hlt
xor
popf
sbb
lahf
js
add
add
idivb
aas
or
scas
inc
add
pop
ja
push
add
fbstp
sub
orb
shl
lret
mov
or
sub
and
mov
enter
pop
cltd
add
or
dec
std
adc
test
add
repnz
inc
ret
add
je
lea
xorb
fxch
lahf
sahf
adc
add
dec
add
or
push
fsubl
bound
and
dec
add
xchg
icebp
xor
in
add
cmp
fildll
nop
daa
xor
aad
fnstsw
je
loop
xchg
fcomps
add
xchg
jge
ret
dec
add
add
mov
shlb
call
fsubrs
add
inc
push
stc
mov
or
mov
xchg
test
insl
clc
push
cli
pushf
xchg
cs
fstpt
pop
add
sbb
pop
outsb
add
sbb
add
pusha
add
aas
loope
add
pop
movsb
lahf
adc
jnp
add
add
sbb
mov
enter
push
inc
add
sub
cmovp
pop
imul
inc
push
xchg
adc
fistpl
add
dec
and
push
loop
or
lods
mulb
and
testl
mov
add
xchg
adc
jecxz
mov
in
popa
in
movsb
daa
shlb
ror
add
and
movsl
outsb
add
incl
cltd
xchg
iret
jl
icebp
iret
cmp
in
mov
out
cmp
inc
leave
mov
rep
les
popa
cmpsl
insl
insb
add
pop
mov
xchg
jmp
add
or
add
add
push
scas
je
add
data16
int
int
add
scas
out
arpl
stos
mov
roll
add
stos
cmp
int
push
add
sub
imul
repnz
loopne
scas
stc
inc
add
cmp
push
das
or
jmp
les
jnp
cmp
movsb
xchg
cmp
push
push
js
add
lret
add
add
aam
xor
inc
ret
jp
dec
mov
sbb
xchg
outsb
add
jb
add
movsb
dec
add
sbb
and
dec
add
xchg
xchg
sbb
push
mov
cli
jmp
add
add
mov
mov
xor
xor
and
adc
fdivl
mov
notb
push
outsb
add
std
jge
pmullw
test
adc
mov
mov
add
call
stos
or
dec
add
add
add
add
add
mov
test
sbb
xor
add
push
iret
out
push
inc
add
add
sarb
movsb
inc
add
scas
movsl
subb
add
vphaddwq
sbb
insb
add
add
pop
cmpsb
cmp
cmpsb
and
add
popf
mov
lret
outsl
xor
xor
movsl
js
sbb
sbb
lcall
jne
push
mov
jmp
fadd
js
push
dec
push
fwait
sub
mov
mov
jmp
rorb
mov
push
leave
call
test
and
gs
add
mov
repnz
xchg
xchg
jb
add
xchg
fwait
push
bound
push
dec
add
fisubs
pusha
add
add
add
into
pusha
add
pop
dec
add
sbb
add
add
jae
sbb
loop
add
cltd
mov
dec
aaa
xchg
test
mov
mov
js
and
jo
ljmp
sbb
outsl
mov
in
push
inc
xchg
jns
lds
pop
aam
sub
inc
sbb
aas
mov
push
fcmovbe
jl
mov
cmp
popa
sarl
call
popf
adc
orl
aam
pusha
add
xor
jg
mov
adc
rolb
mov
mov
jp
fs
out
sub
add
pop
dec
adc
pop
lahf
xor
loope
sbb
shll
xor
or
lret
xchg
movsb
push
mov
pushf
scas
scas
pop
popf
push
popa
push
add
sbb
fimull
mov
stc
jmp
enter
pop
daa
ret
movsl
sub
imul
in
into
and
repnz
jl
mov
and
out
imul
pop
xchg
scas
dec
add
popf
rcll
sarl
or
mov
mov
pop
jb
add
int3
push
pop
xor
or
out
ljmp
pop
jae
arpl
add
bnd
dec
mov
xchg
sti
pop
andl
mov
push
data16
xchg
negl
test
daa
push
clc
repnz
nop
nop
jae
insb
push
add
sub
add
repnz
nop
nop
jae
add
dec
add
dec
sbb
push
mov
add
or
add
cs
inc
add
addl
in
add
cmp
inc
add
push
mov
leave
nop
jmp
add
push
dec
roll
xor
or
clc
repnz
nop
nop
jae
add
add
test
mov
fistpl
clc
repnz
nop
nop
jae
add
call
add
shrb
fadds
push
clc
repnz
nop
nop
jae
add
dec
add
add
mov
pop
push
mov
xchg
ret
call
add
add
outsb
add
adc
push
mov
xchg
ret
add
add
div
dec
add
push
mov
leave
nop
jmp
add
add
mov
cmp
jne
inc
inc
inc
inc
clc
repnz
nop
nop
jae
or
or
cmp
cmp
sbb
repnz
nop
nop
jae
mov
add
roll
add
lret
call
add
add
repnz
nop
nop
jae
add
add
add
outsb
int
clc
repnz
nop
nop
jae
add
xchg
add
add
add
mov
mov
leave
nop
jmp
hlt
or
aam
add
dec
add
lea
push
mov
leave
nop
jmp
add
add
add
add
add
add
add
clc
repnz
nop
nop
jae
pop
dec
adc
xchg
adc
push
clc
repnz
nop
nop
jae
push
add
into
xor
add
xor
repz
mov
xchg
ret
add
mov
add
add
and
add
add
repnz
nop
nop
jae
add
add
sbb
nop
jmp
add
add
adc
adc
rcll
xchg
ret
or
inc
add
sub
mov
or
mov
add
clc
repnz
nop
nop
jae
pop
adc
leave
add
add
clc
repnz
nop
nop
jae
push
mov
add
incb
lret
je
clc
repnz
nop
nop
jae
push
dec
pop
call
clc
repnz
nop
nop
jae
inc
add
cmc
sub
pop
adc
movsb
or
fstps
leave
nop
jmp
add
add
add
into
add
add
and
dec
call
clc
repnz
nop
nop
jae
or
jbe
cmp
cmp
mov
clc
repnz
nop
nop
jae
add
add
add
add
and
stos
xor
clc
repnz
nop
nop
jae
and
stc
push
mov
add
setnp
repnz
nop
nop
jae
test
add
dec
xor
add
mov
push
mov
xchg
ret
and
hlt
aam
add
cmp
add
cld
nop
nop
jae
add
add
jmp
add
nop
push
mov
leave
nop
jmp
add
test
add
mov
repnz
nop
nop
jae
add
add
adc
dec
add
movsb
clc
repnz
nop
nop
jae
add
add
or
scas
xor
clc
repnz
nop
nop
jae
aam
lret
push
add
add
insb
pop
mov
clc
repnz
nop
nop
jae
add
testl
add
inc
add
xor
pop
add
clc
repnz
nop
nop
jae
add
mov
add
pop
daa
mov
clc
repnz
nop
nop
jae
cmp
add
incb
push
add
and
sahf
addr16
nop
push
mov
leave
nop
jmp
fisttpll
inc
push
jb
pop
popl
clc
repnz
nop
nop
jae
and
dec
sub
add
stc
add
mov
leave
nop
jmp
add
cmp
xchg
add
dec
add
add
push
clc
repnz
nop
nop
jae
add
aam
outsb
movsb
and
fmuls
jg
cmp
nop
push
mov
leave
nop
jmp
add
leave
add
or
add
and
mov
cld
nop
nop
jae
adc
and
add
add
add
add
out
mov
clc
repnz
nop
nop
jae
lret
mov
add
rolb
stc
push
nop
push
mov
leave
nop
jmp
add
dec
add
add
add
cld
nop
nop
jae
add
leave
faddl
add
and
pop
lds
cld
nop
nop
jae
add
scas
add
add
into
xor
push
clc
repnz
nop
nop
jae
push
add
cmp
outsb
or
adc
mov
std
call
nop
jmp
testl
add
gs
repnz
nop
nop
jae
cmp
dec
fnsave
add
adc
add
clc
repnz
nop
nop
jae
add
roll
and
movswl
clc
repnz
nop
nop
jae
roll
cmpsb
jg
out
push
mov
xchg
ret
add
add
add
sub
movsb
dec
dec
and
cmp
cld
nop
nop
jae
add
push
mov
lea
ret
add
cmpsb
add
faddl
sub
hlt
xchg
test
incb
add
insb
add
jne
clc
repnz
nop
nop
jae
stc
add
add
push
repnz
nop
nop
jae
add
add
add
jno
rclb
jmp
movsb
or
add
cmp
add
inc
add
dec
jnp
add
and
adc
xchg
stc
dec
add
inc
rcll
push
nop
push
mov
leave
nop
jmp
roll
scas
add
inc
jbe
rorl
add
mov
xchg
push
inc
add
add
shlb
add
add
inc
add
sub
dec
add
add
add
stos
push
clc
repnz
nop
nop
jae
add
add
add
add
add
push
add
clc
repnz
nop
nop
jae
scas
add
add
cmc
mov
mov
xchg
ret
add
add
add
push
es
clc
repnz
nop
nop
jae
add
mov
add
add
add
in
add
add
clc
repnz
nop
nop
jae
rcl
add
jb
inc
mov
clc
repnz
nop
nop
jae
hlt
roll
cmp
add
mov
fwait
mov
clc
repnz
nop
nop
jae
aam
add
dec
add
clc
repnz
nop
nop
jae
decb
adc
add
add
mull
mov
leave
nop
jmp
add
add
xchg
add
pop
mov
push
mov
xchg
ret
scas
adc
push
and
dec
add
stos
clc
repnz
nop
nop
jae
add
and
faddl
add
add
add
out
push
clc
repnz
nop
nop
jae
sub
xchg
cmc
cmc
add
fdivl
mov
xchg
ret
fsubl
add
dec
call
clc
repnz
nop
nop
jae
cmp
add
add
dec
push
inc
cmp
nop
push
mov
leave
nop
jmp
into
mov
and
add
add
sub
push
mov
xchg
ret
add
lret
and
add
xchg
out
test
and
add
repnz
nop
nop
jae
add
or
call
repnz
nop
nop
jae
add
add
dec
call
add
add
add
nop
jae
add
dec
add
add
add
pushf
cmp
mov
xchg
ret
add
add
add
out
add
push
add
pop
push
mov
xchg
ret
add
mov
xchg
add
jg
aam
into
push
push
nop
push
mov
leave
nop
jmp
leave
add
dec
push
add
and
sub
repnz
nop
nop
jae
xor
add
lcall
cld
nop
nop
jae
add
leave
mov
test
add
nop
push
mov
leave
nop
jmp
cmc
test
add
mov
xchg
ret
dec
inc
test
stc
add
and
in
test
push
mov
leave
nop
jmp
add
leave
add
xchg
popa
fistpl
clc
repnz
nop
nop
jae
pop
or
add
cmc
push
cmp
add
and
clc
repnz
nop
nop
jae
faddl
dec
outsb
add
dec
add
push
clc
repnz
nop
nop
jae
add
add
add
add
mov
clc
repnz
nop
nop
jae
leave
add
incb
add
add
add
clc
repnz
nop
nop
jae
jg
dec
add
test
popf
mov
push
mov
xchg
ret
add
adc
adc
push
mov
xchg
ret
mov
add
add
pop
dec
add
aad
mov
adc
repnz
nop
nop
jae
mov
push
sti
fld1
nop
push
mov
leave
nop
jmp
xchg
out
adc
add
push
xchg
leave
dec
je
clc
repnz
nop
nop
jae
scas
or
leave
xor
testl
xchg
ret
fisttpll
add
add
dec
add
add
add
nop
jmp
fldl
xor
hlt
add
add
jle
xchg
mov
leave
nop
jmp
dec
add
mov
insb
add
incb
lea
inc
push
mov
xchg
ret
add
outsb
add
add
add
mov
pop
nop
push
mov
leave
nop
jmp
add
push
add
or
push
clc
repnz
nop
nop
jae
add
add
add
jbe
into
testl
inc
and
repnz
nop
nop
jae
fstl
add
mov
xor
sar
repnz
nop
nop
jae
sub
cmp
jg
add
mov
add
pop
push
mov
xchg
ret
cmp
sub
add
add
add
add
popa
add
clc
repnz
nop
nop
jae
add
cmpsb
add
dec
cmpsb
incb
add
lahf
pop
inc
add
xchg
scas
add
push
add
adc
nop
add
call
nop
push
mov
leave
nop
jmp
add
pop
add
mov
add
repnz
nop
nop
jae
jbe
lea
add
rolb
push
mov
clc
repnz
nop
nop
jae
add
push
dec
add
add
push
mov
xchg
ret
xchg
add
or
jbe
add
xchg
dec
add
add
inc
jp
add
mov
add
xor
add
add
add
adc
add
add
add
repnz
nop
nop
jae
cmpsb
add
pop
mov
insl
jmp
roll
add
add
push
add
add
shll
orl
nop
nop
jae
add
shl
push
scas
or
add
add
popa
mov
clc
repnz
nop
nop
jae
add
add
xchg
mov
push
mov
xchg
ret
push
call
dec
and
push
sub
nop
jmp
and
dec
and
push
pop
add
cmp
pause
push
mov
leave
nop
jmp
aam
add
add
roll
cmp
or
pop
clc
repnz
nop
nop
jae
add
add
scas
add
add
add
push
mov
xchg
ret
stc
add
add
xor
add
add
add
cs
pop
push
mov
xchg
ret
rcrl
leave
mov
and
add
cmp
push
inc
add
add
add
hlt
testl
pushf
pop
mov
clc
repnz
nop
nop
jae
faddl
add
add
and
pop
push
mov
xchg
ret
add
add
mov
stc
and
out
add
add
push
mov
xchg
ret
out
add
insb
add
orb
cld
nop
nop
jae
add
add
outsb
add
add
add
jo
mov
clc
repnz
nop
nop
jae
movsb
lea
mov
add
pop
cmc
lea
mov
mov
leave
nop
jmp
incb
outsb
or
xchg
add
cmp
repz
push
mov
xchg
ret
jbe
add
add
popa
clc
repnz
nop
nop
jae
add
stc
add
out
add
push
mov
xchg
ret
add
incb
mov
cmc
add
add
xchg
repnz
mov
dec
cmp
push
mov
leave
nop
jmp
add
leave
add
pop
dec
or
in
add
clc
repnz
nop
nop
jae
test
aam
add
add
add
cld
nop
nop
jae
add
add
outsb
add
xor
nop
push
mov
leave
nop
jmp
add
add
add
add
jg
dec
fld1
clc
repnz
nop
nop
jae
add
add
xchg
add
rcl
mov
clc
repnz
nop
nop
jae
dec
add
add
adc
out
add
loop
sbb
push
clc
repnz
nop
nop
jae
add
add
push
leave
dec
sub
fdivr
enter
xor
clc
repnz
nop
nop
jae
add
fcoml
sub
add
mov
push
mov
xchg
ret
add
add
insb
add
or
insb
add
decl
test
add
scas
add
or
add
push
pop
loope
roll
repnz
nop
nop
jae
add
dec
lret
mov
inc
clc
repnz
nop
nop
jae
add
add
and
add
add
inc
add
push
push
mov
xchg
ret
add
gs
mov
add
incb
add
jo
clc
repnz
nop
nop
jae
cmpsb
add
add
add
adc
dec
add
cld
fldl2t
xchg
and
add
add
add
faddl
mov
add
or
add
or
decl
stos
dec
inc
add
add
xor
add
dec
and
add
sub
stos
clc
repnz
nop
nop
jae
add
add
sbb
add
jge
clc
repnz
nop
nop
jae
fldl
lea
leave
add
dec
add
cmc
add
cmpl
cld
nop
nop
jae
adc
add
push
clc
repnz
nop
nop
jae
add
add
add
mov
enter
inc
jp
nop
push
mov
leave
nop
jmp
insb
add
add
call
cmp
add
add
hlt
add
add
add
add
or
into
sti
jb
clc
repnz
nop
nop
jae
leave
cmp
testl
xchg
push
mov
xchg
ret
faddl
pop
cmp
add
scas
add
adc
xchg
push
mov
cld
nop
nop
jae
add
inc
add
incb
add
call
clc
repnz
nop
nop
jae
inc
or
pop
add
add
fistpl
push
mov
xchg
ret
xchg
dec
insb
add
add
inc
add
shrl
push
mov
xchg
ret
and
xor
xchg
sarl
add
add
ret
fwait
clc
repnz
nop
nop
jae
mov
add
add
leave
add
push
sbb
pop
pusha
clc
repnz
nop
nop
jae
mov
scas
add
shll
or
repnz
nop
nop
jae
add
add
add
add
add
pop
mov
clc
repnz
nop
nop
jae
add
dec
movsb
outsb
sub
add
and
add
imul
in
leave
nop
jmp
leave
outsb
scas
add
and
push
mov
xchg
ret
add
push
pop
add
add
stos
nop
push
mov
leave
nop
jmp
add
and
add
and
add
sub
mov
ret
clc
repnz
nop
nop
jae
cmp
add
outsb
or
add
add
clc
repnz
nop
nop
jae
add
add
adc
sbb
add
mov
push
mov
xchg
ret
or
dec
add
jg
add
cmp
nop
jae
add
add
and
outsb
cmp
jg
ret
clc
repnz
nop
nop
jae
xchg
jg
add
add
shr
clc
repnz
nop
nop
jae
and
xchg
call
clc
repnz
nop
nop
jae
xor
add
ficompl
nop
nop
jae
add
sbb
mov
push
mov
xchg
ret
add
add
add
add
incb
inc
into
dec
fistpl
clc
repnz
nop
nop
jae
dec
add
cmp
add
add
cltd
and
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
gs
add
jbe
or
xor
push
mov
xchg
ret
pop
incb
add
hlt
lea
cmp
mov
add
clc
repnz
nop
nop
jae
pop
jbe
add
add
lret
testl
or
repnz
nop
nop
jae
stc
add
dec
scas
fdivl
add
or
mov
clc
repnz
nop
nop
jae
adc
out
pop
inc
add
dec
add
sub
rolb
add
add
arpl
add
add
sbb
cld
nop
nop
jae
call
dec
test
subl
push
mov
xchg
ret
outsb
aam
call
out
add
jge
sbb
push
mov
xchg
ret
add
add
push
add
add
mov
push
mov
xchg
ret
into
mov
add
out
add
push
push
mov
xchg
ret
leave
add
add
dec
add
add
mov
mov
repnz
nop
nop
jae
add
add
out
add
dec
das
cld
clc
repnz
nop
nop
jae
adc
add
xchg
into
sbb
xchg
clc
repnz
nop
nop
jae
dec
jg
mov
aam
stc
iret
repnz
clc
repnz
nop
nop
jae
add
mov
push
add
jae
clc
repnz
nop
nop
jae
add
xchg
add
and
hlt
roll
into
and
gs
clc
repnz
nop
nop
jae
add
add
sub
xor
movsb
mov
out
add
repnz
nop
nop
jae
cmp
add
and
int
call
inc
add
add
mov
add
mov
add
cmp
nop
push
mov
leave
nop
jmp
add
add
and
add
and
add
repnz
nop
nop
jae
add
add
movsb
testl
push
mov
xchg
ret
add
or
add
imull
outsb
add
addb
cmp
ret
add
mov
add
testl
add
add
nop
jmp
add
mov
add
mov
add
repnz
nop
nop
jae
call
push
add
cmc
xor
push
mov
xchg
ret
add
add
adc
lea
cld
nop
nop
jae
add
faddl
cmp
add
add
sbb
clc
repnz
nop
nop
jae
dec
add
pop
xchg
push
jle
sub
nop
nop
jae
cmc
add
leave
push
add
cmc
add
add
aad
jle
push
mov
xchg
ret
test
leave
shlb
add
push
adc
mov
xchg
ret
and
add
add
add
push
clc
repnz
nop
nop
jae
and
add
add
add
aam
lret
push
clc
repnz
nop
nop
jae
add
scas
add
add
add
rolb
add
clc
repnz
nop
nop
jae
add
add
scas
xchg
ror
inc
clc
repnz
nop
nop
jae
out
mov
and
or
leave
lea
insb
or
test
add
add
repnz
nop
nop
jae
call
add
mov
push
mov
xchg
ret
into
leave
add
add
lret
lret
je
clc
repnz
nop
nop
jae
dec
add
push
rolb
les
cld
nop
nop
jae
add
add
add
aam
add
xor
repnz
nop
nop
jae
add
add
add
mov
pop
clc
repnz
nop
nop
jae
add
add
add
test
push
pusha
add
clc
repnz
nop
nop
jae
fldl
incb
roll
add
mov
lcall
in
leave
nop
jmp
fcompl
dec
add
inc
cmp
sbb
adc
add
fucomp
add
cmc
dec
add
hlt
insb
xchg
push
clc
repnz
nop
nop
jae
add
cmpsb
add
aam
add
insb
sub
repnz
nop
nop
jae
faddl
aam
leave
leave
add
add
out
mov
push
mov
leave
nop
jmp
add
jg
add
aas
add
imul
jmp
add
stos
push
nop
push
mov
leave
nop
jmp
or
add
pop
add
mov
add
fst
leave
pop
nop
push
mov
leave
nop
jmp
lret
cmp
add
or
add
add
loope
push
add
add
repnz
nop
nop
jae
push
add
add
adc
xchg
pop
clc
repnz
nop
nop
jae
add
push
scas
add
adc
repnz
nop
nop
jae
add
add
add
movsb
sub
add
mov
lds
and
or
add
add
dec
dec
jbe
xor
rclb
jmp
jbe
fucomp
add
add
fld1
push
mov
xchg
ret
mov
add
add
add
call
mov
leave
nop
jmp
add
and
rolb
add
add
add
cmp
push
clc
repnz
nop
nop
jae
cmp
add
add
add
mov
repnz
nop
nop
jae
add
add
roll
cmp
add
cld
nop
nop
jae
add
mov
movsb
rolb
add
xchg
add
add
inc
add
push
mov
xchg
ret
cmpsb
add
mov
mov
add
fsubs
add
jo
pop
nop
push
mov
leave
nop
jmp
push
add
add
add
gs
add
sti
call
clc
repnz
nop
nop
jae
cmp
pop
fldl
insb
roll
in
xor
jmp
clc
repnz
nop
nop
jae
add
push
add
add
rcrl
nop
push
mov
leave
nop
jmp
add
movsb
add
add
add
sbb
add
push
mov
xchg
ret
scas
leave
inc
leave
and
add
movsb
rolb
add
mov
clc
repnz
nop
nop
jae
outsb
add
and
pusha
nop
push
mov
leave
nop
jmp
add
xchg
or
rolb
loopne
push
mov
xchg
ret
add
add
and
add
call
inc
add
add
rolb
mov
add
shlb
cmp
nop
nop
jae
add
add
stc
and
push
sbb
push
mov
xchg
ret
aam
cmp
into
add
dec
rorl
push
and
push
mov
xchg
ret
adc
notl
incb
add
add
mov
nop
push
mov
leave
nop
jmp
push
add
add
add
add
insb
add
mov
mov
test
add
nop
push
mov
leave
nop
jmp
add
aam
sub
roll
enter
nop
nop
jae
add
adc
incb
hlt
add
jl
and
sub
inc
add
test
add
cmp
fdivrl
add
aam
inc
add
add
pop
dec
lea
add
inc
add
mov
leave
nop
jmp
add
and
and
cld
pop
jmp
add
add
add
add
mov
add
in
leave
nop
jmp
inc
add
movsb
add
pop
add
add
shrl
leave
nop
jmp
add
fldl
add
hlt
add
and
jns
outsl
arpl
add
nop
jmp
cmpsb
push
cmc
dec
mov
outsl
inc
add
xchg
add
xor
sar
mov
leave
add
push
push
mov
xchg
ret
xor
roll
add
xor
add
add
leave
mov
clc
repnz
nop
nop
jae
or
add
add
test
std
clc
repnz
nop
nop
jae
add
mov
pop
add
dec
ret
rep
push
mov
xchg
ret
add
add
push
add
gs
add
push
nop
push
mov
leave
nop
jmp
add
add
push
push
mov
add
xor
add
add
lahf
add
stos
add
and
nop
jo
fwait
push
mov
xchg
ret
movsb
add
stc
cmp
add
dec
xchg
leave
jbe
cwtl
mov
mov
aas
add
xor
jge
imul
push
clc
repnz
nop
nop
jae
adc
add
push
or
lock
fistl
mov
cmp
ret
add
add
dec
add
add
and
jb
outsl
push
nop
push
mov
leave
nop
jmp
pop
add
add
add
xchg
mov
inc
add
mov
pop
inc
add
add
scas
add
call
cmp
mov
nop
push
mov
leave
nop
jmp
add
hlt
add
mov
mov
lea
clc
repnz
nop
nop
jae
add
add
fdiv
add
add
sbb
sar
cld
nop
nop
jae
push
add
and
add
sbb
repnz
nop
nop
jae
sbb
add
or
add
pop
push
inc
add
add
fisttpll
idiv
rclb
nop
nop
jae
dec
and
inc
insb
add
add
dec
fnstsw
pop
push
clc
repnz
nop
nop
jae
add
into
testl
pop
add
add
rorl
repnz
nop
nop
jae
add
test
add
push
mov
nop
push
mov
leave
nop
jmp
jbe
gs
aam
jbe
add
add
dec
add
clc
repnz
nop
nop
jae
mov
mov
add
gs
add
call
clc
repnz
nop
nop
jae
push
aam
push
inc
add
add
clc
repnz
nop
nop
jae
cmc
add
dec
add
incb
leave
inc
sub
push
mov
xchg
ret
into
incb
add
into
add
cmp
cld
nop
nop
jae
add
add
add
push
incb
add
push
add
daa
push
clc
repnz
nop
nop
jae
add
adc
test
push
clc
repnz
nop
nop
jae
add
add
gs
dec
into
roll
shr
nop
push
mov
leave
nop
jmp
xchg
dec
shlb
adc
decb
pop
cmp
push
mov
leave
nop
jmp
add
add
dec
cmc
jbe
dec
add
sub
jbe
xor
clc
repnz
nop
nop
jae
into
add
dec
fldl
add
add
push
clc
repnz
nop
nop
jae
or
xchg
add
add
add
mov
jmp
nop
nop
jae
add
out
dec
mov
add
add
cmp
loop
xchg
cmp
leave
add
add
add
add
mov
add
push
or
nop
push
mov
leave
nop
jmp
or
rolb
dec
dec
or
call
fcompl
cld
nop
nop
jae
rorb
add
out
add
lret
add
add
cmpl
nop
push
mov
leave
nop
jmp
add
add
test
je
nop
push
mov
leave
nop
jmp
add
add
scas
add
cmp
repnz
nop
nop
jae
xchg
movsb
add
push
add
rcll
nop
jae
and
scas
test
lea
adc
push
mov
xchg
ret
out
add
lret
adc
sub
add
sub
in
stc
mov
clc
repnz
nop
nop
jae
or
inc
scas
adc
aam
mov
push
mov
xchg
ret
jg
rolb
cmp
dec
add
adc
clc
repnz
nop
nop
jae
call
add
add
add
add
cld
nop
nop
jae
mov
add
add
roll
add
nop
push
mov
leave
nop
jmp
mov
add
add
add
add
push
je
clc
repnz
nop
nop
jae
add
dec
movsb
add
js
add
mov
xchg
ret
sub
add
faddl
add
aam
add
mov
add
repnz
nop
nop
jae
dec
add
add
add
add
mov
dec
cmp
repnz
nop
nop
jae
scas
add
push
movb
push
mov
leave
nop
jmp
dec
add
sbb
adc
sbb
clc
repnz
nop
nop
jae
add
adc
add
rolb
jg
push
push
mov
xchg
ret
add
xchg
dec
add
add
imul
clc
repnz
nop
nop
jae
push
add
popa
rep
nop
push
mov
leave
nop
jmp
xchg
add
add
and
xchg
add
movl
cld
nop
nop
jae
dec
out
add
add
add
insb
enter
add
clc
repnz
nop
nop
jae
add
add
incb
or
add
mov
in
inc
add
adc
fcompl
into
incb
add
xor
cld
nop
nop
jae
add
add
add
movsl
mov
nop
push
mov
leave
nop
jmp
cmpsb
dec
add
cmp
sub
call
jne
clc
repnz
nop
nop
jae
add
pop
out
cmp
lret
in
xor
push
loopne
mov
xchg
ret
jbe
push
xor
add
jae
add
push
mov
xchg
ret
add
add
adc
and
jp
pop
nop
push
mov
leave
nop
jmp
push
add
add
xor
adc
mov
leave
nop
jmp
cmc
add
out
add
dec
add
push
sbb
sbb
nop
push
mov
leave
nop
jmp
fsubrl
fldl
add
lea
repnz
nop
nop
jae
test
mov
sub
add
loopne
clc
repnz
nop
nop
jae
add
cmc
testl
mov
bound
add
add
sbb
add
pop
roll
and
or
xor
decb
add
pop
clc
repnz
nop
nop
jae
into
add
add
add
add
test
clc
repnz
nop
nop
jae
cmpsb
leave
inc
lret
lea
add
jbe
outsl
mov
clc
repnz
nop
nop
jae
add
add
sbb
add
add
mov
nop
nop
jae
fmull
xor
xor
cmpsb
arpl
mov
xchg
ret
sbb
add
cmp
or
add
add
inc
lods
add
add
add
sub
xor
adc
clc
repnz
nop
nop
jae
dec
and
mov
add
add
xlat
mov
clc
repnz
nop
nop
jae
add
add
push
add
jae
clc
repnz
nop
nop
jae
outsb
add
push
add
movsb
push
add
add
nop
jmp
add
add
inc
aam
xor
jecxz
inc
add
add
aam
add
aam
add
jl
add
push
mov
xchg
ret
push
hlt
add
dec
add
outsb
add
push
mov
xchg
ret
test
inc
test
add
add
nop
push
mov
leave
nop
jmp
and
cmpsb
add
push
push
add
add
sbb
push
mov
xchg
ret
mov
out
add
add
mov
push
push
mov
xchg
ret
add
sbb
add
add
add
stc
add
push
clc
repnz
nop
nop
jae
push
add
add
add
arpl
sub
repnz
nop
nop
jae
sbb
jbe
add
add
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
add
outsb
add
mov
leave
add
add
add
nop
push
mov
leave
nop
jmp
add
add
add
add
add
mulb
push
add
call
nop
jae
add
testl
dec
add
pop
pop
add
nop
push
mov
leave
nop
jmp
add
push
add
clc
repnz
nop
nop
jae
push
outsb
or
add
pop
dec
push
clc
repnz
nop
nop
jae
fsubl
add
dec
mov
dec
add
jb
push
mov
xchg
ret
add
xchg
add
add
incb
xchg
xchg
adc
add
repnz
nop
nop
jae
add
mov
lcall
add
clc
repnz
nop
nop
jae
add
cmc
add
test
call
nop
nop
jae
add
incb
dec
out
push
push
push
mov
xchg
ret
and
add
dec
call
add
aas
imul
clc
repnz
nop
nop
jae
add
add
jbe
add
add
add
nop
push
mov
leave
nop
jmp
add
add
lods
mov
sub
and
cld
nop
nop
jae
add
shll
stos
cld
cmpb
clc
repnz
nop
nop
jae
fcoml
add
out
add
fsubl
add
call
mov
xchg
ret
out
dec
add
dec
scas
add
add
or
outsb
add
xbegin
jae
add
insb
add
jg
add
add
lods
lea
inc
push
inc
add
dec
fldl
xor
adc
aam
add
repz
clc
repnz
nop
nop
jae
or
or
outsb
add
add
push
pushl
movsb
add
scas
leave
adc
sbb
add
add
add
and
inc
add
sar
mov
xchg
ret
jbe
add
add
incb
outsb
add
add
cmpl
mov
leave
nop
jmp
add
add
add
jbe
xchg
add
nop
push
mov
leave
nop
jmp
leave
add
outsb
stc
add
lret
dec
mov
adcb
mov
xchg
ret
or
dec
jbe
add
and
add
incb
adc
mov
xchg
ret
roll
or
add
movsb
add
push
add
clc
repnz
nop
nop
jae
roll
lea
call
add
add
rclb
adc
xchg
ret
add
add
dec
pop
add
and
mov
fistpl
clc
repnz
nop
nop
jae
add
xchg
pop
add
mov
clc
repnz
nop
nop
jae
dec
cmp
stc
add
add
add
cld
nop
nop
jae
add
leave
add
add
call
jne
clc
repnz
nop
nop
jae
adc
add
leave
add
pop
push
mov
xchg
ret
leave
add
add
push
add
add
and
cmp
push
clc
repnz
nop
nop
jae
lea
push
dec
add
je
nop
push
mov
leave
nop
jmp
outsb
add
add
aam
jne
clc
repnz
nop
nop
jae
push
hlt
add
mov
nop
push
mov
leave
nop
jmp
fisttpll
stc
into
add
add
mov
dec
cmp
nop
push
mov
leave
nop
jmp
test
add
push
enter
inc
inc
add
nop
jmp
mov
add
add
mov
add
movswl
clc
repnz
nop
nop
jae
add
into
add
mov
add
clc
repnz
nop
nop
jae
stc
add
stc
add
pop
in
pop
mov
push
mov
xchg
ret
add
push
fldl
add
add
add
nop
nop
jae
mov
add
mov
sub
add
xchg
js
add
scas
movsb
aam
test
hlt
dec
cmpsb
hlt
jns
enter
nop
nop
jae
add
jg
add
cmp
push
loop
mov
push
mov
xchg
ret
add
add
sub
aam
leave
and
inc
pop
nop
push
mov
leave
nop
jmp
inc
add
insb
testl
sbb
notb
xchg
xor
push
mov
xchg
ret
out
sub
inc
add
mov
shlb
or
sbb
mov
xchg
ret
add
cmp
add
add
or
cmpsb
cmp
xchg
xchg
push
mov
xchg
ret
or
or
pop
add
cltd
div
nop
push
mov
leave
nop
jmp
add
add
mov
add
clc
shlb
dec
jne
jmp
add
add
add
test
add
add
das
add
clc
repnz
nop
nop
jae
add
add
mov
nop
push
mov
leave
nop
jmp
call
add
add
adc
add
call
aam
push
add
mov
add
add
add
or
add
clc
repnz
nop
nop
jae
add
or
sbb
add
mov
xor
clc
repnz
nop
nop
jae
jbe
add
add
dec
add
dec
jmp
push
mov
xchg
ret
xor
add
add
xor
add
add
inc
fld1
clc
repnz
nop
nop
jae
leave
push
adc
add
add
add
test
repnz
nop
nop
jae
add
add
adc
jbe
pop
nop
push
mov
leave
nop
jmp
or
roll
xor
pop
add
add
sbb
add
mov
push
mov
xchg
ret
gs
add
into
add
mov
xchg
cld
clc
repnz
nop
nop
jae
add
add
add
add
push
add
shlb
aad
inc
add
mov
add
dec
adc
jne
nop
push
mov
leave
nop
jmp
add
add
dec
add
add
mov
clc
repnz
nop
nop
jae
add
mov
leave
add
iret
mov
clc
repnz
nop
nop
jae
hlt
pop
mov
xchg
add
add
pop
clc
repnz
nop
nop
jae
and
add
add
mov
adc
xor
nop
nop
jae
add
add
add
add
test
jmp
out
add
and
and
shll
add
xor
cmpsl
call
clc
repnz
nop
nop
jae
rcr
add
jg
add
dec
add
ret
push
mov
leave
nop
jmp
rolb
add
adc
add
adc
loop
xor
clc
repnz
nop
nop
jae
aam
add
pop
and
and
rclb
cld
nop
nop
jae
lret
add
add
push
leave
adc
rcl
push
push
mov
xchg
ret
add
incb
push
add
add
sbb
incl
add
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
add
aam
add
fldl
imul
jmp
add
add
add
incb
add
add
push
mov
clc
repnz
nop
nop
jae
stc
add
add
add
add
cmp
add
clc
repnz
nop
nop
jae
add
add
adc
add
and
and
pop
clc
repnz
nop
nop
jae
dec
leave
and
add
sub
incb
push
mov
jae
repnz
nop
nop
jae
outsb
add
or
add
xorb
sbb
stos
mov
push
mov
leave
nop
jmp
push
add
mov
add
push
add
pop
or
dec
add
negb
mov
leave
nop
jmp
roll
add
add
rcll
add
clc
repnz
nop
nop
jae
and
add
add
add
test
clc
repnz
nop
nop
jae
dec
add
adc
outsb
add
div
clc
repnz
nop
nop
jae
add
jbe
add
leave
add
add
mov
sub
repnz
nop
nop
jae
aam
jbe
add
and
or
clc
repnz
nop
nop
jae
add
add
and
add
mov
mov
clc
repnz
nop
nop
jae
add
fsubrl
pushl
push
mov
xchg
ret
add
cmc
add
cmpsb
and
add
test
nop
push
mov
leave
nop
jmp
add
add
leave
leave
add
push
push
mov
xchg
ret
movsb
add
adc
stc
add
add
sub
dec
add
sbb
mov
add
sub
mov
nop
nop
jae
rolb
cmp
leave
add
add
mov
add
add
and
add
add
jb
data16
or
mov
jl
xor
jo
inc
add
cmp
pop
leave
add
and
push
push
mov
xchg
ret
push
add
mov
jg
add
enter
add
clc
repnz
nop
nop
jae
jg
add
add
leave
movsb
add
sbb
push
clc
repnz
nop
nop
jae
add
add
adc
add
xchg
add
xchg
add
push
mov
xchg
ret
into
push
add
inc
add
pop
clc
repnz
nop
nop
jae
add
cmpsb
add
xchg
mov
pop
clc
repnz
nop
nop
jae
add
add
aam
add
add
clc
repnz
nop
nop
jae
add
pop
pop
push
hlt
or
pop
in
pop
adc
nop
jmp
add
add
or
xor
push
mov
xchg
ret
add
add
add
push
pop
add
add
mov
nop
push
mov
leave
nop
jmp
add
push
adc
xchg
or
andb
leave
nop
jmp
add
movsb
or
rolb
add
nop
push
mov
leave
nop
jmp
add
add
add
push
mov
xchg
ret
adc
add
add
add
add
xor
clc
repnz
nop
nop
jae
add
hlt
add
push
add
mov
add
clc
repnz
nop
nop
jae
cmc
add
add
xchg
into
add
add
add
xor
mov
clc
repnz
nop
nop
jae
sbb
jbe
add
add
notl
in
fld1
nop
push
mov
leave
nop
jmp
cmp
and
push
decb
push
add
nop
nop
jae
add
lret
mov
fldl
add
lea
or
mov
xchg
ret
add
add
jbe
cmp
xor
clc
repnz
nop
nop
jae
add
add
add
add
roll
pop
dec
add
out
lea
nop
push
mov
leave
nop
jmp
add
or
movsb
test
dec
add
push
mov
xchg
ret
add
add
roll
dec
add
lret
dec
add
cld
add
test
in
leave
nop
jmp
add
mov
add
dec
add
add
push
push
mov
add
xlat
cmpsl
outsb
div
mov
add
add
clc
repnz
nop
nop
jae
adc
cmpsb
add
add
dec
sarb
repnz
nop
nop
jae
add
inc
dec
add
xchg
divl
movsl
push
push
mov
xchg
ret
insb
add
dec
leave
add
add
pop
push
mov
xchg
ret
or
xchg
leave
or
and
lret
out
aam
push
mov
xchg
add
push
movsl
and
mov
add
add
in
add
sub
sub
gs
clc
repnz
nop
nop
jae
leave
add
add
add
fdivrl
lret
nop
push
mov
leave
nop
jmp
add
leave
add
or
or
cmp
nop
nop
jae
leave
add
leave
add
out
add
cmpsl
add
clc
repnz
nop
nop
jae
add
outsb
add
add
add
jae
leave
nop
push
mov
leave
nop
jmp
add
add
add
sbb
insb
out
clc
repnz
nop
nop
jae
add
mov
add
add
or
add
repnz
nop
nop
jae
sbb
into
add
dec
leave
push
mov
clc
repnz
nop
nop
jae
and
test
adc
clc
repnz
nop
nop
jae
call
push
add
lds
mov
adc
repnz
nop
nop
jae
add
inc
lret
add
sub
movzwl
clc
repnz
nop
nop
jae
add
or
xor
sub
addr16
clc
repnz
nop
nop
jae
cmp
call
dec
adc
mov
leave
nop
jmp
adc
add
add
leave
sbb
mov
push
mov
xchg
ret
insb
outsb
add
push
outsb
add
clc
push
push
jbe
add
aad
add
repnz
nop
nop
jae
adc
add
add
add
add
mov
push
mov
xchg
ret
add
and
add
add
mov
cmp
ret
add
movsb
add
add
gs
hlt
cmp
repnz
nop
nop
jae
add
add
inc
adc
add
lret
clc
repnz
nop
nop
jae
or
add
mov
nop
push
mov
leave
nop
jmp
lea
add
add
add
add
out
push
aam
fistpl
push
mov
xchg
ret
or
hlt
add
add
add
add
add
cld
nop
nop
jae
add
fmull
mov
dec
mov
not
push
mov
xchg
ret
add
insb
push
into
into
add
add
frstor
cwtl
or
fld1
push
mov
xchg
ret
add
mull
aam
stc
add
fld1
clc
repnz
nop
nop
jae
call
add
add
and
dec
sub
test
add
add
adc
add
test
cmp
lret
add
adc
add
pop
add
or
and
add
add
clc
repnz
nop
nop
jae
dec
fmull
sub
add
add
test
nop
nop
jae
or
insb
faddl
xchg
faddl
fcoml
stos
clc
repnz
nop
nop
jae
add
idivl
add
add
movsb
mov
nop
push
mov
leave
nop
jmp
call
movsb
stc
add
stc
dec
test
push
mov
xchg
ret
add
incb
and
dec
add
repnz
nop
nop
jae
dec
add
incb
gs
stc
pop
add
push
mov
xchg
ret
lret
cmc
xor
insb
faddl
xchg
add
add
add
repnz
nop
nop
jae
gs
cmc
faddl
add
cltd
mov
clc
repnz
nop
nop
jae
add
notl
add
and
mov
xchg
ret
add
add
add
add
add
add
clc
repnz
nop
nop
jae
out
cmc
add
add
and
add
add
lods
pusha
inc
add
add
add
mov
clc
repnz
nop
nop
jae
and
add
ror
push
lret
clc
repnz
nop
nop
jae
add
scas
add
add
xchg
out
sub
out
push
push
mov
xchg
ret
mov
add
add
xchg
hlt
xchg
shr
nop
push
mov
leave
nop
jmp
adc
add
add
add
test
push
mov
leave
nop
jmp
adc
cmp
mov
inc
add
lea
add
or
adc
add
repnz
nop
nop
jae
add
add
add
testl
hlt
aaa
mov
clc
repnz
nop
nop
jae
add
push
out
jg
dec
sub
daa
mov
clc
repnz
nop
nop
jae
add
add
add
test
push
mov
leave
nop
jmp
xchg
add
xor
add
add
sbb
push
mov
out
add
add
mov
cmp
filds
aad
lea
out
cmp
int3
loop
clc
repnz
nop
nop
jae
rolb
jbe
add
mov
jmp
stc
and
roll
add
add
add
add
out
mov
cld
nop
nop
jae
scas
add
fldl
testl
cmpsb
test
nop
jae
call
add
out
add
add
movb
clc
repnz
nop
nop
jae
leave
add
add
add
repnz
nop
nop
jae
xchg
gs
add
jbe
out
insb
js
sbb
nop
nop
jae
xchg
add
incb
dec
add
lcall
nop
nop
jae
cmp
add
shl
movsb
add
xchg
mov
leave
nop
jmp
insb
dec
add
stc
add
add
nop
nop
jae
cmp
xchg
add
xor
and
jg
leave
sub
repnz
nop
nop
jae
add
add
sub
add
add
imul
clc
repnz
nop
nop
jae
pop
add
add
cmp
add
fistpl
clc
repnz
nop
nop
jae
add
dec
ror
add
add
clc
repnz
nop
nop
jae
gs
jg
incb
add
cmp
clc
repnz
nop
nop
jae
rcl
xor
cmpsb
adc
add
mov
movsb
push
mov
xchg
ret
pop
sub
add
add
lret
cmpsb
add
jno
clc
repnz
nop
nop
jae
add
shl
add
add
add
clc
repnz
nop
nop
jae
cmp
add
add
pushl
clc
repnz
nop
nop
jae
add
fsubl
add
add
xor
popa
mov
clc
repnz
nop
nop
jae
dec
add
add
add
rcr
dec
and
clc
repnz
nop
nop
jae
mov
add
call
clc
repnz
nop
nop
jae
add
add
mov
add
add
test
push
clc
repnz
nop
nop
jae
add
idivl
add
mov
xchg
ret
leave
add
add
and
add
dec
hlt
xchg
add
flds
cld
nop
nop
jae
and
add
add
aam
test
repnz
nop
nop
jae
add
stc
or
movsb
mov
adc
add
clc
repnz
nop
nop
jae
pop
xor
mov
jbe
lss
nop
push
mov
leave
nop
jmp
leave
push
push
ficompl
cld
nop
nop
jae
leave
add
or
add
add
add
add
lock
push
clc
repnz
nop
nop
jae
add
mov
xchg
clc
repnz
nop
nop
jae
and
or
call
add
push
mov
xchg
ret
add
add
add
faddl
iret
test
nop
push
mov
leave
nop
jmp
xor
cmc
add
call
dec
add
mov
push
inc
add
cmpsb
add
add
dec
add
add
add
fistpl
push
mov
xchg
ret
mov
leave
add
fldl
xchg
adc
add
call
nop
jmp
add
mov
add
add
ja
clc
repnz
nop
nop
jae
xor
aam
add
stc
add
add
test
nop
push
mov
leave
nop
jmp
dec
mov
movsb
incb
pop
cmp
add
mov
push
mov
xchg
ret
add
add
add
inc
fisttpll
dec
push
aaa
add
nop
push
mov
leave
nop
jmp
add
adc
mov
add
add
clc
repnz
nop
nop
jae
mov
add
sub
call
stc
xor
clc
repnz
nop
nop
jae
push
cmpsb
add
add
push
push
mov
xchg
ret
out
lret
rcl
or
stc
xchg
add
adc
jge
add
dec
add
add
push
leave
dec
or
add
enter
push
push
mov
leave
nop
jmp
and
mov
add
cmc
enter
push
mov
xchg
ret
add
add
insb
add
out
mov
sub
clc
repnz
nop
nop
jae
add
dec
add
add
or
add
clc
repnz
nop
nop
jae
mov
mov
dec
add
test
clc
repnz
nop
nop
jae
add
add
add
add
pop
xchg
clc
repnz
nop
nop
jae
add
jbe
jbe
mov
call
clc
repnz
nop
nop
jae
outsb
and
test
add
out
push
into
daa
push
clc
repnz
nop
nop
jae
imull
add
and
add
dec
push
mov
xchg
ret
add
add
add
negl
add
add
inc
add
mov
push
mov
xchg
ret
leave
stc
movsb
jbe
or
add
push
clc
repnz
nop
nop
jae
xor
and
add
cmp
je
add
clc
repnz
nop
nop
jae
add
add
inc
and
outsl
sub
push
mov
xchg
ret
dec
fldl
add
pop
gs
shlb
js
mov
xchg
ret
aam
mov
fdivl
add
add
mov
repnz
nop
nop
jae
add
pop
stc
cmp
add
clc
repnz
nop
nop
jae
lret
shll
add
add
dec
or
rorl
mov
xchg
ret
leave
outsb
or
add
add
pushl
push
mov
xchg
ret
xchg
dec
add
adc
mov
nop
nop
jae
add
add
add
jbe
add
jne
push
mov
xchg
ret
add
add
movsb
cmp
sti
push
mov
xchg
ret
or
add
add
or
add
add
clc
repnz
nop
nop
jae
cmc
add
xor
add
pop
cmp
nop
push
mov
leave
nop
jmp
push
add
mov
add
clc
repnz
nop
nop
jae
add
or
hlt
add
add
push
mov
xchg
ret
add
scas
mov
add
dec
cmpsb
scas
add
call
adc
add
clc
repnz
nop
nop
jae
add
dec
and
add
lret
add
repnz
nop
nop
jae
add
mov
and
add
jg
cmp
nop
push
mov
leave
nop
jmp
add
add
aam
push
cld
nop
nop
jae
add
add
cmp
incb
add
hlt
add
clc
repnz
nop
nop
jae
add
test
add
add
into
pop
clc
repnz
nop
nop
jae
add
mov
mov
add
cmp
push
mov
leave
nop
jmp
add
add
hlt
cmpsb
stc
roll
gs
clc
repnz
nop
nop
jae
incb
add
add
jbe
add
inc
and
clc
repnz
nop
nop
jae
add
add
push
lret
fldl
add
push
clc
repnz
nop
nop
jae
add
add
add
add
mov
clc
repnz
nop
nop
jae
dec
add
add
add
add
fdivr
repnz
nop
nop
jae
cmp
fsubl
xchg
dec
add
repnz
nop
nop
jae
add
leave
leave
add
push
or
shl
push
mov
xchg
ret
add
add
test
stos
movsb
pop
push
push
mov
xchg
ret
stc
stc
add
inc
call
outsb
fldl
fistpl
nop
jae
add
dec
inc
add
shrl
movsb
aam
dec
mov
nop
push
mov
leave
nop
jmp
lret
adc
add
inc
add
push
mov
add
clc
repnz
nop
nop
jae
add
add
add
push
mov
xchg
ret
rcrb
add
xchg
leave
add
xchg
adc
pop
inc
add
add
add
add
mov
jne
clc
repnz
nop
nop
jae
add
add
and
jno
cli
clc
repnz
nop
nop
jae
cmp
and
add
dec
inc
add
in
leave
nop
jmp
leave
xchg
leave
mov
inc
scas
jbe
rolb
add
test
fdivr
clc
repnz
nop
nop
jae
inc
fldl
add
dec
lea
add
clc
repnz
nop
nop
jae
add
add
add
call
mov
xchg
ret
cmp
add
add
insb
add
mov
add
push
mov
leave
nop
jmp
cmpsb
add
cmpsb
cmpsb
mov
rcl
pop
out
gs
xor
clc
repnz
nop
nop
jae
insb
add
add
cmc
dec
add
clc
repnz
nop
nop
jae
add
add
imull
mov
jmp
nop
nop
jae
shl
lret
cmp
add
not
and
pop
push
mov
clc
repnz
nop
nop
jae
add
add
add
out
add
out
pop
lea
clc
repnz
nop
nop
jae
add
and
roll
adc
xchg
add
add
push
mov
xchg
ret
push
push
into
scas
mov
gs
dec
add
test
clc
repnz
nop
nop
jae
add
cmc
xchg
pushf
sub
lods
adc
test
nop
push
mov
leave
nop
jmp
movsb
dec
scas
add
add
pop
ljmp
nop
jae
add
add
sbb
xor
fcompl
insb
leave
push
push
mov
xchg
ret
add
testl
call
add
dec
add
add
repnz
nop
nop
jae
cmpsb
push
add
push
push
mov
xchg
ret
and
or
leave
sarb
pop
call
clc
repnz
nop
nop
jae
rolb
cmp
add
add
jg
out
pop
nop
push
mov
leave
nop
jmp
xchg
out
add
outsb
pop
add
clc
repnz
nop
nop
jae
add
roll
cmc
add
and
faddl
pop
add
nop
push
mov
leave
nop
jmp
into
mov
outsb
add
lea
cmpsb
add
push
mov
xchg
ret
add
and
xchg
add
dec
add
repnz
nop
nop
jae
dec
testl
out
cmpsb
add
mov
push
mov
xchg
ret
leave
leave
xchg
add
or
push
add
dec
decl
clc
repnz
nop
nop
jae
dec
add
add
and
sarl
clc
repnz
nop
nop
jae
add
dec
mov
std
add
clc
repnz
nop
nop
jae
lret
hlt
add
add
mov
add
mov
clc
repnz
nop
nop
jae
cmp
add
lea
dec
dec
add
fld1
clc
repnz
nop
nop
jae
gs
or
rolb
add
add
jne
sar
cld
nop
nop
jae
add
dec
add
add
add
je
push
push
mov
xchg
ret
add
push
add
xor
repnz
nop
nop
jae
add
add
add
fwait
push
mov
xchg
ret
add
add
leave
add
and
add
imul
cld
nop
nop
jae
add
add
cmp
add
add
add
add
push
mov
xchg
ret
add
add
test
das
push
clc
repnz
nop
nop
jae
dec
and
stc
add
sub
jecxz
inc
adc
nop
jmp
faddl
add
mov
add
add
lods
aam
pusha
push
mov
xchg
ret
add
add
roll
out
fadd
mov
push
mov
xchg
ret
xchg
lea
add
add
add
stc
mov
nop
push
mov
leave
nop
jmp
add
add
add
push
dec
inc
clc
repnz
nop
nop
jae
pop
add
lea
adc
add
stos
clc
repnz
nop
nop
jae
add
add
add
add
add
add
fwait
clc
repnz
nop
nop
jae
jbe
add
add
and
add
ss
push
ja
clc
repnz
nop
nop
jae
aam
add
add
iret
testl
nop
push
mov
leave
nop
jmp
sbb
inc
add
ds
call
dec
push
push
add
add
add
in
add
add
add
cmp
add
stos
add
add
nop
nop
jae
add
add
add
mov
or
in
add
jbe
add
add
outsl
jo
aaa
jl
cli
pop
mov
ja
popf
xor
dec
add
push
out
add
add
xchg
pushf
sbb
sub
xor
add
or
pop
inc
push
sub
cmp
or
popf
scas
notl
aas
add
imul
lods
in
add
jp
add
in
ret
lods
xor
pop
jae
mov
and
and
sarb
add
pop
mov
loope
mov
mov
pop
aad
dec
es
imulb
or
dec
add
imulb
roll
shll
jo
xlat
mov
hlt
mov
xchg
xchg
fstpt
subb
aaa
adc
jo
test
loopne
add
add
add
push
fiadds
add
adc
leave
in
iret
mov
test
fcmovbe
jne
add
std
add
leave
dec
dec
add
mov
mov
add
xlat
jl
rcr
sahf
addr16
adc
testl
fsubrp
sub
inc
add
push
mov
or
pop
sbb
add
orl
decl
and
repz
sbb
mov
mov
mov
push
scas
ret
jmp
cmp
out
sbb
shlb
jp
cmp
add
cli
jg
dec
add
add
insb
add
sub
jecxz
add
and
lahf
cli
addl
stos
aad
jp
add
mov
lock
sbb
shlb
adc
add
mov
jl
jne
add
add
movsb
sub
cltd
cli
pop
ljmp
or
cltd
movsl
jmp
in
aas
ljmp
popl
add
movsl
scas
cwtl
adc
dec
add
pusha
add
add
push
fcomps
sbb
sbb
add
das
inc
jno
push
ljmp
ja
sub
sub
aam
fldl
movsb
mov
jo
fdivrl
pop
jmp
jp,pt
add
mov
test
pop
or
inc
mov
out
jg
dec
insl
xchg
fucomip
incb
shll
pop
imul
xchg
fidivrl
add
sub
add
add
xor
add
xchg
lret
cmp
cmpsl
test
stc
sub
xor
inc
add
sbb
pop
sub
sbbl
add
pop
loope
cmpsl
hlt
mov
and
repz
add
std
leave
mov
add
cmp
mov
jg
add
sbb
pop
mov
xor
push
pop
clc
jb
cltd
aad
push
and
lret
pop
mov
or
jecxz
aaa
sarl
pop
gs
add
or
push
je
inc
add
jp
loop
cmpsb
data16
movsl
mov
add
iret
mov
repnz
xor
xchg
mov
push
sbb
ss
add
pop
inc
add
mov
sbb
iret
into
fdivr
push
jle
add
lock
sub
ljmp
adc
dec
xchg
sbb
mov
xor
add
popa
test
mov
aam
add
or
nop
xor
add
pop
nop
aad
shrl
add
add
mov
popa
mov
add
sub
jmp
add
inc
cltd
mov
shl
jp
pop
and
mov
adc
enter
mov
add
pop
jns
inc
add
add
cmp
cmp
pop
xchg
push
popa
mov
pop
jp
mov
xchg
call
mul
fwait
mov
fstps
fwait
and
add
sub
mov
test
push
ds
jl
add
rcr
inc
lods
push
and
loop
bound
fwait
xchg
pushf
ror
or
mov
cltd
fstp
and
cwtl
xor
pop
cltd
test
jmp
cmp
notl
fildll
add
loopne
sbb
dec
cmpsl
fisttpl
lods
jle
dec
add
inc
add
and
xor
jns
add
add
jl
je
test
jg
push
repnz
out
pop
or
es
pop
fmul
xchg
push
pop
frstor
cli
cmpsb
dec
add
push
add
add
jle
adc
jb
cmp
in
xchg
inc
and
scas
sti
lods
fcompl
jne
add
dec
add
ja
adc
mov
mov
add
fildl
scas
push
std
les
daa
leave
lret
inc
add
idiv
in
mov
nop
dec
hlt
push
clc
sub
ja
push
data16
mov
add
mov
sbb
mov
cmpsb
hlt
repnz
add
xchg
stos
cmp
add
xchg
loope
scas
loopne
add
inc
add
add
xchg
and
jns
lahf
add
test
or
mov
lret
add
fmull
fisttpll
pop
movsl
ljmp
mov
add
sti
add
dec
add
mov
ja
add
cmp
add
repz
add
inc
loop
pop
and
test
add
add
xchg
rcrb
add
xlat
mov
outsb
add
cmpsl
xchg
add
add
ret
cmp
shll
push
pop
cmp
mov
mov
add
stos
mov
outsb
add
add
cmpsb
pop
add
or
mov
imul
cltd
ss
mov
lea
add
push
add
shl
inc
add
pushf
jecxz
cmc
cmp
jb
mov
push
or
add
movsb
imul
cmp
xchg
add
mov
aam
add
jp
rcrb
hlt
test
and
rclb
and
mov
mov
daa
ffree
lock
and
jle
stos
push
sti
pusha
add
frstpm(287
nop
xlat
imul
adc
add
add
add
add
add
sbb
add
sbb
bound
lods
gs
imul
jg
add
mov
add
mov
faddl
movsl
mov
add
push
ret
hlt
xchg
aaa
pop
xchg
shlb
push
mov
hlt
mov
dec
add
sub
add
cltd
insb
add
imul
adc
xchg
mov
sbb
mov
mov
add
add
lahf
cli
fwait
jne
mov
add
push
push
loopne
xchg
pushl
iret
fcomps
xchg
mov
es
sub
dec
into
or
or
add
stc
push
loope
cmp
shll
inc
add
add
sbb
push
cmp
xchg
shrb
and
insl
jae
aaa
xorl
aad
jo
add
inc
cmp
add
fmull
add
cmp
add
add
into
aam
in
arpl
cmp
pop
cmp
mov
lret
add
cmp
mov
add
adc
adc
notb
cwtl
in
sbb
aas
pop
test
mov
lods
out
fiaddl
sarb
inc
rorl
add
adc
sub
pop
ret
cmp
add
and
push
or
movsl
add
jb
ficoms
inc
xchg
test
mov
jmp
and
add
imull
arpl
cmp
hlt
ret
in
inc
add
add
mov
fstpt
mov
dec
mov
int
jl
lret
sbb
sub
cmpsb
sahf
push
rol
mov
add
popa
sbb
fmull
in
mov
add
mov
inc
jo
test
imulb
imulb
je
cmove
orl
cmp
add
cli
xor
xor
bound
mov
sub
mov
dec
add
jbe
out
push
and
out
xor
push
cmpsl
cmc
out
xchg
push
and
jmp
cmp
in
add
xor
pop
sar
rcr
ljmp
pop
inc
int3
and
cmp
popl
in
icebp
cmp
add
xchg
add
ret
out
int
inc
sbb
int
pop
std
and
loopne
add
popa
ja
pushf
in
mov
sub
pop
adc
out
test
add
mov
xor
shlb
lock
add
xchg
mov
lea
or
fdiv
add
xchg
add
add
inc
push
push
pushl
cli
scas
pop
mov
aas
inc
add
add
add
stos
leave
xor
mov
xchg
or
mov
push
add
rolb
jb
pop
icebp
adc
cmp
ficomps
cmp
xchg
push
mov
xchg
push
adc
into
hlt
cs
test
test
sub
cld
push
mov
inc
add
mov
popa
outsb
add
cmp
add
or
mov
sbb
jb
rcrb
cmp
dec
xor
sbb
adc
sbb
into
cmp
shll
add
ret
arpl
mov
mov
scas
arpl
mov
aaa
and
sub
in
sbb
add
movsb
xchg
ret
mov
movsl
pop
int
adcl
add
add
subl
pop
dec
add
gs
shlb
jecxz
pop
nop
or
dec
add
mov
cli
sub
ds
push
add
cmp
and
xor
mov
push
jnp
add
pop
cmp
cltd
lock
dec
add
ljmp
andb
add
mov
insl
and
push
xchg
lahf
and
ljmp
adc
lahf
jg
add
lds
mov
sub
push
fbstp
push
xor
mov
mov
sbb
mov
scas
clc
mov
push
jmp
pop
dec
add
neg
lds
pushf
repz
xor
xor
int
pop
jo
dec
add
xor
mov
lret
jmp
inc
mov
fisubrs
imul
insl
divb
mov
sub
add
mov
add
ret
mov
add
add
rcrb
lods
sub
idivl
add
jg
and
sbb
add
cmpl
add
and
mov
stos
inc
add
cmp
lock
add
cld
das
and
and
pop
mov
jnp
pop
lahf
pusha
add
sub
add
into
stos
xlat
jp
outsb
add
inc
call
sbb
shll
cli
ds
and
jae
mov
add
repnz
cli
shl
xor
subb
icebp
shlb
push
add
adc
pop
mov
cmp
sti
fwait
arpl
pusha
add
loopne
aaa
lret
rcrb
xchg
fwait
adc
dec
out
add
test
xor
inc
mov
subb
pop
or
adc
fcomps
xor
pop
bound
out
lret
fcompl
cmp
add
xor
andb
roll
cmpsl
inc
mov
add
sub
push
push
add
add
bound
aad
lret
add
stos
and
fdivrs
push
sub
sti
bound
dec
add
fstps
add
pop
loopne
xchg
mov
shll
enter
pop
add
jp
sbb
lcall
movsb
int3
mov
sbb
push
sbb
mov
pushl
sti
js
jbe
popa
inc
dec
add
sub
pop
pop
in
fisubl
loopne
incb
inc
adc
fcoms
push
add
dec
add
cltd
sbb
arpl
pop
int3
mov
movsb
stc
mov
imul
xchg
testb
and
mov
xchg
lods
ja
mov
add
xor
mov
mov
jno
jno
adc
in
fdivs
inc
lds
xchg
jae
xor
jl
jge
mov
inc
andb
dec
xchg
or
sub
fwait
daa
ret
and
mov
push
add
in
xor
rcrb
dec
add
xchg
push
inc
negl
jae
ret
korb
add
pop
push
add
test
mov
xchg
cmp
adc
imul
and
nop
add
in
in
mov
xchg
lret
push
dec
xor
in
cmp
cld
out
decb
mov
add
add
or
and
jp
cmp
push
filds
andb
out
and
imul
jmp
sahf
push
js
cli
jnp
cmp
pop
lods
popa
adcb
cmp
add
enter
xor
icebp
jmp
add
inc
xchg
adc
add
inc
add
xchg
fsubl
cmp
dec
add
add
and
mov
movsl
cwtl
jmp
dec
add
push
lea
orb
cmpsl
fnstcw
inc
addr16
dec
cmp
pop
mov
sbb
and
dec
add
dec
inc
xor
xchg
stos
scas
shll
into
sti
ret
pushf
leave
sub
mov
sahf
cwtl
sbb
pop
fistpll
add
dec
pop
pop
jo
pop
add
cmpsl
xlat
test
inc
jno
pushf
outsl
and
push
loope
xor
aad
add
stos
pop
pop
out
lock
loope
push
hlt
dec
add
add
dec
add
xor
ret
sar
pusha
add
loope
and
mov
dec
add
add
fstpt
xchg
sub
negl
in
and
push
out
insb
add
in
cld
shlb
and
cmpsl
loopne
push
in
sahf
pop
xchg
sbb
jge
and
jge
repnz
xlat
add
arpl
sub
inc
add
je
negb
add
mov
cmp
sarl
add
add
call
add
xchg
dec
movsl
out
sbb
les
dec
add
inc
or
cwtl
cmc
cmp
sbb
ret
sub
add
mov
mov
add
add
scas
mov
pop
dec
add
ficompl
stos
ficoml
add
push
add
cltd
data16
dec
cmp
add
popf
xchg
incb
jge
add
sbb
add
add
bound
dec
notb
jnp
inc
add
pop
ret
cmp
jns
and
gs
popa
mov
add
int3
pop
negb
cld
mov
lret
dec
add
aad
or
data16
add
sbb
mov
rorl
push
ret
push
add
xchg
mov
dec
add
add
sti
cmp
cmc
nop
push
lret
xchg
jg
mov
rclb
inc
add
push
adc
repnz
hlt
cwtl
jb
add
mov
lret
repnz
inc
add
jmp
adcl
sar
cltd
cwtl
fidivrs
sahf
sbb
sahf
cmc
jo
cmp
push
out
sbb
aaa
dec
add
aad
adc
and
and
add
idivb
enter
push
add
aad
add
jecxz
js
mov
push
sbb
fmull
cmp
ja
add
xor
stos
in
mov
or
mov
mov
cmp
std
sbb
repz
das
js
or
fmul
mov
add
cmp
inc
lods
mov
pop
call
hlt
mov
mov
or
pop
out
into
fildl
add
xchg
data16
adcl
imul
vsubsd
add
inc
mov
aaa
into
jns
pop
pop
push
daa
inc
add
adc
push
ret
sarl
xchg
bound
inc
add
push
add
jbe
add
out
jl
testl
jmp
mov
cmp
add
jb
jmp
cwtl
add
jns
inc
aaa
test
push
add
mov
stos
sbb
add
sub
mov
imul
loope
xchg
loopne
push
cmp
cvtps2pd
add
fs
pop
sarl
pop
cmp
push
js
adc
pop
add
pop
jge
andb
push
jle
add
dec
fisubrl
add
add
mov
arpl
or
xchg
add
dec
add
add
out
and
ljmp
xor
iret
xor
add
in
sbb
outsb
add
pop
dec
fcomp
pop
imul
test
add
jb
add
add
inc
sahf
inc
jmp
mov
sbbl
setp
andl
mov
xchg
outsl
in
fnstcw
data16
das
fadds
add
lcall
je
ja
lea
lcall
and
subb
sbb
int3
inc
dec
inc
ja
cmpsl
in
icebp
pop
int3
and
call
add
add
xor
pop
jo
dec
add
pop
popa
filds
jl
es
in
addr16
out
icebp
mov
dec
add
sub
inc
jle
add
push
push
stos
cmpsb
insb
add
fadds
lret
mov
push
sbb
and
add
mov
sbb
mov
pusha
add
sub
sbb
cmp
push
jl
xchg
sub
or
lret
repz
add
mov
jp
cmpsb
cmp
mov
jo
and
in
aam
push
scas
add
mov
repz
mov
insb
add
or
stc
stos
sbb
dec
sbbb
add
fwait
xor
shlb
pop
push
cli
mov
sbb
ljmp
add
ljmp
mov
data16
ret
add
int3
lahf
mov
xor
test
jo
add
adc
cmp
xchg
mov
add
es
adc
xchg
push
and
push
fdivs
push
sbb
mov
jp
xor
loopne
cmp
arpl
sti
sub
or
xchg
xor
pop
insl
ret
movsl
xlat
xchg
mov
sub
pusha
add
xor
repnz
pop
push
fisubrl
push
add
sbb
add
adc
jge
mov
sbb
add
push
daa
sbb
mov
cmp
mov
push
mov
mov
repnz
jno
in
cld
pop
jno
pop
mov
daa
sbbb
push
jo
popa
xlat
iret
xchg
xlat
bnd
add
mov
cli
in
or
inc
cmp
add
popa
data16
mov
add
cmpb
pop
daa
push
movsb
jmp
and
push
ret
ss
mov
cmp
bts
pop
or
add
push
sub
mov
bound
inc
pusha
add
add
sub
sub
jo
sub
in
sbb
lods
test
xchg
or
and
mul
mov
fcmovb
adc
test
ret
xor
mov
lock
or
mov
dec
add
aaa
shr
sub
mov
add
fcompl
adc
orl
cld
cmp
add
dec
add
add
jmp
aas
adc
adc
add
or
xchg
shll
adc
jb
dec
add
pop
xor
jae
lahf
push
xor
cmp
mov
outsb
add
push
jl
add
xlat
add
movb
mov
jnp
dec
add
mov
cwtl
int3
mov
loop
xorb
sub
sub
jecxz
cmp
mov
or
fsubrl
imul
jnp
add
lods
pop
nop
icebp
cmc
add
sub
adc
add
add
mov
mov
in
xor
jno
push
fisubrs
sti
stos
push
and
das
outsl
and
sarl
fs
mov
pusha
add
add
lds
push
icebp
xchg
add
jnp
sub
out
daa
les
add
scas
inc
and
sar
dec
in
pop
and
sub
arpl
mov
adcb
jg
stc
push
in
add
mov
xchg
in
mov
xchg
fdivrs
and
cmc
pop
mov
add
aam
push
sbb
fucom
mov
jecxz
je
cmp
sbb
add
mov
lods
push
nop
lcall
repnz
clc
into
jbe
mov
sub
push
mov
push
adc
add
pusha
add
sti
lret
sub
scas
arpl
adc
test
pop
mov
mov
xchg
mov
bound
cmp
xchg
add
pop
repnz
add
or
ljmp
bound
sub
pop
cmp
xor
add
and
ja
push
nop
in
pop
xor
mov
stos
add
loopne
and
test
add
sub
leave
xor
xchg
ljmp
pop
cmp
ss
add
outsb
add
add
ja
xchg
or
cmpsb
add
repnz
insb
add
mov
xor
sbb
hlt
cwtl
cli
data16
mov
test
dec
xor
cmp
add
push
call
and
jno
lcall
add
rcr
stos
xor
leave
addl
movnti
mov
pop
mov
add
not
out
iret
mov
clc
sbb
add
or
mov
cmp
add
and
jge
cwtl
testl
push
push
or
test
pop
jae
add
movsb
sub
ljmp
cmp
daa
xlat
icebp
jecxz
add
jns
scas
rolb
js
mov
add
add
and
bnd
repz
and
sub
add
jno
xchg
out
pop
or
fld
inc
add
mov
mov
test
push
les
jl
inc
test
add
and
xchg
add
pop
leave
mov
repz
xchg
movsb
jae
dec
add
xchg
jecxz
shrb
mov
mov
test
dec
add
jecxz
pushf
jne
xchg
or
add
add
jne
idivl
push
mov
mov
icebp
pop
pusha
add
ds
xor
xchg
cmp
add
lcall
dec
add
fimuls
mov
mov
add
addb
or
add
lds
add
add
mov
mov
jmp
andb
dec
add
pop
xchg
lret
in
add
fimuls
push
add
out
sub
add
fstp
fildl
cmp
ds
test
pop
cmp
cmpsl
pop
std
andb
inc
add
mov
xchg
add
out
xor
repnz
pop
pop
jecxz
add
xchg
bound
push
xor
mov
les
loop
fcomps
fcomps
mov
jecxz
sub
ds
cmpl
iret
test
daa
sub
and
push
adcb
mov
push
add
jb
cmp
xor
out
dec
add
add
or
adc
sub
inc
and
popl
test
xor
imul
push
shlb
xlat
mov
shrb
ss
daa
mov
in
pop
cltd
lods
fdiv
cmpsl
and
enter
or
push
xchg
test
int
add
addr16
shll
mov
bound
idiv
jp
cmp
movsb
push
lcall
movsl
loopne
add
lea
xchg
mov
push
sbb
inc
add
mov
fisttpll
add
push
jp
addr16
sbb
add
mov
shlb
scas
outsb
add
xor
pushf
xchg
push
add
movsl
lea
or
add
add
dec
call
bound
lods
or
xor
outsl
rcll
ljmp
into
rorl
jmp
pop
lock
xor
test
push
pop
in
int
add
shlb
lds
and
pop
mov
repz
jge
add
add
je
rep
leave
cmc
pushf
ret
mov
add
mulb
xchg
xchg
and
leave
icebp
imul
add
fldenv
mov
xor
xchg
add
jecxz
scas
shll
mov
cld
and
mov
push
imul
stos
call
jecxz
js
clc
dec
add
and
sub
lds
out
mov
cld
jmp
cmp
ret
clc
xchg
negl
jge
ds
pop
add
push
pop
or
out
cmp
loope
cmp
cli
dec
add
add
ljmp
and
pop
add
fmull
mov
ja
mov
shl
sub
in
mov
add
add
jecxz
ja
jle
subl
das
je
pusha
add
out
add
xchg
xlat
aad
xchg
mov
jno
dec
addr16
mov
mov
and
daa
mov
ljmp
sub
cld
stos
decl
xlat
fcmovbe
cmp
sahf
icebp
test
xchg
sbb
cmpsb
lock
fstpt
roll
jno
test
adc
pop
dec
add
add
int3
cmp
push
xchg
mov
add
mov
loopne
pusha
add
std
dec
cltd
adc
subl
jmp
in
mov
iret
inc
add
gs
cmc
std
lods
das
push
imul
repz
sahf
pop
imul
add
sahf
or
xchg
leave
lcall
repnz
sbb
shlb
icebp
add
pop
xchg
xchg
xchg
data16
movsb
mov
pop
sar
lea
inc
add
cmc
mov
jp
add
add
add
add
cmp
xchg
fdivrl
lret
fsub
dec
mov
add
and
in
mov
ss
sub
mov
mov
ds
mov
sbb
fnsave
add
mov
jg
jb
aam
jnp
add
add
cmpsl
lret
movsl
lds
popf
xor
mov
inc
add
pop
in
rorl
add
movsb
pop
jo
mov
or
xor
repnz
cwtl
cmp
ret
xorb
push
push
push
popa
push
out
orb
cli
movsl
into
mov
xor
inc
add
add
or
push
add
insb
add
movsl
mov
outsb
add
adc
jb
add
pop
xor
sub
xchg
add
push
pusha
add
into
call
sbb
dec
add
repz
mov
inc
lcall
or
dec
add
add
mov
xchg
dec
add
adc
flds
insb
add
int
add
jmp
and
xorl
add
inc
cli
nop
hlt
cwtl
fistpl
scas
sub
cmpsb
sbb
invd
add
arpl
adc
add
push
xchg
lods
pop
adc
stc
pop
push
rclb
ds
pop
jo
cmp
imul
push
jecxz
jno
into
adc
mov
pop
movb
push
test
add
scas
leave
push
movsl
movsl
mov
movb
sbb
jb
add
mov
inc
xchg
aad
cmp
or
add
pushf
jp
lret
add
sub
adc
mov
ja
sub
rol
hlt
xchg
add
push
push
mov
dec
add
nop
sahf
popa
lods
sbb
cli
pop
mov
push
add
add
cmp
or
add
int
add
popa
data16
xlat
push
xor
insb
add
dec
push
loope
pop
pop
xchg
sahf
xchg
pop
sahf
subb
aam
push
sbb
sbb
scas
cwtl
sub
mul
inc
add
cltd
dec
add
sarl
cltd
pop
in
lcall
arpl
out
je
enter
xor
or
xor
mov
add
cltd
xor
add
add
sub
rorb
add
popa
leave
shr
cmp
add
add
mov
push
add
add
add
out
cmp
add
sti
imul
ja
fimull
test
ja
add
out
in
xor
mov
sbb
sub
in
pop
push
sbb
pop
pop
sbb
or
stos
mov
add
mov
adc
fimuls
add
jle
repnz
sbb
test
leave
add
jne
dec
std
js
sbb
mov
shll
jae
icebp
inc
add
loop
jmp
ror
popf
push
shrb
jnp
inc
add
sub
clc
cld
push
mov
jecxz
or
std
aas
mov
xor
jns
and
out
loope
lock
sub
lock
sbb
jl
xlat
loopne
data16
mov
add
outsb
add
repnz
stos
dec
add
stos
xchg
push
add
icebp
xor
enter
testb
mov
sbb
add
inc
jg
dec
add
imul
cmp
sub
loope
insl
cmpsb
or
push
cli
mov
sbb
pop
add
push
push
rclb
test
sbb
loop
add
mov
add
addr16
xchg
mov
add
out
jae
add
orb
cmp
fisubl
aas
jle
int3
jb
jmp
cwtl
mov
add
xchg
add
add
xchg
hlt
clc
mov
aam
add
sub
movsl
clc
sahf
clc
shll
sub
mov
add
outsl
out
lret
les
cmp
pop
jb
popf
int
cmpsb
mov
outsl
bound
or
add
inc
add
inc
add
push
add
inc
xchg
mov
mov
in
pop
fmuls
mov
cmp
add
dec
xor
push
or
sbb
fwait
add
cwtl
adc
loopne
mov
mov
mov
cld
xor
mov
mov
fwait
lds
int
add
pushf
push
inc
add
hlt
sub
or
fstpl
fisttps
or
xchg
out
add
mov
jmp
aad
xchg
popf
mov
mov
jns
lock
test
mov
mov
addr16
sub
xchg
sahf
out
sub
enter
out
arpl
cmp
mov
pop
xchg
add
pusha
add
outsb
add
xor
cmp
pop
out
lret
mov
lcall
pop
mov
add
lahf
mov
fxtract
inc
xchg
and
jge
xchg
repnz
jg
mov
add
fsub
adc
fiaddl
xor
jnp
xchg
fdivl
ljmp
push
add
add
leave
psrlw
scas
mov
pop
xlat
or
xchg
aad
mov
mov
add
ljmp
add
fldcw
mov
mov
cmpl
dec
mov
add
sub
test
sbb
inc
add
jne
add
rcrl
inc
add
jb
ret
insb
add
push
pop
es
xor
add
jae
ret
add
mov
add
inc
dec
add
push
adc
cli
push
and
mov
add
add
push
add
xchg
mov
test
loop
add
dec
add
lods
mov
add
and
ficoms
xlat
inc
add
add
pop
lods
adc
hlt
in
fdivl
pop
mov
add
xor
inc
add
xorb
mov
and
add
mov
inc
jmp
jge
das
jae
jmp
add
inc
add
lcall
push
cld
mov
mov
sahf
ljmp
dec
add
mov
pop
add
cmp
and
add
mov
lahf
clc
into
inc
add
jo
add
add
add
jg
add
xorl
add
cmp
xchg
mov
aam
add
add
xchg
mov
add
adc
xchg
or
mov
add
jnp
cmp
jbe
add
pop
dec
add
cmp
in
adc
push
fsts
or
adc
lea
fwait
repz
cmp
or
sbb
pop
sub
xor
mov
lea
sbb
pop
jecxz
mov
dec
add
add
sti
ljmp
pop
inc
cmpsl
jnp
add
in
mov
scas
outsl
in
rclb
sti
inc
lcall
out
add
jecxz
push
dec
out
xchg
clc
cmpb
fwait
sti
xchg
sarb
dec
add
pop
cmc
mov
xchg
push
push
adc
ficomps
insb
add
mov
push
aam
mov
movsl
inc
add
iret
and
scas
push
add
sub
into
gs
dec
and
add
inc
mov
add
dec
add
movsl
aas
xlat
fst
int
fcoms
dec
adc
jmp
les
push
mov
sbb
jmp
lahf
icebp
inc
adcb
xchg
and
repnz
repz
lods
mov
xor
repz
pop
imul
push
mov
repz
in
or
mov
cmp
sbbl
je
and
lahf
dec
inc
add
lret
inc
int
scas
inc
add
test
add
cltd
xor
imull
test
ret
pop
add
or
sbb
pop
insb
add
sub
pop
fcomi
pop
push
push
pop
stos
mov
stc
dec
ljmp
mov
cmp
outsb
add
inc
add
loope
jno
xchg
test
pop
adc
shl
lcall
lea
mov
icebp
scas
shl
inc
xor
mov
in
add
xor
add
outsl
lcall
lret
mov
mov
pusha
add
into
sub
or
shl
pushl
stos
mov
sub
add
add
je
add
rcrl
and
ds
inc
add
mov
lods
jb
ljmp
xchg
fsts
stos
sub
mov
xchg
testl
or
mov
add
sub
out
add
sub
sbb
jl
and
lcall
movsb
xor
inc
add
stos
leave
ja
ss
pop
data16
add
add
in
dec
loopne
and
mov
push
mov
mov
jg
fdivrl
popf
sub
pop
jp
mov
dec
add
adc
add
xlat
sub
pop
xchg
mov
push
add
add
test
push
outsl
pop
sub
inc
pusha
add
shrb
subb
mov
test
add
fldt
add
loope
leave
xchg
cli
addl
pop
ja
inc
add
jecxz
addr16
add
mov
and
add
mov
movsb
sub
or
and
jmp
xor
rcrl
imul
mov
mov
add
cmpsl
idiv
mov
vpxor
fidivl
mov
leave
push
cmp
sbb
mov
lds
leave
pushf
push
icebp
repz
sbb
cmp
add
add
and
mov
mov
xchg
adc
mov
aas
fldl
jno
add
adc
mov
addr16
dec
add
jmp
add
push
mov
cmp
lea
push
xchg
repnz
jo
push
add
inc
jae
pushf
test
lret
push
cmp
or
jns
nop
outsl
rcrb
push
lods
test
mov
test
xor
cmpsb
lahf
cmp
cmpsl
gs
or
cmc
mov
repnz
add
ret
fildll
add
out
adc
inc
pop
xlat
pop
js
lret
scas
leave
pop
mov
sub
add
ret
jne
ljmp
mov
bound
inc
add
scas
sbb
mull
sub
dec
and
cmc
inc
ffree
js
call
add
jecxz
sbb
pop
pop
cltd
or
in
outsl
insl
repz
mov
add
dec
add
sbb
sahf
rorl
scas
out
inc
add
sti
push
push
add
mov
sbb
stc
jns
testl
add
inc
add
jge
mov
int3
mov
and
popl
add
daa
inc
decl
add
lods
pop
popa
dec
add
imull
sbb
push
add
aad
insl
movhps
mov
sbb
sub
dec
in
mov
pop
clc
push
jle
dec
or
js
ss
inc
into
imul
bound
cltd
xchg
mov
bound
je
xchg
sub
imul
push
add
add
jbe
and
sbbb
add
mov
jbe
cltd
push
dec
add
fistps
add
add
add
pop
pop
or
xor
xchg
sarb
pop
arpl
or
or
jo
jmp
or
push
jp
daa
pusha
add
mov
fildll
and
push
xor
repnz
sbb
loopne
mov
imul
xor
inc
xor
outsl
dec
sti
inc
add
add
out
into
mov
popf
add
pop
insb
add
popa
push
or
in
mov
fdivrs
cli
dec
add
sbb
cmp
jmp
jns
mov
xchg
jbe,pt
jo
add
mov
sub
or
push
jl
cmp
in
jle
cmp
add
add
js
mov
call
mov
push
jecxz
adc
cmovns
push
mov
pop
subl
lea
rcrl
add
ror
jle
mov
cwtl
cmp
cmpsl
sbb
ret
pop
xor
leave
loope
inc
pop
decl
gs
jg
out
out
inc
cmpsb
outsb
add
dec
add
add
cmp
aad
xchg
mov
sbb
dec
stos
or
push
xlat
insb
add
shrb
cmpb
jo
cmp
leave
xorl
icebp
cmpsl
sbbb
cmp
adc
add
add
xor
pop
push
mov
add
daa
push
sbb
adc
clc
aam
mov
cmp
or
aam
xchg
or
adcb
adc
cmpsl
add
sub
cmp
jmp
notb
adc
shr
jae
xchg
xchg
mov
add
adc
cwtl
aam
mov
and
jle
jo
dec
test
orb
mov
push
dec
sbb
scas
dec
add
add
in
mov
loop
mov
sbb
lahf
aaa
loopne
jg
add
and
xor
xchg
test
sub
movsl
mov
add
int
aaa
jns
loope
imul
cmp
test
jl
sbb
jle
mov
repz
push
fucom
add
repnz
push
sub
orl
fildll
jmp
add
add
add
add
fcom
jb
mov
mov
push
sbb
push
pop
mov
add
add
sti
leave
call
jmp
sub
int3
cmp
popf
sbb
add
add
mov
adc
sti
push
pop
sahf
into
dec
xchg
bound
mov
sub
and
push
cmp
mov
arpl
jnp
shlb
mov
hlt
shr
stc
ds
xchg
xlat
cli
movzbl
movsb
cltd
or
lret
pop
daa
nop
ja
adc
fdivrs
sti
xor
lcall
add
xor
inc
fldl
cmp
bound
mov
test
pop
testb
dec
adcb
xchg
add
rcrl
and
test
mov
movsl
push
add
add
inc
ljmp
mov
mov
repz
mov
add
dec
add
add
std
data16
add
inc
add
jnp
jbe
jb
lret
call
in
inc
mov
mov
or
mov
fwait
loopne
outsb
add
stos
cmovo
mov
sub
fildl
push
mov
dec
scas
jbe
lcall
dec
add
sahf
popa
testb
out
jbe
push
dec
add
int3
pushf
adc
fldenv
add
cmp
xor
scas
movsb
pop
or
add
imul
mov
add
add
add
out
add
adc
jbe
mov
add
add
stos
pop
mov
inc
add
orb
insl
enter
xchg
xchg
pop
cmpsb
xchg
xchg
dec
inc
add
insl
shll
out
sahf
ficompl
icebp
gs
in
push
add
add
movsl
popf
jge
mov
cld
out
push
sbb
mov
sub
pop
loope
shlb
rcl
or
or
stos
rol
and
adc
fiadds
add
aaa
inc
bswap
in
test
in
mov
jmp
mov
leave
ljmp
fidivs
xchg
inc
push
fwait
stos
sbb
outsb
add
icebp
push
stos
pop
dec
add
dec
mov
dec
pop
or
cmpsl
pop
xor
in
mov
or
jecxz
imul
pop
mov
fcoms
push
add
sub
js
add
sbb
pop
dec
add
pop
adc
and
push
cs
aam
stos
fiadds
out
sub
mov
shr
push
cmp
lahf
dec
lods
jne
loope
cltd
or
xchg
ret
and
or
inc
add
lea
cmp
lods
lock
xchg
jne
fbld
add
mov
adc
cmp
jmp
gs
call
pusha
add
lods
add
mov
loopne
sub
xchg
std
cmp
xor
ss
sbb
mov
adcb
push
add
aad
loopne
cwtl
mov
cmpsl
ret
jns
and
add
and
add
in
jbe
int3
mov
pop
clc
scas
sub
inc
add
pop
inc
add
add
mov
add
add
dec
add
cmp
not
rorl
sahf
orl
aas
jle
dec
add
xchg
adc
sbb
jns
jo
movsl
out
arpl
outsb
add
add
mov
sub
xor
xor
outsb
add
and
arpl
fbstp
lds
add
add
test
and
fdivrs
enter
shll
leave
movb
icebp
fisubs
movsl
sbb
sbb
add
repz
add
dec
add
jle
scas
push
sub
pop
sbb
pop
jp
cwtl
icebp
mov
mov
scas
push
push
lods
jecxz
sub
cmp
cmp
mov
jmp
push
loope
add
mov
or
add
push
add
add
je
sbb
loopne
add
lahf
push
pop
scas
rcr
stc
pop
pop
push
add
test
add
shlb
add
add
lcall
jge
xor
mov
sahf
xor
sub
lock
inc
add
bound
adc
cmc
push
pop
mov
push
pop
mov
add
mov
fbstp
or
and
loopne
xchg
mov
lret
fisubs
lock
and
sbb
dec
lds
add
fcmovnb
cmpsb
push
jb
sub
lcall
add
mov
add
xchg
xchg
imul
adc
stos
push
popa
fmuls
fimuls
pop
shl
mov
jl
enter
add
in
push
pop
inc
xchg
xor
xlat
sub
ds
add
psadbw
push
and
in
xchg
adc
mov
add
sbb
and
inc
dec
add
or
mov
add
gs
insl
mov
add
jecxz
adc
sti
mov
rol
scas
imul
loopne
add
scas
sbb
mov
clc
fcom
lods
add
add
mov
jl
sti
adc
aaa
adc
movsb
dec
add
and
fbstp
scas
aam
cli
aas
ret
dec
add
daa
jle
sbb
sti
push
addr16
add
mov
or
adc
ret
xchg
sub
ficomps
mov
add
inc
pop
pop
movsl
sbb
mov
cmp
add
xchg
or
leave
pushf
push
xor
das
jnp
inc
add
out
adc
testl
xchg
fcmove
rorb
add
mov
clc
inc
sub
aad
add
sbb
mov
lea
and
repz
repz
xchg
jmp
inc
icebp
dec
add
mov
add
jmp
bound
flds
add
loope
lods
pushf
or
call
andl
add
clc
test
pop
and
dec
add
stos
push
dec
repnz
lock
enter
add
fwait
mov
xor
sub
fsubp
push
scas
in
add
loop
add
add
and
inc
sub
push
mov
cmp
add
add
dec
stc
inc
pusha
add
xor
dec
add
sub
mov
add
add
add
dec
lcall
push
rcl
jne
movsb
shlb
add
fbld
add
inc
add
sbb
aas
rcr
movb
add
mov
test
sub
sbb
arpl
int3
loope
mov
add
add
test
xchg
jl
add
and
dec
add
push
or
je
ficoml
xchg
outsl
push
int3
mov
int3
add
aaa
add
push
cmp
or
mov
sbb
test
push
movsb
mov
jne
or
or
mov
leave
test
mov
push
jmp
dec
add
jge
orps
divb
cmp
and
mov
mov
adc
dec
add
sbb
popa
rep
push
fstl
int
add
dec
repz
mov
incl
add
clc
cmp
dec
add
mov
add
or
dec
push
or
out
jno
test
or
orl
add
add
add
movsb
push
loope
mov
add
xor
dec
adc
pop
in
scas
pop
or
mov
xorl
xor
mov
hlt
sbb
js
cmp
lea
ret
add
add
imul
add
mov
aas
and
orl
ds
jno
add
nop
mov
push
lret
xchg
push
adc
add
add
push
fdivp
sti
xlat
rcrl
adcb
sub
adc
add
add
lret
rolb
add
aas
adc
jno
dec
or
lods
out
pop
in
dec
add
add
mov
iret
or
repnz
inc
int
add
in
cmp
inc
adc
nop
dec
xchg
cmpsb
mov
sti
pop
lock
mov
call
subb
jb
bound
mov
bound
ss
mov
orb
or
stos
jbe
movsl
fidivrl
and
pop
cmp
outsb
add
sbb
cld
add
push
add
xchg
adc
add
scas
divl
xor
adc
add
xorb
dec
add
shlb
or
les
adcb
add
jl
adc
lods
test
mulb
cmp
fcompp
push
into
inc
sbb
sub
cld
lock
daa
daa
or
gs
push
add
jl
out
iret
fcomp
adc
aam
enter
or
shl
mov
fwait
ret
adc
pop
push
cmc
les
mov
movsb
cmp
adc
mov
lahf
cltd
or
mov
add
jo
outsb
add
add
lock
lods
and
add
aas
cli
scas
pop
and
dec
ret
add
mov
push
pop
jno
out
ljmp
mov
push
jnp
or
insl
push
sti
ds
xchg
stos
xor
aaa
inc
add
add
lock
pusha
add
dec
out
insl
nop
xor
lcall
nop
cmp
add
cmp
shll
pop
sbb
jnp
add
mov
into
mov
pminub
rclb
push
mov
pop
ds
add
sub
add
adc
add
sbb
int3
dec
add
stc
mov
pop
inc
add
aas
xchg
out
mov
jbe
loope
sbb
int
add
sub
orb
iret
jg
push
test
add
clc
sub
ja
add
out
andb
loop
pop
push
add
lret
add
jns
movsl
xchg
cmc
push
pushf
pop
mov
dec
add
int
xchg
mov
add
xor
inc
add
cmpsb
sbb
add
inc
sbb
jae
imul
jge
idivl
add
jb
jne
xor
into
imulb
daa
or
inc
in
push
cmp
mov
aaa
push
add
movsl
inc
add
xchg
and
icebp
xchg
xor
repnz
in
add
in
enter
sbb
sbb
add
ja
adc
fs
andl
ja
or
mov
pop
inc
add
rcll
bound
mov
jg
lcall
mov
pushf
mov
xchg
in
jmp
dec
ja
add
int
lcall
cwtl
cmp
add
inc
push
push
add
sub
leave
adc
int3
inc
enter
or
lret
sub
lahf
mov
add
cmp
pushf
mov
mov
aas
sbb
mul
xor
jecxz
ror
xor
push
or
and
sbb
outsb
add
pushf
or
xchg
fcmovnb
cltd
sub
cld
add
add
cmpb
inc
add
add
pusha
add
ss
lods
cmp
fisubl
xor
jo
mov
lods
mov
pop
sbb
out
jo
xor
hlt
lret
lea
popa
and
push
stc
outsl
adc
shrb
add
inc
cmpsb
imul
shrl
je
add
dec
inc
add
mov
icebp
xor
loope
clc
jae
inc
add
cmpb
nop
jns
scas
aas
aas
cli
sub
xor
cwtl
repnz
cwtl
cmpsl
ss
call
jo
add
adc
pop
mov
pop
imul
add
outsl
mov
cltd
push
add
add
xchg
movsl
nop
xor
icebp
adc
ret
imul
push
push
arpl
mov
xchg
stos
lret
loope
adc
sbb
mov
outsb
add
xor
jp
add
ficomps
add
mul
add
inc
mov
mov
std
inc
aad
xchg
mov
jmp
push
add
lret
push
out
ljmp
adc
push
xchg
mov
je
add
in
repnz
sbb
imul
lods
int3
dec
lahf
in
orl
jae
mov
cmp
jg
adcb
add
adc
ret
adc
push
popa
push
jmp
jp
add
cmp
push
pop
shl
add
inc
cli
decl
adcl
test
cld
dec
add
jne
into
inc
add
xor
out
add
or
cli
pop
lds
jg
add
xor
mov
jb
in
sbb
mov
movsl
xchg
movsl
xlat
push
iret
leave
rcll
aad
iret
sbb
shld
push
shrb
lret
xchg
lret
sub
xchg
cmp
jb
cmpl
bound
out
add
cmpsl
mov
stc
sub
fsubr
pop
pop
mov
dec
std
fstl
imul
push
sbb
sbb
mov
aas
data16
leave
push
adcb
data16
add
outsl
in
pop
test
dec
pop
jae
push
test
add
push
pop
dec
icebp
lret
iret
jnp
add
xchg
fisttpll
ficoml
sahf
jb
mov
or
xor
fcmovb
sub
ja
out
push
add
stc
mov
pop
push
mov
add
je
jnp
add
xchg
insb
add
pop
and
jmp
mov
scas
xchg
outsl
fadds
add
xor
cmpsl
and
jle
add
mov
add
add
cli
jl
hlt
mov
xchg
pop
test
mov
ret
xor
fwait
jge
adc
jae
dec
add
or
iret
stos
dec
add
movsb
add
sbb
cmpsb
xchg
paddusb
push
ja
add
add
mov
incb
and
jae
data16
and
add
out
mov
cmp
fdivs
lahf
xor
add
add
lods
hlt
add
push
add
and
add
jae
adc
bound
lahf
movsl
scas
out
or
in
test
insl
lods
pop
cs
push
xchg
test
jl
dec
add
aas
adc
push
jnp
mov
add
sub
and
roll
inc
add
add
xor
jp
lret
je
add
ret
daa
cmpsl
nop
xchg
fstpt
fsub
inc
add
sbb
das
mov
xchg
lcall
add
flds
add
maxps
shlb
mov
xor
mov
xchg
in
jl
int
add
or
lock
daa
sbb
inc
add
rcrl
add
sti
in
loope
push
or
push
xchg
pop
xchg
xchg
add
add
or
sbb
je
gs
movsb
cmpsl
mov
sbb
pop
push
cwtl
pop
pop
sbb
and
hlt
pop
or
pop
das
add
ret
push
int
fdivp
xor
jns
jns
sbb
add
cli
cmpsb
and
xchg
add
and
push
add
fisttps
lods
lods
test
rcll
xchg
sub
int3
fidivrs
add
add
or
dec
add
cld
mov
add
outsl
outsl
push
add
loopne
add
jo
and
mov
inc
add
pop
sub
enter
out
insb
add
sub
inc
add
mov
mov
push
xor
call
outsl
pop
cmp
dec
add
add
aad
and
xchg
inc
js
setge
add
outsb
add
add
test
cmp
push
sahf
mov
add
addl
inc
sbb
jmp
lods
rcrb
test
test
das
mov
stos
lahf
sub
add
add
call
std
sti
pop
loop
sbb
xchg
pop
xchg
mov
cmp
fistps
mov
jb
call
add
scas
aaa
lock
jbe
add
add
jo
aad
cmp
sarb
xchg
out
iret
sub
add
test
in
imul
arpl
push
mov
sbb
and
add
cmc
lret
mov
roll
mov
dec
scas
lock
inc
add
mov
or
jne
int3
jb
subb
jns
xor
add
jle
add
add
fidivs
leave
push
add
pushf
sub
mov
xchg
mov
ret
repnz
pop
inc
add
or
pop
enter
roll
data16
lock
add
lcall
jne
cmp
jmp
xchg
dec
add
out
add
mov
lcall
fcmovu
inc
int
add
sbb
movsb
mov
aaa
or
or
mov
fisubrl
add
in
and
mov
inc
adc
adc
xchg
xor
sub
loope
icebp
out
xchg
xor
and
jno
popa
outsb
add
add
add
xchg
add
push
jns
add
cmpsl
sub
imul
mov
lahf
sub
pop
out
daa
fsub
stc
push
dec
xor
out
dec
xor
add
aam
cmp
mov
add
mov
faddl
lods
push
add
loope
ret
loope
add
das
push
loope
add
xlat
mov
je
mov
jns
push
jns
dec
mov
mov
push
out
add
dec
arpl
lcall
add
dec
cmp
pusha
add
mov
lcall
pop
imul
sub
jns
lea
gs
add
orl
pop
xor
bound
arpl
adc
adc
rcrl
or
hlt
divl
ret
inc
add
adcb
les
add
add
or
add
loope
mov
pop
sub
call
mov
add
jbe
test
add
add
sahf
add
ljmp
xor
imull
sbb
add
add
cltd
fisttpll
jl
ljmp
popf
xlat
xor
add
mov
push
jbe
add
jmp
add
add
popf
add
stc
mov
adc
mov
jns
fidivrs
lret
jge
arpl
add
xor
out
inc
mov
jl
sbb
jecxz
xchg
arpl
adcb
add
and
shr
xchg
imul
jp
lea
fidivl
cmpb
cmp
adc
dec
add
inc
sti
ss
add
lret
xor
gs
imul
iret
dec
cmc
and
out
cmp
pop
dec
add
add
cmp
add
adc
add
push
into
inc
in
ret
sahf
add
and
movl
add
mov
popa
jp
jg
or
test
add
in
in
inc
add
out
mov
mov
and
jmp
pop
xor
add
adc
xchg
dec
iret
mov
cmp
add
xchg
mov
imul
add
loope
out
cmpb
add
ret
dec
add
sbb
add
mov
loopne
jge
test
inc
aas
add
aas
mov
add
dec
mov
mov
mov
sub
in
mov
add
pop
push
dec
add
add
jl
stos
adc
loop
pushf
push
add
test
iret
clc
mov
outsb
add
subb
out
cmpb
adc
add
aad
hlt
outsb
add
stc
test
sbb
insb
add
sbb
repz
jge
and
sbb
cld
push
cltd
or
add
add
cmpsl
push
pushf
into
xlat
je
inc
jne
add
add
rcll
pop
add
imul
cmp
add
add
fdivs
or
mov
cwtl
in
xchg
xor
in
call
jns
sbb
lret
pop
adc
cmp
test
add
arpl
xchg
mov
movsl
popf
mov
inc
add
and
add
sbb
add
xor
cmp
dec
add
push
mov
jne
mov
mov
xor
les
fimuls
jnp
add
ds
add
mov
adc
xor
xor
and
sti
clc
push
dec
clc
aam
add
inc
add
decl
decb
insl
hlt
dec
add
adc
sub
out
adc
ret
sbb
pop
js
fwait
jmp
and
lods
dec
in
outsl
cvtdq2ps
rol
sub
imulb
cmp
imull
sbb
adc
idivl
inc
add
inc
add
icebp
movl
xchg
outsl
dec
insb
add
mov
push
leave
iret
lds
into
and
sbb
add
mov
jle
xchg
pop
aad
int
cli
sub
fnstcw
lods
pand
insb
add
test
jg
test
jnp
scas
int
ret
push
mov
flds
mov
scas
leave
or
arpl
stos
test
cmp
cmp
imul
cmp
push
push
loop
sub
jg
inc
cwtl
push
nop
loopne
insb
add
mov
add
shlb
inc
add
add
xor
pop
stc
andb
jo
mov
adc
lods
add
mov
aas
dec
add
pop
ja
mov
push
shlb
add
pop
push
and
jg
push
fimuls
dec
sbb
loope
jb
jp
nop
cmpsl
sbb
add
cltd
jne
add
mov
aaa
icebp
sbb
out
mov
bound
mov
movsl
mov
pop
xchg
pop
adc
sub
mov
stos
sbb
idiv
mov
jg
sbb
mov
jo
outsl
loopne
mov
jno
in
pop
and
lds
fucomp
ljmp
out
lahf
pop
add
cld
push
or
out
daa
adc
js
add
and
js
jno
inc
clc
xor
sub
xor
mov
push
add
lods
out
enter
pop
mov
and
add
pop
lock
mov
xchg
pop
jg
mov
and
add
jbe
cli
je
mov
or
add
cmp
rcr
add
test
pop
dec
add
xchg
jg
call
xor
mov
rorb
pop
xchg
sub
and
inc
insl
mov
rcrl
mov
pop
cmp
add
dec
mov
add
js
sar
jle
pop
inc
add
inc
add
push
inc
lret
push
out
pop
jns
sbb
out
xchg
scas
movsl
jnp
add
cmp
bound
mov
lock
pop
pusha
add
and
pop
test
loop
adc
push
xor
nop
xchg
and
cmp
xlat
jmp
or
rorl
or
cmc
and
mov
cltd
mov
xchg
loope
jle
leave
jnp
xor
add
add
xor
or
pop
movntps
nop
call
scas
jg
stos
xchg
xchg
jne
add
in
out
fmull
aad
push
pop
jns
cmp
add
mov
add
and
xor
sub
add
adc
add
add
jne
add
loopne
add
fiadds
and
jnp
add
enter
or
ja
movsl
vandnpd
mov
push
xchg
and
inc
ficomps
pop
rorl
mov
outsl
fcmovb
ljmp
or
subb
add
sub
push
mov
mov
scas
das
pop
clc
and
dec
lea
push
popa
test
add
jae
adc
and
add
stos
sub
leave
xchg
push
add
jae
mov
add
insb
add
adc
leave
pop
sti
inc
add
pop
push
xchg
je
mov
lea
add
jno
add
add
cltd
insb
add
adc
mov
ret
pushl
add
dec
jns
fsubrp
ljmp
add
sbbl
test
add
and
add
add
test
mov
add
fidivrl
fwait
jecxz
testl
dec
add
mov
add
pop
scas
icebp
cmp
inc
lret
insb
add
fistps
lods
push
popf
xor
js
pop
mov
insb
add
cmp
xlat
stc
push
stos
cmp
add
fsubs
pop
add
push
cmp
or
xchg
sbb
hlt
jo
int3
pop
pop
sbb
popf
lods
xchg
hlt
xlat
fistpl
aam
add
hlt
add
ffree
mov
adc
leave
decb
call
pusha
add
jae
dec
pusha
add
orl
xchg
jp
add
cwtl
adc
add
mov
adc
into
jp
ss
fs
add
sbb
mov
jae
or
testl
inc
pushl
cmp
mov
inc
icebp
mov
pop
fmul
sbb
inc
add
add
icebp
stos
daa
bound
push
in
inc
add
in
inc
mov
adc
sbb
add
ret
xchg
mov
push
iret
sub
jae
or
add
inc
inc
add
lds
add
pushf
cmp
into
add
into
and
stc
mov
push
xorb
int
mov
add
cmpsl
sahf
lret
imul
adc
sub
jb
loopne
orb
and
mov
fucom
mov
out
xor
js
into
adc
into
sbb
mov
add
cmc
xchg
or
push
mov
into
adc
mov
dec
add
iret
sub
inc
add
xor
push
cltd
mov
popf
imul
and
mov
cli
nop
movsl
xor
cli
shl
sub
aam
add
mov
push
mov
enter
shrl
add
inc
add
iret
add
imul
fdivrs
cmp
add
jb
jae
je
icebp
scas
xor
loop
mov
sbb
fnstcw
jns
push
add
xorl
imul
ds
aad
ret
sti
leave
mov
add
outsb
add
imul
add
adc
ja
sbb
cmp
aaa
and
sub
jp
loopne
in
movsl
jno
test
ljmp
add
nop
adc
push
rcrb
add
mov
xchg
lds
jo
push
rcll
test
xchg
mov
lock
cmp
leave
xchg
xlat
jl
movsl
lcall
dec
add
mov
and
daa
add
outsl
xchg
add
mov
add
stc
cmp
jl
roll
dec
add
sahf
scas
les
cmp
iret
insl
mov
aas
jae
xchg
mov
mov
jno
xor
aaa
pushf
aaa
dec
add
add
mov
xor
xor
repz
xchg
ss
pusha
add
and
cld
or
shlb
pop
movsb
repz
loopne
mov
lods
push
push
push
call
jl
mov
test
movsb
dec
mov
add
add
add
mov
rclb
repz
testb
jns
imul
adc
imul
push
add
add
add
ds
fcoms
or
jp
cmp
xchg
cltd
std
std
inc
and
add
add
inc
add
add
add
add
mov
mov
arpl
mov
cmp
mov
cmp
insb
add
add
shlb
cmp
xchg
mov
add
testb
mov
add
loope
nop
sbb
cwtl
xor
repz
push
jb
push
lea
mov
mov
push
xor
add
arpl
dec
add
add
sbb
inc
or
lods
push
leave
mov
ds
movsb
adc
testb
and
sub
fsts
cwtl
ror
dec
add
out
adc
loopne
mov
inc
add
cmp
sbb
or
and
out
or
out
add
xchg
sarl
in
push
mov
push
lcall
add
inc
add
mov
xchg
add
jl
movsb
outsl
clc
add
and
cmp
bound
jb
push
push
add
add
dec
add
loop
add
and
jp
add
dec
add
jecxz
out
ret
and
mov
and
mov
mov
add
add
stc
cmp
mov
in
sub
adc
add
ljmp
add
xorps
add
das
xchg
das
enter
loope
xor
mov
cmp
jle
stc
pop
jb
pop
clc
jne
add
add
les
add
movsb
pop
jl
scas
push
add
mov
add
subb
cmpl
gs
in
out
jae
add
fcoml
push
clc
xchg
ret
cmpsb
jb
and
mov
xchg
ja
int3
pop
cli
lret
into
pop
push
inc
add
jecxz
and
add
inc
add
repnz
mov
lret
add
or
sarl
adc
lcall
ret
shrl
sbb
mov
rclb
stc
inc
pop
mov
lahf
jno
push
mov
lds
es
jp
or
and
jl
pcmpeqd
cmpb
add
stos
test
pop
dec
add
movsl
push
jb
movsl
pop
sbb
add
aaa
xchg
or
int3
hlt
enter
or
arpl
nop
and
loope
sbb
lcall
add
adc
in
sbb
jge
cmpsb
pop
ror
sbb
cwtl
pop
add
push
cld
js
fnstsw
push
mov
add
and
fwait
popf
int
adc
inc
pushf
add
add
add
xchg
lahf
push
scas
cmc
in
pop
les
clc
dec
scas
lret
add
inc
add
push
xor
dec
add
stc
push
lea
div
jl
xchg
cmp
add
xor
cwtl
mov
mov
pusha
add
test
add
mov
add
fisubs
add
pop
test
xor
xchg
and
loopne
add
mov
outsb
add
inc
add
sarl
add
mov
fimuls
ljmp
sub
mulb
shll
pop
lods
ljmp
jbe
ret
gs
loope
fistpl
sahf
sbb
ds
mov
push
andl
idivl
add
add
add
ja
and
cmp
xchg
scas
sbb
add
add
pop
xchg
outsl
popa
pop
lock
mov
faddl
sbb
fstpt
or
ficoml
add
push
imul
and
cmp
in
cmpl
mov
add
in
mov
sbb
arpl
in
or
mov
in
sbb
cmpsb
aad
pop
adc
add
cmp
stc
test
jb
nop
xor
sbb
adc
add
repz
add
add
inc
add
jns
add
xchg
push
pop
pop
pop
call
sbb
sahf
jge
mov
mov
add
add
insl
ds
jl
mov
pop
jle
sbb
mov
pop
popa
mov
sbb
cltd
mov
stos
mov
xor
or
add
sti
push
fstl
mov
out
jb
add
or
hlt
std
and
push
cwtl
mov
add
push
shr
push
and
in
pop
arpl
lahf
not
jg
test
push
lds
pop
fdivrs
push
sarl
jbe
mov
cmp
test
lock
xchg
push
xchg
dec
xchg
fbstp
push
push
cltd
and
sbb
jnp
sub
ljmp
add
inc
aaa
cmpsb
and
cld
lret
mov
cmpsb
ficomps
push
leave
sti
jns
add
jle
enter
loope
ljmp
popf
lods
scas
sar
sti
and
or
inc
add
mov
jne
cmp
mov
outsl
sbb
add
insl
loop
xchg
cmc
adc
mov
jmp
enter
cmp
add
bound
cmp
sub
sbb
in
and
fdivl
sbb
arpl
repz
or
add
ss
ss
jb
jge
daa
aas
sbb
cmpl
pop
push
sbb
xchg
pusha
add
mov
xchg
and
inc
stos
mov
ret
in
xor
add
xchg
mov
gs
xchg
ret
pop
popf
gs
and
dec
cmp
pop
cwtl
idivb
aas
cmp
lods
repz
not
lds
add
sub
jecxz
push
add
and
jg
and
jne
imul
data16
testl
jae
add
sbb
not
inc
add
int3
into
xor
mov
fnstenv
stos
sbb
les
sbb
push
stos
add
ret
mov
pop
pop
xor
mov
clc
in
add
inc
add
loopne
sbb
loopne
in
ret
pusha
add
add
cmc
adcb
mov
pop
jbe
mov
adc
and
clc
inc
sub
jmp
clc
iret
cmp
mov
jbe
pop
out
fimull
cmpsb
or
arpl
insl
out
data16
cmpsb
or
loop
pop
sub
popa
add
inc
pop
push
xchg
repz
pop
lods
cmp
mov
in
mov
lods
out
jbe
movsl
adc
adc
xchg
fcomi
loope
add
clc
scas
pushf
jle
fsts
mov
cltd
push
add
xor
je
xor
add
nop
xor
jmp
add
push
ret
xchg
popf
push
fwait
arpl
fidivrs
jg
add
xor
aaa
cmpsl
cli
xchg
sub
jp
xor
pop
pop
sbbl
test
jmp
xor
loop
test
and
mov
and
add
add
mov
call
std
add
add
imul
insl
call
add
dec
cltd
pop
movsl
and
divl
jp
add
add
out
cli
mov
cmpsl
jne
sbb
movsb
push
add
or
imul
aad
and
jge
pop
push
insl
lret
mov
icebp
jge
cli
cwtl
sbb
pusha
add
or
test
scas
mov
jle
add
or
jp
fbstp
icebp
divb
xor
fsubs
and
ret
push
pop
pushf
cmpps
adcb
test
add
cmp
add
adc
popf
add
insl
lods
out
lcall
adc
clc
and
fwait
insl
mov
sbb
xchg
insl
cmp
add
sar
sahf
or
sub
add
cltd
jne
sbb
mov
mov
mov
xchg
outsb
add
in
cmp
enter
je
add
ljmp
test
jl
sti
jmp
push
dec
add
and
mov
sbb
jbe
filds
adc
outsb
add
add
repnz
or
mov
out
inc
add
push
loopne
and
xchg
into
dec
add
rorb
sbb
lods
mov
jl
add
jg
lea
sub
das
lret
nop
add
loope
mov
int3
push
push
js
test
adc
add
add
ljmp
aam
add
sub
cmp
ja
xor
nop
adc
mov
sarb
jg
add
add
mov
jg
jo
les
xor
out
je
and
cld
inc
add
mov
pop
sub
add
filds
pop
mov
std
aad
sub
call
fildll
xchg
mov
push
adc
sbb
fists
mov
mov
jbe
and
ljmp
adc
cmp
ljmp
enter
add
mov
sbb
add
inc
add
sbb
mov
push
add
xor
mov
fimuls
out
iret
sarb
mov
dec
add
mov
mov
xor
ds
inc
add
add
mov
push
xchg
psubsw
pushf
les
xor
cli
stc
cmpsb
int
scas
pusha
add
mov
push
xlat
mov
icebp
pushf
sub
mov
jne
lcall
lock
enter
pop
sbb
sub
push
add
mulb
js
add
pcmpeqw
add
in
mov
mov
xor
lcall
add
and
adc
add
cmp
cmp
jp
jb
gs
lcall
add
pop
sarb
sti
mov
out
lahf
and
jne
add
mov
ss
ljmp
out
mov
push
adc
vmovaps
test
add
pop
mov
push
add
bound
ds
mov
fidivs
cmp
sub
js
add
cmp
loop
insb
add
add
ror
out
add
scas
dec
add
pop
and
mov
add
dec
into
inc
add
stos
cmp
sbb
mov
or
mov
mov
add
xchg
and
add
mov
or
lods
push
mov
pop
rcrl
push
in
test
shl
jmp
insl
fcompl
testl
add
repnz
mov
pop
add
and
jae
mov
testl
mov
xchg
dec
adc
in
xlat
loop
adc
inc
pop
sbb
js
out
add
push
mov
mov
sbb
out
add
sub
inc
add
mov
push
or
loopne
cmpl
sub
aaa
int
xor
jmp
sbb
loope
ja
sub
add
dec
add
jae
add
xchg
xor
xor
inc
add
lret
sub
fistpll
aaa
incb
xchg
jmp
iret
push
inc
xchg
prefetch
dec
jb
aad
fwait
adc
test
add
mov
add
js
ljmp
lret
push
jge
ret
jmp
pop
jbe
jb
add
rcrl
xorl
pop
shr
jge
add
iret
arpl
adc
jp
dec
pusha
add
add
bnd
in
loopne
stos
shll
add
lret
dec
add
jae
jbe
nop
ret
push
adc
xor
lcall
cmc
addr16
add
mov
dec
sbb
rclb
add
cltd
add
sar
lahf
pop
jmp
pop
pop
inc
ror
clc
inc
xchg
jl
stc
aam
mov
dec
jp
or
pop
xor
lods
arpl
pop
repz
xor
in
dec
add
add
cmpsb
int
sarb
add
mov
xchg
adcl
mov
int3
add
jnp
shrl
cmp
mov
pusha
add
sub
push
cmpsl
push
jbe
adc
dec
dec
add
cmp
test
cmp
sti
fadds
add
cs
inc
mov
cmp
sti
push
add
mov
mov
add
pop
and
jmp
mov
pop
adc
popa
je
fldl
pushf
lds
in
sbb
pushf
pop
jo
insl
pushf
jle
add
movsb
pushf
sbbb
mov
int3
in
add
sarb
mov
or
pushf
fcmovu
popf
stos
je
add
jle
popf
outsb
add
sbb
cli
movsl
add
jns
sbb
sbb
mov
xor
sbb
cmpsl
mov
add
pop
add
or
packssdw
in
jno
icebp
xchg
mov
mov
iret
adc
mov
sub
push
inc
mov
add
add
test
mov
ljmp
sub
push
add
jo
mov
mov
ds
incb
mov
adc
add
mov
cmp
test
rcr
pop
cli
dec
add
mov
xor
out
rolb
jcxz
inc
movq
mov
push
sbb
and
sbb
outsb
add
mov
cld
pop
dec
std
add
fcoms
adc
xor
test
std
xchg
movsl
or
add
fadds
cwtl
loopne
loop
add
inc
add
jmp
jae
iret
icebp
popl
mov
faddl
gs
ljmp
mov
jp
mov
aam
mov
push
mov
arpl
add
pop
pop
add
push
mov
cwtl
fistpl
data16
push
insl
cltd
mov
lods
mov
addb
jns
ret
add
mov
mov
pop
cmpsb
aas
popa
fsubr
aad
mov
sbb
les
add
adc
jecxz
mov
dec
test
mov
icebp
dec
add
sub
out
imul
scas
adc
add
cmp
mov
add
das
outsl
faddp
cmpsl
and
or
shll
scas
jnp
add
adc
cmovns
mov
rolb
add
fsts
inc
add
mov
cmp
cli
xor
lret
jae
push
movsl
cmpsl
gs
outsl
add
push
bound
popf
dec
test
sub
stc
mov
bound
cmp
pop
sahf
sti
and
rcl
xlat
push
add
push
push
inc
enter
jle
sbb
add
add
fwait
ret
add
add
sti
popa
push
push
jmp
out
jnp
push
add
ja
add
mov
loopne
fldenv
pop
enter
dec
add
add
push
inc
add
aam
stos
push
mov
stos
xchg
sbb
sbb
mov
loope
add
adc
add
mov
imul
add
add
jbe
adc
fyl2x
add
dec
add
fldt
xchg
push
or
daa
in
sub
ljmp
add
add
data16
aaa
mov
bswap
adc
addr16
add
mov
push
mov
add
aad
scas
lods
data16
add
push
dec
xchg
pusha
add
jnp
adc
adc
add
call
and
imul
jp
add
pop
sub
lods
adc
mov
ss
pop
adc
orb
mov
pop
iret
shr
int3
scas
xchg
movsl
jp
sub
add
ss
mov
pop
les
xchg
lds
inc
add
add
or
and
push
movsl
add
mov
jnp
fsts
inc
add
jnp
sbb
aas
clc
cld
out
loop
or
loop
ret
lods
popa
shlb
jg
cli
pop
push
bnd
add
pusha
add
dec
add
push
add
add
mov
sub
into
mov
inc
jns
and
sub
shrl
fiadds
xor
push
add
xchg
icebp
loopne
and
xor
add
cmp
insl
lcall
out
cmp
sbb
add
dec
add
or
add
xor
add
add
mov
test
add
rcll
insb
add
pop
hlt
add
jg
dec
add
int3
jmp
ds
add
orb
xchg
jmp
push
add
or
dec
jecxz
in
outsb
add
cmp
bound
adcb
dec
add
xchg
nop
jle
push
jp
cmp
push
divb
repnz
adc
jg
lret
iret
fcoml
stos
add
jecxz
clc
rcrl
imul
movsl
push
jg
std
mov
cmp
gs
imul
ljmp
add
pop
in
cld
orb
add
shl
mov
pop
or
or
rcrl
dec
inc
fsubl
mov
sbb
jge
add
enter
push
xchg
inc
mov
inc
pop
mov
pop
add
pop
mov
push
xchg
push
cmp
or
dec
add
push
xor
xor
add
hlt
inc
add
into
bound
sbb
cs
xchg
jle,pt
push
loopne
sub
mov
sbb
hlt
les
xor
add
sarl
mov
inc
add
jp
mov
std
not
lret
bound
add
add
loope
imul
nop
sahf
dec
add
movsb
cld
arpl
add
pop
inc
movsl
lea
cli
mov
add
iret
mov
iret
jo
cmp
and
leave
mov
andl
enter
scas
daa
out
inc
add
pop
cmpsl
xor
mov
insl
xchg
roll
mov
ja
call
jmp
mov
ret
rcl
mov
jno
cmpsb
push
aam
push
test
sub
stc
test
lods
pop
adc
and
or
xchg
ss
adc
sbb
adc
push
enter
add
stos
inc
popf
jge
push
dec
lret
cmpl
xchg
sbb
push
add
outsl
adc
mov
add
sbb
pop
rorb
aas
std
cmp
imul
jge
arpl
jnp
mov
ljmp
mov
mov
xor
add
mov
add
icebp
and
fcmove
mov
xor
add
es
fnstenv
xchg
rcrb
mov
add
add
outsl
dec
add
jne
sub
lcall
add
dec
add
jo
push
testb
add
and
add
stc
or
repz
paddw
sarb
pop
mov
popf
insl
or
dec
add
add
loop
dec
xchg
add
testb
xchg
mov
pushf
xchg
lcall
push
stc
adc
sti
pop
xorl
lods
cmp
adc
push
push
aas
repnz
mov
out
xchg
fcmovnbe
cmp
xor
inc
add
lods
js
jge
pop
scas
jno
jno
xchg
imul
add
popa
cld
sub
add
fnstenv
sub
jbe
cmpsl
or
sbb
or
ret
je
loopne
xor
dec
test
inc
out
aaa
aas
rclb
pop
negb
push
jge
sbb
add
in
xor
test
icebp
les
stos
push
cmp
mov
push
adc
add
jb
sar
loope
mov
mov
cmpsb
add
adc
mov
pushf
in
rolb
scas
ljmp
adc
add
jmp
lods
or
sub
pusha
add
and
or
pop
lret
xchg
add
lods
fildl
add
mov
std
cmp
pop
mov
or
aas
outsl
xchg
xchg
cmp
cmc
ss
mov
in
jge
mov
mov
mov
sar
lods
mov
movsb
xchg
jo
mov
inc
scas
popf
or
add
loopne
ret
nop
scas
or
clc
call
out
and
stos
cmc
pop
in
insb
add
dec
add
daa
daa
mov
sbb
pushf
aam
add
sub
stos
cmp
add
repz
push
test
push
add
les
sub
or
push
mov
fiaddl
jnp
mov
add
cs
cmp
pop
es
repz
add
stos
int
xor
or
shl
lea
add
add
adc
push
xchg
add
jl
xor
outsl
inc
add
subl
jb
aas
lcall
pop
mov
push
mov
addl
jae
add
popa
rorb
in
ljmp
and
add
mov
pop
jp
xchg
jl
or
add
int3
shrl
add
add
and
shll
and
dec
add
movsl
add
jle
inc
add
add
in
incl
mov
add
jecxz
ds
std
fnstenv
adc
pop
lcall
std
outsl
mov
mov
jae
jmp
jns
jnp
loope
mov
add
xchg
sarl
mov
cmpsl
dec
dec
add
scas
sarb
mull
add
into
dec
add
push
sti
leave
lods
push
jmp
loopne
lods
imul
xchg
sub
les
add
pop
push
adc
add
xor
add
clc
mov
xchg
imul
cmp
xchg
lcall
cwtl
add
pop
mov
inc
sub
imul
dec
add
mov
sub
xor
call
add
push
sbb
int3
cmc
loopne
icebp
and
push
cli
stos
ss
pop
mov
movsb
sub
pop
cltd
push
cmc
fcomps
add
adc
add
lock
add
xchg
sub
add
mov
in
and
mov
or
dec
jmp
pop
je
lea
jge
mov
fwait
movsb
das
loopne
mov
mov
adc
mov
jmp
add
out
je
pop
cmp
repnz
mov
mov
add
subps
rclb
mov
pusha
add
sbb
nop
test
add
adc
imul
xor
xchg
mov
mov
loope
add
das
inc
add
add
jecxz
cld
into
dec
adc
cmpsl
cwtl
mov
stos
ret
leave
enter
mov
dec
lea
mov
adc
mov
mov
ja
clc
popf
pop
push
add
add
shrl
cli
add
add
pusha
add
test
imul
iret
imul
insl
cmp
stc
push
push
dec
add
stos
cmp
arpl
jecxz
inc
add
fdivrs
ficoml
push
cs
fisubl
mov
add
xchg
push
pop
subb
push
aam
ss
jbe
xchg
inc
inc
in
jb
sub
xchg
cltd
mov
add
sbb
add
push
sahf
sbb
je
ret
add
push
sub
add
scas
fisubs
add
push
cmp
add
add
into
sub
fwait
mov
add
icebp
jae
jno
adc
or
mov
pop
mov
add
sub
rcl
adc
jl
pushf
and
inc
add
test
iret
lcall
push
mov
xchg
and
repnz
fisttpl
jge
std
insb
add
cmp
xor
ret
jl
pop
arpl
adc
sbb
jecxz
pusha
add
add
jae
out
je
addr16
dec
xchg
xor
add
xchg
fcmovnb
clc
sbb
adc
aad
mov
mov
cld
inc
dec
outsb
add
jecxz
sti
lods
sbb
jnp
mov
aam
das
das
cmpsb
clc
jo
add
add
add
add
xchg
nop
stc
mov
xchg
add
cmp
stos
mov
cs
inc
add
clc
push
lock
mov
ret
fcomi
scas
mov
stc
rcrl
mov
outsl
or
bound
add
sub
sub
std
int
jo
xor
scas
mov
add
mov
sub
xor
fucom
xor
add
movsb
out
lods
out
scas
add
pop
mov
adc
sarl
push
add
movsb
ss
pop
xchg
push
adc
xchg
fildll
cmpsb
addr16
out
call
add
push
out
and
mov
cmpsb
jnp
push
ja
add
mov
cmp
inc
add
add
mov
mov
mov
inc
add
adcl
dec
andl
fldt
cmpsb
cld
inc
shll
jecxz
adc
add
add
ss
subl
add
and
push
pop
cmp
push
cmp
pushf
leave
test
mov
mov
push
std
js
les
adcb
ret
mov
xlat
inc
add
cmp
xchg
cltd
mov
dec
lcall
mov
add
popa
inc
add
add
inc
jb
scas
sub
sub
add
add
in
lcall
ss
add
add
jecxz
sub
add
or
xchg
enter
addl
cwtl
mov
and
cmp
mov
icebp
xor
mov
cmc
xor
ret
xorb
leave
mov
jle
cmpsl
add
int3
xchg
mov
add
shlb
nop
gs
add
cli
lea
pop
repz
xchg
rorl
imul
fwait
pop
push
movsl
jg
test
mov
xchg
dec
add
jns
inc
add
ja
clc
xor
xor
add
and
adc
ficoms
dec
add
add
das
loope
add
dec
add
leave
cmp
popa
ljmp
lea
add
das
cmpl
aam
ret
movsb
inc
imul
loop
mov
cmpsb
in
add
sbb
stc
jbe
fistl
add
xchg
stos
insb
add
aaa
cs
sti
jbe
add
pushf
sbb
mov
dec
call
mov
pop
cwtl
mov
mov
push
push
add
mov
dec
add
cmp
add
fnstcw
mov
into
cmpsl
cmp
data16
fnstenv
cmp
sbb
add
pop
aas
out
imul
fcoml
add
or
adc
cmp
add
mov
loopne
xchg
and
push
int3
out
and
add
hlt
sbb
and
test
or
outsl
sub
dec
add
cld
movsl
sbbb
jp
div
add
dec
add
add
call
jnp
add
cltd
lahf
or
add
xchg
iret
adc
add
mov
cltd
add
jb
cmp
int
test
lcall
push
inc
pop
std
outsb
add
and
add
out
mov
lret
subl
dec
add
xchg
sbb
sub
or
and
cwtl
dec
jmp
add
sub
push
xchg
sbb
add
adc
out
or
pop
ss
add
and
inc
cmpb
sub
clc
sarl
jnp
cmp
cltd
dec
add
mov
int
mov
popf
popf
add
idiv
int
push
pusha
add
xchg
mov
add
jmp
jnp
add
rorl
pushf
sub
outsl
mov
push
pop
lahf
jns
lea
mov
cmpsb
cmp
scas
mov
ja
outsb
add
lret
ror
mov
and
out
mov
push
sbb
sub
addb
icebp
xlat
aam
mov
adc
repz
jns
add
push
iret
add
jns
shl
push
push
adc
insl
mov
test
call
jle
stc
xor
test
push
mov
add
pushf
fisubrs
dec
out
xor
add
test
mov
sub
and
mov
xlat
mov
pop
mov
sub
in
sub
mov
sti
xchg
jb
or
orl
inc
add
pop
sbb
mov
add
mov
add
sahf
cmpsl
adc
adc
add
xor
and
shll
es
daa
fistpl
jp
addl
and
or
clc
push
nop
insb
add
jb
out
lods
hlt
cmpsb
scas
push
aas
sbb
mov
gs
adc
jecxz
imul
add
mov
mull
add
add
add
inc
add
xor
cld
aaa
dec
add
adc
dec
add
dec
add
ror
or
inc
lcall
push
add
out
sub
popa
ss
mov
push
add
add
loope
and
jl
xor
mov
out
insb
add
inc
mov
add
or
pushf
outsb
add
xchg
out
sbb
lds
mov
mov
mov
cmp
xchg
adc
xchg
mov
movsl
mov
mov
fisttps
adc
and
xchg
inc
stos
out
mov
ja
in
cmp
add
jge
lods
nop
insb
add
hlt
ss
jle
add
and
push
mov
xchg
dec
add
addr16
dec
lods
mov
out
inc
add
add
jno
mov
add
pop
mov
pop
inc
mov
cmp
mov
fbstp
leave
mov
xchg
mull
add
stc
push
add
mov
lret
cmpsl
mov
adc
or
sub
cmp
push
lcall
popa
cltd
add
xor
in
iret
inc
and
aas
loop
xor
inc
mov
lods
out
or
push
add
int3
sbb
cmp
insb
add
ljmp
rclb
sbb
hlt
scas
stos
sbb
enter
or
mov
inc
add
dec
mov
bound
inc
push
cmpsb
sbb
lock
push
add
add
iret
mov
mov
out
mov
jp
push
movsb
add
add
int3
shrb
cmp
add
je
add
fsubl
pop
pop
jle
mov
outsl
dec
add
push
out
add
xor
push
add
aaa
shlb
mov
jl
dec
mov
mov
add
inc
add
add
mov
jo
mov
mov
dec
enter
hlt
lret
add
xchg
push
jmp
pop
cld
xchg
pop
sub
pop
mov
or
dec
sti
loopne
loope
xchg
dec
in
fwait
hlt
mov
scas
scas
in
test
xor
ficompl
jg
pushf
mov
jns
in
cli
push
add
dec
sarb
jbe
std
add
mov
sahf
xchg
or
pop
cmp
shl
jbe
pop
je
mov
adc
out
inc
add
lcall
adc
mov
adc
add
push
mov
push
mov
and
and
pop
push
loop
fldenv
outsl
adc
mov
ds
add
xchg
sbb
add
add
lret
mov
test
jae
aaa
push
gs
arpl
push
ret
xchg
jbe
mov
push
cld
out
push
mov
add
imul
mov
add
cmp
fisubrl
jmp
add
mov
sbb
and
xor
or
pop
mov
aam
xchg
jno
inc
mov
lods
iret
jo
sbb
lods
icebp
movsb
inc
lea
add
dec
movsb
outsl
jg
pop
xor
fldenv
push
cli
inc
out
jns
push
inc
add
jno
rcll
lcall
test
mov
and
pop
test
fdivrl
add
sarl
lahf
inc
add
notl
stos
test
xchg
cwtl
push
aaa
movsl
jb
lret
xchg
lret
jmp
dec
add
stos
xor
lock
insb
add
add
inc
add
push
das
pop
sub
sbb
inc
add
cmpsl
xchg
xchg
or
mov
add
xchg
imul
and
add
aaa
mov
pop
mov
xchg
adc
sbb
sub
fildl
mov
xchg
icebp
adc
add
pop
ret
xorb
push
aam
and
leave
add
fldcw
jmp
add
cmp
xlat
cmpsl
jle
sbbb
les
mov
sbb
xchg
mov
pop
sbb
divb
nop
sar
jo
add
xchg
clc
dec
insl
sub
add
xchg
lock
and
mov
and
out
add
add
add
jnp
lea
cmp
jle
jle
mov
add
push
mov
adc
ret
push
push
shlb
adc
incl
sub
in
cmp
out
repnz
mov
mov
pop
or
jnp
push
sti
jnp
ret
pop
pusha
add
cmp
mov
xchg
aaa
mov
pop
cmp
flds
ds
push
in
pop
out
mov
adc
ret
mov
cli
int
add
adc
iret
pop
daa
daa
jge
test
push
stc
adc
push
push
adc
jmp
push
mov
add
andl
push
sub
mov
and
add
jbe
mov
out
dec
add
ljmp
stos
ret
sti
pop
mulb
inc
addb
mov
test
push
xchg
add
icebp
mov
sub
jns
inc
jno
pop
xchg
rcr
mov
pop
imul
jo
cmpb
add
and
movsb
aad
adc
out
jae
adc
mov
push
out
push
adc
arpl
hlt
gs
pop
push
cmp
add
inc
mov
add
sti
movsl
lea
pop
jne
roll
out
mov
pop
dec
dec
push
popa
jle
adc
mov
xor
add
je
mov
mov
arpl
ret
sbb
sub
in
sub
adc
fmuls
xor
cmpsl
insb
add
cmp
hlt
faddl
jg
int
jo
add
add
mov
scas
mov
jo
stos
dec
lea
add
loope
leave
ja
push
into
pusha
add
popf
ds
out
inc
add
dec
add
mov
in
mov
xor
mov
in
xchg
mov
xchg
cmc
adc
fidivrl
push
cmpsb
cmpsl
xchg
mov
mov
mov
sbb
jle
mov
pop
push
shrb
call
int
adc
popa
lds
add
mov
add
dec
fcmovne
in
cwtl
loope
push
jge
prefetch
or
imul
pushf
jno
push
movb
fbstp
xchg
ret
call
out
cmp
dec
mov
cmp
aad
add
mov
ss
gs
add
xor
pop
fstl
pop
fstpl
add
jo
pop
lret
mov
sbb
mov
out
fldenv
adc
and
inc
add
jbe
add
je
daa
xchg
fmuls
dec
add
mov
test
gs
xchg
and
xchg
pusha
add
cli
psrlq
bound
dec
add
cmc
adc
mov
test
cltd
push
cmp
jbe
jbe
cli
or
mov
jae
add
add
lods
cmc
push
adc
add
mov
mov
dec
add
cmp
imul
sbb
add
cld
dec
call
stc
lds
out
add
mov
xchg
add
sub
das
js
fldl
pop
imul
adc
dec
add
cmpsb
xchg
xchg
lods
sub
add
loop
or
mov
add
enter
test
mov
sub
lret
cwtl
scas
shlb
movsl
lods
dec
dec
mov
or
popf
scas
stos
cltd
in
arpl
mov
pushf
mov
imul
mov
add
mov
int3
pushf
dec
aas
push
add
inc
add
iret
xor
xchg
xchg
xor
add
pop
inc
xor
ds
lcall
jmp
les
add
cmp
addr16
movsl
das
pusha
add
pop
loop
in
add
sbb
inc
add
mov
bound
mov
mov
add
enter
aam
adc
xlat
dec
add
pop
jle
popa
shrb
adc
dec
add
fnstenv
xchg
cmpsl
mov
xchg
aaa
push
cmpb
sbb
js
add
add
jns
mov
cmpb
cmpsb
stc
ret
inc
sub
and
call
pop
cltd
pop
push
mov
cltd
xor
push
sbb
aad
xchg
and
mov
cwtl
lret
insl
jns
and
jge
addr16
jae
jne
add
or
movsb
push
rcl
fdiv
pop
pop
aas
cld
pop
lea
and
daa
and
sub
mov
in
sbb
jno
add
mov
mov
adc
xchg
sbb
mov
pop
aas
xchg
lds
mov
add
loop
cmc
cmp
and
add
mov
add
add
scas
movsl
jg
pop
jns
ret
and
out
loop
xchg
sbb
or
push
rcl
dec
add
mov
test
lret
jmp
jl
mov
xchg
dec
add
scas
add
test
sbb
add
dec
cmc
dec
add
imul
popa
fldl
aas
daa
push
aam
lcall
sbb
in
jnp
xor
mov
add
pop
mov
int3
add
lcall
imul
stos
sbb
xchg
mov
pop
pop
test
enter
hlt
push
mov
sbb
sahf
fcomi
and
xor
push
loop
bound
or
mov
sbb
add
out
shlb
out
cmp
insl
sub
xor
mov
fdivl
push
mov
lock
mov
and
pop
cmp
xor
inc
add
in
xchg
pop
sbb
sub
dec
add
in
push
add
add
xchg
inc
loopne
imul
popf
xchg
dec
mov
sbb
pusha
add
or
cltd
fidivrl
mov
ret
fmuls
roll
mov
add
push
sbb
pushf
les
xchg
lret
rorb
mov
push
ljmp
mov
mov
jbe
push
data16
clc
push
outsl
icebp
xchg
inc
add
add
push
rcll
mov
xchg
in
in
sbb
xchg
push
or
cmc
xor
adc
inc
add
push
sbb
pop
cmp
xchg
cmp
xchg
je
daa
lret
lods
rorl
ja
fadd
out
mov
xchg
jo
xchg
les
add
mov
dec
repz
push
xchg
loop
add
and
add
push
negl
push
push
push
or
cld
movsl
jne
or
xchg
add
cmp
sub
fcmovu
fcomps
sub
stos
daa
rcll
fdivrs
and
iret
and
repnz
daa
negb
mov
int3
and
test
add
sub
cmp
and
cli
jne
andb
int
adc
add
and
adc
jno
ds
mov
loopne
add
out
arpl
jecxz
add
aas
lock
add
mov
add
xor
fcomp
cmpsb
xor
xor
add
xor
jb
lcall
add
fcoms
jl
jmp
addr16
add
push
sub
or
lcall
pop
pop
dec
add
rclb
add
hlt
loop
add
pop
push
bound
mov
add
or
push
shlb
cmpsb
add
lcall
jmp
add
pop
xor
add
hlt
loope
add
lahf
pop
pop
inc
mov
pusha
add
and
fists
inc
and
jb
test
add
mov
inc
pop
ret
mov
pop
mov
sbb
sub
add
idiv
push
inc
add
gs
add
push
add
jb
sub
add
arpl
movsb
imul
lret
bnd
repnz
les
test
pop
shll
xchg
xchg
call
clc
cmpl
cmpsb
jmp
outsb
add
lds
clc
in
andl
je
or
mov
add
sar
jnp
call
pop
mov
test
mov
sub
push
mov
jecxz
or
push
out
popa
test
cwtl
lcall
or
add
imul
jns
les
aaa
add
push
dec
add
mov
ds
add
mov
clc
scas
pop
mov
out
repz
orl
nop
stc
out
cmc
cli
and
cltd
lea
mov
dec
add
add
add
add
adc
cli
or
jmp
and
sbb
mov
pop
adc
jmp
daa
mov
xchg
sbb
nop
dec
push
or
test
push
add
push
mov
rol
push
sub
addr16
pop
lcall
add
cmpsl
bound
inc
push
into
inc
xlat
or
adc
mov
cmp
add
jl
jp
adc
inc
add
leave
cltd
xor
scas
popa
add
add
pop
sbb
lods
push
adc
add
xchg
sbb
add
sbb
add
popa
fisttps
sbb
sub
lods
int3
adc
sub
dec
mov
add
sub
out
lahf
es
jb
mov
add
pop
xlat
mov
mov
pop
clc
hlt
mov
add
cmp
repz
add
std
les
jo
pop
outsb
add
xor
idiv
sbb
push
sbb
rorl
add
out
sub
pushf
sub
pop
and
paddq
shr
push
ljmp
repnz
mov
add
out
outsl
and
and
fimull
mov
jbe
mov
movl
cmc
cwtl
imul
mov
mov
xlat
popa
dec
sbb
add
add
shlb
fisttps
or
insb
add
loopne
adcb
and
pop
fnstsw
aas
lret
les
repz
jns
xchg
push
cmp
mov
iret
add
pop
pop
or
and
add
repz
push
or
fwait
dec
shrl
ss
arpl
mov
je
adc
mov
sub
cmp
push
addl
jp
adc
ret
cwtl
mov
mov
add
or
or
add
lret
or
int
outsl
repz
icebp
mov
sbb
xchg
outsb
add
inc
push
outsb
add
idivb
aad
movsb
xchg
mov
xchg
adc
jns
arpl
mov
call
add
cmp
add
mov
xchg
icebp
cmp
push
repnz
arpl
sub
scas
xchg
cmpsl
decl
adc
sbb
add
cmp
int
lods
in
rep
mov
sub
mov
stc
sub
mov
test
bound
cmp
outsl
jmp
in
xor
and
movsl
mov
push
les
xor
mov
xchg
inc
bound
fsubrl
mov
aaa
out
sbb
add
pusha
add
outsb
add
push
daa
lea
stos
mov
fwait
ljmp
stos
test
push
test
jmp
scas
test
rolb
add
add
lock
or
cmp
call
loopne
or
jns
lret
or
mov
push
ljmp
rcll
push
add
fldcw
int
imul
push
sub
aaa
pushf
or
mov
out
sahf
jno
add
add
pop
sti
dec
add
add
or
xlat
add
decl
bndstx
xchg
mov
sub
icebp
push
pop
nop
sbb
outsl
gs
dec
add
sub
inc
add
out
xor
stc
inc
add
add
sti
adc
mov
idiv
jl
add
cmp
add
jns
in
scas
movsb
leave
cwtl
jnp
repnz
mov
ljmp
in
sbb
out
f2xm1
pop
cmp
push
adc
je
mov
in
scas
and
ud1
jb
add
je
jl
popf
jge
inc
add
sbb
mov
daa
mov
lods
cli
imul
add
into
jg
jb
inc
decl
add
scas
mov
xor
inc
add
and
jo
add
outsb
add
inc
add
add
mov
add
push
pop
xchg
bound
imul
aad
lret
dec
decl
pop
popl
test
add
test
ret
add
xor
in
in
ret
ficompl
sbb
imul
je
jecxz
push
fcmovb
aaa
inc
add
adc
fnstcw
jae
add
leave
mov
scas
stos
jnp
add
add
xor
cli
pushf
std
hlt
ret
mov
and
add
and
xchg
pop
mov
aaa
dec
mov
fsubrl
mov
outsl
mov
pushf
mov
and
jnp
push
bts
pushl
or
inc
add
cmp
lods
lods
push
push
lds
pushf
aas
stos
call
xchg
add
or
add
add
out
inc
add
out
aad
or
iret
sub
rol
inc
jmp
add
cmp
add
repz
dec
add
test
add
xor
nop
popa
and
add
fstpt
shlb
add
mov
repz
add
mov
add
into
and
add
out
repz
sub
inc
add
pop
cmpsl
mov
nop
dec
add
dec
push
je
mov
sbb
out
imul
add
and
mov
test
sub
pop
add
scas
fldcw
lret
es
and
pushf
stos
into
fisubrs
add
inc
mov
daa
das
dec
add
inc
add
xchg
add
les
lods
dec
add
inc
repnz
and
pop
pop
jp
and
in
add
mull
add
stos
icebp
mov
lods
mov
add
pop
shrl
add
out
pop
gs
aad
in
ds
add
cli
dec
xor
jnp
shrl
jg
fwait
push
imulb
inc
lods
dec
add
imul
add
jno
xchg
filds
out
xorl
push
adc
divb
icebp
push
xchg
leave
or
add
add
enter
mov
gs
inc
int3
pop
sbb
sbb
arpl
xor
inc
add
mov
adc
int
jb
add
pop
rcrl
push
ret
push
add
rcrl
add
add
jbe
cld
out
sbb
cmp
outsb
add
insl
subb
push
jp
add
or
cld
adc
or
inc
popf
xorl
add
adc
test
add
std
fmull
popf
jb
mov
jb
jle
ja
sahf
push
add
mov
dec
add
add
pop
jle
jg
icebp
cld
es
xchg
jp
ss
mov
lds
add
dec
add
jne
add
add
add
or
cld
fwait
inc
stos
sbb
xchg
lret
imul
add
test
add
daa
pop
sbbb
into
mov
repnz
out
scas
fistps
push
insb
add
push
mov
push
aad
sbb
lret
scas
mov
sbb
mov
mov
stos
mov
mov
add
sahf
ret
fildll
and
xchg
ljmp
arpl
dec
ss
add
pop
dec
add
add
mov
add
mov
loop
test
dec
ret
or
rcl
cmpsl
push
add
insl
push
sbb
push
add
mov
mov
out
jmp
cli
jb
fsubrl
sub
addl
add
dec
add
ljmp
push
es
jbe
or
jge
add
add
cmpsl
aas
bound
dec
add
fstps
mov
outsl
dec
sub
cld
stc
cmp
mov
push
xchg
fisubs
imul
sub
pop
lret
dec
add
add
cmp
repz
add
mov
das
scas
jne
jg
into
ds
cmpsb
jge
outsl
std
cmc
xor
sub
ss
push
in
das
mov
movsb
add
add
and
jae
sbb
xor
xor
add
add
inc
push
add
add
add
js
push
add
insl
in
popa
xchg
sbb
aaa
aam
xlat
xchg
and
jns
push
sub
add
inc
add
pop
sti
int3
adc
pusha
add
add
pop
and
add
frstor
add
sub
mov
lds
fcom
inc
sub
inc
dec
add
add
add
inc
add
add
jns
sarb
xlat
inc
pop
nop
cmp
sbb
jnp
add
popa
imul
insb
add
mov
inc
add
add
adc
xor
lcall
ret
xchg
pusha
add
mov
rcrb
loopne
stc
cli
fistpll
push
nop
bound
leave
add
insl
fsubrp
mov
scas
mov
das
xor
daa
fnstcw
sahf
and
lret
jns
pmaxub
imul
mov
add
popa
push
clc
insb
add
pop
lock
add
xchg
mov
outsl
out
rcll
out
and
xlat
shll
add
mov
push
jno
sbb
cmc
outsl
pop
mov
fbstp
sbb
mov
les
jae
add
xor
mov
js
cmp
add
add
mov
sbb
fildll
mov
jge
cmpsb
and
mov
mulb
add
inc
add
xor
and
cmp
and
iret
pop
mov
inc
dec
xor
dec
sbb
xor
push
pop
jg
rcr
and
in
sub
ja
shrb
add
or
movsl
popf
fmulp
add
jno
repz
mov
add
sbbb
xchg
leave
or
mov
je
mov
adc
ds
xchg
push
mov
push
add
das
inc
mov
lret
flds
insb
add
stos
pop
push
fnstsw
jle
or
xor
mov
movl
xlat
xchg
iret
dec
add
inc
add
lds
and
roll
add
xchg
sbb
xchg
dec
cmc
sub
fsubp
dec
inc
add
lods
fistpll
add
add
testl
jg
push
add
aaa
add
fistl
aaa
ret
testb
popf
mov
xchg
addr16
lods
adc
jmp
sub
sbb
pop
dec
iret
nop
adc
test
push
lcall
add
out
jnp
fsubrp
and
stos
ja
repnz
cltd
adc
insb
add
popa
xor
add
add
pop
sbb
dec
add
add
aaa
adc
int
cmpsb
stc
bound
pop
xor
sub
or
dec
leave
xorl
mov
repnz
add
xchg
xchg
outsl
sti
cmp
popf
and
das
adc
push
push
mov
and
or
or
cmp
hlt
stos
pop
jns
add
js
jmp
adc
add
xchg
pop
std
inc
outsl
xchg
lahf
daa
jg
dec
xchg
cld
cmpsb
dec
jo
and
dec
add
mov
aam
and
mov
aas
fwait
ja
add
js
add
mov
lret
cmp
mov
sbb
les
out
xchg
lret
arpl
shlb
add
add
dec
add
jmp
add
dec
insb
add
fimuls
fdivr
mov
arpl
rcl
mov
push
add
cwtl
add
push
add
imul
jnp
add
mov
inc
cmp
inc
add
jb
xor
js
adc
in
add
and
xchg
or
fstl
mov
sub
fcomp
adc
push
or
iret
push
cmc
outsl
movsl
xchg
test
cli
dec
dec
add
gs
xchg
stos
mov
rcrl
cli
mov
add
xor
inc
add
lret
adc
mov
add
in
mov
xchg
sub
test
jmp
xchg
fldt
add
add
xchg
mov
mov
cmp
add
add
cmp
aas
pop
or
std
neg
popf
insb
add
xor
outsb
add
add
data16
jl
repz
test
lret
mov
movsb
sbb
cltd
fmull
or
jl
movb
clc
xchg
mov
sti
or
jae
add
scas
push
jb
push
fldt
lods
and
sub
test
sbb
pop
xchg
adc
pusha
add
push
fstl
jbe
jne
testl
orb
inc
add
sbb
inc
or
adc
add
test
cli
popa
fsubrl
push
mov
movsl
inc
add
or
add
sub
in
cmp
mov
sub
mov
inc
sarl
push
mov
jmp
call
or
inc
add
mov
jmp
aas
outsb
add
rolb
js
xlat
dec
aad
xchg
mov
out
pop
clc
pop
lock
les
push
out
add
sub
cmpb
mov
add
ret
add
sbb
add
add
push
add
jecxz
mov
xor
ljmp
add
and
cli
fucomip
jne
sbbl
push
aas
insl
dec
add
add
pop
jnp
enter
stos
imul
stc
xchg
push
add
mov
add
sbb
subl
jnp
push
add
pop
sarl
jne
test
and
icebp
ret
sbb
test
add
addl
adc
aaa
sub
sbb
add
add
add
addr16
test
out
test
dec
jg
and
cmc
adc
push
adc
cmp
jl
ljmp
mov
pop
push
mov
hlt
lock
mov
push
dec
imul
xor
out
xchg
lods
cmp
add
push
add
dec
fxch
outsl
pop
push
jmp
add
arpl
lahf
data16
out
pop
aas
mov
pop
inc
add
jbe
and
mov
mov
dec
cltd
sbb
xor
add
add
add
add
repnz
stc
and
pop
shr
xchg
xor
sti
fidivl
and
rol
jbe
por
pop
dec
add
andb
stos
adc
jecxz
sti
pop
mov
mov
add
pcmpgtw
cmc
sahf
icebp
test
out
je
inc
add
stc
scas
xor
lea
test
mov
xchg
scas
push
add
add
mov
add
rol
ja
and
test
cmp
pop
xor
fldcw
jecxz
inc
push
mov
add
sub
push
mov
fsubrl
add
mov
into
or
pop
jp
insb
add
lods
pop
sbb
in
mov
mov
cmp
jb
jle
inc
add
inc
inc
into
mov
sbb
mov
mov
inc
in
shl
push
bound
lods
xchg
mov
or
and
or
adc
lea
add
aas
pop
mov
mov
in
pop
dec
sub
mov
add
sbb
je
enter
les
cmp
ret
mov
aam
xor
adc
add
sub
in
rorb
mov
mov
jns
add
mov
add
bound
js
add
popa
jno
cld
xor
jne
ja
add
and
add
in
add
in
pop
sub
popa
and
add
cmp
ficoml
cmpl
popa
orb
js
sub
mov
mov
clc
insl
stos
mov
add
gs
or
std
lret
mov
scas
and
mov
jnp
mov
iret
ss
leave
mov
mov
lret
inc
das
sub
sbb
incl
and
adc
add
pop
lret
mov
pop
daa
ficoml
adc
lods
sbb
pop
cmp
or
in
add
xor
iret
cmp
dec
and
cmp
add
mov
mov
adcl
repnz
gs
add
movzwl
push
adc
xchg
rcrl
out
add
add
pop
insb
add
lods
mov
sarb
xchg
stos
dec
or
cmp
ss
insl
xchg
cmpsl
adc
in
xor
cmpsb
mull
mov
rorl
push
scas
sub
mov
add
sarl
add
mov
add
loopne
sbb
add
int
ja
or
orl
push
add
add
leave
push
add
jle
xor
add
mov
int3
jmp
pushf
nop
lahf
mov
cwtl
jg
shrb
mov
push
and
jle
lea
inc
add
add
ja
incl
xor
pop
dec
in
add
fstl
jmp
jo
stos
rcr
clc
push
xchg
testl
add
test
add
sbb
dec
xchg
lahf
add
xor
imul
fsubrl
andb
fstps
add
add
push
mov
scas
popa
test
or
outsl
fcompp
pop
andb
add
add
test
add
add
and
ror
testb
push
imul
pop
js
imull
cld
popa
and
pop
pop
dec
add
add
sub
push
cmpsl
xchg
fcomps
or
push
sahf
clc
cmp
push
loope
repnz
add
inc
pop
test
mov
pop
vmovsd
sub
cmp
push
add
add
pop
iret
outsb
add
mov
jno
fcomip
xor
pop
pop
adc
add
jns
add
add
das
incl
add
xor
out
push
xor
mov
dec
add
mov
sub
add
jb
imul
pop
inc
add
xor
push
and
jecxz
les
stos
add
add
push
jp
xor
xor
js
mov
cld
ret
int
inc
add
pusha
add
pusha
add
jl
lea
dec
aas
lods
or
cld
into
pop
adc
jp
fsubrs
add
adc
cwtl
int3
push
outsl
ja
xor
fimull
add
popf
push
je
cwtl
stos
pop
sub
add
sub
pusha
add
lret
pop
js
int3
mov
js
xor
cmc
inc
mov
out
dec
popa
sbb
sub
pop
call
fidivrl
jle
and
adc
xchg
pop
cli
rcl
aad
and
je
outsl
sub
les
mov
pop
jne
jbe
add
js
int
dec
jg
pop
cli
xor
add
hlt
lds
fnstsw
adc
cli
hlt
and
insb
add
jae
add
add
cmpsb
test
xchg
repnz
std
js
sbb
popf
push
push
add
ret
sahf
cmpsb
clc
cmc
stos
mov
divb
mov
mov
das
aam
mov
aaa
mov
shrl
sub
dec
in
mov
xor
sti
xor
ss
jecxz
add
mov
add
add
shll
dec
fldenv
add
rolb
ds
jl
and
and
sbb
imul
fcoml
outsb
add
int3
ret
scas
movsl
stos
add
cmp
adc
movsl
jnp
repnz
push
or
xchg
out
test
inc
mov
inc
add
aam
sub
mov
scas
and
leave
je
pop
in
arpl
stos
fldl
sbb
pop
nop
and
cmp
adcl
cld
sub
sub
adc
ljmp
pusha
add
lret
add
and
add
out
mov
lods
stos
jae
dec
lahf
pop
pop
aas
lret
in
jmp
aas
imul
xchg
mov
and
adc
jg
xchg
mov
pop
pusha
add
pop
lods
cmp
push
neg
mov
push
sbb
add
add
push
mov
leave
add
lret
sub
cmc
xor
add
in
pusha
add
ss
fbld
jb
iret
inc
add
mov
cmp
add
mov
add
data16
movsb
cwtl
insb
add
add
js
mov
and
test
outsb
add
pop
mov
mov
add
push
mov
scas
adc
add
add
add
add
xchg
xchg
popf
pop
lahf
mov
aad
fdivr
or
or
push
push
mov
add
ret
mov
or
dec
xchg
ret
test
popf
aas
sub
xchg
xchg
cwtl
call
mov
stc
xchg
aam
decl
movsl
fildll
push
add
pop
sub
add
mov
jne
in
sbb
std
shlb
add
pop
pop
xchg
push
add
in
inc
dec
fstpl
and
pop
and
xor
xor
pop
mov
ja
jp
add
mov
mov
jbe
mov
sub
lods
adc
sbb
mov
mov
cmpb
inc
movsb
pop
cwtl
call
ret
shr
jecxz
rcrb
bound
andl
in
lods
lahf
lcall
cld
fnstcw
mov
and
in
mov
outsb
add
repz
xor
ret
add
sub
jg
xchg
rorb
popa
jae
arpl
push
add
cld
lods
loop
and
ret
cmp
clc
or
and
mov
cltd
or
rorl
add
cmp
repz
ljmp
mov
into
insb
add
inc
mov
mov
mov
xchg
or
jne
out
adc
dec
add
sub
sub
mov
ds
or
dec
fwait
mov
ja
add
push
mov
add
ret
popf
cli
in
mov
lret
push
add
add
push
mov
int3
int
mov
insl
roll
xchg
xchg
sbb
shlb
cwtl
shrl
add
les
pop
fstpl
rorl
and
mov
add
andl
outsl
dec
add
popl
add
pushf
cld
pop
cmp
fsubr
xor
add
or
rorb
sbb
roll
add
push
imul
push
frstor
iret
ret
pop
sbb
sbb
adc
push
add
add
in
pop
lret
cmp
add
imulb
add
adc
loope
sub
xchg
daa
pop
dec
rclb
mov
mov
popa
pop
or
push
jg
add
xchg
adc
add
lods
daa
inc
add
sbb
in
notb
loop
leave
sbb
jp
gs
inc
and
int
add
dec
add
add
xor
sbb
dec
or
push
add
bound
loope
pop
mov
push
loopne
les
jge
mov
mov
jno
fidivl
cli
and
sbb
and
div
ds
mov
adc
mov
data16
jo
lock
cmp
mull
outsl
adc
inc
lahf
inc
outsb
add
repnz
jns
into
test
jg
add
stos
cmpsb
add
loope
jecxz
xor
add
add
xchg
jno
cmpsb
dec
add
bound
add
js
jns
and
aad
mov
mov
xchg
jmp
gs
fiaddl
aaa
xor
jl
dec
push
stos
push
xchg
adc
mov
ss
add
divl
sbb
dec
ljmp
add
loopne
cmp
add
in
ljmp
mov
pop
xchg
cmp
lea
pop
in
faddp
or
xchg
scas
fmuls
add
push
jo
jge
and
adc
subl
inc
pop
lcall
sahf
adc
add
divl
out
xchg
add
add
lret
inc
outsl
jnp
testb
lods
clc
and
adc
inc
add
add
addl
sbb
in
inc
or
cwtl
aaa
dec
in
fidivs
dec
in
pop
adcl
add
cmp
daa
sub
imul
mov
fbld
mov
push
call
les
add
push
sahf
cmp
lret
jmp
dec
pushf
jl
jl
scas
mov
add
add
dec
add
jo
clc
sub
insl
cmc
jl
lcall
fbstp
add
outsl
lea
popf
jno
imul
sbb
std
xor
jmp
test
ljmp
into
xchg
call
sub
dec
add
rcll
jge
rol
add
rolb
inc
add
add
add
lock
and
jno
add
lret
mov
fs
sahf
cmp
data16
add
inc
pop
sub
jp
adc
ret
mov
add
mov
test
je
add
addb
inc
add
mov
stos
jno
in
xor
add
pop
lret
cwtl
repnz
add
add
adc
mov
lods
gs
js
pop
cmp
add
sbb
add
lea
add
jne
push
xor
daa
clc
cmp
leave
mov
mov
add
jl
sbb
add
jmp
add
jbe
jle
sti
mov
add
mov
push
in
dec
add
cmp
fs
or
outsl
lds
push
add
cld
add
or
or
dec
add
and
in
pop
jae
sbb
pop
xlat
jl
jp
mov
adc
and
xchg
out
mov
dec
push
loopne
mov
inc
add
insb
add
test
sbb
mov
mov
pand
mov
sub
sub
aaa
je
je
imul
dec
add
fsubrs
shl
adc
out
cmpsb
or
mov
jnp
mov
imul
scas
and
or
daa
jge
add
mov
add
sbb
xchg
sarl
in
jp
fstpl
fldl
add
inc
add
pop
stos
adc
add
loop
lahf
popl
add
xchg
fmuls
clc
cmp
mov
fmul
xchg
xchg
dec
lahf
add
dec
add
xor
add
push
jnp
daa
mov
addr16
xchg
cmp
sbb
jae
add
sti
sbb
xchg
stos
jg
xor
les
add
add
mov
test
inc
jno
add
or
in
addr16
add
scas
loop
add
mov
js
dec
add
jb
pop
test
adc
add
xchg
dec
cmp
mov
inc
les
sub
xchg
lds
int3
sbb
in
or
popf
sbb
add
and
add
nop
add
xchg
push
out
xlat
lcall
push
test
push
add
adc
add
cmp
dec
test
dec
cmp
sub
adc
push
mov
lahf
cmp
ss
mov
aam
call
add
movsl
imull
inc
add
nop
dec
ds
cmpsl
pop
lds
or
jl
repnz
or
fldcw
pop
test
bound
roll
in
mov
roll
add
dec
add
cli
cltd
daa
adcb
push
add
sahf
cli
in
add
adc
add
add
push
add
into
and
sub
mov
add
mov
or
bound
and
dec
add
insb
add
aas
clc
adc
mov
add
jmp
add
mov
push
scas
mov
adcl
add
and
ja
or
dec
add
sbb
push
adc
lret
mov
xlat
or
jb
imull
jb
add
or
adc
rcr
les
push
pop
and
inc
add
fadds
ret
in
jae
inc
push
xchg
ss
sbb
lret
add
xor
add
push
cmp
test
ret
loopne
imul
mov
mov
add
aad
clc
mov
sub
add
xchg
lock
outsb
add
add
nop
adc
bound
add
jnp
add
inc
jle
xchg
inc
xchg
loopne
jno
jbe
add
mov
and
outsb
add
adc
sbbb
movsb
stc
add
pop
add
int3
jecxz
pop
push
shll
mov
dec
into
outsb
add
nopl
sub
insl
imul
les
loopne
add
mov
adc
jp
lock
cmp
add
fisubl
add
rol
cmp
add
add
push
xchg
rcll
dec
pop
xchg
pop
std
push
aaa
ficoml
add
movsl
popf
sbb
mov
add
cmc
push
subb
lods
sahf
das
cli
cmpsl
mov
cmp
in
jo
popa
inc
add
add
adc
mov
or
cmp
push
add
pop
mov
std
aaa
jmp
out
add
repnz
dec
loope
inc
add
into
inc
add
lahf
ror
mov
add
das
mov
xlat
mov
cltd
das
into
push
adc
dec
add
fsubl
add
sbb
xchg
mov
aaa
pop
mov
lods
loope
add
push
jg
les
scas
and
add
pop
rol
stc
pop
mov
add
aaa
dec
add
and
push
leave
scas
adcb
jp
inc
mov
adcl
cmp
add
sub
imul
jge
lahf
imul
bound
sbb
mov
add
int
rolb
add
xchg
mov
pop
fiaddl
jne
mov
cmp
outsb
add
icebp
jae
jno
push
xor
leave
insb
add
and
in
cli
addr16
shlb
push
add
js
aad
loope
add
rcl
xchg
mov
xchg
jge
add
stos
mov
or
mov
rcl
pusha
add
add
scas
out
shl
test
push
push
mov
clc
lea
add
sti
push
lock
mov
pushf
mov
push
cmp
add
int3
xor
outsb
add
add
ret
add
jecxz
loope
inc
cli
mov
pop
popa
test
pop
popa
in
xchg
sub
movsl
fcompl
push
das
mov
xchg
xchg
das
mov
push
call
test
xlat
out
movsl
insl
imul
push
in
mov
add
mov
inc
add
xor
cli
dec
add
add
cmpsb
bound
jae
jp
xorl
mov
mov
ret
cli
or
js
dec
mov
sub
pop
repz
aam
dec
add
add
add
cmpsl
andl
inc
imul
cld
fs
and
and
cmpsl
sarl
stc
imul
in
inc
jbe
jne
add
and
movsl
add
ret
add
add
orb
imull
pushf
scas
or
int
pop
mov
in
sahf
mov
xchg
test
aam
ja
add
test
add
in
les
add
call
cmp
addr16
lahf
sahf
sbb
xchg
add
insb
add
add
mov
fwait
inc
add
pop
icebp
jl
and
add
arpl
jge
pop
mov
flds
lock
lea
inc
add
jb
or
test
cltd
rorl
push
adc
push
pop
inc
add
mov
scas
rcl
lods
loopne
add
ficoms
add
insb
add
add
push
pushf
iret
xchg
hlt
fcomps
xchg
shrb
divb
inc
add
in
xor
movsl
mov
cmp
daa
jg
add
mov
push
xor
ss
mov
adc
lock
imul
jl
loope
xchg
add
add
mov
pop
lcall
test
nop
dec
dec
cmp
pop
mov
mov
inc
in
pusha
add
add
out
xchg
cmp
mov
popa
in
mov
lea
sub
mov
dec
inc
add
jl
adc
repnz
add
push
sbb
inc
out
addr16
gs
rclb
inc
cmp
sbb
add
nop
cmpsl
daa
jnp
adc
add
xchg
shl
shrl
sub
mov
mov
add
out
lock
testb
jo
or
xchg
add
mov
pop
cmp
enter
test
add
push
int3
test
or
in
inc
add
xor
sbb
adc
pop
popa
xchg
in
lret
call
jecxz
outsl
movb
shlb
jae
push
xchg
das
popf
sub
int
insb
add
mov
loopne
js
pushf
cmp
imul
sub
add
int3
inc
add
test
addr16
nop
pop
and
push
push
xchg
inc
add
icebp
aam
mov
mov
int
in
repz
push
xor
sbb
cmp
xor
gs
add
scas
cli
mov
inc
sbb
out
cld
aaa
or
rclb
xor
xchg
out
icebp
jns
adc
sub
pop
and
in
nop
pop
stc
mov
enter
icebp
clc
or
and
dec
aad
dec
in
push
imull
punpckhwd
mov
inc
add
stos
push
add
add
add
aam
xchg
mov
aam
add
and
mov
arpl
jno
sbb
pop
aam
push
or
inc
fsubs
andb
cli
test
xchg
cli
fcos
jb
jne
mov
inc
add
ret
mov
dec
add
add
and
dec
add
rcrl
cmp
mov
jne
push
add
mov
lret
ret
std
xor
mov
mov
fisttpl
inc
stc
pop
ds
jae
sub
and
adc
cmp
jg
aad
add
bound
out
mov
fisubl
imul
push
frstor
add
mov
jp
add
push
xchg
xchg
add
jo
mov
sbb
dec
sub
arpl
pop
pop
ret
mov
push
jno
pushf
nop
std
mov
push
testb
in
rcrb
add
in
js
cltd
aam
inc
out
sbb
mov
arpl
mov
adcb
sub
adc
ret
out
pop
sarl
mov
inc
add
push
js
ficompl
xchg
negb
imul
int
nop
push
repnz
jge
and
in
fstpl
rcrl
and
xchg
pop
mov
rol
sub
cmp
int3
mov
ja,pt
xchg
pushf
pop
cld
push
adc
add
test
pop
cmp
fdivs
add
cmp
cmp
mov
clc
fildl
cmpsl
sbb
repnz
icebp
push
add
xchg
add
mov
clc
in
add
enter
jp
ficomps
out
or
xor
add
dec
add
subl
cltd
inc
dec
loope
shl
mov
icebp
hlt
mov
xor
out
sbb
add
fidivrl
and
add
imul
push
cmp
xchg
push
testl
dec
add
and
add
les
in
adc
mov
cmp
in
push
mov
sbb
mov
insb
add
fwait
xor
add
sbb
mov
add
jle
and
arpl
outsb
add
mov
mov
lcall
sarb
cwtl
es
sbb
and
xchg
push
jno
cmpsb
test
adc
pushf
and
jp
jne
cld
call
add
and
mov
add
inc
pop
mov
outsb
add
mov
mov
jne
fwait
clc
mov
add
push
std
fucom
adc
add
movl
adc
add
add
andb
sahf
ljmp
fcoms
rorb
mov
mov
repz
add
xlat
test
mov
pushf
xchg
cmp
add
and
push
xchg
pop
or
cwtl
mov
xor
lods
pop
test
jbe
xchg
loopne
nop
jbe
outsb
add
xchg
push
addr16
cmp
ja
push
dec
bound
fbstp
add
cmp
loope
xchg
add
mov
lret
ret
pop
jge
adc
mov
icebp
adc
push
xor
jle
fisubrl
cwtl
adc
xlat
pop
enter
cmpsl
idivl
in
insl
mov
sarb
jecxz
cli
cmp
ja
dec
adc
cltd
lret
sahf
pop
push
jo
sub
add
rorb
iret
sub
add
mov
cltd
cmp
test
xadd
lods
mov
add
inc
add
out
imul
add
or
add
fnsave
xchg
js
shll
cmp
or
dec
movsb
shll
out
jge
push
add
add
xor
test
sub
test
xchg
test
push
test
sub
outsb
add
add
add
cmp
xchg
outsl
and
cmpsb
dec
add
add
in
loopne
mov
leave
shrl
sbb
or
pop
adc
inc
test
int
jae
xor
in
push
add
add
push
dec
and
adc
mov
push
sbb
jbe
mov
imul
andl
adc
xor
imul
enter
pop
stos
dec
das
add
add
ret
xchg
dec
add
sub
sbb
xor
add
pop
test
xchg
xchg
notb
add
aas
mov
mov
jbe
mov
out
sub
pop
adc
push
pop
fimuls
pop
jp
add
stc
movsb
sub
andb
xor
inc
add
pop
divl
mov
add
add
cmp
cmc
and
jp
push
mov
andl
add
mov
repz
cld
jmp
xor
fimuls
cmp
add
xchg
int
push
fnstcw
adc
adc
clc
push
push
add
nop
add
add
out
jge
add
stc
sti
loope
add
jl
add
adc
pop
dec
add
or
imul
das
mov
mov
add
ficoms
push
movsb
jge
cmp
add
add
das
sbb
dec
adc
and
shll
gs
mov
push
xchg
mov
cwtl
icebp
dec
mov
rcll
add
pushf
jno
out
fmull
pop
push
outsb
add
arpl
aad
jge
leave
bswap
and
add
xor
inc
inc
add
lock
out
std
add
mov
imul
leave
aas
push
mov
add
cli
cmp
out
sahf
test
pusha
add
or
mov
shlb
mov
dec
iret
clc
mov
rep
imul
sbb
jmp
and
add
and
mov
inc
add
bound
sbb
mov
iret
xor
daa
or
mov
addr16
add
das
cmp
into
jns
xor
jo
jo
ret
aas
inc
add
push
das
push
push
loop
xorl
push
and
add
add
pop
test
cmp
int
lods
aad
jl
mov
fildll
dec
xchg
jbe
inc
add
mov
cmp
add
inc
arpl
insl
sbb
ret
fwait
and
mov
jl
dec
pusha
add
add
sbb
cli
cwtl
fsubrl
not
loopne
sti
aaa
ljmp
lods
into
js
pop
adc
push
add
fisttpll
jno
add
dec
into
jbe
leave
movsb
pop
in
cmp
jmp
cld
call
add
add
cmp
add
and
push
mov
mov
cwtl
imul
cmpsb
pmaxsw
push
cmp
icebp
dec
jl
cmpsb
mov
push
sub
add
shll
jne
insl
aaa
sbb
outsl
dec
rcrb
xchg
fstpt
dec
add
pusha
add
aas
bound
add
js
add
outsl
jp
and
sub
add
add
pusha
add
stos
aas
jno
push
push
movsb
sti
fisttpl
jb
sbb
adc
sarb
or
mov
imul
jae
sub
das
mov
je
out
js
inc
mov
add
jo
rcrl
pushf
mov
xor
aaa
iret
aas
addl
sub
add
push
inc
int3
pop
cmp
les
add
insl
fcmovu
push
mov
mov
add
movsb
mov
and
sbb
cmc
imul
jge
push
pop
sbb
mov
pop
cmp
push
lcall
add
add
in
xor
cmc
clc
add
jge
push
add
addr16
outsl
stos
cld
jbe
sbb
gs
ss
add
in
inc
movsb
mov
movsl
sub
push
lahf
mov
push
add
inc
test
xor
push
sbb
add
mov
sahf
mov
in
ds
pusha
add
in
out
jnp
push
ds
mov
popa
mov
mov
xchg
cmp
push
mov
add
xchg
jno
xchg
adc
sbb
jp
add
and
mov
jmp
int
add
call
add
mov
daa
push
push
enter
jp
ret
sub
test
add
xlat
xchg
mov
std
cmp
cwtl
outsb
add
sbb
jecxz
mov
inc
sbb
ss
add
leave
sbb
insl
inc
mov
cld
mov
lret
mov
test
les
cmc
stos
fucomp
js
adc
add
test
arpl
das
pop
pop
lds
mov
push
scas
jmp
add
xlat
pop
mov
test
outsb
add
add
cmp
sbb
adc
sub
pop
dec
add
test
pop
jp
push
add
daa
jnp
sub
dec
pop
xor
inc
add
es
mov
pop
or
add
sarb
dec
mov
in
push
hlt
mov
sbb
push
out
add
bound
mov
les
test
mov
push
sbb
shl
add
add
inc
jg
popa
pop
inc
movsb
sub
mov
test
add
xor
fldcw
adc
add
inc
popa
aad
fwait
stc
xchg
dec
add
xchg
xor
push
dec
mov
and
add
outsl
mov
add
xor
xchg
cltd
call
out
fsubs
add
xorb
cmp
fstpt
mov
ds
jp
lret
ss
add
jo
mov
loope
sbb
shll
add
add
rorl
dec
pop
lds
data16
outsb
add
and
ss
xchg
add
loopne
in
add
push
xlat
jg
add
pop
push
int3
cmpsl
cli
pop
xor
mov
test
jge
push
mov
hlt
lahf
inc
mov
or
jnp
add
leave
mov
add
scas
sub
xor
shl
jg
in
out
xchg
adc
das
mov
mov
push
mov
mov
mul
push
add
hlt
dec
mov
push
add
pop
inc
add
ss
pop
xchg
push
movsb
pop
lea
shlb
out
sahf
push
imul
lcall
and
mov
shrl
js
ds
scas
subb
or
fidivrs
test
add
subb
and
add
push
movsl
jge
xor
add
test
dec
add
addr16
jbe
scas
sub
out
adc
outsb
add
repz
cmp
add
adc
xor
shll
cmp
push
adc
push
jae
jae
add
adc
inc
add
or
mov
mov
es
inc
xchg
popa
cmp
push
sub
xchg
add
cmp
imul
nop
lods
inc
test
movsl
pop
fiadds
add
dec
add
mov
pop
adc
add
mov
bound
jecxz
ljmp
gs
cmp
lret
sub
mov
into
repnz
add
pop
hlt
imul
pop
sub
pop
mov
sub
xchg
push
or
mov
loop
int
shll
jns
jns
and
cmp
push
mov
pop
inc
cmc
add
loope
mov
int
cmp
out
push
push
add
sbb
add
or
mov
orl
sbb
lahf
enter
pushf
or
pop
mov
sbbb
jbe
xchg
fcoml
mov
lock
test
inc
add
iret
punpckldq
fcoms
outsl
mov
frstor
add
idivb
popf
mov
cmp
add
sahf
pop
movsb
lock
or
mov
add
pop
xchg
mov
and
movsb
cmp
dec
add
ss
jecxz
or
adc
adc
dec
add
test
loop
inc
add
mov
popa
mov
cmp
jne
add
adc
or
aad
mov
jne
pop
pop
int
mov
add
mov
iret
inc
add
xchg
push
add
pop
mov
mov
jg
shll
dec
add
add
rorl
adc
add
aam
aad
pop
pop
pop
ret
cmp
fimull
js
in
decb
pop
xor
mov
test
cmpsl
adc
xor
push
movsl
lcall
shl
scas
sbb
sbb
outsl
mov
mov
add
jge
xlat
imul
mov
lcall
add
stos
push
clc
pop
aas
cmp
jl
mov
xchg
push
add
sbb
xor
dec
or
sahf
xchg
cmp
pop
jnp
scas
stos
adc
add
xor
add
cmpsb
imul
add
mov
int3
push
push
and
popf
or
add
add
aaa
loop
mov
add
shrb
add
mov
adc
jnp
cwtl
push
mov
jle
cmp
mul
xchg
in
addr16
mov
add
push
add
add
mov
add
add
in
jbe
adc
andb
lret
inc
add
push
add
pop
pop
dec
add
leave
xchg
ret
add
sahf
and
cltd
cld
mov
adc
into
ficompl
stos
popa
inc
xchg
lock
add
stc
xchg
out
and
in
add
xlat
flds
clc
fnstenv
ja
idiv
dec
shll
jg
sbb
add
or
add
or
inc
cmp
add
daa
pop
sti
jmp
inc
cmp
adcl
inc
scas
cmpb
js
dec
add
outsb
add
add
jle
fcoms
daa
test
cwtl
incl
lcall
call
jp
add
and
pop
stos
aad
xor
in
addl
push
aad
out
xlat
lahf
sbb
data16
fcomi
mov
add
sub
add
inc
lea
push
mov
jp
xchg
test
loope
xchg
lret
sub
add
push
add
mov
lea
add
lret
xchg
push
add
in
fstl
outsb
add
fnsave
mov
pop
mov
data16
in
sahf
pop
fucomip
cmpsl
lods
jle
jl
jno
mov
pop
movsb
sub
ret
xchg
lods
mov
aaa
pop
cmc
push
adc
xchg
ficoml
or
inc
add
add
imul
out
xor
icebp
xchg
aas
orb
ret
cmp
out
xchg
lea
mov
add
ljmp
add
push
bndldx
fcoml
add
pop
cltd
jp
movsb
sbb
ficoms
ror
fstpt
inc
add
mov
dec
add
ret
je
jo
stos
pop
clc
and
add
ja
lcall
mov
lds
or
push
das
mov
out
or
pop
sub
xchg
cmp
add
sub
sbb
sahf
jne
fnstenv
pushf
sub
xor
into
push
test
jl
add
add
sbb
and
sub
lods
adc
mov
inc
add
add
nop
ljmp
push
popf
dec
add
add
inc
sub
int
mov
sub
inc
add
hlt
xchg
lret
popl
aad
xor
cmp
mov
rcrl
stc
jb
leave
ret
daa
pop
iret
xchg
mov
test
cmovbe
call
stos
xchg
inc
cltd
fstpt
and
push
fisubrs
add
dec
add
sbb
dec
xchg
pop
loop
push
data16
sub
sbb
adc
jne
nop
mov
cmp
ror
xor
dec
add
cmovae
mov
xchg
mov
and
out
shlb
int3
push
movb
push
insb
add
fldl
mov
jae
push
sub
sahf
fmulp
pop
and
lea
fdivl
mov
jg
pop
cmpsb
inc
fmull
add
add
add
add
add
pop
sbb
sub
arpl
add
stos
sub
push
push
add
shr
nop
cltd
negl
mov
mov
and
movsb
ror
mov
pusha
add
mov
fwait
lcall
add
out
enter
sbb
pop
mov
pop
iret
outsl
add
cli
xchg
xchg
push
push
cli
lods
and
subb
jns
add
decl
and
fiaddl
fsts
push
nop
jo
add
sbb
adc
add
jno
pop
outsl
and
or
movsb
pop
inc
add
and
jb
and
xchg
dec
add
dec
outsb
add
in
pop
out
add
sbb
xchg
and
rorb
or
sbb
rcll
subl
lahf
sbb
add
push
jp
test
scas
pop
sbb
add
add
add
rcrl
clc
ret
add
add
lret
lret
shrl
sbb
cli
add
cli
or
inc
add
add
mov
inc
add
mov
cmp
mov
mov
lret
adc
sbb
sbb
sbb
adc
movsl
mov
insl
adc
cmp
push
add
out
shll
sbb
push
add
mov
mov
jnp
fdivp
imul
std
aas
loope
adc
sbb
cmp
push
cmp
cmpsb
fldenv
les
test
data16
mov
shlb
pop
sub
mov
pop
stc
mov
and
push
add
add
xchg
dec
add
and
je
add
jg
movsb
loopne
lock
xor
pop
fucom
xchg
push
add
add
inc
add
push
loop
pop
lods
cltd
xchg
shll
daa
mov
add
fld
hlt
aaa
or
or
cltd
aad
add
mov
add
imul
add
pop
pushf
or
ljmp
ret
cmpsb
jg
fsubrl
repnz
divl
pop
aas
cmpsl
divl
jp
mov
aaa
and
sub
and
adc
lcall
mov
mov
add
mov
sub
mov
xchg
or
push
call
adcb
cld
jno
sub
out
fucom
jl
test
test
rorb
aas
jmp
dec
add
pop
sub
push
repnz
add
pop
mov
add
pop
lahf
jp
test
gs
xlat
mov
sbb
pop
dec
xor
mov
mov
ja
cmp
cwtl
push
fildll
mov
add
xor
cmp
cmp
add
jle
dec
add
cmpb
pop
mov
scas
je
lret
dec
add
aaa
or
sbb
pop
bound
push
push
jno
mov
pushf
mov
mov
leave
inc
add
jp
das
jno
rorl
add
aaa
pop
mov
pushf
pop
jno
jns
stos
cmp
pop
int3
int
xchg
fdivrs
in
add
cltd
xchg
jle
add
icebp
loop
lods
and
cmc
add
popf
and
jl
fsts
mov
out
add
add
inc
add
xor
jp
xor
test
dec
add
mov
mov
add
sti
jbe
add
clc
and
add
stc
les
cmovae
out
loopne
in
scas
sbb
add
mov
adc
lea
popf
lock
inc
add
sub
popf
xchg
push
xchg
push
add
pop
fistl
add
repnz
test
mov
jle
cmpsb
sbbl
adc
loop
loopne
inc
add
enter
push
clc
loope
aas
movsb
add
and
fidivl
cmp
xchg
dec
mov
pop
out
add
xor
add
push
hlt
sbb
xchg
mov
xchg
jbe
add
sub
add
xchg
cltd
cwtl
add
mov
bound
sub
in
imul
fsubr
xor
add
sub
mov
adc
es
sbb
aam
setae
push
add
mov
inc
scas
in
sti
pop
pop
mov
and
lds
sub
xchg
stos
shrl
hlt
adc
dec
lods
cmp
lcall
or
push
push
sub
mov
add
adc
push
add
mov
dec
add
leave
mov
in
jns
cld
pop
movsb
adc
and
mov
pextrw
insl
test
push
cmp
mov
push
enter
push
mov
jbe
dec
add
gs
add
add
scas
jmp
cmpsl
daa
loopne
add
out
mov
mov
add
lret
or
sbb
cwtl
cwtl
cli
lock
add
addr16
add
xor
sub
pop
push
mov
pop
mov
hlt
add
add
add
ljmp
add
popf
sub
stos
dec
add
sbb
and
enter
dec
add
jo
sti
movsl
sbb
loopne
lcall
lcall
outsb
add
add
cmp
pusha
add
inc
mov
push
xchg
xor
fstpl
orb
insl
push
cmpb
xor
add
mov
pop
mov
negl
sub
cmp
lret
push
loop
lret
sub
add
xlat
pop
jbe
add
sbb
cltd
sub
sti
xor
insl
leave
cmp
cmp
test
mov
push
repz
fildll
jmp
add
out
mov
ljmp
sbb
jnp
jne
cmp
mov
in
cmc
pop
testb
push
lds
add
xchg
or
imul
fisttpll
ljmp
cmp
add
xchg
push
iret
xchg
mov
popa
ljmp
mov
mov
inc
add
mov
add
add
add
shll
fadd
and
adc
add
mov
mov
sahf
sbb
add
cmp
add
stos
xor
lods
enter
imul
mov
xchg
shrb
addl
lock
adc
lcall
popf
shrl
add
shrl
adc
data16
fistpll
daa
xor
sahf
test
cs
sub
mov
cld
mov
add
add
rep
push
dec
add
xchg
sub
leave
fdiv
pcmpgtw
sahf
adc
jge
or
shrl
jo
popl
orb
cs
pop
cmp
sahf
pop
rorb
cli
cmc
rorb
repz
inc
add
add
test
mov
scas
xchg
adc
loop
fsubrs
push
ror
cwtl
jl
imul
sahf
pop
movsb
dec
xchg
int
dec
add
jb
inc
add
shll
cld
cli
jle
mov
imul
ss
pop
mov
shll
inc
adc
jecxz
add
pop
push
sub
sbb
xchg
mov
add
jmp
gs
add
insl
fsubl
gs
outsl
test
add
loop
repnz
add
lea
outsl
lcall
or
insl
ret
fidivrl
mov
add
add
add
icebp
mov
aas
int
add
or
jecxz
push
sub
lock
mov
xor
xchg
cld
push
mov
jae
faddp
stc
fcomip
insb
add
mov
aas
push
jo
add
int
mov
push
daa
mov
mov
lds
dec
mov
add
gs
mov
into
mov
mov
mull
add
jnp
add
dec
loop
xchg
or
ljmp
add
and
jg
movsb
in
pop
in
jmp
adc
lret
and
xchg
xor
add
pop
or
mov
add
test
les
push
fldl
bnd
xchg
jb
add
jae
je
lock
and
bound
xor
pop
or
lea
push
dec
add
xor
lds
lds
jl
dec
add
dec
add
pop
sti
fldenv
out
add
sar
out
lret
int3
sub
cmp
mov
push
add
imul
push
sbb
testb
pop
fs
rclb
ret
push
lods
sbb
sub
outsl
clc
jns
scas
mov
repz
and
aad
xchg
mov
repnz
add
mov
add
jnp
add
add
imul
dec
add
ds
jb
and
jo
add
loope
inc
test
aas
lret
lahf
movsl
enter
jge
push
mov
sti
fwait
or
inc
push
push
xorb
and
mov
fdivr
lahf
bound
or
jp
push
add
imul
xchg
and
cli
adc
add
in
sahf
mov
add
shll
mov
mov
add
incl
vmovmskps
mov
dec
insb
add
mov
dec
jns
inc
icebp
jns
cld
sub
add
cmpsl
cmp
or
bound
scas
fidivrl
or
mov
cli
aad
add
cmp
jo
mul
clc
test
inc
add
mov
mov
or
fdivl
repz
in
popf
addr16
mov
add
fdiv
cli
push
and
insb
add
push
add
pop
gs
add
std
shlb
jnp
cmp
push
shll
int
cltd
sti
sub
adc
ds
add
jl
sub
in
mov
mov
lea
les
lods
xchg
xchg
movsb
fdivl
mov
xchg
pop
loop
add
push
lret
lcall
test
stos
or
aad
add
clc
sub
cmp
push
jecxz
jecxz
ret
push
cmpsl
shlb
add
test
add
jbe
inc
cmp
push
test
repnz
jbe
push
adcl
dec
add
inc
add
aaa
cld
fiadds
xor
add
add
xor
adc
add
mov
push
add
mov
add
aad
sbb
cmpsb
sub
je
xor
add
jns
add
inc
stos
jns
inc
add
repnz
nop
sbb
ret
mov
icebp
sbb
adc
add
add
pop
xor
in
and
insb
add
cli
movsb
push
add
mov
mov
and
icebp
out
xor
add
out
add
ret
mov
adcb
movsb
mov
add
call
add
icebp
sub
or
fisubs
pop
sbb
add
out
mov
xchg
inc
add
add
insb
add
jle
push
cmp
call
les
add
fucom
mov
lea
push
pop
inc
xchg
pop
or
add
gs
mov
mov
cmc
loopne
insl
pop
lds
add
pop
enter
sahf
pop
js
les
push
sbb
insl
cli
jns
popa
loop
loop
movq
ror
jbe
int3
mov
das
sub
cmp
cmc
arpl
addr16
mov
xor
add
cs
or
ja
add
addb
xchg
lods
dec
add
or
inc
push
add
sarl
add
ret
scas
mov
lcall
add
ljmp
add
sbb
shufps
loopne
jecxz
add
push
insb
add
out
cmc
add
add
xchg
dec
jle
dec
cli
cmp
mov
lcall
movsb
push
cmc
test
add
inc
add
jg
and
push
repz
popf
push
add
shll
add
jbe
cmp
jp
scas
jg
push
push
jmp
data16
jmp
cmp
and
push
in
mov
pop
adc
stc
and
add
test
adc
xor
in
notb
in
xchg
add
jle
adc
add
mov
push
sub
leave
adc
jbe
inc
mov
aam
sub
add
and
rclb
imull
imul
add
mov
dec
add
leave
mov
pop
lds
add
cmp
fwait
push
test
jge
lods
mov
or
fwait
bound
imul
xchg
movsl
loopne
add
pop
ss
add
pop
dec
add
iret
dec
jns
pop
sub
dec
add
add
cmp
push
add
rcr
pop
or
in
cs
push
add
add
xchg
push
push
add
fldenv
add
stos
popf
dec
gs
jo
add
push
mov
pop
imul
jb
enter
int3
stos
push
cmp
ja
add
xchg
fmull
mov
ss
jae
sub
movsb
out
dec
pop
jmp
mov
mov
in
mov
jo
mov
add
add
pop
repnz
adc
add
xlat
lret
rcl
seto
sti
xchg
xor
or
sbbl
xchg
cld
lods
push
aam
cmp
add
xchg
xor
xchg
add
push
ja
and
in
popf
add
adc
add
push
add
rorl
lods
lds
dec
ja
push
popa
mov
sub
lret
jmp
cld
sub
inc
mov
lock
les
inc
add
rorl
add
add
aaa
add
mov
cmp
pop
cli
mov
push
cltd
and
andb
insl
mov
aam
movsb
dec
add
add
push
inc
add
daa
xor
mov
sbb
xor
subb
out
jne
xchg
sbb
daa
jle
lea
shll
add
add
hlt
mov
xchg
fcomi
jge
cmc
push
dec
lods
or
lahf
xor
adc
mov
jp
cs
loope
xchg
xchg
mov
mov
and
xor
ds
xor
jns
add
push
mov
subl
add
test
inc
add
jmp
mov
fcompp
push
fisttps
adc
nop
push
mov
insb
add
add
xor
test
add
add
adc
sahf
mov
rcll
ret
jp
stc
mov
sub
adc
popa
arpl
add
push
dec
add
mov
add
push
and
test
push
add
adc
lock
fwait
or
pushf
mov
mov
add
dec
add
add
out
test
adc
cmpsb
xor
add
pop
sbb
adc
movsb
xchg
daa
cmp
dec
adc
popf
out
int
dec
add
shlb
rorb
in
hlt
or
add
imul
mov
int3
sub
lahf
jae
push
add
int3
or
jge
push
push
fistpll
loope
add
add
mov
stos
mov
xchg
push
mov
divb
xchg
mov
adc
rcrb
mov
mov
add
popa
stos
jns
sub
sarb
sub
or
jge
jle
add
fwait
xchg
call
push
mov
mov
adc
jne
cmp
adc
lahf
popl
add
movswl
mov
test
cld
cld
hlt
add
out
lret
in
mov
cmp
int
loope
cmp
sub
inc
inc
add
xor
loope
call
mov
out
add
std
idivb
rcrb
add
stos
sub
add
add
in
icebp
repz
push
adc
push
aam
and
stos
aaa
xchg
std
and
inc
add
ret
jle
fldenv
cwtl
ds
lea
add
loopne
inc
mov
adc
fimull
scas
jg
fdivrs
cmp
mov
mov
jb
add
out
sbb
repnz
push
out
insb
add
mov
sar
mov
mov
pusha
add
fisubl
cli
fucomp
pushf
iret
push
or
xchg
arpl
das
leave
xchg
add
and
mov
gs
lret
fldl
orb
lock
orb
stos
sub
daa
in
and
add
and
add
movl
inc
add
test
push
pop
insb
add
pop
cmp
mov
xchg
adcb
add
cmpsb
repnz
hlt
imull
dec
add
fldl
xor
dec
das
push
in
inc
add
push
outsl
inc
add
sub
lret
adc
cli
aam
add
daa
test
hlt
jb
fidivl
cs
clc
fildl
in
mov
sub
push
add
dec
jmp
hlt
rcl
push
pop
ret
inc
add
cwtl
xchg
xchg
stos
arpl
pushf
xchg
fcmovnbe
nop
bound
jge
add
dec
inc
xor
out
cmpsb
mov
in
data16
shlb
scas
push
cmp
int3
rcr
jmp
mov
pop
cmc
adc
jecxz
cmp
jle
or
outsl
xorb
iret
mov
mov
addr16
add
add
lahf
enter
dec
gs
add
push
sar
in
and
mov
sub
je
mov
add
xor
mov
xor
add
pop
fnstcw
std
pop
mov
lret
pop
rolb
sub
cmc
jne
mov
hlt
mov
adc
fcmovnbe
lret
add
sarl
inc
add
cmp
bound
test
lcall
jecxz
add
repz
xor
xchg
or
loop
and
adc
addr16
mov
ret
pop
roll
mov
sbb
popa
dec
mov
and
add
and
inc
add
sub
pop
insb
add
cmp
sbb
xchg
mov
es
mov
mov
clc
test
push
cmpsl
clc
jl
add
cmp
add
mov
ror
add
and
cmp
add
add
add
or
jnp
loope
push
lock
cmpsl
push
fbld
add
test
add
roll
negb
and
xor
jg
loop
stos
cmp
add
out
add
pop
dec
sub
add
outsl
ror
jg
add
sbb
mov
mov
ret
mov
add
jbe
jp
add
sbb
roll
add
add
incl
repz
pop
cwtl
nop
or
add
cwtl
dec
sub
sbb
scas
fisubl
and
pusha
add
sbb
sbb
rolb
dec
repnz
cmp
xchg
pop
mov
xchg
add
in
pop
mov
or
fldt
imul
cmp
aad
mov
addr16
cmp
sbb
inc
add
out
xor
cmp
add
shrl
or
loopne
scas
int3
jo
pop
xchg
enter
add
adc
add
jae
lahf
movsl
stos
mov
mov
xor
add
out
lret
add
stos
into
out
lret
lods
pop
les
xlat
outsb
add
ss
jnp
std
popf
adc
mov
push
dec
and
mov
aas
xchg
mov
push
jo
add
cmp
divb
mov
jnp
add
shr
popa
adc
jnp
pushf
xor
add
pop
mov
cmp
cmpsl
in
popf
pop
xlat
into
mov
cmp
mov
scas
icebp
mov
out
push
push
jo
shrl
arpl
mov
sub
mov
xchg
jnp
add
xorb
pop
out
jae
repnz
jge
jg
pop
mov
mov
or
add
add
lret
jno
fcomps
pop
xchg
and
pop
adc
sbb
mov
or
inc
add
inc
insl
orb
dec
xlat
ja
adc
cmp
add
hlt
nop
cwtl
icebp
adc
cmp
mov
call
cmp
outsb
add
mov
lds
pop
adc
aaa
adc
cmp
xor
sbb
scas
mov
add
fbstp
xchg
sbb
xchg
fiadds
add
pop
repnz
pop
inc
add
add
std
adc
add
addr16
inc
adc
jp
jbe
insl
leave
inc
add
pop
test
lcall
imul
or
add
or
adc
push
lods
xchg
mov
add
jle
add
pop
cmp
cli
scas
or
mov
mov
add
push
add
pushf
pop
inc
add
sbb
outsl
shll
and
cltd
adc
mov
call
add
mov
xlat
cmp
lea
loopne
xchg
dec
scas
les
icebp
add
add
mov
jne
push
sbb
mov
lea
and
data16
add
lcall
insl
sub
add
ficompl
add
add
into
mov
cmp
sbb
repnz
dec
pop
push
add
jmp
sub
pushf
outsl
ja
add
sub
rcr
jecxz
add
cmp
push
sbb
sub
add
jb
add
mov
cmp
ret
inc
add
lahf
rcrl
inc
add
arpl
and
xor
cltd
lods
iret
sbb
sbbl
add
int3
add
mov
out
cmp
sbb
push
or
in
add
xchg
inc
add
sti
orl
nop
dec
add
push
add
mov
add
mov
inc
add
imul
xchg
sub
pop
jo
cmp
push
add
add
and
inc
lods
sbb
mov
mov
jmp
add
outsl
mov
add
cwtl
ljmp
pop
cmpxchg
in
add
pushf
mov
mov
cmp
pop
fbld
push
pop
vmovshdup
mov
add
adc
push
lahf
push
fwait
adc
testb
outsl
orb
jb
test
inc
add
add
shll
push
and
sbb
add
shll
out
mov
sub
lods
cmp
aas
cmp
push
jle
loopne
and
add
gs
ret
cmpsl
andl
jg
add
insl
dec
add
clc
sbb
adc
dec
add
adc
dec
dec
add
pop
mov
add
xor
pop
out
cltd
gs
sahf
add
pop
xor
mov
jle
iret
or
data16
fdivl
int3
mov
loopne
push
add
testb
jge
and
add
or
xor
or
mov
cwtl
das
decl
repnz
hlt
or
mov
mov
mov
sti
inc
add
popa
mov
dec
mov
in
jbe
lods
cmp
jge
add
jno
add
iret
insl
int
cmp
and
sahf
sbb
pavgw
lcall
loop
add
jle
insl
push
lods
or
push
add
mov
inc
add
push
inc
add
lcall
add
fwait
mov
add
and
add
aas
outsl
jp
inc
add
cmp
das
jbe
pop
les
insb
add
out
imul
xchg
dec
add
fs
test
neg
stc
les
outsl
jbe
movsl
xor
lock
add
je
add
add
add
mov
cmpsb
imul
add
dec
jmp
add
cmp
movsbl
fwait
repnz
sub
loope
icebp
outsl
mov
and
ja
add
mov
push
inc
sti
or
and
loop
ret
sub
push
add
xor
pop
and
or
mov
pusha
add
shl
xor
and
add
les
mov
push
dec
add
mov
rcrb
jg
adc
jmp
shrd
push
pop
dec
xor
aad
cmp
in
arpl
int3
xchg
sbb
lods
inc
and
ja
mov
jns
and
and
pop
aad
jmp
adc
add
pusha
add
jp
add
add
mov
mov
push
dec
add
je
add
pop
lahf
inc
js
push
lret
pop
mov
xlat
inc
sbb
repz
lods
cmp
add
int
xorl
jns
cmp
inc
add
sub
fildl
pushf
andb
mov
sub
jnp
cmp
add
dec
add
ss
add
jmp
aaa
call
mov
add
inc
add
das
jne
add
bound
adc
add
push
xchg
or
or
add
xor
inc
lret
bound
mov
shrb
xorl
jecxz
out
xchg
pop
cmp
mov
mov
enter
sub
dec
add
mov
test
ds
adc
fdivs
or
add
and
imul
add
xchg
push
adc
dec
mov
add
shlb
clc
stos
clc
pop
cs
mov
cmc
int
fildl
adc
xor
cmp
movsl
xor
lods
push
pop
lds
add
std
stos
push
cmp
in
in
dec
cmc
jp
test
fwait
pop
jmp
inc
add
sbb
pop
sub
shrb
sbb
mov
mov
out
dec
add
in
int
add
add
adc
sysret
inc
add
into
mov
rorl
add
xchg
cmp
mov
outsb
add
add
or
ds
lret
fnclex
loope
add
jne
fiadds
mov
cwtl
jmp
lret
sbb
sub
pop
jp
adc
push
add
pop
mov
mov
inc
xchg
adc
in
push
into
sbb
ffreep
sub
lahf
mov
movsl
loope
or
fbstp
mov
mov
mov
repnz
add
mov
mov
sbb
lods
pushf
mov
push
js
test
int
gs
insl
popf
dec
jbe
or
cltd
mov
mov
movsb
cmp
ja
loopne
popa
loopne
icebp
sub
or
inc
dec
add
arpl
and
push
sarl
adc
jge
mov
xlat
rcl
stos
or
add
aas
testl
out
mov
movsb
xor
add
add
xchg
push
add
mov
add
xlat
jo
pushf
jbe
push
out
cmp
pushf
or
dec
add
pop
cltd
ss
loop
add
add
dec
dec
push
dec
add
iret
cmc
rorl
add
push
inc
adc
jmp
inc
sbb
add
mov
aam
jecxz
add
nop
add
ret
add
push
icebp
and
lods
xchg
jno
roll
add
repz
jne
add
loopne
sub
sbb
add
pushf
hlt
mov
mov
mov
cltd
bound
mov
mov
mov
add
sub
xor
mov
out
ret
or
shrl
cwtl
jo
xor
inc
addr16
aas
std
add
add
or
pop
add
sub
lret
outsb
add
sti
ret
ret
mov
xchg
fisttps
mov
lcall
loopnew
ljmp
ss
movsb
scas
lret
aaa
xor
rorl
shlb
add
add
decb
aam
mov
mov
mov
mov
add
add
cmpsl
xor
add
pop
mov
ja
add
add
daa
and
sbb
mov
mov
movsbl
ret
and
xchg
test
shr
movsb
out
lcall
adc
ss
pop
sub
xor
imul
cli
ljmp
adc
popf
ret
enter
mov
imul
cmp
int
jmp
pop
adc
add
and
out
cwtl
lock
add
push
jmp
mov
or
add
std
mov
xchg
mov
add
dec
addr16
mov
mov
cmp
add
lds
call
pushf
aas
rorb
add
sub
sarl
cmp
xor
inc
add
sbb
out
in
add
pop
addr16
dec
arpl
leave
sub
outsb
add
mov
push
sbb
jp
sbb
lods
inc
cld
call
add
add
das
out
xchg
ret
add
test
in
mov
inc
add
xlat
inc
add
aad
jl
push
adc
dec
add
add
ret
call
mov
mov
jae
add
xor
add
cltd
js
aas
loopne
cmp
pop
cmpb
adc
mov
xchg
ds
sub
inc
add
mov
insl
ljmp
add
and
fcomps
or
sub
loop
sub
jb
push
jns
add
add
pop
add
enter
sbb
add
lahf
xchg
adc
or
cmp
insb
add
xorl
mov
fisttps
push
int
ljmp
lds
gs
sbb
pop
inc
insb
add
sbb
xor
inc
sub
testl
mov
into
or
cwtl
push
sbbl
mov
and
sub
xor
dec
add
nop
popa
jns
divb
or
sbb
inc
lock
xchg
jmp
add
add
mov
push
les
add
adc
insb
add
xor
mov
xor
add
enter
cmpsl
enter
add
pop
add
xor
bound
loop
lret
mov
adc
xor
bound
fcmovnb
jae
xchg
jl
inc
add
and
add
sub
inc
insb
add
jg
sbb
mov
mov
mov
push
lret
pop
and
push
push
std
rcll
mov
add
out
andl
test
xchg
fnstsw
cmp
jmp
push
add
cmpsb
aaa
sub
nop
xchg
mov
mov
imul
sbb
popa
fiadds
loop
pop
cmp
popa
shl
add
sub
test
add
inc
add
scas
and
add
push
xchg
shrl
sub
xorl
in
repnz
sbb
jb
mov
ss
add
inc
or
add
adc
add
and
jo
cmp
sub
add
pop
sbb
nop
outsb
add
lret
into
loop
fldt
mov
add
xor
filds
out
push
add
xlat
mov
add
add
push
cld
or
jge
jae
jge
or
mov
jecxz
mov
mov
mov
and
dec
out
out
in
jae
stos
sub
sub
int3
imul
pop
jmp
scas
je
add
mov
add
xor
dec
add
jmp
fmull
pop
xor
pusha
add
xchg
pop
jne
mov
mov
cmp
inc
add
xlat
loop
aaa
adc
jbe
lret
mov
lods
dec
dec
add
ret
lea
out
iret
mov
rorb
ficoms
push
sahf
cltd
mov
add
fisubl
mov
add
or
fwait
mov
test
mov
movsb
call
xchg
cmp
mov
hlt
mov
popf
push
xchg
dec
mov
mov
xchg
lea
lret
jb
xor
push
cmpsl
rclb
sbb
shrb
add
inc
loop
sbb
lret
add
mov
ljmp
and
sub
pop
add
mov
adc
pop
lahf
adc
push
stos
adc
outsl
into
xchg
into
xchg
xlat
mov
push
or
bound
outsb
add
outsl
stc
rep
addb
ret
or
aaa
aam
jge
out
xchg
imulb
int
loopne
add
shrl
push
and
negb
dec
dec
add
jg
out
mov
cmp
and
or
push
out
add
insb
add
adc
add
cs
adc
jae
inc
add
leave
out
mov
or
rorl
mov
mov
imul
add
pop
adc
insb
add
cmp
popa
adc
or
pop
iret
iret
bnd
movsl
jmp
movsb
inc
add
call
or
mov
mov
jno
add
cmp
xchg
mov
push
loop
xorb
mov
pop
mov
add
insb
add
rcr
roll
mov
jp
add
adc
mov
fstpl
push
push
add
jae,pt
jns
jnp
jge
jne
mov
shl
jle
pop
sbb
stos
lods
out
lret
add
push
lock
call
pop
jae
ja
mov
adc
cmp
inc
sub
bound
in
and
cmp
hlt
jne
or
shl
das
add
aaa
icebp
addr16
addb
movsl
scas
adc
add
xchg
paddusw
imul
xorb
adc
pushf
js
pop
push
cmp
add
hlt
pop
mov
lea
pop
mov
add
mov
add
dec
add
add
adc
xor
clc
jne
cmc
cld
dec
aam
mov
add
add
enter
xor
mov
pop
dec
push
add
cmp
popf
pop
lcall
jl
mov
jnp
out
mov
ret
push
add
mov
lahf
popa
test
add
cmp
popa
cwtl
and
gs
push
fldcw
add
add
pusha
add
jmp
inc
test
and
jo
inc
add
dec
push
aad
add
lods
test
arpl
mov
add
cli
bound
loop
imul
add
test
insb
add
cmpsb
push
and
push
add
push
mov
push
mov
shrl
repz
das
mov
push
add
into
xchg
inc
mov
movl
add
add
mov
dec
ret
dec
xor
pop
test
ret
xor
dec
pop
mull
and
int
add
leave
and
in
mull
sbbb
scas
outsl
or
dec
inc
adc
imul
ret
or
cmp
add
stos
mov
loop
addr16
sbb
inc
add
insl
je
in
stc
cmp
dec
add
push
inc
add
stos
lods
inc
add
add
fsubs
add
add
adc
movsb
pop
xchg
pusha
add
add
jne
or
add
and
jg
jne
push
add
lcall
xor
ss
add
add
push
mov
add
sub
bound
mov
add
insl
ja
jmp
push
inc
add
rcll
cli
je
or
testl
lods
cmp
jl
cmp
in
sbb
add
jp
test
insb
add
mov
pop
loop
test
push
divb
push
call
imul
out
jne
mov
push
add
mov
add
or
call
cmp
cmp
sub
outsb
add
add
mov
add
imul
cmp
inc
mov
add
sub
mov
lock
jp
lock
xchg
dec
add
add
inc
popa
and
ds
cmc
jb
dec
inc
add
and
fidivrl
out
jle
add
fcoml
iret
ret
inc
std
adc
add
xor
add
out
inc
add
rcl
lds
cmp
dec
xor
push
add
pop
stos
xor
outsl
rcr
add
call
add
mov
mov
add
push
mov
xchg
push
add
dec
aad
mov
push
flds
jecxz
mov
mov
jns
sub
ret
sbb
push
cltd
mov
mov
mov
mov
pop
or
fcmovb
stos
or
cmpsl
pop
jl
test
xor
mov
repnz
imul
xchg
sub
mov
repnz
repz
ds
pop
xor
aam
dec
mov
add
cli
mov
mov
xor
mov
add
mov
jo
and
testb
lods
xchg
fwait
js
mov
imul
add
aas
inc
add
sub
jo
je
mov
roll
dec
add
sahf
addl
push
add
add
jp
in
add
lods
test
leave
xor
das
pop
test
int3
cmp
sbbb
sbb
push
pop
iret
mov
imul
mov
sbb
add
add
pusha
add
mov
add
sub
mov
insl
xchg
sbb
pop
pop
or
test
add
or
jne
xor
xchg
je
cmp
sbb
fwait
in
xor
xor
inc
add
dec
add
out
sub
fisttpll
call
leave
in
aas
not
push
out
adc
pop
pusha
add
pop
ret
out
mov
add
xlat
std
mov
call
sub
cli
xchg
rclb
cmp
push
mov
add
jo
ds
or
aad
add
hlt
popa
xor
xor
xchg
push
std
pop
lret
leave
lea
add
ja
xor
jl
insb
add
add
out
push
mov
insb
add
pop
adc
aad
cmp
pop
daa
cmp
fbld
push
cmp
testb
jns
jae
push
inc
add
add
add
xor
push
pop
call
cmpsl
scas
sub
sar
sub
jno
add
lds
add
jbe
add
add
jecxz
add
fdivrl
mov
add
ja
cmp
out
fisttpll
add
sbb
insb
add
lock
add
out
xor
add
mov
daa
pop
loope
pop
repnz
lock
adc
imul
sub
push
lahf
popa
xchg
int
fisubrl
lds
ret
mov
out
andb
lret
push
add
lea
outsl
fwait
mov
movsl
psubq
lret
add
outsb
add
pop
dec
dec
movsl
dec
add
mov
inc
flds
dec
rclb
push
shlb
mov
out
mov
sub
cmp
lods
add
test
or
add
stos
inc
add
ss
call
add
sbb
cld
loop
add
bndstx
adc
xor
add
pop
cmp
xor
dec
add
stc
add
mov
add
add
inc
not
sahf
push
bound
and
push
testb
add
lods
fimuls
add
loopne
rcrb
test
loopne
pop
lahf
data16
jp
add
add
add
addl
clc
xchg
cmc
and
mov
mov
push
xor
pop
fidivrs
xchg
push
out
mov
mov
das
dec
add
rolb
jns
sub
xor
sub
scas
xchg
mov
sbb
repnz
sbb
add
cmp
cld
pop
imull
mov
subl
add
add
jmp
pop
mov
add
cltd
inc
add
cltd
lds
in
aas
jecxz
shr
cli
push
add
daa
pop
xchg
jb
push
add
lret
cmc
dec
add
sub
add
dec
mov
pop
call
or
leave
mov
push
sbb
neg
popf
in
jl
cmp
cwtl
xchg
cmp
icebp
jge
lret
fstpl
rcl
sarb
mov
push
jno
push
add
clc
cmp
add
mov
add
add
inc
add
repnz
add
mov
les
pop
and
hlt
cmpl
lods
mov
fisubs
pop
add
imul
mov
or
mov
dec
add
dec
mov
add
jno
add
add
add
xchg
div
aaa
add
frstor
sbb
add
test
add
pop
mov
mov
cmp
leave
jae
add
imul
mov
das
cmp
push
add
sti
sbb
test
pop
hlt
add
into
daa
dec
gs
add
mov
add
mov
addl
in
push
imul
sbb
movsb
sub
sti
lods
and
or
add
cmp
add
inc
xchg
je
js
leave
jno
add
mov
incl
mov
push
add
les
dec
add
xor
pop
xchg
lret
jge
cmpsb
into
inc
sub
movsb
sbb
and
add
sar
dec
and
shlb
call
mov
jl
add
jbe
cmp
movsb
mov
mov
pushf
sarb
imul
push
jle
add
add
or
mov
jmp
add
ret
loop
sub
pop
das
add
and
ss
xchg
into
jp
test
xchg
sub
cmp
push
add
xchg
fimuls
inc
add
addb
adc
adc
xchg
xor
icebp
dec
loope
xchg
cmp
divl
mov
addr16
cmc
bound
sbb
mov
mov
rol
fisttps
cwtl
popf
xchg
push
add
data16
mov
sub
into
push
loop
les
mov
aad
loop
inc
mov
fldcw
out
leave
das
fwait
dec
aaa
jp
jmp
out
faddl
xchg
stos
xor
add
test
lock
fmulp
jnp
jae
push
test
push
sbb
outsb
add
js
outsl
aaa
mov
add
cmpsl
jmp
fwait
xchg
incb
jp
add
xor
push
pop
stc
push
add
movsb
push
mov
fbstp
pop
xor
mov
xchg
xchg
test
push
add
mov
mov
dec
adc
pop
sub
sub
jne
add
add
movsb
mov
and
fstps
xor
dec
add
hlt
movl
movsl
data16
scas
pop
lds
add
xchg
dec
cmp
sbb
add
add
mov
xor
div
sbb
fsts
sarl
lcall
jbe
sti
sar
enter
xor
cmpsl
fldt
int3
pop
mov
push
push
int
push
sti
inc
add
std
jb
out
mov
add
iret
jecxz
push
loop
add
fiadds
in
mov
dec
inc
xor
add
xlat
mov
insl
test
aas
fisubs
cli
je
push
xchg
xchg
fmul
fcoms
out
add
inc
sub
loop
xlat
xor
mov
dec
add
out
mov
lahf
outsb
add
add
pop
adc
lods
and
repnz
and
shrb
std
add
sahf
sarl
psrlw
inc
imul
frstor
inc
mov
pop
js
xchg
popa
je
inc
adc
add
fidivrl
cmp
pop
push
ja
gs
add
mov
push
push
adc
cmc
insb
add
rolb
xchg
popf
add
or
pop
cmp
nop
loop
test
int3
xor
rep
add
fucomip
or
in
imul
dec
add
add
mov
add
push
cmpsb
sbb
adcl
in
push
push
xor
movsb
push
adc
adc
repnz
cmc
enter
loop
fdivrs
sbb
sbb
add
xchg
mov
dec
add
add
add
add
scas
inc
add
xchg
bound
pushf
sbb
cmpsb
mov
pop
push
jg
and
mov
xorb
sbb
loope
bound
push
sti
data16
add
push
mov
adc
add
fisttps
popa
cmp
lahf
cmp
pop
aam
repnz
xchg
mov
iret
mov
fmull
jp
add
in
pop
push
jo
cli
mov
adc
add
add
mov
fldl
add
mov
jl
inc
mov
mov
cmp
cmp
add
xchg
mov
adc
push
xchg
in
movsl
testl
add
mov
insl
iret
mov
add
cmp
add
clc
jecxz
add
push
jns
and
imul
inc
add
adc
inc
test
push
fimull
add
sbb
add
insl
cli
inc
and
mov
mulb
adc
popf
add
iret
scas
roll
push
add
testl
fsub
aam
pusha
add
add
je
sahf
imul
mov
mov
sub
xchg
sbb
lods
fcomp
inc
push
add
push
mov
mov
push
mov
add
loopne
movsl
lods
inc
add
pusha
add
xchg
cmp
ficomps
js
add
shll
jno
add
push
into
inc
cli
call
add
push
push
enter
and
movsb
out
pushf
int
insb
add
popa
js
movsl
inc
add
testl
sar
jo
jnp
add
cmp
cmc
inc
add
mov
mov
and
xchg
pop
lock
mov
xor
cmp
or
jle
fists
repnz
jle
add
add
data16
add
add
add
pop
fsub
test
add
pop
fildl
loopne
shl
gs
add
push
sub
adc
mov
mov
pop
movb
cmp
inc
add
xchg
add
push
push
jne
jl
pop
sub
cmp
in
jbe
push
add
leave
mov
jge
out
insb
add
stos
mov
add
out
mov
mov
add
mov
jns
inc
fldcw
jp
push
cmp
imul
add
dec
add
mov
mov
ret
sbb
push
sub
xchg
insb
add
daa
pop
or
vmwrite
pushf
fidivrs
test
stos
inc
add
stos
movsb
xchg
jne
mov
add
pop
mov
add
add
mov
pusha
add
into
icebp
test
data16
mov
or
je
or
jnp
pop
shll
movsl
out
and
add
movsb
pop
lea
add
xchg
shrl
add
ja
jae
imul
jecxz
add
sub
sub
insl
and
mov
xor
dec
add
jno
xor
xlat
add
mov
add
inc
add
or
dec
clc
adc
xchg
mov
add
cmpsl
add
xorl
add
cld
mov
out
bound
filds
popf
xor
lahf
push
test
mov
movsl
js
add
add
mov
mov
inc
add
cmp
mov
lret
sub
add
jl
idivl
out
int3
jb
xchg
es
icebp
ret
mov
lret
data16
push
pop
aaa
pop
rcrb
add
out
push
xor
insb
add
pop
insl
out
add
popf
mov
add
shrl
add
mov
ljmp
add
xchg
dec
fldl
movl
add
lods
cmp
jp
xchg
add
stos
cmp
sahf
sub
dec
mov
movsl
stc
sub
shl
push
sub
roll
fstpl
add
add
adc
xor
push
mov
or
into
pop
push
add
ret
ljmp
dec
push
movsb
mov
mov
mov
dec
add
repnz
sbb
add
subl
or
or
cmp
or
adc
ds
and
test
fidivl
add
add
out
mov
repnz
pop
scas
add
pop
dec
jb
add
or
loopne
jne
add
sahf
mov
sub
dec
mov
add
or
push
cmpsl
pop
push
cmpsl
dec
sbb
add
and
ret
pop
fsubrs
leave
inc
cmpb
xchg
mov
push
insb
add
cwtl
mov
bound
stc
sub
lfs
add
add
add
loope
push
jp
mov
movsbl
mov
push
add
add
lea
push
push
movsl
mov
loopne
add
add
outsl
mov
add
add
std
rcl
popa
add
dec
add
push
int3
rcrl
add
push
enter
cmp
out
add
mov
xchg
adc
add
shll
add
dec
add
add
add
arpl
mov
mov
add
sub
mov
add
mov
sub
cmp
sbb
decb
add
or
cmc
nop
push
aaa
sbb
mov
daa
pop
add
cmp
jle
imul
add
outsb
add
cmpsl
mov
jb
jmp
into
cmpb
add
xchg
jmp
xchg
into
pop
cmp
clc
cmpsl
mov
cmpsb
xchg
in
int
dec
add
lahf
in
xchg
push
mov
mov
jae
pop
add
and
es
ds
gs
add
mov
scas
inc
push
dec
fidivl
push
ss
aam
js
jmp
inc
inc
add
add
push
stos
jle
push
mov
add
daa
stos
jns
mov
add
arpl
fdivrl
add
sub
int
mov
cli
lret
sbb
lds
cmp
das
imul
sub
dec
add
add
lret
jnp
or
xchg
pop
test
sub
fistps
inc
add
and
movsb
repnz
or
inc
add
pinsrw
or
jb
pop
mov
jo
add
gs
stc
push
push
mov
es
fcmovnbe
ljmp
loopne
mov
push
imul
add
ds
pop
jg
pop
adc
test
jecxz
cmp
fstpl
add
mov
add
cmpsb
mov
test
scas
pop
bound
repnz
push
mov
rclb
add
lock
sbb
push
ds
add
add
adc
pop
push
das
mov
adc
push
add
add
cmc
xor
std
xor
push
mov
notb
daa
sub
frstor
icebp
sbbb
call
test
ja
mov
add
aad
adc
cmpsl
dec
add
inc
pop
rcr
add
pusha
add
repnz
add
leave
addr16
ror
mov
mov
test
jp
push
mov
sub
sub
push
sub
xor
sbb
mov
fidivl
dec
add
adc
or
movsb
sbb
pushf
mov
dec
add
add
cwtl
pop
inc
add
add
add
add
sbb
jbe
add
lods
jge
lds
add
rolb
movsl
push
sub
addb
stos
jmp
xchg
imul
cs
adc
arpl
and
add
gs
mov
or
dec
add
js
loop
mov
add
add
cltd
jge
adc
push
sar
cmp
inc
mov
mov
shrl
dec
mov
mov
add
repz
scas
addr16
sbb
clc
imul
stos
pmaxub
jno
mov
dec
add
add
jns
push
sbb
flds
add
pop
inc
add
adc
add
mov
sarl
push
jnp
add
jg
lea
lcall
pop
xor
adc
ffreep
pop
mov
fnstsw
inc
add
pop
je
add
dec
add
or
xchg
mov
jnp
movsl
addr16
into
sbb
jne
pusha
add
xor
dec
add
fmull
stos
xchg
repnz
enter
add
ds
mov
sub
push
test
imul
cmc
push
test
mov
lahf
scas
sub
rcrl
mov
ss
aaa
dec
xchg
jnp
insl
push
faddl
add
bound
jle
add
pop
pop
pop
dec
add
pcmpeqd
push
sbb
mov
andb
pop
jnp
insl
out
add
into
mov
or
add
into
insl
notl
test
inc
push
fidivs
add
cmp
roll
mov
add
sbb
in
mov
add
cmpsl
cltd
add
cmp
push
mov
mov
jmp
decl
mov
cmpsb
scas
and
xor
xchg
mov
vmaxsd
adc
es
add
adc
std
inc
shlb
xchg
sti
test
sub
int3
pop
add
cwtl
sbb
mov
cmc
hlt
cmp
gs
pop
dec
add
cmp
scas
cmpsb
pop
les
inc
add
ret
aas
or
add
mov
imul
or
push
jae
add
movsl
insb
add
scas
into
inc
add
scas
addr16
adc
xchg
jle
jo
and
add
pop
data16
push
enter
add
mov
jno
mov
xchg
test
xlat
mov
adc
pop
mov
sub
jne
add
add
push
add
add
add
push
sbb
mov
xchg
sti
pusha
add
mov
insb
add
stos
push
and
lock
cmc
aam
add
in
jg
int3
inc
lret
jmp
repz
loopne
lcall
mov
push
xor
push
jecxz
add
mov
test
in
aas
sti
xor
pop
mov
loope
inc
add
in
xlat
dec
sahf
dec
sub
cmp
adc
seta
inc
add
push
add
pushf
adc
cmp
scas
je
and
push
stos
push
loope
mov
mov
add
pop
cmp
out
add
sub
test
add
xor
test
mull
xor
cwtl
lods
cmp
test
add
fidivl
and
mov
leave
cmpsl
jg
add
jle
clc
aaa
mov
push
mov
push
add
dec
add
aam
add
outsb
add
cmpsb
mov
add
int3
test
movsb
mov
sub
aas
jmp
xor
push
icebp
rol
cmp
pop
lea
cmpsb
subl
add
test
sti
cld
xlat
mov
fmuls
jns
add
xchg
push
aas
ja
loopne
lods
mov
dec
add
jns
jb
push
pop
imul
cmp
add
push
mov
bound
or
sbb
stos
test
add
movsl
nop
andb
hlt
stc
xchg
pop
gs
scas
lret
or
lods
mov
hlt
push
outsl
push
mov
inc
nop
xorb
or
hlt
rolb
out
mov
and
sub
into
xchg
mov
pushf
and
data16
out
adc
ret
dec
mov
test
add
adc
inc
add
xlat
fcmovne
add
scas
cmpsb
sbb
les
fsubrl
add
dec
add
mov
aaa
push
fdivs
pop
or
xchg
out
and
in
add
iret
test
push
add
add
inc
add
mov
add
adc
lahf
insl
xor
sub
push
js
push
add
add
in
in
xor
pop
ja
add
fildl
mov
je
int
push
call
pushf
add
xchg
sub
test
call
outsl
mov
add
fwait
aad
loop
pushf
jnp
fwait
or
adc
push
xchg
aam
push
cmpsb
imul
ds
inc
add
div
in
add
mov
inc
add
xor
add
jno
inc
sub
mov
xor
cwtl
and
xor
inc
add
aad
add
movsb
nop
inc
insl
dec
add
movsb
push
popa
inc
push
lea
sti
lret
and
out
sub
add
add
xchg
out
push
out
orb
pop
imul
vmovapd
add
nop
and
sbb
test
mov
ret
and
jb
aas
ret
scas
notl
icebp
or
movsl
and
int
jnp
cmp
vhaddpd
adc
mov
push
out
inc
lcall
imul
inc
sbb
add
popf
add
adc
mov
test
jb
test
pop
xchg
mov
movsl
shl
lcall
add
dec
add
dec
add
add
cmp
iret
shlb
imul
adc
push
xor
ss
xchg
mov
fidivrs
pop
jge
add
stos
popf
push
mov
add
sub
lret
movsl
cli
jge
add
outsl
pop
sbbb
lret
add
and
cmp
in
sbb
mov
mov
jno
mov
mov
add
test
cmp
clc
nop
push
sub
and
or
loopne
push
lods
rcrb
pop
adc
add
mov
adc
repnz
add
or
adc
fists
iret
or
gs
mov
add
add
lret
add
dec
add
xchg
in
sbb
call
lret
xor
scas
mov
add
sti
lods
insl
sbb
jg
mov
incl
mov
mov
lcall
add
inc
add
add
inc
add
add
add
hlt
fcompl
xor
pusha
add
mov
mov
cmp
imul
add
test
add
or
dec
jecxz
enter
jb
adc
cltd
mov
inc
add
add
add
add
das
add
es
add
xor
pop
adc
sbb
add
adc
mov
sbb
add
lods
test
push
add
outsl
insb
add
add
cmpsb
out
pop
dec
add
pop
ja
mov
jg
add
jne
mov
add
jns
fisubl
mov
mov
ret
lods
orb
sub
push
jnp
dec
insb
add
movsb
sti
inc
and
sub
stos
mov
fistpl
jge
inc
add
adc
popf
subl
push
xchg
aas
xchg
mov
add
and
rcl
jmp
add
add
test
int3
mov
jbe
dec
mov
add
inc
push
int
mov
not
mov
add
add
inc
add
sbb
jae
adc
inc
mov
out
and
jp
sub
jge
xor
cmp
in
add
repz
fists
sub
pop
add
in
xchg
sbb
dec
add
fsubs
daa
adc
sub
jl
and
cld
mov
out
pop
jno
jb
jno
insl
popa
or
lea
movsl
out
sti
std
loopne
pop
cld
aaa
xchg
movsl
pop
daa
cmc
or
xchg
mov
cwtl
outsb
add
mov
push
add
add
dec
insb
add
int3
mov
cmp
in
bnd
into
mov
call
push
and
scas
fisttps
shlb
lods
test
add
add
aaa
mov
add
xchg
je
arpl
incl
xor
repz
inc
fidivrs
cld
or
jnp
dec
add
negb
aad
outsb
add
adc
mov
stos
pop
shll
add
sub
sbb
or
sbbb
mov
shrl
add
add
sbb
inc
add
push
enter
mov
adc
xor
jbe
add
add
nop
call
xchg
imul
pusha
add
loopne
pop
xchg
mov
xor
int
cmp
aam
xor
or
mov
add
push
inc
or
add
test
push
pop
pop
popl
adc
push
jg
mov
jecxz
xchg
andb
pusha
add
add
mov
repnz
jae
add
fcoms
dec
sub
rorb
orl
push
inc
aad
scas
popf
mov
lock
mov
jecxz
xchg
sub
xor
ds
jl
test
add
hlt
jno
pop
in
jmp
inc
aas
xchg
or
lret
jbe
pushf
inc
push
add
xor
fists
xchg
cmpsl
and
jl
lahf
adc
inc
add
pusha
add
xchg
icebp
mov
lea
repnz
scas
and
cmc
insl
ret
addb
add
add
add
mov
call
pop
outsb
add
fsub
sbb
std
xchg
adc
push
rdpmc
sbb
add
add
or
mov
add
add
jne
sub
mov
loopne
mov
add
push
mov
ret
or
fildll
out
jnp
gs
add
popf
pop
or
adcb
lahf
mov
jp
pop
sbb
or
adc
ffree
pop
push
and
add
jae
pop
pop
dec
add
pop
xchg
jmp
fidivs
fmuls
cmp
ja
pop
jne
xchg
sbb
fdivp
cmp
rol
inc
andb
sub
jae
popa
xchg
or
mov
pop
ss
out
neg
jne
pop
push
js
sub
mov
dec
std
mov
xor
test
jmp
cwtl
popf
add
ret
lds
add
sbbl
pop
rolb
aam
shll
pop
pop
pop
std
sti
mov
popa
push
push
pusha
add
add
xchg
fistps
shlb
stos
cmc
shll
fsubrs
add
and
xchg
fdiv
dec
add
and
in
mov
cmp
add
or
filds
pop
fstpl
fnstsw
add
mov
dec
xchg
cmp
add
fdiv
popf
jecxz
roll
adc
mov
mov
mov
lea
idivb
or
push
add
insb
add
out
mov
aad
sti
mov
and
push
jmp
nop
insl
push
add
xor
xchg
arpl
inc
add
in
xchg
xor
mov
lock
mov
add
push
mov
mov
cmp
adc
adcl
daa
aam
add
add
inc
add
repnz
jbe
add
lret
fiaddl
pop
push
test
les
insl
cmc
decl
add
lds
pop
std
sbb
jge
int
add
xchg
stc
je
add
push
fistpll
lods
inc
fmuls
xchg
stos
sub
push
xchg
mov
mov
imul
in
insb
add
mov
sbb
stos
push
and
cmp
pop
jecxz
sbb
rorl
arpl
add
in
mov
ljmp
gs
clc
xor
add
inc
and
add
rol
push
push
add
jne
div
arpl
mov
and
xor
add
jne
sub
mov
jo
xor
fmull
pop
mov
dec
ret
sti
sahf
fbld
pop
sbb
mov
popa
xchg
loopne
add
and
lods
mov
popf
add
jg
cmpsl
dec
add
and
xor
add
xchg
incl
call
loope
adc
mov
add
cli
push
fimuls
mov
call
shl
daa
shlb
push
mov
push
mov
jb
jno
push
add
int
daa
mov
jnp
and
call
shll
gs
testb
and
push
add
lcall
add
add
cmpl
inc
add
jbe
repz
test
mov
push
add
or
jnp
jnp
out
pop
mov
xor
cmp
mov
add
int
lea
pop
dec
add
cs
adc
aaa
push
add
stos
dec
pop
pushf
fldt
lods
rcl
ds
push
inc
inc
add
xor
int3
dec
and
gs
xchg
imul
arpl
xor
adc
jno
addr16
xor
xchg
int3
sbb
add
and
pusha
add
enter
add
inc
add
push
addr16
cwtl
js
bound
cwtl
mov
aad
sbb
xchg
addr16
add
cmp
add
mov
jb
ss
and
add
dec
add
add
hlt
and
add
mov
and
jno
hlt
rclb
addr16
xor
mov
in
out
pusha
add
add
sub
cld
pop
cmp
test
in
enter
scas
es
arpl
and
jne
push
push
add
add
enter
pop
sbb
lds
out
sbb
shrb
push
inc
mov
out
test
push
add
movsb
es
aam
add
xchg
mov
aas
mov
add
testl
loop
cmp
add
mov
lods
in
push
loop
cmp
inc
add
cwtl
rclb
jae
ljmp
sbb
out
xor
mov
inc
out
aam
sahf
je
out
lcall
add
mov
shlb
add
sub
dec
add
imul
mov
imul
repz
pop
orl
cld
mov
add
add
mov
movsl
mov
add
push
lods
adc
cmp
inc
xor
and
push
or
dec
add
jb
dec
sahf
lret
sbb
add
stos
fisttpl
jmp
lds
aas
xlat
in
aaa
add
jne
aas
cmp
and
cli
pusha
add
cmpxchg
mov
lcall
pop
les
pop
daa
pop
insb
add
sub
cld
push
es
add
in
or
enter
sub
in
inc
add
add
add
sbb
hlt
push
repz
and
arpl
clc
test
into
pusha
add
add
sbb
mov
add
sub
mov
outsl
cli
dec
xlat
inc
enter
jnp
add
inc
add
pop
clc
mov
daa
jge
add
add
push
mov
aad
dec
add
orl
inc
add
out
add
add
adc
sub
lret
pushf
fldcw
sub
dec
mov
mov
cmc
loop
add
mov
pusha
add
loopne
hlt
out
decb
sbb
mov
xchg
mov
ffreep
cmpsb
sbb
add
outsb
add
add
or
test
repz
push
push
add
add
cmp
mov
add
add
jns
cmpsb
or
adc
les
add
les
pop
lret
add
das
or
cmp
test
ds
test
xlat
jnp
mov
cmpsb
mov
add
daa
push
mov
fucomip
and
into
fsubl
mov
mov
lods
xchg
or
lcall
gs
or
mov
cmp
cwtl
std
push
add
in
sbb
xchg
das
xor
dec
add
add
mov
push
mov
mov
ret
add
ret
pause
push
test
popf
out
pop
mov
jo
push
rorb
in
mov
rcrb
out
mov
lret
fisttpll
std
loope
jb
adcb
push
jmp
add
dec
add
add
js
add
add
popa
clc
mov
inc
add
stos
cmc
mov
add
or
pop
xchg
add
jp
add
repnz
add
xor
sub
or
not
imul
inc
add
add
mov
mov
add
dec
stos
icebp
leave
sbbb
pop
insl
insb
add
inc
xor
out
add
sbb
add
push
add
add
and
in
pop
rcl
xchg
inc
in
adc
test
lret
pop
enter
add
pop
test
jae
movsl
push
add
push
insl
flds
sahf
sahf
lea
mov
dec
add
push
mov
imul
pusha
add
cmp
ss
lcall
int
mov
xchg
jns
dec
add
out
xor
and
and
add
pop
fs
sbb
sbb
fldenv
add
adc
popa
cmpb
rcrb
test
sbb
mov
sti
outsb
add
add
int
sbb
rclb
add
cld
mull
add
pop
mov
push
stc
out
add
push
sub
pop
aad
data16
rcrb
push
add
dec
add
mov
add
lcall
add
data16
ss
dec
add
inc
insb
add
mov
inc
adc
mov
js
push
and
or
adcl
call
stc
mov
jno
out
sti
and
lods
inc
jb
mov
shl
jl
in
add
out
fldl
add
insb
add
mov
cwtl
pushf
push
loopne
push
dec
and
lods
add
in
mov
sbb
add
rcrl
adc
test
sub
lea
in
xchg
push
add
or
movsb
mov
pop
adc
mov
add
int3
sub
push
ss
notb
xor
cmp
add
pop
in
les
adc
jmp
add
sub
jl
push
xchg
pcmpgtw
cmp
dec
add
add
mov
add
stc
jne
add
loope
out
inc
add
jnp
aad
lock
lods
addr16
jmp
andl
add
add
jge
into
stos
jg
popf
testl
xchg
movsl
mov
sub
cmpsb
cmp
add
cmp
jns
push
add
or
shrl
add
repnz
push
dec
addb
lahf
mov
adcl
shr
and
pop
jg
pushf
or
add
shll
lock
push
jmp
add
imul
sti
dec
outsl
push
imul
shlb
outsb
add
stc
out
xchg
lret
cmp
sub
addr16
mov
into
in
sbb
xor
jge
pushf
mov
in
and
out
jp
leave
dec
add
loop
imull
dec
in
cwtl
mov
mov
cmp
jb
out
pop
inc
add
je
lahf
fwait
nop
pop
mov
xchg
notl
sub
push
imulb
add
add
mov
xor
pop
idivb
jge
xchg
lock
fcomps
cld
add
or
cmp
aad
jns,pt
popf
test
inc
add
mov
in
dec
sti
cmc
daa
testl
mov
pop
imul
loopne
and
push
fnstsw
pop
push
test
sbb
ja
fidivl
loop
in
icebp
aad
scas
stos
movsl
xorb
loope
and
in
xchg
add
push
xchg
dec
orl
dec
add
enter
lea
les
fidivl
inc
int
push
dec
add
in
pop
push
lds
call
cmp
rorl
repnz
sub
insl
out
jp
push
cli
xor
rcll
dec
and
sti
orb
sub
std
lds
sti
cmpsl
std
jge
add
orl
cmp
add
stos
or
out
enter
in
or
lds
jno
inc
add
out
inc
test
xchg
pop
adc
cmc
cmp
sbb
or
lret
inc
add
gs
add
add
je
jle
mul
add
dec
add
aad
cmpsl
mov
dec
roll
movsl
inc
mov
lret
loope
scas
andb
int
mov
inc
add
add
test
loop
xchg
sub
pop
andl
js
add
adc
fisttpll
add
pop
dec
mov
mov
imul
push
in
adc
out
mov
scas
mov
push
pop
jmp
lds
bound
dec
push
lods
pop
cltd
imul
cmp
add
rcr
jo
xchg
push
dec
inc
add
inc
or
xchg
lret
pop
test
int
jae
inc
add
addl
mov
add
lds
cli
pop
jae
nop
sub
xor
sub
adc
add
test
add
push
dec
add
aam
pop
fisubs
add
cs
ds
push
in
xor
jne
into
dec
and
mov
mov
rclb
inc
or
imul
pop
xchg
popf
add
cmpsl
and
xchg
cmp
dec
cmpsl
cltd
jmp
shrl
test
pop
cmp
and
mov
xchg
jbe
sub
xor
adc
push
and
sub
bound
lods
add
ret
stos
sbb
insb
add
mov
add
mov
je
sbb
push
add
and
mov
jo
add
add
add
ljmp
stos
in
imul
xchg
xchg
mov
add
cltd
loopne
scas
jg
in
ja
xchg
lret
xchg
in
out
test
or
sahf
jno
pop
call
sub
cmp
add
jmp
add
add
sarb
aam
inc
add
add
dec
add
adc
add
add
add
iret
divl
pop
add
jge
fwait
mov
loope
inc
add
es
js
arpl
sbb
scas
jmp
pop
push
jl
push
add
popa
fisubrs
imul
aaa
adc
sarl
push
movsb
pop
bsr
add
in
shl
xchg
mov
lret
ret
lods
push
into
adc
aaa
xor
mov
out
add
adc
dec
leave
shrb
mov
dec
add
into
inc
add
adc
enter
ds
das
add
data16
add
insb
add
add
add
mov
outsb
add
movlps
pcmpgtb
aad
sbb
aam
fwait
sub
cli
and
push
imul
inc
add
add
mov
call
ja
and
movsl
ret
cwtl
add
or
scas
xchg
dec
pop
mov
in
add
mov
or
jo
add
add
stos
jns
pushf
dec
add
or
xlat
fcoml
xchg
mov
jg
adc
dec
xchg
jp
lock
lea
fcomps
bound
lods
cld
mov
pop
out
jns
jge
decb
add
cmp
aaa
jl
mov
or
push
cli
add
add
lods
je
lock
insl
xchg
cmc
xor
rcll
cmpsl
les
pop
pop
aad
add
int3
add
icebp
rolb
jge,pt
sub
sahf
add
mov
add
dec
add
lods
push
sti
sarl
fwait
and
add
movl
push
add
ret
popf
mov
jae
mov
lahf
jl
in
loop
arpl
mov
pop
cmpsl
mov
fldt
cmpsl
fdivp
bound
push
inc
add
das
pusha
add
jle
mov
dec
add
add
add
add
mov
ret
add
jp
sarb
cwtl
push
mov
les
mov
sbb
aas
int
imulb
mov
adc
or
pushf
sbb
xlat
xlat
inc
add
pop
out
int3
mov
xor
add
add
cmp
cli
iret
pop
push
mov
loopne
jae
jns
imul
sub
inc
dec
add
jo
push
lods
mov
and
pop
or
add
fildl
add
sbbb
pop
call
insl
sarb
sbb
jb
outsb
add
inc
add
fldenv
xchg
cmpsl
jge
cmp
inc
add
xchg
mov
popf
cli
add
add
clc
and
push
test
add
mov
pop
pop
in
add
call
lds
lock
jno
add
add
jg
cvttps2pi
pop
rcll
leave
or
add
lcall
lea
fisubrl
pop
xor
mov
jmp
je
pop
mov
or
dec
and
xchg
imul
frstor
mov
ljmp
add
cs
mov
cltd
test
outsb
add
xchg
jge
out
add
insb
add
in
sub
cmpsl
inc
jge
mov
imul
ja
cmp
cpuid
mov
imul
fcomp
inc
add
cli
fsubp
bound
nop
int
jno
add
push
out
outsb
add
xor
lahf
mov
fiadds
js
adc
add
mov
push
add
ja
mov
cwtl
cmpb
or
sub
jmp
add
mov
sbb
xor
ljmp
push
push
outsl
andb
add
negl
fisubrs
push
add
inc
roll
stc
xchg
sahf
test
cmp
js
add
add
cltd
sub
xor
mov
into
into
into
adc
add
adcl
shll
cmp
outsl
pop
and
ds
sub
aam
ja
add
call
stos
into
add
or
add
inc
add
mov
iret
sbb
insl
sahf
push
add
inc
movsl
into
mov
in
adc
call
add
jb
add
sub
jmp
or
xchg
pop
mov
push
imul
add
jg
mov
xchg
lods
xchg
ret
lods
or
xorb
mov
shll
aad
sti
movb
pop
or
pop
gs
add
add
add
mov
mov
add
xchg
out
add
xor
xor
jo
mov
pop
aam
in
add
xchg
or
adc
lret
pop
in
js
sbb
sub
sarb
int3
outsl
cwtl
push
push
add
sbb
sub
cmp
jne
or
cmp
outsl
sbb
jb
imul
add
add
mov
inc
iret
mov
test
imull
push
cs
sbb
mov
fisubrs
or
dec
push
cmp
test
les
cmp
mov
add
adc
addr16
adc
cmc
mov
add
add
jmp
pop
jbe
pop
dec
add
hlt
arpl
int3
mov
pop
push
out
inc
mov
add
sti
sbb
add
add
add
add
sub
jns
push
jp
in
cmp
repnz
add
or
xor
shlb
outsb
add
add
jnp
pop
data16
or
out
jp
and
add
sub
aam
add
lret
and
xor
test
fcomps
scas
cmpsl
adcl
jnp
sub
add
popf
xchg
sbb
scas
or
jmp
mov
add
fldl
addr16
xor
test
call
xor
dec
gs
mov
das
vmread
add
out
xchg
ret
gs
mov
dec
push
cmpsl
clc
add
mov
outsl
lcall
add
xchg
xor
lods
dec
pop
fwait
jmp
pop
sbb
bnd
dec
pop
adc
jnp
rcr
popa
dec
add
sub
aam
xor
sahf
jae
jle
jns
in
mov
xlat
mov
repz
add
cmp
sbb
inc
aad
add
imul
inc
ds
lahf
push
and
add
jns
xlat
push
ljmp
in
mov
ja
pop
mov
cmp
lods
sahf
xchg
jecxz
cmp
push
xchg
inc
ret
mov
mov
orl
aad
xchg
addr16
sub
inc
gs
lods
or
push
int3
push
imul
outsl
ret
inc
and
xor
bound
add
dec
sub
pop
jge
jno
add
add
add
pop
outsl
stc
add
fistpll
movsb
testl
mov
pop
mov
lea
lret
pusha
add
inc
add
or
cli
dec
add
xchg
xchg
adc
add
add
dec
mov
ror
fadd
push
add
divb
add
js
loop
inc
ret
punpcklbw
movsl
dec
add
dec
xor
mov
mov
pop
mov
pop
mov
bound
call
add
inc
pop
mov
insb
add
flds
add
jae
rorl
and
adc
pop
push
add
adc
inc
add
scas
into
pop
pop
mov
add
in
test
add
nop
lret
cmp
es
nop
popf
push
add
add
int3
push
mov
cld
jbe
ss
iret
xlat
mov
cltd
mov
jl
ds
insl
movsb
jnp
movsl
enter
fstps
in
pop
jp
ss
mov
cltd
jno
add
dec
pop
add
popf
mov
and
add
loop
in
icebp
shr
sbb
in
and
add
pusha
add
add
dec
add
imul
jge
lock
inc
xchg
insl
sub
cmp
and
cwtl
rolb
mov
mov
lret
inc
lahf
enter
and
inc
add
mov
test
jo
mov
out
jp
jecxz
add
push
xchg
mov
outsb
add
adc
fwait
or
imul
push
add
imul
lahf
cmpsl
or
adc
push
sub
pop
in
jecxz
or
dec
add
xchg
push
repnz
roll
add
dec
push
stos
out
xchg
test
cmp
icebp
lds
and
cwtl
pop
lods
push
ret
pop
jo
push
out
xchg
push
fists
test
sbb
push
pop
mov
mov
sub
int
inc
movsb
das
cmp
or
and
mov
add
fldl
add
popf
fsubs
add
and
add
pop
cmpsl
ret
or
lret
pop
das
repz
cmc
mov
add
sub
lods
imul
sahf
shrl
mov
mov
pusha
add
add
popf
push
dec
aas
cmp
inc
add
hlt
cltd
cmp
adc
add
out
fsubs
into
dec
dec
lahf
jp
adc
pushf
mov
repnz
add
jbe
ja
repnz
cmp
push
push
mov
add
adc
add
xchg
mov
add
adc
loop
mov
dec
add
inc
add
pusha
add
add
mov
push
mov
xchg
icebp
push
icebp
mov
add
adc
icebp
imul
adc
pop
loopne
add
mov
add
insl
pushf
daa
dec
add
mov
add
addr16
mov
sbb
push
pop
pushl
fucomip
add
clc
scas
lock
jae
add
pop
outsl
in
mov
inc
mov
xchg
lods
pop
lret
lret
lock
aas
outsl
xor
push
sbb
dec
add
mov
cmp
mov
fcomi
imul
mov
sbb
mov
pop
cmp
jae
add
cmc
mov
cltd
adc
sub
push
sub
lock
adcl
scas
mov
jno
jb
jnp
bound
ljmp
mov
stc
mov
shll
lea
add
cmp
imul
jg
mov
popf
sbb
add
or
std
adc
or
sbb
mov
cmpsl
inc
add
add
addl
out
out
call
add
inc
insb
add
sbb
aaa
cmp
ds
cmc
fistpl
pop
cli
jle
wrmsr
insb
add
add
add
insl
test
jne
mov
repnz
fidivs
mov
push
add
mov
mov
shr
ret
jmp
add
add
int3
repz
mov
add
dec
add
dec
add
ret
test
nop
aas
je
add
rol
arpl
and
sub
xchg
or
cmp
lods
test
pop
not
adc
sahf
pop
add
pop
xchg
adc
dec
add
inc
add
mov
add
mov
mov
sbb
cmp
add
repnz
jg
out
in
ret
inc
cmp
add
arpl
fidivs
add
xlat
xor
aad
add
pushf
js
pop
inc
andl
loope
push
dec
popa
data16
pop
shrb
mov
sbb
dec
std
jmp
add
mov
xor
fidivs
inc
mov
jmp
sbb
in
ljmp
add
clc
cmpsb
or
sub
out
mov
xchg
jmp
pop
sub
cmp
add
mov
add
shlb
jbe
fbld
inc
add
gs
xor
in
shrl
imul
adc
xor
rcrb
add
inc
add
push
xadd
or
lahf
cmc
add
test
sbb
add
push
mov
pusha
add
push
mov
ljmp
dec
add
mov
jb
std
push
insl
lock
out
pop
cmp
ja
mov
scas
pop
mov
pushf
dec
add
adc
rcrb
jb
xchg
subb
pop
xor
cmp
lahf
push
jg
rcrl
add
add
mov
pop
sub
xor
add
or
push
cmp
cmpsb
xchg
jmp
data16
sti
lret
and
pop
or
mov
mov
xor
jmp
sub
jmp
pop
scas
add
mov
movsl
dec
add
add
in
mov
pop
xchg
les
pop
push
in
pop
sbb
lds
push
popf
andl
push
mov
jnp
xchg
xchg
lcall
pop
add
mov
sbb
add
in
out
in
adc
add
add
js
mov
pop
arpl
xchg
ret
jp
mov
xchg
call
nop
and
inc
add
daa
pop
cmp
nop
mov
pop
flds
mov
mov
add
ds
lret
les
lcall
ja
sbb
movsb
sub
lods
mov
pop
popf
test
gs
cmp
xchg
xlat
cs
das
and
mov
jb
arpl
js
aaa
iret
in
icebp
xchg
add
mov
sbb
pop
clc
icebp
pop
divb
push
add
sbb
popf
mov
test
adc
xor
popa
pop
jb
mov
rorb
fiadds
fimuls
call
mov
jecxz
add
xchg
mov
mov
popa
mov
sub
push
cmp
push
fdivs
flds
hlt
mov
mov
jnp
or
push
add
inc
push
inc
nop
cmpsb
lret
test
or
sbb
sbb
movl
sbb
addr16
addb
jmp
inc
add
mov
jns
push
lahf
lock
arpl
incb
push
add
xor
mov
out
jne
xlat
iret
cltd
push
mov
mov
mov
rorl
jae
ja
or
xorl
add
mov
stos
scas
js
adc
add
xchg
sub
sub
mov
add
ljmp
xor
shl
into
sub
or
add
xchg
outsl
gs
sub
pop
mov
dec
add
cmp
repnz
push
add
lods
sub
gs
and
add
rclb
shl
shrb
test
inc
pop
adc
mov
sub
jae
mov
fsubr
sti
sbb
pop
sub
adc
pop
sub
dec
mull
inc
add
sbb
adc
ljmp
inc
cmpsl
or
add
fisubrl
fmulp
icebp
cltd
xchg
add
push
sbb
stos
xor
addr16
mov
stc
lock
mov
lods
and
loop
test
mov
ds
hlt
xorl
add
test
add
and
cmp
add
dec
add
sub
sub
repnz
add
add
inc
add
push
push
sub
xchg
jb
and
out
cmp
cli
lahf
xor
pop
xchg
imul
inc
add
mov
sbb
cli
xchg
je
icebp
xchg
out
pusha
add
daa
jne
lods
mov
out
add
sub
out
or
test
add
jecxz
mov
fld
inc
add
and
adcb
push
test
add
pop
cmp
sti
xchg
cmpsb
mov
gs
js
sbb
adc
jl
jbe
add
nop
int
mov
and
in
xor
lcall
data16
addb
sbb
inc
adc
pop
in
jns
jnp
xor
outsl
fnstcw
xor
fwait
push
fstl
sub
xor
outsb
add
and
shll
xchg
out
xlat
gs
bound
inc
dec
add
adc
fldl
sbb
add
pop
mov
xchg
test
leave
push
jns
mov
in
adc
mov
std
ffree
jno
sub
adc
inc
mov
aaa
pop
pusha
add
inc
mov
mov
push
sahf
mov
or
add
mov
add
add
xchg
add
out
std
cmpsl
xlat
xorb
test
add
jle
push
dec
pop
mov
mov
rclb
cmp
ret
push
push
mov
clc
xor
xorl
add
enter
mov
jbe
outsl
out
lea
dec
dec
fdiv
sub
push
fyl2xp1
mov
push
sbb
in
add
add
mov
and
add
add
cltd
stc
test
push
push
sbb
add
test
push
sbb
out
ljmp
cltd
nop
add
fcompl
add
add
add
add
add
repnz
mov
sbb
mov
push
cmpsl
imul
insl
clc
sbb
int
add
fdivl
movsb
mov
inc
push
mov
nop
ss
sahf
mov
pop
icebp
mov
aad
iret
enter
add
test
jae
sub
xor
mov
sub
pop
jne
repz
aas
mov
sbb
xor
rol
add
insl
roll
dec
add
jmp
or
jge
pop
pop
dec
or
add
dec
add
inc
add
pop
out
ja
rorl
add
cld
mov
daa
xchg
xchg
sbb
xchg
add
mov
cwtl
ds
std
shrb
movsl
gs
lret
andb
push
movsl
jecxz
dec
cmp
cltd
sub
add
jne
add
sbb
cli
sub
add
add
mov
ds
sub
add
xchg
addr16
scas
lods
xor
ljmp
fdivr
jmp
aam
cmp
and
call
mov
imul
dec
or
fstpt
add
add
sbb
mov
add
repnz
add
mov
xchg
loopne
repnz
loop
mov
out
ret
repnz
ds
in
cltd
in
and
scas
scas
or
daa
push
jmp
je
cmp
je
xchg
jecxz
and
js
jecxz
hlt
xchg
push
cmpsb
pop
mov
xor
add
xchg
je
add
andb
add
dec
add
mov
add
pop
lods
faddl
das
in
mov
adc
int3
arpl
dec
xor
ja
fwait
in
jne
mov
push
push
add
maskmovq
push
xor
out
add
sti
pop
and
fwait
pop
loopne
stc
imul
xlat
fidivrs
out
outsb
add
push
add
int
testl
adc
jmp
jl
js
inc
loope
cmc
jne
jo
sarl
add
fstpl
imul
xchg
lea
add
clc
push
jmp
int
inc
add
and
add
cltd
mov
aaa
popf
lods
push
pop
test
jge
pop
sbb
test
sub
cmp
jbe
push
inc
add
out
xor
add
jl
int
inc
add
add
pop
sub
sub
and
les
inc
ja
dec
dec
adc
repnz
cli
cmc
and
cmp
add
mov
in
cmpsb
rclb
test
jb
dec
add
mov
add
mov
sub
rcrl
setnp
sub
pushf
pushf
cmp
imul
aaa
xchg
jne
lahf
cmp
xor
cmp
and
xor
movsb
sub
lock
cmp
jne
insb
add
or
lcall
or
and
xchg
add
add
add
ds
sub
add
outsl
mov
jg
inc
push
pop
cld
cmp
dec
mov
dec
xchg
loope
xchg
movl
psadbw
int3
pop
dec
ja
inc
add
call
je,pt
add
mov
lret
repnz
add
add
dec
add
out
and
and
jno
add
mov
iret
adc
pusha
add
xchg
int
jmp
cmpsl
mov
add
mov
jb
ds
into
add
loope
lret
insl
jbe
inc
add
jb
scas
aam
cmc
inc
mov
mov
fsts
testl
imul
or
lods
push
cmp
mov
sub
add
sub
adc
add
add
lods
subb
adc
pminsw
cmc
push
add
dec
gs
xor
adcb
cld
push
pop
jo
add
jmp
mov
aaa
mov
jecxz
xor
ljmp
outsb
add
add
push
loopne
lret
movsl
mov
inc
jp
add
add
leave
xor
insb
add
pop
fdivl
jbe
dec
sbb
dec
add
jmp
cld
in
adc
add
sub
mov
jns
fistpl
aam
push
call
xor
xor
jmp
test
sahf
mov
cmp
scas
out
subb
cltd
mov
aaa
inc
pop
sub
mov
sub
sub
leave
dec
add
popa
and
stos
adc
sbb
add
test
pop
adc
or
mov
push
xchg
inc
add
pop
insb
add
or
add
or
cmp
push
or
push
add
mov
jne
shll
push
mov
loope
loope
dec
add
daa
pop
int
inc
das
sbb
scas
ficoms
jle
movsb
inc
add
loopne
xor
add
mov
jne
cli
mov
mov
ret
mov
mov
daa
jl
cmpsl
insb
add
gs
insl
pusha
add
xlat
jae
mov
repnz
mov
sub
repnz
add
call
les
pop
or
cltd
cltd
movsl
jno
add
add
add
mov
push
into
sub
aam
jnp
ret
aad
jg
mov
lock
adc
iret
xchg
ret
fists
add
xchg
ljmp
push
cmp
jns
loopne
bound
xchg
cmp
add
lret
cld
out
pop
xchg
lahf
add
dec
add
arpl
ljmp
xchg
and
popf
pop
icebp
lea
add
mov
dec
add
idivb
and
data16
insl
mov
add
lret
add
inc
push
stos
push
xchg
pop
test
loopne
icebp
aas
adc
jle
das
mov
add
aad
pop
gs
mov
decb
aam
inc
add
adc
movsb
sub
lock
and
mov
aam
sbb
out
add
ljmp
ret
std
enter
ret
mov
push
insb
add
push
div
push
test
cmp
or
push
mov
nop
and
rcl
dec
mov
iret
and
sbb
repnz
pusha
add
mov
push
shrb
scas
sub
fs
mov
insl
popf
aaa
out
lret
fwait
dec
add
mov
push
fwait
ror
sub
lea
add
lret
mov
out
addr16
dec
int
pusha
add
pop
push
sub
mov
mov
jb
fdivrp
jg
cmp
das
sub
sbb
add
leave
out
push
mov
ret
jns
fwait
cmp
push
add
in
or
loopne
shrl
cmp
pop
call
in
add
jp
mov
rdtsc
push
lahf
xor
out
jno
add
add
jp
sub
mov
sub
aas
mov
or
into
inc
add
scas
ds
fstpl
add
movsb
sub
dec
test
movsb
outsb
add
aam
ljmp
jge
pop
dec
sbb
add
xchg
inc
icebp
push
mov
jmp
dec
js
add
and
idivl
dec
add
sub
xor
xlat
inc
add
xor
movsb
or
in
ret
mov
les
imul
jl
add
inc
pop
push
add
mov
push
lret
hlt
aad
das
stos
enter
push
sub
sbb
sub
int3
and
push
jb
gs
test
into
imul
scas
sti
dec
add
movsl
xchg
push
in
push
add
pop
jg
into
or
mov
add
js
mov
fsubr
and
xchg
xchg
fwait
cmc
sub
std
pop
mov
aad
jbe
push
add
xchg
and
testl
jb
add
ret
loopne
pop
out
cltd
xchg
fucomip
mov
add
add
jmp
inc
test
add
fstl
xchg
movsl
nop
test
add
xor
jo
repnz
out
std
data16
mov
inc
mov
push
inc
add
lea
add
add
outsl
pop
adc
stos
push
jns
push
int3
inc
add
jb
ror
pop
movl
int3
mov
add
adc
es
mov
fadds
add
repnz
mov
bswap
ja
xchg
pushf
test
insb
add
shl
outsl
test
cmp
repnz
xchg
int
in
je
cmp
mov
mov
sub
loopne
pop
enter
pop
cmp
add
jae
add
mov
ficoms
iret
inc
decb
and
mov
jecxz
pop
outsl
shr
push
iret
pop
sub
mov
add
in
out
imul
adc
sbb
leave
mov
arpl
adc
add
add
stos
into
dec
rorl
int3
mov
add
arpl
inc
add
push
xchg
sub
sti
dec
lods
inc
jmp
rorb
add
add
xchg
add
adc
sub
or
dec
add
inc
add
add
inc
add
add
sbb
add
rcrl
xlat
jge
sub
or
add
dec
add
jg
pop
aas
cmp
hlt
sub
cmp
add
loope
mov
ljmp
push
add
jno
add
lret
cmpsb
xlat
loope
cmp
jmp
in
pop
fldcw
xchg
out
out
mov
add
jne
jle
add
jle
pop
int
test
sti
pop
out
div
mov
add
cmp
lods
sbb
rol
std
out
ret
ret
mov
and
int3
pusha
add
add
dec
push
lock
pop
push
insl
lahf
sbbb
add
stos
or
mov
xor
arpl
and
push
aas
mov
adc
add
ja
mov
add
jae
jno
inc
add
dec
add
xchg
cmpsb
xchg
and
add
jnp
or
popf
lods
sub
jmp
inc
push
outsl
sub
or
stc
lret
sub
popf
ljmp
add
push
dec
leave
dec
add
xor
out
popa
outsb
add
pusha
add
arpl
add
adc
vhsubps
sbb
aaa
xchg
add
lods
bound
pop
or
in
lret
sbb
adc
out
int3
fildll
cltd
lcall
pop
scas
xchg
jp
jg
xlat
into
xchg
push
push
pop
jge
add
xchg
add
pusha
add
add
sub
std
or
adc
cmpsl
adc
fldt
aaa
add
mov
or
jnp
dec
lds
lret
push
add
push
xchg
mov
add
insl
nop
mov
stos
mov
push
or
and
push
sbb
add
cmp
popa
daa
daa
push
cmpsl
shlb
pop
jecxz
mov
hlt
pop
jne
cmpsb
adc
pop
xor
pop
xchg
add
mov
aam
dec
add
pushf
add
xor
xchg
xor
in
into
pop
mov
cmp
jecxz
add
lods
or
cmpsl
jl
add
pusha
add
les
mov
and
add
xchg
dec
je
ficoms
jl
jp
scas
add
ret
push
add
jae
gs
dec
dec
fldenv
mov
div
sti
xchg
pop
int
insb
add
mov
dec
add
addr16
out
add
cli
movsb
insb
add
jns
das
decl
add
adc
into
andb
mov
andl
repz
pop
and
shr
pop
xor
jnp
arpl
call
xor
mov
outsb
add
arpl
lods
into
das
fdivs
sbbb
push
xchg
jmp
jle
repz
pusha
add
add
into
out
sub
fadds
mov
test
mov
mov
add
daa
dec
sahf
mov
xor
mov
ret
bound
add
insb
add
adc
or
add
add
add
dec
add
gs
dec
xchg
insl
sbb
fmuls
insb
add
cmpsl
xor
out
in
lret
pop
lret
sbb
pop
add
icebp
jne
mov
jb
add
ficompl
js
adc
into
adc
and
add
adc
in
movsb
xor
fmull
int
adc
or
cltd
mov
pop
icebp
xchg
loopne
add
jge
xchg
repnz
jmp
fstpt
xor
lock
leave
into
call
call
js
loopne
cli
bound
add
sub
add
push
add
push
loop
pop
cmp
rclb
sub
arpl
call
xlat
sub
popf
shlb
add
add
dec
add
or
inc
add
mov
inc
add
add
rolb
scas
cmp
jge
daa
xchg
adc
jne
addr16
cmpsl
xor
mov
xlat
and
pop
adc
les
cld
push
pop
dec
add
out
mov
adc
or
dec
imulb
jmp
aad
mov
add
add
mov
pop
mov
or
subl
sbb
dec
add
hlt
jae
lods
ret
rorb
add
lcall
and
scas
nop
aas
xchg
pop
jnp
imul
inc
cmp
adc
test
ljmp
add
cltd
sub
dec
add
repnz
sbb
ficoml
add
add
fistl
daa
int3
mov
add
cmp
sbb
pop
insl
rcll
fisttpl
add
add
push
add
dec
add
stc
sarb
push
inc
pop
es
cmp
and
stc
ja
add
lahf
pop
jb
xchg
or
mov
outsb
add
les
cld
add
in
jnp
lret
sbb
add
xor
shlb
add
leave
pop
push
mov
adc
jbe
add
into
push
push
subb
sbb
push
inc
add
and
mov
decl
dec
add
cld
xchg
mov
fnsave
cmp
add
fisubrs
add
inc
xchg
clc
cmp
xchg
mov
aaa
xchg
lahf
hlt
push
add
outsl
pop
clc
pop
filds
add
add
sbb
add
sub
pop
je
out
je
repz
sbb
pushf
mov
mov
insl
in
fdivr
dec
pop
jns
jno
stos
push
add
loopne
mov
jae
aaa
mov
jo
in
or
push
pushf
das
nop
in
aas
in
test
xor
add
scas
pusha
add
je
sbb
testb
inc
add
add
sbb
adc
in
jno
or
add
imul
dec
add
mov
add
dec
scas
mov
lcall
fcmovnu
aas
xor
xlat
push
rolb
aam
outsl
imul
test
imul
cmc
test
cmp
test
add
add
fiadds
les
mov
loop
or
insb
add
xor
inc
in
xlat
fdivrl
push
push
call
clc
xchg
in
pop
add
jmp
cmpsl
pop
push
dec
add
adc
add
add
inc
push
add
dec
and
imul
in
mov
fstl
and
test
data16
add
into
std
out
icebp
inc
add
lods
push
mov
xor
fwait
mov
ret
xchg
add
mov
add
sbb
sbb
add
clc
fwait
inc
add
in
push
add
sbb
adcl
aas
imull
es
mov
mov
mov
mov
rolb
add
xchg
push
sub
add
push
adc
sbb
imul
adc
movsb
sub
add
inc
add
add
cmp
and
mov
je
jno
stos
iret
inc
add
adc
push
jne
mov
add
pop
popa
xchg
ss
push
add
dec
add
add
jbe
jge
sbb
jmp
hlt
ror
das
push
sahf
add
add
jo
add
ss
mov
add
push
rcl
adc
mov
and
push
push
add
cli
push
mov
xchg
fmul
leave
cmp
lock
test
fadds
jno
add
inc
sub
mov
repnz
cmc
cld
xor
sti
cmp
or
mov
jp
sub
xchg
imul
test
mov
cmpsb
mov
pop
or
sarl
jecxz
aad
add
addb
mov
lods
cmp
push
jae
pusha
add
fcoml
icebp
dec
add
jo
inc
add
cmp
push
cmp
add
sub
imul
mov
mov
mov
sub
pop
int
jmp
xchg
into
leave
mov
jl
enter
inc
sahf
test
push
add
dec
add
fwait
insl
push
add
mov
sbb
sbb
add
lahf
rcl
inc
add
pop
sub
mov
sbb
stos
in
cwtl
xor
dec
popf
std
xor
jbe
adc
inc
aas
xchg
pop
ficoml
add
ja
outsb
add
out
push
xchg
outsb
add
add
mov
pop
or
push
cmp
cld
and
mov
xchg
or
and
mov
ss
lods
imul
data16
add
add
mov
dec
add
add
mov
arpl
xchg
bound
cltd
push
push
ret
sti
cltd
out
add
stos
out
adc
mov
add
adc
add
cld
sahf
cmp
add
inc
ret
cmp
test
and
outsb
add
dec
movl
cwtl
ljmp
rcrb
test
sub
mov
cli
sub
cld
pop
jl
add
mov
mov
or
enter
pop
cmpsb
aam
xchg
loopne
pop
dec
add
lods
push
and
push
movl
add
add
add
aas
jmp
add
jg
and
jg
add
fiaddl
dec
mov
imul
inc
add
dec
das
add
sub
ret
incl
xchg
sbb
adc
movsb
jecxz
adc
sarl
cmp
hlt
push
add
push
add
clc
addr16
loop
fisttps
add
add
addr16
add
or
jnp
scas
jp
nop
pop
rcrb
jno
fsubl
add
xchg
ljmp
and
jp
insb
add
push
add
roll
add
jmp
dec
movsb
in
cmpsl
add
add
dec
add
push
add
pusha
add
add
or
push
pusha
add
jecxz
pusha
add
out
xorb
pop
orl
and
in
pop
lahf
ret
push
cmp
imul
jno
test
sahf
inc
add
fsubrs
sbb
aad
adc
shrl
insb
add
mov
in
add
std
dec
add
inc
add
add
daa
dec
pusha
add
aad
adc
mov
push
iret
fucomip
loop
outsb
add
pop
lret
mov
xchg
sub
int3
sub
mov
dec
out
sbb
insb
add
add
and
out
pop
clc
aas
push
popa
mov
lea
xchg
inc
add
and
pop
cmp
xor
divl
aad
push
push
scas
mov
sbb
add
add
repz
or
lret
add
mov
or
sub
dec
add
test
pop
add
add
and
push
jno
lds
add
xchg
aad
movl
testb
xorl
pop
mov
jle
loope
add
movsb
sbb
adc
bound
test
adc
cmp
cltd
shrb
subl
push
inc
add
or
sbb
jbe
nop
xchg
or
into
lahf
out
dec
add
mov
lret
jg
loope
xchg
imul
xor
sbb
sub
add
in
jp
sub
mov
jae
add
and
mov
add
add
mov
cmpsb
mov
cmp
addl
fisubs
xlat
loop
add
push
fstl
hlt
pop
cmp
pop
cmpsb
xchg
mov
inc
sbb
add
mov
out
popf
cmp
add
neg
imul
add
bound
flds
add
mov
and
gs
push
add
add
test
in
sub
and
ret
rcr
lods
sbb
rol
inc
add
sbb
les
in
pop
or
dec
bound
in
or
shl
stc
push
add
cmc
or
fdivrl
ds
add
jl
rolb
jmp
sub
add
lcall
shl
dec
cmp
repz
js
in
mov
dec
mov
add
mov
and
stos
push
fwait
xlat
push
scas
out
ret
sbb
jb
outsl
sbb
and
jo
or
push
and
addl
leave
push
jns
add
jns
popa
hlt
dec
add
js
push
sbb
or
loopne
rol
sbb
mov
mov
mov
pushf
cmp
mov
movsl
fwait
lret
lcall
icebp
icebp
addb
ret
sub
xchg
xor
imul
add
negl
add
or
pop
fadd
mov
cmp
cmp
or
sti
inc
add
mov
adc
into
mov
push
fstpl
adc
add
ljmp
add
and
adc
pop
jne
mov
mov
jge
jne
int3
stc
sbb
sub
bound
push
dec
mov
dec
je
jp
cmp
jmp
dec
add
dec
add
mov
pop
pop
cmp
hlt
cli
fwait
add
lret
inc
add
xchg
lods
aas
lods
push
mov
shrl
aas
aas
cmp
push
and
dec
add
push
push
jle
mov
cmp
add
xchg
sbb
pusha
add
inc
add
inc
scas
sub
cmp
mov
adc
mov
jmp
mov
or
cmp
dec
add
stos
push
add
test
add
sarb
mov
rorl
dec
add
out
in
filds
rorb
ds
add
and
jns
inc
add
push
xchg
sbb
push
xchg
add
mov
add
pop
cmpxchg
jbe
lcall
or
jmp
faddl
rorl
or
cmpsb
jbe
fbstp
add
dec
add
les
fnstenv
adc
movsb
jo
push
jns
add
sbb
mov
mov
mov
add
mov
push
nop
in
mov
cmp
cmp
pusha
add
push
inc
add
add
repz
into
xorb
imul
loope
jae
scas
lret
fdivrl
sahf
and
mov
ljmp
mov
ss
aas
sbb
cltd
dec
pop
mov
mov
jne
jmp
xchg
jno
pushf
dec
xor
test
pop
sub
out
adc
ja
mov
jne
cmp
fsubrl
and
jge
add
outsb
add
jmp
test
icebp
add
dec
repz
jp
rolb
add
xchg
xchg
add
in
incl
aaa
push
rorb
add
fdivrl
xor
lcall
jl
and
and
and
mov
icebp
mov
ja
add
sub
xor
shll
xchg
lods
sub
push
fldcw
repnz
push
roll
add
lods
and
scas
cmpsl
stos
mulb
push
add
aad
lock
add
aas
mov
xchg
fcoml
fcomps
out
and
sbb
aad
add
add
insl
dec
add
adc
xor
shll
push
add
loop
insb
add
insl
punpcklbw
dec
repz
mov
mov
nop
test
inc
add
scas
sahf
cli
movsb
subl
xchg
bound
mov
add
cmp
pop
push
in
jo
and
je
xor
mov
lcall
adc
inc
rcrb
push
movsl
lods
jae
lds
add
push
pop
ret
cli
cwtl
cmp
jo
test
repz
dec
pop
lds
mov
fildll
xorb
call
aaa
push
add
add
mov
cmpsl
iret
sub
lret
adc
inc
ja
mov
add
push
stos
mov
or
stc
mov
push
push
enter
pop
xlat
cmp
xor
push
push
and
cmpsl
imul
test
das
push
pop
cs
mov
inc
test
loop
insl
popa
jno
cmpsb
and
push
add
xchg
mov
mov
jno
sahf
push
inc
in
jno
incb
xor
test
das
out
repz
in
adc
push
mov
inc
add
int
dec
mov
add
add
jecxz
mov
add
add
mov
sub
cmp
stos
lds
pop
mov
add
sbb
inc
add
push
or
mov
js
dec
ja
jb
sahf
ljmp
lret
inc
add
rolb
in
arpl
std
test
sub
add
push
sti
adc
dec
add
cli
and
jecxz
subb
jecxz
cmpb
jmp
cmp
cmp
xor
sub
add
add
add
add
andl
sbb
or
jo
mov
push
clc
mov
cltd
sbb
mov
jae
mov
jmp
push
iret
sbbb
sahf
aaa
xchg
xchg
fs
or
out
push
jecxz
push
out
add
or
jb
add
mov
push
in
or
and
push
sub
sti
out
or
sub
insb
add
stos
outsl
mov
inc
sahf
ret
outsb
add
aad
push
hlt
cmpb
jl
mov
loop
add
add
sbb
stos
sbb
add
test
sti
out
dec
add
adc
push
or
test
ljmp
dec
add
push
jg
call
lock
add
mov
jo
or
test
add
cmp
sahf
popf
arpl
add
loop
add
pop
enter
and
repnz
push
scas
sub
or
mov
mov
in
cld
sub
jge
test
fstpt
xor
aaa
mov
imul
cwtl
lods
jmp
sub
mov
xor
xor
push
fsub
mov
sbb
sti
dec
mov
add
out
xchg
iret
push
push
xchg
xlat
pushf
sti
enter
call
clc
jl
fistl
add
push
iret
hlt
les
mov
add
mulb
jnp
adcb
iret
xor
pop
pop
in
addl
push
mov
cmc
jge
dec
test
and
and
pop
jo
or
push
mov
stos
cmp
mov
dec
add
sarb
lock
jo
add
jbe
xor
iret
popf
std
adc
cld
and
lahf
jmp
enter
jmp
add
loope
xor
lock
add
movsl
jmp
imulb
ljmp
pop
popf
repnz
lods
xor
pop
add
cli
call
add
std
les
adc
xchg
cmpsl
nop
xchg
pop
cwtl
out
or
lea
rcrb
icebp
lret
jno
mov
pop
fildll
mov
add
cltd
pop
mov
jo
cmp
mov
cltd
mov
mov
dec
push
sub
data16
add
stos
push
int
mov
dec
sbb
fstps
cmp
or
adc
addr16
call
and
inc
or
and
add
mov
adc
sbb
jge
mov
in
jb
orl
hlt
push
add
pop
in
fistps
out
out
arpl
fisubl
daa
sbb
mov
int
cmp
add
sahf
test
adc
pusha
add
pop
enter
add
pop
add
mov
xchg
jg
nop
mov
stos
sbb
inc
add
icebp
jne
mov
or
dec
rclb
in
loopne
add
pop
or
pop
leave
ja
cltd
int
add
lods
or
dec
add
push
fldl
mov
pop
faddp
das
sub
inc
add
jg
leave
mov
popf
inc
shll
repz
inc
pop
fstpl
mov
rolb
test
jmp
in
iret
pop
inc
in
xchg
add
add
xchg
aad
fistpl
push
push
lcall
daa
xchg
leave
pop
in
add
pusha
add
pop
sub
fwait
pusha
add
in
jnp
mov
adc
cmpsb
in
in
sahf
xor
popa
push
add
add
pop
dec
add
push
sub
je
cmc
xlat
ss
xchg
fcoms
adc
es
push
add
mov
sbb
movsl
cmpsb
xor
mov
mov
add
loop
xchg
ja
add
push
add
ffreep
in
add
daa
mov
daa
enter
sub
or
cmp
hlt
addb
xor
jnp
into
xlat
push
sbb
xchg
cmc
sub
in
mov
loopne
std
gs
mov
rolb
cmp
add
in
or
jmp
sbb
inc
mov
mov
add
adc
push
xchg
xor
sbb
or
lods
add
add
es
add
xchg
xor
sbb
bound
add
mov
mov
loopne
lcall
mov
add
pop
sbb
imul
add
fcmovnu
pop
shl
jmp
test
push
aas
lock
adc
jo
into
popl
out
insb
add
aad
sbb
push
lret
addl
bound
out
arpl
subl
adc
into
je
mov
mov
pop
or
out
jmp
mov
jle
add
and
cld
cld
je
test
fildll
jb
add
lods
into
out
loop
icebp
pop
cmp
shl
and
adc
adc
mov
mov
sub
rclb
xorl
aad
xchg
or
add
xchg
shll
into
imul
imul
pusha
add
jg
nop
push
inc
add
or
in
and
pop
pop
shll
ret
scas
inc
jecxz
mov
add
inc
sub
add
sub
repz
pop
mov
mov
mov
adc
mov
cmp
sub
mov
lcall
adcl
ficoml
mov
add
mov
sbb
or
in
cmp
sbb
lea
lds
ja
adc
add
mov
mov
sbb
add
jnp
gs
inc
das
mov
xor
ljmp
nop
pop
and
lods
out
add
add
mov
jl
lds
rorb
pop
dec
add
repz
sbb
add
xor
xor
shrb
mov
outsl
cmc
dec
out
add
inc
ljmp
aaa
sub
xchg
cld
mov
incb
les
stos
mov
pop
mov
add
xchg
sub
xchg
scas
pushf
adc
scas
dec
push
jns
add
jp
dec
mov
and
aam
negb
xor
mov
call
mov
and
sub
test
mov
clc
mov
movsl
add
jg
shll
out
sbb
add
adc
mov
dec
add
mov
movsl
rolb
add
loope
add
aam
xchg
sbb
mov
decb
mov
iret
sub
push
add
push
test
or
jl
mov
imul
push
jnp
pop
inc
add
add
jbe
ss
adc
dec
enter
xchg
sub
add
add
mov
sbb
inc
add
xchg
add
add
scas
xchg
lahf
inc
add
jp
or
mov
clc
pop
mov
jne
and
inc
add
push
hlt
push
inc
mull
adc
arpl
gs
xor
adc
jle
mov
lods
nop
ficoml
or
mov
lock
sbb
cmp
mov
xor
push
add
ds
in
aas
fstp
xchg
jno
add
push
cltd
pop
xlat
jb
pop
jp
push
add
adc
addl
bound
data16
mov
loopne
jg
add
xchg
repz
jae
inc
add
lret
dec
add
jge
int3
in
lahf
in
lret
stos
pop
and
jecxz
shrl
jbe
mov
inc
popa
rcll
arpl
jecxz
pop
test
jne
stos
clc
sub
scas
mov
cmpsl
push
test
repnz
jmp
add
sbb
dec
add
stc
add
lret
nop
leave
cmp
les
lret
sti
and
mov
jno
or
popl
sti
gs
scas
nop
aam
add
lock
xor
cwtl
add
sarb
lret
mov
add
inc
add
shlb
xlat
lahf
xchg
or
cmp
loop
addr16
mov
popa
or
sub
pop
jbe
add
cmp
pop
ficoml
ja
sbb
inc
add
cli
jg
add
add
mov
sbb
dec
icebp
out
add
int
loop
inc
add
xor
cli
pop
sub
xor
mov
and
sbb
sarb
add
cmpsl
push
add
fld
rol
push
sbb
cld
cmc
dec
add
and
sub
sub
lahf
add
push
or
push
add
lret
arpl
aaa
leave
sahf
mov
jo
add
and
scas
bound
mov
xor
leave
dec
in
dec
add
push
jg
ficoms
jne
xchg
gs
jae
add
pop
xor
lods
dec
add
adc
add
pop
ret
sub
jp
add
mov
add
and
adc
add
mov
add
jge
add
filds
movsl
push
add
ret
seto
xor
add
adc
lock
add
add
push
daa
and
add
ljmp
les
add
cli
ds
fidivrs
stos
call
dec
movsb
stos
mov
add
mov
cmp
jecxz
lahf
jge
add
pop
adc
icebp
sub
adc
popf
popa
cmp
push
adc
out
lods
jbe
pushf
xchg
into
andl
mov
push
add
push
mov
rol
cmp
push
add
inc
push
mov
sahf
pop
and
in
mov
push
add
jb
dec
lock
insl
aaa
pop
fdivr
and
cmpsb
pop
movsl
cmp
in
adc
add
adc
mov
sti
shr
xlat
fwait
xchg
idivl
pop
leave
aas
push
adc
xchg
sub
xor
jne
mov
and
inc
or
dec
add
loopne
dec
add
lock
out
lods
out
rol
aam
sub
dec
add
lahf
out
out
cmpsl
inc
add
jmp
xor
popf
sub
pop
loope
lock
mov
cwtl
cmp
out
add
and
cmp
sbb
jp
add
sbb
test
call
mov
xchg
ljmp
nop
mov
in
pusha
add
and
inc
mov
push
add
add
in
int
icebp
sub
push
add
cli
test
xchg
dec
add
arpl
xor
inc
inc
add
add
xlat
pop
inc
outsb
add
aad
add
ret
push
sub
add
lcall
add
dec
add
push
add
hlt
leave
push
pop
mov
add
push
sub
jg
cmp
ja
test
pop
adc
adc
cld
decl
pop
loop
xchg
or
sub
add
sub
dec
pop
adc
push
adc
pop
sbb
jl
fiadds
mov
mov
cmpl
lret
clc
jmp
add
jo
mov
add
xchg
mov
incl
jp
imul
sub
lds
inc
std
in
cmovle
inc
mov
rolb
test
add
repz
mov
inc
lcall
lahf
and
mov
sub
ficoms
pop
rorb
cmp
push
sarb
add
xchg
push
sub
lea
add
or
or
in
push
pop
push
adc
sub
fdiv
mov
in
in
add
mov
fcmovne
adc
sub
in
ret
jno
dec
add
add
and
cmpsl
aam
or
inc
add
push
clc
insb
add
pop
mov
xlat
sbb
fistps
inc
add
add
push
lods
cli
xor
mov
add
rorl
or
mov
add
push
or
aam
loop
mov
adc
sub
enter
add
orl
and
lahf
push
mov
add
je
pop
xchg
add
inc
add
mov
js
push
sbb
scas
pop
xchg
arpl
dec
add
rep
rsqrtps
icebp
outsl
lret
jnp
jo
add
push
insl
in
jmp
rorl
push
lock
add
sbb
enter
shlb
mov
xor
add
ret
fwait
mov
pop
cmovbe
pop
dec
daa
outsl
mov
mov
xlat
or
int3
jge
and
pop
bound
insl
push
cmp
arpl
pop
fisubrl
inc
add
push
cs
jns
add
add
lret
int
repnz
add
pop
je
adc
mov
in
xchg
xchg
add
ljmp
xlat
cli
pop
adc
mov
fs
dec
add
sbb
in
addl
sbb
add
inc
mov
ja
add
mov
mov
and
shlb
daa
sbb
mov
add
add
push
lahf
pop
add
lret
push
bound
or
or
mov
mov
lods
adc
je
add
shlb
mov
add
popa
std
popa
scas
ret
add
mov
push
test
and
cmp
pop
add
or
add
test
mov
scas
push
loopne
psubw
jl
jbe
cltd
das
test
add
mov
mov
mov
inc
mov
add
daa
mov
jnp
add
rcrb
mov
sar
aam
add
jo
inc
fstpt
stos
push
xor
pop
fstpl
inc
orb
cmc
pushf
xor
scas
jne
leave
fxtract
insb
add
testb
cmp
jle
sub
rol
loop
mov
inc
add
push
jecxz
add
test
mov
dec
inc
add
arpl
inc
xor
push
pop
iret
out
lock
out
rcrb
xor
add
add
adc
mov
in
rclb
push
mov
negb
sbb
cmp
add
push
xor
sbb
loop
jecxz
rol
sar
mov
inc
aaa
stos
filds
jnp
pop
jo
orb
aas
sub
pop
sbb
dec
add
jbe
into
clc
mov
outsl
aaa
xor
add
dec
repz
mov
dec
add
add
sub
or
sub
ss
push
movsl
outsb
add
push
enter
daa
and
lcall
dec
add
pop
repnz
jge
or
sub
push
add
fildll
fisttpl
add
repnz
popl
inc
push
das
mov
mov
mov
and
or
push
mov
mov
add
mov
divb
repz
xchg
shlb
cmp
sub
mov
stos
mov
and
jno
imul
fidivrl
push
add
adc
add
mov
inc
add
hlt
dec
add
in
sbb
lods
and
in
lcall
mov
sbb
mov
jp
lret
mov
add
repnz
add
mov
cmp
add
add
into
jle
andb
lret
push
push
inc
add
cmp
jp
and
das
shlb
test
mov
jecxz
xchg
or
movsb
sbb
jne
dec
inc
shrl
xchg
jge
insl
aaa
aaa
sarl
stc
icebp
mov
adc
mov
imul
js
jb
in
cmp
icebp
mov
or
fdivs
pop
ss
popa
mov
imul
mov
add
jae
pop
sub
popf
xchg
loop
adc
ja
in
rcrb
xchg
subb
insb
add
loop
adc
rcl
sbb
cmp
pop
xor
lahf
mov
push
out
roll
or
pop
neg
stc
add
mov
icebp
mov
mov
shrl
movsb
jnp
or
mov
sbb
sub
or
loop
jge
aas
jl
pop
push
add
cltd
push
hlt
subb
pop
leave
fisttpl
add
pop
add
into
aad
aad
mov
mov
adc
repnz
das
pop
add
mov
loopne
push
pop
push
jno
adc
and
pop
test
repnz
jmp
movsb
mov
add
xor
mov
add
dec
add
or
jg
les
push
and
add
ficoml
and
push
pop
xchg
rcl
push
mov
cld
les
add
xchg
jg
imul
add
push
lret
mov
ss
iret
sub
push
add
add
xchg
jmp
or
fwait
xchg
dec
add
mov
add
pop
sbb
pop
and
mul
push
add
add
or
mov
sbb
inc
push
xlat
sub
stc
dec
dec
inc
add
sub
xor
repz
xchg
loopne
clc
jns
or
adc
xchg
and
push
das
lahf
js
mov
mov
xchg
addr16
in
cmp
push
and
int
inc
shrb
xor
add
popa
push
mov
jns
jnp
repz
add
jp
cmp
fwait
push
scas
sbb
movsb
pop
ret
pop
insb
add
ret
inc
cmpsl
sub
adc
je
cli
or
in
popf
cmpsl
mov
out
jns
or
jge
mov
sub
sub
push
in
jl
out
ja
hlt
repnz
add
mov
iret
das
add
jecxz
add
xacquire
addr16
dec
add
add
or
or
push
push
mov
insl
sub
cwtl
insb
add
push
xchg
xchg
daa
mov
add
lahf
aam
jns
xchg
mov
and
pop
std
mov
add
sub
jl
add
orl
in
add
loope
out
jmp
ds
inc
add
xlat
push
out
lock
xchg
loope
add
jbe
stc
or
push
add
fwait
cmp
add
cmc
hlt
mov
add
mov
xchg
lods
jle
add
inc
int3
mov
pusha
add
call
cmc
jmp
add
push
dec
add
xorl
nop
data16
sub
pop
jp
fwait
loop
sub
mov
fisttpl
mov
icebp
std
cmp
mov
fistpl
mov
or
test
pop
hlt
cmpsb
xchg
xchg
xchg
inc
push
cmp
add
imul
cld
in
or
adc
jb
add
sbb
add
adc
iret
push
shrl
das
xchg
add
in
sbb
mov
je
mov
adc
add
clc
aam
in
mov
into
test
mov
fmull
inc
popa
scas
jb
loop
inc
test
xchg
push
add
sbb
clc
fnstcw
mov
aaa
xlat
sbb
arpl
std
push
add
ret
mov
pop
mov
pushf
call
popa
arpl
stos
sbb
cmp
iret
addr16
mov
mov
negb
mov
dec
add
add
sbb
xchg
xor
jo
xchg
shrb
xchg
sub
cmp
shl
fwait
jo
das
or
cltd
push
fldenv
add
sbb
add
inc
add
add
jge
into
pop
cmp
add
sub
cmp
jl
int3
aad
out
mov
inc
xchg
push
mov
pop
jmp
lcall
push
add
push
inc
pop
outsb
add
ds
sub
hlt
pop
mov
imul
sarb
scas
add
sub
mov
mov
or
pop
xor
mov
fstl
aad
add
call
add
adc
fcmove
rcrl
push
sub
addr16
das
dec
push
arpl
lret
mov
add
xor
push
mov
fwait
mull
jae
sbb
or
mov
loop
mov
add
jb
mov
push
loop
push
cmpsb
pop
pop
dec
add
addb
aad
sub
je
inc
add
mov
cmp
xchg
xor
ret
xchg
xlat
sahf
aam
enter
mov
sub
dec
add
push
push
add
and
je
jg
cmp
fimuls
push
fisttps
push
add
sbb
cli
mov
int3
movsl
adc
jae
cmp
mov
aaa
or
cmp
mov
cwtl
adc
or
push
dec
stc
cmp
in
notl
sub
adc
add
out
add
call
cmp
icebp
pop
jge
mov
sbb
pushf
mov
in
lea
add
dec
pop
cld
add
insb
add
cmpsb
push
add
adc
jb
sahf
shll
stos
xor
lock
add
into
mov
push
jae
js
inc
add
repz
push
cmp
jle
cltd
add
xor
add
fistpl
fs
pop
add
jle
lahf
mov
movsl
inc
add
fcomp
pop
add
out
mulb
mull
roll
cli
xchg
inc
mov
pop
push
sub
mov
dec
or
dec
add
iret
mov
sub
lock
add
stos
push
add
pop
inc
add
add
mov
or
mov
mov
xorl
cmpsb
jmp
add
sar
or
cmp
pop
adc
mov
inc
push
xor
lea
sti
sbbl
in
outsb
add
sarb
in
add
dec
shlb
inc
pop
lds
aas
mov
popf
nop
add
dec
add
icebp
mov
out
or
xor
and
adc
and
popl
loopne
add
bound
push
mov
add
pop
push
negl
lret
lea
test
and
rorl
pop
sahf
mov
add
les
xor
test
dec
add
pop
rcll
js
mov
rclb
push
xor
sub
bound
mov
cmpsl
adc
add
pop
xlat
cli
adc
and
imul
mov
inc
out
out
add
sbb
add
std
push
xchg
and
jg
and
push
xchg
sbbl
push
adc
imul
jne
shl
pop
cld
cmp
mov
add
lret
shrb
push
inc
nop
pop
xor
fimull
add
mov
pushf
daa
dec
add
fidivl
bound
jno
dec
jl
push
cmp
inc
cmp
mov
outsl
test
out
ss
inc
mov
dec
pop
addr16
cmp
jecxz
pop
adc
sub
add
cmpsb
push
push
xchg
adc
add
popf
das
loopne
jge
mov
lds
pop
insb
add
sub
ret
add
shr
out
imul
pop
sub
mov
lret
cwtl
mov
sbb
mov
add
out
std
sbb
fisttps
cli
inc
add
in
xor
mov
loope
jmp
mov
and
out
rcrl
cmp
jle
add
rorb
push
ss
add
and
pop
in
sub
jl
jae
cwtl
sub
jo
sbb
fisttpll
push
and
fucomip
pop
adc
adc
inc
cli
cmpsl
sarl
outsb
add
jo
push
out
test
lahf
jb
mov
add
and
sbb
add
imul
movsb
mov
mov
jbe
inc
add
ja
adc
add
lds
add
les
add
sbb
out
push
jo
aam
inc
jecxz
int3
pop
scas
mov
das
test
sbb
sbb
push
push
fwait
jae
dec
add
js
shrl
mov
add
rcrl
pop
mov
roll
sti
repnz
jmp
add
mov
sbb
add
add
push
test
push
sub
out
movsl
mov
mov
dec
add
fcoms
clc
mov
ss
out
cld
fisubrl
add
shl
xor
and
add
sub
mov
dec
ret
pop
ret
mov
orl
in
jg
xchg
outsl
xor
fdiv
push
pop
sbb
adc
sbb
xchg
mov
addl
jecxz
lock
add
cmpl
add
dec
add
daa
adc
js
sbb
dec
add
rcrl
xor
inc
out
xchg
or
mov
mov
mov
xor
mov
xchg
test
dec
add
std
fdivrl
mov
rolb
jmp
and
mov
xor
divl
notb
fistpll
jb
add
leave
iret
add
jne
add
fcompl
xchg
and
xchg
or
push
add
xchg
mov
sub
and
call
outsb
add
lahf
les
add
popa
mov
pop
jae
mov
adc
and
clc
vmovaps
adc
test
out
aaa
aaa
loopne
xor
leave
mov
mov
bound
xor
sub
mov
rcrl
sub
je
in
add
inc
add
push
add
add
dec
add
bound
mov
js
daa
sti
pusha
add
jl
cltd
jmp
adc
dec
xchg
sbb
mov
and
adc
fiaddl
lcall
lods
and
sbb
xchg
xor
repz
add
cli
push
out
mov
sub
adc
push
dec
add
xchg
rcl
mov
sahf
mov
add
mov
and
out
test
jb
xchg
add
xor
shll
fnstenv
loopne
or
scas
add
mov
rcr
fisubs
add
js
bound
mov
ja
pop
lds
add
push
cld
and
call
sbb
add
or
xor
inc
add
test
ret
jo
add
lret
push
sub
dec
add
dec
add
dec
dec
add
mov
pop
rolb
jns
xor
cmp
sbb
dec
scas
rorb
sub
sbb
sbb
lcall
fadd
jo
imul
mov
xor
xchg
inc
out
and
out
inc
push
push
add
pop
notl
jp
test
sub
mov
inc
repnz
add
lock
or
push
xchg
or
lea
cmp
pop
fdivrs
lods
fldenv
and
sub
leave
jg
sbb
pop
inc
add
add
dec
add
add
fisttpl
mov
or
int
or
add
xor
lds
adcb
jmp
int3
roll
cmp
outsl
push
cmp
jge
aad
jbe
fisubrs
loop
scas
jnp
cmp
cmp
add
add
pop
jl
jae
out
in
out
in
mov
in
negl
aas
fwait
add
sti
outsb
add
insl
cmp
pop
adc
pusha
add
shrl
lds
lret
repnz
lahf
jecxz
jne
mov
jb
add
stc
out
out
test
cmp
inc
and
cltd
cmp
mov
cld
jae
ss
jbe
add
mov
mov
or
lds
pop
imul
loop
push
or
std
pop
out
jg
mov
loop
inc
add
dec
xor
adc
cwtl
adc
sbb
shr
lret
and
repnz
adc
lods
adc
mov
js
mov
add
pop
fisubs
inc
add
jecxz
inc
popf
fsub
test
add
jbe
xchg
repnz
cmp
adc
jns
repnz
add
je
sub
mov
add
xchg
imul
xor
add
push
orb
push
sub
repz
sub
sahf
repz
inc
stos
enter
add
push
add
lods
xchg
xchg
sbb
add
fisttpl
add
bound
or
add
ret
mov
sahf
aas
lds
in
je
add
testb
dec
fmul
lahf
cli
jg
add
gs
cmp
insl
and
add
stos
mov
aaa
mov
or
je
ficomps
jl
clc
pop
jmp
sbb
mov
aam
mov
add
mov
pop
loop
je
out
call
ds
add
inc
add
inc
add
mov
push
or
test
repz
mov
ret
xchg
cmp
adc
add
fsub
popa
mov
sbb
pop
mov
add
sbb
lock
add
popa
mov
add
stos
mov
push
mov
aad
dec
add
loope
ss
insb
add
cmpl
mov
leave
xchg
lret
sti
into
push
mov
int
and
pop
testb
and
push
add
sti
pop
add
and
mul
mov
pop
ds
add
sub
sti
or
add
jns
cmp
xchg
clc
ret
jb
shll
push
add
adc
add
sti
xor
cmp
add
push
scas
sub
and
adcb
test
pop
dec
movb
dec
in
mov
arpl
add
mov
fistpll
pushf
outsb
add
dec
xor
in
imul
cwtl
insb
add
push
in
lods
xor
add
xor
xor
iret
aam
xchg
or
mov
add
pop
mov
add
pop
and
add
xor
in
lock
sar
test
lret
or
out
sbb
ja
mov
add
push
scas
xchg
lahf
int3
pop
es
aad
je
fistpll
out
add
jnp
imul
sti
sbb
jg
fsubrs
jge
add
inc
add
or
mov
loop
xor
xor
inc
loop
insb
add
jae
add
add
jns
sub
lods
ds
addr16
shrl
sbb
sbb
xchg
push
clc
int3
add
xlat
mov
add
sahf
xchg
push
mov
xchg
repz
xor
fwait
and
jmp
add
jns
jecxz
mov
xchg
cmp
pop
mov
bound
stos
push
add
fidivrl
cmp
add
stc
in
pushf
out
stos
or
inc
add
jecxz
ljmp
aam
sar
jne
and
push
add
mov
ffree
lock
sbb
push
add
mov
pop
dec
sar
mov
int3
xchg
mov
incl
aad
outsl
and
or
add
sub
sbb
lahf
sub
mov
add
jmp
mov
outsl
insb
add
or
insb
add
push
in
pop
mov
add
aad
pop
adc
sub
mov
test
push
push
adc
xor
aas
jbe
jge
loope
rcl
test
enter
add
add
xor
scas
pop
loop
cmc
pop
jae
fisubs
add
shll
subb
stos
add
in
daa
dec
popf
mov
cmpsb
xor
hlt
jle
and
inc
test
xchg
aaa
jl
pushl
sub
sub
xchg
or
sub
rolb
add
mov
das
add
jns
movsl
dec
add
stc
add
stos
bound
shrb
jns
add
push
add
fstps
mov
pop
or
mov
and
add
lods
test
mov
insl
cli
inc
add
cmc
popa
add
stc
dec
dec
ret
flds
add
jnp
inc
stos
adc
sbb
add
ret
add
stos
jl
add
add
push
lcall
jno
push
cmp
xchg
jbe
lds
outsl
xchg
cmp
cld
mov
mov
ds
outsb
add
add
sub
cmp
lds
out
sub
das
mov
jl
jl
sbb
lods
js
lods
lock
add
add
pop
mov
fwait
dec
and
add
pop
pushf
repz
adc
prefetch
outsb
add
arpl
int3
repz
add
or
and
scas
fldt
test
out
test
pop
sbb
add
mov
push
adc
clc
pop
sbb
lahf
inc
xor
dec
dec
add
xlat
mov
mov
jmp
and
or
sub
lock
adc
dec
push
jne
fsubr
nop
pop
xor
out
jmp
jb
add
sub
xor
fiaddl
and
xchg
push
sub
aaa
test
adc
stos
mov
je
stc
ss
adc
xchg
test
pushf
out
aam
jmp
lock
cmp
adc
mov
and
inc
add
stc
in
and
add
add
aad
dec
add
xchg
inc
dec
add
push
shlb
xchg
push
add
xchg
jnp
lea
mov
sub
add
xor
divb
jmp
add
pop
enter
jle
pop
pop
inc
add
cmp
jae
das
lcall
mov
std
inc
add
xor
call
shrl
lret
mov
add
fs
mov
pop
fmull
cli
and
jns
int3
outsb
add
and
mov
sbb
add
dec
add
and
add
loop
inc
fmuls
add
jo
icebp
orl
test
fdivr
inc
add
lds
scas
sbb
add
cmp
pop
sbb
fstpl
sbb
xor
fdiv
jb
fsubrs
and
stos
push
stc
data16
fdivr
enter
stos
das
int
mov
fidivrs
ffreep
stos
call
insb
add
and
mov
leave
mov
add
mov
bound
pop
outsb
add
mov
movsl
addr16
lahf
mov
inc
sbb
inc
add
clc
mov
movsl
lods
sbb
mov
imull
add
jns
lcall
mov
fbld
out
fucomip
pop
outsl
mov
add
push
adcl
push
xchg
add
jbe
imul
xor
ret
xchg
lcall
mov
jb
cmc
or
add
sbb
shlb
add
add
mov
out
sub
adc
pop
mov
push
dec
add
xchg
aam
xchg
imul
mov
mov
sti
imull
in
dec
add
mov
adc
pop
add
cwtl
shlb
adc
leave
andb
sbb
movsl
int
mov
test
insb
add
fnstenv
ss
stc
or
cltd
add
pop
push
test
add
nop
sub
jge
repz
add
das
adc
out
cmpsb
fcomi
sbb
stos
cmc
aam
scas
arpl
das
lds
repnz
add
add
fsub
cmp
inc
out
cmpl
xor
aas
lods
les
divb
lds
push
clc
out
inc
sub
jle
movsl
add
dec
add
push
push
sti
mov
sub
xor
jg
pop
xsha1
cmpsb
dec
out
mov
or
stos
aas
pop
push
pop
fld
jge
mov
sahf
push
adc
push
xchg
and
movsb
lea
mov
hlt
sub
inc
add
ja
cmp
add
adc
pop
out
pop
mov
pop
mov
jnp
data16
in
inc
add
add
lods
pop
scas
in
cmp
sahf
mov
or
aas
push
push
add
in
std
add
inc
sbb
bound
cld
addr16
test
push
stos
jns
ljmp
icebp
mov
sbb
aad
cmp
jne
addr16
test
or
stos
repnz
call
add
sbb
xchg
repnz
xor
fistl
cld
or
adc
add
add
inc
add
fistl
inc
mov
add
jp
cmpsl
outsb
add
xchg
push
jns
sbb
add
add
shll
pop
enter
adc
lahf
into
push
add
pop
jle
add
fisubrs
add
add
push
lds
add
inc
mov
call
fcoms
inc
mov
mov
push
add
imul
data16
inc
jecxz
ret
sub
scas
inc
add
dec
lahf
mov
int
add
insl
mov
adc
mov
sub
divl
mov
add
adc
popf
out
addr16
out
cvttps2pi
dec
lock
sbb
mov
dec
loop
xchg
test
add
mov
cmpl
test
inc
rorl
mov
push
push
cmp
mov
popa
push
mov
decb
add
mov
insl
shll
jno
sbb
sbb
dec
add
cld
fisttps
roll
das
sbb
cmc
scas
cmp
sbb
dec
add
inc
lret
test
add
mov
push
and
and
les
add
adc
add
jp
sbb
add
cwtl
sub
scas
leave
popa
das
cs
orb
and
jl,pt
popa
push
ljmp
dec
les
xchg
mov
xor
mov
adc
add
cmp
add
inc
add
nop
dec
add
xor
adcb
fldcw
sub
loopne
mov
testb
cmp
inc
add
sti
stos
dec
pop
xchg
ds
push
shrl
pop
xor
test
push
xchg
sbb
cmp
add
dec
add
mov
imul
sbb
ds
test
xor
aas
push
add
dec
mov
pop
xchg
pushf
jle
mov
add
ds
popa
jmp
gs
add
cltd
sub
cmp
add
sub
aam
push
fsubs
test
add
xchg
cltd
add
push
in
test
dec
add
mov
add
mov
inc
fisttpll
fisttpll
or
dec
add
mov
jg
or
mov
jns
lahf
sbb
add
jb
call
sub
leave
xor
add
add
add
inc
add
add
push
pop
ret
aad
mov
lret
mov
add
add
repz
mov
cmp
outsb
add
dec
lods
in
add
fdivp
addr16
add
movsl
outsb
add
lods
cmp
shl
mov
add
dec
add
aas
push
rcrb
int
pop
enter
xchg
sbb
adcl
gs
mov
stc
aam
icebp
scas
mov
inc
add
or
lret
xor
add
and
call
test
in
add
fsub
cmp
scas
lock
mov
stos
cmpb
mov
fistpll
pusha
add
pushf
or
mov
jl
imul
dec
add
add
rcr
xor
lahf
cmp
ret
cmp
roll
dec
movsl
add
jae
mov
enter
pop
adc
inc
sub
cmp
pop
push
andl
xchg
pop
pusha
add
mov
aam
add
mov
add
les
stos
loopne
push
cmpsb
mov
jnp
add
and
loopne
add
lcall
add
sub
mov
js
mov
mov
les
sbb
arpl
fnsave
add
aas
movsl
hlt
push
mov
dec
push
out
add
xor
mov
pop
add
test
or
and
jne
add
mov
dec
add
xchg
add
sbb
sub
mov
xchg
sar
outsb
add
dec
ljmp
push
cs
pusha
add
adc
pop
and
sbb
ljmp
inc
add
adc
gs
fsubrs
add
cmpsl
cmpsb
ret
nopl
stos
or
adc
js
rcl
cmp
add
ljmp
mov
pop
cld
lods
in
inc
add
mov
xchg
jecxz
and
push
and
push
mov
mov
aas
fistpl
mov
add
and
dec
cmp
scas
paddb
outsl
insb
add
cld
and
sbb
add
jb
add
add
push
idivb
add
xor
mov
add
xchg
cli
inc
add
sub
daa
xor
add
adc
sahf
pop
sbbb
add
xor
rorl
pop
aas
int3
push
add
cmp
je
fcoml
repz
in
das
scas
sahf
jmp
aaa
outsl
inc
add
fistpl
out
add
cmp
in
jmp
cmpsb
mov
xchg
add
lret
xchg
out
xchg
sbb
jae
push
push
add
pushf
mov
sub
outsb
add
xor
in
ret
or
and
loope
add
sbb
rorl
mov
inc
xlat
outsl
jle
add
loopne
add
pop
imul
add
pop
jl
xchg
adc
add
scas
lea
fwait
adc
xchg
and
xchg
inc
je
ljmp
and
dec
add
xor
pusha
add
inc
add
jnp
fldt
lret
add
fdivs
out
pop
ljmp
jge
stos
mov
arpl
inc
add
jmp
dec
arpl
stc
pop
xchg
sub
jmp
xor
cmc
sub
sahf
jae
lods
jo
mov
add
roll
sbbb
sbb
cmp
loope
nop
mov
add
add
gs
push
add
mov
add
fdivp
jmp
sahf
mov
test
jns
xor
push
sub
bound
int3
leave
pop
aad
shlb
out
inc
add
outsl
mov
sbb
add
mov
data16
in
sbb
add
inc
add
dec
add
dec
mov
inc
add
mov
add
aad
jne
jp
adc
je
out
jp
imul
ret
adc
add
sub
or
add
call
mov
xor
sub
pushf
pusha
add
lods
cmpsb
les
shlb
stc
push
insb
add
sbb
dec
add
stc
pop
jp
add
sahf
dec
es
jge
addr16
mov
add
and
add
in
jne
ret
push
ret
fcoms
push
and
adc
xchg
test
mov
jbe
out
mov
loope
push
fwait
add
add
outsl
add
xor
shrl
add
mov
mov
sub
mov
pusha
add
dec
add
adc
inc
fwait
xor
sub
pop
shll
add
sar
das
cltd
daa
data16
add
int3
sub
or
cmp
repnz
gs
add
sub
ja
insb
add
insl
add
add
pop
out
xor
add
add
push
daa
add
xor
xchg
jmp
std
shrb
add
les
loop
jno
cmpl
pusha
add
push
add
add
idivb
mov
pop
aad
pop
mov
popf
inc
mov
fsts
std
xchg
xor
xchg
inc
pop
pop
sub
std
sub
and
sub
or
stos
mov
mov
mov
inc
pop
and
sbb
fcmovb
fidivs
add
mov
in
dec
add
pop
xchg
adc
add
int
xor
es
sbb
daa
in
inc
add
test
push
iret
mov
inc
xor
add
jno
or
push
sti
push
mov
xchg
add
or
dec
add
aad
scas
scas
mov
push
add
jo
int3
shrb
add
jl
or
sahf
xchg
in
xacquire
pusha
add
xchg
xor
xchg
pop
aam
cmp
mov
nop
lret
mov
dec
add
iret
sahf
xor
inc
rorl
into
add
roll
add
jp
add
lea
add
gs
ja
lahf
daa
xbegin
into
fwait
movsl
arpl
int
sahf
xchg
pop
add
mov
add
cld
mov
mov
nop
sub
lods
inc
add
test
xor
dec
add
fsubrl
sbb
add
add
adc
push
or
loopne
push
xlat
jae
clc
sub
push
insl
xchg
aaa
and
insb
add
test
test
sbb
pop
out
fsubrl
add
mov
out
cmpb
incl
add
call
add
adc
nop
jge
pop
pop
mov
loope
orl
shll
inc
add
fdivrp
jle
inc
sub
dec
or
sti
in
add
xor
mov
mov
mov
xchg
pop
push
add
add
add
insl
fwait
dec
push
repnz
pop
mov
add
add
and
bound
mov
pop
cwtl
idivb
mov
ss
mov
and
sbb
pushl
pop
lods
xor
xchg
int
aas
xchg
scas
add
xchg
out
xor
out
mov
add
ret
nop
mov
inc
add
pop
imul
mov
dec
add
cmp
out
jae
imul
sub
adc
orb
subb
stc
flds
mov
add
xor
add
add
sub
arpl
cli
jmp
xchg
sub
roll
push
cld
xor
loop
lds
lods
mov
add
das
das
mov
adc
cmc
mov
rcrb
leave
dec
ja
xor
push
inc
addr16
add
add
push
add
ds
daa
daa
jle
cmp
or
fucom
jae
les
push
add
push
or
cmpsl
cmc
movsl
or
fsubrl
fcoms
adc
push
sbb
shrb
dec
lret
add
xchg
rorl
xchg
sub
fcompl
mov
add
add
cmp
add
inc
std
fcomps
sub
addr16
adc
sahf
sbb
xchg
outsb
add
shrb
dec
add
xchg
sub
sub
fs
into
sahf
push
xchg
push
mov
xchg
sar
jns
inc
add
pusha
add
add
stos
pop
shrl
push
add
mov
cmpl
ljmp
stos
je
lcall
add
mov
aaa
in
dec
add
shrl
add
add
inc
sbb
and
and
dec
add
pusha
add
adc
ljmp
icebp
push
cmp
mov
add
stc
fmul
mov
sbb
jns
sbb
out
test
notb
xchg
mov
je
add
mov
imul
inc
add
repnz
lret
inc
add
lahf
pop
rcll
lods
add
and
inc
outsl
xchg
stos
cs
add
add
jg
std
in
mov
lods
dec
add
les
dec
add
push
add
scas
jo
idiv
in
jle
scas
mov
add
or
push
nop
out
xor
das
scas
sbb
sbb
mov
mov
inc
pusha
add
mov
pop
push
popa
jne
add
inc
adc
jnp
jmp
inc
add
mov
add
lock
push
addr16
cmp
js
sbb
mov
sub
outsl
sub
ficoms
jecxz
fwait
add
inc
add
add
sar
bound
adc
negl
adcl
insl
lea
stos
xchg
jo
push
mov
out
jge
mov
incl
aaa
push
and
jmp
aas
cmp
lret
mov
add
add
mov
out
insb
add
fldcw
push
jne
clc
shrb
cltd
pushf
mov
jns
lods
mov
les
sbb
les
add
out
lea
arpl
call
int3
sub
lods
jnp
xchg
dec
add
push
add
sbb
sbb
add
mov
lds
mov
add
push
jne
inc
add
add
nop
lods
jle
stos
or
addr16
push
lret
ds
mov
in
fisubs
and
popf
stos
daa
sbb
mov
pop
push
test
sub
sbb
mov
add
add
ljmp
xchg
daa
fldenv
add
or
repz
into
add
icebp
repz
cltd
inc
add
fsub
fcompl
frstor
xchg
popa
hlt
enter
mov
test
or
sarl
inc
add
add
sbb
sbb
add
jle
test
lret
add
add
inc
push
lods
jno
sub
mov
loop
mov
frstor
add
subl
pop
fsub
addr16
jp
add
adc
add
add
push
add
mov
stos
push
add
cmp
push
adc
xchg
aaa
xor
mov
jmp
pop
testb
xlat
fisubl
mov
ficomps
sub
pop
xchg
inc
add
jl
jge
mov
dec
pop
mov
adc
inc
add
imul
jle
testl
push
or
loop
dec
add
add
loope
xchg
imul
imul
add
sbb
scas
loop
mov
push
push
add
sub
cmp
jns
daa
addr16
sub
sub
mov
sbb
dec
add
xor
push
mov
push
add
xchg
add
add
hlt
push
add
add
subb
mov
cmp
push
mov
scas
push
xchg
add
push
jnp
mov
sbb
xor
xchg
add
adcl
add
call
sub
push
daa
and
xchg
xchg
enter
or
insb
add
push
mov
mov
out
add
fwait
pop
repnz
das
sbbb
ds
lods
out
loop
mov
xor
cmpsb
add
ret
popf
mov
xchg
xor
and
adcl
inc
loop
add
repz
mov
repz
pop
add
pop
mov
jmp
iret
imul
add
jbe
insb
add
movsl
aaa
or
repz
push
push
add
test
fbld
arpl
stc
clc
dec
xor
sub
mov
test
add
scas
jne
xor
mov
andl
cmp
add
dec
add
add
les
push
add
sbb
shll
in
cmpsl
test
mov
xor
fcompl
test
push
add
xor
popf
sbb
xor
xor
dec
push
scas
ret
pop
sbb
xchg
addl
or
sub
aad
adc
inc
mov
pop
pushf
sub
pop
scas
cli
adc
add
add
fistl
and
add
xchg
mov
add
clc
or
imul
xchg
mov
das
adc
pop
repnz
sub
in
mov
sar
push
daa
es
out
inc
push
dec
add
shl
sbb
jnp
roll
lcall
in
andl
orl
xor
xor
add
sbb
ja
arpl
add
dec
add
push
add
aad
xlat
inc
insb
add
push
fnstenv
iret
jb
loope
sti
dec
mov
aad
out
ljmp
add
add
dec
add
bnd
or
push
push
add
jl
push
sbb
xor
add
jge
add
lock
add
cmp
inc
add
add
test
inc
add
add
mov
mov
call
mov
mov
adc
in
push
bswap
test
pop
iret
fdivrs
addl
or
sbb
add
push
cmpsb
test
add
ficomps
cltd
mov
cmp
xchg
mov
sub
outsb
add
pop
mov
stc
fsubrl
add
jl
fs
sbb
rclb
test
lods
vcvtsi2sdl
popa
jle
ljmp
inc
fwait
add
xor
add
sti
idivl
lock
and
enter
pop
or
dec
add
fidivs
add
xchg
push
addr16
dec
add
dec
add
add
lds
add
jo
clc
jle
lock
jmp
mov
pop
or
cmpsl
rclb
and
pop
std
mov
sub
inc
stos
out
cltd
ficomps
push
add
adc
pushf
stc
mov
jae
add
pop
mov
fbld
push
ja
xchg
dec
add
pushf
and
and
push
add
repnz
pop
adc
call
nop
jne
dec
add
ret
add
imul
fcoms
add
das
pop
test
lods
or
jns
inc
add
push
add
pop
pusha
add
repz
mov
inc
add
push
mov
pop
fadd
inc
sti
mov
leave
mov
dec
add
xchg
xor
add
lret
and
add
push
jl
dec
leave
cmovp
movsb
insb
add
add
orl
dec
add
rol
sahf
ret
xor
jbe
xor
test
in
flds
mov
xor
scas
mov
aam
mov
or
xor
add
jnp
dec
lret
add
filds
stc
mov
and
loope
lahf
fisttpl
add
pop
xorb
and
aad
jne
and
nop
pop
sub
repz
ljmp
lds
add
into
je
cmp
xlat
sub
xchg
mov
add
mov
push
add
sbb
add
add
jecxz
jle
push
add
in
or
out
push
jae
push
mov
lret
cmpsl
add
or
add
add
add
jb
add
or
sub
push
mov
sbbl
push
and
roll
repz
stos
loope
iret
pop
jle
add
shl
add
sub
xchg
and
or
add
movsl
scas
cmc
jno
push
dec
add
clc
movsb
lcall
push
lods
pop
adc
xor
jb
xchg
mov
add
dec
add
out
int
std
jmp
mov
inc
fisubs
out
out
in
jge
xchg
andl
push
popa
cli
jmp
mov
mov
enter
jp
pop
pushf
stos
jle
arpl
pusha
add
push
les
jo
mov
mov
adc
fadd
jne
icebp
pop
xor
mov
lea
add
xor
adc
fcoms
add
inc
add
mov
in
addb
data16
rolb
or
mov
jp
into
push
mov
xor
test
mov
add
stos
jb
inc
add
mov
and
insb
add
xor
hlt
jl
test
add
enter
lcall
add
cs
mov
outsb
add
scas
movsb
subl
lods
fstl
or
mov
sbb
and
add
adc
mov
push
data16
xchg
sbb
mov
clc
dec
add
mov
push
and
ljmp
in
roll
inc
add
sbb
jno
pop
pusha
add
xchg
sbb
ret
mov
push
push
test
inc
sub
data16
pop
and
and
fiaddl
jg
sbb
daa
and
add
dec
and
outsl
or
add
stos
jns
mov
dec
push
add
mov
adc
add
arpl
xchg
add
add
std
arpl
xchg
pop
sarb
fwait
mov
lret
add
sub
add
jl
jl
inc
add
cmp
mov
add
lock
add
scas
inc
push
dec
sbb
idivl
aad
mov
lret
mov
lret
in
and
pop
mov
cmp
add
and
in
dec
add
fnsave
mov
sub
icebp
push
adc
add
adc
je
das
movsl
mov
in
pop
shl
mov
int3
jge
movsb
in
arpl
push
sbb
jecxz
add
jo
xchg
lods
repnz
movl
pop
out
fildl
cmpsl
and
jne
xor
sbb
cmp
mov
pop
jne
xchg
enter
pushf
pop
test
push
add
stc
dec
pop
cltd
clc
push
xchg
les
xchg
mov
push
add
add
cmp
xor
mov
adc
pop
pushf
push
add
add
lret
pop
cli
sahf
out
fcomp
addr16
ja
or
imul
mov
adc
pop
xorb
add
xchg
push
bound
push
dec
leave
mov
add
jbe
pop
sub
divl
dec
jb
js
inc
rcl
fwait
insb
add
mul
mov
pushf
mov
pop
shrl
mov
add
test
mov
push
andb
add
hlt
sub
sub
icebp
adc
aam
repnz
and
and
pushl
add
mov
movsb
and
les
sbb
addb
sbb
mov
sahf
jb
adc
mov
pop
andl
xchg
mov
add
add
pushf
fcoml
jo
frstor
inc
dec
add
add
xorb
inc
add
jmp
mov
add
shll
pop
loopne
sub
enter
fstl
add
mov
push
cmp
daa
cwtl
push
add
aam
sub
repnz
and
add
psubd
add
xchg
lea
leave
enter
add
xchg
sbb
fcomp
inc
pop
sub
popf
adc
ljmp
sub
jo
mov
lods
sbb
add
pop
fwait
pop
cmp
dec
add
lods
xor
orl
sbb
jno
mov
fidivrl
jl
push
add
stos
fcomps
fimuls
sbb
inc
add
push
xor
add
pop
add
mov
negb
xchg
mov
repz
or
pop
fwait
xchg
cmpsb
xchg
iret
popf
adc
jnp
test
mov
pushf
xchg
iret
int
dec
add
je
pop
lret
mov
aad
aas
in
dec
add
fcmovnu
lahf
cmp
movsl
and
outsl
pop
or
lods
dec
enter
gs
cmp
push
movsb
loope
sub
dec
add
push
fwait
sbb
mov
xor
push
repz
cli
mov
add
orb
pop
into
add
cmp
outsb
add
mov
pop
xchg
test
add
adc
xchg
daa
cwtl
adc
ja
jno
das
sbb
mov
ss
adc
add
mov
add
cmp
les
loop
cmc
jae
test
push
xchg
cmp
sub
sub
cmp
or
fwait
push
add
iret
aad
add
xchg
mov
xorl
lods
and
clc
jne
or
cmp
insb
add
lds
lret
sub
int3
cs
mov
repz
xchg
ds
fimuls
push
add
xor
xchg
mov
add
inc
push
popa
push
push
cltd
pop
xchg
push
push
sbb
add
sti
cmc
pushf
jne
adc
pushf
out
push
lcall
xlat
int
in
ds
in
aam
addr16
stc
mov
and
jno
inc
jge
sbb
loop
push
mov
jmp
add
add
pop
mov
in
add
lcall
popf
cmpb
shlb
xchg
ret
dec
add
int
xor
je
pop
icebp
ja
push
push
scas
xor
cli
dec
add
and
aad
in
inc
add
rol
bound
push
leave
cmp
arpl
daa
out
xor
add
add
dec
add
adc
cmp
lahf
adc
add
push
clc
pop
cwtl
mov
mov
aas
xchg
ret
mov
jecxz
hlt
add
jmp
daa
je
decb
xor
xchg
aam
fwait
push
add
dec
pop
inc
add
add
lods
jecxz
jecxz
test
enter
xor
mov
subl
mov
js
add
stc
jg
xlat
idivl
outsb
add
xor
pop
imul
in
add
cmp
loop
mov
in
jbe
mov
mov
cli
shll
outsl
inc
add
jl
mulb
mul
in
movsb
jge
add
add
adc
add
aam
dec
add
mov
add
pop
mov
cmp
dec
add
xor
add
add
xchg
mov
cs
jbe
hlt
stc
inc
das
xchg
fstpt
in
jne
in
sub
dec
add
add
xchg
sub
jns
xor
adc
icebp
jns
add
pop
mov
out
mov
hlt
push
mov
add
jl
lret
sub
xor
sarb
movsl
pop
push
mov
repnz
add
sub
push
add
stc
or
jge
bound
ret
js
add
sub
mov
test
andl
ficomps
xchg
loop
add
add
in
fisubrl
ror
mov
aad
pop
cmpsl
aam
shr
loop
test
adc
and
push
mov
add
add
mov
fwait
push
psrad
sbbl
fstl
stos
sbb
add
bound
in
push
cwtl
jnp
cmc
sbb
mov
push
mov
pop
sbb
pop
lds
cmp
push
push
popa
add
in
int
mov
push
fidivrs
icebp
push
pop
push
or
call
mov
jnp
andl
pop
inc
xchg
mov
cmp
hlt
dec
xor
xor
add
dec
pushf
lods
pop
inc
add
jnp
iret
cmc
pop
jmp
jge
int3
and
xor
xor
das
data16
arpl
add
sbb
sbb
movsb
add
jne
cmpsb
sub
add
xchg
pusha
add
jle
and
mov
mov
add
add
add
rol
cli
sbb
add
cmp
out
jmp
adc
fimull
cltd
adc
jmp
and
mov
and
sahf
iret
push
mov
cwtl
arpl
push
enter
add
divb
jl
push
add
fsub
lret
and
insl
pop
and
cmovns
xchg
leave
lea
inc
addl
add
test
or
add
pop
icebp
iret
loope
inc
sahf
jbe
jo
add
sbb
sbb
scas
stos
sub
aad
add
adc
mov
push
add
in
lods
pop
cmp
enter
scas
mov
xchg
pushf
mov
jo
mov
sbb
into
outsb
add
inc
add
sbb
in
ret
ljmp
aam
lret
loopne
das
pop
sti
aam
or
dec
add
xor
cli
or
sar
mov
mov
ror
jne
ficompl
leave
jbe
dec
add
leave
add
je
mov
push
and
inc
add
shlb
dec
add
sarl
xor
ds
movsb
ret
stc
add
or
aaa
or
cmp
loopne
cmc
xor
ret
xchg
xchg
movsl
cmp
add
dec
mov
inc
imul
add
inc
add
mov
subl
lods
mov
mov
adc
push
add
add
mov
jbe
cmp
add
bound
lret
add
sub
outsl
xor
pop
hlt
outsb
add
sub
xor
add
xor
cmp
sbb
call
ret
pop
inc
add
add
add
push
mov
add
cmp
add
push
sbb
mov
push
call
lret
lock
push
xor
incb
sub
adc
out
cmc
sbb
add
push
jp
add
or
adc
loope
or
inc
pop
lods
or
jmp
out
sub
push
add
adc
cmp
add
iret
jnp
mov
add
mov
add
fldl
je
xchg
out
sub
and
xor
sub
dec
add
pop
ds
push
iret
ljmp
add
pop
je
add
mov
mov
mov
add
adc
push
into
and
and
xor
sbb
into
addr16
jmp
dec
add
out
test
mov
add
xchg
fsubs
add
push
inc
mov
add
xchg
stos
inc
add
jecxz
add
insl
rcrb
enter
inc
mov
in
xor
push
lret
add
add
pop
add
inc
add
adc
pop
mov
in
add
out
inc
add
sub
push
shll
jle
in
add
in
jae
adc
cmpsb
add
jnp
sbb
inc
add
mov
ret
jo
imul
add
cmp
repz
add
lret
add
divb
add
jb
add
cmp
sbb
faddl
shll
arpl
jmp
cli
pop
jnp
call
mov
clc
inc
daa
sbb
mov
cmc
sahf
ret
mov
push
call
loop
inc
add
dec
add
fisttpll
jns
sahf
rcrb
xor
enter
jno
mov
add
and
sub
mov
dec
add
das
lods
mov
add
add
push
in
add
xchg
lea
inc
add
test
cli
mov
jge
popa
jle
pop
ret
fdiv
mov
in
add
popa
int
movsb
cwtl
fidivrl
aaa
dec
add
testb
test
push
das
sti
in
dec
inc
cli
data16
arpl
inc
add
scas
aam
test
push
iret
call
cmp
and
ret
add
lods
jns
mov
lcall
and
and
mov
jmp
std
inc
add
push
js
jbe
pop
push
inc
dec
jns
fwait
int
mov
fistl
push
jp
add
inc
add
dec
add
mov
je
dec
add
fdivl
adc
push
inc
add
xor
dec
cmp
inc
sub
loop
xchg
jno
ja
shrb
jo
xor
mov
insb
add
dec
add
imul
into
jl
add
jmp
push
add
outsl
add
dec
add
add
test
fiadds
cltd
and
cmp
outsb
add
ja
lods
imul
jle
lds
cs
mov
adc
inc
add
xor
out
rcrb
add
sbb
cltd
push
js
loopne
xchg
loop
inc
and
iret
dec
iret
jg
in
jp
mov
ja
pop
aaa
add
adc
pop
ret
test
inc
add
mov
movsb
popa
outsl
and
add
jne
mov
or
test
xchg
xchg
sub
mov
loopne
push
inc
add
out
xchg
pushf
int
xor
and
fmull
add
fs
jl
lock
push
add
xchg
dec
incb
ret
add
mov
mov
bound
enter
dec
cmc
adc
inc
add
in
enter
ss
add
mov
push
popa
in
add
scas
lcall
and
stos
mov
xchg
mov
test
int3
inc
add
stos
mov
add
add
xchg
daa
pop
xchg
sahf
xchg
mov
leave
mov
add
enter
sub
andb
lods
adc
add
add
push
sbb
sbb
mov
sahf
imul
popa
out
lahf
or
rorl
add
push
iret
aad
sub
add
ret
lret
add
bound
lahf
pop
sbb
stc
jbe
adc
int
add
fsts
aad
cmp
adc
js
jle
loopne
mov
pop
out
imul
fadds
add
lock
sbb
mov
shl
add
jnp
add
imul
inc
add
add
xor
push
or
sub
xchg
je
test
mov
adc
add
out
repnz
lods
sbb
outsl
mov
andb
adc
popf
jae
push
in
lret
or
pusha
add
arpl
dec
mov
add
mov
and
nop
ror
inc
fbstp
mov
push
and
cli
add
push
inc
add
jle
xor
adc
icebp
mul
pop
in
cmp
add
lret
lcall
xchg
test
ljmp
enter
fdivrs
and
fcomps
add
aaa
mov
jae
fcmovb
lahf
push
clc
cmpsb
negb
lcall
mov
xor
stos
adc
xor
or
fs
ficomps
rcr
test
call
nop
jecxz
add
add
in
cmp
lods
cmp
or
xor
xchg
xor
mov
add
or
repz
out
aam
or
jecxz
add
and
enter
aam
clc
mov
loopne
addr16
add
sub
jl
add
sub
insb
add
sbb
add
jl
xchg
pop
xor
lret
outsl
out
xchg
cmp
add
sub
ret
test
stc
mov
add
sub
out
fisttps
aad
xor
mov
mov
push
add
jle
insb
add
iret
mov
lea
loopne
dec
add
sub
adc
mov
mov
mov
insl
pop
jle
pop
cmp
jle
add
push
add
sbb
das
nop
insl
mov
xchg
nop
cli
outsl
and
into
cmp
mov
mov
das
loopne
test
movsb
pop
fs
in
shrb
add
add
add
mov
add
iret
loope
push
add
xlat
add
fs
pusha
add
addl
mov
mov
adc
dec
add
test
add
cld
ja
add
add
jne
jbe
xchg
add
push
add
and
sbb
dec
add
mov
mov
push
addr16
sbb
popa
mov
insl
clc
pop
sub
int
and
pop
hlt
lahf
test
add
add
divb
imul
mov
add
dec
add
push
pusha
add
add
add
and
add
add
daa
and
dec
add
test
mulb
xlat
jp
fwait
jnp
in
pop
clc
inc
stc
mov
sbb
rorl
jp
add
in
dec
adc
les
in
movl
je
gs
mov
lret
add
iret
fisttps
leave
cmp
mov
mov
jp
insl
sarl
outsb
add
js
jle
push
std
add
add
inc
adc
add
cwtl
pop
push
loope
push
sbb
outsb
add
out
