jns
out
dec
or
sbb
mov
add
ret
xchg
add
test
cmp
push
add
mov
bound
mov
mov
or
pop
stos
cwtl
rolb
push
mov
out
pop
dec
sbb
jae
and
in
lods
imul
insl
arpl
ss
outsb
subl
jl
xchg
add
arpl
cmp
add
sub
add
mov
sbb
scas
xor
mov
add
add
data16
xchg
add
add
add
repz
fsubp
add
dec
mov
mov
add
mov
imul
subl
in
push
add
pop
call
mov
dec
in
cwtl
cmpsb
mov
mov
mov
int
add
setnp
add
mov
test
scas
mov
shll
mov
add
add
jl
pop
arpl
push
ss
pop
cltd
loope
add
in
fstpl
or
fldcw
add
cmp
pop
inc
add
add
icebp
scas
and
out
inc
sbb
addr16
nop
add
fwait
loop
mov
jb
mov
mov
sti
add
mov
mov
push
data16
adc
mov
test
addb
pop
ljmp
adc
sub
roll
test
xchg
jmp
pop
mov
jno
adc
mov
add
jmp
and
sbb
sbb
stos
and
mov
mov
pop
cmc
push
xlat
xchg
jmp
pop
ljmp
out
push
sub
ficoms
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
fistl
jl
and
xor
mov
adc
repnz
mov
jno
dec
dec
pop
nop
add
ss
mov
inc
cmp
add
mov
add
int3
sbb
add
stos
icebp
xor
inc
sub
add
mov
jne
and
mov
xchg
and
add
imul
mov
imul
rolb
lcall
mov
cmp
push
add
enter
nop
add
fiaddl
inc
xchg
ficoml
dec
mov
mov
jge
sub
mov
test
add
leave
sub
jo
mov
dec
xor
mov
add
add
sub
jb
mov
jecxz
add
test
popf
int
or
pop
push
sub
sub
dec
test
leave
mov
mov
mov
movsb
popa
rolb
mov
pop
int3
xor
mov
jnp
push
sahf
dec
sbb
inc
ljmp
lea
ficompl
test
xchg
add
in
xchg
pop
cmpsl
sbb
out
xchg
addb
and
mov
fmuls
xor
popa
jno
add
lcall
fldcw
daa
xchg
lods
repnz
add
out
cmp
push
push
add
push
inc
add
push
add
add
add
aas
addl
out
sbb
xchg
aad
add
mov
adc
mov
stos
in
xchg
lea
push
rolb
mov
and
das
push
mov
sbb
pop
clc
pop
xchg
in
add
push
iret
pop
int3
outsl
jae
xchg
repnz
jne
add
mov
mov
mov
adc
mov
movsb
les
or
iret
in
add
add
iret
push
fsubrp
mov
add
cmp
add
cmpsl
mov
stos
sahf
test
xchg
pop
jbe
fildll
jl
aas
adc
out
out
inc
daa
cmp
mov
or
and
mov
push
push
pushf
xchg
decb
xor
adc
add
xor
mov
rolb
sbb
mov
add
insl
lock
sbb
mov
dec
pop
xchg
mov
add
rolb
mov
add
sbb
xorl
mov
push
out
shll
or
or
lods
fisttpll
insl
mov
mov
and
mov
mov
icebp
les
lcall
add
stos
pop
mov
ss
js
xor
test
cli
insb
push
add
mov
mov
jbe
jno
add
xchg
push
jge
add
mov
mov
cli
jmp
adc
jmp
xchg
in
add
mov
jne
sub
arpl
mov
in
lahf
cmpsb
loope
cmp
addb
inc
mov
pop
mov
add
push
push
mov
add
and
jns
mov
negb
xchg
add
stc
adc
mov
fsub
mov
add
add
add
jo
mov
popa
lcall
push
sub
cmpsb
sbb
pusha
add
hlt
xchg
cmpsl
push
xor
mov
mov
cwtl
clc
adc
and
cmp
jo
mov
add
xbegin
dec
js
jbe
jge
push
xchg
enter
aaa
fdivl
add
mov
cmpsl
adc
dec
mov
mov
mov
mov
add
mov
sbb
and
mov
sbb
mov
mov
adc
push
inc
dec
repnz
xlat
inc
repnz
xor
js
and
or
fsubl
add
or
push
sub
dec
in
data16
push
add
addb
aad
add
adc
add
mov
add
dec
cwtl
jnp
mov
cltd
xchg
aas
mov
mov
or
and
imul
jne
add
data16
and
mov
add
adcl
icebp
enter
loop
mov
insl
mov
inc
ret
loope
mov
dec
pop
outsb
out
fs
aas
jg
mov
repz
xor
imul
mov
dec
pop
xchg
pop
mov
jl
divl
mov
add
mov
sbb
mov
or
out
gs
inc
test
add
jb
mov
test
mov
and
add
jnp
jmp
mov
or
add
incl
adc
pusha
add
push
out
mov
sbb
inc
ret
push
in
fldcw
add
movsb
jmp
pusha
add
sub
add
xor
mov
sub
xchg
add
mov
loope
pop
push
loopne
mov
add
imul
pop
daa
sub
add
mov
jne
cmpsb
out
incl
push
add
cmpsb
push
call
jnp
and
mov
pusha
add
sub
movsl
jle
add
fwait
daa
movsl
notb
gs
xchg
mov
fwait
into
in
mov
lock
add
rcl
add
xchg
or
mov
add
xchg
add
int3
adc
mov
sbb
xchg
mov
add
pop
jmp
lret
hlt
stos
repnz
lods
xchg
inc
add
cmp
push
fiadds
add
cmp
push
xor
mov
add
movsl
testb
mov
andl
add
mov
add
mov
inc
fcmovne
aas
popf
pop
lea
loop
mov
ljmp
pusha
add
inc
add
clc
mov
mov
jns
out
xor
mov
add
jecxz
imul
iret
inc
add
or
shr
fcmovbe
in
arpl
rolb
mov
adc
jecxz
sbb
jl
sub
mov
jb
mov
mov
pop
jne
jae
xchg
stc
repz
inc
add
fstps
jns
dec
push
mov
insl
sbb
jge
pop
jns
dec
inc
lods
mov
clc
or
jl
add
jg
cmpsb
inc
add
insb
gs
add
mov
add
rcl
xchg
out
sbb
clc
dec
scas
ss
test
lret
outsb
xor
push
inc
push
rolb
push
iret
pop
mov
out
add
adc
add
bound
mov
mov
test
jmp
pop
xchg
pop
ficoml
jle
mov
mov
scas
jno
pop
dec
lahf
adc
add
mov
xchg
pushf
cltd
xlat
insb
popa
add
mov
push
mov
mov
or
dec
bound
mov
xchg
push
lock
dec
stos
dec
adc
pop
rcrl
dec
hlt
inc
neg
fnstcw
addb
iret
adc
sbb
xchg
cmpsl
xor
mov
mov
xchg
adc
mov
mov
jecxz
pop
cmp
add
xor
add
pop
xor
add
cld
mov
add
cmp
out
adc
add
mov
mov
sub
cmc
inc
xor
mov
xchg
cmc
and
or
addb
in
rolb
mov
push
jmp
mov
sub
add
push
sub
icebp
pop
mov
mov
mov
mov
jcxz
aaa
push
rolb
mov
loop
mov
lret
fnstenv
adc
pop
cmp
je
push
push
pop
lds
fsubs
mov
jo
mov
add
aam
jge
insl
das
js
fisubrl
js
aaa
push
mov
lret
pop
dec
leave
add
add
les
lret
mov
xor
mov
inc
add
pop
jle
jg
cmp
das
fnstsw
mov
sbb
int
jbe
mov
xor
mov
fs
mov
mov
jno
mov
mov
sahf
xor
shll
mov
pop
xchg
push
add
sbb
xchg
add
cmpsb
lcall
lret
mov
add
fstl
sub
xchg
jne
ja
lahf
mov
xlat
mov
add
pop
aas
mov
daa
jne
addb
pop
rorl
add
mov
mov
in
imul
mov
adc
int3
mov
cmpl
int3
rol
xor
add
mov
jae
das
push
sbb
stc
mov
mov
out
jg
xchg
add
lret
and
dec
and
sbb
sbb
mov
mov
mov
dec
fistps
mov
dec
stos
fldcw
stc
dec
mov
adc
aad
arpl
outsl
pop
sub
and
jg
push
mov
nop
add
pop
jmp
mov
aad
mov
mov
mov
jmp
add
add
lock
inc
rolb
lods
inc
xor
daa
pop
clc
mov
mov
and
adc
enter
jne
and
sub
out
pop
adc
data16
enter
pushf
jns
xchg
push
or
pusha
add
push
les
mov
adc
pop
dec
jns
xor
mov
mov
mov
mov
cmc
sbb
mov
pushf
xchg
xchg
mov
mov
mov
add
fs
test
and
mov
lds
test
sub
mov
lods
jb
mov
mov
lret
mov
jp
xchg
add
outsl
lock
lret
out
sub
imul
mov
add
cmp
fwait
lods
xor
adc
gs
xchg
sub
sub
or
sti
addb
cmp
jl
add
add
mov
lret
arpl
pushf
aad
inc
sub
addb
mov
cmpsl
out
push
push
add
add
add
sub
daa
pop
cmp
push
add
mov
dec
or
add
add
mov
test
add
andl
cmc
or
aas
xchg
addb
push
add
cmc
jp
push
add
sarl
mov
jbe
jbe
mov
pushf
dec
mov
mov
add
dec
xchg
movsl
ja
push
leave
xchg
icebp
pushf
cmp
adc
mov
fprem
adc
mov
dec
dec
jne
xchg
icebp
dec
push
add
scas
hlt
rcll
sub
pop
mov
rdmsr
add
mov
orl
and
insl
cmp
add
xchg
push
sub
and
mov
add
mov
add
mov
and
mov
and
mov
sub
push
cmpsl
xchg
push
clc
or
addr16
addb
xchg
movsb
sbbl
add
mov
test
xchg
inc
inc
lret
mov
dec
sbb
addb
dec
jmp
add
sub
push
push
xor
mov
mov
test
push
mov
mov
add
hlt
enter
out
vpaddusw
sahf
divl
add
mov
mov
mov
mov
mov
add
push
add
add
mov
xlat
mov
js
mov
stos
mov
imul
mov
adc
pop
add
mov
push
add
cmp
add
aaa
cs
shl
ljmp
pop
in
ljmp
imul
scas
xor
ret
jmp
sarl
sbb
leave
dec
xchg
rolb
mov
mov
mov
pushf
lods
jno
jb
mov
add
leave
rolb
mov
inc
mov
lret
mov
ret
xlat
cmp
or
sub
dec
push
dec
ds
dec
mov
aas
cmp
mov
lahf
imul
mov
add
sbb
push
mov
dec
fisttps
mov
mov
add
inc
aas
je
cmp
sahf
and
adc
mov
and
icebp
pop
mov
and
cmp
or
or
xchg
mov
add
cmp
loopne
mov
add
lea
pop
lock
lcall
mov
fwait
sbb
adc
mov
inc
test
add
mov
xchg
add
lahf
and
in
jns
jns
or
mov
add
outsb
mov
inc
xchg
gs
out
add
testb
mov
ret
loope
nop
add
ja
sbb
dec
mov
rolb
mov
dec
cmp
arpl
push
add
add
add
mov
les
mov
setg
outsl
imul
mov
add
mov
into
loop
mov
mov
loopne
mov
rolb
mov
dec
mov
add
gs
and
mov
add
push
icebp
push
jns
imul
add
decb
imul
cld
adc
mov
popf
daa
mov
push
push
popa
push
add
jge
cld
mov
xchg
int
sub
pop
push
call
xchg
lret
sti
sbb
xor
mov
sbb
xor
cmp
lahf
insb
pop
mov
arpl
les
adc
xchg
jecxz
mov
add
lds
cld
mov
sahf
test
jge
sbb
gs
lock
rolb
mov
xchg
or
add
js
loopne
mov
add
mov
add
mov
mov
cmc
and
mov
jnp
mov
push
mov
aas
ja
lret
push
mov
add
mov
stos
dec
lcall
xchg
xchg
fidivrl
jne
and
mov
pop
pop
add
mov
sahf
cmpsl
repz
add
mov
push
insb
in
jne
mov
test
add
stos
shll
jl
pusha
add
add
add
hlt
out
int
add
mov
xchg
pop
sbb
add
mov
aam
mov
add
popa
rcrl
fmull
adc
mov
inc
add
and
mov
xchg
jmp
mov
loop
mov
rolb
dec
or
sub
mov
add
hlt
push
into
and
xchg
add
add
popa
cwtl
in
in
addb
lret
pop
lret
cli
pop
imul
mov
add
mov
add
and
mov
add
mov
adc
rolb
sbb
repnz
ljmp
mov
add
cmp
lahf
push
xchg
add
in
sahf
sub
gs
ja
adc
mov
lods
sti
pop
cmpsb
push
add
cmp
lock
ficoms
sbb
iret
jbe
or
test
dec
lods
ret
dec
lods
add
mov
fs
outsl
or
rolb
mov
add
dec
inc
add
add
push
aad
and
mov
xor
je
jo
mov
dec
add
pop
xchg
add
mov
adc
mov
in
dec
cwtl
cwtl
lods
and
push
jle
or
add
mov
popf
ss
mull
fiadds
stos
xchg
add
mov
ror
incb
sbb
add
clc
or
incb
arpl
mov
rolb
mov
mov
xor
sbb
ljmp
xor
add
sub
add
pop
mov
movsb
jmp
adc
mov
out
mov
add
add
push
mov
out
add
add
xor
mov
rorl
pop
mov
mov
mov
arpl
movq
mov
mov
pop
adc
add
add
mov
mov
out
bound
mov
lods
inc
fbld
insb
mov
xor
mov
add
pop
or
in
ljmp
push
out
pop
sbb
loop
mov
lret
add
out
sbb
movsb
xor
mov
in
popf
enter
cmp
xchg
pop
enter
or
pop
into
or
add
out
pop
inc
push
gs
nop
add
mov
mov
mov
add
fstpt
add
lea
mov
cmp
add
out
sahf
jge
add
adc
mov
mov
rolb
mov
ja
push
add
pop
mov
jns
push
dec
adcl
and
daa
cmpsb
jae
das
sarl
add
jle
dec
pop
arpl
rolb
mov
xor
mov
xor
adc
or
sti
cmpsl
cs
add
push
imul
aaa
lcall
int
lods
inc
add
cwtl
enter
mov
jns
neg
inc
inc
cs
lret
aam
rolb
rorl
mov
mov
jge
and
add
call
adc
mov
iret
stos
fiadds
mov
add
inc
rcll
xchg
clc
and
and
mov
imul
cmpsb
or
jp
iret
adc
mov
cli
push
les
dec
mov
mov
lahf
std
mov
inc
add
aas
loop
mov
std
outsl
cwtl
or
fisttpll
mov
andps
lahf
push
add
mov
icebp
rolb
xchg
jp
jo
mov
sbb
add
add
popf
inc
sbb
lret
add
mov
out
jo
mov
add
add
push
mull
andl
mov
push
adc
xchg
jnp
mov
push
mov
and
mov
int3
and
mov
lcall
inc
hlt
popa
je
mov
outsl
jne
mov
insl
lret
push
add
call
movsb
fucom
imul
cmp
lret
xor
movsb
negb
xchg
scas
out
and
push
add
loopne
mov
mov
add
mov
in
lret
add
cmp
add
mov
mov
jecxz
add
ret
sahf
addr16
jge
push
movl
pop
imul
leave
ret
mov
insl
lret
test
xchg
mov
not
testb
out
insl
lods
ja
hlt
aad
cli
lds
add
jg
pop
push
ret
daa
adc
sub
enter
add
sti
sbb
cmp
add
ss
pop
stos
inc
add
mov
cld
stc
rolb
or
fwait
ja
jnp
repz
call
mov
roll
stos
movsl
gs
addb
lods
sub
add
push
push
mov
dec
xor
es
fnsave
push
pop
push
or
cmp
roll
mov
mov
cmp
xlat
cltd
jge
push
insb
fs
add
mov
xorl
insl
sub
popa
in
mov
adc
push
fmuls
xchg
add
dec
mov
adc
dec
jl
stc
data16
mov
lret
mov
add
jl
mov
inc
add
add
fcompl
add
mov
cmp
pop
addr16
add
push
add
push
push
jae
insb
out
out
addr16
aam
sbb
add
and
aas
insl
mov
and
cmp
xchg
aad
pop
ljmp
mov
test
adc
mov
addb
pushf
js
add
aas
mov
mov
jb
mov
test
rolb
mov
add
fwait
cwtl
aad
add
push
push
add
out
xor
mov
cs
js
cmp
mov
loopne
mov
adc
cmp
pop
and
mov
add
xchg
or
dec
addb
fnstcw
add
add
dec
inc
dec
xor
mov
ret
loope
xor
mov
rolb
mov
xor
lahf
add
mov
inc
push
addb
push
mov
and
jns
mov
add
add
ss
movsb
push
add
aam
and
or
add
addr16
pop
or
cmp
or
sahf
rolb
pop
push
idiv
leave
sbb
add
ficomps
sub
push
iret
mov
add
loopne
mov
int3
sub
mov
jns
or
insl
imul
mov
mov
sbb
jb
mov
fwait
pop
jmp
sti
push
insb
cmpsb
test
mov
pop
fsub
pop
pop
pop
sub
lock
cmp
jge
xchg
frstor
ret
imull
xchg
daa
ret
incb
lods
aad
pop
xlat
lock
add
pop
popf
xor
pusha
add
or
adc
mov
add
pop
jbe
sub
repz
push
sbb
add
push
add
scas
nop
add
addr16
jle
jno
out
outsl
pusha
add
les
dec
sub
xor
cmp
mov
mov
rolb
mov
and
mov
out
jg
dec
out
sahf
inc
sbb
sahf
sti
push
adc
add
lret
sub
xchg
stos
jb
mov
push
sarl
dec
push
xchg
mov
add
mov
lret
das
push
jnp
dec
mov
push
jle
xchg
imul
cmc
xchg
popf
icebp
dec
ret
mov
xchg
xchg
add
clc
push
or
push
cmpsl
lock
jo
mov
out
leave
push
psubusw
add
mov
stos
test
ljmp
jae
add
add
add
mov
call
sbb
inc
pop
cld
jmp
sub
icebp
xlat
aam
and
orl
sub
out
rorl
movsl
fsubrp
in
mov
dec
iret
iret
loop
mov
xor
mov
stos
inc
push
xchg
cmp
arpl
and
mov
add
mov
cmp
in
add
cmc
mov
inc
add
add
gs
mov
out
pop
sub
mov
addr16
mov
push
mov
in
in
mov
mov
mov
add
cmpl
or
inc
add
std
mov
pop
lock
jo
mov
or
mov
bound
mov
loop
mov
cmp
mov
ficoms
push
ja
mov
inc
mov
xor
in
shl
add
sbb
ret
rorl
or
push
mov
scas
xchg
add
mov
mov
stos
xor
rcll
mov
mov
loope
add
addb
test
add
fwait
nop
add
mov
xchg
ret
stos
mov
mov
sub
push
lret
dec
fdiv
add
loope
push
add
xchg
add
pop
or
test
add
cmp
call
vmovlps
inc
or
inc
into
rolb
xor
mov
dec
dec
inc
divb
xor
repnz
add
das
je
pop
add
and
inc
add
mov
sub
mov
push
pop
test
stos
in
ds
jnp
xchg
mov
xchg
xchg
imul
mov
add
loopne
mov
dec
cmp
test
flds
gs
mov
mov
jns
fs
mov
data16
mov
mov
add
mov
add
cmp
ret
xor
test
mov
xchg
stos
adc
mov
jnp
add
or
and
mov
add
dec
dec
mov
cmp
pop
js
or
mov
add
add
mov
call
sbb
inc
xchg
dec
pop
inc
inc
sub
add
sti
jnp
xchg
cwtl
inc
add
enter
add
push
repnz
pop
jbe
add
cmp
jl
repz
mov
pushf
sub
loop
mov
push
stos
imul
sbb
fimull
divl
adc
stos
iret
addb
sbb
test
insl
flds
add
out
jno
bound
mov
insb
addl
outsb
ljmp
mov
mov
add
std
push
push
add
rcl
xchg
in
or
xchg
sti
cmpsl
cmpsb
shll
cltd
in
xor
arpl
sub
cmc
inc
icebp
stos
lock
pop
cmp
add
mov
inc
std
in
nop
add
adc
in
pop
inc
mov
mov
mov
mov
mov
addb
dec
fptan
add
rolb
mov
inc
sub
je
pop
jne
jns
pop
inc
add
mov
add
xor
mov
gs
sbb
inc
add
fsub
add
xchg
in
inc
push
repz
jae
add
loope
add
cmpsb
jb
mov
aam
loope
divl
outsb
pand
idivb
int
addr16
popa
mov
popa
push
add
pop
jl
adc
out
xchg
add
cld
in
outsb
mov
pop
inc
arpl
scas
decb
dec
add
jmp
mov
mov
add
nop
add
mov
sub
add
cmp
mov
push
fmull
outsl
jge
xor
push
nopl
scas
ljmp
lock
mov
push
lea
mov
aas
jbe
inc
enter
mov
inc
add
add
or
dec
das
inc
add
mov
xchg
push
add
in
push
aam
add
xchg
test
add
roll
stos
lea
addb
jo
mov
ret
pop
push
add
mov
mov
lret
and
in
ficoms
pmaddwd
push
add
mov
add
jp
sbb
adc
mov
or
pop
imul
mov
pop
in
adc
mov
fidivrs
mov
mov
add
and
or
add
mov
jl
push
cmpsl
add
mov
clc
mov
imull
cwtl
mov
add
inc
add
mov
mov
lods
mov
mov
test
jmp
push
mov
and
mov
cwtl
sub
stos
xor
xchg
add
lds
es
test
outsb
add
pop
xor
dec
mov
pop
push
pop
decb
je
and
add
adc
pop
push
add
and
mov
inc
out
imulb
add
xorl
sub
movsb
dec
pop
mov
add
mov
cmp
stos
out
popw
data16
ret
rolb
sbb
mov
les
int3
addr16
add
std
and
mov
fistps
test
enter
xchg
out
push
lds
jbe
mov
jle
lcall
test
add
or
push
xchg
aaa
dec
mov
and
stos
push
add
dec
jne
cmp
out
imul
adc
mov
dec
cmpsl
cmp
or
addb
mov
push
add
add
push
cmp
mov
scas
push
jp
mov
push
mov
pop
rolb
mov
pop
into
stos
lock
inc
pop
in
inc
push
cmp
fimuls
rcll
or
inc
cmc
jg
in
testb
cld
loope
jne
sub
out
in
adc
inc
fidivrs
sar
pop
clc
push
push
push
mov
add
push
and
sbb
mov
jp
cmpsb
fnstsw
test
jecxz
push
or
push
data16
pop
sbb
and
mov
jb
mov
mov
sub
dec
mov
add
adc
mov
mov
xor
mov
and
mov
add
pop
push
or
inc
fisttps
add
into
xlat
dec
xchg
and
jnp
hlt
divl
sbb
sti
push
lods
ss
add
cmpsl
aas
pop
rolb
mov
mov
in
je
fcomi
aaa
mov
movsl
and
lahf
jne
sub
repnz
stos
cmp
cmp
js
pop
push
pop
cmpsb
mov
mov
lock
das
mov
and
jo
mov
dec
dec
mov
ss
adc
mov
jmp
out
pop
dec
in
mov
call
mov
int
adc
mov
in
sahf
aad
js
xchg
sbb
out
ljmp
push
cmp
clc
jne
adc
mov
jo
mov
outsb
sahf
mov
push
add
mov
imul
mov
push
pop
sbb
jbe,pt
addr16
sbb
jecxz
mov
ljmp
or
and
jle
add
xchg
xchg
inc
add
add
push
add
fwait
pop
fisttpll
maxps
mov
inc
add
mov
scas
mov
adc
push
cld
dec
mov
mov
aaa
push
jb
mov
add
mov
movsl
inc
add
add
imul
mov
add
add
push
jo
mov
and
mov
mov
add
pop
mov
sbb
fisubrl
cld
mov
call
mov
insb
lock
pop
mov
ffree
jmp
add
loop
mov
xchg
gs
sbb
xchg
sbb
mov
mov
ja
add
mov
cld
les
xchg
lret
dec
push
out
lret
fnstsw
sbb
jle
add
lea
addr16
xchg
inc
mov
and
mov
inc
xchg
cmp
mov
nop
add
cmpsb
lret
sbb
push
cmp
mov
add
inc
and
mov
xor
popf
das
aas
xor
push
or
adc
mov
sti
pop
mov
add
cmp
addb
xlat
mov
stos
pop
leave
lods
mov
and
mov
xchg
adc
mov
call
pop
or
adc
add
insl
divl
call
add
mov
daa
mov
add
sbb
roll
rcll
jg
mov
cmp
sahf
push
divl
mov
sbb
jmp
and
mov
pop
loopne
mov
jae
stos
jns
pop
pop
and
add
scas
divl
cltd
std
enterw
mov
enter
add
add
mov
add
add
sbb
andl
add
mov
movsb
adc
add
mov
xchg
pop
sub
fs
and
jle
add
jns
jmp
outsb
test
cmp
pop
mov
decb
jle
dec
or
roll
dec
inc
aaa
mov
add
aam
loopne
mov
mov
mov
jge
or
outsl
mov
add
rcr
notb
jae
dec
cld
outsb
mov
inc
ret
cmpsl
cmp
push
cmpsb
cmpl
popf
icebp
push
jo
mov
adc
cmpsl
xor
aad
push
ret
inc
rolb
mov
add
mov
popf
cmc
out
mov
push
lret
cwtl
arpl
dec
xor
adc
ret
jns
xchg
int
push
pop
loop
mov
xor
int3
fsts
add
out
hlt
xor
add
pop
repz
mov
adc
mov
add
add
fmul
sub
xchg
ret
mov
dec
iret
sbb
push
enter
mov
ja
cmp
scas
das
add
or
mov
push
cmc
pop
cltd
jbe
add
add
jecxz
js
add
and
push
jmp
add
pop
repnz
jle
jp
cmp
cmp
add
mov
mov
cmp
pop
in
push
adc
mov
xchg
mov
fs
sti
push
call
add
ljmp
mov
mov
add
ljmp
cmpsl
test
mov
test
adc
lahf
out
mov
test
push
sub
mov
adc
mov
jae
xchg
ja
add
xchg
mov
mov
outsb
mov
sub
mov
mov
int3
leave
data16
mov
mov
ss
and
cmp
hlt
repz
xchg
add
sub
bound
mov
push
push
add
js
sahf
jnp
cmp
jno
cld
mov
push
and
inc
add
cltd
cmpsb
xor
mov
gs
imul
lock
imul
mov
add
xor
mov
fcmovnbe
out
popa
mov
lods
jb
mov
xlat
fildll
xor
mov
mov
add
mov
mov
add
mov
mov
xchg
push
lret
arpl
lahf
add
jae
into
scas
sub
addr16
pop
push
sbb
fcoms
add
sahf
loop
mov
sbb
repz
cld
leave
movsl
test
mov
adc
add
dec
cmp
scas
and
add
mov
sub
outsb
push
dec
pop
and
mov
rcrl
cmc
arpl
add
mov
mov
lock
dec
popf
test
inc
mov
sub
add
lock
lcall
and
pop
xchg
sub
outsl
lea
mov
leave
cmpsl
aaa
sub
mov
pushf
mov
add
sbb
mov
push
shll
pop
stc
rcrl
daa
xchg
add
addb
daa
pop
in
cs
mov
mov
cmp
xchg
add
add
inc
ret
push
rolb
mov
add
ljmp
in
mov
jp
adc
cmp
sbb
mov
jno
add
mov
cwtl
push
pop
mov
inc
add
stc
pop
outsb
sub
jecxz
inc
xchg
pushf
push
popf
xchg
inc
mov
add
repnz
test
xchg
in
xchg
fildll
idiv
fdivl
inc
mov
int3
pop
and
mov
xchg
ret
pushf
repz
xor
mov
dec
xchg
add
icebp
sub
adc
mov
add
or
cld
int
adc
lret
and
push
pop
sbb
lds
mov
or
aad
mov
pushf
outsl
setg
add
mov
pop
decl
fdiv
jae
stc
cltd
push
leave
push
add
jne
jne
add
mov
repz
test
mov
ret
mov
add
mov
mov
das
xlat
add
xchg
ss
jecxz
pop
sbb
aas
lret
hlt
jbe
rolb
mov
add
aas
add
jle
adc
mov
push
cmp
pop
mov
add
mov
mov
add
add
xchg
mov
lods
jmp
arpl
lret
daa
xor
mov
jbe
xchg
loopne
mov
mov
mov
add
pop
loopne
mov
sub
sub
xor
add
test
fistl
add
lods
cwtl
cmpsl
mov
mov
sub
cwtl
xor
mov
push
jne
lret
inc
loopne
mov
movsb
movsb
mov
addb
push
sub
bound
mov
inc
mov
repnz
mov
scas
les
pop
fcompl
push
add
out
jbe
inc
add
outsb
mul
dec
in
popa
popa
xchg
xchg
scas
inc
and
push
clc
mov
mov
out
add
xor
mov
xor
jns
add
pop
test
addr16
jg
inc
add
pop
in
movsl
push
push
int
jb
mov
out
pop
xchg
lock
and
adc
std
mov
lcall
mov
or
push
cld
arpl
xlat
inc
add
add
pop
ja
or
add
dec
push
gs
ljmp
mov
mov
add
cli
jbe
push
inc
add
adc
mov
add
mov
push
pop
push
and
add
xchg
sub
sbb
int3
je
mov
add
mov
xchg
push
or
add
aaa
imulb
cmp
pop
inc
ret
pop
and
add
stos
add
mov
add
mov
ret
mov
xchg
pop
cld
into
repnz
add
or
leave
test
and
mov
adc
push
add
std
sbb
sub
jno
imul
mov
add
leave
jns
gs
add
or
pop
mov
repz
add
mov
imul
iret
adc
mov
test
xchg
jp
mov
xor
call
hlt
lret
xchg
cmp
inc
cmpsb
imul
bound
mov
neg
movsl
repz
test
dec
sti
add
adc
push
mov
fdivrs
mov
and
mov
jae
mov
mov
and
xchg
mov
pop
inc
daa
inc
add
push
inc
data16
movsl
pop
rolb
mov
shll
loope
push
xchg
dec
aad
jns
adc
mov
or
add
cmp
add
mov
mov
icebp
popf
mov
insl
mov
add
mov
add
mov
repz
cmp
scas
movsl
repz
and
and
jmp
or
mov
scas
sbb
xchg
mov
add
xor
js
adc
add
fnsave
and
xchg
inc
out
mov
add
jmp
add
lock
add
add
pop
xor
mov
and
mov
loopne
mov
mov
cmp
jb
mov
imul
mov
mov
mov
out
push
stos
dec
mov
das
hlt
mov
cmpsl
mov
xchg
add
mov
inc
stos
jp
push
dec
and
mov
xor
int
fcoms
call
jecxz
add
add
test
xchg
push
and
mov
push
mov
aad
xor
mov
jno
push
ds
add
add
sbb
aas
repz
and
cmpsl
insb
adcl
je
das
pop
ret
insl
pop
add
push
add
xor
add
adc
test
adc
mov
cmp
push
iret
gs
mov
mov
add
mov
dec
mov
aas
out
mov
enter
add
pop
rolb
clc
jp
and
mov
push
add
dec
sub
insb
and
gs
jo
mov
xor
or
jmp
aaa
test
push
mov
pushf
addb
scas
sub
adc
push
push
lahf
in
xchg
jnp
or
and
add
mov
and
jl
rolb
mov
add
sub
xor
xchg
add
mov
mov
add
mov
inc
addb
add
pop
push
xor
cmp
fs
pop
push
pop
shll
stc
hlt
cwtl
cmc
ret
add
stos
push
aad
cmp
push
xchg
stos
test
ljmp
lock
pusha
add
dec
testb
rcrl
xchg
sbb
add
xor
inc
or
add
lcall
add
jmp
bound
mov
fildl
cmpsl
push
add
in
push
add
pop
mov
pusha
add
mov
mov
mov
sbb
shll
add
mov
jle
add
mov
bound
mov
pop
ret
out
sbb
add
addb
shll
leave
mov
mov
mov
test
std
jnp
aam
in
lods
sahf
out
fdivl
mov
leave
xor
mov
add
add
mov
mov
adc
mov
gs
in
add
pusha
add
insb
jns
push
add
add
pop
jle
pop
sbb
orl
add
push
and
cmp
jl
or
or
mov
int3
out
fidivl
popf
mov
mov
add
mov
mov
or
mov
add
cmpsb
sub
mov
xchg
push
lods
adc
data16
arpl
fstpt
add
dec
outsb
pushf
push
mov
mov
insl
movsb
insl
add
fwait
pop
push
xor
out
mov
inc
xor
xchg
xchg
mov
fistpl
int3
sub
scas
add
mov
mov
addb
cli
adc
mov
inc
mov
movsb
mov
mov
and
add
cmp
xchg
add
arpl
mov
ret
in
ljmp
add
imul
add
mov
mov
mov
jb,pt
mov
aam
fimull
pop
pop
cmpsl
and
data16
and
mov
add
add
in
xchg
jmp
popa
mov
jl
xchg
xchg
xor
mov
push
stos
in
out
lcall
mov
in
push
adc
mov
rcll
or
push
push
das
ss
popa
in
pop
jo
mov
mov
add
dec
xchg
add
imul
mov
mov
jmp
add
push
mov
pop
mov
mov
sub
mov
aad
and
cmpsl
or
jne
jne
outsb
jno
fwait
mov
mov
push
mov
ja
daa
in
jg
add
pop
pop
sub
cmpsb
insl
xchg
xchg
sbb
out
jp
in
jns
pop
mov
mov
leave
pop
cmpsb
push
mov
add
scas
push
ja
inc
rcrl
mov
inc
xchg
mov
cmp
rolb
mov
pop
xor
cmp
push
loope
imull
jl
mov
jp
cld
sub
cmp
add
xor
mov
mov
add
sub
jae
xor
mov
mov
lahf
pop
jle
insl
addr16
jecxz
je
xchg
outsl
push
scas
dec
pushf
mov
outsb
jnp
push
mov
mov
and
outsb
jbe
mov
test
repz
add
mov
fimuls
dec
push
add
add
outsl
and
add
shl
add
cmpsl
stc
popl
add
mov
cmpsl
inc
add
mov
in
sub
add
add
pop
adc
add
mov
mov
add
cli
dec
mov
imul
add
and
rolb
mov
add
pop
ret
xor
xrelease
adc
mov
outsw
push
into
adc
mov
pushf
clc
testl
pop
adc
mov
mov
add
or
cmp
mov
cli
mov
mov
jp
add
adc
add
sbb
hlt
xchg
mov
push
adc
jmp
jno
in
addb
and
xchg
lock
add
pop
push
stos
lea
adc
xchg
aam
and
arpl
iret
lahf
aas
push
jmp
pandn
lret
push
push
and
mov
imul
addb
nop
add
cli
lods
dec
ds
pop
sub
add
jb
mov
test
shrl
cld
in
add
mov
pop
daa
mov
mov
or
mov
add
ret
insb
adc
mov
jns
les
test
push
push
mov
push
mov
xchg
jmp
icebp
aad
cmc
inc
mov
add
mov
arpl
mov
add
in
sub
add
mov
loope
outsb
fdivrs
nop
add
sub
push
push
pushf
sbb
pop
xchg
inc
add
in
mov
sti
imul
addb
jle
and
or
push
pop
jmpw
inc
movsb
mov
or
cld
dec
lret
pop
adc
mov
sahf
ja
pop
dec
mov
outsl
test
pusha
add
sbb
sub
add
mov
sbb
insb
pop
xor
lret
out
and
inc
or
mov
mov
add
mov
mov
jmp
aas
outsb
in
cli
cld
xor
addr16
ret
cmp
mov
lods
insl
imul
add
lahf
lret
in
out
add
cvtps2pd
inc
and
xor
mov
mov
shrl
push
add
push
xor
aam
add
sub
sub
add
pop
mov
jns
dec
or
sbb
int3
outsl
mov
cmpsl
jbe
jne
mov
mov
adc
fmull
jmp
rolb
mov
das
adc
mov
jbe
jge
add
loopne
mov
iret
jecxz
inc
jmp
add
dec
dec
or
add
jl
jmp
inc
xor
xor
cmp
in
or
fldl
mov
add
icebp
jae
add
rcrl
in
mov
or
imul
and
add
add
mov
fwait
pop
ljmp
leave
xchg
loope
lcall
mov
push
add
and
mov
mov
add
jno
fimuls
inc
popa
iret
cmp
jo
mov
in
add
push
mov
add
in
push
mov
stc
cli
les
and
addb
lock
xchg
int3
in
aaa
int
hlt
or
push
sbb
push
iret
sub
xchg
leave
dec
jbe
sti
jg
sti
inc
jno
cwtl
iret
mov
dec
push
sbb
mov
mov
and
xchg
push
jle
rolb
mov
push
sub
mov
shll
add
lock
mov
cmp
hlt
out
insb
mov
cmpsb
in
fimuls
jl
adc
mov
jns
pop
addr16
lahf
dec
fwait
lahf
mov
or
add
repnz
popa
inc
sti
popf
cmp
test
and
jbe
out
lods
dec
jns
push
push
pop
out
mov
adc
pop
sub
add
dec
mov
bound
mov
or
imul
fstpl
pmaxsw
sbb
cmc
addb
inc
ffree
inc
jle
scas
dec
mov
ds
call
roll
xchg
in
add
mov
mov
adc
mov
and
mov
outsl
ret
in
cmp
jno
rolb
mov
add
out
addb
jmp
je
iret
push
mov
aaa
sahf
data16
xor
mov
add
push
push
repnz
push
add
cld
addb
inc
pop
jp
ja
fmuls
jb
mov
lods
cmpsl
dec
cld
push
mov
add
cmpsb
cwtl
pop
icebp
stc
add
add
rolb
mov
movsb
inc
dec
jno
add
mov
mov
cmc
add
aaa
imul
sahf
mov
pop
jb
mov
mov
repz
xor
cmp
push
movsl
fs
insl
divl
roll
jae
add
mov
mov
add
insb
test
imul
xchg
adc
push
js
aam
push
push
add
mov
clc
scas
fistpl
adc
push
fisttpl
sbb
inc
cltd
adc
cmp
push
mov
ret
mov
and
mov
frstor
mov
jg
xchg
add
xchg
or
push
jl
fistpl
pop
fisttps
je
sbb
pop
add
dec
ficoms
inc
cmpl
mov
mov
mov
add
sbb
mov
popa
push
and
inc
add
cmc
dec
inc
fnstcw
addr16
push
xchg
mov
fsin
addb
push
dec
insl
les
add
and
push
cmp
or
or
lea
jmp
push
add
mov
xchg
and
ret
cmpsl
out
dec
jns
or
mov
and
jbe
jge
add
push
rolb
or
xchg
es
stos
cmp
mov
int3
xor
mov
sahf
inc
in
cmp
mov
test
cli
mov
add
lret
mov
push
or
ret
inc
in
mov
sub
add
mov
push
mov
jns
add
pmullw
arpl
or
cmp
inc
testb
mov
add
mov
jo
mov
add
fnstenv
jge
lahf
push
add
xchg
add
jp
fmul
push
and
mov
push
test
dec
mov
mov
out
or
push
add
mov
mov
mov
dec
cmp
mov
std
cmc
shrl
push
loopne
mov
rolb
mov
jb
mov
inc
movsl
idivb
cmpsb
xor
mov
mov
iret
xor
xor
sbb
cmp
pop
leave
jbe
jle
mov
pop
outsb
movsl
inc
stos
fsubrs
or
out
or
fmul
mov
mov
aaa
daa
cmpsl
xor
mov
sub
mov
loope
addb
jnp
add
push
add
mov
jmp
je
push
push
push
add
inc
mov
xchg
mov
add
sbb
xor
mov
jge
in
push
mov
in
jo
mov
pop
cmc
repz
cmpsl
and
add
add
jb
mov
mov
rcl
add
and
jne
arpl
cmp
out
push
add
sub
jnp
mov
mov
mov
inc
dec
mov
repnz
into
xor
mov
adc
add
aam
pop
shll
push
jne
add
imulb
add
mov
movsl
mov
push
xor
mov
add
into
xchg
jb
mov
push
add
push
add
pop
sub
outsb
hlt
fs
gs
add
and
mov
inc
cmpl
mov
leave
pusha
add
js
and
lods
cli
jecxz
fnstenv
and
mov
addr16
arpl
add
out
fadd
dec
js
add
add
mov
test
push
mov
inc
imul
inc
mov
mov
in
inc
fwait
xor
cmp
idivl
add
jg
jae
xchg
pop
mov
dec
mov
mov
clc
and
mov
mov
ja
add
add
lcall
movsl
mov
mov
hlt
out
pop
cmpsl
les
aaa
fiaddl
icebp
cltd
cmpl
loope
add
loop
mov
xchg
add
ret
fldenv
int3
sbb
add
add
loopne
mov
mov
imulb
testb
add
repz
push
es
addr16
dec
stc
adc
jp
push
cmp
mov
aam
xor
mov
popf
mov
mov
in
aaa
aad
pop
enter
arpl
xchg
add
sbb
push
add
sti
stc
inc
add
mov
push
pop
pop
xchg
push
fs
adc
push
add
mov
pushf
add
mov
aad
adc
mov
push
xchg
cmp
mov
mov
repnz
lcall
lcall
outsb
inc
jne
add
imulb
dec
lods
icebp
push
add
dec
iret
mov
aas
sbb
arpl
sti
dec
and
rolb
mov
rcll
mov
xor
or
push
mov
add
ja
inc
cmp
addr16
xor
mov
push
jecxz
out
add
add
in
addb
push
mov
sbb
push
push
jns
rcl
iret
enter
int3
repnz
pop
sahf
pop
inc
or
lss
mov
push
mov
add
mov
cmp
mov
add
pop
pop
addb
les
inc
faddl
mov
stos
or
fimuls
jl
lcall
mov
cmc
andl
xchg
out
std
jno
nopl
mov
mov
mov
sbb
mov
and
xlat
xor
icebp
jne
inc
push
add
scas
jp
loope
lea
jecxz
and
ljmp
mov
add
jle
adc
jnp
lods
mov
pop
adc
fnstcw
add
bound
mov
push
mov
or
jge
add
push
js
fwait
int3
sbb
mov
mov
mov
xchg
add
or
cld
loop
mov
jl
cli
test
jnp
adc
sbb
pop
mov
adc
mov
jbe
or
fistpll
dec
xor
mov
add
mov
out
orl
lcall
fildl
add
add
dec
mov
outsl
test
add
ret
xor
add
lods
sub
xchg
inc
add
mov
lock
popf
mul
ss
add
or
xchg
sbb
add
mov
jne
mov
jle
xor
lahf
cmp
sub
mov
xchg
add
mov
sbb
ds
jg
jns
sub
or
jp
add
mov
mov
repnz
cs
sub
and
mov
std
fcompl
sub
or
shll
add
out
sub
stc
out
rolb
mov
subl
ljmp
mov
mov
mov
mov
mov
adc
mov
mov
xor
mov
shll
cld
popf
loop
mov
fistl
mov
out
xor
mov
jnp
add
xchg
pop
cwtl
aas
lcall
xor
add
add
mov
flds
sbb
push
stc
mov
add
mov
add
icebp
cmp
test
loop
mov
test
sbb
add
outsl
test
xchg
add
mov
ljmp
mov
mov
mov
mov
dec
pop
repz
rolb
mov
cmp
popa
inc
add
pop
xor
add
xchg
add
stc
nop
add
scas
je
pop
lret
add
dec
cmp
jns
mov
mov
ss
adc
mov
add
mov
mov
mov
stc
cmp
push
push
sbb
xor
xlat
cli
repz
mov
arpl
add
js
or
cmpsb
pop
fcomps
inc
add
cmp
add
add
jmp
aas
adc
js
push
testb
xor
mov
scas
pop
mov
fs
pop
sbbl
add
mov
jg
fsubrl
idivl
cmp
das
nop
add
push
ljmp
add
and
aam
pop
push
and
mov
rolb
mov
xchg
add
hlt
or
in
mov
neg
inc
hlt
pusha
add
rolb
mov
nop
add
ret
sti
cmpl
jp
add
in
and
jnp
cld
icebp
jecxz
out
lret
add
imul
inc
push
or
or
loope
out
xchg
add
std
xchg
loope
cmpsl
insb
sti
jmp
cltd
fldl
int3
mov
movsb
jle
pop
or
or
daa
in
adc
pop
int
add
and
inc
out
fnstcw
lds
add
mov
rolb
inc
mov
cwtl
repnz
mov
fs
xlat
xor
mov
inc
jne
jae
pop
adc
mov
jmp
in
push
clc
cmp
ds
jge
sub
stos
fisttpll
imul
mov
cmp
mov
pop
in
icebp
mov
mov
add
dec
or
mov
jns
add
adc
sbb
add
add
jp
fidivs
fisubl
int3
jae
je
mov
add
fdivl
xchg
test
sub
cmp
xchg
imul
mov
leave
mov
cli
cmp
mov
jmp
add
mov
sub
cli
sbb
aam
add
pop
dec
in
mov
arpl
sbb
pop
xchg
add
mov
fcom
aas
jno
add
xchg
js
ljmp
xchg
movsl
repz
call
jge
add
sub
cmp
sbb
jp
xchg
in
test
mov
push
or
push
jne
sub
nop
add
jmp
add
bound
mov
pop
scas
lcall
outsb
sub
sub
add
cmp
push
shll
mov
push
add
add
rolb
pushf
fildll
add
mov
mov
sti
sbb
cmp
pop
das
lds
mov
arpl
aas
mov
mov
jb
mov
or
lret
daa
pop
mov
sub
rolb
mov
add
add
mov
js
mov
cli
inc
and
mov
and
mov
add
add
repz
ljmp
jbe
into
aaa
mov
cltd
jb
mov
add
sbb
sub
cltd
add
push
add
xor
mov
adc
mov
mov
out
imul
inc
push
jg
xchg
mov
fistl
add
add
or
aad
pop
repz
add
mov
mov
lahf
popa
mov
mov
add
fnstenv
mov
pop
add
mov
rolb
mov
jae
andl
mov
ret
clc
adc
mov
pop
hlt
push
jecxz
cmpsl
cmp
add
xor
fistl
mov
rolb
mov
daa
jl
imul
mov
fcompl
push
mov
mov
nop
btr
add
les
add
mov
mov
orl
imul
push
add
push
loope
frstor
mov
add
mov
push
add
add
in
cmp
jbe
test
loope
mov
rolb
jbe
or
add
es
bound
mov
iret
addb
aaa
loopne
mov
or
mov
addl
xor
mov
xor
adc
mov
inc
add
int3
fbld
cmpsl
and
imul
mov
and
imul
mov
inc
jne
arpl
adc
cmp
sbb
test
cld
add
and
mov
not
movaps
mov
push
add
ret
enter
pushf
clc
fsubrl
mov
mov
dec
imul
or
xlat
mov
mov
in
hlt
inc
add
or
dec
dec
lcall
add
fdivrs
add
das
add
add
mov
add
mov
mov
push
clc
inc
pop
or
lods
adc
dec
mov
stc
test
mov
test
clc
sbb
mov
ss
fldenv
addl
xlat
and
mov
add
cmp
out
cmp
jle
add
add
xchg
in
cmp
add
or
aaa
pop
xor
mov
mov
int
add
mov
sub
mov
outsl
xchg
stc
mov
add
rolb
int3
mov
add
add
push
addr16
ret
xchg
xlat
sbb
add
push
mov
mov
imul
cmp
add
mov
xor
jmp
and
mov
clc
fwait
xchg
pusha
add
inc
mov
push
add
sbb
bound
mov
in
xchg
add
xlat
add
xlat
cmp
sub
inc
add
in
inc
xchg
addb
je
ret
sbb
sbb
push
add
lea
mov
inc
xor
mov
sahf
movsb
sbb
add
loope
lock
add
add
hlt
sub
add
mov
or
mov
add
add
rolb
mov
sbb
jmp
loop
mov
mov
add
push
imul
pop
and
mov
dec
xor
push
sbbl
xor
mov
sub
sub
repz
fnstsw
dec
repz
fildll
mov
add
add
pop
adc
in
push
add
push
jp
add
push
cmp
repz
or
inc
add
mov
mov
fisttpll
dec
xchg
lret
adc
mov
mov
xchg
popa
in
ss
mov
mov
scas
jae
jns
jnp
inc
add
mov
mov
loop
mov
cmp
dec
dec
inc
add
mov
imul
ficoms
ss
push
sbb
pop
pop
adc
iret
std
lods
xor
add
xchg
pop
inc
add
inc
xchg
xor
mov
add
mov
fisttpll
add
sub
mov
call
mov
outsb
xor
mov
ficoms
add
mov
jb
mov
jmp
and
lds
add
push
dec
or
mov
fldl2t
mov
std
and
mov
arpl
cs
sub
pop
and
mov
xchg
jecxz
mov
outsb
addb
push
aas
jmp
jle
inc
add
xchg
movsb
sbb
daa
outsb
push
mov
push
add
mov
mov
mov
out
sub
jae
add
jns
int
enter
mov
out
mov
dec
push
cmc
movsb
enter
imul
xor
and
inc
add
or
stc
sub
inc
push
arpl
adc
mov
push
and
addb
into
push
xchg
scas
xor
mov
mov
addb
stos
add
cmp
inc
add
mov
sti
addb
repz
mov
mov
and
add
mov
sub
mov
adc
mov
add
es
jnp
push
add
stc
adc
jle
add
lds
movsb
dec
mov
fstps
stos
shll
cmpsl
lods
jmp
negl
push
mov
and
mov
dec
cmp
clc
jmp
add
add
adc
stos
xor
ss
arpl
mov
mov
clc
adc
mov
add
cmp
add
mov
sahf
dec
into
push
mov
mov
xchg
mov
push
icebp
and
mov
mov
mov
gs
mov
lret
decl
inc
popf
add
pop
outsl
jb
mov
movl
add
mov
movsb
lds
sti
int3
es
inc
div
or
xchg
xchg
add
add
sbb
add
sub
and
mov
pop
xor
in
fmull
mov
sub
xchg
add
dec
sub
push
lahf
rcll
mov
popf
cmp
add
add
das
mov
lret
pop
sbb
ljmp
mov
push
xchg
pop
in
push
jae
mov
in
jecxz
xchg
das
fsts
add
xor
push
mov
add
mov
sbb
fistpll
adc
mov
sbb
add
test
divb
and
mov
sub
mov
arpl
inc
fsubrp
ja
xor
add
outsl
jns
subl
xchg
mov
add
scas
push
and
mov
add
jg
cmp
add
mov
fs
dec
addb
push
mov
mov
fcoml
add
jp
add
gs
add
jge
gs
and
mov
inc
add
push
adc
mov
mov
pop
jle
dec
arpl
jmp
lock
xchg
jmp
sub
faddp
add
aaa
pop
sub
aas
imul
jae
add
fstpl
xor
or
cmpsl
ss
pop
mov
mov
int3
movsl
leave
cmpsb
sbb
ret
push
add
repnz
mov
jp
or
sbb
add
adc
sub
loop
mov
add
mov
add
and
dec
js
xchg
jle
rolb
cmp
adcl
inc
fldt
mov
jns
lea
add
mov
jnp
mov
mov
cmc
push
sbb
ss
cmp
jmp
mov
xor
loopne
mov
mov
xor
xchg
add
push
mov
push
in
test
scas
pushf
jne
sbb
add
add
sbb
mov
dec
adc
jns
sub
add
add
sti
sahf
mov
mov
int3
stos
cmp
icebp
pminsw
xchg
inc
xor
or
pop
xchg
pop
sbb
xchg
jae
sub
or
and
mov
mov
pusha
add
sbb
mov
mov
mov
movsl
icebp
sbb
add
push
add
mov
add
clc
cltd
clc
sub
mov
mov
jmp
mov
out
fcomps
mov
movsb
pop
cmc
fmul
fnstcw
lods
fs
mov
stos
cmp
mov
nop
add
jp
push
movsb
sahf
aad
xchg
les
addr16
mov
aaa
mov
pop
int3
ljmp
mov
sub
je
ret
and
mov
mov
fs
divl
push
mov
cwtl
cmpsl
imulb
push
popa
repnz
test
mov
mov
pop
add
xor
cmp
rcll
add
je
sub
push
add
add
pop
add
mov
add
mov
out
pop
clc
in
dec
dec
in
iret
cwtl
ljmp
cmc
lea
add
xor
add
out
jl
ljmp
xchg
lods
call
or
js
sbb
mov
pop
cmp
scas
aad
xchg
rolb
scas
dec
jge
add
mov
add
mov
jle
add
add
pop
jns
mov
pushf
rolb
mov
add
mov
add
mov
mov
mov
add
dec
and
lretw
mov
sub
add
aam
addb
cwtl
pop
fdivrl
or
daa
mov
xor
mov
rolb
mov
pop
ret
addb
mov
into
xchg
or
mov
enter
repnz
mov
dec
movsb
sar
and
mov
cmp
jp
mov
mov
into
sti
pop
mov
push
inc
or
outsl
mov
scas
fildl
pop
adc
mov
add
xchg
add
aad
jbe
push
aas
dec
adc
add
ss
jae
push
lret
movsb
ljmp
mov
add
add
decb
lret
mov
mov
push
push
les
add
add
loope
push
jge
nop
add
ljmp
int
or
inc
cs
maxps
in
fwait
jne
add
cmp
lea
ljmp
sub
dec
aaa
aad
mov
mov
rolb
mov
add
cmp
push
and
mov
mov
jecxz
in
xor
mov
push
mov
xor
cmp
bound
mov
add
mov
sub
cwtl
push
mov
repz
sbb
dec
push
or
push
add
fwait
cli
push
sbb
add
ja
add
mov
xor
mov
add
mov
dec
stos
rolb
mov
aad
or
mov
mov
sbb
mov
cmpsl
out
add
stos
push
push
add
mov
mov
jnp
rcll
mov
aas
stos
adc
mov
xchg
mov
mov
add
mov
rolb
mov
aaa
jnp
inc
push
dec
or
xchg
in
sub
mov
mov
lock
leave
imul
add
scas
mov
mov
mov
into
decb
ja
push
mov
arpl
xorl
fs
adc
pop
mov
add
out
cmc
std
fwait
xchg
sub
cli
clc
sub
dec
ret
clc
lock
push
addr16
outsl
dec
sahf
daa
sarl
mov
faddp
add
xchg
push
jmp
clc
sarl
mov
jge
dec
ret
jbe
jae
ds
xchg
add
loop
mov
in
sub
cwtl
dec
call
jecxz
pop
addb
movsl
das
xor
out
mov
mov
add
mov
push
lret
inc
push
addl
push
add
push
add
mov
xlat
rolb
mov
jl,pn
pop
adc
lcall
adc
enter
mov
ss
mov
add
mov
lcall
loope
jae
sbb
add
popf
xor
cli
dec
clc
shl
aaa
mov
out
aad
insl
repnz
ret
mov
les
mov
push
sub
insb
js
cmpsb
mov
mov
jno
or
icebp
stos
lods
push
add
add
mov
sbb
add
mov
cltd
xchg
mov
ja
mov
test
jae
ja
push
sahf
mov
inc
mov
dec
mov
pop
cmp
or
inc
mov
or
daa
mov
adc
mov
adc
test
and
cmp
movsb
jbe
aad
add
push
adc
push
add
int
addb
mov
and
cltd
loopne
mov
pop
rolb
pop
loop
mov
cmpsl
fs
sbb
loop
mov
gs
add
mov
mov
lar
mov
mov
xor
pop
inc
lret
icebp
fsubrs
mov
pop
int
xchg
imul
mov
add
rolb
mov
add
mov
sub
mov
pop
pop
mov
mov
pusha
add
addb
rolb
mov
mov
xor
mov
leave
mov
inc
add
loopne
mov
ret
push
mov
or
inc
int3
push
xchg
shll
xchg
add
jns
xchg
enter
mov
mov
inc
mov
in
xor
mov
mov
jl
ja
mov
popf
les
repnz
popa
out
pop
std
fcmovu
mov
add
rcl
add
sub
mov
add
jns
mov
jbe
and
mov
lds
add
movsl
es
sub
sbb
into
mov
add
sbb
add
dec
jne
push
xorl
add
add
je
ja
or
mov
popf
and
sbb
add
jno
pop
adc
mov
add
mov
mov
xchg
out
fistpll
jbe
mov
jmp
push
and
mov
pop
fwait
mov
add
daa
and
xchg
xor
test
xor
mov
imul
sub
add
inc
xchg
clc
xor
insl
sar
scas
scas
mov
lds
add
sbb
sti
lcall
sub
add
pop
jno
inc
and
mov
jp
in
stc
enter
or
lret
xor
mov
adc
add
popa
ret
xchg
inc
ss
or
add
sahf
addr16
test
add
add
mov
loopne
mov
sahf
ss
add
addb
jl
fimuls
add
hlt
lods
outsl
aad
int3
in
rolb
mov
jl
cld
daa
ljmp
add
mov
mov
rolb
mov
sub
mov
adc
mov
mov
mov
sbb
mov
in
mov
pop
aam
ljmp
add
movsl
push
add
add
and
ret
mov
push
mov
jge
xlat
jnp
std
clc
sbbl
mov
enter
add
cld
mov
rolb
sub
int
mov
imul
mov
dec
jmp
sahf
mov
add
mov
rolb
mov
mov
add
push
xor
xchg
push
add
and
cmp
mov
mov
add
sbb
out
lods
xchg
sti
lods
es
flds
enter
sub
add
xorl
call
mov
xor
mov
jbe
fisttpl
push
daa
xchg
sbb
mov
push
xchg
add
jl
rcl
add
add
mov
add
sub
hlt
add
mov
ret
in
imull
cltd
enter
add
es
add
mov
add
lahf
ret
js
add
shll
xor
ljmp
mov
xchg
cmp
and
pop
repz
arpl
add
cmp
out
cld
push
and
add
call
add
jnp
add
add
mov
push
xor
cltd
out
fimull
out
sarl
add
or
inc
jbe
and
mov
arpl
add
mov
lds
mov
fadds
outsl
es
sbb
push
rolb
jge
popa
rolb
or
mov
out
add
jmp
add
or
add
addb
std
jns
pop
and
add
out
loope
addr16
adc
sahf
xchg
add
add
sbb
push
add
mov
rolb
mov
add
call
push
or
pusha
add
xor
mov
into
cs
lock
and
mov
lock
lret
add
loope
cmp
in
loopne
mov
mov
lcall
ret
cmp
add
mov
mov
fmulp
jno
mov
add
test
jle
cmp
jo
mov
jle
add
or
addb
insb
xchg
flds
and
jl
cmp
out
ret
cwtl
femms
das
and
jmp
push
mov
jbe
adc
add
add
adc
add
mov
mov
sbb
mov
add
bound
mov
je
mov
mov
sub
std
in
pop
cld
stos
fdiv
outsb
insb
mov
lcall
pop
mov
fisubrl
mov
mov
mov
add
xor
mov
dec
popf
pop
mov
imul
cs
xchg
aam
in
rolb
mov
sbb
push
cmpsl
jb
mov
add
gs
xchg
or
sub
test
add
fwait
pop
xor
sub
xor
xchg
insb
ljmpw
jnp
add
scas
rolb
mov
sub
adcl
push
mov
mov
insl
dec
rcll
nop
add
cmp
lcall
dec
outsb
and
mov
jge
jae
inc
add
inc
mov
bound
mov
aam
idivl
std
jp
inc
add
mov
pop
add
test
gs
scas
fistpll
je
pop
bound
mov
nop
add
mov
jg
or
xor
mov
add
ret
out
inc
lret
xchg
test
add
fistl
data16
ds
int
xchg
jae
add
add
mov
jmp
or
jb
mov
sysenter
inc
shll
imul
test
add
sti
jp
push
pop
sti
mov
lret
dec
push
mov
xlat
lret
mov
les
add
mov
mov
rolb
push
pop
inc
setno
add
add
sub
sbb
adc
mov
sub
add
sub
movsb
inc
mov
addr16
dec
repnz
add
cmp
add
push
aam
sub
add
pop
dec
rcll
add
cmp
push
xor
sub
aas
imul
pop
and
mov
addr16
jns
add
add
pop
xor
pop
inc
adc
mov
or
xor
les
cmp
adc
out
gs
pop
movsb
mov
addb
and
mov
mov
add
mov
adc
add
mov
mov
add
jo
mov
mov
mov
or
cmpsl
inc
std
shrl
fs
mov
jns
adc
inc
add
add
xchg
jbe
add
mov
cmc
loop
mov
popa
shrl
cmpsb
imul
push
cmp
addb
fisubs
sti
ss
add
movsl
or
sbb
lret
xor
scas
xchg
add
push
repz
je
sub
add
mov
icebp
arpl
and
sub
jp
icebp
push
pop
or
enter
bound
mov
nop
add
pusha
add
lods
sbb
fcomip
mov
add
add
add
loop
mov
jmp
add
xor
add
fbld
mov
mov
mov
andl
int
pusha
add
shl
mov
add
mov
pop
sub
fwait
mov
cmp
clc
repnz
nop
cld
jae
mov
push
push
mov
xchg
ret
add
add
xor
mov
clc
repnz
nop
cld
jae
sbb
add
xor
jb
push
mov
nop
leave
jmp
lahf
pop
and
add
clc
repnz
nop
cld
jae
add
add
leave
lcall
mov
mov
adc
repnz
nop
cld
jae
lcall
push
mov
xchg
ret
mov
sar
lock
push
add
lret
and
repnz
nop
cld
jae
shr
clc
lahf
fidivs
mov
clc
repnz
nop
cld
jae
add
movsl
aas
mov
push
mov
nop
leave
jmp
jne
add
add
pushf
push
push
mov
nop
leave
jmp
repnz
leave
add
pop
lods
clc
repnz
nop
cld
jae
add
add
add
cmpsb
add
push
clc
repnz
nop
cld
jae
and
roll
add
sbb
rep
push
mov
xchg
ret
add
add
add
cmpsl
stos
mov
push
mov
nop
leave
jmp
add
pop
xchg
lods
mov
push
mov
xchg
ret
add
add
add
add
test
sbb
add
repnz
nop
cld
jae
repnz
xchg
xchg
cmpsl
ret
gs
push
mov
nop
leave
jmp
clc
mov
clc
std
lret
adc
push
mov
nop
leave
jmp
add
aas
add
mov
out
mov
clc
repnz
nop
cld
jae
leave
add
inc
clc
repnz
nop
cld
jae
push
sbb
add
sub
add
repnz
nop
cld
jae
stc
lods
xchg
leave
pop
push
mov
xchg
ret
add
out
add
incl
cmpsl
dec
xlat
or
pop
cmp
mov
xchg
ret
add
add
add
into
push
clc
repnz
nop
cld
jae
add
xchg
lahf
fs
test
sub
add
repnz
nop
cld
jae
add
add
rep
clc
repnz
nop
cld
jae
out
insl
pop
lret
jne
rep
push
mov
xchg
ret
add
add
add
jbe
jne
roll
jo
inc
add
push
lods
pusha
add
add
stos
mov
jmp
push
addl
sub
lcall
mov
push
mov
xchg
ret
xchg
jmp
push
dec
push
push
mov
xchg
ret
add
lcall
mov
clc
repnz
nop
cld
jae
lods
jne
sbb
sbb
movsl
mov
test
add
add
repnz
nop
cld
jae
leave
add
jmp
clc
repnz
nop
cld
jae
incl
aas
lock
lcall
cld
jae
xchg
lcall
add
clc
repnz
nop
cld
jae
pushf
sbb
fwait
pop
clc
repnz
nop
cld
jae
clc
jne
push
lcall
mov
nop
leave
jmp
add
xor
insl
xchg
add
add
mov
push
mov
xchg
ret
add
push
lea
lods
add
mov
pop
mov
clc
repnz
nop
cld
jae
cwtl
add
add
pushl
lock
data16
mov
clc
repnz
nop
cld
jae
add
add
mov
in
nop
leave
jmp
lcall
xor
out
add
xchg
int3
inc
add
roll
add
xor
or
outsl
arpl
add
repnz
nop
cld
jae
add
std
dec
mov
clc
repnz
nop
cld
jae
jne
push
push
push
add
mov
add
nop
nop
cld
jae
xor
add
cmp
pop
out
inc
add
add
out
lret
sbb
push
mov
nop
leave
jmp
add
xor
lods
roll
add
fadds
xchg
ret
pusha
add
aas
mov
sub
int
pop
jae
repnz
nop
cld
jae
pop
add
clc
repnz
nop
cld
jae
sbb
add
cmpl
push
mov
nop
leave
jmp
add
cwtl
add
mov
repnz
nop
cld
jae
add
add
leave
cmpsb
fs
push
js
mov
nop
leave
jmp
stc
xchg
add
call
clc
repnz
nop
cld
jae
sub
pop
clc
repnz
nop
cld
jae
xor
add
mov
push
mov
nop
leave
jmp
std
mov
pushf
ljmp
mov
clc
repnz
nop
cld
jae
pusha
add
add
add
clc
repnz
nop
cld
jae
add
outsl
loopne
mov
xchg
ret
push
push
push
add
add
push
leave
push
mov
nop
leave
jmp
add
fiadds
add
add
push
ja
add
jmp
add
add
add
add
sub
leave
add
inc
cmp
repnz
nop
cld
jae
ljmp
sbb
notl
in
nop
leave
jmp
add
add
sahf
mov
clc
repnz
nop
cld
jae
ljmp
clc
repnz
nop
cld
jae
clc
lahf
mov
xor
xor
push
mov
xchg
ret
ljmp
out
pop
add
clc
repnz
nop
cld
jae
cmpsl
ljmp
mov
clc
repnz
nop
cld
jae
leave
add
and
clc
repnz
nop
cld
jae
add
mov
pop
clc
repnz
nop
cld
jae
mov
pop
add
flds
in
nop
leave
jmp
jne
xchg
add
cmpsb
add
add
and
push
push
mov
xchg
ret
xchg
add
sbb
mov
xchg
ret
add
pop
add
add
mov
nop
nop
cld
jae
add
jne
jmp
add
clc
repnz
nop
cld
jae
add
add
add
jnp
xbegin
jae
add
addl
push
clc
repnz
nop
cld
jae
add
xchg
lods
lock
pop
jae
repnz
nop
cld
jae
pop
iret
add
mov
clc
repnz
nop
cld
jae
add
push
lods
fmull
scas
enter
nop
cld
jae
add
add
pushl
mov
clc
repnz
nop
cld
jae
mov
add
push
mov
nop
leave
jmp
adcl
jo
mov
mov
jg
push
mov
nop
leave
jmp
xchg
add
add
sub
repz
mov
xchg
ret
inc
addl
inc
adc
mov
add
add
in
nop
leave
jmp
inc
dec
xor
and
mov
nop
leave
jmp
mov
gs
dec
imul
push
mov
nop
leave
jmp
insl
xor
mov
mov
nop
leave
jmp
push
jmp
sbb
and
push
mov
nop
leave
jmp
add
add
add
push
mov
xchg
ret
cmpl
add
call
in
nop
leave
jmp
add
add
inc
or
repnz
nop
cld
jae
add
in
mov
push
mov
xchg
ret
add
dec
jmp
lret
mov
push
mov
nop
leave
jmp
pop
sbb
add
dec
mov
push
mov
xchg
ret
lea
decl
sbb
cld
jae
add
add
repnz
outsb
je
repnz
nop
cld
jae
and
lods
jmp
sti
clc
repnz
nop
cld
jae
lea
sub
add
and
mov
in
nop
leave
jmp
mov
add
out
dec
add
add
dec
push
clc
repnz
nop
cld
jae
ljmp
mov
mov
xchg
ret
dec
inc
add
add
sarl
mov
push
mov
xchg
ret
pushl
add
call
push
mov
xchg
ret
add
leave
push
jmp
popa
add
mov
xchg
ret
dec
repnz
add
and
repnz
nop
cld
jae
and
add
pop
push
mov
xchg
ret
add
xchg
jbe
add
ljmp
add
in
nop
leave
jmp
xchg
or
and
clc
repnz
nop
cld
jae
sub
add
add
xchg
clc
repnz
nop
cld
jae
lods
sub
add
add
jg
clc
repnz
nop
cld
jae
cmpsl
clc
lcall
xor
add
clc
repnz
nop
cld
jae
pop
cwtl
pop
call
clc
repnz
nop
cld
jae
add
lea
nop
nop
cld
jae
add
clc
add
leave
sub
mov
push
mov
xchg
ret
or
add
add
add
repnz
nop
cld
jae
and
cwtl
push
add
addb
jo
mov
and
clc
repnz
nop
cld
jae
add
add
cmpsb
pop
mov
mov
push
mov
nop
leave
jmp
xchg
add
cld
jae
add
add
inc
dec
call
clc
repnz
nop
cld
jae
or
push
clc
repnz
nop
cld
jae
jae
add
push
add
ljmp
nop
nop
cld
jae
aas
cmpl
jne
clc
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
add
add
mov
repz
mov
push
mov
nop
leave
jmp
repnz
add
je
clc
repnz
nop
cld
jae
jae
or
add
push
mov
nop
leave
jmp
sub
add
ljmp
js
mov
adc
mov
nop
leave
jmp
add
add
and
mov
call
in
nop
leave
jmp
aas
add
sbb
imul
nop
nop
cld
jae
add
or
es
mov
push
mov
xchg
ret
add
jmp
inc
add
mov
pushf
mov
add
sahf
add
add
cmpb
mov
in
nop
leave
jmp
jne
or
popa
insl
mov
clc
repnz
nop
cld
jae
popa
cmpsb
bnd
jmp
clc
repnz
nop
cld
jae
add
addl
mov
clc
repnz
nop
cld
jae
lock
dec
cmpl
push
mov
nop
leave
jmp
add
or
leave
jmp
add
dec
ljmp
push
add
push
mov
nop
leave
jmp
add
out
add
add
add
push
mov
nop
leave
jmp
add
push
and
add
subl
push
mov
xchg
ret
ljmp
push
push
mov
nop
leave
jmp
add
jae
dec
push
clc
repnz
nop
cld
jae
add
or
add
add
add
add
push
sbb
add
rcll
mov
push
mov
nop
leave
jmp
mov
push
sub
add
repnz
nop
cld
jae
and
add
inc
add
nop
nop
cld
jae
leave
clc
stc
or
fcoms
repnz
nop
cld
jae
gs
dec
cmpsl
mov
add
ss
jae
add
push
mov
xchg
ret
roll
pusha
pop
add
push
push
cmp
nop
nop
cld
jae
add
add
inc
xchg
add
cld
jmp
add
and
add
add
add
cwtl
cmp
repnz
nop
cld
jae
add
jmp
ja
popa
in
add
push
mov
nop
leave
jmp
xchg
xchg
add
add
add
clc
repnz
nop
cld
jae
add
cwtl
lods
inc
imul
nop
nop
cld
jae
add
pushf
jne
clc
repnz
nop
cld
jae
pop
add
dec
adc
or
inc
add
roll
add
add
repnz
nop
cld
jae
add
rcrl
add
push
mov
nop
leave
jmp
incl
leave
add
xchg
jmp
mov
xchg
ret
pop
add
gs
push
and
lock
add
nop
nop
cld
jae
cmpsl
add
sbb
imul
add
push
lea
add
out
ror
mov
mov
cld
jae
add
add
sbb
jmp
dec
add
mov
xchg
ret
sub
leave
popa
clc
repnz
nop
cld
jae
add
pop
or
mov
nop
leave
jmp
xchg
xchg
add
xchg
add
jbe
jl
movsb
clc
repnz
nop
cld
jae
add
fidivrl
cmp
mov
nop
leave
jmp
aas
pusha
add
xchg
insl
lcall
jb
push
mov
nop
leave
jmp
out
add
add
repnz
nop
cld
jae
or
stc
add
cwtl
sub
dec
pop
push
mov
xchg
ret
xchg
push
gs
and
add
mov
clc
repnz
nop
cld
jae
lcall
pop
mov
push
mov
nop
leave
jmp
xor
mov
xlat
mov
nop
cld
jae
lea
mov
mov
clc
repnz
nop
cld
jae
add
xor
fidivrl
nop
leave
jmp
sarl
mov
fiaddl
roll
clc
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
and
mov
pop
clc
repnz
nop
cld
jae
mov
add
mov
xor
add
push
mov
nop
leave
jmp
add
add
mov
in
add
xchg
add
mov
mov
dec
push
clc
repnz
nop
cld
jae
mov
push
add
subl
jae
out
repnz
add
lock
add
adcb
nop
leave
jmp
insl
cwtl
lea
mov
push
out
add
std
add
iret
inc
jae
xor
push
push
mov
nop
leave
jmp
std
insl
jae
sbb
lds
mov
xchg
ret
push
jmp
sbbl
out
add
add
rcrl
mov
add
pop
clc
repnz
nop
cld
jae
add
add
add
add
xchg
inc
jnp
dec
adc
repnz
nop
cld
jae
fdivrp
add
add
cltd
mov
clc
repnz
nop
cld
jae
pop
add
add
clc
repnz
nop
cld
jae
add
add
sbb
repnz
nop
cld
jae
add
add
repnz
jne
or
repnz
nop
cld
jae
lcall
add
clc
repnz
nop
cld
jae
out
inc
sbb
jg
clc
repnz
nop
cld
jae
leave
leave
xor
mov
adc
repnz
nop
cld
jae
insl
popa
repnz
rep
push
mov
nop
leave
jmp
add
or
add
cwtl
mov
fwait
add
clc
repnz
nop
cld
jae
iret
push
add
xchg
add
inc
push
mov
nop
leave
jmp
add
cmpsb
add
and
repnz
nop
cld
jae
xchg
add
pop
xor
add
push
clc
repnz
nop
cld
jae
fs
or
xor
push
mov
xchg
ret
xchg
add
or
sub
xor
mov
nop
leave
jmp
add
add
cmpsl
add
sbb
mov
jmp
add
add
add
sub
add
jle
jmp
jp
push
mov
nop
leave
jmp
push
leave
cmpsb
push
rcl
aas
add
push
mov
xchg
ret
add
jmp
add
cmp
clc
repnz
nop
cld
jae
fiaddl
jae
mov
push
popa
clc
repnz
nop
cld
jae
add
or
pop
mov
clc
repnz
nop
cld
jae
add
add
jno
pop
pushl
push
mov
xchg
ret
and
fidivs
dec
cmp
repnz
nop
cld
jae
mov
popa
add
add
add
clc
repnz
nop
cld
jae
lods
push
roll
fiadds
xchg
jnp
and
add
cmpsb
add
pusha
add
add
add
add
clc
repnz
nop
cld
jae
add
aad
pusha
clc
repnz
nop
cld
jae
mov
mov
leave
dec
add
push
mov
xchg
ret
ljmp
add
call
push
mov
nop
leave
jmp
fiaddl
mov
add
clc
repnz
nop
cld
jae
add
add
pop
dec
mov
insb
clc
repnz
nop
cld
jae
add
add
adc
mov
data16
je
clc
repnz
nop
cld
jae
mov
mov
nop
nop
cld
jae
pusha
lea
repnz
repnz
nop
cld
jae
ficompl
or
nop
leave
jmp
or
cwtl
clc
add
out
call
push
mov
nop
leave
jmp
dec
add
inc
add
mov
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
cmpsl
lods
adc
mov
clc
repnz
nop
cld
jae
add
xchg
sub
repz
mov
nop
leave
jmp
jne
add
jae
xchg
lods
test
sbb
cmp
ret
lock
lahf
add
repnz
nop
cld
jae
lcall
add
outsl
idiv
clc
repnz
nop
cld
jae
add
icebp
clc
repnz
nop
cld
jae
add
adc
mov
popf
decl
push
mov
xchg
ret
lahf
pushf
add
add
inc
and
and
mov
push
mov
xchg
ret
or
add
clc
or
adc
clc
repnz
nop
cld
jae
roll
mov
clc
repnz
nop
cld
jae
leave
add
fiadds
jae
jns
dec
or
sar
add
add
lock
cmpsl
xchg
jmp
iret
jne
clc
repnz
nop
cld
jae
push
xchg
add
pusha
clc
repnz
nop
cld
jae
add
add
xor
clc
repnz
nop
cld
jae
add
mov
add
repnz
nop
cld
jae
xchg
add
add
and
push
mov
nop
leave
jmp
add
add
add
push
mov
clc
repnz
nop
cld
jae
popa
lcall
jge
dec
add
mov
xchg
ret
add
add
jne
clc
repnz
nop
cld
jae
fs
cmpsl
mov
add
clc
repnz
nop
cld
jae
add
addr16
dec
out
add
insl
pop
add
push
add
add
repnz
nop
cld
jae
add
add
add
inc
or
roll
in
cmp
dec
add
push
mov
xchg
ret
popa
jae
aas
sbb
sbb
enter
cmp
ret
add
sub
add
aas
clc
repnz
nop
cld
jae
add
and
add
ljmp
nop
leave
jmp
pushf
roll
out
cmpsl
cwtl
mov
add
fisubrs
add
xchg
jmp
jne
inc
xchg
dec
pushl
clc
repnz
nop
cld
jae
mov
sbb
add
stos
mov
clc
repnz
nop
cld
jae
push
add
roll
mov
xor
mov
add
add
add
scas
add
add
sarb
mov
push
mov
nop
leave
jmp
add
xchg
ret
sub
mov
add
add
sbb
lret
ljmp
in
add
clc
add
pop
mov
add
add
add
add
pop
sub
clc
repnz
nop
cld
jae
or
add
repz
add
push
mov
nop
leave
jmp
add
sbb
dec
add
clc
repnz
nop
cld
jae
add
ficoml
add
mov
xchg
ret
lahf
or
add
add
add
inc
add
add
add
sar
repnz
nop
cld
jae
mov
ljmp
cmp
clc
repnz
nop
cld
jae
ljmp
jne
push
push
mov
xchg
ret
lret
add
lret
pop
add
clc
repnz
nop
cld
jae
mov
add
dec
clc
repnz
nop
cld
jae
fiaddl
fiadds
ljmp
push
mov
nop
leave
jmp
cwtl
mov
xchg
add
push
clc
repnz
nop
cld
jae
lock
sbb
mov
movl
add
add
lret
add
add
push
mov
mov
jle
adc
add
jmp
insb
sbb
mov
xchg
ret
shll
add
pop
jno
dec
push
mov
xchg
ret
add
push
add
add
dec
xchg
jae
cmpl
push
mov
nop
leave
jmp
inc
add
sub
aas
gs
cltd
cmp
push
mov
nop
leave
jmp
fiaddl
popa
add
or
cli
clc
repnz
nop
cld
jae
add
mov
add
add
mov
add
add
repnz
nop
cld
jae
fs
add
mull
repnz
nop
cld
jae
add
ljmp
repnz
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
add
or
addb
mov
mov
xchg
ret
stc
ljmp
ret
dec
mov
push
mov
nop
leave
jmp
add
dec
mov
clc
repnz
nop
cld
jae
ljmp
and
in
nop
leave
jmp
out
mov
lahf
xorl
add
clc
repnz
nop
cld
jae
add
enter
nop
nop
cld
jae
xchg
xchg
jne
sub
add
cmp
clc
repnz
nop
cld
jae
popa
xchg
xor
iret
pop
mov
mov
xchg
ret
add
xchg
cmpsb
sbb
mov
add
cli
mov
push
mov
nop
leave
jmp
pusha
add
add
mov
out
roll
xchg
ret
sbb
add
not
push
mov
xchg
ret
sbb
add
clc
repnz
nop
cld
jae
add
std
add
add
je
jnp
les
add
add
repnz
nop
cld
jae
add
add
mov
nop
leave
jmp
or
jmp
add
pop
mov
push
mov
xchg
ret
pop
ljmp
ret
clc
repnz
nop
cld
jae
out
add
add
fsubrp
enter
add
clc
repnz
nop
cld
jae
add
cwtl
mov
add
add
repnz
nop
cld
jae
xchg
popa
lods
xchg
dec
mov
clc
repnz
nop
cld
jae
ficoms
mov
repnz
nop
cld
jae
add
jne
pushf
jne
add
clc
repnz
nop
cld
jae
std
add
fisttpl
in
nop
leave
jmp
add
sub
add
mov
push
mov
nop
leave
jmp
add
xor
add
push
add
xor
add
push
mov
nop
leave
jmp
cmpsl
add
sub
loope
mov
mov
ja
push
mov
nop
leave
jmp
roll
add
adc
incl
inc
sbb
mov
call
mov
mov
in
nop
leave
jmp
sub
add
inc
add
mov
xchg
ret
std
add
lcall
dec
add
push
mov
xchg
ret
add
add
add
add
cld
jae
add
mov
cmpsl
push
push
clc
repnz
nop
cld
jae
sub
add
cmpsb
ss
and
clc
repnz
nop
cld
jae
add
push
iret
pop
add
dec
add
clc
repnz
nop
cld
jae
jbe
add
pushf
add
mov
push
mov
xchg
ret
add
add
fiadds
lret
inc
mov
test
clc
repnz
nop
cld
jae
or
out
clc
repnz
nop
cld
jae
add
add
add
test
add
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
or
add
add
add
shl
inc
add
add
mov
xchg
fldt
lret
clc
repnz
nop
cld
jae
fisubl
clc
repnz
nop
cld
jae
xchg
add
add
add
mov
nop
nop
cld
jae
add
repnz
mov
nop
nop
cld
jae
add
cmpsl
jmp
mov
push
mov
nop
leave
jmp
add
add
push
mov
xchg
ret
add
fiadds
ljmp
nop
leave
jmp
add
lods
add
add
add
pop
ret
clc
repnz
nop
cld
jae
add
aas
add
add
add
mov
add
repnz
nop
cld
jae
add
repnz
nop
cld
jae
gs
add
push
adc
mov
dec
push
mov
nop
leave
jmp
xchg
sub
mov
popa
lret
jbe
clc
repnz
nop
cld
jae
add
pushf
add
push
mov
xchg
ret
leave
xchg
pop
add
inc
add
nop
nop
cld
jae
add
cmpsl
add
add
scas
xor
clc
repnz
nop
cld
jae
jne
add
mov
add
clc
repnz
nop
cld
jae
lock
pop
adc
repnz
nop
cld
jae
xor
sub
std
leave
xor
roll
cwtl
pusha
sbb
fiaddl
pop
rcrl
clc
repnz
nop
cld
jae
xchg
add
add
cmp
mov
nop
nop
cld
jae
pop
insl
add
jbe
add
in
inc
add
add
jbe
mov
mov
clc
repnz
nop
cld
jae
addl
or
push
mov
nop
leave
jmp
pusha
mov
push
mov
nop
leave
jmp
add
mov
adc
xchg
adc
cmp
ret
aas
ljmp
sbb
repnz
nop
cld
jae
add
push
sbb
cmpsb
add
js
fdivrp
repnz
nop
cld
jae
add
add
sub
add
mov
add
lret
add
dec
fidivrl
add
inc
das
push
mov
mov
sbb
jge
add
add
cmp
nop
nop
cld
jae
jbe
ljmp
mov
xchg
ret
cmpsb
add
add
add
add
jb
mov
repnz
nop
cld
jae
out
leave
add
lea
add
jle
mov
popl
dec
and
jmp
add
cmp
in
nop
leave
jmp
pushf
add
add
and
jae
sub
jecxz
add
lahf
std
add
push
pusha
stc
add
push
out
inc
add
jne
mov
lea
mov
mov
add
add
add
cwtl
add
cmpsb
testl
add
mov
add
ja
add
ja
inc
add
add
xchg
add
clc
popa
addb
addr16
clc
repnz
nop
cld
jae
or
jbe
stc
leave
push
push
mov
xchg
ret
add
jbe
cwtl
add
stos
push
clc
repnz
nop
cld
jae
aas
pop
dec
push
cmpsl
xchg
std
add
scas
add
clc
repnz
nop
cld
jae
fs
push
push
mov
xchg
ret
mov
add
ret
out
and
push
mov
xchg
ret
or
add
lea
mov
xor
jne
clc
repnz
nop
cld
jae
add
add
xchg
add
push
push
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
or
repnz
nop
cld
jae
add
add
stc
add
inc
push
mov
repnz
nop
cld
jae
add
add
sub
add
ret
outsl
push
clc
repnz
nop
cld
jae
lret
add
cmpsl
lea
cli
push
mov
add
xchg
insb
push
sbb
iret
sar
add
or
inc
mov
add
mov
xchg
ret
add
iret
out
jne
add
mov
clc
repnz
nop
cld
jae
pop
pusha
add
push
push
mov
xchg
ret
or
mov
push
mov
lcall
repnz
nop
cld
jae
clc
xchg
xchg
ljmp
jb
clc
repnz
nop
cld
jae
ljmp
mov
sbb
clc
repnz
nop
cld
jae
lcall
gs
add
clc
repnz
nop
cld
jae
xor
lahf
out
ret
clc
repnz
nop
cld
jae
cwtl
add
add
add
dec
inc
clc
repnz
nop
cld
jae
fiadds
or
push
mov
nop
leave
jmp
fs
sub
gs
add
incl
push
mov
nop
leave
jmp
push
sub
add
cwtl
or
clc
repnz
nop
cld
jae
add
push
lods
add
mov
test
clc
repnz
nop
cld
jae
add
push
inc
add
testb
cmp
ret
cmpsb
std
add
or
in
sub
clc
repnz
nop
cld
jae
iret
cmpsl
lods
pop
xchg
cmpsl
idivl
pusha
push
mov
xchg
ret
add
add
pop
imul
push
mov
nop
leave
jmp
lock
add
mov
add
clc
repnz
nop
cld
jae
add
add
incl
addb
sbb
repnz
nop
cld
jae
add
or
jmp
repnz
repnz
nop
cld
jae
clc
dec
add
xchg
push
movsb
xchg
in
mov
push
mov
xchg
ret
pop
jne
jne
lods
add
fisttps
ficoms
add
add
add
popa
stc
sbb
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
cld
jae
mov
add
push
sbb
nop
nop
cld
jae
add
add
push
xchg
and
mov
mov
clc
repnz
nop
cld
jae
add
add
add
popf
mov
clc
repnz
nop
cld
jae
stc
cmpsl
add
fisubs
ret
cmp
add
in
nop
leave
jmp
xchg
fimuls
lahf
mov
nop
nop
cld
jae
add
add
jmp
cmp
jae
repnz
nop
cld
jae
addl
pop
xchg
push
mov
xchg
ret
xchg
add
lret
sbb
adc
addb
movsb
jmp
cwtl
add
cmp
cli
add
add
cmp
arpl
push
mov
xchg
ret
leave
add
xchg
pop
std
add
iret
mov
add
push
add
mov
add
clc
repnz
nop
cld
jae
add
pop
aad
pop
jmp
roll
xchg
ret
lahf
add
add
clc
repnz
nop
cld
jae
lret
lea
add
add
repnz
nop
cld
jae
sbb
clc
jne
pop
incl
push
mov
xchg
ret
add
add
aas
add
mov
xor
clc
repnz
nop
cld
jae
out
lods
sub
push
mov
xchg
ret
add
xchg
add
pusha
outsl
ret
clc
repnz
nop
cld
jae
lea
add
add
test
in
clc
repnz
nop
cld
jae
lahf
add
push
add
cmp
nop
cld
jae
add
roll
repnz
movsb
inc
sahf
add
clc
repnz
nop
cld
jae
jne
xchg
add
test
loope
clc
repnz
nop
cld
jae
pop
add
xor
mov
mov
clc
repnz
nop
cld
jae
add
lret
add
lds
xchg
ret
add
add
add
or
mov
xchg
loopne
add
add
les
call
clc
repnz
nop
cld
jae
incl
xchg
add
movb
repnz
nop
cld
jae
sbb
add
mov
push
mov
nop
leave
jmp
lods
add
gs
add
jg
push
mov
nop
leave
jmp
mov
lret
dec
or
repnz
nop
cld
jae
pushf
lahf
add
xchg
roll
clc
repnz
nop
cld
jae
add
xchg
addl
mov
push
pop
repnz
add
add
aas
add
add
adc
mov
mov
clc
repnz
nop
cld
jae
xchg
add
pop
mov
clc
repnz
nop
cld
jae
push
sub
add
pop
test
push
mov
xchg
ret
add
repnz
lcall
nop
nop
cld
jae
ljmp
add
push
fiadds
repz
mov
nop
leave
jmp
sub
add
fs
leave
push
mov
xchg
ret
mov
mov
xor
push
mov
xchg
ret
add
mov
add
and
clc
repnz
nop
cld
jae
add
lret
cmpsb
xchg
jbe
sub
mov
nop
leave
jmp
sbb
add
sbb
sar
repnz
nop
cld
jae
xchg
lret
pop
lock
mov
clc
repnz
nop
cld
jae
add
xchg
jne
add
dec
push
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
xchg
add
lcall
mov
frstor
popa
add
mov
xchg
ret
push
fimull
add
inc
mov
in
add
xor
add
add
add
push
mov
pop
cli
add
add
push
jb
jg
jb
rolb
jno
fists
in
dec
push
add
add
or
mov
lcall
nop
nop
cld
jae
popa
add
xchg
ljmp
sbb
call
in
nop
leave
jmp
roll
add
xchg
xchg
xchg
test
jge
clc
repnz
nop
cld
jae
jne
pushf
add
add
mov
push
mov
xchg
add
add
rorl
pushf
das
mov
fwait
jne
clc
repnz
nop
cld
jae
mov
mov
clc
repnz
nop
cld
jae
jne
rcrl
lret
call
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
sub
in
nop
leave
jmp
repnz
pop
add
stos
and
push
mov
xchg
ret
add
add
pop
xchg
int3
lea
push
mov
nop
leave
jmp
add
repnz
add
popa
jne
add
dec
push
mov
nop
leave
jmp
add
xchg
add
add
mov
xor
mov
cld
xor
push
mov
nop
leave
jmp
pushf
pop
add
jno
xchg
clc
repnz
nop
cld
jae
add
xchg
add
pop
jae
or
mov
nop
leave
jmp
add
sub
cwtl
sbb
imul
clc
repnz
nop
cld
jae
add
add
or
test
clc
repnz
nop
cld
jae
add
in
nop
cld
jae
xchg
aas
add
ficompl
iret
push
clc
repnz
nop
cld
jae
add
add
stos
add
push
mov
nop
leave
jmp
iret
add
add
pushf
add
add
push
mov
nop
leave
jmp
or
add
jne
jmp
dec
and
push
mov
xchg
ret
inc
jmp
mov
pop
push
mov
xchg
ret
add
ficompl
xlat
call
in
nop
leave
jmp
add
xor
ljmp
inc
add
mov
add
ljmp
add
add
in
nop
leave
jmp
add
or
dec
or
repnz
nop
cld
jae
add
fiadds
add
mov
fadds
shr
inc
add
xchg
iret
fidivrl
mov
in
nop
leave
jmp
out
addl
ljmp
nop
nop
cld
jae
pusha
pop
lahf
add
add
push
add
add
mov
nop
leave
jmp
aas
iret
inc
xor
dec
push
mov
xchg
ret
add
lods
sbb
mov
clc
push
mov
xchg
ret
add
add
add
add
mov
mov
xchg
ret
add
push
push
xchg
add
xor
mov
in
nop
leave
jmp
xchg
stc
mov
jne
fiaddl
fldenv
mov
xchg
ret
jmp
and
add
lcall
mov
xchg
ret
mov
cwtl
xchg
add
clc
repnz
nop
cld
jae
add
lock
push
or
in
nop
leave
jmp
fiadds
add
add
fdivrp
push
push
mov
xchg
ret
cmpsl
fdivrp
ficompl
sub
lcall
cld
jae
xchg
mov
or
clc
repnz
nop
cld
jae
fimuls
and
clc
pushl
push
mov
xchg
ret
roll
add
mov
push
mov
nop
leave
jmp
add
add
or
ja
mov
clc
repnz
nop
cld
jae
add
pop
add
add
paddb
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
mov
or
cmpsb
add
mov
xchg
ret
jbe
xchg
iret
jne
mov
movsb
clc
repnz
nop
cld
jae
add
or
lea
fwait
mov
push
mov
nop
leave
jmp
add
xor
lret
loopne
mov
or
in
nop
leave
jmp
add
xor
out
cmp
push
mov
nop
leave
jmp
incl
add
add
add
push
mov
and
mov
add
add
test
movsl
aaa
int3
mov
clc
repnz
nop
cld
jae
jmp
pushf
mov
iret
or
leave
jmp
add
add
push
push
mov
nop
leave
jmp
and
add
mov
add
in
cmpl
push
mov
nop
leave
jmp
add
or
jle
clc
repnz
nop
cld
jae
shr
add
add
add
push
mov
nop
leave
jmp
jne
add
xor
mov
lret
push
mov
nop
leave
jmp
mov
add
clc
add
clc
repnz
nop
cld
jae
add
insl
out
xor
pop
clc
repnz
nop
cld
jae
add
add
add
mov
rol
jmp
incl
jne
add
xchg
add
mov
orl
xor
jmp
add
pusha
sub
add
nop
nop
cld
jae
popa
add
je
leave
clc
repnz
nop
cld
jae
jne
add
repnz
popa
add
repnz
nop
cld
jae
mov
ljmp
adc
mov
clc
repnz
nop
cld
jae
xchg
repnz
and
insl
fsts
mov
xchg
ret
add
std
add
stos
jmp
add
lods
add
add
movzwl
clc
repnz
nop
cld
jae
ljmp
mov
clc
repnz
nop
cld
jae
add
out
jmp
mov
clc
repnz
nop
cld
jae
xor
adc
mov
clc
repnz
nop
cld
jae
inc
clc
add
jmp
ljmp
out
add
add
add
jg
jmp
nop
cld
jae
lahf
add
cs
push
mov
nop
leave
jmp
add
add
fs
push
mov
nop
leave
jmp
add
lods
add
leave
mov
repnz
nop
cld
jae
add
ljmp
arpl
add
push
mov
xchg
ret
gs
add
insl
std
add
mov
nop
leave
jmp
std
pop
add
ljmp
mov
jle
jb
clc
repnz
nop
cld
jae
add
out
add
pushl
add
push
mov
xchg
ret
add
cmpsl
stc
add
enter
repnz
nop
cld
jae
add
cmp
sub
stc
mov
cmpsl
add
aas
cmpsb
add
lcall
in
nop
leave
jmp
out
add
pushf
lahf
push
add
add
repnz
nop
cld
jae
add
lea
pop
add
pop
shl
push
mov
nop
leave
jmp
add
cmpsl
add
add
cmp
nop
cld
jae
lods
add
inc
out
je
push
mov
nop
leave
jmp
pusha
add
fs
push
push
mov
nop
leave
jmp
add
cwtl
cmpl
push
mov
xchg
ret
fiaddl
add
shll
out
mov
repnz
nop
cld
jae
add
clc
add
sbb
je
sub
in
nop
leave
jmp
add
leave
jmp
mov
xchg
ret
add
out
mov
pusha
add
nop
nop
cld
jae
std
add
popa
ljmp
es
mov
clc
repnz
nop
cld
jae
add
add
adc
repnz
nop
cld
jae
pop
pop
add
jg
clc
repnz
nop
cld
jae
shrl
fisttps
nop
cld
jae
add
mov
add
add
repnz
nop
cld
jae
mov
cwtl
add
leave
inc
add
std
pop
add
lahf
mov
add
add
clc
repnz
nop
cld
jae
clc
sbb
ficompl
push
clc
repnz
nop
cld
jae
roll
lahf
repnz
sub
call
in
nop
leave
jmp
dec
mov
movb
nop
nop
cld
jae
sbb
add
sub
clc
repnz
nop
cld
jae
push
jmp
in
add
clc
repnz
nop
cld
jae
ficoml
cmpsb
dec
add
clc
repnz
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
add
add
jmp
add
pop
add
add
jbe
pop
fiaddl
mov
pop
push
mov
xchg
ret
dec
pop
ljmp
ret
loope
add
imul
call
in
nop
leave
jmp
stc
dec
sbb
mov
clc
repnz
nop
cld
jae
jne
std
mov
clc
repnz
nop
cld
jae
add
add
xorl
push
mov
nop
leave
jmp
add
pop
lock
int3
jmp
ljmp
add
add
insl
pop
add
add
or
repnz
nop
cld
jae
std
add
js
popa
add
repnz
nop
cld
jae
lahf
lcall
dec
clc
repnz
nop
cld
jae
iret
add
jae
lcall
mov
xchg
ret
lock
inc
repnz
xchg
and
push
mov
xchg
ret
jae
add
add
jmp
clc
repnz
nop
cld
jae
add
add
popa
push
add
in
nop
leave
jmp
xchg
lock
add
add
add
fwait
push
push
mov
xchg
ret
sbb
add
add
in
nop
leave
jmp
add
xchg
add
pop
cmpsb
or
mov
xchg
ret
add
sbb
add
jle
clc
repnz
nop
cld
jae
lcall
add
add
clc
repnz
nop
cld
jae
push
add
aam
movsl
adc
jne
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
addl
pop
sbb
xor
add
clc
repnz
nop
cld
jae
lcall
add
mov
clc
repnz
nop
cld
jae
ljmp
jmp
add
add
aas
add
add
jne
andl
nop
cld
jae
cmpsl
rorl
in
clc
repnz
nop
cld
jae
xchg
aas
add
push
clc
repnz
nop
cld
jae
or
add
mov
xor
push
mov
nop
leave
jmp
shll
add
out
inc
add
add
shr
clc
repnz
nop
cld
jae
add
jbe
mov
pusha
push
mov
nop
leave
jmp
push
mov
sub
add
int
adc
repnz
nop
cld
jae
add
push
sbb
sar
repnz
nop
cld
jae
add
add
add
mov
repnz
nop
cld
jae
mov
stc
jp
dec
adc
repnz
nop
cld
jae
out
dec
add
mov
mov
nop
leave
jmp
leave
lret
add
add
mov
xor
clc
repnz
nop
cld
jae
push
add
aas
pushf
xchg
clc
repnz
nop
cld
jae
add
add
xor
lds
popa
add
mov
xchg
ret
jne
add
push
mov
rolb
add
testl
jne
add
cmpsb
sub
xchg
mov
nop
add
sbb
mov
dec
adc
mov
mov
cwtl
push
jne,pt
cltd
mov
add
mov
insl
lods
mov
adc
pop
addb
aad
or
xchg
xchg
movsl
jnp
ljmp
push
dec
pop
adc
xchg
bound
mov
popf
adc
mov
mov
popa
out
push
loope
xchg
adc
fmull
nop
add
int3
dec
add
dec
and
stos
cmpsl
mov
mov
jge
push
ret
adc
mov
add
add
mov
sub
xchg
cmpsl
mov
out
sar
rolb
mov
sub
adc
mov
test
int
repz
mov
jnp
mov
and
push
addb
mov
pextrw
addb
jbe
mov
lock
add
pusha
add
or
add
mov
stos
pusha
add
and
mov
cwtl
mov
mov
mov
call
jne
sbb
mov
insl
add
mov
dec
out
lods
mov
pop
roll
aaa
sub
adc
mov
lds
sub
test
mov
ss
pop
in
fbld
add
mov
inc
and
out
adc
nop
add
jb
mov
add
mov
ljmp
add
scas
xchg
push
pop
in
mov
mov
mov
mov
cmpl
andl
fistpll
sbb
mov
rolb
mov
leave
mov
fldenv
xor
inc
and
mov
add
cmpsl
rolb
cli
test
mov
in
in
mov
dec
mov
mov
push
add
out
dec
push
bound
mov
fadd
add
push
scas
inc
sub
dec
fcompl
cmp
scas
add
mov
sti
dec
add
inc
repnz
ret
mov
pop
pop
add
mov
sbb
dec
fs
or
xchg
sub
pop
das
syscall
aad
fiadds
add
std
pop
or
call
adcl
test
test
jb
mov
mov
loopne
mov
add
mov
jg
inc
loop
mov
add
scas
or
add
mov
fildl
fs
add
bound
mov
pop
mul
add
add
sbb
add
sbb
mov
lret
mov
and
les
push
imul
in
push
notl
fldt
mov
in
jmp
sub
into
xchg
cwtl
mov
sub
jae
mov
scas
mov
mov
popa
clc
jb
mov
in
xchg
je
jge
mov
scas
stc
fisttpll
mov
fisttps
scas
lods
inc
aam
cmp
add
jae
add
cmp
add
call
mov
repz
add
add
mov
cmpsl
rolb
mov
xor
lods
sbb
add
jge
cmpsb
mov
add
movsb
cltd
mov
movsb
dec
xchg
mov
xchg
mov
dec
in
int3
cmp
add
add
mov
sub
inc
xor
iret
mov
add
xchg
inc
add
adc
cmpsl
inc
mov
fs
test
mov
add
or
dec
mov
mov
or
leave
inc
loope
xchg
int
into
repz
cli
inc
movsb
sub
call
add
push
xor
sub
jb
mov
sbb
sub
add
push
leave
sub
movsb
jge
xchg
mov
or
dec
rolb
mov
add
and
je
or
rcrl
mov
stos
xchg
add
xor
icebp
int
clc
test
stos
jl
stos
inc
popf
fdivl
lods
adc
inc
stos
pop
fildl
mov
push
mov
and
push
xchg
sub
jg
aad
add
mov
ret
cs
jno
and
add
inc
mov
mov
dec
sub
pop
test
add
and
enter
xchg
dec
das
in
das
cltd
or
push
std
ret
pop
fsubrs
lods
or
mov
or
popf
xchg
std
lret
jno
pushf
jns
add
insb
shll
std
les
jl
xchg
mov
cltd
pop
movsb
lods
pop
or
and
mov
and
mov
dec
cmp
mov
insl
dec
cmp
iret
sbb
inc
add
mov
cmc
rorl
shll
mov
add
add
push
xor
mov
mov
mov
add
scas
dec
mov
mov
add
or
jne
ficoml
mov
mov
mov
incl
cli
test
test
and
mov
push
mov
mov
ja
movsb
in
enter
mov
mov
add
dec
xchg
addb
fninit
outsl
adc
pop
cmp
test
xor
mov
and
push
in
cmp
in
out
and
mov
mov
mov
inc
addr16
in
add
pop
bound
mov
jno
inc
pop
int
inc
ja
lds
rolb
mov
inc
adc
mov
xor
mov
add
aas
mov
mov
repz
out
and
addb
cmc
movsb
pop
or
xor
insb
jnp
mov
add
add
mov
insl
daa
fs
mov
sub
rcrl
sbb
add
mov
mov
mov
and
mov
mov
add
add
inc
push
xchg
add
int
add
popa
clc
mov
cmp
out
pop
inc
add
lods
add
inc
cmp
bound
mov
add
and
addb
adc
mov
into
jno
add
cmpsl
inc
mov
lcall
test
add
dec
mov
mov
xchg
add
push
adc
adc
or
dec
pop
jno
fcoms
sub
add
mov
add
push
add
cwtl
scas
test
into
je
cmp
test
xorl
add
ja
dec
out
mov
adc
mov
mov
out
pop
push
pop
xor
mov
add
mov
mov
mov
sub
add
xchg
fidivrl
lods
xor
dec
enter
mov
addb
xchg
mov
jno
sbb
bound
mov
push
jge
imul
cmc
pop
xchg
dec
fdivl
adc
stos
in
pop
scas
mov
aam
add
push
in
jnp
cld
daa
lea
cmpsb
pusha
add
jo
mov
xor
mov
test
imul
mov
in
or
pop
push
inc
sbbl
lret
adc
mov
xchg
scas
sub
add
pop
repz
or
mov
aad
and
sub
add
ret
adc
rolb
lahf
ljmp
mov
out
popf
and
int
dec
mov
test
jnp
xor
sub
cld
mov
mov
xchg
add
mov
mov
pop
cwtl
fwait
xchg
int3
cmp
pop
mov
faddl
add
sub
add
mov
mov
lcall
sub
push
xchg
jnp
mov
pusha
add
dec
imul
in
adc
mov
and
mov
add
lcall
andl
cmp
movl
mov
mov
push
add
mov
add
fcompl
adc
test
repnz
in
inc
dec
add
or
pop
out
movsb
adc
mov
push
cmp
add
ds
pop
or
xchg
sub
scas
test
loopne
mov
sbb
in
stos
mov
add
mov
cs
and
add
add
out
jno
insl
pop
jmp
mov
imul
add
test
sbb
xor
adc
mov
mov
leave
out
inc
aad
add
mov
clc
add
mov
add
add
mov
in
push
sti
loope
pop
xor
mov
lea
jecxz
and
mov
xchg
cmpsb
jle
push
das
and
mov
pop
inc
ret
lret
lahf
mov
repnz
mov
mov
outsl
flds
aas
xchg
pop
cli
mov
sbb
inc
add
and
mov
cmpsl
pop
mov
mov
test
test
mov
push
jge
jb
mov
sub
and
sahf
in
aad
add
add
nop
add
xchg
enter
fs
ljmp
push
sbb
or
push
add
xor
mov
push
popl
fidivrl
data16
push
mov
add
add
popf
cmp
push
add
jp
mov
and
addb
mov
mov
out
test
ret
call
pop
dec
add
dec
sbb
movsl
and
test
cld
jecxz
lds
lahf
outsb
mov
jge
push
mul
or
mov
mov
inc
add
adc
mov
icebp
ret
add
mov
leave
rolb
popf
lods
sbbl
add
mov
mov
dec
mov
add
sub
jne
stos
lock
pop
ret
inc
in
mov
mov
ret
shll
or
pushf
jle
ja
sbb
mov
cmp
sub
add
rolb
mov
add
push
aaa
movsb
cmp
sub
leave
addb
scas
jge
mov
into
cmp
xchg
mov
mov
add
imul
push
add
add
jl
ss
push
das
js
popf
loope
jmp
data16
xchg
xchg
fsts
roll
add
movsl
pop
push
lods
ret
cmp
insl
fwait
inc
jmp
test
jo
mov
fildll
add
mov
add
imul
lods
adc
repnz
add
adc
mov
adc
pushf
push
mov
inc
dec
xchg
xchg
popf
inc
add
out
push
addb
nop
add
inc
add
add
add
lods
cltd
not
jmp
sbb
mov
pushf
out
add
mov
iret
mov
adc
mov
daa
mov
xor
movsl
pop
pop
dec
push
jbe
dec
xor
mov
popa
lret
cmp
aam
jg
add
xchg
stos
mov
mov
mov
pop
sbb
push
xchg
insb
gs
xor
mov
mov
cmp
loop
mov
andps
fsubs
mov
xor
out
sbb
fcoml
mov
add
test
mov
dec
addb
xchg
dec
pop
xchg
test
xchg
aas
or
out
add
push
or
rcll
mov
mov
call
inc
in
scas
loope
and
adc
mov
add
adc
mov
xor
xor
mov
data16
mov
mov
fcoms
sub
insl
or
dec
inc
add
pop
or
adc
mov
out
imul
js
rolb
mov
mov
add
add
mov
ja
add
aas
mov
mov
mov
jp
add
adc
xor
mov
sbb
sub
add
inc
mov
pop
and
mov
mov
in
outsl
xlat
lods
lea
add
adc
mov
pop
and
cmp
pop
add
jmp
sub
add
in
mov
test
add
add
mov
mov
insb
pop
cmp
sbb
sti
sbb
ja
je
mov
dec
cltd
or
mov
sbb
or
rol
repnz
adc
mov
jbe
add
out
loop
mov
sub
pop
jne
or
popa
sub
xor
scas
cs
divb
mov
enter
mov
jle
sub
sbb
lock
mov
pop
xchg
add
int
negl
lret
leave
gs
add
clc
lods
jb
mov
call
test
ljmp
call
mov
mov
mov
cmpsb
add
mov
pop
jns
add
add
lcall
popa
fistpll
mov
pop
mov
adc
mov
add
fsts
or
xlat
jle
fcoml
mov
inc
cld
cmp
mov
mov
mov
les
mov
adc
mov
ss
mov
negl
rcll
fidivs
pusha
add
cld
fisttpll
cmp
add
jle
dec
movsl
xchg
pop
sbb
cmpl
adc
mov
hlt
mov
mov
sbb
add
hlt
sub
add
test
test
xor
mov
dec
pop
pop
in
cltd
jbe
jbe
mov
xlat
fnclex
add
fs
addr16
add
mov
cld
sahf
mov
outsl
mov
mov
pop
mov
add
mov
pop
sbb
cmpsb
pop
xchg
push
mov
or
pop
mov
xchg
nop
add
mov
rcll
sbb
xchg
sub
mov
mov
add
inc
outsl
xor
mov
pop
add
mov
sbb
jmp
push
mov
lea
add
push
add
lea
xor
mov
or
pusha
add
fmull
sub
rcrl
mov
push
cli
lret
add
mov
mov
add
call
loop
mov
pop
int
cli
addb
pop
cmpsb
add
add
add
sub
and
jp
xchg
je
adc
js
mov
inc
mov
push
lea
subl
xor
xchg
push
repz
and
add
in
adc
mov
jl
fdivrl
loop
mov
add
xchg
xorl
push
mov
mov
mov
pusha
add
add
sbb
cld
adc
mov
add
cltd
test
mov
mov
sbb
in
fstpt
add
lods
aaa
lods
ljmp
add
pop
jp
pop
jbe
imul
dec
stos
cmpsl
xchg
rolb
mov
pop
iret
ljmp
inc
push
xchg
add
int3
pop
add
cmc
cmc
xor
sbb
mov
pop
rcrl
jne
jae
outsb
xorl
push
add
push
add
icebp
fdivs
int3
mov
mov
or
jmp
test
pop
mov
cpuid
add
add
mov
stos
lock
repz
jmp
xchg
clc
daa
mov
lds
cs
dec
jae
js
mov
add
shr
add
ja
out
in
or
add
mov
mov
lds
add
mov
aad
mov
sahf
or
ret
mov
add
xchg
hlt
adc
add
add
mov
pop
iret
mov
mov
int
inc
dec
dec
ljmp
sub
js
and
orl
scas
jae
test
aad
lods
mov
add
in
or
in
push
in
adc
cmp
repz
je
dec
push
pop
stc
daa
mov
std
pop
popf
jb
mov
fcoms
movsl
dec
cmpl
xchg
mov
addb
and
push
jns
add
mov
test
xchg
pop
movsl
lock
cs
push
add
adc
mov
je
add
lcall
mov
add
not
outsb
sub
les
mov
cmp
mov
mov
cwtl
in
mov
jmp
data16
iret
push
cld
fs
dec
dec
lods
sbb
scas
sbb
cmpsb
hlt
arpl
pop
imul
repz
mov
addb
popl
mov
pop
jl
add
cltd
xor
fistps
xchg
add
nop
add
iret
imul
stos
rcr
add
push
mov
add
cli
imul
cmpsl
cs
inc
push
fsubr
sbb
add
aaa
mov
jns
roll
cmc
cmpsl
mov
xor
mov
adc
mov
xor
mov
arpl
aaa
mov
popa
test
jae
sarl
mov
add
addb
popa
mov
dec
mov
add
lods
push
sub
mov
add
in
sub
repz
mov
loope
inc
inc
callw
addb
filds
mov
in
adc
mov
sbb
mov
adc
imul
mov
add
ja
aas
insb
mov
nop
add
add
cli
lods
std
add
mov
mov
arpl
dec
cmp
add
pop
and
bound
mov
out
cmp
addb
psubsb
rolb
inc
in
in
mov
mov
rolb
mov
ss
out
jmp
push
cmp
cmp
mov
add
add
add
out
sbb
fs
mov
repnz
push
test
scas
hlt
xor
mov
add
jne
push
add
jl
inc
add
jecxz
add
in
or
jnp
gs
ror
xchg
add
mov
pop
test
xor
popf
jbe
add
add
mov
test
add
in
neg
cmp
or
in
push
ljmp
add
sub
fildl
pop
inc
add
repz
mov
jge
push
int
ret
gs
fidivrl
mov
movsb
adc
mov
adc
mov
dec
std
cmp
loop
mov
add
mov
mov
push
add
mov
dec
adc
mov
aas
testl
sbb
xlat
shrl
xor
mov
leave
aas
je
pop
loopne
mov
add
testb
cmp
mov
push
push
push
jno
and
mov
add
and
xchg
add
inc
cmp
and
mov
mov
dec
sub
scas
test
adc
in
mov
iret
lock
mov
cmp
inc
lret
sub
add
fdivrs
xchg
bound
mov
cmp
mov
add
add
cli
push
inc
outsl
mov
addb
ret
aam
test
mov
dec
mov
cmpsb
cmc
push
in
cmpsl
add
fiadds
mov
xchg
out
addb
push
out
mov
mov
xor
insl
dec
lods
ss
mov
mov
mov
popf
dec
xor
or
and
je
decb
sbb
add
sub
stc
push
jnp
xchg
or
mov
add
mov
xchg
push
stos
out
ja
rolb
mov
fcom
jb
mov
ja
push
adc
adc
arpl
in
jnp
mov
or
jle
fidivl
add
cmp
add
movsl
shrl
lret
jmp
jb
mov
in
fmulp
stos
cmp
add
inc
add
xor
loope
pusha
add
fdivrl
add
cmp
pop
rolb
mov
mov
vpmacssww
or
or
insl
xchg
mov
sub
test
out
fnstsw
sbb
mov
popa
into
jecxz
push
inc
into
adc
mov
push
adc
pop
add
out
xor
add
mov
push
add
pop
leave
mov
mov
cmp
add
mov
pop
sub
pop
jp
sldt
mov
cld
cmc
je
loop
mov
add
mov
pusha
add
imul
lods
push
sub
push
cmp
je
std
std
std
push
jmp
and
mov
out
cs
dec
xor
mov
pop
dec
xchg
out
and
mov
mov
in
xlat
in
int
adc
mov
test
jne
out
bound
mov
or
mov
mov
mov
loope
ss
xlat
push
jl
nop
add
mov
icebp
or
mov
mov
sbb
add
int
mov
mov
leave
pop
les
mov
dec
xor
adc
mov
enter
pop
jle
add
sbb
fildll
lods
or
mov
dec
inc
add
cmp
xor
mov
fsts
add
dec
push
cmp
clc
add
mov
ret
inc
mov
mov
add
movsl
inc
fsub
add
movl
or
stos
inc
outsb
xchg
mov
jg
in
add
addl
insl
or
push
idiv
cltd
popa
imull
add
mov
movsb
cld
out
mov
stc
insb
repnz
in
mov
idiv
sbb
add
outsb
fcomps
ret
pop
imul
add
xchg
in
xchg
dec
mov
mov
cmpl
mov
int3
or
mov
push
mov
xor
sub
xor
mov
js
cmc
loop
mov
jecxz
push
add
cwtl
mov
add
and
mov
xchg
lret
push
inc
xchg
add
pop
icebp
pushf
jb
mov
leave
aam
outsl
cld
sbb
mov
add
xchg
stc
nop
add
out
xchg
add
test
jae
sub
inc
sbb
mov
rolb
mov
sarl
sbb
cmp
rolb
push
jae
addr16
rolb
mov
mov
adc
mov
cmp
add
mov
dec
mov
mov
jmp
xchg
adc
pop
pop
jp
inc
in
enter
xor
mov
lods
cltd
mov
add
add
lea
add
add
inc
aad
and
jge
push
add
addb
call
mov
add
in
imul
and
jg
sub
add
mov
xchg
mov
add
mov
sti
jg
out
inc
add
mov
test
add
iret
xchg
add
pusha
add
mov
xor
mov
movsb
pop
out
aad
sbb
add
jge
jnp
pop
or
xchg
add
jae
mov
or
scas
push
cld
or
push
xchg
cmc
push
shll
mov
ds
adc
mov
add
mov
add
imul
mov
inc
add
mov
andl
mov
push
add
addb
and
push
add
and
push
add
add
push
add
mov
loop
mov
mov
mov
daa
sbbl
in
sub
mov
mov
popa
repnz
fmull
dec
rolb
mov
movb
push
add
xor
mov
push
xchg
dec
xchg
adc
mov
dec
in
pop
and
mov
fists
in
push
dec
rolb
mov
add
rolb
mov
jmp
add
sub
dec
testb
mov
add
loopne
mov
dec
jge
push
outsb
sti
jne
inc
add
mov
push
sbb
out
or
add
test
lds
push
pop
enter
pusha
add
mov
lea
mov
and
ja
mov
sub
stos
push
repz
lods
loop
mov
fstpl
pop
loop
mov
mov
push
daa
jecxz
cmpl
sti
xor
mov
movsl
out
or
stos
mov
stc
frstor
mov
and
data16
fistps
sub
sbb
add
mov
psubsb
hlt
sub
dec
dec
mov
dec
stc
push
jl
cmp
mov
pop
lods
cmp
add
add
mov
jl
fbstp
dec
pop
push
insb
add
xchg
add
mov
pop
les
sub
xor
or
or
adc
mov
mov
or
xor
fbld
dec
pop
xchg
or
push
dec
stos
and
mov
cmc
push
pushf
test
and
mov
out
ret
xor
mov
add
xor
mov
dec
outsb
stos
into
mov
mov
call
sub
int3
notb
add
not
sub
mov
inc
mov
insl
test
push
and
mov
mov
insb
add
mov
js
clc
insl
fimuls
jae
add
mov
addb
imul
and
xchg
push
add
out
dec
push
add
fists
mov
mov
mov
add
mov
push
js
mov
addr16
jnp
pop
test
add
add
mov
cmc
xchg
mov
call
lock
mov
or
xchg
add
add
add
mov
cmp
add
mov
add
sub
sub
cli
sbb
xor
rcrl
mov
leave
movsb
mov
mov
inc
xchg
insl
jnp
das
lret
mov
leave
fstpl
add
imul
mov
inc
loop
mov
add
xor
mov
mov
nop
add
bound
mov
lods
dec
and
mov
and
mov
add
add
icebp
jecxz
mov
lret
sbb
shl
add
and
addb
xor
sahf
jp
icebp
test
repnz
mov
mov
add
add
mov
bound
mov
and
aaa
bound
mov
add
mov
cltd
jecxz
lods
insl
sbb
test
push
add
add
and
mov
jns
add
out
and
mov
dec
enter
xchg
mov
jp
data16
xchg
pop
add
add
int
mov
sub
lret
iret
or
add
outsb
fwait
inc
mov
or
js
or
push
sbb
sbb
mov
dec
add
mov
mov
cmp
sbb
mov
inc
insb
repz
cltd
add
xor
sbb
jnp
maxps
out
sub
add
jb
mov
mov
sbb
mov
aas
xor
mov
jns
sub
pop
lret
sbb
add
jbe
pop
imul
sti
dec
int
in
imul
add
add
jne
inc
mov
mov
add
fs
mov
mov
mov
inc
out
pop
icebp
daa
cmp
add
or
arpl
jmp
add
mov
loop
mov
sbb
cmp
jmp
push
enter
mov
push
cmp
ljmp
cmc
xorl
add
mov
leave
shll
mov
add
mov
es
scas
sbb
jecxz
test
mov
add
mov
mov
repnz
add
push
adc
add
pushf
jae
sti
lcall
mov
mov
in
loop
mov
add
jecxz
hlt
addl
mov
mov
jne
cmpsb
ret
sub
ljmp
rolb
mov
int3
sbb
add
lods
movsl
in
add
fisttpl
aad
icebp
jo
mov
call
xor
cmp
xor
out
sti
lods
sbb
dec
loope
pop
icebp
test
les
add
fmulp
rolb
mov
add
decb
icebp
xor
inc
or
and
ret
cld
or
add
mov
add
cmc
fsubs
cwtl
pop
movsl
cmp
shrl
adc
nop
add
add
push
push
cwtl
or
mov
jecxz
das
es
fwait
outsl
inc
leave
or
addb
inc
cmpsl
mov
movsb
repnz
inc
add
test
and
mov
roll
add
lret
inc
mov
in
mov
xchg
or
add
xchg
add
int3
insb
insl
sub
ficomps
mov
ss
aaa
icebp
cpuid
add
dec
cmp
mov
mov
stos
loop
mov
scas
xchg
ds
push
loopne
mov
test
push
add
cs
aam
add
and
or
dec
jl
rcll
mov
add
add
xchg
add
int3
lahf
sub
xor
addr16
jle
aas
cmp
mov
sbb
xchg
xor
mov
daa
jmp
adc
daa
pop
js
enter
add
aam
pusha
add
aad
mov
mov
and
adc
mov
inc
ds
inc
mov
push
push
inc
add
lea
test
sbb
jo
mov
clc
and
sbb
adc
stos
outsb
lock
rolb
mov
xchg
jb
mov
jge
push
ds
inc
mov
add
mov
in
sub
push
test
das
cmp
inc
test
add
addr16
dec
adc
ds
adc
mov
enter
mov
outsl
adc
loopne
mov
jb
mov
fcom
mov
test
clc
lock
add
addb
pop
mov
movsb
jmp
sbb
jnp
add
and
mov
pop
mov
loop
mov
push
push
add
fs
dec
dec
dec
jle
mov
mov
push
jae
inc
add
arpl
fcomps
xchg
test
add
aas
enter
add
add
mov
jmp
add
mov
in
testl
icebp
popf
push
xchg
mov
std
test
sbb
xor
add
adc
adc
mov
in
jae
push
repnz
pop
es
push
mov
fisubs
cli
fnstcw
fmuls
inc
mov
add
out
add
mov
lret
fcompl
add
mov
adc
xor
add
lock
imul
sub
pushf
or
rolb
mov
add
dec
mov
add
and
mov
gs
push
xlat
mov
mov
les
add
pop
dec
in
add
jno
jnp
sub
add
cld
inc
fidivs
mov
shl
add
rolb
add
std
jbe
push
jmp
pop
push
add
or
sbb
cli
je
imull
add
pusha
add
popf
fldl
pop
mov
sub
loop
mov
add
mov
fstp
fdivrs
add
frndint
jne
out
dec
stc
divl
mov
add
test
addb
imul
pop
loopne
mov
add
xorl
jne
bound
mov
jge
xchg
insb
repnz
mov
test
adc
push
fsts
or
adc
mov
cli
pop
cmp
pushf
push
add
push
es
pop
cli
rolb
mov
push
stos
pop
mov
add
mov
into
out
add
out
jae
ja
sub
mov
loopne
mov
lds
gs
pop
pop
in
mov
bound
mov
cmc
loope
filds
mov
pop
push
sbb
mov
xchg
push
add
xchg
sub
cmp
adc
rcr
or
or
cld
sbb
outsl
int3
cli
mov
mov
ljmp
loop
mov
adc
mov
es
push
pop
repz
xor
mov
push
mov
call
add
es
fisttps
sub
adc
sbb
xchg
imul
std
jns
xchg
repz
in
add
jnp
jno
inc
fcompl
sbb
leave
adc
fwait
mov
icebp
icebp
sub
add
cltd
jmp
sub
adc
pop
dec
das
sbb
stc
push
add
insb
dec
adc
cld
push
add
add
fwait
jno
scas
xor
add
add
cmp
mov
push
sub
mov
add
sbb
mov
mov
call
push
scas
mov
bts
mov
add
mov
scas
mov
mov
icebp
jbe
add
push
repnz
adc
mov
jnp
mov
add
or
xchg
ret
insb
std
fcmove
and
in
iret
xor
mov
leave
scas
dec
cs
sbb
add
dec
xchg
mov
push
xor
mov
jecxz
mov
or
sub
push
mov
push
sub
mov
sahf
sub
mov
in
and
adc
mov
xchg
cmpsb
push
add
mov
mov
add
mov
dec
add
aad
cmp
push
stos
mov
jns
int3
ljmp
push
and
mov
or
in
pop
mov
outsl
mov
cmpsb
js
add
es
dec
imulb
out
cld
rolb
mov
testl
or
sbb
add
mov
lea
nop
add
inc
sbb
fstpt
repz
xchg
sbb
test
into
mov
imul
add
inc
jae
lock
addl
add
add
mov
insl
pop
adc
sub
cltd
dec
outsl
cmpsl
cmp
add
mov
out
push
jo
mov
dec
mov
lods
pop
decb
adc
sub
scas
sub
cmp
outsl
cmp
and
js
fistps
pushf
cli
xor
inc
add
mov
popf
lds
ret
out
fwait
das
pop
clc
pop
push
add
add
mov
mov
xlat
outsl
gs
scas
es
pushf
in
jmp
in
mov
fsubl
test
ljmp
or
and
loopne
mov
mov
sbb
rolb
mov
jno
into
stos
popa
sbb
dec
dec
push
aam
jp
mov
iret
lock
cwtl
mov
repz
lret
push
add
mov
cltd
out
adc
mov
es
sub
lahf
mov
xchg
jno
add
mov
mov
into
push
mov
add
add
jmp
lods
sbb
inc
add
push
out
add
adc
and
mov
add
adc
cld
adc
and
lret
mov
add
dec
or
adc
pop
pop
jnp
add
stos
push
add
rcrl
adc
mov
call
add
jge
add
outsb
in
sub
lods
mov
addr16
add
adc
mov
xchg
adc
push
jp
rol
jmp
add
stos
cltd
mov
or
jmp
and
add
pop
es
push
add
mov
fidivrl
enter
int3
lahf
outsl
mov
fildl
loopne
mov
dec
cmp
arpl
or
cmc
ja
fildl
add
sbb
aaa
insb
rolb
mov
fsubp
add
add
xchg
pop
lahf
adc
ss
sub
cltd
out
int3
sub
ror
add
mov
popa
xor
mov
mov
sub
test
add
add
mov
xchg
mov
pop
inc
lock
sub
daa
mov
push
in
ljmp
xor
daa
and
sub
cmp
stc
push
addb
inc
ret
testb
daa
push
push
pop
pop
sub
ds
fs
add
addb
rolb
fdivr
adcl
enter
jns
inc
add
fldcw
inc
mov
push
fldt
call
sahf
mov
jbe
xor
std
stos
mov
jmp
xchg
sti
hlt
cwtl
push
dec
or
cmc
bound
mov
push
mov
daa
popw
outsl
in
fwait
cmp
cli
and
mov
lods
xor
out
and
test
xor
mov
add
rolb
mov
iret
inc
dec
jmp
int3
dec
cmp
sub
aas
sub
cltd
movsb
popf
sahf
push
mov
and
jbe
jmp
adc
sbb
add
rolb
cmpsb
xor
mov
sti
dec
addr16
add
jb
mov
and
mov
add
in
xchg
jecxz
imul
fwait
mov
mov
mov
lret
and
mov
mov
inc
imul
test
add
add
xor
mov
int3
lds
jg
add
mov
mov
jmp
addr16
mov
add
fidivrs
push
das
rolb
mov
add
filds
add
dec
and
or
out
ret
xlat
inc
testl
dec
inc
fsubr
or
out
xor
mov
iret
rolb
mov
les
out
inc
in
mov
cmp
mov
add
xchg
jecxz
add
sbb
mov
arpl
mov
imul
in
rolb
push
mov
pop
sahf
rolb
mov
lret
cli
and
dec
xchg
push
incb
ljmp
pop
sbb
pushf
mov
add
add
repnz
add
mov
outsl
sub
mov
cmp
mov
jp
and
add
mov
gs
cmpsl
or
aas
jno
jae
pusha
add
cs
add
jl
std
call
fisttpl
decb
fs
ss
rcrl
hlt
mov
mov
aad
add
ficompl
addb
ja
fistpl
lret
mov
inc
and
call
mov
mov
stos
cltd
mov
mov
push
mov
arpl
jl
sub
add
decb
cld
pop
ja
lret
or
add
jns
pop
dec
ret
sbb
add
sub
iret
dec
insl
mov
add
fistpl
fwait
cmpsb
or
lock
push
popa
jecxz
scas
mov
mov
mov
insl
test
push
notb
add
outsl
sub
aas
push
dec
pop
ds
sbb
popa
mov
inc
pop
inc
cwtl
out
bound
mov
mov
add
add
and
scas
add
mov
mov
pop
xor
add
mov
mov
mov
mov
add
add
mull
add
mov
popa
add
ficomps
pop
rep
pop
or
mov
andl
adc
cmp
add
rolb
or
xor
mov
out
cmp
mov
fwait
mov
ss
gs
mov
pop
mov
das
iret
jno
std
adc
adc
mov
xor
mov
mov
sub
imul
mov
mov
mov
fs
and
fldt
sub
shrl
inc
cmc
cs
xchg
add
mov
stos
ljmp
push
adc
and
mov
movsl
insl
mov
nop
add
cld
testb
xchg
inc
aaa
das
and
mov
icebp
inc
call
add
xchg
push
int3
push
loope
mov
test
cmp
add
inc
dec
sub
mov
cmp
xchg
pcmpgtw
pop
or
cli
xchg
lods
sub
fcmovnb
dec
stos
mov
adc
mov
lea
mov
add
mov
lea
ss
mov
test
ljmp
push
xor
mov
rol
pop
popa
in
pop
addb
ret
mov
js
popf
imul
add
mov
pop
jno
add
cmp
test
mov
mov
mov
aaa
lret
mov
inc
add
dec
repnz
cmp
mov
lret
push
push
xchg
stos
mov
xchg
add
push
mov
push
or
jae
dec
pop
adc
add
int3
das
and
stc
add
mov
ret
je
insb
arpl
adc
mov
js
dec
push
add
orl
rolb
mov
scas
daa
movsl
in
inc
call
mov
aam
mov
mov
or
mov
je
fwait
stos
cmc
arpl
lea
mov
in
mov
mov
push
xor
lret
push
neg
mov
mov
aaa
jne
rcrl
add
add
fwait
xchg
pop
cmp
and
addr16
push
dec
rep
lods
es
inc
mov
and
xchg
add
orl
push
add
mov
popf
dec
jmp
push
xor
mov
das
push
push
mov
mov
inc
jg
addb
cmpsl
sub
xor
cmp
mov
insl
jl
lds
cmp
lret
ret
dec
clc
mov
bound
mov
stos
das
ja
jmp
add
cld
lahf
cmp
pop
idivb
insl
outsb
test
inc
jmp
iret
addb
test
iret
pusha
add
cmp
out
jg
in
xchg
fcoms
enter
add
mov
outsl
in
xchg
ss
mov
dec
out
jp
rolb
push
push
sub
lcall
cmpsl
sar
rolb
mov
popa
mov
ret
lcall
mov
movsb
pop
sahf
fcmove
inc
mov
lahf
xor
add
dec
ljmp
test
push
add
mov
push
add
cli
outsb
icebp
inc
cmc
xchg
cmpsb
call
outsb
push
sbb
xchg
inc
icebp
jge
loop
mov
push
movsl
pop
jecxz
cld
loope
add
scas
sbb
addb
cmpsb
dec
cwtl
nop
add
mov
inc
and
and
adc
mov
pop
je
aad
and
mov
inc
sbb
dec
lret
comiss
or
fimull
cmp
add
push
inc
cltd
dec
sti
jae
jb
mov
shll
mov
pop
lcall
stc
xchg
add
add
add
cli
fcmovnbe
inc
add
pop
ja
sbb
mov
inc
and
add
xor
add
pop
push
dec
xchg
movsb
add
mov
mov
mov
lret
lret
call
addb
popa
mov
mov
mov
fstps
data16
mov
cmp
pop
ficoml
in
push
add
add
xchg
mov
xor
pushf
mov
mov
and
mov
jno
sbb
add
add
stos
jb
mov
flds
jl
jbe
push
scas
mov
inc
adc
mov
adc
mov
add
xor
jp
push
test
hlt
les
add
mov
mov
mov
mov
mov
mov
mov
push
add
add
xor
cli
mov
lcall
int3
or
add
jecxz
test
cmp
cmp
fucomip
out
cmp
and
test
out
bound
mov
popa
ret
xchg
add
mov
cli
movsb
je
xchg
hlt
push
add
loope
mov
out
dec
sub
pop
lret
jno
cmp
push
xor
repnz
mov
mov
pop
ret
lahf
jns,pt
jo
mov
xor
mov
add
enter
scas
or
jmp
jmp
cmp
add
mov
sbb
xchg
add
dec
loop
mov
notl
add
add
jno
cmp
jbe
push
and
xor
mov
and
mov
fsubl
add
dec
push
aam
add
gs
movsl
cltd
push
add
test
add
and
icebp
popa
push
imul
jl
add
fwait
in
add
jns
mov
mov
flds
jmp
mov
icebp
cmp
ja
sub
mov
or
pop
std
sub
insl
dec
inc
add
mov
jne
add
lcall
leave
pop
add
mov
fisttpll
in
test
xchg
mov
adc
test
out
dec
aam
mov
loop
mov
and
out
pop
xor
add
mov
push
mov
fisubl
enter
add
inc
add
mov
push
jmp
xor
mov
push
call
jecxz
add
pop
mov
jmp
push
addr16
dec
sub
push
add
mov
es
or
mov
dec
xchg
dec
lret
jg
mov
add
pop
pop
fmuls
mov
push
loope
push
xlat
jp
int
adc
mov
add
sub
xchg
add
fldl
ficoml
mov
mov
test
xor
mov
jmp
cmp
pop
lea
jg
dec
mov
mov
and
js
leave
sbb
pop
arpl
sbb
jmp
inc
add
sub
ljmp
mov
or
imulb
inc
jbe
add
push
jecxz
and
mov
rolb
or
add
pop
mov
add
ljmp
lea
aas
sahf
aad
adc
mov
jmp
add
or
sub
movsl
mov
insb
js
jg
xchg
add
mov
add
les
push
movsb
jns
adc
sub
add
add
mov
pop
leave
and
mov
xchg
add
add
int3
jmp
sbb
gs
addl
mov
cwtl
int
fbld
cmp
add
sbb
out
xchg
popa
lock
or
sub
add
pop
push
jl
lea
imul
pop
js
cltd
jle
mov
xchg
outsb
mov
push
jle
pop
mov
mov
mov
lahf
sub
push
movsl
lcall
mov
xlat
cmpsb
pushf
test
cmp
pop
mov
fnstcw
leave
iret
movsl
sub
idivl
sub
xor
mov
jbe
pop
sbb
popf
sub
jg
flds
xor
mov
leave
pop
in
stc
in
add
add
jns
add
pop
adc
pop
adc
mov
and
or
cmp
add
hlt
js
aas
shrl
jnp
jmp
sbb
bound
mov
dec
cmp
mov
mov
mov
adc
mov
rolb
mov
add
sti
sub
add
inc
add
sub
cmpsl
jnp
pop
cltd
adc
add
mov
movsb
ljmp
add
mov
mov
or
inc
add
shrl
rolb
popf
lret
mov
movsl
xchg
add
mov
cmp
mov
mov
mov
add
jecxz
dec
cmc
daa
in
lock
push
js
jl
add
mov
add
loop
mov
mov
xchg
push
xchg
bound
mov
jb
mov
in
and
int3
cmp
fisttpll
add
setnp
mov
jns
mov
ds
incl
out
jbe
sahf
sbb
add
sub
repz
mov
xchg
cmp
rorl
pop
sahf
or
add
pop
mov
out
ficompl
ror
xchg
lcall
jl
andl
mov
jg
add
repnz
fstp
sbb
pop
out
mov
and
add
jg
adc
mov
sub
xchg
add
add
mov
cmp
pop
fdivrs
dec
and
add
popf
dec
sbb
ljmp
cld
mov
add
outsl
sub
push
mov
jbe
cwtl
xchg
mov
jb
mov
add
mov
push
push
je
or
xchg
add
add
lret
mov
or
add
call
add
stc
add
pop
xchg
inc
cmc
mov
add
pop
mulb
xchg
dec
push
pop
push
cmp
fwait
or
int3
jns
xchg
add
pop
rolb
mov
aas
mov
add
add
pop
push
mov
xlat
rorl
lds
sarl
bound
mov
sub
popf
sub
add
mov
icebp
push
jae
outsl
jns
mov
mov
dec
sub
fisubs
add
add
pop
out
add
lret
testl
mov
into
dec
mov
mov
jo
mov
jp
xchg
add
inc
xchg
push
add
xchg
lods
dec
sub
push
clc
sub
addb
or
sbb
add
out
pop
test
mov
xor
mov
mov
xchg
aam
jge
mov
add
neg
test
insb
out
add
push
mov
pop
jp
cmp
inc
insb
cmp
cmpsb
inc
add
fwait
or
cli
cwtl
test
lea
jge
add
or
pusha
add
aam
push
add
addb
push
mov
mov
cwtl
cmp
add
jp
rcll
mov
mov
pop
in
shrl
jb
mov
aaa
stos
arpl
add
mov
add
popf
loope,pn
fstl
dec
les
in
cld
aam
test
or
aas
jge
fwait
xlat
test
sub
fs
mov
je
add
cmpsl
int
iret
insb
mov
pop
leave
rolb
mov
inc
add
out
scas
mulb
jo
mov
call
fstpt
add
outsl
int
xchg
add
enter
shll
mov
std
popl
hlt
mov
or
fldl
add
xor
dec
enter
inc
add
jecxz
mov
pop
sub
lcall
adc
mov
dec
push
jp
insl
mov
repz
shll
out
pop
es
ret
in
stc
mov
mov
in
cmp
mov
add
mov
mov
test
adc
or
aas
xchg
add
cwtl
loope
pushf
push
xor
popf
adc
mov
add
cs
shr
pop
hlt
xchg
pop
rorl
outsl
jmp
and
cmp
bound
mov
mov
add
mov
jo
mov
xlat
addb
push
cld
adc
stc
mov
scas
cmp
mov
cmp
add
in
notl
loope
lods
pop
inc
jl
push
jg
lea
ror
addr16
push
lcall
xor
add
or
cmp
fdivl
dec
test
mov
mov
dec
icebp
hlt
outsl
add
add
mov
pop
jae
dec
or
daa
insb
or
add
cmp
xchg
mov
mov
add
cmpsl
sahf
imul
add
stos
add
mov
pop
ret
or
lods
repz
data16
and
adc
mov
mov
test
out
xchg
movl
push
mov
mov
cmc
lea
mov
rolb
mov
in
es
mov
les
insl
inc
add
out
xchg
add
imul
mov
mov
dec
addb
adc
sub
mov
test
in
push
cmpsb
jg
hlt
lods
lret
test
sbb
ss
jecxz
add
aad
jecxz
out
sub
xor
adc
data16
cmp
popf
xor
pop
fs
in
add
add
push
jnp
xlat
xor
call
add
sub
stos
xor
mov
add
or
mov
pop
push
lods
clc
aad
sbb
dec
leave
dec
jns
loopne
mov
add
push
cs
mov
mov
lahf
push
fcomi
outsl
cmp
fcmovb
sub
xchg
mov
mov
mov
insl
inc
sbb
add
mov
and
stc
aas
lods
dec
repnz
mov
mov
mov
outsl
fs
add
xchg
pop
aaa
pop
das
rolb
mov
xor
and
stos
add
mov
inc
stc
lea
mov
dec
push
push
jae
jns
xor
cmpsl
lahf
dec
sbb
mov
fs
push
in
and
pop
xchg
sub
add
adc
adc
mov
add
add
add
add
cld
rolb
movsb
aaa
lcall
int3
loope
pop
shr
fistpll
std
sarl
faddp
add
push
nopl
mov
add
push
and
cmc
aas
jo
mov
jecxz
iret
sbb
rcll
mov
sti
popa
das
subl
dec
pop
fiadds
add
mov
pop
outsl
fwait
xor
mov
jge
mov
mov
sbb
scas
test
add
call
sub
xchg
mov
mov
add
das
lock
mov
cli
stc
scas
mov
outsb
mov
ljmp
sub
scas
adc
mov
mov
cmp
xchg
call
add
push
add
mov
xor
mov
stos
add
mov
mov
inc
in
cs
or
add
mov
mov
sti
in
addb
mov
or
xchg
add
add
pop
in
fmull
sub
fsts
add
add
mov
rcl
ljmp
or
insl
xor
mov
mov
add
cs
lods
cmc
leave
sub
add
popa
xchg
aas
ret
pop
fbstp
dec
mov
fisttpl
addr16
icebp
xchg
mov
xor
mov
mov
inc
std
dec
les
pop
inc
sbb
ds
in
test
add
push
addb
movsl
mov
mov
call
lds
mov
add
int
push
jecxz
lock
inc
fstpl
and
jmp
cli
or
mov
lods
cmp
add
mov
pop
jnp
lret
imul
sbb
sbb
sbb
pop
data16
aas
mov
mov
mov
xor
pop
xchg
sbb
pushf
jg
cmp
fldcw
add
adc
mov
lods
enter
xchg
add
mov
inc
push
ret
pop
js
or
mov
add
mov
push
add
push
loope
jl
loop
mov
mov
add
ja
lahf
jge
add
adc
add
add
inc
ss
ffree
sub
aas
xchg
hlt
add
jl
push
rolb
mov
add
cld
pusha
add
mov
aas
sub
loop
mov
movsl
aam
push
mov
mov
stos
dec
pop
and
add
xchg
repnz
kxnorb
das
icebp
mov
add
mov
jmp
notl
add
add
mov
jmp
dec
addb
addb
imul
rolb
popf
dec
rolb
sahf
sub
add
mov
dec
add
add
test
nop
mov
mov
dec
lds
mov
add
add
mov
adc
dec
add
mov
fcomps
mov
mov
jns
pop
ds
mov
je
fiadds
add
cmpsb
xor
lahf
rolb
mov
xlat
sarl
inc
in
mov
cs
mov
mov
pop
dec
lcall
stc
inc
mov
cli
stos
push
in
addb
outsl
movsl
dec
rolb
mov
sub
xchg
ret
sub
leave
xchg
dec
cmpsl
push
pop
mov
sub
pushf
aam
movsb
cltd
lock
ret
icebp
fdivr
pop
mov
mov
push
mov
leave
sbb
jle
xor
mov
mov
add
test
ret
fs
add
jne
pushf
sbb
add
mov
sub
add
push
xchg
mov
leave
lret
rorl
cmpsb
mov
xchg
add
mov
add
mov
imul
xchg
enter
mov
adc
movsl
sti
outsb
jae
cmp
adc
rcr
lahf
incb
mov
ficomps
or
add
push
adc
out
add
sbb
enter
call
imul
push
mov
add
int3
inc
stos
jl
cmp
sbb
and
mov
adc
mov
mov
xchg
inc
mov
data16
dec
add
pop
inc
out
add
pusha
add
fisubrs
cs
rolb
inc
leave
popf
adc
gs
push
add
xchg
loopne
mov
sbb
sub
or
mov
mov
inc
add
gs
addb
shl
out
fstps
addb
mov
mov
cmova
es
push
push
loope
mov
in
loopne
mov
cltd
in
nop
add
add
insl
aaa
flds
push
std
inc
add
dec
mov
in
cmp
sub
add
rolb
mov
jo
mov
xor
mov
out
lcall
xchg
xchg
mov
and
jb
mov
mov
pop
bound
mov
ljmp
nop
add
pop
push
addb
cmpsl
mov
out
add
add
or
xchg
xchg
sahf
adc
mov
and
add
loope
loop
mov
icebp
mov
mov
pop
mov
add
popf
imul
testl
pusha
add
sbb
and
add
mov
inc
add
add
addb
push
sahf
xor
add
lret
lock
adc
aas
mov
or
iret
push
add
mov
add
scas
xchg
mov
movsb
sti
in
cmp
sub
insb
pop
or
test
out
jns
lcall
add
pushf
repz
cmc
or
insb
sbb
lret
cmp
das
cmpsl
jnp
aam
xor
add
test
cmp
mov
push
mov
add
mov
inc
aad
out
pusha
add
pop
dec
adc
mov
std
in
or
imul
ds
int
sti
add
mov
jnp
dec
xchg
mov
push
xchg
outsl
cmpsb
pop
xchg
lret
into
cld
bound
mov
add
fdivl
cmpsl
lods
pop
pop
shrl
xor
bound
mov
xchg
add
xchg
shr
scas
add
add
inc
add
add
inc
mov
cmp
cmovno
add
pop
dec
xchg
add
cld
and
mov
xor
mov
out
dec
cmp
filds
add
add
les
jae
aad
sub
mov
mov
mov
into
cmp
mov
push
mov
mov
xor
mov
or
outsb
fistpll
sub
out
in
fstpl
add
dec
mov
add
lret
cmp
loop
mov
xchg
mov
xchg
insl
cmp
sbb
daa
bound
mov
push
imul
push
xor
mov
ss
cmp
pop
push
ja
add
sub
mov
xor
mov
mov
sbb
repnz
add
or
js
bound
mov
jl
aad
or
add
pop
movsb
fnstenv
pop
pop
out
pop
pop
scas
fstpl
out
ds
lock
add
pop
sub
add
mov
mov
mov
adc
stos
stc
je
and
mov
xor
dec
jecxz
xor
mov
mov
fs
jmp
loope
mov
push
dec
int
sub
xor
add
cmp
incl
mov
jns
push
mov
test
pop
sbb
cs
fistpll
pop
sti
popl
dec
push
out
sbb
add
movsbl
xchg
xchg
stc
add
mov
scas
mov
jge
popf
mov
and
add
add
inc
jae
push
inc
add
lods
in
sub
push
sub
loope
scas
iret
lods
push
add
xchg
xor
cmp
loope
jb
mov
lret
fmul
xchg
mov
adc
mov
inc
add
cmp
lret
inc
add
mov
dec
mov
mov
cmp
hlt
push
inc
iret
sbb
pop
push
cmp
imul
adc
and
mov
leave
or
mov
inc
add
data16
call
adc
xchg
sbb
adc
jbe
adc
mov
dec
test
add
xchg
test
add
ret
fisubs
mov
inc
shl
add
sti
push
jecxz
and
cwtl
add
in
cwtl
push
idiv
cli
into
mov
mov
popa
out
movsl
or
add
push
aam
dec
test
mov
aas
mov
ss
and
mov
push
add
add
mov
js
inc
add
scas
scas
dec
leave
pusha
add
mov
test
push
inc
andl
aam
adcl
mov
xchg
in
add
sbb
adc
mov
add
les
push
sahf
lcall
call
inc
stos
ffreep
mov
push
js
iret
inc
add
mov
mov
jae
gs
mov
and
dec
cmp
add
or
pop
mov
addb
ror
addb
dec
rolb
mov
jge
xor
fistps
fptan
add
int3
xor
add
xchg
add
scas
cwtl
adc
add
add
and
mov
dec
fimull
mov
ret
repnz
insb
js
je
out
adc
fsubrl
movsl
mov
cltd
sti
xchg
add
outsl
and
in
mov
cli
std
pop
adc
mov
mov
ret
lea
mov
repz
xor
rolb
mov
sub
xor
mov
mov
xchg
sbb
pushaw
add
mov
mov
mov
pop
aam
push
mov
jecxz
daa
pushf
fcmovnb
add
ret
cwtl
lret
rcll
push
add
or
sbb
mov
loope
in
push
pop
mov
fcom
mov
sbb
inc
jo
mov
and
mov
jns
xchg
and
xchg
mov
mov
add
test
add
add
add
pop
jnp
jnp
jp
sbb
cwtl
pop
cmp
xor
sub
stos
sbb
leave
jnp
cmp
sarl
push
testb
movsb
mov
mov
das
pop
stos
mov
pop
adc
adc
sub
mov
push
jl
jbe
cli
sbb
ret
dec
jl
add
and
rolb
inc
in
push
cwtl
mov
add
lds
nop
add
mov
mov
mov
fists
add
movsb
pop
cmp
out
or
add
add
cltd
cmp
or
push
test
cmp
push
repz
pop
cmc
xor
data16
addb
scas
xchg
ret
push
add
dec
js
pusha
add
mov
adc
repnz
push
add
fisubrl
jge
jge
jns
jae
jecxz
and
negl
xor
mov
movsb
cltd
lods
jmp
mov
jno
add
test
mov
add
add
addr16
add
sub
add
mov
xchg
inc
mov
add
mov
xchg
xchg
mov
mov
fisubrl
pop
jno
sub
add
movsb
mov
push
add
lods
aas
sub
icebp
loop
mov
pop
inc
sub
ss
mov
ss
rolb
mov
addb
test
lods
int
cmc
aam
sub
in
ficoms
leave
popf
sbb
add
minps
pop
frstor
test
ljmp
add
add
mov
mov
dec
daa
jle
mov
into
out
imulb
push
add
out
add
addr16
xchg
cmp
data16
mov
push
dec
push
add
and
mov
mov
in
xchg
aas
call
int3
imul
mov
or
mov
or
cs
add
or
cmp
pop
mov
inc
xorpd
ss
mov
mov
sub
mov
mov
add
inc
sahf
mov
sti
inc
jae
leave
add
mov
sub
sub
add
mov
add
les
pop
es
hlt
and
mov
jmp
fiaddl
fcoms
add
cmp
add
pop
push
pop
mov
mov
jg
jb
mov
jmp
add
sub
lret
imul
add
add
mov
xchg
adc
sbb
in
mov
notl
pop
xor
mov
ds
jne
cmp
inc
mov
ljmp
add
xor
sti
stos
xchg
test
xor
sbb
addb
arpl
sub
sbb
jge
fstpl
xchg
add
jnp
jle
aam
jbe
dec
call
out
aas
cltd
lods
mov
adc
mov
test
cmc
sub
popl
mov
mov
mov
push
lcall
xchg
mov
mov
mov
and
dec
pop
cmp
fs
pop
hlt
xchg
sub
add
addb
cmp
and
shll
push
add
mov
add
mov
hlt
inc
loope
movsb
call
test
dec
inc
jno
xchg
popf
push
call
mov
imull
ret
adc
xor
mov
mov
pop
or
ret
pushf
jbe
pop
dec
or
inc
daa
sub
add
cmc
bound
mov
xor
mov
pop
or
out
es
xchg
lods
negl
add
jecxz
mov
mov
mov
mov
mov
gs
ss
sbb
int3
sub
addb
mov
sub
and
cmp
mov
sbb
mov
in
jecxz
push
vmwrite
jo
mov
mov
xchg
cld
rcll
mov
xchg
cli
rolb
mov
repz
jp
mov
mov
jmp
fidivrs
subl
add
mov
xor
mov
mov
cmp
es
mov
jb
mov
lret
jnp
dec
jo
mov
mov
dec
sti
pop
outsb
dec
mov
pop
dec
mov
repz
push
sti
and
mov
mov
push
call
jg
add
mov
pop
gs
jbe
sub
pmaddwd
mov
mov
adc
negb
sbb
or
mov
sbbl
sahf
enter
add
mov
pop
stos
pop
pop
push
inc
pop
add
mov
add
ja
popf
addb
xor
lret
mov
loope
cmp
mov
pop
js
imul
imulb
xchg
adc
mov
aad
out
mov
mov
inc
xchg
in
test
fadds
into
adc
lret
push
sub
pusha
add
add
ljmp
cmp
xor
mov
xchg
or
and
jnp
mov
idivb
mov
add
add
dec
lea
fisubl
rcrl
inc
adc
mov
mov
sub
loope
cmp
cmp
inc
fiadds
mov
shll
inc
stos
sub
mov
outsb
lahf
addb
inc
imul
xor
je
push
lcall
fcom
cs
pop
sub
mov
and
mov
outsl
aaa
mov
inc
jp
pop
inc
scas
in
cmp
outsb
mov
mov
ret
cmp
dec
cs
adc
in
add
test
rolb
push
jns
add
and
push
scas
push
cmp
mov
imull
add
hlt
test
insb
and
mov
pop
hlt
mov
scas
pop
cmp
add
rorl
pop
cs
mov
mov
in
mov
int3
pop
sbb
add
sub
xor
scas
mov
xchg
gs
lds
jne
add
out
fbstp
aad
mov
and
cltd
and
lods
pop
sarl
rolb
lock
mov
mov
lods
jne
and
mov
loopw
mov
sub
aaa
mov
or
mov
repnz
mov
mov
sub
push
fwait
mov
jecxz
xor
mov
divb
out
add
and
mov
add
jg
into
sbb
xor
cmp
arpl
data16
insl
sub
fmull
out
aam
enter
or
or
mov
adc
add
push
add
stos
in
ja
lods
out
in
data16
or
inc
add
insl
hlt
sub
adc
mov
cmc
es
add
out
or
inc
add
jp
or
push
int
add
mov
mov
and
mov
lods
out
inc
mov
loope
std
sbb
ficoml
add
mov
fnstsw
add
mov
ss
add
imul
pushf
dec
cwtl
iret
cmpl
movl
ds
lock
xchg
push
add
push
mov
add
push
out
add
mov
xchg
je
icebp
stos
je
bound
mov
mov
addb
mov
sub
sbb
test
mov
mov
mov
cmpsb
cmp
mov
mov
in
sub
xor
jo
mov
rolb
mov
pop
leave
add
mov
cld
jno
add
aam
add
mov
mov
add
xor
pop
arpl
fidivrs
in
add
add
scas
js
lock
sub
sbb
or
mov
fcom
addb
xchg
sbb
add
mov
jmp
sub
fs
ret
jp
stos
icebp
cld
jle
js
add
mov
movsl
and
and
scas
lods
nop
add
addb
cmp
and
mov
add
lea
ret
outsl
mov
mov
push
xchg
and
mov
add
call
xchg
clc
repnz
xchg
sbb
add
sbb
xor
mov
mov
shrl
sub
int
aam
adc
jp
mov
jo
mov
les
lods
nop
add
mov
imul
sub
xor
bound
mov
jb
mov
add
mov
xchg
sub
and
scas
mov
ljmp
nop
add
adc
mov
xlat
mov
hlt
lret
adc
mov
push
xor
push
add
je
add
pop
pusha
add
mov
add
and
mov
leave
jno
jmp
mov
jecxz
and
aas
loopne
mov
mov
or
outsb
mov
mov
pop
out
lcall
jno
enter
push
jmp
dec
sub
cmp
callw
add
jecxz
incl
mov
stc
in
out
cmc
add
add
dec
add
fmul
adc
mov
bsf
xor
mov
jmp
mov
addb
leave
inc
add
mov
push
push
add
xchg
aaa
adc
add
add
and
mov
imul
add
mov
cmpsl
shr
or
and
mov
inc
je
call
jnp
out
outsl
push
xchg
add
jno
jo
mov
out
mov
aaa
pop
ss
inc
pop
cmp
aam
test
cmp
or
adc
add
out
sub
movsb
fwait
mov
jbe
mov
mov
add
mov
mov
rolb
mov
lods
repz
hlt
sti
cmp
outsl
lods
add
fsubr
xchg
dec
jnp
rolb
mov
and
mov
in
adcl
lock
jbe
fwait
ds
push
nop
add
mov
adcl
and
mov
add
or
insb
pushf
and
mov
rcrl
mov
loope
add
jp
pop
jge
push
add
mov
aad
mulb
cmpsl
sahf
sbb
cltd
add
sub
cmpsl
sub
fiaddl
mov
nop
add
pop
iret
jge
mov
push
add
int3
ljmp
mov
ret
stos
enter
movsl
lret
fwait
mov
or
xor
arpl
mov
pop
repnz
jp
imul
repz
mov
mov
xor
mov
xor
test
add
std
inc
leave
icebp
xchg
inc
imul
sub
add
xchg
outsb
dec
int3
iret
decl
and
rcl
add
fistpll
add
pop
or
mov
mov
add
mov
and
xor
mov
pop
js
int3
mov
lods
test
jno
shrl
inc
sbb
mov
add
sbb
imul
fidivrs
not
cli
sbb
add
mov
jle
push
test
mov
xor
loopne
mov
int
call
leave
mov
mov
xor
mov
dec
add
mov
lcall
ljmp
mov
ret
aad
notb
bound
mov
add
add
pop
rcrl
push
mov
iret
pop
sbb
aaa
cltd
es
and
ja
dec
jge
push
add
mov
pop
pop
push
cmp
mov
lods
stc
xchg
add
mov
and
mov
pop
mov
movsb
lods
jecxz
mov
mov
add
rolb
mov
out
jb
mov
inc
add
je
push
into
addb
outsb
sahf
mov
scas
bound
mov
add
mov
mov
iret
push
rolb
pusha
add
adc
mov
dec
inc
add
in
xor
dec
mov
or
aad
xchg
addb
sub
outsl
aas
dec
cmp
xchg
add
cmpsl
std
push
sub
add
stos
push
add
push
or
mov
lcall
addr16
out
mov
outsb
imul
pop
bound
mov
inc
dec
gs
mov
mov
add
mull
add
insb
sub
mov
add
and
xlat
fstpl
push
add
sub
push
sub
lret
or
cmp
push
outsl
das
clc
pop
adc
and
cltd
mov
filds
inc
mov
test
mov
cmc
test
inc
cmc
mov
mov
rolb
mov
push
or
inc
cmc
and
mov
pop
xlat
rolb
adc
mov
xor
mov
jmp
adc
lods
xchg
inc
and
mov
push
add
add
int
mov
sub
je
mov
push
inc
add
icebp
lahf
push
cmpsl
xor
cmc
inc
je
xchg
add
mov
adc
in
pop
nop
add
xchg
out
xchg
inc
pop
mov
fstl
lods
xor
add
arpl
js
bound
mov
inc
insl
xchg
int3
das
adc
mov
add
jmp
add
pop
addr16
and
mov
mov
add
loopne
mov
into
out
add
or
out
jo
mov
addb
xor
data16
add
mov
test
out
pop
jae
push
jl
sub
cmp
divl
dec
mov
movsl
push
add
mov
loopne
mov
push
int
mov
cmp
testl
fildll
xor
mov
ret
push
popa
repnz
add
fisubrs
adc
dec
jns
push
leave
xchg
jmp
pop
fwait
and
mov
mov
add
mov
pop
cli
dec
add
mov
lret
addb
adc
push
mov
inc
dec
cwtl
jne
add
mov
jl
jge
pop
outsb
mov
movsb
sub
mov
jo
mov
xor
mov
imul
loop
mov
lods
fisttpl
and
arpl
or
fs
test
in
jecxz
addb
jns
out
fmul
aad
jns
add
mov
xor
outsb
lret
loop
mov
stos
xor
cmpsb
insb
sub
out
mov
jne
in
les
mov
dec
dec
cld
inc
add
mov
nop
add
xlat
pop
add
mov
sbb
cmp
inc
xchg
add
faddp
add
push
dec
mov
xchg
aas
xchg
nop
add
inc
add
int
xchg
add
hlt
cld
dec
lret
or
hlt
lret
dec
js
mov
sub
sbb
movsb
pop
mov
leave
mov
cmp
sarl
in
int3
jo
mov
ja
mov
pop
loopne
mov
jb
mov
mov
lds
lock
dec
fnstsw
loop
mov
aam
lea
push
mov
cmovle
jno
inc
add
insl
test
loopne
mov
subl
mov
add
mov
addb
or
jecxz
xor
mov
xchg
push
ss
add
icebp
mov
add
jae
sub
lcall
pop
out
add
imul
lret
test
add
daa
mov
lock
icebp
ljmp
mov
ds
mov
mov
mov
pop
dec
sti
mov
mov
cmpsl
push
push
mov
mov
add
dec
add
mov
mov
xlat
xor
add
clc
xor
mov
add
mov
mov
stc
repz
jns
jae
lock
pop
and
mov
imul
dec
push
popa
jno
mov
push
jecxz
and
add
mov
cli
repz
mov
rcll
std
ljmp
movsl
add
add
pusha
add
pop
jge
pop
lock
rcrl
add
inc
lock
lcall
mov
js
iret
aaa
ds
fnsave
add
cmc
jno
push
dec
pop
fstps
jp
idivl
ja
cmp
add
cli
sub
cmp
fidivs
mov
sub
sbb
push
add
jmp
shll
cmp
mov
add
aas
std
jo
mov
je
lcall
add
push
push
pop
mov
add
cltd
call
pusha
add
xor
mov
add
mov
add
popf
cltd
add
adc
mov
scas
cmpsb
inc
add
mov
aam
pop
lods
sbb
mov
mov
pushf
lcall
leave
push
iret
mov
add
mov
fists
mov
test
add
ja
or
cmp
loope
mov
mov
bound
mov
sbb
add
lds
bound
mov
xlat
jmp
sub
sbb
pop
stos
push
mov
mov
call
jge
pop
movsb
fistl
mov
adc
mov
mov
fs
add
into
xor
add
add
mov
scas
dec
rolb
inc
jp
pop
fucomip
sbb
movd
dec
add
push
test
loop
mov
mov
mov
loop
mov
aam
jo
mov
addb
addb
fwait
rolb
mov
add
pop
push
add
int
hlt
out
dec
ja
dec
mov
or
cli
mov
add
push
sqrtps
xchg
inc
lock
push
add
sub
js
mov
add
mov
sbb
jle
bswap
push
add
pop
and
pusha
add
ja
lret
sbb
adc
mov
aas
adc
mov
mov
mov
add
and
mov
mov
movsb
pop
inc
filds
fcomip
addr16
add
out
repz
enter
push
loopne
mov
imul
das
add
imul
add
add
sub
xor
dec
movsl
pop
sbb
or
mov
mov
enter
outsl
loope
pop
popf
jp
add
mov
in
or
push
adc
add
out
cs
mov
imull
pop
aad
sub
push
mov
inc
or
mov
dec
mov
add
mov
roll
insl
mov
cmp
mov
ja
cmc
lds
pop
loop
mov
push
ja
adc
rcll
and
mov
mov
add
mov
mov
add
mov
add
mov
mov
xor
cmp
cli
lcall
imul
cmc
in
jl
psllw
scas
pop
xchg
ljmp
lret
cmpsl
test
test
shl
and
out
int3
jmp
mov
aam
lea
dec
rolb
mov
jecxz
mov
mov
stos
push
lcall
mov
sbb
nop
add
mov
or
inc
mov
popf
rolb
mov
add
aam
leave
adc
test
int3
inc
xlat
pop
repnz
fimull
ljmp
rolb
mov
stos
ret
dec
pushf
cld
mov
jecxz
ljmp
and
mov
negb
mov
clc
popl
pop
testb
add
lret
pushf
push
insb
js
cli
sahf
xchg
add
mov
stos
cmp
mov
es
add
xor
out
lock
cmp
sbb
sbb
lock
mov
mov
mov
sbb
dec
addb
call
mov
xor
loop
mov
je
xchg
std
or
loopne
mov
mov
push
or
sbb
inc
adc
pop
add
icebp
pop
addr16
cld
dec
addb
sbb
jb
mov
mov
add
cmc
jecxz
rolb
mov
insl
cmp
ljmp
out
add
sbb
ret
adc
mov
mov
cmc
inc
xchg
mov
add
movsl
mov
in
add
xchg
flds
push
mov
pushf
mov
mov
sbb
test
fdivrp
jbe
lahf
bound
mov
ret
adc
mov
or
imul
and
std
mov
pop
push
outsl
fs
les
mov
std
outsb
cmp
mov
gs
in
fs
mov
dec
xor
jg
xchg
loop
mov
hlt
pop
lds
arpl
xlat
xchg
divb
dec
fistpll
mov
scas
mov
mov
add
sub
push
lock
dec
jg
cli
jle
add
mov
add
push
add
mov
out
cmp
push
ficoml
mov
add
mov
jb
mov
addr16
and
stos
imul
jno
push
and
or
xchg
xchg
cli
movsw
pop
dec
xchg
mov
add
mov
rolb
mov
push
test
fwait
movsl
fadds
stos
ret
xchg
adc
arpl
aas
jno
add
mov
mov
add
dec
loop
mov
xor
cmp
dec
add
outsb
lods
xlat
repnz
push
sub
addb
inc
lods
or
add
xchg
add
add
in
xchg
jno
xor
lds
cmp
mov
or
adc
add
jo
mov
mov
mov
adc
mov
mov
push
leave
pop
xchg
stc
mov
dec
pop
sub
pop
add
mov
mov
pop
rorl
adc
mov
loopne
mov
outsl
pop
aas
and
add
aas
fdivrs
outsl
aas
mov
add
test
xlat
ljmp
xlat
clc
jmp
push
cmp
jecxz
leave
fs
aam
xchg
add
cld
xchg
add
fs
push
pop
pop
adc
mov
lret
cli
lret
mov
jmp
or
mov
mov
cmp
push
jne
jmp
pop
cli
out
aam
scas
cwtl
adc
mov
or
cmp
mov
daa
xor
mov
push
sub
mov
xchg
add
aas
mov
daa
mov
iret
add
mov
xchg
dec
rolb
mov
sub
pop
ds
or
faddp
pusha
add
push
out
sti
imul
mov
div
mov
fs
pop
cmc
addr16
das
repnz
add
pop
xor
ret
dec
push
add
iret
dec
push
add
in
ja
push
sahf
push
rcll
testb
mov
fistps
cs
cmpsl
outsl
shll
mov
out
out
xchg
add
add
aad
add
push
out
lock
sub
mov
fidivrs
add
dec
push
ss
in
cmp
enter
stos
je
daa
sbb
aaa
or
aad
dec
dec
mul
and
add
fwait
cmpl
test
jecxz
sbb
or
in
mov
pop
dec
sbb
add
dec
test
fdivr
pushfw
add
and
orl
inc
jmp
mov
sbb
xchg
leave
sub
push
shll
jg
cs
add
cmp
jnp
inc
pop
jns
jmp
adc
mov
and
mov
xor
add
mov
stos
loop
mov
mov
xor
mov
in
std
mov
stc
ret
push
sbb
cmpsl
jp
lds
std
js
adc
repnz
mov
fdivr
cld
inc
adc
dec
mov
nop
add
dec
jecxz
call
add
push
imul
sti
lods
je
mov
mov
je
repz
inc
lret
mov
add
mov
sbb
shll
xchg
add
sbb
mov
addb
mov
mov
ss
xor
add
and
lret
stc
les
xabort
test
or
or
cwtl
mull
insl
mov
scas
leave
or
fnstsw
add
pop
addr16
int
add
mov
cmp
out
or
push
dec
sbb
pop
mov
mov
cli
cmp
add
pop
or
jo
mov
mov
mov
and
mov
dec
cltd
sbb
fcomps
imull
repz
adc
dec
adc
xchg
ss
sahf
add
add
mov
add
jnp
ss
imul
dec
jg
pop
adc
inc
repz
add
pop
xor
inc
add
add
dec
icebp
push
jecxz
sub
es
mov
push
leave
cmpsl
push
add
mov
addl
cwtl
in
cmp
add
push
pop
rolb
mov
xor
sub
les
sbb
and
repz
fwait
ljmp
scas
and
sub
cwtl
jns
sbb
shll
je
dec
ljmp
arpl
add
popf
out
idivl
add
stc
stc
loopne
mov
sbb
pop
dec
fneni(8087
add
sub
add
mov
push
daa
mov
jne
fdivrp
addb
pop
aas
enter
je
add
fidivs
gs
iret
pop
pop
dec
add
xchg
dec
mov
mov
jae
arpl
cltd
into
test
rolb
mov
mov
cmp
add
xor
mov
out
ja
add
pop
mov
dec
loope
popa
push
sbb
add
mov
and
mov
mov
push
mov
sub
inc
push
cmpsb
rolb
mov
jmp
jne
or
add
and
mov
enter
add
ss
int
add
stos
xchg
ror
roll
rolb
mov
out
add
das
xor
mov
loop
mov
add
mov
xchg
add
loope
xor
push
out
sbb
bound
mov
rolb
mov
push
sbb
adc
mov
mov
add
mov
addb
xchg
daa
sbb
mov
ljmp
pop
nop
add
test
pop
sub
inc
cmp
mov
add
mov
test
sbb
dec
fmull
in
push
dec
loope
fcomps
mov
add
mov
inc
push
cmp
loop
mov
add
mov
or
add
das
sbb
mov
rcrl
cld
pop
outsl
jbe
cmp
mov
movsb
pusha
add
adc
and
mov
add
fistps
mov
fiadds
mov
clc
imul
in
mul
pop
into
out
fisttps
push
and
jle
or
cmp
add
mov
adcl
pop
pop
mov
push
jne
xchg
and
rolb
pop
test
adc
mov
and
clc
mov
add
mov
mov
popa
add
xchg
xlat
test
sarl
sbb
popa
xor
mov
jecxz
sbb
pop
aaa
outsl
push
mov
jecxz
sub
sti
adc
cmp
movsb
or
scas
loope
dec
repz
adc
mov
aam
inc
pushf
xor
sub
nop
add
mov
push
inc
cwtl
js
loop
mov
dec
jp
stos
loopne
mov
sbb
add
pminub
enter
mov
sbb
add
jns
into
popa
out
sbb
insb
dec
es
pop
sub
add
mov
adc
add
lret
outsl
xor
int
scas
dec
inc
cld
mov
fldl
jo
mov
sti
lods
popf
sbb
mov
adc
mov
pop
setp
mov
xchg
mov
add
add
mov
xor
jecxz
mov
fdivrs
sub
imul
js
fwait
adc
inc
add
mov
mov
mov
add
jns
add
mov
mov
and
mov
add
push
jo
mov
pop
pop
cmpsb
addb
test
jae
out
lods
mov
jbe
add
scas
imul
add
push
add
add
cmc
add
das
jnp
cmp
add
xor
mov
push
add
pushf
cmpsl
ja
addb
add
fcmove
xchg
mov
add
mov
add
pop
outsb
pop
mov
push
mov
popa
ss
add
stos
lret
aas
scas
shll
rolb
mov
mov
and
or
xchg
add
vphsubdq
cmp
dec
pop
pusha
add
jmp
mov
cld
push
pop
fwait
cwtl
xchg
negl
and
add
test
add
mov
adc
mov
xor
dec
cmc
mov
mov
add
pusha
add
sahf
mov
mov
xchg
mov
mov
gs
notb
pop
mov
loopne
mov
lods
pop
lret
rolb
mov
lahf
pusha
add
dec
jge
mov
mov
enter
jne
enter
je
add
loopne
mov
mov
xchg
in
or
inc
loop
mov
add
repz
add
pop
addb
iret
adc
mov
add
mov
add
mov
pop
pop
or
add
push
jnp
mov
mov
adc
mov
mov
and
mov
idiv
ss
inc
leave
je
add
dec
xor
push
call
loopne
mov
aaa
pop
gs
rcrl
push
add
je
leave
bound
mov
ljmp
sub
mov
lds
nop
add
rolb
hlt
add
xor
push
pop
rolb
mov
scas
mov
addb
test
and
clc
pusha
add
add
push
inc
sbb
or
sahf
test
lret
rolb
mov
addb
es
in
inc
mov
cld
push
stos
test
mov
push
imul
repz
daa
adc
push
fcoml
xor
mov
and
test
lea
fidivs
jae
rolb
mov
dec
sub
fidivrs
push
add
notb
mov
xor
lds
sahf
enter
arpl
pop
sub
sub
mov
stc
and
pop
cmp
add
add
fistpl
sbb
add
add
mov
push
sbb
in
frstor
popa
ret
iret
and
xor
call
jno
adc
mov
fildl
ror
ret
dec
or
add
out
nop
add
fdivrs
inc
jmp
push
int3
xor
out
add
sbb
dec
push
out
push
cs
sbb
jle
lret
cmp
mov
cli
jb
mov
mov
mov
pusha
add
add
insb
xor
int3
dec
cmp
dec
jge
popf
or
jb
mov
add
mov
jl
roll
mov
inc
inc
add
add
add
push
outsl
popa
stos
out
mov
mov
push
add
ret
scas
scas
mov
mov
ja
arpl
mov
xor
out
xchg
mov
add
rcll
js
fsubl
mov
mov
add
clc
add
mov
add
cmp
mov
mov
rolb
adc
rolb
mov
xlat
cmpsl
lret
in
fisubl
mov
loop
mov
sub
jg
mov
mov
xchg
jg
test
and
push
leave
repnz
addb
lods
xchg
sub
nop
add
add
loop
mov
lea
dec
dec
arpl
dec
xor
mov
insl
lret
xor
mov
mov
dec
inc
pop
sbb
clc
dec
lods
sub
add
xchg
add
and
mov
add
add
lret
add
pop
lods
jbe
in
cmp
leave
xlat
pop
inc
add
or
pushf
inc
loopne
mov
inc
inc
cmc
fsts
push
sub
test
sbb
sbb
lds
jnp
add
cmp
add
add
mov
mov
mov
mov
pop
fwait
stos
or
lret
stos
xorl
mov
mov
xchg
insl
scas
inc
xchg
add
and
mov
cli
sub
in
repz
sub
ss
sub
and
add
or
cmp
mov
mov
add
xlat
push
aad
ret
adc
cld
lds
add
add
adc
mov
mov
jae
vmread
jl
push
and
mov
add
jno
addb
lock
fnstenv
mov
or
mov
sbb
iret
cwtl
loope
pop
daa
lods
movsl
loop
mov
xlat
cld
or
inc
add
xchg
jl
push
inc
sahf
jg
add
in
pop
in
rol
lock
mov
insb
pop
push
add
add
adcl
mov
add
outsl
cli
and
mov
pop
fidivl
addb
mov
cmp
xchg
test
add
in
loop
mov
sbb
imulb
cmpsl
dec
dec
out
loope
call
mov
jmp
fadd
add
push
outsl
sub
and
add
repnz
mov
add
popf
aam
icebp
cwtl
fmull
ja
xchg
add
adc
xchg
fsubl
addb
or
push
mov
jmp
lret
add
adc
and
mov
jmp
jne
add
in
shll
insb
dec
mull
cmp
sbb
sub
jmp
test
add
mov
js
mov
inc
es
add
pop
data16
pop
push
xor
add
lods
cltd
mov
clc
dec
mov
sub
xchg
fstpl
aam
mov
rolb
sbb
mov
inc
call
imul
cmp
orl
daa
xlat
fisttpll
cmp
xchg
mov
mov
cmp
add
jne
add
stos
repnz
lds
jmp
xor
mov
dec
or
xlat
and
fcoms
and
mov
mov
lods
and
mov
inc
add
scas
test
mov
popf
aas
pusha
add
les
neg
stc
leave
pop
lcall
addb
sti
push
insb
jp
add
inc
cmp
stc
push
rolb
mov
addb
mov
add
popa
or
add
imulb
lcall
mov
xlat
mov
mov
push
frstor
cmp
pop
in
aad
and
mov
pop
fcompl
sbb
pop
inc
cli
or
sbb
jecxz
pop
lret
jge
add
mov
sub
mov
add
fwait
adc
mov
mov
lock
addb
idivb
inc
add
mov
xor
add
int
fisttpl
mov
enter
dec
or
leave
fidivs
rolb
mov
shrl
inc
fiadds
fisubrl
outsl
pop
cld
cltd
stos
out
mov
ljmp
imul
scas
fwait
sbb
dec
stos
jecxz
mov
mov
add
je
push
add
jae
std
xor
add
mov
add
mov
outsb
cmp
add
mov
aaa
addr16
addl
iret
sub
out
test
cli
pop
faddl
jne
add
in
aam
add
sub
or
mov
add
adc
out
jecxz
nop
add
add
push
scas
cmpsl
push
mov
lret
pop
dec
xchg
ds
cmp
jae
mov
loopne
mov
cld
jns
callw
xor
mov
cmp
add
mov
mov
xchg
in
imulb
outsl
mov
ljmp
dec
es
pop
mov
add
xchg
pop
xchg
add
pop
inc
add
dec
or
mov
ljmp
int
cmp
or
out
mov
or
xor
out
push
add
loopne
mov
or
sbb
add
jecxz
in
repz
or
mov
mov
add
mov
jp
std
arpl
pop
inc
add
or
push
jnp
add
aas
cmp
adc
mov
repz
mov
add
fcompl
xchg
fsubrl
fwait
sub
pop
repnz
pop
test
add
int
mov
mov
mov
mov
and
push
or
dec
aaa
stos
ficoms
sub
jle
xor
jle
jae
or
cmpsl
inc
add
or
sti
bound
mov
call
fdivr
adc
add
mov
pop
es
push
lcall
pop
sahf
sub
sub
pop
inc
insl
addb
fchs
add
add
lea
jg
add
mov
inc
or
lret
xor
mov
mov
lcall
push
add
imul
adc
jo
mov
mov
cmc
dec
or
pop
idivb
jae
jp
mov
add
mov
ljmp
jmp
inc
add
lret
add
mov
insl
repz
add
dec
testl
fdivl
mov
sti
xor
mov
jmp
add
and
stos
mov
sub
inc
or
mov
in
repz
mov
or
mov
cmp
test
mov
add
sbb
test
outsb
rolb
mov
xchg
aad
mov
lahf
push
fs
es
mov
mov
and
pop
fnstenv
push
inc
add
mov
cmp
xchg
addr16
jmp
mov
sahf
loope
adc
lods
addr16
or
jo
mov
mov
adc
ds
inc
jle
adc
data16
mov
mov
sbb
rolb
mov
add
add
aad
cmp
out
cmp
xlat
jne
mull
add
mov
fistpl
sub
push
ficoms
add
add
inc
mov
int3
das
mov
movb
scas
rcl
in
pop
mov
loop
mov
add
mov
fidivl
add
vpaddsb
xlat
rolb
mov
add
mov
pusha
add
inc
test
pop
lock
add
mov
inc
cli
adc
mov
in
jns
cwtl
cli
int
cs
xor
mov
cmp
add
flds
add
icebp
inc
add
push
sbb
pop
mov
mov
sub
adc
push
dec
loopne
mov
and
cmp
outsb
test
daa
movb
negb
xor
rolb
mov
cli
iret
pushf
jns
adc
mov
xor
add
add
and
mov
and
es
sbb
mov
mov
xor
mov
cmp
mov
dec
scas
stos
dec
jge
sub
add
in
ljmp
xor
mov
add
leave
pop
in
sahf
bound
mov
sub
sub
sbb
dec
mov
cmp
orl
mov
dec
adc
or
popf
sbb
cs
jl
dec
pminub
ret
jg
inc
neg
xchg
add
outsb
mov
mov
pusha
add
in
mov
aaa
clc
and
mov
xchg
add
dec
sub
bound
mov
mov
aaa
dec
fbld
addb
and
add
cmp
mov
mov
add
mov
mov
fldl
push
add
and
mov
jp
loop
mov
add
push
inc
xor
out
fadds
add
clc
xor
mov
mov
mov
xor
add
rcrl
push
xchg
mov
leave
pop
ljmp
xor
mov
add
shrl
jle
add
sub
pop
cmp
dec
outsl
test
into
jne
in
leave
cs
pusha
add
xor
aad
add
daa
leave
leave
rolb
mov
add
xchg
pushf
fucomp
icebp
sbb
jmp
pusha
add
mov
mov
mov
xchg
mov
add
mov
dec
int
add
and
mov
lcall
hlt
push
out
or
fidivs
sub
call
es
jmp
ds
daa
mov
add
popa
cmpsb
mov
cld
fcoml
out
add
mov
xor
mov
aad
mov
mov
push
imul
adc
mov
adc
add
jle
xchg
in
sbb
jne
add
add
repz
mov
clc
pop
inc
in
and
mov
cmp
mov
loopne
mov
test
mov
mov
nop
add
mov
add
std
or
movsl
rolb
mov
mov
pop
insl
push
pop
xor
mov
daa
bound
mov
addb
loopne
mov
lahf
testb
pop
movsb
inc
nop
add
jbe
mov
add
add
bound
mov
dec
xchg
hlt
aam
add
insb
mov
mov
rolb
mov
pop
std
jb
mov
bound
mov
pop
nop
add
xchg
dec
pop
fcomps
outsl
lcall
fistpll
sbb
xchg
add
stos
popa
ljmp
or
mov
aad
clc
insl
aad
add
sub
cmpl
enter
push
jo
mov
xor
mov
pop
repnz
test
mov
dec
adcl
add
push
xor
mov
mov
mov
sub
fimuls
add
int3
pop
cmpsb
or
cmpsb
fwait
cmp
lahf
outsl
jns
sbb
lods
call
sub
add
int3
jno
add
push
pushl
in
addb
ret
mov
mov
jmp
jae
cmpsl
push
aam
clc
xor
test
arpl
fyl2x
inc
mov
mov
xchg
xchg
lcall
test
mov
add
insb
inc
jmp
mov
xchg
rolb
mov
mov
push
jns
bound
mov
push
jne
xchg
xor
push
push
pushf
mov
stos
movsb
das
int3
mov
js
or
jo
mov
mov
mov
add
mov
adc
jle
cs
mov
and
adc
lods
loope
jmp
push
xor
cmp
les
stos
xor
movsb
add
add
mov
incl
fwait
push
or
ret
in
push
cmc
jle
add
pop
stos
out
jae
cli
mov
mov
in
xchg
ja
mov
mov
mov
and
sub
cltd
int3
jb
mov
xorl
fs
fwait
ss
and
xchg
add
mov
addb
dec
and
into
mov
add
and
dec
adc
cli
nop
add
inc
add
imulb
aad
lcall
ffreep
test
pop
fimull
or
mov
in
imul
or
mov
fistps
clc
addb
mov
jbe
insl
negl
xor
push
test
pop
leave
movsb
lret
sbb
adc
mov
sbb
dec
cmp
add
mov
mov
ds
stos
mov
dec
or
add
xchg
cmpsb
dec
mov
mov
dec
fildl
mov
add
jp
add
imul
es
jecxz
add
cmp
aaa
shl
xchg
int3
ds
add
xchg
cli
mov
movsl
xor
cmpsl
stc
aaa
test
cmp
sbb
jmp
dec
movsb
int
add
jmp
stos
push
cmc
cmc
add
mov
mov
ret
lea
loopne
mov
push
or
inc
pushf
push
cld
fcoms
cmc
sub
xor
mov
mov
sub
jo
mov
jne
add
or
mov
mov
sub
add
mov
sub
add
lods
and
sbb
jbe
xchg
lds
addb
testl
inc
xor
add
mov
sub
push
out
mov
mov
or
pop
and
xchg
lods
push
ljmp
addb
sub
mov
mov
add
outsb
dec
sbb
hlt
popf
push
add
fs
in
add
frndint
dec
repz
ja
dec
stc
jnp
dec
cmp
push
inc
cltd
les
mov
xchg
in
add
and
add
mov
clc
pop
xor
mov
pop
addl
fs
rolb
mov
mov
mov
cmp
mov
int
add
jae
movsl
enter
lods
arpl
jns
cltd
das
addb
test
mov
pop
mov
cmpsb
xor
jo
mov
aaa
addb
sub
leave
xchg
es
gs
jne
adc
mov
adc
mov
add
adc
and
rolb
mov
stc
pop
sub
mov
add
mov
cmp
jns
popa
lds
cmpsb
outsl
cmpsl
aaa
push
add
mov
addb
push
add
icebp
leave
or
or
fnstsw
or
ja
in
inc
xchg
stos
fs
and
scas
test
mov
mov
and
add
popa
fsts
rcll
pop
dec
ss
mov
mov
lods
cld
out
and
mov
mov
popa
rolb
addr16
ljmp
mov
out
lret
lods
dec
cwtl
mov
int3
fldl
ds
adc
add
mov
mov
in
and
notb
rolb
mov
and
mov
mov
add
in
stc
cmp
bound
mov
into
adc
insb
cltd
mov
in
and
mov
pop
add
mov
mov
jne
lret
fistps
or
mov
mov
fistps
jp
mov
fs
cmp
jp
js
lock
rolb
mov
add
jecxz
xchg
cltd
sub
xchg
cwtl
int3
and
mov
mov
add
inc
dec
mov
sub
add
jae
add
mov
fldt
imul
cmp
mov
cmpsb
inc
add
jge
push
adc
or
add
cmp
add
addr16
dec
call
xor
mov
mov
mov
mov
push
add
mov
les
sbb
mov
mov
mov
xlat
arpl
sub
lods
mov
lock
add
hlt
popa
xchg
outsb
cld
pop
cwtl
outsl
fstpl
dec
cwtl
mov
add
add
add
jno
ror
inc
cmc
dec
cmp
add
jecxz
packssdw
add
mov
std
test
out
mov
jo
mov
jle
mov
fldcw
rolb
mov
mov
add
aad
push
ljmp
outsl
inc
dec
push
lds
add
std
je
addb
sub
nop
add
sbb
push
jns
sti
pop
sub
cli
fs
ret
std
mov
pop
mov
mov
add
mov
int3
mov
xchg
mov
aam
add
xor
mov
add
mov
mov
and
adc
xor
jge
xchg
filds
inc
xchg
xor
mov
jl
add
xchg
mov
push
sbb
sub
pop
movsl
pop
push
scas
push
sub
mov
imul
fisttpl
add
push
add
dec
mov
ja
pop
add
pushf
xor
mov
pop
xor
stos
fs
mov
push
sub
xor
mov
lret
fisttps
jmp
icebp
std
in
xor
mov
mov
jmp
and
rolb
mov
ror
fstpt
addb
and
sub
ret
ss
mov
cmp
or
shll
mov
lret
les
and
fists
and
clc
fdivrp
daa
enter
call
inc
sbb
add
test
and
sub
push
imul
add
or
jp
jnp
xchg
outsb
stc
dec
test
adc
add
ss
scas
and
test
lret
mov
pop
push
jae
out
cmp
mov
mov
pop
cwtl
add
out
push
add
insl
pop
fildl
mov
jp
add
push
add
cltd
lahf
loope
aad
jecxz
or
cmpsb
addb
mov
xor
mov
push
movsl
pop
leave
push
or
and
stos
int3
arpl
outsb
or
cmp
stos
cltd
shll
imul
xchg
lret
sub
push
dec
xchg
dec
enter
mov
push
add
push
push
mov
pop
jecxz
push
rolb
mov
xchg
je
lds
inc
add
lea
cld
and
movb
add
fidivl
xlat
rolb
in
mov
mov
aam
or
mov
push
mov
add
mov
add
mov
add
out
jle
inc
add
stos
mov
inc
add
loopne
mov
mov
push
pop
pop
das
gs
add
push
cwtl
pop
xchg
sub
or
adcl
cmp
inc
add
lock
add
mov
test
mov
mov
push
loopne
mov
add
mov
jmp
xor
add
mov
add
xlat
push
add
dec
push
pop
add
mov
xchg
mov
mov
mov
dec
imul
mov
mov
add
pop
test
popa
leave
xor
add
xor
cs
hlt
or
imul
push
dec
and
pop
icebp
les
mov
xor
movsl
sti
into
test
imul
mov
mov
cwtl
dec
jns,pt
and
mov
cmp
ret
enter
scas
int3
add
ret
mov
mov
mov
cmpsl
sub
cmp
jbe
int
lods
jge
inc
push
jno
or
add
or
lcall
add
mov
lds
push
lods
push
adc
inc
inc
pop
push
inc
dec
andl
sub
add
mov
mov
popl
ret
fistps
sub
ljmp
mov
mov
add
sbb
fsubrp
sbb
dec
in
mov
hlt
xchg
add
sub
out
lret
mov
test
lret
leave
decb
add
pop
loope
mov
dec
and
fldln2
xchg
outsl
loope
push
js
xor
test
pop
xchg
push
mov
jne
add
dec
outsb
jge
loope
or
mov
push
add
mov
mov
sub
and
add
sbb
pop
sub
push
add
sbb
sbb
mov
add
mov
call
adc
add
add
mov
xchg
mov
add
or
jb
mov
repnz
scas
into
cli
rolb
mov
inc
sub
stc
adc
mov
push
add
jnp
xor
mov
addb
mov
mov
inc
add
xchg
ficomps
addb
cmc
xor
add
or
imul
pop
int
popa
movb
icebp
xor
mov
fistpl
add
fnstsw
nop
add
and
scas
adc
mov
fs
dec
movsl
std
test
xchg
jl
lods
xchg
jnp
imul
or
lcall
imul
mov
add
popa
shl
jb
mov
inc
add
pop
iret
sbb
out
adc
loope
mov
cld
ja
mov
xchg
mov
in
or
les
mov
mov
add
lds
and
mov
add
mov
adc
mov
addb
aad
aaa
jl
in
cmp
pop
fcoml
cvtpi2ps
add
mov
jb
mov
adc
add
add
add
xchg
fidivs
mov
mov
inc
and
jb
mov
mov
pop
bound
mov
cmc
lcall
movsl
fwait
outsl
mov
mov
addb
dec
cmpsl
in
pushf
stos
cvtps2pi
mov
aas
outsl
outsb
repnz
daa
andl
mov
jns
icebp
rolb
mov
in
addl
cld
inc
or
enter
mov
xor
mov
ljmp
mov
mov
xor
mov
ds
out
add
add
add
scas
adcl
addr16
cmp
mov
pop
inc
pop
mov
add
fsubrl
fldl
rolb
popf
inc
xchg
xchg
bound
mov
sbb
add
out
es
add
mov
dec
jmp
aaa
scas
mov
stc
and
je
sub
clc
loope
sbb
dec
xchg
jl
add
cmp
xchg
cs
sbb
push
dec
stc
or
mov
jae
outsl
lods
cld
push
sbb
push
push
ror
inc
ds
push
fs
lods
inc
pop
cmpl
pavgb
mov
sti
pop
xor
nop
add
lea
js
mov
add
loope
and
add
fidivs
daa
fstps
mov
or
test
stos
mov
and
mov
lret
push
push
dec
mov
pusha
add
mov
stos
push
test
add
inc
pop
div
sub
mov
fisttpl
mov
xchg
fiaddl
stc
lret
push
push
mov
test
mov
xchg
add
test
add
add
cmpsb
push
xchg
jbe
add
push
mov
insb
jle
xor
mov
mov
pop
xorl
cmpsl
mov
add
mov
lods
mov
cmp
mov
inc
mov
push
ficompl
repnz
push
rcl
fildll
das
idivl
add
mov
jbe
clc
pop
lret
xchg
in
adc
mov
mov
mov
cmp
mov
int
add
mov
fsubs
dec
test
sarl
test
jge
cmc
shrl
fs
add
out
xor
mov
push
addb
inc
int3
dec
jge
mov
nop
add
mov
call
add
add
add
mov
ljmp
add
mov
xchg
mov
int
adc
loop
mov
xchg
jp
insl
jmp
cmc
mov
xor
mov
rolb
mov
cmovge
imul
mov
jae
sarl
aas
insl
aaa
test
sbb
add
test
add
jb
mov
add
mov
xchg
add
push
ja
icebp
stos
sbb
outsb
inc
add
fdiv
inc
add
mov
add
add
add
add
push
or
addb
jecxz
pop
xchg
mov
push
add
mov
jp
add
and
mov
sahf
das
jb
mov
lods
pop
mov
mov
sahf
stos
push
xor
mov
lock
ret
cmp
add
pop
mov
push
add
sub
push
lret
xchg
pop
sbb
test
mov
add
push
mov
mov
lret
jge
add
add
mov
test
add
leave
xchg
sbb
and
or
popf
or
jb
mov
test
mov
outsb
xor
mov
dec
xchg
fcmovnu
sbb
or
mov
mov
loope
cmp
popa
jge
add
ljmp
add
push
or
add
add
cli
rcll
push
xor
mov
mov
addr16
mov
jnp
pop
or
mov
and
sbb
insl
push
pop
ret
and
bound
mov
push
nop
add
inc
out
xlat
push
push
push
inc
jmp
repnz
iret
jmp
int
pop
pop
xchg
cwtl
push
adc
xor
add
xchg
fs
mov
add
mov
add
jmp
push
jecxz
dec
dec
ljmp
inc
cmp
std
sbb
sbbl
loop
mov
add
mov
pop
mov
lock
mov
add
in
cmp
out
insb
adc
mov
out
push
add
jne
add
sarl
imul
lret
mov
sbb
mov
or
inc
adcl
adc
scas
mov
add
mov
fildll
je
pop
sar
jns
repnz
push
push
push
jo
mov
hlt
rolb
push
mov
out
stc
stc
mov
mov
addr16
ss
iret
xchg
test
or
mov
push
add
mov
push
fwait
fs
or
sbb
out
and
cs
adc
mov
mov
daa
mov
out
or
pop
test
push
dec
ret
ljmp
mov
pop
fwait
imul
lea
inc
xchg
mov
or
cmp
add
les
mov
insb
dec
push
jle
daa
push
add
cmp
xor
mov
call
fsubs
sbb
mov
push
out
aad
shll
lahf
xor
add
mov
lret
stos
nop
add
pop
mov
incb
test
cmp
add
cmp
add
mov
rorl
add
stos
xchg
inc
jo
mov
sbb
imul
inc
mov
pop
cld
movsb
mov
dec
movsl
dec
jecxz
aas
ss
sbb
loop
mov
add
add
mov
mov
add
add
or
jne
mov
test
mov
sub
inc
push
lds
add
jmp
repnz
xchg
aad
fs
repz
and
xor
mov
sahf
pop
daa
mov
aas
add
mov
imul
lret
push
and
xor
mov
mov
mov
push
hlt
jp
pop
test
in
add
stos
mov
and
mov
cmp
xchg
mov
dec
dec
int
inc
add
or
mov
add
add
xchg
dec
jnp
out
sub
sbb
add
add
lods
jne
adcl
xor
add
mov
add
mov
mov
mov
mov
dec
clc
cmp
sub
aaa
fimuls
lods
fnsave
aas
loope
and
addr16
or
push
mov
mov
add
xchg
mov
add
sub
mov
stos
push
addb
int3
dec
adc
mov
xchg
jo
mov
cmpsb
jae
add
add
popf
mov
mov
add
jle
inc
adc
adc
xor
mov
arpl
fldcw
mov
jbe
push
add
clc
loop
mov
jp
mov
add
ja
pop
push
out
mov
mov
add
fs
insb
push
repz
adc
mov
xchg
pop
push
ss
add
mov
mov
add
mov
popa
or
lds
arpl
mov
jl
xchg
out
mov
xor
mov
jo
mov
das
bound
mov
test
add
ret
int3
testb
in
xor
jge
inc
lahf
rolb
mov
xor
mov
ljmp
xor
fs
pushl
or
mov
and
mov
add
inc
rolb
mov
das
mov
inc
aaa
inc
add
pushl
cmp
movsb
xor
add
lods
and
mov
mov
and
add
adc
add
mov
cmp
or
mov
ljmp
jns
lods
pop
cmp
mov
addr16
insb
jno
push
dec
push
test
xor
insl
fidivrs
pop
rolb
mov
mov
mov
add
cmp
add
addr16
add
mov
cmpsb
leave
popa
pop
cli
push
pop
outsl
push
adc
mov
out
bound
mov
scas
icebp
repnz
stos
or
or
mov
pop
insb
mov
jge
clc
inc
bound
mov
add
push
mov
sbb
adc
xchg
stos
xor
add
push
sub
jge
cwtl
lcall
jle
arpl
mov
xor
mov
out
stc
inc
xchg
cwtl
insl
hlt
jno
hlt
jbe
aaa
aaa
xorl
mov
add
xor
mov
mov
in
enter
daa
imulb
rolb
mov
in
mov
in
test
adc
pop
mov
int3
fs
mov
xchg
ja
icebp
push
xchg
add
aad
sub
cmp
inc
ljmp
mov
repz
mov
popa
pop
xchg
and
cld
int3
push
dec
push
add
fldenv
and
aas
jmp
mov
add
mov
add
lods
jne
outsb
mov
add
add
rolb
mov
subl
jno
out
add
xlat
insl
sbb
add
stos
or
rolb
mov
fstl
test
ja
mov
dec
out
push
popa
mov
lock
stos
cmc
mov
cs
fs
rolb
mov
pop
rolb
mov
lods
pop
push
or
stc
jno
xchg
inc
add
inc
call
leave
lock
mov
loopne
mov
lret
fistl
xchg
sbb
out
mov
mov
mov
xor
rol
mov
jle
add
mov
add
jae
jne
dec
repnz
add
add
jecxz
pop
push
es
push
and
mov
or
sub
mov
movsl
rcrl
sub
mov
mov
imul
mov
pop
mov
pop
xchg
cltd
into
sub
hlt
fsts
sbb
mov
mov
or
adc
push
idivl
dec
jmp
in
sbb
or
scas
adcl
or
add
xchg
popa
loope
add
add
pop
and
mov
add
add
mov
push
add
or
and
cwtl
inc
outsb
xor
push
add
andl
sbb
mov
dec
rolb
jp
and
enter
enter
jp
rolb
ljmp
jno
cmp
mov
out
jmp
add
cltd
pop
cmp
or
rolb
mov
and
cli
jne
inc
mov
xchg
push
add
add
lcall
mov
xor
push
add
cmp
xchg
pop
in
mov
rolb
mov
aas
ss
sbb
adc
xchg
lcall
mov
mov
add
mov
inc
andl
insb
imul
mov
add
movsl
dec
sbb
cs
inc
add
mov
and
mov
push
add
add
outsb
pop
fs
mov
inc
mov
add
push
cli
dec
loopne
mov
call
add
inc
add
sub
cli
cld
int3
decb
mov
mov
cmc
mov
sub
add
add
add
mov
push
inc
loop
mov
fstl
xchg
and
bound
mov
add
scas
and
mov
faddl
push
or
add
cmp
or
insl
idivl
gs
adc
icebp
xchg
in
sub
push
xchg
out
sbb
fs
add
nop
add
dec
lret
addb
hlt
sbb
popf
xor
cmp
les
add
mov
jno
in
mov
adc
add
aas
idivl
mov
loopne
mov
adc
pop
jb
mov
add
std
cld
popa
pop
dec
cmp
xchg
inc
jg
add
jg
popa
push
add
or
gs
add
mov
jmp
je
cmp
sbbl
mov
push
add
mov
xchg
jl
add
pop
and
mov
xchg
jmp
add
dec
movsb
negl
scas
inc
or
add
mov
jp
loop
mov
das
inc
mov
repz
inc
add
push
push
add
mov
cwtl
add
mov
ss
jmp
and
sbb
movb
mov
add
mov
add
add
test
inc
jmp
enter
into
lods
jno
add
add
add
es
in
sti
push
push
mov
stos
inc
xchg
aad
jne
sbb
add
iret
out
outsb
clc
mov
and
mov
mov
cwtl
insb
adc
add
pushf
and
mov
pop
lock
jne
insl
inc
lods
push
push
int
inc
adc
sbb
add
das
mov
cltd
cmpsb
mov
lahf
xor
sub
inc
add
movsl
aas
es
add
jno
add
pop
push
add
fidivrl
add
mov
push
in
es
or
mov
xchg
jae
mov
inc
arpl
mov
jnp
pushf
xchg
mov
xchg
cmp
sbb
add
cli
lods
adc
mov
mov
add
xchg
mov
mov
and
and
add
push
jns
adc
mov
mov
mov
add
rolb
mov
dec
jge
rolb
mov
dec
imull
test
mov
xchg
add
xor
movsl
mov
xchg
sti
cmpsb
xorl
or
mov
mov
aad
sahf
rcrl
cli
fdivl
in
add
mov
xor
mov
add
and
xchg
ret
mov
mov
xor
mov
rolb
mov
stos
xor
mov
loopne
mov
or
mov
pop
push
add
add
add
add
lret
and
mov
dec
mov
mov
add
mov
scas
rolb
and
mov
adc
mov
xor
lea
push
xchg
call
mov
and
add
arpl
dec
or
sub
adc
mov
mov
test
add
aad
call
mov
repnz
sub
push
cld
loop
mov
insl
adc
pop
xor
mov
add
or
add
mov
or
pop
int
testb
lods
mov
add
pop
adcl
adc
mov
ljmp
mov
repz
mov
int3
push
inc
adc
lods
and
sbb
lret
out
mov
or
cmp
inc
mov
mov
xchg
int
xchg
sti
adc
add
mov
enter
cmp
cmp
xor
xchg
in
add
mov
bound
mov
ret
lds
js
add
mov
cli
mov
mov
add
add
gs
ret
icebp
jne
jo
mov
add
clc
sbb
pop
cmp
rep
lock
add
push
push
cld
dec
mov
inc
ds
push
test
insl
pop
lods
loopne
mov
mov
insb
scas
pop
into
jb
mov
add
gs
out
jp
das
and
cmc
jl
pusha
add
dec
rolb
xor
mov
lds
mov
push
add
mov
push
or
sub
mov
mov
je
add
cmp
iret
daa
adc
mov
enter
hlt
and
mov
add
rorl
add
ret
mov
mov
xor
enter
lret
xchg
add
into
cmp
add
mov
add
mov
mov
into
mov
mov
jb
mov
scas
xlat
dec
pavgw
add
idiv
idivl
push
push
push
les
inc
inc
dec
movsl
cmpsb
jo
mov
scas
fadd
sahf
sti
cli
lock
cs
mov
jae
jmp
mov
loop
mov
pop
sti
cmpsl
rolb
mov
inc
fbld
mov
scas
jmp
movsb
dec
jl
cmc
inc
fisubrs
insl
out
mov
push
add
bound
mov
add
adc
mov
add
add
aaa
arpl
push
add
push
sbb
mov
scas
pop
dec
mov
adc
mov
in
xchg
aaa
nop
add
push
bound
mov
mov
daa
jmp
add
outsb
subl
xor
add
jge
fdivl
outsb
fisubs
pop
daa
std
subl
pop
xchg
add
nop
add
add
lds
add
out
add
add
mov
lds
leave
outsb
jg
add
mov
lods
dec
test
out
roll
add
jo
mov
sti
jnp
add
adc
ja
inc
add
repnz
dec
aaa
dec
call
mov
out
insb
push
jne
jge
stc
jge
xor
mov
addr16
addr16
stc
subl
pop
sub
adc
push
nop
add
sub
ret
jle
pop
and
pop
inc
pop
fmul
ds
ret
sti
movsl
es
testl
jno
movsl
mov
cmp
pop
mov
add
data16
mov
aad
xchg
sub
bound
mov
out
and
add
xchg
and
mov
pop
loop
mov
and
loopne
mov
es
mov
jg
pop
in
add
dec
inc
xor
mov
pop
movsl
enter
dec
jns
movsb
mov
or
and
cltd
ds
mov
add
mov
fsubp
dec
mov
test
jns
inc
cmp
pop
lret
xor
mov
and
pop
fidivs
fs
pop
cmp
add
add
xchg
inc
add
lds
push
jge
iret
ljmp
or
ss
sub
cmp
lds
out
sub
mov
inc
fwait
cs
pop
mov
mov
sbb
add
add
cmp
mov
add
aam
mov
mov
add
mov
add
out
outsl
testl
mov
in
imul
add
pop
in
jae
inc
xor
mov
addb
insl
frndint
stos
test
dec
sub
fxch
cmpsb
push
jmp
xor
addr16
imul
mov
cmp
cmp
pop
aad
xor
outsb
mov
imul
push
add
cltd
dec
iret
xchg
in
xchg
xchg
mov
testl
inc
rolb
mov
cmp
jmp
jbe
or
mov
or
fsub
add
mov
ficomps
xor
push
add
in
jge
push
add
dec
packssdw
add
pop
push
jns
hlt
add
scas
ror
call
add
add
mov
mov
add
test
dec
mov
sbb
mov
jl
xor
add
insl
fdivrp
sbb
sti
push
lret
jge
cld
mov
xchg
add
repz
fwait
sub
out
pop
mov
mov
fstps
aam
ret
addr16
mov
je
cmp
test
cmp
movsb
dec
adcl
add
xlat
xchg
sbb
std
dec
mov
fcmovbe
pop
push
or
cmpsl
mov
lret
adc
mov
and
add
jb
mov
add
add
or
bound
mov
cld
push
movsb
mov
add
pushl
add
and
mov
cmpl
mov
hlt
xchg
sub
add
add
lret
cmpsb
jmp
xchg
movlps
jg
add
arpl
jp
mov
sbb
test
popw
xor
mov
add
std
adc
add
dec
sahf
cld
jp
or
out
cmpsb
pop
push
sti
mov
mov
int3
jbe
inc
mov
or
cmp
pop
nop
add
or
push
push
add
loope
cmp
mov
push
cmc
push
mov
add
dec
mov
push
add
mov
inc
add
adc
sbb
cli
clc
mov
enter
mov
mov
mov
cmpsl
cmp
cmp
cmp
testb
push
jl
mov
test
mov
mov
cli
mov
ret
fisubrl
pop
dec
sbb
loope
sbb
jge
dec
mov
add
fisubrl
idivb
sbb
out
dec
cmp
mov
cltd
add
aas
and
add
les
adc
mov
fwait
das
into
outsl
ret
rolb
jo
mov
push
inc
inc
add
xchg
add
loop
mov
sub
add
push
push
or
cmp
in
and
add
add
mov
in
mov
call
dec
pop
inc
add
mov
out
lods
xor
pusha
add
arpl
int
daa
mov
jle
push
jbe
rorl
and
jb
mov
add
mov
pop
rolb
mov
push
test
sbb
xchg
lea
movsl
vpslld
mov
fdivp
lahf
loopne
mov
daa
cmp
push
fisttpll
pop
and
mov
mov
ret
arpl
jle
outsb
sbb
xor
mov
push
pop
jnp
aaa
cli
aaa
cs
sarl
imul
mov
pop
or
push
dec
and
push
inc
adcl
jp
add
add
sbb
rolb
sbb
pop
push
jo,pn
mov
add
loopne
mov
lret
in
pop
mov
loopnew
mov
daa
test
inc
dec
mov
fldenv
add
addr16
lahf
mov
mov
mov
sbb
out
icebp
cld
push
xchg
xor
mov
sbb
mov
stos
pop
fdivl
dec
sub
cwtl
test
sbb
int3
testb
mov
xchg
mov
pop
loope
call
fsubrs
ret
icebp
stos
add
mov
mov
mov
rolb
mov
lods
stos
inc
add
lahf
adc
mov
ret
inc
adc
cmpsl
adc
mov
add
add
add
mov
insb
mov
xor
icebp
adcl
and
mov
add
cmpsb
jecxz
rolb
mov
adc
add
iret
leave
xor
jecxz
mov
pop
pop
inc
pop
mov
popf
xor
inc
xor
mov
leave
sub
mov
add
rolb
and
sbb
and
mov
addb
push
add
mov
les
jecxz
inc
pop
fcmovnbe
sbb
bound
mov
pop
into
ficomps
out
aad
add
lret
cltd
insl
mov
and
pop
das
testb
ljmp
fwait
lret
mov
out
mov
mov
test
mov
mov
popf
hlt
xor
adc
jbe
xchg
mov
push
push
xchg
pop
ds
adc
in
addb
push
sbb
cwtl
mov
add
xor
jnp
sub
or
cs
aas
js
cmp
mov
setbe
addb
ss
adc
and
add
mov
adc
mov
mov
sub
xor
add
sahf
aam
lock
adc
pusha
add
mov
sbb
in
jl
xchg
push
pop
mov
add
pop
or
xchg
lret
dec
jecxz
rolb
out
and
inc
adc
mov
push
lret
or
add
ja
xchg
xor
mov
dec
xor
add
mov
daa
and
mov
xlat
push
das
jecxz
hlt
add
js
xor
mov
adc
mov
addb
jo
mov
lods
mov
cmp
icebp
lcall
ljmp
add
pusha
add
cltd
test
mov
inc
jmp
loop
mov
xor
pop
lea
push
push
jnp
add
pop
cmp
stos
push
pop
and
mov
push
sub
xor
mov
imul
fisubl
add
add
mov
test
add
enter
rolb
mov
adc
mov
repz
test
aad
bound
mov
mov
ds
ljmp
add
add
rolb
mov
paddd
stc
add
add
xchg
inc
mov
add
cltd
jmp
mov
in
add
stos
outsl
mov
cmp
in
loopne
mov
pop
xchg
add
mov
fists
mov
pop
or
jecxz
add
sbb
jmp
fldenv
mov
mov
mov
scas
or
xor
sbb
aas
ret
hlt
dec
fdivr
je
repz
add
jge
pusha
add
bound
mov
je
adc
add
add
mov
add
add
jo
mov
outsl
add
xlat
jb
mov
popf
movsl
jbe
add
adc
mov
pop
cmpl
cmp
xor
mov
loopne
mov
mov
sbbl
xchg
das
ret
icebp
or
cwtd
push
add
push
lahf
rolb
mov
out
pusha
add
arpl
mov
iret
sub
mov
cs
fdivl
dec
and
mov
add
inc
or
add
pop
cmp
enter
mov
mov
jbe
ffree
loopne
mov
add
add
add
mov
add
imul
add
movsb
pop
clc
mov
add
add
jmp
dec
xor
lcall
lods
out
inc
xchg
addb
mov
add
push
hlt
push
cmp
add
out
loope
mov
add
mov
pop
inc
add
sub
xchg
add
pop
mov
push
sbb
mov
add
outsb
fldt
pop
decb
cmpl
add
inc
imul
add
mov
fwait
push
add
sbb
mov
loop
mov
cmp
mov
sahf
iret
fdivrs
dec
in
or
nop
add
clc
jp
iret
cmp
shll
mov
and
mov
mov
push
fadds
mov
xchg
sbb
lea
mov
xor
jge,pt
pop
dec
mov
mov
clc
push
aam
add
xchg
add
mov
ds
addb
or
xchg
aas
push
int
lods
fcmove
add
nop
add
xchg
jl
mov
adc
mov
popf
push
imul
jmp
pusha
add
xchg
jne
int
add
push
mov
or
xor
fdivrs
jbe
xchg
push
jae
sub
fisubrs
dec
pop
and
in
inc
int
add
aad
inc
add
loopne
mov
pop
inc
sbb
add
add
mov
out
sub
int
out
in
mov
mov
mov
add
inc
cmpsb
mov
sbb
cmp
cmp
add
test
pop
call
mov
lds
sahf
faddl
add
mov
xchg
add
pop
or
mov
pop
xchg
jp
ret
fcompl
and
int
jge
ss
mov
sbb
rcrl
jb
mov
js
out
stc
int3
rolb
mov
sti
xor
pop
sub
add
add
bound
mov
mov
popa
pop
push
mov
mov
add
mov
mov
in
mov
mov
lahf
lea
divb
out
mov
adc
add
movsb
stc
add
mov
loope
and
loop
mov
xchg
push
in
adc
xor
bound
mov
xor
repnz
faddl
jl
xchg
sbb
add
add
cmp
sub
mov
lret
mov
scas
push
out
add
mov
push
add
sbb
mov
jle
xchg
test
sbb
cmovl
add
or
pusha
add
add
fstpl
jmp
pop
das
or
jge
fsubrl
fnstenv
dec
jne
insl
js
pop
mov
lods
inc
ja
add
in
jnp
cmp
or
imul
cs
clc
es
jg
sub
in
add
fisubrs
rolb
rorl
gs
sbb
in
add
add
aam
in
cmp
sub
add
and
imul
sbb
add
inc
mov
and
and
roll
add
enter
add
inc
ret
pop
inc
dec
leave
jmp
ror
xor
mov
mov
imul
inc
mov
add
fninit
adc
sbb
arpl
fs
pushf
xor
dec
jge
add
add
bound
mov
cmp
das
movsl
and
add
add
out
mov
mov
mov
test
ds
add
xchg
add
sbbl
decb
cwtl
mov
iret
or
push
xchg
mov
fwait
jecxz
call
adc
in
rcrl
call
add
add
mov
test
cmp
add
call
add
add
mov
add
rolb
insl
into
cmpsb
cld
je
fstp
mov
imul
inc
mov
push
lds
push
push
add
and
inc
add
hlt
xchg
or
mov
inc
adc
mov
stos
data16
fisttpll
sbb
push
mov
mov
jo
mov
cmp
jmp
out
add
in
out
add
sub
or
add
rolb
mov
sbb
xor
add
mov
mov
mov
add
je
cmp
imul
cwtl
pop
cmp
ss
or
add
add
mov
and
ffree
add
mov
nop
add
mov
push
scas
dec
dec
mov
sbb
or
mov
imul
jecxz
cmp
sub
sub
lret
test
mov
pop
cmpsl
xchg
xchg
xor
add
add
push
cmc
xchg
inc
mov
xlat
in
and
mov
cltd
cmpsl
es
inc
dec
pop
sbb
mov
add
pop
jp
mov
adc
add
sub
sub
fs
add
pop
inc
add
mov
add
cs
mov
cli
xor
test
sub
outsl
cmp
xlat
jno
and
mov
mov
fisubs
dec
sti
cmp
add
dec
inc
inc
popa
xor
mov
es
pop
or
xchg
jb
mov
pop
push
xlat
push
xchg
add
ret
inc
dec
nop
add
mov
es
or
mov
mov
mov
dec
rorl
or
xchg
pop
sbb
xchg
add
push
or
leave
cltd
lock
es
enter
inc
mov
mov
pop
rolb
repz
mov
xchg
add
pop
sbb
push
lods
cs
xor
mov
mov
add
jl
adc
pop
movsb
in
mov
or
mov
pop
insl
ds
pusha
add
add
xchg
add
push
ja
add
add
add
add
les
cmp
mov
clc
test
daa
sbb
add
cwtl
cltd
pop
xchg
push
mov
add
stos
mov
sti
scas
test
xchg
les
add
cmp
xor
aam
add
sbb
lods
jecxz
js
dec
std
mov
add
add
jge
in
imul
rolb
mov
adc
mov
icebp
mov
mulb
bound
mov
mov
add
xchg
jl,pt
jns
xchg
in
icebp
xor
mov
inc
mov
mov
rolb
mov
inc
add
mov
jne
sbb
mov
cmp
je
mov
push
push
jmp
mov
pushf
cmp
stos
push
daa
xchg
xlat
mov
ret
test
add
mov
add
or
add
xor
mov
lds
pop
mov
cmp
add
jge
dec
adc
ljmp
or
xchg
mov
add
cmp
aam
add
enter
jne
sub
and
dec
push
aaa
jo
mov
push
sbb
add
add
mov
add
sbb
mov
fcmove
lcall
dec
or
in
arpl
jge
pop
orl
in
mov
das
and
cltd
xor
mov
insb
loop
mov
addb
rolb
mov
jno
add
mov
leave
stos
and
cmc
xchg
mov
xchg
cmp
es
test
rolb
mov
sbb
movsb
fdivrl
ljmp
mov
mov
vcmpss
xchg
add
sub
add
rolb
cmp
pop
mov
inc
cmp
mov
mov
fs
cmove
std
mov
ds
xlat
test
mov
dec
dec
add
mov
outsl
repnz
mov
enter
mov
add
lahf
out
inc
xor
dec
xchg
movsb
sub
int3
jns
popa
dec
xor
ja
dec
and
add
test
jae
add
mov
cmp
xor
mov
ret
repz
mov
add
popf
or
push
cli
out
int3
cmp
push
sahf
scas
ja
add
js
add
add
add
rolb
mov
lea
inc
test
sub
int
bound
mov
add
imul
xlat
cmpsl
cs
cmp
jg
ret
or
mov
add
rolb
mov
scas
into
and
lcall
mov
aaa
stc
add
mov
sbb
incl
insl
and
jnp
add
add
jo
mov
movsb
rolb
mov
ja
pop
stc
fs
mov
in
push
cltd
ret
iret
test
fldt
call
in
or
mov
mov
mov
dec
jnp
add
mov
iret
mov
decb
cmc
mov
and
adc
cmpsl
femms
pop
rolb
mov
addb
mov
jg
and
mov
jae
jo
mov
stc
xor
push
or
and
mov
inc
xchg
add
ss
jnp
jbe
jae
xchg
jns,pn
mov
mov
std
out
std
pushf
scas
mov
push
sbb
in
jg
add
mov
add
pop
lods
leave
outsb
inc
xchg
ljmp
pop
push
imul
push
add
into
mov
mov
cltd
in
cmp
fistpll
repnz
push
add
fidivs
pop
adc
push
mov
mov
sub
test
lcall
mov
loop
mov
cmpsl
pop
push
stos
cmp
outsl
fsubrl
into
or
imul
push
add
rolb
mov
add
sbb
mov
scas
sub
or
add
cmpl
dec
xlat
test
outsl
jmp
add
sbb
adc
rolb
mov
mov
adc
mov
pop
mov
mov
fdivl
add
dec
sbb
mov
stos
ds
dec
call
pop
scas
in
mov
test
add
mov
sbb
mov
add
mov
mov
imul
pusha
add
mov
es
aaa
adc
mov
sub
movsb
jo
mov
nop
add
int3
jmp
inc
add
mov
hlt
lahf
push
push
cmp
cmp
jmp
fwait
jae
outsl
adc
in
xlat
sahf
movsl
testl
out
push
outsb
lea
and
popa
jecxz
or
sti
cltd
or
dec
insb
sbb
sbb
pop
mov
into
test
dec
pushf
fs
mov
pop
push
int
sub
out
and
mov
fdivs
popa
jg
repnz
mov
idivb
mov
push
in
dec
mov
mov
stc
sub
lret
stos
fdiv
add
sbb
add
xchg
mov
mov
and
xchg
repnz
repnz
mov
or
add
jns
xor
fsubs
jle
add
mov
add
mov
cwtl
in
fwait
push
add
add
