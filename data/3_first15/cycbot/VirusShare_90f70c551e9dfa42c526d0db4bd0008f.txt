push
ror
dec
push
in
mov
and
call
pop
sub
das
jbe
addr16
lds
add
dec
jecxz
bnd
push
sbb
mov
mov
and
lods
cmpsb
out
add
cmp
xor
rorb
lods
and
inc
add
add
xchg
shrb
add
add
add
imul
ja
cmpsl
aaa
subl
repnz
add
daa
jg
xlat
xchg
iret
xor
addr16
stos
push
leave
fists
sub
add
ret
hlt
test
pop
popl
xchg
add
sarl
inc
ss
aam
jns
les
lret
mov
sub
les
cmpsl
aad
add
push
fldt
les
pusha
add
stos
pop
addb
negb
js
pop
cmp
sub
in
cltd
and
loop
ds
sarl
fcomp
mulb
mov
sub
bnd
xor
inc
add
or
leave
mov
pop
inc
jecxz
std
mov
xor
inc
add
loope
add
pop
addb
and
cli
outsb
inc
aam
in
adc
pop
test
mov
fs
add
inc
in
inc
add
xchg
or
incb
inc
call
int3
jle
lret
stc
repz
push
pop
push
out
cld
xchg
popf
cmpsb
mov
mov
jb
add
cmc
icebp
and
cmp
hlt
enter
out
pusha
add
add
les
in
xchg
pop
fldenv
ds
inc
add
xchg
cmp
mov
int
icebp
mov
ljmp
repz
add
adc
mov
sub
dec
mov
pop
sub
lods
adc
rcrb
lahf
loopne
add
cmpsl
jl
jl
not
mov
xor
rcr
es
sahf
mov
pop
cwtl
pop
jnp
out
ret
jle
aam
dec
ret
mov
xchg
fdivrs
je
add
and
xchg
mov
cmp
sti
nop
jb
movsb
cmp
add
dec
dec
icebp
push
addb
out
xor
int3
xchg
les
sub
clc
out
jl
cmp
bound
in
or
xor
pop
mov
cmp
loop
fimuls
dec
sub
mov
push
pop
xchg
in
jp
mov
mov
dec
pop
sub
adc
xor
iret
xchg
bound
jle
pop
dec
aaa
ljmp
mov
add
in
out
xor
add
shl
into
xor
add
sub
and
sahf
stos
stos
arpl
xor
dec
adc
or
adc
pop
push
jbe
cmp
int
and
xor
addr16
es
sbb
add
mov
sbb
cld
push
out
xchg
sahf
mov
aad
out
dec
mov
inc
scas
pushf
xor
push
mov
test
mov
add
mov
jecxz
mov
push
xchg
in
fisttpl
dec
repz
test
mov
inc
add
add
mov
inc
add
cwtl
rclb
mov
adc
or
jbe
xchg
test
sub
mov
push
lret
pop
icebp
pop
iret
cwtl
push
adc
mov
divl
adc
js
aad
jp
out
ret
imul
cmp
pushf
pop
cmpsl
jg
js
push
lock
cltd
loopne,pn
mov
push
add
xor
cmp
lods
adc
rol
sbb
sub
mov
dec
movsb
cs
pop
dec
mov
dec
mov
xchg
adc
scas
or
cli
fimull
add
add
scas
es
pop
mov
movsl
sar
mov
xor
repz
inc
add
pop
or
sbb
jno
aaa
jecxz
adc
add
jg
mov
add
jbe
clc
adc
dec
aam
inc
add
out
fwait
mov
scas
jle
mov
mov
jbe
mov
popa
inc
adc
xor
ret
pop
rcrl
and
scas
and
imul
jmp
pop
sbb
add
sbbl
mov
cmp
arpl
mov
pop
adc
hlt
fucomp
out
and
xor
test
jnp
das
lods
cmp
add
mov
add
cld
push
jnp
bound
cmp
rclb
or
jnp
call
mov
fisubl
sbb
cmpsb
push
dec
fwait
jbe
add
and
xor
movb
add
dec
mov
add
inc
add
cmp
pop
sub
jns
sub
push
xor
jecxz
into
les
adc
cmp
mov
repz
mov
mulb
lds
push
add
jne
ds
mov
and
cmp
psubusb
fidivs
inc
add
mov
cmpsl
fimull
mov
icebp
mov
loope
mov
add
sarl
repz
or
mov
mov
sub
dec
cmpsl
or
mov
in
jmp
inc
cwtl
dec
mov
push
sub
pop
inc
add
mov
inc
into
adc
mov
pop
or
sub
adc
sbb
xchg
push
or
mov
add
lea
mov
int
addl
push
rcrb
testb
and
adc
popa
mov
in
jle
mov
jl
mov
nop
int3
mov
mov
into
push
cmpsb
push
repz
mov
sbb
movb
mov
movsb
mov
or
xchg
out
xchg
imul
stos
xchg
repz
add
adc
jnp
mov
add
add
push
pop
in
lret
adc
sub
fdivr
mov
push
cmp
hlt
push
adc
jo
xor
pop
xchg
sub
add
gs
lods
movb
add
mov
mov
add
jb
add
sbb
lahf
jp
aaa
shlb
pushf
sahf
jge
stos
sti
rolb
jecxz
xchg
pop
mov
cli
cwtl
icebp
jnp
jle
jnp
and
adc
xor
enter
pop
sub
pop
sub
lods
mov
push
xchg
xor
pop
dec
cmp
aam
in
imul
inc
xchg
push
or
outsb
iret
pop
in
lahf
push
mov
out
adc
icebp
fiadds
add
jp
lret
cwtl
aad
mov
pop
loop
dec
sub
xchg
xchg
pop
xchg
pop
rolb
test
push
add
xor
and
or
add
lock
mov
pop
movsl
adc
sub
inc
aam
addb
pop
push
sbb
pop
xchg
outsl
lea
in
mov
cmp
aam
add
cs
add
daa
test
fsubp
or
outsl
outsb
imul
int
add
out
lock
push
movsl
pop
aaa
adc
sub
pop
adc
jns
jns
and
add
xchg
in
lret
jb
pop
push
cwtl
sub
lods
fwait
icebp
inc
add
fisttps
mov
jmp
cmp
cmpsb
pop
inc
add
and
loopne
mov
inc
cltd
and
out
sbb
test
iret
and
or
push
or
add
ret
mov
cmc
cld
push
cwtl
xchg
adc
xchg
and
daa
into
rclb
inc
add
out
sbb
rolb
add
cmp
sti
push
mov
mov
push
into
out
mov
arpl
arpl
ret
sub
push
cmpsb
les
push
dec
out
jg
dec
ds
inc
pop
add
add
dec
jae
stos
jecxz
dec
cltd
in
popa
addb
dec
xchg
ret
add
push
xor
jge
jge
mov
sub
dec
imull
jb
xor
push
xchg
sub
mov
add
add
mov
add
adc
mov
add
les
add
cmp
push
filds
adc
pusha
add
add
adc
dec
pop
sub
repz
bound
test
fmull
setb
shlb
mov
data16
arpl
int3
vpsadbw
or
lret
inc
add
xchg
cmp
add
or
lds
sbb
roll
leave
sub
ret
add
mov
cmp
out
dec
addb
add
add
pop
out
xor
cmp
sbb
add
mov
ja
icebp
sti
lea
pop
imul
int
arpl
jg
xor
test
inc
push
testb
lods
jmp
lods
sbb
test
xchg
data16
rcl
pop
fisubl
add
cltd
repnz
mov
das
lret
cmp
bound
clc
and
aaa
addb
push
cmpsl
cmp
add
push
gs
movsl
adc
add
fdivrs
pop
addl
cmpsl
xor
cmc
xor
rcrb
aas
inc
sub
cltd
fcomp
les
sub
fwait
pop
das
movsl
mov
mov
add
loope
in
std
xor
jp
lods
mov
lods
in
shrl
enter
test
push
lock
jbe
pushf
lods
sub
cwtl
nop
fbstp
stos
pop
xchg
dec
pop
cmp
push
pushf
outsb
dec
xchg
sub
xchg
test
jno
mov
sbb
mov
cmp
push
inc
and
out
mov
cmpsl
rcrb
push
xor
in
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
cmpsb
into
xchg
flds
add
inc
add
out
xchg
and
les
inc
add
test
inc
add
leave
std
add
mov
dec
cs
mov
mov
divb
or
push
or
add
lcall
push
sti
adc
inc
add
xchg
test
xor
cmovle
mov
out
adc
add
mov
adc
pop
bound
fildll
out
test
adc
add
imul
add
das
repnz
inc
add
dec
cmp
rolb
jge
fnstsw
push
shr
fsubrl
cmp
fistl
adc
add
mov
pushf
mov
xor
jne
out
xor
xchg
shlb
popa
dec
test
mov
sbb
or
mov
movb
mov
mov
loope
mov
xor
xlat
cmp
mov
mov
add
jae
call
mov
outsb
test
fwait
xor
test
push
aad
adc
addb
jbe
and
push
out
mov
jno
pushl
mov
fdivrs
pop
bound
xor
add
out
xor
xchg
add
int
adc
mov
mov
pop
dec
jne
sbb
lods
addb
roll
lods
in
and
pop
js
sbb
es
in
je
lahf
nop
mov
fldt
pusha
add
or
mov
jge
pushf
std
iret
ljmp
push
add
pushf
mov
add
xchg
push
mov
add
sbb
cltd
and
xor
xchg
nop
cmp
inc
add
push
add
add
adc
pop
int
lea
es
mov
nop
mov
scas
les
and
sahf
gs
rolb
int
add
enter
notb
ja
pop
add
imul
rolb
xor
sub
je
mov
outsl
idiv
mov
lods
lret
jo
nop
xchg
mov
xchg
stos
xchg
cmp
into
pushf
pop
in
sub
add
out
xor
loopne
xlat
lret
fldcw
pop
test
ret
adc
jne
add
dec
cli
dec
add
cmpl
imull
pop
push
lock
push
adc
nop
ja
leave
mov
in
leave
inc
cmp
sub
scas
mov
add
popa
bound
aam
sbbl
test
or
dec
cli
xor
bound
dec
inc
adc
stos
sub
jo
sub
add
insb
inc
pop
cmp
adc
int3
xor
mov
mov
xchg
push
push
adc
cmp
outsb
pop
loope
add
dec
mov
add
dec
dec
lret
sbb
mov
mov
xchg
inc
mov
push
lret
add
rcl
add
add
add
sbb
add
hlt
ss
mov
jl
add
stos
movsl
or
inc
xor
cld
loop
mov
xor
sub
cmpsb
push
popa
or
sub
pushf
shlb
dec
ljmp
lahf
test
ljmp
mov
add
jo
scas
xchg
addr16
mull
add
das
aam
pop
push
mov
flds
and
outsb
pop
test
test
lret
dec
inc
out
xchg
mov
cmp
cwtl
insb
shll
xchg
dec
sbb
push
add
xchg
push
aad
adc
call
add
rep
mov
roll
sbb
inc
add
pop
je
nop
jmp
lods
imul
leave
adc
mov
imul
das
out
nop
mov
xor
mov
fidivs
sub
cmp
xchg
push
iret
sub
sbb
add
jns
inc
add
in
dec
nop
jnp
add
add
sub
pop
cli
cmpsl
sbb
jmp
fldt
test
push
sub
les
sahf
in
add
inc
add
xor
pop
or
sti
outsb
popa
adc
stc
pop
cs
push
or
loopne
push
cld
mov
push
xchg
ret
fisttpl
bound
mov
add
stos
nop
jl
fbld
rcll
mov
repz
mov
pslld
xor
hlt
movsl
mov
shlb
dec
cmp
pusha
add
cmp
stos
dec
sbb
lods
pop
roll
mov
cmpsb
mov
push
jle
lds
cli
aam
xor
cmp
adc
ds
add
lds
or
cmpsl
aad
into
adc
pop
cmpsl
mov
add
aas
xor
add
fnstcw
xor
imul
mulb
mov
xorl
pop
dec
xor
fcom
or
dec
mov
push
add
movsl
dec
push
cmp
out
das
rcll
add
add
xchg
test
ja
and
icebp
fiadds
push
add
add
push
sbb
pop
das
add
rolb
nop
dec
inc
jns
sti
jl
in
outsb
and
jg
jo
add
and
pop
mov
arpl
ja
sbb
or
in
outsl
sbb
enter
mov
mov
stos
mov
add
xlat
mov
xchg
mov
fisubrs
mov
mov
scas
dec
pop
add
pop
add
stc
ret
mov
outsl
pop
add
push
xchg
stos
jno
call
outsb
cmpsb
insb
jg
xor
sbb
and
mov
movsl
test
les
lahf
adc
es
daa
aam
scas
jmp
add
pop
rolb
or
xlat
mov
rclb
mov
inc
and
inc
add
adc
xor
sub
pop
sub
lock
mov
xchg
mov
add
into
xor
pop
lds
sti
xchg
xchg
in
push
sub
ja
mov
cmpsl
ror
in
fsubl
push
xlat
lock
addl
fsubrs
fldcw
fdivrs
sub
xor
fisttpll
js
cmp
inc
add
in
insl
repz
stc
pusha
add
sbb
lcall
pop
and
mov
pop
xor
xchg
es
pop
xor
push
pop
sub
dec
fs
sbb
cwtl
out
arpl
xchg
push
int3
push
adc
test
add
sub
lods
mov
and
ret
cmp
mov
lock
out
fs
add
imul
aam
repnz
imul
push
mov
jle
aam
ret
adc
mov
adc
add
add
ds
es
xchg
aas
mov
fwait
inc
add
insb
and
cltd
aaa
xlat
jno
pusha
add
jnp
adc
jecxz
fs
pop
cmp
push
out
add
or
pop
inc
dec
enter
push
xchg
out
jno
xor
mov
je
lods
cmp
loop
stc
test
add
and
call
jne
jb
mov
add
push
sahf
mov
negl
sahf
xor
ret
sbb
jmp
loopne
dec
std
push
sub
fldt
fmuls
fisubrs
xor
mov
stos
cmp
lock
dec
cmpsl
pop
lret
jge
pop
jle
movb
mov
jns
dec
in
sbb
roll
aam
xchg
inc
mov
or
sbb
adc
xchg
out
jle
nop
loope
les
and
icebp
pop
ja
add
cli
nop
sbb
add
pop
hlt
xchg
xchg
mulb
addb
add
add
popf
fcoms
mov
sbb
cld
bound
filds
or
add
sbb
pop
mov
xor
gs
adc
in
arpl
cmp
mov
out
imul
cltd
and
cltd
inc
add
aaa
jl
mov
sub
pop
cs
xchg
test
pop
adc
mov
pushf
jl
push
and
popa
stos
cmpsb
and
add
mov
lcall
push
fsts
mov
aam
addb
lods
aas
sub
add
inc
add
ret
xchg
cmp
fwait
jmp
add
in
or
cmp
adc
jnp
pop
pop
inc
mov
clc
fldenv
xor
inc
cmp
cmp
imull
int3
aam
cld
les
insb
mov
je
jae
xchg
sahf
fstps
popa
mulb
ja
test
add
dec
movsb
add
pop
mov
mov
movsl
je
popa
data16
dec
in
add
out
movb
cmc
lds
push
loop
xchg
mov
out
sub
aam
and
repnz
pop
popf
xchg
int3
repnz
inc
jl
inc
repz
out
mov
fnstcw
repnz
jne
push
add
out
hlt
pop
ja
jae
add
movq
xor
or
sub
add
mov
sbb
aaa
push
jnp
out
out
stos
adc
xor
movsl
lods
or
sbb
adc
dec
sbb
mov
jle
ret
mov
cs
mov
pop
in
imul
std
push
push
rorl
daa
rcll
dec
and
fstps
dec
add
fisttps
push
add
add
xor
mov
adc
add
rolb
lret
test
dec
push
mov
popf
adc
aam
jae
push
jl
mov
mov
mov
cmp
fildl
gs
add
jne
dec
in
mov
gs
leave
das
out
mov
or
push
xor
addb
idiv
jg
inc
add
add
negl
aaa
inc
sub
cli
mov
lods
lret
jl
add
ljmp
mov
sbb
enterw
xor
mov
mov
fcmovne
mov
dec
insb
push
popf
pop
sahf
ljmp
aaa
fwait
mov
push
out
iret
add
pop
cmp
addr16
cmp
lods
fsubr
mov
jg
rolb
xchg
lods
push
add
mov
cld
jns
xchg
insb
xlat
mov
push
aam
xorl
jmp
insb
addb
loope
rcrl
xchg
add
inc
add
add
add
add
imul
add
push
arpl
add
inc
add
ret
push
mov
push
mov
add
jg
mov
mov
ret
rcr
mov
js
mov
popf
test
pop
ret
dec
rolb
add
jae
mov
in
add
les
jne
add
ja
sub
xchg
xchg
bound
adc
shll
add
push
orl
push
adc
out
mov
lds
rolb
push
xchg
sahf
das
jp
and
sbb
mov
into
xchg
inc
add
push
add
pop
cmp
stc
and
and
cmc
outsb
scas
dec
les
std
cmpsb
inc
add
cmpsb
inc
inc
mov
test
mov
bound
adc
push
push
inc
repz
stc
inc
add
jbe
mov
imul
xor
das
dec
pop
xchg
dec
addb
xchg
fistl
push
xchg
movsl
idivb
push
xor
mov
push
test
scas
xchg
jbe
aas
fisubrl
orl
in
shll
je
sbb
jne
les
imul
stc
gs
mov
pop
cmp
mov
cs
mov
mov
inc
push
and
hlt
dec
cmp
add
mov
stos
loop
sti
setne
daa
fs
sub
cmp
jl
pop
getsec
mov
fdivl
pop
jbe
and
xchg
adc
into
fdivs
pop
imul
sbb
sub
push
or
push
add
sub
fistpll
jmp
cltd
pop
shr
repz
pop
push
pushf
imul
pushf
cmp
test
negl
mov
xor
lods
call
cmp
loop
or
lcall
cmpsl
cmp
mov
mov
add
aaa
or
pop
out
or
dec
mov
pop
lods
popf
cmpsl
arpl
movsl
pushf
jg
jmp
mov
dec
outsb
sub
out
add
push
add
push
add
testb
mull
xor
push
sub
bound
inc
add
popa
rcrl
outsb
incl
or
dec
jbe
add
xchg
enter
push
add
xchg
out
mov
stos
add
pop
inc
add
mov
push
mov
test
sub
rcrl
cmp
mov
jp
or
test
repz
add
jbe
lcall
icebp
movsl
stc
std
dec
sbb
add
pop
lock
add
push
mov
mov
and
insl
imull
dec
cs
add
addb
inc
add
inc
add
add
stc
dec
mov
push
xchg
fisttpll
int3
flds
cmc
adc
jbe
xor
pop
fucomi
add
push
push
cmp
mov
adc
or
inc
add
add
push
jp
sub
or
pusha
add
push
cld
lret
mov
xor
mov
mov
stos
xor
mov
or
add
or
cmp
ljmp
sub
mov
add
out
lret
mov
mov
inc
and
or
gs
ficompl
addb
arpl
mov
add
sub
pop
test
rolb
dec
mov
add
insb
hlt
xchg
sahf
add
mov
add
std
ficoml
add
cmpsl
jp
dec
out
and
addb
int3
xor
cmp
mov
or
xorl
int
mov
cwtl
es
dec
mov
xchg
mov
mov
outsb
jbe
add
and
mov
shrl
adc
iret
xchg
addb
out
add
fs
fsincos
inc
cmp
add
movb
push
mov
bound
mov
adc
lods
or
ret
mov
jecxz
adc
in
add
cmpsb
jb
push
add
in
push
fistpll
pop
adc
inc
loop
sbb
xor
stos
ja
je
pop
xchg
add
ret
repnz
pop
test
jae
mov
mov
addr16
icebp
test
push
sbb
pop
adc
stos
mov
iret
push
xlat
shrb
out
cs
push
cmp
mov
xrelease
std
cmpsb
daa
imul
add
cmpsl
dec
test
fdivrl
int3
lret
ja
fsubs
inc
push
fldt
std
xor
jo
enter
jge
add
jbe
ljmp
or
and
add
cmp
xchg
test
std
mov
scas
inc
add
mov
aas
gs
inc
add
sub
int3
stos
aaa
test
ljmp
shll
sbb
ds
adc
add
jmp
and
sub
into
adc
and
inc
add
add
aad
inc
add
cmp
mov
xchg
adc
les
dec
and
adc
add
and
imul
dec
mov
mov
outsb
cmpsb
jmp
inc
add
mov
in
add
jl
dec
fcomps
aas
dec
sbb
lret
inc
jle
fwait
mov
inc
cmp
inc
add
jp
xchg
leave
dec
cmpsl
mov
dec
aas
sbb
popa
ret
mov
cltd
pop
add
shll
scas
cmp
sbbl
push
and
xor
mov
pop
mov
and
add
mov
cmp
and
outsb
test
jne
push
add
cmp
fcoml
push
add
jne
mov
out
aam
cmp
stos
js
std
ret
xor
je
add
js
jne
jecxz
cmpsb
or
pop
mov
inc
mov
in
lock
push
insl
fdivs
push
cltd
or
daa
lock
push
pop
enter
sub
add
add
sbb
jb
nop
cli
les
xor
dec
jle
mov
mov
stos
ret
out
xchg
cmp
incl
in
or
or
mov
lods
adc
cmp
add
or
mov
fwait
ljmp
lret
add
ret
or
jno
add
outsb
sti
mov
pop
xlat
sub
aas
hlt
dec
je
push
repnz
fwait
push
stos
add
adc
sub
add
movsb
pop
scas
gs
pop
test
pushl
push
loopne
add
addb
leave
bound
mov
sbb
add
cmc
sarl
fwait
mov
popa
ret
ja
jp
ljmp
insl
add
cmc
dec
push
stos
popa
cmpsl
repz
negl
mov
add
jb
cmp
fistpll
mov
xchg
cmp
out
das
cmpsl
addb
std
jbe
and
add
sub
push
push
fwait
cmp
or
daa
nop
ljmp
push
push
dec
rcr
dec
push
xchg
adc
add
mov
fwait
lea
mov
scas
or
xchg
stc
fwait
aas
lret
sub
lods
xchg
loopne
add
call
ja
cmp
jl
mov
loope
sbb
mov
mov
sbb
aaa
jg
add
cs
inc
add
cltd
xchg
lcall
call
push
add
scas
push
inc
cli
jnp
xchg
mov
adc
xchg
mov
leave
cmp
mov
add
sub
pop
mov
into
cmp
adc
or
add
test
inc
add
mov
jle
movsb
and
sbb
jle
add
popa
leave
and
clc
scas
add
dec
push
pslld
inc
add
ffree
add
mov
add
lahf
sbb
push
add
push
lock
insl
xchg
mov
outsb
xor
sbb
and
xorl
mov
add
rcrb
mov
inc
add
cld
mov
outsl
sub
or
lahf
insb
jge
cmp
arpl
dec
jb
add
insl
pop
pop
pop
push
and
lret
or
adc
sbb
subl
adc
xchg
js
pop
scas
jnp
push
cld
inc
jnp
jmp
push
aaa
add
shlb
je
inc
fldl
mov
popa
test
add
in
call
test
push
mov
and
push
sbb
cs
addb
iret
push
roll
fadds
lea
add
mov
daa
cli
test
jns
or
push
pusha
add
jb
ret
mov
and
mov
pop
cmp
int3
call
xchg
jle
jg
inc
add
pop
push
and
xor
pop
fcompl
insb
ret
jmp
jns
mov
lods
jns
dec
cmp
fwait
cmp
push
stos
insb
cmp
mov
add
fwait
sbb
pusha
add
sbb
mov
and
loop
sbb
inc
push
ss
push
bnd
add
dec
and
pushf
xchg
jmp
pop
scas
push
or
out
repnz
daa
rcrb
pop
punpckldq
ficomps
bound
and
mov
inc
add
fwait
in
movsl
ss
pop
xchg
js
xchg
jecxz
add
addb
in
add
ret
inc
push
add
popa
in
rolb
mov
add
add
test
add
repz
arpl
data16
sbb
mov
jmp
loope
add
add
cmp
add
xchg
dec
int3
int3
pop
pusha
add
jnp
int3
ja
mov
dec
stc
int
add
jecxz
inc
add
outsb
mov
addl
add
add
in
ljmp
add
lret
and
add
popf
repz
call
xor
out
inc
int3
push
sbb
in
or
mov
cld
push
mov
inc
ja
adc
push
xor
sahf
pop
rol
mov
cwtl
adc
mov
mov
pop
cli
lock
or
xchg
mov
ret
ds
icebp
in
xchg
and
or
lds
and
jp
or
rolb
out
iret
insb
push
mov
pop
sbb
rorl
into
mov
repnz
mulb
and
jg
cmp
sti
mov
bound
sbb
enter
mov
jle
jne
rcrb
pop
jg
mov
adc
adc
addr16
mov
test
xor
pop
pop
push
fidivrl
mov
or
lods
and
jg
xchg
lds
inc
icebp
pushf
icebp
sahf
dec
in
lock
push
add
adc
add
imulb
lret
adc
ljmp
dec
jns
fldt
add
lock
push
stc
das
adc
mov
fucom
sub
or
setnp
xchg
inc
add
lock
push
lds
xchg
ret
jne
xor
add
mov
dec
xor
inc
add
or
push
xor
cmp
rorl
lahf
mov
or
add
movb
pop
xor
insl
pushf
aam
push
sahf
push
jns
xchg
outsl
popf
icebp
orl
imul
add
scas
sub
in
in
sbb
add
push
icebp
xchg
dec
inc
push
imul
push
jb
and
ds
stc
in
sub
dec
xor
fsubrl
adc
and
add
das
cld
test
pop
mov
test
add
xor
or
adc
add
movsb
in
ljmp
pop
jbe
lret
pop
out
mov
and
pop
cwtl
xor
addb
arpl
xor
cmp
shrb
jecxz
int3
repnz
andl
push
mov
cmp
mov
and
pop
jmp
or
sbb
gs
jge
cmovae
mov
sub
int
pop
test
ret
ss
xchg
pusha
add
xchg
jbe
pop
jge
and
je
cmp
mov
dec
shlb
mov
in
push
adc
jns
mov
add
dec
pop
pop
mov
bound
xchg
xlat
arpl
sub
cld
rolb
clc
mov
and
pop
repnz
xor
pop
mov
fnsave
mov
jmp
mov
xchg
inc
addb
cmc
mov
icebp
xchg
sbb
mov
test
ret
pop
sub
add
inc
add
xor
movsl
dec
ss
ja
adc
lret
jl
dec
fcmovbe
pop
out
push
sti
pop
cs
add
xor
popa
shll
cmc
xor
add
jp
mov
add
add
pop
dec
aam
lcall
lret
arpl
cmpl
inc
sub
cmp
add
test
das
nop
push
add
jecxz
mov
movlps
and
xor
sbb
es
inc
movb
jp
mov
movsb
sub
pop
loop
cmp
popl
cmpsl
out
test
add
adc
popf
sbb
pop
push
fcomps
lds
mov
repz
add
xor
add
lea
addl
cmp
sarl
jb
jnp
pop
mov
add
cli
adc
call
add
popa
negl
insl
dec
lea
test
xchg
scas
lea
movb
mov
inc
lret
addb
pop
scas
mov
jno
shll
jno
add
leave
fisubrs
mov
mov
cmp
and
pop
rcll
cmp
cmp
mov
mov
bound
dec
frstor
sbb
add
clc
jae
mov
and
xchg
std
xchg
clc
jnp
test
xchg
cli
dec
daa
mul
addr16
xrelease
mov
std
mov
roll
push
cmpsl
xor
sarl
push
das
ror
in
dec
add
das
mov
in
je
and
dec
arpl
add
jo
scas
out
xor
push
outsl
mov
adc
push
jge
pusha
add
rcrl
adc
pop
mov
addr16
dec
enter
cld
adc
inc
pshufw
pushf
out
push
dec
sbb
lcall
jmp
add
fwait
leave
out
ljmp
shlb
movsb
jne
inc
jmp
bound
jo
push
inc
push
add
loop
xor
adc
add
xchg
aad
adc
inc
adc
sti
rolb
cwtl
rol
add
add
jp
je
add
mov
add
ja
fildl
adc
mov
lret
mov
cmp
pop
insl
add
sub
rorl
or
add
ret
fisubrs
adc
adc
arpl
add
jo
add
mov
outsl
cmp
sub
out
add
mov
dec
imul
jo
fadd
mov
cmp
xor
bound
outsl
or
imul
adc
mul
jnp
rolb
pop
icebp
jns
test
bound
cltd
lods
stos
mov
sub
sub
iret
insb
push
imulb
mov
mov
addb
sbb
es
imull
mov
call
adc
insb
ret
out
jne
jne
sub
add
push
mov
fildll
lret
push
je
pop
insl
aam
icebp
fwait
jge
add
insb
push
xchg
add
sbb
rolb
jl
or
out
dec
cld
in
xchg
push
add
ljmp
insl
aam
add
mov
xor
movsb
cmpsl
pop
flds
add
cmpsb
jno
fidivl
jbe
jecxz
and
sbb
add
sti
scas
mov
jg
inc
repz
imul
mov
push
in
xor
shrl
sbb
and
mov
jne
push
adc
test
daa
arpl
sub
test
movl
into
mov
test
pop
sbb
sbb
rep
les
mov
and
push
push
add
jbe
and
cli
js
add
xchg
mov
xor
xchg
cmp
inc
add
pop
out
dec
test
mov
ljmp
cmc
gs
scas
sti
ja,pn
movb
mov
sub
add
imul
mov
out
aas
sub
push
dec
repnz
push
dec
les
sub
sarb
xchg
scas
lret
add
sbb
test
add
ficomps
and
cltd
jnp
pop
out
pop
inc
add
fwait
in
jge
or
push
les
mov
xor
push
mov
icebp
and
mov
mov
add
sahf
mov
add
push
add
dec
adcl
mov
xchg
adc
jmp
jl
add
les
inc
sbb
sbb
int3
pop
or
stos
pushf
cmp
insb
sbb
xchg
and
mov
cmp
add
jl
into
push
stc
mov
mov
inc
and
xor
mov
pop
test
xor
push
and
lcall
xchg
shrl
jmp
addb
out
lods
testb
adc
adc
insb
les
and
enter
adc
or
leave
loope
adc
pop
sbb
add
icebp
sbb
pop
push
add
xchg
call
jns
jb
cli
ret
xchg
jbe
cmp
add
test
mov
movb
in
add
aaa
pushf
sbb
add
cmp
or
cwtl
insb
mov
add
mov
inc
sub
fdivrl
mov
mov
iret
test
inc
add
pop
inc
add
xchg
arpl
xchg
test
dec
jne
pop
out
xchg
nop
adc
push
fs
add
fdivl
loopne
ljmp
adc
dec
rorl
xchg
cmp
inc
adc
add
dec
movb
popa
movl
ret
jg
shrb
cmc
xchg
and
ljmp
daa
bound
push
push
rolb
outsl
sub
mov
xor
inc
rcrl
scas
nop
pop
add
lret
rorl
dec
and
sahf
xchg
add
jmp
lods
in
test
jmp
jl
icebp
push
jp
xchg
js
loopne
clc
inc
add
xchg
lods
adc
test
mov
jg
dec
cmp
shr
popf
jecxz
push
add
mov
cmpsl
inc
add
lea
add
jle
xor
ljmp
ljmp
mov
dec
inc
mov
lods
clc
rcll
jl
add
cmp
mov
shrb
jecxz
lret
mov
popf
cmp
sbb
int3
cmp
inc
loopne
rolb
add
sub
xchg
fnstcw
fistpll
add
pop
ret
mov
nop
in
jle
stc
sbb
adc
xchg
jg
cmpsb
xchg
and
cmc
jnp
adc
mov
jae
shl
arpl
adc
pop
sbb
call
sub
pop
ffree
jns
mov
sub
push
add
jl
cmc
add
add
jb
aas
jmp
push
or
pop
jnp
shl
roll
pop
popa
xor
mov
and
inc
outsb
jmp
sbb
mov
mov
sti
nop
into
mov
pop
xchg
jge
sbb
cmp
jno
aaa
cmp
add
loope
sbb
cmp
xchg
add
or
aad
mov
call
add
and
sti
iret
mov
add
mov
sub
std
mov
je
adc
arpl
dec
scas
rorl
pop
xor
mov
add
xchg
and
add
jl
mov
push
xlat
cmp
in
add
cmp
mov
dec
xor
jp
add
ja
iret
mov
mov
xchg
js
add
mov
testb
mov
out
mov
push
icebp
adc
dec
pop
push
fwait
inc
add
add
xor
pop
mov
clc
push
mov
mov
pop
inc
jbe
add
sahf
inc
push
push
mov
inc
add
inc
add
mov
cmp
fcoms
xchg
pop
and
push
add
test
je
imul
sbb
loop
cs
cwtl
addb
jnp
lahf
inc
int
push
xor
leave
cs
call
mov
ljmp
add
out
fstpl
inc
add
leave
fldl
in
inc
lahf
mov
aad
cld
jecxz
mov
cmpsl
sub
jns
ret
pusha
add
xchg
scas
cmp
out
stos
xor
out
mov
lds
jbe
pop
mov
mov
fisttpl
fs
ret
fwait
hlt
jl
addb
aam
rcrb
in
sbb
in
mov
adc
repnz
ja
std
imul
hlt
and
rcll
iret
int3
push
mov
inc
add
mov
shr
jmp
je
cli
push
cwtl
repnz
fcomps
mov
add
lcall
fldt
aas
lock
stos
popa
mov
jns
add
or
adc
fmull
or
mov
out
xor
inc
add
and
ljmp
sbb
add
loope
add
movsb
dec
in
cs
test
xor
sub
and
mov
inc
fadd
add
cmp
xchg
les
insb
stc
mov
pop
icebp
pop
sbb
inc
lret
push
adc
ds
inc
add
sub
mov
aam
outsl
scas
jnp
xor
sbb
rcrb
inc
add
jnp
mov
and
sbb
aaa
push
or
xor
inc
or
pop
cltd
out
xor
mov
add
mov
lret
and
out
fs
pop
push
add
fwait
icebp
adc
dec
cmp
pop
icebp
push
mov
mov
add
in
mov
pop
jp
test
mov
adc
ds
aaa
clc
add
and
xlat
movb
sbb
insl
push
scas
push
mov
add
push
daa
xchg
in
cld
cltd
mov
movsl
push
adc
test
mov
sub
mov
sub
mov
lcall
ljmp
leave
jmp
xor
data16
inc
or
data16
xor
sbb
or
nop
mov
mov
push
sub
cmp
xor
add
cld
daa
mov
in
cmp
add
mov
add
xor
sub
imul
pop
in
cltd
icebp
clc
and
mov
push
jae
add
mov
ja
xor
or
dec
insl
test
sbb
aad
ljmp
cmpsb
or
sub
mov
filds
test
cld
fistpll
daa
cmp
mov
inc
add
pusha
add
add
add
loopne
rolb
into
cli
pop
jmp
lahf
pop
jno
fstpl
lods
mov
call
dec
cld
sub
sub
add
in
lahf
test
sbb
cmp
add
imul
mov
loopne
add
sahf
mov
js
negl
mov
xchg
xchg
jp
ljmp
in
addr16
jmp
xchg
ja
add
imul
rolb
push
mov
cld
dec
sub
add
test
push
mov
cmp
jns
sbb
loope
and
and
out
mov
push
pop
or
faddl
pop
or
dec
lods
dec
or
pushf
addb
mov
cmp
push
dec
sbb
bnd
pop
into
mov
mov
mov
cmc
movb
add
inc
add
inc
mov
inc
aas
leave
add
mov
outsb
lea
test
dec
inc
sbb
out
popa
adc
cld
icebp
mov
cmp
jbe
mov
or
fimull
sbb
pop
daa
mov
sub
orl
aam
repnz
pop
adc
arpl
aam
add
pop
icebp
clc
scas
xchg
xchg
xlat
mov
mov
pop
push
out
cmp
dec
into
mov
insb
mov
insl
daa
je
idivb
incl
sbb
lcall
stc
neg
aas
xchg
dec
test
ss
call
inc
out
rolb
mov
in
sbb
jge
push
sbb
adc
mov
add
add
add
out
scas
xchg
fucompp
push
fisubl
mov
fcomi
cmp
jmp
sahf
movsb
cmpsb
gs
bound
cld
or
add
sub
mov
bound
aas
mov
push
jp
js
pop
rolb
cwtl
or
xor
cmp
leave
xor
pop
iret
lods
mov
addb
add
inc
stc
icebp
int3
and
adc
add
adc
sbb
repz
add
inc
xchg
test
push
add
cmp
js
add
or
mov
repz
cmp
mov
or
out
xchg
imul
cmc
sub
lods
mov
add
cmp
xor
mov
ret
xchg
les
mov
mov
ljmp
idivl
lret
inc
and
mov
sub
jecxz
xchg
mov
or
lods
insl
cmpsl
fidivrs
xchg
mov
add
out
lea
mov
and
pop
fcmovnb
xchg
jecxz
bound
sbb
push
add
push
out
add
mov
and
notb
imul
lds
mov
addb
add
int3
bound
inc
jnp
rcrl
dec
sahf
cmp
xchg
mov
mov
cmp
xchg
sub
test
sbb
inc
add
cmp
std
mov
mov
pop
mov
sub
hlt
cmpsb
loopne
test
fsubl
or
and
sbb
out
add
pop
jae
and
jl
jg
out
hlt
adc
pop
imul
jbe
loope
ja
xchg
in
cltd
inc
lret
out
popf
in
nop
xchg
mov
jo
test
fildll
loop
call
mov
int
std
add
dec
iret
dec
xor
int
loope
lea
idivl
cmp
xor
push
jns
out
xchg
xor
in
inc
mov
fimuls
enter
or
add
dec
pop
pop
xchg
movsl
jno
js
pop
ds
mov
pusha
add
fcomps
out
push
out
xchg
or
mov
stc
adc
jmp
sbb
push
xchg
out
mov
sbb
add
mov
mov
pop
loope
add
add
or
iret
aad
testb
or
adc
data16
sub
jp
movsb
lock
xlat
adc
sbb
sbb
and
test
sbb
dec
add
pusha
add
jne
dec
cli
lea
sub
pop
mov
add
out
lret
dec
cld
aas
and
pop
ja,pn
push
loope
mov
xor
jecxz
lock
sbb
add
ds
out
clc
inc
add
sbbl
and
lret
ljmp
cmc
push
nop
pop
mov
cmc
lcall
pushw
xor
outsl
xor
cmp
aam
sub
cmp
xor
icebp
xchg
sahf
adc
jns
ffreep
js
sub
cmpsl
lret
lods
cmp
dec
ds
ret
ficomps
ja
dec
xchg
idivl
sub
dec
inc
add
adc
push
add
mov
mov
add
jno
arpl
push
outsb
mov
mov
gs
sub
psubb
lcall
ss
data16
aam
or
mov
jns
adc
movsb
pop
jp
cmpsl
in
not
cmp
xchg
push
pop
push
sub
mull
lods
iret
pop
mov
mov
add
cwtl
std
in
and
mov
mov
push
pop
cmp
iret
js
mov
add
out
mov
or
sbb
push
jl
inc
add
lea
mov
in
scas
inc
xlat
data16
sbb
movb
scas
idivb
imul
pop
clc
shlb
fists
xor
sahf
lods
shrb
insl
ljmp
add
negl
mov
test
iret
loope
add
sarl
add
ss
movsb
imul
mov
xor
test
add
and
cmp
les
pop
movsb
pop
pandn
call
cmp
incw
xchg
test
mov
xor
mov
push
add
pop
aaa
vprotw
movsl
adc
pusha
add
test
in
mov
fsubrl
sbb
mov
lret
cmpl
sbb
push
lods
lahf
jl
pop
mov
xor
ljmp
movsl
add
cmc
mov
add
lret
jg
adc
and
gs
fsubrs
cwtl
out
nop
jle
std
movsl
sub
push
add
dec
pop
sbb
xchg
jb
into
push
push
sbb
pop
push
insb
lcall
inc
je
xlat
xchg
mov
and
inc
add
mov
imul
les
int3
push
jo
loope
jg
add
lahf
les
fstl
inc
add
cmp
stos
repnz
cmp
leave
push
add
pop
pop
or
lret
psrad
out
mov
cmp
pop
lea
xor
enter
cs
xor
add
jp
adc
add
sbb
and
leave
xchg
jl
cmp
movsl
push
adc
mov
insl
sbb
mull
out
add
pop
in
je
imul
push
xchg
gs
adc
lock
in
sub
jmp
les
mov
aas
inc
aad
add
scas
add
fisttpll
sub
or
sbb
icebp
push
hlt
pop
sahf
es
andl
in
mov
jb
popa
hlt
mov
inc
add
lret
jbe
into
or
push
add
adc
jns
loope
cmpl
ret
mov
add
push
mov
mov
jmp
jno
xor
in
enter
pop
stc
xchg
add
xor
sub
ficompl
cld
insb
sti
jo
test
pop
jge
int
adc
cmpsl
adc
movb
clc
test
inc
add
and
mov
out
mov
mov
push
ljmp
in
add
jno
test
loopne
movb
mov
std
idivl
cmp
pusha
add
aad
les
or
sub
sub
pop
sub
and
xchg
jnp
out
mov
sub
add
std
jne
in
adc
add
daa
arpl
pop
stc
inc
pop
dec
jl
sub
add
movb
mov
and
fmuls
sbb
mov
mov
push
dec
test
test
pop
cmpsl
aas
stos
xor
inc
add
add
addb
add
cmpsb
mov
leave
daa
incl
orl
pop
sahf
dec
lcall
mov
mov
icebp
int
dec
clc
push
test
call
add
sbb
xchg
adc
jle
decl
or
jne
jecxz
lods
pop
insb
mov
mov
stos
mov
or
push
jle
insl
imul
arpl
pcmpgtw
sahf
out
aad
pop
jg
gs
sub
js
mov
enter
xchg
mov
sub
ficomps
repz
cmp
lret
cmpsl
pop
mov
enter
xor
xchg
sbb
cmpsb
aad
jbe
xchg
in
rep
repz
popa
mov
adc
xlat
imul
xor
lcall
insb
int
out
cmp
push
cwtl
inc
add
inc
add
push
mov
mov
and
mov
add
add
dec
push
push
pusha
add
aad
dec
mov
and
pop
outsl
xor
int
andl
pop
sbb
lret
adc
add
lods
cmc
push
jp
dec
je
rsqrtps
add
hlt
xor
in
in
pop
jo
push
and
add
sub
iret
dec
push
push
pusha
add
jecxz
inc
add
pop
and
loopne
sbb
data16
add
push
xchg
fs
add
gs
add
pop
cmp
gs
adc
cmp
stos
cmpl
add
and
and
nop
mov
lock
inc
add
mov
adc
mov
mov
push
gs
and
xchg
lahf
imul
imul
outsl
adc
dec
xor
hlt
sub
cmp
aaa
mov
inc
cld
cli
dec
out
inc
xor
stc
les
inc
shrb
inc
add
addb
sbb
gs
add
xor
in
xchg
dec
movl
pop
mov
add
in
push
add
stos
mov
xlat
testl
cmp
js
mov
add
dec
mov
sbb
pop
fcomip
pushf
in
xchg
mov
popa
mov
lret
cmc
sbbl
or
ror
or
or
cmp
lods
sbb
mov
dec
sbb
cmc
hlt
aaa
in
sub
add
sbb
hlt
mov
insb
add
into
in
and
out
add
test
cmp
sub
add
sbbl
pop
je
mov
sbb
or
add
pop
mov
dec
clc
jmp
fsubrl
and
dec
or
push
shlb
add
or
outsb
test
adc
xchg
fisubs
jl
jecxz
shll
pop
xor
insb
out
add
lea
pop
inc
xchg
icebp
dec
dec
sub
push
adc
mov
pop
scas
js
add
cltd
stos
test
pop
repz
mov
xchg
ljmp
decl
xor
inc
rep
loope
xchg
shll
gs
mov
dec
je
xchg
mov
mov
ficoms
sub
and
dec
int
sub
out
cmp
jp
add
mov
jmp
add
add
divl
mov
push
jg
lea
xor
and
stos
les
xchg
cmp
fldt
cmp
fimuls
in
and
add
mov
sub
add
pop
test
icebp
sbb
mov
mov
addr16
or
in
filds
add
stos
dec
adc
push
jb
push
call
push
out
js
inc
add
mov
mov
mov
scas
xor
add
add
fs
push
fdivrl
fbstp
xor
rolb
mov
cmp
jne
ret
mov
inc
int3
call
cld
mov
xchg
mov
jle
mul
sub
cld
arpl
inc
add
and
inc
push
add
add
mov
xor
hlt
jbe
and
sahf
in
inc
add
add
xor
cld
push
cmp
fists
rol
mov
inc
add
add
rolb
add
mov
scas
and
mov
adc
addb
fimull
mov
xchg
mov
loope
xchg
xchg
shll
nop
idivl
imul
test
pcmpgtd
daa
inc
add
sub
adc
adc
sub
or
or
or
add
xchg
das
mov
movsl
cmp
and
sub
push
clc
lahf
test
add
into
test
xor
add
cmpsb
lret
inc
add
mov
add
hlt
inc
add
mov
pop
mov
add
jmp
mov
repz
ret
and
sub
add
xchg
jge
jle
sbb
jmp
js
imul
jecxz
push
pop
test
fistpll
jmp
bnd
cmp
divb
push
push
and
add
mov
xchg
add
sbb
fisubs
pop
mov
mov
rcll
addr16
dec
xchg
into
ljmp
not
dec
aaa
inc
inc
add
addb
push
in
cmp
addl
cmp
push
add
add
add
xlat
ss
and
xchg
jl
pop
je
aad
es
or
loope
add
push
cmp
call
jno
daa
bound
addr16
orl
aas
icebp
or
lret
inc
add
inc
add
loop
leave
dec
and
mov
push
cli
mov
je
sbb
adc
test
add
outsl
ja
mov
fmuls
les
test
sbb
add
ljmp
insb
daa
inc
add
inc
add
aaa
movb
xchg
cmp
outsl
adc
mov
mov
mov
aam
adc
adc
push
mov
stos
out
shrb
cmpsl
jbe
push
into
jae
jbe
cmp
test
cmpsl
aad
jge
add
clc
xor
push
add
mov
pop
test
lods
sbb
jp
add
movsb
enter
les
shr
push
push
or
sub
jae
in
leave
or
enter
inc
add
clc
loopne
push
push
xchg
xor
fldl
push
or
push
mov
adc
fidivrl
mov
sbb
push
sub
rorl
inc
add
scas
push
sbb
jns
sbb
inc
add
or
jmp
sbb
xlat
mov
xor
inc
sbb
add
nop
cs
mov
dec
into
movsb
dec
fs
hlt
sbb
add
mov
mov
jp
xor
jns,pt
add
lock
pushf
int3
pop
xchg
aaa
data16
add
lahf
mov
dec
in
shlb
lret
aad
add
mov
push
lcall
pop
add
jo
fldt
hlt
push
jns
movb
loope
lea
mov
aad
loope
ss
cmp
aas
mov
test
adc
sbb
push
outsl
adc
ja
mov
test
dec
hlt
jmp
movb
inc
gs
into
and
in
xchg
xor
push
inc
push
loop
es
mov
fidivrl
inc
add
les
and
pop
test
loopne
loope
pop
push
and
mov
inc
outsb
hlt
cmp
add
lret
fadd
add
mov
cwtl
lods
xchg
cs
icebp
lcall
mov
inc
add
jae
pop
cmpsb
or
xchg
add
rorl
cmc
dec
lcall
add
xchg
out
cltd
lock
sub
call
ret
xchg
add
pop
mov
mov
mov
add
cmp
push
xchg
ficoms
jae
std
mov
outsb
mov
mov
mov
fmul
pop
lahf
xchg
repz
shrb
pop
daa
jp
sbb
jb
dec
xchg
cmp
clc
enter
aas
sub
jnp
inc
lcall
test
stos
imul
lret
and
add
add
sub
das
and
scas
aaa
out
fidivrl
je
cmp
add
add
xchg
cltd
lods
pop
mov
pop
sub
sar
fadds
xchg
test
xor
pop
or
or
aad
ljmp
or
dec
leave
pushf
pop
mov
cld
or
enter
ljmp
mov
test
ljmp
inc
push
push
ficoms
stc
cmp
xchg
call
adc
test
cltd
std
add
or
sub
out
and
xor
sub
xor
addb
or
in
int3
xchg
lea
cmp
movsb
push
add
movsl
cmp
jg
enter
sbb
sahf
mov
jb
mov
push
jmp
sahf
mov
sub
xor
add
fidivrl
addb
add
int
sbb
xor
mov
add
jne
cmp
mov
dec
out
xchg
outsb
loopne
mov
ljmp
dec
xchg
xor
aas
inc
add
es
ret
add
dec
lret
mov
mov
push
js
lret
add
les
inc
add
lret
fdivrs
xchg
inc
add
into
fdivrl
outsb
cli
push
pop
inc
add
push
je
xor
in
jecxz
adc
mov
mov
jae
sbb
and
lods
jnp
push
lret
in
add
dec
mull
imul
mov
jnp
ss
test
outsb
cmp
cmp
mov
jp
mov
fsubrl
sbb
bound
cmp
lcall
cs
push
pushf
xor
pop
mov
add
cmp
je
sti
out
adc
and
test
dec
pop
add
jns
fsubp
dec
jnp
in
out
mov
int
sbb
mov
add
das
sbb
mov
out
lea
add
call
cmp
xor
adc
pushf
lds
or
fwait
nop
mov
ds
add
sub
imul
mov
loop
xchg
mov
add
adc
xchg
inc
add
aas
cs
sub
sahf
push
loop
or
insl
ret
sub
outsl
addb
call
pop
into
aam
xor
or
jb
xchg
sbb
aad
push
aaa
addb
stos
addl
xchg
cmc
pop
xor
mov
rcrl
dec
movsl
icebp
dec
inc
add
pop
pop
repz
and
mov
cmp
add
ret
mov
rclb
sub
je
daa
mov
leave
mov
out
adc
in
stos
or
in
push
cltd
cltd
sub
call
push
int
cmp
loop
sbb
jne
dec
lret
lock
in
add
leave
call
sbb
outsb
push
data16
xor
insb
orl
repnz
add
ss
mov
push
add
fwait
je
jmp
add
pop
mov
loope
aaa
jae
add
add
ret
std
sbb
vpmacsdqh
mov
sub
lods
and
xor
and
aam
cwtl
js
add
xchg
mov
xchg
imul
fnstcw
sarl
push
sub
in
push
aad
cs
stos
int3
jp
xchg
lahf
fdivrl
push
add
in
pop
or
hlt
negl
inc
mov
add
cmpsl
push
cltd
aad
imull
adc
or
xchg
sbb
rcrb
pop
pop
xor
gs
adc
mov
and
dec
push
mov
mov
in
mov
xchg
pop
add
ret
pop
fstps
sub
pusha
add
mov
add
gs
jmp
aad
test
jbe
dec
movsl
std
push
std
out
lret
adc
xchg
cmp
arpl
enter
andl
stos
push
jl
jno
fstps
in
addb
outsb
ljmp
add
and
rcrb
mov
xlat
in
push
add
leave
add
or
xlat
mov
add
cmpxchg
mov
xchg
cmp
fs
lret
push
and
or
mov
push
add
out
add
xor
add
int
sub
sahf
in
or
cli
mov
adc
add
stos
in
sub
sbb
or
adc
add
mov
mov
sbb
lahf
inc
add
or
mov
push
out
pushf
mov
mov
vmovhpd
adc
scas
mov
mov
movb
inc
mov
jge
dec
mov
outsl
push
dec
test
cld
add
mov
fdivp
pop
xchg
push
addb
leave
test
les
addb
adc
out
int
pop
sub
cmp
sbb
xchg
scas
fidivrl
loopne
xor
ss
ret
js
loope
add
bound
es
scas
cmp
test
mov
jnp
cld
or
xchg
insb
inc
add
xchg
pushf
lahf
mov
dec
lods
pop
das
add
jae
xchg
jb
jmp
imul
notl
cwtl
xchg
jne
aad
cld
dec
and
mov
or
add
into
mov
aad
xchg
add
push
inc
add
cmp
pusha
add
leave
fsts
outsb
mov
lret
into
sub
cmp
sub
loop
int
add
xor
fs
jns
lcall
sbb
aam
aaa
cltd
out
dec
sbb
mov
inc
or
pop
or
cld
lret
or
xchg
or
rolb
inc
add
add
test
inc
add
inc
add
pop
mov
ds
push
xchg
hlt
xor
sahf
sub
add
add
cmp
and
scas
addb
and
mov
add
bound
fldl
add
out
mov
mov
adc
stos
movsb
sub
addb
and
mov
adc
jno
xchg
lret
sahf
pop
push
fdivrs
jns
jne
ret
cmc
in
and
addb
addb
xchg
shlb
jmp
dec
cli
inc
jnp
fwait
push
lock
out
ret
cs
jno
xchg
paddb
mov
add
cmp
push
aam
fistps
sub
mov
add
scas
mov
mov
add
adc
push
mov
pop
jbe
mov
xlat
je
rolb
inc
add
movb
scas
lods
xor
add
add
out
and
testl
add
inc
shrl
movb
movsl
addr16
adc
adc
ss
add
mov
les
sbb
addr16
or
addb
das
in
add
repnz
push
aas
mov
xor
jnp
mov
add
xchg
xchg
mov
out
pop
and
gs
and
sbb
int
xchg
dec
repnz
mov
xlat
fwait
mov
into
dec
adc
insb
sbb
repnz
xor
pop
out
xchg
sub
sbb
add
stc
movswl
mov
push
addr16
cmp
add
scas
xchg
addb
mov
sub
add
dec
cmpsl
jo
jmp
pop
sbb
push
and
sti
xchg
aam
jns
xor
mov
add
clc
jnp
push
xchg
adc
mov
cs
add
cltd
negb
jecxz
adc
jno
mov
push
cli
sbb
cmp
and
xchg
cmp
fidivl
jo
push
dec
add
inc
add
aam
dec
ds
push
or
jle
div
mov
adc
jo
popf
lods
imul
les
pop
cmpsl
fstps
ret
cmp
xchg
mov
neg
in
pop
movsb
mov
jnp
add
add
sti
in
and
movb
fstl
mov
repnz
xor
clc
in
mov
icebp
jge
add
jmp
or
mov
hlt
repnz
jb
add
pop
loopne
push
outsl
iret
xchg
cmpsb
sbb
add
out
in
divl
add
movb
mov
push
fsubrs
lcall
movsl
cmp
xchg
loop
add
jnp
inc
inc
add
leave
push
cmp
mov
leave
add
loopne
cltd
lahf
jno
push
and
push
xlat
inc
inc
inc
add
test
mov
xor
jbe
mulb
adc
inc
add
xor
jl
dec
ret
subl
add
test
add
or
push
rcll
call
push
mov
lock
and
int3
repnz
lock
dec
repnz
in
add
xchg
add
add
test
jno
jle
jmp
fldcw
sub
movsl
push
cmp
xchg
mov
mov
add
xchg
and
in
xor
scas
mov
mov
sub
mov
mov
mov
add
adc
or
js
add
stos
sub
xchg
sub
fs
push
xchg
push
jns
sbb
jmpw
add
mov
sbb
pop
ja
cmp
and
and
sbb
mov
fwait
pushf
dec
inc
lahf
decl
stc
addb
jnp
add
hlt
pop
inc
add
jb
add
insl
jae
leave
pop
jne
mov
es
std
lds
sub
mov
xor
pop
sbb
addb
add
dec
xor
add
push
out
mov
lods
cmp
adc
add
sbb
call
fs
fldl
out
mov
push
pushf
mov
mov
inc
dec
addb
stos
xor
xlat
in
fisubl
xchg
pop
ret
outsb
insl
lcall
add
ret
inc
add
mov
test
pop
jmp
mov
repnz
xlat
cs
in
inc
add
js
or
loop
sbb
add
lret
mov
int
push
jnp
bound
mov
jb
jnp
insb
ret
mov
jecxz
mov
mov
adc
mov
into
lcall
scas
jge
and
xchg
enter
add
aas
int
adc
loop
sub
daa
jbe
jmp
in
je
loop
inc
jae
test
sbb
ret
and
stc
push
cwtl
sahf
sub
push
mov
pop
cmp
cmp
aas
add
and
fsubp
shr
mov
hlt
add
lahf
dec
aas
rolb
sti
xchg
into
cli
scas
test
xchg
test
insb
cmpsb
sarl
xchg
cmp
jecxz
loop
xchg
mov
shl
ret
cs
jnp
in
xor
jp
ljmp
pop
imul
push
outsl
jo
leave
call
adc
and
sbb
xchg
jno
outsb
movsb
leave
mov
das
lods
mov
es
dec
daa
cld
pop
dec
push
jno
add
repnz
cmp
mov
xchg
adc
add
aas
addr16
xor
or
lcall
and
aaa
pop
add
ficompl
loope
jge
pop
xchg
int
sub
inc
add
push
mov
dec
movb
push
mov
ljmp
xlat
cmp
cltd
out
popf
aam
in
jge
add
push
les
pop
sbb
inc
push
leave
or
pop
mov
add
insl
xchg
addb
or
in
mov
movsb
std
mov
cmpsb
or
cwtl
negl
dec
movsl
dec
bound
sbb
cmpsb
push
mov
test
push
movsl
int
jo
pop
mulb
push
inc
add
imul
inc
add
lods
mov
pushf
movsl
pop
std
loop
add
jmp
notl
movb
push
cmp
outsl
xor
outsl
dec
sbb
mov
add
out
aas
xor
mov
lock
add
sub
dec
mov
jbe
mov
into
dec
lods
and
push
sub
stos
xor
insl
inc
mov
add
add
cmp
shl
ss
sbb
leave
sti
aaa
movb
and
shl
rorl
or
add
cmpsb
sti
or
out
and
movb
xchg
cmp
jns
sbb
in
push
add
mov
or
jecxz
pop
fidivrs
movsb
pop
popf
sub
lret
stos
inc
add
ret
out
movb
gs
sub
add
lea
jge
mov
imul
aam
add
rcr
dec
lods
popa
dec
jmp
fsub
push
add
pusha
add
push
loop
add
mov
sbb
add
aaa
loop
add
cmp
cs
inc
stc
jecxz
daa
test
movsb
push
push
cmpsb
push
lcall
push
in
fmuls
mov
ficompl
mov
lea
cmpsb
and
or
or
fbld
cmp
das
dec
ljmp
add
icebp
mov
or
pop
lret
ds
cmp
cmpsb
jp
sbb
add
sbb
fsubrl
int3
jge
fnstcw
aad
xchg
push
lds
pmaddwd
xchg
jmp
add
jb
dec
stos
sub
xchg
inc
cmc
es
adc
push
xchg
jo
ret
rolb
clc
mov
inc
mov
sbb
mov
cwtl
mov
xchg
sub
jmp
outsb
dec
outsl
push
rcll
movl
out
cmpsl
push
roll
dec
pop
dec
cli
mov
jmp
dec
mov
add
test
dec
fimuls
dec
ds
inc
repz
push
sub
ja
mov
dec
test
add
jns
cmp
mov
and
jnp
push
adc
and
repz
imul
imul
add
push
std
repz
out
and
pop
jge
incl
add
mov
adc
push
push
dec
cmp
xchg
sub
and
je
addb
jge
mov
cmpl
add
nop
dec
cltd
xchg
cmp
mov
dec
popa
adc
call
cltd
push
sub
mov
insb
sbb
xlat
sub
add
mov
dec
and
loope
int
push
icebp
inc
push
stc
rolb
icebp
fidivs
int3
pop
sbb
shrl
mov
pop
jg
psrad
es
cmp
xchg
mov
add
or
or
pop
cmp
leave
dec
or
je
dec
xor
nop
xchg
mov
shl
mov
add
pop
cmp
addl
testl
test
fbld
push
dec
test
mov
pop
fistpl
add
mov
lcall
xor
mov
push
dec
movsl
data16
jg
test
lods
call
xor
aas
fidivs
jmp
rolb
clc
sar
add
repnz
call
je
mov
stos
rcll
add
sub
std
jo
lods
mov
push
add
mov
pop
mov
mov
testb
inc
add
aas
sub
bound
pop
sub
cmp
mov
mov
repz
cmpsl
cmpsb
jno
out
xchg
insl
sbb
push
out
push
add
mov
push
sub
mov
mov
or
adc
add
add
daa
icebp
push
pop
mov
std
scas
push
popa
and
and
xchg
push
filds
add
mov
incl
add
cmc
cltd
inc
add
fsubl
and
aam
into
jns
push
adc
fsubl
add
iret
pushf
sub
jp
mov
adc
movsb
and
lahf
add
icebp
in
add
add
arpl
push
out
int
mov
sbb
mov
push
out
push
and
mov
dec
ret
adc
fwait
mov
xor
sbbl
sub
push
push
out
mov
std
popa
cltd
imul
xchg
or
sbb
mov
loope
xlat
xor
test
sub
xlat
mov
js
pmovmskb
push
add
xchg
push
cmp
inc
add
rcr
es
xchg
add
pop
inc
add
cmpsb
dec
scas
sbb
stos
daa
add
push
repz
xchg
jo
dec
lcall
std
aad
inc
push
mov
or
add
cmc
mov
test
imul
mov
or
sahf
jae
xchg
les
cmpl
sub
cmp
fstpt
add
inc
add
imul
pop
hlt
rorl
pop
into
pop
xor
adc
ret
sub
inc
ret
dec
fistl
maxps
outsb
push
mov
dec
cmp
push
and
icebp
decb
dec
sub
push
cwtl
pop
cmp
sbb
aas
shll
pop
cltd
cmp
mov
or
dec
xor
popf
rcll
cltd
ss
xchg
sub
lock
in
icebp
out
push
jge
sbb
jge
or
add
mov
jg
xchg
push
mov
add
repz
lods
lods
mov
xor
xor
adc
imul
pop
nop
popa
push
popa
out
rolb
pop
mov
das
adc
lahf
or
cwtl
mov
mov
lods
fs
sbb
adc
mov
jle
push
add
pop
out
das
adc
stos
fiaddl
push
add
jae
push
jo
jo
mov
insb
or
dec
push
repz
add
popa
iret
daa
rcll
add
jge
insl
lods
repz
jbe
outsb
dec
xor
adc
adc
add
xlat
int3
outsb
les
jmp
les
pop
fsts
sbb
sbb
lahf
loope
sbb
xor
movb
xor
xchg
out
mov
mov
call
cltd
insl
pop
jb
add
inc
adc
mov
cli
jg
aad
mov
daa
in
add
pop
mov
adc
aam
add
flds
in
les
jmp
add
ja
stc
adc
ljmp
push
mov
mov
add
clc
call
lock
dec
test
das
and
jne
ss
imul
popf
sbb
cmp
dec
inc
add
repz
push
sbb
mov
filds
mov
arpl
mov
xor
fildl
add
out
orl
push
dec
adc
dec
push
add
pop
mov
and
test
mov
dec
js
cs
cmp
hlt
add
push
in
and
fisubrl
or
adc
adc
xchg
jle
lahf
cmp
movsl
movsb
jge
push
mov
xchg
cmp
jmp
outsl
lahf
mov
ja
sbb
movsb
jmp
dec
addb
adc
mov
lret
adc
dec
inc
popl
xor
add
cli
popa
adc
cltd
add
int3
gs
addr16
xchg
lret
dec
fistpll
inc
fnstenv
add
loope
mov
xchg
and
test
fdiv
sbb
jecxz
fidivs
es
add
mov
es
jp
stc
lock
add
sub
dec
xchg
data16
into
lea
scas
pop
and
mov
and
test
fldl
je
xor
mov
cs
add
ret
mov
xchg
sbb
fwait
mov
cltd
dec
xchg
jnp
xchg
cmp
add
icebp
sub
popf
sbb
test
mov
fisttps
sahf
loope
mov
and
into
lahf
push
sub
push
dec
fstpt
mov
pop
outsb
movb
loopne
xchg
mov
lcall
sarl
or
and
enter
sbb
test
xor
cmp
push
cwtl
mull
add
shl
add
addb
repz
loop
sbb
jo
jae
clc
nop
shll
psubb
aas
rcr
xor
jns
mov
or
add
rcll
sbbl
inc
cmc
mov
bound
hlt
sub
add
mov
xor
ljmp
sbb
sbb
gs
lcall
test
and
xchg
dec
cli
jl
cmp
xchg
mov
cld
in
pop
add
push
popa
sbb
add
nop
and
xchg
movsl
out
movsb
dec
aam
dec
mov
adc
test
cmc
dec
sub
add
and
cmpsl
add
sub
sub
jl
push
out
test
ret
bound
mov
lock
movsl
push
movsl
or
scas
idivw
mov
out
add
movsb
or
int
adc
aam
mov
ret
mov
dec
movsbl
mov
cmpl
mov
or
int3
and
mov
xor
hlt
cli
mov
add
xor
push
js
addr16
and
and
pop
movb
push
inc
push
jp
jmp
mov
stos
mov
lret
push
mov
addr16
add
and
imul
add
add
pop
pushf
xlat
sbb
inc
add
pop
outsl
addr16
add
or
in
mov
ljmp
cmp
mov
addr16
add
sub
mov
mov
push
aam
or
cmpsb
push
mov
mov
push
add
outsl
and
loopne
jne
stc
xchg
popf
mov
push
add
movsl
movsb
jnp
add
pop
mov
outsl
jecxz
mov
and
pop
and
ljmp
jg
adc
adc
inc
fmuls
add
fmuls
in
mov
daa
icebp
aaa
arpl
xor
icebp
rcr
and
in
movsb
bound
xchg
adc
loop
pusha
add
pop
mov
cmpsb
out
inc
add
fcompl
jecxz
adc
adc
cmc
or
mov
mov
add
hlt
dec
inc
add
add
lret
adc
ret
int3
out
xchg
or
push
pop
jnp
into
xchg
imul
mov
shlb
mov
jbe
cmp
and
push
xchg
add
add
jmp
xorl
sub
cmp
mov
xchg
sti
or
fdivr
mov
mov
stos
stc
mov
cmp
lea
jnp
pusha
add
push
insb
lods
fisubl
add
movsl
mov
add
xchg
andl
scas
sbb
repz
sbb
in
add
shrl
nop
pusha
add
fs
push
mov
add
xchg
call
pop
ljmp
test
in
adc
pushf
pusha
add
in
jle
add
push
inc
add
jne
jl
dec
xor
aas
aas
iret
adc
test
mov
add
or
inc
ja
add
add
xchg
adc
add
mov
icebp
adc
fwait
cmp
fidivrs
sub
and
push
insb
sub
pusha
add
xor
aas
js,pt
or
outsl
sub
add
popa
shll
icebp
aam
and
mov
ljmp
ficoms
mov
mov
lret
das
inc
je
cmp
pop
test
adcl
xchg
push
decl
mov
sub
add
mov
fimull
sbb
add
repz
sbb
push
mov
sub
mov
aas
mov
movb
sbb
dec
aam
fists
das
push
push
add
lock
add
jmp
add
sbb
xor
out
adc
sbb
ret
push
mov
add
out
push
sbb
jne
rcl
call
xchg
movsb
mov
inc
add
adc
stos
repnz
jno
rolb
pop
cld
sbb
lea
sub
add
cmpsb
ret
sbb
ss
inc
pop
inc
aam
add
dec
pop
pop
lret
arpl
mov
xor
inc
add
incl
or
in
pusha
add
sub
add
cmc
stc
jl
or
ret
je
xor
push
adc
cwtl
xlat
sub
mov
lret
xchg
jb
jnp
neg
or
push
xor
add
in
in
adc
jb
in
cmpsl
cmp
jle
push
dec
call
fs
push
jmp
pop
cmpsb
xchg
and
xchg
neg
mov
jge
daa
xor
jg
sub
imul
and
fsub
fwait
je
icebp
das
into
test
test
xor
mov
cmp
sub
loop
mov
dec
rcll
pop
mov
mov
fwait
jne
loope
loopne
adc
test
mov
inc
push
das
add
lcall
jb
jb
pop
repnz
pop
sbb
xchg
js
mov
das
repz
and
add
aad
add
addb
dec
repz
imul
mov
out
andl
push
xchg
xchg
push
adc
stc
iret
repnz
mov
rolb
push
mov
push
sub
dec
rcl
mov
inc
xchg
jg
add
mov
data16
and
imul
addb
or
push
adc
negl
js
mov
xor
imul
push
js
fldcw
jmp
mov
add
cmc
adc
mov
jne
lock
cmpsb
push
pop
dec
xor
pop
or
ja
push
ficoms
pusha
add
add
and
sbb
cmp
and
mov
add
xchg
aam
xor
mov
dec
cltd
js
xor
mov
xchg
add
ror
pop
add
cltd
jb
dec
or
mov
add
out
jp
xor
add
sbb
out
push
ja
mov
iret
sahf
mov
or
cmpsb
adc
dec
jno
pop
xor
in
jo
jbe
add
add
call
gs
or
mov
inc
cmp
call
dec
scas
mov
ljmp
lock
add
enter
scas
push
add
cmpsl
dec
icebp
mov
add
and
fucom
mov
addb
in
jae
in
aas
int
push
pop
les
push
mov
movb
push
push
jg
out
pushl
jmp
outsl
addb
jmp
jp
jo
add
lds
rolb
adc
pusha
add
add
add
xor
test
mov
addr16
sti
sbb
test
add
cwtl
and
rolb
jne
out
lea
add
mov
and
push
add
sbb
xchg
mov
imul
ds
call
adc
roll
push
enter
outsb
fld
add
dec
mov
scas
pop
or
sub
jb
cmp
mov
outsl
jl
bound
fdivs
ret
es
or
add
dec
pop
cmpsl
adc
sbb
aad
aam
mov
sbb
adc
mov
iret
jne
pop
stc
mov
dec
jl
mov
xchg
shrl
nop
adc
call
pop
mov
sbb
and
arpl
ljmp
jle
cmp
add
pop
leave
pop
adc
cmpsl
mov
sub
repnz
cwtl
in
sbb
int3
push
push
sbb
sub
add
pop
jno
jo
add
inc
add
into
iret
jbe
fwait
movsb
outsb
notb
outsl
inc
add
loopne
add
clc
icebp
fdivrl
mov
and
lahf
or
jmp
dec
or
leave
lds
sub
inc
jne
ret
iret
inc
pop
mov
fnsave
out
rolb
cmp
add
movb
jle
nop
dec
testl
push
lret
inc
fistl
lret
pop
dec
push
pop
lods
mov
push
dec
mov
repz
xor
arpl
mov
ljmp
and
or
mov
jmp
movb
or
ljmp
sub
xchg
pushf
hlt
dec
xchg
fistpl
add
ficomps
lock
and
and
xchg
xchg
jnp
pusha
add
sub
addb
push
cmp
jne
and
int
xor
jle
fcmove
sti
sub
out
jl
or
stc
sbb
xor
pushf
jp
push
mov
mov
out
xor
mov
mov
mov
in
and
push
inc
cmpsl
xchg
cmp
add
sub
sbb
aas
inc
add
lret
mov
es
add
cmpsb
sbb
adc
incl
fidivrs
js
mov
out
ljmp
sbb
cmc
sbb
dec
pop
ds
into
jle
addr16
mov
and
ja
jl
movsl
jnp
xchg
xchg
push
mov
popa
jns
or
push
je
push
clc
dec
pop
or
popa
scas
pusha
add
add
jb
pusha
add
inc
add
je
push
mov
rolb
addb
cmp
mov
adc
cwtl
push
cmp
mov
inc
in
xor
xchg
fisubrl
add
and
js
mov
mov
nop
aam
out
out
aam
mov
xchg
cld
leave
mov
xlat
jb
cli
lcall
ret
xor
sbb
lret
insl
pop
mov
in
and
fidivs
mov
push
add
jb
iret
arpl
cld
ss
push
pusha
add
test
mov
sub
mov
pop
lods
sub
leave
inc
add
insl
adc
lret
repnz
adc
jle
dec
add
cli
mov
pop
sub
mov
fbstp
popf
popa
adc
or
xchg
adc
xchg
scas
fsubrs
adc
dec
xlat
xchg
push
xchg
xlat
jge
pusha
add
inc
aad
or
mov
repnz
sub
push
fwait
xchg
mov
and
sbb
subl
ja
cmpl
pop
aam
rcll
inc
add
fnstsw
fidivl
mov
ljmp
lds
add
pop
outsb
ds
inc
mov
jnp
xor
cmc
push
xchg
push
and
mov
pop
cmpsb
mov
push
add
movsl
mov
adc
leave
addb
out
add
call
orl
fwait
rcrl
repz
cs
iret
ss
mov
divl
push
add
dec
sub
lods
sub
stc
popa
cmpsl
push
lcall
sahf
push
out
sub
and
push
fstps
add
aaa
test
jo
mov
stc
mov
add
push
shl
gs
imul
xchg
or
adc
test
lds
lret
mov
mov
inc
ret
xor
mov
data16
add
outsb
push
pop
aaa
lods
outsb
dec
aam
or
cmp
pop
rcrl
xor
pop
inc
add
sub
pop
and
add
pushf
push
mov
nop
sbb
mov
shlb
mov
mov
call
sub
dec
lods
popa
xchg
sahf
loope
sbb
sahf
and
adc
push
add
jg
test
into
and
ficomps
mov
bound
dec
xchg
jmp
cmp
xchg
mov
daa
loop
xchg
xor
push
adc
scas
les
sahf
ret
and
mov
test
es
test
dec
jbe
add
mov
js
aaa
incb
add
add
lods
insl
cmpsl
rorl
sbb
mov
enter
push
dec
addb
addb
push
or
xor
mov
cmp
or
add
les
mov
test
push
into
adc
xor
ds
test
xlat
test
add
sub
add
add
call
mov
fs
add
movb
loop
pop
aad
xor
or
imul
adc
xchg
adc
inc
cli
mov
adc
aad
jae
xchg
aam
and
sbb
cmp
add
loopne
data16
es
cmpsb
outsl
fildl
je
cmp
loope
outsb
andl
lds
add
dec
xor
fmull
pop
add
mov
xor
icebp
ss
js
ljmp
icebp
gs
add
ljmp
js
dec
mov
mov
add
and
pop
gs
or
dec
add
test
loopne
imul
cmc
je
popf
and
cwtl
ljmp
lods
cmpsb
add
out
or
push
add
push
fistpll
xor
xchg
add
sbb
lahf
shll
inc
add
outsb
adc
inc
add
in
xlat
cmp
add
les
mov
adc
test
xor
add
lcall
sbb
out
pop
push
popa
mov
add
shrl
mov
cltd
xchg
js
mov
sub
xchg
lcall
mov
dec
ds
adc
mov
xor
inc
les
lret
mov
pop
imul
mov
add
lret
insb
fimuls
je
mov
rol
iret
aaa
int3
sbb
lods
repz
fisubs
jo
add
jecxz
cltd
inc
addb
add
mov
mov
jbe
pop
inc
add
xchg
cs
adc
dec
push
fnsave
add
je
add
inc
add
mov
inc
add
or
fdivrp
ja
add
fs
jo
dec
and
cmp
mul
dec
std
orl
inc
add
push
add
pxor
xor
std
test
pop
mov
addb
dec
cwtl
loop
dec
mov
int
andl
pop
stos
lods
out
jo,pn
mov
test
repnz
mov
pop
push
sbb
jnp
adc
push
inc
add
push
push
sbb
pop
insb
inc
nop
clc
xor
pop
stos
das
mov
add
sbb
loopne
add
arpl
add
push
inc
scas
popa
mov
std
adc
addr16
xchg
mov
in
lods
xchg
cmovno
int
push
or
inc
add
test
inc
add
add
lea
aad
in
mov
outsb
data16
cmp
adc
xchg
or
cli
sarb
test
cmp
ret
fistl
ja
cmp
add
jl
test
add
add
das
sahf
mov
adc
mov
ret
lods
mov
rorl
mov
sbb
es
loopne
add
mov
mov
and
add
pop
addr16
adc
add
xchg
insl
int
andl
movsb
pop
mov
add
insl
insb
aaa
call
test
std
aad
xchg
jl
neg
aam
mov
add
jmp
bound
movb
les
jo
addr16
add
add
addb
inc
add
rol
xor
in
pop
fstps
xor
sbb
js
call
repnz
fldcw
pop
popf
inc
arpl
push
sbb
mov
sbb
mov
leave
data16
xchg
movb
sbb
mov
repnz
push
imul
dec
push
jecxz
cbtw
pusha
add
and
movsb
pusha
add
or
mov
jo
sbbl
fdivrs
xchg
loope
xor
ljmp
pusha
add
add
movsl
xchg
mov
shlb
lods
cmp
push
shr
imul
ljmp
repnz
push
xchg
fwait
ret
add
add
sahf
xor
lods
fidivrs
pushf
mov
in
imul
lock
xchg
fldt
aas
iret
in
add
inc
imul
in
das
sbb
test
xor
add
mov
leave
inc
insb
cmpsl
dec
cli
insb
pop
daa
pop
out
pop
fcomi
fiadds
add
add
dec
push
add
aaa
leave
add
fildll
cltd
add
inc
jmp
or
adc
mov
hlt
sbb
mov
out
pop
mov
sbb
cltd
sti
std
fs
js
cmpl
test
dec
repz
push
add
xchg
testl
cwtl
sub
les
ret
xchg
mov
mov
movntq
enter
lds
pop
jno
dec
dec
inc
js
pop
imul
aas
xchg
push
fnsave
add
loopne
fwait
ds
fcomip
add
xchg
jg
dec
lds
cmp
push
cmp
shll
jae
outsl
cmp
push
arpl
dec
dec
jle
sbb
pusha
add
ljmp
mov
pop
xchg
imul
jmp
loope
je
je
fcompl
jns
out
mov
notl
frstor
add
scas
repz
test
add
inc
add
nop
es
add
bound
ljmp
mov
or
jmp
push
mov
xchg
ret
add
add
add
add
mov
inc
add
add
es
gs
xchg
cwtl
add
add
mov
xchg
ret
shl
push
add
push
inc
add
xchg
stc
nop
es
add
sbb
cld
add
push
stc
nop
es
lahf
push
fsubrs
rcll
std
inc
add
mov
xor
add
nop
cld
nop
jmp
mov
add
add
aas
xor
stc
add
push
mov
xchg
ret
push
add
pop
mov
stc
nop
es
mov
cmp
stc
nop
es
pushw
or
add
mov
stc
nop
es
das
out
rcrb
ret
jne
stc
nop
es
add
call
stc
nop
es
add
jo
mov
stc
nop
es
add
push
add
jmp
daa
push
add
stc
nop
es
das
sub
lods
stc
nop
es
das
mov
out
mov
mov
xchg
ret
add
jmp
or
add
stc
nop
es
push
fisubrl
subb
add
push
mov
mov
add
mov
lret
or
nop
cld
nop
jmp
shlb
or
xchg
call
and
incb
add
sub
push
mov
xchg
ret
add
das
sub
stc
nop
es
sbb
lods
add
mov
stc
nop
es
add
add
push
cwtl
push
stc
nop
es
sti
dec
movb
data16
rclb
cli
inc
add
std
outsl
mov
push
mov
xchg
ret
cwtl
negb
fbld
popa
add
mov
xchg
ret
add
xchg
jnp
loop
nop
cld
nop
jmp
add
add
stc
nop
es
add
inc
push
mov
xchg
ret
cwtl
add
add
push
repnz
cmp
nop
cld
nop
jmp
pop
add
xor
and
nop
cld
nop
jmp
das
cwtl
out
add
push
stc
nop
es
add
bound
pop
ret
stc
nop
es
jmp
add
mov
stc
nop
es
mov
ffree
jmp
jb
add
add
aad
add
stc
nop
es
cld
jmp
add
lea
cld
nop
jmp
std
cld
add
call
stc
nop
es
push
mulb
mov
nop
es
fimull
add
add
sub
arpl
jae
nop
es
sldt
addr16
in
add
push
mov
xchg
ret
lahf
dec
add
mov
nop
cld
nop
jmp
std
test
stos
pop
push
mov
xchg
ret
sbb
add
mov
enter
es
test
mov
stc
nop
es
movb
push
push
mov
xchg
ret
test
pop
xchg
push
cmpsb
dec
pop
stc
nop
es
push
add
nop
es
lret
outsl
adc
lret
or
nop
es
add
add
fmull
mov
adc
cld
nop
jmp
sbb
add
es
loopne
popa
stc
nop
es
add
lret
add
or
nop
es
add
cmpsl
mov
stc
nop
es
gs
push
in
mov
push
mov
xchg
ret
add
dec
dec
mov
stc
nop
es
add
cld
nop
jmp
add
fisubrl
enter
es
add
add
das
movzwl
nop
cld
nop
jmp
cwtl
cmp
stc
nop
es
dec
add
xor
push
mov
xchg
ret
add
add
add
add
nop
es
jo
push
stc
nop
es
add
rolb
or
ret
add
adc
incb
loope
std
pop
add
rolb
sahf
push
out
mov
stc
nop
es
sbb
add
stc
nop
es
les
add
mov
nop
cld
nop
jmp
sub
outsl
icebp
mov
xor
add
stc
nop
es
push
cltd
xor
stc
nop
es
sub
add
push
mov
xchg
ret
mov
imul
add
or
add
fcmovbe
repnz
add
add
stc
nop
es
adc
inc
push
decl
cmp
inc
add
aaa
mov
cld
nop
jmp
sub
add
mov
icebp
nop
cld
nop
jmp
jg,pn
lahf
xor
es
add
add
jmp
test
mov
stc
nop
es
das
sti
add
push
add
nop
es
add
nop
es
adc
mov
nop
es
add
cmpsl
call
xor
add
stc
nop
es
insl
push
push
mov
xchg
ret
add
lahf
add
cmc
push
mov
inc
nop
cld
nop
jmp
add
add
loopne
nop
es
notb
add
out
xor
stc
nop
es
add
add
das
and
stc
nop
es
aaa
add
aaa
fisttpl
jecxz
add
inc
lret
jno
pop
nop
cld
nop
jmp
push
push
data16
outsb
decl
stc
nop
es
add
push
add
jbe
stc
nop
es
push
add
mov
stc
nop
es
add
cmpsb
sarb
arpl
stc
nop
es
add
lock
div
and
add
add
nop
es
data16
mov
nop
cld
nop
jmp
add
push
add
mov
add
nop
cld
nop
jmp
xchg
mov
nop
es
add
sbb
mov
add
cld
nop
jmp
cld
or
mov
fmull
nop
es
out
sub
mov
cmp
mov
xchg
ret
fiaddl
add
inc
pop
dec
push
stc
nop
es
add
add
sub
pop
stc
nop
es
mov
push
add
nop
es
push
sbb
add
nop
es
or
push
stc
nop
es
add
in
cmp
nop
cld
nop
jmp
add
add
add
ja
sbb
jb
add
mov
sahf
std
add
stc
nop
es
xchg
add
nop
es
add
lret
push
stc
nop
es
add
and
push
mov
xchg
ret
add
jno
mov
cld
nop
jmp
add
push
add
mov
jb
add
push
xor
nop
cld
nop
jmp
add
mov
dec
cmp
nop
es
push
xlat
imul
jmp
jg
adc
out
xor
outsl
popa
fs
nop
es
add
adc
nop
es
cld
mov
mov
xchg
ret
imul
add
add
stc
nop
es
add
add
gs
jb
xchg
add
add
add
mov
xchg
ret
add
add
mov
stc
nop
es
add
add
sti
cltd
mov
stc
nop
es
add
inc
add
adc
mov
stc
nop
es
sahf
aaa
add
jle
test
nop
es
xchg
rcr
mov
stc
nop
es
adc
rclb
xchg
pop
mov
stc
nop
es
add
mov
push
mov
xchg
ret
sub
add
sti
xorl
addr16
es
mov
dec
add
nop
es
cld
cwtl
add
sbb
stos
nop
cld
nop
jmp
add
add
aaa
mov
testl
add
jmp
stc
nop
es
add
stc
nop
es
push
add
mov
nop
cld
nop
jmp
add
cmp
cld
nop
jmp
xchg
add
push
push
inc
fcoml
mov
xchg
ret
sti
cwtl
add
add
mov
push
mov
xchg
ret
lods
add
outsl
rolb
pop
nop
cld
nop
jmp
add
add
add
sti
cli
pop
stc
nop
es
add
add
cli
add
nop
cld
nop
jmp
add
add
out
add
xor
mov
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
add
add
movsl
roll
adc
mov
stc
nop
es
cld
add
jmp
add
stc
nop
es
add
pop
mov
nop
cld
nop
jmp
sti
cmpsl
lahf
cmpsl
sti
push
test
nop
es
jae
sahf
outsl
add
add
mov
xchg
ret
out
cmpsl
add
pusha
stc
nop
es
push
add
add
mov
call
cld
nop
jmp
add
mov
jb
nop
cld
nop
jmp
aaa
push
add
cmp
inc
add
add
rdmsr
test
push
mov
xchg
ret
add
scas
push
stc
nop
es
add
add
add
stc
nop
es
mov
stc
nop
es
add
add
add
cmp
mov
xchg
ret
add
add
mov
xchg
ret
mov
pop
stc
nop
es
jmp
adc
cld
nop
jmp
add
sti
add
add
inc
add
mov
nop
cld
nop
jmp
sbb
nop
es
std
add
jbe
add
jb
lret
add
aaa
add
es
adc
mov
add
add
stc
nop
es
push
add
sahf
add
cmp
gs
nop
es
add
jg
loopne
nop
cld
nop
jmp
add
mov
clc
add
push
mov
xchg
ret
add
es
push
add
stc
nop
es
mov
ja
add
push
mov
xchg
ret
cmpsl
add
clc
mov
nop
cld
nop
jmp
cmp
mov
nop
cld
nop
jmp
mov
mov
stc
nop
es
pushf
call
stc
nop
es
add
fstl
mov
xchg
ret
add
test
add
es
cs
adc
stc
nop
es
cld
add
out
mov
into
push
stc
nop
es
add
nop
cld
nop
jmp
std
add
sti
push
lahf
mov
es
repz
mov
add
stc
nop
es
add
stos
jne
stc
nop
es
add
int3
pop
stc
nop
es
jae
add
add
mov
stc
nop
es
pop
shrl
test
nop
es
das
mov
jbe
inc
add
add
adc
nop
es
add
fiaddl
mov
push
mov
xchg
ret
call
cmp
cld
nop
jmp
add
sbb
rolb
add
hlt
mov
es
add
add
add
and
stc
nop
es
add
mov
call
stc
nop
es
fimull
mov
xchg
ret
xor
jb
mov
nop
cld
nop
jmp
or
mov
xor
add
stc
nop
es
xchg
push
add
nop
jmp
push
sahf
sbb
lahf
lahf
xchg
testb
cld
nop
jmp
fiaddl
dec
loope
mov
stc
nop
es
add
jg
popa
add
nop
es
push
add
adc
push
nop
cld
nop
jmp
xchg
add
rclb
nop
es
outsl
xchg
sahf
push
add
cld
add
stc
nop
es
add
rcrb
push
push
mov
xchg
ret
add
add
pop
add
nop
cld
nop
jmp
adc
psllq
incl
repz
sti
popa
stc
nop
es
out
jae
add
nop
es
add
dec
push
mov
add
add
push
add
jp
or
loop
insl
mov
push
mov
xchg
ret
add
add
mov
pop
stc
nop
es
add
cmp
jne
stc
nop
es
or
adc
nop
es
cld
mov
pop
aam
pushf
mov
stc
nop
es
paddw
add
add
mov
push
mov
xchg
ret
add
jg
nop
cld
nop
jmp
add
jmpw
rclb
xchg
out
inc
add
repz
stc
nop
es
adc
cmp
stc
nop
es
call
aaa
aaa
hlt
in
add
stc
nop
es
xchg
xchg
std
add
pop
fstps
nop
es
add
mov
add
out
leave
stc
nop
es
add
xor
push
stc
nop
es
add
shlb
lcall
ret
xor
jle
stc
nop
es
add
adc
call
stc
nop
es
sahf
add
dec
mov
stc
nop
es
jmp
push
mov
xchg
ret
cmp
adc
push
stc
nop
es
movb
add
mov
iret
or
inc
add
or
nop
es
add
popa
stc
nop
es
loope
call
ljmp
jb
add
repz
xchg
fisttpl
cld
nop
jmp
fisubrl
out
mov
jmp
add
sahf
cmpsl
add
popf
nop
cld
nop
jmp
loope
das
call
lods
pusha
stc
nop
es
incb
add
jae
dec
xor
stc
nop
es
aaa
add
out
push
push
mov
xchg
ret
repz
add
jb
add
mov
nop
es
cmpsl
xchg
jae
push
sbb
add
jge
stc
nop
es
add
mov
cld
nop
jmp
xchg
dec
dec
add
add
jmp
stc
nop
es
push
add
xchg
cld
std
shr
nop
cld
nop
jmp
incb
cmpsl
repz
shr
stc
nop
es
mov
add
cmp
popa
add
add
stc
push
add
ja
jb
fiaddl
jmp
lret
push
mov
xchg
ret
add
adc
xor
stc
nop
es
lods
and
add
nop
cld
nop
jmp
xchg
add
pusha
stc
nop
es
dec
add
lret
push
push
mov
xchg
ret
add
cmp
cmp
stc
nop
es
xchg
jo
add
es
add
add
cwtl
mov
mov
push
mov
xchg
ret
out
add
pop
nop
cld
nop
jmp
add
dec
xchg
out
push
or
add
nop
es
fucompp
inc
add
nop
es
add
movb
fldl
cld
nop
jmp
loope
add
pop
mov
stc
nop
es
add
fs
testb
cmp
ret
add
add
pop
mov
stc
nop
es
add
dec
call
stc
nop
es
add
pop
nop
cld
nop
jmp
xchg
fisubrl
pusha
stc
nop
es
add
cmpsl
test
dec
push
mov
xchg
ret
add
add
mov
nop
es
xchg
call
jnp
les
cld
nop
jmp
push
pop
add
cmc
sbb
cld
nop
jmp
std
sahf
dec
pop
add
cs
nop
es
add
add
mov
es
xor
adcl
add
add
nop
es
jmp
jb
cs
push
add
nop
cld
nop
jmp
mov
stos
mov
stc
nop
es
out
and
nop
cld
nop
jmp
lods
add
mov
stc
nop
es
add
add
sbb
jge
nop
cld
nop
jmp
add
add
xchg
xor
nop
es
mov
add
sbb
nop
es
cmp
movzwl
stc
nop
es
add
add
les
mov
xchg
ret
add
xchg
inc
add
jb
add
add
lods
sti
filds
push
std
inc
add
out
adc
pop
pushl
stc
nop
es
add
add
xor
nop
cld
nop
jmp
lret
add
mov
stc
nop
es
add
add
es
add
add
sahf
xchg
xor
add
add
nop
es
add
popf
test
push
mov
xchg
ret
add
push
add
rep
stc
nop
es
add
add
push
xor
hlt
xchg
enter
cld
nop
jmp
push
add
sti
sti
outsl
iret
je
nop
cld
nop
jmp
fisubl
nop
jmp
add
add
push
rdpmc
or
inc
or
nop
es
add
add
add
stc
nop
es
sti
push
xchg
add
cmp
nop
jmp
add
paddd
in
add
rolb
push
jmp
pusha
stc
nop
es
add
add
add
addb
xchg
dec
mov
stc
nop
es
add
add
repnz
scas
imul
stc
nop
es
adc
add
inc
stc
nop
es
sbb
sti
maxps
jg
or
nop
es
lret
mov
add
in
inc
add
cmpsw
add
fldl
nop
es
out
mov
add
sub
push
push
mov
xchg
ret
xchg
add
jae
jmp
cld
nop
jmp
add
add
dec
pop
stc
nop
es
add
cld
xchg
out
push
gs
jne
adc
nop
cld
nop
jmp
add
xchg
add
and
add
push
jmp
jb
sahf
add
xchg
mov
nop
jmp
fiaddl
add
arpl
add
out
incl
cld
das
jnp
movb
nop
es
cld
sti
mov
enter
data16
nop
es
add
and
add
stc
nop
es
add
push
mov
add
nop
es
cwtl
add
add
nop
cld
nop
jmp
add
add
incb
les
les
or
popa
add
mov
xchg
ret
add
xor
push
leave
xor
push
mov
xchg
ret
add
call
mov
xchg
ret
test
das
ret
stc
nop
es
add
add
pop
mov
stc
nop
es
str
mov
jne
stc
nop
es
incb
add
push
mov
xchg
ret
add
push
les
push
xor
es
add
add
sahf
inc
fisttps
add
nop
es
std
jne
adc
add
jl
and
jp
inc
add
add
jmp
stc
nop
es
std
mov
add
call
stc
nop
es
sti
mov
mov
stc
nop
es
or
and
cld
nop
jmp
add
add
adc
nop
es
sti
lods
jmp
clc
add
stc
nop
es
add
jne
stc
nop
es
add
add
nop
es
or
sub
es
sub
mov
push
mov
xchg
ret
ficompl
in
mov
stc
nop
es
fsubs
xor
add
stc
nop
es
sub
repz
add
add
add
and
les
xor
push
stc
nop
es
fiaddl
testb
jne
stc
nop
es
add
mov
xchg
ret
add
gs
mull
sub
stc
nop
es
add
push
loope
cmp
push
mov
xchg
ret
add
add
add
stc
incl
add
xchg
mov
stc
nop
es
out
dec
add
add
mov
xchg
ret
call
mov
push
mov
xchg
ret
xchg
lahf
add
push
push
mov
xchg
ret
dec
add
lahf
add
iret
add
stc
nop
es
mov
sti
test
nop
cld
nop
jmp
mov
push
mov
xchg
ret
out
add
pop
call
or
add
or
cld
nop
jmp
add
push
mov
sbb
mov
xchg
out
and
mov
xchg
std
add
push
mov
xchg
ret
decb
mov
stc
nop
es
rep
mov
stc
nop
es
add
lcall
add
add
add
xor
adc
nop
es
lahf
add
repnz
movb
cld
nop
jmp
out
add
or
aaa
dec
mov
stc
nop
es
les
pop
dec
xor
push
mov
xchg
ret
add
dec
nop
cld
nop
jmp
add
add
idiv
mov
jg
stc
nop
es
sahf
push
lret
mov
mov
xchg
ret
loope
shl
add
add
mov
xchg
ret
or
popf
mov
stc
nop
es
sbb
add
cmp
cmp
nop
es
push
jmp
in
nop
es
lods
xchg
cmpsl
xor
es
cld
mov
orl
repnz
incl
dec
add
adc
add
mov
stc
nop
es
mov
push
mov
es
data16
fiaddl
les
adc
rolb
nop
es
cs
xchg
dec
mov
stc
nop
es
data16
mov
add
and
dec
jae
push
stc
nop
es
call
dec
imul
es
push
add
add
mov
nop
cld
nop
jmp
add
cmp
jb
jg
fisubrl
sub
xor
stc
nop
es
add
rol
and
adc
add
add
nop
es
das
out
add
stc
nop
es
mov
push
mov
xor
loopne
mov
testb
ret
or
nop
es
add
sub
add
add
es
add
mov
mov
stc
nop
es
mov
jne
stc
nop
es
sub
mov
stc
nop
es
cld
add
cld
loopne
cmp
push
mov
xchg
ret
push
shlb
sbb
jmp
nop
es
add
push
xchg
outsb
jb
stc
nop
es
push
add
dec
pushl
stc
nop
es
xchg
jmp
sar
cld
nop
jmp
add
mov
nop
es
add
add
rolb
add
pop
jae
cld
nop
jmp
add
add
mov
stc
nop
es
xchg
inc
add
out
shl
nop
cld
nop
jmp
cld
add
add
dec
pop
push
mov
xchg
ret
dec
cmpsl
movb
push
jne
stc
nop
es
push
call
stc
nop
es
add
in
mov
stc
nop
es
cmpsl
es
nop
jmp
xchg
push
jg,pn
add
mov
stc
nop
es
pop
add
add
jmp
repz
nop
es
add
jmp
push
mov
xchg
ret
outsl
add
loope
mov
push
mov
xchg
ret
add
sbb
lock
rclb
stc
inc
add
ficompl
add
push
mov
xchg
ret
add
outsl
push
movq
stc
nop
es
add
addl
nop
jmp
add
mov
add
mov
push
mov
xchg
ret
mov
stc
nop
es
dec
aaa
add
sti
add
xchg
mov
stc
nop
es
cld
les
movb
fnstsw
stc
nop
es
lods
add
sti
push
stc
nop
es
push
sahf
dec
mov
nop
cld
nop
jmp
add
les
dec
push
nop
cld
nop
jmp
add
incb
sub
push
mov
popl
add
add
add
add
test
nop
cld
nop
jmp
add
dec
add
sti
stc
nop
es
fiaddl
add
arpl
rclb
sub
inc
add
sahf
add
mov
stc
movswl
stc
nop
es
add
push
pop
mov
stc
nop
es
add
add
nop
jmp
add
add
push
sub
nop
es
add
ficoml
std
rep
push
mov
xchg
ret
push
add
dec
mov
nop
es
add
or
xchg
rorl
push
stc
nop
es
add
das
add
xchg
jo
jne
stc
nop
es
jnp
mov
shll
mov
add
add
out
push
add
add
stc
nop
es
push
test
inc
adc
nop
es
loope
add
es
add
add
push
mov
xchg
ret
cpuid
add
push
stc
nop
es
push
cmpsl
movq
add
pop
aas
je
stc
nop
es
sti
dec
xor
push
mov
xchg
ret
add
add
xor
repnz
jb
movb
add
out
je
stc
nop
es
xchg
xor
add
stc
nop
es
rolb
xor
je
nop
cld
nop
jmp
ficoml
pop
movzwl
stc
nop
es
add
mov
jecxz
add
or
pop
dec
mov
stc
nop
es
add
add
add
stc
nop
es
add
push
dec
loop
aas
jne
stc
nop
es
std
rcrl
push
mov
xchg
ret
add
add
das
or
push
idiv
stc
nop
es
add
mov
push
mov
xchg
ret
add
lret
lods
inc
mov
xchg
pop
mov
nop
cld
nop
jmp
add
sti
push
stc
nop
es
add
xchg
add
pop
mov
xchg
ret
push
add
decl
push
mov
xchg
ret
add
add
mov
stc
nop
es
inc
add
dec
sub
nop
es
or
add
mov
dec
nop
cld
nop
jmp
add
add
sti
add
add
sti
std
jmp
push
mov
xchg
ret
add
add
mov
stc
nop
es
push
add
sbb
push
out
add
add
dec
push
push
mov
xchg
ret
dec
xchg
add
add
jmp
stc
nop
es
add
out
push
nop
cld
nop
jmp
xchg
repz
add
add
push
xor
stc
nop
es
mul
outsl
jg
test
add
nop
cld
nop
jmp
add
and
push
mov
xchg
ret
add
add
adc
dec
call
stc
nop
es
mov
testl
jb
add
xchg
and
repz
mull
sbb
mov
xchg
ret
push
mov
pop
nop
cld
nop
jmp
add
push
add
repz
cmp
jmp
jp
nop
cld
nop
jmp
rcrb
rcrl
es
incb
incb
add
adc
and
stc
nop
es
outsl
les
push
add
stc
nop
es
add
adc
gs
stc
nop
es
add
push
add
add
dec
add
stc
nop
es
incb
cmpsl
fidivrl
sub
stc
nop
es
push
ss
rep
stc
nop
es
or
push
sub
dec
je
stc
nop
es
das
movb
leave
jne
stc
nop
es
add
cld
nop
jmp
add
add
lahf
dec
push
nop
cld
nop
jmp
add
add
je
xor
stc
nop
es
add
mov
stc
nop
es
outsl
push
add
stos
add
push
mov
xchg
ret
add
or
test
out
stc
nop
es
add
push
mov
xchg
ret
incb
xchg
cmp
cld
or
jmp
add
das
push
push
mov
xchg
ret
add
push
add
sahf
les
stc
nop
es
add
mov
add
dec
mov
jns
stc
nop
es
add
cmpsl
xchg
cmpsl
push
cmpsb
xor
add
stc
nop
es
mov
push
push
addb
stc
nop
es
xor
mov
xchg
ret
jg
jmp
mov
stc
nop
es
add
add
jmp
add
xchg
ret
sbb
add
add
mov
nop
cld
nop
jmp
push
add
adc
nop
cld
nop
jmp
repz
sti
lods
ficompl
mov
jmp
nop
cld
nop
jmp
add
add
add
stc
nop
es
add
pop
add
add
nop
cld
nop
jmp
divb
xor
stc
nop
es
push
add
fiaddl
adc
lods
push
mov
xchg
ret
add
add
push
mov
xchg
ret
gs
loope
cmp
mov
xchg
ret
lods
add
add
xor
push
mov
xchg
ret
cwtl
std
cld
pushf
pushl
nop
cld
nop
jmp
adc
sti
pop
cmp
es
cld
push
cwtl
add
cmc
dec
shl
nop
cld
nop
jmp
add
cmpsl
add
add
add
les
nop
es
data16
sbb
nop
es
add
add
lahf
mov
stc
nop
es
add
je
push
nop
cld
nop
jmp
mov
ficompl
add
add
std
incl
fisttps
test
in
stc
nop
es
cli
sub
nop
cld
nop
jmp
add
stos
rep
stc
nop
es
add
add
add
sub
stc
nop
es
add
sarb
mov
stc
nop
es
add
push
push
mov
xchg
ret
add
das
shrb
insb
add
nop
es
mov
mov
push
mov
xchg
ret
add
add
daa
icebp
add
add
add
mov
in
jp
cmpl
push
repnz
incl
addb
mov
sub
in
add
add
mov
lcall
pop
mov
stc
nop
es
add
add
add
add
push
mov
xchg
ret
das
out
arpl
push
mov
xchg
ret
add
add
push
dec
mov
stc
nop
es
add
add
mov
push
mov
xchg
ret
std
gs
leave
nop
cld
nop
jmp
xor
add
lea
stc
nop
es
add
add
adc
pop
call
nop
cld
nop
jmp
add
outsl
js
add
nop
es
add
test
push
mov
xchg
ret
out
out
add
or
jb
sti
pop
das
add
mov
push
mov
xchg
ret
test
push
stc
nop
es
add
add
add
imul
cmp
jmp
stc
nop
es
cwtl
add
add
xchg
int
push
mov
xchg
ret
loope
add
add
jge
stc
nop
es
add
fisubrl
stc
nop
es
sbb
jmp
popa
add
nop
es
or
sti
stc
nop
es
dec
add
rcl
mov
es
shrb
jae
pop
mov
stc
nop
es
add
xchg
mov
fmull
jb
push
jp
xor
mov
inc
add
add
mov
jmp
nop
cld
nop
jmp
add
xor
add
stc
nop
es
sbb
aam
lea
nop
cld
nop
jmp
add
pop
aaa
push
push
stc
nop
es
mov
mov
nop
cld
nop
jmp
push
icebp
stc
nop
es
add
add
add
call
stc
nop
es
mov
dec
mov
stc
nop
es
movb
add
pop
nop
cld
nop
jmp
lahf
sti
mov
add
iret
lea
nop
cld
nop
jmp
add
xor
je
nop
cld
nop
jmp
add
popa
sbb
repz
nop
es
loope
out
shr
sbb
mov
pop
popa
add
add
add
add
cmpl
nop
cld
nop
jmp
add
add
mov
xchg
ret
push
add
mov
stc
nop
es
xchg
pop
add
fcos
stc
nop
es
add
mov
cld
nop
jmp
add
pusha
push
mov
xchg
ret
mov
mov
addl
add
mov
stc
nop
es
push
inc
add
testl
test
imul
add
add
popa
fmuls
es
add
add
adc
nop
es
repz
jg
lods
mov
push
mov
xchg
ret
gs
add
sahf
loop
stc
nop
es
add
arpl
add
add
stc
nop
es
add
push
test
mov
adc
nop
es
test
nop
cld
nop
jmp
sahf
push
loope
push
add
es
jae
sets
and
nop
es
add
mov
add
add
nop
es
jmp
es
add
add
fiaddl
jmp
popa
add
cld
nop
jmp
outsl
add
lods
lahf
or
dec
cmp
nop
es
sbb
scas
enter
jb
sti
add
imul
adc
decl
add
push
mov
xchg
ret
sub
xchg
pop
subl
stc
nop
es
add
add
and
cld
nop
jmp
add
push
xchg
pop
je
add
lods
pop
add
add
test
mov
push
aas
inc
sbb
pop
mov
icebp
js
xchg
call
jge
rolb
mov
ficoms
add
sbb
cwtl
ljmp
in
mov
mov
sbb
rolb
rolb
adc
inc
pop
mov
sub
xchg
jne
pop
fldl
mov
jne
pusha
add
mov
lea
add
jae
xchg
ds
and
daa
test
mov
daa
sub
xchg
pop
ljmp
dec
jecxz
sarl
xor
dec
xchg
mov
hlt
stos
xchg
notb
and
pop
jg
test
lock
lods
in
fwait
movb
add
add
push
sub
lret
dec
outsl
daa
pop
adc
jne
jb
int3
and
lcall
add
inc
add
cmp
cmc
bound
outsl
enter
das
pushf
daa
pop
push
push
add
inc
add
cmp
mov
xor
fcmovnbe
dec
cs
test
movsl
or
add
std
push
shll
leave
lahf
in
xor
fstl
inc
cwtl
push
mov
push
xlat
arpl
add
movsl
push
xchg
and
aad
sbb
cwtl
in
xchg
sahf
stc
in
inc
lea
cmpsl
nop
xchg
dec
sbb
add
insb
inc
dec
sub
xchg
iret
xor
gs
or
imul
cld
and
jae
or
add
fisubl
add
pop
jb
mov
lcall
cmpsb
xor
test
repnz
add
into
pop
cs
mov
js
push
push
adc
outsl
mov
fcmovnbe
rcrl
addr16
stos
clc
add
dec
pusha
add
scas
cmp
xchg
es
pop
mov
adc
js
bound
call
pop
shll
cltd
sub
mov
cmp
cmp
or
sub
in
sbb
addb
fwait
jo
lea
jbe
add
lcall
jo
pop
pop
js
pop
insb
xchg
push
mov
mov
cmpl
js
stos
lock
imul
xchg
add
sub
imul
jo
maskmovq
notl
mov
xor
fsubr
or
clc
ret
jg
mov
mov
xchg
xor
aas
jmp
mov
add
cli
adc
mov
test
jno
arpl
out
lret
addb
std
cld
int3
sar
enter
sbb
and
mov
cmp
jecxz
push
cwtl
mov
adc
mov
addl
div
movsl
inc
add
add
sbb
rcrl
loopne
add
int3
mov
cmp
xchg
cmp
shl
inc
add
test
mov
add
jbe
add
bound
pushf
inc
mov
cwtl
aad
cmp
icebp
out
shlb
lods
scas
sbb
mov
loop
addb
repz
xchg
sti
xchg
mov
cli
lcall
push
sahf
push
adc
lret
ds
pop
dec
inc
add
sub
shl
mov
push
fdivrl
xchg
xchg
push
jae
inc
sub
sub
mov
add
imull
add
aad
test
xchg
or
pop
mov
cli
jb
bound
jo
adcl
add
test
jle
rorl
fdivrl
test
shll
test
cli
loop
jae
mov
cld
sidtl
cmp
mov
pop
lcall
inc
jnp
mov
push
add
adc
pop
jae
mov
int3
dec
scas
sub
adc
scas
mov
in
arpl
inc
add
mov
das
iret
data16
pop
mov
dec
xlat
xor
xchg
aas
push
mov
lock
adc
dec
jb
icebp
bound
stc
mov
xor
gs
loop
or
pop
mov
dec
sbb
adc
addb
ret
fsub
repz
sbb
das
xchg
dec
clc
mov
push
daa
fwait
jg
inc
dec
xchg
fdivr
inc
add
mull
push
mov
out
add
rclb
lock
cmp
xchg
push
popa
movb
daa
outsl
stos
pop
push
mov
out
ficompl
daa
sub
jecxz
test
adc
pop
xchg
inc
add
sahf
addb
pop
es
mov
call
mov
movsl
sub
les
cli
sahf
insb
push
lcall
outsl
add
arpl
fnstsw
mov
adc
and
add
dec
inc
add
dec
rolb
add
movsl
movb
xchg
inc
add
test
jmp
mov
test
rcll
pop
out
imul
sub
and
pop
cmp
jb
inc
cwtl
mov
ret
stos
add
cmpl
fucomi
push
add
rolb
out
jno
aad
mov
add
jl
stos
notb
or
mov
adc
pop
mov
addb
inc
add
addr16
lods
xlat
xor
rorl
and
in
push
aas
into
lcall
dec
nop
push
add
fidivrl
pop
repz
push
aam
xor
cs
jg
jmp
add
data16
stos
cmp
imul
pushf
adcl
negb
mov
cmp
lcall
fiaddl
imul
xor
int3
fdivr
repz
pop
repnz
inc
add
push
jnp
gs
add
mov
mov
sub
add
bound
aas
dec
cmpsb
stos
and
mov
add
outsl
clc
mov
ficompl
push
hlt
nop
inc
xchg
push
call
rorl
pop
lock
push
mov
xchg
xchg
pushf
in
cmc
xchg
inc
outsb
sbb
and
or
xor
inc
shlb
or
adc
add
das
fildl
jp
add
adc
xor
jecxz
nop
mov
inc
add
or
pop
pop
dec
xor
repz
push
out
add
mov
inc
add
add
cld
outsb
out
mov
jecxz
adc
fwait
push
in
push
xor
add
out
mov
add
fwait
cli
fs
fdivl
push
push
fldl
add
stos
icebp
mov
sbb
inc
add
xchg
push
pop
jb
push
cmpsl
subl
mov
cmp
aam
mov
movb
xchg
push
pop
rcrl
subl
not
add
popa
mov
leave
insl
imul
xor
mov
lods
sbb
mov
dec
or
je
xchg
xor
add
inc
add
adc
and
stc
loopw
addr16
jl
pop
xorl
dec
and
xor
add
add
addb
sub
int3
cmp
loop
and
xchg
or
sahf
push
sub
outsb
fldl
es
or
push
push
repnz
lret
xchg
cmpsb
mov
cli
jg
xor
lock
ds
mov
repz
add
pop
lcall
xchg
add
adc
dec
jp
lret
mov
mov
and
outsb
xchg
mov
clc
inc
add
lods
pop
mov
push
jno
cmpsb
and
cmpsl
add
in
aaa
ljmp
mov
or
mov
mov
jecxz
sti
mov
je
add
cmpsl
and
lods
fnstsw
or
lods
sub
mov
rcrl
sub
inc
in
daa
shr
js
nop
aaa
or
fadd
push
and
sub
mov
dec
cmp
add
cmp
lods
or
aaa
push
les
ret
dec
jb
adc
jb
or
adc
pop
lcall
add
addb
add
xchg
ret
inc
add
adc
xlat
jbe
scas
add
imul
mov
jle
ljmp
fcmovnbe
cmp
xchg
add
hlt
sub
cltd
add
jecxz
test
outsl
sarl
add
ljmp
add
jmp
add
testl
dec
inc
add
mov
mov
xchg
loop
push
rcll
out
jnp
jb
mov
jecxz
loop
or
mov
dec
xor
sbb
mov
testb
fcoml
push
cmpl
fldt
and
es
pop
inc
add
xchg
xchg
push
inc
add
scas
mov
es
into
jns
sbb
jp
push
sti
das
pop
lcall
push
xchg
sahf
jp
inc
add
mov
mov
add
pop
and
inc
add
add
add
add
push
inc
mov
roll
mov
rcrl
and
insl
int
add
xchg
test
call
xor
std
ret
lods
dec
dec
rorl
pushf
insb
cmp
jge
jns
imul
add
jle
push
mov
and
mov
insb
sbb
jbe
lcall
sbb
adc
movsl
lods
loop
pop
mov
add
insl
add
addb
in
mov
sahf
inc
outsb
or
or
out
movsb
shrb
repz
mov
mov
or
cmp
aas
lods
inc
xchg
stos
and
sbb
arpl
mov
fdivp
aaa
cmp
pop
mov
add
pop
or
xchg
sbb
movsb
adc
sub
out
push
add
and
sub
mov
out
imul
jecxz
lahf
sbb
rcrb
mov
pop
loop
sbb
sub
push
cli
pop
sbb
scas
in
gs
out
dec
cmp
sbb
sysenter
push
adc
inc
add
mov
add
movsl
ja
loop
inc
inc
add
les
and
divl
lret
stc
mov
add
adc
push
dec
add
add
pushf
jl
call
insl
xchg
dec
out
mov
xor
arpl
call
add
add
je
xor
cmp
add
cli
adc
add
adc
stos
std
aas
stc
jnp
cmp
imul
pop
testl
adc
jns
js
adcl
add
jl
lods
out
jns
pusha
add
push
outsl
dec
xchg
mov
in
jno
mov
std
dec
mov
push
jne
out
fnstcw
mov
lds
mov
stos
dec
imul
lods
pushf
add
jnp
jae
cmp
into
ret
mov
xlat
loope
jb
sbbl
daa
shl
inc
add
sub
adc
push
daa
ds
mov
add
and
mov
pop
and
cs
mov
adc
jge
mov
lods
notb
out
loope
vcmpss
cmp
aaa
gs
adc
mov
mov
repz
cmp
gs
aam
mov
subl
pop
outsl
sbb
cmc
jae
xchg
push
add
rolb
stc
insb
mov
test
xchg
inc
add
leave
lcall
pusha
add
in
jnp
adc
and
mov
adc
add
fistpll
popa
ret
loopne
add
les
rcrl
pop
cs
add
out
mov
rolb
ret
lock
inc
add
xor
loop
rolb
xchg
add
mov
push
bound
sbb
loop
and
sti
sbb
int
dec
sbb
mov
and
mov
int3
movl
mov
or
out
pop
addb
fmull
popf
xor
cmp
fadds
mov
add
cld
mov
add
pop
adc
inc
add
adc
adc
lods
cltd
movsb
mov
add
out
add
jno
add
dec
cmp
mov
out
xor
imul
test
insl
sbb
push
xchg
movsl
aam
mov
addr16
in
dec
xchg
into
lahf
aas
jl
nop
mov
sbb
dec
mov
test
test
icebp
movb
stos
xchg
fldt
adc
pop
or
add
ljmp
add
adc
pop
pop
sbb
and
jnp
fcmovnbe
adc
xor
pop
push
pusha
add
outsl
sarl
push
rclb
repz
add
leave
xchg
out
sub
mov
sahf
mov
inc
std
inc
add
pop
into
add
jmp
out
in
rolb
jmp
xor
mov
repnz
int3
sbb
ds
lcall
iret
xchg
mov
testl
or
xor
add
jge
push
sarb
xor
outsl
sub
pop
xor
mov
mov
out
xor
jb
popf
popf
cmc
and
cmp
mov
cmp
out
lret
push
jmp
outsl
cld
divb
nop
add
mov
add
pop
jecxz
push
ljmp
xlat
and
push
xorl
push
mov
push
sahf
mov
jle
repz
push
out
das
dec
sbb
bound
jmp
js
dec
mov
push
repz
lret
jne
add
jp
popf
mov
mov
pop
in
push
add
popa
in
mov
lcall
lods
mov
add
dec
jecxz
push
dec
ficomps
add
sub
xlat
xchg
push
xor
add
add
lods
popa
and
mov
sahf
inc
arpl
push
rorb
shl
scas
pushf
xchg
stos
mov
sbb
sbb
add
xchg
xor
add
stos
inc
in
pop
in
imul
in
ja
or
popf
push
add
cmp
out
nop
or
gs
out
stos
sahf
arpl
jo
xchg
test
dec
mov
outsb
jg
cmp
mov
lret
add
aas
repz
add
add
inc
add
dec
cwtl
or
outsb
sub
mov
add
dec
inc
sbb
push
mov
cmp
add
out
xchg
iret
sbb
xchg
int
mov
xchg
add
jb
loope
lock
repnz
inc
adc
mov
xor
mull
add
jo
mov
xor
lahf
mov
add
pop
arpl
aas
and
push
imul
push
add
push
daa
push
pop
mov
add
lock
xchg
gs
mov
pushf
jno
mov
sbb
insb
mov
js
mov
in
scas
jl
enter
into
mov
add
xor
lret
mov
and
pop
jp
and
clc
sub
insl
sub
rcll
rolb
add
add
add
hlt
data16
xor
outsb
mov
xor
or
pop
pop
enter
add
dec
push
sar
adc
testl
neg
into
pop
cwtl
push
cmc
iret
xchg
mov
movl
cmpsl
lahf
arpl
cli
mov
xor
push
js
je
add
and
push
xchg
int
add
pushf
insb
faddl
add
adc
ror
aas
mov
xor
adc
add
mov
mov
adc
xor
add
push
push
out
addb
sub
outsb
inc
add
scas
and
sbb
inc
addb
or
mov
insl
fptan
adc
les
ret
mov
mov
dec
das
pop
mov
mov
stc
inc
add
or
push
push
add
jg
addr16
xchg
mov
sub
add
test
fs
leave
inc
add
sarb
mov
xchg
loope
add
in
cmpsb
les
movsl
popf
pop
sub
sbb
sub
rclb
punpckhdq
repz
add
pop
cmp
add
pop
mov
cltd
cmc
loope
cmpsb
bound
imul
xlat
imul
lea
ret
sti
jo
or
add
push
add
inc
sbb
scas
or
adc
outsb
dec
stos
and
test
test
add
in
jmp
call
adc
dec
and
add
push
xchg
negl
pslld
add
jp
push
mov
mov
pushf
cmp
jb
add
lock
cmp
pop
push
push
add
inc
push
xor
mov
addb
add
cmp
jmp
out
add
or
mov
pmulhw
add
fmul
pop
sbb
add
js
mov
fs
sub
insl
sti
nop
idivl
adc
fmuls
add
out
clc
and
ds
push
jg
mov
pop
adc
mov
add
inc
stc
xor
sub
nop
sbb
pop
jp
les
xor
or
fdiv
rclb
pop
mov
popa
adc
add
add
lret
and
adc
dec
inc
xchg
or
add
add
pop
movsb
mov
mov
add
sti
ret
aad
int3
int3
das
shrl
cmp
cltd
jns
cmp
mov
cltd
pop
inc
add
adc
cmp
cmp
and
xchg
jmp
add
mov
sbb
add
into
fadd
mov
dec
ret
jge
sbb
and
aas
rclb
movb
add
pop
sub
movsl
xor
iret
inc
add
add
ret
out
jmp
int3
cld
pop
call
push
sahf
test
pusha
add
adc
aas
mov
jbe
out
add
add
aaa
pop
push
xchg
mov
ljmp
mov
adc
imul
add
jmp
add
lods
roll
in
dec
jbe
dec
std
lds
iret
ds
outsl
pop
push
cmc
mov
inc
add
adc
dec
imul
adc
add
shlb
movb
push
les
int
ror
sub
mov
jbe
or
add
inc
add
push
add
cltd
cmc
rolb
jg
add
add
sbb
add
mov
inc
add
fcoms
rorl
pop
adcl
and
inc
add
insb
fwait
jl
mov
fcoml
sub
aam
push
clc
pop
mov
push
push
lods
popa
xor
add
cmp
lods
xchg
movsb
sub
mov
mull
rolb
cltd
nop
lret
arpl
xor
dec
dec
adcl
dec
xchg
int3
push
add
out
add
les
stos
jl
mov
mov
and
pushf
push
cmpsl
subl
stc
xchg
mov
leave
sub
push
adc
xor
mov
cs
into
and
jmp
repnz
add
call
iret
out
push
push
ds
add
ret
pop
sbb
xchg
mov
scas
call
lods
inc
add
pop
and
or
add
in
rsm
inc
add
push
addb
ja
test
test
add
outsb
inc
shll
or
enter
inc
add
sbb
popf
dec
xchg
inc
pusha
add
mov
inc
add
lods
dec
pop
test
xor
or
push
and
insl
xchg
mov
jne
dec
rolb
pop
clc
adc
int3
dec
sub
mov
repz
jbe
sub
data16
cmp
cmp
add
ss
imul
bound
addr16
add
add
pop
xor
mov
inc
lock
pop
lret
leave
call
in
loope
pop
lods
jb
push
add
add
add
addb
jo
rorb
cmpsb
fsubp
push
enter
test
daa
xor
daa
data16
adc
fildll
dec
punpckhwd
fisttps
lods
add
inc
mov
lods
stos
stos
pop
mov
pushf
stc
negb
jmp
add
pop
pop
int
das
loope
scas
jle
jl
addb
push
xchg
ljmp
addb
mov
mov
adc
and
sbb
ljmp
pop
and
push
imul
xchg
mov
fstpl
mov
je
add
arpl
cmp
std
mov
xchg
out
icebp
mov
and
daa
xchg
enter
outsb
pop
int
push
ret
rclb
add
stos
movsb
jp
adcl
fcomi
inc
add
inc
add
jo
mov
rolb
ljmp
pop
jo
and
jle
iret
test
cmp
mov
sub
pop
imul
das
push
xchg
mov
idiv
fsubrs
xor
pop
xchg
ficoml
imul
jno
mov
mov
fucomi
inc
jae
rorb
inc
add
jmp
sub
sahf
adcl
add
lock
addb
fstpt
inc
add
adc
fs
push
xor
xchg
fwait
fwait
je
sbb
cwtl
mov
movsb
cmpsl
cmp
mov
inc
dec
mov
js
xor
icebp
mov
loopw
outsb
popf
inc
add
adc
xchg
pop
test
dec
adc
adc
in
xor
loopne
arpl
or
jmp
xchg
leave
insb
flds
hlt
sbb
or
mov
jns
add
add
stc
mov
hlt
inc
add
les
push
cmp
dec
jecxz,pt
shlb
js
lcall
rolb
jl
add
subl
data16
and
cli
sarl
inc
xor
adc
lea
push
les
hlt
fsubl
push
daa
push
sahf
or
xor
pop
xor
add
inc
sbb
or
lcall
in
aaa
pusha
add
jecxz
mov
add
sbb
in
inc
add
xor
sbb
add
xor
ja
jecxz
mov
loop
add
and
mov
push
inc
jns
jp
lods
into
push
and
push
cmp
lods
inc
add
mov
cmc
lods
nop
sub
or
js
xchg
repz
mov
mov
imull
cltd
jns
dec
movsl
mov
or
stos
cltd
mov
push
add
mov
pop
push
ret
movsb
sub
gs
rol
add
lahf
lock
das
daa
aam
ret
or
insb
repnz
xlat
notl
test
xor
rclb
ljmp
dec
add
mov
rorl
jns
sbb
stos
dec
push
popf
pop
pushf
or
xor
add
out
pushf
sbb
movb
cmp
inc
jae
cli
mov
add
inc
add
add
mov
popa
fisubs
adc
scas
mov
mov
fcoms
add
test
addb
cmp
enter
cmp
ret
push
add
add
adc
movntq
out
fstl
cmp
fadd
add
cmp
dec
popa
clc
jmp
push
add
or
sbb
outsb
mov
add
repnz
dec
mov
sbb
and
sub
jp
pop
pop
mov
adc
jnp
adc
mov
mov
addb
test
pop
jnp
cmpsl
lock
inc
add
sub
roll
rcrl
add
clc
xlat
xchg
mov
mov
add
fdivr
std
cmp
add
or
out
fstl
out
sbb
or
hlt
cli
in
push
add
pop
shll
add
gs
inc
add
pushf
push
popa
subl
int
movsl
mov
incl
testl
and
data16
jge
pop
lcall
sbb
dec
xor
dec
inc
add
incl
cmp
jb
push
insl
in
rolb
fcoml
loope
push
scas
lods
mov
or
jge
into
adc
pop
insb
divb
adc
rclb
sub
pop
aas
xchg
cwtl
into
add
js
mov
or
into
outsb
fcmovnbe
popf
pop
mov
cmp
push
mov
in
add
lahf
es
add
call
int
push
loope
mov
fwait
mov
jp
mov
xchg
test
push
mov
mov
pop
pop
test
jnp
push
push
adc
pop
add
popw
sbb
cmp
mov
add
inc
add
fisubrs
mov
add
popf
push
nop
mov
cmpsl
xchg
pop
mov
daa
adc
pop
in
cltd
xor
or
jl
add
mov
insb
outsb
into
mov
adc
mov
decl
add
or
lods
movsb
ds
jmp
jae
test
dec
mov
outsl
xchg
test
xchg
cmpsb
and
test
xor
lea
addb
aas
pop
dec
cmp
add
add
mov
shr
pushf
jno
test
dec
movsl
xchg
mov
jp
jp
sbb
call
push
pop
decb
mov
dec
es
push
add
mov
sub
addr16
or
pop
push
inc
mov
mov
popa
jne
dec
rcrl
stos
jo
or
jg
sbb
add
outsl
jo
cmp
int
add
xchg
aas
dec
mov
aas
das
inc
add
xor
add
test
add
adc
add
push
jnp
test
push
in
add
inc
add
arpl
dec
out
adc
rclb
les
in
xchg
mov
test
xchg
jnp
fcmovne
repz
push
imul
cmpsb
shrl
dec
xchg
pop
std
push
addr16
push
out
lahf
adc
mov
inc
or
or
pop
insb
movb
les
fnsave
pop
sbbl
pop
mov
jne
xchg
jae
or
int
xor
rolb
repnz
iret
jbe
test
push
loop
pop
dec
popa
sub
add
pop
out
bound
das
and
iret
je
push
xchg
pop
dec
mov
std
lret
into
cmpsl
adc
inc
add
inc
push
and
insb
adc
lahf
jo
in
xchg
xchg
pop
scas
xchg
cmpsl
aas
sub
xchg
cmpsb
ret
inc
add
xchg
mov
mov
or
add
add
out
xlat
addb
ja
xor
rcr
mov
lea
imul
cmp
fwait
dec
mov
in
leave
push
scas
ret
cmpsl
fadds
xlat
mov
add
xor
btr
pop
scas
jmp
addb
dec
outsl
mov
push
dec
push
adc
mov
fwait
jge
fsubrl
or
adc
inc
addr16
out
jae
fcompl
xor
dec
jp
and
dec
in
jmp
idivl
lds
aas
nop
push
sub
dec
jae
sub
add
cwtl
shll
add
push
dec
les
js
aas
cmpsb
cmp
sub
test
push
shlb
pop
pop
push
cmc
sahf
lods
outsb
imul
mov
rolb
add
xchg
fld
jae
movsl
lods
mov
jnp
maskmovq
mov
add
sub
data16
repz
add
cltd
sub
jge
lahf
xchg
lret
outsl
into
lahf
call
pop
sbb
aad
or
xchg
mov
shl
movsl
xor
push
adc
aas
ficoml
sub
xor
repz
xchg
imul
mov
repz
add
shlb
cmp
push
xchg
or
adc
fdivl
sbb
ja
mov
int3
lods
scas
mov
xchg
mov
xchg
in
mov
push
sub
add
sbb
call
in
repnz
add
xchg
pop
push
push
mov
jle
dec
and
pop
dec
xlat
stos
test
cmp
mov
cmpsb
jle
xchg
push
addb
insl
in
cmpsb
movb
cmpsb
shl
shrl
sbb
ret
cmp
subl
mov
xlat
rolb
add
mov
mov
cmp
pop
lds
outsb
loop
jae
or
shll
filds
pushf
and
enter
inc
add
insl
push
add
and
outsl
pop
test
add
ret
jb,pn
mov
fsubs
add
notb
jp
mov
lea
inc
add
fcomi
push
add
adc
test
mov
je
add
push
dec
dec
jmp
jb
std
pop
test
mov
lea
sbb
push
dec
mov
mov
std
jge
addr16
testb
cmp
in
test
xor
cmp
jl
push
loopne
lods
sub
jnp
test
cmp
mov
ljmp
ror
leave
pslld
pop
xor
bound
daa
stos
mov
dec
data16
xchg
ljmp
dec
xchg
pop
mov
popa
or
ss
sti
or
fldt
test
jae
ret
adc
in
movsb
inc
mov
xchg
add
mov
inc
add
xlat
test
popf
in
add
dec
dec
add
cmp
lret
lahf
and
outsb
xchg
push
add
push
jo
push
jae
dec
pop
mov
adc
jnp
addr16
xor
loopne
push
aas
out
data16
stos
or
xor
test
and
jo
dec
into
jae
ja
mov
add
add
mov
rcrb
aam
repnz
and
loop
or
nop
xlat
in
test
out
repnz
push
xchg
sbb
add
insb
cltd
xchg
xlat
push
movsb
cmp
test
push
popf
mov
pusha
add
out
test
fcomps
rcrl
enter
add
mov
fldpi
cmp
popf
aaa
repnz
dec
jne
stos
sub
clc
pop
adc
push
or
and
jge
add
std
ret
in
sti
xor
into
out
mov
and
and
mov
test
movsb
addb
jb
pop
and
pavgb
daa
lods
outsl
xlat
mov
sbb
jne
jbe
icebp
rcll
mov
xchg
fsubs
and
mov
test
pop
aas
cmpsb
addb
repnz
nop
imul
icebp
push
arpl
push
lods
arpl
jl
pop
xchg
cmp
aaa
mov
in
fwait
je
xchg
dec
ret
inc
add
pop
out
fs
cmp
inc
add
add
iret
push
xchg
pop
push
add
lcall
mov
enter
ret
lea
iret
xchg
stc
enter
or
out
adc
test
test
sub
imul
adc
and
mov
or
xchg
js
test
loop
pop
fistpll
push
rclb
xchg
inc
mov
cmp
ret
bound
loopne
fmul
loopne
in
add
mov
hlt
mov
aas
mov
add
and
lret
test
add
out
sahf
sub
cld
lahf
insl
pop
xor
pop
jp
xor
add
inc
in
and
and
out
mov
lret
push
cmp
cmpsl
iret
test
outsb
pop
adc
mov
aaa
cltd
aam
imul
mov
cltd
sahf
push
mov
mov
mov
mov
lret
mov
int
sbb
add
out
in
add
hlt
pop
cmpxchg
mov
add
push
aas
lods
xor
mov
mov
and
jg
xor
mov
cmc
sti
mov
xor
popf
push
add
add
and
add
js
jae
addb
inc
mov
push
les
enter
mov
dec
sti
xor
add
add
aam
lods
test
sub
out
xlat
in
push
iret
pop
sub
mov
addb
test
adc
add
mov
adc
loope
add
rep
iret
arpl
es
sbb
inc
les
add
sub
cmp
leave
test
icebp
add
xor
data16
add
punpckhbw
pusha
add
xchg
mov
scas
or
and
out
outsb
jnp
add
mov
into
adc
daa
movsl
sahf
mov
shlb
ficoml
movsl
cltd
push
pop
jmp
xor
add
sub
sahf
dec
int3
inc
cmpsl
cli
and
push
xor
out
cld
jmp
xor
add
cmpsl
fwait
ja
insb
or
insb
xchg
rcrl
sub
fldenv
xor
xor
in
mov
add
popa
mov
mov
cmc
test
call
ret
mov
stos
sbb
cmp
or
ret
out
add
outsb
cmp
pause
push
fcomp
decb
push
mov
rcll
cld
lahf
push
ret
push
jns
pop
lea
mov
push
out
sub
mov
sub
xor
add
push
cwtl
lock
mov
mov
es
pop
inc
add
xor
test
mov
jecxz
test
push
sahf
sbb
add
pop
out
add
jbe
les
fisubrl
inc
add
jp
aad
xchg
push
lret
cmp
inc
add
test
jecxz
cmp
in
addb
inc
fnstsw
loope
push
inc
je
imul
push
fwait
xchg
mov
push
fidivrl
push
enter
sub
xlat
mov
dec
cs
in
inc
add
aad
notl
push
jge
xchg
add
imul
mov
adc
in
pop
imul
or
and
push
leave
test
jb
fldt
movb
dec
inc
add
xor
shrl
cmpl
popa
clc
cwtl
imul
pop
mov
cmpsb
mov
xorl
mov
adc
jne
int3
mov
jno
xchg
xor
jo
lcall
lahf
stc
mov
add
stos
mov
xchg
jo
add
bound
mov
les
pop
pop
push
push
and
jl
popa
data16
push
fwait
sbb
mov
inc
add
popa
jo
xchg
rolb
add
mov
add
add
add
out
testb
fstpt
lea
adc
movsl
es
dec
xor
mov
in
int
ficomps
or
or
lret
hlt
push
or
stc
std
lret
xchg
push
xchg
xchg
pop
push
cmpsl
test
addl
push
je
repz
inc
add
test
push
dec
les
dec
xor
push
in
push
add
cmp
popf
pop
push
mov
insb
lret
pop
ss
roll
pop
mov
movsb
scas
in
xor
pop
push
mov
lahf
ret
ret
mov
gs
inc
fistl
sbb
sbb
aaa
push
xchg
bound
fldt
addr16
pop
mov
pop
mov
mov
dec
dec
or
sti
popf
push
in
dec
add
jl
pop
decl
loope
pop
mov
sbb
cmp
push
je
xchg
and
out
xchg
popa
lret
ja
test
pop
into
and
hlt
add
mov
dec
mov
cmp
jmp
xchg
dec
test
sub
add
inc
add
mov
sbb
mov
add
rolb
push
lcall
adc
dec
push
xchg
nopl
mov
lret
xor
adc
cmc
test
fwait
popf
mov
mov
in
pop
lahf
insb
mov
inc
add
stos
and
add
dec
push
lods
xchg
int3
mov
enter
add
add
and
ret
outsl
sub
shll
mov
inc
add
cmp
fimuls
in
lret
mov
jl
add
outsb
out
push
enter
test
movsl
lods
xlat
mov
cmp
orl
enter
mov
xchg
adc
sti
xchg
push
sbb
xchg
mov
in
cwtl
addr16
ja
addb
xchg
xor
jle
add
push
mov
movb
insb
popf
mov
or
mov
shll
arpl
sbb
push
cmp
insb
sti
negl
in
mov
adc
addr16
es
push
mov
add
lcall
add
add
lea
jo
adc
sub
in
addb
icebp
call
mov
mov
add
dec
push
add
cmpsb
jb
mov
push
filds
inc
jno
add
push
push
pusha
add
pop
lcall
dec
out
incb
add
cmp
daa
mov
dec
mov
dec
mov
or
es
out
faddp
pusha
add
mov
addb
movsl
dec
add
mov
add
pop
adc
cmp
add
sub
jle
sbb
xor
hlt
cmp
aam
icebp
mov
xor
add
cwtl
jo
inc
add
lahf
mul
jbe
clc
xchg
mov
push
shll
pop
add
popf
mov
sub
rolb
jmp
mov
cmp
mov
cmp
adc
add
popa
shr
sub
out
aad
test
sbb
cld
and
sub
xchg
adc
sub
inc
add
clc
addb
scas
lods
inc
xchg
jo
push
js
jbe
sub
sbb
jmp
add
arpl
lea
and
xorl
fcompl
adc
int
mov
mov
enter
ljmp
repz
mov
cwtl
rclb
aas
addb
xchg
pop
sub
jno
addb
icebp
fstps
stos
adc
or
pop
fsubr
rorb
xchg
xor
jecxz
rolb
inc
loope
xor
int3
push
add
add
fs
mov
mov
sub
mov
pushf
inc
add
jno
add
pop
adc
mov
lret
jbe
lret
add
fwait
mov
add
mov
fs
xchg
and
pop
pop
fidivrs
dec
mov
cwtl
mov
outsl
dec
outsl
mov
aas
leave
pop
out
lea
add
mov
jb
mov
add
mov
addb
out
idivl
addr16
push
push
js
adc
lds
add
xor
jp
test
mov
sbb
sub
fdivr
ja
arpl
mov
push
add
adc
dec
xor
imul
jns
push
mov
nop
lock
add
inc
add
inc
add
ljmp
aaa
fnstsw
outsb
rorb
push
add
pop
in
add
sti
adc
push
mov
fsubrs
push
push
flds
or
jecxz
add
movsl
jmp
jbe
in
inc
cmpsl
and
mov
jne
sbb
and
enter
cltd
addb
pop
rcrl
mov
jg
add
movb
into
enter
mov
fisttpll
add
or
mov
push
dec
fmull
mov
lret
ret
jl
fidivrs
repnz
inc
sar
xlat
add
mov
dec
adc
or
add
add
jo
fisttps
pop
fs
dec
gs
push
add
push
insb
inc
add
mov
rolb
mov
push
mov
and
adc
hlt
mov
les
test
sub
std
gs
test
insb
pop
or
int
std
inc
add
add
repnz
pop
repnz
nop
out
enter
sub
push
in
or
outsb
cmp
fcmovnu
dec
imul
mov
pop
rorl
push
add
das
push
loope
add
call
dec
test
mov
dec
add
aad
lret
or
repz
pop
xor
pop
cmc
les
jecxz
mov
scas
mov
shl
inc
add
lods
mov
inc
shlb
inc
add
add
mov
icebp
xchg
cmp
out
popa
dec
xor
jae,pt
ds
push
jle
mov
idivl
xchg
inc
or
insb
add
inc
add
and
cmp
mov
xchg
clc
cmpl
enter
mov
push
adc
push
sahf
pop
jo
data16
cmpsb
decl
push
add
sub
or
or
dec
cltd
mov
hlt
sbb
mov
push
je
xchg
scas
movb
xchg
or
add
cmp
add
out
sti
push
orl
pop
pop
xor
add
divb
fs
clc
mov
sub
int3
mov
xchg
dec
fwait
push
aad
shlb
push
movsb
out
jecxz
stos
mov
aas
or
add
outsb
lea
insb
mov
aad
cmp
mov
push
push
cli
pop
fimull
shrl
aaa
and
cld
push
push
call
jmp
jbe
add
push
ret
loop
nop
mov
add
rolb
sbb
lods
lret
enter
dec
insl
lock
pusha
add
mov
pop
inc
add
xchg
and
pop
xorl
add
popf
add
mov
mov
add
sub
mov
mov
push
cmp
fwait
out
call
mov
inc
add
mov
dec
mov
lret
in
ret
xchg
out
mov
add
loop
cli
inc
push
adc
mov
fmull
loopne
lret
mov
lahf
xchg
movb
add
jle
or
cli
jp
in
incl
add
out
and
add
push
mov
ljmp
add
call
dec
shr
and
out
and
test
test
ficomps
in
and
test
fstl
lret
idivb
outsl
pusha
add
ja
pushf
or
stos
addr16
imul
das
add
scas
xchg
jae
fisttpll
out
inc
add
cli
or
loop
sub
out
mov
mov
imul
addr16
leave
in
iret
pop
mov
bound
out
stc
btcl
addb
test
sub
dec
lahf
fs
fwait
in
sub
addb
mov
xor
repz
cmp
xor
add
arpl
add
jg
mov
add
mov
xchg
movl
dec
cmp
lcall
mov
divb
fcomps
add
lahf
icebp
or
mov
inc
not
add
arpl
push
xchg
scas
enter
negb
testl
lahf
jecxz
cmpsl
mov
je
pushf
test
push
mov
jle
add
dec
inc
ficoms
mov
jne
ss
xchg
inc
add
mov
cmp
stc
push
push
dec
jb
sbb
jne
adc
leave
js
lret
pop
in
sarb
jle
add
pop
add
decb
sbb
addb
pushl
in
or
push
add
dec
mov
add
mov
add
and
in
loope
xor
mov
pop
imul
test
ss
insb
jle
mov
push
jne
popf
push
insl
mov
add
aad
lahf
daa
push
arpl
mov
add
xchg
xor
std
arpl
add
push
lcall
idivl
add
mov
add
sar
mov
sub
mov
lock
arpl
xchg
mov
cmpsl
aas
jmp
gs
fimull
push
pop
push
sbb
push
jae
inc
cld
dec
or
lcall
data16
add
lret
push
xchg
or
jle
mov
std
xchg
iret
lods
movsl
pop
dec
mov
xor
insb
dec
rcll
cmp
jl
rcl
adc
sti
and
push
jnp
inc
add
dec
pop
adc
xchg
fcompl
mov
data16
mov
mov
jg
stc
mov
cmp
jg
mov
pop
lcall
test
mov
pushl
mov
adc
mov
and
rolb
mov
outsb
nop
mov
movsb
inc
mov
adc
inc
add
mov
add
adc
or
adc
and
lock
lods
inc
add
cmp
add
js
stos
stos
sbbl
test
adc
cmp
jecxz
lret
sub
add
xor
jge
fsubl
in
mov
adc
rcll
xchg
aam
or
aam
mov
mov
xchg
jmp
ljmp
lret
scas
pop
cmp
mov
or
scas
dec
fs
add
xchg
mov
pop
psllq
pop
push
cmp
add
lock
fnstenv
les
adc
push
pop
xchg
das
in
popf
rorb
es
add
rcl
lock
push
xor
mov
out
out
jnp
stos
lea
out
add
call
pmaddwd
add
imul
mov
push
imul
dec
or
push
push
lods
div
data16
xor
lcall
arpl
pop
addb
pop
add
and
xor
add
add
mov
mov
adc
sbb
mov
mov
into
inc
add
pop
outsb
std
dec
jns
es
fs
ret
inc
cmp
mov
jno
add
dec
add
movb
insb
mov
mov
push
push
mov
rolb
mov
insl
mov
inc
add
test
dec
jmp
adc
shll
fisttpl
pop
lcall
mov
imul
and
dec
pop
mov
not
imul
jp
sub
or
pop
mov
int
lret
outsb
jnp
aaa
in
mov
mov
xlat
inc
add
jno
test
xchg
fwait
aad
cltd
xor
arpl
rolb
out
testb
out
push
adc
push
lcall
mov
pop
inc
xchg
rol
ja
or
inc
add
mov
push
sbb
sub
add
xor
test
xor
sub
or
stc
and
add
and
aam
repnz
add
dec
je
pop
push
loop
lahf
jae
mov
outsl
mov
leave
test
and
test
daa
jb
jo
test
rclb
mov
pop
push
sarl
add
push
sub
pop
dec
xchg
sbb
jecxz
and
mov
or
mov
xchg
mov
daa
or
mov
and
xor
fnstcw
and
iret
cwtl
mov
cmc
jp
push
cmp
add
push
jl
in
int
enter
movb
add
add
jl
std
out
insl
jmp
dec
push
enter
mov
add
inc
jns
mov
fwait
insl
es
dec
add
ja
push
adc
cmpsl
pusha
add
add
pop
scas
xchg
enter
mov
push
inc
sar
jnp
cmp
lods
fisubrl
adc
in
dec
jns
pop
insb
mov
add
or
gs
sub
ficoms
xor
cvttps2pi
mov
imul
es
test
sub
sbb
jp
movsb
jae
mov
xlat
scas
cmpsl
xor
lods
mov
xchg
pop
mov
mov
movsl
adc
add
dec
out
xor
pop
xchg
leave
add
mov
adc
cmp
pop
xor
mov
cli
or
pop
bound
or
xchg
adc
push
pop
jmp
mov
xor
inc
add
inc
mov
add
fyl2xp1
cmp
mov
lret
repnz
push
xchg
out
popf
mov
fs
xor
xchg
add
aaa
mov
dec
push
jae
iret
mov
das
jg
repnz
add
movb
fildll
inc
add
cmpsb
fwait
in
outsb
and
and
in
mov
testl
fs
test
add
out
movb
in
xor
js
repz
mov
jmp
mov
mov
inc
add
stc
fisttps
mov
dec
fs
push
mov
addb
mov
insl
jle
repnz
inc
test
sub
lock
lret
mov
jns
xchg
in
mov
jo
int3
lods
cmp
jo
pop
inc
add
faddp
test
jle
dec
cmp
sti
insb
pop
test
cmp
loop
add
ja
sti
jo
mov
jp
mov
xor
mov
add
jns
mov
sub
gs
xchg
cltd
push
mov
add
dec
or
sub
sbb
leave
xor
mov
add
add
dec
fidivrl
push
inc
add
call
jg
lret
inc
jo
jmp
lock
insb
leave
cli
pop
xchg
push
cmp
lds
call
cmp
mov
mov
rcrl
in
dec
in
clc
out
in
loopne
in
or
mov
les
push
stos
dec
xchg
cli
neg
data16
imul
rclb
lret
jo
addb
mov
add
clc
insl
sub
lock
push
stos
xor
mov
push
jnp
movsl
lret
outsl
inc
add
pop
pop
in
jl
movsl
inc
or
add
ret
dec
dec
adc
sbb
add
inc
add
mov
addb
cmp
dec
pop
scas
xchg
ss
in
xlat
sub
mov
add
int
push
ss
enter
add
or
mov
sbb
addb
push
mov
mov
or
xchg
shrl
stc
xchg
lret
lods
mov
ds
lret
or
scas
push
add
xor
or
add
fdivrs
and
mov
add
sbb
sbb
loopne
xor
rcrb
cli
sahf
cwtl
xor
add
push
add
sbb
rolb
jg
inc
loopne
jno
sbb
arpl
pop
sarb
pop
jp
or
add
lahf
iret
out
inc
add
popa
sbb
mov
addb
sub
sbb
dec
or
lods
jmp
outsl
jae
jbe
inc
mov
add
mov
adc
icebp
cmc
jae
jb
insl
xchg
leave
mov
mov
cld
out
test
popf
inc
add
stos
loopne
cltd
mov
hlt
push
and
in
dec
adc
mov
in
std
aam
mov
jno
les
adc
cmp
push
loopne
pop
pop
mov
mov
xchg
or
mov
rcr
sub
lret
in
addb
loopne
scas
mov
inc
enter
add
dec
cmp
jnp
push
pop
or
inc
add
mov
lret
push
jg
cmp
mov
stos
or
aas
mov
pop
in
loopne
stos
mov
js
or
es
or
std
popf
adc
pop
icebp
push
addb
fs
test
mov
adc
jmp
push
inc
mov
mov
pusha
add
add
add
xchg
loop
push
jmp
les
out
pavgw
add
inc
inc
add
ljmp
push
mov
fucomi
adc
xor
mov
add
rcrl
data16
popa
dec
mov
cmp
add
push
subl
faddl
add
popf
bound
nop
mov
rcll
int3
test
adc
add
add
add
leave
sbb
push
mov
xchg
pop
lods
push
scas
mov
andl
mov
ret
dec
cmpsb
fimuls
enter
add
sti
shll
pop
aaa
cli
xorl
jmp
dec
nop
dec
mov
cmp
add
sbb
add
or
add
xor
push
dec
jbe
pushf
inc
mov
push
add
mov
xor
ds
add
mov
idivl
sbb
test
cmpsl
jnp
add
xor
popf
idiv
lock
mov
dec
loopne
mov
mov
cmp
pop
popf
fidivs
jo
dec
lods
addr16
sub
fcom
pop
inc
imul
mov
xchg
loopne
aaa
jae
push
add
mov
jne
test
jae
cs
hlt
inc
add
cmp
inc
add
inc
mov
push
addb
subl
popf
jge
lods
mov
enter
jge
ja
dec
jmp
add
jmp
dec
push
add
popf
xchg
mov
add
jmp
or
mov
test
fisubs
mov
fnsave
rorl
mov
sti
sahf
and
add
lds
data16
ret
mov
cld
adc
mov
or
or
mov
add
and
mov
jnp
jl
imul
dec
push
xor
push
jne
dec
sbb
aaa
popf
lcall
mov
mov
add
mov
cmp
bnd
add
push
pop
push
sub
mov
imul
adc
ja
fs
pop
lds
or
je
cwtl
outsb
mov
ss
add
movsb
or
icebp
arpl
xchg
ret
sarb
adc
push
sahf
outsb
pop
inc
sahf
push
int3
push
int
stos
sub
das
sbb
mov
sbb
and
aaa
outsb
test
lods
cs
add
daa
fs
mov
movb
loop
rolb
test
dec
or
or
add
or
add
icebp
mov
stos
aas
test
cmp
test
das
gs
bound
test
add
fldenv
jge
adcl
push
std
jbe
jnp
fsubrp
aas
cs
cli
mov
push
mov
inc
inc
divb
fisubl
push
mov
lcall
or
fstl
jb
push
aam
add
pop
pop
stc
cmp
inc
add
popf
inc
add
into
aaa
push
pop
jg
in
imull
inc
add
faddp
push
push
add
mov
inc
hlt
pop
imul
add
jae
cmp
add
or
xorl
pop
xchg
loope
repnz
insl
lods
rorl
popa
and
adc
push
add
mov
add
pop
push
add
cmp
leave
sub
dec
add
rolb
pop
cld
pushf
pop
inc
lret
rcl
push
adc
das
sbb
or
push
inc
or
inc
clc
xchg
ret
scas
pop
mov
fstpt
popf
aas
test
iret
xor
daa
push
xchg
pop
adc
add
pushf
cmp
int3
sub
lods
sub
mov
and
sub
adc
mov
add
outsb
push
xchg
push
imul
jb
add
incl
in
xchg
sbb
add
dec
pop
out
dec
mov
adc
xor
int
push
pop
repz
xor
inc
add
and
add
jbe
inc
add
sub
add
jnp
add
daa
push
jge
jo
ret
ss
mov
add
mov
lret
add
fcoms
je
push
daa
sbb
add
inc
insb
scas
call
sub
jg
sbb
pop
cld
and
test
imul
xor
sbb
add
popl
repnz
imul
jns
hlt
daa
inc
pop
orl
push
cltd
out
mov
xor
or
push
add
into
sbb
push
std
stos
jae
out
push
js
lods
mov
xchg
cmp
dec
movsl
xchg
outsl
xchg
inc
mov
adc
push
imul
sbb
pop
addl
inc
push
or
mov
icebp
dec
js
mov
int3
xor
jb
lods
enter
add
add
mul
je
xor
vsubsd
or
subl
loop
addb
adc
stos
stc
popa
mov
jg
inc
mov
mov
loop
aad
and
inc
enter
mov
add
jle
dec
lds
push
add
test
mov
jle
cwtl
out
and
addb
rcl
int
cmpsl
shl
mov
inc
add
out
adc
and
fadds
inc
jbe
inc
lret
pop
pop
mov
lahf
xchg
lods
push
ret
into
cmp
jo,pt
fs
data16
repz
dec
cmp
lods
mov
out
mov
add
pop
loopne
pop
inc
ds
jb
popa
add
mov
add
add
mov
stc
dec
shll
jmp
adc
sub
mov
dec
xchg
adc
daa
cmp
xchg
fxam
adc
addb
add
outsl
mov
xrelease
cmp
xchg
mov
add
outsb
ret
addb
popf
adc
add
add
adc
leave
addb
jmp
add
mov
les
inc
je
push
mov
jne
rcll
add
pop
and
idivl
add
push
cmpsl
sub
xchg
fcomps
xchg
inc
bound
or
add
mov
imul
add
imul
leave
xchg
mov
dec
pop
xchg
mov
aad
cmp
mov
and
add
dec
movb
dec
test
les
mov
push
sub
push
out
lahf
jnp
lea
add
leave
fisttpll
test
and
insl
push
sahf
lret
or
adc
je
add
mov
mov
imul
add
mov
mov
jle
add
xchg
addl
sahf
shrl
inc
add
dec
adc
cmp
cli
add
dec
inc
add
inc
add
rcr
dec
and
jl
add
pusha
add
or
pop
sub
aam
jne
fcoms
push
inc
lea
test
push
aam
add
aas
push
xchg
mov
jne
mov
inc
testb
pop
inc
cmp
bound
sub
pop
scas
movb
add
pop
scas
lahf
pusha
add
add
mov
je
inc
jns
aas
pop
mov
es
cmc
in
xchg
mov
cmp
inc
mov
je
and
push
repz
add
adc
shlb
sbb
lahf
fstpl
mov
cld
inc
add
mov
lahf
and
imul
add
in
aam
shll
adc
sub
inc
sub
clc
aas
xchg
je
mov
in
add
lret
mov
mov
sbb
js
xchg
xchg
xor
inc
pop
addr16
xchg
test
cwtl
pop
jae
stc
adc
pop
xchg
push
in
pop
mov
call
sbb
sub
idivb
imul
add
lcall
inc
jl
test
movb
add
adc
addb
jecxz
xchg
xchg
inc
cmp
lds
and
out
jb
sbb
movb
adc
shrb
fdivr
cmp
inc
push
xorl
or
jle
add
into
fistl
xor
add
iret
repnz
dec
jae
add
mov
sbb
and
jle
rcr
movl
jecxz,pn
mov
dec
xor
mov
pop
arpl
shl
cmp
dec
mov
add
lock
cld
repnz
dec
inc
add
fcmovnu
inc
add
gs
add
cld
andl
and
cld
mov
or
les
icebp
scas
pop
lahf
mov
dec
sub
jle
test
mov
xchg
mov
insb
jle
add
dec
mov
adc
pop
movsl
push
xor
sub
mov
jbe
fdivr
add
sub
lret
shrb
bnd
in
cwtl
cmp
pop
loop
stos
movsl
roll
add
jne
add
mov
lahf
out
push
out
sub
push
and
add
or
mov
inc
lock
mov
movsl
push
add
test
sub
xchg
jnp
es
outsl
mov
jns
test
fnsetpm(287
xchg
ret
insl
cld
sub
ja
aad
push
movb
imul
cwtl
mov
mov
add
inc
add
add
pop
jmp
loopne
add
inc
pop
int3
xor
idivl
push
pop
push
or
sbb
sub
jne
xor
sahf
jg
sti
popa
mov
add
push
sub
sbb
iret
xchg
clc
mov
mov
or
ret
add
cmp
test
dec
xchg
mov
fbld
jo
jge
add
aas
adc
jmp
push
out
sub
pop
pop
loop
iret
jns
xchg
inc
add
or
insb
add
xlat
fucomi
xchg
int3
in
xchg
rolb
cli
xor
ret
cmp
jmp
mov
call
sub
push
inc
movsb
inc
bound
std
in
inc
cmpsb
ss
je
jno
inc
add
pop
cld
sub
inc
add
faddp
add
les
sbb
leave
ficompl
rorl
jge
lret
rcrb
inc
inc
add
adc
rcrb
int
roll
imul
xchg
add
or
je
subl
loop
cmp
lcall
inc
add
loope
loop
jmp
push
lock
sub
shl
xor
mov
stc
mov
push
add
pop
adc
hlt
sbb
cmp
push
nop
pop
mov
repnz
add
loope
rcrb
rorl
popa
pop
push
lea
clc
es
loop
dec
addb
dec
cltd
inc
mov
mov
dec
test
movsl
jns
push
add
bound
inc
add
call
jae
xchg
xchg
sahf
mov
push
je
or
lds
stc
paddq
push
fsubrl
mov
pusha
add
ds
bound
sbb
add
lahf
clc
popf
push
or
xchg
and
push
adc
pop
aas
sbb
es
je
sbb
mul
call
mov
mov
add
outsl
ror
adc
mov
in
xor
sub
or
aam
iret
jmp
stos
lahf
jmp
xor
dec
mov
repz
add
push
push
stos
clc
or
popa
fwait
mov
jno
ds
xchg
into
repnz
jno
sti
jp
mov
mov
sbb
aaa
test
pop
inc
add
add
test
xchg
cmp
int3
sub
lods
xchg
fistl
stc
and
scas
jo
popf
addr16
sub
add
andl
add
inc
push
push
jg
fdivrp
sbb
popl
cmp
ror
push
xor
cmp
xchg
addr16
pop
testl
ljmp
sub
dec
pop
lods
dec
pop
xchg
push
mov
cmp
dec
sbb
addb
outsb
stos
mov
xchg
out
mov
test
mov
rcrl
out
test
jp
jg
add
xchg
add
mov
mov
xchg
cwtl
jmp
loop
sub
add
lret
fistpll
fnsave
pop
mov
add
cli
mov
xor
pop
or
mov
jecxz
loopne
lret
ja
test
dec
scas
scas
ja
mov
ja
xchg
and
cmp
scas
add
mov
push
out
or
lcall
addb
xlat
mov
aas
sub
inc
add
lods
repz
or
data16
jb
xlat
cmp
sbb
dec
lret
add
sti
stos
es
add
push
mov
cwtl
loope
ret
mov
lcall
fdivl
cwtl
inc
jp
dec
xchg
sub
push
add
data16
lahf
or
shll
inc
add
add
in
out
frstor
cmc
jl
call
cmpsb
xchg
pushf
jp
inc
pop
mov
les
pop
lcall
flds
jnp
sub
lahf
inc
add
mov
push
jae
or
add
xor
insl
mov
add
xchg
test
cmp
enter
sub
cs
xor
mov
fiaddl
add
movb
shrl
aas
inc
add
push
xchg
sbb
mov
add
cs
mov
push
leave
fstpt
pop
jl
out
sub
jne
add
out
rcrl
stc
add
add
je
in
and
ljmp
lods
clc
out
mov
imul
pop
int
push
dec
xchg
cli
movsl
jb
ljmp
cmp
fs
add
xchg
pop
mov
std
out
sub
xorl
addb
mov
mov
pop
jecxz
movsb
xor
popa
dec
iret
sahf
outsl
sub
add
or
add
jne
xor
bound
mov
pop
leave
xchg
dec
fucom
jmp
xlat
dec
and
mov
xchg
cmc
push
in
mov
pop
sbb
scas
stos
push
xchg
mov
inc
add
add
cmc
add
add
xor
hlt
and
shl
push
sbb
add
syscall
int
lret
push
mov
data16
sub
movsb
jns
add
daa
sub
addb
sbb
push
push
lea
call
hlt
jp
faddl
add
flds
call
push
pop
sub
mov
stos
test
mov
pshufw
lods
mov
pop
scas
sbb
cmp
mov
jo
popf
gs
jl
jp
addr16
xchg
push
push
fsub
cwtl
mov
pop
testl
jmp
lea
xchg
leave
mov
xchg
sbb
nop
jo
out
ljmp
stc
xchg
popa
sub
sbb
fadd
loope
int3
sbb
xchg
cmp
mov
popa
popa
sub
jge
leave
dec
rolb
add
pop
push
fstl
push
push
inc
pop
inc
add
pushf
ja
cld
xchg
pusha
add
and
jg
mov
add
insl
fidivs
push
sbb
mov
inc
mov
test
in
jns
inc
jns
lret
popa
pushf
pop
dec
mov
jns
enter
sub
pop
aaa
ss
xchg
add
xor
cld
shll
mov
clc
jbe
adc
add
xor
push
lret
push
add
addr16
add
stc
scas
addb
ficoms
jae
dec
push
lods
xchg
add
add
mov
mov
pop
pushf
mov
lods
push
adc
test
movsl
test
enter
sahf
push
mov
sub
in
call
les
mov
les
fbstp
pop
and
adc
push
loope
xor
xchg
mov
mov
push
and
push
sbb
xchg
loop
sub
popf
mov
jmp
pop
jae
mov
aas
shlb
add
dec
ljmp
add
dec
je
stc
in
lret
inc
ret
xchg
js
cmp
add
iret
stc
idivl
or
xor
add
sub
pusha
add
jmp
pop
jae,pt
rclb
push
rcrl
push
xor
fmull
add
push
jle
popa
sarb
in
add
out
loop
add
in
leave
mov
clc
mov
xor
or
pop
mov
in
add
aam
mov
push
loop
dec
sub
mov
shrl
pop
fdivrl
xchg
pop
shr
push
popa
xchg
movb
adc
mov
iret
lea
push
add
pop
out
dec
mov
and
sub
movsl
mov
mov
ret
ja
jg
pop
sbb
sahf
stos
lods
dec
stos
mov
mov
cmp
into
mov
inc
sbb
loopne
stc
adc
cmp
sbb
stos
adc
dec
cmp
popf
mov
and
sbb
push
imul
adc
pop
cmpsb
jbe
shrb
and
and
or
dec
xchg
pop
pop
sbb
mov
push
or
push
push
add
xchg
int3
or
add
negl
iret
data16
xchg
sub
cmp
xchg
pop
jb
add
mov
xor
sbb
fmul
or
sbb
cmpsb
mov
lea
mov
ds
aas
mov
push
add
jb
loopne
out
mov
and
fdivr
cmpsl
daa
xchg
daa
push
or
mov
js
cmp
pop
repnz
inc
das
or
mov
pop
sahf
flds
cwtl
jge
lods
xlat
js
bnd
xchg
daa
and
ret
xor
xchg
fistpl
lcall
jmp
ret
mov
jge
add
push
popa
jecxz
stc
sahf
jae
and
shl
lret
fprem1
and
add
icebp
into
fisttpll
rolb
add
bound
push
movsb
sub
add
mov
push
pop
fwait
jnp
and
shl
cmpsb
fidivrl
adc
pop
mov
push
dec
jbe
dec
xchg
mov
adc
sub
jmp
mov
mov
js
addb
cmp
mov
lods
sub
leave
xor
imul
dec
jmp
popa
push
add
pop
icebp
add
inc
add
in
push
pop
push
jbe
xor
add
daa
pop
fcoms
mov
push
cmc
stos
outsl
lds
add
scas
mov
leave
outsl
jle
outsw
push
pop
mov
stos
mov
xor
add
dec
lahf
xorl
jg
pop
stc
sub
push
in
addb
popf
ret
movsl
mov
std
addb
add
shrb
enter
std
mov
mov
mov
jg
mov
popf
mov
int3
pop
loop
ljmp
in
in
pop
xchg
sub
cmp
sbb
rcll
xchg
mov
stos
jle
lret
xchg
sub
add
push
test
push
jns
scas
sbb
int
xor
push
mov
es
inc
add
mov
roll
insb
inc
push
sbb
inc
add
pop
out
add
mov
add
jl
and
cltd
cmpsl
addb
rolb
mov
test
addr16
dec
push
ja
mov
pop
imul
add
add
mov
pop
mov
sub
mov
mov
out
mov
add
mov
repnz
addb
pop
dec
mov
jns
ja
add
imul
fidivl
enter
mov
mov
mov
pop
add
adc
add
addb
call
ja
ss
iret
push
fnstcw
add
or
adc
mov
out
push
add
mov
adc
sbb
repnz
jne
nop
and
cmpsb
mov
add
push
sarb
stc
enter
ja
mov
sbb
nop
cmc
sub
sarl
adc
out
subl
addb
xchg
out
sahf
mov
jae
xor
stos
fmul
idivl
add
dec
push
les
nop
mov
ret
add
cmpsl
mov
bound
outsl
jle
add
sub
daa
ret
inc
add
adc
hlt
push
dec
mov
sbb
mov
mov
mov
cmp
fildll
cs
jmp
add
cmp
arpl
mov
mov
lods
jl
out
dec
inc
or
inc
dec
inc
dec
mov
test
out
shll
ds
xorl
ficomps
or
cmp
scas
mov
adc
shlb
fiadds
jb
mov
sbb
jae
add
sahf
rolb
mov
lret
addb
add
add
add
enter
jp
js
daa
repnz
je
outsb
jnp
inc
add
push
add
xchg
enter
add
dec
mul
xchg
cmp
aaa
cmpsl
dec
jmp
insb
test
cmp
ja
mov
fldenv
add
lret
and
mov
pushf
add
addb
push
mov
xchg
inc
add
inc
fisttps
add
dec
push
les
out
push
cmp
ljmp
mov
jno
cld
aam
ret
jno
pop
lds
or
cltd
lods
pop
cmpsb
ljmp
test
test
int
sub
popa
add
push
cmp
and
inc
add
mov
leave
stos
pop
addb
fcoml
fabs
lods
decl
dec
push
add
or
jge
or
in
add
dec
fimull
xor
ljmp
fadds
pop
mov
outsl
out
jg
out
add
ss
cs
mov
sbb
dec
shlb
cwtl
push
xchg
sbb
adc
sub
or
sub
mov
ficompl
enter
xchg
jns
mov
cld
jno
push
gs
push
or
add
dec
out
xchg
mov
pop
jbe
outsb
insl
addr16
adc
pop
fisubs
pop
add
das
das
test
mov
xchg
leave
je
data16
dec
popf
sbb
stos
adc
mov
scas
pop
stos
sub
xchg
cmp
loope
mov
cmp
pop
xchg
mov
lahf
pop
mov
dec
adc
push
test
add
aad
add
pop
aad
push
fistl
pop
outsb
or
ficompl
rolb
test
cmp
lcall
push
xor
mov
fisttps
inc
add
add
xor
mov
xchg
or
cli
daa
cltd
std
xchg
jl
aaa
xor
rclb
add
inc
add
rolb
icebp
scas
cwtl
inc
into
in
test
xchg
adc
testb
mov
addb
add
add
mov
sahf
mov
add
shlb
adc
push
fcomps
jl
add
jp
stc
imul
addb
pop
push
fsubl
mov
xlat
insb
dec
dec
cmpsb
add
out
aaa
mov
xchg
pushf
add
mov
cmp
das
or
movb
aaa
test
push
xor
add
nop
negb
dec
inc
inc
add
and
add
inc
movsl
testb
jmp
scas
mov
addb
add
insb
repnz
mov
mov
inc
add
add
or
outsb
push
fdivrl
sub
call
mov
mov
fisttpl
cmpsb
cmp
xchg
std
daa
xchg
add
gs
mov
pop
and
adc
mov
fidivrl
mov
lea
push
lret
cld
mov
sub
cs
lret
mov
mov
xchg
ljmp
cld
or
or
or
sti
test
aaa
out
pop
loop
jecxz
ds
data16
test
sbb
lret
scas
xchg
and
jmp
xchg
adc
mov
fistl
add
repz
or
lock
push
pop
data16
in
inc
add
mov
add
shr
nop
movsl
mov
jp
leave
stos
inc
mov
pop
int
or
rclb
mov
sub
and
inc
add
xchg
es
add
data16
mov
loope
jle
cmpsb
stc
xchg
inc
aas
mov
pushf
mov
into
pop
int3
cmpsl
mov
xor
repnz
cmc
cltd
andl
pop
mov
or
lock
notl
aas
sbb
jp
add
mov
rolb
inc
add
lahf
arpl
pop
sbb
icebp
in
adc
enter
add
and
xchg
das
xor
pusha
add
frstpm(287
pusha
add
mov
ljmp
mov
jecxz
sub
mov
inc
add
add
pop
mov
xchg
dec
in
in
bnd
jmp
out
add
cmp
add
inc
add
xchg
xor
inc
add
add
add
and
add
ss
push
add
or
push
xchg
sub
push
mov
rolb
pop
mov
pop
jae
dec
clc
mov
add
pop
bound
mov
aaa
testb
mov
xchg
ja
add
add
xor
rclb
imul
or
dec
pop
jecxz
fwait
rorb
add
popf
jmp
mov
add
mov
cwtl
inc
add
dec
pop
push
cmp
xor
mulb
ja
cmpsl
cmpl
ficoms
mov
sbb
fists
add
cltd
cli
lea
int3
sbb
mov
sbb
add
fiadds
add
mov
loop
je
mov
aaa
shr
es
push
mov
icebp
adc
add
iret
in
and
inc
add
add
jmp
pop
aaa
and
rorb
jmp
mov
pop
shll
cmpsl
push
dec
fisubl
mov
cmp
bound
and
push
fwait
push
pop
repz
add
nop
movlps
enter
movb
or
mov
mov
push
lods
cld
mov
push
aaa
add
mov
add
movb
ja
ja
ss
cmp
fnsave
sub
lds
shll
lods
lahf
out
addb
mov
mov
outsb
mov
mov
jno
inc
jo
ficomps
xchg
push
std
mov
inc
add
xor
fisubrl
out
xchg
daa
stos
cmp
sbb
test
cltd
fstl
daa
pop
mov
dec
cli
movsb
clc
dec
push
lahf
int3
fimuls
mov
jl
lret
add
pop
xor
inc
repnz
inc
add
add
fisubrs
ret
mov
in
mov
sti
js
addb
adc
add
mov
sub
dec
mov
icebp
rorl
pop
push
int3
test
sbb
lds
add
jno
jp
mov
imul
add
add
dec
outsl
insb
jno
add
sub
and
inc
mov
and
cmp
rcl
push
inc
cwtl
fidivrl
fstl
mov
fxch
and
mov
jb
lock
or
scas
lahf
push
add
add
mov
pop
mov
pop
xor
lods
dec
mov
jae
in
fstl
je
jge
sub
mov
les
imul
shlb
mov
divb
jmp
xor
add
add
push
mov
inc
lds
pop
xchg
push
jb
imul
push
addr16
fstpt
orl
jo
add
mov
jno
rolb
add
mov
jnp
add
mov
popa
mov
mov
lcall
jl
ds
sub
dec
fsub
xchg
les
dec
shll
add
pop
aaa
xchg
push
cmpsl
repnz
test
dec
xor
jbe
in
popf
lret
cmp
in
cltd
fbstp
xchg
loop
sbb
ss
and
or
mov
add
jnp
arpl
dec
push
add
adc
mov
test
mov
cmp
sbb
cltd
sub
or
cmp
push
addb
fisttpl
leave
sbb
mov
mov
jb
mov
in
test
out
pop
out
jae
sbb
push
xor
out
stos
adc
xchg
popa
popf
jnp
mov
fstpl
sahf
push
mov
icebp
sub
mov
or
or
in
inc
fwait
scas
add
add
jns
arpl
inc
pusha
add
cltd
dec
jmp
loopne
out
inc
inc
cwtl
leave
xchg
inc
add
idiv
ss
sarl
popf
push
sahf
in
imul
add
mov
add
adc
or
xchg
out
out
mov
inc
add
int3
leave
in
outsb
nop
outsb
and
xor
cmpsb
insb
dec
sbb
inc
add
mov
xchg
dec
mov
xlat
and
xor
and
mov
mov
lret
xchg
imul
xor
rorb
ss
fsub
xor
mov
cmp
dec
jl
jg
aas
sub
cmp
sub
add
mov
popa
xchg
fwait
cwtl
scas
adc
pop
mov
sbb
lock
lret
mov
mov
jae
pop
jno
cltd
or
nopl
add
dec
shrl
or
je
xchg
das
inc
sarl
xor
movsl
test
adc
mov
xchg
adc
sub
lock
in
insl
lea
dec
add
add
cmp
xchg
push
mov
and
xchg
lds
movsl
mov
scas
dec
movsl
push
movb
add
fs
lods
ja
add
jg
lods
cmp
dec
ja
pushf
sbb
int
popf
adcl
imul
push
repnz
sbb
sti
adc
xor
dec
pop
mov
fidivl
repz
rcrb
add
inc
add
movsl
int
add
sub
scas
jmp
roll
jmp
mov
push
xchg
sub
lods
cmp
add
dec
mov
mov
mov
popf
sbb
cmp
movsl
jp
sub
dec
jmp
call
jns
jno
jl
add
add
xchg
sti
inc
add
cmp
mov
add
jg
aas
popa
dec
test
lods
pop
mov
add
mov
fsubr
push
fldl
jp
or
sbb
lret
pop
jle
leave
lret
popa
add
iret
or
xchg
and
out
ljmp
add
xor
rolb
push
push
lcall
fildll
sbb
fcoms
cmp
add
shrl
movsl
inc
jl
shll
cmp
popf
xchg
inc
add
cmp
out
add
pop
out
je
xor
mov
movsb
add
in
add
mov
out
add
sbb
seta
jmp
dec
lods
jnp
or
jmp
bound
int3
and
outsb
add
leave
xor
add
pop
cmp
mov
push
inc
add
push
dec
sbb
adc
dec
faddp
jecxz
push
out
das
mov
aam
daa
sbb
cmp
sahf
jle
dec
adc
add
mov
imul
or
dec
pop
push
mov
add
movsl
insl
dec
xorl
loop
add
fwait
aad
sbb
cmp
xchg
jle
add
push
sub
imul
shl
sub
sbb
loopne
fnstenv
pop
addb
addb
roll
add
imul
or
cmp
lea
std
das
add
sti
js
jnp
adc
jnp
punpckhdq
out
mov
dec
popa
jns
add
jae
clc
mov
mov
les
imul
roll
fstpl
pop
sbb
pop
in
test
icebp
ja
xchg
cmp
cs
out
push
jg
and
pop
mov
or
mul
dec
out
mov
js
xchg
movb
mov
testb
jmp
push
sbbl
pop
jge
lret
dec
add
inc
add
fsubs
sbb
add
sub
sti
inc
push
pushf
or
outsl
push
add
pop
xchg
mov
pop
imul
jp
adc
mov
out
aas
xchg
push
xchg
notl
je
setb
mov
mov
call
sbb
aad
shrb
push
bound
dec
jae
add
xor
in
imul
add
testl
push
mov
push
mov
add
jecxz
push
pop
gs
and
mov
dec
xchg
xchg
ret
push
sbb
dec
lcall
sub
aaa
les
cmp
mov
bound
cmpsl
clc
repnz
out
pop
fistpll
sti
frstor
popf
cmp
je
pop
cwtl
sahf
mov
jo
out
pushf
or
inc
test
inc
add
jb
jg
or
aaa
test
fsubrs
int3
mov
add
daa
dec
imul
inc
add
jne
test
test
xchg
pop
es
enter
sub
cmp
bound
sbb
ret
out
add
fidivrl
jae
insb
imul
and
cwtl
int
and
pop
dec
faddl
add
out
inc
mov
adc
xchg
push
xchg
dec
or
mov
mov
mov
or
xchg
cmp
call
sbb
rcrb
adc
dec
push
in
adc
inc
loop
inc
add
gs
sbb
push
test
add
stc
movb
movsl
and
inc
imul
enter
push
inc
add
add
add
movb
shlb
add
ret
aad
push
aam
xor
and
lcall
mov
lock
hlt
out
lods
dec
adc
pop
jae
rol
push
or
or
adc
sub
rcll
lods
addb
insb
popf
pop
adc
sub
xor
stc
sti
sbb
pop
ret
iret
je
test
inc
adc
aad
fwait
sbb
shrl
xchg
jg
mov
add
outsl
jae
mov
inc
mov
mov
aam
pushf
dec
sub
ss
test
in
cs
xchg
jp
lahf
neg
jge
stos
and
dec
xor
xchg
orl
shl
data16
lret
mov
cmp
pop
adc
sub
scas
lret
push
out
lahf
jns
dec
shlb
mov
inc
add
adc
pop
sbb
fisubl
add
pop
sahf
and
gs
pop
adc
rolb
es
ljmp
xlat
lcall
add
xchg
sub
scas
sbb
imul
xchg
or
mov
and
dec
ss
inc
add
add
add
mov
add
movb
jmp
push
and
outsl
mov
rcll
es
push
out
test
dec
xor
iret
jne
stos
test
mov
jle
mov
jno
testb
pop
shll
ds
or
js
mov
popa
jge,pn
mov
jns
inc
push
outsl
faddl
lock
scas
outsb
out
sahf
xchg
jns
mov
dec
scas
addb
sti
mov
jo
xor
add
and
ss
push
add
cmp
xchg
xchg
scas
dec
mov
push
insb
les
movb
fnstcw
mov
or
sbb
or
jo
xor
push
push
jo
add
add
loop
loop
mov
movsl
inc
mov
jmp
in
xlat
cmpsb
sub
fstpt
lock
mul
dec
lods
dec
into
and
add
xchg
js
and
inc
add
and
jp
dec
cwtl
into
jb
xchg
jno
and
mov
fldenv
add
mov
pop
cltd
inc
add
dec
mov
push
mov
sub
ja
adc
xchg
lods
imul
fimuls
add
insb
sub
lock
add
test
push
and
popa
xor
mov
xorl
pop
rolb
add
out
icebp
ss
rolb
pushf
add
fs
inc
inc
mov
mov
ja
test
mov
imul
lcall
mov
js
jmp
add
insb
cwtl
cmpsb
pop
mov
inc
push
int
add
add
pop
jle
in
popf
aad
push
out
add
mov
adc
xchg
iret
or
xchg
mov
sbb
xor
stos
push
loopne
dec
xor
mov
or
or
push
cmp
sbb
xchg
rclb
adc
test
call
pusha
add
daa
icebp
push
push
or
pop
scas
ret
jmp
nop
pop
psubsw
loop
mov
mov
shl
cs
test
stc
mov
out
cmpsb
xchg
push
mov
dec
add
or
mov
add
mov
adc
data16
sti
les
inc
add
push
sahf
mov
call
scas
js
dec
jne
inc
movsb
jmp
int3
and
out
mov
inc
popf
imul
divl
imul
push
pop
xchg
xchg
pop
fucom
push
ja
outsl
js
shl
jecxz
fcompl
add
add
popf
mov
pop
mov
aam
addb
stc
add
mov
add
add
inc
std
mov
sbb
lea
sbb
add
cmpsb
aas
popf
sbb
cmc
bnd
ja
sub
jbe
outsb
mov
pop
xor
setb
xchg
enter
pop
leave
sbb
idivl
fstl
push
cmp
enter
add
outsl
dec
sub
add
add
xchg
jmp
xchg
jno
js
and
add
ss
add
lods
fildl
adc
adc
jp
mov
dec
inc
cmpsl
fildl
cmpsb
es
add
lods
sbb
repz
pop
addb
test
shll
mov
push
jb
aas
mov
inc
add
test
inc
movsb
sbb
pushf
pop
mov
push
jns
sub
stos
ds
and
jae
mov
mov
add
mov
sub
add
sahf
pop
jp
ds
sbb
jnp
add
cmp
aad
xor
cmp
jle
add
dec
dec
mov
mov
add
aam
lds
shr
inc
add
fwait
jp
push
add
xchg
lahf
xlat
decb
jmp
mov
int
sub
dec
mov
test
pusha
add
cmp
scas
in
inc
add
xchg
sub
test
push
popf
pop
jp
add
sbb
jp
cmp
or
add
cmp
add
aas
mov
scas
mov
mov
sbb
mov
enter
cwtl
pop
mov
jo
dec
orl
mov
mov
dec
push
mov
jno
movsb
sbb
arpl
add
and
xor
aad
sahf
xchg
add
test
stos
call
add
scas
jl
push
mov
inc
hlt
push
ljmp
scas
dec
sbb
add
in
movsb
sbb
push
cli
daa
cmp
add
cs
and
mov
mov
rcrl
subl
and
sub
movsl
mov
jl
dec
inc
addb
add
fs
add
pop
enter
cmp
stc
rorl
jmp
cmpsb
push
mov
add
fistpll
jl
icebp
ret
jge
ds
inc
add
gs
xor
inc
add
jmp
dec
repz
inc
add
std
pop
and
dec
repnz
add
pop
ja
daa
sti
bnd
cvtps2pd
xchg
popa
dec
andl
xchg
scas
mov
push
imul
push
lret
cmc
push
in
sub
es
jbe
rolb
jmp
std
inc
add
daa
ss
test
cmp
add
int3
cmp
jno
stc
cmpsl
addb
or
push
add
xor
push
enter
in
clc
mov
sahf
mov
mov
dec
ror
fs
div
sahf
mov
ds
inc
add
cs
add
les
mov
ja
add
fwait
test
adc
mov
aas
shlb
or
mov
xor
leave
mov
mov
iret
and
jge
pop
push
pop
push
jbe
mov
insb
loopne
push
dec
dec
jg
push
add
repz
add
xor
cmpsb
xchg
mov
mov
adc
sbb
dec
sub
sub
xchg
fcmovnb
add
and
sbb
xlat
and
iret
aaa
subl
mov
repz
cmp
out
xchg
mul
stos
insb
xor
push
notl
addr16
or
in
xchg
mov
fists
dec
add
fistpll
xchg
add
daa
sbb
pusha
add
int3
add
dec
test
or
mov
xor
cld
pop
jae
inc
add
jl
bound
or
addr16
scas
adc
addb
stos
dec
shrb
sub
shl
inc
movsb
xchg
fildll
add
xchg
xchg
pop
pop
pop
adc
xor
mov
inc
imul
push
sub
mov
lahf
lret
repnz
icebp
lret
push
push
test
js
xchg
mov
das
popa
push
mov
cmpsl
aas
pusha
add
jg
add
pop
cmp
sub
dec
ja
fnstsw
popa
call
enter
cld
pusha
add
or
imul
jmp
mov
sbb
ficompl
out
out
sete
mov
pop
jne
in
sub
and
js
aas
mov
xlat
ljmp
inc
fistpll
jp
pop
xchg
push
repnz
fcoms
gs
outsl
out
cwtl
jmp
data16
sub
mov
iret
mov
or
and
mov
cld
popf
addb
dec
movsl
and
pusha
add
testb
push
push
mov
ftst
rolb
jecxz
in
push
lods
aas
xor
add
add
aaa
jge
adc
jno
aam
fsts
in
lea
or
je
add
sbb
ficomps
jg
lcall
mov
jbe
jne
cmp
insb
ljmp
mov
add
or
mov
jno
push
add
sub
test
stos
jg
xchg
mov
jecxz
in
sbb
imul
cmc
in
fstpl
fildl
enter
mov
or
les
fldl
mov
add
jp
sub
mov
cmpsl
lahf
pop
mov
adc
push
in
pop
jl
testl
dec
fwait
out
out
xchg
cmp
add
xchg
sbb
add
xlat
push
popa
insb
test
loope
int3
pusha
add
or
jb
jnp
lret
aaa
jae
xor
add
mov
dec
adcl
add
xchg
or
out
aaa
mov
shrl
addr16
inc
add
push
dec
adc
xchg
jo
and
scas
int
add
cmc
addb
add
shrl
das
adc
add
sbb
dec
dec
aas
das
cmp
push
leave
fwait
les
pop
ret
mov
stc
popl
daa
or
aas
mov
sub
adc
js
add
loope
or
sbb
push
add
popf
ret
sbb
jg
add
movb
push
or
imul
mov
in
add
fwait
sub
fisubrs
cmp
addb
icebp
jle
add
addr16
decb
xor
and
cmp
add
and
mov
arpl
sbb
clc
sub
cmp
mov
out
mov
mov
sbb
add
imul
mov
mov
jo
inc
add
mov
dec
lods
and
lcall
add
cmp
test
fstpt
pushf
movsl
in
dec
rcll
cmpsb
xor
push
mov
mov
test
fldenv
add
add
jne
les
pop
out
xor
out
dec
lahf
int
mov
cmp
sbb
popa
pusha
add
std
push
call
jmp
mov
stos
xchg
hlt
dec
jbe
insl
mov
push
cmp
mov
add
mov
cwtl
xchg
jp
rolb
pop
jne
pop
mov
add
stos
and
sbb
mov
xchg
bound
ret
push
ds
add
je
jb
inc
add
or
and
stc
scas
jmp
lcall
cmp
fstpt
xor
ds
das
inc
mov
push
sub
in
adc
add
jle
add
fwait
cwtl
mov
pop
mov
add
adc
ja
mov
mov
sub
mov
fs
cmc
and
xchg
cltd
movsl
aad
repnz
add
mov
es
cli
xor
xor
out
or
aam
push
cmpsl
xchg
add
les
sbb
dec
imul
xchg
and
or
xor
jmp
sbb
addl
pop
inc
add
sbb
std
movsb
out
jbe
push
lock
or
lds
cmc
pop
dec
scas
call
mov
push
mov
jl
pop
jmp
push
loope
sub
adc
stc
cmp
add
add
test
pop
ljmp
in
xor
sub
push
jo
stos
loope
inc
xchg
xchg
outsb
add
pop
ja
out
cmp
movsb
jne
push
cmp
sbb
add
add
mov
test
or
daa
gs
jb
cltd
pop
sub
push
call
add
add
cmp
in
mov
add
xchg
dec
mov
nop
imul
dec
loop
jecxz
add
add
cltd
jmp
das
aad
imul
addl
out
lahf
fildl
mov
or
add
adc
add
addr16
cld
dec
adc
sub
mov
and
add
inc
adc
mov
add
addb
lcall
mov
mov
out
mov
mov
dec
arpl
cmp
add
lods
mov
jg
jb
xchg
mov
test
add
mov
iret
mov
push
xchg
adc
or
mov
add
shrb
sub
out
sbb
fdivs
insl
mov
cmpsl
jnp
add
stos
cs
hlt
mov
rcll
adc
mov
gs
fdivrp
pushf
or
mov
lcall
rorb
subl
roll
cmpsb
pusha
add
inc
xor
cld
cmp
loop
xor
jbe,pn
add
pop
xlat
popa
xchg
std
xchg
xor
jl
pop
insb
je
ljmp
xchg
pop
insb
mov
fsts
lods
mov
pop
cmp
cs
and
loopne
cmc
mov
jbe
mov
ss
or
cli
cmp
mov
stos
push
mov
dec
cmp
mov
adc
inc
xchg
push
addr16
movb
mov
outsl
xchg
dec
xlat
mov
lods
gs
pop
outsl
clc
xor
loop
pop
lret
out
fnstenv
push
jnp
xchg
stos
xor
mov
mov
add
pop
mov
ret
out
test
aad
push
push
jl
movups
mov
inc
add
or
mov
cli
or
movb
cli
imul
nop
ds
sbb
loop
pop
xchg
lds
or
cwtl
push
jle
add
and
sbb
sahf
fnstsw
mov
cmpsl
xor
in
fs
cltd
jmp
fidivs
into
mov
inc
add
or
dec
sbb
sub
add
inc
add
lods
test
jmp
mov
push
jl
add
add
push
sbb
cmp
gs
dec
jo
rolb
add
mov
gs
sub
sbb
mov
pop
xchg
cmp
pusha
add
out
mov
xor
nop
inc
test
shll
repz
pusha
add
outsb
stos
aas
or
add
mov
addb
test
cmpsl
xchg
les
divb
lret
jl
add
add
lea
sbb
jne
inc
mov
jl
cli
inc
xor
push
sti
push
sbb
stos
and
sbb
js
mov
add
lahf
addr16
push
rep
les
mov
add
mov
cli
scas
addb
add
sarl
test
into
popa
mov
lock
or
jae
and
popa
mov
and
repz
inc
addb
out
jl
roll
iret
jg
adc
call
inc
and
jle
dec
pop
jge
add
inc
add
test
mov
repnz
mov
lea
add
push
movsb
mov
lret
jb
rclb
inc
add
mov
stos
push
in
std
push
lods
insl
and
push
mov
add
dec
mov
pop
and
pop
jo
mov
jne
add
add
and
movsb
arpl
add
xor
or
mov
pop
aas
inc
sub
lea
nop
out
cltd
dec
ret
or
adc
add
fwait
jecxz
mov
inc
xchg
add
test
lock
fcompl
mov
test
bound
roll
add
mov
rcrl
mov
nop
cmp
add
add
xchg
dec
fidivrs
adc
xchg
xor
add
rcrl
push
sahf
nop
fisttps
xor
in
jbe
shrl
aam
add
jbe
adc
in
pop
sub
mov
loop
ss
loopne
cmp
add
testb
add
pusha
add
push
jmp
dec
jle
mov
das
pushf
mov
int3
mov
add
mov
push
shll
out
cmp
mov
cs
outsl
test
jle
out
inc
add
mov
fs
push
stc
mov
lahf
mov
add
add
repz
cmp
adc
fs
cmpsl
xchg
push
inc
jb
fisttpl
pop
adc
add
cmp
lock
fbld
mov
pushf
push
adc
jns
je
add
sub
stc
movl
push
dec
mov
sbb
scas
inc
add
adc
ret
lea
fldcw
outsl
movsb
fs
outsb
mov
dec
cmp
add
hlt
xor
fmulp
loopne
hlt
imul
movb
or
cmpsb
orl
and
cmpsb
push
js
add
lods
add
pop
cmc
mov
fs
popa
es
scas
jmp
fwait
sub
cltd
pop
test
sbb
test
outsl
call
in
dec
jbe
push
xchg
aas
mov
stos
sub
add
or
call
pop
mov
data16
dec
xchg
push
out
add
add
stos
mov
out
mov
out
xlat
repnz
loope
faddl
mov
insl
imul
xor
adc
loopne
shll
add
sub
push
add
in
sahf
jg
sub
mov
sub
pop
test
ret
add
sahf
loop
pusha
add
in
outsl
imul
xchg
push
fs
mov
cli
imul
aad
jb
repnz
addb
inc
add
jns
sub
pushf
movsb
orw
jno
enter
add
cmpsb
sti
movb
addb
sbb
popa
mov
bound
xor
xor
mov
add
add
in
add
jecxz
add
bound
inc
cltd
add
push
xchg
test
lret
add
mov
out
int
in
mov
pop
imul
push
stos
popf
jmp
lahf
aad
xor
add
jb
movsl
popf
pop
pop
pop
pop
fimull
test
adc
sub
es
aaa
aas
in
add
adc
add
cmp
add
inc
ficompl
cltd
and
shrl
repnz
lahf
add
enter
add
add
loopne
mov
jns
adc
in
addb
push
and
mov
mov
dec
mov
dec
sbb
adc
push
dec
push
add
jo
and
dec
addb
or
fists
rorb
adc
scas
cmpsl
popf
mov
lret
xor
jecxz
push
sbb
pop
shlb
bound
bound
mov
push
sbb
xchg
dec
dec
jno
add
call
rolb
pop
xchg
clc
imul
xorl
icebp
dec
fldl
add
jns
add
add
mov
lds
xor
xor
mov
mov
pop
sti
sub
fwait
lret
push
jle,pt
add
cltd
and
repnz
insb
jg
add
adc
add
movb
add
lahf
sub
xchg
aad
sbb
mov
mov
roll
add
mov
add
jge
or
xlat
dec
inc
add
push
bound
iret
pop
pop
data16
add
add
add
push
lea
adc
mov
add
movsb
jmp
rclb
loopne
push
adc
dec
lret
or
fwait
mov
dec
jp
repz
mov
fiadds
and
cmp
filds
dec
inc
movsb
leave
inc
add
outsb
mov
shll
jno
out
jmp
out
fiadds
int3
and
xor
outsl
test
stos
es
xchg
repz
mov
cs
stc
inc
push
hlt
arpl
add
jbe
add
mov
sbb
xchg
aam
jb
cmp
das
mov
sub
jne
dec
pop
xchg
rcrl
sbb
iret
nop
aad
mov
cmp
movsl
xor
outsb
mov
stc
bound
xor
popa
jbe
add
add
cmp
stos
fistpll
ret
xchg
movsb
clc
jl
jbe
pop
in
loopne
add
arpl
cs
add
fdivrs
sbb
xor
icebp
in
or
jno
aad
add
jmp
and
pop
clc
mov
mov
dec
jnp
cmp
int3
addb
or
jp
jp
add
imul
push
lods
mov
loop
add
push
add
movb
test
cld
mov
cmp
jbe
mov
notb
into
stos
push
jmp
add
and
nop
inc
popa
inc
add
and
leave
pop
sub
add
scas
aad
add
sbb
push
in
int3
cmp
outsl
xchg
mov
test
nop
out
mov
jnp
hlt
lds
add
notl
daa
mov
call
lds
xchg
test
cmc
fiadds
add
ljmp
cmpsb
mov
fistl
sbb
push
cltd
add
and
test
mov
jbe
pop
xchg
cmp
jns
jp
ret
ret
lcall
lds
add
and
xor
mov
pop
pop
push
es
in
lcall
sub
cltd
daa
push
add
adc
fistl
pusha
add
test
loop
in
mov
outsb
lret
rep
rolb
pushf
adc
sbb
dec
adc
and
mov
movb
addb
inc
dec
sbb
loope
sub
push
mov
outsb
mov
xor
adc
push
push
xchg
xlat
mov
push
out
push
add
sbb
data16
xchg
out
pop
dec
test
cmp
das
rolb
mov
add
jecxz
popf
cwtl
out
jmp
sbb
fisubl
add
je
pop
inc
add
outsl
out
dec
sbb
xchg
js
ds
adc
test
lods
ja
jo
mov
cmp
pop
sbb
adc
lcall
test
xor
es
jle
mov
pop
pop
xchg
xor
dec
sub
jnp
clc
divl
int
loopne
or
mov
xchg
notb
test
inc
movsb
insl
loopne
in
jle
cmp
fistpll
pop
movsl
js
and
xor
mov
cltd
xchg
dec
sbb
rcr
sub
lds
jnp
popf
pop
mov
jle
add
ja
mov
mov
aas
movsl
mov
xor
jo
add
inc
add
xchg
lock
daa
and
clc
iret
jp
mov
cwtl
rcll
jb
popa
sarl
lods
inc
add
in
pop
and
fsts
lds
sbb
scas
arpl
out
jg
bound
jbe
jp
add
dec
cmp
push
out
adc
or
movsb
insl
mov
xor
insl
push
mov
push
sbb
inc
in
popa
in
stc
and
aaa
mov
pushf
mov
or
mulb
add
cmp
inc
add
adc
repz
jb
mov
push
add
repnz
sub
stos
mov
rcr
lods
aas
jg
mov
jns
xor
sbb
ljmp
cmp
sbb
xor
add
lcall
add
rolb
je
ret
push
jmp
and
cmp
aas
insl
inc
xchg
pusha
add
add
pushf
ret
scas
push
and
dec
and
dec
and
pop
lret
adc
pop
jo
dec
mov
sbb
jae
jecxz
je
sbb
push
inc
adc
enter
xchg
push
stos
xchg
stos
adc
adc
inc
add
add
sub
or
pop
test
lea
adc
mov
mov
mov
jg
cli
pop
loop
mov
into
cmp
add
repnz
dec
pop
mov
sub
je
cli
or
cmpsb
sahf
jb
insl
lods
inc
add
jg
xchg
neg
push
insb
out
adc
or
jle
xor
bound
push
add
movsl
call
cs
adc
stos
adc
subl
push
inc
add
shll
out
pop
fwait
add
xor
jbe
fwait
and
or
cmp
dec
in
in
or
jg
sub
jle
mov
cmp
lods
sub
add
repz
outsb
sub
add
je
popa
daa
or
or
testl
pop
arpl
xchg
or
add
test
pop
mov
hlt
rcll
and
add
scas
addb
pop
gs
pop
inc
aaa
stc
inc
ret
mov
push
sbb
sti
mov
xchg
pop
jg
idivl
xchg
outsl
jb
and
lahf
xor
mov
sbb
mov
dec
add
dec
push
inc
clc
cmp
es
loope
shlb
pusha
add
mov
cwtl
push
cltd
arpl
add
sbb
push
inc
add
fldenv
mov
addb
ret
fwait
shl
loopne
pop
xlat
fimull
add
xchg
mov
push
lahf
pop
lock
add
flds
push
xchg
ljmp
rolb
leave
std
test
or
cmc
pusha
add
add
data16
push
add
xor
repnz
cmpsb
xor
add
daa
iret
out
aas
nop
ret
push
push
add
std
lock
xchg
sbb
pop
loopne
and
lret
loop
fistl
mull
inc
add
jae
sub
add
add
lcall
inc
cmp
subl
or
cmp
lahf
or
adc
in
fbld
pusha
add
fstpt
sub
mov
fistpl
aas
xor
add
mov
mov
mov
push
into
mov
ret
xor
dec
cmp
inc
test
hlt
test
xor
add
add
dec
adc
mov
jp
aas
notb
cli
xlat
shrb
inc
or
jb
out
sahf
cmp
rolb
cltd
mov
lret
adc
add
movsl
jns
inc
inc
mov
ja
jo
stc
xchg
test
test
shlb
add
movsl
mov
adc
lret
xor
call
or
aaa
and
rcll
pushf
dec
test
mov
repnz
addl
movb
add
pop
xor
sub
stos
std
dec
data16
dec
lcall
dec
movsb
xchg
add
pop
rcll
out
lods
jp
sbb
sbb
dec
mov
ja
fistpl
pop
sbb
in
pop
sub
sub
add
adc
sar
jae
scas
in
sbb
add
xchg
push
mov
pop
jo
inc
add
mov
push
cs
movb
jbe
jnp
add
hlt
clc
leave
movsl
enter
xchg
add
and
ret
stc
mov
xchg
mov
push
sbb
cmp
add
movsl
mov
or
add
and
mov
push
add
mov
gs
add
les
movsl
mov
pop
mov
in
imul
push
and
or
shl
loope
jmp
push
les
icebp
mov
call
mov
push
je
mov
mov
mov
jmp
cmp
neg
aas
jb
cmpsl
out
jle
pop
stos
adc
inc
aas
hlt
mov
add
in
xor
and
movb
in
addr16
outsb
out
imul
outsl
xchg
mov
pop
scas
cs
push
xchg
and
mov
addb
addr16
add
add
push
mov
or
or
iret
mov
adc
push
or
outsl
xchg
jl
stc
in
ljmp
push
mov
scas
lock
dec
cmp
add
jmp
int3
js
movsb
imul
cmp
ljmp
sbb
fsubs
cltd
pop
fs
or
add
add
nop
jnp
push
lock
push
fmuls
pusha
add
xchg
xor
jae
out
lret
std
fildl
push
subl
out
add
arpl
loop
xor
adc
aam
aam
xchg
fcomps
pop
bound
es
cmc
lcall
dec
imul
scas
xor
shll
xchg
adc
lods
mov
shrl
push
add
add
mov
cmp
add
mov
push
inc
leave
mov
add
out
ret
sbb
xchg
cld
sbb
add
adc
add
mov
and
sbb
bound
cli
push
mov
ds
dec
mov
sub
jne
xchg
or
outsb
fwait
xchg
mov
out
mov
mov
cld
lea
test
cmp
mov
jmp
dec
in
bound
xchg
xor
mov
movsb
stos
ds
scas
sbb
gs
xchg
repz
mov
scas
sub
enter
scas
xchg
and
mov
push
mov
fsubr
mov
sub
filds
dec
rolb
je
or
sub
jns
xchg
inc
add
inc
stos
sahf
mov
jno
mov
addb
add
mov
jnp
sbb
add
loopne
stos
scas
scas
jbe
add
movsl
stos
ja
cmp
xor
mov
les
sbb
rolb
leave
repnz
jno
mov
jnp
push
xor
sbb
xchg
sub
in
or
pop
xor
xchg
lods
imul
jp
add
aas
les
gs
ljmp
push
adc
xlat
daa
sbb
push
add
xor
ret
mov
rclb
dec
into
jle
popf
push
mov
shll
pop
jge
add
jo
sar
xchg
jge
jbe
bound
cmpsb
leave
mov
es
push
pop
xchg
movsb
lcall
xchg
rolb
mov
cmpsb
jo
mov
adc
add
xchg
adc
pop
mov
fildl
add
fbstp
xlat
mov
jnp
jp
add
daa
push
xchg
add
add
add
push
push
lock
je
mov
ret
addb
dec
and
and
add
mov
or
or
add
outsb
adc
cmc
fucomi
mov
xlat
je
mov
jp
add
mov
add
stos
arpl
adc
add
mov
icebp
loope
inc
add
fimuls
dec
and
adc
jne
test
loopne
mov
cli
lods
fwait
inc
mov
cmpsl
jb
movsl
push
in
adc
mov
jne
add
xor
sub
stos
dec
addb
test
push
call
add
outsl
sub
mov
push
xor
mov
loope
mov
pop
xchg
push
cmpsb
lods
jne
pop
sbb
cmc
in
jno
addb
enter
add
std
sub
pop
mov
sti
adc
mov
fisttpll
lock
add
sub
inc
add
mov
lock
add
jmp
fstl
outsl
out
stc
pushf
dec
out
mov
pop
filds
cmc
ret
shlb
std
xor
pop
imul
jb
fildll
mov
pop
inc
sbb
or
push
push
add
aam
push
cmp
or
and
inc
add
dec
jo
dec
ds
jae
xchg
pushf
xor
mov
or
sbb
or
mov
mov
sbb
push
mov
xchg
or
inc
cltd
test
pushf
add
add
cmpsb
or
hlt
dec
mov
ja
test
dec
imul
add
or
lods
xchg
or
push
int
movsb
scas
inc
test
pop
fsts
cmc
shr
dec
dec
dec
push
jno
mov
xchg
or
add
sbb
dec
sbb
push
bound
jl
push
lods
mov
push
mov
lahf
sub
es
mov
movb
mov
idivl
std
repnz
addb
xchg
mov
ljmp
mov
lea
daa
je
repnz
loopne
in
std
inc
cmp
and
pop
xchg
sbb
pop
mov
shll
imul
jmp
dec
mov
les
mov
push
push
es
scas
movsb
adc
cli
popa
fnstenv
adc
and
stos
mov
inc
pop
pop
loopne
dec
es
adc
mov
add
test
cltd
adc
add
inc
push
xor
pop
mov
icebp
xor
imul
inc
add
shl
adc
mull
je
jb
add
movsl
bnd
jbe
ja
push
dec
adc
dec
xor
or
lret
adc
adc
add
mov
rcrl
jg
jae
shl
mov
add
pop
xchg
cmp
inc
jl
fnstsw
jmp
cmp
sub
mov
add
scas
add
push
jge
mov
mov
int
add
mov
jo
pop
sub
fistpl
ljmp
test
out
lret
push
adc
add
push
xor
cmc
lods
push
je
mov
and
scas
movb
or
cld
mov
add
inc
add
std
negb
mov
dec
and
sbbl
jns
cmc
call
mov
jns
call
lcall
mov
add
and
and
insl
fwait
les
mov
dec
loopne
aad
inc
push
popf
push
sbb
test
dec
sbb
pop
mov
insl
std
sbb
jae
das
jge
and
cwtl
push
xchg
cs
popa
popf
aam
inc
add
loop
add
sbb
pop
iret
lret
and
xor
add
lret
je
add
add
icebp
mov
mov
and
mov
add
sbb
adc
pop
int
stos
mov
filds
jg
ret
das
gs
dec
or
add
fmull
addb
insb
add
pop
sub
add
dec
jge
lcall
aas
fdivrs
adc
xchg
xor
in
dec
adc
push
inc
add
jmp
inc
add
and
dec
adc
add
pushf
lods
cmp
xlat
lcall
add
inc
add
fidivrs
out
lret
popa
jg
push
jae
test
js
data16
cmp
inc
add
into
out
cld
mov
insl
sti
add
std
std
sbb
sub
jne
xchg
push
push
ret
add
cmp
mov
out
fs
enter
ficoml
jg
mov
mov
add
mov
mov
push
pop
cmp
mov
mov
addb
fidivs
aam
cli
call
out
cmp
call
inc
mov
mov
scas
stc
cmp
add
jne
add
in
mov
addb
jo
psadbw
imul
fdiv
mov
xchg
xlat
xchg
ja
xchg
cmp
add
repnz
test
dec
xchg
loope
add
mov
insb
or
mov
cmp
dec
out
in
scas
mov
sub
test
insl
xor
cltd
test
pushf
or
lret
push
popf
pop
mov
push
jbe
aam
lcall
movsb
cmp
stos
pusha
add
xchg
xchg
scas
insl
out
mov
stc
aas
aas
daa
clc
add
sahf
push
movb
add
add
jnp
fisttps
movb
add
mov
inc
add
inc
add
add
push
sbb
mov
int
or
add
addb
dec
add
push
dec
add
aam
add
xchg
pand
or
and
lcall
push
xorl
jecxz
in
inc
or
add
sarb
add
cld
mov
mov
ss
jl
testb
lret
int
bswap
xorl
xchg
fisubl
mov
popf
cltd
mov
xchg
rclb
or
xor
or
xchg
mov
sub
pop
or
je
adc
fxch
add
pushf
xor
push
push
push
notl
rol
mov
out
push
pop
add
add
idiv
bound
sbb
mov
push
mov
add
ljmp
dec
sbb
jns
dec
sub
xchg
add
pop
das
or
scas
stos
cmpsb
fdivl
cwtl
pop
mov
mov
mov
adc
xchg
jle
inc
movl
mov
dec
jecxz
mov
add
or
ss
add
cmp
jge
mov
add
add
pop
adc
sub
or
fsubr
icebp
pop
dec
stos
xchg
stos
repnz
outsb
and
jle
mov
add
iret
stos
cmc
outsl
dec
push
push
push
push
test
add
imul
jmp
daa
jl
inc
or
mov
inc
add
xlat
dec
cmc
and
add
fistpll
add
sahf
loop
pop
test
outsb
enter
xor
stos
sbb
mov
or
subl
ljmp
aad
fsubs
mov
pop
into
cmpsl
fisubrl
jb
mov
fidivrl
dec
jecxz
dec
push
push
mov
lea
mov
push
xor
fmull
cmp
xor
aam
sub
cmpsl
mov
push
add
fwait
and
push
push
pop
dec
mov
jb
push
add
decl
ficoml
add
movb
mov
mull
lds
and
jecxz
popa
mov
addb
push
mov
and
mov
imul
dec
cmp
inc
add
lahf
rolb
ja
lods
shrb
jae
out
shrb
push
jge
mov
pop
dec
jns
int3
in
adc
rcr
lods
mov
xchg
pop
fsubp
or
addr16
adc
xlat
or
jbe
dec
int3
jl
sbb
data16
es
leave
gs
add
mov
mov
lahf
addl
sub
adc
aad
xor
sub
jno
xchg
subps
test
pop
std
in
loopne
fwait
lods
xchg
cmp
add
nop
or
ja
mov
fcomps
daa
xor
mov
test
lret
insl
jle
xor
add
adc
stos
inc
add
or
je
sub
mov
int
lahf
movb
jge
push
int
ficompl
cmp
out
shll
pop
or
test
arpl
lret
pop
repnz
out
outsl
push
sub
fwait
mov
xchg
rcrb
decb
lods
jmp
xchg
pop
mov
xchg
pushf
or
cmp
jno
sbb
fldenv
or
stos
inc
lahf
push
mov
mov
rolb
inc
imul
xchg
jnp
leave
js
xchg
das
loopne
sbb
mov
sbb
add
cmp
insb
jo
test
bound
sbb
add
int
adc
lods
fidivl
or
xor
sub
add
pop
mov
xchg
xor
cmp
xchg
das
rorl
or
and
add
dec
dec
sahf
dec
and
mov
incl
pop
sbb
adc
fidivl
shlb
cmp
adc
lret
divl
push
pop
fdivr
iret
add
pop
jb
and
jl
pop
rol
loope
pop
lds
notl
sub
je
jns
jmp
cld
stos
loope
add
inc
movsl
jb
xlat
mov
fisttpll
lods
fnstenv
loope
push
xchg
xor
ja
data16
dec
mov
add
add
add
xor
xor
shl
xchg
pop
sbb
lods
mov
lret
scas
ret
xor
xchg
pop
cmp
cld
push
push
xor
pop
mov
or
jbe
popa
dec
out
ss
add
sbb
mov
loop
add
aaa
inc
add
clc
fwait
mov
add
sbb
inc
add
pop
push
cmp
add
cmp
xor
and
inc
mov
mov
mov
mov
in
cld
popa
add
or
ds
dec
cwtl
orl
dec
or
xor
pop
adc
iret
in
ret
lods
mov
xchg
ds
push
add
stc
sub
pop
fdivrp
cltd
push
dec
pop
cmp
jbe
add
out
cli
clc
std
lock
ljmp
insl
push
inc
add
stc
mov
jnp
rcll
or
inc
sar
popa
xor
addr16
push
rolb
test
adc
adc
bound
sbb
gs
xor
lea
mov
notl
xchg
jmp
xchg
fs
enter
loopne
add
addl
xchg
sbb
xchg
sbbl
push
adc
jge
test
mov
pop
pop
inc
add
add
sub
add
add
adc
add
jge
incl
add
in
nop
cltd
scas
add
push
daa
fnstcw
xchg
mov
xorl
dec
and
sbb
push
adcl
call
aam
stos
dec
cmp
icebp
outsl
gs
repz
jecxz
clc
adc
add
sbb
insb
ljmp
cmp
jmp
mov
lahf
push
sbb
fdivrs
push
dec
cmp
pop
lret
je
mov
fcmovbe
dec
mov
fs
mov
mov
jl
enter
lahf
adc
int3
cmp
nop
xor
loope
xor
pop
jnp
dec
nop
pusha
add
add
mov
in
add
and
cmp
test
pop
add
stos
gs
add
add
xchg
xchg
sbb
xor
xor
js
imull
xor
lret
pop
mov
or
imul
jo
inc
mov
add
int
mov
xor
bound
add
adc
add
cmp
or
addb
cmpsb
inc
add
add
and
push
ret
fstp
adc
mov
lcall
cmpsl
scas
lcall
dec
jns
jnp
xchg
cmp
repnz
mov
gs
sub
insl
cld
ds
cmpsb
sbb
mov
aaa
std
mov
and
filds
add
jno
cmp
lahf
jle
movsl
xchg
sahf
cld
push
xchg
push
cmp
dec
xchg
mov
add
add
lods
popf
cmp
mov
repz
and
dec
ja
jmp
jo
add
mov
xchg
xor
ljmp
xchg
in
cmp
std
nop
xor
adc
sub
adc
lods
aad
pop
loopne
bswap
cmp
sbb
xor
in
push
sbb
mov
aaa
imul
lret
scas
inc
add
lock
mov
hlt
xchg
pushf
sbb
cmc
lret
icebp
scas
ja
cmp
sbb
xor
or
test
clc
xchg
mov
popf
test
repz
push
loope
sbb
jl
sarl
loop
rol
add
pusha
add
push
mov
std
nop
imul
lcall
aam
sub
or
aas
cmp
xchg
aas
inc
xchg
sbb
push
imul
push
add
and
ds
lods
inc
jne
push
pop
xor
insb
sub
or
imul
add
outsb
in
outsl
sahf
xchg
mov
mov
iret
ret
sti
cmp
and
jnp
and
leave
idivl
xchg
aaa
aad
das
outsl
push
int
sub
jp
pop
clc
mov
dec
mov
pop
test
aaa
jg
pop
call
scas
cmp
ret
clc
bound
in
js
add
sahf
out
in
cwtl
inc
into
icebp
push
xchg
xchg
push
arpl
fldt
mov
stc
adc
cmp
mov
mov
aam
out
in
mov
mov
adc
nop
push
cmp
fsubrl
push
add
jle
pop
into
loop
cli
mov
dec
in
fsts
stos
xor
imul
pop
aaa
bound
mov
jmp
xor
dec
mov
hlt
pop
cmp
push
push
cmpsl
dec
shll
loope
fistl
movsl
popf
jb
add
sub
lahf
jp
xchg
ret
dec
push
ret
shlb
sub
jg
movsb
xor
dec
inc
add
movsl
rolb
inc
add
sub
addb
lds
das
lds
repz
lea
lcall
mov
add
sub
mov
jns
aam
jo
add
xchg
cmp
and
add
movb
push
push
shrb
add
icebp
imul
lahf
push
adc
test
mov
and
jg
xchg
lods
fcomp
scas
push
lahf
repz
int3
dec
pop
movhps
movsb
cmp
es
iret
cs
dec
cmp
mov
jne
int3
bound
jle
pop
enter
mov
hlt
sbbl
clc
shrb
inc
add
imul
jecxz
xor
or
mov
pusha
add
popf
outsl
movsb
daa
out
out
shr
xchg
notl
mov
fsubr
sub
nop
es
addb
cltd
pop
cwtl
out
jbe
dec
shll
sub
loopne
xchg
sbb
jecxz
add
arpl
in
lahf
icebp
movb
dec
test
xchg
les
adc
add
and
negl
xor
inc
cmp
xor
aad
add
jecxz
aam
dec
mov
mov
addb
xor
add
call
adcl
in
sub
inc
add
add
in
sbb
cmp
addr16
fnstcw
push
jo
inc
pop
mov
icebp
and
add
into
push
testl
imul
loopne
add
push
xlat
loopne
in
mov
dec
test
popa
ret
addb
add
addb
inc
add
decl
fists
xor
outsl
fs
pop
ss
cltd
mov
add
cmp
js
add
pop
stos
jne
imul
fcomp
push
lods
dec
and
pop
dec
xchg
aad
fcoms
sub
pop
pop
nop
das
mov
mov
movsb
pop
call
repnz
js
call
dec
pop
frndint
aaa
test
sbbl
jecxz
sbb
push
add
mov
cwtl
dec
or
int3
adc
add
js
and
fnstenv
mov
xor
inc
add
add
and
adc
cltd
push
adc
in
mov
add
cmp
adc
fisubrs
xchg
mov
pop
idivb
sub
movsb
aad
xchg
movsb
add
sbb
sbb
dec
mov
mov
jge
stc
push
dec
mov
inc
test
scas
lods
xchg
mov
int
xor
pop
inc
push
gs
xor
push
sbb
dec
sahf
push
cmpsb
js
pop
dec
divb
lods
jg
add
add
add
int
or
add
daa
mov
mov
cmp
add
push
xor
pop
sub
lahf
pop
sbb
add
jb
idivb
or
and
push
or
push
les
movb
mov
pop
push
sbb
ret
add
lods
shll
cmp
and
orl
mov
push
sbb
xchg
sub
je
mov
xchg
or
or
ret
mov
mov
mov
es
or
into
adc
arpl
cmpl
or
jle
jne
add
jno
test
or
jl
cld
in
ljmp
test
mov
cmp
sub
dec
out
mov
pusha
add
addr16
push
xchg
xor
cltd
dec
cld
sbb
outsl
fmul
jecxz
mov
inc
push
movsw
es
das
rcrb
aaa
adc
mov
sub
ss
push
sbb
and
