fwait
dec
fisttpll
sub
add
pop
mov
cmc
sub
dec
addb
jns
add
add
add
adc
mov
dec
out
test
or
je
add
mov
mov
and
fdivr
pop
jno
jge
fcom
add
add
mov
add
mov
dec
or
add
lods
push
add
pop
pop
inc
sahf
push
push
add
outsl
pop
movsb
add
add
add
mov
mov
in
jns
jb
pop
movsl
fstl
or
add
hlt
add
push
xor
push
pop
lret
pop
inc
jns
and
mov
add
add
sbb
xchg
daa
daa
sub
push
add
in
push
jl
jmp
rolb
inc
add
push
add
aas
testb
sti
cmp
mov
and
dec
jge
inc
addb
ja
jge
add
lods
push
push
popf
enter
inc
loope
xor
add
popa
hlt
add
je
arpl
leave
popf
ja
mov
outsb
arpl
daa
call
add
add
cld
mov
add
fstpl
add
leave
push
add
loop
emms
lret
ret
mov
data16
mov
and
mov
and
mov
sub
mov
mov
cmc
filds
push
adc
data16
and
pop
push
add
out
jne
add
data16
add
loop
aas
sub
lcall
sbb
jge
adc
and
xor
and
or
add
addb
add
insb
lods
lea
add
jl
mov
addb
push
add
fs
mov
test
inc
sub
add
mov
roll
fwait
push
das
sub
xchg
pop
lcall
dec
cmp
or
add
lods
cli
lods
cmp
mov
jmp
and
movsl
add
pop
sbb
jae
jmp
cmp
adc
xchg
add
lods
rolb
fs
loope
leave
mov
add
mov
add
imul
lods
testb
or
sbb
push
pushf
cli
inc
mov
inc
add
daa
or
out
out
mov
or
add
mov
fnstcw
cs
rolb
add
add
adc
cmp
roll
subl
mov
add
fcompl
cmp
add
inc
add
cwtl
ret
add
out
lock
in
add
push
add
aas
scas
jmp
iret
cltd
push
add
mov
add
jecxz
mov
cmp
add
je
repnz
pop
cmc
mov
jmp
xchg
mov
sbb
loop
add
push
add
add
mov
je
das
cmc
mov
out
iret
dec
lahf
or
add
add
add
mov
stos
rolb
mull
jae
es
frstor
push
mov
add
jecxz
add
or
int
mov
cmp
xor
pop
outsb
xor
outsl
rcll
push
sbb
add
insl
or
insb
les
mov
in
inc
add
sbb
pushf
mov
adc
or
pop
das
jnp
in
mov
into
xchg
sbb
xor
stos
das
rorl
in
sub
push
add
insb
aas
movsb
add
iret
fstp
mov
add
dec
das
out
inc
aas
dec
aaa
or
add
sub
testl
mov
jae
das
sub
add
mov
add
mov
test
add
or
outsl
add
pop
cmp
add
add
mov
mov
fdivrs
jnp
mov
mov
testb
dec
mov
cmp
bound
mov
cli
testb
add
push
into
or
jne
repz
add
push
into
adc
stos
lahf
dec
push
mov
popa
cld
mov
lahf
imul
add
scas
cmpsb
add
pop
dec
push
add
fsubs
in
rcrl
cwtl
mov
mov
add
mov
in
mov
jae
sbb
dec
pop
movb
jno
out
xor
mul
add
mov
mov
add
pop
adc
push
adc
in
push
add
inc
add
add
dec
int
testl
shll
add
aad
xchg
mov
mov
sbb
add
popa
add
out
fsubs
add
mov
in
jg
push
jg
out
mov
jmp
sbb
jns
add
addr16
testl
add
inc
scas
rolb
sub
lds
mov
add
mov
imul
mov
push
add
xchg
add
jne
inc
add
add
adc
cmp
add
icebp
dec
call
call
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
fimuls
jb
mov
ja
cmpl
iret
out
jg
sahf
sbb
xchg
cmpsb
add
clc
add
mov
lds
stos
jl
push
add
add
scas
xchg
add
ljmp
sub
scas
and
push
add
sub
sub
inc
adc
add
aad
jge
sbb
lahf
mov
add
jne
add
inc
jnp
rolb
outsb
clc
add
mov
add
xchg
mov
fmuls
insl
cmp
in
inc
add
add
mov
pop
je
mov
add
mov
mov
addb
add
lds
add
rdtsc
enter
or
add
xchg
icebp
inc
add
ret
dec
loop
add
mov
insb
xchg
add
popa
dec
aas
push
jge
jle
xor
add
pop
sub
add
rolb
push
mov
add
pop
test
fcoml
add
adc
stos
pop
imul
add
movsb
add
movsb
add
aas
xor
test
rol
xor
mov
push
addr16
jne
andl
add
or
add
add
add
mov
jae
lret
shrd
add
add
sbb
push
mov
test
xor
and
mov
lea
add
rolb
scas
sbb
in
cmp
lahf
pop
push
sbb
lea
add
pushf
and
mov
and
mov
add
lahf
es
and
mov
add
add
add
add
add
mov
push
aam
vpsrlq
xchg
add
add
xchg
mov
xchg
cltd
mov
fnstenv
add
jmp
mov
sti
sub
call
add
fnstcw
es
push
fistps
mov
xor
mov
add
add
loope
mov
add
rolb
or
xchg
je
mov
jae
out
add
add
push
mov
movsl
push
dec
jmp
popl
jecxz
pushf
test
xchg
mov
mov
and
mov
mov
add
or
jp
test
stos
xor
testb
add
sub
add
aam
dec
in
xor
adc
add
data16
mov
cwtl
sbb
add
sbb
rorl
lods
fstl
add
pop
std
jae
add
xchg
repz
add
aad
push
popf
pop
je
adc
ja
repz
sbb
cwtl
jne
movb
add
mov
mov
jl
pop
mov
add
mov
js
jnp
add
xor
add
add
leave
mov
add
mov
fsubl
les
out
aam
sbb
mov
mov
in
jecxz
icebp
movsb
add
add
orl
cmp
pop
sbb
lods
addr16
lock
add
add
out
sub
mov
add
sbb
in
mov
add
or
add
add
push
jae
add
add
inc
push
sbb
jns
add
mov
nop
add
test
lods
js
add
pop
mov
hlt
add
mov
fstl
sub
add
add
int
add
in
int3
jne
bound
mov
stc
mov
in
mov
pop
fs
scas
or
add
mov
add
add
add
jmp
sti
stos
in
decl
push
pop
int
data16
add
add
lds
add
mov
movsl
mov
sbb
xchg
add
add
mov
int3
mov
dec
jg
sub
add
sub
xor
jecxz
dec
push
mov
scas
call
dec
test
lea
pop
insl
mov
aad
ret
cmc
aas
mov
fdivr
sbb
fdivrl
add
adc
add
ret
sbb
leave
icebp
pop
add
cwtl
in
rolb
xchg
and
push
add
xor
add
add
cld
sahf
loopne
xchg
add
add
scas
add
mov
cwtl
bound
mov
add
push
adc
add
add
dec
int3
loopne
aad
mov
jmp
dec
jae
pop
outsb
adc
pop
bound
mov
add
inc
xlat
call
push
adc
sub
in
fisubl
mov
jae
call
inc
add
arpl
cmpsl
std
lods
sub
mov
add
inc
pop
push
add
add
add
mov
out
mov
iret
inc
add
js
lret
inc
mov
mov
add
add
aad
add
mov
add
repnz
enter
push
add
add
jae
ja
lahf
jle
push
adc
add
sahf
outsl
inc
add
gs
add
add
cs
mov
out
jne
outsb
and
lods
clc
sub
mov
mov
add
cli
les
push
add
add
incl
push
add
mov
and
mov
std
into
jge
test
mov
mov
insb
addb
pop
xor
rolb
jnp
sub
decb
sbb
pop
jb
xchg
inc
add
add
shll
push
add
xor
sbb
xor
fcoms
stos
cwtl
inc
daa
cmp
push
xchg
nop
add
popa
pop
add
scas
lcall
push
add
fsub
add
adc
add
dec
lods
outsl
test
cmp
add
hlt
add
stc
inc
test
pop
test
dec
pop
pop
pop
xchg
push
inc
add
pop
jnp
iret
leave
xor
mov
add
dec
outsl
mov
cmpsl
call
add
add
add
or
loopne
cmp
mov
add
outsl
roll
int
jns
lock
shrl
or
scas
cmp
mov
mov
test
mov
addr16
xchg
cltd
outsb
lret
mov
outsb
add
movb
fsts
push
add
test
xchg
add
fisubl
xchg
inc
add
testl
sbb
out
add
mov
mov
add
adc
mov
out
inc
cmpsb
add
imul
loopne
xorl
clc
ljmp
stos
lahf
mov
mov
add
cmc
push
push
inc
add
add
pextrw
sbb
dec
rcll
add
cmp
add
add
xor
xchg
mov
outsb
dec
push
test
pop
scas
and
mov
add
add
xor
mov
out
sti
xchg
frstor
add
xchg
pushf
dec
stc
fwait
mov
scas
dec
cmpsb
add
sub
add
inc
ljmp
pop
jb
pop
jbe
pop
jmp
les
bound
mov
repnz
add
pop
sbb
sbb
add
add
add
add
mov
scas
adc
xor
lea
sarl
mov
xor
jecxz
and
add
inc
add
cli
mov
add
push
add
sbb
add
add
aas
mov
rolb
or
add
fadd
add
push
das
popf
push
lea
rolb
faddl
bound
mov
fsubrp
jne
jb
xchg
stc
dec
push
add
call
roll
add
add
int3
add
mov
nop
add
inc
mov
cltd
pop
out
in
mov
xchg
pop
andl
mov
inc
add
mov
add
jg
cmp
push
add
and
push
add
add
movb
aas
orl
iret
iret
fiadds
xor
aad
inc
cmpsb
add
add
or
xchg
sub
add
cmp
shr
mov
clc
jmp
addb
jnp
add
fmuls
pop
jmp
mov
add
xchg
add
in
addb
prefetch
fdivrs
add
add
push
icebp
repnz
add
mov
decl
mov
add
pop
leave
sti
aas
outsl
xchg
add
add
xchg
sbb
and
mov
add
add
pop
clc
mov
pop
push
das
mov
cmp
ja
jecxz
jne
pop
iret
jg
add
add
fidivs
leave
out
inc
lods
mov
or
add
jb
std
xchg
rolb
add
mov
enter
sbb
mov
push
dec
push
add
ret
mov
jmp
popf
cli
cmp
add
mov
testb
arpl
icebp
jecxz
push
add
add
xor
and
pop
rolb
imul
add
adc
movb
add
add
add
mov
add
add
hlt
add
adcl
test
add
mov
push
add
add
sub
mov
out
add
add
push
push
call
add
jne
fisubs
add
add
jecxz
idivl
leave
and
sbb
pop
and
jmp
int3
sti
and
mov
add
add
add
ja
add
mov
ret
inc
add
xchg
pop
sti
cld
push
fldenv
jo
mov
jmp
add
cmp
jmp
mov
loopne
dec
pop
push
xor
add
push
add
adc
scas
cmpsb
add
imul
add
mov
fmull
lcall
movsb
add
cmp
int
push
or
ret
and
mov
add
xchg
loopne
inc
mov
sarl
and
mov
push
add
add
sbb
add
add
add
jp
mov
imul
dec
xchg
add
add
add
sub
call
aaa
lcall
cmc
aaa
mov
rolb
cmc
push
add
adc
push
add
loop
lahf
daa
enter
vmread
add
jp
sbb
enter
maskmovq
divl
push
jo
aad
xchg
ret
mov
add
add
add
adc
add
mov
push
add
push
add
aaa
pop
int3
xor
xor
aam
test
adc
adc
add
sub
jmp
jno
and
andl
lds
add
loopne
loope
cmp
iret
mov
int3
jo
sub
gs
jne
sub
aad
add
and
lea
jmp
dec
ja
add
mov
and
mov
add
cmp
add
and
push
add
popf
add
xchg
add
dec
insl
pop
mov
add
add
fnstsw
mov
cmp
add
add
add
inc
add
add
jecxz
push
add
ds
mov
loope
sti
add
inc
pop
in
ret
in
out
jns
add
mov
fdivrp
xchg
mov
xor
add
mov
pop
aad
into
dec
rolb
loop
insb
testl
inc
add
mov
adc
fwait
jmp
add
add
add
adcl
inc
pop
dec
in
mov
sbb
das
add
mov
add
add
add
add
cltd
jecxz
add
sbb
addb
add
pop
and
jno
add
mov
add
mov
add
lock
xchg
popf
outsl
in
add
add
cwtl
dec
adc
add
mov
popf
xor
aad
int3
pop
data16
rcll
mov
dec
sahf
pusha
add
jno
je
and
in
push
movb
add
add
rol
das
dec
pop
and
mov
add
fwait
shrl
xchg
sub
movsl
jb
int
mov
popa
ret
stc
jge
int3
push
add
test
add
add
push
add
add
add
add
xchg
inc
add
and
mov
add
add
xor
test
movsb
add
add
mov
std
add
sbb
mov
sbb
mov
mov
les
and
dec
mov
push
in
dec
or
add
addb
add
ret
loop
rolb
add
sbb
add
mov
cli
lods
and
add
push
arpl
stos
loop
rolb
mov
push
in
sub
add
add
jne
add
pushf
inc
gs
test
mov
sub
adc
enter
add
add
jp
xor
in
data16
add
pop
lcall
add
mov
cli
sti
mov
loope
add
add
add
add
lahf
cmp
ret
push
xor
inc
dec
hlt
add
add
mov
add
add
add
add
jecxz
mov
testb
mov
pop
add
xor
pop
mov
add
xor
addb
sbb
add
popa
subl
add
rolb
cmc
add
sbb
mov
dec
mov
rolb
add
lds
or
mov
add
pop
add
in
xchg
mov
stc
jns
add
adc
push
push
add
add
dec
fcmovb
fcoml
std
movsb
add
into
xchg
add
add
imul
sbb
inc
add
lods
mov
cltd
push
push
add
sub
repnz
mov
pop
stos
cmpsl
mov
add
add
bound
mov
mov
xchg
push
push
inc
pop
repnz
add
sahf
lret
cmp
push
add
add
add
popf
or
hlt
add
and
mov
inc
add
inc
add
xor
mov
add
fisubs
add
xor
and
xor
xlat
mov
mov
xlat
int
cmp
mov
add
add
pop
clc
dec
movsb
add
stos
add
mov
hlt
add
aad
mov
add
add
faddp
add
xchg
mov
inc
and
jnp
lods
and
pushf
sbb
ret
pop
icebp
dec
jb
psubusw
cwtl
test
push
or
add
mov
pop
cmpsb
add
add
cmp
fdivrs
ret
test
add
loop
xor
pop
iret
xchg
add
and
mov
cld
arpl
push
add
add
and
jb
addb
add
mov
sarl
fildll
sarl
dec
dec
push
add
mov
pop
jne
int3
bound
mov
test
call
sub
add
icebp
cmc
fdivrs
jns
enter
or
mov
scas
mov
jno
jb
fwait
pop
adc
pop
outsl
jns
cwtl
sub
add
pop
repnz
add
popa
fldcw
lock
lods
lds
add
xor
jbe
mov
xor
add
hlt
add
xchg
add
scas
and
mov
movsb
add
aad
cmp
into
les
test
pushf
adc
pusha
add
ja
mov
cmpsl
jecxz
fimull
add
xor
add
repz
in
cltd
sub
add
cmp
dec
cmpsl
mov
add
dec
fwait
repz
mov
mov
icebp
and
mov
sub
jecxz
arpl
add
mov
add
mov
popf
jecxz
scas
sub
add
add
lret
je
mov
mov
ret
jmp
jae
jns
scas
and
mov
inc
sub
add
xchg
xchg
loop
addb
add
xor
and
push
add
arpl
lea
or
mov
and
xor
adc
faddl
add
add
mov
cmp
jb
adc
fdivs
cmp
mov
push
test
pop
mov
andl
insb
dec
test
mov
fwait
test
add
mov
enter
pop
jmp
add
add
add
add
push
add
test
ret
ja
and
dec
xor
lahf
jae
push
pop
adc
outsl
push
add
mov
iret
push
sahf
push
add
sub
add
in
testb
add
add
add
xor
pushf
lods
iret
stos
lahf
xor
xor
mov
add
mov
fisubrs
leave
in
and
push
xor
dec
cmpsb
add
cmpsb
add
mov
mov
int3
push
add
in
sub
push
and
and
ljmp
sub
add
pop
pop
loopne
les
mov
add
arpl
negl
outsb
pop
cmp
or
add
add
sub
add
jbe
mov
dec
pop
in
add
clc
xchg
add
mov
add
add
add
into
xorl
shrl
imul
das
test
sub
lods
jg
ja
pop
xor
out
dec
out
inc
add
adc
add
add
and
pushl
xor
js
addr16
adc
or
add
add
add
pushf
loope
testb
rolb
in
jle
add
test
push
add
add
adc
testl
pop
adc
mov
xchg
xor
mov
mov
add
jecxz
cmc
movb
mov
add
mov
in
push
add
add
push
add
jnp
add
xchg
add
add
cwtl
sub
mov
test
add
addps
dec
enter
mov
pop
sbb
sbb
add
mov
adc
fsubl
or
add
aas
int
push
stos
xchg
cmp
add
test
cs
adc
aaa
cmp
inc
add
sub
icebp
dec
push
add
sub
add
mov
cmp
add
loopne
sub
int
fsubrl
bound
mov
daa
data16
and
add
mov
testb
daa
addr16
pop
add
add
addb
sbb
add
jbe
bswap
xchg
jecxz
xlat
outsb
sbb
add
add
jg
add
add
push
jmp
les
fwait
push
pop
xchg
add
pop
or
cs
addr16
pop
sbb
push
add
sub
daa
mov
outsl
xchg
pop
repnz
push
mov
jmp
je
and
add
jg
dec
xchg
add
movb
sbb
clc
lea
add
stc
data16
add
and
add
rcll
add
test
add
mov
imul
add
add
add
dec
xchg
cmp
shrl
cmpl
stc
pop
adc
push
clc
adc
add
mov
in
pop
ja
aaa
push
add
and
ficoms
add
mov
stc
pop
push
add
add
jno
add
lds
add
add
mov
sub
xchg
mov
test
pushl
mov
aaa
inc
inc
add
ret
inc
divl
jbe
mov
jmp
and
add
hlt
add
or
sub
mov
cmc
add
add
inc
loopne
pop
ljmp
add
mov
lea
mov
add
push
add
push
add
or
popa
cmp
ds
inc
add
and
mov
cmc
push
add
rolb
fnstenv
sub
add
mov
aaa
or
lea
out
jl
add
js
add
hlt
add
ret
loopne
inc
push
add
cmc
in
or
add
pmaxub
mov
sub
or
or
sbb
cmp
sub
out
add
add
add
xchg
mov
rolb
mov
add
jmp
fdivrs
sub
adc
inc
lods
test
jp
push
add
mov
add
mov
add
add
mov
and
mov
add
mov
addb
mov
pop
icebp
dec
les
xor
out
pop
pop
stos
add
add
arpl
jbe
btr
daa
in
xchg
add
pop
sbb
aad
push
add
adc
fstpt
repz
add
add
sahf
push
push
icebp
mov
lcall
jno
lods
adc
lahf
add
dec
mov
mov
add
dec
mov
inc
add
inc
add
add
pop
mov
sti
push
add
push
add
mov
inc
andl
mov
add
inc
add
xchg
std
cmpsb
add
add
cwtl
sbb
dec
adc
dec
ljmp
fs
sti
bound
mov
add
cwtl
mov
mov
cmp
aaa
cltd
loop
mov
mov
sbb
add
nop
add
push
jo
in
mov
inc
add
add
push
add
loope
inc
push
add
add
push
add
dec
outsl
cltd
aam
xorl
add
pop
dec
mov
fistpl
xlat
or
rol
add
xor
shl
into
or
add
daa
xor
pop
lea
xor
lahf
js
enter
les
lret
dec
popf
jno
loope
xchg
call
mov
in
jg
pop
mov
rolb
test
jle
mov
outsl
adc
inc
jb
jge
add
repnz
jl
rcl
js
add
sub
test
add
pop
fisttpl
pop
dec
cmpsl
dec
call
mov
mov
mov
xlat
add
mov
push
ret
and
fistpl
pop
push
add
add
jg
push
add
stos
push
add
pop
dec
pop
cmp
cltd
andl
lds
add
add
inc
in
ljmp
add
adc
sbb
add
fldenv
mov
add
je
mov
mov
push
add
addr16
add
repz
mov
add
or
gs
inc
into
addb
out
mov
rolb
push
add
mov
mov
add
mov
add
mov
add
sub
ss
add
add
div
outsb
mov
jne
outsl
scas
mov
add
add
add
pushf
ret
rolb
and
loopne
cltd
dec
sub
xor
sahf
pop
or
popa
cmc
xchg
add
leave
out
outsb
sbb
jo
push
add
mov
fucomi
pop
arpl
fwait
adc
jmp
test
pop
inc
add
pop
xor
adc
mov
xchg
add
jmp
add
add
add
add
popf
jbe
inc
add
dec
out
and
arpl
add
pushf
inc
add
bound
mov
add
inc
lret
jle
cmp
cmpsb
add
add
stc
pop
jbe
mov
mov
add
cmpsl
into
insb
pop
fidivl
add
mov
mov
add
lds
daa
mov
in
mov
xchg
mov
movb
fldt
negl
fists
cs
xchg
add
mov
add
add
cmp
fdivs
mov
mov
xchg
and
mov
cmc
or
addb
aam
mov
loope
cwtl
insb
pop
cmp
and
mov
iret
out
xchg
xor
testb
pop
decl
insb
cltd
mov
add
mov
and
or
add
cmp
out
add
adc
addr16
hlt
add
or
ss
stos
data16
pop
cs
push
add
mov
insb
mov
and
mov
add
sbb
mov
mov
stos
ljmp
xor
flds
stos
cmpsl
dec
in
in
push
xor
add
xchg
sti
pop
xlat
loop
inc
add
in
bound
mov
insl
jo
call
or
push
adcl
jge
pop
xor
pop
lret
rolb
repnz
test
add
movl
adc
add
jmp
movl
dec
xlat
loopne
inc
add
les
cli
cmp
les
lds
add
push
add
movsl
out
mov
mov
mov
push
out
mov
add
jp
add
adc
icebp
lahf
and
sbb
jmp
leave
popf
out
cli
dec
or
mov
std
add
outsl
sbb
mov
xor
fmull
add
push
mov
push
add
fwait
loopne
enter
jg
push
add
mov
add
mov
add
sbb
pop
addl
pop
push
add
cmp
jge
mov
mov
gs
adc
pop
call
add
add
jnp
jae
mov
mov
mov
add
add
int3
cmp
sub
sub
xor
addb
cwtl
aas
xchg
and
mov
shll
dec
sti
jle
leave
add
and
mov
pop
dec
cmp
rcll
add
cwtl
out
xchg
stos
xor
int3
or
add
test
add
or
jnp
stos
add
stc
add
mov
sbb
sbb
stos
addb
pop
mov
push
add
je
jge
adc
jns
xchg
add
add
xor
movsb
add
nop
add
mov
sub
test
loop
add
mov
loope
add
inc
add
push
add
and
int
cmp
dec
jbe
cmp
fwait
adc
mov
sbb
sbb
jg
jo
pop
rolb
xchg
sub
add
movsb
add
add
add
cmpsb
add
icebp
push
xchg
out
mov
jno
bound
mov
insl
aam
pop
test
sbb
cmp
xor
pop
sub
mov
ret
aam
aad
jge
lea
add
sub
xchg
add
add
dec
ret
inc
outsb
aam
inc
add
mov
jo
cltd
lea
mov
add
add
int3
add
shrl
addb
add
addb
cmpsl
scas
cli
cld
mov
push
cmp
cmpsb
add
add
insl
pop
arpl
lods
adc
add
stc
pop
rolb
add
inc
cmp
add
push
nop
add
sarl
lcall
add
add
pop
popa
fcoml
fldt
xchg
dec
in
scas
xchg
add
add
in
add
repz
cmp
inc
cmp
hlt
add
add
inc
ljmp
add
rcll
adc
add
mov
ds
pop
jnp
xchg
les
addr16
stos
mov
xor
pop
loopne
orps
fisubs
add
or
and
mov
push
add
addb
test
cs
add
mov
sahf
xor
test
jb
out
repnz
cmp
sahf
xchg
sbb
pop
mov
mov
xor
ja
add
sbb
mov
mov
add
cmpsl
outsb
or
push
jno
test
pusha
add
leave
gs
sti
jo
shrl
add
mov
cmp
dec
gs
mov
jnp
or
xor
add
out
idivl
imull
nop
add
push
add
jl
inc
push
add
xor
cld
out
jb
xchg
add
mov
xlat
call
rolb
add
add
push
add
add
out
imul
pusha
add
imul
cmpsb
add
jnp
and
mov
rolb
pop
adc
out
or
cmp
xlat
arpl
add
mov
adc
repnz
lods
pop
push
mov
cwtl
or
xchg
data16
outsl
mov
dec
loopne
and
mov
dec
add
outsl
imul
outsl
or
je
sbb
add
pop
lcall
aaa
or
mov
bound
mov
add
add
push
out
and
sub
add
dec
push
cmpsb
add
mov
pop
lret
xchg
movsb
add
push
hlt
add
sub
add
or
pmuludq
sbb
decl
cli
sbb
in
jecxz
push
add
and
into
cld
stos
lock
rorl
sub
js
hlt
add
inc
add
add
mov
dec
aaa
ljmp
outsl
jmp
add
add
or
fidivrs
mov
mov
inc
add
sbb
inc
dec
cmc
out
mov
lods
push
add
add
rolb
mov
testl
add
bound
mov
jg
add
icebp
scas
xchg
add
add
icebp
adc
leave
popa
je
mov
add
iret
inc
fs
add
add
add
sub
mov
add
iret
inc
cmp
add
clc
and
add
mov
add
sahf
repz
sahf
jae
add
ljmp
daa
mov
test
add
fmul
les
xchg
add
mov
add
test
scas
pop
int
add
add
inc
add
in
dec
loop
mov
enter
imul
inc
add
jge
sbb
add
add
add
dec
or
jp
xor
adc
stc
int
test
jp
or
stc
adc
cmp
dec
shll
xchg
add
int3
sti
sub
and
jnp
mov
mov
clc
push
add
testb
mov
jl
test
and
mov
add
add
add
add
xor
pop
sub
mov
jmp
push
dec
or
add
add
fcmovne
sbb
addr16
popa
test
sub
push
add
inc
add
outsl
lods
les
add
cmpsl
jl
add
add
cmpsl
scas
pop
les
es
fsqrt
andl
mov
add
addb
movsb
add
test
sti
shll
jne
rolb
cs
add
lahf
mov
sub
add
add
adc
inc
add
add
add
jmp
add
add
add
test
or
add
repz
xor
jp
xchg
pop
jmp
or
das
rolb
mov
add
leave
in
daa
call
add
add
jno
mov
sub
push
add
fwait
loop
cmpsl
leave
pushf
lret
push
rolb
rcrl
les
push
test
mov
sub
cmp
add
mov
fcompl
sub
scas
lds
ds
add
stc
sbb
xor
xchg
pop
jp
enter
rcrl
add
push
add
xchg
add
sub
sub
mov
scas
xchg
cmp
jl
aam
jle
aaa
fldt
fimuls
lea
out
and
mov
add
daa
add
aaa
clc
mov
add
ja
dec
pop
repnz
add
add
fistpl
add
push
add
out
inc
xchg
daa
mov
movb
aaa
lret
loopne
mov
cmp
mov
jbe
inc
add
xor
add
jmp
rorl
pusha
add
mov
push
aas
in
andl
les
in
leave
imul
notl
fisubl
cmp
dec
jl
jns
sbb
data16
or
add
mov
in
push
add
add
add
clc
sbb
add
mov
inc
add
xlat
repnz
pop
push
add
mov
testb
add
add
sbb
add
add
add
add
sub
add
inc
jp
jecxz
mov
jge
add
add
add
add
mov
dec
movb
add
push
add
lcall
adc
add
pop
mov
add
aaa
adc
movb
mov
push
add
mov
pop
loope
subl
daa
lods
mov
stos
dec
test
pop
out
leave
decb
add
jbe
inc
add
add
add
push
add
fildl
add
add
mov
add
int3
adc
jl
filds
pop
jmp
add
add
add
inc
add
add
rolb
repnz
add
add
daa
movsb
add
sbb
xlat
lcall
imul
cmp
xor
bound
mov
cmpsb
add
loop
xor
data16
add
imul
push
cmp
add
add
or
pop
push
add
pop
lock
sub
add
arpl
add
add
add
mov
daa
enter
mov
add
mov
add
imul
add
push
add
or
out
mov
pop
mov
icebp
sub
pop
and
mov
or
stos
mov
add
stc
jb
mov
adc
mov
outsl
mov
imul
add
add
stos
iret
dec
rolb
jo
test
add
jmp
add
add
pop
lods
test
mov
adcl
and
mov
rolb
push
add
jnp
in
ljmp
jle
add
cmp
add
sbb
add
add
add
pop
sub
push
add
sbb
lods
mov
out
sbb
stos
fnsave
les
js
jbe
addb
shrl
mov
dec
xchg
outsb
mov
add
roll
sub
jae
inc
add
and
std
mov
add
rep
pop
sbb
add
test
mov
adc
int3
fisubs
add
cmp
add
add
inc
add
cmp
cmpsb
add
dec
ds
add
mov
mov
out
sbb
add
pop
push
add
mov
stos
and
fldt
mov
add
jo
xchg
add
std
les
cmp
add
add
lret
insl
xchg
and
mov
in
cmovae
xor
cmp
mov
and
push
add
sub
loope
add
mov
add
test
mov
fcmovnu
adc
enter
mov
mov
add
add
xor
jmp
add
xor
stos
aad
iret
pop
leave
cld
mov
add
cltd
mov
js
add
dec
jae
pop
ret
insb
add
divl
add
inc
testb
mov
out
xor
xor
outsb
call
cwtl
adc
test
add
add
out
adc
loop
xor
in
xlat
sbb
add
add
sub
das
mov
or
xor
pop
cld
jmp
push
enter
add
in
xor
lret
sti
cld
jae
mov
and
add
add
fbstp
add
push
add
mov
sbb
pop
mov
rolb
add
movsl
fstp
pop
mov
add
mov
arpl
add
push
aad
add
ret
inc
pusha
add
das
mov
outsb
mov
and
sub
add
roll
aad
push
xchg
jnp
add
dec
jb
inc
add
add
or
add
test
add
cs
pop
jno
mov
add
push
lods
addb
movb
and
or
jne
testb
iret
imul
add
clc
xchg
sbb
mov
xor
insl
data16
cmp
add
inc
add
dec
jae
fucom
add
add
insl
xchg
adc
mov
fstpl
and
add
mov
adc
cltd
pop
fisubl
mov
out
inc
mov
and
outsl
dec
cmc
lods
in
mov
ljmp
lret
cmp
jl
adc
xor
pop
data16
dec
mov
arpl
jge
add
sub
add
push
mov
add
jle
xor
ja
add
mov
add
loopne
test
cmpsl
les
rol
add
add
dec
dec
inc
add
add
or
push
shrl
in
and
mov
mov
out
push
add
add
repnz
and
daa
icebp
add
aas
inc
add
movsb
add
cmc
out
rcll
add
mov
pop
and
jge
movsl
pop
mov
hlt
add
add
dec
dec
out
cwtl
loop
cs
add
nop
add
aas
fs
arpl
mov
pop
rolb
or
add
nop
add
mov
or
add
call
pop
jne
lret
or
imul
loop
int
mov
push
add
mov
insl
xchg
je
enter
sub
cltd
jecxz
add
sbb
add
sub
adc
adc
adc
imul
rolb
and
sbb
repnz
sti
jl
pop
out
mov
sub
add
cmc
pop
cmp
add
aaa
mov
add
add
pushf
cmpsl
dec
js
xor
inc
add
adcl
add
add
add
mov
add
repnz
nop
add
add
leave
sbb
push
mov
orl
add
and
lahf
jb
cmp
add
add
and
add
adc
sbb
add
add
out
lock
aam
add
mov
bound
mov
adc
nop
add
inc
add
sbb
popf
mov
mov
add
adc
aad
icebp
call
inc
dec
push
adc
push
add
mov
add
mov
dec
xchg
inc
dec
xchg
sahf
stos
outsb
mov
mov
rolb
pop
cmp
dec
add
jae
lret
pop
xchg
push
ret
xor
jo
add
or
loopne
fwait
mov
popa
or
pop
and
in
push
sti
mov
jge
push
add
insl
xchg
add
jne
out
sahf
cltd
add
xchg
mov
fadd
add
push
int3
xlat
imul
rolb
jl
xchg
add
add
add
sub
iret
mov
cwtl
cwtl
push
add
mov
adc
add
mov
flds
xchg
add
sub
add
mov
vandnps
mov
add
sub
insb
mov
nop
add
cmp
jnp
lock
mov
jns
into
orl
pushf
cmpsb
add
adc
jno
add
or
std
enter
out
or
mov
add
add
add
sub
xchg
fsubl
mov
mov
bound
mov
add
lds
add
addb
pusha
add
mov
cmpsb
add
add
scas
or
and
stos
and
mov
and
sub
add
sbb
mov
fidivrl
push
jg
in
hlt
add
mov
add
xchg
push
add
jmp
mov
add
imul
add
add
mov
inc
add
mov
cmp
test
aas
push
xchg
mov
setge
jae
mov
add
mov
cmp
xor
lea
fidivl
mov
xor
mov
dec
ret
leave
and
or
stos
jl
add
add
pushf
cmp
add
sbb
xchg
add
les
adc
call
popa
stos
cmp
jge
xor
mov
xchg
mov
or
add
and
inc
add
add
adc
sub
jle
jecxz
add
scas
pop
cmp
add
outsb
jnp
xor
ret
xorl
mov
add
push
add
add
add
data16
mov
push
inc
cmp
jo
jp
popf
cmp
adcl
add
fidivs
or
outsl
and
mov
dec
outsl
popf
jmp
dec
jecxz
add
sbb
sub
push
add
jns
add
add
movsb
add
xchg
add
jae
add
add
in
push
popa
xchg
scas
ljmp
and
add
add
jl
repz
inc
and
lea
add
add
add
or
outsb
mov
cmc
ficoms
or
inc
add
mov
jbe
test
xchg
add
int
add
push
cli
aaa
add
mov
add
mov
mov
add
add
xor
mov
lods
mov
cmp
in
cmp
add
dec
in
pop
sahf
mov
adc
cli
fisttps
mov
add
mov
add
add
repz
add
fs
add
ret
les
push
add
jne
es
mov
cld
or
add
mov
cs
add
add
dec
pop
clc
sbb
ret
add
inc
es
pop
add
dec
adc
add
add
mov
pop
add
mov
add
cmp
dec
lahf
cmp
ljmp
inc
add
das
jp
mov
test
adc
and
add
xchg
or
add
push
add
add
mov
add
call
dec
cmp
rolb
or
mull
mov
add
add
jl
dec
dec
cmc
ds
xor
add
jge
ret
add
mov
mov
mov
mov
add
push
pop
xchg
mov
mov
or
xchg
add
jo
fistpll
push
loope
add
testl
add
mov
adc
cmp
add
xor
test
add
mov
sbb
in
cmp
lcall
jno
jle
or
xchg
arpl
add
add
fadd
add
jns
add
mov
cld
pop
sti
dec
xlat
pop
push
add
lcall
mov
call
xchg
add
icebp
rolb
push
add
cmpsb
add
add
jbe
enter
add
and
mov
add
add
arpl
mov
xor
mov
data16
pop
pop
add
mov
fildl
dec
daa
mov
add
add
fistpl
add
mov
pop
cltd
dec
andl
add
mov
push
add
mov
loope
pop
xchg
add
add
faddl
cmpsb
add
add
das
cmpl
and
jl
sub
mov
sbb
loopne
dec
repz
add
loopne
outsl
add
add
jmp
in
in
fcmovu
adc
mov
stos
imul
add
add
xchg
add
add
mov
sub
inc
adc
clc
movsb
add
aas
icebp
pop
mov
out
adc
test
fsubrp
testb
js
out
adc
ljmp
add
add
xchg
add
dec
mov
add
add
inc
add
outsb
call
sub
cwtl
pop
adc
inc
rolb
add
add
mov
loopne
addl
add
add
add
add
xor
mov
xor
cld
pushf
clc
jae
and
or
add
add
das
mov
adc
addb
add
mov
nop
add
add
inc
add
add
add
add
push
add
cmp
add
lret
add
adc
add
mov
pop
jle
xchg
cmp
pop
mov
jp
outsl
mov
pop
lds
inc
test
in
add
add
add
jne
adc
add
iret
add
mov
inc
add
loopne
inc
mov
add
aaa
dec
or
rolb
fidivrl
mov
pop
cmc
addb
cmp
sub
bound
mov
mov
sub
mov
dec
les
cmc
xchg
xor
mov
rolb
aad
mov
pop
sbb
add
or
adc
in
push
lret
aaa
insb
jae
mov
cmovns
sub
xlat
loopne
popf
pop
inc
mov
add
mov
dec
pop
pop
xchg
xor
push
add
out
addb
xchg
add
add
add
lods
loopne
adc
mov
push
pop
or
xlat
pop
push
dec
push
add
popf
test
cmp
pop
xor
out
hlt
add
jne
cmc
push
add
add
add
add
xchg
add
add
subl
cmp
outsb
rolb
mov
jge
add
cli
or
sub
add
add
mov
xlat
xorl
add
call
test
scas
cmp
dec
and
mov
jle
repnz
pusha
add
arpl
add
add
push
pop
popf
jnp
inc
outsb
add
lods
rolb
add
add
cmp
nop
add
cwtl
stos
pusha
add
add
add
adc
aad
ja
mov
inc
add
scas
jne
jge
pop
sub
pushf
lret
mov
add
inc
add
add
add
pop
and
xchg
push
add
outsb
push
add
xchg
push
add
xchg
add
cld
jb
in
pop
inc
in
lahf
pop
jae
stos
mov
add
stos
sub
arpl
jmp
pop
jnp
dec
imul
mov
in
outsb
sbb
lds
mov
rcrl
fistps
add
addb
jp
test
jb
das
sbb
add
fildll
add
mov
push
add
add
add
jnp
add
outsl
adc
add
test
mov
add
pop
inc
or
aas
lret
add
js
loopne
out
add
add
mov
push
enter
mov
in
nop
add
cmp
fsubr
js
std
cmpl
jmp
ret
addr16
jb
shll
inc
out
pop
jo
shll
mov
data16
popa
aad
add
hlt
add
test
in
mov
jp
add
scas
mov
pushf
loopne
in
outsl
mov
or
outsb
icebp
lahf
sub
add
add
add
ficompl
xchg
add
add
inc
iret
loop
rolb
mov
push
mov
ret
test
outsl
pop
cli
int
add
add
mov
ret
popf
cltd
mov
cmp
mov
mov
inc
push
add
xor
sbb
add
pop
fldl
sub
cmp
lea
push
add
jge
mov
pop
xchg
hlt
add
add
movsl
mov
add
mov
add
dec
mov
decl
xchg
add
clc
loop
fdivrs
pop
test
cs
repz
dec
jns
add
lahf
lahf
inc
add
add
cld
sub
test
rolb
mov
add
add
add
jmp
xor
add
aad
adc
cmp
xor
enter
push
add
inc
push
shll
push
mov
ficomps
mov
std
mov
jmp
add
cli
and
mov
out
xchg
arpl
add
jne
inc
push
push
mov
and
mov
pop
stos
xor
repz
adc
push
add
add
add
dec
scas
cs
push
add
mov
mov
inc
add
xchg
add
jo
inc
data16
or
jno
stc
add
mov
cmp
rolb
jb
pop
in
and
mov
cmc
fsubrp
sub
add
jns
xchg
data16
or
into
and
mov
mov
mov
add
push
add
add
in
push
add
gs
add
jns
push
add
insb
mov
lds
mov
add
popf
pop
lret
push
add
add
mov
add
add
and
xchg
add
test
cmp
mov
sub
cmpsb
add
add
add
out
add
push
pop
in
push
add
fsubl
add
addb
mov
addb
add
sbb
add
daa
shl
cmp
aam
out
and
pop
xchg
sub
add
xchg
adc
in
mov
add
add
mov
pop
xchg
xchg
pop
mov
dec
push
add
add
pushf
lea
mov
add
ds
cmp
out
iret
lods
jg
hlt
add
add
add
and
add
xchg
add
dec
cld
fsubrp
das
jbe
push
add
pop
xchg
inc
add
sub
into
dec
inc
add
xor
jo
xchg
cmp
and
jo
jae
dec
adc
cs
mov
fidivl
sub
add
bound
mov
add
mov
add
xchg
add
xor
cmp
add
fnstsw
shl
add
popa
sub
add
cli
aad
addb
add
inc
add
jo
or
add
shll
loop
std
out
xor
outsb
cmp
add
jecxz
add
add
push
add
jns
insl
das
mov
add
add
lahf
and
mov
sub
lcall
add
add
add
add
cltd
imull
fst
cli
sub
mov
push
add
add
jo
les
dec
lret
add
std
xchg
addb
xchg
add
add
mov
add
bound
mov
add
pop
lds
add
mov
stc
xchg
and
sbb
add
pop
mov
push
add
int3
or
out
mov
movsb
add
mov
inc
rolb
ljmp
imul
notl
add
shll
add
subl
or
add
pop
pop
push
ret
mov
add
mov
sahf
mov
mov
add
add
push
mov
add
mov
xchg
add
mov
xor
inc
add
dec
jno
pushf
insb
and
mov
xor
addb
add
mov
icebp
push
add
pop
data16
sbb
mov
add
add
rolb
mov
mov
mov
je
testb
xchg
adc
add
add
in
lods
data16
push
add
pop
in
decb
lods
add
jbe
mov
sub
push
add
jne
sbb
lods
push
add
add
int
or
add
jecxz
sbb
mov
lea
add
add
and
mov
cmp
push
nop
add
jl
hlt
add
add
lea
add
imul
and
adc
cltd
call
and
stos
cs
mov
lret
jo
sbb
add
xor
adc
test
add
mov
bound
mov
or
add
xchg
test
scas
cld
xor
pop
fwait
sub
xchg
pop
cmpsl
or
cmp
add
add
jmp
mov
add
in
int3
push
add
jg
adc
jmp
aad
add
out
add
js
inc
mov
add
add
add
fcompl
or
inc
add
xor
fucomp
sub
mov
pop
xor
fcomps
xorl
add
add
mov
fcomi
push
int
add
xchg
add
jae
add
mov
cmp
subl
add
push
pushf
cmp
inc
jbe
add
mov
gs
out
mov
lock
inc
stc
mov
add
add
and
mov
add
adc
push
add
add
pinsrw
testb
nop
add
push
adc
add
add
cli
cmp
add
mov
fbld
add
add
add
bound
mov
aad
add
add
mov
pushf
add
daa
inc
add
scas
sub
mov
sub
repnz
add
mov
add
xchg
add
add
add
push
add
push
add
push
fwait
mov
add
mov
fcmovnu
cltd
testb
add
mov
add
addr16
cmp
mov
add
add
push
mov
xor
sub
in
sbb
lods
cmp
sub
in
cmp
add
cmpsb
add
aad
lcall
add
mov
add
jb
fdivr
mov
add
push
add
popf
pop
pop
nop
add
add
push
test
rolb
mov
mov
xor
jmp
int3
outsb
mov
cmpsb
add
xchg
mov
das
out
aas
mov
rep
jae
outsb
imul
jge
add
jl
add
inc
int3
out
lock
add
add
adc
aas
and
sbb
mov
cltd
jno
decb
ljmp
mov
mov
mov
cmpsb
add
into
or
add
stc
xor
fmull
cmp
adc
add
add
mov
ja
jl
add
gs
xchg
dec
leave
cli
testb
add
mov
dec
xor
xchg
insb
jae
push
add
add
push
fnstenv
jge
fdiv
adc
sti
bound
mov
add
push
sahf
fisubs
fwait
test
aam
mov
add
jge
dec
dec
test
sbb
jl
faddl
lods
push
sbb
sub
add
push
mov
in
xor
hlt
add
add
add
mov
lret
aam
std
pusha
add
or
xchg
lcall
add
xor
lods
test
lcall
add
adc
add
add
ja
dec
mov
or
inc
cwtl
fdivs
arpl
movb
repnz
int3
mov
xor
ds
rol
ffreep
add
jecxz
data16
add
pop
xchg
popf
cli
mov
addr16
lods
leave
inc
add
out
add
bound
mov
mov
movb
mov
cmc
dec
mov
inc
jbe
andl
mov
cmp
mov
add
jb
add
xchg
add
add
popf
dec
or
mov
out
int3
cmp
sub
nop
add
pop
pusha
add
add
dec
sub
cmpsb
add
push
in
stc
popa
lahf
lods
call
add
repnz
rolb
cmp
mov
call
jo
dec
sub
xchg
add
pop
cs
add
xchg
add
nop
add
fmulp
or
xor
sahf
ja
lea
dec
pushf
pop
inc
add
shll
decb
add
popa
jp
add
add
cltd
ljmp
sbb
add
add
loop
rorl
add
lret
pushf
pop
int
jg
int3
jle
add
or
insb
cli
xchg
jo
not
add
dec
iret
mov
add
add
mov
lds
cmp
inc
mov
jg
lcall
loopne
sbbl
jo
clc
inc
std
negl
arpl
daa
insb
hlt
add
add
loopne
addb
sbb
mov
mov
setno
js
push
push
add
add
add
lds
add
xor
out
pop
xchg
mov
mov
cmpsb
add
arpl
pushf
mov
add
add
xor
les
aam
adc
jmp
cmp
add
dec
pop
or
mov
imul
add
aaa
xchg
loope
add
iret
dec
jp
mov
aas
ficoms
ret
add
add
dec
sub
push
add
mov
add
push
pop
jle
xchg
inc
add
rep
push
add
clc
sbbl
cmp
dec
les
lds
mov
inc
add
add
cmpsl
mov
imul
push
cmp
jp
mov
add
and
cmp
aaa
scas
test
mov
adcl
add
adc
adc
mov
xchg
shll
xchg
inc
out
xchg
add
inc
loop
pop
pop
incl
out
mov
lods
push
add
add
add
or
stos
daa
stos
add
mov
and
mov
repz
call
add
lcall
fmuls
aaa
mov
mov
mov
lahf
out
xlat
jge
pop
addr16
add
push
add
jp
mov
jns
add
sbb
add
ficoml
hlt
add
int3
add
iret
jbe
mov
add
lods
push
scas
adc
add
addb
add
add
mov
dec
adc
js
add
mov
rolb
icebp
and
mov
enter
add
dec
hlt
add
add
add
fcmovnb
add
mov
lods
pop
add
add
add
and
loop
jecxz
add
test
jg
pop
jmp
cmp
ljmp
cli
pop
hlt
add
rolb
or
repnz
mov
add
add
add
push
push
add
and
mov
add
pop
mov
mov
mov
add
xor
xchg
add
add
add
add
test
or
add
mov
cmp
and
mov
jns
add
test
notl
add
mov
leave
and
movb
pop
sub
out
cli
ljmp
arpl
add
ret
add
cltd
jo
adc
and
arpl
testb
int
inc
add
mov
adc
add
add
add
mov
add
pop
bound
mov
and
insl
push
add
stos
in
lea
or
mov
add
add
rcrl
in
adc
scas
fldcw
push
dec
lds
imul
and
inc
fidivrs
rolb
add
add
add
add
pop
scas
cmp
test
enter
in
sbb
mov
mov
add
ljmp
add
push
add
cmc
pop
add
mov
test
push
add
maskmovq
divl
rolb
mov
lret
add
mov
test
jno
add
mov
inc
mov
lock
add
lea
add
push
add
xor
cmp
popf
sti
decl
xchg
add
outsb
idivl
sub
xor
add
adc
push
rolb
xchg
mov
fcomps
xchg
add
xchg
roll
lods
shrl
sbb
or
add
dec
push
mov
out
pop
xchg
fiadds
push
add
add
jbe
pop
nop
add
add
add
mov
mov
push
stc
mov
adc
imul
xchg
lret
stc
dec
jmp
insb
xchg
add
pop
or
aam
inc
adc
add
add
add
aad
add
jnp
dec
popf
sahf
fwait
ret
mov
or
add
add
jb
mov
cli
cmp
add
aas
out
push
add
add
arpl
clc
sbb
fsts
push
add
lahf
jmp
lds
dec
jmp
add
fdivrs
add
add
out
add
ja
in
mov
clc
cltd
or
add
cmp
mov
mov
pop
inc
pop
mul
mov
mov
or
adc
loop
movb
mov
adc
xor
fptan
add
jnp
cld
aas
addb
in
cmovge
dec
cmp
rolb
xchg
cmpsb
add
jg
cmp
add
fisubl
pop
sbb
xchg
sbb
jle
jp
dec
mov
lock
cli
and
jno
dec
sbb
add
add
jg
dec
repnz
jae
adc
mov
mov
add
push
jnp
mov
sbb
imul
nop
add
lods
mov
add
add
pop
outsl
mov
cltd
dec
mov
loop
pop
mov
in
popa
nop
add
add
std
push
add
lds
jge
add
lahf
jge
add
sub
push
add
test
hlt
add
ret
ljmp
jmp
and
mov
fmul
nop
add
add
loope
divl
les
push
add
mov
adc
mov
call
add
pop
fistps
pop
lret
scas
stc
jne
pushf
test
jbe
sbb
mov
mov
out
movb
push
fwait
popf
xchg
std
xlat
loopne
and
add
add
lods
sbb
cld
movsl
rolb
cmpsb
add
pop
push
jg
push
add
pushf
clc
punpcklwd
call
add
sub
enter
std
popa
xor
cmp
inc
add
add
cs
loope
clc
jb
jle
int3
stos
mov
and
stos
mov
add
fsts
fcomps
and
enter
popf
push
add
sub
dec
dec
lret
and
add
cltd
mov
add
cli
decl
test
stos
rcll
add
rcl
add
add
push
pop
cmp
ds
movb
adc
add
sbb
sbb
mov
jo
in
add
daa
clc
dec
icebp
cmpsb
add
add
rolb
js
rolb
movb
add
add
inc
add
add
lcall
inc
adc
adc
test
out
out
cmp
roll
add
add
out
jnp
add
imul
lret
add
insl
test
loopne
cld
push
add
jo
push
add
adc
sub
mov
add
mov
add
mov
les
fdivrl
frstor
jb
outsl
bound
mov
push
dec
cmp
xlat
in
pop
dec
scas
movsl
arpl
imul
popl
iret
xcrypt-cfb
cmpsl
add
mov
add
jg
out
inc
add
cmpsl
mov
mov
pop
pop
insb
inc
mov
lahf
into
mov
js
test
add
pop
or
sti
or
stc
mov
popa
mov
add
repz
and
ficoml
adc
cld
leave
icebp
lea
icebp
push
add
add
mov
daa
faddl
add
gs
pop
add
add
jmp
add
cmpsb
add
add
fstl
sub
adc
xor
cld
movsb
add
add
out
lahf
mov
add
jecxz
add
jnp
mov
mov
jge
adc
add
pop
sbbl
pop
lahf
cwtl
mov
inc
sbb
or
pop
daa
mov
stc
cli
lods
inc
add
dec
stc
jp
je
cmp
dec
push
nop
add
ret
mov
add
adc
and
mov
add
add
adc
xchg
shll
xchg
add
add
add
xlat
push
pop
jne
xchg
repnz
sub
push
mov
sub
mov
add
and
add
xor
push
or
mov
add
fcmovnb
add
add
leave
rolb
scas
mov
push
insb
push
dec
adc
sbb
pop
dec
fisttps
add
add
add
inc
inc
add
inc
xchg
lock
add
mov
mov
add
mov
add
fsubrs
jbe
data16
cmp
push
jp
stc
add
stc
jge
xchg
xor
test
xor
add
add
mov
cmc
jo
in
in
icebp
dec
mov
aaa
out
push
add
sub
test
decb
xchg
adc
mov
sbb
pop
or
mov
les
lret
cltd
fcoml
add
mov
push
bound
mov
mov
add
or
add
into
push
add
pop
enter
add
xor
jae
add
loop
sbb
and
mov
add
add
lock
addb
fs
outsl
adc
add
in
fisubl
mov
adc
or
jo
lea
or
mov
fcompl
cltd
mov
add
xchg
inc
mov
add
loop
mov
cmp
add
repnz
add
mov
arpl
inc
and
mov
nop
add
sbb
jmp
push
ljmp
xor
rcll
add
jecxz
out
pushf
sub
sub
add
in
testb
lea
fs
add
repnz
xchg
pop
xchg
push
inc
add
stos
nop
add
jp
add
sbb
add
scas
and
fdivrl
xor
sub
arpl
add
popf
cli
ret
addb
cmpsb
add
daa
loope
adc
sahf
push
add
shrl
jnp
mov
stc
adc
imul
scas
enter
imul
add
mov
mov
mov
mov
lret
xor
add
sbb
lea
mov
xor
ret
pop
dec
das
dec
mov
or
sbb
mov
add
mov
push
pop
pusha
add
add
add
add
mov
divl
ror
mov
add
push
je
adc
dec
stos
je
movsl
or
add
aam
mov
xor
sub
jnp
add
xor
push
pusha
add
adc
mov
add
push
add
mov
mov
leave
xor
addb
push
jb
fnstsw
add
add
add
lret
test
daa
fs
dec
movsb
add
add
rcll
fwait
dec
and
mov
outsb
addb
add
bound
mov
add
jb
adc
cltd
sbb
or
mov
daa
push
add
nop
add
orl
stc
jns
add
add
ret
daa
loope
test
sub
jbe
sbb
iret
sub
ret
mov
mov
mov
and
ja
xchg
add
mov
lcall
lods
aas
bound
mov
add
lahf
pop
mov
cwtl
int3
jecxz
imul
cmpl
imul
add
add
addr16
pop
push
add
jle
decb
outsb
ja
jp
add
xchg
js
aas
jno
add
movsb
add
pop
pusha
add
pusha
add
xchg
add
sub
in
decb
add
jne
jp
rolb
pop
cmpsb
add
scas
inc
jecxz
loop
jbe
mov
out
inc
add
add
fnstcw
pop
adc
divl
adc
sub
sbb
add
leave
fadds
mov
arpl
mov
lods
stos
jmp
adc
cmp
add
outsl
out
imul
add
add
fistl
add
cmp
outsb
pop
push
add
dec
aaa
movsb
add
adc
xor
adc
call
push
add
add
and
mov
add
jo
cmp
jae
fadds
loopne
dec
cs
testl
add
rcrl
imul
dec
cmp
stos
xor
pop
xlat
unpcklps
test
mov
bound
mov
rcr
jno
addb
mov
xchg
add
add
shl
in
mov
mov
jno
xor
pop
aad
add
mov
rolb
add
imul
pop
gs
add
add
cmp
dec
jne
add
add
pusha
add
pusha
add
data16
add
bound
mov
test
mov
mov
push
and
insl
xchg
mov
insb
jne
mov
push
add
jle
add
xchg
add
mov
add
loop
push
jge
dec
adc
movl
adc
inc
add
add
pop
push
xor
sbb
inc
add
add
xor
add
outsb
into
mov
in
imul
stos
adc
sbb
mov
pop
leave
fisttpll
aam
fistl
jge
sahf
mov
cmc
jnp
repnz
jmp
jl
jno
xor
pop
insb
xchg
lcall
dec
push
test
add
mov
cmp
add
mov
lods
test
je
clc
pushf
mov
add
adc
insb
or
add
or
fnstenv
lock
fidivrs
aam
or
dec
mov
incl
cmc
xrelease
and
mov
loop
mov
add
dec
cltd
sub
inc
add
lods
aam
sub
dec
xchg
add
mov
adc
cmp
or
pminsw
je
jne
pop
popa
pop
mov
lods
inc
add
pop
rolb
xor
add
test
and
mov
mov
cli
pop
imul
add
add
add
add
mov
cmp
mov
mov
punpckldq
mov
add
add
mov
pop
rolb
add
mov
add
and
mov
aam
and
jae
add
scas
loop
mov
inc
or
push
jl
lret
sahf
repnz
add
add
sub
mov
ljmp
sub
add
bound
mov
lods
outsl
loopne
push
addr16
mov
pop
insl
add
add
pop
xor
and
mov
cmpsb
add
shr
cmp
mov
jle
add
add
jg,pn
add
imul
fadd
add
addb
cmp
add
sbb
std
dec
bound
mov
mov
add
add
movb
jle
mov
int
add
add
xchg
or
sbb
loop
sbbl
add
add
add
add
xchg
mov
out
test
push
dec
fcomps
pop
stos
dec
lahf
addb
xor
mov
dec
xchg
add
add
add
xor
fdivl
add
je
js
add
add
mov
stos
dec
push
add
in
std
xchg
add
add
push
add
and
adc
inc
inc
std
mov
push
add
lret
jg
add
add
ret
add
sbb
push
mov
or
inc
add
or
iret
out
push
pop
mov
add
test
add
add
mov
xchg
add
cs
add
mov
add
inc
mov
cwtl
sbb
add
mov
sub
adc
adc
repz
out
and
hlt
add
push
add
enter
mov
xor
out
add
inc
mull
add
add
add
add
fcoms
insl
or
lret
aas
mov
add
lock
cmc
subl
in
add
aad
rolb
push
add
or
sbb
jp
bound
mov
add
pop
mov
mov
push
cld
jg
add
adc
adc
jmp
xchg
sub
sbbl
dec
mov
add
mov
jns
repz
add
ja
add
and
mov
add
lahf
mov
stc
lcall
add
movb
push
add
jno
add
mov
push
add
add
bound
mov
push
add
sahf
cltd
lahf
xor
addb
mov
mov
aam
jmp
add
and
imul
int
arpl
add
xor
xchg
fidivs
push
add
add
mov
push
outsl
out
sbb
mov
fcoms
add
add
push
or
add
jb
xchg
imul
lock
stc
jae
add
add
scas
jnp
roll
add
jnp
mov
add
add
add
mov
outsl
xchg
add
mov
or
add
mov
inc
add
adc
addr16
cmp
add
test
jmp
and
addb
jl
xor
mov
add
add
mov
xlat
cmp
in
dec
stc
in
push
add
push
add
outsb
jo
add
les
push
add
addb
add
mov
pop
pop
jae
pop
sbb
add
out
dec
ja
mov
xchg
sbb
add
test
mov
add
push
push
add
add
mov
xchg
ret
dec
sub
add
clc
nop
add
sub
cmp
pop
ret
jg
pop
imull
rolb
add
xchg
cmp
gs
bound
mov
mov
inc
add
add
add
inc
sub
in
push
add
dec
rolb
fisubl
or
xor
mov
xor
add
add
or
lret
std
mov
add
or
push
add
mov
imul
popa
popf
mov
shl
push
add
add
mov
jg
push
adc
mov
pop
inc
mov
add
push
sbb
lret
inc
add
ret
sbb
jg
test
add
pop
pop
push
adc
pop
loopne
xchg
add
cwtl
cmp
xor
fcom
add
fisubs
add
mov
add
jp
add
dec
sub
dec
aam
push
and
push
sbb
je
bound
mov
add
jno
arpl
inc
add
add
mov
jge
add
inc
fdivr
adc
outsb
cmp
cmc
mov
add
add
add
repz
add
roll
add
add
pusha
add
punpckhdq
movsl
push
add
sbb
mov
sub
add
jmp
mov
out
inc
push
add
adc
or
mov
pop
bound
mov
scas
cmp
jns
fdivrl
xor
and
push
add
cli
daa
and
data16
bound
mov
fwait
pop
inc
int
popf
lret
xchg
add
mov
pop
je
jle
add
roll
mov
rolb
push
mov
fcoml
popa
js
add
or
push
add
mov
add
mov
add
xchg
iret
jae
and
pop
rolb
mov
dec
lods
jmp
adc
push
mov
inc
add
mov
push
xchg
push
add
dec
lret
jmp
add
ja
pop
into
push
in
daa
mov
add
pop
add
out
cs
add
and
and
mov
in
pushf
or
pop
pushf
push
mov
add
movsb
add
cmp
or
cs
testb
sahf
jp
add
push
adc
xor
int
add
add
mov
rolb
adc
jmp
add
jne
add
add
add
add
fadd
add
jbe
inc
add
imul
test
add
adc
std
icebp
xchg
add
add
cwtl
add
mov
or
movsb
add
cmp
add
xchg
out
out
add
mov
inc
add
sub
add
pop
scas
cmpsl
xchg
add
ja
sti
xor
sub
add
pop
adc
add
mov
cmp
add
add
add
aad
cltd
jbe
movsb
add
je
add
push
add
add
hlt
add
std
xorl
xchg
adc
shr
mov
add
mov
add
add
cs
mov
sub
jge
push
add
pusha
add
xchg
std
xchg
add
repz
add
add
and
add
enter
pop
xlat
nop
add
rol
adcl
lods
in
push
add
popa
nop
add
mov
mov
jbe
jnp
add
add
xor
mov
pop
cli
scas
add
inc
add
sbb
dec
insb
inc
add
pop
xor
rcr
addb
push
add
ds
inc
lcall
testb
push
mov
push
add
add
movsb
add
cmp
cli
and
dec
jge
aam
in
xor
rolb
loop
stos
jecxz
pop
sbb
add
cltd
jb
cmp
add
repnz
add
sti
sub
and
mov
dec
gs
mov
sti
movsb
add
sbb
adc
add
mov
xchg
lock
sbb
sahf
adc
xchg
adc
insl
inc
cmpsb
add
add
dec
pusha
add
sbb
fwait
out
aaa
je
adc
dec
adc
std
inc
add
jne
into
imul
pop
and
sub
mov
pop
dec
test
add
xchg
inc
add
mov
outsb
add
adc
adc
fldenv
in
mov
jno
add
add
jbe
inc
nop
add
add
test
xchg
add
pop
inc
out
mov
xchg
add
pop
mov
or
add
add
out
test
fimuls
push
and
push
add
xchg
add
add
pop
pop
jmp
add
pop
inc
add
clc
lods
push
dec
mov
push
aaa
inc
ja
sbb
sub
add
add
add
test
stc
sbb
add
mov
sahf
sahf
and
mov
add
jmp
and
mov
jmp
add
sahf
and
movsb
add
pop
cli
out
add
adc
dec
jp,pn
add
sti
repz
xchg
jg
mov
dec
negl
pop
add
add
mov
push
add
popf
hlt
add
add
jmp
mov
sbb
add
sbb
add
mov
add
add
add
cmpsb
add
add
ret
push
add
xor
add
je
adc
xchg
add
mov
push
mov
add
loop
outsb
xor
nop
add
add
add
inc
cmp
data16
inc
add
insl
ja
add
arpl
xchg
xor
cs
adc
faddl
add
cltd
cmpsb
add
out
ret
xchg
add
stos
mov
outsl
xor
ds
add
dec
das
add
mov
sub
sub
add
add
test
add
push
add
adc
pop
sub
push
add
inc
push
and
mov
jae
in
add
mov
jl
add
add
mov
mov
xchg
popf
dec
lret
xchg
push
add
add
add
add
mov
movb
in
inc
add
mov
add
arpl
add
or
sbb
mov
cmp
aas
fidivs
les
push
add
mov
add
fldenv
leave
mov
testb
add
add
and
sub
mov
pop
push
add
xor
xor
std
ror
js
aam
inc
inc
pop
jb
addb
add
js
mov
enter
adc
out
mov
pushf
inc
add
mov
add
outsl
imul
push
adc
into
add
cmp
cmp
call
enter
add
add
int3
push
push
lret
and
mov
arpl
add
jp
add
movb
daa
testb
add
add
add
add
lea
daa
int3
hlt
add
inc
add
cmc
rolb
out
dec
push
add
push
add
jecxz
sti
inc
sub
jo
add
cmc
push
dec
ljmp
jnp
cmc
mov
add
pop
stos
or
cmc
sbb
xchg
sub
add
add
fsub
add
add
dec
leave
loop
mov
out
xchg
testb
add
push
roll
mov
dec
leave
insb
pop
jge
mov
out
dec
cs
cltd
das
xchg
out
clc
pop
pop
mov
xchg
add
and
pop
xchg
xor
dec
sti
jmp
add
jne
mov
jns
mov
iret
out
push
and
mov
idiv
push
add
movb
data16
mov
add
rcl
mov
mov
sub
addr16
insl
jp
test
mov
cli
xor
cmp
addb
fldcw
adc
inc
test
add
cmc
cmp
lahf
and
pop
icebp
mov
test
subl
add
add
xchg
mov
add
mov
cs
add
add
fwait
repz
add
jbe
or
cld
xlat
and
mov
cmc
jns
add
mov
xor
fwait
ja
add
add
addr16
ja
sbb
add
add
push
add
push
cmc
in
aad
rolb
xor
and
add
sub
add
test
adc
mov
xor
add
aad
test
outsb
cld
push
add
inc
add
adc
adc
push
mov
movl
sarl
out
addl
add
dec
sbb
imul
movb
add
mov
cltd
adc
add
dec
jo
xor
insb
arpl
rolb
sub
mov
popf
dec
push
out
stos
push
je
rcrl
sub
mov
mov
aam
mov
push
add
addb
add
lret
mov
xchg
add
push
xchg
aad
and
xchg
add
push
and
pop
incl
fsubrl
xchg
xchg
inc
add
out
jecxz
add
movb
add
mov
add
push
add
test
js
add
inc
add
repnz
jae
rolb
pop
add
add
mov
add
xor
add
add
add
mov
push
fwait
cld
nop
jmp
add
jp
sbb
inc
clc
repnz
jae
add
mov
jl
push
mov
xchg
ret
add
imul
loopne
mov
nop
jmp
jo
mov
imul
xchg
ret
add
mov
add
mov
out
add
add
test
add
jp
dec
add
cwtl
pop
clc
repnz
jae
add
add
add
out
sbb
nop
jae
mov
sbb
add
push
mov
xchg
ret
out
add
cmp
cmpl
fwait
cld
nop
jmp
insb
add
cmp
repnz
jae
mov
add
mov
xorl
or
nop
jae
adc
lret
mov
push
mov
clc
repnz
jae
add
add
push
add
addb
sub
clc
repnz
jae
add
jo
add
out
jns
clc
repnz
jae
jg
mov
movsl
add
jnp
nop
jae
add
xor
push
mov
xchg
ret
add
je
mov
add
push
mov
add
mov
add
add
lea
adc
mov
add
adc
jno
clc
repnz
jae
sub
add
ret
fwait
cld
nop
jmp
mov
add
movsl
add
rcrl
add
fwait
cld
nop
jmp
shrl
add
movsl
and
cmp
repnz
jae
add
mov
and
and
fwait
cld
nop
jmp
add
ret
add
rcrb
in
inc
add
scas
and
inc
and
jae
jmp
in
add
and
ret
push
add
movsl
jo
repz
jg
clc
repnz
jae
add
popf
iret
push
inc
or
icebp
clc
repnz
jae
mov
sub
mov
inc
push
mov
xchg
ret
add
add
push
add
repnz
jae
add
scas
push
mov
nop
jae
add
in
add
add
pushl
push
mov
xchg
ret
jo
add
lea
sub
inc
add
add
gs
loopne
pop
mov
clc
repnz
jae
add
jo
add
decl
std
faddl
xchg
ret
fildl
ror
add
mov
fwait
cld
nop
jmp
add
mov
std
rep
push
mov
xchg
ret
add
mov
jo
fwait
cld
nop
jmp
and
add
adc
dec
push
clc
repnz
jae
mov
test
ficomps
pop
clc
repnz
jae
add
test
sbb
add
clc
repnz
jae
add
in
mov
clc
repnz
jae
add
push
add
mov
clc
repnz
jae
dec
negb
add
mov
std
and
add
add
xor
jp
add
out
add
cmp
clc
repnz
jae
mov
add
sub
clc
repnz
jae
mov
add
mov
clc
repnz
jae
add
jp
je
fwait
cld
nop
jmp
rolb
add
push
jmp
add
add
jb
je
mov
dec
repnz
add
add
rolb
loope
add
mov
je
clc
repnz
jae
movsl
addr16
shl
add
push
clc
repnz
jae
add
xor
add
sarb
test
addr16
clc
repnz
jae
add
sub
mov
fwait
cld
nop
jmp
sbb
jo
push
push
mov
xchg
ret
dec
loope
roll
add
cmp
xor
add
clc
repnz
jae
add
jmp
add
add
shll
out
notl
add
xchg
clc
repnz
jae
negb
rolb
add
js
and
clc
repnz
jae
add
add
sbb
mov
add
repnz
jae
fsubp
jo
and
clc
repnz
jae
insb
xor
add
testb
mov
clc
repnz
jae
fiadds
iret
gs
repnz
jae
ret
add
scas
sbb
mov
clc
repnz
jae
add
mov
pop
imul
add
inc
add
jo
sbb
push
fwait
cld
nop
jmp
push
jp
add
fistl
sbbl
loope
pop
add
movsl
incl
repz
cld
nop
jmp
add
pop
xor
movsb
add
xor
push
mov
xchg
ret
add
add
cmp
mov
xchg
ret
in
xor
and
mov
jmp
add
lret
iret
add
add
cmp
test
cld
nop
jmp
mov
mov
push
mov
xchg
ret
fnclex
scas
xchg
repnz
and
add
add
add
loop
in
add
arpl
add
rcrb
or
sub
roll
sbb
add
repnz
jae
sub
add
repnz
jae
jo
add
jg
jne
mov
fwait
cld
nop
jmp
add
jp
pop
loope
add
add
stos
rep
fwait
cld
nop
jmp
lret
adc
movsb
add
push
fwait
cld
nop
jmp
movsl
add
and
push
clc
repnz
jae
sub
add
add
out
adc
dec
ss
clc
repnz
jae
sub
cmp
je
repnz
jae
divb
cltd
rep
clc
repnz
jae
add
in
in
jp
push
inc
fisttpl
nop
jae
and
popf
arpl
mov
xchg
ret
test
add
and
push
mov
xchg
ret
cmpsl
lret
jp
add
rolb
repnz
jae
add
mov
mov
push
mov
xchg
ret
dec
xor
add
jnp
enter
nop
jae
shrl
je
add
mov
clc
repnz
jae
add
loop
addr16
imul
clc
repnz
jae
add
add
dec
cmp
repnz
jae
add
jns
dec
and
push
mov
xchg
ret
cmpsl
add
add
mov
xchg
ret
sub
addb
add
lea
clc
repnz
jae
add
pop
add
shr
fwait
cld
nop
jmp
push
and
add
jae
add
mov
jb
fimuls
jae
movsb
scas
add
roll
mov
mov
xchg
ret
rorl
add
add
cltd
mov
clc
repnz
jae
sub
jb
jp
add
repnz
jae
js
add
add
imul
insl
add
sbb
xor
push
mov
xchg
ret
add
dec
and
movsl
fisubs
popa
add
repnz
jae
add
add
add
aas
adc
sti
jmp
add
inc
clc
repnz
jae
add
add
mov
clc
repnz
jae
cmpsl
lret
addl
test
xor
add
clc
repnz
jae
out
in
add
rep
fwait
cld
nop
jmp
add
and
pop
popf
add
fwait
cld
nop
jmp
pop
iret
add
movsb
add
lea
nop
jae
dec
in
add
js
and
fwait
cld
nop
jmp
dec
sbb
and
mov
mov
data16
fstpt
iret
add
xor
clc
dec
inc
clc
repnz
jae
jl
add
xchg
clc
repnz
jae
and
add
add
clc
repnz
jae
add
pop
mov
push
mov
xchg
ret
iret
add
out
add
add
clc
repnz
jae
adc
add
add
cmp
in
xor
xchg
add
in
add
stos
fwait
add
mov
scas
mov
clc
repnz
jae
add
sub
push
mov
xchg
ret
sub
add
inc
adc
repnz
jae
mov
sub
test
sbb
nop
jae
jp
je
add
fwait
cld
nop
jmp
add
add
dec
pop
add
push
mov
xchg
ret
push
cmp
jl
add
rolb
cltd
xor
clc
repnz
jae
add
dec
add
add
out
out
clc
clc
repnz
jae
mov
add
jle
push
mov
xchg
ret
add
in
add
repnz
jae
scas
jp
add
jb
repnz
add
adc
nop
jae
add
add
addb
add
ret
clc
repnz
jae
push
add
add
add
lods
jmp
imul
mov
jo
sub
add
testb
add
push
push
mov
xchg
ret
add
mov
mov
clc
repnz
jae
jp
jo
test
adc
repnz
jae
and
add
repnz
jae
mov
js
cmp
loope
add
add
jo
add
sti
push
mov
xchg
add
aas
pop
add
add
add
cwtl
mov
clc
repnz
jae
insb
shll
dec
push
clc
repnz
jae
add
ret
add
in
add
add
jns
xabort
nop
jae
movsl
add
add
loop
fwait
cld
nop
jmp
shll
jg
add
addb
add
jmp
add
add
xchg
jo
movsl
ja
jmp
clc
repnz
jae
loop
add
fcmovnb
add
dec
push
push
mov
xchg
ret
add
roll
loop
jo
push
push
mov
xchg
ret
add
sub
add
mov
clc
repnz
jae
scas
cmp
nop
jae
sbb
add
add
jl
ds
push
mov
xchg
ret
dec
popf
fidivs
imul
add
outsl
push
push
mov
xchg
ret
sub
add
mov
push
clc
repnz
jae
sub
inc
add
push
clc
repnz
jae
sbb
inc
add
add
mov
fwait
cld
nop
jmp
popf
add
loop
add
loop
xchg
clc
repnz
jae
add
add
in
ret
cmpsl
rolb
fmuls
add
repnz
jae
rcrb
jmp
add
add
jg
add
mov
scas
push
clc
repnz
jae
roll
add
add
add
add
xor
jae
imul
add
adc
repnz
jae
in
dec
roll
sahf
cmp
fwait
cld
nop
jmp
jo
add
cwtl
mov
push
mov
xchg
ret
add
out
jl
add
mov
clc
repnz
jae
sbb
in
sub
add
cmp
les
cld
nop
jmp
add
add
push
add
mov
xchg
ret
add
add
xor
repnz
jae
insb
mov
shll
dec
push
clc
repnz
jae
in
mulb
add
fwait
cld
nop
jmp
and
popf
addr16
mov
fwait
cld
nop
jmp
sub
test
clc
repnz
jae
sub
add
roll
in
popa
fwait
cld
nop
jmp
scas
jo
shll
imul
add
mov
adc
add
movsb
js
add
insb
add
fisttps
repnz
jae
add
popf
add
insb
add
clc
repnz
jae
fildl
add
imul
push
mov
xchg
ret
add
add
outsl
loopne
mov
xchg
ret
out
push
jp
in
mov
clc
repnz
jae
add
add
stos
push
clc
repnz
jae
mov
and
lcall
movb
cmp
ret
add
add
repz
pop
clc
repnz
jae
gs
add
and
clc
repnz
jae
xchg
add
pop
jae
call
clc
repnz
jae
pop
push
jo
sub
cld
nop
jmp
push
add
add
push
cmpsl
je
add
pusha
clc
repnz
jae
test
add
sub
clc
repnz
jae
add
add
in
movsb
xchg
and
clc
repnz
jae
add
mov
idiv
jmp
sub
push
add
add
mov
call
clc
repnz
jae
add
add
pop
fwait
cld
nop
jmp
mov
add
add
push
clc
repnz
jae
add
and
hlt
add
mov
push
mov
xchg
ret
add
insb
movsl
lret
repnz
jae
add
add
mov
cmp
fwait
cld
nop
jmp
jp
testb
roll
add
push
mov
xchg
ret
and
lcall
jmp
add
xchg
in
add
clc
repnz
jae
loope
xor
jb
lods
push
push
mov
xchg
ret
js
shll
jmp
sub
add
inc
enter
cmp
ret
jg
pop
push
jne
add
fwait
cld
nop
jmp
ret
loop
mov
add
add
push
mov
xchg
ret
shll
mov
push
mov
xchg
ret
mov
rolb
adc
nop
jae
add
lret
jl
add
imul
sbbl
movsl
add
je
repnz
jae
dec
roll
clc
inc
clc
repnz
jae
lret
je
add
dec
cmp
nop
jae
add
mov
inc
add
fildl
add
in
rorl
add
push
add
jo
add
add
pop
lea
dec
add
add
add
add
clc
clc
repnz
jae
rolb
and
xor
push
mov
xchg
ret
jo
jp
add
clc
repnz
jae
mov
cmp
repnz
jae
addr16
add
ret
jg
add
fwait
add
clc
repnz
jae
add
mov
mov
roll
push
add
pusha
clc
repnz
jae
add
add
push
add
movsl
loope
dec
jne
fwait
cld
nop
jmp
add
add
clc
repnz
jae
add
add
push
dec
push
add
add
add
inc
add
test
std
clc
repnz
jae
sub
or
mov
cmp
ret
sub
in
dec
add
sub
test
repnz
jae
add
je
es
clc
repnz
jae
pop
in
sti
jne
clc
repnz
jae
xchg
add
push
inc
add
add
loope
add
mov
clc
repnz
jae
cmp
and
cli
cmp
fwait
cld
nop
jmp
dec
mov
add
fisttpl
cld
nop
jmp
add
add
add
leave
clc
repnz
jae
jo
add
push
mov
fwait
cld
nop
jmp
add
add
add
mov
nop
jmp
push
addr16
mov
add
fwait
cld
nop
jmp
gs
sbb
add
add
fldt
fwait
cld
nop
jmp
add
fisubs
pop
clc
repnz
jae
pop
pop
add
or
test
add
clc
repnz
jae
movsb
popf
pop
add
push
push
mov
xchg
ret
add
gs
add
jae
push
pop
push
add
jl
add
add
mov
clc
repnz
jae
add
mov
jae
in
test
add
pusha
add
fwait
cld
nop
jmp
sub
add
dec
pop
iret
xchg
add
test
pop
pop
clc
repnz
jae
scas
movsb
add
add
rolb
push
add
inc
fwait
cld
nop
jmp
add
loop
sbb
add
sub
jne
clc
repnz
jae
pop
test
enter
push
inc
add
jp
insb
add
and
mov
clc
repnz
jae
loope
jp
mov
repnz
jae
je
jo
add
sbb
jb
inc
add
pop
add
fisttpl
repnz
jae
jo
cmpsl
sub
clc
repnz
jae
add
sub
push
fdivr
repnz
jae
add
add
add
movzwl
clc
repnz
jae
rorb
popf
in
xor
push
mov
xchg
ret
pop
imul
jo
add
das
pushl
push
mov
xchg
ret
out
imul
mov
adc
cmp
and
add
fwait
cld
nop
jmp
addr16
fiadds
cmpsl
xor
push
mov
xchg
ret
shll
loope
popf
add
jae
sbb
add
dec
mov
clc
repnz
jae
je
jo
mov
cmp
test
and
push
mov
xchg
ret
addr16
scas
insb
incb
repz
cld
nop
jmp
mov
fisubrs
or
clc
repnz
jae
add
and
movsb
and
add
push
mov
xchg
ret
movsb
add
addr16
enter
jae
add
push
insb
add
and
mov
push
add
dec
and
add
mov
add
rol
clc
repnz
jae
rorb
add
add
mov
xchg
ret
add
icebp
jg
mov
add
add
repnz
jae
dec
movsl
movsl
les
sub
pop
cmp
mov
xchg
ret
add
jo
popf
jne
add
clc
repnz
jae
add
outsb
pop
clc
repnz
jae
add
jg
add
add
add
clc
repnz
jae
add
add
add
iret
mov
clc
repnz
jae
sub
add
mov
clc
repnz
jae
xor
add
dec
push
fwait
cld
nop
jmp
mov
pop
jo
or
nop
jae
movsl
mov
mov
pop
lcall
adc
movsl
add
repnz
jae
imul
jo
and
movzwl
clc
repnz
jae
sbb
or
stc
clc
repnz
jae
movsl
sub
sub
mov
push
mov
xchg
ret
add
add
sar
nop
jae
scas
add
add
mov
cld
nop
jmp
add
cli
decl
push
mov
xchg
ret
add
add
sbb
test
clc
repnz
jae
push
addr16
mov
repnz
jae
out
add
sub
sbb
jp
add
push
mov
xchg
ret
sarl
add
pop
sbb
mov
xchg
ret
add
cmpsl
mov
mov
iret
inc
add
add
rolb
outsl
rep
fwait
cld
nop
jmp
mov
add
insb
rclb
mov
push
mov
xchg
ret
lret
pop
add
ret
xchg
out
cli
mov
clc
repnz
jae
sbb
sub
cmp
add
clc
repnz
jae
movsb
popf
test
add
add
clc
repnz
jae
xor
js
add
clc
repnz
jae
popf
roll
movsl
je
leave
mov
clc
repnz
jae
in
movsl
ret
adc
lret
push
mov
xchg
ret
add
ret
shr
sub
cmp
repnz
jae
js
rcl
lea
mov
xchg
ret
jp
add
add
je
clc
repnz
jae
cmp
repnz
jae
pop
pop
jo
ret
add
jp
push
clc
repnz
jae
xchg
movsl
xchg
xchg
push
mov
xchg
ret
popf
dec
add
or
repnz
jae
add
add
mov
xorl
out
dec
add
clc
repnz
jae
addr16
insb
je
stos
mov
clc
repnz
jae
add
add
cli
push
mov
mov
pusha
outsl
add
add
pusha
add
mov
inc
add
add
loop
test
jb,pt
fwait
cld
nop
jmp
popf
cmp
js
in
push
fnstsw
clc
repnz
jae
add
add
cmp
repnz
jae
add
add
loop
stos
pushl
push
mov
xchg
ret
add
push
add
adc
movb
add
clc
repnz
jae
add
and
inc
and
repnz
jae
add
cmp
dec
add
cmp
icebp
incl
add
data16
mov
repnz
jae
add
movsl
adc
and
nop
jmp
adc
jb
jp
xor
clc
repnz
jae
movsb
add
sub
sbb
mov
xchg
ret
add
add
jne
clc
repnz
jae
dec
in
loope
add
add
xor
clc
repnz
jae
add
and
clc
repnz
jae
add
jp
jb
pop
jnp
nop
jae
movsl
add
add
add
call
clc
repnz
jae
jp
iret
add
lods
clc
repnz
jae
lret
add
pop
add
shll
cmp
push
mov
xchg
ret
add
shll
lret
add
hlt
add
nop
jae
dec
idivb
add
add
or
popf
clc
repnz
jae
insb
add
loopne
loope
loopne
cltd
pop
push
mov
xchg
ret
ret
add
add
mov
clc
repnz
jae
add
notb
rolb
pop
mov
clc
repnz
jae
fidivs
loope
add
jnp
stos
fwait
cld
nop
jmp
popf
sbb
sbb
push
push
mov
xchg
ret
jo
add
add
mov
sbb
inc
add
push
roll
ss
push
mov
cmc
add
add
add
les
add
add
daa
jmp
inc
xor
clc
repnz
jae
add
imul
test
mov
xchg
ret
sbb
add
mov
adc
repnz
jae
loope
add
sub
lea
mov
cmp
ret
jb
jp
sub
pop
clc
repnz
jae
pop
movsl
movsl
test
mov
mov
into
inc
add
add
lret
add
add
leave
add
fwait
cld
nop
jmp
iret
sbb
add
shll
testb
add
rclb
rolb
xchg
ret
add
popf
add
add
add
clc
clc
repnz
jae
add
movsb
add
shr
push
mov
xchg
ret
mov
dec
add
xchg
add
jmp
insb
add
xchg
push
add
adc
clc
repnz
jae
movsl
add
cmp
add
add
mov
push
mov
xchg
ret
lret
add
add
mov
clc
repnz
jae
add
out
add
repnz
jae
add
jp
add
ficomps
inc
push
mov
xchg
ret
xor
shlb
add
or
nop
jae
add
loope
iret
jo
shl
clc
repnz
jae
xor
jl
xchg
out
mov
jmp
add
add
and
mov
clc
repnz
jae
roll
mov
in
imul
clc
repnz
jae
add
iret
add
movsl
push
add
clc
repnz
jae
add
add
add
add
test
clc
repnz
jae
add
xor
lahf
lods
clc
repnz
jae
jl
add
and
push
clc
repnz
jae
idivb
add
sbb
cmc
jg
test
adc
add
repnz
jae
fildl
mov
add
clc
repnz
jae
insb
xor
add
fwait
cld
nop
jmp
add
sarl
mov
sbb
aad
push
clc
repnz
jae
mov
scas
call
and
mov
add
jae
and
mov
add
popl
fwait
cld
nop
jmp
xor
ret
roll
add
xchg
add
add
nop
add
add
mov
shr
clc
repnz
jae
dec
add
cmpsl
sub
bound
mov
fimull
test
jmp
nop
jae
add
mov
push
clc
repnz
jae
scas
add
add
roll
sbb
jae
repnz
jae
roll
add
pop
jge
subb
lcall
adc
add
and
rclb
loop
add
add
and
imul
xchg
cld
nop
jmp
jp
add
add
fldl
add
fwait
cld
nop
jmp
add
add
add
ret
clc
repnz
jae
movsb
rolb
rolb
add
roll
nop
jae
add
add
popf
jg
addb
mov
test
fwait
cld
nop
jmp
add
add
cmp
jae
jp
push
js
mov
push
add
xor
inc
add
adc
cld
nop
jmp
in
xor
add
and
clc
repnz
jae
pop
je
add
clc
repnz
jae
jb
add
add
clc
repnz
jae
push
add
add
jne
clc
repnz
jae
jg
loope
and
clc
repnz
jae
rolb
mov
add
in
add
add
sub
add
inc
add
adc
push
clc
repnz
jae
add
insb
lret
scas
add
add
insb
add
clc
repnz
jae
test
sub
add
push
clc
repnz
jae
push
dec
add
push
clc
repnz
jae
cmpsl
add
movsl
rcll
add
jmp
add
sub
add
add
lret
pop
movzwl
clc
repnz
jae
add
add
add
add
popf
add
jp
add
gs
add
cld
nop
jmp
dec
dec
fistl
jg
add
mov
push
mov
xchg
ret
mov
add
add
add
jmp
add
ror
add
add
aas
push
mov
add
mov
mov
add
add
cli
pusha
push
mov
xchg
ret
add
add
jp
sub
icebp
fwait
cld
nop
jmp
add
add
sub
movzwl
clc
repnz
jae
dec
add
pop
add
fwait
cld
nop
jmp
add
add
add
add
inc
fwait
cld
nop
jmp
test
repz
mov
clc
repnz
jae
roll
test
stos
clc
repnz
jae
in
push
out
add
add
xorl
cwtl
and
push
mov
xchg
ret
add
add
lcall
sbbl
call
mov
add
cmpsl
clc
mov
clc
repnz
jae
add
jb
push
jo
mov
mov
xchg
ret
dec
push
add
add
cmpl
fwait
cld
nop
jmp
add
test
push
mov
add
or
add
add
add
add
add
mov
push
mov
xchg
ret
pop
add
xor
push
mov
add
sub
xchg
xchg
cmp
mov
adc
fimull
test
clc
lcall
cmc
jmp
pop
add
add
add
add
add
decl
push
mov
xchg
ret
add
add
inc
clc
repnz
jae
add
roll
hlt
add
add
add
mov
nop
jae
mov
push
je
sub
push
loope
add
mov
rol
add
clc
repnz
jae
loope
imul
jg
mov
push
mov
xchg
ret
add
sub
in
cmp
fwait
cld
nop
jmp
add
dec
sub
add
pop
mov
push
mov
xchg
ret
add
add
add
dec
push
mov
xchg
ret
add
add
roll
add
sub
test
repnz
jae
js
add
add
add
fwait
cld
nop
jmp
add
add
loope
pop
pop
idivl
fwait
cld
nop
jmp
jl
add
jb
add
leave
mov
clc
repnz
jae
add
notb
cmpsl
addb
or
mov
xchg
ret
dec
add
push
fwait
cld
nop
jmp
add
add
add
dec
jo
fwait
push
push
mov
xchg
ret
movsl
js
jl
fcmovnb
out
add
add
test
add
add
add
adcl
incl
add
pushf
mov
clc
repnz
jae
rcl
add
mov
clc
repnz
jae
mov
mov
test
fwait
cld
nop
jmp
loope
rcl
iret
add
and
mov
push
fwait
cld
nop
jmp
test
add
add
pop
subl
fwait
cld
nop
jmp
jo
add
sub
mov
clc
repnz
jae
jp
add
add
inc
add
add
push
mov
xchg
ret
add
popf
add
jge
lret
clc
repnz
jae
add
mov
and
cmp
lcall
add
add
adc
fs
fwait
cld
nop
jmp
sub
add
movsb
fcmovne
mov
fwait
cld
nop
jmp
add
in
rorl
fdivrs
clc
repnz
jae
add
in
add
call
clc
repnz
jae
testb
shll
pop
add
clc
repnz
jae
shrb
cmp
push
leave
fwait
cld
nop
jmp
rcrb
add
push
mov
add
ljmp
add
push
cmp
nop
jmp
mov
movsl
add
sub
icebp
and
repnz
jae
ret
add
je
adc
add
stos
push
mov
xchg
ret
add
add
popf
add
stos
mov
fwait
cld
nop
jmp
mov
movsl
popf
ret
jo
add
popa
clc
repnz
jae
add
add
and
push
mov
xchg
ret
mov
test
add
fwait
cld
nop
jmp
add
jo
add
push
mov
xchg
ret
add
add
add
mov
add
repnz
jae
loop
add
push
clc
repnz
jae
add
jb
enter
nop
jae
add
mov
or
clc
repnz
jae
jo
add
cmpsl
or
repnz
jae
testb
cmp
dec
sub
cmpsl
sbb
jae
out
movsl
add
ror
adc
subl
adc
add
add
add
add
clc
repnz
jae
push
mov
add
adc
jle
clc
repnz
jae
popf
add
mov
in
add
call
clc
repnz
jae
add
and
add
dec
pop
clc
repnz
jae
shrl
add
jae
add
pop
add
iret
iret
jle
dec
cmp
repnz
jae
mov
fstpt
add
repnz
jae
mov
insb
movsl
xchg
mov
sbbb
add
add
rcrl
dec
clc
repnz
jae
iret
addr16
add
jp
mov
push
mov
xchg
ret
add
in
add
add
add
add
push
mov
xchg
ret
add
pop
add
push
subl
clc
repnz
jae
add
js
imul
mov
addb
add
inc
sub
repnz
jae
fisttpl
add
add
xor
push
mov
xchg
ret
jp
add
pop
add
mov
xchg
ret
add
add
add
lea
fwait
cld
nop
jmp
sub
gs
test
dec
add
repnz
jae
add
add
fwait
cld
nop
jmp
mov
add
movsb
add
rclb
rolb
xchg
ret
js
pop
add
mov
add
xor
addr16
add
add
add
adc
or
add
add
repnz
jae
add
add
mov
popa
clc
repnz
jae
dec
roll
add
add
imul
clc
repnz
jae
jp
add
lret
ror
jmp
jae
add
push
xchg
jp
add
mov
jne
clc
repnz
jae
loop
push
push
add
push
clc
repnz
jae
je
add
aad
lea
fwait
cld
nop
jmp
cmpsl
movsl
add
movsb
jo
add
push
loopne
mov
xchg
ret
mov
add
call
fwait
cld
nop
jmp
mov
pop
add
popf
mov
clc
repnz
jae
add
add
movsl
pusha
add
adc
repnz
jae
js
add
mov
mov
clc
repnz
jae
movsl
js
ja
clc
repnz
jae
pop
pop
pop
std
push
clc
repnz
jae
add
mov
mov
repnz
jae
push
mov
fmull
mov
xchg
ret
add
add
aam
push
clc
push
mov
xchg
ret
add
add
add
fimuls
mov
adc
repnz
jae
fildl
add
xor
repnz
jae
out
push
sbb
add
rep
fwait
cld
nop
jmp
js
add
loop
add
add
add
clc
repnz
jae
popf
add
ret
mov
jae
add
mov
sbb
add
add
clc
repnz
jae
add
in
dec
push
add
mov
clc
repnz
jae
dec
add
fdivr
clc
repnz
jae
shll
popf
sbb
add
cmc
incl
fwait
cld
nop
jmp
cmp
pop
add
je
fistl
sub
mov
xchg
ret
jo
pop
add
hlt
add
gs
add
push
push
mov
xchg
ret
je
mov
sub
mov
add
repnz
jae
iret
add
insb
testb
push
push
mov
xchg
ret
js
add
push
and
mov
push
mov
xchg
ret
add
movsl
add
mov
cld
nop
jmp
iret
add
push
add
add
xchg
xor
clc
repnz
jae
pop
add
sub
cmpl
fwait
cld
nop
jmp
jg
and
add
fiadds
inc
call
jmp
add
add
out
mov
clc
repnz
jae
add
add
insb
nop
add
add
clc
repnz
jae
jg
add
add
add
clc
repnz
jae
jl
popf
add
jmp
rolb
jmp
movsb
add
jl
push
add
add
xchg
add
repnz
jae
rcll
and
add
movsb
add
out
add
fwait
cld
nop
jmp
rorl
movsl
add
pop
push
dec
and
push
mov
xchg
ret
jp
mov
lret
inc
add
repz
clc
repnz
jae
in
and
sub
push
clc
repnz
jae
and
fisttpl
nop
jae
adc
notb
pusha
add
fwait
cld
nop
jmp
add
add
xchg
add
clc
repnz
jae
scas
add
sub
inc
add
pop
add
mov
je
clc
repnz
jae
add
pop
cmp
push
mov
xchg
ret
pop
js
test
mov
lods
push
mov
xchg
ret
add
add
add
add
mov
clc
repnz
jae
loop
add
pop
in
lea
clc
repnz
jae
sub
add
adc
repnz
jae
je
rcll
jne
clc
repnz
jae
xor
pop
das
push
clc
repnz
jae
and
add
add
or
clc
repnz
jae
add
add
fwait
cld
nop
jmp
add
roll
add
jae
loop
add
add
add
dec
jne
clc
repnz
jae
dec
add
jno
popa
clc
repnz
jae
add
add
mov
add
clc
repnz
jae
out
pop
imul
dec
testl
sub
add
js
in
adc
scas
enter
jae
roll
xor
push
add
pop
push
mov
xchg
ret
dec
ret
add
add
popa
fs
repnz
jae
add
jp
mov
mov
clc
repnz
jae
sbb
add
jp
add
push
clc
repnz
jae
jp
jp
add
sbb
dec
add
clc
repnz
jae
add
add
add
jmp
mov
xchg
ret
add
imul
rcll
add
sar
mov
xchg
ret
add
add
fwait
cld
nop
jmp
mov
dec
add
add
add
clc
repnz
jae
add
rorl
mov
insl
mov
clc
repnz
jae
xor
xchg
repnz
lret
cmc
clc
repnz
jae
add
pop
clc
repnz
jae
add
in
sub
fiadds
fwait
add
fwait
cld
nop
jmp
push
shll
movsb
add
icebp
clc
repnz
jae
and
pop
xor
add
mov
fwait
cld
nop
jmp
pop
insb
jg
loop
add
mov
clc
repnz
jae
add
ja
mov
clc
repnz
jae
js
push
jnp
mov
repnz
jae
imul
nop
jmp
pop
add
add
add
test
and
add
clc
repnz
jae
push
push
add
rolb
addb
add
xor
xor
clc
repnz
jae
pop
add
fcmovnu
push
clc
repnz
jae
and
out
and
nop
jmp
add
rcrl
in
not
fwait
cld
nop
jmp
add
fmulp
mov
add
xchg
add
rclb
popf
lock
add
add
add
je
mov
add
pushl
fwait
cld
nop
jmp
jg
add
add
insl
movzwl
clc
repnz
jae
out
add
add
mov
lock
add
ret
add
add
ficoms
adc
sti
dec
fwait
cld
nop
jmp
add
add
add
add
testb
add
add
repnz
jae
movsl
add
add
test
call
clc
repnz
jae
add
shrl
add
fwait
cld
nop
jmp
jo
add
add
dec
add
fwait
cld
nop
jmp
add
pop
push
add
add
cld
nop
jmp
cmp
add
scas
loop
jo
pop
clc
repnz
jae
xor
add
sub
add
clc
repnz
jae
add
add
add
sub
test
repnz
jae
add
add
mov
repnz
jae
add
mov
or
repnz
jae
add
fildl
add
test
inc
add
ret
je
and
sub
add
repnz
jae
add
add
clc
repnz
jae
add
iret
mov
clc
repnz
jae
roll
add
add
cmp
movb
sbb
add
jg
add
pusha
fwait
cld
nop
jmp
jo
ret
loope
jl
adc
jne
clc
repnz
jae
add
jmp
clc
repnz
jae
sbb
mov
cmpsl
add
mov
clc
repnz
jae
add
add
lcall
add
movsl
movsl
sub
add
mov
jae
sub
sbb
inc
add
clc
repnz
jae
add
add
movsb
shrl
mov
push
mov
xchg
ret
add
sub
test
cld
nop
jmp
shrl
add
add
loope
incl
add
sub
dec
mov
clc
repnz
jae
add
add
mov
xchg
sbb
xchg
add
cmp
dec
add
jmp
movb
inc
jnp
add
add
xor
out
insl
int
fs
movsl
in
ljmp
lds
or
lods
xchg
add
mov
inc
bound
mov
scas
pop
cmpsl
xor
add
adc
mov
cwtl
insl
add
mov
add
add
mov
sub
out
cmp
xchg
add
push
add
add
and
add
rolb
cmpsb
add
mov
xor
push
out
pop
rcl
add
push
hlt
add
cwtl
sbb
add
aas
imul
mov
mov
mov
add
xchg
add
and
dec
xchg
add
add
lahf
sub
add
rcrl
add
dec
int3
inc
add
mov
das
dec
push
add
and
push
add
jo
int3
mov
out
pop
movsb
add
sbb
xchg
add
int
les
call
add
test
sbb
stos
movsb
add
add
push
pop
push
dec
hlt
add
add
add
aaa
js
pop
movsb
add
xchg
add
add
jmp
mov
add
mov
ds
imull
add
xchg
add
test
fcoms
pushf
aad
adc
popa
arpl
mov
jno
xchg
add
push
add
xor
out
dec
insb
test
dec
mov
mov
jbe
in
add
enter
fwait
pusha
add
add
fwait
pop
push
add
inc
fldcw
add
ficompl
sti
pusha
add
add
add
lods
adc
pop
fmull
in
cld
popa
pop
lahf
or
fdivrl
push
dec
loope
in
add
mov
add
add
outsb
jo
mov
inc
fsubrs
push
add
cmp
push
add
add
add
jne
push
sub
add
mov
shll
test
sub
and
add
add
nopl
arpl
add
inc
push
add
mul
add
xor
add
rolb
stos
mov
add
xchg
popa
mov
mov
inc
inc
mov
hlt
add
sub
aaa
filds
stc
cmp
xchg
jge
mov
lcall
insl
adc
dec
push
fsubs
add
sbb
iret
faddl
lock
add
push
add
mov
and
add
call
dec
xor
jne
mov
add
in
addb
dec
arpl
jno
xor
mov
xor
stc
xchg
or
xchg
xchg
xchg
lahf
test
add
mov
add
mov
and
mov
inc
add
push
imul
inc
add
repnz
add
jns
add
mov
cmp
mov
dec
imul
add
cmp
sti
xor
push
imul
add
or
cmp
mov
push
xlat
fcomps
pop
rolb
or
ljmp
outsl
mov
addb
add
add
add
jno
sbb
rcrl
add
add
adc
xor
mov
lock
ljmp
add
popa
sbb
add
pop
aam
jne
cmp
nop
add
sbb
mov
add
repnz
jo
or
daa
out
aad
inc
js
lahf
cmpsl
leave
popa
stos
out
adc
jo
leave
test
shll
add
sahf
mov
enter
add
add
jne
mov
mov
jne
adc
out
xchg
popf
xchg
add
lds
adc
push
add
rolb
cmc
sbb
popl
or
movsl
lods
lea
mov
imul
jae
addr16
scas
sub
pop
and
mov
add
test
aad
add
sbb
add
and
add
iret
xchg
in
pop
xchg
loope
add
add
insb
xlat
xchg
sbb
cs
push
adc
movsl
xchg
jmp
cli
sbb
rolb
mov
into
loope
cmp
mov
xchg
add
adc
in
jecxz
xchg
mull
cmpsb
add
mov
out
jb
xor
ret
cli
inc
jns
inc
add
jmp
add
sub
fbstp
popf
js
xchg
add
mov
pop
imul
add
pusha
add
fiadds
push
lret
je
jb
push
add
add
add
xchg
pusha
add
fs
add
sbb
jp
pusha
add
push
add
add
rolb
stos
cmc
mov
adc
cmpsb
add
sbb
add
je
xor
sub
add
push
add
mov
or
xchg
jl
movb
fs
fwait
mov
add
mov
pop
jmp
add
lea
adc
mov
mov
adc
loopne
cmpsl
inc
add
test
add
sbbl
inc
add
testb
cltd
inc
jecxz
add
mov
lahf
mov
xchg
cld
sti
adc
imul
push
insb
cmpsb
add
jp
push
sahf
sbb
dec
das
jmp
xor
clc
int3
jecxz
in
xchg
inc
add
sub
insl
mov
das
jo
add
pop
les
inc
add
add
imul
jl
imul
add
or
dec
sbb
add
xchg
add
mov
and
mov
lods
test
stos
sbb
or
add
sub
mov
adc
pushf
sbb
popf
cld
mov
leave
jae
mov
add
push
fldl
add
rolb
lcall
add
push
add
push
add
add
jge,pt
add
add
popa
daa
or
bound
mov
outsb
daa
insb
mov
js
xchg
insb
ja
sbb
into
pop
jmp
add
in
sub
add
lret
xchg
addb
mov
in
fwait
mov
xchg
pop
add
aaa
popf
pop
hlt
add
xchg
add
pop
mov
gs
add
xor
movl
ret
into
pop
adc
mov
dec
and
les
push
lret
fnstenv
inc
add
add
cmp
add
aam
out
adc
add
push
add
or
rolb
lcall
daa
xor
push
add
add
repnz
add
add
int
add
jecxz
add
add
daa
hlt
add
jmp
add
add
mov
adc
ret
daa
out
sub
add
add
add
stos
daa
dec
dec
dec
lock
add
cmp
mov
add
add
addb
add
add
cltd
pushf
jge
add
push
add
pop
mov
add
lea
and
add
outsl
lds
add
mov
ret
jl
dec
mull
add
jns
sbb
aas
jg
add
lods
mov
addb
add
add
ja
adc
mov
jne
add
mov
jmp
gs
add
add
add
lea
push
add
fsubrl
dec
ljmp
stos
and
fs
cmp
fld
out
sub
add
jno
imul
cmp
dec
mov
mov
add
push
add
add
add
mov
cmc
das
shll
std
add
add
xchg
pop
add
and
adc
movsb
add
add
lea
add
imul
fmull
add
aad
add
dec
sub
data16
add
leave
push
pusha
add
and
sub
mov
pop
fwait
cwtl
sub
add
cmp
loope
add
scas
or
cld
in
sub
dec
pop
std
xchg
int3
ret
int3
mov
mov
or
cmpsl
and
add
add
stos
mov
in
rolb
lods
enter
dec
cwtl
xlat
add
mov
jae
lret
loop
into
or
dec
inc
sbb
jns
add
sub
cmp
scas
or
sbb
add
jbe
add
jl
xor
add
ja
and
add
cwtl
test
repnz
mov
sbb
rolb
pop
push
add
lahf
idivl
add
std
lret
add
or
inc
add
bt
cld
into
adc
leave
jbe
fidivrl
iret
sahf
jle
insl
mov
cmp
shrl
push
xor
cs
xchg
cmp
lahf
pop
pop
ja
std
sub
jno
add
xchg
add
ret
add
inc
add
repnz
add
sub
or
add
pushf
push
jg
add
ja
mov
cmp
mov
cmp
add
add
sahf
xor
ret
in
and
mov
pop
mov
mov
add
xchg
loopne
faddl
stos
mov
or
movb
mov
inc
add
push
add
out
fwait
test
add
and
adc
mov
js
repz
and
pop
enter
add
adc
sbb
aam
lret
mov
push
movsl
pop
mov
add
vpcmpeqw
sub
dec
dec
add
add
and
rolb
dec
sbb
add
add
mov
iret
and
mov
inc
pop
lds
xchg
jmp
jmp
add
push
pop
mov
adc
xchg
adc
xchg
xchg
mov
sub
or
lahf
into
push
or
sti
jmp
repz
add
add
adc
dec
push
mov
or
add
add
mov
add
sbb
add
sbb
add
add
xor
addb
add
loope
add
add
add
add
fidivrs
fdivs
add
add
sar
add
add
add
or
add
mov
add
add
add
test
lock
pop
aaa
jae
mov
mov
inc
or
shrl
jb
imul
push
push
add
loope
out
xchg
pop
sbb
leave
addb
add
mov
addb
push
push
add
add
add
sahf
fdivl
fwait
pop
sbb
nop
add
pop
pop
sahf
cmpsb
add
jno
add
mov
js
push
add
mov
add
imul
in
cwtl
sbb
add
add
xchg
jb
repz
rolb
sahf
xor
inc
mov
push
add
add
push
pop
mov
add
add
int
hlt
add
std
stc
add
xor
push
add
add
mov
add
mov
jae
test
call
mov
mov
add
adc
fisttpl
inc
add
lods
jo
xor
ss
add
push
add
add
rolb
inc
cld
adc
les
adc
add
push
push
adc
movsb
add
pop
mov
fcom
add
add
xor
add
or
push
add
ja
add
cmp
and
enter
sbbl
add
cmpsl
jp
add
addb
or
mov
add
mov
jo
outsl
loopne
ret
or
mull
push
insb
imul
or
add
mov
sub
mov
add
out
cmpsl
inc
add
loopne
test
add
mov
sbb
mov
push
add
mov
ljmp
mov
nop
add
cmp
mov
add
or
add
adc
inc
add
pop
pushf
mov
add
and
mov
cmp
and
sub
xchg
add
movsl
cmp
popf
lret
gs
add
in
push
xchg
movb
add
add
add
mov
aad
mov
rcr
call
roll
mov
and
mov
addr16
xor
add
add
jp
testl
add
inc
movsl
stc
jne
mov
add
add
add
add
jb
cmp
add
and
ret
out
bound
mov
addb
add
or
ds
dec
movsl
insl
mov
stos
pop
mov
adc
xor
shrl
mov
adc
add
loope
add
movsb
add
add
add
mov
and
mov
adc
loopne
push
and
mov
add
jmp
cmpsl
bound
mov
fwait
enter
add
shll
inc
add
popa
and
add
push
add
lcall
hlt
add
icebp
aam
mov
jle
add
cmpsb
add
mov
dec
addr16
adc
jecxz
daa
cmp
xchg
add
and
mov
push
inc
fidivrs
adc
in
push
and
scas
jmp
ret
int
inc
addr16
loope
pop
int
in
mov
jl
add
lods
mov
add
jecxz
incb
jne
add
fsubrs
jno
xor
adc
pusha
add
push
add
add
mov
add
ficoms
sub
and
mov
xor
addr16
add
or
mov
lods
cmp
add
push
adc
cmc
mov
add
mov
add
sbb
mov
or
pop
cmp
pop
xchg
add
add
add
add
or
add
mov
jnp,pt
cmp
fdivl
aaa
addb
add
jne
popa
xchg
add
add
push
add
mov
add
aam
adc
dec
mov
mov
enter
mov
or
mov
xchg
inc
add
add
add
cmp
or
cmpsb
add
add
add
cs
push
pop
add
push
lret
call
push
sbb
std
mov
add
adc
dec
fdivl
fisubrl
paddsw
data16
pushf
pushf
rolb
adc
out
test
add
mov
add
add
cmp
inc
jb
js
add
lret
mov
mov
frstor
xor
clc
add
mov
in
jge
push
push
add
add
cmp
mov
fistpl
add
mov
std
data16
push
inc
xchg
add
es
cs
xchg
add
ds
add
add
mov
pop
xor
jmp
add
xchg
push
add
clc
push
jecxz
rolb
pop
inc
push
add
adc
xor
pop
cmp
add
pop
mov
inc
and
mov
insl
add
test
add
add
add
mov
add
dec
mov
mov
add
add
add
lahf
add
or
addb
dec
push
add
add
inc
add
cmpsl
in
pop
cli
movb
fdivrl
aaa
lret
xchg
add
lods
repnz
mov
cmp
add
inc
movsl
iret
inc
add
mov
dec
lret
bound
mov
add
push
xchg
add
out
popl
push
add
xlat
std
jmp
and
pusha
add
rolb
adc
xor
xchg
out
lea
sarl
inc
mov
es
add
add
mov
pusha
add
add
mov
stos
push
xchg
mov
sti
add
pop
add
mov
and
mov
mov
xor
int
loope
add
ljmp
push
mov
sahf
sbb
mov
mov
pop
stos
pop
jge
or
mov
cmp
rolb
addr16
dec
jne
add
and
inc
or
ret
hlt
add
into
mov
mov
pop
fwait
movsb
add
sbb
dec
push
add
add
jle
shrd
insl
addr16
add
pop
mov
jb
add
add
or
add
add
sub
loopne
aam
ja
cltd
add
idiv
mov
popf
int
lods
enter
pop
adc
inc
add
sarl
loopne
outsl
mov
add
jle
mov
movsl
int
inc
add
mov
sbb
std
into
lcall
stc
rolb
movsl
in
ja
add
sbb
inc
add
sbb
in
jbe
or
repz
xchg
ljmp
lods
fsubs
add
gs
movsb
add
test
gs
add
add
xor
add
add
add
out
das
sub
insl
push
int
add
pop
sub
imul
add
dec
jp
add
add
dec
xor
lock
inc
xchg
jg
lret
sbb
xor
or
sti
addb
ss
aad
je
cltd
fistpll
out
adc
testb
mov
xlat
jae
add
daa
int
das
dec
scas
jp
mov
mov
sarl
pop
pop
into
add
add
leave
pop
add
mov
add
pop
sbb
add
in
gs
test
ljmp
cmp
lret
xchg
add
lock
pop
in
inc
sub
mov
add
pop
aaa
fwait
xchg
movsl
dec
cmp
xchg
add
inc
add
testb
dec
cwtl
jmp
xlat
pop
out
add
add
arpl
add
pop
nop
add
dec
cmp
inc
and
in
iret
or
add
add
add
sub
lret
dec
fildll
mov
and
add
add
int3
push
lcall
testb
add
cmp
lret
push
mov
fisttps
dec
xor
pop
lock
adc
imul
add
add
cmp
sbb
mov
daa
clc
int3
push
dec
addl
cmp
leave
or
and
add
mov
add
pop
inc
add
add
xor
xchg
jne
add
add
lods
pop
push
ljmp
addb
stos
jle
jl
add
mov
add
add
mov
add
inc
mov
stos
hlt
add
rolb
and
and
mov
add
push
cld
ds
pop
stc
imul
and
mov
add
jno
dec
loope
cld
jl
test
addb
test
add
les
lret
dec
add
cmc
movsl
xchg
insb
xchg
cmp
adc
mov
adc
lret
mov
test
pop
cmp
cli
imul
lea
push
lcall
testb
add
add
ret
lret
push
add
sahf
cltd
sarl
xor
add
pop
or
push
into
dec
inc
push
add
jae,pn
lret
cmpsl
push
add
add
xchg
add
xchg
add
dec
jbe
movb
cs
je
xor
adc
movsb
add
add
add
add
inc
add
mov
xchg
movsb
add
ss
imul
mov
and
add
movb
and
out
jp
mov
add
add
xor
lds
or
adc
add
add
add
add
mov
mov
push
add
stos
jbe
add
adc
fwait
cwtl
xchg
add
stos
push
add
add
add
add
popa
fstpt
loopne
add
xor
dec
addl
cmc
xchg
scas
pop
dec
int3
lea
adc
ret
jg
add
jns
mov
cmp
dec
in
std
cmp
xlat
and
adc
add
lahf
push
add
cld
les
mov
add
add
int3
push
add
ljmp
fwait
ljmp
xchg
rolb
mov
push
out
mov
jge
jmp
push
in
and
mov
std
jge
or
sbb
fdiv
add
jb
mov
xlat
push
mov
dec
stos
sbb
testb
pop
aas
jecxz
add
inc
cmpsl
jne
dec
nop
add
add
addb
imul
ret
add
xchg
cmpl
pushf
test
add
test
mov
lods
cld
or
movsl
dec
loop
fldcw
sub
mov
push
add
xor
dec
daa
addr16
add
push
pushf
clc
jns
loop
sbb
add
call
jecxz
add
add
lea
adc
xchg
add
scas
out
xchg
aas
mov
sar
xor
add
cwtl
xchg
mov
sbb
test
xlat
pop
xor
mov
jp
add
sub
or
ljmp
add
add
lret
sbb
fidivl
xchg
add
dec
mov
or
add
cmpsb
add
fistpl
fdivrl
add
cmp
adc
jge
adc
mov
into
daa
and
mov
pop
push
add
cmp
add
jmp
xchg
add
test
add
das
xchg
jne
dec
fnstcw
jmp
xor
inc
sub
add
add
jns
clc
ja
jo
sti
enter
add
mov
jmp
inc
add
mov
enter
data16
cmp
xchg
add
bound
mov
loope
daa
pop
stos
pusha
add
inc
add
arpl
cltd
sti
and
xor
add
mov
add
out
fisubl
cwtl
mov
mov
add
enter
mov
add
sbb
add
or
into
jno
mov
xor
icebp
fnstenv
pop
lods
aas
jmp
rolb
add
add
pop
adc
push
gs
add
outsl
mov
fcmove
into
ljmp
xor
pop
inc
add
mov
int
addl
dec
xor
movsl
add
fidivl
mov
sub
add
push
std
xchg
jb
xor
jmp
pop
pushf
unpcklps
lds
cmc
outsl
xor
jb
int3
test
add
pusha
add
rcrl
lock
ror
push
add
mov
in
cld
in
repnz
add
adc
add
add
jmp
fstl
fucomip
add
add
pop
jmp
add
cmp
add
push
and
add
add
movsl
pop
scas
cld
fdivr
fmull
add
adc
mov
add
out
fwait
jmp
cld
cmpsb
add
and
mov
int3
adc
mov
cmp
jle
add
push
adc
push
jg
in
fsubr
sub
add
das
in
sub
mov
add
repnz
mov
in
add
add
add
ret
cltd
mov
add
fisubrl
out
mov
aaa
jno
add
fiaddl
mov
inc
lods
mov
add
pop
addb
xlat
aam
cmpsl
xchg
push
leave
cmp
jmp
jo
lret
jp
addr16
pop
mov
jg
in
adc
int
pop
xlat
lods
jge
movsl
inc
add
das
sbb
add
add
mov
in
xor
inc
in
add
lret
add
shl
addr16
cld
std
and
mov
gs
add
enter
add
mov
mov
add
lds
stos
cmp
pop
outsb
cli
pushl
mov
lret
add
jp
pop
mov
gs
outsb
cmp
in
je
push
shrl
cmp
lcall
addr16
pusha
add
add
dec
and
mov
dec
push
sti
cmp
jle
adc
and
xchg
test
xlat
jno,pt
jo
mov
mov
xchg
add
testb
add
sub
mov
jbe
enter
add
loopne
mov
iret
aaa
mov
cmc
push
add
pusha
add
adc
add
adc
or
decb
test
add
xchg
add
frstor
add
mov
cwtl
add
lods
pop
xor
cs
cmc
scas
std
xorl
sti
jp
xor
add
xchg
add
xor
mov
add
mov
add
add
mov
sbb
add
mov
adc
add
add
xor
pop
push
add
ret
mov
jmp
add
enter
insl
push
add
lods
inc
pop
cmp
mov
mov
fisttpll
scas
push
mov
xchg
mov
add
add
lret
fcompl
popa
clc
dec
mov
mov
enter
add
push
add
scas
cmp
add
rcl
inc
add
add
jle
mov
dec
scas
stc
test
into
loope
mov
dec
lret
rolb
push
add
sbb
scas
enter
rolb
pop
adc
pop
lock
add
daa
inc
add
or
pop
fdivs
push
push
addb
add
and
add
add
add
insl
inc
add
pop
testb
mov
call
ljmp
push
add
jo
push
ret
add
add
mov
push
add
add
add
add
rolb
push
or
movb
add
fnstsw
iret
add
ja
lea
or
add
add
dec
je
xor
mov
mov
mov
pop
das
mov
lods
jmp
xchg
lcall
mov
mov
and
dec
rolb
lret
and
test
add
cmp
add
add
add
insl
sub
in
in
incl
lret
xchg
add
add
or
sti
fimull
repnz
fnstcw
rolb
cld
pusha
add
repz
js
add
ja
insb
aad
fistl
sub
cmp
mov
add
call
jne
add
ljmp
fcoms
cmp
inc
add
sti
fcoms
mov
add
mov
jno
bound
mov
add
scas
jge
push
add
add
pushl
xchg
jecxz
or
add
mov
add
cmc
in
mov
js
add
sub
mov
add
add
add
fcomps
add
add
add
add
aaa
in
fwait
add
testb
mov
add
stc
jnp
cmp
add
cmpsl
rcrl
es
test
add
in
dec
imul
dec
xor
add
add
loope
mov
sub
add
pop
lahf
inc
xchg
pop
and
mov
and
push
loope
mov
jb
pop
xor
inc
add
mov
dec
in
xlat
aas
shrl
gs
adc
jne
outsl
test
xor
add
pusha
add
mov
xchg
add
ss
orl
mov
addb
add
add
xor
rolb
stos
pop
pop
adc
xor
cld
push
hlt
add
add
daa
mov
add
add
cs
xor
dec
or
add
add
dec
sbb
int3
imul
mov
mov
jne
adc
das
sarl
xlat
loop
sbb
cmp
lods
pop
jae
add
inc
ljmp
sub
cltd
fwait
bound
mov
and
push
add
mov
add
outsl
int3
aad
bound
mov
add
jmp
add
mov
or
repnz
mov
add
add
mov
jg
imul
pushf
pop
bound
mov
lret
popa
pushf
or
pop
push
add
mov
mov
pop
pop
and
mov
add
mov
mov
add
add
add
inc
jp
imul
mov
xchg
add
test
femms
adc
test
add
adc
dec
les
sub
bound
mov
dec
int
jno
add
pop
add
adc
pop
jb
xchg
dec
sbb
add
add
flds
mov
add
inc
add
sbbl
sbb
pop
pop
adc
add
addb
add
or
cmp
jnp
bound
mov
inc
add
push
and
add
mov
add
leave
out
in
cmp
push
das
filds
lea
mov
out
fdivrs
and
mov
movsb
add
bswap
int
aam
xor
add
fcomps
popa
imul
enter
ficoms
jmp
es
cmp
sbb
add
add
add
inc
add
call
xchg
adc
inc
add
inc
test
pop
push
add
cmp
and
stc
cmp
scas
scas
xor
arpl
sbb
jae
xor
sbb
mov
xor
les
lea
movsl
sti
add
or
push
sbb
push
test
nop
add
cwtl
sbb
add
mov
pop
dec
imul
add
mov
add
inc
add
push
js
add
clc
or
fbld
add
jecxz
xor
xchg
push
dec
ljmp
add
inc
sub
dec
adc
jns
rolb
xchg
add
sub
add
and
add
pop
maskmovq
notl
mov
cwtl
sbb
add
add
mov
add
adc
pop
aaa
fs
mov
lret
lods
mov
aam
and
mov
test
insb
stos
push
pusha
add
jnp
add
add
push
sbb
add
push
add
add
mov
add
jo,pn
test
pop
pop
cmp
hlt
add
add
add
mov
mov
mov
xchg
addb
dec
xchg
add
inc
add
mov
sub
cmp
mov
push
mov
loope
add
add
bound
mov
add
cltd
lods
mov
or
push
mov
and
mov
inc
mov
out
push
add
xchg
dec
sbb
adc
mov
adc
sbb
add
and
sbb
out
in
dec
pop
je
push
add
add
mov
add
sahf
dec
or
mov
inc
xchg
add
add
dec
cmp
repnz
add
add
xor
add
add
test
fimuls
mov
bound
mov
add
push
add
push
add
add
adc
cmpsb
add
jecxz
jnp
xor
mov
add
out
cmpsl
mov
mov
sbb
xchg
ja
add
mov
push
add
push
mov
pop
add
outsb
out
mov
jp
dec
push
add
sub
jp
je
pusha
add
iret
push
add
mov
pop
testb
rolb
jb
test
lret
mov
or
adc
sbb
mov
xchg
add
lahf
mov
test
jg
xor
sub
add
aad
push
add
add
sub
pop
push
add
add
dec
mov
testb
cmpsl
rolb
lahf
popa
xor
mov
enter
sbb
add
xlat
xchg
add
add
leave
aam
or
js
jne
push
add
inc
add
pop
popf
mov
addl
sub
add
testb
dec
cmp
add
inc
push
fiaddl
add
adc
rol
add
mov
push
jp
xor
mov
push
insb
aaa
mov
or
test
jmp
lock
addb
add
js
pop
mov
fmull
add
mov
cmp
push
add
and
mov
add
or
jbe
dec
add
mov
out
sbb
add
mov
add
push
cld
xchg
add
add
add
add
xor
pop
lock
frstor
sahf
lahf
mov
mov
add
ret
lock
iret
mov
push
add
xor
xor
cli
aam
sbb
or
mov
data16
mov
orl
jb
push
sbb
in
aaa
dec
cmp
pop
mov
sahf
pop
add
pushf
arpl
add
xlat
in
mov
add
sub
mov
xor
cmpsl
stc
cli
mov
pop
adc
pop
out
jnp
push
mov
mov
add
or
fimull
jb
icebp
stos
lea
hlt
add
repz
movsl
xchg
mov
or
and
in
add
clc
outsb
push
or
add
add
xchg
dec
insl
addr16
pop
sub
add
mov
addb
jbe
mov
ja
push
pop
and
xchg
add
add
add
nopl
add
or
dec
mov
add
add
push
add
xor
outsb
in
pusha
add
mov
test
add
add
cmpl
add
fdivrs
fcmovne
mov
les
mov
sbb
mov
subl
jnp
push
pop
dec
lock
xchg
add
movsb
add
add
gs
mov
testl
fisttpl
rolb
add
sbb
push
mov
out
mov
add
pop
sti
and
mov
mov
add
nop
add
cmp
mov
jle
stos
das
dec
mov
rolb
push
add
xchg
sahf
das
mov
mov
loop
cmp
into
lds
jle
lret
bound
mov
add
addb
sub
iret
nop
add
aas
movsb
add
add
mov
sub
mov
push
xor
movsl
js
fstpl
jmp
scas
clc
in
mov
stos
and
std
cwtl
and
add
stc
aaa
roll
add
mov
add
add
pop
cmp
xchg
add
add
out
loopne
cmovns
imul
pop
pop
jmp
and
mov
add
daa
adc
out
pop
pop
xchg
cwtl
std
add
mov
push
out
lea
data16
add
add
mov
fisubrl
daa
ljmp
mov
rolb
xor
mov
enter
mov
add
clc
ds
mov
insl
lds
dec
sbb
cmp
ret
xchg
hlt
add
insl
push
dec
add
add
mov
fbstp
pop
mov
fidivs
add
mov
pusha
add
dec
or
add
insl
add
add
add
repnz
hlt
add
cmpsb
add
stos
daa
mov
pop
xorl
out
inc
add
mov
pop
pop
int3
push
add
jg
add
add
add
sbb
dec
or
shrl
lds
add
pop
icebp
clc
sbb
into
clc
addb
lahf
cld
movsb
add
dec
and
add
je
dec
rolb
xchg
add
bound
mov
mov
out
push
push
mov
sets
or
movb
push
dec
inc
add
cmpsb
add
pop
ret
cmpsl
cmp
sbb
roll
jo
addb
add
mov
push
add
cld
fidivl
icebp
push
push
add
and
push
cld
jp
add
cmp
insl
push
notl
mov
xor
shr
lret
lods
and
scas
stos
mov
jp
add
add
fdivs
add
test
mov
mov
insl
imull
add
adcl
sbb
push
add
lds
dec
cmp
inc
in
pop
jl
sub
add
je
adc
lea
loope
mov
test
push
insb
and
out
movsb
add
pop
int3
repz
test
test
add
imul
add
add
push
jo
je
xor
mov
xchg
add
fisubl
pop
sub
hlt
add
mov
push
fcomps
les
mov
add
push
add
jne
rolb
pop
aad
outsl
ja
push
add
jns
jnp
outsl
adc
add
mov
jl
sub
dec
mov
aad
add
dec
xor
mov
repnz
bound
mov
add
leave
ja
push
ljmp
add
add
lret
push
xchg
add
imul
adc
ljmp
add
lcall
psubd
mov
add
mov
cmpsl
addb
add
lahf
in
add
roll
add
mov
sub
aad
and
mov
dec
dec
lea
add
mov
xor
jb
add
mov
add
jb
xchg
add
rolb
add
mov
mov
incl
insl
das
jne
aas
and
leave
cmp
aas
xorl
cld
jno
lods
push
add
mov
jne,pn
add
add
xchg
jns
jle
fnop
add
pushf
or
in
and
add
push
add
add
add
lcall
sub
orl
psubq
loope
out
call
sbb
add
lock
add
repz
mov
cmp
mov
mov
pop
cmp
pop
pushf
out
lret
lds
icebp
repz
movups
aas
imul
addb
in
and
lock
jge
add
loop
push
add
xorl
mov
fldenv
sti
repnz
push
add
add
sbb
sarl
pop
lcall
jl
add
pop
cmpsb
add
loopne
sahf
add
into
xchg
jbe
xor
add
out
adc
and
mov
lret
add
add
cmp
add
add
push
add
mov
add
sahf
adc
popl
push
push
and
mov
push
mov
rolb
mov
repz
mov
add
lods
aaa
and
xchg
movb
add
mov
add
jmp
inc
mov
rolb
jecxz
add
mov
add
add
mov
data16
mov
jb
sub
mov
pop
jge
fisubs
insb
leave
pop
aad
mov
dec
mov
mov
add
mov
mov
out
add
sbb
test
fcoml
in
add
add
fsubl
mov
add
rolb
cmpsb
add
bound
mov
out
mov
popf
repz
add
je
sti
je
mov
add
mov
add
leave
mov
sub
adc
or
add
cmp
dec
push
add
iret
adc
cmpsl
push
add
pop
int
mov
push
add
sarl
add
add
les
cmpsb
add
cmp
sbb
das
das
cli
aam
jmp
fcomps
testb
lods
fnstsw
testb
push
cmp
add
mov
sbb
add
flds
lret
inc
add
add
and
outsb
mov
popf
mov
fsubrp
in
out
xchg
add
addb
add
mov
add
fs
cmpsb
add
add
cmpsb
add
sub
ret
add
cltd
das
or
xchg
sub
add
add
add
add
lret
sub
inc
flds
out
xor
pop
mov
lods
or
push
pop
jle
mov
jae
sahf
into
test
push
jmp
sbb
mov
mov
mov
sbb
mov
xor
std
xchg
xlat
dec
iret
and
mov
cmp
jl
dec
xor
cmp
mov
push
out
sub
add
push
int3
aam
data16
add
lods
push
add
jl
add
cmp
jle
add
inc
add
pop
loope
xchg
dec
aad
aaa
fwait
mov
xor
jl
stos
push
add
sbb
aad
add
and
popa
popf
cmpl
add
add
add
jmp
lock
scas
fldt
push
jp
popf
jmp
ljmp
movsb
add
add
inc
add
popf
mov
jns
hlt
add
out
add
and
mov
mov
add
add
scas
add
sub
or
pop
add
stos
loopne
stos
aaa
fwait
xchg
movsb
add
stos
pop
clc
xchg
mov
filds
cmp
andl
jp
add
sti
inc
mov
sbb
add
dec
add
jnp
pop
mov
lcall
jge
dec
lods
ret
dec
popa
flds
mov
push
dec
aam
scas
rcrl
testb
mov
add
or
fnstenv
add
sbb
jbe
mov
xor
int
add
cmp
clc
pusha
add
xchg
add
pop
inc
mov
and
mov
mov
test
fnstsw
into
repz
scas
cmp
push
xchg
add
mov
add
movsb
add
sbb
add
xor
push
add
sub
or
lea
jmp
clc
aad
add
iret
mov
jo
inc
pop
cmpsb
add
into
add
fldl
loope
add
xor
js
dec
aaa
xchg
fnstsw
add
add
add
pop
leave
mov
xchg
add
call
out
dec
pop
sbb
add
inc
add
lods
pop
pop
mov
jbe
inc
cmp
test
add
rolb
rolb
add
inc
add
adc
mov
or
loop
cmpsb
add
add
inc
add
mov
movsb
add
mov
scas
jnp
loopne
insl
mov
arpl
dec
int
add
add
sub
insl
out
push
add
add
pop
cmp
mov
sub
xchg
push
add
mov
fwait
cs
mov
cmp
mov
and
mov
mov
add
imul
add
add
test
sub
add
add
dec
popa
pop
fildl
adc
data16
in
testb
out
repz
rolb
add
inc
out
or
addr16
push
xchg
mov
add
std
xchg
daa
mov
ds
aam
in
lret
add
add
dec
cmp
cmp
add
rorl
sbb
add
push
add
test
jae
les
dec
mov
add
icebp
xchg
add
jnp
inc
add
add
divps
add
lahf
push
sahf
dec
cmp
lea
shll
add
rolb
or
enter
out
or
mov
add
pop
js
pop
cmp
mov
mov
jmp
dec
shl
add
aaa
cmp
dec
sbb
mov
stos
fdivs
mov
stos
pop
or
add
sub
add
add
add
inc
dec
jge
aaa
lret
cmpsl
ss
xor
fwait
das
ret
or
fisubl
mov
repz
seta
add
add
push
out
push
test
pop
mov
insb
mov
les
push
mov
add
mov
adc
movsl
jo
loopne
mov
add
add
add
adc
mov
jl
inc
cmp
pushf
lret
xchg
add
add
jo
add
mov
mov
xchg
add
shll
repnz
add
loop
xchg
out
sub
pop
mov
pop
mov
add
aas
add
xchg
add
xor
push
mov
cmp
and
mov
in
add
mov
mov
pop
dec
fdivr
sub
dec
xor
mull
jecxz
add
and
mov
add
call
add
add
add
add
addr16
xchg
mov
inc
add
pop
jne
imul
pop
daa
dec
test
dec
ret
add
scas
lcall
mov
jo
fldenv
cli
out
add
mov
adc
sbb
in
test
cwtl
pop
or
add
add
and
pop
dec
out
jae
fs
add
stos
xchg
jge
pop
clc
loope
imul
mov
add
hlt
add
fstpl
lock
andl
cmp
add
mov
adc
pop
jecxz
mov
dec
out
movb
adc
fcmovbe
add
out
bound
mov
add
mov
add
mov
ficompl
jbe
aad
add
push
or
lds
adc
data16
inc
fwait
sub
call
add
pop
clc
push
mov
jg
pop
mov
cmp
jmp
mov
add
cli
push
add
inc
mov
pop
mov
and
mov
sbb
mov
cmp
add
add
sub
xchg
xchg
sbb
push
add
ljmp
mov
push
add
insl
not
add
lods
add
je
mov
add
add
add
lidtl
add
add
subl
add
data16
xchg
ret
jp
push
mov
and
aam
mov
leave
shll
fisubs
in
cmpsl
xor
add
cmp
call
mov
add
shll
mov
add
mov
add
mov
add
add
fildll
add
out
add
mov
add
or
pop
cmpsl
push
les
mov
adc
out
adc
shr
in
pusha
add
das
push
movb
mov
add
add
mov
and
cli
rolb
push
xor
push
add
call
mov
ds
add
inc
lea
add
sub
cmpsb
add
popf
mov
pop
test
sbb
add
insb
divl
shl
cmp
xchg
sbb
xchg
or
push
add
fdivr
in
jbe
sbb
add
inc
outsb
cmp
xchg
add
xor
adc
pop
sbb
je
jmp
or
add
out
mov
add
or
iret
outsl
push
add
add
jb
and
add
xchg
aam
xchg
push
jnp
pop
add
add
or
cmp
add
mov
jecxz
dec
in
dec
xor
testb
add
cmp
add
mov
into
clc
mov
add
add
outsb
lea
pop
jp
pop
sub
add
or
add
stos
dec
inc
sarl
add
xchg
dec
mov
pusha
add
mov
addb
add
mov
push
adc
xchg
addr16
je
cli
leave
push
add
jge
push
add
jne
jecxz
mov
add
add
std
xor
iret
insl
sbbl
movl
jle
xchg
add
push
push
dec
out
sub
lcall
shll
mov
add
xchg
add
and
add
rolb
je
adc
pop
mov
or
call
add
jb
in
rolb
mov
repnz
push
int
add
sub
faddl
aas
or
sub
std
xchg
and
push
in
add
add
sub
xor
dec
inc
add
inc
add
pusha
add
mov
aam
jg
inc
rol
lahf
movsb
add
mov
sbb
add
pop
adc
add
test
push
daa
pop
ja
mov
mov
add
add
lea
mov
aam
xlat
sti
push
add
adc
in
add
std
sub
data16
xlat
add
and
push
aad
xchg
mov
xchg
adc
in
push
mov
mov
mov
pop
inc
add
cmc
popa
fdivrl
add
mov
or
popf
lds
and
mov
add
add
movsl
insl
pushf
pop
inc
add
mul
add
mov
push
add
dec
in
int
int3
sbb
imul
add
push
cmp
scas
clc
leave
cmp
pusha
add
cmp
sbb
add
imul
mov
cmp
add
adc
sub
add
add
inc
push
add
test
testl
hlt
add
cmpsb
add
insl
dec
inc
add
add
mov
add
mov
lahf
or
mov
and
sbb
mov
add
mov
push
cmp
add
sbb
cli
das
sub
test
inc
add
test
push
outsl
roll
add
inc
add
add
sbb
stos
lahf
in
jb
add
cmp
add
add
loopne
aad
add
sti
mov
add
lret
add
pop
or
add
add
mov
add
add
mov
add
add
add
xor
mov
lahf
das
cmp
fildll
add
jmp
xor
repnz
adc
mov
add
sub
pop
add
movsl
push
add
mov
stos
rolb
cmp
aaa
les
pusha
add
add
add
hlt
add
lcall
or
jp
addb
add
add
xor
in
hlt
add
pop
orl
and
add
fwait
lcall
jne
mov
pop
inc
add
lcall
mov
add
add
lods
mov
out
dec
movsl
stos
ja
add
add
xchg
add
lcall
inc
add
cmpsb
add
sub
popa
xor
icebp
rolb
sahf
stos
les
add
inc
push
add
add
push
jg
push
daa
xchg
add
push
add
shl
mov
mov
add
leave
leave
pop
orl
sub
add
es
add
sbb
sub
mov
fildll
addb
add
fwait
push
add
sysexit
mov
pop
cmp
into
clc
jp
jg
cmp
ret
jge
ja
jecxz
mov
repz
mov
mov
sub
test
mov
mov
add
add
xchg
add
mov
es
push
add
jle
add
ret
cmp
mov
push
mov
rolb
pop
fsubl
add
xchg
lahf
lcall
ret
ret
add
addr16
add
ds
mov
push
sbb
jecxz
jns
and
std
dec
mov
incl
add
mov
add
mov
xchg
mov
fucomip
push
add
movsb
add
leave
add
addr16
xor
mov
add
add
je
in
movb
add
ret
sub
or
xor
insb
xor
mov
mov
pop
mov
add
add
push
add
add
xlat
popa
xchg
add
jle
test
js
sahf
mov
add
loope
and
mov
sahf
aam
xor
or
pop
sbb
mov
adc
mov
jne
add
jns
sub
js
rolb
insl
mov
fistpll
lret
jg
call
fldt
lret
mov
add
mov
add
fcomps
nop
add
insb
not
add
add
xchg
in
cmp
call
or
mov
jo
sbb
rolb
add
xor
daa
lret
add
jmp
test
or
inc
add
inc
add
dec
push
add
cmp
loopne
daa
xchg
add
aad
scas
int3
cmp
jecxz
xchg
cmpsb
add
push
add
add
pop
inc
add
add
or
add
xchg
mov
sbb
stos
dec
or
mov
data16
or
xor
ret
add
daa
rolb
sbb
repz
test
push
in
pop
dec
iret
pop
adc
das
sub
dec
push
int3
sub
pushf
jo
mov
sub
add
cs
add
clc
pushf
add
xor
pop
subl
lret
sbb
imul
add
mov
jecxz
clc
add
mov
add
rolb
pop
sbbl
out
add
aad
cltd
scas
test
add
add
scas
shll
add
bound
mov
add
addb
mov
push
xchg
adc
push
and
add
add
sbb
jo
pop
dec
inc
add
mov
mov
add
adc
mov
add
scas
pushf
inc
add
add
dec
hlt
add
rcrl
enter
add
add
ja
add
add
pop
loope
jge
sbb
add
add
xchg
add
lret
rolb
inc
add
cmpl
arpl
popa
sub
test
shll
add
stc
aaa
aad
in
mov
inc
inc
add
add
jnp
adc
mov
mov
mov
mov
xchg
and
daa
fisttpll
pop
call
out
xchg
sub
insb
mov
jmp
add
or
add
xor
push
testb
div
mov
mov
lahf
clc
mov
add
sbb
add
or
add
into
jmp
add
mov
add
popa
insl
inc
push
add
mov
dec
pop
mov
xchg
outsb
jnp
insb
and
mov
out
ret
clc
movsb
add
xchg
add
call
inc
add
mov
dec
cmc
flds
mov
in
sahf
movsl
jne
in
push
aad
add
loopw
testb
dec
enter
add
lods
jb
mov
add
inc
mov
mov
add
mov
movb
xchg
adc
jno
ds
add
movsl
jge
or
scas
push
lea
popa
call
and
mov
insl
xorl
add
out
jns
add
mov
add
push
outsl
stc
xor
rolb
sbb
pop
lret
pushf
mov
add
ret
insl
mov
xchg
add
fdivrl
int
add
scas
mov
push
add
add
and
mov
iret
cmpsl
test
fxch
cwtl
sbb
adc
add
stos
pop
aaa
xor
fwait
mov
mov
daa
cmp
mov
andl
mov
add
xor
ds
adc
jp
jns
add
mov
inc
clc
iret
cld
imul
or
jb
stos
pop
and
mov
mov
out
mov
inc
add
sub
fnsave
rolb
push
std
mov
pop
in
mov
outsb
movsb
add
jl
push
add
and
mov
pop
push
repz
or
scas
cmp
inc
add
add
test
testb
scas
gs
add
lret
aas
in
add
add
mov
add
add
jbe
xor
and
sbb
rep
int
aas
decl
dec
mov
mov
mov
and
int3
rolb
imul
add
cmc
aad
jg
add
std
dec
lret
inc
add
stc
push
fldt
xchg
aas
sbb
add
mov
lcall
neg
rolb
pop
pop
test
sbb
cltd
jb
pop
xor
in
jae
xlat
jno
add
ds
mov
test
dec
ret
ds
lcall
and
out
inc
lods
cmp
add
push
add
xor
inc
adc
xchg
std
rolb
or
add
dec
jg
mov
faddl
loope
movl
lcall
inc
add
add
add
add
repz
add
inc
add
inc
add
aas
adc
add
adc
add
dec
iret
call
add
mov
inc
jnp
inc
jns
lods
dec
jecxz
pop
and
rolb
push
add
dec
mov
lret
add
push
add
inc
push
add
jb
addb
add
add
xor
xchg
add
cmpsl
in
sbb
add
cmovno
jb
clc
int
mov
cmp
and
mov
xchg
rcr
add
add
ja
jne
mov
add
lret
pop
mov
cmp
arpl
stc
cli
je
sarl
test
sti
sub
fbstp
das
jmp
data16
adc
and
xchg
add
jmp
sarl
mov
add
es
rolb
std
fldenv
add
xchg
add
add
mov
repz
decl
in
or
add
add
cmp
mov
mov
push
add
add
add
mov
push
sub
je
xlat
bound
mov
push
add
push
sub
sarl
push
add
add
pop
stos
lcall
repnz
add
test
add
pusha
add
cmp
rolb
rolb
cs
jle
lea
add
add
ljmp
and
or
add
pop
and
mov
insl
out
add
mov
add
sbb
das
ss
pop
jne
push
xchg
add
data16
add
add
sbb
jmp
push
add
inc
push
push
add
add
adc
jg
inc
add
cmpsb
add
pop
push
add
jmp
mov
sbb
fildl
add
adc
mov
dec
jl
mov
test
cmc
xor
movb
pop
add
inc
dec
cmpsb
add
add
lcall
jne
add
out
out
add
mov
cld
xor
add
push
mov
add
pop
xor
xchg
loopne
cmpsb
add
dec
mov
imul
add
imul
add
mov
pop
adc
mov
pop
fisttps
sub
push
mov
push
add
add
add
add
sub
xchg
iret
xor
hlt
add
cmp
rolb
sbb
add
int
pop
lods
ficomps
push
mov
out
iret
dec
add
mov
call
and
add
add
imul
cs
or
loopne
inc
add
jge
ds
stc
int
add
ds
outsb
jp
add
test
decb
clc
repz
cmp
add
loop
pop
inc
add
and
pop
mov
add
lret
inc
mov
add
dec
mov
sbb
mov
add
mov
sbb
adc
dec
pop
popa
adc
cmp
dec
out
sub
xchg
add
ds
add
mov
add
fsubr
adc
mov
add
repz
mov
add
add
dec
push
cwtl
call
pop
repnz
add
std
and
mov
cmp
mov
mov
aam
roll
mov
adc
cltd
stos
aas
or
std
sti
loopne
jne
popf
je
subl
add
add
mov
cmpsl
rolb
ds
add
add
inc
add
daa
je
scas
ds
test
add
loop
xchg
fwait
outsl
dec
add
lods
mov
orl
dec
pushf
outsl
jle
adcl
inc
fnsave
mov
into
rolb
fucomp
adc
mov
lret
jl
add
test
outsl
js
sbb
mov
xchg
add
or
jmp
mov
clc
adc
iret
push
js
add
lods
dec
or
add
mov
gs
cld
aad
in
mov
add
sti
test
and
cwtl
sbb
mov
mov
sbb
cs
cmp
add
loop
repnz
lret
adc
in
xor
out
mov
add
cmpsl
shrl
or
lcall
xlat
push
add
add
add
cmp
cmpsl
int3
mov
add
cmp
sbb
mov
shl
fldln2
data16
mov
into
xor
je
xchg
add
add
mov
dec
xchg
add
add
sub
lret
sub
fadd
add
mov
add
loope
inc
enter
sbb
add
outsl
push
add
mov
sahf
or
xchg
add
add
jo
cmp
add
data16
mov
add
jge
divl
add
add
dec
int
adc
lock
xchg
mov
iret
loop
loopne
and
neg
cli
cwtl
jmp
add
add
add
xor
add
add
sub
mov
fldt
xor
fwait
dec
lock
xlat
ret
xchg
mov
add
outsl
push
fldl
push
jb
push
add
mov
add
push
fdiv
in
in
rolb
fisubs
add
cmc
sub
clc
loope
add
or
addr16
add
jmp
ljmp
stc
jne
jns
lea
add
dec
pushf
cmpsl
nop
add
add
out
outsb
xor
and
add
dec
mov
add
add
clc
pop
int
sbbl
xlat
jmp
popf
leave
mov
sub
cmp
jmp
mov
stos
dec
stos
cwtl
xor
pop
mov
loop
das
arpl
clc
test
roll
sti
repnz
inc
add
mov
rcll
add
inc
add
add
add
ja
xor
xchg
testb
addr16
add
jp
lahf
mov
jl
add
mov
mov
mov
test
add
stos
inc
add
add
sub
outsb
je
int3
sub
add
jb
cltd
dec
sub
mov
bound
mov
cli
lea
adc
push
add
cltd
test
add
lods
addr16
rolb
icebp
pushf
mov
add
pop
std
cmc
in
test
mov
push
inc
add
add
mov
add
jg
sahf
dec
pop
cmpsb
add
jle
movb
dec
cmp
pop
and
mov
mov
mov
add
aaa
dec
add
mov
fwait
adcl
xor
cld
test
xor
add
add
in
and
sub
mov
add
les
cmpsl
adc
out
and
scas
mov
in
hlt
add
and
add
add
movsl
jbe
push
add
data16
push
insl
ror
outsb
addr16
adc
push
add
mov
test
fisttpll
testb
ljmp
xlat
imul
xor
js
mov
xor
cmp
jg
or
add
or
add
add
std
xorl
xor
lock
adc
jle
add
or
xor
rolb
popa
fiadds
mov
add
out
add
mov
cltd
add
popf
cli
push
add
cltd
leave
xor
imul
add
mov
pop
movsb
add
out
add
inc
add
fildll
jno
add
add
add
outsl
or
add
or
aam
inc
inc
add
jge
iret
inc
jns
cld
dec
jp
xor
nop
add
and
iret
call
shll
loopne
in
add
rolb
stc
cmp
add
add
je
stos
pop
into
push
add
bound
mov
mov
add
fwait
jg
pop
add
mov
pushf
mov
addl
das
lods
sub
inc
mov
int
mov
sub
sub
add
movsb
add
push
stos
cs
add
mov
jmp
adc
cwtl
dec
and
mov
adc
push
test
mov
pop
xor
insl
inc
outsl
adc
pop
dec
aad
shl
mov
xlat
test
add
mov
dec
dec
push
add
add
add
adc
arpl
ja
pushf
aaa
aas
xchg
xchg
add
jb
shll
outsl
sbb
rolb
fdivrl
test
lret
outsl
in
or
add
add
mov
sub
add
xchg
or
fists
add
mov
inc
add
add
jle
scas
testl
adc
xor
push
ficoms
add
jae
add
pop
mov
lods
xor
push
mov
dec
jg
add
add
aas
dec
stos
xor
xchg
push
push
add
imul
repnz
sbbl
popf
sbb
je
test
int3
adc
pusha
add
scas
xchg
add
int
rolb
push
add
add
mov
mov
repz
push
fnstenv
pop
dec
iret
fs
add
mov
add
mov
push
add
lods
mov
dec
cld
push
rolb
stos
icebp
addb
add
daa
clc
dec
gs
xchg
add
mov
sbb
inc
add
dec
jg
add
pop
jno
les
mov
inc
fcoml
dec
rolb
int3
dec
scas
loope
sbb
lret
and
mov
sbb
xor
aad
add
jecxz
adc
add
mov
push
sbb
lahf
xchg
int
add
cmpsl
push
add
movsl
jp
mov
add
or
stos
enter
cli
cmpl
add
jo
adc
inc
jge
pop
aas
stos
testb
jbe
mov
fcoms
and
lcall
add
xchg
add
add
sbb
mov
sahf
dec
cltd
mov
add
add
jge
add
add
add
add
add
mov
sbb
fistpl
fistl
je
mov
add
add
add
xchg
add
repnz
xchg
and
mov
jb
movsb
add
nop
add
add
adc
mov
stos
in
or
andl
aaa
repz
add
cmp
dec
mov
mov
add
or
add
push
cmp
test
add
add
add
and
rcll
and
insl
cmp
and
push
add
lock
add
fsubp
add
add
add
add
add
add
sbb
call
add
cmp
scas
test
cli
daa
loop
dec
cmp
or
dec
cmp
add
push
add
adc
mov
inc
add
add
add
dec
out
addr16
add
insb
mov
cs
adc
add
mov
add
rolb
ds
ficomps
stos
sbb
rolb
adc
leave
add
add
add
decl
stos
ret
or
add
add
add
jp
add
add
add
add
jl
add
push
add
mov
mov
flds
add
cli
push
adc
jp
lock
add
into
lret
enter
inc
out
pop
jbe
daa
pop
sti
inc
ds
stc
jb
mov
mov
cltd
add
sbb
mov
add
lret
addb
lahf
rolb
mov
add
std
gs
add
pop
dec
jae
test
add
xchg
aam
pop
push
add
pop
shl
in
ret
push
lea
clc
lea
or
and
lcall
int
cmp
add
inc
fwait
xchg
add
sub
dec
dec
push
mov
scas
push
insb
fdivs
add
add
push
je
push
jg
pop
push
add
add
jge
add
and
mov
cld
jle
inc
add
outsl
cltd
fildll
fdivs
add
add
cmp
lods
xchg
jbe
xorl
mov
lcall
aas
push
mov
xchg
iret
mov
add
mov
js
add
in
inc
inc
mov
lods
in
mov
pusha
add
add
add
mov
jnp
add
lods
in
and
rorl
add
mov
out
daa
cltd
or
addr16
xchg
xchg
jns
add
pop
add
add
mov
jmp
add
xor
mov
rolb
add
add
mov
jns
mov
adc
pop
sub
add
dec
aaa
adc
jbe
push
add
or
sbb
fs
push
add
add
jbe
mov
mov
aam
mov
in
xor
cli
push
mov
push
xor
pop
dec
sbb
add
in
ja
add
cmc
xor
adc
jecxz
rcll
push
add
rolb
mov
sub
add
push
add
jbe
sub
lret
into
pop
mull
add
mov
add
je
test
add
add
add
mov
mov
insb
jp
scas
lock
add
add
or
push
and
pop
insl
aam
add
mov
xchg
add
add
shrl
rolb
sub
dec
decb
inc
add
js
add
outsb
add
fcmovne
add
insl
aas
sub
push
add
aaa
jmp
out
mov
add
add
adc
mov
loopne
add
xor
enter
add
push
add
add
jmp
add
inc
add
add
stos
xchg
dec
sbb
out
xor
loopne
cli
int
addb
data16
add
test
cltd
xchg
popa
cmp
stc
and
mov
xchg
pop
mov
cmp
or
in
leave
pushf
sbb
bound
mov
rolb
jo
push
add
and
bound
mov
inc
push
add
cli
test
add
xchg
add
xchg
add
adc
rolb
cmp
fisttpll
and
mov
fnstcw
add
popf
bound
mov
mov
popa
and
mov
add
xor
or
xor
push
inc
add
ljmp
and
pushl
fists
add
ljmp
add
add
add
add
add
ffree
add
clc
push
add
add
mov
cwtl
cwtl
cmpsl
dec
out
ftst
add
add
movsb
add
add
mov
movb
and
mov
add
add
mov
addl
ja
adc
add
push
add
ds
add
and
sub
and
cli
bound
mov
xor
popa
aaa
mov
stc
aad
fimull
add
dec
xchg
xchg
pop
std
dec
inc
xchg
add
add
add
add
push
lock
cltd
jl
add
cmpsl
leave
xchg
xchg
add
scas
repz
add
add
pop
or
add
addb
add
xchg
mov
sbb
add
push
add
dec
sahf
and
mov
add
xor
jg
cmpsb
add
mov
mov
fdivl
cltd
mov
cwtl
repz
sahf
mov
push
add
in
push
add
inc
nop
add
mov
push
add
pop
rolb
add
cltd
movsb
add
cmpsb
add
stos
dec
push
xor
add
add
int
mov
mov
sahf
addb
ret
xchg
add
decb
mov
mov
lahf
movsl
xchg
add
scas
data16
push
add
sbb
sub
dec
out
ljmp
bound
mov
jae
lcall
lea
push
or
addb
ret
jp
loop
cmp
add
add
add
dec
dec
arpl
dec
das
in
loop
aam
inc
mov
add
add
add
add
add
jb
outsl
rol
add
cmp
dec
jne
add
sbb
insb
mov
cmpsb
add
add
add
es
add
jbe
ret
xchg
inc
into
add
add
les
adc
rolb
movb
fcmovnbe
add
mov
xchg
mov
jno
daa
daa
cli
out
jl
add
pusha
add
pop
pop
fwait
push
cmpsb
add
add
push
add
xchg
add
add
xor
dec
lods
loope
icebp
dec
xchg
mov
imul
fwait
xchg
add
inc
add
icebp
add
cmp
in
dec
dec
mov
cmc
aad
or
add
add
push
add
cmp
add
movb
and
mov
shll
mov
out
jecxz
mov
add
ljmp
cmp
adc
pop
dec
dec
loopne
fiaddl
sti
sti
mov
jb
pop
mov
sub
add
or
repnz
mov
xchg
pop
sbb
addb
and
int3
mov
mov
xchg
sbb
or
push
add
sti
sahf
lret
jb
rolb
int
inc
add
jno
xchg
test
add
xor
jno
add
mov
fcomip
fldcw
insl
adc
stos
xor
add
add
cmp
rolb
leave
push
jmp
add
adc
data16
xor
je
call
add
push
add
add
push
add
add
mov
imul
mov
insl
xor
xchg
shl
pop
xor
add
push
popa
mov
add
lret
jae
loopne
popa
cmp
add
xor
stos
dec
popa
inc
test
add
popf
add
lcall
add
push
mov
add
or
push
cli
adc
add
addb
add
lods
gs
outsb
sub
and
jmp
lahf
push
loop
cmpsl
xor
aas
sbb
cmp
mov
in
push
add
sbb
les
addb
push
inc
mov
and
mov
mov
sub
adc
inc
add
adc
addb
add
xchg
add
into
xor
pop
or
mov
scas
jge
add
sbb
push
scas
xchg
inc
add
push
add
sbb
jo
xchg
jnp
pop
jmp
push
pop
and
mov
jp
sti
mov
cmpsb
add
repnz
fidivl
jl
sub
testb
dec
jae
add
xchg
push
inc
add
xchg
jecxz
bswap
popa
in
mov
sub
add
repz
inc
dec
ljmp
jmp
add
add
jge
jno
add
jg
mov
mov
xor
js
jb
lahf
insl
mov
add
sub
jne
add
jbe
mov
das
xor
int
test
lcall
add
add
lret
dec
das
pushf
push
add
jmp
jb
adc
hlt
add
add
or
mov
in
scas
fwait
out
fisubs
mov
push
mov
xor
add
popf
mov
daa
repz
add
add
mov
mov
rolb
popa
cmpsb
add
mov
add
or
add
jae
add
add
out
loop
fsts
add
push
in
add
push
pop
pushf
push
jne
add
das
orl
add
sti
inc
or
lret
jle
out
ret
xchg
fldcw
add
outsl
push
add
jno
cmp
add
mov
sub
dec
inc
add
jnp
fisttpl
call
lahf
std
jp,pn
loop
inc
add
add
sbb
cld
lea
add
add
pop
mov
lret
ret
add
inc
sub
xor
outsb
scas
mov
mov
iret
mov
iret
outsb
outsl
cmp
add
hlt
add
sbb
idiv
stos
pop
jno
add
sbb
shrl
dec
out
leave
out
syscall
lahf
stos
lods
add
mov
dec
xlat
cmp
movb
js
add
je
dec
mov
cmp
movb
fsubrp
int3
dec
rolb
ret
mov
int3
cld
sahf
sbb
inc
ret
add
sbb
adc
loope
push
add
mov
rolb
mov
fsubrl
test
mov
sbb
mov
mov
pop
pop
add
or
mov
or
movsl
jns
add
dec
add
mov
add
loopne
xor
mov
add
sub
cmpsl
xchg
add
jle
or
cmp
add
jno
pop
ja
add
mov
les
push
add
lods
cmc
ffreep
add
add
adc
out
outsb
push
add
add
mov
mov
xor
pop
andl
iret
insb
cmpsb
add
jle
dec
or
add
ret
cmp
jecxz
add
mov
rolb
mov
insl
xchg
xchg
add
pop
xor
inc
add
push
stc
push
ljmp
add
ficoml
mov
fnstenv
dec
adc
into
outsb
jle
hlt
add
jns
push
push
add
add
lods
in
ds
add
in
xor
rcll
int3
fndisi(8087
clc
movb
push
sbb
add
addb
je
jg
inc
xchg
sahf
js
add
and
rolb
jae
out
push
sbbl
popa
cltd
mov
xor
int
inc
xor
mov
nop
add
sbb
add
jb
sbb
out
and
add
cld
ret
mov
sbb
add
and
mov
cmp
pushf
or
add
add
xchg
mov
mov
mov
add
dec
cmp
add
add
icebp
or
adc
push
add
dec
push
add
repz
push
add
inc
icebp
pop
movb
fmul
movb
aas
addr16
cmp
mov
sub
test
test
stos
ljmp
add
cmp
jns
add
add
add
faddl
repz
jmp
mov
out
enter
notl
sti
insl
data16
add
adc
sbb
cwtl
adc
or
mov
ja
mov
pop
adc
add
add
jecxz
add
add
mov
mov
add
add
sub
xchg
aaa
xor
mov
mov
lahf
xchg
add
adc
call
add
mov
gs
daa
movb
jle
popa
into
or
push
insl
hlt
add
mov
mov
xchg
add
adc
add
jle
push
test
add
mov
into
lods
mov
lcall
dec
pop
in
add
add
mov
add
rolb
jne
je
pop
mov
mov
js
sbb
arpl
mov
add
mov
mov
lret
jb
pop
add
add
lahf
push
add
or
lods
inc
mov
add
cmc
xchg
imul
add
inc
push
add
add
rolb
pop
xchg
add
add
stos
test
add
add
add
int
rcll
push
add
out
fmuls
add
loope
cltd
add
les
inc
in
shl
xchg
add
push
add
add
add
or
sub
add
add
add
jae
add
add
mov
data16
cld
repz
imul
add
dec
arpl
ja
and
mov
add
add
add
mov
out
inc
add
data16
add
pop
sbb
pop
fwait
push
add
add
add
xchg
add
cmpsl
popa
stc
popa
mov
add
sbb
add
rolb
xlat
xchg
rolb
testb
hlt
add
mov
popa
js
add
cmpsb
add
or
out
cmp
lods
xchg
clc
fldl2e
scas
sub
stc
pop
js
enter
mov
jg
pop
mov
movsl
lock
mov
shll
add
lds
add
fwait
in
incb
sub
lds
add
inc
cwtl
repz
pop
adc
jle
daa
push
add
mov
daa
mull
add
lods
sbb
add
add
add
in
aas
inc
mov
jnp
mov
add
sub
mov
outsl
sbb
fs
add
in
sub
or
mull
push
cmp
mov
add
add
add
clc
add
js
pop
push
sbb
add
out
scas
rolb
and
mov
push
into
daa
adc
sti
or
addb
add
subl
cmp
add
add
mov
test
sbb
mov
inc
add
mov
mov
aad
test
sub
jno
mov
loope
cwtl
push
add
aam
and
enter
xchg
std
push
add
test
ja
add
mov
add
mov
test
repz
mov
add
ljmp
add
add
mov
add
add
mov
cmp
sahf
xchg
add
stos
and
aad
stos
testb
or
add
mov
add
add
inc
lds
mov
mov
add
add
add
mov
xchg
add
cmpl
add
xlat
sbb
cmp
add
mov
pop
jo
data16
mov
jge
cld
or
mov
popf
inc
adc
in
imul
or
add
adc
out
lcall
in
movb
rolb
insb
mov
sbb
movsb
add
add
js
add
mov
out
iret
xchg
add
sub
out
pop
pop
sahf
mov
add
xchg
les
xchg
add
add
add
ljmp
imul
xchg
lds
jl
xlat
xor
push
add
inc
add
jnp
mov
ljmp
and
inc
add
jbe
ficomps
add
sbb
lea
addb
testb
add
add
add
add
xchg
sub
mov
add
inc
adc
hlt
add
sub
add
dec
mov
lods
movsb
add
add
outsb
addb
ret
test
push
add
add
arpl
stos
sbb
lret
enter
add
mov
push
addr16
pop
adc
lods
incb
mov
push
add
test
mov
xor
push
add
test
fwait
lahf
push
add
push
push
sbb
mov
and
and
mov
movsl
pop
int3
test
xchg
adc
add
ret
lret
cmp
test
lods
push
and
fstpl
loop
fimull
push
sarl
shrl
gs
repnz
lock
xlat
loope
mov
inc
add
adc
arpl
jl
adc
stos
sahf
dec
xchg
add
mov
xor
pop
jnp
aas
add
sbb
iret
push
lahf
shl
call
add
addb
add
add
sub
add
shll
add
add
movsb
add
add
push
add
add
xor
sahf
and
dec
sti
push
cmp
das
push
add
cmpsl
shll
add
mov
add
lret
mov
pop
nop
add
adc
inc
sbb
push
stos
dec
lcall
data16
dec
addb
mov
or
and
jecxz
lea
fistl
pop
lret
and
mov
fcos
xchg
add
add
add
push
jg
mov
add
add
mov
mov
add
add
movsl
call
add
push
adc
xchg
addb
outsb
and
add
add
mov
xchg
or
push
adc
ret
ret
js
pop
jecxz
mov
cs
push
add
dec
cmp
mov
shll
cmp
pop
dec
pop
pop
inc
add
in
out
enter
add
add
mov
jg
add
gs
test
mov
mov
movb
add
int3
jbe
inc
add
adc
sub
add
cltd
mov
loopne
dec
push
push
inc
mov
add
dec
push
add
mov
imul
push
add
pop
cmp
out
xchg
sub
sbb
addr16
add
pop
rcll
add
and
xor
addb
out
roll
add
mov
inc
movsb
add
mov
aaa
iret
in
test
jb
add
mov
add
add
add
outsl
sub
test
pop
ja
cld
jle
mov
aad
jns
out
lea
imul
mov
inc
testb
jmp
jecxz
rcll
cld
mov
push
cmp
add
xchg
add
xor
sbb
add
mov
aas
add
rcl
pop
mov
and
paddw
add
sub
xchg
pop
push
cmpsl
mov
and
mov
add
mov
mov
add
sbb
xchg
and
outsl
jg
in
inc
add
add
test
adc
test
cmpsl
xor
ds
pop
sbb
movsl
cmpsb
add
add
frstor
mov
pop
push
add
dec
dec
jne
add
fst
arpl
lods
lea
dec
inc
repnz
add
add
iret
mov
jl
ds
fisubl
add
mov
loop
shll
mov
lret
dec
push
add
leave
dec
inc
adc
in
les
adc
add
xchg
push
cmp
mov
add
sub
stos
mov
adc
loope
adc
mov
add
xlat
or
lfs
shll
and
push
add
pop
jnp
imul
mov
push
add
add
add
mov
leave
lds
add
inc
pop
sub
add
jnp
inc
add
mov
pop
adc
add
dec
inc
aas
sti
adc
mov
jne
add
rcll
mov
add
data16
add
xor
loopne
mov
xchg
add
test
lea
push
add
add
add
in
lock
lods
sub
xchg
add
mov
push
add
add
jg
mov
mov
add
stc
push
add
add
leave
out
and
inc
outsb
jae
decb
cmp
inc
inc
add
test
push
add
add
arpl
iret
testb
dec
pop
sub
mov
pop
repnz
loope
pop
shll
test
push
add
sbb
add
add
add
add
rcrl
lret
sub
add
add
sbb
leave
and
add
pushf
jge
pop
leave
repz
xchg
add
out
leave
out
movb
repnz
repz
je
divl
mov
add
add
mov
pop
jge
addb
add
add
jle
adc
movsl
ds
in
pop
loopne
xchg
repz
add
inc
xor
sub
inc
add
sbb
enter
add
mov
xchg
jle
jb
xchg
add
dec
fwait
ds
rolb
push
ffree
add
dec
add
add
jecxz
bound
mov
test
mov
jmp
pushf
addb
cmc
adc
lahf
lea
xchg
pop
call
add
out
sbb
jl
sub
js
pop
insb
cmp
cmp
cmp
dec
shrl
jmp
divl
add
aad
push
xchg
add
xchg
xchg
fimull
test
push
mov
popa
xchg
xchg
add
mov
pop
jb
addb
xchg
add
mov
add
push
add
add
pop
add
sbb
add
fcoms
mov
cmp
push
mov
adc
add
mov
cli
enter
cwtl
mov
cmp
shrd
add
pop
gs
adc
data16
or
mov
ja
add
lods
sbb
xor
sbb
outsl
dec
jle
in
or
xchg
and
fisubrs
inc
add
push
add
add
xchg
push
add
imul
movsl
cli
repz
inc
lea
xchg
add
cmc
nop
add
cli
mov
adc
in
jns
repz
fs
add
sti
and
cltd
loopne
aaa
jbe
mov
cltd
popl
push
add
cmp
adc
or
add
push
add
icebp
pop
pop
in
mov
or
add
jnp
pop
xor
add
sbb
sbb
add
sub
insl
push
add
rolb
test
or
or
imul
jnp
add
add
jg
and
stc
outsl
xchg
push
inc
add
add
xchg
push
mov
mov
mov
jnp
stos
xor
loope
mov
sahf
pushf
add
jo
int
xchg
add
movb
test
lahf
cmp
push
movsb
add
lcall
in
lret
mov
add
mov
xor
in
and
pop
repz
sbb
pop
sbb
add
or
add
jecxz
add
mov
in
cwtl
and
sub
mov
int
pop
jae
les
test
dec
jo
cwtl
leave
mov
add
push
lds
push
add
add
jne
jns
cmpsl
out
jecxz
mov
xor
adc
addb
xchg
add
test
cltd
cmp
mov
subl
and
int3
inc
xor
xchg
pop
add
mov
stos
mov
popf
cltd
rcll
sbb
jnp
jne
add
imul
add
sub
mov
xchg
add
or
int3
pop
xor
test
add
das
dec
mov
mov
add
mov
inc
fisubs
test
cmp
add
test
movsb
add
add
fisttpll
add
insl
sub
add
fisttpll
dec
push
imul
loope
cmpsl
xor
or
outsb
cmp
les
or
add
fcomi
add
popa
and
mov
mov
add
push
add
mov
add
or
add
xlat
cmp
mov
mov
pop
xchg
add
std
mov
xchg
sti
test
or
and
jbe
jge
adc
dec
jns
mov
mov
xchg
push
add
setne
xchg
add
mov
bound
mov
ds
add
iret
mov
mov
out
pop
adc
testb
add
je
push
arpl
add
and
mov
jle
imul
lock
pop
and
mov
add
sub
add
mov
xchg
add
jae
fiaddl
add
ja
inc
cmp
inc
and
mov
add
mov
add
dec
xchg
add
push
xor
add
insb
and
mov
add
inc
mov
sbb
add
loopne
imul
cmp
iret
int3
push
sub
add
les
and
inc
inc
sahf
sbb
adc
lds
add
xchg
add
pusha
add
cmc
ficoml
push
and
mov
jns
dec
call
mov
mov
fucomi
icebp
mov
cmp
add
outsb
rolb
imul
add
mov
add
out
pop
movsl
cld
lcall
sub
test
mov
dec
push
or
push
add
mov
movsb
add
push
out
sbb
dec
xor
mov
or
sub
dec
ds
mov
ret
add
add
das
sub
sbb
aaa
push
and
mov
add
cwtl
dec
sarl
movsl
inc
add
dec
testb
add
add
loope
js,pn
add
add
popa
sbb
mov
out
ret
fsubs
jl
xor
inc
adc
std
nop
add
add
sbb
les
pop
mov
sub
jns
mov
add
rcll
call
add
stc
push
add
add
mov
dec
xchg
dec
add
inc
shll
mov
add
add
add
add
and
test
add
scas
jmp
mov
add
jge
imul
sub
add
pop
push
add
and
mov
xchg
or
xchg
mov
cmp
add
nop
add
or
lea
data16
cmpl
pop
or
add
cmpsb
add
enter
loopne
cmpsb
add
loope
ja
in
add
add
mov
ja
add
mov
add
add
add
aaa
enter
imul
das
or
pusha
add
pop
cmp
add
add
add
mov
add
inc
dec
gs
inc
add
xchg
push
out
cmp
fsubs
mov
xor
sub
pop
into
scas
cltd
or
add
add
add
add
add
add
mov
mov
mov
cmp
pop
sub
mov
add
jb
out
jne
mov
sbb
pusha
add
ret
add
dec
popf
add
mov
adc
xor
adcl
into
fiadds
sub
add
add
add
cmc
jl
es
jp
add
add
mov
push
add
mov
add
xchg
fcompl
push
mov
pop
push
adc
add
xor
imul
icebp
or
add
add
out
add
dec
ret
sub
out
imull
movl
add
je
xchg
add
mov
ja
add
add
shll
pop
mov
ja
add
add
add
sahf
sub
fnsave
pop
pop
cmovae
rolb
push
adc
sub
add
and
mov
mov
xchg
addl
add
add
or
push
out
pop
push
inc
add
decb
insl
cmp
cld
adc
and
mov
add
inc
in
mov
cmpsl
orl
stos
in
cmp
push
lcall
jg
pop
adc
test
add
mov
daa
push
add
or
add
add
push
sub
negl
adc
and
jnp
pop
cmpsb
add
add
or
xchg
add
test
sbb
add
call
fiadds
icebp
xchg
mov
unpcklps
mov
lcall
add
rcll
dec
rolb
pop
leave
outsl
das
pop
loop
outsb
add
imul
xchg
add
repnz
mov
add
add
insb
dec
pop
mov
mov
scas
push
add
lret
popf
mov
stos
test
add
mov
add
add
sti
dec
push
xor
mov
imul
lock
or
clc
or
add
mov
inc
test
cld
mov
lcall
jbe
fdivs
call
loope
std
rorl
xchg
add
cld
imul
loope
add
xor
jg
add
add
fstpl
je
sbb
or
out
mov
add
shrl
clc
repnz
fwait
sbb
add
ret
adc
jne
fsubr
ds
or
into
popa
xchg
cli
rolb
and
inc
in
add
addb
pop
cwtl
jl
in
fnsave
add
sub
add
daa
popf
dec
fidivrl
xchg
js
fstl
xchg
push
add
add
add
mov
std
ret
xchg
xchg
jecxz
add
rorl
cmpsb
add
add
inc
add
sti
fidivrs
inc
dec
stos
jecxz
and
and
add
xchg
pop
push
mov
test
dec
enter
xor
int
mov
and
mov
sub
xchg
add
add
jne
rolb
loope
add
add
rolb
adc
push
add
add
loop
inc
mov
ret
sahf
movb
cmp
dec
mov
mov
sub
push
add
xchg
dec
adc
test
mov
mov
repnz
add
imul
mov
and
add
add
add
add
movsb
add
add
add
into
cmp
jno
adc
test
stc
out
outsl
cmc
pop
cmp
adc
cmp
add
cmc
xchg
add
mov
add
add
loopne
adc
add
add
jnp
jmp
rolb
ret
dec
addb
in
cmc
jg
out
jo
stc
jle
fiadds
xchg
add
mov
and
mov
mov
add
xchg
add
and
add
add
clc
mov
inc
out
xor
leave
adc
cmp
test
sub
testb
xlat
push
fidivrl
or
add
jne
jp
ret
xor
sub
testb
add
pmulhw
inc
dec
push
add
je
loopne
lea
add
ffree
add
fsub
mov
mov
and
mov
sbb
lret
cmp
and
ljmp
or
mov
add
fwait
stos
in
rolb
push
addr16
add
sub
mov
lds
out
test
mov
add
arpl
mov
movsl
mov
leave
fistpll
mov
mov
dec
jl
add
dec
fldcw
pop
pop
cli
jecxz
adc
out
add
push
add
push
imul
sub
and
out
test
loopne
fadds
add
data16
add
jl
lcall
rolb
cmpsb
add
inc
add
and
mov
clc
ss
daa
and
mov
add
cmc
xor
call
addr16
ds
inc
add
mov
addl
xor
imul
push
sbb
add
es
sbb
ds
or
push
add
in
jg
sub
rcl
add
add
pop
inc
add
xchg
add
mov
push
add
add
movb
and
aam
xchg
add
mov
add
push
add
dec
push
cltd
xchg
add
sbb
jg
xor
mov
add
lret
leave
rolb
and
mov
inc
adc
jne
add
movsb
add
mov
cld
xor
jg
add
add
inc
add
fwait
out
or
add
xor
xchg
add
add
inc
add
movsb
add
mov
mov
mov
add
adcl
add
push
or
xchg
add
add
pusha
add
pop
mov
and
push
add
add
add
pop
and
ja
and
ret
pushf
je
repz
adc
rolb
sub
push
aaa
lds
call
add
push
js
push
dec
push
push
add
mov
xor
inc
lahf
je
int3
mov
add
mov
add
shl
mov
pop
mov
mov
or
add
lods
pusha
add
add
popf
mov
jae
xchg
lds
xchg
add
sub
add
xor
pushf
imul
jno
or
dec
lods
sub
jo
cltd
and
leave
enter
push
in
mov
aam
shll
daa
and
mov
jle
add
and
mov
pop
and
addl
add
scas
enter
dec
xchg
negl
add
add
aas
adc
lahf
ret
add
jg
aas
cs
pop
xchg
nop
add
les
enter
add
add
out
lcall
fwait
mov
mov
xchg
aas
movb
fcomps
add
addb
jo
add
mov
outsb
repz
add
mov
add
add
pop
fcom
rolb
into
in
lods
clc
cmpsl
insl
sub
test
popa
popf
xor
push
jno
stos
jne
ljmp
stos
cmp
pop
lcall
mov
flds
adc
jle
add
mov
jmp
add
xchg
push
adc
and
sbb
inc
add
add
xor
add
sbb
add
add
cld
xchg
add
dec
sbb
add
lret
mov
push
add
addl
sub
pop
and
loop
add
movb
mov
add
add
arpl
and
cmc
dec
add
mov
add
testb
add
mov
cmp
pop
stc
das
mov
add
outsl
cmp
scas
gs
dec
pusha
add
add
sub
add
mov
mov
iret
dec
mov
js
add
jge
add
dec
lods
mov
popf
or
add
int3
mov
mov
dec
push
add
add
fisttps
push
add
add
add
mov
mov
jp
add
add
xor
mov
mov
mov
clc
push
add
lahf
pop
sti
cltd
scas
ds
jbe
or
or
fwait
mov
xchg
mov
xor
cld
xor
push
add
xlat
addb
add
shll
xorl
int3
ret
pop
push
xor
add
or
or
add
add
stos
adc
pop
and
mov
xchg
cli
mov
es
add
push
add
add
add
add
mov
sbb
add
stos
cmp
scas
or
leave
iret
xchg
sarl
xchg
add
mov
imul
je
jne
lahf
je
sahf
xor
add
add
cltd
push
add
sub
testb
sti
ds
or
add
mov
ret
add
xchg
mov
stos
push
add
ret
or
adc
add
mov
cmpsl
ficoms
movb
cmp
xchg
add
inc
add
add
push
add
mov
jl
xor
jb
xchg
adc
cmovp
ss
setae
add
jl
test
mov
add
jmp
push
mov
movsb
add
add
add
add
push
sbb
mov
mov
push
add
leave
mov
add
cmc
mov
add
in
mov
jle
add
in
scas
lahf
icebp
icebp
int3
sub
add
add
or
dec
mov
add
inc
shll
mov
push
iret
leave
and
add
or
dec
leave
mov
mov
adcl
mov
lcall
add
int3
adc
cltd
push
pop
xchg
and
add
int
pop
add
sub
add
add
inc
add
adc
mov
and
add
add
jmp
fwait
mov
add
cmp
rcll
inc
add
xchg
aam
add
push
add
inc
add
movb
daa
pop
das
xor
out
dec
push
add
add
pop
ja
mov
test
push
mov
outsl
add
mov
mov
divl
mov
sti
nop
add
outsl
add
test
add
push
aaa
mov
add
aad
aaa
out
in
jp
add
push
add
add
add
add
pusha
add
int
cmp
pop
jmp
cmp
in
lea
or
popf
fwait
sbb
add
add
add
add
popa
out
pop
mov
push
add
xchg
add
popf
insl
pop
inc
add
inc
xor
sti
test
rcrl
es
call
mov
or
xchg
and
mov
sahf
repnz
pop
mov
bound
mov
movsl
sahf
sub
mov
movb
fsubr
xchg
add
repnz
in
sti
inc
add
inc
add
add
in
pop
std
pop
aad
push
push
push
inc
cwtl
out
add
add
add
mov
cmp
and
std
lock
sahf
adc
mov
xor
sbbl
add
fcomi
add
nop
add
add
fs
mov
and
sub
cmpl
mov
inc
loop
sbb
jmp
mov
call
je
jb
mov
xor
sub
dec
and
xchg
rolb
shll
push
inc
mov
add
scas
movsl
aaa
sub
add
das
ret
mov
mov
add
rcrl
add
mov
add
lret
iret
ja
add
mov
add
add
mov
lahf
mov
arpl
push
add
mov
in
std
jle
mov
fnstcw
mov
push
xor
out
jl
add
sti
mov
push
add
add
add
cmp
jmp
add
enter
jns
std
rolb
add
test
push
dec
mov
enter
dec
lcall
push
add
mov
cld
fcomps
add
aam
ja
add
mov
add
lret
xlat
and
mov
adc
add
add
addb
imul
into
adc
cli
sub
add
jbe
sub
push
mov
sahf
jmp
out
add
mov
stc
or
add
add
and
mov
add
add
jnp
addb
mov
add
mov
add
nop
add
jne
fimull
roll
add
mov
add
pop
or
cmp
incl
add
jo
xor
add
xchg
gs
add
push
insb
add
add
jnp
fs
mov
mov
mov
int3
sbb
push
add
mov
or
xor
addb
add
adc
xor
dec
rolb
movsb
add
mov
sub
lods
bound
mov
rolb
fincstp
movb
pop
xchg
add
aaa
aaa
push
inc
aad
or
add
pop
out
pop
mov
add
into
and
mov
jns
repz
jge
add
mov
aad
and
mov
sub
mov
mov
add
xchg
jno
jle
mov
pop
jle
add
add
pop
dec
xor
mov
dec
add
add
or
jmp
or
add
add
add
lret
mov
push
inc
add
pop
ss
loope
cmp
pop
jns
sbb
or
mov
jl
add
outsl
js
in
mov
push
add
inc
popa
pop
fnstcw
sbb
add
rolb
pop
pop
hlt
add
mov
and
pop
cmp
sub
mov
add
add
sub
add
xor
cltd
addb
inc
add
jp
add
ret
test
adc
sbb
jo
ljmp
add
add
test
jns
add
add
add
add
add
add
push
add
jnp
inc
add
aam
mov
add
test
cli
mov
daa
lahf
out
mov
rorl
push
inc
pmaxub
push
add
cmp
loopne
fisubrs
divl
push
inc
jne
fimuls
push
add
adc
mov
rolb
add
mov
dec
dec
nop
add
test
shl
xchg
das
hlt
add
add
add
add
mov
cmp
xchg
loope
add
mov
add
jp
jp
add
add
xor
sub
or
mov
rolb
test
add
add
push
shll
add
jno
dec
xchg
add
imul
jmp
add
add
mov
add
xchg
add
add
add
add
fwait
mov
jne
out
inc
add
jg
cltd
out
in
xchg
add
mov
add
xchg
add
addr16
std
mov
inc
add
imul
jns
add
sarl
cmp
add
mov
adc
sub
pushl
aaa
add
gs
pushf
mov
cmpsb
add
testb
fistps
add
int3
add
xor
add
call
sub
add
xchg
add
add
sub
inc
sub
add
lea
add
jb
mov
add
call
add
add
loop
mov
sbb
add
or
add
mov
inc
xchg
aam
ds
mov
add
sbb
mov
lahf
push
add
and
mov
mov
lock
add
jo
int3
and
mov
mov
out
mov
push
sub
sbb
add
add
fidivs
sub
add
call
add
add
mov
dec
loope
jnp
into
cmpsb
add
jns
pop
cmc
ret
outsl
faddl
mov
mov
add
add
add
pop
mov
add
negl
add
and
add
jge
int3
lea
inc
add
in
leave
test
xchg
add
out
add
test
mov
jecxz
dec
jle
mov
out
push
aam
inc
add
pop
imul
pop
mov
and
add
jae
ja
insb
jae
mov
pusha
add
mov
addb
pop
ljmp
jle
cwtl
mov
add
add
add
lret
loope
add
xchg
add
adc
pop
icebp
addb
stos
arpl
lock
sbb
dec
scas
and
jae
mov
mov
inc
add
mov
add
xchg
and
mov
mov
outsb
daa
mov
aad
add
add
clc
gs
aad
mov
mov
cltd
leave
push
add
add
add
inc
xor
cmpsl
xchg
add
add
mov
add
or
daa
mov
data16
int
cld
cltd
and
add
push
cli
mov
add
add
pop
or
in
ja
and
dec
imul
xchg
sbb
adc
std
mov
js
fbld
add
out
sti
cwtl
jae
js
andl
add
fildl
add
add
or
in
xorl
call
add
add
add
jb
cmp
xchg
add
scas
insb
push
sbb
aas
jb
push
xchg
add
add
add
sahf
pop
dec
iret
push
and
mov
or
and
flds
add
mov
in
and
push
add
hlt
add
icebp
fwait
ja
add
add
push
les
loop
dec
frndint
xor
and
and
mov
stos
jbe
inc
fwait
in
sbbl
mov
add
call
mov
push
add
push
add
xchg
inc
lret
sub
fcoml
lret
add
mov
push
add
xchg
add
pop
adc
add
mov
pushf
pop
mov
or
decl
add
add
pop
shrl
hlt
add
mov
repz
data16
mov
cmpsb
add
jl
scas
jecxz
out
rolb
xor
mov
sbb
add
add
add
push
add
dec
out
xchg
pop
jmp
add
add
mov
and
mov
scas
into
lods
and
mov
pop
hlt
add
add
add
insb
pop
fs
jo
sub
or
lea
or
jne
push
add
push
xor
rcrl
hlt
add
and
mov
mov
add
int
mov
add
pop
test
inc
insb
or
xor
add
or
and
mov
add
pusha
add
push
ljmp
dec
xchg
add
and
mov
sbb
jne
xchg
add
xor
cli
fdivrs
aam
sub
insb
add
add
es
stc
and
mov
cmpsb
add
outsl
jl
add
lock
add
std
jbe
mov
fcoml
mov
dec
inc
add
mov
xchg
in
dec
repz
dec
mov
andl
leave
hlt
add
arpl
jecxz
stos
pushf
add
mov
jno
add
sbb
add
out
dec
lahf
mov
addb
fisttps
xchg
pushf
push
or
mov
add
xor
fcoml
and
bound
mov
mov
arpl
add
add
outsl
xchg
add
xor
mov
stos
das
repnz
push
cmpsb
add
aam
sbb
scas
xchg
add
mov
add
xchg
add
cs
stos
cmp
mov
sbb
inc
int3
lods
popl
push
adc
jecxz
add
add
mov
outsl
int
out
mov
fisubrs
dec
cmp
mov
push
stos
mov
rolb
popf
adc
and
jp
xchg
add
or
movsb
add
mov
add
mov
test
aad
stos
xor
int
add
add
add
adc
jp
bound
mov
add
mov
add
lret
xlat
xchg
add
or
movsl
jb
mov
push
add
add
dec
out
mov
add
mov
add
add
movb
into
scas
cmpsb
add
add
pop
out
sub
jo
pop
cli
leave
dec
mov
test
sub
add
test
push
add
insb
jmp
add
add
add
or
adc
fsubrs
mov
or
push
add
pop
jecxz
lods
sbb
pop
lahf
dec
andl
add
insl
fnstcw
adc
les
sub
into
data16
add
add
push
add
add
std
orl
add
xchg
sub
add
add
xor
add
adc
rcr
loop
mov
sbbl
mov
inc
add
add
ja
add
jbe
mov
test
xchg
add
pusha
add
into
mov
addb
js
pop
fcmovbe
add
iret
je
data16
lahf
addb
shll
rol
fdivr
mov
sbb
outsb
lcall
push
dec
into
icebp
pop
out
lahf
popa
sbb
add
jge
rep
fistpl
and
das
push
aaa
sbb
lret
fsubs
fwait
mov
mov
outsb
cmpsl
dec
mov
into
xorl
and
or
ret
add
mov
add
outsl
ja
push
add
add
push
rol
fldcw
add
or
add
rolb
pop
or
add
in
addb
inc
add
add
add
or
leave
add
pop
push
fldt
scas
clc
addl
mov
push
outsl
xor
inc
add
fmul
sbb
data16
dec
push
mov
call
add
xchg
lea
add
mov
xchg
push
add
test
cmp
test
adc
mov
push
movsl
jbe
xlat
out
cmp
pop
cmp
jae
add
adc
add
leave
in
cli
fbstp
hlt
add
sub
jnp
add
inc
add
mov
dec
add
popa
jbe
cwtl
jbe
mov
cmc
out
push
add
add
addb
add
xchg
or
dec
sbb
cmc
mov
pop
and
add
add
ljmp
mov
pop
leave
bound
mov
add
mov
add
das
and
mov
sub
add
adc
dec
mov
imul
lcall
mov
mov
inc
leave
and
fisttpll
inc
add
add
add
add
popf
insl
mov
add
popa
int3
mov
sbb
pop
call
sub
fcmovne
popf
pusha
add
add
cli
shll
mov
pushf
je
inc
add
jge
add
pmaddwd
sbb
inc
add
loop
xchg
add
sub
in
shll
adc
fidivs
add
shrl
sbb
adc
adc
iret
or
add
mov
add
addb
add
add
stos
push
add
xchg
scas
xchg
frstor
stos
lea
fsubs
xor
cli
data16
test
ljmp
push
cmp
add
jl
jno
and
mov
add
scas
inc
add
add
cmc
xchg
add
or
jb
xchg
dec
mov
inc
testb
call
sbb
add
add
mov
je
imul
add
addb
addb
add
ficoms
add
mov
cld
sbb
out
push
xchg
add
add
add
and
leave
dec
lret
mov
std
addb
data16
and
pusha
add
add
and
mov
or
sub
jl
or
fs
xlat
mov
push
add
mov
xchg
imul
out
cltd
data16
dec
lahf
mov
out
sar
mov
test
mov
add
add
cmp
out
testb
add
add
pop
pop
mov
mov
mov
add
sbb
xchg
je
pusha
add
mov
push
mov
inc
leave
pushf
add
mov
inc
add
add
jmp
cmp
or
push
mov
mov
mov
adc
xchg
sub
add
arpl
adc
dec
push
mov
rolb
xchg
fwait
mov
or
lds
adc
sti
adc
push
sbb
add
das
xlat
fstp
pop
lcall
adc
push
add
repz
mov
jp
ds
out
test
add
add
inc
add
bound
mov
lret
out
xlat
add
aam
rolb
jg
mov
mov
pop
inc
enter
add
push
daa
in
mov
rolb
add
hlt
add
add
xchg
xchg
sub
xlat
add
xor
fstl
mov
xchg
and
mov
fimuls
pop
jp
jecxz
mov
adc
pop
mov
pop
popf
sti
in
add
stos
stos
repnz
or
add
repnz
jne
pop
xchg
hlt
add
add
lea
daa
jl
xchg
add
add
add
mov
ret
dec
pop
push
add
add
fldcw
loope
movb
jno
add
test
add
imul
add
mov
test
dec
inc
add
add
gs
mov
xchg
aas
cmp
xchg
cmpsl
sbb
add
add
aad
mov
dec
cmp
add
jle
add
sbb
add
iret
rorl
int
jns
add
sti
idivl
cmp
outsb
or
push
add
pop
xchg
jae
jl
push
cli
cmp
add
into
jmp
add
int3
ret
add
or
mov
or
jns
repz
enter
clc
call
add
add
enter
add
stos
sbb
push
mov
sahf
aad
add
cmp
add
popa
int
push
add
add
add
loopne
fucomi
cltd
cmp
cltd
cmp
mov
xor
add
mov
xor
stos
sub
add
add
push
in
add
xchg
mov
push
push
jbe
push
add
push
push
and
andl
adc
mov
mov
adc
mov
sbb
imull
cmp
and
mov
push
add
add
mov
out
ror
add
cmp
add
fdivl
mov
add
add
test
repz
push
xor
scas
movsl
les
lds
add
add
add
add
gs
and
mov
add
daa
sub
imul
movb
pop
movsl
repz
jp
jae
out
pop
add
mov
add
cmp
bswap
pop
mov
jbe
mov
xlat
loope
add
mov
out
sbb
adc
adc
scas
pop
and
and
roll
mov
add
ds
and
sbb
add
mov
add
mov
jle
rolb
lds
add
insb
push
rolb
std
add
mov
lds
addb
xor
movsb
add
add
xor
xor
call
jmp
push
cwtl
pop
and
rolb
adc
or
and
mov
insb
xor
sti
cmp
jmp
or
testb
add
loope
sahf
icebp
jns
cmp
je
jo
jl
add
inc
add
pop
arpl
mov
and
mov
cmpsb
add
or
add
stc
mov
mov
add
add
outsb
fisubrl
add
xchg
add
xchg
add
add
sub
out
popf
js
cli
mov
add
mov
add
add
dec
adc
mov
cmpsb
add
sub
daa
popf
aad
mov
fwait
mov
cmp
les
dec
xchg
and
add
sbb
repz
add
es
int
add
add
xchg
add
mov
add
push
mov
add
adc
mov
dec
sbb
add
mov
mov
popf
xlat
repnz
in
repnz
dec
clc
xchg
dec
mov
add
xor
push
inc
mov
add
sub
or
add
pop
addb
add
add
jmp
add
adc
imul
add
mov
xchg
adc
cmp
inc
mov
mov
jmp
rolb
ja
add
ror
incb
ret
in
or
add
mov
movsb
add
adc
cmp
xchg
add
iret
mov
sub
pusha
add
stos
pop
add
stos
pop
add
mov
jns
add
mov
mov
add
sbb
aam
ret
jp
pop
ljmp
cmp
mov
add
sti
lods
insb
mov
or
add
add
add
mov
dec
add
and
mov
jl
add
add
mov
test
data16
sbb
in
in
hlt
add
imul
mov
test
or
mov
in
pop
rolb
fdivs
add
pushf
xor
call
add
inc
add
inc
add
add
loope
add
fwait
ret
popf
jmp
imul
outsb
pop
loope
push
rolb
add
pop
repnz
add
xor
push
xchg
testb
or
add
xlat
dec
cmp
add
add
add
add
sub
stos
lret
sub
xor
addr16
movsl
ror
or
mov
ds
xor
push
add
or
xchg
add
mov
sub
fs
outsb
es
cmp
push
xrelease
add
xor
ja
sub
pop
or
jl
lea
add
xchg
xchg
add
aad
push
add
out
addr16
adc
add
add
add
add
jecxz
dec
jp
xor
jnp
add
add
mov
aas
int3
add
push
add
inc
movb
push
rolb
add
sub
add
add
aad
add
addr16
dec
mov
testb
xchg
sarl
dec
lret
ja
mov
sub
mov
adc
aad
cmp
fwait
testl
mov
sub
fdivs
add
testl
fcmovnbe
add
pop
mov
or
mov
cmpsl
lahf
adc
add
xlat
or
sbb
add
add
call
jp
popa
xor
add
ljmp
movsb
add
add
into
ret
fwait
iret
dec
aad
add
ret
dec
pop
jne
add
setge
add
call
das
icebp
xchg
imul
jge
call
dec
ret
add
mov
xchg
push
xchg
add
and
add
add
pop
lret
cmp
aas
cmp
add
dec
ds
xchg
add
in
sbb
mov
and
adc
fstpl
shll
fsubp
add
aam
das
push
call
add
jecxz
add
jb
pop
xchg
add
out
ret
dec
mov
and
mov
out
sub
pushf
mov
push
cmp
adc
push
add
scas
dec
fisubrs
add
add
ljmp
leave
dec
mov
popa
xchg
rolb
jns
add
fstps
add
add
mov
repnz
lahf
cwtl
mov
add
xor
add
add
xor
data16
mov
add
addb
cmp
push
inc
and
mov
fisubrl
fcompl
xchg
imul
pop
lds
fsubs
add
loope
inc
add
add
mov
add
push
adc
add
jno
jb
sbb
add
add
in
or
xor
add
cmpsl
lods
stc
pop
sahf
cmpsl
sub
mov
jmp
mov
ffreep
add
cmp
mov
and
mov
and
mov
nop
or
add
add
add
jo
out
mov
adc
in
fucomi
mov
add
call
add
add
cmpsl
repz
pop
pop
and
push
add
push
in
ja
test
jbe
push
dec
add
add
mov
cmc
push
add
mov
dec
bound
mov
rolb
mov
jmp
xlat
xchg
add
add
push
popf
inc
add
jmp
pop
add
mov
jne
addb
dec
mov
repnz
add
add
sbb
rolb
std
imul
add
mov
push
push
inc
add
jae
imul
add
add
pop
push
add
add
add
jmp
add
add
xor
jbe
mov
xor
pop
push
test
add
jmp
shrl
dec
iret
inc
sahf
jg
xchg
aad
add
and
mov
xor
add
add
rcl
decb
js
or
add
add
add
sub
add
sub
pop
add
loop
dec
inc
in
jb
mov
leave
xor
push
cwtl
xor
and
fdivrs
jo
movb
add
add
daa
sbb
add
or
add
jmp
add
lds
add
cmp
frstor
adc
inc
data16
add
mov
or
jne
outsl
aam
jecxz
mov
cmpsb
add
add
cmc
gs
sub
sti
cld
sbb
sub
add
cld
xchg
add
add
icebp
lock
jbe
push
add
icebp
cld
cs
add
lret
addb
fiadds
add
jbe
imul
sbb
add
call
stc
xchg
fwait
mov
testb
add
mov
mov
add
add
pusha
add
push
add
sub
sub
mov
shl
add
cltd
and
add
add
in
or
add
add
int
repz
mov
add
out
out
mov
add
add
add
insb
add
mov
and
add
loop
or
test
js
add
add
add
out
movsb
add
fimuls
lahf
in
repnz
push
add
add
add
ljmp
push
mov
adc
cld
and
mov
lahf
or
add
add
add
add
push
add
and
mov
addb
data16
imul
mov
popf
mov
add
rcll
add
add
add
mov
add
add
ret
add
rolb
mov
add
insb
fbstp
in
fmuls
and
mov
push
fisubl
sarl
test
add
add
add
pushf
jecxz
into
dec
and
loopne
int3
lea
sbb
push
add
cs
dec
mov
add
pop
out
inc
add
stos
cmpsl
sbb
sldt
mov
in
imul
sbb
mov
hlt
add
repz
mov
movb
cltd
mov
xchg
pop
mov
ljmp
inc
xchg
pop
sbb
add
mov
fsubl
mov
or
fstps
jl
ds
or
xchg
add
or
testb
add
out
orl
js
mov
lret
push
add
mov
mov
fstps
enter
out
mov
add
adc
out
testb
mov
je
cmpsl
cli
adc
add
jbe
push
aad
add
insl
push
mov
pop
out
popa
fisubl
pop
cmp
dec
pop
jbe
ljmp
add
add
adc
xchg
jb
inc
add
ss
mov
xlat
inc
add
and
dec
lock
add
addb
sub
add
pusha
add
xor
add
fnstsw
jle
or
mov
add
lods
mov
mov
mov
add
sahf
std
inc
mov
sub
mov
js
lret
cli
icebp
inc
add
jns
ljmp
popf
das
xlat
xchg
jge
sbb
pop
rcrl
mov
or
add
stc
cmp
push
mov
xor
xchg
push
and
add
in
sub
xchg
add
add
movsb
add
pop
inc
add
inc
add
xchg
add
xchg
add
xchg
pop
jmp
das
fwait
xchg
jno
add
sub
in
add
and
mov
rolb
nop
add
repz
and
pop
fwait
cmpsl
mov
push
add
mov
test
jns
jp
add
add
and
aad
add
add
test
aam
rolb
adc
fadd
add
add
in
add
cmpsb
add
dec
adc
dec
jl
js
jo
push
inc
mov
mov
jo
inc
add
ja
das
testb
cld
lods
js
fisttpl
add
sarl
add
aad
add
es
push
add
and
adc
test
push
shll
push
jle
add
add
repnz
aaa
std
dec
lret
xchg
add
add
mov
into
push
add
dec
in
in
inc
add
repz
mov
outsb
pop
fdivs
ljmp
addb
add
mov
inc
add
in
rolb
add
rcr
ret
mov
scas
shll
rolb
stos
arpl
roll
mov
jmp
adc
je
adc
mov
jne
pop
xchg
data16
add
add
test
rolb
and
fsubl
sahf
aaa
addb
add
mov
xor
aam
lret
add
int3
aaa
push
add
sub
sub
cld
mov
pop
adc
call
add
add
push
or
sub
mov
mov
ficomps
xchg
add
fcomp
adc
pop
cmp
rolb
hlt
add
pop
dec
inc
xchg
lahf
je
imul
mov
out
push
dec
in
xor
mov
mov
add
add
int3
jns
inc
xchg
sub
fucomi
aam
lods
aas
popf
aaa
sarl
add
iret
shll
popf
inc
push
fsts
add
repz
out
or
add
add
add
mov
stos
fistpl
add
nop/reserved
in
pop
aas
int3
inc
push
adc
mov
jl
stos
inc
add
pop
addr16
xchg
add
js
jbe
shrl
add
pop
mov
dec
mov
push
testb
jmp
xchg
mov
add
js
cli
fsubrl
and
mov
fwait
dec
ds
jg
dec
in
sahf
adc
sbb
mov
testl
dec
push
add
nop
add
add
inc
and
mov
or
inc
cmpsb
add
cli
mov
add
mov
movb
ds
cmp
mov
xor
jle
push
add
add
adc
inc
jg
orl
icebp
xor
xchg
xchg
pop
add
mov
lea
add
add
das
call
sub
mov
adc
mov
popa
mov
push
add
xchg
sahf
push
add
add
add
adc
inc
jg
mov
xchg
push
add
inc
add
pop
mov
int
add
add
add
js
faddl
sub
add
pop
cmc
ljmp
mov
dec
dec
pop
in
xchg
add
lods
ljmp
icebp
xor
push
add
dec
call
cmp
xchg
leave
xor
je
or
daa
stc
pop
lods
iret
add
and
pop
inc
test
imull
cmp
popa
inc
adc
inc
add
movb
subl
addb
int3
mov
jno
add
addb
xor
mov
add
sbb
fcoms
mov
insb
mov
add
in
sub
add
xchg
push
les
mov
nop
add
dec
insl
lds
add
push
add
mov
out
imul
xor
add
scas
movsb
add
add
add
mov
inc
add
add
sub
adc
mov
inc
push
mov
add
jns
add
fs
add
decb
xor
or
movsl
loope
jmp
cwtl
xchg
add
cld
cltd
lcall
dec
inc
add
mov
inc
stos
into
loop
enter
add
add
outsl
cmp
and
mov
sub
and
cmp
dec
sub
jne
jo
jge
add
stc
add
xor
mov
ss
mov
jp
out
out
add
mov
rolb
cmp
mov
add
mov
into
ds
cmpsl
cmp
adc
lods
lcall
sub
iret
push
aam
xchg
inc
add
ret
lcall
mov
stos
cwtl
js
add
cs
aas
out
sbb
add
dec
cmp
or
xor
add
add
add
add
add
out
lds
xor
mov
adc
mov
add
push
add
add
ds
push
js
pop
lock
jge
scas
pop
rorl
mov
push
add
ret
fnstenv
add
pop
mov
xchg
adc
mov
mov
aad
add
add
add
cmpsb
add
clc
loopne
xchg
lods
enter
lods
test
movsb
add
add
or
inc
add
pop
or
add
pop
je
xor
pop
cmp
je
jge
scas
add
mov
hlt
add
cmpsl
fnstcw
add
add
fwait
sti
out
inc
pop
add
mov
dec
shr
add
add
out
aaa
xchg
xchg
mov
mov
int3
jge
sbb
adc
xchg
jb
fists
les
cmp
lret
movsl
rolb
mov
pop
js
add
add
popa
sbb
lret
mov
xchg
pop
pop
pop
jns
cmp
xchg
add
add
cltd
mov
pop
pop
imul
add
outsb
mov
mov
enter
ret
add
xlat
dec
ret
das
movsb
add
or
ficoml
xor
add
mov
int3
lcall
mov
lea
lret
mov
inc
add
shll
addb
xor
add
xchg
out
sbb
rolb
fdivrl
cli
mov
jecxz
push
out
add
sbb
and
mov
jae
call
lea
leave
mov
mov
lods
lahf
aas
mov
test
mov
gs
add
scas
cmc
addb
add
push
adc
and
mov
add
mov
add
xor
mov
repz
add
mov
imul
cmpsl
xchg
or
sti
rcll
inc
add
pushf
cwtl
inc
pop
jg
mov
aaa
stos
dec
icebp
add
pop
push
xchg
add
mov
outsl
xor
pop
daa
sbb
mov
add
xor
imul
mov
shll
out
mov
sbb
add
mov
fs
ret
mov
mov
pop
push
les
cmpsb
add
movsb
add
mov
pushf
mov
and
mov
loopne
mov
mov
roll
mov
js
addb
ret
mov
xor
in
and
jecxz
test
mwait
js
cmp
sbb
loope
add
add
pusha
add
stos
mov
addr16
add
andl
in
addb
add
cwtl
pop
dec
xchg
inc
add
add
push
add
out
loope
decb
int3
xor
insl
fidivrs
sbb
lcall
mov
lds
add
push
mov
testb
cli
arpl
add
enter
dec
test
je
sbb
dec
enter
xchg
add
inc
add
jecxz
xchg
mov
pop
fimuls
lds
fnsave
cmpl
push
aas
add
stos
cmc
repnz
add
cltd
mov
add
cmp
add
jno
scas
sub
push
jge
add
fidivs
inc
add
add
add
xor
out
lret
clc
sbb
stos
jle
add
movb
mov
push
add
xchg
add
out
test
and
mov
lods
xor
xor
jge
push
add
adc
xor
xchg
add
addb
cmc
fsubs
addb
add
jmp
fbstp
add
add
mov
mov
sub
mov
add
sbb
mov
fistpl
js
jnp
add
mov
cmpsb
add
add
sub
add
mov
hlt
add
add
inc
add
testb
out
addb
add
mov
into
jns
add
add
jecxz
add
sbb
xchg
movsl
mov
add
mov
add
push
out
xor
inc
inc
add
pop
out
xchg
xor
lret
cltd
sbbl
jg
cmpsl
mov
pop
lods
call
inc
add
mov
mov
add
and
mov
jbe
insb
iret
push
pop
sub
add
cmc
mov
int3
inc
sbb
pop
xor
loop
dec
push
sbbl
add
add
push
fcoms
jbe
add
mov
mov
add
mov
inc
add
mov
outsb
lds
xchg
and
mov
add
add
push
add
xor
add
xchg
add
popa
into
sub
add
add
mov
or
add
push
add
test
fxch
icebp
or
xor
mov
jne
jnp
add
into
pusha
add
testb
adcl
push
fistl
inc
add
lods
add
bound
mov
mov
push
and
mov
rolb
pop
pop
sbb
addb
add
add
cmpsl
dec
fistpll
add
add
sub
add
fcmove
or
ss
adc
mov
mov
insb
xor
nop
add
lds
sub
add
add
push
add
lds
sbb
xchg
xor
mov
dec
cmp
or
add
add
popa
inc
fisubs
add
add
aam
xor
add
and
data16
jno
loopne
add
mov
mov
call
add
mov
data16
push
push
or
add
lret
test
add
mov
mov
adc
popf
stos
jg
mov
aaa
cmpsb
add
orl
cmp
add
ficoml
add
add
xchg
inc
or
add
mov
add
add
aad
sub
mov
call
add
bound
mov
xchg
or
sub
fsubrl
jb
xor
jno
movb
sbb
into
add
dec
leave
loop
das
icebp
insl
in
sub
rorl
jno
out
lret
dec
lret
imul
das
inc
add
loope
aaa
push
inc
add
pop
test
fwait
xchg
push
push
cmp
pop
mov
rolb
jp
add
aam
insl
mov
es
add
cwtl
inc
add
inc
add
xor
loopne
hlt
add
push
add
mov
add
push
add
inc
add
mov
add
fcmovnb
add
mov
add
testb
mov
pushl
add
les
int3
xlat
add
mov
or
mov
xchg
add
fiadds
mov
popl
xchg
inc
add
xor
or
pop
daa
lods
sub
mov
adc
mov
lea
add
cltd
out
vmovsd
jno
dec
adc
push
add
pop
cmp
xor
and
and
add
jmp
scas
ja
add
adc
mov
adc
add
addb
add
mov
add
out
jb
xor
jo
jge
ret
jmp
add
push
addb
testl
pop
daa
flds
jg
out
and
fstpt
add
ds
mov
ja
add
mov
adc
iret
add
jb
aad
jne
add
add
testl
or
mov
rorl
jecxz
mov
jg
call
and
dec
inc
outsb
jge
and
add
std
push
fcmovb
repnz
add
sti
and
add
xchg
cmp
in
call
popf
xchg
pop
pusha
add
cmp
add
fisubrs
andl
adc
rcll
add
and
mov
call
add
inc
inc
add
sahf
inc
adc
xchg
nop
add
and
push
cmp
pop
sbb
repz
xor
add
sbb
fabs
push
add
add
adc
add
cmc
mov
add
push
imul
adc
pop
sbb
dec
stos
rolb
jg
adc
add
add
and
add
imul
rolb
push
add
add
lcall
outsb
dec
xchg
int3
out
add
mov
lahf
lea
pop
incl
mov
pop
xchg
xor
xor
pop
mov
mov
add
pop
lock
mov
add
add
lods
iret
push
out
add
add
add
leave
or
sub
add
in
cmp
add
add
out
fucomip
sti
test
dec
lret
ja
or
xor
bound
mov
adc
stc
cmp
mov
jns
sbb
lahf
les
xchg
add
mov
jnp
add
daa
lods
cwtl
jmp
sbb
sarl
dec
out
mov
add
add
jg
dec
dec
xor
pop
sub
lahf
daa
jge
mov
movsl
testb
xchg
cmp
add
cltd
jno
add
add
add
je
out
sbb
add
jmp
cmp
cmpsl
test
stc
mov
addr16
xchg
add
add
cltd
jne
add
rep
inc
add
add
add
add
xchg
add
mov
mov
aas
and
mov
cwtl
ret
cmp
mov
sub
add
mov
sub
add
in
xor
outsb
mov
dec
sub
scas
data16
push
add
rolb
push
add
movb
add
inc
add
add
sub
adc
add
add
add
jb
xor
mov
jmp
mov
add
add
mov
mov
xlat
mov
sbb
inc
add
add
inc
add
mov
add
add
push
sbb
jnp
out
or
mov
add
shll
cld
mov
sbb
lea
add
cld
scas
xchg
lods
pop
subl
aas
and
mov
mov
fisttpll
mov
ret
into
push
mov
jge
in
out
pop
nop
add
mov
cmp
jae
xchg
addb
dec
clc
stc
ret
sbb
std
enter
popf
dec
mov
jg
iret
add
mov
sub
push
aam
aad
add
cmp
jno
add
mov
inc
stos
repz
data16
jnp
or
xchg
push
add
push
mov
in
cmp
cmpsl
xchg
add
add
in
cmpl
sbb
mov
stos
test
pop
lods
insb
add
add
dec
cmp
mov
add
inc
add
pop
xor
mov
lcall
dec
sbb
push
add
mov
xchg
xor
jns
outsl
inc
add
icebp
and
fildll
add
icebp
xchg
fldt
mov
dec
lcall
popf
xor
lds
adc
mov
push
add
fwait
mov
add
jg
add
cmp
sub
sti
imul
pop
xor
dec
pusha
add
push
addb
fistps
lods
test
add
inc
add
add
cs
add
repnz
jmp
sub
dec
pop
outsb
imul
icebp
addb
add
mov
repz
out
out
insb
adc
jb
mov
test
daa
pop
jno
stos
push
add
adc
mov
std
xor
cmp
mov
nop
add
enter
mov
movsl
cs
fistpll
push
mov
enter
loopne
adc
sbb
or
add
bound
mov
out
add
lea
xor
and
xor
add
mov
aaa
aad
add
and
rsm
je
aad
aad
sub
add
add
mov
add
add
add
ret
sti
adc
rolb
jp
adc
shll
add
icebp
cmp
pop
and
mov
mov
lds
test
test
shll
add
push
jo
inc
negl
mov
push
cltd
push
adc
sbb
stc
or
addr16
lret
fisubrl
xchg
add
xor
or
jecxz
add
add
insb
add
add
