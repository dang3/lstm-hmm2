push
loope
in
loop
in
call
loop
inc
jmp
loop
push
in
in
loope
in
in
in
out
in
out
in
jecxz
in
out
in
jecxz
in
jecxz
in
out
in
in
in
out
in
out
in
in
in
out
in
loope
in
out
in
out
in
jmp
loop
dec
jecxz
in
in
in
call
loop
mov
jmp
loop
sub
loop
sbb
loop
cmpsb
loope
in
jecxz
in
in
in
in
in
in
in
in
in
out
in
out
in
out
in
loope
in
loop
in
jecxz
in
call
loop
popf
in
in
loop
in
in
in
loope
in
call
loop
lods
out
in
jecxz
in
call
loop
test
loop
dec
loop
in
out
in
loope
in
jecxz
in
loop
in
in
in
out
in
call
loop
sbb
loop
dec
call
loop
je
loop
in
in
in
in
jmp
loop
nop
in
in
in
in
in
in
loop
in
call
loop
out
loop
dec
jmp
loop
xor
loop
sti
loop
in
loope
in
loope
in
in
in
loop
in
loope
in
in
in
in
in
loope
in
out
in
jecxz
in
in
in
loop
in
jecxz
in
call
loop
loopne
loop
xor
loop
and
loop
push
out
in
loop
in
jecxz
in
out
in
in
in
call
loop
call
out
in
jecxz
in
call
loop
out
loop
sub
loop
loop
mov
loop
lods
loope
in
out
in
out
in
jmp
loop
xor
loop
in
in
in
jmp
loop
in
loop
jmp
loop
out
loop
clc
call
loop
stos
out
in
loop
in
in
in
jecxz
in
call
loop
jecxz
in
in
in
in
in
in
in
jmp
loop
jge
loop
pop
loope
in
call
loop
sub
in
in
jecxz
in
loope
in
in
in
out
in
out
in
jmp
loop
mov
loop
xchg
out
in
loope
in
loop
in
in
in
jmp
loop
sub
loop
movsl
loop
in
out
in
call
loop
jae
loop
xlat
jecxz
in
loop
in
call
loop
mov
jecxz
in
in
in
out
in
call
loop
stos
out
in
loop
in
in
in
in
in
in
in
loop
in
jecxz
in
loope
in
out
in
jecxz
in
call
loop
pop
in
in
loope
in
out
in
out
in
in
in
call
loop
add
loop
cmp
loop
sti
call
loop
shl
in
out
in
out
in
in
in
out
in
in
in
loop
in
out
in
in
in
out
in
loop
in
call
loop
loop
mov
loop
adc
loop
loop
scas
call
loop
mov
loop
push
loop
in
in
in
out
in
out
in
loope
in
out
in
in
in
jecxz
in
jecxz
in
in
in
in
in
out
in
jecxz
in
in
in
jmp
loop
sbb
loop
shl
loop
pmulhw
in
in
in
out
in
jmp
loop
and
loop
push
loop
fwait
in
in
call
loop
aas
out
in
out
in
in
in
jecxz
in
loope
in
jecxz
in
jmp
loop
jbe
loop
popf
loop
in
call
loop
or
out
in
out
in
in
in
jecxz
in
jecxz
in
out
in
out
in
in
in
in
in
loope
in
out
in
call
loop
in
loop
shl
loop
push
jecxz
in
out
in
call
loop
call
in
in
out
in
loop
in
out
in
in
in
in
in
out
in
in
in
out
in
loop
in
loope
in
jmp
loop
jns
loop
inc
in
in
in
in
in
in
in
in
out
in
loop
in
in
in
out
in
in
in
loope
in
loop
in
jecxz
in
in
in
out
in
loope
in
out
in
out
in
out
in
loope
in
in
in
loope
in
loope
in
call
loop
pop
call
loop
loop
xchg
jecxz
in
call
loop
add
loop
pop
out
in
call
loop
sbb
loop
pushf
out
in
loop
in
loope
in
call
loop
repz
in
in
in
loope
in
in
in
in
in
in
in
call
loop
sub
in
loope
in
out
in
in
in
in
in
jecxz
in
in
in
call
loop
sub
loop
fs
in
in
in
in
in
loop
in
call
loop
adc
loop
adc
loop
dec
jecxz
in
in
in
call
loop
pop
jecxz
in
loop
in
jecxz
in
call
loop
jns
loop
cltd
out
in
call
loop
inc
out
in
loope
in
in
in
call
loop
add
loop
mov
loop
in
loope
in
in
in
jecxz
in
out
in
jecxz
in
in
in
in
in
out
in
in
in
call
loop
jo
loop
sub
loop
xor
in
in
loop
in
jecxz
in
call
loop
dec
call
loop
fsub
loop
movsb
in
in
in
in
in
in
in
in
in
in
jecxz
in
out
in
call
loop
movsb
out
in
loop
in
jecxz
in
out
in
loope
in
loop
in
loop
in
in
in
loope
in
jecxz
in
loope
in
jmp
loop
shl
in
loope
in
jecxz
in
call
loop
movsl
out
in
loop
in
out
in
in
in
in
in
out
in
out
in
jecxz
in
out
in
out
in
in
in
out
in
in
in
loop
in
out
in
in
in
out
in
jecxz
in
in
in
call
loop
je
loop
cmp
loop
cld
in
in
in
in
out
in
jecxz
in
in
in
in
in
in
in
out
in
loope
in
in
in
call
loop
mov
jecxz
in
out
in
in
in
out
in
jecxz
in
in
in
call
loop
xchg
call
loop
lods
in
in
out
in
call
loop
dec
jmp
loop
or
loop
test
loop
mov
loop
loope
in
call
loop
dec
call
loop
jp
loop
aam
loop
jns
loop
sahf
loop
in
loope
in
jmp
loop
in
in
in
loop
in
in
in
in
in
call
loop
sbb
loop
xchg
loop
in
out
in
jecxz
in
call
loop
in
call
loop
cwtl
loope
in
in
in
jecxz
in
jmp
loop
adc
loop
out
call
loop
sti
out
in
in
in
out
in
loop
in
loop
in
loop
in
loop
in
in
in
in
in
loope
in
call
loop
add
loop
mov
in
in
in
in
out
in
loop
in
loope
in
jmp
loop
out
loop
cltd
out
in
out
in
in
in
jecxz
in
jecxz
in
in
in
out
in
jecxz
in
in
in
loope
in
in
in
jecxz
in
jecxz
in
call
loop
dec
jmp
loop
add
out
in
call
loop
sahf
in
in
loope
in
in
in
jecxz
in
jmp
loop
and
loop
in
in
loope
in
in
in
jecxz
in
out
in
in
in
out
in
loope
in
in
in
jecxz
in
out
in
loop
in
loope
in
out
in
out
in
jmp
loop
dec
in
in
out
in
loop
in
loop
in
call
loop
jmp
loop
movsl
out
in
call
loop
sub
loop
xchg
jecxz
in
call
loop
stos
in
in
call
loop
push
out
in
loop
in
out
in
call
loop
sbb
loop
xchg
out
in
loope
in
loope
in
in
in
in
in
jecxz
in
out
in
loope
in
in
in
jmp
loop
sub
loop
jbe
loop
in
loop
in
out
in
loope
in
in
in
jecxz
in
out
in
jecxz
in
call
loop
shl
loop
in
in
loope
in
out
in
jmp
loop
shl
loop
mov
out
in
loop
in
out
in
loop
in
out
in
call
loop
add
loop
mov
loop
lret
in
out
in
call
loop
or
loop
mov
loop
in
loop
in
loop
in
in
in
in
in
in
in
in
in
in
in
loope
in
loope
in
call
loop
ja
loop
cmp
loop
fsub
loop
jmp
loop
mov
call
loop
aam
loop
add
loop
loopne
loop
ja
loop
xlat
out
in
jmp
loop
fucom
loop
je
loop
cmp
loop
and
in
in
in
call
loop
cwtl
loope
in
in
in
out
in
loope
in
loop
in
out
in
jmp
loop
xchg
loope
in
loop
in
jecxz
in
out
in
call
loop
sub
loop
test
call
loop
test
out
in
in
in
in
in
in
in
loop
in
in
in
out
in
out
in
in
in
out
in
loop
in
in
in
call
loop
cmp
loop
and
loop
push
jmp
loop
inc
in
in
call
loop
jle
loop
xor
loop
xor
loop
int3
in
in
out
in
jmp
loop
stos
loop
in
jecxz
in
jecxz
in
in
in
loop
in
jecxz
in
jecxz
in
out
in
out
in
out
in
out
in
in
in
jmp
loop
out
in
in
in
in
in
loope
in
call
loop
add
jecxz
in
call
loop
mov
loop
cmpsb
loope
in
out
in
loope
in
loop
in
in
in
loop
in
in
in
loop
in
in
in
in
in
in
in
jecxz
in
loop
in
call
loop
mov
loop
inc
call
loop
dec
out
in
jecxz
in
in
in
loop
in
out
in
jecxz
in
out
in
in
in
jmp
loop
outsb
out
in
out
in
in
in
out
in
call
loop
inc
out
in
call
loop
push
loop
in
loop
in
out
in
loop
in
in
in
jecxz
in
out
in
call
loop
xor
loop
jno
loop
xor
loop
jmp
call
loop
xchg
out
in
loop
in
call
loop
bnd
loop
shl
loop
fs
in
loope
in
out
in
out
in
in
in
jecxz
in
call
loop
mul
loop
ljmp
in
in
in
in
in
out
in
loope
in
call
loop
ljmp
in
out
in
in
in
in
in
loope
in
loope
in
loop
in
out
in
in
in
jecxz
in
in
in
out
in
loop
in
out
in
in
in
loop
in
out
in
out
in
out
in
in
in
out
in
out
in
call
loop
in
loop
dec
in
in
jecxz
in
out
in
in
in
out
in
out
in
in
in
jecxz
in
out
in
in
in
jecxz
in
out
in
out
in
call
loop
sti
in
in
jecxz
in
out
in
call
loop
hlt
in
in
jmp
loop
inc
call
loop
pusha
in
in
out
in
loop
in
loop
in
out
in
in
in
in
in
jecxz
in
in
in
call
loop
push
call
loop
push
loop
in
jecxz
in
loop
in
loop
in
in
in
out
in
loop
in
call
loop
jmp
loop
in
out
in
loope
in
out
in
in
in
jmp
loop
lret
jecxz
in
out
in
out
in
out
in
out
in
jecxz
in
loope
in
out
in
out
in
loop
in
jmp
loop
loope
loop
aam
loop
push
loop
in
loop
in
out
in
out
in
loope
in
jecxz
in
in
in
out
in
jecxz
in
jecxz
in
out
in
in
in
jecxz
in
call
loop
shl
loop
push
in
in
out
in
out
in
call
loop
dec
call
loop
mov
in
in
jecxz
in
out
in
call
loop
jns
loop
nop
call
loop
push
in
in
call
loop
mov
call
loop
in
loop
xor
loop
test
out
in
jecxz
in
out
in
in
in
out
in
out
in
call
loop
fsub
loop
mul
loop
adc
jecxz
in
call
loop
pop
jecxz
in
loop
in
loop
in
call
loop
gs
loop
and
loop
jle
loop
xor
loop
cs
loop
sbb
loop
insb
in
in
jecxz
in
jmp
loop
out
loop
outsb
call
loop
and
in
in
loop
in
loope
in
jecxz
in
call
loop
fucom
loop
jae
loop
sub
loop
add
loop
xor
loop
js
loop
dec
in
in
out
in
loop
in
jecxz
in
loope
in
jecxz
in
loope
in
in
in
loop
in
jecxz
in
in
in
call
loop
mov
jecxz
in
out
in
call
loop
pop
in
in
jecxz
in
in
in
in
in
call
loop
pop
jecxz
in
in
in
in
in
in
in
loope
in
jecxz
in
loope
in
jecxz
in
call
loop
lret
in
in
in
out
in
in
in
in
in
in
in
out
in
loope
in
loop
in
call
loop
scas
jecxz
in
loope
in
out
in
out
in
loop
in
out
in
jecxz
in
jecxz
in
in
in
loope
in
jecxz
in
jecxz
in
out
in
jecxz
in
out
in
loop
in
in
in
in
in
jecxz
in
out
in
call
loop
mov
in
in
out
in
loope
in
in
in
in
in
loop
in
loop
in
in
in
loop
in
jecxz
in
loop
in
in
in
loop
in
jmp
loop
das
call
loop
pop
call
loop
dec
in
in
out
in
loop
in
jecxz
in
out
in
loop
in
out
in
jmp
loop
in
in
out
in
out
in
in
in
out
in
in
in
in
in
out
in
out
in
loop
in
in
in
call
loop
das
loop
in
jecxz
in
jecxz
in
loop
in
in
in
in
in
loop
in
call
loop
pop
loop
in
jecxz
in
in
in
out
in
loop
in
in
in
out
in
jecxz
in
in
in
out
in
out
in
loope
in
loop
in
loope
in
in
in
jecxz
in
jecxz
in
loop
in
jecxz
in
loop
in
in
in
jecxz
in
jecxz
in
loop
in
in
in
loop
in
jecxz
in
call
loop
imul
loop
add
loop
fsubr
loop
add
loop
leave
loop
in
out
in
jecxz
in
loop
in
call
loop
jne
loop
mov
out
in
out
in
in
in
loop
in
in
in
loop
in
loop
in
out
in
out
in
in
in
in
in
loope
in
in
in
jecxz
in
loop
in
jecxz
in
jecxz
in
out
in
out
in
call
loop
daa
in
in
out
in
call
loop
movsb
in
in
in
in
in
in
in
in
out
in
call
loop
and
loop
sub
loop
mov
loop
sub
loop
int
loop
dec
jmp
loop
je
loop
pop
out
in
loope
in
in
in
in
in
in
in
out
in
in
in
in
in
call
loop
mov
jecxz
in
loop
in
out
in
in
in
loop
in
in
in
out
in
out
in
call
loop
and
loop
and
loop
cmpsl
call
loop
lcall
in
jecxz
in
out
in
call
loop
repnz
in
in
in
out
in
call
loop
sub
loop
pushf
jecxz
in
loope
in
jecxz
in
out
in
loop
in
in
in
call
loop
jbe
loop
stc
loope
in
loop
in
out
in
loop
in
out
in
jmp
loop
aaa
in
in
loop
in
out
in
loop
in
out
in
out
in
out
in
loope
in
out
in
out
in
in
in
jmp
loop
imul
in
in
in
loope
in
in
in
out
in
in
in
out
in
in
in
call
loop
mov
loop
mov
loop
inc
out
in
jecxz
in
jecxz
in
out
in
loop
in
loop
in
in
in
out
in
call
loop
lret
in
call
loop
in
loop
imul
loop
add
loop
in
out
in
call
loop
and
call
loop
in
jecxz
in
loop
in
jecxz
in
out
in
loop
in
in
in
call
loop
and
in
in
in
jecxz
in
out
in
in
in
loop
in
out
in
loope
in
out
in
out
in
loope
in
jecxz
in
out
in
out
in
loop
in
out
in
call
loop
inc
jmp
loop
xchg
out
in
out
in
loop
in
out
in
out
in
in
in
loop
in
in
in
jecxz
in
loop
in
in
in
out
in
out
in
in
in
loop
in
out
in
out
in
jecxz
in
call
loop
dec
jecxz
in
out
in
out
in
call
loop
mov
loope
in
call
loop
jecxz
in
out
in
jecxz
in
jmp
loop
cltd
loop
in
loope
in
in
in
out
in
in
in
in
in
loope
in
out
in
out
in
call
loop
cmp
loop
in
call
loop
sbb
loop
sbb
loop
mov
loop
mov
loop
shl
in
jecxz
in
jmp
loop
jnp
loop
mov
loop
daa
out
in
out
in
out
in
in
in
in
in
out
in
loope
in
call
loop
inc
out
in
out
in
jecxz
in
call
loop
pop
jmp
loop
in
loop
sbb
out
in
out
in
in
in
jecxz
in
out
in
in
in
loope
in
in
in
jmp
loop
enter
adc
loop
and
in
jecxz
in
jecxz
in
loop
in
loop
in
in
in
out
in
in
in
loop
in
out
in
call
loop
pop
out
in
out
in
in
in
call
loop
popf
out
in
jecxz
in
out
in
in
in
loop
in
loope
in
in
in
out
in
in
in
out
in
in
in
call
loop
mov
loop
shl
in
call
loop
adc
loop
loopne
loop
inc
in
in
out
in
out
in
call
loop
cmp
in
in
jmp
loop
ljmp
in
call
loop
dec
in
in
loop
in
in
in
out
in
out
in
loop
in
out
in
jecxz
in
loop
in
loop
in
loope
in
in
in
jmp
loop
jecxz,pt
in
jecxz
in
out
in
out
in
jecxz
in
in
in
out
in
in
in
call
loop
pmulhw
in
out
in
out
in
jmp
loop
leave
out
in
out
in
out
in
in
in
loop
in
out
in
in
in
out
in
loop
in
and
add
in
inc
clc
repz
cltd
jae
add
clc
mov
jb
add
inc
clc
mov
clc
jle
lret
sub
add
seto
clc
sub
clc
add
add
clc
lret
stc
cwtl
fbstp
into
cwtl
jmp
sbb
push
cmp
mov
clc
jge
je
push
clc
jns
dec
movsl
clc
lahf
jbe
or
add
clc
dec
leave
scas
dec
lea
sbb
add
push
enter
psubb
or
add
das
out
test
sbb
clc
jecxz
add
add
sbb
clc
jecxz
xchg
push
add
scas
mov
pop
hlt
push
jp
and
add
clc
push
clc
out
insl
test
and
add
add
loopne
icebp
pop
test
xchg
out
out
dec
push
mov
add
sarl
or
and
cli
adc
add
and
add
daa
clc
pop
jl
sbb
add
and
clc
addr16
mov
xbegin
imulb
adc
data16
cmp
add
cmpsl
clc
adc
add
xor
clc
test
sbb
insb
push
add
imul
clc
jnp
clc
sar
mov
xlat
mov
add
loop
xchg
cli
es
out
fdivrs
sbb
ret
clc
cmp
clc
push
add
dec
fwait
adc
add
inc
add
int
mov
adc
clc
mov
test
inc
add
sahf
xor
add
add
sbb
add
clc
ss
movsb
clc
arpl
add
clc
xchg
pop
clc
test
ds
xchg
jnp
sub
add
add
jecxz
scas
xchg
sarl
iret
cmp
clc
add
clc
add
add
std
push
mov
jp,pn
xchg
movsb
clc
inc
clc
cmp
jge
cmp
add
mov
or
pop
stos
cmp
clc
jp
es
mov
imul
push
add
int3
push
add
jg
add
pusha
add
mov
lret
adc
add
xchg
scas
fs
loop
mov
push
mov
pop
inc
clc
add
add
add
jbe
sbb
jnp
inc
clc
push
clc
ja
add
dec
mov
clc
mov
mov
clc
sub
push
pop
sub
clc
push
jge
and
add
add
xchg
adc
add
mov
xchg
imul
add
clc
cmp
add
mov
test
xor
add
add
adc
add
inc
clc
fistpl
pop
lret
fdivl
clc
or
add
mov
xchg
inc
add
mov
push
and
add
pop
cmp
repnz
clc
popf
sub
add
xchg
sub
mov
push
add
mov
add
add
pop
push
iret
adc
add
movsl
clc
movsl
clc
pop
ss
dec
sub
add
pop
lods
pop
test
add
add
clc
sub
mov
jo
add
xchg
cmp
adc
add
add
pop
cmp
add
add
clc
push
test
mov
push
add
loope
cwtl
int3
cmpsb
clc
mov
out
fadds
mov
movsl
clc
sbb
cmp
pop
or
cmp
add
dec
jb
add
inc
clc
fwait
in
dec
cmp
push
xchg
pop
clc
add
add
clc
std
lret
clc
fsubrl
clc
cmp
add
fwait
jbe
push
add
aad
pop
clc
inc
add
add
add
xchg
sub
clc
xor
add
sbb
and
add
jle
add
mov
push
ja
add
leave
aaa
out
nop
push
stos
inc
clc
out
or
xchg
dec
ss
ja
xbegin
test
data16
adc
clc
mov
jne
sahf
cmp
mov
pusha
add
mov
daa
clc
rolb
divl
add
mov
clc
or
add
loope
push
inc
clc
fcoml
xor
add
add
add
or
add
fsubl
jno
add
add
add
dec
or
jp
add
add
mov
mov
clc
pop
or
clc
pop
push
dec
insl
fists
clc
fldt
clc
sbb
sarl
data16
jno
add
clc
call
clc
or
xor
clc
inc
add
adc
add
mov
sub
cmp
cmc
imul
icebp
int3
shrb
rcll
mov
add
out
enter
test
mov
bnd
add
sahf
cmp
xlat
jns
clc
into
dec
int3
sub
cmp
pop
clc
pop
clc
lock
dec
adc
es
daa
clc
imul
add
jae
add
fsubrl
clc
adc
add
adc
add
clc
and
adc
add
adc
add
sbb
mov
add
clc
fldcw
clc
pushl
add
jbe
nop
mov
add
add
add
pop
xor
or
aad
adc
add
add
mov
clc
cmp
sub
clc
sbb
movsb
clc
xlat
jns
push
or
add
test
cmpsl
clc
fcmovnu
xchg
cmp
daa
clc
cmp
out
fld
clc
in
outsb
mov
lods
push
mov
add
lcall
xchg
dec
call
sbb
pop
mov
je
loopne
icebp
cld
iret
stc
adc
add
add
popf
filds
pop
mov
clc
push
xchg
inc
clc
add
add
dec
xchg
xbegin
mov
jg
dec
das
sub
loop
pusha
add
inc
add
push
sbb
pop
aam
add
out
leave
jne
cltd
sbb
mov
add
jo
add
insb
cmp
sbb
add
add
jmp
xabort
inc
clc
lea
sub
add
ljmp
ret
clc
xchg
xchg
imul
xchg
inc
add
inc
clc
or
mov
add
dec
aaa
push
xor
add
xchg
mov
cmp
cwtl
xchg
mov
inc
add
dec
scas
lea
push
xchg
aam
aas
into
sar
clc
push
add
lret
add
inc
clc
aad
clc
pop
or
add
add
int3
pushf
outsb
repz
cmpsl
clc
and
add
push
add
loopne
cmp
mov
pusha
add
loop
fwait
push
mov
cmp
add
add
add
pushf
clc
pushl
and
add
stos
mov
inc
add
icebp
stos
pop
ja
add
add
push
add
jno
add
sar
shrl
imul
add
add
clc
int
add
test
xlat
push
xor
add
add
add
stos
scas
pop
into
xbegin
cwtl
es
inc
clc
xbegin
lret
lods
lret
ret
and
add
push
clc
inc
clc
cmpsb
clc
pop
cmp
lods
cmpsl
clc
or
add
xor
adc
jne
movsb
clc
inc
add
sub
leave
adc
pop
sar
mov
clc
adc
add
sub
xchg
ljmp
xchg
dec
cmp
mov
cmp
adc
add
clc
popa
add
xor
add
clc
push
add
fsub
clc
nop
scas
mov
lcall
inc
clc
push
mov
pushf
or
in
jns
sbb
jg
clc
pop
or
add
add
pop
and
add
addr16
iret
jecxz
hlt
mov
lods
ds
js
cmp
cmp
xabort
clc
fwait
mov
bound
add
add
add
add
lea
rcrl
add
lods
pop
cmp
pop
adc
add
cmpsb
clc
sub
in
test
push
ret
clc
jo
add
add
clc
and
add
dec
or
and
add
mov
sub
and
cli
add
aaa
mov
sub
fdivrs
inc
clc
sub
add
clc
and
add
add
scas
jb
add
xlat
stos
loopne
xchg
or
pop
push
clc
mov
lret
clc
sbb
lods
ficoml
push
in
ret
add
cmp
pop
pop
bound
add
add
add
vcvtdq2ps
pop
xor
add
mov
cmovae
add
add
mov
mov
arpl
add
data16
dec
push
add
mov
data16
push
add
insb
lock
pushf
fwait
pop
cmpsl
clc
sbb
add
cmpsb
clc
clc
inc
clc
nop
or
clc
pop
add
add
add
pop
insb
jl
clc
fsubs
clc
stc
loop
push
nop
xchg
sub
cmpsl
clc
popa
add
inc
add
cli
xchg
imul
and
add
nop
xchg
bound
add
add
mov
lods
and
add
xor
add
add
cmp
mov
lods
xchg
adc
add
add
add
add
push
inc
add
push
clc
cmp
jl
xchg
lahf
pop
sub
push
add
icebp
pop
mov
clc
mov
add
roll
mov
test
mov
lea
clc
mov
clc
jnp
add
jns
clc
mov
mov
add
mov
fwait
xchg
js
jb
add
xor
add
xor
clc
maxps
shll
insl
or
repnz
add
ftst
clc
xchg
adc
clc
or
clc
push
add
jo
add
es
push
xchg
testl
mov
in
push
sub
push
push
push
push
push
call
es
push
mov
and
xor
not
test
es
nop
nop
loop
pop
lea
xor
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
and
je
and
sub
test
nop
nop
nop
nop
nop
push
push
je
mov
adc
test
jne
ret
andl
mov
lea
push
push
push
push
push
mov
push
lret
call
fisttpll
aas
jp,pn
std
and
add
jl
add
aad
xor
add
out
sbb
jp
aaa
lret
test
mov
pusha
add
repz
adc
add
add
or
ss
cmp
fwait
ss
xchg
jmp
insb
enter
cmpsl
clc
mov
add
and
add
clc
dec
outsb
add
add
sub
clc
xbegin
push
aam
dec
lods
xchg
pop
mov
add
add
add
add
add
mul
clc
out
xor
clc
inc
clc
and
add
adc
jb
add
mov
sti
and
add
sub
add
xor
add
mov
ret
clc
es
dec
cmp
jmp
sub
data16
pop
clc
iret
iret
ljmp
clc
xlat
lock
add
pop
cmpsl
clc
cld
push
add
jecxz
fstpt
inc
clc
add
jae
add
mov
push
dec
lahf
imul
add
xchg
pop
out
dec
push
push
pushf
repnz
inc
add
cmp
ljmp
hlt
in
dec
mov
std
repz
mov
xor
bound
add
jo
add
clc
es
sub
add
add
clc
xor
add
add
inc
add
xor
add
aad
movsb
clc
out
pop
stos
loopne
pop
fldcw
adc
add
add
and
push
inc
clc
mov
inc
add
aas
scas
in
popa
add
cmp
into
xor
test
add
add
clc
pop
sub
add
jmp
mov
add
ds
add
repz
add
sbb
outsb
mov
movsb
clc
je
clc
ret
clc
shlb
add
jmp
in
or
clc
cli
sbb
add
push
sub
cld
or
xor
add
int
add
out
fcmovu
pushf
adc
add
sti
mov
jl
clc
mov
sbb
clc
xlat
adc
add
cmp
pop
jbe
adc
clc
cmpsb
clc
test
mov
clc
cli
cwtl
inc
add
push
xchg
jnp
xabort
and
add
cs
xchg
sub
push
int3
mov
add
test
mov
inc
clc
dec
dec
std
xor
add
ja
add
jecxz
push
pop
sar
clc
pop
xor
add
clc
push
addr16
jle
clc
loopne
dec
xchg
mov
add
or
test
add
xor
clc
cmp
sub
repz
add
clc
pushf
leave
pop
cmp
jp
clc
pop
insl
out
fdivrl
data16
xor
add
clc
pop
pop
mov
clc
fnstenv
add
cmp
add
filds
clc
jl
clc
jmp
mov
clc
jle
stos
into
sbb
clc
sarl
inc
add
dec
jp
cltd
bound
add
pop
push
mov
add
data16
insb
mov
sti
xchg
sub
in
push
push
add
mov
mov
dec
pop
dec
stos
sbb
add
sbb
add
addr16
adc
mov
add
test
aas
dec
pslld
add
add
nop
addr16
sar
add
repnz
add
cmc
popf
imul
push
add
adc
add
ds
jb
add
popf
bound
add
add
xor
add
insl
mov
cmpsl
clc
dec
stos
adc
adc
add
or
sub
adc
rcrl
movsb
clc
xlat
pop
clc
cltd
sbb
loope
mov
or
rclb
xor
add
cmp
in
mov
mov
ss
cmpsl
clc
or
xchg
cmp
xor
add
clc
add
add
sbb
mov
and
mov
add
dec
bound
add
fisubrs
xchg
mov
xor
enter
mov
test
jno
add
add
mov
sbb
add
add
clc
adc
push
mov
add
xchg
aam
xchg
xbegin
dec
mov
mov
dec
push
clc
mov
mov
push
add
mov
clc
scas
stc
ds
jb
add
hlt
or
aaa
pop
cmp
adc
add
add
mov
jmp
data16
sub
add
imul
xchg
lcall
notl
add
sarb
sub
clc
std
sbb
dec
push
mov
xbegin
add
clc
xor
add
and
add
add
scas
sbb
data16
xchg
dec
pop
jne
in
dec
xlat
xchg
daa
clc
fs
xlat
enter
clc
jae
add
mov
clc
or
clc
outsl
jns
clc
loope
mov
cmp
add
add
cmp
add
ljmp
clc
movsb
clc
loope
movsb
clc
inc
clc
and
add
cli
ja
cltd
scas
mov
add
fdivl
clc
mov
ja
jmp
pop
xchg
sti
push
add
jae
add
sub
cmp
add
into
outsb
fbld
add
mov
clc
mov
add
add
xchg
pop
xchg
mov
add
insb
lock
leave
aaa
jle
xchg
test
ret
clc
xchg
call
daa
clc
mov
lods
call
push
add
mov
js
clc
mov
clc
inc
clc
stos
lret
or
xor
add
add
cmp
clc
ss
sub
add
insb
lcall
or
int3
ss
clc
or
add
aad
and
das
fsubs
inc
add
aas
rcr
and
push
ret
sub
clc
xor
add
clc
and
add
and
add
bound
add
dec
clc
mov
lods
bound
add
xor
dec
lahf
sbb
out
cmp
xor
add
icebp
sub
add
pop
popa
add
xchg
and
add
fsubrs
jno
add
jecxz
ja
push
cmp
clc
ror
inc
clc
xchg
pop
cld
dec
cmpsb
clc
imul
mov
clc
sar
mov
xchg
mov
outsb
xor
add
adc
add
add
push
add
arpl
add
dec
js
cli
cmp
mov
ljmp
mov
cmp
clc
mov
xchg
jbe
leave
in
inc
add
sbb
stc
jecxz
jnp
je
ret
clc
cs
xchg
cmp
mov
data16
daa
clc
cmp
lock
cmp
clc
gs
stc
jp
clc
sar
nop
inc
add
push
cmp
or
mov
jb
add
repnz
add
inc
clc
mov
add
add
cmpsl
clc
jns
test
xlat
stc
mov
cli
xchg
push
cltd
inc
add
sahf
rcrb
dec
inc
clc
sti
dec
sbb
clc
sub
mov
inc
clc
jge
add
sar
sbb
ret
clc
sar
add
or
clc
lahf
in
mov
clc
je
icebp
sub
clc
pop
cltd
pop
push
clc
clc
xchg
in
out
push
push
clc
sub
clc
out
pop
cmp
sti
sarb
fcmovnb
clc
je
aaa
push
add
dec
scas
lea
pop
cmp
jecxz
or
into
mov
clc
push
gs
out
push
add
test
add
pop
clc
push
push
mov
jns
clc
xchg
xlat
outsl
xabort
js
pop
enter
fists
add
shrb
fwait
out
mov
add
je
clc
test
add
movsb
clc
scas
jo
add
sbb
cmp
add
test
clc
or
add
sar
clc
adc
add
and
clc
adc
add
int
or
xchg
ret
clc
mov
mov
clc
std
pop
dec
ds
cmp
add
aad
add
or
jb
add
clc
lods
into
in
xchg
add
add
clc
pushf
mov
clc
in
iret
or
loopne
xabort
stos
adc
add
pop
mov
int
shrb
sub
clc
and
add
rol
clc
jo
add
stos
mov
lahf
sub
ret
arpl
add
ja
loopne
mov
xchg
jne
pop
cmp
mov
add
in
ljmp
push
push
outsb
cwtl
sbb
stc
mov
lock
add
clc
jb
add
push
add
mov
xchg
xchg
jl
add
das
sbb
clc
in
inc
clc
pushf
mov
mov
into
sti
shrb
jecxz
cmp
add
jg
jo
add
imul
int
clc
leave
mov
lahf
scas
xchg
add
add
inc
clc
xchg
sub
mov
aad
clc
mov
clc
and
cmp
sub
add
clc
fisttps
mov
add
lret
clc
xchg
jae
add
test
js
jmp
clc
std
out
inc
clc
iret
mov
outsb
or
imul
clc
icebp
out
mov
fstl
add
add
imul
add
vunpcklps
cmp
adc
add
fstpt
clc
shrb
add
pop
lods
rolb
add
add
pop
cmp
jns
clc
mov
xchg
nop
sahf
mov
cmp
clc
pop
clc
lahf
rorl
sub
xor
clc
std
push
leave
cs
aas
mov
add
inc
add
clc
xchg
sbb
clc
int
clc
push
jne
cwtl
das
jbe
clc
jge
sub
mov
add
dec
jle
clc
jecxz
add
add
loope
push
inc
clc
pusha
add
mov
pop
ret
push
clc
ljmp
add
add
stos
add
add
add
jmp
clc
int
jle
cmp
clc
add
add
cmp
add
add
add
mov
mov
cmpsb
clc
push
push
push
clc
push
inc
add
or
clc
push
adc
add
outsl
xchg
push
or
lahf
ss
xor
add
add
add
add
mov
clc
mov
test
xchg
cmp
add
add
ret
clc
cs
mov
and
add
in
mov
add
bound
add
notl
out
sub
mov
mov
or
data16
shll
clc
lret
pop
clc
sub
repz
je
aad
clc
cmp
jge
xchg
add
clc
xor
add
sarl
dec
push
or
mov
add
cmp
cmp
add
das
pop
push
es
dec
adc
js
clc
clc
mov
out
incb
clc
dec
sahf
sub
add
mull
add
clc
mov
cmp
jecxz
into
out
pop
cwtl
loopne
xor
add
add
and
mov
enter
lcall
ret
inc
clc
pop
call
push
out
movsl
clc
and
add
add
add
dec
daa
clc
in
aad
push
icebp
dec
xbegin
clc
jl
stos
mov
add
push
add
arpl
add
inc
clc
add
add
out
in
inc
clc
push
add
push
add
sti
adc
add
and
add
fs
xchg
jae
add
shr
or
mov
movsb
clc
pusha
add
xbegin
test
clc
faddl
add
or
add
xabort
mov
mov
sub
clc
sbb
cmp
addr16
out
xchg
push
add
jo
add
add
xchg
xor
clc
jecxz
dec
push
repz
add
iret
lahf
test
or
lcall
clc
cmp
clc
pop
pop
jl
xbegin
and
add
scas
ds
sub
clc
mov
out
cmp
scas
test
pop
ss
clc
fidivl
loopne
pusha
add
ret
clc
fldt
clc
mov
clc
ret
clc
push
adc
aas
sbb
clc
and
add
dec
fbld
stc
stc
jne
daa
clc
in
fstl
add
inc
add
add
addr16
jg
adc
add
clc
sbb
add
je
mov
pusha
add
repnz
add
xchg
jg
dec
xor
add
add
xchg
add
add
add
clc
xbegin
pop
pop
test
leave
cltd
cmp
nop
call
clc
push
add
jne
cmp
pusha
add
loop
xchg
fwait
mov
or
add
mov
add
add
add
add
adc
add
add
add
clc
mov
test
add
hlt
pop
inc
add
or
add
out
rol
clc
cli
cli
cmp
add
mov
fldl
loopne
jp
out
pop
mov
cmpsb
clc
movsl
clc
into
paddd
mov
add
repz
add
sub
clc
cmp
adc
add
xor
add
push
loopne
lods
in
fxch
inc
clc
and
add
add
clc
sub
loopne
jmp
jecxz
and
pushf
scas
mov
stos
fcmovnb
clc
xor
add
adc
add
jae
add
lcall
shrb
pop
xbegin
clc
cmp
mov
dec
mov
jg
cli
mov
sahf
push
add
ds
clc
adc
add
bound
add
push
add
sbb
stos
dec
inc
clc
pop
push
clc
sbb
or
add
xor
add
push
add
jmp
clc
fnstenv
clc
imul
cmp
add
inc
add
in
mov
clc
cmp
clc
mov
call
sub
clc
or
sahf
sbb
js
add
pop
dec
dec
ficoms
cmp
add
jge
fwait
adc
add
mov
and
add
add
xchg
sub
add
hlt
xchg
sbb
add
or
add
clc
cmpsb
clc
ja
add
cmp
clc
dec
or
add
popf
xchg
cmp
clc
jae
add
clc
push
in
stos
push
mov
jle
clc
adc
add
adc
add
and
add
adc
add
add
gs
loopne
mov
mov
stos
cli
idiv
iret
ret
test
fwait
test
add
clc
cmpsl
clc
jae
add
cs
clc
push
add
sub
clc
mov
xbegin
clc
ja
test
aas
ret
clc
popa
add
data16
lret
sub
ss
enter
clc
mov
clc
in
add
add
cwtl
out
push
add
add
add
imul
bound
add
add
int
dec
rorb
pop
adc
add
clc
sbb
xabort
push
gs
jle
add
add
add
add
icebp
stos
dec
iret
pop
fstl
ja
ds
pop
cmp
adc
add
clc
mov
pop
dec
jnp
lret
loop
decb
mov
mov
add
inc
clc
insl
adc
lret
jno
add
sar
fsubrs
push
clc
pop
loopne
insb
cmp
inc
clc
loop
pop
test
add
xor
add
add
jae
add
push
data16
mov
xchg
inc
add
push
cmp
lahf
inc
clc
inc
clc
scas
sarl
adc
add
and
add
add
xchg
xchg
sahf
pusha
add
inc
add
iret
xor
add
add
clc
mov
add
inc
clc
sarl
clc
push
cmc
call
push
mov
mov
cli
pop
int3
xchg
cwtl
jecxz
cmp
add
add
mov
hlt
iret
int
clc
cmp
clc
sar
insl
insl
fidivl
xor
add
ds
push
adc
xchg
popf
fldcw
push
add
dec
sti
clc
data16
add
add
in
dec
jl
lret
clc
lret
xchg
inc
clc
cmpsb
clc
shll
inc
clc
sub
add
add
clc
adc
add
pop
inc
add
mov
clc
mov
aad
add
dec
xor
add
add
and
add
xchg
fldenv
add
clc
cmp
lock
add
clc
popa
add
xchg
pop
cmp
mov
cmp
clc
push
popa
add
movsl
clc
ficomps
sub
ret
clc
and
pop
mov
fisttpll
lret
shlb
add
adc
add
add
mov
pop
pushf
jecxz
cmp
ds
iret
push
xor
add
clc
sub
pusha
add
pop
scas
lods
int3
inc
clc
lods
mov
cmp
push
jae
add
add
add
sti
jbe
inc
clc
ret
clc
fs
cmc
dec
or
clc
add
add
clc
xor
add
in
lret
push
clc
fwait
cmp
clc
jbe
lods
mov
and
add
cmp
ljmp
add
out
mov
outsb
shrl
gs
out
xor
add
test
jo
add
pop
cmp
out
inc
clc
sbb
clc
jae
add
sub
clc
leave
out
mov
cmp
add
sub
add
jg
add
jecxz
call
sub
xchg
jb
add
clc
fdivrp
cmp
mov
xchg
test
clc
xor
add
add
je
inc
clc
xchg
mov
add
clc
inc
clc
sub
clc
fisubrs
sub
add
add
xchg
mov
lahf
addr16
and
cmp
push
sar
hlt
sub
xor
cltd
test
mov
ljmp
inc
clc
push
xor
add
mov
clc
ss
clc
mov
mov
mov
daa
clc
out
jno
add
add
add
xbegin
and
add
add
js
jp
clc
adc
iret
pop
pop
popa
add
gs
ret
aam
add
pop
or
outsb
icebp
dec
adc
add
es
add
add
pop
rolb
add
adc
add
movsb
clc
call
add
clc
xchg
ljmp
push
inc
add
dec
int3
cmp
clc
ja
clc
pop
cmc
mov
add
and
add
add
xchg
dec
mov
imul
das
push
pop
push
add
lahf
mov
cmp
clc
push
negl
test
addr16
das
dec
jne
pop
clc
daa
clc
test
gs
pushf
pop
clc
sar
sbb
or
lods
movsl
clc
int
add
aad
clc
jp
add
push
add
imul
clc
pop
mov
add
call
and
add
clc
or
add
not
pusha
add
out
bound
add
rorl
and
add
mov
add
or
cwtl
fstpl
shll
pop
adc
sbb
xchg
cmp
mov
jae
add
mov
aad
add
pusha
add
jle
clc
scas
push
loope
sbb
clc
adc
add
add
aas
pop
jge
cli
mov
add
push
add
dec
ss
clc
outsl
outsl
dec
mov
cmp
add
mov
imul
add
cmc
or
jns
pusha
add
adc
cmpsl
clc
mov
add
pop
scas
jge
add
sbb
mov
fnsave
add
xchg
inc
clc
gs
mov
clc
cmp
rcl
and
add
notb
add
cmp
add
std
lods
nop
scas
movsb
clc
stos
gs
mov
mov
xchg
inc
clc
dec
jo
add
inc
clc
add
add
xor
add
arpl
add
add
mov
xbegin
imul
jne
clc
popa
add
push
or
data16
fmuls
push
add
bound
add
sbb
xor
add
iret
addr16
cmpsl
clc
in
push
test
lahf
add
xchg
mov
add
not
ret
clc
stos
aam
sbb
das
xlat
cmp
into
data16
ja
mov
test
js
push
add
jmp
clc
sahf
mov
clc
xabort
sahf
push
push
and
add
pop
fistps
pop
pusha
add
lock
addr16
fs
jns
hlt
scas
sub
mov
jno
add
clc
jae
add
xchg
mov
mov
inc
clc
adc
add
mov
adc
push
add
add
jmp
and
add
clc
jne
ds
mov
lcall
pop
dec
add
enter
clc
mov
popf
xor
add
xlat
and
add
add
add
mov
clc
add
fs
push
jo
add
mov
clc
or
add
push
mov
clc
cli
push
scas
pop
pop
push
add
cmp
popa
add
dec
mov
add
popa
add
insb
xchg
pop
or
jb
add
add
sbb
xabort
and
add
clc
xor
add
lahf
push
xor
sub
clc
inc
add
mov
clc
pop
mov
sbb
add
mov
clc
adc
add
clc
inc
clc
ss
jp
add
dec
cs
rcrb
cmp
push
add
fwait
imulb
pop
mov
addr16
imul
outsl
sti
inc
clc
inc
clc
xor
add
add
jl
dec
jb
add
add
add
clc
push
ljmp
cmp
scas
inc
add
int
pop
xor
add
hlt
data16
dec
iret
add
add
add
lret
testb
pushf
mov
js
cltd
cltd
cmp
clc
pop
popa
add
push
add
mov
test
clc
xchg
inc
add
pop
shr
mov
inc
add
inc
clc
adc
add
scas
fildll
loopne
mov
out
mov
sub
inc
add
mov
inc
add
roll
adc
add
imul
add
push
xchg
mov
jg
rcrl
bound
add
dec
loopne
xchg
dec
cmp
movsb
clc
clc
gs
mov
int
and
add
cmp
pop
xor
add
clc
mov
inc
add
roll
lahf
arpl
add
cld
pop
gs
stos
imul
pop
sar
clc
cmp
add
dec
out
bound
add
clc
pop
sti
add
add
cmp
mov
loope
insl
repz
sub
clc
add
movsl
clc
pop
cmp
insb
cmp
add
or
lods
add
add
aad
add
add
fs
insb
sub
add
xbegin
add
inc
clc
xor
add
add
add
cmp
cmp
add
mov
sahf
fcomi
push
loopne
sbb
add
fwait
gs
cmp
sub
add
mov
clc
sbb
add
dec
mov
leave
sarb
filds
add
clc
repnz
fwait
inc
clc
xchg
fisubl
test
xor
clc
ja
sbb
movsl
clc
dec
ds
sbb
sub
mov
addr16
mov
inc
clc
mov
and
add
sar
push
sar
clc
cmp
or
adc
lods
push
shr
mov
adc
add
xchg
enter
add
movsl
clc
repz
add
out
add
add
clc
push
sub
pushf
mov
jb
add
in
sub
cmp
clc
pop
lret
push
add
dec
or
js,pt
mov
call
add
add
jmp
clc
mov
clc
mov
mov
fisubs
clc
pop
sub
add
popa
add
std
xchg
and
add
pop
enter
clc
ret
clc
hlt
fidivrs
add
clc
clc
gs
ja
clc
cmp
clc
popa
add
sar
xchg
pop
lods
sar
stos
das
test
gs
mov
insb
or
and
add
add
dec
xbegin
in
push
mov
clc
outsb
aam
js
sbb
jge
pop
cmp
clc
push
pop
mov
mov
in
xchg
inc
clc
sarb
mov
push
clc
xchg
int3
inc
add
icebp
loope
loopne
pop
outsb
pop
jb
add
mov
mov
xchg
imul
in
clc
adc
add
clc
cmpsl
clc
leave
dec
jmp
stc
gs
inc
add
dec
mov
into
ss
cmp
xor
add
clc
int
inc
add
xbegin
dec
sti
add
das
xbegin
shlb
add
push
add
fwait
and
add
jge
add
imul
add
in
sub
in
pop
push
add
xchg
gs
mov
add
adc
add
dec
and
add
and
mov
imul
clc
je
add
dec
movsb
clc
push
inc
clc
push
add
pop
mov
mov
sub
clc
cmp
sub
xbegin
cmp
clc
rcl
test
add
or
movsb
clc
pop
lods
mov
clc
pop
clc
test
enter
scas
push
jge
ret
clc
jb
add
clc
pushf
aam
clc
lahf
fstpl
add
shl
clc
iret
push
sti
repz
xor
daa
clc
negb
add
fistpll
std
push
repnz
push
adc
inc
clc
aad
xchg
inc
add
adc
clc
lahf
cmp
sub
ret
mov
js
jl
add
xor
add
rcr
sub
add
add
add
inc
clc
xbegin
push
clc
addr16
sub
jl
popa
add
xchg
jg
cmp
xchg
gs
dec
xchg
in
jae
add
add
adc
out
jl
clc
inc
clc
rolb
mov
outsl
mov
clc
clc
add
cmp
xchg
mov
test
scas
add
add
fidivrl
gs
and
pop
xlat
push
add
or
inc
add
or
rolb
cmp
clc
lret
sarl
clc
push
cmpsb
clc
xchg
jns
clc
push
sub
clc
sbb
clc
sub
aam
mov
add
mov
xchg
mov
loopne
out
dec
sbb
add
jo
add
ljmp
dec
fldcw
clc
ret
imul
loop
pop
movsb
clc
xor
add
push
cmp
and
call
lods
ja
mov
add
jl
add
jmp
and
add
pop
xchg
cld
dec
xor
add
xor
fiadds
clc
adc
cld
lret
pop
insl
pop
pop
mov
add
xor
add
add
or
add
sub
inc
add
icebp
stc
fmuls
cmp
add
sbb
js
sbb
jecxz
jecxz
dec
int3
cli
enter
cld
jns
xor
add
add
xlat
push
js
xchg
pushf
rorl
daa
clc
adc
add
clc
dec
fdiv
inc
clc
lock
mov
adc
sub
lock
and
add
mov
xor
xbegin
sti
loopne
hlt
scas
inc
clc
push
xbegin
sbb
mov
cmp
jp
in
fcoms
clc
loopne
push
bound
add
xchg
jbe
push
add
gs
pop
rcrl
mov
pop
loop
and
add
mov
add
pushf
loope
sub
incb
clc
out
je
cmp
add
mov
pop
daa
clc
popf
inc
clc
out
fwait
in
mov
add
dec
cmp
add
aas
in
mov
clc
iret
cwtl
cmpsb
clc
mov
clc
rcll
and
add
pop
xchg
cmp
js
clc
xchg
fxch
arpl
add
push
add
lods
push
int
clc
lods
sub
dec
loopne
clc
pop
jnp
rclb
add
xor
add
insb
std
fdiv
cmp
and
adc
add
add
clc
mov
outsb
hlt
add
add
repnz
mov
clc
or
clc
jg
loopne
movsb
clc
pop
std
divl
add
clc
push
mov
fimuls
cmp
out
jb
add
clc
scas
mov
cmp
jae
add
add
or
clc
cmpsl
clc
xlat
and
add
clc
sub
fwait
in
insb
mov
push
pushf
js
call
ja
adc
arpl
add
mov
add
ds
push
movsl
clc
inc
clc
pusha
add
pop
mov
push
mov
add
adc
add
jg
clc
std
pop
std
ja
sbb
dec
fmull
sbb
add
ficomps
mov
adc
add
pusha
add
sar
aaa
jg
add
inc
clc
shll
push
add
mov
cmp
sbb
add
clc
adc
mov
testb
clc
mov
xchg
insb
dec
mov
add
cli
mov
inc
clc
iret
and
add
xchg
mov
inc
clc
jnp
imul
clc
push
clc
test
push
add
mov
out
adc
add
clc
or
mov
imul
push
add
sbb
bound
add
clc
push
push
add
jnp
or
xor
add
dec
sbb
imul
dec
into
mov
adc
add
pop
cltd
adc
add
push
mov
clc
je
cld
pop
sbb
jne
sub
mov
ljmp
dec
pop
sar
bound
add
cmp
mov
clc
icebp
aas
pop
mov
clc
cltd
cltd
outsl
xchg
out
jmp
jp
add
out
dec
sbb
test
lods
test
mov
jbe
lret
push
add
push
popa
add
in
jle
aas
sbb
cmp
data16
inc
add
cmp
pushf
pop
std
pop
fimuls
lret
add
jecxz
clc
out
ret
clc
and
pop
or
cs
mov
cmp
repz
inc
add
and
xor
add
add
lods
popf
gs
xor
add
inc
add
or
add
dec
xchg
xchg
lret
inc
clc
gs
dec
fs
xor
in
lcall
pop
xbegin
scas
add
inc
clc
adc
add
popf
out
pop
inc
clc
mov
mov
cwtl
or
clc
lcall
clc
mov
add
cmp
imul
add
clc
imul
add
add
out
and
popa
add
outsb
mov
test
pop
cmp
clc
pop
cs
test
push
dec
insb
lret
aam
mov
cmp
in
inc
clc
cmp
mov
clc
xchg
pop
push
add
add
add
aam
add
fs
or
clc
lahf
cmpsl
clc
in
aas
mov
mov
dec
cld
and
dec
mov
mov
cwtl
ss
clc
enter
out
leave
push
pop
lock
add
jmp
clc
mov
add
stos
lods
pop
dec
ja
clc
loopne
clc
xor
add
std
in
mov
add
movsl
clc
lcall
clc
jno
add
add
cmp
rcrl
push
or
clc
push
add
es
mov
push
add
add
add
ret
clc
loope
fsts
xchg
push
clc
cmp
call
cmp
pop
pop
ret
clc
loop
das
es
mov
add
pop
or
inc
add
lret
call
outsl
xchg
or
and
clc
mov
clc
or
jo
add
add
dec
mov
clc
test
fcompl
int
and
add
imul
das
in
sbb
std
dec
sub
fdivl
add
xchg
mov
add
ss
jne
roll
add
loopne
cmp
xchg
mov
dec
push
jmp
clc
jo
add
sbb
and
add
add
clc
xor
add
add
add
push
mov
or
adc
add
sarl
clc
add
add
pop
rcl
jae
add
jmp
iret
sub
clc
push
stos
pusha
add
sub
aad
clc
scas
push
stos
sar
clc
push
cmp
cmp
mov
add
add
clc
rorl
cmp
clc
jo
add
iret
inc
clc
fwait
out
jb
add
push
enter
sub
sub
clc
cmp
scas
add
add
add
mov
seta
mov
jp
mov
add
add
xchg
xchg
inc
clc
mov
cmp
and
add
add
into
into
stc
inc
add
push
add
dec
loopne
and
vmread
jecxz
mov
cwtl
push
add
and
add
add
lcall
sbb
or
cltd
inc
clc
pop
ret
push
cs
add
adc
add
add
push
add
jno
add
jo
add
clc
movsb
clc
fidivl
add
fidivrl
popa
add
sub
clc
pop
arpl
add
sbb
adc
pop
jge
insl
in
push
add
popa
add
dec
adc
add
cmp
add
ret
clc
cmc
and
mov
xchg
mov
aaa
add
add
add
jns
clc
movsb
clc
xchg
es
pop
cld
enter
cmp
jnp
sub
clc
mov
and
add
clc
push
push
clc
xchg
in
in
in
or
fcmovnb
clc
jp
pop
clc
mov
addr16
sub
mov
add
mov
push
clc
ror
lahf
iret
or
xchg
or
out
inc
clc
xbegin
add
incl
clc
fucomp
xor
clc
cmp
and
add
cld
imul
add
rcrb
mov
xor
pop
push
iret
push
in
nop
cmp
clc
push
add
das
test
dec
pop
es
mov
insl
adc
add
clc
pop
jns
clc
mov
mov
arpl
add
ljmp
add
xchg
adc
bound
add
jns
inc
clc
cmp
clc
mov
xchg
popa
add
loop
sub
add
clc
pop
cmpsl
clc
xabort
jecxz
out
stos
repz
bound
add
mov
mov
test
push
clc
inc
clc
adc
outsl
arpl
add
bound
add
mov
int3
inc
add
ds
push
clc
test
arpl
add
hlt
pop
sar
push
add
cmc
lods
out
lret
add
add
cwtl
icebp
shlb
sbb
mov
push
leave
add
add
add
fcmovnu
movsl
clc
movsl
clc
xchg
pop
mov
movsl
clc
push
clc
mov
cmp
ja
ficomps
in
cmpsl
clc
push
mov
and
add
insl
push
clc
cmp
mov
clc
clc
loop
push
clc
daa
clc
adc
add
add
add
mov
cmp
adc
push
or
clc
jmp
adc
add
add
fwait
dec
sar
cld
out
inc
add
pop
clc
fsubl
hlt
sub
pop
cmp
nop
xchg
and
add
clc
out
fwait
dec
pop
and
xor
add
popa
add
mov
push
icebp
dec
je
out
push
add
add
add
hlt
pop
pop
and
add
add
mov
add
pusha
add
push
add
mov
jmp
xchg
cmp
ret
xor
repnz
add
stos
jmp
cmp
clc
mov
clc
std
insb
inc
add
push
add
mov
or
pop
mov
test
adc
add
add
incb
or
mov
sbb
inc
add
sub
rcr
jno
add
aaa
fs
nop
pop
pop
fistps
adc
dec
in
idivl
iret
ds
ficoms
add
cmp
pop
push
mov
clc
mov
dec
sahf
inc
clc
sbb
cmp
add
clc
jno
add
pop
xor
push
add
scas
add
add
ja
add
loop
cli
enter
adc
add
mov
ss
sub
add
add
mov
shll
add
sbb
add
add
cmp
add
jg
clc
fcomps
add
out
mov
inc
clc
inc
add
push
and
add
clc
dec
inc
add
pop
push
nop
aam
hlt
data16
fidivrs
sahf
clc
out
xabort
xchg
pop
nop
rcrb
push
fwait
or
add
pop
fidivl
add
in
jmp
push
clc
stos
out
outsl
mov
add
nop
dec
mov
rcrb
or
add
gs
add
add
push
push
add
dec
mov
add
clc
jp
dec
jl
clc
sti
mov
sbb
add
xchg
lcall
push
add
lret
add
xchg
xor
jmp
clc
mov
clc
cmpsb
clc
shl
clc
mov
pop
xor
cmp
clc
jae
add
add
pop
aam
add
repz
test
cmp
clc
xchg
mov
mov
clc
fiadds
clc
stc
fcmovb
clc
add
add
insl
or
jg
icebp
imul
mov
clc
aas
dec
jbe
clc
cmp
add
add
add
inc
clc
int
mov
or
sti
gs
repnz
add
out
cwtl
fs
add
add
jmp
add
add
add
xor
add
add
stos
jns
jnp
rolb
in
fs
decl
push
add
jmp
test
shl
clc
out
jmp
mov
call
movsl
clc
and
loopne
mov
pop
sbb
cmp
adc
ds
mov
add
mov
jge
and
add
sbb
clc
pop
clc
loope
shlb
repz
add
jo
add
add
data16
cwtl
fists
add
pusha
add
cmp
add
clc
sbb
add
or
outsb
mov
mov
add
push
ja
add
pop
cmp
jae
add
add
clc
dec
ss
shrl
ret
or
or
pop
scas
js
jae
add
add
mov
xlat
sar
cmp
add
push
hlt
dec
adc
add
pop
clc
cmc
xor
add
add
mov
cmp
fsubrl
inc
add
xchg
push
rol
clc
add
add
clc
jecxz
fwait
dec
mov
jle
js
out
push
out
je
add
je
xor
add
add
mov
add
add
clc
mov
repz
add
cmp
clc
jle
inc
add
idivl
add
cmp
nop
decb
xchg
inc
clc
jl
repz
clc
inc
add
in
add
add
add
add
out
fdivp
mov
clc
sbb
fdivs
pop
inc
add
and
add
cli
sahf
loop
into
fadd
clc
lahf
push
add
cmp
add
jg
leave
cmp
ljmp
add
mov
cmpsl
clc
sbb
add
push
jne
clc
dec
leave
jne
jo
add
mov
clc
xor
add
cmp
add
stos
icebp
cs
cmc
jne
ret
clc
popf
xchg
adc
add
call
or
hlt
push
add
xor
add
das
push
popa
add
repz
sub
clc
dec
xchg
and
add
clc
stc
movsb
clc
loopne
loopne
in
in
loope
mov
insb
test
cmp
add
and
add
add
and
push
fsubrl
idivl
aam
cmp
dec
pop
xchg
adc
add
push
sub
and
add
clc
xchg
or
mov
clc
xor
add
cmp
clc
out
push
and
add
add
popf
out
mov
mov
clc
out
pop
call
inc
clc
sbb
add
and
add
sub
lret
clc
jne,pt
sar
clc
dec
add
add
pop
xchg
xor
add
pop
pop
push
add
test
fucom
clc
out
mov
add
cltd
mov
add
out
push
hlt
jl
add
cmp
cmp
jge
clc
add
sub
insb
out
push
add
popa
add
ds
clc
xbegin
jmp
clc
mov
add
inc
add
mov
int
push
cld
data16
sub
popa
add
add
add
shll
mov
xchg
and
clc
xor
bound
add
clc
lret
test
dec
in
sub
xor
add
add
mov
cmp
clc
cmp
add
push
aaa
stos
pushf
push
clc
dec
fldl
clc
xor
add
xchg
out
jg
xchg
cmpsl
clc
icebp
outsl
mov
in
add
add
pushl
dec
xor
or
arpl
add
out
inc
clc
or
lea
dec
insb
xlat
sub
sti
clc
xchg
mov
add
add
insl
add
mov
push
add
add
add
insl
jbe
clc
mov
or
add
adc
inc
clc
lea
clc
bound
add
add
inc
clc
stos
cmpsb
clc
shll
push
and
add
add
stos
mov
xchg
and
add
add
stos
xchg
cmp
mov
popa
add
js
sar
repnz
pushf
push
cmp
xor
dec
push
add
xor
add
jns
data16
cwtl
sub
add
nop
inc
add
adc
add
add
pop
and
add
add
xchg
or
int3
pop
out
and
add
cmp
add
shl
push
add
int
and
add
in
or
push
clc
clc
div
adc
add
inc
add
pop
testb
pop
jle
aaa
jo
add
xlat
dec
jb
add
mov
push
sahf
clc
js
push
data16
fs
mov
sbb
add
mov
sar
adc
add
fsubrp
pop
ljmp
ret
xlat
pop
push
add
lahf
fdiv
dec
push
sti
dec
sahf
fwait
add
in
pop
jne
clc
push
gs
test
add
or
sub
clc
xchg
add
add
add
aad
add
clc
aaa
xbegin
outsb
aaa
dec
sar
add
je
clc
leave
push
sti
jle
pusha
add
sbb
clc
lret
mov
clc
push
ret
clc
loopne
imul
add
cwtl
xchg
jnp
jl
and
add
adc
add
push
and
add
add
repz
clc
sbb
add
test
clc
add
add
pop
fnstsw
or
add
pop
push
add
dec
loopne
jecxz
lock
aas
call
adc
add
clc
lock
jge
sub
loop
popa
add
or
cltd
es
ss
hlt
gs
ret
add
test
imul
cmp
clc
popf
test
inc
clc
mov
add
repnz
add
add
aam
movsl
clc
shld
iret
cmp
pop
and
add
add
jb
add
aas
outsb
mov
ljmp
cmp
clc
mov
loop
lret
mov
addr16
ret
add
lret
and
add
add
clc
bound
add
pavgw
xchg
jge
js
add
sbb
mov
xbegin
add
stos
or
push
sar
movsb
clc
xor
out
bound
add
add
mov
imul
arpl
add
jne
clc
sbb
add
push
add
test
int
test
jae
add
fidivl
cmp
fidivrl
add
fidivs
clc
das
mov
add
add
lods
jp
test
clc
sar
sahf
push
add
sub
loopne
push
add
add
add
inc
clc
xor
inc
clc
fisttps
add
add
lock
inc
add
ret
clc
xlat
int3
push
clc
js
push
xchg
pop
stos
es
add
add
add
mov
imul
cmp
add
inc
clc
dec
loope
push
test
das
nop
out
inc
clc
fsts
add
lea
push
sub
clc
outsb
mov
sbb
mov
aas
xor
add
add
stos
jb
add
lret
fstl
ss
add
cmp
clc
dec
jg
clc
xor
add
clc
dec
cli
lods
mov
add
stos
dec
jmp
adc
mov
cmp
enter
pop
lret
clc
push
imul
pop
clc
and
push
add
jnp
add
outsl
test
xchg
sbb
sub
clc
inc
clc
inc
add
or
aad
fmuls
ja
jmp
mov
add
add
in
pop
fidivs
clc
mov
sbb
clc
jne
rcr
push
add
cmp
sub
clc
outsb
fcoml
add
out
inc
add
add
add
clc
es
and
add
ss
gs
mov
add
jnp
filds
clc
jge
add
ljmp
clc
jb
add
sub
clc
insl
leave
inc
clc
pop
dec
loopne
xor
add
enter
mov
or
out
js
push
push
das
jge
repnz
add
add
add
add
cmp
fs
xor
add
mov
popa
add
cmp
clc
cmp
xbegin
add
add
iret
xchg
pusha
add
dec
and
das
fwait
inc
clc
pop
movsl
clc
test
jbe
xchg
call
clc
jo
add
mov
clc
in
out
push
add
add
ret
xor
add
add
aam
push
cwtl
imul
clc
aad
clc
lods
push
clc
cmp
dec
xchg
cmp
push
add
movsl
clc
das
sbb
pushf
gs
lret
jp
je
add
add
add
cmp
clc
or
add
push
add
shrl
fldt
or
clc
mov
jne
rol
clc
mov
add
lods
cs
push
clc
clc
addr16
jno
add
add
jns
lcall
dec
icebp
hlt
dec
lret
loope
cmp
mov
adc
pushf
mov
add
cmp
mov
clc
hlt
mov
add
cmp
add
fwait
sbb
clc
in
decl
add
and
add
add
sub
fcmovnb
clc
cwtl
scas
fcoms
imul
clc
sub
scas
lods
popf
je
clc
mov
aaa
sbb
ret
clc
dec
in
xchg
pop
clc
sub
cmp
call
je
cmp
clc
pop
mov
clc
xor
add
clc
out
addr16
jbe
fbld
add
cld
sar
loope
in
ret
clc
push
mov
pop
movsb
clc
dec
dec
pop
or
add
mov
inc
add
test
clc
pop
icebp
push
add
add
add
dec
jmp
add
sub
add
cltd
mov
mov
clc
out
mov
cmp
add
lret
pushl
add
pop
dec
push
clc
fbld
add
roll
mov
dec
sar
dec
add
add
clc
add
add
clc
pop
jmp
clc
mov
add
push
or
xchg
outsl
dec
mov
xchg
mov
adc
or
popf
inc
clc
inc
add
mov
es
int3
or
adc
add
add
js
clc
testb
imull
jb
add
sub
mov
popa
add
and
add
add
fldl
mull
fidivl
jl
sub
add
cmp
clc
jbe
pop
cmp
icebp
js
stc
push
add
aad
or
call
clc
cmp
clc
std
pushf
and
add
divl
call
cwtl
inc
clc
sbb
add
sub
xabort
jno
add
add
inc
clc
inc
clc
push
pop
ficomps
bound
add
clc
push
jp
xor
scas
nop
fs
jmp
int3
adc
add
clc
insl
clc
mov
add
clc
in
or
or
cltd
push
pushf
adc
add
movsb
clc
jbe
leave
sbb
add
mov
test
dec
and
add
add
stc
jbe
bound
add
cs
and
add
add
jge
adc
icebp
jb
add
cmp
clc
insl
xchg
ljmp
clc
outsl
shll
je
add
push
int
clc
mov
adc
add
test
xchg
pop
clc
mov
jp
clc
call
cmpsb
clc
pop
clc
cwtl
fwait
ss
out
ja
add
cmc
stc
clc
mov
fcomps
add
xchg
fcomps
bound
add
mov
and
aaa
js
clc
push
add
outsl
dec
scas
push
adc
sbb
loopne
mov
jge
lcall
add
cld
test
addr16
jmp
test
lock
fidivl
scas
repz
clc
push
ret
clc
popl
clc
cmp
pop
xabort
or
js
push
xchg
mov
imul
stc
out
lock
mov
add
clc
loop
fs
dec
lock
into
adc
add
sbb
xbegin
add
add
mov
add
inc
add
pop
sahf
sub
insl
sarb
fistpl
cwtl
jge
sar
add
fmull
add
int
mov
add
dec
mov
clc
fldenv
add
add
jp
add
dec
mov
jge,pn
out
inc
add
rol
clc
cmp
cmp
mov
cmp
xor
add
dec
and
add
pop
push
add
scas
and
add
clc
mov
ljmp
fidivs
add
add
mov
push
xlat
mov
pop
sahf
lods
sub
sub
popa
add
pop
mov
add
xor
add
add
mov
sbb
cmpsl
clc
sar
cmpsl
clc
clc
js,pn
cmp
mov
arpl
add
testl
es
daa
clc
and
add
add
add
jmp
mov
lods
fnstcw
das
push
add
mov
clc
pop
scas
vzeroupper
push
pop
mov
mov
outsb
sub
and
clc
xor
add
dec
call
dec
out
cs
add
std
inc
add
inc
clc
adc
add
add
clc
into
and
test
add
gs
pop
push
dec
adc
add
outsb
mov
ret
clc
test
clc
and
xchg
jb
add
inc
clc
xchg
bound
add
and
add
clc
xlat
out
sub
clc
popa
add
fst
cmp
sar
jl
mov
fsubl
clc
and
or
mov
cmp
gs
dec
or
rclb
leave
cld
notl
clc
ret
jge
popa
add
call
clc
push
pextrw
xlat
shlb
sar
add
add
clc
loop
outsb
sar
add
mov
fdivrp
push
jns
scas
mov
js
clc
or
add
add
add
pop
lea
add
ja
add
call
add
mov
jge
cmpsb
clc
sub
clc
inc
clc
stos
mov
adc
sub
add
clc
and
add
fsubs
lcall
xabort
add
add
shlb
and
add
jb
add
sbb
clc
push
add
mov
clc
xlat
fs
mov
push
add
jae
add
clc
call
add
cmp
push
mov
inc
clc
ficomps
clc
nop
sub
add
clc
mov
lret
sahf
dec
pop
push
add
add
mov
clc
inc
clc
lods
movsl
clc
cmp
and
add
add
add
daa
clc
xchg
fidivrl
fisttpl
add
add
mov
clc
mov
jmp
push
pop
or
add
sbb
add
xor
add
sbb
add
arpl
add
sub
inc
add
adc
add
add
jmp
pop
xor
add
stos
lret
cmp
or
clc
mov
add
mov
mov
add
cmp
cmp
mov
aam
xor
add
lcall
add
dec
or
jbe
clc
loopne
icebp
jno
add
add
inc
add
lret
clc
jl
clc
test
in
cmp
add
cmp
xchg
cwtl
jae
add
mov
inc
add
loopne
dec
fwait
test
sbb
clc
xor
inc
clc
pandn
clc
lea
js
add
xchg
mov
push
inc
clc
jno
add
add
jno
add
int3
mov
xor
out
dec
and
sbb
mov
stc
and
clc
int3
fwait
ret
clc
push
add
or
add
mov
clc
fldl
clc
cmp
insb
mov
add
aas
push
add
pop
jb
add
add
mov
add
bound
add
add
in
sti
mov
clc
xlat
cmp
cs
mov
xchg
push
pop
xchg
jbe
cmp
sub
clc
dec
jmp
clc
scas
mov
cmp
lods
or
sub
jg
mov
fimuls
xor
jle
add
push
sbb
lret
jne
add
pop
push
sbb
add
xchg
jge
cmp
clc
fmull
mov
clc
add
add
add
sub
adc
dec
cs
push
mov
xchg
mov
add
add
add
nop
mov
sbb
add
jmp
es
and
add
sar
mov
or
add
sbb
nop
loop
int3
into
bound
add
add
and
add
xor
xchg
pop
clc
rclb
sub
push
push
push
add
or
mov
mov
xor
add
add
movsb
clc
sbb
dec
lahf
sar
add
pop
dec
enter
add
test
dec
jmp
push
inc
clc
mov
mov
add
pusha
add
jbe
test
sbb
nop
pop
mov
cmp
jl
sar
xbegin
mov
clc
sub
mov
add
int3
popf
leave
mov
add
add
in
clc
lahf
sub
add
in
in
xchg
nop
daa
clc
mov
sbb
in
jge
jecxz
jne
or
add
or
aaa
in
jmp
add
cli
mov
sbb
add
add
add
mov
int3
out
mov
add
lahf
pop
mov
icebp
cmp
add
push
pop
inc
add
adc
add
add
sbb
pop
cmp
clc
push
add
repnz
and
add
clc
pusha
add
fldl
add
jmp
adc
clc
fldl2e
idivl
ds
pop
hlt
xchg
test
sar
mov
xbegin
add
clc
mov
add
add
repz
add
clc
or
add
xchg
ljmp
pop
xchg
jmp
clc
and
add
dec
sar
clc
mov
mov
xor
add
add
notl
imul
ficoml
add
mov
test
je
arpl
add
add
mov
cmp
ja
cmp
add
add
mov
loope
test
clc
jae
add
add
adc
add
clc
repnz
clc
nop
mov
test
add
push
dec
int
out
or
clc
repnz
bound
add
add
push
add
add
add
add
cmp
add
add
xchg
sub
mul
clc
test
mov
clc
and
add
add
add
addr16
movsb
clc
mov
dec
xchg
std
pop
in
repz
and
cmp
test
cmp
loope
mov
clc
movsl
clc
cmpsl
clc
cmp
jmp
sub
clc
xchg
push
clc
bound
add
mov
stos
pop
popl
hlt
fdivs
mov
cmp
add
dec
inc
add
lret
pop
das
loopne
cltd
xor
add
cmp
pop
xchg
scas
je
clc
mov
push
clc
jb
add
clc
dec
fisubl
add
xchg
lods
mov
add
or
clc
xbegin
movhps
cmpsb
clc
adc
add
jmp
add
jnp
adc
add
adc
add
or
clc
jne
aad
imul
add
clc
xchg
cmp
call
lea
push
movsl
clc
jecxz
push
clc
fiadds
add
push
jmp
add
icebp
dec
fdivrs
std
mov
clc
mov
add
add
sbb
cmp
clc
xor
add
jmp
pop
mov
fwait
je
and
add
clc
add
mov
add
adc
sti
fadds
clc
adc
add
cmp
add
xchg
add
sub
mov
add
in
call
mov
clc
or
adc
add
shll
add
sub
clc
mov
lea
xchg
jo
add
add
je
clc
adc
mov
test
sub
jge
std
vaddps
divl
inc
add
push
add
cmpsl
clc
lods
out
dec
xchg
cld
imul
add
popa
add
xchg
fadds
add
add
aad
add
shll
add
clc
dec
dec
repnz
roll
add
xchg
enter
add
int
and
xabort
clc
ss
cltd
cmp
clc
sub
je
cltd
lods
loop
and
xchg
stos
call
cmp
std
fwait
ds
add
lods
sub
add
push
inc
add
test
pop
mov
add
add
pop
fsubrl
dec
gs
xor
into
add
add
pop
mov
clc
sbb
movsl
clc
xchg
mov
lock
clc
cmc
ljmp
add
mov
pop
bound
add
xchg
out
lahf
hlt
push
xchg
mov
adc
repnz
sarb
hlt
jo
add
lock
clc
xchg
dec
add
add
add
xchg
pop
int
and
xchg
or
dec
sar
mov
clc
addr16
pop
push
pop
clc
jg
push
cmp
jne
mov
arpl
add
pop
fwait
test
sahf
xor
add
add
sub
out
jg
dec
mov
test
arpl
add
test
sbb
clc
xchg
enter
add
loope
push
clc
or
add
clc
xabort
mov
add
sbb
add
cmp
movsl
clc
inc
clc
and
add
add
clc
repnz
add
sar
clc
pop
push
jg
push
cmp
lret
and
add
add
sub
mov
mov
outsb
pop
fs
pop
mov
cmpsl
clc
cmp
add
mov
clc
dec
fimull
add
lret
stos
arpl
add
add
push
add
cmp
addr16
cmpsb
clc
jmp
cmp
add
cmp
add
push
add
mov
inc
add
adc
add
add
mov
mov
adc
add
lcall
sub
clc
sub
cld
fimull
jge
lret
push
fisttps
in
popa
add
adc
add
add
jo
add
clc
movsb
clc
mov
clc
popa
add
sar
movsl
clc
sub
add
clc
lock
mov
fs
cmp
cmp
clc
call
aas
pop
pop
dec
pop
mov
fistl
stos
insl
and
in
mov
lret
clc
shr
adc
add
xor
add
cmp
scas
mov
test
imul
add
clc
and
add
add
outsb
mov
pop
sub
add
pop
mov
xchg
scas
mov
nop
into
sbb
jmp
xchg
lock
test
ja
add
and
add
or
clc
inc
add
jno
add
clc
lret
add
and
mov
clc
loop
mov
fs
cmpsb
clc
or
sub
inc
add
out
add
add
add
inc
add
or
cmp
add
push
jbe
clc
cmp
add
add
repz
add
sarb
cmp
lcall
add
mov
clc
mov
inc
add
js
xchg
fdivs
cmpsb
clc
xor
add
aad
inc
clc
pop
jmp
adc
add
add
xchg
mov
jbe
clc
mov
mov
jmp
pop
fwait
jecxz
cmp
cmpsb
clc
aaa
jb
add
or
pop
imul
pushf
xchg
add
xor
fistps
add
repz
add
clc
cltd
nop
sar
add
pop
mov
dec
push
fdiv
adc
mov
add
jecxz
sub
add
out
popf
loope
sub
ud2
add
cs
clc
loope
inc
clc
push
add
mov
mov
xchg
xchg
cld
test
jecxz
cmp
add
ja
mov
fcmovnbe
sahf
shr
adc
clc
mov
mov
stos
mov
repz
clc
push
xchg
dec
pop
cli
xchg
lea
inc
add
ja
add
shll
pop
jb
add
jmp
adc
adc
add
arpl
add
push
add
add
sti
xchg
push
bound
add
or
add
jbe
clc
cmp
add
sar
icebp
add
xor
add
mov
sbb
add
cmp
add
ror
enter
out
push
add
outsb
fiaddl
add
jge
jmp
ja
enter
pop
das
rcrb
cmp
add
xchg
cltd
and
add
clc
and
add
lcall
add
inc
clc
add
outsb
push
aad
add
insl
jecxz
sub
cmp
sub
jle
sub
add
mov
clc
cli
inc
clc
inc
clc
mov
mov
dec
scas
jmp
add
cmp
add
add
xchg
cli
popf
jp
outsl
jo
add
in
pushf
adc
add
clc
pop
lret
test
pop
and
add
add
mov
mov
lock
inc
clc
repz
in
fisubrl
lock
add
mov
fs
adc
add
scas
or
pop
pop
pop
sti
mov
add
mov
clc
cmp
add
inc
clc
ljmp
push
add
stos
sbb
data16
adc
add
frstor
xchg
inc
add
push
insb
mov
jecxz
push
add
xchg
cld
repz
into
iret
mov
xor
cltd
mov
pop
cmp
add
fimull
lods
imulb
insl
daa
clc
mov
nop
data16
test
mov
add
out
jne
dec
and
clc
mov
add
in
call
or
xbegin
ficoml
add
xchg
imul
sbb
add
pusha
add
sbb
sti
loop
mov
add
cmpsb
clc
sub
clc
ja
clc
std
testl
rcr
jg
push
push
gs
adc
add
jbe
clc
push
pusha
add
fnstenv
push
cmp
cmp
aad
add
mov
add
add
test
cmpsb
clc
add
add
cmp
jl
or
push
mov
clc
sub
clc
adc
add
sbb
aaa
pop
mov
jbe
add
jbe
sahf
sbb
inc
add
test
or
mov
mov
jne
clc
in
xbegin
xchg
xchg
loopne
imul
adc
add
mov
add
add
clc
lock
add
jmp
mov
cmp
cmp
add
lea
clc
or
dec
imul
jns
nop
push
jbe
ss
or
clc
in
and
jno
add
sbb
add
cs
clc
push
out
xbegin
clc
shll
mov
ja
mov
into
test
insl
scas
mov
repnz
mov
clc
sbb
negl
clc
lahf
adc
xlat
xchg
mov
fcmovnb
clc
dec
outsb
popf
mov
clc
xchg
mov
dec
jmp
cmp
lods
ss
clc
push
popf
lock
push
add
and
add
add
or
adc
add
call
pop
mov
sbb
ret
clc
mov
fwait
xor
cmp
inc
clc
jp
enter
mov
clc
sti
jb
add
add
add
adc
add
ljmp
dec
and
add
jl
shr
pop
clc
cmpsl
clc
pop
repz
clc
pop
clc
jle
and
add
ja
and
xchg
movsb
clc
mov
daa
clc
xor
add
int3
lods
jne
and
add
cmp
clc
pop
cltd
outsl
leave
cld
mov
add
cmp
sar
repz
mov
dec
xchg
cwtl
jl
clc
xabort
clc
dec
push
mov
test
lods
in
cmp
push
xchg
int
xchg
in
push
insb
out
mul
clc
stos
sub
jl
add
add
jns
in
fs
inc
clc
test
adc
add
pop
rolb
fisubrs
clc
mov
clc
out
sar
add
hlt
or
sbb
jae
add
fimull
add
push
inc
add
movsl
clc
aam
aaa
pop
fsts
add
add
cmp
add
repz
repnz
aas
inc
add
sbb
clc
enter
clc
xchg
mov
adc
add
pop
fists
add
cmp
xor
mov
sbb
jle
clc
fdivs
jmp
clc
pusha
add
lea
adc
clc
ja
jp
frstor
add
xchg
xchg
xchg
pop
add
add
loope
sbb
out
mov
add
add
add
repnz
clc
push
add
hlt
xchg
mov
add
push
add
call
std
cvtps2pd
add
clc
call
cmp
loop
mov
adc
add
cmp
sub
and
add
pop
xlat
loope
fs
mov
clc
sti
enter
xor
add
outsl
mov
mov
jge
fcompl
sub
in
xchg
cmp
sar
xbegin
mov
clc
jg
dec
jge
clc
push
or
add
mov
xor
add
clc
sbb
fiadds
clc
stos
icebp
sub
imul
fs
stos
mov
adc
add
imul
mov
add
dec
jb
add
cmp
or
cltd
mov
data16
scas
mov
aaa
fisttps
out
dec
inc
clc
xbegin
mul
clc
cmp
push
ljmp
mov
hlt
mov
add
add
add
in
in
popf
mov
hlt
adc
add
clc
pop
pop
dec
mov
cmp
stos
pop
xor
add
jnp
repnz
add
add
add
cmp
fucomi
dec
jle
cmp
clc
xchg
shl
clc
sub
jne
add
add
mov
pop
clc
push
dec
xor
add
pushf
ja
clc
xchg
cmp
add
lock
add
cmp
leave
cmp
add
clc
sbb
clc
js
test
sub
push
cmp
clc
cmc
push
pusha
add
pop
pop
xbegin
add
mov
clc
cmp
inc
clc
popf
or
movsl
clc
sbb
add
push
add
fxch
mov
out
icebp
mov
loopne
sarb
inc
add
ja
in
or
cmp
sbb
dec
outsl
sar
and
add
cmp
mov
lea
add
add
int
inc
clc
xor
add
popf
sarl
movsl
clc
repz
clc
insb
mov
add
mov
dec
and
add
fsts
fiaddl
clc
push
add
pop
clc
sbb
xchg
push
clc
dec
adc
push
add
or
mov
jl
shrb
jne
pop
clc
sbb
ss
cmpsl
clc
dec
ljmp
push
clc
movsl
clc
jnp
clc
in
jle
gs
clc
mov
sub
ja
mov
cmp
daa
clc
mov
add
mov
dec
int3
jb
add
das
ficomps
imul
lret
dec
and
add
leave
cs
daa
clc
jnp
xchg
loopne
lea
add
scas
getsec
jmp
mov
daa
clc
cli
int
cmp
xor
data16
mov
add
xchg
lods
pop
aas
pop
sub
clc
ljmp
insl
cmp
clc
fwait
xabort
stc
dec
mov
add
add
add
lret
xor
add
add
adc
add
ds
add
add
dec
fcmovnb
clc
movsb
clc
cmp
clc
xabort
jmp
cs
arpl
add
add
add
clc
xchg
addr16
mov
lods
pop
gs
imul
sub
add
clc
lods
mov
add
fmull
pop
icebp
dec
inc
add
and
add
inc
add
jge
jno
add
add
mov
cltd
jnp
clc
jle
clc
push
add
jmp
mov
clc
cmp
add
mov
push
add
jmp
clc
sbb
clc
in
push
or
add
ret
clc
ljmp
clc
inc
clc
xor
add
clc
aas
popf
js
clc
mov
hlt
rclb
xchg
mov
testl
add
lcall
push
cli
pusha
add
dec
cli
push
xor
xabort
add
xor
add
clc
push
mov
pushf
pop
clc
cmp
clc
ds
bound
add
add
mov
push
leave
dec
inc
add
sar
add
outsb
push
clc
jbe
sub
clc
jnp
and
fbstp
jecxz
daa
clc
xor
add
push
add
mov
fisttps
clc
sbb
clc
das
xabort
popf
adc
clc
bound
add
inc
add
dec
test
cmpsb
clc
dec
add
add
loop
int
xlat
lea
add
or
xor
add
jge
cmp
sbb
add
sub
jge
mov
add
xor
clc
mov
aam
add
jae
add
stos
in
or
xor
cmpsb
clc
fcomps
lret
mov
pop
arpl
add
mov
js
sub
inc
add
popa
add
cld
mov
incl
leave
jg
ffree
clc
add
add
ljmp
movsb
clc
sbb
xchg
movsl
clc
jmp
clc
push
inc
clc
push
mov
add
dec
inc
add
and
sbb
add
add
add
jg
pop
clc
stos
mov
add
push
add
lret
testl
mov
add
call
or
and
add
int
out
aam
add
pushf
push
in
cmc
int3
xchg
xchg
jle
aam
sub
add
arpl
add
in
popa
add
inc
clc
clc
bound
add
add
jae
add
add
insb
xchg
lea
add
add
add
push
movsb
clc
xor
add
add
add
add
ret
mov
add
adc
clc
fsubrl
mov
mov
clc
icebp
sahf
dec
inc
clc
xchg
enter
push
add
inc
clc
cmp
cltd
push
dec
cli
in
and
add
cmp
jae
add
clc
scas
mov
push
int3
xchg
xchg
sahf
add
add
clc
mov
add
add
add
add
cmp
or
pop
imul
fldt
ljmp
add
add
and
add
mov
ja
pop
add
add
cmp
add
sub
xor
add
clc
lcall
sar
add
mov
clc
fwait
pop
pop
sbb
add
clc
push
add
pop
pminsw
bound
add
add
clc
popa
add
sub
adc
add
clc
loope
dec
cmp
adc
clc
pop
je
clc
out
mov
sahf
xchg
shrl
add
add
call
inc
add
push
mov
pop
push
add
dec
ljmp
xchg
jle
add
ret
push
stc
cmpsb
clc
lcall
jecxz
xchg
cwtl
xor
push
or
push
add
sub
ds
rcl
clc
mov
clc
clc
jmp
clc
ja
add
aad
push
jmp
add
nop
push
add
and
add
clc
pop
rorb
out
daa
clc
or
test
and
mov
clc
icebp
outsb
pop
inc
clc
scas
movsb
clc
jecxz
repz
pop
add
add
out
cltd
sbb
add
insl
clc
movsl
clc
outsl
ficomps
add
inc
clc
rol
clc
rcr
mov
iret
pop
clc
aaa
cmp
clc
lods
xchg
pushf
push
jnp
push
cwtl
jle
ja
cmp
loop
mov
clc
jno
add
cmp
add
pop
dec
inc
add
jne
movsb
clc
call
add
out
pop
imulb
jb
add
repz
xchg
jno
add
clc
inc
add
jg
ja
clc
jle
sahf
inc
clc
mov
mov
clc
cmp
aad
pop
xchg
xchg
cmp
clc
and
add
pop
sbb
jno
add
ja
xor
add
cmp
mov
xchg
sahf
cltd
pusha
add
jp
clc
gs
xchg
push
mov
push
add
movsb
clc
xor
add
clc
push
add
insb
mov
clc
loopne
xor
add
clc
sar
add
add
clc
in
cltd
pushf
jae
add
add
clc
cmp
clc
mov
hlt
cmp
jle
clc
push
mov
stos
push
jbe
hlt
sbb
clc
stos
mov
addr16
insl
jb
add
sti
cmp
test
movsl
clc
out
dec
sbb
clc
sbb
mov
pop
or
xchg
push
add
add
pop
clc
movsl
clc
out
xabort
sbb
inc
add
cmp
cmpsl
clc
xor
clc
dec
ds
sahf
sarb
clc
xabort
cwtl
std
int
cmp
mov
sbb
mov
out
push
mov
clc
pop
rol
clc
into
mov
inc
clc
push
clc
cmp
das
jg
sub
clc
mov
jb
add
jg
add
mov
jno
add
pop
cs
add
jle
clc
dec
lock
or
frstor
add
xor
add
clc
mov
hlt
xchg
or
push
xor
sbb
addr16
mov
add
jb
add
or
sub
cmp
inc
clc
test
into
mov
clc
jae
add
xchg
cmp
data16
mov
clc
lock
clc
adc
add
clc
inc
add
jne
lods
adc
add
jb
add
clc
mov
lcall
clc
xchg
add
add
clc
dec
in
mov
test
test
bound
add
add
pop
shr
iret
push
out
sub
xchg
add
add
clc
mov
clc
sub
leave
fdiv
xchg
inc
clc
dec
push
inc
add
and
add
clc
scas
in
repnz
push
add
inc
clc
inc
add
jg
test
or
inc
clc
daa
clc
sbb
xchg
mov
mov
sbb
mov
add
lcall
pop
push
dec
loopne
xabort
cmc
popf
aad
clc
pop
lret
clc
sar
mov
inc
add
and
cmp
or
add
add
out
in
std
cmpsl
clc
push
imul
and
add
add
mov
inc
clc
mov
ret
clc
movsl
clc
lret
xor
add
sbb
add
add
dec
mov
clc
mov
clc
sar
add
xchg
jb
add
add
add
add
add
add
mov
add
cld
or
clc
push
pop
sbb
add
rorl
clc
mov
pop
and
add
xchg
xor
and
movsb
clc
cmpsl
clc
stos
adc
add
negl
dec
es
cmc
mov
adc
add
add
cmp
mov
inc
add
out
ret
clc
pop
sahf
leave
mov
xor
add
add
out
mov
xabort
ret
mov
nop
jmp
data16
push
inc
clc
mov
clc
jecxz
push
fstpt
data16
sbb
jle
add
lods
in
mov
and
imulb
jno
add
add
clc
sub
add
adc
add
iret
jge
cmp
movsl
clc
or
pop
inc
add
jp,pn
mov
cmp
arpl
add
add
add
nop
xchg
push
add
lock
add
xor
clc
cmc
fwait
int
sbb
loop
xor
add
loopne
mov
mov
into
jle
outsb
xbegin
pop
das
arpl
add
cmp
push
add
gs
ss
xchg
sar
jnp
stos
push
add
gs
dec
xor
add
xchg
jge
clc
movsl
clc
aam
repz
and
add
add
clc
lea
clc
sbb
add
ds
mov
insl
in
or
test
clc
pushf
sbb
jmp
clc
add
add
or
xor
add
jecxz
mov
adc
add
add
inc
clc
inc
clc
aad
data16
push
add
sub
add
xor
add
add
add
fldenv
jle
add
sub
outsl
push
add
add
mov
jmp
fiadds
xchg
rolb
rolb
aad
add
add
cmp
add
call
jmp
mov
in
add
nop
jmp
add
fbld
ret
iret
cmp
ret
clc
push
hlt
lahf
stos
dec
aas
cli
popa
add
int3
lahf
jecxz
jbe
dec
fnstsw
test
add
test
pop
jnp
clc
mov
add
cltd
into
leave
arpl
add
std
push
mov
xchg
ret
sub
out
jae
add
pusha
add
sbb
pop
call
cmp
arpl
add
clc
cmp
enter
nop
jmp
lret
add
shlb
js
pop
and
add
in
mov
ficompl
xbegin
cmp
inc
clc
jae
add
loope
stos
imul
inc
clc
mov
mov
jmp
mov
push
sbb
clc
shll
add
sub
inc
clc
dec
inc
clc
in
mov
clc
daa
clc
mov
fs
lods
dec
fs
xchg
icebp
xrstor
movq
xbegin
mov
clc
push
add
push
mov
xchg
ret
mov
add
mov
push
add
nop
jmp
jge
jg
clc
push
add
push
xchg
popa
add
sub
or
mov
and
add
add
mov
push
add
jnp
clc
lcall
shll
add
clc
fs
cmp
push
hlt
out
pop
cmp
sub
fbld
adc
add
clc
stos
mov
and
add
je
dec
outsb
aas
or
clc
push
add
mov
enter
or
add
shlb
cmp
or
in
push
dec
nop
jmp
lea
jns
xchg
imul
add
add
cmp
clc
or
mov
clc
lahf
xchg
inc
add
cmp
and
test
nop
jmp
mov
clc
fisubl
clc
sbb
adc
add
clc
test
pop
stos
cld
negb
loope
xchg
cmp
int3
xabort
iret
or
add
mov
jecxz
leave
xbegin
ret
clc
sbb
jae
add
xchg
in
ret
clc
nop
fsubr
lods
in
mov
sbb
nop
jmp
add
and
aad
mov
orps
cmp
data16
jne
add
ja
lea
add
add
loopne
ss
add
xor
add
sub
iret
dec
pop
mov
jmp
sbb
bound
add
clc
ja
add
and
add
add
stc
js
add
out
shlb
clc
dec
or
clc
sbb
cs
xlat
adc
add
data16
je
clc
xchg
nop
xchg
dec
je
pop
insl
clc
mov
pop
clc
mov
add
cmp
mov
punpcklwd
add
or
adc
add
clc
inc
add
jae
add
pop
cwtl
inc
clc
clc
xor
add
jmp
jge
mov
jmp
push
lret
and
add
iret
or
cmp
dec
outsl
cmp
dec
js,pn
push
and
add
jg
jle
clc
mov
mov
aad
add
pop
mov
bnd
jmp
lods
shlb
test
push
dec
add
add
and
nop
jmp
mov
dec
fsubrp
pop
clc
sahf
cmp
add
or
pop
sub
cmpsl
clc
adc
clc
je
add
ds
add
inc
clc
jl
xor
add
mov
bound
add
clc
icebp
xchg
sbb
push
lret
mov
sbb
add
fwait
cmp
aas
call
icebp
xbegin
arpl
add
divb
add
out
jle
add
in
dec
pop
mov
add
and
add
add
mov
add
nop
jmp
stc
lods
and
addr16
jmp
dec
data16
xor
add
nop
jmp
icebp
add
add
fwait
mov
jmp
cmp
add
xchg
cmp
clc
and
fdiv
in
outsb
dec
push
clc
shll
iret
adc
clc
cmc
and
add
cmp
and
sub
fsubrs
xchg
shll
add
cmpsb
clc
xchg
stc
in
pop
clc
adc
add
mov
clc
or
add
inc
add
arpl
add
clc
fidivrl
jnp
clc
fisubrl
clc
mov
movsb
clc
inc
add
adc
push
pop
js
clc
add
rcll
dec
movsl
clc
mov
clc
pop
inc
clc
not
jns
xchg
xchg
imul
cmp
adc
add
lret
clc
scas
xlat
xchg
add
nop
outsb
and
add
clc
push
imul
into
aad
dec
cld
and
add
xchg
or
adc
xabort
in
or
je
mov
xor
add
clc
or
xbegin
dec
pushf
testb
mov
xchg
movsb
clc
gs
dec
lock
mov
mov
dec
das
pop
xchg
movsl
clc
mov
xor
nop
jmp
push
xchg
mov
and
clc
mov
stos
pop
sub
add
xchg
es
inc
clc
sbb
pop
lods
xchg
add
add
push
pusha
add
stos
inc
clc
in
sub
aas
xchg
jp
test
lcall
add
jl
ret
clc
xbegin
jp
lret
mov
or
lods
xchg
loope
inc
add
mov
add
aad
add
bound
add
clc
lret
cmp
sub
xchg
push
mov
nop
jmp
add
clc
xchg
xabort
jb
add
clc
inc
clc
mov
cwtl
fldl
add
add
or
cli
arpl
add
int3
roll
add
fmull
inc
add
add
sub
clc
inc
clc
cmpsb
clc
push
int
je
data16
imul
add
or
mov
push
add
data16
stc
gs
lcall
jnp
sahf
mov
cli
das
mov
dec
pushf
cmp
arpl
add
clc
push
cmpsl
add
and
lea
add
lods
jge
mov
add
add
add
add
add
add
inc
clc
sub
inc
clc
dec
in
cmp
cmp
mov
sub
clc
jne
out
movsb
clc
popl
add
lock
pop
push
mov
mov
ds
rcll
add
popf
pop
clc
ja
add
mov
clc
nop
clc
lods
jl
enter
stos
rorb
gs
cwtl
fists
stos
push
out
and
add
and
add
fisttpl
jg
call
mov
xchg
ret
data16
cmp
cmp
add
and
add
dec
mov
add
dec
jmp
rcll
jmp
cmp
xor
lock
test
mov
bound
add
clc
ret
clc
insb
je
pop
jo
add
clc
jae
add
scas
and
add
dec
push
mov
xchg
ret
dec
xor
ficomps
jecxz
aad
fs
jb
add
push
mov
lcall
add
loop
xchg
xchg
fdiv
clc
mov
and
jmp
add
or
dec
mov
xor
clc
dec
mov
lock
xlat
sar
add
sar
testb
sbb
push
add
or
sub
clc
scas
addr16
jno
add
xor
add
add
lret
add
lret
nop
jmp
jne
inc
mov
mov
int3
loope
xchg
lods
pop
jp
stos
call
test
jbe
cmp
add
repz
add
femms
mov
add
sbb
adc
add
add
jae
add
add
xabort
mov
lock
clc
int3
aam
clc
mov
mov
aad
xchg
push
jno
add
add
add
xor
add
cwtl
add
push
xor
nop
jmp
mov
jge
and
mov
or
jbe
out
hlt
and
add
add
sub
loope
cmpsb
clc
cmp
clc
or
in
add
add
and
mov
ljmp
jmp
jne
loopne
xchg
loopne
int
add
pop
shll
add
dec
repz
and
add
mov
mov
enter
xor
clc
sarb
clc
daa
clc
sbb
xor
mov
clc
mov
mov
clc
xor
add
cli
lret
mov
bound
add
loopne
popa
add
outsl
xor
add
inc
clc
adc
add
add
int3
cmc
mov
ljmp
push
add
xchg
jmp
adc
mov
add
add
clc
jb
add
add
mov
in
or
aaa
std
rcrb
stos
dec
test
ja
clc
add
add
xor
add
push
cwtl
jno
add
add
xlat
inc
add
or
mov
clc
mov
add
clc
jmp
mov
nop
jmp
shrb
test
pop
lret
test
add
fdivs
pop
xor
add
mov
clc
test
push
fisubl
add
test
xchg
lret
lock
add
mov
pop
add
nop
jmp
jns
add
sbb
add
xchg
mov
jo
add
mov
xchg
iret
inc
add
sbb
clc
inc
add
pop
cmp
add
scas
xchg
data16
push
add
mov
mov
xchg
ret
add
add
jmp
mov
dec
call
push
xor
add
jp
popf
test
add
cmpsb
clc
imul
mov
imul
clc
loop
dec
pop
sarb
clc
test
aaa
movsl
clc
loopne
and
add
push
add
fld
clc
movsb
clc
cmp
inc
clc
pop
dec
sbb
add
nop
jmp
inc
cltd
je
shll
add
mov
pop
push
clc
push
xchg
int3
push
add
pop
lods
scas
or
clc
xor
add
add
xor
inc
clc
mov
rcrl
push
xchg
fs
mov
imul
jb
add
add
das
pop
jo
add
add
sbb
shlb
add
dec
jbe
mov
or
add
inc
add
lret
clc
pop
scas
pop
fldl2t
outsb
mov
mov
add
jg
jmp
add
fisubrs
cmpsl
clc
inc
clc
mov
clc
mov
inc
add
inc
clc
lret
xchg
adc
add
int3
cmp
add
clc
sbb
cmp
xbegin
adc
add
inc
add
outsb
adc
mov
xchg
ret
add
mov
call
nop
jmp
jns
add
sub
adc
add
add
fmull
clc
xlat
add
add
add
nop
jmp
add
add
mov
jecxz
xor
int3
xor
add
jne
fbstp
add
clc
imul
divb
insb
stos
aaa
pop
jg
in
out
mov
and
add
add
mov
int3
fdivrs
add
inc
clc
and
add
add
sub
xchg
xor
add
clc
decl
mov
xchg
ret
push
add
clc
pop
sbb
add
inc
add
cwtl
adc
add
xor
add
or
in
enter
pop
cmpsb
clc
test
xor
add
imul
imul
xchg
leave
mov
mov
add
add
and
add
add
cmp
aam
xchg
sbb
inc
add
outsb
loope
out
movsl
clc
push
out
inc
clc
cld
cmp
push
popa
add
ret
clc
push
add
xchg
testb
mov
push
mov
xchg
ret
or
adc
jae
add
push
mov
xchg
ret
icebp
icebp
mov
clc
test
fadd
clc
sub
add
loope
movsl
clc
loop
push
xchg
mov
sub
clc
cmp
clc
and
add
cwtl
scas
cmp
lret
repnz
mov
test
outsb
pop
xabort
sub
add
mov
inc
clc
xor
add
add
or
gs
stos
in
inc
add
std
mov
add
or
clc
in
sbb
rclb
add
mov
pop
sti
ljmp
add
nop
jmp
fiadds
lea
repz
pop
negl
es
sbb
mov
add
inc
add
ret
add
jmp
movsl
clc
jo
add
clc
jp
xbegin
inc
add
lods
fcoml
clc
push
lods
fnstcw
imul
mov
clc
out
sar
add
pop
cli
sub
add
sbb
test
notb
add
ret
clc
rcl
mov
add
add
inc
clc
push
call
push
inc
add
sar
clc
cltd
push
clc
xchg
loopne
sub
sub
scas
icebp
push
mov
nop
jmp
icebp
mov
in
add
cwtl
jbe
cmp
adc
add
add
adc
add
daa
clc
cmp
xbegin
mov
jle
add
add
int
and
add
clc
cmp
clc
loope
cmp
clc
fdivr
mov
nop
jmp
adc
dec
xor
clc
mov
push
mov
xchg
ret
fsubp
mov
lret
idivl
clc
leave
cwtl
and
add
mov
jne
loope
iret
mov
add
nop
jmp
cmp
or
add
js
scas
lahf
test
test
repnz
enter
clc
push
icebp
sarb
push
push
push
mov
xchg
ret
shlb
add
ljmp
inc
and
jmp
lea
mov
ret
clc
xchg
xor
lret
shl
clc
xor
add
pmuludq
clc
push
clc
adc
add
add
adc
add
arpl
add
add
add
xlat
sub
mov
sub
test
sub
xlat
lods
sbb
in
out
sub
adc
add
in
dec
lret
aam
add
sub
out
add
add
clc
aaa
cwtl
dec
sub
xchg
lock
sar
in
add
clc
sbb
sub
mov
clc
mov
xchg
cltd
das
cmc
push
in
add
lods
lods
add
rolb
sar
clc
fistl
add
mov
pop
or
insb
imul
sbb
clc
je
xor
mov
nop
jmp
add
rcrb
or
and
add
int
clc
or
es
xchg
or
adc
add
nop
jmp
jge
add
pop
popa
add
jb
add
aad
xchg
daa
clc
inc
add
sub
add
add
add
sbb
push
push
nop
jmp
fisttps
jge
and
add
add
test
push
add
iret
xchg
cmp
mov
clc
push
add
add
mov
add
movsb
clc
lahf
in
aad
xchg
insb
sub
clc
xchg
lret
out
mov
inc
clc
sahf
test
push
ret
clc
and
add
rcr
add
add
in
mov
add
cmp
xlat
mov
sbb
inc
clc
jp
clc
cmp
fs
dec
out
cmp
add
lret
pop
mov
clc
and
add
add
incb
ret
clc
or
shll
add
ss
jmp
jmp
adc
add
mov
xor
add
or
add
in
cmp
jle
or
add
cmp
add
lcall
add
repnz
scas
xchg
jbe
clc
jns
add
xor
add
clc
jnp
clc
adc
push
add
repz
add
clc
cmp
jb
add
clc
add
add
outsb
push
add
jns
clc
mov
repz
sar
xchg
fistps
mov
repnz
ret
loope
popa
add
test
add
add
into
outsb
mov
jne
clc
aam
cmp
cmp
dec
inc
clc
xchg
out
movsl
clc
xchg
fsubrl
pop
inc
clc
icebp
cmp
dec
adc
add
push
jecxz
aam
push
into
jns
stos
inc
add
loope
sar
add
lahf
push
add
mul
clc
rdmsr
add
movsb
clc
jp
add
cmp
add
add
nop
jmp
mov
clc
call
data16
or
cmp
nop
sub
aaa
je
cli
cwtl
mov
and
mov
dec
pop
fldcw
out
imul
sub
add
and
add
add
sar
mov
shll
xor
add
adc
add
add
shrl
add
xchg
aam
clc
loop
leave
push
mov
fdiv
jno
add
hlt
mov
arpl
add
adc
add
jmp
add
or
xchg
pop
jnp
clc
in
ja
add
stc
addr16
push
add
nop
jmp
and
dec
testb
clc
cmpsb
clc
fsubrs
xor
imul
sarl
clc
xlat
xlat
popa
add
sar
clc
push
adc
add
add
sub
clc
fs
cwtl
bound
add
add
sub
push
clc
mov
cmp
clc
data16
into
xor
cmp
mov
add
add
add
mov
clc
out
jmp
and
test
fwait
push
movsl
clc
sbb
clc
int
xlat
mov
mov
nop
jmp
xor
and
add
add
loopne
push
ds
cmpsl
clc
and
clc
xchg
lret
hlt
testl
add
fwait
cmp
mov
clc
clc
mov
push
adc
add
lods
xor
rorb
add
clc
inc
add
lea
clc
sbb
adc
add
sar
inc
clc
mov
je
sbb
add
add
mov
pop
adc
inc
add
and
add
clc
sbb
cmpsb
clc
cmpsl
clc
cs
xor
add
add
scas
negb
std
out
je
clc
sbb
clc
iret
loopne
sbb
clc
imul
fistps
push
jmp
add
mov
in
sarl
add
adc
in
int
icebp
cmpsb
clc
dec
outsl
scas
stc
mov
clc
jne
mov
lods
inc
add
jo
add
aaa
sub
add
jmp
jp
fs
insl
adc
xchg
pop
xor
clc
iret
sub
clc
loopne
mov
mov
add
scas
inc
clc
sub
sbb
add
gs
decl
ds
add
push
int3
and
repnz
clc
pop
scas
inc
add
and
add
push
dec
shl
clc
pusha
add
jns
loopne
jb
add
ljmp
or
pop
nop
jmp
add
dec
rcl
mov
dec
sub
ss
adcb
fiadds
lock
add
pop
xchg
push
hlt
jecxz
pop
push
add
mov
push
clc
or
add
sbb
inc
clc
cmp
clc
imul
pop
clc
or
out
hlt
fisubs
add
clc
cmpsl
clc
mov
fnstsw
clc
not
test
test
clc
loop
int
clc
and
add
add
scas
inc
add
sbb
add
xor
add
and
add
mov
push
jnp
and
add
leave
mov
pop
aam
mov
fisubrl
dec
adc
add
xor
add
add
add
sub
pop
xor
clc
xor
add
mov
and
data16
call
lret
clc
cmc
pop
sbb
pop
cmc
push
clc
data16
cmp
cld
sub
into
lea
add
rcrb
xchg
ret
mov
mov
add
lret
addr16
xlat
and
lods
jnp
cmp
clc
scas
icebp
cmp
out
fldenv
jmp
test
nop
jmp
add
jne
mov
pop
cmp
clc
cmp
clc
ds
ret
clc
mov
sar
mov
nop
jmp
add
stc
mov
xchg
sbb
jmp
sub
cld
mov
pop
push
add
lret
and
add
icebp
jnp
xor
add
jnp
cld
std
jecxz
lahf
pop
mov
push
push
mov
xchg
ret
jae
mov
ljmp
adc
bound
add
clc
jmp
mov
nop
jle
mov
lcall
clc
jecxz
jmp
aam
add
pop
lcall
jmp
stc
cltd
push
mov
stc
xor
add
int
aas
mov
add
add
add
rcll
loopne
and
adc
add
xchg
dec
xchg
ss
dec
dec
push
cmp
fcoms
add
clc
or
clc
pusha
add
sbb
test
icebp
add
push
add
inc
clc
cmc
dec
or
add
int3
add
add
xabort
xchg
out
dec
inc
clc
inc
add
xabort
cld
adc
add
repz
jl
jae
add
stc
test
add
pusha
add
test
iret
fldl
add
ds
xlat
mov
incb
sub
loopne
xchg
out
cmp
in
lret
cwtl
cs
add
out
iret
mov
clc
stos
push
push
pop
lret
es
out
sub
clc
xchg
lods
in
std
cwtl
out
inc
add
xor
fldl
sbb
sbb
clc
push
push
add
xor
add
mov
clc
mov
mov
add
add
adc
add
loop
imulb
clc
adc
add
fs
ja
add
clc
clc
push
add
pop
fdivl
xor
clc
lods
pusha
add
mov
push
add
ljmp
push
add
inc
add
popa
add
dec
loope
sti
add
add
jo
add
out
sbb
add
shlb
xchg
in
je
jbe
cli
mov
sbb
mov
add
add
clc
or
add
inc
add
mov
mov
ja
mov
add
add
xor
add
popf
push
xlat
xor
lea
aad
mov
sbb
nop
jmp
stc
mov
xchg
or
cmp
push
scas
xchg
fisttpll
xchg
lahf
cmc
mov
mov
data16
loopne
xchg
clc
ja
clc
xchg
data16
or
clc
sbb
add
mov
mov
add
inc
clc
mov
sub
fadds
add
push
add
mov
adc
add
clc
lahf
xor
push
add
into
gs
cmp
add
add
xor
add
sar
mov
add
bound
add
addr16
push
lods
and
add
into
leave
cmp
clc
cs
pop
fcmove
sub
rcrl
stos
nop
jmp
push
repz
int3
pop
aad
jne
shrl
add
add
ret
add
cmp
mov
push
dec
cmp
clc
das
aas
sub
fisttps
pop
clc
outsl
int
clc
pop
clc
inc
add
sbb
cmp
or
loopne
mov
add
sbb
add
or
pop
xor
lret
or
add
add
clc
into
es
leave
std
es
or
push
jnp
mov
push
xchg
xor
add
fdivr
add
nop
jmp
add
add
and
cltd
popf
cmp
clc
and
add
jg
scas
cld
rcl
loopne
xor
add
hlt
add
nop
jmp
mov
clc
or
push
mov
mov
xchg
ret
add
test
sub
mov
out
xor
test
mov
clc
mov
fdivrs
mov
push
dec
daa
clc
add
add
mov
xor
add
jecxz
adc
cmp
ret
clc
xchg
xor
ret
clc
jns
clc
test
data16
in
pop
mov
clc
pop
xor
movsb
clc
push
addr16
or
jnp
jae
add
add
dec
test
mov
xchg
fs
xchg
data16
and
add
mov
ss
or
clc
mov
enter
insb
out
mov
add
in
mov
add
in
fwait
pop
cltd
xor
add
add
adc
add
add
nop
jmp
cltd
stc
in
xchg
push
mov
and
add
and
add
and
add
clc
jecxz
xabort
clc
scas
mov
clc
arpl
add
mov
clc
outsl
and
icebp
add
add
add
cmp
pop
movsl
clc
pop
push
mov
xchg
ret
lock
rcrb
stos
repnz
mov
add
push
jbe
clc
ror
pop
sub
clc
mov
clc
mov
add
std
popa
add
pop
jle
sub
gs
jbe
clc
fstps
imul
jecxz
adc
add
xchg
cli
call
add
sub
adc
add
jne
add
in
scas
or
or
xchg
cmp
clc
pop
sbb
out
mov
popa
add
mov
roll
dec
in
fisubs
add
xchg
outsb
decl
inc
add
test
sarb
clc
in
insb
addr16
pop
cs
dec
pop
test
dec
mov
dec
pop
push
clc
fs
rcrl
clc
inc
clc
add
add
add
xor
add
push
add
pop
ljmp
inc
add
mov
pop
sbb
in
decl
test
cmp
add
add
mov
cmp
add
clc
sub
repnz
sbb
add
xchg
out
ret
clc
clc
stos
cmp
adc
add
add
sbb
add
out
sub
dec
stc
xchg
xor
add
clc
mov
inc
clc
ja
mov
sub
es
mov
sar
push
add
stos
xchg
cmp
clc
cmp
push
add
sub
pop
cmp
jp
clc
jp
clc
sbb
push
clc
ja
add
jg
sbb
mov
xchg
ret
int3
and
lods
mov
repnz
divb
sub
sti
aam
add
sbb
sub
adc
add
clc
cmpsb
clc
sbb
clc
lret
push
jnp
clc
in
in
lcall
mov
nop
jmp
and
xchg
jnp
add
mov
imull
add
add
pushf
js
mov
cmp
clc
test
out
cmp
hlt
or
clc
fdivr
fidivrs
repnz
add
mov
clc
push
push
add
jne
adc
sub
add
ss
mov
mov
clc
arpl
add
cwtl
pop
insl
loope
xchg
mov
leave
repnz
negl
fstl
pop
and
add
add
arpl
add
pop
clc
adc
addr16
cld
test
pop
xchg
cmp
add
movsl
clc
xchg
std
arpl
add
mov
nop
jmp
adc
add
dec
xor
add
repz
push
add
fildll
movsb
clc
add
push
mov
clc
stos
inc
clc
pop
jbe
into
add
add
push
je
clc
addr16
lret
mov
data16
cmpsl
clc
fstpt
pop
jmp
clc
test
mov
in
out
xor
mov
adc
add
clc
jp
out
into
inc
clc
and
inc
add
test
add
out
push
add
pop
push
lods
nop
jmp
inc
in
push
cmp
repz
mov
lods
or
or
pop
and
add
add
mov
fcmove
push
ja
clc
sub
push
push
mov
xchg
ret
mov
add
push
add
sub
add
jmp
add
cmp
sub
add
test
pop
testl
clc
sub
mov
clc
inc
add
adc
add
clc
icebp
sarb
test
add
dec
xor
cmpsb
clc
cmp
clc
addr16
mov
mov
add
nop
jmp
cmp
gs
gs
inc
clc
loopne
dec
aaa
jbe
clc
mov
or
add
clc
push
add
sub
add
sbb
jns
add
add
add
inc
add
inc
sub
sbb
add
xor
ret
xor
add
sub
push
add
inc
add
out
and
add
and
add
mov
mov
cmp
clc
cwtl
ds
clc
push
cmc
mov
mov
mov
clc
ja
add
cmp
xabort
sbb
add
push
add
daa
clc
je
mov
cmp
adc
add
add
outsb
inc
clc
pop
lret
pop
and
add
jns
add
and
add
add
icebp
and
add
jmp
shll
clc
clc
icebp
cmp
cmp
aam
add
xchg
fstl
mov
stos
inc
clc
out
xchg
mov
clc
jmp
jo
add
add
arpl
add
add
fsts
add
add
pop
inc
add
jecxz
mov
push
add
mov
cmpsb
clc
fs
mov
xchg
xor
add
test
into
push
add
mov
jb
add
mov
nop
jmp
icebp
jae
push
sbb
clc
stos
push
xor
add
clc
repnz
pushf
movsl
clc
loop
cmp
ret
clc
inc
add
fs
push
clc
lcall
sub
add
out
sub
xchg
ret
mov
xchg
shlb
add
leave
mov
aas
mov
adc
add
add
movsb
clc
in
cmp
clc
es
call
jmp
xchg
in
push
add
jns
pop
mov
add
ret
add
push
ret
clc
mov
add
mov
dec
and
add
add
inc
add
ret
daa
clc
cli
aas
test
mov
ret
clc
push
mov
nop
jmp
loopne
push
mov
mov
nop
jmp
fidivrs
mov
clc
pop
ret
clc
es
cmp
pop
or
clc
loop
lock
mov
xchg
ret
and
in
fisttps
or
sub
clc
push
add
cmpsl
clc
dec
int3
jbe
clc
sub
or
add
push
enter
add
lods
out
cmpsl
clc
xor
add
xchg
adc
add
add
clc
xchg
fiaddl
push
jnp
add
add
xor
add
cmpsb
clc
repnz
xchg
fcoml
add
sbb
add
sahf
cli
adc
add
fs
xor
add
push
add
lods
adc
add
pop
loop
fs
jle
clc
arpl
add
js
aas
lock
add
mov
jmp
mov
add
xor
add
add
jl
push
push
insb
push
clc
push
jae
add
inc
add
pop
scas
sub
jbe
xbegin
add
data16
es
pop
jecxz
sub
in
push
add
add
add
xor
add
sbb
pop
and
xchg
pop
mov
outsl
je
mov
icebp
lcall
add
pop
pop
pop
fxch
lods
sar
adc
dec
scas
mov
sarl
xchg
cmp
add
test
sub
inc
or
add
inc
data16
cld
add
xor
add
out
outsb
test
aam
popf
aas
jno
add
jae
add
push
js
jmp
mov
and
add
mov
aas
mov
add
jno
add
jmp
xchg
inc
icebp
lock
fistpll
cmp
pusha
add
notl
ret
hlt
fdivrl
hlt
xbegin
divl
sbb
add
icebp
adc
add
jo
add
lret
stos
jl
or
sub
add
xbegin
sub
or
data16
adc
add
test
jg
cltd
pop
ret
clc
and
add
movsb
clc
out
stos
scas
cmp
sub
add
lea
negb
jb
add
out
pushf
fidivrl
jae
add
push
push
pop
sar
test
cmp
lret
add
jne
xchg
xchg
cmp
clc
xor
add
clc
gs
inc
add
cmp
push
cmp
mov
fcoml
mov
add
in
cwtl
ja
or
mov
add
jmp
clc
stos
push
add
mov
mov
push
mov
xchg
ret
test
jns
add
fcmove
sti
jp
dec
push
mov
add
mov
jbe
js
inc
add
ja
mov
adc
xchg
popa
add
xchg
mov
push
jo
add
ret
push
xchg
pop
notl
xchg
mov
add
fisttpll
test
ja
clc
mov
data16
mov
add
imul
pop
inc
add
ret
push
addr16
xchg
in
xchg
cmp
xchg
cld
out
jmp
adc
xchg
xbegin
adc
jmp
add
and
mov
jle
clc
cmp
mov
aas
jg
clc
cmp
add
lock
add
clc
lods
inc
clc
push
lock
add
in
stos
das
add
pusha
add
jae
add
add
ret
sti
jmp
arpl
add
int3
add
add
clc
add
add
shr
xor
add
dec
inc
clc
insl
and
add
fmuls
aad
test
or
cmpsl
clc
iret
ja
add
fcmovnb
clc
pushf
add
add
ficomps
lea
xchg
mov
fs
leave
cmc
mov
push
test
outsl
aaa
mov
mov
mov
add
test
clc
cmp
add
add
add
add
push
dec
ss
mov
stc
roll
sbb
dec
cmp
jmp
add
mov
dec
popa
add
icebp
icebp
data16
jae
add
clc
sarb
mov
push
jns
cwtl
rcrl
test
inc
clc
scas
sti
push
arpl
add
jmp
clc
push
cmp
clc
sub
adc
add
add
bound
add
or
loopne
test
loope
mov
clc
pop
xabort
sar
add
lea
pop
pop
mov
cltd
cmp
and
add
adc
add
int
mov
clc
gs
add
fsts
add
js
loope
aam
call
jp
mov
add
sbb
ljmp
add
mov
aaa
push
aam
imul
movzwl
nop
jmp
or
add
enter
movsl
clc
aas
test
mov
clc
cmp
clc
jmp
clc
and
add
or
xchg
jle
pop
mov
add
push
add
mov
clc
and
je
nop
jmp
loopne
int3
xchg
pushf
xchg
sbb
sbb
add
clc
jae
add
jge
cli
popf
adc
clc
mov
clc
in
mov
jecxz
in
popf
mov
clc
xor
add
nop
jmp
ficoms
lret
cltd
es
out
arpl
add
cmp
clc
jecxz
mov
sar
mov
push
mov
xchg
ret
lock
shrb
adc
add
fsubrl
mov
add
push
add
mov
stc
adc
in
cld
outsl
cmp
push
out
sbb
jmp
and
add
cld
loopne
xor
add
add
test
push
clc
pop
ljmp
add
pop
lahf
iret
lods
aaa
or
and
push
popa
nop
jmp
add
mov
addr16
stc
inc
clc
dec
clc
jne
and
in
nop
jmp
mov
jne
inc
add
cmp
add
mov
shrb
test
jmp
add
loopne
lods
out
fstp
cmp
cmp
add
test
arpl
add
into
sbb
jmp
xrelease
mov
push
push
cmp
sar
clc
mov
cmp
out
pop
lods
mov
pop
mov
pushf
cmp
clc
jbe
shr
inc
add
ret
rolb
push
add
mov
cmpsb
clc
mov
sub
jp
mov
clc
in
in
mov
outsl
es
xchg
stc
movsl
clc
int3
mov
std
and
add
add
sbb
sbb
stos
into
pop
clc
and
add
xchg
fs
jno
add
add
mov
dec
shll
add
mov
shll
and
add
or
mov
add
dec
add
clc
cmpsl
clc
sbb
outsb
add
lods
repz
adc
clc
dec
fadd
clc
inc
add
ss
sub
add
pop
imul
clc
mov
dec
mov
popf
addr16
adc
add
fprem1
inc
clc
es
xor
outsl
aad
fisttpll
dec
lock
add
mov
inc
clc
add
add
push
cmp
add
dec
pop
fcoms
add
or
ds
clc
and
add
sar
pop
mov
add
pusha
add
dec
outsb
sbb
xchg
mov
test
stos
fs
repz
add
add
clc
sar
sbb
and
jl
test
out
xor
add
add
add
pop
dec
cwtl
js
add
sbb
cmp
int3
dec
dec
mov
push
add
jb
add
add
clc
movsb
clc
sbb
jne
nop
jmp
mov
and
clc
es
and
int3
cmp
clc
push
add
jecxz
push
add
nop
jmp
mov
aad
mov
icebp
mov
aaa
mov
clc
into
add
popa
add
loopne
aaa
dec
call
lods
push
mov
xchg
ret
mov
xchg
inc
push
lea
nop
jmp
add
clc
in
mov
clc
add
add
add
stc
nop
jmp
add
add
add
paddw
add
xlat
xchg
inc
add
push
jns
lret
dec
nop
lods
xbegin
addr16
xchg
loop
inc
clc
cmp
push
dec
fmull
mov
push
notb
add
jecxz
ja
clc
mov
jns
int3
push
mov
add
push
leave
xor
add
sti
adc
xchg
pop
jmp
cmc
push
clc
addr16
jmp
clc
sub
cmp
add
mov
pop
movsb
clc
mov
int3
loope
sbb
xchg
xchg
ret
add
clc
dec
fwait
int
and
add
daa
clc
cmp
or
mov
add
sbb
mov
add
sbb
add
mov
jae
add
xchg
fisttps
clc
inc
add
test
ret
clc
imul
add
xor
add
add
stos
push
add
xchg
adc
add
xchg
je
clc
loopne
or
and
add
clc
xchg
xchg
imul
das
mov
pop
nop
imul
push
add
bound
add
out
add
add
leave
mov
sbb
dec
sbb
jmp
add
fidivrl
add
nop
jmp
jge
xor
clc
cmpsl
clc
outsl
pop
xchg
lods
stc
jp
push
nop
jmp
mov
xor
mov
popa
fs
jmp
xchg
xor
cmp
add
add
nop
jmp
add
xchg
mov
clc
push
sub
add
push
add
add
xor
add
ss
add
push
add
sar
xor
add
add
jmp
cmp
addr16
out
iret
icebp
xchg
arpl
add
add
clc
dec
or
iret
add
xchg
in
fs
shll
add
clc
shlb
es
push
and
add
adc
add
jl
xor
add
test
jg
clc
cmpsl
clc
and
add
cmc
and
out
test
enter
clc
lods
and
pop
xlat
pop
data16
xchg
jl
add
int
adc
sar
lahf
addr16
mov
fstps
dec
push
in
cmp
xchg
xor
mov
adc
mov
call
test
lods
je
xlat
or
clc
xbegin
adc
call
mov
stc
cmp
add
fs
pusha
add
std
fidivs
add
clc
adc
add
cmp
add
push
add
imul
iret
sbb
add
jmp
inc
jl
adc
add
pop
pushf
mov
clc
sbb
rcll
add
xchg
ret
push
mov
cmp
into
jbe
add
je
sbb
clc
shll
add
es
mov
pop
jmp
sub
pop
jne
mov
xchg
xbegin
lea
add
inc
add
movsl
clc
or
clc
push
lods
cmp
clc
push
aaa
pop
ss
clc
int3
ljmp
aam
in
and
data16
mov
clc
add
add
insb
xchg
fst
pop
push
add
sti
insl
sub
clc
hlt
es
cld
sub
xchg
out
add
xor
add
cmp
data16
shlb
add
cmp
push
gs
mov
out
inc
clc
enter
loop
cmp
cmp
mov
nop
jmp
and
mov
or
add
and
push
jo
add
add
imul
clc
movsb
clc
hlt
bound
add
adc
scas
jg
clc
dec
loopne
inc
clc
mov
add
gs
pushf
in
xor
add
sub
cmp
clc
mov
cs
iret
roll
xchg
ret
adc
adc
out
push
aad
xchg
testb
add
push
nop
jmp
lea
mov
vmovaps
add
fisttpll
aas
xchg
mov
cmp
fldt
sub
int
add
add
test
push
add
lcall
xlat
cmp
mov
ds
clc
sbb
add
ds
mov
popa
add
iret
fwait
xchg
imul
cmp
adc
add
pusha
add
mov
or
ficomps
sbb
jecxz
lcall
int3
loop
je
clc
es
push
ret
or
mov
push
push
push
mov
xchg
ret
ficoms
fdivl
clc
rorl
cmpsb
clc
ds
dec
push
add
cmpsb
clc
sbb
mov
nop
jmp
mov
add
cmc
aam
icebp
sar
lock
cwtl
push
clc
insl
clc
adc
add
inc
clc
gs
and
add
or
repz
out
hlt
pop
clc
cld
mov
outsb
xor
add
popa
add
mov
clc
ret
clc
imul
mov
clc
sahf
lock
dec
mov
mov
nop
jmp
add
aaa
ret
clc
das
xbegin
jns
push
add
cwtl
testb
xchg
cmp
push
add
cmp
clc
pushl
rclb
aad
add
cmp
mov
cwtl
std
mov
and
clc
adc
clc
sbb
cmp
pop
pop
pop
cmp
add
cmp
cmp
add
clc
int3
pushf
mov
add
add
jl
mov
push
add
popa
add
add
add
clc
cmpsl
clc
push
and
add
mov
cs
adc
ds
xor
inc
add
outsl
int3
lock
jo
add
xor
add
and
movsb
clc
sbb
pop
hlt
pop
clc
sub
jl
repnz
ljmp
clc
sti
clc
and
add
insb
jmp
inc
clc
nop
adc
add
add
gs
movzbl
scas
mov
add
mov
xor
add
add
clc
jae
add
add
xor
add
clc
mov
add
mov
dec
leave
pop
jne
and
add
clc
dec
sub
add
mov
push
in
leave
sub
test
push
imull
or
and
fwait
dec
insb
lock
ljmp
popa
add
xrelease
xchg
and
add
int
clc
scas
sar
clc
jecxz
sar
fwait
cmp
clc
cmc
inc
add
xchg
jl
add
jno
add
clc
or
clc
lahf
push
add
xor
push
clc
push
stos
dec
imul
xchg
pop
fimull
or
pop
sub
ss
sti
mov
sub
clc
dec
and
add
add
adc
add
push
mov
adc
add
xor
add
mov
shlb
xchg
jb
add
clc
data16
xbegin
add
dec
cli
push
jbe
bound
add
pushf
mov
fisubrs
mulb
add
int
sub
shlb
or
add
push
mov
sbb
sbb
inc
add
cli
aam
clc
inc
clc
dec
sub
add
adc
or
cmp
mov
add
ret
add
or
stc
or
clc
push
xlat
sbb
and
add
out
mov
clc
mov
add
nop
sar
cmp
or
add
cmp
lods
xchg
and
add
push
nop
jmp
mov
mov
add
add
mov
add
dec
adc
push
xchg
dec
lret
clc
sbb
add
scas
insb
cmp
and
clc
fbstp
stos
mov
push
clc
aam
add
adc
add
mov
add
dec
clc
shll
add
push
xor
add
clc
jle
clc
ret
clc
sar
add
addr16
int3
je
and
ja
cmpsl
clc
jns
cmp
adc
sub
out
iret
in
pop
and
test
inc
clc
imull
clc
sbb
clc
sahf
sti
lahf
inc
clc
pop
js
xor
add
cs
adc
add
dec
stos
ret
clc
pusha
add
sbb
pop
jno
add
mov
fmuls
jns
sub
aam
jg
movsl
clc
std
into
fldt
dec
testb
and
cmpsb
clc
sahf
and
dec
xor
mov
cmp
and
add
jp
das
movsb
clc
jp
adc
clc
mov
clc
daa
clc
add
inc
clc
adc
clc
add
cmp
clc
pop
clc
xor
add
xabort
sbb
pop
inc
add
jge
pop
popf
shlb
add
fs
sub
add
inc
add
mov
addr16
and
add
or
add
imul
clc
xor
icebp
and
add
sahf
xchg
test
push
test
test
bound
add
push
clc
scas
cmc
push
sub
push
mov
xchg
ret
add
iret
cwtl
sbb
clc
lods
fisttpl
clc
scas
icebp
xor
idivb
add
mov
mov
out
bound
add
cmp
shll
add
xor
xor
add
test
decb
pop
fcomip
adc
add
loop
lahf
lods
or
loopne
daa
clc
pop
mov
clc
pusha
add
sbb
add
add
sbb
jb
add
cltd
bound
add
clc
std
in
and
jne
clc
into
push
pop
sub
jp
dec
adc
cmpsl
clc
inc
add
lcall
clc
mov
push
push
cmc
jns
lea
clc
mov
add
nop
jmp
adc
add
mov
mov
xor
add
add
clc
call
add
jg
push
das
sub
je
aaa
xlat
pop
dec
adc
add
pop
push
mov
xchg
ret
add
add
ja
bound
add
clc
sub
dec
inc
add
or
add
insl
sub
cmp
fwait
sbb
add
clc
adc
add
xbegin
call
ror
data16
out
insl
cltd
mov
clc
es
call
idiv
call
add
mov
mov
add
clc
test
mov
sub
push
cwtl
out
pusha
add
loop
movsl
clc
and
add
pusha
add
xlat
push
or
mov
sub
nop
jmp
pop
cmp
add
push
cmp
inc
clc
add
add
add
or
lock
add
add
xchg
cmp
cmp
add
add
or
cmp
push
add
repnz
add
push
mov
xchg
ret
rolb
clc
mov
lea
nop
jmp
dec
jns
mov
test
clc
push
push
cmp
nop
jmp
in
xchg
mov
lret
xor
cmp
clc
sbb
jmp
inc
mov
sub
outsb
js
ja
or
add
clc
pop
xlat
dec
aas
xor
add
adc
add
add
iret
jge
clc
test
jo
add
add
add
clc
dec
jmp
adc
lea
movsl
clc
fs
cmp
add
sbb
lock
test
out
fistps
mov
clc
cmp
add
mov
add
push
sub
add
shll
clc
test
jns
adc
add
jne
push
push
mov
xchg
ret
mov
loopne
in
cmp
add
clc
lret
das
push
add
cltd
add
push
fnstsw
push
fidivrl
push
add
xchg
movsl
clc
jb
add
pop
or
clc
jmp
daa
clc
and
pushf
negb
clc
bound
add
pop
push
rol
clc
or
add
nop
jmp
sarb
xchg
mov
mov
loopne
cwtl
mov
clc
insl
xor
add
add
add
add
xor
clc
sub
add
int3
xchg
sarl
scas
mov
xchg
sub
add
inc
add
pushf
mov
add
pop
fmuls
clc
pop
inc
clc
dec
push
cmp
dec
mov
loop
pop
pop
fsts
add
adc
add
xchg
imul
jmp
lret
sub
jl
sbb
add
shll
add
and
add
add
mov
inc
add
push
movsl
clc
lods
and
add
arpl
add
add
add
add
add
pop
dec
int
std
add
add
mov
jle
add
add
sbb
nop
jmp
mov
stos
stos
outsl
pop
xlat
cmp
cmp
clc
inc
add
pusha
add
mov
clc
rcll
add
xchg
shlb
xchg
pop
test
out
daa
clc
xor
add
clc
jnp
mov
dec
mov
inc
clc
daa
clc
inc
clc
scas
out
jmp
movsb
clc
jmp
clc
mov
clc
in
pop
cmp
clc
and
add
sub
fsubrl
clc
dec
aaa
xor
add
clc
and
add
xor
add
sarb
cld
shlb
add
add
add
or
add
add
and
add
adc
add
add
add
add
jg
shr
test
fldt
hlt
add
add
push
nop
jmp
push
jns
test
and
clc
mov
leave
cmp
stc
mov
mov
hlt
mov
jmp
cltd
cltd
and
xchg
pop
test
pop
jmp
scas
or
mov
fwait
xchg
scas
xchg
inc
clc
sar
out
mov
push
jne
nop
jmp
mov
or
mov
clc
sar
fcomps
push
push
nop
jmp
mov
mov
or
mov
add
add
pop
sbb
sub
and
add
push
xchg
xor
add
add
xlat
test
div
nop
jmp
add
jne
add
add
push
jg
lret
or
dec
sbb
lods
stos
popa
add
inc
add
imul
add
mov
fnstenv
add
scas
sar
rcrb
xchg
or
rclb
dec
or
inc
add
dec
dec
adc
add
add
push
ja
add
inc
clc
cmp
pop
icebp
add
xchg
cli
cmpsl
clc
jle
xchg
adc
xchg
inc
out
nop
jmp
test
and
clc
push
add
loopne
add
add
jmp
nop
jmp
push
mov
jge
add
stos
xchg
add
add
add
dec
je
clc
fwait
inc
clc
loopne
xchg
mov
pop
clc
lret
add
ja
xor
clc
pop
adc
std
cmp
mov
nop
jmp
mov
xor
add
dec
mov
clc
mov
jmp
add
push
jecxz
loopne
and
add
sar
aas
cmpsl
clc
inc
clc
and
add
cmc
stos
stc
or
pop
mov
clc
sbb
clc
mov
and
add
and
sub
adc
clc
push
add
pop
pushf
clc
mov
mov
mov
nop
jmp
seta
add
add
loopne
cmpsl
clc
xor
add
lahf
loope
adc
add
lahf
lods
jbe
cmp
add
movsl
clc
lods
loopne
cmc
inc
clc
in
jnp
mov
inc
clc
rolb
add
sub
hlt
sbb
add
push
push
xabort
pop
mov
addr16
push
pusha
nop
jmp
adc
xchg
in
in
and
add
clc
clc
adc
test
add
mov
in
add
add
cmc
leave
mov
clc
lock
clc
dec
pushf
outsb
dec
xlat
pop
out
adc
add
sub
clc
xchg
sar
aam
clc
imul
add
imul
and
jmp
push
push
aad
fistpll
pop
jle
and
add
dec
mov
cmp
loope
inc
add
cmp
mov
icebp
xchg
mov
adc
add
sbb
clc
pop
rol
clc
cmc
add
add
add
mov
add
add
add
lcall
jmp
xor
mov
pop
rorb
dec
sbb
push
pop
jne
add
mov
addr16
and
add
add
mov
dec
mov
clc
into
cmp
scas
jmp
add
add
scas
push
add
es
cmp
dec
or
add
test
mov
add
mov
add
dec
jb
add
add
das
mov
nop
jmp
jae
jae
dec
lret
and
add
clc
ds
imul
rolb
add
mov
clc
add
jg
xor
clc
cmpsl
clc
inc
clc
jecxz
fiadds
or
adc
add
mov
pushl
nop
jmp
sbb
int3
jns
jae
add
add
dec
pushf
test
add
or
add
clc
xor
add
sub
add
push
add
inc
add
cmp
fidivrl
add
cmp
add
ss
arpl
add
cmp
cmp
or
xchg
jo
add
jecxz
cmp
jle
mov
fs
cwtl
lcall
jecxz
addr16
mov
add
test
bound
add
add
pushf
add
add
adc
add
pop
or
insb
adc
add
aam
cmp
mov
sbb
add
mov
pop
cmp
mov
clc
add
mov
sar
clc
ljmp
clc
out
and
add
mov
gs
dec
xbegin
in
dec
mov
mov
pop
adc
add
xchg
xor
add
mov
jmp
nop
jmp
dec
fidivs
aas
pushf
adc
add
add
int3
test
arpl
add
clc
cli
test
add
popf
jle
ffreep
clc
push
mov
nop
jmp
and
mov
mov
mov
add
loopne
xchg
inc
add
sub
lods
into
ficoml
add
sub
mov
sbb
push
inc
clc
insb
ss
add
xor
add
push
add
jno
add
mov
movswl
nop
jmp
cltd
add
add
repnz
div
lret
or
fcomps
pusha
add
or
add
push
ljmp
je
clc
mov
add
aam
cld
icebp
ds
fwait
ret
clc
sub
imul
add
mov
mov
or
cwtl
lock
push
nop
jmp
inc
jecxz
push
mov
and
add
fs
mov
clc
mov
add
push
arpl
add
clc
imul
add
mov
clc
lods
call
rclb
fwait
inc
add
and
add
clc
ret
mov
jae
add
je
clc
and
push
push
xchg
bound
add
clc
ret
xor
add
clc
imul
adc
add
add
jge
clc
pushf
sub
jo
add
push
cmp
push
push
mov
and
xor
add
out
sahf
rcrb
add
nop
jmp
cmp
sar
add
leave
inc
clc
inc
add
clc
shrb
clc
test
sub
add
mov
inc
add
ljmp
lahf
call
xor
add
add
dec
mov
data16
mov
bnd
clc
mov
adc
add
jge
inc
add
mov
mov
add
mov
inc
add
inc
add
ret
jp
clc
dec
daa
clc
jg
out
push
mov
nop
jmp
or
mov
sbb
and
add
add
sar
je
cmp
stos
cmp
div
inc
clc
pop
lahf
xabort
inc
clc
aad
pop
cmc
pop
jae
add
and
and
test
in
jne
outsb
loop
jl
jl,pn
clc
jle
cwtl
rcrb
add
xchg
or
adc
negb
cmpsl
clc
out
cli
push
sbb
lret
loope
lea
add
dec
or
push
add
mov
clc
out
or
xlat
sbb
das
inc
clc
jl
clc
and
add
arpl
add
sub
add
add
clc
aam
clc
push
outsl
testl
or
mov
outsl
xchg
xor
fistpl
sub
addr16
push
fisubl
clc
fwait
sbb
mov
nop
jmp
cltd
mov
add
sarl
mov
adc
add
aas
aaa
dec
and
add
jmp
add
mov
add
loop
in
insl
cmp
sahf
ret
pop
faddl
add
inc
add
lock
clc
xabort
dec
adc
add
jns
cld
and
add
add
mov
adc
add
out
jp
clc
sar
pop
cwtl
movsl
clc
xor
add
add
jbe
clc
cmc
loop
das
sub
mov
roll
mov
jbe
add
cld
daa
clc
pop
mov
enter
add
clc
inc
clc
pusha
add
inc
clc
cmp
sahf
inc
add
dec
repnz
nop
mov
dec
dec
inc
add
in
pop
mov
ljmp
decl
push
mov
xchg
ret
cmp
sbb
rclb
jne
sub
mov
clc
sbb
add
repnz
add
add
push
mov
xchg
ret
mov
clc
nop
add
add
clc
adc
pop
jg
fprem
pop
or
or
clc
push
mov
push
add
mov
pop
add
icebp
sub
cmp
mov
ss
clc
leave
lret
je
dec
rorl
clc
pop
xor
cli
inc
add
xor
add
jb
add
lods
push
or
clc
mov
add
sub
arpl
add
sub
push
clc
xor
add
add
push
add
repnz
clc
mov
add
xor
add
fsts
sar
pop
movsb
clc
add
inc
clc
scas
push
add
pop
clc
mov
xchg
inc
clc
xchg
es
ss
push
clc
and
add
add
clc
pop
pop
push
sbb
mov
jmp
push
push
inc
mov
dec
ds
add
add
clc
stos
out
mov
fwait
pop
mov
add
inc
add
push
mov
xor
add
out
push
mov
nop
jmp
mov
shlb
movsb
clc
aam
mov
pop
clc
jno
add
clc
stos
rclb
ficompl
outsb
inc
clc
out
lods
jno
add
aaa
cmp
clc
push
sbb
xchg
xor
add
movzwl
nop
jmp
fiadds
in
cltd
mov
xor
cmp
jge
loop
dec
push
add
sbb
mov
cmp
fcomps
push
add
loop
ss
test
mov
push
add
cmp
dec
repnz
inc
clc
arpl
add
add
dec
xchg
cmp
and
add
add
mov
adc
push
sar
adc
add
and
add
sarb
call
add
inc
inc
add
xchg
pop
adc
add
add
clc
xbegin
nop
push
xor
add
addr16
stc
adc
xchg
int3
xchg
inc
add
out
pop
popa
add
jo
add
cmp
inc
add
sbb
je
nop
jmp
add
shrb
dec
loopne
cmp
cli
ret
clc
mov
fstl
add
dec
add
mov
push
push
insb
push
jmp
add
adc
add
add
bound
add
add
es
mov
mov
sbb
add
pop
jg
add
pop
jmp
push
ja
pop
sub
add
and
mov
add
je
pop
mov
inc
clc
sbb
add
add
or
hlt
and
add
mov
lcall
sbb
clc
ja
clc
scas
jge
fldt
add
pop
ja
popf
jae
add
clc
loope
xor
add
clc
inc
add
pushf
jne
pop
clc
mov
leave
sub
stc
pop
mov
add
and
add
xabort
out
sahf
aam
pop
xchg
in
into
xchg
loop
scas
call
clc
arpl
add
clc
enter
dec
and
add
add
xabort
push
add
and
add
in
add
pusha
add
outsb
add
xchg
icebp
sbb
inc
add
aaa
push
addr16
cmp
add
cltd
clc
cmp
xor
add
clc
push
mov
nop
jmp
cmp
ja
cwtl
aam
pop
mov
dec
jnp
pushf
outsb
sti
arpl
add
mov
add
xchg
adc
add
or
mov
mov
add
jmp
add
lock
add
jp
mov
add
sbb
clc
push
mov
nop
jmp
adc
and
jnp
clc
out
push
cs
clc
and
xchg
push
add
mov
clc
decl
xor
add
jns
add
out
push
jmp
inc
add
jp
add
pop
mov
cwtl
pop
inc
add
xor
add
in
fcompl
scas
mov
clc
lahf
jbe
shll
add
and
add
mov
add
nop
jmp
xchg
mov
sub
jb
add
clc
cltd
pop
push
mov
nop
jmp
jae
pushw
add
add
xor
add
add
clc
pop
adc
add
mov
add
clc
jbe
add
imul
clc
dec
pop
jae
add
mov
or
clc
or
dec
jecxz
out
test
mov
inc
clc
aaa
xchg
outsl
or
in
fwait
scas
sar
mov
xor
add
ja
cmp
jle
mov
arpl
add
xlat
insl
enter
add
bound
add
cmp
add
sub
sbb
mov
inc
clc
adc
add
add
sub
testl
xlat
int
clc
push
add
push
ret
nop
jmp
int3
inc
cltd
push
push
push
mov
clc
hlt
pop
dec
movsb
clc
mov
fnstcw
sub
inc
add
mov
clc
sub
faddl
add
xor
add
xlat
lahf
inc
clc
jle
add
pop
mov
insb
push
add
sar
pop
pop
icebp
jl
dec
xchg
lret
cli
xor
clc
fsub
clc
mov
clc
cmp
je
out
sarl
cmp
add
pop
std
mov
pusha
add
fimuls
sahf
shrb
dec
movsl
clc
fdivr
fstl
lods
or
xchg
cmp
jmp
lods
and
int3
push
xchg
lock
dec
in
jbe
add
stc
adc
add
push
arpl
add
add
adc
add
cs
add
jmp
add
add
nop
jmp
dec
push
xchg
std
cmp
adc
add
out
fistl
add
aaa
sbb
shlb
clc
test
ficomps
repz
shrb
das
adc
add
add
add
sar
mov
cltd
pop
mul
clc
test
add
add
xor
add
add
pop
out
or
into
ja
jmp
lahf
jmp
rcll
mov
mov
mov
clc
add
add
clc
bound
add
mov
push
mov
xchg
ret
push
jecxz
nop
dec
ja
add
and
cmp
clc
add
add
clc
dec
or
clc
inc
add
mov
movsl
clc
pop
mov
sub
mov
js
into
dec
inc
clc
push
add
adc
and
mov
add
push
push
nop
jmp
and
lea
add
mov
clc
cld
bound
add
out
xor
add
add
cmp
add
inc
add
sar
dec
cmp
sub
add
add
xor
add
add
lods
lret
sar
clc
lret
cmp
dec
fcomi
addr16
into
mov
int3
push
add
cwtl
movsl
clc
mov
clc
cs
add
shll
clc
mov
clc
jecxz
call
ror
es
push
add
daa
clc
test
xchg
data16
mov
add
es
sbb
call
dec
dec
mov
add
add
std
out
and
add
mov
pop
jbe
imul
cmp
sbb
clc
and
add
nop
jmp
add
xor
and
add
nop
in
xchg
inc
clc
js
mov
testl
psubsb
cltd
out
mov
jns
sahf
in
xchg
cmp
dec
dec
sub
pminsw
jns
cmpsl
clc
icebp
hlt
fbld
in
in
dec
call
nop
jmp
lods
and
push
xchg
pop
xchg
movsb
clc
jno
add
hlt
adc
ror
cmpsl
clc
push
clc
mov
out
in
cltd
push
adc
add
inc
clc
adc
add
inc
add
into
ja
sub
clc
nop
ret
clc
dec
xor
add
arpl
add
in
sub
and
add
pop
add
add
add
jne
test
stc
jno
add
shll
push
add
mov
out
popa
add
sbb
leave
daa
clc
ljmp
add
mov
push
sbb
jmp
xor
xchg
ss
out
xor
add
add
xor
adc
add
add
test
mov
add
xor
clc
xor
add
clc
push
out
enter
je
das
inc
clc
pop
pop
jne
lods
js
clc
or
xbegin
or
cltd
sar
add
cmpsb
clc
lahf
add
add
fstl
add
xchg
adc
xor
add
stos
sub
inc
clc
xchg
sbb
sahf
push
push
xor
nop
jmp
cltd
adc
adc
or
out
mov
dec
sbb
push
add
aas
mov
add
leave
leave
ja
mov
adc
add
inc
add
stos
sti
mov
add
imulb
or
rorb
and
jecxz
inc
clc
push
aad
fdivs
clc
repnz
add
clc
loopne
mov
pop
movsb
clc
rcrb
clc
dec
femms
mov
aas
lahf
das
in
jbe
add
sub
into
das
xor
mov
sub
add
add
rcrl
cmp
stos
sbb
cmovo
add
clc
add
add
jnp
cmp
add
mov
jmp
dec
push
add
xchg
popl
add
inc
clc
clc
cmp
cltd
sub
xbegin
pop
repz
cwtl
mov
inc
clc
mov
call
jmp
pop
push
add
in
pop
clc
inc
clc
ljmp
into
cmp
aaa
jbe
clc
test
gs
mov
xchg
fistl
fwait
pop
stos
pop
mov
xchg
mov
mov
bound
add
mov
and
add
clc
pop
test
add
lahf
and
add
clc
add
cmp
cmp
or
enter
mov
push
add
adc
push
add
arpl
add
fcoml
push
clc
add
das
cmpsb
clc
inc
add
testl
xor
add
adc
jo
add
or
clc
lods
add
add
sbb
nop
jmp
xor
cltd
mov
imul
dec
mov
insb
and
add
ss
clc
pusha
add
adc
add
sahf
dec
aad
out
xor
add
dec
xor
add
and
add
and
add
sub
sbb
mov
jge
nop
jmp
jecxz
lea
jne
int
int
clc
cmp
pop
xor
add
add
aam
lea
cmp
push
and
jmp
clc
cld
pop
xchg
cltd
jg
mov
push
mov
xchg
ret
int3
add
jg
xchg
pusha
add
dec
in
hlt
jno
add
add
add
lea
lods
imul
push
nop
jmp
mov
mov
mov
or
call
pop
cmp
clc
xchg
mov
mov
test
cmpsb
clc
adc
add
pusha
add
clc
cmp
jne
movsb
clc
push
push
movsb
clc
into
xchg
hlt
push
or
popa
add
fwait
inc
clc
xchg
sub
push
mov
xchg
ret
adc
jecxz
scas
clc
xchg
add
add
push
cmp
clc
shl
sbb
mov
xchg
ret
mov
clc
inc
clc
fs
pop
mov
clc
ljmp
push
add
mov
int3
sub
xlat
mov
sbb
add
outsl
adc
add
mov
lret
mov
stos
dec
fs
test
daa
clc
and
adc
add
add
clc
xchg
cwtl
lret
int
add
sbb
add
sahf
sub
mov
ret
clc
test
jecxz
xor
add
pushf
mov
mov
loopne
lock
mov
add
nop
jmp
loopne
push
cmpsb
clc
cmp
clc
icebp
cmp
clc
and
add
push
push
push
mov
xchg
ret
stc
mov
jp
jbe
nop
jmp
xchg
add
sbb
imul
lret
mov
std
gs
fisubrl
or
add
pop
xchg
xbegin
add
mov
out
sbb
add
fcoml
add
bound
add
lods
ret
loopne
xchg
pop
mov
cltd
xabort
mov
cmp
add
push
add
movzwl
add
inc
clc
cmp
cli
fmul
xabort
clc
inc
add
in
ror
ss
push
clc
sbb
in
pop
ss
clc
adc
add
clc
adc
add
push
xabort
clc
jl
clc
dec
push
aas
test
pop
pusha
add
mov
add
add
addr16
or
add
jmp
clc
xlat
mov
add
stos
push
xchg
lods
pop
shrl
pusha
add
lock
jne
nop
jmp
inc
push
icebp
pop
adc
add
xchg
dec
inc
add
lret
clc
test
daa
clc
in
jmp
clc
sbb
inc
jmp
adc
add
jae
inc
add
cli
and
popa
add
js
clc
ret
stos
mov
ret
xchg
insl
dec
mov
and
add
clc
and
add
cwtl
xchg
aad
pop
rcr
pop
push
add
ds
dec
movsl
clc
mov
test
and
fsubrp
pushl
push
clc
icebp
jp
es
cmp
stos
add
add
and
clc
data16
loop
sub
clc
cmc
ret
clc
xchg
cld
jne
mov
xor
add
repnz
fistl
testb
pop
cltd
mov
add
into
call
sub
mov
clc
sub
bound
add
add
add
out
in
jmp
add
das
cmp
jmp
test
mov
and
sbb
add
nop
jmp
add
fbld
add
repz
lods
lods
lret
sbb
pop
stos
push
add
jns
nop
clc
and
rclb
clc
lret
jno
add
add
int
int3
fs
cs
xchg
js
clc
outsl
push
add
jp
popf
and
add
clc
mov
ret
clc
popa
add
jns
out
test
imul
add
pop
clc
sub
lea
nop
jmp
loopne
dec
lock
jecxz
or
jo
add
sbb
mov
add
jmp
fidivs
and
pop
jbe
clc
xchg
add
add
add
add
pushf
das
push
fisttpl
mov
add
xor
add
mov
add
gs
push
push
push
mov
xchg
ret
inc
add
aad
jg
fisubl
add
stos
mov
add
and
fidivrs
inc
clc
adc
add
std
movsb
clc
iret
loop
pushl
rclb
incl
in
inc
shlb
jno
add
xchg
adc
xor
add
into
cmp
add
jge
add
or
test
jbe
add
jle
push
in
or
in
inc
clc
mov
push
add
std
mov
popa
add
mov
inc
add
add
push
mov
nop
jmp
and
add
push
clc
fs
pop
push
and
add
add
clc
inc
clc
dec
mov
nop
jmp
lods
adc
push
cltd
stos
mov
enter
cwtl
ficomps
mov
push
add
cmp
lods
push
and
ficompl
add
fdivl
aad
xchg
pop
add
clc
movsl
clc
adc
clc
push
add
mov
out
clc
sub
lret
or
add
xor
nop
jmp
jae
add
add
xchg
jo
add
out
push
out
mov
jo
add
clc
dec
and
add
cmc
popa
add
cmp
push
and
nop
jmp
mov
lea
pop
mov
je
add
add
mov
ret
sar
cwtl
push
clc
mov
addr16
xchg
dec
xor
add
test
cmp
inc
clc
or
cwtl
cld
mov
push
fs
xlat
and
add
in
mov
inc
clc
or
jae
add
clc
xor
popa
add
adc
add
icebp
xchg
or
loopne
jmp
stc
lea
das
nop
add
add
push
mov
clc
mov
clc
jbe
fcoml
add
inc
clc
cmp
mov
pop
cmp
add
xchg
rol
clc
lods
mov
clc
insl
pop
pop
mov
clc
push
clc
daa
clc
sub
adc
nop
jmp
adc
shrb
call
nop
jmp
jge
xchg
fisubrs
clc
es
mov
add
or
add
push
clc
jg
add
das
pop
sahf
mov
push
xchg
inc
add
add
test
add
arpl
add
int3
lea
std
cmp
jg
xchg
sti
jge
clc
call
push
cmp
add
pop
xchg
cwtl
mov
xchg
adc
add
jle
inc
clc
daa
clc
add
clc
lods
nop
xlat
aam
mov
push
clc
incl
jne
nop
jmp
dec
add
test
hlt
push
add
mov
adc
out
nop
imul
add
cld
push
mov
xchg
ret
mov
stc
cmpsb
clc
mov
in
cli
add
add
es
loope
mov
and
add
xchg
lock
mov
clc
cmp
in
jmp
lahf
push
add
xchg
imul
push
add
jbe
in
call
add
dec
loop
arpl
add
shrb
es
and
add
add
movsl
clc
push
inc
add
lods
test
cmc
outsl
scas
sar
inc
add
insl
repz
add
push
leave
jnp
ja
mov
clc
sarl
sbb
pop
inc
clc
scas
cli
fs
cld
cmp
ret
clc
push
add
arpl
add
inc
add
jmp
pop
inc
add
pop
inc
clc
mov
test
add
nop
jmp
data16
and
sbb
clc
into
icebp
jl
adc
add
clc
sub
add
fldcw
jg
add
add
pop
xor
sti
mov
pop
push
dec
jnp
iret
and
add
add
add
sahf
in
sub
xchg
cmp
clc
leave
outsb
and
add
mov
nop
jmp
lea
icebp
mov
or
clc
add
aad
clc
jo
add
call
clc
push
add
xchg
cmp
add
push
push
clc
push
push
add
arpl
add
fmull
xbegin
clc
push
sbb
jmp
lret
add
mov
or
dec
in
sbb
cwtl
mov
gs
cltd
push
mov
jmp
fs
out
fisubrl
leave
test
xchg
jnp
cmp
sar
jl
clc
dec
and
add
mov
clc
inc
add
cs
hlt
sar
jl
add
cmc
inc
add
sbb
inc
clc
mov
mov
and
add
or
sub
clc
aam
cmc
imul
into
ljmp
mov
sub
add
xabort
add
fbld
pop
mov
adc
add
fistpl
lods
jne
dec
out
push
push
add
repnz
xchg
cmc
mov
add
add
add
fs
ret
add
repnz
cwtl
clc
xchg
stc
fcoms
add
add
add
pop
push
add
out
xor
add
add
nop
in
xchg
or
cmp
xchg
jno
add
clc
xlat
sbb
jne
out
add
add
clc
das
cmc
stos
sbb
add
nop
jmp
inc
jge
add
mov
lret
mov
jmp
mov
cmc
stos
and
add
dec
add
add
hlt
cmp
dec
mov
push
mov
jne
push
add
out
jmp
cmp
nop
jmp
and
push
add
add
inc
clc
out
mov
add
clc
or
cmovbe
pop
clc
xchg
push
stos
lock
pop
push
lea
std
xchg
xchg
testb
loope
push
jmp
in
lods
and
mov
add
add
clc
popa
add
arpl
add
push
adc
add
mov
nop
jmp
fcomip
push
add
and
add
add
add
add
add
inc
add
cmp
add
inc
clc
sub
add
jne
add
or
inc
clc
dec
fs
add
xor
add
popf
and
add
clc
xor
add
cltd
push
jb
add
jae
add
xabort
fwait
test
dec
adc
add
enter
ret
clc
push
add
push
insl
and
add
fisttpl
clc
add
add
xor
nop
jmp
inc
add
jns
shrb
clc
stos
nop
dec
gs
push
stos
nop
jmp
add
mov
lret
jae
add
out
in
jecxz
push
add
or
or
clc
pop
clc
cmp
mov
xchg
or
dec
bound
add
add
add
add
add
or
clc
pop
mov
in
inc
add
imul
clc
cwtl
pop
and
es
mov
adc
add
mov
inc
add
aaa
push
add
jno
add
clc
push
pop
lock
add
cld
push
jns
out
out
and
add
nop
sub
push
mov
ljmp
shrb
testb
jge
sbb
iret
cmp
add
clc
ret
clc
fnstenv
add
dec
imul
incl
xchg
add
es
mov
xchg
or
add
push
lock
push
dec
flds
clc
xor
clc
mov
adc
add
clc
mov
clc
cmp
add
clc
dec
dec
mov
cmp
clc
jp
clc
or
jl
push
sbb
add
xor
dec
jnp
or
cwtl
pop
clc
lret
es
mov
fidivl
fadds
test
test
clc
push
add
cmp
clc
pop
enter
add
mov
or
add
push
add
outsb
mov
mov
add
jb
add
sbb
push
add
es
push
add
push
add
inc
add
jne
clc
add
mov
cmp
clc
idivb
mov
imul
insl
inc
clc
mov
adc
add
add
gs
sbb
clc
and
clc
in
xchg
jns
clc
lcall
add
std
aad
pusha
add
repz
clc
lcall
sub
rcl
jle
fs
sar
lods
adc
add
fs
das
mov
clc
mov
test
adc
add
add
hlt
hlt
sahf
int
clc
sub
popa
add
ljmp
clc
push
add
cmp
aas
jg
add
push
add
rdmsr
add
repnz
add
xor
mov
add
cmp
stc
and
add
add
jmp
cmpsb
clc
out
loopne
test
clc
out
lret
into
sar
loope
dec
dec
and
add
cmp
test
add
cmp
clc
push
push
xor
clc
stc
mov
icebp
push
add
and
add
add
add
test
jno
add
or
push
clc
jae
add
mov
clc
stos
pop
pop
cmp
clc
lahf
xor
add
sbb
push
mov
xchg
ret
test
add
add
push
cmp
clc
bnd
inc
add
jns
mov
cli
push
add
pusha
add
jle
add
mov
shlb
add
pop
xchg
dec
push
add
mov
add
stos
push
mov
inc
clc
mov
add
das
clc
push
add
dec
xchg
jbe
lahf
out
addr16
inc
add
mov
add
clc
fnstsw
clc
fisttps
add
mov
dec
inc
clc
push
add
inc
clc
imul
mov
pop
xabort
add
jp
clc
cmp
add
xchg
lock
add
clc
inc
add
push
ret
cmpsl
clc
jnp
lea
pop
insb
jp
add
nop
jmp
cmp
mov
mov
xor
add
add
cmp
clc
add
add
imul
add
fs
inc
add
push
xor
add
xor
add
scas
inc
add
jae
add
clc
dec
cli
xor
add
out
sbb
cmpsl
clc
mov
xchg
fsubrl
ljmp
insl
dec
lahf
lret
out
mov
cmc
or
and
clc
adc
jge
inc
add
sar
test
clc
inc
add
test
add
add
leave
mov
in
out
movsl
clc
jl
mov
cmpsl
clc
shl
clc
lcall
std
and
add
pop
and
add
pop
add
sarl
xchg
add
add
add
movsb
clc
bound
add
cmpsb
clc
aaa
call
clc
inc
add
sbb
jmp
mov
add
clc
loope
push
mov
test
lock
sbb
add
mov
add
out
cmp
add
cli
mov
ljmp
in
cmp
lret
sar
pop
push
add
iret
jp
inc
clc
outsb
xor
add
add
clc
push
add
push
mov
xchg
ret
cmp
pop
mov
nop
jmp
mov
jne
pop
neg
imul
mov
xchg
pand
stos
cmp
inc
clc
adc
pop
ret
rorb
add
nop
jmp
sub
sbb
rcl
lods
xor
add
sub
clc
pop
lods
jge
cmp
clc
cli
and
add
add
insb
fmulp
cmc
data16
sub
mov
push
mov
xchg
ret
push
jne
fstp
sti
and
add
hlt
mov
jecxz
pop
cmpsb
clc
stc
jg
push
in
dec
mov
popf
sub
mov
mov
mov
add
pop
add
nop
jmp
lea
cmp
clc
gs
sar
clc
lret
fs
sub
add
inc
clc
ss
mov
jae
add
clc
cwtl
mov
cmp
inc
add
xchg
pop
js
clc
es
mov
sub
push
cli
frstor
std
cmp
cmpsb
clc
ret
clc
push
or
pop
push
add
cmpsl
clc
sbb
lcall
add
mov
cmp
push
mov
or
pop
stc
lods
mov
cmp
inc
or
incl
add
add
dec
cmp
add
das
movsb
clc
repz
clc
cmpsb
clc
inc
clc
fidivs
nop
inc
clc
clc
push
add
ss
fs
out
pop
push
pop
ss
xor
add
push
add
nop
jmp
mov
fldln2
cmpsb
clc
jge
clc
repz
cmp
jae
add
pusha
add
shlb
ss
clc
pop
adc
add
clc
push
add
scas
out
inc
clc
cmp
fs
pop
xlat
mov
xor
add
mov
mov
clc
pop
clc
inc
clc
xlat
jb
add
in
add
add
push
pop
mov
xbegin
push
nop
jmp
add
loopne
xchg
or
sbb
jmp
test
add
lea
inc
sub
add
or
mov
iret
pusha
add
mov
cmpsl
clc
cld
adc
add
add
shlb
add
mov
inc
clc
dec
call
clc
test
fwait
clc
add
add
mov
nop
jmp
cmp
add
push
add
mov
decl
jmp
inc
prefetcht2
jae
add
add
mov
scas
cmp
imul
jne
clc
add
add
data16
icebp
cmp
add
cld
cmp
dec
pop
clc
push
add
rclb
sub
sbb
out
pop
dec
cmc
enter
incl
jg
nop
jmp
add
lock
lea
add
imul
mov
dec
cmp
add
dec
pop
fnstenv
add
or
clc
inc
clc
setle
loop
into
ret
clc
sbb
nop
jmp
or
and
clc
outsb
repz
add
repnz
pop
jb
add
clc
in
sar
mov
aam
sar
xchg
int3
fwait
cmp
clc
jmp
loope
jmp
ficoms
push
jp
daa
clc
stos
add
add
clc
das
lock
xor
add
loope
push
aaa
xchg
fists
fisubs
add
inc
add
push
push
add
cmp
clc
mov
add
inc
clc
shll
xchg
loop
sub
popa
add
arpl
add
clc
cs
into
aas
adc
add
sub
imul
nop
jmp
icebp
icebp
jne
jns
iret
pop
jg
add
test
cmpsb
clc
cmp
data16
aas
jb
add
add
cmp
add
push
out
sahf
sar
shrb
ljmp
out
sar
mov
inc
clc
dec
ret
clc
mov
movsl
clc
popf
and
clc
mov
add
shll
cmp
pusha
add
dec
cwtl
sahf
rcrl
xabort
clc
push
leave
lahf
dec
or
or
inc
clc
jle
clc
push
add
add
into
in
outsl
sub
lods
jge
jno
add
decl
test
add
add
add
hlt
xor
add
add
shrb
add
incl
cmp
rorb
out
fstl
jmp
add
add
in
push
mov
jmp
add
str
xchg
scas
jp
clc
cmp
stos
shl
clc
adc
out
stos
out
gs
mov
add
fildl
ret
clc
insb
jle
test
mov
add
mov
add
xbegin
outsl
mov
cli
ljmp
clc
ds
mov
push
add
fwait
inc
clc
fnstsw
add
add
vzeroupper
xchg
mov
add
clc
inc
clc
movsb
clc
pop
hlt
cmp
clc
ds
nop
inc
clc
ds
or
jnp
xchg
adc
pop
jle
push
js
outsb
pop
imul
dec
adc
add
push
add
nop
jmp
add
data16
aam
std
repnz
jecxz
cltd
lea
and
and
jne
nop
jmp
jae
add
add
hlt
mov
test
push
xabort
cmp
mov
popf
jp
clc
jnp
clc
pop
cs
insl
pop
mov
js
clc
jae
add
clc
ds
cwtl
cmp
pop
jb
add
xchg
pop
xor
clc
sar
clc
stos
inc
add
je
xchg
xlat
xchg
es
sub
into
push
mov
push
nop
ss
xchg
push
pusha
nop
jmp
xchg
xchg
push
sub
push
add
cmp
movsb
clc
dec
push
cs
clc
sub
ret
clc
enter
add
push
add
jp
clc
and
add
shlb
clc
jns
clc
add
add
mov
or
add
jl
xlat
mov
ja
add
imul
movsl
clc
nop
mov
add
clc
cmp
add
jge
add
sub
incl
aas
dec
add
inc
xchg
aad
cltd
mov
nop
jmp
dec
jecxz
cmp
dec
add
pop
cmp
and
add
cmp
and
add
clc
adc
add
mov
clc
xchg
xchg
js
xabort
pushf
ds
clc
outsb
sbb
dec
xchg
iret
xor
add
cmpsl
clc
push
xchg
xchg
cli
insb
jns
sbb
add
sar
add
sarb
inc
add
insb
dec
jnp
add
push
dec
pop
cmp
pushf
mov
mov
add
push
nop
movsl
clc
sub
js
mov
clc
jmp
lock
mov
or
clc
pop
mov
add
dec
xor
pop
jbe
add
mov
add
add
push
loop
leave
test
xor
add
clc
add
add
sub
or
aas
jo
add
daa
clc
xchg
mov
repz
clc
sar
clc
enter
aas
sub
pop
sti
and
add
inc
add
xor
add
add
clc
ret
into
sbb
add
mov
xabort
clc
xlat
pop
lea
cmc
mov
lea
adc
add
pushf
popa
add
xchg
out
sbb
inc
clc
jmp
jmp
lock
rolb
push
add
inc
add
dec
fxam
clc
fildl
movsb
clc
jnp
inc
clc
sub
xabort
add
add
clc
push
ds
clc
push
nop
xchg
and
lret
add
add
clc
inc
clc
cmp
inc
add
stc
push
add
repz
adc
cld
gs
and
add
jb
add
clc
cmp
clc
inc
add
push
mov
mov
jb
add
fbstp
clc
or
jmp
add
lret
mov
xor
add
push
jmp
mov
push
shr
add
mov
add
add
mov
test
je
lock
loop
xor
add
clc
lcall
clc
sbb
xchg
cmp
adc
add
add
sbb
clc
xchg
sar
clc
stos
mov
sub
nop
jmp
rclb
test
add
mov
adc
add
push
and
and
xorps
jmp
mov
cmp
cltd
inc
add
lock
ret
clc
or
clc
pop
clc
jmp
ret
clc
mov
push
mov
xchg
ret
cltd
stc
mov
cmpsb
clc
cmp
push
xchg
test
jne
nop
jmp
add
clc
js
pop
jmp
add
push
cmp
add
cwtl
sub
push
data16
sub
cmpsb
clc
rolb
add
dec
xchg
sbb
sbb
add
clc
dec
pop
xbegin
in
inc
add
lcall
xlat
or
mov
clc
sub
or
mov
nop
jmp
lock
add
popa
add
sub
ficomps
test
add
out
ljmp
xchg
inc
add
sbb
iret
sub
add
inc
add
mov
add
divl
add
and
pop
sbb
nop
jmp
add
icebp
add
push
int3
push
sbb
add
clc
out
or
add
pmaxsw
add
add
mov
je
bound
add
mov
xchg
ret
repz
push
in
mov
clc
mov
clc
cmpsb
clc
add
inc
clc
mov
sbb
add
push
push
mov
xchg
ret
add
push
lea
repnz
lods
lret
inc
clc
lret
jne
add
xchg
int3
std
sbb
jmp
add
lret
jae
jmp
cmc
push
lcall
fisubrs
in
test
lods
jmp
clc
stos
test
rorb
mov
fnstenv
add
clc
ja
call
nop
jmp
mov
repz
lahf
mov
repz
adc
add
clc
fs
push
sti
lahf
icebp
fs
add
add
add
mov
clc
fwait
das
gs
fcompl
push
add
jb
add
pop
jmp
arpl
jmp
and
adc
add
sar
aas
stos
mov
movsb
clc
add
add
mov
clc
sbb
dec
cmp
jmp
push
mov
cmp
test
sbb
gs
sbb
outsl
jecxz
dec
std
sar
and
add
shl
push
je
nop
jmp
jecxz
lods
inc
clc
movsb
clc
gs
repnz
mov
sahf
cmp
test
mov
clc
jg
push
add
loop
mov
add
call
add
and
add
add
xor
add
clc
lods
dec
and
cmovo
add
or
add
inc
clc
mov
sar
clc
lock
add
jae
add
sub
cmp
mov
outsl
test
clc
leave
out
or
jb
add
js
clc
ljmp
clc
cli
repz
ret
xchg
lods
in
fnsave
clc
adc
add
pusha
add
cmp
pushf
mov
jb
add
or
iret
xor
add
fnstcw
and
add
scas
cmp
fwait
sub
popf
insl
ljmp
cmp
data16
mov
add
out
aad
fs
fcomps
mov
cmp
jo
add
dec
xchg
dec
imul
mov
test
xchg
jo
add
std
stos
jb
add
cmp
dec
pop
mov
sbb
add
or
daa
clc
sbb
clc
pop
xchg
clc
cmp
int
clc
sub
mov
jmp
mov
nop
jmp
push
lock
iret
sbb
add
sbb
add
add
jp
vdivps
cmpsb
clc
data16
push
add
lahf
stc
xbegin
mov
xor
add
dec
xchg
cwtl
shrl
add
add
add
add
xchg
cmpsb
clc
loop
lods
push
mov
lret
cmp
lahf
aas
shr
bnd
add
clc
jns
add
into
out
xchg
push
stos
rorb
pop
lods
loop
xabort
add
mov
movsl
clc
adc
add
inc
add
sbb
nop
jmp
lods
add
or
lock
clc
pushf
add
add
add
dec
adc
add
add
add
sti
and
add
lret
pop
xlat
and
add
clc
sub
and
add
add
je
adc
add
add
add
inc
clc
and
jnp
icebp
mov
out
inc
add
jnp
xor
add
jl
xor
add
cmp
dec
data16
cmp
jp
fwait
add
add
clc
xbegin
clc
xor
lcall
xor
idivb
push
push
add
and
push
imul
cmp
nop
jmp
jns
fisubs
clc
pop
scas
aaa
lret
adc
add
daa
clc
cmp
clc
daa
clc
jl
pop
cli
or
clc
mov
inc
clc
mov
mov
adc
add
add
cmp
clc
dec
push
push
call
add
or
add
add
adc
add
clc
and
add
add
mov
jmp
mov
inc
mov
add
add
inc
clc
or
ror
push
mov
xchg
ret
jge
fwait
jns
add
add
push
push
cmc
jge
add
push
sbb
mov
lret
clc
mov
mov
clc
inc
add
or
clc
nop
jne
inc
add
mov
add
add
jb,pn
add
pop
push
add
loop
jnp
add
mov
adc
push
pop
sub
ds
cmp
jmp
lea
arpl
add
add
add
add
sbb
cmp
add
dec
jae
add
mov
add
enter
jno
add
xchg
and
push
add
adc
iret
xor
mov
clc
clc
push
bound
add
mov
lock
dec
shl
mov
lock
clc
jecxz
or
dec
cmp
mov
xchg
mov
clc
cmpsb
clc
adc
add
adc
add
xabort
push
mov
push
mov
xchg
ret
mov
inc
add
sar
decl
jo
call
adc
mov
fadds
xchg
ret
lea
repz
add
add
dec
test
pop
cmc
push
push
mov
nop
jmp
add
fwait
addr16
add
add
loopne
mov
clc
cmp
jnp
or
add
or
add
nop
jmp
mov
jns
test
pusha
add
mov
in
test
sbb
push
add
loopne
sbb
jmp
mov
xchg
ret
loopne
mov
dec
mov
xor
nop
jmp
add
pop
adc
cmp
clc
sar
xor
add
add
hlt
mov
push
mov
xchg
ret
mov
jne
nop
jmp
sub
daa
clc
loopne
xchg
sbb
jbe
lods
sub
push
cmpsl
clc
ds
clc
sub
out
adc
add
clc
aam
mov
dec
xchg
popf
cmp
clc
sub
jecxz
adc
jp
mov
lock
add
fbld
mov
call
add
add
std
cmp
ss
mov
nop
jmp
jns
push
add
mov
mov
mov
xchg
ret
jecxz
xor
cwtl
mov
add
add
and
add
stos
xor
clc
lcall
mov
add
nop
jmp
test
fimuls
data16
push
bswap
pop
xchg
mov
add
jno
add
xchg
aas
push
add
outsb
add
add
add
popa
add
sub
into
pop
clc
or
clc
jae
add
xchg
lcall
orps
lods
data16
jae
add
add
ret
clc
mov
fndisi(8087
clc
shll
nop
jmp
inc
lret
add
cltd
jae
add
ljmp
sub
add
mov
test
mov
add
int3
dec
in
dec
ds
push
or
xor
pop
repz
clc
in
std
add
add
add
nop
jmp
mov
cmp
mov
packuswb
mov
clc
pop
adc
add
inc
clc
outsl
add
add
sahf
adc
add
clc
adc
pop
add
add
adc
jmp
aad
and
add
add
add
fistpl
add
negl
fsubl
add
clc
mov
leave
cmpsb
clc
clc
je
add
add
stc
push
sub
daa
clc
das
inc
add
lcall
in
into
and
jne
add
scas
dec
mov
cltd
jmp
clc
fwait
adc
add
mov
add
xor
add
clc
test
clc
xchg
and
add
add
pop
mov
popa
nop
jmp
in
aad
cmp
add
or
mov
imul
in
jg
add
add
push
mov
xchg
ret
dec
sbb
clc
iret
push
mov
push
mov
xchg
ret
mov
and
xor
clc
jmp
jnp
lcall
decl
adc
call
add
add
cmp
enter
cmp
add
negl
imul
outsb
mov
adc
dec
mov
imul
and
add
add
sub
add
mov
in
push
add
and
add
int3
mov
clc
ljmp
clc
dec
jae
add
add
pushf
pop
cmpsb
clc
test
arpl
add
cld
in
gs
adc
stos
sub
aam
es
out
jae
add
xchg
or
add
inc
clc
scas
insb
scas
xor
add
mov
add
faddp
clc
lret
inc
clc
sbb
add
clc
pop
lock
aam
xchg
or
mov
nop
jmp
icebp
pop
and
add
inc
clc
dec
xlat
jnp
add
adc
add
clc
inc
add
mov
popf
leave
fildl
add
clc
jl
mov
nop
jmp
and
lods
or
sub
add
add
add
faddp
clc
and
add
clc
lret
clc
in
pusha
add
lods
sar
clc
sub
push
clc
push
aas
xor
add
sbb
repnz
push
pop
rolb
xchg
ret
mov
xabort
sub
data16
fwait
jo
add
aad
add
loop
rsm
dec
nop
sub
clc
dec
and
add
je
pop
ds
sub
clc
cmp
call
nop
jmp
mov
scas
iret
push
mov
nop
jmp
add
aad
mov
jbe,pn
xchg
cmp
clc
pop
and
add
movsl
clc
xchg
mov
sar
xabort
or
jae
add
fs
adc
add
cmp
add
clc
mulb
int
clc
repz
clc
push
add
sti
xbegin
add
lcall
add
add
leave
out
cmp
mov
inc
add
lock
add
cmpsl
clc
test
mov
add
add
jecxz
sub
loop
mov
dec
popl
add
sub
fstpl
or
loop
jno
add
xbegin
add
inc
add
dec
xabort
add
mov
add
jne
add
pop
sub
fdivrs
data16
sar
pop
clc
jno
add
clc
out
sahf
adc
add
add
push
mov
add
pop
and
add
clc
cmp
push
insb
xabort
xor
add
jbe
and
inc
add
mov
outsl
mov
clc
lods
inc
add
or
add
mov
shlb
inc
mov
sar
xor
push
nop
jmp
mov
fiadds
sub
clc
xor
add
popa
add
push
jns
xor
add
add
clc
es
sub
in
jp
stc
aam
add
mov
clc
icebp
sub
add
add
add
add
cmp
neg
imul
in
or
dec
mov
clc
xbegin
clc
xor
add
repz
stc
shr
and
add
lret
dec
clc
cmp
inc
clc
push
xchg
imul
add
fwait
mov
clc
dec
in
cmp
clc
mov
int3
decl
stc
add
mov
loop
mov
add
sti
mov
add
xchg
outsb
cmp
or
add
add
js
xor
add
sub
clc
inc
clc
outsl
fwait
cmp
rcrl
mov
clc
jmp
mov
nop
jmp
aad
dec
dec
jns
xchg
cmp
clc
sbb
nop
jmp
lret
icebp
inc
lods
repz
jns
cmp
add
nop
jmp
push
jecxz
xor
add
enter
pop
push
add
push
clc
lock
add
add
add
pop
out
addr16
and
in
mov
dec
sub
sub
pushf
ja
clc
mov
and
add
jnp
add
aam
stos
mov
insl
negb
add
add
xchg
insb
sar
inc
add
xchg
xchg
adc
add
pushl
push
mov
xchg
ret
mov
and
add
movsb
clc
jg
pop
cmp
mov
clc
scas
je
sub
adc
add
cmp
jge
clc
mov
cmpsl
out
inc
add
xchg
add
fmul
jmp
mov
add
dec
arpl
add
clc
clc
inc
clc
push
pushf
movsl
clc
popa
add
mov
sub
add
shrl
dec
sbb
push
mov
xchg
ret
lret
xchg
sub
nop
jmp
push
add
int3
add
call
clc
push
pop
jo
add
xabort
mov
sbb
sub
xor
add
movsl
clc
sub
lcall
cmp
add
mov
mov
mov
jp
inc
add
sub
mov
mov
inc
mov
icebp
sahf
fnstcw
add
push
mov
repnz
and
add
clc
daa
clc
lods
arpl
add
add
scas
dec
shr
dec
cmp
clc
lods
sub
clc
sar
add
add
insl
movsb
clc
cmpsl
clc
or
decl
aaa
ljmp
add
data16
fmul
and
add
push
add
dec
outsl
pop
pop
es
dec
jp
in
shrl
imul
clc
int
add
clc
cmp
ds
mov
add
xlat
adc
sub
jb
add
add
das
cmp
mov
rcrb
sbb
jmp
add
adc
shlb
data16
mov
je
clc
clc
jmp
and
cs
clc
cmpsl
clc
imul
clc
aam
int
je
nop
jmp
mov
jbe
mov
or
push
test
clc
int
or
cmovs
push
add
xchg
push
mov
add
mov
xor
add
add
je
clc
fcompl
sar
mov
push
inc
add
sbb
mov
clc
ja
clc
gs
jae
add
clc
and
addr16
cli
sbb
xchg
xchg
lods
sbb
nop
jmp
or
fidivs
scas
cmp
clc
dec
xchg
daa
clc
jne
dec
xlat
nop
xor
add
add
rol
clc
hlt
jmp
sti
shl
cmpsl
clc
mov
add
mov
lea
nop
jmp
sbb
add
movsb
clc
inc
add
daa
clc
imul
xchg
push
add
insl
or
and
shl
clc
idiv
mov
add
add
inc
add
inc
add
mov
adc
add
xchg
roll
xor
add
add
popa
add
imul
add
incl
mov
push
mov
clc
loopne
sub
add
jg
ret
clc
xor
add
insl
cmp
mov
add
adc
pop
pop
mov
adc
clc
lods
dec
lahf
add
jbe
and
add
add
and
add
clc
sbb
clc
jge
lret
sar
jmp
clc
push
jp
clc
xchg
es
repz
mov
fimuls
ja
clc
into
push
push
push
mov
xchg
ret
add
add
clc
mov
or
add
int3
xchg
mov
add
inc
add
dec
icebp
xchg
add
add
jl
clc
sub
xor
add
clc
lods
mov
cmc
ss
add
add
sbb
test
js
bound
add
pushf
fwait
icebp
push
clc
inc
add
mov
adc
add
push
clc
das
dec
dec
or
clc
into
cmp
push
add
pop
out
scas
adc
add
nop
jmp
add
dec
lret
fbld
roll
sbb
jmp
jp
nop
jmp
lock
add
inc
clc
repnz
clc
stos
sub
mov
add
sahf
call
clc
cmpsl
clc
pusha
add
adc
add
andps
push
sub
add
mov
imul
cmp
pusha
add
cmp
clc
pop
cmpsl
clc
and
add
add
sbb
xchg
enter
sbb
mov
out
test
pop
loopne
xor
add
clc
pop
cmp
clc
xchg
out
clc
add
add
add
jb
add
aaa
pop
cld
and
add
enter
mov
and
add
dec
out
push
xbegin
dec
lahf
mov
lret
pop
or
clc
add
add
xabort
leave
inc
add
xor
add
add
add
push
clc
aad
add
xchg
xchg
mov
dec
jmp
clc
stos
mov
int
leave
mov
mov
clc
pop
pop
sub
xlat
push
je
nop
jmp
xchg
test
mov
inc
add
idivb
add
dec
insl
push
add
aad
gs
imul
clc
aaa
cli
fwait
pop
cli
addr16
push
xbegin
dec
mov
pop
cmc
pop
imul
clc
sar
fcoms
add
mov
cmp
push
inc
add
xchg
pop
sub
and
add
clc
icebp
into
cmp
clc
clc
add
add
clc
ficompl
mov
mov
push
nop
test
insl
and
cmp
jg
push
clc
shl
call
add
jbe
clc
push
scas
or
xor
and
add
pop
mov
xor
add
loope
or
in
jmp
add
add
aad
mov
add
nop
jmp
jge
jae
add
mov
sti
enter
jno
add
adc
add
clc
jmp
add
adc
add
int
clc
rcrb
fxch
jmp
pop
inc
add
scas
sub
clc
and
add
add
repnz
flds
insl
fstl
add
adc
add
or
clc
push
add
nop
jmp
xor
int
jo
add
cmpsl
clc
and
add
add
aaa
fiaddl
push
clc
pop
paddb
jmp
add
jb
add
in
test
jmp
add
icebp
add
add
inc
add
mov
dec
int
sub
xchg
push
nop
jmp
lea
jae
psubusw
jge
rep
nop
jmp
add
fildll
mov
jne
nop
jmp
add
cltd
fistps
ss
dec
xbegin
adc
add
aaa
daa
clc
jno
add
or
lods
mov
out
ljmp
popa
add
fwait
popa
add
cs
ret
clc
add
add
ss
jl
je
clc
mov
sar
sti
xchg
lcall
push
add
xchg
and
add
out
cmpsb
clc
jo
add
mov
xor
add
iret
cmpsl
clc
out
cmp
clc
scas
cli
aad
mov
add
clc
dec
fnstenv
add
add
add
add
jns
add
scas
mov
add
push
je
nop
jmp
add
xchg
addr16
fdivp
mov
lret
ljmp
clc
aas
je
adc
add
cli
test
add
in
in
cmp
add
pop
cmpsl
clc
inc
add
je
add
faddl
add
flds
add
inc
clc
int3
aaa
ljmp
add
add
cltd
das
pop
xchg
js
sub
mov
jnp
call
fistpll
outsl
lret
std
pop
xchg
out
nop
sbb
mov
mov
and
mulb
add
xchg
pop
cltd
data16
stc
cmp
clc
filds
add
dec
fsubl
clc
in
test
outsl
add
add
xor
add
cmpsl
clc
out
loope
into
sbb
es
int
clc
xchg
jecxz
xabort
clc
filds
sbb
iret
sub
mov
fsubs
fcompl
clc
cmp
fsubr
loopne
mov
movzwl
nop
jmp
lods
add
and
jae
add
jae
add
add
mov
iret
in
sub
clc
ljmp
mov
add
out
pop
and
add
nop
cmc
add
and
add
clc
jns
adc
add
pop
clc
hlt
pop
cmp
pop
ja
repz
cmc
mov
or
add
push
mov
xchg
ret
aad
daa
clc
push
add
clc
mov
inc
clc
data16
xor
add
inc
clc
mov
pop
xchg
and
add
add
cmc
lea
and
mov
mov
add
clc
aam
lea
add
add
add
add
add
clc
lock
clc
into
xor
add
add
nop
jmp
and
sbb
add
add
add
inc
clc
outsb
inc
add
out
fcomi
mov
add
jbe
mov
clc
clc
pop
add
add
clc
or
clc
call
aaa
mov
push
roll
add
loope
push
mov
add
loope
cmp
in
xchg
pop
leave
mov
out
pop
mov
es
mov
xchg
out
xchg
clc
fiaddl
clc
fiaddl
sahf
cmp
out
out
nop
jmp
mov
sti
jmp
inc
clc
push
sbb
add
and
add
clc
mov
sub
mov
clc
dec
sbb
and
add
clc
fs
loopne
loop
inc
add
xchg
cmp
cmp
clc
sub
pop
loope
sti
mov
out
xchg
mov
movsb
clc
cmpsl
clc
sar
push
iret
test
mov
jns
add
jae
add
add
push
clc
pop
add
add
cmp
clc
fsub
clc
mov
cmp
gs
sar
sub
pusha
add
xchg
add
jne
mov
add
mov
ret
nop
jmp
aad
data16
mov
pop
clc
jo
add
bound
add
sbb
xor
nop
jmp
add
int3
lock
sbb
push
sbb
shrb
shl
clc
xchg
push
arpl
add
add
add
aaa
xor
add
xchg
loopne
jns
pop
push
mov
xchg
ret
add
add
pop
xchg
pop
sar
jmp
adc
clc
push
add
dec
add
add
clc
and
add
cltd
mov
add
mov
or
add
add
addr16
lcall
add
clc
mov
and
jne
add
ss
add
add
add
aas
mov
dec
mov
data16
or
mov
data16
je
clc
dec
or
xchg
ljmp
cld
mov
sbb
push
xchg
add
enter
iret
push
fisubrs
test
mov
add
cmp
ficoml
xchg
or
clc
inc
clc
cmp
add
add
add
add
clc
sub
stos
pop
jmp
fisubl
outsl
dec
repz
mov
lods
and
add
add
sub
vmulps
gs
jl
insb
and
cmc
lods
nop
cmp
add
mov
imul
add
add
mov
add
das
stos
pop
adc
add
je
add
xchg
jmp
gs
inc
clc
adc
add
nop
jmp
jne
mov
adc
clc
idivb
popa
add
cmc
jmp
clc
push
add
jbe
enter
push
add
xchg
push
clc
mov
xor
add
clc
xchg
sub
clc
sbb
adc
incl
lea
add
cmp
arpl
add
clc
and
lahf
lea
adc
add
jl
clc
mov
add
jb
add
add
insb
push
add
pop
push
dec
push
mov
xchg
ret
add
addr16
test
inc
add
add
add
add
repnz
lods
lcall
add
pop
xlat
aad
cmp
xbegin
add
add
sub
adc
cmp
cmp
add
adc
add
mov
add
fwait
ja
sub
clc
sub
add
add
and
add
shrb
clc
xor
mov
clc
pop
fidivs
div
push
mov
nop
jmp
push
jns
inc
int3
mov
lea
daa
clc
mov
clc
stos
cmp
data16
lret
and
add
data16
dec
mov
pushf
sahf
cltd
and
shll
add
mov
shll
mov
add
jle
clc
cld
mov
and
add
clc
mov
sub
into
push
mov
stos
lahf
push
add
add
dec
mov
add
adc
add
clc
imul
xchg
lods
jmp
mov
push
mov
sub
add
bound
add
and
add
add
dec
ja
inc
add
loope
int3
jnp
clc
stos
pop
clc
push
clc
sahf
cmp
adc
add
add
adc
add
cld
add
add
push
mov
xchg
ret
add
xchg
mov
fnstenv
add
mov
add
sub
iret
test
adc
add
clc
add
or
negb
add
test
addr16
cwtl
mov
sub
mov
insl
cltd
addr16
jg
jle
gs
pop
test
jb
add
jno
add
sahf
rcrl
out
jnp
lahf
int3
add
add
push
mov
xchg
ret
lea
add
mov
sar
add
inc
clc
mov
int
add
leave
std
sti
pusha
add
out
adc
pop
hlt
int
clc
cmp
push
add
dec
cmp
add
sti
aad
clc
or
add
call
jl
add
pop
sar
dec
pop
stos
loop
and
jmp
or
nop
jmp
add
jne
add
add
clc
mov
loope
or
leave
fdivrl
cltd
lods
add
add
add
inc
clc
test
mov
add
jnp
add
jg
add
stos
pop
clc
sub
clc
jne
add
adc
add
inc
clc
xor
add
outsl
cltd
mov
imul
inc
clc
inc
add
scas
stos
imul
xor
add
ret
add
insb
sbb
addr16
aas
push
add
adc
decl
mov
xchg
ret
and
add
adc
jnp
and
shlb
sti
in
cmp
add
add
push
clc
jle
add
add
add
clc
pop
jns
and
push
mov
xchg
ret
xchg
xchg
pop
bound
add
xor
js
cmc
out
pop
insl
jnp
clc
adc
add
add
jle
sbb
scas
and
add
add
or
add
fisttpll
xor
add
cwtl
insl
and
add
nop
jmp
and
add
xchg
sbb
ljmp
push
jmp
lock
add
xor
inc
clc
mov
mov
clc
adc
add
clc
repz
loop
pop
jg
add
xlat
sub
add
xchg
cld
dec
fs
push
add
jle
dec
mov
and
cwtl
dec
cmp
fdivp
mov
sarl
cmp
clc
cmp
xchg
add
add
mov
clc
or
clc
adc
add
adc
add
scas
or
cmp
rep
nop
jmp
inc
dec
add
aad
push
add
mull
sar
lock
pop
lahf
cmpsb
clc
in
out
arpl
add
lahf
leave
adc
add
add
fldenv
ss
in
ljmp
dec
stos
cli
sub
sbb
nop
jmp
stc
add
pop
dec
imul
in
fst
fdivs
or
add
cmp
pop
cltd
mov
int
clc
in
fchs
clc
call
clc
jg
add
mov
push
add
nop
jmp
sarb
shlb
arpl
add
es
jns
pushf
inc
add
xbegin
data16
sub
clc
cltd
pop
jecxz
testl
loop
jne
inc
add
lahf
adc
or
clc
pop
xor
add
clc
push
xbegin
or
xlat
sbb
mov
test
push
outsl
scas
cmp
jb
add
add
jns
sub
add
pop
mov
loopne
jno
add
push
clc
dec
aaa
add
mov
in
pop
cld
clc
test
or
clc
inc
add
xor
add
dec
inc
clc
or
jns
clc
inc
add
lock
add
add
nop
jmp
add
add
push
add
lods
and
rep
nop
jmp
shl
lea
aad
mov
jecxz
jp
inc
clc
icebp
sub
clc
iret
dec
dec
je
lods
shll
add
inc
clc
out
enter
es
jle
clc
cmpsl
clc
sti
lods
mov
push
add
dec
lods
sbb
add
jmp
push
cmc
cmp
xor
mov
lcall
rclb
dec
sahf
and
add
popf
mull
aad
call
cld
cmp
xchg
push
push
nop
jmp
fimuls
data16
daa
clc
ret
mov
loop
dec
iret
imul
add
add
nop
jmp
add
rorl
into
and
out
mov
call
inc
add
cmpsb
clc
jmp
add
nop
jmp
mov
add
dec
sub
mov
ret
clc
or
add
nopl
nop
jmp
int3
push
add
mov
clc
sub
sbb
cmpsl
clc
push
adc
inc
add
fidivs
add
adc
add
add
jge
pop
push
mov
nop
jmp
lret
test
add
mov
add
xchg
loop
aam
push
cmc
mov
add
mov
daa
clc
cli
mov
jmp
clc
adc
add
repnz
mov
test
data16
fmulp
data16
decb
xchg
inc
clc
in
push
out
or
mov
addr16
cmp
add
add
add
push
cmp
insb
sbb
push
cltd
inc
add
push
push
add
rcr
sub
dec
in
jns
sub
mov
nop
jmp
add
add
cmp
mov
clc
push
cli
jle
add
xlat
lea
pop
ljmp
add
mov
in
xor
xchg
ret
push
rolb
clc
xchg
push
add
ss
cmp
mov
add
sbb
outsl
std
cmp
add
cmp
clc
stc
xor
add
pop
xchg
mov
rol
clc
mov
shrb
repnz
add
add
cmp
clc
mov
pop
popf
push
aaa
pop
pop
xchg
mov
clc
push
lock
mov
add
push
clc
std
rclb
andnps
xchg
ret
add
add
int3
out
adc
add
clc
imul
clc
push
test
nop
jmp
add
xchg
fistpll
add
mulb
add
sub
push
lret
pop
test
jbe
sbb
xor
clc
dec
clc
mov
or
clc
cmp
add
mov
mov
push
push
mov
xchg
ret
rolb
add
or
push
add
xchg
push
clc
cmpsb
clc
ljmp
clc
and
add
add
adc
add
adc
sub
clc
out
imull
imul
icebp
inc
add
mov
clc
cmp
lods
outsl
sub
add
sbb
jmp
aad
mov
movzbl
call
add
int
loope
adc
dec
in
and
rcr
fisttpl
stc
and
add
xchg
or
push
clc
out
and
add
clc
or
add
cmp
and
nop
jmp
lret
add
add
stos
jbe
inc
clc
cld
xlat
jmp
clc
mov
clc
xchg
and
add
jecxz
mov
fs
xchg
insb
push
push
push
mov
xchg
ret
int3
add
add
ficompl
mov
adc
add
add
pop
hlt
nop
add
add
clc
test
add
lods
and
add
add
or
add
icebp
push
add
movsb
clc
icebp
cmp
adc
add
cmp
pop
xchg
mov
or
xor
add
add
nop
inc
add
es
clc
adc
shlb
sti
jmp
clc
outsl
sbb
clc
clc
mov
fistps
lods
cmp
clc
shrb
clc
lea
movzwl
nop
jmp
mov
clc
dec
clc
nop
movsl
clc
fimull
repz
xor
pop
push
ret
nop
jmp
inc
push
and
mov
pop
fildl
clc
mov
packssdw
add
push
addr16
xchg
aaa
adc
add
add
clc
and
add
jge
in
xchg
xchg
cmp
fs
xbegin
adc
add
add
add
fisubrs
add
lock
test
mov
cli
jecxz
in
lods
je
add
mov
loopne
notl
add
jnp
add
data16
mov
jmp
mov
mov
mov
lret
shll
loope
jp
add
sar
clc
inc
clc
dec
test
in
cmp
daa
clc
mov
push
enter
clc
loope
pop
and
add
in
add
shrl
add
shl
clc
cmp
add
and
clc
in
int
imul
add
pop
shlb
add
aaa
popf
js
push
sbb
incl
stc
add
add
xor
data16
shll
mov
rol
clc
adc
add
clc
ret
add
or
mov
inc
clc
out
shl
clc
cmp
add
push
add
lods
leave
sbb
aam
add
add
cmp
adc
add
add
fnstcw
push
jns
mov
clc
imull
fdivs
popl
mov
das
sarb
push
add
mov
add
and
add
aas
pop
cmp
lock
clc
loopne
sub
clc
xchg
fdivrp
xor
nop
jmp
xchg
jge
and
pop
cmp
cmp
je
add
mov
cltd
jbe
cmp
nop
ja
popf
jae
add
ljmp
xlat
mov
add
sbb
cmp
add
sahf
fsubrs
xbegin
and
add
add
mov
sub
xchg
lock
add
sbb
loop
mov
add
xchg
test
sub
clc
iret
add
add
out
nop
in
aas
sbb
pushf
loope
lods
aaa
mov
ss
clc
sub
clc
movd
clc
sub
clc
jmp
mov
add
dec
inc
add
inc
add
aas
sar
clc
inc
add
sar
in
inc
add
sub
cmp
add
add
add
push
mov
nop
jmp
mov
push
inc
repz
inc
add
fistps
mov
clc
inc
add
cmp
or
push
clc
xchg
cmp
clc
lret
add
add
sbb
push
jns
ret
clc
lret
mov
dec
dec
jp
clc
push
lea
repnz
add
push
rep
nop
jmp
mov
push
and
pusha
add
cmp
sub
dec
jae
add
add
clc
cld
mov
aaa
ret
clc
mov
clc
xlat
pop
pop
movsl
clc
je
add
ss
clc
addr16
adc
clc
push
dec
popa
add
ret
xor
add
xchg
xchg
sbb
into
jle
add
nop
jmp
loopne
sub
add
jno
add
outsb
jg
stos
aaa
xor
clc
cmp
mov
add
add
inc
clc
cmp
mov
popf
mov
add
mov
mov
inc
clc
pusha
add
push
pop
test
loopne
push
mov
shrl
mov
add
add
push
add
icebp
mov
clc
psubd
add
cmp
add
lret
data16
cmp
nop
jmp
rolb
sldt
jecxz
adc
add
in
pusha
add
adc
in
cmp
add
aaa
std
mov
add
call
adc
add
add
or
mov
nop
jmp
test
and
inc
clc
push
add
mov
inc
add
ret
aaa
sar
inc
add
mov
clc
jle
clc
inc
clc
rorb
loop,pt
nop
icebp
sti
sar
push
rolb
add
add
cs
adc
add
clc
in
mov
das
repnz
xchg
mov
imul
in
jne
clc
mov
inc
add
cmp
add
pop
popf
xchg
ret
clc
add
add
add
push
mov
clc
or
cwtl
fidivrs
and
add
mov
clc
dec
dec
jmp
dec
clc
sar
data16
xor
je
clc
cmc
mov
scas
pushl
cmp
add
int3
ror
sbb
jl
and
add
lcall
fcoms
add
jbe
add
mov
in
and
lea
fwait
movsl
clc
xor
add
add
movsb
clc
or
add
add
add
clc
clc
ret
clc
sar
cmp
clc
jb
add
push
add
mov
ret
clc
and
add
ret
clc
lock
add
mov
jbe
data16
sbb
adc
add
and
add
cmc
push
add
push
add
jg
test
addr16
push
call
call
push
mov
ljmp
shlb
mov
pushl
fistl
or
inc
add
dec
shlb
ret
adc
add
lahf
sti
idiv
in
push
add
nop
jmp
dec
xchg
jns
or
add
insl
dec
pop
lcall
add
adc
add
loope
mov
sti
xchg
mov
add
loop
push
add
into
mov
clc
fmuls
jmp
mov
cmp
add
xchg
add
mov
pushf
mov
ret
clc
jno
add
push
nop
jmp
push
add
out
pop
mov
jns
sbb
xor
pushl
add
push
add
stos
sbb
add
out
push
clc
push
clc
xchg
or
sbb
add
ss
add
faddp
clc
inc
nop
jmp
jae
xor
add
clc
push
adc
add
add
add
fs
sbb
push
clc
xabort
mov
rolb
jmp
jns
add
mov
gs
mov
clc
cltd
sub
or
add
add
mov
mov
jge
add
adc
add
xchg
mov
sub
mov
aas
push
pop
add
add
add
mov
jg
cmp
add
sar
clc
mov
repnz
clc
push
ficoms
mov
clc
jmp
jnp
rcll
add
clc
pop
sub
call
aas
mov
clc
mov
daa
cmpsb
incl
cmp
pop
xlat
inc
add
ss
xor
nop
jmp
xor
add
adc
add
loop
and
add
into
ret
clc
mov
dec
xchg
dec
mov
clc
pop
dec
movsl
clc
mov
clc
std
mov
sub
cmp
add
cmp
xor
xor
add
add
push
add
sbb
jno,pn
add
add
clc
aaa
sub
nop
jmp
data16
dec
dec
mov
out
pop
push
fs
sahf
mov
add
jb
add
clc
popf
inc
clc
inc
add
lcall
test
cld
mov
clc
pop
xor
nop
jmp
icebp
jae
mov
xchg
mov
clc
adc
add
pop
xchg
aaa
out
cld
jge
clc
fists
mov
mov
sbb
movsl
clc
sub
mov
mov
xchg
mov
and
add
ds
dec
cmp
sbb
clc
pop
lahf
xchg
pop
cli
cli
jp
and
add
mov
cld
movsl
clc
dec
and
add
sbb
sti
stc
lods
push
mov
call
call
out
data16
cli
lods
mov
clc
mov
sub
dec
adc
add
add
dec
adc
and
add
clc
cmp
sub
add
in
cmp
clc
loopne
enter
mov
clc
pop
in
inc
add
xchg
leave
cld
pop
or
lret
data16
movsl
clc
mov
sub
pop
cltd
stos
mov
imul
dec
incb
clc
adc
add
sar
js
or
push
clc
dec
ds
clc
sarl
clc
scas
add
add
add
shl
push
mov
xchg
ret
sub
add
xabort
clc
fcmovnu
cs
clc
das
scas
scas
enter
add
mov
stos
cmp
imul
cmp
xor
add
add
gs
stc
mov
cmp
clc
lods
sahf
adc
add
clc
es
into
xor
add
pop
xchg
jp
clc
jne
xabort
inc
clc
adc
mov
clc
push
jne
clc
in
stos
pop
inc
clc
or
add
clc
lret
or
outsb
cmp
mov
add
fimull
mov
clc
cmc
xor
add
mov
call
nop
jmp
push
lea
xchg
mov
mov
clc
jo
add
add
dec
xchg
aad
add
add
pshufw
ds
out
adc
add
xor
add
xor
add
xor
add
add
pop
fldenv
add
aas
mov
clc
movsl
clc
and
add
add
out
add
add
popf
popf
adc
add
mov
fwait
stc
in
mov
clc
mov
pushf
push
jmp
lock
add
fsubs
add
das
or
clc
lock
xor
ljmp
mov
cmpsl
clc
mov
out
jmp
clc
and
add
dec
sub
add
or
cltd
cmp
add
mov
bound
add
clc
cli
popf
shll
add
shll
or
mov
add
loop
add
add
mov
fldenv
add
add
push
fisubs
lea
fs
cmp
add
and
add
ret
clc
jge
clc
imul
add
add
scas
loop
inc
add
mov
insb
cmp
lret
add
push
add
xbegin
fwait
mov
mov
std
push
lahf
test
xchg
and
pop
sbb
nop
jmp
lret
mov
mov
add
scas
inc
clc
mov
inc
mov
incl
cmp
and
out
jb
add
add
pop
insl
mov
mov
clc
mov
aas
test
ds
dec
or
xchg
aaa
mov
icebp
in
mov
mov
clc
mov
add
std
aam
aad
clc
inc
clc
pop
push
add
imul
rcrl
loop
leave
mov
mov
dec
or
aad
out
cltd
mov
add
xor
add
clc
out
in
popa
add
pop
int
clc
das
hlt
and
mov
lock
add
cmp
clc
enter
cltd
mov
call
incl
add
mov
clc
jae
add
xor
int3
popa
add
int3
loopne
fbstp
add
or
repz
clc
cmp
pusha
nop
jmp
int3
filds
or
jne
aad
sbb
clc
lock
push
jl
mov
lods
nop
jmp
dec
add
xchg
push
mov
popf
adc
add
add
add
add
add
rcll
out
dec
outsl
mov
pop
mov
xor
xchg
ret
add
sbb
test
jmp
clc
movsb
clc
in
mov
clc
sar
add
add
mov
add
jb
add
outsl
leave
std
adc
sub
pop
nop
or
add
data16
push
call
incl
xchg
mov
lods
or
add
das
cmp
mov
dec
adc
add
fmuls
xor
add
cmc
sbb
repz
clc
inc
clc
enter
push
cmp
nop
jmp
mov
add
add
inc
add
cmp
clc
in
lahf
xlat
ffree
clc
lret
adc
call
xor
cmp
nop
jmp
in
dec
stc
push
add
sbb
add
mov
add
jmp
jecxz
loopne
popf
pop
in
insl
lahf
loopne
sar
clc
sar
hlt
inc
clc
cmp
add
addr16
cli
fsubp
clc
mov
add
divb
add
xchg
xchg
sub
notl
add
in
fildl
add
clc
mov
in
or
clc
mov
clc
in
test
xabort
add
push
ficompl
movsl
clc
jg
add
push
add
stos
sub
add
dec
jl
clc
gs
xchg
mov
mov
mov
loopne
add
popf
cmp
add
dec
pop
clc
pop
icebp
arpl
add
cmc
cmp
clc
cmp
sbb
add
clc
adc
add
jge
clc
into
pusha
add
sub
add
mov
clc
push
clc
int
data16
xor
add
add
and
add
aad
clc
loopne
adc
add
add
int
pop
outsl
fwait
std
ss
clc
cmp
cmp
lea
xlat
sub
clc
or
aam
arpl
add
clc
pop
clc
fistpll
es
add
add
cwtl
dec
xchg
jb
add
add
clc
xor
into
xchg
fsubl
xabort
add
nop
jmp
push
loopne
and
rcrl
mov
xchg
mov
jg
adc
add
mov
inc
add
out
xchg
and
add
mov
outsl
js
fldenv
push
add
fldenv
add
clc
cmp
insb
jno
add
mov
xchg
xbegin
add
clc
add
add
out
sub
xchg
sbb
jmp
cmovp
scas
push
loopne
call
mov
ljmp
mov
add
lea
enter
mov
std
leave
iret
fwait
xchg
mov
push
mov
add
nop
jmp
jae
push
pop
and
add
add
clc
xchg
pushf
inc
add
xor
inc
clc
cmpsb
clc
jnp
hlt
shll
pop
mov
ds
sub
cmp
cmp
add
add
imul
nop
and
add
mov
clc
mov
scas
push
add
jp
cmp
mov
add
add
inc
clc
addr16
and
add
push
pop
xor
cmp
out
ret
clc
adc
or
lods
xchg
es
loop
adc
add
dec
mov
adc
add
fbstp
pop
iret
pop
clc
ljmp
out
push
xchg
daa
clc
inc
clc
dec
mov
add
add
add
clc
inc
add
mov
mov
and
dec
push
sub
and
add
push
icebp
xor
add
data16
daa
clc
mov
add
mov
add
pushf
mov
inc
add
insb
insb
mov
enter
fwait
sahf
stc
mov
clc
fidivl
add
fadds
int
clc
inc
clc
leave
mov
sub
add
out
call
sahf
ffreep
clc
addr16
sub
xor
add
ds
lret
xchg
ret
pop
mov
dec
push
add
jbe
mov
clc
or
add
cmp
repz
nop
jmp
add
dec
stc
shrb
add
or
cli
jge
inc
clc
cmp
mov
add
int3
jae
add
stos
mov
bound
add
jno
add
out
sbb
std
sbb
add
mov
jg
add
inc
add
mov
outsl
pop
jb
add
clc
mov
clc
jg
clc
adc
clc
clc
aaa
ja
xchg
pop
inc
add
fstpl
push
clc
add
add
popa
add
roll
add
and
add
ret
add
add
add
call
mov
xchg
ret
dec
add
pop
daa
clc
ret
clc
in
xchg
imul
into
and
add
push
add
fisubrl
adc
add
inc
add
add
xor
nop
jmp
sub
push
add
imul
movsl
clc
xchg
insl
std
mov
std
jo
add
add
inc
clc
sub
add
out
push
push
insb
popa
add
rep
mov
mov
adc
add
fisubl
mov
add
lods
call
add
mov
sbb
inc
add
cmp
ret
inc
clc
pop
pop
lret
clc
std
repnz
adc
add
sar
dec
jbe
shrb
mov
ja
or
add
sub
push
nop
jmp
add
add
sbb
jg
add
es
jecxz
sub
xor
add
clc
inc
clc
fisubrl
incl
cmpsb
mov
icebp
add
clc
scas
faddl
xchg
leave
lahf
xor
add
es
leave
mov
sub
ljmp
add
inc
add
cmc
popf
in
cld
pop
cmp
add
add
add
clc
xchg
clc
xchg
aad
jp
push
clc
ret
clc
cmc
das
pusha
add
nop
mov
clc
pop
adc
lahf
imul
add
mov
add
popa
add
ret
clc
imull
push
add
mov
clc
mov
cmp
add
ja
ret
outsl
xor
clc
sbb
cmp
jl
add
cmp
add
data16
stos
int
inc
add
fisttps
add
push
add
jmp
clc
or
xor
add
stc
rcrb
clc
loopne
mov
cmp
dec
mov
jbe
in
outsb
mov
scas
mov
inc
add
inc
add
mov
clc
or
scas
pop
and
add
mov
and
add
clc
lods
sbb
add
xor
add
clc
xchg
sub
mov
jbe
push
add
icebp
sar
idivb
and
add
clc
sbb
mov
xchg
ret
adc
in
inc
arpl
add
jne
add
cmp
dec
dec
popa
add
nop
imul
iret
pop
mov
sbb
cmp
clc
inc
clc
push
add
mov
cmp
add
add
or
dec
dec
sar
dec
xabort
add
aam
fistl
lcall
clc
adc
add
and
add
add
clc
jmp
mov
xchg
ret
add
mov
mov
add
mov
add
clc
push
mov
and
add
test
mov
movsl
clc
loop
mov
fnstsw
ss
lea
imull
push
add
cmpsb
clc
imul
pop
clc
pusha
add
movsl
clc
sub
out
xchg
cli
lret
mov
add
pushf
xchg
data16
pop
dec
outsb
icebp
adc
add
add
adc
add
add
mul
clc
add
xchg
inc
add
dec
xor
clc
push
jmp
jns
add
or
clc
clc
pop
sbb
scas
lret
push
add
mov
lahf
add
add
clc
pop
clc
xchg
ja
clc
hlt
std
fcmove
mov
pop
nop
jmp
mov
inc
mov
inc
clc
aaa
cmp
add
add
fwait
in
cmp
add
cmp
nop
enter
add
adc
add
push
or
add
jg
loope
cltd
or
add
inc
clc
cmp
add
in
out
popa
add
fidivs
add
add
jno
add
add
outsb
enter
push
add
push
and
add
clc
std
push
jle
add
cmp
insl
dec
mov
jne
add
lahf
aad
cld
add
add
cmp
jp
push
add
or
or
jp
stos
mov
daa
clc
hlt
popf
sar
stc
add
xchg
dec
test
scas
sbb
ret
out
mov
je
push
stos
mov
jmp
ficoms
dec
fimuls
add
mov
add
inc
clc
mov
icebp
mov
mov
clc
cli
in
mov
stos
sub
mov
cmc
scas
sub
push
add
fiaddl
repnz
gs
jle
pop
push
mov
xchg
ret
dec
add
lret
cmpsb
clc
clc
test
add
inc
add
jg
leave
sbb
cli
lcall
jns
jg
add
or
add
add
fidivl
add
in
ffree
clc
sar
pop
adc
add
mov
or
push
stos
sbb
icebp
mov
call
incl
push
lea
cltd
xor
add
cltd
jg
mov
in
cmp
mov
add
add
decl
sar
cmc
scas
jp
popa
add
push
mov
clc
pop
xchg
addr16
fidivl
add
pop
jecxz
adc
add
test
xchg
dec
xor
xor
add
clc
mov
add
pop
adc
add
jmp
add
pop
popa
add
mov
mov
inc
add
fildll
popf
popa
add
or
mov
cmp
add
add
add
ljmp
jns
add
dec
in
sub
cmp
inc
clc
cmp
hlt
add
add
xor
add
sti
xor
fcoml
nop
mov
clc
sub
cmp
clc
jno
add
add
push
dec
mov
clc
test
xor
nop
jmp
dec
cmp
lock
add
adc
add
cltd
sbb
ret
clc
mov
fmuls
lret
mov
cmp
dec
mov
sub
add
add
dec
push
jmp
mov
add
add
aam
cmp
clc
popa
add
sbb
clc
xchg
mov
add
mov
loopne
nop
jmp
add
imul
clc
addr16
movsb
clc
jno
add
pop
cmp
jecxz
stos
lock
call
mov
xchg
ret
add
add
xor
clc
xor
add
loope
ljmp
add
push
mov
push
and
add
neg
test
add
xchg
mov
clc
mov
mov
push
nop
jmp
in
fiadds
add
add
clc
mov
or
in
mov
sahf
call
xchg
lods
push
mov
add
pop
add
add
add
rorl
jge
test
clc
bound
add
clc
push
add
int
pop
xchg
int
pop
pop
pop
test
dec
sbb
add
adc
add
cmpsl
clc
out
pushf
dec
mov
test
clc
or
sub
clc
ja
repz
sti
int3
rcrb
sub
mov
dec
in
cmp
clc
int3
fcmovnb
clc
mov
roll
add
xor
add
stos
sub
clc
mov
push
mov
add
cmp
clc
sub
add
push
clc
or
jne
push
add
push
mov
xchg
ret
icebp
dec
imul
add
pop
out
xlat
dec
int
clc
lcall
cld
call
jmp
clc
cmp
rcll
push
sbb
clc
in
cmp
clc
mov
add
scas
insl
bound
add
add
inc
clc
sar
loop,pt
int
clc
jle
add
sub
into
mov
lods
cli
inc
clc
mov
add
mov
clc
cmp
add
clc
pushf
iret
out
mov
add
nop
jmp
xchg
fsubp
inc
xchg
stc
lcall
out
clc
iret
jl
add
xor
add
clc
add
add
add
add
data16
or
clc
incl
pause
jmp
cmp
fld
clc
adc
add
add
cli
jecxz
xchg
inc
add
jecxz
fimuls
fmull
mov
nop
jmp
psllq
mov
xchg
outsb
out
fbstp
add
add
add
add
xchg
dec
cmp
xor
add
mov
add
scas
sbb
jnp
clc
inc
add
std
std
leave
jge
clc
clc
xor
add
mov
out
out
and
add
mov
clc
xor
add
push
add
sub
pop
enter
outsl
sti
mov
clc
or
test
add
icebp
test
or
xor
cmp
nop
jmp
push
filds
repz
sbb
adc
ss
clc
call
clc
aaa
aam
jb
add
ds
xor
int3
jnp
add
add
add
add
pop
and
xchg
pop
sbb
clc
pop
cmp
pop
push
add
push
jmp
add
lods
mov
and
clc
add
add
pushf
hlt
jne
aas
stos
je
testl
mov
call
push
or
xchg
inc
clc
mov
ret
clc
out
fcomps
jae
add
add
sub
mov
clc
test
jp
sar
int3
jmp
sub
push
add
xchg
xchg
xor
add
rorl
add
xchg
jle
nop
stos
mov
rcrl
adc
add
add
aam
add
xor
add
sub
clc
pop
lcall
mov
sbb
adc
push
mov
xchg
ret
add
dec
mov
mov
clc
sub
add
add
add
int3
mov
add
cmp
inc
clc
dec
out
cmp
clc
xabort
jno
add
clc
arpl
add
gs
sub
add
lods
dec
stos
push
call
incl
loopne
fidivrs
dec
xor
add
add
cmp
jo
add
or
out
mov
cmc
daa
clc
pop
out
ror
jl
pop
cmp
fs
aaa
mov
cmp
clc
mov
clc
inc
add
mov
mov
inc
clc
mov
xor
add
push
clc
clc
xchg
sub
insb
jns
es
push
add
loope
outsl
cs
jnp
push
add
cmpsl
clc
lret
and
add
push
add
cmp
mov
add
aas
fwait
sar
int
add
mov
xchg
pop
int3
dec
jp
add
adc
test
or
jl
cmp
movsl
clc
mov
push
xor
add
mov
movsb
clc
cmc
dec
add
add
sub
jbe
and
add
lret
insb
dec
lret
lcall
lret
test
sub
mov
pusha
add
pop
or
clc
sahf
pop
int
clc
xor
add
add
aam
clc
jae
add
add
and
add
jp
ret
clc
jmp
add
push
cmp
or
clc
dec
sub
clc
popf
fcompl
lcall
sub
lea
nop
jmp
mov
sbb
jae
add
mov
push
pusha
push
mov
xchg
ret
add
cmp
jo
add
push
iret
cli
sub
cld
and
add
push
add
or
or
jge
into
xchg
jl
push
nop
jmp
xchg
add
add
push
and
mov
add
mov
outsl
test
pop
dec
std
and
push
rolb
fdivrl
clc
pop
cmp
cltd
or
mov
sbb
jecxz
sub
clc
lret
movsl
clc
cmpsl
clc
lods
mov
addr16
test
ds
nop
dec
xchg
stos
and
add
cmpsb
clc
push
mov
clc
xchg
inc
add
add
iret
and
add
inc
clc
ljmp
fisttpll
cmpsb
clc
or
add
popa
add
sub
push
or
pop
fsub
clc
sbb
lret
cltd
fwait
outsl
lahf
lret
loop
inc
clc
cmc
stos
pop
sub
add
xor
clc
sbb
insl
xlat
inc
clc
xor
clc
sahf
js
clc
mov
clc
push
add
incl
leave
cmp
ror
or
mov
fisubs
add
clc
gs
cmp
inc
clc
cmp
sub
sub
push
mov
xchg
ret
add
push
decl
in
xchg
ljmp
in
jle
ss
inc
clc
ret
shr
nop
jmp
add
add
arpl
add
xlat
mov
or
mov
cmp
into
fstpt
lahf
adc
add
popf
and
mov
addr16
jmp
add
clc
cmpsl
clc
and
inc
clc
mov
sar
xchg
mov
clc
or
clc
adc
add
clc
negb
in
jl
js
sar
clc
lahf
pushf
arpl
add
clc
aaa
flds
add
inc
clc
sub
add
push
popa
add
or
rol
clc
out
stos
push
jne
mov
clc
cmp
lock
loopne
stc
icebp
xor
add
dec
xchg
dec
or
popf
add
icebp
das
dec
jg
clc
jnp
add
pop
mov
ret
xchg
popf
pop
xchg
add
add
jle
add
call
adc
add
js
int
std
pop
push
ljmp
xor
nop
jmp
lea
fmulp
dec
and
and
nop
jmp
add
inc
jecxz
daa
clc
lea
inc
clc
and
add
loopne
mov
shlb
add
inc
add
push
pop
adc
add
add
xchg
aam
cmpsl
clc
mov
pop
mov
mov
ljmp
lretw
call
add
enter
gs
idivb
mov
add
add
clc
pop
sbb
mov
incl
xchg
jns
mov
mov
mov
clc
adc
add
mov
add
popf
push
loop
inc
add
add
clc
mov
add
or
aad
clc
cmp
add
fldenv
adc
add
pushf
clc
mov
add
push
add
mov
adc
add
add
xor
add
sahf
xlat
mov
pop
nop
sub
fs
cmp
clc
adc
add
aad
ret
clc
xchg
add
add
push
stos
jle
adc
adc
add
daa
clc
sub
add
out
jmp
clc
lea
clc
sub
add
xor
sti
adc
add
xor
clc
xchg
test
push
add
in
cld
mov
add
int
jmp
imul
nop
jmp
and
push
fisttpl
es
jb
add
inc
add
sub
int3
jae
add
loop
into
cmpsl
clc
mov
in
add
add
scas
pushf
adc
add
mov
xchg
ret
adc
lods
cmp
in
push
push
nop
jmp
filds
xchg
or
xchg
cmp
add
mov
jp
mov
clc
add
add
add
add
mov
add
dec
xchg
je
clc
movsl
clc
jbe
clc
scas
incl
popa
mov
loopne
mov
stc
out
fs
aad
clc
stc
in
xor
add
mov
xchg
es
inc
clc
mov
clc
push
or
clc
out
das
pop
cmp
add
pop
sub
add
push
out
dec
xchg
addr16
testb
jg
add
hlt
dec
mov
add
dec
xor
add
popa
add
into
imul
testb
xor
add
jp
mov
nop
jmp
rorb
repz
stos
in
jp
mov
add
add
xchg
pop
clc
mov
fs
fwait
pusha
add
stc
and
add
clc
ljmp
ficompl
push
add
add
stos
or
outsl
nop
jmp
lods
mov
add
sub
dec
sub
xchg
out
icebp
pop
push
push
add
fs
push
add
cli
pushf
test
mov
imul
mov
cltd
mov
cmp
clc
addr16
push
mov
sbb
cmp
test
or
jo
add
add
mov
mov
ss
inc
clc
pop
jmp
clc
push
fisubrl
pop
inc
clc
xor
clc
movsl
clc
xlat
xchg
stc
xadd
jecxz
xlat
jle
leave
fnsave
add
das
mov
add
fs
adc
add
mov
add
decl
mov
or
add
clc
pushf
cltd
sahf
ret
clc
pop
push
adc
add
add
push
call
dec
in
push
inc
clc
ja
sarl
inc
add
jl
mov
or
fwait
xchg
sub
and
inc
clc
loope
cmp
clc
pop
cltd
arpl
add
add
cli
jnp
cwtl
cmp
add
cmp
neg
jl
xor
pop
cmp
jmp
mov
nop
jmp
add
add
incb
add
xor
add
jmp
mov
psadbw
inc
add
fwait
push
clc
imull
push
add
dec
mov
add
clc
adc
add
inc
add
je
fsub
clc
or
add
add
xchg
rol
clc
jae
add
add
data16
aaa
hlt
inc
clc
aaa
push
repnz
push
add
sub
or
testb
add
nop
jmp
cmovae
add
mov
jmp
xor
clc
xchg
inc
jmp
ret
add
add
add
mov
nop
jmp
push
in
lock
xchg
and
add
add
inc
clc
int
int
clc
fldcw
xor
add
loope
push
add
out
dec
push
dec
mov
clc
test
sarl
push
call
incl
add
mov
aas
push
int
pop
xchg
movsb
clc
loope
test
sbb
add
xor
fs
mov
clc
fcomi
sub
mov
cltd
movsb
clc
nop
inc
clc
push
add
popa
add
push
inc
clc
sar
and
add
clc
cltd
test
out
or
jmp
imul
sub
ljmp
jecxz
cmp
arpl
add
int
mov
add
and
add
xor
add
es
xor
and
add
xchg
aad
clc
xchg
sbb
add
pop
push
add
mov
nop
cs
add
mov
mov
nop
jmp
cltd
mov
lods
inc
clc
sub
arpl
add
clc
and
add
int
clc
je
dec
adc
add
ret
clc
rcrl
fwait
rcrb
pop
or
es
and
dec
gs
dec
xor
add
jne
insb
mov
ljmp
pushl
mov
pop
mov
xchg
in
lock
add
cltd
jb
add
sub
add
mov
push
clc
push
add
add
push
add
jl
add
add
clc
loop
out
call
push
nop
jmp
add
int3
and
sar
add
xbegin
clc
clc
xor
add
clc
cmp
clc
cltd
sbb
popf
imul
dec
outsl
popf
adc
add
and
add
clc
cmp
clc
lret
pop
mov
add
popa
add
js
adc
add
and
add
add
push
add
pop
clc
xchg
sar
pusha
add
push
call
call
cmp
sbb
mov
xchg
ret
mov
pop
aaa
test
lret
sbb
add
pop
xabort
mov
clc
xlat
mov
xor
xabort
inc
add
adc
add
clc
inc
add
jo
add
gs
jnp
add
dec
push
add
imul
mulb
add
add
testl
mov
fildll
clc
cltd
pop
jbe
clc
cmp
dec
xlat
lret
jae
add
dec
pop
clc
arpl
add
push
clc
clc
repz
clc
xor
add
dec
leave
lods
jg
clc
movsl
clc
cli
out
push
add
add
add
call
nop
jmp
or
clc
fisubs
add
data16
outsl
mov
pop
negb
pusha
add
cmpsl
clc
add
add
scas
jl
pop
or
sub
call
call
jecxz
mov
add
jp
pusha
add
es
cmp
clc
or
clc
fsub
clc
aad
clc
aad
mov
outsl
dec
mov
cmp
clc
push
stos
lods
cmp
dec
cmp
mov
icebp
xlat
inc
add
inc
clc
mov
ss
xlat
mov
pop
loop
pop
jo
add
add
clc
adc
push
xchg
outsb
pop
xchg
jp
mov
clc
adc
add
clc
hlt
lahf
inc
clc
xchg
fs
aaa
in
adc
add
loope
sub
mov
clc
out
or
clc
push
clc
jp
call
adc
push
jp
push
mov
nop
jmp
fists
or
jl
jns
add
lods
push
lods
inc
add
dec
call
clc
lret
out
or
add
dec
inc
clc
mov
in
dec
dec
cmc
mov
or
clc
jg
clc
stos
jo
add
clc
push
data16
call
clc
sar
add
fmull
cmp
mov
pop
test
pop
mov
movsb
clc
jmp
lcall
clc
lcall
pop
enter
aaa
popa
add
inc
add
jno
add
mov
add
out
push
addr16
push
pushf
pop
clc
cmp
jns
loope
adc
iret
lret
fwait
xor
add
dec
push
and
add
xchg
cmpsb
clc
loopne
adc
add
sti
cmp
nop
es
sbb
cmpsb
clc
xor
add
add
in
or
clc
cmp
add
mov
insb
loop
pop
cmpsb
clc
add
add
add
ja
add
sbb
pop
clc
insl
jg
shll
jo
add
add
push
clc
test
or
pop
rcrb
dec
cmp
clc
outsl
out
sbb
mov
xchg
ret
mov
rep
nop
jmp
jae
shlb
and
enter
add
lret
push
call
mov
pop
push
add
dec
mov
lcall
add
xchg
jp
add
addr16
int3
mov
add
scas
xbegin
add
dec
push
add
mov
add
add
inc
add
das
dec
mov
and
add
inc
clc
gs
xchg
clc
stos
lret
data16
gs
add
add
clc
loope
out
adc
add
sbb
add
loopne
sbb
in
incl
sti
nop
jmp
mov
push
aad
mov
clc
stos
pop
clc
aaa
jecxz
xchg
imul
clc
lahf
fcomps
push
sgdtl
add
sti
ret
clc
cli
clc
fwait
mov
cmp
mov
clc
cmp
cmp
clc
jae
add
clc
dec
sbb
dec
je
call
add
clc
jno
add
clc
js
inc
clc
cmp
push
clc
add
add
clc
cmpsb
clc
js
mov
aaa
push
add
mov
inc
clc
inc
add
or
clc
cwtl
cmp
lahf
xchg
xor
add
loop
push
ss
inc
clc
popa
add
test
pop
fnstenv
add
mull
int3
adc
call
nop
jmp
inc
repz
and
jecxz
adc
add
add
add
mov
cmp
ss
cmpsl
clc
enter
clc
data16
ret
clc
push
lods
int3
ljmp
add
nop
jmp
cmp
fnstsw
rcrl
add
or
sub
sub
test
es
jne
xor
add
clc
xor
nop
or
loope
add
xor
dec
and
add
icebp
jae
add
add
cmp
clc
dec
movsb
clc
lahf
xor
add
cmp
nop
jmp
mov
add
dec
sub
add
pop
pop
daa
clc
int
pop
clc
xchg
add
add
push
add
lock
and
add
sbb
pop
nop
jmp
in
push
add
lods
fbld
add
cli
add
cmp
inc
clc
mov
add
jp
and
stos
mov
xor
add
xor
add
in
decl
div
inc
add
mov
cmp
in
rcll
jmp
xor
cmp
out
sub
int3
int
outsb
es
xchg
sub
adc
add
push
dec
or
cltd
mov
stc
xchg
loop
iret
adc
clc
push
add
pusha
add
pop
mov
repz
add
add
add
dec
lods
je
in
xchg
ret
clc
lea
add
stc
ret
clc
dec
fwait
call
clc
lods
daa
clc
jg
jmp
nop
jmp
cmp
add
xchg
cli
imul
jo
add
clc
lods
push
add
imul
sar
add
mov
mov
clc
mov
sub
jno
add
imul
clc
pusha
add
add
cmc
xchg
stos
sarb
lcall
add
dec
ret
clc
jae
add
add
outsl
arpl
add
clc
into
lret
dec
call
in
movsb
clc
test
and
add
cmp
xchg
cmp
adc
add
mov
cwtl
shrl
push
and
add
in
push
clc
fsubl
mov
add
iret
dec
mov
pop
jecxz
stc
inc
clc
mov
sub
int
cmp
sbb
adc
inc
decl
mov
dec
aaa
jb
add
idivb
clc
lret
or
rolb
adc
and
add
add
ret
add
inc
clc
push
mov
push
mov
xchg
ret
xor
add
add
scas
outsl
push
add
inc
add
pushf
jg
mov
xchg
pop
call
jge
cmp
js
mov
clc
ficoms
add
gs
das
mov
xor
add
fs
sar
jae
add
lahf
sub
add
mov
pop
jae
add
mov
nop
jmp
push
add
push
icebp
popw
xor
add
clc
jmp
outsb
or
add
nop
aas
jge
push
call
lcall
adc
add
push
adc
das
add
outsb
cmp
push
mov
push
mov
lock
clc
in
add
add
clc
cltd
jbe
add
xor
fnstsw
xlat
out
pop
xor
add
or
add
stos
clc
sahf
imul
enter
addr16
lock
arpl
add
mov
jo
add
pushf
jns
je
and
add
add
xor
jae
add
add
sbb
movsb
fdivrp
mov
push
jecxz
cli
add
add
mov
clc
lret
lahf
sarb
cmp
mov
out
sbb
clc
icebp
mov
sub
add
mov
sbb
add
arpl
add
clc
pop
adc
mov
hlt
loopne
and
add
xbegin
add
fwait
das
lock
add
fstps
inc
add
pop
mov
clc
xbegin
clc
cli
jecxz
icebp
out
mov
clc
cmp
clc
repz
clc
mov
mov
add
add
clc
test
sti
jnp
loopne
dec
dec
mov
adc
add
inc
clc
mov
sbb
clc
sahf
movsl
clc
jb
add
out
ja
inc
add
cmp
cmpsl
clc
mov
std
loope
mov
jno
add
add
test
popa
add
vucomiss
lea
clc
dec
dec
rorl
dec
nop
jmp
mov
pop
repz
add
out
push
int3
cmpsl
clc
neg
sub
add
xor
add
fsubr
cmp
clc
nop
pop
out
mov
add
das
fsubs
add
popf
xor
add
clc
jg
enter
add
add
push
push
mov
xchg
ret
and
cs
aaa
sub
pop
inc
clc
dec
loopne
sar
clc
xchg
or
lcall
clc
cmp
clc
int
cmp
xor
add
mov
icebp
test
xchg
jge
add
adc
add
sarl
add
adc
add
add
test
add
jge
clc
jae
add
add
cltd
sbb
jmp
jae
add
push
cmp
add
xor
add
clc
out
dec
xchg
push
clc
roll
add
sar
clc
pop
clc
movsl
clc
lods
jne
cltd
and
stc
ret
clc
cmpsl
clc
call
scas
jb
jne
add
movsl
clc
or
add
mov
clc
pop
mov
clc
repz
ret
add
add
add
add
shr
inc
add
sbb
jmp
daa
clc
sbb
shlb
mov
clc
xchg
mov
pop
xor
add
add
mov
cmp
add
fistl
add
inc
clc
ljmp
cmp
add
lea
leave
push
pop
mov
add
jmp
jmp
sbb
sar
clc
push
ret
clc
fmuls
clc
dec
xchg
bound
add
xor
add
clc
xchg
dec
mov
add
jecxz
cmp
clc
lret
sub
jg
repnz
add
cmp
jg
add
add
add
int
clc
mov
add
stos
dec
mov
and
and
add
loope
push
addr16
push
jmp
inc
and
jmp
add
insb
cs
clc
jae
add
clc
jl
xor
add
add
in
or
loop
cmp
add
jmp
add
pop
mov
add
lcall
add
pop
out
out
cmpsl
clc
jb
add
dec
jnp
clc
insb
cmp
shl
nop
jmp
jge
mov
rolb
add
add
mov
jmp
mov
or
clc
mov
jnp
bound
add
xor
clc
cmp
clc
test
data16
out
popf
gs
fnstsw
loop
js
jg
xchg
or
test
push
test
cmp
sar
imul
cld
adc
add
clc
xor
add
add
clc
and
sub
repz
jns
add
add
adc
add
insb
dec
mov
clc
xlat
push
cmp
repz
jp
out
out
jns
xchg
inc
add
xabort
test
push
mov
xchg
ret
push
loopne
mov
mov
mov
add
movsl
clc
shlb
clc
das
int3
xchg
in
roll
jg
add
pop
rcr
dec
in
pop
mov
lret
add
sti
cmpsl
clc
popa
add
test
cld
addr16
xchg
sub
clc
outsl
or
clc
lret
add
add
cmpsb
clc
or
jmp
or
mov
push
mov
xchg
ret
inc
cmp
lock
cmp
pop
in
std
and
add
add
mov
and
jmp
jle
clc
jecxz
jl
clc
std
nop
jmp
mov
rclb
cmpsb
clc
int3
sub
clc
cwtl
out
mov
mov
add
out
lahf
xchg
mov
add
cmp
js
push
mov
xchg
in
add
jmp
add
xchg
addr16
mov
sub
cmp
add
data16
inc
clc
stos
push
clc
je
cmp
add
inc
add
fcoml
xchg
adc
clc
je
adc
add
rcrb
clc
loopne
add
pop
clc
loope
cmp
ss
adc
add
movsb
clc
cmp
fcmovbe
dec
fwait
dec
lret
inc
clc
xchg
inc
add
jne
clc
pop
cmp
addr16
jae
add
insl
insl
scas
repnz
clc
stos
movsl
clc
mov
adc
add
push
cmc
imul
gs
sbb
cmp
clc
jle
outsl
cmp
lea
adc
push
add
inc
add
jmp
in
test
clc
in
mov
je
clc
js
add
mov
add
jbe
aad
add
out
std
jmp
clc
xor
add
add
or
add
cld
sbb
add
inc
clc
add
add
daa
clc
dec
je
cwtl
jo
add
add
icebp
icebp
mov
xor
add
in
mov
pop
inc
clc
xchg
scas
dec
je
clc
dec
inc
add
cmp
dec
and
add
jle
add
mov
testb
cld
lock
clc
dec
or
add
xor
add
add
jno
add
or
insb
push
fimull
pop
lret
xbegin
add
iret
jns
clc
push
add
dec
outsl
clc
nop
daa
clc
jne
fsubl
xor
ja
adc
add
pop
cwtl
std
push
add
add
push
clc
xchg
sub
in
xchg
push
dec
pop
mov
clc
cld
xrelease
imul
das
insb
or
adc
add
jmp
and
add
and
add
int
cltd
jae
add
cli
jmp
push
xbegin
in
cmp
clc
movsb
clc
addr16
add
jge
aaa
out
adc
add
mov
daa
clc
pop
test
rcrb
lret
add
cmp
push
cmp
mov
es
dec
out
js
loop
out
pop
jnp
sbb
adc
add
cmp
and
add
mov
clc
add
add
pop
rclb
imul
je
jns
lock
shlb
into
cmp
dec
testb
aam
add
pushf
add
add
repz
add
clc
lods
jmp
dec
xlat
scas
in
gs
hlt
adc
add
sar
mov
xor
add
incb
cmp
clc
dec
xchg
int3
and
add
cld
mov
and
daa
clc
sub
add
repnz
push
jae
add
push
repnz
movsb
clc
sbb
jns
add
push
clc
xchg
push
add
imul
inc
clc
cld
sarl
sbb
pop
push
clc
or
push
fsubrs
cmp
clc
push
and
add
lods
dec
pop
xchg
hlt
xor
add
dec
jecxz
outsb
pop
pop
pop
clc
push
nop
jae
add
fs
mov
inc
add
mov
clc
and
add
sbb
xchg
jne
add
bound
add
add
push
fldcw
xor
add
sub
sbb
rcrl
clc
sub
add
xchg
aaa
data16
xchg
or
sbb
and
add
add
add
add
stos
jne
mov
ja
cmc
sahf
cmp
sub
adc
add
clc
sbb
test
add
call
jle
fiadds
add
add
push
mov
add
cmpsb
clc
mov
add
dec
rcll
add
pop
jmp
leave
sbb
mov
dec
push
clc
or
scas
push
add
pop
clc
call
add
clc
data16
pushf
jo
add
bound
add
pop
add
mov
mov
mov
clc
sbb
xchg
sahf
dec
mov
clc
cmp
mov
inc
add
lret
sub
add
in
add
jne
jmp
sahf
mov
mov
clc
lods
fs
jae
add
pop
push
es
xchg
dec
scas
nop
lods
dec
mov
clc
add
add
clc
test
lret
mov
call
leave
jo
add
mov
fs
movsl
clc
push
bound
add
loopne
xor
clc
pop
clc
push
cmp
clc
push
call
data16
aas
fnstsw
xor
add
sub
add
add
clc
lock
mov
add
inc
add
pusha
add
hlt
pop
cwtl
inc
add
icebp
or
add
mov
pop
xor
data16
pushf
push
adc
clc
xchg
jo
add
clc
dec
call
dec
cmpsb
clc
lret
repz
pop
jnp
clc
jne
pop
xor
add
clc
jg
cmp
clc
sar
mov
add
push
inc
add
into
sub
shrb
pusha
add
jl
repnz
mov
add
ficompl
movsl
clc
or
xchg
pop
cmc
cli
lret
add
cmp
in
push
pushf
jbe
scas
inc
add
or
inc
add
adc
add
clc
loop
sub
gs
cmpsl
clc
cmp
add
sub
mov
mull
add
adc
add
test
add
pushf
mov
cmp
je
lock
repz
add
clc
stos
add
add
jle
aad
or
jmp
clc
and
add
clc
leave
ror
sbb
clc
inc
add
jae
add
testb
add
cmp
cmp
jecxz,pt
lock
pinsrw
sbb
sar
in
and
add
clc
pop
clc
decl
add
push
add
lret
add
jle
dec
mov
fstpt
jle
inc
add
sar
icebp
lods
mov
out
cmpsb
clc
adc
add
stc
dec
sti
mov
into
push
add
dec
cltd
mov
js
add
sbb
pushf
test
or
clc
js
das
in
pop
fimuls
out
int3
aas
cmp
inc
add
mov
clc
sbb
fwait
jbe
clc
bound
add
sbb
pushf
sub
clc
test
test
push
sahf
in
cli
and
add
inc
add
pop
mov
push
cmp
or
add
mov
clc
fstps
pop
jecxz
test
clc
or
test
clc
jae
add
clc
push
add
pop
sbb
inc
add
pop
es
cmp
in
add
add
clc
jg
cs
pop
sbb
mov
clc
add
xlat
adc
add
clc
dec
nop
and
add
cmp
clc
push
in
xabort
push
cmp
stos
js
inc
clc
mov
push
xabort
clc
call
cmp
dec
and
add
xchg
mov
clc
lret
in
push
mov
or
clc
fs
std
jo
add
add
cld
mov
mov
bound
add
cmp
sub
clc
jge
clc
mov
xor
add
rcll
add
clc
ja
fyl2x
fld
clc
lods
add
add
mov
into
hlt
mov
cli
inc
clc
sub
add
add
sub
and
add
cld
sbb
add
add
add
cmp
clc
into
and
add
fwait
int
xlat
js
mov
add
jge
xchg
or
add
cld
cmc
mov
push
clc
pushf
jl
mov
adc
add
mov
clc
aam
es
into
scas
fildll
shlb
add
inc
add
adc
add
cmp
add
imul
clc
xlat
xor
add
icebp
mov
insl
cmp
insb
jg
dec
jo
add
clc
add
das
gs
mov
fidivl
push
mov
clc
or
cmpsb
clc
in
cli
xchg
and
add
add
sar
clc
scas
repz
fdivs
clc
jp
adc
add
adc
add
push
pop
dec
enter
mov
clc
test
cwtl
add
inc
add
push
add
jmp
adc
add
xbegin
add
fildl
add
xabort
pop
mov
sub
pop
fadd
clc
adc
add
adc
add
add
clc
adc
add
xbegin
xor
add
add
inc
clc
in
mov
clc
lock
push
lock
add
clc
cmp
add
add
cmp
out
xor
push
in
mov
push
add
jl
add
popf
and
add
or
clc
pushf
push
mov
add
mov
jge
add
shl
clc
arpl
add
ds
inc
add
notl
add
nop
xchg
in
cld
sub
mov
rcr
cmp
popa
add
sbb
add
stos
test
cmp
scas
jl
clc
push
leave
out
das
push
dec
adc
add
inc
add
mov
jecxz
xor
add
add
add
xor
add
mov
out
push
adc
add
cld
stos
repnz
add
jp
mov
clc
push
add
jb
add
mov
out
sub
addr16
push
add
js
or
clc
lea
add
add
and
jb
add
and
add
push
add
das
cmp
mov
and
add
pusha
add
mov
clc
or
add
lea
icebp
dec
sbb
sub
dec
cmp
add
jo
add
adc
jle
and
cmp
adc
lods
or
mov
clc
jo
add
adc
add
add
clc
adc
daa
clc
adc
and
test
sub
sahf
in
adc
add
jmp
inc
clc
lods
popa
add
mov
clc
dec
dec
ret
clc
or
add
test
pop
add
add
clc
in
sar
in
data16
or
jb
add
clc
into
movsl
clc
xor
add
dec
xor
add
in
fwait
adc
add
push
xchg
fisubrl
enter
mov
xchg
mov
imul
clc
dec
icebp
xor
add
clc
mov
out
gs
mov
inc
add
cmp
add
mov
lea
clc
or
mov
mov
clc
adc
add
add
inc
clc
cli
lods
lock
add
clc
and
aad
mov
imul
cmp
adc
add
add
dec
rorb
add
clc
loopne
mov
adc
add
clc
stc
sub
clc
xchg
test
xor
add
clc
or
insb
sub
testl
clc
dec
mov
jmp
and
add
arpl
add
xchg
fwait
and
add
sub
clc
push
clc
add
add
lock
add
testb
cmp
or
iret
cmp
mov
add
mov
xchg
call
jmp
sub
jb
add
scas
pop
adc
add
clc
leave
lret
fdivrl
push
cmp
or
outsb
lods
jp
or
add
cli
loopne
pop
test
push
jae
add
sub
imul
je
add
push
add
jmp
dec
dec
in
xor
add
or
xchg
cmp
insl
aam
clc
pop
mov
js
clc
push
cld
imul
add
xchg
aas
jo
add
add
add
clc
dec
fcoms
add
cmp
clc
cld
adc
add
lods
mov
add
repz
xlat
inc
add
sahf
shrb
mov
clc
xchg
jge
clc
cmp
movsl
clc
mov
xbegin
sub
loopne
pusha
add
rcll
mov
cmp
add
pavgb
dec
sub
clc
pop
insb
test
clc
dec
inc
clc
dec
add
add
jecxz
jecxz
xor
add
mov
lea
add
or
int
clc
hlt
mov
add
jns
add
cmp
clc
ret
clc
mov
add
clc
bnd
add
stos
popa
add
in
rcr
sar
pop
push
push
icebp
outsb
lock
jecxz
sub
mov
cmp
js
rcl
push
repnz
ja
add
sub
add
aad
inc
clc
fists
clc
or
lods
ret
insl
mov
mov
cmpsl
clc
jge
ds
lods
imul
clc
out
pop
mov
add
je
pop
clc
loopne
or
jecxz
mov
clc
data16
xchg
xchg
push
pop
lcall
add
add
scas
lcall
pop
jle
mov
call
mov
add
pop
or
jle
cmp
jmp
test
or
ljmp
pushf
enter
add
lods
ljmp
mov
loop
inc
add
icebp
bound
add
clc
das
add
add
clc
clc
jnp
sub
add
push
fldt
add
popa
add
xchg
in
test
in
stc
cmp
imul
mov
clc
sar
icebp
jns
clc
test
add
adc
imul
clc
or
clc
push
dec
or
in
sbb
cs
pop
cmp
add
and
add
add
xchg
pushf
scas
ja
cld
mov
add
push
jp,pt
sti
cmpsb
clc
out
adc
add
fiadds
add
fists
xor
xchg
cmpsl
clc
or
sub
sub
into
fs
jae
add
add
ja
mov
add
xchg
loope
push
add
adc
add
clc
mov
clc
std
cmc
mov
clc
aas
or
inc
add
adc
dec
mov
test
data16
mov
pop
into
shll
add
add
or
clc
sub
xor
add
xchg
imul
clc
mov
add
fnstenv
add
add
clc
loop
mov
add
out
jbe
and
add
clc
pop
xor
add
inc
add
add
add
add
inc
clc
inc
add
xor
add
clc
sti
ds
or
in
aas
mov
add
scas
rorb
aaa
scas
iret
imul
add
jl
out
jnp
clc
call
inc
clc
pusha
add
lret
into
inc
add
mov
fldl
add
or
clc
mov
daa
clc
in
iret
ficoms
ds
mov
mov
dec
addr16
push
pop
sbb
clc
out
in
xchg
fbld
add
pop
xbegin
add
gs
mov
add
add
add
jbe
jmp
fdivs
add
clc
lret
jno
add
fidivs
int
dec
aaa
mov
fdivr
ljmp
fidivl
add
mov
pop
mov
push
add
inc
clc
pop
loop
testl
loopne
es
mov
pop
pop
mov
clc
mov
clc
mov
rcll
xchg
sbb
pop
loope
sub
inc
add
lret
out
stos
cwtl
push
loope
inc
clc
jmp
iret
cmp
adc
add
mov
clc
js
pushf
cli
xchg
in
and
cltd
pop
clc
cmp
or
testb
out
cmp
cmpsl
clc
fnstsw
lock
add
shr
nop
fstl
add
cli
jmp
jle
clc
xchg
nop
fisttpll
clc
rcll
add
sbb
cmp
clc
data16
in
cld
lock
sub
sbb
pusha
add
inc
add
ret
clc
fcomip
shlb
sub
adc
lahf
clc
pop
scas
push
daa
clc
pop
lea
add
add
test
dec
test
add
add
add
add
add
jb
add
lcall
mov
aad
bound
add
clc
and
frstor
clc
out
dec
icebp
pop
outsb
jle
int
add
xor
add
add
out
aad
fisubl
xchg
out
out
bound
add
out
jp
add
fistpll
push
ss
add
push
sbb
and
int
lahf
add
add
clc
or
add
add
loope
sbb
out
lret
clc
dec
adc
xchg
push
sub
clc
sbb
add
add
cmp
add
movlps
add
jne
add
mov
mulb
add
mov
pop
cmp
add
add
jnp
inc
add
dec
fstl
add
sbb
clc
mov
pop
jnp
add
cmp
cmp
test
lods
mov
sti
add
add
pop
clc
int
adc
add
mov
clc
pop
sar
clc
dec
dec
mov
out
cmp
data16
movsb
clc
repz
xlat
or
shrb
clc
cmc
inc
clc
shlb
sub
jp
clc
sbb
cmp
loop
fsubp
clc
test
ffree
clc
loop
adc
push
aas
into
mov
clc
add
add
or
or
push
jnp
mov
mov
fisubl
add
and
add
and
cmp
inc
clc
jnp
stos
and
add
add
push
add
xor
aaa
xabort
clc
pop
mov
clc
addr16
decb
jb
add
enter
sbb
sub
clc
daa
clc
push
add
fisubrl
add
add
inc
add
das
data16
out
repnz
cmp
add
add
pop
pop
and
push
add
pop
pop
clc
fwait
stos
inc
add
sar
cli
xor
clc
jb
add
data16
jno
add
jp
jbe
add
ds
movsl
clc
push
mov
leave
clc
and
add
mov
clc
out
lcall
pop
clc
pop
scas
sahf
cmp
inc
clc
mov
add
mov
clc
and
add
push
jecxz
push
add
mov
mov
popf
adc
add
arpl
add
add
add
add
clc
es
das
aad
dec
ret
clc
sahf
gs
cmp
mov
add
mov
add
jb
add
clc
bound
add
clc
inc
clc
mov
add
lcall
fsts
add
add
hlt
dec
inc
clc
xchg
stc
push
ret
clc
nop
out
pop
leave
inc
add
clc
jl
add
dec
sti
dec
fs
call
scas
das
mov
sbb
pcmpeqw
mov
fwait
sbb
clc
inc
clc
ret
clc
mov
mov
cltd
fidivl
add
add
leave
push
gs
gs
sbb
pop
out
inc
clc
dec
addr16
sar
add
ret
aam
imul
clc
test
add
and
add
es
xchg
pop
js
add
push
push
add
inc
clc
popf
rcr
outsl
mov
push
add
or
add
nop
push
add
in
jge
popf
cmpsl
clc
imul
add
and
add
ficoms
add
xor
or
imul
xchg
sti
jge
sar
clc
inc
clc
mov
dec
fiaddl
add
push
sub
xlat
jecxz
ret
clc
jmp
jle
out
mov
add
neg
iret
imul
inc
add
dec
mov
add
sub
fnstenv
add
leave
adc
add
mov
aas
jno
add
push
and
lods
mov
sahf
out
sti
xchg
xchg
loopne
pop
xchg
out
repz
add
in
scas
pop
insb
mov
add
push
add
add
cmc
mov
mov
cmp
add
js
adc
arpl
add
clc
cmpsb
clc
xchg
xchg
pop
jmp
or
clc
push
hlt
push
add
push
lock
add
add
inc
add
and
add
cmp
add
inc
clc
ljmp
add
add
add
rolb
push
mov
add
jmp
es
test
and
add
clc
cld
mov
outsb
movsl
clc
inc
clc
std
fidivrl
mov
lcall
xchg
add
add
test
xchg
cld
pop
outsb
xbegin
nop
sti
cmp
into
scas
or
ret
clc
xchg
xchg
mov
clc
mov
adc
add
jbe
decb
push
add
add
repnz
add
ret
clc
jbe
xchg
mov
clc
jae
add
mov
fcomip
lahf
insb
push
add
pop
xor
add
jo
add
clc
sbb
js
rclb
push
add
cmp
stc
repz
std
lock
push
cmpsl
clc
xchg
ret
clc
mov
cmpsl
clc
loopne
cltd
xor
add
add
add
jbe
jae
add
adc
add
imul
add
mov
fmull
clc
imul
addr16
fsubs
add
hlt
sub
xchg
xchg
cli
imul
mov
clc
xchg
into
and
cmp
out
mov
add
pop
icebp
fdivr
std
aaa
filds
mov
imul
mov
jge
mov
add
push
sub
stc
and
add
lock
je
and
add
add
sub
mov
imul
pop
pop
push
clc
jb
add
or
add
clc
mov
add
push
add
jae
add
clc
xchg
cmpsl
clc
push
add
or
sbb
xor
add
add
add
cmp
xlat
add
add
mov
clc
out
fimull
add
push
test
mov
add
sti
jne
sar
clc
jae
add
out
es
scas
sar
clc
push
hlt
xor
add
clc
fnsave
inc
add
enter
iret
adc
in
jbe
clc
xor
add
add
nop
cmp
add
cmp
inc
add
je
add
mov
add
iret
fsubrs
add
and
add
pop
clc
lea
xor
sub
dec
out
icebp
cmp
inc
add
ds
xchg
sub
add
mov
aad
add
or
cli
int
xor
add
jp
add
add
add
add
add
mov
scas
mov
clc
sub
mov
pop
sbb
out
pop
cmpsl
clc
inc
clc
shll
add
test
add
jo
add
add
je
sbb
clc
pop
adc
add
fwait
and
add
out
mov
jl
sar
clc
clc
loop
mov
sar
mov
cmp
stc
in
cmpsl
clc
and
cmpsb
clc
inc
clc
mov
sbb
xlat
mov
leave
js
add
outsl
fnstenv
add
mov
add
sar
inc
clc
adc
add
clc
test
add
xchg
test
mov
sub
outsb
neg
inc
add
push
add
jno
add
mov
clc
adc
add
jge
or
push
clc
dec
in
lock
add
in
hlt
scas
mov
xor
add
clc
in
popa
add
mov
add
dec
inc
clc
notb
add
test
clc
clc
enter
mov
clc
je
jb
add
fisttpl
loope
test
adc
add
mov
out
scas
bound
add
mov
push
enter
int3
sti
mov
add
adc
add
clc
lret
clc
test
mov
add
stc
xabort
add
and
add
add
add
add
mov
pop
aam
clc
xchg
es
add
add
mov
clc
mov
fadds
cmp
jg
sar
pop
cmp
je
ja
gs
and
add
add
lcall
pop
xlat
jg
xchg
inc
clc
cmp
clc
fcmovbe
in
sub
ret
clc
adc
add
mov
int3
lret
clc
sub
add
push
add
in
idivl
or
leave
xor
add
sub
fs
inc
clc
lods
bound
add
push
dec
xabort
clc
popa
add
test
sbb
icebp
sbb
clc
pop
dec
shl
push
add
push
add
xchg
mov
inc
add
sub
add
lret
xabort
jbe
or
clc
sbb
push
shll
add
jl
mov
jg
jmp
xchg
iret
imul
clc
aam
add
lret
bound
add
add
sbb
add
mov
jge
add
push
add
dec
insl
push
stc
sbb
dec
hlt
adc
arpl
add
into
ljmp
stos
cmp
sar
lods
push
clc
or
add
mov
clc
inc
add
in
jecxz
cmp
sbb
test
fs
push
add
xor
add
xor
add
sub
vshufps
sar
clc
ds
mov
clc
fiadds
add
js
add
cli
sbb
clc
aam
push
mov
xchg
test
clc
xabort
jbe
iret
sbb
add
clc
lcall
arpl
add
xchg
xchg
xchg
mov
sarl
dec
mov
fldenv
sbb
jmp
clc
fmuls
clc
outsb
cmp
add
idiv
imul
clc
lock
out
xor
add
clc
cmpsb
clc
hlt
sub
clc
fcoml
in
inc
add
jecxz
loope
lret
in
pop
nop
pop
pop
imul
stc
mov
ret
clc
mov
clc
arpl
add
and
add
sub
dec
push
add
pop
mov
clc
popa
add
ja
clc
sti
test
clc
mov
add
jae
add
clc
icebp
cmp
add
pop
iret
pushf
dec
sbb
iret
sub
and
add
clc
add
add
sub
lock
lret
add
sub
test
decl
sub
or
cli
mov
add
jge
add
es
add
add
clc
pop
ret
xchg
stc
sub
idivb
jge
add
sbb
addr16
test
and
add
mov
outsl
outsb
and
add
sub
add
add
data16
push
clc
sub
clc
cmp
xchg
jnp
add
pop
enter
frstor
add
and
add
add
clc
lea
add
cmp
rcr
pop
pushf
xor
add
add
test
jae
add
add
popa
add
mov
add
clc
cmp
xchg
sar
adc
add
inc
add
inc
clc
cmp
sub
sub
dec
mov
add
mov
inc
clc
cmpsl
clc
jnp
call
or
and
das
dec
stc
sub
sbb
in
xchg
xlat
sar
push
movsl
clc
sar
cwtl
or
rcll
add
push
jmp
filds
xchg
dec
xchg
repz
addr16
insl
xor
add
bound
add
inc
add
mov
sbb
xor
cmpsl
clc
jl
sbb
jle
push
jmp
mov
add
mov
clc
call
add
mov
sbb
movsb
clc
sbb
cmp
push
add
xchg
pop
push
stos
inc
clc
inc
add
das
mov
notl
add
inc
clc
jle
clc
sub
lods
sar
add
fcomps
or
in
fldcw
scas
inc
clc
insl
cmpsb
clc
clc
adc
add
mov
clc
jecxz
outsb
dec
add
add
jg
sbb
clc
add
add
add
add
add
mov
clc
clc
out
ljmp
je
lahf
pop
pop
scas
inc
clc
and
add
cltd
jae
add
or
in
and
add
cmp
mov
jb
add
dec
sbb
mov
loopne
pushf
push
clc
loopne
pop
clc
mov
jno
add
sub
xbegin
add
lahf
mov
or
dec
dec
loop
jle
clc
jmp
enter
inc
clc
dec
or
stos
bound
add
insl
loopne
mov
das
xor
add
pop
ljmp
mov
add
out
clc
sbb
clc
add
add
insb
shrd
mov
add
or
clc
inc
clc
add
fs
test
cwtl
inc
add
jmp
sti
fcoms
pop
mov
inc
add
push
clc
fisttpl
xchg
dec
imul
add
inc
clc
lret
ja
clc
pushf
fldl
cmp
jmp
add
ja
gs
cli
sar
clc
movsb
clc
sbb
not
js
add
sub
insb
xor
addr16
adc
add
mov
and
add
repz
inc
add
or
clc
gs
nop
cmp
add
cmp
icebp
mov
test
cmp
decl
jne
fs
and
sub
push
add
inc
clc
sbb
clc
dec
dec
mov
int
clc
in
aam
clc
push
out
jp
clc
xor
add
ja
clc
xchg
fcoms
clc
mov
mov
add
push
clc
jmp
jo
add
xchg
jne
sub
clc
cmp
or
clc
cmp
fsubr
inc
add
fisubl
add
dec
aas
leave
aaa
aaa
add
add
mov
repz
clc
push
xor
add
sbb
add
sub
cwtl
push
inc
add
loope
inc
clc
or
test
popa
add
rclb
ret
mov
enter
clc
popa
add
repnz
ss
push
movsl
clc
insl
dec
push
mov
mov
add
sbb
sti
add
roll
add
test
cmp
add
rcll
add
xor
dec
je
xor
add
jo
add
add
push
clc
fsubrs
clc
sub
push
clc
jge
add
in
cli
lods
jecxz
cmpsb
clc
sub
push
add
adc
add
clc
inc
clc
sar
add
xlat
repnz
lods
jb
add
aad
add
inc
clc
push
mov
xor
inc
clc
dec
loop
scas
test
jge
jge
enter
add
dec
dec
pop
inc
clc
sbb
cltd
xchg
xor
add
mov
clc
mov
clc
push
mov
inc
add
mov
push
jb
add
clc
add
push
mov
sar
add
dec
mov
sbb
sub
clc
popa
add
rcll
add
hlt
in
pop
loopne
sub
jne
clc
loope
bound
add
bound
add
and
add
lods
std
sbb
clc
cmp
mov
or
clc
int3
lcall
and
add
pop
clc
jbe
add
mov
clc
add
add
insb
sub
and
add
inc
clc
or
clc
push
data16
imul
add
clc
daa
clc
jns
stos
clc
js
cmp
xchg
popf
imul
add
inc
add
arpl
add
clc
inc
clc
or
mov
clc
mov
outsl
mov
xor
add
test
mov
loope
push
mov
mov
clc
aam
out
xchg
out
hlt
in
push
add
fldenv
add
mov
popa
add
popa
add
je
clc
adc
inc
clc
inc
add
jns
jge
clc
pusha
add
xchg
notl
add
clc
fs
movsl
clc
mov
lock
xchg
mov
stc
and
sub
add
sahf
jle
or
pushf
or
cmp
xchg
int
inc
clc
ret
clc
mov
add
or
push
in
hlt
adc
add
pop
pop
mov
out
xor
add
addr16
jl
mov
mov
dec
cmc
mov
push
add
and
add
clc
add
add
sub
aam
add
xchg
pop
ja
mov
loope
outsl
adc
add
clc
mov
lret
adc
add
or
cmp
cli
push
mov
fcmove
cmp
add
jmp
scas
insl
push
lret
pop
out
lret
jae
add
add
iret
mov
mov
jp
add
xchg
fs
jecxz
je
add
adc
xor
push
add
mov
ret
clc
movsb
clc
imul
sar
mov
out
or
clc
jb
add
pop
mov
add
jl
and
add
add
inc
clc
fcmovne
jl,pt
add
test
inc
add
pop
push
cmp
fists
add
mov
test
addr16
in
cmp
aam
pop
mov
fistpl
add
mov
outsl
mov
clc
das
and
hlt
insb
fwait
mov
xchg
cli
clc
push
pop
adc
cmp
dec
xor
add
clc
insl
mov
outsl
mov
mov
inc
add
mov
clc
shrb
stc
push
add
in
pop
clc
jge
clc
repnz
pop
jge
sahf
adc
jecxz
mov
add
adc
push
mov
clc
sbb
sarl
lods
hlt
mov
add
add
sar
xor
add
stos
jo
add
xchg
add
add
clc
lock
clc
push
add
mov
inc
clc
clc
inc
clc
pop
dec
ficoms
arpl
add
push
clc
mov
stos
cwtl
mov
lods
dec
dec
lahf
hlt
and
add
xchg
inc
clc
je
mov
add
movsb
clc
movsl
clc
popa
add
lret
cmpsl
clc
stos
scas
faddl
clc
xor
add
int
push
mov
mov
xor
add
add
icebp
movsl
clc
scas
and
add
ljmp
clc
mov
js
test
nop
loop
insb
mov
pop
dec
ljmp
add
jle
inc
add
jp
insb
add
add
icebp
push
add
into
jecxz
test
xlat
shll
mov
clc
out
sar
or
add
out
xor
sub
clc
cwtl
mov
aas
movsl
clc
popf
out
adc
add
add
jle
sub
cmp
sar
dec
aas
pop
aam
cld
sub
sub
mov
test
push
jle
clc
xbegin
stos
sahf
int
xchg
sub
and
inc
add
enter
popa
add
pop
xor
add
cwtl
inc
add
push
add
fucomp
aam
clc
or
sbb
jo
add
push
jbe
jbe
imulb
push
add
mov
clc
cmpsl
clc
jg
inc
clc
and
add
jo
add
cld
lods
xchg
cmc
cmp
add
insl
jle
xor
mov
cmp
clc
mov
push
pop
ret
mov
add
cld
out
bound
add
lea
add
push
add
dec
and
inc
clc
pop
xbegin
in
pop
xor
add
adc
clc
push
decb
add
test
mov
jecxz
push
add
add
add
add
fmull
mov
std
clc
sti
sub
cmp
sbb
dec
ljmp
pop
dec
das
icebp
cmpsl
clc
add
add
movsb
clc
pusha
add
adc
add
idiv
cmp
adc
cmpsb
clc
cmp
mov
fsts
aad
add
sbb
add
add
push
fs
repz
clc
mov
clc
test
add
add
clc
mov
add
add
add
xabort
clc
js
sar
clc
popf
cmp
pop
xor
add
xor
clc
scas
outsb
push
push
insl
je
add
sbb
add
sub
and
add
clc
sub
paddq
sbb
enter
sbb
por
add
adc
add
adc
mov
add
in
rorl
clc
sub
pop
add
add
clc
xchg
sbb
add
pushf
clc
or
cmp
pushf
je
jb
add
clc
int
data16
push
clc
cmp
clc
push
xchg
insl
xor
pop
mov
clc
rol
clc
lods
repnz
add
pop
repnz
dec
dec
js
clc
cmp
add
add
in
imul
add
mov
insl
mov
dec
mov
pop
clc
add
pop
neg
faddl
push
dec
push
add
inc
add
xchg
jg
mov
das
mov
clc
cmp
clc
ret
push
pop
not
scas
inc
add
fidivl
add
fs
pusha
add
lea
xbegin
pop
xor
xor
add
cmp
iret
mov
in
mov
inc
clc
xchg
mov
std
or
pop
sbb
add
into
repz
add
inc
add
or
test
push
add
in
push
add
arpl
add
ja
leave
dec
mov
test
cld
and
xlat
jg
jecxz
in
loopne
mov
or
sahf
adc
add
pop
sbb
xor
add
add
outsl
je
clc
push
add
pop
adc
pop
clc
inc
clc
pop
jle
sbb
popa
add
pop
jle
xor
add
add
arpl
add
add
add
dec
cmp
dec
call
add
lock
hlt
push
bound
add
add
cmp
xchg
xchg
jnp
xabort
push
add
stos
xchg
sbb
dec
lret
pushf
sti
pop
dec
dec
in
add
add
add
jle
mov
clc
mov
add
jmp
sub
jge
mov
lret
add
mov
add
xor
adc
add
add
xor
add
enter
dec
out
fidivrl
clc
clc
sub
or
add
push
mov
dec
add
out
int
jnp
mov
jae
add
divb
inc
clc
insl
mov
clc
push
clc
mov
add
pop
cmc
stc
pop
push
lahf
xchg
clc
std
xor
add
pop
push
add
mov
push
add
lods
fimuls
clc
test
fldenv
fcmovnu
or
add
insb
sahf
mov
add
xchg
addr16
lods
fldl
xchg
dec
in
scas
adc
add
add
add
xor
or
popf
and
add
inc
add
mov
xchg
leave
bound
add
push
clc
ljmp
aam
xor
add
clc
pushf
cmpsb
clc
arpl
add
ret
clc
imul
clc
dec
mov
mov
pop
scas
push
add
pushf
or
add
arpl
add
mov
jg
pop
daa
clc
sahf
cmp
add
mov
sar
push
nop
clc
imul
add
clc
or
mov
icebp
in
sub
lock
jno
add
clc
cmp
pop
clc
mov
cli
mov
dec
xabort
clc
iret
pop
jnp
data16
xchg
in
cmp
adc
jl
xchg
sbb
mov
sub
add
clc
dec
xchg
sahf
mov
add
add
jp
clc
stc
scas
lret
add
clc
fistl
adc
add
scas
std
push
mov
jno
add
or
add
nop
outsl
lods
inc
add
push
clc
pop
lret
int
add
cmc
dec
inc
add
fadds
clc
fdivrs
adc
add
data16
mov
pmaxsw
neg
repnz
fiadds
clc
cmp
sar
clc
pop
adc
add
xor
push
add
in
int3
cmp
add
pop
mov
hlt
data16
movsl
clc
pop
filds
clc
dec
jbe
add
data16
jecxz
imul
scas
mov
mov
jns
shll
cmp
add
push
mov
test
cmp
loopne
stos
push
leave
mov
push
add
add
outsl
cltd
or
clc
pop
mov
outsl
test
addr16
adc
add
add
add
add
stos
negl
ret
clc
jle
sbb
mov
pop
clc
mov
enter
cli
inc
clc
clc
fmull
or
aas
insl
icebp
push
add
out
sar
xchg
xchg
push
push
or
xor
add
mov
cmpsb
clc
jo,pt
add
pusha
add
or
shrl
fsubrl
adc
add
push
cmp
leave
sbb
clc
js
add
adc
add
push
add
mov
clc
adc
repz
dec
ret
add
mov
clc
movq
pop
repz
add
add
clc
in
push
cmp
xor
clc
fnstsw
pop
test
add
pop
iret
mov
cmp
clc
push
jle
add
add
add
adc
add
es
pushf
jp
add
stos
xchg
mov
add
fwait
outsb
lods
mov
add
mov
cmc
iret
je
xchg
inc
clc
push
mov
jnp
cld
mov
in
jecxz
jo
add
mov
clc
push
lret
pusha
add
sarb
push
clc
push
add
mov
add
out
push
clc
aas
push
clc
stc
xchg
sub
push
mov
cmp
clc
jp
imull
aad
lods
inc
add
xor
add
cmpsb
clc
or
add
jbe
popa
add
adc
scas
mov
push
mov
fidivrl
clc
jg
sub
clc
mov
in
into
push
cwtl
lods
fbstp
clc
pusha
add
inc
add
cld
and
add
rolb
mov
pop
jb
add
daa
clc
cmp
sarb
clc
mov
imul
mov
faddl
cmp
xabort
ja
clc
add
popf
push
roll
cli
cmp
add
popf
or
mov
clc
sbb
clc
aas
jno
add
clc
in
push
cmpsl
clc
loope
pop
dec
js
fs
movsb
clc
push
testl
add
stos
out
test
test
jo
add
cmp
add
sbb
add
lea
add
jo
add
push
clc
addr16
add
push
inc
clc
and
add
movsb
clc
daa
clc
adc
fs
std
test
clc
stos
jl
jp
add
popa
add
cmp
clc
add
add
xchg
insb
sti
and
enter
add
jmp
xchg
pop
ficoms
add
popf
xchg
das
mov
pop
ja
seta
mov
add
jg
clc
test
add
mov
shll
aam
inc
clc
cltd
push
mov
clc
fs
outsb
arpl
add
popl
add
sti
xor
rolb
clc
add
add
push
add
je
sub
cs
jmp
mov
jnp
cmp
mov
pusha
add
xor
jmp
adc
add
xabort
inc
clc
pop
fcomps
clc
in
sar
add
add
daa
clc
cmp
dec
icebp
clc
aaa
test
add
cmp
add
add
add
and
add
ret
clc
mov
add
hlt
and
add
xchg
or
scas
test
clc
scas
cmp
mov
clc
lret
cmp
stos
mov
inc
add
xor
add
mov
clc
das
arpl
add
push
add
sub
or
add
jb
add
clc
push
push
pop
jnp
clc
jns
push
cmovl
dec
mov
xchg
xbegin
cmpsl
clc
loope
imul
mov
xor
add
in
cwtl
shl
clc
stc
mov
add
push
mov
flds
cli
insl
mov
sti
mov
add
jae
add
clc
stos
push
sub
scas
xchg
xbegin
test
in
cmp
push
mov
add
mov
push
mov
sub
clc
ror
insb
dec
loop
and
pop
mov
into
push
sbb
dec
mov
mov
add
or
addr16
data16
aas
dec
dec
dec
jp
xchg
mov
fdivrs
movsl
clc
mov
push
cmp
mov
add
clc
popa
add
jns
inc
add
jns
fidivs
add
push
popf
add
add
clc
add
ljmp
arpl
add
lret
inc
add
push
push
add
nop
push
jmp
clc
rclb
add
add
adc
add
xor
add
add
add
mov
dec
dec
adc
add
loopne
jnp
adc
sbb
add
in
jecxz
adc
add
ljmp
inc
add
push
int
clc
sbb
aaa
ret
clc
mov
clc
sar
add
aad
clc
cmp
clc
ret
add
daa
clc
sub
dec
idivb
xor
add
lret
push
mov
jl
mov
jne
inc
add
jl
mov
adc
add
clc
dec
dec
fs
push
clc
mov
popa
add
lret
clc
jmp
add
aas
incb
addr16
gs
cmp
inc
add
sub
pushf
mov
pop
in
loopne
fidivs
add
addr16
lcall
sub
pusha
add
outsb
mov
add
mov
fildl
iret
int3
out
gs
mov
pop
clc
repz
ret
mov
aas
test
xchg
fwait
inc
clc
mov
add
jp
add
loopne
nop
jo
add
fiadds
add
insb
push
add
cmp
clc
sub
loopne
push
push
jo
add
or
out
jecxz
xchg
jecxz
jae
add
add
lahf
or
clc
adc
add
or
cli
popf
jp
add
jnp
xor
add
push
add
mov
inc
clc
aam
mov
sahf
icebp
js
add
add
nop
leave
pop
clc
jl
pop
sar
gs
xchg
in
jp
add
push
add
pop
cmp
clc
clc
adc
add
int3
sbb
add
mov
mov
mov
xchg
pop
scas
jo
add
inc
clc
sub
clc
cltd
jp
stos
dec
sahf
out
sar
add
insb
pop
sbb
in
in
inc
add
sbb
or
pop
clc
insb
cmp
scas
in
insb
pushl
add
das
popa
add
sub
add
ret
clc
jnp
into
out
in
pop
mov
clc
pop
xor
add
add
clc
fdivrs
push
mov
cmp
push
add
mov
add
fdivrl
mov
clc
insl
and
cltd
lods
testl
add
add
movsl
clc
ja
xor
shr
ror
das
jo
add
add
sbb
mov
leave
pop
test
mov
adc
add
jg
clc
ret
clc
adc
add
sub
sar
cld
inc
clc
jne
dec
sub
clc
push
add
pop
testl
clc
nop
fcomps
pop
lods
jmp
cli
mov
out
cwtl
sub
mov
pop
jmp
shll
add
repz
cmp
clc
xchg
cmp
add
mov
clc
dec
add
sar
clc
or
add
push
clc
mov
add
popa
add
mov
mov
xchg
lods
pop
stos
sbb
push
add
fistpl
lock
fistpl
and
xchg
push
xchg
pushf
shr
in
mov
aas
lea
add
inc
clc
mov
add
fistpll
xor
add
push
add
mov
add
clc
in
sub
jne
clc
fmul
icebp
cmpsb
clc
js
xor
add
daa
clc
jl
push
nop
push
add
adc
add
clc
fdivrl
in
addr16
in
mov
add
lcall
sub
cwtl
ret
add
cmp
push
ljmp
jns
bound
add
clc
clc
into
xchg
xchg
pop
or
scas
pop
clc
or
hlt
adc
add
out
jl
add
jbe
clc
aad
xchg
arpl
add
out
push
jb
add
jae
add
cmp
in
popf
divb
add
add
imul
pop
das
cmp
add
mulb
add
mov
dec
jb
add
cmpsb
clc
xor
add
add
pop
xor
add
add
pop
mov
out
cld
mov
outsl
xor
add
or
dec
xor
add
clc
ret
clc
sar
add
cmc
push
add
adc
or
xchg
bts
fs
pusha
add
add
add
clc
imul
add
sahf
std
push
add
xchg
dec
dec
out
movsb
clc
icebp
jg
add
inc
clc
pminub
vcmpps
movsl
clc
xor
xchg
std
ret
clc
mov
add
push
stos
clc
clc
pop
xchg
and
add
add
add
arpl
add
add
inc
add
cmp
cmp
cmpsl
clc
mov
jbe
clc
leave
push
add
scas
mull
and
add
mov
mov
clc
pop
xbegin
add
push
add
repnz
aam
ds
add
fdivl
add
aaa
out
and
add
adc
add
sti
cwtl
pop
jle
sbb
add
vmovhps
cmp
adc
add
add
clc
pusha
add
adc
add
adc
add
inc
add
aas
bound
add
in
clc
out
pop
mov
inc
add
scas
xor
add
add
fidivs
pop
ret
clc
mov
in
cmp
add
movsb
clc
stc
clc
sbb
lea
add
add
outsl
aam
mov
adc
add
adc
jecxz
cmp
push
xlat
out
cmp
push
push
add
jecxz
xor
add
adc
add
movsb
clc
inc
clc
fnsave
add
test
jecxz
lods
dec
inc
add
inc
clc
xor
add
dec
data16
cmp
add
mov
inc
clc
into
mov
loop
idivl
inc
clc
in
add
add
clc
or
jl
movsb
clc
out
pop
add
add
inc
clc
lahf
mov
add
enter
loope
fcompl
cltd
in
sar
repz
movsb
clc
es
cmp
add
xor
add
cmp
hlt
mov
test
clc
repz
fldt
loop
or
clc
xchg
push
adc
add
add
cmpsb
clc
mov
jmp
sub
add
fiadds
clc
jnp
or
push
clc
push
lret
clc
clc
pop
fwait
leave
mov
and
xchg
xor
jecxz
das
jnp
clc
xchg
mov
int
fsubrs
frstor
pop
clc
enter
clc
inc
add
cli
out
add
add
add
or
add
jg
add
xchg
popf
dec
cli
out
xchg
push
rcrb
push
and
clc
jae
add
xchg
sar
add
xor
xchg
cmpsl
clc
pop
aam
clc
push
cld
adc
add
add
icebp
ret
mov
sub
js
dec
add
clc
jnp
add
cmp
bound
add
cmp
lock
push
add
rclb
add
cmp
add
fldt
stos
shll
sbb
add
imul
clc
jp
ds
xabort
ljmp
sar
loopne
jmp
adc
add
mov
out
fcomps
ret
clc
dec
mov
addr16
in
jae
add
sub
testl
inc
add
hlt
das
push
mov
add
pop
pop
jmp
clc
jbe
mov
clc
loopne
iret
jecxz
adc
add
jle
xchg
mov
or
add
add
fsubl
cmpsl
clc
lret
cmp
ret
lret
popf
or
pop
xor
clc
cmp
add
push
ds
jle
add
add
add
pop
and
sbb
clc
or
push
lret
or
clc
push
inc
clc
mov
clc
push
add
daa
clc
out
sahf
dec
sub
dec
xchg
cltd
sbb
mov
insl
mov
mov
add
sub
clc
push
out
negb
pop
add
add
rorl
jp
clc
add
mov
add
fdivs
sbb
iret
js
add
and
push
inc
clc
jle
cmp
aaa
aas
shrb
iret
mov
call
xabort
in
cmp
cltd
clc
dec
icebp
xchg
int
aad
sarl
dec
xchg
jbe
clc
xchg
adc
add
or
imul
push
and
add
ja
add
sub
xchg
js
cld
mov
inc
add
cltd
jl
mov
clc
clc
scas
sbb
cmpsl
clc
cmp
clc
sti
xchg
and
loop
add
in
sbb
push
clc
clc
jg
jmp
fwait
loop
xor
add
dec
xchg
out
leave
mov
adc
add
lret
add
mov
clc
mov
movsb
clc
clc
inc
add
outsb
or
clc
cmp
pop
inc
clc
mov
sub
pop
xlat
sub
xbegin
xbegin
add
popa
add
adc
add
add
incb
add
cmp
add
add
add
daa
clc
ret
clc
xchg
daa
clc
out
jb
add
add
push
add
popa
add
lods
in
push
cmc
push
xchg
inc
clc
push
and
dec
xchg
add
add
xchg
xor
add
add
ss
pop
and
add
add
add
inc
clc
xchg
cwtl
mov
clc
test
and
add
clc
daa
clc
test
inc
add
mov
ljmp
mov
bound
add
clc
movsl
clc
mov
in
fdivs
and
add
add
xlat
ret
clc
aad
sbb
pop
jb
add
pop
cmp
fmull
push
rcr
push
push
add
add
dec
jnp
fdivrl
jl
mov
xchg
ds
fnstcw
clc
sub
push
into
add
add
pop
ja
movsb
clc
int3
testb
inc
add
or
clc
insl
fst
push
in
leave
mov
add
sar
push
add
es
fsubrp
nop
adc
add
pop
pushf
or
jp
xor
add
add
out
adc
jl
clc
es
cld
popf
jnp
clc
in
or
aad
add
push
outsl
dec
cmpsl
clc
cmp
clc
loop
jle
stos
aad
add
mov
add
call
pusha
add
lahf
leave
das
cld
adc
addr16
sbb
jae
add
icebp
jb
add
add
dec
lods
mov
mov
clc
push
add
shrb
clc
out
sub
jp
sbb
dec
cmpsb
clc
mov
lahf
xor
add
pop
fidivrs
movsl
clc
mov
sarb
add
bound
add
in
mov
clc
lahf
mov
clc
ret
clc
das
add
add
add
mov
or
adc
add
fwait
stc
loope
out
sti
sbb
add
xchg
ja
dec
lods
data16
or
xchg
call
adc
add
in
mov
insb
loop
pop
daa
clc
fprem1
jo
add
dec
ret
add
add
add
jmp
push
das
mov
into
mov
add
cmp
lock
add
or
pop
mov
jle
je
rolb
clc
ret
clc
imul
sarb
lret
xor
add
cmp
push
mov
mov
add
dec
jno
add
lret
clc
loopne
lcall
clc
mov
mov
clc
fs
daa
clc
mov
mov
mov
clc
call
inc
clc
in
or
push
clc
data16
out
hlt
jae
add
mov
dec
testl
pop
inc
clc
jno
add
outsl
adc
add
cmp
lret
add
and
add
popf
xchg
notb
add
push
mov
add
data16
xchg
fisubrl
push
mov
daa
clc
jnp
clc
or
push
fsubrs
jl
add
cmp
dec
push
add
pop
divl
add
mov
clc
cld
cmc
add
add
lock
pop
iret
test
xor
add
add
sar
sub
inc
add
mov
clc
xlat
inc
clc
xlat
add
push
clc
sub
add
mov
add
in
popf
aas
lea
test
sbb
kmovw
stc
cmc
cmp
in
ja
xabort
iret
mov
and
add
inc
clc
or
and
add
mov
out
and
arpl
add
clc
test
out
fsub
clc
push
and
add
stos
rclb
clc
add
mov
test
ja
clc
data16
pop
iret
cmc
push
xbegin
clc
std
sub
push
mov
add
movsl
clc
mov
je
clc
daa
clc
push
std
xor
clc
stc
mov
add
add
mov
add
arpl
add
push
push
add
sbb
push
clc
xor
add
add
enter
loope
xor
cli
xchg
xchg
xchg
or
iret
jns
bswap
xabort
inc
add
sub
add
cli
cwtl
int
sbb
inc
add
fwait
mov
clc
pop
stos
lahf
ret
clc
mov
add
fidivrl
clc
mov
pop
testb
add
add
xor
sbb
in
out
xor
push
add
scas
in
inc
clc
je
or
repnz
pop
push
imul
inc
add
fiaddl
add
and
inc
add
add
add
cmp
das
mov
mov
clc
stos
std
pusha
add
loop
cmp
scas
push
add
out
dec
ficoms
pop
xchg
push
movsb
clc
mov
mov
add
inc
clc
push
add
mov
imul
clc
call
xbegin
add
pop
clc
scas
pop
iret
pop
std
stc
mov
clc
fimull
clc
sub
add
aam
add
bound
add
movsb
clc
std
cmp
aas
sub
clc
int
cmp
push
mov
lret
in
in
adc
and
add
add
mov
sar
jne
add
mov
icebp
sub
add
clc
cmp
mov
add
lea
push
pop
pop
mov
cmpsl
clc
cmp
clc
add
lock
add
int
clc
mov
clc
or
dec
scas
adc
and
loop
cmc
insb
dec
push
add
jecxz
or
mov
adc
clc
adc
add
ret
clc
in
jmp
xchg
fidivs
add
gs
cmp
clc
add
jl
ds
mov
sti
inc
clc
movsb
clc
fisubrl
clc
add
shl
out
mov
cmpsb
clc
inc
clc
inc
clc
cmp
and
cs
jb
add
add
sbb
aas
std
mov
and
inc
add
loope
test
filds
add
loope
adc
fimuls
clc
js
and
add
aas
and
test
pop
mov
add
aaa
cmpsl
clc
pushf
pushf
cmp
clc
lods
push
clc
pop
push
xor
add
clc
push
clc
and
add
push
lret
xor
clc
jmp
add
add
stos
sub
add
mov
out
mov
jnp
dec
and
test
and
add
clc
mov
or
pop
enter
clc
add
add
clc
popa
add
addr16
stos
scas
dec
mov
jno
add
mov
jecxz
inc
clc
ret
clc
jb
add
adc
add
add
push
lret
sub
clc
cmpsl
clc
scas
lods
rep
push
add
mov
add
or
clc
pop
clc
sbb
clc
mov
add
add
shlb
lods
inc
add
out
hlt
inc
add
std
fmul
or
cmp
sar
pop
incb
add
add
ret
clc
pop
jl
clc
sub
add
mov
add
clc
scas
push
and
add
clc
shr
cmp
inc
clc
mov
add
test
add
icebp
lods
jb
add
mov
add
add
in
in
add
add
push
lret
test
sbb
xchg
dec
clc
cmp
pop
iret
and
add
aad
clc
add
jb
add
pop
mov
add
add
add
mov
add
push
in
cmp
cltd
out
cmp
jae
add
jno
add
jnp
cmc
jb
add
jbe
xor
add
add
cmp
adc
add
sub
sbb
cmpsl
clc
ffree
clc
mov
nop
lea
push
or
cmp
mov
call
inc
clc
or
inc
clc
bound
add
clc
push
lock
add
sti
ret
clc
cmp
jg
mov
or
in
pop
iret
rol
clc
repz
pop
es
shl
clc
vmovntps
mov
jp
sbb
add
nop
daa
clc
lahf
std
fwait
mov
test
push
add
xlat
lahf
adc
add
sbb
xor
add
jbe
mov
clc
push
add
gs
aad
clc
mov
dec
cmp
clc
push
add
add
clc
out
add
add
add
xor
add
add
mov
clc
cltd
mov
clc
cmp
clc
ja
mov
gs
jl
clc
loopne
mov
sysenter
add
add
clc
aad
or
mov
clc
incb
add
xchg
sub
fildll
add
out
ljmp
imul
sub
clc
push
clc
test
inc
add
mov
adc
add
mov
add
jno
add
add
mov
clc
push
repnz
and
add
add
leave
jne
outsb
fwait
scas
xor
add
sub
push
std
in
push
pop
fucomi
adc
add
repnz
lea
cwtl
lahf
bound
add
add
mov
clc
push
inc
add
mov
clc
cmp
dec
std
cmp
push
add
sbb
add
jecxz
gs
or
xbegin
mov
jecxz
ja
clc
push
cwtl
push
add
nop
sar
mov
sahf
out
pop
cmp
fs
or
clc
lcall
adc
xor
add
call
add
and
add
sbb
add
push
fldcw
add
ret
clc
fidivrs
lods
fiadds
add
in
xor
sbb
sbb
cld
mov
inc
clc
mov
hlt
int3
mov
clc
sub
and
add
movsl
clc
mov
pusha
add
mov
inc
add
test
adc
add
jle
ret
clc
aas
mov
fwait
lcall
mov
mov
imul
add
into
jnp
data16
test
add
das
cmp
clc
xchg
jns
push
cmp
add
data16
push
add
mov
mov
or
rcr
mov
add
outsl
divb
outsb
pop
xchg
add
add
clc
enter
dec
mov
add
into
ds
test
xor
mov
scas
ret
mov
jb
add
adc
add
movzwl
add
xchg
and
add
sub
in
mov
adc
add
adc
scas
sbb
clc
and
add
mov
push
pop
repz
sbb
add
inc
clc
push
pushf
lret
out
daa
clc
mov
clc
inc
add
push
add
push
clc
inc
add
add
add
mov
add
or
clc
and
add
add
fadd
clc
stos
add
add
clc
cltd
out
pop
dec
push
clc
int
in
jae
add
add
pop
cld
repz
clc
pusha
add
mov
mov
clc
jmp
mov
cmpsl
clc
cmp
add
iret
sbb
push
cmp
clc
push
add
or
jae
add
pop
adc
add
jg,pt
cwtl
mov
clc
lock
imul
clc
push
inc
add
push
add
jp
pop
lods
ja
clc
lock
dec
call
cmp
add
hlt
nop
mov
add
xchg
push
cltd
fwait
sbb
add
cmp
fcoms
in
lret
movsb
clc
push
ret
clc
call
push
add
mov
cmp
out
add
add
mov
add
push
in
push
sbb
clc
mov
clc
mov
add
xbegin
add
inc
clc
xbegin
ja
mov
idivb
scas
mov
fwait
sbb
add
add
dec
fcmovnb
clc
dec
pop
pop
cmpsb
clc
pop
leave
movsb
clc
cwtl
push
gs
int3
mov
dec
bound
add
stos
push
fldenv
add
fisubrs
add
in
ret
clc
loop
xchg
add
adc
add
or
add
add
loop
std
xor
add
sub
stos
imul
pop
pop
xchg
das
stos
push
add
lock
aaa
sub
add
push
push
mov
adc
add
add
adc
add
or
clc
xchg
out
adc
add
pop
mov
add
cmp
ds
mov
cld
movsb
clc
fsts
add
cmp
and
jnp
scas
mov
add
pop
sbb
jo
add
jp
clc
push
pop
sar
icebp
fisttpll
adc
add
clc
out
xbegin
add
mov
cmp
pop
xchg
in
es
fsubrs
clc
xlat
dec
mov
add
add
cmc
sub
push
add
adc
add
clc
test
jmp
jecxz
mov
clc
into
jp
clc
cltd
push
and
add
clc
push
clc
outsb
leave
test
fdiv
outsb
mov
add
mov
clc
mov
std
mov
push
jae
add
xchg
test
dec
aaa
sarb
cmp
movsb
clc
jl
mov
clc
mov
cmp
xor
add
scas
sbb
add
addr16
mov
lcall
push
loope
sbb
clc
inc
add
knotw
inc
add
addr16
or
mov
clc
ret
clc
inc
add
lret
inc
clc
ja
sbb
add
add
scas
stc
push
add
fs
adc
in
sti
push
add
lret
push
pop
aaa
call
lret
pop
vorps
mov
clc
jge
clc
scas
inc
clc
ret
clc
cmp
clc
mov
sub
data16
lock
inc
clc
loopne
xchg
mov
add
and
add
repnz
ja
clc
cmp
fwait
or
clc
loopne
mov
add
mov
and
push
add
mov
hlt
add
add
clc
mov
lock
dec
pop
xchg
and
add
add
lock
and
add
cmp
add
mov
push
test
mov
clc
jg
cmp
clc
mov
cmp
jg
sbb
clc
inc
clc
mov
push
addr16
xchg
inc
clc
and
add
add
or
sub
clc
or
ds
add
out
sub
nop
jae
add
add
into
test
sbb
clc
std
pop
sub
pop
je,pt
add
or
clc
jo
add
clc
std
out
call
jne
sar
jbe
test
clc
adc
add
mov
out
dec
xchg
push
insb
and
add
cmp
cmp
pop
clc
jp
add
inc
add
out
sahf
ljmp
xor
add
jp
bound
add
clc
out
addr16
mov
add
push
scas
imul
mov
clc
sbb
clc
mov
xchg
pop
sbb
loope
xchg
sub
add
std
pusha
add
mov
clc
gs
xor
add
add
addr16
sbb
xabort
leave
inc
clc
jg
add
mov
clc
out
imul
cltd
cmp
add
clc
repz
jnp
add
add
xabort
clc
cmc
mov
clc
and
add
pusha
add
in
xlat
enter
dec
aam
pop
div
cmp
mov
push
add
pop
xchg
or
clc
daa
clc
or
test
outsl
cs
mov
scas
pushf
mov
or
out
adc
pop
bound
add
mov
add
mov
clc
enter
xabort
clc
mov
clc
or
sahf
daa
clc
mov
add
iret
mov
add
out
loop
mov
push
add
ja
clc
popf
test
jo
add
test
jnp
clc
or
hlt
xor
add
inc
clc
mov
push
call
sub
add
out
fisubs
add
cmp
add
adc
int
dec
lods
cli
add
add
add
pop
sub
mov
add
xor
add
add
je
or
dec
lret
xor
clc
xor
add
add
pop
push
add
rcrl
loope
ret
clc
dec
sbb
or
push
xchg
sub
not
ja
fistpll
fldt
push
cwtl
inc
clc
pop
push
add
xchg
xor
add
add
jnp
xor
jae
add
ljmp
add
and
add
faddp
clc
int3
in
addr16
and
add
add
xchg
lret
sbb
stos
mov
testb
cmp
add
lcall
test
clc
sti
or
scas
pushf
xchg
add
es
daa
clc
ljmp
add
test
clc
loope
add
add
in
in
inc
add
xor
add
dec
loope
or
sbb
jnp
popa
add
push
pop
xrelease
add
adc
add
pusha
add
mov
daa
clc
inc
add
cmpsb
clc
xor
sbb
mov
call
cmc
js
add
jbe
add
jno
add
addr16
mov
add
clc
out
sarl
popf
mov
push
loope
or
add
imul
jnp
pop
sbb
mov
scas
pop
imul
lret
pop
sar
jge
sub
or
xchg
pop
mov
fcoms
adc
add
clc
ret
clc
push
add
push
jno
add
clc
push
add
push
clc
pop
lea
add
jbe
clc
xchg
cmp
pmulhw
pop
cmp
mov
cmpsl
clc
and
add
add
add
cmp
clc
mov
inc
add
inc
add
inc
add
mull
fcmovb
clc
or
add
or
ss
mov
cmp
fcoms
cmpsb
clc
pop
xor
add
cmp
mov
inc
clc
jge
add
out
cs
insb
mov
cmc
push
and
scas
dec
pusha
add
nop
sahf
addr16
jl
mov
loop
clc
dec
jp
add
lret
test
lcall
scas
dec
enter
clc
cmp
mov
or
iret
adc
add
xchg
pop
nop
dec
ret
clc
sbb
adc
add
loopne
push
fldenv
shl
push
clc
xchg
push
sbb
xchg
xchg
aam
mov
xchg
push
test
xchg
jl
shlb
jns
lcall
pop
xbegin
scas
add
add
lret
jecxz
sbb
movsl
clc
xchg
int3
pop
mov
insl
or
cmp
or
shr
dec
dec
aad
imul
add
add
add
jbe
lods
sgdtl
add
rcrb
gs
je
mov
add
addr16
pop
jb
add
clc
arpl
add
add
arpl
add
clc
in
jb
add
push
add
xor
add
stc
jge
ja
xchg
aam
sbb
inc
clc
push
add
int3
jg
clc
mov
repnz
cltd
cltd
sti
hlt
imul
sbb
lods
cmpsb
clc
jl
popl
jb
add
in
sub
add
and
add
jmp
into
dec
cmp
lods
sub
dec
cmpsb
clc
and
add
xor
dec
inc
clc
push
add
mov
xor
data16
dec
inc
clc
mov
and
add
cltd
pop
mov
loope
pop
xchg
adc
ja
add
inc
add
notl
test
outsb
jno
add
jb
add
clc
es
sub
clc
jecxz
call
imul
add
sbb
inc
clc
jmp
leave
nop
inc
clc
movsb
clc
xor
add
add
clc
daa
clc
or
sub
push
dec
cmp
sub
sti
nop
sub
add
push
outsl
ret
jge
clc
jb
add
add
add
scas
cmp
in
out
mov
xor
add
and
add
clc
mov
clc
xbegin
inc
clc
dec
mov
pop
adc
clc
pop
mov
xchg
mov
clc
adc
add
add
ret
add
add
jge
and
and
add
push
add
jg
fcomps
mov
add
pop
int
add
cmpsb
clc
xchg
sahf
xlat
out
fs
sahf
popf
sub
insb
in
gs
xchg
je
enter
rcl
into
add
add
add
clc
cmp
fcmovne
das
loopne
cltd
fisttpll
add
xor
add
clc
inc
clc
and
sar
inc
add
dec
jnp
add
aad
clc
addr16
or
clc
jne
aaa
fildl
add
clc
sbb
add
jmp
clc
xabort
push
add
dec
pushf
jmp
xchg
test
icebp
out
jecxz
xchg
jmp
jp
add
dec
add
add
scas
xchg
aas
push
add
and
jb
add
js
mov
mov
add
movsl
clc
mov
clc
lcall
sbb
add
test
decb
clc
stc
mov
xchg
int
movsl
clc
jbe
add
jg
add
cli
dec
pop
das
adc
add
mov
mov
add
cmp
daa
clc
cld
and
scas
inc
clc
cmpsb
clc
sub
inc
add
pop
or
fdivp
sub
ja
and
add
in
pop
sub
add
push
mov
jne
or
mov
add
add
nop
ljmp
add
add
add
adc
add
stos
mov
inc
clc
cmp
test
inc
add
ret
fsub
clc
aaa
and
pop
dec
popf
and
push
jne
add
inc
add
cmpsl
clc
mov
xchg
or
cli
cmpsb
clc
outsb
nop
stos
clc
in
push
in
stos
mov
clc
sarb
jae
add
in
lock
jmp
clc
sub
clc
js
cmp
pop
jmp
clc
jo
add
add
rorl
mov
inc
clc
in
test
xchg
and
add
add
add
jno
add
js
add
fs
sti
sti
lahf
inc
clc
movsb
clc
sub
or
clc
mov
xchg
sub
add
out
inc
add
mov
daa
clc
jmp
cmp
ja
add
jbe
mov
add
xor
adc
add
add
add
clc
pop
xor
add
add
sbb
mov
clc
fcmovbe
mov
jmp
add
sbb
fs
fmuls
xchg
jo
add
add
gs
jnp
out
repnz
int3
and
clc
mov
out
iret
mov
add
dec
clc
in
add
add
mov
clc
shll
add
add
add
add
inc
clc
adc
add
add
arpl
add
cmpsb
clc
adc
add
mov
pop
shr
inc
clc
fstpl
pop
cmp
imul
xchg
sar
gs
push
add
addr16
jl
stc
mov
adc
clc
or
mov
add
add
lahf
cmp
clc
xchg
cmc
mov
add
icebp
testb
or
mov
mov
dec
dec
int3
push
mov
cmp
clc
iret
mov
lahf
imul
pop
xor
add
add
stos
push
cmpsb
clc
dec
mov
add
pop
movsb
clc
loope
hlt
in
mov
call
xor
add
add
imul
clc
and
popa
add
vdivps
mov
outsb
pop
xchg
icebp
clc
jmp
clc
adc
add
cs
clc
cmp
add
and
cmpsb
clc
cmp
loopne
imulb
adc
and
add
aad
cmp
clc
rorl
xchg
cmp
add
daa
clc
outsl
movsb
clc
scas
hlt
adc
add
sti
popa
add
push
add
out
cmpsl
clc
push
add
and
add
dec
mov
adc
add
clc
cmp
adc
clc
loop
xchg
cs
sar
or
push
clc
ss
icebp
jl
clc
mov
add
cmp
ret
clc
lock
clc
inc
add
mov
mov
call
fsub
clc
and
or
add
pusha
add
es
sbb
bound
add
clc
mov
add
ja
add
addr16
cmp
add
nop
pop
lret
add
pusha
add
fcompl
aaa
and
mov
clc
push
mov
add
dec
mov
loop
push
sar
jae
add
add
pop
xchg
fiaddl
negl
insl
push
mov
sti
sar
clc
ss
stc
and
add
aas
mov
add
cmpsb
clc
jl
clc
dec
mov
clc
cs
add
fcomip
leave
pop
jno
add
add
adc
add
ja
cmp
mov
pushf
xlat
rcl
xchg
dec
sar
add
push
add
ljmp
push
sub
and
add
aam
data16
jb
add
or
jns
addr16
iret
and
add
add
add
jl
divl
clc
pop
xabort
add
pushf
pop
mov
inc
clc
aam
add
cmp
add
ds
clc
aaa
insl
cmp
vldmxcsr
add
push
mov
negl
or
mov
dec
sub
dec
sbb
push
add
push
xchg
in
cmp
add
loopne
lahf
lcall
clc
add
add
pusha
add
gs
fwait
mov
push
lock
xchg
cwtl
fs
push
clc
and
fwait
int3
cmp
in
je
pop
icebp
pop
ret
clc
xabort
clc
push
sbb
test
jl
clc
fidivrl
sbb
add
cmpsl
clc
imul
mov
add
add
add
leave
mov
adc
add
fidivrs
clc
mov
xchg
aam
inc
add
mov
add
mov
xchg
or
sub
jne
jge
rorl
sar
sbb
js
clc
or
sub
clc
sar
clc
push
cltd
xchg
scas
mov
add
adc
add
in
push
add
sbb
mov
fwait
ret
clc
out
jbe
jle
clc
stc
icebp
shll
out
push
clc
fimull
cmp
gs
sti
jmp
clc
mov
sub
add
push
inc
add
js
stos
fldcw
jb
add
cmp
test
mov
sahf
aam
add
xor
add
clc
cmp
dec
dec
stc
xor
add
or
cmpsb
clc
jg
add
add
push
clc
testb
add
popa
add
lods
xchg
stc
jle
clc
inc
clc
jns
push
sub
add
xchg
sbb
sti
daa
clc
push
test
std
cmpsb
clc
call
add
dec
cmpsb
clc
lcall
and
das
mov
dec
enter
es
push
in
fdivl
adc
add
add
clc
xor
clc
loope
sbb
add
add
add
sbb
pop
ja
push
add
sar
mov
mov
clc
add
push
add
cmpsl
clc
mov
push
jg
inc
clc
fsts
add
add
lret
jb
add
icebp
jne
add
pop
pushf
lock
add
jmp
sub
add
lcall
xor
add
jbe
push
clc
clc
dec
sar
add
mov
fisubrs
std
stos
and
mov
stc
add
add
clc
xchg
jae
add
jmp
add
add
xchg
jnp
outsl
push
add
stos
into
push
clc
test
cltd
sub
aaa
std
imul
add
rcl
sub
clc
cmp
add
add
stos
js
daa
clc
jmp
mov
add
jno
add
shufps
add
loopne
jl
aaa
mov
clc
aad
clc
lahf
xchg
inc
clc
jne
clc
test
mov
mov
clc
ret
pop
mov
lcall
clc
mov
repz
mov
adc
add
addr16
call
and
add
inc
clc
and
add
mov
clc
cmp
clc
shll
pushf
jge
add
outsb
lea
add
data16
cltd
inc
add
cwtl
leave
xor
add
clc
jbe
scas
in
js
clc
ljmp
or
add
mov
clc
sbb
add
dec
mov
clc
ret
clc
pop
insb
mov
pop
cmp
add
add
and
add
stos
pop
mov
stc
dec
stc
xchg
push
add
jnp
sub
add
daa
clc
lods
loopne
jp
mov
aad
jns
clc
cwtl
xchg
adc
add
push
repz
icebp
call
clc
outsb
sahf
in
call
and
add
add
add
clc
mov
clc
xabort
psraw
dec
clc
mov
and
add
in
pop
mov
scas
or
add
add
ds
add
jp
mov
fcmove
fiadds
loopne
test
fwait
inc
add
adc
add
ss
add
or
sub
add
je
and
int
cs
lods
push
repz
mov
je
push
cmp
jns
cwtl
movsb
clc
outsb
dec
lret
push
clc
negl
sahf
push
gs
push
in
xchg
sti
clc
ret
clc
jns
clc
outsl
jae
add
add
aam
clc
out
inc
add
push
add
mov
cmp
clc
pop
pushf
out
mov
pop
nop
cmc
sub
lret
add
add
dec
jb
add
add
cmp
add
add
add
pop
cmp
dec
xchg
test
int3
xor
add
movsl
clc
fsub
clc
ficompl
add
jecxz
push
jae
add
flds
clc
dec
pop
jecxz
pop
mov
ja
clc
push
add
mov
mul
clc
leave
mov
lock
push
clc
pop
hlt
xchg
pop
pushf
mov
cwtl
leave
popa
add
icebp
std
call
test
stos
lods
add
add
mov
nop
test
add
inc
clc
aam
clc
push
add
enter
mov
imul
clc
inc
add
or
xor
add
add
ljmp
mov
cmp
sarl
movsb
clc
and
mov
jo
add
xor
add
jg
aas
or
add
mov
clc
bound
add
or
inc
clc
cmp
lods
loopne
gs
insl
cmp
xchg
push
sar
in
sbb
clc
push
push
add
jo
add
scas
add
add
ljmp
add
pop
sub
sub
add
or
clc
jecxz
int
jae
add
clc
cli
xchg
dec
mov
add
inc
add
in
fwait
cmpsl
clc
mull
or
add
add
add
sbb
add
ficoms
add
add
cmpsl
clc
data16
jns
in
push
mov
add
push
jnp
in
sti
sti
int
clc
xlat
cmc
cmp
lret
add
sub
push
scas
pushf
fnsave
add
lcall
cmp
in
mov
pop
clc
jnp,pn
clc
popa
add
and
add
add
add
add
inc
clc
icebp
jne
clc
cltd
lods
mov
cmp
sbb
clc
daa
clc
fisttps
adc
rolb
lahf
ljmp
clc
mov
xchg
fisubl
clc
dec
bound
add
clc
mov
adc
mov
mov
add
cmp
jne
clc
mov
in
cli
addr16
shlb
add
add
pop
and
add
clc
enter
xchg
fcompl
push
push
lahf
insl
in
xchg
add
add
ss
sub
clc
rep
pop
incb
clc
cwtl
stc
leave
pop
addr16
int3
xchg
pop
jl
cmp
xchg
mov
into
xchg
sahf
or
enter
repnz
out
inc
add
loop
add
add
clc
xor
add
dec
and
push
adc
add
xchg
mov
push
sub
icebp
pop
dec
mov
stc
xlat
xor
jbe
add
dec
cmp
insb
mov
add
push
inc
add
mov
sar
adc
add
add
mov
fstps
cmp
add
jae
add
pop
pop
mov
add
enter
add
clc
jns
sbb
add
add
in
jmp
clc
xchg
mov
repz
popa
add
inc
add
lahf
jl
mov
nop
fists
scas
jg
jae
add
pop
jbe
clc
xlat
ss
and
add
mov
add
dec
cmp
sub
clc
xor
add
cmp
add
and
pop
push
mov
xor
clc
sbb
lods
scas
int3
add
add
vcvtdq2ps
add
ret
stos
mov
rorl
pop
adc
clc
and
add
jb
add
add
aas
pop
push
clc
jbe
add
nopl
add
mov
pop
pop
dec
shll
clc
mov
clc
cmp
clc
setg
add
dec
sbb
cmp
sub
add
mov
add
push
cmp
jge
aam
clc
into
sahf
into
mov
test
jg
inc
add
jle,pn
cld
xchg
xor
add
sbb
adc
add
push
adc
add
jmp
pop
mov
mov
xchg
rolb
and
xor
add
mov
clc
mov
sbb
pop
push
add
sbb
clc
pop
add
add
add
add
or
jl
add
inc
add
and
jnp
clc
leave
dec
dec
cmp
xbegin
cmp
cli
shlb
add
outsb
and
add
clc
push
add
movsl
clc
xchg
push
jl
mov
xor
clc
mov
in
cmpsl
clc
into
xchg
inc
add
mov
gs
popf
es
xchg
dec
cmp
popa
add
mov
mov
clc
sbb
or
jp
and
add
in
fsubl
sub
add
mov
clc
xor
cmpsb
clc
add
add
add
mov
add
add
add
push
mov
bound
add
clc
mov
clc
nop
jmp
cmp
xabort
add
repnz
pop
dec
loopne
fprem
pop
cs
sarb
daa
clc
xchg
push
add
add
add
add
xabort
fnstenv
add
push
clc
aad
test
clc
cli
push
mov
popf
inc
clc
popf
xor
loope
cmp
mov
push
clc
outsb
lahf
xor
add
jp
clc
mov
xchg
mov
add
out
insl
mov
dec
loope
clc
push
adc
add
xor
add
xor
add
and
add
xbegin
jecxz
stos
addr16
push
add
xbegin
bsf
add
dec
cwtl
jecxz
or
xabort
adc
add
clc
push
add
adc
clc
push
test
clc
push
add
add
add
sbb
lahf
pop
outsl
sarb
fisttps
clc
fwait
dec
add
add
push
add
mov
push
pop
mov
add
pop
push
mov
movsl
clc
and
add
clc
push
add
mov
test
dec
xor
sahf
scas
xor
add
ret
clc
sub
clc
fwait
data16
or
clc
dec
xchg
test
mov
clc
faddl
sar
clc
xchg
and
and
clc
aas
and
add
sub
xor
add
fstpl
xbegin
mov
add
mov
bound
add
xlat
sbb
add
xchg
sbb
clc
cmp
clc
push
hlt
cwtl
push
imul
add
or
dec
xabort
clc
jns
jge
pop
scas
and
add
inc
add
xchg
xchg
movq
clc
xchg
aaa
sub
xchg
push
fwait
inc
clc
sub
add
aaa
push
clc
push
adc
sub
inc
clc
dec
outsl
sbb
add
mov
jno
add
add
sbb
pop
rorl
clc
std
popf
xchg
call
loop
insl
xchg
fnstsw
add
fists
add
clc
mov
clc
in
faddl
xabort
pop
mov
clc
in
mov
cmp
inc
add
add
clc
add
add
add
ds
push
leave
sahf
imul
movsb
clc
fcmovne
xchg
rcr
into
pop
imul
aaa
lahf
fstps
and
add
add
int
lock
add
arpl
add
jnp
clc
cmp
mov
dec
xchg
cmc
inc
clc
leave
jns
mov
sbb
mov
clc
mov
enter
clc
dec
dec
or
pop
fs
lea
inc
add
setae
mov
fs
xchg
or
xchg
cli
push
xor
add
test
cs
cmp
clc
sub
add
sar
clc
into
sub
aas
in
push
add
mov
sbb
or
jb
add
movsl
clc
repz
sub
jecxz
mov
and
add
mov
pop
clc
sbb
add
ficoml
clc
lock
add
push
add
clc
ret
add
jbe
add
fiaddl
xor
add
and
sahf
add
add
mov
ss
loope
fst
add
pushf
sbb
xor
add
outsb
dec
popf
dec
out
or
push
inc
clc
sar
das
cmp
fistpl
clc
test
dec
cli
inc
add
dec
push
clc
cs
outsb
inc
add
or
js
add
pushf
es
push
imulb
jp
or
dec
push
jnp
daa
clc
jl
pop
fcmovnbe
jecxz
aad
adc
add
cwtl
jns
cmp
pop
out
test
clc
mov
jmp
clc
or
sar
cmp
jo
add
push
int3
cs
outsb
lea
add
cmp
int3
shll
jecxz
out
sub
add
jo
add
push
bound
add
clc
pop
test
xchg
jmp
inc
clc
in
ljmp
cli
sti
mov
add
inc
add
jecxz
notl
stc
cmp
outsl
int3
lods
repnz
clc
sarb
push
dec
mov
add
popf
push
add
loope
xabort
pop
call
fsub
clc
cmp
add
ja
xchg
or
add
ljmp
in
out
jge
add
jb
add
test
push
add
add
inc
clc
mov
push
in
cmc
gs
lcall
dec
xchg
shll
shrl
lock
add
cmp
mov
cmp
add
arpl
add
scas
clc
inc
add
dec
shl
cmp
mov
gs
push
jns
adc
fsubl
std
jecxz
adc
add
add
mov
inc
clc
cwtl
loope
add
add
add
out
in
jmp
clc
fwait
ds
clc
in
lcall
add
xor
add
ljmp
add
bound
add
mov
sahf
and
add
add
jge
add
and
add
in
push
cmpsb
clc
cmpsb
clc
mov
clc
jo
add
xchg
push
clc
sbb
sbb
mov
inc
clc
cmp
fsubrl
sbb
mov
clc
cs
clc
mov
jle
sar
call
leave
xlat
pop
ficompl
clc
push
add
arpl
add
clc
xor
add
gs
mov
rolb
add
lret
mov
lods
mov
inc
clc
lods
push
dec
in
filds
popf
add
xchg
lods
popf
add
fdivr
mov
clc
inc
add
sub
fwait
mov
movsl
clc
lea
fisubl
add
imul
mov
clc
cmc
or
fcompl
clc
jg
add
fiadds
clc
filds
add
lock
test
mov
pop
xchg
repz
add
jle
ja
add
dec
xor
imul
stos
stos
ret
clc
jbe
add
pop
xor
dec
in
xor
add
add
sub
in
mov
or
jnp
enter
or
dec
outsb
roll
imul
add
and
xor
add
or
loopne
sar
add
sarb
stc
cmp
clc
xchg
sbb
clc
addr16
push
add
inc
add
sbb
out
xchg
mov
add
lret
mov
mov
or
push
add
sbb
clc
or
cld
cmc
xor
imul
clc
outsl
loopne
push
add
inc
add
mov
add
or
adc
add
std
jle
add
pop
popf
xchg
sub
add
cmp
clc
lea
adc
add
add
add
fwait
mov
or
jne
clc
clc
dec
aad
clc
lock
lock
adc
add
clc
cs
xbegin
add
pop
clc
pop
cli
mov
sub
jge
or
clc
loop
mov
clc
inc
add
fwait
xor
mov
stc
std
in
cmp
in
out
or
add
out
mov
add
add
mov
add
sar
xchg
xchg
mov
call
add
nop
cwtl
lods
jmp
movsb
clc
and
add
addr16
stc
cmp
in
or
clc
inc
clc
test
jp
or
ret
clc
call
add
mov
imul
int3
dec
negl
scas
mov
adc
add
dec
rcr
cmp
add
ficomps
xor
add
loop
int3
or
add
fnstsw
clc
insl
vucomiss
clc
leave
mov
clc
in
ja
push
add
lock
inc
add
fwait
pop
adc
add
int3
ss
inc
clc
lea
xor
add
insb
mov
xchg
fcmovnbe
ret
clc
cmp
add
iret
div
mov
add
add
add
loop
xchg
jp
add
inc
clc
or
xlat
int
clc
aam
pusha
add
lods
sar
add
inc
clc
insl
mov
ret
clc
add
add
clc
xbegin
sahf
insl
push
xchg
stc
out
int3
add
or
push
fisubrs
add
ret
add
repnz
mov
push
clc
stc
sar
mov
sub
aam
xor
add
xor
add
sbb
clc
in
and
add
out
clc
xor
jle
pop
in
sbb
adc
add
add
cmp
decb
rclb
clc
pop
mov
mov
icebp
xor
add
add
pop
mov
clc
loopne
gs
adc
add
ret
jne
clc
mov
shll
add
add
imul
xchg
out
lods
lock
add
add
jne
xchg
jmp
lahf
inc
add
xchg
mov
aam
test
sub
add
mov
jns
in
sar
dec
mov
clc
push
leave
mov
add
inc
add
cltd
clc
ret
es
decl
fnsave
cs
push
add
add
cwtl
pusha
add
lahf
lods
in
imul
jmp
jns
clc
clc
out
sahf
sar
repnz
ljmp
sub
jecxz
addr16
leave
add
add
add
in
leave
or
add
add
into
xor
add
add
add
xchg
sbb
clc
push
and
add
jo
add
out
sar
jecxz
addr16
insl
gs
fcomps
mov
add
out
fisttpll
push
clc
aad
jae
add
add
stos
or
xor
add
popa
add
cld
sti
loop
scas
jecxz
mov
add
xor
add
lea
jmp
clc
xlat
cmp
xor
clc
sbb
jo
add
jecxz
out
cmp
clc
mov
mov
out
cmp
sub
add
lock
add
mov
cmp
and
add
mov
aam
inc
add
jnp
clc
xchg
pushf
cltd
or
data16
adc
add
cmp
dec
inc
add
cld
fisubrs
clc
lret
mov
clc
lret
sbb
mov
clc
dec
dec
sbb
dec
lcall
push
dec
insb
in
add
add
fadd
clc
lods
lret
clc
mov
clc
nop
sbb
dec
jge
clc
xchg
mov
and
add
add
hlt
jb
add
hlt
aam
add
ljmp
adc
cmp
add
add
lock
clc
push
add
gs
cmpsl
clc
sbb
sbb
mov
add
pop
int3
push
outsb
xor
add
add
int
or
clc
sub
mov
call
jno
add
mov
cmp
add
xchg
xor
xchg
add
add
stos
leave
push
js
clc
cs
clc
test
jp
add
dec
mov
add
add
push
clc
pop
cli
jae
add
clc
cld
xabort
cmp
and
push
add
es
mov
int
clc
jecxz
fisttps
add
scas
pop
jb
add
mov
aaa
jo
add
xlat
or
push
clc
ss
xchg
icebp
push
ds
add
mov
out
inc
clc
sarb
test
add
add
add
clc
stos
xor
add
data16
cmp
clc
jge
dec
iret
push
clc
fcmovbe
shrb
add
inc
add
ret
clc
je
add
sub
add
push
cmp
shr
xchg
mov
outsl
pushf
std
inc
clc
dec
push
xchg
fcmovnu
mov
stos
aaa
pop
clc
push
add
clc
xor
add
sbb
clc
stos
ret
sbb
cmp
lea
clc
bound
add
xor
add
add
add
mov
add
push
add
mov
clc
pop
or
into
mov
in
mov
in
inc
add
mov
add
nop
add
add
ja
pop
clc
lret
jmp
jmp
icebp
clc
sbb
shll
push
add
cmpsl
clc
fcoms
add
mov
leave
or
mov
clc
popf
and
add
xor
mov
inc
add
pop
sti
lock
clc
pop
es
mov
imul
clc
int3
jecxz
mov
call
loope
jmp
out
clc
pop
push
add
mov
add
fucom
clc
push
add
cmp
jnp
icebp
pop
mov
push
jmp
movsb
clc
mov
push
cld
mov
mov
mov
lahf
icebp
stos
cmp
clc
or
stos
gs
adc
add
clc
mov
js
clc
inc
add
std
add
add
add
test
cmp
fwait
clc
sub
jle
push
outsb
fucom
clc
mov
add
ret
aam
xchg
jbe
clc
or
add
mov
jae
add
push
mov
rcrb
gs
iret
int3
out
stos
clc
mov
clc
je
ss
clc
imul
jp
mov
loope
mov
pop
sub
addr16
fldcw
xor
add
cmp
jb
add
test
add
ss
fidivs
add
es
dec
sub
in
jl
add
mov
add
sti
mov
clc
mov
sti
inc
clc
or
dec
pushf
mov
jmp
shlb
add
dec
push
inc
add
sahf
pop
cmc
outsl
push
sar
add
cmp
push
jno
add
fimull
fs
loopne,pt
or
enter
imul
dec
xchg
in
pop
push
add
push
sbb
add
lret
outsl
daa
clc
jg
add
mov
add
xor
add
xbegin
mov
add
xabort
clc
add
add
push
test
jg
pop
push
pop
and
cmp
clc
fidivl
inc
add
rcrl
cmc
roll
add
add
clc
test
add
das
sub
mov
mov
xchg
movsl
clc
xor
add
cmp
fwait
outsb
sti
push
clc
sub
add
or
add
stc
or
sub
add
lahf
cltd
jno
add
add
clc
or
outsl
enter
add
push
bound
add
call
add
clc
sar
add
xchg
jnp
loope
insb
lods
inc
add
push
add
insl
add
add
mov
jg
add
fldln2
shlb
mov
xor
std
or
add
add
mov
mov
clc
dec
lea
fwait
push
shlb
add
push
xchg
hlt
fldl
cmp
add
jno
add
ss
fnstcw
push
xchg
mov
ljmp
clc
push
clc
stos
sub
add
add
push
nop
arpl
add
loop
and
add
or
add
or
dec
inc
clc
push
test
xor
clc
sahf
push
test
cmp
test
sar
lcall
test
add
add
ret
clc
cmp
clc
xchg
pusha
add
cmp
add
or
clc
test
dec
fidivs
add
repnz
ret
dec
nop
rcll
add
push
add
or
dec
sbb
lret
add
add
data16
sbb
sahf
mov
adc
add
in
ljmp
iret
fsubrs
add
jg
xchg
inc
clc
fnstsw
add
xchg
aam
push
inc
clc
xor
add
sub
clc
pusha
add
das
mov
clc
lcall
clc
dec
mulb
pop
addr16
arpl
add
mull
xor
outsl
cmp
test
nop
push
add
pop
xchg
rcrb
repnz
mov
add
mov
test
mov
clc
inc
clc
cli
ss
icebp
xabort
add
add
lods
dec
bound
add
lock
clc
xor
add
add
sub
add
pop
sahf
dec
fistps
fs
mov
clc
xchg
inc
clc
add
add
inc
clc
xchg
jo
add
insl
mov
cmp
mov
add
inc
add
jb
add
add
js
clc
mov
mov
dec
xlat
dec
and
add
sahf
and
add
xbegin
clc
pop
cmp
adc
add
aas
sbb
out
fnsave
insl
icebp
inc
clc
push
or
add
mov
es
adc
mov
clc
sub
sbb
jae
add
add
es
and
lret
into
inc
clc
adc
inc
add
out
or
js
jnp
add
insb
movsl
clc
dec
lahf
iret
xchg
gs
sti
and
mov
pushf
xor
add
push
out
inc
clc
shl
clc
push
add
mov
dec
clc
es
add
add
fwait
sbb
add
or
pop
mov
sub
add
or
dec
ja
clc
sbb
xor
and
add
add
add
data16
xchg
inc
add
xbegin
clc
push
fistps
jle
add
pop
sar
clc
pop
mov
xchg
cli
movsb
clc
fsubrp
inc
add
scas
mov
cmp
sub
clc
bound
add
ljmp
clc
xlat
sarb
add
clc
adc
clc
neg
xchg
call
clc
aad
mov
lahf
scas
fs
sbb
add
je
sbb
mov
clc
pop
nop
inc
clc
jnp
clc
clc
jbe
clc
push
add
addr16
shll
fldt
or
inc
add
mov
xor
add
out
nop
dec
adc
add
add
ret
clc
cmc
fisubs
clc
js
push
jno
add
cmp
aam
push
add
inc
add
int
clc
daa
clc
cmpsb
clc
aad
clc
cmp
add
fwait
das
mov
add
push
add
clc
mov
cmp
add
nop
sub
inc
clc
dec
hlt
dec
pop
inc
add
movsl
clc
push
clc
push
rcll
xor
hlt
cmp
sub
clc
xor
add
clc
jo
add
or
loopne
popa
add
jmp
clc
xbegin
cmp
push
gs
jmp
jb
add
add
clc
push
adc
add
mov
cmp
adc
add
test
in
arpl
add
lcall
lock
add
add
add
cmp
cmp
lock
add
add
add
xchg
enter
adc
add
mov
clc
pop
test
add
outsl
sub
add
cltd
inc
add
stc
or
add
clc
bound
add
add
add
or
or
mov
data16
dec
in
pop
push
clc
loopne
jle
clc
das
nop
dec
ja
addr16
xor
add
cmc
aam
clc
adc
add
push
add
or
daa
clc
out
pushf
inc
clc
flds
pop
lods
out
ljmp
data16
add
add
or
clc
add
add
and
jae
add
mov
adc
add
mov
adc
add
mov
outsb
insb
cmp
clc
dec
fistpll
xchg
or
jge
clc
jo
add
mov
pop
sbb
in
test
mov
clc
sbb
std
dec
pop
or
dec
mov
test
add
dec
in
in
lea
imul
clc
inc
clc
hlt
rolb
add
stc
lcall
out
loope
adc
add
add
cmp
pop
clc
xchg
aaa
mov
sub
clc
lods
adc
or
clc
lahf
ds
cmc
mov
or
add
sub
add
pop
fdivl
clc
in
lods
test
push
ja
clc
pop
clc
or
sar
xchg
dec
and
add
pop
popa
add
ja
clc
push
mov
and
add
ljmp
clc
into
jp
adc
add
in
inc
add
jne
dec
sub
pop
cli
mov
cmp
clc
sub
push
add
cmp
clc
push
add
mov
daa
clc
arpl
add
clc
loop
adc
add
clc
xor
add
lods
mov
xabort
clc
inc
clc
jbe
clc
ret
cmpsb
clc
sub
fstpl
fimuls
sub
pop
jg
xbegin
pop
jmp
add
jns
sub
sub
add
in
and
leave
push
clc
dec
adc
clc
outsb
cmp
mov
xchg
inc
add
inc
add
mov
mov
push
inc
add
sbb
clc
jo
add
add
mov
mov
popf
js
add
pop
mov
sub
inc
clc
scas
xchg
cs
mov
clc
add
dec
adc
add
jge
daa
clc
jno
add
mov
clc
pop
shll
fisttps
jle
or
add
clc
popf
add
add
add
data16
cmp
adc
add
ret
clc
lret
xchg
jb
add
imulb
clc
fsubrl
adc
add
clc
xchg
mov
ffree
clc
sub
daa
clc
ds
clc
and
add
add
clc
sub
add
dec
lret
arpl
add
ss
xor
add
fidivl
add
in
insb
out
pop
popa
add
add
add
pop
inc
add
fdivrs
clc
lret
rcr
and
clc
lcall
mov
xchg
push
mov
ret
clc
cmp
mov
gs
mov
xor
add
add
add
pop
clc
fsts
call
rcll
mov
clc
cmp
add
jno
add
je
fsubs
and
add
inc
add
pushf
fwait
and
add
lahf
and
add
sub
pop
sbb
ja
mov
add
and
add
push
clc
adc
clc
je
add
mov
clc
mov
add
add
push
cmpsb
clc
inc
add
test
jge
jae
add
cmp
xchg
push
add
or
mov
ret
clc
outsb
dec
push
test
mov
lret
arpl
add
add
jp
mov
icebp
and
add
add
gs
xchg
cli
insl
rcl
cwtl
adc
add
push
rcll
clc
xbegin
aam
pop
clc
and
mov
add
add
cmc
mov
inc
add
popa
add
jmp
sub
pop
in
fcoms
fs
test
add
or
clc
sbb
add
popf
clc
loope
shl
clc
std
cs
mov
or
jmp
cmpsl
clc
ficoms
add
in
in
fistpll
inc
clc
test
cmp
or
add
and
add
add
adc
add
repz
add
cmp
fcmovb
clc
push
clc
and
clc
cld
xor
mov
add
add
stos
sar
clc
cmp
mov
ret
clc
test
add
sbb
push
ffree
clc
sub
inc
clc
cmp
jmp
cmp
cwtl
pop
aas
mov
inc
add
in
push
add
jmp
add
push
add
es
mov
lahf
adc
add
mov
add
pushf
jne
clc
mov
call
dec
pop
mov
clc
pop
clc
add
add
add
mov
pop
sar
and
add
clc
push
lcall
fildl
add
pop
or
push
xor
add
or
pusha
add
cmp
pop
mov
clc
sub
test
add
add
clc
mov
add
push
ret
clc
push
push
dec
ja
rorl
mov
add
sar
add
stos
jmp
clc
int3
push
mov
add
test
cmp
xchg
add
add
xchg
mov
add
clc
and
fidivs
add
mov
clc
cwtl
dec
or
add
cmp
std
push
jne
movsl
clc
or
push
push
clc
loope
cmp
nop
enter
jg
adc
add
mov
sbb
cmp
jecxz
fstps
bound
add
clc
pop
fiaddl
fldl2e
stos
mov
mov
jge
shrl
clc
sar
and
add
add
clc
dec
int
adc
add
add
popf
mov
pop
sbb
add
clc
mov
ja
insl
fdivrs
js
adc
add
insl
shl
mov
jl
clc
sbb
mov
add
gs
aaa
cmp
add
clc
cmp
mov
add
pop
jp
mov
imul
stc
add
xlat
test
pop
dec
or
mov
repz
add
lock
clc
sbb
push
xchg
sub
or
sub
clc
xchg
fsts
sbb
jnp
mov
cmpsb
clc
fidivrs
ret
fs
push
or
jnp
or
scas
div
sub
insb
in
cmp
add
stc
mov
cmp
or
add
add
add
adc
add
lods
insl
push
mov
setnp
inc
add
shlb
sub
sub
dec
aaa
fistpl
add
test
push
clc
inc
add
int3
or
or
clc
cmp
clc
adc
add
lea
add
ja
clc
imul
mov
repz
add
add
add
clc
inc
clc
popa
add
insb
fmulp
out
shll
add
dec
out
jmp
add
cmp
cmp
add
sar
mov
add
mov
aaa
pop
lods
mov
repz
push
loop
iret
sub
add
add
clc
push
stos
push
and
add
cmp
sub
sbb
out
sub
cmp
mov
xchg
inc
clc
mov
add
loopne
lret
mov
push
inc
add
leave
jb
add
test
sahf
xor
add
mov
ljmp
add
add
mov
add
add
repz
jne
clc
in
nop
mov
xlat
sbb
add
insl
ljmp
das
and
add
clc
push
clc
call
add
mov
jecxz
loopne
imul
mov
out
pop
sahf
clc
sub
inc
clc
push
int
xor
add
add
sti
mov
clc
out
scas
fs
mov
testl
sub
int
sbb
add
fucom
clc
mov
call
pop
mov
in
bnd
add
push
clc
mov
or
jo
add
add
add
mov
clc
add
add
gs
xchg
pop
stc
jp
hlt
je
sar
add
cmp
push
aam
rorb
jae
add
clc
popf
cmp
add
imul
lret
add
cmp
dec
lods
push
add
jo
add
lock
jnp
mov
sbb
sar
clc
lret
add
jmp
outsl
pop
insl
out
int3
call
nop
cmc
xor
add
stos
ja
and
add
rolb
add
sbb
pop
jnp
pop
clc
adc
push
jnp
add
push
add
ds
iret
mov
jb
add
loope
mov
add
push
pop
cwtl
ja
outsl
iret
lods
leave
gs
in
and
inc
add
scas
push
dec
push
add
shlb
clc
aad
push
std
ds
fdivrl
xor
add
fsubrl
clc
jmp
lods
mov
inc
add
inc
add
or
sbb
out
out
xchg
or
add
test
mov
xor
imul
sar
mov
lret
clc
pushf
arpl
add
clc
ss
popa
add
sar
pop
out
push
repz
fs
iret
mov
clc
clc
pop
xor
add
and
add
add
push
add
lret
xor
add
sbb
clc
hlt
sub
push
and
add
ja
add
mov
repnz
clc
adc
sar
mov
scas
mov
jae
add
clc
push
test
add
add
cmp
movsl
clc
lret
icebp
dec
outsb
cmp
testl
addr16
lods
dec
pop
xor
add
out
jno
add
movsl
clc
cld
sti
and
add
inc
add
lahf
dec
lcall
xor
add
jmp
add
add
cmpsl
clc
cltd
or
add
add
fdivrl
add
and
inc
add
mov
add
mov
fs
push
clc
in
imul
ds
clc
pusha
add
or
add
add
mov
out
gs
add
dec
mov
mov
clc
jmp
in
test
ja,pn
sbb
mov
add
clc
jle
mov
add
outsb
jp
mov
pop
dec
ds
mov
shufps
adc
add
sbb
mov
clc
mov
xchg
clc
xor
add
add
add
clc
jo
add
f2xm1
gs
cmp
add
out
scas
xor
add
clc
xlat
lock
in
lods
mov
inc
clc
mov
add
xchg
and
add
inc
add
repz
clc
dec
dec
mov
pop
lret
add
mov
out
mov
loop
cmp
xlat
inc
clc
paddb
clc
sub
outsl
ljmp
add
and
add
mov
add
leave
jp
aaa
xlat
push
and
rcl
cmp
clc
js
jb
add
in
xlat
js
cmp
jne
fcoml
test
clc
pop
loop
push
add
clc
inc
add
fsubl
add
xchg
cwtl
adc
add
jb
add
lahf
hlt
fs
jmp
add
add
clc
int3
xbegin
cmp
sbb
add
clc
add
mov
dec
test
xchg
xabort
clc
cmp
arpl
add
clc
ljmp
outsb
js
out
or
inc
clc
push
addr16
push
add
cmp
add
xchg
jp
cwtl
xor
shrb
sub
or
clc
aas
data16
imul
xchg
jmp
cmp
add
add
add
clc
xor
add
add
pop
push
popf
daa
clc
mov
fstl
bound
add
aam
adc
add
clc
es
push
lea
xchg
sbb
mov
mov
clc
mov
clc
cmp
add
fiaddl
jbe
push
clc
and
leave
or
data16
clc
lea
add
or
mov
in
int3
mov
fcomps
mov
cmpsl
clc
pop
fimuls
je
jb
add
add
clc
mov
or
push
add
hlt
scas
je
mov
push
add
mov
sbb
add
add
or
add
jecxz
xchg
aad
test
add
int3
je
dec
xchg
ret
xchg
mov
sar
sbb
add
add
insl
jle
or
pop
push
xchg
scas
fcompl
jnp
fwait
add
dec
inc
clc
xchg
add
add
sbb
fidivrs
test
add
push
xbegin
pop
pop
or
add
dec
xchg
push
push
sbb
aaa
gs
notl
clc
pop
pushf
ja
clc
add
jecxz
iret
cwtl
mov
hlt
jae
add
add
cmp
mov
push
add
push
add
and
pop
clc
lock
add
add
push
sbb
xchg
sbb
mov
add
insb
lcall
pushf
scas
lods
mov
stos
std
sbb
clc
cs
lock
mov
add
add
insl
mov
clc
rclb
add
in
pop
mov
in
sbb
sar
jle
add
jl
ret
push
add
mov
or
clc
jle
cmp
es
rcl
jae
add
dec
adc
add
add
cs
pop
clc
repnz
inc
add
mov
add
add
cmpsl
clc
jge
clc
pop
aas
ss
clc
leave
insb
adc
add
es
mov
lea
add
rorl
sub
clc
xchg
bound
add
jo
add
add
sar
clc
sbb
add
pop
faddl
clc
mov
fists
lods
enter
xchg
sub
clc
movsb
clc
xbegin
lods
imul
out
push
nop
push
mov
pop
sar
add
into
sti
cmc
and
in
out
sub
add
insl
jno
add
repnz
or
clc
mov
clc
mov
add
sub
mov
add
mov
ret
out
inc
clc
clc
sar
insl
dec
and
add
movsl
clc
movsb
clc
outsl
icebp
lods
sub
sahf
and
push
imul
shl
push
lret
jns
mov
xchg
scas
cmp
cmp
fstl
clc
ret
clc
push
push
clc
popa
add
mov
faddp
clc
inc
add
das
add
add
add
out
scas
pop
testl
popa
add
cld
push
add
adc
add
clc
adc
add
loopne
popf
outsb
mov
clc
cmp
clc
pop
cmc
arpl
add
add
add
add
mov
insb
lret
out
cld
and
add
negl
add
xabort
imul
clc
test
mov
into
cltd
mov
clc
xchg
and
add
add
add
clc
xor
add
mov
add
mov
outsl
or
cltd
inc
add
mov
clc
cmpsb
clc
xor
add
add
add
test
sar
gs
pop
cmpsb
clc
push
pop
sbb
xchg
jg
bound
add
inc
add
mov
add
je
jg
clc
cmp
add
sbb
clc
cs
in
fnstenv
ret
clc
push
pop
xbegin
out
pop
mov
mov
clc
not
push
jne
push
sbb
aas
push
jo
add
loopne
pop
popl
rclb
add
ljmp
push
cmpsb
clc
pop
fnsave
vdivps
adc
mov
lret
inc
clc
mov
clc
psubq
add
add
aas
push
adc
add
add
xchg
into
sub
or
add
add
test
clc
jne
mov
pop
scas
in
lcall
cmp
xor
sarb
mov
or
mov
filds
add
mov
testl
mov
xor
add
ss
add
jmp
adc
dec
repz
inc
clc
cmp
clc
cmc
mov
or
xchg
test
iret
mov
xor
add
clc
push
add
xlat
ds
add
shll
loop
cli
dec
sub
clc
cs
sti
mov
adc
add
pop
idivb
mov
cmp
add
dec
imul
jbe
lret
popf
jns
int3
sar
clc
das
sub
add
jo
add
enter
push
daa
clc
mov
cmp
add
in
movsl
clc
out
pop
sbb
cmpsb
clc
imul
add
pop
sub
sbb
lock
mov
rolb
clc
fmul
cmp
fs
in
xor
add
add
jne
add
xchg
xbegin
add
xor
add
xchg
ss
xor
add
xor
add
dec
movlhps
clc
gs
out
iret
inc
clc
mov
or
add
out
push
es
jbe
clc
fisubl
add
add
dec
xchg
test
out
pop
xbegin
add
mov
mov
jle
clc
add
add
add
add
jns
stos
add
add
inc
add
inc
add
stos
mov
add
xchg
jl
clc
jnp
scas
inc
add
cmp
add
jmp
daa
clc
xchg
fstpt
or
fcmove
gs
and
add
hlt
test
adc
add
add
dec
mov
mov
mov
adc
add
jmp
shrb
int3
mov
add
add
add
push
add
repz
mov
add
mov
sbb
lahf
sbb
clc
jl
lret
test
cmp
dec
loopne
cmc
xchg
test
adc
rclb
dec
cmp
js
pusha
add
dec
pop
pusha
add
xchg
iret
xchg
das
xlat
jge
add
and
mov
mov
add
sahf
jle
clc
stos
mov
sbb
clc
insb
lods
cmp
push
add
mov
sti
sub
into
call
and
add
add
call
ja
clc
xor
add
aad
clc
cmp
cwtl
jae
add
cmp
sub
out
sbb
pushf
xchg
xchg
jg
add
dec
sahf
sub
lcall
jo
add
add
add
lock
test
stos
xor
imul
add
clc
adc
add
add
jno
add
clc
sete
clc
insb
icebp
xchg
dec
cmp
pop
cmp
push
push
add
sar
mov
dec
into
jmp
add
shrl
test
shll
sbb
clc
pop
sbb
clc
inc
add
fnstcw
int
add
inc
clc
push
mov
sub
clc
xchg
cltd
stc
dec
add
add
fiaddl
mov
clc
cli
cli
movsl
clc
daa
clc
jecxz
mov
add
sub
mov
clc
loop
ret
divb
add
push
arpl
add
add
add
push
add
adc
add
ret
clc
fistps
clc
jo
add
add
icebp
jae
add
xchg
cwtl
das
insb
mov
add
idiv
dec
pushf
mov
in
inc
clc
fadd
clc
push
clc
push
aad
add
popf
push
gs
ds
das
popa
add
jge
add
pop
insl
mov
push
ret
clc
add
adc
add
and
add
mov
imul
cmp
aad
clc
mov
clc
sarb
in
mov
cmp
clc
scas
ret
clc
add
gs
sarb
clc
push
add
jne
clc
gs
aaa
mov
adc
add
clc
cmp
sbb
add
add
aaa
cwtl
loopne
push
iret
in
adc
add
xchg
sub
into
ljmp
clc
fs
fcomip
cmp
add
mov
cmp
add
add
add
jno
add
cmp
mov
stos
xchg
jl
adc
add
add
mov
add
fs
lock
cmpsl
clc
ja
sub
xchg
sub
push
add
test
clc
lock
dec
cli
mov
inc
add
out
pop
scas
insl
add
cmp
clc
push
clc
sbb
jle
insl
in
scas
mov
and
clc
hlt
sbb
out
dec
mov
cmp
fstpl
mov
or
ljmp
xbegin
xor
add
push
add
add
clc
push
js
scas
insl
stos
adc
add
sahf
addr16
movsb
clc
pop
clc
movsb
clc
frstor
add
fcmovbe
adc
add
dec
mov
add
add
into
loop
xor
js
and
add
fs
jmp
clc
cmp
add
add
add
clc
cmc
cmp
push
cs
inc
add
mov
ret
clc
inc
clc
sub
mov
clc
mov
clc
mov
ljmp
mov
clc
push
add
and
add
test
nop
imul
sbb
sub
clc
ss
mov
insb
cmpsb
clc
popf
mov
add
add
pop
lret
pushf
mov
mov
lret
mov
repnz
add
mov
clc
jmp
popa
add
and
add
add
clc
jnp
clc
js
xchg
xor
ret
clc
xchg
xchg
clc
and
add
xchg
cmp
leave
xchg
leave
popa
add
or
mov
cld
cltd
je
pop
nop
pusha
add
es
ss
add
inc
clc
mov
add
ret
add
movsb
clc
lahf
shl
clc
and
add
add
into
fwait
repz
add
test
jo
add
out
stos
fiadds
add
push
pop
arpl
add
clc
in
imul
mov
and
add
pop
lods
mov
add
jl
add
add
add
cmc
xchg
cmp
mov
sub
cmp
mov
lock
out
shl
clc
mov
add
loope
loop
push
clc
insb
aad
adc
add
add
cmc
sbb
add
cmp
or
push
add
cmovg
add
add
mov
push
xor
add
mov
psubsb
or
jg
add
testl
xchg
sbb
fsubr
mov
add
cmp
test
push
pminsw
ss
fistpl
add
add
push
cmp
push
pusha
add
mov
push
sar
add
add
add
adc
add
adc
add
sub
push
inc
add
xchg
ljmp
stos
pop
in
mov
pusha
add
adc
add
inc
clc
cmp
repnz
cmpsl
clc
xchg
push
je
clc
jge
dec
es
sub
add
add
ljmp
clc
xchg
xor
xchg
and
add
mov
insl
mov
push
dec
sbb
sti
in
cmpsb
clc
pop
das
push
mov
mov
add
loopne
mov
clc
inc
add
push
clc
inc
clc
leave
dec
loop
add
add
add
jg
mov
push
add
sub
or
xchg
and
aam
idivb
add
dec
mov
clc
imul
add
inc
add
adc
clc
loope
mov
add
clc
xor
add
inc
clc
ret
cmp
mov
lods
sub
add
add
mov
clc
ret
clc
cwtl
inc
clc
sbb
fnstenv
fisubl
stos
scas
jmp
clc
into
xor
add
or
adc
add
add
aaa
add
add
movsb
clc
mov
repnz
and
add
inc
add
sub
add
add
add
test
clc
pop
xchg
add
add
clc
mov
add
add
cmc
and
jnp
adc
add
ret
clc
out
mov
or
gs
adc
add
mov
popf
lock
sub
clc
data16
jl
clc
fildl
ret
clc
bound
add
clc
xchg
cmp
add
dec
mov
add
movsl
clc
outsb
movsb
clc
xchg
fistpll
pop
clc
cs
iret
pop
pop
icebp
cmpsb
clc
or
and
add
add
dec
jge
sub
and
fwait
xor
sub
clc
stos
cld
stos
dec
scas
cmpsl
clc
nop
adc
mull
popf
push
pop
clc
xor
add
flds
clc
push
add
sar
popa
add
and
testb
inc
clc
int
add
cmpsb
clc
imul
add
adc
pop
fimull
sbb
cmp
and
cmp
mov
add
add
inc
add
clc
mov
add
add
add
clc
xchg
out
xor
add
xchg
push
xchg
lret
test
clc
fstpt
xchg
std
dec
aam
ss
inc
clc
xlat
leave
arpl
add
jo
add
clc
jns
aad
xchg
and
xor
add
clc
xchg
mov
add
addr16
movsl
clc
mov
popa
add
inc
clc
out
sub
add
mov
add
repz
clc
jnp
clc
mov
clc
clc
inc
add
mov
add
jmp
ret
cmp
nop
mov
negb
addr16
rep
pop
clc
mov
add
mov
add
pop
mov
push
add
aam
mov
test
inc
clc
push
add
inc
clc
mov
add
scas
arpl
add
add
mov
fidivs
add
or
add
xor
add
test
ja
xchg
stc
or
clc
or
ss
pusha
add
out
es
xlat
imul
xor
add
fcoml
add
clc
push
jl
jge
push
sub
clc
lret
rcrb
ss
mov
xabort
insb
gs
shll
clc
add
add
add
inc
add
ret
mov
push
add
adc
add
and
add
sbb
jns
add
mov
add
lods
rorb
mov
add
push
adc
shl
jo
add
adc
add
xchg
cs
dec
in
mov
mov
clc
pop
push
fstl
clc
cld
int
clc
lods
mov
movsb
clc
mov
jb
add
add
mov
add
lods
push
add
clc
xbegin
add
and
xchg
negl
mov
add
pusha
add
out
and
add
jp
xchg
addr16
mov
inc
clc
mov
sub
out
pop
xlat
std
push
notl
int3
ss
clc
jle
sar
add
push
add
jb
add
inc
add
clc
jbe
clc
jo
add
clc
loop
test
clc
popa
add
insb
insl
imul
and
add
xchg
add
das
inc
add
mov
into
cmp
add
pop
fmuls
scas
cmp
push
sar
push
add
or
stos
mov
mov
add
outsb
sub
mov
dec
call
dec
dec
push
mov
jnp
mov
test
testb
dec
aas
cmp
js
lgs
mov
clc
in
out
jmp
mov
clc
cltd
mull
mov
add
add
lahf
mov
clc
fdivr
push
dec
into
jno
add
sarl
clc
sbb
pop
arpl
add
add
pushf
or
imul
xor
add
cmp
inc
clc
mov
ds
iret
sub
cmp
pop
daa
clc
xbegin
popa
add
shrl
loope
je
xor
add
call
xchg
add
add
test
xchg
xchg
mov
pusha
add
push
addr16
xchg
in
jp
clc
imul
push
push
pop
adc
add
sbb
sar
cs
add
cmp
dec
or
and
add
popa
add
adc
in
push
add
jns
pop
xor
add
in
sub
add
mov
clc
in
inc
add
loopne
mov
add
add
sti
aaa
imul
adc
add
mov
mov
jns
add
dec
nop
jnp
mov
aad
add
jp
or
clc
rcll
add
ficoms
add
xor
add
cs
je
xlat
inc
add
aas
std
and
inc
add
push
testb
aas
jno
add
add
mov
scas
mov
insb
hlt
sar
fcoms
add
jo
add
xor
push
test
add
pop
push
or
cltd
pop
js
clc
xlat
lret
and
add
fucom
clc
clc
sahf
push
cmp
addr16
jmp
add
cmp
jg
clc
aad
lahf
clc
in
jmp
add
add
stc
imul
add
sbb
clc
adc
add
clc
xchg
mov
add
stc
jecxz
add
add
push
add
cmp
aam
add
out
push
and
or
nop
pop
sbb
jnp
mov
inc
clc
inc
add
inc
add
movsb
clc
add
lea
pop
push
or
clc
mov
add
mov
cmp
push
add
into
or
inc
clc
fsub
clc
push
add
out
xchg
jle
clc
sbb
call
jb
add
add
jmp
clc
add
add
push
add
xchg
add
ret
clc
icebp
cmp
leave
rcr
aas
xchg
or
add
add
jecxz
arpl
add
call
clc
into
lret
cmp
add
jp
shrd
addr16
and
add
clc
jl
xchg
into
test
jnp
loope
push
sar
push
sub
and
sar
or
clc
mov
ja
fs
pop
adc
pop
clc
int3
jnp
clc
lock
clc
mov
movsl
clc
push
add
lea
and
add
pop
mov
stos
dec
jmp
clc
insb
sar
fistpll
clc
fs
mov
sub
mov
clc
push
mov
outsb
cmp
xchg
hlt
jmp
jl
pop
pop
pop
mov
enter
clc
stc
inc
clc
jno
add
add
outsb
fildl
mov
clc
cld
xchg
lret
psubsb
call
add
adc
add
dec
xchg
testl
mov
into
pop
xchg
jge
idivl
cmp
add
add
inc
add
mov
clc
aaa
cmp
clc
addr16
sbb
inc
add
sbb
int3
xor
add
lea
gs
scas
sub
aaa
sar
add
jge
clc
fisubrs
pushf
vmovlps
add
or
add
xchg
rcr
clc
ret
add
jbe
cmp
inc
clc
loope
sti
cld
sbb
inc
add
pop
test
add
lock
add
xor
add
add
dec
rol
clc
popf
aam
sub
clc
lret
mov
or
add
mov
sub
xor
add
fs
imul
aad
cld
pusha
add
enter
push
xor
scas
pop
pop
clc
pop
mov
add
cmpsl
clc
pop
pop
mov
mov
ljmp
lock
cmp
mov
inc
clc
jge
or
add
xabort
sub
std
add
add
add
adc
add
in
jbe
add
push
in
out
fsubs
clc
xbegin
add
mov
clc
fnstsw
das
out
jg
clc
sbb
rol
clc
sub
add
add
repnz
inc
add
cs
add
sahf
push
clc
xchg
adc
xlat
and
xor
jmp
add
popa
add
repz
cmp
pop
cmp
cmp
in
out
in
test
cmp
imul
clc
cmp
clc
jne
push
pop
ja
sbb
call
add
cmp
or
lcall
popf
sub
add
cmp
clc
out
loope
vzeroupper
test
mov
add
push
dec
rcr
sbb
lock
test
out
lahf
xor
xchg
int
repz
clc
push
repz
sti
inc
add
or
rcll
add
in
mov
ljmp
push
iret
sbb
xor
mov
clc
mov
loop
push
pop
clc
insl
pop
or
clc
inc
clc
xchg
add
xor
clc
push
add
stos
inc
add
testb
clc
icebp
sbb
clc
add
add
stos
mov
add
das
add
add
push
sub
sub
add
cmp
cmp
clc
and
add
add
clc
sub
ljmp
ror
pop
pop
imul
fs
sub
out
and
dec
add
add
mov
add
sbb
xchg
jmp
add
and
mov
cmp
cmp
fwait
and
add
add
sar
jae
add
add
add
add
add
pop
je
cli
daa
clc
or
add
xchg
mov
hlt
add
xchg
ljmp
cwtl
adc
aaa
je
clc
shlb
sub
add
jecxz,pt
clc
nop
sar
clc
mov
add
add
gs
and
add
clc
sub
xor
add
add
movsl
clc
mov
push
dec
jecxz
xor
add
add
and
add
add
out
out
ret
add
pop
inc
add
add
add
int3
push
clc
and
add
add
daa
clc
add
add
dec
xchg
sbb
and
add
inc
add
sbb
jge
add
out
xor
add
jge
mov
add
xlat
mov
sti
loope
in
mov
add
clc
push
clc
mov
rclb
clc
iret
xchg
call
js
push
add
js
add
inc
clc
sar
mov
lcall
add
stos
das
test
mov
clc
jae
add
pop
cmp
addr16
mov
mov
or
fwait
cwtl
jecxz
and
add
inc
add
fldenv
clc
pop
clc
xor
add
mov
data16
sar
clc
pop
inc
clc
mov
push
mov
mov
mov
xor
add
push
adc
add
add
clc
pop
clc
out
rorl
cmc
xchg
mov
sbb
fstpt
sub
popl
add
bound
add
push
imul
add
add
cwtl
ss
or
add
add
mov
xor
add
leave
cwtl
and
add
add
add
adc
fisubl
clc
xor
add
clc
adc
add
cwtl
mov
pusha
add
pop
jno
add
testb
repz
add
xor
add
ljmp
clc
jns
add
nop
sbb
add
clc
xor
add
popf
aam
gs
pop
imul
add
jno
add
clc
call
movlps
add
sbb
add
fidivrl
lret
dec
enter
jge
test
lods
in
jle
clc
rorl
arpl
add
add
popa
add
pop
iret
aad
cmc
cmp
popf
sub
clc
add
add
scas
pop
push
add
pop
leave
jmp
dec
cmp
add
inc
clc
cmp
clc
stc
addr16
dec
adc
add
ds
xchg
outsl
or
mov
scas
add
add
pop
inc
clc
loopne
xchg
mov
xlat
out
jge
out
cmpsb
clc
fmul
int
das
mov
clc
inc
clc
jae
add
aas
inc
add
cmp
mov
out
add
add
jo
add
push
xchg
and
add
add
add
test
xchg
insb
enter
clc
loope
outsl
or
inc
clc
hlt
inc
clc
sub
push
add
rorl
and
leave
xchg
sarl
pop
cs
std
cmp
clc
xabort
or
cmp
clc
cli
jmp
iret
pop
cmp
clc
and
add
clc
xor
icebp
ficomps
xchg
cmpsl
clc
mov
add
mov
leave
xabort
test
imul
add
repz
add
add
xor
add
add
add
clc
into
shlb
shrb
pop
ret
clc
in
enter
enter
add
aas
dec
pop
cmp
scas
mov
cmp
add
pop
mov
clc
push
add
cmp
cmp
mov
add
sbb
cmpsb
clc
std
sti
xchg
ds
xor
add
out
xor
add
clc
mov
add
mov
stc
cmp
push
sub
clc
push
pop
pushl
cmp
add
sbb
lods
leave
xchg
fs
lcall
add
fsubp
clc
cmp
cmp
and
add
clc
xlat
clc
imul
add
lods
fs
push
mov
inc
add
jae
add
sub
clc
cmp
dec
je
ret
cmpsb
clc
cmpsb
clc
pushf
daa
clc
addr16
push
shlb
sub
js
clc
jmp
in
in
repnz
cmpsb
clc
adc
add
add
test
add
call
clc
dec
pop
cwtl
pushl
add
cmp
cmp
dec
xchg
jmp
pop
clc
into
xor
add
clc
test
adc
add
push
add
sub
clc
mov
mov
fcmovne
lock
clc
imul
add
jle
cmp
add
pop
cli
sub
add
inc
clc
fnsave
add
dec
test
rorl
clc
or
add
bound
add
jbe
or
add
add
add
sbb
cli
cwtl
mov
add
add
cmc
jge
mov
sbb
in
cmp
add
cld
sub
sub
mov
clc
push
mov
clc
mov
add
dec
fmuls
and
xchg
push
add
add
add
pop
clc
fs
mov
ja
dec
stos
and
add
add
rcl
cmp
mov
add
test
xor
add
xor
add
mov
clc
sub
arpl
add
jle
mov
or
push
add
pop
clc
add
add
shl
clc
dec
jp
mov
mov
clc
in
cmp
repz
clc
inc
add
stos
in
dec
jle
ret
gs
mov
add
push
mov
xor
add
add
idivb
sahf
cmp
add
pop
and
sbb
mov
pop
mov
add
dec
aad
clc
push
add
sar
clc
mov
clc
xchg
nop
int
clc
scas
cmp
cmp
jo
add
lret
add
mov
xor
lea
add
mov
add
clc
xchg
xchg
add
add
aas
dec
mov
and
adc
add
add
add
add
xbegin
imul
icebp
insb
scas
mov
clc
xor
add
sbb
xchg
and
add
clc
jg
mov
pop
repnz
clc
sar
shl
cmp
inc
clc
xor
xchg
xor
add
mov
jb
add
sbb
push
add
or
pop
xchg
mov
sub
jle
clc
add
add
int
roll
scas
xor
add
cli
pushf
xor
mov
add
pop
sti
outsb
shrl
and
jp
and
xor
add
ss
mov
mov
cmp
add
daa
clc
mov
daa
clc
dec
sbb
cmp
leave
jns
clc
in
lods
out
mov
clc
inc
add
sbb
arpl
add
imul
inc
clc
cs
clc
add
add
lcall
clc
adc
clc
insb
mov
adc
enter
push
clc
outsl
xchg
rorl
dec
add
add
adc
add
jo
add
mov
push
pop
test
dec
pop
xor
add
addr16
stos
cmp
clc
pop
aam
into
pop
cs
mov
std
xchg
mov
adc
add
clc
std
movsb
clc
test
xor
add
add
adc
add
push
fcmovnbe
out
inc
clc
aas
jae
add
add
frstor
clc
cmp
cmp
sbb
mov
clc
pop
mov
clc
push
add
inc
add
pop
dec
cld
leave
or
pop
test
lahf
in
adc
add
cmp
add
push
shlb
add
fcoms
add
out
icebp
icebp
and
add
add
jecxz
adc
add
add
push
cmp
xor
add
nop
inc
add
mov
clc
cmp
cld
sbb
and
mov
out
mov
inc
clc
push
dec
mov
jne
cmp
clc
out
dec
cmp
scas
xchg
xor
add
add
test
fnstenv
repz
clc
jp
pop
pop
clc
scas
or
and
add
iret
cmp
add
leave
xabort
xor
mov
jne
inc
clc
mov
add
pop
xbegin
add
bound
add
fxch
xor
add
fs
inc
add
sub
jbe
clc
add
add
add
ffreep
clc
cmp
clc
add
add
add
insb
outsb
or
cmpsl
clc
jp
clc
fists
xbegin
test
pshufw
enter
nop
or
add
lahf
iret
pop
cmpsb
clc
test
dec
adc
sbb
insl
rorl
or
pop
in
ret
clc
stos
xchg
xchg
jo
add
clc
mov
test
clc
xchg
add
add
clc
adc
push
lods
mov
push
mov
sbb
add
in
pusha
add
in
cmpsl
clc
into
xor
mov
add
and
add
outsl
mov
mov
jmp
xchg
aam
pushf
rorl
jge
ret
clc
fstpl
ss
pop
cmc
fcomps
xor
add
out
outsb
push
add
cmp
xor
add
lea
add
sahf
xchg
and
add
add
xchg
push
inc
clc
repz
clc
inc
add
in
into
push
clc
arpl
add
sarb
ja
dec
xchg
lret
sar
xlat
adc
add
inc
clc
mov
pop
jno
add
fsubrl
inc
add
or
push
repz
clc
lods
int3
mov
add
fwait
sub
dec
cwtl
out
push
add
and
or
pop
int3
out
lea
fwait
push
lods
fdecstp
imul
cmp
add
cmpsb
clc
add
add
insl
cmp
clc
out
cmp
push
sahf
popa
add
jg
cld
scas
mov
add
clc
mov
clc
test
add
clc
in
dec
pop
cmp
push
dec
icebp
add
add
or
add
cmp
ja
xlat
jg
push
add
pop
clc
es
pop
aam
loop
adc
add
add
adc
loope
out
mov
xor
mov
sub
jle
adc
add
cs
dec
push
add
sbb
clc
sub
int
add
bound
add
add
cmp
add
in
repnz
clc
push
jle
cltd
inc
add
iret
and
add
clc
fwait
outsb
add
add
clc
lods
loope
pop
cmp
or
mov
adc
add
clc
push
push
outsl
or
clc
inc
clc
or
clc
ja
sub
dec
sbb
add
outsb
fcmovne
cmp
int
ret
clc
int3
push
or
add
scas
jns
in
mov
inc
add
test
jmp
movsb
clc
xor
clc
adc
add
lods
push
jl
stos
mov
inc
clc
sub
outsb
iret
in
xchg
fnstenv
add
jmp
scas
pop
xor
add
das
clc
bound
add
aam
mov
test
xchg
and
mov
clc
cmpsb
clc
sar
adc
add
clc
xor
add
clc
imull
add
push
xor
add
add
cmp
clc
mov
cmc
or
add
sub
cli
into
test
popa
add
out
stos
and
mov
cmp
mov
mov
je
mov
fs
out
jno
add
pop
sti
mov
in
pop
sbb
cs
xchg
jmp
add
dec
push
shl
clc
mov
add
scas
leave
cmc
fwait
movsb
clc
loopne
fcmovnbe
and
dec
push
add
repz
ss
sbb
clc
jno
add
clc
test
adc
add
add
pop
stc
or
cmp
clc
cmpsb
clc
inc
clc
jne
xchg
stc
xor
and
es
sbb
sub
dec
jns
mov
ror
sar
clc
clc
push
cltd
outsb
sub
outsl
fsubp
clc
xor
mov
mov
inc
clc
rcl
adc
push
jecxz
xor
mov
out
cmp
mov
add
pop
inc
clc
and
add
add
in
movsb
clc
push
add
out
lret
test
push
add
mov
call
das
mov
xchg
mov
fsts
push
add
data16
jle
add
adc
add
cmp
pop
cmpsl
clc
mov
add
xabort
sti
xchg
lret
clc
push
test
mov
pop
adc
add
in
push
clc
jmp
xchg
jb
add
or
and
js
add
sar
gs
pop
or
cwtl
je
dec
aam
sub
clc
out
push
add
push
add
jl
add
inc
clc
inc
add
jno
add
add
adc
add
add
clc
insl
mov
add
cmpsb
clc
inc
clc
pop
mov
add
bound
add
add
xchg
out
xchg
ds
sbb
out
ret
mov
pop
xchg
push
mov
xor
clc
ret
add
and
add
add
je
mov
enter
add
loope
jbe
or
aad
stos
cmp
jp
add
out
and
push
jb
add
loop
imull
add
add
add
add
fisttpll
xchg
xor
add
add
pop
iret
pop
pop
test
loopne
aas
mov
clc
xchg
sub
test
rol
clc
push
loop
jae
add
jecxz
loopne
in
rorb
shll
add
add
mov
jb
add
clc
jno
add
clc
add
cmp
sbb
fwait
rol
clc
pop
lods
addr16
cmc
adc
add
sar
pop
clc
dec
mov
inc
add
leave
adc
into
cmc
push
clc
mov
daa
clc
jecxz
and
cmc
stos
jle
cmp
aaa
pop
ffreep
clc
mov
cmp
clc
pushf
or
adc
add
popa
add
xchg
cmc
jae
add
add
push
add
xor
add
add
lods
call
pop
adc
sub
add
adc
add
aas
popa
add
test
xchg
jmp
dec
and
add
add
pusha
add
dec
sahf
xchg
addr16
es
xor
inc
add
mov
add
jb
add
ret
clc
test
adc
add
adc
add
imul
add
add
add
lods
stc
fnstcw
cmp
pop
inc
add
mov
arpl
add
or
add
xor
add
clc
mov
add
lock
clc
jne
xbegin
add
jl
mov
xor
add
pushf
sar
mov
cld
inc
clc
fwait
cs
iret
sub
clc
jle
xor
xor
mov
push
sub
divb
sub
xor
add
pop
push
jg
or
add
add
imul
repnz
add
add
add
dec
mov
cmp
jmp
xchg
out
pop
lret
add
test
push
inc
add
out
stc
dec
sub
clc
and
add
jl
add
pop
rcr
jns
pushf
cs
iret
hlt
add
add
ret
inc
add
sub
clc
push
arpl
add
clc
mov
and
pop
out
ja
int3
jmp
sub
xchg
popf
mov
clc
outsl
clc
mov
jp
loopne
jno
add
clc
mov
cmp
sar
clc
xchg
dec
loope
mov
imul
or
jbe
xor
das
mov
push
jno
add
mov
sbb
sub
add
std
repz
sub
rorl
add
mov
daa
clc
mov
js
int
test
jae
add
add
sbb
jg
clc
in
dec
cmp
clc
nop
mov
add
add
fcompl
jecxz
push
cmp
or
sbb
or
clc
ljmp
push
add
clc
out
out
scas
rcr
cmpsl
clc
data16
fsubr
xabort
mov
and
dec
xor
add
pushf
mov
add
mov
add
add
int3
data16
jbe
mov
push
xbegin
push
add
gs
xchg
mov
lods
jg
add
sar
sti
inc
clc
lods
push
add
jo
add
add
fucom
clc
push
sub
fcomp
cld
outsl
mov
clc
cmc
xor
clc
pop
call
mov
push
add
aam
clc
xchg
sub
and
add
add
jp
cwtl
insl
lahf
out
jecxz
or
add
enter
into
hlt
add
add
and
fiaddl
dec
push
xchg
ds
push
rcrl
clc
pop
sahf
call
cli
adc
stos
inc
clc
mov
sarl
clc
ret
clc
or
shl
mov
add
fistpll
cld
cmpsb
clc
or
cmp
pushf
mov
mov
fiadds
add
inc
clc
mov
lea
add
cmp
stc
mov
add
sub
clc
mov
je
jae
add
nop
filds
sar
stos
sbb
inc
clc
lea
je
clc
cmp
mov
popa
add
dec
jno
add
std
clc
in
pop
clc
cmpsl
clc
mov
outsb
pop
xchg
stos
mov
xabort
clc
pop
mov
add
xchg
rclb
add
xabort
xchg
push
inc
clc
push
lret
mov
imul
clc
out
xlat
sar
add
sbb
mov
repz
add
test
jne
xor
add
ds
adc
add
fbstp
add
ret
xabort
test
shll
clc
gs
push
fadds
push
sbb
ds
ds
add
adc
add
aaa
out
cmp
add
add
mov
add
outsb
ss
xbegin
xchg
push
repz
or
clc
xchg
xchg
test
clc
bound
add
mov
add
lods
sbb
movsl
clc
stc
fs
adc
add
movsb
clc
ret
clc
movsl
clc
add
add
stos
dec
xor
add
cmp
add
clc
cmp
or
scas
sbb
push
dec
cmp
jle
std
xor
add
cld
mov
and
add
or
mov
jecxz
imul
loopne
sar
add
mov
or
cltd
or
mov
clc
mov
add
clc
sbb
mov
add
xor
add
add
xlat
in
sub
fdivrp
fstps
xchg
xchg
xchg
mov
out
add
sbb
xchg
stc
sub
mov
mov
clc
rolb
add
inc
clc
jns
cmpsb
clc
arpl
add
add
clc
fsubrl
clc
lcall
clc
inc
clc
addr16
or
rorb
xchg
xor
clc
xor
add
clc
sbb
mov
clc
int3
loopne
xor
add
inc
add
repnz
xchg
mov
inc
add
xabort
xor
add
clc
fsts
add
adc
clc
cmp
add
inc
add
insb
xor
add
sbb
xchg
xabort
jns
add
push
add
fldenv
clc
iret
dec
call
fstpl
push
add
adc
add
add
cmpsb
clc
xchg
shl
pop
gs
cmc
sbb
js
xchg
push
add
repz
add
popa
add
mov
clc
lods
daa
clc
add
pop
notb
add
sti
cli
xchg
aas
dec
push
sti
adc
sahf
cs
dec
aad
clc
cmpsb
clc
fsubrl
lcall
clc
cmpsl
clc
xchg
inc
add
in
mov
cmp
lret
clc
fisubrl
and
add
cmp
sti
scas
jle
clc
into
in
sub
add
clc
and
add
add
icebp
cli
fcmovne
shr
mov
clc
add
add
mov
sub
xchg
loope
mov
clc
mov
aaa
inc
clc
out
adc
imul
add
xabort
clc
mov
jge
dec
xchg
sahf
enter
add
clc
xor
add
rcrl
sub
jecxz
dec
fidivrs
clc
mov
add
jecxz
push
mov
clc
in
mov
clc
xabort
add
xchg
movsb
clc
lea
add
inc
add
fistps
daa
clc
cmp
and
add
sar
clc
testb
ss
pop
lret
add
jp
clc
inc
clc
stos
out
out
out
cmp
icebp
jp
push
mov
ljmp
push
fs
mov
dec
repz
pop
mov
xchg
clc
std
test
clc
out
or
scas
and
xchg
mov
cmp
add
add
clc
int3
out
jge
clc
pop
cmc
in
fs
aas
loopne
and
add
clc
cmp
into
fxch
or
inc
clc
and
mov
out
sub
inc
clc
jp
cltd
cmpsl
clc
dec
sar
add
pop
or
add
jbe
mov
add
clc
push
incb
int3
mov
or
clc
cld
mov
add
mov
push
clc
test
test
and
add
xlat
push
add
xor
clc
dec
mov
mov
lods
test
aad
dec
or
sar
mov
or
clc
out
imul
clc
clc
call
add
sub
outsb
mov
add
clc
inc
clc
inc
add
ret
cmp
aad
jne
lret
ljmp
clc
jmp
mov
mov
scas
pusha
add
fdivrs
sarl
and
add
clc
dec
loop
pushf
clc
imul
jmp
mov
or
add
xchg
cmp
daa
clc
fisttps
cltd
or
clc
dec
mov
add
add
popf
test
mov
mov
add
pop
call
add
or
sbb
lret
lcall
lea
clc
sub
add
add
in
add
clc
cmp
add
loope
mov
add
sub
dec
jnp
int
add
xchg
dec
ret
clc
data16
in
or
fwait
adc
add
fwait
cltd
mov
aaa
icebp
div
pop
clc
aad
clc
je
cmpsb
clc
out
xabort
and
sahf
loop
insl
sti
mov
dec
adc
test
sti
sub
adc
add
ret
clc
stos
or
fwait
add
add
add
pop
cmp
add
add
cltd
xor
add
dec
inc
clc
ss
xchg
mov
mov
push
add
jge
add
ss
clc
dec
lcall
dec
pop
pop
addr16
out
xchg
outsl
pusha
add
daa
clc
pusha
add
push
add
add
add
rcll
add
pavgb
pop
loop
mov
clc
xchg
dec
or
pusha
add
xbegin
add
mov
xor
adc
push
and
rcl
out
data16
data16
mov
add
add
pop
ja
clc
push
clc
hlt
icebp
int3
scas
fisttpll
add
push
add
or
clc
loope
xor
out
test
jmp
clc
xchg
ss
cmp
es
and
add
pop
in
mov
lea
lods
out
push
push
sbb
mov
xchg
cmp
int
clc
lret
aaa
shll
pop
sub
jo
add
add
call
clc
mov
jns
jae
add
aam
clc
loopne
fwait
mov
xchg
rcll
add
add
add
cmpsl
clc
add
lods
pop
fldl
inc
add
adc
add
clc
ja
ret
clc
sub
clc
nop
cltd
inc
clc
xchg
and
add
add
mov
dec
mov
jb
add
inc
add
mov
add
loop
mov
addr16
sub
cltd
repz
clc
aam
clc
inc
add
das
ljmp
outsb
mov
lret
add
clc
pop
mov
inc
clc
insb
test
mov
clc
enter
pop
sub
add
add
stc
icebp
xchg
cmp
jno
add
lret
in
xchg
push
fldl
add
ret
nop
sbb
add
lahf
jp
pusha
add
cmpsl
clc
negl
sub
clc
rdseed
fwait
xor
add
add
clc
inc
add
jb
add
popa
add
shll
add
ja
imul
cmp
add
aam
stos
lods
fnstsw
dec
cmp
nop
pop
xor
add
repnz
add
mov
add
add
stos
cs
into
out
cli
mov
mov
sub
es
jecxz
es
or
mov
pop
daa
clc
mov
mov
pop
mov
iret
aad
xchg
pusha
add
in
inc
clc
in
mov
fwait
negb
pop
in
mov
jnp
and
add
dec
adc
aad
add
pop
out
clc
loope
push
xor
add
adc
add
in
lea
add
push
add
pop
pop
aad
add
add
xor
cmp
push
add
adc
add
insb
ljmp
clc
push
add
adc
cmp
jle
clc
dec
sub
add
add
push
ss
add
jg
clc
mov
add
add
add
or
fs
xchg
xor
add
clc
pop
dec
aas
sbb
clc
mov
xchg
psllw
pop
pop
add
add
adc
add
mov
add
dec
add
add
add
sti
dec
inc
clc
jbe
clc
add
add
clc
out
xlat
xchg
imull
sbb
jae
add
dec
and
add
fidivs
add
clc
dec
insb
pop
push
lock
cmp
adc
add
add
test
repnz
pop
mov
clc
jns
inc
clc
xchg
arpl
add
add
add
mov
lret
clc
rcl
out
sub
push
lea
clc
test
push
or
jo
add
sahf
mov
add
add
dec
std
das
mov
and
add
xchg
in
xchg
pop
xchg
shr
cmp
int
xchg
jne
add
mov
scas
rcr
jns
fidivs
add
push
cwtl
lock
cmpsb
clc
mov
add
cmp
inc
clc
sbb
clc
pop
mov
jae,pn
add
and
add
add
mov
push
mov
pop
and
add
mov
push
in
xor
add
add
add
add
das
mov
and
add
add
inc
clc
sahf
cmp
add
sub
sahf
mov
push
jb
add
clc
or
xor
mov
clc
push
clc
mov
clc
divl
add
adc
add
sarb
fstpl
clc
and
add
mov
clc
lea
dec
push
clc
sbb
clc
das
jmp
test
add
mov
outsl
or
add
mov
mov
dec
xchg
mov
out
js
add
mov
cmp
add
jp
jmp
clc
movsl
clc
pop
pusha
add
scas
lods
pop
mov
add
add
mov
push
add
add
aas
fs
mov
clc
or
adc
add
add
cmp
aam
add
and
add
clc
fiadds
cmp
xchg
xor
add
adc
add
xor
add
jl
clc
lcall
or
mov
pop
loop
fcmovnb
clc
sar
out
inc
add
jb
add
clc
hlt
mov
xchg
jmp
lahf
jnp
pop
mov
xor
add
add
icebp
xchg
cmp
clc
ret
clc
dec
sahf
rclb
enter
xchg
pop
push
in
int
jno
add
clc
popf
and
cs
int
out
sub
and
add
xbegin
clc
cmp
clc
xchg
inc
add
aaa
out
jl
into
in
lcall
add
pusha
add
roll
add
cwtl
pushf
mov
pop
cltd
pop
das
daa
clc
mov
pop
clc
popf
std
decb
add
sbb
iret
mov
sar
sub
adc
add
clc
and
add
clc
sti
fldenv
add
dec
not
jbe
add
call
jno
add
add
mov
cmp
jl
xor
add
clc
xchg
int
jno
add
pop
mov
clc
jnp
clc
dec
stos
inc
clc
sub
sbb
pop
clc
icebp
jmp
clc
cmp
add
clc
in
inc
add
push
add
sbb
add
out
cmp
arpl
add
add
rcrl
ficompl
ljmp
enter
out
inc
add
sbb
es
mov
jo
add
clc
and
add
cmp
clc
pusha
add
sbb
repz
gs
in
cmp
fldenv
add
xchg
je
movsb
clc
out
cmp
jno
add
jnp
sbb
add
or
outsb
push
inc
add
push
add
mov
sub
test
clc
cmp
jnp
fs
js
add
sahf
leave
mov
insb
lret
imul
lods
popf
pop
xor
add
add
in
xchg
pop
adc
xlat
mov
clc
test
jo
add
sbb
nop
fstpt
xor
clc
add
add
lock
popa
add
lret
add
add
and
add
mov
add
clc
icebp
add
add
add
add
mov
pminsw
add
cld
int
mov
aas
dec
icebp
dec
imul
sub
clc
inc
add
mov
or
scas
add
add
clc
out
and
jecxz
mov
add
add
cmp
clc
pop
jno
add
add
clc
push
in
lods
cmc
jmp
clc
adc
xchg
repz
add
ret
clc
ret
ret
clc
repnz
fidivrs
clc
ret
clc
push
add
jmp
clc
cmp
xchg
jo
add
jge
clc
imul
lods
mov
push
sbb
clc
mov
clc
mov
adc
clc
inc
add
js
add
sub
and
add
mov
clc
js
sar
clc
movsl
clc
in
mov
sbb
clc
rcr
fnsave
mov
clc
test
mov
jnp
shll
add
cmp
into
adc
add
sbb
clc
push
out
adc
add
clc
push
sub
sahf
js
clc
repz
clc
negb
clc
aas
inc
clc
push
add
pop
mov
push
and
add
das
jle
mov
clc
push
and
add
add
mov
clc
test
add
add
clc
pop
dec
push
jecxz
nop
sub
add
loop
repz
ret
lret
filds
push
mov
clc
scas
sub
push
add
rolb
xor
add
in
or
sar
clc
cmc
int
clc
jmp
cld
mov
clc
clc
rolb
add
clc
mov
clc
std
inc
add
xor
add
dec
inc
clc
mov
add
adc
add
inc
add
rclb
add
clc
rcr
push
clc
xchg
mov
cwtl
pop
mov
clc
addr16
nop
stos
cmp
mov
sub
add
jno
add
add
add
add
cmp
cmp
jbe
outsb
mov
clc
push
clc
hlt
in
adc
add
in
mov
repz
stos
aas
mov
xbegin
pusha
add
out
mov
xor
add
clc
push
dec
mov
dec
int
clc
push
add
push
xchg
cmp
lods
in
pop
jmp
pop
scas
std
dec
negl
jecxz
sbb
pop
or
xchg
jnp
cmp
fs
mov
add
aas
jne
lcall
clc
xchg
push
clc
or
fildll
aam
adc
add
sar
cltd
data16
xor
cmp
add
fbld
stos
hlt
movsl
clc
cmp
clc
xchg
mov
add
add
mov
add
mov
enter
cmp
add
or
add
add
in
shlb
add
add
repnz
cmp
sbb
jno
add
inc
clc
and
add
stc
add
add
add
test
sub
add
clc
mov
pop
mov
int3
rcll
add
dec
mov
inc
clc
aad
push
pop
push
add
add
add
add
add
add
add
add
add
clc
and
add
cli
lock
add
push
ret
clc
loopne
sahf
loope
arpl
add
dec
cmp
sub
dec
mov
mov
push
dec
xchg
in
aam
clc
daa
clc
sahf
incb
mov
rcr
push
and
add
add
cmp
jno
add
cld
lcall
add
add
fiaddl
std
mov
clc
mov
cmpsl
clc
cltd
sbb
loopne
jae
add
add
clc
pop
clc
cltd
xchg
mov
mov
clc
sub
mov
add
xor
add
dec
mov
cmc
stos
dec
testb
fldenv
leave
icebp
mov
lods
xchg
cmp
add
xchg
add
add
loope
test
add
inc
clc
sar
ss
add
fcomps
aaa
sbb
add
pop
std
cmp
mov
clc
xchg
dec
mov
movsl
clc
and
add
jne
add
movsb
clc
mov
and
imul
pop
repnz
lock
repnz
fildl
add
sub
dec
add
add
popa
add
push
add
mov
sbb
add
clc
jno
add
clc
sub
jg
adc
add
enter
push
clc
pop
sub
cmp
push
leave
add
add
in
mov
arpl
add
clc
sub
inc
clc
jmp
mov
clc
cmp
dec
pop
mov
xchg
sub
pop
add
jge
clc
lock
clc
sbb
jns
leave
sahf
pop
imul
int3
push
ret
clc
jl
mov
cmp
add
clc
xchg
inc
add
mov
push
add
stc
jae
add
aas
lcall
cmp
leave
loopne
lret
jae
add
inc
clc
popa
add
sarb
push
clc
repnz
clc
stos
xchg
jle
pop
loope
test
fxch
movsb
clc
dec
mov
scas
inc
clc
fwait
gs
lcall
clc
test
data16
adc
add
clc
shrl
cmc
xchg
xlat
jl
repnz
inc
clc
mov
sub
ret
clc
sti
mov
mov
add
mov
add
add
mov
clc
and
add
enter
stc
sub
add
sbb
clc
dec
adc
add
cmp
movsl
clc
pop
je
clc
lahf
lods
int
add
pop
psrlq
add
add
clc
cmp
xchg
mov
clc
lods
push
testl
enter
clc
xabort
clc
push
hlt
sub
add
dec
stos
or
pop
scas
dec
dec
and
add
or
pop
adc
add
mov
sub
jne
int3
jnp
shll
add
clc
dec
mov
inc
clc
xchg
push
clc
sar
scas
and
add
add
loop
add
add
lods
cmp
mov
add
repnz
jne
add
popa
add
xlat
jge
mov
clc
cmp
js
add
mov
sub
xor
add
add
add
pop
pop
clc
mov
sahf
outsb
pop
sub
int
and
push
add
mov
add
add
inc
clc
jecxz
xchg
stos
sbb
clc
mov
clc
roll
add
add
mov
ret
clc
pop
or
add
std
cltd
outsb
dec
adc
add
mov
popa
add
in
fidivs
add
sub
add
add
clc
push
hlt
cmp
enter
clc
and
mov
fdivs
xchg
ss
push
xchg
jle
sahf
adc
mov
mov
push
dec
aad
bound
add
add
loopne
mov
mov
clc
outsb
xchg
add
add
clc
or
add
add
in
hlt
notl
xor
mov
clc
xbegin
cs
mov
inc
add
addr16
cmp
out
push
add
adc
out
inc
clc
xor
add
inc
add
push
inc
clc
xor
add
or
add
add
mov
add
jecxz
mov
add
mov
mov
and
add
push
add
add
push
cltd
lahf
pop
cmp
add
or
in
test
sbb
or
hlt
jle
cmpsb
clc
repnz
inc
add
aaa
into
adc
dec
fs
xchg
ja
clc
movsb
clc
cmpsl
clc
cmc
xchg
lahf
in
ds
jg
mov
loop
adc
add
clc
jbe
xadd
popf
add
add
or
and
jnp
enter
add
push
aas
mov
sbb
inc
add
ret
add
jno
add
add
xchg
pop
cmp
add
and
add
dec
scas
cmp
sub
scas
or
out
scas
inc
clc
je
jle
add
lods
aam
pop
out
mov
push
cmpsl
clc
fdivs
add
scas
sub
clc
sar
insl
lahf
in
jecxz
dec
or
add
into
pushf
call
clc
cmp
push
add
pop
ds
sar
mov
nop
sar
std
jno
add
hlt
cmp
add
add
push
pop
clc
repz
sub
cmp
shl
clc
gs
loop
add
add
test
outsb
xchg
jbe
in
stc
loop
call
clc
lods
mov
sub
xchg
stc
sti
ret
das
sub
inc
clc
pop
fs
dec
mov
and
add
add
dec
push
mov
add
icebp
test
call
cmpsb
clc
sub
cmpsl
clc
pop
and
add
push
add
mov
clc
sahf
in
cmp
adc
add
clc
mov
add
cli
mov
sbb
clc
lcall
sbb
sub
and
inc
add
sub
jp
shl
clc
cmp
add
loope
loopne
xchg
adc
add
inc
add
sar
imul
das
push
add
scas
cmpsb
clc
mov
clc
jo
add
addr16
jno
add
jae
add
add
mov
clc
popa
add
sbb
jge
out
leave
dec
mov
sbb
ljmp
clc
mov
clc
mov
icebp
call
push
daa
clc
test
mov
inc
clc
imul
add
ds
lahf
cs
cmp
imul
add
into
or
add
add
add
xor
xchg
sahf
mov
loop
vrcpps
add
pop
jb
add
clc
imul
jnp
jecxz
fidivrl
clc
adc
add
icebp
das
jne
clc
clc
testl
clc
jle
fisttps
mov
aam
xchg
adc
add
dec
push
add
sti
lods
out
enter
clc
mov
imul
add
mov
clc
gs
rolb
adc
add
add
mov
jb
add
clc
jbe
add
adc
add
int
lahf
ja
add
xchg
cmp
popa
add
out
sar
insb
fwait
leave
mov
xor
add
clc
adc
add
add
test
test
add
arpl
add
imul
clc
push
add
inc
clc
scas
add
add
add
imul
mov
clc
push
push
bound
add
lock
movsb
clc
imul
test
xchg
imul
inc
add
test
jo
add
adc
lret
fs
or
fidivrl
mov
add
outsl
test
stc
mov
scas
or
push
clc
sbb
inc
clc
pop
je
xchg
shrb
push
das
das
jbe
push
add
xchg
repz
add
jb
add
pop
int
fsubrl
clc
pop
push
dec
push
shl
je
in
cmp
or
movsb
clc
cwtl
dec
jbe
or
inc
clc
pop
dec
cmp
xor
add
add
repz
cmp
add
add
addr16
lcall
add
outsb
int3
cmp
clc
push
dec
shl
add
add
clc
mov
sbb
ret
or
cmp
cwtl
iret
ss
add
add
add
mov
add
or
mov
add
iret
shl
clc
or
and
outsb
push
push
add
sysret
clc
xchg
outsl
xor
add
add
mov
clc
es
push
xor
add
mov
pop
xlat
jno
add
clc
bound
add
imul
int
clc
inc
clc
test
jmp
add
and
add
clc
inc
add
and
add
clc
adc
add
jbe
sub
xchg
mov
data16
fs
jne
into
scas
xchg
movsb
clc
outsl
mov
add
lea
jbe
xor
add
shrl
inc
add
sbb
int
pop
pop
cmp
xchg
int3
push
daa
clc
inc
clc
mov
jbe
add
push
sbb
mov
ret
clc
jo
add
add
or
clc
arpl
add
adc
cli
add
add
fmul
push
inc
add
mov
in
xor
add
add
and
mov
cmp
cltd
pop
into
mov
jo
add
add
add
jns
fwait
jbe
aas
movsb
clc
cmp
bound
add
push
add
clc
mov
clc
fisttpl
in
mov
add
fwait
shr
pop
cmpsl
clc
test
je
lahf
imul
adc
add
add
dec
cmc
lret
adc
data16
dec
push
add
je
pop
clc
js
into
xlat
push
add
loopne
jno
add
je
clc
in
adc
add
stc
ret
clc
lea
xbegin
popf
mov
movsl
clc
test
xor
clc
xchg
xchg
and
add
dec
lret
mov
clc
pop
dec
pop
test
clc
inc
add
cwtl
roll
add
push
mov
or
jno
add
adc
add
inc
add
adc
add
fwait
aas
xor
add
add
sub
add
popa
add
scas
sbb
add
clc
xchg
xor
add
clc
idivb
dec
add
add
add
add
push
cmc
cmc
add
add
int3
lea
add
push
add
loopne
cmp
add
inc
clc
int
in
cmp
add
in
sar
adc
add
mov
jne
aas
ljmp
out
out
dec
dec
ja
jns
sub
inc
add
pop
es
dec
stos
xchg
hlt
dec
stc
cmp
call
inc
clc
dec
in
mov
add
arpl
add
sar
jmp
es
push
mov
add
adc
add
clc
stos
adc
clc
jl
inc
clc
cwtl
push
add
push
int
add
xor
add
add
negb
add
fstpt
in
addr16
sbb
add
mov
add
pop
test
pop
divb
jle
inc
add
adc
add
add
lods
push
add
pop
xlat
xabort
cmp
popf
out
xchg
fwait
mov
inc
add
sub
adc
movsl
clc
xbegin
clc
and
mov
clc
call
xor
add
js
clc
cmp
sahf
bound
add
add
cmp
add
xchg
fistpll
mov
into
and
add
lea
dec
xabort
jmp
pushf
stc
add
popf
sub
or
iret
or
enter
push
add
mov
clc
fwait
cmp
inc
clc
cmc
movsb
clc
cmove
lret
xbegin
mov
add
bound
add
add
pop
ficompl
aam
clc
and
sar
xchg
push
add
in
cmpsl
clc
stc
and
xchg
lcall
add
repz
add
add
pop
add
add
clc
lods
push
add
push
test
add
out
jns
scas
jge
fldcw
clc
fldt
dec
aam
xbegin
cmp
clc
decl
xor
cmp
add
je
sbb
clc
pop
mov
fwait
ljmp
inc
clc
fwait
jo
add
mov
mov
add
iret
out
call
add
sub
notb
and
add
das
xbegin
inc
clc
xchg
or
clc
cmp
pop
es
mov
mov
xchg
cmp
add
dec
out
movsb
clc
cmpsb
clc
pop
push
add
cmp
clc
ret
scas
jle
scas
stos
stc
mov
loop
cmp
and
add
ss
or
mov
add
mov
add
push
ret
clc
mov
in
scas
fdivrs
add
daa
clc
mov
enter
clc
jbe
dec
popa
add
jge
jle
cli
lods
xchg
mov
cmp
xchg
gs
scas
mov
add
add
int
mov
add
scas
inc
clc
mov
stos
fwait
pop
cwtl
ret
xchg
inc
clc
sbb
xchg
or
ds
rcll
mov
add
aaa
add
add
push
add
jmp
clc
sar
aad
push
xor
add
inc
clc
out
or
add
clc
roll
clc
ds
fsubrl
push
add
add
add
clc
xor
add
xchg
inc
clc
xabort
add
loop
push
gs
in
lods
cmp
clc
xchg
dec
sbb
add
popf
inc
add
mov
add
arpl
add
sub
cli
out
mov
test
movsl
clc
xbegin
jnp
rep
jbe
clc
call
add
lods
xor
xbegin
clc
outsb
cmp
xchg
cmp
scas
fcmovnbe
aad
clc
jp
js
cmp
add
stc
cmp
push
insb
out
pop
xchg
leave
jns
cmp
test
dec
mov
pusha
add
mov
fstpl
and
add
add
loopne
push
testl
cmp
clc
push
sbb
dec
xchg
jmp
std
and
add
es
in
or
xabort
sbb
clc
ljmp
add
enter
aam
test
jbe
add
lods
test
sub
clc
adc
jae
add
and
add
clc
or
cmp
add
add
add
mov
pop
xor
add
cmc
int
sahf
push
add
nop
aad
mov
clc
ja
push
ror
test
add
pop
in
gs
lods
dec
test
lcall
pop
push
sbb
add
inc
add
cmp
clc
mov
imul
or
mov
scas
mov
sar
clc
fwait
or
clc
adc
cltd
jge
test
into
sar
and
add
push
loope
add
add
enter
lcall
push
popa
add
jg
push
add
push
sbb
sub
lahf
test
clc
adc
add
add
jg
clc
lret
add
mov
push
add
ret
clc
cs
es
jae
add
add
mov
push
mov
sbb
jo
add
sahf
cmp
add
shrl
xchg
gs
mov
adc
add
loope
aad
add
mov
mov
add
adc
and
jb
add
mov
enter
clc
iret
cmp
mov
cmp
push
sbb
pop
std
sar
clc
rcr
bnd
add
push
clc
pop
clc
jo
add
clc
inc
clc
xchg
out
cltd
jae
add
add
xchg
ja
or
mov
xchg
sti
nop
mov
mov
push
add
dec
js
add
push
cmp
clc
sti
cmp
clc
ret
inc
clc
sbb
cmp
add
mov
add
dec
mov
pushf
outsl
dec
test
add
rolb
aas
clc
push
add
fstpt
mov
outsl
icebp
dec
aas
mov
clc
repz
clc
mov
clc
mov
cmp
dec
rcrb
add
mov
add
mov
gs
pushf
nop
mov
clc
sahf
daa
clc
int
movsb
clc
or
clc
lods
lret
sbb
aaa
jae
add
add
ss
das
popa
add
lods
inc
add
incl
imul
add
clc
push
cmp
add
aas
es
mov
clc
std
in
cwtl
lods
sub
mov
jl
out
pop
push
daa
clc
sbb
cmp
clc
psubw
lods
adc
leave
mov
imul
add
add
repnz
and
lret
cmp
xchg
pop
ficompl
stc
movsl
clc
jnp
mov
add
cmp
add
pop
xchg
sar
jnp
lods
xor
add
add
clc
movsl
clc
pop
xchg
cltd
mov
pop
jmp
adc
add
clc
and
add
mov
pop
mov
clc
fs
fimull
xor
add
jae
add
repnz
fidivrs
test
sub
loopne
pop
std
push
add
fs
fidivrl
clc
push
add
repnz
cmp
cmp
clc
lea
add
mov
pop
dec
mov
mov
sbb
add
aas
outsl
xchg
pop
ss
pushf
mov
nop/reserved
add
fcomps
clc
decl
es
or
addr16
adc
ficompl
dec
jo
add
clc
or
adc
add
clc
xor
add
sub
clc
jp
pushl
add
add
lock
dec
aas
jbe
push
lahf
add
clc
mov
popf
int
cmc
pop
mov
repnz
add
pusha
add
mov
out
inc
clc
cld
cwtl
push
cmp
xchg
incl
add
push
dec
mov
into
pop
pop
ficomps
sahf
ljmp
add
add
mov
clc
xor
add
rorl
add
push
mov
test
adc
add
inc
clc
sub
add
jnp
fs
jmp
clc
fwait
jecxz
cli
pusha
add
sti
stc
push
addr16
clc
pop
fsubrs
add
add
push
mov
ds
add
aad
jle
inc
add
pushf
scas
xor
fsubl
in
fsubrs
add
dec
push
add
xor
add
clc
loope
cmpsb
clc
mov
clc
hlt
mov
out
imul
jp
fstl
add
loope
sti
and
add
test
mov
push
xor
rol
clc
sbb
cmpsb
clc
stos
aad
shrb
scas
jb
add
adc
add
mov
add
cld
xlat
mov
clc
push
clc
mov
cltd
sahf
lcall
add
add
cmp
jo
add
pusha
add
dec
out
xchg
jns
clc
sahf
pop
pusha
add
cmc
nop
fdivrs
clc
jbe
clc
aam
clc
inc
clc
jg,pt
dec
cmpsl
clc
mov
and
add
sub
push
jo
add
push
mov
clc
push
es
jne
add
mulb
dec
cmp
clc
call
add
mov
or
dec
xlat
gs
mov
fwait
test
add
fldt
test
stos
pop
pop
adc
cmpsl
clc
sub
mov
inc
clc
mov
clc
push
add
xchg
lret
sub
sbb
add
add
cmpsb
clc
adc
add
mov
clc
and
add
das
das
lahf
add
add
or
add
or
setbe
add
inc
add
inc
add
dec
ljmp
ret
clc
inc
clc
adc
cmp
jbe
or
sub
add
data16
sbb
int3
or
sub
clc
lock
mov
add
add
xor
add
add
fisttpll
cmp
ret
repz
outsl
mov
add
pop
dec
adc
fwait
lcall
clc
or
clc
movq
hlt
push
add
ja
clc
mov
clc
data16
mov
dec
inc
clc
xchg
aam
call
setg
adc
add
add
jle
clc
repz
xor
add
dec
sub
mov
lods
movsl
clc
aaa
jne
daa
clc
mov
add
dec
nop
dec
not
jmp
cld
mov
clc
outsl
dec
cs
sbb
gs
jno
add
add
scas
sub
test
sub
add
insb
clc
out
sarb
inc
clc
pop
jle
cs
clc
mov
clc
out
sahf
clc
jmp
clc
dec
xchg
aas
movsb
clc
push
add
pusha
add
stc
out
push
sbb
push
or
das
shrl
cmp
push
add
shlb
jmp
add
cmp
outsb
adc
add
xor
or
insl
into
cmp
cmpsl
clc
xor
add
fbstp
inc
clc
cmp
out
fs
sahf
push
sub
clc
stc
cmp
stos
in
dec
imul
nop
clc
cmp
sbb
dec
push
jno
add
dec
sub
jle
pop
nop
je
jae
add
cli
cmp
clc
sbb
sbb
add
add
cli
adc
mulb
inc
clc
lret
sarl
popf
test
adc
scas
mov
clc
in
mov
add
mov
icebp
lods
jmp
push
push
cmp
jae
add
bound
add
lcall
add
jb
add
add
add
int3
sbb
add
cli
mov
mov
aas
in
jo
add
pop
pop
lods
aad
sar
adc
add
add
inc
add
sub
mov
mov
out
or
add
outsb
gs
into
push
add
jbe
add
data16
push
add
and
fiaddl
add
sar
add
es
int3
daa
clc
leave
data16
cmovnp
clc
pop
pusha
add
cld
sar
leave
xchg
fnstcw
mov
sub
fwait
sub
dec
ja
fidivrs
cmp
outsl
inc
clc
add
add
adc
add
daa
clc
push
je
vrcpps
add
mov
clc
mov
clc
shrl
cmp
aas
jo
add
loopne
sbb
frstor
add
int3
sbb
dec
push
repnz
push
inc
clc
dec
jbe
clc
inc
add
lahf
mov
cmp
add
stos
sbb
inc
add
pop
sti
ja
lods
ret
clc
sbb
mov
mov
inc
add
pop
clc
or
add
fs
push
dec
sar
mov
mov
add
add
clc
int
mov
xor
out
pop
push
add
arpl
add
add
adc
add
iret
negb
dec
sbb
stc
xor
add
jo
add
xchg
mov
lret
push
add
jle
nop
pop
out
adc
add
add
das
pusha
add
mov
add
aam
clc
adc
add
sar
clc
cmp
or
clc
cmpsb
clc
push
add
mov
add
add
clc
mov
scas
cmp
add
add
inc
clc
cmp
into
add
add
das
stos
lret
stos
inc
clc
out
aas
int3
adc
add
add
add
jmp
data16
loope
bnd
fdivr
add
add
pop
mov
sar
dec
xchg
test
clc
lods
insl
clc
movsl
clc
test
sahf
dec
mov
scas
mov
clc
mov
jns
std
cmc
outsb
xlat
repz
out
lahf
jae
add
cmp
mov
add
add
clc
cmp
rcrl
popf
xor
add
js
add
mov
xor
add
push
sub
ja
scas
lods
call
add
mov
pop
xabort
and
mov
mov
xchg
jb
add
xchg
push
push
int3
jg
adc
add
movsl
clc
dec
sub
xchg
mov
xchg
mov
ss
aaa
cmp
clc
cmp
adc
add
and
add
xchg
inc
clc
popa
add
sub
clc
xchg
call
adc
add
ds
jmp
xor
add
clc
pusha
add
lret
clc
dec
iret
cmp
sahf
cmp
stc
sar
add
push
add
push
xabort
clc
mov
add
add
or
clc
add
add
jb
add
pop
push
jns
dec
or
clc
gs
cmp
add
pop
add
add
sbb
mov
imul
clc
daa
clc
inc
clc
jae
add
clc
scas
data16
popa
add
lret
add
add
clc
ljmp
mov
cmp
insl
xor
add
pop
push
add
iret
cmp
add
sbb
sub
dec
nop
cmp
push
xor
clc
cli
lea
add
ss
clc
lods
stc
mov
clc
xchg
xabort
outsb
lods
in
sbb
add
sbb
add
push
add
clc
loop
adc
add
ljmp
incb
add
adc
add
xchg
aam
test
push
sub
clc
xor
add
and
add
add
mov
xchg
popa
add
mov
xor
add
xchg
std
lahf
in
rol
clc
filds
test
dec
push
add
mov
clc
imul
clc
jae
add
inc
clc
repnz
loopne
push
jge,pt
cmp
pop
fcomps
push
add
sub
mov
sbb
mov
mov
xor
add
scas
jno
add
insb
cli
pop
addr16
cmp
fs
outsl
mov
add
cli
icebp
add
add
dec
jge
inc
add
jne
clc
push
and
jae
add
xor
add
fldt
iret
xchg
jge
add
cli
cwtl
jno
add
xor
add
shr
add
add
cmp
cld
scas
jp
je
popa
add
test
mov
add
add
jp
js
mov
cmp
test
or
clc
push
add
add
add
adc
dec
push
lods
sub
into
ret
cmp
push
adc
add
pop
cmp
sub
clc
xlat
pusha
add
sbb
clc
pushf
push
add
dec
loop
jmp
imul
xor
add
scas
out
jae
add
loope
outsl
mov
clc
bound
add
cmpsl
clc
push
mov
clc
repnz
xchg
fdivl
lcall
clc
pusha
add
xlat
dec
mov
jo
add
add
add
pop
pop
stc
push
mov
xor
add
sub
ficoml
add
cmp
xor
add
push
clc
dec
lret
clc
and
add
add
mov
jge
pop
lods
push
daa
clc
mov
xchg
mov
jecxz
pop
and
adc
add
jo
add
add
sar
inc
add
es
jl
or
shr
dec
mov
mov
push
out
pop
mov
clc
into
adc
add
add
xchg
push
add
fnstsw
adc
adc
clc
fisubl
lods
push
sar
outsl
mov
xor
add
add
in
cltd
mov
clc
loope
shl
clc
jb
add
or
add
hlt
test
shld
repz
add
add
clc
ret
clc
sbb
stc
lret
in
movsl
clc
push
pusha
add
dec
data16
jb
add
out
test
inc
clc
js
add
loopne
loop
push
add
stos
nop
dec
or
clc
insb
popf
push
dec
fwait
repnz
clc
dec
sbb
clc
mov
jmp
outsb
aam
clc
cmp
test
jo
add
sbb
xchg
xchg
jle
cmp
ss
clc
cmc
sar
mov
ja
add
jmp
add
push
sarl
lods
mov
add
xchg
sub
add
call
clc
rcl
inc
add
test
add
add
scas
push
mov
xchg
mov
clc
into
push
add
cmp
jb
add
xchg
daa
clc
mov
int
ds
mov
clc
in
push
mov
clc
sarb
add
clc
insb
lods
cmp
add
stos
stos
pop
cmp
xor
fistpll
push
clc
lret
call
fisubrs
into
es
lea
mov
push
sar
clc
mov
clc
cmp
pusha
add
jmp
dec
push
out
test
xchg
fldt
decb
pushf
inc
clc
sarl
add
dec
mov
xor
add
loopne
incb
adc
mov
push
jge
clc
push
clc
inc
clc
cmovs
cmp
add
aaa
icebp
popa
add
push
clc
dec
mov
movsb
clc
and
add
idiv
aaa
dec
jo
add
mov
xor
ss
add
mov
clc
jo
add
add
jns
in
imul
add
cmp
xor
jae
add
push
xchg
int3
mov
xchg
mov
jge
mov
dec
sbb
addr16
xor
clc
hlt
add
add
dec
or
mov
add
clc
pop
sahf
dec
mov
xor
add
add
jne
sar
add
xor
clc
sub
test
pop
fdivrs
add
negb
clc
repz
add
insl
out
dec
pushf
leave
loop
icebp
pop
mov
clc
in
sar
clc
xor
and
add
inc
clc
sar
mov
add
add
mov
add
imull
sar
add
lods
xor
add
sub
ficomps
sub
clc
add
add
add
das
mov
cmp
gs
mov
add
stc
fs
jbe
push
jmp
and
add
mov
cmp
fistpl
lock
cmpsb
clc
mov
test
push
clc
js
jp
clc
or
icebp
xor
add
sar
jg
clc
cmp
ds
xchg
outsl
stc
jb
add
dec
inc
clc
popf
int
addr16
mov
add
mov
pop
clc
jns
clc
jb
add
add
add
iret
pop
stos
out
ja
sbb
js
add
and
clc
ret
clc
in
jecxz
mov
dec
xbegin
addr16
cmp
push
clc
mov
ds
outsb
xchg
push
add
frstor
push
rol
clc
lock
add
xor
add
pop
mov
pop
gs
mov
push
add
dec
notl
inc
clc
fidivl
fsubrp
xor
add
clc
mov
cmp
mov
fistpl
clc
mov
pushf
mov
cmpsb
clc
mov
add
cli
mov
clc
aad
xchg
or
cld
mov
push
mov
mov
add
popf
iret
push
clc
lcall
jne
cmp
xbegin
enter
add
xor
xchg
pusha
add
xchg
cltd
dec
pop
fs
in
pop
and
add
clc
and
pop
std
stos
push
je
clc
or
add
xabort
jg
clc
mov
push
imul
clc
push
add
gs
add
jle
addr16
pop
hlt
cli
repnz
xor
add
test
add
jmp
mov
test
push
hlt
hlt
sub
xor
add
icebp
sbb
add
out
das
jne
add
insb
or
sub
cmp
mov
add
mov
add
clc
sahf
arpl
add
add
jbe
clc
push
add
add
push
xor
add
clc
cmp
mov
clc
mov
iret
ljmp
test
clc
jmp
lea
add
lret
adc
inc
clc
repz
fcompl
stos
data16
icebp
lcall
clc
xor
cmp
add
mov
rorb
arpl
add
add
adc
add
push
shlb
cmp
in
push
add
add
and
and
add
in
adc
mov
loopne
pop
push
ret
clc
outsb
and
clc
imul
clc
mov
hlt
sbb
jo
add
add
xlat
xchg
pushf
push
cld
add
add
add
mov
lods
inc
add
cmpxchg
mov
cmc
add
aas
mov
clc
mov
clc
adc
add
lahf
test
adc
add
je
rcl
test
in
mov
cltd
and
add
add
sbb
clc
jns
pop
clc
jmp
out
mov
xor
xchg
jae
add
clc
test
repz
clc
sub
add
popa
add
rorb
clc
je
int
fld
clc
insb
cld
sbb
clc
cmpsb
clc
ficoml
add
clc
lods
jle
cmp
je
outsb
pop
clc
mov
clc
push
clc
jl
cmp
inc
add
mov
testl
sar
add
repz
clc
fsubl
fstps
xor
scas
loop
pop
clc
cmp
clc
jl
repnz
mov
pop
jno
add
push
xor
adc
add
movsb
clc
jg
clc
in
test
xor
add
xchg
mov
mov
pop
fwait
dec
ret
clc
pusha
add
bnd
clc
mov
xor
and
add
clc
dec
ds
sub
add
fstpl
clc
rcr
je
push
add
cmp
cmpsl
clc
fcoml
add
mov
cld
rclb
add
test
je
cli
xor
add
add
add
clc
outsl
test
sar
inc
clc
popa
add
add
mov
inc
clc
xlat
fidivl
add
adc
clc
or
mov
cmp
add
gs
pop
dec
sbb
clc
inc
clc
mov
hlt
jmp
insb
incl
add
add
stos
mov
sub
fs
int3
jnp
clc
push
add
xchg
fs
fdiv
cmc
stc
cmp
clc
fxam
clc
push
dec
push
clc
stos
mov
cmp
dec
jno
add
and
add
clc
pop
clc
call
fucom
clc
pop
sbb
adc
add
add
jb
add
mov
mov
stos
xor
add
fwait
cmp
cmp
clc
adc
xchg
int
clc
push
or
aas
mov
xchg
sar
clc
and
add
js
clc
sahf
fs
scas
push
add
push
pop
leave
iret
fs
push
add
jl
add
arpl
add
sbb
add
addr16
mov
clc
fs
repnz
add
add
add
je
jne
clc
mov
mov
sbb
adc
add
clc
xor
fmull
add
add
add
test
mov
clc
adc
add
add
clc
adc
fucomip
and
add
ljmp
stc
test
and
add
add
jns
add
rcr
test
mov
xchg
adc
add
in
xchg
xor
add
add
js
mov
clc
jae
add
jno
add
cmp
xchg
arpl
add
clc
mov
fiaddl
add
jle
ljmp
cmp
add
pop
inc
add
dec
dec
sbb
add
fstpl
outsb
fstl
pop
iret
gs
jle
clc
scas
jl
cmp
test
add
scas
inc
add
fcoml
add
fwait
mov
xchg
inc
clc
xchg
ljmp
add
fisubs
add
jmp
dec
jmp
clc
xchg
insb
imul
arpl
add
int
dec
ja
ret
scas
pusha
add
repz
icebp
flds
add
clc
dec
negb
notb
add
fldt
cmp
xchg
ficoms
add
push
xor
add
std
dec
xor
add
jae
add
fnstenv
add
dec
in
mov
vmovhps
addr16
sahf
enter
sti
aam
repnz
and
aad
fisttps
add
aas
lods
sar
jp
test
sar
incl
arpl
add
add
clc
cmp
int3
fdivs
clc
pop
pop
push
test
lahf
pop
int
lahf
sbb
addr16
cmc
sbb
jp
clc
cli
lret
add
cmp
aam
add
xchg
repz
cmp
add
aam
add
mov
out
fsubs
clc
lcall
clc
or
push
das
pop
icebp
aas
add
add
mov
push
sar
sar
add
bound
add
fidivrs
add
in
mov
repnz
clc
push
cmpsb
clc
or
mov
xbegin
sbb
push
mov
add
jns
clc
pop
lods
mov
enter
dec
pushf
sub
xor
mov
pop
jne
xor
add
repz
xchg
and
jne
xor
add
dec
push
add
mov
aam
out
mov
add
test
mov
inc
add
push
add
xlat
mov
add
lahf
test
sti
aas
std
jb
add
clc
decb
clc
cmp
cmp
pushl
insl
sbb
xor
add
jno
add
sbb
clc
lods
pop
push
fisttps
in
jnp
pop
mov
add
add
mov
lcall
cmp
add
add
mov
sbb
mov
loopne
pop
inc
clc
fstl
add
xchg
in
push
add
or
mov
mov
fcomps
js
xchg
push
add
test
enter
push
call
mov
mov
outsl
dec
sbb
daa
clc
cmp
sti
xabort
js
xchg
icebp
mov
pop
jg
push
test
jmp
push
mov
adc
add
xchg
adc
add
std
shrl
cmp
push
add
dec
mov
add
and
add
add
jb
add
xchg
mov
clc
xchg
aaa
mov
add
clc
sbb
dec
rolb
outsl
repnz
add
arpl
add
int3
arpl
add
adc
add
add
pop
xlat
mov
or
clc
imulb
and
std
mov
add
fldl
add
add
inc
clc
cmp
add
add
add
enter
sarb
jno
add
imul
dec
mov
clc
fdivrl
xbegin
push
clc
sbb
roll
arpl
add
clc
cmp
clc
int3
cmpsl
clc
jae
add
clc
ret
jnp
clc
ds
add
sar
add
push
hlt
leave
out
in
cltd
mov
add
ja
pushl
add
clc
lahf
int
lret
and
add
add
dec
clc
inc
clc
dec
jle
pop
and
add
jno
add
add
adc
add
add
xchg
lcall
clc
sbb
add
add
clc
push
inc
clc
insl
mov
rcr
mov
neg
ret
clc
repnz
add
sub
adc
or
clc
jbe
cs
shr
cmp
jmp
clc
or
aaa
test
xchg
sar
clc
cmc
mov
aas
aam
or
lret
testb
cmp
mov
sbb
clc
cwtl
mov
sar
lock
add
add
sbb
pop
clc
enter
cld
mov
cmp
mulb
hlt
sub
add
add
fsubrs
mov
dec
jnp
ja
add
cmc
xchg
js
add
jg
clc
cmc
gs
adc
add
push
add
jmp
lret
lret
jnp
enter
mov
add
add
mov
daa
clc
es
aaa
stc
add
add
xor
pop
mov
insl
push
clc
sahf
arpl
add
add
clc
or
xchg
popf
fs
adc
add
clc
dec
addr16
pop
clc
test
and
aad
lret
push
xbegin
xor
add
clc
push
dec
push
pop
fiaddl
add
or
pop
or
mov
sub
add
add
das
fs
inc
clc
das
xabort
je
fstp
adc
xbegin
in
iret
leave
jno
add
mov
clc
jno
add
jp
in
sti
mov
mov
mov
clc
shl
clc
sub
arpl
add
add
daa
clc
mov
add
testl
add
nop
cli
dec
leave
adc
add
sar
pop
xor
add
mov
fs
inc
add
mov
ss
mov
sub
clc
js
addr16
adc
clc
sub
add
lret
clc
fldt
out
lahf
ljmp
idivb
add
scas
dec
adc
xchg
jecxz
addr16
ret
adc
add
add
jne
add
data16
mov
rolb
loopne
add
clc
mov
movsl
clc
in
push
add
add
add
fisttps
jge
das
adc
add
add
out
mov
add
clc
dec
repz
add
add
clc
jae
add
mov
clc
lret
sbb
lahf
adc
add
sti
or
das
sbb
ljmp
clc
test
sub
xor
add
add
popa
add
lcall
pusha
add
ret
lock
out
enter
clc
or
icebp
insb
xor
add
std
inc
add
test
xchg
jecxz
jne
clc
mov
push
add
in
mov
clc
add
add
clc
cmp
movsb
clc
jns
cmc
sarl
xbegin
loop
add
add
clc
mov
cmpsl
clc
test
stos
pop
repnz
in
adc
add
add
and
add
xchg
cmp
nop
fldcw
xchg
add
add
clc
cli
in
mov
dec
jecxz
sar
idivl
cmp
sti
mov
add
sbb
ret
clc
je
add
push
sti
sbb
mov
lret
dec
xchg
dec
fmul
xchg
outsb
push
cmpsb
clc
mov
add
and
add
add
add
rorl
add
add
clc
fidivrl
dec
or
clc
cmp
repz
movsl
clc
inc
add
aad
nop
pop
fs
pop
inc
add
fimull
fimull
push
add
add
jbe
add
mov
lret
add
xchg
sar
sbb
sahf
das
stos
push
add
or
clc
sar
js
xchg
lret
clc
xchg
repnz
jl
xor
add
mov
sbb
dec
push
adc
pop
xlat
and
add
xlat
adc
add
packsswb
add
add
add
mov
pop
adc
add
cld
int3
shlb
push
sahf
ret
xor
add
sub
clc
xchg
mov
add
and
add
clc
mov
add
sbb
push
icebp
bound
add
xor
pop
pop
jle
clc
cs
movsl
clc
jnp
add
mov
add
rolb
xor
add
cld
pop
xor
add
add
hlt
ja
xchg
pop
cmp
sub
insb
mov
clc
sub
clc
push
add
add
add
inc
clc
lea
mov
clc
jb
add
imul
xchg
fdivl
sarb
lret
xchg
pop
clc
in
call
add
std
add
add
add
add
enter
xchg
outsb
cltd
sahf
push
xchg
cmp
and
add
lods
xor
add
xchg
push
std
daa
clc
lret
cmc
pop
mov
psllq
clc
inc
clc
nop
shrl
or
add
sar
jg
dec
clc
es
inc
add
rorb
push
ret
div
or
add
shl
pop
mov
push
add
icebp
or
sti
icebp
iret
daa
clc
inc
add
jg
loopne
ljmp
add
mov
add
add
sub
popf
xbegin
clc
popa
add
jmp
clc
add
add
push
mov
mov
push
add
adc
add
xor
add
scas
jne
jp
add
cmp
pop
inc
add
jae
add
inc
clc
cmp
scas
ficoml
clc
add
add
clc
jl
dec
das
adc
add
mov
repz
shlb
inc
add
clc
ret
cs
mov
stc
sbb
xchg
add
insb
xor
add
push
mov
es
jne
lods
aaa
inc
clc
inc
clc
pop
cmp
inc
add
add
add
clc
movsl
clc
leave
cmp
and
add
clc
ljmp
sahf
lret
mov
lods
add
add
add
fs
jp
clc
movsl
clc
sub
add
push
add
js
add
out
data16
push
jle
cmp
aaa
sar
cmp
clc
jle
push
add
sub
xchg
lcall
stos
mov
clc
lret
sub
add
inc
add
mov
test
mov
mov
in
fwait
loop
push
add
scas
xchg
cmpsl
clc
cmp
clc
mov
add
cmp
clc
mov
out
movsl
clc
mov
pop
ret
clc
pushl
add
lret
ret
clc
push
clc
pop
jae
add
mov
add
add
add
add
xor
sub
mov
cmp
js
clc
popa
add
jno
add
xabort
and
add
stos
jo
add
or
jge
js
add
xchg
jno
add
add
mov
mov
clc
hlt
imul
clc
fs
fisubrl
insl
push
insl
dec
mov
xchg
add
add
add
sbb
jge
pop
fmuls
add
xchg
in
ds
ljmp
outsb
xchg
mov
add
add
clc
loop
clc
sub
cli
xchg
fs
mov
clc
cmc
out
cmp
sub
adc
add
fidivl
add
push
xor
add
cmp
mov
movsb
clc
call
cmp
clc
imul
xchg
adc
add
add
clc
dec
repz
clc
lahf
lahf
cmp
test
xchg
fsubs
add
pop
imul
imul
xor
fnsave
ret
clc
scas
fistl
mov
mov
leave
pop
sbb
clc
xabort
clc
loop
push
clc
nop
sbb
pop
clc
cmpsl
clc
push
jb
add
inc
add
inc
clc
in
outsb
jbe
clc
mov
clc
in
scas
test
ss
lahf
movsl
clc
cltd
sar
clc
fstps
mov
pop
or
inc
clc
sbb
xor
add
inc
add
mov
mov
clc
sbb
loope
mov
sbb
clc
xor
add
add
fbstp
and
add
aas
repnz
add
jecxz
jge
nop
call
clc
mov
inc
clc
testl
es
sbb
add
inc
add
or
jno
add
adc
add
add
pushl
jo
add
xor
lret
aad
ljmp
lcall
mov
adc
add
mov
add
pop
cmp
push
add
repz
add
fidivrl
clc
test
movsl
clc
jle
test
xchg
sbb
clc
inc
add
call
clc
xor
add
out
and
add
add
idivl
clc
rcrl
out
jmp
call
clc
jge
cmc
dec
movsl
clc
add
add
add
sub
clc
xlat
or
test
add
loope
aad
add
xchg
popf
imul
call
add
sub
jl
dec
adc
add
int
lahf
mov
pop
in
inc
clc
fildll
dec
outsl
dec
sar
addr16
and
add
adc
in
sub
clc
sar
mov
clc
lahf
mov
mov
clc
and
add
pusha
add
es
popa
add
mov
cmp
adc
add
clc
dec
into
adc
add
mov
clc
inc
clc
add
jge
jle
add
lock
add
clc
ja
add
gs
or
add
clc
mov
xchg
fstl
add
xor
and
add
popf
addr16
aaa
sub
adc
add
jg
fcoml
cmp
xchg
push
es
inc
clc
and
add
mov
xchg
xabort
gs
outsb
mov
add
dec
ret
add
xchg
fcomps
jne
clc
enter
add
scas
mov
sbb
sar
clc
lcall
icebp
xchg
and
add
mov
clc
mov
push
aas
push
psubusb
add
add
xchg
popf
stos
stos
mul
clc
cli
imul
jg
jno
add
jnp
clc
xchg
adc
add
clc
cmc
mov
add
cmp
add
add
lea
sub
and
add
add
dec
data16
cmc
das
xchg
xor
add
ret
clc
cmp
clc
jne
clc
adc
add
add
addr16
clc
mov
clc
jmp
ja
or
clc
icebp
add
add
iret
xchg
cmpsl
clc
cmp
xor
clc
ss
add
cs
cmp
add
add
add
add
int
adc
add
loop
dec
push
ljmp
into
jg
sahf
lea
mov
hlt
insb
arpl
add
aad
clc
pop
inc
clc
xchg
sbb
add
add
push
add
jbe
clc
dec
mov
adc
aad
clc
mov
clc
cmp
add
das
cwtl
int3
icebp
xchg
lods
jb
add
mov
add
shll
add
adc
add
pminsw
mov
add
lcall
add
pop
loopne,pt
fsubr
stos
jle
pusha
add
notl
add
add
sub
es
xor
add
push
adc
cs
add
sti
ds
clc
jo
add
clc
and
pop
sbb
fstpl
pusha
add
sahf
mov
out
inc
clc
xchg
cs
or
xor
add
pop
bound
add
add
add
test
pop
push
add
loopne
repnz
adc
jmp
xchg
and
add
add
sub
clc
data16
iret
cmp
add
clc
xchg
ret
or
push
add
or
clc
xlat
push
clc
out
cmc
sti
or
xor
add
add
mov
in
mov
clc
mov
push
and
cmpsb
clc
jl
lea
fisubrs
cmpsb
clc
mov
cmp
cmp
dec
pop
xchg
mov
xchg
xchg
std
xchg
xlat
xabort
sarl
clc
inc
clc
cmp
sbb
pop
imul
gs
xor
add
aaa
and
add
clc
fstpl
add
mov
testb
clc
sar
clc
mov
xor
add
mov
notl
clc
mov
add
mov
xchg
loopne
call
push
and
add
lahf
mov
mov
icebp
test
add
add
add
xchg
jge
ret
clc
lcall
roll
add
add
fnstsw
cmp
clc
cmp
sar
add
bound
add
dec
daa
clc
jecxz
mov
add
test
add
sbb
jle
stc
mov
clc
add
add
clc
inc
clc
adc
arpl
add
clc
clc
add
add
dec
add
pop
jg
popa
add
ds
in
daa
clc
in
popa
add
xchg
cmp
add
fisttpll
pop
ret
ja
fisubrl
clc
cli
xbegin
jnp
nopl
add
call
xchg
push
mov
add
clc
cltd
gs
data16
addr16
notb
add
xchg
mov
into
lret
add
pushf
in
mov
je
aad
clc
outsl
dec
popa
add
xlat
inc
clc
aas
leave
fisubl
daa
clc
xchg
call
or
lret
push
xabort
clc
push
ljmp
cmp
clc
xchg
cmp
lcall
clc
adc
jno
add
clc
std
loop
ja
add
add
popl
imul
inc
clc
pop
cmp
mov
mov
inc
clc
aas
mov
mov
clc
sar
clc
test
clc
jmp
mov
xor
add
clc
lahf
jle
pop
sar
in
jge
cwtl
leave
pop
and
add
add
pop
and
add
and
add
mov
push
cmp
popa
add
dec
mov
clc
sub
add
fcoml
fdivs
add
jp
jb
add
clc
aad
clc
push
add
clc
xchg
pop
jge
stc
loop
mov
push
add
shrb
fs
mov
add
add
add
mov
data16
ret
lahf
sub
sar
repz
sbb
add
clc
adc
imul
das
roll
stos
cmp
sar
clc
imul
sub
clc
xabort
loope
mov
lcall
xor
add
add
add
xchg
rcll
add
enter
mov
clc
cmpsb
clc
sar
sbb
int
sub
xchg
sar
pop
clc
aas
lcall
clc
ja
pop
icebp
and
add
pop
mov
xbegin
clc
sbb
xor
add
out
adc
add
add
sub
enter
xchg
xor
add
cli
mov
mov
xor
push
push
add
xor
add
sub
mov
add
dec
pop
sbb
and
add
add
stos
xchg
call
clc
popf
lahf
rcrb
inc
clc
jb
add
jo
add
mov
add
xchg
mov
scas
adc
add
add
sbb
add
arpl
add
clc
pop
sub
xor
add
clc
dec
ret
clc
cmpsl
clc
icebp
jecxz
mov
push
xchg
pop
mov
loopne
push
add
rorb
test
add
dec
adc
add
sbb
lods
cmp
clc
or
add
mov
xor
clc
emms
aaa
out
loop
fldl
fcoml
scas
xbegin
clc
popf
testb
ljmp
int
imul
clc
fcmovu
fcom
in
daa
clc
daa
clc
pop
ret
cwtl
xor
in
pop
mov
in
lret
adc
add
add
cmp
clc
push
clc
sub
scas
dec
cmp
or
xor
add
inc
add
lret
clc
fs
sub
adc
add
mov
imul
mov
clc
xlat
mov
add
mov
sbb
jl
mov
inc
add
hlt
int3
dec
xor
add
add
lods
jp
imul
cmp
add
pop
testl
and
add
mov
or
pop
cmp
clc
push
lcall
dec
sub
add
inc
clc
outsl
fstps
sub
lods
test
and
cmp
dec
mov
jmp
popf
cmp
cmp
clc
in
fcmovu
int
mov
add
fs
sbb
clc
jmp
add
push
clc
add
push
add
into
jg
cmp
clc
lret
cmp
add
jp
stos
negl
loopne
lahf
pop
xlat
or
sbb
cmp
aas
mov
add
or
dec
in
aas
insl
test
xor
in
pop
fildll
ret
scas
sar
or
add
sbb
lea
clc
mov
imul
clc
pop
int
fildl
daa
clc
jae
add
cmp
and
jmp
add
add
add
clc
ja
out
push
movsb
clc
inc
clc
stos
scas
fs
and
ret
clc
xor
clc
fsubrs
mov
adc
add
mov
mov
add
adc
clc
sbb
add
in
push
add
nop
cmp
cwtl
push
add
dec
mov
insl
xlat
lret
adc
add
clc
in
in
lods
repnz
clc
mov
push
push
cmc
cmp
mov
fcos
xabort
lea
push
add
push
add
cli
mov
clc
and
add
arpl
add
clc
int
push
mov
mov
vcomiss
mov
psllq
jge
mov
cmp
clc
out
jle
add
lods
mov
roll
add
clc
repnz
fcmovne
dec
mov
add
xchg
test
add
sbb
clc
fs
fsubrl
sar
xchg
xabort
clc
mov
xor
clc
fidivl
data16
incb
jp
clc
imul
fists
add
add
add
inc
clc
rol
clc
xlat
ret
clc
adc
add
std
pusha
add
gs
iret
xor
add
inc
add
xor
add
data16
clc
into
lret
mov
scas
in
mov
clc
mov
jno
add
clc
jmp
js
sub
clc
mov
add
sub
add
xchg
or
out
xabort
rol
clc
fimuls
clc
sbb
add
and
add
add
xor
add
mov
aad
clc
pop
jl
sar
in
test
push
inc
clc
xchg
test
dec
int
xchg
movsb
clc
jae
add
fmull
clc
mov
clc
lock
lods
dec
sbb
sub
jge
xor
add
loope
jge
cmp
in
and
jg
movsl
clc
insl
or
dec
ret
fiaddl
add
sbb
sahf
mov
push
loop
xabort
std
pushf
or
std
cld
imul
fsubs
clc
add
mov
xchg
mov
add
inc
add
dec
ss
popf
into
stos
enter
fists
clc
in
leave
cld
mov
mov
cmpsb
clc
xchg
xor
push
clc
cmp
add
mov
jno
add
clc
out
dec
mov
pop
sbb
inc
clc
sub
and
add
ret
xchg
push
add
push
ds
dec
xor
add
icebp
add
add
and
add
enter
mov
clc
cmp
push
add
sub
movsl
clc
and
add
add
fcmovb
clc
lahf
xchg
in
scas
push
test
adc
add
push
clc
mov
inc
clc
sub
sbb
xabort
cmp
push
es
push
add
aaa
imul
mov
clc
push
add
fsubrs
add
pop
jb
add
xor
add
add
mov
jmp
jl
mov
clc
pop
faddl
add
add
in
pop
dec
push
add
add
add
jno
add
add
add
aas
sbb
clc
and
mov
clc
xchg
sbb
aas
inc
add
test
add
int
repnz
clc
in
jl
add
push
add
and
add
cmpsl
clc
dec
data16
shlb
addr16
or
push
pop
ret
xchg
in
mul
clc
loopne
and
add
add
clc
jae
add
sub
pop
out
xor
add
loopne
test
and
add
into
cld
pop
outsb
adc
add
add
add
pop
xor
clc
aad
repnz
clc
inc
add
cmp
push
lods
mov
xchg
sub
dec
testl
add
xbegin
jae
add
add
adc
add
pop
das
enter
clc
test
xchg
inc
clc
inc
clc
out
in
xbegin
out
clc
sub
leave
pop
std
out
hlt
wbinvd
push
pusha
add
mov
call
clc
sub
aas
sub
insb
dec
mov
icebp
notl
aaa
shlb
sub
clc
hlt
jno
add
lods
mov
test
pop
inc
clc
pusha
add
push
data16
int3
repnz
stc
pop
and
dec
add
mov
bound
add
add
add
add
inc
clc
xor
add
add
pop
stos
mov
sbb
cld
data16
pop
mov
lahf
sub
sub
mov
add
daa
clc
call
clc
dec
xchg
hlt
dec
lahf
data16
pop
pop
clc
fnstenv
mov
lret
filds
add
cmp
xbegin
popa
add
or
lea
clc
je
mov
inc
add
xchg
push
leave
ljmp
and
add
clc
jle
stc
ds
sahf
nop
mov
clc
mov
int
and
enter
and
add
add
inc
clc
inc
clc
mov
and
add
xchg
cmp
out
cmp
fistpl
cmp
mov
mov
dec
cs
out
pop
adc
add
jl
clc
or
in
gs
pop
mov
add
imul
add
clc
jge
inc
add
cmp
clc
clc
and
add
jbe
mov
adc
add
sbb
add
sbb
out
out
outsb
cli
out
nop
sub
clc
mov
clc
push
aad
aam
outsb
and
xchg
lret
adc
icebp
int
clc
ljmp
add
out
mul
clc
add
addr16
clc
jne
inc
add
mov
pop
data16
pop
ret
clc
scas
je
clc
das
cmc
inc
add
adc
add
sub
clc
ret
mov
cmp
addr16
daa
clc
hlt
jns
add
pop
mov
add
add
clc
dec
dec
lret
add
clc
pushf
lock
cmp
loop
pop
mov
shll
rcrl
test
sub
mov
inc
clc
imul
or
add
insl
mov
cmp
clc
mov
clc
xor
add
clc
push
xor
add
test
out
movsb
clc
imul
pop
cs
lcall
clc
mov
arpl
add
dec
sbb
add
add
add
push
jb
add
clc
or
clc
mov
mov
sahf
mov
bound
add
test
add
add
gs
popf
cmp
pop
mov
ret
clc
stos
mov
das
and
movsb
clc
mov
add
int
outsl
xchg
icebp
mov
dec
mov
adc
add
clc
xor
add
add
add
clc
jg
leave
cmp
and
add
mov
dec
sub
pop
in
rcl
arpl
add
clc
mov
stos
out
xor
add
add
add
popf
data16
xchg
mov
adc
dec
aam
xchg
arpl
add
add
cmp
clc
push
cwtl
insb
out
popf
sti
xor
add
jecxz
mov
movsb
clc
cmp
inc
clc
push
add
mov
and
add
xor
fcomp
sbb
popa
add
test
or
xchg
sbb
add
outsl
push
add
add
add
lods
inc
clc
xchg
xlat
xabort
scas
xchg
lcall
clc
lcall
adc
add
test
add
in
dec
xlat
je
jmp
xchg
ret
clc
in
popf
mov
fbstp
in
mov
dec
ljmp
scas
or
mov
out
mov
clc
fisubs
add
int
clc
push
mov
add
add
mov
pop
sti
pop
dec
dec
ss
clc
adc
add
clc
ss
icebp
cmp
add
xchg
jle
jb
add
add
cmp
fiadds
xchg
mov
clc
jge
add
add
sbb
add
add
clc
xor
add
inc
clc
repz
gs
xor
add
clc
sub
mov
or
mov
add
popf
outsb
or
xor
add
xor
add
addr16
add
jb
add
xlat
push
ss
add
jmp
xchg
jmp
push
xchg
fildll
xchg
hlt
in
fnsave
jg
sar
mov
clc
mov
jecxz
outsb
adc
add
clc
or
pop
pusha
add
adc
add
xbegin
dec
adc
add
add
fnstsw
mov
add
fstps
add
push
je
cmp
add
lods
sbb
fists
push
and
add
add
adc
add
clc
mov
add
sahf
push
jg
add
pop
inc
add
pop
clc
dec
push
push
clc
lret
sahf
cmp
clc
xor
or
cmpsb
clc
lea
pop
mov
fs
pop
pop
popa
add
inc
add
mov
sti
cmp
pop
jecxz
dec
rol
clc
loop
xor
add
add
clc
inc
add
cmp
fs
fwait
adc
add
mov
push
call
clc
int
cld
loope
fiaddl
add
es
test
mov
fcmovb
clc
mov
add
push
lods
or
mov
xor
add
pop
rolb
add
jbe
jg
add
inc
add
mov
add
dec
jo
add
pop
push
add
bound
add
inc
clc
cmc
add
add
sub
add
add
clc
pop
jnp
add
pusha
add
inc
add
lcall
mov
xor
add
dec
adc
adc
into
mov
cmp
clc
imul
pop
or
add
cmp
add
clc
push
mov
cwtl
push
insl
sub
imul
clc
pusha
add
imul
fs
dec
fistps
jb
add
lea
cmp
or
add
pop
clc
cmp
fisttpl
or
add
stos
pop
sahf
jb
add
pop
das
push
clc
inc
add
mov
lea
pop
das
repnz
call
and
add
clc
xor
add
clc
jmp
sub
clc
ds
clc
arpl
add
enter
stc
lret
enter
clc
fs
mov
jg
bound
add
add
imulb
sti
or
pop
nop
popa
add
aas
insb
imul
iret
lcall
jl
xor
add
add
cmc
loopne
mov
gs
xlat
arpl
add
xor
add
add
add
dec
sub
xchg
lock
pushf
cmpsl
clc
js
fdivrl
out
mov
sar
mov
int3
loopne
jp
add
into
or
and
add
jb
add
nop
push
or
clc
ljmp
xchg
pusha
add
inc
add
bound
add
add
xor
add
add
clc
xchg
in
loopne
dec
inc
clc
cmp
fcompl
rep
mov
add
cmp
fstpl
sub
push
add
jns
add
cmp
xchg
mov
add
lcall
push
dec
push
add
clc
dec
and
add
mov
sbb
sbb
xlat
mov
add
xor
add
add
pusha
add
xchg
sbb
mov
mov
sbb
mov
add
add
pop
cltd
divl
inc
add
cmp
sarl
clc
or
dec
xabort
clc
mov
cmpsl
clc
scas
jbe
clc
xor
add
add
clc
insb
mov
clc
pushf
push
mov
add
ljmp
dec
xor
add
xchg
decl
add
and
clc
xchg
mov
lea
add
sbb
clc
pop
clc
int
clc
movsl
clc
gs
outsl
fsub
clc
sub
clc
pop
or
push
add
push
pusha
add
lods
xchg
repz
rorb
pop
mov
add
mov
clc
sbb
cli
out
jno
add
sar
jle
mov
mov
or
adc
add
add
add
test
popf
sar
cs
int
xabort
clc
jnp
pop
fidivl
or
add
mov
add
add
fists
clc
push
add
cld
cmp
add
add
and
ja
add
rol
clc
stos
adc
add
icebp
lods
dec
daa
clc
out
cmp
inc
add
pushf
fcmovnu
cwtl
pusha
add
loope
cs
add
rorb
sbb
inc
clc
iret
dec
fldl
add
add
aad
add
scas
in
cld
jmp
add
xchg
mov
pusha
add
xchg
add
mov
jge
add
jo
add
clc
or
into
mov
push
add
outsb
fbstp
add
push
xchg
bound
add
xchg
push
dec
lcall
out
nop
das
cmp
lcall
sub
lcall
into
ret
add
add
mov
add
call
xchg
adc
add
and
clc
addr16
fimuls
loopne
xchg
call
add
imul
lea
add
push
mov
push
iret
sub
jl
add
sar
fadds
clc
mov
inc
add
sbb
push
add
movsl
clc
add
add
in
pop
mov
clc
fs
jns
sahf
fucomip
fnstcw
pop
inc
add
adc
add
sbb
movsb
clc
int3
push
stos
fidivrl
lock
xchg
sahf
fsubrl
add
clc
leave
push
add
clc
rcr
sar
ret
rorb
or
clc
sub
cli
jo
add
add
fsub
clc
idivl
cmpsb
clc
mull
cmpsb
clc
in
and
add
mov
xchg
lods
imul
push
adc
add
test
add
ret
mov
add
jmp
clc
enter
clc
mov
xchg
std
sub
jae
add
clc
fmull
pushf
adc
clc
int
clc
jmp
push
data16
push
add
icebp
scas
xchg
mov
add
ret
ret
pushf
mov
add
xchg
mov
dec
test
adc
add
clc
xchg
lods
cs
pop
nop
pop
iret
mov
clc
sub
add
clc
adc
add
cmp
clc
add
stos
fnstsw
or
mov
add
mov
lock
sbb
add
and
add
cmp
sbb
jge
lods
jbe
fisubrs
cmpsl
clc
jge
in
mov
clc
jg
ud1
adc
add
xchg
clc
nopl
add
or
add
xor
add
xchg
int3
popa
add
std
adc
pop
inc
clc
and
add
adc
loop
or
add
add
int3
and
loope
mov
and
add
clc
bound
add
push
add
pop
xor
add
mov
xbegin
clc
pushl
clc
pop
outsb
sbb
bound
add
std
ljmp
clc
add
sub
push
movsl
clc
sbb
xchg
xchg
jge
xor
add
test
cmp
add
adc
clc
inc
clc
and
add
add
push
outsl
xchg
sub
mov
cld
popa
add
jne
mov
clc
cmp
clc
mov
add
test
loope
fisttpl
roll
clc
cltd
adc
test
movsb
clc
cmc
mov
add
adc
add
leave
call
loopne
gs
sbb
mov
push
add
cmpsb
clc
lods
sahf
mov
add
fwait
mov
enter
clc
es
ss
in
sub
add
data16
fsubrs
clc
cmp
inc
clc
mov
and
add
cmp
clc
jno
add
xchg
das
gs
dec
leave
out
adc
add
clc
push
add
or
add
clc
sar
fs
push
clc
cmp
iret
xlat
in
jmp
in
lods
enter
daa
clc
add
clc
dec
sub
add
xor
add
mov
ljmp
repnz
adc
add
clc
xchg
into
dec
bound
add
and
add
add
iret
xchg
imul
add
sub
push
popl
add
sub
or
out
mov
adc
fbld
add
daa
clc
xlat
mov
clc
ds
pushf
in
test
push
xor
add
shll
add
repnz
inc
clc
out
lock
add
test
js
clc
dec
jg
clc
clc
movsbl
clc
roll
aam
aad
cmpsb
clc
and
add
clc
cwtl
cmc
sub
or
clc
push
add
jb
add
push
add
adc
add
addr16
into
lods
sbb
mov
rol
clc
movsl
clc
sti
call
mov
add
xchg
jmp
push
and
pop
clc
shrb
push
inc
clc
xchg
jb
add
xor
clc
add
lods
mov
inc
add
dec
fstpt
pop
clc
scas
std
mov
cmp
push
test
scas
sbb
sub
mov
add
mov
cmp
add
fwait
ret
clc
cmp
flds
sub
and
add
sbb
out
and
add
and
adc
add
int
rcrb
jne
cmc
cmpsb
clc
jg
clc
xor
add
add
pop
or
dec
test
adc
cmp
clc
dec
adc
add
jl
mov
clc
dec
pop
stos
mov
ror
dec
xbegin
add
mov
lods
pop
clc
jmp
cmp
fwait
pop
sbb
add
out
cld
adc
cmovbe
fcmovb
clc
sub
xlat
imul
mov
into
mov
adc
add
jp
loop
loope
dec
sub
clc
sbb
and
add
add
xchg
push
popa
add
push
out
pop
mov
clc
rclb
add
add
in
sbb
clc
cmpsl
clc
xbegin
adc
add
clc
cmp
xchg
jg
clc
adc
add
lods
push
stos
or
add
pop
adc
add
test
mov
add
notb
incl
jp
clc
pop
xor
add
jg
in
sub
bound
add
lods
xor
add
clc
mov
clc
inc
clc
xor
add
xchg
sbb
inc
clc
call
add
sar
mov
jp
sbb
inc
clc
xchg
xchg
arpl
add
arpl
add
sbb
cmp
add
repz
sbb
clc
dec
cwtl
sbb
or
add
or
add
push
clc
push
add
test
mov
push
add
or
clc
ljmp
pop
ret
clc
jbe
test
insl
mov
jmp
cmp
dec
out
adc
add
cs
or
clc
movsl
clc
push
add
dec
sbb
sti
add
add
mov
or
add
clc
clc
mov
add
leave
mov
jle
add
in
jb
add
daa
clc
or
jle
push
or
inc
clc
jb
add
clc
movsb
clc
ds
das
hlt
fildll
in
jg
cmpsb
clc
sti
xchg
xchg
mov
scas
jbe
add
lock
repnz
xlat
jns
xor
add
adc
add
clc
xchg
loopne
push
push
add
hlt
adc
pop
cmpsb
clc
jge
sbb
xchg
jmp
add
add
add
add
add
cmpsb
clc
hlt
ja
clc
jecxz
std
dec
iret
loopne
adc
add
clc
inc
clc
add
add
aas
push
add
mov
mov
stc
and
out
cmp
push
mov
clc
dec
imul
lret
mov
dec
cmp
dec
ja
aaa
mov
bound
add
mov
adc
add
mov
mov
cli
xabort
add
jno
add
add
dec
aam
cld
sbb
iret
pop
clc
jnp
xchg
jnp
xchg
outsl
popa
add
mov
jns
inc
clc
pop
xchg
std
and
add
xabort
pushf
test
jbe
mov
add
aas
mov
mov
clc
cmp
pop
inc
add
inc
add
dec
arpl
add
aaa
fs
mov
addr16
pop
clc
pop
xbegin
stos
add
add
ljmp
out
fadd
clc
clc
insb
jge
arpl
add
fwait
outsl
aad
add
fs
mov
push
inc
add
inc
add
out
dec
jb
add
add
and
add
cli
je
adc
add
enter
scas
xchg
clc
dec
loope
xchg
and
add
add
ds
xor
add
adc
add
call
xor
add
xchg
inc
clc
xor
add
clc
mov
adc
fwait
out
mov
fldcw
add
add
add
ja
sub
pop
test
mov
aad
adc
add
mov
add
jns
mov
fidivrs
into
ret
cmp
icebp
aas
data16
xchg
cmp
push
xchg
notl
sub
rol
clc
cmp
add
arpl
add
add
dec
shrl
filds
add
sbb
add
add
clc
add
add
or
and
add
and
add
loop
clc
add
add
add
nop
daa
clc
sar
aam
clc
jne
xlat
mov
clc
xchg
pop
mov
pop
xchg
mov
test
jp
mov
clc
sbb
das
add
add
inc
add
mulb
add
popl
add
clc
dec
jne
xlat
jp
rclb
jle
add
jno
add
pop
test
cli
enter
add
pushf
pop
mov
add
sub
clc
add
das
ds
inc
clc
decl
mov
movsb
clc
daa
clc
push
mov
sub
inc
clc
dec
repnz
cmp
adc
add
faddl
add
mov
pop
clc
or
xor
add
add
and
add
add
imul
clc
sub
clc
pushf
jnp
popa
add
pop
xor
add
add
pop
popf
out
aaa
test
fimuls
xchg
mov
add
cmp
mov
clc
in
cmp
cmp
clc
adc
mov
sbb
push
cmpsl
clc
test
clc
rorl
xor
add
add
mov
add
or
push
add
pop
xchg
out
cli
jno
add
add
clc
repnz
clc
out
in
outsl
fwait
sbb
add
add
mov
roll
add
add
mov
cmp
pusha
add
mov
mov
outsl
mov
lods
jbe
jmp
mov
leave
cmp
clc
gs
sub
imul
cmp
mov
mov
lret
adc
add
add
inc
add
loope
fld
clc
das
xchg
pop
push
add
lcall
adc
add
add
out
dec
out
mov
jae
add
add
clc
jge
adc
clc
std
cmp
clc
and
add
clc
movsl
clc
and
add
push
xor
add
popf
cmc
xchg
cmp
std
cmp
xor
add
dec
push
sub
clc
into
inc
clc
push
add
aas
xchg
push
fwait
pop
cmpsb
clc
insl
cs
fsubrs
adc
add
mov
faddl
cwtl
lea
out
int
jg
add
ficoml
add
pop
clc
loop
push
sti
cltd
push
frstor
clc
fs
clc
jmp
pop
cmp
add
cmp
pop
cmp
add
movsl
clc
push
imulb
add
add
in
into
lea
clc
pop
sbb
or
mov
aad
fstpl
xchg
in
js
add
push
add
clc
loop
fs
jg
outsl
mov
inc
clc
sti
mov
roll
mov
clc
jb
add
hlt
aaa
pop
ja
scas
das
ret
clc
jl
jne
jecxz
inc
clc
bound
add
sbb
fadd
clc
dec
pop
push
mov
lcall
stos
cld
hlt
pop
scas
push
cmp
clc
sub
ficoms
add
add
mov
jecxz
sub
in
addr16
pop
dec
insb
xor
add
aad
add
dec
clc
cmp
xlat
imul
add
mov
mov
pop
push
lret
dec
stc
mov
clc
ret
sar
add
es
shrb
add
int
leave
fmull
mov
in
push
clc
popa
add
clc
and
add
add
add
pop
fcoms
add
xbegin
add
leave
arpl
add
clc
mov
or
clc
sbb
add
mov
and
sbb
add
into
sbb
clc
pop
mov
add
cmp
add
bound
add
add
push
pop
ja
clc
mov
push
cmp
scas
mov
incb
xor
add
add
addr16
mov
sub
add
sbb
xchg
xchg
insl
pop
mov
inc
add
cmp
add
push
mov
clc
mul
clc
add
mov
add
inc
clc
cmp
clc
cmp
clc
daa
clc
scas
xchg
dec
cmp
add
mov
mov
imul
or
add
into
add
add
dec
fld
clc
or
ret
clc
mov
data16
add
add
xchg
xor
add
add
mov
arpl
add
add
clc
loop
cli
mull
clc
nop
cmp
cmpsb
clc
aas
je
clc
int3
pop
pop
mov
je
clc
mov
cmp
hlt
inc
clc
movsl
clc
dec
aam
mov
xchg
add
sub
cmp
add
loop
xabort
mov
fnop
comiss
clc
loop
cmp
add
add
test
and
add
add
xor
add
add
xchg
mov
xor
add
daa
clc
gs
inc
clc
add
mov
add
call
sub
stos
lods
scas
movsl
clc
mov
insb
adc
add
add
jno
add
clc
add
add
clc
inc
add
add
push
clc
cmp
fistpl
out
mov
test
outsl
loope
jmp
inc
clc
fnstsw
incl
add
add
scas
mov
adc
add
xor
add
and
add
clc
dec
jecxz
pop
jge
clc
inc
clc
mov
xchg
cmpsb
clc
mov
or
in
insb
dec
inc
add
sbb
cmp
xchg
adc
add
clc
sar
cmp
adc
dec
or
add
iret
icebp
push
add
jns
add
in
ljmp
add
sar
clc
mov
and
add
inc
clc
sbb
or
adc
jge
inc
add
int3
sbb
add
mov
add
add
add
test
pop
mov
cwtl
xchg
pop
sub
mov
fnstsw
clc
jge
pop
cmp
push
mov
dec
mov
add
jp
add
scas
stos
xor
mov
and
add
add
jp
clc
ja
int
xchg
jmp
negb
cli
in
stos
jne
insb
icebp
cmp
dec
jmp
clc
pop
add
mov
add
add
dec
mov
pop
cmp
or
pop
clc
int3
mov
jmp
xchg
xor
add
jp
roll
clc
push
inc
clc
clc
sub
mov
dec
push
clc
xor
clc
inc
add
js
mov
clc
out
mov
ss
add
or
add
in
ficoms
movsl
clc
daa
clc
rorb
jns
in
fs
pop
ret
jnp
insb
hlt
sub
clc
mov
jge
clc
popa
add
cmp
add
aas
test
out
xabort
mov
mov
push
push
add
or
xbegin
add
dec
mov
loope
test
ss
jno
add
clc
fnstsw
jae
add
lock
add
jmp
add
add
mov
sub
int
sbb
add
loope
sbb
movsb
clc
fxch
or
sbb
cmpsl
clc
test
add
xchg
dec
daa
clc
cmp
adc
add
clc
outsb
inc
clc
jecxz
sbb
add
flds
jne
loop
cmp
ja
mov
mov
clc
jae
add
clc
fsubr
std
mov
sahf
dec
adc
add
add
clc
lret
fst
inc
add
neg
jmp
and
add
daa
clc
pop
in
lcall
gs
pop
in
xor
dec
aas
push
xor
mov
dec
cmp
jle
adc
add
dec
mov
inc
add
xlat
sub
clc
pop
sbb
clc
add
pcmpeqd
add
loope
cmp
insb
rcll
add
clc
pop
fwait
mov
out
mov
pop
clc
call
inc
clc
push
lcall
dec
ljmp
clc
pop
mov
push
push
mov
clc
push
fucomip
jmp
add
pop
sub
add
clc
cmp
clc
mov
add
cmpsb
clc
jl
add
hlt
test
faddl
add
add
mov
movsl
clc
jl
imul
or
adc
add
add
loopne
stos
stos
movsb
clc
fstpl
push
add
cld
popa
add
in
inc
add
data16
negl
ficompl
xor
add
mov
pusha
add
push
push
pop
push
add
icebp
dec
leave
xchg
inc
add
mov
inc
add
mov
xor
add
mov
add
push
clc
add
lock
add
jb
add
lods
sbb
clc
or
dec
mov
add
mov
clc
dec
and
add
sbb
jmp
in
out
xbegin
clc
outsb
lcall
clc
sbb
add
mov
push
cltd
xor
lret
or
clc
leave
insb
test
enter
outsb
ss
mov
mov
cmp
shll
add
add
aam
pop
scas
rorl
out
sar
loopne
imul
add
fs
jmp
xor
add
aaa
popf
cmp
ds
out
and
clc
add
add
in
or
jl
sti
popf
mov
in
jnp
clc
aas
mov
clc
pop
pop
pop
sbb
negb
clc
xor
add
bound
add
xlat
clc
pop
push
xor
sub
add
lahf
jmp
clc
pop
xchg
cmp
add
add
add
lods
xchg
cmp
or
or
dec
pop
out
xchg
add
inc
clc
adc
mov
aas
push
clc
test
popa
add
loope
aas
sahf
leave
dec
jb
add
clc
push
aam
shlb
add
lret
clc
mov
pushf
cltd
out
xchg
xchg
and
xor
add
clc
pop
aad
add
and
ret
clc
pop
xor
add
clc
daa
clc
dec
fs
dec
ljmp
aam
add
add
call
and
add
add
add
in
add
cmp
add
clc
pop
loop
out
vminps
add
mov
test
mov
add
push
mov
and
add
clc
inc
clc
loop
fidivs
bound
add
adc
add
mulps
ret
add
add
add
cmpsb
clc
add
add
clc
fwait
ret
clc
pop
push
lock
adc
mov
clc
jg,pn
insl
divl
add
or
test
hlt
testl
clc
mov
cmp
adc
add
push
add
ja
call
clc
inc
add
inc
clc
mov
xor
add
fsubs
gs
jae
add
sub
clc
loope
sbb
enter
pop
daa
clc
push
out
mov
clc
push
add
lea
add
mov
clc
adc
push
ds
in
and
add
clc
test
inc
add
fsubl
mov
xor
add
add
xchg
mov
add
cs
dec
ss
adc
add
xchg
in
scas
pusha
add
mov
mov
mov
into
and
add
add
inc
add
push
clc
mov
mov
lods
clc
cmpsl
clc
jmp
mov
cmp
clc
popf
mov
add
lahf
in
push
fs
lock
add
or
inc
add
imul
add
add
test
in
push
xchg
cmp
clc
or
clc
sbb
add
add
fbstp
fs
mov
add
fs
mov
clc
fstp
fistpl
add
cli
aad
clc
or
clc
mov
add
add
cltd
hlt
mov
inc
clc
inc
add
xchg
call
test
cmp
xlat
fistpl
fidivrl
clc
dec
add
pop
loope
cmp
sub
add
jno
add
popa
add
mov
push
add
jge
clc
leave
roll
mov
scas
mov
push
add
mov
xlat
inc
add
in
push
out
pop
cwtl
jno
add
clc
data16
push
clc
mov
fstpt
test
add
push
push
ret
clc
ljmp
pop
cmpsb
clc
jo
add
add
sar
loopne
repnz
mov
add
or
xbegin
jb
add
add
inc
add
add
add
leave
movsb
clc
push
add
fwait
xor
add
jne
dec
mov
clc
mov
add
jecxz
testb
clc
fmull
shrb
neg
aas
sbb
sbb
cmp
push
pop
push
out
std
jae,pn
add
xchg
and
add
add
add
add
shll
clc
clc
or
and
add
cmpsl
clc
dec
ret
clc
js
xchg
pop
jnp
add
roll
add
clc
in
xbegin
mov
mov
add
jl
out
dec
aam
xchg
lret
jne
clc
imul
xor
add
cmp
clc
ret
lcall
inc
add
fidivs
add
jb
add
add
cmp
test
clc
loopne
popa
add
push
stc
inc
clc
xabort
mov
add
jns
clc
pop
ret
add
fisttps
add
cmp
mov
add
pop
push
clc
cld
cmp
clc
pop
cmp
push
sar
into
push
clc
or
test
sub
or
jnp
js
jmp
out
inc
clc
rclb
adc
pop
clc
pop
pop
and
pop
movsb
clc
xor
clc
xabort
push
cmp
add
jns
nop
pop
bound
add
pop
xchg
es
and
add
add
cwtl
push
clc
mov
add
int3
dec
add
add
stos
mov
cmp
popf
push
push
add
and
add
cmp
clc
call
gs
inc
add
add
add
fisttps
add
stos
sar
xchg
notb
xabort
jp
cli
xabort
clc
loopne
lahf
xchg
adc
add
add
repz
xchg
popf
movsb
clc
and
pop
sar
jo
add
jns
add
ljmp
fisttps
jno
add
add
cmp
add
ja
repnz
repnz
push
out
push
push
mov
testl
push
fsts
imul
add
add
test
add
insl
es
ficomps
xchg
out
mov
xchg
ja
clc
cmp
adc
fdivl
add
pusha
add
pop
pop
and
add
mov
test
rcr
adc
add
add
push
dec
push
clc
dec
arpl
add
mov
cwtl
imul
clc
dec
and
add
clc
clc
dec
xchg
fldt
insl
loopne
xlat
xchg
dec
jge
dec
jg
daa
clc
aas
pop
jnp
in
mov
clc
nop
mov
xor
clc
bts
clc
pop
cmp
clc
mov
stos
inc
clc
push
jg
sub
mov
mov
add
mov
xchg
hlt
cmp
sar
aaa
or
add
lock
clc
out
and
test
mov
mov
mov
clc
mov
clc
lods
addr16
cmp
jns
clc
sbb
and
add
mov
clc
loop
jge
mov
clc
inc
add
jge
clc
adc
add
cmc
mov
add
xor
std
cli
sbb
mov
inc
clc
cmp
fwait
or
cmp
clc
adc
add
clc
ret
clc
push
add
mull
push
pop
pop
ds
add
mov
add
and
add
cld
pop
mov
clc
cltd
imul
test
in
inc
add
hlt
std
idivb
pop
inc
clc
ret
clc
push
pop
and
add
pop
repz
loop
fiaddl
add
scas
rcrb
setnp
sbb
arpl
add
jne
sti
test
jno
add
insb
clc
es
lock
lret
aad
xchg
daa
clc
jmp
lods
cld
sti
sub
movsb
clc
dec
jl
js
clc
adc
add
ds
clc
movsb
clc
outsb
pop
aad
clc
pusha
add
aaa
pop
clc
add
add
add
aaa
cmp
mov
or
enter
clc
mov
sub
jle
clc
lods
or
clc
sub
sti
lea
sahf
push
leave
cmp
stos
and
jl
pushf
adc
add
cmc
insl
jne
std
fisubs
add
inc
clc
outsb
pop
jecxz
fdivrs
inc
clc
push
add
test
jae
add
clc
jge
arpl
add
add
sub
and
add
fnstsw
shll
cmp
dec
pop
pop
or
aad
add
xabort
clc
pushf
pop
mov
clc
mov
test
jae
add
dec
mov
jp
add
cmp
data16
iret
lcall
outsl
add
add
je
sbb
add
ret
clc
ljmp
mov
pop
mov
add
add
lods
ljmp
jbe
xor
add
clc
adc
add
cmc
pop
and
add
inc
add
inc
clc
pop
sub
add
add
clc
sar
xchg
inc
add
inc
clc
xchg
inc
clc
sarl
popf
rolb
clc
fwait
fs
insl
test
sar
lods
imul
dec
fiadds
jbe
clc
xchg
add
add
push
fisttpl
repnz
clc
mov
lahf
inc
add
cmp
clc
and
clc
jp
add
pop
int3
or
clc
sub
adc
add
pusha
add
mov
clc
jl
mov
mov
fld
clc
xchg
ljmp
clc
test
pop
leave
call
xor
add
clc
mov
push
mov
add
clc
cmp
clc
bound
add
add
ja
mov
clc
pop
adc
add
add
int3
xabort
or
clc
shlb
add
mov
push
adc
add
mov
push
add
popa
add
adc
jl
add
fisttpl
fildll
dec
cmp
lahf
or
cmp
xchg
daa
clc
ljmp
std
push
arpl
add
dec
mov
cmp
push
dec
test
js
add
sub
mov
clc
loop
mov
clc
idivb
mov
into
xchg
iret
pushf
gs
cmp
push
call
loop
add
js
cltd
leave
in
dec
shll
add
mov
nop
fs
sbb
mov
xchg
add
jns
mov
fsts
cmp
clc
inc
add
push
add
xchg
rorb
pop
fstpl
testb
clc
loope
mov
and
clc
add
jno
add
pop
mov
add
addr16
cld
inc
clc
dec
pop
js
add
add
add
add
xchg
mov
push
dec
leave
sbb
cmpsb
clc
xchg
ret
cli
daa
clc
and
data16
pusha
add
iret
sub
add
add
sarl
push
dec
or
add
es
cltd
je
into
mov
repz
movsl
clc
stos
test
adc
add
arpl
add
clc
cmc
popf
out
ds
dec
and
jno
add
pop
stos
xor
xor
add
cmp
add
add
in
add
add
jo
add
pop
cmp
cmp
enter
or
mov
add
clc
xchg
xor
add
mov
clc
xchg
mov
add
add
add
jb
add
clc
and
push
jecxz
mov
xchg
cmp
add
roll
add
clc
lret
mov
mov
clc
stos
pop
or
sbb
pop
call
mov
dec
cmp
clc
ret
das
loop
in
ret
clc
jb
add
jae
add
sub
add
sar
clc
add
add
out
xor
add
add
push
add
sub
jp
clc
inc
clc
adc
push
add
or
sar
jnp
clc
aas
mov
add
add
clc
cmpsb
clc
loope
repnz
fimull
movsl
clc
dec
dec
je
sub
lret
clc
leave
inc
add
xlat
aam
add
adc
add
dec
insb
cmpsl
clc
into
int
add
xbegin
add
or
hlt
mov
pushf
addr16
fs
xchg
in
xchg
cmpsl
clc
push
add
mov
clc
dec
je
shlb
jle
add
lock
clc
sti
loop
clc
cmp
inc
add
jl
add
xchg
xor
arpl
add
pop
and
std
loopne
rorb
das
push
add
xor
add
mov
add
dec
hlt
mov
add
mov
mov
clc
test
add
hlt
add
add
clc
pop
aaa
lcall
add
inc
add
fldenv
sarb
add
jns
pop
xchg
push
add
shrl
pop
inc
add
jecxz
xor
add
clc
mov
add
add
arpl
add
clc
daa
clc
stc
pushf
mov
out
dec
fwait
popa
add
out
add
mov
clc
adc
jmp
and
add
dec
popf
int3
bound
add
clc
scas
fucom
clc
mov
bound
add
xor
add
stc
sbb
pusha
add
jns
and
add
add
das
sti
loope
sar
imul
dec
lret
test
ja
clc
pop
mov
xchg
gs
pop
lret
fnsave
add
add
add
pop
xchg
and
sub
xchg
inc
add
add
add
clc
jmp
imul
mov
clc
add
add
mov
jg
pop
adc
push
add
pop
adc
add
and
add
xchg
mov
cmp
in
inc
add
cmp
push
add
pop
mov
hlt
xchg
push
xchg
fs
dec
out
es
lcall
push
add
call
pop
dec
push
adc
add
add
push
and
add
add
clc
xchg
cmp
std
and
sub
ss
add
add
je
inc
add
sar
jns
add
jns
mov
clc
sbb
push
clc
mov
repnz
add
popf
fstpt
add
add
jp
push
clc
ja
clc
fsts
into
mov
data16
cmp
lods
pop
clc
fs
fs
dec
cmp
pusha
add
fnsave
mov
add
dec
sub
push
clc
shll
add
jbe
xor
push
clc
fisttpll
xchg
dec
popa
add
or
jno
add
add
sbb
cli
mov
ja
notb
lahf
pop
loope
movsb
clc
jae
add
push
adc
add
cmp
inc
clc
xchg
loope
or
sub
clc
add
push
clc
push
test
cli
dec
cmp
add
xabort
addr16
insb
xchg
mov
add
xor
cmpsb
clc
lods
fsubr
in
jge
add
jl
clc
out
inc
add
or
cmp
add
ds
clc
ljmp
scas
iret
repnz
clc
pushf
sar
clc
cmp
add
add
imul
fldt
and
pop
enter
clc
sbb
and
int
clc
negb
mov
lea
jle
int3
into
push
add
jae
add
and
add
sbb
clc
clc
clc
mov
bound
add
addr16
xchg
xlat
push
dec
jb
add
xchg
outsb
in
cmp
ds
add
add
mov
mov
cld
int
fs
sbb
push
xchg
or
add
pushf
push
insl
insb
clc
fcomps
add
push
add
jge
clc
clc
pop
int
cli
stos
int
push
outsl
adc
add
call
add
popf
lret
pop
jne
add
outsb
sti
rcrl
pop
jecxz
xchg
jo
add
mov
add
in
in
cld
add
add
cmp
data16
push
xbegin
clc
int
out
jg
push
dec
jns
and
add
sub
lahf
daa
clc
xor
add
push
push
clc
pop
clc
xchg
sub
xchg
push
add
stos
jecxz
inc
clc
mov
add
clc
mov
sahf
jg
push
push
cmp
lock
add
scas
sub
add
mov
adc
add
clc
jge
inc
clc
mov
add
data16
jns
mov
clc
jbe
clc
pop
cmp
pop
xchg
cmp
xabort
add
add
add
add
add
outsl
adc
repz
push
push
add
dec
mov
aas
inc
clc
jo
add
sub
test
das
push
aas
ljmp
xchg
adc
jae
add
xchg
imul
mov
add
add
xchg
adc
add
xbegin
add
mov
cwtl
mov
push
clc
loop
add
add
and
add
cwtl
jb
add
dec
call
add
xor
add
add
mov
clc
add
add
clc
ss
cmp
add
cwtl
sti
push
add
lods
insl
ficoms
add
ret
clc
jl
aaa
cmp
add
xchg
adc
call
clc
ret
add
add
add
sar
clc
mov
pushf
xchg
xchg
pop
test
inc
clc
movsl
clc
xor
add
das
sar
push
adc
add
xchg
cmp
shll
add
jns
in
xchg
pop
add
add
clc
sar
clc
adc
add
add
cmp
in
pop
rorl
sti
dec
out
inc
add
push
clc
test
sar
clc
xchg
jae
add
clc
int
sar
leave
fcomip
test
fnsave
aaa
dec
xchg
es
leave
cmp
xchg
negl
clc
lret
lods
dec
xchg
and
add
mov
mov
jg
add
or
cmp
clc
mov
jnp
clc
leave
test
dec
into
mov
clc
cli
in
push
bound
add
int
sar
inc
add
sub
leave
aad
add
mov
xabort
inc
clc
sub
clc
fsubrl
mov
add
js
insl
push
cltd
data16
cs
inc
clc
mov
add
insl
lods
pop
xabort
mov
aas
daa
clc
ja
push
add
jne
aas
jg
and
add
mov
jae
add
clc
inc
clc
adc
add
pop
push
mov
mov
push
add
dec
inc
add
jne
add
ds
test
pop
clc
outsl
cmp
clc
rcrb
add
xlat
idiv
aaa
jb
add
clc
scas
jnp
add
dec
outsb
js
clc
in
xchg
add
fnsave
push
pop
jg
push
add
push
mov
add
add
xchg
pop
das
xbegin
dec
loopne
loop
or
add
fcoml
clc
in
ret
clc
adc
add
mov
adc
pop
insb
stc
out
sar
add
cli
xchg
mov
sar
into
cmp
cmp
push
add
inc
add
daa
clc
dec
cli
das
stc
sub
imul
sar
clc
sar
or
clc
out
push
clc
mov
xor
add
add
xchg
xor
add
sar
dec
paddsw
push
mov
insl
mov
stos
jno
add
mov
add
adc
jnp
add
add
xchg
inc
clc
sub
stos
pop
clc
pop
mov
pop
dec
jmp
rcll
mov
fs
push
clc
cmp
enter
add
negl
das
lret
bound
add
lcall
push
mov
dec
lock
mov
nop
inc
clc
mov
dec
push
dec
and
add
clc
das
cmp
jmp
add
add
daa
clc
lods
std
or
ficompl
add
cwtl
adc
add
insl
imul
add
xchg
bnd
imul
clc
pop
jne
push
add
xor
add
clc
and
add
cmp
cmp
clc
sbb
fwait
pop
jnp
add
lret
mov
cmpsb
clc
sbb
sti
jo
add
add
adc
add
out
cld
mov
inc
add
fs
sarl
mov
mov
clc
adc
add
mov
clc
rorl
add
out
lahf
sub
add
iret
clc
scas
sbb
pop
clc
in
aas
out
movsl
clc
sbb
test
or
aam
pop
push
repnz
loopne
ljmp
mov
add
int3
je
cmpsl
clc
jmp
clc
shrb
mov
hlt
inc
add
clc
fucomp
aaa
movsl
clc
movsl
clc
iret
mov
mov
add
pushf
test
inc
clc
fs
sar
fisubrs
push
add
bound
add
fcomps
add
jmp
adc
add
cmp
add
sbb
clc
push
clc
inc
clc
xabort
push
add
cwtl
adc
add
or
add
add
pop
pop
cmp
clc
cltd
out
sub
clc
mov
bound
add
or
or
pop
pop
in
inc
add
jecxz
jbe
clc
push
push
clc
xor
add
hlt
aam
add
es
nop
roll
aam
aad
sbb
adc
add
add
cli
sahf
sbb
aaa
push
mov
sub
test
popa
add
xabort
push
add
iret
nop
jns
clc
enter
clc
fdivrs
gs
test
dec
pop
clc
enter
dec
arpl
add
rcll
stos
test
or
clc
sahf
jb
add
add
aad
add
pop
lret
lock
xchg
xlat
inc
clc
push
insb
out
out
inc
clc
push
add
mov
inc
clc
and
add
push
add
add
mov
and
add
adc
add
add
mov
clc
dec
shll
add
mov
clc
adc
add
daa
clc
cmpsb
clc
int
mov
test
std
pushf
outsb
push
in
mov
or
add
ret
scas
and
add
push
clc
movsl
clc
or
add
mov
dec
out
xor
add
cld
loop
lods
pop
adc
repnz
out
rcrb
sbb
add
sub
cmp
jae
add
insb
test
push
sub
dec
fimuls
add
add
mov
lcall
clc
push
imul
loop
movsb
clc
adc
add
mov
or
adc
add
add
outsl
jle
xchg
insl
xchg
nop
or
add
add
push
xchg
push
xchg
jo
add
push
rcrl
sbb
cmp
ret
clc
das
popf
fiaddl
add
add
sbb
cmp
lahf
mov
mov
add
inc
clc
adc
add
add
inc
clc
mov
or
out
cmp
clc
js
movsl
clc
daa
clc
in
test
clc
sbb
clc
mov
mov
xor
imul
mov
gs
sub
add
outsl
lret
inc
add
in
divb
add
cmpsb
clc
popf
ja
add
add
cli
fcmovnbe
xbegin
aaa
repnz
ss
add
leave
mov
mov
clc
out
in
shl
bound
add
pop
fs
hlt
sbb
lock
clc
inc
clc
fmull
xor
cmp
dec
add
add
mov
fs
fcompl
add
cmp
clc
imul
xor
jecxz
sti
dec
test
pop
clc
or
clc
int
add
add
xor
add
add
sar
add
pop
push
call
mov
test
sbb
clc
aas
popf
add
add
add
cltd
negb
filds
hlt
pop
setl
ret
clc
cmp
clc
mov
cmovle
xchg
cli
sub
add
enter
or
mov
lea
adc
add
jne
clc
jne
add
jnp
or
rcl
cmpsl
clc
cmpsl
clc
fwait
mov
mov
sbb
cwtl
add
arpl
add
popf
dec
lahf
je
add
xor
add
repnz
cmp
jae
add
dec
pop
icebp
sar
xbegin
repz
jge
mov
jbe
outsl
jne
sbb
add
out
sar
cmp
add
mov
add
cmpsl
clc
out
and
add
icebp
xchg
or
scas
inc
add
inc
clc
add
add
jmp
mov
and
add
in
and
mov
push
mov
clc
pop
sub
dec
ret
clc
jb
add
pop
jno
add
add
inc
add
rcl
pop
cwtl
inc
add
jmp
fdivs
add
push
dec
cmp
clc
stc
outsl
add
inc
add
dec
push
add
cmp
aam
add
sar
push
js
xor
add
inc
clc
aas
icebp
nop
lret
cs
push
add
push
add
sti
test
fadds
ret
clc
test
sub
add
aas
inc
clc
adc
add
lahf
jle
cmpsb
clc
dec
cmp
push
loop
xor
js
jno
add
add
fists
add
jo
add
xchg
rorl
add
mov
insl
call
mov
loope
sar
add
sar
pusha
add
movsb
clc
adc
add
add
test
mov
inc
clc
push
cmpsl
clc
insl
iret
and
xchg
mov
out
mov
and
add
push
add
inc
clc
mov
clc
ds
jecxz
mov
cltd
mov
das
bound
add
repnz
xchg
and
jle
clc
fmul
xchg
dec
jnp
stc
out
mulb
add
sbb
das
mov
add
mov
clc
xlat
popf
and
clc
push
clc
cmp
clc
mov
mov
and
add
in
mov
add
inc
add
loope
cltd
cli
sbb
add
jae
add
add
jmp
and
in
scas
out
xchg
and
add
clc
push
add
aas
ret
pushf
pop
shrl
xor
add
rcr
xor
add
pop
cmp
pop
add
add
clc
je
clc
cmp
sub
outsl
adc
clc
cmp
clc
lahf
add
add
pop
or
add
add
dec
mov
add
clc
pop
inc
clc
ja
cmp
nop
in
ss
pop
inc
clc
jmp
dec
xchg
mov
loopne
push
add
decb
push
xchg
inc
clc
scas
gs
mov
mov
sbb
add
and
add
mov
add
mov
clc
lcall
clc
call
sbb
clc
jns
dec
xchg
xor
add
data16
inc
clc
fs
adc
cmp
push
add
mov
add
into
data16
xlat
push
or
cmp
repz
cli
add
add
outsb
and
add
int
in
mov
mov
clc
jl
push
addr16
rolb
add
cmp
add
lcall
clc
sub
cltd
ljmp
add
scas
xchg
out
mov
add
push
fsubrp
push
dec
pushf
fdiv
push
add
sbb
call
lret
clc
aad
clc
hlt
xlat
or
xchg
cld
dec
gs
add
add
testl
sbb
clc
sub
cli
cmp
adc
add
add
clc
mov
or
or
add
inc
add
or
add
repz
div
and
add
movups
add
fucomi
int3
pop
clc
fimuls
xchg
dec
sub
aaa
mov
push
add
test
sti
cmp
clc
sar
push
mov
push
pusha
add
inc
add
shrl
add
incl
add
cwtl
jge
out
js
clc
cld
popa
add
xor
add
js
clc
pop
cmpsl
clc
dec
adc
icebp
sar
mov
mov
enter
jae
add
clc
inc
clc
negl
push
sub
jns
clc
cmc
paddd
fidivs
dec
inc
clc
jno
add
add
xor
add
mov
cmp
clc
xchg
adc
add
clc
xor
add
add
stos
hlt
mov
add
pop
add
stc
mov
push
add
inc
clc
mov
stc
loope
bound
add
clc
inc
clc
jecxz
adc
add
jns
pop
xlat
xor
clc
jmp
cltd
daa
clc
xor
add
mov
clc
sbb
add
ds
and
add
xor
add
popa
add
jg
pop
clc
jb
xbegin
insl
mov
add
js
clc
jae
add
add
xor
sbb
clc
mov
aaa
cmp
mov
stos
cmp
add
in
xor
add
loop
push
clc
sahf
cmp
add
or
add
push
add
adc
add
icebp
sub
lods
pop
into
int
xor
jb
add
add
inc
add
jecxz
shll
xchg
leave
pop
jne
adc
sar
jo
add
push
clc
sub
sahf
lahf
repnz
add
int
clc
xor
add
sbb
clc
movsl
clc
in
fwait
lock
push
clc
mov
push
add
gs
jle
sbb
jge
add
into
mov
adc
ud2
adc
cmp
dec
mov
fbstp
add
cmovle
cmp
add
dec
in
in
cmp
shrl
mov
push
or
add
xchg
mov
add
clc
xchg
jno
add
jo
add
add
clc
cmp
adc
add
mov
clc
outsl
pop
clc
lahf
xor
xchg
loope
inc
add
and
scas
jnp
clc
mov
cmpsl
clc
gs
insl
mov
clc
sub
ficompl
lock
ret
clc
jae
add
int
pusha
add
or
push
add
xabort
arpl
add
fs
jle
jl
cmp
imul
aam
mov
clc
test
or
test
add
pop
je
inc
clc
mov
jnp
add
mov
clc
data16
je
cwtl
scas
loopne
cmc
cmp
clc
mov
mov
clc
mov
lahf
mov
mov
dec
xchg
test
add
ljmp
jecxz
sar
clc
mov
xchg
popf
lahf
pop
jge
mov
clc
mov
clc
and
add
sahf
add
loopne
pop
cmp
add
mov
clc
stos
in
mov
jmp
scas
notb
add
push
pusha
add
pop
push
add
or
push
add
mov
clc
movsb
clc
cmpsl
clc
or
aad
clc
fstl
add
clc
ss
jo
add
xchg
hlt
push
add
add
add
xor
clc
lea
or
push
add
adc
add
clc
pop
jbe
movsb
clc
jecxz
in
test
clc
rep
jle
cmp
sub
das
cmp
out
lahf
ss
add
out
shlb
clc
jl
sbb
clc
push
ljmp
add
sar
add
add
es
adc
cmp
and
or
cmpsl
clc
add
add
push
int
jnp
add
adc
add
xchg
sub
into
cmc
loope
mov
dec
popa
add
sbb
call
cmpsl
clc
sti
jne
sar
add
add
push
mov
clc
sub
mov
clc
xor
sar
fisubs
or
clc
dec
out
sub
dec
mov
cmc
mov
clc
jne
dec
mov
adc
mov
clc
int3
xor
add
pop
not
jae
add
add
lret
add
xor
add
loop
testl
pop
cwtl
add
add
add
add
xchg
mov
adc
adc
xchg
adc
add
addr16
data16
adc
add
clc
adc
add
clc
movsb
clc
push
inc
add
xor
add
fs
loope
cmp
mov
inc
add
fidivs
add
and
add
mov
add
notl
mov
fadds
clc
cmp
add
iret
dec
sbb
inc
add
sub
and
add
add
xor
std
jle
push
jg
jo
add
clc
add
add
push
xor
add
dec
pop
pop
xor
add
cmp
add
push
add
sub
aam
cmp
sub
mov
xor
add
and
add
jae
add
clc
stc
movsb
clc
sar
mov
fwait
dec
mov
xchg
cmp
shr
stc
or
clc
fldl
fisubrs
bound
add
add
clc
ret
add
push
loope
fwait
add
add
fs
xor
add
mov
adc
bound
add
sbb
mov
test
dec
inc
clc
in
pop
dec
jmp
test
xchg
jg
add
xabort
in
stos
jl
hlt
imul
test
int3
sub
xlat
push
sahf
pop
or
jno
add
scas
dec
aaa
push
add
and
add
pop
clc
xabort
insb
cld
addr16
dec
xor
sar
add
cmp
add
test
cmp
out
cltd
mov
pop
cmp
cmp
clc
sarl
pop
clc
bound
add
insb
sub
adc
add
clc
ds
nop
add
add
repnz
dec
mov
fidivrl
add
dec
mov
insl
ret
clc
push
add
add
clc
pop
je
lea
test
movsb
clc
adc
add
lahf
mov
sbb
clc
imul
add
dec
aas
pop
clc
adc
add
add
pop
mov
cltd
rcll
add
test
add
or
clc
sar
adc
add
add
adc
clc
scas
mov
add
inc
clc
pop
sar
fmuls
frstor
add
sbb
and
cmp
mov
daa
clc
and
add
add
sub
mov
add
adc
add
clc
inc
clc
jb
add
clc
pop
fildll
xchg
and
add
jns
clc
mov
aaa
js
jno
add
shl
clc
fs
ret
clc
cmpsb
clc
mov
clc
push
jg
adc
add
shll
add
movsb
clc
xor
add
sub
add
xbegin
add
data16
mov
loope
stos
in
clc
insl
mov
add
add
add
jnp
pop
bound
add
ds
dec
inc
clc
cmp
mov
sbb
add
sahf
popf
jl
add
stos
and
add
lret
repz
cmp
clc
jo
add
adc
add
xor
add
jl
clc
cmp
clc
pop
push
loop
xor
add
sti
ss
and
add
cs
cs
ret
shrb
cltd
sbb
push
add
sub
idiv
cmp
jmp
cmp
add
sub
mov
add
pop
xchg
cmpsl
clc
pop
notb
xlat
xor
add
add
clc
jle,pn
sti
dec
push
add
repz
movsl
clc
push
cmc
cs
jb
add
cmp
xchg
adc
add
add
cld
popf
jmp
clc
sar
clc
fnstenv
adc
add
mov
clc
cmc
xchg
mov
jp
clc
test
clc
loope
dec
in
mov
jge
dec
xor
add
mov
int
clc
in
test
movsl
clc
xchg
push
add
xlat
fistpl
push
add
ret
clc
lea
cltd
loope
repz
add
test
pusha
add
inc
clc
nop
mov
clc
add
cld
push
clc
repz
js
pop
inc
clc
lret
sbb
negb
mov
clc
ret
clc
test
dec
inc
clc
mov
add
or
mov
mov
clc
push
mov
insl
adc
add
add
ret
clc
icebp
mov
add
add
fsts
add
mov
inc
add
insb
test
shrl
clc
sub
sar
add
imul
out
jae
add
cmp
clc
sbb
mov
clc
jne
clc
inc
add
push
ret
cmp
clc
pusha
add
mov
add
test
fcmovnb
clc
fs
iret
or
clc
mov
into
or
add
mov
add
add
es
xor
add
or
clc
cltd
aaa
in
cltd
and
add
and
add
clc
lea
add
out
repz
clc
cmp
mov
clc
ret
clc
xchg
xor
add
add
sub
clc
aad
clc
in
or
call
fsubl
add
clc
insb
mov
sbb
add
add
sbb
push
and
add
add
add
add
add
adc
add
xchg
sbb
std
mov
mov
or
and
add
xchg
add
xor
add
das
xchg
jmp
or
add
sub
add
jne
add
loop
fnstsw
arpl
add
ss
clc
lock
add
jecxz
sbb
clc
mov
add
mov
dec
mov
add
cmp
push
xchg
cmp
clc
out
pop
stos
cmp
add
and
add
mov
add
add
pop
hlt
push
clc
inc
add
xlat
sbb
push
add
adc
add
fstp
jecxz
mov
add
in
jae
add
clc
pop
mov
clc
cmp
mov
call
mov
jb
add
mov
daa
clc
das
pop
mov
adc
add
jae
add
add
jge
push
dec
or
push
jecxz
out
pop
cmc
lock
push
loopne
ret
clc
cs
clc
inc
add
or
je
cmp
clc
inc
clc
mov
add
add
add
mov
add
call
add
lret
mov
sar
add
push
add
push
jbe
clc
mov
pop
je
clc
sar
imul
mov
clc
jge
clc
fidivrs
clc
int
pop
xchg
mov
aas
scas
fnstcw
add
clc
push
push
add
pop
and
push
jge
arpl
add
sar
sub
clc
enter
cli
negb
add
mov
cmp
sbb
and
popa
add
jl
adc
add
jnp
cmp
add
out
cmp
mov
xor
imul
stc
dec
mov
sbb
xor
add
clc
add
add
mov
clc
dec
ja
clc
jg
jbe
clc
fisubrl
jecxz
aas
and
add
add
mov
add
inc
add
sbb
clc
add
add
clc
push
mov
mov
mov
fsubl
pop
add
bound
add
clc
inc
clc
dec
or
add
bound
add
jl
clc
loope
sub
clc
mov
jp
arpl
add
adc
cli
decl
cmp
inc
clc
lods
mov
xchg
fsubl
pop
mov
add
lcall
add
xabort
cmp
add
add
clc
imul
clc
shlb
add
in
lock
add
lret
dec
inc
add
out
cmpsb
clc
sar
add
mov
push
test
push
add
sbb
clc
pop
nop
ret
clc
lea
add
clc
daa
clc
push
xor
add
clc
lock
pop
mov
cmp
jns
clc
cmc
cltd
xchg
fsubr
mov
or
ret
clc
rcll
mov
clc
xor
add
add
mov
iret
mov
dec
movsb
clc
adc
add
stos
cmp
pop
adc
add
clc
imul
pop
test
clc
and
add
jnp
shlb
add
add
mov
inc
add
mov
mov
out
dec
aad
add
pop
bswap
fmulp
stos
call
cmpsl
clc
mov
mov
out
mov
add
clc
lcall
pop
ss
jp
and
add
clc
xchg
cwtl
test
imul
clc
xchg
sub
add
gs
mov
add
inc
clc
mov
in
or
pop
notl
inc
add
push
lret
xor
add
aad
sbb
pop
loop
add
add
sti
push
data16
aaa
scas
js
jne
or
loope
sub
add
js
adc
add
add
pop
xor
add
mov
sahf
stos
sbb
and
add
add
add
test
loope
out
fadds
add
int
add
mov
imul
add
or
clc
mov
jae
add
clc
adc
add
dec
movsb
clc
sar
inc
add
cmp
add
bound
add
add
push
jmp
adc
add
imul
add
test
clc
mov
add
add
cwtl
sahf
mov
movsl
clc
jmp
clc
shll
add
xchg
pop
push
icebp
push
in
pop
add
add
arpl
add
add
mov
and
or
clc
loop
jo
add
add
mov
clc
insl
inc
add
ret
clc
aas
pop
and
and
dec
sub
clc
ljmp
loop
aad
pop
or
dec
cmp
mov
clc
mov
mov
ljmp
stc
pop
mov
push
add
pop
xchg
stos
fnstsw
adc
add
clc
mov
xchg
mov
test
sbb
pop
add
add
int
lods
cmp
add
fwait
mov
add
imul
add
mov
add
test
scas
stos
jbe
xabort
jecxz
and
add
add
testb
add
jmp
xchg
or
rcrl
add
add
shrl
mov
add
add
dec
out
leave
stos
in
daa
clc
xchg
inc
add
xor
add
fistpl
mov
ret
clc
dec
repnz
add
sub
imul
jnp
outsb
or
vzeroupper
xchg
cmp
in
scas
gs
cmp
add
ret
xor
add
clc
leave
xchg
cwtl
push
add
fldl
add
clc
mov
repz
clc
mov
mov
pushf
pop
cs
clc
mov
aam
add
add
sar
lcall
clc
loop
or
adc
add
add
daa
clc
fcmovu
fstpl
add
outsl
into
xor
sti
adc
jbe
cli
out
mov
clc
jbe
cmp
xor
add
and
add
add
aaa
lcall
pop
clc
repz
clc
mov
add
xchg
js
fwait
in
ficomps
sar
es
and
clc
adc
add
sbb
push
add
pop
pop
movd
inc
clc
loope
xbegin
clc
xor
add
clc
hlt
stos
sti
dec
sbb
cwtl
sbb
push
add
mov
add
popa
add
ret
clc
jl
push
add
jle
clc
sbb
add
xor
add
clc
test
add
inc
clc
ficoms
add
xchg
inc
clc
mov
insb
mov
add
inc
add
stc
push
cmpsb
clc
hlt
lods
lcall
push
adc
add
add
xbegin
sub
dec
pop
push
inc
add
test
adc
clc
popa
add
cmp
clc
pusha
add
lods
push
mulb
mov
add
and
je
imul
clc
sar
clc
mov
clc
xchg
daa
clc
leave
cmc
inc
clc
ret
push
add
sbb
arpl
add
into
movswl
push
clc
and
jecxz
or
mov
cmp
add
push
into
xor
add
inc
clc
cmp
xor
adc
add
add
jnp
add
inc
add
cmc
shlb
add
or
add
clc
in
cld
push
add
gs
insl
imul
bound
add
clc
push
divl
add
aaa
pop
xchg
stos
push
mov
lret
scas
xbegin
add
cwtl
ljmp
fiadds
add
lods
xchg
push
add
cli
xabort
clc
dec
fstps
fs
xbegin
cmc
xbegin
adc
out
aam
clc
inc
add
xbegin
dec
lods
pop
ds
xchg
jge
cmpsb
clc
or
shrb
add
clc
insl
or
and
add
clc
push
mov
mov
clc
pop
pop
enter
int3
inc
clc
pop
mov
xchg
xchg
cmp
clc
xor
rcr
cmpsb
clc
scas
out
push
out
add
add
clc
pop
ss
xabort
mov
mov
add
ficoml
xchg
outsb
sbb
mov
fldl
clc
inc
clc
jb
add
add
add
mov
pop
dec
mov
sbb
inc
clc
adc
add
add
in
stos
pop
insl
outsb
movsl
clc
popf
cmpsb
clc
dec
mov
clc
xor
add
dec
mov
xbegin
enter
add
es
cmp
mov
and
clc
out
sti
dec
scas
mov
icebp
add
add
dec
test
fstl
rorl
push
clc
pop
popa
add
insb
daa
clc
icebp
ljmp
dec
out
loope
ja
sub
fcomps
mov
cmp
cmp
cld
negl
sti
ljmp
imul
pop
cmp
ljmp
or
xchg
mov
popf
mov
clc
xabort
clc
lret
xor
fcompl
add
or
add
or
fwait
adc
aam
add
push
es
jae
add
scas
sbb
adc
pop
movsl
clc
popa
add
pop
push
xor
add
add
add
add
lea
clc
push
dec
jg
push
pop
adc
adc
clc
xchg
rcl
add
add
push
add
mov
clc
aad
add
clc
dec
mov
fnstenv
pop
cmpsb
clc
jnp
xbegin
adc
add
ljmp
clc
test
lods
ljmp
dec
hlt
pop
scas
jecxz
push
cmp
sbb
addr16
xchg
outsb
sbb
clc
dec
xchg
in
adc
repz
stc
hlt
xchg
push
add
xlat
pop
clc
fsubrs
and
add
add
pop
jmp
clc
sub
jmp
adc
add
fucomp
aas
add
add
inc
clc
icebp
sub
clc
push
add
dec
mov
jnp
test
dec
sbb
sbb
add
clc
and
add
sar
clc
in
in
cmp
in
loop
or
lahf
add
add
add
mov
jne
insb
and
pop
mov
adc
add
fimull
push
add
sti
out
gs
sub
loope
lea
lock
add
notl
adc
add
adc
add
daa
clc
inc
add
lods
inc
add
pop
jecxz
or
sarb
pop
cmp
clc
mov
inc
clc
cs
stos
push
add
jle
mov
cmp
adc
add
dec
pop
clc
out
xchg
jmp
int3
std
sbb
add
fisubs
add
xbegin
lret
push
xor
add
cmp
add
repnz
jle
xor
add
clc
sbb
ficoms
add
insl
jecxz
xchg
jb
add
test
jno
add
clc
fnsave
dec
std
and
add
imul
clc
popf
lcall
mov
add
in
jecxz
sti
mov
add
mov
cmp
inc
add
or
xabort
cmc
add
clc
aad
clc
loope
xor
add
xchg
add
add
clc
adc
add
lcall
add
aas
xchg
adc
add
clc
jb
add
dec
int3
pop
fwait
mov
bound
add
sub
add
add
jnp
clc
cmc
jno
add
clc
sbb
add
ljmp
clc
xor
add
mov
clc
ljmp
add
aam
ss
ficomps
cs
das
jnp
movsl
clc
fdivrs
mov
es
inc
clc
lock
neg
mov
rcr
add
add
jae
add
pop
clc
addr16
lret
je
stc
cmp
out
es
xabort
clc
inc
clc
dec
add
add
xbegin
clc
mov
jl
add
ds
add
cmc
data16
sub
clc
jle
adc
add
je
lods
cmc
push
cmp
add
cmp
jg
call
add
daa
clc
aad
dec
push
in
mov
pop
xchg
and
add
repnz
dec
stc
push
dec
or
and
add
cld
gs
xchg
test
clc
in
cli
push
clc
fsubrs
sub
into
outsl
mov
fsubs
add
movsl
clc
or
clc
imulb
or
inc
add
std
ss
aad
add
and
add
out
out
imul
clc
scas
add
dec
scas
mov
add
arpl
add
inc
clc
ja
add
shrl
add
and
add
clc
xbegin
and
add
push
add
fidivl
add
xchg
sub
add
mov
mov
push
imul
je
add
mov
out
loope
push
add
or
js
clc
xchg
push
in
mov
popa
add
fistps
dec
push
xor
mov
add
test
lods
shr
jl
add
scas
push
add
pusha
add
fidivrs
roll
add
clc
push
cmp
xchg
stos
scas
or
add
add
and
add
xchg
sahf
test
pop
fists
add
add
add
mov
add
sub
add
push
add
lret
and
add
push
add
mov
js
add
add
clc
cmp
test
add
or
add
or
jmp
add
xchg
sub
aas
repz
sub
add
clc
std
dec
pop
mov
add
push
pushf
hlt
clc
xor
add
add
add
insb
inc
add
cli
pop
pop
test
push
out
nop
add
arpl
add
lcall
in
push
add
in
icebp
aaa
jb,pt
add
mov
test
popa
add
sbb
dec
imul
xchg
aam
inc
add
cs
cmp
add
dec
mov
mov
or
add
add
push
pop
bound
add
jb
add
xlat
je
clc
mov
clc
mov
add
xchg
ss
data16
cmp
cld
cwtl
xor
clc
pop
clc
xchg
cmp
add
add
add
add
dec
push
mov
cmp
cmp
ljmp
mov
nop
sub
clc
inc
clc
incb
aad
test
lahf
scas
faddl
mov
jl
add
jle
mov
add
mov
mov
clc
cmp
loop
or
fldl
xchg
fs
jecxz
mov
in
clc
sbb
lcall
std
jp
add
sbb
jb
add
pop
jns
nop
pusha
add
or
and
add
fadds
loope
mov
mov
add
mov
imul
pop
sar
gs
push
out
add
sub
xor
add
iret
gs
inc
add
leave
mov
cmpsl
clc
push
into
mov
jno
add
fwait
jns
fistps
sub
add
xabort
clc
adc
add
clc
mov
mov
mov
mov
popf
pusha
add
mov
add
ss
sahf
loope
mov
lret
loope
cs
clc
mov
mov
notb
pop
cmp
into
repnz
xchg
dec
imul
adc
inc
add
leave
aaa
dec
rep
clc
ret
xlat
test
int
and
add
sub
push
clc
out
or
add
decl
clc
cwtl
out
jbe
pop
clc
add
add
add
int
add
stc
enter
jl
scas
fcomps
add
add
clc
fsubl
xchg
mov
scas
add
add
testl
call
add
pop
cmovnp
clc
sub
and
add
add
add
mov
or
add
jle
jecxz
fsubp
clc
adc
add
imul
xchg
xlat
dec
stos
cmp
and
add
popf
sbb
cmp
sub
loopne
js
lret
into
cmpsb
clc
mov
or
pop
sbb
add
xor
add
clc
xor
add
pop
or
xchg
cli
fs
add
add
add
adc
clc
cmpsb
clc
jae
add
add
mov
mov
add
sbb
xchg
sti
cmp
xor
add
add
es
jmp
dec
xabort
adc
add
or
in
xchg
jmp
cmpsl
clc
push
mov
test
clc
pushf
push
add
nop
sti
cmp
clc
imul
pusha
add
icebp
gs
idivl
int3
sbb
cmp
clc
inc
add
xor
aas
sbb
sbb
add
mov
pusha
add
xchg
loope
mov
cmp
mov
cmpsb
clc
ja
sbb
ljmp
inc
clc
fs
movsl
clc
outsl
lahf
fmul
mov
in
and
and
add
sahf
ljmp
add
inc
add
jbe
daa
clc
xor
add
fdivrl
pop
mov
jmp
or
pop
stos
push
jb
add
mov
fwait
sar
clc
fcoml
add
cmpsl
clc
sahf
xor
clc
xor
add
repnz
pop
sar
push
add
leave
insb
dec
icebp
mov
cmp
cmp
clc
push
stos
mov
test
js
aam
clc
push
or
cmp
pop
pop
push
out
mov
dec
sbb
inc
add
xor
sub
in
cmp
mov
roll
addr16
or
cmc
gs
frstor
je
push
or
add
test
out
mov
and
in
js
add
mov
add
je
bound
add
add
clc
xor
cmp
add
xchg
lock
inc
add
push
add
scas
cmp
insl
or
xor
add
popf
push
dec
or
add
add
jmp
test
cmp
push
add
jecxz
xbegin
add
lods
leave
sbb
add
cmpsl
clc
adc
add
lret
fs
add
add
call
add
xlat
push
push
sub
add
dec
movsl
clc
test
loop
cmc
mov
push
test
push
jp
mov
call
and
pop
popa
add
aas
fs
movsb
clc
cld
jno
add
clc
mov
lcall
repz
add
imul
or
add
mov
fwait
cmpsb
clc
out
sahf
lret
sub
clc
mov
movsb
clc
jle
add
mov
and
cmp
add
mov
outsl
jge
clc
inc
add
sbb
clc
mov
add
add
lret
lcall
add
lret
jge,pt
inc
add
push
insl
jmp
aaa
in
adc
fidivrs
fwait
in
mov
and
add
insl
ficoms
add
icebp
out
loope
jge
dec
xchg
outsl
int
clc
out
clc
cmp
or
clc
sub
and
add
clc
loop
xchg
xor
or
mov
cwtl
jecxz
xchg
adc
jmp
clc
and
xchg
jl
mov
add
inc
clc
mov
adc
pop
ret
clc
sbb
xbegin
add
clc
imul
mov
push
cmp
or
lahf
mov
clc
daa
clc
or
sbb
clc
shrb
and
add
mov
clc
mov
xchg
pop
test
mov
or
pop
fcomps
outsl
push
testb
loop
push
or
xlat
push
mov
and
add
sbb
nop
gs
or
inc
clc
pushf
jae
add
or
add
add
jb
add
add
ss
inc
clc
push
icebp
stos
pop
mov
aaa
lods
scas
push
cltd
stos
jg
add
cmp
aaa
daa
clc
mov
and
add
add
clc
movsl
clc
clc
dec
loop
stc
pop
jae
add
clc
cmc
cmp
inc
add
add
add
imul
add
leave
bound
add
mov
add
xor
add
cmp
sahf
in
mov
add
nop
mov
clc
test
cmp
xor
clc
mov
fisubrl
js
add
cmp
add
shrb
clc
xabort
cmp
cmp
pop
ss
int
or
mov
cpuid
clc
push
add
add
add
add
add
into
xor
cmpsb
clc
fbstp
clc
pop
sar
lods
and
add
mov
clc
mov
clc
movsb
clc
mov
cmc
enter
mov
clc
xor
add
cmp
clc
or
mov
add
mov
call
jns
xchg
pushf
insb
mov
jmp
or
clc
xlat
inc
clc
pop
or
clc
cmpsl
clc
scas
cmc
clc
and
add
add
push
add
int3
sub
add
xlat
je
clc
xchg
cmpsl
clc
rolb
clc
mov
push
add
adc
add
clc
in
mov
call
ja
clc
jo
add
pop
inc
clc
push
clc
sbb
adc
add
adc
pop
in
movsb
clc
dec
pop
cmp
clc
cmp
dec
enter
add
add
in
in
bound
add
add
add
xchg
xor
add
clc
inc
clc
stos
out
in
mov
mov
loop
xor
dec
mov
add
clc
shrb
add
test
sub
add
popf
pop
shr
clc
mov
or
add
es
pop
clc
sbb
xor
std
movsb
clc
dec
lret
fdivrp
imul
add
notl
add
mov
clc
divb
add
adc
fstps
xchg
pop
clc
jae
add
xor
add
cmp
add
jnp
push
add
sub
je
mov
clc
es
pusha
add
sub
or
pop
xchg
inc
clc
xchg
mov
mov
cmp
mov
lret
sbb
clc
lods
stc
insl
xbegin
scas
mov
mov
rorl
pop
jae
add
xor
add
mov
add
int
aaa
sub
pop
clc
mov
ss
imul
fmuls
popa
add
mov
push
add
insl
lcall
xlat
jbe
fstpt
clc
push
cmp
mov
and
sarb
add
adc
fwait
or
pop
jecxz
mov
add
lret
cmp
gs
iret
iret
pop
or
cmp
mov
add
add
add
inc
add
push
cs
fiaddl
fstp
jnp
cmp
clc
inc
add
inc
clc
inc
add
adc
add
movsb
clc
test
mov
fisubrl
add
pushf
or
add
add
push
add
lods
push
xor
add
add
mov
clc
sub
add
inc
clc
push
add
xchg
jecxz
or
clc
or
clc
ja
gs
jo
add
pop
iret
mov
add
push
into
lods
inc
add
cmp
clc
pusha
add
fldl
jl
fwait
dec
mov
dec
sub
jns,pt
mov
add
jb
add
push
xchg
add
add
clc
mov
cmp
xor
add
add
clc
pop
pop
mov
mov
adc
add
pop
cld
dec
out
inc
add
jp
add
pop
xchg
int3
test
mov
mov
clc
ret
clc
arpl
add
cli
pop
mov
clc
shl
dec
cmpsl
clc
cmp
in
call
push
xlat
adc
add
add
adc
add
clc
ds
xchg
and
add
push
xor
add
clc
js
jmp
fdivs
sar
in
jo
add
jne
or
clc
mov
jecxz
pushl
inc
add
scas
lahf
test
push
cli
mov
mov
mov
mov
xchg
cltd
xchg
int3
dec
mov
push
add
pmovmskb
stos
add
add
add
testl
add
add
jb
add
mov
jmp
clc
sub
call
mov
jmp
popa
add
cwtl
data16
out
ja
clc
or
add
add
clc
jge
add
add
add
cmp
out
pop
push
add
pop
mov
ds
xchg
enter
sbb
mov
clc
lret
int3
divb
mov
add
sbb
add
popa
add
das
shll
scas
scas
sbb
xor
lods
sbb
cmp
dec
out
or
jnp
or
ljmp
in
out
cmp
adc
add
clc
inc
add
stos
cmp
outsb
scas
xchg
std
mov
clc
mov
mov
add
adc
add
dec
cmp
add
sbb
jle
xchg
fsts
jns
rolb
add
lahf
mov
in
ficomps
pop
adc
add
add
dec
stc
jno
add
mov
add
pop
clc
daa
clc
pushf
xor
add
add
push
add
aas
cmpsl
clc
jae
add
lods
stos
jns
xor
add
cmp
add
dec
data16
cmp
add
dec
fwait
pop
in
adc
add
pop
jle
xor
clc
or
clc
pop
inc
add
imul
lods
mov
add
stos
popf
and
add
add
fnstcw
ss
movsl
clc
xchg
dec
sub
lea
ds
clc
ss
push
cwtl
ror
add
add
adc
add
clc
sar
lret
movsb
clc
cmp
jl
add
jp
and
add
add
cmp
inc
clc
jl
fs
xor
add
out
sub
sbb
add
loop
xabort
inc
add
jmp
push
daa
clc
mov
add
mov
adc
add
add
rorl
lahf
clc
mov
imul
clc
dec
outsb
insb
aas
pop
cmpsl
clc
jo
add
cli
mov
xlat
pop
sub
jno
add
jmp
pop
mov
outsb
imul
cmp
mov
out
add
inc
add
pop
rorl
clc
movsl
clc
jbe
clc
daa
clc
push
pop
cmp
add
sahf
lcall
xor
add
leave
insb
sbb
cmp
sub
fs
dec
jb
add
jno
add
add
add
clc
xabort
mov
add
add
adc
add
cmp
clc
int3
push
or
clc
jmp
xor
data16
popa
add
in
jne
add
add
add
clc
lret
clc
inc
add
fwait
or
add
stc
mov
inc
clc
stc
mov
push
push
add
leave
in
stos
mov
addr16
cmp
jmp
mov
clc
xchg
pop
jbe
pop
pop
cmpsl
clc
jno
add
xbegin
leave
mov
sbb
cmp
cmp
add
xchg
adc
add
sub
add
clc
jb
add
add
lret
cmp
lods
aaa
add
add
clc
jg
fidivrs
xchg
out
lret
aaa
xor
jmp
jp
jmp
mov
aas
cmp
clc
inc
clc
add
cmp
add
or
stos
cmp
gs
lcall
aad
mov
sti
or
clc
ret
inc
clc
push
add
pop
pop
clc
xbegin
inc
add
jle
adc
pop
or
pop
sbb
add
add
sbb
dec
mov
xchg
cmp
push
add
inc
add
sub
add
add
xbegin
daa
clc
add
jecxz
adc
add
clc
out
push
push
add
add
add
add
pop
pusha
add
mov
mov
mov
add
lcall
sub
xchg
iret
pop
fidivrs
clc
icebp
and
add
add
jne
cld
inc
add
cwtl
sbb
ss
fsubs
cmp
and
add
and
add
aas
lods
imul
sbb
jecxz
and
pusha
add
sub
push
pusha
add
pop
cltd
outsl
lcall
add
mov
pop
jl
fisubrl
mov
cmp
add
cwtl
fistl
jne
sub
jp
add
insl
pop
clc
imul
and
add
clc
pushf
inc
add
outsl
mov
add
add
icebp
inc
add
int
loope
push
call
data16
pop
gs
clc
jmp
add
mov
add
adc
add
clc
pop
mov
clc
cld
stc
jb
add
push
ret
imul
mov
iret
pop
hlt
popa
add
cmpsb
clc
data16
or
aas
dec
pop
add
add
adc
add
cmpsl
clc
and
add
adc
lret
xor
clc
inc
add
movsl
clc
mov
ljmp
add
add
jae
add
cltd
push
inc
clc
mov
or
dec
add
add
add
add
mov
gs
xchg
loop
cs
psllw
int3
test
adc
add
and
add
ljmp
clc
cmpsb
clc
jo
add
mov
xchg
dec
inc
clc
imul
sbb
dec
or
icebp
sub
cmp
adc
or
stos
jbe
mov
clc
sbb
mov
add
sarl
out
adc
add
pop
clc
cmp
push
add
push
add
jo
add
add
adc
bound
add
bound
add
movsl
clc
pop
frstor
clc
insl
ja
and
sbb
insb
mov
lcall
pop
repnz
clc
mov
sbb
mov
add
add
data16
nop
adc
add
add
out
in
sub
add
xchg
push
and
add
pushl
clc
in
sar
dec
cmpsl
clc
enter
dec
data16
inc
add
sarb
pop
and
add
add
out
nop
bound
add
sbb
clc
scas
pop
rcrl
or
jno
add
add
lret
xchg
push
add
fisubrl
pusha
add
repz
iret
push
test
repnz
clc
push
add
mov
jmp
clc
fucompp
fdivl
add
xchg
out
shll
loop
and
add
in
pushf
push
jns
sub
leave
add
lock
add
add
xbegin
xchg
aas
xchg
cwtl
and
push
add
out
gs
into
fwait
cmp
add
add
fwait
fwait
pop
pop
push
pop
xor
add
fdivs
dec
push
clc
rol
clc
and
add
sub
sar
fiaddl
and
add
adc
add
add
repnz
scas
and
add
in
and
mov
add
ficomps
xchg
adc
add
add
mov
clc
mov
push
fucomp
call
dec
cmp
xchg
mov
cli
pop
lods
mov
js
clc
jnp
clc
shll
fs
and
in
stos
inc
clc
xchg
aad
xor
add
clc
or
in
cmpsl
clc
cmp
or
add
stc
and
mov
mov
ja
clc
or
shr
or
inc
add
adc
add
add
test
cmp
clc
xor
add
out
adc
add
clc
inc
clc
fistpl
or
add
fwait
dec
cmp
add
fsubr
incl
add
mov
je
push
xchg
and
add
clc
pop
sarl
in
jl
dec
arpl
add
add
and
pop
fcompl
mov
data16
sub
in
xchg
dec
push
add
jge
clc
jns
add
cmc
popa
add
sub
xchg
ss
pop
pop
cmp
sahf
or
add
sub
add
cmp
add
test
jnp
popf
pop
clc
dec
decl
xor
out
push
add
jl
clc
jecxz
cmp
or
sub
clc
ret
add
cwtl
aad
pop
ret
clc
push
mov
ja
sub
clc
cmp
add
js
pushf
jmp
movsl
clc
jno
add
clc
test
jmp
lcall
jo
add
adc
add
sub
add
outsb
mov
imul
mov
daa
clc
adc
add
inc
clc
lods
inc
clc
mov
pop
cmp
mov
add
movsl
clc
adc
add
cmp
clc
pop
lcall
clc
jle
clc
pop
adc
add
mov
aas
aad
clc
nop
mov
add
imul
add
add
sub
sahf
pop
adc
add
lret
lahf
clc
xchg
xabort
clc
insl
pusha
add
sub
pop
mov
add
in
jnp
clc
push
lods
cmp
mov
loop
xor
add
cmp
clc
xchg
popa
add
or
add
cmp
in
lods
mov
rolb
add
add
add
outsl
jle
clc
pop
cmp
add
dec
fstps
in
fsubl
add
add
mov
add
in
sahf
cmp
mov
clc
or
clc
bnd
jg
jae
add
clc
loop
jo
add
call
clc
fs
rcrl
add
xor
add
push
clc
inc
add
data16
push
pop
mov
add
fcmovnb
clc
jl
clc
push
cmp
clc
push
jne,pt
dec
add
add
add
jecxz
cltd
popa
add
clc
dec
pop
dec
jnp
mov
or
add
add
add
shl
fnstenv
push
push
neg
jns
addr16
push
fmull
mov
clc
ret
clc
push
inc
add
adc
clc
in
adc
add
clc
gs
out
mov
push
and
add
add
repnz
and
and
add
add
clc
test
lea
cmp
es
repnz
test
sub
xor
clc
sbb
nop
pop
clc
out
inc
clc
mov
popa
add
cmp
cli
int3
rcrb
cltd
adc
add
cmp
xchg
fs
clc
clc
dec
movsb
clc
jge
clc
and
add
rcrb
add
fcomps
add
enter
jmp
jl
clc
jno
add
add
add
mov
js
add
xchg
pop
sbb
adc
clc
loopne
insb
jecxz
es
enter
enter
clc
pop
clc
popf
mov
out
je
cwtl
cmp
xor
and
add
xlat
cmp
iret
mov
jl
pop
xor
add
clc
pop
lock
setg
jbe
sub
mov
add
add
add
add
add
inc
clc
push
clc
stc
int
push
add
and
add
inc
clc
and
jl
and
add
jne
lods
cmp
clc
adc
add
add
insl
out
cmp
dec
pop
pop
jp
lods
pop
ret
add
xor
add
iret
sbb
jno
add
cli
insb
cltd
cmp
xor
add
add
sbb
clc
dec
ss
in
sti
es
push
mov
cmp
mov
and
add
clc
cmp
add
clc
pop
push
add
loope,pn
jo
add
aam
clc
cmp
mov
lret
add
addr16
add
add
add
cmp
add
add
add
add
jne
push
inc
clc
scas
loopne
lods
cmp
sub
add
push
leave
out
sub
add
loope
pop
sub
nop
cmp
jnp
push
scas
mulb
add
and
clc
addr16
divb
aas
std
add
add
add
sar
pop
stc
push
in
inc
clc
jmp
push
out
pop
sar
ds
lods
lods
cld
mov
stos
mov
clc
ds
mov
stc
addr16
pop
ja
clc
jmp
add
or
mov
clc
test
fnstenv
push
add
dec
test
jno
add
mov
cmpsl
clc
mov
cld
xor
add
adc
add
fs
push
mov
imul
xchg
xchg
stos
cmp
sar
pop
adc
enter
add
lret
or
cmp
or
ret
ja
jnp
mov
adc
sub
jnp
mov
clc
enter
adc
add
ffree
clc
test
fisttpll
add
addr16
jp
add
arpl
add
xor
add
sar
clc
and
add
fsubp
clc
clc
aad
inc
clc
gs
sahf
testl
adc
aam
adc
mov
xchg
std
dec
sahf
and
fnstcw
dec
fwait
pop
clc
in
cmp
or
daa
clc
fistl
out
fs
dec
cmp
add
adc
clc
jmp
add
std
mov
add
or
bound
add
sub
data16
sub
mov
aad
clc
cli
and
add
clc
mov
push
add
iret
daa
clc
out
scas
dec
ret
clc
dec
lret
pop
dec
lea
jmp
lock
add
clc
push
stc
jnp
clc
sbb
clc
push
add
jns
clc
adc
add
clc
xor
add
lret
sbb
loop
xchg
cmp
pushf
outsl
jo,pn
add
jl
sbb
clc
pop
mov
fmul
imulb
clc
add
add
clc
int
test
add
pop
clc
mov
inc
clc
bound
add
loop
neg
xchg
adc
lahf
je
jle
add
bswap
imul
push
push
lret
add
add
adc
add
add
aad
add
fiadds
cli
mov
add
clc
fcompl
fsts
clc
cmp
clc
leave
jo
add
sti
pop
fisttpl
mov
sbb
je
in
jbe
push
sbb
and
add
add
adc
add
clc
jne
dec
or
es
jmp
clc
stc
test
xchg
dec
adc
add
add
add
clc
enter
mov
stc
sub
pop
mov
gs
cmp
xor
add
call
dec
mov
fldt
sub
outsb
xbegin
clc
and
add
pushl
movsb
clc
mov
in
or
add
lods
jae
add
add
dec
jb
add
fcmovnu
xchg
ja
add
add
add
add
inc
clc
dec
dec
xchg
xchg
mov
push
push
xor
add
ljmp
cmpsb
clc
fstpl
add
jns
add
inc
add
cld
mov
cmpsl
clc
in
mov
in
and
add
push
xchg
xbegin
adc
add
mov
push
add
jg
add
je
dec
cld
cmpsl
clc
fldenv
and
add
jns
loope
ds
add
mov
sub
clc
ficomps
ds
clc
aas
jg
xchg
clc
iret
fwait
add
mov
dec
sbb
addr16
cmpsl
clc
pushf
sbb
push
mov
and
add
clc
frndint
adc
add
clc
xor
add
clc
xbegin
dec
xabort
pushf
cmp
add
mov
clc
sub
stos
clc
sar
mov
arpl
add
mov
cwtl
pop
scas
movsl
clc
add
clc
jecxz
jp
and
fwait
cmp
sbb
fs
mov
jae
add
clc
mov
add
push
pop
jne
dec
clc
inc
add
mov
clc
cwtl
call
add
ffree
clc
sbb
inc
clc
sbb
arpl
add
dec
pop
test
jecxz
jp
clc
dec
es
aam
sti
test
or
mov
and
add
add
cmc
add
add
xchg
mov
add
xchg
fbstp
xchg
cltd
xor
add
lahf
push
cmp
out
sub
xlat
xor
add
cmpsl
clc
out
inc
clc
mov
dec
cltd
sar
lret
inc
add
call
add
jne
jg
or
clc
push
add
lret
clc
or
inc
clc
jmp
fs
mov
and
add
clc
cmpsl
clc
inc
clc
jne
add
mov
leave
nop
and
add
clc
pop
xor
clc
lock
add
jno
add
jecxz
sbb
pop
clc
sbb
aaa
xor
mov
add
stc
jge
mov
add
inc
clc
clc
inc
clc
fsubs
mov
mov
and
add
jne
arpl
add
sub
xor
inc
clc
mov
imulb
bound
add
clc
xlat
or
nop
inc
add
mov
sub
add
stos
ret
clc
jmp
jg
add
inc
clc
mov
call
add
movsb
clc
push
push
fnstsw
sbb
mov
leave
cmpsl
clc
xchg
xchg
aaa
pop
mov
pop
dec
pop
cmp
and
add
ret
clc
xabort
add
xchg
int3
test
mov
clc
dec
hlt
mov
mov
nop
mov
loopne
cmpsl
clc
mov
add
clc
mov
add
xchg
pop
dec
or
scas
pop
cltd
add
add
std
daa
clc
xchg
stc
mov
add
mov
pop
push
push
push
data16
xchg
push
xchg
push
and
add
dec
cmp
xor
add
push
add
cmp
clc
sbb
sbb
clc
inc
clc
inc
clc
xchg
lret
push
dec
sub
sub
int3
jecxz
cwtl
inc
add
gs
out
sahf
push
xor
add
add
cmp
add
ds
mov
sbb
or
and
add
add
fldenv
add
inc
clc
in
sub
inc
clc
js
sub
and
add
clc
lahf
jle
jne
xor
add
add
jae
add
add
xchg
jnp
mov
xchg
loope
add
add
push
clc
add
jns
gs
cmp
clc
sub
add
xor
add
ret
clc
sub
dec
cmp
in
cmpsl
clc
push
cmpsb
clc
inc
add
sbb
sbb
mov
clc
dec
xchg
roll
int
adc
add
mov
clc
jbe
imul
add
add
clc
fcomp
sbb
xchg
xor
add
add
jecxz
xor
add
jno
add
adc
add
add
xor
add
add
cmp
dec
out
jns
add
add
add
cmp
mov
adc
add
loope
gs
lea
jg
or
inc
add
pushf
in
mov
clc
cmp
ret
clc
mov
clc
jno
add
add
gs
std
cmp
sub
push
shll
clc
inc
clc
fldt
pop
adc
add
add
in
ljmp
loopne
enter
lea
clc
stos
adc
add
push
push
add
gs
fwait
and
add
sub
add
and
add
pop
pop
clc
js
clc
jns
jne
clc
dec
push
add
jle
aam
popa
add
pusha
add
dec
enter
clc
or
add
pop
xchg
push
sar
mov
cmp
mulb
inc
add
dec
fwait
sar
stos
mov
imul
push
add
xor
clc
cld
dec
mov
mov
inc
clc
xor
add
add
mov
push
add
cltd
in
fidivl
add
aas
rcr
and
add
fistpl
pop
cli
sub
clc
dec
sbb
push
clc
inc
add
dec
sbb
fimuls
push
inc
add
xchg
repnz
push
add
xchg
jl
pop
and
add
clc
movsb
clc
loope
test
dec
loope
sbb
loop
movsb
clc
sub
clc
pop
test
bound
add
add
mov
sub
add
push
clc
fcmovb
clc
push
clc
aad
xor
add
call
dec
cmp
clc
adc
add
jge
iret
push
add
lods
jle
fsubrs
lea
add
jno
add
add
dec
push
add
xor
mov
push
add
jge
sar
nop
pop
pop
mov
ss
push
clc
cwtl
insl
clc
dec
and
add
clc
ds
stos
and
into
and
add
lea
pop
sbb
xor
add
add
pop
in
jp
popa
add
lea
adc
add
mov
ljmp
dec
es
mov
add
pushf
int3
xlat
insb
sahf
ret
clc
fmulp
ja
pop
stos
fs
mov
cld
xchg
aad
add
cmpsb
clc
push
jge
add
inc
add
cmp
cs
inc
add
outsl
sub
gs
pop
into
xor
add
jp
mov
cmp
loope
mov
mov
ja
xchg
xor
add
jmp
sarl
xor
add
jmp
push
add
push
add
sub
mov
aas
insl
movsl
clc
js
mov
cli
outsb
mov
inc
clc
cmp
fmuls
fcmovb
clc
stos
aaa
xchg
stos
test
mov
xbegin
xor
add
add
or
add
popf
push
add
cmpsb
clc
xchg
push
loop
in
das
xchg
sbb
or
push
cmp
add
mov
sbb
dec
out
ljmp
xor
add
ret
sarb
iret
clc
insb
jne
mov
add
cld
mov
cmp
clc
push
add
add
add
clc
lret
add
xchg
sbb
mov
inc
clc
fisubrs
clc
jp
cmp
jp
xchg
jne
es
leave
add
add
xchg
aaa
pop
rep
or
adc
add
or
lret
add
add
add
inc
add
pop
arpl
add
add
xor
add
add
jae
add
add
jmp
jl
add
xor
data16
insb
in
ja
popf
mov
clc
shrl
jmp
clc
dec
daa
clc
push
jbe
clc
mov
aaa
inc
clc
mov
arpl
add
shll
clc
lahf
scas
jo
add
push
inc
add
sbb
in
hlt
pop
fucomip
cmp
clc
and
add
add
add
sbb
adc
add
mov
cltd
stc
ret
jg
mov
add
jbe
mov
popf
xor
add
shlb
clc
mov
add
cld
push
mov
clc
cmp
add
add
clc
js
sbb
sub
movsl
clc
cmp
iret
dec
push
sbb
cmp
add
or
adc
and
loop
icebp
sub
loop
das
push
hlt
and
add
add
cmpsl
clc
test
lret
ss
dec
mov
add
jmp
pop
clc
pusha
add
std
sar
pushf
cmp
xchg
xchg
cld
iret
mov
jnp
clc
inc
add
push
cld
es
cwtl
push
mov
dec
test
ret
clc
dec
lods
imul
popa
add
pop
or
add
jne
rcl
data16
or
cmp
cmp
popf
push
call
clc
aam
aam
add
test
mov
clc
out
xor
add
add
ret
clc
pusha
add
addr16
push
cmp
add
imul
popa
add
pusha
add
mov
add
add
mov
ret
mov
cmp
mov
mov
es
jecxz
or
clc
pop
push
sbb
clc
enter
ffree
clc
adc
add
and
add
sar
nop
jecxz
inc
add
mov
clc
dec
mov
jb
add
inc
clc
mov
add
mov
or
xchg
mov
add
imul
clc
push
xchg
fwait
inc
clc
jp
mov
dec
inc
add
mov
add
shlb
cwtl
jmp
add
add
clc
xor
aad
clc
addr16
sub
and
add
cmp
cmp
clc
xor
clc
jle
add
and
lahf
mov
bound
add
xchg
shll
clc
aas
mov
ljmp
shrl
iret
add
cmp
xchg
cmp
mov
and
add
adc
add
nop
or
clc
dec
and
add
clc
sub
add
cwtl
fstpt
out
imul
imul
add
add
add
lods
ljmp
sar
xabort
and
add
mov
ljmp
push
addr16
test
fldl
rolb
dec
xbegin
cmp
clc
adc
add
and
add
xor
add
push
into
jl
mov
cmp
out
sahf
or
add
pusha
add
push
inc
clc
jnp
das
das
add
add
add
insl
jae
add
add
add
add
sarb
clc
mov
add
add
adc
add
add
clc
pushf
lods
pop
nop
cmp
je
jmp
insb
cld
repz
clc
or
je
stos
insb
jge
push
lods
cmpsb
clc
xor
jmp
cmp
pusha
add
xchg
cld
pushf
in
in
out
test
clc
mov
clc
mov
cmp
clc
fwait
pop
cltd
nop
mov
