ja
fisttps
sub
add
push
add
or
sbb
cmp
push
add
repz
mov
jns
and
xchg
fistps
mov
insb
xor
push
add
sbb
hlt
add
add
add
sub
xchg
adc
arpl
addr16
add
add
dec
lods
mov
xchg
lret
add
mov
add
dec
mov
leave
pop
add
add
sbb
or
add
sbb
aaa
add
add
pop
das
int3
mov
jno
test
pop
add
add
test
add
stos
cmp
js
or
je
data16
add
pop
jno
dec
in
xor
cmp
add
dec
ret
faddl
xor
add
or
mov
add
mov
add
sbb
cs
add
add
xchg
addb
test
push
jle
std
and
add
dec
mov
loope
pop
inc
push
add
out
enter
add
add
add
addr16
lods
jno
test
xorps
mov
jg
pop
rcl
test
imul
inc
push
jp
mov
scas
lock
add
mov
xchg
add
and
adc
xchg
xchg
add
shll
nop
add
inc
repz
add
stc
sahf
out
add
dec
out
mov
push
add
jge
push
out
out
imul
hlt
add
sbb
add
add
add
add
xor
daa
lret
jecxz
mov
roll
pop
xchg
add
pusha
add
jne
add
pause
add
nop
add
add
add
mov
hlt
add
rolb
mov
incl
push
add
int3
cld
lcall
outsb
adc
sub
pop
inc
push
add
imul
popf
stos
lret
rolb
mov
or
cmp
add
xchg
je
xor
push
mov
sbb
mov
jge
add
roll
fsubrp
sahf
addb
add
mov
add
jo
imul
add
mov
jnp
repz
pop
push
insb
loop
cmp
inc
jno
sbb
loopne
je
fmull
jmp
lret
add
in
popa
inc
repnz
pop
pusha
add
adc
lea
add
mov
in
flds
adc
sub
mov
add
and
xchg
and
mov
jge
cmp
out
je
xchg
mov
dec
addr16
add
cmpsb
add
add
shll
xor
add
insl
fadds
clc
bound
mov
testb
jnp
mov
andl
lcall
inc
cltd
aas
cmc
stos
sbb
jl
inc
add
xor
sti
mov
jo
lret
add
inc
add
add
cmpsl
leave
movb
in
add
test
les
or
add
jmp
push
add
rolb
iret
loop
fmull
adc
jne
add
and
mov
cld
ljmp
dec
insb
dec
in
in
mov
sub
movups
xchg
add
cmc
stos
dec
xchg
or
mov
push
add
aad
mov
cmpsb
add
add
add
fisubrs
mov
leave
xchg
add
ja
and
mov
add
movsb
add
push
mov
adc
add
sbb
add
add
add
mov
add
movb
sub
addb
fsubrs
int
add
push
add
inc
add
mov
mov
arpl
jb
call
mov
in
xchg
add
add
xor
adc
movsb
add
add
outsl
out
inc
add
into
ja
add
add
mov
add
in
test
add
fnstcw
push
inc
add
mov
add
xor
add
mov
add
add
add
add
add
add
add
mov
sub
or
dec
loopne
add
data16
push
add
ret
add
cld
lret
inc
add
rcrl
hlt
add
cltd
in
mov
sub
mov
out
add
into
adc
aaa
pop
jnp
add
xor
mov
add
jnp
fsubrl
adc
sbb
arpl
add
mov
fimuls
add
add
and
jmp
je,pt
and
les
xchg
add
push
sti
movb
lret
call
dec
jno
popa
adc
push
add
dec
outsl
loope
scas
ljmp
neg
mov
mov
std
lret
frstor
push
add
lret
out
pop
loop
stc
sbb
hlt
add
add
mov
add
out
xlat
enter
push
jmp
outsb
rcr
inc
add
add
inc
add
xchg
rolb
and
imul
pusha
add
dec
test
add
dec
mov
push
imul
bound
mov
icebp
shll
mov
xor
rolb
jns
out
adc
mov
lods
jb
rolb
ret
mov
sub
push
add
add
push
push
add
lcall
cmp
add
cmpsb
add
xlat
imull
and
xor
mov
push
add
outsl
ucomiss
or
sbb
add
or
dec
adc
push
cmp
mov
cld
mov
pusha
add
jns
add
add
add
add
push
add
lret
out
add
mov
or
add
lea
testb
in
leave
loope
sbb
dec
arpl
mov
int3
addb
mov
and
inc
add
push
add
jno
mov
ja
add
push
add
dec
repz
and
and
push
add
dec
pop
sub
ljmp
in
cli
cmp
pusha
add
xor
les
jns
push
sub
ret
jb
aaa
dec
xchg
add
cmpsl
mov
sbb
add
fcmovnb
mov
xor
arpl
aas
mov
ja,pt
add
mov
daa
and
fcmovb
add
add
xor
mov
add
add
push
and
cli
addr16
mov
xor
test
test
rolb
add
add
add
mov
add
mov
lret
xchg
repnz
rolb
xor
mov
stos
addl
sub
test
lret
lret
sub
lods
jl
daa
cmc
mov
add
sbb
repnz
test
leave
mov
call
loopne
add
repnz
push
stos
and
dec
inc
add
fiadds
push
cmp
in
mov
imul
int3
rolb
fisubs
sub
rolb
mov
rolb
add
add
add
add
mov
mov
add
mov
push
inc
or
add
cltd
mov
bound
mov
add
add
jle
fcomip
add
jge
adc
addb
hlt
add
sti
loop
mov
mov
std
jns
mov
mov
mov
add
jp
add
add
add
sub
mov
mov
add
mov
add
inc
add
add
jmp
add
mov
xchg
icebp
and
mov
add
add
clc
and
outsb
inc
add
add
popa
arpl
add
mov
add
push
add
les
lds
add
iret
dec
inc
les
insb
insb
jns
add
nop
add
add
mov
add
aam
insb
jmp
add
imul
lods
push
add
adc
arpl
sub
fdivs
sub
add
add
jecxz
add
add
test
movb
adc
lds
add
addb
lahf
jmp
pushf
out
cmpsl
or
add
pop
fidivs
shrl
cmp
popf
inc
stc
scas
jnp
cs
add
add
add
sub
mov
add
sub
int3
pushf
test
mov
mov
inc
add
add
arpl
cli
cmpsb
add
add
jecxz
cmp
add
das
xlat
rcl
push
imul
add
mov
jmp
inc
add
xlat
sahf
test
cmpsb
add
add
sarl
movsl
fstl
fildll
leave
add
mov
push
add
push
add
mov
out
mov
xor
and
pop
add
call
cs
in
rcr
adc
mov
fsub
add
cmp
out
pop
push
cmp
push
jb
mov
out
cmp
dec
xorl
pop
mov
cmp
mov
mov
jnp
mov
sbb
pop
loope
add
scas
and
add
dec
insl
ficoms
ja
add
add
addb
add
push
add
add
add
lahf
cli
test
in
out
pop
lods
sub
pop
cmp
out
clc
fistpl
inc
add
call
iret
cltd
adc
xchg
cwtl
aaa
inc
add
pop
xchg
add
inc
cmp
mov
pop
adc
xor
add
sbb
negl
inc
mov
frstor
mov
add
add
add
data16
nop
add
stc
inc
fwait
dec
int3
pop
in
push
add
jb
movb
add
add
add
in
jbe
clc
hlt
add
xchg
add
int
add
or
cld
je
fcmovu
jns
mov
and
add
fistpl
test
add
ljmp
imul
and
in
add
xor
lea
add
je
fcomps
cmc
mov
mov
adc
add
add
inc
add
mov
mov
sub
rcll
sub
jge
add
adc
scas
loope
bound
mov
ja
add
add
add
mov
loopne
std
xchg
add
fists
push
loop
addr16
inc
rolb
scas
cmc
jbe
lock
std
sub
hlt
add
pushf
stc
js
add
ds
fisubrl
mov
add
iret
ficomps
lcall
test
push
pop
xchg
add
mov
ja
lock
nop
add
adc
sub
dec
loop
fcompl
mov
push
jb
and
mov
pop
sub
add
add
and
sbb
mov
addb
inc
add
add
sub
ficompl
cmp
add
add
mov
push
mov
das
or
in
fiadds
mov
daa
lods
lock
mov
add
mov
adc
mov
push
add
inc
xchg
adc
mov
movb
add
mov
add
add
mov
sbb
mov
adc
add
add
inc
adc
std
out
repz
imul
movb
rol
add
fdivp
mov
add
loope
add
addb
cltd
jg
in
pop
sahf
scas
jle
add
push
add
mov
cmp
cmpsb
add
mov
cltd
push
add
add
out
or
sahf
lods
dec
xchg
add
scas
lcall
mov
xchg
pop
lcall
add
ret
mov
loopne
mov
xchg
add
dec
mov
push
add
out
in
pop
scas
jno
mov
lcall
leave
add
add
mov
shll
shrl
aaa
arpl
test
dec
test
addb
jmp
add
out
cmpsb
add
push
add
or
add
insl
sbb
mov
mov
fiaddl
add
or
inc
push
and
push
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
push
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
pop
ljmp
add
add
mov
repnz
pop
xchg
add
mov
add
loop
fs
jmp
out
and
lods
push
pop
mov
jp
js
cmpsl
adc
xor
add
inc
add
mov
testb
imul
xor
pusha
add
jecxz
add
jge
out
fwait
outsl
add
je
daa
cmc
push
add
mov
add
addb
add
add
scas
mov
lcall
dec
push
add
adc
mov
add
or
testb
pop
test
cmp
add
add
push
mov
in
xor
flds
mov
xlat
jae
sahf
lods
ret
insl
sub
jnp
cmpsl
insb
pop
jmp
lret
add
mov
jge
mov
add
andl
fucomip
pop
add
xor
popf
ds
add
mov
jns
add
push
fldl
add
add
movsl
jnp
pop
into
into
dec
stos
lds
push
add
repz
add
add
icebp
inc
cmp
nop
add
js
stc
lods
push
into
cmp
sub
movsb
add
mov
add
jg
xchg
testb
addb
add
loopne
mov
push
fdivrs
push
add
xchg
cmp
jecxz
fisttpll
add
jmp
add
add
add
pusha
add
loope
adc
mov
push
faddl
add
mov
jns
sub
add
add
add
in
dec
mov
scas
adc
sbb
mov
add
stos
cli
add
add
pushf
shll
sub
test
mov
scas
jecxz
sbb
mov
lods
decl
test
cld
pushf
inc
add
inc
add
dec
pop
jg
testl
movsb
add
out
cmp
xchg
add
add
add
hlt
add
dec
dec
sbb
pop
and
fs
and
in
push
add
pop
stos
adc
and
mov
add
push
add
add
in
add
or
cmpsb
add
jno
add
test
movsl
sub
pop
add
jae
out
stc
sbb
add
mov
icebp
fmuls
add
add
add
inc
add
add
mov
push
dec
fbstp
out
inc
sub
lock
xchg
pop
cmp
add
sbb
add
lock
cwtl
bound
mov
loope
out
or
das
add
mov
cltd
or
mov
shll
add
mov
inc
sarl
pop
clc
into
or
xor
cmpsl
iret
jne
adc
ret
add
add
sub
faddp
jmp
add
xchg
pop
rcrl
cs
cmc
fcomps
add
mov
les
jmp
jb
sar
movb
inc
gs
jmp
add
icebp
jnp
rolb
fwait
repz
push
add
fisttpll
les
movb
int
ret
scas
pop
loopne
std
jno
ret
out
movsb
add
add
out
adc
std
mov
add
es
lcall
xor
mov
rolb
in
data16
add
ficoml
gs
add
loop
lea
add
inc
inc
add
icebp
in
mov
fistps
std
cli
jge
cli
mov
add
stos
xchg
add
push
add
add
add
mov
insl
sar
lcall
and
mov
add
xlat
add
mov
test
or
std
test
fisubrs
test
add
mov
data16
add
movb
loopne
or
jns
je
sub
popa
jg
add
xchg
out
adc
pop
ljmp
mov
xor
repz
add
les
push
xchg
ja
add
mov
and
mov
mov
dec
mov
xchg
add
add
add
mov
inc
xchg
imul
stc
xchg
jo
ret
fwait
popl
fdiv
scas
fnsave
adc
mov
sub
adc
rolb
and
lea
mov
or
mov
add
add
xchg
and
mov
aaa
data16
add
hlt
add
mov
mov
jnp
add
push
xchg
ds
daa
mov
addb
add
mov
addl
mov
and
inc
stos
sub
add
and
add
jmp
xor
xchg
stos
in
cltd
lret
xor
add
xchg
add
bound
mov
popa
lock
test
cwtl
cld
mov
add
in
push
sub
push
add
stos
inc
add
mov
add
add
jmp
add
add
jmp
imul
cmp
add
or
add
pushf
das
jle
pop
sbb
cmpsb
add
iret
push
add
jne
add
mov
and
filds
lock
sub
movsb
add
xchg
fdivl
add
adc
add
add
cmp
add
and
mov
add
xchg
es
push
lea
adc
dec
stc
fwait
jp
add
stos
movsl
dec
jmp
add
mov
adc
nop
add
sub
dec
std
sbb
mov
add
ja
add
sahf
push
add
add
call
mov
cmp
ret
sub
rcll
add
cmc
adc
jmp
addb
sbb
fwait
out
cmpsb
add
rcrl
loopne
lret
add
push
add
mov
add
jo
mov
add
mov
xor
push
push
orl
fnsave
add
add
add
mov
cmpsb
add
add
mov
and
mov
movsb
add
rolb
inc
inc
add
data16
add
roll
fdivrs
out
sub
mov
sub
mov
leave
in
pop
add
test
xchg
cmpsl
mov
mov
loope
add
mov
test
mov
out
add
mov
sub
mov
inc
mov
add
xchg
ja
mov
lods
jge
shll
mov
add
add
mov
xor
sbb
pop
and
mov
dec
jb
movsl
jns
push
lock
rcrl
add
test
add
mov
data16
mov
add
add
pop
or
mov
add
add
test
add
js
or
stc
data16
in
sub
lahf
push
hlt
add
xor
sbb
push
pop
outsb
sub
imul
add
add
sbb
mov
add
ret
pop
out
add
imul
add
fadds
add
std
xchg
addb
add
add
inc
add
mov
movb
add
out
dec
out
bound
mov
dec
sbb
mov
xchg
add
repnz
and
mov
jne
pushf
dec
lods
repz
shll
inc
icebp
out
pop
loopne
fcomps
fisttpl
mov
ffree
add
and
xchg
push
add
in
sub
cltd
call
stos
inc
mov
adc
mov
pop
data16
xor
movb
add
pop
imul
rolb
add
sub
mov
add
hlt
add
jp
out
cld
loopne
or
and
mov
jns
add
dec
add
orl
data16
movsb
add
inc
xor
and
add
lods
xor
ds
mov
std
mov
cmpsb
add
leave
movb
leave
enter
test
je
mov
add
bswap
dec
inc
incl
xor
inc
add
aam
push
add
lods
add
add
data16
int
int
imul
mov
add
sbb
dec
push
add
imul
push
mov
dec
or
add
movsl
movsb
add
enter
add
popa
xor
cmp
aam
sub
add
pusha
add
pusha
add
ja
add
sbb
jecxz
xchg
insl
and
lods
fisttps
and
xchg
add
cmpsb
add
add
dec
js
addr16
add
mov
jge
out
mov
icebp
fwait
mov
add
add
mov
add
or
add
sbb
cltd
mov
js
push
inc
add
insl
fists
je
mov
jmp
push
push
cmp
xor
rolb
push
add
add
ret
lcall
cmpsb
add
les
xchg
mov
into
mov
ja
incl
sub
push
or
dec
les
add
jae
cli
cmp
xor
add
adc
movsl
pop
loopne
imul
pop
rolb
popf
push
add
mov
jl
fwait
lret
sbb
neg
shl
add
add
push
add
add
jmp
or
add
mov
or
idivl
add
enter
jp
add
lea
inc
add
mov
push
add
sti
jbe
dec
mov
xor
mov
dec
sbb
add
mov
out
addb
rolb
pop
sub
cs
into
xchg
add
addb
add
jecxz
or
jo
pop
mov
outsb
insb
repz
jecxz
testb
sahf
pusha
add
jecxz
add
fists
sub
jge
outsb
xor
add
pop
fcmovnbe
push
inc
jne
cmc
mov
dec
inc
add
in
mov
sti
cmpsl
push
add
add
pushf
addr16
clts
add
xor
add
mov
add
add
cld
mov
or
mov
cmp
add
das
xchg
mov
add
add
popf
clc
dec
mov
ja
out
dec
jge
cld
xchg
add
add
add
das
pop
outsl
mov
add
add
xchg
daa
xchg
cmpsl
cmpsl
mov
enter
add
fwait
and
lods
dec
push
mov
add
jno
and
mov
pop
xlat
imul
fcompl
test
xchg
mov
rolb
sarl
aam
jge
pop
jnp
addb
push
aam
jo
lds
adc
adc
fimull
add
pop
into
push
add
repz
lret
mov
outsb
adc
test
popa
andl
fimuls
rcrl
sarl
add
and
icebp
add
jmp
sbb
add
push
add
add
xchg
add
sub
push
add
fisttps
cld
sbb
mov
add
mov
cmp
add
add
mov
mov
add
lock
aaa
ljmp
addb
jns
ret
add
push
dec
mov
add
imul
lods
test
cmc
add
mov
add
adc
adcl
add
add
movsl
or
je
stc
or
shll
add
fidivl
sub
test
xor
dec
je
mov
add
jno
test
push
pop
insb
jmp
bound
mov
inc
xchg
add
dec
mov
add
movl
add
loope
shll
cwtl
andnps
inc
cmp
ja
popa
cli
loop
push
add
fadds
add
push
test
popf
add
mov
fdivs
dec
sub
add
stos
add
mov
adc
cld
addb
add
adc
add
mov
rolb
mov
mov
and
add
mov
inc
cli
aas
loop
push
add
xor
fstpl
mov
and
addl
add
in
rolb
xchg
rorl
add
cltd
push
add
pushf
int3
xchg
add
add
mov
fcmove
pop
or
mov
aad
add
stc
or
test
adc
mov
pop
push
xchg
cmpsl
mov
add
add
cmp
test
jae
loop
sti
or
fstl
subl
call
leave
push
add
add
test
inc
clc
sub
add
out
jb
and
lock
add
add
xchg
add
mov
testb
add
aas
arpl
ljmp
enter
pop
add
popa
stos
pop
push
add
sbb
add
mov
rolb
out
add
gs
sub
add
add
add
cmp
push
movaps
ss
push
pop
cmp
rolb
jp
dec
pop
cmp
outsl
hlt
add
aas
loop
sahf
je
xor
aas
mov
popa
xchg
add
movsb
add
int3
mov
addb
or
inc
push
mov
insl
mov
add
push
add
mov
fistpll
add
add
mov
pop
mov
stc
int
jb
stos
jle
mov
sbb
add
mov
push
add
sti
jg
call
das
subl
add
cmp
push
push
add
inc
mov
rcll
iret
or
in
fsubs
mov
cmp
push
add
add
pop
sti
pusha
add
lock
imul
hlt
add
xor
lahf
and
push
add
jge
add
add
mov
add
add
pop
dec
cmp
inc
cld
mov
pop
clc
out
add
or
movsl
pusha
add
inc
add
inc
shl
add
je
mov
add
sub
mov
js
add
add
jne
inc
inc
add
or
iret
aam
sub
nop
add
add
add
int3
adc
lcall
je
lcall
add
add
inc
loope
cmp
in
pusha
add
repnz
dec
je
in
jae
sub
rolb
xchg
inc
rolb
stc
mov
add
je
mov
adc
adc
add
add
mov
xchg
push
add
jnp
lea
mov
outsl
push
mov
je
scas
xchg
add
push
dec
mov
adc
jo
lods
pop
rolb
cwtl
add
sub
mov
sub
pushf
insb
inc
add
add
inc
add
add
xchg
add
jle
jo
xchg
add
rolb
pop
and
jo
xchg
add
jb
inc
add
leave
pop
mov
out
dec
cli
outsb
out
xor
push
add
bound
mov
pop
fcomps
dec
lret
jge
add
add
add
sub
pop
jl
cltd
lds
fildll
adc
pop
pop
jo
lahf
cs
add
js
push
add
addb
das
incl
add
mov
add
mov
add
mov
or
stos
mov
xor
add
or
mov
add
ljmp
call
mov
add
add
pop
test
jb
test
mov
jecxz
add
add
add
mov
das
sub
les
xor
arpl
in
adc
jp
add
jecxz
adc
or
fistpl
add
mov
add
xchg
add
aas
add
sub
jns
out
jge
add
dec
jnp
dec
je
or
add
mov
mov
mov
or
jbe
lcall
xor
addr16
sub
out
xchg
fdiv
add
jae
sahf
xor
mov
loop
ja
cld
ret
add
mov
dec
jns
add
add
mov
push
add
ds
das
mov
in
add
mov
cmp
lcall
inc
mov
add
test
add
jns
pop
xor
jns
rolb
mov
int3
stc
nop
add
sbb
out
in
iret
and
insb
mov
inc
add
mov
mov
addr16
fwait
addb
cli
test
iret
pusha
add
and
mov
leave
imul
add
js
add
add
leave
stos
and
addr16
pop
or
mov
jle
cmp
add
xchg
add
sbb
iret
jne
add
add
pop
repz
mov
jnp
add
add
and
or
and
ss
push
or
imul
cmp
add
add
xor
xor
push
add
cmp
push
cmp
add
bound
mov
push
add
xchg
pop
call
mov
lock
add
lock
push
add
mov
mov
push
add
mov
aaa
cmp
pop
pop
lock
jae
add
lea
and
ds
add
add
add
sbb
adc
jo
fistpll
add
push
add
mov
and
mov
call
out
inc
add
gs
add
scas
int
add
mov
aaa
imul
adc
xor
lock
inc
mov
pop
mov
or
out
inc
add
lahf
aas
sub
mov
add
add
rolb
inc
add
mov
mov
scas
mov
mov
out
inc
repnz
mov
scas
xor
adc
mov
add
add
pusha
add
add
pop
aad
inc
cmp
add
lret
add
sbb
rolb
scas
xchg
cmpsl
adc
adc
mov
lret
insb
and
sub
add
mov
rolb
sub
add
push
add
add
fcomps
stos
pop
addb
lret
movsl
icebp
sbb
add
ljmp
add
ljmp
inc
add
mov
cmpsl
movb
pop
mov
push
add
fidivl
add
sub
or
rolb
out
or
ss
cmpsl
dec
xchg
add
add
or
imul
stos
pop
fdivs
add
add
add
add
cmp
test
push
add
add
mov
stc
add
mov
pop
cmp
add
xchg
add
cmp
and
add
inc
add
out
fistps
out
pop
sub
jnp
mov
jecxz
inc
add
xchg
mov
or
aas
fwait
xchg
add
xchg
add
insl
or
js
xchg
pop
and
sbb
inc
lea
filds
mov
add
cmp
xchg
or
in
es
xor
jo
xchg
shll
stos
xor
cmpsb
add
clc
mov
mov
imul
sub
test
add
ret
mov
add
dec
ljmp
and
add
or
loope
add
push
shrl
sub
mov
fs
add
push
jne
add
cld
mov
jnp
stos
inc
inc
add
pop
push
add
add
add
add
add
add
push
lods
mov
adc
arpl
add
inc
add
pop
ficomps
ret
out
out
push
inc
add
jo
cwtl
jp
add
les
rolb
cmp
sub
mov
repz
or
mov
test
lea
sub
add
and
cs
jo
push
add
rorl
mov
jg
xor
or
add
pop
pop
inc
jle
sub
and
pop
cmp
and
pop
fs
inc
add
adc
imul
add
add
add
xchg
add
stos
pop
add
or
add
cmp
add
roll
cmc
pop
cld
or
push
int3
mov
jg
into
call
add
imull
add
jns
jmp
out
in
shrl
out
aaa
xchg
stc
xor
fnsave
add
dec
insb
ficompl
mov
in
sub
in
add
mov
push
jl
add
aas
adcl
fcmovu
xchg
add
add
add
mov
add
ja
out
imul
ret
add
xor
fsubs
fldt
mov
adc
test
insl
push
add
add
add
aam
jo
leave
cmp
inc
add
inc
cmp
add
add
repnz
fstl
add
add
add
aam
imul
push
add
cs
cmpsl
pop
in
add
test
pop
mov
add
add
xlat
pop
xchg
pop
outsb
call
mov
jno
add
je
cmp
xor
ljmp
and
mov
xchg
cmp
add
lahf
insb
and
js
sbb
lock
add
mov
lahf
sahf
cs
xchg
jge
xor
adc
test
sub
add
cmp
ds
outsb
mov
push
add
mov
popa
dec
fsubs
adc
lret
nop
add
int3
ret
in
or
cld
test
add
ficoms
lock
testb
ret
push
push
ficomps
xchg
or
and
hlt
add
mov
testb
add
mov
popa
cmp
call
xor
fidivl
jnp
add
add
jne
jmp
scas
xchg
add
test
in
mov
mov
add
addb
jge
test
mov
xor
movb
mov
icebp
cmp
or
inc
daa
fisttpll
inc
add
add
add
jne
add
mov
xchg
cmc
addb
add
inc
push
sbb
add
and
mov
add
add
mov
jge
cmp
add
mov
add
xor
lret
add
add
addb
add
sub
ret
push
cmp
mov
cmp
add
add
push
add
add
push
adc
lods
pop
mov
sbb
jbe
push
add
cmpsl
dec
cli
fwait
into
adc
jbe
dec
test
cld
and
hlt
add
mov
mov
enter
fimull
add
push
jle
push
add
adc
cmp
add
call
cli
xchg
add
call
mov
add
dec
enter
mov
add
xor
addb
add
jnp
and
add
mov
push
add
stc
cld
add
mov
or
add
imul
jge
add
mov
rolb
add
add
push
and
add
add
inc
scas
inc
mov
sbb
imull
push
add
push
mov
jo
push
add
jae
or
add
add
add
add
stc
les
xor
push
add
add
add
add
adc
sub
sarl
add
pop
ret
jg
or
add
fwait
popa
movb
hlt
add
add
and
mov
add
inc
add
jae
jmp
add
xchg
push
add
push
pop
dec
and
int3
push
into
aad
add
cwtl
scas
cli
test
ret
bound
mov
add
fistpl
add
add
or
mov
lods
jp
cmp
xchg
into
inc
add
adc
in
jno
ds
xchg
fistl
insl
and
lods
cmp
jne
iret
sub
add
bound
mov
mov
add
cmp
mov
das
jge
add
add
or
pop
pop
xor
sbb
add
les
mov
sub
mov
dec
int
or
add
mov
mov
add
mov
push
add
imul
pop
adc
addr16
or
lock
dec
ret
popl
hlt
add
add
push
cmp
add
cmp
loop
movsl
and
rolb
inc
add
addr16
cmp
dec
dec
sbb
mov
add
mov
add
icebp
outsl
mov
mov
xchg
fldt
rcrl
sub
add
imul
jne
adc
add
cwtl
imul
inc
mov
in
int
adc
data16
add
mov
add
sbb
pushf
stos
mov
in
movb
jecxz
mov
insl
xchg
mov
sub
sbb
add
jbe
repz
mov
pop
test
adc
fs
push
inc
clc
imul
cs
icebp
jmp
or
or
das
sbb
add
add
add
call
aad
ja
add
lcall
pop
sub
add
bound
mov
add
pop
jmp
sub
lods
js
inc
add
sti
sti
and
aad
stos
sbb
mov
add
mov
fildl
dec
inc
add
xchg
dec
imul
adc
vdivpd
sub
mov
pushf
inc
add
ljmp
mov
clc
hlt
add
add
jp
add
add
or
iret
dec
pop
fisubl
jmp
jle
xchg
add
mov
add
cmpsb
add
pusha
add
rolb
iret
test
hlt
add
fdivl
add
mov
ret
xchg
xchg
mov
add
or
add
add
add
add
mov
in
sub
add
pop
add
mov
or
add
js
bound
mov
add
out
ljmp
bound
mov
ret
daa
pop
in
cmpsl
mov
inc
add
add
add
jne
jge
ja
loop
and
mov
jge
movb
add
pop
mov
inc
add
cltd
fists
leave
jns
movsb
add
xorl
mov
add
mov
mov
jno
add
aad
add
inc
add
cmc
xchg
add
add
nop
add
and
adc
adc
inc
add
fmul
xchg
lcall
leave
stos
push
add
add
add
push
add
addr16
std
jb
aas
out
lds
jae
les
jae
fisttpl
imul
jp
xor
repnz
jmp
add
add
or
mov
ja
add
and
addb
mov
testb
cmp
mov
push
add
inc
add
add
dec
rolb
mov
add
xchg
add
push
mov
scas
or
test
add
add
hlt
add
pop
sbb
lret
mov
popl
mov
pop
arpl
add
gs
lret
lret
popf
sbb
add
fstps
add
jno
cmp
adc
push
testb
dec
inc
lea
jg
inc
cmp
add
jbe
mov
mov
push
add
sbb
inc
add
ret
mov
xor
and
insb
jg
xchg
test
in
das
in
jnp
mov
cwtl
js
pop
jle
add
aas
cmp
lea
add
cmc
in
fildl
add
mov
add
push
iret
das
and
rorl
add
mov
add
arpl
add
in
or
out
inc
add
mov
add
push
dec
shl
add
add
test
add
xchg
cmp
aad
in
add
xchg
add
add
add
mov
add
add
add
lea
testb
push
add
mov
dec
dec
mov
je
push
loop
cmp
add
lods
mov
movb
add
add
add
ja
out
pop
out
popf
add
movsb
add
hlt
add
add
push
add
add
insb
push
add
sub
movsb
add
jge
out
or
lahf
mov
les
pop
and
add
or
or
inc
cmp
cld
test
add
dec
xor
mov
aaa
movb
pop
ret
flds
cli
and
add
repz
aam
mov
add
dec
call
mov
cmpsl
xor
pusha
add
jmp
adc
inc
add
imul
add
xor
sbb
dec
lret
insb
aad
inc
add
xor
mov
add
add
cmp
lret
pop
and
mov
dec
push
add
add
add
push
add
out
pop
addr16
add
pop
dec
testb
push
add
jnp
mov
add
fildll
mov
add
rorl
rolb
mov
lcall
jg
xchg
lods
cld
jb
jp
and
add
out
inc
add
inc
add
xor
cli
pop
int
and
sbb
or
inc
mov
add
add
add
push
add
lea
mov
inc
roll
xor
add
lahf
adc
cmp
add
add
imul
addb
push
xchg
xchg
jg
shll
mov
lea
testb
pop
insl
out
std
subl
sbb
sbb
adc
pop
test
add
out
sub
xchg
cmp
ret
pop
xchg
add
add
into
addr16
pop
xor
ds
rolb
add
add
popa
bound
mov
pop
lret
stos
stos
push
ja
add
xchg
push
jg
add
pop
or
mov
test
add
adc
test
cld
sbb
mov
add
push
add
dec
or
mov
lcall
add
sub
sub
fsub
add
mov
push
pop
sbb
xor
add
add
jge
lcall
lahf
fcoms
add
xlat
mov
pop
popa
pop
in
push
mov
sbb
cli
mov
mov
or
pop
or
test
xchg
add
imul
mov
addb
add
push
aaa
fs
lods
push
add
xchg
add
imul
mov
add
mov
pop
sti
mov
cld
inc
add
stos
mov
stc
xchg
add
add
cld
pop
outsl
adc
movsb
add
fucomp
push
xchg
add
hlt
add
add
jecxz
or
add
cmp
add
add
mov
mov
dec
cltd
cli
inc
add
adc
sbb
outsb
inc
add
mov
enter
testb
adc
popa
or
out
out
inc
add
int3
and
mov
loope
in
cmp
jmp
call
lods
cmpsl
pop
and
mov
mov
mov
sbb
xor
add
jg
cmpsb
add
mov
stc
insl
pop
and
mov
sbb
add
xor
jo
inc
jg
call
rep
rolb
loope
ror
addl
push
add
inc
add
or
add
pop
hlt
add
add
lods
xchg
mov
sbb
add
inc
add
add
jecxz
jl
pop
cmpsb
add
add
lds
mov
sbb
xor
jmp
add
add
pop
lret
in
mov
fcmove
mov
xchg
add
out
cmp
xor
add
fisubs
add
mov
das
push
add
jae
xchg
add
lock
add
adc
and
mov
or
add
add
mov
add
sti
ljmp
add
xor
lock
ja
addr16
cmp
jns
add
rolb
popa
or
push
mov
add
mov
sbb
movb
add
lcall
or
daa
push
add
repz
cld
sub
sub
add
out
lods
adc
xchg
and
mov
add
jg
ffree
scas
sub
add
dec
lea
add
lahf
fwait
xchg
ret
push
inc
add
or
jno
lds
sbb
and
inc
push
stos
sbb
stos
out
dec
pusha
add
jle
pop
cli
int3
je
xchg
push
add
fcoml
ror
cltd
jg
outsl
cmpsb
add
xchg
cmc
testb
add
bound
mov
add
movb
aas
inc
add
mov
add
xchg
sti
or
mov
movsl
out
out
add
mov
out
nop
add
add
add
add
mov
or
xor
lods
inc
add
add
stc
test
add
mov
dec
cmp
jecxz
xor
cmp
lock
cltd
jl,pn
ja
mov
lcall
mov
cmpsb
add
mov
scas
xlat
lods
jnp
push
scas
inc
add
mov
out
add
sbb
shl
add
or
add
pop
dec
cwtl
jnp
jno
cmpsb
add
lea
add
mov
cmp
xor
push
ret
add
or
iret
fwait
sub
sub
mov
popa
bound
mov
mov
arpl
jbe
inc
add
sub
lds
mov
sbb
add
add
adc
mov
je
insl
sub
movsb
add
stos
push
rcll
xchg
clc
movsl
fs
pop
fnstsw
jge
fdivrl
dec
xor
ret
add
add
mov
call
add
cs
push
add
cli
gs
decl
sub
sub
add
aaa
xchg
inc
add
int3
lret
ret
mov
out
sub
xchg
sar
add
out
push
stos
int3
test
cli
cltd
pop
inc
in
pop
sub
jl
mov
add
xor
imul
xchg
scas
fmuls
scas
rolb
inc
pusha
add
mov
xchg
pop
or
mov
rcll
adc
add
mov
add
cld
jp
add
add
add
es
outsb
ljmp
add
movl
add
add
jecxz
adc
aad
dec
mov
add
cmp
test
jo
repz
add
add
scas
sbb
lods
add
pop
push
fldt
add
jmp
int3
rcll
cld
xlat
jns
aad
stos
jns
ja
xchg
iret
cs
sub
cmpsb
add
jns
adc
add
add
lret
rolb
jb
pop
or
push
sbb
dec
popf
mov
das
xchg
add
scas
xor
push
jecxz
mov
mov
ja
dec
pop
pop
jns
inc
add
jae
dec
mov
pushf
fldenv
add
imul
int3
stc
jne
or
cmp
and
mov
pop
dec
xor
decb
or
mov
movb
test
pop
and
inc
add
call
add
add
mov
test
and
mov
mov
mov
add
dec
stc
test
mov
addb
push
loope
jle
sbb
push
jp
xchg
or
sti
stos
pop
and
mov
insb
add
mov
sbb
movb
add
mov
cwtl
rolb
inc
add
scas
xchg
rcrl
mov
add
mov
xchg
subl
jle
sub
cli
decl
pop
xlat
pop
and
mov
xchg
pop
adc
xchg
mov
ljmp
rolb
jns
out
xor
xchg
movsl
fwait
mov
add
push
xor
clc
and
int
hlt
add
add
xchg
cmpsl
stos
pop
loopne
cltd
mov
shll
pop
adc
push
jp
movsl
cmpsb
add
add
xlat
mov
test
ds
xchg
ljmp
inc
add
data16
cmp
mov
adc
pop
adc
scas
lods
or
fwait
cmp
add
aas
int3
and
add
movsl
pop
loop
push
add
add
loope
ss
add
bound
mov
add
add
sub
punpckhdq
and
mov
add
and
push
pop
lcall
add
or
es
add
add
loope
testb
add
add
adc
dec
xchg
out
mov
add
testb
inc
push
add
fdivs
add
loop
cmp
cli
data16
mov
add
add
cmp
in
add
mov
sbb
popf
mov
jns
ret
adc
push
add
add
cli
test
or
mov
add
add
add
xlat
sub
je
test
xchg
jp
mov
add
add
add
lods
adc
and
stos
mov
clc
jecxz
and
pushl
add
out
loopne
jecxz
int3
data16
add
setle
jge
xor
push
rolb
dec
mov
mov
mov
out
add
cmpsl
ja
cmp
movsb
add
add
sbb
cmp
add
add
ja
aaa
dec
sub
or
dec
adc
out
add
add
or
ret
lret
add
iret
data16
xchg
add
and
loopne
dec
jnp
test
sub
rolb
sbb
fnstsw
add
add
test
and
mov
add
mov
insl
jo
push
mov
add
mov
add
cmpsl
jl
sub
add
shrl
aaa
loopne
es
lods
dec
shll
mov
mov
jne
add
add
add
add
sti
or
out
js
add
iret
into
cltd
jl
shl
and
push
std
push
popa
fidivrs
add
out
xor
mov
cmp
ficoms
add
or
rolb
fdivs
add
add
mov
testb
push
add
add
neg
into
stos
and
mov
add
add
add
add
pop
es
add
and
les
cmpsl
add
mov
test
or
loope
add
xor
imul
add
sub
add
mov
and
push
imul
or
jno
movsl
bound
mov
movsb
add
fbld
add
data16
das
pusha
add
push
add
lret
add
push
stos
insb
loop
movsl
pop
test
nop
add
add
mov
sarl
add
and
mov
and
mov
xchg
add
or
add
xorl
add
add
lock
mov
add
mov
fnstcw
ja
add
push
add
add
xchg
stos
push
add
add
add
in
leave
testb
popf
xor
inc
inc
add
add
or
add
sub
add
cs
lcall
pop
testb
add
xor
xchg
add
loop
fnstenv
or
jecxz
jae
mov
cs
xor
pop
mov
jmp
xor
xor
loop
sub
rolb
add
rolb
iret
cmp
add
xchg
push
add
inc
add
jb
jmp
dec
jl
add
sub
add
inc
add
add
add
add
cwtl
mov
leave
xchg
scas
xchg
cs
add
add
add
push
add
inc
arpl
xchg
and
xchg
add
add
inc
dec
in
sbb
mov
mov
add
mov
imull
add
push
add
cmp
divl
add
pop
inc
add
cmpsl
pop
xchg
sub
add
add
sub
iret
mov
add
cmp
add
mov
or
mov
cwtl
pushf
popf
lods
rolb
je
test
xchg
add
lret
loopne
stos
cs
aad
dec
add
mov
mov
cmpsb
add
add
mov
fldcw
add
add
jae
add
sti
dec
sub
mov
jnp
nop
add
mov
push
add
mov
fldcw
dec
int
into
mov
testl
rolb
push
insl
mov
mov
dec
inc
add
pop
sahf
inc
cli
sbb
add
roll
add
insl
push
xor
mov
xlat
lds
mov
jecxz
les
into
rolb
add
orl
mov
add
dec
add
dec
xchg
jno
push
add
jmp
add
mov
ret
adc
jl
jne
add
add
cmp
cmpsl
movsl
push
add
scas
pop
and
mov
mov
sub
mov
add
pop
sarl
add
dec
push
ret
xchg
fidivs
inc
xor
pop
cmp
mov
ret
int3
addb
add
adc
test
add
rolb
addb
fisttps
xchg
jecxz
add
add
cltd
dec
adc
mov
popa
dec
incl
mov
call
inc
add
hlt
add
mov
add
push
sub
pushf
inc
push
add
lea
fdivl
add
fwait
jmp
add
add
mov
sbb
ss
add
push
adc
notl
repz
test
rcrl
add
sub
xlat
pop
pop
decb
int
enter
mov
lock
cmp
add
rolb
loop
mov
scas
sub
int3
or
or
scas
push
add
dec
mov
mov
sbb
xchg
add
or
in
repnz
jbe
in
jns
cmp
inc
add
sub
ret
inc
xor
jns
addb
xor
push
add
pop
int3
fstl
add
add
jmp
add
add
add
add
mov
es
xlat
imul
push
add
pop
std
faddl
jmp
test
mov
push
sub
pop
mov
add
adc
loop
jb
mov
iret
mov
dec
clc
in
scas
test
scas
data16
add
push
lret
xchg
jp
add
pop
and
mov
add
in
add
add
ret
mov
in
adc
lcall
or
push
add
adc
jno
add
pop
ljmp
loopne
cwtl
jp
inc
fwait
add
les
push
repz
enter
stc
aam
dec
mov
push
add
fimuls
fidivl
into
fidivrs
cmp
rcl
add
jno
add
test
jns
add
mov
add
jb
jae
add
stos
out
xchg
add
fdivl
add
mov
call
ja
jbe
sbb
clc
das
jl
adc
or
xor
shrl
rcll
pusha
add
xchg
add
je
or
push
add
inc
add
push
add
les
jg
and
mov
or
lret
addr16
outsb
jecxz
movsb
add
mov
gs
mov
mov
mov
or
lcall
pop
aas
sub
stos
add
add
sahf
sbb
add
cs
add
add
mov
add
mov
lods
jp
adc
rolb
mov
rcll
movl
push
leave
addb
xchg
add
je
lret
std
push
add
loope
ret
mov
sahf
in
add
mov
incb
push
push
add
sbb
mov
leave
inc
add
push
add
push
add
xlat
sbb
jmp
add
add
and
cmp
rolb
dec
test
testl
add
push
add
mov
repz
icebp
stc
gs
pop
and
lods
mov
fld
add
pop
lods
leave
repz
add
loope
lcall
bound
mov
rolb
mov
rolb
loop
xor
dec
shrl
repz
inc
add
mov
movb
mov
inc
jo
lret
jno
ret
add
cmpsb
add
hlt
add
std
push
add
mov
rolb
jae
sbb
mov
data16
sub
aad
sub
cmpsb
add
mov
in
add
mov
add
sub
mov
xchg
push
ret
add
fwait
aas
dec
aam
mov
inc
inc
add
add
push
mov
add
cmp
add
mov
loope
push
addb
push
add
mov
add
jp
add
add
decl
scas
fsts
popa
repz
sub
test
inc
add
inc
mov
add
call
jns
add
insl
jbe
jo
insl
lods
push
push
xor
cli
addb
sbb
sub
add
mov
push
sarl
push
imul
out
outsl
bound
mov
add
add
mov
xor
jne
add
pop
inc
add
adc
push
sub
lds
mov
add
add
xlat
xor
add
jg
add
into
adc
fidivl
pop
imul
add
add
mov
mov
rcrl
add
add
jl
add
in
mov
loope
call
push
add
add
nopl
or
sub
js
xor
or
jg
add
add
outsl
out
movsl
enter
xchg
and
mov
pop
add
mov
xor
mov
mov
scas
fidivs
mov
call
mov
add
cmc
mov
sbb
add
sub
and
add
add
add
inc
add
mov
adc
fs
add
dec
pop
or
add
xor
push
push
loopne
pop
dec
dec
push
add
add
add
imul
nop
add
enter
xor
imul
add
dec
inc
xchg
insb
lret
xor
mov
lret
pop
movsb
add
and
scas
into
aad
add
xor
lock
cmp
dec
sbb
push
add
mov
sti
sbb
add
xchg
into
rolb
ret
xor
adc
pushf
dec
mov
stos
fsubs
fadd
add
dec
jne
or
sub
aas
mov
xor
cmp
inc
scas
pop
dec
jp
add
mov
inc
scas
mov
lock
add
pop
je
push
add
mov
movsl
lock
add
sub
shll
add
ficomps
movb
add
pop
movb
push
xlat
dec
stc
xchg
repnz
iret
cmp
add
mov
jnp
add
cmp
add
call
shrl
movsl
stc
fnstsw
add
add
add
add
add
mov
add
pop
mov
scas
push
add
addb
add
inc
add
inc
add
add
add
xchg
add
push
lock
loopne
add
rcrl
mov
inc
add
mov
or
insb
test
dec
adc
add
add
adc
loope
nop
add
mov
call
mov
aas
pop
add
stc
mov
or
pusha
add
jne
jbe
ljmp
pop
inc
add
popa
add
mov
or
add
cmpsb
add
inc
add
add
and
mov
mov
mov
xchg
rolb
bound
mov
pop
arpl
cmc
and
sbb
add
and
add
lds
xchg
add
mov
and
sub
mov
cmp
jmp
aad
out
lock
imul
std
mov
enter
add
pop
imul
mov
outsb
mov
sub
outsl
outsb
jbe
add
mov
add
pop
push
add
add
cmp
add
mov
add
mov
xchg
add
push
outsb
push
add
xchg
pop
add
add
mov
icebp
jne
add
add
add
add
pop
pop
xor
add
stc
push
nop
add
add
xchg
add
mov
and
mov
add
fidivrs
add
cwtl
ja
cs
add
fistpl
jle
jmp
add
add
push
add
mov
add
add
mov
mov
mov
jle
add
aad
add
xchg
scas
cmp
shll
jmp
pop
add
inc
mov
and
jns
inc
add
je
fisubrl
add
add
mov
and
mov
pop
xor
sub
stos
lret
lahf
cmp
add
add
jns
inc
testl
jmp
add
insb
mov
fwait
rolb
out
xor
xchg
add
add
enter
add
xchg
add
add
mov
lcall
add
and
mov
add
xlat
xor
int
add
and
jge
or
ljmp
jo
dec
push
add
xchg
add
add
mov
xchg
push
add
xchg
xchg
jae
add
mov
cmc
movsl
test
xlat
and
add
mov
pop
ret
dec
pop
fwait
sti
cli
bound
mov
add
add
repnz
mov
ljmp
pop
sbb
push
add
lock
pusha
add
jbe
dec
add
add
outsb
enter
ds
fistpl
out
movsb
add
pop
xchg
add
cld
push
scas
mov
xorl
add
inc
add
add
fdivrl
nop
add
add
add
repz
cmp
sub
add
imul
icebp
pop
in
arpl
mov
and
inc
add
add
fdivrs
test
enter
pop
xor
or
jp
add
add
test
mov
aaa
lcall
add
push
add
add
add
mov
jg
add
add
add
jbe
xor
adc
or
data16
jno
lods
rorl
inc
adcl
xchg
add
out
insl
bound
mov
lea
popf
and
inc
add
gs
addl
xchg
mov
sahf
dec
cmp
stc
xchg
add
cmp
add
fcmovu
pop
mov
gs
add
sub
push
sub
or
adc
dec
dec
adc
mov
add
add
add
add
mov
and
push
push
add
xor
mov
mov
hlt
add
or
inc
mov
in
iret
lcall
stos
filds
jle
pop
rolb
stos
dec
mov
cmp
mov
sub
add
cmpsb
add
add
and
leave
pusha
add
add
aaa
les
rolb
pop
cld
sbb
clc
sbb
adc
xchg
xchg
lret
adc
mov
or
lods
jno
jl
cmp
mov
mov
cli
popf
push
loopne
push
add
fld
add
icebp
jl
aaa
fstl
lret
inc
add
sbb
add
add
cs
add
push
add
inc
aaa
push
push
add
mov
negl
mov
mov
cmp
lahf
mov
add
imul
add
add
inc
add
mov
jle
imul
ljmp
in
push
add
gs
add
insl
popa
adc
jmp
inc
add
dec
add
jno
add
add
scas
dec
or
inc
cmp
iret
and
mov
leave
rcrl
rolb
add
push
add
inc
in
lea
cltd
xor
add
add
insl
or
add
mov
add
pop
aas
add
dec
dec
cmp
inc
inc
sbb
add
mov
inc
das
add
mov
xor
add
aaa
cmp
pop
in
pop
in
and
mov
inc
cs
sarl
lods
cmc
lret
jae
mov
insb
enter
mov
aad
add
pop
push
lea
inc
jge
xor
mov
jmp
movb
sub
push
add
test
add
sub
cmc
ds
and
mov
dec
lods
and
add
xor
lds
jne
mov
lret
clc
mov
clc
lret
xchg
lds
adc
lahf
out
data16
ljmp
pop
inc
mov
jns
addb
sti
mov
push
call
mov
add
add
mov
xchg
add
decb
mov
xchg
add
sbb
test
cmp
clc
mov
dec
in
sbb
jae
add
repz
add
add
add
pop
add
mov
add
insl
popa
incb
data16
mov
test
add
aad
paddw
jae,pt
ljmp
push
add
fistl
add
xlat
sbb
push
sbb
add
xchg
add
add
add
pop
ds
pop
cld
and
add
xor
add
fdivrl
or
das
dec
insb
xchg
xor
jo
pop
mov
leave
xchg
xor
int3
jmp
mov
dec
xchg
add
rcrl
loope
out
cmpsl
imul
mov
jle
pop
push
xchg
inc
add
mov
sub
mov
mov
add
and
mov
xchg
sub
mov
cld
frstor
jg
out
add
mov
das
and
add
pop
pushf
hlt
add
push
jge
aaa
out
negl
dec
sbb
cmc
loop
push
adc
stos
ja
pop
rolb
sbb
ret
inc
add
je
push
ljmp
jge
add
mov
sbb
pushf
stos
inc
add
xor
testb
cmp
add
xlat
daa
and
cmp
les
xor
inc
jo
and
add
add
popa
cld
xor
fidivrl
or
and
mov
test
add
add
aad
and
stos
mov
ret
add
or
add
add
inc
adc
nop
add
add
rolb
add
add
cmp
add
je
pop
cmp
sahf
mov
add
mov
xchg
add
xor
xchg
mov
add
mov
push
add
lods
lods
push
add
pop
jno
add
jmp
push
rolb
fs
xchg
add
jmp
add
jl
sub
xchg
mov
mov
loopne
cmp
push
add
jl
sbb
nop
add
movb
sub
data16
mov
movsb
add
jne
mov
in
xchg
add
add
int3
int3
push
lds
jne
xor
add
mov
in
in
mov
add
inc
add
dec
jmp
add
in
jne
add
xchg
adc
add
add
adc
scas
sbb
nop
add
add
pop
cltd
cwtl
fimull
rorl
leave
adc
popa
sub
pop
fs
xor
mov
insb
scas
sub
push
add
mov
mov
xchg
jmp
add
in
push
add
xlat
sbb
dec
ja
pop
movsb
add
arpl
dec
data16
sbb
pop
jecxz
xorl
sub
sbb
lea
xor
add
insl
cmp
add
mov
add
push
add
add
leave
push
add
pop
testb
add
add
xor
popf
std
xchg
incl
mov
and
mov
mov
add
nop
add
js
je
adc
bound
mov
ljmp
addb
add
pop
xor
call
in
out
loope
lahf
push
add
add
cmp
scas
data16
dec
decl
rolb
add
sbb
xchg
and
movb
add
mov
mov
or
lret
pop
mov
and
fistps
sub
jnp
jle
add
pop
js
add
add
rolb
inc
pop
mov
mov
add
and
aad
push
add
cs
pop
pusha
add
test
add
pushf
movsb
add
add
cmp
add
add
lock
add
dec
pop
popa
xor
add
inc
add
push
imul
push
add
add
and
int3
cmpsb
add
aam
scas
dec
xor
cs
jne
push
pop
pop
push
cltd
je
cmp
sbb
or
add
add
add
add
fisubrs
jmp
and
mov
jae
add
add
add
testl
data16
or
mov
lcall
inc
add
inc
add
movzwl
add
dec
adc
adc
adc
xor
dec
das
mov
stc
arpl
push
add
mov
in
pushf
pop
sub
add
and
test
or
mov
add
adcl
xor
add
push
add
fwait
clc
jge
dec
push
add
add
mov
add
add
add
add
pop
arpl
adc
cmp
aam
push
icebp
cli
add
rolb
push
add
add
mov
inc
add
loopne
test
cli
mov
fcmove
cs
or
cmp
xchg
add
cmp
add
xlat
inc
add
adc
add
add
add
add
cmp
sbb
add
loopne
push
cmpsl
addb
add
mov
leave
out
pop
mov
lds
mov
orl
mov
add
add
nop
add
xchg
mov
add
push
add
xor
jecxz
loop
push
add
jl
repnz
inc
icebp
pop
hlt
add
fwait
mov
punpckhwd
xchg
dec
mov
adc
xor
repnz
ljmp
xchg
add
out
add
mov
test
push
std
push
fstpl
ficomps
add
scas
fnsave
add
cli
cmp
movsl
or
rolb
test
inc
add
add
mov
or
add
enter
add
loope
pop
pop
insl
ret
testb
add
push
dec
dec
lret
mov
int
adc
les
iret
and
cmp
sub
iret
out
adc
movb
sti
fistps
or
sbb
pop
ss
add
add
sahf
sub
lods
iret
loope
ret
addb
add
add
adc
mov
cmp
addb
add
add
jge
add
add
add
fldt
add
push
add
les
addr16
lret
xor
mov
ja
add
maxps
jl
add
repz
add
adc
inc
xchg
push
add
pop
test
cmpsl
out
mov
lds
add
data16
mov
sarl
add
ss
aaa
out
mov
xchg
add
add
add
add
xchg
enter
mov
add
add
and
mov
and
mov
popf
inc
jb
jno
mov
add
or
add
popf
lea
and
mov
mov
sbb
sbb
lds
js
push
add
into
sub
mov
add
rolb
aaa
lods
sbb
jp
add
insb
das
cld
lods
movl
shll
rolb
ljmp
add
sbb
add
movb
js
scas
push
add
add
add
jb
rolb
add
lock
leave
insb
mov
sbb
dec
xor
gs
movb
pushf
addb
and
mov
ds
add
inc
bound
mov
add
cli
jp
push
add
push
add
xor
sbb
jb
jmp
sar
dec
rolb
sub
and
add
mov
add
cmpsb
add
scas
add
inc
add
rcr
mov
add
add
xchg
dec
sub
pushf
mov
add
mov
mov
xor
add
orl
add
pop
pusha
add
cmp
gs
xchg
iret
mov
sar
stos
sbbl
lods
int
insl
dec
push
add
xor
mov
lods
movsb
add
add
xor
fnsave
xor
std
test
mov
mov
xchg
push
testb
add
inc
out
je
in
lock
ret
sti
rolb
xor
and
loope
pop
mov
cmp
into
insb
stos
jae
outsb
and
les
les
mov
jmp
add
add
mov
add
or
mov
stos
push
add
scas
dec
jp
pop
and
stc
arpl
sbb
push
add
and
mov
add
mov
sbb
dec
xor
call
mov
jmp
mov
je
fldcw
rolb
add
push
add
pop
test
aaa
or
mov
or
sub
add
imul
add
dec
loopne
mov
xchg
mov
and
outsl
flds
xchg
add
addb
inc
add
iret
cmp
js
mov
lock
add
mov
clc
mov
cmp
and
mov
out
data16
in
inc
add
adc
sti
out
lock
sub
mov
add
mov
inc
sti
out
ret
push
add
dec
testl
sub
xchg
add
dec
add
mov
push
xchg
mov
push
and
push
add
add
push
out
lods
pop
pop
jbe
das
jnp
push
add
addb
lret
std
test
pop
loope
outsl
daa
pop
jecxz
test
sub
movsb
add
or
loopne
dec
or
add
testl
cwtl
adc
push
sti
xchg
fnstcw
xchg
sub
leave
insl
add
add
add
jne
push
add
mov
rcrl
loope
add
add
mov
cld
mov
aam
fwait
lcall
pop
hlt
add
ret
sub
add
add
roll
loope
add
repnz
test
mov
icebp
or
mov
rolb
test
mov
mov
bsf
add
push
add
sub
sub
or
pop
jecxz
add
inc
lods
loopne
data16
pop
movsb
add
inc
int
add
inc
roll
mov
add
mov
rolb
and
mov
sbb
or
rolb
jecxz
add
add
rolb
push
add
shll
lcall
push
movsl
or
adc
cmp
out
lock
dec
jecxz
cwtl
imul
dec
data16
cmpsl
ficoml
add
add
xchg
add
add
std
add
add
aas
add
add
add
add
leave
cmpsb
add
jne
inc
mov
mov
push
add
scas
in
push
add
add
mov
add
rolb
cmp
jnp
jae
add
jbe
imul
cli
and
mov
aam
sub
cmpsb
add
cmp
rolb
mov
movzwl
cmp
xor
iret
mov
mov
xchg
jp
add
xor
add
add
add
add
add
add
add
cltd
jb
add
test
sti
mov
movhps
ds
add
icebp
xchg
lret
push
jp
add
fdivrl
jbe
dec
call
or
pop
cli
mov
repnz
push
pop
sbb
out
lret
mov
sti
push
cwtl
js
xchg
and
out
pushf
fwait
inc
push
lods
das
ret
std
dec
pop
xor
adc
push
add
in
xchg
dec
ljmp
test
adc
mov
cmp
je
sbb
das
cmc
sub
movb
popf
xchg
js
add
jg
adc
mov
cmpsl
int3
cmp
add
mov
add
cmp
add
sbb
incl
cmp
add
stos
inc
add
add
add
leave
dec
sub
add
add
sub
add
add
mov
jns
mov
movd
adc
inc
xchg
add
add
add
add
dec
out
inc
add
rolb
and
mov
aaa
mov
or
mov
add
push
add
inc
add
add
inc
lcall
movsl
add
test
imul
lret
push
insb
lea
add
xchg
pop
adc
inc
jmp
adc
add
dec
cltd
popl
sti
test
je
test
mov
movb
add
call
call
sbb
add
sub
cwtl
outsb
xchg
add
mov
sub
cmpsl
in
out
or
mov
jne
roll
pop
movsl
sbb
inc
add
jp
add
mov
mov
add
test
xor
dec
ja
neg
jbe
adc
pop
and
add
jo
dec
sahf
add
mov
push
add
add
xor
cmp
xchg
pop
mov
xor
mov
add
insl
push
push
lcall
jnp
add
mov
dec
mov
add
sbb
mov
dec
out
je
rolb
fdivrs
test
arpl
xor
fstps
into
insl
lock
add
pop
sbb
add
add
jne
xchg
in
xor
add
add
in
fildl
add
js
inc
xorl
out
pcmpeqw
stc
rolb
pop
cmp
add
dec
vpsrlw
jae
cmpsb
add
sti
sub
add
push
add
xchg
add
loopne
jns
loope
cltd
jmp
add
push
add
hlt
add
std
fwait
and
mov
push
or
and
mov
lods
mov
rcrl
adc
sub
mov
jb
xor
add
push
add
out
cs
add
pop
out
or
xor
mov
add
add
insl
push
adc
mov
xor
dec
push
add
sbb
add
mov
out
popa
pop
jg
insb
insb
lods
sbb
dec
les
ret
add
mov
push
je
fildll
int
push
int
mov
int
sub
pushf
fldl
add
add
cld
pushf
daa
mov
inc
add
mov
push
add
and
mov
pop
dec
hlt
add
jbe
sub
add
or
imul
aaa
pop
xchg
add
push
add
out
cmc
cmpsb
add
lret
sahf
add
lea
jp
add
insl
mov
add
sbb
daa
pusha
add
fwait
ja
pop
mov
out
lret
add
dec
inc
add
outsl
or
mov
jae
add
sub
mov
inc
add
pop
cld
add
push
add
movsb
add
jl
lds
iret
add
push
add
add
ds
cmp
stos
sub
inc
dec
jnp
dec
call
add
add
cld
addb
loop
leave
adc
push
add
not
add
jl
cmp
imull
pop
stos
loop
lods
sti
mov
je
fisttpl
or
addb
add
lods
push
aas
and
mov
add
jmp
dec
dec
or
hlt
add
stos
inc
add
xor
repz
dec
add
push
add
popf
sbb
movsl
cmp
add
and
push
add
in
dec
xchg
jnp
pop
and
adcl
roll
sub
test
inc
jae
push
add
add
sbb
leave
and
jp
movsb
add
sbb
out
adc
add
mov
imul
dec
bound
mov
mov
pop
mov
add
add
mov
cmp
cmp
mov
mov
rolb
adc
inc
add
add
test
pop
add
mov
or
adc
add
xrelease
imul
cmp
push
add
add
lock
js
inc
ficoml
ret
or
popf
fwait
pop
in
mov
add
mov
cwtl
iret
int
pop
daa
push
or
push
popa
bswap
insl
adc
lahf
adc
xor
outsl
pop
inc
add
add
mov
add
jne
add
enter
addb
pop
enter
push
testb
sub
add
les
inc
add
add
xchg
add
movsl
outsl
xlat
add
repz
add
mov
stos
push
add
loope
add
addr16
lods
imul
jbe
rolb
int
xchg
add
add
mov
or
add
mov
add
flds
mov
movb
add
mov
outsl
mov
add
movb
fwait
movzbl
rolb
sub
add
add
gs
scas
pusha
add
pop
enter
jmp
add
in
in
and
add
out
add
jne
addb
push
add
lds
add
mov
ljmp
add
jl
jmp
mov
mov
pop
pop
push
xchg
aam
xor
or
xchg
and
int
call
inc
add
aaa
sub
xlat
and
add
lock
ficompl
add
mov
mov
push
adc
rolb
pop
sbb
imul
add
lret
add
leave
mov
adc
add
call
leave
cld
lock
mov
icebp
and
leave
jge
add
add
mov
add
push
test
jl
pop
or
xlat
jne
iret
ja
iret
and
mov
add
add
lods
fildl
loopne
shl
or
pusha
add
addb
ja
jae
pop
movl
add
add
add
mov
add
ljmp
mov
popa
in
sub
inc
adc
mov
fidivrl
jno
pop
out
jp
jmp
inc
aas
mov
ret
add
mov
pop
mov
pop
sub
addr16
add
xchg
out
adc
rcll
insb
in
inc
ret
dec
ljmp
push
add
push
jbe
dec
add
mov
xchg
jae
or
subl
add
dec
inc
add
dec
lea
add
fsubr
addr16
xchg
add
add
add
mov
and
clc
fbstp
or
lods
mov
jo
xchg
cmp
add
jl
push
out
iret
fdivs
out
cmc
hlt
add
add
add
push
cltd
pop
mov
inc
add
dec
mov
mov
imul
add
add
jae
add
fstps
xchg
add
mov
mov
pop
cltd
jo
repz
inc
add
mov
xchg
add
pop
stos
sub
xor
lea
adc
and
mov
jecxz
movsl
dec
pop
fistpll
add
sbb
fnstcw
add
add
add
aad
or
into
adc
xchg
add
mov
rolb
cltd
adc
das
ficoml
add
cmpsb
add
pop
adc
mov
cmp
sbb
xor
lret
or
cwtl
xchg
add
add
rorl
ja
mov
push
out
xor
add
push
or
add
stc
es
movsb
add
add
cmp
xchg
add
adc
pop
cmpsb
add
call
add
stc
add
mov
sub
add
mov
arpl
int3
bound
mov
test
add
aas
mov
add
pop
mov
out
xor
mov
imul
test
or
add
add
lods
ret
add
int3
and
mov
push
add
es
int
daa
shl
cmp
movsb
add
cmpsl
popa
pop
outsb
jge
mov
jno
ljmp
jp
jl
add
push
xchg
add
add
stos
cmp
sti
pop
or
xlat
movsl
outsb
xor
inc
add
mov
inc
jle
movsl
adc
xor
push
add
add
add
add
add
add
cmp
jno
call
ret
add
add
add
ja
cmpsl
std
sti
or
ja
and
mov
cmp
pop
fstl
inc
add
lret
and
or
mov
int
xchg
add
repz
xor
cld
testb
add
cmp
int3
sub
add
adc
mov
aaa
bound
mov
adc
add
out
dec
movsb
add
aaa
and
mov
sub
ficoml
mov
add
add
add
pop
jl
xchg
hlt
add
add
enter
add
add
add
fcomi
add
add
add
add
rolb
add
add
add
add
loopne
or
lret
xchg
add
mov
popf
pop
cmp
shll
repnz
push
scas
and
dec
mov
fistpll
sbb
add
rolb
push
add
add
repz
push
add
mov
scas
and
mov
scas
outsb
jne
cmp
add
add
shrl
add
dec
or
or
out
gs
add
mov
add
add
add
add
das
xlat
add
add
add
add
add
or
add
xor
add
add
add
in
hlt
add
sahf
ret
bound
mov
dec
sub
add
push
inc
add
xchg
add
mov
shl
xor
out
lods
pop
enter
cs
add
cmpsb
add
sub
add
fisubs
add
add
xchg
add
ficoml
mov
js
lods
xchg
rolb
cmc
fcmovnbe
dec
mov
nop
add
outsb
add
add
xor
jmp
mov
xchg
add
out
xchg
jl
add
dec
inc
add
dec
add
pop
jmp
out
pop
bound
mov
movsb
add
pop
iret
push
cmc
loop
es
xor
sbb
inc
add
pop
inc
inc
add
in
add
mov
add
jge
push
femms
pop
out
dec
das
jp
out
mov
pop
mov
cwtl
pop
into
lret
add
cmp
cmpsb
add
xor
pop
sub
mov
inc
add
lret
inc
into
push
addl
outsl
inc
sub
out
ds
addr16
inc
add
cld
cmp
mov
push
add
add
mov
add
lods
dec
xchg
add
rolb
outsb
test
add
mov
scas
sbbl
jg
and
add
ror
mov
test
adc
cltd
das
sub
add
jae
dec
out
cmpsb
add
fcomps
int3
and
add
mov
add
mov
mov
sub
add
std
add
dec
icebp
xchg
add
add
dec
stc
addb
adc
gs
or
add
add
mov
jle
add
cmpsb
add
or
mov
pusha
add
je
cltd
cmc
int3
fists
sub
clc
push
add
add
mov
ret
sub
sbb
dec
int3
push
jo
push
add
mov
xor
gs
cwtl
outsl
inc
pop
add
nop
add
add
add
dec
push
add
dec
push
xchg
cwtl
dec
pop
push
add
out
popa
loop
adc
popa
push
add
add
inc
inc
into
xchg
iret
xchg
jns
pop
push
add
rolb
test
mov
movb
sub
push
add
add
add
daa
xchg
add
mov
pop
shrl
lock
jle
int
sub
add
jns
add
ja
add
pop
ja
pop
notl
int3
or
divl
or
sub
add
add
lods
pop
mov
add
add
add
xchg
cltd
mov
or
mov
xor
jo
mov
add
out
icebp
or
add
push
add
mov
and
mov
add
lret
lret
xchg
add
add
popf
inc
add
mov
add
add
xchg
pop
xchg
lea
addr16
in
aaa
pop
leave
movsb
add
in
je
sbb
jnp
add
fldl
mov
add
repnz
mov
jg
data16
ret
sti
imul
mov
cmp
rcrl
dec
cs
add
inc
add
stos
popa
aad
mov
mov
add
xlat
inc
add
test
jns
sbb
mov
and
add
add
dec
mov
mov
add
add
lea
movsb
add
dec
cmpsl
in
loop
dec
cmc
popf
pop
movsb
add
pop
add
mov
add
pop
pop
cmp
add
add
add
inc
jmp
repz
adc
jns
xor
dec
sbb
mov
scas
les
outsb
mov
add
jle
inc
stos
in
les
sbb
add
and
test
add
inc
inc
push
and
std
mov
jb
rcr
in
inc
fwait
aaa
std
jecxz
rolb
and
addb
add
push
cltd
in
addr16
movb
loop
aad
jl
and
add
int3
xchg
loopne
mov
add
stos
xchg
sbb
rcll
add
lcall
xchg
xchg
fisttps
or
xchg
add
mov
add
in
in
cmp
add
popa
imul
add
mov
mov
add
jl
cmpsl
stos
and
mov
sub
lret
movl
adc
lcall
add
or
mov
or
stc
mov
add
movb
jecxz
dec
cwtl
rolb
cmp
aaa
out
shrl
shll
std
xor
add
xor
test
enter
xchg
add
mov
add
xchg
add
fwait
mov
das
sbb
movsb
add
add
pop
push
jne
adc
ja
add
add
add
pushf
jns
testb
bound
mov
add
dec
loopne
jo
out
sub
sub
addb
mov
push
add
xorl
sbb
dec
iret
xchg
fildl
adc
aam
fildl
add
adc
lods
cmp
fcompl
add
pop
and
or
add
cmpsl
or
cld
int3
aas
xor
and
dec
push
push
mov
loopne
xchg
add
add
add
mov
insb
stc
add
mov
add
mov
aam
push
add
push
mov
sbb
fbld
out
add
jl
mov
pop
imul
lods
adc
jmp
adc
jge
std
cmc
rolb
ja
add
push
add
add
pop
add
mov
mov
lret
and
mov
addr16
insl
xor
bound
mov
or
stos
gs
cmp
mov
daa
mov
inc
fld
add
mov
fisttpl
aam
sti
jl
add
mov
add
add
add
and
add
push
fcoml
test
add
inc
rolb
push
add
push
add
das
movq
dec
sbb
add
xor
mov
fidivs
xor
pushf
cmp
sub
mov
add
ja
out
inc
add
mov
lcall
mov
stc
loopne
mov
pop
or
std
cmp
cmc
push
add
sub
sahf
mov
ja
jbe
jmp
in
mov
ficoml
dec
rolb
xchg
in
sbb
adc
add
daa
in
mov
add
rolb
xchg
add
cli
adc
xchg
cltd
xor
add
push
add
xor
or
icebp
insl
pop
jmp
add
dec
mov
loope
loope
add
sub
ja
sub
sbb
sbb
add
mov
call
aas
xor
nop
add
sbb
adc
scas
popf
movb
repnz
jmp
pop
xor
add
pop
mov
cmc
arpl
popf
cmp
mov
add
add
add
scas
adc
insl
pop
fwait
gs
fstpt
add
push
add
add
add
add
add
jne
add
lret
add
inc
add
pop
cmpsl
ljmp
add
dec
addb
repz
popf
xchg
fidivrl
mov
add
push
add
jbe
mov
sbb
fwait
cld
nop
jmp
add
lahf
decl
push
mov
xchg
ret
add
call
clc
repnz
jae
add
adc
repnz
jae
loope
add
in
xchg
and
repz
mov
xchg
ret
push
into
call
lea
fwait
cld
nop
jmp
add
add
or
mov
xchg
ret
movl
pop
xchg
mov
nop
jae
cmc
xor
cwtl
add
clc
repnz
jae
adc
jns
arpl
jae
mov
add
mov
cmp
mov
xchg
ret
add
mov
add
mov
xchg
ret
cmc
add
add
mov
add
clc
repnz
jae
add
sub
add
sbb
add
std
push
push
mov
xchg
ret
add
add
inc
add
xor
and
add
rolb
aad
mov
add
push
add
nop
jae
add
add
and
clc
repnz
jae
add
addl
mov
add
fisttps
nop
jae
je
add
and
test
add
clc
repnz
jae
add
or
call
and
orl
popa
cmp
nop
jmp
add
add
and
mov
sbb
add
repnz
jae
adcl
add
clc
repnz
jae
addl
xchg
add
xor
add
clc
repnz
jae
add
lock
mov
xchg
ret
add
clc
push
clc
repnz
jae
add
mov
fiadds
sar
repnz
jae
add
pop
push
add
push
and
push
shll
push
mov
xchg
ret
add
add
pushf
mov
repnz
jae
jmp
jns
mov
add
pop
not
add
cmc
add
add
je
add
add
push
mov
xchg
ret
add
adc
mov
jg
push
mov
xchg
ret
cmp
add
mov
clc
repnz
jae
add
cmp
add
mov
clc
repnz
jae
add
push
add
dec
clc
repnz
jae
cmc
pushf
cmc
push
add
add
inc
push
mov
xchg
ret
je
add
add
dec
xor
clc
repnz
jae
je
push
pusha
pushf
add
add
repnz
jae
mov
add
mov
nop
jmp
loope
cmc
add
add
andl
add
clc
repnz
jae
add
pop
xor
pop
lea
clc
repnz
jae
in
add
mov
repnz
jae
mov
enter
nop
jae
dec
loope
pusha
add
push
add
add
clc
repnz
jae
add
add
cmp
test
outsb
lea
clc
repnz
jae
add
cmc
jne
xchg
addb
mov
clc
repnz
jae
and
push
mov
xchg
ret
call
adc
mov
fwait
cld
nop
jmp
add
add
add
add
gs
add
add
nop
add
mov
clc
repnz
jae
xorl
mov
push
mov
xchg
ret
in
jns
jns
data16
fwait
cld
nop
jmp
insl
add
into
pop
xor
clc
repnz
jae
cmp
insl
and
push
fwait
cld
nop
jmp
mov
mov
mov
clc
repnz
jae
pop
add
add
xchg
clc
repnz
jae
add
add
sbb
repnz
jae
mov
add
mov
pop
adc
pop
call
clc
repnz
jae
pop
add
pop
or
lret
nop
jmp
add
add
add
icebp
dec
call
clc
repnz
jae
add
incl
aas
test
fwait
cld
nop
jmp
into
and
je
clc
repnz
jae
mov
clc
repnz
jae
or
pushf
add
add
jle
lret
clc
repnz
jae
jns
jne
add
add
add
fwait
cld
nop
jmp
add
add
add
mov
mov
fwait
cld
nop
jmp
scas
and
pushf
or
nop
jae
and
mov
mov
fwait
cld
nop
jmp
std
daa
adc
pop
mov
clc
repnz
jae
jne
pop
add
add
arpl
cld
nop
jmp
add
movzwl
clc
repnz
jae
add
add
sub
repnz
jae
xor
pop
into
add
sbb
jo
fwait
cld
nop
jmp
add
push
je
mov
jae
repnz
jae
add
mov
add
test
fwait
cld
nop
jmp
insl
cmc
add
sub
clc
repnz
jae
in
add
add
dec
or
mov
xchg
ret
sbb
add
nop
jae
add
pop
add
mov
pop
clc
repnz
jae
add
add
and
nop
jmp
jne
in
addb
add
clc
repnz
jae
or
add
repnz
jae
add
call
add
inc
push
mov
xchg
ret
pop
add
add
stos
clc
repnz
jae
cmc
cmc
cmp
add
xor
sar
and
push
mov
xchg
ret
insl
add
cmc
add
out
clc
repnz
jae
xchg
add
add
clc
repnz
jae
cs
je
rolb
cmp
repnz
jae
cmc
add
mov
add
cs
insb
clc
repnz
jae
and
dec
push
mov
xchg
ret
addl
add
add
jns
clc
repnz
jae
mov
incl
cmpsb
add
inc
add
das
mov
clc
repnz
jae
add
add
add
test
repnz
jae
pop
pushl
add
loop
push
mov
xchg
ret
movl
jae
mov
add
cmp
jmp
pop
mov
add
add
cs
les
mov
xchg
inc
dec
push
push
mov
xchg
ret
addl
call
add
add
add
add
repnz
jae
add
mov
jae
mov
and
aas
jmp
addb
pop
call
add
std
mov
push
add
clc
repnz
jae
add
push
fsubrl
push
mov
xchg
ret
std
add
mov
jmp
add
add
add
pusha
add
add
sub
and
inc
add
add
push
mov
xchg
ret
add
scas
add
add
pop
jne
clc
repnz
jae
add
adc
les
mov
xchg
ret
cmpsb
add
pushf
push
std
push
push
mov
xchg
ret
add
add
add
xor
add
clc
repnz
jae
xor
inc
addb
movsb
add
cld
nop
jmp
addl
dec
add
icebp
add
mov
stos
push
mov
xchg
ret
pusha
adc
pushf
push
push
das
add
fwait
cld
nop
jmp
jns
pop
movl
add
cld
nop
jmp
nop
add
add
add
clc
repnz
jae
mov
mov
jne
jmp
pop
scas
cmc
icebp
cmpsb
add
pop
fwait
cld
nop
jmp
mov
add
sbb
add
add
push
mov
xchg
ret
push
cmc
add
adc
cmp
nop
jae
add
mov
inc
call
inc
add
add
add
dec
adc
repnz
jae
push
nop
add
add
add
add
mov
xchg
ret
add
call
clc
repnz
jae
mov
dec
push
clc
repnz
jae
jns
xchg
mov
shrl
repnz
jae
nop
add
add
add
add
dec
add
sbb
inc
add
add
add
ret
rolb
mov
popf
mov
push
mov
xchg
ret
mov
cmc
inc
add
jae
add
dec
add
nop
jmp
add
pop
push
decl
add
fisttps
add
repnz
jae
add
nop
jmp
xor
movsl
add
add
jns
add
sqrtps
out
inc
add
mov
add
subl
push
mov
xchg
ret
incl
mov
mov
clc
repnz
jae
adc
nop
mov
cld
add
fwait
cld
nop
jmp
mov
add
std
push
push
mov
xchg
ret
add
jne
xchg
xchg
add
cld
nop
jmp
scas
add
add
add
cld
pop
push
mov
xchg
ret
add
add
addl
fcoms
mov
xchg
ret
add
add
push
mov
xor
add
fwait
cld
nop
jmp
loope
mov
push
cmp
ret
movl
add
add
mov
clc
repnz
jae
add
add
ljmp
aad
add
into
mov
or
add
fwait
cld
nop
jmp
and
cld
xor
push
mov
xchg
ret
movl
add
repnz
jae
add
add
add
add
leave
mov
clc
repnz
jae
add
pop
add
or
sar
repnz
jae
cmc
pop
xor
insl
add
fists
in
cltd
add
movsb
push
add
sub
add
sub
ljmp
add
add
and
add
repnz
jae
into
inc
icebp
pusha
add
xchg
mov
push
add
test
nop
jae
mov
add
repnz
jae
mov
add
das
movzwl
fwait
cld
nop
jmp
adc
stc
push
clc
repnz
jae
add
add
sub
push
and
add
add
add
add
add
imul
scas
push
pop
add
add
cmp
add
adc
insl
pushf
lea
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
dec
add
pushf
pusha
enter
lea
test
nop
jae
mov
mull
repnz
jae
add
add
add
clc
repnz
jae
adcb
je
mov
clc
repnz
jae
or
xchg
push
add
movb
rep
push
mov
xchg
ret
push
daa
add
xchg
mov
nop
jae
pushl
sbb
add
loope
mov
fwait
cld
nop
jmp
movl
jns
inc
sbb
push
mov
xchg
ret
adc
mov
imul
jae
add
add
mov
add
dec
inc
add
cmp
lock
ret
push
jae
add
mov
add
cmc
mov
repnz
jae
add
sbb
mov
inc
add
repnz
jae
call
xor
clc
repnz
jae
adc
cmp
add
mov
and
clc
repnz
jae
incl
mov
fwait
cld
nop
jmp
add
cmpsb
and
add
rolb
add
mov
add
popa
add
mov
xchg
ret
addl
inc
daa
insb
push
clc
repnz
jae
loope
pop
incl
mov
dec
jmp
icebp
xchg
xchg
add
movl
push
mov
clc
inc
add
cmp
jg
mov
push
clc
repnz
jae
pop
add
add
add
add
clc
repnz
jae
jns
je
mov
nop
jmp
add
add
add
les
repnz
jae
mov
push
jae
mov
clc
repnz
jae
add
add
cmp
test
adc
add
repnz
jae
add
add
dec
pop
clc
repnz
jae
add
add
add
jl
xor
repnz
jae
daa
add
mov
gs
repnz
jae
xchg
add
mov
add
clc
repnz
jae
add
add
clc
repnz
jae
movsl
add
pop
add
pop
jae
repnz
jae
mov
add
add
inc
clc
repnz
jae
adc
scas
xchg
add
pushl
inc
adc
repnz
jae
and
aaa
adc
call
push
mov
xchg
ret
add
scas
dec
mov
clc
repnz
jae
add
jns
mov
jbe
fwait
cld
nop
jmp
add
mov
stos
push
clc
repnz
jae
add
push
mov
push
fadds
xchg
ret
cmp
cmc
mov
movl
add
sbb
add
adc
jmp
add
add
add
add
cmp
nop
jae
pushf
add
adc
sub
clc
repnz
jae
cmp
pusha
clc
repnz
jae
cmp
add
cmp
inc
sbb
nop
jae
inc
xor
call
nop
jae
add
add
cmp
jae
push
add
incl
pusha
dec
pop
clc
repnz
jae
push
add
xchg
adc
jbe
insl
mov
push
mov
xchg
ret
into
add
sti
add
add
idiv
dec
add
inc
adc
repnz
jae
loope
mov
je
clc
repnz
jae
adc
add
repnz
jae
je
dec
add
mov
add
push
mov
xchg
ret
jns
add
addl
inc
and
fwait
cld
nop
jmp
adcl
shll
sar
nop
jae
add
add
xchg
jb
test
jae
mov
clc
repnz
jae
add
pop
pop
adc
cmp
repnz
jae
add
pop
add
clc
repnz
jae
add
add
add
test
fwait
cld
nop
jmp
add
push
inc
lret
mov
clc
repnz
jae
xchg
add
sbb
jae
or
add
mov
adc
repnz
jae
add
or
mov
ret
add
add
and
xbegin
mov
xchg
ret
add
cmpsb
add
add
repnz
jae
add
add
and
mov
clc
repnz
jae
add
or
jge
clc
repnz
jae
push
addl
add
imul
nop
jmp
jns
pop
add
add
movsb
add
fwait
cld
nop
jmp
xchg
pop
pusha
add
add
mov
add
clc
repnz
jae
scas
pushf
in
add
pop
or
repnz
jae
add
add
sbbl
repnz
jae
add
icebp
icebp
mov
outsl
mov
push
mov
xchg
ret
add
std
add
add
mov
xchg
ret
mov
xchg
add
ljmp
inc
add
add
stos
add
clc
repnz
jae
add
add
add
mov
fwait
cld
nop
jmp
jns
add
mov
xchg
ret
add
add
add
add
cmp
nop
jae
adc
cmc
add
cmp
cld
nop
jmp
pushl
add
sbb
and
add
clc
repnz
jae
pop
std
cmc
pushf
cld
movzwl
clc
repnz
jae
and
stos
push
clc
repnz
jae
and
add
add
xchg
idiv
clc
repnz
jae
mov
ret
push
add
add
mov
nop
jae
into
adc
cmc
pushf
pushf
and
repnz
jae
adc
icebp
add
das
pop
clc
repnz
jae
add
push
pushf
push
cmp
movsb
push
mov
xchg
ret
pop
add
add
and
sub
rcr
add
pop
cmc
add
add
clc
repnz
jae
mov
movsl
pop
xor
fwait
cld
nop
jmp
dec
adc
push
add
jae
sbb
adc
cmp
push
mov
xchg
ret
call
add
add
repnz
jae
add
add
call
pop
mov
push
mov
xchg
ret
inc
add
add
and
pushf
cli
clc
repnz
jae
nop
add
sbb
adc
add
mov
mov
add
enter
xchg
ret
incb
sbb
push
add
mov
jg
lcall
cld
jmp
out
je
clc
repnz
jae
add
and
push
mov
xchg
ret
mov
add
in
add
mov
clc
repnz
jae
add
add
and
loop
clc
repnz
jae
add
add
fwait
cld
nop
jmp
add
add
mov
cmc
sub
jae
mov
pop
pushf
roll
repnz
jae
add
add
std
add
add
clc
repnz
jae
add
push
mov
jae
mov
add
call
jmp
decl
inc
icebp
and
mov
cld
nop
jmp
add
inc
jmp
arpl
clc
repnz
jae
add
mov
push
clc
repnz
jae
add
add
insb
add
fwait
cld
nop
jmp
dec
add
incb
add
clc
repnz
jae
add
add
sbb
loope
fld
clc
repnz
jae
add
add
mov
clc
repnz
jae
xor
sbb
add
mov
mov
fwait
cld
nop
jmp
add
xchg
add
cmc
cmpsb
cmpsl
jbe
rolb
mov
clc
repnz
jae
cmc
add
inc
dec
inc
clc
repnz
jae
xchg
adc
addl
lods
clc
repnz
jae
jne
add
jmp
imul
or
inc
add
add
pop
fwait
cld
nop
jmp
add
movl
mov
or
add
add
mov
das
jne
fwait
cld
nop
jmp
add
cmp
cmpsb
add
clc
repnz
jae
call
xchg
add
add
repnz
jae
mov
daa
pop
cmp
test
nop
jae
add
jb
xchg
add
or
clc
repnz
jae
andb
nop
jae
add
add
add
repnz
jae
add
add
add
add
add
clc
repnz
jae
add
daa
add
add
lds
push
push
mov
xchg
ret
nop
add
stc
push
fwait
cld
nop
jmp
adc
or
add
or
nop
jae
add
dec
add
popa
adc
nop
jae
mov
add
popf
push
push
mov
xchg
ret
add
add
loope
ljmp
addl
mov
mov
ja
outsb
je
repnz
jae
jne
mov
clc
repnz
jae
push
cmpb
mov
and
mov
add
add
push
mov
xchg
ret
xchg
cmc
add
add
jge
jnp
add
clc
repnz
jae
pop
in
add
mov
fwait
cld
nop
jmp
subl
xor
add
mov
fwait
cld
nop
jmp
add
mov
add
mov
cld
nop
jmp
add
icebp
pusha
add
loopne
bound
mov
addr16
ret
push
add
mov
cmp
push
mov
xchg
ret
insl
add
add
clc
repnz
jae
incb
mov
mov
add
clc
repnz
jae
jns
add
outsl
mov
fwait
cld
nop
jmp
add
incl
mov
fwait
cld
nop
jmp
jne
add
add
add
and
mov
push
clc
repnz
jae
add
adc
call
fs
cld
nop
jmp
add
add
cmpsb
imul
jae
push
incb
xor
add
fimull
iret
inc
add
andl
add
repnz
jae
xchg
cmp
movsl
add
push
push
mov
xchg
ret
add
inc
add
clc
repnz
jae
add
add
mov
add
mov
jmp
scas
add
push
addl
add
pop
push
push
mov
xchg
ret
add
add
add
lea
push
mov
xchg
ret
add
jns
cmc
loopne
dec
mov
clc
repnz
jae
add
into
mov
clc
repnz
jae
add
add
cmpsl
xchg
add
push
mov
xchg
ret
add
add
cmc
and
add
test
push
mov
xchg
ret
mov
insl
add
test
clc
clc
repnz
jae
pusha
add
repz
xchg
and
push
fwait
cld
nop
jmp
add
enter
push
add
ror
jne
clc
repnz
jae
add
add
xlat
adc
add
sar
incl
dec
add
jbe
clc
repnz
jae
into
enter
pushl
clc
repnz
jae
mov
into
xor
mov
sub
popf
fildl
xchg
ret
push
add
add
sub
popa
add
repnz
jae
incl
mov
add
clc
repnz
jae
xchg
mov
jne
add
bound
mov
add
test
fwait
cld
nop
jmp
std
insl
add
add
add
xchg
add
clc
repnz
jae
cmc
icebp
add
add
fwait
cld
nop
jmp
add
add
pushl
mov
test
testl
fwait
cld
nop
jmp
add
add
out
out
clc
clc
repnz
jae
add
add
call
clc
repnz
jae
pusha
pop
add
inc
push
adc
clc
repnz
jae
incl
pop
jmp
std
add
add
loope
sbb
pop
push
xchg
daa
in
push
mov
add
bound
in
sbb
add
inc
add
pop
ret
clc
repnz
jae
jne
add
clc
repnz
jae
add
add
cmc
enter
add
rcrb
or
add
and
je
jno
jne
clc
repnz
jae
incl
add
clc
repnz
jae
add
cmp
xor
pop
mov
clc
repnz
jae
add
push
add
add
leave
clc
repnz
jae
pusha
pusha
or
xor
add
mov
add
repnz
jae
add
pop
loope
add
mov
clc
repnz
jae
adcl
add
repnz
jae
add
xor
push
add
repnz
jae
push
cmp
add
cmp
clc
repnz
jae
std
add
mov
pop
add
clc
repnz
jae
cmc
add
add
dec
jne
clc
repnz
jae
add
inc
pop
mov
clc
repnz
jae
add
jmp
pushl
clc
repnz
jae
add
sub
push
sub
aaa
inc
add
mov
add
clc
repnz
jae
cmpsb
add
add
repnz
jae
add
add
pusha
add
add
add
mov
ds
add
incb
loope
in
xor
into
shll
addr16
push
clc
repnz
jae
std
pusha
movl
pop
imul
clc
repnz
jae
add
cs
add
pushl
clc
repnz
jae
or
sbb
movsl
jo
loope
add
clc
repnz
jae
add
push
pop
sbb
pop
clc
repnz
jae
pop
cmpsb
icebp
add
pusha
in
and
mov
cld
or
jmp
std
add
and
repnz
jae
cmpsb
movsl
add
scas
mov
add
fwait
cld
nop
jmp
in
pop
or
lahf
push
push
mov
xchg
ret
xor
subl
push
mov
xchg
ret
add
enter
cs
clc
repnz
jae
add
pop
movsl
jne
dec
shl
lea
repnz
jae
pop
xor
icebp
cmc
xchg
add
push
add
add
add
cmp
mov
dec
push
mov
xchg
ret
jne
movsl
add
stc
and
jmp
add
add
xor
add
add
into
mov
push
mov
xchg
ret
add
and
mov
pop
clc
repnz
jae
cmp
add
jns
add
add
movsl
add
cmp
cld
repnz
add
add
mov
ret
xchg
nop
jae
cmp
mov
clc
repnz
jae
inc
pusha
add
jbe
clc
repnz
jae
enter
cmpsb
add
add
adc
cld
nop
jmp
sbb
pusha
mov
pop
push
clc
repnz
jae
add
push
mov
xor
add
clc
repnz
jae
cs
sbb
in
add
add
add
add
repnz
jae
add
add
pop
xchg
adc
clc
repnz
jae
andl
add
clc
repnz
jae
addb
call
push
add
test
clc
repnz
jae
add
jne
insb
dec
clc
repnz
jae
cs
in
mov
dec
pop
fs
cmpl
fwait
cld
nop
jmp
add
lcall
hlt
inc
add
call
mov
push
mov
xchg
ret
pushf
add
mov
in
sub
push
mov
xchg
ret
adc
add
add
dec
call
fwait
cld
nop
jmp
std
cmc
sbb
add
in
xchg
add
cld
fcoms
add
add
pop
push
mov
xchg
ret
add
enter
mov
cmp
push
mov
xchg
ret
mov
stos
popa
clc
repnz
jae
in
mov
add
mov
fdivr
clc
repnz
jae
add
push
add
xor
lret
clc
repnz
jae
mov
xchg
add
or
mov
add
push
mov
xchg
ret
add
mov
mov
scas
loop
add
sbb
add
add
mov
clc
repnz
jae
daa
add
add
add
add
clc
repnz
jae
mov
dec
cmpw
fwait
cld
nop
jmp
call
bound
mov
add
clc
repnz
jae
add
imul
pop
icebp
clc
repnz
jae
mov
fmuls
out
inc
add
xchg
add
xchg
add
mov
clc
repnz
jae
into
add
add
stc
test
jmp
decl
add
add
add
add
push
mov
xchg
ret
add
inc
jne
mov
add
inc
adc
repnz
jae
add
movsl
nop
jo
inc
add
jecxz
incl
mov
add
dec
pop
clc
repnz
jae
add
add
lods
push
mov
xchg
ret
add
jne
add
adcl
nop
jmp
push
and
push
add
fwait
cld
nop
jmp
enter
mov
mov
mov
xchg
ret
add
push
mov
xchg
ret
add
daa
mov
add
clc
repnz
jae
push
cmc
call
add
clc
repnz
jae
add
add
add
loope
pop
mov
add
jmp
jae
add
scas
mov
lret
clc
repnz
jae
cmp
add
cmp
mov
inc
add
cmc
add
test
arpl
inc
clc
repnz
jae
add
nop
push
add
add
clc
repnz
jae
add
cmp
push
sub
jae
add
xor
xor
testb
add
rolb
loopne
add
jle
clc
repnz
jae
add
aas
add
push
mov
xchg
ret
add
add
lcall
jae
add
mov
jae
push
add
call
add
clc
repnz
jae
add
xchg
add
sar
nop
jae
add
add
add
adc
jmp
add
clc
repnz
jae
xor
add
add
into
xor
fwait
cld
nop
jmp
xorl
add
push
clc
repnz
jae
add
in
add
add
imul
xor
clc
repnz
jae
add
xchg
add
andl
mov
clc
repnz
jae
scas
add
add
add
push
add
cmp
fwait
cld
nop
jmp
add
jns
mov
cmpl
fwait
cld
nop
jmp
mov
call
adc
push
mov
xchg
ret
add
xor
clc
repnz
jae
add
add
adc
dec
mov
clc
repnz
jae
add
add
mov
add
sahf
faddl
xchg
ret
add
mov
fwait
cld
nop
jmp
add
mov
add
repnz
jae
add
push
cmp
add
fwait
cld
nop
jmp
add
adcl
add
out
inc
add
cmpl
adc
add
in
or
test
repnz
jae
mov
push
mov
xchg
ret
add
sbb
add
clc
repnz
jae
pop
add
fmull
fildl
xchg
ret
add
scas
push
icebp
mov
xor
clc
repnz
jae
mov
add
arpl
clc
repnz
jae
add
add
add
add
repnz
jae
add
mov
clc
repnz
jae
add
add
add
ret
clc
repnz
jae
add
movsl
scas
add
add
ret
mov
fwait
cld
nop
jmp
pop
mov
push
add
pushl
clc
repnz
jae
cmc
call
sub
test
repnz
jae
sbbb
xor
repnz
jae
add
add
cmc
xchg
jno
pusha
clc
repnz
jae
add
scas
mov
push
mov
add
add
add
add
mov
add
push
mov
xchg
ret
sbb
mov
sub
cmp
add
add
jns
push
push
mov
xchg
ret
add
and
lock
lea
clc
repnz
jae
mov
loope
jns
es
push
push
mov
xchg
ret
jne
pop
pop
add
add
add
push
mov
xchg
ret
add
push
add
lcall
add
out
mov
popa
add
repnz
jae
loope
add
clc
repnz
jae
add
addl
add
loope
mov
je
repnz
jae
add
push
mov
xchg
ret
je
add
nop
add
fisubl
sbb
add
clc
repnz
jae
pop
add
incl
repz
cld
nop
jmp
mov
add
mov
adc
add
into
jns
add
add
or
jbe
clc
repnz
jae
cmpsb
dec
cs
and
push
clc
repnz
jae
pusha
add
add
jmp
clc
clc
repnz
jae
add
adc
incb
and
fwait
cld
nop
jmp
add
daa
mov
cmpl
fwait
cld
nop
jmp
sbb
mov
add
mov
cmp
dec
push
add
clc
repnz
jae
mov
adc
jl
fwait
cld
nop
jmp
add
add
daa
add
add
add
xchg
add
add
clc
repnz
jae
mov
movsb
clc
repnz
jae
add
or
repnz
jae
jns
add
cmc
pusha
insl
cmp
popa
add
mov
xchg
ret
xor
add
imul
inc
add
adc
cmp
jne
je
clc
repnz
jae
add
add
in
inc
add
add
mov
add
add
dec
fwait
cld
nop
jmp
push
add
dec
cmc
add
into
inc
push
clc
repnz
jae
cmc
add
add
xor
add
div
fwait
cld
nop
jmp
mov
and
enter
jae
je
jns
add
jmp
cld
nop
jmp
icebp
scas
add
add
add
mov
mov
xchg
ret
into
add
or
clc
repnz
jae
add
add
sahf
push
clc
repnz
jae
mov
pop
add
add
popl
clc
repnz
jae
movsl
add
jo
repnz
pushl
fwait
cld
nop
jmp
add
nop
add
add
cmpl
clc
repnz
jae
cs
add
add
repnz
jae
and
call
repnz
and
mov
clc
repnz
jae
mov
push
mov
xchg
ret
add
add
mov
fwait
cld
nop
jmp
add
std
add
cld
nop
jmp
sbb
add
xorl
and
inc
add
add
clc
repnz
jae
add
add
push
jb
cmc
mov
xorl
clc
repnz
jae
pop
mov
cld
nop
jmp
dec
xchg
mov
adc
mov
fwait
cld
nop
jmp
incl
cmc
movsl
movsl
add
dec
and
clc
repnz
jae
or
push
jne
add
jmp
jp
fwait
cld
nop
jmp
add
xor
push
push
clc
repnz
jae
xor
add
add
and
repnz
jae
add
push
mov
and
nop
clc
repnz
jae
add
nop
add
add
icebp
clc
repnz
jae
add
pop
adc
mov
xchg
ret
and
add
nop
jae
addl
pop
add
jns
clc
repnz
jae
add
add
add
nop
add
jae
inc
add
mov
add
repnz
jae
add
xor
into
add
add
push
mov
xchg
ret
mov
add
add
dec
cmp
repnz
jae
add
add
cmp
jecxz
add
pop
push
mov
xchg
ret
mov
inc
adc
fwait
add
clc
repnz
jae
and
add
roll
add
clc
repnz
jae
push
add
dec
dec
add
repnz
jae
mov
nop
daa
push
add
mov
clc
repnz
jae
add
sbb
jle
outsl
loopne
repnz
jae
call
add
add
mov
mov
clc
repnz
jae
add
jns
cmc
push
add
add
add
repnz
jae
adc
add
push
clc
repnz
jae
and
add
add
mov
clc
repnz
jae
jmp
mov
mov
xchg
ret
xor
cmc
add
push
add
pop
add
pop
push
mov
xchg
ret
add
add
loope
add
add
clc
repnz
jae
add
add
nop
jae
scas
mov
daa
jns
push
mov
add
add
sbb
add
add
add
dec
add
repnz
jae
jne
add
push
pop
ror
clc
repnz
jae
add
add
incl
xchg
add
mov
mov
clc
repnz
jae
mov
mov
push
mov
xchg
ret
xor
add
sar
pop
clc
repnz
jae
add
adc
add
add
dec
fwait
cld
nop
jmp
cmc
icebp
mov
pusha
cld
movswl
clc
repnz
jae
subl
popa
add
repnz
jae
incb
xorl
mov
push
mov
xchg
ret
mov
daa
pop
add
andl
sub
clc
repnz
jae
add
into
imul
dec
call
and
dec
push
mov
xchg
ret
add
cmc
mov
cs
add
adc
loop
fwait
cld
nop
jmp
mov
addb
add
pop
clc
repnz
jae
cs
sbbl
cmp
incl
pusha
jns
add
add
mov
clc
repnz
jae
cmc
add
add
add
movsb
push
mov
xchg
ret
add
jne
add
rep
clc
repnz
jae
add
add
pop
call
jne
fwait
cld
nop
jmp
insl
cmpsb
add
add
cld
nop
jmp
add
jne
mov
mov
aaa
out
add
add
xor
xchg
and
clc
repnz
jae
std
add
add
xor
clc
repnz
jae
add
add
clc
repnz
jae
add
idivl
nop
jae
and
daa
loop
std
xchg
clc
repnz
jae
add
or
xor
push
add
add
repnz
jae
add
std
incb
cmpsb
add
xchg
clc
repnz
jae
add
add
add
pop
mov
push
mov
xchg
ret
cmc
mov
mov
test
repnz
jae
add
add
roll
add
incb
decl
mov
and
add
fwait
cld
nop
jmp
xor
sbb
mov
fwait
cld
nop
jmp
add
mov
stc
rep
clc
repnz
jae
mov
xchg
jecxz
push
mov
sti
sldt
add
add
sahf
add
inc
cltd
sub
clc
repnz
jae
add
mov
jne
add
push
mov
xchg
ret
add
dec
pop
push
mov
xchg
ret
mov
pushf
scas
cmp
clc
repnz
jae
add
add
clc
repnz
jae
add
inc
mov
mov
repnz
jae
add
xchg
add
add
nop
jae
add
add
daa
xchg
enter
add
repnz
jae
add
add
sbb
jne
and
clc
repnz
jae
jns
add
std
add
inc
add
add
repnz
jae
cmc
icebp
add
add
jge
push
mov
xchg
ret
pop
push
cmc
add
nop
sbb
push
clc
repnz
jae
subl
add
xor
pop
clc
repnz
jae
add
add
add
cmc
incl
add
nop
jae
adc
add
add
add
outsb
add
clc
repnz
jae
jne
cmp
add
dec
push
push
mov
xchg
ret
add
dec
add
enter
mov
push
mov
xchg
ret
sbb
pop
cs
push
clc
repnz
jae
incl
add
jne
clc
repnz
jae
xorl
push
mov
dec
push
add
add
and
mov
inc
add
mov
andl
add
mov
add
inc
add
and
add
lret
mov
add
add
ret
sub
jp
add
add
add
xor
hlt
add
sub
adc
popf
je
and
mov
sbb
mov
add
inc
add
add
add
inc
cmp
addb
mov
push
add
add
lods
lods
pop
mov
stos
shr
mov
stos
js
add
test
gs
ficompl
inc
add
mov
add
add
jo
adc
mov
movsb
add
scas
xor
xchg
je
test
or
lcall
add
add
mov
cs
std
or
xchg
add
ljmp
mov
add
addb
sub
mov
add
add
gs
add
imul
mov
cmp
jnp
add
mov
add
cs
dec
fwait
cmp
add
ret
add
add
add
add
add
mov
add
jp
test
lea
add
pop
fwait
sbb
mov
add
imul
loop
ja
add
cmpsb
add
cmc
icebp
stc
mov
jo
popa
jbe
xchg
push
add
outsb
vpsubsw
in
mov
testl
sti
lret
push
add
push
mull
std
mov
test
lcall
gs
repnz
add
daa
jl
cmc
add
mov
andl
bound
mov
mov
es
repz
cli
mov
or
loope
in
add
lret
xchg
addr16
pop
fisubrs
mov
add
mov
divl
adc
shll
cs
add
cs
sbb
add
leave
scas
scas
sar
mov
add
popa
mov
add
mov
push
add
adc
inc
cli
ret
mov
movb
mov
add
add
dec
stc
sbb
cmp
inc
pop
popa
pop
test
pop
xor
div
add
add
adc
test
push
add
ja
add
add
scas
push
add
add
push
add
aaa
test
add
dec
std
fsubl
mov
int3
arpl
cmp
mov
loop
pop
es
nop
add
pop
add
push
add
add
mov
fldcw
mov
add
cmp
ffreep
mov
sahf
xchg
leave
test
test
add
push
sub
mov
mov
mov
sub
add
jne
rolb
mov
mov
dec
xchg
add
add
add
mov
xchg
xchg
add
jl
addb
out
add
add
int
add
add
popa
add
mov
mov
jae
int
xchg
xor
jl
add
mov
add
or
daa
mov
or
sti
jo
pop
lods
xlat
mov
dec
push
add
add
mov
lea
out
jno
mov
outsl
push
add
add
daa
add
inc
dec
pop
data16
lahf
gs
xor
pop
push
jne
imul
dec
push
mov
jle
imul
add
scas
push
add
xchg
mov
and
add
mov
add
or
cli
push
add
add
add
mov
pop
rcll
add
add
add
add
out
cltd
sbb
ret
cld
loopne
in
fnsave
pushf
sub
cmp
add
sti
lret
mov
add
add
add
outsl
cmc
sbb
sti
mov
test
dec
out
aad
add
mov
add
rcl
add
push
jmp
push
add
icebp
imul
out
lods
daa
std
sahf
inc
xor
addb
add
mov
mov
add
imul
lock
or
ret
sbb
xlat
hlt
add
add
sub
add
add
xor
add
addr16
push
add
js
out
sub
sbb
fidivl
add
push
sbb
jg
popa
and
mov
sub
in
jl
add
sbb
add
outsl
mov
sti
mov
addb
aam
pop
sar
add
mov
dec
movb
xchg
and
sub
add
rol
sbb
xor
movb
mov
pand
in
mov
in
dec
sahf
rol
add
fcoms
cmp
inc
movsl
je
shr
mov
mov
push
add
xor
arpl
or
test
mov
out
adc
xchg
add
push
inc
pop
jge
add
scas
imul
sub
lea
add
xor
xor
xor
sbb
add
adc
sbb
sub
push
ja
into
pop
dec
out
je
sahf
cmpl
add
fmuls
loopne
std
add
adc
insb
xchg
add
data16
ret
mov
add
add
stos
mov
mov
sub
mov
sbb
push
sub
test
add
mov
add
mov
add
das
or
bound
mov
xlat
fistps
ljmp
inc
add
mov
add
pop
inc
add
mov
pop
sbb
add
enter
mov
xor
repnz
rolb
cmp
je
pop
and
add
push
inc
nop
add
or
adc
out
test
fwait
push
cld
or
add
out
cli
movl
push
add
in
jno
xchg
aam
inc
add
push
mov
and
add
add
add
xchg
adc
mov
inc
add
add
popf
jg
in
shll
sub
add
mov
sbbl
test
add
scas
std
push
gs
pop
faddp
jno
add
lahf
cmp
add
push
jbe
sub
mov
mov
sarl
icebp
pop
sbb
jne
dec
sub
add
js
movl
subl
adc
in
jae
add
sub
es
loopne
loope
popf
pop
insb
orl
lcall
add
xchg
lods
or
test
scas
in
add
loop
pop
imul
jmp
add
sbb
sti
xorl
fcompl
addb
popa
push
add
cmpsl
mov
add
pop
in
jg
outsb
mov
loope
xchg
popa
mov
cmp
add
add
add
or
add
and
mov
lret
js
hlt
add
add
mov
add
lcall
lret
cld
sbb
push
add
lcall
add
flds
test
add
cmp
add
add
add
sbb
or
mov
add
stos
gs
add
add
lahf
cmp
add
lret
pusha
add
add
add
lds
cwtl
inc
add
add
or
mov
enter
xor
es
add
adc
pop
test
rolb
xchg
pop
subl
xchg
add
mov
add
in
jp
cli
mov
add
lods
sub
mov
mov
pop
rolb
aaa
rcl
add
pop
pop
hlt
add
and
in
imul
out
daa
in
or
inc
add
add
add
mov
add
dec
cmpsb
add
movsl
ret
in
jle
add
test
in
lods
mov
lcall
mov
sbb
add
add
push
jb
jecxz
add
repnz
add
mov
add
jge
sti
xor
add
int
fimuls
jmp
jb
add
cmpsb
add
or
mov
out
fwait
adcl
push
add
add
in
sarl
add
cmpsb
add
xlat
insb
add
out
mov
fbstp
rcll
sbb
push
add
ret
scas
push
add
pop
and
xchg
add
or
xchg
dec
aaa
dec
jg
add
pop
mov
add
adc
mov
add
add
mov
stos
test
repnz
icebp
sub
scas
sub
addl
add
add
dec
jl
mov
les
adc
jno
add
sub
xor
dec
lret
sbb
cwtl
xlat
mov
pop
sbb
mov
add
cmp
icebp
out
jle
movsl
mov
sub
mov
cmp
add
gs
rcrl
xchg
lods
out
and
js
add
add
lods
dec
jbe
jo
testb
in
add
mov
cmp
add
push
mov
add
inc
ja
add
add
dec
and
sbb
pushf
push
xchg
mov
hlt
add
dec
xor
mov
xchg
add
lea
mov
add
add
add
push
jne
cmp
loop
adc
push
add
sbb
sbb
cmp
add
dec
push
js
test
mov
inc
xchg
and
add
add
dec
loope
mov
scas
and
mov
add
test
jmp
outsl
stos
or
sub
mov
pushf
xchg
add
add
iret
rolb
gs
add
in
cmpsl
rolb
and
aas
pop
sti
dec
cmp
ret
les
das
lds
add
cmp
imull
add
imul
add
add
push
popf
push
std
add
inc
add
ror
mov
dec
xchg
imul
add
addb
sbb
jno
int
xor
add
add
xchg
or
pmullw
lahf
xchg
add
xor
dec
push
add
aad
leave
add
les
test
loopne
push
add
add
cld
sarl
lret
cmp
inc
sbb
jb
fidivs
add
mov
pop
dec
push
sub
ret
jl
test
add
push
cmp
xor
adc
sbb
pop
pop
fnstenv
fcomps
int3
hlt
add
add
mov
add
aad
into
mov
out
scas
loop
cmp
mov
sbb
add
add
insb
or
xlat
ffree
add
mov
clc
mov
mov
add
add
and
lret
mov
lcall
leave
bound
mov
movsl
scas
add
mov
add
add
pop
fwait
movsl
jo
test
fiaddl
cmp
pop
pop
dec
jp
and
femms
addb
jp
add
add
inc
dec
negl
xor
add
xor
scas
push
add
mov
movsb
add
jne
inc
jmp
mov
push
xchg
add
cli
mov
cli
inc
and
adc
cmp
je
fdivl
add
add
rolb
inc
sbb
add
sbb
add
nop
add
aam
cltd
scas
rolb
cmp
add
int3
scas
xor
nop
add
xchg
add
sub
add
mov
xor
add
cld
test
movsb
add
add
add
lea
add
in
mov
rolb
icebp
jg
xchg
xor
add
cmp
inc
add
stc
mov
jb
sub
mov
mov
dec
testb
dec
stc
outsl
mov
and
movsb
add
dec
int3
mov
push
enter
gs
call
or
add
je
sub
and
leave
mov
leave
fcomp
sbb
jno
fistpl
dec
push
pop
in
push
mov
add
push
sbb
add
sbb
insb
inc
add
lea
cwtl
outsl
jg
add
jb
lcall
mov
mov
sub
ds
pop
mov
push
add
ljmp
dec
ja
xor
add
jns
iret
out
nop
add
mov
lret
sub
inc
add
add
add
add
jecxz
outsl
int
add
add
fnsave
push
add
popf
adc
aad
stc
movb
cmp
sbbl
aad
add
jp
add
inc
add
fdivrp
jecxz
sbb
xor
inc
cmp
pushf
inc
push
add
add
jb
push
pop
test
sbb
add
mov
addb
jbe
cmp
jmp
push
or
sbb
add
testb
sub
adc
push
push
push
in
sbb
and
mov
jg
add
add
lret
push
add
sbb
push
add
add
adc
add
iret
mov
pusha
add
mov
or
cmp
sub
pop
pminsw
imul
push
js
clc
out
je
sbb
push
xchg
pop
or
xlat
cmp
mov
sub
mov
inc
rolb
cmc
pusha
add
jne
mov
fwait
mov
sbb
jmp
aam
sub
pop
je
pop
das
arpl
out
jl
jno
dec
cmp
fdivl
aam
testb
cmp
add
mov
sar
sub
add
roll
add
jg
add
dec
inc
add
dec
aam
iret
fisubs
add
mov
add
mov
mov
mov
out
cmc
jg
movsb
add
xchg
add
add
mov
test
add
jg
push
add
ret
push
into
mov
enter
sbb
fcmovnu
add
jl
inc
clc
dec
mov
add
jno
mov
add
dec
mov
add
sub
sbb
mov
fbstp
add
add
xor
pop
movsl
inc
add
add
add
xchg
or
add
mov
sahf
imul
mov
cmc
push
std
mov
inc
add
pop
arpl
add
pusha
add
adc
in
inc
or
add
add
mov
add
add
pop
jecxz
add
mov
push
add
add
repnz
addr16
or
stc
leave
movsb
add
out
jmp
repz
push
add
add
add
add
jg
adc
test
dec
arpl
sub
dec
pop
popa
pop
lods
rorl
mov
rolb
mov
mov
add
jp
sbb
push
add
popa
push
repz
add
push
mov
int
ljmp
mov
das
popa
mov
dec
test
push
into
repz
shrl
add
les
add
faddl
cmc
stc
aaa
movb
mov
and
adc
cmc
ds
in
xor
cmp
bound
mov
mov
xor
insb
in
xor
dec
add
test
add
aaa
mov
mov
adc
cmp
pminsw
xchg
add
in
add
add
out
clc
out
clc
add
inc
lds
push
mov
ja
cmp
pop
lods
sbb
daa
xor
sub
cmpl
mov
inc
pop
xchg
add
faddp
or
add
jmp
mov
push
sbbl
pop
sub
push
add
rolb
xor
out
push
add
xchg
stc
add
icebp
sub
jge
pop
ret
push
fldcw
je
add
add
add
mov
hlt
add
push
daa
aas
xchg
aad
add
repnz
mov
xchg
mov
mov
lret
cmp
add
mov
test
dec
pushf
daa
lea
cli
data16
xor
sub
add
movb
inc
rolb
cld
cwtl
ret
das
ret
add
mov
pop
inc
add
mov
add
mov
ret
add
loope
lret
data16
mov
movb
sub
or
add
add
xchg
add
add
add
mov
xchg
test
call
adc
add
add
jecxz
movsb
add
or
addb
mov
jle
or
addb
or
mov
pop
add
or
pop
mov
add
mov
ficoms
mov
lods
insl
hlt
add
arpl
add
addb
add
enter
hlt
add
sub
add
lcall
aas
testb
mov
sub
add
mov
add
add
call
outsl
xchg
inc
stos
ljmp
dec
or
loopne
loope
gs
push
add
cmp
or
sbb
xor
mov
fldpi
xchg
mov
insb
aas
dec
loop
addb
add
jo
xchg
add
sbb
mov
add
add
adc
lret
mov
add
sti
sub
daa
call
inc
sbb
arpl
mov
sub
popa
insb
flds
fcmove
cld
xor
mov
add
add
cmp
add
jl
or
in
add
or
add
cmp
nop
add
mov
pop
xchg
add
add
inc
xor
rolb
mov
xchg
and
repz
xchg
add
and
mov
repnz
adc
inc
ret
aam
inc
add
lods
cs
pop
push
mov
xor
out
mov
pop
jmp
add
cmc
aas
dec
cmpsl
xor
xor
cmpsb
add
cli
pop
inc
rcrl
dec
lods
xchg
pop
push
add
mov
xchg
cld
cmc
loop
inc
mov
movsl
lahf
push
add
popa
popa
cmp
inc
add
add
fbld
jp
add
pop
xor
jns
add
mov
aad
rolb
arpl
push
hlt
add
and
xchg
inc
add
add
add
mov
sbb
les
dec
repz
pop
mov
xor
or
xchg
and
mov
adc
js
pop
fidivrl
cmp
mov
filds
and
mov
test
dec
mov
mov
xchg
add
scas
scas
mov
add
inc
add
and
stc
adc
pop
loop
fwait
paddb
cmp
mov
sub
add
or
add
add
dec
lret
pop
cs
std
sahf
in
add
add
cmp
add
js
add
loopne
rcrl
mov
loopne
jmp
movb
add
addb
add
incb
push
add
ret
subl
inc
add
push
mov
add
popa
insb
iret
insl
icebp
xor
dec
jbe
pop
add
mov
add
testb
mov
cmp
or
jbe
data16
stc
into
fcoml
pop
sub
ja
or
add
popa
inc
add
mov
fwait
push
add
mov
cmp
add
dec
shll
or
add
push
add
xchg
xor
add
inc
add
add
scas
adc
fbstp
add
mov
rcrl
mov
addb
sbb
add
enter
loop
sub
inc
add
jns
push
push
add
xchg
add
add
aam
add
imul
jbe
sbb
testl
add
add
sub
mov
repnz
repnz
mov
pop
ljmp
inc
add
or
aad
pop
sahf
push
pop
ljmp
sbb
add
sahf
in
mov
leave
pop
loop
fnsave
sbb
push
add
add
pushf
das
xor
fsubs
cmc
push
add
mov
out
ja
xchg
fwait
gs
aaa
dec
insb
inc
add
mov
movsl
jb
jne
and
or
add
mov
movsl
inc
add
repz
xor
mov
insb
in
rolb
sbb
ss
or
inc
add
xor
jns
dec
add
movb
aaa
repz
or
aad
fisttpl
add
add
push
add
add
add
dec
data16
mov
xchg
add
clc
int3
xchg
add
inc
and
pop
push
mov
push
mov
fs
repz
add
mov
jns
inc
or
sub
add
add
add
dec
in
fwait
loop
enter
push
cmp
sahf
jecxz
sub
lret
add
lahf
adc
sbb
add
aaa
out
sbb
mov
mov
add
stos
repnz
add
or
pop
addr16
jno
cmp
xchg
test
add
add
add
hlt
add
imull
cwtl
mov
adcl
sbb
push
out
push
add
mov
or
mov
mov
int3
cmp
test
add
call
mov
fidivrs
mov
dec
mov
add
repz
mov
add
sti
xor
add
jp
and
mov
add
add
add
fdiv
add
add
cld
or
add
xor
repz
xchg
add
push
add
mov
mov
stos
out
jmp
add
ss
mov
add
dec
mov
add
pop
in
add
mov
add
xor
xchg
push
mov
ret
mov
add
add
fiadds
xchg
push
add
add
mov
add
add
mov
filds
pop
jb
jp
xchg
add
add
add
add
fucomi
dec
push
sub
fnstsw
loope
jmp
add
and
mov
test
cmp
and
mov
cmp
push
add
bound
mov
stc
push
movsl
mov
add
add
add
add
xchg
xchg
jno
dec
or
into
cmp
jl
mov
add
add
pop
xchg
out
mov
dec
mov
pop
les
rcrl
add
add
jae
xor
add
mov
ljmp
ja
call
add
mov
lret
arpl
add
jmp
out
stos
je
clc
dec
add
mov
rolb
mov
test
xor
jl
add
iret
adc
sbb
mov
mov
add
lock
inc
add
int
add
add
xchg
or
mov
pop
inc
add
add
pop
repz
rolb
push
adc
jbe
insl
xchg
add
add
jne
adc
jle
and
outsb
mov
dec
and
stos
add
scas
lcall
addb
xchg
test
pop
hlt
add
jmp
enter
jnp
add
push
add
cs
add
push
pop
in
cld
inc
das
push
push
add
stos
adc
rcrl
pop
inc
add
mov
add
ficompl
jnp
mov
loop
jbe
addr16
push
add
cli
xchg
fsubp
add
add
push
push
push
insl
addr16
adc
aam
xchg
daa
jmp
inc
scas
add
mov
sub
out
cmp
push
inc
add
in
mov
add
add
lret
jl
add
add
fwait
bound
mov
mov
stos
inc
jp
ja
arpl
inc
add
push
add
fistl
add
dec
in
imul
inc
add
outsb
and
fldl
in
mov
add
pop
scas
sub
test
adc
loope
je
jle
nop
add
mov
dec
adc
xchg
add
std
push
add
add
call
add
inc
sub
add
pop
pop
xor
mov
cmp
andl
nop
add
fwait
mov
add
iret
dec
aad
dec
aam
test
adc
adc
xchg
add
mov
cld
pop
lock
add
pop
adc
loopne
and
mov
sub
add
stos
fisttpll
add
pop
pop
call
dec
push
hlt
add
movb
iret
jle
ret
enter
cmp
adc
jns
add
add
clc
add
add
ljmp
dec
rorl
into
stc
js
out
out
pop
vmread
push
and
jg
pop
add
add
ret
test
add
xchg
add
add
add
dec
dec
add
add
add
xchg
add
mov
push
mov
xor
mov
push
das
pop
sub
sbb
mov
add
jmp
jge
arpl
mov
jbe
in
cmp
dec
mov
loopne
sub
xor
add
add
xchg
movsb
add
add
loopne
ja
add
sahf
outsb
out
insl
inc
add
test
lea
mov
cmc
push
out
out
and
loopne
mov
cmp
add
xor
add
lahf
and
mov
int3
mov
xchg
imul
xor
mov
loopne
out
push
lret
dec
adc
inc
repz
popf
hlt
add
mov
dec
xchg
mov
add
cmc
ljmp
mov
sub
push
loop
bound
mov
mov
xchg
add
xor
mov
fadd
add
xchg
rolb
pop
out
out
cmp
stc
and
mov
addb
xor
cmp
add
add
add
add
mov
sbb
repnz
jnp
and
mov
add
dec
aad
pop
nop
add
sub
push
add
add
icebp
mov
add
add
mov
enter
add
add
xchg
push
add
dec
pop
pop
jge
add
cmp
add
jp
pop
mov
cli
daa
fsubr
daa
mov
add
mov
fldcw
lahf
or
add
pop
ror
mov
xlat
int
insl
cmc
mov
pop
clc
jne
dec
add
mov
dec
cmpsl
mov
rcrl
insl
ficoms
shll
mov
xor
pop
cmp
test
cwtl
add
pop
pop
dec
loopne
jne
inc
imul
inc
add
add
pop
lods
dec
cmpsb
add
xchg
mov
mov
push
add
jnp
fiadds
add
jp
mov
inc
iret
add
mov
scas
mov
pop
jle
add
pusha
add
add
add
mov
ret
inc
add
xor
aad
add
enter
outsb
movb
jp
push
add
add
das
fldcw
jo
pop
pop
xor
bound
mov
cwtl
add
add
add
dec
xchg
test
loope
mov
add
xor
sbb
rolb
addb
mov
rolb
ret
jg
pop
push
mov
pop
imul
inc
jmp
inc
in
shll
add
cmpl
push
cmovno
and
mov
xor
jb
sbb
jb
dec
xchg
lock
cmpsb
add
add
add
push
add
in
or
in
mov
add
or
add
icebp
ficompl
testl
punpckhdq
pusha
add
mov
add
add
jmp
cmp
add
repnz
test
arpl
and
popa
aas
adc
sbb
add
test
sbb
dec
movsl
getsec
icebp
cmp
push
sub
pop
leave
arpl
add
fisubrs
add
add
sub
pop
xchg
push
imul
xor
sbb
mov
adc
incl
add
xor
dec
and
mov
xchg
add
daa
stos
add
mov
pop
movsl
loopne
sti
pop
insl
inc
add
or
xchg
mov
loop
pusha
add
add
ja
adc
nop
add
add
out
aas
loopne
notl
add
add
add
mov
out
add
add
add
dec
adc
imull
add
add
add
add
loop
repz
push
mov
add
lcall
rcll
ds
mov
cmp
add
lret
addr16
cltd
lret
push
add
dec
xor
xchg
add
mov
loop
rcll
add
outsl
and
push
add
add
and
nop
add
pop
push
xor
push
add
add
add
daa
imul
repnz
jmp
and
lock
add
push
rolb
sti
jno
in
mov
call
lds
add
sbb
insb
push
sbb
outsl
xchg
add
sbb
cmp
cld
fiaddl
xchg
mov
cmc
movsl
sub
inc
add
jne
int
dec
test
add
cld
movb
add
xchg
lock
or
add
popf
mov
jecxz
pusha
add
add
add
mov
add
add
sub
add
pop
push
add
aad
ja
add
mov
pop
mull
add
sbb
loope
lods
xchg
add
sub
test
mov
add
xor
mov
fsub
add
add
dec
push
add
jmp
lcall
add
and
inc
xchg
add
rolb
dec
ds
mov
daa
cld
or
cmp
pop
and
mov
in
outsl
add
mov
add
lock
mov
rorl
or
push
ret
push
adc
mov
mov
cli
add
add
jnp
stos
mov
and
lods
in
loopne
sbb
add
iret
xchg
jb
arpl
out
fstpt
add
jo
jp
add
fcmovbe
add
sbb
add
inc
mov
cmp
jge
scas
imul
lock
jne,pt
pop
jno
add
adc
mov
add
out
add
add
loope
add
mov
sub
rolb
arpl
add
xor
xchg
ljmp
adc
sarl
jmp
add
add
sar
pop
out
pop
mov
or
pop
mov
shl
repz
cmc
or
inc
add
in
sti
cmp
mov
add
or
add
mov
pushf
scas
mov
in
add
negl
add
je
xchg
pushf
imul
and
mov
pop
jmp
pop
test
cld
movsb
add
and
add
add
add
leave
shll
add
add
add
dec
add
lahf
xlat
std
rolb
cmp
mov
sbb
add
rolb
xor
sbb
nop
add
cmp
sub
aam
sti
clc
gs
add
or
stc
sbb
stc
mov
loope
pusha
add
push
pop
loop
in
in
mov
add
xlat
movsb
add
cld
mov
adc
add
push
mov
xchg
add
in
xchg
test
mov
fiadds
pusha
add
int3
pop
movsb
add
push
jmp
push
mov
pop
pop
imul
adc
cmp
add
xchg
std
dec
mov
push
add
lret
popa
mov
lds
and
mov
nop
add
push
pop
jecxz
and
mov
xchg
dec
jo
jae
or
add
out
push
add
and
cltd
add
mov
in
les
fucomi
imul
sbb
jo
in
pop
insb
pop
dec
ffreep
addb
mov
dec
inc
add
cmc
sbb
lock
pop
fildl
add
out
add
scas
mov
mov
pop
adc
rcrl
and
mov
mov
insl
push
and
mov
mov
adcl
add
add
dec
pop
inc
add
add
sbb
add
pusha
add
add
out
add
and
lret
cmp
xor
or
inc
add
add
dec
pushf
ret
push
or
add
inc
add
lds
add
mov
push
mov
in
insb
xchg
add
add
jb
mov
add
outsl
xchg
adc
xor
jecxz
cmpsb
add
lret
and
mov
adc
add
push
jecxz
add
add
ljmp
outsb
add
mov
sub
addb
add
push
xchg
add
inc
push
add
jmp
and
push
add
jle
cmp
insl
ljmp
cmpsl
sub
fisubrs
cmp
or
jg
out
test
add
mull
repnz
int3
fcompl
jnp
add
add
add
gs
add
add
movsb
add
iret
xor
testb
mov
ljmp
xchg
add
mov
add
mov
mov
mov
mov
sub
cmpsl
clc
push
mov
push
add
ja
push
shll
add
add
mov
sbb
sbb
stos
popa
push
add
movb
inc
inc
add
out
std
stos
adc
outsl
xchg
iret
lret
add
add
mov
jecxz
sub
out
add
sub
add
add
or
imul
xor
jns
add
add
mov
aas
and
mov
add
ljmp
inc
stc
sub
add
add
add
add
xchg
add
and
fcoml
add
movsl
add
xor
jo
int3
test
in
xor
cmp
add
xchg
inc
add
repz
add
mov
imul
add
call
imul
jne
or
cmp
cmpsb
add
std
jno
add
cmp
clc
or
add
int
cmp
dec
jmp
add
and
add
mov
add
mov
mull
add
int3
mov
add
leave
jp
or
add
or
add
cmp
fsubr
inc
add
daa
sbb
push
xor
stc
jnp
orps
fs
mov
scas
stc
inc
add
into
imul
sbb
mov
imul
add
sub
add
addb
dec
mov
cmp
add
dec
fwait
adc
pop
mov
idivl
and
call
dec
mov
xor
jb
iret
pushf
je
aad
mov
hlt
add
in
and
test
pop
inc
add
mov
push
jmp
pop
xchg
add
insl
mov
into
add
jge
add
add
add
fildl
ja
add
add
int
loop
or
pop
and
mov
adc
ret
lret
push
add
dec
popa
pop
loop
xor
mov
add
jmp
arpl
add
lcall
add
add
add
add
xchg
std
outsb
fdiv
stos
rolb
test
add
sbb
cmc
repz
shl
dec
push
add
mov
icebp
sub
repnz
int
push
mov
push
add
pop
sub
popf
sub
scas
sbbl
push
out
aaa
add
mov
test
js
enter
xor
popf
sbb
add
lret
call
xchg
xor
data16
mov
dec
scas
sbb
fmulp
lock
sub
add
into
jae
cwtl
test
nop
add
mov
outsl
sub
mov
add
mov
add
out
push
rolb
adc
xchg
loope
cmpsb
add
push
add
add
pop
lret
mov
ret
daa
pushf
mov
add
add
xchg
add
pushf
add
ljmp
jb
and
cli
add
jns
push
mov
xchg
fistl
add
add
into
leave
sub
sti
sbb
aas
mov
aad
jp
stos
inc
nop
add
dec
pusha
add
lahf
icebp
cmpsl
lds
ljmp
fcomps
jbe
sbb
std
push
add
sahf
ret
arpl
inc
add
in
stc
rolb
jl
add
push
scas
aam
in
ja
or
in
mov
add
xor
inc
add
fsubl
mov
fwait
lret
das
test
sbb
repnz
xchg
sbb
aad
add
in
clc
mov
add
xor
movb
add
mov
add
or
xchg
cmpsb
add
xor
jae
jne
add
push
add
jo
add
mov
adc
add
add
sub
xchg
add
mov
add
add
pop
jl
add
out
pop
outsl
mov
les
jmp
add
nop
add
add
add
mov
jmp
add
add
pop
mov
mov
sub
push
aad
aas
out
arpl
cmp
push
add
ret
add
push
add
add
cmpsl
add
sbb
rcll
aas
int
cwtl
cwtl
data16
jae
add
push
add
ffree
stos
cmp
add
mov
xchg
jmp
add
pop
sub
or
je
insl
scas
inc
test
popl
add
mov
addb
cmp
add
inc
push
and
imull
add
inc
rolb
or
add
into
movups
in
stc
rcrl
repnz
add
add
add
add
dec
push
sub
into
cmp
mov
lods
mov
add
and
mov
add
call
lds
clc
add
inc
add
add
scas
xchg
dec
inc
aas
fxam
aad
push
push
xor
sbb
add
js
icebp
pop
std
push
mov
sub
fsubs
fisubs
add
xor
xchg
add
outsl
fstp
sub
add
add
cwtl
cltd
imul
repnz
dec
jo
fmul
mov
add
inc
add
push
xchg
fwait
sub
data16
push
lret
enter
add
stos
mov
mov
and
enter
jne
jno
ja
push
add
lret
inc
mov
lds
mov
add
add
mov
add
cmp
cmpsb
add
insl
pop
push
add
lahf
push
add
sub
add
rolb
sub
das
mov
add
jge
fs
in
pop
movb
add
add
aas
mov
sbb
dec
stos
test
and
movsl
add
mov
fchs
add
add
add
inc
add
cmc
jns
addb
sub
cmp
repnz
leave
sub
push
in
sub
dec
insb
out
xor
add
stos
rorl
or
push
add
push
dec
test
aad
and
adc
inc
add
stos
inc
push
add
add
jbe
dec
stos
aam
lahf
test
ret
push
or
fs
mov
add
out
mov
lods
popf
add
add
imul
pop
fisttpl
pop
pop
mov
cmp
push
iret
jecxz
mov
inc
add
sbb
pop
ret
or
add
add
push
add
subl
add
sahf
add
xchg
add
add
add
add
aas
cmc
rolb
sub
jno
hlt
add
pop
repz
or
and
mov
add
mov
mov
add
mov
xchg
add
add
jbe
xor
stos
mov
add
test
add
mov
mov
xor
add
mov
add
add
cld
xlat
mov
jno
pop
stos
aaa
dec
push
jo
mov
div
jl
dec
call
add
jae
jne
cwtl
or
mov
cmp
mov
xor
xor
fidivl
add
shll
ljmp
out
out
sbb
sahf
mov
gs
add
out
dec
push
add
add
addr16
jge
mov
out
aaa
mov
outsl
add
mov
repnz
xchg
add
or
add
add
adc
pushf
sub
add
mov
add
or
mov
add
fdivp
add
jns
adc
add
add
add
jne
pop
jae
vunpckhps
or
addb
xor
cmp
lods
rolb
sub
movsl
push
in
cmp
push
addb
add
mov
cmp
testb
sbb
xor
add
dec
xchg
add
add
das
pop
mov
mov
fiaddl
mov
add
jo
jno
add
add
stos
sub
repnz
repnz
jae
add
cs
movb
xchg
xor
jl
cmp
dec
data16
jnp
add
jp
test
ret
jno
xlat
inc
add
adc
pop
aas
sub
push
icebp
push
add
push
inc
add
sub
popa
jg
mov
cmc
push
dec
pop
add
mov
adc
std
or
add
sub
fwait
jo
jl
mov
add
add
add
add
addb
jg
jecxz
inc
cli
or
les
das
daa
out
arpl
pop
mov
push
add
mov
add
adc
sar
nop
add
and
add
mov
adc
leave
ds
push
add
or
inc
pop
loope
std
dec
mov
xchg
out
dec
cltd
arpl
mov
dec
xchg
mov
adc
lods
push
add
fsubs
add
bound
mov
add
add
add
jns
adc
xor
fnstsw
dec
sub
jae
add
js
mov
pop
mov
cli
sbb
ret
aas
mov
inc
icebp
sbb
add
sub
lret
sahf
jns
test
loop
cmp
jno
enter
adc
add
or
adc
jb
jns
add
cmpsl
mov
cld
lret
xchg
or
and
mov
add
add
jne
add
add
add
in
ret
rorl
add
add
lcall
mov
addb
addr16
add
inc
add
rolb
dec
add
lret
cmc
and
mov
mov
cmp
mov
add
jl
jge
dec
insl
mov
sbb
sahf
lret
jmp
shrl
add
add
lock
cmp
add
push
push
add
or
pop
js
or
add
xchg
and
add
mov
mov
mov
aad
popa
in
decb
rorl
ret
push
add
add
cmp
fisttpl
cli
addb
add
add
or
add
push
add
add
mov
xor
add
mov
test
push
sbb
adc
dec
lods
jns
add
mov
xor
ljmp
cmp
lods
inc
cmp
jp
fists
add
das
daa
stc
addr16
add
mov
add
int
add
pop
les
xor
add
fcomp
stos
xchg
mov
shl
mov
sbb
jne
mov
into
xor
outsl
aad
cwtl
sahf
mov
ret
add
repnz
movsb
add
add
inc
add
add
or
adc
add
mov
push
add
jns
mov
push
xchg
push
pop
testb
not
mov
mov
imul
mov
sbb
xor
push
add
add
add
int
adc
enter
pop
out
add
add
mov
add
add
dec
push
adc
cmp
sbb
and
jmp
add
and
mov
adc
mov
push
cmp
addb
cli
inc
add
ljmp
jno
rorl
add
nopl
aaa
sbb
add
add
aas
sbb
mov
pop
dec
addb
xor
mov
add
jns
ret
pop
push
push
add
add
mov
add
add
and
add
lods
rolb
addr16
push
add
js
push
pop
or
xchg
mov
mov
add
add
rcr
dec
repz
add
lcall
add
add
or
xlat
pop
test
xchg
add
out
sbb
add
movsl
mov
sub
adc
addb
in
popa
popf
add
mov
cmp
xchg
pop
nop
add
dec
in
jae
leave
mov
push
xor
ja
fiaddl
mov
add
xchg
mov
pop
sbb
jmp
scas
adcl
and
inc
sub
add
stos
inc
cltd
jle
aas
outsl
adc
cmc
jmp
adc
ljmp
ret
rcr
lds
push
cmp
xchg
add
add
insb
pop
push
add
cmpsl
add
mov
push
add
mov
mov
pop
jmp
scas
js
fmuls
test
inc
add
mov
shl
add
add
inc
pop
inc
sbb
xor
cs
fisubrs
mov
lret
in
mov
add
lret
push
add
sub
in
sbb
xchg
out
inc
add
or
addb
mov
test
ret
add
testb
mov
push
mov
xor
fldl
cmp
push
add
add
pop
sbb
add
mov
es
repnz
fwait
sahf
cmp
add
jp
add
nop
add
jle
adc
lcall
mov
dec
adc
or
mov
lcall
add
cmpsl
loopne
jae
push
add
mov
repnz
add
add
and
sub
sbb
inc
add
dec
adc
out
add
cld
jmp
mov
shl
add
les
mov
jo
sub
mov
sub
add
push
add
arpl
call
aam
popl
mov
jl
add
jge
addb
add
pop
cmc
fwait
jnp
call
loop
out
xor
jb
aaa
into
mov
and
mov
xchg
int3
inc
test
mov
add
into
jne
jecxz
hlt
add
add
push
add
mov
test
pop
mov
inc
add
popa
pop
adc
lret
cmp
loopne
xchg
jne
enter
dec
fmull
sub
add
je
jp
test
xor
sbb
add
push
push
mov
fldl
mov
sbb
add
pop
test
dec
sbb
add
add
add
mov
cwtl
mov
cmp
shr
add
add
push
add
jp
add
xor
add
adc
xor
add
loop
mov
add
addb
mov
fcomip
push
outsl
out
jno
lock
jl
outsb
lret
jmp
sub
xchg
outsb
inc
jl
pop
notl
rcrl
out
nop
add
pop
and
lret
xor
pusha
add
cmp
add
xchg
add
push
add
add
in
add
and
mov
std
lds
jne
aam
fcmovne
xor
push
jmp
mov
icebp
test
add
pop
stos
mov
dec
pop
and
pop
push
sbb
add
popf
push
out
xchg
add
add
inc
add
lret
imul
add
cmc
out
sub
add
clc
add
mov
sbb
push
adc
add
jb
mov
insl
insb
adc
into
and
mov
add
scas
xlat
jne
add
xlat
mov
mov
add
add
mov
stos
popf
adc
icebp
lret
pop
int3
mov
rolb
xor
mov
cs
add
cmp
insb
or
add
aad
add
xchg
leave
addb
leave
loopne
clc
popf
cmc
jae
add
add
or
aad
cld
mov
add
int
pop
xor
xor
fidivs
adc
inc
add
add
movsb
add
add
jno
out
gs
lret
add
or
add
add
add
cmp
and
pop
mov
add
int
add
daa
push
add
mov
xchg
bound
mov
fistpl
fidivrs
jmp
add
outsb
in
add
xor
add
add
cmp
add
mov
inc
iret
out
xlat
popa
mov
xchg
push
mov
add
jo
xor
mov
add
dec
sub
mov
jecxz
dec
ffree
cmp
add
jmp
or
xor
pop
popf
lods
fisttps
mov
add
insl
jecxz
or
mov
adcl
sbb
frstor
mov
add
dec
xchg
ja
add
or
hlt
add
add
repz
add
jge
sti
jns
and
jb
add
mov
hlt
add
and
pop
push
add
pusha
add
loopne
fisubrs
dec
or
test
repz
ror
fimull
dec
push
add
add
add
jae
add
add
xchg
rcll
and
imul
rolb
dec
rcrl
push
add
mov
or
add
movsb
add
xchg
add
and
mov
fdivrl
cmp
cmove
js
or
add
jp
pop
pushf
std
pushf
jnp
pop
stc
inc
add
sub
daa
inc
add
add
aaa
and
mov
enter
aad
iret
clc
mov
push
add
push
add
imul
push
into
inc
add
imul
inc
add
add
add
sbb
les
fadd
aas
xchg
add
out
add
ret
xchg
dec
xchg
dec
scas
push
pop
mov
mov
cltd
fwait
push
add
add
rol
xchg
data16
clc
cmp
sahf
xchg
js
add
mov
add
in
mov
add
and
mov
add
imul
int3
stc
sbb
push
add
mov
dec
adc
out
in
bound
mov
add
add
add
xor
sti
dec
push
hlt
add
add
add
popf
sti
fildll
add
repnz
push
mov
test
dec
xlat
cmp
add
aas
sti
add
add
mov
dec
cmp
sbb
add
mov
pop
dec
scas
mov
push
add
scas
lods
stos
jmp
clc
pop
sub
aas
mov
add
or
add
lods
or
aaa
sbb
jle
add
and
aaa
jb
adc
stc
pop
arpl
xchg
add
stc
mov
scas
pop
repz
repnz
addr16
fsub
xchg
add
js
popa
stos
jb
fnstenv
mov
gs
loopne
and
mov
push
mov
imul
add
or
data16
loopne
add
mov
sbb
add
add
mov
mov
add
mov
pop
mov
test
test
add
or
sub
lods
mov
and
mov
add
lret
adc
sbb
pop
and
jecxz
jnp
xor
push
les
jmp
iret
push
add
in
mov
add
mov
add
add
push
loopne
mov
xchg
add
scas
lock
lahf
and
inc
add
push
add
dec
and
add
cltd
aaa
js
cmpsl
fbstp
add
jecxz
add
cld
and
mov
or
add
in
sbb
add
outsl
inc
add
ljmp
cmpsb
add
add
inc
add
push
add
mov
add
add
insl
push
and
mov
push
add
addb
add
add
add
and
test
sbb
scas
cmp
fldenv
add
fadds
add
stc
push
add
pop
or
add
add
add
push
add
inc
fbstp
inc
add
pop
addr16
fldt
jnp
and
mov
pop
test
push
mov
xchg
add
ficomps
lods
inc
out
add
arpl
out
rorl
mov
add
test
sbb
testb
add
jecxz
xorl
push
add
cli
adc
add
sbb
in
dec
ret
sub
add
and
and
mov
mov
fsubs
xchg
mov
cwtl
dec
mov
lret
and
into
jo,pt
popa
add
add
jecxz
mov
imul
adc
add
dec
add
insb
ret
into
push
and
mov
outsb
arpl
push
add
cmpsb
add
lret
clc
dec
pop
push
xlat
dec
hlt
add
pop
insl
cli
mov
add
mov
adc
push
add
add
mov
mov
add
add
xor
das
fst
push
dec
or
jg
cmp
add
rolb
das
dec
loopne
xor
ret
or
pop
adc
add
cmpsb
add
jg
cs
repnz
add
call
frstor
jecxz
sbb
xchg
add
mov
mov
add
push
add
and
add
add
addb
add
pop
mov
fisttpl
add
xchg
mov
mov
pop
push
add
mov
add
adc
loop
xchg
add
mov
add
js
sti
in
jge
sub
add
add
push
insb
outsb
jl
shll
mov
push
lods
repnz
dec
and
loop
add
mov
and
push
add
mov
addb
add
add
add
jmp
push
add
fmulp
stos
push
add
daa
xlat
filds
push
test
add
add
jnp
add
mov
add
add
in
mov
add
dec
sbb
mov
test
addl
lea
into
push
xor
sti
pop
js
jge
add
add
call
mov
insl
test
fildll
mov
sarl
add
je
dec
ljmp
repz
add
loopne
daa
pop
repz
push
add
in
add
jnp
cmp
mov
add
mov
les
rol
orl
sub
push
add
mov
in
fwait
cld
dec
out
aam
inc
add
jne
add
pop
in
and
add
or
add
cwtl
fistpl
add
das
mov
jl
xchg
add
test
inc
and
mov
lods
orl
testb
add
cmc
dec
add
mov
clc
jge
add
insb
jnp
add
inc
add
add
push
sahf
mov
sbb
inc
in
inc
les
testb
ret
push
daa
push
add
add
sub
mov
pop
push
xchg
or
sahf
jmp
add
test
cmp
mov
cld
jnp
add
cwtl
cwtl
xchg
mov
filds
add
add
add
lret
add
cmp
cmp
add
sahf
out
ljmp
loope
add
push
push
add
inc
aaa
lock
insl
icebp
roll
mov
mov
xor
sub
out
cltd
push
mov
cmp
mov
sbb
adc
test
pop
scas
popa
fmuls
bound
mov
sahf
scas
mov
insl
mov
sti
fcmovne
div
add
sub
add
sarl
xor
adcl
add
outsb
cli
jo
add
or
insl
pop
mov
xchg
jo
in
inc
fiaddl
add
add
mov
xor
fldl
add
mov
push
xlat
or
add
loop
mov
mov
cmp
mov
add
sbb
lret
in
movb
add
add
adc
add
aad
out
sbb
add
pop
mov
add
add
add
add
mov
fwait
les
stos
mov
into
je
cs
add
mov
mov
add
mov
xchg
sbb
rolb
loopne
push
cli
sbb
xor
fdivrl
add
add
pop
orl
add
mov
xor
aam
movl
shrl
inc
cwtl
sbb
aam
nop
add
mov
imul
testb
mov
xchg
add
add
sub
cmp
add
add
das
imul
stos
and
cld
les
fimull
mov
aas
push
xchg
imul
jbe
mov
inc
add
push
add
add
add
in
inc
and
mov
add
rorl
sub
add
dec
sahf
fwait
mov
repz
fadds
and
mov
add
sbb
jns
xchg
add
into
mov
jecxz
lock
cmp
add
icebp
jmp
mov
add
pop
jle
add
gs
push
push
dec
clc
lods
js
add
add
jb
test
int3
shll
add
pop
insb
and
and
out
clc
je
adc
lahf
rolb
movsb
add
add
xor
sbb
add
faddl
add
push
add
mov
imul
lcall
scas
adc
and
imul
ljmp
jl
les
xor
cmp
iret
sti
or
xchg
add
add
adc
mov
add
mov
aas
xor
lods
into
xchg
addb
inc
add
rolb
sub
in
xchg
adc
sub
testb
add
pop
dec
push
add
hlt
add
mov
pop
lcall
xchg
add
add
xchg
add
addr16
xchg
add
or
add
mov
hlt
add
add
out
and
dec
arpl
mov
push
add
rolb
inc
add
data16
add
out
or
mov
and
xor
aad
dec
lahf
pop
and
add
aas
test
xchg
add
icebp
les
cmp
js
add
lods
lds
add
cltd
inc
add
mov
add
add
lods
iret
pop
mov
push
add
pop
outsb
xchg
add
negl
mov
popa
dec
clc
xchg
add
add
inc
add
jl
rolb
push
add
call
rolb
jbe
inc
sbb
fsubrl
push
add
mov
add
adc
ret
add
stos
sbb
push
mov
imul
cmp
xor
icebp
pop
xchg
leave
and
cmp
add
loope
int3
fwait
addr16
add
xor
mov
add
add
add
jp
cmp
push
add
mov
sahf
mov
add
mov
sahf
js
loop
out
insl
loopne
imul
add
inc
add
outsl
add
lahf
fneni(8087
add
js
add
add
fidivrs
nop
add
jge
std
mov
add
je
movb
add
addb
data16
out
rolb
stos
add
push
add
add
mov
sub
add
testb
std
xchg
jb
fiaddl
add
add
nop
add
lds
mov
rolb
out
jo
and
add
add
add
add
int
test
mov
les
jg
or
sahf
add
inc
add
jns
inc
sbb
dec
cltd
xlat
inc
add
and
mov
xor
out
and
mov
imul
pop
std
lret
popl
repz
xchg
add
dec
push
rolb
lea
scas
push
add
out
aad
add
mov
fstl
add
xlat
and
das
xchg
int
add
mull
xor
cmpsb
add
cmc
adc
ret
jmp
mov
cwtl
sub
xchg
lcall
inc
add
arpl
scas
cmp
add
rolb
je
cmc
fistl
mov
into
loop
xor
fcmovu
in
faddl
dec
loope
arpl
arpl
push
ja
inc
fcomp
jl
add
add
add
ret
movsl
sahf
js
add
add
aas
pusha
add
stc
mov
mov
dec
xchg
add
mov
les
push
xchg
cmpl
add
pushf
mov
add
adc
add
push
add
add
jmp
mov
out
mov
add
add
xor
aaa
mov
std
loope
add
or
cmc
jb
in
fadd
add
sbb
pop
mov
into
xorl
dec
lret
sahf
inc
add
add
jecxz
outsl
addb
add
or
jg
add
add
hlt
add
inc
add
pop
cwtl
insb
mov
add
add
add
outsb
lcall
pushf
xor
xchg
lahf
movsb
add
sub
adc
addr16
jmp
rolb
out
jnp
cmp
push
add
add
stos
xchg
ds
outsl
cli
popf
mov
jno
jno
add
push
scas
adc
mov
add
loope
or
inc
add
dec
mov
and
and
or
jo
mov
add
add
mov
push
mov
add
fxch
jecxz
add
ret
xor
and
mov
mov
fsubr
push
pop
hlt
add
fwait
sub
add
add
test
leave
jo
cmpsl
out
fwait
mov
inc
xor
xchg
add
mov
add
add
nop
add
scas
mov
insb
icebp
jmp
xor
xchg
add
js
xor
sub
pop
aam
jecxz
lods
mov
int3
daa
scas
cld
les
pop
cmp
add
adc
mov
push
add
fdivs
add
add
pushf
movsb
add
pop
std
dec
dec
push
add
nop
add
sahf
jns
sub
add
cmp
ss
push
pop
rolb
fwait
adc
mov
imul
addb
adc
push
add
cmp
mov
lahf
jge
icebp
ret
popl
xor
add
ds
xchg
add
pop
test
add
cld
ficoml
sub
in
cmp
dec
pop
cwtl
mov
pop
and
mov
testb
pushf
mov
test
in
inc
out
test
lret
add
add
mov
inc
add
add
lods
mov
and
mov
fwait
into
mov
movsb
add
mov
add
fdivs
mov
int3
test
testb
scas
addb
andl
add
and
pop
mov
jb
bound
mov
addb
or
rolb
jp
in
xor
ljmp
addb
add
dec
dec
fidivrs
adcl
or
add
scas
fwait
dec
movb
sti
sub
inc
add
add
rolb
and
cmp
or
add
mov
inc
pop
sub
add
push
push
add
add
add
inc
mov
xor
cmp
jle
push
add
pop
daa
pop
cwtl
adc
and
cmp
push
push
add
pop
arpl
imul
add
stc
in
mov
add
cmpsb
add
sti
or
add
add
add
mov
addb
scas
addb
add
add
mov
push
add
pop
pop
je
push
add
add
mov
add
mov
sbb
scas
add
xchg
js
add
aaa
imul
das
mul
insb
add
mov
adc
pop
xlat
cld
push
add
mov
add
add
add
movsb
add
push
add
and
lret
das
inc
add
in
je
add
jecxz
xchg
add
inc
cmc
jae
dec
mov
and
iret
dec
mov
add
repz
xchg
jmp
sub
mov
inc
movsl
or
push
add
dec
adc
fwait
and
mov
jne
jge
addb
pop
scas
jae
add
add
lea
popa
imul
fsts
push
mov
in
aaa
fwait
push
inc
add
add
subl
jnp
xchg
xor
add
add
sbb
and
aaa
fisubs
add
add
add
fwait
test
add
repnz
add
mov
inc
add
sub
prefetch
adc
sti
imul
sbb
xchg
ljmp
push
or
add
sub
add
mov
nop
add
or
xchg
add
xchg
add
pop
in
dec
mov
addb
orl
or
outsb
mov
xchg
mov
sti
or
arpl
daa
sub
cwtl
pop
dec
mov
push
xor
pop
icebp
or
mov
data16
add
jbe
nop
add
add
dec
sub
rolb
mov
jge
add
dec
push
jns,pt
xor
cmp
loope
add
sti
fsubl
sarl
cmp
add
movsl
inc
ja
xor
int
and
test
cmp
cmp
mov
mov
inc
add
add
jae
pop
mov
push
sbb
jb
push
mov
mov
inc
rolb
ds
orl
dec
outsb
mov
cmp
mov
sbb
sbb
mov
dec
jo
xor
cmp
cld
pop
sbb
and
mov
out
rolb
aam
and
mov
adc
imul
jmp
push
jmp
push
add
pop
cmp
aad
add
ffree
add
jns
push
add
sub
mov
add
movsb
add
add
addr16
ja
cli
enter
pop
int3
xchg
add
rolb
mov
insb
pop
test
stos
fdivr
mov
out
cmp
add
cmpl
sbb
add
pop
cltd
add
add
inc
add
cld
roll
addb
fiaddl
add
icebp
call
add
sti
and
inc
addb
test
xor
es
push
add
arpl
sbb
xchg
imul
push
sbb
adc
add
sarl
test
insl
sub
mov
xor
arpl
ja
or
add
mov
cli
fstl
inc
in
mov
test
mov
add
add
and
and
imull
js
cmp
test
add
add
mov
pop
out
sbb
jbe
ja
add
call
xchg
aad
mov
je
mov
mov
add
add
add
add
pushf
or
add
js
das
mov
add
js
enter
add
add
hlt
add
add
pop
hlt
add
add
xor
add
xchg
stc
rcrl
or
call
xchg
add
add
lret
lret
pop
movb
addb
jmp
add
mov
push
add
add
mov
icebp
or
test
add
add
jo
das
imul
add
aam
xchg
add
add
or
mov
cmp
add
hlt
add
xchg
add
lods
popa
mov
gs
lock
insb
arpl
outsb
scas
jns
mov
mov
push
inc
lods
and
mov
mov
ja
loope
mov
cmp
lret
adc
out
pop
pop
push
add
mov
mov
add
rolb
add
mov
stos
sub
xchg
xchg
cwtl
rolb
int3
add
push
mov
add
inc
test
fsts
sbb
ds
movsb
add
pop
nop
add
addr16
add
stos
add
mov
add
and
scas
add
adc
test
jl
add
mov
lds
or
insb
xor
je
bound
mov
fildll
shll
add
xor
fucom
add
cmpsb
add
outsb
pushf
repz
add
out
cmpsl
or
add
xor
mov
mov
xchg
popa
xchg
mov
out
jp
or
mov
xchg
aad
in
sub
xorl
leave
lock
lret
ja
stos
in
cmp
xchg
adc
mov
in
mov
or
enter
add
jns
add
add
pop
adc
int
sub
cmpsl
cmpsb
add
jnp
inc
sti
cmp
sub
add
mov
add
add
jl
mov
in
add
sbb
addb
cld
bound
mov
inc
sahf
les
mov
mov
movsl
pop
add
notl
add
popa
mov
add
add
imul
dec
mov
pop
adc
or
xchg
addr16
xlat
stc
jne
add
add
or
xor
dec
or
int3
lds
rolb
xchg
add
cmp
add
and
arpl
pop
popa
xchg
data16
adc
push
pop
mull
inc
addb
add
add
cmpl
pop
mov
lds
add
cli
adc
cltd
push
add
xor
test
push
clc
mov
dec
mov
fcmovnu
std
add
out
outsb
cltd
jmp
or
add
add
add
inc
add
sbb
cmp
mov
repz
cmp
mov
jo
push
add
mov
out
add
add
mov
add
jbe
imul
mov
je
and
mov
or
cmp
sbb
cld
repz
addb
loop
inc
add
xchg
inc
add
std
ret
decl
out
int3
jno
add
mov
gs
push
add
iret
cltd
xor
addb
sbbl
mov
popf
push
add
xlat
lcall
dec
jae
inc
pop
cmp
out
mov
xchg
cmc
rolb
ja
add
add
sbb
add
mov
add
leave
outsl
insl
notl
xchg
add
add
iret
jno
add
add
jnp
and
mov
or
cld
arpl
fs
adc
mov
add
add
fdivrl
and
mov
add
add
jge
add
add
loopne
sub
call
out
adc
pop
jnp
stos
sbb
adc
add
jns
lea
jne
cmp
add
ds
or
add
add
clc
rorl
add
add
fwait
in
out
stc
fidivl
in
jecxz
add
adc
add
add
xchg
sbb
pop
xchg
add
clc
scas
int
mov
xor
aas
testb
cmp
add
test
mov
inc
out
rolb
or
mov
cmc
sbb
mov
cmpsb
add
and
xlat
pop
aam
addb
add
cmc
lock
adc
aad
lret
mov
js
ljmp
add
mov
add
sub
sub
jnp
cmp
jle
gs
mov
add
std
daa
in
pusha
add
adc
ret
lock
push
leave
jb
add
mov
dec
or
popa
out
pop
mov
mov
repnz
xchg
out
jmp
xor
hlt
add
mov
movsb
add
jmp
and
mov
xor
es
push
insb
mov
pop
bound
mov
add
add
leave
sbb
out
sbb
add
lahf
jbe
aas
jl
popa
repz
addl
xchg
add
adc
stc
ret
incb
ja
pop
jae
add
pop
xchg
add
add
add
gs
add
iret
pop
add
add
xchg
dec
jb
outsl
pop
fnsave
add
mov
rolb
push
add
add
add
mov
add
inc
add
jecxz
pop
out
sti
fcoms
je
mov
adc
rolb
add
in
mov
in
mov
mov
sbbl
xor
sub
or
cmp
pop
mov
aad
dec
into
dec
inc
add
add
and
les
mov
ljmp
test
sub
xor
add
out
push
shrl
add
sbb
outsb
ret
mov
and
aaa
xor
xor
adc
lods
add
inc
add
outsb
dec
jmp
add
mov
aam
repnz
pop
xchg
sahf
fistl
xchg
add
jbe
push
add
lea
add
xchg
xchg
add
push
add
and
mov
pop
stc
pusha
add
aaa
mov
jle
add
sbbl
mov
push
rolb
ljmp
pop
outsl
mov
push
push
adc
add
mov
lcall
add
add
pushl
mov
stos
xor
push
addr16
add
std
sbb
jae
add
and
mov
xor
sahf
sbb
cmpsb
add
int
lds
push
mov
add
add
pop
and
fbld
ror
add
add
push
add
add
addl
xchg
add
add
pop
out
in
xchg
outsb
out
mov
lods
add
fsubl
add
int3
adc
dec
les
and
mov
add
xor
adc
add
sbb
lds
add
cmp
add
add
add
xor
sbb
mov
mov
fildl
add
add
add
hlt
add
pop
stos
or
or
bound
mov
daa
or
fcom
daa
push
jae
add
xchg
adc
ret
xor
rep
mov
je
push
pusha
add
stos
out
jns
jmp
push
jno
sub
add
int3
data16
or
rep
xchg
pop
xchg
add
add
leave
sub
xor
fneni(8087
add
add
add
pop
jns
xchg
push
add
das
or
cmp
mov
add
mov
pop
or
add
and
mov
fisubrl
add
adc
sti
push
add
iret
out
add
sub
sub
dec
imul
rolb
mov
add
pop
pusha
add
pop
ficoml
add
movsb
add
cmp
add
add
mov
add
dec
addb
add
add
jmp
push
add
in
push
add
mov
hlt
add
std
xor
mov
mov
insb
cmp
jl
add
mov
xor
and
jecxz
adc
cld
mov
inc
add
imul
leave
xor
loope
xor
add
mov
pop
mov
test
lock
mov
dec
lcall
jne
shll
ds
cmp
cwtl
icebp
mov
jnp
jo
aad
shrl
mov
lgs
push
imul
leave
mov
jns
popf
push
dec
fildl
mov
add
pop
addb
mov
aad
movsl
pop
sbb
mov
jl
mov
js
jno
inc
add
xor
add
testb
movsl
mov
cld
leave
cwtl
pusha
add
or
mov
mov
or
mov
pop
das
mov
mov
xor
add
add
cmp
adc
push
add
add
add
add
rolb
add
jo
test
in
or
lods
mov
cltd
push
add
out
xor
jmp
add
add
jbe
call
rcr
fisubl
xor
or
pop
popf
lods
pusha
add
push
xchg
cwtl
aad
add
pop
xchg
add
popf
aaa
insb
fwait
sbb
cmp
out
movl
mov
add
add
jge
add
pop
repnz
and
dec
pop
inc
adc
mov
mov
stos
xchg
nop
add
jp
add
mov
cs
testb
add
je
testb
add
xor
sub
cmc
jecxz
cmp
mov
test
add
ljmp
add
mov
pop
add
mov
test
push
add
inc
cs
add
jno
imul
sahf
and
mov
aam
test
pop
je
mov
pushf
add
push
push
push
test
stos
fisubs
shll
add
push
add
add
adc
mov
or
jb
aad
dec
mov
pop
adc
mov
or
xchg
adc
repz
mov
mov
js
addb
or
and
mov
push
lods
repz
popa
jnp
aam
loope
mov
add
add
dec
dec
out
into
pop
xchg
lea
jmp
inc
push
dec
bound
mov
add
add
add
sbb
add
dec
das
repnz
mov
adc
cwtl
cld
arpl
std
rolb
out
int3
out
add
jns
add
test
pushf
fstl
mov
loopne
and
insb
pop
cmp
cmp
fwait
add
sbb
adc
push
icebp
lret
and
mov
inc
add
rcl
mov
adc
add
mov
or
or
add
add
mov
in
movsb
add
add
add
insb
aad
stos
mov
cmp
call
dec
sub
loopne
fwait
pop
adc
imul
add
scas
adc
cmp
or
pushf
mov
dec
inc
add
add
call
push
add
add
arpl
pop
cmpsl
cli
or
fisttpl
das
push
add
push
push
jecxz
movsl
cmp
push
push
jne
add
add
mov
test
fadds
out
pop
rol
add
adc
notl
add
iret
jne
add
push
add
mov
xlat
mov
mov
add
jge
add
add
add
sbb
movsl
dec
gs
mov
xor
hlt
add
scas
jge
add
mov
push
mov
mov
jns
movb
sbb
jae
mov
mov
test
or
add
popa
inc
std
test
lret
inc
add
leave
xlat
in
sub
pop
addr16
add
push
or
lret
mov
out
inc
add
add
fldenv
cs
pop
lods
push
add
fimull
add
add
push
add
or
add
test
add
daa
xchg
stos
jp
mov
imul
jmp
add
stc
pop
xchg
add
pop
push
and
mov
stos
stos
cltd
loopne
jne
sti
test
xor
xchg
xor
xchg
add
push
shll
add
sahf
pop
mov
sbb
add
outsl
add
push
add
add
add
and
mov
pop
fs
add
add
add
dec
and
mov
je
stos
testb
cmc
xchg
add
dec
enter
pop
pop
jle
jg
sti
leave
adc
xchg
add
add
fisttpll
mov
cmp
mov
bound
mov
jbe
sbb
loope
cmpsl
sbb
movsb
add
decl
das
call
add
nop
add
loop
add
fld
popf
jbe
xchg
add
test
and
or
add
push
cmovb
mov
add
add
scas
xchg
orl
mov
adc
push
add
ljmp
push
push
add
add
inc
add
add
cmpsl
cmp
jmp
stos
jns
addr16
or
push
sub
mov
xchg
sub
jnp
add
pop
jle
into
and
add
mov
mov
add
adc
add
daa
jp
xor
dec
popa
int3
int
cmp
xor
xor
add
movb
pop
push
mov
add
fidivs
add
les
add
fwait
ret
mov
bound
mov
mov
mov
int
cld
and
mov
add
repz
lds
dec
lahf
adc
pop
jle
lock
jnp
add
add
mov
add
mov
sbb
add
add
inc
add
pop
addb
add
aad
add
arpl
add
add
add
push
xchg
cld
out
call
add
mov
lea
add
lahf
push
add
add
add
mov
cwtl
sub
add
cmc
addb
and
adc
stos
push
add
push
push
add
arpl
dec
xor
clc
cmp
add
mov
add
mov
ret
sub
adc
add
bound
mov
add
add
mov
push
jb
je
add
mov
add
addb
xchg
dec
sahf
or
add
mov
add
enter
add
sbb
mov
leave
fcoms
add
jns
add
imul
mov
outsl
fcmovbe
jl
test
sub
jmp
adc
adc
pop
push
add
add
xlat
in
add
aas
xchg
or
lods
mov
icebp
addb
add
mov
add
push
cwtl
addb
pusha
add
add
jl,pn
mov
fcmovnu
dec
inc
add
neg
xchg
testb
cmp
fisttpl
int
mov
mov
dec
cmp
mov
test
mov
push
movhps
sub
sub
mov
movsb
add
add
jbe
les
stc
xchg
cmp
addr16
push
add
add
add
mov
cmp
testb
add
mov
rorl
dec
or
fwait
push
add
call
std
je
pop
jecxz
add
add
mov
inc
movsl
hlt
add
gs
pop
fwait
jl
fwait
push
test
lret
in
arpl
push
add
add
mov
aad
data16
jge
mov
add
repnz
add
insb
jb
sbb
inc
mov
xor
sbb
jne
lods
push
add
adc
push
add
mov
insb
inc
mov
jl
add
add
stos
mov
jle
add
je
jb
push
mov
jmp
add
subl
jge
add
addr16
add
add
lods
xchg
ret
add
cmc
aas
mov
mov
pop
sub
add
add
jge
add
xorl
add
add
add
sbb
add
stc
pop
lods
hlt
add
add
stc
cmp
ret
sbb
mov
dec
shl
sub
mov
pop
sub
cmpsb
add
mov
adc
pushf
jbe
or
add
or
pusha
add
add
jb
rolb
mov
add
add
inc
adc
mov
in
mov
xor
lcall
add
jp
add
add
mov
inc
add
stos
loope
sbb
mov
mov
mov
imul
or
add
jb
mov
jb
xchg
jae
testb
add
add
mov
add
call
jnp
push
jnp
jl
popf
fcoms
add
sbb
mov
add
xor
int
adc
inc
pop
outsl
inc
or
mov
sbb
mov
bound
mov
data16
mov
sub
add
add
mov
mov
cmpsb
add
add
fsubr
and
mov
add
add
test
sahf
adc
xchg
add
or
adc
int3
stos
pop
push
add
add
add
add
add
push
jae
and
mov
rolb
inc
add
aad
fistpl
cmp
pop
pusha
add
into
xchg
add
daa
adc
push
add
add
add
adc
pop
mov
loop
push
add
add
into
push
add
loopne
aam
pop
adc
mov
or
pop
lahf
fwait
adc
xchg
add
add
fucomp
jecxz
fmul
mov
add
add
or
dec
jmp
addb
lock
lahf
xor
imul
mov
mov
add
add
sbb
add
pop
int3
mov
mov
repz
add
push
test
leave
xor
testb
add
add
and
mov
mov
pop
ds
adc
sbb
aaa
and
add
mov
add
mov
jle
mov
xchg
add
mov
xor
mov
inc
add
add
mov
inc
sbb
pop
jne
or
mov
aas
adc
movsl
push
add
push
aam
pop
dec
mov
mov
add
mov
popf
ds
loop
sub
add
mov
out
jecxz
xchg
add
xchg
dec
pop
andl
add
in
push
add
push
xor
sbb
std
data16
adc
sbb
xor
sub
add
and
mov
in
xchg
mov
idivl
sahf
lcall
pop
testl
add
add
add
push
mov
sbb
mov
data16
add
mov
repz
negl
inc
fnstsw
pop
dec
imul
add
xchg
stos
xchg
jbe
adc
arpl
cli
jp
pusha
add
bound
mov
add
add
mov
adc
leave
cwtl
test
pusha
add
push
pop
xchg
je
scas
pop
adc
cmp
add
add
in
fcmovnb
add
iret
cli
loopne
jb
ss
dec
xchg
fsubr
xchg
mov
mov
or
mov
lret
addb
dec
popf
ret
hlt
add
add
add
add
add
jb
testb
add
xchg
test
add
add
inc
add
mov
sub
test
arpl
mov
in
aas
data16
scas
sub
add
mov
push
insb
sbb
pusha
add
sub
mov
mov
ljmp
or
test
addl
add
add
cmp
add
dec
xchg
add
add
imul
pusha
add
add
add
dec
testb
lods
ss
cltd
icebp
fcmovnb
rolb
inc
add
jnp
sahf
xchg
push
add
addr16
out
fdivrs
out
jg
loop
jle
add
in
mov
push
fldcw
mov
inc
inc
add
push
das
xchg
adc
pusha
add
fs
add
ljmp
nop
add
jns
pinsrw
add
scas
es
jbe
pusha
add
call
add
cld
leave
popf
cli
jbe
xchg
ljmp
rolb
cwtl
movl
push
scas
mov
pop
movb
fnstenv
les
data16
or
add
int3
sub
hlt
add
sbb
add
add
movsb
add
mov
push
add
cmp
out
xchg
add
sbb
push
ds
mov
jbe
testb
or
fxtract
add
push
sbb
pop
test
xchg
movb
jp
add
sub
push
xor
add
xchg
xor
add
mov
mov
add
popf
repz
dec
rolb
pop
mov
sbb
add
xor
mov
add
dec
jb
rorl
sub
mov
add
addb
scas
aam
cmp
js
test
fidivrs
add
lods
cld
xor
dec
fistps
add
sbb
add
in
rolb
jge
cmovs
sbb
iret
in
js
fdivrl
movl
arpl
cmp
adc
rolb
out
data16
add
add
int
cmpl
add
add
add
cmc
sub
pop
dec
mov
mov
pop
mov
pop
iret
or
outsl
aad
push
add
add
out
xchg
mov
pop
dec
aaa
loope,pt
add
mov
pop
scas
fwait
sti
stos
mov
inc
add
add
sti
aas
sub
js
push
jbe
sahf
add
sbb
nop
add
mov
sbb
cld
mov
out
adc
xchg
mov
add
add
into
in
add
sbb
add
nop
add
fidivs
dec
add
mov
test
xchg
add
adc
jp
lret
out
fbstp
addb
or
test
xor
pop
xor
test
int3
mov
mov
ret
fildl
add
xor
in
add
scas
aas
add
mov
mov
pusha
add
xlat
aad
add
lods
std
mov
fsubl
lcall
add
add
add
adc
movb
cmp
sbb
in
stos
jecxz
push
popa
addb
add
dec
data16
sbb
addl
add
testb
adc
stc
lret
std
and
jno
add
out
add
add
in
pop
ret
add
pushl
lock
xchg
mov
popf
or
sbb
pop
mov
dec
pop
adc
jnp
lahf
push
add
inc
add
add
sub
jecxz
sarl
mov
lds
nop
add
jbe
jle
add
add
movsb
add
in
insb
fstpt
in
push
mov
add
lret
fiaddl
mov
mov
add
add
or
push
or
or
add
out
scas
mov
les
mov
dec
icebp
aad
add
add
pop
cmc
pop
mov
jbe
mov
dec
ret
or
sub
ja
add
push
mov
sbb
cmpl
dec
nop
add
or
or
add
jg
push
add
in
mov
xor
pop
mov
sub
add
sub
jle
jl
mov
add
add
mov
add
add
ljmp
add
add
add
add
add
out
cmp
add
add
out
and
mov
and
add
jge
test
add
ret
mov
sbb
xorl
shl
into
jg
ret
in
jbe
dec
sub
test
add
sti
push
mov
add
and
mov
cmp
dec
sub
mov
gs
in
mov
popf
scas
add
push
add
into
mov
add
loopne
je
add
add
add
mov
add
inc
add
cmc
xchg
iret
xorl
pop
mov
pop
in
jae
push
mov
mov
aaa
sbb
dec
adc
das
mov
aas
adc
dec
lret
jne
or
add
add
fst
add
data16
fadd
and
mov
lret
bound
mov
add
add
add
sarl
dec
or
jl
pop
push
add
add
add
incb
add
and
les
je
inc
add
mov
mov
add
pop
test
addb
pop
jmp
fadd
add
pop
addb
add
rolb
push
add
incl
add
lahf
lods
out
jmp
outsb
mov
add
push
add
jmp
js
cmp
dec
insl
xor
adc
add
or
imul
hlt
add
sub
jl
xchg
add
add
mov
mov
pop
popa
lcall
mov
pop
imul
fisubs
mov
movsl
jnp
add
add
pop
push
in
or
add
xor
push
lock
testb
jp
xor
dec
or
cmp
push
add
jnp
push
add
add
jo
popa
nop
add
push
add
mov
in
in
mov
add
cmp
stos
mov
pop
lods
mov
or
mov
or
stos
xor
decb
add
dec
popa
add
adc
inc
dec
sbb
lcall
inc
add
add
dec
in
stos
dec
sub
add
jae
add
in
xchg
add
add
mov
mov
jp
push
inc
push
mov
add
jbe
jno
add
push
clc
imul
sbb
add
add
jmp
add
add
add
repnz
pushf
call
cmc
stc
jne
push
add
test
sbb
xor
xor
mov
lcall
dec
pop
or
add
ljmp
cmp
lcall
outsl
mov
aad
insl
call
add
add
add
addl
pushf
sbb
sahf
mov
pop
repz
outsb
add
xchg
cs
add
sbb
loope
addr16
add
add
add
ljmp
mov
add
testb
cltd
sbb
add
insl
sarl
push
add
add
lea
pusha
add
sbb
xchg
psraw
addb
add
fidivrl
insb
cmpsb
add
dec
xchg
mov
jmp
pop
pusha
add
outsb
fwait
mov
rolb
jle
add
nop
add
add
outsl
xchg
and
rcr
push
add
and
xchg
js
rolb
pop
push
loope
aam
dec
mov
xchg
add
or
mov
pop
or
std
aas
test
aas
mov
add
adc
add
add
add
add
push
mov
mov
mov
clc
outsb
sti
jge
add
pop
js
add
add
cwtl
enter
add
jecxz
push
pushf
add
arpl
jg
and
mov
insb
dec
rolb
and
cltd
cmp
inc
add
add
inc
add
stos
mov
dec
out
mov
add
roll
add
cmc
mov
add
adc
je
mov
add
js
add
rolb
and
mov
lea
sub
pop
loope
add
add
pop
std
add
adc
cmpl
push
add
and
mov
add
stc
dec
lods
rolb
push
mov
pop
mov
test
add
dec
pushf
in
mov
cmpl
jmp
inc
out
pusha
add
add
xchg
or
lds
mov
insl
fists
mov
add
xchg
add
mov
push
add
or
pop
icebp
fisubs
sbb
add
ret
dec
jmp
clc
pop
jns
inc
add
jle
cmp
add
ja
or
add
add
cli
or
add
dec
test
add
mov
mov
add
je
jno
add
xor
push
dec
mov
sbb
add
add
pop
xor
mov
test
pop
mov
mul
outsl
mov
jecxz
out
sbb
sbb
dec
cmp
add
fst
add
pop
mov
add
mov
int3
scas
lahf
inc
jmp
pop
inc
pop
je
push
add
lret
add
dec
jo
push
add
aaa
or
add
sub
mov
sbb
add
orl
add
mov
mov
rolb
data16
add
fcmovnbe
add
add
test
mov
mov
add
jecxz
mov
add
mov
cli
repz
push
add
jle
add
mov
jecxz
jno
test
repnz
sbb
sbb
fmull
inc
add
add
and
fucomp
leave
jge
dec
or
jb
incl
add
add
rolb
loopne
insb
xchg
pushf
cmovs
add
insl
fscale
dec
pop
or
rolb
add
jbe
jne
mov
push
add
xor
adcl
xchg
movb
mov
jb
addb
add
cmp
pushf
cmpsl
and
add
stos
pop
aas
mov
sbb
push
add
loopne
sbb
add
xchg
sub
cmp
add
dec
pop
rolb
add
xchg
sahf
mov
add
jmp
push
std
jecxz
dec
xchg
jmp
or
add
cmp
push
add
aam
stc
into
push
add
add
ss
lea
add
pop
addr16
in
jns
cmp
rolb
or
mov
jne
sti
dec
in
push
add
popa
cmpsl
inc
add
add
jo
jecxz
lret
sbb
add
add
add
test
cmp
cs
and
fcom
nop
add
les
leave
and
jp
mov
inc
das
cld
arpl
jp
add
dec
lods
pop
mov
sbb
scas
fldcw
icebp
popf
add
add
rolb
jmp
mov
add
or
repz
int
popf
sub
data16
in
pop
xchg
cmp
xchg
sahf
js
add
add
pop
xchg
add
and
xchg
insl
dec
pop
mov
mov
add
add
xchg
gs
jne
cmp
mov
test
enter
testl
daa
add
mov
xor
mov
in
dec
std
stc
or
add
jnp
add
xor
jp
xor
pop
scas
adc
inc
mov
lret
pop
jne
sub
add
and
mov
jnp
xchg
dec
mov
jne
add
mov
and
inc
add
add
add
add
adc
dec
loopne
xor
and
add
add
pop
test
stos
lock
rorl
pushf
adc
and
xchg
add
call
inc
add
add
js
push
add
add
cltd
stos
or
call
fistpll
dec
mov
mov
fwait
repz
mov
adc
add
test
jbe
in
dec
repnz
stos
jnp
nop
add
mov
add
xor
sub
add
test
subl
pop
xchg
add
xchg
add
sti
push
out
loope
cmp
jnp
add
push
rolb
pop
xchg
sbb
add
mov
addr16
pushf
cli
xor
push
add
jmp
sub
fmul
mov
add
jl
cli
js
add
outsb
pop
sbb
data16
add
push
std
ja
add
and
add
xchg
rcr
mov
dec
mov
or
add
mov
iret
push
in
mov
mov
mov
add
add
add
pop
bound
mov
cmp
pop
fsub
ljmp
add
test
fcmove
pop
push
and
jns
mul
aas
lods
test
sub
add
std
push
add
cwtl
fwait
push
insb
mov
stos
sbb
repnz
loope
clc
sahf
inc
add
test
push
pop
shrl
add
cmp
mov
rolb
data16
je
cmp
xchg
cmc
pop
jae
adc
dec
push
mov
add
mov
test
inc
add
sbb
adc
jg
or
arpl
jmp
and
mov
jecxz
lret
into
push
movsl
repz
mov
mov
push
lea
add
outsl
pop
loop
in
xlat
mov
sbbl
out
outsb
inc
add
ljmp
xchg
js
out
add
xchg
add
jbe
sbb
add
fcomp
movb
pop
iret
cmp
add
negl
add
je
xor
lcall
inc
add
mov
add
push
sbb
outsl
pop
pop
pop
sti
cltd
xchg
scas
pushf
aad
adc
fsubrp
inc
push
and
mov
jle
add
repnz
inc
dec
repz
ds
xchg
push
add
cmp
sub
add
add
mov
xor
add
nop
add
in
outsb
clc
scas
mov
add
add
add
lds
aad
mov
rolb
or
add
cmp
rcrl
dec
stc
jns
add
pop
sub
push
movsl
mov
or
xchg
add
add
add
mov
add
sbb
mov
clc
add
leave
addb
inc
adc
dec
mov
dec
ja
pop
or
push
add
or
add
xor
addl
add
mov
adc
pop
or
invd
sbb
das
mov
ret
cmpsb
add
dec
xor
add
xor
pop
in
dec
sbb
cmp
dec
sbb
in
mov
setle
cmp
add
testb
and
loopne
test
ds
add
push
mov
daa
fcmovb
adc
enter
add
add
int3
jmp
cmc
lret
add
incl
add
test
out
dec
das
sbb
add
add
out
dec
data16
mov
push
add
mov
add
add
in
dec
push
add
addb
add
icebp
sub
add
pextrw
xchg
stos
jle
add
add
int
mov
fsubl
mov
push
add
lret
and
add
push
addr16
repz
addb
cmp
push
add
inc
sub
push
add
add
add
repnz
fadds
add
xchg
add
sub
js
add
add
filds
push
popf
mov
stos
adc
fcmovbe
add
dec
aaa
aam
xchg
pop
xchg
add
rolb
push
add
je
pop
bound
mov
xor
push
pop
xor
sbbl
stc
cmp
mov
mov
xchg
xchg
jnp
add
xchg
rolb
aaa
loop
mov
cmc
xchg
add
mov
jp
jmp
cmp
pop
popf
aad
dec
outsb
arpl
gs
xchg
mov
adc
push
and
js
add
push
fwait
pop
cs
mov
mov
cld
sbb
cmp
cmp
in
push
add
add
mov
mov
cmpsl
mov
xor
add
add
add
rolb
testb
add
mov
add
leave
into
add
dec
imul
cmp
add
add
xchg
cmp
imul
add
sub
lock
pop
jmp
rolb
leave
adc
imul
fwait
sub
inc
add
add
xchg
xchg
popf
stc
inc
movsb
add
cwtl
in
fdivs
xchg
add
push
jg
jmp
add
add
mov
jb
adc
mov
in
xor
add
mov
add
call
add
add
add
testb
mov
push
mov
arpl
push
jmp
addb
push
add
add
mov
add
bound
mov
xchg
in
arpl
mov
push
add
add
mov
dec
insl
mov
mov
fstp
jae
pop
mov
jo
mov
cmp
push
add
push
pop
repnz
movb
ljmp
xchg
cli
loop
cmc
jae
lcall
add
adc
movd
mov
orl
xchg
mov
add
sub
jl
xchg
rolb
push
js
add
add
push
add
add
pop
jmp
add
dec
push
add
lahf
pop
aas
push
add
outsl
lret
add
jecxz
cwtl
mov
outsl
addb
add
or
add
lahf
jno
add
fstps
pop
or
lods
arpl
add
sub
add
add
pop
pop
outsl
sub
add
stos
out
inc
mov
pop
bound
mov
pop
add
mov
pop
movsb
add
push
add
pop
inc
sub
adc
lret
inc
add
add
movsl
adc
cmc
enter
add
add
and
fildl
mov
pop
push
xchg
fxch
out
mov
mov
les
decb
cmpsl
or
add
pop
and
popa
mov
fwait
xor
mov
sub
pushf
addb
xchg
add
or
xchg
push
add
inc
add
add
ret
data16
clc
mov
jne
mov
outsb
in
movb
jle
add
dec
test
mov
mov
ret
inc
out
jp
add
add
jle
xor
and
xor
inc
add
pop
stc
clc
jbe
in
and
sub
pop
scas
in
in
das
add
and
mov
add
add
add
pop
push
add
xor
iret
movzwl
jno
sub
push
add
in
jp
mov
xchg
add
sti
xor
ret
xchg
add
add
cwtl
lods
testb
jbe
testl
add
xchg
sahf
in
dec
jbe,pt
aam
sub
leave
repz
jbe
xor
aaa
add
hlt
add
xchg
or
mov
xor
mov
cmp
add
jno
xor
mov
add
push
add
movsl
and
mov
add
add
add
test
rcrl
aaa
cmp
add
aas
iret
sbb
lods
xchg
xchg
daa
into
xchg
add
cmp
mov
and
push
add
sub
xchg
inc
add
add
add
sub
add
outsb
cs
add
mov
inc
fcomi
add
gs
ret
add
mov
push
pop
push
jae
cmp
pop
ds
jle
xor
inc
fimull
pusha
add
test
dec
call
je
repz
xchg
jno
jns
les
cmp
add
mov
add
ret
jns
xorl
jmp
mov
call
cs
pop
stc
mov
cltd
xchg
mov
sbb
scas
sbb
add
add
ret
mov
inc
add
add
out
push
add
jb
stc
jecxz
add
add
fwait
mov
jns
dec
cmp
cmc
addb
mov
add
lods
cmp
sahf
and
stc
xor
jl
lock
nop
add
add
addb
add
xchg
pushf
inc
push
add
add
add
add
fildl
add
xor
sbb
inc
add
mov
sbb
aad
add
mov
mov
mov
adcl
cmp
sub
adc
daa
or
add
scas
cmc
mov
aaa
xlat
or
dec
inc
sbb
add
rolb
cltd
cmp
test
cmp
jmp
ret
cld
outsl
jmp
add
inc
loop
lcall
mov
fwait
cmp
add
xor
xchg
add
mov
test
jge
ret
scas
movsb
add
sub
test
test
mov
insl
lods
mov
xor
clc
dec
clc
lret
mov
mov
and
mov
cmp
add
mov
jecxz
adc
ret
inc
add
bound
mov
add
and
mov
fdivrl
dec
sub
sti
xor
add
add
mov
popa
scas
mov
or
insl
movsl
loope
fistpll
add
fwait
cwtl
cwtl
pop
pop
test
dec
das
out
inc
add
add
add
or
movsl
icebp
fstps
sbb
fisubrl
dec
inc
add
loope
add
and
dec
mov
clc
inc
add
add
dec
int3
sbb
subl
les
test
jnp
popa
lock
xchg
lea
push
add
xor
ret
push
cmpsb
add
cli
adc
add
add
add
mov
sbb
sti
push
roll
fsubrl
fimull
daa
add
mov
test
add
pop
push
add
in
stos
push
movsb
add
add
mov
in
ret
xchg
add
cmpsl
pop
ljmp
add
jmp
rolb
testb
into
inc
add
mov
pop
sub
jp
sti
aaa
test
inc
pop
add
stos
addb
mov
int
dec
push
add
add
mov
stc
cmp
add
add
add
adc
rolb
add
lahf
loopne
hlt
add
cli
mov
inc
add
mov
add
sub
or
adc
jo
sub
mov
fstpt
mov
pop
mov
mov
loope
jg
and
ret
or
outsb
mov
add
add
lret
dec
dec
inc
out
addb
movsl
push
push
push
cli
cmp
rolb
mov
and
xchg
add
add
out
clc
or
add
pop
jge
inc
sub
jmp
or
add
add
lock
add
xchg
push
or
push
add
push
test
jmp
add
jecxz
add
add
pop
imul
adc
cs
add
and
cli
pop
sbb
lea
movb
cmp
mov
add
test
les
pop
aas
rolb
mov
aas
mov
pop
cmp
in
xchg
add
or
data16
repz
test
add
aad
mov
rolb
pop
mov
enter
inc
inc
sbb
data16
add
push
xor
loopne
inc
add
fstpt
push
lods
sti
jge
add
add
add
insb
cs
subl
aad
adc
stos
jle
add
lret
notl
stc
and
pop
mov
ficoms
adc
leave
ja
add
addb
add
cmp
cmp
rorl
add
daa
xchg
add
lahf
mov
add
xchg
add
add
bound
mov
into
inc
add
add
lock
mov
push
add
add
inc
les
mov
add
nop
add
cld
test
adc
aas
xchg
popa
mov
mov
add
loop
add
jb
pop
mov
sti
rolb
cmp
mov
mov
push
out
mov
mov
mov
iret
push
outsl
pushf
loope
add
mov
in
mov
fisubl
add
add
pop
sub
adc
adc
pushf
push
mov
sub
das
bound
mov
add
add
pop
ret
jo
rcrl
add
sub
xchg
out
stc
pop
adc
add
in
test
out
jo
xchg
inc
leave
and
mov
add
scas
addb
mov
sub
pop
rolb
add
addr16
mov
add
jp
in
push
rorl
xor
sub
add
pop
pop
jmp
inc
scas
add
popa
cmp
movb
lods
pop
mov
dec
inc
add
ds
stos
cwtl
test
cmp
xchg
or
mov
adc
cmp
aaa
xorps
add
add
cmp
add
add
aad
jl
push
push
cmp
xchg
fistl
inc
cmp
cltd
mov
sbb
enter
or
testb
and
shll
add
add
enter
add
pop
inc
lcall
mov
adc
mov
frstor
fwait
add
mov
mov
add
data16
jle
push
add
fcmovnb
add
sbb
jbe
jns
repnz
add
add
add
arpl
repnz
xlat
cmp
dec
mov
inc
add
testb
xor
cmpsb
add
add
add
call
add
add
jbe
stc
iret
in
jl
add
test
sub
add
int3
jb
rolb
jle
and
mov
adc
ret
mov
cs
pop
dec
adc
in
push
sbb
stc
ds
add
jl
sbb
add
lret
rolb
push
add
add
inc
add
add
cli
mov
mov
pop
mov
into
pop
pushf
clc
cmp
or
ljmp
add
pop
mov
ljmp
mov
add
rcrl
dec
bound
mov
cltd
mov
aaa
sub
add
lods
pusha
add
cmp
test
add
xchg
add
xchg
stos
pop
or
mov
and
stos
inc
dec
in
inc
push
add
add
mov
hlt
add
aam
fwait
pop
xlat
and
mov
sub
add
movb
unpcklps
dec
jb
mov
fistpll
pop
mov
insb
scas
push
mov
test
xor
and
mov
push
add
decb
dec
dec
mov
add
add
pop
or
mov
lea
add
test
inc
dec
mov
das
arpl
mov
nop
add
push
dec
push
add
icebp
pop
sub
add
mov
mov
add
add
insb
lret
adc
popa
jbe
dec
push
cmpsl
addb
xchg
add
add
shrl
xchg
add
add
mov
pusha
add
add
test
clc
inc
add
loop
push
add
ja
sahf
xchg
add
add
add
add
mov
add
xchg
sub
add
mov
dec
dec
mov
shll
add
fiadds
add
pop
dec
out
cmc
and
mov
add
mov
gs
xor
mov
sub
sbb
add
movsl
adc
mov
fmull
add
mov
in
mov
xchg
add
cltd
sub
and
jne
cli
inc
sbb
sub
adc
int
add
dec
rcrl
add
test
add
and
popf
push
rcrl
les
insb
dec
mov
and
sbb
pop
and
lret
movsl
pusha
add
inc
rolb
push
add
push
add
iret
icebp
and
add
lahf
fdivp
add
mov
shrl
cmp
cmp
add
loope
add
add
rolb
inc
add
cmp
xchg
add
mov
orl
gs
mov
add
lods
sbb
add
sbbl
add
add
or
sbb
dec
xchg
ret
rolb
pop
in
fimuls
cltd
nop
add
jne
adc
testb
xchg
inc
add
push
out
lahf
lahf
ret
xchg
rcll
pop
jecxz
xchg
test
pop
jae
and
mov
cmp
cmp
test
xchg
add
ja
ds
add
cmp
test
mov
into
subl
add
iret
dec
lds
shll
add
mov
mov
add
add
or
dec
jbe
daa
loop
mov
add
mov
sahf
ljmp
add
aad
pusha
add
add
adcl
add
out
add
test
call
pop
mov
jmp
add
add
mov
test
pop
or
add
xchg
aad
ret
add
push
add
add
add
add
mov
fildll
mov
adc
repnz
nop
add
pushf
js
add
cmp
add
test
push
add
fnstsw
inc
add
add
add
jmp
add
sub
inc
add
add
add
imul
fsubrl
out
lods
scas
push
int3
push
mov
js
add
mov
add
iret
xor
pop
inc
jecxz
mov
inc
add
adc
xchg
add
mov
jecxz
and
jns
stc
jmp
test
jmp
ljmp
push
push
jmp
mov
addb
sbb
add
mov
add
push
or
fdivrl
add
add
sub
addb
movsb
add
and
mov
add
ljmp
xor
or
add
jp
add
add
mov
push
inc
orl
enter
and
add
rolb
lods
cmpsb
add
sub
in
rcrl
add
jno
leave
mov
outsb
or
test
jmp
xor
adc
test
add
add
mov
test
sbb
fwait
insb
xor
mov
add
adc
lea
imul
imul
sahf
push
add
cs
add
sub
inc
scas
lea
add
and
movsl
int
movsb
add
aad
mov
inc
and
mov
push
sahf
jmp
dec
aad
add
add
mov
add
lods
xchg
push
add
movsb
add
add
add
ja
test
add
mov
push
add
nop
add
mov
data16
jl
mov
js
sbb
lret
in
lods
add
add
add
push
add
add
add
scas
and
js
insl
mov
fldenv
mov
add
add
je
data16
xchg
and
mov
cwtl
and
lods
stos
fbld
or
mov
add
mov
pop
add
mov
add
adc
loope
push
add
add
les
std
aaa
push
or
stos
mov
adc
aas
inc
stos
mov
jns
imul
gs
stos
cwtl
ficoml
add
add
add
add
imul
and
mov
xchg
lcall
xchg
enter
imul
jnp
add
add
add
cmp
add
add
hlt
add
pusha
add
dec
in
and
mov
enter
daa
fldenv
add
add
xlat
or
sub
into
rorl
xchg
inc
add
add
rolb
roll
push
add
xor
xchg
add
dec
in
sbb
mov
ret
mov
clc
sbb
in
sbb
pop
inc
add
in
movb
jae
add
out
add
mov
mov
add
add
mov
dec
adc
outsl
iret
rcll
add
test
add
scas
or
leave
mov
cmp
pop
xlat
testl
mov
push
add
rolb
out
mov
dec
pop
mov
add
into
insl
iret
jmp
add
push
add
stc
cmp
pop
mov
sarl
pop
pop
push
or
mov
pop
mov
hlt
add
add
pop
roll
icebp
and
add
add
rolb
add
lcall
test
jb
xor
test
data16
fistpl
lds
push
add
add
test
leave
sub
add
addr16
dec
and
mov
add
pop
bound
mov
add
add
add
inc
add
add
sub
add
test
je
mov
scas
aad
pop
fcomps
mov
movsl
sti
addb
add
fdivrl
push
add
outsb
cmp
pop
loop
hlt
add
addr16
push
add
fnstenv
add
add
or
jno
add
sub
testb
xor
in
fs
mov
add
bound
mov
add
mov
add
inc
stc
daa
mov
sbb
xchg
add
add
pop
push
add
cwtl
lds
jne
les
aad
add
lcall
adc
test
add
xchg
push
add
jno
xlat
mov
cmpsb
add
add
xor
add
lea
fnstcw
jle
int
insb
push
adc
xor
add
add
add
add
mov
and
fsubr
scas
add
add
sub
pop
push
lret
or
add
hlt
add
mov
ja
dec
incl
add
mov
pop
stc
daa
sub
lea
and
xchg
jbe
add
mov
jecxz
dec
mov
ret
xchg
add
iret
bound
mov
adc
testb
push
add
xor
lods
fsubrl
adc
sub
in
xor
std
aam
repnz
mov
xor
xchg
int
repnz
lret
or
add
add
insl
lret
add
cmp
add
add
mov
push
cmp
add
int
jge
add
add
sbb
push
xchg
and
testb
fldl
jbe
dec
lods
xchg
push
add
daa
push
push
xlat
and
mov
cmp
add
lcall
add
or
add
mov
shr
gs
fxch
icebp
push
add
dec
inc
add
enter
in
mov
add
jle
add
arpl
cmc
xor
jmp
test
xchg
add
add
mov
jno
add
add
mov
inc
scas
stc
xchg
xor
xor
and
mov
add
cmp
movsb
add
jmp
add
adc
cmp
pop
sub
xor
add
les
sbb
sti
mov
mov
adc
stos
jns
add
lock
gs
mov
sbb
add
icebp
pop
inc
or
add
mov
add
sbb
xlat
mov
out
aas
mov
push
cmp
push
add
in
cmpsb
add
testb
add
xor
add
xor
jecxz
add
pop
mov
insl
mov
movsl
push
int3
and
imul
icebp
std
add
xor
xchg
add
hlt
add
xchg
adc
push
add
loop
stc
stos
leave
adc
pop
insl
adc
sbb
pop
cld
rolb
cld
movb
add
out
dec
jg
add
add
testb
scas
int
add
add
stos
dec
push
fwait
sub
or
data16
std
xchg
mov
scas
popa
jmp
cwtl
xor
mov
add
dec
add
add
pop
xlat
inc
add
add
jbe
cmp
test
clc
push
add
jnp
add
cmpsl
sub
push
add
or
add
xlat
cmp
aaa
xor
pop
icebp
add
scas
add
fdivrp
les
jno
jecxz
insb
sub
repz
mov
mov
icebp
sub
mov
pop
pop
adc
lods
xchg
cli
xchg
xor
mov
add
lds
push
add
xchg
add
add
xor
ljmp
add
jg
add
add
inc
dec
leave
cmpsb
add
xor
loop
cmp
xchg
add
fnstsw
add
xchg
mov
or
push
add
ret
add
lahf
or
xor
push
int3
push
add
loopne
lock
jecxz
out
addr16
shrl
outsb
out
add
cmpsl
loope
mov
mov
inc
or
add
xor
inc
xchg
add
add
ret
add
fldcw
das
popf
js
enter
testb
xor
aam
fsubs
mov
add
add
dec
fisubrs
inc
add
arpl
in
test
or
sahf
icebp
jecxz
cmc
outsl
xchg
add
cmp
add
ret
xor
adc
add
mov
add
add
xor
loop
je
mov
inc
in
jnp
adc
inc
pushl
dec
jge
inc
push
push
inc
add
lea
rolb
sbb
add
add
dec
je
mov
and
sbb
jg
xor
mov
push
pop
adc
pop
insl
sahf
fimull
or
test
ficoms
or
ret
mov
add
mov
dec
js
int
jae
movb
or
jg
es
aad
add
add
adc
repz
xchg
add
stos
lret
xor
pop
adc
sbb
jp
testl
add
iret
and
sbb
mov
ds
mov
loope
add
lods
sbb
add
or
nop
add
inc
ja
add
add
add
dec
fcmove
lods
cmpsl
je
or
leave
into
jo
faddl
xchg
in
pop
sub
lahf
push
mov
imul
adcl
iret
test
loop
jno
cmp
and
rcrl
add
add
or
add
mov
or
pop
sub
and
mov
lock
sbb
add
dec
sub
lea
add
xor
out
cmc
sahf
pop
push
add
stos
dec
adc
push
add
insb
popf
xor
lds
loope
add
std
jmp
add
jno
xchg
cld
in
mov
add
add
add
add
sti
pop
xchg
xor
push
add
xor
std
push
add
add
cld
imul
add
dec
sub
xor
cmc
pop
decl
fbld
add
add
mov
addb
hlt
add
add
add
cs
add
mov
outsl
mov
adc
inc
add
test
pop
pop
add
mov
dec
mov
add
add
cmp
fistpll
dec
adc
and
mov
add
push
xchg
clc
aas
push
dec
mov
jg
push
cmp
lret
add
xor
add
add
repnz
and
jo
push
add
out
int3
faddp
jo
mov
sbb
adc
ret
outsb
fdivrs
add
mov
add
mov
cmpsl
xor
add
xor
lret
jecxz
loop
scas
pushf
rcll
jno
rcll
jne
fidivl
jge
sub
add
out
adcl
inc
add
add
adc
ja
sub
cmpsl
mov
jp
mov
enter
scas
lods
lea
test
pushf
pop
or
mov
add
add
sbb
jmp
testl
pop
jo
xchg
pop
imul
pop
or
add
mov
dec
scas
mov
push
push
add
sbb
sub
adc
jo
pop
sub
ret
subl
insb
jo
pusha
add
add
dec
push
push
add
add
mov
sub
daa
testl
cwtl
addb
inc
pop
inc
pusha
add
add
add
enter
mov
bound
mov
or
jge
add
mov
xchg
xor
stos
loopne
outsl
out
scas
mov
add
lods
inc
add
dec
adc
sub
arpl
testb
adc
sbb
repnz
scas
stos
add
addr16
push
add
add
add
rcll
addr16
mov
imul
les
and
inc
pop
xor
sbb
outsl
jo
add
mov
pop
cmp
data16
add
add
out
jb
lods
xchg
mov
add
scas
sahf
mov
add
data16
mov
add
jp
sbb
stos
mov
add
in
xchg
add
mov
push
add
mov
xchg
leave
test
xchg
add
or
add
addb
add
xchg
scas
fs
jae
or
xchg
xchg
adc
push
sub
cmpsb
add
repz
dec
leave
into
out
rolb
xor
add
repz
lret
pop
mov
add
out
adc
add
adc
addl
xchg
sub
xchg
sbb
fimuls
add
add
adc
mov
ret
lcall
mov
into
test
gs
or
xor
pop
jmp
sbb
lret
push
add
mov
push
sbb
jo
sti
add
mov
add
mov
into
loop
jl
repnz
mov
fcomps
bound
mov
mov
fistps
movsb
add
add
push
arpl
cmpsl
jne
pop
arpl
jg
add
xlat
sbbl
lcall
or
add
add
cmp
pop
icebp
mov
pushf
outsb
in
adc
dec
test
jg
push
fsubs
mov
adc
or
movsb
add
xchg
mov
jno
add
iret
jle
add
add
xchg
add
xor
jb
loop
inc
loope
shll
xchg
jns
dec
and
mov
sbb
loop
mov
add
add
pop
inc
add
add
inc
add
fiadds
and
sbbl
cmp
xor
dec
sbb
push
add
out
add
fwait
mov
sbb
outsb
push
add
loopne
clc
test
mov
cmp
lods
pop
lahf
dec
iret
addb
add
add
bound
mov
arpl
add
fisubrs
sahf
push
add
push
add
jno
adc
add
mov
dec
jge
xlat
mov
push
lret
add
fisttps
mov
leave
call
xor
sub
icebp
jmp
in
insb
push
dec
jg
aam
leave
roll
mov
xchg
stos
mov
add
ja
mov
pop
inc
icebp
cwtl
jb
dec
xlat
testb
and
dec
jns
or
add
dec
adc
add
jmp
lods
jecxz
inc
add
add
add
cmpsl
movsb
add
cmp
adc
stos
and
mov
add
pusha
add
xchg
call
pushf
pushf
jp
clc
or
in
push
add
jnp
mov
push
add
dec
or
mov
add
in
fmul
adc
fstpl
insl
push
add
add
lods
cld
mov
add
jp
ljmp
or
add
dec
cmp
clts
add
add
mov
ret
fisubl
add
mov
add
xchg
add
pop
add
scas
out
inc
pop
popa
xchg
add
pop
jne
mov
out
add
pop
pushl
add
in
add
lods
xor
cmpl
cli
imull
add
mov
push
add
pop
enter
fistpl
or
stos
adc
add
add
inc
cmc
mov
add
and
mov
add
add
add
fnsave
add
and
sbb
ficomps
pop
rcll
insl
jo
dec
dec
xor
clc
dec
sub
es
mov
push
add
add
add
push
xor
rolb
pop
mov
sbb
add
and
xchg
fsubrs
outsb
xchg
movb
add
loope
pusha
add
ret
fwait
pop
jbe
jle
jecxz
int3
or
xchg
and
dec
repnz
dec
mov
add
add
add
mov
adc
lock
mov
or
mov
stc
out
pop
mov
cmpsl
ljmp
pop
addb
add
dec
fs
dec
sbb
xchg
pop
sub
add
cmc
arpl
add
add
push
push
add
add
push
mov
add
fwait
data16
fwait
je
pop
ja
push
lock
add
add
add
sbb
pop
stos
sub
xorl
xor
add
insb
stos
popa
cmpsb
add
popa
and
mov
jbe
xor
add
add
loope
test
sti
sub
testb
in
data16
ret
stc
lock
mov
mov
mov
add
mov
mov
add
add
pop
adc
mov
and
mov
int
pop
test
jecxz
ljmp
xor
mov
mov
iret
ljmp
loop
adc
push
add
sub
das
addb
inc
add
mov
rolb
cmpsb
add
add
push
add
xor
inc
add
cmp
pop
jno
xchg
add
scas
and
out
cmpsb
add
ret
inc
xchg
bound
mov
add
push
scas
or
jnp
add
popa
push
add
cmp
adc
inc
add
lcall
jnp
scas
sbb
jbe
mov
lret
add
aam
xchg
add
xchg
mov
mov
outsl
sub
add
sbb
xchg
add
test
mov
push
inc
inc
add
jg
add
cli
mov
add
inc
jns
test
add
scas
mov
jne
daa
sub
cmpsl
ret
testb
add
add
insl
add
and
mov
mov
or
rolb
lock
mov
mov
xchg
xchg
cmpl
xchg
dec
fwait
cwtl
mov
dec
mov
rcrl
pop
pop
lock
and
mov
int
jb
testb
add
mov
mov
das
mov
lcall
ret
dec
in
fsubl
rolb
or
adc
lods
push
add
add
inc
