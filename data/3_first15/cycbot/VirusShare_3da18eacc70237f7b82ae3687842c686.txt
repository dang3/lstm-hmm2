add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
or
or
add
or
or
add
add
add
add
add
or
add
or
add
add
add
or
or
add
add
add
add
add
or
add
or
add
add
add
or
or
add
or
add
or
add
or
add
or
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
or
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
or
or
add
add
add
add
or
or
add
or
add
add
or
add
or
or
add
add
or
add
add
or
or
add
add
add
or
or
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
add
or
or
or
add
add
add
add
add
add
add
or
add
or
add
add
or
add
add
or
or
or
or
or
add
add
add
add
add
add
or
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
or
or
add
or
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
or
add
add
or
add
add
or
add
or
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
or
or
add
or
add
or
add
add
add
add
or
or
or
add
add
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
or
add
or
add
or
or
or
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
or
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
or
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
add
or
add
add
or
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
or
add
add
add
add
add
or
or
or
add
add
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
or
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
or
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
or
add
add
add
add
add
add
add
or
or
add
or
add
or
add
add
add
add
add
add
or
add
or
add
add
or
add
add
or
or
add
or
add
add
or
add
add
add
add
add
add
add
add
or
add
or
or
add
or
or
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
or
or
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
or
add
or
add
add
add
add
or
add
add
add
or
add
add
add
or
or
or
add
or
add
add
add
or
or
add
or
add
add
add
or
add
or
or
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
or
add
or
add
or
or
or
or
or
or
or
add
add
or
or
add
or
add
or
add
or
or
or
or
add
add
or
add
or
add
add
or
add
or
or
add
add
add
add
or
add
or
add
or
or
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
add
or
add
or
or
or
add
add
add
or
add
add
add
or
or
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
or
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
or
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
or
or
add
or
add
or
add
add
add
or
or
or
add
or
add
add
or
add
or
add
or
add
add
or
add
add
add
add
or
add
or
or
or
add
add
add
or
add
add
add
add
add
or
add
or
or
or
add
add
add
add
add
add
add
or
add
add
add
or
or
add
or
add
or
add
add
add
add
add
or
or
add
or
add
add
add
add
or
add
add
or
or
or
add
or
add
or
add
add
or
add
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
or
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
or
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
or
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
or
add
add
add
or
add
or
add
add
or
add
or
add
or
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
or
add
or
or
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
or
or
add
or
or
add
or
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
or
or
or
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
or
or
or
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
or
or
or
add
or
add
or
add
add
add
add
add
or
or
add
add
or
add
add
or
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
or
add
or
or
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
or
add
add
or
add
or
or
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
or
add
or
add
or
or
or
or
add
or
add
add
add
add
add
add
add
or
add
or
or
add
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
or
or
add
or
add
or
or
add
add
add
or
add
add
or
or
or
add
add
or
or
add
add
add
or
add
or
add
or
add
or
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
or
add
add
add
or
add
add
add
or
add
add
add
or
or
add
or
add
add
or
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
or
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
or
or
or
or
add
add
or
add
or
add
or
add
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
or
add
or
add
add
add
or
add
add
add
add
add
add
add
or
or
or
add
or
add
or
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
or
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
or
or
add
add
add
add
or
add
add
or
add
or
or
add
or
or
add
or
or
add
add
or
add
or
or
add
or
or
add
add
or
add
add
add
add
add
add
or
add
or
add
add
add
or
or
or
or
add
or
or
add
or
add
add
add
or
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
or
or
add
add
add
add
add
or
add
add
add
or
or
add
or
add
or
add
or
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
add
add
adc
sbb
jg
movsl
jo
pop
lods
in
cltd
xor
or
jmp
inc
iret
cmp
dec
mov
test
addr16
pusha
mov
sbb
out
or
push
cmp
mov
add
add
lahf
fistpll
mov
add
add
js
out
dec
add
add
inc
sbb
and
in
add
cmp
jg
mov
add
jns
add
add
add
cmpsb
icebp
adc
xchg
xchg
fisttpl
add
loopne
lcall
add
dec
mov
test
ljmp
test
in
ss
aas
and
aas
or
add
add
leave
popa
xor
cmpb
in
fs
add
add
add
addr16
add
add
add
outsl
pop
cmp
mov
add
add
outsl
adc
adcb
add
nop
sbb
add
jne
add
add
test
stos
imul
mov
cmp
xchg
insl
leave
cmp
xlat
xor
movsl
push
clc
or
sbb
test
sahf
into
std
dec
mov
test
sub
sbbl
mov
add
add
stc
fldpi
clc
movsl
xchg
in
and
cmp
stc
lea
jb
sbb
mov
icebp
in
mov
push
jns
add
add
adc
inc
xchg
mov
mov
add
add
cmp
add
add
and
xchg
arpl
out
pop
repnz
add
add
insb
add
add
add
add
add
es
add
or
mov
mov
jmp
sti
xchg
mov
and
adc
movsb
shlw
add
cld
push
loopne
mov
outsb
inc
bound
mov
inc
test
test
mov
arpl
test
mov
es
xor
stos
fisttps
repz
mov
push
mov
fistpll
xchg
call
xchg
jge
mov
add
jbe
xchg
push
dec
scas
xchg
and
xchg
rcl
cmc
push
ja
xlat
js
test
icebp
and
fists
rclb
sti
jns
out
aad
xor
fnsave
push
rcrb
push
push
pop
push
inc
arpl
push
lret
sub
stos
insb
mov
adc
mov
aaa
mov
lret
add
popf
data16
mov
mov
add
mov
je
lcall
mov
sbb
inc
sub
ss
pop
mov
or
pop
or
add
add
loopne
pop
xor
fldt
jo
xor
icebp
or
push
sub
lea
jb
adc
fmulp
add
pop
or
add
add
cmpsl
or
pusha
add
add
jge
mov
lods
push
mov
add
add
imul
addr16
add
ficomps
jne
mov
xor
mov
cmp
dec
mov
pushw
in
daa
daa
mov
sti
push
xchg
push
mov
jae
and
test
mov
push
out
cmp
lods
adc
shr
inc
fcmovne
adc
xchg
insl
repnz
sbb
shll
pop
cs
popa
sahf
push
adc
add
add
and
add
add
outsl
movsb
xor
rcr
or
add
or
cmp
mov
sbb
add
ret
cwtl
lcall
in
sbb
movsl
xchg
test
add
mov
int3
dec
or
add
add
enter
lret
insb
add
add
test
add
push
scas
mov
add
add
lea
mov
and
add
add
add
and
loopne
int
sbb
and
add
add
es
ss
add
add
pop
xchg
cmp
add
dec
push
out
jmp
mov
cwtl
ror
cmp
add
add
mov
dec
mov
enter
mov
outsb
es
jno
push
aam
dec
adc
es
stos
xlat
daa
jns
add
cli
les
push
mov
fadd
aad
frstor
lret
out
pop
push
mov
mov
dec
xchg
sarl
add
add
add
add
xor
or
add
add
dec
add
add
cld
and
xchg
orl
dec
lock
sbbb
add
sub
mov
popa
mov
add
add
mov
imul
add
add
pop
in
nop
shll
pop
imul
js
stos
loope
mov
inc
add
add
sbb
jecxz
ret
inc
mov
mov
gs
lret
into
std
js
test
jns
or
pop
mov
push
inc
adc
sbbl
add
aad
in
in
aaa
inc
add
add
in
xor
mov
jle,pt
inc
sbb
add
add
movsb
inc
sti
pop
sbb
dec
lods
fwait
out
xchg
add
add
dec
mov
jg
cs
xchg
xlat
icebp
cmp
pop
ret
mov
stc
xchg
push
mov
insl
pop
xchg
mov
stos
leave
fwait
loopne
xlat
and
xchg
rcrl
mov
fidivrl
inc
sub
add
add
xchg
loop
jnp
imul
add
mov
mov
add
add
outsb
test
lods
xchg
imul
testb
add
add
iret
aam
adc
sub
jge
into
lods
insl
sub
sarb
sub
lods
mov
add
or
cwtl
fldcw
add
add
pop
or
in
dec
add
add
roll
add
hlt
mov
aam
mov
or
test
jns
shlb
cwtl
mov
mov
add
add
and
xchg
xchg
xchg
rcll
stc
cs
add
add
add
into
dec
gs
daa
aam
aaa
and
add
add
push
push
jae
mov
add
pop
xlat
push
mov
pop
in
or
mov
shll
les
loopne
add
add
in
aad
ret
fnstsw
and
sahf
shll
jmp
add
add
and
add
add
jl
aas
mov
inc
mov
mov
and
dec
sarl
jbe
inc
fisubrl
fld
rolb
incl
inc
rolb
or
pop
xor
je
mov
mov
imul
sub
add
add
icebp
dec
inc
mov
ljmp
cmpsl
xchg
pop
fnstenv
mov
add
add
orb
aad
ficompl
rorl
add
add
add
add
push
icebp
jbe
add
add
fstl
movsb
cld
fadds
rcl
scas
mov
pop
mov
sub
stos
adc
and
add
add
add
add
add
fidivs
add
inc
add
add
movsb
in
rcll
dec
gs
jg
push
andb
xor
and
cmp
stos
loopne
add
add
or
test
adc
dec
xor
into
pop
stos
mov
add
add
xchg
fs
cwtl
shll
arpl
xlat
pop
push
insb
mov
int
cltd
lret
mov
mov
mov
jg
add
add
ss
loop
cs
jno
and
loopne
and
cli
loope
adc
imul
inc
and
jl
lcall
addr16
popa
lcall
mov
ljmp
push
jbe
pop
out
dec
test
rcl
outsb
testb
add
add
add
add
sbb
lds
and
fisubrs
or
push
sar
jg
pop
mov
cld
test
or
xor
mov
decb
pop
pop
sub
divl
cltd
out
inc
jmp
ret
dec
shll
add
xor
add
add
mov
add
mov
xor
mov
shlb
mov
repz
pop
lods
into
movsl
or
add
add
jo
mov
inc
inc
add
add
out
cmpsb
and
int3
lods
leave
fnstenv
mov
add
add
add
jb
or
add
add
add
movq
scas
lds
add
add
lock
pop
add
add
add
dec
pop
sub
mov
sbb
into
scas
xor
mov
popl
mov
mov
mov
fxch
lds
negl
add
cmpsl
add
add
imul
dec
mov
fwait
arpl
pusha
mov
lods
sub
and
add
add
pop
lcall
sub
mov
mov
sub
add
add
jo
nop
mov
sub
add
lds
add
add
pusha
add
add
adc
fsubl
pop
in
cltd
adc
faddl
add
push
jnp
pop
cmp
dec
mov
sbb
pop
mov
mov
ret
push
xchg
add
add
outsb
inc
xor
aad
add
add
shl
scas
mov
add
cmp
add
add
or
pusha
add
in
inc
mov
xor
std
adc
test
or
lock
pop
in
push
out
or
push
fdivs
jge
fucomip
fyl2x
pop
aam
jp
mov
sbb
push
xchg
fmull
xor
sub
add
add
mov
sti
mov
ljmp
add
add
lods
daa
sbb
add
add
add
pop
mov
movsl
repz
test
pop
dec
inc
mov
mov
in
lds
add
jp
inc
adc
imul
add
add
std
jbe
add
pusha
add
add
add
add
out
insl
cmp
cmc
xchg
add
add
les
sub
add
add
jmp
mov
pop
fiadds
mov
cli
cli
fisttps
push
hlt
jae
jle
mull
and
pop
xchg
mov
ja
and
add
add
pusha
mov
push
cwtl
clc
push
sub
out
pop
scas
sarl
hlt
mov
adc
cmp
adc
outsl
push
shl
mov
es
stos
shl
cltd
aad
stos
pusha
add
add
mov
or
add
add
push
lds
in
ja
sub
ja
cmp
rorb
js
aaa
sti
cmp
mov
add
add
inc
ja
movsl
push
sbb
add
add
add
inc
aas
jl
bound
sarl
pop
add
add
add
xorb
add
add
xchg
jns
test
sub
movsl
pop
or
add
add
outsb
fists
inc
adc
add
add
pop
inc
pop
mov
daa
jno
cmp
incl
inc
mov
lods
jbe
xchg
cmpsb
and
add
add
add
add
cmp
adc
sub
in
sub
jecxz
testl
add
inc
pop
loop
lock
add
add
xor
outsb
incl
lret
repz
shrb
and
adc
mov
shr
nop
pop
add
cmp
add
add
popa
jne
or
jnp
fisubrs
cltd
call
add
add
add
rcrb
jns
sub
add
add
add
add
add
dec
sbb
and
aam
inc
das
nop
mov
cmc
mov
loopne
insl
adc
xorb
push
test
mov
xchg
fisttpll
pop
test
add
mov
or
mov
mov
jne
sbb
enter
inc
iret
xchg
outsl
pushf
popf
dec
imull
rclb
faddp
scas
in
mov
pop
mov
jmp
ljmp
in
ljmp
jge
mov
xchg
nop
ljmp
sub
insb
mov
orb
add
repnz
cmp
xor
mov
mov
clc
inc
push
mov
jl
rorl
add
add
and
pop
lret
jecxz
xchg
clc
sbb
add
add
pop
pop
jo
cmpsb
pop
shl
and
adc
push
cltd
repz
les
mov
jle
lret
aas
jecxz
out
sub
add
add
add
add
pop
sbb
sahf
outsl
mov
icebp
cmpsb
out
jecxz
mov
sub
push
test
ret
daa
lcall
enter
dec
out
fcomi
mov
xchg
dec
les
scas
pop
xchg
xor
notb
loope
lock
mov
mov
add
add
xor
pop
repnz
add
add
pop
cs
dec
mov
mov
pop
pop
sub
add
scas
xor
inc
add
add
xor
lea
push
or
std
in
mov
sub
add
cltd
addr16
add
int
mov
scas
and
add
pop
mov
inc
mov
aas
daa
dec
adc
xor
adc
push
or
nopl
add
add
add
pop
mov
and
mov
ret
mov
pop
jno
mov
cmp
pop
je
or
add
add
add
movsb
and
add
add
nop
gs
dec
mov
sti
or
add
add
cmp
mov
cwtl
sub
pop
and
mov
add
add
cli
mov
ja
out
nop
arpl
jecxz
sbb
daa
or
add
add
add
add
iret
lods
mov
cli
shll
mov
int
cmp
daa
adc
and
add
add
add
cmp
jp
mulb
aam
pop
sub
add
add
add
add
jg
xchg
dec
fnstenv
es
sahf
cmpsl
cli
or
fstpl
jne
adc
inc
xorl
xchg
xor
mov
or
imul
sti
ljmp
xchg
sbbb
mov
or
jecxz
push
arpl
mov
lret
or
and
adc
mov
mov
add
psraw
out
addr16
ja
imul
jb
mov
add
mov
lods
je
mov
mov
xchg
icebp
inc
fiadds
jecxz
jb
adc
mov
cwtl
cli
push
insb
mov
sahf
sbb
inc
push
cmp
and
xor
dec
add
add
aam
mov
sbb
mov
pop
in
xchg
imul
adc
je
test
movsb
ret
cli
adc
incl
jmp
xchg
xlat
mov
add
add
pop
pop
sub
add
add
out
ss
add
add
std
mov
rorb
inc
ss
pop
sub
add
add
xlat
or
gs
mov
imul
xor
inc
pop
sahf
mov
xor
imul
or
addr16
loopne
sub
add
add
iret
bswap
adc
cmc
stc
repz
cmc
pop
clc
test
cmp
mov
mov
xlat
and
add
add
adc
ss
adc
cmp
int3
jnp
and
add
add
mov
nop
mov
add
sub
add
add
fsubs
or
pusha
mov
outsl
pusha
add
add
pop
mov
jno
or
add
add
mov
mov
icebp
dec
xor
pop
sbb
adc
push
add
add
test
add
jnp
xor
add
add
mov
cltd
sbb
dec
add
add
add
jb
mov
rcl
das
jae
movsl
dec
add
add
sub
add
add
stos
ds
add
in
mov
mov
add
out
sub
roll
push
mov
scas
jl
push
and
add
add
jo
sbb
nop
les
jns
shr
out
mov
add
add
adc
xor
push
icebp
frstor
sub
add
dec
out
jne
mov
mov
in
xchg
or
jno
es
lods
je
cmpsb
sbb
add
add
add
add
sub
mov
or
jnp
or
add
add
je
mov
or
mov
cmpsl
mov
imul
test
lcall
add
add
data16
xchg
mov
jle
cmpsl
nop
sbb
out
std
adc
xchg
iret
shr
push
sub
add
add
out
in
add
mov
mov
pop
and
pop
xor
mov
mov
clc
jns
add
add
mov
add
add
mov
sar
or
scas
nop
mov
out
in
and
stos
sbb
test
es
adc
shl
mov
insb
mov
and
add
add
add
cmp
add
nop
dec
mov
pop
in
stc
out
jecxz
test
add
add
fdivrs
or
mov
daa
rdpmc
shrb
mov
daa
jecxz
rcrb
ss
cmc
dec
add
add
fisubrs
js
test
scas
cli
scas
jmp
mov
inc
add
add
cmp
pop
es
mov
add
ret
mov
bound
adc
mov
add
pop
inc
jecxz
xor
hlt
inc
add
add
add
push
ss
loop
or
add
fnsave
pop
inc
mov
sbb
jge
mov
xor
add
adc
ja
mov
nop
lret
imul
ljmp
shll
lds
push
lods
imul
mov
dec
push
and
stc
mov
rclb
xchg
push
sbb
mov
daa
xor
sub
jns
jmp
add
add
mov
xchg
mov
movb
or
stc
adcl
mov
mov
add
add
xchg
jne
jl
gs
in
cmpsl
cmc
andl
and
adc
mov
pop
movsb
iret
sbb
mov
add
sarl
or
sbb
sbb
push
push
sahf
add
add
sarb
ss
add
mov
loop
sub
int3
scas
stc
adc
or
es
sub
addb
divb
cmp
jg
jmp
or
add
add
and
mov
scas
jge
jns
mov
movswl
mov
and
add
add
mov
xchg
sub
xchg
sbb
ss
lock
mov
mov
enter
out
ret
cmp
add
add
pop
pop
outsb
push
enter
rorb
in
outsl
shr
dec
inc
andl
add
pop
int3
mov
jbe
shlb
or
test
xor
push
mov
add
sub
mov
scas
mov
xor
and
repz
add
add
xchg
movsb
bound
call
js
mov
gs
push
push
dec
sub
movsb
into
test
loopne
and
add
add
pop
or
add
mulb
mulb
lret
test
lcall
add
add
sahf
mov
lcall
ja
sub
add
add
dec
add
add
rcrb
repnz
bound
dec
pop
or
sbbb
outsb
cmp
add
das
or
sbb
loop
call
add
inc
sbb
loopne
push
jmp
ss
xlat
repnz
lods
jecxz
outsl
jp
aaa
bound
dec
mov
add
add
fbstp
movsl
test
dec
add
add
popl
inc
mov
lret
shrl
inc
jb
add
add
ret
insb
add
add
mov
cmp
sub
add
add
sbb
sub
pop
lret
xor
add
fs
sbb
mov
mov
mov
cmpsl
jno
mov
xor
sbbb
inc
aad
mov
xchg
cmpsb
xchg
ss
mov
or
in
mov
int3
hlt
rorl
jb
push
in
inc
cwtl
aam
jp
out
fwait
loop
lock
loop
xchg
pop
and
add
add
mov
mov
shld
xchg
jecxz
inc
inc
das
add
aam
sbb
or
add
add
and
dec
mov
pushf
cwtl
sahf
popa
pop
flds
xor
dec
cmp
jb
xchg
jmp
add
or
test
outsb
xchg
jl
test
lret
in
xlat
icebp
std
push
jne
jmp
add
add
xor
sub
loop
popf
mov
iret
mov
bound
pop
outsb
sub
movl
fdivs
lret
loope
jmp
icebp
mov
nop
push
cmc
xchg
lock
add
add
push
cli
jl
sub
or
add
add
cmpb
and
add
add
add
call
sbb
dec
mov
mov
sbb
sbb
xchg
or
in
inc
push
cwtl
push
incb
pop
push
inc
ret
int3
loopne
mov
add
mov
data16
push
mov
arpl
roll
add
fmuls
loope
mov
test
inc
adc
add
add
sahf
int
sti
jge
jmp
outsl
mov
daa
jne
loop
jp
insl
pop
push
cmp
xchg
cli
jb
repnz
add
add
xchg
cltd
dec
sbb
add
add
xchg
sbb
mov
in
mov
dec
movsl
dec
movsb
pop
inc
add
add
sbb
popa
push
je
sbb
cli
dec
and
jo
imul
sar
mov
pop
test
movl
mov
idivl
add
jl
sbb
lahf
and
add
add
icebp
or
sbb
cwtl
shrb
add
add
add
jno
mov
scas
out
dec
inc
adc
mov
bound
mov
cs
ljmp
mov
in
xor
sub
add
add
out
scas
mov
cmp
xor
sbb
mov
loope
inc
mov
int3
mov
sub
push
stos
pop
jo
inc
adc
pop
movsl
imul
add
and
add
add
icebp
jle
call
test
mov
add
mov
mov
jl
out
rolb
add
jmp
or
loop
jl
add
fdivl
shl
mov
aam
push
test
xor
shll
cmp
add
add
mov
lcall
dec
add
add
mov
add
add
mov
pop
inc
sti
and
test
shrl
mov
sub
lss
add
add
movsb
add
add
add
jb
in
mov
xchg
cmpl
es
push
add
sub
add
add
pop
es
and
add
add
rolb
fstpl
adc
add
add
mov
daa
lock
pop
movsl
add
add
add
add
add
add
add
push
cmp
mov
adc
mov
jbe
mov
shrl
aam
mov
mov
pop
ja
aas
sti
imul
fimuls
mov
inc
movsb
mov
xor
lods
stc
jl
or
test
sub
pop
push
in
js,pn
pusha
mov
mov
inc
mov
loopne
ja
jl
jns
sbb
dec
addr16
push
popa
push
push
int3
ret
pop
or
add
add
inc
mov
push
sbb
inc
mov
mov
scas
xchg
cli
sahf
gs
cmp
push
pop
faddl
decl
and
jle
or
jl
or
mov
mov
mov
sbb
add
in
out
movsl
bnd
mov
push
add
add
add
out
mov
sbb
in
or
add
add
or
add
mov
add
add
add
sbb
inc
cmp
ds
mov
and
add
add
add
add
mov
mov
mov
lret
add
add
pop
enter
add
sbb
pop
ret
xor
add
add
jbe
popa
sub
add
add
aad
sub
add
add
cmp
add
add
add
fmuls
mov
and
cmp
and
mov
jns
orl
mov
lods
fnstcw
inc
add
add
adc
add
adc
aas
push
cmp
or
mov
aas
jns
xchg
lock
jno
xchg
add
pop
out
mov
testl
add
add
push
and
dec
je
pop
or
pop
mov
jg
lahf
pop
int3
or
je
add
add
aas
pop
dec
xchg
pop
fsubrs
mov
and
adc
dec
mov
mov
ss
adc
sbb
adc
and
add
add
ficoms
sahf
lahf
cmpsl
aam
xchg
lods
mov
int
jo
lret
or
mov
add
add
jmp
lods
in
push
ss
add
add
movsb
js
data16
enter
mov
and
imul
popa
xor
xchg
add
sub
add
add
jae
add
add
mov
cwtl
jg
xchg
dec
mov
sub
jne
add
add
sub
add
add
or
add
add
add
sarl
daa
pop
sbb
rorb
cmp
mov
adc
lods
sahf
ds
adc
sub
aas
mov
mov
mov
test
iret
dec
cmpl
push
je
subl
and
add
add
mov
out
shr
flds
iret
sub
add
lods
leave
add
adc
xor
lcall
rcrb
cld
lea
push
and
leave
dec
cli
jg
and
add
add
add
add
add
add
mov
add
pop
lahf
xchg
cmp
sub
jnp
insb
mov
dec
mov
aam
dec
bound
inc
arpl
aas
out
test
ret
inc
outsl
inc
xchg
push
dec
mov
push
pop
mov
daa
movsb
ret
stos
lods
out
lcall
add
add
cmpb
jecxz
int3
xor
lods
movb
les
pusha
push
mov
sub
call
cmp
jne
lea
push
push
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
lock
mov
je
mov
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
cld
call
test
jne
push
call
jmp
ret
push
fnsave
mov
mov
aaa
push
mov
orl
add
clc
sub
mov
cs
or
add
add
pushf
lock
stos
shl
mov
add
add
mov
mov
aaa
sbb
insb
mov
mov
lahf
jge
sahf
pushf
cmc
cmp
mov
testl
fiadds
and
add
sub
add
add
jo
gs
inc
mov
dec
adc
popf
in
sub
mov
add
rcll
loop
int3
mov
jecxz
icebp
gs
or
fwait
mov
pop
or
add
add
or
xor
dec
cwtl
jle
push
ucomiss
data16
add
add
fiadds
pop
pop
pop
dec
mov
into
ret
add
mov
lret
mov
cmp
ss
xor
imul
inc
jae
or
inc
mov
and
add
add
xchg
insl
or
add
add
mov
movsb
ja
mov
imull
enter
stc
push
xchg
adc
pop
jbe
add
sbb
loope
ja
out
sahf
push
fidivrs
jno
loopne
sbb
add
add
push
insb
add
add
xchg
cld
jle
push
inc
mov
scas
xor
mov
pop
add
bound
jl
pop
aaa
dec
pop
jne
mov
jge
xor
mov
loope
sbb
flds
mov
insb
add
add
testb
popf
test
push
dec
mov
fmuls
call
add
add
or
add
add
add
add
xlat
push
push
add
add
add
xchg
inc
and
mov
xchg
leave
mov
imulb
mov
and
add
jl
je
add
add
aaa
sahf
popa
or
fwait
stos
pop
mov
mov
sub
lcall
fidivrl
mov
add
cmp
loopne
push
and
push
sub
stos
mov
clc
xor
jbe
add
andb
ret
add
add
and
out
rcrb
xor
sub
sub
jg
lahf
and
add
add
add
mov
aam
lods
mov
in
adc
jbe
sbb
cmp
scas
cli
jo
rolb
add
clc
in
call
push
dec
push
dec
mov
div
nop
cmc
rcrl
popf
enter
or
pop
mov
mov
aad
mov
adc
mov
jl
fdivrs
or
add
js
adcb
mov
mov
ja
jl
adc
lahf
loope
les
add
push
mov
mov
scas
pop
sahf
jle
mov
lea
mov
sbb
scas
int
inc
in
lods
jg
adc
jecxz,pt
push
lret
lods
cmp
mov
lret
mov
cmp
push
dec
mov
push
cmp
jp
mov
mov
sahf
mov
push
mov
ss
add
add
pop
and
adc
dec
sub
add
cmp
mov
mov
mov
cmp
lds
sub
xor
add
bound
sbb
sbb
push
je
gs
stos
add
popf
shll
test
insb
add
add
dec
sub
mov
dec
mov
add
add
cli
mov
dec
fisttps
pushf
cmp
cmpsl
paddq
mov
loope
scas
repz
in
sub
or
add
add
loopne
mov
ss
popa
bound
push
lcall
aad
add
dec
insl
mov
jns
lods
out
ja
imul
add
add
and
add
add
lret
jo
xchg
imul
in
mov
add
mov
add
outsb
xchg
sub
add
add
repz
jnp
jmp
mov
dec
mov
aad
add
repnz
and
xchg
add
add
add
sti
dec
mov
mov
in
push
sbb
add
add
add
xchg
jg
popa
pop
dec
add
add
adc
pop
mov
dec
mov
sbb
nop
ret
add
imul
add
cwtl
jnp
mov
mov
push
add
add
add
sub
inc
mov
out
mov
add
mov
les
lcall
pop
int3
sti
xor
xor
jmp
test
jnp
int3
in
xchg
in
out
int3
stc
movsb
sti
fwait
cltd
hlt
mov
or
mov
test
push
les
add
add
mov
pop
xchg
adc
and
add
add
in
adc
fwait
add
jno
cmp
xor
or
nop
jp
mov
pushf
aas
pushf
adc
mov
mov
or
add
add
push
shl
fidivl
add
add
add
add
xor
outsb
xchg
add
int3
shlb
testl
mov
cmp
xor
add
add
inc
sbb
push
lahf
cwtl
push
xchg
movsb
sahf
int3
std
std
lahf
add
repz
test
inc
mov
pop
xchg
aam
insl
shr
jle
fsubrp
enter
jbe
jbe
fidivrs
je
jo
mov
clc
shll
or
add
add
out
or
in
dec
add
add
adc
push
in
and
add
add
add
push
inc
inc
dec
ret
dec
mov
mov
mov
dec
jmp
jb
cmp
add
lret
fcoml
push
stos
mov
and
xchg
xchg
int
insl
cwtl
jle
ds
sarb
enter
add
adc
fistps
sbb
sbb
add
add
pop
pop
pusha
mov
mov
stos
jnp
jge
into
mov
lock
add
fwait
add
add
pop
enter
out
pop
push
repnz
add
add
ret
stos
sqrtps
je
adc
std
push
test
xchg
lock
mov
es
add
add
pushf
or
push
out
cmp
mov
adc
aas
fcomps
sbbl
in
into
out
lds
push
and
or
mov
xchg
xlat
flds
mov
sub
add
add
mov
outsl
insl
jle
enter
mov
paddsw
push
mov
test
add
add
add
fmull
add
dec
mov
add
push
dec
add
cltd
mov
adc
mov
add
mov
mov
add
mov
push
or
mov
sbb
sbbb
les
add
add
jns
aam
gs
subl
fs
repnz
or
in
jg
xor
fcomps
jbe
fsubr
daa
jno
sahf
lahf
hlt
cwtl
and
add
add
aaa
xchg
lcall
mov
mov
pop
bound
dec
xor
mov
test
mov
aaa
aad
push
pop
or
add
add
add
test
add
jge
mov
add
sbb
add
stos
cmpsl
cmc
loope
imul
in
and
negb
fstl
fsubl
add
add
xor
add
cli
lods
adc
add
add
add
add
sti
sbb
orl
incl
cmp
add
add
xor
add
add
add
add
mov
jle
cmpsl
stos
sbb
fstps
sbb
cmp
scas
test
jnp
push
xchg
test
push
loope
gs
jg
add
xchg
xchg
xorl
mov
into
add
jae
sbb
mov
cmpsl
xor
pop
dec
xlat
or
mov
pop
pusha
mov
xchg
test
mov
add
add
pandn
add
or
dec
mov
gs
test
test
adc
or
push
ja
ret
mov
subb
add
mov
cmc
jno
pop
in
mov
add
add
dec
pop
lods
mov
pop
pop
repnz
jmp
xchg
mov
add
add
js
inc
add
add
aam
inc
sbb
inc
loopne
mov
mov
test
call
mov
ljmp
or
jae
call
add
jp
lds
add
xchg
pop
mov
roll
xchg
ret
mov
jae
cmp
ret
cltd
jp
negb
std
outsl
mov
cmpsb
cmpsb
shll
cld
mov
push
ljmp
push
pop
mov
inc
insl
push
fldenv
mov
push
and
add
mov
shl
dec
jge
xlat
xchg
dec
cltd
inc
mov
mov
add
and
arpl
icebp
iret
jo
fimuls
dec
or
mov
pop
popf
stos
cmp
shll
jl
jp
inc
cmpsb
or
push
push
push
and
and
pop
addr16
das
imul
xchg
call
jmp
xor
xchg
sub
add
add
ret
sar
sbb
insb
add
add
mov
and
or
add
add
push
add
insl
stc
pop
xchg
cmp
movsb
out
pop
ds
add
add
icebp
push
shll
add
add
add
lock
or
xchg
add
aam
movsb
les
rclb
fimull
mov
add
add
add
add
xchg
cmc
mov
mov
fisubl
add
test
hlt
mov
xchg
inc
add
add
xchg
push
stos
ss
sub
loope
fistpll
dec
sbb
push
aam
mov
lret
push
pop
jns
mov
add
add
dec
add
add
cmpsb
adc
leave
scas
xor
aam
adc
outsl
movsl
adc
loopne
mov
add
xor
jno
sbb
pop
popl
mov
sahf
xor
jecxz
imul
add
add
lret
add
add
pop
orb
mov
hlt
sub
lods
mov
mov
orb
push
fldenv
add
add
push
and
add
pop
sub
jno
mov
add
add
jmp
add
jg
mov
adc
scas
cmp
sti
push
sub
pusha
mov
ds
inc
xlat
out
leave
jae
movsl
js
in
cmp
cmc
nop
jne
add
and
cmp
mov
loop
xor
xor
mov
lahf
sbb
add
add
idiv
add
xchg
adc
repnz
xchg
mov
jg
test
add
iret
dec
cmpb
les
daa
jl
mov
add
add
add
or
scas
lahf
and
sub
fsubrs
add
add
scas
fiadds
out
inc
xchg
sti
scas
mov
mov
popf
xor
fcom
ror
xor
sbb
outsb
mov
push
fists
or
adc
test
jecxz
dec
pop
jmp
pop
lret
nop
imul
daa
and
add
add
sbb
pop
xchg
jp
fisttpl
mov
add
add
addb
cmp
ds
cld
addr16
pop
into
or
add
jno
xchg
outsb
mov
movsl
add
add
add
icebp
xor
add
fwait
cmp
out
mov
push
dec
mov
mov
gs
test
rcrb
cs
mov
push
pop
lods
push
mov
add
add
dec
add
add
dec
fcoml
push
xchg
adc
jg
jp
enter
jl
mov
xchg
mov
pop
adc
mov
lds
in
lcall
jecxz
outsb
nop
popf
aam
mov
popl
dec
mov
cmp
xchg
xchg
xchg
xchg
jl
sti
mov
add
add
xchg
stos
lock
add
add
cmp
add
add
lods
lret
pop
fildl
add
jp
push
popa
add
add
add
arpl
add
in
orl
add
add
add
sub
add
add
inc
add
add
jnp
out
or
add
add
out
add
add
in
add
add
rol
pop
push
fwait
push
inc
mov
sub
add
jns
leave
pop
and
notl
mov
add
add
add
add
popf
pop
pop
enter
scas
arpl
das
push
popa
add
fdivs
push
push
xor
mov
loop
es
mov
in
aaa
insl
repnz
add
and
add
add
add
or
mov
cld
mov
add
shrb
and
add
add
mov
cmpsl
cmpsb
cltd
and
add
lods
inc
mov
out
mov
and
add
add
rcl
faddl
push
mov
and
mov
outsl
cwtl
xor
add
int3
dec
mov
add
mov
add
sub
dec
cmpsb
push
sub
jae
or
add
add
mov
add
mov
fsubl
dec
jbe
das
enter
xor
ret
jp
inc
addr16
enter
jae
jle
sbb
xor
outsl
jbe
ss
push
mov
or
loop
loope
int
xchg
insl
xchg
cmp
pushf
add
mov
daa
push
add
pop
imul
mov
jns
cltd
popf
add
add
add
shl
push
jle
andb
add
add
xchg
inc
dec
cld
or
add
add
rol
sbb
adc
add
push
sub
mov
cmp
pop
push
pusha
add
add
xchg
push
repz
add
add
mov
xor
pop
shll
scas
mov
mov
add
add
add
hlt
mov
sbb
add
cld
aad
push
clc
repnz
nop
nop
jae
loop
sbb
add
push
clc
repnz
nop
nop
jae
pop
mul
add
lea
add
add
push
sarl
push
mov
leave
nop
jmp
testl
add
jns
pop
arpl
clc
repnz
nop
nop
jae
daa
add
add
cmp
cli
pop
or
clc
repnz
nop
nop
jae
inc
add
add
add
popa
xor
nop
push
mov
leave
nop
jmp
jbe
push
in
add
add
in
add
add
adcb
jne
clc
repnz
nop
nop
jae
ss
add
xlat
sub
loope
enter
add
mov
xchg
ret
pop
mov
sbb
add
in
mulps
repnz
nop
nop
jae
add
inc
add
add
add
div
nop
push
mov
leave
nop
jmp
add
mov
mov
mov
clc
repnz
nop
nop
jae
add
pop
movl
int3
pop
mov
nop
push
mov
leave
nop
jmp
mov
pop
add
repnz
nop
nop
jae
mov
add
sub
stos
push
mov
xchg
ret
add
add
inc
or
add
sub
add
xor
nop
push
mov
leave
nop
jmp
add
add
add
mov
add
add
shl
sbb
mov
adc
push
mov
leave
nop
jmp
mov
add
jbe
add
add
add
ror
pop
clc
repnz
nop
nop
jae
jle
pop
add
add
inc
add
out
mov
add
nop
push
mov
leave
nop
jmp
cmpsl
add
cli
add
push
push
mov
xchg
ret
in
add
cli
testb
add
add
pushf
or
inc
add
add
add
inc
jbe
add
pushf
add
sbb
aas
add
imul
add
add
jle
in
add
mov
mov
xchg
ret
add
add
jp
add
add
clc
repnz
nop
nop
jae
sarl
sub
add
std
add
repnz
pushf
inc
add
add
pop
roll
add
add
add
jnp
add
push
mov
xchg
ret
inc
add
add
sub
fiaddl
add
add
fidivrl
add
push
test
push
add
add
add
nop
push
mov
leave
nop
jmp
add
lea
add
out
fwait
push
mov
xchg
ret
xor
xor
add
testl
mov
cld
nop
nop
jae
roll
xlat
xor
in
sarl
add
add
cmp
iret
or
inc
add
add
add
add
insb
add
orb
test
mov
xchg
ret
add
add
pushf
sub
cmpsl
loop
add
push
pop
cmpw
nop
push
mov
leave
nop
jmp
add
add
testb
or
movsb
clc
repnz
nop
nop
jae
add
add
cmp
add
insl
fwait
clc
repnz
nop
nop
jae
in
pop
sbb
push
shl
testb
inc
add
add
call
push
mov
leave
nop
jmp
call
jo
std
xor
cmp
sub
aaa
push
add
clc
repnz
nop
nop
jae
push
repnz
rclb
in
leave
nop
jmp
insb
pushf
add
add
out
mov
add
add
fidivrs
add
call
add
push
pusha
mov
add
pop
add
add
daa
add
and
add
add
or
push
add
cmpsb
ret
clc
repnz
nop
nop
jae
add
movl
add
movsl
ret
push
mov
xchg
ret
add
in
mov
xor
add
addb
add
cmp
sbb
push
mov
xchg
ret
inc
jns
add
push
add
mov
cmp
subl
mov
leave
nop
jmp
add
jbe
mov
fistpl
clc
repnz
nop
nop
jae
call
pop
add
pop
sbb
add
clc
repnz
nop
nop
jae
pushf
add
add
add
push
mov
xchg
ret
add
jle
add
add
in
add
push
mov
add
inc
outsl
roll
add
out
add
add
outsl
add
add
mov
pop
clc
repnz
nop
nop
jae
add
cli
roll
push
mov
xchg
xor
and
mov
xchg
ret
add
add
add
jns
pushf
loope
rcrl
cld
nop
nop
jae
popa
insb
and
mov
sub
mov
xchg
ret
call
negl
jle
jle
add
xor
sbb
clc
repnz
nop
nop
jae
pop
add
testb
in
push
mov
add
push
clc
repnz
nop
nop
jae
in
add
add
add
or
imul
cld
nop
nop
jae
push
add
cmp
add
rorl
add
clc
repnz
nop
nop
jae
out
roll
pop
pop
daa
add
test
add
and
add
insb
inc
insb
xchg
add
cmp
mov
mov
xchg
ret
pop
add
cmp
cmp
sub
or
fiaddl
cmp
aad
clc
repnz
nop
nop
jae
mov
inc
mov
add
add
notl
fnstcw
nop
push
mov
leave
nop
jmp
adc
in
testb
or
add
repnz
nop
nop
jae
add
add
add
sub
iret
add
nop
push
mov
leave
nop
jmp
add
add
add
add
add
lret
ja
clc
repnz
nop
nop
jae
repnz
add
adc
add
clc
repnz
nop
nop
jae
add
add
cmp
repnz
nop
nop
jae
add
sub
cmp
add
mov
xchg
ret
mov
jns
add
push
adc
push
mov
leave
nop
jmp
jp
jo
pop
xor
fidivl
or
repnz
nop
nop
jae
out
add
pop
add
xor
add
repnz
nop
nop
jae
sub
fs
roll
idiv
sbb
call
add
sbb
add
mov
jle
loope
push
clc
repnz
nop
nop
jae
pop
add
add
jbe
add
add
dec
call
clc
repnz
nop
nop
jae
add
lea
in
fs
and
nop
jae
mov
add
or
add
add
add
pop
pop
clc
repnz
nop
nop
jae
push
add
in
jbe
add
inc
lea
sti
nop
push
mov
leave
nop
jmp
in
inc
or
add
add
push
mov
xchg
ret
add
add
lea
add
add
add
sbb
mov
stc
add
clc
repnz
nop
nop
jae
imulb
loop
add
pop
and
add
arpl
repnz
nop
nop
jae
or
pushf
add
jo
xlat
insb
add
ret
nop
push
mov
leave
nop
jmp
inc
sbb
add
call
push
clc
repnz
nop
nop
jae
add
add
add
add
push
mov
repnz
nop
nop
jae
out
add
add
mov
in
jle
add
mov
nop
push
mov
leave
nop
jmp
xlat
add
add
push
incl
dec
cmp
repnz
nop
nop
jae
out
add
add
pushf
loop
pushf
add
leave
rep
clc
repnz
nop
nop
jae
jp
add
imul
orl
nop
nop
jae
jns
cmpsl
add
add
movl
sbb
clc
repnz
nop
nop
jae
add
add
call
add
std
test
push
mov
xchg
ret
add
out
push
jbe
or
jae
rclb
pop
inc
add
loop
jle
add
mov
and
add
push
nop
push
mov
leave
nop
jmp
in
add
loope
sbb
adc
add
clc
repnz
nop
nop
jae
add
add
add
testl
cld
nop
nop
jae
mov
add
add
out
add
add
jne
nop
push
mov
leave
nop
jmp
std
add
push
andb
clc
repnz
nop
nop
jae
add
add
sub
add
sbb
add
repnz
nop
nop
jae
daa
add
or
sub
push
sbb
cld
nop
nop
jae
sbb
inc
add
fiaddl
clc
repnz
nop
nop
jae
sbb
mov
inc
add
mov
add
add
mov
push
fld1
clc
repnz
nop
nop
jae
add
add
and
imul
mov
clc
repnz
nop
nop
jae
jle
add
xor
sbb
push
adc
add
repnz
nop
nop
jae
mov
std
xor
add
add
mov
push
mov
xchg
ret
cli
cmp
cmp
in
cli
cmp
in
add
add
xorl
push
mov
leave
nop
jmp
and
sarl
jne
nop
push
mov
leave
nop
jmp
std
or
lea
add
pop
mov
push
mov
xchg
ret
jp
add
negb
mov
add
add
repnz
nop
nop
jae
add
push
jbe
add
in
clc
repnz
nop
nop
jae
and
insb
pop
add
add
repnz
xor
cld
nop
nop
jae
add
add
fimull
jns
rolb
push
mov
leave
nop
jmp
sbb
push
add
mov
js
inc
add
popa
add
cmp
xlat
sbb
pop
inc
add
adc
bound
xchg
ret
sbb
mov
add
lods
push
or
add
add
mov
clc
repnz
nop
nop
jae
xor
pop
mov
loop
add
in
leave
nop
jmp
testl
popl
add
sbb
and
push
mov
leave
nop
jmp
cmpsl
and
add
xlat
add
add
icebp
add
nop
push
mov
leave
nop
jmp
add
add
sub
xchg
add
push
mov
xchg
ret
add
popl
popa
add
and
add
add
xor
in
fmuls
add
cmp
outsl
faddl
add
addb
mov
fld1
clc
repnz
nop
nop
jae
xor
add
add
add
mov
xchg
fwait
nop
push
mov
leave
nop
jmp
daa
add
in
insb
test
add
cld
nop
nop
jae
divl
pop
add
jl
mov
clc
repnz
nop
nop
jae
xor
loop
add
add
push
push
mov
xchg
ret
add
jbe
cli
add
add
jae
clc
repnz
nop
nop
jae
adc
movl
add
sbb
xchg
push
mov
xchg
ret
add
test
add
add
mov
sub
and
add
add
push
clc
repnz
nop
nop
jae
fiaddl
add
add
loop
pop
jns
mov
add
push
jns
add
clc
repnz
nop
nop
jae
sub
add
out
loopne
test
nop
push
mov
leave
nop
jmp
add
add
sbb
testl
stos
mov
nop
push
mov
leave
nop
jmp
add
sub
testl
test
mov
xchg
ret
add
add
xlat
pop
std
add
mull
insb
sbb
dec
nop
push
mov
leave
nop
jmp
xlat
add
jp
add
fcmovb
add
lea
repnz
nop
nop
jae
jbe
add
add
in
xor
push
add
mov
repnz
nop
nop
jae
imul
xor
add
loopne
inc
fwait
push
mov
xchg
ret
and
imul
jp
adc
add
aas
stos
clc
repnz
nop
nop
jae
mov
add
insb
add
repnz
mov
xchg
ret
add
add
add
cmpsl
sub
inc
jb
clc
repnz
nop
nop
jae
roll
inc
add
push
xlat
pop
clc
repnz
nop
nop
jae
cmp
add
push
xor
clc
repnz
nop
nop
jae
add
lea
add
mov
add
clc
repnz
nop
nop
jae
loop
add
add
test
cwtl
add
add
repnz
nop
nop
jae
sbb
loop
out
bound
jl
add
add
add
roll
add
push
push
mov
xchg
ret
popa
fimull
add
add
add
jbe
xchg
xor
nop
push
mov
leave
nop
jmp
push
std
add
cmp
add
das
je
clc
repnz
nop
nop
jae
add
add
inc
sub
clc
xchg
rep
clc
repnz
nop
nop
jae
add
add
fiaddl
repnz
add
push
mov
clc
repnz
nop
nop
jae
in
and
and
fs
shl
pop
call
nop
jmp
add
add
in
add
and
rclb
jbe
add
xor
add
add
add
fwait
clc
repnz
nop
nop
jae
add
inc
daa
and
loop
loop
xlat
mov
mov
xchg
ret
movl
jp
loop
jbe
cmp
cwtl
mov
nop
push
mov
leave
nop
jmp
cli
add
add
imul
and
mov
push
mov
leave
nop
jmp
movl
add
push
mov
xchg
ret
add
pop
adc
add
push
clc
repnz
nop
nop
jae
add
out
add
imulb
add
fiaddl
fcom
icebp
push
push
mov
xchg
ret
sub
add
add
fiaddl
repnz
push
mov
xchg
ret
xor
add
add
add
add
cmp
mov
nop
push
mov
leave
nop
jmp
ficompl
push
pop
xorl
clc
repnz
nop
nop
jae
push
fidivl
cmpsl
mov
clc
repnz
nop
nop
jae
jle
add
jp
add
fidivl
mov
push
push
mov
xchg
ret
cli
loop
add
push
add
add
nop
nop
jae
mov
shr
add
add
add
lret
push
mov
xchg
ret
jns
loop
add
in
inc
add
add
jmp
dec
cmp
push
mov
leave
nop
jmp
add
pushf
add
add
pushf
lea
repnz
nop
nop
jae
add
sbb
add
add
nop
nop
jae
add
add
add
jo
mov
add
iret
add
clc
repnz
nop
nop
jae
add
add
pop
push
in
pushf
cli
add
pop
clc
repnz
nop
nop
jae
add
sbb
add
add
sbb
add
clc
repnz
nop
nop
jae
add
inc
add
add
test
add
clc
repnz
nop
nop
jae
mov
add
mov
test
add
clc
repnz
nop
nop
jae
add
add
pop
mov
hlt
adc
test
stc
clc
repnz
nop
nop
jae
add
popa
repnz
add
mov
push
mov
xchg
ret
loope
xlat
in
loope
add
pop
mov
roll
repnz
nop
nop
jae
add
push
test
sub
pop
pop
add
cld
nop
nop
jae
sub
pushf
add
add
add
add
cld
jbe
mov
nop
push
mov
leave
nop
jmp
test
sbb
and
clc
repnz
nop
nop
jae
fcmovu
add
cmp
add
add
mov
or
add
fiaddl
add
add
sub
fimull
iret
mov
clc
repnz
nop
nop
jae
jns
add
sbb
mov
test
cld
nop
nop
jae
testl
xor
fistpl
clc
repnz
nop
nop
jae
mov
sbb
add
cmp
add
clc
repnz
nop
nop
jae
add
add
loope
in
dec
mov
repnz
nop
nop
jae
add
add
fld1
clc
repnz
nop
nop
jae
test
jns
imul
repz
repnz
nop
nop
jae
popa
add
add
add
ss
testl
repnz
nop
nop
jae
add
cli
fidivrl
testl
ljmp
cld
nop
nop
jae
jle
cmp
in
add
inc
mov
gs
jo
nop
push
mov
leave
nop
jmp
push
daa
add
fidivl
cmpsl
in
pop
push
nop
push
mov
leave
nop
jmp
testl
jo
inc
inc
add
mov
push
mov
xchg
ret
add
add
add
test
clc
sub
clc
push
mov
xchg
ret
add
loop
add
mov
xor
clc
repnz
nop
nop
jae
loop
sub
testl
add
fld1
nop
push
mov
leave
nop
jmp
xlat
or
push
push
sarl
jle
jo
and
add
add
jmp
nop
nop
jae
inc
cmp
sbb
add
adcb
repnz
nop
nop
jae
cmp
sbb
insb
out
test
repz
push
mov
xchg
ret
push
cli
mov
mov
sldt
clc
repnz
nop
nop
jae
imul
imul
push
mov
leave
nop
jmp
mov
adc
pop
cmp
fadds
add
add
cltd
jne
clc
repnz
nop
nop
jae
add
in
xlat
add
add
inc
dec
nop
push
mov
leave
nop
jmp
movl
add
add
nop
nop
jae
and
cmp
jbe
push
add
add
std
fld1
push
mov
xchg
ret
std
add
add
add
add
popl
dec
push
push
mov
xchg
ret
sub
add
add
add
mov
fiaddl
add
mov
in
adc
xchg
add
stos
jnp
mov
and
add
fldl2t
das
add
add
add
in
fiaddl
sbb
mov
add
add
and
repnz
nop
nop
jae
add
add
add
add
add
in
mov
clc
repnz
nop
nop
jae
add
pop
add
add
or
mov
leave
nop
jmp
add
add
add
cwtl
xchg
mov
add
repnz
nop
nop
jae
adc
jle
cmp
add
push
test
call
nop
push
mov
leave
nop
jmp
add
std
add
cltd
push
mov
std
add
fisubrs
jecxz
add
add
add
add
enter
add
add
add
add
mov
leave
nop
jmp
add
add
add
jle
mov
push
mov
xchg
ret
fidivl
in
add
jo
in
xchg
push
xor
mov
xchg
ret
jbe
loope
add
fidivrl
fiaddl
mov
jae
mov
adc
pop
into
add
add
jbe
add
ret
leave
jmp
add
repnz
add
loope
inc
inc
add
fidivl
add
jge
clc
repnz
nop
nop
jae
add
add
out
jns
push
jne
clc
repnz
nop
nop
jae
add
add
add
push
mov
xchg
ret
add
pop
loope
pushf
in
push
daa
aas
pop
nop
push
mov
leave
nop
jmp
cmp
pop
pushf
add
jbe
std
jo
add
jne
clc
repnz
nop
nop
jae
push
lea
add
add
and
clc
repnz
nop
nop
jae
mov
adc
jl
and
repnz
nop
nop
jae
in
loope
add
add
imul
add
repnz
nop
nop
jae
shll
add
mov
push
clc
repnz
nop
nop
jae
add
add
popa
std
popa
inc
and
add
sbb
test
nop
push
mov
leave
nop
jmp
pop
roll
add
je
clc
repnz
nop
nop
jae
push
add
add
daa
mul
mov
clc
repnz
nop
nop
jae
roll
std
mov
jo
sub
jbe
add
add
and
clc
repnz
nop
nop
jae
add
inc
add
and
clc
repnz
nop
nop
jae
sub
add
out
testl
add
push
mov
xchg
ret
ss
test
add
add
adc
push
mov
leave
nop
jmp
ss
add
jle
inc
imul
addr16
nop
push
mov
leave
nop
jmp
add
loop
xor
popa
sbb
lahf
popl
clc
repnz
nop
nop
jae
add
add
add
aad
aas
clc
repnz
nop
nop
jae
imul
sub
jp
stos
add
clc
repnz
nop
nop
jae
std
add
jp
add
adc
add
jp
jbe
clc
repnz
nop
nop
jae
sbb
mov
add
ss
lods
push
mov
xchg
ret
cmpsl
cmp
add
std
out
add
push
loopne
cmp
nop
push
mov
leave
nop
jmp
add
insb
xor
pop
add
mov
nop
push
mov
leave
nop
jmp
div
and
push
sbb
in
push
mov
xchg
ret
loope
add
in
lea
in
and
add
add
mov
leave
nop
jmp
add
mov
inc
add
out
jne
push
mov
xchg
ret
add
std
fidivl
add
movzwl
push
mov
xchg
ret
insb
bnd
add
xor
push
clc
repnz
nop
nop
jae
add
loop
idivl
pop
std
std
add
lods
add
nop
nop
jae
xor
testl
push
jbe
popa
shlb
push
mov
xchg
ret
add
add
testl
test
push
mov
xchg
ret
sbb
add
add
sub
add
add
cld
nop
nop
jae
add
and
add
inc
add
add
mov
clc
repnz
nop
nop
jae
add
xlat
add
push
aaa
test
nop
push
mov
leave
nop
jmp
add
add
add
call
dec
push
clc
repnz
nop
nop
jae
add
jp
add
add
add
roll
xor
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
add
mov
push
mov
xchg
ret
add
cmpsl
jbe
add
pushf
sub
add
fstps
inc
add
add
or
add
std
add
add
clc
repnz
nop
nop
jae
sbb
add
add
nop
push
mov
leave
nop
jmp
test
jbe
cli
add
and
clc
repnz
nop
nop
jae
repnz
fiaddl
and
jmp
add
add
call
out
sbb
add
push
clc
repnz
nop
nop
jae
add
push
out
sbb
add
jp
sbb
cld
nop
nop
jae
push
add
add
add
clc
repnz
nop
nop
jae
test
insb
mov
push
mov
nop
push
mov
leave
nop
jmp
cmp
testl
or
mov
clc
repnz
nop
nop
jae
add
add
add
jle
mov
push
mov
xchg
ret
add
or
add
add
cli
ss
push
jge
call
nop
nop
jae
add
add
add
loopne
push
mov
xchg
ret
add
push
add
pushf
lea
sub
add
fld1
clc
repnz
nop
nop
jae
add
mov
daa
add
divl
repnz
fistpl
push
mov
xchg
ret
add
add
adc
add
testl
add
add
nop
jmp
add
add
add
in
fdivs
sahf
cmp
repnz
nop
nop
jae
add
add
sbb
dec
out
and
push
mov
leave
nop
jmp
xlat
add
pop
add
mov
loope
add
call
dec
add
adc
jg
mov
mov
xchg
ret
add
or
add
shrl
rclb
nop
jmp
rcrl
in
in
xlat
add
add
cmc
xchg
clc
repnz
nop
nop
jae
lea
adc
ficompl
vfrczpd
adc
inc
add
std
cmp
shll
add
add
xchg
push
clc
repnz
nop
nop
jae
add
call
jle
fimull
enter
sub
xorps
xchg
ret
add
inc
sbb
fs
shl
mov
add
push
mov
xchg
ret
in
add
add
add
in
add
jge
fwait
xchg
xchg
call
nop
jmp
pop
jns
fiaddl
add
pop
clc
repnz
nop
nop
jae
sbb
popa
repnz
pop
add
pop
jne
nop
push
mov
leave
nop
jmp
add
add
add
daa
sub
clc
repnz
nop
nop
jae
add
mov
add
add
sub
push
mov
xchg
ret
add
sbb
add
testb
push
push
mov
xchg
ret
fiaddl
in
add
push
std
jo
sbb
mov
repnz
nop
nop
jae
add
add
pop
loope
add
shll
and
push
mov
leave
nop
jmp
add
jp
sub
testl
jo
repnz
nop
nop
jae
test
xlat
push
add
shll
add
pop
outsl
inc
add
in
add
call
rep
clc
repnz
nop
nop
jae
and
add
add
add
call
nop
jmp
add
add
cmp
jmp
mov
push
inc
testb
add
enter
add
add
mov
mov
xchg
ret
mov
add
repz
push
mov
xchg
ret
add
in
jbe
roll
add
xlat
testb
push
clc
repnz
nop
nop
jae
not
add
add
or
add
and
ss
clc
repnz
nop
nop
jae
xor
add
movl
add
insb
add
add
shl
add
nop
push
mov
leave
nop
jmp
add
cli
add
add
add
and
cld
nop
nop
jae
sbb
add
fs
add
and
clc
repnz
nop
nop
jae
add
push
add
ficoml
add
add
xchg
push
mov
imul
add
add
fcompl
add
nop
push
mov
leave
nop
jmp
cmp
add
inc
pop
jo
add
cli
pop
fnstcw
clc
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
fs
loope
inc
add
mov
mov
pop
inc
add
add
add
add
add
add
clc
repnz
nop
nop
jae
call
add
add
push
clc
repnz
nop
nop
jae
add
add
add
add
add
add
testl
jae
imul
add
test
adc
mov
and
and
jo
adc
add
roll
add
push
mov
xchg
ret
add
add
push
std
pushf
jle
mov
add
lock
push
mov
leave
nop
jmp
add
add
jbe
inc
insb
sub
sub
cld
nop
nop
jae
add
fiaddl
rcll
push
cmp
outsl
mov
push
mov
xchg
ret
imul
add
nop
cmp
jmp
jbe
call
add
loop
test
add
add
mov
add
add
add
add
mov
mov
inc
sbb
stc
lods
clc
repnz
nop
nop
jae
loop
loope
add
push
sbb
inc
imul
add
inc
push
add
sbb
cmp
insb
add
dec
mov
jne
clc
repnz
nop
nop
jae
ficompl
in
add
mov
sar
cld
nop
nop
jae
add
pushf
add
add
pusha
mov
mov
clc
repnz
nop
nop
jae
add
and
push
testl
rorb
clc
repnz
nop
nop
jae
add
add
or
add
mov
pushf
das
add
clc
repnz
nop
nop
jae
xlat
add
add
in
add
call
clc
repnz
nop
nop
jae
add
ss
add
add
mov
xchg
ret
sbb
add
popa
sahf
and
jb
inc
add
loope
add
add
xchg
pop
push
mov
xchg
ret
add
add
cli
inc
mov
call
and
add
add
add
arpl
xchg
inc
add
push
add
out
loop
jbe
add
sahf
js
add
push
mov
xchg
ret
add
mov
add
repnz
adc
in
leave
nop
jmp
add
or
push
in
mov
nop
push
mov
leave
nop
jmp
add
loop
add
sub
dec
sub
inc
outsb
inc
add
movl
sub
mov
mov
add
clc
repnz
nop
nop
jae
sbb
add
add
jp
add
add
mov
mov
xchg
ret
adc
add
pop
add
add
pop
add
sar
jne
push
mov
xchg
ret
testb
add
out
shrb
cld
nop
nop
jae
popl
add
add
sbb
clc
repnz
nop
nop
jae
xor
and
insb
pop
add
loopne
je
clc
repnz
nop
nop
jae
fs
and
add
out
fidivrs
clc
repnz
nop
nop
jae
inc
pop
add
add
add
push
sbb
jmp
or
and
popa
add
push
inc
fiaddl
shl
cmp
add
add
clc
repnz
nop
nop
jae
push
add
xor
sbb
push
mov
xchg
ret
add
add
add
std
cmpsl
sbb
outsl
arpl
add
repnz
nop
nop
jae
inc
add
add
roll
std
xor
add
add
and
pop
nop
push
mov
leave
nop
jmp
pushf
add
add
jp
out
xchg
clc
repnz
nop
nop
jae
sbb
std
add
sub
add
mov
add
add
jp
pop
clc
repnz
nop
nop
jae
pushf
fisubl
loop
add
repnz
and
clc
repnz
nop
nop
jae
add
add
add
add
pop
xchg
mov
nop
push
mov
leave
nop
jmp
add
fidivl
add
imul
loop
clc
repnz
nop
nop
jae
add
add
ficoml
inc
sbb
mov
clc
repnz
nop
nop
jae
in
add
pop
in
popa
add
mov
add
lea
nop
push
mov
leave
nop
jmp
fiaddl
add
add
fiaddl
add
stos
sub
repnz
nop
nop
jae
add
add
repnz
add
cmp
daa
roll
in
leave
nop
jmp
out
inc
add
add
roll
loop
daa
xor
push
push
clc
repnz
nop
nop
jae
testl
loope
add
add
mov
nop
nop
jae
add
jbe
fidivrl
sbb
add
cli
call
clc
repnz
nop
nop
jae
add
sub
pop
add
popa
clc
repnz
nop
nop
jae
std
jbe
add
add
inc
push
pop
clc
repnz
nop
nop
jae
add
inc
std
inc
and
add
push
clc
repnz
nop
nop
jae
testb
roll
mov
add
push
mov
add
xchg
daa
sub
pop
add
add
sbb
cmpsl
and
sub
clc
repnz
nop
nop
jae
test
push
testl
clc
repnz
nop
nop
jae
pop
add
inc
and
add
add
sbb
cmp
ret
testl
add
add
add
xchg
fwait
clc
repnz
nop
nop
jae
add
add
roll
testb
movsb
clc
repnz
nop
nop
jae
lea
shrl
fiaddl
fs
inc
xchg
push
clc
repnz
nop
nop
jae
add
sub
add
inc
and
call
inc
add
push
add
pushf
add
adc
add
frstor
repnz
nop
nop
jae
jns
shll
inc
add
and
add
mov
fcoms
and
push
add
add
pushf
test
add
add
stc
xor
push
mov
xchg
ret
add
mull
popl
add
dec
pop
clc
repnz
nop
nop
jae
add
roll
pop
add
add
movl
clc
repnz
nop
nop
jae
add
add
mov
pop
cmp
mov
xchg
ret
adc
add
add
cmpsl
push
xchg
mov
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
xor
adc
add
in
data16
add
add
ss
mov
clc
repnz
nop
nop
jae
xor
add
jle
inc
add
nop
nop
jae
add
add
fiaddl
and
and
jmp
incl
add
add
inc
loop
mov
jbe
xlat
add
add
adc
add
clc
repnz
nop
nop
jae
in
xlat
add
add
add
add
add
add
fmuls
nop
nop
jae
mov
popa
add
add
cmp
cs
mov
clc
repnz
nop
nop
jae
add
sub
add
add
add
jl
fsubr
jbe
add
push
mov
xchg
ret
mov
add
add
sbb
inc
clc
repnz
nop
nop
jae
push
add
jbe
push
popl
inc
add
sub
fld1
clc
repnz
nop
nop
jae
popa
add
add
and
cmp
add
test
in
clc
repnz
nop
nop
jae
roll
push
add
push
xor
add
add
sub
clc
repnz
nop
nop
jae
add
test
mov
push
push
mov
xchg
ret
mov
add
add
mov
nop
nop
jae
jp
fs
add
cmpsl
add
nop
push
mov
leave
nop
jmp
push
pop
test
add
add
out
nop
push
mov
leave
nop
jmp
inc
add
add
inc
add
add
sbb
push
sub
nop
nop
jae
and
add
insb
sub
add
jne
sbb
push
mov
xchg
ret
negb
ss
add
add
jmp
in
leave
nop
jmp
add
inc
add
std
add
pop
sub
add
fistpl
clc
repnz
nop
nop
jae
add
mull
add
sub
cld
nop
nop
jae
add
add
add
daa
add
add
push
push
mov
xchg
ret
add
add
add
add
shl
cmp
nop
push
mov
leave
nop
jmp
add
in
add
add
mov
lret
sub
clc
repnz
nop
nop
jae
mull
mov
popa
clc
repnz
nop
nop
jae
add
sbb
add
add
jg
sbb
call
nop
jmp
popa
testl
pushf
lods
add
add
and
add
add
movb
jae
inc
add
and
add
test
call
cld
nop
nop
jae
testb
sub
nop
push
mov
leave
nop
jmp
fiaddl
ficompl
out
jle
negl
add
mov
push
mov
xchg
ret
add
insb
add
in
or
push
clc
repnz
nop
nop
jae
mov
jp
add
mov
add
clc
repnz
nop
nop
jae
repnz
add
pop
loopne
mov
clc
repnz
nop
nop
jae
testb
mul
add
popl
add
es
clc
repnz
nop
nop
jae
loop
add
fiaddl
push
push
mov
xchg
ret
add
or
pop
in
add
mov
clc
repnz
nop
nop
jae
add
add
add
mov
push
mov
xchg
ret
in
sub
cli
add
add
pop
pop
cli
pop
ljmp
repnz
nop
nop
jae
add
xor
fiaddl
bnd
pop
mov
addb
add
repnz
nop
nop
jae
popa
testb
add
xor
push
push
mov
xchg
ret
add
add
add
push
push
out
movsl
add
clc
repnz
nop
nop
jae
add
cmp
jbe
add
add
push
adc
cld
nop
nop
jae
idivb
or
in
sbb
and
mov
pushf
fs
add
add
jo
pop
in
mov
pop
dec
add
add
pop
xchg
nop
nop
jae
fiaddl
out
inc
add
inc
roll
push
roll
cmpsb
pushf
arpl
repnz
nop
nop
jae
in
sub
push
repnz
push
in
cmp
sbbb
repnz
nop
nop
jae
xor
add
add
out
and
add
ficompl
jl
add
add
add
loope
loope
jns
in
jo
add
sub
add
add
stc
mov
clc
repnz
nop
nop
jae
and
xor
add
mov
repnz
nop
nop
jae
testb
inc
add
inc
call
mov
push
mov
xchg
ret
sbb
sbb
fidivl
add
je
nop
push
mov
leave
nop
jmp
add
xor
add
pop
pushl
clc
repnz
nop
nop
jae
cmp
in
add
add
xor
repnz
nop
nop
jae
and
out
pop
push
add
add
add
jge
push
mov
xchg
ret
add
fisubl
mov
jp
repnz
loop
add
clc
repnz
nop
nop
jae
add
add
add
add
add
xor
nop
nop
jae
add
out
insb
test
add
fidivl
mov
xchg
ret
cli
xlat
add
add
out
add
add
cltd
mov
clc
repnz
nop
nop
jae
add
cli
pop
in
lea
cmpsl
sbb
jp
add
push
mov
xchg
ret
add
cmpsl
imull
add
adc
add
fwait
nop
push
mov
leave
nop
jmp
in
add
inc
in
mov
shl
jno
push
loopne
repnz
nop
nop
jae
std
add
inc
pop
in
add
push
add
sub
push
mov
xchg
ret
add
repnz
add
add
push
mov
xchg
ret
cmpsl
std
add
loope
add
add
pop
add
or
add
add
stos
clc
repnz
nop
nop
jae
loop
mov
mov
repnz
sub
push
mov
leave
nop
jmp
in
add
add
jle
xor
popa
or
push
mov
jl
add
or
add
fiadds
add
addb
add
sub
jl
fldt
sub
repnz
nop
nop
jae
fiaddl
lea
in
sub
add
push
clc
repnz
nop
nop
jae
push
call
add
add
add
and
add
add
pop
clc
repnz
nop
nop
jae
xlat
add
adc
add
add
pop
jp
or
fstpt
add
idiv
add
and
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
popl
and
add
add
std
call
nop
jmp
add
add
dec
es
repnz
nop
nop
jae
add
add
lea
and
call
nop
nop
jae
mov
add
cmp
mov
pusha
add
add
jp
add
add
add
clc
repnz
nop
nop
jae
daa
add
adc
xchg
inc
add
popa
pop
sbb
add
stc
jmp
push
loop
add
sbb
jns
add
add
add
loopne
inc
push
mov
xchg
ret
daa
add
popa
push
jo
add
imul
add
repnz
nop
nop
jae
mov
cmp
cmp
call
inc
jne
nop
push
mov
leave
nop
jmp
and
add
fs
sub
push
mov
xchg
ret
inc
inc
add
pop
inc
add
add
add
and
lods
clc
repnz
nop
nop
jae
add
add
movl
sub
xor
push
mov
leave
nop
jmp
in
popa
push
adc
add
add
cmpsl
mov
clc
repnz
nop
nop
jae
add
and
add
in
fiaddl
loope
mov
mov
clc
repnz
nop
nop
jae
add
or
call
push
clc
repnz
nop
nop
jae
add
add
fiaddl
add
imul
mov
xchg
ret
and
add
sub
call
mov
add
clc
repnz
nop
nop
jae
add
cmp
add
sbb
sub
repnz
nop
nop
jae
add
pushf
loop
add
in
imul
add
js
mov
xchg
ret
add
mov
add
or
inc
sbb
sbb
cmp
ret
mov
add
add
add
add
cmp
add
clc
repnz
nop
nop
jae
add
sbb
add
add
test
nop
push
mov
leave
nop
jmp
in
inc
add
mov
mov
add
clc
repnz
nop
nop
jae
or
sub
call
mov
leave
nop
jmp
add
std
add
mov
add
out
fisttpl
push
mov
leave
nop
jmp
add
add
and
mov
inc
mov
nop
nop
jae
mov
call
insb
in
pop
lea
xor
push
mov
xchg
ret
add
push
inc
insb
add
ss
add
push
mov
leave
nop
jmp
inc
add
add
add
add
imul
in
leave
nop
jmp
cmp
mov
xor
je
clc
repnz
nop
nop
jae
add
xor
add
imul
add
or
add
adc
jle
add
inc
ljmp
inc
add
add
pop
std
add
and
add
daa
loope
dec
push
push
mov
xchg
ret
out
mov
add
ss
add
add
jno
idiv
repnz
nop
nop
jae
add
add
add
mov
std
add
test
add
repnz
nop
nop
jae
push
in
add
sbb
pop
sahf
cmpsl
push
push
mov
xchg
ret
add
add
pushf
fisubl
insb
add
and
push
push
sub
repnz
nop
nop
jae
jbe
test
jbe
insb
add
fwait
push
mov
xchg
ret
add
add
push
add
push
push
jle
call
clc
repnz
nop
nop
jae
add
push
mov
add
xchg
xor
clc
repnz
nop
nop
jae
test
add
add
imul
clc
repnz
nop
nop
jae
add
rorl
push
clc
repnz
nop
nop
jae
or
add
xor
add
mov
call
inc
add
add
popa
call
loop
sub
push
mov
xchg
ret
pop
roll
add
add
push
mov
jg
sar
repnz
nop
nop
jae
and
mov
xor
test
gs
repnz
nop
nop
jae
add
add
push
sqrtps
repnz
nop
nop
jae
jle
pop
add
add
pushf
add
add
add
in
leave
nop
jmp
add
pop
jle
daa
add
jnp
ret
add
repnz
nop
nop
jae
xor
cli
inc
xor
add
pushf
mov
cld
nop
nop
jae
add
push
mov
push
push
mov
clc
repnz
nop
nop
jae
shl
jbe
add
xor
fdivs
jae
add
push
inc
sarl
sarl
insb
cli
add
rcrl
mov
std
pop
push
mov
xchg
ret
sub
and
xor
fiaddl
xlat
fisubl
clc
repnz
nop
nop
jae
add
add
sub
add
inc
jp
or
rcll
nop
jmp
add
add
cmp
daa
in
pop
add
and
nop
push
mov
leave
nop
jmp
add
testb
add
add
push
inc
mov
mov
adc
repnz
nop
nop
jae
repnz
sbb
div
push
cmp
push
mov
xchg
ret
add
sub
or
fiaddl
add
inc
xlat
mov
clc
repnz
nop
nop
jae
jns
add
sub
add
pop
clc
repnz
nop
nop
jae
add
pop
add
push
mov
jmp
push
mov
xchg
ret
roll
add
loope
add
add
add
clc
repnz
nop
nop
jae
add
not
adc
fiaddl
cmp
inc
mov
push
clc
repnz
nop
nop
jae
and
jns
add
repnz
pop
inc
add
jp
add
add
dec
mov
inc
mov
bound
push
mov
leave
nop
jmp
add
inc
add
test
imul
clc
repnz
nop
nop
jae
roll
add
idivl
call
repnz
nop
nop
jae
fiaddl
add
fcmovbe
add
add
add
add
mov
clc
repnz
nop
nop
jae
sub
out
add
add
push
clc
repnz
nop
nop
jae
cmp
daa
add
movl
add
ljmp
push
cmpsl
add
sbb
add
rorb
add
push
mov
xchg
ret
out
add
add
add
xlat
add
nop
push
mov
leave
nop
jmp
adc
imulb
add
jo
lea
add
sar
repnz
nop
nop
jae
add
roll
mov
cli
insb
add
in
stos
xor
clc
repnz
nop
nop
jae
mov
add
jns
pop
push
mov
xchg
ret
in
fiaddl
add
adc
adc
add
add
add
repnz
nop
nop
jae
add
out
push
sub
add
add
clc
repnz
nop
nop
jae
add
ficompl
dec
push
nop
push
mov
leave
nop
jmp
mov
add
mov
in
add
repnz
nop
nop
jae
insb
add
and
test
xchg
nop
push
mov
leave
nop
jmp
add
inc
add
std
repnz
add
insb
add
add
inc
pop
clc
repnz
nop
nop
jae
shrl
add
xlat
add
mov
push
mov
insl
add
add
add
adc
dec
mov
add
push
les
clc
repnz
nop
nop
jae
in
pushf
sub
add
add
mov
clc
repnz
nop
nop
jae
add
inc
repnz
sub
dec
cmp
push
mov
leave
nop
jmp
sarl
out
add
in
inc
and
clc
repnz
nop
nop
jae
add
add
add
inc
mov
bound
push
mov
leave
nop
jmp
add
add
and
add
bound
mov
cmp
nop
push
mov
leave
nop
jmp
imul
xor
add
add
clc
repnz
nop
nop
jae
daa
roll
out
add
pushf
fidivl
or
push
mov
leave
nop
jmp
add
movl
add
mov
pushl
push
mov
xchg
ret
add
add
sub
clc
repnz
nop
nop
jae
add
add
popl
add
or
out
ds
in
mov
nop
push
mov
leave
nop
jmp
imul
add
lods
pop
clc
repnz
nop
nop
jae
inc
add
cmpsl
xor
pushf
add
in
add
imul
mov
leave
nop
jmp
roll
shr
add
in
add
fsubl
push
sbb
idiv
mov
sbb
add
add
cmc
call
clc
repnz
nop
nop
jae
repnz
inc
in
add
add
mov
push
mov
xchg
ret
sbb
popa
out
add
add
mov
push
dec
adc
mov
xchg
ret
xlat
add
fiaddl
in
add
roll
add
cld
nop
nop
jae
add
and
add
push
imul
loopne
inc
add
add
add
negl
in
daa
jns
add
and
add
add
jmp
xor
add
popa
mov
add
cmpsl
add
ss
mov
pop
clc
repnz
nop
nop
jae
push
add
add
add
fs
adc
dec
mov
clc
repnz
nop
nop
jae
add
insb
add
pop
add
add
aaa
sub
clc
repnz
nop
nop
jae
add
insb
cmp
add
add
fidivrl
mov
leave
nop
jmp
add
add
add
rcrl
push
mov
xchg
ret
add
add
pop
pop
fcmovu
add
add
push
int3
push
pop
add
push
cmp
inc
add
stos
shl
push
mov
xchg
ret
add
add
div
add
out
sbb
mov
mov
dec
add
pusha
sbb
dec
int3
add
add
dec
push
clc
repnz
nop
nop
jae
add
adc
add
xor
sub
and
jmp
clc
repnz
nop
nop
jae
add
in
add
add
sbb
mov
xchg
ret
add
in
xlat
add
add
test
aas
adc
nop
jmp
add
jbe
testl
sub
repnz
nop
nop
jae
pop
jbe
pop
add
fiaddl
add
call
clc
repnz
nop
nop
jae
sub
daa
add
add
mov
clc
repnz
nop
nop
jae
add
imul
jne
clc
repnz
nop
nop
jae
add
add
mul
sbb
mov
clc
repnz
nop
nop
jae
loop
add
movl
cld
sbb
sbb
clc
repnz
nop
nop
jae
sbb
jle
mov
add
add
sbb
push
mov
xchg
ret
add
repnz
push
dec
stos
push
mov
xchg
ret
add
testl
add
mov
push
mov
xchg
ret
push
roll
insb
shl
sub
fiaddl
xor
add
clc
repnz
nop
nop
jae
add
add
add
testb
add
pop
out
lret
cli
or
add
add
repz
clc
repnz
nop
nop
jae
add
negl
add
inc
je
clc
repnz
nop
nop
jae
push
neg
add
and
loopne
call
nop
jmp
fimull
add
sti
pop
clc
repnz
nop
nop
jae
roll
add
in
popl
repnz
nop
nop
jae
add
add
cli
jo
cmpsl
xchg
fld1
clc
repnz
nop
nop
jae
repnz
add
jo
call
test
inc
jnp
add
sub
lea
inc
add
cli
cmpb
mov
xchg
ret
add
daa
sub
loope
add
mov
loopne
mov
xchg
ret
lea
add
adc
daa
add
pop
jae
repnz
nop
nop
jae
inc
xor
add
add
jecxz
sti
push
mov
xchg
ret
or
add
push
add
mov
jae
cld
nop
nop
jae
add
jp
add
jbe
add
aas
push
push
mov
xchg
ret
out
and
ficompl
add
adc
clc
repnz
nop
nop
jae
mov
add
add
adc
mov
clc
repnz
nop
nop
jae
add
add
add
add
jge
lret
clc
repnz
nop
nop
jae
mov
adc
sbb
in
push
loop
add
push
mov
xchg
ret
add
add
divl
jp
add
jno
add
repnz
mov
in
cmpsl
jns
add
jl
fistpl
clc
repnz
nop
nop
jae
add
pop
jns
and
add
add
pop
fld1
push
mov
xchg
ret
add
add
jp
and
mov
sar
repnz
nop
nop
jae
add
add
popa
lea
add
pusha
add
add
ds
add
add
add
jmp
pusha
inc
add
or
add
inc
popl
pushf
xor
mov
aaa
nop
push
mov
leave
nop
jmp
jns
xlat
and
cli
rcrl
sbb
push
clc
repnz
nop
nop
jae
add
shr
mov
or
and
jbe
add
add
add
mov
pop
nop
push
mov
leave
nop
jmp
imulb
inc
test
mov
clc
repnz
nop
nop
jae
add
xor
mov
in
add
pop
clc
repnz
nop
nop
jae
add
push
mov
sub
add
clc
repnz
nop
nop
jae
divl
or
std
add
mov
xbegin
jae
or
add
mov
pop
push
movsl
add
push
mov
xchg
ret
add
jle
sub
loop
inc
add
fiadds
repnz
clc
repnz
nop
nop
jae
add
xor
fiaddl
add
adc
pushf
mov
xchg
ret
jle
std
inc
push
jo
add
cmp
rol
push
mov
xchg
ret
add
push
fiaddl
add
in
mov
push
push
clc
repnz
nop
nop
jae
loop
inc
add
in
movl
and
mov
xchg
ret
out
jp
pop
add
add
add
lea
clc
repnz
nop
nop
jae
add
add
insb
add
repnz
nop
nop
jae
inc
lea
add
insb
add
add
adc
add
add
cld
nop
nop
jae
push
out
sbb
xor
clc
repnz
nop
nop
jae
inc
add
add
add
lea
add
nop
push
mov
leave
nop
jmp
push
sub
cmp
cmpsl
inc
add
add
ljmp
repnz
nop
nop
jae
add
add
push
add
sub
rorl
cld
nop
nop
jae
roll
in
add
add
testb
iret
call
clc
repnz
nop
nop
jae
and
add
fiaddl
mull
push
push
mov
xchg
ret
xor
add
std
add
add
std
or
inc
lahf
mov
nop
push
mov
leave
nop
jmp
mov
jns
sbb
add
add
add
xor
nop
pop
sub
repnz
nop
nop
jae
call
in
sub
clc
repnz
nop
nop
jae
sbb
sub
inc
add
mov
add
add
or
cld
nop
nop
jae
add
add
push
sbb
repnz
nop
nop
jae
inc
pop
push
add
mov
push
mov
mov
clc
repnz
nop
nop
jae
sub
push
std
adc
add
pusha
mov
xor
push
mov
xchg
ret
cli
add
inc
cmpsl
in
add
add
sbb
jp
pop
add
repnz
nop
nop
jae
add
sub
add
add
add
call
clc
repnz
nop
nop
jae
add
add
add
cli
pushf
mov
cld
nop
nop
jae
add
push
in
add
add
std
add
xchg
repnz
nop
nop
jae
add
add
idivl
mov
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
cmp
xor
cld
nop
nop
jae
add
daa
mov
xchg
cmpl
nop
jae
loop
add
add
xor
sti
mov
clc
repnz
nop
nop
jae
pop
add
pop
add
pop
add
add
fildl
or
nop
jmp
add
add
fiaddl
ss
xor
repnz
nop
nop
jae
sub
inc
mov
push
add
daa
neg
roll
clc
repnz
nop
nop
jae
jns
add
add
mov
jbe
cwtl
lea
repnz
nop
nop
jae
cmp
add
jbe
shr
add
and
repnz
nop
nop
jae
add
add
add
push
fwait
push
mov
xchg
ret
add
add
in
add
add
push
mov
xchg
ret
fiaddl
sbb
add
add
adc
cs
clc
repnz
nop
nop
jae
inc
divl
lea
add
add
push
stos
mov
clc
repnz
nop
nop
jae
add
add
pop
add
fiaddl
mov
lahf
mov
clc
repnz
nop
nop
jae
add
push
pop
mulb
fs
push
clc
repnz
nop
nop
jae
inc
call
test
fiaddl
clc
repnz
nop
nop
jae
add
xlat
in
add
xor
clc
repnz
nop
nop
jae
xlat
add
out
pop
and
notl
loope
scas
enter
nop
nop
jae
and
xlat
movl
add
inc
clc
repnz
nop
nop
jae
loop
add
and
add
push
imul
push
mov
leave
nop
jmp
push
push
add
add
imul
sbb
nop
jae
add
mov
add
add
jnp
xor
and
inc
add
fiaddl
pop
add
test
cmpl
cld
nop
nop
jae
add
push
and
add
js
pand
push
mov
xchg
ret
cmp
popa
std
popa
and
xor
add
mov
xchg
ret
add
add
insb
in
add
fsubrs
and
push
mov
xchg
ret
add
sub
add
add
fiaddl
incb
in
leave
nop
jmp
add
add
jle
push
pop
push
xor
add
inc
push
nop
push
mov
leave
nop
jmp
inc
add
testl
add
ret
clc
repnz
nop
nop
jae
roll
add
in
add
add
insb
jo
mov
clc
repnz
nop
nop
jae
out
add
push
add
add
add
mov
push
mov
leave
nop
jmp
jbe
sbb
mul
add
stos
jo
mov
nop
push
mov
leave
nop
jmp
out
popa
adc
add
add
clc
repnz
nop
nop
jae
jbe
popl
sbb
add
add
nop
push
mov
leave
nop
jmp
jp
test
jl
add
nop
nop
jae
add
mov
add
imul
nop
jae
popl
loope
and
imull
add
jo
push
mov
clc
repnz
nop
nop
jae
push
add
and
and
add
push
clc
repnz
nop
nop
jae
add
add
inc
mov
sbb
cld
nop
nop
jae
add
add
add
mov
push
clc
repnz
nop
nop
jae
push
add
sbb
fs
inc
add
repnz
test
rol
and
add
repnz
pushf
sbb
rcrl
repnz
nop
nop
jae
add
sub
loop
sub
std
pop
clc
repnz
nop
nop
jae
and
add
cli
inc
inc
testl
add
lods
lea
push
mov
xchg
ret
cmpsl
add
add
cmp
add
shr
nop
push
mov
leave
nop
jmp
jp
jp
loop
imul
xor
clc
repnz
nop
nop
jae
xlat
sub
add
push
rcll
sbb
nop
push
mov
leave
nop
jmp
add
xor
jbe
add
loop
ss
add
nop
push
mov
leave
nop
jmp
add
push
pop
add
cli
pusha
mov
push
mov
add
sub
sbbb
sbb
sub
testb
add
mov
xchg
inc
sti
int
sbb
dec
test
adc
mov
xchg
fwait
mov
jle
dec
sub
add
add
add
testl
add
cmp
add
dec
movsl
bnd
add
add
and
loop
adc
jno
sbb
mov
sbb
xchg
sti
xor
cmpsl
out
arpl
ds
mov
sub
mov
popa
aad
mov
js
sbb
cld
or
xor
mov
sti
sbb
add
add
nop
ja
lret
adc
jl
jb
xlat
jle
es
jnp
shlb
pop
jae
lret
dec
test
std
data16
shrw
aaa
adc
mov
add
add
add
test
pop
and
mov
aas
mov
mov
sbbb
jb
pushf
add
jne
mov
add
add
lea
test
jo
jp
scas
enter
adc
aas
push
mov
add
lods
pushf
or
add
add
push
bound
stos
cld
add
mov
repz
sbb
enter
add
add
test
xorb
clc
lods
loopne
lret
mov
loop
sbb
pop
in
add
add
dec
adc
addb
sub
outsl
test
add
add
add
add
lret
sub
daa
dec
mov
xchg
idiv
and
cli
in
aaa
push
fst
test
push
divl
in
dec
add
add
dec
mov
lcall
rep
aam
sahf
lcall
sbb
dec
pusha
add
add
inc
outsb
lcall
xlat
mov
ret
pop
gs
adc
insl
mov
popf
pop
push
cmp
in
push
ds
adc
add
add
add
cmp
add
add
push
and
add
add
into
pop
cmp
push
inc
jl
push
fxch
sahf
popf
fimull
push
xor
shl
pushf
push
xor
add
or
fsubrl
sbb
mov
repnz
pop
push
push
and
sbb
pop
daa
mov
pop
bnd
xor
into
imul
std
pop
popf
inc
jo
sub
pop
dec
jo
clc
jns
sbb
out
mov
into
push
adc
in
sti
pop
lret
aaa
test
jl,pt
mov
inc
add
add
ds
add
add
xchg
test
push
enter
or
dec
lds
or
leave
jge
add
add
xchg
fucom
sub
sub
xchg
clc
sarb
pop
lods
adc
adc
push
add
add
xchg
mov
push
out
mov
shlb
sbb
mov
out
mov
dec
lcall
add
add
mov
inc
pop
mov
sub
add
add
shrl
data16
loop
movsb
test
imul
dec
mov
sbb
lret
mov
dec
xchg
add
lcall
shl
data16
xor
test
add
add
jg
push
jne
mov
sbb
add
add
lahf
mov
mov
dec
add
add
lcall
jnp
jg
shll
add
dec
xlat
loopne
add
add
sti
lret
mov
cli
movb
cmpsl
mov
ret
loopne
rclb
adc
popf
cld
sbbb
scas
mov
pop
clc
ds
out
adc
sbb
add
add
nop
nop
aad
call
nop
cmp
imul
repz
push
jge
jne
jb
lds
es
loopne
mov
loopne
cld
mov
add
add
dec
xor
sbb
cltd
cmpsb
pop
test
lret
sub
inc
lahf
xor
popl
scas
dec
mov
jmp
pop
cld
nop
je
mov
roll
mov
dec
xorl
fidivs
sub
add
add
pop
add
jne
fstps
dec
mov
and
nop
ss
pop
mov
loope
cmp
hlt
jne
je
xlat
je
call
outsl
jbe
ficoml
call
inc
jo
add
add
adc
fdivr
mov
add
add
mov
dec
sti
mov
sbb
xchg
mul
cmp
add
add
adc
add
icebp
out
rclb
outsl
dec
push
mov
add
pop
xchg
dec
xor
mov
ret
or
int3
enter
aaa
add
jl
popf
push
dec
dec
movsb
mov
outsl
pop
sahf
jne
insl
lds
leave
xlat
movsl
jp
mov
add
add
inc
pop
in
lods
push
jecxz
imull
sub
add
jo
mov
fsts
dec
pop
mov
push
sbb
add
xchg
xor
ljmp
cli
xor
cli
pop
cmpsl
cmp
sbb
movsl
dec
mov
jns
fisubrl
dec
xchg
aaa
sub
add
add
int
sbb
push
movsl
fistl
ljmp
in
mov
outsb
rorl
jg
in
nop
xchg
daa
xchg
in
ss
add
add
dec
int
rcrl
cld
hlt
dec
add
add
xchg
and
xchg
lock
add
add
xor
dec
mov
je
jno
push
cmp
fwait
rcl
push
movsl
dec
mov
lock
fsubs
pop
sub
xor
xchg
pop
clc
xor
ss
sti
sbb
add
fmull
pop
jne
aas
pop
mov
xchg
cltd
push
lret
xchg
inc
pop
in
fmulp
int3
insb
add
add
push
push
movsb
mov
pop
out
mov
add
mov
xchg
adc
negl
dec
jg
aaa
rolb
xor
adc
add
gs
add
fstpl
mov
mov
xchg
xor
negb
pop
test
dec
mov
inc
aaa
popf
movl
add
add
inc
pushf
jg,pt
cmp
add
repnz
sub
add
add
or
das
dec
iret
lea
std
pop
stos
inc
into
mov
cld
sub
add
add
mov
iret
fcompl
divb
push
xchg
insb
add
add
add
sub
add
add
add
add
inc
mov
je
sub
mov
sub
inc
jmp
cmp
mov
shl
lahf
add
add
add
add
add
cwtl
popa
push
adc
lret
xchg
adc
jge
mov
inc
jp
loop
add
cmp
mov
add
mov
and
in
inc
or
add
add
or
lcall
add
add
pop
jb
les
sbb
cmpsb
imull
imul
ja
jns
fldl
push
lds
pop
imul
dec
cmpsb
mov
stc
loope
mov
iret
mov
mov
xorl
or
scas
out
xchg
and
pop
ret
loope
lods
out
add
add
mov
sub
mov
inc
inc
adc
inc
add
add
fstl
add
stos
aam
add
add
xchg
icebp
out
sub
add
add
lods
mov
std
imul
in
xchg
mov
add
les
fnsave
or
incl
and
add
add
xchg
daa
cmp
add
lcall
xor
lret
test
in
outsb
cltd
pop
pop
inc
add
add
test
mov
sarb
jge
les
push
cmp
nop
ja
or
sti
aaa
or
add
add
in
adc
xor
repz
jns
pop
ret
or
add
add
push
cli
scas
mov
jl
shlb
jns
pop
mov
add
mov
mov
inc
add
inc
ds
icebp
jnp
pop
jns
pusha
mov
add
add
lock
fsincos
out
xor
push
ds
sti
and
stos
loope
aad
fidivrl
pop
jb
jp
fcmovb
out
mov
mov
jge
adc
movsl
in
cmp
out
fmuls
add
xor
jae
sbbl
add
mov
mov
mov
sbb
add
pop
inc
pop
add
fdivrs
jle
call
add
add
push
sub
add
add
sti
fildll
and
jecxz
mov
adc
mov
sahf
or
rorb
add
sub
mov
mov
add
jo
leave
sub
gs
mov
inc
cmpb
push
lods
dec
adc
pop
mov
add
add
cmp
push
jecxz
inc
loope
and
add
add
and
push
xchg
rcrb
mov
dec
mov
add
add
jle
sbb
lods
ds
inc
sbb
aas
dec
add
add
jae
and
sahf
test
or
add
add
shlb
jge
dec
xorb
xor
jo
mov
sbb
int3
and
roll
add
add
jmp
add
add
inc
clc
mov
lret
add
add
arpl
push
inc
jecxz
jnp
sub
add
add
cltd
insb
add
add
add
add
add
add
inc
mov
shl
pop
cmp
jne
jae
push
adc
rol
adcl
add
xor
jle
mov
decb
or
test
jmp
add
xchg
dec
sti
pop
je
fnsave
hlt
jo
push
je
push
lock
cli
sbb
xchg
fwait
mov
mov
xchg
fnstenv
add
mov
stos
stos
jp
cmp
add
add
mov
ret
add
mov
es
or
ret
pop
pop
out
dec
mov
daa
sub
add
add
ret
lds
push
push
xor
inc
add
sbb
lret
add
add
add
add
add
cmc
add
bound
lcall
add
ds
or
inc
ret
add
add
push
jo,pt
imul
insl
mov
lds
inc
int
mov
dec
mov
andl
hlt
aas
mov
dec
mov
dec
add
add
stos
mov
iret
xlat
push
mov
gs
push
and
mov
pop
out
into
hlt
shrl
out
mov
ret
fidivrl
iret
js
push
cmp
add
add
cmp
push
sbbl
mov
stos
imul
xorb
loopne
repz
adc
mov
mov
iret
mov
push
xchg
les
sbb
pop
jg
pop
imull
fs
jp
cmpsb
pop
pop
insb
add
add
aas
mov
mov
pushf
lock
add
add
sub
imul
push
push
stc
xchg
outsl
lret
btr
cmpsl
push
push
jecxz
xchg
mov
or
shll
add
add
jne
cmp
add
add
mov
stos
add
add
add
aas
cmp
imul
pop
xchg
addr16
add
add
mov
jne
cs
sub
pop
aas
jb
xor
daa
mov
or
pop
fidivl
pop
clc
cmp
ds
mov
cld
aas
mov
push
mov
jb
mov
mov
test
inc
iret
inc
andl
add
movsb
jo
ficompl
mov
add
add
outsb
xchg
test
add
add
mov
or
lods
orb
mov
adc
xchg
mov
mov
push
fcoms
and
sub
sti
add
enter
in
xchg
and
into
xlat
ja
mov
decl
add
add
aam
add
add
mov
xchg
jl
cmp
inc
cmp
lods
xchg
repz
dec
add
add
mov
out
dec
xor
fs
loop
sub
add
add
adc
dec
xchg
xor
pusha
mov
lea
lea
sub
fistpl
add
shlb
mov
inc
and
add
add
movsb
sub
sub
add
add
faddl
add
add
ret
pushf
jl
dec
out
add
xor
das
scas
imull
mov
lret
and
xchg
mov
test
fsubp
in
pop
das
mov
add
add
fildll
add
add
fdivrs
mov
ja
inc
pop
in
mov
add
test
add
xchg
mov
add
cwtl
pop
ret
pusha
add
add
arpl
int
rclb
pop
cmp
add
jl
or
in
pop
ror
or
shlb
movsb
pop
jno
repz
or
sti
fndisi(8087
cmp
sub
cmpsb
cmpsb
das
loop
xchg
pop
sbb
aad
push
push
dec
mov
call
add
jbe
loopne
xchg
jbe
fcompl
cld
adc
call
mov
cmp
lahf
pop
test
mov
out
js
jp
xchg
push
test
addb
sahf
push
cmp
stos
mov
mov
shlb
adc
out
dec
std
aaa
mov
shlb
jns
cmp
inc
sbb
mov
push
je
mov
or
sbb
scas
aad
shlb
pop
test
mov
mov
cltd
movsl
fnsave
imul
and
aaa
or
add
add
xor
mov
mov
adc
aaa
stos
sub
add
add
pop
xchg
mov
jg
js
jb
nop
decl
stc
xchg
add
add
loopne
xchg
or
add
add
clc
loopne
mov
jge
adc
and
add
add
dec
add
add
mov
add
push
rclb
add
add
cmp
mov
aad
repnz
add
sbb
add
es
pop
stos
lcall
sbb
jo
add
add
push
ss
push
add
add
out
lds
and
imul
mov
inc
add
add
mov
ret
mov
adc
lret
add
add
xor
add
add
add
jbe
jle
add
add
outsl
leave
mov
sub
xchg
push
jmp
jp
sbb
jge
cmp
mov
add
add
and
sbb
mov
cmp
mov
lret
mov
dec
push
and
add
and
clc
lds
jno
pop
call
add
imul
inc
add
add
pop
dec
mov
hlt
mov
mov
std
xchg
jbe
ljmp
cmp
mov
push
jne
mov
dec
add
add
popa
push
lods
push
aas
xchg
jmp
lea
lcall
mov
inc
pushl
imul
mov
lcall
pop
lret
inc
add
add
test
add
add
aaa
jne
shrb
jo
sub
xchg
push
push
loop
nop
push
stos
jl
gs
int3
call
add
shl
cmp
cmp
mov
addb
test
add
add
xchg
int
lods
push
das
and
add
add
int
push
subl
mov
push
lock
add
add
push
mov
lahf
inc
dec
ss
add
add
lock
dec
sbb
push
sub
add
add
test
lahf
int3
das
faddp
xor
cld
cmpl
mov
vmptrld
mov
fildl
push
bound
mov
xor
sub
push
jle
rcll
add
scas
mov
add
icebp
sti
pop
mov
add
adc
add
lock
inc
xchg
sub
sbb
mov
and
add
add
sub
add
add
shll
mov
add
push
pop
mov
call
icebp
lods
sbb
aaa
jle
test
mov
roll
lock
mov
add
add
sbb
push
jmp
test
push
loopne
sub
add
add
scas
or
add
add
add
add
pop
rclb
test
rcll
loopne
mov
dec
or
add
add
add
and
add
add
cs
ljmp
push
and
loopne
into
roll
dec
adc
in
add
add
push
sbb
push
jae
pop
lret
add
add
xor
sub
int
gs
mov
mulb
xchg
jnp
repz
sbb
mov
in
mov
fidivl
xchg
xlat
jp
into
pop
xlat
ret
or
mov
jecxz
or
add
sub
add
add
add
add
dec
or
mov
and
leave
int3
xor
add
push
push
es
data16
jbe
jge
in
push
cld
scas
jg
mov
jb
dec
std
sbb
xchg
pop
les
loopne
xor
fdiv
push
lods
mov
cmp
add
jns
mov
ja
mov
daa
xor
mov
lods
jne
cmp
add
add
cmp
jns
fldenv
aad
mov
lea
add
mov
mov
cmp
or
add
add
add
mov
jns
add
outsb
cmp
add
add
adc
nop
ret
bnd
popl
add
add
add
in
push
xchg
add
lret
leave
inc
mov
enter
icebp
pop
mov
sub
push
push
or
loopne
xchg
pusha
add
add
repnz
mov
in
mov
bound
pop
mov
iret
rcrl
ret
mov
mov
jae
cmp
fnsave
loopne
mov
add
add
add
cmp
xchg
das
or
add
add
pop
mov
jo
jo
movsl
je
fdivs
jbe
into
dec
mov
lds
mov
or
add
add
ret
adc
test
imul
in
push
popa
icebp
ret
dec
stc
aam
xchg
xchg
add
add
out
addr16
pushf
xchg
inc
mov
lcall
add
out
hlt
aam
leave
out
mov
add
add
cli
mov
lods
pop
rcrl
mov
cmpb
mov
subl
add
lcall
dec
add
add
mov
mov
jmp
pop
cld
pop
cmp
push
cmpsb
pop
mov
data16
sarb
notl
add
add
call
sbb
cmc
insb
mov
xchg
dec
loope
inc
ljmp
add
and
jl
xchg
push
dec
lds
add
add
jbe
push
mov
ds
ret
test
dec
add
add
xor
push
mov
add
add
add
add
out
add
insb
add
add
pop
mov
sbb
cmp
adc
and
fidivrs
jnp
dec
cmp
add
add
test
pop
arpl
leave
aaa
add
pop
mov
daa
cld
dec
xchg
xchg
cmp
xor
adc
add
add
insb
add
add
imull
add
add
jae
dec
sbb
leave
mov
sub
add
add
jbe
iret
cmp
add
add
mov
faddl
aas
sub
enter
add
add
sbb
xchg
test
adc
out
in
add
add
jecxz
add
add
mov
mov
mov
popf
insl
cs
leave
cmp
add
add
xchg
test
cmp
push
add
add
sbbb
data16
ljmp
aad
pop
stc
cmp
mov
adc
pop
jae
mov
mov
or
ljmp
notl
add
xor
inc
add
add
popf
dec
sbb
add
xchg
mov
cmc
out
das
jns
jge
test
inc
mov
mov
mov
lods
movsb
jl
lods
iret
jp
jge
inc
add
add
mov
insl
test
add
push
repz
mov
pop
cmp
pop
test
out
mov
out
add
add
or
add
add
and
add
add
and
add
add
mov
jo
sti
pop
pushf
lock
jae
lcall
fstps
or
cmp
add
ficomps
jb
mov
cltd
mov
int3
mov
add
add
mov
orb
mov
arpl
add
add
subl
add
add
add
mov
cmp
jns
add
add
sub
lret
call
add
add
add
js
add
add
cmpsb
repnz
push
xchg
in
mov
stc
in
mov
rorb
add
mov
xchg
in
inc
mov
test
lahf
addr16
call
fisubs
mov
add
add
enter
pop
mov
pop
call
ret
or
add
add
add
mov
dec
sbb
add
sub
add
add
mov
cli
mull
dec
sahf
cltd
sbb
movsb
test
and
add
add
cmp
add
add
lret
and
add
add
enter
test
mov
roll
ds
les
xchg
aad
pushl
mov
pop
bound
fisubrs
add
add
dec
mov
dec
pop
lahf
aaa
rolb
inc
adc
add
add
pop
mov
cmpsl
arpl
fldcw
scas
movsl
aas
test
sbb
int
add
push
cmpsb
mov
push
pop
ret
mov
inc
lods
sub
mov
push
mov
in
adc
call
scas
add
add
xchg
and
or
add
add
or
xchg
mov
dec
leave
dec
mov
pop
cmpsl
mov
test
dec
stos
add
cmpsl
int3
fwait
sub
add
add
icebp
mov
pop
call
xor
mov
mov
dec
mov
rorb
inc
mov
scas
sbb
inc
mov
pop
popl
push
mov
add
add
lahf
pop
iret
push
cmp
sub
test
in
hlt
sbb
add
add
jg
add
add
add
mov
outsl
mov
mov
rorb
popa
push
jle
push
mov
jg
hlt
decb
add
add
sub
add
add
add
add
iret
sbb
add
add
mov
leave
hlt
repz
dec
fldenv
out
mov
mov
xor
add
add
add
add
ljmp
mov
hlt
pusha
mov
loop
out
add
add
add
outsb
int
lea
push
cbtw
dec
mov
in
jmp
leave
in
cmp
iret
add
add
dec
pop
test
loope
into
cmp
jo
adc
repnz
mov
int3
inc
rcll
je
push
incb
add
add
add
add
lret
insb
add
add
jb
cmpsb
rcll
add
add
or
mov
add
add
aaa
jge
add
movsl
popf
fbld
cmp
lods
aas
or
outsl
mov
sbb
addb
add
xchg
xchg
sub
add
add
add
add
imul
cmp
int
xchg
mov
add
ja
es
push
sub
add
add
stc
and
pop
sub
add
mov
aam
stc
cmp
out
cmp
add
aad
sbb
push
jle
mov
gs
jmp
jmp
mov
inc
mov
cmp
mov
inc
mov
adc
pop
jge
and
outsl
cmp
mov
pop
sarb
cmpsb
mov
pop
jecxz
shll
cld
je
loopne
pop
add
push
lods
or
add
add
out
dec
jne
adc
jmp
lods
stos
loop
jno
mov
mov
test
std
iret
pop
add
sarb
loop
xor
fcompl
adc
lods
dec
mov
lods
cltd
bound
add
fs
xchg
xchg
aad
adcb
and
mov
add
push
xchg
jle
ja
arpl
mov
stos
xor
dec
cmp
out
dec
mov
out
jl
cmc
call
jne
sub
add
add
enter
fildl
lret
xchg
jne
mov
movsb
outsb
push
scas
call
pop
xchg
lods
sub
xchg
push
and
add
add
out
das
dec
push
fidivl
out
sbbl
and
or
loope
pop
pop
daa
js
addr16
addr16
lret
pusha
add
add
xor
aaa
fst
mov
add
add
testl
lds
sub
and
mov
mov
in
add
add
add
rcrl
imul
push
jns
leave
pop
out
adc
jbe
add
loopne
and
add
ja
sub
push
rcl
dec
dec
mov
stc
lods
xchg
mov
lret
sbb
in
jno
push
dec
daa
xor
rcr
push
push
in
pusha
add
add
cmp
sbb
xchg
lds
sbb
aas
xor
push
cmpsl
outsb
mov
in
inc
mov
dec
sbb
popa
jne
movsl
popf
cs
add
pop
lret
shl
fwait
mov
mov
out
mov
or
add
add
andb
mov
mov
call
inc
mov
inc
sub
add
add
add
pop
adc
mov
push
mov
mov
cmp
lret
add
add
jl
mov
iret
xchg
movsl
test
and
imul
dec
mov
add
mov
jns
stos
jmp
pop
or
mov
or
les
stos
mov
pop
mov
jmp
mov
sar
fs
or
add
add
sbb
add
popa
inc
mov
add
mov
jns
mov
outsb
mov
add
add
and
add
add
loope
push
stos
movsb
je
pop
push
jne
shll
add
add
test
mov
xor
push
call
sub
add
add
xchg
ret
pop
jle
out
or
add
add
es
fs
cld
lds
xchg
stos
fxch
jge
jge
xor
aaa
mov
xor
jbe
hlt
jno
stos
adcb
outsl
push
fisubrl
je
in
daa
into
jge
pop
test
loop
jo
mov
popa
xchg
xlat
jl
shlb
shlb
shl
sub
cmpsb
enter
pop
les
push
sbb
testb
pop
mov
lock
cltd
js
lcall
add
add
mov
xchg
add
push
add
daa
pop
fs
mov
outsb
out
xchg
and
xchg
xchg
into
lret
push
dec
int
xchg
and
pop
mov
lahf
pop
adc
mov
add
mov
xor
xchg
xchg
mov
add
add
or
add
add
sbbb
add
lahf
pusha
add
add
mov
inc
mov
popa
sub
sbb
adc
mov
adc
mov
push
leave
ljmp
add
add
shl
rol
pop
cmp
icebp
inc
mov
std
sbb
testb
int
hlt
lds
mov
sbb
or
xchg
ret
add
add
add
mov
dec
mov
add
add
sbb
add
inc
dec
push
aam
nop
cmp
xor
call
jge
push
pop
cld
pop
jp
mov
jecxz
add
add
add
pushf
ljmp
bound
mov
add
mov
xchg
mov
pop
sub
add
add
pop
push
stc
mov
in
dec
push
fisubrs
loope
push
sub
add
add
outsl
inc
mov
jno
inc
and
add
add
jne
xchg
xlat
fnstcw
mov
stos
and
lret
outsb
icebp
fwait
sahf
hlt
pop
das
adc
add
add
inc
jne
or
sub
mov
jmp
mov
icebp
test
adc
shlb
jecxz
out
inc
daa
inc
xor
rorl
mov
mov
test
cmp
adc
rcrl
add
pop
scas
push
mov
jg
mov
inc
xchg
inc
push
mov
add
sbb
inc
inc
mov
repnz
lods
xor
stos
xor
add
rcl
mov
sbb
adc
add
add
mov
and
add
push
pop
jae
sahf
push
push
add
in
enter
add
add
ret
inc
mov
add
add
pushf
aas
push
sti
cmp
push
pop
cmp
sahf
mov
mov
lea
push
aam
orl
pop
fldl
dec
mov
add
ret
jae
add
stos
pop
sbb
mov
mov
popa
test
test
lea
sub
and
mov
in
mov
xchg
bound
lret
movsl
and
add
add
add
add
add
sbb
fcmovnb
ret
loopne
xor
mov
pop
jecxz
jne
imul
xchg
jge
add
add
add
inc
mov
jle
movsl
outsl
sti
push
mov
add
inc
add
add
xor
add
add
loop
inc
xchg
dec
lret
xor
push
loopne
sub
add
add
and
decb
inc
mov
movsb
cmp
stos
pop
lods
dec
inc
fwait
es
pop
add
jns
icebp
hlt
adc
add
add
mov
stos
sti
es
bound
or
lods
cmpsl
mov
loope
inc
icebp
scas
jge
mov
jns
push
mov
sub
add
add
enter
out
ja
arpl
mov
push
sarl
call
pop
loope
mov
add
add
out
stos
insb
add
add
ja
mulb
loope
loop
jo
shl
xlat
jge
mov
add
add
xor
sbb
lds
andl
push
mov
pop
test
mov
ds
fs
aas
lods
ds
push
sbb
cmpsl
pop
cmp
negl
pop
jae
or
add
jge
pop
fdivr
adc
shlb
push
fbld
test
add
or
add
add
or
mov
add
add
push
orb
cmp
dec
mov
daa
call
outsb
ss
push
push
scas
and
add
sti
cwtl
adc
jno
fmulp
scas
jo
das
jge
pop
outsb
pop
xchg
js
pop
div
mov
int3
fldenv
mov
add
add
xchg
movsl
adc
add
add
xchg
xor
inc
shl
xchg
or
add
pop
xchg
push
xchg
xor
add
mov
cmp
daa
pop
fiaddl
mov
cmpsb
mov
add
add
push
ljmp
adc
call
jo
int
in
add
mov
ss
shlb
xor
adc
add
jg
mov
loope
stos
sub
sar
sbb
push
xchg
dec
add
add
push
testb
add
lahf
out
dec
fnsave
sub
mov
mov
or
add
add
jge
xchg
mov
inc
pop
jo
xchg
sub
jae
jmp
mov
mov
mov
sbb
mov
sbb
inc
pop
sub
daa
pop
mov
lods
shl
mov
std
fsubl
mov
incl
out
repz
inc
mov
sub
push
sbb
aas
mov
or
add
add
mov
mov
imul
push
outsl
aam
and
sbb
add
stos
mov
pop
xchg
xchg
adc
pop
push
ja
in
inc
jo
fisubl
scas
mov
dec
daa
adc
mov
loopne
add
add
add
add
scas
jo
jmp
je
sub
add
cmp
mov
inc
scas
inc
mov
mov
jl
fdivs
add
add
les
jp
xchg
pushf
and
into
push
sub
cld
or
loop
mov
mov
add
hlt
mov
add
xchg
fisubrl
add
leave
and
add
sbb
mov
jge
sti
jecxz
xchg
mov
loope
xor
pop
sub
aaa
in
mov
add
insl
test
add
add
int3
icebp
or
add
add
add
add
jno
pop
gs
sub
pushl
sahf
mov
ficompl
push
stos
cmpsl
cs
hlt
fcmovnbe
in
std
clc
ret
ds
push
push
leave
mov
add
add
mov
xlat
ja
push
outsb
jl
xchg
pop
scas
push
jg
hlt
sahf
pop
out
jp
push
dec
mov
mov
sbb
lds
sbb
add
add
out
nop
xchg
xchg
bound
add
add
ret
push
xchg
adc
jg
mov
sbb
mov
mov
add
push
aam
mov
in
jmp
mov
add
mov
roll
lret
into
ds
push
and
add
add
je
push
add
add
add
pop
mov
in
addr16
hlt
or
dec
xchg
jl
int3
mov
dec
shlb
mov
cli
push
cmp
mov
into
lahf
or
inc
mov
sub
pop
sarl
mov
pop
ret
rcl
jg
fistps
fildl
fwait
call
mov
bound
adc
adc
mov
fdivs
mov
sti
iret
std
imul
adc
add
aaa
xchg
orl
and
add
add
push
xchg
xchg
or
add
add
fisubrl
pop
and
insl
mov
out
push
mov
pop
sahf
jmp
cmp
cmp
add
add
inc
push
shll
xorb
pop
loope
aas
cmp
lfs
add
push
sbb
add
add
repz
add
cwtl
stos
jnp
mov
ror
pop
jns
cmp
xor
js
lds
push
jmp
pop
inc
fildll
add
cltd
adc
jno
cmpsb
jo
inc
add
add
add
ficomps
xchg
add
add
insb
add
add
jle
sub
in
xor
xchg
hlt
aam
loop
and
and
add
fstps
push
aam
pop
es
pusha
mov
xchg
shlb
push
sub
lock
mov
jmp
xor
imul
mov
add
xchg
inc
lcall
punpckhdq
add
add
adcb
gs
mov
clc
pusha
mov
repnz
add
add
mov
add
add
enter
sbb
iret
das
jae
daa
pop
hlt
dec
hlt
rclb
stos
addr16
jg
scas
lcall
inc
aam
pop
pop
jg
add
or
mov
jae
fdivrl
pop
and
leave
dec
add
add
aam
leave
jno
add
stos
add
out
sub
add
add
pop
mov
repz
add
add
add
sub
add
mov
push
leave
int
pop
aaa
aad
cmp
lods
adc
neg
adc
repnz
movsl
jnp
push
stos
sub
mov
je
jp
popf
sbb
movsbl
mov
out
bound
push
adc
xorb
dec
stos
lahf
andb
testb
pop
adc
hlt
mov
jp
iret
jno
jg
jg
push
dec
iret
push
and
add
add
jbe
inc
add
add
orl
sbb
dec
fwait
push
inc
sbb
mov
into
mulb
lret
mov
mov
popa
push
pop
int3
sbb
mov
fsubrs
mov
adc
and
inc
les
popf
add
shll
add
add
and
add
add
aas
adc
je
xlat
xchg
pop
fisubrl
xchg
test
lds
repz
jmp
add
add
popa
lea
sbb
test
add
lods
loopne
divl
mov
sti
shrb
jp
pop
sbb
inc
in
push
lahf
sarl
jne
cwtl
add
test
xchg
sub
jle
and
pop
xchg
push
mov
fldenv
std
mov
les
lods
sahf
out
jns
inc
push
adc
loopne
mov
out
in
mov
mov
in
pop
xchg
jne
push
and
in
aaa
push
adc
add
add
mov
imul
inc
shrb
movsl
mov
rcrl
adc
sub
dec
test
out
loope
or
sub
mov
daa
rcrb
xor
loop
dec
loopne
add
add
mov
sbb
in
jnp
test
inc
sub
add
push
mov
add
cmp
cltd
cs
add
jmp
mov
test
sbb
jecxz
shlb
add
jle
arpl
in
or
add
add
jmp
pop
adc
loop
inc
testb
lods
bound
pop
push
mov
sti
in
stos
outsb
mov
mov
ds
mov
fisubs
add
and
push
outsl
push
stc
push
cmp
inc
mov
rsqrtps
adc
push
sahf
sub
clc
mov
sbb
aam
mov
lcall
adcb
jp
sahf
ret
loope
lods
call
sbb
or
add
add
mov
mov
mov
stos
ror
and
add
add
add
add
movsl
in
dec
add
add
jnp
insl
pusha
mov
inc
jle
adc
push
cmpsl
push
sarl
mov
testl
jnp
call
add
add
test
bound
sbb
mov
dec
sbb
mov
sbb
sub
add
add
inc
popa
test
mov
ret
mov
sub
add
add
cmp
xchg
xchg
mov
sub
add
push
fadds
in
test
jp
sub
add
add
sbb
jo
fisttps
xchg
subb
pop
pop
lea
xlat
lea
add
add
add
mov
out
jle
xlat
ljmp
jle
repz
adc
or
push
mov
add
add
cmp
adcb
push
pop
mov
or
inc
add
add
jne
xor
fdivrl
lods
testb
aas
aaa
push
mov
shlb
dec
adcb
mov
add
push
testl
push
movsl
mov
dec
mov
push
outsl
test
sbb
jbe
movsb
cmp
add
add
cmpsl
imul
add
add
add
add
out
pop
lds
mov
add
add
jbe,pt
push
cwtl
push
pop
push
inc
mov
pop
mov
jae
add
add
mov
shrb
pop
mov
outsl
test
aam
push
add
add
xchg
inc
stos
xor
cmp
mov
push
imul
es
pop
push
xor
into
mov
mov
aam
jg
mov
rclb
mov
pop
icebp
scas
movsb
shll
xchg
cmpsl
dec
mov
sbb
cltd
lcall
mov
inc
mov
sub
rol
imul
notb
mov
daa
into
mov
pop
push
imul
xchg
cs
add
add
mov
in
daa
cmp
xor
add
mov
push
lods
pop
movsl
pop
pusha
add
add
push
xchg
mov
adc
adc
into
push
cmp
add
add
das
nop
ljmp
insl
ds
add
imul
mov
movsl
sbb
jo
jbe
repnz
mov
jns
popf
aad
push
dec
mov
addr16
daa
ja
mov
imul
mov
lret
jns
out
xchg
pushf
jae
ret
adc
mov
push
xchg
mov
xchg
mov
dec
in
pushf
dec
xchg
je
subb
enter
nop
mov
add
add
addr16
outsb
dec
cli
in
mov
push
sarl
add
add
stc
push
xlat
jle
jne
add
inc
or
add
add
addl
jle
sbb
and
jbe
into
fnstenv
jb
imul
or
mov
and
jmp
mov
cli
push
les
xchg
aad
xor
pop
mov
mov
xchg
push
jo
popf
mov
mov
jl
inc
mov
xlat
in
and
cmc
jae
imul
sbb
add
xchg
mov
cmp
and
mov
add
add
into
jnp
pop
pop
scas
pop
xchg
cmp
add
sub
rclb
add
add
mov
add
add
outsb
push
movsb
mov
jle
pop
dec
xlat
lods
stos
rolb
add
add
add
sub
and
sub
das
out
mov
push
mov
mov
add
inc
dec
mov
jbe
lods
sbb
add
add
add
int
fbld
rcl
icebp
test
and
add
add
aam
sub
add
add
jae
xchg
leave
nop
mov
add
add
dec
inc
mov
dec
mov
popl
cmpsl
and
add
jns
mov
push
mov
fildl
mov
mov
push
xchg
or
call
int3
mov
xchg
jl
add
add
jbe
out
mov
pop
test
mov
mov
jnp
cltd
sub
jne
sti
and
int
loop
jo
addl
inc
les
adc
sbb
mov
add
add
and
add
add
mov
xchg
jb
add
into
scas
push
nop
les
add
fildl
dec
mov
push
add
add
imul
stc
push
mov
jne
ret
dec
iret
dec
nop
test
dec
leave
setl
fists
add
cmp
mov
pushf
push
icebp
jae
dec
outsb
cli
aam
mov
mov
jmp
rcr
inc
or
pop
and
add
add
sbb
jo
jno
ret
or
fildl
mov
jns
mov
lcall
add
add
dec
lret
add
mov
dec
sti
pop
lods
sbb
es
mov
dec
ret
scas
dec
add
add
sbb
add
add
add
in
or
addr16
fisubrl
add
lahf
ja
dec
inc
mov
dec
mov
jmp
data16
sbb
in
rorb
add
fildll
add
jb,pn
xor
sub
mov
pop
sbb
mov
movsb
popa
adc
add
push
pop
js
notl
lods
pop
insb
add
add
mov
aaa
or
jge
pushf
dec
loop
adc
lock
js
pop
push
adc
dec
aam
cmp
es
jl
sub
ror
adc
aad
mov
faddl
cmp
cmp
aas
cmpb
sub
add
add
mov
mov
movsb
cmpsb
pushf
int3
add
add
add
push
xchg
inc
loopne
jp
mov
int
mov
add
add
loope
in
cwtl
mov
nop
shl
add
add
add
pop
mov
sub
add
arpl
test
stos
daa
in
sub
dec
out
mov
xorb
jecxz
aam
pop
jecxz
mov
add
add
adcl
mov
push
jnp
dec
nop
je
mov
mov
loop
das
mov
mov
add
add
push
jl
lea
inc
or
add
add
movsb
idivl
jb
arpl
add
or
push
and
mov
add
popa
push
imul
rol
sbb
add
add
sbb
insb
add
add
adc
add
add
cmp
sbb
int
dec
mov
pop
inc
jle
jae
cmp
xor
nop
mov
notl
cmp
shll
les
push
fwait
popf
lret
mov
sub
sahf
leave
decb
lods
cmc
mov
xchg
inc
fidivl
or
add
add
add
add
aaa
cs
add
pop
push
dec
push
push
test
out
xchg
nopl
test
add
nop
xchg
scas
mov
bound
sub
mov
rcr
popl
xchg
fnop
mov
or
add
add
jns
mov
dec
add
enter
int3
insl
orb
add
cmp
push
leave
mov
sarl
jle
movsl
jge
jmp
pop
and
sbb
inc
dec
jmp
jle
cmp
loope
jle
fidivl
xor
jp
aam
repnz
mov
sti
std
loop
stos
cmp
push
ja
mov
jg
mov
pop
push
je
mov
add
add
pusha
add
add
filds
sbb
adc
add
add
add
mov
out
les
adc
and
pushf
inc
xchg
subb
adc
popf
push
xchg
and
sbb
std
out
test
mov
mov
push
iret
dec
sub
add
add
adc
cmpsb
inc
add
mov
insl
mov
iret
cmp
jbe
les
xchg
mov
add
add
mov
out
fisubrs
add
add
or
mov
and
add
add
fucom
jmp
adc
add
add
in
or
or
jnp
xchg
inc
ss
pop
inc
ljmp
adc
sub
pop
std
xchg
xor
xchg
aas
xchg
xchg
mov
push
or
lock
push
aam
int
repnz
insb
mov
test
sub
add
pusha
mov
push
aaa
les
add
add
add
add
out
fmulp
pop
bound
movsl
pop
test
call
rcrl
dec
adc
mov
mov
ds
decl
pop
mov
dec
sbb
dec
stc
cmpl
lret
test
sub
add
add
xchg
mov
mov
add
add
mov
add
add
jb
mov
loope
pop
iret
mov
add
dec
pop
movsb
std
cwtl
icebp
jne
popa
xchg
or
add
add
mov
or
stos
shlb
pop
into
arpl
out
cli
sub
imul
jle
xchg
mov
and
test
sbb
mov
add
add
add
and
add
push
add
jne,pn
dec
mov
shll
fstpt
mov
add
add
sbb
dec
cwtl
sarb
jp
sarl
add
xor
add
lods
pop
fistpll
add
add
testb
jae
mov
andl
out
sub
and
sub
sbb
inc
negb
or
add
add
adc
jmp
add
add
or
add
mov
insl
pop
mov
js
divb
add
repnz
gs
jg
fstp
mov
or
ja
xor
or
add
add
jne
pop
adc
jp
add
add
aad
int3
pop
andl
add
ja
jae
sbb
mov
xchg
push
jmp
adcl
xor
repnz
ss
test
add
add
add
jle
mov
xor
add
add
mov
lcall
add
sub
add
add
pusha
add
add
add
js
in
dec
jge
mov
push
pop
fs
xor
out
popa
mov
mov
add
add
sub
add
add
push
and
mov
fstpt
imul
add
add
call
mov
pop
out
aaa
add
lcall
push
enter
or
test
cmp
test
jae
sbb
add
add
mov
out
xor
js
push
lret
sub
add
add
outsb
std
mov
mov
add
add
add
push
std
int
sub
sbb
xor
inc
mov
sahf
ja
call
jmp
lds
push
imul
add
adc
pop
nop
sub
add
add
fidivs
add
add
sub
add
test
pop
jg
mov
ret
call
add
loope
mov
sbb
lock
mov
sub
fldcw
pop
add
scas
jg
xchg
xlat
adc
xchg
icebp
xchg
repz
add
add
shlb
fnstenv
stos
push
jne,pn
das
in
mov
add
add
add
add
add
mov
xchg
push
adc
sbb
hlt
scas
sub
mov
add
aam
jmp
lret
push
sbb
call
add
add
add
add
rorl
add
lods
sbb
add
movl
lock
jns
cmp
jl
sbb
or
dec
adc
ret
shll
fistps
bound
add
cmp
pushf
push
pop
lret
inc
or
movsb
into
sbb
dec
or
xchg
in
cwtl
test
push
mov
jb
add
add
dec
jne
cmp
pusha
add
add
test
jl
pop
pop
pushf
sbb
and
add
dec
ds
loop
xchg
inc
add
add
cmp
add
cld
jge
jne
lock
icebp
orl
stos
jbe
popf
popf
fcmovne
cmp
lcall
sbb
adc
mov
mov
mov
and
iret
cmp
inc
mov
icebp
iret
fnclex
pop
sub
add
add
add
ss
mov
pop
mov
add
add
add
aaa
sub
fidivs
lret
dec
rolb
lock
push
insb
mov
movsb
cmp
fbstp
pop
jp
in
adc
mov
scas
andl
push
dec
stos
cmp
mov
cltd
cmpsl
xchg
xor
add
add
cwtl
sub
add
add
cmpsb
lahf
inc
inc
sbb
insl
xor
mov
add
ficoml
sahf
orl
mov
imul
add
add
jae
xor
or
add
add
add
add
sbb
cmpsl
mov
imul
add
xlat
ja
cmpsb
scas
pop
xor
cld
mov
add
add
xor
mov
add
adcl
or
add
add
mov
loop
dec
push
fidivrl
add
add
add
aad
test
mov
fidivs
pop
mov
add
add
add
sbb
inc
and
insl
jno
mov
push
jle
aad
mov
inc
add
add
mov
mov
cmpl
es
clc
mov
shrl
jmp
testl
add
xor
add
add
cli
xchg
push
sti
xor
add
add
add
cmpsb
mov
stos
sub
dec
aas
pop
divb
or
add
add
add
xchg
and
pop
pop
aam
ja
push
mov
mov
add
add
add
mov
cmp
cwtl
xlat
les
pop
lret
push
fwait
cld
sub
add
add
mov
ret
mov
sub
je
dec
hlt
cmpsb
dec
mov
scas
test
add
fistpl
fsts
sbb
mov
add
std
mov
or
dec
imul
add
dec
add
add
jo
ja
push
push
xor
nop
ds
aaa
dec
add
add
das
or
add
add
mov
add
or
mov
jle
xor
outsb
adc
lods
enter
xchg
inc
inc
sub
push
add
add
add
je
add
add
add
mov
je
mov
pop
sub
mov
xchg
inc
xchg
add
mov
push
loope
add
add
inc
jecxz
push
xchg
test
cld
mov
add
add
dec
mov
mov
sbb
and
mov
lods
xchg
call
add
add
ljmp
add
and
cmpsl
addr16
add
add
add
rol
outsb
inc
push
in
leave
mov
rcl
push
mov
adc
push
ds
cmp
shlb
ljmp
add
jb
imul
inc
mov
and
adc
or
add
dec
repnz
or
add
add
or
aas
xor
mov
mov
jmp
adc
fwait
inc
sbbl
mov
push
sarl
pop
sub
add
xchg
cmc
movsl
and
cltd
bound
pop
in
mov
add
ds
sub
pop
pop
or
add
add
add
add
inc
add
add
fistl
add
sbb
pusha
mov
lret
fbstp
sbb
add
mov
add
add
rcr
dec
add
add
add
ds
dec
mov
xchg
jb
and
add
mov
xchg
and
imul
mov
add
add
jmp
push
mov
cmp
jp
xchg
xchg
pop
das
mov
inc
add
add
xor
lods
fwait
imul
sbb
mov
or
loopne
and
add
add
idivl
repnz
test
test
mov
lahf
movsl
cmc
popw
push
push
adc
mov
add
add
mov
add
lret
cmpsb
out
xchg
xor
add
add
rclb
mov
and
xchg
add
mov
in
arpl
int3
push
lret
fsubrs
sub
jge
roll
mov
int3
mov
sbb
sbb
arpl
add
push
jnp
jp
es
je
scas
movq
jmp
xor
adc
add
add
fildll
insb
mov
ffree
ja
movsb
popa
leave
inc
mov
inc
sbb
into
std
mov
add
and
in
fs
dec
mov
mov
pop
enter
add
add
lock
jae
lcall
call
cmp
popa
adc
call
je
mov
popa
ret
pop
cmp
out
sub
insl
adc
loopne
and
push
outsb
cli
xchg
icebp
mov
lahf
xor
fnsave
lea
repnz
lahf
mov
push
xor
inc
jp
push
xlat
ljmp
push
movsb
lds
orb
lret
add
add
pop
test
add
sti
ljmp
sahf
cltd
mov
or
push
js
mov
add
add
push
dec
add
loop
jno
jp
add
pop
xchg
loop
add
add
add
sbb
inc
mov
js
nop
insl
int3
inc
mov
call
hlt
in
leave
fcompl
jae
repnz
xchg
fiadds
or
fdivrs
cmp
push
imul
insl
out
rcrl
scas
mov
add
add
mov
xchg
mov
icebp
ss
add
add
lods
jl
leave
pop
xor
cmp
mov
das
add
xchg
mov
cmp
mov
dec
mov
test
add
add
add
or
add
add
mov
xor
adc
sbb
adc
int
adc
and
clc
xor
ss
cs
mov
add
hlt
sti
jle
dec
inc
jns
aaa
enter
jae
aad
and
add
add
cmp
pushf
es
xor
les
mov
iret
inc
out
jl
mov
loopne
xchg
mov
lods
lock
cmpsl
xchg
cli
mov
push
dec
aad
in
or
add
add
jne
adc
add
mov
xchg
mov
out
fldl
fwait
add
inc
add
add
fcmovb
push
jno
movsl
sti
fiaddl
orb
jbe
pop
mov
popa
jb
add
add
adc
push
xor
mov
ja
inc
mov
push
out
fcompl
jmp
ljmp
add
popf
mov
mov
add
add
test
enter
mov
jbe
repz
cmp
mov
push
adc
cmpsb
xlat
ficompl
clc
jns
jbe
sbb
jmp
jne
inc
loopne
fs
jmp
into
sbb
movsl
lcall
mov
out
mov
sub
sub
add
add
cmp
add
dec
xchg
add
add
cmpsl
pop
mov
pop
pop
lds
add
add
icebp
adc
clc
pop
push
or
add
add
mov
shll
dec
sarb
into
pop
cmp
test
mov
xchg
repz
pop
hlt
data16
or
add
add
adc
aad
xchg
push
xchg
mov
test
add
mov
xor
int3
ficoml
addr16
or
scas
in
jp
push
cwtl
rclb
push
aas
inc
into
inc
add
add
push
loope
mov
jmp
cld
test
ja
popf
shl
add
add
jb
add
mov
arpl
sub
pop
and
js
xor
dec
mov
pop
cmp
out
fisttpl
in
push
in
jle
inc
add
add
push
fldl
in
add
add
jecxz
int3
negb
dec
add
add
rclb
je
sarl
add
add
fistpl
movsb
add
push
mov
das
xchg
ficoms
adc
add
stos
sarb
inc
dec
bndldx
add
add
mov
test
in
jo,pt
jne
loop
sahf
jne
add
push
sub
pop
sti
sub
add
push
enter
ficoms
push
stc
fisttps
loop
loopne
xchg
sub
push
add
add
add
sbb
ja
sbbl
xor
les
adcl
loopne
lcall
adc
inc
test
loop
push
imul
pop
inc
add
add
or
add
add
and
xchg
test
adc
add
add
jbe
xchg
lret
and
fists
out
ds
xchg
mov
lahf
sbb
scas
nop
cmp
xchg
add
add
mov
mov
lcall
jmp
lea
sub
insb
mov
outsb
jge
push
div
add
mov
jl
pop
shrb
mov
push
pop
jb
jbe
dec
mov
xor
xchg
pop
rcl
dec
add
add
cmp
arpl
add
add
xor
xor
or
add
push
cmpsl
jae
incb
les
in
adcl
cmp
stos
pop
daa
sub
add
add
pop
inc
mov
inc
das
pop
inc
mov
mov
sbb
adc
cmp
fldenv
add
sbb
je
movsb
jb
push
js
or
mov
out
xor
add
scas
xor
add
add
push
aaa
adc
add
add
add
pushaw
add
add
jb
ja
scas
cli
dec
add
add
jno
mov
jmp
cmp
or
cli
fdivr
outsl
jmp
mov
icebp
fcomi
and
aad
mov
mov
mov
test
sti
push
mov
jo
jno
mov
imul
adc
cmpsb
fcomip
push
push
pusha
mov
subl
js
sbb
add
add
movsl
sub
mov
inc
cmp
fisubl
and
ret
or
add
push
jecxz
mov
mov
ret
in
sbb
pop
inc
add
add
repz
cli
daa
cli
sub
add
add
mov
imul
add
add
jmp
cmc
out
movb
add
mov
cmc
mov
add
add
fimuls
inc
arpl
cltd
lret
test
ja
adc
sahf
sbb
leave
sar
mov
gs
mov
jo
daa
into
xchg
xorl
lock
xlat
or
cmp
fisttpll
sbb
add
add
outsb
jg
fists
add
je
repz
pusha
mov
dec
jmp
jp
mov
add
add
jo
mov
add
add
add
inc
push
xor
push
fwait
in
popa
scas
rol
sub
test
repnz
add
add
fildll
mov
inc
mov
lock
xchg
xor
cmc
cmp
test
lret
inc
outsl
or
add
add
ja
testl
pop
jbe
popf
lret
add
mov
and
lcall
mov
in
call
add
jecxz
cltd
push
sbb
repz
add
add
or
add
add
xchg
bound
addr16
cli
test
add
add
nop
or
mov
dec
and
add
add
jbe
test
popa
ror
xor
push
adc
scas
mov
lds
add
add
or
add
cmpsb
lcall
mov
loop
into
dec
cmp
popf
dec
mov
push
fildll
add
jp
sub
add
mov
insl
orl
mov
xor
sbb
lods
fildl
or
add
add
add
leave
adc
add
add
and
inc
mov
pop
and
dec
mov
popa
mov
adc
insb
add
add
adc
pop
hlt
arpl
lea
mov
add
xor
push
nop
sbb
or
add
add
in
enter
nop
xor
mov
xchg
mov
mov
add
shll
add
add
jmp
aaa
or
add
add
sahf
stos
push
sub
add
cltd
mov
pusha
add
add
shlb
add
add
jno
jle
imulb
pusha
mov
sub
ljmp
add
add
mov
add
inc
add
add
pop
scas
int3
lcall
loop
out
add
push
mov
xor
add
add
ret
scas
adc
pop
mov
pop
inc
cmpl
mov
out
leave
mov
dec
into
mov
pop
xlat
mov
sbb
jb
add
add
ja
inc
icebp
add
add
add
cli
nop
dec
xchg
sub
add
add
into
add
add
add
sarb
lret
fcompl
xchg
and
xor
int
mov
cmpsl
push
sbb
fwait
and
out
fwait
xor
add
add
xchg
jb
add
mov
fdivs
js
mov
lds
jnp
cltd
xlat
ds
xchg
scas
mov
add
add
push
shlb
mov
xchg
mov
sbb
adc
add
add
push
ja
pop
dec
jmp
mov
es
jge
test
popf
sbb
in
ss
sbb
add
add
outsl
lods
imul
and
add
add
add
inc
arpl
cmp
es
xchg
sbb
jg
mov
add
add
movsl
mov
cmp
sti
out
push
push
sub
mov
cmp
int
sub
push
mov
in
add
add
jge
mov
cmp
add
add
add
ss
add
inc
mov
popa
adc
repnz
adc
mov
add
push
in
pop
push
nop
xlat
xchg
mov
mov
and
jmp
xchg
jmp
or
cwtl
loop
add
add
lods
jge
popa
addr16
daa
arpl
adc
popa
add
add
xchg
cmc
dec
add
add
in
dec
sbb
loopne
outsl
dec
xor
lret
dec
popa
pop
xchg
nop
add
add
add
daa
push
and
add
add
mov
imul
add
js
fwait
mov
cmp
test
ljmp
mov
mov
fistpll
add
add
add
xchg
adcb
inc
jno
into
sahf
in
add
add
dec
pop
sahf
or
add
add
call
sahf
push
pop
fcoms
rorb
push
sbb
add
add
add
add
add
add
mov
or
pop
popa
jle
sbb
jge
in
dec
call
add
lock
add
add
mov
clc
pop
push
cmpsb
inc
jne
rorb
lahf
mov
adc
inc
mov
in
popa
cmp
jg
jmp
lods
add
jecxz
or
sbb
orps
inc
add
add
enter
mov
add
jae
jg
mov
xchg
sbb
mov
push
frstor
add
lods
push
repnz
mov
mov
jne
outsb
xor
inc
add
add
cmp
mov
adc
push
ror
outsb
arpl
pop
dec
add
add
add
test
adc
rcll
add
jecxz
xor
jg
pop
inc
stos
sti
ret
add
add
mov
mov
mov
popf
fistl
fbstp
es
into
es
cmp
add
add
adc
xorb
je
hlt
std
sti
stos
out
inc
push
xchg
xor
add
stos
stos
mov
and
add
add
sbb
sbb
movsl
xchg
add
pop
adc
imul
mov
out
cltd
adc
stos
out
sbbl
add
add
pop
xchg
mov
stos
repz
add
out
xor
add
add
mov
adc
and
add
add
rcrl
add
add
add
add
ror
mov
mov
push
lds
push
int3
mov
scas
out
iret
shlb
dec
ret
shlb
call
add
add
clc
test
shrl
inc
jl
mov
add
inc
jb
pushf
jb
in
or
mov
lods
scas
and
add
add
add
add
add
aas
adc
add
add
fwait
int
xor
out
push
fiadds
rorl
add
and
and
push
shrl
lret
out
nop
push
jge
aaa
mov
or
in
int3
jno
lret
sbb
add
xchg
ss
aaa
xchg
sbb
xchg
pop
data16
mov
push
cs
xchg
and
push
mov
mull
cld
push
or
les
push
out
cs
add
push
cmp
movsb
scas
adc
call
notb
enter
add
rcrb
stos
jbe
sub
jbe
pop
sbb
leave
pop
pop
jg
pop
push
add
add
add
sbb
pop
mov
add
popf
sahf
or
add
add
outsb
add
push
aad
pop
daa
cmc
mov
jmp
int3
lods
push
inc
into
or
add
add
mov
fwait
dec
jg
popf
fimuls
mov
mov
mov
push
cmp
lcall
js
dec
add
add
dec
movsl
jecxz
xor
add
arpl
insl
insb
add
add
bound
adc
pushf
push
idivb
mov
jge
inc
xor
adc
stos
ret
add
add
mov
add
add
xchg
jb
adc
add
or
jnp
pop
xor
movsl
cmp
mov
pop
in
rcrb
cmp
dec
add
add
sbb
add
inc
cli
mov
enter
or
pop
dec
dec
mov
jecxz
movsl
out
fdivr
js
mov
push
fstpt
out
rcrb
test
divl
data16
sti
or
addr16
enter
sub
in
sbb
fwait
rcll
fstps
jne
add
add
rcr
loop
push
out
mov
insl
in
push
cmp
or
jo
outsl
adc
add
add
mov
jge
into
int
xlat
daa
pop
dec
adc
mov
add
inc
add
add
push
xchg
sbb
ljmp
push
adc
test
es
xchg
insb
mov
push
lock
and
fistps
and
add
add
add
add
xor
or
add
add
mov
sti
xchg
xor
add
add
arpl
jmp
add
add
mov
add
jae
mov
jecxz
pop
sub
mov
insl
addr16
mov
xor
add
or
add
add
inc
and
mov
das
bnd
ret
outsl
jne
insl
adc
in
add
add
add
xlat
rolb
sahf
icebp
out
sub
mov
je
nop
mov
pop
mov
fstpl
mov
mov
push
cwtl
ret
sub
mov
cs
push
ror
xor
inc
mov
int3
add
stos
or
jo
insb
add
add
shll
jne
dec
add
add
adcl
add
add
lods
inc
mov
incb
dec
sbb
add
inc
mov
out
xor
xchg
push
xchg
nop
dec
test
jns
add
add
or
nop
pop
cmpsl
mov
das
nop
iret
cwtl
test
xchg
add
add
mov
jmp
cmp
pop
and
daa
cs
add
add
jle
pop
insb
add
add
xchg
je
lds
inc
mov
add
xor
lret
adc
sahf
inc
xchg
shlb
jnp
sub
add
add
jge
lods
iret
mov
shrl
add
add
and
je
aaa
or
add
add
mov
sti
sbb
movsb
popf
popa
inc
dec
mov
add
add
push
jl
dec
scas
cld
push
icebp
mov
push
xchg
mov
push
shl
dec
mov
idivl
adc
movsb
mov
fdivrl
lods
pop
cmp
sub
gs
mov
mov
cmp
sbb
add
shlb
icebp
rcll
mov
pusha
mov
cmp
or
jp
dec
mov
ja
vdivsd
out
sub
add
add
in
cmp
dec
mov
cmp
lds
add
add
test
clc
into
mov
sti
sbb
ret
std
ret
sub
jecxz
pushf
inc
add
add
add
push
sbb
jno
inc
aad
xchg
xchg
mov
leave
mov
push
outsb
mov
fmulp
sbb
xor
inc
adcl
ljmp
sbb
jg
xchg
push
out
inc
mov
push
mov
daa
dec
cmp
xchg
or
sbb
jbe
sbb
add
pop
push
pop
les
jg
xor
popf
adc
push
jns
imul
bound
sti
scas
mov
mov
mov
sbb
mov
iret
mov
into
or
cmpl
jp
fsubr
adc
leave
inc
insb
mov
imul
mov
or
add
add
in
dec
cld
lahf
jb
jbe
out
cmp
std
cmp
aaa
enter
sti
test
jle
jp
shll
das
fwait
push
stos
sub
add
add
ds
jae
aas
imul
add
outsl
rclb
jae
outsl
bndstx
dec
add
add
and
fstpt
lock
fmull
jnp
cmp
add
add
push
sahf
rcrl
add
mov
add
jae
bound
adc
mov
mov
sbb
add
add
or
clc
and
aam
je
lods
int
fistps
dec
aas
aas
sbb
and
add
add
jb
mov
notb
stos
mov
mov
loop
or
dec
daa
loope
ret
mov
fisubs
mov
faddl
xlat
cmp
pop
push
clc
iret
mov
sbb
add
add
je
dec
adc
dec
mov
lods
dec
out
sbb
xor
or
adcb
fisttps
lea
movsl
daa
xchg
cmpsb
out
int3
js
fsubrl
idivl
nop
pop
dec
cli
shll
add
add
jbe
pop
mov
mov
mov
add
or
out
lea
add
add
lds
jl
inc
mov
pop
xchg
cli
popf
push
hlt
mov
jp
scas
sbb
push
jb
and
js
push
cmpl
dec
add
add
push
movsb
cmp
stos
int3
xchg
lock
pop
aaa
stc
jg
ret
into
icebp
sbb
into
testb
mov
call
mov
add
add
iret
gs
jmp
jo
addr16
sub
sbb
push
xor
stos
xor
mov
dec
pop
dec
ss
icebp
mov
mov
sub
pop
pop
pop
mov
add
add
add
pop
mov
loopne
add
add
cmpsl
dec
and
mov
pop
jb
sbb
lods
pop
shrl
and
adc
push
xchg
jg
add
add
jecxz
push
push
push
cmpsl
or
mov
add
add
notb
lock
aaa
and
cmp
sbb
add
add
jne
mov
outsl
incb
push
loope
fimull
sub
int
mov
fsubrl
add
loop
gs
loop
or
sub
in
iret
lds
add
add
test
add
out
mov
lret
pop
dec
add
add
test
xchg
mov
mov
pop
lods
scas
popa
mov
mov
xor
or
mov
shlb
clc
rol
sub
arpl
cld
sbb
pop
scas
adc
sbb
sub
cmp
xor
addl
xchg
push
and
add
add
cmp
mov
push
mov
add
adc
add
pop
jnp
xor
mov
outsl
fidivl
add
add
add
mov
push
push
sarl
dec
mov
fwait
jo
movb
mov
add
push
dec
push
and
mov
imulw
add
add
out
mov
inc
lods
bound
lds
decl
js
aam
jl
mov
add
add
mov
addl
add
adc
push
fld1
jae
mov
add
das
stc
sbb
add
adc
mov
cmp
inc
cmpsb
lods
pop
ja
jae
fnstenv
imull
add
and
xor
pop
adc
in
xchg
mov
nop
mov
stos
pop
imul
dec
mov
mov
push
fcomps
mov
stos
cmp
cmpsb
rcll
adc
call
add
add
push
les
mov
movsb
jg
and
pushf
cld
pop
movsl
inc
mov
xchg
in
incb
iret
push
test
jne
loope
xor
arpl
std
adc
std
jg
pushf
repnz
mov
inc
pusha
mov
bound
pop
lea
mov
wbinvd
sarl
int
fnstsw
xchg
cmp
mov
pop
add
add
nop
xlat
push
mulb
add
add
arpl
insl
sub
repz
sarb
adc
lods
push
loop
pop
insl
xchg
push
cs
mov
cs
mov
insb
mov
dec
jmp
std
je
add
add
push
stos
mov
cmp
dec
shll
xchg
or
movsb
sbb
jnp
mov
sbb
in
cmp
add
add
and
add
add
xorl
cmp
inc
mov
out
call
add
mov
out
dec
ja
add
add
cmpsl
cmpb
sub
add
add
mov
or
adc
scas
unpckhps
ljmp
xor
xor
stos
sub
add
add
aam
jnp
lcall
pop
xchg
cltd
and
push
and
mov
add
add
inc
mov
addr16
imul
adc
sub
add
add
push
in
and
add
add
enter
and
add
add
mov
cmp
mov
xchg
push
mov
push
shll
inc
in
mov
lret
jp
arpl
repnz
cmp
loope
xchg
popa
mov
movsl
push
adc
push
adc
adc
fwait
mov
out
inc
mov
loopne
jg
sbb
add
adc
sbb
popf
aas
sub
xchg
jb
ret
mov
inc
mov
test
cmp
nop
sahf
enter
stc
mov
jp
pop
mov
xchg
lcall
js
add
add
add
add
stc
push
cltd
cmpl
mov
out
or
add
add
clc
dec
aaa
jge
xchg
mov
in
cmp
pushf
jmp
les
cmp
outsl
adc
push
jp
add
add
dec
or
xchg
xchg
iret
stos
loope
push
out
add
add
testl
add
add
add
push
mov
cmp
add
sub
add
add
and
out
pop
enter
popa
pop
roll
jae
lahf
mov
mov
xchg
in
lret
jo
aad
movsb
int
jb
xor
push
xabort
add
sahf
sbb
cmp
push
pop
lds
jmp
ficomps
mov
add
add
pop
es
test
sub
fdivrl
movsb
adcl
cli
push
xchg
fnstenv
or
and
out
loopne
or
xchg
jne
insl
je
or
or
stos
jo
pop
push
pop
jle
jb
int
mov
mov
push
lret
jno
mov
sub
add
add
add
add
mov
into
push
out
jge
loope
push
cwtl
les
pop
push
repz
inc
popa
adcl
aas
call
sbb
mov
out
xchg
bound
jp
rcl
rorl
movsb
and
push
sbb
add
insl
movsl
pop
push
dec
test
in
or
mov
add
add
out
jbe
jp
js
push
sub
and
pusha
mov
mov
test
sbb
fs
push
test
sarl
outsb
pop
add
add
add
test
data16
cld
mov
add
add
inc
fcmovu
sub
les
cld
jp
add
add
jle
lods
dec
add
add
xor
ret
cwtl
scas
jle
jmp
aas
scas
dec
inc
fstp
adc
ja
cmc
inc
xchg
pop
jle
sbbl
add
add
or
icebp
dec
mov
push
lock
sub
decb
loope
call
mov
dec
imul
cmc
mov
insb
add
add
mov
mov
jno
jne
addl
nop
fnstenv
pusha
add
add
cmp
cld
gs
data16
insb
add
add
dec
xor
mov
fcom
xchg
movsb
mov
push
adc
add
add
sbb
mov
mov
dec
lock
popf
lcall
sub
push
je
cmp
test
gs
add
add
stos
push
fldenv
pop
sar
xchg
das
ret
fildll
add
mov
add
xor
out
xchg
int
out
mov
push
pusha
mov
sbb
sub
add
add
in
fstpl
add
add
insl
aam
scas
push
and
pop
inc
xchg
add
add
sbb
add
add
out
in
pop
pop
pushf
mov
iret
pushf
or
jo
jno
sub
add
add
and
mov
sbb
mov
in
sub
fnstcw
testl
dec
sub
add
add
push
mov
movsb
dec
or
sbb
test
lahf
jecxz
mov
js
jb
pop
xchg
xor
stos
cmc
shl
xchg
pcmpgtd
lcall
add
xchg
das
movsl
dec
psrlq
mov
add
lock
add
add
add
add
sub
add
push
lret
push
add
add
add
hlt
mov
dec
rclb
clc
fidivrs
dec
inc
mov
hlt
fisubl
add
add
sti
cmp
add
out
xchg
pop
into
dec
and
add
add
push
das
mov
add
inc
add
add
mov
mov
adc
repnz
sub
daa
icebp
leave
add
lds
jb
sahf
fnsave
ret
adc
add
add
push
xor
push
iret
sbb
add
add
pop
adc
idivl
or
add
add
pusha
add
add
je
in
sub
lret
mov
adc
mov
sti
add
add
add
xchg
inc
push
and
add
dec
mov
outsl
and
inc
or
fwait
es
add
add
add
rorb
add
add
mov
fdivp
adc
jge
jno
add
add
outsl
pusha
add
add
xor
sbb
jae
xor
mov
mov
pop
push
fsub
jl
or
mov
repnz
mov
add
push
xor
sub
popa
ret
add
add
xor
popa
push
ud1
js
fdivs
int
add
add
imul
je
js
or
xchg
add
add
add
add
add
and
inc
mov
sub
xor
sbb
mov
sbb
mov
cltd
cmp
fimull
add
pop
jae
test
cmp
pop
jp
xchg
dec
or
test
add
add
inc
xchg
loopne
ficomps
xor
leave
and
je
mov
mov
jp
jno
imulb
sub
push
test
inc
mov
hlt
sbb
add
add
add
subb
jmp
pusha
add
add
mov
loopne
inc
ljmp
sahf
mov
subb
mov
repnz
push
jmp
add
add
pop
mov
add
add
add
lret
dec
add
add
fucomi
inc
repz
xor
loope
add
add
les
xchg
xrelease
add
cld
lods
cmpsl
jb
dec
imul
mov
call
icebp
out
mov
divb
dec
push
enter
insb
mov
addr16
scas
clc
mov
outsl
daa
pop
jns
cmp
push
or
add
add
dec
fisubs
shll
movsl
aad
mov
test
inc
mov
movsl
popf
or
add
add
scas
out
adc
pop
push
jne
add
push
and
movl
scas
popf
hlt
aam
jl
movsb
pop
mov
mov
push
ret
nop
add
sbb
xor
stc
sbb
sahf
das
fstpl
test
mov
out
jl
scas
fcomi
mov
add
mov
pop
pop
shll
add
cmp
cli
nop
dec
aam
pop
xchg
inc
mov
xor
add
add
les
pushf
ds
dec
mov
repz
push
or
add
imul
dec
mov
popa
repnz
pop
dec
add
add
mull
mov
pop
mov
mov
fistpl
lahf
sbb
push
mov
xor
add
adc
add
add
jne
mov
add
push
dec
pop
loope
add
add
repz
loopne
mov
adc
stos
pop
inc
fucom
or
rcr
out
and
pop
stc
xchg
push
or
addl
sub
push
cmp
mov
xor
mov
lcall
fwait
add
cs
pop
call
jle
mov
xchg
js
int
addr16
dec
mov
cld
xchg
js
out
roll
add
cs
rclb
mov
add
add
mov
lock
movl
enter
mov
add
add
leave
rcl
mov
add
cltd
or
push
xchg
jmp
jne
insb
mov
mov
fidivl
xor
outsw
data16
xchg
jle
or
imul
mov
test
add
add
cmp
jne
push
fnsave
adc
add
fmul
shll
xchg
ds
iret
jo
aas
test
inc
pushf
mov
mov
and
add
jno
or
add
add
gs
inc
in
lret
push
lcall
push
jecxz
pushf
imul
nop
mov
cli
and
add
add
or
add
add
add
or
inc
adc
and
sub
add
add
mov
mov
add
mov
loop
mov
push
adcb
add
add
dec
mov
adc
xchg
push
fs
add
add
add
adc
sub
imul
int
jmp
test
pop
int
jne
mov
add
add
add
add
lds
push
scas
mov
jns
adc
sbb
add
add
xor
push
xlat
mov
and
add
add
add
add
lcall
aaa
int
xchg
repz
outsb
popa
iret
jg
add
add
lds
clc
and
xor
jg
pop
pop
inc
add
add
mov
add
divb
fiaddl
dec
mov
sub
add
add
inc
lret
xchg
sub
sub
ret
inc
mov
inc
cmp
add
add
dec
repz
add
add
cmp
add
add
add
div
cltd
jo
out
jbe
push
xor
jbe
mov
adc
add
add
add
add
mov
adc
push
xchg
dec
bound
aad
xchg
or
add
add
xchg
xchg
lret
add
add
add
jmp
mov
loopew
iret
aas
mov
data16
xchg
add
test
mov
mov
mov
xor
lcall
add
add
add
add
sbb
and
lds
insl
insl
push
xor
dec
and
lods
inc
std
movsl
imul
dec
add
add
nop
xchg
or
add
add
and
add
add
fadds
add
sub
lcall
pop
aad
test
mov
xor
movsl
dec
and
mov
inc
add
add
or
test
and
add
add
daa
and
add
xor
sbb
mov
xor
add
sub
add
add
rcrl
rcrl
leave
stos
and
push
jo
dec
mov
in
sub
add
add
adc
add
mov
push
jae
aas
jae
aad
cmp
jo
out
sub
pusha
add
add
out
dec
mov
push
xchg
ds
cwtl
pop
dec
sbb
cmpsb
ret
add
jg
xchg
and
add
add
mov
cltd
dec
push
jmp
adc
xchg
mov
aas
dec
add
add
push
xchg
pushf
push
rcrb
icebp
aas
movsb
jne,pn
jno
inc
add
add
ret
mov
rcrb
add
add
gs
add
add
push
cmpsl
lock
pop
pop
lahf
inc
mov
adcb
into
pop
aaa
das
fldl
add
add
dec
push
cmp
mov
mov
sbb
xchg
in
sbb
or
sbb
pushf
inc
movsb
xchg
int3
or
pop
pop
push
dec
pop
or
mov
add
xor
pop
sahf
mov
or
rcrl
add
add
jnp
dec
sbb
pop
push
loop
or
rcr
pushl
adcb
mov
add
add
popf
cmp
mov
sarl
jl
es
test
mov
lea
popf
stc
inc
dec
movsl
rdpmc
dec
inc
fnsave
xor
cli
xchg
sahf
sbb
push
mov
cmp
inc
outsl
int3
cld
mov
lahf
adc
and
ret
pop
cwtl
lea
aaa
lods
popf
xor
add
add
ds
out
inc
add
add
mov
push
stc
mov
xchg
rclb
iret
fimuls
jo
stos
or
in
pop
inc
repz
mov
add
add
xchg
pusha
add
add
sahf
jecxz
xlat
test
gs
gs
jmp
mov
loope
cwtl
push
mov
pop
rcl
lock
in
push
mov
inc
lahf
or
add
add
add
add
pop
xchg
imull
mov
cmp
lods
fildl
mov
cmpsb
add
lds
daa
push
cmc
inc
cmpsl
icebp
scas
adc
pop
into
fsubl
inc
dec
add
add
push
aas
pop
mov
sbb
mov
dec
out
jnp
add
add
add
cmpsl
rolb
test
or
add
add
add
add
or
push
mov
cmp
lea
dec
ret
xchg
mov
imul
inc
mov
xor
adc
sahf
jo
xor
add
add
les
add
mov
mov
pop
mov
fidivrs
sbb
in
lea
aas
pusha
mov
add
add
arpl
scas
xchg
mov
mov
in
repnz
outsl
push
in
les
inc
mov
mov
mov
dec
cltd
jmp
pop
aam
sbb
and
add
add
fsubrl
int
and
add
add
jb
cmc
jmp
mov
add
add
cs
or
je
sbb
test
push
mov
jbe
adc
or
cmc
adc
int3
dec
dec
push
cmp
add
cmpsb
and
gs
mov
or
add
add
mov
out
mov
add
add
add
jecxz
mov
dec
negl
sbb
sahf
out
pop
bnd
add
add
neg
loope
add
add
icebp
mov
imul
lods
mov
pop
mov
add
fisttps
or
shll
dec
pushf
pop
daa
sbbl
add
test
sub
add
add
add
add
mov
sub
add
add
pushl
pop
bound
call
add
add
or
add
add
add
ficoms
cld
xchg
jl
and
jb
jmp
jg
push
xchg
mov
lret
ja
xor
push
inc
mov
dec
mov
leave
add
add
dec
andb
add
add
mov
mov
xchg
cli
ds
std
xlat
push
jae
je
hlt
or
fs
ljmp
lds
mov
add
lcall
sbb
jns
inc
mov
lea
test
cs
add
pusha
mov
loope
dec
in
jb
jmp
jge
out
add
add
add
test
repnz
ljmp
push
or
pop
xor
adc
les
cli
sub
add
add
cmpb
xor
xor
mov
jne
out
popa
cs
orl
stc
stc
mov
and
add
movsl
sbb
sub
repnz
add
add
jno
xchg
fstpl
cmc
test
lret
inc
ljmp
inc
cmc
sbb
adc
ljmp
cltd
cmp
fwait
out
or
in
mov
cmp
add
es
aad
pop
lret
add
add
xor
sti
adc
add
add
clc
xlat
inc
add
add
dec
out
sub
rcr
call
sbb
mov
nop
xchg
in
adc
cwtl
in
pop
jmp
ficoml
rorl
mov
popf
cld
pop
leave
xchg
pop
sbb
insb
mov
cmpsl
push
mov
mov
push
shll
pop
adc
hlt
sub
add
add
daa
addr16
cmc
test
push
mov
sbb
pop
outsb
xchg
cwtl
add
add
jge
mov
rolb
add
add
jmp
sub
jl
mov
aas
mov
ror
add
push
sbb
sbb
mov
popa
xchg
int
fstl
lcall
sti
js
mov
add
add
lods
mov
and
add
nop
mov
iret
aas
dec
mov
in
mov
pop
or
add
add
das
cltd
das
outsb
and
stos
cmp
into
scas
pop
xchg
int3
adc
addl
push
ficompl
dec
adc
add
add
jp
scas
stos
es
pmulhw
adc
mov
lcall
xchg
stos
dec
repnz
add
inc
or
add
add
leave
pop
sbb
xor
loopne
pop
ss
pop
out
cmp
add
add
sub
inc
xor
mov
add
fdivl
idiv
movsl
mov
std
popf
lea
adc
jle
cltd
jae
lods
out
xchg
out
mov
je
shlb
test
xchg
mov
add
pop
push
cli
push
mov
push
xchg
shll
add
add
pop
or
xor
cmp
add
add
imul
xor
in
inc
and
cwtl
fidivl
cli
fs
mov
sbb
mov
lcall
add
add
push
stos
lods
pop
test
mov
push
dec
mov
movsb
adc
pop
jns
push
inc
mov
shrb
push
fcmovbe
xchg
mov
insl
cmp
bound
iret
outsb
inc
adcb
scas
daa
xchg
cltd
shll
aas
dec
hlt
in
or
call
pushf
push
push
icebp
push
scas
cltd
sti
fnstcw
loopne
rolb
and
shll
jmp
mov
frstors
xchg
mov
mov
add
add
add
add
xchg
addr16
fistl
stos
mov
cmp
jne
sbb
sbb
pop
xchg
mov
xchg
aam
mov
cmc
mov
xchg
xlat
decl
add
add
gs
pop
insb
mov
pushf
push
ljmp
dec
add
add
jbe
out
lock
push
andb
add
add
mov
or
out
mov
les
test
sbb
rcll
lret
or
pop
ja
push
shll
andl
outsl
hlt
rorb
xchg
data16
fdivrs
roll
cmp
cld
negb
aaa
stos
add
add
add
fwait
mov
add
das
push
mov
add
add
xchg
and
add
add
add
fbld
jecxz
xchg
add
sbb
mov
mov
in
ret
gs
dec
into
adc
arpl
or
sbb
dec
mov
ss
fs
push
add
sbb
arpl
std
es
push
cmp
adc
add
add
add
mov
add
add
add
add
add
cwtl
nop
jo
mov
repnz
enter
iret
add
add
idivb
push
mov
mov
push
pop
ds
add
add
add
cwtl
push
cmp
sbb
xor
dec
push
out
add
mov
and
add
add
jno
xor
add
sahf
jbe
inc
sub
push
jmp
push
rcr
sti
sbb
xor
add
add
xchg
dec
push
out
jno
lret
scas
cltd
lret
pop
out
fcmovu
lods
iret
mov
aad
push
into
jmp
mov
add
add
xchg
jno
pop
push
icebp
cmp
cwtl
jmp
insb
mov
push
neg
pusha
mov
sub
add
add
and
add
add
dec
ss
add
add
negl
or
jle
dec
dec
mov
add
fsubs
sbb
inc
dec
mov
sub
sbb
jae
pop
mov
out
add
clc
xchg
insb
add
add
adc
add
rcrb
inc
call
movsl
ljmp
add
and
add
add
xor
mov
notl
adc
cmp
cmp
test
fidivrl
push
or
add
add
jne
pop
pushf
int3
popf
les
lea
add
add
add
add
shlb
jno
decb
add
sub
xchg
dec
inc
lock
jnp
mov
dec
sbb
insl
mov
add
add
outsb
leave
lcall
add
add
jle
mov
aam
jmp
loop
outsb
fwait
sbb
cmpl
add
mov
dec
mov
push
cmp
jle
xor
sub
inc
ljmp
xor
repnz
fwait
imul
add
test
movsl
fwait
hlt
push
loope
inc
add
add
gs
sub
aam
pushf
popf
mov
aad
push
xor
cmpsb
push
sub
or
add
add
jmp
ficomps
or
add
add
loope
cli
mov
sub
add
add
mov
add
add
jo
adcb
add
add
int3
loop
mov
cld
push
xor
aad
es
in
add
add
hlt
xchg
popf
add
add
add
add
add
lods
ja
ss
jne
xchg
dec
xchg
or
jo
mov
addr16
push
icebp
sbb
ss
test
jae
inc
push
xor
stc
mov
xchg
lea
xchg
mov
inc
add
add
imul
loop
cmc
jp
push
or
add
add
popa
imul
inc
ljmp
outsl
arpl
shlb
lret
aas
iret
mov
sub
mov
out
cmp
add
add
jo
pop
ret
xor
rolb
jns
fistpll
adc
aam
jg
mov
push
iret
fs
sbb
add
add
imul
add
add
cwtl
inc
or
es
xrelease
dec
inc
mov
jg
cmp
pop
jmp
xor
mov
lods
outsl
out
subl
iret
push
mov
sbb
les
cmove
sti
mov
inc
mov
lock
adc
inc
dec
adc
push
sarb
add
add
lods
imul
or
push
js
add
add
add
xor
jg
fisubs
cmp
mov
push
xor
sti
jbe
scas
pushf
add
push
cmp
xchg
xchg
jo
pushf
jns
mov
add
add
icebp
mov
and
js
push
fcoms
add
bound
push
sub
mov
hlt
push
mov
inc
test
xchg
push
sahf
in
add
add
add
push
cld
mov
xor
jo
dec
lods
loop
ja
mov
mov
jbe
imul
shll
add
ficoml
mov
jns
sbb
lods
ljmp
or
add
add
fs
ss
out
dec
xor
add
add
sbb
sbb
in
jle
popf
mov
inc
mov
ficoml
or
add
add
ret
js
std
push
stos
in
mov
inc
cmp
add
cmc
xchg
ror
fwait
insl
out
movsb
clc
and
ds
daa
xchg
mov
es
and
push
push
jbe
pop
sub
mov
mov
and
push
and
xorb
cmpsl
or
xor
add
add
int3
out
int
lock
test
fidivl
add
add
sub
add
add
mov
lds
push
push
out
pop
fisubl
ror
xor
dec
add
add
lods
adc
lock
xchg
in
dec
dec
dec
mov
cmp
push
pop
mov
or
mov
jge
aam
mov
and
add
add
or
add
add
pop
out
pop
or
add
add
add
add
add
add
loop
jl
in
repz
inc
mov
inc
or
add
add
aas
jl
popa
rorl
mov
cld
pop
daa
xor
lds
adc
or
add
add
push
test
add
add
fs
js
dec
pop
xor
push
or
or
add
stos
shll
xchg
xchg
je
xchg
push
icebp
dec
or
mov
sub
inc
movl
test
cwtl
xor
cmp
xchg
cmp
push
rcrl
int3
imul
fxch
mov
dec
push
dec
mov
cmp
ljmp
adc
xor
or
add
add
add
add
add
fdivs
mov
ficomps
xchg
sbbb
inc
add
add
mov
in
nop
or
dec
les
add
add
inc
mov
mov
add
and
int3
push
cld
sti
cmp
jle
mov
in
jl
jmp
ret
aas
mov
jno
jnp
and
mov
add
add
push
insl
pop
mov
add
jbe
data16
ljmp
xchg
xchg
lret
sub
sarb
add
add
test
add
add
shrl
ds
popf
data16
mov
add
push
and
add
add
add
sbb
push
test
pop
sbb
bound
or
add
jp
mov
andl
adc
int3
aaa
cmc
mov
jg
jne
cli
pop
push
pop
pop
sahf
scas
pop
add
mov
adc
imulb
add
iret
jge
push
cmc
pop
iret
jg
add
add
pop
sahf
scas
in
js
movsl
inc
mov
pop
es
push
inc
add
add
push
pushf
shr
mov
adc
add
inc
in
pushf
ret
fcoml
test
mov
mov
testl
jae
add
add
xchg
add
add
add
pop
aad
xchg
xchg
call
sbb
inc
add
add
or
add
add
dec
pushf
jbe
sub
add
add
movsl
or
jmp
push
fnstcw
out
add
jmp
in
popf
jg
push
jbe
add
add
fs
jbe
stc
xor
mov
add
pop
and
add
add
mov
jno
or
or
jmp
out
lock
xlat
call
into
mov
or
inc
in
in
fsubrl
pcmpeqb
cld
cltd
test
jmp
or
add
add
and
in
fcmovne
dec
scas
fdivl
dec
xor
data16
repz
mov
add
mov
jnp
jmp
xorl
add
ret
add
add
mov
add
lods
sbb
adc
cld
in
std
int
ja
cmp
dec
jbe
sub
rol
cs
pop
jle
movsl
push
cwtl
jno
daa
mov
jp
and
add
add
xor
enter
je
mov
add
imul
cmpb
aas
mov
and
lds
notl
add
add
test
ljmp
xchg
cmp
fisttps
pushf
cli
pop
pop
hlt
mov
mov
add
add
add
add
adc
add
add
mov
add
add
mov
insb
mov
sub
add
add
mov
and
add
roll
jl
jp
mov
or
shl
hlt
jb
xor
push
test
or
inc
shrb
and
add
add
ret
mov
repnz
mov
mov
pop
add
sbb
push
jl
iret
std
jo
jne
add
add
add
add
mov
cmp
lret
adc
add
or
add
add
add
and
popl
add
add
es
stc
push
ljmp
loope
dec
cmpsb
fildl
xor
test
cmp
stos
cmpsb
loopne
jne
rorb
inc
inc
mov
pop
shr
dec
add
add
cmp
test
jle
lock
add
add
arpl
data16
ret
or
add
les
fmulp
arpl
mov
xor
mov
adc
popa
xchg
insb
mov
cmp
cltd
jle
cmp
push
sarb
sbb
shll
sub
outsb
mov
add
add
jns
addr16
dec
pusha
mov
mov
add
rol
test
jl
push
pop
into
fsubrp
adc
mov
inc
jmp
mov
mov
out
pop
sub
testb
sbb
rorl
or
inc
add
add
je,pn
orl
add
add
std
dec
mov
call
add
in
lret
je
ja
sub
cltd
sbb
mov
sbb
in
orb
add
add
sbb
test
cld
dec
add
add
pop
cwtl
jne
lret
jns
pop
or
add
add
cs
xor
nop
outsb
hlt
lock
movb
cld
das
insb
add
add
lret
inc
test
dec
mov
mov
add
inc
mov
sbb
stos
stc
dec
outsl
push
cmp
insl
in
xchg
test
addl
pushf
or
jae
int
loopne
push
in
xchg
sub
inc
add
cwtl
mov
adc
add
inc
or
fstpt
imul
lock
mov
and
add
add
mov
aad
cmpsl
or
add
add
add
enter
lahf
es
testl
pop
mov
sarl
adc
jg
xor
inc
mov
dec
jecxz
ret
mov
scas
mov
sub
cmp
mov
lret
mov
adc
je
sub
andb
push
rcrl
mov
add
xor
mov
jg
push
lahf
dec
andnps
fcomps
mov
inc
jae
cmp
xchg
cwtl
or
lahf
in
mov
in
xor
push
push
aad
insl
push
add
mov
dec
push
inc
add
add
loopne
outsb
in
or
add
add
or
aaa
arpl
pop
pusha
mov
mov
fbld
enter
dec
in
sbb
xor
jmp
mov
mov
add
add
xchg
sbb
mov
add
add
add
xchg
xchg
dec
mov
jg
xchg
aad
cltd
gs
ret
add
add
add
add
add
cmp
add
add
add
adc
push
rorl
nop
sbb
and
add
add
push
xor
mov
xchg
pop
xchg
test
sahf
push
cmp
stos
sub
add
add
mov
adc
or
add
add
icebp
testb
fsubr
loope
mov
das
sbb
and
dec
jmp
or
dec
cmpsb
imul
dec
or
ret
jmp
aas
mov
mov
sub
add
add
push
add
loope
push
loopne
mov
lds
pushf
cli
mov
pop
xchg
int3
jge
and
mov
sbb
je
pusha
mov
lock
xor
gs
add
add
rcrl
dec
cltd
movsl
sar
stos
jo
push
ljmp
mov
pop
jnp
fistl
add
add
add
lods
push
test
cmp
inc
mov
xchg
es
push
loop
insb
add
add
mov
inc
add
add
jl
and
add
add
pop
call
cmpsl
scas
aaa
pop
fiadds
add
add
sbb
das
sub
adc
xor
leave
fisttpl
test
xchg
or
add
add
mov
inc
add
add
xor
test
adc
js
ss
and
test
dec
add
add
faddl
test
mov
push
dec
pop
lods
jl
push
aaa
pop
stos
mov
dec
add
add
mov
pusha
add
add
ret
movd
push
push
cwtl
ds
jb
in
sti
decb
repz
mov
mov
cmpsl
pushf
dec
add
add
sarb
mov
dec
push
push
jns
xadd
push
adc
fnsave
inc
mov
or
add
add
fwait
xchg
fnstcw
xor
add
add
xlat
and
add
add
mov
cmc
push
or
add
add
pop
movsl
xchg
aaa
test
aam
fstp
push
sub
nop
mov
mov
push
dec
pushl
lea
sbb
and
add
add
cmp
leave
fbstp
add
add
cs
ljmp
pop
outsl
inc
add
and
pushf
xor
jecxz
mov
add
add
jbe
stos
in
fwait
mov
mov
out
inc
or
add
add
add
mov
aad
icebp
jo
rclb
int
xor
inc
pusha
add
add
loopne
fld
ds
outsl
inc
xor
cltd
xor
cmpsl
nop
cli
and
sub
inc
leave
push
scas
mov
outsb
jmp
push
and
add
jno
hlt
mov
pop
lret
lods
movsl
xor
mov
call
sub
add
add
add
inc
addb
aad
mov
sub
add
add
add
add
pop
test
inc
and
jno
lock
outsl
lea
cmp
mov
or
push
mov
add
andb
add
add
or
add
add
push
mov
ljmp
add
jmp
add
add
adc
out
fadd
sub
jnp
inc
lds
pop
jae
cmpsb
repnz
fdiv
gs
fsubrl
mov
mov
xchg
es
add
or
ja
stos
mov
cmc
in
clc
imul
lcall
ds
enter
pop
sub
aad
sub
xor
add
add
pop
sbb
or
inc
repnz
scas
sub
cwtl
cmp
add
add
mov
cmp
mov
and
enter
jns
mov
jmp
add
mov
dec
add
add
enter
cmpb
dec
add
add
mov
lods
mov
jge
enter
ret
test
jmp
add
mov
pop
mov
sbb
mov
adc
xor
dec
pop
outsl
adc
ret
fsubrp
sbb
sti
jno
xchg
ret
pop
outsl
testl
add
pusha
add
add
or
stos
sbb
add
add
icebp
fildl
push
cltd
adc
xor
outsl
int3
sbb
lahf
test
aaa
add
sub
add
add
add
add
pushf
mov
mov
dec
jae
addr16
adc
inc
nop
sbb
add
add
sub
rclb
or
outsb
out
pop
push
mov
in
sub
add
add
inc
lret
in
mov
inc
and
or
add
add
ret
jl
xchg
sbb
mov
dec
mov
pop
repz
sbb
mov
add
add
or
add
add
mov
jmp
cld
repnz
mov
add
add
sbb
add
xchg
cmp
outsb
push
les
mov
or
insl
dec
ljmp
dec
mov
cmp
xor
mov
lods
jae
scas
add
out
add
add
iret
js
mov
leave
in
pop
xchg
outsl
pop
or
adc
cmpsb
mov
or
add
hlt
lcall
xchg
mov
add
jl
or
pop
clc
fnop
fisubs
add
sub
fbstp
in
adc
add
cmp
dec
mov
sbb
lcall
fcmovne
cmp
sbbb
out
sarl
mull
jae
scas
and
jl
add
sbb
aaa
insb
add
add
sbb
aaa
in
xchg
lock
add
add
inc
xor
cmp
fsub
ret
cmp
bound
sub
rcrl
jne
pop
add
out
stos
pop
js
add
push
and
add
add
add
add
bound
add
js
or
popa
push
lea
in
xchg
aam
ljmp
mov
push
in
lods
cmp
popa
sub
add
add
cltd
mov
clc
ffree
dec
loopne
cmpsb
cltd
shlb
add
les
inc
sub
add
add
and
ret
xchg
cwtl
es
jecxz
jne
dec
add
add
mov
add
out
push
test
adc
pushf
and
add
ja
aas
adc
mov
pop
jmp
into
sbb
movsl
dec
mov
add
add
xchg
jl
inc
add
add
clc
and
gs
cmp
fwait
iret
mov
ljmp
insb
add
add
cmpsl
in
lahf
subb
add
add
pop
shll
add
add
lock
add
add
add
add
add
xor
pop
mov
push
mov
mov
xchg
mov
add
add
mov
add
add
dec
mov
adc
loopne
js
add
add
outsl
lcall
and
pop
mov
inc
jge
or
add
add
cmpb
ss
cwtl
sub
add
sbb
add
xchg
mov
sub
bound
pop
into
sbb
mov
loopne
in
push
push
das
adc
repz
pop
add
cwtl
cmp
cmp
das
sbb
xchg
daa
or
add
add
mov
int3
adc
add
add
call
and
add
add
test
add
add
mov
aas
ret
cwtl
pushf
jnp
sub
in
mov
cwtl
lret
jge
pop
adc
and
add
add
add
add
jbe
mov
or
clc
and
stos
cltd
lock
lds
mov
adc
aad
mov
xor
loopne
fs
nop
dec
cmp
roll
add
fimuls
pop
fisttpll
add
add
xor
outsl
aas
divl
jns
mov
add
mov
add
add
xor
jo
sbb
pop
rorb
js
cli
push
push
btc
mov
fildl
jl
popa
mull
add
inc
ljmp
and
adc
add
add
add
sbb
jmp
push
and
add
add
out
mov
mov
inc
fs
xchg
mov
cmp
ds
call
mov
ffree
add
mov
or
add
add
outsl
aas
fstps
add
add
inc
xor
xor
rorl
mov
aas
inc
adc
sbb
out
out
push
sbb
ds
lods
insb
mov
sbb
push
mov
add
sbb
lock
mov
add
lcall
cmp
push
pop
pop
lods
fnstsw
jg
inc
arpl
push
adcb
or
stos
in
jns
orl
jg
sbb
aad
scas
cli
inc
or
in
xchg
push
in
mov
lea
nop
or
jo
popf
das
xor
and
dec
add
add
out
sub
add
add
add
add
add
add
sbb
add
add
clc
mov
test
iret
arpl
lret
test
int
push
mov
daa
imul
rclb
add
and
add
mov
xchg
add
add
xor
add
add
push
ljmp
imul
cmp
mov
dec
mov
les
inc
movsb
jle
shrl
xorl
cwtl
xchg
pop
outsb
sbb
cmp
jp
test
stos
inc
ds
cltd
rorl
add
add
pop
fldt
cwtl
dec
jne
dec
mov
lds
ret
call
outsl
sub
ss
adc
add
add
pop
adc
xor
lods
and
in
mov
xor
push
clc
stos
adc
icebp
lea
cs
test
add
add
add
add
mov
popf
aas
int3
mov
sbb
daa
data16
add
add
add
jl
notb
lret
xlat
add
in
cmp
fcmovnb
sub
cmp
add
xchg
fs
mov
ret
das
push
and
pop
mov
rcll
aas
mov
lock
add
add
add
add
addr16
ja
pop
xchg
fisubl
mov
add
add
fsubrp
lret
out
dec
add
add
fmuls
mov
push
fadd
dec
mov
adc
scas
pop
rolb
mov
cmpsb
insl
sarb
push
mov
mov
adc
add
add
call
xorl
xor
repz
add
add
pop
movsb
jb
mov
pop
xor
fs
test
std
repz
add
xor
nop
pushf
lods
lret
es
stos
push
mov
icebp
pop
mov
loopne
mov
lret
xorl
xlat
mov
pusha
mov
jmp
add
fwait
add
add
add
xchg
cmp
inc
add
add
inc
fstpl
fsubrs
add
add
xor
add
add
push
and
push
imul
add
in
imul
add
cmc
cmpsb
jg
stos
adc
add
int
data16
sbb
popa
adc
mov
mov
push
or
dec
jge
cmp
dec
xlat
test
cli
shll
test
add
leave
sbb
test
jge
negl
loop
int
xchg
mov
jg
push
pop
push
jecxz
cmp
je
add
add
std
sbb
mov
ss
stos
js
add
add
addr16
add
xchg
jae
xchg
outsb
imul
popf
stos
adc
mov
scas
push
sub
mov
sbb
mov
add
inc
frstor
add
add
and
addr16
out
inc
or
add
add
mov
or
inc
outsl
and
cli
popa
fwait
subl
lds
pextrw
jmp
fcomps
jmp
sbb
xor
xorl
fadd
or
add
add
inc
inc
mov
arpl
mov
aaa
into
lret
push
and
sbb
filds
add
jle
push
mov
fwait
aas
insb
mov
xchg
mulb
and
add
add
add
add
shr
push
jle
dec
mov
shll
pushf
fcoml
push
jb
int3
inc
or
add
add
or
jnp
pop
call
inc
mov
in
ror
dec
movsl
mov
fisubrs
mov
and
hlt
xor
add
push
aaa
inc
cmp
mov
jo
repnz
cs
mov
jb
lahf
and
xor
into
repnz
jb
sbb
dec
lods
cld
sub
add
add
push
and
add
mov
jb
clc
pop
mov
sub
data16
lcall
mov
jbe
nop
ret
push
loopne
push
test
add
fwait
ret
ljmp
add
add
add
cs
and
xchg
sbb
mov
inc
add
add
movups
sahf
ret
xor
les
add
sti
es
sbb
add
add
add
xchg
and
in
inc
mov
cmp
aas
inc
add
add
sub
push
insb
mov
or
lods
mov
mov
xorb
std
dec
add
add
cli
push
pop
test
aad
dec
mov
inc
push
mov
or
loopne
mov
out
sahf
pop
clc
ja
cmp
add
add
mov
or
mov
dec
mov
aas
out
fnstcw
inc
mov
mov
mov
and
add
add
pop
cmp
ss
add
add
add
daa
adc
vpshuflw
fwait
mov
add
add
adc
popa
int
pop
insl
cmc
icebp
mov
or
pop
addr16
enter
in
inc
add
add
xor
fwait
jns
fsubs
aam
dec
daa
jns
iret
pop
loopne
mov
inc
add
add
push
and
sbb
int
and
mov
push
or
add
add
inc
or
in
enter
mov
je
or
test
cmpsb
fldl
imul
pop
icebp
fldenv
add
add
mov
add
add
nop
jae
out
and
les
add
add
pop
pushf
sbb
cli
iret
adc
mov
pop
icebp
pop
mov
xchg
mov
cmpsl
adc
inc
int3
lcall
clc
inc
mov
mov
popf
gs
dec
or
fs
inc
jmp
add
add
inc
add
inc
xchg
push
hlt
push
jecxz
mov
outsl
adc
popa
test
insl
mov
test
push
xor
dec
push
add
add
push
int
jl
movsl
xchg
out
jl
fsub
aad
mov
sub
dec
fdivs
add
add
mov
mov
add
add
leave
daa
outsb
out
cs
int3
sub
mov
adc
or
mov
mov
jnp
std
hlt
add
cmc
lds
add
mov
leave
mov
mov
sbb
dec
aas
and
mov
dec
cmc
add
add
push
jbe
jle
shlb
pop
data16
insl
ds
pop
pop
loopne
mov
stc
push
and
adc
mov
or
out
cmp
dec
mov
or
add
add
pushf
aad
inc
push
addl
jns
lahf
insb
mov
adc
in
add
add
lahf
add
xor
mov
aaa
dec
shl
pop
jle
int3
bound
add
add
sub
shll
mov
bound
add
add
lods
arpl
xor
add
or
aaa
out
jp
mov
xor
jl
xchg
mov
and
add
add
and
inc
add
add
add
jl
nop
rcrb
push
mov
into
sub
pusha
mov
push
adc
add
add
push
outsl
fwait
jmp
cmpsl
movsb
femms
dec
and
add
add
stos
pop
and
add
add
mov
jne
and
sbbl
int
rcll
mov
add
xchg
mov
push
mov
mov
dec
mov
mov
add
add
sbb
add
add
inc
popa
iret
inc
jmp
fcmove
jge
ljmp
or
add
add
movsl
sub
add
add
xor
add
imul
int3
pushf
dec
add
add
mov
add
add
add
pop
je
int
jae
pop
mov
insb
mov
test
add
sbb
int
bound
ret
lahf
sbbl
scas
cmp
int3
jnp
subl
mov
out
out
xchg
test
add
add
sbb
and
arpl
add
add
mov
stos
adcb
fstpl
inc
add
add
mov
int3
jl
loope
add
add
add
add
mov
add
inc
mov
psubq
dec
sti
xchg
js
inc
fmuls
or
mov
subl
popf
xor
pop
mov
mov
lret
jl
push
adc
std
jp
jmp
fnstsw
in
pop
sbb
mov
mov
dec
jle
mov
lahf
jg
xchg
enter
fwait
test
mov
pusha
mov
mov
push
xchg
add
add
lret
inc
dec
jno
adc
inc
in
xchg
insb
add
add
repz
mov
add
add
add
add
mov
lahf
mov
gs
push
adc
xchg
pop
mov
mov
pop
push
jg
push
xor
lahf
enter
outsl
js
cltd
jl
lret
xchg
adc
inc
dec
mov
xchg
mov
add
pop
cmc
movsb
sbb
mov
cli
jmp
imulb
lds
xchg
cli
or
cmp
xor
pushf
adc
push
data16
jmp
stos
lods
pop
push
je
ljmp
xchg
call
mov
mov
imul
pushf
mov
dec
sub
test
cmp
add
add
mov
inc
add
jnp
cld
dec
mov
adc
jo
add
call
xor
jmp
mov
in
cmp
movb
add
and
add
sub
sbb
inc
mov
enter
or
add
frstor
add
add
add
xchg
popf
lds
add
add
or
jae
loopne
mov
aas
mov
adc
cmpb
add
add
mov
sahf
cld
dec
into
push
icebp
sub
add
add
movsl
sti
roll
add
add
inc
jg
push
out
or
jo
mov
pop
imul
pop
inc
insl
ljmp
dec
dec
add
add
xchg
stos
inc
mov
test
jbe
mov
out
sub
add
push
orl
add
jo
and
test
jo
push
jp
fdivs
sbb
jns
loopne
cmp
pop
flds
mov
xchg
shrl
pop
ljmp
xchg
and
cmp
add
add
add
ja
sti
jmp
mov
jmp
sub
mov
xchg
and
or
cmp
mov
xchg
sub
mov
sti
adc
das
jp
sbb
imul
or
add
add
adc
dec
pop
sub
shlb
fsubs
lret
int
push
addr16
mov
mov
add
add
add
stos
lahf
fidivrl
imul
clc
and
xchg
data16
shl
es
jnp
js
imulb
add
in
mov
mov
lods
add
add
add
add
push
insb
mov
bound
aas
loope
add
add
mov
negl
enter
roll
cmp
add
add
scas
fsin
pop
shll
stos
inc
mov
daa
adc
mov
xorl
xlat
fimull
add
insl
leave
ljmp
in
pop
repz
add
add
dec
add
add
jle
insb
mov
popf
call
nop
lock
test
inc
xchg
das
in
in
jl
pop
push
jmp
sub
jmp
mov
and
jmp
mov
add
lcall
lret
js
mov
jne
cmp
loope
mov
add
add
lret
cli
sbb
and
xchg
adc
jp
test
mov
add
add
cmpsb
stc
mov
pop
cld
dec
into
pop
inc
mov
outsb
mov
jno
add
add
out
xchg
mov
stos
xchg
rcrb
fdivr
sbb
push
or
jno
imul
js
pusha
mov
push
jns
fisttpl
notl
jecxz
enter
adc
push
mov
cmp
xchg
inc
jg
pop
and
sub
lds
jle
std
sub
push
mov
mov
xchg
orb
add
cwtl
call
jge
sbb
push
pop
jo
sti
dec
pop
aad
and
add
add
and
mov
and
add
add
test
xchg
xchg
mov
lds
iret
push
leave
cmp
jg
loopne
mov
sub
add
add
jg
add
add
mov
stos
adc
cmc
jo
xchg
dec
add
add
lods
mov
push
pop
bound
add
add
mov
cmp
xchg
sub
stos
les
mov
mov
add
add
add
add
and
lea
int3
fsub
aad
jno
sub
add
add
sahf
cmp
fldcw
add
add
and
mov
into
lock
loopne,pn
mov
adc
jbe
jae
sarl
add
add
add
add
add
data16
add
add
sbb
pop
xor
add
add
add
add
mov
xorl
test
fnstsw
add
add
ror
into
mov
xor
leave
nop
mov
add
add
mov
inc
jge
cmpsb
scas
adc
mul
add
add
add
or
test
or
jbe
cs
popf
fwait
sbb
and
out
add
add
add
add
add
lea
pop
adc
inc
out
inc
mov
imul
add
add
jg
lds
iret
in
mov
jno
adc
fwait
mov
add
rcr
sub
adc
into
inc
dec
add
add
and
push
add
adc
jge
adc
add
xor
out
hlt
jne
dec
mov
mov
fnstsw
dec
add
add
or
fsubrp
test
xor
inc
add
add
js
imul
dec
scas
adc
xor
outsl
insb
add
add
xor
inc
add
add
xchg
jl
xchg
xchg
mov
sub
test
enter
add
adc
and
cmc
ds
adc
daa
add
add
add
lret
mov
push
ret
inc
ljmp
adc
jb
pop
add
add
decb
push
or
rcl
push
cli
cmpsl
push
fisubs
scas
mov
lea
ja
push
cwtl
test
rorl
mov
iret
fcomps
pop
xchg
mov
mov
add
nop
pop
sbb
jge
loop
ret
jbe
popa
mov
std
add
add
jnp
add
add
shll
mov
push
gs
inc
adc
or
sbb
sub
mov
add
add
leave
xchg
cmpsb
cmp
or
shl
rorb
jns
xchg
push
or
mov
inc
add
add
add
adc
add
jb
out
mov
mov
inc
adc
cmp
lahf
decl
sbb
add
add
imul
call
insl
add
and
add
add
shlb
ficomps
or
add
add
add
add
push
and
add
add
fdecstp
lods
fwait
jnp
nopl
sub
mov
cltd
les
add
push
sbb
add
add
mov
xchg
cmpsl
out
sbb
inc
jg
jmp
and
add
add
ds
ljmp
mov
mov
icebp
dec
outsb
jecxz
movsb
mov
push
and
icebp
inc
push
add
add
mov
add
add
xchg
mov
sti
or
repnz
test
enter
add
ret
fs
sbb
daa
jmp
int
pop
aas
icebp
mov
add
mov
cmp
daa
insl
sahf
imul
iret
push
aam
add
xor
lods
push
iret
xor
cmpsb
push
and
lahf
movq
shr
ja
xor
add
add
add
loope
jmp
or
add
add
out
sub
dec
push
push
aaa
mov
and
orl
aaa
call
or
pop
ljmp
add
add
push
dec
or
add
add
jg,pt
or
fldcw
cmpsb
stc
jmp
add
add
inc
mov
mov
xor
js
lock
inc
lret
or
es
mov
cmp
inc
test
pop
push
movsl
insb
mov
loope
mov
pop
jg
arpl
in
add
add
pop
stc
test
fxam
cmpb
ja
add
add
xchg
je
lahf
loope
xor
sbb
sub
add
xchg
add
ja
xchg
xchg
js
ficoml
xchg
flds
lret
cwtl
lcall
jb
scas
aas
insb
add
add
adc
add
into
les
mov
rcrl
outsl
push
mov
jno
adc
lret
add
xchg
jmp
dec
jne
dec
adc
dec
in
jbe
xor
xchg
lods
push
xor
out
jno
sub
dec
insl
mov
imul
add
fadds
add
add
mov
stos
jns
stc
clc
jnp
add
add
add
jo
and
add
add
out
jne
add
add
bound
push
clc
add
add
shll
sbb
testb
add
ret
loope
fstpt
add
inc
mov
push
loop
mov
fldt
push
add
add
nop
xlat
jmp
mov
jns
ljmp
dec
out
cs
push
jnp
sbb
call
movsb
cmp
mov
jl
test
ljmp
xchg
les
mov
or
add
add
movsl
dec
clc
jb
mov
mov
and
mov
mov
add
inc
mov
pop
jo
sub
scas
cmp
test
subl
lea
loopne
hlt
loop
adc
add
stc
std
and
add
add
add
and
add
add
loop
pushf
addr16
divb
jb
add
add
dec
mov
add
sub
adc
mov
xchg
adc
ja
inc
add
add
jns
add
jmp
add
fnstcw
out
std
push
sbbb
sub
adc
sbb
add
add
sub
inc
ret
add
add
add
xchg
shlb
add
add
add
add
dec
add
add
and
add
add
aaa
push
push
lea
xchg
int
pop
xchg
shl
ret
mov
mov
pusha
add
add
xlat
mov
mov
pop
ja
jae
push
push
xor
sbb
pop
addr16
add
add
out
out
outsl
add
aaa
jbe
test
xlat
rolb
add
add
adc
ret
inc
add
add
cmpsl
push
add
sbb
repnz
scas
mov
mov
addr16
inc
popf
mov
and
add
add
mov
int3
sbb
out
fmul
adc
cltd
cmpl
lods
imull
add
add
dec
repnz
outsl
fstp
sub
mov
or
insl
rorl
into
add
add
add
fucomi
inc
ja
in
adc
cmp
fwait
rcrl
popf
in
jp
mov
dec
mov
add
add
dec
pop
dec
push
stos
or
add
add
mov
ljmp
add
fldl
push
pop
into
inc
leave
cmpsb
fistpll
add
add
jmp
in
mov
loop
fcomps
xor
pop
pop
or
inc
push
cmpsl
shl
jmp
rcl
int
sbb
rcrl
cli
mov
or
add
add
jle
aad
cmp
icebp
and
test
mov
dec
add
add
movsb
fadd
cwtl
nop
lock
stos
aaa
leave
jb
and
xor
mov
movsb
pop
xchg
scas
push
push
in
inc
mov
add
adc
push
push
add
add
add
add
mov
rclb
arpl
push
jo
movsl
jge
ja
mov
push
jbe
daa
mov
mov
mov
adcb
jg
addr16
movsb
mov
add
adc
jl
push
test
mov
xlat
es
in
ja
pusha
mov
mov
add
adc
mov
mov
jg
aad
push
gs
cmp
ret
into
imul
jne
nop
mov
or
mov
adc
mov
or
adc
and
cmp
mov
add
aas
dec
sub
add
mov
inc
jae
and
stos
cmp
lahf
out
add
add
add
int3
gs
into
and
pop
xchg
add
add
add
stc
lcall
dec
psubusb
inc
xorl
les
add
add
lcall
outsb
add
add
add
add
add
fmulp
aas
in
xchg
jmp
mov
mov
out
cmp
rol
mov
das
cs
comiss
inc
data16
add
add
inc
cmp
pop
cmpl
imul
cld
cwtl
je
jmp
clc
xor
and
adc
add
and
xchg
inc
pop
call
inc
mov
loope
and
inc
out
sbb
lea
in
jb
mov
xchg
xchg
cli
lods
lods
mov
add
add
adc
mov
add
add
mov
lods
ja
cmpsl
loop
outsl
test
add
add
shll
add
add
xor
ret
sub
add
add
fldz
hlt
mov
push
clc
xor
xor
add
outsl
mov
xor
and
dec
cwtl
sti
mov
push
inc
add
add
popf
roll
add
add
mov
cmp
add
inc
cmpl
add
add
mov
add
jbe
imul
out
dec
enter
adc
add
add
add
mov
mov
xchg
mov
and
adc
cli
cs
lret
roll
inc
xor
stos
pop
out
jp
mov
test
add
add
mov
sbb
sub
add
add
push
pop
cmpb
inc
insb
mov
testb
rolb
dec
test
dec
mov
mov
add
insb
mov
js
push
mov
jne
sub
add
add
pop
mov
mov
outsb
jg
xor
add
add
xchg
xor
inc
jns
adc
mov
sub
sbb
repnz
shrb
add
mov
dec
cmp
xchg
popf
mov
stos
sub
fmul
pushf
ffree
sbb
ja
lea
mov
add
fcompl
pop
rcrb
cld
lock
rcrb
mov
add
add
dec
mov
les
rclb
ljmp
pop
sub
or
add
add
push
daa
add
loopne
push
sbb
push
mov
add
popa
rclb
mov
iret
std
dec
add
add
push
lods
jo
inc
gs
add
add
push
notw
push
dec
adc
out
jns
pop
fs
sub
add
add
mov
loop
add
add
inc
sub
lcall
push
push
mov
movsb
setb
mov
stc
cwtl
sub
lret
imul
add
stos
inc
popf
repz
pop
xchg
add
cmp
pushf
hlt
outsl
fildll
mov
add
lcall
pop
push
lret
pop
push
pop
add
xchg
adc
inc
stc
inc
imul
insl
add
add
dec
adc
rorl
push
jnp
mov
pop
insb
add
add
inc
add
add
xor
add
add
inc
add
add
dec
jbe
sub
mov
pop
mov
inc
mov
mov
mov
add
add
lea
cmp
inc
sti
or
add
add
xchg
push
push
iret
cmp
cwtl
pop
mov
adc
std
mov
mov
pop
ret
je
jae
mov
loopne
jp
xor
pop
jg
je
insl
ret
mov
dec
add
add
mov
mov
mov
dec
aad
je
enter
mov
dec
out
lods
std
negl
js
mov
jne
add
clc
mov
push
jge
push
scas
scas
xchg
iret
negl
fdiv
clc
sbb
jne
scas
popf
inc
jmp
sub
mov
sbb
mov
or
mov
repz
add
add
mov
cmp
xor
mov
shrb
nop
fiaddl
adc
cli
jmp
pop
push
ja
insl
cmp
mov
pop
or
add
add
fcomps
jne
inc
add
add
stc
negb
add
add
add
mov
jns
test
das
cmp
shrb
add
add
sarl
jae
push
pop
jae
aas
jmp
int
push
insb
mov
aad
nop
sbb
or
jb
xor
mov
ljmp
jmp
add
ret
add
in
cmpl
ficoml
pop
js
outsb
clc
popf
mov
sarb
cmp
lret
jmp
add
cwtl
and
pop
mov
outsb
jb
cld
sahf
sar
rcrl
cmpsb
inc
inc
add
add
enter
push
dec
fnsave
sbb
je
mov
add
add
scas
add
rclb
sbb
sub
hlt
imul
int
loop
xor
fsubr
xor
add
add
inc
test
shrb
dec
pushf
mov
pop
shlb
int
insl
jge
mov
movsb
push
dec
mov
add
out
cld
and
or
add
add
xchg
push
jmp
pop
pop
pusha
mov
test
lret
pop
iret
mov
inc
rcrb
repz
push
add
add
adc
mov
add
add
add
add
xor
jge
jl
addr16
add
add
int3
push
and
add
add
mov
scas
pop
jne
push
sbb
hlt
inc
mov
push
or
push
stos
subb
daa
popf
push
pop
push
mov
add
lea
add
sub
add
add
inc
add
add
push
sbb
mulb
xchg
int3
xchg
aas
in
out
in
cmp
add
add
into
in
mov
testl
xorb
mov
inc
add
add
psrad
add
add
fstpl
push
cmp
sub
add
add
sbb
aas
xor
adc
mov
pop
dec
mov
xchg
inc
add
add
add
add
fcompl
pop
adc
inc
add
add
ds
lret
ret
movsb
mov
add
data16
pop
push
adc
mov
add
mov
out
outsb
sarb
dec
lods
shll
add
pushf
loope
add
add
iret
repnz
pop
inc
mov
mov
flds
add
add
das
pop
dec
cmpsl
andl
add
mov
or
add
add
inc
push
xor
xor
popa
pop
iret
add
add
mov
push
cwtl
xchg
and
jle
mov
mov
jns
xchg
mov
jge
icebp
dec
adc
dec
mov
dec
sub
out
rolb
or
mov
add
add
pusha
add
add
cmpsb
sbb
call
hlt
testl
fidivrl
xchg
frstor
add
adc
rcr
jno
cmp
aam
pushf
int3
ds
js
jbe
push
divb
ljmp
add
add
xchg
out
cwtl
mov
or
leave
mov
std
push
fstps
mov
add
add
sbb
mov
mov
or
jno
test
int3
repnz
cwtl
jns
out
xchg
jle
mov
adc
dec
pop
sub
add
add
nop
call
xchg
or
icebp
es
xlat
inc
mov
inc
mov
mov
dec
add
add
add
js
int
cwtl
sub
bound
add
add
pop
mov
add
mov
popl
sub
dec
mov
cltd
jb
jl
sub
dec
and
add
add
aad
addr16
sub
jecxz
push
jge
push
push
and
sahf
jne
insb
add
add
shrb
add
xchg
mov
mov
mov
jmp
stos
xlat
inc
hlt
cmp
jl
inc
cltd
cwtl
ds
add
add
cmpsb
movsb
xor
add
loopne
mov
push
fistpll
cld
test
fadds
aad
cmp
or
out
stos
mov
popf
in
enter
xorb
addr16
jns
jp
lret
jb
dec
add
add
int
mov
push
jl
outsl
sbb
dec
rcrb
mov
scas
cmpsl
orl
add
add
popf
in
adc
in
std
pop
sub
add
cld
and
test
les
mov
mov
add
dec
lods
jb
nop
cmp
dec
mov
out
mov
sub
add
add
or
mov
add
add
test
mov
mov
rcr
sbb
or
mov
cmp
aas
sbb
popf
mov
pop
jmp
cli
or
add
add
lods
push
iret
xor
pop
pop
lret
jae
dec
aam
test
xchg
pop
mov
or
xchg
sarb
mov
insl
fiaddl
add
add
lcall
add
sbb
insb
add
add
xor
cltd
sub
leave
scas
xor
add
enter
lahf
cwtl
add
add
add
jb
jnp
mov
sti
out
lea
jmp
jl
mov
popf
mov
mov
add
xlat
pusha
add
add
mov
imul
dec
vxorps
pop
sbb
rolb
pop
add
mov
xchg
out
pop
push
cld
pushf
adc
cmp
add
imul
pushf
loopne
movsb
sub
add
add
xchg
sbb
les
add
add
add
add
adc
add
add
lcall
xchg
mov
out
or
arpl
add
push
cwtl
mov
push
mov
cmpsl
dec
push
push
dec
jmp
popa
sub
add
add
and
movsl
add
add
add
mov
mov
mov
stos
pop
insb
mov
leave
sbb
sbb
add
sub
jno
fwait
jmp
data16
add
add
in
pushf
daa
dec
lret
int3
push
repz
loop
add
add
pop
mov
and
cmp
jne
gs
mov
aas
fstpl
pop
pop
xchg
jb
lock
out
and
lock
popa
push
cs
outsw
lahf
ss
dec
repnz
add
add
xor
add
cmp
ss
push
jo
stc
movsb
pop
pushw
fs
inc
and
xchg
add
pop
inc
mov
mov
add
add
add
add
add
repnz
icebp
xchg
adc
in
jbe
sarl
outsl
lods
addr16
mov
js
bound
add
stos
in
gs
aam
cmp
mov
mov
xchg
dec
jns
push
mov
loopne
andl
inc
add
add
subl
xchg
and
add
add
clc
sub
add
add
shll
add
add
and
push
lcall
mov
jbe
imul
adc
fsub
mov
add
and
je
mov
sub
or
inc
push
daa
add
out
ljmp
or
add
add
ret
rclb
sub
movsl
inc
cli
mov
lds
mov
adc
jne
mov
jle
push
push
ljmp
add
add
mov
mov
out
pop
mov
mov
add
popa
and
add
add
fstpl
inc
adc
add
fptan
cmp
inc
mov
arpl
xchg
adc
ret
cmpsb
in
movsl
sarl
lea
add
sahf
mov
dec
mov
jnp
cltd
std
je
push
mov
in
imul
xchg
enter
push
loope
clc
arpl
js
test
add
add
fdivl
cltd
or
add
add
lahf
fwait
adc
pop
cld
inc
add
add
cwtl
cmp
gs
enter
jge
aas
repz
shll
repnz
mov
sub
inc
cmpsb
dec
fimuls
push
sub
add
add
in
inc
into
or
mov
add
add
mov
jno
mov
subl
sub
add
add
xlat
jbe
clc
fnsave
in
jbe
ss
add
add
pop
lahf
outsl
fwait
lods
lret
lods
cli
aad
pushf
fistpl
jne
xchg
mov
pop
pop
push
adc
fadd
sbb
mov
push
jecxz
movaps
add
add
add
add
mov
add
add
cltd
aas
int3
stos
push
rclb
add
fnsave
leave
aad
fst
mov
push
adcb
mov
mov
add
add
push
cmp
xlat
icebp
sub
std
or
dec
or
sub
xor
mov
xchg
and
add
add
fnsave
cli
cmp
leave
movsl
loopne
frstor
cmp
pop
mov
adc
push
mov
clc
push
xchg
ret
cmp
jmp
adc
pop
dec
push
popa
fcompl
pop
fistpll
jnp
and
mov
das
testl
test
jne
lret
or
idivb
pop
dec
dec
add
add
inc
add
add
lahf
ljmp
xchg
test
mov
fldcw
or
add
add
add
pop
addb
rcrl
mov
xor
mov
add
mov
lahf
sub
add
add
test
ja
inc
clc
in
in
mov
mov
icebp
mov
test
int
xchg
mov
mov
fiadds
add
das
popf
cltd
repnz
add
add
add
add
add
add
sbb
add
and
add
add
add
add
movsb
xor
loope,pn
inc
scas
daa
subl
add
mov
fstps
xchg
loope
scas
lds
popa
and
push
es
int3
xchg
int
mov
inc
sbb
pop
iret
ds
mov
enter
cmpsb
jo
out
jl
dec
add
add
jp
inc
mov
jns
mov
add
shrb
fbstp
stc
lods
mov
sub
add
add
push
jl
mov
movsb
jne
shlb
adc
lret
retw
sbb
das
xchg
mov
pusha
add
add
or
ljmp
mov
pusha
mov
or
add
add
lret
dec
mov
jge
xchg
add
outsb
or
repz
sbb
jae
fstps
dec
add
add
or
data16
add
add
gs
mov
mov
inc
cltd
mov
nop
cmpsl
xlat
push
imul
add
scas
addw
test
gs
clc
sub
add
add
cmp
pop
cmc
out
xchg
add
sbb
mov
push
lcall
mov
cmc
enter
rolb
out
std
push
popf
dec
mov
adc
cmpsb
inc
mov
daa
test
xlat
push
push
testb
mov
pushl
xchg
es
test
add
cltd
jl
arpl
add
sub
add
add
add
into
inc
lcall
add
inc
or
xchg
pop
jne
jp
add
in
out
adc
mov
testl
add
add
add
add
lock
add
add
mov
aam
jmp
or
jmp
mov
cmc
stos
sbb
add
add
add
add
pushf
xorb
bound
es
mov
jecxz
push
push
lods
jp
xor
push
adc
fsubrs
rcll
add
imul
dec
xchg
pop
cmp
add
add
mov
add
add
cmc
push
pop
inc
add
add
ret
bound
jbe
insb
add
add
fcmovnu
sahf
mov
in
or
or
cltd
jbe
jo
aad
pushfw
psubsb
mov
pop
ja
xor
mov
shll
incl
push
lret
mov
add
cwtl
stos
jmp
ljmp
mov
in
shlb
mov
in
pop
mov
fdivs
ljmp
js
stc
cld
int
arpl
jl
xchg
push
rorb
test
add
add
or
xor
rclb
xlat
rcr
bound
add
add
push
push
xor
cmpsl
dec
add
add
jmp
sbbb
add
inc
stc
rclb
mov
adc
add
add
add
mov
xchg
inc
add
add
iret
xchg
cs
cli
jge
dec
sub
or
outsb
add
jo
mov
mov
xor
jmp
xchg
add
sub
jae
adc
shlb
nop
jp
gs
cmp
arpl
mov
push
test
cmp
mov
out
push
mov
jbe
insl
or
add
add
add
enter
scas
xor
sub
add
add
fsubl
add
add
mov
hlt
sti
je
push
lcall
outsb
fiadds
movsl
cmpsl
lret
rclb
insl
jge
les
cs
imul
adc
inc
hlt
fs
lock
mov
clc
stos
lahf
cmp
icebp
mov
add
jle
dec
jns
xor
repz
and
add
add
or
add
add
repnz
add
add
lahf
int
arpl
dec
xor
aas
dec
add
add
xor
cltd
jo
xor
ja
sti
xor
in
sub
sbb
inc
mov
std
fnstcw
cmp
push
sbb
pop
cltd
mov
scas
cwtl
out
in
push
jo
and
mov
add
add
add
add
add
add
add
in
inc
add
add
sbb
add
cmp
push
push
fwait
popf
mov
adc
mov
jle
mov
out
gs
int3
bndldx
add
mov
repz
add
add
add
push
pop
repnz
xlat
insb
mov
push
in
subb
mov
imul
int
fcmovne
cmc
in
aad
fs
mov
cwtl
aad
int
cwtl
shlb
mov
test
fidivrl
jns
sub
add
add
in
jle
mov
add
add
dec
add
add
ja
xchg
adc
add
test
aas
mov
sub
add
add
or
xor
jmp
xchg
inc
outsl
push
aam
mov
jmp
sub
add
add
data16
mov
add
iret
scas
aam
jg
add
add
pop
test
sub
mov
xor
add
add
fcoml
push
scas
dec
add
add
jno
rclb
add
add
mov
mov
mov
lahf
xor
subl
add
cmp
stos
sub
cld
adc
incb
mov
cmp
cmc
sbb
mov
leave
cmp
push
push
xorl
add
int3
dec
icebp
in
cs
adc
fcmovnu
call
adc
xchg
jbe
fsts
mov
add
add
add
clc
mov
add
mov
xchg
dec
fwait
push
push
les
jno
stos
mov
scas
mov
into
rcl
sbb
adc
cltd
bound
je
jmp
daa
xor
lcall
add
adc
ds
shll
es
ret
push
nop
loopne
cld
jle
and
xor
mov
jp
cltd
iret
mov
cwtl
loop
int3
js
stos
lods
pop
scas
dec
shrb
mov
aam
mov
fdivs
sub
ds
test
xchg
mov
inc
push
push
or
lock
add
add
popa
shll
add
scas
fbstp
push
cmpsl
push
mov
int
lods
rorl
push
push
inc
in
loope
jecxz
add
add
je
pop
jnp
or
add
add
or
add
add
repz
pop
fdivrl
movsb
cmp
mov
movsb
pop
jns
xlat
push
icebp
cwtl
jmp
das
mov
and
add
add
in
stc
cmpb
xor
push
lods
lods
lret
call
add
add
adc
cmpsl
aam
gs
add
xor
pop
xchg
cwtl
xor
insb
mov
xchg
test
mov
call
jo
add
sbb
jnp
mul
repnz
push
xchg
imul
cmp
stos
out
cmp
push
lret
lret
das
std
into
mov
out
xor
jmp
add
daa
clc
xor
mov
clc
add
test
jnp
iret
mov
cmpsl
lea
jno
or
cli
mov
jb
aaa
stos
add
dec
stc
jne
or
add
add
add
add
lods
jge
addb
add
add
arpl
cmp
cltd
push
sti
js
out
pop
pop
in
insb
mov
adc
cli
leave
sub
add
add
mov
pop
push
subl
fldl
imul
push
adc
mov
sub
adc
mov
add
add
mov
repnz
movsl
and
in
add
mov
cmp
pop
fisubrl
add
add
roll
jp
lea
add
push
pop
lahf
lahf
out
shlb
sbb
cmp
lock
imul
xchg
xchg
mov
cmp
addr16
rcll
add
insl
cwtl
jecxz
mov
inc
mov
cmp
add
pop
fcoml
loope
jg
fwait
cmp
les
gs
mov
push
lahf
insb
add
add
int
add
add
mov
jo
mov
push
sbb
jnp
lcall
sbb
aam
push
xchg
lods
dec
das
mov
push
adc
pop
fiadds
adc
sti
aam
jl
or
and
adc
popf
addb
enter
mulb
stc
xchg
call
add
add
add
add
jle
shll
mov
cmp
mov
fwait
leave
dec
cmp
inc
addl
lret
push
stos
jb
or
mov
push
lea
add
add
xor
xor
add
inc
lock
pop
or
sub
push
sub
add
add
in
push
mov
pop
je
cmp
xor
imul
push
push
mov
jb
sbb
push
inc
mov
push
test
mov
mov
pop
xor
lret
out
fdivs
xchg
je
int3
fcomps
and
add
add
pop
sti
insb
mov
push
loopne
adc
mov
pop
jo
mov
mov
into
push
and
xchg
sbb
xchg
je
add
add
shlb
and
add
add
dec
mov
xor
mov
or
sbb
inc
add
add
negl
add
int
inc
sub
add
add
mov
loop
stc
fsubs
sub
and
mov
lret
add
mov
add
xchg
mov
addr16
int
adc
jle
mov
ret
push
dec
test
sahf
cmpsl
lret
test
loopne
addr16
mov
xor
xchg
mov
divl
jns
dec
or
sbb
and
add
add
lock
stos
lcall
in
shl
mov
jne
cltd
cmpsl
dec
sub
add
add
push
popa
js
jmp
add
add
or
outsb
dec
jo
xor
lahf
les
mov
adc
insb
mov
xor
add
add
add
clc
xor
or
add
add
push
testl
nop
mov
jnp
in
outsl
lds
subl
add
adc
xor
mov
adc
dec
mov
cld
cmp
jge
pushf
jecxz
mov
ret
mov
shll
bound
add
lahf
mov
call
ljmp
insb
mov
sub
and
add
add
cwtl
data16
push
int3
lret
mov
cmp
repnz
leave
inc
mov
push
inc
add
add
mov
and
sub
gs
jo
inc
test
leave
hlt
mov
dec
sub
add
add
add
movsb
add
xchg
aas
sbb
adc
dec
dec
adc
adcb
mov
add
stos
repnz
popf
cltd
jmp
ljmp
cli
loop
popa
mov
stc
leave
dec
pop
xor
and
add
addr16
xchg
xchg
adcb
add
add
add
rcl
orb
pop
lods
dec
add
add
popa
dec
jae
add
add
mov
lahf
icebp
sub
add
add
pop
sbb
nop
mov
inc
inc
mov
insl
out
cmp
mov
and
add
add
pop
sbb
popa
out
sbbl
sbb
add
push
imulb
mov
jae
pop
lea
aam
push
or
add
add
or
lods
fidivs
cmp
cwtl
das
xlat
gs
imul
add
add
add
add
hlt
add
cmp
inc
sbb
add
mov
dec
add
add
push
cs
dec
adc
sub
jb
scas
bswap
rolb
add
enter
push
repz
add
jo
cld
pop
jo
inc
mov
adc
or
add
inc
add
lods
fcmovne
lcall
jae
cmp
insb
mov
cmp
sbb
add
mov
loop
out
mov
inc
ret
jp
sbb
xor
add
add
gs
out
nop
push
scas
ret
jp
sahf
jl
cwtl
cmc
dec
mov
imul
and
add
add
push
ja
jmp
pop
addb
daa
xchg
test
inc
sbb
mov
jb
test
push
adc
add
push
dec
jg
call
add
add
push
inc
ja
flds
add
mov
out
xchg
mov
in
cmpsb
xchg
mov
mov
push
xchg
das
cmpsb
in
aad
or
mov
scas
mov
repz
add
add
push
add
add
add
push
push
popf
shrl
fwait
sbbl
sub
test
pusha
mov
mov
addr16
lahf
imul
xor
fcompl
adc
into
push
pop
mov
dec
push
add
add
add
fwait
popl
pop
cltd
xchg
dec
add
fldt
call
in
add
add
jmp
xor
add
dec
dec
hlt
xchg
mov
mov
int
mov
out
stc
sbb
sbb
fwait
xor
add
add
ret
sub
add
add
jne
pop
test
push
insl
jge
scas
movsb
xchg
daa
mov
in
adc
add
add
lods
inc
sbb
add
add
jp
out
fadd
inc
xor
aad
gs
dec
mov
mov
ss
sahf
cld
sub
js
sbb
add
add
int3
xchg
jecxz
or
aad
imul
cwtl
std
int3
enter
inc
mov
popf
add
add
jo
mov
in
xchg
push
xor
push
mov
mov
mov
stos
jo
pop
adc
mov
push
mov
xchg
pusha
add
add
fidivl
daa
add
push
out
mov
mov
sbb
fcomps
xlat
sahf
inc
mov
in
in
inc
push
mov
pop
sub
in
aam
fidivs
mov
add
jp
jns
dec
xchg
scas
leave
push
mov
xchg
das
loop
outsb
push
fdivl
insl
or
pop
mov
xchg
scas
lea
clc
ret
mov
xor
scas
into
int
in
aam
pop
jbe
lods
mov
lea
sahf
sub
xor
imul
or
add
add
int
fdivl
push
in
jnp
xor
lahf
clc
pusha
add
add
sbb
call
hlt
jno
cmp
add
add
rcll
xchg
adc
scas
test
bound
add
add
cmp
lea
jg
lods
stos
cmp
mov
in
sbb
xor
inc
mov
add
add
loopne
ret
movsb
aas
ja
pushf
mov
sbb
arpl
mov
mov
dec
adc
sub
add
add
inc
lcall
mov
mov
add
sbb
mov
add
add
add
xor
and
out
fisubs
jecxz
adc
retw
or
add
add
jge
cmpsb
lret
arpl
fyl2x
pop
fs
mov
add
icebp
inc
mov
dec
adc
sub
add
stc
out
cmp
cmp
sahf
stos
test
add
sub
add
aaa
push
scas
push
outsl
pop
or
roll
scas
gs
shll
push
ss
aaa
test
add
add
js
ljmp
add
mov
movsb
icebp
cmp
cwtl
ret
pusha
add
add
push
mov
outsb
mov
push
pop
xor
xchg
mov
hlt
dec
jo
or
in
add
add
movsb
pop
fdiv
dec
inc
mov
pop
sbb
mov
hlt
imul
scas
sub
or
lock
mov
lock
mov
jo
mov
fucomp
or
jns
add
add
or
add
add
mov
mov
or
add
add
jge
jnp
jp
mov
cmpsl
push
in
jmp
stos
xor
mov
pop
xor
nop
in
lcall
rorb
add
add
cmp
mov
mov
add
add
inc
icebp
stos
outsb
cmp
mov
cmp
or
test
add
inc
mov
xor
mov
sbb
xor
or
add
add
adc
xchg
shll
lods
shll
xlat
cmc
mov
inc
lds
cmpsl
icebp
add
cmpsl
in
out
xchg
jp
jg
movsb
add
aas
mov
cmc
stos
push
test
add
push
cmp
add
add
add
add
ret
mov
add
add
test
jbe
repnz
push
jge
sbb
in
lods
out
mov
add
sbb
test
test
call
lea
into
sub
add
add
mov
aam
sub
scas
cli
jp
mov
aam
and
sub
sub
add
add
nop
pop
ficompl
enter
sahf
push
out
push
lcall
andb
loopne
mov
repz
popa
jo
adc
insl
stos
mov
cmp
ljmp
sbb
lock
pop
push
fisubs
add
dec
inc
lcall
xor
jb
or
inc
lods
cmp
lods
add
sub
cli
mov
cmp
add
add
add
daa
push
jae
mov
push
pop
push
jmp
xor
lds
xchg
imul
loope
pop
xor
add
pop
inc
mov
pusha
add
add
dec
lret
sub
add
add
push
xchg
and
add
add
add
or
in
jmp
cli
and
in
lret
es
ljmp
lock
ret
mov
push
xor
add
add
add
leave
lret
jb
mov
test
add
imul
neg
sub
sub
sub
jae
movsl
cmp
scas
sbb
jecxz
rolb
cmpsl
mov
dec
test
daa
clc
inc
jp
sbb
mov
add
or
dec
stos
xor
add
add
daa
nop
stos
or
and
add
add
ret
add
add
add
iret
push
push
insb
mov
adc
sahf
int3
push
and
pop
xchg
push
stc
cmp
cli
mov
leave
or
push
mov
mov
call
imulb
mov
rcll
pusha
add
add
scas
push
sbb
popa
aam
jmp
add
add
sbb
xor
xor
or
add
add
fadds
add
add
add
pop
inc
pop
mov
add
pop
mov
es
mov
dec
mov
add
add
pop
jnp
cmpsb
cltd
adc
cmpsb
scas
lret
cmp
add
add
lcall
out
add
add
xchg
mov
test
add
add
jnp
mov
ja
mov
sub
add
cmp
add
add
add
sbb
jmp
das
sub
mov
cltd
lods
fdivl
insl
sarb
pop
dec
adc
add
dec
mov
add
add
or
data16
loop
xchg
mov
or
mov
nop
dec
arpl
jbe
add
add
sub
sahf
sahf
js
jg
adc
lock
cmp
and
and
in
and
inc
xchg
fimull
loop
movsl
cs
sbb
fsub
and
add
add
xchg
sub
add
add
rcl
jg
jmp
sti
insb
add
add
adc
add
add
gs
xor
add
add
xor
call
call
add
lock
pop
outsb
xchg
sbb
inc
mov
insb
add
add
pop
stc
cmp
adc
or
jae
cmp
add
add
imul
add
clc
movl
cmp
push
pop
shl
mov
xchg
cltd
jnp
push
popf
mov
test
jmp
out
sub
push
out
xchg
lcall
add
adc
add
rcll
and
add
add
add
push
push
cmp
jo
pusha
add
add
pop
pushf
frstor
mov
rclb
mov
jp
add
add
sbb
mov
jl
adc
std
push
aaa
pop
mov
mov
jmp
push
mov
sbb
aaa
das
jno
cmpsb
mov
jl
add
mov
or
xchg
sub
adc
add
add
add
test
stc
cmp
mov
std
pusha
mov
pop
inc
add
add
mov
or
mov
add
out
xchg
cmp
ja
loopne
lods
lock
cmp
mov
ret
fcompl
xor
push
dec
xchg
and
add
add
fmull
scas
in
pop
je
arpl
filds
repz
push
or
add
add
pop
mov
inc
test
lret
cmp
out
mov
jmp
jbe
test
popf
fistl
mov
sbb
imul
js
mov
xor
sbbl
movb
add
add
nop
and
add
add
pop
cltd
cmp
add
lods
mov
fcoml
jbe
push
jmp
imul
add
jnp
xor
into
pop
xchg
and
cmp
or
add
and
fnsave
xchg
lods
inc
lock
add
add
sub
add
add
xchg
pop
mov
mov
outsl
sub
add
add
test
mov
push
ljmp
dec
mov
sub
lret
cli
adc
add
add
adc
add
arpl
add
test
rcll
lock
sub
fwait
sbb
jmp
imul
mov
test
cli
push
fcoml
test
mov
aam
push
adc
push
movsb
test
mov
add
inc
add
add
cli
xchg
jp
jg
sub
lods
inc
add
add
jg
inc
mov
xchg
pop
test
in
pop
imul
sbb
mov
add
add
les
sub
add
add
add
nop
sbb
int
xchg
push
jns
lret
and
ds
sub
add
add
add
add
sbb
add
movsb
cmpsb
mov
sahf
cmpsb
cmp
inc
and
dec
push
lods
test
clc
xchg
sbb
mov
jb
imul
xchg
sbb
fs
rclb
push
cmp
addb
cmp
add
add
add
test
data16
add
add
xor
stc
fdivrl
adc
and
jmp
add
dec
cmpsb
jb
mov
aam
pusha
mov
dec
push
repz
fsubl
add
add
pop
cwtl
sbb
lea
add
add
add
add
hlt
les
add
out
ljmp
cmp
jmp
jge
add
add
push
or
stc
xchg
mov
inc
mov
mov
mov
imul
add
push
mov
adc
inc
add
add
jae
fistpl
call
mov
mov
imul
push
and
add
add
insl
jns
loopne
in
add
sbb
in
dec
pop
push
in
and
rep
and
cmp
pop
inc
add
add
jnp
mov
sub
add
cmpsb
iret
out
push
lds
lock
add
rorb
lcall
adc
mov
add
rorb
inc
xchg
lret
sub
add
add
repnz
mov
add
pop
in
push
inc
cmpsb
inc
pop
inc
sub
or
add
add
add
fldenv
insb
add
add
push
xchg
or
or
rorl
add
adc
test
sahf
cmp
int
data16
ljmp
in
add
add
mov
test
lahf
inc
add
add
ds
lods
int
mov
xor
mov
or
add
add
jle
fdivl
bound
dec
addr16
pop
inc
mov
add
das
jns
add
add
cmp
add
push
adc
sub
pop
outsb
ljmp
add
add
xchg
pop
xlat
xor
imul
mov
add
add
add
jns
inc
lcall
lcall
pop
sti
fnstcw
mov
push
frstor
shl
arpl
jb
inc
jbe
cmp
pop
cmp
mov
add
pusha
mov
cmc
xchg
call
push
or
repnz
dec
mov
in
dec
jp
push
int
xchg
inc
or
inc
mov
pusha
mov
cmp
iret
jbe
cmp
add
and
sti
adc
add
add
mov
add
mov
in
aaa
xchg
adc
add
add
loop
repz
or
out
or
add
add
hlt
or
adc
movl
jbe
fdivr
add
add
add
inc
flds
mov
or
add
add
jbe
andl
scas
jecxz
jnp
gs
cmpsb
movsl
imul
test
add
xchg
and
rolb
sahf
sbb
or
add
add
mov
xchg
mov
addb
dec
mov
mov
add
mov
jns
lods
pop
mov
xor
jmp
add
mov
adc
cwtl
cmp
mov
stos
out
leave
jnp
or
xchg
add
add
inc
mov
jecxz
ret
loop
into
sub
les
xorb
pop
jmp
add
lret
outsb
mov
mov
mov
sbb
adc
cmp
mov
addl
add
cmp
push
cltd
repnz
mov
add
add
add
add
mov
or
add
add
sbb
xchg
and
add
das
shll
sbb
add
add
je
out
xlat
bnd
add
add
movsb
jo
or
out
and
cmc
cmp
es
xor
aad
dec
sbb
dec
pop
push
and
daa
cltd
dec
repz
jp
or
add
add
js
int
test
adc
js
mov
mov
popa
inc
mov
movsb
cmp
add
add
add
mov
in
inc
pop
lcall
xchg
add
div
stos
sub
jns
dec
push
mov
out
and
and
fs
ret
daa
subl
add
sahf
inc
push
hlt
pop
sbb
fistpl
insb
add
add
sub
in
imul
add
add
add
mov
add
add
jnp
mov
sub
xchg
xchg
cmp
sbb
mov
xor
cmpsl
add
add
add
in
fadds
xor
xor
add
add
stos
sbb
icebp
sbb
mulb
mov
push
xchg
dec
mov
mov
and
pop
sub
add
add
cmc
cld
inc
mov
scas
pop
dec
sub
add
add
stos
outsb
pop
inc
add
add
xchg
es
push
ljmp
push
fdivr
mov
add
add
or
sub
lods
push
pushf
cmp
gs
jg
dec
pop
adc
fists
fscale
sbb
jg
sub
lahf
icebp
in
cmp
push
jbe
call
add
lahf
imul
push
mov
rorb
das
sub
scas
daa
in
push
lock
push
addb
xor
mov
dec
mov
push
out
test
jnp
outsb
mov
add
add
lock
ja
jb
mov
mov
mov
or
add
add
popf
xlat
loope
addb
shr
out
and
add
add
push
lock
add
add
add
add
adc
pop
pop
aas
xor
out
mov
stos
stos
mov
insl
xor
mov
mov
add
add
jge
mov
lods
cmp
repnz
stos
mov
push
push
loope
sub
shlb
pusha
add
add
call
add
repnz
push
hlt
add
add
add
cmp
lods
mov
lds
cltd
ljmp
add
add
mov
fcmove
and
add
add
push
mov
loop
loopne
shll
push
aaa
mov
adc
push
popa
lea
add
add
cmpsl
adc
addl
sub
in
loopne
jmp
sub
mov
negb
lods
push
push
cmpsl
lods
loopne
inc
add
arpl
add
and
adc
mov
fldt
sbb
int
aaa
cmpsl
dec
add
add
sub
pop
or
sub
push
insb
add
add
xor
add
cmpsb
or
add
add
dec
mov
pusha
mov
outsb
outsl
adc
lods
pop
sar
mov
add
add
sti
lock
cmp
call
add
add
mov
cmp
push
call
pop
jae
enter
setae
inc
mov
add
add
in
lret
insb
mov
jl
fwait
lahf
push
iret
adc
sub
sti
out
xor
add
add
test
aaa
inc
add
add
pop
hlt
sahf
mov
inc
push
pop
pop
adc
mov
test
push
sbb
add
add
inc
repnz
das
push
popf
fcoms
clc
call
sub
add
add
test
add
add
add
add
scas
push
fisttpl
mov
rorl
sub
test
fmuls
add
add
ds
pop
pop
or
ja
add
add
push
fistpl
sub
add
add
lea
jg
imul
add
xchg
push
inc
mov
add
mov
add
add
add
pushw
sahf
stos
shlb
mov
sub
add
add
cltd
xor
jo
ret
sahf
inc
dec
mov
inc
mov
mov
cmp
add
add
fdivrl
add
xchg
int
fisubrs
nop
or
add
add
in
bound
ljmp
call
mov
add
add
push
mov
adc
fcomi
mov
dec
jae
adc
add
push
cmpsb
fildll
add
add
std
shl
jmp
add
pop
xor
mulb
jp
mov
add
in
cmpsb
pop
add
ja
jno
pop
in
xchg
add
rorb
enter
mov
fcmovnb
pop
lret
push
push
dec
add
add
pop
movl
add
add
loop
cmp
push
mull
sub
mov
out
int3
lods
movsb
adc
jmp
addl
call
adc
hlt
popf
cmp
add
fdivl
add
add
int
add
add
orb
ja
scas
popa
sbb
sub
enter
aad
and
mov
mov
dec
mov
and
mov
arpl
sub
xchg
scas
mov
inc
and
add
add
mov
or
lods
cmp
push
inc
mov
sub
clc
cmp
movsl
dec
add
add
add
lret
test
lods
mov
cmp
xchg
cmc
and
into
sarb
adc
lock
mov
push
ret
push
std
int
loope
sub
mov
fildll
fdiv
movl
insl
jecxz
add
add
pushf
ljmp
nop
sti
fisubrs
and
add
add
adc
sahf
inc
push
pop
sub
add
add
sahf
pusha
add
add
sub
repnz
test
add
add
int3
mov
mov
add
ljmp
sub
add
sub
test
mov
add
mov
loop
xlat
pop
mov
js
mov
nop
lcall
cmpl
push
push
lret
imull
jg
popf
repnz
ds
xorb
inc
pop
fsubl
lds
sbb
add
xchg
ret
mov
push
add
xor
int3
add
add
add
xchg
aaa
mov
imul
pop
lock
aas
repz
scas
sbb
xchg
sbb
add
mov
enter
add
cld
dec
sub
add
add
movsb
or
out
cmp
xor
jmp
es
add
add
loope
add
add
sbb
mov
xor
pop
std
jge
cli
fldcw
movsl
mov
outsl
push
mov
xchg
lea
add
add
adc
pop
ret
mov
add
add
mov
in
cmp
js
mov
pop
xchg
imul
mov
fstps
icebp
jnp
sarl
fwait
stc
movsb
dec
or
add
add
jns
push
jno
or
sub
add
add
repnz
mov
aaa
add
xor
in
add
add
add
xor
arpl
and
negb
or
add
add
mov
sbb
dec
mov
mov
mov
int
inc
mov
mov
cmc
pusha
add
add
sbb
or
add
add
jbe
adc
dec
lods
add
mov
mov
and
jp
mov
xchg
stos
sub
pop
jecxz
insl
shrl
arpl
jg
pop
xor
mov
mov
xchg
cmpsl
sbb
push
add
mov
add
scas
push
jmp
bound
and
add
add
cs
and
sti
mov
mov
aaa
test
add
xchg
rcll
inc
add
add
stos
sti
dec
add
add
and
add
add
add
add
aas
push
lea
je
xor
shrl
mov
loope
mov
and
add
add
jle
pop
shl
xchg
push
gs
js
mov
inc
add
add
xor
mov
inc
bound
in
jmp
mov
bound
gs
xor
mov
dec
inc
clc
fwait
adc
popa
mov
jp
xchg
aam
andb
mov
pop
pop
rolb
pop
addb
lcall
les
sub
jg
insl
xchg
mov
and
lcall
xchg
mov
in
fiadds
sbb
add
add
push
adc
adc
ljmp
and
add
add
inc
pop
movsl
adc
add
add
pop
shrb
jbe
dec
xor
mov
cwtl
sub
add
add
es
mov
and
add
add
cmp
in
mov
dec
push
inc
add
add
inc
mov
notl
fbstp
jbe
xor
testl
pop
out
movsb
repnz
push
jmp
fstps
jle
fstpt
xor
add
add
push
inc
lock
add
push
stos
in
push
sub
add
add
icebp
lahf
test
adc
pop
xor
xor
push
dec
mov
xor
cs
dec
add
add
sti
sbb
xchg
cmpl
xchg
mov
add
inc
add
add
out
shrl
bound
and
add
add
cmc
xlat
mov
sub
add
add
aaa
jo
mov
add
add
in
aaa
gs
sti
xchg
mov
or
aad
lock
xor
dec
xor
scas
add
add
add
sub
add
add
out
adc
add
add
add
sahf
dec
inc
mov
push
sub
ja
rol
dec
xor
jae
or
mov
mov
mov
negb
movsl
ss
jmp
ljmp
repnz
stos
mul
mov
add
xchg
add
mov
test
rcr
pop
xchg
fwait
pop
xor
add
add
xorb
or
pop
inc
jp
pop
push
mov
add
add
ljmp
lods
jae
add
add
jecxz
mov
sahf
mov
mov
inc
add
add
add
into
es
add
add
ucomiss
push
jmp
daa
lods
fsubl
mov
in
leave
adcl
add
sbb
xchg
sarl
outsl
or
cmp
out
dec
outsl
jl
jb
sbb
shlb
in
xchg
adc
mov
mov
inc
add
add
xor
ja
aas
inc
and
dec
push
mov
lcall
mov
ljmp
add
add
testl
add
add
das
sti
mov
lret
xchg
shrl
add
add
in
mov
jne
mov
xor
or
lret
add
add
cld
xor
adc
loopne
out
test
cmpsb
out
cmp
and
add
push
mov
mov
cmp
int
adc
ds
add
add
out
push
ss
daa
cmp
and
mov
add
cli
mov
sbb
mov
and
adc
pop
push
fidivs
jmp
lods
mov
outsb
loop
fsubl
imul
mov
mov
rolb
add
add
outsl
fistl
lahf
jae
xchg
int
nop
add
add
addb
pop
push
mov
add
add
insl
stos
ret
lods
or
fwait
mov
add
add
lret
shll
add
add
es
ret
stos
nop
xchg
mov
dec
add
add
fbstp
arpl
lods
sbb
pop
cmp
add
add
add
xchg
insl
aaa
loopne
xchg
inc
aaa
in
loopne
loope
pop
add
add
add
ss
insl
add
mov
and
scas
jns
mov
xchg
mov
add
add
add
add
push
xorl
and
add
add
xchg
in
sbb
mov
sub
mov
push
incl
loope
cmp
add
add
mov
gs
clc
pusha
mov
sub
popf
xchg
dec
adc
lods
sub
hlt
push
mov
into
mov
fistl
mov
lret
push
outsl
pushf
das
lcall
or
out
outsb
lds
mov
sahf
frstor
hlt
hlt
sbb
add
adc
add
add
popf
xchg
int
jle
lds
aam
cmp
imul
add
add
xorl
mov
add
add
add
pop
lods
movsb
imul
sub
mov
ret
scas
test
add
add
mov
cs
popa
pop
fwait
insl
inc
push
sbb
xchg
iret
mov
ja
cmp
or
hlt
mov
mov
sbb
push
cmp
add
popf
shll
out
sahf
stc
lret
lcall
sub
mov
pop
or
cwtl
inc
and
add
repz
int3
pop
jmp
imull
mov
add
add
int
sub
sub
add
add
jae
loope
aaa
add
add
add
add
adc
jmp
inc
adc
jl
pusha
mov
enter
mov
or
add
dec
sub
add
add
cmpb
xchg
loopne
push
push
cmp
push
cwtl
fiadds
out
xchg
bound
inc
inc
add
add
in
in
pop
xor
add
add
shl
cmp
cld
or
loopne
pop
cmp
mov
leave
in
xchg
mov
adc
popa
add
add
ja
pop
xchg
arpl
leave
loop
lsl
mov
jl
sub
push
or
add
loope
inc
add
add
inc
loop
ficoml
or
mov
xlat
mov
pop
xchg
insb
add
add
xor
add
add
mov
rolb
dec
mov
adc
add
add
add
add
aam
push
xchg
adc
mov
xor
fnstsw
xor
mov
mov
scas
lret
xchg
enter
inc
xlat
inc
adc
push
jl
subb
int
cmp
cmpsl
mov
mov
mov
mov
aas
mov
jo
push
xor
fs
iret
outsl
and
adc
clc
add
sbb
add
add
add
add
and
xchg
ss
sub
add
add
add
or
add
add
or
inc
push
jb
xchg
sbb
cmp
insb
mov
das
xchg
mov
loopne
icebp
push
aad
lret
andb
cmp
jbe
pextrw
push
add
add
add
enter
dec
mov
mov
lea
inc
xchg
push
push
sbb
mov
add
add
mov
repz
add
add
rol
stos
inc
ja
dec
mov
mov
jae
cmp
xchg
int
adc
dec
cmp
push
xadd
add
add
pop
das
out
adc
adc
stc
incl
test
xchg
lret
add
add
dec
jmp
data16
mov
jns
pop
call
push
cmp
cmpsb
in
add
xchg
subb
add
xchg
sbb
adc
decb
popa
mov
add
add
add
mov
mov
enter
mov
popa
imul
mov
je
movsl
xchg
into
mov
orl
pop
into
loop
pop
rcll
es
arpl
fisttpl
cltd
mov
jns
add
add
mov
mov
mov
insb
mov
push
or
add
add
inc
repnz
je
test
cmpsb
imul
add
les
es
jecxz
mov
mov
sbb
mov
add
adc
adc
and
push
rorb
add
add
xor
sahf
mov
jae
jge
add
add
add
pusha
add
add
or
fisubrs
mov
add
ror
out
test
sahf
and
fisttpl
loopne
lcall
aas
sbb
cmp
stc
mov
lret
add
add
aad
lods
pop
push
fildll
int3
test
or
add
add
mov
ret
add
add
out
scas
leave
pop
pop
jno
add
add
add
add
add
add
sub
and
adc
xchg
ror
xor
jge
scas
pop
dec
mov
movsl
lds
add
jae
mov
lock
push
sbb
popf
add
mov
add
fldl
and
pop
icebp
pusha
mov
out
dec
add
out
sub
lahf
lods
shr
pop
pop
stos
sarl
or
pop
cmc
leave
cmc
or
add
add
mov
pop
or
dec
add
add
xchg
sbb
mov
dec
inc
mov
mov
repz
pop
inc
add
jns
rcrb
pushf
fists
add
add
pop
testb
lcall
jp
shlb
dec
cmp
rep
pop
sub
clc
xor
movb
add
out
mov
adc
das
push
mov
lock
testb
add
data16
dec
add
xchg
lock
xlat
pop
xadd
sub
add
add
sti
pop
es
aad
repz
mov
add
add
iret
inc
mov
and
add
add
je
out
xchg
int3
sub
add
add
in
xor
add
add
ret
lret
and
sbb
aas
dec
sarl
xor
in
loop
mov
les
mov
add
pmaxsw
adc
into
mov
insb
add
add
icebp
cmp
jo
inc
mov
pusha
mov
inc
js
mov
xor
int3
ljmp
add
add
repz
adc
and
sub
sub
sub
add
add
add
fists
je
add
add
and
fmull
xchg
xor
roll
jbe
jnp
jae
cli
lea
int3
or
or
add
add
pop
in
inc
mov
add
mov
add
add
or
add
add
jmp
sahf
xchg
sub
mov
cmp
add
add
add
mov
add
add
sbb
add
dec
and
lds
jge
pusha
add
add
xor
xor
push
enter
fimull
test
add
lret
out
pop
push
dec
mov
jmp
add
add
mov
xor
test
mov
sub
add
add
mov
add
add
xchg
pop
pop
xchg
out
jg
cs
int
or
cmpsb
aam
nop
pop
jg
sbb
add
add
add
add
xor
add
add
and
add
add
add
pop
test
ja
clc
daa
and
add
add
sarb
ret
daa
xor
mov
scas
hlt
jl
push
mov
xchg
cltd
push
test
mov
add
mov
mov
adcl
add
and
sti
mov
mov
filds
stos
lods
sti
imul
ret
xchg
sbb
int
or
cld
xchg
int
sti
ret
sti
pop
je
repnz
mov
xchg
lods
in
mov
cwtl
jl
enter
pushf
xchg
sub
scas
sti
mov
add
mov
push
stos
movsl
mov
add
add
cwtl
rcr
pop
in
clc
mov
push
pop
out
stos
push
xchg
gs
pushf
jle
rcr
imul
cli
dec
xor
inc
mov
dec
mov
mov
cmp
cmc
push
dec
cmp
jo
int
popa
mov
mov
fcmovnbe
ja
pop
jmp
shlb
loope
inc
bound
pop
cmpb
adc
dec
loopne
adc
out
push
rcll
popf
btr
adcb
out
fcompl
mulb
add
push
add
add
add
insb
mov
pop
add
cwtl
loope
mov
xchg
mov
out
inc
pop
std
movb
add
push
jle
pop
mov
mov
cmp
clc
sahf
fsubs
xor
xchg
pop
leave
sub
and
mov
dec
int
add
add
add
clc
mov
icebp
mov
cmp
xchg
xchg
mov
add
add
outsl
push
sub
add
add
in
mov
push
or
aaa
es
mov
sar
sarb
dec
mov
sub
in
mov
das
add
add
add
cli
pop
cmp
add
mov
xchg
leave
xor
mov
ja
insb
mov
sbb
add
add
pushf
shll
sti
pushf
dec
mov
mov
adc
add
mov
ja
outsb
mov
lds
xchg
jne
dec
shll
popf
push
es
stos
aam
inc
into
sbb
add
add
and
pop
mov
stos
cwtl
add
aaa
std
pop
sub
mov
data16
push
call
add
testl
pop
sub
add
add
dec
imulb
add
add
add
iret
fwait
jo
xchg
js
xchg
add
repz
mov
lock
adc
pop
leave
inc
jbe
mov
ss
mov
lods
mov
or
add
add
repz
cmpsl
pop
repz
or
mov
mov
mov
hlt
loopne
adc
xlat
sahf
mov
add
add
add
call
and
add
add
std
pop
lods
cmpsl
inc
outsb
in
cld
repz
add
lahf
fwait
cli
je
ds
aad
out
mov
aam
stc
or
add
add
jmp
xor
add
std
cmp
lcall
add
jle
fidivl
dec
mov
sarb
inc
dec
add
add
add
jg
push
inc
sbb
aas
add
sbb
add
add
shl
adc
push
push
mov
pusha
mov
emms
lock
add
clc
dec
sub
jnp
les
mov
cmp
sub
scas
or
pop
and
add
add
add
add
add
jbe
push
jg
push
sbb
add
add
mov
mov
loopne
jmp
sbb
cmp
adcl
cmc
jmp
cmc
fsubl
mov
add
add
add
mov
outsl
push
scas
cli
popf
inc
add
add
mov
out
inc
fisubrl
rcl
jnp
stc
out
mov
push
push
push
jbe
push
push
imul
ret
inc
gs
popa
sbb
add
add
add
xor
bound
lods
mov
add
stc
jno
or
in
sub
xchg
push
jmp
je
pop
movsb
xchg
inc
popf
mov
xchg
loope
repnz
mov
xchg
jne
int3
hlt
jp
outsb
xlat
ljmp
mov
add
out
jb
push
pop
lea
mov
mov
add
lea
add
add
fstps
pop
cwtl
out
pushf
xor
lods
ljmp
add
add
sub
add
add
sbb
adc
les
aad
pop
jp
jae
adc
add
add
jmp
xor
sti
dec
push
sbb
jo
mov
add
cmp
add
add
lea
add
cmpsb
ds
mov
popa
into
push
add
pushf
cmp
jne
sbb
sahf
stc
sub
insl
and
pop
aam
nop
loop
mov
out
add
add
add
pop
addr16
add
add
les
scas
mov
add
add
lret
enter
xchg
mov
mov
pusha
add
add
sub
add
add
cmp
xlat
das
enter
adc
add
add
push
xor
cmp
pop
shl
fildl
lar
aad
sbb
sbb
scas
add
lss
cmp
xor
int3
mov
add
add
add
cltd
pushf
aas
repnz
and
add
add
fldl
cld
mov
mov
pop
aas
lcall
mov
push
adc
bound
adc
add
add
stc
mov
add
fyl2x
jle
push
jecxz
sbb
add
add
pop
mov
je
shrl
add
push
sbb
jae
mov
clc
ljmp
insl
cltd
dec
add
add
movb
cmp
sbb
add
add
fildll
mov
mov
mov
add
imul
mov
mov
fisubs
jmp
xchg
loopne
mov
jl
js
scas
jb
clc
xchg
mov
add
arpl
imul
add
add
lock
and
mov
aam
cmp
mov
leave
mov
and
add
add
rolb
clc
stos
xor
je
cwtl
test
cld
test
mov
jmp
ds
add
lock
iret
data16
pushf
je
mov
add
push
jno
out
dec
lahf
dec
popf
fcompl
lret
sbb
mov
add
add
adc
xor
mov
aad
test
add
das
add
add
add
lods
in
pop
cli
cwtl
cmovp
add
add
in
out
test
mov
cli
xchg
mov
xchg
mov
lahf
cmpsl
pushf
push
jne
in
sbb
jbe
out
loopne
dec
les
retw
lret
cld
arpl
int
add
popa
and
mov
lods
popl
mov
add
add
adc
js
xor
lea
sbb
dec
nop
dec
add
add
aas
lea
jae
mov
sbb
mov
add
push
xor
jno
pop
add
jge
push
imulb
mov
lods
mov
adc
pop
pop
or
or
add
add
fstps
push
xchg
cld
in
jmp
fsts
lsl
dec
add
cmp
aam
rolb
sub
aas
dec
jno
push
inc
add
add
mov
jg
out
sub
mov
add
jnp
push
and
dec
mov
xor
mov
add
add
cmp
jp
jp
sti
iret
pop
mov
xchg
lahf
stc
pop
jp
out
test
jbe
repnz
xor
dec
inc
int
sub
jnp
icebp
and
add
add
xor
mov
add
jg
pop
in
push
xchg
je
jb
mov
jne
add
stc
js
lods
enter
lcall
or
fldt
cmc
int3
xlat
loope
mov
imul
xchg
shl
stos
dec
mov
pop
mov
jns
jge
xorb
test
add
divb
mov
stos
neg
mov
push
push
cmp
pop
push
fbstp
inc
es
or
pop
pop
sbb
sbb
out
lock
xor
lock
xchg
push
cld
mov
fistpll
mov
lret
call
pop
inc
add
add
jmp
int3
add
lods
dec
inc
repnz
sub
and
mov
add
add
cmp
pop
mov
jb
xor
dec
leave
pop
out
sar
sub
mov
xchg
incl
and
add
add
enter
pop
iret
jb
in
pop
pop
in
mov
loop
and
lods
pop
push
xchg
int3
mov
sbb
adc
sbb
sub
clc
mov
push
inc
inc
push
push
fdivrl
loopne
dec
inc
stos
mov
pop
fbld
adcb
jl
sub
out
je
lods
jne
cli
imul
fs
mov
jge
dec
push
shll
inc
add
add
dec
fsubl
add
cltd
mov
out
into
mov
pop
sbb
mov
or
add
add
jb
push
mov
or
mov
add
add
add
add
std
test
or
lods
test
daa
ja
push
cmp
add
scas
pop
or
mov
inc
xlat
movsl
dec
and
mov
add
add
sub
add
add
stc
jl
dec
push
push
aad
pop
dec
cltd
in
mov
iret
adc
add
add
jbe
dec
add
add
cmpsl
xor
inc
jg
movl
stos
in
mov
dec
stos
mov
jno
inc
cld
sub
sar
movsb
or
jns
mov
cmp
add
add
push
cmpsb
out
add
add
lahf
push
push
mov
fcoms
push
xor
mov
loope
add
add
popf
sub
rolb
xchg
inc
mov
jnp
sub
mov
pusha
add
add
arpl
mov
adc
xor
sahf
movsb
jle
jo
xchg
data16
fnstenv
add
add
jg
stos
push
icebp
adc
jo
cwtl
dec
addr16
fdivs
stos
daa
lret
push
cld
stos
inc
sbb
xchg
insb
mov
cwtl
push
pop
adc
scas
jnp
lods
cmpsl
inc
rcrl
push
repnz
xor
add
repz
adc
add
add
in
inc
hlt
out
pusha
mov
cld
insl
gs
gs
xchg
dec
inc
add
add
sbb
add
adc
int
leave
cmp
mov
insb
add
add
pop
fidivrs
unpckhps
sbb
ret
mov
push
iret
shlb
mov
loope
mov
test
add
xor
xor
lcall
leave
ds
in
add
add
loopne
add
add
jae
cmp
cmp
add
xchg
lret
add
add
push
push
push
lahf
addr16
pop
stc
inc
mov
into
sti
bound
mov
cs
xchg
in
imul
add
cmp
incl
mov
cmp
fsubrs
push
mov
add
xchg
push
subb
or
sbb
mov
mov
cmp
mov
test
sub
add
add
add
addr16
outsl
jbe
movsl
and
jne
dec
inc
add
add
sti
sarb
stos
out
dec
pushw
mov
hlt
push
in
popa
out
int
or
daa
jmp
repnz
sub
negb
push
add
inc
mov
icebp
or
add
add
sub
lds
add
test
cmc
loope
dec
aaa
mov
clc
pop
mov
jg
jb
dec
fucomp
xchg
mov
sub
xor
adc
mov
cmp
inc
mov
movsl
andb
add
xchg
adc
mov
cmp
iret
icebp
shlb
push
cmp
xor
loop
daa
cmp
popa
stc
mov
add
add
cli
mov
mov
pusha
mov
mov
sti
pop
ja
pusha
mov
add
add
add
stos
mov
add
add
or
xor
jnp
mov
icebp
and
out
pop
or
add
add
add
dec
pop
aad
jae,pn
xor
add
add
aam
icebp
gs
neg
push
loope
pusha
add
add
mov
pop
cltd
jg
repz
inc
add
add
mov
fadd
sbb
dec
pop
out
cli
inc
add
add
mov
or
sub
loop
xor
add
add
mov
std
insl
mov
shll
add
add
mov
or
add
add
bound
add
add
xchg
imul
stos
adc
add
add
pop
loop
dec
dec
clc
inc
stos
ret
inc
hlt
outsb
push
sub
ds
loop
sbb
mov
mov
xlat
rclb
jle
push
add
mov
or
addl
pop
inc
mov
sbb
xchg
bound
loop
fwait
inc
push
xor
pop
push
pop
mov
add
icebp
mov
sbb
and
add
add
xlat
adc
add
mov
cmpsl
jmp
xchg
iret
mov
roll
aad
not
iret
jo
and
mov
enter
lods
ja
std
in
lods
test
sub
add
add
in
movsl
and
sti
lcall
add
adc
scas
out
ret
in
lea
push
icebp
ja
aas
popf
xchg
test
add
sub
adc
call
subb
lods
out
rcrb
and
add
add
out
mov
add
mov
add
add
and
sbb
repnz
idivb
jg
pop
inc
movsl
mov
add
add
push
test
aas
push
lds
sub
enter
addl
dec
daa
or
mov
mov
mov
adc
jb
cmp
dec
lahf
sbb
jmp
mov
popa
push
add
add
add
jle
mov
sahf
ret
aad
jns
cld
ja
add
add
add
loope
mov
jbe
jge
add
mull
movl
repz
push
mov
rclb
sbb
add
idivl
dec
js
stos
and
sbb
loope
loop
push
ja
mov
daa
mov
test
clc
jne
scas
loopne
aad
push
mov
dec
push
into
test
rcl
jge
dec
adc
add
dec
andl
xchg
rclb
enter
xchg
xchg
aaa
cmp
mov
add
add
jbe
rcr
mov
sub
add
add
mov
push
dec
or
sub
xchg
sub
add
add
cmp
push
pop
inc
loopne
jl
or
out
es
movsl
add
cmp
push
adc
bound
jo
jg
and
add
add
enter
sbb
add
mov
xor
into
fsubrl
test
adc
gs
cwtl
sbb
jne
fstpl
dec
mov
sub
add
add
ljmp
add
xor
enter
ret
mov
nop
mov
dec
push
fsts
adc
add
add
add
add
jge
in
int
jb
xor
ret
inc
pop
repz
lar
add
add
ljmp
mov
jmp
push
test
mov
dec
xor
push
sub
xchg
dec
adc
add
cmc
das
stos
cmc
xor
xlat
fcoml
pop
or
xchg
push
vcvtps2pd
add
add
mov
push
inc
mov
adc
add
add
add
pop
push
mov
pop
int3
xor
daa
mov
inc
scas
or
xor
lods
jmp
sbb
pop
in
inc
add
add
cmp
mov
add
add
mov
imul
mov
mov
add
add
lods
int3
sub
mov
and
sbb
sbb
push
jo
leave
insl
subl
loope
rcrl
xchg
pop
je
test
add
add
cmp
xchg
or
add
add
ret
add
add
sahf
mov
add
add
pushf
push
push
shrl
fidivl
add
add
ret
push
lock
cmp
pop
daa
pop
fldl
add
add
jecxz
push
inc
movsb
mov
jecxz
xchg
cld
sbb
mov
add
leave
scas
add
mov
cltd
and
pop
cs
add
add
add
add
add
and
jecxz
add
add
aaa
push
cmp
add
add
in
mov
pushf
mov
add
mov
ds
testl
add
add
add
test
add
add
add
add
in
sbb
inc
inc
mov
xor
add
fsts
pop
cmp
jno
daa
xor
add
sub
add
add
scas
adc
popf
push
movsl
insl
xor
adc
and
lahf
jmp
nop
xchg
push
sub
mov
push
enter
add
in
std
xor
mov
and
mov
add
add
add
add
jbe
jg
dec
sahf
add
hlt
dec
add
add
in
and
add
add
add
in
mov
js
mov
add
mov
and
stc
mov
dec
outsl
cwtl
cmp
add
out
lcall
add
xor
push
mov
jno
mov
push
dec
scas
inc
shrb
add
add
iret
xchg
xor
dec
add
add
ret
sub
add
and
outsb
ret
out
cli
and
add
add
mov
and
adc
pop
cmp
mov
sbb
mov
jo
sub
add
add
sbb
mov
mov
sub
testl
iret
into
call
and
add
add
inc
or
add
add
xor
ret
pop
mov
jae
arpl
mov
add
add
pop
sar
negl
add
push
ret
nop
fs
xchg
sti
mov
sub
inc
jbe
mov
mov
pop
inc
add
add
jmp
add
add
xchg
mov
dec
pop
shlb
fdivrs
out
addb
sub
mov
add
add
fsubr
fnsave
and
add
add
mov
test
jp
in
jne
sub
add
add
neg
enter
add
pop
icebp
daa
popa
in
jae
pop
fisubs
ss
fisttpll
dec
add
add
fiadds
out
sbb
mov
pop
push
or
shrb
mov
xor
sbb
stc
lds
js
add
add
add
lods
cmpsl
dec
xchg
shrl
pop
add
stc
lock
gs
xchg
mov
add
xchg
dec
add
add
sbb
add
xchg
notl
xchg
cli
xor
ja
pusha
add
add
and
leave
cli
cmp
sbb
cmp
iret
mov
mov
pop
xor
push
mov
loope
insb
add
add
dec
jb
dec
push
cmp
inc
add
add
ljmp
cmp
add
add
shll
gs
add
dec
adc
xchg
xor
cmp
notl
in
js
in
xchg
add
sub
add
js
lcall
loop
test
mov
add
add
nop
adc
push
jno
loopne
xchg
and
cltd
arpl
add
add
ss
dec
mov
inc
mov
mov
rcr
xchg
mov
add
add
cmc
inc
mov
cmp
lret
pop
in
adc
fiaddl
mov
ficompl
sub
add
add
sbb
add
adc
mov
add
add
mov
sub
add
add
dec
ret
add
add
nop
scas
mov
sti
pop
mov
aam
shrl
in
mov
shl
push
mov
data16
push
movsb
cmp
add
add
pop
inc
push
test
push
cltd
cmc
ret
shll
jle
int
aaa
mov
pop
jbe
rorb
inc
add
add
lods
stc
push
cli
jb
pop
ja
cmc
mov
inc
mov
iret
mov
iret
jnp
pop
bound
mov
sub
push
mov
add
add
stc
xor
lods
mov
cli
jbe
pushf
xchg
mov
adc
push
mov
fists
cmpsb
xor
add
add
add
add
and
test
pop
xchg
sub
shl
es
cmp
test
insb
add
add
inc
mov
jge
xchg
mov
adcb
dec
jl
sbb
jb
sub
add
cmp
lcall
add
add
inc
ss
in
add
add
add
in
mov
and
add
add
icebp
leave
adc
jl
add
add
dec
cmpsl
mov
cwtl
stos
adc
jmp
cmpb
shlb
sub
insb
mov
clc
in
fldcw
xchg
cmpsb
ret
nop
imul
jmp
scas
mov
stos
cld
inc
mov
mov
sub
add
add
adc
add
add
mov
clc
cmpb
insb
add
add
arpl
pusha
mov
lock
decb
add
int3
cld
ljmp
bound
clc
or
add
add
rcrb
mov
or
add
add
add
add
xor
inc
mov
mov
movsl
mov
mov
gs
mov
add
add
add
shll
inc
mov
test
push
ljmp
mov
add
imul
subb
or
add
add
popa
pop
cmp
call
add
pop
mov
add
mov
adc
inc
cmp
jmp
dec
aaa
inc
mov
add
push
cs
pop
vpunpcklbw
add
add
inc
in
pop
in
scas
cmp
pop
or
notl
les
xchg
push
pop
movsb
lahf
mov
sub
rcr
mov
add
cwtl
xor
clc
push
jnp
lret
out
sub
pusha
mov
les
and
add
add
lods
aam
les
mov
adc
and
pop
sbb
inc
arpl
xorl
mov
jl
paddd
mov
ljmp
push
and
cmc
out
rcrb
fmul
pop
mov
fistps
incb
shll
or
add
add
test
mov
hlt
jne
jecxz
std
int
push
pop
sbb
shrb
test
jne
fstp
adc
in
lahf
subl
mov
pop
pushf
or
stos
call
mov
add
add
dec
cltd
aad
pushl
int3
dec
pop
stc
in
rorl
outsb
repnz
sub
daa
js
jl
adc
inc
xchg
sub
lahf
pop
push
dec
std
xor
push
sahf
jnp
mov
mov
lea
cmpb
add
add
mov
test
out
das
mov
mov
popa
insl
sti
push
ljmp
add
loope
je
repz
in
je
xchg
rcrl
outsl
xchg
push
rcll
push
stos
pop
std
mov
add
repnz
lret
pop
sbb
outsb
jno
add
mov
in
arpl
push
adc
add
add
xchg
fs
test
add
add
daa
cmpsb
adc
mov
xchg
or
adc
sbb
adc
lea
hlt
adc
xchg
subb
nop
iret
sbb
sbbl
jae
pop
xlat
lret
push
ja
iret
out
push
mov
data16
mov
mov
insl
pop
call
mov
jbe
and
add
add
mov
mov
fwait
cs
jmp
jl
adc
mov
call
lea
mov
pop
jg
loopne
or
or
add
add
push
inc
sbb
mov
fisttps
daa
pop
rcll
add
xor
int3
mov
mov
add
add
hlt
sbb
mov
jae
mov
cld
test
add
add
nop
arpl
ds
dec
sub
add
add
mov
stos
mov
push
insb
add
add
push
or
add
add
inc
jb
cmp
or
push
xor
cs
dec
add
add
add
out
lcall
add
add
cmpsl
pop
jg
scas
lock
add
cmp
push
mov
dec
xor
xchg
cltd
xor
mov
ja
sti
in
cmp
scas
out
ds
mov
mov
inc
mov
std
iret
rcrl
push
rorb
jg
call
mov
lret
inc
nop
or
dec
mov
fiadds
add
add
lahf
sahf
mov
mov
repnz
inc
pusha
mov
nop
leave
popf
mov
add
add
dec
mov
cmp
mov
mov
daa
mov
outsb
mov
das
pusha
mov
sqrtps
push
inc
mov
mov
add
add
or
js
out
adc
test
ret
dec
mov
hlt
sub
mov
dec
mov
mov
out
mov
loop
sub
adc
ret
sub
add
add
add
add
mov
xchg
mov
daa
mov
loopne
xchg
mov
loope
stos
addr16
sbb
xchg
lock
mov
rcrb
mov
xor
add
add
mov
add
das
sti
test
and
ss
pop
sbb
add
nop
pushf
sub
or
les
mov
or
inc
js
pop
mov
xchg
mov
mov
mov
aam
dec
jnp
outsb
pop
dec
in
mov
add
add
add
divl
mov
mov
popf
bound
dec
jmp
push
enter
xor
stos
pop
fiaddl
xchg
adc
cmp
xor
in
dec
or
adcl
cmpb
xor
orl
sbb
fsub
data16
sub
mov
push
mov
test
cmc
or
add
jecxz
or
add
add
popf
sbb
in
mov
mov
jg
dec
bound
cmp
popf
cmp
outsb
xchg
push
push
cmp
loop
mov
inc
jno
pop
scas
gs
fistpll
ret
jno
or
ds
cmp
cwtl
pop
pop
or
inc
incl
cmp
inc
clc
sub
shlb
aas
insb
mov
pop
mov
dec
mov
insb
add
add
aas
insb
mov
xchg
lods
mov
cld
popf
pusha
mov
xchg
adc
jp
add
add
add
cmp
enter
add
ret
mov
rep
popa
pop
pop
sub
add
add
add
mov
lods
je
jo
add
add
xor
add
out
add
nop
dec
mov
out
mov
popa
dec
mov
ds
xchg
and
cmovs
add
add
mov
mov
lods
xor
cltd
in
aaa
je
gs
mov
add
push
fwait
cmp
fdivrl
inc
mov
std
cs
push
jg
cmp
jno
mov
shll
pusha
add
add
outsb
jecxz
pop
inc
test
dec
gs
aad
add
add
in
or
add
add
add
add
add
xchg
imul
pop
jecxz
mov
mov
xor
xchg
pusha
add
add
mov
sub
lds
rcr
loope
pop
leave
mov
mov
stos
out
xchg
dec
pushf
xor
sub
jns
mov
add
add
push
addr16
inc
dec
lahf
and
loopne
sarb
aad
jl
jbe
jl
leave
and
push
xchg
jl
add
add
add
push
out
testb
add
mov
jbe
dec
daa
lds
cmp
outsl
mov
js
fwait
adc
jae
movsl
and
jmp
add
add
inc
fcomip
xor
ficompl
push
cmp
aad
ljmp
xchg
cmp
loopne
mov
add
add
call
mov
jno
pop
dec
icebp
mov
mov
js
in
push
push
fidivl
push
jp
jo
add
add
stos
loopne
add
add
fs
add
add
jecxz
xor
push
ret
test
cli
bound
outsl
out
or
icebp
es
mov
push
ret
or
fimull
add
add
scas
pop
mov
shrl
push
lcall
adc
xor
add
add
out
roll
add
add
cmp
arpl
mov
cmp
insb
add
add
ret
rcrl
fcom
mov
push
in
xor
cmp
mov
cmpsb
iret
jl
adc
fisubrl
jge
inc
sahf
or
into
andb
or
mov
push
xor
dec
jno
and
add
add
nop
call
into
outsl
ljmp
add
add
popa
imul
scas
mov
add
add
mov
jl
test
cltd
mov
shl
jge
push
xchg
es
imul
mov
imul
add
add
inc
movsb
fnstsw
adc
pop
shll
cmpsl
and
add
add
sahf
dec
mov
jbe
out
pop
vmread
outsb
lods
add
add
add
mov
sbb
push
inc
test
fmull
std
mov
add
shlb
xor
add
out
lods
jae
and
add
add
add
add
lret
cmp
rcll
and
test
dec
add
add
push
mov
fwait
pop
mov
add
add
scas
push
fcmovnu
insb
mov
xlat
cli
xor
hlt
jne
roll
add
add
subb
add
cmpsl
popf
rcrl
sahf
call
jg
lea
add
xor
pop
inc
and
add
add
pop
add
add
add
push
mov
lock
hlt
aam
nop
stos
jns
in
icebp
test
scas
or
addb
adc
add
add
rclb
rcll
repnz
mov
mov
sarb
inc
leave
add
add
add
call
cwtl
shll
and
add
add
clc
lock
mov
push
jno
or
lds
cs
into
repz
int3
dec
rcll
add
add
pop
insb
mov
mov
orl
inc
add
add
dec
scas
jl
push
or
adc
sub
loop
loope
jb
fdivl
mov
sbb
outsb
sub
lods
sbb
add
add
sbb
add
add
test
sbb
hlt
in
iret
xchg
fcomps
or
add
add
jb
imul
mull
jns
xor
out
leave
inc
scas
push
into
add
or
mov
add
add
into
dec
sub
aad
loope
movsl
or
jge
push
push
aad
xor
add
add
add
aas
ja
xchg
jmp
incl
add
clc
xor
dec
rcrb
cld
xor
pop
inc
cmp
out
rcr
cwtl
cmp
imul
test
sbb
add
add
add
add
add
add
or
add
add
push
lds
aaa
es
cmpsl
das
sbb
push
mov
rcl
scas
inc
mov
repnz
adc
in
jno
pop
aam
pusha
add
add
adc
mov
jae
mov
cmp
call
shrl
add
imul
push
fwait
dec
add
add
int3
adc
adc
fwait
push
cmpsl
sbb
inc
fisubrs
and
add
add
fs
jae
aaa
iret
mov
es
pop
cmp
xchg
mov
fnstcw
out
sbb
add
add
add
mov
js
cmpsb
cmpsb
sbb
add
add
inc
mov
sbb
dec
jge
mov
add
add
popf
add
cmpsb
xchg
mov
nop
jnp
cmp
add
lods
scas
outsb
outsl
inc
add
std
enter
pop
add
add
add
jecxz
jmp
repnz
out
inc
add
add
out
cmp
adc
and
scas
ds
cmp
xchg
movsb
push
movsb
nop
dec
add
add
or
mov
daa
outsb
stos
data16
inc
pop
mov
xchg
mov
addr16
popa
mov
iret
repz
adc
xchg
inc
imul
test
jbe
jo
mov
inc
jmp
pop
aas
dec
add
add
imul
jecxz
push
lret
mov
popa
push
inc
cmc
jno
add
pop
adc
xchg
xchg
imul
insl
inc
cmp
pushf
lods
stc
add
add
add
add
mov
call
pop
xchg
imul
add
add
fs
jo
sbb
or
jo
push
pop
mov
aad
sbb
add
add
pop
test
shl
xor
push
pushf
into
mov
add
add
add
add
std
adc
add
add
fcomip
sub
idivl
push
push
push
je
arpl
add
add
icebp
shrl
add
xchg
mov
add
add
fwait
xchg
loopne
jno
mov
test
test
xor
int3
push
lcall
and
add
add
or
add
add
dec
ljmp
imul
data16
fnstcw
xor
sbb
insl
add
add
add
jecxz
mov
add
add
dec
cs
mov
add
jecxz
cli
xor
fucomp
ret
and
arpl
jle
movhps
jae
mov
je
mov
cwtl
cltd
and
xchg
ret
data16
inc
add
add
pop
fists
pop
movsl
jl
addr16
jge
loope
roll
stos
lods
sbb
cltd
aad
imul
loopne
popa
jns
pop
mov
add
add
outsl
cmpsl
dec
inc
add
add
dec
add
add
inc
sbb
mov
sub
add
enter
lea
lcall
stos
mov
fucomp
test
add
shlb
shl
jb
inc
sbb
jno
std
push
rolb
mov
bound
aam
dec
lret
cmpsl
sqrtps
mov
out
or
out
push
add
add
movsb
in
mov
inc
add
add
aas
fwait
ret
subb
lahf
pop
ret
pop
inc
mov
and
leave
scas
mov
push
lcall
das
jmp
xor
movsl
jb
stos
xor
sbb
sub
add
add
leave
pop
int
jmp
inc
xor
sti
rcrl
mov
inc
in
push
repnz
stos
roll
and
add
add
mov
mov
cmp
inc
add
add
push
cmp
pop
aas
fdivrl
add
add
inc
mov
jb
xchg
movsl
mov
daa
out
add
add
add
in
adc
repnz
push
ret
push
or
add
add
adc
mov
jnp
loope
mov
xor
pop
pop
mov
cmp
les
out
or
scas
or
push
xchg
xchg
push
xchg
mov
xchg
aaa
cmpsb
mov
stos
pop
les
mov
rolb
add
cs
mov
cld
ljmp
call
add
add
push
mov
jae
xchg
out
dec
cmp
xchg
or
add
insl
rcrb
xchg
mov
cmp
in
add
xchg
int
mov
or
pushf
movsb
test
loope
xor
push
fcoml
ljmp
and
push
and
xchg
popa
add
in
pop
or
xor
mov
in
loop
call
or
mov
loopne
and
pushw
mov
jmp
dec
xor
add
push
and
add
add
enter
fdivl
sbb
sbb
cld
outsb
xchg
push
dec
sbb
inc
mov
add
add
movsb
pop
ds
frstpm(287
imul
pop
add
add
add
dec
fdivrl
add
add
out
sbb
shl
cmp
push
fisttps
mov
ret
or
addr16
jmp
cmpsl
aam
dec
movsb
adc
add
add
add
add
lret
add
add
cs
xchg
ljmp
in
jae
stc
xor
mov
sbb
pop
mov
and
add
add
cmp
jnp
mov
add
and
jg
and
or
add
add
testl
add
add
shr
rclb
test
mov
repnz
rcl
jg
mov
mov
inc
imul
or
sbb
fistpll
je
pop
sub
add
add
adc
dec
mov
sub
add
add
add
outsb
das
in
hlt
aas
dec
xor
mov
int3
xlat
lret
jne
xor
mov
test
add
int3
mov
mov
add
add
add
ficompl
add
add
add
loop
add
push
xor
push
outsb
arpl
daa
cmp
rorb
add
add
add
add
adc
pop
pop
and
mov
insl
xor
mov
jp
fsubs
sbb
lods
rcr
jae
int
outsl
mov
loop
pop
in
jns
pop
xchg
push
outsl
adc
and
std
lret
into
xchg
xchg
rol
int
test
cli
push
rorl
popa
xlat
shrl
mov
pop
in
fsubs
in
mov
or
add
add
divl
into
or
mov
out
insb
mov
adc
dec
stos
fsubr
shlb
cltd
arpl
add
and
dec
xor
or
rol
xor
add
add
shlb
mov
std
adc
enter
enter
enter
addl
add
add
pop
cs
ret
mov
inc
xor
imul
add
jp
lods
xchg
mov
add
jno
jb
cmp
or
fstpl
adcb
cs
fldt
aas
xor
and
shll
or
fs
xchg
push
mov
or
add
add
lods
cmp
imul
scas
fsubl
add
add
ss
pop
ds
cmc
sbb
add
push
in
xor
mov
pop
or
stos
arpl
in
sahf
inc
add
add
adcb
add
add
add
xchg
setp
lcall
mov
pop
imul
mov
add
test
fisttpl
jp
or
xor
xchg
xchg
cli
lods
es
dec
add
add
call
daa
mov
add
add
or
add
sub
add
add
and
inc
popl
setb
je
fldt
inc
mov
lahf
pop
pop
and
dec
aad
push
xchg
stc
repz
jmp
inc
lods
push
sub
mov
xchg
push
push
movsb
mov
fwait
add
mov
daa
popf
xor
xchg
pop
xchg
mov
sbb
rcl
cld
adc
nop
lods
push
mov
adc
loopne
add
pop
mov
stos
sub
movsl
jmp
jbe
mov
mov
mov
dec
fstp
not
mov
add
add
fldpi
mov
mov
jecxz
inc
adc
jecxz
sub
add
in
push
sub
mov
push
cmpsl
inc
mov
lds
cmp
fildll
aaa
in
lock
stos
out
loopne
fstl
sahf
cld
rorb
add
add
pusha
add
add
and
add
add
hlt
push
movq
inc
jg
outsl
mov
mov
sbb
pusha
mov
mov
popa
jne
mov
mov
mov
add
add
add
add
loope
cwtl
test
xchg
test
push
lret
pop
sub
add
add
cmp
test
add
add
cmp
adc
addr16
mov
mov
ror
add
add
add
divb
aaa
test
mov
add
mov
dec
mov
jmp
cmp
call
push
mov
ss
and
mov
lret
call
rcl
push
sbb
mov
add
add
push
pop
mov
xor
push
lods
jae
adc
fsubl
fdiv
daa
sbb
repz
sub
adc
push
add
stc
cmp
es
add
add
addr16
sbb
imul
fdivl
test
and
testb
xchg
out
sub
sub
clc
mov
mov
xor
cmc
shlb
jne
adc
divl
pop
push
and
add
add
jl
mov
add
add
mov
add
xchg
enter
jle
aam
adc
clc
sbb
xor
aam
ljmp
lods
cmp
xchg
arpl
out
cli
adc
rolb
add
add
test
jge
sbb
loope
add
add
add
sub
mov
add
lahf
sbb
add
xor
rcrl
js
imul
add
outsb
push
mov
add
add
add
jg
add
cmp
sub
add
add
mov
cld
fs
hlt
les
icebp
lods
mov
ja
or
inc
mov
inc
jl
addr16
sti
mov
cmp
or
add
add
pusha
add
add
fs
mov
xchg
pop
insb
mov
adcb
cli
aad
mov
shlb
ret
push
pusha
mov
daa
int
lds
lock
jge
sahf
xchg
and
test
jb
aaa
ss
cmc
pop
cld
cmp
shrl
add
mov
and
add
out
dec
movsl
jl,pn
in
mov
jno
repnz
jno
mov
mov
xchg
or
outsb
int
subb
add
inc
testl
loop
xlat
outsl
faddp
jnp
cmp
mov
and
imul
ds
add
mov
jmp
add
add
dec
xor
std
pop
push
rorb
push
inc
add
add
cmp
xchg
cmpw
add
add
add
adc
add
add
or
stos
popa
lds
sbb
add
add
add
add
and
xlat
ljmp
add
add
ljmp
stos
and
xor
add
add
mull
orl
push
jae
cmp
add
dec
nop
push
or
add
add
sbbl
adc
xor
jno
or
nop
cli
rcrl
push
sbb
or
cltd
sbb
cli
push
movsb
in
pop
sub
add
add
mov
fiaddl
sbb
rcl
es
das
pop
daa
dec
xchg
or
fidivrs
scas
push
pop
sub
movsl
inc
inc
add
add
ret
dec
or
add
add
add
shll
add
add
add
add
push
std
mov
fsqrt
lcall
add
add
add
add
pop
and
decb
add
mov
sti
leave
inc
arpl
and
leave
adc
sbb
enter
adc
loopne
iret
mov
aas
jno
shlb
add
mov
add
xchg
aam
push
loopne
lods
data16
sub
add
add
mov
cmp
xchg
ljmp
inc
mov
add
add
xchg
add
add
cs
add
add
movsb
mov
adc
hlt
pop
xor
pop
cltd
outsb
daa
push
pavgb
ret
jns
into
and
cmpsb
jg
rcll
inc
in
sbb
outsl
shll
add
add
xlat
jg
pop
inc
add
add
jle
jno
mov
add
jbe
lcall
lcall
add
add
test
clc
arpl
iret
and
add
add
arpl
add
xchg
std
aas
stc
inc
cmp
decb
mov
adc
repz
mov
add
add
mov
mov
dec
mov
add
insl
stos
lds
fsubl
add
xchg
int
xor
ss
cmpsl
es
xchg
pop
int
popf
not
and
xor
add
add
int
mov
add
add
decl
add
add
out
out
clc
mov
dec
push
addr16
popa
shl
cwtl
mov
pop
adc
mov
out
ljmp
jno
std
lock
iret
xchg
jb
lahf
movsl
fnstsw
les
imul
out
dec
insb
mov
dec
add
add
inc
fnstsw
fbstp
add
add
add
nop
push
jno
mov
push
fimull
mov
xor
add
add
pop
xchg
jb
adc
push
repz
pop
inc
add
add
add
pop
aaa
int3
sub
loope
imul
add
cmpsb
pop
inc
test
add
fistps
cmp
int
flds
xchg
lcall
fildll
cmpsl
sub
scas
sbb
lods
movsb
cltd
and
inc
add
add
out
pop
pop
lcall
add
add
add
add
mov
mov
into
test
fadds
add
add
pop
push
inc
push
shlb
cmp
pop
adc
cltd
loopne
lods
repz
lds
aam
imul
jl
out
rorb
adc
andl
add
push
cmp
adc
lds
js
outsl
mov
jmp
push
xchg
xchg
or
or
add
add
lds
add
sbb
xor
add
add
add
mov
nop
push
pop
xor
and
jns
jl
mov
ss
mov
popf
xchg
daa
pop
imul
sti
out
test
xchg
or
les
bound
shrb
lods
inc
lock
fiaddl
add
add
loope
add
add
xor
aad
sub
scas
jecxz
push
cs
push
jb
lret
imul
mov
pop
scas
adc
push
jno
xchg
repz
icebp
sbb
xor
jg
pushf
cmpsl
outsb
nop
jge
les
in
sub
add
add
mov
mov
add
add
add
xor
cmc
shll
mov
or
add
add
push
leave
popf
sti
fs
addr16
cmpsl
subb
nop
pop
mov
inc
jo
mov
rorb
add
out
cmpsb
arpl
mov
std
and
add
add
push
mov
fidivrl
fildl
adc
leave
or
add
mov
and
fnstenv
sahf
and
add
add
xchg
jmp
xchg
push
or
add
add
enter
pop
inc
fistps
sub
clc
aad
mov
cld
jbe
jns
jns
push
icebp
imul
mov
popa
rol
mov
and
sub
add
add
mov
jge
push
mov
jp
adc
add
sti
xor
sub
movsb
lcall
add
sub
mov
adc
dec
icebp
bound
and
fbld
mov
xor
mov
nop
sbb
add
bound
es
lret
lods
sahf
imul
add
xchg
pop
or
add
add
movl
and
adc
mov
loopne
push
scas
add
add
add
add
add
icebp
fwait
nop
lret
lret
loope
lcallw
fistl
add
add
mov
push
call
mov
cli
imul
add
add
xchg
adc
cltd
jb
sbb
inc
or
add
sbb
mov
xor
iret
leave
pop
les
add
add
jo
out
mov
in
stc
jne
mov
pop
shll
out
in
out
flds
out
movsl
push
adc
rorl
sub
add
add
add
add
add
add
in
rcrb
add
add
lcall
push
fwait
and
mov
rclb
mov
cltd
test
movsb
in
cmpsb
pushf
cs
into
lods
sti
pop
push
cwtl
cmp
mov
cmpsl
sahf
push
jl
lods
xor
xchg
mov
jo
mov
mov
loope
xor
popa
mov
add
add
adc
push
pusha
mov
adc
sti
add
add
mov
dec
inc
int
or
add
add
out
sti
dec
add
add
mov
jnp
mov
cmp
aad
in
aas
or
imul
add
add
cmpsb
mov
iret
aas
out
sbb
fistl
cmc
fmulp
inc
add
add
sbb
arpl
mov
jmp
sub
add
add
adc
adc
xchg
dec
pop
xchg
jmp
add
jp
and
jne
mov
add
pop
clc
testl
outsb
mov
int3
enter
or
push
push
mov
add
add
xchg
in
adc
cmp
inc
fwait
mov
sbbl
add
add
sbb
add
in
xor
int
add
add
add
add
add
les
jo
adc
cmc
push
xchg
loopne
stos
stos
mov
aas
dec
mov
fnstcw
in
movsb
jmp
sbb
xlat
imul
inc
div
sub
mov
add
adc
jp
mov
add
add
push
das
fbld
inc
jae
sub
stos
iret
fisubrs
xor
test
inc
lret
dec
dec
inc
cmpsb
daa
mov
jmp
sub
mov
pusha
add
add
xchg
jne
movsb
fld
jne,pn
into
repnz
dec
mov
je
mov
cli
add
add
inc
sbb
mov
cmp
movsl
js
jge
sbb
sbb
adc
into
cwtl
mov
cld
fimull
dec
fisubrs
add
add
add
add
outsb
sahf
loopne
nop
ljmp
sahf
in
adc
dec
daa
add
add
add
mov
mov
mov
cld
or
cli
inc
in
cmp
pop
sti
push
inc
pop
mov
cmc
rol
sub
shrb
mov
lret
xor
mov
dec
sbb
xchg
out
loopne
cmp
shlb
cmpsl
mov
dec
int
add
add
jno
fcomps
mov
pop
loop
imul
add
add
add
fucomip
inc
xor
and
jns
push
xchg
add
stos
xchg
add
add
add
sub
movb
add
mov
push
outsl
push
loope
gs
mov
inc
add
add
add
xchg
sub
dec
mov
mov
xchg
sub
mov
mov
loopne
mov
insb
add
add
sub
push
test
outsl
lcall
add
and
xlat
mov
push
xchg
jbe
xor
int
repnz
push
inc
lahf
mov
ret
pop
addr16
imul
cmp
mov
mov
pop
outsb
pop
adc
jg
jno
test
jg
pop
mov
jl
inc
add
add
mov
cmp
add
mov
mov
inc
popa
cmpsb
pushf
test
mov
leave
lret
idivl
shlb
int3
sbb
lret
pop
inc
push
cwtl
push
out
or
fmull
or
add
add
ror
inc
push
mov
icebp
mov
outsb
fcomps
bound
inc
add
add
xchg
leave
inc
add
add
cld
in
dec
mov
cmp
fdivrs
xchg
mov
idiv
roll
jnp
lock
inc
roll
cld
cmp
dec
pushf
cmp
lret
pop
mov
ds
add
ja
xchg
add
add
add
add
push
rclb
mov
push
xchg
stc
push
mov
jecxz
add
sbb
ret
ds
inc
mov
aad
loop
inc
int3
fwait
dec
pusha
add
add
int3
xchg
adc
in
ds
fsubrs
add
add
push
mov
fimull
push
jns
mov
insl
inc
sbb
adc
or
xchg
push
in
pop
loop
add
add
add
fidivrl
push
out
jle
stos
movsl
jle
add
mov
les
cld
push
lret
lods
push
nop
xor
mov
shrb
add
add
pop
xor
cmc
lret
dec
out
cmp
shll
mov
popa
mov
xchg
push
mov
mov
sbb
mov
adc
xor
xchg
add
cmpsl
and
add
add
cmp
cmpl
pop
ffreep
xorl
mov
sbb
icebp
out
repnz
sub
imul
ds
bound
pop
sub
add
add
bound
add
add
outsb
loope
ja
xor
add
add
stc
add
mov
add
sahf
xchg
push
imul
fildl
leave
jo
int3
mov
cltd
ljmp
add
add
dec
add
add
xlat
xchg
jne
xor
loopne
aad
je
push
hlt
je
dec
or
hlt
adc
icebp
or
add
add
adc
mov
inc
lret
jb
jb
insl
jno
sbb
mov
aad
or
push
add
add
add
push
scas
sti
call
loop
ficoms
loop
and
ja
lods
ror
xchg
jns
add
add
add
mov
insl
jg
xor
out
hlt
or
add
add
cs
test
fadd
test
sub
jp
mov
ja
xor
xlat
in
rol
jbe
jle
fldt
dec
xor
jne
dec
add
add
jecxz
popa
mov
imul
ss
sub
add
add
pop
into
cmp
lods
xchg
shrl
add
add
cmp
fs
rorl
push
out
repnz
insb
mov
sub
add
add
stc
in
cmp
cltd
adc
cmp
mov
push
xchg
sub
add
add
mov
mov
mov
stc
mov
add
add
popf
add
add
add
lods
test
pop
sub
iret
mov
add
add
cmp
or
loope
inc
mov
add
add
stos
cld
stos
sbb
cmp
adc
inc
inc
add
add
and
mov
mov
mov
push
inc
ja
mov
in
inc
insl
adc
add
add
insl
imul
test
lret
out
dec
rolb
dec
jne
and
add
sbb
adc
clc
xor
jge
imull
fmuls
xchg
xor
mov
jne
lret
nop
cmpsb
enter
shll
add
add
repnz
add
fwait
inc
mov
jno
and
jl
cwtl
pushf
scas
fadd
mov
add
add
shll
and
in
nop
cld
insl
jge
addb
jo
and
test
add
add
nop
dec
inc
add
ret
lock
cltd
pop
pop
xor
add
add
ret
adc
fsub
dec
sub
pop
mov
inc
or
add
add
xor
shll
add
mov
mov
dec
xchg
mov
add
add
add
test
inc
add
add
mov
mov
add
iret
ss
add
fidivrl
in
mov
cli
inc
sbb
imul
add
cmp
cmpsb
xchg
sbb
lods
push
push
pushf
and
mov
dec
ds
orb
add
adc
jbe
stos
mov
add
add
mov
testb
cmp
and
add
add
in
cmp
pop
dec
xorl
add
add
out
or
lods
jbe
mov
jnp
fnsave
mov
into
xchg
add
push
enter
cmp
aam
dec
ja
mov
add
add
out
cltd
lahf
mov
pop
dec
out
push
negb
push
xor
add
add
repz
mov
cltd
jl
add
jns
push
pop
dec
imul
cmpsl
mov
gs
aad
cld
cmpsb
insl
jbe
push
out
lret
mov
imul
inc
adc
pop
test
int
addr16
jbe
mov
mov
movsb
push
push
jne
add
add
mov
out
push
push
insb
mov
repz
imulb
jae
popf
test
add
jo
mov
pop
and
adc
mov
jp
push
xchg
jb
mov
std
orl
mov
add
pop
jge
loop
add
fildl
sbb
pop
jg
cmp
jge
dec
add
add
loope
les
into
push
inc
cmpsb
xchg
lea
add
add
push
or
pop
or
mov
ljmp
adc
outsb
mov
sub
mov
hlt
leave
lods
mov
xor
mov
sarb
add
cltd
add
ss
jmp
xor
add
add
xor
out
outsb
cs
mov
sti
or
cmpsl
and
mov
imul
xchg
mov
cmp
jle
mov
push
sbb
out
imul
add
nop
das
jb
cmc
scas
dec
mov
mov
sti
mov
and
int
mov
add
fidivs
add
add
push
fcmovnu
in
jnp
and
cmpsl
push
xor
cltd
fmul
jbe
push
or
add
add
adc
add
add
dec
mov
mov
repz
dec
mov
mov
add
add
add
outsl
fwait
mov
pusha
mov
pusha
mov
les
fucomi
push
mov
out
lods
cmp
pop
test
add
add
add
cmc
mov
mov
movsb
es
andb
mov
mov
pop
data16
movsl
data16
movsb
and
inc
or
pop
xchg
jl
imul
sbb
add
sbb
mov
add
and
sbb
rclb
addl
add
add
cmp
sbb
ficomps
or
mov
add
mov
push
loopne
insb
mov
data16
xor
add
add
es
lcall
add
or
cli
mov
in
gs
xor
add
jbe
mov
cmc
or
xchg
bound
bound
mov
add
add
fdivrl
out
aas
jecxz
inc
mov
in
pop
sub
add
add
mov
lret
andl
add
add
pop
push
dec
out
lret
std
mov
inc
add
bound
std
cwtl
test
pop
jne
add
add
add
adc
sub
test
cld
mov
sbb
cmp
xor
loopne
dec
and
add
add
sbb
sahf
cmp
dec
arpl
int3
aad
shlb
testb
ret
add
add
es
cmp
sub
add
add
stc
adc
lret
pop
jb
mov
add
out
lahf
pop
pushf
int3
fidivl
inc
mov
inc
mov
add
add
dec
cmp
dec
sahf
push
iret
mov
or
add
and
jle
nop
jo,pt
mov
mov
aad
cmp
sub
add
add
and
add
add
gs
mov
mov
fwait
pop
hlt
mulb
aad
push
add
add
add
and
dec
and
add
xchg
sub
or
add
add
add
lods
arpl
clc
pop
lods
pop
jo
pop
push
jmp
sbbb
in
or
push
fisubrl
mov
dec
jo
mov
add
test
sub
push
pop
pop
loop
jp
push
or
jl
pop
addr16
imul
adc
add
add
jns
movsl
or
add
add
push
or
add
add
pop
ret
inc
int
cmpsb
pop
and
add
add
jae
scas
dec
sbb
add
mov
dec
mov
addl
in
es
add
add
cmp
in
pop
adc
aad
dec
sbb
or
clc
testl
int
push
and
dec
and
addr16
jns
cltd
sahf
cli
js
out
mov
mov
ret
push
test
add
add
push
sub
add
add
sub
xchg
lods
inc
stc
ret
xchg
xchg
jge
inc
incb
add
add
jg
loope
ret
xor
testb
mov
clc
xchg
pushf
pushf
lcall
fcom
fstps
add
es
push
fimuls
add
add
jle
cmpsb
mov
add
add
push
in
gs
mov
xchg
test
sbb
repz
xchg
mov
inc
pop
push
xchg
fstl
nop
imul
add
cmp
ja
pop
adc
lea
mov
pop
lea
scas
mov
ret
mov
push
mov
iret
fdivs
add
add
add
jae
popf
rdpmc
stc
mov
xchg
cmpsb
andb
jae
add
add
imul
xor
mov
mov
adc
ret
faddl
cmp
push
dec
push
sbb
lcall
mov
add
add
jmp
add
mov
outsl
mov
mov
cmp
fsubrl
dec
out
inc
lock
insb
mov
add
add
rep
add
test
sbb
adc
add
cwtl
es
fwait
add
xor
sbb
inc
jb
jnp
dec
mov
data16
std
xchg
into
sbb
test
stc
xor
xor
fwait
push
in
inc
mov
add
push
cmp
movsl
sbb
add
filds
add
das
mov
mov
mov
xchg
int3
movsb
repnz
out
scas
push
ret
add
add
stos
mov
int3
mov
or
nop
enter
add
lcall
mov
loop
cmp
cmovle
js
test
add
add
fwait
inc
loope
jne
sbb
in
sub
xor
adc
cmp
pop
scas
cmp
movb
mov
sahf
nop
fisttpl
divl
out
leave
imul
mov
rcr
xor
sbb
add
orb
add
sbb
mov
mov
sub
subb
das
icebp
adc
mov
nop
test
clc
imul
push
jnp
loopne
xor
mov
and
add
stos
adc
fcomi
xor
in
or
adc
cmpsb
in
shr
pop
outsl
adc
or
mov
mov
and
add
add
movsl
shll
dec
or
jo
aad
ljmp
jge
mov
add
add
arpl
push
arpl
scas
sub
add
push
and
sarb
call
add
dec
mov
dec
rcr
dec
fstpl
sub
lock
das
adc
xor
mov
sub
add
add
jno
dec
fisttpl
push
pushf
call
add
bound
add
add
add
add
add
add
add
jae
cwtl
stos
jp
mov
xchg
cmp
aam
in
lock
sahf
and
dec
mov
mov
sub
add
add
fstpt
mov
sbb
add
add
or
clc
adc
or
add
nop
sub
add
add
mov
pusha
add
add
sub
add
add
mov
mov
add
sbb
xchg
inc
mov
leave
into
sub
jno
mov
int3
int
mull
mov
test
fildll
add
add
add
and
xlat
lret
and
inc
test
pop
sbb
call
mov
int3
icebp
daa
mov
into
sub
dec
mov
mov
mov
addl
push
mov
lret
hlt
adc
add
add
mov
hlt
push
pushf
cmp
mov
sub
shrl
dec
mov
pushf
fiadds
jbe
cltd
adc
add
add
call
dec
and
inc
in
xchg
mov
pop
and
divl
xchg
cwtl
jecxz
aaa
into
push
stos
or
add
add
push
sub
int
pushl
add
add
sub
inc
ficompl
je
adc
int
pop
orl
ret
repnz
add
add
add
add
bswap
cmp
push
xlat
negl
add
add
pop
pop
dec
stos
lea
pop
dec
addr16
adc
mov
out
lahf
or
adc
xchg
or
imul
jecxz
add
add
lods
xchg
push
sub
bound
or
push
and
add
add
add
and
jne
mov
add
jecxz
popa
or
dec
and
cmp
mov
lods
mov
mov
lcall
push
fbstp
mov
nop
mov
mov
sbb
mov
mov
mov
ljmp
mov
call
jmp
shll
arpl
outsb
ret
jge
movsl
addr16
push
cmp
xor
add
add
xchg
mov
in
sub
addr16
inc
pop
imull
enter
add
add
popa
jns
test
popa
and
pop
xor
push
pop
add
adc
stc
or
shrb
or
xchg
es
dec
add
add
xchg
movsl
dec
add
add
jmp
mov
inc
add
add
aaa
lds
xchg
or
das
ss
jg
pushf
mov
int
xor
push
push
push
mov
add
adc
inc
push
inc
mov
inc
ret
adc
mov
insl
adc
scas
adc
add
sub
add
add
fistl
add
popf
push
sub
pop
pop
xchg
sti
cmpsb
jns
push
stos
pushf
js
aam
jbe
mov
push
rclb
add
movsl
dec
addb
loope
or
add
add
add
cmpps
call
shrl
neg
dec
sarb
inc
ret
sub
or
cmp
movsl
sti
jl
ficoms
cmp
mov
mov
in
decl
dec
push
add
add
mov
test
es
add
add
adc
add
jg
mov
ficompl
jo
jne
movsb
mov
rorl
mov
sbb
int3
xchg
test
mov
add
shlb
xchg
fistpll
iret
insb
add
add
cwtl
xchg
add
add
add
xchg
inc
mov
jbe
aas
popf
push
mov
push
or
push
addr16
fimuls
das
ja
push
add
mov
mov
add
rorb
dec
pop
sub
sbb
jge
cmp
dec
add
add
mov
mov
imul
sbb
dec
insl
stc
jae
pop
dec
add
add
push
sbb
add
add
add
add
ret
jb
popa
add
add
add
push
in
mov
fidivrs
insb
add
add
stos
push
fistl
or
sbbb
lret
outsb
and
iret
adc
add
insb
add
add
jb
pop
out
punpckldq
xor
mov
add
roll
mov
adc
out
cmpb
iret
or
add
pop
mov
ficoml
mov
scas
or
push
jmp
in
dec
xchg
cmp
add
add
popf
lcall
daa
int3
add
inc
add
add
divb
pop
aas
psubb
pusha
mov
jp
or
test
test
xor
add
mov
fstl
add
push
xor
fnstsw
cmp
cmpsb
xchg
addr16
xor
inc
mov
test
mov
inc
inc
rcll
out
dec
in
movsl
inc
and
cmp
lcall
jecxz
add
add
add
push
push
jb
push
out
jge
sbb
xchg
cmp
cmpl
add
add
push
nopl
mov
loope
rcrb
dec
es
fwait
add
aas
cmp
push
and
add
add
in
pusha
add
add
stos
repnz
add
add
add
add
test
jnp
pop
mov
insl
call
rol
add
add
add
mov
mov
or
add
xchg
add
cmp
add
add
cmpsb
xchg
jbe
dec
cmc
aam
filds
mov
adc
push
push
insb
mov
mov
outsl
ret
pop
cli
jbe
pop
xchg
popf
or
add
dec
or
add
add
loop
mov
xor
push
imul
pop
test
cwtl
sbb
inc
insb
add
add
push
xor
jle
fistpl
movsl
xchg
adc
add
jecxz
jae
jne
cmp
je
addr16
or
add
add
mov
icebp
insl
cld
pop
out
or
add
add
out
add
add
jnp
add
mov
and
push
mov
add
add
xchg
in
lea
pop
add
add
add
sbb
and
cmp
xorb
lds
mov
sub
xchg
xchg
popf
xor
push
repz
pxor
xor
mov
jge
sub
into
in
mov
xchg
aad
sub
add
add
mov
add
add
add
mov
or
add
add
popa
adc
lock
xor
sbb
sub
add
add
aam
fidivrs
sub
add
adc
inc
mov
xchg
in
sub
scas
out
cmp
push
lods
lcall
outsl
sbb
inc
mov
jp
fisubl
xchg
mov
inc
xchg
enter
add
add
xor
add
add
popa
aam
add
add
aas
mov
lcall
mov
clc
int
push
loopne
ljmp
out
pop
in
lret
or
add
add
fidivs
test
inc
or
dec
clc
cmpsb
fcmovb
jmp
jo
jno
jno
fisttpl
mov
cmp
jae
xor
cmp
in
sahf
daa
and
add
add
and
mov
leave
aaa
pusha
add
add
push
cmc
add
mov
push
pop
jmp
add
add
push
inc
data16
mov
add
add
jno
pop
push
mov
nop
cmp
push
addr16
icebp
push
cs
xchg
int3
adc
movsl
js
add
add
mov
add
add
mov
scas
push
sarb
add
sbb
pop
mov
jno
mov
and
mov
add
add
pushf
mov
jno
mov
ljmp
push
shll
ficoms
add
add
add
and
insl
pop
fildl
mov
aad
pop
mov
add
add
add
mov
push
cmc
addr16
movsb
pop
ret
add
add
out
test
inc
xor
pop
jle
fisttps
or
add
add
add
pop
subb
out
add
mov
add
sti
xlat
mov
jnp
stc
or
push
xchg
nop
sub
add
add
cmpsb
and
sahf
ret
negl
pushf
inc
test
cmp
add
cld
mov
outsb
insb
mov
add
add
fstps
jnp
inc
xor
add
add
mov
jmp
lods
fidivl
xor
pop
xor
pop
repz
inc
jne
jmp
and
pop
dec
outsb
jnp
mov
scas
cmp
test
scas
mov
pop
mov
mov
jo
xor
in
mov
push
sbb
and
pop
jle
mov
out
aaa
loopne
and
cmp
insb
add
add
outsb
xor
call
loope
mov
pop
pushf
gs
xor
mov
mov
add
cmp
loopne
cli
nop
loopne
sbb
sub
push
icebp
pop
jge,pn
imul
add
std
pop
lods
sbb
rorl
mov
cs
mov
jecxz
mov
xchg
cmp
mov
xor
cld
lret
mov
adc
mov
mov
xchg
xchg
mov
movb
js
aas
outsl
das
hlt
xchg
fsubrp
js
lcallw
or
add
add
mov
mov
imull
jmp
pop
loop
jno
pop
inc
les
int3
sub
add
add
jl
scas
lods
and
add
add
sbb
cmpsl
xchg
lea
fnstsw
xor
pop
or
add
add
sarl
ljmp
or
lret
sub
or
mov
mov
bound
xor
pop
and
sub
add
add
lods
and
in
adc
jb
test
or
mov
xchg
lahf
pop
out
fwait
lcall
inc
or
cmpsl
sbb
dec
pop
jns
out
add
add
inc
xor
ret
and
push
fwait
imulb
add
add
mov
jp
scas
inc
cmp
add
add
pop
mov
add
mov
aam
add
add
lock
outsl
rol
inc
jb
ja
daa
sub
add
add
jl
and
add
add
jmp
data16
test
cmp
inc
out
mov
in
add
add
add
add
out
and
jo
dec
add
add
xor
add
add
sbb
js
jecxz
lahf
or
js
add
add
mov
xor
sub
dec
jg
push
jbe
ja
sub
pop
sub
add
add
add
add
dec
shlb
jae
andl
add
add
and
ret
aam
jmp
xchg
stc
mov
pop
rol
dec
mov
fadds
add
inc
add
add
lea
lret
addb
add
add
mov
mov
add
dec
mov
dec
add
add
pop
push
std
icebp
pop
cmp
in
add
add
rcrl
imul
mov
push
mov
add
add
add
mov
xor
sbb
ret
cmpsb
jmp
lret
add
add
ss
daa
mov
ret
fdivrs
adc
mov
add
xor
adc
cwtl
bound
and
nop
mov
mov
add
mov
xchg
inc
movsl
insb
add
add
mov
xchg
cmp
jo
into
jl
int3
pop
cmp
mov
clc
dec
pop
cld
add
add
rorb
mov
or
sub
jo
pop
scas
in
sbbb
mov
jecxz
fstpl
test
out
jecxz
adc
clc
out
bound
int3
lds
push
fmuls
sar
lret
add
add
or
add
add
lahf
cmp
dec
mov
add
adc
stc
popf
popa
xor
incl
inc
lods
les
stos
or
add
add
add
add
pusha
add
add
push
mov
add
data16
mov
pushf
test
add
add
push
jbe
cmp
sahf
xor
lar
sbb
or
cli
cmpsl
fisttpll
or
and
lahf
lods
aad
jbe
sbb
scas
jg
add
add
add
cli
and
fistps
addr16
in
mov
cmpsl
jle
add
add
mov
icebp
xchg
pop
into
js
xor
dec
mov
or
or
add
add
ss
std
or
xor
xchg
push
add
movsb
sub
add
add
loop
testb
lock
imulb
idivl
or
add
add
sub
add
cmp
add
add
outsl
negb
add
jae
dec
bound
or
int3
adc
adc
aaa
mov
ja
pop
xor
insb
mov
popf
movb
repnz
cli
decl
sahf
dec
cs
sbb
inc
mov
jbe
sti
jp
loopne
test
add
add
dec
push
lea
cmpsb
sub
lods
mov
pop
adc
jmp
movsl
add
add
add
sbb
in
dec
jns
mov
dec
pop
push
test
sub
add
add
or
add
add
std
ror
cmpsb
pop
iret
mov
js
fs
repz
jnp
add
add
out
push
jnp
xchg
stc
loopne
mov
mov
adc
inc
mov
insb
mov
cmp
ret
lock
rcr
mov
sub
add
add
stos
mov
les
mov
clc
cmp
jl
cmpl
sahf
lock
fidivs
int3
xor
lock
popf
cmp
add
add
les
or
xor
jb
icebp
mov
xlat
pop
fwait
dec
loop
stos
adc
add
add
addr16
pop
fidivs
mov
mov
rclb
dec
xor
stos
ds
inc
lret
push
dec
mov
jmp
add
xchg
pop
sbb
add
jg
fiadds
dec
ja
mov
mov
push
lods
leave
arpl
loope
dec
push
push
or
pop
fsubrs
add
add
mov
mov
or
add
add
add
sbb
sahf
mov
fimull
inc
pusha
mov
pop
rcl
jb
pop
enter
add
mov
in
xchg
sti
inc
xorl
cmp
add
add
mov
mov
add
add
pcmpeqw
mov
cmpsb
cmp
xchg
push
movsl
lods
fcomps
cmp
jmp
loop
test
add
inc
add
add
cld
dec
int3
aam
mov
xchg
inc
add
add
adc
adc
jp
ret
addb
clc
push
mov
inc
insl
mov
cmp
xchg
clc
inc
pop
lock
pop
in
in
dec
add
push
cmp
fidivrs
loop
dec
add
add
cmp
loope
jle
es
cmp
add
sbb
inc
lret
push
push
lret
adc
add
fildl
pop
std
lcall
xchg
fisttps
mov
lret
add
out
or
popa
sbbl
pop
fnsave
js
xchg
xchg
orl
add
jmp
js
or
add
add
pop
mov
sbb
js
xchg
stc
xor
cmp
in
repnz
stc
lret
mov
imul
stos
mov
shr
sub
add
add
jecxz
pop
mov
cmp
fwait
cs
add
add
add
xchg
pop
cmp
mov
test
enter
pop
add
mov
pop
fwait
lret
dec
mov
fadd
jno
int
fcoms
notb
xchg
loope
jg
sbb
leave
aas
add
add
daa
push
lahf
add
mov
arpl
sbb
sbb
sbb
inc
adc
push
inc
push
addl
xlat
pusha
mov
insb
add
add
mov
xchg
lahf
mov
push
cmpsl
jnp
enter
xchg
ljmp
add
sub
sti
push
pop
adc
addr16
adc
sub
mov
loopne
xchg
push
stos
push
popa
into
pop
mov
dec
mul
sahf
push
xchg
lods
shll
pop
sahf
inc
mov
iret
pop
xchg
lods
pop
repnz
testb
je
push
jnp
adc
and
je
ds
and
out
inc
push
ret
rcl
push
notb
out
hlt
test
dec
sbb
mov
push
and
out
daa
fwait
iret
das
lods
lods
fsubrl
imul
imul
pop
lret
imul
pop
negb
fsubrs
pop
sti
sub
adc
pusha
add
add
lcall
mov
xor
jge
pop
in
cld
jmp
push
xlat
call
add
add
dec
enter
fdivrl
mov
fidivl
add
add
add
dec
cwtl
add
ja
popl
test
and
dec
add
add
ja
shll
clts
push
push
mov
add
pop
stos
xchg
stos
add
pop
stos
push
mov
push
push
sub
push
sbb
jns
test
mov
mov
stos
scas
mov
mov
addr16
mov
add
add
push
pushf
adcb
push
mov
jge
lret
xchg
pop
dec
or
add
scas
rcrl
mov
stos
ret
mov
add
add
pop
sub
add
add
add
add
xchg
repnz
sbb
es
lock
fdivrp
jnp
rol
pop
sbb
in
stc
outsl
cli
cltd
xor
cmp
sar
jnp
mov
ret
lods
xor
mov
add
aam
dec
in
mov
add
add
jle
enter
loope
cmpsb
jno
mov
sbb
mov
outsl
leave
fmull
add
aad
orb
and
movsb
and
add
add
mov
outsb
adcl
lea
gs
mov
mov
jbe
mov
adc
add
add
pop
ret
aad
out
pusha
mov
out
pop
mov
out
cltd
int
daa
pop
push
imul
stos
pop
dec
add
add
movsl
pmaddwd
adcb
mov
jg
mov
add
inc
xchg
scas
addb
pop
mov
pop
inc
inc
mov
and
enter
sub
add
xchg
sub
and
add
clc
insb
mov
clc
inc
mov
enter
add
sub
pop
out
pop
fldenv
xchg
fmul
icebp
push
sub
jle
cmp
mov
inc
imul
add
fiadds
outsl
jp
dec
fdivrs
mov
add
add
add
push
dec
add
add
addr16
xor
add
flds
add
add
cwtl
jno
xor
and
fsts
sub
ret
mov
jns
sub
ret
pop
inc
sti
xor
add
add
pop
pushf
push
pop
jb
push
push
pop
add
add
add
xlat
cli
jl
mov
mov
xor
mov
filds
add
xchg
mov
scas
ljmp
cmpsb
pop
push
fs
std
xchg
adc
jge
cld
cmp
out
mov
and
add
add
or
add
add
push
jle
jb
in
movsb
pop
adc
inc
inc
mov
in
insb
mov
int
insb
add
add
repz
add
add
add
add
xchg
out
or
add
sub
repz
or
add
pop
xor
add
mov
fidivl
sti
push
sahf
pop
and
sub
cmp
les
loop
in
mov
dec
add
add
loop
adc
push
icebp
out
pop
sti
pop
rorl
mov
addr16
data16
mov
fwait
and
add
add
xor
jl
imul
mov
inc
out
jno
sti
jp
add
add
test
jae
pop
pop
fdivl
push
arpl
jecxz
jge
mov
and
and
xchg
scas
mov
push
push
cmp
rorb
xchg
xchg
adc
fsubrl
das
xor
xor
jge
cmp
test
ds
add
add
andl
add
stc
fdivl
gs
mov
add
xor
outsl
jne
aad
add
add
and
add
add
ret
movsl
daa
repz
add
add
pop
inc
mov
imul
mov
imul
pop
and
and
sarl
sbb
ffreep
cltd
jmp
mov
push
emms
lock
and
stc
fcmovnu
std
add
cmp
in
mov
test
mov
je
xor
xchg
arpl
outsb
jo
adc
inc
mov
push
dec
mov
pop
das
shll
lret
in
inc
mov
popl
pop
loope
mov
pushf
cmpsb
xor
push
sbb
les
lds
adc
add
add
jl
and
movsl
insl
mov
xchg
xchg
mov
xchg
or
cmp
add
add
int3
mov
aas
jo
mov
and
pop
fwait
call
stos
test
dec
add
add
jge
call
xor
jmp
subps
lret
cmc
sbb
out
aas
aam
sbb
inc
sar
adcb
add
add
jecxz
fisubs
test
stos
cmp
testb
add
dec
negl
sbb
push
jmp
inc
push
test
divb
sbb
int3
mov
add
jns
sahf
mov
xchg
stc
cs
repz
add
adc
mov
add
into
pop
ss
lods
fadds
add
add
jle
jno
sbb
andb
out
push
dec
jmp
add
adc
xor
jnp
insl
fwait
fs
outsl
fsub
and
pop
push
pushl
add
add
and
inc
xchg
in
aam
add
sahf
jg
xor
and
int
and
fbld
or
add
add
popa
stos
shll
pop
icebp
inc
sbb
mov
mov
mov
cmc
int
sbb
std
das
hlt
jp
aad
xchg
aaa
mull
mov
movsl
xchg
fldenv
mov
rep
mov
inc
test
dec
adc
add
add
loop
pop
pop
stc
lahf
in
add
add
add
add
scas
jo
int3
mov
mov
xor
pop
fbstp
sbb
sti
dec
add
add
and
add
add
sbb
lret
test
orl
add
add
add
cmp
xchg
pop
shl
lods
push
push
xchg
in
mov
ret
mov
inc
push
movsb
dec
outsb
shl
sbb
mov
sbb
lret
lods
cwtl
sub
daa
xchg
fwait
pop
aaa
pop
enter
mov
add
add
add
add
mov
add
repz
mov
enter
jb
test
xor
mov
std
mov
add
int3
lock
mov
xchg
mov
scas
imul
add
add
ret
or
loope
dec
mov
xor
call
add
aad
xchg
lods
and
loop
jmp
repz
enter
nop
sar
pop
or
mov
jle
das
mov
add
add
add
movsl
dec
sbb
mov
faddp
sbb
mov
mov
aaa
stos
xor
jmp
sarb
adcl
outsl
cmp
sti
data16
subb
test
sbb
nop
aas
hlt
inc
xchg
jo
iret
insb
mov
xchg
sbb
pop
mov
test
in
lods
pop
sti
fists
jns
push
cmp
add
add
pop
popf
insl
dec
mov
sbb
int
add
sbb
pop
sub
imul
or
inc
mov
mov
add
add
mov
add
inc
out
pop
aam
push
out
arpl
and
add
add
shrl
add
sahf
sbb
mov
or
push
adc
add
pop
xor
add
pop
add
add
add
cli
jo
pop
push
mov
add
push
push
jae
movl
test
daa
ja
sahf
mov
xlat
pushf
and
add
add
sub
add
add
cmpsb
cwtl
ljmp
daa
in
gs
ret
inc
sub
rorb
pop
pusha
mov
mov
mov
xchg
mov
js
mov
or
lcall
or
add
add
xor
rcrb
and
xor
nop
pop
xor
xchg
mov
sarb
xor
xchg
cmp
mov
add
add
pop
sub
add
add
sbb
out
xchg
add
incl
outsb
fstl
sbb
repz
cmpsb
xor
bt
add
add
fnstcw
xor
xor
jmp
xchg
int3
mov
mov
test
daa
add
add
add
add
fwait
xchg
mov
sbb
fstps
fwait
std
push
lds
aas
mov
mov
add
add
adc
add
lahf
enter
enter
cld
mov
dec
add
add
jge
inc
and
ss
xor
cmpsb
xchg
in
not
test
cs
add
bound
inc
mov
lret
add
add
stos
fxch
dec
mov
mov
loopne
stc
call
fisttpll
pop
test
std
xchg
shlb
inc
mov
push
push
mov
lret
out
movsl
iret
ret
jae
mov
jge
imul
jecxz
mov
push
insb
add
add
outsl
pusha
add
add
stos
lahf
stos
in
lahf
repz
dec
push
ficompl
jle
cltd
test
jle
pop
push
and
mov
imul
je
adc
lods
pusha
mov
stos
aaa
xlat
and
loop
inc
add
add
insl
daa
sbb
mov
inc
out
dec
add
add
adc
daa
std
mov
bound
dec
jbe
pushf
lods
xor
and
add
add
aaa
jp
add
push
sub
lea
pop
fisttps
add
add
adc
jge
outsl
mov
pop
mov
push
stos
and
push
cs
popa
js
inc
add
add
sbbl
add
add
hlt
cmpl
mov
in
jmp
mov
mov
cmpl
add
mov
add
dec
add
add
or
add
add
cld
rorl
mov
mov
mov
push
fisttps
add
add
mov
aas
sbb
mov
add
js
and
add
add
std
lock
ret
mov
pop
add
add
add
add
add
aas
ljmp
xlat
dec
mov
out
movsl
aam
mov
fistl
xor
or
mov
and
add
add
cmp
sub
lods
push
cld
pop
xchg
add
add
sbb
clc
pushf
adc
mov
mov
push
test
adc
add
cmp
add
mov
dec
or
inc
mov
sub
add
add
cwtl
sub
cli
aaa
in
cs
add
cmp
adc
fstpl
test
out
mov
addb
fnstcw
imul
mov
shlb
test
cs
add
add
push
les
add
add
pop
cmp
movl
mov
xchg
push
stos
mov
stc
lea
xor
xorl
mov
add
add
aas
and
xchg
push
test
add
add
pop
lcall
add
push
ficoml
pushf
les
das
inc
out
cli
test
add
add
stos
add
mov
out
adc
iret
push
dec
add
add
add
mov
mov
ret
mov
sahf
int3
mov
mov
jae
mov
xor
in
xchg
int
and
cli
or
mov
test
cmpsl
mov
scas
repnz
pop
push
rcrl
test
cmp
adc
jle
aas
into
push
push
and
jmp
xchg
dec
ret
mov
rep
aad
xor
jne
aam
sub
jecxz
xor
aam
inc
cmp
jle
pop
xchg
mov
fcompl
in
aad
mov
xchg
mov
movl
outsl
fimuls
mov
or
and
pop
test
sahf
push
push
push
jg
jp
add
mov
inc
sarl
cltd
cli
es
or
add
add
or
add
add
scas
and
mov
lds
inc
lcall
mov
pop
icebp
jnp
cltd
cltd
clc
mov
xor
icebp
sbb
test
loopne,pt
dec
arpl
dec
jl
movsb
in
popa
xlat
test
dec
mov
mov
sub
dec
cmp
stos
inc
mov
jne
add
sahf
adc
lahf
js
push
push
mov
mov
mov
inc
add
add
xlat
int3
push
xchg
daa
cmc
xchg
shrb
data16
sbb
aad
dec
decb
outsb
xchg
cmp
push
cmc
pop
xchg
jne
aam
mov
mov
outsl
loopew
xor
mov
movsl
or
add
add
outsl
out
lods
xor
fs
jbe
xor
xor
and
stos
jnp
inc
mov
dec
fiaddl
add
and
leave
mov
in
sbb
insb
mov
mov
mov
mov
fucomp
cmp
xor
inc
dec
lahf
adc
add
add
call
out
jns
sub
test
mov
decb
xor
cmpsb
inc
push
sbb
out
sbb
divb
rclb
ds
xor
lods
lret
add
add
pop
insb
mov
mov
arpl
and
add
add
mov
mov
lret
mov
add
aad
inc
cbtw
or
push
and
add
add
mov
add
add
adc
pusha
add
add
icebp
popa
adc
insb
mov
or
loop
pop
jb
mov
sub
jns
mov
adc
lods
jo
loop
stc
jae
push
stos
push
adc
xchg
jmp
push
mov
add
mov
add
xchg
xchg
arpl
sahf
xor
stos
adc
xor
ljmp
in
push
sbb
sub
mov
or
xor
ds
and
jno
mov
scas
cmp
add
add
jmp
leave
xchg
mov
sbb
mov
and
mov
iret
add
sub
jae
lcall
fdivrs
add
cwtl
cmp
or
dec
lock
add
add
add
or
mov
enter
add
cltd
sbb
sbb
mov
pop
xchg
pop
outsl
dec
mov
lahf
jle
pop
xchg
push
jl
add
mov
leave
xchg
jb
add
add
icebp
hlt
call
mov
add
add
add
pop
lgs
add
add
dec
pop
sub
add
cmpsl
fstpt
aaa
push
jnp
pop
dec
mov
sbb
stos
in
pop
fwait
jmp
add
add
push
icebp
arpl
iret
inc
add
add
sbb
out
or
and
add
add
add
xlat
mov
out
cmpsl
inc
sbb
or
add
add
pop
push
xchg
insb
add
add
mov
jp
mov
sub
daa
loopne
inc
mov
loope
lds
call
or
add
add
les
ret
bound
jne
cmp
add
hlt
jns
mov
xchg
and
cmp
out
push
dec
rcrb
push
push
dec
fwait
mov
call
mov
jge
daa
loope
adc
or
out
push
push
test
dec
and
aaa
mov
pop
inc
add
add
push
jl
sub
aad
out
test
je
push
ret
jmp
cmpsl
or
add
repnz
cmp
add
mov
mov
jp
adc
cmp
aas
int3
cwtl
mov
add
add
xor
adc
dec
out
mov
add
add
icebp
add
add
add
pop
imul
mov
jp
in
inc
mov
iret
dec
cli
mov
mov
mov
pop
icebp
cmp
pop
test
stc
add
add
mov
js
les
inc
outsb
inc
push
sahf
rol
xor
add
xchg
xchg
cwtl
ds
sub
add
add
sbb
mov
mov
into
jb
data16
sbb
in
scas
mov
mov
xor
nop
xchg
jae
test
std
mov
add
sti
add
add
add
and
add
add
mov
xor
lds
orl
and
add
les
xchg
and
add
add
jmp
lock
pop
addb
leave
arpl
adc
jno
dec
dec
xchg
ljmp
add
add
rep
fildl
pop
xchg
outsb
push
mov
les
jbe
subb
cmpl
add
add
shl
jecxz
mov
iret
xchg
mov
dec
adc
popf
roll
nop
ja
sub
add
add
lcall
add
cmp
add
add
dec
lcall
mov
arpl
outsb
and
xor
add
or
jno
mov
mov
dec
mov
xchg
or
cmp
add
add
add
add
add
mov
leave
inc
add
add
sbb
push
in
in
push
cmp
stc
sbb
inc
mov
aad
and
jnp
lret
adc
xchg
cli
imul
sahf
ficompl
cli
iret
adc
cmpsb
push
popf
aaa
adc
pop
cmpsl
mov
push
xchg
addr16
cltd
adc
cltd
dec
add
add
jns
xchg
sub
add
push
scas
jl
fisubrs
jle
and
insb
add
add
dec
push
xchg
aad
jle
mov
in
sub
mov
add
push
fwait
sub
fisubrs
add
add
inc
pushf
fcmovnb
jp
aam
lea
jge
mov
mov
jmp
call
add
add
push
test
shll
push
gs
xchg
ret
add
out
imul
insb
add
add
dec
mov
add
add
stos
addb
je
jge
or
sbb
dec
mov
mov
jae
das
dec
sbb
lret
xorb
cmp
xchg
and
jbe
subl
add
jne
xchg
push
fisttpll
out
xchg
cwtl
cwtl
xchg
pop
or
call
mov
sbb
je
add
add
cs
cli
mov
jae
test
test
jg
call
stc
mov
add
add
add
inc
mov
cwtl
jb
mov
inc
shr
mov
push
lret
loop
sbb
jno
jmp
outsb
leave
adc
nop
sub
fisttps
add
add
in
add
mov
aas
and
mov
dec
movzwl
aas
call
lods
and
imul
or
pop
rcrl
cmp
addr16
popf
push
mov
aas
xchg
adc
add
add
mov
inc
into
iret
into
add
stos
add
dec
sub
sbb
xchg
andl
clc
call
mov
pop
out
aas
inc
mov
add
xchg
mov
sbb
scas
jp
push
bound
sbb
add
add
xor
daa
aaa
sub
inc
test
pop
int
nop
jl
out
add
mov
aam
mov
jle
js
push
add
mov
and
add
add
add
add
add
cwtl
stos
pop
outsl
test
repz
enter
gs
mov
in
push
jnp
jbe
mov
mov
push
inc
mov
dec
add
add
inc
test
inc
nop
mov
add
add
mov
notb
fdivrs
stc
cmp
jnp
push
fsubrl
fwait
es
fwait
cmpsl
addb
push
mov
add
loopne
clc
jbe
mov
cmp
push
xor
push
out
repnz
arpl
dec
add
add
fildl
inc
pop
repz
imul
mov
addl
add
jmp
lock
sbb
fdivp
xchg
sbb
mov
xchg
xchg
jne
mov
mov
gs
add
cmp
add
add
imul
xchg
xchg
loop
pop
adc
ds
add
add
ret
les
insl
insl
mov
add
lret
outsb
sub
sbb
std
or
add
add
push
loopne
adc
and
cmpl
xorl
ret
adc
or
lahf
lahf
push
mov
hlt
inc
ret
and
outsl
jp
xor
and
add
add
sbb
mov
lock
add
add
xor
sub
add
add
sub
mov
jmp
push
mov
lea
loopne
sar
iret
and
xor
movsb
fwait
xor
and
out
fucomip
ficompl
cmc
insl
lret
add
add
add
mov
xchg
call
add
mov
fabs
mov
xor
push
xorb
xor
iret
sbb
add
inc
mov
scas
mov
and
or
or
enter
mov
add
mov
add
add
push
inc
add
add
mov
leave
jnp
cmp
test
nop
lea
push
add
adc
mov
sarl
add
add
add
add
sarl
add
push
arpl
jecxz
subl
cmp
inc
add
add
mov
add
mov
add
add
pop
sbb
cli
add
add
add
ret
jp
adc
mov
cmp
sbb
or
inc
add
add
mov
inc
xchg
ja
icebp
mov
mov
push
fcmove
and
add
add
call
adc
out
cs
mov
inc
mov
sub
xchg
pop
pusha
add
add
jnp
and
pop
jbe
or
add
add
ret
xchg
inc
mov
outsl
sahf
ret
jecxz
and
popa
sahf
lcall
mov
add
mov
nop
fcoms
pusha
mov
dec
mov
inc
or
xorl
add
fcoml
cltd
push
repz
add
cmp
not
addr16
mov
out
jb
fbld
add
mov
add
add
clc
lret
sar
fld
jg
ljmp
mov
scas
movsb
arpl
push
js
int3
lahf
incl
arpl
nop
lea
mov
sub
add
add
xor
xorl
and
pop
mov
add
and
add
add
cltd
cwtl
xor
int
ja
je
or
pop
or
inc
add
add
movsl
push
jle
nop
rcll
pop
insl
dec
popa
popf
lea
add
and
add
add
sahf
mov
mov
or
popf
mov
add
cmp
stc
pop
push
mov
mov
sub
add
add
sub
cmp
cmpb
push
ds
int3
jge
push
fsubrp
cmp
dec
adc
orl
add
inc
idivb
and
xchg
xor
add
add
enter
mov
fldlg2
xchg
out
cs
sub
mov
into
pusha
mov
inc
add
add
rcr
dec
mov
xor
mov
sbb
shlb
add
mov
rcrb
dec
movq
inc
shrl
movl
inc
mov
sarl
das
xor
jno
addr16
add
sub
sahf
jb
outsl
xchg
mov
add
or
fdivrl
add
sbbb
movsl
cwtl
mov
add
imul
or
jmp
push
aad
dec
addb
mov
stos
mov
push
sub
rcll
and
mov
into
add
mov
inc
push
adc
pop
ds
dec
and
dec
jp
ret
cmp
xchg
fidivrl
jno
push
xchg
adc
hlt
call
dec
out
dec
mov
out
enter
adc
mov
push
fstps
mov
push
xor
add
add
push
test
jmp
sub
add
add
dec
or
and
outsl
es
mov
ja
andb
shlb
cld
ja
les
mov
cmp
sbb
dec
lock
pop
xchg
shll
stos
mov
cmpl
sub
add
add
lds
sbb
loop
es
add
add
add
cli
jecxz
in
sbb
sbb
outsb
pop
or
lahf
jb
add
add
add
add
add
iret
mov
stos
hlt
pop
jae
repz
add
add
push
movsb
popf
iret
and
les
adc
xchg
mov
aas
pop
repz
clc
cmp
arpl
add
add
out
add
add
or
xchg
xor
out
fstl
cld
dec
ret
inc
stos
xor
insb
mov
mov
icebp
inc
aas
ret
jo
push
clc
mov
add
add
cmp
add
add
inc
mov
push
sub
int
pop
lret
jg
pop
aad
rorl
out
mov
cltd
lcall
inc
adc
mov
push
or
or
push
add
lds
or
add
fs
imul
add
mov
cmp
and
xchg
inc
add
add
cli
add
add
add
lods
sub
add
add
das
scas
out
mov
mov
rorb
mov
repz
add
jno
lods
int
icebp
inc
je
pushf
mov
sbb
dec
add
add
jge
jne
add
add
and
add
add
mov
sub
add
add
add
add
jb
cmpsl
push
rolb
mov
inc
in
cld
lock
jge
arpl
aad
les
add
add
xor
adcl
mov
sbb
scas
push
movsb
jg
sub
add
add
cli
push
sub
add
mov
lock
mov
pcmpgtd
dec
sbb
xchg
cmc
cli
ret
xor
aad
movsl
sbb
push
xor
ds
mov
inc
mov
insb
add
add
and
add
add
lods
adcl
cwtl
aad
loop
call
mov
sti
dec
push
sti
gs
out
cmp
add
arpl
fadd
pusha
add
add
cmc
mov
push
lods
mov
jnp
or
push
or
add
add
mov
cmp
xor
mov
add
add
aam
scas
lods
jo
ficoml
scas
je
inc
add
add
add
add
sahf
dec
push
mov
jmp
pop
xchg
push
mov
mov
arpl
xchg
mov
movsl
ss
push
jnp
fidivrs
in
lods
jne
push
imul
int
mov
add
xchg
mov
imul
jbe
fs
out
jle
out
mov
add
add
jg
mov
int
lods
stos
adc
imul
dec
adc
test
in
jnp
in
subb
add
add
das
out
jl
pop
in
add
add
inc
push
fcompl
add
add
shrl
sbb
sti
fmuls
cmp
mov
lcall
mov
inc
push
xor
xlat
shrb
add
add
shr
es
jnp
out
push
pop
or
add
add
xor
scas
mov
jns
adc
jae
mov
inc
mov
sub
js
sub
mov
mov
add
sbb
stos
lcall
out
loop
insl
jne
and
dec
in
ds
mov
mov
jl
or
add
add
hlt
enter
test
xchg
jo
call
sub
add
add
xchg
repnz
ds
mov
jecxz
in
daa
jo
in
push
mov
mov
in
shll
push
or
add
add
xchg
test
jge
packssdw
add
out
ljmp
insl
pop
in
dec
enter
mov
popa
mov
mov
aas
pop
lret
jle
mov
add
dec
add
add
push
add
mov
mov
dec
add
add
lea
lret
int
arpl
or
pop
jle
mov
pop
test
and
add
add
add
add
shrb
test
mov
in
pusha
add
add
int3
mov
enter
pop
repz
mov
dec
leave
push
iret
or
fcmovne
sti
push
push
das
pop
pop
fcompl
push
mov
sub
enter
rolb
jmp
dec
adc
mov
push
sub
in
dec
mov
adc
bound
push
out
pop
insb
mov
test
mov
cmpsl
int3
mov
popa
mov
push
je
jle
mov
add
add
jnp
pop
sti
out
pop
mov
pusha
mov
imul
add
add
xchg
sbb
movsl
mov
add
mov
add
je
sub
add
add
jge
ret
push
push
sub
jecxz
mov
jg
test
cmp
jno
imul
shll
add
add
outsb
jp
lret
pusha
mov
into
fcomi
divb
pop
les
jg
pusha
mov
adc
or
adc
in
jmp
dec
mov
xor
dec
mov
xor
and
add
add
xor
cltd
ror
fstl
inc
adc
xor
scas
fwait
mov
popf
into
cmpsb
adc
ja
dec
xlat
push
and
inc
outsl
stos
arpl
jl
xor
cli
les
jl
bound
add
scas
push
push
test
stc
test
and
and
add
add
fdivrs
hlt
xor
ret
inc
jmp
sbb
scas
or
adc
dec
in
jge
pop
sarl
pop
adc
add
add
lock
dec
add
add
add
adc
add
add
add
sarb
addr16
cmp
dec
ljmp
and
add
add
jae
and
js
inc
mov
cmp
ret
xorl
push
adc
in
arpl
daa
mov
or
add
add
add
add
push
cmp
add
add
add
add
add
mov
popf
les
sub
pop
dec
add
add
xchg
mov
popl
jbe
aad
fwait
mov
xor
sbb
add
add
inc
ffree
jb
mov
scas
pop
sbb
and
add
add
sbb
test
fisubs
add
add
cltd
aam
inc
inc
add
add
sahf
fistps
jnp
pop
push
call
jmp
sbb
fstpt
ja
fwait
andl
add
add
push
sbb
add
add
jle
push
dec
std
test
fcmovu
aam
sar
mov
lret
mov
add
add
mov
in
pop
jge
ret
add
add
inc
cmp
xchg
cmp
rcl
cs
rol
xchg
icebp
ja
jb
loop
add
stc
jp
push
jl
outsb
adc
push
mov
in
push
or
add
add
add
add
out
jne
ja
mov
add
add
dec
mov
mov
mov
in
stc
cmp
mov
or
inc
mov
lcall
lods
pusha
mov
jae
dec
inc
or
add
add
and
je
imul
add
add
cmc
nop
stc
inc
mov
mov
aam
mov
shrl
es
insb
add
add
push
jo
xor
add
sbb
jbe
cmp
aas
xchg
adc
push
and
add
add
mov
add
add
add
add
add
push
fcmovnb
fwait
sbb
add
pop
scas
sti
add
add
add
imulb
xchg
addb
add
arpl
in
jle
sti
jbe
or
mov
pop
mov
push
mov
xchg
jae
xor
adc
lds
add
add
jle
add
add
mov
add
test
arpl
test
dec
pop
mov
sahf
scas
pop
out
jno
sbb
add
add
mov
add
add
stos
jbe
ja
repnz
fistpll
hlt
jg
dec
mov
pop
push
out
ss
addr16
ror
mov
in
jl
xor
push
mov
arpl
mov
test
shrb
mov
in
je
ud2
cltd
out
dec
add
add
test
push
scas
mov
repnz
sbb
jae
and
in
and
loope
orb
lcall
pop
push
cmpsb
enter
add
add
sub
add
add
jo
lods
clc
mov
and
pop
push
cmp
mov
mov
mov
sbb
test
test
imul
xor
ds
add
aaa
in
cs
mov
popa
sub
loope
and
outsl
dec
mov
jnp
jns
pushf
xchg
mov
outsb
icebp
and
add
add
add
add
and
xchg
adc
cwtl
jnp
mov
xchg
fcomi
test
xchg
fstpl
adc
fwait
jo
mov
mov
mov
push
shr
add
add
sbb
cltd
or
add
add
add
add
fldcw
inc
add
add
fidivrl
push
push
std
test
pop
push
or
and
add
add
aad
mov
mov
push
mov
out
outsb
sub
push
int3
xor
pop
mov
cwtl
stos
insb
add
add
test
dec
add
add
jg
push
sbb
mov
add
add
push
mov
dec
outsl
push
jae
psubd
stos
jge
clc
pop
cld
sub
add
add
jae
mov
stos
push
aam
inc
sbb
into
sti
cli
xor
sub
add
add
in
and
adc
xor
fists
cmp
add
add
add
stos
cmpsb
out
aam
mov
loopne
dec
popa
pop
jle
lds
xor
jle
sbb
add
add
jo
inc
pop
sub
add
test
xchg
das
ljmp
test
mov
arpl
insb
mov
mov
rcrl
js
cmpsb
add
mov
fistpll
dec
inc
lods
pop
jb
xor
push
inc
mov
xor
loope
xlat
ffree
lods
shl
roll
inc
test
pop
mov
mov
cmp
add
mov
pusha
mov
fwait
cmp
mov
aad
inc
mov
and
test
je
jns
mov
shrw
int3
les
aas
out
mov
pop
out
ja
cld
stos
add
mov
jae
add
lods
aam
ret
sub
dec
movsb
scas
inc
outsl
out
xor
and
add
add
loopne
cltd
xorl
mov
and
add
push
sbb
add
iret
xchg
push
ror
sbb
push
inc
mov
stos
arpl
lods
sub
xchg
icebp
mov
mov
sarb
ljmp
call
add
add
dec
mov
cwtl
mov
pop
nop
and
jae
hlt
xor
mov
add
sbb
add
test
inc
or
lahf
pop
cmpsb
xchg
mov
mov
add
add
inc
scas
hlt
mov
add
add
cmp
add
add
fisubrs
inc
adc
ret
cmp
out
lock
add
mov
mov
mov
leave
mov
stos
or
sbb
add
add
rorl
xor
add
add
mov
mov
mov
jp
pop
popl
add
add
jae
add
add
iret
adc
in
xor
pusha
mov
sahf
jae
hlt
dec
ror
mov
inc
jnp
loope
or
mov
cld
mov
es
or
add
add
mov
lcall
add
add
add
add
lods
imul
jnp
aad
xchg
push
jnp
add
add
push
imul
add
add
test
orb
insl
sub
add
add
mov
mov
push
imul
add
push
pop
mov
add
add
xchg
mov
add
pop
or
repnz
or
loop
xchg
loopne
int3
push
arpl
add
add
imul
mov
movsl
adc
fldenv
sbb
jge
cmp
ss
xchg
and
addr16
outsb
mov
sub
or
push
dec
add
add
fildl
mov
add
mov
mov
cmpsl
push
fs
cmp
popa
mov
add
add
mov
loopne
mov
loope
add
add
jp
mov
adc
iret
jbe
mov
insb
add
add
add
or
lock
or
out
push
in
push
cmp
add
sub
add
add
dec
pop
fidivs
sub
cmc
cltd
out
push
mov
and
add
add
pop
sub
add
add
rolb
push
adc
clc
inc
xchg
sub
mov
fists
fisttpl
cli
mov
add
add
add
cmpsl
pushf
test
daa
popf
mov
or
cmpsl
push
push
and
jge
incl
inc
push
cmpsl
jne
mov
add
add
add
add
add
xor
dec
jns
inc
add
add
test
rcrl
ljmp
cltd
jb,pn
pop
and
or
jmp
fimull
idivl
add
add
in
fstpt
jecxz
lds
mov
xor
cmp
jbe
sub
hlt
mov
add
and
inc
mov
mov
outsb
rcrl
in
jnp
cld
ret
jmp
cmc
sysret
push
pop
lods
int3
mov
je
in
add
add
rcl
jl
insl
in
repz
push
sub
dec
mov
mov
sub
ljmp
mov
mov
push
sti
inc
mov
lods
jno
gs
lcall
mov
jmp
add
add
mov
jp
stos
jnp
hlt
test
jg
pop
fsubs
mov
push
or
int
inc
insb
mov
nop
dec
add
add
bound
les
xchg
loopne
dec
repnz
iret
subb
and
add
add
sub
sahf
repz
pop
stos
lahf
repz
iret
in
insb
add
add
xchg
jp
inc
mov
scas
xchg
pop
rclb
xchg
sahf
adc
or
add
add
push
inc
lcall
dec
jns
lret
push
lret
jg
or
adc
jae
inc
nop
mov
add
add
das
adc
mov
out
les
icebp
adc
push
cmp
sub
add
add
jno
jle
lret
sub
add
jecxz
rclb
sbb
cmp
add
pop
sbb
mov
push
shr
cmp
mov
add
scas
sbb
xchg
push
cwtl
lds
xchg
ror
adc
je
and
add
add
xor
or
add
add
mov
mov
ret
js
sbb
inc
mov
mov
fcompl
rolb
add
fndisi(8087
lods
ljmp
mov
test
or
push
stc
xchg
jl
lret
jecxz
cli
push
stos
sbb
cli
and
add
add
or
loopne
cmpsb
mov
sbb
or
add
add
jb
lret
mov
xchg
mov
ja
js
fisubrs
cmp
xchg
stc
and
add
jl
inc
dec
scas
push
or
or
inc
sbb
add
dec
aad
xchg
cmp
or
add
add
add
pop
or
add
add
repz
xor
es
call
ljmp
add
add
pop
xlat
and
add
add
cmp
scas
lock
xchg
and
and
add
lea
add
add
cmc
cs
dec
mov
jge
daa
imul
sti
push
aaa
scas
fisubs
pop
sahf
dec
sbb
popa
int
addr16
out
mov
adc
xor
icebp
insl
pop
pop
adc
inc
mov
adc
shl
lahf
gs
adc
or
add
add
jecxz
and
add
add
les
cmp
pushf
push
cmpsb
call
xchg
cmp
add
lods
mov
adc
pop
mov
xchg
add
add
pusha
mov
push
jg
jae
mov
fwait
jg
and
jle
fsubs
enter
lds
rcll
or
xor
pop
insb
add
add
xor
mov
push
std
outsl
mov
xor
add
sub
add
add
xor
pusha
add
add
pop
movsb
or
sbbb
or
or
xchg
pop
mov
and
cmp
sbb
clc
lds
add
add
add
mov
xchg
dec
push
fidivl
stc
adc
mov
aam
js
jbe
dec
repnz
mov
xor
jnp
neg
scas
sub
add
add
cmpsl
int3
in
mov
xor
adc
add
cmp
jns
adc
jl
inc
repnz
out
mov
push
in
pop
and
push
mov
imul
push
out
lret
add
add
daa
and
mov
stos
mov
loope
or
mov
jge
jecxz
or
aad
les
adc
popf
test
jle
and
add
add
test
adc
stos
dec
add
add
clc
rcll
jno
ss
jne
sbb
pusha
add
add
jle
adcb
adc
test
pop
aaa
adc
adc
adc
sahf
jle
or
into
inc
mov
inc
sub
mov
mov
and
pushf
pop
inc
add
add
cmc
aad
mov
lret
aad
inc
mov
movsl
jae
shr
jnp
xlat
mov
and
cmp
add
in
xchg
sub
in
bnd
test
cs
setae
in
das
outsb
or
ret
cmp
mov
xchg
inc
pusha
add
add
mov
add
add
dec
jl
jns
jne
into
pop
xor
dec
divl
pop
fists
xchg
out
ss
mov
pop
push
fisubrs
push
dec
mov
add
add
add
add
pop
jbe
mov
mov
lret
pop
and
and
pop
movsb
jae
cli
imul
jns
mov
mov
int
stos
js
cmp
jg
mov
sbb
push
repnz
mov
je
push
mov
push
repz
xchg
outsl
gs
pop
cmpsb
lcall
or
test
mov
pop
jmp
and
add
add
jmp
mov
xchg
xchg
push
jg
out
rorl
cli
jb
add
add
add
cwtl
adc
add
sub
or
adc
xchg
add
addr16
lret
dec
add
add
sub
mov
mov
js
imul
mov
adc
mov
int
cmp
adc
dec
mov
and
dec
jb
sti
dec
mov
dec
outsb
add
lcall
rol
rolb
add
add
push
les
add
add
out
fimuls
aam
stos
fwait
jp
mov
pusha
add
add
add
add
add
add
xor
mov
push
in
data16
sbb
mov
ja
notb
addr16
repz
xchg
add
sub
jmp
sub
add
add
and
adcl
pop
pop
xchg
mov
fs
mov
jge
push
hlt
out
popa
add
jno
jge
iret
rorl
add
add
add
inc
inc
jnp
divb
add
ja
adc
add
loopne
adc
pop
inc
add
add
mov
xor
add
add
in
faddl
add
lret
xchg
or
pop
mov
push
xchg
fcomps
push
test
and
clts
insb
mov
xor
and
add
add
daa
les
lcall
imul
xchg
adc
jecxz
jecxz
bound
inc
pop
xchg
aaa
repz
jne
out
movl
xor
and
add
add
sub
test
cli
ds
in
mov
and
add
add
push
sahf
adc
add
pop
mov
adc
sub
mov
add
add
sahf
and
popa
shl
xchg
ja
jb
cmp
add
add
xchg
push
inc
xchg
popf
mov
add
fisttpll
add
adc
shrl
cs
stc
inc
ja
pop
mov
inc
adc
jo
mov
divb
mov
jmp
add
and
mov
mov
cmp
mov
clc
and
les
ljmp
int
mov
cwtl
pop
jns
add
add
and
addr16
std
shrl
out
dec
std
ja
mov
add
cmp
pusha
add
add
mov
jle
rorl
add
stos
cmp
lcall
jnp
pop
call
xor
adc
in
sub
mov
xchg
add
add
xchg
xorb
aaa
nop
pop
mov
mov
hlt
bound
push
ret
int3
daa
test
aam
ja
jno
jno
js
arpl
adc
insb
mov
dec
mov
and
add
pop
call
imul
outsb
sbb
inc
fistl
jo
adc
movsl
mov
push
sub
add
add
add
jmp
fs
scas
adc
and
jle
fdivrl
data16
addl
stc
pop
or
pop
clc
fidivrs
push
jb
sub
add
jns
jnp
mov
cmc
xchg
mov
je
or
jo
lahf
inc
adc
std
push
aas
int
sti
push
inc
jb
es
xchg
aam
fbstp
cmp
jge
lahf
pop
cmp
aad
insb
mov
inc
add
add
push
je
sub
add
add
xchg
in
sti
fmuls
in
mov
mov
ret
add
add
lret
xlat
adc
mov
out
mov
add
in
xor
mov
les
add
inc
add
add
scas
mov
xchg
mov
mov
shll
mov
test
cmc
pmulhw
push
dec
loopne
sbb
lock
or
add
add
xchg
sub
aaa
push
push
pop
test
or
std
lret
mov
and
mov
pop
je
cld
je
movsb
adc
testl
add
loope
xor
mov
xor
add
add
jmp
js
std
dec
mov
cmp
outsb
jge
cld
pop
or
lcall
out
sbb
jb
jmp
lret
sbb
xchg
cmp
push
movsb
hlt
pop
mov
fcoms
mov
and
add
add
popa
in
mov
jmp
push
mov
push
or
hlt
lea
add
add
imul
add
add
or
add
add
and
add
add
lcall
add
and
xchg
dec
bound
dec
cmp
mov
jne
mov
icebp
xchg
es
mov
js
loop
gs
popa
sbb
cmp
pushf
std
push
ja
subb
in
xchg
xchg
outsb
lods
and
test
add
add
add
int3
push
fmulp
loop
pusha
mov
addr16
add
fwait
repz
push
out
sti
shrl
dec
stos
or
stc
ret
or
sub
lret
andl
xchg
lods
in
and
loope
mov
add
aam
jb
scas
cs
pop
iret
ficoml
movsb
ret
xor
mov
loope
adcl
outsb
and
push
push
cmc
pop
nop
add
sar
std
popf
xchg
out
inc
push
push
repnz
mov
push
inc
add
add
pop
push
fdivrl
and
pop
rorl
add
add
or
add
add
add
add
add
add
add
add
insb
add
add
scas
or
jmp
dec
cmp
inc
jmp
push
dec
jmp
stc
pop
dec
cmp
out
push
sbb
push
test
dec
fld
inc
dec
pusha
mov
add
add
decb
loop
jb
or
ret
out
push
jg
mov
movsl
mov
clc
xor
outsl
cltd
icebp
push
lea
add
add
mov
add
add
clc
outsl
jl
scas
push
std
movsl
jno
jle
pushl
mov
loope
xchg
jle
mov
imul
mov
out
sub
daa
push
adc
loopne
add
add
add
add
add
add
sbb
sti
dec
sahf
out
sub
mov
stos
adc
mov
dec
mov
push
ljmp
jecxz
fistl
jnp
sbb
inc
xor
push
cmc
adc
add
add
push
test
or
push
arpl
in
into
out
mov
mov
and
mov
adc
dec
ss
jg
ljmp
push
iret
cmpsb
xor
xor
and
add
add
add
add
push
shll
or
jle
ficomps
iret
sbb
jmp
push
xchg
bound
andl
add
add
mov
pop
js
in
pushf
add
fisubrl
cld
lea
enter
insb
mov
inc
sti
mov
lcall
notl
ss
jo
popa
jmp
add
aad
push
jmp
dec
stc
rcll
jmp
faddp
ficoml
pop
or
fmuls
add
add
add
dec
mov
pop
or
mov
add
hlt
stc
aam
mov
add
add
scas
es
cs
mov
insb
add
add
mov
jmp
jb
rolb
add
or
ljmp
and
mov
lcall
xlat
sub
add
add
jno
add
add
add
and
ja
imul
je
inc
ja
sub
add
add
movsb
nop
and
add
add
fidivs
cmc
mull
sub
cmpsb
dec
nop
cmp
push
xchg
pop
xor
add
add
pop
pop
ja
adc
scas
dec
add
add
and
add
add
dec
mov
gs
mov
xor
out
mov
mov
aad
cltd
out
shlb
add
add
daa
dec
jae
pop
xor
add
mull
xchg
sbb
add
cmpsl
jle
xor
mov
jne
scas
int
adc
push
pop
sbbl
fwait
xchg
lods
push
jb
iret
es
or
hlt
jb
into
pop
dec
mov
testb
add
push
popf
inc
mov
add
add
jecxz
packsswb
lret
cmp
jb
and
ret
mov
or
add
add
dec
mov
popf
and
js
xchg
repnz
aas
fistl
push
bound
ja
pop
mov
add
add
mov
mov
push
insb
mov
ss
add
and
and
mov
sbb
ficoml
sub
fs
or
add
ljmp
jns
sbb
mov
mov
das
les
jl
mov
std
push
cmp
outsb
sbbb
shufps
mulb
add
add
xor
mov
xor
lahf
sub
add
es
jnp
pop
xchg
in
out
loope
sbb
cmp
cmpb
sbb
clc
or
add
add
bound
jp
iret
daa
jnp
push
stos
cmc
repnz
sub
sub
add
xchg
mov
lahf
sti
jge
hlt
pop
mov
fstl
sub
mov
sarb
jl
mov
or
xor
mov
pop
sbb
xor
inc
add
popa
cli
jl
cmp
cmp
mov
mov
sarb
and
jg
sar
jbe
jmp
mov
popa
sub
stc
mov
popf
call
mov
mov
jbe
add
add
cmp
cmc
adc
or
add
add
sbb
mov
add
loopne
js
loope
orb
add
add
fisttpll
mulb
add
add
jae
inc
dec
push
lcall
mov
and
ljmp
mov
clc
mov
andb
pushf
nop
mov
jne
ljmp
leave
fucomp
push
adc
mov
jns
and
bound
xchg
out
hlt
xor
xchg
push
sub
mov
mov
add
add
mov
mov
mov
or
test
xor
add
add
test
jl
xchg
lret
aam
ret
popf
pop
jg
sbb
add
iretw
cli
shll
andl
dec
adc
enter
jno
leave
mov
xchg
push
pop
jbe
xor
mov
fiadds
out
mov
or
cmp
test
cltd
cmp
add
add
add
pop
icebp
cmpsb
dec
mov
mov
lcall
add
add
and
adc
dec
sbb
fnsave
pop
arpl
iret
xchg
adc
dec
mov
cmpsb
dec
sar
sub
mov
popf
mov
sub
inc
add
or
iret
jecxz
fnstcw
nop
xchg
aaa
loop
mov
ret
add
add
mov
rolb
out
pushw
lds
xchg
stos
adc
xlat
and
add
add
shll
add
stos
icebp
mov
rorl
adc
jbe
xchg
sti
ss
add
add
fdivl
xchg
push
leave
idivl
in
pop
je
ret
mov
push
inc
cmpb
in
sub
sub
add
add
pop
stos
jp
inc
mov
inc
cmp
insb
mov
push
imul
cmp
ficoml
add
mov
sbb
in
xchg
mov
jne
lret
aad
js
jno
pop
leave
inc
mov
add
add
push
pushf
mov
push
pop
xchg
inc
push
loope
jo
scas
aaa
movsl
mov
loop
sub
mov
cmpsb
jl
push
xchg
push
cmp
and
sbb
xor
push
xor
add
add
xor
and
testb
add
add
add
test
push
mov
aaa
in
lret
mov
mov
mov
out
inc
int
or
iret
push
js
mov
add
add
cmp
outsb
cmpsb
out
leave
push
mov
out
shr
leave
sub
jle
fsts
add
add
in
push
xchg
in
leave
popw
sub
mov
sahf
jno
mov
xlat
aas
in
mov
adcb
add
add
add
hlt
xor
add
add
movsl
dec
mov
fimuls
xor
subb
mov
jae
mov
add
dec
add
add
push
mov
loopne
int
aas
push
cld
adc
test
movsb
cs
mov
cwtl
and
push
mov
fidivrs
dec
insb
mov
in
mov
pushf
inc
add
add
add
rcl
mov
sub
shlb
push
mov
pop
inc
jne
or
lret
imul
ds
xor
cmpsl
outsl
iret
adc
mov
insl
bound
sahf
push
jl
nop
mov
add
pop
shll
add
add
lods
les
adc
std
push
xchg
push
pop
icebp
jno
dec
add
add
inc
add
js
pop
xor
sub
les
add
movsb
cmp
jecxz
xor
mov
shll
mov
mov
add
add
mov
mov
subl
lods
push
mov
add
mov
add
mov
mov
das
loope
loop
cmpsl
fwait
cltd
push
adcl
xor
pop
cmp
ds
dec
mov
mov
and
add
mov
pop
lds
or
adc
insl
jae
es
pop
sub
outsb
insl
dec
fs
int3
cmpsl
push
cmp
aad
xor
sbb
add
std
mov
jl
add
jecxz
push
mov
lcall
not
ljmp
sub
imull
add
add
stc
out
mov
inc
cmpsl
jp
xchg
sbb
fsts
xlat
dec
ja
mov
es
push
mov
cmc
mov
js
cmp
andb
add
add
dec
lret
test
nop
call
lea
ljmp
xchg
dec
mov
adc
xchg
testb
add
adc
add
add
jl
push
push
mov
out
call
aaa
leave
movsl
add
int3
pop
incl
and
add
add
and
mov
add
mov
decb
fcomi
rcrb
inc
sub
popf
int3
mov
popf
bound
mov
nop
cltd
mov
les
jo
xor
sahf
movsb
aaa
lods
cmp
pop
jae
loope
cmp
sub
call
or
test
int3
std
aad
mov
stos
shll
xchg
sub
adc
loope
adc
sub
loop
pop
sbb
fdivrl
push
inc
rcll
mov
scas
sbb
aas
sbb
add
add
and
add
add
scas
call
xchg
or
add
add
xor
lahf
aam
cltd
in
ret
in
mov
xchg
jne
out
pop
rolb
mul
adc
stos
shlb
sbb
mov
dec
add
add
rorl
add
rcrb
mov
xchg
mov
add
add
jle
push
pusha
add
add
push
pop
repnz
add
sbbb
push
mov
mov
and
testl
jge
cltd
xchg
faddl
add
add
mov
aaa
push
jnp
xchg
push
inc
add
add
jbe
lret
cmpl
add
cmp
add
int
repnz
cmp
int
jae
lods
cwtl
jno
mov
pop
cmp
stc
mov
add
jnp
add
add
push
stos
js
out
or
xchg
nopl
out
notb
pop
mov
add
add
adc
xchg
jo,pt
inc
rcrb
mov
inc
out
test
jne
push
pop
sahf
sbb
std
fs
adc
add
dec
lea
stos
lret
dec
add
add
rcrb
xchg
sub
popf
xor
add
add
pushl
push
sbb
insb
mov
and
aas
js
mov
mov
add
add
repz
mov
mov
das
mov
mov
aam
sub
lods
aas
andl
push
bound
cmp
push
aaa
inc
in
cld
adc
sub
inc
sub
out
mov
outsb
mov
or
add
ret
je
sbb
inc
sub
add
add
cmp
sbb
push
ja
mov
add
movsl
dec
clc
in
lods
enter
jl
or
add
add
push
les
ss
cld
inc
push
xchg
add
add
add
adc
ror
shrb
add
add
pop
inc
call
sub
mov
sub
add
add
and
add
add
and
sbb
pop
dec
dec
add
add
mov
mov
imul
fistl
add
add
inc
dec
mov
inc
push
cmp
icebp
fsubs
mov
insl
cmp
add
lret
shr
fs
lock
mov
inc
cs
loop
clc
mov
popa
mov
inc
add
add
test
stos
jbe
orb
stos
push
sbb
fsincos
or
mov
mov
add
add
sbb
push
int3
out
popf
dec
mov
mov
mov
add
add
ret
ds
loope
adc
add
outsb
sub
inc
roll
add
push
mov
add
insl
adc
into
loop
lcall
lcall
mov
inc
fiaddl
sub
cmpb
pusha
mov
push
xchg
faddl
and
out
rolb
or
xchg
sbb
inc
jl
cmp
add
loop
jns
and
sahf
ja
orl
dec
fisttpl
ret
xor
dec
mov
xchg
or
add
add
and
add
add
sbb
nop
xor
lahf
out
mov
outsl
fimull
fisubl
add
add
sub
adc
add
add
push
xchg
iret
incl
add
das
les
lahf
jmp
test
add
or
cmp
mov
mov
outsb
jle
cli
xchg
jno
data16
add
add
jno
test
ljmp
inc
pop
aas
sbb
sbb
and
lret
cmp
out
fs
sbb
dec
mov
subl
mov
in
ljmp
leave
scas
mov
cmp
pushf
xor
inc
jmp
mov
mov
out
pop
cmp
fcmovne
adc
enter
jo
sbb
mov
movsl
mov
in
sub
sbb
add
add
fldenv
push
adc
fstpt
mov
sbb
xor
add
add
mov
xor
idiv
movsb
cmp
lret
out
push
fldt
add
repz
jg
aam
lret
add
add
sub
add
add
and
or
add
adc
inc
mov
dec
dec
add
add
out
jne
dec
add
add
dec
loope
or
insb
add
add
fidivrs
cwtl
jecxz
mov
sub
mov
push
stos
scas
js
sub
add
add
aad
pop
sahf
pop
subl
add
add
mov
xor
adc
sub
add
add
bound
mov
add
cmpsl
jnp
add
add
and
es
testb
push
imul
dec
fwait
pop
rclb
pop
and
cs
add
add
and
mov
pop
daa
mov
add
jecxz
imul
sbb
jno
cld
inc
mov
adc
int3
add
add
add
add
dec
lods
xchg
push
push
jb
movl
lcall
mov
cmpsl
shrb
add
add
add
loopne
mov
mov
or
fists
inc
shll
sub
arpl
fildl
loope
addr16
dec
in
call
sbb
cld
aaa
mov
rcrb
push
stos
cmc
xchg
lret
push
fstpl
mov
orb
cmp
sub
loopne
repz
sub
add
add
roll
int
pop
sbb
imul
mov
fistps
xorl
push
cmp
enter
jbe
add
add
xorb
test
add
add
add
clc
push
scas
cmp
ret
js
sbb
dec
into
jmp
mov
cmpsb
shll
adc
add
xor
fs
stos
push
xchg
add
add
fsubrl
add
js
out
add
add
movsb
ds
push
pop
insb
mov
sbb
xor
inc
mov
dec
add
add
ret
test
in
cmp
add
adc
add
jg
outsl
and
and
add
add
mov
add
add
repnz
int
mov
ror
xchg
cwtl
jns
ret
mov
or
icebp
pop
int
rcrb
pop
test
daa
ds
mov
jno
jg
pop
aaa
data16
add
add
imul
add
leave
mov
hlt
or
data16
add
add
sbb
adc
and
add
add
add
jae
dec
lcall
add
je
adc
cmp
ss
ffree
enter
inc
std
sub
pop
insb
add
add
loope
mov
out
pop
add
add
cmp
add
add
add
pop
test
pop
iret
aad
pop
leave
insb
mov
je
into
imul
dec
add
add
add
cmp
jbe
push
dec
adc
ljmp
es
jae
push
push
xchg
sub
add
add
bound
sub
idivb
lods
mov
and
or
fstl
addr16
hlt
pop
cmc
outsb
movsl
inc
les
mov
xchg
ficomps
mov
mov
scas
pop
xor
adc
add
add
add
test
clc
jle
cs
frstor
mov
repz
adc
sbb
jno
addl
in
outsb
sti
mov
pusha
mov
add
rclb
out
pushf
fxch
push
gs
mov
pop
ficompl
mov
push
xor
or
fildl
add
add
cmp
add
add
xchg
frstor
add
add
xchg
cld
pop
pop
xchg
mov
add
add
mov
adc
enter
daa
mov
fdivs
ds
movsl
std
mov
icebp
insb
add
add
and
idivb
sbb
scas
movups
enter
add
or
out
mov
ja
xor
cmpsb
jg
pop
dec
cmp
add
dec
add
add
jp
mov
add
mov
push
sub
add
cmp
add
add
inc
fwait
aam
inc
mov
push
dec
add
add
hlt
adc
ss
mov
add
push
mov
xchg
ljmp
mov
test
into
popf
and
stos
mov
cmp
fwait
in
dec
add
add
out
cmpsb
sub
add
add
sbb
and
add
add
and
mov
add
add
add
push
in
mov
movsl
add
cli
sti
imul
stos
adc
shrb
nop
dec
mov
mov
insl
cli
push
mov
sbb
sub
in
jmp
mov
add
cmpsl
push
pop
fbstp
movsb
add
add
add
js
jle
jmp
dec
and
add
add
xchg
scas
sbb
sbb
div
loope
or
pushf
les
xchg
add
add
add
add
inc
test
mov
mov
mov
in
push
mov
ret
add
push
fucom
mov
cmpsl
cmp
mulb
mov
subb
int3
hlt
jge
inc
add
add
pop
test
sbb
inc
cs
add
add
loope
sbb
push
jecxz
push
xchg
adc
or
xor
and
mov
aam
add
in
sub
mov
dec
push
lds
add
add
insl
loope
add
outsb
push
xor
xchg
pop
sbb
jns
sahf
aas
arpl
jo
xchg
sbb
in
jo
andb
mov
mov
shll
gs
add
mov
fcmovne
jne
add
add
fisttpll
inc
js
dec
pop
fucomi
mov
jmp
add
jge
loope
divl
add
add
lret
pop
mov
xchg
fisubs
inc
mov
arpl
addr16
aam
sbb
pusha
mov
sahf
test
lret
insl
or
push
adc
mov
xor
add
nop
test
add
aaa
ret
lea
push
jbe
mov
jo
mov
dec
add
add
shll
popf
mov
pop
clc
js
push
outsl
sub
orb
and
mov
mov
repz
shr
sub
das
loopne
mov
xchg
fcompl
int
cmpsb
jnp
xor
mov
lret
loopne
mov
in
push
lods
adc
or
fwait
add
add
cmc
mov
es
xchg
xor
mov
in
fldenv
sarb
sbb
add
add
test
rcr
icebp
push
cld
fs
jle
cmp
arpl
mov
ds
fimull
and
xchg
add
mov
add
add
iret
ljmp
mov
mov
and
mov
push
in
fisttpll
mov
inc
xor
pop
lock
mov
hlt
out
repnz
lds
mov
cmp
add
add
mov
arpl
and
add
add
xor
push
mov
push
xor
xchg
lea
mov
or
je
or
das
leave
inc
pop
outsl
cmp
cmpsl
sbb
scas
fucom
ret
mov
mov
fs
repnz
paddq
pop
dec
cmp
outsl
push
xchg
push
cmc
mov
add
add
adc
mov
mov
cwtl
scas
stc
out
mov
orl
adc
ffree
adc
add
add
test
test
mov
mov
add
or
in
xchg
pop
inc
shrb
add
xor
in
xchg
cmp
mov
mov
stc
and
add
add
mov
xchg
cld
aas
adc
ljmp
sub
add
add
pusha
add
add
push
or
xor
xlat
inc
lds
cmc
ficomps
fistps
xor
adc
add
add
fdivl
aad
aas
mov
xchg
inc
test
add
sbb
movb
and
movsb
cltd
push
loopne
or
orb
add
pusha
add
add
fwait
scas
shll
jmp
add
movsl
cmp
add
add
pop
push
fdivl
pop
or
push
test
andb
fistpl
xchg
add
add
fisttps
les
mov
jmp
insb
add
add
test
addr16
adc
add
add
add
add
jl
sub
add
add
cmpsl
adc
andb
xchg
pop
xchg
test
add
add
mov
add
add
push
aad
mov
mov
inc
mov
xchg
rcl
cmp
mov
add
add
div
pop
sub
int
pop
loop
mov
add
mov
push
cmp
add
imul
lods
movsl
and
jne
mov
xlat
jb
add
mov
add
add
lds
cwtl
xor
pop
adcb
xlat
jo
shl
hlt
std
or
push
pop
or
add
push
ds
dec
add
add
xor
les
sub
add
add
jmp
push
adc
mov
imul
ret
xor
sub
and
inc
dec
mov
iret
push
hlt
adc
mov
loopne
insl
cld
out
pop
add
add
sarb
les
mov
add
stos
aam
sbb
add
add
jbe
add
leave
andb
je
pop
add
and
add
add
add
in
mov
mov
aas
hlt
inc
add
add
cld
pop
pop
js
insb
mov
pop
ljmp
lods
cmpsb
mov
adc
add
mov
ret
leave
pop
cmc
sahf
mov
xor
repz
pop
add
test
pop
es
jg
daa
cs
shr
add
xchg
daa
jge
push
push
cmp
movnti
loopne
stos
inc
mov
push
sti
cld
stos
mov
mov
push
pop
nop
push
adcl
scas
fdivr
mov
inc
add
add
mov
pop
jl
ss
dec
jmp
adc
adc
out
pop
outsb
jle
mov
leave
jo
or
out
jge
and
add
rcpps
xchg
call
mov
sbb
stc
push
dec
es
out
add
cld
or
add
add
or
imul
rcll
push
out
lret
mov
scas
xchg
outsb
adc
int3
cmpsl
insb
add
add
mov
negb
lret
sbb
rolb
loopne
add
add
and
les
push
int3
mov
xchg
mov
movsb
out
xchg
adcb
or
inc
test
mov
inc
pushf
xchg
lods
add
add
add
fwait
jnp
adc
add
add
add
add
add
movsb
inc
jo
daa
int
dec
sbb
data16
cli
int3
mov
jnp
stos
sub
add
add
jae
fsubrl
add
in
sbb
add
add
add
cwtl
xchg
add
pusha
add
add
imul
pop
mov
xchg
xchg
pop
fidivl
insl
mov
mov
add
add
add
inc
bound
mov
ja
xchg
mov
leave
inc
mov
xlat
jmp
push
and
add
add
jnp
mov
shr
loop
add
add
into
out
xchg
mov
gs
mov
inc
mov
shll
mov
enter
mov
pop
in
scas
xchg
dec
in
xchg
cmp
adcl
mov
mov
mov
add
add
mov
mov
xchg
mov
add
push
mov
cmpsl
shll
add
mov
xor
popa
aas
adc
and
cmpsl
js
aad
jo
test
bound
add
jmp
mov
loope
test
add
nop
add
sahf
add
test
xor
cmp
stos
lock
jo
add
add
es
mov
add
add
jnp
daa
jmp
testl
adc
inc
or
dec
jb
roll
cmp
or
add
add
add
add
and
or
sahf
inc
hlt
fwait
rorb
fstpt
add
add
fnstenv
cmp
cmp
fistpl
fwait
push
gs
jl
push
hlt
repz
xorb
pop
mov
clc
add
pop
or
add
xlat
imul
in
ja
dec
push
data16
add
test
leave
out
dec
mov
pop
vpminub
mov
dec
ja
sbb
add
add
jmp
cmp
mov
xor
pop
sti
add
xlat
adc
leave
push
xchg
arpl
push
test
mov
push
std
add
add
add
lods
sbb
xchg
and
push
es
mov
lret
mov
inc
fstp
push
mov
pop
dec
les
mov
out
mov
xlat
mov
xchg
shrl
sti
fisubrl
testb
ljmp
add
lock
jo
xor
mov
scas
and
adc
aad
sbb
notrack
add
add
mov
addb
xor
daa
adcl
add
fsubl
cld
testl
add
add
dec
mov
mov
sbb
shll
call
daa
jne
out
js
movsb
mov
jns
shr
mov
add
cmpl
ds
fnclex
sub
repz
dec
cmp
add
add
xchg
lds
add
add
dec
cmp
xchg
imul
scas
add
add
leave
and
das
int
pusha
mov
sbb
sahf
aad
adc
sti
jb
mov
dec
add
add
push
loopne
lcall
pop
incl
mov
movsl
shr
imul
cmp
mov
inc
jmp
daa
pusha
add
add
cmpsl
dec
lock
roll
and
ja
andb
mov
add
add
push
std
or
inc
mov
mov
test
je
aaa
jg
pop
mov
mov
dec
push
mov
mov
jp
add
add
add
pop
into
xchg
adc
and
add
add
lea
or
push
mov
mov
repz
clc
pusha
mov
pop
push
shll
pusha
mov
or
bound
add
add
rorl
enter
add
cmp
arpl
fadds
sbb
je
xchg
dec
cmp
mov
cld
nop
aas
ljmp
test
mov
add
add
add
in
dec
push
add
frstor
bound
ljmp
pusha
add
add
cmc
xchg
jbe
and
pushf
les
mov
divb
test
add
loop
aam
or
fiaddl
shr
cmp
add
add
add
or
ss
jp
push
pop
cmp
add
or
sbb
js
rclb
add
add
insl
jmp
adc
aam
add
add
out
xchg
aas
cs
inc
mov
mov
sbb
dec
jp
inc
dec
mov
pop
jne
movlhps
pop
imul
mov
sbb
push
jle
pop
loopne
sahf
inc
add
add
pop
cmpsl
push
out
das
push
les
push
loope
adc
outsl
lods
add
inc
stos
add
cmp
push
rolb
add
stos
cmp
inc
mov
shrl
xor
sub
add
add
mov
enter
out
dec
jp
mov
cmc
jl
loopne
or
iret
xor
scas
mov
sbb
push
stc
jns
xchg
xchg
arpl
inc
push
mov
mov
clc
sbb
ret
scas
mov
jae
lods
ljmp
push
mov
mov
sbb
sub
pop
lahf
or
loop
mov
add
mov
arpl
sbb
sub
add
add
lods
xor
jbe
dec
jae
iret
test
mov
and
mov
ljmp
jae
daa
lds
lret
test
xchg
decl
mov
adc
mov
push
ret
ret
xor
cs
ja
mov
add
add
push
jb
adc
repz
add
xchg
push
sbb
ja
stos
shll
cmp
add
loope
outsl
pop
ljmp
daa
xor
int3
test
outsl
sbb
add
add
add
fisubrl
sub
mov
add
mov
shl
stc
inc
ret
aad
repz
outsl
push
addl
jge
mov
add
add
sub
add
add
sar
xchg
mov
add
aam
pop
scas
push
fisubrl
add
imul
or
xchg
faddl
mov
cmp
cmp
push
aas
in
insl
and
gs
arpl
push
cltd
jno
loope
sbb
dec
inc
sub
adc
cmc
aam
mov
call
aaa
stc
leave
sti
divps
mov
imul
add
add
cli
mov
mov
or
add
add
mov
jbe
or
push
insl
lock
lahf
mov
xor
mov
shl
insl
stos
cltd
lahf
sbb
add
add
add
sbb
xchg
add
add
jb
rorb
mov
sbb
divb
mov
mov
mov
mov
outsl
scas
adc
mov
mov
pusha
add
add
mov
jne
mov
icebp
sub
add
add
jo
add
add
fadd
test
popa
in
fildll
add
arpl
jne
push
ror
pop
inc
add
add
arpl
mov
cmp
pushf
xchg
fiaddl
add
mov
add
add
icebp
jmp
mov
add
add
mulps
es
jbe
dec
enter
xchg
jb
lds
adc
icebp
xchg
mov
inc
cmove
jo
jge
inc
test
inc
fcomps
push
push
lds
or
fdivs
add
add
je
pusha
mov
cmp
add
pop
sbb
mov
jb
sbb
andl
int
mov
fcoms
and
pop
mov
out
fildl
mov
aaa
dec
clc
and
add
add
add
add
outsl
sbb
and
add
push
and
push
xlat
lahf
mov
test
aas
inc
xchg
shrb
add
add
cmp
jno
xchg
add
add
shl
arpl
push
xor
aam
mov
dec
movsb
xor
out
jge
clc
sub
sti
aad
push
push
add
mov
fmuls
mov
sub
xchg
add
add
add
add
rolb
add
cmp
loop
mov
lret
mov
int
fisubrl
add
add
xorl
pushf
sub
add
ret
jmp
dec
mov
rcrl
leave
xchg
dec
cwtl
mov
int
sbb
cld
pop
mov
test
sub
adc
pushf
push
shrl
mov
and
add
jnp
in
sahf
mov
add
add
xchg
cli
imul
je
add
or
mov
mov
add
bound
in
adc
mov
hlt
xor
mov
and
dec
pop
or
lods
push
call
lcall
movsb
les
add
add
sbb
jl
mov
popa
sti
adc
add
cwtl
inc
xchg
mov
add
add
add
add
xchg
push
pusha
mov
pop
bound
push
in
sub
add
add
add
es
jp
adc
or
add
add
lea
inc
and
mov
cs
and
or
add
mov
ret
jmp
aas
adc
adc
sbb
jge
add
add
aam
mov
inc
jg
xor
push
loopne
sbb
pop
xor
mov
xor
repnz
and
add
add
add
add
add
add
pop
je
setge
dec
jne
mov
int
mov
jbe
loope
cli
dec
arpl
mov
imul
add
push
ss
inc
or
outsl
nop
nop
stc
mov
pushf
imul
out
mov
xchg
lahf
dec
add
add
test
jecxz
inc
dec
xchg
cltd
push
push
rcl
and
leave
fwait
adc
pusha
mov
cmpsb
mov
dec
subb
xchg
inc
add
add
adc
outsl
dec
cld
add
add
add
outsl
imul
mov
push
adc
dec
mov
mov
mov
stos
pop
lock
rcrb
lods
mov
pop
sbb
call
pushf
xchg
int
popa
mov
mov
push
jle
mov
jmp
call
sub
test
int3
inc
or
loope
add
add
xchg
pusha
add
add
push
mov
mov
mov
sub
sub
jne
sahf
push
adc
imul
gs
call
shl
imul
arpl
jl
pop
enter
adc
lock
add
mov
out
dec
in
mov
pop
and
add
or
add
add
add
add
enter
call
sub
dec
add
add
jg
jmp
mov
fstl
xor
add
add
out
sbb
add
add
outsb
add
fists
xchg
mov
ret
mov
and
dec
nop
testl
mov
add
add
in
enter
jg
add
loopne
mov
add
add
xor
xor
dec
mov
mov
xchg
lea
or
add
add
int
mov
stc
movsl
mov
dec
mov
push
popa
roll
add
add
mov
int
xchg
or
ljmp
xorb
imul
in
scas
dec
cmp
xor
sbb
xor
fstpt
ja
insl
mov
and
add
ret
negl
mov
mov
stc
cld
push
xchg
push
lret
addl
jo
and
call
add
add
cmpsl
push
and
dec
mov
mov
in
decl
lock
enter
rcll
add
cwtl
sbb
in
das
xchg
mov
loopne
adc
shlb
mov
aas
mov
xor
xchg
jo
add
add
cwtl
jge
sbb
std
push
mov
push
lods
cmpsb
ret
cmp
bound
mov
imul
add
add
mov
and
inc
pop
cli
cmp
xor
push
fistl
lret
test
mov
mov
insl
aam
mov
push
jnp
daa
xor
cmp
push
xchg
or
int
imulb
lret
cld
mov
ret
arpl
jb
mov
sbb
add
add
add
and
add
adc
add
add
dec
pop
sbb
xchg
nop
gs
mov
mov
adc
movsl
xor
sub
add
cmp
mov
out
pop
push
xor
rcll
add
push
mov
dec
mov
mov
fstps
push
pop
out
pop
dec
cmp
mov
negl
mov
add
add
pop
inc
popf
dec
loop
lcall
sbb
add
std
push
je
call
add
add
add
add
fcoms
sbb
lret
inc
cmp
mov
js
mov
adc
out
xor
adc
inc
les
jns
imul
int
mov
sub
push
dec
fdivrs
add
add
lods
fsubl
mov
out
lahf
pusha
mov
jmp
jmp
add
mov
scas
xchg
mov
dec
inc
mov
cltd
sub
push
inc
xchg
inc
gs
xchg
test
test
jecxz
nop
push
jnp
add
add
mov
gs
fisubl
add
add
int
cmp
pop
or
nop
lcall
add
add
aas
test
ljmp
mov
or
add
add
icebp
lea
add
add
hlt
fsubl
add
add
pusha
mov
lods
flds
add
add
dec
mov
mov
or
or
add
add
dec
mov
das
sub
add
add
mov
add
add
cli
mov
cs
addr16
inc
in
mov
lods
jmp
xchg
test
pop
stos
or
add
add
add
add
add
push
mov
jno
or
sbb
mov
sub
add
cmp
and
add
sub
add
add
lret
roll
movsb
push
or
sti
fisttps
ljmp
dec
sti
add
add
add
sub
add
and
add
add
fildl
push
or
sbb
int3
jle
push
insb
add
add
ljmp
add
xchg
in
int3
pop
cs
xor
pop
sbb
push
cs
dec
clc
adc
push
cmp
sub
pushf
stos
test
rcrb
add
add
pop
pop
mov
ja
sahf
inc
daa
sub
jae
jae
mov
cmp
movsb
pop
push
cli
xchg
mov
insl
leave
test
mov
and
pop
repz
data16
daa
and
sbb
jmp
mov
je
jb
mov
les
pop
cmc
push
insl
jle
loope
movsl
mov
add
add
add
sub
cmc
push
lea
jle
arpl
add
add
mov
fcmove
or
dec
add
add
fsubr
int
into
dec
or
add
xchg
lcall
dec
cltd
dec
add
add
pop
jo
mov
scas
add
inc
mov
add
push
outsl
add
pop
ja
pop
cmp
sub
jmp
idivl
pop
sbb
scas
pop
mov
sub
add
add
mov
jp
inc
es
push
adc
add
jmp
add
add
add
sahf
xorl
lcall
sub
add
add
push
out
int
mov
call
fs
add
add
dec
pop
and
inc
lock
and
leave
ljmp
mov
icebp
push
mov
and
mov
sub
mov
dec
popf
out
fwait
cmpsl
adc
add
xorl
add
add
fldenv
add
sub
add
lea
push
and
or
scas
