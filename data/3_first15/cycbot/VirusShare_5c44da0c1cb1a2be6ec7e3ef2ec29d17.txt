add
xor
dec
dec
add
xor
popa
inc
adc
addb
add
inc
add
and
add
add
add
add
or
and
add
or
test
and
add
add
add
add
orb
add
add
sub
inc
add
add
add
push
dec
add
add
inc
add
add
inc
add
xor
add
or
fs
add
orb
add
add
add
add
add
add
add
inc
test
add
les
or
and
add
and
add
add
add
inc
add
add
adc
inc
dec
addb
test
or
add
mov
add
add
inc
mov
and
popa
adc
add
test
add
adc
adc
add
inc
inc
adc
add
add
inc
add
add
add
add
adc
add
inc
pusha
add
add
inc
addb
inc
add
and
add
sub
leavew
push
movsl
mov
sbb
imul
std
rol
imul
jo
lcall
jl
rcrb
add
push
and
inc
push
sbb
lcall
dec
xor
and
jg
testl
out
fwait
lahf
and
add
das
pop
jl
xlat
sahf
add
leave
lcall
lret
pop
sbbl
dec
inc
jo
and
and
push
andnps
addr16
sbbl
jnp
cmp
sbb
stc
mov
add
in
sti
cld
adc
pusha
stos
lods
repnz
or
sub
dec
ja
mov
orl
cmpsb
fwait
adc
mov
pop
mov
addr16
fcmovnbe
ret
pop
jg
pop
sbb
aas
jle
andb
daa
or
jle
jg
mov
mov
out
pop
sbb
imul
in
add
movsl
ret
sub
dec
ja
call
adc
sbb
push
lahf
enter
lcall
inc
mov
xchg
ret
daa
call
dec
mov
adcl
repz
mov
push
leave
sahf
adc
lcall
hlt
lods
and
pavgb
rorb
or
mov
jnp
add
sbbb
dec
enter
push
xor
mov
lahf
and
mov
mov
cld
scas
lcall
mov
scas
jne
lods
push
inc
scas
insl
adc
imul
pcmpgtd
push
mov
xchg
mov
jmp
mov
and
gs
fwait
dec
loopne
mov
scas
lret
imul
jl
leavew
push
xchg
lret
cmp
mov
cli
fdivs
imul
pop
or
pop
cld
sbb
mov
lahf
lea
cmp
mov
xchg
fs
push
mov
mov
idiv
dec
dec
cld
call
dec
sub
loop
pop
data16
rorl
rcrb
movsb
data16
popf
mov
cli
cmc
fs
call
sbb
loope
mov
popa
stc
mov
sub
push
enter
or
negb
lcall
loop
mov
dec
out
sahf
pusha
dec
pop
ret
jp
out
fwait
lahf
xchg
mov
out
sahf
sti
pop
cmp
mov
ficoml
cltd
lahf
mov
fstpl
daa
out
fwait
lahf
sub
aad
test
xchg
cld
or
pop
out
mov
mov
dec
pusha
fisubrs
fidivrl
sub
movsl
push
ret
and
les
dec
lcall
cmp
mov
movsl
int
gs
punpcklbw
out
mov
xchg
int
gs
sbb
jmp
pcmpeqd
jb
aam
movsl
dec
inc
gs
push
pushf
fisubrs
shll
lods
mov
js
push
mov
bound
cmp
jp
lods
mov
daa
mov
dec
sbb
loopne
fldenv
test
dec
dec
leave
scas
adc
sbb
sbb
dec
sbbb
lcall
negl
mov
je
ficompl
dec
repz
insb
sub
cmpsl
inc
imul
movb
movsl
dec
xor
sub
fsubs
mov
add
movsl
int
and
add
ret
shrl
jmp
imul
scas
gs
push
push
cmp
sbb
push
mov
je
outsl
xchg
int
gs
sbb
mov
sti
dec
cmpsl
lahf
in
movsl
lahf
mov
sbbl
mov
sbb
lods
call
sbb
sub
push
mov
dec
icebp
push
ljmp
cmpsl
cmpb
test
mov
sbb
call
leave
in
lahf
mov
dec
pusha
in
negl
stc
call
lret
push
in
sub
enter
mov
lods
jo
lahf
in
mov
jl
dec
icebp
lods
hlt
lcall
mov
gs
lcall
andl
insb
test
push
cmpsb
out
lcall
jnp
adc
xchg
sbb
in
push
loopne
sub
mov
mov
repnz
xchg
call
xlat
push
in
sub
addr16
mov
lahf
pop
mov
and
mov
add
test
lret
stos
sbb
leave
pushf
lahf
mov
into
test
gs
int
mov
addr16
jnp
in
fcomps
fwait
ja
pop
xchg
adc
sbb
stos
xlat
xor
push
push
xchg
jmp
fimull
jno
mov
cltd
loopne
push
imul
xchg
xchg
xor
mov
jns
std
gs
sub
rclb
sub
mov
xor
movsl
add
shll
mov
iret
mov
fnstsw
hlt
das
jle
scas
pop
jnp
test
dec
clc
stos
into
dec
or
sahf
inc
scas
fidivl
add
or
imul
xlat
test
icebp
daa
stos
sub
int
movsl
mov
bound
cltd
lret
and
mov
out
inc
sbb
js
repz
push
xor
mov
and
add
fwait
pop
clc
mov
sbb
enter
cmp
out
jge
xchg
jecxz
jmp
mov
in
pop
push
test
or
out
loopne
mov
jns
jmp
cli
xchg
in
pusha
push
mov
inc
scas
push
into
pop
xor
cltd
scas
add
fsubr
pushf
shll
aad
cmc
push
jae
push
mov
test
cmc
hlt
mov
int
pop
mov
mov
lds
mov
mov
fs
pop
repnz
push
and
imul
lahf
call
xchg
push
and
loop
insl
sub
push
loopne
popa
fimuls
addr16
pop
jmp
fs
fildll
stos
out
mov
mov
push
fdivl
adc
imul
popa
sub
fwait
mov
jg
mov
sub
int
lret
arpl
jp
test
cmp
sbb
mov
scas
and
and
sub
daa
xor
pop
pop
fistpll
hlt
sub
hlt
jmp
jl
push
xor
inc
mov
sbb
out
test
insb
das
fiaddl
push
push
fs
fsubrl
in
pop
ret
out
mov
ds
mov
rcrl
mov
cs
mov
jns
add
mov
xor
pop
movsl
in
pop
loopne
lods
jae
out
nop
or
iret
jmp
inc
out
sbb
mov
xchg
lcall
test
push
xor
mov
lahf
mov
sbb
filds
outsl
rcrl
cmp
push
aaa
push
jg
arpl
fcoml
jle
out
scas
mov
lahf
sub
test
pop
mov
lret
pop
mov
inc
out
mov
ljmp
mov
sbb
sub
jo
mov
ds
mov
imul
imul
sub
fs
jns
js
loope
mov
pop
imul
bound
jge
xchg
stos
hlt
jne
imul
out
dec
loop
add
clc
into
dec
inc
lret
enter
ret
pop
sbb
mov
inc
push
jmp
add
int3
xor
lds
push
mov
fs
stos
aas
cmpsl
mov
lcall
adc
inc
dec
ret
je
or
into
arpl
stos
push
cli
dec
pusha
mov
fimuls
test
imulb
xor
jb
inc
scas
xor
and
xchg
scas
scas
pushf
xor
mov
fidivs
lret
mov
mov
sub
sti
lea
mov
mov
xor
je
daa
out
cwtl
push
fadd
test
xchg
dec
shrl
sbb
call
stos
mov
mov
pop
lods
insb
popl
test
insl
xchg
daa
xchg
or
sarl
mov
push
dec
in
adc
pop
add
mov
hlt
add
mov
sbb
ret
loope
imul
push
pop
stc
jmp
mov
cmp
xlat
cltd
popa
cmp
out
pop
ficomps
aas
push
dec
les
sbb
sub
cmp
mov
jns
cs
inc
mov
cmp
cmpsb
jge
mov
add
or
jae
inc
mov
and
les
xor
insl
jp
xor
push
dec
mov
xchg
pop
xor
jnp
mov
leave
jmp
sub
ret
cld
fldcw
test
push
jl
cmp
filds
or
or
mov
add
add
add
push
stos
or
lret
stos
int
mov
xchg
sub
insl
pop
fwait
push
sub
cli
into
and
sti
sub
mov
das
ret
jmp
adc
jecxz
mov
insl
stos
pop
scas
shrl
gs
out
leave
loopne
pusha
imul
loope
ja
bound
and
push
test
dec
or
mov
mov
pop
sti
add
iret
andb
add
ffree
cli
shrl
pop
mov
mov
dec
mov
mov
sub
lea
pop
ror
jnp
mov
dec
push
inc
ret
outsb
rcr
vpaddusb
out
fndisi(8087
arpl
cmpsb
lock
mov
lret
xor
out
dec
pop
inc
fsubrl
fidivrl
pushf
pop
jmp
inc
fsub
jns
xor
leave
sahf
leave
or
mov
pop
xchg
add
and
dec
push
shrl
stos
mov
inc
sahf
fnstcw
xchg
int3
dec
push
jp
out
cmpsb
mov
or
sub
mov
subb
sbb
cmp
push
bound
lret
sub
test
mov
push
into
jb
ds
rcll
or
jno
cltd
add
mov
rcr
xchg
mov
neg
pop
test
jmp
imul
lock
test
test
fimull
or
mov
test
adc
hlt
or
lock
mov
imul
sahf
add
cmp
popa
push
inc
out
cmp
and
fimuls
jmp
sub
imul
popa
stos
xchg
sub
outsl
std
es
ds
int
fwait
add
dec
mov
subb
sub
xor
xchg
lret
cmp
repnz
add
aaa
pop
push
shlb
aaa
mov
inc
orl
aam
loopne
fildll
fucomi
icebp
xchg
shll
icebp
dec
and
aaa
or
rolb
mov
stos
out
jne
int3
movsl
jnp
mov
js
or
mov
push
mov
xchg
push
hlt
cmp
sbb
nop
push
push
mov
cmp
mov
add
xchg
cmc
fisttpl
jnp
je
push
push
rcr
pop
lret
mov
adcb
cld
jmp
shrb
inc
lea
mov
jp
scas
adc
iret
test
stos
xor
and
ljmp
aam
push
mov
shrl
notb
aad
out
jne
xchg
test
sti
stos
stos
addr16
xchg
ljmp
adc
xor
lds
popa
repz
rclb
cltd
stos
adc
dec
cwtl
test
inc
jmp
add
jo
test
jae
mov
outsl
loop
sub
in
xchg
cmc
aam
and
mov
sbb
jae
mov
push
push
sub
rclb
jle
shll
out
je
lcall
inc
inc
push
mov
and
insb
lds
loope
lahf
fwait
pop
sub
mov
in
xchg
push
push
adc
gs
or
inc
push
imul
pusha
fsubp
lcall
fdivr
mov
adc
jno
cmp
fcmove
sti
repnz
dec
cmp
into
xchg
shll
decl
les
fwait
movsl
dec
jo
and
xchg
push
dec
pushf
pop
fldt
pop
mov
int
pop
ljmp
stc
sub
lock
dec
idivb
mov
mov
stc
shll
jae
push
jnp
es
dec
mov
int
incb
jp
pop
jnp
cltd
sub
add
xor
lret
das
lret
lret
jle
ljmp
adc
push
test
mov
sarl
fisttpll
adc
gs
pop
filds
adc
cmpsl
inc
dec
sbb
push
pusha
sbb
push
xor
pop
add
dec
insl
subb
sbb
shll
aas
addr16
int
call
int
lea
mov
cmp
inc
je
mov
push
imull
outsb
adc
rcrb
loopne
mov
and
push
mov
in
arpl
or
out
bound
xor
sub
xchg
mov
sub
lods
daa
enter
jae
mov
cmp
xchg
mov
stos
in
icebp
mov
dec
sarb
pop
fsub
rorb
inc
mov
mov
inc
cmp
xor
jae
ljmp
mov
imul
adc
xor
pop
movsb
imul
fimuls
ds
fisubrl
lods
pusha
dec
push
ja
outsb
fidivs
out
out
push
mov
cmp
pop
jns
mov
and
jmp
mov
sub
or
shlb
jo
push
call
push
repz
lret
daa
add
pop
test
mov
arpl
pop
mov
lods
imul
stos
mov
movsb
and
out
loop
mov
stc
sbb
lds
dec
fs
jne
lret
hlt
fwait
jle
inc
or
push
inc
dec
mov
aaa
mov
out
sbb
or
xchg
push
mov
pop
add
push
mov
jnp
dec
sarb
and
fcomi
test
sub
idivl
fsubrs
pop
gs
jnp
ss
lcall
subl
call
and
out
add
test
and
test
iret
rcr
lock
pop
test
aam
sub
cs
xor
adc
xor
test
into
xor
fisubrl
sub
mov
movsb
xor
data16
std
mov
dec
jbe
sarl
add
inc
and
xor
xlat
dec
xor
out
mov
pop
loope
mov
cmp
jecxz
scas
rcl
test
push
xor
push
icebp
cmpsb
inc
push
fsubp
mov
jmp
or
insl
xor
fucomip
pop
pop
xor
push
and
pop
scas
lret
ja
adc
movsb
sbb
cmp
xor
push
dec
jge
sub
test
push
imul
stc
outsl
pushf
mov
out
jae
adc
nop
stos
in
hlt
mov
or
adc
and
test
es
notl
out
adc
int
daa
fsts
mov
leave
jbe
sub
push
lock
cli
fcoml
stos
lret
pop
mov
sub
pushf
mov
jl
ss
xchg
push
xchg
dec
or
lods
sub
arpl
adc
je
lcall
fnsave
repz
sbb
into
jecxz
cmp
popa
xchg
add
jecxz
nop
jmp
test
js
inc
push
roll
adc
jl
jecxz
cli
inc
loopne
arpl
xor
mov
mov
xchg
xchg
ret
ss
xchg
pop
out
or
movsl
pusha
sub
and
stc
sub
jge
ss
sub
or
and
push
add
cmp
push
dec
gs
dec
jae
pop
daa
dec
stos
inc
dec
cs
lret
sbb
roll
cltd
lods
loope
jne
test
push
inc
shr
mov
sahf
lret
push
fwait
imul
mov
sbb
sub
push
out
adc
int3
mov
or
mov
sub
les
outsb
lock
jae
xor
dec
mov
jae
out
js
out
test
gs
sub
pop
push
ljmp
add
mov
je
rcr
ja
mov
adc
sarl
add
lods
leave
shlb
mov
jge
int
mov
fimull
pop
sbb
jnp
jno
mov
movsl
sbb
mov
push
data16
mov
cmp
sbb
or
nop
add
lret
mov
out
cmpsl
jmp
in
sti
lods
xor
insb
lods
push
ljmp
dec
inc
mov
xor
inc
push
filds
ret
js
scas
sbb
movsb
or
add
imul
add
cs
ljmp
je
mov
dec
sub
mov
jge
movsl
ficomps
loope
jg
jmp
enter
ljmp
out
push
push
lcall
or
and
rcrl
push
in
and
test
insl
and
cmp
pop
pop
mov
leave
mov
mov
sbb
into
cmp
push
daa
push
inc
and
adc
std
int
out
fildll
lods
xchg
std
mov
andl
cmp
cli
and
popa
neg
mov
int
stos
mov
cli
lods
cmp
xor
jne
shr
cwtl
leave
sub
movsb
pop
insb
fidivrs
scas
sbb
jae
push
lock
mov
in
aas
and
jns
fistl
ljmp
scas
xlat
pop
popa
movsl
fs
iret
ret
push
in
pusha
in
adc
push
xor
mov
sbb
push
and
mov
aam
xor
cmp
lods
cltd
cmp
js
sbb
in
in
iret
cmc
push
mov
fcomip
sti
inc
mov
sbb
rcrb
sub
sbbb
pop
push
ss
shl
mov
and
rcrl
stos
xchg
push
loopne
pop
or
cmpsl
push
shll
arpl
imul
pop
ss
out
pop
sub
movsb
cwtl
or
aam
imul
dec
insb
sarl
mov
mov
test
mov
xlat
and
ljmp
xor
mov
imul
fmuls
add
pushf
sbbb
pop
push
stos
or
add
int3
sti
xlat
mov
cmc
push
gs
xor
shll
gs
leave
cmp
hlt
ja
scas
xchg
mov
xchg
mov
scas
lock
inc
dec
xor
mov
cmp
rclb
icebp
test
xchg
mov
push
mul
lds
jecxz
pop
push
sbb
mov
mov
and
cmpl
mov
adc
sub
cmpsl
mov
leave
shrl
xchg
mov
mov
movsb
push
rcrl
in
or
ret
loope
mov
jns
fnsave
nop
shrl
xor
int
scas
mov
mov
rcll
jnp
cmp
fisubrl
jge
dec
scas
repz
in
mov
mov
iret
mov
mov
loope
stos
out
mov
ficoml
inc
jp
std
icebp
sub
xchg
add
or
inc
pop
scas
mov
mov
jo
es
invd
jmp
add
lret
fyl2x
mov
stos
popf
imul
pop
adc
xchg
dec
sbb
push
jl
add
addr16
ret
adc
mov
dec
mov
mov
mov
sti
mov
dec
aaa
and
sbb
inc
lock
addr16
or
mov
pushf
sbb
icebp
inc
stc
mulb
mov
push
cmp
adc
outsl
dec
inc
mov
dec
push
aaa
or
xchg
adc
cs
add
push
mov
and
out
push
fistpll
dec
int3
jbe
mov
push
out
sbb
insb
outsb
add
pop
sub
mov
inc
xor
out
in
lods
jnp
mov
sub
jecxz
dec
mov
lock
nop
lock
xor
add
mov
mov
mov
pop
imul
mov
movsl
ret
mov
dec
xchg
int3
sub
sub
mov
lods
lods
push
jne
pusha
inc
rcll
clc
stos
add
mov
dec
pop
out
sahf
xchg
sahf
jmp
jle
pusha
lock
push
push
fistl
ljmp
mov
sub
mov
aam
and
ljmp
sbb
rcll
loop
aad
mov
or
or
xor
adc
sbb
cs
mov
fimull
and
dec
mov
jae
mov
sub
rorl
pop
or
mov
fwait
xchg
sti
push
or
push
into
pop
sub
out
cs
jo
lods
pop
outsb
sub
lahf
dec
add
out
push
and
cli
or
mov
fwait
addr16
dec
push
mov
dec
and
shlb
or
shlb
shr
rcrb
clc
xor
mov
lods
xor
xchg
adc
xchg
fidivs
add
mov
mov
pop
gs
loope
rcll
pop
lret
cld
sub
lret
insl
data16
aas
decl
add
mov
jne
pushf
cmp
lret
mov
cmpsb
mov
jno
push
and
cld
fcom
filds
aaa
mov
movsl
in
nop
fdivrl
and
je
jb
iret
jle
mov
daa
jg
cmpsl
fwait
pushf
or
and
and
jne
pushl
dec
jno
cmpsl
lods
stos
pushf
in
enter
jmp
rcl
shr
cmp
fs
stos
xchg
in
loop
adc
inc
scas
scas
jecxz
add
stc
mov
xor
push
rolb
mov
test
das
add
mov
pop
xchg
outsb
inc
jno
imul
dec
mov
leave
lret
push
rcr
imul
pop
sbb
sbb
adc
xchg
shlb
sub
fdivs
inc
mov
pop
add
movsb
pusha
push
in
outsb
adc
mov
ljmp
rcr
xchg
jno
add
and
aam
add
stc
pop
jae
or
adc
push
ret
mov
push
aam
xchg
cli
pop
lock
mov
popf
cmp
cmpsb
or
cmpsl
gs
cmpsb
cmp
int3
mov
out
jnp
pop
lea
or
in
jge
call
lret
lods
js
push
inc
xchg
and
cmpb
aam
and
add
xor
add
ljmp
sahf
mov
add
rcrb
enter
push
push
mov
sub
push
sub
lret
jno
pop
insb
fdivs
sbb
outsl
out
std
lahf
pop
cmpsb
rcrb
jge
xchg
pusha
ret
jge
fisttpl
inc
aam
pop
iret
in
xchg
aam
dec
mov
cmp
jbe
scas
cmpsl
jmp
mov
pop
cli
lock
mov
dec
icebp
test
lds
ss
jp
sbb
lret
rcrl
loop
mov
jge
aad
xchg
in
adcb
xchg
into
sbb
mov
fistl
sti
jnp
mov
push
sub
pop
pop
mov
jl
jmp
mov
sti
dec
cli
sub
adc
sub
repz
push
xlat
sbb
mov
adc
jns
jecxz
mov
fwait
daa
shr
mov
test
lock
cmp
lods
pop
mov
mov
cmpb
mov
and
into
adc
xchg
sub
pushf
sarl
enter
xchg
cmp
adc
pop
pop
mov
sbb
mov
jp
or
mov
lea
mov
mov
rcrb
xchg
push
imul
mov
scas
mov
cli
in
out
adc
or
cltd
test
adc
jge
cmp
dec
cmpsl
jnp
jge
inc
inc
push
add
mov
add
int3
je
xchg
stc
pushf
pop
cmc
cmp
adc
sbb
inc
fwait
dec
or
arpl
jne
dec
test
xchg
lret
pxor
rcrl
sbb
ficompl
out
fsubrp
repz
outsb
cmp
pop
push
mov
test
add
lds
pop
dec
push
and
loope
arpl
into
lahf
mov
ja
mov
incb
les
mulb
pop
pop
push
mov
cmpsl
rcll
daa
pop
mov
jecxz
mov
mov
jno
int3
jl
clc
jecxz
cmp
ret
cmp
sub
fimull
arpl
cltd
inc
and
test
push
test
fwait
out
xchg
movsl
pop
xor
stos
add
push
dec
jmp
dec
add
out
push
pop
mov
fisubrs
xlat
mov
and
rcrl
push
jmp
out
je
outsb
pop
mov
dec
hlt
daa
mov
push
mov
adc
push
cmp
mov
pushw
outsb
std
sahf
push
jge
lar
jns
pop
inc
ret
cmc
es
xchg
imul
xchg
push
leave
test
ljmp
fidivrl
lods
sub
mov
mov
cmc
add
out
or
jecxz
lods
lcall
mov
add
iret
cltd
xchg
and
add
sub
mov
rcll
in
dec
cmp
addr16
pop
sub
pop
dec
gs
cmpsb
adc
je
mov
add
rorl
sub
pop
sarb
lret
cmpsb
fidivl
pop
pop
mov
mov
jp
and
xchg
push
sbb
aaa
cmp
xchg
lods
pop
out
fiadds
mov
xchg
shll
leave
cmpb
in
adc
sbb
fcomps
add
cmp
loop
sub
xor
xor
enter
and
loop
loope
in
sbb
adc
pusha
xchg
push
add
cwtl
dec
jecxz
add
rcl
and
add
and
and
dec
cmp
js
push
mov
movsl
imul
xchg
add
fs
jle
fisubs
idivl
sub
pushf
call
fcoms
jae
push
push
add
aaa
dec
push
loope
adc
xchg
lds
aas
lods
and
xchg
adc
daa
outsb
scas
in
mov
and
adc
or
sub
and
xchg
loopne
cmpb
dec
add
and
mov
jne
ljmp
call
js
into
jecxz
or
fistl
add
sbb
mov
gs
ja
adc
cmp
dec
cmp
xchg
or
mov
mov
call
or
outsl
jno
lock
or
in
jnp
inc
jecxz
minps
sbb
mov
jg
mov
xor
xor
mov
adc
jo
enter
sub
imul
shld
test
jbe
xor
pop
in
pop
and
in
pusha
or
mov
cli
pop
jnp
xor
ret
xchg
mov
mov
pusha
jmp
addr16
xor
out
adc
in
decb
sub
xchg
ds
mov
out
inc
jmp
in
ljmp
mov
inc
shll
mov
push
int
cmp
push
jl
xor
icebp
cld
push
cmp
test
test
dec
sub
mov
idivl
pop
mov
fucomip
fldt
icebp
call
xchg
popf
xchg
or
lods
adc
aas
pop
popa
xorb
mov
sbbl
mov
outsl
adc
and
sub
mov
scas
mov
cmp
add
inc
pusha
nop
fldl
jne
loop
sub
push
adc
jns
mov
xchg
push
std
adc
pop
inc
sub
hlt
adc
xchg
fldcw
out
mov
mov
insb
insb
aaa
fidivs
aad
mov
or
sub
jl
or
pusha
mov
mov
dec
fldt
ret
pop
or
sysenter
sub
cmpb
shl
cmc
adc
out
cmpsb
insb
mov
decb
xorb
sub
icebp
cmpsl
or
xor
pop
sub
int
les
lret
fisubs
scas
fs
sub
scas
mov
pop
mov
and
loop
mov
push
adcb
inc
aam
pusha
repnz
sub
arpl
sbb
sahf
pop
sub
cmc
xor
lea
lcall
jae
dec
mov
aam
test
fucomp
and
lods
std
xor
add
es
outsl
adcl
cmp
mov
cmp
pop
out
int
and
repnz
dec
cmp
cmpsb
xchg
mov
jmp
out
mov
sub
fadds
add
mov
push
aad
xchg
and
out
cmp
ret
shlb
shrb
cwtl
enter
lock
jle
xchg
rcll
jnp
jecxz
test
scas
scas
in
out
xor
repnz
popf
xor
imul
cltd
in
repnz
jg
mov
jae
loope
and
pop
mov
ss
cmp
add
add
and
jb
and
pop
and
divl
ljmp
lcall
scas
xchg
shlb
xor
mov
rcl
and
std
xchg
aad
pop
stos
or
jo
mov
xchg
or
int
loop
push
lods
cli
ja
negb
mov
jl
icebp
scas
sbb
dec
fnstenv
mov
mov
mov
mov
mov
icebp
add
lods
subb
in
mov
sub
cmc
push
sbb
movsl
roll
pop
mov
sbb
jmp
and
xchg
scas
xor
jo
into
pop
sub
pop
dec
and
dec
push
and
hlt
pop
stos
add
cltd
mov
lret
mov
xchg
inc
mov
xlat
jo
shl
mov
sahf
push
push
mov
adc
mov
or
mov
push
dec
sub
mov
mov
fmul
lods
jbe
scas
test
sbb
out
nop
js
movsb
scas
xor
push
fldenv
jae
sahf
or
cmc
mov
jbe
push
aam
jb
fs
add
int
mov
ss
xchg
mov
les
xor
mov
out
jbe
mov
testl
lret
jnp
scas
cli
dec
or
mov
int
adc
adc
outsb
leave
push
xor
das
outsb
cld
cmp
lods
test
xor
xchg
cmp
rcl
cmp
jle
push
call
jno
repz
lods
xchg
in
mov
push
or
js
mov
jmp
adc
daa
outsb
jg
or
lods
jmp
and
mov
sub
cmp
shrb
dec
inc
dec
and
fldt
test
bnd
pop
movsb
sbb
ja
xchg
jmp
icebp
shlb
cld
test
into
movsb
mov
push
addr16
adc
pop
out
lds
cld
or
adc
inc
dec
dec
dec
push
and
xor
idivb
lret
mov
cltd
pop
push
hlt
stc
jnp
xor
jmp
push
push
adc
xchg
int3
les
dec
decb
pop
mov
sub
pop
add
outsb
dec
iret
push
fisubrl
adc
add
mov
popa
lahf
xchg
and
insl
xor
sbb
enter
fidivs
cmp
pop
out
into
and
cmc
or
pop
lods
adc
jle
into
or
push
repz
aas
push
pop
xchg
adc
mov
in
iretw
rcl
loope
mov
xor
test
sarl
and
imul
into
stc
stos
add
inc
loope
int3
dec
xchg
shlb
repz
lret
mov
aas
or
cs
xchg
jno
stos
mov
mov
lods
fistpl
out
repnz
jno
adc
inc
push
mov
xor
data16
cmp
and
mov
paddsw
pand
inc
sbb
addr16
xchg
xchg
movsl
mov
lsl
mov
dec
into
stos
mov
push
xchg
ret
xlat
add
pop
xor
lock
xchg
sbb
test
and
ret
aam
cld
inc
mov
test
faddl
stc
mov
and
add
xchg
jo
cmp
inc
and
repnz
mov
xor
sub
mov
sub
imul
sbb
ds
cld
scas
aaa
pop
addr16
mov
mov
adc
jo
mov
loopne
or
shll
dec
sub
cmp
and
mov
out
dec
aad
mov
out
cmpsl
and
aam
and
xor
mov
pop
mov
inc
or
fisubrl
xchg
mov
mov
dec
xor
fbld
jle
pop
xchg
mov
pop
ret
mov
scas
sbb
lahf
and
lret
in
iret
lock
inc
out
scas
push
aad
mov
inc
xchg
inc
repnz
sbb
jmp
push
loopne
dec
shl
mov
fstpl
fistpl
lahf
insl
mov
add
jb
shlb
cmpsb
sub
jle
xlat
ds
cmp
xchg
pop
mov
lcall
fimull
repnz
push
mov
add
test
enter
cmp
bound
cmpb
xor
or
cmp
inc
enter
or
mov
rol
fmul
mov
dec
fwait
xchg
loope,pt
xchg
jns
jg
out
js
mov
enter
push
cmp
or
sbb
and
test
or
into
insl
pop
cmp
sub
jns
cmc
mov
or
arpl
xor
test
jmp
dec
mov
xchg
icebp
pushf
add
jae
mov
add
jbe
in
ret
push
cmp
enter
add
push
sbb
xor
out
fcmovnb
out
add
or
add
sub
xchg
out
sub
cwtl
cltd
sbb
xor
or
je
cmp
in
mov
daa
leave
xlat
xchg
or
mov
mov
aaa
mov
jmp
pop
and
inc
sbb
xor
testb
out
push
dec
pop
arpl
sbb
cmc
push
mov
mov
shll
mov
rolb
lret
fwait
push
rolb
test
push
sub
scas
pop
adc
mov
inc
lret
mov
bound
sub
repz
subl
mov
scas
and
sbb
pop
out
loope
mov
pusha
jp
pop
cmc
and
pop
sarl
fiadds
jle
addr16
bound
inc
leave
loopne
xor
outsb
rolb
jns
into
lea
mov
outsl
arpl
and
bound
pop
xor
inc
mov
or
lods
mov
lods
test
mov
mov
add
outsl
cs
in
lcall
adc
arpl
mov
arpl
hlt
cmc
pop
inc
xor
sub
lret
sti
push
movl
outsl
iret
int3
dec
cmp
pop
out
rclb
outsl
adc
test
jno
lods
push
ds
inc
aam
cmpsb
mov
xchg
mov
jns
jl
stos
loopne
repnz
shr
xchg
jle
cmp
jp
hlt
pop
out
mov
insb
adc
mov
repnz
int
out
int
jmp
dec
mov
jb
push
xchg
pop
hlt
stos
dec
movsl
mov
xor
push
lret
inc
loop
sub
in
arpl
push
adc
ja
test
shr
mov
xor
push
clc
cmp
enter
fwait
es
and
mov
cmp
lods
and
xor
out
out
int3
pop
shl
or
inc
lcall
mov
mov
lret
js
imul
adc
mov
push
insb
lods
idivl
mov
leave
and
add
iret
inc
xchg
push
jl
lahf
ja
subl
jg
mov
xor
mov
das
add
leave
sbb
jae
xor
shlb
std
std
adc
testb
movl
movsb
fcompl
out
outsl
and
jmp
pushf
ret
call
push
aas
mov
fsubrs
outsb
in
xlat
mov
jb
mov
ja
sub
mov
idiv
out
jmp
sbb
jecxz
pop
stc
dec
and
mov
and
cmpsb
fbstp
aam
out
and
shlb
dec
jae
inc
dec
cld
insl
data16
shlb
stos
pop
loope
outsb
jnp
icebp
fdivs
lret
cwtl
add
fstl
stos
popa
push
ret
sarl
adc
outsl
or
cmp
test
mov
mov
xor
xchg
lret
movsl
je
mov
sbb
dec
out
rcll
test
idivl
xor
shll
mov
lds
fildll
jnp
popa
adc
insb
loope
dec
in
jp
jnp
mov
jp
jae
addl
xor
jo
loop
push
jne
cmp
sbb
out
movsb
cld
mov
mov
xor
jmp
repz
ror
push
adc
dec
fiadds
pusha
and
inc
fldcw
jp
add
out
jmp
shr
push
mov
sbb
pop
out
clc
mov
lods
mov
mov
lock
cltd
or
stos
ds
out
insl
in
repnz
shrb
loope
cli
pusha
xor
loopne
pop
cmc
dec
scas
das
cmp
test
pop
fdiv
or
daa
mov
push
lcall
iret
fidivrl
fildll
aam
cmp
sarl
rcr
mov
cmp
adc
fldenv
ret
lock
lods
sub
cmp
jle
or
shll
in
out
add
mov
push
pop
push
scas
lahf
shll
dec
push
movsl
dec
insl
jne
arpl
jge
sbb
pop
ret
cmc
lret
insb
lods
aad
xchg
jae
sub
add
mov
mov
push
cmp
pop
pop
jp
mov
mov
inc
sub
sbb
xchg
mov
xchg
cmp
mov
xor
lods
test
mov
lcall
ret
push
lahf
out
dec
and
xchg
fwait
mov
test
andb
mov
fistpl
add
sbb
dec
pop
jnp
out
cmpsb
out
sbb
mov
jae
mov
inc
jg
roll
imul
ret
pop
pop
addr16
inc
inc
cld
push
in
cmpl
imul
in
sahf
enter
inc
push
jo
pop
cli
lret
ja
mov
sub
jb
les
nop
in
mov
fistl
add
outsl
mov
ror
mov
movsl
xchg
mov
cld
dec
mov
mov
pop
iret
adc
mov
xor
outsl
and
and
imul
pop
push
inc
into
imul
mov
push
in
inc
call
mov
aaa
or
movhps
mov
pop
jae
push
dec
adc
or
nop
push
and
stos
insl
mov
leave
scas
xor
mov
sbb
and
ds
pop
push
mov
adc
lahf
sbb
ljmp
out
jno
mov
ss
or
stos
js
xor
and
jae
psraw
int
shrl
mov
jl
cmpsl
iret
pusha
inc
dec
adc
and
mov
mov
nop
dec
mov
or
cmp
or
mov
mov
decl
mov
lds
push
push
ds
and
cltd
jno
adc
mov
movsl
std
push
add
add
and
in
and
sbb
push
jecxz
adc
jecxz
insb
jmp
pop
fdivl
mov
dec
movsb
into
mov
jg
xchg
subb
fdivr
dec
add
mov
cmp
cmp
sub
ret
dec
and
rcrl
gs
pop
xor
fistpll
jp
into
adc
sub
bound
push
sbbl
arpl
daa
hlt
pop
dec
sahf
nop
pop
loope
mov
iret
or
int3
adc
add
mov
lcall
mov
lret
shr
dec
in
mov
jb
add
xor
pushf
outsb
cmc
in
hlt
test
scas
and
jle
ja
outsb
xchg
xor
ss
push
and
and
mov
repz
jl
and
pop
fildll
dec
das
shl
fldcw
inc
aad
jge
cmp
das
push
nop
jecxz
xchg
pop
cld
push
loop
negl
adc
test
stc
xchg
pop
movsl
inc
popa
dec
into
cmp
testl
and
fsubrs
out
add
jmp
nop
and
lods
inc
dec
push
inc
or
xchg
push
mov
mov
pop
add
cmp
xorb
daa
jne
xor
or
inc
adc
popf
xchg
ljmpw
push
and
dec
rcl
mov
inc
push
or
mov
mov
mov
test
jecxz
push
int
cmpsl
popf
xchg
sub
mov
xchg
xor
jecxz
movsb
adc
inc
mov
pop
out
cmp
pop
mov
orb
daa
cs
cmpsb
lock
cmp
xor
push
dec
pop
mov
jge
jae
cmp
xchg
mov
scas
cmpsl
xor
fldcw
in
mov
mov
sbb
insb
shlb
pop
aam
and
jo
cmpsl
inc
int3
gs
in
sub
hlt
gs
cmpsl
je
mov
xchg
push
sbb
bound
xchg
mov
out
arpl
jmp
aas
push
jl
or
cmc
adc
cwtl
jge
mov
adc
dec
cs
mov
cmp
aad
cli
mov
rcrl
test
lock
adc
mov
mov
jmp
inc
mov
push
mov
cmp
cld
scas
xor
filds
imul
mov
cmp
jb
mov
shll
jmp
mov
dec
mov
outsb
or
lods
dec
cli
shr
cmp
stos
sub
fimuls
aam
push
outsb
xor
scas
mov
mov
push
mov
aaa
cmp
cld
mov
push
mov
cmp
daa
add
jb
aam
cmpb
mov
or
cmp
or
cmp
stos
sarb
out
addl
lcall
pushf
nop
mov
orb
add
and
sub
pop
jl
cmpsb
iret
das
and
lods
lret
and
call
ret
das
pop
repz
stos
mov
rcrl
stos
xor
clc
popa
dec
or
test
cmpsl
or
jno
das
mov
mov
lea
int
mov
dec
test
dec
addl
icebp
and
int
pop
cs
out
daa
cmp
unpcklps
adcl
xchg
dec
push
andl
mov
pop
repz
xchg
push
sbb
std
dec
mov
lock
sti
inc
test
push
mov
push
mov
push
nop
daa
test
icebp
cmpl
outsl
into
clc
add
call
xchg
daa
iret
xor
aam
cmpsb
xchg
les
inc
stos
xorb
movsl
addr16
test
add
shrl
inc
shll
adc
adc
add
out
loope
mov
xchg
cli
out
add
mov
mov
inc
out
push
mov
test
repnz
orl
or
jge
fcompl
orb
fistpll
fildl
xchg
out
mov
mov
mov
cld
lds
adc
fs
iret
pop
push
inc
and
cmpsl
lods
iret
push
insb
sahf
jo
ret
and
rcr
in
mov
bnd
dec
sub
inc
or
dec
movsl
push
shrb
push
xorb
out
insl
bound
mov
hlt
std
loope
push
jae
xchg
in
pop
xchg
push
inc
cmc
pop
incb
pop
or
lahf
lds
jmp
jmp
aad
pop
loope
shll
out
sub
cmp
icebp
lock
test
xor
out
xchg
mov
orl
add
call
js
iret
lret
push
imul
jno
stc
pop
loopne
add
test
daa
xor
dec
mov
sub
xor
fidivl
outsb
jne
mov
mov
sbb
mov
fmul
push
test
ja
mov
cmpsl
pop
push
cmpsb
mov
jp
inc
pop
stc
movsb
out
inc
test
into
repnz
stos
jmp
out
andb
leave
cmp
into
stos
lret
aas
xor
cld
les
ja
jecxz
xchg
sbb
mov
out
add
push
lds
fistl
stos
arpl
push
xchg
cmp
xlat
or
fisubrl
aaa
scas
scas
add
xchg
adc
mov
rorl
adc
adc
mov
adc
call
movsb
mov
scas
xchg
cld
stos
clc
adc
jb
cwtl
es
lcall
sahf
and
sub
ljmp
sbb
test
pop
pop
addr16
mov
hlt
inc
nop
repnz
xchg
dec
testl
push
fidivrl
add
and
incb
pop
cwtl
cld
pop
iret
lds
xchg
push
popf
into
mov
dec
sub
loopne
push
out
nop
cmp
sbb
mov
and
dec
jecxz
xor
mov
jbe
xchg
dec
std
call
movsl
bnd
in
addr16
ja
out
cmp
cmpsl
das
das
push
mov
dec
push
ss
aaa
stc
rcll
test
stos
mov
ret
fbld
shlb
daa
les
ror
sub
push
movsb
cs
ljmpw
data16
mov
pop
shll
shrl
dec
jno
mov
push
dec
ljmp
pushf
mov
call
xchg
loopne
fsts
or
sarl
mov
leave
jmp
scas
or
hlt
fisubl
dec
mov
fdivl
sub
mov
push
sub
xchg
jmp
and
js
mov
mov
mov
jle
push
jl
jecxz
push
repnz
mov
adc
test
loope
jb
and
std
loopne
pop
jmp
inc
int
lahf
jmp
icebp
fsubrl
mov
fisubl
jbe
aaa
mov
pop
cmp
enter
cltd
mov
push
das
inc
cwtl
dec
jge
shll
adc
rcl
add
cmp
movsb
mov
stc
imul
dec
leave
in
clc
das
mov
or
mov
mov
inc
mov
jecxz
jo
push
jg
xor
nop
and
mov
jg
xchg
iret
sub
popa
movsl
filds
sub
jns
pop
aas
repz
pop
lret
int
in
shl
inc
insl
loope
pop
je
jnp
xor
test
inc
sub
pop
shld
mov
xchg
subb
jb
scas
jbe
push
sub
movsb
bnd
sbb
jmp
add
adc
xlat
and
push
add
pusha
cmp
jl
mov
rolb
pop
mov
xorb
adc
mov
sahf
jo
jnp
mov
gs
add
cmp
adc
repz
movsl
dec
mov
adc
sub
mov
movsl
insb
sub
jle
mov
rorl
or
mov
mov
lock
outsb
or
jno
repnz
nop
pop
jp
test
lods
in
or
out
imul
dec
rcl
jns
cmpsl
out
sbb
lods
out
jg
faddp
push
jae
psrlw
out
sbb
int3
stos
jbe
dec
bound
jnp
mov
call
dec
mov
jnp
push
ljmp
dec
inc
ret
cld
pusha
stos
adc
sbb
pop
mov
sbb
shll
cmpsb
lret
xor
insb
sti
jnp
cmp
psrad
repnz
sti
sub
jnp
ljmp
cmp
pop
mov
adc
pop
jl
mov
mov
inc
xchg
fisubl
in
out
push
mov
dec
mov
or
sbb
in
jl
stos
int
pop
mov
pop
outsl
pop
or
aaa
scas
jno
mov
aam
jno
mov
cmp
inc
push
dec
clc
mov
pop
xorb
out
dec
push
std
or
push
xor
andb
mov
push
xor
lods
in
ret
xchg
lods
jecxz
lods
jp
daa
in
xchg
dec
imul
repnz
fbstp
in
jecxz
movsb
push
pop
jecxz
xchg
enter
or
xchg
add
pusha
aaa
inc
lods
jecxz
pop
jae
pop
mov
leave
dec
add
pop
flds
jns
test
sbb
aas
pop
daa
pop
subb
outsl
push
add
scas
lret
and
inc
jb
push
xor
adc
pop
popa
mov
mov
int3
cli
mov
insl
aas
and
sbb
jmp
repnz
cs
mov
outsl
sub
mov
gs
ud2
jb
insb
and
sbb
ret
push
sub
push
pop
cmpsb
in
jo
inc
hlt
fimull
dec
call
push
loopne
xchg
mov
mov
adc
rcll
stos
pop
aaa
xchg
mov
pushf
sub
test
sbb
ds
int3
xchg
dec
add
pop
fs
jg
ret
pop
pushf
inc
das
inc
cmpsb
mov
pop
iret
sub
pushf
adc
xchg
hlt
out
insl
in
pop
and
sbb
jo
jns
add
cmpb
sbb
mov
loopne
and
out
ficoml
adc
push
pop
pop
fistps
sbb
xor
shrb
ja
out
xor
inc
jp
fsubrs
loope
mov
aad
add
push
fwait
pop
push
fbld
ljmp
push
jns
sbb
shrb
int
subb
fiadds
mov
and
repnz
ljmp
mov
fidivrs
or
mov
stc
and
scas
mov
xor
dec
xor
testb
pop
jg
or
push
out
ret
pop
sbb
pop
in
ss
popf
adcb
inc
cmp
inc
dec
xor
arpl
out
mov
jae
mov
vmwrite
das
loopne
xlat
adc
stos
sub
mov
and
push
mov
testl
xor
dec
jge
out
adc
mov
or
mov
push
cld
test
rcll
pop
test
and
adc
adc
jmp
jnp
outsl
pop
adc
dec
jnp
xor
dec
shl
hlt
into
inc
call
mov
enter
je
es
or
xorl
addr16
adc
lock
fnsave
pop
sub
daa
mov
into
mov
xchg
sbb
clc
and
cmp
jl
cmp
mov
cmp
add
jno
out
gs
jnp
bnd
jmp
pusha
add
push
cmpsl
js
insb
das
les
bound
ret
xor
xchg
xchg
out
push
dec
adc
scas
xor
and
adc
ljmp
fldt
dec
repz
mov
fistl
xchg
shlb
jbe
jns
pop
xor
or
sub
xor
cmp
mov
mov
push
divl
outsb
stos
fbld
inc
jnp
push
push
cmp
es
loop
sbb
mov
xor
xor
and
imul
sub
sbb
cli
push
fstl
mov
aam
lcall
jp
hlt
stos
dec
sub
cmpsl
dec
int3
pop
pop
mov
inc
dec
imul
push
fldt
sbb
or
jns
dec
pop
xchg
cmp
dec
cli
fbstp
push
push
push
push
mov
stos
daa
pop
pusha
mov
or
mov
sub
xchg
imul
inc
push
dec
sub
out
sahf
daa
lock
loopne
mov
in
into
or
push
sub
lds
gs
mov
shr
fildl
and
andb
inc
aas
fisttpll
xchg
xchg
dec
push
in
and
jecxz
push
inc
in
xchg
lret
popf
mov
clc
jne
or
push
ds
pop
sub
lea
scas
fs
pop
outsl
shll
mov
pop
nop
movsl
sar
loopne
push
repnz
cmp
pop
inc
repz
xlat
dec
xchg
jl
jmp
outsl
and
sbb
xchg
bound
push
inc
jmp
cmp
mov
jg
push
test
inc
out
movsl
lcall
aas
int
inc
jmp
xor
scas
push
mov
jecxz
cltd
or
scas
aaa
repz
sub
sub
lods
bound
push
fstps
xor
mov
frstor
xchg
or
push
inc
lods
jecxz
lcall
push
lret
mov
inc
mov
outsb
xchg
ss
dec
ret
js
pusha
sahf
call
add
mov
and
in
mov
mov
mov
outsl
cs
mov
pop
pop
out
sub
movsb
int
idivl
std
or
leave
jmp
xchg
ret
rcll
sub
adc
inc
sub
mov
xorb
aas
inc
inc
out
and
sbb
mov
sub
mov
pop
ror
std
pop
loopne
mov
pop
loope
push
addr16
mull
cli
or
jnp
mov
sahf
dec
js
aam
mov
ror
enter
js
lock
xchg
in
mov
fmull
in
repnz
loope
outsb
dec
insb
pop
cmpsl
in
mov
add
leave
mov
js
mov
test
int
out
lods
stc
lods
lea
insb
daa
sub
mov
aaa
cli
or
pop
adc
or
outsl
mov
xor
lret
stos
iret
daa
adc
in
lods
mov
fwait
pop
xor
in
xchg
outsb
or
mov
mov
sub
mov
filds
or
scas
sahf
pop
xchg
and
in
fs
loope
test
push
icebp
or
lcall
add
rorl
jg
adc
mov
test
mov
cmp
leave
call
mov
or
iret
mov
out
xchg
jb
pusha
mov
xchg
test
sbb
div
mov
mov
inc
or
movsb
test
filds
jmp
pop
xor
out
addr16
leave
jno
mov
mov
pop
inc
cmc
xchg
sub
push
arpl
mov
push
dec
cmp
jmp
inc
dec
inc
jb
test
jae
mov
lock
daa
sub
sbb
sub
rorb
adc
in
mov
clc
cmp
insb
mov
fdivrs
xchg
and
cli
icebp
sub
jno
notb
xor
lret
dec
mov
add
lods
push
pop
les
xchg
fmul
or
pop
and
jno
cmp
sbb
add
repz
fwait
rcrl
pop
cld
inc
ss
jo
jbe
push
cmpsl
ret
jns
inc
scas
or
add
and
loope
mov
popa
sbb
sub
mov
sbb
gs
mov
mov
and
push
adc
xchg
fs
call
bound
in
push
icebp
stos
lret
inc
sub
mov
fwait
stos
aad
int3
jo
jp
inc
push
ficoml
xchg
lcall
jl
sbb
mov
out
pop
xchg
aaa
les
or
ret
mov
mov
mov
out
loope
movb
daa
inc
jg
hlt
jg
out
ljmp
push
call
lods
xchg
loop
or
add
pop
popf
cmp
pop
lret
xor
or
lret
sti
mov
sub
in
stos
outsb
loopne
subb
in
adc
inc
imul
mov
fwait
jmp
stos
fdivl
test
cmp
insl
rcrb
xchg
add
xor
jp
notl
and
jl
push
nop
xchg
push
data16
and
mov
pop
xor
cwtl
push
fs
xor
jno
push
xchg
in
lods
or
popf
mov
clc
test
xchg
jle
or
cmp
notl
inc
xchg
push
pop
xchg
cmp
xor
cmp
ss
jl
adc
testl
cmp
mov
add
aam
sahf
add
outsl
mov
cmc
mov
je
add
pop
stc
std
xchg
ret
or
js
cmp
push
cmpsl
push
mov
inc
and
fistpl
add
mov
cmp
cwtl
repnz
jne
idiv
adc
test
sbb
push
int
mov
mov
stos
mov
test
mov
call
push
push
xchg
add
loop
ret
lahf
aas
and
rcrl
mov
mov
and
int3
or
imul
in
jp
xchg
cwtl
sbb
jge
xor
mov
cmp
inc
sbb
loopne
pop
pop
aad
jge
and
xchg
sub
lcall
fs
lret
out
sub
ret
test
xorl
mov
pop
fnstenv
sbb
movsb
pop
sahf
mov
movsb
adcb
mov
or
popa
lock
mov
and
mov
aad
add
sub
sbb
mov
repnz
xor
int3
pop
pop
sub
push
inc
in
gs
jge
sub
mov
mov
inc
pop
negl
fs
sbb
dec
sbb
add
test
ror
cmp
aam
adc
mov
dec
dec
sahf
inc
xor
add
or
es
and
mov
in
mov
addb
sbb
bound
mov
xchg
inc
jg
cmp
dec
cmpsb
cmp
push
xchg
mov
leave
push
mov
add
inc
mov
jns
xchg
enter
les
les
dec
cwtl
lahf
fsubrp
xchg
loopne
daa
dec
mov
mov
or
sahf
mov
xor
jge
clc
ss
jnp
mov
pop
add
jp
mov
mov
fidivl
jno
fsub
dec
pop
adc
dec
jp
js
cs
scas
mov
hlt
pop
pop
mov
adc
and
ja
movsb
jo
cld
test
sbb
sahf
js
mov
jge
mov
mov
hlt
ret
xchg
push
mov
std
js
xchg
and
mov
test
js
out
jbe
ficomps
fadd
mov
mov
dec
fidivrs
lds
add
int
mov
pop
out
pop
in
mul
mov
pusha
adc
lods
push
movsb
ret
ret
push
mov
push
sbb
popf
arpl
imul
sub
ret
imul
lods
dec
xor
stc
dec
cmc
xchg
mov
aad
iret
push
pop
lret
fsubl
mov
sbb
dec
lods
imul
lods
lcall
jl
push
cld
and
loop
push
lcall
int
loope
push
mov
and
dec
pop
stc
cld
pop
cltd
jnp
sbb
mov
out
xor
adcb
lock
lret
cmpsl
mov
idiv
push
fidivl
js
xchg
in
test
mov
rol
dec
lret
clc
dec
mov
pop
sbb
rcl
and
movsl
mov
fists
mov
xchg
cmp
loope
lcall
std
aaa
stos
rep
test
int3
and
loop
inc
dec
cltd
jecxz
add
xor
add
in
or
clc
sub
dec
rolb
aad
sbb
inc
fs
loop
arpl
loope
adc
mov
fsubs
xchg
jmp
movsb
test
mov
flds
cmpsb
scas
add
sbb
inc
out
lds
xor
and
and
hlt
stc
mov
out
pop
lcall
jl
int3
insb
jmp
leave
push
outsb
mov
ret
sbb
dec
aaa
ret
int
cltd
pop
out
mov
jmp
cmp
cmp
movsb
mov
stos
or
cmp
xor
and
push
or
jo
push
pushf
test
xor
adc
push
pusha
fwait
push
push
xor
cli
sbb
fistps
mov
xor
inc
dec
mov
xchg
dec
dec
push
jge
scas
sbb
mov
inc
xchg
xchg
cld
shll
xchg
popf
cmp
call
xchg
gs
add
les
pop
int
data16
int3
popl
xlat
jne
hlt
lds
data16
add
imul
adc
mov
fnstcw
fisubrs
cwtl
mov
mov
lahf
arpl
stos
pop
mov
scas
jl
movsb
ret
jne
imul
and
data16
or
aad
outsl
loopne
cmpsl
xchg
iret
scas
mov
xchg
imulb
dec
cmp
add
iret
ret
mov
xchg
cld
mov
mov
xchg
js
stc
mov
adc
pusha
movsl
mov
mov
pop
jne
xor
in
data16
cwtl
xchg
sbb
xchg
and
jmp
jmp
pop
hlt
test
div
lahf
cmp
add
imul
popa
inc
lahf
insb
mov
jle
push
mov
pop
sub
mov
inc
jmp
mov
push
add
xor
inc
das
mov
fwait
jnp
fstpl
add
push
jmp
jl
and
and
jb
lret
fldt
add
adcb
icebp
ret
or
mov
cmp
adc
xlat
jge
popf
and
or
imul
cmpsl
cmc
pop
mov
push
icebp
ret
adcl
fnstcw
ficompl
mov
mov
mov
pop
mov
test
das
lahf
fidivrs
es
int
scas
shll
mov
or
cmpsl
das
negl
lret
sbb
dec
inc
pop
mov
mov
mov
stc
mov
cld
sti
lret
pop
dec
or
out
mov
cmc
imulb
mov
pop
push
xchg
mov
xchg
ret
shl
mov
cmpsl
sti
push
sarl
xchg
mov
scas
jae
cwtl
lret
ja
outsb
stos
jbe
sub
cmp
fldenv
mov
mov
and
in
nop
adc
jecxz
sbb
sbb
cvtpi2ps
test
cli
rcr
and
xor
and
out
xor
mov
or
lahf
inc
lret
in
shrl
xlat
sbb
cltd
insl
inc
js
loopne
adc
aas
insb
ljmp
xor
fisubrs
mov
pop
gs
jg
fwait
out
aam
out
hlt
jg
aas
and
daa
aaa
push
repnz
sub
mov
add
and
test
add
sub
mov
fs
adc
push
cmpsb
rcrl
inc
jp
mov
cmp
enter
push
adc
ss
les
xor
imul
and
xchg
jl
lds
dec
dec
sbb
sbb
enter
jle
adc
mov
push
movsb
add
push
lret
mov
jns
rorl
leave
mov
xor
test
imul
aas
mov
or
xchg
or
add
sub
in
shlb
imul
pop
in
fstps
push
mov
ret
mov
aam
fisttpl
xor
popf
fidivs
iret
loop
cltd
dec
cmp
xchg
imul
enter
add
push
jge
adc
mov
fidivrl
dec
adc
push
nop
in
jns
aas
vpsubw
xchg
cmp
sbb
call
pop
adc
xor
loopne
xchg
ljmp
cmpsb
jno
adc
xchg
dec
jne
int
add
lds
pop
pop
int3
add
mov
cmovg
push
cwtl
mov
sub
fnstenv
lret
mov
insb
mov
cmp
mov
ud1
jl
mov
jmp
lock
test
insb
test
out
imul
inc
fisttps
cmp
insb
rcll
jg
repnz
cld
pop
lods
push
pop
test
xor
test
and
pusha
inc
filds
cmp
fdiv
mov
sbb
insb
bnd
hlt
sub
aam
lahf
mov
sub
jno
aad
lods
fstpl
stc
scas
fwait
pop
aam
push
mul
jg
jne
icebp
popaw
jp
out
inc
push
jmp
movsl
push
sti
push
or
sub
jle
mov
test
jbe
dec
xchg
inc
in
jno
stc
jle
out
and
sbb
dec
mov
faddl
cmp
pop
mov
sti
rclb
mov
imul
js
aam
adcb
xor
mov
aas
loopne
mov
adc
das
mov
fwait
pushf
jp
cli
push
jecxz
mov
jp
add
inc
pushf
fdivp
sahf
and
sarb
das
inc
jl
enter
sub
or
pop
add
out
xchg
pop
inc
jno
xchg
sbb
stos
xchg
ror
int3
fstl
loop
fbld
fsubrl
xor
pop
jns
dec
xor
mov
cmp
mov
mov
lods
mov
sub
jne
mov
in
and
mov
xchg
popa
jle
xor
pop
and
pushf
lods
stc
fdivr
insl
add
in
or
add
lea
sbb
in
mov
push
mov
pusha
pop
xor
mov
out
inc
pop
outsl
mov
int
jns
jecxz
mov
xor
repnz
scas
nop
test
jnp,pt
cmp
pop
or
cmpsb
cmp
xchg
outsl
inc
mov
fbstp
push
mov
outsl
jecxz
jb
repnz
mov
pop
scas
rol
cmpb
sub
fidivrl
add
mov
sahf
adc
mov
inc
call
lds
add
into
mov
jge
fdivl
ret
fwait
add
pop
or
in
stos
push
loope
sub
mov
and
adc
enter
leave
arpl
in
jmp
test
mov
jnp
mov
add
sbb
add
incb
inc
or
pushf
inc
pop
rcrb
call
shll
mov
in
xchg
stc
pop
test
mov
jno
cmpsl
mov
inc
adc
and
mov
push
mov
mov
js
or
scas
dec
es
scas
mov
nop
les
sbb
cmpsl
test
enter
dec
mov
pop
push
mov
ljmp
sarb
add
adc
mov
icebp
mov
loop
add
call
out
popf
lcall
pushl
cld
in
cs
addr16
and
mov
mov
xor
stos
test
arpl
jecxz
leave
push
outsl
jg
pop
fistpl
mov
fcompl
adc
test
xor
ret
add
enter
sbb
in
xor
xchg
cs
add
and
and
cmpsl
aam
inc
call
sub
into
fldenv
cmpsl
add
stc
jge
mov
push
jb
movsb
nop
dec
pop
int3
les
inc
mov
jmp
sub
bound
push
cmp
lods
mov
stos
sti
push
loope
pop
int3
mov
out
cmpsl
fsubr
inc
clc
and
stos
mov
mov
insb
fwait
pop
inc
mov
mov
icebp
call
hlt
pop
mov
and
sbb
push
jns
rorl
inc
lods
cmpsl
das
push
mov
les
shrb
xor
out
mov
loope
mov
jg
dec
jecxz
xchg
pop
pushf
stc
lcall
repnz
xlat
aam
addl
aaa
imul
aaa
pop
ss
cs
jne
ret
stos
fld
repnz
ret
fsubp
jl,pt
into
test
cmp
push
in
dec
sub
lock
mov
jbe
mov
nop
enter
lods
addb
mov
mov
ficoml
or
stos
pop
test
aad
xor
mov
push
pop
dec
es
das
std
out
clc
mov
jg
lret
jo
jnp
mov
push
jecxz
das
xchg
mov
lret
repz
lahf
mov
pop
pop
jns
cld
push
xor
push
push
push
and
cmp
push
cld
or
jbe
xchg
in
fyl2xp1
jmp
mov
mov
mov
rcll
xor
inc
in
and
les
inc
mov
mov
nop
mov
sub
mov
mov
cli
cmpsb
jmp
jl
xor
aaa
andb
jmp
lods
and
fstl
xchg
call
dec
add
jno
loope
xchg
cmp
push
sbb
inc
test
insb
jle
enter
fs
popa
mov
bswap
inc
or
shrl
adc
jbe
push
mov
jnp
in
push
repz
movsl
jmp
stos
loope
mov
pop
divl
sbbb
imul
sub
ds
imul
popa
aam
insl
aas
paddsb
das
push
xchg
js
ja
insl
sahf
stos
or
xorb
cmc
lret
mov
inc
popa
and
mov
mov
aaa
mov
pop
pop
jecxz
into
adc
dec
addr16
popa
push
fcmovnu
call
shrb
mov
jb
xor
inc
pusha
cmp
cltd
das
je
cmp
fidivl
lods
stos
or
cld
lret
and
or
sub
or
mov
stc
hlt
mov
ljmp
loop
push
and
inc
mov
cwtl
into
jne
add
sub
loop
and
or
jbe
jmp
xchg
sbb
lret
mov
xchg
jns
cmp
xlat
lahf
jp
call
jmp
pop
in
test
pop
mov
mov
aad
push
pop
movsb
bswap
sub
mov
pop
fs
mov
jnp
mov
mov
das
pop
arpl
jge
rorl
ja
lods
mov
push
jo
xor
stos
push
js
push
sbb
out
stos
fsts
pop
pop
push
xchg
enter
daa
pusha
adc
mov
out
dec
les
inc
mov
xlat
mov
sbb
mov
mov
scas
mov
stos
dec
out
flds
repz
inc
sub
mov
lods
mov
shrl
lods
xchg
std
sarb
mov
out
mov
mov
mov
pop
cltd
inc
jbe
mov
movsl
aas
dec
mov
mov
idivb
pop
mov
push
xchg
mov
cld
xadd
dec
lret
and
ss
cli
inc
xchg
or
dec
fistps
fisttps
popf
jge
jno
sub
pop
sbb
sahf
mov
mov
inc
jbe
lret
div
cwtl
adc
test
cmp
and
pop
xchg
jle
mov
sbb
adc
and
jp
add
pop
lahf
hlt
jg
mov
loop
ret
ljmp
xchg
jmp
jge
mov
push
xchg
inc
scas
add
xor
iret
pop
jl
and
xchg
add
shrb
pop
les
jp
xlat
pop
daa
push
jmp
ret
dec
outsb
insb
inc
popf
outsl
ret
aas
pop
dec
and
ror
data16
call
cld
xchg
sub
pop
test
gs
push
adc
lcall
xchg
scas
fs
loopne
sysret
cmpsl
sarb
add
sahf
dec
es
nop
stc
repnz
loopne
icebp
xchg
call
jmp
add
sbb
incl
test
adc
rcl
inc
popa
iret
into
push
int3
push
in
push
jbe
xchg
ret
lret
jp
addr16
and
imul
xchg
loope
mov
sbb
loop
fstl
cmp
mov
cs
lahf
mov
ficomps
lods
rcrl
sub
sub
and
faddl
repnz
jl
xor
mov
andl
cmpsl
adc
adcl
popf
out
aam
sbb
pop
in
or
out
mov
adc
out
push
xor
jmp
fwait
or
cli
mov
daa
or
jg
call
loope
cmp
divl
mov
xchg
mov
fdivrs
ret
popf
fxch
jno
adc
lahf
int3
mov
xchg
sub
mov
jnp
mov
idiv
adc
notb
std
adc
sbb
dec
repnz
add
mov
ret
cmc
aas
adc
test
fcomps
stos
mov
mov
fs
add
xor
stos
or
cltd
and
rolb
push
cld
mov
sbb
sti
setle
bound
cli
int3
pop
fnstsw
dec
pop
add
mov
int3
xchg
adc
cs
mov
fwait
fwait
int3
jge
clc
fildll
jae
stc
mov
jo
fwait
pop
hlt
ja
sub
cli
cmp
adc
aam
and
les
lods
inc
cld
xchg
dec
lret
dec
movsl
add
les
pushf
sti
add
cmp
and
lock
mov
bound
pop
lcall
dec
or
enter
leave
popa
mov
xchg
rcr
adc
incb
ja
and
ror
cli
add
xchg
cltd
shlb
cmp
pop
mov
add
loopne
jl
gs
mov
loopne
or
std
xlat
mov
test
mov
and
sbb
addb
clc
pop
fdivl
fsubl
xchg
sbb
inc
pop
ds
lock
das
fstpt
fisubrl
sti
daa
mov
ds
or
std
cmp
sbb
jl
and
clc
hlt
or
jmp
mov
lods
sub
xchg
mov
in
jecxz
roll
fnstsw
lahf
push
cmp
xchg
dec
jno
add
push
push
mov
movsl
jmp
mov
shlb
stos
mov
dec
and
scas
cmp
faddl
iret
cmp
push
scas
pop
stos
push
aaa
or
iret
cmpsb
xchg
in
cwtl
cmp
cli
mov
mov
stc
mov
mov
or
adc
or
add
rep
sbb
mov
insl
cmp
aam
lret
jecxz
adc
add
fmull
adc
sbb
and
in
icebp
fwait
mov
test
int
sahf
or
xor
call
test
sbb
sti
movsb
push
outsb
aaa
xor
lds
fildl
fmull
ret
pushl
dec
cmpsl
xor
ror
outsl
dec
lods
jle
subl
xor
int
add
inc
lret
inc
cli
cwtl
jl
sbb
xchg
in
mov
mov
mov
adc
mov
pushf
add
out
loope
in
mov
sbb
mov
dec
cmp
nop
xor
icebp
push
mov
lock
jp
stos
kmovb
xchg
insb
test
sarl
jg
pop
leave
xor
push
push
js
jg
aam
nop
adc
or
stc
pop
sub
das
mov
outsl
lret
shlb
cmp
mov
lahf
dec
jnp
out
push
mov
xchg
xor
ss
adcb
pop
arpl
jmp
rolb
inc
pop
add
jo
hlt
fnstsw
stos
clc
adc
insl
fwait
xchg
sub
js
mov
fwait
sub
sbb
shlb
sub
ja
vpminub
test
sti
adc
or
dec
cs
mov
jne
addr16
or
xor
jp
ficoms
in
cmpsb
push
and
xor
push
add
sbb
cmpsl
or
jmp
fcoml
shlb
fsubs
dec
outsb
rorl
lock
mov
into
add
fwait
mov
inc
shrl
xchg
fcompl
and
mov
cli
sub
push
mov
out
popf
jo
jbe
rcl
movsb
pop
jns
adc
cli
xchg
mov
pop
fwait
out
or
arpl
adc
sub
mov
jge
dec
loopne
mov
jne
ret
orl
dec
vpaddd
outsl
adc
test
xchg
lahf
push
inc
jae
sub
lods
pop
fiaddl
mov
stc
cmp
or
mov
jbe
adc
int3
sub
ret
lods
icebp
ja
push
insl
jg
movsl
pop
sbb
loopne
aas
mov
cmp
lret
aad
cmp
jno
sarb
outsb
mov
icebp
push
fld
xor
pop
jne
int3
shr
cmpb
repz
sbb
add
fimuls
int
or
ja
sbb
or
push
add
and
jge
icebp
shl
aad
fisubl
scas
rcll
dec
out
les
jl
xchg
fcompl
adc
mov
mov
fsubrs
mov
movsl
pop
scas
stos
jge
lock
mov
or
lahf
test
cmpsl
xchg
sub
push
insb
mov
inc
call
lods
flds
pop
push
pop
ret
xchg
shrl
cltd
pop
scas
push
mov
inc
scas
or
ss
scas
push
jg
and
andb
out
mov
inc
loopne
in
and
popf
jl
out
shrl
ds
cwtl
hlt
in
mov
xchg
leave
pop
fisttpll
cmc
xchg
sbb
xchg
mov
in
mov
lret
xchg
push
data16
pop
push
adc
cld
fmuls
addr16
mov
adc
iret
inc
insb
push
mov
sbb
push
cwtl
pop
ljmp
popf
rcll
push
inc
mov
arpl
jp
lods
add
xchg
add
fwait
xchg
gs
hlt
sarl
sbb
mov
jmp
xchg
outsb
inc
cmpsl
push
pusha
scas
pushf
rorl
arpl
repz
sub
dec
mov
fsts
adc
mov
fwait
sbb
divl
cmp
xor
jmp
int
mov
and
mov
jae
loop
movsl
sub
or
and
mov
push
mov
xor
cmp
lock
stc
jge
xchg
stos
sbb
test
push
or
ja
mov
mov
cwtl
mov
pop
mov
mov
repz
scas
and
dec
mov
push
subb
test
mov
xorb
outsl
push
cmc
push
roll
xor
xchg
pop
cmpsb
movsl
jl
sbb
and
adc
pusha
leave
sbb
in
xchg
jl
add
outsl
int3
mov
mov
mov
adc
imul
push
ret
loop
lahf
inc
leave
sbb
cmc
lahf
inc
mov
jmp
test
cli
sub
in
mov
mov
inc
jle
inc
mov
rorl
or
sub
cs
dec
mov
or
insb
add
push
push
cmpsb
add
xor
ljmp
xchg
xorl
je
and
mov
bswap
xchg
adc
jp
lahf
push
and
inc
test
movsb
addr16
sahf
mov
mov
pop
jmp
imulb
sub
pop
int
dec
dec
push
inc
push
mov
lds
xorl
mov
shrb
shrb
and
dec
push
and
loopne
icebp
aas
fsubl
sbb
ffree
movsl
cltd
adc
and
fnstcw
or
sbb
inc
mov
icebp
addr16
fwait
sti
jecxz
into
cwtl
inc
cmp
into
push
inc
mov
test
inc
xlat
add
cwtl
adc
in
adc
mov
sbbb
xchg
and
jae
f2xm1
fistpl
adc
sub
and
scas
es
fsub
imul
jle
lahf
fwait
xor
and
and
dec
aam
mov
jg
cld
pop
shrb
mov
rcll
lret
into
jle
sub
lret
xchg
mov
xor
into
scas
adc
adc
lock
jp
or
enter
mov
sahf
jns
das
push
sarb
cli
jmp
xor
mov
or
outsl
mov
in
test
xor
ja
loopne
iret
lds
push
lret
cltd
out
xor
js
cmpsl
xchg
mov
pop
mov
aad
ror
fildl
and
sub
enter
mov
dec
daa
ds
rcrb
clc
rcrl
outsl
cmp
scas
icebp
ror
mov
jnp
cmp
icebp
fcmovnu
outsl
xchg
jnp
shll
loop
cmpsl
mov
lahf
push
lahf
mov
pusha
lret
outsb
add
xor
or
sahf
shlb
ljmp
ret
xchg
xor
repnz
js
mov
and
in
add
adc
pop
lods
and
xchg
or
popa
adc
xchg
mov
and
lods
test
je
daa
lock
movsb
dec
shrl
push
inc
sub
jo
jnp
hlt
push
and
mov
aaa
mov
dec
movl
call
dec
mov
in
xor
or
jmp
loopne
mov
inc
nop
fstps
mov
push
cli
adc
inc
movsb
into
aas
sahf
cmp
sahf
push
lret
outsb
push
push
mov
cltd
sub
mov
jbe
add
xlat
mov
add
dec
jecxz
nop
movsl
inc
jb
ret
scas
das
ret
cwtd
inc
mov
push
inc
xor
sub
fisubrs
cltd
into
dec
cmp
mov
sbb
xor
or
stos
jnp,pn
test
mov
ljmp
sbb
adc
subb
xchg
sub
movsl
incb
aam
popa
stos
fwait
or
jo
je
jle
xchg
in
out
jg
jle
xchg
cld
xchg
adc
xor
pop
push
mov
movsl
jecxz
xor
pop
push
mov
imul
ljmp
xchg
adc
push
jb
shl
sub
pushf
fstpt
push
iret
sub
aam
pop
test
adc
jae
pmaddwd
iret
imul
sbb
arpl
dec
rol
in
test
int3
pcmpgtd
or
fnstsw
out
or
addr16
push
les
imul
jno
or
cmp
cmpsl
popf
dec
fmul
fs
xor
xchg
outsb
arpl
outsb
sti
movsb
icebp
dec
inc
imul
mov
cmp
imul
mov
es
fstl
adc
mov
sti
in
je
repz
lock
popa
mov
clc
pop
cmc
mov
out
out
shlb
daa
xor
cmpsb
popa
sub
mov
cmpsb
adc
call
mov
xchg
loopne
sub
cmp
xchg
xor
stos
daa
mov
mov
jo
into
lret
movsb
repz
ret
sahf
rclb
xlat
cmp
inc
adc
mov
inc
jns
je
mov
mov
out
aam
push
sub
ljmp
mov
frndint
rep
xchg
pop
pushf
sub
fistpll
sub
jp
outsl
cmpsl
cmp
pavgb
adc
mov
sbb
les
jge
mov
xchg
call
int3
adcb
ja
dec
clc
sub
lds
sahf
xchg
pop
int
dec
fcmovb
inc
test
xlat
and
test
push
pop
push
jmp
arpl
push
aaa
popa
mov
incb
sti
incl
lret
dec
in
daa
rcll
inc
call
in
iret
scas
iret
sub
outsb
out
aad
ja
jbe
stos
mov
dec
adc
addr16
movsb
imul
and
fadd
mov
and
lea
cltd
dec
pop
dec
rclb
out
enter
ja
fwait
xor
ss
in
jmp
adc
ret
mov
int3
iret
and
jmp
jge
icebp
ss
aad
sbb
les
into
inc
mov
xor
cld
add
pop
mov
gs
xchg
jo
adc
out
sub
ljmp
mov
test
xor
rcll
sub
cmp
std
push
fnsave
jmp
sti
adc
and
test
mov
lret
inc
insb
adc
mov
inc
pop
pop
xchg
movsl
jae
xchg
jge
inc
js
es
int3
mov
jmp
inc
test
push
jb
aas
and
inc
xchg
jnp
cmpsl
jl
mov
pop
sbb
cwtl
inc
or
sbb
add
mov
subb
iret
fsubs
sti
into
and
push
outsb
jp
aam
mov
adc
jmp
jbe
sahf
in
inc
and
push
push
mov
jb
mov
dec
pushf
jno
mov
ss
aas
push
jecxz
ljmp
push
enter
ja
mov
jne
jmp
rcrl
shl
test
test
xchg
cmp
push
sbb
cmp
popf
and
sbb
shrb
sbb
in
add
jb
data16
ret
or
adc
js
xor
lret
cmpsb
jo
repnz
mov
xlat
repz
inc
scas
sub
mov
sub
je
xor
inc
adc
sbb
push
pop
cmpl
mov
and
cwtl
outsl
outsl
add
cltd
fcmovnu
sbb
enter
cld
jno
and
lds
mov
adc
lret
movsl
std
int3
mov
je
ret
push
fcmovnbe
sahf
iret
add
jne
xor
ret
mov
jmp
cmp
fldlg2
cmpsl
movsb
lret
lock
xchg
lret
sbb
mov
cmpsb
mov
bound
cmp
jmp
faddp
scas
sarl
mov
sbbl
xchg
ficoml
xlat
movsb
into
mov
dec
lahf
xchg
xor
sub
jae
repz
or
lods
repz
xor
dec
ret
imul
push
cmovae
xchg
mov
xchg
cs
loop
jb
xor
pop
mov
dec
es
dec
sub
xchg
cltd
stos
aad
insb
sbb
xchg
lods
das
jns
imul
sbbb
dec
pop
push
pop
loopne
in
popa
push
pop
iret
mov
mov
lock
mov
lahf
mov
sahf
shl
cmp
movsl
loope
jl
mov
push
fbld
dec
and
fsubr
hlt
dec
lods
mov
inc
jp
icebp
inc
leave
xchg
mov
push
adc
leave
shrb
cmpb
icebp
push
test
in
lret
dec
fldl
fistpl
mov
mov
lds
and
and
stos
dec
dec
jmp
or
dec
shrl
stos
push
add
cmpsl
decb
cmpsl
lahf
inc
stos
add
repz
or
cmp
cmpsb
leave
scas
shrl
mov
negl
cmc
loopne
mov
psadbw
js
and
add
rclb
adc
andl
pushf
es
mov
rcrl
leave
mov
xor
out
insl
mov
xchg
sbb
sahf
or
xchg
mov
fsubrs
scas
cli
ficomps
jb
push
in
xchg
ljmp
shll
pop
push
subl
into
cmp
repz
or
sbb
fbld
mov
adc
rcll
shlb
nop
rol
and
mov
sub
mov
mov
add
cmp
xor
xor
rclb
cmpsl
lcall
mov
adc
iret
adc
xchg
ret
orb
xor
dec
cmp
xor
incb
loope
subb
div
mov
sub
fnstsw
and
pop
fwait
sbb
test
movl
cltd
std
shll
mov
jp
std
popa
xchg
lret
mov
pop
hlt
jge
xchg
push
push
and
adc
fcoms
jns
out
divl
push
mul
dec
adcl
fcoml
out
add
inc
push
mov
mov
inc
cli
into
jae
sub
int3
ret
in
sub
shrb
pop
jns
fnstcw
sub
rolb
or
hlt
hlt
jle
mov
xchg
movsl
in
sahf
cmp
mov
adc
pusha
int
adc
sbb
bnd
aas
in
vmread
xor
sub
sbb
pushf
adc
stos
hlt
sub
sub
mov
outsl
sub
iret
sarb
out
mov
dec
adc
lea
mov
mov
cmp
push
and
jle
mov
jg
imul
jp
ds
testl
push
inc
loopne
sbb
jg
adc
aas
adc
popa
mov
xor
addr16
aam
pop
cmpsb
add
adc
bound
fldt
loopne
call
ficompl
jle
add
cmpsb
jge
orb
fdivs
jmp
loop
pop
jns
pusha
hlt
xor
dec
loopne
pop
adc
jg
data16
mov
sub
daa
fdivl
fcomip
jo
ficoml
dec
ret
fbstp
sahf
sub
aas
scas
aaa
pop
test
xor
stos
inc
sub
cmpsb
and
test
and
movsl
aam
inc
add
mov
push
xchg
out
push
sub
test
inc
push
or
jg
push
mov
pop
shll
xlat
push
push
iret
cmp
mov
jle
push
xchg
push
dec
pop
stos
mov
xchg
dec
mov
inc
add
mov
dec
mov
fbld
xchg
mov
jns
sti
mov
pop
mov
mov
push
xor
xlat
adc
inc
stos
cmp
test
cli
mov
orl
cmp
das
das
sub
out
dec
jle
xchg
mov
lods
push
out
adc
push
sbb
icebp
and
stc
je
push
and
dec
xlat
adc
mov
ret
sub
aas
pushf
xor
data16
call
fldl
pushf
out
mov
js
inc
mov
stos
lods
mov
xchg
pop
inc
pop
mov
fisttps
mov
rol
xor
mov
cmpb
ret
mov
leave
loop
sbb
lcallw
xor
jmp
int
out
inc
dec
test
mov
in
imul
jns
or
test
lock
inc
lahf
cmpsl
dec
pusha
maxps
cltd
adcl
jo
sarb
je
mov
shll
jge
mov
pusha
sub
push
test
pop
shlb
xchg
repnz
xor
ds
inc
imull
imul
xchg
fisubl
dec
movl
mov
jmp
mov
mov
shrl
cmp
cmp
fldl
mov
push
push
push
sahf
inc
and
sub
stc
int3
bound
sub
test
decb
mov
stc
fildl
stos
xchg
rcrl
sub
out
imul
and
loope
fwait
ror
andb
iret
mov
push
add
dec
mov
pop
das
sub
add
pushf
mov
in
insl
addl
push
sub
mov
xchg
mov
in
xchg
inc
sbb
mov
inc
xchg
xor
sub
sbb
sub
ja
aad
outsb
stos
iret
dec
dec
jmp
lock
jl
adc
pop
xchg
pop
mov
sub
and
testl
test
ret
and
outsb
out
or
test
lahf
call
negl
and
xchg
pop
lahf
xor
inc
jmp
xorb
xor
inc
mov
sbb
sub
popa
dec
out
iret
mov
adc
in
aam
sbb
lret
sub
cltd
add
jo
pop
pop
outsb
ret
push
out
or
jnp
imul
xchg
mov
add
mov
mov
inc
jo
js
add
test
xchg
cltd
sub
push
out
sti
sbb
mov
xorb
push
dec
fisubrl
imul
pop
jp
les
lock
sub
imulb
pop
cmp
inc
cli
int
shll
into
cmp
pop
pop
push
sub
dec
fs
out
cld
mov
rcrl
xchg
xchg
push
mov
loope
inc
mov
in
cwtl
mov
ficomps
outsb
iret
rcrb
in
mov
popa
cs
sar
aaa
pop
push
mov
fldln2
inc
mov
shrb
in
lcall
stc
filds
adc
into
std
inc
addr16
xchg
mov
cltd
jno
les
xor
test
icebp
adc
mov
imul
loopne
sbb
lock
les
stos
dec
and
into
or
test
aas
and
or
push
sbb
outsl
rol
enter
daa
mov
add
pop
fwait
das
inc
pushf
pop
mov
pop
sbb
xchg
xchg
add
cwtl
sbb
icebp
xorl
push
sub
ss
push
mov
sub
fists
testl
add
les
mov
cmp
or
and
xor
enter
sbb
in
sbb
test
jecxz
lea
push
data16
lock
shlb
repz
js
in
cmc
sbb
mov
into
pop
js
pop
leave
test
inc
sbb
sahf
cli
xchg
mov
sahf
inc
jo
sbb
xchg
cmpsl
movsl
cmp
push
in
pop
cmpsb
cli
movsl
ljmp
cltd
fisubrs
mov
gs
repnz
xchg
lea
ss
xor
or
jne
adc
notl
cmc
iret
sub
not
dec
mov
cmc
out
and
bound
mov
fwait
ss
addr16
lea
stos
popf
int3
mulb
push
mov
out
shll
rolb
cmp
mov
mov
stc
jbe
arpl
or
jl
lret
jmp
call
xchg
imul
rorl
daa
jmp
test
add
adc
out
mov
adc
loopne
mov
jne
outsl
int
sub
imul
or
inc
nop
dec
jnp
cli
mov
js
sub
and
mov
out
jo
aad
pop
sub
adc
pop
add
sbb
bound
ljmp
mov
lret
cltd
stos
dec
pop
cmpsb
imul
aas
push
push
cltd
add
sub
loope
sbb
and
cs
mov
lret
xchg
inc
mov
push
cld
arpl
sub
call
fcomp
andb
int
sbb
outsl
push
inc
add
pop
sub
adc
mov
push
add
in
fwait
mov
push
lock
pop
mov
jnp
ja
pop
sti
inc
push
cmc
mov
in
test
jne
and
insl
lds
popa
mov
shl
lret
cmp
testb
andl
jbe
lret
cmp
jnp
mov
adc
jns
lret
mov
rol
out
and
cmp
lret
dec
psrlq
dec
ret
shlb
bound
clc
pop
cli
out
lea
cmpsl
ret
ss
hlt
xchg
mov
lods
in
stos
xchg
push
xor
xchg
rcrl
push
pop
sub
outsb
dec
dec
movsb
xchg
rorl
movsl
sarl
ja
mov
hlt
out
repz
es
push
addr16
andl
jno
mov
mov
and
jle
ljmp
test
adc
mov
jo
or
adc
insl
xchg
fucomi
and
subl
cmc
and
jge
jp
inc
out
cmpsb
popf
xchg
dec
data16
sub
and
or
flds
cmp
cmp
cmp
out
push
fldenv
mov
sti
inc
sbb
loop
aam
hlt
pop
out
call
lret
cmp
sub
les
lock
xchg
xchg
ret
sbb
loopne
rcl
mulb
test
roll
add
sbb
int
sbb
sbb
xchg
adc
jmp
in
aas
int3
dec
add
add
int3
mov
and
adc
push
xchg
enter
in
dec
mov
mov
pop
pop
xchg
in
rcrb
adc
xchg
popf
and
adc
mov
sarb
mov
pop
adc
orb
push
test
iret
lods
aam
adc
sub
icebp
pop
mov
lea
mov
inc
outsl
addr16
mov
pop
xor
enter
mov
jmp
fwait
mov
add
pop
jnp
mov
jecxz
aad
sbb
xchg
push
test
int
jmp
test
mov
dec
fs
adc
test
or
jmp
mov
inc
cmp
xor
enter
in
jb
clc
push
sbb
sub
cmp
aaa
inc
xor
mov
andb
xchg
adc
mull
xchg
dec
sbb
rol
push
pop
mov
adc
xor
sub
xchg
xchg
mov
and
push
getsec
adc
stos
lock
xchg
loop
inc
adc
inc
push
mov
mov
or
sahf
aad
lea
es
int
addr16
cwtl
outsl
into
adc
mov
and
or
fadds
or
sbb
mov
movsl
test
jl
sub
hlt
mov
int
bswap
div
in
sbb
push
push
pop
fs
jnp
lods
xlat
pop
mov
pop
imul
jmp
jecxz
scas
lret
xchg
int
xchg
dec
push
inc
mov
push
imul
jno
sbb
adc
xor
mov
lds
cmp
mov
mov
adc
fcoms
fbld
cs
lret
push
shl
test
repnz
ljmp
xor
push
mov
outsb
add
xchg
inc
add
cmp
jne
int3
and
cmp
or
insb
adc
cwtl
aad
mov
sbb
test
fistpl
daa
int
lea
popf
ret
movsl
imul
and
mov
pop
jae
sub
push
sub
cmpsb
lcall
xor
popa
je
mov
sbb
xchg
jb
aas
adc
out
popf
push
sbb
fsubrl
cmp
jg
cltd
jo
lahf
lea
adc
ficoml
popa
jno
scas
push
frstor
inc
loop
movsl
mov
xor
int
inc
add
dec
lret
xchg
and
sti
push
fldcw
js
das
subl
push
lock
cmp
push
es
mov
sub
xchg
loopne
and
mov
push
sub
incb
adc
dec
arpl
sbb
in
cmpsb
addr16
test
call
into
jmp
and
sub
stos
and
lcallw
xchg
or
cmp
in
or
push
xor
icebp
sbb
mov
lea
mov
pusha
lods
cmc
cli
cs
in
xor
or
xor
pusha
movsl
test
sub
xchg
mov
mov
iret
and
mov
aaa
mov
mov
jmp
add
pushf
push
jo
repnz
mov
mov
adc
jl
adc
adc
mov
sbb
lret
xlat
cli
add
jo
pop
xor
dec
push
mov
sub
xchg
push
ja
sub
fisubrl
sub
leave
repnz
aaa
int3
sub
in
stos
xor
out
ret
lret
call
pop
movsb
arpl
jnp
imul
fwait
pop
and
enter
test
orl
je
shl
mov
xorb
repnz
imul
pushf
movsb
cmp
and
dec
fnstsw
in
aad
jns
negl
lods
xor
mov
repnz
sbb
or
sbb
pop
push
pop
fld
iret
and
xacquire
xchg
aad
movsb
mov
jns
call
imul
enter
push
dec
in
jae
or
mov
sbb
in
ljmp
loopne
dec
movsl
push
push
mov
bound
pop
xor
movsl
push
fildll
jo
adc
mov
out
imul
ret
popf
jae
jp,pn
sub
popa
xor
mov
sahf
sbb
pop
mov
iret
pop
lret
mov
ret
mov
jns
lds
mul
aas
jno
ret
lcall
lods
test
popa
mov
sub
stos
jge
ret
xorb
insb
jge
movsl
add
ljmp
lahf
add
sahf
fwait
lret
mov
xor
dec
insb
fistl
imul
jno
dec
dec
lods
mov
cmpb
adc
mov
mov
cmp
mov
inc
sub
inc
jb
cmc
or
sbb
lret
and
jmp
imulb
xchg
lret
stos
sbb
xor
pop
mov
das
cs
mov
hlt
mov
out
in
inc
jge
jp
adc
lods
cli
lret
gs
mov
out
mov
sub
std
adc
and
jo
pop
shlb
cltd
fidivs
dec
jnp
ffreep
mov
inc
fcoms
push
roll
out
sbb
lods
and
pop
lret
sub
push
test
movsb
mov
aas
sub
sub
lret
pusha
cld
cmp
mov
ret
pop
test
mov
ja
insl
mov
xchg
jbe
insl
cmp
mov
mov
inc
dec
xchg
aam
sbb
ljmp
inc
mov
lods
jecxz
inc
mov
arpl
stos
sub
sub
adc
repz
inc
adc
addb
mov
dec
mov
lock
xchg
mov
mov
jle
mov
stc
aaa
fwait
jmp
adc
dec
xor
dec
sahf
enter
sbb
jl
fwait
icebp
clc
pop
mov
lock
outsb
rcrl
mov
xor
sti
in
inc
mov
xchg
mov
cmp
shr
jmp
stos
cmp
cld
cwtl
sarl
test
mov
test
testb
mov
lods
cmc
cmp
in
mov
incl
subb
movsl
cs
inc
xchg
adcb
or
lods
add
mov
in
loope
jne
ret
push
cmpsl
push
mov
lods
rcrb
jecxz
add
mov
jno
and
insl
and
repnz
arpl
fdiv
cmpsl
sti
mov
fsubl
pop
push
out
jno
and
xchg
dec
hlt
aam
bound
lods
mov
pushf
adc
into
or
cmp
mov
xchg
cld
pop
es
inc
mov
or
icebp
movsb
mov
dec
sahf
mov
xchg
dec
cs
insl
inc
dec
lods
lret
les
mov
push
scas
loopne
js
fcmovu
int3
xor
out
mov
push
pop
xor
lock
leave
jp
popf
cmp
add
mov
cmp
adc
inc
push
sub
or
xor
cmovbe
jl
int3
jmp
adc
sahf
or
or
xlat
shrb
sbb
leave
aas
shlb
scas
lahf
mov
inc
insb
jno
test
inc
stos
ror
and
cmp
ficomps
mov
popf
lret
rorl
ja
sbb
imul
xor
jne
subl
pop
call
dec
mov
test
and
pop
aas
shrb
out
sbb
out
test
scas
inc
mov
xchg
xchg
dec
aas
mov
adc
lcall
xor
add
inc
movsl
fs
and
lods
pop
push
pop
lcall
out
push
rcrl
ficompl
pusha
mov
adcl
inc
aad
dec
insb
cld
jp
pop
movsl
test
std
and
or
fisubs
shll
loop
aaa
scas
sub
loopne
in
jp
pop
mov
lock
mov
test
insl
rclb
orl
jno
popa
je
popa
inc
mov
or
movsl
cmp
adc
add
add
mov
sbb
xor
push
jns
mov
dec
or
out
xacquire
mov
dec
xchg
cmpsb
into
stos
pop
cltd
or
cmp
into
cmc
dec
iret
imulb
orb
pop
icebp
repnz
flds
mov
pushf
adc
and
in
inc
mov
jmp
sahf
jbe
sbb
xor
xor
and
dec
mov
adc
sub
xor
outsb
pop
jmp
jo
and
lcall
push
scas
test
std
and
cmp
jmp
pop
push
and
into
cmp
dec
dec
in
fistpl
xor
dec
out
fdivp
inc
inc
mov
je
pop
inc
jb
pop
lahf
mov
decb
adc
adc
push
popf
mov
sub
and
push
rolb
repz
lods
shl
and
sub
inc
dec
popf
xchg
mov
add
push
mov
dec
adc
in
jns
dec
int3
ficompl
ror
adc
jb
xchg
cld
rcrl
mov
mov
movsb
mov
imul
in
mov
add
mov
cmc
cmpsl
mov
xchg
xlat
xchg
test
lock
lcall
cli
sub
rcrl
inc
leave
scas
adc
inc
das
cmpsl
loope
add
mov
out
std
sub
fcmovnbe
fcomps
lret
inc
sbb
adc
lods
mov
and
pop
mov
mov
enter
fwait
ret
cld
cmp
rol
aas
repz
push
out
inc
aad
push
rcr
dec
pop
sub
jb
sbb
sbb
cmp
mov
loop
adc
ss
dec
jecxz
mov
lds
add
jae
cmpsl
jb
mov
or
jecxz
das
inc
cmp
dec
cmpl
test
gs
push
or
cmpsl
inc
ror
sbb
xchg
ds
das
dec
dec
dec
and
push
std
and
out
leave
popl
mov
mov
int3
leave
insb
lret
push
inc
imul
push
rcrb
jl
xor
mov
and
ss
add
call
mov
cmc
dec
sub
push
ljmp
adc
mov
cmpsl
es
hlt
adc
mov
lret
or
push
jecxz
pop
xchg
cmp
jmp
cmp
cmc
out
mov
test
pop
and
mov
cmp
pop
jb
inc
aaa
and
sub
cmp
aad
pop
inc
scas
sub
fwait
not
nop
lret
push
ja
inc
pusha
mov
in
out
mov
loopne
add
inc
adc
repz
and
mull
and
mov
ljmp
jne
or
insb
push
dec
test
pop
xor
jbe
lret
pop
mov
call
ljmp
jb
push
aam
inc
data16
or
mov
sub
test
rolb
add
adc
lret
mov
and
int3
imul
das
and
std
xor
lods
roll
pop
dec
bnd
adc
and
xchg
stc
into
jmp
cli
inc
int
gs
jno
push
imul
ror
push
xor
rcrb
lock
lahf
xor
jmp
lods
daa
pop
enter
iret
adc
dec
xor
and
outsb
inc
pop
mov
xchg
fsub
jnp
mov
rcl
pop
sbb
pop
enter
mov
mov
jp
test
leave
cmp
aad
lea
mov
aam
lahf
popa
jp
mov
in
out
pop
into
into
xchg
and
adc
inc
leave
ljmp
dec
mov
scas
jge
adc
loopne
push
xchg
movsb
int
out
or
das
lock
lahf
daa
sub
fdivl
xchg
addr16
stos
outsl
xchg
and
iret
mov
xchg
push
popa
add
sub
pop
or
mov
or
xchg
push
mov
dec
jae
pop
cmp
inc
das
jmp
out
popf
in
or
dec
mov
test
outsb
movsb
push
or
iret
mov
cmp
cmp
les
and
mov
cmpsb
lcall
loope
cltd
cwtl
and
pop
pop
xor
icebp
or
nop
or
sub
jmp
xor
adc
push
loop
aad
mov
and
ss
stos
push
fstps
movsl
xchg
sbb
add
and
push
mov
sub
push
push
push
push
push
push
push
call
mov
mov
xor
mov
mov
rep
inc
cmp
jne
pop
pop
pop
mov
pop
ret
and
and
test
test
or
js
add
mov
adc
in
add
push
call
mov
push
call
push
push
call
push
push
call
push
push
call
cmp
je
mov
push
call
cmp
jne
mov
push
call
push
call
or
je
mov
push
call
test
jne
mov
push
call
cmp
jne
test
je
push
call
mov
push
call
mov
push
call
cmp
jne
cmp
jne
push
call
mov
push
call
cmp
je
mov
push
call
or
je
push
call
mov
push
pushl
call
mov
push
call
push
call
or
jne
push
call
mov
push
call
push
call
mov
push
call
lea
push
push
push
call
add
mov
mov
subl
push
call
mov
addl
push
call
test
jne
mov
call
mov
movl
pushl
push
call
test
je
pushl
shrl
push
call
mov
pushl
call
addl
call
push
add
and
add
mov
mov
add
push
call
push
push
call
mov
push
push
call
mov
push
push
call
test
jne
push
call
mov
mov
mov
cmpl
je
decl
rorl
subl
sub
add
jmp
pop
pop
pop
mov
pop
ret
add
add
mov
add
rclb
add
xchg
add
repnz
add
push
xchg
add
push
xchg
add
and
add
cmp
add
dec
xchg
add
fs
add
jbe
add
mov
add
lods
xchg
add
mov
xchg
add
xchg
add
lock
add
xchg
add
or
add
sub
add
inc
cwtl
add
push
cwtl
add
pusha
cwtl
add
jbe
add
xchg
add
test
add
mov
add
into
cwtl
add
fcompl
add
add
add
adc
add
ss
add
inc
cltd
add
fs
add
js
add
mov
add
mov
add
mov
cltd
add
loopne
add
in
cltd
add
add
add
sub
add
dec
lcall
outsb
lcall
xchg
lcall
rcrb
add
lcall
or
add
and
add
ds
add
inc
fwait
add
push
fwait
add
push
fwait
add
mov
add
movsb
fwait
add
mov
fwait
add
repnz
add
or
add
pushf
add
cmp
add
add
add
mov
add
pushf
add
rcrb
add
pushf
add
adc
add
cmp
add
fs
add
jl
add
mov
add
mov
add
enter
loopne
add
in
popf
add
clc
popf
add
adc
add
cmp
add
pop
sahf
add
insb
sahf
add
test
add
cmpsb
sahf
add
mov
sahf
add
aam
add
ljmp
add
lahf
add
push
lahf
add
es
add
add
add
inc
lahf
add
push
lahf
add
pop
lahf
add
add
add
js
add
mov
add
mov
add
lahf
add
add
add
loop
add
repnz
add
add
add
add
add
and
add
mov
add
push
mov
add
jbe
add
mov
add
mov
mov
add
add
add
fisubs
add
add
add
and
add
cmp
add
push
mov
add
jbe
add
add
add
xchg
mov
add
mov
add
add
add
aam
add
call
add
add
xchg
add
xchg
xchg
add
adcb
add
add
insb
xchg
add
hlt
xchg
add
insb
lahf
add
jl
add
or
add
fcomps
add
sbb
add
sbb
add
dec
xchg
add
aam
add
aam
add
push
xchg
add
hlt
mov
add
js
add
mov
add
adcb
add
add
add
xchg
add
mov
add
add
add
enter
adc
add
mov
xchg
add
rclb
add
xchg
add
repnz
add
push
xchg
add
push
xchg
add
and
add
cmp
add
dec
xchg
add
fs
add
jbe
add
mov
add
lods
xchg
add
mov
xchg
add
xchg
add
lock
add
xchg
add
or
add
sub
add
inc
cwtl
add
push
cwtl
add
pusha
cwtl
add
jbe
add
xchg
add
test
add
mov
add
into
cwtl
add
fcompl
add
add
add
adc
add
ss
add
inc
cltd
add
fs
add
js
add
mov
add
mov
add
mov
cltd
add
loopne
add
in
cltd
add
add
add
sub
add
dec
lcall
outsb
lcall
xchg
lcall
rcrb
add
lcall
or
add
and
add
ds
add
inc
fwait
add
push
fwait
add
push
fwait
add
mov
add
movsb
fwait
add
mov
fwait
add
repnz
add
or
add
pushf
add
cmp
add
add
add
mov
add
pushf
add
rcrb
add
pushf
add
adc
add
cmp
add
fs
add
jl
add
mov
add
mov
add
enter
loopne
add
in
popf
add
clc
popf
add
adc
add
cmp
add
pop
sahf
add
insb
sahf
add
test
add
cmpsb
sahf
add
mov
sahf
add
aam
add
ljmp
add
lahf
add
push
lahf
add
es
add
add
add
inc
lahf
add
push
lahf
add
pop
lahf
add
add
add
js
add
mov
add
mov
add
lahf
add
add
add
loop
add
repnz
add
add
add
add
add
and
add
mov
add
push
mov
add
jbe
add
mov
add
mov
mov
add
add
add
fisubs
add
add
add
and
add
cmp
add
push
mov
add
jbe
add
add
add
xchg
mov
add
mov
add
add
add
aam
add
call
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
gs
jo
popa
je
inc
add
add
push
gs
jbe
outsb
je
add
add
imul
insb
gs
bound
arpl
add
je
popa
jae
inc
jb
outsl
jb
add
add
gs
je
inc
imul
jns
add
add
inc
gs
imul
je
add
add
popa
jo
gs
insb
insb
outsl
arpl
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
dec
gs
jo
jb
add
add
push
outsb
push
gs
js
gs
imul
gs
add
add
je
jb
arpl
jae
gs
jo
add
add
je
jb
arpl
fs
jae
add
add
inc
gs
gs
imul
add
push
gs
imul
outsl
arpl
jae
add
add
insb
gs
jae
dec
jne
gs
add
add
imul
add
inc
jb
popa
je
inc
imul
outsl
arpl
inc
imul
outsl
inc
imul
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
jb
outsb
inc
add
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
jb
insl
jo
inc
add
add
popa
jo
jb
popa
je
add
add
inc
outsl
jo
inc
imul
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
popa
jo
imul
dec
jne
je
inc
jns
gs
outsl
push
imul
add
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
add
je
je
imul
push
add
add
dec
inc
dec
popa
jo
je
imul
add
outsb
fs
insb
outsl
jae
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
dec
jo
outsb
inc
jbe
outsb
je
add
add
inc
gs
jns
je
insl
inc
gs
jne
je
popa
outsb
addr16
inc
add
add
push
imul
jb
add
add
imul
jae
add
push
je
push
outsb
ja
outsb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
je
dec
popa
outsb
fs
add
add
push
gs
outsb
push
gs
js
gs
imul
gs
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
popa
imul
jo
imul
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
dec
jo
outsb
dec
jne
gs
add
add
insb
jae
jb
popa
je
add
add
inc
gs
outsl
fs
gs
imul
add
add
insb
jae
jb
jo
inc
add
add
inc
gs
inc
dec
inc
push
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
fs
push
dec
jne
je
inc
jns
add
add
jae
insl
gs
push
add
add
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
jbe
inc
imul
add
push
popa
insb
imul
add
add
jne
push
inc
jne
data16
add
add
inc
jb
popa
je
dec
jne
gs
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
push
jb
arpl
jae
add
add
inc
gs
imul
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
outsb
fs
gs
inc
imul
insb
outsl
bound
inc
jb
add
add
inc
gs
push
dec
outsb
outsw
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
gs
add
inc
gs
outsl
outsb
jae
insb
gs
push
add
add
inc
imul
je
imul
inc
gs
outsl
outsb
jae
insb
gs
outsl
fs
add
dec
inc
dec
popa
jo
je
imul
add
je
inc
push
add
add
inc
jb
popa
je
push
push
add
add
inc
gs
jns
je
insl
inc
imul
jns
add
add
fs
imul
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
inc
jb
popa
je
inc
imul
outsb
addr16
add
add
push
jne
jae
inc
jbe
outsb
je
add
add
gs
je
inc
jbe
outsb
je
add
add
dec
jae
bound
addr16
jb
jae
outsb
je
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
add
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
push
push
jb
outsl
jb
je
add
add
imul
gs
arpl
add
add
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
popa
jo
insb
insb
outsl
arpl
add
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
imul
gs
jb
outsl
jb
outsl
fs
add
inc
gs
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jne
jb
outsb
je
push
dec
add
add
inc
gs
gs
push
imul
jne
push
imul
inc
gs
je
imul
inc
add
add
inc
jb
popa
je
push
imul
jne
push
imul
push
gs
imul
gs
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
je
popa
je
inc
outsl
jb
popa
je
add
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
push
gs
fs
imul
jae
jb
insl
jo
add
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
imul
bound
gs
add
add
inc
gs
jns
je
insl
push
imul
insb
jae
insb
insb
outsl
arpl
add
add
je
jns
je
insl
push
imul
insb
gs
imul
insb
jae
gs
popa
insb
jne
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
je
dec
popa
outsb
fs
add
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
outsb
insl
popa
jo
imul
insb
add
add
gs
inc
outsl
jae
gs
arpl
add
add
inc
jb
add
add
je
imul
bound
gs
add
add
inc
gs
imul
add
push
gs
outsb
fs
inc
imul
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
dec
popa
jo
imul
insb
add
add
inc
gs
popa
insb
jne
add
xor
xor
inc
dec
dec
add
add
data16
gs
fs
outsb
outsw
add
add
addr16
fs
outsb
outsw
add
add
inc
push
outsl
arpl
je
add
dec
push
push
inc
push
push
cs
dec
dec
add
add
pop
pop
inc
js
inc
jb
insl
gs
popa
outsb
fs
gs
add
aas
aas
xor
arpl
je
outsl
outsb
inc
inc
push
inc
inc
inc
pop
pop
add
add
pop
imul
insl
add
add
js
push
push
js
gs
imul
pop
pop
ja
gs
popa
imul
add
inc
xor
cs
dec
dec
add
add
dec
outsb
imul
add
add
inc
outsl
push
outsb
imul
imul
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
inc
push
xor
cs
dec
dec
add
add
inc
popa
insb
insb
push
imul
outsl
arpl
add
inc
imul
dec
gs
popa
addr16
add
add
inc
gs
popa
jb
outsb
je
add
push
gs
gs
jae
inc
popa
jo
jne
add
add
inc
gs
insb
addr16
je
insl
add
add
inc
gs
jns
je
insl
dec
gs
imul
ja
jo
imul
add
push
imul
add
inc
imul
add
add
jo
je
push
popa
addr16
add
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
inc
inc
dec
push
dec
cs
dec
dec
add
add
gs
je
push
arpl
imul
add
push
inc
push
dec
xor
cs
dec
dec
add
add
push
gs
jo
outsb
dec
gs
js
add
add
addr16
gs
popa
insb
jne
inc
js
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
dec
outsb
imul
inc
arpl
add
addr16
insb
outsl
jae
dec
gs
add
push
gs
jb
inc
jbe
outsb
je
add
add
push
gs
outsb
jne
dec
gs
js
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
push
dec
dec
dec
cs
dec
dec
add
add
jb
jne
jb
push
popa
insb
jne
push
add
push
dec
dec
dec
dec
inc
push
cs
dec
dec
add
add
je
jb
gs
gs
jo
imul
dec
inc
dec
dec
xor
cs
dec
dec
add
add
inc
gs
outsl
insb
fs
popa
je
inc
add
add
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
