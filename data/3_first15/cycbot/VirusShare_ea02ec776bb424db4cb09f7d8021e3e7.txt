cmp
dec
scas
dec
cwtl
int3
fwait
shrl
jo
mov
mov
leave
xchg
fstpt
or
push
push
jo
mov
in
inc
add
loopne
mov
mov
mov
lods
loope
mov
mov
jmp
aam
lea
fiaddl
mov
push
je
mov
inc
push
popa
int3
dec
add
mov
ja
test
dec
xchg
sbb
mov
dec
cmp
push
jmp
xor
mov
mov
add
addb
aaa
dec
pop
js
add
dec
jns
jo
mov
mov
or
add
mov
popf
xchg
add
mov
mov
push
jne
mov
mov
fidivs
sbb
xchg
movsb
out
xor
add
fwait
test
insb
jbe
add
mov
into
mov
data16
or
fucom
adc
lds
cmp
jo
mov
or
std
jnp
repnz
mov
mov
add
movsb
les
mov
add
push
add
xor
mov
add
mov
mov
cmp
or
mov
insl
nop
add
data16
daa
mov
adc
and
mov
repz
jmp
add
jp
add
repnz
and
mov
sub
pop
jp
call
mov
jnp
aas
jo
mov
mov
mov
add
inc
out
jecxz
mov
xchg
mov
stos
jae
int3
cltd
cmp
add
jl
ret
push
lret
mov
mov
adc
mov
jae
add
jns
addr16
xchg
jbe
out
add
cmp
push
push
push
lods
repz
add
sbb
lock
sub
arpl
cmp
arpl
mov
add
jecxz,pn
jbe
in
jns
add
jge
jne
lea
cltd
push
cmp
inc
scas
inc
in
add
fisubrs
rcll
stc
xorl
pop
inc
movsb
adc
mov
dec
jo
mov
and
mov
add
sbb
das
sbb
ss
add
mov
leave
hlt
jnp
arpl
aaa
mov
cmp
decl
add
add
out
mov
mov
in
movsb
add
add
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
dec
cmp
and
mov
or
loopne
mov
adc
mov
lahf
or
sub
in
mov
mov
push
jae
pop
and
movsl
lds
js
fs
mov
mov
add
add
add
mov
sti
jnp
sub
jns
adc
add
push
int3
in
xchg
addr16
fucomi
into
inc
ja
or
add
push
pop
bound
mov
rcrl
repz
das
xchg
sbb
jb
mov
sbb
add
stc
dec
xchg
add
mov
mov
add
out
cmc
mov
inc
mov
mov
lods
pop
out
fisubl
add
clc
mull
add
mov
insl
fistpl
add
dec
adc
cmp
dec
xchg
mov
inc
add
add
leave
jge
adc
idivb
inc
test
sbb
sbb
mov
ds
push
or
gs
mov
xor
icebp
fistpl
add
jns
xchg
and
sbb
shrd
and
mov
outsl
dec
sub
cmp
add
sub
xlat
jg
lods
cwtl
jp
insl
inc
and
mov
dec
outsb
dec
inc
lret
inc
mov
inc
push
int
dec
cmpsb
jmp
pop
dec
pop
je
incl
mov
add
shl
inc
add
sbb
pop
push
in
pop
icebp
mov
mov
gs
roll
mov
push
clc
sbb
xor
je
addb
js
scas
rorl
fld1
jecxz
imul
mov
repnz
aas
adc
mov
scas
in
js
jecxz
rolb
aam
xchg
stc
sahf
jne
out
addb
arpl
sti
or
mov
xchg
add
dec
add
mov
mov
inc
and
mov
mov
push
fmul
arpl
push
xchg
rolb
arpl
fisubs
add
dec
sub
movsb
test
mov
adc
stc
xchg
push
fildll
in
pop
mov
mov
push
or
add
lea
cli
add
mov
adc
mov
iret
popa
in
popf
stos
mov
data16
fldl2e
sub
popf
cmp
or
lock
pop
jb
mov
test
add
or
outsb
out
xchg
inc
add
mov
stos
les
int
mov
add
stos
clc
jecxz
add
add
mov
add
into
xor
mov
mov
mov
jg
push
push
jb
mov
lds
lret
xchg
push
in
data16
jmp
mov
xchg
lret
add
les
mov
mov
add
cmc
loop
mov
dec
ficompl
mov
in
dec
shrl
jb
mov
add
stos
mov
addb
imul
pop
addb
pop
push
mov
add
inc
add
stos
pop
ljmp
adc
add
push
fwait
inc
xchg
mov
in
lods
push
inc
xor
mov
mov
mov
dec
lahf
mov
dec
cmp
xchg
add
mov
mov
mov
rolb
mov
xchg
mov
out
mov
repz
negl
sbb
leave
repz
and
cmp
xor
add
jns
ja
add
mov
aaa
in
add
add
mov
push
push
xchg
add
mov
aam
sub
add
add
xchg
fcmovb
dec
xor
mov
add
add
inc
stc
mov
in
les
add
pop
ja
add
xchg
sub
enter
aas
mov
mov
aas
push
jle
cmp
add
mov
inc
mov
add
push
je
push
mov
jb
mov
add
sub
push
test
mov
xor
arpl
mov
add
sub
fwait
js
mov
and
out
stc
dec
push
lds
add
sbb
mov
sbb
xchg
fldcw
rolb
mov
mov
add
iret
add
hlt
in
popa
add
mov
gs
inc
roll
add
add
test
flds
add
xor
cmpsl
pusha
add
pop
adc
or
ret
push
hlt
sahf
mov
repz
mov
push
xchg
cwtl
sti
lret
pop
dec
inc
add
add
add
pop
loop
mov
inc
add
mov
in
adc
mov
repnz
mov
pop
scas
xor
mov
mov
pop
ja
cmpsl
outsb
int
std
cli
rorl
nop
add
dec
movsb
sbb
mov
add
pop
mov
scas
or
push
push
push
inc
call
ljmp
mov
jp
push
jo
mov
xor
mov
imul
mov
out
in
add
mov
mov
ret
pushf
mov
pop
rolb
mov
mov
mov
add
and
inc
push
lahf
mov
mov
mov
das
lret
daa
test
add
push
divb
and
mul
pop
repz
mov
xchg
add
mov
mov
jnp
test
test
cmp
aam
into
cmc
sti
aaa
lock
add
add
mov
in
xor
mov
icebp
push
and
lods
mov
sti
outsl
movsb
pop
xor
lret
mov
rolb
ret
push
cmp
daa
sahf
fmuls
jle
dec
mov
cmpsl
pusha
add
mov
mov
icebp
test
mov
add
ss
xlat
inc
xor
ljmp
mov
or
pop
out
xchg
xchg
add
cmc
imul
test
std
sub
fidivrl
mul
adc
push
int
inc
sub
pusha
add
add
fimuls
xlat
push
add
out
repnz
movsb
iret
mov
add
je
sbb
jg
xor
and
mov
mov
mov
xchg
mov
cld
test
add
mov
cmp
mov
jecxz
outsb
dec
jl
lea
dec
mov
jecxz
addr16
sbb
xchg
imul
ss
repz
add
xor
mov
fists
cmp
mov
push
pop
pop
pop
push
jecxz
add
add
iret
mov
add
adc
mov
fwait
aad
fnstenv
std
sbb
loope
push
add
movsl
cmpsb
ud0
mov
dec
cltd
mov
jp
movsl
add
adc
subl
adc
jae
dec
loop
mov
add
push
add
cld
and
mov
fistpl
add
add
mov
pop
jp
sub
or
enter
pusha
add
add
add
cmp
pop
in
xor
mov
xlat
xor
mov
mov
add
mov
rolb
mov
adc
or
push
pop
adc
rolb
mov
imul
mov
fstl
mov
lods
cmp
imull
ljmp
mov
inc
add
add
mov
pop
hlt
push
add
push
xor
mov
in
adc
in
sbb
addb
pusha
add
cltd
xor
ljmp
mov
mov
mov
imul
ret
add
jmp
test
add
or
jecxz
xchg
pushl
add
mov
add
mov
mov
pushf
sub
xchg
or
jbe
adc
rcll
push
cmp
jmp
mov
add
mov
inc
pop
jne
lea
and
fsub
insb
int
add
addb
inc
int
add
xchg
sub
add
ret
and
cltd
stos
jecxz
jp
cwtl
test
jne
jo
mov
scas
popa
cmp
inc
add
iret
dec
icebp
aam
fldt
xchg
mov
loop
mov
add
inc
mov
and
je
hlt
sub
ret
jmp
xchg
pop
sub
addb
pop
pop
fldt
mov
mov
xchg
add
mov
shrl
add
pop
jp
sbb
mov
call
push
aaa
faddp
jae
pop
addb
cs
mov
call
pop
mov
mov
pcmpeqw
rolb
mov
add
mov
and
pop
icebp
xchg
in
jp
mov
push
jl
aas
inc
addb
adc
mov
cmp
outsl
scas
pop
fwait
addb
cmpsb
fwait
inc
push
scas
cmp
mov
inc
add
mov
cli
jl
bound
mov
pop
test
mov
repnz
bound
mov
pop
adc
mov
push
fs
mov
mov
mov
frstor
mov
lcall
xor
add
dec
dec
out
mov
inc
add
mov
mov
add
jnp
jne
iret
cmp
lea
jmp
inc
add
add
int3
push
xchg
or
add
mov
movsb
ret
mov
push
fcomi
sti
add
mov
add
add
out
mov
lods
icebp
xor
das
rcll
inc
add
jge
add
and
add
add
lods
in
ss
inc
add
andl
push
push
mov
xchg
addb
inc
jmp
dec
pop
les
add
add
addr16
push
xor
in
pop
cmp
and
icebp
and
add
mov
mov
mov
test
inc
cmp
je
sbb
add
mov
add
fidivl
mov
inc
loopne
mov
sub
movsb
xchg
rolb
xor
repnz
add
adc
dec
lds
subl
add
fwait
repnz
mov
out
sbb
add
fs
fmuls
je
addb
roll
add
push
xchg
lahf
inc
mov
sbb
push
in
mov
dec
or
pusha
add
sarl
add
mov
sti
ds
add
jno
jnp
cmp
cmp
mov
sahf
data16
add
leave
lahf
idivl
out
add
std
rolb
jae
insl
aaa
xchg
xor
test
popf
aam
inc
fst
ds
in
addb
fbstp
mov
addb
mov
or
and
mov
sti
fstp
fsub
add
pop
fldcw
pusha
add
movsl
mov
sub
mov
popf
mov
mov
mov
and
mov
add
fsubrs
add
int3
push
shll
and
mov
add
sbb
sarl
xor
stos
daa
and
jb
mov
out
test
add
mov
aad
cmp
leave
and
jb
mov
jnp
xchg
mov
ficompl
out
mov
imul
stos
add
adc
mov
pop
fdiv
rolb
mov
jae
cmp
add
add
add
mov
add
mov
xor
stos
rcl
add
adc
pop
cmc
mov
adc
mov
and
jo
mov
add
mov
mov
rolb
out
sub
inc
jae
add
leave
std
dec
cmp
outsl
adc
mov
es
in
pop
and
and
xchg
dec
insl
cmp
sub
cmpsl
pushf
jo
mov
sarl
lock
addb
xchg
addr16
jne
call
add
xor
mov
popf
out
mov
mov
add
add
add
mov
pop
adc
mov
cmp
scas
movsb
out
rolb
mov
sbb
mov
mov
mov
inc
or
add
add
sbb
adc
add
mov
xchg
cmpl
repz
mov
mov
inc
lods
rolb
mov
jo
mov
fidivs
add
add
fdiv
and
in
imull
add
add
test
pop
lcall
cmp
mov
cltd
pop
clc
out
aas
xchg
gs
pop
enter
mov
xchg
sbb
pushl
push
pop
sahf
jp
ss
mov
data16
out
pop
add
mov
pop
ja
sbb
sub
xchg
add
dec
mov
inc
dec
push
jmp
lret
fucomip
inc
push
test
add
loopne
mov
jg
adc
mov
mov
mov
mov
xor
mov
adc
mov
add
stos
aas
insl
test
cld
sbb
adc
leave
testl
addb
in
add
jo
mov
fsubl
cmc
dec
aad
sbb
dec
xor
jb
mov
push
add
mov
mov
sbb
pusha
add
enter
mov
add
mov
jecxz
push
pop
faddl
out
jecxz
ss
cli
push
xor
add
stos
in
mov
lods
lahf
imul
mov
call
xchg
add
add
aad
lods
mov
mov
pop
cmp
fisttpl
js
pop
pop
enter
push
jae
lahf
daa
ds
mov
adc
mov
inc
mov
mov
mov
cld
xor
rolb
mov
mov
add
test
inc
mov
test
aam
pop
rolb
arpl
mov
sbbl
pop
mov
add
mov
add
mov
fisubrs
mov
lods
iret
sbb
mov
jmp
repnz
add
mov
jl
test
add
mov
imul
push
add
sahf
imul
mov
aaa
push
imul
mov
mov
add
xlat
sub
divl
xchg
ret
xor
stc
jnp
add
mov
add
add
mov
mov
mov
mov
add
inc
fdivl
add
mov
mov
pop
inc
ret
jl
mov
add
jbe
add
sbb
into
dec
sbb
add
cmc
iret
je
popa
ret
cmp
decl
push
in
sub
push
add
mov
xchg
sbb
shll
mov
dec
lods
xor
mov
sub
aaa
rolb
dec
data16
cli
orl
mov
push
add
xchg
dec
or
pop
mov
jnp
add
mov
mov
cmp
addb
cmp
mov
push
jge
scas
jae
lods
mov
xchg
cmc
adc
and
mov
sub
repz
push
dec
cmpsl
and
sti
add
sbb
mov
std
inc
add
mov
add
sahf
and
mov
repnz
ja
dec
or
out
add
xor
in
cmp
add
mov
movsl
stos
cltd
push
mov
mov
int
adc
xchg
icebp
scas
fldt
test
jo
mov
add
add
out
add
push
push
push
add
cmpsb
repnz
rolb
mov
pushf
inc
push
pop
inc
outsl
mov
scas
aas
cmp
add
jnp
inc
add
jl
dec
aaa
sbb
stos
lods
xor
add
push
jbe
add
mov
pop
pop
hlt
adc
dec
dec
mov
rolb
mov
aad
imul
add
loope
out
popa
repnz
sub
add
add
add
mov
in
outsl
jbe
adc
mov
push
repnz
lcall
pusha
add
mov
xchg
xor
gs
jnp
lods
ds
mov
jbe
jle
stos
lods
jl
adc
pop
in
leave
mov
jbe
xchg
inc
add
inc
rolb
leave
es
or
xor
cmp
stos
imul
fwait
xor
mov
pop
ret
or
sbb
mov
rolb
mov
pop
add
loopne
mov
mov
add
jmp
pop
fistps
fwait
jecxz
adc
lods
lret
xchg
sub
jns
aaa
xor
daa
and
jge
adc
inc
ja
xchg
popf
mov
mov
dec
movsb
jle
negl
movsl
ljmp
add
mov
lret
adc
add
mov
ja
jbe
cmp
xor
outsb
pop
ret
lahf
repnz
jge
ja,pn
loopne
mov
mov
mov
dec
add
mov
fnstenv
xchg
ds
jo
mov
shr
addr16
inc
dec
mov
add
mov
mov
xor
lods
inc
jmp
adc
add
out
fcoml
adc
mov
sarl
pop
push
pop
ficoml
lsl
mov
rolb
mov
mov
jp
scas
inc
add
jg
sbb
inc
movsl
pop
es
mov
xor
mov
scas
mov
or
clc
clc
xchg
rolb
mov
xor
into
cmp
movsl
lds
lock
mov
jb
mov
mov
and
shll
pop
or
jmp
mov
ret
inc
sbb
or
pop
add
mov
jae
cmp
push
jl
aad
mov
adc
add
fsubrl
mov
arpl
mov
mov
test
pop
fsubp
enter
outsl
outsb
pop
adc
mov
movsl
test
mov
add
push
jnp
push
add
lds
js
xor
xchg
mov
lods
movsl
and
inc
es
jmp
addb
insb
outsl
rcr
add
mov
xchg
sbb
das
mov
mov
add
cmc
add
push
std
cmp
sbb
push
push
bound
mov
add
sub
int3
dec
call
add
mov
add
mov
jbe
add
out
mov
frstor
imul
xor
mov
inc
cmpsl
cmp
aas
arpl
mov
out
jnp
xchg
mov
imull
aam
ss
add
clc
lret
bound
mov
jnp
mov
mov
inc
insl
frstor
inc
add
add
cmp
popa
xor
mov
add
cltd
in
neg
enter
roll
add
mov
sti
cmc
das
cmp
dec
xchg
add
adc
in
call
add
sahf
jae
add
jae
outsl
cmp
add
jbe
lret
push
outsl
out
push
imul
add
xor
stc
mov
mov
daa
push
addb
cmp
mov
data16
adc
add
and
mov
add
adc
mov
pop
dec
push
add
test
add
daa
cmc
and
mov
add
mov
mov
add
adc
adc
mov
and
loope
adc
into
mov
mov
adc
jno
add
push
outsb
in
pop
fcoms
in
adc
mov
mov
push
leave
test
es
out
sub
shll
rolb
jge
inc
add
add
jnp
repz
rolb
mov
mov
add
rolb
mov
aad
rolb
mov
imul
cltd
pop
adc
mov
jl
ja
push
add
jmp
dec
addb
cmp
push
dec
cli
jo
mov
sti
push
mulb
add
xlat
mov
loope
leave
dec
inc
icebp
out
ljmp
adc
push
add
pop
pushf
inc
add
imul
add
and
pop
iret
push
lahf
repz
std
and
add
in
addb
sbb
jle
fwait
sarl
rcll
mov
insb
cmpsl
adc
add
fst
add
xlat
xchg
add
stos
pop
cmp
addb
pop
adc
mov
sub
mov
mov
pop
push
daa
cmpsl
lret
xor
jne
add
bound
mov
add
add
xor
mov
mov
lret
insl
int3
stc
rolb
mov
mov
inc
ret
ds
jnp
xor
cld
std
jge
and
add
and
mov
data16
mov
mov
jo
mov
mov
aaa
sbb
cmp
lods
or
lcall
ret
shll
mov
scas
ljmp
add
add
add
cltd
movl
pusha
add
lahf
add
neg
push
lock
and
lea
adc
push
push
mov
pushf
pop
mov
push
js
inc
dec
pop
andl
push
add
mov
xor
xlat
addb
in
bound
mov
cmp
jnp
add
mov
out
mov
sub
add
push
test
mov
add
fxch
outsb
mov
je
jmp
adcl
fsts
fistps
aaa
addb
lea
mov
mov
cmp
push
mov
jb
mov
sub
or
rolb
fldl
adc
push
add
cmp
add
dec
push
repz
push
jle
pop
mov
cs
loope
test
outsb
add
mov
or
xchg
add
lds
movsl
jbe
fisubrs
add
inc
shr
movl
ror
xchg
push
dec
sbb
adc
mov
fidivs
addb
push
sbb
loop
mov
adc
mov
dec
lods
rcll
xchg
icebp
sub
mov
aas
sub
cmp
or
and
inc
cmp
test
sbb
out
idivl
rolb
mov
mov
adc
ss
aam
lret
mov
push
addr16
fstpl
lret
stc
loop
mov
sub
popf
jo
mov
mov
mov
pop
lods
mov
mov
jl
outsl
jo
mov
mov
mov
movsl
cltd
out
pop
inc
inc
mov
push
mov
cmpsb
cmp
add
out
enter
xor
mov
ss
push
add
add
and
mov
push
orl
mov
and
sti
aaa
cmpsb
cltd
xor
arpl
adc
add
inc
fcoml
add
out
sub
insb
addb
mov
cmp
xor
fidivrs
sysenter
push
cmp
mov
add
pop
cs
sbbl
cmc
xor
mov
divl
add
out
add
fs
adc
mov
lret
add
movsl
int3
jnp
add
dec
mov
mov
add
add
xchg
sbb
xchg
in
inc
add
mov
inc
add
mov
scas
lea
add
dec
mov
in
xlat
aad
jmp
or
mov
sbb
lahf
das
cmp
add
mull
and
mov
ja
push
mov
or
add
sbb
repz
jmp
stc
call
dec
inc
mov
mov
add
or
mov
mov
loop
mov
sbb
add
cltd
jne
add
outsl
movsb
rolb
mov
aas
dec
insb
fidivrl
dec
add
add
cmp
inc
leave
pop
pop
add
scas
mov
add
stc
imul
mov
add
mov
cmp
lret
outsb
dec
dec
les
mov
and
mov
mov
adc
add
mov
pop
dec
call
outsb
repz
add
lahf
in
jecxz
cmp
int3
je
jno
xor
call
in
aaa
loopne
mov
dec
push
sbb
dec
fwait
push
inc
sbb
xor
mov
cmp
movl
mov
mov
mov
cli
in
lret
outsb
cmpsb
ret
xor
add
add
pop
mov
add
fdivrs
xchg
cmp
push
add
xchg
xchg
add
insb
jg
or
mov
lahf
mov
mov
sbb
xchg
add
add
dec
jmp
inc
add
cld
pop
ret
jmp
js
push
out
add
jmp
cmp
pop
bound
mov
aam
jno
jp
or
add
adc
mov
cmpsb
jb
mov
ds
cmp
mov
ljmp
loop
mov
sub
add
add
mov
mov
je
stc
sub
mov
mov
and
data16
outsl
imul
call
mov
mov
js
add
das
adc
mov
inc
or
pop
shr
aas
push
mov
mov
lret
outsl
insl
test
fists
xchg
sbb
xchg
cwtl
adc
mov
cmc
push
add
rolb
sub
stc
rolb
mov
int
push
mov
loopne
mov
jl
mov
add
and
mov
xlat
add
fcoms
addr16
addr16
test
test
rolb
mov
ljmp
add
bound
mov
jnp
xor
ret
push
test
pop
xchg
or
es
cli
dec
adc
mov
mov
fwait
jo
mov
pop
pop
fs
bound
mov
mov
add
mov
pop
pop
push
mov
pop
push
add
outsb
stos
or
insb
addr16
add
cwtl
aam
add
mov
sbb
inc
sbb
sub
add
cmp
ja
inc
xor
push
inc
xchg
pop
insl
imulb
repz
inc
mov
mov
mov
rolb
mov
adc
mov
scas
ret
pop
adc
mov
add
mov
add
pop
inc
mov
fnstsw
mov
and
mov
add
repz
jmp
cmp
cmp
add
mov
add
leave
mov
fwait
sub
loopne
mov
addr16
cmc
in
add
repz
add
fldt
push
dec
addb
mov
ds
xchg
sbb
sub
mov
add
adc
sub
add
cmpsl
pop
addb
xchg
lret
jb
mov
push
lock
mov
adc
out
mov
shrl
insb
repnz
repz
mov
sarl
stos
lods
dec
mov
mov
repnz
je
mov
mov
push
and
mov
add
jmp
inc
add
cltd
rolb
mov
sub
repz
roll
pop
jno
mov
out
cli
das
xchg
mov
mov
push
pushf
jp
cmp
sbb
xlat
insb
sbb
sbb
xchg
cmpsl
outsb
dec
cld
int3
ljmp
jg
pop
sbbl
aad
icebp
pop
or
add
out
push
lods
jp
cmc
dec
rolb
mov
and
add
mov
and
push
je
push
stos
pop
insb
mov
inc
or
xchg
imul
and
mov
dec
cld
cltd
lock
xchg
movsl
mov
jp
jno
or
sbb
loop
mov
or
add
icebp
fldcw
int3
psrld
mov
imul
out
addb
pop
adc
mov
mov
add
add
dec
mov
leave
ljmp
add
add
loop
mov
js
xchg
cltd
mov
inc
lds
imul
cmc
push
popa
add
mov
mov
push
daa
in
xchg
dec
jmp
addb
xchg
test
jmp
xor
dec
cwtl
loop
mov
add
jnp
stos
xor
mov
cmc
ret
xchg
pop
dec
test
ret
hlt
mov
add
mov
sbb
fisubs
pop
or
out
sahf
sahf
loope
push
add
sub
add
and
mov
fldenv
mov
jp
pop
das
push
popf
rolb
pop
imul
out
jbe
or
shll
mov
add
jmp
jns
mov
in
add
pop
dec
inc
mov
add
pop
mov
rcr
rolb
addr16
scas
rolb
cwtl
testl
cmp
push
loope
mov
lret
mov
mov
sbb
jg
notb
jb
mov
push
pop
js
and
mov
add
insl
cmp
mov
mov
adc
xlat
jbe
jge
add
cli
jecxz
out
loop
mov
and
fcmovbe
add
add
mov
and
sbb
add
add
jge
inc
add
pop
hlt
decb
imull
dec
repnz
mov
adc
jno
movsl
lods
push
push
fisttps
add
add
fisubrl
sbb
fbld
mov
ds
jl,pn
add
mov
inc
repz
das
pop
dec
rolb
mov
sub
sbb
add
popf
xor
stos
cwtl
xor
add
pop
lcall
mov
xchg
push
or
lods
xor
mov
add
add
push
ret
leave
jmp
xchg
add
add
mov
pop
out
inc
iret
das
mov
add
add
jp
call
dec
cwtl
cmp
jecxz
push
sahf
push
cmp
or
sbb
fnop
add
lahf
and
mov
add
pop
lret
sub
aas
daa
jl
mov
mov
mov
mov
mov
loope
cmp
push
lock
cli
jmp
inc
add
cmc
cltd
cmc
in
add
cs
ja
push
mov
sub
jne
cmpsl
sub
add
add
ljmp
cmp
mov
jno
mov
sub
add
push
cmp
in
subl
movsl
dec
icebp
push
out
push
and
mov
add
aas
xchg
imul
mov
bound
mov
add
testl
and
aam
xchg
inc
lea
out
jns
add
push
add
add
mov
mov
add
lahf
aas
mov
daa
jae
mov
and
popa
call
inc
add
rolb
mov
in
repnz
mov
or
add
mov
jno
inc
fistpl
mov
inc
loop
mov
insl
pushf
dec
ds
addl
sub
mov
push
popf
xchg
test
loope
lahf
pop
inc
in
in
cmp
negl
fisubrs
cmp
sub
add
fs
out
sub
add
test
pop
cmp
inc
add
add
jbe
adc
dec
mov
adc
mov
xchg
add
and
fucom
testl
mov
outsb
jb
mov
stc
add
xchg
sbb
mov
rolb
mov
push
insb
add
adc
scas
cmp
xor
mov
pop
push
jge
add
dec
pushf
lret
push
mov
leave
test
pop
aam
adc
daa
adc
xor
mov
inc
add
inc
mov
mov
out
and
xchg
ljmp
inc
add
mov
lds
add
xchg
arpl
popf
add
xchg
mov
lods
into
xchg
andl
dec
iret
sbb
in
add
mov
stos
push
mov
dec
cmp
mov
push
add
rolb
mov
inc
push
sub
idivl
and
add
pusha
add
or
mov
or
out
sbb
add
mov
add
fs
and
mov
jne
mov
mov
mov
lods
mov
insb
icebp
jle
add
mov
jae
add
pop
out
rcll
mov
rep
inc
dec
in
outsl
jbe
xchg
xor
mov
jp
jge
fstpt
xchg
mov
ret
sub
mov
push
ret
and
mov
rol
adc
scas
and
add
out
outsl
push
adc
sbb
clc
mov
std
aam
ror
addl
loope
cmpsl
xor
mov
pop
repnz
add
add
add
mov
add
add
pop
jmp
lock
xor
decl
fsts
testb
or
pop
loope
sahf
ret
loop
mov
loope
cmc
lea
and
mov
sbb
imul
outsb
addb
jl
and
mov
cltd
imul
stos
xlat
sub
sbb
ja
out
or
mov
push
xchg
and
add
pop
adc
mov
andl
mov
sbb
push
je
mov
inc
addb
outsl
fs
add
std
dec
cmpsl
jge
add
mov
mov
xor
sbb
jl
mov
add
xor
mov
out
jbe
add
cmp
aaa
jns
mov
mov
outsb
xchg
data16
popa
xchg
add
mov
sub
add
cmp
sahf
jns
mov
mov
mov
aas
cld
or
push
pushf
addb
pushf
int
sbb
add
mov
mov
test
mov
inc
fs
push
add
add
mov
pop
xchg
mov
inc
add
add
push
or
fidivl
jno
jp
sub
pop
pop
mov
scas
add
stos
test
xchg
add
add
rolb
mov
das
leave
in
add
mov
xor
pop
in
clc
push
addb
mov
cwtl
dec
daa
inc
xchg
inc
add
cmpsb
or
push
add
and
mov
jle
sub
push
or
rorl
add
mov
bound
mov
popf
outsl
mov
add
dec
out
stos
in
out
add
lcall
mov
adc
mov
add
insb
pop
add
add
pop
popa
in
rolb
mov
movsb
adc
inc
add
or
add
mov
lock
add
test
scas
or
cmp
loopne
mov
aas
jae
es
popa
mov
push
mov
insl
mov
add
mov
mov
dec
dec
pushl
ret
jns
sbb
adc
or
dec
pushf
jecxz
scas
sbb
adc
xlat
nop
add
imul
and
mov
jp
daa
mov
add
ja
outsb
sbb
lea
or
movsb
fwait
lcall
sbb
mov
add
rolb
mov
pop
xchg
inc
pop
iret
sub
add
add
add
inc
inc
sbb
js
add
mov
pop
sahf
inc
addb
inc
add
mov
js
in
sbb
and
sbb
mov
iret
test
xchg
fwait
push
std
dec
and
mov
pop
push
add
xor
mov
lret
mov
mov
mov
cmp
lcall
inc
add
xchg
sub
daa
data16
cmp
add
add
sahf
mov
dec
xchg
sub
mov
mov
movsl
mov
inc
add
jnp
lods
sti
rcll
mov
inc
pop
xor
push
xchg
rep
push
loop
mov
jbe
shrl
mov
adc
mov
test
cltd
mov
fldl
into
addr16
sub
pop
lods
loop
mov
adc
add
add
adcl
cmp
js
mov
mov
add
add
fbstp
ret
inc
and
mov
cmp
mov
add
sbb
pop
in
insl
adc
adc
mov
sbb
repnz
add
mov
and
mov
add
jl
add
test
or
inc
jbe
pop
sub
xor
cmp
push
add
mov
rolb
mov
fcomps
pop
dec
push
hlt
cmp
mov
mov
mulb
add
bound
mov
cmpsb
in
insl
in
add
mov
add
mov
or
lds
xor
mov
sbb
add
mov
mov
cmovle
sub
ljmp
inc
sbb
jle
xor
pop
push
add
and
mov
mov
out
mov
mov
imul
mov
or
lret
sbb
cmp
mov
add
mov
cmp
mov
je
add
mov
mov
mov
mov
add
adc
mov
cwtl
test
and
mov
push
imul
dec
mov
stos
insb
fcomps
jl
cmp
mov
outsl
pop
addb
mov
mov
mov
add
adc
pop
lahf
jle
add
inc
enter
int3
push
pop
lea
and
mov
mov
xchg
cld
popa
mov
pusha
add
pop
adc
mov
add
cs
dec
xchg
mov
add
shrl
addb
stc
xchg
add
mov
inc
mov
pusha
add
roll
sub
mov
sti
jmp
ret
inc
and
mov
sbb
inc
rol
lahf
out
negb
sub
inc
mov
inc
in
repnz
pop
addb
fucom
add
mov
pop
and
cmc
addl
popa
sbb
lock
out
ljmp
addb
mov
rolb
cmp
jbe
andl
dec
xor
mov
pop
xorl
cli
movsl
dec
das
adc
mov
cmp
mov
jne
add
add
adc
push
add
jnp
dec
div
mov
mov
dec
mov
icebp
mov
insb
add
add
mov
fnstcw
fbld
enter
mov
add
mov
mov
mov
mov
or
add
dec
or
aad
aam
dec
cmp
jae
add
add
add
sbb
sub
inc
jo
mov
pop
cmc
jmp
mov
mov
add
lock
ret
push
shll
aas
daa
mov
add
mov
das
lcall
sbb
add
inc
dec
rcrl
fbstp
jne
fiadds
in
lahf
sub
std
rorl
and
add
push
add
inc
es
cmp
push
cmp
mov
fidivrs
fisubrl
lahf
mov
mov
mov
cmp
into
test
xchg
add
jno
fs
and
dec
repz
iret
push
xor
mov
add
test
adc
mov
xchg
jne
sbb
mov
push
cmp
xchg
push
mov
pop
pop
lock
sbb
ja
mov
mov
lea
mov
mov
je
in
add
mov
jne
stc
jnp
xchg
addb
xor
pop
arpl
test
in
cmp
and
mov
push
add
or
outsb
push
add
cld
popf
cmp
gs
out
mov
rolb
mov
pop
ret
out
adc
cltd
xor
inc
add
push
rolb
mov
std
out
xor
mov
mov
mov
dec
push
add
push
jb
mov
mov
into
mov
fcmovnu
insb
pop
ja
cmp
or
mov
cld
mov
add
mov
stos
push
sahf
popf
xchg
div
mov
int3
mov
bound
mov
lea
push
mov
cmp
or
dec
mov
leave
inc
mov
call
daa
xchg
scas
inc
add
into
outsl
sub
push
xor
inc
xlat
dec
add
repnz
mov
add
add
negl
add
mov
jbe
jmp
mov
stos
xchg
add
xchg
push
sahf
test
push
add
lret
nop
add
arpl
mov
aaa
mov
pop
or
add
mov
adc
jmp
jg
aaa
push
cmc
cwtl
mov
cli
addb
cwtl
push
add
dec
inc
add
add
mov
insl
fdivp
mov
mov
xchg
fcmovnu
iret
ret
jle
jae
out
add
enter
or
xchg
jmp
mov
mov
push
or
push
mov
notl
mov
add
scas
jb
mov
adc
push
add
mov
cmp
mov
add
mov
sub
and
mov
mov
call
pop
mov
or
pop
cmp
dec
sub
adc
aad
cli
daa
dec
sub
addr16
dec
arpl
jnp
mov
pop
cli
cld
repz
dec
scas
xor
fistpl
sub
jo
mov
jg
cltd
sbb
gs
push
pop
das
cmp
stos
or
out
jp
or
lea
loopne
mov
push
dec
pop
pop
aam
bound
mov
dec
sbb
mov
mov
into
adc
mov
add
rolb
mov
add
dec
add
stos
cli
sbb
insl
pop
js
in
lahf
movsl
dec
pushf
inc
fstpl
repz
pop
fimuls
mov
icebp
mov
xchg
add
push
lcall
sti
filds
push
jle
or
mov
lahf
hlt
mov
gs
sub
jle
cmpsb
pusha
add
and
cmp
add
dec
mov
jg
pop
inc
jns
add
mov
add
pop
icebp
jmp
add
add
cmc
mov
fnstsw
add
add
sbb
cmp
sbb
test
mov
mov
push
call
sub
lea
gs
lods
pusha
add
repz
add
mov
dec
push
insb
adc
mov
inc
add
cmp
cs
test
xor
cmp
xchg
and
xor
fisubl
add
or
push
filds
cmc
or
js
pop
push
movsl
inc
fnsave
cli
rolb
xor
dec
aad
add
add
mov
adc
stos
push
push
add
mov
mov
inc
ljmp
cmp
adc
cmp
loope
in
negb
dec
jge
jge
or
stc
mov
mov
lock
xchg
lods
in
int
sbb
fnsave
arpl
push
jmp
divb
add
mov
jns
rolb
mov
cmpsb
mov
or
and
add
mov
or
loop
mov
add
mov
aad
or
rolb
mov
jae
push
loop
mov
ds
and
mov
sub
popa
imul
dec
pushf
jb
mov
sbb
add
adc
push
pop
lods
sub
jp
in
mov
iret
lea
test
mov
insb
movsl
or
jge
jmp
movl
push
and
in
add
or
mov
movsl
out
loopne
mov
add
jmp
add
sbb
ja
outsb
push
jg
pop
sub
mov
dec
inc
mov
ljmp
test
rolb
orl
jne
xchg
add
cmpsl
push
and
je
xor
add
loop
mov
mov
mov
jmp
pop
add
fimull
and
mov
movsl
test
stc
out
fadds
push
add
rolb
addb
cmp
add
inc
mov
mov
add
add
pop
cwtl
and
incb
add
adc
mov
rolb
mov
add
inc
jge
cltd
xchg
pop
out
lods
mov
mov
add
arpl
pop
cmpsb
jb
mov
stos
pop
jbe
add
leave
dec
add
mov
loop
mov
xchg
xor
cwtl
je
jecxz
mov
mov
mov
add
out
adc
sub
daa
mov
fnstenv
cltd
cmp
add
add
mov
add
add
lds
xor
out
adc
mov
push
mov
lds
xor
mov
add
lea
iret
mov
xor
mov
repnz
dec
pop
dec
fwait
xor
mov
xchg
mov
mov
addb
add
and
rcrl
adc
mov
dec
out
lcall
and
mov
add
cmp
in
add
xor
mov
loopne
mov
cmp
mov
mov
cmpsl
mov
movsl
pop
mov
test
adc
add
cmp
shll
mov
dec
xchg
mov
mov
adc
mov
mov
or
push
leave
fs
lcall
aad
lret
mov
sbb
xchg
xchg
mov
sbb
lret
xchg
add
call
loope
push
pop
dec
in
pop
jno
into
in
sub
add
in
add
mov
add
add
mov
stc
mov
sbb
cmpl
xchg
repz
mov
sub
add
mov
add
pop
es
adc
mov
sub
ja
outsb
es
push
mov
stos
wbinvd
cmp
cli
add
mov
sahf
outsb
rcrl
cltd
lret
fdivrs
adc
outsb
lods
mov
push
orl
mov
push
je
fldt
lret
mov
inc
add
fcoml
in
ret
mov
imul
inc
push
xchg
adc
mov
fstl
pop
jb
mov
jno
lock
mov
sub
sub
push
xor
mov
cwtl
aas
js
pop
push
les
lahf
xchg
pop
bound
mov
inc
pop
pop
rolb
mov
mov
add
mov
mov
insb
push
add
in
jmp
aaa
pop
inc
jb
mov
addb
dec
clc
adc
sbb
sub
add
mov
jmp
inc
pop
push
adc
mov
ret
mov
mov
mov
xchg
add
test
inc
add
mov
add
add
test
dec
and
or
add
lcall
mov
aaa
repz
mov
dec
sbb
add
mov
mov
xchg
ja
or
sahf
xchg
jae
fldcw
add
jle
mov
lds
arpl
pop
addb
add
mov
gs
add
mov
add
sub
add
push
iret
sahf
dec
mov
or
mov
ss
scas
das
test
subl
sbb
out
lea
cli
jno
in
in
pop
lds
movsb
add
enter
push
rcr
inc
in
pushf
lahf
and
in
testl
cmp
and
add
cmp
cmp
gs
add
fnsave
loopne
mov
pop
je
rolb
cmp
addb
cs
mov
add
lret
test
rolb
mov
adc
mov
flds
mov
xchg
jg
outsb
cmpsl
imul
xchg
stos
push
cmp
mov
push
cwtl
jb
mov
xor
mov
cmpsl
pop
mov
lret
add
xor
xchg
jmp
mov
add
pop
imul
lock
add
mov
add
add
adc
mov
xchg
fwait
dec
sbb
rolb
mov
mov
in
mov
dec
pop
dec
cmp
movsb
in
and
mov
js
pop
dec
adc
mov
mov
ss
jno
jecxz
xchg
mov
ret
and
mov
mov
lahf
xor
sbb
add
sub
mov
insb
pop
sub
out
pop
sbb
adc
mov
out
sub
cs
add
adc
outsb
outsl
jg
test
fists
mov
adc
jle
cmp
mov
rolb
es
aaa
mov
aad
mov
ljmp
shl
xorl
push
add
je
scas
cmpsb
in
popf
and
mov
movsb
loopne
mov
jnp
add
add
add
jae
pop
lret
inc
addr16
mov
cmp
mov
pop
and
mov
pop
sti
stos
jp
mov
xlat
mov
rcrl
mov
daa
mov
mov
push
add
xor
mov
shrl
add
sbb
mov
jnp
add
mov
imul
jnp
negb
ret
pop
lods
mov
push
addb
dec
dec
out
or
inc
add
test
pushf
jbe
or
jg
mov
dec
add
mov
call
sbb
jbe
imul
loop
mov
mov
mov
mov
or
add
dec
mov
add
out
add
lcall
jae
repnz
mov
fiadds
sbb
pop
pop
xchg
mov
jnp
pop
adc
sbb
push
fimull
jae
pop
in
arpl
mov
mov
lock
jnp
add
xchg
mov
add
mov
cs
push
fisubs
mov
dec
fnstsw
repz
adc
leave
sahf
sub
sbb
std
mov
mov
stc
sahf
dec
icebp
test
aam
testb
xor
hlt
insb
xlat
sbb
popf
shrl
popa
icebp
lahf
pop
mov
mov
cmp
sub
sub
mov
test
loop
mov
dec
sub
filds
mov
ljmp
mov
out
push
daa
jno
lods
stos
daa
fisubs
add
add
mov
nop
add
loopne
mov
ret
jmp
add
add
mov
repz
negb
mov
lods
out
add
adc
lods
lahf
sahf
jne
xor
add
out
and
adc
xchg
cmpsb
xor
mov
push
add
mov
add
mov
pushf
cmpsl
pop
idivl
add
dec
xchg
push
ds
out
mov
leave
cmp
add
dec
in
cltd
pop
cli
pop
mov
idivl
add
insb
sti
jmp
mov
mov
add
lock
fsubp
repz
jne
cmp
add
cli
and
mov
add
push
gs
mov
dec
repz
push
into
gs
cmp
pop
push
scas
and
out
xor
sahf
imul
add
mov
mov
adc
scas
stos
mov
push
dec
fldl
mov
test
mov
adc
cmpsb
xor
dec
push
popf
and
mov
lock
cmpsl
and
mov
fisubl
cmp
mov
pushf
mov
mov
jb
mov
insb
pop
jg
or
add
push
div
lods
push
incl
loope
cmp
pop
fcmovnb
fwait
movsb
sub
add
mov
scas
shll
and
cltd
dec
mov
add
ljmp
add
loopne
mov
fsubp
imul
jle
fwait
push
xchg
add
pop
in
out
movsb
fnstsw
inc
ja
mov
add
mov
adc
mov
sbb
add
addb
mov
js
data16
jnp
daa
add
rolb
mov
not
popf
cmpl
pop
dec
rolb
pusha
add
add
stos
into
jge
pushf
arpl
add
mov
fsubrs
add
mov
pop
cmp
xchg
out
imul
je
push
cli
cmp
leave
shll
pusha
add
mov
push
jbe
or
add
addb
imul
xchg
xor
mov
lds
mov
dec
xor
push
pop
sub
dec
nop
add
sub
add
mov
mov
xchg
mov
cmp
fdivs
cli
dec
cmp
push
sbb
pop
stos
lods
mov
mov
ss
add
add
aaa
xchg
sti
pop
xchg
cmpsb
adc
add
add
clc
cltd
mov
daa
lahf
stos
add
add
lods
push
push
cmpsb
dec
test
notb
dec
pop
push
subl
pop
push
xchg
fldenv
add
jo
mov
sahf
jg
addb
js
cltd
xchg
loop
mov
add
mov
rolb
mov
mov
jmp
pop
or
mov
lahf
loope
xchg
add
push
pushf
fwait
fwait
in
fwait
aad
mov
mov
mov
das
rolb
mov
jbe
sbb
iret
mov
leave
sahf
sub
inc
scas
fiadds
pop
cmc
mov
jnp
fcmovne
imul
ret
cmpsl
dec
inc
and
and
mov
add
add
add
mov
mov
pop
fildl
mov
add
add
add
ret
lea
ds
in
inc
lods
pop
jmp
out
insl
sahf
insb
fnstenv
mov
aam
jp
add
fidivrs
aaa
mov
add
add
add
xor
mov
ljmp
imul
mov
dec
and
mov
test
pop
push
cwtl
inc
sub
xrelease
call
mov
add
sti
mov
pop
into
or
scas
insl
outsb
out
ficoms
popf
push
sub
insb
jp
mov
sub
lahf
rolb
mov
and
xor
lods
stos
inc
adc
add
and
mov
sub
add
mov
mov
addb
mov
mov
jb
mov
mov
and
mov
xchg
mov
scas
es
mov
out
int
mov
insb
inc
pop
mov
cli
push
dec
pop
and
sbb
add
add
and
mov
cmc
ss
or
mov
inc
xchg
insl
ret
pop
lods
cmp
xchg
mov
pushf
cmp
insl
cmpsl
add
jns
and
stos
jp
add
and
add
mov
push
ss
pop
pop
inc
daa
ja
add
scas
and
insl
test
add
add
mov
mov
fmuls
xchg
add
cmp
scas
pop
cmpsl
iret
jae
loopne
mov
mov
xchg
add
sbb
daa
pop
addb
pop
in
mov
inc
mov
jl
stc
mov
pusha
add
orl
add
mov
jne
mov
add
mov
add
xor
add
mov
mov
stos
cld
adc
sti
and
mov
mul
push
push
add
pop
xor
pop
sub
dec
xchg
pop
frstor
imul
out
outsl
mov
ja
adc
cli
scas
lcall
jle
scas
call
ds
cmp
add
loope
cmpsl
add
add
add
repnz
add
outsl
addb
mov
pop
pusha
add
inc
add
sbb
mov
jmp
jb
mov
loope
adc
cmpsl
dec
jbe
ret
je
mov
sub
pop
mov
add
mov
sbb
and
scas
push
mov
lods
jo
mov
addb
imul
push
pop
nop
add
or
aad
add
test
aam
pop
or
popf
iret
jmp
or
and
add
adc
pop
inc
mov
add
dec
cld
stc
cmp
jl
jecxz
adc
mov
mov
shll
push
mov
iret
mov
xchg
add
add
add
cmp
add
mov
mov
add
fildl
jbe
add
xchg
mov
mov
add
adc
mov
xchg
cmp
add
xor
push
rolb
mov
add
push
ret
cmpsb
pop
addb
jno
lret
adc
lret
cmp
push
lret
lret
rcrl
adc
mov
mov
or
outsb
ret
imul
leave
jno
lods
int
fwait
mov
and
jmp
mov
jp
add
add
dec
adc
mov
insl
cmova
sbb
arpl
add
add
mov
call
loope
cmp
xor
and
pushf
daa
addr16
mov
inc
mov
sbb
add
mov
js
pop
mov
mov
add
mov
xchg
xor
push
roll
add
add
je
nop
add
scas
push
xor
mov
push
push
mov
add
insl
sbb
cmpsl
cmp
and
pop
notb
mov
jmp
push
push
fbstp
sub
add
cmpsb
mov
rolb
jns
add
test
das
pusha
add
mov
fs
adc
rolb
mov
je
mov
fld
add
test
enter
dec
in
add
pop
lret
out
cmpsl
xchg
pop
mov
mov
mov
pop
adc
mov
or
and
inc
rolb
mov
inc
cwtl
sbb
dec
pop
fs
and
and
mov
mov
adc
add
mov
add
mov
xor
insb
fsubrl
xchg
pop
js
loope
cli
inc
ja
dec
xchg
fadds
addb
pushf
or
addb
movsl
dec
adc
sub
sti
push
icebp
xchg
ficoms
xor
mov
mov
mov
mov
or
mov
adc
push
test
pop
dec
scas
out
push
mov
ret
sub
add
or
and
into
sti
jmp
mov
mov
add
or
push
add
mov
outsb
mov
js
dec
jmp
push
data16
add
mov
dec
clc
xchg
fwait
lods
cltd
xor
loop
mov
pop
xor
mov
xchg
add
mov
cltd
fldl
jp
xchg
sbb
enter
jbe
loop
mov
into
dec
das
dec
fsubr
lret
jns
pop
fsubs
mov
add
add
mov
ds
add
mov
mov
dec
rorl
insb
adc
mov
mov
adc
mov
dec
mov
rolb
mov
sbb
add
andl
shll
mov
aad
int
add
mov
rolb
lea
xor
mov
mov
jl
divl
and
mov
pushf
stos
gs
repnz
addl
sbb
into
in
icebp
or
cli
shll
cmc
adc
mov
fs
fcoms
addb
pop
mov
sub
push
mov
push
add
sub
ljmp
mov
testl
xchg
scas
notl
adc
int3
lds
mov
push
adc
scas
pop
imul
mov
or
xor
fs
pop
adc
jae
mov
mov
int
push
stc
insl
loopne
mov
fs
aam
adc
add
xor
push
das
int3
jae
nop
add
mov
mov
adc
rolb
mov
repnz
add
cld
popf
or
mov
test
pop
inc
pop
jbe
lret
fsubrl
enter
sbb
jl
push
cmpsl
dec
jne
pop
test
add
out
mov
rolb
mov
movsb
lock
jno
loopne
mov
add
lds
ret
das
xor
mov
add
cmc
pushl
cmc
add
mov
mov
pop
mov
mov
in
test
xchg
enter
push
or
or
sub
addb
sub
fwait
orl
cmp
add
jo
mov
mov
js
inc
dec
and
rolb
mov
xchg
push
fisubrs
adc
mov
mov
or
iret
nop
add
xchg
jno
add
inc
lahf
cwtl
add
dec
jp,pn
add
and
jae
test
outsl
insb
bound
mov
add
adc
stc
add
adc
xor
add
mov
ss
sub
mov
mov
sbb
test
mov
add
nop
add
addr16
mov
mov
fmull
rolb
mov
test
mov
add
icebp
mov
fsubs
mov
xor
xor
xlat
rolb
bound
mov
and
inc
add
inc
add
rolb
mov
fsubs
loopne
mov
movsb
js
test
add
mov
add
jmp
add
or
add
mov
mov
loopne
mov
pushf
mov
dec
iret
call
xchg
loope
lods
inc
outsb
cmp
push
add
mov
pushf
mov
jge
add
jl
in
adc
mov
mov
mov
xchg
fcmovb
mov
movsl
cmp
add
sar
popa
push
daa
fnsave
faddl
jnp
cltd
inc
mov
add
mov
pop
in
adc
mov
adc
add
xchg
pop
cmp
push
mov
arpl
das
cmp
int
lods
push
add
push
xor
push
mov
lods
sub
add
sbb
and
jmp
inc
add
and
mov
inc
push
cmp
xorl
jle
mov
mov
sub
add
test
dec
dec
inc
add
icebp
lret
or
add
add
in
lds
fnstcw
ss
jp
dec
jne
mov
cli
jecxz
xchg
mov
lcall
in
aas
inc
mull
andl
sub
add
sbb
pop
js
add
add
sub
add
jmp
jae
inc
add
mov
rolb
xchg
add
jo
mov
imul
push
mov
idivl
inc
js
les
iret
xchg
sbb
fisubrs
add
movsb
divl
add
pop
jo
mov
les
mov
mov
loop
mov
add
jge
dec
xor
rolb
mov
test
add
fidivs
add
cld
pop
sub
dec
xor
push
cli
cmp
bound
mov
xor
mov
jp
xchg
jno
sub
mov
adc
mov
mov
sahf
xor
mov
add
sti
addr16
add
push
sub
cmp
cmpsl
fs
jo
mov
je
mov
dec
test
lcall
aaa
in
sub
jmp
into
daa
pusha
add
add
loop
mov
lods
sbb
std
nop
add
daa
jnp
add
pop
imul
inc
add
mov
pop
repz
add
mov
mov
ret
aam
dec
xchg
mov
cmp
rolb
mov
icebp
movsl
adc
jae
data16
mov
mov
jne
xchg
cmovae
fnsave
sbb
xor
mov
mov
test
jl
shrl
mov
mov
cmovl
xchg
das
xchg
xor
cmp
add
scas
xor
arpl
mov
xor
add
add
call
call
mov
aam
ret
sti
in
add
push
add
or
cli
stc
addr16
aam
lock
and
mov
insl
addb
mov
scas
jnp,pn
mov
mov
add
and
add
mov
jmp
add
mov
fs
mull
stos
add
cs
lret
jns
add
aam
add
call
subl
and
mov
dec
lret
xor
mov
pop
dec
jge
adc
mov
pop
out
jb
mov
push
mov
mov
hlt
fildll
lds
add
lods
clc
jbe
adc
push
js
jne
enter
adc
fsubrs
xor
pop
subl
mov
and
test
jno
nop
add
ds
pusha
add
out
or
stos
push
add
or
add
add
cmc
popf
in
arpl
or
mov
mov
add
movsb
in
scas
enter
loope
mov
les
add
mov
test
add
mov
test
js
mov
mov
addb
pop
mov
das
sbb
iret
repz
outsl
popf
js
shrd
jge
movsl
fcompl
sbb
add
cmp
add
add
add
mov
mov
js
mov
add
and
xor
test
xchg
or
daa
test
add
add
mov
mov
in
inc
add
mov
add
pop
xchg
add
mov
add
mov
sbb
clc
aaa
mov
test
xchg
jnp
inc
stos
aas
andl
xchg
jp
js
adc
mov
add
sub
fiadds
mov
add
mov
int
adc
push
loop
mov
mov
xchg
sbb
mov
pop
loopne
mov
int
pop
sti
stc
or
push
stos
push
iret
adc
pop
mov
pop
stc
test
add
icebp
xor
or
mov
mov
test
scas
lahf
test
int3
or
mov
adc
movsb
orl
sub
mov
push
inc
loope
mov
insl
aam
addb
and
add
addr16
dec
clc
mov
inc
sbb
jbe
loope
clc
fsub
xchg
rcrl
cmpsl
stc
mov
add
repnz
push
mov
test
in
add
stc
js
mov
and
mov
dec
push
add
inc
jl
push
loope,pt
jecxz
add
mov
add
sti
fiadds
xor
repz
dec
rolb
mov
adc
mov
in
inc
jl
add
out
xchg
cmp
mov
inc
addb
xchg
add
dec
push
hlt
add
fnstsw
mov
pushf
mov
push
cwtl
adc
mov
cmp
test
xor
mov
add
mov
rolb
shr
mov
mov
pop
fwait
xchg
nop
add
add
mov
jo
mov
lods
xrelease
push
xor
jmp
jbe
jl
add
adc
outsl
mov
insl
sbb
mov
mov
xchg
cmp
sbb
scas
sub
les
nop
add
mov
lods
dec
xor
mov
pop
and
and
mov
adc
scas
mov
mov
mov
push
popa
scas
mov
xor
andl
iret
dec
xchg
add
shrl
orl
mov
jge
add
insb
pop
ficomps
jne
mov
add
mov
cmc
notb
add
aam
icebp
fdivrl
ss
idiv
jmp
xchg
inc
add
mov
push
mov
rorl
dec
and
add
pop
nop
add
mov
rorl
cmp
xchg
sub
add
leave
pop
sub
mov
inc
cmp
cmp
fdivrl
fiaddl
inc
adc
arpl
xchg
xchg
jb
mov
add
mov
dec
inc
xchg
pop
dec
movsl
jle
inc
jecxz
bound
mov
add
scas
pop
mov
jp
add
insl
lods
push
add
add
push
jns
cmp
call
mov
cmc
add
add
aaa
sbb
or
inc
jbe
jne
jns
arpl
sbb
test
xor
je
fs
fwait
aam
sbb
jae
rolb
mov
sbb
sbb
or
and
mov
mov
add
imul
mov
mov
jo
mov
rcrl
and
aaa
jecxz
add
cmp
and
pop
fsubrl
jecxz
shrl
aam
xor
xor
pop
popa
lods
imul
lret
mov
pushf
mov
add
sbb
adc
in
test
lcall
sub
es
xor
outsb
stc
add
mov
out
arpl
mov
loopne
mov
mov
mov
mov
sub
jbe
lock
jge
dec
clc
and
mov
xor
call
mov
or
and
jecxz
add
dec
je
mov
sti
stc
adc
mov
jnp
in
push
pushf
lock
rolb
push
add
je
and
mov
sbb
addr16
inc
sbb
add
test
mov
addb
sbb
adc
cmp
je
imul
shll
mov
and
subl
mov
dec
adc
rcll
dec
addr16
or
fisubl
lret
inc
xchg
in
pop
or
add
mov
push
add
jp
push
dec
mul
push
add
sbbl
add
mov
jno
add
mov
daa
pop
sbb
add
inc
mov
je
mov
push
inc
xchg
add
loope
loopne
mov
mov
mov
add
push
add
mov
iret
mov
jne
pop
cmp
pop
or
jne
cmpsl
scas
rolb
stos
daa
test
adc
jl
mov
add
xor
mov
adc
aad
add
dec
mov
sti
outsl
push
adc
xor
mov
dec
and
mov
lock
add
mov
mov
clc
mov
outsl
cld
sub
fdivrs
call
add
scas
sbb
in
test
or
push
imul
cli
pop
adc
sbb
popa
push
scas
push
pop
or
or
adc
data16
mov
add
add
jecxz
in
lds
jg
int
sub
push
push
insl
mov
add
jmp
pop
jnp
movl
inc
dec
dec
inc
mov
outsb
sub
mov
adc
and
fmuls
push
adc
sbb
lahf
jnp
rolb
mov
cmp
pop
mov
mov
test
jmp
add
mov
inc
fwait
pusha
add
mov
les
inc
into
decl
repnz
aad
mov
sub
add
add
rolb
mov
dec
les
lahf
iret
fs
add
movsl
fsub
xchg
xor
mov
mov
jg
hlt
repnz
pop
pop
movsb
out
add
inc
jnp
jp
mov
lods
lea
xchg
aas
flds
mov
push
jo
mov
bound
mov
je
fwait
push
lcall
mov
add
sbb
test
push
je
add
in
movsl
pusha
add
mov
fnstsw
fs
popa
insb
sahf
or
jg
jmp
test
aas
call
add
fnstcw
xor
mov
add
dec
pop
xor
mov
mov
cltd
add
jg
dec
mov
push
cmp
add
push
test
cmp
hlt
jecxz
dec
ret
pop
or
adc
jge
mov
lahf
insl
xchg
repnz
cmp
insl
mov
out
imul
dec
fs
add
aad
test
movsb
xchg
add
push
inc
add
adc
pop
push
ret
xchg
cwtl
fstpl
test
test
add
sbb
leave
mov
shrw
rcll
das
shll
leave
imul
stc
scas
jb
mov
push
js
es
in
mov
clc
arpl
insl
sub
movsb
rcl
inc
sbb
add
les
mov
lods
rolb
sub
into
scas
sub
fcos
sub
and
imull
inc
aaa
scas
or
mov
add
mov
xchg
repnz
pop
inc
xor
cmp
add
add
mov
xchg
and
jmp
dec
call
sub
bound
mov
out
mov
ljmp
lea
mov
rolb
xor
addr16
mov
mov
jl
enter
cmp
add
cld
into
lods
or
test
es
inc
es
ds
xor
sbb
fsubs
add
addb
lahf
dec
mov
int
mov
outsb
aas
fs
mov
rolb
adc
pop
mov
scas
push
test
inc
add
xchg
pop
push
jne
call
mov
push
add
xchg
movsb
push
push
dec
repnz
add
mov
fiadds
insl
sub
lods
aaa
notl
cmp
faddl
jbe
ficoms
cmp
loope
into
xor
mov
dec
dec
push
add
repz
dec
inc
testl
mov
mov
push
daa
adc
mov
scas
incb
add
fldt
add
test
mov
xor
add
add
movsl
push
loope
in
pop
or
ret
sub
shrl
jo
mov
ret
in
sub
mov
cmp
pop
pop
movsb
inc
fwait
les
mov
add
fs
sub
jne
in
roll
cmp
add
add
bound
mov
or
xchg
imul
add
mov
cmpsl
lcall
mov
hlt
mov
aaa
adc
mov
add
mov
push
push
lcall
mov
fimull
scas
sbb
movzwl
mov
aad
cltd
inc
mov
cli
shll
xor
mov
dec
xchg
mov
and
mov
mov
pop
lahf
out
sub
jl
ljmp
xor
mov
lret
push
add
fwait
xchg
shll
mov
fyl2xp1
pop
fisubrs
mov
js
and
mov
dec
sbb
add
pop
stos
pop
mov
add
andl
cld
lahf
stc
mov
or
sbb
push
and
js
flds
dec
ret
or
scas
mov
jbe
aad
jle
in
dec
stc
jnp
pop
mov
je
add
mov
xchg
xor
mov
cmp
pop
jnp
ljmp
xor
mov
cmp
or
call
pop
and
xor
mov
mov
add
idivb
in
and
mov
mov
mov
inc
add
sbb
sbb
pop
sbb
xor
push
inc
outsl
adc
addb
xor
stc
xchg
fwait
push
or
add
lea
mov
roll
adc
push
hlt
out
xchg
dec
sti
pop
dec
out
sub
push
incb
das
and
push
add
mov
xor
xor
mov
lods
add
mov
xor
jmp
jecxz
mov
mov
mov
mov
xchg
and
sbb
out
fildl
jmp
dec
or
add
mov
add
mov
punpckhwd
cltd
aam
test
add
enter
mov
dec
cmp
addb
dec
cmp
addr16
cmpl
nop
add
decb
jae
aas
adc
sbb
imul
push
rolb
mov
loop
mov
cmp
aam
add
loope
sbb
sub
fnstenv
push
inc
add
inc
clgi
mov
mov
jl
push
mov
int
loopne
mov
xchg
adc
mov
cmp
add
mov
jg
xlat
cwtl
xchg
sahf
adc
mov
add
mov
jmp
mov
add
push
dec
mov
mov
pop
mov
add
add
cwtl
add
stos
fucom
add
add
mov
jno
add
test
fmul
sbb
add
mov
mov
popa
or
inc
and
mov
jnp
sti
sahf
inc
rolb
mov
add
stc
add
mov
add
mov
add
sbb
cmc
push
and
aas
jle
in
daa
cli
mov
and
inc
xor
mov
test
adc
les
jne
mov
add
add
mov
mov
mov
inc
idiv
daa
rolb
mov
movsb
cwtl
pop
inc
push
fnstcw
int3
in
dec
pusha
add
rorl
ret
orl
andl
int3
or
mov
mov
mov
mov
adc
mov
mov
addb
adc
jmp
add
mov
pop
mov
xor
sbb
add
pop
int3
jne
jns
mov
fistps
add
mov
jl
push
or
inc
dec
loopne
mov
ret
cmpsb
sbb
or
xor
test
and
mov
mov
add
mov
div
and
mov
add
xchg
cltd
adc
mov
popf
rolb
sbb
aad
push
or
mov
and
mov
dec
cmp
aaa
stos
sub
ss
pop
cwtl
add
outsl
movsb
mov
mov
jbe
mov
add
pushf
mov
push
imul
mov
fsubrs
rolb
cmpsl
out
inc
adc
mov
stos
xchg
test
mov
ja
fstps
ds
out
mov
add
aad
mull
sub
jl
das
sbb
sqrtss
cmp
aam
cwtl
lock
mov
dec
sahf
pop
stc
sbb
fcomps
mov
adc
cmp
add
mov
add
imul
insb
jge
and
dec
lea
inc
add
popf
notl
pop
and
repnz
push
add
test
push
dec
mov
addl
aam
mov
xor
dec
ljmp
arpl
out
jo
mov
sub
outsl
fists
dec
and
mov
and
mov
add
clc
repnz
nop
cld
jae
add
add
popa
jno
sbbl
xlat
out
inc
add
enter
add
xor
das
add
push
mov
xchg
ret
add
adc
add
push
xchg
popa
add
repnz
nop
cld
jae
xor
lock
add
and
cltd
out
add
rolb
add
jmp
repnz
nop
cld
jae
movsl
add
add
lea
push
mov
nop
leave
jmp
add
imul
mov
adc
jg
dec
sub
repnz
nop
cld
jae
lock
mov
add
nop
cld
jae
push
xorl
aad
mov
test
mov
nop
leave
jmp
mov
add
clc
repnz
nop
cld
jae
xchg
add
mov
cmp
adc
add
add
loop
add
add
rolb
mov
mov
clc
repnz
nop
cld
jae
push
xchg
mov
jne
clc
repnz
nop
cld
jae
mov
loop
imul
xchg
ret
in
add
insl
add
jno
add
push
mov
nop
leave
jmp
xor
add
sti
push
mov
nop
leave
jmp
rolb
xchg
add
add
movsl
pop
call
clc
repnz
nop
cld
jae
jae
add
jbe
add
clc
repnz
nop
cld
jae
mov
add
test
nop
leave
jmp
mov
jns
add
sub
clc
repnz
nop
cld
jae
add
add
sub
mov
pop
sbb
push
shll
addb
test
div
push
mov
nop
leave
jmp
insl
jae
add
add
sbb
in
xor
add
repnz
nop
cld
jae
add
add
movsb
je
and
push
mov
nop
leave
jmp
add
loop
mov
jmp
jmp
add
jg
sbb
add
mov
add
clc
repnz
nop
cld
jae
imul
add
mov
lods
push
mov
xchg
ret
add
add
mov
sbb
dec
add
repnz
nop
cld
jae
add
mov
jmp
xor
mov
push
push
mov
nop
leave
jmp
push
add
imul
add
and
add
fwait
rolb
mov
push
jmp
incl
adc
fnsave
sub
add
cs
mov
imul
mov
mov
sbb
test
jp
clc
repnz
nop
cld
jae
push
add
xchg
aad
clc
fstp
je
clc
repnz
nop
cld
jae
add
adc
mov
cmp
ret
push
xchg
adc
inc
insl
movzwl
clc
repnz
nop
cld
jae
mov
mov
mov
add
ja
inc
add
add
mov
pop
pushl
clc
repnz
nop
cld
jae
movl
repnz
mov
leave
clc
repnz
nop
cld
jae
push
add
add
cs
out
mov
push
mov
xchg
ret
add
add
mov
nop
leave
jmp
sbb
add
add
add
mov
clc
repnz
nop
cld
jae
add
inc
mov
repnz
nop
cld
jae
add
xchg
add
add
push
mov
nop
leave
jmp
adc
insl
cmp
mov
xor
mov
add
push
mov
nop
leave
jmp
cmp
add
jbe
mov
or
clc
repnz
nop
cld
jae
movsl
insb
mov
push
mov
xchg
ret
add
add
add
add
pusha
clc
repnz
nop
cld
jae
mov
add
add
add
xchg
push
add
add
jge
push
sub
in
nop
leave
jmp
add
add
add
add
fiaddl
ss
and
insl
xchg
xchg
add
mov
adc
cmp
ret
add
in
push
sub
rolb
and
mov
mov
xchg
ret
mov
add
add
mov
pushl
clc
repnz
nop
cld
jae
add
rolb
and
rorl
and
mov
nop
leave
jmp
add
jns
add
clc
repnz
nop
cld
jae
mov
add
shl
jmp
add
insl
add
mov
aad
add
clc
repnz
nop
cld
jae
add
mov
mov
sub
repnz
nop
cld
jae
add
pop
mov
push
mov
nop
leave
jmp
mov
add
push
mov
xchg
ret
add
add
add
nop
add
xor
clc
repnz
nop
cld
jae
add
clc
add
pop
mov
clc
repnz
nop
cld
jae
add
insl
jae
add
lods
movl
and
add
add
jbe
movsl
test
nop
nop
cld
jae
add
add
push
rolb
in
jne
clc
repnz
nop
cld
jae
sbb
add
push
mov
nop
leave
jmp
xchg
add
movsl
mov
and
mov
xchg
ret
xchg
jns
add
add
mov
mov
add
cld
clc
repnz
nop
cld
jae
imul
jae
add
jbe
xchg
add
and
jmp
jbe
test
addl
add
sahf
add
repz
cmpl
push
mov
nop
leave
jmp
imul
add
push
mov
nop
leave
jmp
add
add
adc
je
clc
repnz
nop
cld
jae
enter
movswl
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
xchg
add
add
sbb
clc
repnz
nop
cld
jae
adc
inc
add
add
push
mov
nop
leave
jmp
add
mov
mov
push
add
mov
clc
repnz
nop
cld
jae
add
add
addb
add
repnz
nop
cld
jae
jns
movsl
pop
add
clc
repnz
nop
cld
jae
xchg
add
loop
daa
gs
mov
add
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
imul
movsl
add
add
push
push
mov
xchg
ret
movsl
add
and
sbb
in
nop
leave
jmp
cmp
add
and
sub
xbegin
jae
sbb
xchg
loop
sbb
jne
push
mov
xchg
ret
add
add
adc
cmp
inc
add
push
add
insb
call
push
mov
nop
leave
jmp
add
enter
pop
sub
push
mov
nop
leave
jmp
jns
jae
add
add
or
clc
repnz
nop
cld
jae
cmp
add
clc
repnz
nop
cld
jae
add
jbe
pop
pop
push
mov
xchg
ret
add
add
add
xchg
add
add
clc
repnz
nop
cld
jae
mov
add
add
xor
repnz
nop
cld
jae
push
add
movl
push
mov
xchg
ret
clc
add
add
push
add
clc
repnz
nop
cld
jae
add
lock
pop
add
clc
repnz
nop
cld
jae
movsl
add
adc
xor
clc
repnz
nop
cld
jae
jbe
add
into
mov
clc
repnz
nop
cld
jae
sub
lahf
push
clc
repnz
nop
cld
jae
and
clc
clc
xor
add
push
add
mov
xchg
ret
push
add
movsl
add
push
mov
nop
leave
jmp
add
xchg
push
push
add
sub
fdivrp
repnz
nop
cld
jae
add
add
add
addb
jp
push
mov
xchg
ret
clc
add
mov
push
jg
adc
add
das
lds
xchg
ret
add
add
add
push
loope
dec
push
mov
nop
leave
jmp
cmp
add
and
test
push
mov
nop
leave
jmp
test
push
xchg
out
push
push
mov
xchg
ret
add
andl
add
push
mov
nop
leave
jmp
add
add
add
add
repnz
nop
cld
jae
mov
add
in
nop
leave
jmp
mov
add
add
mov
mov
nop
nop
cld
jae
add
add
inc
pop
pushf
je
clc
repnz
nop
cld
jae
add
movsl
mov
repnz
nop
cld
jae
add
push
adc
add
repnz
nop
cld
jae
add
xchg
add
push
stos
mov
clc
repnz
nop
cld
jae
jae
inc
clc
mov
push
mov
xchg
ret
cmp
add
add
mov
nop
nop
cld
jae
add
xchg
add
add
add
xor
add
clc
repnz
nop
cld
jae
rclb
mov
xchg
ret
add
movsl
push
shlb
mov
add
clc
repnz
nop
cld
jae
add
xor
add
mov
pop
push
mov
nop
leave
jmp
xor
adc
cmp
add
mov
clc
repnz
nop
cld
jae
jno
pop
cs
clc
repnz
nop
cld
jae
inc
add
add
repnz
nop
cld
jae
add
add
add
imul
nop
nop
cld
jae
add
addb
xchg
dec
call
clc
repnz
nop
cld
jae
add
jg
popa
inc
push
popf
xchg
clc
repnz
nop
cld
jae
add
mov
sub
in
add
inc
enter
cmp
add
mov
mov
mov
nop
leave
jmp
add
movsl
push
add
or
mov
xchg
ret
lock
add
movsb
mov
in
nop
leave
jmp
aad
and
add
add
mov
mov
adc
sbb
inc
add
add
add
add
repnz
nop
cld
jae
add
add
mov
add
repnz
nop
cld
jae
push
test
add
js
push
mov
xchg
ret
mov
xchg
add
stc
jne
clc
repnz
nop
cld
jae
add
mov
xchg
ret
xchg
xchg
add
cmp
xchg
add
add
adc
add
repnz
nop
cld
jae
movsl
jns
je
arpl
push
clc
repnz
nop
cld
jae
add
mov
add
pop
xor
mov
mov
xchg
ret
test
imul
cwtl
ljmp
xchg
mov
add
jg
push
clc
repnz
nop
cld
jae
adc
cmp
push
mov
nop
leave
jmp
adc
push
add
add
in
nop
leave
jmp
add
add
imul
push
clc
repnz
nop
cld
jae
xchg
add
movsl
inc
ret
loopne
mov
iret
jne
push
mov
nop
leave
jmp
push
add
xchg
inc
add
pop
add
push
mov
nop
leave
jmp
add
add
push
mov
xchg
ret
mov
adc
sahf
pop
pop
clc
repnz
nop
cld
jae
enter
add
push
movsl
cmpsl
addr16
cbtw
mov
clc
repnz
nop
cld
jae
add
xor
sub
in
add
add
movsl
add
sahf
mov
add
add
add
add
clc
repnz
nop
cld
jae
add
movsl
add
orl
clc
repnz
nop
cld
jae
jns
mov
add
add
nop
cld
jae
and
xor
and
mov
push
mov
xchg
ret
test
push
adc
movsl
dec
rep
clc
repnz
nop
cld
jae
add
xchg
jns
add
add
push
mov
xchg
ret
add
movsl
shrb
jno
cmpl
push
mov
nop
leave
jmp
add
orl
clc
repnz
nop
cld
jae
add
push
xchg
mov
xchg
ret
imul
sub
xchg
addr16
mov
clc
repnz
nop
cld
jae
add
add
xchg
add
mov
push
mov
xchg
ret
add
add
add
movsb
jg
jge
clc
repnz
nop
cld
jae
jmp
xchg
rolb
clc
ficoms
inc
add
push
jns
add
add
movsl
cmc
cmp
nop
cld
jae
push
add
movsl
clc
adc
test
push
mov
nop
leave
jmp
add
add
movsl
jg
movsl
insl
xor
push
mov
nop
leave
jmp
adc
mov
add
insl
fisttpll
pop
clc
repnz
nop
cld
jae
fldl
add
movsl
add
add
add
clc
repnz
nop
cld
jae
push
mov
push
add
mov
aam
mov
push
mov
xchg
ret
add
add
add
add
addr16
add
clc
repnz
nop
cld
jae
add
adc
add
add
add
push
mov
xchg
ret
jbe
fldl
jno
add
fiadds
clc
repnz
nop
cld
jae
add
xchg
enter
mov
xchg
ret
add
xchg
push
and
rolb
clc
call
clc
repnz
nop
cld
jae
add
mov
pop
clc
repnz
nop
cld
jae
push
mov
add
dec
shr
clc
repnz
nop
cld
jae
mov
imul
out
xor
clc
repnz
nop
cld
jae
aad
mov
repnz
nop
cld
jae
add
imul
push
push
mov
xchg
ret
jae
jno
mov
xchg
add
pop
push
mov
nop
leave
jmp
mov
cmp
xor
add
mov
repnz
nop
cld
jae
lock
enter
cli
movzwl
clc
repnz
nop
cld
jae
imul
repnz
nop
cld
jae
mov
add
add
lods
add
arpl
pop
add
xlat
inc
dec
add
in
lods
push
mov
xchg
ret
add
clc
sahf
add
push
clc
repnz
nop
cld
jae
test
rolb
mov
or
repnz
nop
cld
jae
add
insl
jns
cs
jl
add
add
leave
jmp
add
sub
clc
repnz
nop
cld
jae
add
jns
enter
int
pop
jae
repnz
nop
cld
jae
xchg
adc
push
dec
add
clc
repnz
nop
cld
jae
adc
add
sbb
cmp
repnz
nop
cld
jae
add
jmp
and
mov
cmpl
push
mov
nop
leave
jmp
add
xchg
clc
imul
pop
clc
repnz
nop
cld
jae
add
enter
enter
push
mov
xchg
ret
xor
xchg
inc
add
add
add
mov
push
mov
nop
leave
jmp
movsl
push
add
movb
mov
xchg
ret
mov
mov
mov
sbb
flds
xchg
ret
add
xor
add
add
mov
clc
repnz
nop
cld
jae
push
add
cmpsl
loop
mov
nop
cld
jae
add
mov
add
mov
cmp
popa
add
repnz
nop
cld
jae
add
and
add
inc
test
push
push
mov
xchg
ret
add
add
xchg
add
repnz
nop
cld
jae
cs
add
loop
push
mov
xchg
ret
push
and
add
push
adc
mov
repnz
nop
cld
jae
add
aad
mov
mov
clc
repnz
nop
cld
jae
add
add
mov
add
add
clc
repnz
nop
cld
jae
add
out
mov
clc
repnz
nop
cld
jae
cs
add
repnz
nop
cld
jae
add
add
adc
cmp
mov
nop
leave
jmp
mov
add
inc
add
ja
outsb
je
mov
nop
leave
jmp
movsl
xchg
add
adc
repnz
nop
cld
jae
add
mov
add
jae
and
push
mov
xchg
ret
xchg
movsl
aad
add
add
repnz
nop
cld
jae
add
movsl
and
mov
adc
repnz
nop
cld
jae
add
add
jae
mov
clc
repnz
nop
cld
jae
jg
inc
in
add
lea
mov
xchg
ret
enter
add
test
mov
clc
repnz
nop
cld
jae
loop
imul
stos
lea
clc
repnz
nop
cld
jae
add
mov
imul
add
mov
nop
leave
jmp
add
test
clc
repnz
nop
cld
jae
xchg
and
aad
lock
mov
nop
leave
jmp
xchg
movsl
add
add
rcr
jle
repz
repnz
nop
cld
jae
add
adc
add
xchg
mov
and
clc
repnz
nop
cld
jae
cmp
add
add
xor
add
clc
repnz
nop
cld
jae
xor
pop
call
push
mov
nop
leave
jmp
add
xor
clc
repnz
nop
cld
jae
imul
fstpl
repnz
nop
cld
jae
add
add
add
push
jb
mov
iret
push
clc
repnz
nop
cld
jae
rolb
add
add
add
test
clc
repnz
nop
cld
jae
xchg
add
lock
adc
mov
imul
push
mov
nop
leave
jmp
xor
add
cmp
outsl
push
mov
nop
leave
jmp
add
fnsave
add
repnz
nop
cld
jae
add
movsl
cmpl
fdivr
clc
repnz
nop
cld
jae
mov
push
add
clc
repnz
nop
cld
jae
add
and
leave
push
clc
repnz
nop
cld
jae
imul
add
lea
clc
repnz
nop
cld
jae
add
add
sub
inc
movl
clc
repnz
nop
cld
jae
add
xchg
add
mov
in
add
xchg
add
add
xlat
xlat
add
mov
movb
add
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
mov
jg
jbe
push
add
roll
adc
repnz
nop
cld
jae
xor
push
mov
js
jle
push
mov
xchg
ret
add
add
sbb
in
fsubl
test
incb
pop
xlat
dec
xor
imul
mov
nop
leave
jmp
add
sbb
inc
xor
shrl
repnz
nop
cld
jae
add
cmp
push
add
dec
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
inc
add
add
add
rolb
ret
jne
inc
push
mov
nop
leave
jmp
adc
add
add
push
mov
nop
leave
jmp
add
xor
xor
sar
add
pop
clc
repnz
nop
cld
jae
and
xchg
mov
jmp
add
add
clc
repnz
nop
cld
jae
sahf
jg
test
mov
clc
repnz
nop
cld
jae
add
insl
stos
rep
clc
repnz
nop
cld
jae
and
add
add
loopne
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
mov
add
or
nop
nop
cld
jae
mov
shlb
xor
clc
repnz
nop
cld
jae
adcl
push
add
out
push
mov
jmp
add
add
and
add
add
push
clc
repnz
nop
cld
jae
xchg
mov
sahf
xchg
sub
sub
inc
add
add
jno
jbe
mov
clc
repnz
nop
cld
jae
jbe
adc
pop
rol
clc
repnz
nop
cld
jae
movsl
xchg
and
imul
add
outsl
popa
fs
repnz
nop
cld
jae
add
jmp
pushf
push
push
mov
xchg
ret
add
push
jno
add
add
rolb
mov
mov
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
aad
add
jns
mov
clc
repnz
nop
cld
jae
add
and
xor
aad
push
xchg
or
dec
cmp
mov
nop
leave
jmp
xchg
sbb
testl
push
mov
nop
leave
jmp
add
add
xor
mov
xorl
clc
repnz
nop
cld
jae
add
nop
nop
cld
jae
add
mov
xor
mov
in
jmp
clc
repnz
nop
cld
jae
adc
push
add
push
in
push
push
mov
nop
leave
jmp
add
xchg
add
add
add
mov
nop
leave
jmp
adc
add
add
pusha
add
mov
add
add
repnz
nop
cld
jae
add
xor
int3
jne
clc
repnz
nop
cld
jae
movsl
add
cwtl
ret
push
mov
nop
leave
jmp
jno
push
mov
add
push
mov
xchg
ret
mov
movsl
cmpl
nop
nop
cld
jae
add
movsl
add
cs
add
cmpl
push
mov
xchg
ret
jmp
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
and
jmp
mov
clc
repnz
nop
cld
jae
enter
add
cmp
push
mov
nop
leave
jmp
add
add
add
mov
clc
repnz
nop
cld
jae
jbe
adc
xor
clc
repnz
nop
cld
jae
loop
lock
jns
mov
ret
int3
inc
add
sahf
jg
movsl
push
and
dec
shr
clc
repnz
nop
cld
jae
test
jmp
cld
mov
clc
repnz
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
clc
shl
mov
add
nop
cld
jae
mov
enter
stos
push
mov
xchg
ret
xchg
push
add
outsb
push
mov
add
add
cmc
add
add
nop
add
add
repnz
nop
cld
jae
add
xor
cli
mov
clc
repnz
nop
cld
jae
clc
jno
xchg
add
xchg
add
add
add
repnz
nop
cld
jae
add
xchg
add
adc
and
mov
nop
cld
jae
cs
fldl
pusha
add
repnz
nop
cld
jae
add
push
mov
push
adc
clc
repnz
nop
cld
jae
add
mov
xchg
mov
es
add
clc
repnz
nop
cld
jae
add
aad
add
add
push
mov
nop
leave
jmp
sahf
mov
add
add
mov
clc
repnz
nop
cld
jae
add
and
mov
add
push
mov
xchg
ret
sub
add
mov
push
mov
xchg
ret
add
sub
pop
cmp
repnz
nop
cld
jae
add
add
cmp
insb
jne
clc
repnz
nop
cld
jae
xor
add
mov
clc
repnz
nop
cld
jae
mov
jmp
add
add
repnz
nop
cld
jae
movsl
add
movzwl
clc
repnz
nop
cld
jae
push
add
push
push
ret
sahf
mov
push
mov
xchg
ret
cs
add
add
mov
pop
push
mov
xchg
ret
push
test
add
pop
sub
push
mov
nop
leave
jmp
add
add
add
xchg
push
add
xor
add
clc
repnz
nop
cld
jae
add
pop
dec
push
mov
nop
leave
jmp
sbb
add
movsl
jns
jns
or
test
clc
repnz
nop
cld
jae
mov
xchg
mov
repnz
nop
cld
jae
add
jg
add
stos
lea
clc
repnz
nop
cld
jae
jno
push
add
inc
push
mov
nop
leave
jmp
xchg
sbb
xchg
add
add
mov
cmp
jns
clc
repnz
nop
cld
jae
add
xor
add
push
add
push
mov
xchg
ret
add
add
add
movsl
inc
clc
pop
push
mov
xchg
ret
movsl
sahf
add
enter
add
lock
rep
push
mov
nop
leave
jmp
add
sarb
rcll
roll
xchg
ret
rolb
fldl
adc
dec
sub
add
inc
add
jno
and
movsl
jae
or
rolb
xchg
ret
add
inc
add
xchg
add
add
add
repnz
nop
cld
jae
add
push
add
xor
bound
mov
xor
push
mov
nop
leave
jmp
add
add
sti
cld
push
mov
xchg
ret
add
push
push
add
cs
clc
repnz
nop
cld
jae
adc
mov
add
or
inc
add
imul
add
scas
je
clc
repnz
nop
cld
jae
fldl
shlb
nop
nop
cld
jae
add
sbb
add
dec
imul
cld
jae
mov
push
mov
mov
clc
repnz
nop
cld
jae
add
cmpsl
jge
clc
repnz
nop
cld
jae
add
mov
addl
push
fisttpll
repnz
nop
cld
jae
add
xchg
xor
add
jg
adc
push
clc
repnz
nop
cld
jae
add
addl
add
cmpsb
pop
mov
clc
repnz
nop
cld
jae
add
add
jg
call
clc
repnz
nop
cld
jae
push
add
movsl
lds
movzwl
clc
repnz
nop
cld
jae
add
sub
rolb
scas
out
add
jns
add
add
mov
nop
leave
jmp
add
add
jbe
add
cli
add
push
mov
nop
leave
jmp
cs
add
clc
repnz
nop
cld
jae
movl
add
push
mov
xchg
ret
add
and
jno
into
add
push
mov
xchg
ret
add
jno
sahf
jae
add
je
sub
sbb
inc
add
inc
and
xchg
xchg
adc
fbld
xor
add
push
mov
nop
leave
jmp
jbe
insl
pop
ror
clc
repnz
nop
cld
jae
add
shlb
call
clc
repnz
nop
cld
jae
subl
shl
push
mov
nop
leave
jmp
add
add
add
jbe
sub
nop
cld
jae
insl
xchg
and
sar
sbb
nop
cld
jae
add
movsl
add
out
xchg
outsl
add
push
mov
xchg
ret
movsl
xor
jns
add
push
mov
xchg
ret
add
add
add
std
and
clc
repnz
nop
cld
jae
add
xchg
add
add
in
scas
xor
clc
repnz
nop
cld
jae
xor
add
jno
movsl
test
mov
clc
repnz
nop
cld
jae
add
add
gs
add
call
push
mov
xchg
ret
mov
enter
je
clc
repnz
nop
cld
jae
jns
add
add
clc
repnz
nop
cld
jae
add
add
mov
mov
push
mov
xchg
ret
mov
add
shll
mov
push
mov
nop
leave
jmp
test
add
add
cmp
aaa
testl
jns
add
and
push
mov
nop
leave
jmp
adc
push
add
mov
cltd
adc
add
repnz
nop
cld
jae
movsl
add
adc
rep
push
mov
nop
leave
jmp
shlb
insl
add
add
repnz
nop
cld
jae
add
push
repnz
nop
cld
jae
add
and
add
jecxz
incl
xchg
add
cmp
cmp
add
add
or
mov
nop
leave
jmp
mov
add
lahf
add
push
mov
nop
leave
jmp
add
mov
add
jno
mov
push
mov
nop
leave
jmp
add
adc
add
ss
jecxz
pop
pop
add
clc
repnz
nop
cld
jae
test
pop
jne
clc
repnz
nop
cld
jae
cs
clc
add
add
clc
repnz
nop
cld
jae
add
jmp
adc
repz
mov
xchg
ret
push
add
xchg
xchg
add
add
clc
repnz
nop
cld
jae
and
add
add
mov
inc
clc
repnz
nop
cld
jae
add
cmp
jmp
nop
cld
jae
test
loop
and
clc
repnz
nop
cld
jae
add
xchg
add
sbb
int
pop
jae
repnz
nop
cld
jae
add
add
in
inc
add
rolb
movsl
add
jns
mov
clc
repnz
nop
cld
jae
loop
add
mov
imul
leave
in
inc
add
add
xor
test
clc
repnz
nop
cld
jae
xchg
push
add
add
rolb
decl
nop
nop
cld
jae
add
mov
add
mov
clc
repnz
nop
cld
jae
jns
mov
pop
out
add
repnz
nop
cld
jae
add
sub
add
cmp
push
mov
nop
leave
jmp
push
add
add
rolb
cmpsb
mov
nop
nop
cld
jae
jae
test
inc
add
mov
nop
leave
jmp
mov
insl
add
xchg
push
xchg
add
lock
repz
repnz
nop
cld
jae
xchg
mov
add
pushf
je
clc
repnz
nop
cld
jae
add
clc
ficoms
mov
xchg
ret
xchg
test
push
shrb
add
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
add
das
mov
clc
repnz
nop
cld
jae
add
sahf
lock
call
clc
repnz
nop
cld
jae
add
push
cmp
clc
repnz
nop
cld
jae
add
sbb
cs
clc
repnz
nop
cld
jae
mov
enter
repnz
nop
cld
jae
cs
mov
stc
pop
push
mov
xchg
ret
add
add
add
add
scas
push
clc
repnz
nop
cld
jae
sub
push
clc
call
nop
cld
jae
add
add
mov
ret
add
loop
enter
add
jmp
add
fldl
mov
rclb
filds
xchg
ret
add
add
inc
add
stos
mov
clc
repnz
nop
cld
jae
add
insl
add
and
idiv
cmpl
push
mov
nop
leave
jmp
add
jg
push
mov
add
mov
outsb
add
pop
test
push
lds
out
cmc
inc
add
add
test
sub
clc
repnz
nop
cld
jae
movsl
add
sub
movb
add
clc
repnz
nop
cld
jae
add
xor
push
mov
mov
stos
pop
pusha
mov
pushf
das
or
mov
jnp
clc
repnz
nop
cld
jae
add
in
mov
repnz
nop
cld
jae
mov
cmp
jne
push
mov
nop
leave
jmp
jns
mov
lahf
mov
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
adc
and
add
inc
ljmp
nop
leave
jmp
xchg
imul
and
clc
repnz
nop
cld
jae
adc
dec
movzwl
push
mov
nop
leave
jmp
push
movsl
jns
add
sub
in
nop
leave
jmp
mov
add
add
mov
xchg
ret
add
movsl
inc
jns
frstor
xor
add
clc
repnz
nop
cld
jae
movsl
add
push
mov
xchg
ret
add
jno
sbb
mov
clc
repnz
nop
cld
jae
adc
add
add
call
push
mov
nop
leave
jmp
xor
add
aad
add
mov
nop
nop
cld
jae
mov
sbb
add
add
mov
add
inc
and
clc
repnz
nop
cld
jae
xor
imul
repnz
nop
cld
jae
add
cmp
add
dec
add
mov
nop
leave
jmp
add
movsl
jbe
add
jb
mov
adc
ret
push
mov
xchg
ret
add
inc
movsl
inc
insl
add
add
call
clc
repnz
nop
cld
jae
add
aad
and
repnz
nop
cld
jae
mov
add
mov
jmp
movsl
add
add
add
and
jle
clc
repnz
nop
cld
jae
xchg
add
add
in
nop
leave
jmp
movsl
jg,pn
add
add
xchg
outsl
lods
clc
repnz
nop
cld
jae
jae
add
add
lahf
add
clc
repnz
nop
cld
jae
jg
add
add
push
push
clc
repnz
nop
cld
jae
add
add
mov
add
and
clc
repnz
nop
cld
jae
add
mov
add
mov
push
sub
in
nop
leave
jmp
push
inc
add
push
imul
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
sbb
test
jbe
add
push
mov
nop
leave
jmp
inc
push
sbb
add
sbb
out
add
and
add
push
scas
mov
clc
repnz
nop
cld
jae
xchg
add
add
mov
sbb
clc
repnz
nop
cld
jae
test
cs
jbe
add
jns
mov
add
shlb
into
inc
clc
repnz
nop
cld
jae
jbe
add
add
lock
mov
clc
repnz
nop
cld
jae
add
add
addb
mov
add
repnz
nop
cld
jae
and
mov
mov
nop
leave
jmp
movsl
add
add
add
xor
push
xchg
or
clc
repnz
nop
cld
jae
sahf
imul
in
mov
push
mov
nop
leave
jmp
inc
add
add
mov
and
push
mov
nop
leave
jmp
add
add
aad
testl
push
mov
nop
leave
jmp
sub
xchg
add
add
add
mov
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
xor
xor
add
pop
mov
in
push
push
mov
xchg
ret
add
add
call
add
mov
mov
repz
jmp
jmp
add
mov
push
add
adc
add
mov
xchg
ret
add
imul
mov
pop
lret
inc
add
add
mov
push
mov
add
repnz
nop
cld
jae
xchg
add
add
test
or
add
repnz
nop
cld
jae
sahf
jg
lahf
jmp
add
add
push
xchg
xor
jmp
add
add
lretw
repnz
nop
cld
jae
push
add
add
and
clc
popa
xchg
fisttps
jecxz
add
mov
add
mov
jmp
lcall
add
add
aad
sub
mov
cmp
ret
push
add
xor
add
adc
xor
repnz
nop
cld
jae
add
push
clc
clc
repnz
nop
cld
jae
add
add
xchg
loopne
mov
add
clc
repnz
nop
cld
jae
add
outsl
mov
push
mov
nop
leave
jmp
xchg
mov
add
and
add
add
in
nop
leave
jmp
movsl
jmp
add
inc
pop
and
push
mov
xchg
ret
imul
add
nop
cld
jae
jbe
add
add
add
call
cld
jae
add
add
inc
mov
movsb
push
mov
xchg
ret
add
add
add
dec
push
push
mov
xchg
ret
jns
xchg
mov
adc
xchg
add
clc
repnz
nop
cld
jae
add
adc
mov
clc
repnz
nop
cld
jae
add
in
add
lcall
repnz
nop
cld
jae
and
add
jns
add
sbb
aas
push
mov
nop
leave
jmp
xchg
test
mov
stc
push
push
mov
xchg
ret
mov
add
add
add
clc
repnz
nop
cld
jae
sub
sub
jmp
add
add
add
sub
adc
add
test
pop
aad
add
and
adc
add
push
add
add
in
nop
leave
jmp
add
test
out
clc
repnz
nop
cld
jae
adc
dec
push
clc
repnz
nop
cld
jae
inc
add
mov
sub
repnz
nop
cld
jae
loop
mov
dec
mov
clc
repnz
nop
cld
jae
inc
add
cltd
mov
clc
repnz
nop
cld
jae
mov
xchg
jns
add
add
repnz
nop
cld
jae
push
add
test
lea
clc
repnz
nop
cld
jae
add
inc
test
inc
add
mov
pop
add
push
mov
nop
leave
jmp
xchg
add
add
clc
repnz
nop
cld
jae
add
aad
mov
clc
repnz
nop
cld
jae
add
add
movsl
cmp
xor
pusha
push
mov
xchg
ret
imul
add
xchg
xlat
loope
pop
push
mov
nop
leave
jmp
insl
add
add
jnp
add
repnz
nop
cld
jae
insl
add
jg
and
ret
clc
repnz
nop
cld
jae
add
jns
mov
push
mov
xchg
ret
add
add
add
adc
mov
xor
clc
repnz
nop
cld
jae
add
add
mov
inc
les
xchg
ret
movsl
push
add
add
rolb
mov
clc
repnz
nop
cld
jae
add
add
in
add
nop
cld
jae
add
mov
or
repnz
nop
cld
jae
push
add
add
add
and
imul
add
rcl
jmp
cmp
push
loop
loope
lret
mov
xchg
ret
add
sbb
mov
imul
or
clc
repnz
nop
cld
jae
clc
add
mov
xchg
ret
jg
and
insl
inc
add
and
repnz
nop
cld
jae
add
popa
add
mov
xchg
ret
add
add
add
mov
nop
leave
jmp
add
add
xchg
cmp
or
popa
add
mov
xchg
ret
test
xor
cltd
mov
clc
repnz
nop
cld
jae
add
movsl
add
push
aaa
jbe
dec
push
mov
xchg
ret
add
xchg
add
xchg
imul
lahf
cmp
push
mov
nop
leave
jmp
add
push
mov
nop
leave
jmp
add
cs
mov
mov
loop
mov
nop
cld
jae
add
lock
sub
movsl
incl
repz
mov
xchg
ret
add
add
push
push
mov
xchg
ret
add
test
add
mov
repnz
nop
cld
jae
add
cmpl
dec
push
push
mov
nop
leave
jmp
add
es
xor
push
mov
xchg
ret
jg
mov
push
jbe
add
push
mov
sub
hlt
add
add
out
ds
pop
add
mov
int
sub
clc
repnz
nop
cld
jae
jns
xchg
add
test
push
mov
nop
leave
jmp
add
test
add
nop
cld
jae
cmp
add
dec
mov
clc
repnz
nop
cld
jae
and
add
xchg
add
add
repnz
nop
cld
jae
xchg
add
rolb
add
div
clc
repnz
nop
cld
jae
imul
add
add
call
in
nop
leave
jmp
add
aaa
mov
nop
cld
jae
add
cs
add
fdivr
repnz
nop
cld
jae
aad
lock
add
and
repnz
nop
cld
jae
jg
push
add
movsl
xchg
std
mov
clc
repnz
nop
cld
jae
add
add
xchg
mov
addb
cmp
mov
xchg
ret
add
sahf
add
mov
fwait
jecxz
add
movsl
xor
add
add
jbe
adc
mov
mov
clc
repnz
nop
cld
jae
imul
jb
mov
jne
add
add
mov
jmp
add
imul
rolb
imul
into
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
and
rolb
add
push
mov
nop
leave
jmp
jns
add
add
repnz
nop
cld
jae
add
rol
xor
xor
add
ret
xor
mov
add
push
mov
nop
leave
jmp
add
movsl
jbe
sbb
jno
push
mov
popf
cld
dec
add
sub
pop
rcrl
add
cmp
push
push
mov
nop
leave
jmp
and
imul
dec
add
mov
xchg
ret
adc
add
add
mov
xor
clc
repnz
nop
cld
jae
imul
push
imul
in
push
push
mov
xchg
ret
sbb
xor
add
mov
rcll
sbb
xlat
roll
xchg
ret
add
inc
add
rolb
xchg
mov
nop
leave
jmp
add
add
add
fadd
jmp
nop
leave
jmp
xchg
rolb
add
fwait
add
clc
repnz
nop
cld
jae
add
add
add
fwait
push
push
mov
xchg
ret
add
jns
lock
movsl
enter
in
sub
pop
testl
add
loopne
jg
xor
inc
add
add
add
add
add
or
mov
xchg
ret
addl
add
jmp
clc
repnz
nop
cld
jae
add
jae
add
add
push
add
push
mov
nop
leave
jmp
add
addl
jae
lcall
inc
add
adc
add
ljmp
leave
jmp
add
lock
add
add
sbb
inc
add
add
jns
mov
push
mov
xchg
ret
add
add
jns
test
push
mov
nop
leave
jmp
aad
add
add
push
clc
repnz
nop
cld
jae
push
push
add
cmpl
push
mov
xchg
ret
push
mov
add
loop
mov
iret
xor
clc
repnz
nop
cld
jae
movsl
inc
sarb
mov
adc
repnz
nop
cld
jae
add
xchg
add
mov
clc
repnz
nop
cld
jae
add
jne
clc
repnz
nop
cld
jae
test
push
mov
xchg
ret
add
jmp
add
cmpw
push
mov
nop
leave
jmp
add
sahf
add
push
add
xor
add
xor
mov
add
clc
repnz
nop
cld
jae
adc
aad
imul
jae
add
add
or
mov
nop
leave
jmp
adc
inc
add
add
sub
in
add
jge
sti
xchg
ljmp
add
mov
jmp
mov
movsl
add
insl
movsl
add
rolb
dec
pusha
clc
repnz
nop
cld
jae
in
rclb
std
push
push
mov
xchg
ret
add
add
push
add
push
imul
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
sub
adc
fnsave
push
mov
xchg
ret
add
add
std
mov
push
mov
nop
leave
jmp
rclb
inc
inc
int3
mov
clc
repnz
nop
cld
jae
add
add
xchg
mov
leave
jmp
add
xchg
enter
add
sbb
test
repnz
nop
cld
jae
add
clc
lds
ljmp
add
add
add
fdivl
push
scas
testb
add
cmp
add
stos
mov
inc
add
jb
mov
pop
jne
lods
pop
push
lcall
clc
xlat
fcomi
sub
repz
cmpsl
into
daa
fstpt
lods
daa
gs
push
mov
mov
add
in
sub
add
test
in
add
add
test
mov
jl
rolb
mov
jne
js
fwait
and
mov
xchg
test
pop
into
cmpsb
fldcw
es
push
mov
xor
jne
scas
cli
aaa
aas
daa
push
push
cmpsb
es
mov
add
cmp
mov
jl
mov
sbb
add
fstpt
cmpsl
inc
add
cmp
rolb
mov
rolb
cwtl
outsb
adc
add
xchg
jae
cmpsl
cwtl
sbb
cmp
mov
inc
mov
sub
lret
cwtl
ret
dec
mov
inc
aad
iret
push
fld
add
add
adc
popf
dec
sbb
test
mov
stc
sbb
pop
push
or
jle
add
in
dec
sti
scas
lods
sbb
dec
sbb
pop
pop
adc
jl
or
mov
rorl
mov
xchg
clc
dec
add
mov
mov
add
adc
mov
mov
add
add
inc
add
fnstsw
mov
into
mov
dec
hlt
or
rolb
inc
add
mov
xchg
xor
mov
fildll
ds
inc
xchg
add
mov
add
out
cmpsb
sbb
imul
addb
inc
add
push
int
pop
xor
jg
scas
push
nop
add
add
fldt
jg
and
mov
xchg
add
out
out
repnz
sub
add
xchg
addb
jge
leave
iret
cld
mov
loop
mov
call
jmp
add
add
leave
stos
inc
add
fadd
add
mov
mov
sub
mov
iret
sbb
or
adc
mov
jne
stos
lahf
sbb
stos
lcall
arpl
mov
lods
cmpsb
dec
pop
jge
cmp
inc
add
cld
nop
add
lods
inc
pop
push
dec
in
lea
push
sub
int
sbb
and
jne
scas
rolb
sub
nop
add
test
add
mov
ja
or
pop
jmp
xor
mov
popl
loop
mov
mov
add
scas
outsb
call
iret
enter
aam
jns
add
add
popf
imul
add
add
mov
add
popf
fmul
insb
jo
mov
pop
sbb
mov
jmp
or
cmp
scas
les
outsb
iret
mov
sub
hlt
fldt
arpl
rdmsr
add
mov
jl
stc
das
sub
fldenv
add
mul
mov
push
insl
addr16
add
mov
call
cmpsb
xchg
add
mov
add
aas
fldt
adc
mov
incl
pop
cli
xchg
ds
pop
jns
ds
scas
scas
jp
xchg
pop
adc
mov
sbb
out
popa
es
inc
lods
and
pop
adc
mov
adc
mov
gs
scas
call
inc
jo
mov
sub
cli
cmpsb
popf
stc
inc
addb
push
pop
fdivs
mov
add
dec
int
inc
mov
mov
lods
or
pop
push
dec
inc
insb
cld
adc
rolb
xor
mov
pop
sbb
popf
stos
leave
push
cmpsb
xor
mov
add
fwait
ljmp
mov
cmp
push
mov
lret
mov
mov
inc
add
ja,pn
mov
pop
sbb
xor
lret
xor
jb
mov
rolb
mov
insb
lret
dec
data16
mov
dec
jo
mov
rolb
mov
out
and
mov
inc
mov
insl
push
out
sub
lcall
inc
jmp
in
lods
testb
add
mov
mov
dec
cmp
sbb
cwtl
jg
lock
idivb
or
add
addb
out
add
mov
or
inc
sub
gs
fstps
sbb
aad
call
lmsw
add
lods
add
add
add
inc
ret
jle
or
mov
mov
cltd
movsl
ja
add
add
xchg
pop
popf
cmp
pusha
add
test
add
mov
mov
jmp
cmc
push
ret
dec
repnz
ss
rolb
mov
pop
mov
mov
mov
pop
mov
jnp
mov
out
repnz
repnz
fnstsw
mov
xchg
xchg
in
mov
rcll
lods
pop
pop
sbb
lea
cmp
sahf
xchg
mov
aam
add
xchg
jne
addl
pushf
scas
or
xor
mov
cmp
cmp
add
cmp
push
outsb
mov
pop
shll
idiv
ljmp
dec
pop
sbb
hlt
pop
lods
loope
mov
sub
cmp
bound
mov
ret
xchg
jmp
add
mov
je
jae
jmp
push
add
add
pop
les
fcmovu
rolb
mov
jnp
popf
sbb
add
std
sbb
add
out
add
dec
stc
fwait
sbb
fists
mov
add
rolb
mov
mov
repnz
xchg
outsl
or
aaa
mov
jg
jp
movsl
xchg
add
add
lds
ljmp
dec
and
jp
scas
outsl
or
into
and
arpl
adc
pop
out
lcall
ja
fistpll
aas
outsl
loop
mov
lods
push
cltd
dec
ret
xchg
mov
cmp
cli
mov
sbb
idivb
shll
jb
mov
push
mov
mov
sbb
mov
fs
adc
mov
push
or
push
xchg
mov
mov
addb
test
in
lret
mov
push
rolb
mov
add
in
stos
outsb
ljmp
loope
mov
inc
add
test
fs
xchg
addr16
push
jge
lgs
leave
xchg
mov
mov
repnz
movsl
test
andl
or
add
cmp
aam
mov
xchg
int
cld
pop
xchg
jne
pop
out
rolb
mov
mov
std
pop
dec
adc
mov
mov
nop
add
mov
and
pop
sub
add
mov
cmp
sbb
arpl
lock
sbb
mov
fwait
xor
push
insl
xchg
std
jl
cli
es
mov
sbb
xchg
xor
mov
mov
mov
add
outsb
add
pop
and
add
xor
push
dec
push
push
add
and
mov
jp
iret
or
jge
jle
jle
pop
inc
addb
pop
xor
mov
mov
mov
xchg
les
mov
add
loop
mov
fldenv
pushl
test
decb
sub
cli
dec
clc
pop
add
popf
in
inc
es
mov
add
mov
out
mov
loope
mov
sub
aaa
stos
xchg
push
outsb
pop
fcoms
arpl
xchg
add
mov
stos
push
sub
xor
inc
andl
into
mov
js
dec
popa
popw
cmp
out
jno
add
addb
into
push
fucomi
lods
cmp
mov
fsubrs
sbb
fwait
ja
filds
xor
mov
xor
mov
sub
in
push
pushl
mov
jp
sub
rcl
add
cmp
mov
je
add
add
imul
mov
mov
jbe
das
xor
mov
jmp
fisttps
xor
mov
dec
sbb
jle
add
jecxz
popf
mov
mov
ja
sub
addb
lock
add
mov
xchg
in
leave
push
mov
sti
pop
lods
pop
insl
jge
adc
cld
push
add
test
xor
mov
lods
jnp
cmp
push
add
outsl
ret
ss
int3
les
cmpsb
shll
repnz
lahf
mov
adc
mov
cmp
cld
into
mov
jge
fs
lcall
mov
jns
mov
mulb
rolb
call
mov
sub
mov
cmp
icebp
loope
mov
dec
xlat
pushf
cltd
sbb
popa
lahf
stc
loope
xchg
dec
out
mov
gs
rolb
ds
xor
push
pop
mov
bound
mov
mov
and
mov
mov
mov
adc
in
inc
jmp
shll
pop
sub
std
jmp
leave
inc
add
add
into
int3
mov
mov
outsl
inc
mov
add
test
mov
mov
xor
add
repnz
mov
mov
cmpsb
push
add
xchg
lahf
ja
push
outsl
sbb
jo
mov
jns
dec
cmpsb
lock
xchg
sub
in
jp,pt
and
fdivp
add
js
add
rolb
es
push
mov
lods
jge
xchg
cmc
fistpl
loope
jl
jae
mov
jnp
popa
loop
mov
add
mov
rolb
mov
add
test
push
cwtl
mov
nop
add
push
movsb
mov
jns
add
lea
enter
mov
js
aas
clc
into
mov
mov
adc
add
dec
sbb
insb
int
stos
es
add
mov
mov
movsb
or
rorl
mov
add
cmp
dec
fisubl
out
pop
ljmp
mov
into
add
test
mov
jecxz
mov
xchg
nop
add
push
jp
add
dec
inc
adc
jmp
fwait
pop
xor
mov
add
ficoms
mov
int3
sub
xor
mov
cmp
jle
call
jmp
push
mov
cmp
or
les
add
mov
in
mov
mov
test
lds
fmuls
xchg
mov
addb
xchg
sbb
and
mov
jb
mov
mov
lods
lods
mov
andl
mov
add
xchg
lcall
mov
mov
sahf
mov
pushf
mov
jl
shr
push
cmpsb
in
add
xchg
push
stc
adc
cmp
insl
rolb
mov
outsl
inc
add
jmp
popa
pop
push
iret
cmpsl
insb
rcl
lcall
sub
sub
adc
mov
pop
scas
cld
or
mov
inc
repz
push
mov
sbbl
cmp
jo
mov
dec
sahf
jp
jle
sub
hlt
sbb
js
into
lods
mov
pop
or
lcall
add
fucomp
xor
mov
in
in
add
jp
fsubrs
mov
mov
pushf
lcall
add
imul
sahf
fnstenv
pop
cs
add
add
cmp
jl
rcr
mov
add
add
data16
out
mov
push
add
and
mov
add
aad
mov
dec
call
add
inc
addb
stc
fistpl
mov
popf
xor
loope
add
and
outsb
jecxz
mov
mov
or
mov
addb
mov
mov
add
ljmp
mov
cmpsl
rolb
mov
jnp
add
add
dec
lea
and
ret
dec
imul
jno
lea
xchg
das
mov
stos
cmp
add
insl
or
inc
cmp
sahf
add
add
jmp
adc
outsb
lods
lds
lret
lea
add
add
repnz
push
xor
mov
out
jae
mov
xor
pop
imul
arpl
aam
repnz
mov
and
int
in
outsl
jo
mov
add
cmp
push
cmp
pushf
addb
scas
push
push
sub
cs
insb
movsb
sbb
cmp
pop
imulb
sbb
popf
mov
stos
inc
mov
mov
jne
lock
pop
xor
mov
int3
dec
std
lods
ja
rolb
mov
imul
mov
and
mov
clc
add
add
push
into
das
fwait
loop
mov
and
sbb
add
icebp
mov
inc
add
ja
push
dec
lock
lcall
jg
aas
mov
lds
pop
dec
xchg
push
add
push
mov
cwtl
or
push
sbb
xchg
mulb
mov
mov
mov
fidivrl
xchg
add
add
push
rcrl
mov
lcall
stos
dec
outsb
outsb
fwait
inc
dec
mov
rolb
mov
popf
sarl
lahf
cmpsl
jns
data16
std
sub
pop
add
add
inc
inc
and
lcall
xchg
jo
mov
mov
lods
lcall
dec
fwait
push
add
addr16
add
aad
dec
lods
popa
inc
flds
sbb
imul
shll
add
test
push
add
cmpsl
and
pop
mov
fs
jmp
dec
inc
xchg
adc
jmp
mov
push
add
jns
arpl
add
adc
mov
and
add
outsl
loope
add
mov
mov
add
shr
mov
pop
mov
fsubrp
or
and
mov
mov
push
add
pop
and
xor
mov
insb
ret
inc
add
pop
mov
adc
cmpsb
fs
mov
movaps
add
xor
sub
ljmp
add
sbb
scas
movsb
int3
mov
mov
add
push
add
jae
add
mov
rcll
pop
dec
imul
pop
jge
push
ficompl
push
cld
bound
mov
insb
iret
mov
pop
push
adc
pop
jae
mov
add
and
aaa
imul
mov
xchg
xchg
mov
fcoms
mov
and
addb
xchg
ret
and
mov
imul
aaa
mov
xlat
lahf
jo
mov
insl
loope
push
add
leave
hlt
adc
in
and
mov
or
xchg
mov
neg
push
adc
fcompl
mov
jge
add
cmp
mov
cmp
mov
fwait
jb
mov
aaa
xchg
add
add
xchg
dec
mov
dec
mov
push
mov
hlt
leave
push
loopne
mov
dec
xchg
imulb
adc
mov
adc
mov
mov
jp
in
add
mov
mov
cli
cld
cmp
add
add
lcall
js
inc
popf
addb
sahf
loop
mov
mov
add
dec
sbb
push
std
adc
add
push
rolb
inc
add
pop
decb
add
mov
mov
mov
add
shll
js
cmc
jmp
dec
cmpsb
and
and
mov
ret
fs
enter
mov
fiaddl
ret
xchg
rolb
mov
fisttpl
std
dec
addr16
daa
and
add
testb
mov
mov
inc
ret
out
je
out
nop
add
push
add
in
outsl
sahf
sbb
hlt
xchg
lret
mov
push
xchg
pop
cmpsb
cmpsb
jle
add
das
mov
sbb
jmp
orl
and
mov
addl
outsb
shrl
cli
jp
inc
sub
add
ss
xor
mov
add
add
lret
sub
test
mov
in
sub
hlt
sub
add
repnz
dec
cmp
adc
insb
jnp
mov
decl
hlt
jecxz
sbb
insl
test
add
mov
aaa
mov
mov
mov
test
add
mov
sar
sbb
pop
sub
xchg
mov
dec
movsb
negl
mov
cmp
cmp
add
movsb
popa
dec
or
jo
mov
arpl
mov
and
test
mov
pop
jns
add
jge
icebp
sub
neg
sub
add
mov
sub
add
mov
lods
pop
addb
push
lret
xchg
add
addb
cli
mov
add
add
push
jp
sbb
and
mov
outsl
imul
mov
and
lds
mov
addb
push
out
adc
or
icebp
data16
ret
loope
add
rolb
push
add
fstl
inc
add
adc
rcll
into
jnp
jecxz
es
add
jbe
add
xlat
or
add
not
adc
add
rolb
mov
xchg
mov
xor
mov
outsb
add
addb
fmull
pop
pushl
add
xorl
cli
sti
stos
icebp
gs
push
into
lret
sbb
aaa
icebp
add
pusha
add
mov
jns
lods
push
cmp
and
dec
jnp
sub
sub
dec
push
sbb
test
xor
mov
movsb
arpl
sub
add
add
adc
mov
add
push
outsl
mov
mov
mov
cwtl
inc
add
dec
pop
stos
js
sbb
ss
pop
fistps
pop
adc
xlat
imul
int
mov
and
add
mov
das
ja
add
adc
das
outsb
scas
popa
les
add
fmuls
daa
movl
jle
test
pop
jne
and
in
and
mov
call
fnstenv
dec
and
mov
rolb
mov
arpl
loope
jne
jbe
xchg
loope
dec
pushf
pop
sub
and
inc
inc
cmpw
add
xchg
fisttpl
ret
inc
xor
imul
into
je
jae
mov
xchg
inc
add
add
push
adc
add
add
sbb
add
fld
adc
mov
add
mov
cmp
shl
and
mov
pop
dec
outsb
add
mov
or
ss
movsl
ret
dec
fildl
mov
adc
mov
mov
iret
shl
or
aas
fimull
sti
jle
iret
xor
cmpsb
xchg
add
push
or
pusha
add
icebp
mov
lea
adc
mov
mov
inc
out
mov
and
or
sti
xor
mov
add
add
adc
mov
and
add
jp
enter
into
push
sbb
ret
or
sub
sub
add
repnz
pop
push
gs
adc
mov
hlt
sahf
push
cmpsl
cltd
je
repnz
xor
mov
les
mov
outsb
cmpsb
ret
mov
mov
xorl
jno
out
cld
jo
mov
sub
sub
mov
push
nop
add
movsl
and
mov
ljmp
notb
loop
mov
loop
mov
pop
ficoml
add
pop
mov
xchg
pop
adc
inc
add
js
in
xchg
mov
lods
in
pop
dec
jnp
push
push
add
mov
inc
jne
sahf
mull
mov
mov
fiaddl
dec
cld
ljmp
clc
or
inc
loope
add
add
popf
iret
mov
fsts
mov
mov
and
cltd
aaa
pop
std
insb
cmp
add
xchg
pop
add
dec
push
cli
loop
mov
jl
mov
push
pop
mov
into
mov
mov
add
fldt
pusha
add
mov
sbb
xchg
add
adc
mov
jae
insb
jmp
add
or
jg
gs
add
adc
mov
in
out
push
mov
imul
sbb
sbb
sti
pop
pop
cli
push
lret
mov
mov
sbb
insb
nop
add
pushf
popf
or
push
mov
lcall
roll
mov
adc
mov
pop
test
pmaxsw
sub
mov
or
cmp
test
mov
mov
mov
ds
enter
inc
add
cltd
test
jecxz
mov
jmp
inc
add
pop
pop
addb
mov
add
mov
scas
cmp
jge
bound
mov
or
pop
aaa
shrl
add
mov
call
cmp
add
add
scas
pop
add
or
add
jg
enter
fwait
gs
jae
pusha
add
or
jmp
hlt
lret
and
pop
fs
mov
fcoms
leave
and
imul
addb
sub
insb
mov
add
repz
jo
mov
fcoms
xor
sbb
cmp
popa
movsb
insl
mov
ret
cmp
mov
mov
mov
add
add
sbb
mov
jp
or
add
cmp
sub
fs
add
add
jns
dec
xor
add
lods
in
push
mov
ja
out
pop
cmp
pop
data16
mov
fdivrl
mov
mov
add
andl
lds
cmpsb
pop
xchg
xchg
std
or
addb
cltd
pushf
inc
add
inc
push
add
xchg
movsl
and
lock
add
mov
movsl
into
out
popa
insb
pusha
add
add
add
jge
lahf
pop
mov
ret
sbb
shr
test
les
adc
mov
fisttpl
ret
sbb
out
and
xchg
iret
ret
xor
xchg
add
mov
push
out
mov
ds
gs
xchg
push
add
mov
add
andl
mov
adc
inc
add
lahf
movsl
adc
add
shl
insl
in
scas
in
xchg
mov
mov
and
lods
fdivrs
xor
mov
mov
add
add
add
movsl
jp
mov
aam
lcall
lret
nop
add
das
inc
cs
inc
test
mov
out
sti
movsb
mov
ret
mov
ss
dec
mov
mov
fstl
push
loop
mov
adc
mov
add
dec
int3
cmp
sub
push
inc
jne
negb
mov
xor
inc
add
movsb
inc
jp
call
scas
and
adc
mov
stos
mov
xor
lret
xor
add
gs
jne
inc
push
add
mov
sbb
add
mov
lea
mov
add
xor
add
mov
xchg
fnstcw
dec
cmpsl
sbb
dec
out
cmp
mov
mov
cmc
sub
call
push
jmp
int3
pop
xor
js
add
imul
gs
enter
cmpsb
sub
jle
lock
sbb
shll
mov
movsl
popa
ret
out
xor
jge
add
inc
xchg
rorl
addr16
test
cmp
outsb
add
pinsrw
out
repz
repnz
adc
add
push
ljmp
shll
xchg
popa
push
mov
dec
popa
movsb
pop
iret
scas
mov
jnp
inc
add
push
in
and
mov
into
inc
lods
shl
jo
mov
ret
shll
mov
jns
rol
daa
fcmovbe
stos
cmp
pop
sbb
mov
dec
cmc
sbb
and
mov
lea
daa
gs
cmpsl
ljmp
mov
xchg
lods
jb
mov
cmp
push
xor
mov
xchg
out
push
jno
jmp
jmp
fidivl
inc
mov
mov
sub
sub
and
add
pop
pop
bound
mov
andl
pop
sub
bswap
mov
mov
movsb
jecxz
add
push
stos
mov
mov
aam
pop
hlt
sbb
pop
sbb
mov
add
pushf
adc
mov
lcall
dec
sldt
mov
or
mov
jns
aas
jl
mov
adc
mov
sbb
mov
divl
pop
into
push
inc
xchg
add
int3
in
in
in
jns
push
xchg
lds
pop
imul
js
inc
mov
xchg
add
inc
or
mov
fs
or
iret
mov
mov
insb
enter
mov
popa
cmp
repnz
push
test
add
add
rolb
mov
add
add
mov
icebp
inc
mov
sbb
xchg
clc
jnp
add
sbb
fdivrl
or
cmp
add
pop
jle
arpl
add
jmp
test
cmp
jae
clc
ds
jno
inc
repnz
and
out
out
mov
mov
out
aaa
sti
aad
add
mov
pop
stc
pop
mov
add
push
rolb
in
movsb
test
mov
add
mov
add
xchg
xlat
pop
int3
dec
mov
lock
popf
cmpsl
sbb
xchg
fiaddl
adc
mov
fmull
mov
in
ret
xchg
testl
addb
adc
xor
or
repnz
ljmp
test
sub
add
lret
jns
add
dec
jae
inc
fadds
push
lret
add
mov
mov
dec
jo
mov
mov
pop
xchg
je
sar
mov
jge
enter
repz
dec
enter
dec
or
test
sbb
pop
lock
add
xor
pop
add
ret
jno
add
es
dec
imul
pop
adc
daa
cmp
int3
loop
mov
lock
clc
aas
icebp
jge
add
inc
add
popa
fistpll
enter
scas
fwait
icebp
insl
loope
jbe
cmp
lahf
dec
nop
add
dec
addb
mov
mov
add
outsl
leave
mov
mov
lods
daa
lock
mov
inc
movsb
ss
and
mov
jnp
lret
add
xchg
mov
mov
or
and
insb
or
xor
mov
xor
jns
nop
add
lods
push
add
mov
jmp
cmpsl
sub
or
cmp
add
notb
pop
push
sbb
adc
add
mov
clc
pop
stos
aad
ficoms
jecxz
mov
adc
mov
push
adc
push
pop
xchg
loop
mov
add
push
rolb
mov
dec
scas
sbb
arpl
lahf
fucomip
out
cld
mov
push
mov
ljmp
jno
mov
loop
mov
xchg
add
aaa
dec
lcall
dec
mov
add
mov
jmp
and
add
out
out
jmp
ficoms
fisttpl
nop
add
jnp
xlat
in
dec
cltd
in
jno
mov
popw
jb
mov
push
add
add
mov
idivb
inc
add
add
insb
leave
inc
add
lods
sub
sub
jmp
mull
sub
pop
xor
cmp
clc
js
add
imul
mov
mov
add
pop
jp
pop
rolb
mov
sahf
xlat
enter
mov
cltd
imul
mov
dec
in
addr16
outsb
das
rolb
mov
addb
lea
jge
dec
lret
loop
mov
cmp
xchg
inc
inc
add
add
addb
mov
movntq
mov
mov
rolb
rolb
mov
add
xor
loopne
mov
add
xchg
add
mov
mov
mov
mov
das
and
mov
fsts
mov
aam
pop
call
daa
fwait
jo
mov
sahf
mov
xchg
les
push
sub
or
push
sbb
js
loopne
mov
into
pop
sbb
adc
mov
and
jae
loope
jo
mov
add
mov
out
cwtl
xchg
add
xor
mov
fsubl
and
cwtl
sti
add
cld
cmp
add
mov
lret
outsl
add
mov
push
xchg
add
test
sub
sub
or
and
int
test
in
popf
mov
iret
ret
popf
das
sbb
lcall
mov
or
sub
in
loopne
mov
imul
add
add
aaa
xchg
sub
cltd
xlat
sbb
add
mov
mov
dec
sbb
push
movsl
rolb
mov
loop
mov
add
mov
mov
mov
mov
add
add
mov
jl
stc
aam
mov
int
aaa
xchg
jmp
add
or
fdiv
add
xchg
filds
mov
or
scas
enter
loope
pop
pop
cmp
add
sub
push
mov
mov
add
cmp
cwtl
pop
lret
in
cmp
mov
fdivl
xchg
cld
loop
mov
adc
mov
add
xor
rolb
mov
jnp
insl
aam
or
mov
add
push
sbb
pop
add
mov
push
add
and
rcrl
xchg
out
jne
add
or
mov
mov
cmp
fs
call
sti
mov
cmp
jl
cmp
popf
movsl
scas
push
lret
lcall
aas
movsl
fidivrs
xor
clc
or
xchg
jecxz
mov
mov
or
pop
dec
enter
pusha
add
clc
fsubs
mov
xor
or
fstpt
aaa
js
jnp
jl
add
daa
add
mov
jp
xchg
filds
push
addl
ret
addb
fisttpl
xchg
aaa
dec
inc
les
mov
popf
test
es
dec
cltd
jl
add
sub
pop
add
movsb
lahf
enter
add
add
out
mov
pop
pop
ds
xchg
or
imul
divb
movsb
enter
adc
mov
lock
sbb
xchg
add
xor
movsl
push
jl
or
mov
inc
xchg
add
mov
pop
mov
add
and
daa
bound
mov
push
mov
and
cmpsl
mov
insb
addr16
into
in
and
mov
pushf
insb
xor
mov
mov
ret
mov
dec
test
nop
add
cltd
and
mov
adc
add
xlat
cmp
adc
es
std
fdivr
js
mov
nop
add
add
mov
mov
add
mov
xor
adc
mov
pop
pop
pop
into
fwait
push
lds
daa
in
pop
dec
daa
loopne
mov
add
add
mov
rolb
mov
das
mov
add
jnp
fdivr
jge
fs
mov
add
enter
xchg
mov
and
adc
add
outsb
dec
add
push
dec
dec
rcll
pop
mov
jae
inc
js
jmp
mov
push
push
addb
xchg
or
mov
iret
or
push
outsl
mov
push
sub
add
repnz
scas
ds
jno
jge
fnstcw
mov
insl
das
scas
call
ss
addb
push
jecxz
ljmp
cmp
mov
push
into
mov
fisttps
aam
adc
pop
xchg
paddq
cli
sahf
loop
mov
push
aas
xchg
decb
pop
scas
push
adc
xchg
dec
pusha
add
nop
add
sub
je,pt
call
popa
xor
and
mov
or
xor
add
add
mov
das
pop
cwtl
rolb
mov
mov
mov
xchg
iret
jbe
push
add
add
or
mov
xchg
or
inc
jnp
push
into
mov
inc
jle
xchg
sarl
and
add
add
mov
or
add
add
es
outsl
shll
mov
cmp
add
add
push
daa
xor
lcall
js
leave
mov
mov
mov
jle
dec
push
inc
int
add
and
lcall
out
push
loopnew
mov
movsb
adc
push
dec
ficoms
insl
call
add
mov
sub
add
add
dec
push
add
add
mov
outsl
adc
int3
push
or
fiaddl
arpl
mov
adc
mov
and
cwtl
imul
mov
or
xchg
pop
dec
pop
orw
add
adc
mov
clc
push
add
add
push
es
mov
mov
leave
out
and
add
mov
sub
add
sub
cmp
add
push
popf
sub
sbb
ljmp
and
fistpl
clc
mov
inc
xor
push
sub
cs
add
or
cltd
bound
mov
xor
mov
mov
mov
xor
adc
mov
sarl
mov
aaa
pusha
add
icebp
inc
mov
mov
add
lds
mov
pop
xchg
int
add
dec
icebp
xor
mov
adc
mov
xchg
movb
mov
in
imul
or
mov
mov
cmpsb
popf
insl
dec
pop
sub
cmp
and
add
js
xchg
add
testb
cli
ucomiss
in
mov
add
outsl
int3
mov
and
push
jo
mov
mov
aaa
test
sub
pop
mov
outsl
loop
mov
sub
xor
mov
mov
mov
cmp
cmpsb
arpl
fcmovb
push
or
iret
lret
add
pop
xchg
addr16
xchg
std
adc
sub
add
mov
mov
mov
add
popf
and
and
mov
imul
pop
sbb
jecxz
adc
sbb
push
rcll
xor
mov
idivl
push
icebp
dec
xchg
scas
arpl
add
mov
out
sub
outsl
push
add
leave
out
fildll
lea
mov
mov
add
mov
or
outsl
in
lret
inc
xchg
addr16
mov
or
add
xchg
add
cwtl
or
and
insb
and
pop
mov
add
mov
adc
cli
sub
hlt
fldcw
push
aad
sahf
inc
add
mov
mov
sbb
xchg
in
in
push
sahf
jmp
test
out
xor
icebp
mov
and
addb
add
jl
cmp
jg
xchg
add
out
hlt
push
cmp
pop
add
mov
mov
bound
mov
enter
jle
test
enter
lcall
add
add
mov
rolb
cltd
mov
out
ljmp
in
jns
subl
test
cmp
rolb
rcrl
aas
add
add
stos
fwait
repz
pusha
add
xlat
lods
inc
addb
xor
mov
out
je
lods
fbld
les
add
loop
mov
fldcw
mov
rolb
mov
ror
das
daa
sbb
mov
push
movsl
cmc
jp
sub
xlat
lock
jne
inc
jb
mov
add
sub
jns
add
add
or
xchg
add
push
mov
dec
fistps
bound
mov
aam
xchg
or
mov
lret
dec
fisttpl
cmp
cltd
nop
add
inc
jmp
push
std
pop
jmp
pusha
add
pop
cmp
xchg
int3
xor
push
sub
sbb
jo
mov
in
popa
push
add
sub
mov
inc
inc
inc
inc
add
and
mov
xlat
loop
mov
iret
mov
add
mov
es
mov
xchg
mov
sbb
mov
add
lods
and
mov
bound
mov
mov
jl
lahf
dec
pop
fcoms
je
mov
mov
movsl
shll
sahf
push
jno
jp
cmp
mull
xor
and
mov
es
test
add
jno
call
cli
mov
sbb
test
test
add
xchg
std
divl
in
mov
andl
jg
add
insl
dec
sub
jnp
add
jg
pushf
add
cmp
dec
cmp
addr16
xchg
add
add
mov
inc
xchg
cmp
add
inc
scas
fdivrp
outsl
cmp
cmp
aam
jae
in
mov
mov
add
cmp
jle
mov
sbb
pop
aas
push
sub
mov
out
pop
addb
sti
mov
in
jns
pop
ret
cmp
add
mov
mov
adc
sub
jne
mov
jg
dec
cs
pop
inc
jne
aaa
call
add
add
xchg
gs
ret
mov
add
sbb
adc
mov
or
and
cmpsb
pop
enter
inc
test
sub
cld
push
lods
out
mov
imul
push
and
cld
pop
or
xchg
int3
insb
sub
xor
sbb
inc
dec
push
dec
adc
mov
add
xchg
mov
push
xor
clc
pop
ret
leave
into
cmpsb
sbb
les
lahf
das
xchg
int
lds
outsl
aas
stos
pop
cmpsb
leave
gs
mov
in
mov
mov
add
imul
bound
mov
outsl
and
mov
add
lea
push
pop
mov
ljmp
adc
bound
mov
jle
dec
scas
mov
mov
mov
inc
stos
jmp
inc
pop
fildl
add
cmp
push
add
add
jle
pop
jne
add
add
xchg
int
iret
daa
xlat
std
add
in
lock
sbb
mov
push
cltd
mov
pop
dec
fisttps
in
jle
fnstcw
dec
sbb
jecxz
xchg
add
in
mov
mov
or
loopne
mov
sub
mov
mov
aas
int
mulb
test
inc
push
pop
lcall
add
fnstcw
mov
or
pushf
fldt
aas
cli
mov
and
dec
jmp
push
mov
mov
push
push
movb
fadds
rolb
cmpsl
jg
xchg
xchg
pop
pop
shrl
add
sbb
movl
mov
add
mov
ret
loopne
mov
add
sub
ljmp
rolb
adc
outsl
and
rol
add
mov
nop
add
rolb
mov
add
addb
or
mov
mov
add
mov
add
cwtl
adc
add
mov
les
sahf
or
dec
popa
mov
add
mov
and
mov
mov
add
add
jmp
sub
sbb
sub
arpl
pop
and
xor
push
shll
inc
je
testb
sarl
dec
pop
popa
inc
add
jge
in
clc
jne
add
aaa
push
aam
cmpsl
mov
or
dec
mov
add
aam
lcall
sbb
mov
enter
pop
inc
repnz
pusha
add
push
or
add
and
fs
mov
stc
and
add
mov
add
add
xchg
repnz
mov
iret
pop
sub
inc
inc
addb
nop
add
fisubrs
sahf
enter
mov
mov
mov
clc
or
add
ljmp
mov
in
sarl
add
lds
into
lcall
sbb
and
push
or
dec
or
ficomps
add
sbb
sub
mov
mov
lods
flds
icebp
push
dec
mov
enter
add
jp
pusha
add
mov
fadds
je
pop
sti
mov
test
inc
xchg
add
call
call
jns
and
xlat
lret
mov
inc
add
sub
jmp
add
add
lret
dec
adc
mov
rolb
mov
add
and
mov
cmp
xor
mov
loop
mov
orl
add
pusha
add
and
mov
pop
out
lods
fiadds
aas
mov
add
mov
mov
or
add
xor
mov
push
dec
scas
pop
cmp
inc
add
mov
pop
sbb
add
mov
test
push
mov
mov
pushf
out
jge
add
add
mov
and
mov
pop
inc
add
pop
xor
add
jno
test
hlt
mov
add
add
mov
add
mov
inc
je
stc
scas
xorl
icebp
stos
cmp
mov
add
mov
or
push
dec
call
dec
daa
jecxz
pop
push
adc
mov
push
mov
or
hlt
sbb
inc
out
dec
insl
movsl
sbb
dec
test
stos
adc
repnz
mov
sbb
add
inc
jb
mov
sbb
negb
imul
add
cli
jb
mov
mov
mov
mov
jne
add
mov
mov
xchg
cmc
mov
mov
mov
push
mov
cltd
bound
mov
lods
mov
mov
enter
scas
lods
inc
cmp
outsb
inc
add
add
mov
push
out
mov
daa
mov
add
sti
rcll
nop
add
ret
lods
mov
add
lea
aam
and
pop
mov
arpl
pushf
cmp
mov
es
cmp
sti
fs
add
in
sbb
pop
xchg
cwtl
jecxz
cmp
mov
jmp
cwtl
push
xchg
dec
stos
xchg
add
sti
adc
daa
fwait
add
les
xchg
subl
or
push
cmpsb
jp
mov
lahf
xchg
fadds
inc
jle
gs
mov
inc
fcompl
inc
xchg
sub
pop
ret
jle
push
jae
cmp
add
and
cltd
insl
out
add
mov
call
add
mov
enter
and
mov
xchg
add
add
in
xor
loope
inc
add
mov
notb
or
mov
movsl
add
mov
pop
or
ljmp
mov
push
or
and
mov
lds
pop
cwtl
test
ljmp
mov
mov
loope
sub
aas
xor
push
push
add
adc
fdivs
sbb
ja
test
mov
mov
xchg
pusha
add
gs
stos
inc
add
mov
movsl
lcall
cmp
stos
xor
mov
and
mov
and
pop
faddp
loope
ja
or
pop
in
outsl
push
add
prefetchwt1
cmp
push
jae
jmp
add
iret
pop
outsb
stc
out
push
pusha
add
aad
jns,pt
add
sbb
inc
jae
out
test
imul
add
mov
fistl
imulb
inc
rolb
or
out
xor
push
mov
xchg
scas
insb
aas
inc
inc
mov
fcompl
mov
add
push
mov
insb
pop
dec
sub
add
add
in
sbb
cli
inc
and
add
aad
divl
jp
imul
inc
add
out
clc
aas
mov
bound
mov
stc
data16
jne,pn
dec
test
lret
add
or
jle
addb
mov
add
mov
add
aas
pop
mov
pop
add
mov
dec
mov
add
in
inc
ret
inc
ficoml
inc
sub
jb
mov
push
mov
sub
sbb
mov
sub
add
movsl
adcl
movsb
shll
xchg
idivl
mov
mov
pop
jmp
pushf
adc
cmovge
dec
push
push
outsb
jbe
add
jne
and
mov
add
insl
je
shl
mov
fldenv
rorl
rolb
mov
dec
iret
out
rolb
mov
es
cs
mov
sbb
dec
pop
cs
mov
jae
inc
add
in
mov
adc
mov
add
add
leave
fld
loop
mov
imul
jbe
jle
mov
xchg
add
mov
scas
bound
mov
pop
xor
pop
in
aaa
test
and
mov
add
mov
test
add
add
addr16
jb
mov
mov
cli
dec
int
add
push
add
jp
and
dec
in
pop
xchg
loop
mov
mov
xor
add
ret
test
add
sbb
inc
xor
or
add
mov
mov
inc
add
lea
cltd
je
jp
add
sub
add
cmp
mov
mov
add
mov
in
and
dec
test
in
js
mov
cmpsb
cwtl
mov
mov
jno
lock
push
iret
pop
xor
mov
or
add
xchg
lahf
rolb
mov
enter
adc
mov
addb
dec
shrl
add
mov
xor
jbe
mov
fsub
xchg
cltd
push
cwtl
adc
add
mov
dec
gs
or
add
call
pop
test
and
mov
sbb
movsl
push
add
nop
add
loop
mov
scas
dec
mov
cmpsb
dec
xchg
add
cmc
xchg
or
adc
mov
pop
and
mov
add
mov
movsl
pusha
add
xchg
lods
jnp
lret
jb
mov
xchg
fildl
mov
rolb
mov
pop
jl
int3
xchg
test
cmp
dec
in
imul
adc
mov
mov
andl
or
stc
repnz
cmp
add
xor
pusha
add
out
sbb
add
aaa
pop
scas
sar
repz
xchg
fwait
jo
mov
pop
or
adc
shl
add
mov
mov
mov
fstpl
lret
fnsave
mov
jno
or
mov
mov
les
mov
push
loope
icebp
idivl
pushf
fwait
sbb
and
mov
outsl
dec
sbb
jb
mov
add
add
fcoml
repnz
sbb
xchg
in
shl
mov
jnp
sub
pop
adc
mov
add
pop
test
push
inc
add
push
add
add
ljmp
imul
test
mov
lods
enter
pop
popa
pusha
add
dec
ss
lcall
add
test
mov
adc
fstps
les
movsl
test
addr16
dec
push
test
mov
add
loope
xchg
mov
mov
adc
mov
dec
jns
or
mov
stos
std
jne
pop
mov
mov
add
out
enter
dec
add
and
mov
into
jle
jmp
call
add
sbb
add
jne
sbb
and
push
adc
movsb
inc
add
cli
push
cli
not
cmp
pop
push
add
lret
cmc
je
jge
popa
sbb
add
lcall
fucom
mov
xor
sbb
add
mov
aam
aam
inc
add
mov
insl
inc
lods
gs
mov
mov
mov
test
loope
cmpl
jecxz
dec
int
and
mov
jl
cmc
sub
jle
adc
and
in
loop
mov
ljmp
add
add
add
and
fwait
and
adc
mov
push
add
cmp
cmp
add
pop
push
js
add
pusha
add
jno
mov
add
add
shrl
sbb
jmp
add
inc
add
fcoml
inc
add
xchg
sti
jle
gs
mov
push
xchg
test
mov
mov
add
lahf
scas
xchg
jb
mov
cmp
jp
int3
cmp
aas
fsts
mov
loope
add
mov
lds
and
cmpsl
adc
dec
add
mov
mov
add
add
add
outsl
adc
mov
repz
mov
insl
adc
add
mov
lock
sbb
xchg
mov
push
pop
push
adc
dec
lret
fisubl
sbb
jl
mov
ret
roll
cwtl
xlat
mov
loop
mov
xchg
inc
vpor
ficoms
jo
mov
pop
sub
add
lods
cmp
add
popw
pop
mov
push
test
lcall
js
or
add
cltd
int3
jmp
xor
xor
in
stos
mov
add
lds
add
test
in
fimuls
andl
dec
xor
mov
inc
mov
jns
insl
sahf
xchg
sbb
push
mov
inc
mov
mov
add
mov
mov
inc
enter
xor
mov
jbe
add
sub
shrl
add
mov
std
sub
jbe
jg
or
inc
daa
adcl
mov
add
mov
lcall
imulb
cmp
jbe
or
ljmp
pop
xchg
pop
dec
lahf
fidivs
cmp
stc
leave
jno
mov
pusha
add
mov
aas
cwtl
lret
inc
add
or
mov
fcom
add
cmc
pop
lock
leave
int
add
adc
and
add
icebp
outsl
dec
push
jl
cs
sti
sub
add
mov
notb
add
push
add
jae
pop
push
mov
inc
mov
mov
insl
test
sub
mov
pop
add
mov
stc
fsubrs
popa
outsl
fistpll
xor
xor
cmp
mov
dec
fdivl
mov
out
pusha
add
dec
xor
jp
jle
aad
loopne
mov
add
pop
add
inc
cmp
test
xchg
cld
fwait
sub
add
inc
pop
fadds
mov
sbb
aad
add
sub
mov
mov
mov
push
cwtl
sub
adc
mov
add
rolb
mov
add
pop
outsl
sbb
add
mov
adc
inc
addb
pop
sub
int
pop
repnz
sahf
dec
and
mov
mov
mov
xchg
add
mov
andl
and
cmc
adc
mov
xor
dec
pop
sub
push
push
sub
push
add
test
add
mov
and
add
fucomip
add
add
jo
mov
dec
adc
mov
rolb
mov
cmp
dec
nop
add
and
mov
add
ss
inc
test
jno
mov
stc
hlt
sub
push
add
add
mov
ficoml
add
inc
scas
lcall
out
push
mov
add
add
cltd
dec
cmp
add
add
jbe
aas
pusha
add
mov
pop
xchg
adc
mov
fs
lods
mov
es
add
mov
fldcw
flds
sti
push
repz
mov
mov
addr16
add
fisubrl
inc
repz
popa
pop
jno
adc
mov
icebp
shrl
xchg
aaa
and
add
ret
and
shll
add
ret
cmpsl
lahf
push
cmp
add
fists
mov
leave
mov
adc
lcall
xor
mov
mov
mov
add
movl
loop
mov
cmp
bound
mov
jl
std
pushl
xchg
outsb
outsb
sub
xor
inc
scas
test
mov
mov
or
add
add
mov
mov
or
movsb
mov
in
iret
fldenv
cmc
pop
sub
aad
add
mov
stos
and
mov
rolb
mov
inc
minps
push
adc
mov
add
popf
popf
mov
add
aas
xlat
paddusb
dec
jnp
sti
cmp
pop
dec
dec
int
movsl
xchg
add
xor
les
fdivrs
sbb
add
add
aaa
inc
mov
ret
dec
icebp
jne
lret
int3
leave
pop
jmp
add
mov
ret
and
repz
hlt
dec
sbb
dec
pop
js
add
pop
mov
fmul
push
or
mov
scas
add
mov
mov
sbb
clc
addr16
sahf
stos
mov
xor
mov
sbb
push
scas
pushf
lods
out
push
sbb
add
xor
mov
xor
mov
mov
add
mov
int3
sbb
dec
or
mov
add
xor
add
les
add
lock
adc
fs
out
inc
lock
popa
xor
dec
repnz
dec
dec
inc
andl
mov
addr16
out
mov
leave
pop
popa
sbb
lret
mov
mov
in
data16
mov
mov
add
aas
and
jo
mov
fstps
call
insb
test
fcomip
mov
dec
mov
enter
mov
mov
add
mov
mov
call
scas
or
imul
xchg
sub
cmpsl
adc
mov
sub
sbb
cmpsb
push
pop
es
in
repnz
inc
add
and
mov
mov
mov
sbb
outsb
addr16
jbe
lret
mov
inc
jg
pop
jg
cltd
jbe
push
mov
inc
add
jge
push
add
andl
adc
fs
mov
sub
mov
mov
push
mov
mov
add
add
push
mov
outsl
pushf
adc
hlt
and
mov
in
mov
mul
rorl
je
mov
mov
xor
mov
fs
lock
scas
aad
add
mov
add
insl
test
cltd
sub
out
das
push
inc
clc
test
push
add
jne
push
jno
sub
test
mov
mov
add
add
xchg
adc
mov
adc
mov
fmull
inc
add
cmc
adc
imul
mov
mov
cmp
push
loop
mov
popf
jle
xchg
mov
fldl
push
subl
and
dec
icebp
pop
jl
inc
and
mov
lahf
dec
jecxz
aas
lods
xchg
arpl
sbb
mov
or
or
mov
mov
jg
movsl
fwait
movsb
add
add
sub
enter
push
add
inc
aas
fcmovnbe
pop
or
add
add
mov
jl
mov
mov
add
add
jne
js
pop
fistpl
fucomp
fnstenv
add
les
les
cs
mov
add
pop
rol
xchg
or
add
adc
mov
push
xchg
push
dec
outsl
mov
sub
daa
pop
vcomisd
or
icebp
ja
mov
cmp
add
mov
pushf
lahf
inc
ja
mov
mov
popa
mov
add
xchg
sbb
int
add
adc
pop
sbb
add
mov
pop
mov
push
push
js
add
gs
cmp
stos
int3
jp
push
mov
mov
jmp
pop
pop
jle
pop
loop
mov
add
add
fwait
aad
sarl
insl
sbb
mov
mov
testl
dec
scas
pop
aam
add
aad
jl
push
aad
or
sub
sub
pop
mov
adc
xchg
xchg
add
sbb
fnsave
add
pop
cld
or
in
addr16
ljmp
cli
rcll
add
jmp
mov
jg
and
mov
cli
sahf
mov
mov
mov
movsb
jns
adc
rolb
xor
xchg
xor
add
mov
xor
mov
inc
mov
add
jo
mov
add
mov
inc
add
push
xchg
adc
mov
mov
mov
mov
add
fidivl
add
out
pop
xchg
xchg
push
mov
mov
add
mov
jns
add
push
loop
mov
add
leave
and
mov
andl
jl
push
ret
mov
mov
lock
mov
add
add
popf
xor
mov
inc
out
stos
aaa
in
add
or
cmp
add
add
dec
fmull
add
mov
dec
jge
add
push
leave
mov
mov
jns
cwtl
xchg
mov
mov
inc
sub
aad
cs
and
pop
xchg
add
rolb
mov
xor
mov
aaa
rcll
mov
push
add
int
pop
clc
sub
into
bound
mov
mov
scas
add
mov
pop
loope
inc
add
pop
jnp
adc
imul
mov
insb
xchg
inc
sub
add
push
pcmpgtd
and
add
out
mov
sbb
mov
inc
xor
sub
data16
xchg
fidivrl
and
add
add
sti
das
and
scas
push
add
mov
cmp
jmp
lock
mov
cmp
test
rolb
mov
neg
jecxz
adc
push
jge
adc
mov
xchg
mov
and
sbb
mov
inc
jnp
push
mov
add
mov
cmc
pop
shrl
add
push
inc
les
add
gs
ror
or
stos
cwtl
mov
arpl
or
cmp
or
sub
jle
pop
sbb
push
push
scas
cmpsb
jmp
jo,pn
mov
add
aas
and
mov
add
out
bound
mov
addb
sbb
fcmovu
jbe
imul
ror
push
inc
add
dec
in
xor
mov
sub
jb
mov
add
fists
push
ljmp
add
add
clc
cli
mov
dec
loopne
mov
add
pop
add
rolb
mov
leave
ret
loopne
mov
add
sbb
add
xlat
jbe
jp
movsl
shr
rcrl
mov
pop
dec
adc
jae
and
cwtl
into
pusha
add
pop
jp
stc
bound
mov
sbb
add
iret
addb
gs
insl
stc
popa
or
jb
mov
add
jbe
xchg
rorl
lods
lods
bound
mov
cli
fcmovb
jae
cmp
imul
ret
and
mov
pop
out
push
cltd
lods
std
bound
mov
mov
mov
pusha
add
lahf
pop
and
adc
mov
movsl
popa
mov
pushl
ja
dec
lret
enter
jmp
add
cmp
imul
add
call
mov
mov
add
pop
cs
shrd
scas
sbb
or
nop
add
ja
loopne
mov
inc
add
sbb
pop
pop
sub
hlt
mov
adc
pop
adc
pop
mov
lods
mov
push
cwtl
sbb
pop
push
fcoml
add
int3
sub
add
add
xchg
add
cld
aam
dec
rcl
cmp
add
mov
leave
xchg
mov
pop
fwait
adc
mov
faddl
push
sbb
add
mov
insl
push
enter
test
addr16
popf
stos
xchg
lock
fadd
mov
mov
push
mov
pusha
add
add
lock
sbb
movsl
xchg
daa
xchg
push
call
pop
jb
mov
shl
es
add
adc
xor
jbe
inc
rolb
mov
add
outsl
imul
pop
jecxz
push
lret
push
jb
mov
mov
jp
cmc
push
dec
jecxz
movsb
ror
dec
cmp
and
mov
and
mov
sbb
xchg
mov
imul
inc
add
xor
mov
sub
scas
mov
mov
add
push
add
cmpl
loope
add
out
jb
mov
xchg
test
pop
jne
cli
bound
mov
arpl
jns
inc
clc
pop
adc
aaa
jae
repz
bound
mov
mov
add
add
mov
frstor
mov
test
ffreep
add
push
lods
icebp
jge
add
sbb
addb
push
add
js
add
mov
inc
push
or
ss
mov
xchg
xchg
add
mov
mov
mov
mov
cs
dec
cwtl
mov
xchg
stc
or
pop
jae
add
fiaddl
mov
pop
pop
pop
mov
rcr
mov
lret
adc
pop
aaa
mov
dec
mov
dec
pop
sub
fwait
or
mov
mov
mov
stos
rolb
mov
mov
gs
inc
add
add
jbe
cmp
mov
or
or
add
rolb
mov
data16
popa
pop
cs
addb
jo
mov
mov
out
adc
sbb
in
xchg
ja
sub
lock
xor
fsubrs
cmpsl
mov
mov
mov
mov
add
add
or
xor
mov
rolb
mov
mov
cs
dec
xchg
fstps
fwait
pushl
jecxz
pushf
imul
sub
outsl
sbb
xchg
in
mov
xor
mov
pop
xchg
jne
xor
ror
into
shll
or
cmpsb
sbb
jb
mov
xor
cmp
iretw
call
add
mov
mov
arpl
push
inc
out
jns
fimuls
add
cld
in
push
jecxz
mov
lret
popf
hlt
nop
add
mov
cld
les
add
sbb
xor
add
and
in
push
lds
mov
lret
jne
loope
xor
sub
mov
mov
nop
add
add
out
imul
jge
loopne
mov
inc
xchg
out
push
lods
enter
or
sub
inc
scas
lret
in
rolb
mov
xchg
mov
fwait
call
jl
jmp
fcompl
push
xlat
inc
add
cmp
mov
inc
add
mov
mov
popf
andl
push
test
add
popl
add
mov
mov
rolb
mov
hlt
or
sti
and
or
xor
mov
jecxz
sbb
aas
hlt
xor
mov
add
cmp
mov
mov
cmp
int3
es
add
add
and
xor
mov
jge
into
lods
pop
and
mov
adc
mov
mov
test
adc
sti
and
mov
add
daa
lcall
clc
xchg
add
mov
sub
mov
add
mov
dec
cmp
or
rolb
mov
adc
mov
and
add
sub
lret
inc
add
add
fidivrl
inc
add
mov
rolb
mov
or
lods
cmp
mov
add
incl
outsb
arpl
inc
push
add
mov
lods
push
lret
icebp
fmuls
leave
jg
imul
cwtl
data16
or
dec
lea
fnstenv
arpl
lds
adc
add
sbb
sbb
roll
inc
je
pop
push
jnp
call
popf
negl
cld
cltd
adc
loope
rolb
sub
mov
xor
mov
sbb
decl
and
in
and
addb
push
fnstsw
lcall
mov
adc
mov
sbb
add
add
lods
sub
push
jnp
sbb
lahf
fsubr
enter
add
int3
imul
inc
sub
icebp
pushf
push
sbb
lcall
cmp
movsl
das
pop
xor
dec
addb
data16
add
mov
insb
push
inc
add
add
xor
pop
int3
adc
mov
mov
mov
popf
into
sarl
adc
dec
add
loop
mov
inc
or
mov
or
stos
pop
loope
fs
sahf
cmp
add
pop
inc
adc
mov
xor
jl
dec
cmp
mov
mov
rsqrtps
mov
int3
pushf
jecxz
push
js
jge
movsl
push
add
mov
add
mov
stos
in
cmp
add
cmc
loopne
mov
pop
jp
mov
mov
jmp
addb
add
mov
out
cld
stc
idivl
hlt
jle
aas
aad
mov
mov
mov
xchg
add
add
or
cmpsl
adc
test
insb
test
ljmp
sbb
mov
add
adc
add
jo
mov
mov
mov
or
add
xchg
add
cmp
add
add
ja
dec
adc
mov
add
jb
mov
add
mov
push
dec
inc
mov
mov
pop
mov
sub
sahf
mov
inc
xchg
mov
mov
addl
js
loope
add
add
mov
pusha
add
call
leave
aam
add
mov
out
sub
cmp
gs
in
or
add
mov
sbb
pushf
inc
add
push
rolb
mov
inc
cmpl
sub
js
out
xor
out
leave
sarl
xor
add
lds
mov
mov
rolb
mov
jb
mov
test
std
cmp
inc
add
stos
popa
xlat
int
add
decb
mov
add
repnz
mov
pop
mov
and
pop
lock
aaa
sbb
mov
fisttpll
dec
loopne
mov
mov
pop
je
clc
enter
repnz
test
add
ljmp
cmp
sub
and
sbb
mov
mov
add
push
sti
sub
shll
inc
arpl
popf
mov
sahf
cltd
mov
in
jp
pop
cmp
add
stc
div
stos
popa
rcll
add
xor
lcall
add
pop
loope
add
mov
jne
fwait
push
lds
add
add
add
fld
out
cmp
dec
test
pop
enter
je
mov
mov
add
popl
mov
adc
sub
fs
lcall
dec
jno
inc
add
cs
xchg
add
aas
push
xchg
xchg
in
sti
popf
jo
mov
add
mov
mov
jns
dec
in
mov
test
sbb
xchg
mov
mov
ds
popa
sub
pop
push
iret
rolb
mov
ss
mov
mov
inc
in
imul
push
jae
int3
dec
jne
out
dec
imul
pop
imul
mov
sub
cmpsl
sbb
fwait
cmp
lcall
add
xor
mov
add
rolb
mov
dec
lods
pusha
add
std
sbbl
add
add
int3
adc
stos
imul
add
mov
mov
insl
dec
xchg
fwait
jne
in
adc
mov
outsb
in
inc
push
jecxz
add
movsl
ljmp
sub
xor
dec
adc
push
xchg
in
addr16
imulb
mov
mov
cmp
add
mov
lret
mov
idivb
cmp
adc
or
add
jle
dec
lods
aad
pop
jbe
and
icebp
jo
mov
jbe
pop
xor
mov
jb
mov
adc
cltd
scas
stc
out
scas
push
xor
mov
xchg
or
mov
mov
mov
add
sbb
xchg
lret
mov
pushf
int
add
push
cmp
jbe
rolb
rolb
jns
scas
clc
int
out
mov
or
std
mov
mov
mov
and
mov
mov
addb
mov
push
cmp
loop
mov
stc
lret
loope
ljmp
xor
loopne
mov
dec
jns
cmp
cmp
and
xor
push
jne
add
movsl
gs
add
jbe
add
pop
add
sub
je
add
add
mov
mov
sub
rolb
mov
int
jb
mov
lds
les
add
pop
push
add
add
mov
mov
push
xor
xchg
dec
rcr
sti
cmpsb
dec
xor
mov
arpl
mov
mov
xor
mov
insl
ljmp
add
loopne
mov
stc
mov
dec
push
out
sub
enter
mov
popf
pop
mov
mov
add
jmp
add
mov
mov
add
push
in
shl
and
adc
mov
mov
dec
jge
out
pushf
xchg
add
and
and
rcl
mov
std
jnp
sbb
mov
mov
adc
std
cli
mov
add
fcompl
mov
mov
inc
add
add
add
xlat
dec
loop
mov
mov
loopne
mov
jnp
or
add
mov
mov
mov
addb
sbb
push
mov
add
arpl
sbb
ljmp
add
mov
mov
out
inc
mov
mov
add
mov
xchg
jecxz
mov
rorl
sbb
jb
mov
or
cmp
into
fistps
popf
sbb
jo
mov
add
lcall
outsb
cmpsb
iret
xchg
add
mov
sbb
sti
lcall
add
add
pop
addb
or
dec
jl
imul
pop
cli
sub
mov
out
sub
mov
push
or
add
mov
lret
testb
mov
mov
mov
pxor
add
sub
mov
test
lods
xchg
pop
rolb
mov
fldt
cs
je
lock
imul
nop
add
mov
sbb
and
mov
cld
dec
popf
pop
in
push
mov
push
add
dec
inc
inc
add
clc
mov
imul
push
add
jmp
mov
add
mov
xor
add
loop
mov
add
mov
add
mov
mov
nop
add
aas
dec
xchg
add
rolb
mov
aaa
pop
cwtl
push
add
ljmp
es
pop
mov
mov
sub
cmp
add
rolb
add
movsb
inc
add
jecxz
bound
mov
pop
outsb
scas
xor
int
add
fiaddl
mov
pushf
mov
outsl
hlt
sbb
nop
add
in
imul
mov
mov
xchg
adc
jo
mov
add
mulb
cmp
fisubrl
inc
ljmp
test
insb
mov
cmpsl
lods
jno
mov
inc
add
mov
sbb
add
mov
xchg
scas
add
add
mov
add
push
sti
fstps
enter
add
mov
dec
inc
add
mov
ds
mov
mov
or
aad
pop
fcomip
fwait
mov
or
mov
mov
mov
add
lcall
test
ljmp
out
and
mov
inc
stos
xchg
outsl
sub
sahf
stos
out
pop
xor
mov
push
add
mov
icebp
push
imul
dec
and
adc
rcrl
jl
push
push
sbb
dec
stos
outsl
and
mov
inc
frstor
xchg
outsb
and
mov
lahf
lock
jmp
fiadds
jp
js
loop
mov
sbb
ljmp
ret
xchg
pop
pop
outsl
mov
xchg
inc
pusha
add
inc
scas
ret
lret
iret
mov
pop
sbb
push
cmp
ja
add
lods
push
jns
insb
fldl
add
fidivs
es
or
sbb
add
and
cld
int3
xchg
xchg
add
cmpsl
sbb
lret
pushf
and
mov
test
mov
pop
stc
cltd
push
dec
and
mov
mov
add
dec
pop
fwait
pop
cli
in
loope
fistps
add
cmp
add
inc
sar
mov
pop
sub
add
mov
mov
aad
leave
mov
or
mov
add
jb
mov
mov
add
mov
sub
add
lods
aad
jge
les
add
add
dec
push
inc
jp
mov
decb
les
ret
dec
pop
test
inc
dec
cmp
add
sbb
sti
adc
leave
inc
add
mov
jns
adc
mov
lcall
sub
mov
daa
add
mov
cmpsl
xor
jne
aaa
or
call
adc
xor
mov
mov
push
cs
std
out
in
mov
push
sbb
dec
mov
jne
mov
outsb
popf
mov
in
jmp
pop
mov
mov
cld
nop
add
int
in
or
lea
add
xchg
sub
cmpl
rol
add
push
aas
out
and
mov
enter
stos
stc
pop
rcl
mov
ds
outsl
cmp
js
add
mov
xchg
push
addb
stos
dec
lods
add
sbb
cmp
mov
mov
mov
mov
dec
or
ja
lret
jecxz
cmc
mov
cwtl
sahf
mov
mov
xchg
lods
mov
mov
jge
and
mov
sbb
add
mov
inc
int3
loope
std
jge
push
out
add
push
mov
mov
mov
iret
jmp
push
ret
push
pushf
jge
test
mov
test
outsl
imul
mov
addb
pop
stc
push
pop
and
and
mov
pop
add
mov
add
mov
loope
data16
mov
sbb
add
movsl
pop
jae
xchg
mov
mov
je
xchg
jo
mov
pop
sbb
movl
fisttps
sbb
ljmp
mov
mov
cwtl
mov
pop
pop
sahf
je
imul
add
mov
pop
daa
dec
arpl
add
mov
int
adc
mov
add
ret
jge
push
aas
in
in
lock
add
mov
mov
mov
cltd
lcall
ja
movsb
addr16
pop
push
add
or
in
sbb
add
fwait
mov
mov
lret
xchg
addb
popf
ja
jno
and
js
enter
xor
test
popa
jmp
add
outsl
mov
ljmp
movsb
popf
mov
xchg
add
mov
cmp
cld
insl
ja
sbb
sti
imul
sub
add
sbb
add
mov
dec
inc
add
mov
inc
loopne
mov
or
popf
mov
add
scas
dec
jge
adc
mov
fcmovnb
push
loop
mov
add
add
add
pop
xor
jnp
cmp
pusha
add
mov
aam
nop
add
xor
clc
add
xor
jge
lcall
outsb
sub
xchg
add
add
mov
dec
and
sti
jnp
xor
push
test
or
push
xor
mov
sahf
push
imul
lcall
imull
or
mov
pop
arpl
add
les
ss
outsb
pop
and
add
les
add
lea
add
mov
mov
xor
xchg
adc
call
add
stos
test
sbb
add
jb
mov
add
xchg
sbb
mov
add
push
ret
pop
xchg
test
xor
mov
push
jp
pop
in
test
mov
add
add
decl
push
mov
add
jmp
mov
xchg
jae
pop
repz
mov
shll
mov
xor
and
mov
push
jecxz
inc
add
out
maxps
add
add
mov
daa
cmp
and
mov
mov
and
mov
pop
jb
mov
test
cmp
add
cli
dec
inc
je
mov
addr16
popf
mov
add
mov
add
sbb
loopne
mov
add
mov
js
in
sub
in
sub
cmp
fld
nop
add
add
push
add
xor
inc
std
in
stos
pop
jl
and
mov
fildl
push
mov
test
mov
aas
test
add
push
add
pop
stos
js
repz
cwtl
mov
lds
jns
insl
cmp
pop
jne
add
rolb
stos
lea
dec
int3
jmp
jmp
cs
call
addb
or
mov
mov
in
push
mov
jge
add
mov
or
inc
add
mov
pop
push
in
mov
cs
cmpsb
sbb
push
inc
js
add
mov
mov
cwtl
sub
lcall
jl
add
push
dec
and
add
pop
xchg
cmp
or
testb
lret
cmpl
xchg
mov
adc
mov
lock
add
cli
jae
ficoml
stc
fcomps
push
add
daa
dec
push
jg
xor
add
rcrl
adc
mov
inc
add
mov
dec
mov
dec
stc
into
sarl
add
inc
rolb
mov
insl
mov
mov
imul
add
dec
addb
loope
imul
add
in
sub
mov
lock
dec
idivb
jmp
shr
and
jb
mov
ret
arpl
nop
add
add
mov
add
clc
xchg
in
lea
add
lock
js
or
std
fs
enter
test
ljmp
add
sbb
add
mov
mov
jno
dec
or
cwtl
add
pop
out
sbb
jae
std
hlt
stc
dec
mov
add
adc
mov
add
shll
add
mov
pop
test
fcomip
add
leave
pushf
push
inc
cmp
leave
in
add
into
push
or
mov
mov
pop
cs
hlt
mov
outsb
or
mov
sti
fnsave
mov
pushf
push
sub
pop
mov
inc
add
adc
sbb
xlat
mov
cmpsb
jb
mov
rolb
mov
lea
mov
adc
mov
jne
jg
subl
cmp
test
cmp
es
push
ja
sub
push
in
lcall
adc
mov
cmp
arpl
push
add
mov
push
mov
data16
xor
sub
dec
pop
dec
add
push
inc
addb
fistpl
pop
negl
mov
add
mov
add
andl
repnz
cmpsw
out
add
rolb
mov
push
ja
add
gs
aad
cmc
xchg
popaw
ljmp
je
xchg
add
add
add
imul
je
push
aas
mov
add
mov
ficompl
sbbl
add
clc
xchg
stos
jge
pop
outsl
ljmp
xor
mov
push
outsl
out
add
xchg
add
mov
lret
repnz
cmp
lea
ret
loopne
mov
mov
mov
clc
mov
add
cmc
addb
jecxz
and
add
dec
pop
fadds
scas
xchg
cli
push
imulb
sub
les
mov
mov
bound
mov
test
test
pop
jl
mov
add
pop
data16
or
nop
add
add
add
mov
rolb
mov
enter
jge
pop
push
push
inc
cmpsl
clc
addb
lret
cmp
push
add
xchg
insb
push
add
fcompl
js
je
fs
in
or
loop
mov
xlat
dec
lret
jae
add
and
mov
sbbl
inc
add
and
pop
pushf
mov
add
jns
pushf
imul
push
call
addr16
dec
fildl
int
add
sub
push
nop
add
cmc
icebp
loop
mov
and
imul
adc
add
or
dec
push
sub
icebp
push
pop
rolb
out
test
and
mov
sub
stc
arpl
push
and
mov
dec
cmpsb
lcall
cmp
sti
or
and
mov
sbb
scas
cmp
jns
out
lret
pop
test
jo
mov
xor
pop
pop
mov
syscall
pop
push
mov
add
filds
add
sbb
stos
in
cwtl
adc
mov
movsl
add
fwait
test
rolb
mov
and
mov
cltd
scas
mov
mov
test
das
fiadds
mov
cmc
test
pop
fwait
mov
mov
add
stc
int
addl
push
cmpsb
push
clc
sub
add
repz
add
add
cmp
hlt
and
xor
mov
mov
sbb
ja
xchg
push
add
test
add
fimuls
imul
mov
cmc
test
rolb
mov
and
mov
sti
repnz
add
dec
xchg
and
cmp
test
cmc
std
ret
int3
iret
xchg
rcll
ret
addb
test
fdivrs
mov
add
das
mov
add
scas
addb
rcl
iret
adc
outsl
inc
push
imul
aaa
repnz
mov
lods
mov
mov
jle
lea
int3
repz
add
jp
mov
mov
rolb
mov
mov
mov
add
sarl
add
add
add
add
in
xchg
ja
push
cmpsl
sbbl
push
add
sahf
xchg
call
lea
sub
mov
decb
movsl
jl
mov
movsb
sti
or
add
fsts
or
jl
lods
xor
mov
out
add
mov
jbe
xor
mov
add
cld
sub
in
jp
test
mov
fldl
cmp
mov
test
lcall
repnz
jbe
pushf
inc
repz
je
scas
mov
add
mov
imulb
cmpsl
inc
int3
test
add
fisubl
mov
xchg
addb
pushl
faddl
jge
cmp
out
int3
addb
fstp
rcrl
inc
cmp
fsubrl
addb
arpl
dec
jge
push
sub
mov
add
test
jle
pop
enter
scas
lock
sbb
or
or
ds
cmp
mov
scas
imul
push
mov
add
push
mov
mov
into
xor
xor
ret
dec
in
push
mov
in
or
xchg
aad
insl
lret
movsb
jb
mov
mov
sub
add
mov
push
cltd
ret
subl
fsts
xor
mov
stos
int3
sub
stc
xor
cmp
arpl
in
cld
xlat
cmp
mov
leave
insl
dec
dec
test
fmull
add
push
xlat
aaa
push
add
call
icebp
outsb
outsb
mov
add
mov
jg
pop
add
pop
dec
adc
daa
add
mov
sub
add
stos
cltd
mov
xchg
int
or
pop
inc
addb
jne
pop
hlt
push
sub
add
jae
iret
outsb
fnstsw
das
testl
mov
mov
dec
xchg
cli
jle
por
ret
mov
add
addr16
int3
xor
mov
xchg
cmp
in
jne
push
push
add
bound
mov
mov
push
add
mov
add
repnz
pop
ds
icebp
lods
sbb
addb
mov
adc
out
mov
fwait
loopne
mov
data16
mov
xor
adc
mov
ret
dec
cmc
push
inc
divl
or
movsb
mov
cmpsl
ja
push
insb
adc
int
mov
mov
mov
aad
aaa
jp
and
mov
add
adc
mov
push
sbb
pop
jno
push
pop
jle
popf
dec
jmp
or
inc
dec
mov
test
arpl
lret
stos
cmpsb
and
or
add
mov
add
mov
in
ss
sub
sbb
loop
mov
pop
rorl
fs
push
pop
mov
test
pop
sub
ds
and
mov
mov
add
adc
loop
mov
mov
sti
int3
or
aaa
test
sbb
mov
lret
insb
shl
out
add
mov
pop
xor
dec
hlt
jne
add
ret
bound
mov
cmp
mov
pop
lret
mov
dec
dec
rolb
mov
mov
in
popa
addr16
mov
adc
je
and
mov
or
mov
mov
stos
sbbl
xor
mov
mov
add
add
aas
adcl
outsb
or
mov
mov
mov
adc
mov
jno
int3
xchg
add
addb
jle
mov
push
or
popa
sub
xchg
push
inc
ja
mov
inc
addr16
stos
jge
lahf
cs
out
je
into
pop
fstl
add
fidivs
mov
pop
mov
mov
mov
mov
insb
jle
and
add
inc
mov
into
jle
lret
iret
cmp
je
push
fmull
or
sbb
sbb
lea
inc
and
cmp
add
jno
add
mov
test
mov
adc
mov
call
mov
jo
mov
mov
mov
add
add
sahf
push
add
mov
xchg
sub
test
sbb
or
add
outsl
push
xor
jg
loop
mov
dec
rolb
mov
add
dec
mov
out
push
xchg
add
sbb
push
mov
stos
mov
sbb
jge
pop
call
scas
mov
add
fdivl
mov
add
out
mov
mov
hlt
mov
add
xor
add
pop
push
lods
or
xchg
leave
scas
xor
jno
xchg
add
push
jmp
add
dec
mov
jb
mov
imul
add
addb
jp
movsb
push
addr16
mov
cwtl
inc
add
in
movsl
sbb
sbb
push
ljmp
add
mov
add
insl
cwtl
orl
insl
icebp
loop
mov
xchg
push
cli
mov
dec
outsl
clc
jb
mov
movb
hlt
mov
dec
sub
daa
cli
loopne
mov
add
into
fldl
xchg
mov
or
add
ja
cwtl
cmc
daa
orl
mov
xchg
rolb
mov
jo
mov
stos
sbb
movsb
mov
mov
insb
or
sahf
jo
mov
pusha
add
add
cmp
aad
add
das
dec
push
jne
lds
add
push
pop
and
add
fbstp
stos
mov
fisubrs
cmpsl
fisubrs
pusha
add
fsub
aam
add
dec
lret
add
mov
addr16
sub
add
mov
outsb
cltd
mov
fsubrs
sbb
daa
sahf
gs
or
repnz
stos
int3
jb
mov
popa
addb
bound
mov
mov
pop
in
cmp
je
mov
xchg
js
dec
dec
insb
lods
add
pop
outsb
ret
nop
add
xchg
insl
lds
sbb
add
jne
add
mov
mov
pop
xchg
jmp
pop
scas
fsubrl
sbb
adc
rolb
mov
sub
add
mov
rep
test
inc
push
adc
subl
sub
xchg
and
cwtl
fsts
mov
sti
pop
xchg
sbb
mov
cmpsb
aad
inc
mov
mov
fadd
add
in
sbb
push
mov
add
std
mov
pop
mov
mov
mov
fs
xchg
adc
inc
jl
lret
mov
das
push
jge
push
in
notl
jle
pusha
add
push
pop
ja
jno
or
add
jb
mov
out
out
pop
in
adc
mov
add
inc
mov
add
mov
pop
or
sub
inc
sub
scas
lret
sbb
pop
imul
cli
mov
add
insb
pop
decl
pop
or
xor
adc
mov
leave
cmp
out
add
mov
jns
aam
mov
push
add
dec
mov
inc
add
js
add
outsb
or
pop
fimull
and
inc
loope
add
mulb
cmc
mov
add
push
bound
mov
pusha
add
add
add
stos
xchg
cmp
ja
add
inc
add
add
cwtl
and
push
test
ss
ficompl
dec
adc
or
arpl
je
pop
mov
mov
add
jbe
addb
insl
and
dec
test
or
mov
pop
push
push
js
adc
pop
add
mov
xchg
out
xchg
mov
ljmp
stos
pop
rolb
mov
mov
loopne
mov
sbb
add
push
xor
push
mov
mov
mov
add
cs
out
dec
stc
pop
mov
jne
add
mov
paddd
loop
mov
mov
lods
pop
rcrl
add
dec
mov
mov
xor
in
add
xchg
addb
hlt
out
or
lods
aad
mov
lea
push
add
sub
mov
mov
and
mov
add
ret
sahf
popl
hlt
insl
jg
push
push
sub
inc
inc
addl
lock
aam
mov
scas
loopne
mov
fstps
fists
jmp
add
popa
sbb
aad
out
mov
das
and
mov
mov
cmc
flds
addb
js
adc
xor
add
daa
inc
add
cmp
mov
mov
push
pop
mov
jecxz
das
mov
sub
iret
mov
add
mov
xor
xchg
inc
add
dec
out
mov
std
xchg
sahf
push
popa
out
mov
mov
push
insl
push
pop
ret
jb
mov
add
mov
je
ficompl
push
jns
mov
lret
mov
cmp
add
push
clc
cld
int
aad
jecxz
arpl
ja
pop
push
inc
cmp
gs
pop
xchg
jns
push
cmp
sbb
mov
cmp
int
xchg
inc
add
add
add
mov
and
add
add
je
mov
test
cmpsl
mov
fnstsw
push
add
add
add
int3
cmp
pop
xor
bound
mov
movsb
loop
mov
jno
mov
push
stos
out
outsb
icebp
inc
add
sti
or
inc
sub
sub
sub
add
mov
adc
jno
mov
add
lock
sbb
sbb
insl
mov
mov
stc
fstl
fdivrs
mov
pop
pop
pop
inc
add
jp
jb
mov
addr16
insl
push
cli
inc
xchg
xor
mov
cmp
mov
add
mov
add
sbb
sbb
sbb
inc
add
test
ret
hlt
dec
hlt
sub
adc
mov
pop
stc
xor
fildll
pop
mov
cmpsb
fldcw
jge
movsb
xchg
mov
lods
scas
movsl
mov
rcr
mov
and
mov
xchg
push
sarl
fsubrl
in
icebp
gs
jp
add
mov
mov
sub
mov
pop
add
mov
sbb
mov
fwait
push
pusha
add
in
rolb
adc
mov
pop
mov
and
mov
jbe
mov
cld
ja
add
leave
mov
test
pusha
add
or
add
rolb
mov
add
in
out
js
add
test
scas
sbb
ja
or
rolb
mov
jo
mov
mov
insb
divb
dec
dec
jecxz
xchg
mov
mov
les
pop
cmp
cltd
in
lock
ss
jo
mov
mov
mov
mov
lods
daa
jmp
lcall
add
jmp
pop
fwait
arpl
lahf
mov
pop
in
dec
push
das
and
mov
sbb
rcl
xchg
add
pop
mov
jp
inc
pop
mov
mov
mov
add
mov
out
mov
cmp
jns
add
push
add
cltd
std
xchg
mov
add
pop
dec
mov
cmp
mov
dec
lret
add
mov
fcomi
add
adc
test
inc
dec
push
add
mov
mov
cltd
xor
mov
add
xor
xor
push
mov
adc
outsl
mov
mov
notl
movsb
les
pop
imull
rolb
lock
fbstp
add
mov
mov
mov
movsl
cmpsl
push
add
mov
mov
ret
data16
pop
jne
scas
mov
add
loop
mov
mov
add
cmp
add
int
add
lods
adc
mov
mov
xchg
test
add
push
outsb
push
pushf
or
add
sub
mov
mov
out
lock
mov
loope
mov
mov
xchg
mov
jp
mov
mov
add
mov
add
movsb
inc
add
mov
enter
pushf
pop
and
mov
add
mov
scas
xor
mov
mov
test
inc
and
or
hlt
nop
add
add
jbe
shll
push
pop
sub
js
addb
add
jp
sahf
addb
fdivrp
inc
add
mov
clc
add
mov
push
mov
jp
add
mov
inc
outsl
rolb
mov
fldt
jo
mov
add
rcll
pop
lock
aaa
ret
mov
cmpsb
jbe
adc
cmp
sti
sbb
fbstp
lods
sub
cs
enter
mov
cld
scas
lock
arpl
test
add
dec
test
pop
mov
data16
mov
mov
lahf
mov
mov
aaa
mov
add
adc
mov
dec
fldenv
out
mov
js
nop
add
test
sbb
mov
or
mov
int
lods
or
std
popf
pop
rcl
das
mov
jp
in
add
mov
in
arpl
into
pusha
add
fsubrl
cmp
mov
lcall
sbb
repnz
pop
seta
push
js
xor
pop
test
scas
call
js
xchg
add
inc
das
mov
xor
mov
add
mov
lods
pushf
pushf
xchg
pop
mov
gs
jnp
add
aam
dec
jns
adc
sahf
cmp
add
mov
stos
movsb
std
or
pop
fstpl
pop
jle
mov
and
mov
subl
mov
imul
loope
nop
add
sbb
mov
mov
popl
jp
pop
icebp
or
dec
rcll
xchg
add
stos
icebp
shrl
pop
call
test
daa
icebp
sub
adc
mov
xor
mov
mov
add
and
mov
cmp
xchg
push
mov
xor
mov
scas
mov
add
sbb
push
pushf
flds
pop
ss
call
es
aaa
push
pop
jl
dec
inc
pushf
jb
mov
leave
mov
addr16
mov
popl
je
movsl
int3
and
repz
imul
lahf
xchg
ds
jne
inc
arpl
add
pop
mov
add
dec
in
pushf
pop
loop
mov
test
sub
jbe
push
ja
notb
lahf
fcoms
stos
sbb
rolb
mov
clc
mov
sti
stc
je
lcall
mov
mov
fadd
add
shrl
pop
imul
sti
sub
rolb
test
sub
add
int
in
sbb
dec
mov
mov
sub
add
mov
adc
cltd
push
add
test
movsb
dec
das
scas
xor
sub
xor
mov
int3
insl
or
push
loopne
mov
or
test
mov
jns
push
cmp
cmp
adc
or
test
mov
loope
push
jmp
addb
jns
add
dec
jg
cmp
mov
adc
add
mov
pop
pop
rolb
mov
ds
je
pop
cmp
xor
mov
add
jno
mov
mov
mov
push
push
subl
pop
cmp
cmp
mov
aam
bound
mov
add
gs
mov
cmpsl
nop
add
mov
mov
jge
notb
stos
push
mov
push
add
in
mov
rolb
mov
add
loopne
mov
jge
xor
mov
out
xchg
add
mov
or
in
mov
xor
mov
lods
clc
push
pop
or
and
mov
xchg
add
mov
mov
lret
add
sub
and
mov
popa
jo
mov
fld
mov
test
fs
fildl
mov
loopne
mov
add
mov
xchg
test
les
scas
mov
popf
or
sbb
push
jnp
dec
push
xor
mov
and
push
iret
outsl
leave
in
jmp
imulb
sbb
es
xor
add
ret
jp
mov
inc
mov
rcll
dec
mov
sbb
adc
mov
jnp
add
or
cmp
add
cmpsl
push
add
sbb
outsb
add
mov
les
aaa
ljmp
add
pusha
add
mov
and
add
cltd
sbb
add
inc
push
add
pop
jb
mov
cltd
cld
sbb
add
add
add
rep
mov
jns
inc
jge
inc
xchg
ficoms
jb
mov
pop
cmc
xchg
jns
in
jmp
ja
mov
add
loopne
mov
sub
add
pop
ja
leave
jl
sbb
testb
and
add
inc
xchg
repnz
jmp
cmp
cmp
xor
mov
xchg
cmp
sti
shll
mov
jecxz
or
adc
mov
adcl
adc
mov
fisttpll
fcomps
repz
add
leave
and
push
push
dec
mov
jg
add
mov
mov
test
sub
push
insb
loop
mov
pop
sub
daa
movsl
sbb
lahf
dec
cmp
movsl
jmp
jns
outsl
sbb
add
sti
mov
or
xor
add
adc
mov
mov
inc
adc
mov
int3
and
add
cld
int
mov
rorl
rolb
mov
add
lret
lea
dec
push
addb
cli
adcl
pop
mov
adc
rcrl
mov
mov
and
push
add
or
cwtl
jge
popf
inc
add
adc
mov
dec
inc
icebp
sbb
mov
and
fdivp
scas
xchg
xlat
daa
push
mov
cmp
cli
hlt
sbb
xchg
pusha
add
scas
and
mov
mov
and
mov
mov
adcl
mov
sub
add
xchg
movsb
or
mov
outsl
addb
add
xor
mov
mov
add
mov
lods
push
jo
mov
cli
mov
fcompp
push
jp
push
mov
mov
repz
into
mov
mov
test
scas
jno
lcall
mov
mov
mov
movsl
addr16
xor
mov
add
imul
fildl
add
aas
insb
mov
lret
push
sahf
fs
clc
pop
and
scas
push
add
mov
mov
es
add
aas
xchg
mov
adc
push
add
leave
ret
push
add
outsl
addb
ret
sub
mov
add
bound
mov
mov
js
push
sbb
mov
icebp
lods
aad
fcompl
inc
cltd
cmp
dec
or
cmpsl
xor
mov
add
mov
or
xchg
mov
sbb
jl
fisubs
sarl
add
xchg
clc
dec
cld
mov
or
add
enter
icebp
mov
mov
add
add
in
inc
mov
lahf
xchg
aad
pusha
add
cld
fldl
sbb
frstor
add
stos
in
mov
mov
out
popf
jbe
aam
imulb
test
add
mov
cltd
cltd
mov
mov
mov
repnz
mov
cmp
mov
mov
inc
in
xor
mov
add
mov
push
repz
test
add
rolb
mov
popf
int
repnz
aas
fadds
lret
lods
mov
fadd
daa
pop
pop
xchg
mov
mov
movsb
fsubs
ss
cmp
test
or
pop
cmp
movsb
sbb
mov
scas
daa
lret
inc
pop
xchg
popa
pop
cmpsl
inc
xchg
pusha
add
add
add
mov
ret
xchg
add
sub
mov
inc
cmp
fcmovu
and
sbb
cmp
jmp
cmp
jg
rdtsc
xor
mov
mov
ficompl
loop
mov
clc
pop
mov
dec
xor
mov
jl
xchg
lea
mov
mov
mov
add
add
shufps
outsb
divb
add
mov
daa
pop
mov
lock
push
aaa
mov
fsts
adc
mov
movsl
mov
mov
mov
add
and
xchg
imul
cwtl
data16
inc
mov
dec
pushf
mov
mov
addb
pusha
add
add
lcall
cltd
addl
add
mov
pop
ds
add
xchg
add
cmp
std
sbb
adc
ror
stos
mov
jnp
movsl
sub
sub
push
dec
jle
cltd
ret
sub
pop
pushf
lea
mov
dec
addr16
mov
mov
inc
mull
add
add
pop
fwait
push
fucomp
popa
or
lret
dec
xlat
or
mov
xlat
push
popf
sbb
repnz
fsts
add
add
das
ret
jge
add
addr16
dec
dec
cwtl
xor
mov
add
mov
arpl
mov
xchg
xchg
or
pop
mov
mov
movsb
cli
ja
pop
cmpsb
stos
ror
cwtl
push
mov
sbb
jae
lds
addb
mov
mov
lock
mov
je
push
add
add
xchg
stc
repz
dec
dec
and
les
add
int
lods
and
pop
ficomps
mov
fdiv
add
daa
ds
pop
push
cld
les
dec
add
cmp
sahf
jge
aad
xor
popa
mov
or
das
dec
insl
incb
mov
shr
arpl
xor
inc
sti
hlt
sub
xchg
test
mov
stos
mov
and
mov
pop
in
mov
push
add
xchg
or
movsl
ljmp
loopne
mov
jmp
cmpsl
rolb
loop
mov
add
add
sbb
repz
scas
push
pop
xchg
mov
push
add
fistpll
sbb
es
jmp
cmp
or
mov
add
mov
sub
insl
and
lods
scas
inc
push
mov
ljmp
ret
xchg
pop
jecxz
sbb
add
sbb
iret
sub
inc
in
aas
shll
mov
xor
mov
daa
add
mov
iret
mov
lods
scas
mov
insl
das
mov
enter
cmp
clc
push
jno
in
jecxz
add
gs
and
mov
push
add
outsl
mov
add
add
mov
arpl
add
sub
insl
push
lcall
movsl
and
mov
add
sub
fs
in
out
popa
fildll
in
in
scas
sub
mov
mov
add
mov
fsts
add
mov
in
mov
test
push
and
mov
mov
mov
mov
push
test
ret
and
inc
sbb
in
jl
jmp
jge
or
mov
add
aad
inc
push
sbb
inc
and
mov
add
test
mov
cmp
add
jnp
stc
xor
pop
or
iret
add
add
jecxz
xchg
add
sahf
pop
testb
mov
outsb
sahf
lea
nop
add
jle
loopne
mov
xor
xor
ret
fsubrl
sbb
leave
test
add
pop
daa
in
iret
cmpsb
mov
mov
popa
movsb
mov
lcall
add
mov
add
es
add
mov
cs
cmp
mov
mov
mov
out
add
inc
mov
cmp
pop
jl
jb
mov
add
mov
add
inc
add
mov
add
sub
jge
outsl
pop
daa
rolb
mov
inc
xchg
pop
xor
mov
adc
mov
je
imul
push
inc
jns
jne
add
cmpsl
and
mov
mov
add
dec
cs
or
clc
jne
into
aas
mov
and
les
shrl
ds
add
mov
jle
sbb
in
mov
ret
inc
xor
mov
mov
xchg
mov
sbb
push
leave
jl
mov
push
inc
add
mov
mov
xor
mov
jle
push
or
jmp
lods
bound
mov
fwait
out
or
ret
movsb
xchg
lret
mov
push
ss
mov
sub
jb,pn
mov
add
add
adc
mov
push
adc
sbb
cmp
or
mov
pop
inc
mov
mov
outsl
inc
mov
mov
mov
add
add
add
mov
mov
cmp
scas
out
add
mov
rol
fwait
pop
fdivrp
sahf
push
jne
add
add
pop
dec
mov
inc
add
scas
outsl
mov
leave
iret
int3
call
cltd
cwtl
cmp
test
mov
push
jmp
push
subl
daa
inc
push
add
jp
inc
add
pop
xchg
sbb
es
mov
in
push
pop
pushf
pushl
add
or
mov
icebp
cmpsb
push
and
outsl
fwait
pop
aad
xlat
xstore-rng
cmpsl
add
mov
jl
push
arpl
add
mov
mov
outsb
insb
stos
push
and
cli
out
ljmp
add
xchg
add
ds
mov
or
stos
add
mov
jo
mov
add
mov
push
mov
mov
xor
jp
sbb
sub
jg
mov
test
cmp
add
lods
push
int3
mov
aas
roll
add
mov
jmp
xchg
jns
jl
push
add
add
pop
enter
push
add
cmp
jl
add
in
push
add
xchg
push
nop
add
and
les
push
xchg
mov
jmp
aas
mov
inc
clc
lret
movsb
mov
dec
or
adc
cmp
inc
test
push
in
push
add
pop
pushf
aas
mov
mov
add
jns
fstps
push
fstpt
arpl
je
add
std
stc
orl
sub
out
out
xlat
je
and
mov
ja
and
pop
or
mov
xchg
ret
incl
cmp
add
cli
aaa
call
cmp
or
jo
mov
repnz
pop
inc
mov
mov
adc
mov
aad
lds
mov
movsl
push
sub
scas
imul
mov
dec
cmp
add
add
idivb
mov
push
cmp
add
loop
mov
imul
addr16
fnstenv
ret
lret
incb
cmp
jo
mov
fcompl
xchg
daa
in
add
add
cmp
clc
enter
add
or
loop
mov
sarl
cmp
fisttpl
or
addr16
jns
inc
sti
cmp
addb
cltd
or
bound
mov
cld
movsl
and
scas
cmp
push
add
add
and
add
pop
rolb
mov
bound
mov
testl
jnp
inc
add
pusha
add
stos
mov
add
xchg
or
enter
addb
pop
or
jp
sbb
and
mov
add
add
and
mov
mov
jl
lock
out
pop
scas
mov
lods
ret
fwait
je
inc
add
push
add
mov
add
mov
pop
les
sbb
fisubrs
and
mov
cli
loope
sbb
push
dec
or
xchg
popf
outsb
xor
mov
movsb
pop
jbe
int3
pop
jg
jmp
ficomps
xor
in
adc
mov
lcall
sub
mov
add
mov
pop
mov
jo
mov
mov
mov
jg
fidivl
test
mov
xor
inc
mov
stc
xchg
fdivr
xor
pusha
add
cmp
int3
sbb
lea
fwait
outsl
add
add
dec
scas
xor
inc
mov
add
aas
mov
popa
lret
sbb
fwait
lret
mov
xchg
cs
sahf
mov
imul
mov
inc
daa
andl
fistpl
insl
sbb
fadds
mov
cmpsb
clc
in
jecxz
adc
mov
xor
push
xlat
loopne
mov
loop
mov
jl
xor
mov
add
sahf
or
add
push
mov
add
push
cmpsl
and
mov
mov
imul
cmc
mov
add
mov
add
das
sbb
jb
mov
vpsrld
mov
pop
addb
pop
sub
fmull
xlat
xor
mov
push
add
pop
fs
push
add
xor
push
or
pop
mov
mov
es
add
orl
mov
ret
scas
jle
fadd
imul
mov
or
add
sbb
insb
mov
flds
insb
lds
in
xchg
sbb
adc
mov
mov
pop
pop
ret
sbb
lods
popa
arpl
mov
mov
aam
add
add
mov
arpl
adc
xor
sub
fs
aaa
adc
rolb
mov
push
add
mov
add
in
test
lret
xchg
sbb
jbe
add
mov
adc
add
lods
jns
mov
or
and
mov
or
outsb
aam
psrad
mov
push
add
int3
jo
mov
add
je
add
bound
mov
add
add
pushf
sbb
mov
jecxz
add
sahf
push
add
adc
arpl
clc
nop
add
mov
mov
std
jnp
mov
jns
lahf
xor
adc
mov
rep
or
mov
call
mov
aam
or
add
mov
jp
in
sub
out
sti
in
sub
fwait
push
mov
bound
mov
push
add
outsl
pushf
pushf
lcall
push
push
shl
add
lret
jmp
xchg
addb
in
mov
subl
faddl
mov
data16
xor
testl
add
cmp
cmp
push
and
mov
jae
roll
cmp
cmp
fisubrs
mov
and
mov
sbb
arpl
xchg
mov
pop
ss
sbb
add
xchg
adc
mov
or
xchg
out
repnz
push
aaa
mov
cmp
xor
mov
call
mov
mov
mov
mov
sub
jb
mov
cmp
add
addb
jno
lods
test
mov
test
stc
mov
push
mov
add
pop
inc
pop
daa
enter
add
lds
or
test
les
add
push
test
push
arpl
add
add
dec
adc
into
or
andl
mov
stc
in
mov
push
jns
shrl
push
popf
or
jecxz
or
adc
cmpsb
test
fcomi
addr16
xorl
jl
mov
mov
lods
addb
jno
push
in
add
add
add
mov
scas
mov
loopne
mov
loopne
mov
and
inc
loopne
mov
rolb
mov
or
xchg
add
mov
mov
push
jns
jge
sub
sub
push
inc
in
cs
cmc
rolb
mov
add
push
xchg
jns
pop
xchg
je
sahf
add
xlat
jle
scas
insl
addb
jno
insb
shrl
and
mov
stos
fisubs
rcll
mov
inc
add
add
pop
subl
push
mov
jbe
stc
mov
mov
repnz
and
fildll
fldcw
jle
xchg
je
sbb
push
push
add
fcoms
add
dec
aaa
adc
inc
mov
add
mov
or
pop
sub
or
pop
mov
add
dec
sub
inc
in
outsl
push
inc
add
mov
mov
cmp
jp
xchg
int3
in
lea
xchg
loope
add
mov
loop
mov
lock
add
mov
push
mov
fnstenv
mov
inc
ss
jb
mov
lock
icebp
sti
sti
jnp
sti
xor
ds
stc
daa
pop
jo
mov
pop
int3
push
push
xchg
add
mov
js
add
sbb
push
aam
cmc
inc
adc
mov
mov
sbb
xchg
in
sbb
mov
add
add
stos
out
cwtl
mov
mov
addb
xchg
imul
mov
or
add
add
cmp
push
pop
das
mov
add
mov
dec
adc
mov
sbb
cmp
mov
sbb
xor
add
out
xchg
pop
lret
mov
add
and
jne
imul
sub
add
in
pop
xor
mov
add
fldcw
and
lcall
mov
mov
mov
pop
adc
fistpl
pop
rolb
mov
les
add
in
addb
mov
add
fildll
pop
insb
mov
push
mov
ret
dec
js
andl
add
cmpsb
into
fs
sbb
sbb
add
sbb
repnz
clc
pop
insb
sub
push
add
fsubs
out
sub
sub
inc
in
sub
pop
filds
jno
add
dec
and
mov
pop
cli
bound
mov
and
xchg
fwait
cltd
sub
and
enter
lahf
lea
and
add
sbb
add
out
jae
add
push
jnp
movsb
lret
mov
xor
cmp
add
int3
cmc
in
jle
mov
cmpsl
sub
loop
mov
adc
inc
adc
adc
nop
add
push
add
push
add
insb
cmpsl
cli
and
mov
mov
inc
ja
mov
add
mov
lds
mov
pop
out
add
mov
dec
sti
leave
push
clc
aaa
cmp
adc
add
dec
adc
pop
nop
add
mov
test
mov
rolb
mov
dec
movsl
lcall
xchg
insl
pop
addb
subl
mov
mov
pop
adc
mov
iret
dec
cli
ret
fsubs
add
insb
mov
add
push
test
pop
das
loopne
mov
mov
mov
lcall
mov
xlat
mov
in
inc
je
inc
add
jge
add
push
add
stos
or
jge
cli
lods
in
fidivrl
mov
adc
mov
add
sbb
inc
xchg
add
add
mov
or
mov
add
mov
fbstp
add
add
fdivrp
sub
aad
lret
sbb
movsl
cwtl
fcomps
mov
add
mov
mov
add
mov
fstpt
add
inc
push
mov
add
mov
add
sti
rcr
cmp
gs
mov
arpl
mov
mov
add
add
add
mov
sbb
addr16
add
aas
movl
mov
pop
dec
out
stos
hlt
jbe
inc
add
push
bound
mov
xchg
cwtl
xchg
mov
cmc
inc
jno
or
fstp
push
and
shll
add
push
popf
xchg
add
push
int
fdivp
add
sub
dec
mov
cwtl
cli
psadbw
jmp
add
add
nop
add
push
pop
mov
pop
in
add
data16
iret
scas
cs
sub
test
add
cmp
sub
add
pop
inc
pushf
dec
add
mov
loop
mov
outsl
fistl
add
imul
cmpsb
cmc
or
xchg
push
scas
aaa
sahf
imul
and
movsb
fcom
aam
add
xor
mov
das
xor
mov
movsl
ret
pop
lock
mov
jbe
jp
xchg
loope
adc
mov
ret
inc
inc
add
movsl
aaa
cmp
repz
dec
mov
mov
push
add
mov
or
xchg
add
ret
pushf
dec
xor
addl
and
mov
dec
adc
mov
pop
pusha
add
dec
add
mov
out
mov
out
add
mov
add
mov
mov
hlt
sub
mov
mov
call
cs
mov
mov
jo
mov
or
push
add
outsl
leave
repz
add
cld
or
orl
insb
aam
pushf
loop
mov
insb
and
mov
rcl
or
ja
sahf
jns
clc
pop
les
scas
pop
add
or
cmp
fnstenv
add
enter
jg
leave
xor
mov
nop
add
add
add
or
dec
ret
xorl
add
lea
xor
mov
mov
mov
jbe
das
std
lods
mov
mov
lock
mov
add
in
xor
push
sub
sbb
add
mov
jl
jmp
cmp
push
decb
addr16
cmpsl
add
pop
popa
fwait
mov
bound
mov
sti
mov
sub
inc
add
imul
push
adc
mov
add
mov
add
mov
mov
dec
xchg
loopne
mov
leave
popa
in
and
cmc
sar
and
fimull
je
out
stos
or
out
cmp
out
mov
inc
cwtl
stos
stos
in
vmovd
mov
jae
xor
sub
sbb
imul
add
add
dec
add
fsubl
add
mov
mov
shll
add
enter
das
mov
mov
xchg
cli
jp
sbb
mov
inc
cwtl
lcall
xchg
dec
jae
cmpsl
push
out
mov
mov
xchg
xchg
jle
cmp
and
leave
push
push
mov
or
adcl
in
inc
insb
repz
pusha
add
xor
test
addb
imul
jns
jmp
mov
mov
xchg
pusha
add
fwait
mov
jg
mov
push
and
mov
aad
ficoml
jbe
xchg
bound
mov
mov
add
sbb
add
or
stos
mov
pop
jp
add
add
cld
sub
jmp
add
lahf
and
mov
jnp
mov
add
mov
cli
push
adc
add
or
int
repz
mov
js
jecxz
lret
mov
cmpl
loopne
mov
add
lret
clc
ja
pop
sbb
divb
mov
xchg
jns
pop
pusha
add
imul
dec
subl
popf
xor
mov
nop
add
xor
mov
test
pop
xor
mov
es
mov
add
mov
lods
in
and
add
add
ljmp
mov
adc
pop
xchg
sub
add
scas
push
movsl
addr16
enter
addb
mov
cs
and
add
cmc
neg
or
mov
hlt
or
imul
data16
sub
add
cmpsl
push
jae
inc
or
mov
addb
push
mov
jb
mov
fistpll
stos
sbb
xor
mov
andl
mov
dec
push
add
mov
adc
cmpsl
jge
cmpsl
pop
icebp
cli
in
lds
aas
cwtl
jl
adc
mov
or
rcrl
lahf
mov
mov
rolb
fstps
add
test
xor
out
std
mov
lret
mov
add
lcall
and
cmp
pop
or
add
sub
sub
push
pop
in
in
outsb
dec
addb
inc
dec
sub
pop
inc
in
inc
add
cltd
pop
pop
pop
arpl
xchg
mov
mov
lods
jmp
add
cli
adc
mov
push
jbe
xchg
cmp
mov
jo
mov
mov
xchg
daa
dec
mov
add
mov
stos
outsl
test
das
cmp
inc
xor
mov
ffreep
imul
mov
and
mov
add
add
push
xchg
push
les
mov
int
cltd
jno
xchg
pop
aaa
dec
fsubrl
insl
aad
push
mov
les
fstpl
mov
iret
movsb
fcom
insl
out
clc
fisttpll
fldcw
bsf
sub
add
imul
inc
addr16
cltd
cmpsb
incl
add
add
mov
leave
or
xor
mov
es
nop
add
in
loopne
mov
mov
jecxz
loope
mov
add
jge
pop
cwtl
in
popa
cli
or
add
add
mov
fisubs
jns
add
aad
sub
lea
gs
pop
fiadds
add
aaa
xor
mov
imul
pusha
add
das
cmp
cmp
add
add
push
shll
bound
mov
movsl
movsb
testl
inc
lods
jnp
ljmp
mov
add
out
mov
add
inc
jl
dec
pop
mov
cwtl
xchg
cwtl
pop
push
dec
gs
test
in
mov
mov
push
pop
aam
sub
mov
mov
jp
adc
mov
es
lea
outsb
scas
das
add
mov
xchg
scas
dec
jmpw
out
cmc
mov
mov
xchg
cmpsl
imul
add
mov
mov
sub
add
add
mov
movsl
mov
mov
xchg
packsswb
ss
out
add
cli
jne
iret
pop
cli
data16
nop
add
mov
fidivl
scas
add
aas
mov
gs
fisubrl
pop
addr16
add
jg
xor
add
mov
add
inc
aas
imul
dec
in
mov
add
mov
add
or
mov
sub
inc
mov
mov
mov
mov
add
mov
fists
mov
jo
mov
sahf
mov
add
push
and
and
fsub
xchg
push
dec
insl
or
xor
mov
out
add
jmp
testb
clc
scas
push
adc
mov
mov
lods
inc
add
stos
or
jnp
lods
repnz
fimuls
xchg
cs
dec
int3
mov
add
adc
push
add
or
inc
add
cmp
cwtl
fsubrs
cld
xlat
cmc
push
add
hlt
dec
negb
push
add
mov
mov
push
jecxz
aam
add
sti
cmp
icebp
push
sbb
add
add
dec
stos
mov
push
ret
aam
cmp
add
add
cltd
xchg
add
mov
test
movsl
and
mov
aad
add
mov
cli
cmpsb
adc
dec
dec
sbb
pop
push
mov
sbb
add
pop
mov
pop
incl
mov
cltd
sti
mov
adc
add
mov
and
test
mov
inc
ss
dec
cld
mov
mov
push
jb
mov
repnz
jb
mov
or
jecxz
inc
add
aad
add
aam
ljmp
cmp
push
rorl
adc
je
fists
rolb
mov
mov
jne
fadds
sbb
data16
arpl
inc
add
jns
or
push
pushf
scas
and
es
ljmp
pushf
push
jnp
add
jle
pop
lea
add
dec
mov
add
xchg
scas
inc
xchg
mov
mov
mov
xchg
filds
mov
add
test
pop
dec
mov
adc
cmpsl
clc
pusha
add
lret
mov
mov
add
xor
mov
pop
cltd
pusha
add
imul
add
xor
fisttpll
push
xor
inc
fwait
ss
sbb
bound
mov
mov
lds
daa
mov
add
xchg
push
hlt
xchg
pop
dec
xchg
movsb
das
fyl2xp1
loopne
mov
sub
incl
add
push
xchg
adc
out
mov
into
xchg
pop
sub
sub
add
loop
mov
xchg
mov
cmp
add
ljmp
shll
stos
mov
je
fwait
mov
mov
add
push
or
xor
aad
and
adc
mov
push
pushf
adc
inc
cmc
and
test
push
push
sub
mov
adc
mov
push
lcall
pop
inc
mov
add
mov
cmp
ret
test
enter
stos
popa
pop
or
rolb
mov
cmpsb
bound
mov
xchg
add
and
bound
mov
sbb
mov
mov
loope
add
fisubs
mov
decl
std
cmpsb
adc
mov
in
mov
mov
mov
mov
out
pop
inc
add
push
push
mov
pushf
lods
mov
mov
movsb
pop
test
addb
outsl
adc
mov
and
push
cmpsb
das
out
fisubrl
loop
mov
mov
dec
rolb
mov
iret
jae
out
mov
lods
add
aaa
or
in
add
das
orl
cmp
xchg
mov
mov
fldcw
xchg
mov
jbe
add
mov
sub
inc
add
movsb
out
push
add
add
bound
mov
mov
fsubs
jo
mov
xchg
stos
mov
add
cmp
or
jo
mov
add
mov
mov
xor
mov
lock
adc
mov
mov
mov
lds
out
add
mov
adc
mov
mov
add
mov
sahf
mov
jnp
mov
xor
cli
push
stc
scas
jbe
add
inc
push
or
or
fildl
jl
lea
mov
jg
cld
jmp
add
add
loopne
mov
xchg
pushf
or
jge
xchg
pop
pop
mov
add
push
dec
push
mov
fs
imull
pop
cli
or
loopne
mov
dec
sub
add
mov
xchg
push
fidivrl
pop
gs
icebp
pop
addb
fwait
add
popf
insl
movsl
xchg
aad
pop
mov
adc
mov
arpl
ds
clc
ja
sarl
loopne
mov
fprem1
pushf
into
xchg
dec
rorl
dec
fadds
dec
mov
mov
mov
and
mov
imul
lret
sbb
add
addb
jp
mov
xor
mov
int
xor
add
or
test
bound
mov
fidivrs
mov
mov
xchg
int3
stc
sub
sbb
movsb
jo
mov
xchg
jne
movsl
movsb
popf
repz
add
xlat
movsb
adc
mov
int3
jbe
es
ja
mov
lods
bound
mov
repnz
add
repz
lahf
scas
fisttps
pop
jns
insl
push
fdivl
clc
call
lock
jge
mov
add
fcmovnu
pop
mov
pop
loop
mov
mov
aam
sbb
add
test
jne
sbb
sub
add
mov
jne
pop
push
mov
fstpt
add
add
mov
scas
ds
scas
mov
ret
mov
nop
add
in
mov
adc
sbb
rolb
lahf
mov
mov
or
ja
loope
add
ljmp
and
rolb
pop
roll
push
push
add
add
push
lahf
stos
inc
fcompl
and
mov
data16
outsl
dec
push
xchg
sub
mov
ret
aaa
jne
cmp
sub
cmp
mov
pop
jecxz
ftst
mov
cli
xchg
in
xor
mov
mov
or
push
push
scas
jl
outsl
loop
mov
add
push
add
imul
mov
popf
je
inc
loope
add
scas
push
add
loopne
mov
add
cmp
into
dec
mov
add
cmpsl
test
cmp
imul
push
fisubrs
icebp
arpl
pop
or
jns
test
lret
std
stos
jp
push
bound
mov
add
mov
mov
pop
pop
push
jo,pt
mov
mov
and
mov
test
or
je
push
add
pop
adc
sub
popa
add
mov
jbe
gs
cld
icebp
pop
mov
addr16
add
out
push
rolb
mov
dec
mov
mov
pop
and
push
xchg
dec
or
or
push
sub
adc
adcl
or
add
mov
mov
adc
jg
xor
aas
fwait
int
sti
subl
add
pop
aam
adc
mov
out
pop
jae
das
mov
add
js
pop
or
mov
add
push
add
add
test
add
xor
and
mov
adc
stos
loopne
mov
pop
shr
sbb
cmp
push
aas
scas
xchg
rolb
cwtl
push
rolb
mov
or
dec
leave
mov
add
sub
sti
and
push
cltd
cmp
mov
mov
sbb
sbb
int
rcll
push
imul
add
cld
xchg
add
cwtl
ss
dec
jmp
jne
daa
rcr
mov
add
stos
rolb
mov
add
mov
mov
lock
mov
add
adc
mov
in
lock
push
hlt
aas
pop
mov
mov
push
lock
add
mov
pop
loop
mov
sub
inc
xchg
cmp
aaa
mov
xchg
pop
ljmp
or
xchg
add
add
pop
pop
sar
pop
adc
jp
mov
imul
and
mov
lock
jne
add
and
fs
and
inc
add
xchg
mov
add
cmp
jecxz
leave
imul
inc
push
mov
mov
and
mov
add
out
cmpsl
dec
repnz
mov
sbb
loope
add
in
addb
stos
mov
jge
inc
add
mov
adc
incl
lock
in
and
jmp
gs
mov
sub
out
fldcw
stc
adc
add
add
add
test
xor
pushf
push
add
xor
mov
mov
mov
xchg
jo
mov
ljmp
rolb
mov
dec
je
sub
mov
mov
leave
sub
jbe
dec
pop
adc
and
xor
inc
pop
int3
aam
sub
xchg
ffreep
je
icebp
or
pop
mov
mov
push
jp
adc
mov
add
mov
inc
add
mov
bswap
pop
pop
fs
mov
je
loope
ljmp
sbb
add
repz
mov
cs
ret
lods
repz
fcoms
add
jge
leave
in
inc
add
xchg
add
out
mov
mov
pop
push
js
inc
add
dec
xchg
adc
add
pandn
or
sub
cmp
rcrl
jl
xchg
fcomps
inc
cmp
add
add
add
add
pop
jns
inc
dec
rsm
dec
dec
in
in
jb
mov
loope
cmc
add
mov
mov
mov
add
mov
je
repz
lret
mov
mov
fldcw
imul
test
add
xchg
add
mov
arpl
daa
jb
mov
jbe
jge
aad
add
xor
stc
outsl
and
mov
movsl
fs
add
cmp
xchg
xchg
jno
enter
arpl
out
int3
jmp
mov
loopne
mov
ss
xchg
add
xor
jl
mov
xorl
add
test
add
sub
pusha
add
pop
cmp
jno
mov
lock
data16
test
add
inc
pop
leave
out
outsb
mov
xchg
jge
add
add
fdiv
add
add
gs
lods
mov
imul
mov
xor
lcall
mov
loope
dec
cmp
scas
insb
arpl
rolb
mov
imul
xor
fisttpl
in
add
mov
inc
lahf
pushf
jg
xor
xchg
pop
jo
mov
dec
lcall
sbb
mov
jg
or
add
in
adc
mov
insl
imull
addb
iret
lds
hlt
add
dec
mov
xchg
xor
std
orps
lods
cmp
fnstcw
jb
mov
out
arpl
mov
push
mov
mov
leave
pusha
add
push
add
stos
lahf
les
add
imul
pop
dec
mov
data16
rolb
mov
ds
mov
push
out
inc
fs
mov
out
aad
addb
push
dec
roll
leave
lods
xor
test
sahf
cld
and
pop
jmp
adcl
addb
xchg
sub
scas
repz
mov
jg
insb
in
mov
mov
jg
jae
or
add
add
mov
or
lcall
push
xor
xchg
xor
mov
movsb
xchg
fsubrp
xor
add
mov
inc
and
mov
sub
add
call
add
mov
fdivrp
mov
cmpsb
negb
xchg
jmp
dec
sahf
push
rcrl
fldenv
mov
add
mov
and
add
fs
add
sbbl
testb
movhps
popf
insb
adc
mov
shr
and
add
add
