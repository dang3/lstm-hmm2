sub
mov
add
xor
addl
rolb
add
pushf
adc
push
ss
fs
mov
jge
js
in
add
and
aam
ficoms
call
add
push
mov
imull
js
add
lret
inc
add
cmp
fisubl
add
out
lret
andl
pop
cmc
mov
scas
inc
add
rclb
cmp
add
movb
adc
enter
mov
xchg
fwait
cltd
jmp
xor
arpl
push
cmp
mov
add
clc
out
enter
add
or
or
or
add
mov
xchg
fs
nop
mov
repz
adcl
mov
int3
adc
and
mov
mov
test
out
out
call
jo
cmp
sbb
jge
cld
jb
pop
dec
cmp
inc
add
fwait
and
pop
pusha
add
decl
mov
mov
cmp
add
add
pop
pop
aam
xor
aad
ret
les
jg
mov
movsb
test
fwait
mov
cmp
push
inc
add
jns
mov
dec
in
test
push
call
std
rolb
push
mov
mov
xor
xor
add
out
cmp
mov
mov
mov
lea
lahf
and
enter
add
mov
add
adc
outsl
hlt
sub
aas
jmp
lret
sahf
xchg
xlat
push
and
or
add
cltd
stos
out
rorb
rolb
and
add
push
jns
jmp
dec
mov
lret
cmp
push
punpckhwd
sarl
ret
iret
mov
ja
xor
in
rolb
cld
xchg
sbb
jge
aad
push
mov
xor
cs
shrl
shrl
jo
inc
cmp
sbb
xor
test
push
push
dec
cmpsb
dec
es
inc
add
add
sub
jle
sti
movb
push
push
and
mov
xchg
pop
mov
shl
lret
adc
jae
and
inc
add
sub
pop
cmpsb
icebp
test
and
jge
add
mov
loope
lods
adc
mov
inc
insl
in
and
add
mov
clc
inc
push
mov
jl
add
lds
test
jmp
lcall
js
xchg
or
jle
in
dec
adc
scas
in
fs
add
mov
ja
icebp
popa
notl
and
arpl
sbb
add
xor
loop
lock
mov
xchg
jecxz
fsub
in
add
xchg
or
cmp
add
rorb
jbe
pusha
add
test
hlt
push
add
xchg
mov
enter
dec
shrl
pop
mov
shll
scas
outsb
and
out
sbbl
rolb
test
or
xor
jns
stos
jg
xor
xor
mov
movsb
inc
dec
repnz
out
aaa
cmc
pop
push
and
in
mov
xchg
pusha
add
push
in
xorl
mov
js
iret
mov
das
ds
aaa
scas
rolb
ficomps
mov
mov
insb
jnp
cltd
ret
jo
add
xchg
dec
ja
pop
imul
and
mov
hlt
and
jne
ljmp
jns
xor
pushf
sbb
insl
aas
shll
adc
stc
rcll
icebp
mov
mov
test
add
fsubl
popf
adc
sub
and
pop
gs
adc
jle
push
cs
in
cwtl
fs
lahf
lahf
imul
xchg
xor
pop
or
mov
xor
inc
mov
add
lods
or
in
jb
out
mov
and
xchg
rolb
xlat
lahf
or
bound
das
aas
cmp
sbb
xchg
inc
imul
push
pop
jno
movsl
ficoms
cmp
add
test
push
xor
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
ds
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
or
xchg
lea
sub
xacquire
pop
add
mov
cs
push
push
lret
jmp
add
add
jae
add
shr
imul
dec
and
inc
sub
mov
out
cmp
pop
jl
push
mov
imul
lcall
test
cwtl
sub
sbb
and
xor
adc
push
jg
mov
add
loop
push
loop
or
adc
pop
jns
add
add
loop
pop
popf
mov
outsb
inc
add
loope
cmp
loope
sub
push
ds
outsl
stc
leave
cmp
inc
mov
das
shlb
mov
pushf
cmp
out
xor
pop
ljmp
inc
and
ss
addb
andl
pop
inc
add
mov
clc
jle
xor
dec
lds
cmp
pop
or
movb
push
repz
mov
push
sbb
gs
sub
sbb
and
inc
mov
inc
add
inc
add
add
add
adc
std
adc
out
mov
add
rolb
call
sub
push
dec
push
jno
cmp
shrb
notl
leave
mov
mov
shl
or
insl
and
dec
bound
inc
sti
or
jnp
or
pop
mov
test
jmp
push
lods
andl
mov
add
fwait
in
push
mov
add
in
add
jno
jae
subl
mov
xchg
sbb
aas
adc
mov
clc
and
bound
or
clc
adc
dec
addb
pusha
add
in
fs
fiadds
sub
mov
outsl
int3
es
add
jae
out
rolb
add
daa
xchg
mov
repz
inc
add
mov
cmp
ss
sub
aam
pop
cmc
mov
out
xchg
pop
ds
pop
sbb
adc
cltd
test
daa
adc
je
mov
add
fcoms
add
popf
push
movb
les
xchg
fldcw
push
or
iret
pop
iret
pop
inc
add
inc
add
jae
mov
fmuls
outsl
jecxz
rcll
pusha
add
push
mov
adc
ljmp
xchg
test
adc
push
and
mov
sub
cmp
mov
cmc
fisubrl
lea
xchg
popf
pop
inc
add
cmp
jmp
mov
sti
mov
mov
inc
add
gs
push
dec
pop
mov
pop
or
mov
xchg
xor
outsb
out
arpl
hlt
cs
or
add
bound
pop
adc
stos
push
add
ret
insl
jbe
pop
loope
cmp
sbb
dec
mov
dec
xchg
clc
sub
mov
add
dec
adc
jp
pop
sub
cltd
int
ror
in
shl
adcl
add
in
cmp
hlt
push
rclb
mov
aas
repnz
das
scas
or
sbb
out
mov
or
adc
cmp
inc
add
fwait
in
cltd
repz
lahf
aam
add
mov
add
mov
add
movb
jb
add
dec
cmpsl
fcomi
sub
cltd
cltd
cld
jl
push
add
mov
imul
sub
aad
mov
movsb
inc
lods
push
icebp
bound
xchg
in
add
sahf
push
int3
add
loopne
inc
movsl
clc
bound
mov
out
lret
sub
xchg
and
mov
and
add
dec
outsb
icebp
scas
in
adc
gs
inc
jge
and
stos
xchg
pop
lods
push
cmp
mov
inc
jnp
subl
imull
cmpsl
jo
fcomps
xor
divl
xchg
mov
nop
filds
sbb
xor
mov
mov
inc
add
imulb
in
mov
push
nop
pop
in
add
mov
ljmp
jns
fmulp
cltd
mov
daa
jbe
or
fldl
sub
push
repnz
mov
add
jp
jecxz
lods
sbb
add
xor
adc
popf
or
test
nop
xchg
test
adc
xchg
andl
add
or
loop
mov
inc
push
in
divl
jo
or
out
mov
mov
inc
xor
mov
jo
test
xor
inc
sub
std
jno
mov
repz
jae
pop
gs
cmc
nopl
add
pop
jno
ss
insb
es
push
xor
mov
adc
repz
jmp
dec
insl
mov
mov
notl
int3
or
add
sbb
add
jae
stc
jmp
jmp
add
jns
sbb
sbb
or
add
std
pop
and
stos
xor
inc
pop
sub
dec
sbb
test
sub
into
fs
dec
mov
adc
mov
mov
sub
push
add
fcompl
or
mov
jmp
and
push
idiv
repnz
outsb
jp
dec
fisubrs
loope
jnp
aaa
mov
mov
repz
into
cmp
sbb
shll
dec
arpl
push
not
push
js
sar
insl
into
xchg
idivl
add
add
in
jbe
movsl
dec
jmp
add
test
imul
pop
fbstp
xchg
jge
cmp
lods
xchg
jae
inc
lea
xor
and
cs
mov
iret
out
xor
dec
fcom
popf
inc
add
cmp
ret
xchg
mov
cmp
jno
push
adc
adc
mov
out
mov
jl
lcall
popf
push
sarb
popf
mov
and
movb
cmc
sar
mov
pushf
rolb
roll
stc
add
lods
mov
fnstsw
pop
cmpsl
mov
mov
add
pop
mov
mov
xchg
data16
in
je
add
dec
and
cmp
stc
push
ss
fisubrl
lcall
arpl
jbe
mov
popa
fwait
dec
loopne
cmp
jb
jmp
jne
add
jo
addr16
push
mov
lods
loope
int
iret
sub
and
add
out
pushf
lds
xlat
cmc
dec
mov
icebp
pushf
std
outsb
aaa
xchg
add
fmuls
cli
movsl
pop
dec
aaa
cmp
test
iret
push
jmp
inc
add
xor
fstpt
rcrb
adc
addb
and
inc
add
or
ret
into
cmp
out
out
jno
mov
movsb
pop
and
inc
add
pop
xlat
xor
ja
packssdw
scas
and
movsl
jns
shlb
lock
mov
mov
push
in
xor
pop
pop
inc
rcll
out
xor
iret
and
pop
gs
mov
arpl
inc
add
jne
in
or
pop
mov
icebp
jne
mov
add
cmp
mov
cltd
fistpl
cmc
inc
jns
jnp
and
movsb
cmpsb
mov
adc
xchg
lcall
add
push
jge
sub
nop
sbb
int3
clc
lret
shll
ljmp
push
add
mov
cmpsb
sbb
iret
cmp
mov
in
xor
mov
aas
pop
mov
push
mov
add
je
xor
lcall
cmpsl
pusha
add
add
add
dec
inc
add
js
fwait
pop
hlt
and
int3
or
into
imul
ret
xchg
lret
lcall
loope
or
cwtl
adc
mov
adc
mov
je
mov
ror
in
cmc
shll
lret
fidivrs
daa
loop
je
int3
hlt
pusha
add
add
adc
repnz
jbe
pop
outsb
pop
cmp
mov
add
cmc
movsb
in
fbstp
xor
mov
mov
hlt
adc
inc
add
fstps
adc
pop
dec
push
mov
sub
xchg
ret
ljmp
mov
xchg
mov
mov
inc
add
add
push
outsl
sbb
sub
jmp
stos
xlat
repnz
adc
xchg
cmp
inc
adc
test
popa
xchg
adc
dec
ret
lock
sbb
mov
sbbl
pop
and
lods
xor
stos
pop
add
adc
stc
or
ret
pop
inc
add
add
inc
add
out
add
fs
lret
insb
and
and
frstor
loopne
dec
xor
jbe
cmp
dec
push
mov
test
int
repnz
addb
and
xchg
nop
inc
add
mov
loopne
xchg
bound
lods
test
ds
inc
add
cmp
nop
pusha
add
and
mov
add
movb
and
inc
cmpsb
imul
mov
pop
sub
lahf
push
pop
xlat
xchg
cld
bound
fcomps
pushl
aad
or
jge
inc
iret
push
sbb
adc
hlt
and
xor
bound
jo
pop
pop
pop
xchg
bound
lret
in
bound
add
mov
xor
add
xchg
sbb
add
xchg
push
jmp
insb
mov
ret
mov
in
or
push
inc
add
inc
js
cmpl
mov
nop
adc
mov
shl
daa
jp
mov
pop
rcrl
adc
xor
xlat
clc
cwtl
adc
shr
add
mov
mov
mov
mov
push
xchg
and
jo
icebp
adc
add
add
pop
aad
in
loope
push
mov
xchg
push
add
push
fwait
add
or
popf
mov
in
inc
sub
add
lret
shlb
pop
push
lods
adc
ljmp
mov
enter
pusha
add
lock
lock
cmp
inc
add
cli
jmp
js
lds
pop
stos
aas
mov
mov
pop
pushf
mov
into
mov
inc
add
es
mov
inc
add
jp
jbe
in
dec
inc
lret
out
roll
dec
sbb
jnp
in
dec
push
leave
fistpll
sahf
addb
pop
push
inc
sub
xchg
addr16
addb
out
sub
leave
lahf
push
and
mov
sub
jo
rolb
jo
jb
cli
or
pop
mov
outsl
orl
dec
insb
out
or
and
xchg
fcompl
not
aad
imul
xor
dec
imul
push
sahf
mov
mov
xchg
xorl
xor
lahf
bound
push
mov
sbb
out
cmp
add
fisubl
pop
xchg
repz
mov
sbb
xlat
mov
hlt
das
add
sub
sahf
enter
leave
loopne
je
xchg
bnd
fwait
cmpsb
add
fidivl
inc
add
enter
imul
sahf
cmc
add
loopne
xchg
imull
add
push
popa
gs
xchg
pop
rcrl
sahf
scas
adc
fdivs
sub
jle
cmp
cld
mov
je
loope
xor
mov
loopne
rclb
jns
jbe
mov
jne
mov
lahf
clc
or
int3
ljmp
push
dec
sbb
jp
mov
jae
loope
in
jae
sbb
insl
jb
adc
xor
mov
push
sbb
xor
adc
sub
sbb
xchg
push
icebp
add
xor
in
add
dec
mov
sbb
out
inc
add
sbb
cmp
add
aad
add
cmpsb
pushf
rcrl
add
pushf
popa
cmp
push
add
jns
rcrl
clc
xchg
cmp
adc
rolb
cmc
pop
ret
pop
out
repnz
inc
add
aas
sub
add
mov
mov
out
add
stos
in
mov
or
shl
scas
aaa
dec
pushf
xor
sub
icebp
pop
xchg
cs
add
fisttpll
mov
ja
nop
lea
and
scas
cmp
sub
cld
loopne
jge
mov
push
xchg
lcall
push
xchg
jle
jle
push
pusha
add
lock
or
cwtl
or
loop
roll
add
fstpt
dec
push
xor
mov
inc
add
mov
and
jns
xor
xchg
push
fidivrl
cld
aam
aas
pop
pop
lock
jl
hlt
sub
mov
les
push
add
cmpsl
xorl
jno
or
xchg
cmp
popf
xor
inc
add
imul
adcl
add
xor
xor
iret
iret
pusha
add
divl
pop
xchg
aad
into
mov
das
leave
ret
adc
dec
popf
push
add
mov
xchg
jge
push
mov
icebp
imul
jp
data16
cmovp
inc
add
shll
frstpm(287
sbb
or
mov
fwait
xor
dec
fs
mov
iret
roll
jge
imul
push
jecxz
pop
mov
ss
jge
add
jle
sbb
mov
in
fdivs
adc
xor
add
int3
mov
xor
cmp
xor
data16
in
mov
popf
scas
sahf
or
sbb
fbstp
or
and
fwait
push
jge
fnsave
std
out
scas
mov
inc
add
add
loopne
add
test
jb
dec
nop
dec
add
xchg
pusha
add
xchg
addb
fdivs
ret
mov
cmp
shrl
mov
ljmp
mov
xchg
movb
adc
or
dec
and
hlt
dec
pop
mov
cld
mov
push
mov
shrl
addb
push
pop
push
in
xlat
pop
push
or
out
adc
adc
and
dec
fnsave
ja
sub
ds
xchg
xchg
pushf
dec
iret
mov
cmp
lcall
mov
add
test
pop
popf
rcl
arpl
addb
mov
mov
mov
push
insl
sub
xor
cmc
movsl
jbe
aas
jge
ljmp
mov
push
dec
jbe
jle
adc
imul
push
cwtl
scas
cli
movsl
in
mov
dec
js
imul
movb
int3
pushf
imul
popf
data16
cmp
xchg
arpl
shll
fdivl
xor
test
push
pop
or
lret
add
lret
adc
mov
push
adc
pop
mov
rorl
or
enter
push
fisubs
fdivl
or
pop
mov
cmp
cltd
sahf
cltd
mov
mov
dec
push
mov
add
jnp
cmpsb
xlat
lea
popf
loopne
inc
add
cmp
ror
outsb
test
lcall
fimull
and
fisubl
loopne
pop
shlb
testb
roll
cltd
fisubl
out
dec
into
adc
in
iret
fs
adc
je
cmp
add
popa
and
nop
mov
nop
daa
xchg
or
add
xor
movsl
js
add
repz
out
enter
jl
mov
stos
add
add
mov
mov
gs
and
xchg
std
js
das
stos
xchg
inc
add
jle
push
push
hlt
test
test
das
xor
jns
les
lock
add
pop
sub
jbe
cli
inc
add
add
bound
add
fldenv
data16
push
and
pusha
add
inc
add
mov
inc
add
repz
mov
sbb
insb
push
jb
xchg
or
pop
hlt
sbb
mul
lret
xchg
xchg
pop
xchg
sub
xchg
xlat
pusha
add
js
cmp
or
adc
push
add
movb
sbb
inc
int
pop
lods
lds
sbb
add
gs
notl
aam
jno
lcall
pop
jmp
fcmove
mov
jmp
jge
es
or
cltd
fnstcw
ja
imul
push
cmp
outsl
pop
and
dec
dec
pop
repz
add
pushf
xchg
sahf
js
push
imul
bound
jno
aas
in
cmc
dec
jecxz
or
push
and
scas
xchg
fldlg2
roll
call
push
dec
in
fiadds
xor
aad
mov
in
test
cwtl
aam
loop,pt
iret
popf
xchg
push
fs
mov
lock
cmp
fistl
scas
pop
pop
fcoms
adc
mov
popf
arpl
das
adc
mov
mov
pop
and
sbb
or
push
subl
inc
add
adc
adc
jmp
mov
cmp
fsub
pusha
add
hlt
std
mov
dec
scas
pop
stc
push
loope
ret
rolb
add
or
sahf
test
int
xchg
fwait
repnz
jno
dec
or
add
dec
sbb
ret
mov
lea
jmp
adc
popa
lret
out
testl
stos
fstps
mov
mov
jbe
adc
call
or
pushl
stc
or
popf
xor
inc
add
cmpsb
lcall
repnz
add
push
mov
add
add
mov
mov
in
rcr
mov
pushf
mov
push
add
test
out
adc
add
adc
fcompl
das
inc
add
out
xor
fnstsw
add
out
loopne
fisttpll
add
movsl
insb
mov
sbb
cmp
mov
insl
out
cmp
adc
add
push
inc
add
ret
js
ret
add
cs
outsl
rolb
mov
pop
jmp
inc
movsl
push
lock
jne
xchg
pop
add
add
mov
ficomps
mov
pop
jp
and
aad
xchg
lret
nop
leave
pop
sar
sbb
pop
mov
test
mov
dec
movsl
icebp
push
xorl
aaa
aas
roll
push
mov
arpl
dec
cli
bound
jb
xor
add
jg
and
fld
add
pop
sbb
es
inc
mov
int
cs
push
fldl
mov
mov
addb
cmp
push
add
inc
int3
adc
add
jns
jb
jb
std
xchg
mov
test
jbe
int
in
test
rolb
ss
nop
push
lds
sbb
in
add
cmp
jle
cmpsb
repz
or
adc
inc
add
mov
stos
add
lods
mov
add
mov
mov
xchg
adc
pop
inc
mov
mov
aam
aaa
dec
lahf
gs
jb
sbb
gs
sbb
mov
jge
sbb
loop
pushl
ret
mov
outsl
fadd
add
stos
sub
pop
enter
add
aas
sub
add
fisubrl
and
fwait
dec
je
fwait
cwtl
mov
mov
pop
aam
hlt
enter
or
int3
pop
inc
aad
pop
dec
leave
in
popa
add
or
dec
cmp
out
nop
js
sbb
dec
xchg
fbld
mov
xchg
add
xchg
in
and
aam
outsl
dec
aaa
cmp
pop
push
popf
insb
and
das
dec
sbb
mov
jl
outsb
sub
iret
aad
hlt
pushf
dec
lcall
adc
push
add
dec
add
pop
aad
inc
add
xchg
pop
mov
and
push
jbe
pop
js
out
stc
mov
stc
dec
sbb
xchg
jp
out
mov
test
sti
adc
and
jae
jno
jbe
lods
xor
in
pop
fs
xchg
les
das
cmpsb
sbb
push
or
push
inc
rol
add
pop
repnz
inc
add
inc
add
add
mov
push
sbb
jmp
xor
and
cmpsl
cltd
cmp
sbb
mov
aas
sub
fwait
mov
inc
aad
push
in
mov
scas
xor
in
dec
pop
add
idivl
push
inc
sti
xlat
xor
add
mov
aas
ss
xchg
scas
push
mov
fisubrl
pop
xchg
mov
shll
test
mov
adc
cmp
sbb
push
add
rcll
rcll
and
push
add
inc
add
shl
cmpsb
push
scas
jle
inc
add
outsl
imul
loopne
jne
pusha
add
pop
push
sub
pop
int
mov
add
jae
loopne
jl
or
push
pop
inc
add
int
repz
shll
test
dec
lods
push
movsb
out
cli
pop
fildll
gs
push
add
lcall
add
pop
xchg
sub
ss
mov
loop
sub
pop
sbb
testb
pushw
mov
fsubp
aas
out
rolb
push
mov
push
in
mov
add
dec
dec
dec
stos
out
adc
insl
imul
add
lret
movsb
xchg
test
hlt
adc
addb
mov
out
rcrl
add
xchg
repz
add
adc
pop
loop
mov
or
je
dec
inc
add
and
sub
daa
movsb
xor
mov
stos
sbb
mov
add
mov
mov
cmpsl
negb
js
add
inc
add
daa
bound
insb
pop
adc
popa
push
add
push
add
mov
add
add
jo
xchg
sbb
cmp
inc
lret
lret
xchg
ds
rol
lods
fisubrs
jno
xchg
lret
xor
out
scas
inc
dec
mov
cmp
ss
adc
cmpl
insb
mov
add
add
pop
repz
pop
ret
mov
sbb
push
ret
sub
rcrb
sub
push
ret
fdivl
mov
jecxz
jmp
int3
mov
scas
push
lods
loope
das
xchg
out
add
cwtl
lock
push
in
cmp
jge
enter
sbb
enter
add
mov
cmp
lahf
add
fisttps
or
ljmp
xorl
out
push
movsl
loope
jo
cmp
and
pop
jmp
xor
jno
test
int
test
popa
movsb
xchg
outsb
push
dec
push
xor
adc
ret
inc
add
loopne
lret
dec
iret
add
mov
mov
dec
insb
movb
push
push
dec
mov
nop
loop
push
sbb
enter
cmc
push
in
push
fisubrs
add
xchg
push
jb
mov
xlat
orl
inc
bound
pop
add
sbb
push
mov
cmp
insb
sub
fadd
add
push
cmc
mov
int
xor
add
gs
adc
addb
ds
shll
movsl
add
out
dec
mov
cltd
dec
adc
nop
ret
jbe,pt
push
aaa
push
fwait
inc
add
stc
popf
add
int
lea
fs
pop
sbb
ja
add
mov
jmp
and
add
jns
pop
cmp
getsec
call
jg
scas
in
out
cmp
xchg
add
cmpsl
call
add
in
pop
rolb
std
and
add
add
jo
mov
faddl
mov
add
jle
pop
adc
shrl
je
and
arpl
add
outsb
adc
mov
ret
push
inc
add
pop
xor
push
cmp
push
loopne
je
add
je
cs
insb
out
xor
jae
jmp
sub
mov
loopne
lods
loop,pn
inc
add
inc
add
inc
add
inc
cmp
add
push
add
xor
adc
add
stc
pop
mov
mov
mov
push
xchg
outsb
jae
xor
xchg
or
das
bound
bound
jl
sub
int3
mov
or
pop
ljmp
pop
pop
and
jae
jle
mov
icebp
orl
cwtl
int
lret
clc
insb
mov
jecxz
es
in
jns
add
icebp
lock
ljmp
mov
in
sbb
insb
loopne
lds
push
enter
xchg
xor
les
or
movb
in
inc
or
rorl
mov
mov
pop
sub
or
in
jmp
outsl
pop
ret
mov
sub
cltd
xor
mov
es
inc
mov
and
add
push
xlat
gs
cmpsl
adc
arpl
in
rolb
lock
pop
insb
cmp
and
sahf
push
add
fwait
sbb
data16
sub
jnp
outsl
test
repnz
je
nop
scas
ret
jbe
aas
lahf
call
ret
enter
daa
sti
mov
sahf
add
nop
xor
addb
test
movsb
pop
in
mov
arpl
insb
cmp
call
xor
addb
mov
jae
addb
add
repz
add
iret
xchg
inc
add
add
jo
inc
fsubr
jl
push
push
sarl
mov
add
iret
insl
xor
mov
les
hlt
inc
sbb
shl
js
popf
inc
add
mov
addb
or
xor
push
dec
jp
pop
pushf
sub
jno
bound
add
ds
test
sub
out
test
push
shll
add
and
mov
cmpsb
rolb
ret
push
sub
mov
and
xchg
sbb
mov
jmp
icebp
mov
push
mov
lahf
sbb
sub
push
add
mov
addb
sub
paddsb
or
xchg
adc
inc
add
leave
lcall
push
add
sahf
fwait
adc
xchg
push
jb
add
pop
push
xor
push
fldcw
mov
int
arpl
imull
push
or
add
xlat
cmp
fldcw
jo
xor
arpl
inc
add
cmp
aas
int
mov
dec
add
pop
pop
lret
sub
add
insl
mov
lcall
popf
inc
add
mov
loop
xorl
sti
sbb
sub
or
lock
les
xchg
ds
xor
hlt
mov
int
inc
add
sub
out
mov
mov
and
ret
mov
xchg
lcall
cwtl
bound
and
ret
leave
lahf
sbb
and
out
sbb
arpl
stos
xchg
dec
fbstp
push
pop
cmp
mov
loop
push
pusha
add
ja
mov
popa
test
sub
rorl
push
inc
aas
mov
into
inc
test
pop
cwtl
add
inc
add
push
and
cmc
pop
addb
inc
add
pushl
push
add
or
movl
cli
jbe
ret
data16
dec
mov
cltd
stos
int3
out
add
add
xlat
jae
les
sbb
scas
inc
data16
inc
add
mov
pusha
add
faddl
ss
push
fstl
inc
add
push
aas
cwtl
popf
icebp
es
push
xor
fwait
outsb
xor
les
push
stos
lahf
inc
add
testl
ds
xchg
in
push
repz
xor
lcall
test
add
and
in
cmp
adc
addr16
roll
jne
or
in
dec
jne
repz
shr
inc
add
push
cld
inc
add
sbb
ljmp
dec
addb
and
cmp
imul
lds
ret
aas
imull
bnd
xchg
paddw
push
loop
lahf
lret
xchg
in
insl
int3
xor
mov
push
add
lahf
sahf
pop
pop
mov
es
div
dec
lods
adc
lret
adc
int
cmpl
out
cmp
ja
add
out
adc
aad
lea
sarl
stc
jmp
and
iret
shrb
inc
add
pop
pop
lcall
ret
jae
sarb
push
or
push
inc
stc
sub
add
push
push
xchg
add
addb
stos
dec
stc
hlt
clc
lds
outsb
clc
add
mov
cltd
std
mov
fists
jnp
cltd
test
or
mov
xchg
inc
arpl
xchg
pushf
pop
lds
test
mov
repz
xchg
fsub
jge
pop
pop
and
jb
andl
inc
add
ss
fstpt
mov
ljmp
xor
std
xchg
jne
test
push
jl
add
cltd
add
push
pop
add
add
inc
pop
aam
sub
inc
add
add
or
push
lock
int3
insb
mov
lods
push
mov
push
pop
mulb
int
sub
add
mov
arpl
sub
or
loope
pop
ud1
sti
fsts
sbb
lods
rol
xchg
mov
sbb
fstps
fwait
mov
fwait
mov
cmp
pop
xchg
add
pushw
jg
jg
dec
add
mov
mov
add
lods
negb
aam
movsl
ffree
xor
mov
add
pop
scas
js
inc
add
divl
mov
mov
xchg
ljmp
movsl
push
mov
push
mov
insb
pop
addr16
bnd
mov
sub
data16
call
xor
jl
pop
iret
push
aam
jmp
je
adc
add
push
mov
mov
add
push
stos
out
call
add
fwait
pop
xchg
jl
pushf
xchg
sahf
shrl
adc
inc
jo
dec
nop
mov
out
xor
rolb
adc
hlt
ret
xor
xchg
cmpsl
iret
mov
lcall
icebp
mov
pop
mov
or
mov
and
jp
insb
cld
stos
stc
fidivrl
cmc
push
mov
xlat
sub
arpl
mov
jb
fbld
dec
inc
add
pop
ret
cmp
jbe
imul
enter
lods
mov
sub
dec
fiaddl
add
inc
repz
lods
and
sbb
fldl
push
xor
push
and
in
xchg
cltd
out
add
and
dec
test
fistps
add
nop
push
addr16
mov
es
mov
dec
add
mov
push
adc
cmpsl
xchg
mov
jbe
addb
adc
fistpl
mov
daa
popa
leave
xlat
mov
mov
aam
xchg
movb
xchg
stos
mov
pop
jle
and
cli
push
inc
add
add
daa
mov
push
jo
leave
dec
stos
sahf
fidivrl
rolb
push
mov
pushf
enter
jb
cs
push
xchg
push
in
out
cltd
xor
enter
aad
mov
je
clc
lea
cmp
sub
xchg
repz
add
adc
les
jb
mov
mov
jp
movb
cmp
sbb
mov
mov
lcall
insb
dec
mov
ds
mov
mov
fwait
dec
cld
xchg
push
cltd
test
mov
sbb
dec
mov
mov
lret
jp
mov
pop
sti
insb
cwtl
loop
add
xor
inc
iret
pop
lds
add
push
cmpsl
or
stc
bound
addb
add
cmp
xor
outsb
addb
push
adc
rorl
xchg
pop
push
add
sarl
jp
test
mov
fcoml
insb
ret
movb
out
jnp
iret
mov
sarl
bound
push
mov
pusha
add
mov
in
xor
adc
and
add
pop
xor
ja
mov
fldenv
es
xor
sub
jbe
mov
xor
loope,pn
cwtl
mov
add
bound
outsl
jl
mov
outsl
cmp
dec
push
xchg
push
gs
cmpsl
jns
andl
or
jecxz
dec
sub
add
jnp
add
jle
add
mov
jnp
test
out
out
bound
mov
bound
add
incb
xchg
add
bound
stc
je
sbb
add
push
inc
idivl
aas
mov
popa
or
nop
into
xor
icebp
mov
fdivp
rcr
xor
in
insb
in
sbb
divl
std
daa
cvttps2pi
mov
pop
mov
mov
das
repz
add
and
jnp
push
stos
adc
or
push
fisttpl
sub
mov
ret
inc
mov
call
out
jo
pop
push
enter
mov
pushf
fwait
lock
fdiv
xchg
inc
add
mov
and
add
adc
add
xor
add
enter
jae
rcrl
mov
mov
rcrl
sti
dec
adc
add
add
jecxz
xchg
out
sbb
adc
lock
lods
jl
mov
hlt
xchg
addb
mov
adc
xor
or
adc
mov
xlat
ja
push
inc
add
pop
sarl
xor
mov
and
mov
and
clc
sub
jno
int3
lea
add
add
ja
scas
enter
dec
mov
jp
test
clc
jmp
daa
xchg
popf
pop
sub
fisubl
push
movl
movq
and
rolb
add
inc
sbb
adc
rolb
test
pop
mov
inc
add
jbe
rolb
daa
sbb
dec
dec
pop
stos
mov
fdivs
xchg
fmul
ret
idivl
cltd
dec
out
or
shll
mov
ljmp
push
in
and
xchg
pop
rolb
std
mov
ja
jae
test
loope
and
sarl
lea
xor
into
test
sub
inc
insl
cmc
ds
sbb
adc
add
pop
dec
inc
add
icebp
ret
sahf
pop
imulb
push
cmp
or
xchg
fnstenv
and
in
add
in
ja
or
xor
rolb
addr16
dec
pop
xor
add
mov
pop
jecxz
xchg
scas
test
cmpsl
call
js
fdivl
out
in
sbb
mov
inc
add
sbb
push
scas
adc
das
add
mov
add
lahf
fcompl
movb
push
add
sub
xor
mov
bound
fistpl
bound
lds
jle
add
push
leave
mov
notb
gs
movsl
les
mov
mov
call
shll
dec
insb
das
mov
push
cmp
jmp
inc
subl
dec
fsub
imul
hlt
push
mov
push
jbe
fwait
add
nop
scas
out
dec
aad
inc
cmp
add
das
pop
sbb
jmp
add
fnstcw
add
inc
add
movb
cli
lea
add
lock
das
or
inc
add
sbb
xchg
add
aam
xchg
movsl
push
ja
xlat
xchg
pop
bound
or
ss
sbb
xchg
lret
fildl
adc
xor
jmp
into
arpl
mov
adc
pop
mov
js
sbb
mov
and
push
add
add
add
rcrb
dec
inc
lret
ja
lea
push
ljmp
fisttpl
mov
mov
mov
and
xor
aaa
call
or
les
and
movsl
inc
add
adc
leave
xchg
scas
add
int
js
jg
fidivrl
push
fsubr
les
push
xor
push
enter
pushf
ret
jae
add
pop
mov
in
mov
popa
push
out
sbb
lock
add
or
popf
xchg
xchg
pushf
lds
and
jp
movb
add
push
les
ljmp
pop
dec
ljmp
and
dec
movsb
push
shll
jo
mov
push
icebp
cld
and
jo
add
pop
jmp
pop
insl
cmp
pop
xlat
adc
mov
mov
ja
rolb
xor
outsl
out
nop
movb
add
jecxz
mov
scas
push
sub
pop
gs
add
inc
add
hlt
mov
dec
jmp
mov
mov
arpl
dec
imul
negl
add
add
jnp
pop
jp
in
ja
dec
pop
addb
sahf
rcll
add
dec
movsl
pop
scas
test
in
jb
pop
fdivrp
inc
dec
mov
cmp
ljmp
and
lea
jge
mov
in
dec
inc
pop
arpl
dec
adc
test
dec
xchg
mov
lods
pop
push
movb
cli
mov
cmp
mov
outsl
push
mov
xor
xchg
mov
lahf
outsb
lret
xchg
bound
stos
mov
test
movb
push
shlb
inc
add
test
xor
test
mov
fs
das
and
jg
pop
clc
add
arpl
adc
loopne
add
stc
out
data16
in
cmp
xor
jle
ret
es
pop
aad
ret
add
pop
mov
insl
mov
push
cmovnp
mov
mov
dec
pop
ja
adc
cs
inc
in
dec
mov
nop
jmp
mov
add
aad
jae
movb
lret
daa
mov
loopne
lea
sub
add
les
xchg
dec
jne
je
mov
cmp
jo
cmp
inc
cwtl
pop
repnz
movsl
mov
testl
mov
sub
jl
cmp
add
test
aad
jmp
scas
adc
sarl
js
loope
iret
test
cltd
subl
in
mov
jns
add
pop
out
jle
xchg
clc
in
and
sub
lcall
lods
cmp
push
add
and
mov
cwtl
sub
cmp
add
xor
xchg
mov
jge
add
sahf
sahf
addr16
adc
mov
insb
dec
mov
out
mov
push
aaa
xlat
bound
dec
popf
lock
xorl
push
lock
fcomps
test
dec
mov
or
jbe
lret
mov
sti
pop
movsb
jecxz
mov
add
xchg
pop
add
pop
ljmp
out
es
pop
pop
and
testl
or
stos
push
add
mov
nop
mov
pop
pushf
push
aam
adc
in
aam
xchg
push
scas
enter
je
pop
xchg
fdivr
arpl
out
pop
cmp
xor
sub
xor
mov
push
es
aam
stos
stos
jmp
scas
hlt
das
mov
push
std
pop
dec
jae
add
lods
jmp
fistpl
or
movb
cmpsb
mov
add
pop
shlb
pop
dec
aas
rolb
xlat
pusha
add
out
mov
icebp
sub
mov
xor
xor
movsb
in
adc
add
xchg
rolb
push
jnp
sub
add
or
push
adc
filds
push
cltd
in
and
daa
fidivl
mov
dec
popf
dec
jno
loope
add
add
insl
mov
dec
push
test
xor
mov
nop
scas
aas
cli
pop
rolb
and
cltd
xchg
dec
jg
add
inc
mov
insl
adc
sub
xchg
ja
ljmp
jno
fs
ds
push
push
negb
rolb
stc
inc
add
sub
lahf
leave
inc
ja
or
pop
xchg
push
jns
and
xchg
sub
std
cmp
je
mov
shll
lods
aaa
sub
or
out
cmpsb
push
mov
fs
jmp
push
shl
rorl
and
jnp
mov
popa
sub
add
push
ss
and
aas
fistpl
lcall
add
or
sarl
in
mov
jg
pushf
adc
je
add
and
mov
add
int3
dec
jge
stc
or
push
mov
fists
mov
push
mov
test
dec
sub
enter
pop
pushl
inc
add
and
cli
or
pop
xchg
pushf
fstpl
jmp
mov
test
dec
sub
mov
int
leave
add
lods
inc
add
or
pop
outsb
lods
add
xchg
or
loop
add
inc
lret
out
ret
mov
les
push
outsl
jmp
adc
rolb
lods
repnz
call
push
xchg
jbe
into
mov
ljmp
add
pushf
push
add
xlat
push
pop
mov
mov
movb
dec
sbb
adc
add
push
add
out
push
cmp
add
dec
stc
les
test
sub
and
lcall
mov
cmp
add
sub
adc
shlb
xchg
mov
les
pop
adc
inc
add
inc
pop
in
call
or
push
cmp
or
aad
xchg
inc
into
outsl
jl
lock
mov
push
adc
add
sub
mov
add
mov
ljmp
pop
jecxz
pop
xor
add
fwait
into
sub
xchg
add
xor
pop
add
xor
xor
std
aad
mov
and
in
mov
sahf
or
cmp
sub
addb
addb
cmpsb
xor
inc
push
jmp
sub
xchg
notl
add
cmpsl
push
add
adc
push
ret
pop
mov
jae
xchg
out
xor
mov
fcmovne
pop
popa
fimuls
jbe
jno
xchg
sub
fbld
add
xor
popf
shll
jmp
js
mov
mov
or
nop
std
iret
testl
mov
inc
add
sbb
mov
xor
cmp
adc
stos
jns
movb
addb
xchg
sbb
add
add
testl
and
add
add
sbb
or
push
shlb
mov
xor
pop
in
cmp
mov
cmpsl
inc
cld
add
sub
or
enter
jbe
xchg
add
vunpckhps
cmp
jl
mov
scas
jns
dec
and
add
das
hlt
push
test
hlt
sbb
sbb
sub
mov
outsb
iret
xchg
cmpsb
popa
fimull
outsb
mov
mov
clc
adc
push
xor
rorb
push
jae
inc
add
xor
pop
not
pop
cmp
movsb
outsl
stos
fldenv
or
pop
inc
dec
std
and
dec
mov
jmp
sbb
movsb
jns
mov
test
movb
lahf
popf
gs
and
push
xor
and
and
movsl
fs
lahf
lea
flds
mov
or
jl
jno
cmp
vmread
out
cmp
scas
shlb
add
insl
fidivrs
fiaddl
add
lods
fs
ds
fwait
loopne
push
add
push
adc
cmc
xor
push
hlt
and
xchg
xchg
jo
inc
lcall
inc
cmpsl
ud2
cld
sub
out
push
xchg
jl
dec
adc
dec
sub
add
leave
nop
mov
add
jg
or
lahf
jg
inc
add
cmc
scas
repnz
add
inc
add
call
mov
xlat
cs
xchg
clc
imul
add
cmp
add
push
daa
bound
ret
lret
push
jno
movsl
jecxz
sub
and
loope
test
jo
sub
push
mov
xor
sub
fldcw
jno
fidivl
push
test
xor
sbb
adc
push
xor
ss
icebp
adc
adc
push
sub
cmp
xchg
aas
jg
sti
push
push
call
aaa
inc
add
daa
cmp
push
testb
sbb
cwtl
ja
fistl
fsubs
int3
test
rorl
or
pop
and
inc
add
scas
jns
jp
jg
add
mov
sbb
movsb
addb
lret
push
xchg
jns
filds
and
xor
add
xchg
and
test
popl
jmp
push
loope
sbb
cmc
out
scas
cmpsl
mov
cmp
add
pop
loope
sub
mov
in
out
xor
lods
test
movsl
mov
xlat
add
inc
jge
push
mov
xchg
jle
ljmp
outsl
mov
test
sub
xchg
ja
add
pop
inc
add
lock
cmpsb
into
in
repnz
xlat
sbb
fimuls
sub
add
inc
jp
mov
mov
loop
orl
lods
std
test
lds
ficompl
outsb
inc
add
jge
adc
out
push
fisubrs
test
ret
in
je
cmp
mov
jg
aas
and
es
jmp
adc
call
imul
sahf
mov
or
add
mov
int3
cmp
insb
mov
les
pusha
add
push
add
rolb
pop
xor
ss
shl
push
out
js
jg
insb
inc
mov
push
dec
push
dec
test
fisubl
push
bound
dec
sub
and
sbb
lea
data16
mov
stos
addb
cmp
movsl
in
inc
mov
pop
jecxz
lret
fdivr
psubq
hlt
mov
dec
in
xchg
inc
cmc
push
sub
mov
mov
xchg
test
xor
xor
mov
mov
movsb
push
ja
js
xor
pop
jb
jle
mov
test
cmp
ffreep
pop
pop
mov
imul
sub
push
sarl
aas
test
lods
jecxz
sahf
mov
adc
ds
pusha
add
out
push
fadds
in
sahf
clc
sahf
fisubrs
pop
cwtl
arpl
rcrl
hlt
lock
jecxz
scas
pop
jp
pop
fdivs
sub
imul
mov
sub
xor
insb
aam
sbb
cltd
or
push
sahf
push
add
sbb
cmp
push
push
movsl
pop
jnp
mov
xchg
es
les
stos
gs
imul
xor
pusha
add
inc
out
cld
xor
adc
ds
jge
jnp
fwait
inc
add
lahf
or
cwtl
sub
stos
jnp
pop
inc
add
cmpsl
insb
xchg
cld
push
jmp
dec
jae
shll
jae
mov
aaa
cwtl
push
fs
test
pop
jbe
es
mov
adc
jae
cmp
xchg
lcall
data16
repnz
sbb
jns
cmc
insl
imul
lods
xor
shlb
pop
jb
add
nop
inc
add
add
add
repz
stos
xor
cmp
inc
add
add
inc
add
adc
into
test
pusha
add
cmp
std
sub
out
mov
mov
add
or
rolb
loope
inc
add
mov
xor
or
movsl
pop
aas
mov
cwtl
or
xchg
mov
sbb
imul
jae
add
add
fsubrp
adc
popf
clc
jmp
mov
jbe
mov
xor
jns
pop
and
sbb
dec
cmc
addb
fmul
push
out
jmp
call
sub
adc
and
js
add
jo
test
out
sbb
add
or
lock
cmp
cmpsb
stc
movsl
lret
pop
adc
add
in
push
xchg
mov
xchg
push
stos
lret
cmpsb
stos
inc
ss
jne
imul
ljmp
scas
pop
inc
add
sbb
or
sbb
xor
xor
repz
jbe
or
inc
jae
leave
pop
xchg
hlt
lods
jb
jae
stos
jno
xor
movsb
in
je
cli
insb
pop
and
pop
addr16
add
mov
jge
xchg
ret
push
outsb
xor
adc
adc
ficompl
cli
insb
icebp
lret
sub
jge
inc
add
nop
and
dec
xor
inc
add
inc
add
push
jmp
fmulp
xor
sub
add
test
stc
push
xchg
ret
dec
loop
push
and
inc
addb
lret
imul
call
mov
mov
int
iret
push
mov
rcll
inc
mov
push
ljmp
insb
enter
inc
push
jg
mov
cs
push
rolb
and
push
and
daa
mov
sbb
fcompl
push
out
insb
jns
loop
outsb
jne
inc
add
dec
push
icebp
mov
add
call
cmpsl
pop
loope
cmpl
movb
or
rolb
and
imul
add
add
loope
add
add
inc
add
mov
xor
dec
mov
add
add
push
les
sbb
xchg
mov
add
and
push
pusha
add
fildl
add
add
inc
dec
sub
rol
add
cmpsb
repnz
adc
mov
ja
and
aam
sbb
jg
loopne
pop
pop
in
mov
or
jno
lea
add
lea
xchg
shlb
cmp
jbe
bound
lret
stos
cmpsb
sti
add
dec
aad
jmp
loopne
mov
mov
out
push
xchg
mov
mov
movb
push
int3
arpl
pop
aaa
and
scas
mov
addb
and
imul
addb
sub
bound
pop
xchg
add
out
pop
add
mov
add
div
in
dec
push
and
add
push
inc
and
add
add
mov
pop
cmp
add
inc
add
and
jne
inc
add
icebp
cwtl
push
and
sarb
sub
ss
lods
ljmp
fsubs
pop
or
mov
jae
das
and
mov
jge
jl
in
lods
lret
stos
add
pop
leave
insb
cmp
mov
inc
add
fcoms
jecxz
aad
cmp
sub
cmc
add
lods
push
nop
mov
mov
push
push
je
test
aas
rolb
inc
inc
mov
mov
xor
pop
jge
xchg
aas
sub
xor
ret
ss
cmp
inc
jno
cmp
add
pop
add
lds
insl
out
sbb
fdivs
inc
xor
out
adc
push
xor
xor
pop
clc
mov
jns
add
cmp
xor
add
movsb
add
jl
std
push
and
mov
outsl
push
push
aad
jb
mov
js
cmp
es
aaa
out
jae
out
jno
jne
inc
add
add
pop
push
lock
add
cmp
scas
or
jmp
leave
aaa
jl
je
mov
mov
out
or
ret
sar
test
and
push
cmp
cmpxchg
lea
push
xor
incb
add
ja
pop
ss
out
mov
mov
js
add
add
xchg
enter
sbb
cwtl
jl
xchg
sub
jae
jmp
add
add
pop
inc
add
add
cltd
adcl
jge
pop
xchg
das
sub
adc
pop
js
inc
cmp
fcomp
push
cmpsb
bound
sub
fs
inc
aam
sbb
scas
sarb
test
push
push
cmp
test
xchg
jle
add
add
sbb
fldcw
add
hlt
xor
mov
add
das
add
add
dec
xchg
les
fisubl
jge
add
sbb
jb
mov
mov
mov
movsl
lea
adc
xor
mov
mov
jle
test
mov
add
jecxz
sbb
inc
push
push
and
add
aaa
stos
push
movsb
xadd
xchg
imul
cmpsb
xchg
bound
push
movb
or
dec
and
mov
xor
xlat
mov
add
xor
add
fwait
adc
pop
mov
lcall
mov
cmp
in
xlat
mulb
add
push
xchg
sbb
push
xchg
int3
mov
dec
cld
repnz
lock
push
and
gs
and
mov
cmpsl
or
roll
jae
push
arpl
pop
call
decl
xchg
and
packsswb
loopne
popa
mov
inc
xadd
movsl
fwait
add
cmp
push
add
mov
mov
or
add
push
or
clc
jns
jl
int
outsl
xchg
jnp
xor
rolb
lods
jae
jmp
int
mov
xchg
les
jmp
xchg
xchg
sbb
add
add
push
add
sub
mov
repz
and
int3
cli
xchg
cmp
sbb
out
sbb
cmp
movsl
popa
insl
insl
fistps
daa
jg
add
and
sahf
ret
repnz
ret
cli
out
add
fwait
push
hlt
test
repz
jecxz
jge
arpl
jbe
sub
jg
mov
stc
les
jnp
push
inc
add
addb
insl
cmp
stos
xor
inc
out
lea
aad
stos
nop
ret
push
pop
pop
jb
jp
push
hlt
pushl
leave
jno
push
sub
add
xor
fcmovnu
test
add
pop
add
xchg
mov
and
cmp
mov
pop
xlat
insl
cmp
xor
inc
add
add
add
bound
ds
dec
xor
cmpsl
popa
inc
add
fmuls
rolb
jae
stos
fdivp
insl
mov
or
push
out
ljmp
in
movb
clc
outsl
loope
insb
jecxz
push
je
add
mov
pop
jp
roll
inc
add
jb
add
in
fldcw
add
jg
fisttps
je
lods
decl
inc
jmp
jle
pop
cwtl
arpl
jns
xchg
je
pop
les
or
out
mov
cmp
cmp
sub
push
fnsave
jo
pop
cmpsb
push
pop
mov
mov
lret
adc
mov
adc
mov
shl
mov
hlt
movl
xchg
loope
sub
aaa
push
add
add
sbb
stos
fsubs
add
sub
inc
fs
stc
or
in
cmp
jp
adc
jnp
pop
mov
add
add
adc
popf
adc
pop
lods
and
jmp
inc
add
mov
mov
mov
repnz
pop
cmc
rorl
mov
into
movsb
push
aam
and
das
fs
push
mov
sbb
add
scas
push
lods
repnz
sub
sbb
fcoml
repnz
fildll
mov
add
cmpsl
outsb
lea
js
xor
push
lahf
mov
pop
pop
push
mov
sub
loope
sub
xor
and
add
mov
shrl
sbb
push
cltd
sbb
test
push
pop
int3
addb
stos
xor
add
jecxz
lret
sub
sub
fmulp
or
push
sbb
mov
pop
mov
mov
mov
inc
add
mov
out
mov
xor
push
or
mov
or
mov
mov
push
daa
fwait
lret
lahf
dec
and
cmp
mov
jg
incl
pop
imul
in
dec
push
xchg
pushf
in
xor
je
fldl
cli
mov
sbb
addb
mov
add
insl
sub
scas
xchg
loop
aam
std
sbb
mov
push
mov
mull
xchg
imul
rcll
inc
decb
js
addr16
pop
mulb
pop
cmp
les
mov
xchg
push
jbe
xchg
test
scas
cmp
add
push
fwait
jo
jp
push
sbb
mov
add
or
test
add
in
or
jmp
movb
loopne
add
mov
add
inc
add
mov
pop
lods
mov
adc
push
dec
notb
ljmp
popf
addr16
push
jno
xchg
jno
faddp
dec
mov
add
push
inc
add
or
mov
mov
mov
add
cmpsl
out
test
out
cmp
mov
cmp
adc
fmull
jmp
cmc
jnp
mov
xlat
or
and
push
hlt
mov
pop
lcall
outsb
mov
jp
add
ss
test
lahf
lea
xlat
lcall
les
cltd
into
cmp
bound
dec
and
cwtl
xchg
jge
mov
add
daa
aas
lods
jb
daa
dec
fdivrl
add
cmp
mov
xchg
addr16
fstl
inc
add
mov
aad
add
scas
movsb
lds
adc
mov
js
adc
add
inc
shl
repz
sub
call
fnstsw
mov
and
or
add
xchg
push
dec
cmp
clc
dec
out
scas
imul
push
or
push
sub
gs
bound
sbb
fcmovnbe
jge
ljmp
and
add
jmp
or
add
adc
jmp
dec
loope
sub
loope
push
cwtl
test
in
movb
inc
mov
adc
in
rclb
jmp
sbb
out
dec
lods
cmp
add
test
mov
idivl
mov
push
pusha
add
inc
push
popa
mov
lcall
mov
jmp
push
arpl
cmp
insl
inc
add
mov
lea
or
sbb
in
xchg
dec
mov
outsb
jno
sub
in
icebp
sbb
aad
arpl
inc
mov
jnp
mov
pop
repz
into
mov
inc
add
movb
xor
jae
mov
inc
mov
add
ds
fcompl
cmp
in
add
dec
loopne
insl
xor
adc
sub
rol
popa
xor
dec
fldenv
int
push
jg
addb
add
les
js
jo
add
inc
test
or
cs
lret
adc
dec
es
fstpl
add
sub
jb
mov
jnp
repz
lcall
sbb
push
xchg
mov
add
push
inc
add
cmp
xchg
je
adc
mov
xor
inc
add
push
xchg
jnp
addr16
fsubs
mov
xchg
sbb
mov
mov
add
inc
sbb
test
cmpsb
cmp
lahf
mov
pop
inc
add
add
sahf
mov
add
imul
and
cwtl
xchg
int3
and
xchg
xchg
fsubp
inc
add
and
hlt
lea
les
cmp
popa
ljmp
mov
gs
sub
add
inc
inc
add
push
sarl
test
sbbl
pop
aas
int3
pushf
add
lds
add
xlat
push
pop
or
ds
add
addb
insl
push
loop
das
cltd
test
imul
sbb
dec
cmp
stc
pop
lods
xor
mov
add
sub
inc
add
clc
push
popf
xor
test
add
or
fldln2
daa
test
int3
dec
dec
repnz
jmp
inc
add
push
sub
xbegin
shrb
lds
lods
test
and
iret
movsl
testl
pusha
add
inc
add
fistps
jb
jl
sub
cmc
rolb
lock
fstpt
sub
push
imul
mov
or
cld
insl
jg
into
lcall
cmp
ds
jle
mov
ret
stos
jg
mov
hlt
jo
or
add
and
inc
add
jp
cmp
mov
pop
add
sbb
push
in
cmc
sti
mov
enter
movl
int3
adc
dec
into
icebp
add
jmp
in
push
add
ljmp
mov
mov
in
movb
stos
ljmp
repnz
pop
mov
pop
fiaddl
jp
repz
add
dec
sbb
lea
shl
bound
fst
std
lock
inc
fidivl
addb
jg
fisttpl
nop
je
hlt
dec
in
into
push
add
mov
add
ljmp
cld
xlat
ror
rolb
pop
lods
push
movsb
mov
addb
add
mov
mov
sbb
mov
xchg
in
xchg
stos
icebp
cmp
mov
jmp
add
fistps
dec
outsl
lea
jae
xchg
push
xor
sbb
aad
pushf
xchg
aaa
sub
shrl
jno
inc
add
or
or
repz
stos
insl
into
dec
inc
loop
jl
add
scas
scas
add
jle
fcomps
sbb
jbe
fsin
cltd
mov
xor
dec
cld
adc
sbb
pop
icebp
cmp
push
clc
or
popf
outsb
rolb
xchg
hlt
adc
or
lods
rorb
add
xchg
push
push
xchg
push
mov
mov
or
pop
into
gs
add
xor
pop
pop
pusha
add
and
mov
pop
xor
arpl
mov
popf
sbb
pusha
add
or
shrd
ja
sbb
call
push
shll
pop
xchg
shlb
sbb
jecxz
addb
bound
xor
push
inc
movb
add
cmpl
jno
aaa
cmp
jbe
add
sub
push
icebp
pop
sbb
sbb
pop
fmuls
sub
add
or
push
add
push
test
mov
movb
add
mov
pop
insb
push
jmp
repnz
jmp
mov
add
icebp
testb
mov
sub
bound
xlat
mov
mov
pop
leave
in
nop
lfs
mov
sub
repnz
xchg
scas
test
dec
pop
adc
adc
cld
test
test
test
dec
les
lods
mov
adc
inc
add
das
xor
fs
rclb
sub
rorl
add
loop
call
adc
lea
in
addb
pop
shrl
movsl
and
jbe
inc
add
ret
mov
cmp
daa
daa
pop
lods
cmp
out
push
add
movl
iret
jp
add
ljmp
push
test
pusha
add
xchg
divl
mov
inc
add
enter
icebp
insl
cmp
cmc
into
sbb
lea
rolb
bound
jecxz
cltd
popl
xor
and
add
add
dec
clc
popf
shll
enter
pop
repz
add
cld
sbb
ja
test
jle
cmp
inc
add
push
sti
iret
movsb
sbb
dec
xchg
pop
and
stos
test
outsl
loop
xor
vmread
or
sub
ss
addl
iret
ljmp
enter
push
cmp
dec
hlt
fmuls
jo
lahf
or
dec
xchg
popf
mov
daa
in
add
lods
leave
xchg
rolb
mov
jb
push
xchg
int3
movsl
pushf
test
add
lret
xchg
enter
dec
insb
push
insb
adc
jo
add
dec
clc
sub
ror
sbb
sti
jmp
dec
gs
sub
mov
cli
andl
dec
jecxz
xchg
jg
out
aaa
jecxz
stos
std
ljmp
add
push
jl
mov
int3
dec
aas
push
sub
jbe
add
inc
add
add
aam
mov
dec
and
adc
pop
xchg
lea
stos
adc
push
jbe
stc
mov
adc
lods
loop
push
rcll
pop
rolb
mov
scas
pop
pop
sbb
and
jg
sbb
push
jle
fbld
insl
and
test
lods
push
adc
jle
mov
outsb
insb
arpl
xorl
cmpsl
mov
test
dec
repz
sbb
push
lods
scas
mov
push
xor
dec
mov
ret
push
xchg
dec
sub
xlat
inc
out
cwtl
stc
inc
add
addb
inc
add
mov
sub
movb
and
icebp
jno
mov
pop
bound
fmul
testl
push
rcrb
or
stos
jge
add
loope
cmp
std
inc
cmp
xchg
and
lds
fistpl
sbbl
mov
push
mov
sbb
or
add
adc
out
push
mov
add
fstl
iret
icebp
popa
sub
add
xor
imul
mov
add
lods
dec
mov
xlat
fwait
and
sub
xchg
sub
push
inc
add
push
add
add
lret
jle
add
jnp
mov
push
mov
mov
cmp
pop
add
lcall
cmpsl
or
in
push
inc
add
fwait
loope
aas
add
lds
nop
dec
addr16
dec
test
jg
inc
test
xrelease
add
push
jo
outsb
xchg
cltd
mov
cld
cmp
add
jl
xor
ljmp
or
jp
arpl
mov
pop
in
adc
add
inc
push
sbb
hlt
aas
pop
or
add
ret
jne
loop
sbb
inc
add
mov
jo
mov
nop
dec
adc
fiadds
and
scas
push
arpl
or
ja
fdivs
lods
xchg
mov
pusha
add
jae
inc
add
lds
and
xchg
add
fs
dec
stc
movb
cmp
push
sbb
ljmp
fstps
add
jae
sbb
subl
cltd
fildll
sbb
inc
dec
mov
adc
inc
and
pop
adc
dec
out
mov
pop
push
and
fdivrs
push
outsb
repnz
or
push
jecxz
fiaddl
cmp
les
imulb
lds
fwait
jg
gs
add
mov
lcall
pop
ljmp
add
jg
mov
xchg
mov
stos
cmp
in
adc
fwait
jae
push
stos
jb
push
add
cmpsl
in
sbb
add
lods
out
jnp
push
pop
repz
mov
add
add
ljmp
sti
sub
stc
sbb
xor
push
dec
movb
sti
adc
ds
loopne
push
cmp
pusha
add
iret
scas
cmp
mov
fwait
loop
sbb
fisttpll
into
sbb
cmp
bound
sub
inc
add
lods
cltd
push
add
or
les
pop
aaa
mov
mov
mov
stos
push
in
inc
add
das
outsb
inc
push
in
sbb
bound
xlat
imul
jecxz
xchg
jo
add
and
movb
scas
fnstcw
xchg
or
jge
or
lods
inc
add
jmp
int3
jns
add
jle
enter
dec
push
mov
jne
addb
xchg
push
aaa
mov
push
loope
fstpt
std
sub
fistpl
mov
push
add
nop
orl
push
data16
pop
pop
out
mov
in
add
mov
test
add
cli
pop
lods
loopne
xchg
cmp
add
add
sti
inc
sbb
jnp
push
fsubl
fnsave
inc
push
dec
inc
add
stos
cld
xchg
sub
in
sub
mov
cli
push
hlt
lods
sub
loop
pusha
add
cmpsl
or
movsb
jl
movb
mov
sbb
inc
add
cwtl
mov
cwtl
add
cltd
fmull
lock
insb
dec
dec
pop
xchg
not
cmc
cmpsb
jnp
add
shlb
jle
ret
add
stos
insb
inc
add
inc
add
sbb
xor
mov
mov
clc
iret
or
adc
adc
or
dec
pop
lret
sub
popa
aad
cmp
test
xor
jmp
cmp
push
cmp
rolb
mov
xchg
push
push
or
add
mov
cmpsb
clc
jmp
stos
add
xchg
cltd
out
rorb
cmp
in
leave
pop
hlt
repz
in
and
xchg
push
bnd
jg
pop
xor
bound
push
es
dec
jnp
cli
mov
popa
insl
cmc
call
les
push
pop
jecxz
fimull
aaa
xchg
movsl
add
push
adc
cmp
mov
dec
lahf
out
push
sbb
in
dec
lret
cmpl
adc
mov
sub
sbb
mov
es
setae
pop
mov
sarl
cmc
mov
xor
sub
dec
mov
clc
sub
push
sub
int
scas
sub
cli
es
push
xchg
js
pop
push
scas
xchg
mov
xor
add
mov
ret
mov
pop
or
cltd
dec
and
push
aas
mov
cmpsb
aam
lock
stos
shrl
shll
jge
add
ret
mov
stc
mov
push
xchg
sbb
jno
popa
push
loop
add
and
xor
inc
add
xor
stos
xchg
sub
cmpl
out
daa
out
pop
and
sbb
testb
xchg
mov
fisubrs
adc
scas
jecxz
in
shl
mov
xchg
pop
icebp
pop
cmpsl
inc
dec
lock
and
inc
add
mov
add
xchg
sub
mov
dec
popa
call
jecxz
or
dec
jle
stos
mov
cltd
mov
inc
add
add
inc
inc
add
rolb
iret
push
cmp
out
js
add
sahf
lahf
in
pop
pop
or
aaa
ret
or
mov
in
xor
fs
jge
leave
pop
push
add
xchg
ds
sub
sahf
push
add
add
add
push
inc
xchg
xor
inc
add
nop
fisttpll
sbb
stos
and
jl
fnsave
loopne
mov
shlb
mov
push
ja
mov
dec
mov
add
test
add
aas
and
inc
stos
dec
mov
add
mov
movsb
in
push
test
pop
cmp
test
aaa
mov
pop
dec
push
mov
mov
out
imul
pop
mulb
or
jb
add
xor
addl
ljmp
or
mov
dec
addb
push
mov
cltd
mov
and
push
popa
fs
fnsave
gs
stc
cli
mov
mov
rolb
jae
mov
js
or
cwtl
lret
aas
inc
sub
out
mov
stos
jno
js
aas
into
mov
out
mov
mov
pop
pop
and
jecxz
and
mov
add
dec
xchg
inc
add
rorl
xchg
pop
xor
into
push
push
je
aam
inc
add
je
sbb
loop
addb
dec
aaa
mov
cltd
popf
inc
add
arpl
int
rcrl
in
call
mov
insl
adc
jo
inc
add
add
pop
int3
sbb
shrl
rcl
out
xchg
add
inc
add
push
xor
jbe
lahf
into
push
ja
jg
lret
jae
adc
call
push
dec
cmp
divb
insl
cmpsb
repnz
call
clc
test
xchg
imul
movsl
mov
mov
sub
cmp
jl
aam
or
call
insb
fiadds
jns
mov
cmp
add
push
ljmp
xchg
pop
shlb
cli
inc
or
cmc
cvtps2pd
icebp
mov
fcmovne
jge
das
sub
test
jne
lret
mov
pushf
leave
mov
gs
mov
sahf
fninit
mov
pop
fsubrp
cmp
pop
sub
add
test
and
aaa
sub
add
jl
sarl
mov
or
mov
repnz
clc
xchg
shrl
lock
push
jbe
shll
test
pop
pop
rolb
add
mov
push
out
aad
mov
popa
jno
add
mov
leave
pop
push
outsb
mov
add
hlt
hlt
outsb
aad
add
outsl
cmp
mov
fstps
add
mov
xor
mov
pop
pop
or
shlb
in
and
xor
stos
pop
pop
outsb
subl
mov
aad
int3
or
or
push
xchg
xor
out
push
cmp
insb
fldl
add
adc
cltd
lret
shl
loope
mov
sub
movb
jns
cwtl
shll
mov
adc
clc
xchg
and
out
jecxz
mov
push
ret
outsl
rorl
out
jecxz
repnz
add
or
sbb
repz
pop
mov
pop
mov
mov
ficoml
mov
daa
jno
mov
out
bound
and
xor
in
add
loopne
add
repnz
decb
cmp
cs
arpl
jae
jo
jle
stos
xor
daa
filds
add
add
or
mov
pop
jbe
lcall
jbe
and
or
int3
pop
pop
scas
popf
adc
and
add
iret
divb
insb
test
add
mov
cwtl
aad
rolb
add
add
and
imul
adc
mov
xchg
xchg
xchg
add
fimuls
add
dec
cmp
add
or
push
dec
xor
aas
mov
cmp
xchg
outsb
jecxz
mov
add
pushl
cmp
les
dec
adcl
xor
push
into
and
pop
test
adc
cmp
dec
adc
add
repz
add
dec
ja
jns
iret
gs
mov
pop
cmp
add
insb
mov
les
or
cmp
addb
mov
fs
xor
xchg
aad
sbb
xchg
push
mov
int3
or
xchg
xchg
stc
mov
dec
rcl
aam
mov
cmp
lds
mov
test
out
dec
add
int
cmp
mov
imul
dec
setae
add
sbb
push
cwtl
mov
filds
data16
mov
pop
jno
addb
int3
sub
add
adc
lahf
inc
jmp
pop
inc
dec
je
mov
cli
nop
loop
lea
and
add
test
inc
add
inc
inc
add
inc
add
mov
test
lds
sbb
mov
xchg
mov
adc
movb
into
inc
add
popa
jo
ss
lock
int3
mov
add
xchg
loope
jg
add
adc
pop
xor
enter
xchg
ret
pop
mov
sbb
lock
jns
or
sub
cmc
fnstenv
mov
pop
ret
inc
add
inc
cwtl
xchg
mov
or
lods
jbe
sub
int3
cmpsl
mov
shrb
jl
xchg
and
scas
jb
add
mov
imull
out
inc
les
mov
arpl
fistpll
add
leave
push
add
or
mov
jl
add
or
add
hlt
test
pop
cld
jae
test
cmp
into
fsts
shrl
and
push
add
add
lcall
sbb
sub
jg
add
pop
imul
in
sbb
fldcw
imul
shrb
loopne
and
sub
mov
and
push
add
add
movl
jge
addb
dec
mov
and
push
cli
push
ss
mov
adc
xchg
pop
jg
pop
mov
xor
push
inc
add
jbe
push
rolb
push
add
sub
xor
xlat
mov
pop
and
jnp
fdivl
cwtl
lcall
cli
clc
cmpsb
sub
sti
jle
mov
push
ja
push
jne
add
push
repz
sbb
pop
repnz
stc
std
adc
inc
addr16
dec
xor
test
mov
inc
addb
leave
xchg
insl
and
add
cs
or
in
mov
orl
imul
mov
lds
push
add
xchg
outsb
fistps
xchg
add
stc
push
lds
test
mov
push
lods
outsl
fcompl
cwtl
add
into
insl
lret
mov
rcr
mov
loopne
jl
push
push
push
inc
add
outsl
xchg
push
mov
sbb
add
cmp
inc
add
add
add
and
or
ds
mov
mov
adc
loop
test
cli
pop
in
imul
pop
loope
js
into
cmp
sbb
cmpsl
cmpsb
and
cwtl
out
cli
stc
dec
pop
lods
pusha
add
pop
adc
add
and
imul
pop
sub
mov
dec
xchg
sti
and
mov
shlb
push
aas
test
aad
pop
sub
xor
cmp
test
mov
xchg
cli
mov
mov
dec
sbb
dec
adc
dec
sbb
jo
mov
cmp
lret
push
repnz
add
call
inc
xor
arpl
sbb
xor
and
xchg
xchg
push
fistps
add
pop
xchg
pop
push
out
jecxz
add
add
push
cmp
cli
test
add
dec
sub
rol
dec
inc
out
pop
addb
cmp
mov
and
out
add
into
cmp
add
and
sbb
cli
push
add
inc
jnp
pushf
xchg
dec
div
shll
push
xor
lods
iret
pop
imul
xor
shrb
dec
and
jo
jmp
add
push
push
dec
cmp
fstpl
leave
loop
adc
sub
jne
seta
xor
out
jmpw
add
pop
bound
call
pop
dec
and
cmpsl
dec
or
mov
dec
jg
add
pop
pop
jmp
mov
mov
add
movb
in
add
stc
dec
stc
inc
add
movsl
stos
popf
mov
lea
imul
and
in
adc
xchg
mov
imul
scas
popa
mov
pusha
add
mov
sbbl
jl
and
add
and
cmp
cld
push
arpl
and
sar
push
push
rcll
scas
sti
stos
inc
rolb
mov
fidivrs
fnstsw
xor
pushf
lahf
lea
test
stos
xchg
test
scas
pusha
add
mov
bound
cmp
add
lea
test
sbb
push
add
mov
add
sbb
add
popl
fldt
push
inc
push
aad
lret
cs
cwtl
cmp
add
dec
insb
test
cld
addb
mov
adc
xchg
cmpsb
push
ss
pop
jno
add
bound
ret
lret
hlt
jmp
insb
icebp
mov
fistl
mov
inc
add
lahf
mov
inc
add
push
mov
insl
xchg
pop
xlat
or
add
push
fwait
lret
sti
mov
mov
mov
inc
aam
pop
add
sbb
cmc
test
mov
xchg
push
mov
mov
sbb
sbb
or
push
cld
adc
mov
fwait
sub
movsb
push
add
daa
lds
lret
addb
clc
arpl
jo
pop
ds
adc
nop
outsb
mov
call
out
push
add
scas
fiaddl
lods
mov
jl
insl
ret
je
mov
mov
mov
das
jo
xchg
icebp
insb
fistpll
jp
adc
mulb
pop
xlat
lods
mov
pop
mov
push
mov
add
and
cmp
push
aaa
jno
nop
arpl
dec
mov
call
dec
fildl
daa
in
mov
pop
jl
add
cld
sub
and
lea
and
sbb
std
xchg
pushf
pop
xor
xor
add
aam
sbb
stc
out
clc
or
jl
fcomip
mov
mov
cmp
xchg
jge
jge
cmp
enter
push
scas
xchg
inc
shll
rolb
and
inc
add
imul
push
push
or
mov
jg
xchg
jno
add
dec
clc
xchg
ds
int3
push
push
add
inc
inc
jl
cmp
push
outsb
jp
or
pop
decl
or
add
sbbw
ljmp
aaa
aas
sbb
pop
jne
leave
test
movsb
flds
sbb
cmp
lods
ficoms
add
mov
cwtl
mov
jae
push
test
inc
add
jecxz
test
cli
in
loope
cmpsb
nop
cmp
insb
push
dec
push
add
adc
imul
popa
test
and
add
outsb
and
pop
lods
into
adc
adcl
jno
or
test
mov
jnp
out
lods
mov
add
int3
jbe
jecxz
imul
insl
jae
cmp
jecxz
add
fwait
pop
fsubrl
add
xor
push
icebp
outsl
in
inc
inc
sbb
pop
hlt
push
add
inc
sbb
scas
es
popf
loopne
add
aam
mov
scas
dec
iret
int
cmp
add
add
jo
add
bound
pop
rolb
lods
dec
scas
into
add
fidivs
fs
stos
loopne
xchg
negl
test
in
adc
adc
cmp
pop
mov
aam
pop
cli
unpckhps
cmp
push
rolb
xor
call
movb
fcoms
aaa
xchg
dec
inc
add
lock
scas
dec
jp
add
mov
xor
xor
and
out
daa
dec
dec
sti
rorb
inc
insb
insl
mov
sub
push
mov
in
mov
lcall
ja
add
outsl
dec
jno
andl
pusha
add
mov
es
notb
fs
cli
adc
inc
xchg
xchg
stc
shr
add
pop
jbe
nop
mov
adc
test
xor
inc
add
add
or
sbb
xchg
push
mov
das
std
inc
jmp
popa
mov
xor
loopne
and
lcall
rclb
add
addb
pusha
add
fwait
ds
mov
popa
into
lods
mov
sub
dec
roll
mov
jl
add
data16
shl
clc
lahf
int
push
mov
es
inc
out
pop
cs
pushf
push
push
add
cmp
jbe
pop
xchg
imul
aad
stos
add
sbb
int3
sbb
mov
in
push
jne
icebp
mov
call
pop
loope
mov
adc
pushf
scas
aad
and
stos
adc
add
stos
add
cmp
mov
stc
and
lahf
pop
outsl
xchg
insb
popf
xchg
pop
dec
push
push
fstpt
nop
push
outsl
orl
sbb
dec
jg
mov
add
push
or
add
es
int3
pop
dec
cltd
cltd
test
inc
add
xor
add
push
jnp
cld
sti
mov
int
inc
add
idivl
dec
fwait
xchg
test
adc
inc
add
mov
mov
mov
lock
jecxz
mov
scas
inc
add
fstpl
std
pushf
dec
xor
add
add
out
in
sub
lods
sub
cli
push
in
jecxz
pusha
add
mov
js
into
mov
dec
ffreep
in
stos
outsl
pop
jecxz
xor
push
sub
scas
pop
rcll
popf
or
push
in
add
push
add
jnp
loopne
add
inc
add
or
scas
call
push
aam
lahf
push
scas
addb
mov
shl
fiadds
imul
inc
add
add
xor
aaa
add
addr16
add
pop
pop
lods
push
sbb
sbb
push
xchg
push
add
aas
test
movb
xchg
fs
add
sahf
inc
add
fnstcw
or
add
inc
xchg
cmpsb
cmpsl
clc
movsl
push
sub
sbb
add
pop
sub
fldcw
lds
inc
add
repnz
arpl
out
lfs
arpl
lods
rolb
rolb
nop
js
sub
hlt
lods
push
mov
jmp
divl
xlat
sbb
mov
or
add
jecxz
imul
inc
pop
fisubrs
addb
loop
call
pop
shll
xor
or
add
xchg
fadds
inc
add
push
or
pushf
iret
mov
sub
and
jo
imul
lods
mov
push
push
test
notb
xchg
sbb
into
add
addb
xchg
shlb
xor
xchg
mov
repnz
add
ja
add
dec
mov
jne
insl
xchg
movb
ficoml
sbb
mov
je
pop
or
scas
enter
xchg
adc
sbb
fmuls
lahf
mov
addb
shll
pop
incl
sub
add
and
jge
mov
stos
xor
cmpsb
popf
aas
repnz
insl
or
sbb
jl
add
xor
out
push
add
inc
add
repnz
and
add
push
jmp
jmp
imul
inc
add
jb
or
sbb
test
jb
roll
add
stc
jb
add
add
ds
mov
stc
jb
add
add
add
add
jb
insb
add
incb
repz
jb
add
dec
ds
add
mov
nop
jmp
test
repz
nop
jmp
add
add
add
xor
je
stc
jb
data16
push
push
stc
jb
add
add
rolb
add
inc
add
faddl
sar
jb
insb
lret
lret
add
pop
xor
out
mov
sbbb
add
hlt
loop
or
pop
fwait
lods
push
nop
jmp
push
mov
and
stc
jb
add
pop
add
scas
dec
xlat
add
add
add
inc
add
jmp
nop
jmp
add
add
int
xchg
int
insb
inc
insb
insb
stc
jb
cmp
and
lea
stc
jb
add
add
push
add
add
add
outsl
push
mov
mov
add
inc
jo,pt
test
nop
jmp
add
add
fildl
add
and
push
mov
xchg
ret
add
sub
jb
add
add
mov
xchg
ret
movb
add
arpl
mov
add
stc
jb
insb
add
inc
add
les
stc
jb
add
or
mov
stc
jb
insb
add
xchg
lahf
add
stc
jb
add
inc
add
fimull
fisttpl
add
or
add
push
push
mov
xchg
ret
or
add
add
stc
jb
add
add
loop
mov
dec
popa
stc
jb
add
mov
add
add
xorb
shll
inc
adc
jb
loop
add
or
jmp
fstpt
leave
add
add
cmpsb
insl
push
nop
jmp
add
add
dec
rcrb
push
mov
xchg
ret
add
dec
add
cld
push
mov
xchg
ret
add
dec
add
mov
stc
jb
add
add
mov
cmp
mov
xchg
ret
add
dec
sub
rclb
in
inc
add
add
add
pop
push
mov
xchg
ret
inc
ror
mov
imul
nop
jmp
pop
add
test
mov
stc
jb
dec
add
insb
repnz
mov
mov
xchg
ret
rcrl
sar
mov
add
add
jb
add
add
add
add
jb
add
add
dec
add
stc
jb
mov
add
movb
cmpsl
ds
mov
add
mov
push
popa
add
and
push
mov
xchg
ret
fwait
or
sbb
xor
add
stc
jb
mov
outsb
fiadds
xchg
ret
add
jmp
mov
push
mov
xchg
ret
add
add
nop
jmp
add
add
mov
push
mov
xchg
ret
add
cmp
jb
mov
add
add
shlb
or
add
dec
rcrb
add
clc
nop
jmp
add
rolb
mov
add
jl
sbb
jmp
mov
add
pop
push
mov
xchg
ret
add
testb
call
and
rolb
imul
stc
jb
mov
loop
add
test
add
stc
jb
loop
dec
jbe
add
jne
nop
jmp
or
add
xchg
lock
stc
jb
add
add
insb
lret
add
mov
stc
jb
push
add
mov
add
and
decl
add
jmp
add
imul
xchg
add
nop
jmp
mov
mov
mov
jmp
add
pop
add
pop
add
add
add
pop
mov
push
stc
jb
inc
lret
add
add
or
ficoms
jb
cmp
shrb
add
inc
push
insl
push
stc
jb
or
add
push
sub
push
mov
xchg
ret
add
add
inc
add
cmpsb
dec
jne
nop
jmp
add
mov
stc
jb
and
jb
add
add
mov
mov
nop
jmp
add
inc
jmp
addr16
add
jns
hlt
or
add
sub
hlt
std
inc
add
add
in
enter
push
mov
xchg
ret
add
add
sbb
add
xchg
insb
lds
stc
jb
xchg
pop
add
add
pop
loop
xor
and
jmp
add
fcomi
cmp
mov
subb
add
add
push
or
add
pop
stc
jb
xlat
add
push
cmp
jb,pt
nop
jmp
add
add
dec
sbb
xorb
add
dec
pushl
nop
jmp
add
add
not
fwait
out
add
stc
jb
add
add
add
test
and
jb
add
mov
pop
lds
add
cmp
nop
jmp
mov
roll
add
mov
nop
jmp
mov
rol
add
hlt
aas
mov
nop
jmp
add
push
add
and
push
mov
xchg
ret
add
not
icebp
out
leave
stc
jb
xchg
add
sldt
lret
call
jb
mov
add
add
stc
jb
mov
push
push
stc
jb
jns
leave
add
or
cvtps2pd
jb
add
add
int
stc
jb
fldt
or
add
add
mov
add
into
setnp
addb
add
push
mov
xchg
ret
add
pop
xor
test
nop
jmp
add
add
ja
mov
stc
jb
int
xlat
mov
mov
stos
and
stc
jb
mov
add
dec
add
jb
sarb
mov
push
mov
xchg
ret
push
imul
nop
jmp
add
add
outsl
xor
rorl
jb
add
pop
add
jb
add
movb
aas
add
pop
stc
jb
mov
add
mov
mov
push
mov
xchg
ret
add
call
stc
jb
add
or
cmp
jb
push
mov
jns
call
stc
jb
add
add
aam
loop
je
stc
jb
rcl
lds
jge
nop
jmp
add
insb
add
sti
test
nop
jmp
add
push
add
mov
stc
jb
cmp
insb
add
jo
push
push
mov
xchg
ret
shrb
add
pop
stc
jb
mov
push
mov
add
shll
push
mov
xchg
ret
leave
rorb
movzwl
nop
jmp
hlt
add
jne
stc
jb
push
add
test
add
add
jb
lret
mov
sub
stc
jb
pop
add
add
add
mov
stc
jb
xlat
add
insb
inc
add
dec
or
mov
xchg
ret
push
lret
cmp
xor
add
nop
jmp
add
jns
loope
mov
stc
jb
add
cmpl
nop
jmp
mov
stc
jb
add
add
push
das
push
stc
jb
add
jmp
add
add
jmp
push
mov
xchg
ret
add
push
mov
xchg
ret
inc
pop
add
rcrl
jb
add
lret
add
and
nop
jmp
add
rolb
mov
or
nop
jmp
fnclex
add
pop
lock
add
cmp
add
push
stc
jb
add
add
mov
cmpb
scas
outsl
add
popa
add
mov
xchg
ret
add
add
pop
call
stc
jb
fwait
add
out
push
push
mov
xchg
ret
add
mov
add
inc
fiaddl
xchg
ret
mov
and
add
add
stc
jb
add
add
and
inc
add
stc
jb
add
add
add
push
pop
add
nop
jmp
insb
add
add
add
shll
insb
xor
stc
jb
add
mov
add
stc
jb
lret
push
mov
mov
add
andb
add
add
insb
lret
add
out
jmp
stc
jb
leave
add
jb
and
dec
outsl
scas
add
mov
push
mov
xchg
ret
add
pop
mov
stc
jb
pop
push
add
pop
push
mov
xchg
ret
add
imul
sub
jb
add
add
add
nop
jmp
mov
add
add
stc
jb
mov
push
insb
add
jmp
push
push
mov
xchg
ret
rcrb
add
mov
fiadds
xchg
ret
add
add
sub
repnz
add
lds
add
jb
mov
pop
mov
add
adc
jb
add
add
aas
je
stc
jb
add
divb
add
nop
jmp
or
rolb
jmp
push
sti
stc
jb
or
mov
push
mov
xchg
ret
add
add
inc
stc
jb
mov
mov
add
add
push
mov
xchg
ret
shll
test
pop
add
stc
jb
xlat
fldt
jne
jp
mov
stc
jb
or
nop
jmp
fwait
add
add
hlt
mov
popa
add
jmp
add
add
add
push
mov
stc
jb
inc
imul
test
xorb
add
add
xchg
xchg
ss
and
xchg
inc
add
add
test
jp
or
stc
jb
or
rol
and
aam
xor
stc
jb
add
data16
roll
movsl
pop
jne
stc
jb
rolb
dec
add
stc
jb
add
fwait
add
inc
or
and
insb
add
inc
and
or
add
add
add
add
push
outsb
and
mov
xchg
ret
imul
and
stc
jb
add
aas
into
add
rcll
fmuls
fiaddl
xchg
ret
outsl
push
cmp
push
jmp
insb
add
add
movb
int3
add
stc
jb
mov
add
jb
add
rorb
mov
add
stc
jb
or
cmp
xlat
rorl
incb
xchg
ret
add
ds
add
movb
mov
xchg
ret
add
jmp
add
add
jb
add
add
sub
popa
add
jmp
jns
testb
add
mov
cmpl
nop
jmp
add
add
add
mov
add
mov
stc
jb
add
mov
stc
jb
add
xchg
addb
add
pop
stc
stc
jb
add
add
dec
push
stc
jb
add
add
or
stc
jb
mov
leave
mov
mov
movzwl
stc
jb
push
add
add
rep
stc
jb
pop
add
add
inc
mull
shl
xchg
stc
jb
or
add
add
add
in
dec
inc
stc
jb
add
add
pop
jnp
movsb
stc
jb
jmp
add
add
repnz
stc
jb
pop
data16
mov
mov
xchg
ret
idivb
inc
jns
lods
cmp
push
mov
xchg
ret
add
insb
cmp
rep
stc
jb
add
dec
add
mov
xchg
ret
or
inc
rol
les
sbb
mov
add
push
pop
sbb
add
mov
xchg
ret
add
add
add
add
ljmp
inc
add
add
cmpb
add
and
add
add
pushl
push
mov
xchg
ret
add
sbb
inc
stc
jb
add
mov
mov
add
jb
test
add
call
add
shlb
or
nop
stc
jb
hlt
add
test
repnz
stc
jb
add
sub
xor
inc
add
mov
stc
jb
and
mov
testb
mov
stc
jb
or
insb
add
ljmp
add
add
add
int
push
mov
xchg
ret
loop
ds
psubusw
jmp
or
add
leave
add
imul
mov
mov
xchg
add
add
testb
add
lret
jns
pop
mov
stc
jb
fstpt
add
movsb
push
mov
xchg
ret
sub
jns
adc
push
push
mov
xchg
ret
xlat
add
fcmovne
call
in
fiadds
add
add
jne
push
cmp
pop
stc
jb
add
push
mov
mov
dec
inc
add
add
add
stos
add
mov
es
nop
jmp
add
mov
stc
jb
add
add
add
jne
nop
jmp
jns
add
jmp
stc
jb
add
scas
add
add
add
add
push
sbb
aaa
idiv
call
add
add
fstpt
add
outsb
mov
stc
jb
mov
cs
push
mov
xchg
ret
mov
mov
stc
jb
add
into
or
xor
push
push
mov
xchg
ret
cmp
add
stc
jb
add
add
push
movb
lahf
mov
stc
jb
add
ror
ret
stc
jb
add
add
lcall
adc
add
add
add
add
mov
nop
jmp
pand
ret
nop
jmp
add
add
mov
into
add
jb
insb
add
mov
add
dec
add
stc
jb
rolb
imul
jb
add
into
add
sub
stc
jb
add
int
sub
jmp
lret
test
aam
add
stc
jb
add
jns
imul
add
jb
mov
add
jb
fildl
add
add
cs
push
mov
xchg
ret
add
mov
mov
jmp
hlt
into
dec
mov
lret
sub
stc
jb
mov
add
addb
es
add
stc
jb
add
mov
popa
push
cmp
jmp
and
push
add
push
mov
xchg
ret
mov
xor
jne
stc
jb
pop
fwait
jns
int
stc
jb
add
jns
cmp
add
bound
add
xchg
or
cltd
cmpsl
enter
je
call
add
dec
fildl
add
dec
add
addr16
stc
jb
mov
mov
mov
xchg
ret
add
push
push
stc
jb
jmp
push
mov
jmp
add
add
fildl
aas
mov
add
cmp
add
add
loop
mov
mov
stc
jb
add
and
int3
stos
push
mov
xchg
ret
push
add
mov
xor
jb
add
push
add
data16
ror
push
mov
xchg
ret
add
add
sub
ljmp
add
add
jmp
sbb
jb
add
add
push
hlt
lret
xchg
inc
add
pop
and
stc
jb
cmp
or
jge
stc
jb
add
fisttpl
ror
xor
or
test
jb
add
add
rep
stc
jb
fildl
mov
add
into
push
sub
and
incl
push
mov
and
testl
nop
jmp
hlt
sub
add
push
mov
xchg
ret
hlt
add
add
mov
stc
jb
add
roll
ret
loopne
aas
mov
stc
jb
fistpl
add
push
mov
xchg
ret
xchg
or
add
push
mov
xchg
ret
add
push
out
mov
add
add
jb
add
mov
stc
jb
imul
call
stc
jb
pop
add
ror
mov
nop
jmp
add
add
mov
xchg
ret
push
inc
mov
add
push
mov
xchg
ret
mov
hlt
out
push
push
mov
xchg
ret
add
loop
mov
mov
adc
jb
add
add
add
cli
push
stc
jb
ltr
add
add
xchg
or
add
pop
fldt
add
pop
push
mov
xchg
ret
data16
and
stc
jb
mov
or
add
stc
jb
into
verw
add
inc
add
and
stc
jb
aas
add
negb
fldl
xchg
ret
mov
mov
and
stc
jb
bswap
lds
xchg
xchg
sub
jb
mov
mov
mov
dec
mov
stc
jb
add
mov
rorb
mov
add
add
jb
rolb
sbb
push
mov
xchg
ret
dec
hlt
or
add
cmpl
or
jb
add
push
data16
jle
nop
jmp
or
mov
push
mov
xchg
ret
sub
pop
data16
and
jnp
or
stc
jb
add
add
add
enter
clc
call
decl
pop
add
fldl
xchg
ret
cmp
leave
push
add
add
adc
stc
jb
add
stc
pop
push
mov
xchg
ret
add
roll
lret
fwait
add
add
jb
cmovo
mov
add
lcall
mov
sbb
je
sub
jb
mov
add
lea
push
mov
xchg
ret
mov
jmp
stc
jb
add
mov
add
or
jb
add
lret
add
inc
add
jmp
mov
xchg
add
jno
add
and
rorb
add
jp
icebp
nop
jmp
fildl
cmp
fiaddl
mov
xchg
ret
lret
add
mov
mov
jb
add
ud2
add
dec
test
push
mov
xchg
ret
add
addb
inc
add
push
stc
jb
imul
lock
incl
add
mov
mov
stc
jb
lret
push
pop
push
push
mov
xchg
ret
add
add
jae
subl
nop
jmp
cmp
xlat
xor
and
inc
inc
add
icebp
ljmp
add
lret
add
je
inc
add
add
push
movzwl
stc
jb
add
add
mov
xchg
ret
add
add
jbe
stc
jb
ds
sahf
push
push
mov
xchg
ret
add
mov
stc
jb
add
mov
subb
pushl
add
add
nop
jmp
testb
lret
outsl
rol
jg
stc
jb
outsl
lret
test
push
stc
jb
mov
inc
add
pop
xchg
nop
jmp
add
mov
add
add
add
jb
add
cmpsb
mov
push
mov
xchg
ret
data16
add
stc
jb
jmp
push
add
nop
jmp
add
mov
xor
xlat
rorl
mov
je
stc
jb
scas
fildl
dec
mov
nop
jmp
dec
dec
add
add
mov
stc
jb
ds
mov
add
push
mov
xchg
ret
int
ds
out
incl
ds
add
dec
sarb
inc
add
and
push
lahf
push
stc
jb
add
hlt
mov
inc
or
mov
xchg
ret
int
or
stc
jb
add
add
jns
inc
add
and
stc
jb
mov
add
mov
xor
stc
stc
jb
add
jno
pop
stc
jb
jns
add
add
and
hlt
sub
jb
add
add
fildl
add
in
mov
nop
jmp
into
insb
add
test
nop
jmp
add
add
add
add
xorb
add
mov
add
aas
mov
mov
stc
jb
mov
and
cmc
push
lahf
mov
stc
jb
add
jne
stc
jb
and
xor
stc
jb
xlat
add
or
icebp
pushl
add
enter
jb
or
add
add
fiaddl
xchg
ret
mov
dec
sub
mov
xchg
ret
outsl
and
push
push
mov
xchg
ret
and
add
mov
jb
dec
fisttpl
add
inc
and
stc
jb
idivb
lret
mov
out
incl
inc
imul
in
stc
jb
add
xlat
add
stc
jb
add
add
fidivs
stc
jb
mov
jne
stc
jb
and
mov
sahf
add
stc
jb
lret
add
rol
mov
incl
dec
sub
lret
lds
ss
mov
nop
jmp
add
add
cmp
xchg
lock
sub
js
incl
add
add
mov
nop
jmp
mov
data16
shll
incb
xchg
ret
or
add
int
ret
rep
stc
jb
add
add
dec
hlt
add
add
and
stc
jb
lss
add
pop
mov
stc
jb
fcmovnbe
add
into
lret
les
stc
jb
push
roll
add
cli
mov
push
mov
xchg
ret
jns
mov
lods
stc
jb
rcr
dec
fistpl
add
adcl
sbbb
call
jmp
add
or
cmpsl
mov
popf
stc
jb
add
add
les
add
add
jb
ds
rcll
sub
cmp
incl
movb
imul
stc
jb
mov
cmp
mov
add
je
leave
xchg
push
mov
xchg
ret
or
mov
stc
jb
sarb
pop
and
cmc
xor
jne
data16
rclb
faddl
xchg
ret
add
add
pop
mov
push
mov
xchg
ret
push
dec
or
sub
call
add
push
pop
or
stc
jb
push
add
inc
dec
movb
movsl
push
push
mov
xchg
ret
dec
inc
add
repz
pusha
stc
jb
sub
mov
add
jmp
bound
xchg
into
jmp
stc
jb
inc
fwait
add
fildl
dec
cmp
jb
test
aas
test
loope
add
add
add
rolb
add
dec
ds
mov
mov
cltd
mov
stc
jb
mov
add
cmc
mov
mov
add
jb
mov
loope
add
pop
mov
stc
jb
mov
add
add
add
stc
jb
mov
mov
xchg
mov
push
mov
xchg
ret
lds
add
jmp
fildl
add
add
and
addb
mov
stc
jb
add
push
rcrl
jns
stc
jb
inc
inc
int
test
add
push
mov
xchg
ret
and
nop
jmp
add
dec
add
cmp
jmp
add
add
add
dec
push
stc
jb
hlt
leave
or
add
stc
jb
add
add
pop
stc
jb
add
dec
loop
arpl
cltd
movzwl
stc
jb
add
add
pop
jmp
jb
into
add
mov
jne
stc
jb
mov
add
add
fstpt
stc
jb
mov
push
push
mov
xchg
ret
add
add
loop
mov
jb
add
shrl
in
decl
cmp
aas
stc
add
nop
jmp
add
add
xchg
mov
jne
stc
jb
aas
add
in
push
push
mov
xchg
ret
mov
popa
xchg
daa
jb
add
nop
jmp
pop
jns
cmp
cmp
lret
mov
stc
jb
and
jns
push
mov
incl
add
add
add
add
push
mov
xor
nop
jmp
data16
add
mov
pop
add
nop
jmp
into
add
aas
add
add
movsl
mov
orb
lret
mov
adc
or
sbb
and
inc
add
add
mov
stc
jb
ror
push
add
mov
stc
jb
mov
add
push
mov
xchg
ret
mov
mov
lcall
jb
add
add
add
mov
stc
jb
add
add
add
add
jb
add
lds
stc
jb
push
add
push
je
mov
stc
jb
add
add
xchg
dec
test
nop
jmp
add
dec
xor
stc
jb
add
mov
add
and
stc
jb
aas
pop
aas
or
je
stc
jb
add
roll
nop
jmp
add
orps
add
aad
xchg
sbb
subb
push
mov
mov
add
loop
mov
xchg
ret
jns
add
rcll
incb
xchg
ret
add
add
dec
mov
stc
jb
loop
add
pusha
stc
jb
push
imul
fistl
in
pop
add
xor
pop
cwtl
add
into
mov
stc
jb
or
cmc
mov
jb
add
add
fildl
cmp
stc
jb
mov
cmp
inc
add
push
nop
jmp
add
add
or
nop
jmp
jmp
add
mov
nop
jmp
add
and
add
nop
jmp
add
add
add
sub
cmp
jb
mov
scas
mov
push
push
mov
xchg
ret
add
add
dec
dec
nop
jmp
add
lret
int
loop
add
pop
mov
stc
jb
or
add
add
stc
jb
lds
inc
xor
idiv
call
add
loop
clc
inc
push
mov
xchg
ret
add
jne
stc
jb
add
cmp
not
push
mov
xchg
ret
add
add
xchg
sar
imul
nop
jmp
add
or
or
add
addb
call
jmp
mov
xchg
insl
add
nop
jmp
add
add
add
mov
sbb
jmp
loope
add
mov
stc
xor
stc
jb
add
add
add
xor
stc
jb
and
fistl
jmp
add
mov
xlat
add
add
cmp
jb
roll
hlt
mov
dec
cmp
repz
jb
add
data16
dec
add
nop
jmp
and
add
add
dec
inc
stc
jb
push
sub
mov
into
aad
add
imul
mov
fadds
xchg
ret
add
add
mov
nop
jmp
mov
add
mov
inc
add
pop
add
stc
jb
fwait
push
add
add
sahf
push
stc
jb
add
mov
push
mov
xchg
ret
cmp
test
jmp
add
add
add
stc
jb
add
mov
add
shl
stc
jb
movb
jmp
add
push
push
mov
xchg
ret
fildl
cmp
add
ret
imul
nop
jmp
add
loop
sar
or
add
add
xlat
dec
roll
push
icebp
mov
mov
incl
add
add
or
nop
jmp
add
add
mov
mov
xchg
ret
add
add
add
and
push
mov
xchg
ret
add
sarb
xor
ljmp
add
add
push
mov
jmp
add
add
add
aas
push
stc
jb
aas
add
add
test
or
inc
add
rolb
jmp
stc
jb
add
add
pop
nop
jmp
inc
add
and
add
xor
stc
jb
mov
mov
mov
xchg
ret
lret
mov
fisttpl
adcb
add
add
add
add
mov
stc
jb
shll
add
mov
stc
jb
mov
dec
ror
add
cmp
jmp
ljmp
add
add
add
mov
stc
jb
xchg
hlt
add
jae
push
mov
xchg
ret
mov
mov
mov
add
or
mov
sub
jmp
idiv
incl
add
add
leave
nop
jmp
add
lret
fildl
or
mov
push
mov
xchg
ret
add
add
jmp
jb
leave
add
add
mov
leave
push
push
mov
xchg
ret
add
and
jb
add
add
add
mov
jo
jl
stc
jb
add
add
jb
add
shll
cmp
adcb
cmp
dec
cmp
popa
add
jmp
leave
add
add
into
or
aaa
xlat
dec
call
stc
jb
mov
mov
push
push
mov
xchg
ret
add
add
mov
stc
jb
mov
mov
mov
stc
jb
mov
mov
mov
in
inc
add
mov
dec
adc
jb
shlb
or
nop
jmp
add
lret
add
add
add
push
or
add
jb
add
stc
jb
add
add
mov
stc
jb
add
or
xor
add
nop
jmp
add
arpl
ret
jo
add
pop
stc
jb
fwait
insb
add
add
add
pushf
mov
stc
jb
add
test
and
inc
and
jb
add
add
ror
pxor
sar
jb
or
rolb
outsl
dec
xchg
pop
jne
stc
jb
xchg
add
in
sbb
pop
jp
add
pop
jne
sub
popf
mov
stc
jb
testb
and
add
xor
movzwl
nop
jmp
add
lds
rorl
cmpb
pushl
int
loopne,pn
stc
jb
add
sub
sub
mov
xchg
ret
insb
jmp
add
out
mov
stc
jb
mov
add
mov
iret
call
stc
jb
jns
add
stos
pushl
stc
jb
add
xchg
into
fildl
xchg
push
add
add
nop
jmp
and
add
sbb
sahf
stc
jb
push
ds
fwait
push
push
mov
xchg
ret
or
lock
mov
xchg
ret
add
add
push
cmc
inc
add
add
fistl
shr
inc
add
hlt
add
out
mov
lea
stc
jb
aas
add
into
add
inc
xor
stc
jb
mov
cmp
add
addr16
decl
stc
jb
add
iret
cmp
push
mov
xchg
ret
push
inc
sbb
out
nop
jmp
roll
add
jne
stc
jb
push
add
mov
push
stc
jb
add
add
sbb
nop
jmp
push
rcl
cmp
mov
push
mov
xchg
ret
add
insb
pop
xor
mov
stc
jb
add
and
push
stc
jb
add
leave
add
imul
mov
cmpsb
lahf
cmpl
push
mov
xchg
ret
mov
jb
add
stc
jb
lret
add
add
mov
mov
andb
jmp
and
inc
stc
jb
mov
mov
add
test
add
push
mov
xchg
ret
outsl
add
ret
out
push
stc
jb
add
mov
or
rcr
incl
add
pop
insb
push
test
add
js
nop
jmp
add
dec
aas
add
call
decl
fisttpl
sub
call
add
mov
stc
jb
add
cmp
out
call
call
push
xor
stos
nop
jmp
roll
add
inc
insb
xor
stc
jb
add
add
test
fdivr
stc
jb
push
add
adc
orb
cmp
add
add
mov
xchg
ret
insb
ds
mov
popa
push
mov
xchg
ret
mov
adc
add
nop
jmp
push
mov
or
stc
jb
cmp
mov
xchg
or
mov
xchg
ret
add
js
push
mov
xchg
ret
add
rolb
aaa
xchg
push
push
mov
xchg
ret
add
test
mov
stc
jb
add
push
pop
test
add
add
jno
add
syscall
mov
add
incl
mov
icebp
movsb
mov
push
add
adc
nop
dec
andl
dec
or
popf
loope
call
call
jbe
xchg
pop
pop
lods
add
sub
jl
sbb
cmp
lock
xchg
add
sbb
xchg
xlat
adc
xor
mov
mov
repz
xor
push
ja
mov
les
inc
add
jns
icebp
out
cld
mov
cwtl
add
mov
fisttpl
cmc
cmp
jne
mov
mov
movsb
mov
out
aad
add
and
movd
xchg
xor
dec
and
xchg
mov
inc
add
imul
mov
or
mov
dec
push
in
mov
icebp
inc
inc
add
or
cmpsb
insb
mov
mov
fldenv
sub
xor
cwtl
xadd
adc
adc
cld
popa
pop
sahf
pushf
add
loop
jae
ucomiss
push
mov
divl
add
clc
cmp
jmp
adc
rolb
xor
or
lret
stc
xchg
pop
push
push
sbb
dec
imul
cmovge
or
stc
mov
aam
jp
pop
xchg
aaa
in
std
sbb
inc
outsl
dec
cmpsl
dec
inc
add
and
cmpsb
or
sbb
pusha
add
and
ficoml
jmp
jnp
or
fwait
mov
bound
add
fucomip
rolb
outsb
pop
stos
adc
out
xchg
repz
mov
xlat
inc
add
test
inc
add
jecxz
addr16
mov
pop
xor
sub
fnstenv
add
xor
outsl
inc
jae
xchg
pop
adc
add
add
mov
bound
mov
lret
popf
jl
std
pop
dec
inc
mov
pop
sbb
in
inc
pop
xor
stc
and
fsubrl
jmp
btr
andl
sahf
lds
sbb
test
pop
cwtl
mov
push
push
aaa
or
sbb
shll
aaa
cmc
pop
repz
aas
mov
call
out
push
in
push
shl
aas
dec
call
in
test
xchg
pop
xchg
inc
add
push
sbb
out
sub
fcompl
jnp
call
les
inc
add
mov
fisttps
hlt
ljmp
repz
sti
jo
mov
movsl
mov
add
add
sbb
roll
int3
mov
add
or
dec
fmuls
sarl
rolb
mov
pop
lret
jmp
add
movsb
dec
dec
iret
xor
add
push
jns
add
cs
fs
into
push
jmp
xor
repz
mov
or
outsb
pop
ja
inc
add
push
mov
xchg
jbe
inc
add
pop
loope,pn
mov
je
mov
mov
pushf
int3
push
mov
add
add
imul
das
pop
push
movsb
inc
add
push
test
int
add
decb
into
stos
pop
mov
insb
in
and
in
sub
mov
xlat
cmp
shrb
mov
rolb
mov
mov
jno
push
mov
ds
mov
push
movsl
push
bound
cmp
mov
enter
xchg
or
lods
or
adc
testl
out
push
dec
dec
movl
loop
and
cli
sub
inc
add
jecxz
or
aaa
test
sbb
ret
jge
pop
fcom
xchg
cmp
jge
stos
cltd
push
daa
shrb
jbe
negl
in
fisubs
add
cmpl
insl
imul
lcall
pop
jb
jmp
add
inc
call
out
insb
sub
sbb
jo
add
cmp
sbb
jo
clc
ret
movsl
stos
xchg
testb
sar
outsb
mov
push
mov
pop
test
insl
mov
add
jae
addr16
cmp
pop
inc
cmp
dec
add
mov
repnz
stc
add
mov
icebp
mov
or
aas
sub
mov
aaa
jns
push
mov
adc
data16
add
in
mov
cmp
aam
jmp
movd
jo
add
fidivrl
dec
sbbl
add
loope
scas
mov
popf
shll
inc
add
pop
mov
out
int3
xchg
pop
pop
xchg
aad
jecxz
mov
add
and
sbb
add
cmp
aas
xchg
cmpsl
and
into
ljmp
sti
jb
push
in
jae
inc
add
xor
fnstenv
sbb
or
setae
dec
push
repnz
addr16
ljmp
mov
pop
out
jne
lret
int3
adc
pop
pop
pop
sub
add
aaa
jge
ret
adc
adc
dec
das
lea
xchg
popf
stos
xchg
xor
imul
daa
sub
jg
ja
mov
xchg
in
subl
ja
cmp
add
jo
push
dec
or
fwait
inc
add
jg
sti
in
cli
jge
popf
shll
xchg
les
jge
lret
adc
push
fs
cmp
fs
cmp
inc
add
pushl
out
and
ret
bound
jno
or
test
sub
test
sub
xchg
and
sub
addb
jg
sbb
mov
rcrl
cli
out
or
out
fcomip
mov
add
add
push
mov
jo
loop
jg
adc
flds
aam
sub
pop
pop
inc
add
outsb
out
rcrl
inc
add
mov
out
stos
lods
lock
cwtl
in
int3
add
cwtl
mov
rcrb
push
out
add
movsb
incl
xchg
in
loopne
mov
add
add
mov
add
test
xor
decl
es
and
add
rdmsr
loope
cltd
in
lds
mov
push
out
pop
sub
in
pop
aad
sub
int
or
add
push
call
push
cwtl
icebp
std
pusha
add
stc
mov
in
adc
in
test
inc
cltd
lods
pop
jp
cmp
add
and
ret
adc
test
inc
add
add
jnp
in
out
test
add
sbb
clc
mov
push
in
xchg
stos
cmp
mov
jb
call
dec
fbstp
xor
sbb
js
jne
stc
fnstcw
mov
sti
test
loop
mov
sub
xor
hlt
bound
pop
rorl
dec
xchg
xchg
push
psubb
push
nop
mov
jge
jb
or
ret
insb
cli
mov
adc
mov
xor
and
jmp
dec
cmpsl
roll
scas
fistps
xor
mov
mov
push
sti
or
fdivrs
xchg
xchg
in
add
stos
pop
popa
cmpl
les
add
pushf
pop
mov
push
in
das
je
mov
add
dec
adc
mov
pop
in
mov
cltd
xchg
aas
xor
addb
shlb
cmpsl
pop
jb
movsb
mov
clc
xchg
fsubrs
mov
je
mov
xchg
shl
inc
popa
jo
scas
and
cmpsb
dec
or
loop
cmpl
pop
stos
mov
sahf
push
xchg
in
jnp
rcrb
inc
jno
mov
test
rcll
jecxz
jae
add
dec
dec
test
shlb
dec
dec
sub
push
jle
cmp
addb
icebp
addr16
in
mov
xchg
das
mov
cmp
push
sbb
add
popa
dec
jb
dec
addr16
scas
out
sub
leave
movsl
mov
lea
xor
sbb
addb
jmp
adc
mov
add
int3
in
fwait
test
or
cmp
add
insb
mov
cld
lahf
xlat
xchg
push
cwtl
jg
mov
cmp
mov
mov
push
fcomp
rolb
add
mov
add
sub
jmp
mov
add
dec
or
push
rolb
imul
pop
jle
jp
push
in
pop
mov
add
mov
js
add
and
push
cmp
addb
add
mov
push
call
push
iret
xchg
add
xlat
lret
mov
addb
mov
and
ljmp
add
pop
fadds
add
jp
xrelease
pop
adc
add
pusha
add
cmp
jbe
inc
adc
dec
jg
fistl
mov
add
add
into
jbe
cwtl
inc
add
mov
cltd
push
or
cmpsb
cmp
ficompl
lret
movsl
dec
mov
lods
out
mov
je
cld
in
and
push
add
loopne
repnz
fsubl
and
push
and
dec
repnz
and
scas
pop
or
rcrl
or
ret
icebp
mov
pop
jae
in
add
inc
in
inc
add
push
push
pop
xchg
test
mov
xchg
jecxz
pop
fmuls
cmpsb
daa
aaa
add
cmp
xor
dec
leave
enter
shll
jecxz
out
dec
xchg
mov
addb
addb
mov
push
lahf
mov
jg
add
fisubrl
addb
add
movb
inc
inc
add
fstps
fadds
or
add
adc
lret
sub
dec
push
pop
out
adc
mov
imul
dec
inc
add
xchg
xor
test
mov
adc
nop
stos
mov
jmp
push
repnz
sub
fsubs
movsb
cmp
push
cltd
addb
jb
fimull
or
add
dec
outsb
cmp
xorl
xor
repnz
flds
add
add
add
arpl
push
into
pop
stos
pushl
gs
jo
mov
ljmp
pop
cmpsb
fld
add
add
les
lahf
xor
and
dec
xchg
lret
sti
mov
add
inc
add
fwait
pop
dec
mov
out
outsl
lds
add
movsl
mov
jae
jmp
adc
aam
dec
daa
sub
insl
pop
mov
shlb
lods
aad
jno
std
cs
ja
fcoml
icebp
cmc
add
mov
mov
add
ja
aas
je
and
xchg
ss
outsb
clc
out
jns
adc
push
pop
leave
xor
jle
popf
xor
jo
sbb
xchg
addb
cmpsb
fsts
add
push
jns
cmpl
add
dec
idivl
xor
stos
mov
adc
dec
mov
adc
fwait
xchg
inc
add
pop
test
lds
cmp
mov
int3
mov
xor
cmpsl
popa
jl
jle
inc
cmp
xor
aam
addl
ret
outsl
xchg
pop
ret
xchg
adc
cmp
dec
fsts
rol
add
push
sbb
push
in
nop
and
inc
add
adc
xor
js
enter
int
cmpsl
pop
jmp
mov
fstp
and
shr
ror
mov
xchg
adc
push
xchg
std
xchg
idivb
or
inc
pop
push
mov
mov
pop
sub
mov
jg
dec
dec
cmc
test
or
adc
mov
movsl
daa
dec
iret
test
gs
pop
xchg
jge
and
add
add
sbb
mov
lods
xlat
xor
test
lcall
or
sbb
push
int3
sahf
out
nop
xchg
inc
movsl
ljmp
ret
repz
xor
sub
mov
dec
add
push
shll
loopne
pusha
add
push
fiadds
pop
sahf
sbb
iret
or
sbb
rcr
sbb
mov
repnz
pop
add
or
push
or
aas
ret
mov
sub
mov
xor
cmp
loop
cmc
cwtl
add
enter
lods
out
adc
and
inc
add
out
cmovp
add
add
mov
roll
fildll
into
xchg
or
imul
xor
sbb
arpl
loope
les
shrb
add
push
add
push
pop
jecxz
jae
inc
inc
add
jbe
xchg
cmpl
mov
add
xor
ds
jmp
mov
xchg
cwtl
addr16
lea
fisttps
cmc
jnp
add
out
ja
inc
dec
and
sbb
movsl
push
xchg
arpl
addb
sub
add
enter
insl
aaa
loop
jmp
xchg
cmp
call
push
mov
aaa
pop
loopne
cltd
jmp
sub
push
add
push
stos
fimuls
cmpsl
or
xor
add
xchg
cmp
leave
pop
mov
mov
xchg
push
add
add
lock
fwait
rolb
sbbl
add
jecxz
popf
cmp
cmp
fiadds
xchg
adc
aad
add
movsl
mov
inc
add
inc
out
push
mov
fstpt
inc
sbb
pop
cmp
mov
pop
lret
cs
push
inc
addb
inc
add
mov
inc
test
out
add
outsl
mov
enter
ja
je
jne
add
out
pop
stc
ficoml
and
mov
mov
sbb
push
mov
js
push
mov
dec
cmpsl
mov
add
sbb
adc
and
jbe
icebp
and
sbb
cmpsl
pop
cmp
mov
aam
mov
or
enter
pushf
push
inc
movsl
mov
sub
adc
add
sub
test
xchg
aas
and
lods
xorl
push
and
test
push
imul
xchg
pop
popf
pop
es
dec
fwait
or
sbb
outsb
push
xchg
scas
mov
pushf
xlat
test
or
je
scas
das
pop
xchg
sbb
or
add
add
jp
ficompl
jnp
aaa
jge
lods
xor
ja
ljmp
fcoms
rolb
add
add
or
cmp
adc
dec
in
xorl
test
js
insl
pop
mov
sbb
or
mov
add
lock
or
nop
and
jge
pop
ljmp
xchg
sbbl
jg
mov
lods
les
clc
fbstp
scas
into
aam
sub
inc
add
cmp
pop
fistl
add
jb
pop
jb
jecxz
insl
mov
jmp
testl
movsl
jae
sbbl
outsb
or
mov
add
jmp
cmp
add
sti
addr16
add
mov
pop
loop
ljmp
test
jecxz
addl
sbb
pop
jge
fcmovb
mov
fldcw
add
sbb
movsb
add
fs
aam
outsl
xlat
add
roll
sub
and
pop
inc
xlat
cli
mov
mov
aam
into
int3
daa
add
jo
xchg
les
dec
dec
and
data16
add
fcomi
cmc
inc
add
mov
fstps
and
pusha
add
add
mov
inc
es
ljmp
sahf
and
cmp
cmpsl
stos
les
cmpsl
ds
or
out
stos
adc
in
dec
xchg
jmp
push
je
and
mov
sub
xor
adc
mov
cmp
roll
xor
ja
loope
insb
inc
add
lods
xor
pop
es
mov
xor
dec
cs
xchg
mov
add
int
das
addb
sbbl
sbb
add
testl
or
sub
lret
loope
adc
xor
out
fisubl
movb
aas
xchg
push
push
hlt
ss
gs
xor
rolb
dec
push
fiadds
add
mov
xor
cmc
xchg
xchg
and
scas
unpcklps
or
or
and
push
sub
fs
xchg
outsb
xchg
sbb
cmc
loope
pop
or
add
sbb
sbb
fisubrl
add
testl
add
lds
add
mov
repz
inc
add
ljmp
addb
addb
mov
jae
insb
mov
lock
sbb
and
add
dec
or
addb
jg
mov
add
js
add
insl
ss
add
data16
mov
imul
jno
out
movsl
push
sbb
add
addb
das
test
daa
sub
sar
lock
jl
add
mov
call
xchg
loope
pop
aad
mull
xlat
aad
fcoms
sub
sahf
outsl
adc
in
aad
mov
xchg
movsl
sub
add
cwtl
mov
inc
add
outsb
fstpl
sbb
movb
icebp
push
push
stc
fistps
xor
jne
stos
push
add
dec
cmpsl
pop
daa
and
shrb
out
shll
fsubr
dec
lds
inc
add
dec
push
add
aaa
add
in
inc
add
addb
sbb
sbb
dec
jo
adc
add
add
add
add
fidivl
adc
jecxz
sub
lahf
mov
sbb
xchg
jecxz
mov
mov
or
push
jecxz
push
jecxz
cwtl
mov
arpl
push
roll
cmp
adc
cli
dec
outsl
js
xor
xchg
inc
add
inc
lea
addb
xchg
insl
cmp
dec
arpl
adc
pop
cmpsl
out
or
push
pop
dec
shlb
xchg
fstpt
dec
ljmp
in
and
and
andl
and
sub
cmpsb
sbb
pop
test
xor
inc
xor
add
sbb
movb
mov
sti
mov
cwtl
lret
int
adc
icebp
xor
enter
cmp
xchg
les
into
cltd
mov
add
movsl
xor
cmpsl
cmpsl
mov
xchg
out
or
aad
addb
loopne
shl
dec
aaa
dec
les
pop
out
xchg
insl
in
adc
mov
or
das
adcl
adc
inc
mov
loop
add
jmp
xchg
xor
aad
fcom
imul
add
adc
sahf
pushf
mov
adcl
out
mov
cld
outsb
aaa
sahf
pop
push
add
and
addb
fst
outsb
in
mov
pop
lods
lcall
fstpl
daa
ss
add
pop
sti
mov
inc
add
add
addb
out
repnz
mov
adc
out
out
push
addb
loop
lcall
inc
add
jne
jge
stos
cli
adc
cwtl
mov
int3
push
add
sbb
stos
in
cmc
sub
add
add
xor
add
icebp
ds
mov
mov
ja
sub
pop
stos
dec
pushf
iret
xchg
popf
jb
int
and
in
jbe
addl
xchg
repz
jb
aas
outsb
andl
xadd
sub
lods
shll
mov
testb
and
sahf
insl
push
mov
cmpsb
lcall
repnz
sub
push
lods
or
pushf
adc
rolb
sub
imull
sti
fisubrs
push
or
pusha
add
sbb
mov
add
stos
mov
mov
push
sbb
cmpsl
mov
cli
and
adc
mov
cmp
mov
cmc
jns
popf
addb
sub
imul
push
enter
in
xor
mov
xor
xor
xor
and
sbb
jns
inc
add
mov
data16
push
in
cmp
add
adc
bound
inc
stos
mov
addb
cltd
or
mov
je
fildl
add
mov
inc
add
rolb
dec
negl
roll
mov
iret
es
or
sbb
add
push
sbb
gs
pushf
rorb
in
mov
sbb
adc
add
dec
dec
imul
out
jecxz
jbe
cmp
add
imul
notl
xor
mov
xchg
out
out
pop
ljmp
sub
pop
fsubrl
xchg
js
jmp
ds
out
shll
rcll
sarb
add
cmpsb
fs
add
insl
push
add
jmp
cmp
loope
cwtl
add
adc
sub
cmp
or
xor
pop
and
mov
call
pop
aas
mov
out
divb
sar
loope
dec
push
add
and
push
es
xchg
xor
icebp
cmpsb
push
add
lahf
or
or
xchg
jns
mov
add
add
add
jae
sbb
mov
mov
bound
cmp
cmp
xor
int
inc
insl
mov
lea
add
push
sbb
jo
pop
sahf
js
not
or
pushf
fcmovu
adc
jecxz
loope
das
push
fstl
pushf
jmp
cli
pop
xor
sub
pushf
aad
mov
lret
push
mov
cwtl
cs
out
das
sarl
sub
mov
add
add
cmpsl
ds
dec
cld
cmp
int
pop
push
push
imul
out
test
lea
mov
lahf
daa
ficoms
or
and
mov
popf
dec
mov
lahf
imul
push
lods
inc
add
or
mov
add
adc
inc
add
dec
ss
arpl
add
mov
xchg
cmpsl
add
mov
jecxz
add
mov
flds
or
or
push
add
int3
and
sbb
or
mov
into
mov
cmp
jo
xchg
or
sti
in
leave
xlat
jno
divl
daa
xchg
sbb
lret
add
adc
or
add
arpl
mov
ds
fwait
and
ret
arpl
fcmovu
daa
cld
outsb
push
fisubrs
aad
das
lahf
sahf
dec
movsb
imull
movsl
jle
xor
dec
mov
cld
xchg
stos
dec
or
sbb
or
xchg
pushf
add
pop
rolb
push
jo
pop
cltd
movsb
add
jnp
xchg
ljmp
loopne
or
inc
clc
movb
sub
push
dec
cmp
xchg
inc
add
push
cmpsb
fimuls
into
adcl
mov
add
movb
ja
shrb
dec
pop
mov
pop
popf
lret
rolb
daa
xor
daa
sbb
sub
jb
jecxz
in
mov
jno
cmp
dec
out
sbb
lock
jno
xor
in
adc
jbe
jo
lock
fnstenv
mov
mov
mov
ljmp
jmp
pop
mov
add
cltd
dec
xor
js
mov
inc
add
fsubrl
add
jg
jno
stc
shll
push
imul
pop
dec
loopne
rolb
add
xchg
lret
movb
pop
push
pop
dec
xor
sub
sub
sahf
pop
iret
loopne
lcall
aad
mov
mov
out
mov
out
inc
xchg
and
xchg
mov
xor
and
int3
fstpl
mov
jo
test
cwtl
push
adc
int
cmp
mov
add
sub
mov
out
lcall
lahf
and
nop
add
push
in
inc
fimuls
into
ret
sbb
adc
jl,pt
mov
inc
add
add
mov
fisubrs
sbb
das
pusha
add
notb
data16
xor
call
sbb
push
in
aaa
pushf
lods
addb
inc
add
mov
into
push
xchg
pusha
add
add
movsl
mov
push
push
aam
adc
adc
test
dec
sub
call
xor
sbb
ljmp
sahf
addb
fnstsw
movsl
inc
dec
jle
jl
sub
mov
lea
movsl
call
or
xchg
lods
mov
lahf
adc
cmp
adcl
push
sub
xor
push
and
inc
mov
int
movsb
dec
add
icebp
sub
gs
hlt
aaa
addr16
cmp
mov
mov
jecxz
sbb
pushf
push
and
fs
mov
fcom
les
repz
fnstcw
pushf
fsubl
cmp
push
and
mov
lods
inc
add
jns
jae
add
add
mov
daa
in
imul
mov
fstps
lret
out
inc
mov
repnz
pop
adc
xor
push
jb
imull
loop
mov
add
lret
push
ficompl
addb
arpl
adcl
mov
rolb
inc
cmpsl
aas
int
das
sbb
mov
push
adc
sbb
addr16
lock
push
fs
add
dec
sub
shll
out
xchg
inc
add
imul
testb
add
mov
js
xor
cmp
inc
add
mov
xor
xchg
mov
add
add
int
jp
jg
aas
adc
jns
or
gs
hlt
inc
add
in
xchg
daa
int
in
dec
push
or
xor
testl
clc
and
add
ljmp
adc
fwait
sahf
roll
nop
fs
insl
arpl
xchg
push
mov
int3
push
dec
or
xchg
mov
test
into
cmp
add
sub
jge
sub
add
js
sub
jbe
xchg
jo
add
add
dec
fstps
dec
bound
int
xchg
enter
inc
add
cs
xchg
stos
dec
pop
cli
mov
cltd
xor
xchg
ret
push
addb
loopne
jnp
mov
cmp
das
out
sbb
cmpsb
pop
mov
dec
jae
add
shrb
clc
aad
or
jle
cmp
outsb
sub
int3
lcall
in
cwtl
test
aas
xlat
xor
sbb
stos
mov
out
mov
add
ja
xchg
mov
rolb
dec
jmp
stos
insl
jnp
test
sbb
popa
pop
sbb
sub
pop
mov
stos
jb
xor
roll
sbb
stos
mov
xchg
insl
repnz
add
ss
mov
sti
mov
sub
mov
add
shrb
imul
lods
insb
and
dec
and
jmp
jne
scas
mov
add
add
icebp
je
addr16
fisttps
icebp
sbb
sub
ss
cld
lret
ficompl
dec
xchg
out
imul
aam
add
xchg
sti
add
int
out
and
xchg
pop
mov
dec
adc
mov
loop
mov
lods
add
mov
add
mov
or
or
mov
daa
imul
add
in
mov
xor
std
call
or
xchg
sti
lods
sbb
push
cmc
addb
jns
call
enter
ret
imul
or
imull
out
daa
pop
movsl
inc
add
or
add
push
sbb
ret
sbb
insl
or
add
mov
test
mov
or
ja
pushf
xlat
mov
xlat
cmp
add
mov
cs
add
push
sti
dec
inc
jp
mov
mov
adc
lcall
dec
and
xor
xor
bound
fstps
fisubs
push
push
jmp
stc
out
pop
pusha
add
test
sbb
xor
push
cli
popf
sub
mov
loopne
add
shl
outsl
movsl
loope
outsl
cmpl
fcmovne
or
js
outsl
lds
cmp
add
das
pop
cmp
out
scas
push
xchg
daa
rclb
loope
dec
pop
add
add
xlat
sbb
cmp
inc
xor
jno
mov
cwtl
and
or
dec
insl
mov
xor
in
mov
jae
add
mov
test
push
add
addb
std
add
rolb
push
lods
lock
pop
inc
jle
xor
inc
inc
add
sub
sub
pop
mov
test
int3
and
fxch
fstpt
jg
lret
add
movb
add
addb
arpl
imul
pop
pop
into
dec
push
mov
dec
shrb
dec
shrl
adc
xchg
mov
imul
add
pop
sub
repz
adc
aas
sub
inc
add
mov
push
add
outsl
hlt
scas
push
xor
add
jmp
or
add
test
inc
add
sbb
and
rcrl
fs
test
subl
fisubrs
xchg
inc
and
adc
add
push
xor
icebp
enter
je
push
rcr
xchg
adc
addb
dec
cs
mov
push
incb
dec
repz
aas
lods
dec
inc
inc
pusha
add
push
out
into
inc
sti
add
out
sbb
dec
aas
lret
and
dec
pop
jne
mov
add
add
add
push
dec
inc
mov
lcall
push
mov
pop
pushf
invd
addb
pop
dec
dec
mov
mov
bound
mov
push
inc
add
cwtl
mov
add
addb
adc
mov
lahf
sub
add
sub
ficoml
xor
js
push
push
inc
testl
push
push
sbb
xchg
inc
jl
dec
inc
neg
mov
jge
adc
inc
mov
scas
dec
push
and
fstpl
popf
ds
pusha
add
push
mov
stos
fs
dec
fyl2xp1
in
data16
adc
jge
mov
add
shlb
ljmp
jmp
sub
repz
stc
push
adc
in
sbb
in
jns
subl
in
xchg
fnstsw
sbb
dec
jg
inc
xchg
sbb
cmpsb
adc
add
or
push
mov
aas
push
cmp
add
mov
dec
dec
add
shll
out
popf
jg
popa
lods
repz
nop
add
lods
mov
loopne
xchg
sbb
xchg
movsb
insb
out
xor
scas
test
pop
and
push
xor
jg
inc
dec
in
ret
loopne
scas
ljmp
ret
sbb
mov
lcall
add
jns
mov
pop
pop
iret
jl
test
test
jo
and
cmpsb
hlt
clc
push
ss
movsb
fcomip
mov
add
and
int3
jmp
cmp
jge
mov
cmpsl
mov
inc
inc
add
sahf
mov
repz
aad
add
or
dec
dec
pop
dec
xor
dec
xchg
mov
push
add
rcl
fists
sahf
iret
or
dec
sbb
fistps
jle
out
mov
xor
inc
dec
outsl
adc
sub
in
fwait
push
xor
inc
pop
sbb
add
adc
adc
xchg
mov
xor
adc
add
push
movb
dec
push
jae
stos
inc
add
mov
fcomps
cmpsb
je
jp
or
ror
sub
push
add
add
inc
movb
out
xor
xor
inc
add
inc
fwait
subl
ljmp
cwtl
leave
xor
adc
jg
es
jo
mov
cmp
add
fnstsw
sub
fidivs
add
mov
cmp
add
ret
dec
cs
dec
jne
add
lahf
loope
jno
add
gs
xchg
jnp
bound
pop
xchg
xchg
movb
test
aad
cs
inc
jno
cmpsl
mov
jge
mov
loop
outsl
dec
loope
rol
add
testb
adc
das
stos
sarl
and
rol
inc
jecxz
mov
add
sarl
fwait
pop
rolb
xchg
xor
add
inc
add
pop
adc
movb
or
cmp
fldenv
mov
enterw
sahf
into
aad
mov
xchg
pop
mov
add
lds
xchg
add
popf
fadds
adc
bound
cmp
add
pushl
add
lock
sbb
and
xor
cs
mov
test
sbbl
ss
pushf
aam
cs
add
and
dec
cmpsl
mov
and
rclb
pop
push
addb
pop
sbb
inc
add
repnz
scas
pop
pusha
add
pop
add
fsub
nopl
adc
add
mov
push
cmp
inc
add
loop
test
cmp
xchg
fcoms
mov
data16
sbb
insl
out
jge
loop
test
popa
gs
mov
mov
add
pop
ja
fbld
add
scas
cmc
insl
lock
xor
ret
sub
adc
outsl
loop
addb
mov
mov
xor
or
addb
inc
add
add
fs
inc
add
ficoml
pop
aam
add
lods
sbb
pop
mov
inc
scas
addb
repz
push
call
fwait
pop
sti
xchg
ljmp
inc
add
mov
and
mov
pop
ret
dec
jecxz
or
aas
int
movsb
push
icebp
aam
cmp
xor
cmpsl
test
push
jns
out
inc
add
clc
mov
add
fidivl
add
dec
dec
loopne
daa
jp
mov
pop
and
sub
mov
push
add
lcall
xor
rolb
cmp
mov
adc
aas
xlat
lock
dec
loopne
push
outsb
fdivs
mov
stos
push
aas
sbb
mov
test
cmp
js
and
int3
sti
pop
xor
add
rorb
push
lods
pop
inc
mov
mov
lcall
mov
mov
aaa
cmp
push
fistpll
in
and
std
outsb
mov
sbb
mov
mov
shrl
test
insb
ror
mov
jl
outsb
jp,pn
stos
add
shlb
adc
sub
hlt
jecxz
add
adc
out
scas
jmp
insl
mov
aas
and
adc
mov
sar
loope
xchg
mov
pop
ljmp
xchg
cmpsl
lret
xchg
fsubrl
into
push
add
out
pop
mov
mov
mov
or
cld
and
add
inc
add
ja
mov
pop
add
es
sub
iret
mov
or
int3
loop
add
sub
sbb
loope
scas
mov
ljmp
fldcw
inc
std
lret
outsb
push
test
inc
cwtl
mov
add
in
out
xrelease
and
in
mov
mov
jne
cwtl
xor
insl
mov
jae,pt
adc
int
xchg
stos
jmp
mov
add
push
out
fcomp
cmp
loope
lds
add
into
sbb
add
sbb
into
adc
and
add
cwtl
or
cwtl
xchg
fstl
sbb
add
inc
fwait
cmp
dec
lock
dec
scas
inc
push
add
addb
popf
cmp
fdivs
push
repz
add
dec
lret
jl
fs
xor
mov
and
mov
mov
cmc
mov
iret
insl
dec
loope
dec
andl
addb
add
out
iret
jns
inc
add
in
push
pop
stc
xchg
addb
pop
inc
cltd
lock
in
sti
and
call
and
orl
pop
mov
inc
add
jge
and
fwait
jge
loope
cmp
into
adc
inc
add
or
fwait
testl
jmp
add
push
int3
jbe
add
pop
imul
cmpsl
repnz
push
pop
out
cmp
fstpl
pushf
pop
mov
rolb
or
out
data16
xchg
cwtl
mov
es
pop
clc
pop
mov
add
jae
mulb
jmp
popa
mov
pop
ret
test
movsl
sub
out
xor
out
rolb
push
push
adc
push
xor
pop
ss
mov
call
mov
pop
not
dec
test
or
stos
push
cmp
and
jo
mov
jge
call
lcall
xor
enter
jo
mov
inc
aas
lds
movsb
outsl
enter
xchg
fs
pusha
add
in
loop
int
inc
dec
xor
outsb
and
lcall
jmp
ds
imull
sub
movsl
insl
hlt
rcll
test
adc
dec
xlat
enter
into
mov
and
xor
xchg
pop
stos
xor
in
mov
lea
icebp
pop
and
aam
movb
cmpsb
jmp
jmp
add
scas
or
mov
or
push
fwait
movsl
mov
cmc
test
jle
jp
mov
rclb
xchg
loopne
es
jmp
rcr
lock
sbb
test
pusha
add
sbb
adc
lods
adc
lret
mov
decl
pop
js
pushf
movsl
pop
iret
movb
and
mov
lea
pop
push
push
mov
xchg
arpl
icebp
decb
adc
mov
dec
in
and
jbe
outsl
out
xlat
sub
add
mov
and
or
xor
data16
cmp
push
ret
inc
add
add
mov
sbb
pusha
add
pop
jne
cld
loopne,pn
add
mov
push
cli
pop
pop
addb
add
or
mov
xorl
pop
ja
lret
lods
insb
insb
sti
pop
add
mov
lods
pop
jmp
icebp
jae
add
fistpll
cmp
push
cmp
pop
adc
fbstp
add
addb
movsl
sarb
in
inc
jg
and
or
pop
fiadds
movb
push
ljmp
and
mov
cmp
add
in
bound
mov
mov
jnp
inc
fiadds
sti
dec
insl
push
insl
andw
rclb
out
push
test
cld
inc
mov
stc
dec
push
es
adc
bound
dec
bound
sbb
dec
inc
add
aam
hlt
pop
add
jmp
mov
pop
out
jmp
mov
adc
movsb
xchg
mov
cwtl
jb
icebp
mov
cmp
lahf
and
lret
xchg
pusha
add
js
xor
add
add
add
add
pop
or
fmuls
jg
add
ret
push
call
test
cltd
mov
add
test
pusha
add
stos
push
add
js
add
mov
ja
mov
pop
je
fildll
mov
nop
push
add
push
and
add
jecxz
dec
cmp
push
hlt
or
clc
xchg
pushf
add
sbb
jg
add
inc
fwait
in
add
cmpsl
imul
cmp
cmp
imul
inc
add
inc
mov
dec
push
fs
clc
scas
dec
push
cltd
hlt
leave
out
inc
and
mov
adc
gs
push
push
cli
aaa
mov
mov
fisttpll
scas
and
jo
and
xor
fs
xchg
sbb
push
mov
test
xchg
pop
je
fs
or
nop
jl
aas
mov
out
outsb
out
sub
sub
add
fildl
pop
push
push
add
ffree
cld
mov
sti
sbb
add
cld
xchg
aas
xor
dec
jnp
sbb
addr16
sar
out
test
jne
and
rorl
js
push
punpcklwd
inc
add
or
xchg
add
popl
cmp
push
add
and
add
out
sbb
cmp
negl
xchg
add
adc
jle
popf
sbb
mov
shrl
data16
cltd
adc
in
fstl
mov
push
insb
out
sarl
insl
lods
sti
movsl
shl
adc
jno
add
pop
sub
add
add
mov
add
aas
pop
or
nop
std
dec
pop
popf
and
loope
pusha
add
stos
filds
add
jmp
call
fwait
xor
leave
test
in
xchg
dec
test
xor
addb
insl
jns
fs
in
insb
mov
enter
or
sub
xor
andl
xchg
addb
push
mov
rolb
ds
jns
pop
fimuls
add
add
jns
or
jp
sub
pop
sahf
cmp
lcall
sub
in
in
je
xchg
or
push
stos
xor
cmpl
mov
cmp
dec
xchg
lret
aas
xchg
add
pop
std
mov
cmp
pop
jbe
dec
jns
repnz
stos
xchg
pop
xchg
in
xchg
push
inc
add
sub
out
mov
push
cmp
scas
push
xchg
xor
stos
mov
out
in
xor
add
enter
mov
mov
pop
mov
bound
loop
popa
adc
mov
add
push
adc
or
and
and
adc
cli
or
lods
insl
cs
imul
lds
adc
mulb
inc
add
jp
push
psrlq
dec
in
data16
loop
jl
adc
jae
shrb
add
add
cmc
cmp
mov
add
sbb
stos
lret
and
imul
pushf
sbb
repnz
pop
sbb
xchg
push
add
dec
cmc
insb
sub
pop
stos
imul
dec
pop
jmp
inc
mov
mov
out
pushl
or
dec
jle
lods
addb
add
xor
mov
test
rclb
add
cmpsl
outsl
mov
out
outsb
lods
inc
add
dec
push
cmp
add
or
in
mov
in
jbe
mov
push
jecxz
inc
in
adc
add
sbb
push
cld
hlt
and
mov
loop
jae
jp
fsts
xor
pop
xor
out
pop
adc
jle
mov
les
imul
adc
ret
and
sub
add
add
cmp
add
movl
loope
xchg
mov
stc
insb
pop
pusha
add
and
xchg
divb
add
out
jb
ljmp
jecxz
or
xor
lahf
xchg
fs
lret
sti
mov
out
inc
popa
cmp
movb
sbb
std
xchg
sbb
test
iret
mov
jge
out
xor
mov
fwait
adc
cmpsb
jb
and
fs
sub
or
add
out
add
and
pop
push
xchg
leave
jbe
mov
sbb
cmp
push
inc
push
mov
in
push
inc
add
test
push
in
leave
inc
das
addr16
mov
mov
cmp
cmpsb
xchg
cld
lods
jl
daa
cli
jne
dec
pop
loope
mov
lret
icebp
sti
cmpsb
call
sahf
adc
cmpsb
stos
notl
dec
loopne
push
adc
add
inc
imul
push
add
stc
arpl
xchg
outsb
das
fmuls
sarb
inc
add
movsb
sub
and
and
and
cmp
cmp
jns
outsl
aam
inc
out
mov
out
mov
mov
cwtl
add
mov
pop
or
mov
addb
shlb
sub
test
ret
cwtl
add
jno
mov
fildl
cltd
faddl
cmpsb
adc
mov
adc
inc
fldt
inc
xlat
xor
fcoml
push
sbb
fcomip
mov
sub
aaa
mov
cmp
sub
lret
mov
mov
jno
xor
xor
add
mov
dec
sahf
jbe
add
fchs
sub
into
push
add
adc
add
adc
jp
mov
fisttps
leave
xchg
or
add
lret
outsl
inc
add
repz
jbe
rolb
add
add
fwait
push
sub
out
jnp
popf
mov
push
ficoml
add
popa
xor
dec
and
jle
cmp
sbb
in
loop
arpl
hlt
imul
inc
add
jge
inc
fcomps
dec
lds
shrl
insb
aas
jns
add
ret
push
fldenv
sbb
popf
pop
pop
ds
test
add
aam
mov
dec
mov
push
int
add
dec
repz
mov
int3
mov
pop
xchg
repnz
push
repnz
clc
push
dec
insb
out
popf
mov
clc
aaa
mov
pop
xlat
ret
xchg
xchg
dec
sbb
cwtl
pop
fildll
addb
sbb
int3
push
stos
xchg
xchg
mov
adc
dec
sbb
test
push
add
dec
xor
or
add
adc
lock
dec
mov
add
cltd
jle
into
aaa
lcall
mov
sbb
jne
pop
pop
imul
imul
jl
shl
addb
aam
sub
jle
sbb
jle
nop
icebp
popa
cltd
inc
clc
mov
test
nop
xor
mov
jge
mov
int3
cmpsl
and
xor
scas
adc
xlat
test
arpl
add
sbb
aad
jmp
aad
addl
sbb
dec
popf
mov
cmp
inc
add
mov
cmp
cmp
push
int
cld
jb
adc
add
add
dec
inc
add
divb
jnp
in
clc
loope
sbb
and
jp
je
mov
lret
xlat
mov
fcomp
mov
adc
xor
lret
js
frstor
sarl
inc
sti
lods
pushf
xchg
pop
jp
lcall
inc
mov
loop
mov
add
push
add
enter
jns
ret
rolb
pushf
insl
fcompl
cmp
sub
pusha
add
ret
cmp
jl
add
or
add
and
adcl
push
dec
les
lods
clc
pop
iret
mov
repz
fmuls
mov
loopne
mov
cmpsl
push
lret
hlt
push
xchg
sub
in
jge
aam
rcrl
inc
add
fstps
das
les
adc
sti
dec
push
cmpsb
je
and
push
jno
pusha
add
mov
test
xchg
dec
jl
ret
mov
push
ret
stc
lret
mov
cs
sar
cs
sti
ds
je
add
lock
jbe
int
add
sbb
or
mov
cld
xor
sub
rcll
insl
and
jnp
mov
stos
jns
leave
into
add
aad
push
mov
sarb
mov
jmp
fptan
call
sub
in
mov
fs
jmp
add
ljmp
in
xlat
and
cwtl
out
mov
sbb
hlt
inc
add
arpl
pop
pop
xor
mov
add
mov
xor
iret
xchg
push
add
sbbl
jg
jne
jbe
push
add
int
mov
or
in
inc
movsb
popf
sahf
inc
add
scas
adc
mov
in
pop
insb
mov
fs
add
movsl
insb
inc
fidivrl
xlat
xchg
imul
adc
cmp
ljmp
add
pop
aaa
xor
jl
jp
fisttps
jbe
or
add
adc
mov
add
push
les
cmp
pop
mov
ret
repz
daa
rolb
pop
mov
enter
add
cmc
ret
mov
jp
test
cmp
xchg
test
jmp
and
inc
scas
dec
fs
in
test
adc
pop
enter
rorl
push
scas
xlat
and
inc
add
js
pop
sub
loop
adc
adc
inc
add
ficoms
pushf
fisttpl
xor
movsl
and
iret
in
je
mov
xchg
clc
call
ljmp
mov
push
pushf
sub
cmp
test
cmp
lods
stc
xchg
enter
sbb
push
xchg
inc
add
jmp
jbe
mov
add
or
add
xchg
dec
jns
xchg
or
mov
or
add
xor
fdiv
cmp
mov
repz
call
aaa
sbb
xor
popa
enter
mov
mov
mov
add
inc
or
test
and
add
sahf
fwait
inc
add
or
mov
stos
fimull
push
add
cmp
add
rcrb
inc
flds
fdiv
pop
insb
inc
pushl
out
clc
inc
add
jmp
jmp
mov
clc
enter
test
ljmp
xchg
mov
push
cmp
mov
and
lcall
ljmp
lock
out
jb
jb
adc
mov
fidivl
add
mov
ja
insb
mov
lahf
pusha
add
divl
jp
push
es
stos
rorl
test
mov
mov
jb
sub
jmp
ss
mov
inc
add
test
repz
dec
mov
in
sti
lock
pop
jno
push
bound
inc
add
cmpsb
jl
out
mov
cmc
pusha
add
push
out
lcall
xchg
lds
jae
pop
sbb
cld
mov
add
std
push
pop
jecxz
out
mov
std
pop
shlb
add
rclb
ja
jb
jne
xchg
repz
rclb
test
out
in
fsub
and
add
push
sbb
xor
mov
gs
jo
cs
addr16
rorl
mov
xchg
push
push
mov
pop
lret
setb
fwait
cmpl
pop
jno
sarl
ds
mov
fwait
dec
aaa
je
movsl
insb
fdecstp
jle
cld
lret
add
add
out
rolb
ret
push
add
les
mov
js
add
add
jge
jmp
xchg
jbe
and
aam
xorl
xchg
leave
lea
sbb
sahf
notl
cmp
mov
and
pop
push
iret
stos
movsl
movsb
cmp
sbb
lock
jb
push
jle
inc
or
sub
mov
fnstenv
sub
call
push
pop
adc
inc
add
addb
dec
cmp
popa
pop
pop
fbld
add
pop
lods
adc
mov
jne
mov
sti
push
inc
jecxz
add
inc
add
jecxz
mov
sub
cwtl
jo
mov
xchg
flds
lahf
dec
imul
stc
adc
push
xor
dec
call
jp
dec
mov
dec
lock
mov
add
sub
test
pushf
dec
pop
test
scas
popf
leave
cmp
popf
jae
ret
pop
sub
sub
mov
push
and
mov
es
loopne
icebp
test
inc
jnp
movsl
out
xchg
jno
and
jne
leave
idiv
out
aas
incb
jp
push
bound
js
jnp
shr
leave
mov
dec
mov
jecxz
lods
imul
sub
fadd
push
lcall
outsl
aam
mov
mov
push
mov
push
mov
pushf
dec
cmpsl
les
int3
pop
data16
sub
adcl
fnstcw
lods
inc
add
sub
repz
pop
sub
xchg
fst
jecxz
sub
lahf
in
andl
add
and
add
inc
loopne
enter
test
xchg
add
add
sarl
sbb
fwait
icebp
mov
pop
sub
xchg
add
inc
add
cmp
inc
add
jmp
adc
jns
rorl
push
iret
push
aam
and
cmpsl
fdivs
cmp
pusha
add
sbb
inc
pop
aad
dec
addb
ljmp
shrl
cmc
cmp
push
pop
and
fidivs
stc
scas
cmp
dec
sarl
xchg
pop
lea
sbb
mov
cltd
cltd
in
jmp
add
and
inc
add
push
inc
subl
dec
jle
aam
cli
jge
imul
insb
or
sti
push
in
cmp
mov
add
ds
rorl
dec
push
add
cmp
sbb
and
pusha
add
mov
and
mov
add
add
les
jge
test
dec
xor
cltd
pushf
inc
push
dec
add
addb
add
mov
arpl
out
cld
adc
mov
cs
push
imul
cmp
lcall
mov
in
xchg
jno
cli
inc
add
lcall
adc
mov
add
pop
and
rcl
and
push
loopne
lret
imul
insl
adc
addr16
push
repnz
mov
cltd
je
rolb
add
insl
std
loopne
add
not
mov
mov
dec
mov
mov
inc
add
push
jo
sub
add
jbe
outsb
insb
jp
xor
fwait
pop
add
cmp
jno
add
fdivr
xorl
pop
xchg
or
or
lret
cmp
jns
mov
add
mov
leave
into
dec
add
push
or
add
sub
add
push
xlat
cmc
insl
push
cmp
outsl
mov
das
mov
das
adc
ljmp
mov
adc
call
pop
xchg
inc
add
imul
add
add
cmpsb
dec
lods
add
fsub
push
jle
cmpsl
jmp
dec
mov
mov
out
js
popa
dec
cmp
outsb
insl
int3
mov
movsb
pop
sbb
lds
mov
addb
pop
lds
adc
jb
add
mov
cmc
outsl
out
add
into
or
jo
mov
or
fdivl
movsb
dec
sub
mov
xor
dec
ja
cmpsb
scas
lcall
push
jg
sbb
add
or
in
bound
loopne
rol
out
push
xor
movb
xor
cmpsb
cmpsb
cltd
cmp
mov
sbb
add
and
shlb
mov
lods
pop
out
pop
sub
sbbl
add
gs
add
mov
mov
sbb
and
and
cmp
dec
lcall
ljmp
sarl
lds
xchg
push
pop
cld
mov
add
add
stos
mov
add
subl
lret
iret
or
inc
add
bnd
cmp
sub
cltd
or
sbb
in
insl
lret
push
add
loope
lret
fs
lcall
aas
aam
add
sub
shll
fnstcw
mov
ret
xchg
movsl
push
faddl
jecxz
es
daa
bound
xchg
mov
add
xor
ret
insb
arpl
push
add
sbb
sub
movsb
bound
ljmp
cmp
pop
rolb
aas
lret
das
fadds
enter
jmp
mov
or
add
stos
shrl
mov
cmpl
or
bound
pop
push
or
fbstp
xor
add
sub
add
stos
repz
add
ss
aad
push
in
movsb
or
sbb
and
mov
xor
sbb
mov
inc
movb
pop
popa
cmp
addb
adc
jmp
xchg
lahf
fisubrs
adc
xchg
lods
mov
into
and
pop
sbb
jb
pop
lahf
ja
ljmp
inc
add
and
ljmp
mov
jg
xor
lahf
pop
nop
scas
mov
sub
push
jae
add
lcall
enter
mov
cltd
and
mov
test
adc
imul
mov
movsl
sahf
cmp
or
xlat
jecxz
mov
in
mov
neg
fdecstp
fmuls
dec
lea
jns
dec
mov
mov
fistps
push
sbb
psllq
pop
jnp
sbb
test
and
mov
mov
mov
vshufpd
leave
jb
and
pop
inc
rclb
scas
mov
pushf
xor
mov
sbb
mov
add
and
mov
data16
sub
fldl
aaa
out
call
movsl
jne
ja
mov
imul
mov
push
jle
iret
stc
imul
ret
addr16
xor
shlb
int
jne
xor
xor
pop
push
cmp
cmp
imul
sar
add
cwtl
cmpsb
xlat
adc
add
incl
add
mov
xor
add
push
sti
ss
sub
roll
lods
adc
mov
or
lea
mov
lret
les
out
mov
test
imul
je
lret
icebp
xchg
lcall
mov
xchg
out
cmp
sub
add
xchg
mov
dec
negl
xor
push
or
insb
popf
push
das
std
pop
jle
cmp
jp
or
pusha
add
add
add
xchg
call
cltd
inc
clc
or
jmp
push
pop
mov
or
cltd
cmp
xor
in
cmp
add
test
jno
sbb
jp
jns
sub
jl
add
mov
int
mov
pop
les
aam
inc
add
jbe
xchg
sbb
mov
out
fnstenv
xlat
add
ret
jns
stos
push
add
int3
sub
push
dec
rolb
lock
and
mov
rep
popa
std
ret
es
pop
pop
movsb
mov
std
sbb
jbe
adc
dec
cmp
cmpsl
bound
lods
aas
mov
mov
rorl
sbb
and
ficomps
add
add
vshufpd
mov
adcl
test
rorl
mov
cmp
sub
cwtl
js
in
adc
sbb
jnp
mov
dec
js
test
enter
and
fidivrs
js
cltd
pop
loop
lcall
xchg
push
jecxz
adc
push
mov
inc
add
jmp
gs
cwtl
inc
jne
add
dec
dec
loope
add
cmpl
shlb
and
fidivrl
icebp
jmp
or
fwait
cli
adc
cmpsl
mov
or
jge
mov
pop
stos
aam
dec
mov
xchg
adc
scas
sub
mov
xchg
mov
test
push
or
and
push
outsl
insl
pop
cmpsb
pop
push
and
dec
mov
insl
sbb
mov
rolb
push
jp
dec
inc
cwtl
add
jnp
xchg
cmp
cmp
xor
or
and
sub
je
jmp
loop
add
aam
lret
daa
lret
int
mov
inc
push
add
test
pop
outsl
repz
inc
xchg
test
mul
imul
std
pop
bound
jmp
fxch
sahf
daa
adc
push
push
xchg
add
ljmp
ds
test
xchg
lock
xchg
cltd
xchg
mov
daa
jb
push
or
pushf
addb
aas
pop
adcl
mov
add
mov
add
adc
push
or
xchg
and
iret
cmp
add
xor
add
jle
rclb
xchg
mov
sub
mov
sbb
add
xor
jg
inc
add
sub
js
in
jne
arpl
jae
or
inc
add
push
push
xor
std
movsb
and
jne
ss
fdivrs
add
push
xchg
mov
aam
cmp
mov
adc
insl
mov
fisubrl
inc
shl
or
lods
cmp
mov
stos
sbb
neg
mov
lret
fwait
rolb
andl
add
imul
xor
add
mov
or
pop
cmp
add
fistpl
test
xchg
xor
arpl
sbb
hlt
es
mov
or
mov
daa
repz
cmp
imul
cwtl
mov
or
cld
ja
or
arpl
xchg
popf
adc
fs
imul
add
iret
lods
mov
call
mov
xchg
cmp
xor
stos
push
mov
ret
pop
cmp
insb
cmpsb
push
inc
add
cmc
out
sub
loope
movsl
fs
aaa
xchg
mov
ret
cld
or
mov
stos
mov
mov
nop
cltd
jl
icebp
xor
add
std
add
pusha
add
push
jb
mov
push
xchg
xlat
xor
out
pushf
jl
loope
jg
inc
add
stos
xchg
sub
insl
pop
je
xor
lret
js
les
lea
add
bound
jecxz
popf
cs
shlb
add
dec
addb
pop
mov
bound
dec
xchg
add
push
shll
mov
hlt
xchg
add
add
mov
add
add
cmp
add
and
inc
add
sbb
dec
and
test
add
mov
iret
shrl
scas
or
or
xor
xchg
pushf
and
pop
stos
sbb
push
daa
sbb
pusha
add
popl
cmp
inc
addb
pushf
les
push
add
cmp
call
xchg
fiadds
push
lret
cmpsb
fnstenv
xchg
jmp
add
add
rolb
in
out
loopne
xor
add
lret
mov
cmp
and
clc
dec
inc
idivb
xchg
dec
mov
out
fwait
add
ret
push
mov
push
iret
and
add
int3
shl
das
mov
les
inc
mov
das
mov
or
jns
push
mov
mov
sbb
push
enter
push
mov
jle
lock
jbe
into
lods
leave
pop
das
aas
mov
addb
lea
sub
and
test
idiv
sbb
sub
add
push
mov
pop
xor
dec
ja
jnp
jl
rol
into
and
xor
mov
sub
nop
mov
push
cmp
xlat
stos
loope
inc
pop
push
add
lds
xchg
jg
jle
push
rcrl
movb
ret
imul
iret
pop
jle
pop
jne
aaa
push
inc
add
repz
cs
push
xchg
and
insl
pushf
inc
addb
int
jnp
ljmp
in
add
scas
imul
cli
imul
adc
sbb
and
xchg
xor
in
call
sbb
lcall
mov
xchg
cmc
fcomip
cmp
in
add
xchg
test
fdivrl
addr16
shll
xchg
pusha
add
inc
add
loop
mov
sbbl
loopne
add
dec
test
shr
mov
lock
lret
dec
push
or
dec
cltd
popf
xchg
dec
fnstsw
je
jnp
repnz
outsb
mov
clc
cmp
rcrl
lret
fucomp
movsl
jmp
add
ds
je
add
pop
stc
mov
jecxz
nop
jnp
jle
inc
add
fisttps
add
add
pop
inc
add
icebp
addb
enter
fmull
imul
dec
mov
bnd
add
fucomp
loopne
daa
mov
push
add
mov
fimuls
sub
pop
movsl
int3
icebp
push
mov
mov
test
pop
pop
mov
add
ljmp
test
add
push
sti
adc
add
push
or
aad
dec
add
call
outsl
aaa
jnp
inc
add
sub
jle
imull
decb
leave
scas
mov
xchg
cmc
sub
add
mov
add
or
mov
and
outsl
mov
jne
fiadds
addb
pop
push
push
adc
cli
fcmovnbe
stos
mov
out
lahf
aad
and
lds
mov
add
add
push
jge
stos
mov
add
jns
mov
and
mov
adc
pop
or
ds
in
inc
dec
sub
fnstcw
add
xor
mov
loopne
mov
jle
in
add
adc
add
push
nop
lret
loope
add
push
gs
stc
leave
add
pop
xor
pop
mov
dec
mov
fnstsw
and
pop
fwait
cs
test
dec
sbb
adc
lods
and
sti
addb
add
repz
push
jge
mov
mov
aad
loope
ljmp
mov
dec
pop
pop
out
mov
add
push
dec
pop
push
add
push
iret
js
daa
pusha
add
mov
inc
add
inc
add
or
add
add
lods
jnp
sub
mov
jns
dec
movsb
scas
push
sbb
addr16
daa
xor
dec
loopne
xchg
mov
mov
lea
hlt
mov
mov
les
or
inc
add
bound
jge
mov
hlt
addb
mov
mov
mov
shll
jle
shll
aad
xchg
repz
iret
or
cmp
cmpsb
loopne
movb
cmpsl
add
add
hlt
pop
rclb
lds
fcoml
cli
inc
jo
mov
adc
punpckhbw
sub
mov
call
add
sbb
add
pop
arpl
cmp
or
stos
aam
xchg
cmp
mov
sub
mov
test
mov
jnp
add
push
lds
mov
push
add
mov
movsb
dec
push
and
and
mov
popf
sub
push
cs
xchg
addr16
cmc
loope
mov
das
ds
mov
fisubs
orl
rorl
enter
pop
in
add
pop
fisttps
scas
ljmp
add
xchg
repnz
call
jge
add
lods
shll
jnp
lea
adc
mov
inc
jecxz
sub
mov
mov
xchg
add
pop
out
icebp
xchg
lea
xchg
add
insl
cmpsb
mov
daa
cmpsl
outsl
leave
stos
insl
jmp
test
les
lea
ja
fwait
in
sbb
insb
test
rolb
imul
mov
lock
add
shrl
pop
into
daa
in
icebp
inc
and
int
add
and
btr
leave
push
jmp
into
rolb
call
test
mov
and
push
lret
mov
neg
dec
pop
in
lea
adc
sub
cmp
cltd
mov
or
mov
fimuls
loope
decb
bound
or
mov
push
add
imul
push
cmp
add
adc
lcall
add
mov
in
out
sti
mov
xchg
dec
fmulp
push
rcrb
add
push
int3
sbb
mov
hlt
and
fsub
and
dec
test
pop
sbb
xchg
xor
scas
mov
ret
cmp
add
jmp
lock
jae
add
into
scas
iret
inc
and
dec
inc
add
negl
frstor
fcmovne
sub
outsl
sbb
pop
adc
pop
jge
mov
cmc
dec
push
sbb
addb
icebp
xchg
mov
call
loop,pn
lods
inc
add
push
mov
cmp
mov
std
mov
mov
lea
lods
addb
sub
push
loope
lret
or
sub
mov
mov
int3
pop
imul
dec
inc
add
sar
or
push
xchg
negb
dec
stos
cwtl
movsb
cld
addb
clc
pop
cmpsl
shrl
lahf
js
in
cli
push
cltd
dec
loopne
dec
cmovnp
mov
ljmp
dec
pop
adc
loope
push
adc
add
jg
dec
mov
xchg
or
leave
ret
rclb
fdivrl
rorl
push
pushf
and
pop
imulb
add
add
sub
mov
sbb
dec
clc
rolb
cli
bound
cld
mov
jns
add
ljmp
into
pop
push
out
inc
pop
sub
nop
shrb
xchg
add
out
imul
push
mov
dec
scas
daa
test
add
stos
push
movl
lcall
push
add
ja
add
lcall
xor
jecxz
lret
mov
xchg
imul
mov
add
test
cmp
aaa
repnz
aam
inc
or
mov
add
insb
pushf
dec
or
add
mov
sahf
loop
sbb
bound
or
push
mov
adc
out
imul
adc
mov
aaa
gs
andl
jae
add
cmp
sub
addb
xor
in
mov
cwtl
cli
xchg
clc
ret
pop
xchg
jbe
xor
aad
jge
aas
in
in
mov
xchg
ja
add
mov
dec
repz
pop
cwtl
inc
jle
and
dec
sarl
sub
repz
xor
das
fildll
in
push
xchg
inc
jae
and
mov
jmp
int
xor
add
insb
and
cli
ret
jl
out
or
add
enter
sbb
pusha
add
pop
test
mov
or
test
mov
fwait
cmpsl
pop
mov
xchg
scas
adc
int
adc
xchg
repz
fsubrp
lods
sub
outsb
xor
xlat
nop
sti
xchg
sbb
push
pop
or
mov
add
xor
cld
int
and
xchg
outsb
mov
xor
mov
xchg
mov
out
dec
cmp
in
mov
repz
push
ss
nop
pop
fdivl
add
dec
sbb
out
add
lret
push
loop
popf
push
lock
adc
into
call
xchg
inc
out
dec
xchg
xchg
cmp
insl
mov
or
adc
and
mov
mov
test
sbb
filds
int3
pop
ss
mov
mov
sub
test
lret
fld
loope
sub
sbb
shlb
int3
sub
xchg
push
cmpsl
out
add
mov
push
hlt
loope
fwait
xchg
xor
outsl
and
dec
pop
sub
push
in
imul
fucom
pop
aad
sbb
addb
and
gs
jp
xor
cld
or
enter
add
fmuls
push
movsl
addb
lods
and
cmp
sbb
add
out
xchg
filds
or
push
add
jle
inc
lods
mov
add
mov
outsl
je
add
add
mov
pop
sub
cmp
jo
push
xchg
or
or
popa
std
mov
insl
mov
test
pop
xor
push
add
popa
xor
jg
stc
push
rorl
push
movsb
mov
test
and
pop
mov
lock
push
add
scas
cmp
add
mov
rcrb
dec
lock
lcall
adc
mov
nop
movsl
mov
add
rcrl
hlt
test
adc
add
adc
and
add
push
rclb
cmp
add
lcall
mov
inc
add
out
jno
popa
xor
inc
jge
add
inc
add
pop
cmpsb
dec
and
jae
pop
insl
mov
mov
lods
scas
cmp
dec
popf
or
adc
mov
cmp
add
loop
jmp
mov
add
cmp
cmp
stos
addr16
mov
orl
adc
jl
call
cwtl
push
add
dec
dec
jb
adc
cmpsb
push
mov
hlt
rolb
push
cld
adc
mov
sub
sbb
push
les
incb
fildl
scas
cmc
push
pop
mov
movsl
push
adc
movups
fucom
adc
sub
jns
pop
adc
push
or
ljmp
xor
lret
jo
add
mov
jbe
add
or
lea
jp
xchg
mov
ret
cpuid
dec
outsl
mov
imul
out
pop
xor
dec
lahf
cmp
outsl
xor
jmp
xchg
rolb
sar
mov
mov
lea
das
jg
es
dec
out
pop
pop
fwait
pop
and
dec
xor
stc
jbe
fistps
and
aas
adc
jecxz
aam
sahf
pop
xchg
xchg
push
or
mov
xchg
fprem
mov
jno
add
or
test
add
or
add
cmp
add
loop
dec
mov
mov
add
lret
jnp
movsl
adcl
pop
pop
lods
jmp
add
add
sub
and
int
push
das
and
push
push
mov
add
add
aad
inc
jle
add
add
add
pop
call
add
insl
repz
fwait
add
push
push
pop
in
add
mov
int
fwait
sbb
out
add
xor
add
aam
xor
cli
scas
jns
out
add
add
imul
add
push
rcr
cmp
data16
movsl
loop
sbb
or
inc
add
jle
popf
sti
push
aad
pop
sbb
aaa
push
loop
mov
lods
sarl
ds
inc
add
nop
clc
fstpt
lret
push
inc
adcw
mov
dec
xchg
pop
fsubrl
jecxz
aam
push
scas
dec
cmp
mov
ret
pop
sub
and
add
call
das
mov
push
lock
dec
mov
leave
shl
cmp
or
std
lcall
and
adc
lahf
dec
data16
imul
add
sbb
xchg
xchg
pop
xchg
jns
lret
xchg
xchg
pop
std
push
pusha
add
xchg
imul
fs
add
scas
cs
in
mov
ja
sbb
inc
pop
fistl
sub
xchg
add
mov
stos
adc
mov
xchg
sub
mov
clc
push
arpl
or
cmp
les
xor
jg
mov
and
pushf
xor
imul
adc
imul
cmp
mov
dec
and
mov
and
in
adc
adc
out
xor
mov
push
push
adc
lods
sbb
les
das
les
ljmp
scas
push
out
xchg
or
push
fidivrl
cwtl
sbb
into
add
paddd
imul
mov
xchg
call
lods
mov
push
aas
add
push
add
add
mov
push
mov
xchg
dec
cmp
ds
push
inc
cmp
ret
xchg
in
movsl
mov
jl
fstl
imull
icebp
lea
pop
in
jno
mov
outsl
adc
andl
sub
out
push
inc
iret
sub
fidivs
int3
mov
repz
and
icebp
cmp
out
jae
add
add
xchg
pop
bound
out
push
lods
ss
sbb
aad
add
scas
ficoml
mov
sbb
sti
mov
nop
movb
add
es
xchg
aam
mov
mov
cmp
xchg
add
dec
outsb
repnz
dec
cmp
add
add
addb
in
inc
aam
add
scas
mov
fwait
mov
xchg
dec
mov
push
jbe
dec
stos
pop
sub
add
popf
cmp
add
inc
mov
add
xchg
dec
aad
push
adc
sahf
lods
pop
mov
icebp
fstpl
xchg
movsl
cmc
sbb
data16
add
add
add
push
jo
inc
add
and
lcall
inc
add
mov
cmp
addb
jmp
cmp
lahf
cmpl
add
mov
mov
cmp
lea
and
mov
cmpsl
loopne
out
xchg
and
loope
add
rclb
or
insl
dec
in
pop
mov
pop
cmp
movsw
movb
pop
pop
cmp
test
adc
and
imul
cmp
add
xchg
mov
lret
jge
add
lock
dec
mov
les
fsubrl
mov
hlt
cld
push
test
mov
jp
sub
nop
xchg
pop
fisttpll
xchg
call
pop
mov
in
and
inc
add
insl
jp
mov
xor
mov
gs
add
imul
xor
inc
add
xchg
cmpsb
pusha
add
pop
or
dec
lea
in
cmpsb
or
push
mov
fcomps
sub
add
rcrb
pop
bound
ret
add
fwait
jns
add
cmp
jnp
sbb
ret
sarl
sbb
jmp
mov
add
add
aam
sbb
pop
pop
add
mov
sar
pop
cld
test
xlat
out
inc
and
test
cmc
lcall
and
outsl
jmp
fwait
adc
mov
in
jle
rorb
out
jne
push
les
jmp
divl
pop
jbe
stc
inc
pusha
add
inc
add
and
inc
pop
inc
mov
sti
xor
push
cwtl
lret
mov
pop
in
and
mov
add
sub
lods
nop
xchg
test
xchg
sti
jp
dec
mov
xchg
enter
shlb
ds
test
pop
lods
dec
inc
add
addb
repz
pop
xchg
stos
aam
iret
popf
xchg
cwtl
pop
cmp
add
cli
pusha
add
cmpsl
testb
or
scas
jo
xchg
jg
inc
addb
out
nop
dec
movsb
adc
sbb
cmp
movb
jnp
bound
jecxz
cltd
adc
and
fiaddl
sbb
dec
scas
cs
mov
iret
adc
xor
add
icebp
scas
mov
repz
stc
cmc
jnp
fldl
add
cmp
mov
push
ss
jp
mov
stmxcsr
adc
iret
xor
mov
lock
add
shll
add
add
call
ds
outsl
fbstp
jge
jns
jle
add
xorl
inc
add
sbb
into
add
dec
push
into
mov
push
cmp
push
add
xor
add
jns
filds
sub
pop
sub
mov
inc
jle
adc
jbe
pop
movsb
fs
fidivrl
push
add
jbe
rolb
and
add
out
add
sbb
push
aas
adc
jnp
dec
adc
mov
inc
add
and
jo
lahf
and
inc
add
mov
xchg
imul
cmpsb
nop
das
sbb
stos
xchg
test
inc
shrl
adcl
mov
xchg
add
test
les
ja
push
adc
pop
push
add
cmp
pop
xorl
andl
jb
lods
outsb
add
sahf
xlat
insl
xchg
cmp
mov
in
ja
shll
sti
dec
in
jnp
mov
pop
arpl
out
leave
icebp
mov
xchg
dec
push
cs
pop
sbb
lcall
push
cmp
cmp
rcll
push
dec
cld
add
cltd
scas
loop
cltd
in
xlat
push
pop
icebp
xor
ss
or
xchg
adc
and
add
ret
or
inc
add
adc
sub
add
xlat
fdivrl
push
cmpsb
loop
sub
mov
add
cmpsl
cmp
pushf
test
jo
sarl
mov
sbb
or
jo
xchg
out
dec
mov
or
or
and
rcll
stc
movb
das
or
xor
fdivrs
mov
out
add
or
shrl
test
out
jmp
cmc
stc
adc
or
inc
lock
add
dec
jp
jne
loopne
jno
and
push
sub
repnz
lods
inc
add
xor
cmp
add
adc
sbb
out
ljmp
jle
stos
cmpsb
inc
add
add
cmp
aaa
mov
mov
out
sub
fisttps
add
pop
outsl
out
in
pop
push
dec
mov
iret
push
cwtl
push
pop
sbb
ljmp
mov
iret
cwtl
jmp
mov
repz
mov
arpl
in
and
idivb
fwait
enter
push
rcll
add
add
je
hlt
stos
and
aad
push
pop
xchg
xchg
xor
leave
nop
sub
nop
mov
or
ds
dec
inc
push
xor
push
xchg
add
test
sub
xor
dec
call
fwait
ljmp
arpl
ss
clc
or
dec
jl
push
enter
jno
cli
aad
jmp
shl
insl
addb
test
xchg
aas
inc
add
fldcw
add
mov
notb
ds
dec
jno
mov
add
mov
into
fcom
sti
add
pusha
add
xchg
jns
icebp
inc
add
fidivrs
pop
imul
fdivrs
sub
inc
dec
sub
sarl
js
subl
xchg
adc
xchg
sub
cmp
mov
mov
mov
pop
xchg
push
mov
mov
les
push
mov
pop
inc
add
into
inc
clc
and
rclb
push
mov
inc
add
dec
stos
in
jnp
enter
inc
push
aaa
jae
inc
add
mov
push
add
jo
mov
or
repnz
dec
xchg
dec
mov
js
xor
inc
add
sub
mov
add
imul
sub
mov
xor
dec
cwtl
mov
pop
sti
and
and
sbb
stos
xchg
sub
xchg
fcmovnbe
mov
jecxz
mov
andl
out
imul
in
scas
icebp
andl
sub
rcrb
mov
inc
addb
push
sbb
dec
jnp
popa
inc
add
clc
push
aam
shll
inc
add
add
loope
jae
add
insb
sub
add
movsl
rcrl
bound
rcl
fiadds
add
loope
mov
pusha
add
add
addr16
jge
add
sub
dec
mov
cmp
ret
push
push
rol
aad
mov
jns
add
arpl
leave
call
roll
stos
mov
call
add
mov
popa
mov
add
push
rcrl
mov
mov
pushf
shlb
shll
mov
loopne
das
sub
mov
add
mov
xchg
adc
rolb
add
mov
cmp
jg
scas
fisubrs
xchg
dec
aaa
insl
jl
push
push
mov
jb
jp
popl
cmpsl
and
inc
mov
xor
add
mov
pop
cld
pop
adc
pop
pushl
jl
push
ja
inc
add
add
push
xor
xor
es
xchg
in
sub
mov
dec
mov
pusha
add
inc
dec
data16
test
jb
add
lcall
add
add
addr16
imul
imul
pop
sti
push
imul
lcall
test
sub
int
fdiv
or
add
outsl
sbb
pop
jmp
jg
testb
push
inc
pop
sbb
sbb
sbb
in
popf
cmp
push
pop
iret
int
sbb
loope
dec
lahf
negl
js
js
fxch
fisttpl
push
jle
cmp
push
mov
insb
xlat
pop
cmpsb
mov
fsubrs
jge
add
out
imul
add
outsl
sub
mov
add
popf
pop
mov
test
dec
scas
sbb
add
and
add
mov
add
stos
loop
add
cmp
add
addb
fdivs
sti
xor
sahf
popf
pusha
add
add
out
cmp
cmp
or
test
testb
inc
out
mov
nop
loopne
pop
adc
out
stos
add
add
dec
rcrl
xchg
mov
add
or
dec
shlb
inc
add
loopne
xchg
cmpsb
das
lcall
sbb
add
imul
ja
xor
outsl
sbb
iret
jmp
xor
repnz
cltd
sbb
in
cmp
sbb
mov
outsl
mov
repnz
add
sbb
mov
movsl
aad
sbb
xchg
jnp
ljmp
xchg
ret
lds
xchg
aad
int
lods
jbe
mov
outsb
or
add
add
in
dec
idivl
in
adc
in
pop
inc
add
fldenv
loop
dec
je
add
daa
negb
insl
add
dec
mov
jecxz
dec
stos
xor
filds
pop
shrl
mov
mov
pop
int
mov
jmp
push
mov
pop
or
enter
add
int3
adc
adcl
lods
jle
repz
lahf
mov
jne
in
push
sub
clc
dec
xchg
dec
jmp
jnp
fwait
imul
mov
jae
shlb
jg
ret
aam
sub
sbb
pop
aam
add
inc
cwtl
sub
or
mov
add
add
movsl
lock
add
ret
sub
adcl
push
mov
pop
and
sbb
cmp
and
cmpsl
fwait
xor
adc
into
call
or
mov
rolb
add
icebp
mov
testl
push
popa
aas
pop
sub
adc
push
jnp
sub
jbe
pop
and
xlat
jno
mov
dec
dec
mov
jl
jmp
out
inc
adc
add
adc
inc
add
push
inc
add
fisubl
int
bswap
daa
cli
push
xor
push
xchg
movsl
andl
cmp
fs
rolb
dec
rdpmc
or
or
cmp
xor
add
cmp
add
out
ret
add
cmpsb
cmc
fisubrs
add
mov
in
adc
je
mov
rolb
add
push
add
push
insb
sub
push
inc
add
mov
add
loopne
sbb
push
xlat
aam
xor
stos
pop
push
jbe
leave
je
loopne
addr16
cmp
push
adc
add
insb
subl
cmp
mov
add
movsl
insb
mov
int3
icebp
lock
les
pop
dec
or
movb
ret
aaa
ficoml
sahf
icebp
mov
jecxz
ljmp
dec
test
rclb
test
ljmp
mov
jmp
addb
dec
push
loope
xchg
loopne
stc
inc
add
jb
sub
cli
in
aaa
daa
fldl
lods
add
mov
adc
mov
mov
jecxz
xchg
or
sbb
add
sbb
aas
mov
push
and
addb
int3
cmp
pushl
sub
nop
mov
add
jns
xor
and
or
lods
xor
movsl
arpl
xchg
xchg
mov
jle
ss
push
xor
sub
ffree
add
insb
or
push
mov
pusha
add
cltd
les
push
addb
add
pop
addb
mov
inc
pop
dec
outsb
in
iret
push
ds
or
jle
pusha
add
dec
imul
xor
lret
mov
adc
ss
jnp
add
nop
sbb
movsb
jns
add
pushf
push
mov
pop
lods
mov
sub
lods
cmp
les
cmp
adc
pop
push
into
ret
enter
movsl
mov
lods
lea
add
mov
lret
movsl
addb
push
pop
mov
lods
orl
repz
ret
sub
push
sub
mov
shrb
lret
loope
push
movsl
mov
add
adc
adc
fimull
pop
fs
cmpsl
nop
cmp
daa
call
in
push
into
and
loop
pop
jl
mov
sub
popl
test
ret
popa
lcall
and
and
push
push
sub
fidivrs
stos
mov
cmp
enter
aad
and
pop
and
xor
popl
iret
stos
mov
jbe
mov
xchg
jecxz
sar
add
insl
push
hlt
pop
or
stos
pop
mov
add
scas
rolb
lahf
xchg
movsb
push
fmull
insb
adc
cwtl
xor
mov
push
xor
cwtl
leave
fidivl
test
push
jne
mov
cmp
xchg
push
push
adc
fsts
pop
and
add
subl
ret
add
cmp
add
adc
mov
lods
sbb
sbb
push
aaa
push
mov
ja
mov
add
orl
outsl
in
aam
rolb
jae
mov
inc
add
dec
nop
adc
jmp
add
movb
mul
ds
test
bound
dec
pop
pop
ret
or
int3
push
cmp
add
lahf
add
aaa
cwtl
leave
lods
daa
rclb
cmp
in
imul
ljmp
push
pmaxsw
pop
pop
inc
dec
mov
sub
sub
pusha
add
adc
add
popa
dec
cmp
add
rolb
adc
cmp
add
movsl
jae
cwtl
push
call
dec
jae
mov
sarl
sub
add
cli
ja
outsl
nop
fisubrs
push
rclb
shll
sbb
jno
xchg
jne
inc
insb
enter
int3
and
sub
jo
add
mov
mov
add
dec
cli
mov
sub
sub
cmp
out
pop
sub
arpl
xchg
cmp
loop
pop
push
dec
push
mov
add
lods
add
xchg
into
fs
cwtl
xchg
sbb
mov
cld
pusha
add
ret
inc
or
add
cwtl
mov
pop
inc
test
addb
sti
jnp
jmp
jns
sti
mov
in
cmp
jno
iret
ja
lret
ss
lahf
xchg
std
pop
jae
add
scas
inc
fs
add
and
cmp
jg
add
roll
add
mov
rolb
sub
jmp
movb
jbe
adc
lds
sbb
add
and
int
mov
sti
imul
add
int3
pop
xchg
jmp
pop
dec
sub
in
cmp
ficoml
flds
push
cmpsb
sahf
lods
push
mov
xchg
popl
int3
outsb
stc
lret
das
mov
fisubrs
mov
inc
add
mov
btc
scas
mov
loop
lahf
ret
cmp
mov
xor
xchg
enter
inc
add
add
addr16
imul
push
add
clc
pop
xor
add
addr16
xchg
maxps
cmp
fsubrs
pop
push
test
add
js,pt
and
add
push
xlat
dec
pushf
sbb
bound
test
iret
or
mov
mov
mov
adc
inc
add
fsubs
in
cmpsl
sbb
jae
pusha
add
mov
add
dec
popf
cmp
adc
push
fidivrs
or
fdivp
xchg
sbb
insb
dec
cmp
xchg
cmp
push
in
outsb
jno
add
leave
sbb
and
jns
inc
add
xchg
xlat
sub
add
and
push
je
addr16
and
cs
mov
iret
icebp
jb
popa
mov
in
pop
stos
push
arpl
add
add
xchg
addl
adc
cmc
clc
mov
push
add
xchg
and
fwait
testb
fwait
xchg
pop
pop
mov
and
ret
mov
cld
pop
inc
and
lods
fisubs
dec
mov
inc
add
cmp
lods
jns
test
xorl
dec
mov
xchg
or
insb
push
and
popa
lcall
or
and
addr16
lahf
addb
fdivr
out
or
dec
mov
pop
insb
dec
fistpll
mov
or
insl
sahf
scas
in
add
sahf
mov
add
loope
fadds
inc
xchg
push
mov
aam
mov
ret
xchg
cmp
mov
out
mov
mov
lock
push
and
push
mov
out
sub
xor
lock
inc
loope
fbld
adc
ret
mov
add
pmuludq
sbb
stos
and
leave
into
loopne
clc
out
pop
lret
cmpsl
insl
outsl
sbb
ret
mov
adc
shll
ja
lahf
pop
ss
cmc
push
subl
das
lods
fwait
addb
and
cli
movsb
lock
addb
dec
aad
xor
bswap
push
mov
sbb
scas
pop
fdivrs
jo
fisttpll
rorb
add
popf
jns
dec
adc
and
movsb
cmp
mov
pop
imul
xor
mov
aas
scas
sbb
fsub
arpl
les
popf
add
push
fwait
sti
popf
out
in
std
xlat
push
popaw
lahf
das
mov
enter
rolb
movb
add
add
and
testb
inc
add
stc
fstpt
push
add
mov
dec
push
xchg
mov
fwait
insb
pop
adc
sub
jmp
ret
fisttps
push
mov
rolb
push
push
fistpl
sub
in
cmc
repnz
adc
lcall
cmp
pop
or
add
stos
jg
in
loop
mov
sub
nop
mov
add
dec
sub
mov
add
jp
add
addb
or
cmpsb
mov
test
popa
pop
xchg
push
add
push
stos
scas
shlb
cmc
mov
jae
mov
rcrl
sbb
dec
lods
jl
bound
lcall
jmp
adc
repz
xchg
out
cmc
leave
pop
addb
int3
or
mov
jbe
repnz
jne
pop
sub
or
adc
repnz
imul
add
add
add
and
repz
ffree
movsl
jecxz
ljmp
xchg
fcmovu
xlat
pop
xor
xchg
imul
mov
fidivrl
sbb
ret
mov
cwtl
sbb
push
mov
mov
sub
adc
fdivl
addb
mov
adc
pushl
mov
nop
push
loop
add
xor
mov
or
dec
fstpt
pusha
add
adc
loopne
out
out
push
or
xor
arpl
cli
mov
sbb
inc
add
jae
jmp
jp
addb
outsb
push
inc
pop
cmp
sbb
lods
pushf
sub
ret
and
inc
mov
xor
not
or
or
in
fsubrs
or
idivb
xor
cltd
imull
loope
and
xchg
or
addb
mov
adc
or
mov
add
jnp
hlt
pop
jae
test
negl
xchg
push
jge
addb
fucomi
stos
pusha
add
push
add
cmp
mov
cmpsb
jg
fcompl
mov
sti
sti
in
mov
add
pop
gs
or
rcrl
and
cld
mov
sub
outsb
and
xchg
dec
insb
add
dec
jge
das
xchg
jp
push
movsl
pop
sub
and
jbe
stos
call
jno
cmp
test
popa
add
test
adc
fcompl
outsl
outsl
sub
lods
push
push
mov
cmpsl
push
sub
add
jae
add
insb
cmpsl
jno
push
in
cmp
push
sbb
pop
pop
inc
cmc
mov
adc
loopne
push
cwtl
in
std
insl
cltd
add
jae
cmp
cmpsl
dec
and
xor
movl
outsl
ds
inc
pop
mov
addb
dec
out
jge
bound
lret
cmp
push
mov
ja
addb
pop
adc
cld
jecxz,pt
xorl
js
add
lea
sub
cli
sbb
push
mov
xor
ret
pop
cmp
popf
xor
pop
xchg
movsb
cmc
xor
mov
idiv
jae
pop
es
imul
pop
lds
xor
adc
lods
jle
lcall
mov
xor
in
insb
add
xchg
mov
mov
sti
mov
dec
jb
add
mov
mov
xchg
add
into
popf
sbb
ja
loope
adc
xorl
sub
push
add
mov
stos
lock
adc
into
sub
stos
add
jp
mov
out
into
out
inc
movsb
ret
test
sbb
xor
add
adc
and
sbb
addb
popa
sbbl
xor
jmp
out
xor
push
ljmp
flds
mov
mov
sub
iret
out
popa
cmp
int
and
jecxz
aas
lods
adc
in
push
lods
push
jecxz
sbb
movsl
dec
cmpsl
mov
and
hlt
ljmp
add
enter
scas
mov
mov
inc
add
mov
aas
jno
data16
nop
ret
test
add
das
frstor
add
icebp
jae,pn
add
add
shrb
cmp
hlt
cmp
add
jecxz
and
sub
pop
pop
pop
movsl
adc
filds
ja
xchg
sub
dec
jge
lea
add
shrl
jl
sarb
jp
cmp
fdivs
lcall
mov
sbb
in
add
lret
lods
dec
adc
jb
add
xor
scas
dec
sbb
test
js
add
dec
js
jo
sbb
lods
push
push
push
scas
sti
mov
mov
test
je
add
adc
fisubs
test
ret
push
pop
lret
inc
add
jecxz
negb
mov
jne
outsb
jno
jecxz
inc
add
inc
add
inc
add
movb
or
addr16
loopne
aam
jmp
aam
test
and
dec
or
cmp
aas
js
push
cmc
inc
cmp
aas
mov
movb
add
mov
lahf
push
sub
fcoms
adc
jmp
stos
xchg
mov
add
std
ret
es
sbb
cltd
push
out
mov
shrl
les
mov
mov
sbb
and
enter
cmc
fisubrl
or
pop
outsl
dec
js
cld
clc
push
mov
push
add
lret
dec
add
mov
pop
in
jno
test
fisubrl
mov
xor
cmp
xchg
mov
jae
add
adc
add
ljmp
cmp
push
stos
test
test
pop
push
cmpsb
lret
popw
jecxz
repz
pop
aad
inc
incl
in
scas
mov
xor
push
fs
popa
push
mov
pop
pop
icebp
dec
sahf
sbb
push
adc
ljmp
jg
pop
push
add
stc
dec
shlb
mulb
addb
xor
add
push
test
std
xor
inc
ss
cmp
in
sub
into
test
inc
out
or
xor
aas
mov
ret
addl
hlt
dec
fdiv
nop
and
sub
ss
cli
les
pop
pushf
adc
dec
int3
cmpsb
daa
jp
sbb
jns
add
lods
push
mov
cs
add
xor
test
mov
jmp
add
xchg
xchg
mov
mov
add
rolb
movsl
arpl
xor
add
pop
adc
or
add
les
pop
dec
xchg
int3
lcall
add
xor
add
addb
loope
dec
and
pop
icebp
repz
lds
jmp
std
or
jg
cmp
add
and
mov
mov
push
inc
add
pop
dec
add
or
addb
aad
mov
addl
mov
xlat
mov
jp
mov
mov
add
stos
mov
sbb
dec
add
sub
hlt
mov
into
addb
imul
rolb
lcall
fimull
je
fdivl
sub
mov
or
movb
pop
sbb
fists
rorl
dec
cmp
inc
add
inc
add
gs
mov
pop
mov
in
inc
add
and
xchg
sub
xchg
push
pop
sahf
ja
loope
xchg
lea
pop
insb
std
sbb
mov
mov
xchg
push
push
cmpsl
cli
fstpl
sahf
push
mov
push
inc
add
xchg
mov
jle
cmp
add
xchg
call
xchg
sub
roll
add
fistl
add
fstpl
repz
push
adc
add
add
mov
or
ja
fistps
lcall
cwtl
adc
addb
adc
mull
inc
add
sbb
sbbl
lahf
scas
jcxz
daa
dec
stos
sarl
add
ret
pop
out
out
add
in
orl
inc
add
ljmp
fiaddl
xchg
das
jmp
xchg
sbb
cli
jg
lods
xorl
mov
add
add
sbb
das
lret
imul
adc
jae
xor
jmp
loopne
idivl
enter
fwait
or
stos
mov
rcrl
stc
mul
sbb
lock
mov
push
cmp
js
pop
out
mov
xor
addb
xlat
mov
ss
add
add
fcompl
xchg
xor
push
mov
add
add
mov
dec
ja
or
test
mov
fldcw
mov
pushf
xor
lahf
mov
add
sbb
int
addb
loopne
sub
lea
jmp
jb
xchg
fildll
fistl
inc
pop
rol
rolb
cmp
repz
cltd
outsb
aas
push
mov
add
add
nop
pop
sbb
cld
lods
push
mov
xchg
fildll
pop
xchg
sbb
imul
addb
ret
popl
aas
push
xchg
ja
and
nop
data16
aam
jp
imul
jge
stos
push
inc
mov
in
das
loopne
out
push
add
cmpsb
lahf
sbb
cmc
adc
adc
fnclex
mov
cld
jl
stos
jecxz
iret
jge
jo
es
sub
xchg
es
mov
bound
xchg
mov
jmp
mov
dec
int3
xchg
mov
or
inc
sbb
and
xchg
int
repz
addb
ret
inc
jae
out
adc
jecxz,pn
cmp
leave
push
cltd
xor
lahf
cmp
pusha
add
test
fsubrl
add
sbb
lret
inc
push
addb
test
pop
icebp
mov
loop
sbb
adc
push
push
sub
lods
jecxz
fnstcw
jae
cwtl
ret
push
cmpsb
ljmp
add
aaa
arpl
lods
push
jecxz
movb
inc
inc
add
sub
dec
jg
xchg
push
sbb
xchg
or
xor
add
dec
ss
jmp
sbb
dec
enter
add
add
add
in
xchg
inc
add
push
into
pusha
add
add
lcall
add
adc
test
cmp
test
inc
add
mov
loope
pop
or
ja
sahf
xor
or
ja
mov
stos
jns
push
sub
ret
cmp
inc
add
repz
shll
push
or
add
ffree
add
stc
cmc
shll
add
add
adc
add
add
hlt
movb
add
push
ja
into
push
imul
mov
ret
rcrl
push
sub
loop
xor
adc
fs
outsb
shll
inc
add
cwtl
jecxz
sub
push
jp
aad
aam
cmpsb
pop
test
add
xchg
push
pusha
add
loope
addr16
sti
adc
es
inc
add
stos
movsl
mov
mov
xor
cwtl
add
scas
jl
sub
inc
stc
push
push
testl
pop
and
mov
notb
inc
in
in
pop
fisttpll
loopne
push
adc
add
divb
outsl
orl
xchg
mov
pop
pop
sbb
add
imul
or
pusha
add
movsl
bound
or
stos
push
mov
iret
xchg
mov
cmp
dec
xor
movsb
add
sbb
in
mov
rclb
jl
shll
cmpl
je
add
fcomps
es
push
mov
test
in
pop
popl
xchg
aas
jl
add
or
dec
ja
lea
or
pop
dec
popa
inc
std
or
je
xchg
pushf
pop
jp
jo
cmp
add
cltd
out
pop
in
dec
mov
dec
adc
subl
xlat
xor
cmp
test
stc
sbb
repnz
popa
out
inc
filds
push
add
push
lods
jp
add
pop
gs
mov
sbb
fucomip
jge
add
cltd
push
leave
int
dec
pop
ss
inc
add
lods
jno
mov
rolb
out
jno
stos
or
mov
repnz
mov
mov
out
aad
loop
aas
sbb
std
or
sub
xor
into
orl
push
add
cli
cld
cmp
pop
pop
pop
ja
shll
adc
jge
add
je
sub
add
pushl
dec
dec
cltd
stc
inc
or
add
push
pop
push
jne
add
adc
addb
insl
sub
pop
and
loope
add
push
add
sbb
add
fisubs
adc
movb
shl
inc
add
add
mov
insb
fcoms
and
adc
add
add
scas
call
jp
arpl
repz
add
enter
mov
and
sub
jecxz
jae
xchg
leave
cmpsl
int3
xor
or
mov
sarb
sarl
ja
cli
cs
cld
psubusw
test
jmp
add
xor
mov
inc
jl
dec
pop
dec
dec
icebp
xlat
mov
cmpsb
fidivrl
add
or
fwait
jmp
in
mov
dec
xchg
cmp
das
xor
int3
pop
out
jnp
addb
int
add
aas
scas
test
add
add
repz
sbb
daa
dec
push
or
mov
fstpt
arpl
mov
sbb
jns
dec
into
sbb
std
xchg
add
add
push
xchg
or
test
fimull
addb
in
add
and
mov
imul
out
leave
ljmp
nop
xor
iret
lds
iret
dec
loopne
xchg
xlat
or
je
movsb
movsl
adc
xchg
test
pusha
add
lods
add
xor
imul
sbb
popf
add
push
sub
cwtl
mov
out
addb
je
sbb
fsubs
mov
pop
pop
scas
jns
add
loope
pushf
jmp
mov
xchg
sar
mov
js
jge
inc
add
lret
hlt
push
cwtl
jnp
xchg
cmp
or
loopne
jle
je
and
movlps
or
dec
add
push
mov
ficoms
andl
scas
jg
shrl
mov
data16
clc
sbb
pop
lahf
stos
dec
fistps
and
mov
enter
push
add
iret
and
loopne
call
jl
sti
repnz
mov
and
mov
add
and
popl
clc
imul
mov
imul
jecxz
fidivl
mov
stc
in
or
push
bswap
push
lds
xor
adc
push
inc
cmp
inc
add
aaa
icebp
jmp
dec
cli
loopne
mov
bound
scas
movsb
mov
mov
in
inc
imul
add
cmp
call
adc
scas
movb
adc
lret
mov
or
pop
push
mov
std
cltd
cmp
xor
mov
stos
ja
movb
dec
mov
call
add
clc
xchg
sub
dec
mov
sub
aaa
nop
mov
sbb
repnz
jmp
push
mov
scas
mov
aam
inc
add
inc
add
inc
add
mov
add
mov
fstpl
in
dec
iret
aaa
test
test
ljmp
push
add
ss
mull
cmp
jne
push
add
mov
jb
sbb
add
jnp
xchg
inc
enter
sub
sub
mov
loop
insl
pop
out
push
mov
std
push
mov
out
and
add
cmp
sub
add
rorl
pop
adc
les
jmp
lret
enter
jl
addr16
bound
rorl
out
ss
adc
inc
xor
push
mov
scas
mov
add
das
stc
jmp
mov
sub
mov
ljmp
adcl
loopne
shrl
and
ja
aad
std
xchg
mov
pop
sbb
pop
movsl
and
cld
fwait
divb
in
mov
add
sub
dec
add
test
pop
outsb
js
nop
push
xchg
mov
cmp
lds
lret
cmp
mov
push
mov
jnp
xorl
jge
dec
xor
jns
mov
adc
das
scas
fsubrs
add
add
sti
push
dec
pop
test
xor
and
jno
hlt
cmp
enter
xchg
rclb
push
dec
data16
pop
add
add
xchg
aad
jg
dec
xchg
popf
lcall
ret
push
enter
addb
and
and
pop
fcomip
stos
sub
sub
xor
pop
xchg
les
shrl
pop
and
js
dec
xchg
and
jle
clc
pusha
add
xchg
jae
push
and
add
sub
mov
add
jp
addb
stc
adc
cmp
sub
add
shr
ss
inc
add
mov
cltd
decb
mov
dec
jno
lds
out
bound
cmpsl
aam
or
nop
pop
mov
add
mov
sbb
es
xlat
dec
mov
outsb
push
mov
or
sub
or
pop
xchg
in
inc
mov
push
pop
mov
das
dec
jne
adc
xor
fisubrs
mov
sar
inc
add
jp
in
mov
sti
aas
sti
addb
imul
adc
add
sbb
xor
fimull
add
xchg
insl
sahf
sbb
jno
xchg
lcall
cwtl
cli
xor
add
mov
sahf
xchg
imul
pop
sub
jecxz
cs
test
mov
lds
scas
les
js
inc
add
popf
adc
cs
cmpsl
push
enter
cmp
fs
add
sub
add
add
xor
mov
push
and
lret
cwtl
pop
test
and
dec
jae
fildl
mov
sub
rorl
push
add
je
jnp
xor
addb
cwtl
dec
sub
jl
jp
in
jno
mov
gs
lret
push
mov
shrl
and
xchg
xor
faddl
inc
lea
add
add
es
jb
push
loopne
loope
pusha
add
stos
sbb
jbe
lahf
dec
xor
add
es
not
push
dec
subl
or
inc
add
push
cmpsl
sahf
inc
add
into
bnd
movsl
jg
lock
faddl
cmpsb
sahf
movb
lods
push
dec
ljmp
call
mov
xchg
xchg
or
clc
aaa
xchg
jl
sub
mov
into
jne
jle
jp
cmpsb
adc
sbb
add
mov
jmp
xchg
jmp
aad
add
repnz
call
cmpsb
test
bound
dec
rolb
inc
in
sub
rcrl
ret
andl
les
mov
pop
mov
jmp
xchg
sahf
ret
jb
outsb
push
sbb
mov
jb
cmc
ret
lahf
int
add
pop
movsl
cmp
jl
divl
lock
inc
jbe
dec
mov
mov
shrb
bound
lret
jbe
cs
sti
adc
mov
in
xchg
cmpl
sbb
add
jp
jl
add
jnp
add
or
pusha
add
fisubrs
shl
repnz
ja
pop
mulb
add
jne
pop
inc
jo
mul
push
bound
sbb
into
and
cld
subl
pop
lret
nop
enter
sub
je
add
xor
es
ja
add
sub
cmp
prefetch
pop
rcrb
inc
xchg
loopne
sbb
out
sti
mov
movb
xor
lea
xor
add
cmp
sbb
movsb
lods
jbe
jmp
jae
cmpsl
xlat
scas
test
dec
movsl
push
dec
lods
inc
add
fwait
jp
movups
sahf
into
out
stc
sub
outsb
cmp
mov
push
inc
add
pop
inc
dec
cmp
cmp
inc
stos
xor
mov
add
cmpsb
jecxz
push
mov
sti
daa
addb
outsb
lcall
shll
push
lods
xchg
xchg
pop
inc
add
pop
stc
mov
add
lock
inc
add
mov
mov
shrb
mov
lock
gs
push
ljmp
js
movsb
stos
mov
add
add
pushf
inc
add
jnp
negb
mov
add
nop
push
push
and
cld
inc
shlb
enter
out
add
and
mov
aaa
lea
xor
xchg
sti
pushf
sbb
aad
inc
loop
push
or
mov
rolb
mov
pop
mov
hlt
mov
inc
or
push
insl
inc
mov
and
mov
jae
dec
rolb
xchg
or
or
add
ffree
pop
pop
pop
jp
int3
mov
add
mov
add
sbb
mov
js
les
or
hlt
sub
cmpsl
mov
cwtl
cltd
mov
cmp
xorl
out
pop
pop
push
daa
dec
rcrb
sti
xor
cld
arpl
jg
sti
inc
add
hlt
imul
addb
in
inc
jne
addr16
xchg
mov
rcll
push
and
and
jns
sub
sbb
adc
dec
add
jecxz
std
js
jb
popf
out
xchg
push
or
xor
idivb
loope
adc
sbb
inc
add
push
cs
pop
mov
xchg
pop
repnz
in
pop
les
js
mov
dec
scas
adc
and
jmp
pop
mov
fwait
cmp
pop
jl
add
stos
in
dec
fcmovnb
add
fisttpll
sar
xor
fs
fidivs
icebp
rcll
std
adc
pop
sub
add
loopne
in
add
jne
fdivs
lock
fwait
rcr
pop
lods
int3
int
xor
add
push
outsb
add
mov
xchg
aam
add
ficomps
es
imul
movsl
lea
pop
dec
xor
sbb
add
enter
add
stos
pushf
cmp
int
adc
inc
push
xor
out
add
mov
aaa
xor
mov
stos
out
push
ror
cltd
cli
stc
jp
pop
shlb
dec
xor
add
sub
addb
mov
cli
aad
shll
scas
pop
or
sti
movb
add
scas
dec
jno
inc
add
and
js
mov
dec
mov
cmp
add
outsb
mov
les
sbb
mov
fisubrl
sub
jbe
mov
xchg
arpl
outsl
fisttpll
popf
pop
ds
not
mov
cmp
push
stos
fisubrs
cs
insl
mov
mov
sub
movsb
js
int3
xchg
loop
jle
jge
push
js
mov
adc
mov
bound
in
rolb
pushw
bound
sub
mov
sub
ljmp
xchg
cmpsl
mov
push
cs
je
addl
in
mov
push
dec
movb
and
xchg
xchg
mov
cmpsb
xor
loope
mov
popa
fs
daa
imul
inc
add
es
sbb
cltd
stos
clc
add
push
dec
jb
pop
fistl
or
sbbl
lods
pop
movsl
mov
mov
or
mov
adc
jg
loopne
or
cmp
mov
popf
jp
add
ret
fldcw
sub
les
xchg
scas
stos
ret
imul
add
movsb
pop
jle
movb
scas
lret
add
ret
or
xchg
dec
dec
outsb
push
fnop
outsl
ja
lock
sbb
repnz
push
fildl
push
push
add
call
pop
mov
add
lods
fwait
lods
js
add
mov
aaa
fldcw
bswap
fdivl
push
cmp
les
add
fsubl
pop
incl
adc
inc
add
mov
es
cli
and
push
sub
xor
lcall
add
fistpll
out
mov
lcall
add
pushl
insl
xchg
push
lahf
imul
daa
lock
add
out
lea
jne
pop
dec
pop
push
push
sub
daa
push
mov
movsb
cmp
addb
fiaddl
xor
jb
les
fcoms
repz
adc
sahf
fnstcw
lret
dec
ret
mov
das
test
pop
mov
jp
into
ret
pushf
ret
dec
addr16
jbe
jae
and
movb
and
loopne
ljmp
dec
jp
int3
aaa
mov
push
xor
mov
rol
testb
add
popf
jmp
xor
add
cmp
add
mov
xor
mov
rcrb
inc
add
mov
push
cmp
add
xchg
cwtl
das
xchg
outsl
add
inc
add
scas
ljmp
xor
inc
add
outsl
xchg
or
repnz
iret
mov
mov
in
pop
dec
cmc
pop
addb
ffreep
stos
jb
les
sti
icebp
dec
bound
and
or
fistpll
fisttpl
lods
push
add
or
fistpl
jp
pusha
add
movsb
stc
test
pop
adc
xlat
mov
add
pop
iret
mov
mov
scas
movsb
add
add
add
aad
and
ja
inc
add
call
les
jge
push
pop
jle
lock
xchg
jecxz
push
int
test
ljmp
insl
test
jo
xchg
xlat
sbb
add
xor
mov
add
int3
push
fcomi
int3
shlb
les
fldcw
adc
add
in
test
sbb
out
test
or
xor
stc
test
pop
pop
inc
add
add
xchg
les
jb
adc
inc
out
push
cmp
adc
pushf
and
ss
test
pop
sbb
inc
add
xlat
pop
xchg
sub
push
fdivp
rclb
popa
lock
dec
jle
stos
aas
xchg
movsb
lahf
lds
iret
xor
push
add
mov
add
jne
outsb
sbb
cmp
lcall
mov
ja
dec
lahf
xchg
pop
cmpsl
mov
adc
addb
sbb
push
xor
pop
or
add
fadd
and
hlt
icebp
jo
out
out
out
inc
adcl
stos
imul
leave
push
lea
add
aam
add
xor
aad
aad
xor
int
pop
mov
loope
arpl
aad
into
sarl
fdivrl
lcall
cmp
lcall
aaa
adc
mov
inc
dec
pusha
add
mov
in
xchg
jb
fsub
loop
cli
lahf
cmp
pop
ljmp
scas
cmp
out
mov
enter
jno
sub
je
pop
dec
lods
in
xchg
pop
scas
mov
mov
ss
adc
imul
or
add
loope
dec
es
add
fidivl
jg
jne
push
fstpl
inc
mov
loope
popf
add
mov
adc
mov
data16
ljmp
cmpsb
lret
rorl
jp
mov
dec
stos
push
xchg
mov
mov
add
add
imul
xor
rolb
addl
push
mov
inc
pop
sarl
enter
cli
jp
add
cli
adc
nop
bound
cmp
add
jae
add
cmpsb
gs
pop
cmp
push
lods
pop
dec
lea
movb
pop
fcom
inc
mov
ss
ja
pop
ds
inc
inc
cltd
scas
add
lcall
add
dec
dec
popf
adc
sub
sarl
jecxz
iret
jge
and
push
in
pop
mov
stos
out
push
push
pop
ret
mov
cli
fsub
cmp
pop
ja
adc
push
mov
lret
push
xchg
pop
sub
stc
jns
jbe
mov
jmp
add
jp
inc
ret
xchg
lret
and
adc
sub
jp
add
iret
and
or
rcrl
and
adc
mov
inc
add
cmp
cli
pop
cs
loop
add
int
jg
inc
add
cwtl
pushf
cwtl
daa
out
cli
repz
pusha
add
lea
pushf
jg
movsl
add
add
and
mov
push
jo
and
in
mov
dec
sub
scas
adc
or
in
and
push
xor
sbb
popf
cld
sbb
aas
test
jmp
fcmovnbe
iret
out
shlb
push
ret
lahf
fistl
jl
add
addb
daa
rolb
and
mov
jo
add
jle
addb
loopne
lds
sahf
leave
enter
insb
adc
aad
dec
test
gs
outsb
xor
popa
call
ret
xchg
repz
mov
in
jmp
add
popf
nop
sahf
not
movb
lea
cmp
daa
dec
sub
int3
mov
add
enter
inc
push
in
fwait
or
dec
pusha
add
fstp
push
enter
push
jge
inc
test
ror
or
enter
mov
popf
push
mov
movsl
repz
ljmp
add
mov
xor
pop
outsl
and
push
xchg
inc
lods
rcll
inc
add
adc
test
fwait
sub
in
add
aaa
ret
mov
ds
inc
add
or
imul
cmpl
add
add
add
pop
outsb
in
inc
push
xchg
popf
jge
test
lea
test
and
or
loop
sbb
dec
clc
rolb
sub
into
push
fstpl
and
fsub
xchg
std
mul
int
movsb
nop
fwait
and
ret
pop
xor
mov
mov
sub
outsl
lods
in
push
xor
mov
cmc
mov
loope
mov
ljmp
test
jmp
in
ficompl
jmp
or
out
push
inc
sub
or
jnp
sbb
dec
sub
mov
out
or
call
cmp
cmp
ret
sub
mov
ds
mov
std
sbb
push
add
rorl
pop
and
mov
fldl
cmp
jp
xlat
dec
mov
xor
std
pop
test
xchg
arpl
xchg
push
arpl
dec
aas
xchg
jg
mov
adc
xor
jecxz
cmc
ljmp
push
sbb
test
add
test
jg
or
stc
push
mov
popf
or
sbb
lods
cmp
mov
mov
pop
outsl
insl
cmp
adcl
cmp
add
and
fs
testl
pop
into
fdivl
in
add
cmpsl
loope
sarl
or
sbb
leave
mov
fiaddl
inc
les
aad
mov
pop
inc
add
popa
and
pop
adc
or
cmpsl
and
xor
dec
shrl
or
scas
dec
add
inc
add
call
dec
sub
sub
lock
or
pop
sbb
or
lret
movb
sbb
test
lcall
notl
leave
add
push
fisttps
push
or
inc
xor
into
push
jl
cmp
push
push
jmp
push
test
mov
push
push
pop
adc
in
leave
add
xchg
in
or
add
and
les
std
sbb
pop
ffreep
add
fisubrl
xor
scas
cltd
int
xchg
bound
data16
and
lods
xchg
lret
out
aad
cmp
push
ret
mov
sub
adc
mov
out
out
cmp
push
cmp
add
shrb
add
cmp
mov
mov
mov
int3
repz
and
movsb
xorl
xor
and
mov
cmp
add
outsb
jmp
repz
jmp
sub
add
or
xchg
inc
add
loope
ss
adc
gs
call
leave
xlat
out
mov
xchg
std
sti
mov
std
push
push
divb
nop
enter
shrb
xchg
repz
out
aaa
sbb
cltd
aas
xchg
rcl
mov
add
add
js
inc
mov
mov
xlat
mov
dec
xor
push
js
pop
mov
cltd
movb
ds
stos
icebp
je
sarl
movb
add
dec
out
pop
sahf
scas
mov
jg
mov
dec
xor
jp
sbb
imul
scas
fwait
mov
cmp
int3
cmp
add
fcmovu
es
pop
out
or
inc
inc
add
xchg
inc
gs
lods
pop
lea
add
xchg
pop
repnz
push
daa
xchg
ljmp
les
in
lods
lahf
movsb
hlt
mov
inc
loop
dec
mov
inc
add
dec
shlb
aas
mov
lahf
pop
stc
pop
xchg
mov
in
mov
push
pop
adc
pop
pop
movb
sbb
je
cmc
jo
stos
xchg
mov
xchg
pop
pop
xor
xchg
xor
mov
aaa
into
call
loop
xor
