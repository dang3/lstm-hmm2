xchg
loopne
nop
movsb
loopne
pop
test
mov
cmpsb
loopne
cmpsl
loopne
mov
loopne
jb
loopne
lcall
mov
cmpsb
loopne
dec
movsb
loopne
mov
mov
mov
loopne
mov
movsl
loopne
cltd
mov
loopne
inc
cmpsl
loopne
pop
movsb
loopne
mov
movsl
loopne
sbb
mov
test
mov
mov
loopne
sub
mov
test
loopne
test
loopne
mov
movsl
loopne
lds
mov
cmpsb
loopne
pop
movsl
loopne
xchg
movsl
loopne
xchg
movsl
loopne
sub
mov
loopne
in
test
mov
cmpsl
loopne
inc
movsl
loopne
out
movsb
loopne
std
mov
loopne
outsb
cmpsb
loopne
pop
test
mov
mov
loopne
pop
cmpsl
loopne
xchg
cmpsb
loopne
mov
test
loopne
or
loopne
dec
movsl
loopne
andb
mov
mov
loopne
aas
cmpsb
loopne
in
loopne
xchg
loopne
push
test
mov
test
mov
mov
loopne
lods
mov
loopne
xchg
cmpsb
loopne
fisubl
loopne
loop
loopne
inc
mov
loopne
add
movsb
loopne
mov
loopne
dec
mov
loopne
loope
loopne
push
movsl
loopne
xor
loopne
stc
movsl
loopne
or
loopne
xchg
mov
loopne
fldcw
loopne
adc
loopne
fwait
movsl
loopne
dec
mov
loopne
out
loopne
and
movsb
loopne
icebp
cmpsb
loopne
adc
loopne
xor
mov
mov
loopne
push
mov
loopne
movsb
loopne
cmp
loopne
shlb
out
mov
loopne
test
loopne
out
cmpsl
loopne
les
loopne
xor
loopne
push
loopne
push
mov
loopne
sbb
loopne
mov
mov
loopne
cmpsl
loopne
frstor
loopne
sub
loopne
cs
mov
mov
loopne
and
loopne
clc
movsb
loopne
hlt
mov
loopne
mulb
loopne
mov
cmpsl
loopne
xor
cmpsl
loopne
andl
loopne
adc
loopne
mov
cmpsb
loopne
jg
loopne
jp
loopne
addr16
ss
loopne
movsl
loopne
andl
loopne
nop
movsb
loopne
lea
loopne
stos
mov
loopne
and
loopne
movsb
cmpsl
loopne
sbb
loopne
shlb
loopne
loop
loopne
test
loopne
aaa
movsb
loopne
out
loopne
jmp
mov
loopne
adc
loopne
adc
loopne
adc
loopne
adc
loopne
add
loopne
and
loopne
inc
mov
loopne
mov
loopne
cli
cmpsl
loopne
sbb
mov
test
mov
movsb
loopne
cmp
mov
movsl
loopne
cmpsl
loopne
add
mov
test
mov
cmpsl
loopne
adc
mov
movsl
loopne
sbb
loopne
aas
test
loopne
std
cmpsl
loopne
mov
loopne
mov
loopne
loop
loopne
cmpsl
movsl
loopne
jg
loopne
sub
mov
loopne
mov
mov
loopne
jb
loopne
ljmp
mov
movsb
loopne
lods
movsb
loopne
lret
test
mov
cmpsl
loopne
stos
mov
loopne
adc
movsb
loopne
and
loopne
mov
loopne
xor
loopne
aad
loopne
fisubl
loopne
jle
loopne
js
loopne
outsb
mov
loopne
push
cmpsl
loopne
cwtl
mov
loopne
or
loopne
ds
mov
cmpsl
loopne
inc
cmpsl
loopne
test
loopne
jmp
loopne
and
loopne
sub
mov
test
loopne
and
loopne
cwtl
mov
loopne
add
test
loopne
xlat
movsl
loopne
xchg
mov
loopne
jl
loopne
jg
loopne
daa
cmpsb
loopne
dec
test
mov
movsb
loopne
adc
movsl
loopne
cs
mov
test
loopne
add
loopne
mov
loopne
mov
loopne
outsl
test
mov
cmpsl
loopne
xchg
cmpsb
loopne
sub
loopne
and
loopne
test
mov
loopne
sti
mov
loopne
sbb
loopne
cmp
movsb
loopne
pop
cmpsb
loopne
call
cmpsb
loopne
dec
cmpsl
loopne
test
loopne
loopne
loopne
pop
mov
loopne
adc
test
mov
cmpsl
loopne
shlb
loopne
mov
loopne
fbld
loopne
stos
mov
loopne
lock
mov
mov
loopne
loop
loopne
fsubs
loopne
dec
cmpsb
loopne
cmp
loopne
pop
movsl
loopne
xchg
cmpsb
loopne
mov
mov
loopne
in
loopne
lahf
cmpsl
loopne
push
test
loopne
add
mov
mov
loopne
jnp
loopne
cmp
loopne
mov
loopne
cmpsb
cmpsb
loopne
inc
test
loopne
insb
mov
loopne
fwait
cmpsb
loopne
push
movsl
loopne
int
loopne
and
loopne
movsl
mov
loopne
dec
movsl
loopne
and
loopne
shll
loopne
mov
cmpsl
loopne
xchg
test
mov
cmpsb
loopne
imul
push
test
mov
mov
loopne
mov
cmpsb
loopne
ret
cmpsl
loopne
fldenv
loopne
iret
movsb
loopne
lcall
mov
test
mov
movsb
loopne
sti
cmpsb
loopne
adc
loopne
sbb
loopne
jb
loopne
inc
test
mov
mov
loopne
andl
mov
mov
loopne
pop
movsl
loopne
cmc
movsl
loopne
movsb
movsb
loopne
add
loopne
rep
loopne
andl
loopne
adc
mov
cmpsb
loopne
test
loopne
lret
mov
loopne
mov
loopne
mov
loopne
aas
cmpsb
loopne
mov
cmpsb
loopne
enter
sbb
loopne
movsl
movsb
loopne
dec
mov
loopne
ret
mov
loopne
jle
loopne
and
loopne
mov
mov
loopne
fisubl
loopne
mov
mov
loopne
cmpsl
cmpsb
loopne
shll
loopne
mull
loopne
xor
loopne
mov
loopne
pop
cmpsb
loopne
inc
movsb
loopne
inc
movsl
loopne
mov
cmpsl
loopne
mov
loopne
jl
loopne
jmp
loopne
dec
cmpsb
loopne
test
loopne
shll
loopne
mov
movsl
loopne
movsb
loopne
mov
test
loopne
in
loopne
lods
movsb
loopne
enter
nop
movsb
loopne
mov
cmpsl
loopne
lcall
mov
test
loopne
or
loopne
xchg
mov
loopne
push
test
loopne
mov
loopne
bound
loopne
imul
mov
movsl
loopne
cld
cmpsl
loopne
add
loopne
fsubs
loopne
cmp
loopne
lea
loopne
jnp
loopne
out
mov
loopne
shll
mov
test
loopne
push
cmpsl
loopne
or
loopne
or
loopne
sahf
test
mov
mov
loopne
or
loopne
andb
mov
mov
loopne
test
loopne
mov
loopne
movsl
loopne
push
cmpsl
loopne
inc
cmpsl
loopne
scas
mov
loopne
inc
cmpsl
loopne
dec
test
mov
test
mov
movsl
loopne
inc
cmpsb
loopne
mov
mov
loopne
int
loopne
shrb
loopne
mov
cmpsb
loopne
xchg
cmpsl
loopne
test
loopne
xor
loopne
shll
loopne
sbb
loopne
cmp
loopne
push
cmpsb
loopne
and
loopne
cwtl
test
mov
test
mov
mov
loopne
iret
movsl
loopne
lods
movsl
loopne
sbb
loopne
xchg
mov
loopne
xlat
cmpsl
loopne
adc
mov
loopne
movsb
movsl
loopne
out
loopne
fisubl
mov
mov
loopne
add
loopne
push
movsl
loopne
iret
cmpsl
loopne
cmpsl
test
mov
movsb
loopne
mov
loopne
loope
loopne
sahf
cmpsb
loopne
inc
movsl
loopne
sbb
mov
loopne
inc
mov
loopne
js
loopne
cltd
mov
loopne
sti
movsb
loopne
insl
cmpsb
loopne
push
movsb
loopne
dec
movsb
loopne
jae
loopne
dec
movsb
loopne
out
loopne
fisubs
loopne
or
loopne
outsb
mov
loopne
loope
loopne
shlb
mov
mov
loopne
subb
mov
cmpsb
loopne
fwait
movsb
loopne
movsb
movsl
loopne
jno
loopne
jg
loopne
cmpsb
loopne
cmpsb
loopne
sub
loopne
aas
test
loopne
cmpsb
movsb
loopne
cmp
loopne
sub
mov
movsb
loopne
xchg
cmpsb
loopne
andb
mov
mov
loopne
jle
loopne
aaa
test
mov
test
loopne
jns
loopne
js
loopne
mov
loopne
sub
movsl
loopne
inc
mov
loopne
push
movsb
loopne
dec
test
mov
test
mov
cmpsl
loopne
jo
loopne
shlb
mov
mov
loopne
sub
loopne
pop
test
mov
cmpsl
loopne
push
cmpsb
loopne
xor
loopne
sti
cmpsb
loopne
int3
mov
loopne
sub
loopne
mov
loopne
sbb
loopne
lret
mov
movsl
loopne
daa
mov
loopne
fisubs
loopne
ret
mov
movsb
loopne
movsb
cmpsb
loopne
movsl
loopne
ret
mov
loopne
in
cmpsl
loopne
mov
loopne
arpl
mov
cmpsb
loopne
dec
movsb
loopne
push
mov
loopne
cmpsb
loopne
stos
movsb
loopne
xor
mov
loopne
lea
loopne
scas
movsl
loopne
iret
mov
loopne
push
mov
loopne
std
test
mov
mov
loopne
xor
loopne
dec
mov
loopne
mov
loopne
pop
movsb
loopne
pop
mov
loopne
adc
loopne
cmp
loopne
lret
mov
cmpsb
loopne
inc
cmpsb
loopne
and
loopne
xchg
cmpsl
loopne
jmp
loopne
cmc
mov
loopne
andl
loopne
je
loopne
cltd
movsb
loopne
push
cmpsb
loopne
xlat
mov
loopne
icebp
movsl
loopne
call
cmpsl
loopne
mov
movsb
loopne
aad
loopne
and
loopne
test
loopne
dec
movsb
loopne
sub
test
mov
movsb
loopne
call
movsl
loopne
out
loopne
cwtl
movsb
loopne
mov
mov
cmpsl
loopne
mov
loopne
xchg
mov
loopne
adc
loopne
xor
loopne
xor
loopne
add
loopne
ljmp
mov
movsb
loopne
xor
cmpsb
loopne
mov
loopne
fldcw
loopne
inc
movsb
loopne
lock
loopne
shlb
loopne
mov
loopne
out
loopne
or
loopne
insl
movsl
loopne
jl
loopne
mov
loopne
pusha
movsl
loopne
sbb
loopne
mov
mov
loopne
in
loopne
xchg
loopne
imul
mov
movsb
loopne
jae
loopne
xor
loopne
push
cmpsl
loopne
dec
movsb
loopne
stos
mov
loopne
xor
loopne
icebp
movsl
loopne
push
cmpsb
loopne
mov
movsb
loopne
jns
loopne
test
movsb
loopne
xor
loopne
shrb
loopne
push
test
loopne
clc
mov
loopne
cmp
loopne
xchg
mov
loopne
pop
cmpsl
loopne
and
loopne
cli
movsb
loopne
or
loopne
test
mov
cmpsl
loopne
out
loopne
adc
loopne
shll
loopne
sub
loopne
fsubl
loopne
ss
loopne
jmp
loopne
out
cmpsb
loopne
ret
movsb
loopne
push
test
mov
cmpsb
loopne
imul
mov
mov
loopne
and
loopne
mov
loopne
push
mov
loopne
inc
cmpsb
loopne
aad
loopne
mov
loopne
out
loopne
xchg
cmpsl
loopne
lods
cmpsl
loopne
cmpsb
loopne
andb
mov
cmpsl
loopne
xor
loopne
mov
loopne
mov
cmpsl
loopne
je
loopne
clc
movsl
loopne
pop
cmpsb
loopne
andb
mov
movsb
loopne
cmp
loopne
int
loopne
jge
loopne
mov
loopne
out
test
mov
cmpsb
loopne
mov
mov
loopne
mull
loopne
mov
mov
loopne
mov
mov
loopne
lea
loopne
mov
cmpsl
loopne
popf
test
mov
cmpsl
loopne
pop
test
mov
test
loopne
shlb
loopne
push
cmpsl
loopne
xchg
loopne
lcall
mov
movsl
loopne
xchg
movsb
loopne
cmpsb
loopne
inc
mov
loopne
outsb
test
mov
mov
loopne
aas
mov
loopne
ret
mov
mov
loopne
push
test
mov
mov
loopne
nop
movsl
loopne
or
mov
loopne
jecxz
loopne
imul
loopne
aaa
test
loopne
jle
loopne
mov
loopne
inc
cmpsb
loopne
xor
loopne
lock
loopne
push
movsb
loopne
out
loopne
sbb
loopne
insb
mov
loopne
and
loopne
lahf
movsl
loopne
ljmp
mov
cmpsl
loopne
inc
cmpsl
loopne
xchg
mov
loopne
andb
mov
movsb
loopne
adc
cmpsl
loopne
jbe
loopne
jnp
loopne
adc
loopne
out
mov
loopne
push
movsb
loopne
das
test
loopne
mov
cmpsb
loopne
cmpsb
loopne
aam
loopne
imul
mov
test
mov
test
mov
mov
loopne
bound
loopne
aaa
mov
loopne
adc
loopne
hlt
cmpsl
loopne
mov
mov
loopne
pop
cmpsl
loopne
loop
loopne
js
loopne
lds
loopne
adc
mov
cmpsb
loopne
insb
mov
loopne
xchg
test
mov
mov
loopne
jg
loopne
fbld
loopne
stc
mov
loopne
xor
loopne
xchg
cmpsb
loopne
loop
loopne
mov
loopne
lret
mov
mov
loopne
loope
loopne
adc
loopne
frstor
loopne
cmp
loopne
lods
cmpsb
loopne
dec
mov
loopne
push
movsl
loopne
xchg
cmpsb
loopne
push
test
loopne
sub
mov
cmpsl
loopne
test
loopne
cmp
mov
cmpsb
loopne
xor
loopne
jmp
loopne
mov
cmpsl
loopne
jge
loopne
fsubl
loopne
dec
test
mov
mov
loopne
fisubs
loopne
enter
sbb
loopne
cmc
movsb
loopne
mov
test
mov
test
mov
cmpsb
loopne
mov
loopne
mov
mov
loopne
jb
loopne
cmpsb
loopne
out
loopne
mov
loopne
pop
mov
loopne
xor
loopne
cmc
movsb
loopne
jb
loopne
pop
movsl
loopne
repz
loopne
mov
test
mov
mov
loopne
cmpsb
mov
loopne
cld
mov
loopne
add
loopne
stos
cmpsb
loopne
pop
test
mov
test
mov
movsb
loopne
and
loopne
dec
cmpsb
loopne
cmp
cmpsb
loopne
push
test
mov
mov
loopne
test
loopne
shll
mov
movsl
loopne
adc
mov
test
mov
movsl
loopne
or
loopne
mov
loopne
ja
loopne
add
loopne
mov
loopne
out
loopne
add
loopne
cmpsb
loopne
xchg
loopne
mov
loopne
fwait
mov
loopne
pusha
cmpsl
loopne
sbb
movsl
loopne
into
mov
loopne
lea
loopne
movsb
loopne
andl
mov
mov
loopne
add
mov
cmpsb
loopne
adc
movsl
loopne
stos
cmpsb
loopne
stos
cmpsl
loopne
jmp
movsb
loopne
test
mov
loopne
pop
movsl
loopne
dec
cmpsl
loopne
adc
movsb
loopne
dec
mov
loopne
fsubl
loopne
clc
test
mov
test
mov
movsb
loopne
cwtl
test
mov
test
mov
mov
loopne
lds
loopne
mov
mov
loopne
dec
movsl
loopne
adc
mov
loopne
enter
mov
loopne
scas
cmpsb
loopne
fldenv
loopne
test
mov
loopne
adc
test
mov
mov
loopne
xchg
test
mov
cmpsb
loopne
xor
mov
loopne
cmp
mov
loopne
push
cmpsl
loopne
imul
loopne
jl
loopne
ja
loopne
inc
test
loopne
shrb
loopne
push
mov
loopne
add
loopne
stos
mov
loopne
dec
mov
loopne
test
loopne
aas
cmpsb
loopne
loop
loopne
mov
loopne
dec
test
mov
mov
loopne
jb
loopne
lret
mov
loopne
sahf
test
mov
test
mov
movsl
loopne
test
test
mov
test
mov
mov
loopne
xchg
cmpsl
loopne
sbb
loopne
push
mov
loopne
sbb
test
mov
movsb
loopne
xchg
loopne
test
loopne
adc
loopne
or
mov
cmpsl
loopne
sbb
cmpsl
loopne
and
loopne
movsl
mov
loopne
push
test
loopne
sub
movsb
loopne
mov
movsb
loopne
arpl
loopne
jge
loopne
mov
loopne
in
test
mov
cmpsl
loopne
pop
test
loopne
sub
mov
test
mov
movsb
loopne
jbe
loopne
sub
loopne
jecxz
loopne
stos
cmpsb
loopne
adc
loopne
push
test
mov
mov
loopne
sbb
loopne
push
cmpsb
loopne
test
loopne
push
test
loopne
jg
loopne
mov
loopne
and
loopne
add
loopne
jg
loopne
dec
test
mov
test
mov
movsb
loopne
xchg
movsl
loopne
xchg
cmpsl
loopne
shrl
mov
mov
loopne
push
movsl
loopne
lcall
mov
cmpsb
loopne
sub
loopne
pop
cmpsb
loopne
icebp
cmpsb
loopne
andb
mov
mov
loopne
arpl
mov
mov
loopne
shlb
loopne
jecxz
loopne
clc
cmpsb
loopne
aas
movsl
loopne
enter
inc
mov
loopne
dec
movsl
loopne
xor
loopne
sahf
mov
loopne
loope
loopne
push
mov
loopne
addr16
adc
loopne
shrl
loopne
inc
cmpsl
loopne
mov
loopne
mov
loopne
xchg
cmpsl
loopne
mov
loopne
cwtl
movsl
loopne
mov
mov
loopne
mov
loopne
inc
test
mov
mov
loopne
in
loopne
jo
loopne
push
movsl
loopne
xor
loopne
pop
movsl
loopne
pop
cmpsb
loopne
jecxz
loopne
ret
movsb
loopne
dec
mov
loopne
bound
loopne
push
cmpsl
loopne
shll
mov
movsl
loopne
in
mov
loopne
ljmp
loopne
das
movsb
loopne
andl
mov
mov
loopne
iret
mov
loopne
mov
mov
loopne
mov
loopne
jg
loopne
mov
loopne
sbb
loopne
or
loopne
cmpsl
movsl
loopne
pop
mov
loopne
xchg
movsl
loopne
inc
cmpsl
loopne
stc
movsl
loopne
xchg
movsb
loopne
mov
loopne
in
mov
loopne
add
mov
test
mov
movsl
loopne
push
movsb
loopne
jae
loopne
push
mov
loopne
loopne
out
loopne
sub
loopne
das
cmpsl
loopne
ret
mov
mov
loopne
lods
cmpsb
loopne
and
loopne
mov
loopne
jo
loopne
pop
cmpsl
loopne
mov
loopne
out
cmpsl
loopne
je
loopne
xchg
movsb
loopne
mov
loopne
sub
loopne
les
loopne
adc
mov
loopne
pusha
movsl
loopne
shlb
mov
mov
loopne
shlb
loopne
xlat
cmpsb
loopne
jb
loopne
ja
loopne
sbb
loopne
fsubs
loopne
je
loopne
mov
cmpsb
loopne
fsubl
loopne
test
loopne
xchg
mov
loopne
mov
movsl
loopne
push
cmpsb
loopne
shlb
loopne
fsubl
loopne
pop
movsl
loopne
aad
loopne
add
cmpsl
loopne
xchg
movsl
loopne
in
mov
loopne
bound
loopne
das
test
loopne
cmp
loopne
cmp
loopne
aam
loopne
repnz
loopne
fldenv
mov
cmpsl
loopne
pop
mov
loopne
cmpsl
mov
loopne
adc
mov
loopne
pop
cmpsl
loopne
out
cmpsl
loopne
jecxz
loopne
xor
mov
loopne
xchg
mov
loopne
or
cmpsl
loopne
test
movsb
loopne
cmpsl
loopne
add
test
mov
mov
loopne
sub
loopne
shlb
loopne
mov
loopne
xchg
mov
loopne
into
test
mov
enter
imul
add
clc
xchg
aam
push
jg
add
call
movsb
clc
pop
outsb
dec
cmp
dec
int3
add
add
add
cmp
mov
test
jno
add
push
clc
inc
add
ja
sar
sbb
mov
clc
xchg
xor
add
flds
clc
jg
cmpsl
clc
xchg
fldl
ret
clc
lods
sub
add
imul
inc
add
add
add
pop
xchg
in
mov
js
test
inc
add
hlt
loop
mov
sbb
pop
lea
pushl
add
xabort
clc
clc
ljmp
add
push
xabort
mov
loop
fcmovnb
clc
sar
clc
sbb
es
popa
add
pop
clc
mov
fs
push
add
out
jge
jo
add
or
add
jp
sub
clc
xor
add
add
inc
clc
test
fcomip
inc
clc
mov
mov
movsl
clc
addr16
xor
add
mov
mov
add
add
fs
clc
push
add
pop
sbb
fisubl
add
clc
repz
clc
mov
add
clc
mov
pop
lock
outsb
xchg
xbegin
clc
adc
add
mov
add
sbb
add
lods
std
xor
clc
into
cmp
add
or
mov
mov
clc
clc
je
loopne
cmp
iret
inc
clc
sbb
add
sub
ja
dec
push
xor
add
clc
cmp
pop
jg
add
push
mov
push
add
inc
add
cltd
mov
nop
jne
clc
jbe
mov
shl
ss
clc
fsubrl
clc
int3
inc
clc
and
decl
add
outsb
bound
add
jmp
inc
clc
and
add
add
mov
clc
movsb
clc
mov
scas
cmp
add
push
push
add
icebp
push
hlt
jb
add
cmp
jl
sbb
xor
add
add
inc
clc
addr16
sub
stc
inc
add
mov
xchg
shll
dec
aaa
add
add
add
pushf
xor
add
pusha
add
mov
leave
fidivs
add
hlt
sub
clc
in
inc
clc
xor
add
into
mov
mov
nop
mov
add
xchg
mov
scas
pop
clc
cmp
add
out
cld
out
push
mull
add
nop
mov
add
hlt
mov
enter
inc
add
fdivl
add
loope
jnp
push
fwait
push
in
inc
clc
push
sbb
dec
das
jecxz
into
pop
sub
test
xchg
pop
clc
sar
fcmovnb
clc
xor
mov
add
add
in
fadds
lret
add
lahf
dec
jbe
inc
clc
ds
ljmp
add
sub
add
xabort
mov
add
out
sbb
add
pop
xchg
fcomps
out
loop
mov
pminub
cld
adc
add
divb
jns
js
test
mov
jae
add
add
fs
pop
push
in
mov
shll
sub
jp
clc
outsb
cmp
inc
clc
movsb
clc
jnp
xchg
jno
add
je
add
lea
add
and
add
test
out
push
add
insb
movsb
clc
mov
out
test
mov
add
or
mov
icebp
cs
je
clc
std
and
add
cmp
inc
add
mov
clc
jecxz
fadds
add
fst
fsubp
clc
xchg
pop
sbb
push
out
add
add
mov
xbegin
clc
cli
and
dec
mov
sbb
jbe
cli
lods
push
daa
clc
fnstcw
clc
loop
push
or
push
jmp
mov
leave
and
mov
jne
add
loop
push
mov
lods
lods
push
or
add
dec
push
add
outsb
push
clc
mov
push
mov
nop
cltd
bnd
xor
dec
mov
gs
pushf
fwait
addr16
sub
add
xor
add
iret
xchg
and
add
enter
aad
inc
add
aam
ljmp
pop
clc
cmp
clc
or
dec
call
jge
xor
add
clc
and
clc
adc
add
pop
fsubrp
lahf
into
adc
add
clc
xbegin
in
adc
clc
jnp
add
cmpsb
clc
or
fbstp
out
push
clc
cmp
cmp
add
add
add
xor
add
dec
aas
daa
clc
xor
mov
add
pop
iret
or
int3
fsubl
add
popf
psrld
clc
sbb
mov
add
faddl
add
push
jmp
stc
es
jecxz
iret
mov
add
xor
add
loope
sbb
bound
add
push
clc
inc
clc
scas
fsubrs
scas
xor
add
clc
lret
mov
outsl
popa
add
pop
clc
cmpsb
clc
cli
cltd
jnp
add
push
add
adc
mov
mov
cmp
cmp
clc
pop
and
add
leave
mov
ret
clc
rcrl
clc
xchg
push
das
test
sbb
enter
gs
cmpsb
clc
in
popa
add
pop
addr16
gs
incl
jae
add
clc
test
clc
jmp
clc
push
outsl
mov
jb
add
cwtl
push
sar
push
add
imul
add
in
cmp
add
mov
sub
add
cmp
clc
push
add
outsl
or
xabort
pop
clc
and
add
cmp
sahf
mov
add
lods
in
mov
ds
enter
clc
fisubrs
jl
xlat
inc
add
in
dec
pop
sbb
inc
clc
mov
cli
cmp
add
xchg
fdivs
add
cmp
in
sbb
add
scas
mov
clc
jne
daa
clc
cmp
clc
inc
clc
sub
out
sbb
clc
xor
add
add
lock
out
out
aam
add
out
xor
add
clc
ror
es
clc
loopne
sub
add
push
add
and
mov
fimull
xchg
in
jbe
clc
pop
mov
in
loop
inc
clc
out
lret
push
mov
decb
or
clc
adc
add
inc
add
mov
clc
insb
xchg
stos
pop
lahf
lcall
jl
fwait
dec
ret
lea
push
xchg
js
add
xchg
mov
clc
test
out
test
xchg
mov
push
pop
out
mov
add
sar
lret
mov
add
pop
push
mov
add
add
add
pmaxub
mov
clc
jnp
scas
adc
add
lock
cmp
mov
add
pop
cmp
mov
cmp
cli
pop
clc
xchg
pop
mov
stos
fmull
sub
or
add
xor
add
push
pop
addr16
cmp
clc
lea
pop
jns
sub
add
inc
clc
push
mov
clc
mov
scas
push
ss
clc
push
add
lahf
flds
cmp
add
adc
add
hlt
add
clc
mov
sub
cmp
add
add
clc
lret
ss
cmp
out
lahf
ja
jl
push
add
jl
mov
ja
adc
add
add
xchg
test
std
xchg
mov
sar
lods
xor
add
add
or
add
sub
fmul
sub
add
or
add
pushf
pop
mov
addr16
pop
test
xor
clc
pmuludq
add
push
int
clc
fisubl
clc
fidivrs
clc
push
add
scas
loope
aaa
sub
clc
add
add
add
and
add
cwtl
cmp
cmp
xchg
push
add
sbb
jle
clc
mov
cwtl
jp
clc
movsl
clc
repnz
clc
incl
mov
jnp
xchg
in
push
sub
push
push
push
push
push
push
call
and
sub
es
push
mov
and
xor
not
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
pop
jmp
andl
mov
lea
push
push
push
mov
push
lret
call
jg
xabort
push
xbegin
aaa
lods
inc
add
cmp
cmp
clc
ret
add
mov
clc
pop
fcmovnbe
stos
pop
arpl
add
clc
pusha
add
push
jae
add
xabort
jb
add
clc
mov
add
mov
call
mov
push
sub
pushf
or
fiadds
cmpsl
clc
divb
add
add
add
aaa
inc
clc
mov
cli
jne
mov
pushf
repnz
stos
sar
cmp
mov
jle
clc
cmpsl
clc
fistps
add
sbb
jo
add
add
ret
clc
cmp
clc
fs
cld
lcall
decl
pop
jg
jae
add
add
pop
jb
add
xlat
pop
sub
inc
add
push
fwait
scas
ja
lea
add
clc
push
add
ss
adc
cli
pop
pusha
add
cmp
clc
js
test
inc
clc
fmull
xchg
mov
sbb
clc
scas
mov
mov
aas
lret
insb
mov
clc
imul
inc
add
aaa
test
xor
inc
add
xor
push
jp
enter
push
add
sbb
inc
add
cs
clc
pop
scas
and
add
add
insb
dec
push
clc
or
and
add
or
clc
mov
repz
dec
mov
adc
add
add
clc
pusha
add
arpl
add
mov
push
ljmp
int3
sub
imul
mov
stos
imul
ja
clc
in
ds
fwait
jl
xbegin
clc
or
je
dec
stos
mov
add
loope
mov
clc
mov
and
add
add
xor
add
xchg
push
imul
sbb
push
mov
fnstcw
clc
sahf
fs
pop
fistl
add
lea
push
add
and
add
std
and
add
add
pop
clc
inc
add
cs
adc
sar
sbb
aam
add
adc
add
repz
loop
cmp
clc
filds
add
gs
mov
jb
add
lret
popa
add
or
movsb
clc
pop
sti
push
add
sub
push
mov
mov
add
pop
out
int3
daa
clc
or
clc
and
mov
add
test
lret
data16
cmc
hlt
push
add
xchg
sti
sbb
mov
inc
add
insb
mov
xbegin
pop
pop
mov
das
lret
icebp
sbb
push
add
mov
fwait
testl
clc
push
arpl
add
cmp
add
add
adc
add
js
sar
clc
es
cmpsb
clc
lcall
pop
push
add
ret
clc
cmpsl
clc
xchg
jmp
clc
scas
lods
dec
lods
and
add
sbb
loope
mov
pop
push
add
clc
mov
pop
sbb
sbb
lahf
stos
fldcw
jg
ja
mov
clc
mov
and
xor
add
sub
push
inc
clc
sahf
cltd
divb
add
arpl
add
mov
pop
loop
sar
clc
cmp
mov
sub
imul
xlat
cmp
dec
push
sbb
std
inc
clc
jp
clc
cmp
clc
mov
sbb
loope
fidivrs
add
add
cwtl
inc
clc
add
mov
inc
clc
mov
roll
add
popa
add
push
add
pop
lea
repz
add
jle
es
xor
add
add
adc
add
addr16
into
test
pushf
dec
mov
inc
clc
sbb
addr16
outsb
jecxz
fisttpl
insb
clc
or
data16
mov
push
inc
add
clc
inc
clc
pusha
add
mov
clc
cmp
add
add
ret
clc
xchg
ljmp
add
add
sbb
lret
sub
jmp
add
push
clc
sub
clc
mov
add
add
clc
or
pop
mov
lods
fwait
xor
jl
push
arpl
add
loope
aam
sub
mov
clc
clc
testb
push
add
data16
adc
add
clc
jg
dec
clc
arpl
add
lret
and
add
xbegin
add
arpl
add
out
mov
add
lods
clc
mov
in
jl
clc
mov
add
jmp
clc
jnp
clc
das
jo
add
mov
mov
mov
clc
sub
add
arpl
add
mov
clc
repz
jge
clc
arpl
add
ljmp
lret
cmp
insl
mov
clc
inc
add
jno
add
mov
hlt
mov
clc
push
clc
push
int
test
sbb
clc
and
add
clc
lods
insl
mov
and
aas
clc
mov
pop
push
add
lea
add
ret
push
add
mov
iret
pop
and
add
call
add
clc
or
add
fnstenv
add
push
add
jmp
insl
cmovno
add
sar
add
in
add
adc
add
add
inc
add
test
xchg
cmp
clc
mov
clc
jge
clc
sub
xchg
lahf
rorl
dec
mov
scas
mov
hlt
stos
test
out
pop
sbb
iret
cmp
loop,pt
jmp
lods
fidivrl
mov
add
aas
aaa
bound
add
add
xchg
enter
mov
xchg
sahf
mov
add
add
aad
clc
fistps
and
clc
je
mov
pop
xbegin
and
add
add
xchg
ja
add
loope
or
jo
add
inc
clc
ljmp
ficoms
add
xor
in
push
popa
add
pop
push
mov
in
cmp
scas
mov
cmc
xlat
jmp
jbe
push
cltd
sub
inc
clc
adc
add
push
test
ret
xor
pop
and
nop
xor
add
xchg
inc
clc
cli
ret
shll
add
popf
loopne
mov
clc
push
add
cmp
repnz
xor
das
cmp
pop
sbb
xchg
lret
pop
scas
clc
cmp
add
mov
add
and
or
add
lahf
push
add
sub
inc
add
add
push
jo
add
cmpsb
clc
and
add
add
xor
add
xor
add
pop
clc
inc
add
cli
push
aaa
mov
ja
inc
add
repnz
add
pop
and
add
adc
add
add
clc
das
mov
data16
pop
sar
xchg
lea
add
add
push
xor
add
mov
stos
popa
add
loopne
lret
mov
or
dec
cltd
loope
or
push
add
sub
add
clc
and
add
clc
add
add
iret
and
add
add
clc
shl
xchg
mov
js
xchg
aaa
cmp
add
es
mov
ljmp
and
add
add
xor
add
adc
add
clc
mov
loopne
cmp
idivb
push
mov
clc
and
add
clc
pushf
xlat
pop
clc
fistpll
xlat
xabort
outsb
add
and
add
insb
push
das
and
add
clc
movsb
clc
add
mov
add
push
add
inc
add
mov
add
pop
or
add
jp
mov
clc
mov
inc
add
lcall
clc
icebp
jns
cs
sar
lret
clc
popf
inc
clc
and
pop
mov
clc
xchg
cmp
add
bound
add
xchg
cmp
jle
clc
sar
fcmovbe
sbb
call
add
add
jge
clc
push
in
scas
daa
clc
dec
mov
adc
add
cmp
add
add
add
clc
sub
movsl
clc
leave
push
cmp
loop
sbb
rorb
cmp
add
add
clc
mov
add
sar
repz
jbe
ja
clc
xor
add
add
mov
clc
js
add
mov
test
jge
out
cld
popf
jae
add
add
enter
mov
and
jmp
inc
clc
ss
clc
mov
cmp
add
sbb
adc
push
add
fs
add
pop
pop
or
jnp
scas
sub
add
mov
cmpsl
clc
gs
push
add
lret
test
inc
clc
push
rcrl
das
rclb
clc
mov
add
sti
int3
xchg
clc
add
clc
dec
outsl
cmp
clc
cwtl
xchg
sub
mov
clc
pop
pop
mov
mov
add
clc
sbb
xchg
adc
add
cmp
pop
pop
cmp
outsl
cmp
jge
and
add
clc
clc
fadd
clc
xor
add
test
data16
inc
clc
mov
add
mov
mov
inc
add
cmp
add
clc
mov
gs
and
add
outsb
ds
mov
push
clc
jle
push
mov
clc
pushf
clc
jns
clc
out
cmpsl
clc
mov
mov
lcall
add
adc
add
fdivrl
inc
clc
movhps
outsb
pusha
add
lahf
outsb
jge
mov
clc
int3
mov
cli
adc
mov
add
adc
add
clc
dec
outsb
or
jecxz
popa
add
movsb
clc
mov
dec
push
imul
sti
xchg
or
mov
ds
lea
jb
add
sbb
sub
mov
adc
movsl
clc
mov
pop
mov
add
clc
cltd
xchg
mov
pusha
add
sub
test
clc
pop
push
mov
add
clc
idivl
repz
clc
iret
mov
scas
add
add
clc
sbb
sbb
push
loop
mov
lret
hlt
xchg
mov
clc
jne
dec
xchg
add
add
xchg
insl
sbb
lahf
movsb
clc
mov
clc
rolb
clc
pop
xabort
clc
pop
xbegin
leave
push
add
dec
or
int
in
ss
cmc
pop
sti
add
add
fnstcw
enter
add
cmpsb
clc
xor
add
add
and
add
out
aad
clc
pop
and
add
inc
clc
xchg
cmc
adc
add
clc
push
add
jge
cmp
data16
xlat
jp
clc
or
cmp
cmp
lea
add
pop
dec
ja
das
mul
clc
and
add
add
cmpsl
clc
outsb
inc
add
or
pop
xchg
sub
inc
clc
gs
adc
add
clc
jns
aas
adc
add
pop
jg
add
ss
ficoml
add
scas
jns
dec
or
aad
add
pusha
add
sar
scas
lea
add
mov
add
add
out
inc
add
add
test
mov
das
xor
add
add
loopne
dec
inc
clc
or
add
int3
cmp
clc
stos
leave
push
add
lret
cmp
gs
fsubrs
movsl
clc
xor
add
xlat
sar
lock
xchg
mov
clc
nop
out
pop
or
push
fisubrl
jge
add
add
fcoms
add
jbe
scas
loop
dec
mov
clc
cmp
clc
int3
fld
clc
jbe
addr16
mov
clc
cmp
daa
clc
sbb
clc
hlt
ret
clc
jno
add
clc
mov
movsl
clc
iret
cltd
pop
xlat
or
inc
clc
push
mov
or
clc
jp
inc
add
int
gs
cli
jg
mov
addr16
push
clc
and
add
push
mov
in
and
add
jp
push
add
stc
out
mov
mov
add
add
insb
jb
add
lods
sbb
clc
rolb
clc
cmp
add
rclb
mov
push
cli
stos
jl
add
add
lock
xchg
xchg
lods
repz
inc
clc
mov
add
mov
clc
daa
clc
jbe
clc
push
clc
inc
clc
jno
add
and
add
add
out
imul
std
es
or
clc
ffree
clc
xbegin
lock
sbb
cmp
or
clc
cli
mov
inc
clc
mov
clc
push
add
dec
push
dec
adc
repnz
xchg
jno
add
popa
add
fs
scas
or
clc
stos
mov
inc
add
xchg
nop
mov
add
jmp
iret
in
cmp
dec
daa
clc
popf
in
popa
add
mov
sub
aas
mov
clc
out
icebp
jmp
add
mov
es
and
add
dec
clc
push
add
dec
mov
inc
clc
pusha
add
daa
clc
addr16
mov
clc
cmp
je
outsl
icebp
mov
sbb
push
or
push
jb
add
inc
clc
push
clc
jnp
push
add
add
or
lret
dec
mov
mov
add
dec
xchg
rcll
enter
push
add
mov
dec
fildl
add
sbb
add
pop
or
outsl
jbe
jae
add
jns
clc
xchg
cmp
clc
nop
push
mov
add
jae
add
das
xchg
mov
add
cwtl
jns
xchg
sbb
pop
mov
add
jle
scas
mov
fldenv
add
clc
insl
jno
add
cmpsb
clc
dec
in
xor
add
add
cli
sti
push
add
js
iret
add
test
pop
sbb
adc
cmp
add
add
sar
ret
clc
xor
add
js
add
cwtl
push
imul
popf
scas
jmp
push
cmp
dec
popa
add
int3
imul
add
loopne
sbb
clc
test
adc
add
not
aaa
sub
cltd
movsl
clc
jl
popa
add
imul
out
add
fistpll
pop
aaa
adc
add
mov
cwtl
call
cwtl
push
add
xchg
sarl
sbb
add
cmp
cld
pop
cmp
mov
imul
sti
pop
jbe
movsl
clc
mov
jno
add
inc
add
push
mov
push
and
add
xchg
js
clc
cmp
das
pop
push
add
cmc
mov
sub
clc
mov
inc
add
popf
mov
push
clc
sbb
clc
sar
sub
jne
jno
add
jmp
int
add
or
clc
sbb
add
ds
in
jp
cmp
cmp
push
add
xor
add
add
add
hlt
and
add
mov
leave
sub
mov
add
int3
add
add
xlat
inc
clc
cmp
fmuls
mov
adc
add
or
cmp
clc
add
add
out
lods
push
cmc
push
cltd
jl
loope
aas
gs
nop
incl
ret
clc
or
js
clc
pushf
ljmp
add
add
pop
stos
cmp
dec
add
add
sub
add
outsl
mov
pop
repz
cmp
clc
call
clc
loopne
jno
add
or
adc
add
pop
mov
fwait
or
dec
and
ror
and
add
insb
aad
or
clc
in
popf
xor
xchg
fnstsw
data16
rcll
mov
jb
add
jae
add
arpl
add
xor
add
clc
dec
enter
jle
sub
pop
push
fimull
dec
add
add
inc
add
ja
xlat
sar
movsb
clc
sar
sbb
nop
mov
clc
loopne
mov
add
and
add
add
popa
add
out
lea
add
cmp
clc
mov
das
add
fcmovnbe
mov
add
daa
clc
leave
enter
adc
add
pusha
add
sbb
mov
adc
add
xchg
push
add
inc
clc
stos
into
repz
cmp
add
xor
cmc
adc
clc
test
test
clc
jnp
add
rcll
clc
cmpsl
clc
push
add
sbb
add
shlb
add
push
add
mov
bswap
mov
psrad
je
push
or
out
mov
mov
stos
in
adc
adc
push
add
and
push
push
dec
out
add
add
add
test
cmp
fs
and
add
imul
clc
or
inc
clc
lock
adc
loope
adc
add
add
add
cld
test
movsb
clc
adc
add
xchg
test
cmc
ret
clc
loope
inc
add
mov
clc
pop
pop
xchg
pop
es
mov
add
cmp
add
pop
loope
lcall
addr16
push
add
lods
out
mov
es
sahf
push
add
add
out
in
lcall
hlt
push
mov
clc
in
pop
clc
jno
add
clc
or
push
add
pop
push
add
sub
adc
clc
inc
add
cmp
sar
xor
xor
add
sar
xbegin
add
clc
movsb
clc
sub
inc
add
cwtl
das
sbb
in
stc
fldl
mov
clc
inc
clc
or
push
add
add
add
jnp
sbb
scas
adc
add
jbe
or
into
inc
clc
addr16
bound
add
mov
cmp
addr16
push
clc
xabort
add
xchg
cmp
add
add
dec
lea
mov
add
fists
xabort
sahf
fdivrs
lods
mov
xchg
or
mov
add
clc
add
sbb
clc
and
add
add
clc
cmp
push
add
push
cmp
mov
ficomps
cmp
add
clc
inc
add
out
fdivrl
lock
add
push
leave
aam
add
sbb
add
cmp
xchg
xchg
rcll
fistps
xabort
out
xchg
arpl
add
ss
and
add
add
mov
in
cmp
fdivs
add
loopne
xor
clc
jecxz
cmp
pop
bound
add
rcrl
insb
mov
mov
cmpsl
clc
mov
in
cmp
add
sar
cmp
sbb
sub
add
jb
add
in
or
cmp
bound
add
clc
sbb
pop
pop
jns
add
adc
add
aam
sub
pusha
add
cmpsb
clc
lea
adc
add
ror
popf
mov
add
enter
sar
mov
aam
clc
mov
clc
es
push
shll
add
cmp
add
sar
in
jne
xchg
out
inc
clc
cld
pshufw
repnz
lcall
pop
clc
jne
outsb
jb
add
clc
mov
add
fnstcw
mov
add
add
mov
clc
xor
add
and
aad
clc
mov
add
clc
stc
fimuls
clc
jg
sbb
clc
pushf
jle
mov
fdivr
stos
xchg
test
push
cmc
es
sub
aaa
push
ja
clc
jns
out
in
or
clc
mov
add
adc
adc
add
out
adc
dec
cltd
clc
test
test
popf
push
clc
dec
repz
mov
int3
push
clc
jno
add
clc
lea
imul
add
push
add
insl
cmp
aam
lahf
in
mov
add
jg
add
add
push
in
jp
clc
xchg
add
add
add
mov
clc
sbb
dec
sti
lret
mov
adc
add
pop
push
out
dec
mov
add
stc
outsb
sbb
sub
inc
add
xchg
insb
in
adc
shrl
jge
xor
int3
dec
aad
clc
xchg
popa
add
xchg
rep
ljmp
add
mov
xor
add
clc
jo
add
clc
sarb
adc
add
add
add
sub
jb
add
fsubrl
dec
adc
sti
mov
clc
clc
decl
imul
clc
jae
add
insb
fsts
add
inc
add
in
xor
add
sbb
add
fcomip
lods
mov
jmp
nop
jl
cmp
add
and
add
add
jnp
adc
std
shll
xchg
mov
mov
clc
dec
inc
clc
pushf
mov
mov
add
es
lock
cld
fcmovne
cmp
test
inc
add
movsl
clc
shrb
adc
add
clc
roll
clc
inc
clc
xor
clc
mov
and
pushf
sbb
add
cmp
scas
adc
add
push
cwtl
jmp
and
push
adc
add
add
mov
xbegin
dec
mov
clc
lret
pop
dec
out
dec
lret
pop
clc
test
enter
and
add
in
int
scas
jne
add
pop
dec
inc
clc
and
into
test
clc
fsubr
stos
push
add
push
add
and
pop
push
push
add
xchg
fidivrs
jge
loope
push
add
jnp
add
push
lods
lea
js
xchg
mov
clc
mov
clc
inc
clc
or
cmpsb
clc
adc
dec
mov
cmp
add
jnp
cli
arpl
add
clc
testl
clc
mov
add
clc
sbb
in
or
add
push
or
fwait
cmp
clc
jp
cli
nop
outsb
mov
out
or
xchg
cmp
and
add
clc
loope
clc
push
add
mov
loopne
mov
clc
imul
jl
ljmp
add
fisttps
cmp
fiadds
add
je
sbb
clc
push
add
fcompl
mov
clc
test
mov
and
add
clc
loope
add
add
mov
clc
sub
add
adc
add
sub
lcall
inc
clc
dec
adc
add
add
push
add
sub
cmpsb
clc
pop
aad
clc
or
add
add
dec
fsubl
add
cmp
xchg
cmp
xchg
cmp
test
call
nop
fcomip
loopne
xchg
sar
clc
sub
add
sar
add
add
jns
clc
cmp
add
mov
adc
add
pop
ss
add
fildl
add
mov
add
maxps
push
sbb
stos
or
sub
xchg
movsl
clc
lret
mov
fldcw
popa
add
in
movsb
clc
dec
push
add
mov
mov
add
cmp
clc
cmp
clc
push
add
cld
add
cmp
dec
lods
xor
add
pop
sti
add
add
mov
inc
clc
sub
clc
or
sub
data16
insb
mov
jns
bound
add
fbstp
ljmp
sub
nop
lods
xchg
push
cvtdq2ps
jno
add
add
jp
mov
lock
mov
pop
scas
and
add
loop
jno
add
or
mov
push
or
add
pop
shl
clc
add
add
lcall
mov
pop
dec
jecxz
imul
add
lods
lods
sbb
clc
popa
add
xchg
sbb
iret
cmp
fisubrl
aas
repz
xor
add
sbb
jae
add
clc
xchg
mov
cwtl
dec
in
inc
clc
pusha
add
test
or
inc
add
and
xor
add
add
xabort
lods
divl
fs
inc
clc
mov
cmp
jle
push
push
lods
lcall
clc
cmp
clc
test
cmp
fildl
clc
jl
clc
dec
scas
pop
std
jb
add
add
sar
iret
mov
and
push
stc
xor
add
ja
in
inc
clc
incl
add
cmpsb
clc
sti
je
in
icebp
cmp
clc
data16
sbb
add
sar
clc
xchg
mov
shrl
popa
add
out
and
add
clc
aas
lock
clc
mov
add
lods
cwtl
leave
mov
inc
add
loopne
push
vmovaps
add
cli
pop
loop
ljmp
clc
cmp
jl
jo
add
add
adc
add
dec
mov
add
sub
clc
and
add
inc
add
out
adc
jns
or
clc
fcmove
addr16
pop
push
clc
pop
clc
pop
gs
repz
add
cmp
clc
into
mov
add
mov
clc
or
clc
test
mul
clc
sub
mov
outsl
jecxz
mull
add
clc
push
add
lods
scas
dec
cli
rorb
pop
stos
xor
mov
clc
mov
insb
and
xchg
mov
sbb
pushf
stc
sti
mov
insb
sahf
jno
add
add
clc
lods
sbb
add
sub
xchg
mov
cmpsl
clc
mov
imul
push
add
test
add
test
xchg
out
jmp
pop
cmp
iret
lods
xchg
adc
add
test
mov
pop
jno
add
imul
dec
inc
add
imul
pop
lahf
jecxz
mov
adc
add
clc
scas
push
in
dec
sub
xchg
mov
sbb
add
inc
clc
add
clc
jbe
scas
push
add
push
and
add
das
jae
add
clc
or
jne
add
repz
divl
add
aaa
add
add
add
jge
gs
clc
popf
xchg
jge
and
shll
add
mov
add
popf
cmpsl
clc
push
clc
psllq
pop
mov
jbe
out
sub
add
or
in
pusha
add
aas
jo
add
in
pop
popf
adc
add
clc
mov
clc
in
jnp
mov
or
mov
jnp
fistl
xlat
ja
insl
mov
xor
add
cmpsl
clc
mov
jp
enter
iret
mov
mov
lods
push
add
cmp
daa
clc
dec
mov
xchg
push
jle
in
inc
clc
popa
add
in
out
or
data16
xor
add
sub
or
add
daa
clc
mov
mov
shl
ja
xor
add
and
add
push
cmp
clc
lods
push
inc
add
mov
stos
xor
add
clc
stos
clc
xor
add
mov
fcoml
clc
sub
add
loope
sub
mov
cmpsb
clc
out
cmc
push
add
insl
cltd
xor
add
xor
add
sub
push
clc
jbe
xor
add
pop
test
clc
xchg
dec
mov
lret
fcompl
mov
push
and
add
add
push
jne
xabort
add
shll
shlb
fbld
add
inc
clc
inc
clc
lret
pop
mov
or
movsb
clc
rcll
add
xor
add
clc
mov
cmp
push
mov
mov
stos
clc
lods
xor
add
clc
push
add
add
fsubs
dec
mov
add
cmc
test
clc
vucomiss
clc
xchg
pop
add
add
add
icebp
pop
loop
nop
roll
add
clc
es
aas
ljmp
add
icebp
jle
clc
mov
lods
fistps
clc
in
push
add
dec
pop
mov
add
sbb
jmp
imul
cmpsl
clc
jle
clc
pop
data16
xchg
frstor
clc
gs
or
sar
clc
push
push
pop
or
mov
pop
clc
pop
loopne
iret
lock
adc
add
add
ja
adc
add
clc
mov
aas
lahf
mov
rorl
lea
cmc
mov
cli
push
stos
fsubl
daa
clc
ljmp
cmp
push
test
mov
mov
clc
sbb
dec
sti
mov
ja
clc
jns
sti
aas
cmc
or
clc
inc
clc
dec
and
stos
gs
testl
mov
ret
clc
xabort
fisubrl
sti
mov
xchg
cmpsl
clc
inc
add
ljmp
mov
pop
jno
add
stos
leave
xor
add
and
add
add
jecxz
push
lcall
add
mov
sub
mov
popa
add
bound
add
mov
insb
loopne
fcmovnbe
mov
xchg
pop
clc
sahf
nop
jno
add
test
fdivl
add
clc
dec
jg
or
xor
add
cmp
jle
xchg
daa
clc
sub
int3
gs
lahf
sub
add
mov
xchg
mov
cld
pushf
add
add
jl
clc
lods
jg
clc
pinsrw
repz
pushf
push
sti
xor
mov
clc
aad
xchg
sahf
dec
mov
clc
jnp
xchg
stos
pop
ss
mov
cmp
add
repnz
jns
xchg
imulb
push
add
cmpsb
clc
addr16
fsubs
cmp
je
scas
inc
add
and
add
jmp
es
adc
add
or
xchg
mov
add
mov
loope
push
add
outsb
testl
test
clc
lcall
fistpl
test
ja
loop
aas
scas
rcr
lods
fwait
lret
jo
add
jno
add
add
leave
cmp
clc
out
clc
mov
gs
bound
add
clc
cmp
repnz
fsubrs
sar
es
adc
add
or
cmp
dec
sti
cmpsl
clc
hlt
imul
je
cld
in
in
movsl
clc
push
adc
add
idivb
add
sbb
add
clc
sets
cld
sub
fwait
mov
pop
adc
clc
or
add
leave
pop
xchg
fwait
loopne
sub
xbegin
mov
add
loope
and
add
clc
pushf
mov
jp
add
div
gs
aaa
stos
jbe
clc
leave
mov
cmp
clc
hlt
lret
outsl
xor
add
clc
rcrl
mov
shrl
cmp
call
mov
leave
fwait
xor
add
clc
add
fwait
aad
clc
add
add
sbb
or
shl
dec
xchg
mov
xchg
sbb
clc
loop
std
mov
clc
test
test
jno
add
icebp
push
add
or
push
iret
das
out
adc
add
add
outsl
and
add
add
das
dec
paddsw
ret
clc
sub
bound
add
adc
add
sar
cli
out
mov
cmp
sar
leave
movsl
clc
test
cmp
pop
jns
clc
popa
add
pop
movsl
clc
cmpsb
clc
sahf
xor
mov
arpl
add
clc
cmpsl
clc
movsb
clc
mov
push
add
fstpt
or
add
or
clc
stc
mov
xor
pop
adc
add
clc
adc
add
mov
push
add
mov
add
xbegin
scas
int3
xchg
pop
sbb
lcall
mov
add
add
shlb
add
mov
xabort
test
clc
sar
clc
fdiv
clc
scas
addr16
xchg
jbe
repz
push
sbb
add
xor
add
clc
jge
add
adc
lea
aad
daa
clc
or
dec
popl
das
mov
clc
fstl
pop
jae
add
xor
add
rcrl
add
cmp
jae
add
imul
add
push
adc
add
clc
push
and
add
sbb
es
pop
outsl
test
loope
cmc
cmpsb
clc
ja
mov
lret
outsb
adc
add
loopne
cmp
clc
fsts
and
add
add
sti
sahf
push
add
repnz
mov
jnp
add
mov
inc
add
xbegin
loop
bound
add
gs
stos
jne
add
xchg
in
push
add
jne
mov
repnz
pop
bound
add
and
add
js
shll
ja
clc
std
mov
xor
fs
push
add
inc
clc
push
add
test
call
add
lods
add
add
clc
or
clc
mov
add
push
add
pop
lea
add
repz
test
lcall
clc
lock
movsb
clc
addr16
lock
jl
cltd
loope
add
add
mov
iret
or
add
sub
test
pop
in
xchg
xor
add
add
jnp
add
and
into
iret
mov
cmp
mov
clc
or
add
cmp
dec
or
dec
adc
clc
insb
mov
pop
clc
clc
adc
clc
flds
add
pushf
sub
pop
sub
sub
outsl
dec
aaa
aam
adc
add
sbb
clc
clc
in
cld
xor
mov
sub
or
push
rorl
or
test
mov
add
fcoms
sar
or
inc
clc
fs
sbb
add
add
add
fs
ret
clc
mov
add
inc
add
mov
add
push
add
out
add
or
clc
loopne
inc
add
xor
insl
std
mov
clc
dec
xlat
ret
xor
add
clc
sbb
clc
xor
dec
imul
add
push
add
adc
clc
inc
clc
mov
add
push
inc
clc
insl
mov
inc
add
lcall
add
test
pop
lret
mov
xchg
xchg
or
clc
call
pop
data16
mov
loope
ja
lods
fisubl
fisttpll
mov
sub
xchg
push
mov
sbb
mov
add
mov
int3
mov
aaa
add
add
mov
jg
ret
add
xbegin
add
cmp
jno
add
adc
add
add
pop
push
cli
jmp
sar
sub
popa
add
cmp
push
xor
in
cmp
adc
add
jae
add
cltd
data16
lock
clc
xchg
push
push
mov
inc
add
pop
mov
imul
mulb
add
clc
and
out
fidivs
lea
jns
clc
cmp
sbb
add
jno
add
cmp
pusha
add
test
and
xor
mov
ja
cmp
add
vucomiss
push
mov
clc
mov
movsb
clc
mov
dec
mov
clc
sub
in
aam
clc
xchg
push
add
lahf
sbb
clc
pop
loope
add
shrb
add
xchg
test
in
std
mov
cmp
add
clc
xlat
add
add
fsubrp
pop
mov
into
mov
xchg
sub
push
add
out
fwait
adc
add
ret
jne
clc
cmp
add
and
add
data16
pop
or
aas
mov
in
jl
and
add
inc
add
lret
cmp
push
add
movsl
clc
cmp
clc
fcomps
mov
test
out
xor
add
xchg
inc
clc
ret
sbb
sar
clc
aas
jmp
or
fsts
inc
add
xchg
pop
xchg
fiaddl
shlb
clc
jmp
pop
fmull
clc
push
add
jnp
fwait
stc
xor
ret
clc
dec
add
add
clc
fistps
dec
sbb
std
cmpsb
clc
push
or
add
mov
add
sbb
gs
add
test
int
clc
ds
popa
add
data16
je
add
add
clc
sbb
mov
cmp
add
fdivl
add
clc
mov
add
add
add
push
and
add
sub
add
fwait
icebp
movsb
clc
test
and
add
sar
push
add
dec
jg
cmpsl
clc
pop
cld
pop
repnz
dec
scas
iret
xor
add
mov
icebp
push
pop
mov
add
loope
cli
jecxz
and
add
ss
xchg
mov
push
add
loop
movsb
clc
cltd
xor
add
mov
in
test
pop
inc
clc
test
jbe
add
movsl
clc
shr
xor
add
jno
add
add
out
and
fwait
push
pop
mov
clc
clc
mov
imul
lods
std
xlat
cmp
xor
arpl
add
clc
addr16
repz
clc
jp
cmp
test
sub
clc
xor
add
ret
hlt
je
add
popa
add
cmp
call
add
xchg
js
sbb
add
cltd
ja
mov
fstps
data16
nop
inc
add
inc
clc
stos
icebp
insb
push
nop
dec
mov
add
clc
xbegin
adc
add
add
fldt
shll
add
jmp
adc
add
clc
int3
ss
cmp
clc
jb
add
add
xor
add
popf
pusha
add
es
repz
aas
pop
sar
adc
add
clc
aam
sbb
in
sbb
clc
and
add
add
popa
add
daa
clc
jo
add
add
out
add
add
xor
add
fdivl
clc
cs
clc
jp
clc
addr16
cmp
out
add
add
cltd
je
mull
aam
scas
dec
lock
push
out
push
add
xor
add
clc
aaa
jne
in
ret
outsb
outsb
add
ja
cmp
add
popf
scas
dec
mov
add
aad
mov
clc
popa
add
nop
lods
xor
add
sub
int3
xor
add
clc
fmuls
cmp
clc
xchg
popa
add
sti
jbe
sbb
lods
aam
xor
add
cmpsl
clc
jge
shll
das
xor
add
aaa
and
loop
fidivl
clc
cli
test
sbb
add
pop
dec
mov
loop
stc
je
pushf
pop
adc
popf
xchg
and
add
cmp
jne
jg
xor
add
add
lret
sar
clc
add
add
xchg
loopne
fdivrp
pop
scas
fisttps
add
cmp
add
dec
push
push
add
add
add
push
add
out
vmovaps
pusha
add
cmpsl
clc
mov
cmp
out
xchg
dec
add
add
stos
add
push
out
xchg
ds
xor
add
add
add
add
add
ret
clc
std
mov
jp
mov
clc
jecxz
mov
xor
mov
lods
dec
push
xor
clc
and
mov
add
pop
sbb
add
adc
add
push
add
sar
add
xor
add
clc
push
add
jno
add
clc
or
ror
or
aam
add
push
add
jbe
stc
jo
add
add
clc
daa
clc
cmp
add
imul
or
mov
jle
clc
xor
add
xchg
fisubrl
cmp
clc
je
clc
mov
dec
mov
sbb
fstl
jg
lea
dec
cmpsb
clc
inc
add
cltd
sar
lods
xchg
cmpsl
clc
out
inc
clc
bound
add
pop
cmp
aaa
fs
outsl
out
out
dec
jmp
add
clc
imul
jb
add
jne
outsb
insl
imul
int3
scas
dec
push
mov
and
in
xchg
test
das
mov
sub
sub
add
add
add
mov
aas
ret
add
push
repz
or
mov
sar
clc
out
push
es
js
jp
or
out
xchg
shll
add
jbe
add
bound
add
push
xchg
fildll
xor
add
ficoml
out
in
into
sub
clc
aam
cld
and
add
push
pusha
add
jbe
clc
fsubl
clc
into
imul
into
hlt
mov
clc
in
mov
mov
add
xlat
push
clc
cmpsb
clc
pop
cwtl
sbb
jae
add
fmull
pushf
inc
clc
repz
pop
xchg
dec
mov
clc
mov
add
pop
lahf
stos
pop
test
mov
in
cltd
outsb
enter
add
lods
lea
clc
cmc
in
jl
clc
cmp
sbb
movsl
clc
fisubl
xor
add
or
enter
pop
mov
mov
mov
test
or
add
inc
clc
out
mov
clc
inc
add
in
imul
mov
in
cwtl
popf
pop
inc
clc
ficomps
mov
clc
xor
add
gs
mov
mov
add
mov
add
sub
aaa
aad
arpl
add
clc
iret
pop
adc
add
movsb
clc
dec
dec
sbb
sbb
add
cmp
rcll
mov
mov
loop
test
cmpsl
clc
imul
mov
pop
ficoml
add
pushf
icebp
outsl
or
lea
add
cs
mov
cmp
clc
dec
std
daa
clc
daa
clc
sub
jp
clc
jp
aaa
jecxz
mov
clc
jne
clc
cmp
add
fwait
icebp
jmp
add
cmp
mov
lcall
mov
lods
into
adc
inc
add
cmpsb
clc
clc
cmpsl
clc
adc
add
inc
clc
adc
add
addr16
sar
add
lahf
and
add
xchg
push
add
call
add
add
stos
int
cmp
scas
leave
test
ljmp
add
pushf
jp
add
cltd
cmp
add
sub
bnd
popa
add
add
add
or
clc
xor
add
fwait
push
add
call
inc
clc
push
add
or
add
outsb
js
icebp
hlt
sub
cmp
mov
add
es
mov
stos
push
and
add
test
int
add
test
sar
and
add
clc
idivb
add
mov
add
add
push
add
cs
clc
pop
clc
jl
divb
add
add
jmp
clc
into
and
add
dec
push
push
dec
lret
ficomps
push
add
in
outsb
arpl
add
xchg
sbb
add
xchg
push
sub
clc
add
add
add
lods
mov
jle
add
sub
add
cmpsl
clc
mov
add
mov
add
clc
hlt
in
ret
clc
xor
mov
add
add
adc
clc
cmp
xor
jne
clc
dec
aam
jge
cmp
add
xchg
jns
mov
jae
add
clc
sub
out
mov
clc
pop
clc
jne
fimuls
add
dec
adc
add
fsubrp
ss
sbb
jb
add
lock
clc
push
add
leave
mov
clc
xchg
adc
clc
adc
or
das
fisttpl
clc
loopne
adc
add
movsb
clc
push
in
or
clc
push
imul
clc
lret
lods
push
mov
clc
aam
clc
call
mov
or
data16
lret
loope
lret
clc
jo
add
out
arpl
add
je
int3
cmp
mov
add
pop
lret
in
test
jb
add
or
mov
mov
in
cmpsb
clc
lret
jb
add
push
dec
out
dec
jne
cmp
add
cltd
add
add
clc
imul
adc
add
clc
adc
add
dec
add
add
clc
inc
add
sub
push
add
mov
clc
inc
clc
lahf
or
clc
sbb
add
lock
add
sub
dec
xor
lock
clc
push
lret
mov
push
sti
shrl
add
mov
sub
push
xor
add
jl
sbb
clc
roll
add
clc
jo
add
clc
cmp
mov
push
add
xor
add
or
test
mov
add
cmp
or
push
or
ret
clc
mov
sbb
clc
hlt
mov
testl
add
clc
movsl
clc
insb
mov
fstps
cmp
mov
jp
clc
lahf
jbe
clc
mov
ja
add
xchg
cmp
add
test
jecxz
cmp
add
clc
add
add
sub
add
xor
add
add
add
pop
or
popf
data16
cmp
sub
mov
add
xor
add
add
inc
clc
and
scas
das
filds
imul
mov
lret
xchg
jno
add
clc
mov
add
cmp
ja
icebp
sahf
pushf
xor
add
add
ficompl
add
jae
add
clc
sbb
lret
mov
fdiv
repz
clc
leave
inc
add
outsb
paddd
push
mov
add
xabort
outsl
call
add
out
stos
xchg
push
jnp
clc
scas
fldt
call
clc
cli
dec
gs
jmp
or
add
or
clc
imul
ficompl
js
mov
mov
out
mov
mov
insb
adc
clc
aad
flds
das
outsb
lock
outsb
and
add
add
cmpsb
clc
lret
add
cli
stos
push
add
push
out
jp
clc
jmp
scas
cmc
repnz
clc
xchg
in
xor
add
xbegin
add
sbb
aaa
ljmp
push
into
push
xchg
mov
add
add
clc
daa
clc
mov
ss
lods
test
int3
jo
add
and
add
lret
ds
dec
scas
inc
add
mov
and
add
cmp
push
and
add
add
push
add
bound
add
clc
mov
ret
clc
mov
and
out
nop
call
addr16
mov
sahf
xchg
inc
clc
bound
add
fisttpll
cld
push
sub
jl
mov
clc
mov
xlat
ficoml
add
clc
movups
add
add
clc
mov
pop
icebp
ficompl
push
add
pop
enter
iret
and
lret
insb
notl
add
push
jns
stc
inc
add
mov
add
mov
add
es
mov
decb
pop
pop
jecxz,pt
xor
jl
adc
add
xlat
stc
dec
push
adc
add
add
xlat
je
clc
push
jnp
clc
dec
dec
pop
push
sub
add
and
mov
and
sub
movsb
clc
pop
push
clc
jecxz
sahf
adc
add
clc
ljmp
jle
clc
scas
mov
add
pushf
movsb
clc
movsb
clc
push
add
stos
cld
outsb
pop
ficompl
repnz
push
hlt
stos
jge
inc
add
sub
and
add
inc
clc
repz
call
push
add
lret
dec
xchg
cmp
push
add
inc
add
sahf
or
mov
add
add
and
add
clc
pop
inc
clc
aas
pop
jb
add
clc
sub
push
add
test
mov
inc
add
cwtl
in
sbb
mov
cltd
xlat
nop
aam
call
add
jae
add
jge
sub
add
data16
test
outsl
mov
sbb
add
cli
inc
clc
clc
dec
mov
fdiv
lret
pushf
dec
stos
or
clc
mov
clc
clc
movsl
clc
dec
dec
aad
filds
add
adc
push
fistpll
mov
lret
jbe
pop
clc
stos
mov
sti
std
clc
imul
add
add
jge
push
add
call
add
and
add
add
and
add
std
insl
dec
xabort
add
in
sub
out
mov
push
stc
xlat
mov
xlat
inc
clc
outsb
movsb
clc
outsb
jbe
cmp
fs
mov
add
or
cmp
clc
loope
jns
lret
jno
add
xchg
data16
pop
clc
cmp
idivb
sbb
aam
test
jecxz
arpl
add
pusha
add
ret
clc
insb
lret
je
fimuls
add
test
or
cwtl
jl
clc
pop
data16
jne
clc
cmpsb
clc
or
push
add
lea
jmp
add
sar
clc
push
inc
add
jecxz
std
jp
loop
adc
add
add
xchg
pop
shll
clc
dec
es
sub
jmp
xabort
sub
clc
jle
lods
jb
add
add
adc
add
add
addr16
iret
insl
xlat
test
in
pop
sahf
lods
push
push
jg
fxch
addr16
cmp
clc
xchg
jecxz
mov
sbb
inc
add
jns
clc
push
mov
test
leave
shll
out
in
insb
or
pushf
aaa
mov
pop
out
add
mov
clc
or
add
xchg
pop
add
add
clc
sbb
clc
add
add
loop
inc
clc
jle
jecxz
mov
add
sub
xchg
jge
mov
add
or
popl
add
outsb
mov
cli
ret
hlt
xchg
xchg
push
ret
clc
push
add
inc
add
loop
in
mov
add
mov
ret
testb
add
jb
add
add
inc
clc
mov
clc
sbb
clc
scas
addr16
pop
fs
xchg
xor
add
xchg
lret
xor
add
clc
fs
mov
jo
add
jo
add
push
clc
cmp
add
bound
add
out
aas
push
add
cltd
test
sar
enter
enter
push
dec
or
add
push
add
push
shrb
clc
ds
xchg
test
ret
clc
xchg
dec
stos
mov
or
jb
add
add
clc
xabort
add
cmpsl
clc
pop
icebp
push
add
jnp
lock
jns
push
cli
cmc
add
add
clc
mov
xchg
xor
add
add
add
push
clc
cmove
cld
in
loop
cmp
clc
inc
clc
rcll
inc
add
popa
add
iret
add
add
mov
es
dec
sar
data16
mov
cld
cmp
vmulps
cltd
cmpsb
clc
fwait
loop
rol
clc
sbb
clc
fsubrs
enter
mov
clc
fiadds
scas
inc
clc
xchg
scas
js
mov
add
ljmp
dec
add
add
sahf
jmp
add
repz
aam
jge
clc
push
scas
in
mov
mov
loope
xchg
dec
mov
clc
rep
clc
jae
add
fsubs
add
jp
hlt
in
or
and
cmp
add
pop
clc
je
clc
psubw
add
sub
lret
pop
jno
add
sub
adc
add
jmp
sar
xor
add
dec
pop
jns
pop
push
cmp
outsl
fsubrl
clc
adc
add
js
clc
hlt
out
mov
dec
cmp
mov
aas
adc
add
movsl
clc
cld
imul
lret
add
add
add
clc
pop
dec
mov
add
cmp
add
xchg
out
test
call
js,pn
xchg
sbb
imul
out
in
jmp
inc
clc
sub
add
insb
mov
add
add
mov
lods
or
add
pop
lods
sarb
cmp
xchg
xchg
xchg
sub
and
pop
divl
and
add
jg
ss
sbb
add
insl
outsl
std
push
fldt
add
test
ret
clc
pop
std
mov
dec
adc
add
dec
lcall
push
add
pop
and
add
stos
adc
jl
clc
fs
or
sbb
leave
xor
add
cmpsb
clc
cld
addr16
test
loopne
cmc
fistpl
stos
mov
mov
dec
push
add
cmpsl
clc
dec
lods
daa
clc
sbb
cmp
icebp
stos
mov
pop
pop
push
lahf
push
divb
sub
add
cmp
add
adc
add
mov
int
mov
and
add
add
sti
lret
bound
add
add
add
clc
clc
pop
scas
in
cmp
add
sbb
fs
mov
imul
xchg
lahf
pop
add
add
in
pusha
add
pop
pop
jp
test
sahf
fs
outsb
or
clc
push
add
mov
clc
cmp
push
or
clc
int3
xchg
sbb
clc
jb
add
addr16
div
add
add
test
inc
add
sbb
clc
xchg
xchg
mov
clc
jmp
int3
mov
dec
cmc
push
add
adc
imul
clc
mov
clc
dec
cmp
mov
add
add
jno
add
clc
or
add
in
in
adc
clc
jmp
sbb
fsts
add
and
add
jp
mov
add
push
add
icebp
sub
cmp
jo
add
xchg
clc
insl
xor
add
add
lahf
incl
xor
add
clc
rcr
mov
movsl
clc
lahf
mov
dec
imul
adc
add
call
in
das
cmp
clc
mov
push
add
xor
cmp
cmp
fs
jmp
clc
and
add
inc
add
xlat
clc
in
das
gs
mov
js
jl
addr16
add
add
add
pop
ret
clc
ljmp
add
and
add
bound
add
adc
add
loopne
fiaddl
add
jb
add
clc
xlat
jl
test
mov
add
add
add
add
mov
cltd
mov
sar
add
nop
arpl
add
add
rolb
add
inc
clc
push
add
xchg
xchg
outsl
imul
xor
add
clc
icebp
mov
ret
inc
add
mov
jns
clc
push
clc
aas
jecxz
bound
add
pop
cmp
xchg
fwait
test
jecxz
mov
lock
add
sub
add
add
push
or
je
in
lret
or
nop
clc
mov
add
mov
mov
dec
cmp
int3
inc
add
dec
dec
sahf
test
add
pop
jo
add
mov
clc
jbe
add
mov
add
ljmp
sub
clc
lods
in
mov
hlt
adc
add
dec
push
add
lock
and
and
add
and
add
lods
mov
push
add
fidivrs
mov
pop
xor
add
add
add
add
add
fwait
stos
cmp
sar
add
fwait
and
add
add
add
cld
xchg
pop
fmull
jo
add
imul
cs
clc
xlat
test
je
add
mov
and
add
add
add
lret
aaa
inc
clc
fistpl
add
cmpsl
clc
dec
push
add
ret
push
je
xchg
sub
clc
cmp
cli
mov
add
ret
clc
push
lods
xor
add
add
add
mov
mov
jecxz
xbegin
std
adc
add
rorb
sub
add
clc
mov
jecxz
and
push
ds
add
pop
das
aam
jbe
jge
xor
test
clc
push
pushf
jg
mov
or
clc
mull
clc
int
clc
pop
push
mov
add
push
add
xchg
sbb
popf
test
clc
fisubrl
mul
clc
cmp
in
bound
add
out
mov
int
idiv
inc
add
out
es
push
inc
add
push
dec
fwait
mov
push
es
sbb
out
or
or
into
sub
cmpsb
clc
mov
add
fcompl
xchg
fcom
mov
lret
cltd
aaa
pusha
add
push
add
cmp
add
ret
clc
lret
inc
clc
std
mov
clc
int
jnp
add
push
add
mov
scas
sub
ret
mov
add
adc
add
add
clc
aas
inc
add
or
pop
int3
dec
ja
fwait
inc
clc
sbb
fsubrl
in
inc
add
sub
clc
rcl
xchg
fists
add
clc
or
pop
pop
out
sub
in
sbb
or
clc
jecxz
es
jb
add
inc
clc
mov
hlt
xchg
daa
clc
std
sbb
out
sbb
push
jp
push
dec
inc
clc
inc
add
jmp
lea
push
dec
data16
lret
and
add
push
testb
lahf
in
sar
mov
clc
sbb
push
add
pop
jae
add
sbb
cmp
clc
pop
sbb
add
or
clc
imul
mov
stos
fsubs
cmp
clc
das
ja
push
xor
add
add
add
aas
xor
add
cltd
cmpsl
clc
aas
enter
add
popf
cli
mov
adc
add
popa
add
pop
test
clc
scas
pop
pop
test
stos
cmp
sarl
or
add
scas
mov
ret
mov
addr16
adc
add
add
das
or
cmp
std
or
add
add
adc
add
clc
sbb
clc
xchg
mov
jo
add
push
arpl
add
clc
aaa
pop
in
scas
fsubrl
push
adc
add
clc
xor
add
clc
outsb
cmp
add
lock
mov
mov
cld
popa
add
insl
aaa
mov
sahf
out
xor
fs
rol
clc
fldcw
pop
outsl
rclb
dec
sbb
jmp
icebp
fistpl
add
mov
add
mov
push
clc
inc
add
decb
jnp
pusha
add
sub
shrl
add
mov
push
lret
lock
pop
hlt
rcll
mov
add
clc
or
fldenv
sbb
rorl
stos
or
adc
add
adc
add
mov
pop
notb
add
add
push
sub
inc
clc
jmp
add
sbb
push
mov
add
clc
fistpll
cmc
pop
clc
sub
inc
clc
push
add
scas
hlt
rcll
pushf
leave
dec
xchg
popa
add
je
clc
loopne
jns
mov
inc
add
sub
cld
inc
add
imul
sar
add
sbb
cmc
fidivrl
add
push
add
arpl
add
test
mov
or
push
pop
loopne
aas
lods
xor
loopne
sbb
jne
cmp
clc
adc
add
cmp
push
add
bound
add
add
cmp
clc
push
add
ljmp
adc
add
push
popf
in
push
add
loop
mov
clc
insl
outsl
sub
clc
sub
pop
clc
mov
sub
and
add
add
add
add
add
movsl
clc
dec
scas
filds
add
clc
insb
jb
add
mov
pop
ja
clc
mov
addr16
jecxz
out
or
outsl
gs
ljmp
jae
add
clc
into
je
add
int3
inc
add
add
add
xchg
xchg
cmp
sbb
xchg
pusha
add
inc
clc
gs
jmp
add
or
xchg
pop
lret
ljmp
cltd
pmaxub
push
clc
jnp
rcrb
push
jnp
clc
dec
sbb
clc
fiadds
add
into
in
mov
mov
mov
cmp
out
sar
clc
int
cmpsb
clc
cmp
add
add
int3
cmp
pop
inc
clc
mov
pop
in
arpl
add
xchg
ds
stos
add
add
ja
dec
lahf
push
xor
fcoml
add
ja
jns
popa
add
cmpsl
clc
push
add
mov
or
add
outsl
mov
out
arpl
add
or
clc
mov
mov
popf
aam
xor
out
cs
sbb
jae
add
mov
add
fstps
bound
add
xor
add
clc
cmp
dec
clc
cmpsb
clc
xchg
jge
add
in
push
add
inc
clc
popf
push
sub
inc
clc
jo
add
clc
aam
jb
add
out
lret
adc
add
add
into
lods
xchg
push
dec
xor
add
sahf
stos
gs
cmp
jne
inc
clc
sar
mov
testb
add
add
mov
test
add
shlb
movsl
clc
daa
clc
cmp
test
out
gs
clc
jae
add
mov
imul
icebp
sub
add
and
add
sub
data16
int3
stos
jbe
and
add
inc
clc
xlat
fs
mov
sub
popf
xabort
add
inc
add
pop
xbegin
sbb
xor
push
lea
push
xabort
mov
shrl
outsb
dec
dec
mov
push
bndstx
add
loop
mov
xor
add
sbb
sbb
or
pushf
mov
add
mov
add
stos
cmp
xabort
sub
adc
add
lret
clc
fwait
cmp
add
enter
add
in
pop
xor
or
add
mov
clc
jne
psubusb
clc
pop
sub
add
scas
xbegin
add
cmpsl
clc
int
add
test
push
add
mov
bswap
int3
dec
cmp
sar
sbb
mov
es
test
clc
sub
clc
icebp
cli
mov
and
add
push
add
jnp
repz
mov
jl
lea
add
notl
dec
mov
lret
fmuls
gs
int
and
add
add
rcll
mov
lods
fwait
adc
add
add
push
aas
data16
dec
int3
rcrl
or
mov
aam
push
mov
clc
out
loop
sbb
rcrl
pop
push
add
xchg
sbb
add
stos
fstps
clc
inc
add
mov
mov
add
shlb
or
push
lahf
pop
insl
into
fisubs
inc
clc
outsb
mov
clc
flds
clc
fxch
or
add
sahf
arpl
add
js
lret
clc
mov
clc
test
ret
cli
push
and
add
daa
clc
xchg
mov
clc
lods
sub
xchg
lods
push
add
fs
cmpsl
clc
jg
xlat
jb
add
sahf
lods
add
add
add
inc
add
mov
popa
add
cld
aas
sub
add
jecxz
push
cmc
sbb
fdivs
jge
clc
ret
clc
ret
clc
scas
mov
es
iret
addr16
leave
push
add
mov
clc
xchg
aas
jne
jle
clc
ficoms
cmp
ds
add
sbb
mov
xor
add
add
add
add
add
mov
outsl
mov
add
lods
sub
push
add
pop
lock
aaa
cmp
add
cmp
add
cmc
movsl
clc
faddl
add
xchg
vorps
pop
jecxz
sahf
inc
clc
fwait
sub
enter
dec
mov
add
xor
add
add
es
cwtl
or
mov
push
add
out
cli
xlat
add
add
cwtl
jae
add
es
jnp
mov
enter
add
xchg
lods
xchg
adc
add
xchg
sub
fistps
adc
out
add
add
clc
and
add
imul
xchg
pop
loop
sub
lret
jp
add
pusha
add
push
or
add
pop
inc
clc
mov
call
add
cmp
mov
cmp
clc
push
clc
xchg
push
inc
add
push
add
fidivl
lret
cmp
add
insl
lods
xor
add
in
fucom
clc
xchg
ljmp
movsl
clc
or
fstpt
dec
icebp
xchg
imull
sar
add
add
clc
int3
dec
pop
popf
mov
jmp
dec
lock
insb
xchg
mov
pusha
add
jl
test
es
add
jecxz
repz
fsubrs
sar
in
fmuls
add
xchg
xchg
jecxz
ja
add
mov
clc
xor
add
out
cmpsl
clc
das
pop
test
xchg
cmp
push
clc
xor
clc
imul
add
add
push
add
inc
clc
daa
clc
push
inc
add
or
dec
cmp
mov
std
inc
add
push
cmp
dec
out
mov
je
std
or
clc
int3
jns,pn
outsb
cmp
lock
jnp
clc
scas
mov
add
mov
int
jge
inc
add
popa
add
mov
push
add
fs
pop
cmp
clc
mov
push
clc
mov
add
pop
xor
add
ffreep
clc
mov
sub
add
incb
clc
popa
add
sbb
nop
xor
add
xor
add
popa
add
jecxz
jecxz
fs
fbld
add
jo
add
pop
pop
clc
push
inc
clc
cmp
add
or
cmpsl
clc
lahf
jp
cli
and
add
add
add
clc
xchg
pop
sub
mov
test
cmp
xchg
clc
das
repnz
clc
xchg
push
add
mov
sbb
cmp
clc
into
or
ljmp
cli
or
adc
add
add
dec
pop
mov
mov
add
dec
data16
sbb
add
mov
add
jno
add
cmp
or
clc
xor
daa
clc
sahf
xchg
cmpsl
clc
movsl
clc
xor
add
add
xchg
push
add
hlt
xchg
pop
loop
push
inc
clc
xor
clc
fwait
push
mov
add
add
add
add
sbb
mov
add
stc
out
fdivrs
adc
add
mov
cs
test
cli
stos
mov
clc
test
clc
push
add
cmc
sar
xor
clc
or
add
pop
test
mov
xchg
lret
clc
mov
mov
add
mov
cld
fiadds
add
xlat
sub
mov
mov
test
and
add
and
add
push
cmpsl
clc
add
add
dec
and
add
and
add
add
ljmp
clc
flds
clc
sahf
add
test
adc
cmp
sub
inc
add
adc
in
and
add
je
outsb
inc
clc
ret
clc
jle
and
add
in
mov
sti
jmp
add
leave
xor
add
or
add
inc
clc
xchg
lret
fs
aas
xchg
out
dec
push
xchg
jge
pop
jbe
or
aam
int3
dec
das
repz
clc
aad
mov
add
push
lcall
addr16
data16
pop
xor
add
sbb
add
add
clc
sahf
inc
clc
xlat
push
imul
mov
push
add
sub
xchg
pop
mov
cmp
add
sub
add
inc
add
into
and
scas
pop
sahf
xor
add
mov
xor
sbb
xchg
jnp
cmp
clc
pop
mov
sbb
clc
inc
add
arpl
add
clc
dec
adc
add
clc
imul
in
ret
add
sbb
scas
cmc
dec
push
add
adc
add
dec
jns
inc
clc
mov
clc
es
or
popf
mov
xchg
pop
mov
hlt
xchg
gs
adc
add
pop
daa
clc
call
or
clc
and
jge
out
xchg
xor
add
mov
clc
lcall
add
pop
movsb
clc
sar
xchg
std
cld
dec
hlt
sbb
add
nop
nop
stos
xchg
nop
iret
data16
std
mov
rorb
clc
or
add
xor
add
std
add
add
inc
add
cmpsl
clc
movsb
clc
in
cmp
mov
jbe
jge
add
mov
clc
call
sub
or
xabort
js
clc
hlt
pop
inc
clc
jns
mov
xchg
pop
xchg
scas
popa
add
bound
add
clc
jnp
icebp
loope
movsb
clc
pop
shrl
repnz
mov
nop
mov
add
stos
xchg
add
add
jle
cmp
int3
loope
mov
mov
jns
int
add
add
add
cmp
aad
cmc
mov
lods
mov
sub
add
mov
clc
mov
jg
pop
clc
cs
clc
insb
cmp
aam
sbb
mov
add
outsl
out
xchg
sahf
ffreep
clc
jno
add
dec
bound
add
fiaddl
clc
pop
inc
add
mov
out
arpl
add
add
clc
push
cmp
add
xchg
mov
push
add
add
lods
dec
add
adc
add
add
clc
fdivrs
clc
xor
add
mov
xchg
sbb
add
add
clc
mov
clc
test
scas
xchg
aad
repnz
test
cmp
clc
cmp
pop
jne
sbb
ss
sub
repnz
lea
cmp
jle
outsb
scas
testl
inc
clc
jae
add
add
xchg
cmp
dec
aad
add
jns
cmp
ret
add
lahf
cmp
xchg
lret
out
sbb
push
add
mov
clc
pop
insl
jecxz
loope
jno
add
add
repz
push
add
loope
adc
add
inc
add
xor
add
pop
clc
sub
clc
mov
add
sbb
and
add
clc
inc
add
test
add
data16
es
das
xchg
adc
sub
rclb
add
add
dec
cmp
adc
aam
push
jnp
sar
add
repnz
add
sub
and
add
pop
pushf
jb
add
clc
sub
dec
fsubs
clc
mov
movsb
clc
push
sbb
out
mov
movsb
clc
xchg
movsl
clc
sbb
clc
jg
mov
or
clc
push
clc
pop
adc
add
popf
cmp
add
jns
sar
xor
add
push
inc
add
stos
push
clc
xbegin
jae
add
add
cmp
add
aaa
add
js
sub
clc
std
pushf
xabort
add
js
test
add
push
cmp
jle
jp
mov
xchg
xlat
push
add
lods
shlb
mov
cli
leave
sti
stc
jmp
mov
call
clc
adc
add
dec
dec
loopne
mov
sub
add
xor
add
add
out
pop
cmpsb
clc
test
pop
jl
add
jecxz
xor
aam
pop
mov
add
add
enter
clc
fstpl
clc
vandps
cmp
push
clc
dec
gs
pop
lahf
sub
add
mov
div
inc
clc
jne
clc
loope
sub
add
pop
xchg
pusha
add
and
movsl
clc
cmp
rcrl
ret
mov
pop
in
test
mov
and
mov
or
stos
lcall
cli
in
sarl
lret
add
push
add
into
std
popa
add
cmp
sti
lahf
in
jo
add
add
jbe
out
sbb
clc
sbb
add
xor
clc
pop
clc
mov
add
add
add
aad
sbb
clc
ret
clc
sbb
lcall
or
lock
gs
jb
add
clc
inc
add
push
and
add
clc
mov
clc
xor
add
add
loopne
sbb
cmp
aad
add
loopne
mov
mov
mov
or
mov
clc
xor
cmp
add
lret
fildll
pop
jno
add
mov
cmc
jle
clc
push
add
data16
jne
test
sbb
or
clc
push
lret
iret
lods
and
add
add
clc
lret
fwait
data16
out
push
clc
or
ficoms
add
clc
int
es
ficoml
push
or
xchg
nop
into
jge
sub
push
scas
lock
mov
add
xor
add
cmp
clc
aam
adc
add
mov
ss
and
add
int3
jo
add
or
rorl
inc
add
ret
or
add
jo
add
xabort
clc
add
add
add
mov
add
fistl
test
pop
mov
lcall
clc
mov
clc
add
jp
clc
cwtl
mov
jmp
clc
jo
add
add
dec
in
push
add
xchg
pop
repz
test
jl
push
sub
clc
push
add
das
bound
add
enter
aas
xchg
movsl
clc
xabort
cld
sub
jp
and
push
lret
repnz
into
aam
iret
ret
ret
clc
mov
jp
add
pop
ja
scas
and
aas
decb
inc
add
jno
add
cmp
mov
push
clc
scas
cmp
clc
xchg
lahf
rcrl
movsb
clc
adc
add
jle
clc
iret
loopne
cmp
add
clc
inc
clc
xor
add
jmp
clc
cmp
sub
int3
stc
data16
int3
mov
clc
mov
adc
add
clc
aam
mov
add
dec
lods
sbb
mov
push
clc
cmp
clc
or
dec
mov
add
in
or
xor
add
add
lods
mov
cmp
icebp
aaa
sbb
add
mov
inc
clc
mov
leave
dec
ret
mov
notb
lahf
jno
add
add
mov
mov
push
clc
outsl
jae
add
clc
insb
clc
jb
add
jo
add
xlat
stc
jae
add
add
fidivrl
xbegin
add
push
sbb
mov
clc
jecxz
mov
jp
mov
test
call
add
add
aam
cmpsb
clc
xbegin
imul
popl
xabort
clc
leave
pushf
cmp
clc
push
clc
pop
xbegin
fnstcw
movsb
clc
inc
clc
cltd
sub
inc
clc
call
add
cmp
xchg
pop
clc
lea
add
clc
test
add
add
sbb
clc
popf
fdivr
and
add
push
add
dec
cmp
jg
add
xor
push
loope
aaa
jmp
clc
jno
add
add
add
ret
clc
aam
push
insb
mov
push
add
mov
add
cmp
xchg
test
sarb
push
clc
push
xabort
fcmovnbe
aam
sub
or
add
jmp
add
fisubs
fs
adc
add
clc
test
mov
fwait
dec
in
xor
clc
jmp
mov
pop
push
xor
add
clc
inc
clc
jb
add
clc
adc
clc
scas
rclb
add
clc
loop
idiv
pop
repnz
add
repnz
scas
mov
xlat
xor
inc
clc
pop
ss
mov
cmpsb
clc
sub
stos
mov
mov
add
adc
add
add
aad
add
insl
sub
pop
push
aaa
mov
clc
aad
add
xchg
add
add
cmpsb
clc
lock
test
clc
pop
adc
add
call
mov
call
movsl
clc
icebp
outsb
pop
cmp
clc
xchg
pusha
add
or
clc
aad
mov
stos
or
cmpsl
clc
icebp
and
add
sbb
and
add
stos
inc
clc
xor
add
add
push
add
cwtl
jne
add
jae,pt
add
add
imul
pop
clc
sub
fsubr
sar
adc
add
xchg
mov
add
jl
mov
push
add
jle
clc
xchg
pcmpgtw
fidivl
jo
add
jae
add
cmp
add
adc
add
clc
xchg
mov
stc
add
add
inc
add
mov
clc
mov
mov
add
shrl
mov
aaa
lods
jmp
and
add
pop
ds
jecxz
mov
testl
xor
add
sbb
cld
push
ret
or
add
decl
jmp
das
cmpsb
adc
push
add
jns
inc
add
inc
add
rcll
add
add
push
clc
cmp
je
add
sahf
mov
clc
cltd
fs
in
push
clc
xlat
cltd
cwtl
pop
dec
pop
mov
jmp
sub
sub
add
cmp
clc
pop
std
pop
add
add
jnp
shl
sbb
cltd
mov
push
or
lods
inc
clc
pop
mov
aam
add
clc
mov
jmp
cmp
clc
sbb
xchg
outsl
fisubrl
ret
clc
lods
fidivrs
add
add
lahf
and
or
lret
mov
add
mov
or
pop
std
repnz
xor
add
add
mov
in
mov
inc
add
loopne
cli
fsubs
jne
clc
add
add
add
stos
sbb
cld
push
ret
inc
xor
push
fwait
jmp
mov
xchg
push
xor
clc
out
dec
movsb
clc
sub
clc
mov
adc
add
mov
mov
jns
add
mov
adc
add
adc
add
clc
jg
or
clc
dec
into
sbb
test
outsl
add
fwait
jmp
xor
add
add
sub
add
fwait
jmp
push
lea
sub
clc
rep
mov
cmpsl
clc
call
jmp
das
test
add
movsb
clc
pop
imul
add
outsl
stc
mov
add
in
xbegin
clc
push
stos
in
shlb
add
jecxz,pn
loope
sbb
out
mov
clc
int3
lret
aas
inc
clc
aam
clc
dec
inc
clc
and
test
add
div
sar
or
popf
leave
xchg
ljmp
fsts
inc
clc
stc
sar
ret
aam
clc
xlat
inc
add
test
dec
imul
adc
clc
mov
pop
fwait
jmp
lods
insb
inc
nop
sub
jl
add
mov
fcoml
add
lods
lcall
jmp
xchg
clc
sub
add
xlat
sahf
sar
in
hlt
or
clc
jecxz
push
cmp
clc
data16
lcall
ljmp
clc
pop
data16
lret
clc
xlat
shlb
add
clc
lock
add
sahf
repz
add
add
xchg
push
add
aam
pop
mov
lret
push
xchg
decb
shll
fwait
jmp
or
mov
add
jo
add
clc
test
inc
add
jg
mov
add
adc
add
push
clc
enter
xchg
mov
leave
cwtl
add
xbegin
jle
mov
fwait
jmp
sub
cmp
add
add
jmp
push
ret
insb
sub
add
lret
lods
sarb
push
notl
mov
add
clc
lods
jge
aad
test
cmp
jne
cmp
add
or
add
dec
fnsave
jp
sahf
vmwrite
clc
xor
add
add
clc
cmp
add
leave
lock
xor
add
jle
clc
daa
clc
cmpsl
clc
lods
push
add
imul
call
mov
clc
xchg
jae
add
inc
add
push
add
and
add
xor
adc
add
insl
pop
in
dec
fnstcw
dec
je
cmp
fldcw
clc
mov
test
repz
rcl
cmp
add
popf
cmp
jmp
xor
add
sub
or
add
add
adc
add
repnz
rcr
cmp
clc
into
pop
in
icebp
cmpsb
clc
cmp
xchg
fildll
or
push
push
lcall
push
add
fwait
cmp
add
sahf
testl
jb
add
ljmp
arpl
add
clc
jns
sub
fwait
jmp
pop
sub
clc
loopne
inc
add
ljmp
fsubl
add
cli
mov
add
in
xchg
addr16
sti
es
cs
rcrb
sar
push
clc
mov
inc
clc
mov
sbb
or
add
pusha
add
mov
clc
sub
fistpl
add
mov
sar
add
xchg
std
sbb
add
cmp
push
shr
repz
clc
xchg
jb
add
jmp
push
add
fwait
jmp
test
call
fwait
jmp
xchg
jp
stos
shl
inc
clc
call
mov
cmc
cld
je
add
jo
add
cmp
into
cmpsl
clc
xchg
jg
inc
clc
ficompl
add
sub
cmpsl
clc
lret
test
xchg
pop
and
add
inc
clc
sub
and
add
add
xor
add
add
cli
lea
xor
sar
add
test
push
sub
lods
mov
jp
lea
ret
ret
clc
ret
clc
movsb
clc
test
cmp
in
inc
clc
pop
fimull
dec
dec
fmull
aas
scas
mov
inc
clc
fmuls
and
push
xchg
xchg
popf
adc
add
clc
leave
adc
mov
ds
clc
hlt
mov
dec
mov
clc
sahf
cmp
add
outsb
cli
int3
xor
add
jne
in
fcmovu
add
into
shlb
sub
clc
mov
insb
sbb
mov
sub
sub
clc
cmp
add
clc
aas
add
sbb
add
pusha
add
repz
add
popa
add
aam
clc
outsl
popf
ficomps
xor
aas
cmc
xchg
sbb
xchg
sbb
ja
add
or
jne
fwait
jmp
int
adc
add
in
int3
xchg
adc
insl
push
pop
dec
dec
and
add
clc
ret
clc
cmp
mov
mov
cmp
add
jno
add
add
in
bound
add
std
push
inc
clc
pop
ficomps
add
jge
pop
negl
clc
inc
add
inc
add
aaa
popa
add
mov
cs
clc
inc
add
inc
clc
push
pop
clc
icebp
lods
lcall
mov
call
add
cmp
sub
clc
sub
pop
test
ljmp
jmp
pop
clc
bound
add
add
in
data16
jbe
clc
lret
sar
jne
add
int3
xlat
aam
stos
jecxz
mov
jnp
add
lods
sub
fisubs
repz
add
iret
mov
clc
add
add
arpl
add
add
jo
add
mov
sbb
pop
adc
clc
insl
mull
clc
xchg
jae
add
int
clc
fmul
cltd
dec
push
add
outsl
push
add
jle
push
add
cld
push
ret
aas
mov
aas
cmp
mov
clc
jg
add
cmp
add
and
add
clc
fsub
clc
push
add
hlt
or
push
sar
add
cmp
clc
and
add
xchg
and
add
sbb
test
push
add
fwait
jmp
xchg
movsb
clc
ret
clc
mov
jb
add
mov
pop
scas
push
add
mov
clc
jae
add
sub
add
fs
ror
ret
inc
add
vshufps
clc
das
inc
add
and
jmp
clc
xchg
jnp
rcll
add
cmp
clc
jecxz
xchg
xchg
cmp
fisubrl
sbb
or
clc
dec
add
push
add
or
jp
pop
mov
clc
stos
out
sar
push
out
leave
mov
push
add
cmp
pop
cld
push
ret
sub
cmp
sub
test
outsl
lret
cmp
add
daa
clc
lahf
mov
mov
cld
push
ret
push
add
and
add
cmp
sub
clc
sahf
loope
cmp
mov
data16
es
loope
icebp
in
mov
add
add
add
add
add
movsl
clc
or
gs
inc
add
call
sti
mov
clc
loope
and
movsl
clc
clc
mov
dec
hlt
dec
xabort
cmp
dec
dec
int
sbb
jle
mov
add
frstor
cs
sar
or
xor
add
call
clc
adc
nop
lods
mov
ds
add
xchg
mov
clc
lret
jl
inc
add
lret
lcall
and
fwait
jmp
dec
sub
sub
cmp
sub
scas
scas
and
cmc
xabort
hlt
pop
mov
push
adc
add
clc
jae
add
popa
add
jne
or
add
psadbw
lret
jmp
pop
clc
xlat
add
cli
push
add
mov
lods
add
add
movsl
clc
adc
inc
add
mov
fbstp
mov
push
xor
fwait
jmp
test
clc
jnp
js
clc
jnp
clc
mov
clc
popf
lret
dec
out
leave
mov
xor
add
fwait
jmp
mov
sub
adc
add
pop
pop
sahf
pop
dec
or
jl
clc
fs
adc
add
mov
cmp
push
hlt
or
scas
out
lcall
cld
push
clc
xor
add
xlat
ja
clc
add
sub
lods
cmp
xlat
cli
mov
clc
pop
scas
jne
lcall
std
mov
fwait
enter
je
lcall
add
xchg
jp
in
push
dec
clc
test
daa
clc
pop
clc
cmp
add
clc
add
add
pop
xchg
xor
add
and
add
pop
pminsw
cmpsl
clc
out
xchg
in
jl
adc
add
pop
scas
inc
add
adc
add
vmaxps
and
add
mov
add
sub
add
xchg
out
int
mov
inc
clc
stc
jno
add
add
mov
add
cmp
xchg
sbb
test
add
add
clc
mov
add
push
add
push
pusha
fwait
jmp
lods
and
clc
insl
imul
addps
jmp
dec
dec
test
mov
sub
sarb
arpl
add
jmp
jl
xchg
idiv
mov
js
cmpsb
clc
mov
jle
test
mov
clc
mov
add
dec
inc
clc
xchg
in
xbegin
idivb
clc
sbb
mov
push
icebp
mov
jecxz
insb
sbb
cli
ret
clc
xor
add
sub
adc
clc
and
add
pop
pop
xor
add
add
add
clc
xchg
xchg
push
add
lea
add
loope
push
mov
je
cmp
inc
add
push
add
incl
sti
fwait
jmp
mov
add
clc
test
das
xor
add
add
inc
clc
push
push
ret
aaa
jno
repz
add
popa
add
pushf
mov
ja
clc
fdivl
add
fwait
mov
clc
int3
xchg
stc
sub
push
fwait
jmp
nop
sub
fildl
add
adc
add
add
fwait
jmp
add
mov
cmp
int
jl
clc
or
add
inc
add
and
add
mov
add
dec
rclb
fnsave
add
xor
clc
stc
pop
in
inc
clc
push
clc
mov
push
popa
fwait
jmp
sub
outsl
push
sub
clc
jecxz
xchg
cmpsb
clc
pop
or
pushf
push
out
xchg
push
clc
jno
add
faddp
clc
cmp
cmpsb
clc
xor
mov
mov
clc
outsb
xabort
clc
sbb
jmp
sub
sub
xabort
add
xor
add
add
clc
bound
add
add
push
fdivrs
jmp
jbe
fwait
jmp
mov
iret
pop
xchg
jge
hlt
test
loopne
jns
clc
lods
movsl
clc
fbstp
add
aam
sarb
in
push
or
push
clc
aas
movsl
clc
cs
ss
cmpsl
clc
std
pminsw
mov
movsl
clc
jle
add
stos
out
test
addr16
mov
in
cmp
jno
add
pop
jnp
clc
scas
mov
push
add
sub
add
cmp
or
or
or
clc
xor
add
add
daa
clc
mov
nop
in
push
inc
clc
pop
cltd
hlt
jmp
add
clc
outsl
ds
dec
pop
std
loope
mov
jbe
mov
clc
mov
cmp
sub
sbb
jg
inc
clc
sar
clc
into
inc
add
sub
adc
add
fstpt
clc
add
add
push
clc
xabort
add
outsl
or
or
call
add
cmp
clc
jne
pop
adc
add
aad
adc
add
or
dec
test
fnstenv
push
xor
add
lret
clc
movsb
clc
and
add
add
sbb
shl
clc
nop
push
roll
imul
jne
fwait
jmp
daa
clc
idivb
mov
xbegin
sub
sub
clc
adc
add
add
add
repnz
clc
jp
lea
scas
and
add
jmp
add
pop
clc
sub
cld
push
ret
fwait
jg
movsb
dec
cmp
add
add
xabort
mov
cwtl
mov
sbb
add
das
xchg
ret
clc
pop
pusha
add
insl
dec
movsb
clc
cmp
mov
push
cmpsb
clc
iret
dec
out
dec
mov
add
pop
mov
or
push
add
adc
aad
pop
out
mov
add
test
clc
add
add
es
lret
mov
ss
push
push
es
mov
fwait
xor
dec
int
push
cmpsb
clc
bound
add
test
mov
add
jmp
lods
scas
add
clc
ss
xchg
pop
cs
xbegin
xor
add
add
int
sbb
add
add
adc
add
push
add
imul
clc
lcall
leave
es
xchg
cmp
pop
data16
inc
clc
sarl
or
ret
sbb
sub
inc
clc
mov
fwait
inc
add
cmp
daa
clc
pop
dec
jbe
add
and
add
enter
mov
dec
mov
pop
fidivs
add
in
pop
push
ljmp
dec
xor
add
push
add
add
cs
mov
xchg
push
loope
sarb
pop
dec
sar
clc
jmp
daa
clc
push
push
test
jb
add
jmp
test
mov
cld
lret
push
sub
dec
sahf
mov
clc
inc
clc
into
pop
mov
dec
mov
shl
jp
int3
xor
add
clc
mov
clc
inc
clc
jae
add
clc
mov
sbb
adc
add
outsb
inc
add
lahf
xchg
mov
aad
sbb
js
loope
pop
psubsb
lcall
add
clc
sbb
jmp
cbtw
jg
sbb
sbb
call
fwait
jmp
ja
fdivrp
jnp
add
adc
xchg
sbb
clc
xor
add
dec
test
add
bound
add
clc
push
xchg
fsubs
add
aaa
pop
adc
add
cmp
jae
add
sbb
clc
sub
add
sbb
data16
int
cmp
outsl
pop
jae
add
add
pop
inc
clc
inc
add
sbb
add
cmp
adc
add
clc
xchg
jmp
icebp
fwait
jmp
jno
cwtl
push
mov
xor
add
fsubrl
add
add
fmuls
stc
pop
int3
mov
or
push
and
ret
xchg
sub
push
outsb
outsb
and
add
sbb
mov
int
clc
inc
clc
loopne
out
lods
roll
inc
clc
inc
add
xor
add
jle
inc
add
sub
xchg
cmpsb
clc
ret
in
push
mov
pop
clc
test
clc
ljmp
pop
scas
test
xchg
mov
dec
adc
add
clc
negb
daa
clc
test
add
and
add
sub
lea
push
add
fmull
testl
sti
mov
clc
mov
add
popf
cli
scas
lret
or
add
cmpsb
clc
xor
cmp
jae
add
or
enter
out
inc
clc
mov
add
sahf
dec
sbb
test
fistps
test
sub
add
add
adc
add
shll
sahf
mov
xor
icebp
mov
lahf
and
add
dec
push
clc
movsb
clc
ja
dec
or
mov
add
mov
fcoms
add
add
inc
clc
jle
rcl
test
pop
sub
xlat
cmp
xor
mov
add
dec
lods
adc
xor
add
add
fcompl
dec
fdivl
clc
rcrl
pop
dec
xor
add
add
mov
mov
fwait
jmp
adc
jge
addr16
mov
clc
sbb
push
hlt
inc
add
sbb
jp
adc
add
hlt
loope
sahf
pop
pop
pop
lock
int
add
cmp
int
clc
mov
ds
dec
mov
jns
add
dec
jp
push
sahf
iret
dec
stc
cmp
inc
clc
jl
movsb
clc
or
cmc
jge
bound
add
add
add
cmp
enter
fprem1
and
add
rcll
add
fwait
jne
clc
cmp
and
mov
sub
add
mov
clc
aaa
jle
add
inc
add
bound
add
jl
adc
add
add
aas
sbb
clc
mov
ja
cmpsb
clc
repnz
clc
ret
clc
je
add
das
scas
jl
add
ret
clc
into
sbb
jmp
outsl
dec
aas
sub
add
add
jmp
adc
dec
pop
decl
test
cmp
add
add
clc
fwait
jmp
jno
sub
add
lock
cld
inc
add
sahf
mov
add
sbb
add
add
sub
push
lahf
cmp
push
xlat
pusha
add
adc
dec
movsl
clc
addr16
inc
clc
leave
ds
xor
add
aas
insl
pop
push
mov
add
add
add
pop
addr16
sub
int
fs
add
clc
sti
add
add
pop
test
add
adc
add
aaa
inc
add
adc
clc
out
jl
mov
inc
clc
or
xchg
inc
add
mov
clc
lock
call
fwait
jmp
add
incb
xchg
pop
pop
xchg
ljmp
add
add
hlt
push
jecxz
push
clc
sub
clc
mov
test
out
add
add
pop
sub
push
add
dec
adc
add
pop
inc
add
xchg
and
add
add
mov
sti
lahf
das
jmp
fnsave
add
dec
adc
add
mov
lret
test
jmp
sbb
pusha
add
test
inc
add
jne
clc
cmp
push
cmpsl
clc
jecxz
fisubrl
sbb
push
pop
mov
add
test
clc
xor
add
sub
sar
clc
pop
cmp
push
test
and
sahf
xchg
cmp
or
fnstcw
lahf
rcl
xor
call
fwait
jmp
mov
clc
out
inc
add
into
lods
arpl
add
clc
mov
add
dec
scas
out
ja
bound
add
sbb
add
mov
add
add
add
pop
inc
clc
out
add
sbb
clc
jnp
add
cmp
clc
fwait
mov
push
clc
sub
cmc
pop
inc
clc
leave
and
add
clc
rcll
add
add
inc
clc
cmp
jp
aas
fiaddl
add
add
cmp
mov
clc
add
mov
pushf
dec
in
in
jo
add
daa
clc
into
mov
adc
add
clc
lret
mov
mov
inc
clc
sbb
mov
test
ret
clc
pop
test
cmp
mov
add
out
xbegin
clc
incl
les
adc
add
sbb
clc
mov
insl
xchg
xor
clc
pop
or
clc
dec
in
sbb
add
dec
dec
xchg
jg
mov
cmc
repz
mov
pop
jg
mov
cmp
dec
mov
adc
add
add
sub
xchg
out
push
add
cld
push
ret
cmp
int
jl
xor
add
loope
inc
add
xor
add
add
xbegin
clc
pop
clc
fimuls
xchg
xchg
clc
nop
pop
es
loopne
cmp
jg
xor
add
repnz
clc
sub
mov
pop
push
cwtl
cltd
mov
sub
mov
pop
mov
push
imul
js
mov
jmp
push
sub
cmp
cltd
sbb
add
pop
lock
arpl
add
jmp
jge
dec
push
out
dec
adc
add
add
ret
clc
add
add
and
add
clc
cmp
in
sti
adc
fs
add
add
lcall
fisubrl
cli
mov
clc
xor
clc
mov
push
ret
sahf
inc
stc
fst
ds
out
sahf
jg
clc
cmp
test
data16
mov
cld
push
ret
outsl
data16
xchg
stos
mov
cli
ja
or
mov
lret
cmp
inc
add
adc
add
lret
jecxz
fnsave
jnp
mov
in
xchg
pusha
add
loopne
dec
mov
inc
add
xlat
inc
add
in
mov
clc
sub
clc
test
rcrb
inc
add
push
mov
add
clc
out
mov
pop
js
mov
push
fisubs
push
cld
push
ret
jno
test
add
test
jae
add
clc
jl
mov
mov
std
push
mov
fwait
jmp
inc
imul
xchg
outsl
xor
add
jg
add
stc
or
xchg
sub
mov
scas
sbb
roll
sar
std
out
fs
fs
imul
jmp
add
in
sbb
dec
cmp
jmp
cmp
add
cltd
pop
cmp
call
insb
cwtl
mov
add
xor
add
push
dec
aaa
repnz
and
pop
mov
cli
call
push
cmpsl
clc
fs
gs
imul
add
sub
add
bound
add
mov
icebp
and
add
dec
adc
add
inc
clc
xchg
sbb
push
ret
dec
pop
scas
ja
sahf
roll
fcoml
ret
clc
lock
add
icebp
enter
add
fwait
jmp
jno
aam
jecxz
fdivrl
mov
ljmp
add
sar
add
jno
add
movsb
clc
sbb
mov
divl
data16
cmp
add
cltd
and
je
add
xchg
test
sbb
inc
fwait
jmp
sub
mov
xor
add
add
pushf
and
add
adc
add
clc
mov
adc
add
cmp
and
add
cmp
add
imul
lods
cli
cwtl
sbb
mov
jo
add
jge
dec
xor
cld
inc
add
sbb
pop
pop
out
cmp
clc
test
std
sub
add
sub
mov
jmp
pop
clc
inc
add
mov
out
ljmp
aas
cwtl
add
add
repnz
clc
xchg
jae
add
cmp
add
and
add
clc
xbegin
ss
je
cmp
cli
lcall
mov
clc
push
add
pop
popf
iret
push
lahf
add
imul
lret
or
mov
stc
push
mov
add
test
xchg
div
cli
sbb
jae
add
cmp
fs
repz
pop
xabort
ret
clc
adc
add
clc
out
fwait
pop
cmp
push
inc
add
pop
and
add
clc
fldl
into
sub
clc
cwtl
xchg
mov
cli
jb
add
add
add
mov
push
ds
dec
or
dec
dec
fists
add
adc
add
push
add
stc
cmp
pminsw
and
add
cmp
mov
pushf
push
jmp
pop
test
fs
jne
add
daa
clc
imul
adc
add
in
sbb
es
clc
gs
pop
jge
clc
push
pusha
add
pop
inc
add
movhps
clc
mov
hlt
out
popa
add
push
push
clc
dec
inc
clc
sbb
fs
jp
clc
scas
xchg
cmp
add
mov
or
add
stos
cmp
mov
ret
push
test
sub
bound
add
add
stos
lahf
out
mov
add
push
int3
jle
add
lods
xor
add
call
mov
fwait
jmp
xchg
mov
jmp
xchg
insb
jg
adc
add
add
cmp
clc
aas
in
jbe
and
add
mov
sahf
add
add
aas
jb,pt
add
add
sub
cmp
add
fadd
clc
mov
add
xchg
fisttps
clc
mov
add
add
hlt
push
push
ret
or
clc
jg
pusha
add
ds
clc
cltd
lret
vmovups
add
jge
cmp
cltd
sub
jmp
fwait
jmp
popa
ja
xabort
add
adc
mov
xabort
adc
clc
sbb
clc
movsl
clc
mov
mov
clc
cmpsl
clc
outsl
movsl
clc
inc
clc
cmp
clc
int3
sub
es
lret
add
je
pop
out
std
ret
jmp
add
cld
push
ret
inc
xor
add
jle
scas
mov
adc
add
xchg
popa
add
cltd
xbegin
clc
aam
or
add
sub
mov
inc
clc
dec
iret
shlb
add
pop
inc
add
loop
pop
sub
add
cmp
aas
pop
clc
aam
add
jno
add
ffree
clc
movsl
clc
cmp
push
clc
loopne
iret
fs
out
rcll
loopne
jbe
mov
mov
clc
lods
jg
clc
sbb
add
add
mov
fld
clc
push
mov
sbb
clc
ret
clc
mov
test
xchg
out
ret
clc
icebp
cld
test
cwtl
push
je
mov
mov
cmp
clc
xchg
loopne
add
add
add
shl
mov
gs
call
loop
push
ret
dec
jp
xabort
clc
aas
lret
out
inc
clc
dec
sbb
clc
sbb
notb
sub
push
add
dec
popf
gs
stos
and
add
add
adc
add
xor
add
xbegin
ret
mov
sbb
dec
cld
aam
push
adc
in
aas
cmp
add
clc
jge
out
clc
push
cld
pop
cs
jecxz
fstpl
pop
xchg
pop
popf
cmp
add
add
insb
data16
popf
lret
add
sbb
mov
mov
gs
incl
push
xor
inc
add
mov
jbe
cmpsb
clc
push
add
test
nop
pop
clc
inc
add
stos
lcall
push
add
je
clc
outsl
fidivl
add
filds
cli
pop
clc
stos
mov
clc
cmp
add
mov
add
add
repz
add
add
add
pop
arpl
add
add
add
scas
negb
cmp
add
mov
clc
sbb
rcrb
sahf
adc
jmp
clc
lods
es
sub
call
add
xor
add
inc
clc
in
gs
or
loop
and
add
clc
rcl
mov
ja
clc
scas
fildl
test
or
lahf
pushf
sar
xchg
cwtl
movsl
clc
push
aam
add
lods
jecxz
jecxz
imul
inc
add
xchg
imul
es
loope
cmpsb
clc
push
xor
clc
sub
sub
nop
mov
in
idivl
push
pusha
add
daa
clc
pop
xchg
in
cmc
pusha
add
lods
dec
aas
int3
and
int
add
imul
sbb
xor
add
cmp
cmc
js
add
nopl
add
adc
add
clc
push
clc
pop
mov
add
add
push
data16
into
sbb
aam
dec
inc
clc
xor
add
lahf
xchg
pushf
xor
add
shll
pop
arpl
add
add
in
sub
adc
add
add
lret
into
push
clc
pop
clc
or
add
clc
mov
cmp
fsts
add
data16
pop
push
add
cmc
pop
js
add
mov
adc
add
inc
clc
ret
push
push
mov
add
push
clc
dec
jae
add
push
add
xor
add
clc
push
dec
xchg
mov
or
test
lods
xchg
sub
mov
clc
daa
clc
dec
jne
and
add
sub
mov
clc
outsb
jno
add
pop
dec
xbegin
clc
xbegin
add
inc
add
repz
add
lret
lods
popa
add
mov
pop
fwait
jmp
push
sub
or
sub
clc
push
or
imulb
add
cmp
and
add
add
xor
add
movsl
clc
pop
sub
lahf
aam
xor
add
mulb
add
mov
enter
jo
add
adc
movsb
clc
pop
cmc
int
mov
add
pop
pop
mov
push
ret
cmp
in
push
add
xor
xor
add
add
cmc
jnp
aam
hlt
and
cltd
pop
inc
add
sti
push
xor
add
mov
and
clc
cmpsb
clc
pop
cmp
stos
fistl
add
jmp
and
add
add
sbb
add
clc
jl
fsubs
clc
shl
clc
insb
sbb
repz
add
jge
mov
clc
adc
add
add
sub
rclb
jbe
bound
add
add
sub
add
xor
add
or
clc
dec
sbb
add
icebp
nop
xchg
call
movsl
clc
or
clc
fdivrs
sbb
incl
stc
fwait
jmp
or
mov
clc
adc
clc
pop
jge
mov
add
cmp
mov
lea
into
cmp
sub
popa
add
mov
hlt
push
outsl
xchg
dec
push
add
repz
lret
std
pop
outsb
or
clc
mov
xabort
mov
or
mov
fwait
jmp
push
pop
mov
out
outsb
push
lea
add
add
iret
adc
add
pop
dec
test
clc
xabort
pop
push
out
sbb
mov
fwait
jmp
and
add
xchg
mov
mov
add
jns
dec
or
decl
fwait
jmp
xor
insb
out
cmp
or
add
add
cmp
clc
push
add
test
shld
or
clc
pop
inc
add
jo
add
xor
add
clc
insl
jno
add
iret
pop
mov
mov
inc
add
jno
add
pop
adc
add
in
xchg
sbb
clc
leave
scas
adc
add
inc
add
add
add
mov
or
add
add
clc
ror
repnz
dec
es
xchg
add
add
pop
sub
add
cld
push
ret
pop
adc
int
add
jnp
add
fildl
add
int
push
je
stos
nop
pop
clc
scas
or
add
mov
cmp
jl
test
inc
clc
loop
ret
clc
cmp
add
mov
dec
and
add
clc
stos
popa
add
test
add
xchg
sub
popa
add
das
fidivrl
data16
sti
cli
push
out
sub
add
add
cmp
fwait
rorl
push
pop
cmp
jbe
and
mov
clc
fwait
into
jecxz
inc
add
clc
jae
add
add
sbb
add
or
clc
xchg
jo
add
jbe
mov
add
gs
cmp
mov
fwait
jmp
dec
inc
jg
xchg
mov
leave
xchg
mov
push
ret
jno
imul
mov
inc
clc
insb
pop
in
in
inc
add
mov
mov
add
outsl
out
pop
clc
daa
clc
imul
adc
add
int
add
lods
adc
add
fnstenv
aaa
out
fcmovb
clc
sub
clc
cmp
jge
inc
add
in
neg
dec
add
add
add
repz
mov
inc
clc
mov
jmp
fwait
jmp
outsl
cmp
sub
ficompl
aad
mov
add
add
std
ffreep
clc
cmp
clc
add
clc
cmp
cmpsb
clc
out
bnd
clc
xchg
jo
add
loope
data16
mov
clc
xabort
mov
jno
add
fwait
cmp
clc
iret
push
mov
scas
xchg
jmp
pop
rorb
rcl
push
add
cmp
push
xchg
nop
imull
jns
in
dec
inc
add
aaa
push
add
jo
add
add
xchg
sahf
sub
add
lock
ja
mov
mov
and
add
clc
mov
adc
add
mov
clc
push
push
xchg
add
sub
push
mov
cmp
shll
imul
loope
dec
add
inc
clc
leave
jp
clc
dec
mov
xlat
aad
bnd
and
add
dec
adc
add
stos
cmp
add
and
add
jbe
sti
cmp
clc
and
lret
clc
xchg
js
lcall
mov
adc
add
clc
popf
dec
dec
mov
fmul
sbb
clc
add
add
sahf
test
sub
fs
into
pop
adc
add
clc
add
cmpsl
clc
sar
repz
lods
jae
add
cmp
clc
repz
xor
add
lret
loop
jbe
clc
jo
add
jge
add
cwtl
mov
js
dec
push
xchg
pop
and
push
add
push
mov
or
jmp
xor
sub
jb
add
pop
mov
dec
mov
clc
aam
add
movsb
clc
ss
stc
dec
push
add
mov
jnp
xchg
stos
ficomps
xabort
adc
add
add
lods
xchg
add
pop
cmp
inc
add
add
add
clc
xor
add
loope
sub
add
push
add
or
xor
add
ds
cmp
clc
nop
arpl
add
push
mov
adc
xchg
scas
sar
xchg
mov
aas
xchg
add
add
clc
push
and
cltd
jae
add
or
roll
mov
add
dec
in
outsb
xabort
clc
xchg
stos
stos
inc
clc
mov
mov
ss
mov
repnz
cmc
xchg
mov
sub
add
and
or
clc
xor
add
test
pop
or
clc
test
add
dec
popf
push
cmp
bound
add
sub
fwait
jmp
ja
adc
xabort
adc
clc
leave
stc
pop
fcoml
add
push
xchg
test
cwtl
mov
leave
ja
arpl
add
jle
popl
aas
sub
decl
mov
adc
add
mov
dec
mul
clc
lcall
mov
imul
pop
gs
je
test
imul
add
add
push
add
add
sar
call
cld
push
ret
test
mov
add
gs
dec
lahf
popf
icebp
mov
pop
fwait
jmp
fwait
and
lods
sbb
int3
lcall
in
pop
shll
in
stos
daa
clc
mov
cmpsl
clc
jecxz
mov
xchg
push
out
xchg
push
add
mov
add
inc
add
dec
imul
inc
add
test
inc
clc
dec
mov
stc
push
add
fwait
jmp
lods
and
add
xor
add
add
and
add
add
xchg
mov
cld
jecxz
push
or
sub
fwait
jmp
aas
lahf
mov
add
xchg
das
shlb
mov
mov
add
imul
pusha
add
inc
add
add
stos
mov
add
sar
add
fcoms
jmp
es
jno
add
clc
mul
clc
mov
add
xor
add
inc
add
pop
ja
add
into
or
loope
inc
clc
sbb
clc
mov
push
fwait
jmp
es
add
push
ret
add
add
cmc
push
jmp
sub
mov
xor
repnz
or
or
adc
add
inc
add
sbb
test
add
fwait
jmp
cmp
clc
mov
in
incl
ret
sub
pop
push
out
pop
jo
add
add
add
test
cld
jp
repz
stos
adc
add
aaa
popf
push
mov
add
nop
in
push
daa
clc
rorb
mov
jge
cmp
sub
rolb
ret
clc
movsl
clc
clc
inc
add
mov
clc
scas
sub
clc
push
clc
lea
cmp
add
clc
dec
test
and
add
dec
aad
xchg
addr16
scas
testb
add
push
push
add
out
es
into
pushf
xchg
jnp
repnz
sub
add
stos
ss
ret
out
iret
clc
fcmovu
add
add
add
mov
xor
js
mov
jnp
repnz
add
stos
sub
add
fiadds
add
out
lcall
pop
cld
push
ret
sbb
mov
js
add
and
test
mov
add
ja
call
cmp
xchg
sbb
loopne
sbb
push
cmp
ja
xchg
pop
ss
aas
mov
iret
cvtps2pi
mov
add
push
add
out
xchg
rcrl
outsl
push
clc
pushf
dec
xchg
das
and
add
clc
int3
or
fnstsw
rolb
add
pop
pop
cld
push
testl
fwait
jmp
arpl
add
clc
sbb
add
cld
push
ret
sub
adc
cmp
xor
add
push
clc
fs
push
push
add
insb
imul
cmp
clc
xchg
addr16
mov
cwtl
pop
out
stos
inc
clc
adc
add
divb
add
add
out
inc
clc
mov
add
outsb
test
lret
addr16
jge
ss
xor
add
add
sbb
pop
jne
clc
sar
push
in
ret
icebp
sahf
push
jmp
mov
out
iret
fists
cmp
popf
call
mov
sub
inc
in
pop
leave
pop
lret
jecxz
call
movsb
clc
or
jl
in
push
fmul
mov
clc
xbegin
fs
jle
clc
push
imul
popa
add
cmp
loope
dec
jno
add
loopne
jbe
add
add
aas
cmp
fstps
xlat
jns
clc
xor
lods
inc
clc
or
sub
add
push
add
adc
cmc
sub
add
ja
sub
pusha
add
gs
cmpsl
clc
mov
test
sbb
add
add
incb
clc
es
dec
fcoms
push
inc
clc
sar
mov
sar
clc
push
push
or
mov
add
xabort
pop
jb
add
fisttpl
cmp
into
jbe
add
ret
clc
movsb
clc
enter
add
add
add
add
add
pop
push
pop
pop
rcl
sbb
mov
and
add
fs
xlat
mov
xbegin
push
clc
push
movsb
clc
mov
mov
popf
add
add
ds
cmp
jl
add
cmp
mov
cltd
clc
jne
es
icebp
negl
clc
mov
clc
dec
fcomps
dec
fmul
pop
cmpsb
clc
movsb
clc
outsb
pop
insl
in
cmp
aas
cmp
mov
pop
test
das
mov
rorb
stc
out
daa
clc
jmp
jmp
cmp
dec
pop
daa
clc
xor
add
pop
dec
mov
jle
sar
clc
cmp
adc
sar
jmp
fsts
clc
fsts
enter
sar
clc
mov
bound
add
jbe
inc
add
cmp
cmp
gs
je
test
sbb
adc
add
clc
jg
mov
fwait
jmp
sbbb
clc
add
jp
clc
negb
xchg
cmp
insl
push
sbb
add
add
hlt
or
add
mov
mov
jmp
add
sub
mov
repnz
jnp
clc
cmp
clc
ret
clc
fwait
daa
clc
sbb
pop
and
pop
xor
add
add
inc
add
xlat
mov
mov
adc
jmp
xor
clc
int3
test
popa
add
lahf
push
add
push
add
xor
add
clc
mov
dec
cli
and
dec
fldl2t
mov
cmp
dec
xchg
negb
inc
add
xchg
cmp
add
test
inc
clc
jmp
xchg
in
int3
out
gs
sub
add
add
add
in
inc
add
mov
add
xor
add
clc
ljmp
addr16
mov
and
add
cmp
clc
sub
pop
jp
jecxz
arpl
add
and
add
push
fbstp
add
clc
leave
ja
dec
stos
inc
add
sub
incb
clc
out
cld
shll
in
js
clc
jae
add
shrb
fwait
jmp
data16
clc
push
mov
add
inc
sahf
lea
cld
push
ret
sub
test
clc
mov
inc
clc
adc
add
add
clc
sub
jmp
fwait
jmp
dec
push
add
mov
mov
clc
dec
adc
add
scas
jno
add
enter
clc
test
mov
mov
clc
xor
insl
bound
add
add
clc
mov
xchg
pop
int3
jns
clc
sub
add
mov
add
pop
cmp
sub
clc
push
add
cmp
sahf
mov
lahf
jg
clc
fdivs
cmp
add
add
add
push
clc
data16
popa
add
ficomps
repnz
clc
popa
add
jae
add
clc
mov
adc
add
pop
sbb
repz
cwtl
push
xor
insb
imul
clc
adc
add
or
shl
clc
jp
imul
push
sbb
add
push
mov
add
add
sbb
pop
fwait
jmp
cmp
xchg
sahf
mov
jne
clc
or
add
fwait
jmp
je
sub
fcoms
mov
add
or
or
add
clc
sbb
stos
fwait
jmp
dec
sbb
lret
cwtl
incl
sti
fwait
jmp
insb
lea
inc
add
inc
clc
push
cmp
movsb
clc
inc
clc
add
add
cltd
mov
xor
add
clc
push
add
jl
pusha
add
daa
clc
fidivl
add
and
or
inc
add
insl
pop
and
add
arpl
add
clc
cmpsl
clc
push
mov
stos
divl
das
dec
int3
scas
fldl
add
divb
data16
mov
add
daa
clc
in
movsb
clc
sbb
clc
mov
clc
mov
jmp
sub
cwtl
ja
add
outsl
cwtl
add
add
dec
call
add
fdivrs
clc
mov
clc
xor
add
add
daa
add
je
ja
dec
xchg
hlt
cmp
fs
sbb
add
add
je
hlt
sbb
clc
ljmp
push
cld
push
ret
sub
lods
stc
sub
lcall
clc
dec
sub
clc
mov
cmpsb
clc
pop
outsb
sub
xor
add
dec
inc
clc
fisttps
xchg
je
popl
mov
dec
or
js
xchg
mov
jg
pusha
add
inc
add
fistpl
push
lahf
pop
dec
push
cs
cld
js,pn
clc
popl
lret
jge
pop
pop
clc
or
cmp
clc
clc
outsl
lock
notb
add
stos
mov
popa
jno
mov
add
mov
cmp
dec
pop
xchg
adc
add
add
sbb
push
pop
ja
pop
dec
xor
add
add
or
call
add
inc
add
sub
adc
add
clc
nop
std
or
add
push
add
sub
mov
sub
dec
push
jg
add
pusha
add
sub
clc
xchg
mov
test
fs
aam
clc
or
add
add
add
inc
clc
ret
clc
js
imul
clc
mov
ljmp
into
cmp
popf
out
pushl
add
stos
jo
add
fidivrs
mov
add
clc
test
ds
or
add
fwait
jmp
push
je
mov
add
add
inc
clc
push
add
stc
inc
clc
daa
clc
inc
add
call
inc
add
fiadds
add
mov
lret
fidivrs
sbb
add
pusha
add
mov
ja
lcall
call
add
clc
ficompl
lret
xchg
data16
cmp
clc
adc
add
das
dec
jge
pop
sar
clc
loop
cmp
out
daa
clc
dec
popa
add
cmp
cmp
leave
test
clc
daa
clc
rorb
gs
aam
clc
or
loop
fwait
out
loopne
dec
imul
clc
sbb
enter
out
lcall
test
add
jmp
or
or
adc
movsb
clc
lcall
jmp
sub
pushf
add
add
sub
sub
test
std
ja
add
sahf
push
clc
enter
sar
jg
scas
or
add
cs
ret
clc
insb
ja
add
push
mov
add
add
inc
add
xor
add
sbb
dec
xlat
pushf
push
jne
clc
loopne
in
es
cmpsb
clc
push
mov
sahf
inc
clc
pushf
and
add
add
push
add
mov
clc
sub
add
pop
mov
fldenv
adc
add
clc
mov
add
icebp
sbb
jmp
push
sub
cmp
add
pop
out
dec
sbb
add
jmp
mov
out
das
xchg
mov
cmc
outsb
aam
aam
add
in
sub
mov
mov
ret
sahf
or
mov
iret
dec
add
imul
sub
jbe
clc
clc
mov
add
mov
data16
mov
aad
inc
clc
aas
cs
clc
adc
add
cmp
jecxz
addr16
mov
ljmp
lods
push
fs
clc
clc
jmp
add
insl
xchg
adc
add
mov
add
add
add
cmp
sbb
jmp
clc
lret
push
xchg
das
jne
mov
test
add
add
add
clc
pop
lret
jne
call
fwait
jmp
push
sub
into
scas
out
mov
cmp
sbb
sar
out
and
add
sub
sub
add
mov
and
add
clc
insl
jb
add
add
jle
xchg
jbe
lea
movsb
clc
aad
clc
inc
clc
test
mull
lea
fwait
jmp
add
clc
lock
add
add
xor
add
outsl
inc
add
jne
add
add
cmp
dec
popf
nop
dec
mov
add
je
clc
adc
add
add
sub
loope
mov
repnz
add
icebp
insl
popf
jp
pop
push
add
mov
jp
add
jbe
cld
enter
jae
add
repnz
mov
dec
js
mov
clc
cmpsl
clc
imull
inc
add
inc
clc
sbb
add
add
push
test
fwait
jmp
cwtl
inc
add
mov
sub
clc
pmuludq
add
push
add
repz
sar
add
add
in
sub
add
clc
popf
stos
cld
mov
add
ret
clc
push
cs
clc
sub
add
push
cwtl
push
add
push
pop
in
lcall
jmp
pop
jp
sahf
dec
fsubl
add
cltd
and
push
add
cltd
into
or
lcall
jmp
jp
cmp
xchg
lods
pusha
add
mov
sub
clc
adc
add
add
pop
cltd
inc
clc
or
clc
xchg
into
jg
sahf
cmp
mov
cmp
or
jmp
add
icebp
mov
out
cwtl
adc
add
inc
add
pusha
add
fidivl
add
mov
mov
ja
clc
mov
clc
xor
add
sti
jb
add
clc
rcll
jno
add
data16
dec
call
xchg
push
sti
sbb
mov
add
cmp
add
data16
mov
addr16
mov
add
mov
jns
cmp
clc
bound
add
and
daa
clc
sub
repz
pop
int3
xor
add
fwait
dec
mov
movsl
clc
fdiv
and
add
add
add
cmp
add
xbegin
sub
clc
fadds
into
test
popa
add
and
sub
clc
adc
add
clc
xor
clc
sub
or
jp
inc
clc
test
clc
inc
clc
jns
clc
pop
clc
test
xchg
or
add
add
adc
pop
clc
cmp
jns
mov
mov
clc
mov
cwtl
iret
inc
add
outsl
out
push
adc
add
clc
stos
rorb
jmp
add
in
shlb
add
xchg
xchg
adc
add
int3
bound
add
outsb
sbb
cmpl
fwait
jmp
push
test
clc
leave
std
rorl
in
xchg
and
add
fs
xchg
out
out
dec
shll
mov
cmp
xchg
fadd
clc
test
aaa
jge
mov
pop
sub
add
xor
jnp
sub
adc
add
clc
inc
clc
shll
dec
ljmp
ret
clc
fstpl
add
add
out
gs
and
add
in
test
pop
clc
aad
add
dec
test
jno
add
add
clc
fisttps
adc
add
fldcw
inc
adc
push
ret
sub
fsubrs
add
fwait
jmp
mov
add
add
or
dec
lret
adc
add
or
clc
push
add
adc
add
push
add
sti
jae
add
inc
clc
jne
mov
jae
add
lea
add
lcall
fldenv
xchg
or
lock
add
popa
add
push
pop
cmpsl
inc
add
sub
outsl
pop
jmp
lret
add
sub
dec
mov
add
add
add
add
bound
add
add
and
add
add
clc
jne
out
clc
cmp
clc
pop
xchg
sar
jno
add
clc
dec
insb
fsubl
scas
push
push
fwait
jmp
pop
sub
ja
mov
add
sar
jl
jmp
mov
mov
mov
jmp
and
stos
push
pushl
fwait
jmp
sub
fs
insb
pop
sub
jge
or
out
ss
fmull
add
ret
cmp
mov
and
add
cwtl
mov
sar
fs
hlt
xchg
fildll
cmc
test
call
jmp
cmp
mov
imul
add
dec
sub
cs
sahf
xor
add
mov
test
jnp
clc
xor
add
test
jmp
jle
add
jge
imul
clc
cltd
ss
mov
xchg
cltd
sti
push
add
sub
add
add
or
xor
add
add
xchg
jmp
clc
es
hlt
mov
dec
clc
ljmp
test
cwtl
bound
add
add
jmp
lahf
cmp
data16
dec
test
cmp
fwait
jmp
sub
sub
push
adc
add
push
clc
int
clc
or
clc
ss
and
add
clc
cmpsb
clc
cmpsl
clc
mov
cld
stos
jmp
add
div
sub
cmp
sbb
std
add
popf
inc
clc
jecxz
sub
xchg
mov
jae
add
sbb
test
sbb
add
add
test
aaa
stos
repnz
sbb
cmp
loopne
jo
add
cmp
imul
mov
ja
mov
xor
add
leave
inc
add
fwait
jmp
das
nop
stos
mov
dec
iret
xor
add
add
movsb
clc
mov
jmp
add
add
clc
adc
add
mov
mov
fwait
jmp
add
cwtl
push
add
adc
add
clc
pop
clc
pop
mov
popf
inc
clc
cmp
mov
rcrl
mov
add
fwait
jmp
inc
nop
push
fbstp
add
clc
inc
clc
ljmp
ljmp
xchg
xor
add
pop
mov
icebp
in
das
lock
inc
clc
sbb
add
data16
dec
sbb
or
in
ds
xbegin
lret
pusha
add
adc
add
add
jo
add
clc
addr16
enter
add
ja
test
push
add
cld
push
ret
xchg
cs
push
pop
fnstenv
jle
sub
push
clc
push
cld
je
add
add
clc
xchg
movsl
clc
dec
fadds
clc
pop
clc
fisubs
add
add
testb
mov
and
add
jge
add
movsl
clc
loop
xor
add
mov
popa
add
mov
add
cmp
cmp
clc
in
nop
ja
add
ret
clc
aaa
pop
stos
and
add
jne
ret
clc
jp
add
mov
clc
incl
icebp
fwait
jmp
sub
aas
pop
cltd
repnz
pushf
push
clc
pop
push
add
cmpsl
clc
dec
xchg
xlat
push
inc
clc
pop
or
add
imul
and
add
dec
push
pop
imul
add
in
push
add
lret
jecxz
push
and
add
clc
aaa
test
clc
mov
pusha
add
mov
clc
fnstenv
add
add
add
or
faddp
clc
stc
aas
out
inc
clc
test
cmpsb
clc
leave
hlt
mov
add
dec
sub
in
imul
add
add
add
filds
push
xlat
sub
fnstsw
push
pop
clc
stos
xor
clc
xor
add
clc
pop
fucompp
incl
inc
and
add
fisttps
add
mov
push
cmp
add
lcall
clc
inc
add
or
ljmp
es
sar
div
or
push
clc
mov
pop
xor
xor
add
clc
sub
add
dec
cmp
dec
into
test
rclb
clc
hlt
inc
add
pop
movsb
clc
adc
add
clc
mov
call
fwait
jmp
sub
push
add
xchg
sub
movsb
clc
jmp
aas
jmp
pop
sbb
clc
jno
add
fs
mov
add
pop
add
add
sbb
out
adc
add
add
in
movsl
clc
lock
add
add
dec
clc
lock
ss
or
add
imul
jmp
lcall
cmp
add
bound
add
cmpsb
clc
or
jmp
test
jp
mov
add
std
adc
xor
add
add
adc
add
clc
call
lods
sub
add
pusha
add
jl
add
cmp
aad
jns
shr
fwait
jmp
adc
mov
add
mov
clc
sub
aad
jl
jge
add
test
pop
push
sub
mov
in
sahf
pop
mov
jmp
sub
inc
jnp
scas
pop
jp
clc
lods
enter
add
clc
cmp
fwait
jmp
sub
jbe
add
mov
mov
xor
add
out
or
daa
clc
outsb
lahf
cmp
add
jae
add
clc
mov
movsb
sar
cmp
add
xabort
imulb
addr16
jecxz
cmp
push
ret
inc
or
clc
cmp
pop
inc
add
mov
or
add
lods
xchg
cli
test
addr16
cltd
lahf
jns
mov
pop
push
clc
inc
add
ret
add
add
cmp
add
adc
add
clc
inc
clc
xchg
cmp
imul
jb
add
xchg
cli
inc
clc
or
jno
add
into
pop
cmp
loop
pusha
add
inc
clc
pop
clc
mov
and
xabort
add
ss
add
call
or
ret
clc
pop
clc
adc
add
shl
enter
stos
mov
clc
mov
scas
sbb
add
pop
clc
loope
push
int3
stc
sub
clc
mov
call
fwait
jmp
outsl
mov
clc
xchg
xchg
aaa
sar
add
fwait
jmp
je
jno
adc
add
nop
clc
rol
clc
rclb
cmp
add
ficompl
clc
and
pop
loopne
loopne
clc
push
add
inc
add
hlt
shll
sub
jo
add
mov
add
mov
scas
add
clc
mov
inc
add
add
clc
xabort
sub
loope
cmc
inc
clc
jg
clc
mov
fistpl
xor
add
clc
dec
cmp
icebp
and
add
in
push
clc
xchg
add
add
add
stos
test
lcall
sub
sub
mull
clc
shlb
add
clc
pop
jg
mov
add
popa
add
lods
stc
loop
out
lock
add
jg
int
and
add
outsl
js
adc
add
in
jb
add
fwait
insl
push
add
pop
clc
and
pop
cltd
jb
add
xchg
movsl
clc
push
add
add
sbb
insl
fs
adc
add
add
cmp
add
xchg
push
clc
outsl
dec
or
add
mov
bound
add
and
clc
inc
clc
dec
push
std
sbb
add
add
mov
fcompl
cmp
add
inc
clc
sbb
add
and
add
cmp
mov
adc
cmp
xchg
and
add
mov
jge
xor
add
popa
add
out
push
in
cltd
add
add
push
insb
push
sbb
movsl
clc
jecxz
sbb
out
mov
add
je
cmp
cld
push
ret
cwtl
insb
test
add
clc
and
add
sbb
sub
add
mov
fisubl
clc
shll
decl
sub
add
insb
push
stos
jbe
pop
insl
scas
mov
add
out
out
test
mov
clc
scas
xchg
fdiv
ret
clc
gs
jnp
pop
and
add
clc
insl
push
clc
inc
clc
leave
in
pop
icebp
es
sub
add
add
test
add
add
add
test
xchg
bound
add
add
and
add
add
mov
add
add
jle
clc
call
sub
add
clc
je
mov
fwait
mov
lret
add
clc
xbegin
push
sub
or
es
pop
imul
clc
and
add
fs
std
pop
cltd
mov
aam
clc
je
cmp
pop
loopne
xchg
imulb
inc
clc
mov
in
addr16
mov
push
ret
pop
xchg
mov
clc
jp
sub
add
repnz
mov
push
ret
sub
push
sar
dec
sub
add
sbb
add
shll
add
clc
repnz
pop
xbegin
jl
aas
loop
push
add
push
lret
dec
pop
fs
xchg
nop
cld
mov
clc
shll
lret
addr16
icebp
or
add
mov
sub
jmp
outsl
dec
push
or
addr16
xlat
xlat
mov
clc
push
clc
scas
int
leave
rolb
xchg
xlat
into
cmp
clc
sub
mov
add
or
cmpsl
clc
sbb
add
add
jmp
jnp
xbegin
mov
dec
or
clc
xor
adc
add
clc
cld
and
clc
out
xchg
xbegin
cmp
dec
inc
add
dec
std
dec
imul
add
sahf
mov
nop
cltd
mov
fcmovb
clc
push
add
add
icebp
insl
cmpsl
clc
outsl
add
mov
sar
call
add
mov
mov
in
pop
cmp
or
push
ret
addb
lods
or
mov
test
xchg
cld
xchg
sub
shlb
cmp
jg
addr16
cmp
clc
sub
add
scas
jle
fistpll
jo
add
push
add
lahf
fisttps
cmp
push
add
test
ds
clc
push
add
sar
repz
add
xabort
sar
fcomp
pop
popa
add
inc
add
mov
ret
clc
repz
aam
add
bound
add
aaa
jbe
clc
jo
add
add
stos
scas
loop
fyl2xp1
mov
jbe
inc
add
inc
xor
fstps
mov
add
dec
iret
je
sbb
dec
pop
or
adc
add
add
mov
roll
jo
add
bound
add
jbe
aas
aad
sub
icebp
mov
clc
test
mov
in
push
not
xchg
fmuls
add
xchg
mov
fwait
jmp
adc
out
pop
test
add
add
ficoml
add
test
xchg
sti
leave
ja
sub
fidivrs
in
push
add
cld
and
add
add
int3
and
add
clc
push
mov
mov
sub
mov
mov
mov
pop
cmp
aam
sar
xor
add
clc
push
clc
lahf
inc
add
or
inc
add
cmp
add
aam
clc
iret
data16
xchg
sub
cmp
aad
push
dec
fwait
jmp
mov
insb
fwait
scas
or
add
jns
clc
mov
cs
or
sub
sub
fiadds
add
lret
outsl
and
pop
repz
clc
dec
push
jle
clc
xabort
jne
mov
call
lret
pop
mov
push
out
and
add
add
imul
inc
clc
loopne
or
add
mov
xchg
outsb
enter
cmc
jne
jno
add
xchg
rcr
xabort
push
push
cld
push
ret
add
das
xchg
mov
xor
jo
add
push
add
cli
lea
out
shlb
add
clc
popf
lock
add
lock
repz
mov
clc
cmp
clc
out
movsb
clc
and
cmp
rcrl
gs
das
xbegin
sbb
sbb
jp
add
sbb
clc
enter
xbegin
add
cld
adc
add
lods
xchg
or
mov
clc
pop
xadd
sqrtps
add
add
jae
add
add
add
adc
add
mov
clc
push
clc
int
xchg
cmp
add
lahf
xor
add
jo
add
add
sbb
sbb
xor
add
fwait
lods
dec
pop
fisttpl
mov
in
push
sbb
add
clc
inc
clc
push
add
mov
lcall
or
dec
and
add
loopne
cmp
mov
add
out
push
test
fwait
jmp
scas
and
jnp
and
add
jb
add
into
insb
imul
test
incl
push
sub
inc
add
mov
nop
or
add
add
clc
cmp
hlt
fs
je
clc
fs
cmp
sti
xchg
data16
fst
jo
add
push
fwait
jmp
sub
add
mov
mov
clc
mov
inc
add
cmp
add
aas
sub
xor
add
fmull
mov
cld
push
ret
push
mov
stos
lret
fildll
push
jl
fwait
jmp
lahf
sbb
aad
cmpsl
clc
pop
ja
clc
or
add
adc
clc
pop
cmp
push
cmpsl
clc
xor
add
jo
add
cmp
or
shufps
clc
clc
dec
inc
add
mov
jns
test
jl
clc
dec
or
add
dec
fisubrs
js
add
sbb
repz
jmp
sub
cmp
add
ret
clc
jge
clc
ficoml
into
pop
clc
or
add
dec
scas
sbb
jne
fwait
jmp
test
clc
jg
bound
add
add
adc
cmp
pop
clc
shll
pop
mov
sar
arpl
add
clc
not
pop
leave
fadds
add
clc
adc
add
cmp
add
dec
inc
add
xbegin
dec
mov
mov
insb
sbb
jmp
aaa
xchg
or
or
dec
sub
add
jbe
arpl
add
xor
add
add
repnz
jmp
add
jmp
das
dec
adc
fidivrl
clc
outsb
add
movsb
clc
in
cmp
test
outsl
add
add
repz
cmp
push
dec
outsl
cmp
add
scas
aam
clc
pop
add
int
cmp
in
repnz
xchg
movsl
clc
cmp
clc
aam
movsl
clc
sub
add
in
ja
clc
outsl
daa
clc
repz
xchg
ss
sahf
or
fstl
add
dec
mov
clc
mov
xchg
push
add
xchg
xbegin
and
add
clc
adc
add
or
in
inc
clc
add
sub
decl
lahf
jmp
pushl
fs
clc
or
adc
add
add
sub
add
clc
dec
int3
ficompl
clc
dec
lea
add
in
mov
clc
insl
lcall
add
and
cltd
popa
add
and
add
add
lahf
out
shrl
lcall
add
jmp
fwait
jmp
pop
inc
pop
sub
mov
es
popf
or
aas
dec
jae
add
clc
cmp
add
add
add
add
das
adc
add
add
scas
mov
add
sbb
es
fwait
adc
add
add
clc
inc
add
sbb
jnp
add
mov
inc
clc
cmp
jg
clc
icebp
inc
clc
mov
add
clc
push
clc
in
xlat
and
add
push
add
pusha
add
mov
xchg
cmp
out
xor
inc
add
and
add
push
add
fisubs
add
clc
add
add
dec
aam
clc
xbegin
test
add
push
cmpw
fwait
jmp
adc
dec
and
add
clc
jge
mov
mov
add
stos
daa
clc
dec
jnp
clc
add
adc
add
mov
clc
inc
clc
mov
clc
mov
add
mov
adc
add
cmp
mov
add
sti
ret
clc
sar
sub
add
add
aam
lock
clc
or
add
push
or
add
cli
clc
cmpsb
clc
xchg
test
jb
add
add
call
jp
and
add
jne
movsb
clc
fmuls
adc
add
cmpsb
clc
push
cwtl
and
add
mov
or
rorl
sar
add
jmp
fwait
jmp
push
sub
or
clc
aas
rorb
inc
clc
mov
mov
push
push
leave
test
fsubr
out
in
loope
push
add
ljmp
add
fwait
adc
clc
test
addr16
sti
mov
fsubr
inc
add
sbb
fwait
jmp
outsl
adc
add
lret
mov
mov
stc
inc
add
cmc
mov
and
add
enter
or
and
stos
adc
add
cmc
lock
ret
sar
mull
add
mov
std
fidivrl
and
add
repnz
pop
test
cmpsb
clc
aam
cld
or
sbb
mov
inc
add
sbb
fwait
jmp
or
into
mov
cwtl
testb
push
add
pusha
add
rol
clc
loop
inc
add
or
sub
add
add
add
or
out
popa
add
dec
sub
fwait
jmp
test
loopne
lret
bound
add
cmp
clc
xor
pop
jp
adc
clc
mov
mov
add
outsl
mov
xor
cmp
fcompl
fucomip
popa
add
outsb
fst
mov
push
xchg
fwait
jmp
sub
add
sbb
cmp
jge
je
arpl
add
dec
pop
jle
call
push
add
loop
cli
push
inc
clc
bnd
aad
dec
jge
clc
xlat
in
cmp
mov
lcall
mov
fwait
jmp
pop
push
sahf
dec
scas
fwait
xchg
mov
aam
sbb
add
mov
in
sbb
pop
aam
clc
inc
clc
or
mov
add
int3
mov
add
and
add
test
pushf
scas
fldenv
add
imulb
fadds
add
add
cmc
cwtl
lahf
and
sbb
or
fwait
jmp
scas
or
clc
aaa
roll
lock
clc
sarl
add
or
clc
cmp
add
add
clc
fbstp
jbe
clc
out
push
dec
mov
clc
fwait
mov
popa
fdivr
lcall
add
mov
xor
add
add
add
add
clc
loope
and
lahf
inc
add
fwait
shlb
clc
int3
clc
movsb
clc
cmp
add
sbb
fwait
pop
push
jae
add
xchg
pop
cmp
add
sub
inc
add
add
add
jno
add
dec
push
push
shr
fwait
jmp
aaa
aas
movsb
dec
xor
add
mov
inc
clc
xbegin
mov
clc
mov
mov
xchg
mov
pop
iret
xor
cmp
clc
rcr
push
in
inc
clc
lret
jle
mov
add
sbb
clc
cmpsb
clc
cmc
push
add
or
add
cmpsb
clc
mov
out
out
xchg
popf
dec
mov
sbb
clc
sar
clc
sar
test
fwait
jmp
dec
aas
dec
sub
clc
das
pop
cld
int
sbb
loopne
cmp
or
pop
pop
in
in
data16
dec
loop
inc
add
mov
scas
cmpsl
clc
push
add
push
add
lea
xchg
cmp
hlt
xor
xor
add
or
fwait
jmp
cmpsb
push
clc
std
gs
js
xchg
clc
jne
clc
decb
pop
mov
lock
add
add
arpl
add
xchg
mov
mov
or
push
jmp
ja
push
seto
add
pop
cmp
add
add
rorb
mov
add
jae
add
cmp
das
cmpsb
clc
nop
test
mov
hlt
mov
shl
clc
insb
xchg
xchg
xchg
xor
add
add
pop
push
add
cld
cwtl
ss
mov
cmc
pusha
add
or
clc
aad
push
enter
clc
ret
clc
or
pop
leave
inc
clc
int
jb
add
add
dec
pushf
sbb
movsb
clc
cmp
pop
jne
clc
add
add
add
mov
hlt
pop
mov
inc
add
addr16
hlt
sbb
lahf
sbb
add
sti
xor
add
push
add
lods
nop
aaa
push
sub
add
mov
mov
dec
adc
xchg
mov
xor
add
test
or
add
add
mov
fwait
jmp
inc
sbb
out
fcoms
add
ja
add
add
jge
ret
clc
test
scas
in
test
mov
add
add
and
add
mov
cmp
mov
cld
push
ret
mov
cmpsl
clc
sbb
adc
add
lret
enter
add
cli
inc
clc
dec
sbb
fnsave
dec
pop
clc
aaa
sub
add
mov
clc
enter
aas
cmpsb
clc
notl
and
jmp
push
mov
add
out
mov
stos
rolb
ret
sub
sub
hlt
cmp
xbegin
add
hlt
or
add
cli
lcall
inc
add
xchg
stc
scas
jno
add
outsl
scas
adc
add
clc
ret
clc
lea
data16
xchg
nop
cmp
add
mov
clc
lcall
pop
mov
push
test
push
push
fwait
jmp
jg
add
pop
xbegin
clc
ds
add
fwait
jmp
nop
jno
and
jo
add
mov
popf
push
xchg
inc
add
aas
cmpsb
sub
inc
clc
aas
jbe
add
add
cmp
xchg
mov
push
lods
sbb
out
dec
mov
cmp
add
js
add
es
int3
add
add
add
nop
mov
mov
xor
int3
clc
loopne
cmpsb
clc
jmp
outsl
cmp
xchg
aaa
cmc
lcall
fwait
jmp
mov
add
add
enter
sub
add
clc
aam
clc
test
aas
xchg
jl
aaa
shll
add
clc
ret
inc
add
xor
clc
mov
add
add
add
pushf
push
mov
clc
popf
jle
clc
and
add
sub
fstps
aam
lock
add
xor
add
int3
ds
cmp
popf
gs
fsubl
clc
push
pop
sub
aaa
cmpsb
clc
push
inc
clc
jnp
add
add
pusha
add
adc
jns
clc
push
ret
clc
gs
inc
add
jbe
or
clc
sarl
add
mov
add
clc
test
sub
clc
dec
fs
ja
fwait
in
push
add
xchg
popf
mov
jne
add
mov
stos
js
shll
add
adc
adc
incl
jno
add
sub
add
and
add
mov
fwait
jmp
push
adc
test
clc
fildl
clc
out
out
mov
clc
idiv
clc
xchg
or
sbb
fists
xchg
outsl
mov
clc
sub
stc
or
inc
add
jmp
add
shlb
clc
or
add
lcall
or
lock
jle
clc
into
jns
add
imul
cmp
clc
jmp
in
sar
cmp
push
loopne
inc
add
clc
push
push
fwait
jmp
sub
add
dec
movsl
clc
mov
clc
stc
sarl
hlt
gs
je
cmp
add
cmp
xor
add
das
add
fwait
jmp
das
xchg
sbb
push
ret
lods
adc
andb
add
and
add
call
push
ret
sub
sahf
ss
add
xchg
lret
push
clc
pop
and
add
imul
push
add
movsl
clc
cmovb
add
add
pushl
out
sar
dec
out
pop
repnz
dec
push
add
mov
or
add
shlb
add
add
inc
clc
pushf
imull
clc
pop
jp
clc
insl
fdivrs
push
adc
add
mov
clc
dec
push
mov
cld
push
ret
mov
stc
mov
je
fwait
jmp
or
and
add
xor
add
insb
std
movsl
clc
jl
lret
xbegin
and
add
clc
clc
lret
jae
add
mov
sub
jmp
mov
push
mov
mov
popa
add
xchg
cltd
pop
cmp
add
lods
lahf
sub
add
sahf
fwait
cmp
mov
xchg
fs
out
cmpsl
clc
pushf
ret
roll
add
mov
add
bound
add
mov
mov
clc
and
add
mov
jo
add
mov
add
rorl
push
jmp
scas
sub
imul
sub
inc
add
into
mov
jmp
aas
scas
adc
sbb
pusha
add
mov
xor
add
clc
popf
mov
pop
test
xchg
inc
clc
sbb
test
jmp
inc
add
insl
inc
clc
xchg
xchg
xor
xchg
jmp
add
addr16
cmp
jno
add
push
jle
jg
mov
fwait
jmp
mov
in
imul
add
add
mov
fwait
jmp
dec
fs
sub
insb
aas
cli
sar
add
add
add
clc
mov
mov
sbb
jnp
jecxz
hlt
xchg
mov
call
fwait
jmp
sub
cmc
loop
fwait
das
cmp
ret
clc
repnz
mov
pop
xchg
dec
xor
add
clc
cmp
add
add
lods
dec
in
fmuls
clc
sarl
fsubrl
lret
dec
insb
lahf
neg
sbb
inc
add
jmp
add
push
add
out
push
pushf
fwait
jmp
or
aaa
sub
outsl
and
leave
or
jl
add
scas
xchg
mov
jmp
test
adc
add
lahf
lcall
add
add
aas
popf
inc
add
sub
dec
jle
push
push
inc
add
sub
es
or
xchg
mov
xchg
pop
scas
mov
add
add
inc
adc
jmp
clc
insl
loop
mov
add
sub
sub
addr16
sbb
add
pushl
jbe
pop
cwtl
adc
clc
stos
fwait
fs
lea
fabs
clc
xchg
fcmovne
enter
mov
pop
nop
dec
dec
ljmp
mov
cwtl
sar
fs
or
add
fwait
jmp
cmpsb
add
fcomip
inc
clc
lods
hlt
push
fwait
jmp
jge
inc
add
push
clc
or
push
add
jnp
pop
adc
add
push
fsubl
add
push
nopl
test
stos
lret
insb
outsl
pop
mov
xchg
test
bound
add
clc
jne
mov
add
es
add
add
clc
clc
pop
xchg
xbegin
dec
inc
clc
test
and
add
add
mov
data16
add
add
clc
pushf
mov
clc
adc
add
sbb
clc
and
add
pop
mov
fadds
insl
scas
sbb
js
clc
dec
jbe
add
out
mov
int3
repnz
push
add
aam
clc
cmp
sahf
nop
popa
add
lods
mov
pop
cmp
xchg
int3
cmp
cmp
clc
push
add
aas
push
clc
clc
jmp
mov
xor
add
add
test
fcos
lcall
decl
add
add
add
clc
gs
xor
call
cmc
out
mov
and
xabort
add
inc
clc
add
add
add
jmp
je
lea
and
adc
negl
jnp
clc
xchg
fidivs
cmp
and
add
aam
and
int
lods
jno
add
fwait
jmp
jno
xchg
mov
add
shll
dec
cs
add
add
sbb
cmpsl
clc
stc
popa
add
dec
push
add
pop
add
popf
fdivrs
push
add
fwait
jmp
cwtl
adc
lock
add
xchg
inc
add
dec
push
in
cmc
mov
mov
add
xor
add
and
add
arpl
add
inc
clc
xchg
jmp
add
ficoms
std
add
add
add
loop
dec
push
push
mov
pop
add
add
push
add
clc
mov
fistl
add
add
xchg
jp
fwait
add
add
mov
enter
pop
clc
push
add
sbb
add
sahf
or
or
out
in
decl
sbb
leave
jmp
clc
dec
stos
jb
add
sti
adc
pop
or
test
pop
iret
out
add
mov
clc
test
and
add
ljmp
fwait
jmp
or
jge
push
fwait
jmp
sub
cld
fwait
bound
add
add
cmc
cmp
lods
adc
add
push
sub
xbegin
sbb
add
xchg
mull
jecxz
bound
add
add
pushf
or
add
add
test
add
and
add
ret
stos
and
add
clc
fdivp
inc
clc
js
ret
clc
jmp
iret
mov
pusha
add
inc
clc
xor
add
add
add
clc
out
mov
clc
test
or
add
popf
movsb
clc
fdivrl
push
xor
add
mov
clc
stc
test
pop
test
adc
ficomps
push
mov
lods
mov
hlt
es
rcrl
sahf
pusha
add
stos
mov
lret
pop
dec
in
pop
push
lcall
add
sub
das
mov
mov
cmp
add
stc
outsb
data16
mov
decl
lret
shll
fcomp
outsl
mov
add
sbb
add
dec
in
test
addr16
xor
add
add
hlt
xchg
icebp
mov
rclb
add
add
clc
push
push
clc
adc
add
dec
jmp
cld
adc
add
clc
mov
mov
loope
or
dec
cwtl
pop
rorl
fwait
jmp
sub
into
mov
add
xchg
add
add
add
mov
add
pop
clc
iret
mov
clc
xlat
xor
mov
inc
clc
mov
icebp
shlb
add
add
add
fwait
jmp
je
adc
add
xor
mov
repz
add
push
clc
clc
add
add
mov
clc
fwait
add
add
xchg
imul
add
scas
lods
mov
clc
cmp
add
mov
ss
add
lods
add
jmp
add
faddl
pop
hlt
cs
xor
add
movsl
clc
inc
clc
inc
add
dec
jl
clc
hlt
jb
add
clc
test
pusha
add
add
add
mov
mov
into
stos
fdivrl
mov
xchg
cmp
jecxz
negb
add
and
cwtl
xchg
jl
jmp
sub
lea
xabort
mov
cmp
add
icebp
sub
pop
jne
add
test
mov
and
add
fs
jns
sti
divl
and
add
ljmp
add
jbe
add
adc
add
add
inc
add
push
add
sbb
sbb
popa
add
jmp
add
pop
addr16
pop
es
jb
add
clc
fmull
push
addr16
xor
add
pop
pop
cs
clc
mov
insb
mov
ss
lcall
xchg
sub
add
leave
adc
call
clc
sbb
lock
jmp
sbb
add
add
add
mov
adc
loope
lods
repz
clc
ficoml
add
add
in
iret
sbb
popa
add
iret
pop
test
xchg
out
cmpsb
clc
push
add
push
clc
cmp
clc
pop
cs
clc
push
add
icebp
insb
and
add
mov
sbb
mov
jae
add
add
push
add
fwait
jmp
or
pop
inc
add
testb
cmp
add
add
decl
add
add
sub
popa
add
icebp
sub
popf
decb
outsl
add
xor
add
add
lock
jl
mov
fwait
jmp
lods
aas
ja
clc
adc
add
insb
and
js
imul
adc
add
add
add
decl
test
add
fwait
jmp
scas
inc
add
or
add
add
sub
push
add
cmpsl
clc
popa
add
fmuls
in
or
shlb
add
add
sub
movsl
clc
std
push
gs
jmp
data16
in
mov
add
rcrb
cs
clc
sbb
add
sar
mov
clc
mov
xchg
int3
fdivl
add
pushf
push
pop
lea
fcmovnu
xor
add
add
fwait
xor
add
add
test
pop
sbb
loop
fwait
jmp
imul
add
mov
ret
clc
sub
add
popa
add
cld
and
add
test
ljmp
clc
fwait
lock
pop
jle
sar
imul
mov
clc
or
mov
add
add
cwtl
inc
clc
daa
clc
inc
add
int3
xchg
cmpsl
clc
cs
pop
loopne
and
jb
add
clc
repz
add
clc
push
add
pushf
scas
mov
jno
add
cwtl
fidivrl
jecxz
xchg
loop
ret
dec
mov
out
lods
mov
add
insl
cmp
add
clc
sbb
clc
xlat
adc
mov
fwait
jmp
dec
fwait
sub
push
mov
jbe
add
pop
clc
in
xchg
add
add
jmp
xchg
test
or
lret
clc
xchg
nop
jmp
testb
clc
mov
push
add
cld
movsl
clc
sahf
ret
clc
mov
mov
clc
int
add
mov
iret
and
add
inc
fwait
jmp
insb
dec
sbb
iret
iret
cli
faddl
outsl
push
jne
fwait
jmp
sarb
cmp
pop
mov
fwait
jmp
mov
add
add
clc
aad
or
xchg
hlt
mov
stos
fwait
loopne
js
rep
cld
push
ret
and
sub
clc
lahf
sbb
mov
sti
gs
stc
inc
add
repz
xchg
es
gs
std
inc
clc
and
add
add
add
pop
xchg
hlt
push
hlt
test
jno
add
sar
clc
sbb
add
repz
push
movsb
clc
lock
ret
clc
push
add
in
je
or
loope
jbe
clc
jnp
add
lods
cmc
push
add
xor
add
clc
fmuls
clc
jl
jne
pop
push
jo
add
nop
test
sbb
inc
add
sbb
cld
push
ret
es
pop
jns
jb
add
loope
imul
das
sar
mov
fwait
jmp
pop
xchg
sub
add
lea
mov
clc
xchg
int3
push
or
pop
popf
sar
clc
int3
sub
add
or
adc
add
movsl
fwait
jmp
scas
dec
sub
vdivps
mov
rorl
cs
add
mov
stos
test
push
add
or
clc
cld
or
clc
inc
clc
lock
add
in
fcompl
fisubs
mov
add
lret
cmpsl
clc
push
es
cmp
repz
mov
dec
add
add
sbb
pop
cld
push
ret
cwtl
lea
inc
fistl
add
dec
xor
add
push
clc
mov
push
daa
inc
add
or
cmp
xabort
dec
xor
add
inc
clc
mov
leave
sub
es
xchg
xchg
fadd
clc
je
clc
test
mov
icebp
hlt
js
xor
add
outsl
sub
clc
push
dec
repz
clc
pop
xor
sbb
rcrb
fwait
mov
mov
add
push
sar
clc
jns
xlat
mov
clc
out
daa
clc
jmp
and
add
clc
cwtl
fdivrs
in
push
filds
int
mov
clc
cmp
lea
jbe
push
add
xor
add
xchg
cmc
addr16
lcall
add
fwait
sbb
add
fsubrs
pop
dec
push
add
cmp
clc
xbegin
stos
fidivl
jp
clc
leave
in
mov
clc
scas
in
daa
clc
out
mov
dec
dec
cmc
xchg
insl
push
sbb
clc
xchg
add
and
add
adc
add
xor
add
insl
jmp
clc
or
add
xor
add
add
insl
outsb
outsl
or
adc
add
clc
push
add
dec
pop
test
jno,pn
add
sti
jno
add
clc
xor
add
fstps
clc
mov
and
sub
mov
inc
fwait
jmp
insb
or
jecxz
shrd
add
mov
dec
imul
pop
push
add
daa
clc
imul
add
push
add
pop
psubsw
clc
adc
fs
dec
xchg
sbb
jmp
fwait
jmp
jge
add
repz
xor
add
test
sbb
mov
adc
decl
test
add
or
out
dec
inc
add
xchg
into
pop
adc
add
xchg
inc
clc
mov
test
add
add
mov
adc
ds
aas
xor
add
xlat
out
lret
add
add
test
fdivrs
repz
clc
or
add
add
fwait
jmp
mov
add
mov
add
inc
add
xabort
or
push
push
push
pop
adc
int3
and
add
mov
add
sbb
clc
clc
mov
dec
fisubrs
clc
cmp
clc
iret
adc
clc
pop
inc
add
pop
adc
addr16
mov
aaa
movsl
clc
xchg
arpl
add
pop
gs
add
add
add
add
or
xchg
jecxz
cmp
or
add
push
mov
add
in
push
mov
fwait
jmp
add
icebp
xabort
clc
xor
add
push
adc
xchg
outsb
lahf
cmp
add
addr16
mov
pop
mov
xchg
xor
add
clc
mov
clc
pop
pop
scas
xor
fwait
in
lock
pop
js
int
dec
push
call
mov
add
mov
fwait
jmp
or
mov
js
fistps
jne
adc
add
add
lods
je
clc
sbb
andb
or
dec
add
add
inc
add
std
clc
idivl
lahf
not
pop
jnp
clc
mov
test
pop
mov
clc
dec
in
mov
loop
sub
rclb
add
fisubl
add
dec
jle
test
add
mov
aas
or
sub
mov
inc
add
jecxz
xchg
xchg
xchg
push
push
jmp
or
fisttpll
aaa
iret
stos
xchg
popf
jge
fsubs
add
loopne
test
shl
fwait
jmp
dec
sub
add
add
add
jae
add
add
outsb
int3
gs
cld
test
push
clc
push
add
mov
repz
and
add
enter
mov
sbb
xlat
push
mov
clc
rdpmc
add
sbb
clc
scas
jg
cwtl
pop
and
add
clc
sbb
test
push
add
fwait
jmp
xor
add
add
imul
clc
cwtl
jle
jns
clc
add
cli
adc
add
sub
lcall
clc
cmp
clc
es
mov
push
ljmp
aam
imul
clc
cmpsl
clc
xor
add
clc
in
pop
push
hlt
xchg
sbb
clc
pop
cmp
mov
jp
clc
push
cmc
cli
aas
pop
push
or
jbe
sbb
or
cmp
mov
addr16
xchg
add
add
clc
xor
add
or
out
lea
add
clc
sub
fsts
fwait
jmp
sub
ret
clc
dec
xor
add
clc
pop
mov
je
pop
add
add
cs
gs
cmp
and
add
add
dec
repnz
clc
xchg
mov
pop
addr16
bound
add
add
add
push
inc
clc
xchg
vrcpps
add
clc
cmp
xchg
push
add
add
add
add
xchg
push
xor
add
add
sub
clc
adc
mov
add
icebp
mov
pop
stos
inc
add
pop
imul
jl
push
pop
mov
inc
clc
xchg
push
add
fstp
or
clc
sub
adc
add
add
add
add
clc
sub
xor
add
jb
add
dec
sub
add
pop
repnz
clc
adc
add
adc
add
clc
scas
and
add
cwtl
jg
and
test
sti
mov
ljmp
add
loopne
jmp
clc
cli
movsb
clc
in
or
add
je
pop
clc
sbb
add
aaa
insb
dec
jge
clc
fcmovnbe
clc
addr16
mull
int3
ja
clc
int
movsb
clc
test
dec
je
int
scas
ss
xchg
insl
add
add
lcall
fwait
jmp
sbb
clc
pusha
add
mov
add
cld
push
ret
sub
push
in
loopne
sti
popa
add
inc
clc
push
add
inc
clc
pop
test
outsl
fs
cmp
clc
cmp
fnsave
mov
jl
jp
fwait
xchg
or
shlb
mov
clc
scas
movsl
clc
call
push
add
dec
lods
dec
sti
jbe
or
clc
pop
mov
push
insl
cmpsl
clc
sbb
add
xlat
repnz
data16
push
push
fwait
jmp
push
pop
sub
addr16
cmpsl
clc
sar
clc
add
xchg
pop
adc
add
sub
clc
hlt
imul
xchg
xor
clc
and
add
fnstcw
add
clc
gs
nop
mov
push
adc
add
mov
repnz
add
or
ds
add
and
add
add
push
sar
clc
sub
push
in
push
push
icebp
ds
int3
out
loop
jle
push
add
xlat
pusha
add
lcall
mov
es
int
scas
sar
add
lea
pop
push
add
clc
xchg
and
add
add
cmp
jbe
rcrl
pop
int
clc
pop
mov
add
aas
jg
pop
xchg
pop
mov
dec
add
roll
clc
add
pop
insl
cli
or
add
cmp
dec
mov
mov
cmp
or
add
clc
sbb
clc
xchg
jp
push
fwait
jmp
cmpsb
imul
add
outsl
adc
add
xchg
mov
sar
clc
push
clc
lods
divl
mov
cs
adc
clc
jle
add
jl
jl
clc
inc
clc
fiaddl
add
add
add
movsl
clc
pop
fs
jne
clc
sti
cs
and
add
clc
jno
add
xor
add
or
lcall
adc
add
add
xchg
xabort
cmpsl
clc
ret
clc
rol
clc
daa
clc
mov
and
add
cmc
push
add
dec
xor
add
sub
push
not
fwait
jmp
pop
sub
push
stos
movhps
pusha
add
mov
add
dec
scas
mov
clc
out
fwait
mov
xchg
fbstp
daa
clc
cmp
clc
shlb
sarb
xchg
mov
mov
test
clc
pop
std
dec
mov
add
xchg
dec
xchg
loope
xchg
mov
das
repnz
pop
push
add
push
mov
mov
fwait
jmp
sbb
sub
fs
xchg
rcl
pop
clc
and
add
in
insl
mov
adc
cmc
xchg
mov
jns
clc
std
mov
inc
add
daa
clc
inc
add
fistps
jp
clc
aas
call
xchg
fwait
jmp
and
sub
dec
pop
clc
dec
popf
mov
jmp
sub
adc
ret
clc
adc
add
clc
push
push
clc
xchg
xchg
sub
xbegin
pop
and
jmp
mov
fwait
xor
lahf
into
mov
scas
xchg
add
ja
aad
cmp
cmp
imul
xchg
inc
clc
xabort
shl
fwait
jmp
test
add
cmp
incl
clc
fwait
jmp
add
cld
or
clc
int3
inc
clc
add
add
add
cmp
out
push
cmp
or
add
push
nop
outsl
mov
inc
clc
push
jmp
jp
or
ss
in
cmp
mov
add
ss
push
add
and
add
add
test
ret
clc
push
add
mov
loope
cwtl
imul
adc
add
insl
sub
sar
clc
jno
add
mov
cld
rclb
add
mov
dec
in
mov
clc
lods
or
fs
jecxz
shlb
lcall
fwait
jmp
aas
push
cmp
add
add
frstor
add
repz
jmp
lea
je
ds
push
add
jp
add
loope
ss
ss
shl
clc
in
scas
lea
pop
sar
inc
add
gs
pop
bndldx
jnp
pop
mov
pusha
add
fdivr
clc
out
jae
add
clc
cmp
cwtl
push
add
and
clc
dec
out
xor
add
mov
shll
mov
cmp
clc
cmp
pusha
add
xlat
stos
popa
add
pop
fcmovbe
out
cmp
push
je
add
mov
clc
sub
clc
mov
xchg
test
jmp
in
mov
xor
test
enter
clc
mov
xbegin
mov
shrb
inc
add
add
add
push
add
out
cmp
inc
clc
xbegin
dec
pop
and
add
add
mov
pop
hlt
inc
add
lock
add
loop
cmp
clc
jnp
mov
mov
add
inc
clc
out
outsb
nop
add
xchg
push
inc
add
sub
insb
sub
int
movsl
clc
jb
add
or
imul
jns
fisubs
fwait
jmp
je
outsl
inc
add
ror
and
add
shr
dec
out
cmp
add
jo
add
mov
cmp
xchg
mov
clc
pop
cmp
into
adc
add
add
add
xchg
sar
dec
int3
mov
clc
int3
dec
fnstenv
add
and
add
fistpl
add
pop
pop
lea
clc
stos
pop
js
clc
and
add
clc
mov
mov
fwait
jmp
cmpsb
nop
movsl
clc
xor
add
add
add
lret
push
in
cmp
or
add
lcall
cmp
dec
pop
adc
add
scas
lret
add
lods
int3
int
clc
cmp
push
add
xor
add
sub
add
int
xor
add
add
push
scas
das
inc
clc
stc
int
dec
push
cmp
inc
add
mov
add
or
clc
shlb
add
add
test
mov
jmp
imul
clc
repz
and
das
test
push
mov
clc
cwtl
outsb
icebp
lods
adc
add
inc
clc
int
ret
sbb
add
lahf
lret
add
add
clc
xchg
inc
add
test
lods
inc
add
dec
aas
cmp
clc
aam
xchg
cwtl
xchg
test
push
aam
lods
or
add
xor
add
or
cli
dec
sub
pop
int
xchg
and
add
mov
add
xchg
jl
cmp
aam
sbb
icebp
sar
add
pushf
mov
pop
or
and
jae
add
cmp
sbb
clc
or
clc
mov
cmp
movsb
clc
mov
add
in
mov
push
dec
fwait
jmp
or
fs
movsl
clc
adc
ficoms
inc
add
mov
push
and
add
jnp
cmp
test
stc
dec
mov
add
xchg
push
cmp
aaa
mov
adc
call
cmpsl
clc
xchg
test
fwait
jmp
sub
and
add
add
clc
mov
or
add
cmp
adc
add
sbb
lcall
add
add
add
add
mov
cld
push
ret
sub
add
icebp
loopne
and
or
xchg
enter
mov
dec
inc
add
push
mov
add
inc
clc
inc
add
sarb
add
scas
jno
add
mov
mov
gs
das
loop
arpl
add
inc
add
aad
sub
mov
insb
ljmp
inc
clc
in
xor
add
add
rcrb
add
outsl
fsubrl
add
cmp
jmp
push
add
adc
add
add
add
add
add
rcrb
call
sub
inc
clc
pop
lcall
add
add
add
dec
xchg
sub
inc
adc
add
xchg
inc
pop
cmp
add
stc
test
aad
xchg
ret
mov
je
clc
mov
repz
stos
sbb
inc
add
lret
push
int3
and
add
std
fisttps
jne
fwait
jmp
cmp
clc
js
add
pop
arpl
add
add
clc
sarl
jae
add
xchg
addr16
in
test
dec
sahf
ds
add
fiadds
enter
add
clc
ret
clc
outsl
stos
je
sbb
enter
clc
ror
inc
add
ficompl
adc
add
sgdtl
add
add
clc
fwait
repz
jmp
test
or
add
pop
pop
sub
cmp
jge
jge
clc
mov
xor
jle
rorl
add
mov
jmp
clc
stos
adc
lea
add
add
mov
jno
add
add
mov
clc
adc
add
add
push
push
add
lods
shl
clc
push
jbe
mov
mov
cmc
outsl
xor
inc
clc
out
cmc
dec
and
add
cmp
sbb
decl
sar
lcall
sub
idivb
popa
add
xchg
leave
dec
push
fwait
mov
das
adc
add
clc
bound
add
pop
in
in
jmp
xchg
aaa
xor
add
inc
add
pop
pusha
add
clc
sub
jge
push
add
inc
clc
add
add
clc
sub
gs
divb
clc
adc
add
push
js
dec
sub
sub
icebp
pop
cmp
sub
jg
mov
aaa
into
gs
in
push
xor
cmp
fldcw
insl
sub
sub
or
clc
mov
insb
lods
cmpsb
clc
adc
adc
add
outsb
push
cmp
sub
jg
add
sar
jg
clc
sub
clc
jle
js
into
xlat
pop
xchg
push
add
sbb
fwait
jmp
nop
jp
jge
pop
xor
sbb
clc
and
inc
clc
pop
jns
add
rol
clc
xchg
push
push
fwait
jmp
mov
xor
pop
movsl
clc
jns
pop
clc
inc
add
pop
inc
add
pop
aaa
pop
arpl
add
clc
xchg
jae
add
add
scas
sub
xchg
or
stos
adc
push
add
xchg
and
clc
dec
jne
movsl
clc
jb
add
inc
clc
jmp
clc
sbb
cmp
dec
fwait
jmp
push
dec
sahf
sub
lods
or
dec
mov
outsb
imul
clc
sub
sbb
rol
clc
ret
push
clc
cmp
clc
inc
add
stos
sahf
mov
mov
lahf
fcoms
add
xchg
mov
clc
pop
and
add
add
inc
clc
hlt
inc
add
clc
xor
add
push
add
dec
sub
add
or
cwtl
test
cmp
jbe
jbe
add
xor
clc
out
dec
cmovo
add
clc
mov
push
sar
add
dec
cmp
jmp
add
jbe
add
cmp
clc
repz
mov
stos
fwait
jmp
and
xor
sbb
sarl
mov
add
add
fwait
jmp
sahf
xor
sub
clc
ja
and
add
clc
jmp
add
inc
clc
out
sub
clc
or
or
add
mov
clc
mov
xor
add
and
pop
aad
add
inc
clc
or
insb
sub
clc
stos
push
cld
cmc
sub
or
mov
mov
push
pop
inc
add
aas
rcr
sar
bnd
jne
add
push
clc
mov
jecxz
xchg
sub
int
pop
jae
jmp
sub
out
xabort
clc
xor
add
xor
cld
push
ret
sub
sbb
jg
clc
inc
clc
mov
fldt
mov
clc
test
push
jno
add
clc
sub
clc
push
shr
fwait
jmp
mov
sbb
jmp
sub
and
push
jge
clc
aas
xor
add
sub
mov
add
mov
pop
fwait
jmp
dec
je
sub
clc
push
jne
fwait
jmp
inc
clc
stos
xor
sub
clc
aas
sbb
sar
push
ret
nop
je
and
add
shrl
jmp
sub
int
mov
clc
lcall
jnp
shlb
add
shll
mov
add
mov
xchg
loope
cmp
clc
pop
adc
add
dec
cmp
add
push
add
xchg
pushf
leave
cs
mov
add
adc
add
icebp
add
movsb
fwait
jmp
pop
sub
push
outsl
ljmp
into
jp
add
test
mov
add
add
inc
clc
push
add
dec
loopne
pop
jae
add
xabort
clc
jb
add
and
add
add
popa
add
mov
cmp
and
add
sbb
mov
add
rcrb
ja
jo
add
sbb
mov
ror
fwait
jmp
xchg
dec
cmpsb
cmpsb
clc
insb
xor
add
test
repnz
in
or
cld
or
stos
and
add
fcomip
cwtl
in
cmp
add
scas
dec
ljmp
or
clc
sti
cmp
clc
cmp
scas
cmp
test
das
aas
lcall
fwait
clc
cmpsb
clc
lea
push
lock
jmp
mov
xor
add
inc
add
addr16
roll
clc
cmp
rorb
add
jnp
clc
pusha
add
nop
xbegin
add
ss
push
fwait
jmp
inc
pop
outsl
pop
test
mov
clc
and
add
notl
mov
mov
mov
clc
add
dec
mov
rcll
popf
dec
cmp
clc
sbb
add
iret
push
add
int
clc
cmp
clc
inc
add
cltd
cmp
aam
clc
scas
pushf
imul
add
daa
clc
dec
jno
add
loope
add
jp
xchg
cmp
clc
mov
mov
dec
or
mov
add
sti
pop
jle
add
cmp
decl
cld
push
ret
add
jle
inc
add
movsl
clc
shll
add
push
and
add
xchg
or
inc
add
xchg
int3
in
pop
inc
clc
cmp
clc
cmp
push
clc
or
jle
xor
add
mov
and
add
lcall
call
jnp
scas
cli
shrl
add
or
cmpsl
clc
icebp
lret
add
add
outsl
sbb
jge
fwait
jmp
mov
sub
clc
jae
add
sahf
ret
clc
sbb
mov
mov
jmp
clc
cwtl
dec
pop
lret
inc
add
jb
add
clc
cmp
add
jg
leave
clc
pop
lock
cmp
sti
xchg
mov
sub
add
ficompl
gs
jecxz
mov
push
add
and
js
cmp
push
add
push
jmp
call
or
clc
aam
adc
add
add
data16
rcl
lahf
mov
jne
fwait
jmp
xchg
pop
cmpsb
clc
pop
testl
add
pop
xor
add
jno
add
clc
inc
clc
push
xchg
in
xchg
sbb
clc
sbb
clc
popa
add
je
add
add
inc
clc
cs
xor
add
adc
add
and
mov
clc
add
clc
aaa
adc
add
jo
add
xor
pop
cld
push
int
stos
and
add
and
add
lret
clc
mov
aad
clc
adc
add
add
cmc
dec
or
add
and
mov
clc
test
mov
movb
jmp
sub
pop
xchg
daa
clc
or
add
loop
jne
clc
pusha
add
mov
movsb
clc
and
add
fimull
add
fwait
jmp
xor
iret
imul
rclb
add
xchg
out
ficomps
mov
clc
pushf
or
mov
into
aad
test
push
inc
clc
mov
cmp
push
and
add
clc
decl
mov
push
fwait
jmp
inc
jp
clc
aaa
cmp
mov
mov
add
push
sub
add
sub
clc
lret
cmp
add
add
clc
or
add
in
popa
add
cmp
clc
mov
sub
mov
leave
fwait
jmp
sub
sbb
fxch
fwait
lea
add
and
clc
mov
add
bnd
add
sbb
clc
out
stos
clc
or
xor
clc
sarl
dec
movsl
clc
cmp
add
adc
add
push
jae
add
loop
fs
adc
add
in
into
push
add
sahf
ss
and
add
clc
and
add
sahf
popa
add
fcoms
add
jnp
push
add
aaa
outsl
adc
add
mov
fwait
jmp
add
nopl
mull
jmp
int3
out
stc
jge
jp
imul
clc
inc
clc
adc
xabort
clc
xabort
mov
fwait
jmp
jno
and
insl
adc
add
adc
ja
add
clc
and
add
add
add
clc
mov
jecxz
jno
add
add
add
fsubrs
add
and
mov
fadd
clc
bound
add
aam
clc
inc
clc
sarl
fwait
jmp
adc
sub
mov
add
fsubp
clc
xchg
sbb
test
loopne
sbb
clc
lret
fs
add
inc
add
cmp
add
test
sti
push
jecxz
jns
mov
add
sbb
leave
jecxz
sbb
clc
jmp
clc
fldenv
ret
clc
sarl
push
fwait
jmp
jno
add
cltd
xor
add
add
add
lock
clc
xor
push
jb
add
clc
mov
in
fs
call
jmp
jp
fwait
jmp
add
clc
stos
or
mov
mov
clc
cmp
mov
add
std
fwait
insb
jnp
xchg
and
adc
add
test
mov
add
arpl
add
gs
stos
test
add
mov
sbb
js
mov
clc
dec
push
add
xchg
std
sbb
sub
gs
jg
push
das
sbb
add
sub
sub
mov
add
adc
add
add
jg
aad
in
mov
imul
add
push
add
cmpsb
clc
dec
faddl
clc
pop
popa
add
lods
push
add
outsb
mov
add
stc
cmp
sahf
cmp
stos
inc
add
lods
cli
sbb
mov
pop
mov
ja
clc
pushf
fsubs
clc
sbb
fisubrl
and
add
clc
in
pop
xor
add
in
loopne
in
jg
shrb
adc
add
xchg
mov
out
ret
clc
push
add
jg
add
push
push
ret
or
lock
adc
add
clc
mov
push
clc
xchg
rorb
in
push
add
and
clc
cwtl
adc
add
add
sbb
add
add
add
inc
clc
das
nop
mov
push
movsl
decl
sbb
loop
aam
test
or
mov
lahf
repnz
or
or
mov
lods
stc
test
dec
int
xabort
xchg
jp
cltd
push
mov
jle
clc
shrl
clc
mov
inc
clc
xor
add
clc
scas
cmp
mov
clc
loop
rcrl
pop
add
and
jmp
test
add
jae
add
clc
jmp
clc
mulb
dec
cltd
cmp
add
fldcw
xchg
push
dec
jbe
add
xlat
inc
add
mov
add
jp
ret
js
clc
outsb
mov
cmp
add
leave
fdivrs
sar
leave
inc
clc
loop
mov
add
mov
imulb
sub
imul
pop
arpl
add
jmp
add
clc
mov
outsb
mov
testl
clc
inc
add
outsb
push
add
add
out
and
and
add
add
gs
das
add
add
add
in
push
loope
xor
clc
mov
add
imul
shrl
clc
sub
add
or
or
xor
add
ret
clc
inc
add
xchg
inc
clc
dec
inc
add
arpl
add
or
push
stos
imul
jmp
pop
sar
push
push
push
adc
add
add
xor
add
dec
imul
mov
add
add
mov
clc
mov
add
pop
push
add
adc
push
add
adc
xchg
mov
clc
jo
add
add
clc
xor
add
add
stos
or
aam
mov
fwait
sar
add
cmp
add
inc
add
mov
cmp
add
mov
clc
cmp
add
clc
and
push
lret
fadds
sbb
add
clc
mov
jg
clc
adc
add
add
add
jno
add
clc
ds
add
dec
stc
data16
and
add
clc
scas
movsb
clc
out
xchg
popa
add
xchg
addr16
nop
rcll
fisubrs
sbb
clc
add
add
clc
sub
mov
mov
jmp
and
nop
adc
mov
clc
push
jns
xchg
push
cmpsb
clc
xabort
add
gs
outsb
fidivrs
dec
sbb
clc
fs
lcall
cmp
scas
fnstsw
mov
clc
ja
pop
add
add
lea
mov
add
add
clc
lods
xor
add
sub
inc
clc
bound
add
add
clc
xabort
clc
sti
mov
dec
mov
clc
push
add
sbb
enter
std
call
push
ret
mov
cmp
bswap
test
lods
xor
add
dec
arpl
add
or
clc
cmp
push
jle
stc
aaa
jno
add
sbb
clc
dec
mov
mov
jmp
push
jmp
popa
adcb
add
mov
mov
add
xchg
arpl
add
cmp
popf
inc
clc
mov
xchg
jl
into
or
push
or
clc
mov
xabort
popa
add
push
xchg
pop
ret
jecxz
out
sub
clc
mov
push
add
add
in
pop
popa
add
in
sub
add
adc
add
push
add
or
jae
add
into
push
jle
adc
add
push
jae
add
ljmp
sbb
push
clc
cmpsl
clc
fwait
das
jbe
add
or
add
leave
not
hlt
lods
popf
out
sub
add
add
add
cli
cmp
jo
add
dec
push
clc
and
mov
add
jmp
inc
clc
xor
add
fsubl
movsl
clc
cli
mov
js
clc
ret
clc
sub
sub
add
add
loop
jbe
clc
shrb
clc
pop
cwtl
add
add
add
fs
jg
loopne
sbb
out
cmp
clc
jb
add
sahf
mov
leave
cmp
sub
adc
add
add
mov
ret
fwait
jmp
aas
lea
aas
sub
cmp
mov
mov
clc
in
lcall
mov
fwait
jmp
dec
push
mov
clc
cmp
aaa
test
adc
adc
jns
movsl
clc
or
clc
popa
add
stc
sub
loope
bound
add
xor
imul
into
mov
add
jae
add
test
cmp
bound
add
aas
fisubs
add
add
inc
add
sahf
loopne
insl
addr16
jb
add
clc
rclb
add
clc
mov
clc
jb
add
clc
xchg
mov
xor
add
cmc
mov
pop
or
push
add
ljmp
add
add
mov
or
clc
ret
clc
mov
clc
mov
sbb
push
ret
add
clc
out
inc
clc
ret
clc
push
push
fwait
jmp
xor
data16
addb
add
stc
dec
cmp
add
mov
icebp
sub
clc
out
cmpsl
clc
iret
lret
inc
clc
jae
add
add
push
add
pop
dec
movsl
clc
push
add
in
add
add
pop
call
cltd
fadds
and
mov
mov
mov
fwait
jmp
adc
sub
jp
and
add
clc
cmp
cs
rorl
imul
shlb
add
add
sbb
push
out
insl
ljmp
clc
jmp
mov
xor
add
pop
push
add
sar
xor
add
xabort
push
jmp
aas
and
and
push
adc
dec
dec
inc
add
movsb
clc
mov
clc
clc
xchg
jns
clc
imul
push
add
cwtl
xor
add
test
pop
into
movsb
clc
cmp
repnz
push
data16
testb
clc
mov
clc
outsb
pop
sbb
add
fstl
enter
mov
dec
adc
add
jns
inc
clc
popa
add
fldcw
push
add
stos
iret
insb
sbb
cmp
in
xchg
mov
add
add
pushf
jge
inc
add
xchg
mov
jmp
sub
push
pop
jge
icebp
test
add
dec
ret
clc
fsub
clc
push
data16
cmp
add
add
clc
add
add
push
clc
mov
repz
add
clc
bound
add
mov
fistps
clc
std
lods
xchg
mov
xchg
stos
insl
bnd
clc
cwtl
pushf
incb
add
leave
cmp
lahf
push
add
ljmp
movsb
clc
jge
add
dec
xchg
stc
sbb
popa
fwait
jmp
jge
inc
xchg
lret
clc
pop
cmp
dec
mov
lret
incl
push
je
and
add
cwtl
repz
add
xlat
xchg
cwtl
push
cmc
leave
repnz
aas
add
add
popa
add
cltd
cmp
jle
sti
push
add
push
xor
add
and
add
add
xbegin
cmp
add
loope
loope
and
add
clc
xchg
sub
insl
xchg
out
xor
add
and
jne
hlt
clc
jle
int3
cmp
add
cli
adc
add
add
push
faddl
ret
dec
sbb
ja
mov
int3
adc
push
add
in
adc
add
out
and
add
mov
adc
jmp
push
jp
aaa
data16
movsl
clc
dec
aad
ds
pop
push
je
jg
jmp
je
xabort
jae
add
and
add
sub
stos
dec
inc
clc
fwait
adc
test
add
sar
adc
add
dec
cmpsb
clc
xchg
lock
clc
sub
clc
cmp
and
add
xlat
pop
inc
clc
je
clc
and
push
mov
xor
inc
add
push
aas
das
inc
into
data16
mov
clc
push
lea
fwait
jmp
movsb
and
cwtl
das
bnd
add
jg
leave
push
inc
clc
insb
das
jnp
int3
addr16
xor
add
mov
bound
add
addr16
pop
fistps
pop
ds
lret
clc
mov
clc
or
clc
xchg
ja
fistpl
inc
clc
jg
ficoms
clc
popf
call
add
inc
add
insl
sub
clc
icebp
mov
clc
inc
clc
mov
xor
push
jmp
xor
jg
mov
jge
push
jbe
insl
pop
clc
mov
clc
out
pop
xbegin
aam
lods
mov
pop
add
add
mov
lahf
sbb
mov
mov
clc
jle
add
lcall
cmp
add
or
clc
xbegin
add
xor
add
clc
push
jo
add
loop
icebp
cmpsb
clc
mul
clc
dec
sar
cmpsl
clc
mov
jb
add
mov
adc
fbld
clc
dec
cmp
jbe
addr16
add
add
clc
sti
sub
add
dec
sbb
add
dec
ljmp
outsl
loope
imul
dec
test
hlt
divb
movsl
clc
xchg
aaa
add
add
sti
cli
add
add
clc
mov
xchg
push
add
ja
int3
jl
clc
nop
dec
mov
clc
cwtl
cwtl
jno
add
mov
add
clc
mov
xchg
out
lea
sub
clc
xchg
push
mov
jns
or
add
add
cmp
leave
mov
psrlq
mov
fwait
jmp
mov
sub
clc
scas
bound
add
clc
call
fwait
jmp
pop
cwtl
mov
clc
sub
dec
mov
add
imul
fs
push
cmpsb
clc
sar
add
int
clc
jbe
add
mov
add
dec
xchg
cmpsb
clc
cmp
out
int
clc
adc
add
das
ja
jnp
pop
mov
clc
add
inc
clc
test
add
cmp
imul
sbb
add
jp
mov
dec
mov
xor
cmpsb
clc
mov
clc
pusha
add
test
dec
push
push
add
mov
clc
insl
mov
inc
clc
test
pop
or
cld
push
ret
mov
xor
add
pushf
mov
add
mov
addr16
cmp
clc
test
dec
inc
add
xchg
jecxz
jbe
clc
clc
push
fs
sbb
cmp
adc
add
jge
sti
add
push
ds
cmp
dec
jnp
repnz
clc
test
aaa
push
push
push
fwait
jmp
push
jge
sub
arpl
add
clc
jg
jge
clc
push
inc
add
popf
mov
add
sub
dec
pop
into
xchg
clc
lret
mov
pop
cmp
stos
inc
add
aad
out
js
addr16
test
jp
add
add
test
or
add
mov
clc
pop
add
add
clc
fucomi
loopne
stc
cmp
cmpsb
clc
popa
add
mov
stos
dec
pop
pop
cmp
jbe
imul
fwait
jmp
mov
xor
clc
add
add
sar
sar
adc
add
add
imul
cmp
clc
lock
mov
loop
lret
stos
lahf
iret
pop
data16
ret
clc
cmp
ds
jl
sar
dec
cmp
add
pop
pop
fbld
add
add
mov
mov
fwait
jmp
sub
outsl
pop
dec
cmp
gs
jl
xchg
adc
xchg
daa
clc
push
add
inc
clc
mov
cmp
inc
clc
js
clc
es
into
or
adc
ret
clc
aaa
dec
xchg
and
add
fbld
inc
clc
mov
jmp
movsb
sahf
push
das
cmp
add
jl
clc
xchg
in
fmuls
xor
int3
aad
clc
xabort
aam
clc
test
add
add
pop
rcl
in
popa
add
pusha
add
std
push
sub
aad
push
int
cmp
jl
clc
inc
clc
je
cmp
sti
or
add
sahf
adc
add
add
add
mov
clc
lahf
and
add
cmp
clc
or
lea
decl
cld
push
ret
sub
clc
jnp
clc
push
decl
cld
push
ret
adc
mov
clc
adc
add
or
inc
clc
out
cmp
lods
std
sahf
movsl
clc
add
mov
lahf
shlb
push
add
cmpsb
clc
rol
clc
fcomps
popf
pusha
add
adc
add
clc
pop
outsb
leave
jne
add
enter
clc
adc
add
imul
add
mov
cld
push
ret
sub
sub
xor
add
hlt
push
add
fwait
jmp
sub
add
cmp
notl
dec
pusha
add
outsb
pop
jg
clc
inc
add
xbegin
cmp
hlt
pop
cmc
lcall
sub
clc
mulb
add
cltd
or
add
push
jne
cmpsl
clc
cmp
jge
clc
leave
addr16
lret
jmp
clc
in
data16
dec
dec
add
add
cmp
clc
push
clc
icebp
adc
add
sar
sbb
clc
addr16
out
mov
clc
adc
add
lahf
mov
insl
and
add
add
out
lods
shlb
add
lahf
test
xchg
xchg
aam
inc
clc
shl
and
add
add
inc
clc
popf
sub
sub
add
add
stc
iret
ret
clc
push
clc
mov
add
sub
add
clc
negl
add
mov
pop
daa
clc
roll
hlt
lahf
js
add
add
add
in
mov
xor
add
add
sbb
inc
clc
adc
je
add
fwait
jmp
mov
pop
push
cmp
gs
mov
pop
clc
test
or
ljmp
dec
shr
inc
add
ja
clc
popf
nop
add
add
dec
cmp
add
je
add
ss
xor
add
dec
xchg
xabort
clc
sbb
clc
addr16
inc
clc
notb
jg
add
mov
inc
add
pusha
add
loop
dec
xchg
cmp
mov
xlat
push
push
fwait
jmp
sub
test
add
mov
bound
add
hlt
repnz
clc
dec
out
sbb
mov
clc
xchg
cmp
clc
jne
adc
add
insl
or
add
add
push
aam
jno
add
add
es
mov
out
mov
out
in
out
fildl
add
cli
cmp
add
out
mov
add
out
dec
outsb
clc
lret
test
sub
sbb
inc
add
push
cmp
mov
clc
test
int3
dec
jp
clc
push
pop
sub
clc
mov
cmp
adc
add
test
cwtl
or
clc
mov
sbb
jle
add
das
jmp
push
mov
scas
jp
flds
insb
dec
pop
jb
add
add
clc
mov
mov
pop
aas
in
push
add
inc
clc
dec
into
dec
fisttps
xor
add
clc
lret
or
sarl
loop
add
add
push
add
pop
or
xchg
loop
mov
add
clc
mov
add
clc
mov
add
lods
cmp
add
ret
clc
dec
ret
clc
aam
adc
add
xor
add
mov
in
cmp
push
inc
cld
push
ret
push
push
add
mov
insb
inc
add
push
fstps
fs
loopne
pop
mov
xchg
rcrl
xchg
iret
das
jbe
clc
sbb
mov
add
fnstsw
jae
jmp
push
rorb
push
add
xor
add
cwtl
mov
push
add
mov
xbegin
mov
add
xchg
aaa
add
add
add
pop
das
lea
cld
push
ret
inc
add
cld
push
ret
cwtl
dec
add
clc
cmp
jl
clc
lods
adc
ja
add
jno
add
test
sahf
xchg
rcrl
popa
add
lock
clc
dec
mov
clc
sar
add
add
stos
pop
mov
clc
lods
clc
sarb
imul
sub
dec
fwait
jmp
sub
sub
sub
mov
mov
add
jg
test
pop
dec
adc
add
clc
sub
pop
add
pop
and
add
dec
lret
clc
movsb
clc
mov
cmp
mov
and
add
add
add
outsb
gs
js
clc
inc
add
pop
imul
inc
add
pop
sub
add
pop
leave
stos
pop
cmp
clc
in
in
add
or
push
lock
jmp
movsb
sbb
and
add
clc
into
or
stc
mov
out
dec
mov
mov
cmp
cmp
clc
xor
add
sub
mov
ljmp
add
add
pop
clc
jae
add
cmpsb
clc
jmp
add
pusha
add
mov
ds
inc
clc
dec
sub
cli
out
jae
add
in
add
add
and
add
test
fbstp
add
add
lea
clc
test
clc
jns
clc
fmuls
xbegin
sub
outsb
mov
sbb
fsubrs
movsb
clc
stc
stos
testl
pop
add
out
sub
clc
push
add
testl
xor
add
and
lock
xchg
repnz
mov
inc
clc
cmp
clc
stos
mov
stc
jmp
mov
add
cwtl
jl
add
xor
add
sub
cltd
fisubl
and
add
mov
sub
clc
mov
add
add
fwait
add
clc
xor
add
mov
add
xchg
adc
std
lret
outsb
add
add
scas
fisttpll
clc
or
mov
fwait
jmp
add
fwait
xor
add
add
mov
clc
es
leave
arpl
add
adc
add
inc
add
mov
clc
cmp
clc
and
add
lods
icebp
flds
add
add
xor
clc
inc
clc
xchg
fs
sbb
or
clc
inc
add
insl
jle
add
dec
ret
clc
mov
js
clc
data16
jecxz
in
in
adc
add
clc
or
clc
xor
add
mov
clc
into
jo
add
imul
push
add
call
lcall
add
adc
add
add
mov
add
mov
xor
add
add
xabort
movsl
clc
xchg
xor
test
xor
fwait
jmp
adcb
sar
sub
add
add
push
clc
ljmp
jns
xor
add
clc
pop
stos
mov
add
fists
sar
and
add
in
cmp
mov
cmp
add
jp
push
push
add
sbb
movsb
fwait
jmp
or
push
pusha
add
loope
mov
mov
push
ret
sub
add
add
inc
clc
std
sub
decl
mov
push
mov
call
cmp
clc
jae
add
data16
push
add
sbb
clc
loopne
imul
clc
movsl
clc
jbe
clc
in
add
dec
repnz
jge
add
sar
clc
stos
jb
add
mov
movsl
clc
inc
add
jg
clc
loope
pop
add
add
jp
and
add
ljmp
std
pusha
add
mov
addr16
sub
add
cmpsb
clc
sub
leave
push
xchg
shll
add
jne
call
add
mov
out
stos
cwtl
dec
shlb
fs
pop
cmp
sbb
add
sahf
pushf
sub
pusha
add
push
clc
add
add
add
clc
nop
xbegin
dec
pop
aad
enter
xor
add
jle
xchg
mov
sbb
add
adc
add
clc
aad
cmp
dec
lahf
and
add
enter
cmp
add
ja
or
add
clc
gs
push
clc
sar
mov
add
cmp
adc
add
aad
lret
adc
add
mov
add
mov
xchg
push
push
ret
and
aas
popl
dec
jecxz
push
jmp
sub
aas
dec
mov
add
jle
xor
clc
decl
jmp
cmpsb
bndldx
out
outsb
bound
add
clc
loope
jecxz
jo
add
add
cli
aas
stos
mov
imul
and
clc
jnp
clc
add
add
mov
push
mov
xchg
and
add
clc
xor
aam
jo
add
add
fisubrs
add
fsubr
mov
clc
mov
clc
nop
inc
add
cmp
sbb
pop
test
pop
clc
jns
cmova
dec
or
jo
add
loop
jge
lea
add
mov
iret
test
sbb
ja
add
fiadds
add
lods
daa
clc
aad
clc
hlt
imul
add
out
mov
push
mov
dec
mov
inc
clc
jecxz
add
add
add
fwait
jmp
je
jp
cmp
loopne
in
fidivs
add
inc
clc
sti
adc
add
adc
int3
imull
fwait
jmp
sub
sub
xbegin
test
pop
push
add
pop
hlt
popf
loope
push
or
add
es
mov
add
add
xchg
mov
push
sub
cld
push
ret
sub
pop
cmp
xbegin
dec
jb
add
cmp
clc
out
push
add
imul
dec
repnz
push
or
clc
hlt
mov
push
add
xor
add
add
mov
lret
mov
push
add
sub
sahf
and
add
cmpsb
clc
divb
pop
mov
lcall
ljmp
test
fdivr
lcall
add
inc
clc
push
add
test
add
add
add
push
lahf
ds
add
sar
lcall
jg
inc
add
loope
adc
add
add
sar
adc
add
clc
das
sbb
add
insb
jno
add
add
fcomip
mov
jg
add
sub
add
stos
in
sub
add
sbb
rclb
push
sbb
sub
jg
xor
insb
xchg
or
sbb
add
or
and
popa
add
xchg
out
arpl
add
mov
add
jge
cld
mov
rcl
pusha
add
jmp
fmuls
push
jbe
lea
cltd
push
add
or
fstps
mov
testl
jno
add
push
sub
in
xor
insb
or
sbb
adc
add
sbb
test
add
push
add
cmp
aas
lea
pop
pushf
add
add
adc
test
lahf
mov
xchg
add
add
xor
add
inc
clc
xor
add
dec
popa
add
cmp
adc
clc
lods
inc
clc
cmp
out
aam
das
popf
std
or
jo
add
add
or
clc
js
clc
lods
test
cmp
cmp
data16
or
add
or
clc
jno
add
ret
xor
add
jmp
clc
jge
xchg
xor
add
clc
dec
jo
add
icebp
mov
clc
jge
mov
cld
push
ret
sub
cld
push
ret
sub
xor
xor
add
outsl
into
sti
pop
clc
jae
add
fnsave
add
stos
push
jg
add
mov
clc
outsl
sar
sub
clc
ss
jl
movsb
clc
xchg
mov
add
push
dec
sbb
xchg
xchg
mov
loopne
mov
fwait
movsb
clc
popa
add
dec
xor
add
jecxz
mov
sar
add
cmp
cli
popa
add
pop
clc
mov
clc
mov
sbb
push
ret
pop
and
mov
dec
leave
je
add
xor
add
add
add
add
clc
sub
add
clc
lcall
add
data16
aam
and
add
clc
mov
add
test
push
add
pop
lret
add
lods
repnz
incl
fwait
jmp
lea
pop
clc
in
push
clc
mov
sbb
daa
js
decl
insl
add
add
add
jg
ret
clc
mov
arpl
add
dec
fdivrl
clc
sar
clc
js
add
pop
push
add
cmpsb
clc
fiaddl
cmp
clc
xchg
xor
adc
add
sbb
mov
clc
arpl
add
pop
clc
mov
aam
or
jno
add
clc
mov
add
popf
rorb
jp
clc
cmc
push
clc
sbb
xchg
call
mov
clc
rolb
add
movsl
clc
mov
or
xchg
pop
add
icebp
xor
add
cld
push
ret
pop
jno
test
dec
scas
pop
rolb
add
adc
add
pop
clc
lcall
xor
add
loope
sar
mov
add
leave
int3
push
dec
and
cmp
jno
add
add
xlat
xchg
pop
clc
pop
pusha
add
pop
mov
xor
add
in
mov
add
push
add
push
xchg
sub
clc
push
cld
in
xor
cmp
add
mov
push
add
xchg
mov
or
sbb
sub
xchg
mov
sub
sbb
aam
mov
mov
mov
clc
sbb
mov
in
jp
pop
in
inc
clc
sub
nop
scas
or
in
fwait
jmp
data16
test
clc
sub
call
cld
push
ret
jge
pop
sub
push
ljmp
in
in
sbb
mov
fldenv
xchg
rcrl
mov
add
icebp
fisubl
xchg
xchg
push
add
daa
clc
dec
data16
lahf
jle
mov
pop
dec
and
push
clc
dec
xor
push
scas
xchg
sub
push
imul
add
pop
call
lcall
sbb
add
outsl
cltd
xabort
clc
nop
sbb
cmp
mov
jbe
push
add
dec
call
fwait
jmp
test
jmp
sbb
clc
or
testl
clc
inc
clc
pop
outsl
je
sbb
mov
lret
sbb
clc
xchg
lock
push
hlt
cmc
inc
add
call
in
fbstp
negl
ret
clc
or
cmp
add
in
outsb
in
daa
clc
movsb
clc
inc
add
jge
sar
clc
add
add
popf
das
mov
sbb
cmp
clc
das
movsb
clc
jecxz
test
pop
adc
add
bound
add
add
int
jge
add
cmp
cmc
test
out
cmp
clc
gs
mov
lcall
add
gs
cwtl
cli
cltd
mov
js
add
lods
add
add
cmp
clc
inc
clc
sub
sub
out
and
add
pop
jno
add
mov
fwait
jmp
jge
add
aas
addr16
pop
ds
xor
add
pop
mov
fwait
xabort
clc
bound
add
add
ficomps
mov
inc
clc
outsl
or
jmp
fwait
jmp
aaa
push
push
mov
xor
mov
mov
scas
sbb
add
mov
clc
loop
pop
in
cmp
daa
clc
pop
pop
mov
add
sub
add
inc
clc
dec
cltd
test
clc
inc
add
xor
add
clc
int3
js
clc
add
add
jae
add
nop
and
jb
add
pusha
add
mov
repnz
out
cmp
icebp
push
add
xor
add
repnz
inc
add
lcall
mov
das
or
shll
add
scas
sbb
push
ret
lods
test
xchg
je
dec
dec
call
sub
dec
clc
loop
push
add
mov
clc
dec
lret
loop
push
xor
cmp
clc
jo
add
mov
clc
cmpsl
clc
shr
scas
popa
add
pop
aad
and
add
pop
dec
jecxz,pn
pop
push
inc
clc
lods
loop
mov
add
std
cmp
jmp
pop
jmp
clc
std
add
cmp
out
dec
in
add
add
sub
push
add
idiv
mov
aaa
rcl
inc
add
jno
add
add
insl
ja
jle
cmp
add
fs
cmp
add
popa
add
xor
add
add
icebp
lahf
cmc
mov
clc
pushf
dec
xchg
inc
clc
sbb
arpl
jmp
outsl
out
popf
cmp
out
lahf
ja
add
pop
fstpl
add
add
push
adc
add
clc
mov
add
nop
insl
jnp
xabort
mov
cli
in
xchg
xor
add
clc
loop
or
push
lret
gs
lock
jp
clc
push
push
add
int3
pop
repz
aad
cs
add
cs
inc
clc
fimuls
add
cld
fs
lock
add
jmp
jg
fwait
jmp
sbb
jns
hlt
mov
imul
clc
cmp
rcr
cmp
clc
aaa
pop
xchg
push
add
add
clc
adc
sar
clc
mov
js
clc
lahf
jge
dec
mov
fs
jge
mov
clc
lret
push
add
dec
push
fdivs
xchg
cmp
add
mov
mov
push
clc
stos
xlat
sti
fdivs
insl
ja
inc
add
push
es
cwtl
movsl
clc
cmp
clc
mov
jg
decl
cmp
adc
out
xor
add
clc
or
ret
lret
jbe
clc
rcrl
clc
cmp
clc
test
cmpsb
clc
xchg
dec
shrl
daa
clc
fstl
mov
fwait
jmp
and
ds
clc
xchg
js
add
test
gs
loope
sub
mov
add
push
add
ds
xor
add
clc
cmpsl
clc
jp
add
push
js
clc
or
add
das
outsl
mov
loop
scas
sub
pop
push
daa
clc
push
add
mov
clc
sbb
clc
sbb
add
and
adc
add
adc
fsts
in
jmp
push
sahf
mov
mov
lcall
sar
inc
add
dec
popf
into
shlb
add
ffree
clc
iret
aam
clc
inc
clc
and
add
inc
add
lods
adc
add
clc
mov
test
jmp
dec
inc
clc
push
stos
add
add
jb
add
dec
xchg
or
add
cmp
push
add
nop
xor
add
clc
inc
add
aam
add
add
clc
shlb
add
add
pop
adc
add
dec
push
add
pusha
add
inc
clc
push
clc
mov
mov
push
add
aam
je
loope
cs
imul
push
clc
fst
cmp
add
xchg
xchg
mov
clc
mov
mov
fwait
jmp
insb
movsb
and
bound
add
or
clc
movsl
clc
push
clc
mov
hlt
test
test
push
mov
cld
push
ret
sub
clc
or
cmpsl
clc
inc
clc
out
imul
mov
clc
xor
add
insl
popa
add
stos
push
out
idivb
clc
jmp
mov
mov
xchg
in
pop
inc
cld
push
ret
jge
dec
jg
mov
mov
sar
add
aaa
mov
jbe
clc
jg
adc
add
clc
stc
add
add
xchg
add
add
add
clc
cmp
cmp
clc
repz
dec
lods
jne
clc
je
mov
clc
lods
popa
add
hlt
mov
scas
push
clc
mov
in
mov
fnstcw
push
add
pop
clc
mov
fadds
add
mov
add
ss
xlat
mov
stc
mov
add
add
sub
clc
pop
addr16
ss
outsl
in
xchg
cmpsb
clc
int
dec
cmp
imul
add
shl
clc
adc
add
xor
add
add
stos
mov
cs
sub
xlat
mov
jnp
add
add
add
clc
scas
mov
add
arpl
add
cmp
add
outsb
jge
sar
rclb
sub
add
fwait
jmp
popa
xor
xchg
jbe
clc
shll
cmp
clc
sbb
repnz
xchg
pop
xlat
daa
clc
fisubrs
call
fwait
jmp
mov
sub
clc
repnz
clc
inc
add
hlt
sub
sub
cmp
add
clc
push
fs
dec
dec
inc
add
int
mov
data16
ficoml
clc
inc
clc
fnstcw
in
shl
clc
rcl
and
add
mov
pop
cwtl
pop
data16
inc
clc
fdivs
add
add
scas
out
inc
clc
xchg
icebp
test
sbb
adc
and
add
add
dec
imul
add
sahf
into
mov
sub
icebp
iret
cmp
int3
pop
gs
dec
push
add
call
sahf
in
in
and
add
mov
add
out
jae
add
add
jge
fidivrs
add
push
ret
lea
sub
add
add
sarb
mov
sbb
add
fucomp
cmp
add
testb
clc
test
std
xchg
in
mov
jg
clc
scas
stos
dec
clc
push
aaa
je
mov
test
cmpsb
clc
leave
xchg
and
add
bnd
add
pop
jbe
jmp
push
sub
push
sahf
xlat
fmuls
add
cmp
jmp
xor
mov
add
sub
add
aam
clc
sar
bndldx
adc
add
stos
jae
add
clc
fadds
jnp
sub
scas
jne
clc
pusha
add
and
push
inc
clc
mov
mov
sbb
clc
lock
add
adc
jno
add
hlt
xor
add
outsb
insl
pop
inc
add
pop
outsb
mov
pop
int3
cmp
xor
add
test
add
xor
add
add
add
shlb
clc
daa
clc
sahf
lahf
mov
add
decb
clc
mov
add
xbegin
add
push
add
mov
aad
clc
lret
sbb
dec
xchg
ja
clc
mov
add
mov
lcall
pop
xor
clc
out
movsl
clc
sbb
out
mov
sbb
add
out
cmp
jne
fwait
jmp
or
add
clc
ss
in
pop
mov
clc
cmpsl
clc
mov
or
fbld
add
data16
and
add
add
add
rep
fwait
jmp
push
popa
fs
jb
add
fs
pop
mov
mov
int
add
or
add
mov
mov
add
out
jb
add
add
je
incb
add
fnstenv
xor
add
and
add
into
ror
test
add
add
popa
add
or
add
mov
in
and
xlat
scas
out
mov
cmp
push
add
xchg
cmp
into
aas
in
lock
add
clc
cmp
clc
xchg
sarl
push
add
repz
mov
ret
cmp
clc
mov
test
clc
and
add
sub
pusha
fwait
jmp
add
cmp
adc
add
shlb
push
jno
add
aam
clc
xchg
sbb
push
ret
cmpsb
pop
cwtl
imul
jne
clc
mov
clc
imul
clc
aas
mov
out
inc
add
insl
sbb
inc
add
pop
cltd
imul
mov
clc
ret
clc
sbb
adc
ljmp
inc
cmpsb
sti
icebp
mov
clc
testb
sarb
clc
stos
out
cmp
xchg
cwtl
xor
add
push
and
cld
push
ret
xor
add
add
dec
cmp
fisttpll
in
mov
add
dec
dec
inc
add
adc
add
add
jne
clc
xor
add
add
pop
cmp
push
add
xor
add
mov
xbegin
fsubl
mov
clc
enter
adc
addr16
fdivrl
add
mov
add
jecxz
insl
cmpsl
clc
cmp
mov
hlt
outsl
jg
pop
pusha
add
cmc
sti
sbb
sub
add
add
push
add
sbb
add
fwait
vrcpps
add
clc
es
lcall
jmp
adc
mov
add
add
pusha
add
xchg
add
add
add
mov
clc
fisubrl
mov
add
es
cmp
xabort
pop
sbb
jmp
test
cmc
cmp
add
repnz
lcall
cmp
mov
lcall
mov
inc
add
fistps
js
xchg
jnp
xchg
lcall
xor
clc
js
mov
add
daa
clc
xchg
add
add
add
dec
xor
add
in
xor
add
mov
mov
clc
xchg
xchg
stos
mov
cmp
mov
dec
in
in
push
sub
int
js
clc
je
sub
or
xchg
int3
loop
push
mov
fwait
jmp
sub
lea
aas
popf
mov
add
mov
test
cmp
inc
clc
add
sarb
push
cld
push
ret
inc
es
pop
jp
mov
ja
decl
mov
sub
push
ret
sub
dec
in
pop
in
fwait
jnp
add
iret
js
pop
cmp
add
add
xabort
pop
xchg
add
add
loop
das
xbegin
stos
sbb
movsl
clc
xor
xchg
and
add
add
mov
clc
inc
clc
add
daa
clc
into
mov
inc
clc
lods
dec
jle
clc
mov
jecxz
fistl
add
cmp
aas
mov
push
or
clc
mov
clc
int
ja
add
outsb
dec
dec
clc
test
dec
mov
add
mov
jo
add
push
jmp
add
sti
pop
adc
add
clc
cltd
shrl
add
rcr
adc
dec
mov
clc
or
sbb
mov
fwait
jmp
fwait
pop
pop
xor
jl
add
repnz
add
pop
push
add
or
dec
xchg
into
ret
fiadds
add
scas
mov
add
mov
inc
clc
jecxz
cmp
das
in
cmp
xchg
mov
mov
lcall
cmpsb
jg
cmp
rcll
add
or
mov
fwait
jmp
je
jnp
push
cmp
clc
mov
aaa
xor
clc
add
add
leave
testb
jno
add
clc
mov
clc
lret
xabort
adc
add
jbe
clc
jbe
clc
inc
clc
test
test
push
add
nop
sbb
cmp
mov
add
call
nop
xchg
inc
add
int3
int
leave
mov
dec
mov
or
loope
xlat
mov
add
stos
push
mov
sub
xchg
and
add
xor
dec
nop
pusha
add
fidivrl
cmp
sar
lods
and
add
clc
mov
fwait
xchg
sbb
stc
inc
clc
roll
add
add
xlat
and
add
enter
inc
add
pushf
cmp
loopne
pop
adc
sub
xchg
mov
mov
clc
jp
into
rcll
add
pop
sbb
clc
mov
out
mov
clc
ds
clc
add
add
cmp
xor
add
add
and
add
add
popa
add
dec
lcall
add
sbb
clc
loopne
out
jp
jecxz
cmp
clc
pop
fyl2x
leave
xchg
lahf
test
pop
jg
jge
xor
add
clc
in
pop
pop
add
add
mov
sub
incl
lods
daa
clc
xchg
sahf
adc
add
or
add
ds
popa
add
dec
xchg
xchg
sahf
add
add
add
jns
mov
or
clc
mov
ret
add
loope
cmp
xabort
out
push
add
mov
test
ret
inc
push
xor
push
add
pop
aam
jae
add
lods
mov
adc
add
or
clc
popf
shll
add
add
xchg
ljmp
xchg
xchg
addr16
xlat
pushf
pushf
push
fwait
sbb
shrb
clc
xchg
xlat
fldcw
add
data16
lods
into
in
jmp
add
cli
repnz
xorps
dec
ss
lods
and
add
out
out
xor
mov
add
add
popa
add
cmp
mov
inc
add
or
xchg
dec
push
xor
add
clc
idivl
jbe
mov
jmp
mov
jae
add
add
clc
or
clc
arpl
add
and
add
repz
add
fwait
jmp
pop
test
mov
fdivr
inc
clc
inc
clc
bound
add
in
lods
daa
clc
mov
mov
xor
add
faddp
clc
inc
clc
cmpsl
clc
mov
dec
arpl
add
add
aaa
imul
movsb
clc
xrelease
test
pop
stos
sbb
imull
mov
add
es
inc
clc
or
add
xor
add
xchg
mov
lcall
decl
jmp
jmp
data16
imul
add
dec
stc
js
or
add
xlat
push
mov
cmp
sub
repz
clc
movsl
clc
pop
imul
cs
aad
clc
aad
inc
add
jecxz
outsb
jge
add
loopne
pop
sbb
clc
mov
xbegin
lahf
arpl
add
pop
pushf
jne
add
add
mov
dec
loope
imul
pop
fldenv
outsb
arpl
add
clc
sub
clc
fs
pop
xbegin
push
mov
clc
hlt
rorl
jne
xchg
repz
and
add
clc
loope
fucomp
int
jno
add
ret
fwait
jmp
ja
push
pop
das
mov
add
repz
pop
clc
aas
cmp
clc
inc
add
loopne
roll
add
jo
add
add
cmp
mov
fwait
jmp
push
scas
pop
push
add
call
es
leave
mov
test
scas
ss
call
clc
insl
mov
push
sbb
add
jno
clc
mov
or
push
cld
push
ret
and
divl
add
clc
std
sub
or
xor
add
mov
push
add
jmp
mov
clc
in
push
stc
cmp
clc
jb,pn
add
mov
js
clc
mov
loope
aas
sub
cmp
push
jmp
in
cmp
or
clc
cmp
clc
fs
mov
clc
ret
clc
loope
xor
inc
add
sub
in
gs
push
cmp
fwait
jmp
movsb
jge
lea
jbe
add
call
cmp
jmp
cmp
xbegin
inc
cld
push
ret
cwtl
movsb
dec
xchg
hlt
lods
test
iret
ret
push
jmp
nop
sbb
cwtl
sbb
inc
cmp
push
ret
dec
add
add
add
cmpsl
clc
rcl
jp
adc
add
push
test
clc
js
add
imul
sar
clc
pushf
loop
or
add
pop
lods
out
push
add
xor
clc
arpl
add
mov
lock
clc
dec
add
or
sub
mov
fwait
jmp
or
addr16
mov
sbb
clc
lcall
jmp
sub
sbb
fs
stc
and
add
mov
out
adc
add
fnop
int
clc
cmp
clc
das
cld
jb
add
nop
sub
cmp
jmp
test
add
cld
push
ret
adc
and
dec
out
fsubrs
jne
inc
add
push
idiv
or
imul
clc
sar
scas
test
js
add
movsl
clc
dec
adc
jle
or
repnz
add
mov
loopne
test
add
or
clc
push
and
add
add
aam
clc
notb
push
aas
data16
jne
shl
cs
clc
test
roll
xor
add
xabort
clc
jp
clc
outsl
cmp
clc
xbegin
ds
aad
clc
sbb
mov
clc
lea
fdivrs
clc
mov
add
hlt
inc
add
das
mov
dec
pop
clc
stc
xchg
pop
cmp
cwtl
fdivs
clc
mov
sbb
add
ficompl
cmp
fsin
pop
sub
and
mov
repnz
add
mov
js
mov
out
jno
add
add
clc
clc
loopne
sti
js
in
adc
add
cld
push
ret
es
fnsave
lret
dec
adc
add
xabort
pop
psrlq
clc
shl
cmp
xchg
sub
clc
xchg
inc
add
int
add
xor
add
clc
pop
push
subl
lahf
mov
add
and
add
sbb
out
loopne
and
add
mov
cmp
pop
jp
adc
cltd
xchg
movsl
clc
add
add
icebp
dec
insb
mov
add
rol
clc
xchg
dec
adc
add
xor
add
jecxz
clc
xabort
add
sub
sub
clc
pop
xbegin
mov
xlat
int3
pop
jns
or
add
call
cmp
sar
call
add
inc
clc
lock
fcmovnu
adc
stc
jp
clc
pop
and
ret
clc
jl
ret
clc
jl
pop
push
push
ja
dec
popf
inc
add
pop
mov
jo
add
add
add
add
add
add
add
and
add
jecxz
hlt
lock
nop
add
add
ljmp
clc
pop
ret
clc
add
push
clc
aas
stc
xchg
fisubl
in
fwait
inc
add
pop
add
pop
push
repnz
cli
push
and
add
xchg
mov
jmp
add
xchg
xor
add
xor
add
sub
clc
xchg
enter
xchg
aas
dec
stos
dec
dec
icebp
cmp
clc
mov
clc
sub
int
test
add
add
add
add
mov
ja
inc
add
mov
outsb
dec
test
xchg
mov
fwait
jmp
ja
jp
add
push
pop
cmp
mov
add
ficomps
adc
movsl
clc
mov
loop
add
jp
dec
aaa
sbb
cmp
call
popa
add
ss
xchg
ror
push
clc
dec
push
inc
clc
mov
push
sbb
test
jmp
xchg
cltd
lret
rorb
clc
push
add
xchg
int3
push
add
push
push
pop
cs
clc
pusha
add
jl
cmc
add
mov
clc
inc
clc
sub
clc
add
add
lret
pop
ljmp
clc
arpl
add
sbb
clc
xchg
fcoml
add
jmp
lret
sbb
clc
xor
add
clc
lods
push
clc
sarl
inc
fwait
jmp
push
push
sub
clc
xor
add
bnd
clc
inc
clc
sub
pushf
pop
sar
clc
sar
jbe,pt
cmp
xor
sbb
or
fwait
jmp
or
dec
pusha
add
lea
clc
adc
cmp
fsubl
clc
push
lcall
push
or
cmp
clc
sti
adc
add
fwait
jmp
sub
ja
clc
push
add
or
es
pop
push
add
jecxz
pop
clc
xchg
enter
aas
popf
insl
add
add
sub
sbb
clc
hlt
adc
pop
lret
jo
add
add
add
stc
leave
add
aaa
add
push
add
out
inc
add
jne
xor
and
add
add
cmp
loopne
repnz
jmp
sub
mov
repnz
pop
ja
add
cmc
imul
add
dec
mov
adc
rclb
es
push
mov
das
pop
jbe
in
or
add
idivl
mov
ljmp
cmp
pop
cmp
clc
scas
shrl
sub
aad
pusha
add
mov
clc
or
push
mov
fwait
jmp
test
mov
sub
iret
sbb
clc
pop
int
clc
add
add
add
fidivs
and
add
clc
jecxz
data16
pushf
in
xchg
mov
add
nop
aas
and
add
imul
fmul
xor
add
add
sub
xbegin
shrl
add
jo
add
clc
sar
imul
test
clc
dec
lods
xchg
fadds
adc
add
pushl
sar
push
ret
and
movsb
clc
jo
add
add
inc
add
push
clc
mov
lcall
ljmp
test
pop
add
push
add
xchg
loopne
mov
popa
add
push
sarb
add
cmp
das
xchg
outsl
pushf
int3
mov
ret
clc
xchg
das
out
fcoms
jo
add
mov
std
inc
add
stos
inc
clc
push
push
insl
dec
filds
mov
add
or
push
xor
fwait
jmp
sub
clc
fstpt
add
clc
pop
cmpsb
clc
pushf
jno
add
mov
add
pop
clc
cwtl
sbb
stc
inc
clc
jae
add
add
add
cmp
clc
outsl
daa
clc
es
dec
outsb
push
icebp
push
test
clc
push
hlt
and
add
clc
enter
fsts
add
addr16
aaa
sub
mov
cmp
add
sub
xor
cli
ret
clc
mov
jb
add
stos
jl
xchg
dec
jno
add
push
add
cmpsb
clc
jno
add
inc
sbb
push
ret
add
sarb
cmp
clc
inc
add
cmp
add
cmp
nop
imul
fisubl
add
repnz
ret
clc
mov
out
js
fldenv
jg
out
adc
add
addr16
fucomi
imul
add
jg
clc
jg
clc
pusha
add
fisttps
clc
pop
stos
outsl
shl
clc
inc
clc
shl
clc
xabort
clc
ja
mov
add
add
add
dec
jns
push
inc
fwait
jmp
sub
sub
sahf
lret
mov
push
add
iret
pop
push
and
add
sub
incl
push
lods
lcall
add
call
clc
sub
fwait
jmp
sub
inc
sub
xor
clc
or
sbb
or
cs
jmp
clc
sub
sub
incl
repnz
call
sub
add
push
add
push
clc
dec
xchg
xor
movsb
clc
push
ret
add
push
dec
fwait
jmp
sbb
inc
cmp
stos
add
add
clc
mov
add
in
inc
clc
cmp
rcrl
and
xlat
inc
clc
inc
clc
push
add
popl
add
jns
cs
add
inc
add
inc
clc
add
add
add
add
cmpsb
clc
dec
mov
sar
jne
clc
lods
sahf
test
sub
pop
clc
dec
loopne
outsb
lahf
inc
clc
pop
lods
xchg
mov
xlat
pop
add
add
xchg
pop
fmulp
xor
add
rorb
add
rorb
fmull
dec
repz
push
ret
sub
dec
push
add
cmp
pop
dec
jp
jno
add
add
dec
repz
xabort
mov
fwait
jmp
add
loope
or
pop
clc
clc
imul
clc
pop
push
cmp
add
es
xabort
add
out
jl,pt
clc
lea
clc
mov
or
jge
sahf
jnp
push
aam
mov
add
jg
clc
divb
add
add
je
fistpll
clc
mov
pop
fimull
mov
cwtl
push
clc
in
in
sub
or
xor
add
add
jge
clc
lret
cwtl
test
pop
je
adc
add
clc
in
fimuls
call
clc
repnz
clc
push
add
pop
add
add
ficomps
add
scas
dec
shl
clc
jnp
shl
or
mov
cmpsl
clc
xchg
xchg
jbe
inc
clc
fwait
xchg
insb
cmpsl
clc
xchg
lea
lcall
clc
and
add
in
jecxz
add
add
out
add
test
and
fidivrs
lcall
pushl
mov
adc
add
cmp
clc
mov
hlt
or
fdivrs
cmp
mov
clc
mov
cmp
add
cmp
clc
cmpsb
clc
jb
add
sub
and
add
cmpsb
clc
dec
adc
add
add
push
add
jmp
push
add
int3
mov
clc
cmp
clc
sbb
add
or
clc
jnp
clc
adc
repz
clc
cmp
clc
sub
xor
add
clc
test
cmp
sar
stc
dec
mov
int3
shr
xchg
cmp
cmp
fwait
jmp
pop
sub
in
aam
aad
add
pusha
add
add
add
clc
pop
fstpt
test
lods
mov
in
adc
fistpl
clc
dec
sub
dec
sbb
add
clc
mov
xor
dec
sub
add
dec
cld
scas
dec
cs
add
mov
clc
jp
jnp
dec
repnz
mov
jmp
outsl
pop
scas
sub
and
repz
cmc
sub
ret
clc
cmp
pop
lock
clc
sbb
insb
jae
add
sbb
mov
pop
inc
clc
adc
add
hlt
or
test
adc
add
push
ret
jecxz
jp
or
sbb
add
in
jl
clc
in
stc
sbb
push
add
popa
add
shrb
icebp
and
adc
clc
stos
cmp
clc
repz
push
nop
aas
fdiv
push
pop
out
imul
add
std
cmp
jg
xchg
push
add
dec
out
pop
loop
lea
add
xor
add
cltd
and
clc
mov
ss
inc
clc
push
jmp
dec
jae
add
clc
mov
cmp
in
stos
fwait
nop
aam
adc
add
std
mov
jnp
add
jl
clc
gs
sbb
clc
and
add
add
add
push
add
daa
clc
out
lods
stos
fimull
xlat
jbe
xor
shll
add
cmp
add
xabort
add
shlb
enter
jns
clc
nop
jns
xchg
cmp
add
fwait
jmp
inc
ja
or
clc
scas
or
push
add
ja
test
cmp
xabort
lods
sub
xchg
cli
shlb
add
mov
adc
cmp
clc
sub
add
add
call
cmpsb
clc
sarb
unpckhps
cmp
clc
or
clc
push
add
pop
das
jg
data16
lea
stos
test
test
aad
add
lahf
lock
cld
pop
and
add
add
mov
xlat
cmp
sub
add
jnp
clc
testl
inc
mov
add
outsl
mov
test
daa
clc
jne
je
jbe
add
out
dec
incb
ss
cmp
shll
add
jmp
pop
sub
addr16
aad
mov
push
add
fwait
jmp
popf
in
sub
cmc
lods
iret
sub
xchg
push
jmp
inc
test
pop
pop
clc
push
add
mov
cmp
stc
repnz
clc
shr
sub
xchg
jle
repnz
cmp
clc
daa
clc
movsb
clc
arpl
add
add
add
or
or
rcrl
clc
stc
imul
clc
loope
fs
mov
jmp
insb
cmpsb
fwait
push
cs
dec
stc
xchg
idiv
repz
jle
adc
add
mov
nop
cld
movsl
clc
pop
arpl
add
cmp
inc
clc
mov
clc
mov
clc
cmp
add
add
cmp
cmp
xlat
cld
loope
mov
cmp
clc
in
cmp
clc
pop
push
bound
add
xor
add
sti
dec
pop
insl
pop
je
or
pop
mov
add
fldenv
or
ljmp
ss
cmp
add
add
sbb
inc
and
jmp
sub
mov
push
add
jb
add
add
jae
add
xor
loop
sbb
add
dec
out
stc
inc
clc
popa
add
push
clc
jne
aas
or
sar
clc
cmp
xbegin
filds
cmp
clc
incl
push
ret
lods
insb
pop
lea
out
sub
add
xchg
mov
xlat
mov
mov
xor
add
add
add
insl
loope
sbb
test
cmp
clc
xchg
xor
add
add
sbb
lcall
call
jno
scas
fnsave
add
mov
clc
loop
sbb
in
and
sbb
push
add
cmp
add
cmpsl
clc
jg
adc
add
clc
ficoms
dec
jnp
incl
imul
ja
inc
sub
movsl
clc
fdivrs
clc
inc
add
cmc
jge
add
pushf
lods
bound
add
in
call
mov
add
sbb
push
fstp
enter
clc
fcoml
add
pop
cmp
cld
xchg
fnstsw
daa
clc
sbb
notb
and
add
or
adc
add
jnp
clc
call
add
cltd
pop
pop
xchg
sub
cmp
push
cli
ret
clc
cmc
ucomiss
je
push
add
pop
sub
pop
hlt
cwtl
push
add
sbb
mov
adc
jmp
inc
lods
jbe
clc
shrb
push
cmp
clc
out
shll
xlat
inc
add
cli
jbe
in
pusha
add
fistl
push
add
cmp
adc
mov
push
add
stos
mov
sbb
clc
popa
add
xchg
xchg
mov
dec
xchg
loopne
jle
add
clc
xchg
pop
add
jns
add
stos
jae
add
js
neg
fwait
lods
fsubrs
clc
repz
mov
cmp
clc
cli
outsb
lcall
sarl
sub
add
in
out
lock
mov
cmp
add
fwait
jmp
cwtl
cmpsb
dec
pop
xchg
mov
pusha
add
jg
pop
clc
lods
pop
rolb
mov
clc
and
add
clc
fadd
clc
cwtl
mov
pusha
add
pop
mov
and
add
lret
dec
ret
mov
clc
cmp
cltd
mov
pop
movsl
clc
lods
jno
add
add
add
add
add
adc
add
add
pusha
add
sub
mov
mov
inc
clc
fs
cli
sbb
jmp
push
aam
mov
movsb
clc
add
add
jle
mov
cmp
clc
push
mov
ljmp
add
add
clc
pop
pusha
add
pushf
xchg
and
jle
out
imul
add
mov
jmp
add
out
or
add
cmpsb
clc
pop
aad
sbb
add
je
xor
add
add
incl
fwait
jmp
movsb
xchg
inc
clc
adc
add
add
pop
fwait
jmp
sub
xorb
add
cmp
xor
add
insl
push
add
push
add
iret
cmp
add
cmp
ja
clc
in
push
add
mov
lods
mov
pop
clc
sar
add
add
in
sbb
add
fwait
jmp
or
aad
push
cmp
sbb
clc
test
cmp
inc
add
out
mov
clc
and
mov
add
jnp
clc
add
add
add
mov
pop
in
mov
add
aas
lcall
push
ret
add
and
push
data16
cmc
mov
mov
inc
and
fwait
jmp
mov
dec
dec
repnz
hlt
and
in
push
cmpsl
clc
movsl
clc
mov
sbb
fwait
jmp
fists
in
out
jp
cld
mov
sti
inc
add
cwtl
popa
add
push
mov
fwait
jmp
sub
dec
int
jp
clc
repnz
inc
clc
in
cmp
mov
clc
dec
mov
pop
dec
decl
inc
mov
ret
lods
mov
add
push
or
jmp
fwait
jmp
and
cmp
cmp
add
or
xor
add
fwait
jmp
xchg
mov
add
add
stc
icebp
call
repz
insl
cmc
popa
add
cwtl
addr16
push
sti
not
out
gs
dec
sub
popf
mov
inc
clc
sub
inc
clc
mov
insl
in
aad
add
jb
add
int
cmp
mov
pop
loope
pop
and
add
add
jae
add
add
add
xchg
fmuls
pushf
sahf
incl
push
ret
popa
pop
es
add
and
add
sub
mov
fwait
jmp
fs
fs
inc
clc
mov
insb
fwait
jmp
ja
ficoms
sbb
jmp
mov
ljmp
add
or
mov
cld
push
ret
inc
sub
aam
in
sti
push
push
mov
lahf
movsb
add
mov
dec
jne
clc
scas
cmp
add
jle
das
out
push
jo
add
clc
dec
testl
add
out
data16
aas
lods
mov
imul
xor
add
dec
hlt
sub
cmp
clc
idivb
cli
cmp
and
add
clc
add
repnz
or
jecxz
jnp
mov
inc
add
in
repz
add
iret
cld
mov
dec
inc
add
movsb
clc
mov
add
dec
out
stos
call
clc
or
push
mov
mov
fidivrs
add
inc
add
sahf
fdivrp
das
push
shrl
cmp
cmp
clc
mov
add
pushf
and
pop
xbegin
mov
cmpsb
clc
ljmp
lahf
pop
inc
clc
lods
or
icebp
mov
clc
xchg
inc
add
xor
add
aad
clc
mov
and
dec
pop
pop
cmpsl
clc
js
mov
aas
xchg
iret
mov
sbb
clc
and
sbb
clc
pusha
add
or
jb
add
clc
roll
and
clc
pop
or
cli
mov
push
add
mov
clc
cmpsb
clc
or
gs
xor
add
or
mov
push
std
xor
add
fimull
mov
cmpsb
clc
in
int
xor
add
push
add
mov
pop
in
add
add
clc
add
add
mov
fildll
add
push
sub
mov
xchg
sbb
add
sub
lret
clc
add
add
push
cld
test
icebp
movsb
clc
pop
jecxz
das
push
jnp
clc
test
roll
add
mov
xchg
mov
cli
ljmp
clc
cmp
add
out
clc
data16
cmp
pop
jns
add
dec
mov
clc
lret
out
or
ret
clc
outsb
mov
add
add
adc
add
clc
mov
push
inc
clc
jmp
test
stos
cmpsb
clc
jge
add
mov
xchg
cmp
sbb
jns
out
xor
add
add
inc
add
fs
out
je
daa
clc
aaa
int3
jg
add
xchg
xchg
scas
dec
cmp
iret
pop
fs
push
add
and
add
clc
adc
add
add
pop
clc
out
lahf
mov
dec
mov
or
rcl
frstor
pop
clc
fisttpl
lods
sar
clc
xor
cmp
clc
pop
out
ja
mov
mov
ss
xlat
lret
outsl
cmp
lret
dec
push
add
test
lods
pop
push
add
sbb
jbe
rcrl
sbb
idivb
add
mov
lret
aas
hlt
daa
clc
xor
add
addr16
dec
outsb
sub
add
xlat
dec
insl
outsb
mov
clc
sarl
add
mov
mov
add
clc
cmp
cvtpi2ps
clc
mov
add
sar
pop
cmp
xabort
sbb
sti
inc
clc
dec
jmp
clc
in
fisttpl
dec
aaa
fldcw
add
add
add
adc
clc
cmp
out
mov
xor
clc
scas
negb
out
ret
clc
sbb
add
sarl
lock
add
outsb
mov
fnstsw
sbb
cmp
mov
lock
add
add
jne
jno
add
xchg
pop
mov
and
add
add
or
dec
cwtl
lods
bound
add
mov
movsl
clc
scas
insb
pop
push
mov
clc
inc
add
ja
clc
out
lahf
pusha
add
xchg
and
add
clc
xbegin
add
pop
stc
shll
add
push
add
add
add
add
add
push
add
inc
add
xor
add
add
and
add
stos
mov
lret
int
clc
repnz
push
in
nop
jae
add
add
add
jg
clc
dec
push
clc
push
pushf
mov
clc
icebp
cmp
bound
add
lahf
dec
xor
add
mov
daa
clc
pusha
add
mov
clc
jns
xbegin
divl
lcall
add
shrl
xchg
jb
add
add
jle
vmwrite
aad
add
dec
pop
dec
sub
or
outsl
pop
clc
or
gs
in
add
add
das
iret
jecxz
repz
xchg
inc
add
int3
add
add
loop
call
inc
add
dec
ret
inc
add
push
add
mov
and
add
push
scas
push
ljmp
clc
insb
pop
pusha
add
testl
test
fistpl
xchg
in
add
add
add
clc
loop
sar
inc
clc
push
daa
clc
dec
movsl
clc
jae
add
fs
popa
add
test
cmp
inc
add
cs
sti
push
shlb
lea
fstp
cld
mov
inc
add
cmp
insb
cmp
add
stos
push
jg
pushf
or
add
daa
clc
pop
clc
fwait
mov
push
cmp
xchg
mov
dec
leave
sbb
aad
mov
fsubl
xor
add
add
add
xchg
xor
add
add
add
add
push
add
push
fnstcw
or
xlat
sub
clc
cmp
fwait
add
add
test
js
inc
clc
aaa
mov
int3
and
add
clc
mov
je
add
mov
adc
add
xor
add
dec
sar
cmp
clc
sbb
or
shll
add
and
add
jg
jo
add
adc
add
nop
into
cmp
clc
hlt
adc
add
clc
pusha
add
adc
add
imulb
insl
test
push
jns
sbb
xchg
dec
xor
add
fiaddl
add
sub
sub
lock
mov
fists
add
adc
add
add
add
in
sbb
dec
mov
pop
clc
data16
jmp
mov
adc
cmp
and
add
cmp
mov
add
inc
clc
cmpsl
clc
xor
add
add
xor
add
stos
in
mov
add
cld
test
stos
cli
int3
popf
pop
sub
iret
xlat
cmpsl
clc
outsb
test
adc
add
clc
repnz
std
dec
fmul
idivb
clc
arpl
add
add
sahf
nop
or
sar
pop
xchg
aad
add
cmp
clc
mov
dec
mov
imul
test
clc
adc
add
hlt
or
adc
cmp
clc
lock
clc
sbb
jno
add
mov
test
push
clc
popa
add
fs
mov
dec
setl
out
fwait
adc
add
xchg
pop
mov
es
dec
push
data16
mov
clc
mulb
add
add
cmp
mov
scas
mov
clc
repz
clc
loopne
sbb
xchg
adc
lret
test
mov
clc
jp
clc
mov
clc
fldl
into
outsb
add
add
or
add
xor
add
add
rcr
add
add
xchg
ret
clc
lahf
adc
clc
ret
clc
or
sbb
push
add
out
mov
push
and
add
rcrb
fwait
inc
clc
ja
push
add
xchg
aam
mov
clc
adc
add
add
add
adc
dec
dec
sbb
mov
clc
jbe
push
lret
mov
es
lcall
clc
cld
xchg
imul
clc
out
jecxz
sar
clc
cmp
es
push
clc
pop
mov
outsl
aaa
push
jecxz
cmp
push
dec
clc
sbb
clc
mov
rorl
mov
lret
jbe
xchg
in
or
add
mov
inc
add
in
mov
int3
sbb
clc
xor
add
stos
nop
mov
lcall
clc
xchg
adc
add
cmp
add
xchg
lock
add
add
clc
xchg
mov
jns
std
cmpsl
clc
lret
jmp
test
clc
addr16
xabort
fmull
test
inc
clc
dec
dec
in
sbb
add
cmp
insl
sbb
clc
in
lods
sbb
push
clc
pop
mov
insb
pop
clc
cld
and
add
clc
lods
imul
push
aam
jge
add
clc
jl
and
add
add
xchg
aas
lret
fst
popf
sbb
mov
clc
cmp
clc
xchg
lea
add
jb
add
jbe
cli
es
push
mul
clc
clc
movsl
clc
cmc
imul
scas
inc
add
inc
clc
rcl
sbb
adc
add
sahf
scas
inc
clc
es
and
dec
sub
rolb
add
sbb
mov
add
sub
mov
mov
clc
xabort
std
sti
je
add
add
mov
mov
clc
inc
add
out
repnz
mov
cmp
clc
jmp
add
sub
add
fcomi
mov
mov
dec
cmp
sub
adc
add
ffreep
clc
lcall
mov
ror
ja
clc
xchg
pop
mov
add
clc
pop
cmp
add
cmp
dec
scas
test
clc
push
in
dec
pop
cmc
cmp
add
jp
clc
mov
jge
clc
mov
cmp
fcmovb
clc
pop
test
mov
cwtl
dec
out
jo
add
adc
add
test
clc
pop
shlb
add
sbb
cmp
mov
add
cwtl
sub
imul
push
add
pop
xchg
inc
clc
out
pop
cs
add
inc
clc
js
mov
clc
cli
inc
add
sbb
add
add
je
arpl
add
das
pop
in
js
add
cli
xor
dec
cmp
clc
push
clc
push
add
mov
add
ucomiss
add
inc
add
mov
cmp
clc
mov
mov
loopne
movsl
clc
imul
clc
ja
add
mov
clc
in
xchg
mov
clc
ret
clc
mov
add
add
add
add
add
mov
jl
in
and
xchg
lret
sbb
cmp
or
jne
ret
clc
repnz
fs
int
clc
cli
inc
add
xchg
mov
clc
mov
xchg
cmpsl
clc
push
ret
repnz
add
pop
mov
add
stos
xlat
jge
mov
add
sbb
pusha
add
mov
jns
mov
clc
out
das
cli
loopne
out
mov
clc
push
or
push
dec
insl
xchg
lods
cmp
xchg
sbb
mov
aas
push
aad
loope
insl
insl
pop
test
mov
clc
add
add
pop
add
add
mov
add
dec
adc
add
or
mov
add
push
mov
arpl
add
cmc
out
int
out
inc
clc
inc
add
popf
loop
call
add
add
mov
enter
add
addr16
ss
movsb
clc
rorl
clc
xor
add
int3
sub
clc
fstpt
clc
pusha
add
jb
add
or
jle
sub
clc
push
clc
jnp
repz
lea
jo
add
add
and
add
clc
and
add
cmc
xor
add
in
cmp
into
fiadds
add
out
or
mov
clc
or
clc
add
add
push
cmp
clc
outsl
out
testb
iret
dec
es
dec
test
hlt
test
in
sar
push
mov
add
cld
iret
sar
rorb
add
jle
add
mov
cmp
clc
xchg
insl
andnps
add
imul
rorl
cmp
clc
insb
data16
clc
cmp
es
push
aam
ret
push
clc
push
add
xor
add
jmp
out
push
inc
clc
scas
fisubl
jle
clc
fdivrl
add
adc
add
jns
dec
sahf
rep
push
clc
and
add
fisubl
add
sahf
aam
clc
inc
clc
js
cltd
push
and
add
clc
es
data16
test
mov
jns
mov
pop
insl
nop
outsb
lea
mov
add
pop
mov
mov
ja
aaa
loop
and
add
clc
sub
pop
pop
jns
clc
clc
add
add
add
cs
incl
stos
mov
add
test
fists
add
data16
hlt
dec
push
add
mov
clc
imul
clc
mull
sbb
ja
dec
pushl
clc
idivb
out
notl
clc
fnsave
pop
out
or
jbe
clc
add
add
add
sbb
mov
inc
add
jmp
inc
add
xchg
fidivl
add
add
pop
shll
add
jae
add
inc
clc
mov
cmp
jp
dec
jp
add
bound
add
sbb
cs
pop
sbb
out
cvtps2pi
fwait
push
pop
clc
fisttpll
push
imul
add
negb
add
fnstcw
mov
dec
popf
into
js
jmp
iret
mov
add
add
neg
aaa
xchg
fs
cld
sbb
ljmp
out
pop
and
add
lcall
jmp
je
xchg
pop
clc
stc
push
pop
mov
dec
lods
push
add
mov
sarl
add
pop
out
adc
clc
movsl
clc
nop
jnp
cwtl
stos
xor
addr16
adc
add
add
pushl
pop
xbegin
add
xor
add
add
jge
xor
add
jge
mov
add
add
add
sbb
clc
and
add
mov
push
xchg
in
dec
mov
clc
fistpl
arpl
add
ror
add
add
add
mov
in
sbb
add
pop
ljmp
add
jecxz
aad
dec
call
insl
xchg
adc
add
add
adc
add
clc
sar
add
sahf
pop
clc
inc
clc
call
or
clc
int3
or
popf
xor
cmp
adc
ds
dec
xchg
neg
stc
xchg
lahf
dec
sbb
mov
mov
test
adc
add
jb
add
sti
push
add
mov
clc
jb
add
add
add
mov
jge
clc
mov
clc
mov
push
add
jle
clc
in
push
loope
int
clc
popa
add
loopne
arpl
add
pop
or
clc
shlb
cmp
lea
stos
sub
clc
mov
icebp
loope
aam
add
add
add
ja
add
add
je
dec
scas
notl
add
enter
dec
pop
pop
rorl
clc
xor
add
clc
add
add
dec
test
mov
xlat
stos
pop
sarb
out
ljmp
push
add
sub
sbb
mov
clc
mov
clc
pusha
add
sahf
jns
clc
seta
rorl
idivl
mov
clc
adc
add
lcall
cmp
inc
add
mov
mov
clc
jmp
jmp
jo
add
adc
add
lahf
xor
add
add
or
shll
push
add
enter
cli
lods
pusha
add
sbb
js
clc
add
cmp
pop
out
cmp
xor
add
add
shll
aad
clc
aas
xlat
sgdtl
add
fisttpl
push
fs
add
add
clc
loop
pop
or
jge
cmc
imul
ret
push
insb
sbb
xchg
bound
add
cmp
mov
or
push
outsb
and
add
cwtl
xchg
jo,pn
add
cmp
clc
push
cmp
movsb
clc
lcall
clc
cmp
add
pusha
add
repz
stos
xchg
adc
stos
inc
add
ret
clc
std
sbb
add
clc
push
add
or
xor
add
movsl
clc
int
add
adc
add
add
sar
cwtl
add
add
lock
or
clc
std
ljmp
add
lods
in
iret
push
xchg
nop
push
mov
xchg
mov
add
arpl
add
ss
cmc
dec
mov
add
add
add
add
enter
pop
clc
in
adc
add
or
mov
clc
jge
clc
enter
xabort
je
clc
arpl
add
out
outsl
out
adc
add
sbb
add
add
add
dec
std
nop
sbb
add
inc
add
mov
add
mov
lods
jbe
push
add
stc
add
add
hlt
shrl
add
dec
insb
flds
add
add
clc
movsl
clc
sbb
mov
add
or
test
clc
push
inc
clc
mov
mov
clc
push
mov
int3
stc
incl
jae
add
clc
mov
daa
clc
mov
add
clc
xchg
clc
push
test
test
jns
xchg
add
jb
add
adc
push
icebp
gs
mov
ret
sahf
push
inc
clc
lcall
lcall
add
add
clc
cld
fldt
and
add
sub
mov
or
clc
push
add
pop
lret
add
add
add
jecxz
cmpsb
clc
jg
clc
xabort
add
add
add
add
insl
in
fs
jns
mov
add
pop
movsl
clc
pop
arpl
add
dec
jne
xchg
dec
pusha
add
inc
add
dec
or
movsb
clc
cmp
clc
dec
decl
add
mov
scas
dec
mov
add
mov
jbe
mov
adc
push
sarb
mov
mov
clc
and
add
cmp
clc
insl
sbb
es
es
jecxz
hlt
xchg
xor
add
sbb
jle
add
or
clc
div
cmp
xor
add
mov
clc
mov
cmpsl
clc
ja
clc
je
addr16
inc
clc
xabort
dec
lahf
adc
add
clc
rorl
xchg
sti
pop
jb
add
xchg
cmp
loop
inc
add
popa
add
ds
into
cltd
ror
movsb
clc
mov
scas
movsl
clc
adc
dec
inc
clc
ss
add
clc
outsl
sub
inc
clc
idivb
lahf
outsb
sbb
clc
sti
pushf
pop
clc
mov
movsb
clc
shll
add
das
fsts
add
clc
inc
clc
aaa
dec
or
call
jl
add
mov
out
push
insl
adc
add
dec
lods
dec
pop
fdivs
add
cmpsl
clc
or
add
xor
add
push
out
jo
add
jb
add
leave
sub
sbb
insb
xchg
cmp
xor
add
mov
pushf
inc
add
jmp
cwtl
mov
mov
add
or
add
add
jne
add
add
add
aas
clc
xor
add
add
ja
arpl
add
add
js
clc
cmp
jno
add
mov
cmp
insb
jb
add
clc
aam
clc
mov
cmp
out
sbb
int3
mov
stos
aas
mov
clc
jne
adc
add
add
mov
pop
xor
add
xor
add
clc
pusha
add
mov
es
mov
movsb
clc
mov
add
pushl
dec
xchg
sub
mov
clc
test
fwait
mul
clc
negl
aaa
ret
clc
fldt
pushf
fwait
jecxz
jmp
or
add
jae
add
xabort
clc
sar
mov
add
stc
pop
clc
in
cmp
clc
push
sahf
dec
fwait
push
ja
add
or
adc
scas
adc
add
add
clc
loope
mov
clc
fstpt
add
inc
add
ficoml
minps
sub
inc
clc
xor
add
fistpl
je
dec
adc
clc
pop
mov
add
cmp
add
cmc
jmp
clc
arpl
add
push
add
add
faddl
add
xchg
data16
out
dec
mov
cmc
aas
out
and
add
mov
pop
test
xor
add
add
xbegin
xbegin
sub
sub
add
dec
mov
and
pop
cmp
add
lock
mov
xchg
rolb
clc
lods
cld
shrb
outsb
xor
add
clc
sbb
push
sub
lea
clc
je
bound
add
sbb
outsb
sbb
add
rorb
adc
gs
aad
sub
popf
xchg
mov
xchg
icebp
pop
jne
jle
nop
das
fwait
imul
clc
fld1
cmp
clc
mov
add
test
dec
cmp
add
sbb
add
dec
sub
mov
clc
mov
clc
mov
cmp
inc
clc
mov
nop
cmp
mov
add
jmp
lock
mov
clc
sahf
fstpl
clc
addr16
ja
clc
lret
add
pop
leave
std
lret
pop
pop
pop
clc
adc
add
add
pop
movsb
clc
adc
add
add
jne
xchg
in
or
fadds
cmp
xor
add
jno
add
clc
mov
clc
repnz
jns
aam
aad
clc
int
ljmp
push
and
add
adc
cmp
xchg
clc
push
add
cmpsb
clc
or
or
in
add
add
clc
jecxz
push
add
inc
clc
pop
jns
clc
insb
mov
and
add
clc
scas
ret
clc
add
add
and
add
jne
xchg
pop
leave
jp
fbld
pop
jno
add
clc
push
xchg
cmp
push
add
testb
inc
add
out
xabort
out
cmp
inc
add
cmp
add
in
pop
jae
add
clc
xchg
xbegin
add
inc
add
pop
clc
outsb
leave
xchg
test
fcmovnbe
xor
add
add
push
jg
pusha
add
shlb
mov
pop
cmp
adc
add
add
mov
cmp
and
jae
add
clc
in
repz
mov
clc
xchg
lods
sahf
jno
add
clc
adc
add
inc
clc
fimuls
imul
add
sub
mov
clc
cli
adc
add
in
mov
jecxz
pop
sar
cmp
mov
cmp
clc
jno
add
clc
add
mov
icebp
scas
pop
outsb
jp
in
sub
ret
add
test
clc
cmp
stos
mov
clc
fiadds
clc
dec
aad
daa
clc
das
push
add
lret
or
add
clc
icebp
clc
shll
pop
mov
pop
jg
dec
or
test
add
sar
adc
add
push
pop
stos
mov
clc
jge,pn
clc
mov
pop
addr16
or
xchg
outsb
dec
mov
add
mov
in
and
add
add
je
lahf
in
mov
dec
push
add
adc
add
clc
xchg
fmull
xchg
mov
add
push
sbb
xchg
lcall
clc
jae
add
add
fmuls
mov
add
test
inc
clc
or
clc
nop
in
lcall
divb
add
cld
dec
aaa
and
add
sti
or
xchg
js
stos
scas
call
add
cmp
in
rcl
insl
mov
xlat
mov
add
clc
mov
imulb
mov
sub
mov
clc
mov
fiaddl
add
popf
jg
clc
scas
dec
push
jp
add
mov
out
dec
das
in
adc
lods
das
leave
push
clc
icebp
in
fstl
add
fdivl
mov
xchg
mov
or
cmp
add
aad
aaa
pushf
sub
aaa
pop
pop
jmp
adc
add
or
adc
popa
add
pop
add
lods
fwait
icebp
mov
mov
dec
sub
lea
add
loop
cmp
daa
clc
pusha
add
or
clc
adc
add
add
add
or
sub
clc
mov
sar
add
sub
iret
popf
cmp
add
out
xor
add
and
add
add
fs
aam
cli
loopne
stos
push
cltd
cmp
inc
clc
aad
clc
jecxz
cltd
xor
add
add
cld
xor
inc
clc
adc
add
jecxz
xor
pop
xor
add
clc
insb
in
loop
cmp
adc
add
cmp
inc
clc
and
add
cli
pop
mov
dec
pop
clc
fs
mov
add
pop
xor
add
cmp
jns
clc
hlt
fisubs
sub
out
out
aaa
dec
outsl
dec
and
add
in
inc
add
cltd
clc
dec
xchg
repnz
jge
dec
adc
add
xor
dec
push
add
sti
jecxz
dec
mov
clc
popl
xor
add
clc
shlb
add
xchg
and
sar
rcll
fsts
mov
clc
test
clc
xchg
shll
adc
add
add
mov
adc
add
jle
add
es
push
add
jnp
jecxz
push
std
shlb
add
clc
stc
mov
clc
imul
add
sbb
cmp
sbb
cwtl
test
mov
clc
pop
cs
ret
clc
pop
hlt
insb
add
imul
inc
clc
mov
clc
dec
dec
out
push
add
add
add
fldlg2
inc
clc
movsb
clc
aam
add
insb
sbb
das
and
add
clc
xlat
mov
adc
add
daa
clc
aad
clc
fldcw
or
aam
fimull
or
clc
mov
clc
leave
fdivl
add
pop
out
cmp
add
sar
bound
add
clc
popa
add
lods
out
rcrl
and
add
clc
mov
add
clc
aam
clc
gs
out
int3
sub
xchg
dec
mov
xor
in
xchg
jle
add
test
mov
clc
mov
mov
add
fists
mov
add
add
add
lcall
fucomp
enter
cmp
clc
nop
in
push
clc
insb
rcll
add
clc
bound
add
jb
add
add
push
or
mov
clc
pop
inc
add
popf
fwait
cmc
ljmp
imul
add
jge
in
add
add
jg
daa
clc
ret
clc
push
jno
add
mov
scas
xchg
lods
or
clc
jae
add
pop
pop
add
add
inc
add
mov
es
cmp
inc
add
inc
add
inc
clc
or
adc
add
jno
add
inc
clc
adc
add
jne
xchg
xor
add
dec
mov
add
push
add
cmp
sub
jbe
push
movsl
clc
cmp
call
aad
pop
mov
add
add
clc
jl
lret
add
push
gs
adc
add
lods
mov
jle
sbb
movsl
clc
cmpsl
clc
sbb
cld
ret
clc
inc
add
js
add
repz
add
pop
lcall
std
arpl
add
add
pop
mov
ja
dec
pop
or
add
sub
mov
clc
hlt
xchg
push
fstps
add
dec
pop
sar
mov
cmp
clc
inc
clc
fldcw
sbb
daa
clc
daa
clc
into
leave
mov
test
clc
jmp
dec
lahf
mov
add
mov
clc
shl
jb
add
cs
sbb
in
sbb
sub
add
fildll
sar
stos
data16
push
add
push
stos
mov
clc
fstpt
jo
add
jmp
clc
in
mov
xchg
cmpsl
clc
stc
dec
fldenv
add
mov
add
mov
xor
or
push
add
clc
jl
clc
add
add
sahf
sbb
add
clc
xbegin
call
sbb
nop
push
add
sub
mov
add
loope
filds
add
add
pop
jo
add
mov
mov
data16
sti
bound
add
clc
testl
clc
shrb
add
cmp
daa
clc
mov
stc
cmp
add
jmp
test
pusha
add
lock
jmp
lock
add
scas
push
cmp
cmpsl
clc
out
fucomp
into
sub
stos
in
fdiv
mov
clc
jbe
clc
xor
add
pop
pop
in
unpckhps
add
clc
imul
clc
hlt
gs
in
loop
mov
lcall
add
insl
leave
and
test
xbegin
dec
mov
clc
sub
add
test
nop
enter
clc
inc
clc
sub
repz
add
jmp
xor
add
add
xchg
imul
mov
or
push
add
clc
pop
push
clc
add
jbe
lret
cwtl
ret
clc
sar
sbb
add
je
dec
xchg
shr
add
clc
jno
add
stos
dec
outsb
icebp
sub
aas
adc
sub
add
add
and
decb
lret
add
sub
dec
inc
add
cs
dec
mov
xchg
jae
add
pop
lods
adc
add
out
xor
add
inc
add
pop
push
in
cmp
add
dec
xchg
pop
popf
fdivr
sub
push
jne
add
mov
repz
cmc
ret
clc
sar
ret
clc
stos
movsl
clc
sub
cs
js
lret
jno
add
clc
outsb
ljmp
dec
xor
add
in
sar
int3
inc
clc
lret
clc
cmp
and
add
clc
icebp
shlb
add
cmc
sub
dec
repnz
test
nop
fisubs
sbb
cld
jns
add
ljmp
out
fdivp
cmp
addr16
inc
clc
data16
mov
clc
or
out
outsl
jne
clc
inc
add
push
aam
std
aas
into
adc
add
clc
ficompl
clc
jl
addr16
adc
add
clc
popa
add
jmp
add
ss
sti
repnz
add
mov
push
lods
sub
icebp
cmp
add
mov
pop
pop
clc
pop
fcomp
cmp
mov
or
movsl
clc
pop
shlb
push
clc
filds
xor
clc
mov
or
add
and
pavgb
xor
add
mov
ds
add
fwait
sub
add
dec
mov
push
clc
cmp
pop
jmp
clc
and
add
enter
jg
clc
scas
ss
push
add
insb
loop
vsubps
xbegin
out
push
add
cmc
dec
jl
adc
add
mov
inc
add
cmp
add
add
xor
add
add
add
maxps
add
ljmp
mov
in
add
ret
clc
xor
add
add
push
adc
add
aas
sarb
fwait
push
add
scas
jmp
ficomps
add
clc
test
dec
movsl
clc
out
jne
add
or
jg
add
dec
roll
cmc
test
xchg
int
jbe
xchg
cmp
xor
add
xabort
xbegin
sbb
add
sub
adc
add
add
repz
imul
call
jns
clc
dec
daa
clc
out
adc
add
add
in
mov
clc
ret
clc
push
cmp
test
bound
add
pop
cmp
add
add
fisttpll
outsb
xbegin
and
add
mov
xor
add
idivb
clc
clc
mov
add
out
jmp
clc
add
add
aad
clc
clc
and
mov
sar
add
ljmp
and
add
clc
cs
mov
sbb
clc
and
add
cwtl
add
clc
xabort
add
lcall
enter
paddsw
add
add
push
add
cltd
out
jge
in
es
cli
sub
fistps
clc
out
xadd
add
add
pop
clc
mov
fs
loop
cmpsl
clc
mov
sbb
aad
adc
add
mov
add
add
xlat
pop
pop
lods
ficoml
jge
ljmp
pop
js
out
cmc
jle
lcall
clc
cmp
mov
stos
mov
inc
add
pop
clc
shr
hlt
das
mov
je
clc
jp
clc
sbb
popa
add
test
jp
clc
mov
in
pop
inc
add
lods
cwtl
mov
and
pop
in
dec
xor
add
test
lret
es
inc
add
mov
imul
add
clc
test
jecxz
sub
lods
hlt
fdivrp
inc
clc
mov
ljmp
sub
add
cltd
sbb
and
add
clc
push
sub
add
pop
jecxz
mov
adc
add
add
pop
cmp
lcall
add
add
in
add
add
mov
and
add
clc
xchg
dec
xchg
aad
add
std
movsl
clc
mov
push
add
sub
clc
movsb
clc
cmp
clc
cltd
js
clc
inc
add
enter
add
xchg
pop
jg
xchg
add
add
add
and
add
stos
or
fnsave
clc
xor
add
sbb
mov
sbb
add
insb
clc
push
add
adc
add
add
add
add
add
cmp
mov
cmp
dec
mov
push
jp
add
popf
push
add
jl
out
and
add
or
fcompl
xor
add
ret
clc
int
add
add
cmp
fcompl
dec
cmp
mov
ret
mov
xchg
xbegin
mov
clc
jne
add
cs
clc
pop
fs
inc
clc
loop
xchg
pusha
add
jecxz
inc
add
and
mov
clc
insb
iret
sbb
clc
daa
clc
cmp
add
mov
clc
in
sar
mov
clc
stos
jne
clc
dec
or
clc
enter
add
add
sbb
jo
add
add
dec
and
add
inc
clc
mov
clc
fistpl
cmp
xabort
push
add
push
mov
add
dec
lods
out
push
add
addr16
push
lret
outsb
push
add
in
add
add
jecxz
ds
inc
add
inc
clc
dec
inc
add
test
push
iret
movsb
clc
jbe
je
push
clc
cmp
inc
clc
jge
je
mov
clc
repz
xchg
cld
sub
lret
add
pop
mov
inc
clc
pop
mov
clc
cli
jle
cs
addr16
jecxz
js
mov
add
paddd
cs
jl
dec
ja
dec
fists
pop
clc
repz
dec
mov
movsl
clc
aaa
sahf
add
add
sbb
inc
clc
cmc
mov
sbb
cmp
clc
mov
xchg
dec
push
fxch
or
add
dec
imul
shll
add
in
jns
pop
dec
insl
pop
pop
or
insb
or
push
add
leave
mov
lahf
test
add
sahf
fmul
inc
add
pushf
hlt
fnstcw
sub
xchg
jmp
vandnps
sti
inc
clc
out
test
cmp
inc
clc
test
clc
mov
clc
insb
push
sub
add
push
add
and
add
shlb
add
fisttps
outsl
cmp
jb
add
data16
xor
add
add
stos
movsl
clc
gs
std
xor
add
cmp
mov
xchg
loope
xor
add
jp
add
aad
clc
sar
jnp
stos
pop
aaa
sbb
sbb
cmpsl
clc
cmpsl
clc
inc
add
into
dec
sub
int3
ja
mov
dec
mov
clc
js
in
int
push
clc
or
lock
clc
fdiv
scas
jo
add
xor
add
mov
xor
mov
cmp
clc
dec
adc
add
add
add
outsb
sti
add
loope
cwtl
cld
sbb
add
push
cmp
xor
clc
ss
add
or
mov
add
scas
rclb
imul
dec
iret
lcall
hlt
jle
leave
dec
xlat
or
movsl
clc
jae
add
pop
sub
js
inc
clc
clc
clc
repnz
add
dec
pop
xor
mov
push
pop
adc
add
arpl
add
xchg
cs
sbb
clc
bswap
lods
lret
leave
arpl
add
lea
mov
adc
add
mov
stc
das
scas
adc
add
or
add
lahf
push
repnz
loop
add
add
fisttps
add
or
xlat
inc
add
jbe
jmp
clc
in
cmp
xlat
jecxz
xchg
adc
pop
in
xchg
push
add
daa
clc
pusha
add
mov
add
push
add
cmp
in
dec
xor
add
add
inc
add
cs
inc
add
cs
add
pop
lcall
add
clc
and
add
inc
clc
sub
clc
movsb
clc
ljmp
push
in
push
aad
push
push
add
cmp
pop
push
into
jnp
add
dec
mov
clc
xor
add
mov
clc
inc
add
jno
add
add
pop
mov
add
add
add
xchg
test
push
mov
mov
mov
add
fdivp
cmp
add
pushf
mov
leave
lahf
cltd
es
aad
clc
push
sbb
aaa
mov
add
cli
xabort
outsb
pop
mov
mov
mov
mov
add
add
push
add
clc
sub
cltd
or
ss
mov
stos
sbb
clc
dec
cli
xor
add
ja
clc
cmp
arpl
add
xchg
xabort
movsb
clc
jne
pop
clc
add
mov
add
gs
jae
add
xor
xor
clc
sbb
mov
push
sbb
clc
sar
add
ss
das
or
add
push
inc
add
xchg
mov
add
clc
xor
add
xchg
xor
cmp
add
clc
repnz
lahf
aaa
insl
icebp
movsl
clc
ret
clc
int3
daa
clc
add
add
sti
outsb
divb
add
add
add
adc
add
cltd
and
add
sahf
push
add
data16
std
sbb
mov
jmp
clc
scas
cmp
add
jbe
mov
cld
or
add
inc
add
push
movaps
mov
add
loope
pop
jecxz
imul
sbb
add
loop
push
fs
imulb
shll
cltd
outsl
mov
or
pusha
add
lock
outsl
jg
repz
jg
inc
add
jo
add
adc
clc
mov
pop
dec
push
add
bound
add
out
cmp
clc
je
xlat
sub
clc
and
adc
add
add
mov
add
add
shll
and
add
xor
cmp
gs
in
loop
add
add
pop
push
shlb
add
dec
push
clc
popa
add
mulb
add
fsubr
add
add
clc
addr16
fsubl
add
adc
add
clc
bound
add
clc
pop
lock
sub
add
in
adc
add
clc
pushf
cmp
mov
ds
stc
mov
push
clc
fsubp
clc
add
add
mov
mov
add
outsb
xchg
ss
into
or
fs
jne
cli
jp
es
push
pop
nop
sbb
cwtl
movsb
clc
add
aaa
enter
iret
inc
clc
mov
int3
and
add
add
add
add
mov
add
pop
lret
iret
jmp
imul
pop
cmp
adc
push
clc
jnp
mov
add
addr16
cmp
sub
add
mov
xor
add
addr16
sbb
clc
and
add
clc
xlat
push
call
add
ljmp
add
add
cmp
add
add
add
clc
pusha
add
push
pop
or
clc
and
add
cmp
add
rolb
clc
inc
clc
scas
mov
add
add
or
jno
add
sbb
pop
bound
add
add
add
mov
test
push
add
outsl
mov
add
add
clc
loope
pop
mov
aas
cmp
cli
lret
cmp
push
inc
clc
pop
mov
push
shlb
add
inc
clc
mov
adc
add
xor
add
sarb
mov
into
gs
xchg
iret
or
das
jb
add
add
xor
add
clc
dec
dec
mov
stos
sub
in
es
pop
xchg
jo
add
out
test
add
clc
ja
add
ljmp
clc
add
add
add
xchg
popl
cmp
adc
test
pop
fcoml
add
mov
pop
mov
add
sbb
inc
add
in
arpl
add
leave
cmpsl
clc
cmp
mov
cltd
jae
add
clc
jae
add
clc
cmp
clc
sti
adc
add
cmp
lea
cmp
shr
int
add
jp
clc
stc
ja
clc
inc
add
pop
push
add
push
clc
push
shrb
mull
add
add
ds
fucomi
pusha
add
sti
ljmp
add
dec
outsl
sub
add
clc
loop
or
jns
adc
out
fistps
cmpsl
clc
mov
stos
jecxz
mull
add
xchg
aaa
enter
ret
inc
clc
dec
fcomps
add
sar
add
inc
add
insl
clc
loop
outsb
cmp
or
or
repz
add
cmc
pushf
sahf
mov
add
popa
add
ljmp
dec
mov
clc
sub
xbegin
lods
fcomps
add
mov
add
insb
cli
cmp
ret
clc
imull
or
add
stos
adc
jb
add
mov
xabort
jns
add
dec
and
add
out
cmpsl
clc
push
outsb
sbb
sbb
pop
addr16
cmp
clc
mov
insb
popa
add
pop
pop
fnstcw
dec
idivl
xor
add
xchg
mov
clc
dec
adc
add
jb
add
sub
icebp
pusha
add
movsl
clc
push
add
cld
inc
add
cmp
xchg
aas
imul
add
add
add
out
push
pushf
xor
add
shl
arpl
add
clc
dec
hlt
cmp
and
mov
adc
or
add
mov
add
pop
or
adc
add
xor
add
cmp
dec
fcmovnu
xchg
push
fstl
movsl
clc
adc
add
jo
add
jp
push
cmpsb
clc
into
out
test
cld
xchg
stos
xchg
das
mov
jno
add
inc
clc
push
add
mov
add
add
cwtl
cmpsb
clc
je
clc
out
inc
add
sar
fnstsw
add
nop
test
add
push
add
lea
add
sbb
fisubrl
xchg
fcompl
lods
and
out
lock
add
cmp
cmp
and
add
test
xchg
jl
imul
daa
clc
bound
add
add
int3
in
ror
add
add
adc
add
pop
clc
cmp
lret
fsubp
clc
lcall
xchg
call
add
sbb
add
sar
test
jg
add
pop
xchg
inc
add
xchg
jl
mov
cmp
addr16
into
push
add
mov
add
cmc
or
add
mov
inc
clc
mov
push
add
add
add
mov
add
insb
cs
sbb
clc
aam
sbb
add
push
add
push
add
push
add
xchg
sbb
jae
add
dec
insl
imul
sbb
clc
daa
clc
push
add
stos
cmp
sar
and
add
sub
add
mov
cltd
mov
sar
pop
and
add
pushf
repz
notb
test
sub
clc
cmp
enter
mov
add
leave
imul
rcl
aaa
or
dec
lahf
dec
push
add
mov
add
jmp
and
add
cmp
add
clc
pop
mov
xor
add
clc
lret
xor
add
mov
add
xchg
dec
in
scas
pop
push
add
push
fisttpl
add
outsb
dec
ret
add
xor
mov
clc
clc
cmp
clc
add
add
ja
add
gs
fwait
sub
xchg
ljmp
inc
add
push
mov
sub
add
repz
add
add
adc
add
add
add
push
pop
jb
add
mov
test
leave
dec
sub
mov
sbb
clc
test
ja
clc
fs
test
mov
arpl
add
jb
add
jmp
arpl
add
add
arpl
add
clc
pop
dec
xor
lods
pcmpgtd
int
push
clc
jp
lret
push
add
add
xor
add
add
movsl
clc
call
push
shrb
add
adc
add
bound
add
or
clc
and
add
xchg
and
das
mov
lcall
scas
jle
or
add
adc
add
clc
and
add
cmp
pop
fisubs
cmp
clc
clc
cmpsl
clc
lods
sbb
adc
add
sub
add
mov
stc
movzbl
xchg
stos
dec
fistps
mov
jle
jge
fnsave
clc
pop
sub
inc
clc
sbb
clc
mov
cmp
clc
inc
clc
adc
add
lock
clc
pop
mov
clc
inc
clc
jmp
clc
xchg
adc
jb
add
jge
clc
aam
add
lcall
add
ds
cmp
fiadds
mov
pusha
add
lahf
insb
sub
frstor
clc
ss
xor
xor
add
clc
cmp
cmp
pop
clc
jmp
add
clc
cmp
add
clc
imul
fs
mov
jno
add
jecxz
inc
clc
add
out
xchg
mov
add
pop
aam
addr16
adc
add
add
pop
jb
add
add
mov
clc
ljmp
add
mov
xchg
mov
mov
out
psrlq
add
add
test
hlt
in
bound
add
add
mov
add
sar
jnp
or
mov
add
clc
pushf
into
aam
sub
das
fisubs
add
iret
cmp
pop
iret
jb
add
clc
cld
sbb
dec
aaa
mov
adc
add
add
mov
add
aad
clc
dec
stos
mov
add
dec
jne
clc
popf
inc
add
jg
jle
cwtl
imul
add
mov
clc
push
enter
dec
aaa
and
add
fstps
add
lea
push
clc
fidivrl
test
jnp
mov
clc
rorl
icebp
jb
add
fisubl
push
add
push
clc
cwtl
imul
push
outsl
test
clc
pop
push
add
das
mov
lret
test
cmpsl
clc
mov
sti
ljmp
clc
cmp
add
test
pop
lods
into
sbb
dec
adc
cmp
or
jl
dec
mov
clc
lods
fistl
pop
cmp
clc
dec
cld
mov
add
add
add
popl
aad
add
add
add
add
movsb
clc
cmp
add
ficoms
add
add
jg
mov
add
sbb
pop
adc
add
sub
clc
insb
mov
push
fistpl
cltd
iret
xor
add
add
dec
xbegin
add
xchg
adc
add
movsl
clc
mov
adc
clc
scas
push
clc
xchg
push
add
lcall
stos
insl
xlat
dec
sti
and
add
adc
add
push
push
dec
insb
sbb
dec
aas
mov
add
add
jbe
clc
inc
clc
popa
add
into
push
add
and
add
cmp
push
clc
fucomip
xor
add
pop
sbb
add
mov
add
and
add
clc
enter
push
add
xor
add
add
cmpsb
clc
das
mull
add
add
clc
fildl
add
inc
add
xchg
or
cmp
stc
mov
clc
das
push
pop
loop
or
xchg
rep
pop
clc
insl
adc
add
or
clc
jns
xor
add
xor
add
xor
add
outsb
iret
faddp
clc
test
mov
add
mov
ss
xchg
out
add
add
es
pop
lahf
jno
add
loope
je
mov
notl
clc
gs
mov
or
sar
ds
adc
add
add
hlt
incl
add
xchg
jne
cmpsb
clc
push
adc
add
clc
jle
mov
dec
fnsave
sbb
clc
jl
clc
mov
add
loop
inc
add
cmp
inc
clc
inc
clc
rclb
add
mov
pop
mov
add
clc
das
dec
call
add
cmp
add
push
xor
add
js
add
cmp
mov
jmp
xor
add
insl
ja
sar
call
add
mov
jmp
fbstp
inc
clc
rcl
sub
add
sbb
add
clc
cmc
jns
clc
out
xchg
cmp
fisubrl
mov
daa
clc
in
sub
call
loop
add
add
ret
mov
push
leave
mov
push
and
cmc
cmp
jb
add
jle
loop
xabort
clc
or
jecxz
idiv
sbb
inc
clc
insb
lods
xbegin
pop
jmp
push
mov
mov
scas
daa
clc
inc
clc
js
add
pop
clc
insl
mov
push
sar
clc
push
idivb
mov
add
add
add
pusha
add
mov
push
add
scas
push
ds
in
xchg
fsubs
add
push
add
fstpt
jge
ficomps
clc
ficompl
add
and
out
cmp
sar
repz
add
mov
add
push
clc
hlt
inc
add
repz
jo
add
mov
mov
add
loop
rolb
add
add
dec
xchg
xor
add
cmp
bound
add
lods
sar
stc
adc
out
es
insl
ds
clc
test
jmp
add
fnstcw
cmpsb
clc
out
jns
lahf
pop
hlt
daa
clc
cmp
lcall
mov
clc
fistpll
dec
pushf
xchg
sahf
clc
add
outsb
and
add
cwtl
cmp
fisubrs
sub
clc
add
enter
mov
and
add
insl
jmp
test
push
clc
dec
test
adc
add
xor
add
cmc
push
dec
mov
add
xchg
cmp
jb
add
mov
mov
js
clc
int
ret
das
iret
stos
dec
add
add
mov
dec
and
add
add
add
sar
clc
adc
clc
int3
cmp
push
cwtl
insl
push
lods
out
data16
fsubrs
add
cmp
add
movsb
clc
mov
xor
lahf
sbb
icebp
dec
test
sub
mov
out
xchg
aad
in
add
add
jb
add
int
add
and
xlat
or
addr16
sub
mov
bound
add
mov
arpl
add
not
dec
movsl
clc
lahf
stos
inc
clc
xchg
outsb
pop
or
clc
xor
mov
push
add
xchg
or
sbb
xor
lods
aad
jne
xchg
pop
dec
sar
add
push
mov
add
pop
xchg
std
and
fldcw
out
mov
clc
pop
mov
clc
ss
add
push
pop
es
xabort
add
sub
daa
clc
fmuls
rorb
sbb
dec
push
push
xchg
pop
mov
xabort
or
jmp
roll
add
jne
jp
sbb
clc
insb
and
add
clc
cli
mov
lret
ret
sub
cltd
mov
add
adc
add
clc
inc
clc
adc
add
add
inc
clc
cmp
fistl
add
add
dec
push
sahf
jmp
out
je
daa
clc
or
mov
push
add
xor
add
xor
add
test
pop
out
xbegin
mov
add
push
or
clc
xchg
push
add
jecxz
std
mov
cmp
sbb
ss
clc
push
xor
add
add
movsb
clc
test
cmp
pop
lret
sub
js
add
sti
je
xor
xor
push
add
cs
or
ss
out
fbld
stc
sar
ljmp
xor
insb
mov
clc
mov
or
jnp
jmp
add
add
add
add
cmp
or
clc
mov
push
scas
nop
pop
lock
pop
ds
stc
inc
add
outsb
leave
mov
add
sbb
add
mov
sub
out
inc
clc
dec
xchg
xor
clc
dec
mov
std
or
cmp
jmp
jmp
test
push
jecxz
mov
inc
clc
and
add
aam
clc
adc
aas
sub
add
clc
sar
mov
mov
out
mov
mov
insl
add
add
add
loop
data16
jnp
clc
pop
mov
clc
iret
imul
stos
hlt
iret
pop
sub
add
imull
push
clc
popa
add
sbb
add
hlt
lods
pop
mov
add
repz
clc
pop
jmp
ljmp
add
repnz
clc
popa
add
imul
push
clc
cltd
mov
clc
popf
or
push
xchg
push
add
inc
clc
dec
imul
cmpsb
clc
push
add
push
xbegin
flds
add
data16
push
mov
pop
pop
dec
dec
push
add
mov
dec
push
mov
mov
jae
add
inc
clc
add
cmpsb
clc
gs
xchg
pushl
add
mov
clc
mov
in
data16
das
sti
sub
pop
cltd
pop
loop
mov
or
mov
hlt
std
push
lcall
clc
movsb
clc
movsb
clc
mov
cmp
pop
fdivrl
movsb
clc
push
cmp
add
rcrb
and
add
data16
push
icebp
xor
add
mov
int3
hlt
in
out
cmpsl
clc
mov
insb
pushf
xchg
fadds
add
mov
and
add
add
add
add
sub
pop
fstp
cltd
imul
pop
jbe
fmuls
sub
fidivl
clc
lock
mov
add
mov
add
add
add
movsb
clc
push
clc
mov
mov
push
loopne
mov
clc
daa
clc
fcomip
out
xchg
sub
xchg
cmp
push
add
int
clc
or
add
aad
jl
clc
fucomi
jns
clc
addr16
xor
add
and
add
add
add
and
xor
cmp
add
or
clc
cmp
clc
mov
jb
add
clc
xbegin
add
enter
clc
mov
out
sub
daa
clc
sar
pop
ret
clc
in
sahf
jp
cmp
mov
add
xchg
icebp
popa
add
fsubp
clc
push
stos
xor
add
enter
push
mov
clc
out
pusha
add
jp
add
pop
pop
clc
cmp
add
sbb
add
dec
cmp
leave
xchg
mov
push
int3
dec
lods
mov
popa
add
xchg
ficoml
add
mov
jae
add
mov
clc
popf
adc
add
stos
dec
stc
or
clc
add
add
fisubs
add
add
pop
cmp
mov
cwtl
xchg
and
jg
clc
aas
addr16
imul
add
add
movsl
clc
mov
clc
inc
add
bound
add
pop
mov
add
and
add
sbb
adc
add
add
add
add
cli
dec
fidivrl
add
inc
clc
aam
pop
mov
clc
mov
out
push
dec
jle
add
imul
add
and
clc
loopne
and
add
jbe
cwtl
xor
add
mov
enter
adc
test
jae
add
add
movsb
clc
mov
cmp
jbe
arpl
add
mov
add
xchg
mov
clc
jo
add
and
add
xchg
es
imul
add
clc
inc
clc
mov
clc
aam
xchg
and
add
add
clc
push
add
add
or
addr16
mov
clc
jae
add
clc
cmp
add
mov
add
cmpsb
clc
mov
clc
imull
pop
and
add
push
dec
into
add
add
add
imul
xchg
jl
sub
dec
inc
clc
xor
add
add
int3
pop
xchg
xor
add
or
clc
dec
or
or
icebp
pop
jo
add
add
add
clc
push
clc
pop
data16
stos
mov
inc
clc
mov
repnz
mov
jo
add
add
add
mov
or
inc
add
mov
adc
add
out
sahf
jno
add
add
lods
mov
add
pop
cmp
add
pop
aam
mov
mov
mov
lock
sub
stos
loopne
cmp
ret
cltd
mov
add
pop
pop
clc
popf
add
add
sub
test
clc
iret
repz
add
add
and
add
add
mov
insl
ficoms
xchg
inc
add
into
int3
out
movsb
clc
repz
clc
ror
int
clc
xchg
mov
add
ror
xchg
mov
sbb
lock
stos
jp
clc
lods
fldcw
cld
adc
push
pop
insl
mov
xchg
mov
fwait
mov
mov
pop
in
mov
and
add
add
pusha
add
fidivs
out
cmp
add
mov
ret
clc
test
jno
add
or
jmp
fnstsw
clc
dec
and
loopne
xor
add
in
pcmpeqd
test
add
outsb
cmp
jmp
mov
imul
add
xchg
clc
test
shll
add
repnz
popf
mov
cmpsb
clc
sub
aad
clc
clc
xor
add
mov
clc
pop
pop
or
add
pop
movsb
clc
popf
out
cli
pop
cmp
add
add
add
jmp
ss
out
jno
add
cmp
add
mov
add
popa
add
leave
cmp
add
xor
add
clc
imul
sbb
lahf
mov
pop
lock
sahf
cmp
adc
add
xchg
stos
sbb
clc
idivb
arpl
add
add
mov
ljmp
add
cmp
outsb
or
clc
je
hlt
repnz
clc
mov
mov
add
sbb
clc
and
mov
clc
push
cmp
lret
popf
sar
in
xchg
push
dec
push
add
add
sub
add
sarb
inc
add
psubw
clc
fcomip
stc
xchg
aam
xor
add
cmp
enter
clc
pop
std
fwait
fwait
dec
or
in
xchg
cmpsb
clc
cmp
clc
mulb
lods
cmp
test
add
fstps
inc
clc
scas
aam
clc
mov
cmp
clc
mov
push
sub
in
add
fwait
pop
adc
clc
popa
add
popa
add
insl
mov
cld
sar
add
push
mov
out
jnp
aad
fimull
sub
aad
clc
push
arpl
add
lret
xor
add
and
add
add
in
test
clc
pop
sti
mov
mov
clc
fwait
xchg
inc
clc
or
clc
adc
int
fs
fsubrs
xchg
ljmp
add
dec
pusha
add
jnp
push
push
add
movsb
clc
or
popa
add
cmpsb
clc
push
jecxz
xchg
daa
clc
test
add
pop
sbb
adc
add
clc
mov
clc
in
clc
sub
dec
push
clc
in
out
push
add
frstor
call
mov
in
and
add
mov
bound
add
testb
add
daa
clc
sar
clc
popf
mov
add
cld
stos
push
clc
cmp
clc
cmp
and
dec
xchg
mov
add
xor
add
clc
xlat
push
int3
es
xchg
push
add
push
and
add
loopne
sub
dec
daa
clc
imulb
clc
in
pop
and
add
clc
std
or
pop
clc
out
cmp
clc
lret
cmp
scas
pop
dec
pop
lret
mov
cmp
sub
dec
cmp
add
loopne
cmp
cltd
xor
add
add
clc
push
clc
push
jo
add
aam
dec
push
add
jecxz
jmp
add
jecxz
dec
lock
push
xbegin
clc
sbb
bnd
and
add
mov
jo
add
pop
clc
cmpsl
clc
sub
add
and
sar
mov
into
jnp
cli
push
clc
pcmpgtw
jne
xor
mov
in
mov
add
repnz
pop
sub
mov
push
pop
pushf
adc
add
push
mov
dec
js
clc
mov
clc
push
aaa
test
jns
outsl
pop
sar
mov
loope
push
mov
clc
xchg
leave
dec
fs
int
add
insb
mov
fisttpl
out
sub
clc
pusha
add
sbb
cli
jb
add
inc
clc
cmp
mov
aas
mov
pop
push
add
push
clc
outsl
icebp
or
clc
int3
push
add
js
or
ret
clc
xor
add
add
add
clc
out
lods
add
jle
add
aad
add
mov
pop
stos
jle
mov
cmp
es
cs
cmp
add
fsts
div
sub
fs
daa
clc
push
add
and
add
add
pop
daa
clc
adc
add
xchg
mov
add
add
aad
sarl
clc
sahf
fs
cmp
and
add
mov
lret
test
clc
clc
call
ss
mov
stc
or
lods
repz
add
add
repz
add
dec
fistps
popl
dec
add
inc
add
push
add
push
cmp
adc
add
clc
and
add
add
inc
clc
pop
xchg
fcmovu
cs
ja
mov
add
fdiv
push
pop
pop
push
add
sub
dec
xchg
lcall
call
add
sbb
int
mov
push
add
push
sbb
add
lcall
das
fs
mov
pop
clc
jg
clc
pushf
inc
clc
fdivs
clc
insl
gs
fstps
push
and
add
add
mov
add
add
inc
clc
or
push
clc
inc
add
mov
enter
add
mov
add
movsb
clc
mov
add
clc
xchg
pop
push
add
add
mov
clc
push
loop
insl
xchg
movsb
clc
pop
daa
clc
shr
ljmp
jmp
add
push
loopne
sahf
sbb
xabort
lahf
cs
jb
add
test
sub
clc
mov
enter
add
cli
cmpsl
clc
ss
pop
adc
add
add
add
mov
push
xor
add
clc
xabort
fmul
mov
inc
add
pushf
fmul
lock
cli
xchg
sti
stos
xabort
clc
data16
es
mov
dec
and
add
clc
sbb
add
bnd
clc
push
jne
mov
add
xchg
mov
xchg
rcr
push
add
mov
pop
pusha
add
fldl2t
fmuls
clc
adc
add
cmp
clc
popf
ret
clc
in
xor
jns
pop
pusha
add
adc
add
clc
sar
ja
cmp
clc
je
popf
hlt
test
sub
clc
stos
addr16
popf
mov
clc
or
inc
clc
jl
sub
add
add
add
add
sar
clc
stos
clc
mov
lahf
loope
rorb
dec
repnz
add
jne
xor
add
adc
add
add
gs
mov
sub
pop
jns
stc
jne
pop
adc
add
clc
ljmp
push
aaa
dec
lret
add
adc
xchg
sub
jno
add
clc
sub
add
cmp
jl
add
out
mov
add
clc
imul
clc
int
dec
pop
push
mov
pop
lods
jle
add
and
add
decb
rcll
lahf
push
ljmp
clc
mov
and
add
add
dec
pop
sar
add
or
in
movsl
clc
arpl
add
mov
popf
bound
add
add
add
sbb
aam
inc
add
pop
test
push
add
mov
insl
ret
stos
cmp
clc
cmp
jge
inc
add
sub
add
mov
add
add
pop
sbb
add
pop
loop
repnz
jb
add
add
dec
int
add
vorps
clc
add
leave
push
xchg
lea
mov
int
push
clc
stos
xchg
out
push
add
xchg
aas
sti
clc
jo
add
fcmovnu
mov
pusha
add
lock
add
add
add
testb
add
adc
pop
cmpsl
clc
cmp
and
add
xchg
ret
clc
stc
movsb
clc
jno
add
clc
popa
add
cmpsb
clc
jg
clc
inc
add
test
add
add
lock
xor
add
cmpsb
clc
adc
add
add
inc
clc
loope
stc
arpl
add
add
aam
or
push
lea
xor
add
mov
add
pop
test
add
jns
jo
add
mov
in
adc
add
clc
pop
stc
out
and
add
mov
aad
mov
add
das
jecxz
push
outsb
adc
jecxz
out
pop
pop
cmp
cmp
sub
clc
jnp
xor
add
add
clc
cmp
lock
bound
add
aaa
and
sub
shr
insl
mov
clc
mov
add
add
xchg
inc
add
add
ret
clc
fstpl
add
leave
aas
lods
or
or
outsl
dec
cmp
jbe
inc
add
out
mov
cmp
jb
add
mov
add
inc
clc
jo
add
aam
cs
mov
pop
jmp
mov
clc
mov
clc
or
mov
dec
push
js
clc
in
xchg
cmpsl
clc
mov
stc
iret
pop
stos
leave
push
cld
or
clc
push
add
xchg
push
adc
add
ret
cmp
cmp
add
ja
aas
inc
add
push
or
jp
data16
xor
add
add
sub
cmp
and
add
add
dec
clc
mov
cmp
add
hlt
mov
clc
fildll
popa
add
popa
add
jg
push
mov
add
adc
add
add
add
or
add
or
push
add
xor
add
clc
es
xchg
dec
push
add
cmp
call
add
inc
clc
sub
add
mov
clc
test
in
xchg
inc
clc
js
mulb
add
dec
mov
mov
xor
add
popa
add
push
jg
imull
ret
xchg
cltd
mov
sub
mov
push
cmp
add
mov
add
add
add
add
insl
pop
clc
fstpt
mov
add
movsl
clc
cmp
fstp
aam
clc
cmp
add
add
add
add
inc
add
jl
mov
sub
clc
aad
scas
push
movsl
clc
test
and
push
add
lret
mov
or
clc
ljmp
xchg
and
add
clc
jbe
mov
test
jecxz
test
fmul
xor
add
push
dec
pop
lahf
adc
pop
movsb
clc
push
or
lcall
cmp
dec
mov
pop
sub
or
clc
ss
xor
add
push
fwait
out
mov
and
add
clc
xchg
out
in
mov
add
cmp
or
jp
arpl
add
jo
add
add
sub
clc
aad
idivl
sbb
clc
or
cmp
mov
test
inc
clc
dec
shll
popa
add
int
sub
cmp
add
aas
adc
add
pop
cmc
test
add
pop
dec
push
loopne
mov
jbe
xchg
cmp
rol
clc
add
add
pop
out
inc
clc
inc
add
fiadds
add
clc
xor
add
cmp
clc
adc
add
cmp
sub
clc
in
ja
stos
into
mov
add
add
out
or
pop
xor
add
sbb
mov
imull
dec
pop
jmp
in
pop
inc
add
jg
stos
cmp
clc
pop
jmp
add
mulb
js
clc
or
clc
xchg
adc
add
in
sub
std
icebp
cmp
movsb
clc
jo
add
loope
out
and
add
xchg
pop
add
clc
cmp
pop
inc
add
out
outsl
and
add
mov
add
xchg
std
repz
faddp
clc
adc
add
add
xchg
or
add
mov
sar
xchg
sar
clc
scas
push
sbb
clc
xchg
pop
jnp
push
push
inc
clc
cmp
push
add
push
mov
clc
int3
notb
mov
add
imul
mov
clc
sbb
imul
push
add
sahf
cmp
mov
add
sahf
movsb
clc
gs
pusha
add
sar
add
call
xchg
adc
add
clc
add
add
jl
clc
jns
jp
clc
push
add
sub
add
clc
sub
clc
inc
clc
jmp
call
push
push
clc
bnd
mov
add
scas
cwtl
lock
clc
shrb
xchg
ffree
clc
loope
jmp
clc
ret
call
add
idiv
cmp
mov
cmp
lcall
add
push
cmp
add
dec
scas
lods
push
clc
jmp
jb
add
add
leave
leave
imul
add
cwtl
sub
repnz
add
mov
shrl
add
sbb
das
jg
clc
mov
lret
add
inc
clc
shlb
add
and
add
add
clc
add
add
clc
and
ret
clc
insl
sub
pushf
cmc
inc
clc
push
add
or
daa
clc
out
xchg
std
ja
mov
xor
add
jle
inc
clc
adc
add
cmc
filds
add
add
in
mov
add
add
xor
add
ss
dec
mov
bound
add
sbb
dec
test
add
add
es
push
add
rolb
icebp
mov
add
ret
clc
fdivs
add
rolb
add
add
out
push
clc
cld
jle
push
iret
and
add
add
sbb
clc
mov
cmp
loopne
xor
rorb
pop
push
jno
add
add
pop
jns
clc
rcr
push
clc
es
in
ds
push
inc
add
xlat
mov
add
imul
daa
clc
push
clc
mov
popf
int3
ds
fwait
loope
pop
mov
aad
mov
or
movsb
clc
lret
mov
mov
sahf
ljmp
adc
in
sub
add
sbb
add
mov
popf
jno
add
push
mov
jo
add
sbb
add
sbb
add
push
add
ret
clc
insl
rcrl
sub
add
xor
add
add
dec
in
dec
pop
je
clc
adc
aaa
lods
cmp
ss
fstpt
dec
out
inc
add
movsl
clc
jne
cmp
clc
iret
and
add
mov
mov
sahf
xchg
data16
pop
clc
in
int
imul
scas
push
add
test
clc
cs
lods
xchg
pushf
sbb
jecxz
and
ret
clc
or
clc
sar
in
jle
clc
adc
pop
ret
clc
xchg
or
lock
add
add
repz
shrb
add
sti
pop
clc
stos
push
add
xchg
movsl
clc
stos
cmp
jecxz
test
clc
and
add
hlt
lea
clc
mov
outsl
fstps
fwait
in
gs
data16
jle
clc
pop
cmp
mov
add
pop
iret
data16
add
add
mov
mov
add
aam
mov
add
add
add
clc
mov
clc
das
push
mov
and
and
add
add
add
mov
loop
clc
enter
add
add
and
add
add
fucomip
lods
arpl
add
clc
aas
mov
pushf
movsl
clc
mov
stos
rorl
mov
pop
sub
clc
adc
add
icebp
xor
add
clc
mov
sbb
adc
add
fidivl
add
xchg
mov
xlat
int
clc
ljmp
dec
cld
fsubp
clc
mov
clc
loop
movsb
clc
sub
mov
clc
pop
push
push
add
shlb
add
clc
inc
clc
int
add
mov
clc
xchg
lea
and
add
xor
add
add
hlt
mov
clc
fs
imul
add
cmp
dec
aad
clc
ja
clc
fdiv
lret
add
inc
clc
and
call
add
clc
movsl
clc
arpl
add
flds
add
pop
divl
add
and
add
out
shr
push
add
repnz
mov
add
cmp
cwtl
jmp
add
clc
jmp
add
jg
clc
push
add
loop
stos
sar
clc
push
add
addr16
jo
add
add
jne
push
fisubrs
pop
in
es
loope
adc
add
add
clc
dec
inc
clc
out
icebp
in
sbb
cs
xchg
ljmp
movsb
clc
jecxz
or
test
push
cwtl
pop
xor
add
add
add
enter
clc
push
add
sub
scas
sbb
and
add
add
add
add
mov
dec
cltd
dec
lods
jae
add
or
xchg
test
sub
jmp
clc
cmp
fcoml
ficoms
clc
mov
clc
dec
je
cwtl
stos
neg
dec
xchg
popa
add
test
stc
outsl
xchg
xor
add
add
cld
pop
scas
mov
lcall
or
in
popl
repz
add
lret
mov
mov
xchg
xchg
mov
mov
loopne
push
add
xchg
jns
sets
nop
adc
in
dec
cmpsl
clc
lods
mov
stc
or
push
sar
clc
clc
xor
adc
add
jecxz
inc
add
stos
sar
dec
into
or
mov
sbb
add
add
test
cld
mov
clc
and
add
mov
mov
cmpsb
clc
jb
add
add
inc
add
incl
add
or
test
xlat
outsl
mov
jmp
fisubl
sbb
pop
cmp
clc
inc
clc
sub
clc
testl
clc
aas
push
fdivs
add
rclb
xor
add
push
add
stc
push
clc
cmp
into
pop
mov
pop
mov
add
loopne
dec
inc
add
mov
sbb
cli
lea
mov
xchg
scas
sub
clc
aas
repnz
jge
add
sar
jp
pop
xchg
sbb
imul
add
inc
clc
push
clc
mov
clc
inc
add
clc
into
fnstcw
int
add
imul
mov
or
clc
fstl
add
mov
xchg
push
outsl
jle
clc
dec
cmpsl
clc
mov
push
div
mov
stos
cld
jmp
pop
mov
dec
stos
xchg
loopne
cwtl
loopne
jg
nop
pop
test
dec
cmp
inc
clc
es
xchg
add
add
mov
push
xbegin
loop
loope
in
mov
sub
fisttpl
mov
add
mov
add
lods
or
xchg
call
cmp
clc
cmp
push
movsb
clc
cli
and
add
add
jg
clc
mov
xchg
xor
add
add
ljmp
fisttps
jnp
data16
and
push
push
add
fs
pop
into
inc
clc
adc
mov
cmp
push
xchg
pop
dec
push
clc
fmuls
lods
mov
sub
add
sub
pushf
jl
mov
clc
fsubrs
jbe
cmp
lea
sar
cld
std
stos
sahf
xchg
out
sti
cli
cmc
jmp
add
adc
add
clc
cmp
mov
out
jae
add
sar
add
repz
shrl
add
mov
clc
lock
add
mov
add
sub
out
cmp
clc
ret
clc
inc
add
cmp
clc
cli
xchg
movsb
clc
test
sbb
testl
clc
dec
fdivrs
cmp
and
add
je
mov
pusha
add
popf
enter
xor
add
add
mov
je
clc
inc
add
dec
push
xchg
jp
sub
inc
clc
dec
inc
add
sbb
add
out
in
leave
push
shlb
push
add
push
add
or
clc
psubusw
clc
ja
sbb
lods
stos
dec
outsl
out
test
sub
sar
clc
xchg
xchg
cltd
mov
jnp
clc
mov
cmp
add
jbe
add
pop
stc
cmp
clc
xchg
push
xlat
and
add
clc
mov
cmc
sti
movsb
clc
cs
divl
enter
clc
rolb
sub
add
hlt
sahf
adc
add
fsubrs
xlat
ret
stc
adc
add
jecxz
mov
jbe
mov
xchg
adc
add
clc
mov
call
add
add
push
clc
xchg
fistps
filds
add
mov
pop
sbb
dec
jg
add
add
ret
clc
push
cmp
add
or
push
add
jmp
clc
loope
sahf
insb
lods
popa
add
inc
add
pop
inc
add
das
xor
add
add
mov
lret
stos
push
add
mov
pop
clc
xor
add
pushf
iret
loopne
jbe
inc
add
leave
inc
add
adc
adc
clc
jns
ljmp
push
add
push
add
pop
imul
rep
clc
mulb
add
int
add
data16
pop
xchg
push
push
add
jne
into
test
outsl
and
add
sahf
test
mov
clc
push
clc
out
or
ret
clc
out
popf
in
lods
add
pop
xchg
lock
es
out
or
add
push
lahf
ror
mov
enter
arpl
add
clc
ss
pop
inc
clc
pop
mov
in
push
add
out
fisttps
dec
ret
clc
mov
xchg
scas
fcompl
in
imul
mov
xchg
add
add
jne,pn
clc
pop
clc
inc
clc
and
add
sar
clc
xchg
enter
clc
inc
add
sub
adc
add
insl
aas
gs
aad
clc
jl
inc
clc
add
add
or
data16
es
mov
add
clc
ret
or
clc
iret
movsb
clc
adc
sub
clc
pop
outsb
inc
add
add
add
add
movsb
clc
sub
add
add
adc
add
push
xor
xchg
dec
xbegin
add
adc
add
adc
add
add
sub
pushf
imul
ret
sbb
clc
mov
test
clc
jne
clc
mov
add
jl
mov
add
push
arpl
add
add
add
sti
ds
and
add
sbb
int3
cli
loopne
repnz
add
push
pop
cmp
mov
in
sar
clc
jo
add
fstpl
inc
add
cmc
mov
add
movsb
clc
pop
mov
int3
jns
adc
push
jno
add
sar
add
xchg
inc
clc
rsqrtps
add
clc
stc
fcmovu
in
sbb
aam
adc
pop
mov
dec
pusha
add
inc
clc
sti
push
add
pop
loope
test
clc
rcrb
negb
xchg
xlat
das
sar
lods
xchg
cmc
inc
clc
xchg
ret
clc
in
ror
fwait
add
add
mov
clc
test
xor
add
ret
clc
inc
clc
je
jl
leave
decl
out
mov
clc
aad
lods
out
lea
add
mov
push
lahf
in
in
push
test
das
fsubrs
ss
pop
jecxz
add
add
jb
add
adc
add
nop
test
inc
add
fisubrl
mov
xchg
cmp
mov
mov
add
insb
dec
loop
jmp
clc
xbegin
add
dec
jmp
clc
loop
cwtl
loop
jmp
cmp
clc
or
sar
pop
dec
sbb
pop
out
jae
add
or
sub
add
cmp
sbb
mov
clc
int
pop
clc
xor
pop
imul
lret
inc
add
scas
and
add
xchg
xor
add
or
data16
popa
add
sub
inc
add
gs
xlat
xchg
pusha
add
aad
imul
stc
jno
add
cmp
jp
clc
push
das
mov
push
or
mov
jg
sbb
clc
inc
clc
mov
clc
inc
add
pop
lods
pushf
or
and
add
lods
cmp
add
xchg
sbb
add
inc
clc
mov
add
jl
add
sub
repnz
add
add
hlt
loope
inc
clc
dec
or
negb
push
add
fstpt
jns
and
add
clc
stos
mov
cmp
mov
lahf
mov
clc
in
adc
add
jnp
jl
bound
add
mov
xchg
jecxz
out
xabort
fs
aad
clc
jne
cltd
mov
add
insb
pop
iret
adc
clc
push
fldl
xchg
push
leave
cmc
scas
xchg
fdivl
add
adc
add
add
fs
movsb
clc
or
std
popa
add
stos
xor
test
imul
mov
call
jne
add
in
sar
fldcw
adc
add
enter
sub
inc
clc
or
xchg
cmp
mov
int
dec
xor
pop
arpl
add
cmpsl
clc
xchg
mov
lcall
xchg
add
and
add
sar
pop
add
add
add
cmp
inc
add
sbb
ds
add
xor
add
jb
add
push
xlat
dec
clc
test
clc
cli
insb
xabort
add
out
push
ds
pop
in
ret
clc
mov
bound
add
add
ret
inc
clc
enter
inc
add
cld
jbe
add
jnp
mov
lret
clc
mov
pop
pop
clc
xchg
push
push
inc
clc
push
add
jne
mov
jge
clc
dec
inc
add
inc
add
jo
add
add
inc
add
or
clc
popf
dec
jecxz
rcrb
je
jne
clc
test
push
sbb
pop
and
add
lods
leave
xchg
sar
pop
and
mov
clc
add
pop
fcoms
cmc
cwtl
push
adc
add
add
clc
into
rorl
es
daa
clc
fiaddl
xchg
adc
int3
fldcw
add
mov
or
add
pop
repz
fists
loope
and
pop
lock
xchg
sbb
xchg
mov
adc
xchg
lods
cmp
clc
xchg
int
fsubr
pop
test
sahf
js
mov
addr16
cld
popf
jo
add
dec
add
or
add
clc
lods
dec
rol
clc
dec
cmp
clc
scas
sbb
add
jl
clc
add
dec
inc
add
gs
lahf
xchg
inc
add
cmp
sahf
mov
jmp
clc
add
add
jnp
pop
xabort
add
push
pop
clc
xor
clc
filds
clc
jb
add
popf
data16
push
mov
data16
outsb
jne
mov
insb
cmp
inc
add
mov
add
sbb
clc
pop
pop
mov
mov
outsb
sar
cli
mov
cwtl
mov
xchg
pushf
fsts
mov
add
add
arpl
add
add
push
nop
loope
xchg
sar
clc
lea
ret
clc
jno
add
ss
sub
mov
push
mov
add
imul
shlb
clc
js
add
xchg
push
test
inc
add
ficompl
push
out
dec
pop
or
fsts
clc
in
mov
clc
dec
cmpsb
clc
dec
and
mov
cmp
xchg
mov
add
add
adc
add
add
aas
add
cmpsl
clc
in
out
pop
adc
add
fistpl
clc
cmp
add
add
push
xor
cwtl
mov
fs
loope
mov
arpl
add
cmp
push
add
lods
xor
add
mov
add
xor
add
clc
sti
jp
out
iret
mov
clc
or
xor
dec
loope
std
mov
lock
je
add
and
pop
scas
or
add
add
mov
hlt
out
jl
or
pop
clc
inc
clc
sar
and
add
popf
fiadds
add
clc
insl
xor
aaa
or
mov
iret
push
xor
add
sti
cmp
push
mov
aad
jmp
cmc
add
add
add
dec
daa
clc
and
add
addr16
mov
add
add
or
jnp
sub
jecxz
sub
add
mov
xor
add
sbb
nop
mov
lock
clc
mov
clc
mov
stos
adc
add
ss
jbe
enter
daa
clc
xchg
xabort
lods
xor
add
clc
sbb
add
cmp
outsl
inc
clc
ds
clc
xor
add
sub
mov
add
and
add
clc
push
mov
je
es
xor
or
sahf
pop
mov
shrl
xchg
sub
cmpsb
clc
or
pushf
or
mov
clc
rcrl
cli
mov
clc
sbb
push
add
jle
clc
sar
sub
add
imul
sar
push
clc
dec
jp
dec
out
ds
clc
inc
add
ficoml
ljmp
add
push
pop
mov
add
gs
add
add
add
es
xor
add
clc
push
add
call
or
clc
addr16
push
dec
dec
dec
xor
add
and
and
int3
pop
clc
in
jae
add
inc
clc
popa
add
pop
sbb
clc
jmp
clc
clc
pusha
add
or
cmp
pushf
dec
aas
jge
add
jmp
clc
add
xchg
xchg
popa
add
jge
or
arpl
add
add
adc
add
std
aaa
push
sbb
and
add
add
jle
clc
mov
aas
adc
add
and
pop
addr16
and
add
clc
and
pop
xlat
xor
add
into
inc
add
add
add
adc
add
clc
out
and
add
int3
push
mov
jp
add
mov
add
mov
clc
in
inc
add
je
add
push
add
movsb
clc
cmp
clc
jo
add
jle
pop
cs
cmpsl
clc
push
fisubrl
jne
cld
lock
mov
call
pop
clc
ja
clc
sub
xchg
inc
add
in
push
add
xchg
sbb
arpl
add
add
in
pop
clc
jb
add
cmp
clc
clc
js
pop
xor
or
add
push
clc
or
add
push
insl
arpl
add
add
inc
add
leave
ds
test
mov
clc
push
insl
aas
aaa
int
add
push
add
psrlq
clc
pushl
add
add
add
add
push
clc
fwait
loopne
pop
clc
inc
add
adc
add
add
push
and
add
clc
cmp
pop
fnstsw
clc
cmp
mov
aas
sar
clc
adc
add
mov
adc
add
repz
add
enter
push
clc
stos
mov
clc
adc
add
cmpsb
clc
inc
add
mov
clc
xlat
stc
xor
add
fsubrl
in
add
add
jecxz
out
inc
clc
push
sbb
cmp
push
add
mov
fwait
arpl
add
push
pop
pop
aam
clc
jbe
xchg
daa
clc
cmp
mov
jg
sub
dec
or
repnz
add
add
clc
lods
stc
fcmovnb
clc
mov
sbb
add
add
insl
mov
js
clc
mov
mov
loop
fnstenv
add
inc
add
sub
xchg
cwtl
jns
push
add
out
mov
mov
sub
and
mov
imul
aam
test
clc
mov
add
bound
add
add
pop
pop
mov
sbb
clc
and
add
add
xor
add
jnp
cmp
clc
xabort
clc
test
mov
jg
sub
clc
push
clc
pop
test
clc
aad
mov
add
push
mull
xchg
cmp
push
add
jg
call
loop
or
dec
inc
add
popf
vmaxps
cld
mov
clc
adc
add
cli
decb
jg
sbb
fdivrs
sti
ss
xor
add
incb
clc
or
add
scas
sbb
xchg
sar
clc
jns
mov
aam
clc
mov
pushl
das
mov
int3
lea
adc
add
push
inc
clc
xlat
adc
add
jb
add
clc
lea
clc
and
or
icebp
fs
cmp
fstp
cmp
dec
add
add
clc
dec
add
add
dec
xor
add
push
lock
push
lret
aad
xchg
cli
xor
add
mov
xchg
ljmp
cmp
add
das
or
add
out
adc
add
mov
add
cmp
clc
clc
out
cmp
clc
sar
test
aas
adc
add
add
lods
test
clc
jbe
and
popa
add
add
add
rcll
add
lret
jae
add
mov
add
dec
bound
add
call
clc
aam
vorps
jmp
adc
add
add
clc
in
sub
add
add
and
add
add
call
call
jecxz
gs
dec
lret
xor
add
loop
or
clc
xbegin
add
add
and
out
lgs
inc
clc
and
push
inc
add
or
push
push
xor
add
add
loop
fcoml
add
add
outsb
out
mov
ja
jg
clc
daa
clc
scas
sti
gs
jb
add
add
stos
jp
nop
sti
sub
jg
clc
into
xlat
mov
add
pusha
add
cmpsb
clc
das
mov
imul
cltd
fldenv
xor
clc
cwtl
fdivs
add
add
mov
pop
hlt
jmp
add
lret
add
mov
iret
jbe
add
or
add
add
mov
sahf
pop
pop
clc
or
cld
je
add
add
sbb
add
sar
add
into
movsl
clc
popf
sbb
cmp
sar
cmp
ret
movq
rorl
mov
jle
sub
add
mov
clc
loopne
push
add
or
inc
add
clc
pop
lahf
xchg
jmp
cs
jg
xor
add
lret
jbe
faddl
add
clc
inc
add
aaa
imul
and
sar
aas
pop
ljmp
loopne
into
test
clc
mov
jne
mov
jl
add
sub
mov
mov
mov
add
add
lcall
adc
add
add
addr16
pop
clc
loop
xor
add
mov
add
push
clc
ja
clc
jp
add
iret
mov
jb
add
in
popa
add
in
pop
clc
mov
clc
lcall
shll
mov
clc
outsl
js
adc
add
xchg
mov
mov
cmp
mov
in
mov
mov
ret
inc
clc
add
add
loope
movsb
clc
adc
add
mov
int
shl
dec
ljmp
in
jno
add
pop
sub
mov
mov
cmpsl
clc
push
clc
in
aad
lea
pop
dec
loopne
inc
add
daa
clc
icebp
fadds
nop
arpl
add
sar
add
test
push
add
nop
pop
clc
inc
add
jnp
shrb
add
add
inc
add
hlt
mov
xor
add
add
out
push
add
inc
clc
xbegin
add
adc
add
clc
cwtl
add
inc
add
or
or
jne
repnz
mov
clc
and
xchg
sar
mov
push
inc
clc
xor
lods
sti
pop
leave
mov
add
inc
add
push
mov
jb
add
data16
mov
rcrl
stos
movsl
clc
cmp
int
jecxz
test
mov
std
fidivrs
clc
mov
add
cmp
xbegin
jb
add
ss
vmovlps
add
inc
add
or
xchg
xor
xchg
js
push
frstor
mov
movsl
clc
mov
push
add
mov
push
clc
dec
inc
clc
xchg
adc
add
add
nop
cld
stos
mov
fstpt
lock
cmp
or
inc
clc
sbb
clc
lret
jo
add
xor
add
clc
pop
rorb
jae
add
int3
lods
pop
clc
int3
movsb
clc
xor
add
mov
es
int3
scas
pop
push
popf
pop
inc
clc
cmp
and
add
clc
add
mov
lret
clc
and
add
clc
clc
jp
lahf
adc
add
add
sahf
lods
xabort
sahf
gs
jmp
popa
add
mov
cmp
mov
rcrl
loope
insl
hlt
mov
sti
push
hlt
mov
add
cmp
dec
push
add
xor
cld
push
std
rorb
clc
sub
mov
outsb
cmc
xor
add
sbb
sti
xchg
push
add
cmp
clc
or
clc
popa
add
jns
sar
mov
clc
jno
add
imul
testb
mov
add
dec
jnp
add
mov
mov
pop
sub
push
daa
clc
add
add
cmp
clc
dec
insb
jge
sub
aad
ret
xchg
testb
clc
icebp
int3
mov
clc
add
cld
adc
push
add
stos
test
sub
jb
add
xchg
jle
inc
clc
push
popa
add
cmpsb
clc
xor
pop
add
add
insb
inc
clc
xor
pop
xor
add
inc
add
ret
clc
or
dec
jbe
xbegin
xchg
outsb
scas
xlat
lret
ret
pop
push
mov
outsl
repnz
lret
fwait
loop
adc
add
adc
add
xor
push
into
test
xchg
xchg
xchg
int3
int3
movsl
clc
rcr
dec
arpl
add
das
dec
clc
ficompl
xor
add
xchg
fs
pusha
add
jo
add
js
out
xor
add
clc
aad
out
mov
clc
iret
in
mov
mov
add
xor
add
add
insb
test
divl
add
clc
add
add
pushf
jg
jmp
add
xchg
mov
mov
loopne
in
xchg
sbb
add
xbegin
clc
fcoml
add
ret
clc
pop
sub
test
lock
lods
add
or
inc
add
xbegin
rolb
add
je
or
add
add
jge
jne
scas
cli
clc
inc
add
lret
sar
lret
test
ljmp
loope
pop
mov
clc
jp
adc
add
bound
add
clc
cld
and
std
cmp
clc
adc
add
xabort
add
or
clc
cmp
daa
clc
add
add
mov
add
pusha
add
repnz
clc
ffree
clc
bound
add
add
ret
repnz
repnz
add
ret
clc
adc
add
add
nop
add
add
das
in
add
add
clc
jb
add
clc
dec
cmc
adc
add
cli
sub
clc
leave
lods
cmp
aas
push
push
clc
xabort
clc
sahf
push
and
add
clc
outsl
sub
add
cmp
popa
add
pop
notb
add
fadd
clc
pop
xor
add
loope
push
clc
mov
add
sub
fisttps
mov
add
inc
clc
int3
sbb
fs
pop
xchg
sar
jne
add
popa
add
or
mov
clc
mov
mov
push
test
add
adc
movsb
clc
adc
clc
sbb
add
add
clc
dec
pop
and
jmp
adc
add
add
repz
stos
sub
mov
data16
jp
clc
test
add
pusha
add
out
mov
mov
mov
jle
clc
sub
test
movsl
clc
cltd
xabort
sub
add
add
add
xchg
mov
clc
test
cmp
clc
xchg
daa
clc
push
add
std
xor
cmp
clc
jg
clc
ret
dec
mov
jbe
dec
fstpt
add
inc
add
fsubs
mov
mov
mov
es
mov
mov
add
inc
add
xlat
adc
add
mov
add
inc
clc
jmp
mov
clc
mov
popf
jo
add
clc
add
add
cld
xlat
lret
loop
adc
add
xchg
cmp
clc
pop
ljmp
pop
push
rcll
clc
jmp
clc
sahf
movss
add
enter
dec
pop
add
add
cld
sahf
push
add
call
cmp
add
adc
add
clc
inc
clc
push
inc
add
cmp
dec
cmp
sarb
pop
ret
clc
xor
add
add
aam
mov
add
ret
imul
sub
mov
clc
loopne
jns,pt
add
int
add
push
add
fimull
add
dec
jb
add
cmp
dec
add
sub
mov
jb
add
xchg
shll
cmp
add
add
add
fucomp
push
sar
lods
cs
lcall
fnsetpm(287
clc
adc
outsb
inc
clc
popa
add
xchg
pop
pop
insb
push
clc
jle
decb
ja
clc
push
jb
add
iret
xor
add
clc
mov
pop
mov
ret
clc
cmp
add
gs
pop
pop
ret
clc
fdivl
jmp
inc
clc
fs
sub
ret
add
pop
clc
std
fdivp
mov
mov
clc
inc
clc
das
inc
add
aaa
add
add
pop
xchg
xchg
or
clc
jbe
mov
mov
jg
clc
stos
insl
sub
mov
add
imul
add
add
xlat
jns
push
add
sbb
pop
cmp
notb
add
jp
xorps
sbb
aas
jnp
clc
and
add
mov
pushl
xchg
xchg
iret
or
add
add
add
lods
lods
pop
push
clc
mov
jle
inc
clc
popf
mov
xchg
loop
dec
mov
data16
mov
add
push
add
clc
mull
clc
mov
clc
xchg
push
xchg
lret
add
clc
loope
fs
fnstenv
clc
clc
add
push
mov
flds
or
add
or
clc
inc
add
out
push
inc
add
inc
add
cmpsb
clc
cmp
inc
clc
add
fisubl
add
jbe
imulb
aas
sar
or
pop
daa
clc
imul
add
out
adc
add
xchg
clc
js
enter
sbb
inc
clc
xor
add
sub
mov
popf
sbb
clc
ficoml
dec
inc
clc
or
call
clc
hlt
gs
jo
add
add
outsl
cmp
cmp
jb
add
repnz
mov
pop
insl
mov
push
aas
pop
das
mov
mov
push
add
pop
ret
clc
adc
add
adc
add
add
clc
nop
inc
clc
cmp
or
clc
fidivs
rorb
clc
cmpsl
clc
cwtl
sbb
clc
bound
add
add
outsb
jae
add
shr
test
mov
adc
add
out
ret
clc
scas
lea
mov
pop
test
out
ss
add
daa
clc
xchg
je
aad
fcomps
inc
add
mov
sub
clc
enter
insb
xchg
inc
clc
dec
jne
sub
mov
mov
add
push
popa
add
jmp
clc
sar
sub
lea
sub
sar
mov
cmp
cmp
cwtl
pop
imul
clc
add
add
mov
push
add
pop
mov
dec
pop
or
shlb
mov
clc
into
sub
cmp
jb
add
add
test
xbegin
push
xchg
test
imul
enter
loop
or
clc
lods
xor
jnp
cmp
cmp
cwtl
movsb
clc
fsubl
clc
in
xchg
pop
mov
add
ficomps
inc
clc
and
xor
add
negl
mov
loopne
mov
pop
call
in
adc
add
add
add
clc
inc
add
push
xchg
imul
lock
test
add
idivl
sub
add
sar
iret
int
movsb
clc
pop
dec
mov
push
clc
xchg
cmp
add
clc
xchg
push
add
in
adc
add
clc
inc
add
or
pop
rorb
mov
inc
add
inc
clc
scas
cmpsb
clc
dec
stc
in
push
clc
add
sub
add
or
divl
add
test
inc
add
inc
clc
mov
add
dec
cs
sbb
clc
add
add
add
clc
inc
clc
test
arpl
add
clc
jbe
nop
data16
pop
enter
mov
lock
dec
sub
jne
push
stos
in
mov
lret
int
clc
mov
into
push
add
inc
add
lret
mov
cmp
sbb
clc
jae
add
cmp
clc
loope
out
pusha
add
cmp
xchg
repz
cs
xor
add
add
jg
aam
clc
jb
add
js
pop
inc
clc
xlat
shll
mov
mov
mov
enter
int3
test
int
jl
add
jp
mov
add
add
iret
je
fs
sbb
cmc
inc
add
mov
or
mov
clc
pop
push
in
shlb
add
ret
xor
add
push
mov
clc
cltd
mov
add
mov
das
daa
clc
cld
pusha
add
cmp
clc
pusha
add
pop
shrb
inc
add
data16
scas
addr16
mov
repnz
data16
push
clc
cltd
xchg
cmp
mov
out
std
out
fldcw
enter
add
add
adc
mov
and
add
add
int
mov
clc
int3
sarb
and
add
clc
mov
enter
mov
add
jae
add
clc
xor
add
mov
pop
mov
add
add
and
add
add
xbegin
dec
xchg
fs
inc
clc
stos
push
add
ret
clc
dec
je
movsb
clc
xor
add
clc
es
and
add
clc
lret
add
in
mov
clc
xbegin
test
das
dec
pop
push
add
add
xor
add
clc
je
fwait
adc
test
pop
outsl
iret
imul
sbb
clc
out
mov
push
clc
lahf
xchg
xor
add
jb
add
xchg
add
add
xbegin
add
add
icebp
adc
add
add
inc
clc
cltd
xor
add
add
pushf
cmc
and
add
clc
out
xor
add
mov
inc
clc
adc
add
loope
mov
scas
cltd
xchg
adc
add
inc
add
adc
add
fidivrl
js
xchg
push
cmp
xor
cli
repz
gs
mov
mov
loop
mov
xor
add
add
pushl
add
decb
inc
add
test
jo
add
aas
shl
clc
push
or
ljmp
add
add
sub
test
sbb
add
stos
hlt
dec
xor
out
pop
mov
imulb
clc
dec
addr16
sbb
clc
sbb
repnz
add
sahf
int3
push
add
into
pop
jnp
xchg
pop
clc
pop
lods
roll
add
sbb
and
add
add
mov
repz
rorb
clc
in
insb
aam
jae
add
pop
mov
clc
fsubl
add
mov
sahf
jno
add
clc
cmp
sar
cmp
dec
into
repnz
add
add
push
clc
push
aad
cmp
aas
dec
adc
add
clc
mov
xor
lea
insl
push
in
inc
clc
clc
and
add
add
imul
add
sub
clc
xlat
cmp
std
imul
out
add
add
clc
sub
add
adc
add
adc
add
push
dec
xchg
in
push
cwtl
out
sbb
clc
repz
inc
add
out
pop
inc
add
test
clc
xchg
scas
cmpsl
clc
mov
sub
popf
stc
test
addr16
push
add
in
ss
in
lahf
je
clc
in
jge
clc
daa
clc
sbb
clc
insb
cmc
out
test
mov
clc
stc
movsl
clc
inc
add
sar
repz
imul
clc
mov
and
add
clc
mov
ret
add
jb
add
cmp
scas
cmp
xchg
sti
mov
add
add
fwait
xchg
push
insl
mov
jbe
push
add
xabort
ret
clc
into
jb
add
clc
add
add
kmovw
clc
mov
in
xchg
push
add
mov
popa
add
outsl
fiadds
sub
clc
pop
lods
addr16
sub
add
mov
clc
cmp
clc
xor
add
outsb
out
insl
es
ret
add
xabort
jmp
add
inc
add
int3
mov
sar
fs
iret
aas
mov
add
xabort
out
pop
popa
add
jge
clc
cmpsl
clc
out
mov
dec
cmp
add
add
cmp
add
cltd
xchg
xor
add
add
mov
push
add
jnp
pop
pop
stos
dec
xbegin
ffree
clc
sarb
adc
add
popf
xor
add
xchg
inc
add
jecxz
shll
clc
sbb
stos
and
add
cmp
cmp
xchg
fstps
repz
testl
add
add
sub
sub
add
add
int
cwtl
or
add
mov
fdivrl
xchg
shlb
add
add
inc
clc
lret
clc
std
shlb
sbb
aam
lahf
test
push
inc
clc
sbb
pop
cmp
jp
mull
sar
or
shlb
add
clc
gs
add
push
add
notl
add
jg
xchg
add
mov
add
jl
add
sub
ljmp
clc
clc
or
add
lea
cmp
add
or
dec
dec
jmp
clc
mov
add
mov
pop
test
add
or
shll
data16
pop
bound
add
add
loop
mov
xlat
ret
clc
mov
clc
xlat
hlt
loope
dec
mov
adc
add
mov
add
xchg
xor
divl
add
xchg
mov
mov
rcl
sub
gs
add
add
das
dec
and
clc
dec
push
pop
xchg
push
addr16
add
add
flds
add
stc
jmp
icebp
dec
fcoms
push
clc
dec
sbb
aas
or
cmp
jns
clc
jp
push
add
lret
jmp
add
out
mov
mov
add
add
add
add
addr16
jnp
outsb
imul
repnz
rolb
inc
add
push
add
addr16
ss
add
or
sub
test
xchg
or
clc
push
add
jnp
push
xor
add
sbb
mov
add
clc
xor
add
jg
and
js
add
push
clc
movsl
clc
dec
and
add
mov
clc
mov
clc
sub
lret
add
push
sub
clc
xchg
imulb
mov
add
bound
add
stc
cmp
clc
sub
xchg
scas
daa
clc
mov
or
add
pop
inc
clc
out
jmp
mov
add
cld
stos
shr
das
or
clc
test
add
loope
sbb
add
aam
add
push
add
adc
add
sub
repnz
add
imul
data16
ljmp
lret
dec
adc
clc
aad
push
add
inc
add
outsb
sub
js
add
pop
jle
scas
or
inc
clc
icebp
dec
cmp
ret
clc
mov
popa
add
repnz
clc
fmuls
add
mov
jmp
lret
cmp
pop
pop
je
and
add
xor
add
add
push
aas
add
add
clc
test
mov
pop
pop
test
repnz
add
add
and
add
mov
add
add
jno
add
xbegin
mov
add
pop
push
add
insb
clc
das
lahf
adc
add
add
fldcw
lret
jne
cmp
add
push
insb
push
add
sbb
stc
or
clc
sbb
add
outsl
cs
rcrl
add
mov
loop
sub
divb
add
clc
mov
xchg
mov
filds
add
mov
popa
add
mov
add
cmpsb
clc
push
add
adc
add
out
mov
add
insl
xor
clc
or
adc
add
add
add
jge
adc
add
add
sbb
mov
add
xchg
lahf
jp
jbe
push
add
inc
add
add
add
sbb
mov
in
adc
add
dec
sbb
add
add
dec
or
or
push
clc
jb
add
mov
add
add
add
cmp
inc
clc
aas
sub
add
cmp
push
clc
outsb
daa
clc
fwait
cmp
jno
add
xchg
ret
clc
mov
test
popf
xlat
push
mov
das
fstpl
clc
ds
add
mov
pop
xor
mov
popf
cmpsb
clc
mov
and
push
clc
sub
clc
stos
or
inc
add
xbegin
add
cmpsb
clc
pushf
pop
clc
mov
push
lea
xabort
clc
je
mov
xor
add
enter
out
cmp
xor
add
add
into
mov
cmp
imul
cmpsl
clc
push
loope
jo
add
add
adc
add
push
xor
stos
mov
push
mov
jo
add
clc
arpl
add
pop
mov
clc
je
pop
popf
pop
stos
mov
adc
add
add
push
add
out
xor
add
mov
and
and
add
clc
mov
sub
scas
jl
add
xchg
js
cmp
sub
ficomps
inc
add
push
xor
data16
and
mov
clc
cmp
clc
leave
xchg
stc
outsb
inc
add
sbb
in
stos
xbegin
bound
add
jmp
add
dec
cmc
push
add
mov
add
imul
test
paddusw
nop
add
add
clc
cld
cmc
out
add
add
add
add
mov
rol
clc
mov
push
iret
xchg
lahf
popf
sub
clc
mov
clc
in
cmp
add
rcll
add
sub
fidivl
add
add
xchg
test
clc
in
cmp
pop
clc
mov
adc
add
clc
xor
add
clc
nop
fwait
mov
imul
pop
inc
add
sbb
mov
xlat
data16
daa
clc
pop
int3
fst
mov
add
add
mov
int
clc
dec
fildl
add
add
cmpsb
clc
test
test
clc
test
clc
mov
add
add
push
xchg
inc
clc
xchg
enter
add
xor
outsb
pop
clc
sti
or
clc
push
fcoms
and
ret
add
jmp
and
add
jmp
fstl
push
push
insl
and
add
add
sbb
pop
xchg
imul
adc
add
cmp
sahf
inc
clc
loop
add
add
sub
int3
clc
sahf
loopne
sar
fsts
add
ds
imul
jno
add
aam
cmc
fmulp
es
cmp
clc
xchg
xbegin
clc
fildl
dec
pushl
add
lods
repz
add
sub
clc
mov
mov
sub
add
push
fiadds
add
add
insb
test
add
int
out
and
lods
loop
insl
fistpll
xor
inc
clc
dec
daa
clc
idivl
mov
mov
clc
lahf
dec
dec
lods
mov
add
add
clc
bound
add
test
add
mov
push
fs
dec
xchg
mov
clc
fwait
mov
xchg
mov
add
add
push
mov
addr16
lcall
dec
fld
clc
das
sbb
clc
push
inc
add
xchg
inc
add
mov
add
data16
jne
inc
add
inc
add
repnz
add
or
add
cmp
add
add
add
mov
clc
mov
call
xchg
xchg
pop
ja
xchg
cmp
xchg
movsl
clc
xchg
add
fs
jns
add
add
add
dec
cmp
add
and
add
add
pop
out
xchg
mov
out
loopne
mov
add
mov
fisubrs
test
inc
clc
out
out
cmp
pushf
rcrl
jae
add
sbb
ret
clc
mov
xchg
dec
inc
clc
lods
ss
popf
imul
lea
adc
mov
lret
xchg
xabort
loope
aad
clc
sub
add
dec
or
clc
fdivl
add
sub
es
mov
jnp
clc
xor
clc
lock
xchg
stos
jle
clc
sbb
clc
xchg
fcmove
test
dec
fdivr
loope
mov
outsl
xabort
mov
addr16
mov
push
hlt
push
add
lret
pop
cmp
fidivl
add
fsts
add
mov
mov
dec
insl
lahf
add
add
add
add
lcall
inc
clc
cmp
clc
dec
inc
add
loopne
outsb
xchg
sbb
clc
fcoms
jg
loopne
in
cs
cmp
clc
add
add
clc
loop
inc
clc
call
or
clc
repz
add
in
loop
stc
scas
jmp
sub
clc
cmp
xor
add
add
jge
clc
sbb
insb
out
ja
clc
mov
add
lea
xchg
repnz
add
jmp
mov
mov
int3
jg
aad
pop
clc
and
add
add
mov
clc
jle
push
add
aad
clc
or
imul
mov
pop
mov
mov
and
add
test
xor
add
push
dec
mov
lahf
xor
add
clc
mov
rcrl
add
popf
dec
lret
pop
adc
add
add
mov
mov
add
clc
sbb
cli
add
mov
add
fsts
add
dec
leave
or
inc
clc
imul
xchg
jge
add
inc
clc
push
add
cmp
pusha
add
in
push
xchg
ffree
clc
dec
xchg
lods
cmc
je
pop
cmp
pop
lods
sbb
add
fsts
xchg
jg
sbb
jb
add
add
cltd
fists
add
clc
inc
clc
xchg
and
add
add
add
shll
adc
add
clc
rorl
inc
add
into
in
add
add
mov
stos
or
add
pop
loop
add
add
xchg
mov
clc
fistl
es
cli
pop
xor
fsubs
add
and
add
clc
inc
clc
inc
clc
cmpsl
clc
mov
add
ss
sti
or
ret
mov
mov
clc
jecxz
aas
out
xchg
mov
inc
add
cli
mov
aad
mov
cli
sub
ret
add
mov
push
add
push
add
popa
add
cltd
add
add
add
push
add
insl
ret
xbegin
jae
add
mov
in
out
stc
cmp
pop
or
add
insb
pop
or
mov
addr16
int
and
add
add
sbb
clc
in
rcrb
fwait
addr16
mov
jg
mov
clc
imul
cmp
clc
adc
or
clc
dec
loopne
loope
cmp
push
push
add
and
add
cmc
js
xor
add
cmc
jnp
clc
pop
out
jp,pn
adc
test
inc
add
dec
push
clc
fistps
test
outsb
jns
imul
xor
add
and
add
sub
clc
push
add
xlat
stos
pop
in
call
and
add
clc
lahf
jae
add
sbb
push
sbb
add
add
into
insb
mov
add
lcall
add
fstl
add
or
sbb
clc
aas
daa
clc
arpl
add
push
add
add
add
cmpsb
clc
pop
sub
je
xor
add
mov
clc
ljmp
addr16
jae
add
sbb
mov
sub
add
add
mov
jge
lock
sbb
dec
sub
xor
add
add
add
add
cmp
add
pop
lods
cmp
outsl
sub
in
fwait
stc
sub
adc
mov
add
cmp
sbb
sbb
add
mov
out
lods
sbb
int3
add
add
clc
mov
roll
mov
loopne
add
add
clc
repnz
and
inc
clc
stos
xchg
sbb
popa
add
negb
clc
out
repz
add
test
push
add
ret
sti
push
rcr
out
inc
add
xbegin
clc
pop
jne
out
pop
jge
push
into
sub
jbe
add
rolb
add
add
dec
std
xchg
lea
add
clc
mov
sar
clc
or
or
mov
jmp
add
mov
xlat
fs
mov
add
mov
inc
clc
repnz
adc
mov
mov
add
stos
call
clc
mov
add
push
add
jmp
or
jecxz
stc
jb
add
add
push
clc
roll
clc
jo
add
clc
inc
clc
add
add
xbegin
add
jecxz
fcmovb
clc
fldl
add
sbb
pop
dec
jp
lcall
sbb
clc
in
popa
add
push
add
cli
push
add
jle
or
sub
clc
inc
clc
and
add
clc
add
clc
popa
add
call
xor
insb
sub
test
add
ja
inc
clc
pop
clc
stc
aad
mov
mov
inc
add
sub
flds
add
pop
aam
dec
das
mov
data16
nop
jne
ss
cmp
fs
js
clc
jle
jp
std
mov
scas
cli
stos
mov
push
add
or
outsl
or
fsts
add
push
pusha
add
pop
roll
and
add
sbb
inc
clc
inc
clc
pop
xabort
clc
sbb
clc
cmp
push
pop
test
clc
inc
add
stc
jae
add
dec
xor
add
adc
clc
es
fisttps
sahf
data16
cmp
cmp
dec
ss
out
nop
inc
clc
fidivs
test
mov
jmp
add
nop
push
adc
add
add
outsl
stc
cli
bound
add
sbb
sar
sbb
and
add
cmp
mov
add
out
xbegin
xor
add
clc
or
jge
add
sub
mov
mov
mov
jl
clc
mov
clc
push
add
sub
dec
xchg
xchg
cmc
fistps
pusha
add
dec
xor
add
add
mov
clc
clc
lea
push
clc
push
push
aas
dec
cmp
stc
xor
add
adc
add
dec
xchg
scas
ficompl
xbegin
scas
mov
loopne
clc
lret
push
and
add
add
clc
in
cmp
lcall
aaa
decl
pop
xchg
js
fisubs
inc
add
and
add
add
clc
cmp
or
clc
mov
faddl
clc
popf
and
add
clc
mov
cltd
out
or
add
add
jecxz
push
dec
sbb
clc
fldt
sub
jge
pop
jge
scas
inc
clc
enter
pop
ja
clc
mov
xor
add
add
add
clc
mov
hlt
inc
clc
testb
add
leave
inc
clc
mov
lcall
clc
std
rorb
clc
jg
xor
add
clc
sbb
add
sbb
cmp
clc
call
jg
js
popa
add
rcr
cmp
add
insb
pop
fdivs
add
sub
xchg
mov
mov
inc
add
cmp
add
inc
clc
or
loope
mov
in
xchg
push
pop
sbb
jecxz
popf
jg
mov
add
add
fstpt
clc
aaa
jnp
add
xlat
mov
jno
add
clc
cmp
add
in
sub
xor
add
dec
fwait
loopne
fistpll
test
into
pushl
clc
jge
clc
lahf
xor
add
add
enter
xabort
add
enter
add
mov
flds
add
shll
imul
clc
popf
idivl
rclb
sub
hlt
pop
clc
jns
mov
lret
inc
add
xchg
push
sbb
clc
cld
inc
add
cmc
and
add
stc
adc
add
stos
inc
add
adc
add
add
clc
mov
add
add
clc
push
fwait
add
add
addr16
push
add
pusha
add
int
test
mov
in
inc
add
idivb
mov
ficompl
sti
dec
fstps
add
addr16
push
arpl
add
add
lret
fwait
adc
add
mov
clc
loop
stos
insb
pop
ljmp
icebp
xor
add
cmpsl
clc
cmp
lahf
shlb
clc
sbb
clc
ret
clc
fisttpl
mov
clc
push
lods
cmc
inc
clc
popf
xor
fsubrs
clc
in
jmp
clc
stos
mov
clc
sbb
movsl
clc
mov
add
leave
and
add
add
cmpsb
clc
inc
clc
fsubrl
inc
add
cli
jp
clc
add
add
xabort
fisttpll
cmp
inc
clc
repz
add
add
inc
clc
insl
arpl
add
test
add
add
add
clc
fwait
cltd
push
add
jnp
idivb
mov
mov
clc
ja
sub
in
dec
dec
xchg
mov
add
arpl
add
add
lods
sub
fisubrs
ret
clc
testb
int
add
popf
xchg
jecxz
aam
jbe
shlb
xor
popf
sarl
jne
mov
clc
inc
add
scas
push
pop
jbe
clc
loope
shrb
inc
add
inc
clc
xchg
cli
pop
dec
movsl
clc
adc
add
mov
clc
mov
inc
add
fsub
clc
jno
add
mov
ret
clc
cmp
sbb
clc
sar
clc
mov
add
add
push
clc
mov
add
sti
mov
jmp
sbb
jmp
mov
jge
and
add
clc
cmp
add
add
xlat
stos
sbb
leave
inc
clc
repz
movsl
clc
cmp
sarb
dec
inc
clc
test
mulb
add
mov
adc
add
and
add
seta
idivl
movsl
clc
mov
mov
fisttpl
add
sbb
clc
mov
cmp
add
cld
sbb
or
add
inc
add
clc
cmp
clc
bound
add
clc
jp
push
push
adc
xabort
aas
sahf
pop
dec
movsb
clc
inc
clc
cmp
mov
xor
add
clc
jge
mov
ret
clc
lcall
clc
stos
adc
add
clc
sbb
clc
cmp
clc
mov
clc
fcomps
loopne
aad
int
mov
pop
add
add
mov
push
add
cmp
add
popf
aaa
inc
add
mov
clc
cmp
xchg
lods
push
pop
clc
mov
call
xbegin
add
int
mov
or
mov
add
jo
add
aas
in
xchg
xor
add
sub
mov
add
pop
enter
xchg
sbb
scas
das
dec
cmpsb
clc
push
mov
and
add
and
add
jecxz
jbe
or
jg
sub
add
sub
xchg
out
stos
push
add
add
add
pop
clc
xchg
mov
add
mov
cmpsb
clc
push
add
jle
cmp
test
stos
aaa
or
imul
dec
xchg
and
dec
mov
sub
insb
int3
lods
out
and
push
add
pop
push
clc
in
mov
add
icebp
push
das
inc
add
xchg
adc
add
in
or
insl
cmp
add
enter
mov
add
add
clc
sbb
test
ds
mov
lahf
pop
dec
push
repnz
pusha
add
jo
add
add
fcomi
lods
cmp
clc
cmp
cmp
jl
ljmp
mov
add
or
add
test
push
xchg
dec
ds
add
pop
clc
adc
sbb
clc
jno
add
sub
clc
repnz
add
pop
clc
xor
mov
add
pop
into
sar
or
pop
inc
add
scas
mov
fs
cmpsb
clc
mov
clc
adc
fcoml
aad
pop
mov
clc
dec
cmp
add
xor
add
add
xbegin
add
cmp
push
stc
inc
clc
or
insl
cs
sub
clc
fimull
clc
in
fisubs
add
clc
mov
jnp
clc
gs
or
int
cmp
gs
bnd
add
in
hlt
sarl
sbb
add
inc
add
pop
shrl
mov
sub
lods
ds
add
faddp
clc
xor
clc
pop
leave
sub
clc
ret
sub
add
pop
sti
nop
jg
add
mov
dec
fsubp
clc
in
jne
data16
sar
roll
add
stos
rolb
add
test
ja
mov
add
imul
xor
add
clc
mov
dec
dec
mov
add
mov
jae
add
add
dec
and
add
or
clc
cmp
xchg
inc
clc
pop
cmp
cmpsl
clc
push
add
sub
push
cmp
jne
clc
daa
clc
or
push
jp
mov
mov
jle
pop
lcall
add
or
ja
clc
push
add
jge
clc
out
es
adc
add
sar
out
aas
popf
adc
add
inc
add
cmp
cmp
xchg
adc
add
inc
add
dec
jge
sub
leave
adc
add
add
lret
inc
add
mov
jo,pt
add
mov
dec
pop
push
add
in
xchg
mov
jnp
add
add
clc
xchg
icebp
daa
clc
jg
push
and
add
add
leave
cld
inc
clc
mov
clc
insb
pop
push
add
pusha
add
outsb
mov
clc
repz
clc
jnp
and
add
xchg
xchg
push
mov
add
and
add
cmp
jle
pop
jl
cmp
add
cld
scas
sub
in
movsb
clc
or
push
nop
out
push
pushf
xor
int
add
add
xor
add
clc
lods
adc
add
clc
mov
sub
sub
clc
mov
imul
clc
dec
shl
flds
ds
clc
xor
gs
cmp
clc
ret
clc
stc
cmp
scas
push
add
adc
add
add
mov
test
mov
sar
xchg
inc
clc
cmp
lret
aas
push
dec
repnz
jbe
add
popf
cmc
push
xor
add
mov
inc
clc
je
add
jbe
add
add
add
daa
clc
lret
loopne,pn
lods
js
in
call
fidivrs
fists
add
js
fcmovnb
clc
mov
dec
mov
jmp
add
icebp
imul
mov
clc
int
pop
daa
clc
adc
add
add
pop
push
clc
mov
scas
lret
mov
clc
sub
mov
add
add
ret
clc
cmp
xor
add
add
push
cmpsl
clc
xchg
rcr
or
movsl
clc
out
lock
fucomi
or
addr16
xchg
adc
add
add
push
xchg
aam
add
ficoms
cmp
mov
cli
sbb
fwait
xchg
popf
push
add
fildll
cmpsl
clc
into
mov
mov
out
jns
add
push
add
pop
aaa
or
clc
add
popf
push
ljmp
in
xor
hlt
pop
clc
and
add
xor
add
fisubs
mov
xchg
popf
sub
add
inc
add
jecxz
dec
xor
add
popa
add
xchg
loopne
adc
add
add
lret
jl
mov
add
push
mov
mov
jb
add
lods
es
cmp
clc
cmp
add
imul
add
or
clc
cmp
sbb
jp
and
iret
sub
add
sub
clc
fdivrl
inc
add
adc
add
clc
xor
add
sbb
sub
add
ret
clc
outsb
nop
pop
sub
clc
loop
sar
hlt
pop
jns
clc
int3
imul
xlat
inc
clc
lahf
jns
clc
inc
clc
or
nop
sar
addr16
es
jg
clc
adc
add
cmp
add
sub
sub
outsl
scas
and
pop
clc
es
das
or
clc
xchg
fisubl
inc
add
sub
clc
enter
test
in
lods
mov
lahf
pop
xchg
out
cli
fs
aam
lods
pusha
add
test
jp
or
add
sbb
adc
addr16
pop
aad
jnp,pn
clc
stos
js
popa
add
insb
out
xchg
adc
add
mov
add
cmpsl
clc
mov
clc
aaa
or
clc
xchg
iret
or
popa
add
and
add
jbe
clc
ret
clc
mov
or
mov
add
clc
lcall
clc
xchg
mov
mov
in
fsubr
cmp
clc
mov
imul
mov
clc
mov
xchg
shll
add
add
add
clc
pop
inc
add
aam
adc
ja
out
jbe
popf
test
inc
clc
or
popf
inc
add
out
adc
ffree
clc
bound
add
add
lock
clc
and
add
xor
add
mov
lea
clc
mov
add
je
xchg
xchg
xbegin
cwtl
decl
add
clc
mov
ret
add
pop
fstps
add
out
cmp
pusha
add
imul
sub
sub
mov
jmp
aad
inc
add
jnp
clc
fisttpll
xchg
cmp
add
cltd
sar
movsl
clc
fildll
testb
add
and
sbb
add
movsl
clc
or
add
and
movsb
clc
inc
clc
pop
mov
clc
add
add
add
mov
add
cmp
clc
cmp
movsl
clc
loope
pushf
call
add
add
push
clc
jbe
add
test
push
pop
cmp
add
cmp
imul
clc
fildll
clc
out
add
add
sbb
mov
jnp
push
add
add
add
mov
push
test
clc
es
mov
in
repz
add
xchg
mov
in
add
hlt
jge
clc
pop
out
push
add
test
adc
add
jg
pop
dec
jae
add
clc
ret
clc
icebp
fdivrs
clc
sub
cmp
add
add
lret
mov
add
sbb
mov
shlb
mov
or
sub
add
add
mov
clc
fistpll
mov
fcomps
insb
push
clc
bound
add
clc
test
aam
clc
sbb
jb
add
clc
push
sahf
dec
xor
lods
pop
sub
add
cmp
clc
sarb
jbe
clc
imul
adc
add
add
dec
imul
out
sar
push
mov
clc
dec
clc
lods
adc
add
add
out
clc
xor
add
ja
mov
aaa
iret
out
adc
add
jge
repz
clc
push
out
adc
add
orps
dec
mov
add
push
add
pop
sbb
bound
add
mov
add
xor
add
add
int3
leave
test
clc
int3
addr16
cmp
clc
aaa
fwait
jg
cmpsb
clc
mov
jnp
xchg
inc
clc
lods
push
adc
add
add
mov
push
cltd
ret
push
pop
mov
adc
add
clc
loope
sar
rol
clc
add
ret
mov
dec
jecxz
mov
add
mov
mov
add
add
sahf
sub
pop
and
add
mov
inc
clc
or
clc
xchg
jne
pop
pop
mov
clc
mov
pop
push
call
arpl
add
mov
cmp
clc
push
xchg
into
add
add
clc
lock
add
add
xchg
clc
dec
or
jbe
clc
stos
xor
pop
fnstenv
imul
je
add
lods
adc
out
insl
outsb
xlat
clc
xabort
test
pusha
add
mov
in
sub
dec
adc
add
outsl
push
add
movsl
clc
cli
leave
mov
pop
clc
or
cmp
arpl
add
cltd
stos
or
add
insl
push
xchg
push
sbb
pop
mov
outsl
js
popa
add
out
imul
push
ljmp
loop
repnz
ljmp
insl
repnz
daa
clc
add
add
add
aaa
clc
jbe
pop
std
jae
add
jmp
cmp
in
sub
adc
mov
sub
add
aam
sbb
cmpsb
clc
aaa
loopne
inc
clc
loope
inc
clc
push
add
xchg
cmp
inc
add
hlt
jecxz
test
add
mov
call
clc
mov
pop
and
pushf
inc
clc
xbegin
add
add
xor
inc
add
jne
clc
inc
add
mov
stc
cld
in
sbb
clc
cmpsl
clc
aam
cmpsl
clc
cwtl
jl
and
add
aam
clc
dec
inc
clc
cmovp
cs
add
outsl
call
mov
add
pushf
fs
mov
insb
xor
add
or
cmc
test
clc
pop
ds
fildl
add
xchg
pop
clc
movsl
clc
jecxz
pop
mov
test
push
xchg
jmp
clc
clc
cld
pushl
add
and
inc
add
arpl
add
clc
jae
add
clc
pop
sbb
sar
clc
sbb
mov
clc
mov
clc
dec
stc
and
add
jae
add
xlat
bound
add
loop
popa
add
dec
push
add
jb
add
clc
sbb
add
dec
inc
clc
push
clc
clc
daa
clc
sbb
clc
add
pop
flds
add
push
mov
clc
rcll
add
or
jl
pop
hlt
aam
add
add
dec
push
sbb
cltd
sub
lret
iret
jle
add
mov
add
inc
clc
nop
stos
or
sti
mov
sub
xchg
xor
add
inc
clc
lods
xchg
dec
mov
add
xor
add
out
mov
add
mov
add
sub
add
pop
ja
clc
sar
lcall
mov
add
add
cmp
mov
add
jp
adc
add
and
add
mov
das
test
add
cmp
sar
mov
or
clc
mov
dec
aam
mov
add
push
clc
mov
push
iret
scas
jno
add
ljmp
add
sub
add
add
jmp
scas
ret
clc
imul
clc
shll
mov
jecxz
xlat
sbb
mov
cltd
mov
inc
add
insl
mov
add
aaa
sub
add
dec
cmp
dec
mov
push
add
enter
add
jg
push
clc
enter
mov
cwtl
mov
test
and
add
add
pushf
mov
add
add
add
mov
cmp
clc
pop
cmp
add
clc
loop
push
mov
add
lahf
in
inc
add
sbb
clc
mov
cmp
push
ds
add
popa
add
sub
fwait
xor
cmp
pop
inc
clc
test
cmp
clc
addr16
das
dec
aam
clc
xchg
mov
add
cmp
cli
xor
jl
add
mov
jae,pt
add
mov
test
adc
xor
or
enter
test
xchg
cmp
fadd
clc
mov
dec
jne
pop
adc
jmp
clc
xchg
inc
add
push
repz
add
sti
push
add
xbegin
mov
clc
mov
add
add
add
ret
clc
call
clc
xor
add
clc
sbb
js
cltd
jle
mov
jle
data16
js
clc
icebp
int
clc
xlat
in
cmpsb
clc
xchg
imulb
jmp
cmp
clc
or
clc
je
icebp
cmp
gs
aas
js
cld
push
clc
mov
clc
adc
add
add
ja
xchg
jl
xbegin
xchg
dec
fwait
sahf
mov
add
pop
mov
out
loopne
lods
and
add
and
add
clc
cld
push
mov
clc
lods
dec
inc
clc
cmp
xchg
mov
add
aam
push
add
sbb
add
dec
mov
xor
add
mov
clc
sbb
test
stos
dec
sbb
clc
lock
add
outsb
mov
mov
loop
push
xabort
stc
sar
in
cmp
jmp
mov
add
in
inc
clc
push
insb
add
add
clc
xor
add
xor
add
xor
add
clc
lock
mov
inc
add
insb
or
in
cmp
cmp
mov
stos
sbb
lods
lea
mov
cmp
pop
pop
pop
inc
clc
mov
xor
inc
clc
push
sub
pop
outsl
jge
pop
or
add
je
clc
int3
push
clc
pop
mov
clc
jg
jmp
hlt
ret
mov
add
nop
cltd
add
mov
out
sahf
ja
or
mov
in
mov
aas
test
enter
std
stos
dec
sbb
push
push
hlt
loope
xchg
cmp
and
add
add
in
sub
clc
loope
fsubr
dec
push
nop
add
add
jle
lret
roll
in
mov
add
clc
fdivs
add
dec
lret
loop
mov
add
push
push
jmp
mov
es
fwait
mov
cwtl
ret
clc
adc
clc
pushf
mov
outsl
mov
fs
cwtl
nop
test
add
clc
add
add
clc
test
sar
pop
nop
pop
je
mov
cwtl
mov
and
add
or
add
clc
fs
pusha
add
cmp
inc
add
cmp
cmpsl
clc
imull
lret
pop
daa
clc
es
push
push
pushf
sahf
call
int3
cmp
add
and
add
mov
in
xchg
decb
mov
mov
clc
ret
clc
mov
clc
cld
test
pop
jo
add
pop
clc
vandnps
inc
add
ss
dec
lret
shll
clc
js
mov
in
out
sti
cmp
jns
in
mov
add
data16
js
mov
clc
mov
clc
pushf
xor
add
clc
adc
add
push
add
icebp
mov
cmc
pushf
ljmp
add
add
xor
add
add
add
jmp
add
ret
clc
mov
movsl
clc
sub
add
sar
push
lock
in
adc
add
clc
mov
fsubrs
mov
and
sub
add
add
jno
add
clc
dec
or
add
je
push
add
mov
sbb
stc
or
jno
add
add
mov
add
arpl
add
repnz
add
cmp
bnd
clc
mov
or
aam
cltd
movsb
clc
movsb
clc
and
add
xlat
stos
mov
outsl
test
arpl
add
add
lods
xor
add
add
add
cld
xchg
or
jbe
repz
add
clc
test
mov
add
rolb
add
or
and
add
mov
aad
clc
stos
aas
inc
add
push
inc
add
xchg
ret
clc
cmpsl
clc
dec
pop
add
aad
clc
sbb
clc
xor
iret
mov
add
std
scas
push
add
fld
clc
outsl
fadd
clc
or
push
cwtl
div
out
cmp
insb
or
clc
xor
add
and
add
pushf
gs
jmp
fstpt
add
mov
add
mov
data16
cmp
add
lock
add
add
decb
or
xchg
pusha
add
mov
inc
add
push
movsl
clc
xor
imul
inc
add
repz
add
aam
clc
test
cmp
clc
lret
repz
add
outsl
push
ljmp
clc
fs
stos
pop
or
and
add
clc
fidivrl
dec
cwtl
cmp
mov
mov
aas
push
negb
in
xor
add
sbb
inc
clc
iret
icebp
mov
out
dec
pmuludq
push
push
stc
lret
sar
cmpsb
clc
clc
clc
xor
add
push
lods
shrb
mov
clc
lret
inc
add
jne
xbegin
or
sar
add
outsb
clc
and
add
clc
pop
arpl
add
or
clc
xchg
sbb
inc
clc
xor
add
mov
stc
xor
add
add
ds
add
adc
add
add
add
clc
stos
mov
jle
in
aam
sbb
aaa
dec
dec
out
negb
jae
add
lods
cmp
add
stc
xchg
scas
dec
clc
aaa
addr16
test
aad
add
das
scas
out
divb
add
es
sub
add
clc
lahf
jb
add
outsb
xchg
cltd
jg
clc
mov
lcall
ret
fadds
sub
add
js
xchg
ja
fwait
xor
add
std
xor
pop
clc
sbb
sbb
loop
push
xchg
popa
add
xor
add
add
sar
fistpll
mov
clc
sarb
cmp
xchg
cmp
cmp
add
add
add
pop
jnp
cmc
movsb
clc
std
aad
add
cwtl
popf
lods
jns
cmp
cmp
lret
or
sbb
xabort
add
add
add
outsl
jmp
and
add
or
fsubp
clc
push
loopne
or
add
enter
xor
add
cmp
in
ret
push
clc
cmp
dec
mov
sbb
add
inc
clc
mov
dec
inc
clc
cli
pusha
add
test
fs
xor
xchg
sar
cmp
add
sbb
sub
lcall
xor
add
cwtl
lea
sar
movsb
clc
or
add
dec
fistl
add
rcrl
aam
sar
fldenv
add
sar
add
hlt
insl
pop
stos
int
in
jge,pt
clc
ja
mov
clc
cmpsl
clc
or
clc
lret
mov
mov
addr16
add
add
rcll
gs
and
add
push
rorl
inc
add
push
dec
scas
popa
add
sar
lret
pop
cmp
sar
sub
test
leave
sar
test
sbb
testb
ja
clc
aas
int
dec
pop
inc
clc
aam
mov
repz
add
add
lods
mov
mov
add
dec
xor
add
add
push
pop
lret
jp
and
and
add
clc
aad
in
sub
and
add
mov
push
pop
push
clc
and
add
cmp
pop
in
sti
and
add
add
xor
add
push
add
and
add
push
js
clc
out
ss
sub
add
push
popl
mov
rcll
add
in
mov
lret
cmp
cmp
inc
add
and
push
push
add
sahf
dec
sbb
xchg
pop
lods
push
mov
add
clc
ficoml
mov
jecxz
outsl
add
add
add
test
ja
or
fisttpl
mov
jg
add
sub
jo
add
popf
mov
cmpsb
clc
aas
mov
clc
xbegin
test
je
xchg
cvtps2pi
dec
cwtl
mov
sbb
xchg
sbb
push
mov
add
xchg
push
clc
data16
pop
int
pop
out
adc
add
add
clc
inc
clc
push
push
dec
inc
add
pop
pop
mov
push
clc
mov
clc
dec
jle
mov
and
pop
clc
mov
stos
ljmp
ds
mov
add
imul
mov
pop
and
add
add
jae
add
add
and
adc
add
fisubs
add
into
sub
add
pop
mov
adc
add
clc
lcall
add
add
xchg
xchg
fstpt
inc
clc
lret
add
clc
pop
clc
mov
xor
add
clc
dec
xor
add
clc
inc
clc
mov
add
pavgw
imul
add
hlt
loop
movsb
clc
push
jnp
cmp
pop
aas
and
insb
pcmpgtd
dec
lret
clc
ss
iret
js
xbegin
inc
clc
jnp
pop
cmp
add
dec
std
xchg
stos
xchg
inc
add
enter
add
std
scas
mov
sarl
mov
clc
mov
jge
clc
cmp
das
jmp
xchg
push
add
xchg
jge
cwtl
pushf
push
clc
loopne
mov
clc
sbb
into
in
adc
add
add
pop
aad
pop
mov
daa
clc
xchg
mov
sub
ss
jg
xor
add
btc
clc
dec
mov
add
clc
mov
mov
clc
ret
clc
movsl
clc
inc
add
push
test
clc
pop
test
sbb
xlat
stos
bound
add
movsl
clc
sti
stos
test
das
in
mov
shlb
add
add
movsb
clc
xchg
lods
ljmp
stos
cmp
add
inc
add
push
add
sarb
add
aas
popa
add
pop
cmpsl
clc
jno
add
clc
leave
mov
add
lahf
push
jno
add
pop
jmp
add
xchg
and
add
xbegin
lea
inc
add
lods
push
mov
dec
push
add
add
jg
add
inc
add
sti
and
daa
clc
mov
add
js
add
fbstp
add
xchg
std
or
cmpsl
clc
jb
add
xchg
pop
push
dec
test
push
add
dec
int3
sti
sar
push
test
repnz
add
add
mov
clc
pop
adc
add
cmp
adc
add
xchg
fs
ja
jb
add
in
hlt
in
sub
xchg
add
add
scas
push
clc
pop
push
add
inc
clc
or
clc
pop
cmp
pop
cmp
clc
ror
push
clc
lahf
sub
enter
add
movsb
clc
cmp
add
in
mov
clc
lret
push
add
push
add
pop
inc
add
cmpsb
clc
adc
add
add
aad
hlt
xor
add
clc
sub
add
cmp
add
add
nop
add
add
clc
or
pop
push
pop
iret
push
add
xchg
pop
dec
aaa
push
sbb
mov
icebp
add
and
add
pop
mov
fisubrl
and
add
xor
add
clc
sbb
add
mov
clc
cmp
ja
rorb
scas
mov
scas
rorb
loop
fnsave
add
cmp
clc
insb
xchg
fs
adc
clc
ret
clc
scas
test
lcall
sahf
int3
jbe
clc
jl
vunpckhps
jl
lods
xor
add
add
clc
adc
add
clc
test
outsl
sub
in
jo
add
mov
add
fisubrl
shl
loopne
pop
movsb
clc
clc
data16
aam
fmuls
out
mov
jne
add
aad
clc
cld
mov
jne
push
ds
je
sar
clc
mov
roll
nop
sbb
clc
mov
test
jb
add
mov
cmp
lea
clc
addr16
push
add
loop
call
clc
sub
sub
add
add
ja
add
cltd
cltd
and
add
dec
into
pop
mov
pop
cmp
stos
inc
add
test
clc
mov
clc
xchg
jl
in
jmp
sub
dec
adc
add
add
iret
add
add
enter
or
lods
sub
lret
xchg
push
arpl
add
cmpsb
clc
fldt
clc
jmp
or
clc
or
stos
imul
int3
push
jle
jae
add
in
pusha
add
xchg
xor
add
loope
dec
mov
xchg
mov
push
add
xabort
jns
or
clc
sbb
mov
test
push
in
fisubl
add
ja
outsl
scas
int
clc
jp
vmovups
add
imul
fnstcw
addr16
add
add
add
icebp
inc
add
cmp
jl
push
cmc
pushl
aaa
jnp
shll
add
or
mov
jl
clc
movsl
clc
xbegin
icebp
xor
add
cmpsb
clc
nop
adc
clc
test
xbegin
jmp
jl
xchg
ss
lods
inc
clc
push
add
pop
mov
clc
int3
push
movsb
clc
pop
ja
clc
mov
test
xchg
sub
outsb
inc
clc
int3
push
add
stos
xchg
mov
fwait
dec
mov
lret
data16
sbb
cmp
add
push
or
and
add
out
cmc
dec
jbe
pop
je
clc
fs
aam
pop
clc
push
clc
data16
stos
mov
add
call
rorl
add
mov
aas
addr16
xchg
loop
pusha
add
int
add
sahf
push
add
call
cwtl
stos
leave
dec
jle
sbb
aam
add
xbegin
stos
das
divb
add
clc
hlt
lea
clc
pusha
add
filds
add
jns
clc
sbb
cmp
out
pop
or
add
inc
add
rep
bound
add
pop
mov
clc
mov
add
add
clc
mov
rol
clc
dec
rcl
sbb
scas
and
clc
ljmp
pushf
adc
add
in
movsb
clc
ds
ja
into
adc
add
add
push
add
mov
push
add
sahf
gs
int
ret
clc
inc
clc
out
or
inc
clc
sub
dec
pushl
clc
mov
jp
mov
hlt
pop
add
adc
out
std
jecxz
add
add
clc
pop
or
add
pusha
add
jo
add
int3
in
sbb
add
jge
popf
inc
add
mov
add
add
xchg
lcall
int
add
jge
add
add
add
test
cmp
sub
fistpl
inc
add
push
add
add
xor
add
jb
add
imul
fildll
clc
and
ret
clc
lret
sub
loopne
call
add
in
xor
add
add
and
sbb
clc
mov
clc
leave
mov
add
clc
mov
xchg
pop
fsubs
or
rcll
add
cld
mov
addr16
or
jge
cmp
add
arpl
add
test
cmp
popa
add
xchg
add
add
mov
clc
int3
das
imul
clc
scas
or
lret
clc
icebp
inc
add
mov
lock
aaa
push
adc
add
ss
fisubl
inc
clc
mov
std
lods
pop
loop,pn
sbb
mov
aad
add
and
ret
int3
scas
add
add
add
mov
imul
bound
add
xchg
scas
aam
or
scas
call
scas
xchg
xchg
sub
add
cwtl
dec
fidivrs
push
pop
outsl
lods
mov
clc
jecxz
fadd
clc
insl
aaa
sbb
movsb
clc
sbb
enter
clc
or
push
outsl
test
inc
add
stos
jl
clc
jp
add
mov
mov
clc
stos
add
sub
cwtl
mov
add
inc
add
inc
clc
xor
clc
xchg
pusha
add
faddp
clc
jnp
clc
ds
lahf
mov
clc
inc
clc
add
add
xor
add
push
lret
sbb
clc
mov
and
add
pop
cld
xchg
sub
aam
fmuls
add
pop
sbb
clc
or
movsl
clc
jle
add
fdivs
pop
clc
xor
add
bound
add
pop
xabort
mov
sub
add
mov
lock
jb
add
clc
add
add
cmpsb
clc
std
mov
sbb
xor
add
int
lret
mov
jmp
dec
int3
xabort
add
or
add
fistl
ja
inc
add
adc
add
adc
add
or
fsubs
add
pop
imull
mov
clc
mov
xbegin
inc
add
sbb
add
add
clc
xchg
jae
add
pop
clc
ret
clc
adc
add
mov
clc
stos
pop
and
add
add
mov
and
add
mov
jno
add
add
sbb
cli
push
add
lock
mov
add
stc
sar
jne
clc
add
add
add
clc
pop
in
sub
jl
lcall
clc
repnz
jle
mov
xor
add
add
in
pop
arpl
add
clc
stc
fidivrs
or
inc
add
jo
add
add
xchg
xor
rorb
loope
shll
fsubl
mov
add
ljmp
sahf
xchg
jp
add
xchg
adc
add
sbb
jne
mov
xchg
lret
sub
test
fbld
dec
sub
clc
lock
add
in
adc
add
in
popf
push
clc
add
dec
fwait
test
jl
daa
clc
inc
add
gs
inc
clc
xor
add
clc
ja
dec
inc
clc
outsl
daa
clc
sub
ret
ss
clc
inc
clc
fwait
clc
test
iret
jb
add
ret
clc
cmp
stos
pushf
jmp
fstps
out
and
cwtl
in
sbb
movsb
clc
push
mov
pop
loopne
jb
add
fldl
clc
push
imul
in
mov
mov
mov
inc
clc
mov
clc
jb
add
inc
add
movsb
clc
push
add
mov
add
lcall
mov
inc
clc
jnp
das
shlb
and
mov
mov
clc
sbb
ret
loopne
sub
add
mov
cld
pop
lahf
xor
add
push
push
sar
xor
in
rolb
sbb
clc
fs
test
pop
dec
dec
movsb
clc
xchg
xchg
lret
ss
clc
cmp
clc
scas
cmpsb
clc
mov
jnp
clc
cwtl
std
outsb
sbb
add
cmp
add
bound
add
add
cmp
loop
dec
mov
add
sar
mov
add
add
dec
lea
ja
mov
lahf
dec
sbb
jmp
dec
mov
imul
xchg
xchg
ds
cmp
insl
cmc
out
test
and
add
lods
imul
iret
jno
add
jae
add
clc
mov
sbb
insl
clc
mov
stos
movsb
clc
pop
aas
sar
jmp
xor
and
add
mov
sar
inc
clc
mov
jb
add
xor
add
ds
pop
clc
mov
add
loop
push
add
test
sar
repz
xabort
add
jne
repnz
add
sbb
add
rcr
add
add
clc
mov
add
dec
or
add
clc
mov
add
aaa
addr16
ljmp
outsl
addr16
dec
push
add
jle
xor
add
outsl
dec
lods
bound
add
xchg
mov
add
jae
add
add
rcrl
add
pop
mov
clc
js
clc
ja
out
adc
add
clc
popf
in
pop
push
clc
ficoms
clc
sar
bound
add
mov
add
push
push
jae
add
push
add
sub
add
dec
pop
fcmovb
clc
and
add
pop
xor
insl
jbe
add
ja
add
je
adc
add
loope
ja
pop
pop
or
push
std
out
mov
clc
mov
mov
loope
inc
add
add
add
add
add
pop
lods
cltd
aad
add
add
test
jnp
aaa
mov
xlat
jnp
nop
fs
jmp
test
cmpsb
clc
into
je
outsb
cmc
mov
clc
daa
clc
arpl
add
aam
and
pop
shrb
rclb
lods
fbstp
clc
fimull
or
clc
sub
lods
inc
add
cmp
or
out
push
xor
add
add
dec
xchg
mov
sahf
clc
vmovups
add
add
outsl
out
pop
pop
clc
jmp
add
lret
clc
mov
xchg
movsl
clc
sar
clc
cwtl
jge
or
add
mov
add
hlt
insl
bound
add
clc
nop
mov
out
fwait
scas
sar
outsb
cld
mov
cld
mulb
add
clc
out
jns
clc
addr16
mov
xbegin
or
xor
pop
daa
clc
cmp
test
sub
loop
out
mov
movsl
clc
movsb
clc
adc
add
jmp
jmp
mov
mov
bound
add
into
and
add
lcall
clc
mov
clc
mov
sub
xchg
mov
push
cmp
clc
nop
cmpsb
clc
mov
mov
add
rol
clc
push
cmp
sub
sub
cmp
clc
sbb
mov
add
dec
add
add
xor
add
mov
cmp
xchg
cwtl
cmp
scas
lods
jge
cmp
sahf
xchg
cmp
sub
mov
mov
sbb
call
pop
inc
clc
jmp
into
xor
add
clc
mov
clc
ds
stc
call
int3
cmp
popf
rorl
sbb
clc
sub
outsb
ja
cmp
add
add
cmpsl
clc
inc
clc
call
clc
lods
xchg
dec
inc
clc
test
hlt
into
adc
clc
mov
and
sar
cli
inc
clc
aam
cmp
or
fists
aas
mov
fistpl
imul
xor
add
add
add
sbb
add
clc
push
lods
sub
clc
shlb
clc
and
add
clc
loope
sub
pushf
xor
add
push
insl
hlt
test
fimull
bnd
fiadds
add
clc
int3
mov
jecxz
pop
or
add
add
push
cwtl
addr16
clc
jp
loope
push
clc
mov
clc
cmp
or
mov
lret
daa
clc
cli
test
mov
jno
add
fwait
mov
sub
xor
add
adc
inc
add
push
add
add
add
add
inc
add
inc
add
cwtl
push
xchg
ss
arpl
add
add
das
mov
add
or
lcall
clc
pusha
add
push
clc
cmc
ret
ss
pop
pop
jge
inc
clc
lcall
test
sub
add
ja
or
or
clc
push
mov
bound
add
clc
aad
clc
scas
stos
ret
clc
inc
clc
inc
clc
cmp
xor
add
fadds
add
imul
clc
cmp
xbegin
lods
fmull
jb
add
clc
sbb
add
nop
or
inc
add
repnz
clc
dec
mov
notb
add
clc
test
mov
clc
xchg
push
mov
hlt
ss
in
cli
imul
add
or
scas
cmp
jg
add
in
xchg
jns
jmp
in
sub
clc
inc
clc
scas
popl
add
cmp
add
jp
inc
clc
rorb
cmp
pop
cs
loop
push
push
mov
xchg
add
add
add
add
lods
pop
clc
cltd
fsubrs
or
int3
mov
in
jb
add
popa
add
in
cmc
mov
clc
mov
aad
clc
cmp
mov
loope
or
sti
out
stos
lods
mov
jnp
pop
shll
add
test
testb
dec
loope
xor
clc
jle
arpl
add
add
lock
cmp
add
aad
clc
das
mov
adc
adc
cmp
clc
xchg
ss
add
mov
push
jmp
add
jbe
clc
xchg
aas
cld
in
mov
ja
adc
add
or
clc
data16
push
mov
sbb
ja
jecxz
mov
dec
aad
add
mov
clc
in
sbb
add
cld
xchg
mov
in
jb
add
add
mov
scas
shlb
adc
add
std
and
and
dec
adc
add
clc
in
in
xchg
cmp
fwait
inc
clc
sbb
scas
push
sub
sbb
clc
aaa
imul
add
push
cli
cmp
mov
clc
push
add
ss
cmp
and
add
xchg
pop
clc
popf
je
jle
or
insl
mov
push
push
add
repnz
add
in
xor
add
add
fldl
push
cmp
add
out
aas
inc
add
push
add
lock
add
adc
mov
add
sarl
pop
xor
clc
test
cld
xchg
push
add
adc
add
enter
sbb
out
jmp
jle
clc
mov
inc
add
and
add
std
stc
clc
jle
xchg
rcr
mov
repnz
add
bound
add
clc
cmpsb
clc
jl
add
insl
push
pop
jns
add
push
mov
outsb
leave
cmp
cmc
xchg
addr16
add
add
clc
stos
inc
add
sub
in
xbegin
js
clc
fstl
add
mov
add
fsubrp
push
clc
incl
add
xchg
cmp
pushf
pop
clc
out
jnp
clc
mov
push
add
das
ds
fldcw
push
add
push
xor
add
push
add
cli
clc
sub
add
xor
add
push
fildl
in
cli
inc
add
jo
add
lea
jge
mov
divb
aas
mov
xchg
outsb
inc
clc
sbb
add
sbb
pop
addr16
and
add
sbb
sti
ja
add
ss
ljmp
add
bound
add
mov
dec
imull
add
fnstenv
add
mov
xchg
and
mov
cmp
add
adc
add
add
cltd
pop
push
add
mov
clc
aad
idivb
clc
and
inc
add
xor
add
in
mov
clc
lock
jmp
push
add
add
clc
shll
add
mov
push
sbb
popa
add
and
add
or
ss
mov
add
roll
and
add
clc
push
stos
insl
mov
sub
mov
cmp
lret
dec
jns
cmp
mov
sahf
arpl
add
pop
jb
add
clc
mov
pop
mov
add
sub
aad
add
and
add
sahf
add
add
ror
aaa
inc
clc
dec
cmp
int
stos
pusha
add
repnz
cwtl
cmp
inc
add
icebp
std
fs
jmp
es
ljmp
add
pop
pusha
add
cli
mov
clc
xchg
jno
add
push
xchg
out
pop
shrb
pop
and
sub
xchg
jbe
ret
push
add
sar
in
push
add
clc
mov
add
adc
cmp
jecxz
xchg
xor
fimuls
rcl
xchg
movsl
clc
adc
add
add
nop
cmc
xlat
in
arpl
add
add
xbegin
js
clc
mov
cmp
cmp
mov
xchg
lret
dec
xchg
mov
mov
xchg
cmp
add
mov
leave
jbe
pop
adc
and
add
add
rcll
aad
add
xor
jmp
clc
arpl
add
add
add
add
ja
add
add
clc
sbb
pusha
add
int
add
add
mov
add
icebp
cmpsb
clc
pop
rcll
add
xbegin
sbb
and
lods
movsl
clc
out
ds
adc
xor
add
pusha
add
mov
sarl
xchg
lahf
pop
push
addr16
cmp
mov
out
or
mov
cmp
clc
aas
sahf
xchg
adc
add
clc
push
push
das
rcr
mov
aam
clc
aaa
jle
sub
jg
lahf
dec
push
ret
clc
clc
inc
add
inc
clc
sbb
clc
add
add
add
add
incl
add
mov
pop
cli
xchg
outsb
cmp
ljmp
and
add
add
lods
outsb
inc
add
push
clc
stc
xbegin
inc
add
push
js
dec
jne
adc
add
inc
clc
inc
clc
faddl
ret
clc
add
add
jle
sub
jmp
mov
clc
xor
add
clc
mov
fcompl
xchg
push
pop
leave
mov
jle
hlt
push
inc
add
sahf
fs
sbb
add
pop
scas
dec
mov
xbegin
clc
lahf
add
add
add
lcall
add
fcmovb
clc
xchg
mov
mov
clc
outsb
outsb
lcall
push
xor
cmp
add
adc
pop
clc
dec
push
add
dec
lods
call
clc
ja
sbb
xchg
lods
mov
scas
dec
add
add
cwtl
xchg
jns
add
adc
add
je
add
and
add
push
inc
add
lret
ret
pop
add
mov
inc
add
or
clc
pop
insb
lret
inc
add
sar
dec
xchg
sub
cmp
hlt
xchg
jge
icebp
fistpl
mov
cs
gs
aas
test
loop
xchg
popa
add
adc
add
cltd
xbegin
or
clc
push
and
add
movsl
clc
ljmp
or
daa
clc
inc
clc
xchg
sbb
add
repz
add
xchg
and
add
clc
fistps
fsubs
lods
mov
clc
repnz
enter
clc
psubw
add
enter
add
jbe
clc
fidivrs
mov
sub
add
push
nop
push
pop
mov
addr16
cmp
addr16
jl
xor
add
clc
push
pop
xor
add
out
je
inc
add
ds
clc
in
pushf
dec
cli
pop
rcrb
xor
add
mov
lods
mov
int3
or
push
add
jmp
or
push
add
rorl
cmc
mov
clc
fwait
daa
clc
cmp
mov
stc
cmpsb
clc
test
cmp
add
jae
add
dec
cmp
add
stos
xchg
out
cmpsb
clc
cwtl
xlat
movsb
clc
rolb
cmp
ja
or
jae
add
pop
fdivr
nop
dec
repnz
jno
add
out
push
add
sub
push
add
mov
add
lcall
insb
add
cwtl
nop
sbb
push
add
and
add
adc
xchg
pop
or
jecxz
xchg
mov
add
shlb
fisubrs
clc
sbb
cmp
clc
inc
clc
jle
das
cld
popa
add
dec
roll
add
pusha
add
dec
das
out
jbe
add
cs
jno
add
lret
add
add
dec
adc
add
clc
xchg
jne
shlb
add
add
lahf
ds
adc
add
out
mov
add
jecxz
cmp
add
clc
sbb
push
imul
test
cmp
add
push
mov
pop
xchg
sbb
xbegin
ja
clc
cmp
add
add
xchg
data16
inc
clc
push
jp
insb
inc
add
xor
add
pop
mov
xchg
ret
cmp
clc
cmp
mov
and
mov
aaa
or
or
gs
and
add
leave
dec
jae
add
mov
pop
movsl
clc
inc
add
inc
add
leave
enter
mov
xchg
and
mov
inc
add
pusha
add
mov
push
clc
push
je
clc
pop
or
jp
repz
add
and
add
jp
clc
sbb
add
clc
mov
clc
adc
jno
add
add
pop
lods
push
cmp
clc
scas
call
sub
sub
clc
jge
ret
clc
dec
sbb
or
insl
stc
mov
gs
xchg
ljmp
add
push
clc
cs
pop
and
add
jne
xor
xor
add
cmp
stos
lret
mov
clc
arpl
add
clc
inc
add
arpl
add
ja
mov
data16
fbstp
adc
inc
clc
xor
or
inc
clc
inc
add
cmc
aad
flds
add
pushf
xor
dec
mov
stos
popf
js
clc
stos
cmp
mov
add
sub
clc
cmp
dec
call
aas
and
add
sahf
popa
add
mov
movhps
add
add
mov
cld
mov
clc
inc
clc
lahf
cli
mov
clc
clc
fs
scas
push
clc
ficomps
sbb
adc
add
xor
add
push
aaa
loopne
sahf
mov
popf
dec
test
add
inc
add
mov
add
mov
fsubrp
add
cmp
add
lock
jb
add
jo
add
add
cmp
pop
cli
js
sub
xor
add
add
je
clc
cltd
je
sar
hlt
lea
mov
add
mov
jg
or
add
sbb
clc
and
std
and
mov
jmp
loop
cmp
clc
mov
add
and
cmp
clc
cmp
push
add
cs
ljmp
add
jecxz
xor
add
repnz
clc
lahf
lods
loopne
add
add
clc
add
inc
add
dec
and
add
jnp
mov
mov
sbb
pop
xor
add
jno
add
mov
mov
repnz
mov
std
or
sub
clc
fadd
clc
xchg
fldl2e
xchg
pop
push
push
inc
add
jg
sub
clc
aaa
mov
add
stc
cmp
std
nop
lods
jb
add
sbb
xchg
cmp
cmp
clc
or
add
xchg
mov
add
clc
jae
add
mov
cmpsb
clc
xor
add
add
clc
jle
push
add
fcmovb
clc
fadds
add
mov
xbegin
stc
test
mov
mov
cmpsb
clc
xor
add
pusha
add
and
add
clc
aaa
inc
add
cld
xchg
adc
add
mov
push
cwtl
xor
add
dec
loop
mov
lahf
sbb
loopne
cmp
rclb
add
dec
xor
add
sti
int
clc
nop
dec
push
mov
test
repz
add
sarl
outsl
pop
jl
add
sub
clc
arpl
add
cltd
mov
sbb
add
arpl
add
mov
mov
cli
and
add
pop
clc
dec
das
cmp
or
clc
mov
clc
xchg
add
add
push
cmp
add
es
push
add
inc
clc
and
add
rcl
mov
pop
outsb
jae
add
sti
dec
push
fadd
clc
sbb
inc
clc
dec
pushf
sbb
clc
and
xor
add
mov
clc
dec
or
clc
mov
inc
clc
stc
sbb
cmp
adc
add
add
add
int3
pop
lods
pusha
add
notb
add
mov
clc
clc
cmp
add
add
in
add
jg
mov
add
cmp
aam
stos
cmp
add
int3
lea
push
add
inc
clc
push
pop
int
imulb
add
clc
sar
clc
lret
xchg
js
clc
or
ljmp
out
and
add
mov
xchg
jg
clc
sbb
and
sahf
lods
aad
clc
frstor
adc
add
add
mov
push
clc
aad
and
add
mull
add
fmuls
jg
add
add
fldl
push
add
xor
add
or
pop
lahf
ret
clc
ret
clc
xchg
je
out
pop
sbb
clc
jno
add
aad
sti
jg
clc
push
add
adc
js
or
mov
add
adc
add
xlat
cmp
xor
add
add
add
add
jecxz
loop
add
add
add
push
pop
pushf
xor
add
sti
sar
jp
jnp
clc
je
clc
dec
xor
add
aaa
jl
ffree
clc
push
add
jnp
or
popf
addr16
mov
or
cmp
and
add
jge
clc
jne
push
fmul
add
sbb
add
or
add
imul
js
fisttpl
jl
mov
test
adc
sub
jp
cmp
add
out
out
int3
jl
clc
cmp
mov
adc
add
clc
push
add
cs
pop
clc
ficompl
xabort
call
sbb
mov
es
adc
push
add
add
add
pop
imul
cmp
clc
loope
mov
xor
add
add
add
es
std
inc
add
stc
jge
clc
and
add
clc
ds
mov
sub
clc
sub
cmp
jl
clc
leave
outsl
rorb
jb
add
cmp
mov
sub
nop
and
add
in
fdivl
inc
clc
fwait
cld
das
mov
loope
and
add
clc
inc
clc
mov
dec
inc
clc
mov
clc
sahf
cmpsb
clc
ja
xchg
push
mov
clc
lret
mov
jne
adc
add
push
inc
clc
imul
xchg
cmp
add
mov
ret
clc
js
push
clc
jbe
int
add
add
pop
aaa
adc
daa
clc
mov
clc
add
add
or
add
repz
add
cld
lahf
ljmp
fldcw
jo
add
push
ds
add
mov
mov
push
sbb
into
cld
and
add
add
dec
or
push
sbb
add
sbb
clc
lcall
xor
add
daa
clc
outsl
jle
clc
inc
add
cmovb
add
fnstenv
add
es
in
inc
add
jmp
mov
cmc
in
mov
loop
pop
xchg
and
ljmp
iret
jl
xchg
test
add
shlb
add
add
jae
mov
xor
clc
xchg
xchg
ljmp
mov
add
clc
xor
add
stos
push
loop
and
add
sub
mov
loope
nop
inc
clc
imul
cmp
push
jno
add
add
test
sbb
pusha
add
mov
clc
fcmovb
clc
dec
hlt
loope
cmc
fnstenv
inc
clc
or
pop
fprem1
lock
sub
add
xbegin
clc
xor
inc
add
push
push
out
sub
add
nop
fs
mov
cld
cmp
es
test
shl
cmp
nop
add
add
lret
add
add
hlt
outsb
sbb
bound
add
sbb
adc
pop
xchg
loope
sbb
mov
mull
in
lock
cmp
fstpl
dec
jg
xchg
mov
add
stos
mov
cltd
aas
ret
clc
cwtl
insb
push
addr16
scas
jp
shrl
add
add
inc
clc
pop
dec
arpl
add
add
pop
mov
cld
mov
clc
dec
in
fistl
add
pop
mov
mov
aaa
pop
hlt
ret
clc
sub
out
push
imull
jle
xchg
cmp
adc
add
jp
dec
or
pop
testb
pop
sub
repz
aaa
jbe
push
cmp
mov
pop
and
add
push
add
and
add
sti
add
add
xor
add
addr16
das
aad
jns
inc
clc
sub
mulb
add
movsl
clc
mov
clc
inc
clc
sbb
add
add
mov
jbe
add
icebp
cmp
add
add
xor
fisubl
add
add
xchg
das
cltd
adc
sub
dec
inc
add
and
add
xabort
dec
insb
out
add
pop
sub
add
sbb
add
insb
xchg
arpl
add
jbe
inc
add
adc
add
mov
add
add
lcall
inc
clc
popa
add
loop
and
add
clc
inc
add
pop
in
dec
mov
add
cmp
ljmp
dec
pop
or
and
add
mov
jae
add
test
jbe
aam
and
add
in
pop
arpl
add
fwait
ret
clc
mov
or
clc
clc
pop
test
cmpsl
clc
sar
pop
shlb
pushf
loope
clc
and
add
fists
add
mov
add
jp
push
push
xchg
in
xlat
mov
clc
movsl
clc
pop
xchg
or
add
push
add
addr16
cltd
outsl
leave
mov
pop
mov
push
clc
mov
clc
lahf
xor
add
imul
fsubrl
int3
adc
add
xor
add
lock
fimull
or
jo
add
clc
fcoms
add
stos
jmp
clc
pop
andps
add
scas
push
add
test
es
lcall
cmp
mov
and
add
push
bnd
add
stos
int3
nop
xor
pause
and
add
lcall
ret
clc
insb
xor
add
out
mov
add
lret
clc
mov
jne
clc
xor
add
imul
jecxz
adc
add
clc
clc
push
lea
jbe
cltd
inc
clc
jmp
add
pusha
add
or
bound
add
add
flds
clc
adc
add
jge
in
out
push
icebp
in
push
ja
pusha
add
cli
adc
add
xabort
mov
add
filds
add
clc
fcoml
add
add
js
clc
sbb
add
clc
xchg
push
add
add
add
mov
clc
adc
add
mov
nop
push
add
push
test
clc
popa
add
mov
clc
add
add
cld
cmp
clc
inc
clc
dec
fildl
cmp
clc
dec
xabort
cs
jae
add
adc
jecxz
and
add
add
sub
flds
pop
lret
icebp
dec
int
add
mov
add
lea
and
add
clc
cmpsl
clc
hlt
icebp
dec
std
jle
xlat
jno
add
cwtl
add
add
pop
jnp
lret
movsl
clc
mov
add
push
add
das
push
add
sub
mov
outsb
cmp
lods
push
decl
add
and
add
add
xchg
sub
pushf
and
add
ds
push
and
add
and
add
mov
add
mov
add
sub
jnp
clc
xor
clc
xchg
xor
add
jg
movsb
clc
mov
bound
add
movsl
clc
pop
clc
xabort
sbb
add
pusha
add
aad
mov
scas
hlt
xabort
aas
push
dec
cmp
add
mov
mov
add
jno
add
cmp
add
mov
clc
pop
dec
movsl
clc
jge
add
sub
lods
inc
clc
adc
mov
cmp
add
clc
pushf
fimuls
mov
fs
push
mov
or
add
ret
out
in
mov
clc
ja
lock
cmc
test
ret
add
pop
clc
test
in
push
jo
add
jae
add
ss
mov
pop
dec
test
mov
cs
push
add
add
add
mov
or
add
ljmp
inc
clc
xchg
jnp
add
jge
push
add
in
mov
ljmp
scas
outsb
clc
or
xabort
and
add
mov
divb
sbb
clc
lahf
and
add
out
shlb
sub
mov
into
and
or
mov
lret
mov
clc
stc
xchg
ja
add
arpl
add
fs
daa
clc
cwtl
out
add
add
add
inc
clc
lods
scas
fwait
and
add
bound
add
add
clc
pushf
inc
add
cld
es
sti
lret
add
call
dec
popf
mov
clc
cli
xchg
adc
add
sar
clc
inc
clc
xor
add
in
jne
mov
push
mov
clc
aaa
cmp
clc
popf
cmp
in
xor
add
clc
cmp
mov
clc
push
imul
lret
je
fs
test
jno
add
clc
sti
je
add
ret
clc
in
fsubl
add
mov
cmp
ret
clc
clc
fs
sti
nop
add
add
mov
clc
jae
add
add
test
or
clc
stos
mov
clc
ficoml
pop
movsl
clc
lods
add
add
add
sti
cli
pop
js
outsb
xchg
push
add
jbe
ud0
sub
movsb
clc
decb
repz
add
add
clc
push
and
add
add
fcoml
clc
bound
add
xchg
adc
lods
sub
loopne
stc
cmp
clc
ds
and
add
push
add
add
add
out
add
add
call
lcall
pop
or
inc
add
jnp
and
add
sbb
stos
sar
pop
dec
jnp
mov
sbb
clc
mov
inc
clc
insl
add
add
js
add
xabort
add
push
cmp
fistps
mov
jge
or
insl
div
pop
sub
push
add
cmp
add
xor
add
and
push
das
cmp
insb
fdivrl
clc
adc
xchg
out
sti
lahf
stc
divb
xlat
loop
imulb
lods
popa
add
mov
clc
data16
popf
adc
mov
add
sub
cmpsb
clc
add
add
clc
and
add
in
fcomip
mov
daa
clc
fstl
add
loop
cld
inc
clc
jae
add
movsl
clc
push
add
xabort
xchg
pop
js
add
test
out
movsb
clc
sbb
sub
push
test
xor
add
pop
js
inc
clc
inc
add
jle
popf
scas
gs
outsl
jne
dec
cmpsl
clc
mov
clc
test
repz
jnp
ja
push
in
lret
cmp
clc
lcall
inc
clc
or
out
es
push
add
lea
add
lods
ret
clc
push
add
mov
nop
mov
clc
add
add
clc
sub
fdivs
outsl
push
mov
sub
clc
xchg
adc
cmp
clc
mov
cmp
clc
pop
cld
cld
fstpt
clc
cmp
mov
mov
mov
das
mov
lods
adc
add
sti
inc
clc
push
add
enter
add
push
xchg
push
add
js
push
add
fdivl
add
adc
add
sub
adc
add
sar
xchg
clc
sar
add
add
scas
xchg
aad
clc
inc
add
mov
add
dec
xabort
add
mov
stc
lcall
mov
clc
jle
add
negl
cmp
sbb
stos
pushf
mov
imulb
dec
xor
add
clc
jp
jecxz
lret
fs
mov
add
inc
clc
test
ss
sub
add
ds
aam
ret
or
fst
mov
push
xchg
or
dec
or
jae
add
xchg
mov
jecxz
dec
sbb
dec
xchg
fadds
pop
and
add
fldcw
popa
add
inc
add
add
add
icebp
ret
clc
outsb
jae
add
test
push
clc
test
repnz
lcall
xchg
incl
clc
adc
add
fiaddl
into
lret
cwtl
cmp
clc
sbb
rcrb
add
ljmp
add
mov
or
clc
add
add
or
clc
push
add
rolb
pop
clc
loop
or
rcrl
bound
add
adc
pop
pop
clc
sub
clc
es
sbb
push
pop
pushf
movlps
add
add
xor
add
push
pop
xor
add
or
mov
clc
pusha
add
repz
add
adc
add
add
add
daa
clc
arpl
add
add
gs
dec
cmc
push
add
int3
sub
out
testl
fwait
movsl
clc
es
lods
or
add
and
add
add
pop
and
add
add
add
jp
push
push
add
xor
add
pop
mov
cmc
pop
mov
add
dec
iret
pop
push
xor
add
sub
stos
sub
sbb
push
and
add
sub
clc
and
xabort
xor
add
push
pop
scas
jo
add
mov
sar
cld
mov
outsb
cs
and
add
cmp
dec
mov
push
call
mov
sbb
cmp
clc
dec
out
pop
jb
add
out
insb
cltd
shlb
add
cwtl
pop
loope
add
add
insb
inc
add
mov
sub
add
add
mov
es
fidivl
pusha
add
mov
clc
int
adc
add
lods
aas
mov
mov
aas
sarl
adc
add
sar
add
sub
clc
mov
xchg
mov
jae
add
clc
adc
movsl
clc
cmp
mov
add
xbegin
clc
fwait
lret
clc
movsl
clc
add
add
das
cwtl
dec
std
mov
aas
fcompl
xor
sbb
cmc
mov
loop
out
shll
clc
push
add
xchg
mov
clc
out
xor
add
test
gs
lret
pop
addr16
jae
add
or
clc
jb
add
add
mov
clc
mov
jp
clc
nop
hlt
arpl
add
xchg
push
inc
clc
jno
add
add
int3
inc
add
aam
jge
inc
clc
dec
and
add
jg
int3
jp
cmp
inc
clc
xor
cmp
xchg
push
sbb
int3
jle
clc
cmp
jbe
pusha
add
rolb
add
daa
clc
xchg
xlat
nop
xchg
or
clc
add
in
repnz
inc
clc
fwait
jne
add
sti
xchg
scas
cmp
add
sahf
icebp
mov
mov
test
xchg
addr16
in
lods
fwait
adc
add
inc
add
fildl
clc
lods
loopne
jns
clc
xchg
cmp
clc
inc
clc
add
add
fwait
cmp
xor
add
clc
pop
and
add
add
fidivrs
add
add
mov
clc
ss
clc
stc
iret
xchg
outsl
hlt
cmp
clc
sar
clc
adc
add
clc
rcr
xchg
hlt
jno
add
add
add
clc
pop
clc
pushf
cwtl
mov
jns
pop
loop
adc
add
mov
clc
jecxz
jge
add
cmp
sub
clc
jb
add
cmp
nop
insl
mov
push
clc
cmp
clc
sub
dec
jb
add
add
fsubl
add
or
sahf
mov
add
xchg
lods
gs
xor
add
adc
add
add
lret
sbb
loop
sar
clc
push
xor
add
add
add
and
add
jns
inc
clc
sub
adc
add
outsb
cmp
and
add
pop
es
jmp
int
popa
add
loop
fsubrp
inc
clc
stos
and
add
cmp
clc
cmp
cmp
add
add
out
cmp
add
jle
add
lock
xchg
xor
add
clc
enter
add
clc
cmp
ret
clc
jmp
pop
mov
clc
push
add
repz
inc
add
loopne
push
clc
jne
dec
inc
clc
pop
popa
add
aam
mov
out
data16
pop
lea
test
mov
adc
add
js
clc
pop
clc
push
add
xor
add
inc
add
cmpsb
clc
fwait
xor
push
mov
in
test
or
add
stc
mov
fstpl
pop
test
cs
clc
cmpsb
clc
repz
aam
dec
clc
add
add
icebp
sub
add
add
clc
in
cmp
inc
clc
fdivs
clc
out
outsl
cmp
enter
mov
add
xor
mov
out
sub
add
or
add
insb
aaa
repnz
loop
out
cwtl
cld
or
lret
cmp
std
out
dec
bound
add
push
aaa
imul
scas
cmc
pusha
add
stc
inc
clc
inc
clc
inc
add
icebp
fldcw
xchg
add
icebp
fs
cmp
jnp
clc
cmp
clc
adc
sar
movsl
clc
data16
fdivrp
xchg
rolb
clc
mov
sub
aas
cmp
aas
mov
add
sub
inc
add
sahf
pop
clc
xabort
add
test
dec
rorl
jo
add
inc
clc
ret
vmovups
add
or
imul
add
out
js
cmp
out
pop
sbb
and
mov
cld
call
clc
pop
xchg
dec
ss
dec
into
movsb
clc
sbb
cmp
jnp
pushf
in
and
add
add
or
jmp
test
clc
cmp
add
call
mov
mov
clc
sar
clc
sbb
cli
aad
and
add
jmp
mov
clc
dec
dec
push
add
fs
dec
jp
lahf
mov
test
mov
and
add
int3
inc
clc
lret
sbb
add
out
jmp
mov
xchg
and
sub
rolb
add
xchg
dec
xbegin
xchg
stos
or
enter
push
adc
add
cmp
clc
mov
add
loop
xor
jp
cmp
clc
push
add
add
std
into
xor
adc
add
add
add
cwtl
sbb
ds
add
enter
mov
std
cwtl
jmp
or
xchg
leave
fadd
clc
fcoms
add
add
ja
mov
cmp
or
dec
test
ret
mov
aam
clc
pop
scas
and
add
loope
and
add
lods
mov
clc
push
js
cwtl
push
fstp
fisttps
cmp
fcom
repz
je
clc
jp
add
cmova
sbb
sub
add
mov
xlat
and
add
sub
clc
push
add
push
test
mov
jp
stos
aas
loopne
adc
add
clc
mov
scas
or
fisttps
inc
clc
sti
nop
push
mov
add
not
mov
xor
lods
jle
ds
push
add
lock
push
pop
mov
add
aam
clc
sarb
clc
xor
add
std
fisubs
add
shll
push
repnz
add
fcompl
xor
sbb
add
sub
testl
shrl
pop
clc
lret
sti
cmp
jg
jl
adc
add
pop
clc
mov
cmp
aaa
and
add
das
jp
imul
mov
clc
lahf
pop
clc
xchg
mov
clc
cmp
and
add
fsts
and
add
inc
add
mov
add
pop
pushf
mov
push
jns
sar
add
sbb
sbb
popa
add
adc
jno
add
cltd
cltd
lret
jae
add
mov
xlat
push
adc
add
add
add
add
loop
mov
cmp
add
dec
xchg
sbb
clc
daa
clc
xchg
sbb
fisttps
clc
xchg
mov
fsubs
mov
mov
clc
mov
add
cmpsb
clc
add
add
add
clc
daa
clc
loopne
cli
rclb
add
xbegin
add
add
std
pop
out
iret
fcomp
bound
add
xchg
test
add
stos
xchg
add
add
insb
inc
clc
pusha
add
pop
mov
clc
das
jb
add
jns
clc
in
adc
add
inc
clc
and
add
lret
movsb
clc
mov
sar
jp
add
inc
add
cmp
fnsave
jmp
arpl
add
xchg
pusha
add
sti
in
out
cmp
mov
add
mov
cmp
xor
add
clc
adc
add
fistps
fs
mov
add
sub
pop
mov
std
push
add
loop
cmp
mov
clc
dec
add
add
mov
jo
add
add
adc
add
add
je
clc
or
mov
add
jge
clc
insb
add
nop
aas
mov
clc
jnp
jl
add
add
inc
add
in
push
add
or
data16
jo
add
xchg
inc
clc
aad
loop
mov
add
mov
sbb
clc
xbegin
add
jmp
mov
gs
dec
in
push
add
jno
add
clc
sbb
clc
jle
push
xabort
dec
aad
xor
add
mov
clc
mov
add
inc
clc
and
add
add
bound
add
clc
out
sbb
add
mov
cmp
clc
jmp
or
jmp
and
add
pop
mov
daa
clc
test
lea
add
xlat
rcpps
add
jle
and
add
adc
add
cli
iret
jecxz
mov
fwait
or
push
clc
aaa
and
add
push
clc
cltd
nop
push
and
add
clc
push
or
mov
inc
clc
pop
adc
add
add
adc
add
add
in
push
clc
cmpsb
clc
mov
addr16
icebp
pop
shr
cmp
fwait
and
add
sub
stos
in
mov
add
mov
add
xor
add
mov
clc
ss
aaa
push
clc
and
jmp
clc
getsec
jne
add
add
dec
xor
add
clc
dec
jecxz
add
add
incb
add
fs
adc
jl
add
add
clc
fs
out
imul
add
arpl
add
clc
xchg
movsb
clc
mov
aaa
xchg
sbb
sub
loope
aam
add
pop
and
mull
add
ds
cmp
loopne
call
add
bound
add
mov
pop
mov
add
clc
mov
sub
cld
xchg
push
jecxz
lods
addr16
loop
ficompl
push
clc
gs
lret
fdivs
out
sbb
mov
xbegin
dec
pusha
add
imul
lcall
shlb
or
jae
add
add
inc
add
push
push
lahf
push
add
aas
pop
not
push
or
cs
jae
add
ret
sub
outsl
insb
add
mov
clc
mov
je
arpl
add
clc
dec
jmp
fwait
mov
std
cs
mov
popa
add
test
stos
dec
dec
cmp
cwtl
push
int3
xor
je
clc
stos
test
movsb
clc
cmp
sar
jmp
clc
jmp
std
in
ret
clc
daa
clc
bound
add
scas
dec
inc
clc
dec
lcall
sahf
sarl
clc
lods
dec
cli
lret
cmpsl
clc
xchg
sbb
cmp
cmc
test
cmp
pop
xchg
jg
repnz
pop
clc
pop
insl
aaa
scas
test
addr16
xchg
dec
imul
add
adc
add
repz
add
sub
rcll
out
mov
clc
lods
sub
pusha
add
push
clc
sub
clc
cmc
mov
shrl
add
add
add
pop
je
std
movsb
clc
and
add
adc
add
clc
cmc
mov
arpl
add
add
xor
add
sar
jno
add
mov
add
clc
xchg
push
clc
jge
cmp
sub
incb
jmp
mov
mov
and
add
clc
mov
dec
cmp
sub
es
cmp
add
push
add
cmp
clc
cmp
pop
cmpsb
clc
inc
clc
stc
pop
aaa
test
sahf
std
loope
sbb
out
call
add
movsb
clc
inc
clc
mov
clc
in
pushf
jmp
xor
add
add
fisttps
popa
add
cmp
lret
into
fsubl
add
add
lahf
std
sahf
xchg
add
fwait
loope
lcall
add
add
or
xor
add
add
cmp
cmp
in
adc
add
mov
clc
fs
icebp
dec
jmp
rcl
mov
jo
add
clc
pop
jmp
clc
dec
sbb
out
shr
pop
mov
leave
adc
add
stc
mov
cmpsb
clc
push
int3
sar
clc
and
add
xor
add
dec
pushf
and
stc
dec
aad
clc
and
add
xor
add
clc
data16
ret
clc
sub
pop
push
dec
xor
clc
jb
add
jbe
sub
or
rorl
or
outsb
out
fildl
add
clc
mov
cmp
clc
test
cmp
out
fst
mov
or
clc
and
add
mov
mov
lods
leave
cmp
clc
stc
pop
xlat
mov
clc
dec
inc
clc
dec
lret
aad
clc
mov
xor
add
cmp
xor
add
arpl
add
adc
add
or
add
fisubrl
or
clc
ljmp
add
in
cmp
jle
add
mov
and
add
or
add
imul
add
cmp
dec
in
fcoml
add
mov
add
pop
pop
clc
adc
add
mov
sub
add
call
xlat
mov
and
add
or
push
pop
pop
xchg
add
add
pop
bound
add
xchg
daa
clc
in
xor
add
push
add
mov
imul
add
add
dec
cs
stos
lcall
ret
clc
inc
add
or
adc
add
gs
cmp
clc
jecxz
inc
clc
aas
mov
add
mov
fisttpll
cmp
vmovhps
pusha
add
scas
push
push
add
xor
stos
or
clc
xchg
clc
popf
cmp
add
out
gs
scas
jecxz
std
testl
push
add
clc
mov
clc
insb
mov
clc
scas
xor
add
cmp
adc
add
enter
cmp
or
add
clc
nop
into
stc
ret
idivb
jo
add
add
flds
add
gs
lods
sub
add
mov
add
sub
dec
je
clc
cli
inc
add
pop
inc
add
cld
std
aad
clc
test
add
test
cld
jecxz
js
jl
push
add
loop
push
add
dec
imul
clc
push
test
or
adc
add
enter
je
clc
mov
cmc
int3
cwtl
and
add
add
add
sbb
clc
scas
sbb
stos
insl
scas
ja
jecxz
data16
nop
and
add
mov
scas
sahf
repz
xbegin
add
in
xchg
cmp
movsb
clc
jmp
sub
pushf
cmp
and
add
clc
adc
add
test
add
gs
pop
inc
clc
jns
pushf
sub
push
mov
add
loope
and
insb
ret
clc
cltd
adc
add
sti
push
pop
jge
add
xchg
shrb
outsb
or
pop
cmp
add
hlt
loope
aad
push
add
jp,pn
mov
mov
repnz
dec
insl
push
stos
xchg
nop
ss
clc
adc
add
add
int
clc
sub
jno
add
call
iret
sar
aad
loopne
mov
cmp
pop
test
push
xchg
mov
loop
out
data16
cmp
clc
xchg
aaa
insb
and
add
aas
mov
add
add
add
cwtl
xor
add
add
pop
fbld
or
clc
je
inc
clc
sbb
lret
sbb
add
clc
pop
ret
clc
ja
inc
clc
cmpsl
clc
js
add
shl
mov
add
clc
pop
test
dec
out
fs
fstpl
nop
jae
add
add
test
add
aad
out
mov
clc
repnz
mov
or
test
add
adc
add
test
push
adc
add
iret
popa
add
stos
icebp
adc
clc
rclb
jecxz
push
add
pop
push
add
inc
clc
cmp
add
mov
rcll
xor
int
add
xchg
inc
clc
lret
mov
clc
mov
stos
roll
add
add
iret
out
aaa
mov
sub
push
add
mov
add
add
clc
xchg
sbb
in
inc
clc
add
add
mov
pop
shlb
cmp
clc
in
sub
bnd
xchg
pop
jo
add
clc
or
add
add
push
add
jb
add
add
jnp
addr16
leave
enter
sub
std
mov
add
add
and
clc
inc
add
ja
aas
or
push
mov
xchg
adc
add
clc
cwtl
das
ljmp
addr16
insl
test
inc
clc
cmp
addr16
mov
sub
sbb
mov
add
pop
jmp
add
push
xor
clc
aad
jno
add
add
clc
xbegin
xchg
clc
daa
clc
sbb
jge
push
add
mov
in
jno
add
add
clc
loope
add
add
into
jecxz
adc
add
add
add
mov
inc
clc
jl
aas
sub
add
bound
add
add
push
gs
insb
stc
sbb
add
dec
dec
mov
sbb
add
clc
push
clc
cmp
add
icebp
pop
jnp
clc
test
push
cmp
add
int
ficomps
clc
sbb
pushf
cmp
mov
dec
loope
ret
add
lret
movsl
clc
mov
clc
mov
add
add
sub
add
test
sub
bound
add
or
clc
mov
stos
lock
ss
pop
mov
xchg
ljmp
inc
clc
jae
add
aam
jle
sub
add
xchg
sbb
jmp
jns
mov
inc
add
dec
jp
std
push
add
outsb
or
clc
sub
rcr
sbb
xbegin
adc
add
mov
lahf
push
add
scas
dec
loopne
mov
clc
movsb
clc
sbb
stos
add
add
cmp
clc
pushl
jns
aaa
loop
loopne
mov
stos
adc
add
sahf
xchg
push
push
add
pop
mov
add
push
add
stos
mov
add
mov
add
arpl
add
adc
add
cmp
clc
scas
pop
xor
add
add
cmp
inc
add
jno
add
jbe
lret
sub
clc
pop
lret
push
fadd
clc
insb
push
and
add
and
add
clc
clc
cmpsl
clc
mov
arpl
add
shll
sbb
and
add
lods
jb
add
inc
clc
aam
fsts
add
shlb
add
cmpsl
clc
divl
clc
and
add
pop
sti
inc
add
imul
inc
clc
push
clc
inc
clc
int3
and
mov
pushf
jge
insb
rorl
pop
mov
mov
test
mov
sbb
test
xor
add
add
push
popa
add
cltd
out
outsl
stos
push
cmove
add
add
clc
jecxz
movsl
clc
in
and
add
push
add
xchg
test
clc
pop
clc
sbb
clc
mov
and
add
clc
fs
mov
add
out
push
add
inc
clc
lods
or
clc
xchg
aad
ja
pop
push
js
mov
clc
jbe
in
sbb
je
hlt
cld
std
repz
clc
jns
clc
jns
and
add
aam
clc
pop
clc
xor
add
add
add
inc
clc
xor
add
add
push
mov
mov
cmpsl
clc
scas
repnz
std
pop
pop
inc
clc
jle
arpl
add
push
add
dec
inc
clc
jbe
clc
mov
das
xchg
dec
pop
xor
clc
jg
lcall
clc
or
clc
stos
cmc
in
das
imul
and
outsb
sbb
add
sbb
mov
mov
addr16
loop
xchg
jmp
aad
icebp
mov
sti
rcrb
icebp
pop
mov
add
add
js
inc
clc
pushf
movsl
clc
out
movsl
clc
sbb
das
popf
scas
lcall
clc
push
clc
movsl
clc
lret
add
adc
clc
ljmp
clc
movsl
clc
inc
add
mov
add
push
pusha
add
jge
push
push
sub
lahf
cmp
add
add
push
add
shlb
fcompl
mov
mov
add
clc
dec
jle
int
dec
std
mov
pusha
add
sbb
cmpsl
clc
mov
repz
sahf
arpl
add
jp
js
rorl
aam
fcmovne
push
cmp
out
mov
lods
pop
es
jmp
clc
mov
std
in
xabort
dec
sub
xchg
addr16
mov
lahf
arpl
add
clc
cmp
fistps
insb
xchg
enter
clc
mov
xor
add
add
add
xchg
es
cli
dec
cwtl
mov
add
clc
jl
add
jbe
clc
dec
push
add
cwtl
sti
and
add
aaa
mov
call
inc
clc
sub
dec
repnz
xchg
or
clc
lcall
cmc
push
clc
cmp
add
add
add
jnp
sar
jns
clc
aam
clc
adc
mov
lahf
fwait
adc
add
sar
loop
test
push
or
lahf
mov
sar
inc
add
xor
inc
clc
call
add
inc
clc
gs
lcall
add
add
sar
inc
add
push
add
ss
aad
clc
data16
sub
add
ljmp
push
add
mov
lea
jge
aaa
fmul
fcoml
add
add
mov
add
push
push
add
and
xchg
add
push
sub
cmp
cmpsl
clc
data16
rolb
add
push
add
js
clc
fistl
outsb
ss
clc
pushf
fnstcw
jmp
clc
add
add
and
add
pop
out
loopne
adc
add
push
add
xchg
cmp
clc
add
xchg
jb
add
jnp
clc
daa
clc
enter
add
popf
jp
out
popf
pop
mov
pusha
add
pop
jb
add
clc
in
sub
es
movsl
clc
arpl
add
clc
aad
dec
push
add
xchg
sbb
dec
cmp
add
ret
clc
mov
inc
add
cmp
push
and
add
add
mov
xchg
jno
add
pop
nop
pop
lea
clc
add
add
cmpsb
clc
pushf
push
add
inc
add
inc
clc
cmp
inc
add
add
add
add
mov
je
xor
add
mov
movsb
clc
mov
clc
fcoml
sub
inc
clc
ja
jmp
stos
scas
cmp
in
or
add
clc
jns
add
and
add
insl
repnz
clc
cmp
add
int
dec
ret
cmp
xchg
xchg
and
add
mov
add
add
sbb
clc
and
cmp
add
test
adc
add
mov
mov
clc
xchg
mov
je
fisubrs
mov
xchg
fldt
cs
add
int
lea
add
xchg
pop
inc
add
pop
call
or
sbb
clc
mov
clc
jns
inc
clc
cmp
and
inc
add
xchg
and
add
daa
clc
sub
add
add
pushl
add
cmp
clc
xor
add
popa
add
pop
cmpsb
clc
lahf
xor
fistpl
mov
int3
cmp
xchg
sub
add
and
clc
lcall
xchg
jbe
clc
lods
lret
add
cmp
push
add
lods
ljmp
fimull
movsl
clc
push
add
sub
in
ss
or
add
clc
pop
add
add
stc
loop
cmp
setnp
dec
mov
cmp
mov
xchg
push
add
cwtl
and
add
addr16
push
add
xchg
xbegin
mov
idiv
mov
add
add
gs
sbb
lcall
cmp
sbb
mov
clc
pop
ret
clc
pop
faddl
clc
test
clc
lods
push
add
pop
xor
mov
in
push
dec
ja
rcr
mov
clc
inc
add
icebp
es
aas
insb
iret
mov
adc
add
clc
test
or
add
stos
test
in
fildl
add
out
incb
add
clc
sti
mov
clc
dec
fs
cmp
jmp
arpl
add
int
add
repz
dec
sbb
movsb
clc
jle
clc
sbb
jnp
and
add
add
push
addr16
fstpt
clc
and
std
jno
jbe
add
add
clc
cmp
int3
mov
clc
cmpsb
clc
xor
add
clc
arpl
add
add
inc
clc
leave
sbb
sub
clc
inc
clc
sar
dec
jno
add
clc
neg
dec
sbb
clc
outsb
mov
add
sbb
clc
mov
pop
enter
scas
mov
add
test
xchg
xor
add
pop
sbb
ljmp
inc
add
or
add
js
clc
adc
add
into
loop
in
ds
add
add
clc
xor
into
fs
je
das
int3
or
add
inc
clc
sbb
test
dec
sbb
repz
jecxz
stos
xbegin
or
clc
das
and
add
push
add
and
push
add
dec
mov
add
mov
ss
loopne
call
clc
pop
xchg
inc
add
mov
clc
stos
mov
mov
clc
es
addr16
jle
sub
mov
clc
out
and
add
clc
dec
test
loope
mov
adc
add
into
scas
add
add
adc
add
add
sbb
clc
cli
jo
add
dec
push
clc
stos
xchg
or
dec
mov
push
mov
pop
dec
loopne
mov
cs
clc
outsl
cmpsl
clc
aas
fs
loopne
mov
ret
clc
ret
lods
ja
rep
and
add
add
clc
sub
add
cmp
add
cmp
mov
pop
clc
insl
jo
add
clc
ficoms
je
dec
xor
iret
shlb
add
clc
mov
clc
pop
test
xchg
sub
mov
clc
xchg
or
in
mov
add
add
call
lods
adc
add
dec
jnp
clc
or
sbb
inc
add
mov
outsb
add
mov
imul
lret
xchg
cmpsl
clc
jnp
xlat
cld
icebp
jnp
add
jle
add
loop
adc
add
jmp
mov
arpl
add
int
cmp
push
add
mov
or
clc
test
inc
add
mov
xchg
push
add
fwait
loop
xor
add
jb
add
add
xlat
fstpl
lods
dec
lahf
jle
mov
inc
add
push
mov
jns
xchg
sbb
movsl
clc
cmp
add
add
clc
sar
clc
hlt
hlt
jno
add
sti
xchg
sarl
test
xchg
cmpsl
clc
ljmp
add
dec
sub
cld
push
xor
add
clc
sub
add
xlat
mov
clc
not
jmp
add
pop
sahf
xor
add
and
add
mov
ja
clc
or
mov
mov
popf
jo
add
or
sar
fstp
std
mov
jge
xabort
cltd
loop
lea
xchg
dec
jg
add
sbb
clc
mov
sbb
and
add
push
clc
loope
xor
test
add
pop
imul
clc
aam
push
lods
dec
ret
clc
pavgw
outsb
fdivr
test
ljmp
mov
clc
cmp
mov
add
jb
add
add
lea
add
fcomps
mov
clc
push
add
in
out
mov
dec
adc
add
add
xchg
cli
inc
add
cmp
inc
add
enter
sub
in
jno
add
add
mov
or
clc
dec
mov
push
and
add
popa
add
adc
mov
das
xchg
mov
inc
clc
shlb
in
inc
add
cltd
testb
clc
xchg
icebp
push
pusha
add
push
mov
clc
push
add
add
add
cmpsb
clc
push
add
mov
inc
clc
mov
add
adc
clc
adc
add
addr16
and
add
add
shlb
add
out
pushf
sahf
mov
outsb
pop
mov
jge
add
push
add
ret
jns
push
add
hlt
jno
add
pop
clc
out
gs
push
push
pop
push
add
or
add
push
add
mov
xchg
fldenv
clc
jnp
clc
pusha
add
sbb
sub
add
add
add
lods
add
add
popa
add
imul
lock
jns
or
sti
sbb
clc
sub
mov
popa
add
sub
add
add
jge
clc
aaa
out
stos
out
insl
inc
clc
mov
add
inc
add
lret
mov
add
cli
jp
cmpsb
clc
jecxz
es
mov
add
daa
clc
or
sar
push
cmp
clc
cmp
pop
arpl
add
clc
icebp
xchg
mov
bound
add
clc
sub
std
or
clc
jmp
push
jg
mov
add
lret
sar
add
cwtl
xor
notl
add
add
clc
repz
imull
mov
ljmp
clc
sub
pop
or
push
add
dec
aad
es
mov
jns
out
aam
xor
adc
add
add
clc
pop
dec
push
and
add
xchg
inc
clc
mov
xchg
iret
dec
add
sbb
nop
clc
push
cmp
clc
test
mov
add
add
add
add
cmp
cmp
add
cmp
xchg
into
push
add
jecxz
movsb
clc
ja
xlat
add
add
mov
mov
push
clc
mov
add
pop
scas
sbb
clc
daa
clc
push
clc
add
add
das
jp
popa
add
pop
sti
sar
cmpsl
clc
and
add
add
test
xor
add
repz
rorb
push
mov
clc
and
addr16
lret
add
push
cmp
arpl
add
add
xor
add
push
lret
in
outsl
mov
clc
imul
clc
dec
xchg
pop
sub
clc
out
shlb
and
lock
jp
aas
xor
add
inc
add
out
aam
jbe
ljmp
test
clc
dec
sub
push
sti
xchg
sar
clc
pop
outsl
pop
cmp
mov
add
clc
call
mov
loope
fistpl
movsl
clc
xor
add
clc
pop
clc
jge
adc
add
add
dec
adc
jg
pop
movsl
clc
mov
addr16
and
push
add
mov
add
popa
add
push
add
addr16
xlat
cmp
cmp
lret
loope
mov
jle
movsb
clc
push
clc
xlat
jle
clc
gs
pop
and
add
add
mov
add
faddl
clc
ja
pop
xor
add
jmp
clc
xchg
push
stos
mov
adc
add
fldl
add
add
add
dec
fwait
gs
mov
cmpsl
clc
mov
mov
bsf
add
fucomi
pop
loop
xabort
clc
loopne
enter
clc
bound
add
in
mov
clc
dec
popa
add
test
divl
data16
xchg
clc
in
mov
add
sub
fstpt
fcomps
lods
mov
std
push
add
pop
pop
push
fxch
lods
or
add
push
dec
dec
dec
mov
clc
cmpsb
clc
cmp
add
inc
add
int
lret
clc
data16
addr16
pop
loop
ljmp
clc
mov
std
fistpll
add
in
dec
je
imul
pop
stos
test
add
add
clc
fidivl
in
mov
xchg
cmp
add
add
add
pop
mov
outsl
lock
dec
xchg
sub
into
mov
clc
ljmp
add
xor
add
sbb
add
loop
popf
sbb
clc
imul
cmpsl
clc
sbb
add
insl
inc
clc
dec
ds
outsb
push
push
add
jb
add
inc
clc
hlt
or
pop
add
jb
add
pop
add
add
xor
xor
add
xor
add
clc
or
clc
add
bound
add
in
jl
clc
sbb
inc
clc
lret
inc
clc
and
add
clc
jns
push
add
shl
fucomp
push
add
shrl
push
cmp
and
sarl
add
push
add
xchg
imul
clc
mov
pop
std
pop
in
xchg
iret
mov
add
or
clc
dec
push
pop
and
add
fisubrl
inc
add
fistpll
sub
arpl
add
push
pop
jns
clc
push
add
fnstcw
inc
clc
push
std
mov
into
cmp
daa
clc
jecxz
in
scas
nop
dec
jo
add
nopl
add
ret
and
add
incb
clc
add
ret
clc
and
add
clc
mov
inc
clc
aaa
push
popf
loope
cmp
out
imul
pop
mov
push
xor
add
jle
imul
or
stc
enter
mov
das
popa
add
sbb
cli
in
cmpsl
clc
jmp
clc
mov
clc
cmp
mov
in
cmc
cmp
add
mov
sar
ds
add
sbb
xor
add
clc
testl
outsb
mov
bound
add
jmp
add
add
and
clc
ljmp
insb
xchg
dec
sar
clc
add
add
or
cmpsl
clc
loopne
pushl
aaa
dec
inc
clc
call
adc
lock
clc
cmp
jbe
clc
lret
pop
adc
add
int3
and
add
cwtl
xor
add
add
xchg
pop
clc
jecxz
decl
aad
push
jecxz
mov
jmp
add
jmp
dec
cmp
add
clc
das
or
sub
adc
add
add
ljmp
dec
insb
cld
cmp
clc
mov
inc
add
adc
add
ss
fidivl
mov
add
lods
ret
jae
add
add
flds
add
inc
add
add
mov
js
clc
mov
or
push
add
jb
add
mov
xlat
xchg
fs
ss
cmp
add
dec
mov
clc
add
add
mov
jmp
gs
mov
add
adc
add
clc
daa
clc
pop
mov
mov
clc
out
inc
clc
call
adc
add
add
lret
and
add
ret
clc
jg
inc
clc
jmp
into
xchg
pusha
add
or
add
sahf
insb
imul
xchg
rolb
loop
sbb
mov
and
add
clc
insl
nop
add
add
add
add
mov
fidivs
hlt
sbb
clc
xchg
pop
mov
clc
out
out
arpl
add
repz
mov
or
dec
popf
ljmp
clc
add
add
clc
adc
add
test
in
pop
xchg
sbb
movsl
clc
lret
clc
mov
jg
clc
testl
in
sub
inc
add
stos
xor
clc
sti
jb
add
fbld
inc
add
clc
sub
in
xchg
mov
test
std
push
jmp
add
out
sar
clc
int3
lods
in
mov
data16
int3
cmp
sub
lret
xchg
into
dec
call
into
inc
clc
mov
inc
clc
cmp
pop
sti
xchg
hlt
lods
int
dec
bound
add
sar
jns
add
and
xchg
xor
add
loop
add
lods
imul
sbb
sbb
pop
addr16
mov
cmp
sarl
and
clc
dec
and
adc
add
add
jno
add
and
add
add
push
rolb
jns
stos
lock
outsl
xor
mov
clc
rclb
add
mov
inc
add
push
add
jno
add
clc
jne
pop
xchg
xchg
popa
add
pusha
add
in
push
add
pop
jns
push
clc
push
lods
fdivs
add
mov
mov
add
clc
pop
cli
mov
sub
push
imul
clc
add
add
fldz
push
push
clc
add
add
daa
clc
cmp
dec
or
or
daa
clc
icebp
cmp
add
clc
test
mov
bound
add
xor
add
add
divl
clc
jp
clc
xabort
clc
ja
loope
pop
and
add
clc
lods
sbb
out
mov
sub
das
cmp
add
shrb
clc
inc
clc
pop
ljmp
mov
lods
insb
into
sti
in
jns
mov
out
mov
add
add
pop
repz
fbld
sub
add
dec
cwtl
leave
jo
add
add
cmp
jg
clc
fwait
mov
jno
add
add
in
or
xabort
or
add
in
arpl
add
mov
cmp
fidivs
cmp
dec
xchg
imul
mov
mov
insb
das
sarl
cmp
jae
add
hlt
sub
mov
jno
add
add
jg
cmp
clc
sarb
jno
add
add
add
sarb
add
adc
add
clc
mov
testb
adc
add
iret
mov
xbegin
jg
jge
add
lcall
mov
add
dec
dec
aaa
xchg
dec
je
xchg
in
pop
stos
jp
clc
mov
outsl
fs
push
push
adc
clc
lret
test
stc
mov
aam
add
jns
jg
test
imul
inc
clc
sbb
add
lret
data16
dec
sbb
mov
shlb
add
inc
clc
push
fistpl
sbb
pop
fwait
insl
movsl
clc
fcmovnbe
icebp
or
lret
or
clc
in
jbe
clc
dec
cmp
clc
jp
clc
dec
cmpsl
clc
std
fistpll
add
pop
rcrl
icebp
sahf
cmp
imul
fstl
clc
pop
ret
test
clc
jb
add
arpl
add
add
enter
mov
loop
ljmp
and
dec
cmp
clc
stos
mov
mov
pop
ret
sbb
clc
mov
clc
adc
add
movsl
clc
clc
cld
xchg
or
aad
loopne
mov
sbb
jmp
clc
mov
jne,pn
mov
add
fildll
dec
add
insb
xchg
daa
clc
lahf
cmp
mov
ficompl
outsb
popa
add
or
es
lret
lahf
mov
clc
jge
add
mov
sbb
add
dec
pop
loopne
dec
dec
inc
clc
fstps
cmp
clc
int3
repz
clc
push
jb
add
lcall
clc
frstor
jmp
push
clc
and
xchg
ret
lock
clc
sub
add
clc
jne
xchg
jmp
cmp
add
jle
fs
clc
frstor
bound
add
sti
adc
add
lods
in
mov
loope
cmp
jle
add
inc
add
cmp
sub
fisttpll
inc
clc
adc
add
add
clc
mov
add
add
adc
lret
std
out
cmp
cmpsl
clc
jns
gs
mov
add
pop
lods
adc
add
inc
add
mov
mov
insb
imul
add
jno
add
mov
clc
dec
sub
clc
push
cld
iret
es
pop
or
mov
sub
rcl
dec
out
sub
leave
push
fidivrs
or
addr16
cmp
repnz
aaa
lock
lods
dec
xor
add
push
add
ret
clc
add
add
push
xbegin
add
inc
add
jae
add
loop
fmuls
mov
add
jmp
adc
aas
sbb
add
jle
fdivr
mov
xchg
cmp
sbb
loope
push
add
cmpsl
clc
cld
cmp
clc
pop
xor
add
mov
cmp
mov
push
add
push
jmp
add
mov
adc
add
insb
test
sub
add
enter
add
and
cs
adc
add
sbb
clc
sbb
cmpsl
clc
addr16
mov
mov
clc
ss
push
add
insl
mov
int3
in
out
inc
add
cmc
leave
mov
add
clc
ja
dec
int
clc
xor
add
xlat
inc
clc
scas
sti
clc
cltd
and
add
stc
iret
xor
out
push
rorb
clc
mov
mov
jp
xchg
inc
clc
iret
jae
add
ljmp
add
adc
add
add
inc
clc
jns
jae
add
xor
add
clc
aaa
adc
clc
lcall
or
inc
clc
arpl
add
mov
lret
jbe
outsb
pop
in
or
xor
add
icebp
cmp
lret
stos
push
add
push
jns
add
sbb
mov
mov
fs
stos
sbb
in
jle
ljmp
clc
push
cmp
int
and
clc
mov
ret
clc
mov
notb
add
xchg
mov
pop
lods
inc
add
imul
adc
out
mov
outsb
pop
clc
jge
insb
or
add
dec
pusha
add
inc
add
in
push
add
int3
nop
dec
mov
add
sbb
add
inc
clc
test
clc
fistps
jmp
clc
test
xlat
mov
or
or
cmc
cmp
jmp
cs
repz
mov
pusha
add
adc
aam
stc
pop
push
jge
add
ret
xchg
cmp
pop
fisubrs
add
cmp
add
mov
and
add
dec
sbb
mov
and
add
add
push
mov
clc
fwait
add
add
add
mov
clc
sbb
lret
out
popf
gs
fucom
clc
xbegin
sbb
stos
add
add
sti
mov
add
add
add
add
sbb
test
pop
out
xor
add
das
sahf
jbe
mov
clc
push
icebp
cmpsb
clc
stos
cmp
clc
adc
clc
fwait
stos
jns
jg
xlat
jle
add
and
add
clc
cmp
jmp
dec
cmp
adc
add
repnz
fcomps
stc
insb
xchg
clc
stos
mov
add
add
cmp
clc
jecxz
mov
clc
insb
sbb
inc
add
pop
clc
cmpsl
clc
mov
add
and
enter
in
and
add
add
aam
clc
nop
and
sub
js
jnp
testb
or
add
ss
pop
adc
push
sbb
ljmp
xlat
icebp
or
clc
jle
push
add
inc
add
cmpsl
clc
addr16
sub
mov
pop
addr16
mov
add
lahf
push
sbb
test
outsb
pusha
add
int3
sub
fcom
adc
clc
mov
add
and
add
gs
imul
dec
sbb
clc
and
add
and
add
xchg
push
dec
cmp
ss
push
add
out
pop
jmp
cmp
pop
cli
loop
cli
in
mov
cli
add
add
jg
add
jae
add
outsl
arpl
add
adc
scas
cs
clc
pop
test
sar
sub
clc
rcrl
imul
add
mov
or
add
clc
inc
add
lods
jae
add
add
jecxz
dec
lret
out
and
push
loopne
push
mov
sub
mov
clc
xor
add
jo
add
stos
pop
xlat
jecxz
xchg
fsubr
clc
jecxz
push
add
loope
fimuls
mov
pushf
ljmp
add
cwtl
je
inc
clc
cli
xor
rcll
rorb
pop
xchg
stos
test
add
add
movsl
clc
imul
add
ja
add
pop
fs
clc
lret
add
clc
int
in
fnsave
cmp
mov
clc
fisttps
jl
clc
jns
cmp
inc
add
in
lret
push
and
add
add
scas
mov
test
pop
int3
xchg
enter
cmp
pop
or
mov
cmpsl
clc
mov
aad
add
out
out
adc
add
clc
loopne
ud0
insb
and
add
sahf
sub
add
imul
fcoml
dec
sub
ret
clc
or
js
aas
call
shll
add
movsb
clc
pop
clc
xchg
aaa
movsl
clc
xlat
jl
clc
adc
add
xchg
pusha
add
pop
fildl
aad
clc
stc
aam
jp
mov
clc
mov
dec
movsb
clc
fwait
cli
xchg
data16
out
stos
mov
add
test
jg
sahf
pop
xor
add
add
add
sti
and
add
jmp
pop
clc
mov
rcl
cmp
clc
inc
add
add
xchg
stos
sbb
dec
inc
add
mov
lret
sub
clc
imul
clc
dec
pop
xchg
lahf
and
add
mov
add
gs
loope
cmp
mov
scas
push
test
clc
into
loopne
ficomps
add
push
add
bound
add
mov
xchg
jp
cmpsl
clc
jns
iret
std
xchg
into
pop
lahf
cmp
std
push
inc
add
js
clc
push
inc
clc
imul
add
cmp
add
add
xchg
jl
test
mov
out
push
add
xchg
inc
add
mov
add
clc
adc
add
xchg
nop
gs
cmp
fwait
push
repz
aam
add
ret
clc
push
sub
clc
jns
add
sar
add
push
add
cmp
clc
sbb
and
add
icebp
adc
add
clc
or
jns
mov
xor
add
sub
clc
cmp
mov
fstl
shll
add
pop
dec
fucomi
mov
rcrb
mov
add
repnz
clc
mov
add
pusha
add
xchg
cmp
jp
popf
test
std
movsb
clc
lods
loop
and
ret
dec
jno
add
xchg
call
add
mov
inc
add
push
clc
filds
add
clc
into
and
add
push
dec
inc
clc
or
arpl
add
adc
clc
xchg
xor
mov
add
lahf
dec
and
add
add
gs
pop
clc
into
add
add
mov
add
pusha
add
dec
sar
shll
add
pop
xor
add
clc
sub
jo
add
xabort
add
fidivrs
call
push
add
cmp
cmp
scas
loope
nop
xabort
loope
fadds
aaa
ljmp
mov
mov
add
in
cmp
cmp
add
cmp
lods
cmp
adc
add
jle
mov
clc
fstps
push
add
sti
jno
add
clc
xchg
js
and
add
cmp
add
pop
sub
mov
mov
dec
jge
add
popa
add
xchg
fidivrl
clc
test
add
dec
clc
jg
mov
clc
mov
bound
add
mov
test
sbb
clc
mov
ss
fildll
jno
add
clc
xabort
push
pop
cmp
jno
add
push
add
add
repnz
push
add
into
push
add
mov
aas
sbb
psllw
test
xbegin
add
jne
xchg
mov
hlt
xchg
aam
sub
mov
insb
xor
add
clc
adc
add
pop
aas
ret
mov
test
add
imul
xchg
cmc
adc
add
clc
pop
adc
add
fst
push
test
push
clc
je
sbb
adc
add
sahf
jle
add
push
add
shl
mov
clc
xor
add
sbb
clc
add
mov
pushl
xchg
push
mov
mov
enter
push
lock
nop
cmp
push
add
cmp
add
mov
add
xchg
jo
add
sar
aas
mov
xchg
and
add
int
cwtl
add
add
clc
ficomps
fldenv
call
imul
clc
outsl
mov
pop
aas
dec
dec
lea
ds
out
adc
add
addr16
pop
lret
add
xchg
jae
add
clc
xchg
or
add
je
clc
dec
lods
push
xlat
js
clc
push
add
push
lahf
push
sub
cmp
add
dec
or
cmp
clc
jl
clc
outsb
bound
add
aad
clc
adc
add
clc
mov
clc
adc
add
mov
js
dec
imulb
imul
xchg
lock
adc
stos
popa
add
jnp
lea
xchg
sar
clc
loope
mov
clc
inc
add
sub
loope
jmp
enter
push
add
insl
or
push
add
add
jecxz
push
pusha
add
lret
and
add
lods
xchg
in
icebp
fcmove
cmp
add
stc
push
add
or
add
add
clc
jnp
jge
inc
add
or
outsl
cmpsl
clc
aaa
push
add
inc
add
dec
lret
xchg
repz
gs
mov
pop
jp
cmpsl
clc
outsl
enter
std
and
or
xor
cmc
pop
mov
clc
sub
add
add
and
add
push
add
test
clc
mov
cmp
mov
add
adc
add
hlt
inc
add
and
add
out
nop
inc
add
or
sbb
add
jp
add
mov
clc
jg
xchg
ret
clc
cmp
clc
rolb
xor
add
add
loopne
and
clc
cmp
add
add
or
add
ljmp
clc
js
mov
clc
pop
xchg
das
or
cmp
push
clc
sbb
clc
jge
outsl
scas
iret
add
add
clc
stc
push
add
xor
add
adc
add
clc
int3
sarb
mov
je
es
inc
add
push
clc
dec
mov
add
sar
clc
jmp
clc
push
call
aas
out
mov
jge
add
jecxz
jae
add
sbb
clc
icebp
xabort
fnstcw
out
mov
add
insl
imul
mov
add
ds
adc
add
add
mov
in
xchg
jle
rcll
add
imul
or
add
and
jb
add
add
test
movsb
clc
int
clc
fisttpll
in
cmp
lahf
movsl
clc
sti
jg
mov
test
add
sbb
daa
clc
xchg
or
iret
xchg
xor
clc
pop
clc
data16
rolb
fs
inc
add
mov
mov
clc
mull
scas
cltd
pop
mov
add
sub
xor
add
add
sti
push
xchg
popa
add
popa
add
loope
in
add
add
sbb
dec
pop
push
clc
push
inc
add
sbb
pop
pusha
add
jmp
out
push
clc
pop
push
fs
in
mov
sub
clc
mov
add
sub
stos
xor
add
mov
add
add
clc
sti
inc
clc
adc
add
clc
xchg
cmpsb
clc
xchg
cmp
push
add
xabort
cmp
add
push
mov
scas
nop
sbb
clc
jo
add
mov
jge
sbb
cmp
clc
mov
add
mov
add
test
cwtl
pop
clc
jge
cmpsb
clc
cmp
add
aad
rorl
push
and
add
clc
lcall
add
shrb
xor
add
clc
mov
inc
clc
push
clc
xor
add
add
lea
scas
clc
xor
repnz
pop
mov
push
clc
cli
adc
dec
sub
clc
add
add
cmp
sar
clc
inc
clc
or
add
add
add
dec
shll
fucomip
mov
clc
prefetch
or
clc
xor
adc
add
sub
jmp
clc
adc
data16
data16
das
sbb
xor
add
add
clc
mov
popf
clc
sar
test
mov
not
push
out
lcall
add
xchg
pop
movsb
clc
push
test
adc
add
add
imul
insl
jns
and
add
sbb
mov
push
sti
out
or
add
sbb
add
insl
pop
loope
inc
clc
cmp
xor
js
leave
pop
adc
add
clc
sbb
adc
add
outsb
add
add
add
ljmp
in
pop
and
add
mov
dec
push
sbb
clc
gs
vandnps
add
imul
ja
mov
jg
dec
cmp
clc
adc
xchg
test
pop
bound
add
pop
mov
pop
clc
mov
out
or
add
test
cmp
pop
jg
or
sarl
hlt
xor
add
adc
add
clc
push
clc
popf
cmp
or
mov
adc
add
add
add
sub
clc
daa
clc
add
pop
mov
nop
fists
in
loope
cmp
pop
dec
ja
push
add
icebp
mov
jle
or
clc
mov
in
int
clc
arpl
add
shll
cmc
fs
mov
iret
mov
add
loopne
mov
xor
add
js
cmp
adc
add
in
hlt
xchg
cwtl
insl
lods
push
add
pusha
add
or
outsb
jge
pop
clc
add
add
hlt
mov
push
cmp
jnp
add
cmp
gs
jno
add
lods
mov
mov
push
add
adc
add
loopne
scas
cmp
outsb
jmp
add
cmp
push
sbb
in
or
push
add
dec
xchg
adc
add
adc
clc
adc
add
lret
pop
inc
clc
xchg
lret
jne
mov
clc
push
jae
add
xlat
popf
popf
xor
add
clc
add
add
sar
pop
add
add
add
push
inc
add
pop
ljmp
mov
mov
add
add
add
clc
clc
jl
add
cs
or
xchg
das
aam
add
cmpsb
clc
dec
jb
add
mov
testb
jg
test
push
fldcw
rorl
clc
jp
ret
push
clc
dec
and
add
loope
in
dec
pop
fs
lret
pop
jae
add
add
add
mov
add
add
add
push
aam
clc
repnz
add
add
lods
xor
add
clc
inc
clc
fildll
mov
and
add
sahf
fs
out
xchg
lahf
xchg
jecxz
jne
sub
pop
add
mov
clc
lock
add
inc
add
mov
in
addr16
add
add
add
enter
sbb
pushf
lcall
clc
sub
xchg
and
std
fwait
popf
jg
add
dec
and
add
mov
clc
xlat
and
add
clc
mov
add
cmc
dec
sub
enter
sahf
cmp
scas
test
sub
add
mov
cmpsl
clc
pop
add
and
mov
clc
jge
clc
fdivrs
xabort
out
ret
mov
add
and
add
push
add
xor
add
dec
jle
add
and
nop
daa
clc
addr16
adc
add
mov
add
jne
add
sbb
rcll
cltd
hlt
clc
ss
scas
out
stos
mov
push
add
gs
mov
jnp
fsubrl
clc
fistpl
mov
add
add
pop
pushf
push
clc
stos
dec
jbe
sbb
add
jmp
add
xchg
xor
add
dec
loop
sbb
lods
mov
xchg
test
xchg
dec
js
lods
out
icebp
jnp
sub
add
hlt
adc
test
and
lret
add
add
je
out
sub
clc
sbb
push
add
mov
clc
jmp
aaa
in
dec
aam
jge
lahf
adc
add
std
xor
add
out
dec
cmp
sti
jmp
add
xchg
cmp
lock
bound
add
add
popf
popa
add
cmpsl
clc
data16
dec
cmp
mov
push
cmp
xchg
mov
sahf
add
add
clc
ss
mov
mov
cmp
lods
sbb
cs
push
sbb
lcall
clc
int3
mov
in
sbb
dec
jp
lods
adc
add
sar
mov
clc
stos
shl
clc
push
clc
jmp
add
mov
inc
clc
clc
ffreep
clc
mov
clc
inc
clc
lods
bound
add
stos
cmp
add
cltd
xchg
aad
in
popa
add
in
mov
iret
int
test
inc
clc
pop
jmp
shlb
add
add
add
mov
jle
in
mov
mov
add
movsl
clc
aas
xbegin
clc
mov
addr16
stos
xchg
pop
add
add
clc
xor
clc
inc
add
xbegin
add
mov
xchg
cmp
inc
add
sbb
fsubrl
js
and
add
loop
sub
add
test
rcll
cmp
lock
add
inc
add
jecxz
sbb
sahf
mov
add
add
add
leave
test
loope
pop
jbe
clc
in
add
add
dec
inc
add
xchg
in
lea
jne
fsubrl
sbb
aas
mov
clc
shrl
clc
xbegin
clc
inc
clc
push
push
clc
inc
add
imull
gs
ds
dec
loope
outsl
addr16
es
dec
xchg
and
add
add
mov
and
add
add
or
add
jg
clc
lea
add
add
add
mov
clc
call
out
ljmp
or
inc
add
fst
and
add
add
dec
stos
mov
add
add
fs
xchg
shrb
add
jecxz
sub
mov
ror
xabort
pop
fstpl
clc
lret
in
jmp
dec
imul
add
add
addr16
adc
add
clc
sar
sbb
jns
loope
stc
add
add
add
add
cmp
add
sar
fildll
jns
cli
aaa
sbb
jg
daa
clc
cmpsb
clc
sub
clc
cmp
repnz
sub
jg
shrl
dec
inc
clc
mov
add
in
cld
pop
sub
rcll
add
cmc
pushf
shll
clc
dec
inc
clc
scas
pusha
add
je
push
add
aad
clc
nop
ljmp
cmp
clc
mov
add
mov
jp
clc
arpl
add
mov
clc
or
gs
aam
clc
shrl
add
mov
cmp
cmp
add
or
out
cwtl
pop
notb
add
fnstenv
jb
add
add
jecxz
push
add
pop
mov
popf
push
cs
add
dec
iret
lods
push
add
sbb
clc
sub
add
add
data16
out
sarl
jmp
clc
or
sar
cmp
clc
dec
je
clc
jmp
sti
lcall
test
ret
clc
mov
and
add
clc
xchg
fidivrs
cwtl
push
add
test
pop
jecxz
fs
mov
jb
add
mov
mov
adc
add
and
add
hlt
mov
add
stc
repnz
cmp
scas
push
and
add
inc
add
clc
lret
cld
mov
or
add
out
faddl
mov
pop
clc
pop
sub
loopne
lahf
pop
xchg
xor
clc
jno
add
ljmp
add
add
outsl
fldt
addr16
js
xbegin
add
out
jne
add
mov
clc
adc
add
stc
add
add
or
cmp
add
mov
add
pop
and
add
xchg
daa
clc
js
xor
add
in
cmp
clc
xabort
add
das
push
add
mov
xor
add
jl
clc
cld
in
gs
or
clc
push
add
inc
clc
movsl
clc
mov
rol
clc
or
mov
sub
push
or
mov
add
and
add
clc
sbb
int3
movsb
clc
cmp
add
push
add
sar
clc
daa
clc
lods
iret
fs
cmp
outsl
cli
lcall
mov
fiaddl
clc
repz
outsl
sti
cmp
loopne
xchg
xor
pop
cltd
dec
jmp
adc
out
jg
jg
push
clc
cli
sub
adc
clc
es
and
add
movsb
clc
or
and
add
add
sub
xchg
or
inc
add
out
fimuls
sub
jle
hlt
int3
popa
add
mov
dec
pop
cmc
xor
pop
stc
clc
sub
in
mov
rcrb
fmul
add
add
pop
cmc
lcall
add
sub
sbb
and
add
dec
loope
add
add
clc
popa
add
mov
pop
mul
clc
ret
clc
jg
cli
sar
cli
in
xor
clc
arpl
add
daa
clc
sar
add
imul
add
add
mov
add
test
rcrl
clc
mov
int
mov
mov
negb
out
inc
clc
sub
adc
mov
hlt
out
xbegin
clc
aaa
outsb
sub
nop
mov
fmull
jbe
stos
in
cmp
scas
int3
js
clc
push
push
jnp
xor
add
clc
shrl
repnz
add
cmp
mov
clc
movsb
clc
fcompl
out
das
xor
add
aad
clc
or
jmp
add
arpl
add
cmp
das
sti
sar
cmp
add
xor
mov
pop
pop
cmc
sub
clc
rcll
xabort
dec
scas
add
add
clc
jae
add
out
ret
clc
mov
loope
lods
sub
inc
add
jbe
clc
mov
es
xbegin
inc
add
or
test
add
add
ljmp
je
or
pop
in
xchg
inc
clc
sub
add
clc
mov
js
es
scas
push
add
test
xchg
sahf
inc
add
sub
clc
outsl
or
pop
push
add
int
push
repnz
xchg
not
mov
add
movsb
clc
cmp
out
or
clc
call
mov
push
add
mov
data16
mul
clc
cmp
lods
ret
and
add
pop
rorl
add
lret
lahf
lock
pop
pop
stc
sti
in
push
clc
xor
add
clc
imulb
and
mov
pop
xchg
or
clc
adc
add
add
mov
add
int
add
add
pop
push
cmp
add
lods
pop
sub
add
add
movsb
clc
enter
add
testb
dec
sahf
notl
add
mov
pusha
add
sub
pop
push
mov
inc
add
xchg
pushf
mov
jnp
fs
mov
sbb
lret
mov
popa
add
cmp
push
add
jge
clc
and
cmpsb
clc
imul
mov
movsl
clc
adc
add
inc
clc
es
clc
mov
add
test
add
add
add
stos
lcall
or
pop
clc
dec
lret
dec
cmp
clc
cli
repz
add
fcompl
inc
clc
push
lret
sbb
sar
insb
dec
mov
clc
xchg
sbb
sti
xor
loop
xchg
sar
add
or
cltd
shll
clc
or
cwtl
xchg
sar
clc
xor
add
outsb
pop
pop
sub
clc
mov
fprem
push
or
xchg
loop
into
and
add
xbegin
clc
xor
add
leave
pop
cmp
add
sub
pop
lock
add
add
clc
cli
fiadds
add
cmp
pop
ret
add
call
adc
add
add
mov
clc
jnp
add
lea
aas
icebp
fstps
push
add
pop
xbegin
add
push
add
fs
jo
add
mov
clc
cmp
mov
cpuid
clc
sub
sub
cmp
push
add
jns
ds
or
cmpsl
clc
adc
inc
add
sbb
clc
jns
clc
out
std
insl
cmp
mov
add
movsb
clc
jno
add
or
add
jne
movsl
clc
pop
dec
add
insb
push
add
cltd
xabort
or
stos
lret
dec
arpl
add
mov
and
clc
call
cmp
add
xor
add
incb
enter
or
lods
push
int
int3
cmp
clc
cmp
jg
push
in
cwtl
lods
sbb
cmp
clc
mov
mov
imul
add
jb
add
add
stos
loop
xchg
in
xchg
dec
dec
aas
push
mov
insb
mov
lahf
mov
inc
clc
cmp
inc
clc
mov
clc
cmp
enter
pop
ja
clc
test
cmp
jle
xor
add
adc
add
add
sub
push
add
dec
iret
adc
add
cli
out
arpl
add
test
fdivrl
jmp
cmp
add
test
xor
add
add
pop
and
add
jg
test
pop
clc
and
add
cwtl
movsb
clc
mov
push
add
mov
or
add
mov
mov
movsl
clc
lret
add
dec
lret
or
rcr
inc
clc
pop
or
add
or
add
jne
clc
outsb
ljmp
lock
clc
popa
add
xor
sbb
xchg
add
mov
xchg
mov
add
add
cmp
jbe
js
mov
jb
add
imul
inc
add
ljmp
in
inc
clc
sub
mov
es
pushf
xor
add
add
adc
add
pusha
add
mov
add
add
cltd
dec
cwtl
push
dec
loop
inc
add
add
pusha
add
cmp
pop
push
xor
and
add
mov
xor
add
ljmp
xchg
jge
push
mov
add
mov
or
pop
lods
or
add
sbb
pop
ret
or
clc
pop
ds
cmpsb
clc
repz
and
add
add
inc
clc
je
in
mov
js
clc
mov
fwait
inc
add
mov
clc
lods
test
test
add
iret
dec
clc
shll
push
xor
add
add
push
push
add
mov
cmp
fwait
cmpsb
clc
aaa
inc
add
cmp
clc
xchg
int3
cmpsl
clc
fdivl
and
add
clc
and
clc
dec
inc
clc
push
add
mov
clc
inc
add
xchg
lods
insb
test
clc
insb
fldenv
adc
add
and
add
add
mov
loope
mov
es
mov
add
testb
test
int
pop
lret
cmp
add
inc
clc
push
clc
pop
lock
insb
pop
repnz
ja
clc
xchg
incl
clc
sar
test
data16
dec
push
bound
add
pop
dec
fld
clc
or
test
clc
xchg
xchg
cwtl
aad
clc
lret
imull
clc
push
add
jecxz
dec
sbb
add
lea
mov
clc
clc
jnp
add
mov
cmp
mov
incl
stos
scas
clc
and
add
fdivr
or
sbb
add
je
arpl
add
lret
cmp
repnz
clc
cld
aas
ret
add
shlb
add
mov
add
add
push
inc
clc
mov
cmp
jecxz
jo
add
add
push
add
cmp
clc
aad
mov
xchg
cmp
add
pushf
push
out
sar
pop
jno
add
xchg
mov
add
ljmp
clc
sbb
add
jl
clc
push
sub
and
add
mov
cmp
adc
sbb
and
add
add
pop
fwait
js
cs
clc
mov
clc
addr16
push
add
icebp
cmp
clc
mov
add
mov
shl
clc
mov
sti
cmp
loope
fcmovnu
scas
stos
pop
clc
xchg
or
inc
add
add
add
cmp
xor
add
test
sub
rolb
clc
jns
clc
fldenv
add
sahf
inc
clc
in
in
and
add
add
xabort
mov
xchg
mov
clc
leave
pop
mov
dec
sub
addr16
mov
dec
lahf
repz
cmpsb
clc
jge
clc
mov
clc
enter
clc
or
movsb
clc
daa
clc
mov
pop
mov
clc
xchg
aam
mov
daa
clc
sbb
clc
push
insl
sahf
das
jns
push
cmp
clc
sub
add
add
dec
sub
jle
clc
inc
clc
sbb
add
mov
clc
dec
ret
clc
popa
add
call
rcrl
clc
sti
dec
fnstsw
lret
int3
cmp
jns
jle
clc
mov
or
add
es
xchg
push
mov
test
clc
aad
add
stos
addr16
jmp
cmpsl
clc
dec
push
pop
repz
clc
cld
icebp
cmp
xabort
cld
xor
add
sub
xchg
or
xchg
sbb
add
add
add
add
sar
inc
clc
mov
add
adc
add
push
add
xabort
add
mov
fldcw
clc
cwtl
sbb
ds
push
add
ljmp
lcall
sbb
daa
clc
push
popf
cwtl
call
add
adc
add
clc
push
pop
int
add
add
clc
sbb
lea
clc
cld
jno
add
pop
data16
or
adc
add
sti
enter
add
cmp
leave
cmc
cmp
mov
cmpsb
clc
pop
int
xchg
mov
clc
pop
pop
xabort
mov
clc
mul
clc
add
add
out
lea
sbb
add
fwait
jbe
ljmp
push
lea
clc
adc
add
xor
add
xor
add
mov
clc
mul
clc
pop
cltd
and
in
sbb
aas
fisubl
add
data16
gs
shlb
cmp
or
clc
cmp
mov
clc
sbb
cld
leave
inc
clc
into
cmp
push
inc
add
sbb
pusha
add
push
fwait
movsb
clc
cwtl
pop
addr16
daa
clc
nop
into
pop
mov
lods
jl
fistpl
dec
sti
pop
cmp
add
pop
inc
add
pop
test
addr16
cld
cmp
or
clc
outsb
mov
clc
bnd
clc
mov
add
clc
inc
add
inc
clc
mov
xchg
and
call
clc
fs
enter
dec
aas
int3
cmp
push
add
sbb
add
xchg
jge
clc
mov
inc
clc
xor
add
add
in
push
add
std
add
add
out
dec
mov
push
clc
ljmp
mov
xlat
jb
add
add
pop
xchg
mov
and
add
cwtl
cmp
push
add
outsl
cltd
dec
jno
add
xor
push
sbb
add
das
and
pop
pop
popa
add
and
add
out
push
cmp
sbb
mov
dec
stos
in
push
loop
lods
ja
add
pop
ffree
clc
xor
add
add
xor
add
xor
add
hlt
sub
or
clc
pop
mov
add
mov
push
add
movsb
clc
gs
pop
fsub
clc
movsl
clc
sbb
clc
inc
clc
std
aam
xchg
mov
pop
in
ds
lret
sbb
clc
adc
add
jecxz
push
add
sub
inc
clc
mov
test
shll
cmp
clc
pop
aaa
sub
fstpt
fstl
adc
add
dec
es
jl
ja
notl
clc
mov
add
xchg
sub
rorb
cmp
shll
add
add
add
cmp
mov
sub
adc
add
and
add
mov
fsub
clc
jb
add
add
xor
add
add
adc
dec
lret
clc
ss
inc
clc
adc
add
fs
lock
xchg
cmp
dec
xchg
push
add
imull
repz
sar
push
nop
imul
add
xchg
test
push
add
mov
add
dec
test
mov
sub
add
pop
loope
fadds
sbb
xor
add
add
xor
dec
xchg
fmulp
mov
push
and
add
add
add
movsb
clc
mov
fcoms
mov
lret
dec
xlat
into
stc
out
das
dec
gs
sti
push
adc
add
add
or
fdivs
stos
xlat
call
mov
clc
ret
or
cld
shl
clc
mov
add
rolb
stc
sub
xabort
ror
dec
test
lret
mov
clc
sti
sar
fcompl
adc
gs
cmpsb
clc
dec
inc
add
scas
dec
pop
cwtl
dec
je
cmp
xor
clc
fcomip
ret
je
clc
add
xchg
mov
sbb
push
pushf
cmc
xor
loopne
sub
add
jae
add
outsl
das
mov
clc
mov
mov
jne
clc
inc
clc
push
add
ret
repnz
clc
adc
add
clc
adc
add
add
pop
std
pop
dec
sub
out
imul
gs
jbe
cmp
sub
xor
add
imul
jno
add
or
mov
add
popf
xor
add
cli
rclb
dec
in
and
clc
cmp
lret
cmpsl
clc
test
clc
xbegin
data16
sub
inc
clc
mov
sub
fisubs
faddp
clc
ret
sbb
clc
sar
inc
clc
test
data16
push
sahf
enter
clc
pop
cltd
pop
jp
clc
clc
or
add
clc
lret
sar
mov
test
inc
add
or
clc
std
xor
add
bound
add
add
test
or
clc
cmp
daa
clc
add
add
push
stos
gs
and
add
clc
outsb
mov
clc
jns
clc
int3
cld
dec
test
pop
mov
test
xchg
int
negl
outsl
scas
testl
lret
cmp
cmp
insb
pop
ds
cli
mov
dec
out
xchg
data16
lcall
add
push
and
arpl
add
add
xchg
or
add
sub
filds
add
clc
xor
xchg
dec
xchg
aad
push
and
add
clc
iret
dec
shrb
add
sbb
add
ds
cmp
push
add
inc
clc
mov
clc
insb
fwait
arpl
add
add
dec
insb
pop
ss
pop
pop
fsts
mov
mov
add
fwait
test
das
jge
es
fisttps
push
add
imul
int
clc
loopne
dec
insl
add
add
clc
and
inc
add
lahf
sysenter
incl
fdivrl
add
sub
sub
daa
clc
mov
and
add
jne
clc
stos
and
add
iret
cmpsl
clc
pop
sbb
push
xchg
dec
stos
or
fsubs
add
stos
inc
clc
jg
push
add
mov
sbb
dec
xor
add
clc
pop
clc
inc
clc
sub
movsl
clc
out
in
jnp
aaa
ljmp
bound
add
clc
inc
add
repz
xbegin
and
add
clc
int3
and
add
clc
rolb
add
out
std
rcrl
inc
clc
add
xchg
bound
add
insl
scas
insl
xabort
pop
sbb
popa
add
pop
sbb
jmp
arpl
add
clc
xor
add
lods
xor
mov
clc
xbegin
xchg
xchg
fdivs
add
inc
clc
pushf
and
xor
clc
push
sbb
jg
outsl
loop
shrb
clc
lret
push
add
lret
stc
flds
add
and
dec
pop
clc
mov
clc
xor
add
add
pushf
pop
arpl
add
lock
rcrl
xchg
mov
add
fsubr
gs
ss
push
in
pushf
pop
xchg
pushl
pop
pop
hlt
push
in
repnz
fwait
loop
stc
pop
clc
inc
clc
enter
jmp
clc
lods
flds
add
push
add
scas
cli
mov
clc
aam
dec
addr16
xor
add
leave
filds
add
clc
iret
inc
add
and
add
clc
in
sbb
in
xchg
gs
add
add
clc
or
push
cmpsb
clc
popa
add
push
add
add
mul
clc
mov
add
or
push
add
sbb
xor
cltd
sbb
clc
or
mov
clc
jns
lcall
outsl
cmp
jmp
sub
outsl
inc
add
ljmp
stc
mov
enter
add
add
clc
and
cmp
jno
add
mov
out
in
inc
add
pop
clc
push
clc
xor
add
sub
push
sbb
fldl
adc
add
inc
clc
sbb
cs
add
inc
clc
movsb
clc
cmpsl
clc
xbegin
cmc
imul
cmc
adc
add
pop
or
es
cmp
jno
add
xor
xabort
mov
jbe
add
scas
push
and
add
xor
lret
jno
add
add
enter
mov
mov
sub
add
out
push
add
repz
jbe
imull
pop
mov
cmp
outsl
add
add
add
clc
bound
add
add
mov
mov
xlat
popf
lock
fwait
adc
add
push
cmp
cld
inc
clc
mov
clc
ja
add
div
mov
ds
push
dec
fldcw
mov
into
in
in
cmp
out
and
add
clc
or
scas
pop
clc
out
push
push
add
es
pop
cmp
jno
add
fldl
clc
fxch
es
mov
cmp
lret
xabort
clc
xor
sti
push
add
out
popa
add
push
movsl
clc
push
sbb
add
hlt
dec
mov
clc
call
dec
sub
add
mov
clc
pushl
filds
add
add
mov
add
add
add
notl
add
jae
add
jne
clc
call
pop
mov
mov
icebp
dec
aam
mov
add
scas
dec
xchg
adc
xabort
addr16
in
pop
movsl
clc
ret
adc
add
clc
or
push
lcall
test
bound
add
clc
jmp
clc
ljmp
mov
adc
add
mov
out
mov
cld
call
cmp
add
mov
mov
clc
xor
add
mov
push
jle
sar
or
sub
clc
cmp
cld
sbb
clc
mov
clc
xchg
mov
clc
inc
clc
xabort
xor
add
add
test
into
daa
clc
pop
pusha
add
push
and
add
inc
clc
pusha
add
push
add
popa
add
mov
dec
xor
add
sar
popa
add
lret
divl
add
stos
adc
sub
clc
jmp
add
add
ss
clc
xor
add
add
add
add
dec
inc
add
or
mov
xor
push
xbegin
jge
add
push
pop
push
clc
xbegin
adc
add
jmp
mov
jge
clc
jae
add
jge
add
out
shl
clc
jg
mov
std
sbb
clc
or
cltd
loopne
add
or
mov
shll
add
out
flds
aaa
stos
gs
shll
clc
xchg
mov
mov
inc
clc
jno
add
add
push
mov
clc
sbb
add
add
push
push
add
gs
mov
inc
add
jmp
notl
add
ret
imul
cmp
int
enter
mov
imul
or
push
outsb
cmp
cwtl
outsl
or
shll
add
xor
add
cli
xor
clc
rorl
clc
cmp
clc
fnstenv
sarb
mov
inc
clc
or
psrad
mov
add
ss
clc
popf
pushf
sbb
rorl
push
xbegin
cld
clc
aam
rorb
or
add
mov
and
clc
inc
add
je
mov
divl
push
js
add
push
jecxz
in
xchg
adc
add
xchg
inc
add
popf
ficoml
clc
mov
je
loope
pop
mov
stos
js
jg
mov
inc
add
pop
xchg
addr16
mov
clc
bound
add
jp
add
jmp
scas
jns
clc
cmp
sar
mov
scas
dec
cmp
add
ss
test
mov
clc
test
movsl
clc
clc
dec
mov
add
daa
clc
xor
mull
add
add
clc
pop
xchg
xbegin
add
inc
add
nop
sar
aad
add
jnp
clc
sbb
adc
test
inc
clc
cmp
jbe
adc
clc
mov
clc
bnd
jb
add
add
push
mov
pop
cmc
mov
clc
in
pop
test
aaa
fwait
mov
jbe
clc
and
add
add
dec
jns
sub
add
mov
clc
clc
mov
cmp
add
mov
add
incb
mov
add
or
clc
into
dec
sbb
clc
call
add
add
mov
es
shlb
clc
pop
mov
lods
pop
test
mov
js,pn
dec
jmp
iret
sub
test
sub
cmp
int3
mov
pop
notl
xor
add
movsb
clc
fisubl
push
cltd
nop
ja
cmp
in
sub
sbb
or
mov
and
out
push
add
hlt
and
add
jg
fs
idivb
mov
cmpsl
clc
and
aaa
push
clc
test
xchg
lods
arpl
add
add
xlat
sub
cmp
add
lahf
imul
fistps
clc
leave
xchg
push
pop
push
icebp
cmp
js
mov
daa
clc
fidivrl
clc
and
xchg
out
add
add
jo
add
clc
loope
dec
or
add
das
pushf
test
sub
aad
clc
insb
test
push
add
mov
movsl
clc
mov
jbe
shlb
add
jae
add
clc
in
dec
mov
clc
fs
mov
clc
cld
dec
or
je
push
push
lcall
clc
in
arpl
add
add
fsubs
jle
out
idiv
pusha
add
pop
out
mov
mov
daa
clc
xor
sub
add
clc
dec
xchg
cmp
or
outsb
scas
jmp
add
add
arpl
add
sub
clc
daa
clc
enter
add
loope
push
mov
bound
add
clc
cmpsb
clc
push
fs
pop
jne
popa
add
fsubr
rorl
shr
mov
xchg
stos
inc
clc
aaa
xchg
jmp
clc
popa
add
mov
repnz
clc
mov
pop
sub
ffree
clc
push
add
push
fcoml
add
inc
clc
mov
divl
add
int3
data16
push
inc
clc
arpl
add
push
clc
out
incl
adc
clc
jl
add
stc
adc
add
jns
add
or
into
sbb
in
popf
out
ds
dec
jae
add
repnz
add
dec
pusha
add
jnp
out
aas
pop
incl
add
pop
aam
scas
imul
add
add
dec
add
add
add
lock
clc
pop
push
xor
add
pop
dec
mov
clc
rcr
cmp
clc
lods
mov
add
scas
call
cltd
das
xor
pop
or
mov
test
repz
add
hlt
addss
jp
adc
cwtl
mov
clc
push
imul
cmc
add
add
gs
and
add
gs
ret
or
clc
dec
pop
pop
and
add
cmp
adc
add
outsl
repz
cmp
clc
stc
in
or
stos
imul
pushf
stos
xor
add
clc
jne
add
repz
clc
mov
clc
xchg
insb
xchg
movhps
cmp
clc
rcrl
and
add
sar
xchg
adc
cmpsl
clc
pop
add
sahf
xchg
testb
cmp
jo
add
int3
lods
add
add
add
clc
fsubr
lock
cmp
mov
clc
jl
pop
clc
mov
sub
pop
iret
scas
inc
add
xor
add
clc
or
sbb
popa
add
js
jecxz
xchg
clc
xchg
es
test
jg
jne
clc
insl
bound
add
add
cld
out
or
stos
push
in
out
and
add
clc
es
cmp
clc
sahf
sbb
lcall
pop
lods
mov
pop
pop
pop
add
adc
xchg
jecxz
iret
pop
dec
icebp
pushf
loop
push
hlt
jge
add
in
sahf
mov
inc
clc
divb
add
clc
cltd
sbb
stos
inc
add
mov
clc
cs
xor
add
scas
pop
sbb
sahf
adc
add
lods
adc
out
or
clc
stc
pushf
pop
inc
clc
hlt
sub
add
xchg
or
mov
mov
clc
shll
add
adc
add
lcall
add
dec
mov
cltd
dec
push
in
or
add
aad
add
sub
cmp
clc
push
mov
cmp
clc
inc
clc
fs
movsl
clc
inc
clc
test
jp
clc
or
add
test
adc
add
je
xor
add
clc
leave
bound
add
clc
icebp
ret
jge
clc
xor
clc
sbb
int3
xchg
pushf
jp
scas
sti
mov
cld
push
bound
add
dec
adc
clc
xbegin
mov
gs
push
xchg
out
icebp
sahf
cld
or
add
add
cmp
clc
mov
add
add
insl
rcll
add
testl
pop
or
add
lock
repnz
dec
ljmp
add
add
data16
jns
xchg
fs
sar
clc
sahf
sbb
clc
repz
add
bswap
movsb
clc
insl
add
sahf
cmp
inc
clc
into
push
push
clc
jge
out
popf
sahf
push
pusha
add
or
clc
push
cmc
mov
es
jae
add
es
fidivs
jecxz
adc
add
cltd
idivb
lret
sbb
push
adc
add
clc
std
push
add
fadd
clc
adc
fisubs
and
repz
cwtl
cld
aaa
cmpsb
clc
jmp
js
dec
aad
clc
cmp
pop
out
lods
adc
add
inc
clc
insb
xchg
test
xor
add
iret
dec
cmp
and
add
dec
jae
add
add
pushf
pop
push
add
out
pop
mov
ret
clc
pusha
add
xchg
imul
add
add
sbb
add
mov
mov
inc
clc
popf
sbb
movsl
clc
sar
clc
add
sar
ret
pop
cmp
sub
mov
sar
xchg
jmp
add
cmp
insl
or
bound
add
cmp
clc
fcmovb
clc
mov
clc
cld
sti
outsl
sub
idivb
add
add
fisubrs
sbb
sar
nop
mov
ljmp
add
pop
lock
add
clc
and
add
call
loope
in
js
mov
clc
or
jb
add
flds
out
jb
add
and
add
pop
gs
enter
cld
sub
clc
jae
add
cmp
xabort
clc
lret
and
add
add
fistpll
adc
add
ret
clc
clc
int3
jne
clc
test
add
add
add
jns
and
add
cwtl
push
add
push
clc
jne
push
inc
clc
jmp
jnp
add
pushf
loope
in
adc
clc
mov
clc
lea
clc
or
mov
clc
adc
add
lods
popa
add
or
dec
pop
xchg
jecxz
sahf
cli
cli
clc
loope
sahf
test
out
push
add
mov
test
mov
push
cmp
outsl
cmc
cmpsb
clc
sub
repnz
inc
clc
inc
add
stos
sarl
inc
clc
xchg
pop
into
fsubrl
xchg
int
cmp
clc
fs
popf
sub
xchg
out
cmp
clc
mov
testb
insl
stc
cmp
clc
test
clc
icebp
push
add
gs
xchg
test
pop
mov
add
clc
cmp
es
fadds
clc
xlat
cld
jne
clc
sub
add
daa
clc
ret
clc
inc
add
and
sbb
xor
add
clc
cmp
add
add
add
and
add
add
popa
add
movsb
clc
mov
frstor
or
mov
and
add
add
lods
out
lea
mov
clc
inc
clc
test
aad
loope
mov
mov
add
jmp
add
pop
jecxz
dec
pop
mov
clc
or
dec
and
add
dec
mov
lret
out
pop
inc
add
dec
in
mov
add
clc
cmp
dec
mov
loop
mov
pop
push
mov
notl
add
mov
clc
jg
clc
sub
clc
ret
clc
pop
xabort
inc
clc
call
clc
outsl
push
add
xbegin
push
add
mov
add
data16
dec
mov
add
cmp
sbb
add
adc
add
jbe
dec
adc
inc
clc
xor
add
clc
fldl
clc
pushf
mov
clc
in
imul
mov
pop
inc
add
pop
fnstenv
add
sub
test
insl
adc
pop
clc
xchg
cmp
outsl
cmpsb
clc
test
addr16
mov
add
mov
aam
sub
lahf
dec
shr
test
js
lret
js
jl
and
cltd
push
loope
dec
adc
add
je
mov
fstl
add
add
jg
add
cmp
negb
push
and
add
add
add
mov
sbb
data16
mov
add
xchg
cli
cli
pop
pop
test
aas
addr16
clc
int3
aaa
push
dec
or
cmp
mov
int3
cmp
lcall
clc
fs
mov
cmp
jne
clc
push
pop
pop
sbb
clc
test
clc
jo
add
xchg
cltd
pop
adc
and
add
add
lret
push
xchg
in
out
adc
fwait
cltd
outsl
dec
lret
and
add
mov
or
fwait
or
add
add
test
mov
in
stc
and
jl
clc
inc
clc
dec
cld
push
add
and
mov
add
add
mov
add
xchg
cmp
pop
ret
add
loope
add
xbegin
or
clc
cmp
repz
test
mov
shlb
adc
add
clc
or
clc
xchg
out
cli
or
add
and
in
popl
xor
add
ret
fstps
clc
or
jne
outsl
and
add
fsubrp
pop
fs
add
add
sub
clc
stos
clc
xor
adc
add
mov
sbb
fisubl
add
or
push
add
add
add
inc
clc
shrb
add
mov
and
add
adc
add
test
sbb
stos
in
mov
pushf
xor
add
ret
clc
adc
adc
clc
lcall
pop
clc
mov
stc
add
mov
loopne
pop
and
cmp
fnstsw
xchg
clc
bound
add
mov
pop
lods
loope
push
pop
push
add
ljmp
add
sbb
inc
clc
out
fbstp
cmp
shlb
clc
jbe
add
pop
clc
cmc
xabort
add
add
cld
inc
add
jmp
bound
add
adc
add
mov
cwtl
cwtl
dec
sar
clc
pop
clc
lcall
ljmp
xchg
sub
ljmp
arpl
add
lcall
cli
xlat
mov
cli
enter
push
clc
into
icebp
push
inc
clc
shrb
and
add
mov
in
push
aas
ficomps
jbe
adc
add
imul
cmp
clc
mov
loop
mov
das
loope
jnp
sbb
pop
mov
add
dec
data16
xor
push
or
add
mov
clc
cmpsl
clc
cld
xchg
jb
add
fbstp
sub
daa
clc
xor
add
lret
mov
loope
popa
add
clc
mov
mov
clc
mov
add
mov
clc
icebp
out
ret
mov
add
js
xabort
rol
clc
ret
mov
jle
pop
or
clc
jae
add
mov
add
dec
std
jecxz
jle
clc
lret
cmp
add
clc
jp
clc
clc
pop
stos
mov
push
repnz
jecxz
aas
pop
inc
add
jp
mov
mov
clc
sub
clc
lods
hlt
adc
add
mov
jb
add
add
add
or
and
add
inc
add
fdivrp
fisttpl
cmpsl
clc
adc
add
add
gs
icebp
in
popa
add
sbb
clc
xor
add
mov
clc
in
cs
daa
clc
popa
add
pop
sub
or
add
push
lods
xchg
push
aam
jae
add
mov
add
out
mov
add
cmpsl
clc
jmp
or
add
popa
add
dec
cmp
in
mov
add
sub
clc
and
cmp
jg
clc
xabort
add
add
xor
fs
dec
stos
sbb
adc
rolb
add
add
push
movsl
clc
or
dec
xor
clc
leave
fcmovnb
clc
cmp
cmpsb
clc
clc
or
outsb
xchg
clc
mov
inc
clc
push
clc
or
repnz
cmp
cmp
inc
clc
bound
add
cmp
clc
imulb
cld
in
cmc
xchg
push
scas
addr16
push
add
add
add
add
add
mov
sbb
pop
pushf
insb
cltd
push
add
jl
iret
ljmp
push
lret
not
cmp
add
sbb
xlat
out
jl
ljmp
cmpxchg
add
xchg
mov
clc
add
add
out
mov
inc
clc
mov
or
loope
int3
jg
push
hlt
clc
inc
clc
adc
mov
out
add
clc
jle
add
xchg
mov
outsl
mov
clc
sti
sar
pop
pop
sar
clc
mov
jg
out
mov
xchg
ds
add
xchg
gs
imul
hlt
int
pop
xchg
fdivrp
inc
clc
jo
add
movsl
clc
sbb
push
fsubrp
mov
add
mov
add
or
sbb
add
add
add
insb
nop
mov
add
daa
clc
insb
clc
sbb
clc
movsb
clc
pushf
aas
pop
add
add
jbe
cli
fadds
add
xor
movsl
clc
cmp
stos
xchg
mov
add
jbe
cmp
add
sbb
std
addr16
lcall
push
clc
iret
sbb
push
mov
mov
test
or
hlt
hlt
cwtl
inc
add
mov
loopne
aas
jge
push
add
push
dec
mov
dec
sbb
sub
mov
add
movsb
clc
push
ret
clc
jp
cmp
xbegin
aas
jmp
pop
sub
sub
leave
aaa
adc
add
scas
xbegin
pop
pop
or
add
push
popa
add
popf
inc
add
flds
clc
out
filds
je
add
adc
add
clc
shlb
test
jg
add
pop
call
cmp
cmp
jb
add
jg
sti
xor
add
add
fwait
jmp
clc
repnz
xor
add
push
add
and
add
cmp
adc
add
clc
and
add
add
clc
mov
and
add
into
add
jne
jle
clc
data16
xor
add
clc
data16
or
mov
and
add
add
clc
cmp
imul
jnp
add
mov
push
clc
stos
int3
sub
add
aam
jge
inc
clc
aad
or
clc
notl
add
clc
jp
dec
clc
ret
add
dec
mov
ret
clc
lock
add
cmpsl
clc
sbb
clc
stos
xchg
ret
clc
ljmp
lret
loope
notl
pop
loop
dec
jnp
mov
add
xchg
push
add
lods
ljmp
add
xabort
out
mov
cwtl
pop
add
cs
bound
add
leave
lcall
lret
add
repz
add
pop
mov
cmp
sbb
clc
out
fisttpl
add
adc
add
add
clc
data16
inc
add
fstpl
add
xchg
loopne
mov
clc
sub
fwait
adc
add
clc
test
sbb
add
into
psubd
imul
mov
cmp
into
stc
repnz
clc
cmp
xchg
mov
jo
add
dec
jnp
clc
jp
sbb
add
push
inc
add
dec
dec
pop
or
and
out
xor
add
add
ja
clc
cmp
clc
cmpsl
clc
cs
inc
add
mov
clc
ss
in
insl
test
xabort
aad
cmc
outsb
shrb
sti
and
add
test
fs
inc
add
in
xbegin
add
add
push
add
aaa
popf
mov
xchg
testb
in
dec
mov
pop
fs
sbb
clc
jbe
imul
clc
xor
clc
movsb
clc
stos
cmc
sub
xchg
clc
cld
and
add
push
ds
arpl
add
pusha
add
sti
lret
pop
clc
stos
ljmp
mov
mov
jp
testl
pop
dec
repnz
imul
add
test
clc
add
add
xor
add
sub
clc
cmp
clc
bound
add
inc
clc
nop
rcrb
add
cmp
sbb
dec
mov
or
clc
pop
xor
add
out
dec
sbb
add
pop
ds
add
mov
nop
lcall
add
sbb
add
mov
jecxz
and
add
add
xchg
arpl
add
clc
push
clc
gs
test
outsl
mov
push
add
jg
leave
sbb
fidivl
add
lock
fwait
pop
inc
add
pop
sbb
cmp
clc
inc
add
stos
call
clc
dec
fsubrs
daa
clc
jge
clc
dec
mov
push
add
nop
lock
stc
scas
daa
clc
das
popf
mov
clc
mov
mov
cmp
add
jg
lret
xlat
bound
add
inc
add
pushf
and
mov
add
pop
clc
or
sbb
clc
sbb
jl
add
ljmp
add
add
xchg
push
jle
clc
sbb
mov
in
sub
xor
add
inc
add
inc
add
ds
add
add
add
jo
add
xor
clc
mov
filds
push
add
pop
fucom
clc
lret
out
mov
ficompl
inc
add
adc
add
clc
into
lcall
pop
fwait
mov
adc
add
dec
ljmp
repz
clc
cmp
adc
add
fwait
iret
test
pusha
add
push
add
sub
pop
add
shrb
push
xchg
cmp
clc
jae
add
clc
daa
clc
cmp
clc
sub
clc
inc
clc
int
cmp
arpl
add
xchg
int
lock
add
lods
cmp
cmovle
pop
xchg
or
int
negb
nop
test
mov
push
add
add
clc
push
add
pop
popa
add
mov
add
daa
clc
push
add
sbb
or
pop
bound
add
add
bound
add
add
mov
add
push
xabort
cmp
clc
or
add
jp
mov
clc
push
add
outsl
enter
clc
push
je
clc
jo
add
add
aam
and
or
sti
jbe
clc
loopne
mov
add
inc
clc
xor
add
clc
clc
int
shlb
jmp
mov
pusha
add
xchg
inc
clc
jle
clc
push
mov
movsb
clc
movsl
clc
cmp
clc
scas
xchg
aam
fisttps
cli
nopl
add
jnp
and
add
add
add
inc
add
cwtl
mov
test
jb
add
or
clc
bound
add
dec
cltd
sti
xor
clc
fwait
push
cmp
add
cmp
shlb
adc
add
add
insl
iret
fdiv
movsl
clc
sub
add
sub
clc
push
clc
notb
add
xchg
or
add
repnz
clc
outsb
popa
add
inc
add
cmp
add
push
add
stos
jae
add
in
cmc
mov
in
push
add
dec
or
add
into
mov
lods
sbb
sub
add
jmp
add
xchg
jg
cmp
clc
jge
cmp
jp
stc
fwait
xchg
sbb
cmp
add
sbb
stc
ljmp
push
popa
add
cmpsb
clc
std
xchg
adc
jle
pop
sub
jl
sti
add
pop
xchg
pop
sub
sar
mov
xchg
or
add
loop
sub
add
sbb
scas
in
pop
filds
pop
inc
add
jl
xchg
daa
clc
scas
call
mov
clc
mov
scas
fwait
stos
mov
push
clc
out
mov
mov
jne
lea
clc
je
arpl
add
cltd
add
add
clc
mov
xchg
popf
ficoms
scas
adc
pushf
pop
in
xchg
std
inc
add
jmp
sbb
adc
add
pop
clc
sub
clc
cltd
adc
mov
clc
pusha
add
pop
inc
add
xor
add
decl
mov
sti
cmp
add
pop
mov
mov
test
mov
pop
mov
add
movsl
clc
clc
pop
ds
add
add
add
clc
ja
stc
inc
clc
lret
push
xchg
add
add
add
xchg
test
in
cld
pop
call
xchg
call
mov
and
clc
outsb
jp
int
add
fstps
bnd
inc
add
lret
clc
es
stos
cltd
xbegin
insl
fsts
sar
jbe
xchg
cmp
clc
sub
mov
xor
clc
data16
add
add
lock
add
jne
add
or
add
or
in
loop
jne
mov
add
clc
fimull
sti
js
add
fstl
jne
xchg
popf
cmp
add
push
ds
in
mov
add
stos
je
push
clc
pop
xchg
sub
add
push
push
mov
mov
xchg
sub
add
cmp
ret
clc
adc
add
xbegin
sbb
inc
add
outsb
in
in
stc
inc
clc
inc
add
repz
and
mov
test
mov
popa
add
inc
add
and
aam
jo
add
aas
push
xchg
jb
add
jae
add
add
mov
mov
clc
cmp
xor
add
add
outsb
fnsave
or
std
xor
add
xchg
jo
add
add
push
add
js
mov
ljmp
inc
add
shrl
rolb
add
cmp
out
xchg
fstpt
out
push
sar
repz
push
add
ret
clc
mov
add
insl
int3
aad
add
mov
std
jbe
mov
xchg
xchg
lcall
or
clc
repnz
add
add
add
and
mov
pop
incl
add
loop
inc
clc
adc
add
das
icebp
jb
add
bound
add
lods
hlt
xabort
call
mov
sarl
jmp
clc
sbb
xchg
mov
add
dec
rcrb
jmp
not
mov
decb
in
xor
add
fisubrl
mov
and
add
mov
int
cltd
and
outsb
sti
sbb
add
ret
inc
add
lods
ss
mov
movsb
clc
data16
push
jmp
adc
add
pop
xor
add
pop
clc
mov
add
scas
arpl
add
clc
or
add
add
clc
stos
sub
mov
add
adc
add
aad
push
jns
clc
test
push
xchg
sub
std
xor
hlt
add
out
imul
sbb
clc
mov
adc
add
dec
jmp
clc
xchg
dec
repz
add
fimuls
int3
out
mov
jmp
clc
mov
jnp
pushl
add
add
add
mov
inc
clc
stos
jecxz
pop
shlb
add
int
clc
aas
dec
pop
sbb
sar
aad
or
sub
add
mov
fldl
add
add
add
pop
dec
test
insb
loop
sar
cmp
xor
xbegin
sahf
mov
clc
jl
add
add
add
add
xchg
data16
mov
adc
popl
dec
scas
push
add
hlt
dec
xchg
fsincos
shrb
icebp
mov
adc
add
clc
push
push
add
jbe
cmpsb
clc
in
fidivrl
clc
nop
mov
mov
cs
clc
add
add
add
add
xchg
int
add
idivb
cmp
int
arpl
add
add
and
add
clc
mov
aaa
mov
fs
jns
mov
xchg
inc
add
xchg
adc
add
add
adc
outsb
fmuls
xor
add
pop
clc
jnp
sub
jb
add
clc
rorb
clc
shrl
inc
add
out
push
dec
lcall
ds
out
pop
icebp
cmpsl
clc
adc
add
jg
mov
jbe
clc
cli
pushf
dec
mov
add
cwtl
dec
pop
test
insl
xchg
jns
add
add
add
outsb
adc
add
jl
add
mov
jae
add
clc
mov
clc
loope
popa
add
fmull
dec
scas
mov
out
xor
in
repnz
clc
rcrb
add
xchg
std
popl
clc
cmpsl
clc
nop
add
add
imul
clc
inc
add
insl
movsb
clc
es
pop
frstor
jmp
add
fstps
inc
add
jp
sbb
add
sub
add
insl
in
cmp
clc
mov
add
or
sti
stos
pop
xchg
cli
outsb
gs
sub
add
pop
jmp
ds
jne
jbe
mov
jae
add
push
ret
clc
push
mov
icebp
adc
pusha
add
cmp
gs
add
add
clc
mov
mov
inc
add
pop
clc
into
pop
or
and
add
stos
mov
pusha
add
push
fidivrl
push
stc
outsl
xor
add
add
lahf
jle
add
xchg
and
add
sti
es
jno
add
add
mov
add
push
clc
xchg
cltd
fs
push
repz
add
pop
fwait
push
add
add
add
popa
add
enter
xbegin
jnp
mov
in
mov
add
dec
and
mov
add
clc
cltd
sar
loopne
push
arpl
add
xchg
gs
inc
clc
enter
clc
loop
std
ret
add
inc
add
addr16
dec
jge
dec
lcall
fimuls
pop
scas
push
lods
mov
push
clc
sub
mov
popf
pop
mov
fs
rcll
sbb
clc
cmp
jmp
clc
lret
notl
mov
add
pop
clc
mov
ret
mov
add
pmaxsw
pop
add
pop
push
add
pushf
adc
pop
dec
loop
mov
and
add
lret
xor
add
dec
outsb
pop
pop
add
inc
clc
jecxz
dec
xor
xor
add
dec
add
add
pop
clc
pop
je
push
add
inc
add
jecxz
lcall
enter
clc
arpl
add
sub
add
clc
cmp
push
jmp
mov
add
fstp
add
add
incb
in
mov
mov
repnz
mov
loop
aas
es
add
arpl
add
push
fnsave
xlat
jb
add
jmp
mov
clc
negl
push
dec
sar
clc
repz
sahf
and
add
clc
test
stos
mov
and
add
fsubrl
sub
clc
mov
inc
add
xchg
shlb
add
mov
or
test
movsb
clc
fldl
clc
jns
stos
popl
add
std
jecxz
jbe
add
shlb
add
clc
addr16
mov
data16
stc
inc
clc
mov
lods
jge
mov
clc
and
add
sar
clc
mul
clc
ja
add
mov
imul
jae
add
add
add
das
sbb
jnp
clc
adc
clc
jne
mov
inc
clc
mov
and
add
xchg
dec
out
mov
cs
dec
sbb
aaa
sub
or
add
mov
test
add
cmc
inc
clc
mov
clc
roll
lods
imul
clc
test
sahf
jb
add
clc
out
lods
xchg
imul
cmp
xor
add
add
popa
add
jns
clc
pop
fistpl
add
loopne
dec
pop
and
xchg
aad
inc
clc
push
add
call
clc
push
add
xlat
and
xor
test
clc
cs
add
sbb
bound
add
mov
in
fists
mov
push
add
cmp
mov
xor
mov
clc
gs
fldcw
fimuls
clc
test
inc
clc
repnz
sbb
inc
add
stos
insb
cmp
add
clc
aam
clc
mov
or
add
or
xor
add
xchg
pcmpgtw
cmpsb
clc
add
add
movsb
clc
sbb
bound
add
clc
and
fidivl
cmp
test
imulb
clc
std
sub
xchg
ja
clc
dec
adc
add
out
or
sub
dec
stos
daa
clc
mov
clc
push
clc
cmp
clc
fsub
clc
out
inc
add
in
push
add
sbb
jle
mov
add
or
dec
sub
js
js
ret
clc
stos
imul
mov
or
add
pop
cmc
jge
cmp
add
pop
ds
mov
clc
xor
add
xchg
xchg
sub
into
sbb
cld
inc
clc
repz
rcrb
ljmp
clc
mov
mov
or
pusha
add
pop
dec
or
clc
or
clc
test
clc
test
pusha
add
nop
jp
inc
clc
aad
inc
add
add
mov
xor
add
clc
lods
imul
cmp
and
cmpsl
clc
je
xlat
dec
loope
cmpsl
clc
scas
out
push
add
mov
in
rcrb
daa
clc
aaa
xabort
clc
inc
clc
fidivrs
clc
insl
push
mov
stos
and
jbe
clc
sub
mov
js
clc
pop
inc
clc
loope
sbb
int3
sub
inc
add
and
fimuls
movsl
clc
add
ja
add
sub
pop
fs
dec
pop
cmp
sub
jne
ficoml
clc
xabort
mov
nop
or
scas
adc
add
in
fs
jnp
sub
clc
dec
test
xchg
xchg
das
sar
sbb
mov
adc
add
aas
sbb
ljmp
and
add
sar
ret
clc
xor
add
add
popa
add
fstpl
add
nop
clc
daa
clc
and
add
pop
push
add
xchg
loop
and
add
idivl
add
add
add
in
xchg
cmpsb
clc
xchg
punpckhwd
sarb
jb
add
add
addr16
inc
clc
mov
test
clc
push
clc
lods
add
ret
clc
fdivs
popa
add
pushf
nop
sub
test
iret
and
add
mov
xor
add
cwtl
sar
clc
xchg
pop
sar
mull
adc
add
clc
inc
clc
shlb
pop
mov
nop
repz
clc
dec
pop
cmp
jne
push
clc
ret
clc
cmc
mov
push
sbb
xor
add
add
or
add
mov
add
loop
inc
clc
mov
in
arpl
add
clc
imul
add
cmp
xor
and
mov
dec
pop
add
add
clc
lcall
scas
call
clc
outsl
test
div
pop
mov
stos
adc
add
clc
sbb
and
add
clc
xchg
jg
clc
sub
jle
in
out
push
add
inc
add
aaa
inc
clc
loopne
mov
add
add
add
rorb
and
add
xor
add
add
mov
and
add
clc
mov
add
es
xchg
mov
add
pop
sbb
clc
into
adc
clc
js
or
xor
add
add
inc
clc
pop
aaa
out
cmp
cmp
in
js
clc
popf
add
in
popa
add
xchg
add
add
test
add
mov
mov
cwtl
pop
fcomi
loope
xchg
and
add
clc
cltd
xlat
enter
arpl
add
lahf
stc
add
add
std
lods
in
inc
clc
cli
sbb
mov
lret
dec
lock
clc
out
mov
inc
clc
ja
xchg
imul
or
add
add
in
jne
dec
jbe
pop
fldl
cwtl
ret
add
mov
ljmp
ja
push
in
outsb
negl
std
cmp
addr16
nop
sar
push
adc
add
clc
mov
clc
icebp
fwait
aad
cmp
sbb
add
fstpl
and
add
dec
mov
or
add
jp
cmp
pop
icebp
mov
pop
clc
addr16
rcrb
cmc
mov
clc
call
stos
lods
mov
xchg
mov
add
add
notb
nop
je
sbb
xlat
shll
and
push
enter
mov
stc
and
add
shll
fisubl
add
mov
clc
aad
cmp
notb
add
icebp
push
jne
mov
jge
or
je
mov
add
xor
add
clc
push
cmc
mov
clc
or
fstps
add
nop
mov
aad
add
pop
arpl
add
add
add
xchg
mov
loop
cmp
cmp
shlb
add
incb
add
push
add
xor
add
shll
push
jb
add
clc
push
add
jnp
xchg
add
add
and
add
jl
add
insl
cltd
dec
mov
jl
add
inc
add
sar
xchg
jl
add
dec
cmp
add
in
cmc
loope
sub
sbb
add
cmp
mov
outsl
jns
clc
cvtpi2ps
out
scas
pop
mov
clc
cmp
clc
jne
push
add
roll
call
jno
add
xchg
push
add
ja
push
add
fwait
push
add
sbb
stc
stc
movsb
clc
fs
or
add
shll
daa
clc
mov
inc
add
cmp
clc
pop
icebp
imul
enter
data16
xor
shlb
add
jecxz
addr16
cli
lcall
add
pop
arpl
add
popa
add
push
sbb
cmp
in
dec
xor
add
add
xor
add
or
cmp
clc
push
mov
icebp
cwtl
or
clc
add
add
clc
cmp
out
fldenv
sub
dec
gs
mov
pop
xlat
cs
add
ror
mov
jnp
clc
movsl
clc
movsb
clc
mov
je
add
vmovntps
in
and
add
cmc
mov
cmpsl
clc
test
add
clc
pop
pushf
cli
bound
add
clc
dec
mov
clc
pop
xor
repnz
mov
and
add
xbegin
cmp
cmp
mov
lea
test
add
add
jge
clc
cltd
jecxz
xchg
xor
clc
sub
add
jp
jno
add
add
clc
jae
add
out
jnp
fildll
stos
fisubrs
lret
nop
jno
add
insl
ja
pop
fs
jne
lret
xchg
pop
sbb
stos
rclb
dec
mov
clc
insb
sub
clc
xor
mov
clc
jne
mov
cmp
mov
stos
adc
add
add
clc
mov
add
jecxz
testb
pop
xchg
mov
dec
push
repz
cmpsl
clc
adc
add
pop
mov
pop
fsubs
mov
loope
push
gs
xchg
jb
add
add
pop
clc
fldenv
clc
stos
or
in
mov
fwait
push
add
cld
and
add
das
test
add
fstps
clc
mov
jmp
add
shll
clc
adc
xchg
mov
test
or
add
cmpsb
clc
and
sub
insb
sub
loop
cmp
je
push
add
mov
test
clc
mov
dec
ror
dec
out
push
inc
add
int
clc
or
pop
mov
clc
fcomip
das
lret
clc
fistpl
pop
incb
sbb
jne
push
nop
xor
add
add
add
clc
jecxz
lahf
mov
and
pop
clc
jbe
inc
clc
or
clc
xor
sbb
add
bound
add
clc
add
or
clc
push
add
mov
clc
and
add
add
push
add
arpl
add
data16
stos
imul
addr16
mov
aas
popa
add
adc
clc
xchg
jecxz
and
sbb
and
add
push
out
cmc
push
in
xor
add
sub
jo
add
ret
push
or
mov
xchg
mov
addr16
and
icebp
cmc
push
pop
scas
mov
add
repnz
clc
arpl
add
add
rcr
and
daa
clc
lahf
aaa
mov
pop
enter
clc
in
jo
add
add
add
add
lcall
add
push
xlat
ja
scas
and
enter
add
sub
push
dec
pop
cmp
add
inc
clc
fadds
pop
clc
mov
lock
cmp
clc
push
sbb
or
add
add
sbb
and
add
pop
inc
add
mov
mov
xlat
sub
xchg
fsts
lret
lock
cmp
sahf
xbegin
loopne
out
fnsave
add
mov
add
call
std
mov
je
lea
inc
add
cs
cmp
popa
add
rcl
cmp
mov
jnp
outsb
push
gs
cmp
clc
push
add
pop
mov
jle
loopne
adc
adc
add
fistpl
mov
clc
add
add
clc
ss
insb
dec
es
mov
clc
std
imul
jns
add
cmpsl
clc
sbb
test
das
into
sahf
nop
arpl
add
icebp
xchg
xchg
sbb
add
inc
clc
cmp
xchg
sti
sbb
jb
add
mov
clc
ret
clc
mov
and
add
cmc
aaa
cmp
pop
cmp
jp
clc
lcall
sub
add
jo
add
imul
clc
insb
or
shll
lret
push
adc
add
clc
xor
cmp
add
push
add
dec
sar
and
add
out
mov
sbb
clc
dec
push
add
sub
add
add
add
adc
inc
add
fildl
mov
add
mov
inc
add
xor
add
add
and
add
ds
test
out
push
add
push
je
cli
pop
iret
sub
es
sub
clc
cli
jae
add
clc
mov
add
sbb
sub
jp
xchg
enter
mov
cmp
fwait
pop
mov
xchg
jle
sub
js
clc
add
push
jge
clc
dec
fnstcw
dec
xchg
xor
add
clc
mov
out
cmp
clc
add
mov
or
add
das
dec
adc
add
aas
inc
add
shlb
out
mov
cmp
push
mov
add
dec
xchg
sbb
clc
mov
fprem1
insl
fwait
out
sbb
clc
sub
xor
sbb
mov
roll
add
cmpsl
clc
or
mov
clc
xor
add
add
add
add
lret
mov
add
jns
or
ljmp
add
mov
add
jmp
cmp
xor
fwait
data16
cmp
clc
aaa
repnz
add
movsl
clc
lahf
call
mov
dec
adc
mov
leave
icebp
sub
rcr
clc
lods
cmp
loopne
mov
add
add
adc
add
push
scas
cli
dec
dec
jl
dec
int
dec
dec
xchg
int
add
popf
outsl
dec
bound
add
enter
mov
mov
pop
mov
fistps
idivb
shrl
imul
dec
cmp
loopne
adc
add
clc
dec
xchg
sbb
sbb
or
clc
sahf
js
clc
in
ljmp
test
repnz
loop
push
add
popa
add
cli
mov
clc
pop
cmp
aam
clc
iret
jo
add
cmc
or
sub
dec
in
scas
or
std
imul
dec
push
pop
out
add
add
add
add
int
mov
inc
add
or
xor
add
mov
mov
imul
decb
mov
inc
clc
mov
mov
clc
enter
or
add
dec
cmpsl
clc
loop
ret
mov
mov
mov
clc
mov
clc
jg
clc
dec
xabort
xlat
inc
clc
cmp
clc
gs
and
sub
clc
sar
ret
clc
je
clc
stos
lahf
lods
out
cmp
test
lock
sar
je
int3
iret
push
add
jnp
shlb
add
add
lea
js
int
cmp
inc
clc
xchg
push
or
cmp
clc
into
mov
pop
jnp
leave
dec
cld
mov
cmp
clc
clc
xchg
in
inc
clc
testl
jge
clc
jp
clc
das
out
xchg
sub
add
or
clc
xor
add
cmp
hlt
popf
mov
add
dec
jecxz
jno
add
add
clc
sar
cmp
test
add
cmpsl
clc
jp
clc
dec
shld
in
je
jne
icebp
cmp
clc
push
jecxz
mov
bound
add
mov
nop
cltd
sbb
add
jp
mov
adc
inc
add
pop
dec
jb
add
add
adc
add
add
mov
add
add
add
jnp
mov
and
push
iret
push
add
pop
clc
cmp
fstps
mov
cmp
insl
cwtl
xchg
pop
and
add
add
pop
loop
fmul
lret
cmp
push
add
sar
clc
das
lock
add
add
add
add
lods
add
mov
add
clc
aaa
fstl
rorl
sub
cmpsb
clc
cltd
jae
add
add
shr
sbb
mov
iret
mov
clc
or
clc
out
or
clc
decb
add
rdtsc
add
push
add
int3
scas
jns
inc
add
popf
ret
clc
call
add
and
add
push
mov
ret
clc
xabort
mov
clc
aaa
mov
clc
ja
and
add
clc
push
clc
cmpsl
clc
int3
mov
add
push
sar
pop
adc
add
add
cmp
inc
clc
cmp
xor
testb
clc
or
add
clc
add
lret
clc
bound
add
xchg
sbb
add
and
mov
add
aad
or
and
add
mov
mov
clc
jnp
in
xor
add
out
jno
add
add
push
dec
xchg
jp
insl
mov
add
fistps
xor
add
mov
xlat
lcall
mov
clc
mov
add
in
int
xbegin
push
xchg
or
sbb
add
pushf
repz
inc
clc
in
mov
clc
das
bound
add
cwtl
roll
mov
clc
cmp
add
leave
cmp
pusha
add
out
hlt
mov
jo
add
inc
clc
xbegin
add
cmp
adc
add
dec
or
add
mov
scas
bound
add
sub
add
ja
rcll
add
jl
clc
lock
add
mov
xor
add
clc
leave
jno
add
pop
mov
add
and
add
cmp
adc
add
clc
sbb
mov
popa
add
push
lods
mov
add
xor
add
clc
or
jp
repnz
sub
add
adc
add
clc
cwtl
add
add
stc
cltd
mov
add
clc
inc
clc
ds
jle
into
ja
jl
clc
and
add
xchg
aaa
pop
int
sub
aas
adc
mov
dec
mov
clc
mov
add
push
das
and
add
xchg
lahf
lcall
fcoms
mov
pop
insb
out
dec
xor
add
clc
xchg
sbb
add
sbb
and
mov
clc
mov
pusha
add
mov
aad
add
xchg
push
add
jno
add
pop
add
add
push
xabort
pop
jae
add
xchg
adc
add
clc
xlat
sti
or
dec
xor
add
jae
add
clc
push
add
adc
add
add
add
xchg
mov
stos
mov
cmpsb
clc
daa
clc
aad
out
dec
dec
out
jno
clc
mov
add
pop
ret
clc
popa
add
data16
mull
add
sbb
lods
cmp
xor
ret
clc
jge
clc
cmp
sub
add
pop
adc
clc
cmp
add
push
add
sub
xor
add
clc
int3
add
out
dec
loop
push
xor
in
int
clc
gs
and
add
jns
inc
clc
rclb
mov
clc
dec
cs
in
movsb
clc
ret
adc
add
in
sti
lods
or
add
add
shrl
cmp
pop
mov
cs
add
std
mov
pop
imul
add
add
jb
add
inc
clc
pop
pop
push
push
aaa
jo
add
movsb
clc
jae
add
mov
repz
pop
jle
data16
test
lret
lahf
xbegin
clc
test
dec
test
in
sub
data16
jmp
vrsqrtps
add
add
outsl
insl
fimull
clc
nop
repz
ss
cmp
mov
movsl
clc
ss
cs
clc
sub
xor
or
imull
dec
leave
mov
loope
sbb
clc
add
add
clc
sub
xchg
mov
aad
xor
pop
fs
pop
stos
out
test
lods
gs
lods
sub
or
inc
clc
adc
or
sbb
fistpl
clc
dec
lcall
clc
fwait
inc
clc
outsl
pop
xchg
lods
pop
jnp
clc
sub
mov
ret
clc
mov
aam
adc
add
test
add
add
add
mov
mov
pop
dec
jecxz
incl
inc
clc
jne
add
inc
add
icebp
int3
push
add
js
clc
pop
cmpsl
clc
sub
out
inc
clc
gs
mov
inc
clc
call
leave
es
dec
sbb
fwait
lcall
test
jp
lods
bound
add
add
xlat
and
add
cltd
vmovups
add
add
adc
add
jl
dec
jg
cmp
sub
mov
dec
ds
mov
scas
fdivs
cmp
jne
pop
clc
xchg
cmpsb
clc
test
cmp
mov
mov
std
popf
xchg
and
add
clc
int3
push
add
cmp
clc
xchg
cmp
shll
add
add
clc
cmp
out
insb
out
cmp
enter
add
add
mov
clc
adc
add
push
add
arpl
add
icebp
in
and
add
aaa
pop
mov
sar
and
add
sti
in
xchg
and
add
mov
cmp
add
fildl
pop
sahf
sbb
or
add
push
xor
cmp
clc
mov
clc
popa
add
shrb
incl
add
add
sbb
clc
sbb
outsb
add
clc
dec
jecxz
cltd
es
and
add
shlb
ja
clc
and
or
arpl
add
clc
scas
pop
fcmove
adc
dec
ficoms
fs
sar
add
jl
clc
pop
mov
lahf
dec
clc
adc
add
sub
in
out
and
add
add
repnz
pop
add
mov
clc
xchg
cltd
test
clc
and
add
ret
add
cmp
and
add
or
mov
clc
aaa
fmuls
xor
mov
cmp
push
xor
add
fnstsw
clc
lcall
icebp
out
vandps
repz
js
push
sar
adc
add
add
clc
push
add
push
add
jg
pop
cmp
clc
shl
clc
sarl
add
mov
add
adc
add
add
clc
sahf
xor
inc
add
jl
clc
es
jl
cmpsb
clc
push
in
xor
add
in
adc
add
data16
outsl
insb
xor
add
jp
xlat
adc
add
cmp
inc
clc
ljmp
leave
fs
xchg
scas
inc
clc
sub
cmp
fs
mov
lcall
and
inc
add
xchg
call
add
add
add
in
pop
xor
add
push
lea
add
xabort
pop
insl
imul
xchg
or
adc
add
push
cmp
xchg
orps
daa
clc
clc
jg
add
mov
gs
lahf
jns
xor
add
add
pop
das
mov
bound
add
cmp
fwait
inc
clc
repnz
popa
add
ljmp
repnz
pop
pop
jmp
cmp
xbegin
loopne
jo
add
adc
add
sbb
add
clc
ja
fistps
add
data16
cmp
dec
mov
add
out
add
add
add
jle
clc
scas
hlt
cmp
jbe
dec
inc
add
fadd
clc
mov
add
add
jle
clc
dec
push
pop
rcr
cmp
add
ds
lcall
push
jl
es
cmc
mov
mov
cmp
clc
ja
clc
and
xor
adc
scas
rcrb
jns
sti
fsubrs
add
jo
add
add
push
add
cmp
pop
or
xchg
imul
xchg
sar
add
add
or
or
adc
inc
clc
jle
push
xlat
fiadds
add
lcall
ds
aam
jmp
add
jb
add
add
mov
out
push
mov
mov
jb
add
mov
clc
xor
add
clc
push
clc
inc
clc
shr
sub
add
mov
fsts
add
add
add
xor
add
aad
xchg
add
add
cmp
cmp
es
jne
add
adc
add
add
push
and
add
clc
xor
add
xchg
fbld
add
cmp
clc
cmpsb
clc
int
daa
clc
inc
clc
ja
sub
lret
add
pushf
shlb
dec
testb
rorl
clc
dec
gs
nop
popf
vunpcklps
cmp
stos
out
inc
add
fistpl
add
add
mov
sub
add
cmp
xor
add
lock
add
std
sahf
mov
lret
adc
add
mov
popa
add
std
xor
add
test
fsubrp
sub
push
loope
mov
xbegin
pop
xlat
stos
enter
clc
bound
add
cmpsl
clc
lea
mov
sti
cmp
cmp
or
add
cmp
xchg
jnp
lods
add
add
imul
aam
adc
add
test
clc
mov
adc
add
clc
in
ret
add
add
test
cmp
cmpsb
clc
pop
mov
xchg
mov
sahf
adc
add
and
add
cmp
add
in
in
dec
pop
and
add
clc
jle
lret
test
add
sbb
rcr
clc
sub
lret
push
lret
add
clc
gs
jbe
mov
in
fcompl
jne
mov
push
and
pop
pushf
outsl
adc
add
adc
ljmp
lret
out
dec
icebp
loope
xbegin
cmp
add
jno
add
hlt
repz
hlt
or
add
in
xlat
fdivp
push
sbb
adc
add
clc
pop
clc
fyl2xp1
inc
add
fwait
cmp
clc
rcll
add
mov
cmp
push
add
xor
add
in
pop
out
hlt
jecxz
sbb
aaa
pop
in
xor
add
add
xchg
mov
and
add
adc
add
mov
mov
clc
rcrl
clc
mov
add
out
fnstcw
add
aas
xor
add
pop
cmp
sbb
add
adc
add
pop
sub
add
clc
sti
fsubs
add
pop
xor
add
sub
push
or
xabort
das
inc
clc
cmp
add
push
mov
add
inc
clc
and
add
cmp
push
aad
add
fwait
cmc
jmp
add
iret
enter
fdiv
sub
cmp
dec
push
clc
popa
add
lret
movsl
clc
inc
add
mov
fadds
add
and
add
xabort
jbe
adc
add
add
cmp
sbb
mov
pop
clc
inc
clc
lock
add
mov
fs
fists
cmc
lret
add
xor
add
add
ljmp
in
bound
add
add
adc
add
push
add
shll
and
add
sub
inc
clc
mov
xor
add
out
decb
jge
sub
or
divb
add
add
insb
icebp
sar
addr16
xor
add
clc
sar
loope
add
add
mov
xor
add
add
cwtl
fdiv
mov
sub
imul
cmp
outsb
pop
push
add
out
mov
popa
add
ret
insb
xchg
cmp
mov
or
lahf
js
add
sahf
push
or
mov
mov
add
cs
inc
add
movsb
clc
pop
cmp
clc
mov
ljmp
add
pop
jb
add
sub
fisubrl
shrb
push
add
push
add
lods
popa
add
sub
jp
scas
icebp
fwait
mov
sub
pop
mov
sub
add
xor
add
clc
jbe
decb
movsl
clc
loopne
mov
add
jbe
add
cltd
dec
mov
add
fs
jmp
add
push
cmovae
add
add
add
sbb
clc
push
jg
cmp
clc
xor
add
clc
dec
xor
add
clc
data16
ljmp
xabort
add
xor
ret
clc
add
add
clc
in
movsb
clc
inc
add
lock
adc
add
clc
or
add
xor
add
pop
clc
in
fadd
clc
divps
sbb
adc
add
clc
mov
shlb
jge
jmp
push
add
jno
add
xchg
pop
dec
xor
add
outsl
imul
add
cltd
fadds
add
jae
add
fiaddl
add
sub
or
scas
mov
pop
adc
add
add
cltd
scas
fwait
cmpsb
clc
popa
add
jecxz
sub
sarl
sbb
leave
push
cli
jb
add
std
push
jae
add
bound
add
xor
add
add
mov
lods
pop
cmpsl
clc
arpl
add
push
sbb
loopne
adc
add
cmp
scas
das
jbe
clc
or
sbb
lock
lock
add
jecxz
xor
add
push
jnp
sub
mov
dec
jecxz
clc
push
ds
xchg
lea
sbb
sbb
xchg
jmp
fmull
int
cmp
mov
cltd
or
add
cwtl
aad
add
push
sahf
push
scas
jl
push
clc
cld
imul
xor
add
stc
xlat
stos
add
add
add
sub
clc
mov
mov
clc
rep
add
add
add
stc
inc
clc
clc
decl
iret
mov
pop
pop
push
add
add
add
icebp
mov
or
dec
pushf
mov
add
clc
xchg
add
xchg
sbb
add
cmc
lock
add
ds
add
add
clc
leave
jecxz
cmp
add
bound
add
clc
bound
add
imul
clc
nop
push
add
and
clc
fstpt
clc
sbb
sbb
orps
stos
inc
clc
push
add
das
xchg
push
out
mov
jp
xchg
loope
add
push
adc
scas
dec
movsb
clc
into
movsl
clc
mov
cmpsl
clc
js
fists
imul
stc
aam
es
jmp
cwtl
sbb
out
mov
test
clc
mov
test
cld
lret
mov
cmp
add
mov
into
pusha
add
mov
jbe
clc
icebp
mov
pop
jb
add
adc
add
xchg
pop
push
inc
clc
xbegin
add
hlt
xchg
xchg
sub
push
adc
xor
clc
adc
jl
sub
add
push
add
gs
push
xchg
add
clc
mov
clc
xor
add
add
clc
sahf
jo
add
clc
xchg
addr16
sarl
pop
clc
insl
out
xchg
cwtl
sbb
xor
or
fidivl
add
or
incl
add
clc
cmp
or
mov
add
push
add
pop
clc
loop
lahf
js
add
pop
push
insl
das
int
add
stc
add
add
stc
push
and
add
add
add
mov
add
add
mov
xor
add
add
cmpsl
clc
sahf
xor
add
pop
lcall
clc
ficoms
scas
cmp
xchg
mov
jmp
xor
add
clc
sub
inc
clc
stos
cmp
mov
add
popa
add
or
fdivr
test
loop
rcl
fdecstp
loope
movsb
clc
test
cltd
out
fstpt
clc
jp
sub
cmp
and
add
test
xor
add
add
stc
jno
add
cmp
clc
clc
jg
inc
clc
outsl
mov
clc
lahf
lods
aad
dec
pop
mov
sub
sti
add
outsb
dec
cmp
clc
leave
daa
clc
dec
mov
add
ds
ret
clc
xchg
fadds
add
sbb
rolb
clc
push
xor
add
cmpsb
clc
dec
push
add
mov
sub
add
add
test
in
dec
enter
clc
fcmovnu
and
add
push
push
inc
add
iret
inc
add
sub
clc
popf
jge
sar
clc
jbe
inc
add
mov
call
add
fstl
clc
jp
clc
clc
cmp
aaa
fcoml
jns
fs
mov
and
adc
or
call
outsl
cmp
imul
clc
add
add
or
push
ljmp
cmpsl
clc
sar
xor
add
clc
adc
add
stos
xchg
out
popf
mov
sti
mov
out
jg
push
add
sbb
mov
ficoml
inc
add
mov
clc
add
add
add
add
push
add
sbb
cmpsl
clc
sbb
xor
cli
xor
clc
popf
xchg
icebp
ds
mov
add
sbb
fsubrs
add
pop
mov
xchg
pop
pusha
add
pusha
add
mov
clc
pushf
cmpsb
clc
lret
xchg
outsl
sar
add
add
clc
data16
sub
add
sbb
inc
add
add
add
inc
clc
xchg
jbe
cmpsl
clc
cmpsb
clc
mov
clc
call
sub
add
add
add
cltd
dec
loope
jp
add
cmp
lahf
int
cmc
sbb
add
pop
fbstp
add
mov
clc
add
shll
add
xlat
lcall
add
pop
and
add
lods
jge
clc
push
add
dec
push
add
pop
mov
add
clc
push
rcrl
cli
ja
clc
enter
sbb
ret
mov
dec
nop
pop
or
dec
mov
clc
xlat
aaa
fnstcw
push
sar
xor
add
aaa
popf
mov
add
and
add
cltd
addr16
je
mov
cmp
popf
sbb
clc
pop
popf
bound
add
xor
add
clc
mov
cmpsb
clc
mov
pop
and
add
add
mov
clc
pop
push
mov
jp
clc
aam
clc
pushf
rolb
pop
mov
idivb
sti
pop
jno
add
cltd
es
or
in
cltd
enter
add
inc
clc
cmp
lock
pop
fbld
clc
and
add
add
in
mov
and
jp
xor
mov
cld
dec
pusha
add
ja
add
or
jecxz
jmp
out
sbb
add
aad
clc
xchg
daa
clc
xor
xchg
jns
add
ss
mov
cli
out
aaa
dec
inc
clc
mov
in
enter
insb
mov
mov
jnp
fidivrl
push
sar
add
dec
or
mov
mov
adc
mov
add
fucomip
cmpsl
clc
mov
clc
popa
add
xlat
mov
dec
ret
loop
xor
add
cmp
cmp
add
popf
lea
add
inc
clc
fadds
add
lods
jb
add
add
add
push
clc
jmp
push
add
pop
clc
xchg
clc
xor
add
mov
add
data16
scas
push
add
jne
clc
sub
jae
add
push
add
mov
clc
or
clc
mov
pop
mov
add
pop
clc
jae
add
add
cmp
clc
cmp
add
mov
cmp
add
scas
hlt
lock
sar
mov
jmp
sbb
gs
mov
adc
add
jmp
sar
clc
repz
add
add
ficoml
add
add
and
add
pushf
sbb
add
mov
cmc
stos
xchg
sub
clc
xchg
jne
clc
sub
mov
add
add
xlat
jbe
clc
cmp
mov
clc
and
lret
ret
clc
jns
mov
sbb
inc
add
pop
clc
movsb
clc
push
adc
add
add
dec
stos
fnstcw
cmp
xchg
inc
add
cmp
pop
je
test
lock
loop
hlt
and
in
xor
add
push
add
cli
mov
add
cmp
gs
and
add
add
das
inc
add
push
jno
add
pop
dec
int3
fs
int
mov
add
test
add
push
add
inc
add
mov
sbb
clc
cmp
clc
xchg
ficoml
mov
iret
pop
js
data16
out
inc
clc
inc
clc
adc
add
es
push
mov
pop
popf
into
mov
out
jns
imul
xchg
jg
clc
push
dec
cmp
movsb
clc
push
sub
add
cltd
cmp
notl
aas
cmp
add
int3
loope
jnp
and
add
icebp
inc
add
cmp
jmp
js
cmp
and
add
test
out
sar
add
xchg
mov
clc
fsubl
ss
adc
add
adc
jae
add
mov
pop
mov
call
clc
xchg
notb
or
add
popf
stos
add
add
out
xchg
ja
idivb
lods
pop
push
cmp
stos
repnz
xchg
and
mov
push
add
mov
movsb
clc
aad
clc
mov
clc
push
add
push
outsb
in
mov
in
jecxz
xor
loope
ret
clc
stos
xchg
xchg
mov
ds
cmp
clc
test
adc
repz
add
aad
scas
jbe
add
adc
aam
jae
add
hlt
dec
clc
inc
add
int
xor
add
push
mov
inc
add
std
fs
in
pop
mov
dec
jns
mov
je
ficompl
sar
sub
add
das
jbe
add
xor
add
push
add
popa
add
or
add
cli
imul
mov
mov
xchg
pop
clc
push
add
pop
xabort
clc
sarb
pop
clc
cmp
add
push
cmpsl
clc
ljmp
pop
and
add
je
lock
and
add
lock
add
add
push
or
mov
clc
repz
add
mov
clc
push
add
push
jb
add
push
adc
add
jnp
add
xor
add
add
add
fcomps
enter
cmp
int3
mov
clc
sub
arpl
add
clc
push
cmp
out
popa
add
xor
add
inc
add
lahf
pop
in
into
mov
adc
add
ret
add
mov
outsb
jb
add
jae
add
cmp
and
add
notb
lret
sbb
xabort
clc
mov
mov
clc
xor
pop
arpl
add
add
clc
mov
sar
mov
inc
add
xchg
js
sub
add
enter
fstpl
clc
stos
and
add
fcompl
bound
add
mov
add
inc
add
inc
add
dec
ljmp
int
clc
pop
adc
add
cld
cld
roll
add
lcall
sub
add
lods
mov
insb
inc
clc
and
add
mov
clc
adc
add
push
clc
test
ffree
clc
add
add
add
nop
sbb
jl
scas
mov
inc
add
mul
clc
sub
add
ss
mov
add
cmp
add
and
add
cmp
stos
int3
sar
clc
and
add
add
xchg
cltd
or
fadd
clc
hlt
pop
clc
and
add
jne
cli
cmp
out
push
xchg
inc
add
sub
push
add
inc
clc
or
nop
inc
add
add
add
jbe
add
push
add
clc
arpl
add
add
mov
xor
add
sub
lods
cmp
clc
in
clc
pop
push
add
mov
add
fstps
sbb
inc
clc
mov
enter
add
xor
xor
add
xlat
pop
clc
out
mov
cmp
out
out
mov
sbb
xor
mov
jo
add
clc
repnz
clc
xlat
xchg
sbb
fld
clc
xchg
cmp
cli
mov
add
cmp
add
pop
shrl
jle
call
add
enter
mov
clc
or
add
clc
insl
cmp
add
aam
add
add
mov
xchg
pop
clc
xchg
gs
and
add
cmp
pop
ljmp
mov
pop
loope
or
add
ficoml
daa
clc
ret
add
lods
jg
cmpsb
clc
test
lcall
inc
add
inc
add
fwait
in
das
sub
add
pop
fistpl
outsl
mov
add
jmp
clc
push
push
add
inc
clc
cmp
add
out
pop
pop
popa
add
pushf
jns
scas
rcll
mov
xbegin
jecxz
xchg
insb
and
add
movsl
clc
aad
add
adc
add
je
cld
xbegin
out
pop
nop
push
add
test
cwtl
in
inc
clc
call
clc
fstps
pop
cmp
xlat
inc
clc
jb
add
or
clc
es
push
add
dec
push
clc
cli
lahf
decl
mov
add
add
hlt
fwait
jmp
pop
nop
mov
add
add
add
std
pop
mov
clc
add
add
nop
cmp
push
add
xor
add
clc
push
daa
clc
cmp
mov
clc
or
test
xchg
lret
sbb
clc
ja
adc
fwait
js
clc
leave
mov
out
cltd
mov
mov
add
dec
lea
add
