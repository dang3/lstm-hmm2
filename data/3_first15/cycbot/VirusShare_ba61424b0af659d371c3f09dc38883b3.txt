loop
movsb
loope
in
out
in
loop
in
out
in
out
in
call
loop
push
out
in
loope
in
jecxz
in
in
in
call
loop
stc
out
in
out
in
call
loop
pop
call
loop
dec
jecxz
in
loop
in
in
in
in
in
out
in
in
in
loop
in
loop
in
in
in
loope
in
jecxz
in
out
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
loope
in
in
in
jecxz
in
loop
in
out
in
loop
in
in
in
out
in
in
in
in
in
out
in
call
loop
mov
loop
in
loope
in
out
in
in
in
in
in
jmp
loop
push
in
in
loope
in
in
in
in
in
jecxz
in
jecxz
in
call
loop
ret
in
jecxz
in
loop
in
in
in
in
in
in
in
call
loop
enter
movsl
call
loop
mov
loop
or
loop
mov
loop
hlt
out
in
jecxz
in
in
in
call
loop
push
loop
in
call
loop
repz
in
in
in
call
loop
loop
loop
and
in
jmp
loop
movntq
out
in
loope
in
in
in
call
loop
outsl
call
loop
fnclex
loop
movsl
out
in
jecxz
in
in
in
out
in
call
loop
inc
out
in
out
in
call
loop
or
loop
cmp
loop
or
loop
in
in
in
call
loop
jb
loop
int3
loop
in
in
in
out
in
out
in
in
in
in
in
jecxz
in
in
in
call
loop
sub
in
in
in
in
loop
in
out
in
jecxz
in
in
in
call
loop
mov
call
loop
sub
loop
test
loop
adc
loop
into
jecxz
in
out
in
call
loop
loop
xchg
out
in
jmp
loop
adc
loop
loop
cmp
loop
sbb
loop
jmp
loop
lock
in
loop
in
in
in
jecxz
in
loope
in
in
in
in
in
jecxz
in
call
loop
inc
jecxz
in
loope
in
jmp
loop
push
loop
in
call
loop
xchg
out
in
loope
in
loope
in
loope
in
jmp
loop
add
loop
sbb
loop
or
loop
in
in
in
jecxz
in
call
loop
sub
loop
jno
loop
sbb
loop
ret
jecxz
in
jecxz
in
in
in
loope
in
call
loop
xor
out
in
loope
in
out
in
out
in
call
loop
loopne
loop
arpl
loop
add
loop
aam
loop
shl
in
in
in
out
in
in
in
in
in
out
in
loop
in
call
loop
sti
in
in
out
in
in
in
loope
in
call
loop
xchg
loop
fucomp
loop
cltd
jecxz
in
out
in
in
in
loop
in
loop
in
call
loop
mov
out
in
loope
in
loope
in
in
in
out
in
jecxz
in
jmp
loop
in
in
out
in
loop
in
in
in
out
in
out
in
jecxz
in
out
in
call
loop
cwtl
out
in
out
in
loop
in
in
in
in
in
loope
in
call
loop
pop
out
in
loope
in
out
in
loop
in
loope
in
loop
in
out
in
out
in
out
in
out
in
loop
in
loop
in
out
in
jmp
loop
es
in
out
in
out
in
out
in
loop
in
out
in
loope
in
in
in
jecxz
in
jecxz
in
loope
in
out
in
jmp
loop
sub
loop
aaa
out
in
loope
in
loope
in
call
loop
enter
cmp
loop
repz
in
jecxz
in
in
in
out
in
call
loop
pop
in
in
loop
in
out
in
loope
in
in
in
in
in
loop
in
out
in
jmp
loop
jb
loop
popa
out
in
call
loop
mul
loop
jge
loop
mov
jecxz
in
loope
in
loop
in
out
in
call
loop
pop
in
in
loop
in
out
in
loop
in
call
loop
out
loop
adc
loop
shl
in
in
in
in
in
jmp
loop
jno
loop
xchg
jecxz
in
loope
in
jecxz
in
call
loop
adc
loop
xchg
call
loop
out
loop
call
loop
pop
call
loop
aas
jmp
loop
es
in
out
in
loop
in
out
in
in
in
call
loop
lock
in
out
in
loop
in
jmp
loop
adc
jecxz
in
out
in
call
loop
arpl
loop
int3
loop
in
in
in
jecxz
in
in
in
out
in
in
in
loope
in
loop
in
loope
in
in
in
out
in
jecxz
in
in
in
in
in
in
in
out
in
loope
in
out
in
out
in
in
in
out
in
jmp
loop
test
loop
fs
in
in
in
out
in
loop
in
in
in
call
loop
gs
in
call
loop
sbb
loop
int
loop
mov
loop
xchg
out
in
in
in
in
in
jecxz
in
in
in
loope
in
in
in
in
in
loope
in
out
in
loop
in
jecxz
in
jmp
loop
enter
and
in
in
in
in
in
out
in
loop
in
jmp
loop
add
loop
outsl
loop
in
out
in
in
in
call
loop
std
jecxz
in
in
in
loop
in
out
in
jecxz
in
in
in
jecxz
in
loop
in
in
in
loop
in
in
in
call
loop
in
call
loop
je
loop
push
loop
in
in
in
loope
in
call
loop
loopne
loop
fucom
loop
mov
loop
push
in
in
loope
in
out
in
in
in
out
in
in
in
loop
in
call
loop
and
in
out
in
jecxz
in
jmp
loop
dec
call
loop
adc
loop
adc
call
loop
xor
loop
in
in
in
loope
in
call
loop
dec
out
in
loop
in
loop
in
jecxz
in
out
in
jecxz
in
call
loop
jge
loop
insb
out
in
loop
in
out
in
out
in
in
in
jecxz
in
out
in
loope
in
out
in
loop
in
out
in
call
loop
adc
loop
shl
loop
mov
jmp
loop
jge
loop
pop
in
in
loope
in
jmp
loop
pop
loop
in
loop
in
out
in
out
in
out
in
jmp
loop
sub
loop
cwtl
loope
in
call
loop
aaa
jecxz
in
out
in
out
in
in
in
call
loop
jne
loop
js
loop
pop
in
in
out
in
call
loop
and
loop
mov
jecxz
in
loope
in
out
in
in
in
loop
in
in
in
in
in
out
in
out
in
out
in
loop
in
loop
in
loop
in
out
in
jecxz
in
loope
in
jecxz
in
out
in
in
in
out
in
in
in
in
in
call
loop
sbb
loop
lcall
in
loop
in
call
loop
push
jmp
loop
adc
loop
int3
out
in
jmp
loop
in
in
in
loop
in
out
in
in
in
loop
in
jmp
loop
mov
in
in
jecxz
in
in
in
loop
in
jecxz
in
out
in
out
in
in
in
jecxz
in
in
in
out
in
loop
in
jecxz
in
loop
in
out
in
out
in
in
in
jecxz
in
in
in
in
in
in
in
out
in
call
loop
or
loop
int
loop
jle
loop
mov
jecxz
in
jecxz
in
in
in
out
in
in
in
loop
in
loop
in
in
in
loope
in
loop
in
loop
in
call
loop
fsubp
loop
xor
loop
icebp
out
in
loope
in
out
in
out
in
out
in
jecxz
in
loope
in
call
loop
xor
out
in
loop
in
jecxz
in
jmp
loop
into
call
loop
test
loop
in
call
loop
call
loop
inc
call
loop
cmp
loop
xor
loop
inc
jmp
loop
or
loop
int
loop
xchg
out
in
jecxz
in
call
loop
int
loop
mov
loop
mov
loop
ja
loop
adc
out
in
out
in
loope
in
in
in
call
loop
push
jmp
loop
jecxz
loop
mov
loop
inc
loop
in
in
in
out
in
out
in
jecxz
in
call
loop
test
loop
aad
loop
frstpm(287
loop
fucom
loop
lret
in
in
in
out
in
in
in
out
in
in
in
loope
in
out
in
out
in
out
in
call
loop
push
loop
in
jecxz
in
loope
in
loope
in
out
in
out
in
call
loop
mov
loop
in
in
in
out
in
call
loop
add
loop
shl
loop
jb
loop
int
loop
mov
loop
add
loop
dec
loop
in
in
in
out
in
loop
in
jecxz
in
jmp
loop
movsb
out
in
call
loop
js
loop
cmp
loop
shl
loop
in
loop
lret
in
in
out
in
in
in
call
loop
jnp
loop
or
loop
shl
loop
shl
loop
mov
out
in
out
in
loop
in
out
in
call
loop
mov
in
in
jecxz
in
in
in
loop
in
in
in
jmp
loop
xchg
out
in
out
in
in
in
call
loop
cmp
loop
outsl
out
in
out
in
out
in
jmp
loop
in
loope
in
jecxz
in
out
in
out
in
jecxz
in
out
in
out
in
jecxz
in
out
in
out
in
out
in
out
in
in
in
in
in
out
in
call
loop
loop
shl
loop
loop
pushf
loope
in
in
in
out
in
out
in
call
loop
aam
loop
pop
out
in
call
loop
and
loop
fucomi
loop
push
loop
xchg
loop
or
loop
outsb
in
in
in
in
jecxz
in
in
in
out
in
loop
in
out
in
in
in
out
in
loope
in
out
in
in
in
in
in
loop
in
out
in
in
in
out
in
call
loop
cmp
loop
pop
in
in
jmp
loop
test
loop
jg
loop
test
loop
adc
loop
pusha
call
loop
cmpsl
in
in
jmp
loop
xchg
loope
in
in
in
loope
in
out
in
in
in
out
in
call
loop
movsl
in
in
in
in
in
in
out
in
out
in
jecxz
in
loop
in
out
in
out
in
in
in
out
in
out
in
loop
in
loop
in
in
in
in
in
out
in
in
in
in
in
loop
in
out
in
call
loop
out
in
in
loop
in
loope
in
loop
in
in
in
jecxz
in
in
in
loop
in
jecxz
in
out
in
loope
in
call
loop
mov
loope
in
in
in
out
in
in
in
loop
in
in
in
jecxz
in
loope
in
loope
in
out
in
in
in
out
in
jmp
loop
pop
loope
in
in
in
call
loop
pop
loop
in
loop
in
call
loop
cmpsl
out
in
in
in
in
in
in
in
in
in
loop
in
out
in
jecxz
in
in
in
loop
in
in
in
out
in
loope
in
loope
in
in
in
jecxz
in
jecxz
in
jecxz
in
call
loop
push
in
in
jecxz
in
jecxz
in
call
loop
or
loop
xchg
out
in
in
in
call
loop
dec
in
in
loop
in
out
in
loop
in
jecxz
in
call
loop
in
in
jecxz
in
loope
in
in
in
out
in
jecxz
in
jecxz
in
in
in
loop
in
out
in
out
in
in
in
loop
in
jecxz
in
loop
in
out
in
in
in
loop
in
loop
in
loope
in
jmp
loop
push
in
in
loop
in
loop
in
in
in
in
in
loope
in
in
in
out
in
jecxz
in
out
in
in
in
in
in
jecxz
in
in
in
loop
in
in
in
out
in
in
in
out
in
loope
in
loope
in
in
in
out
in
in
in
out
in
out
in
in
in
loope
in
in
in
call
loop
out
loope
in
loop
in
in
in
in
in
jecxz
in
out
in
jecxz
in
loope
in
loop
in
out
in
out
in
call
loop
sbb
loop
push
loop
mov
loop
shl
in
out
in
jecxz
in
out
in
loop
in
out
in
jecxz
in
loop
in
jecxz
in
call
loop
fsub
loop
mov
jecxz
in
loope
in
in
in
in
in
in
in
call
loop
int
loop
add
loop
imul
loop
shr
loop
mov
loop
test
loop
xor
loop
mov
in
in
call
loop
movsl
call
loop
sbb
loop
loope
in
out
in
loop
in
in
in
in
in
out
in
in
in
jecxz
in
jecxz
in
loope
in
out
in
loop
in
out
in
loop
in
loop
in
out
in
in
in
loope
in
out
in
out
in
in
in
jecxz
in
in
in
jecxz
in
call
loop
int
loop
jecxz
loop
push
in
in
in
in
in
in
loope
in
out
in
loope
in
out
in
loop
in
call
loop
mov
loop
jns
loop
mov
out
in
in
in
call
loop
ds
in
out
in
call
loop
dec
out
in
in
in
loope
in
in
in
out
in
in
in
in
in
jmp
loop
pop
in
in
jecxz
in
jecxz
in
loop
in
in
in
in
in
loope
in
loop
in
out
in
out
in
in
in
loop
in
jecxz
in
out
in
out
in
jecxz
in
loop
in
in
in
loop
in
call
loop
ds
in
out
in
loop
in
in
in
out
in
in
in
in
in
in
in
in
in
out
in
in
in
jecxz
in
jmp
loop
xchg
out
in
jecxz
in
out
in
out
in
jecxz
in
jmp
loop
and
loop
inc
in
in
in
in
loop
in
jecxz
in
jecxz
in
in
in
loop
in
call
loop
out
jecxz
in
loope
in
jecxz
in
in
in
out
in
in
in
call
loop
loop
in
in
in
in
in
in
in
in
in
out
in
out
in
in
in
jecxz
in
in
in
jecxz
in
loope
in
in
in
loop
in
in
in
in
in
loop
in
out
in
out
in
loop
in
in
in
call
loop
push
jmp
loop
cmp
loop
stos
out
in
out
in
in
in
loop
in
loop
in
loope
in
call
loop
cmp
loop
popf
in
in
loope
in
in
in
out
in
loope
in
jmp
loop
pop
out
in
in
in
loope
in
call
loop
sbb
loop
sub
in
in
call
loop
pop
jmp
loop
outsb
loope
in
jecxz
in
out
in
out
in
jecxz
in
loope
in
out
in
jmp
loop
mul
loop
scas
out
in
out
in
out
in
in
in
jecxz
in
out
in
call
loop
lods
in
in
jecxz
in
in
in
in
in
out
in
loope
in
out
in
jmp
loop
sahf
in
in
out
in
out
in
in
in
in
in
loop
in
call
loop
outsb
out
in
in
in
out
in
out
in
loope
in
loope
in
out
in
call
loop
shl
loop
xchg
in
in
out
in
jecxz
in
in
in
loop
in
loop
in
jecxz
in
in
in
out
in
call
loop
loop
cmc
call
loop
mov
loop
and
in
jecxz
in
loop
in
loop
in
out
in
loope
in
in
in
loope
in
out
in
out
in
in
in
out
in
out
in
jecxz
in
in
in
loop
in
jecxz
in
loope
in
loope
in
loop
in
out
in
out
in
loop
in
jecxz
in
loop
in
jecxz
in
call
loop
xchg
in
in
in
in
call
loop
mov
out
in
out
in
jecxz
in
jmp
loop
jae
loop
adc
loop
push
loop
in
jecxz
in
out
in
loop
in
out
in
jmp
loop
aaa
in
in
in
in
loope
in
call
loop
outsl
in
in
loope
in
out
in
in
in
jmp
loop
shl
in
in
in
jmp
loop
sub
loop
scas
jecxz
in
call
loop
ljmp
in
in
in
out
in
in
in
jmp
loop
test
loop
xchg
loop
pop
in
in
jmp
loop
out
loop
mov
out
in
in
in
in
in
loop
in
call
loop
and
loope
in
out
in
loop
in
in
in
out
in
in
in
out
in
jecxz
in
call
loop
add
loop
add
loop
xchg
loop
in
in
in
loop
in
jecxz
in
loop
in
loop
in
out
in
in
in
in
in
loope
in
in
in
in
in
out
in
in
in
loop
in
out
in
jmp
loop
jl
loop
shl
loop
mov
jecxz
in
loope
in
jmp
loop
lods
loop
in
in
in
jecxz
in
in
in
loop
in
jmp
loop
jmp
loop
push
jecxz
in
loope
in
out
in
loope
in
loope
in
in
in
in
in
in
in
in
in
call
loop
lods
jecxz
in
in
in
out
in
loop
in
out
in
jecxz
in
jmp
loop
lret
in
in
in
jecxz
in
in
in
out
in
jecxz
in
loop
in
loope
in
in
in
in
in
jmp
loop
xchg
loop
xor
loop
loopne
loop
mov
loop
mov
out
in
call
loop
sub
loop
mov
loop
jle
loop
in
in
in
jecxz
in
jecxz
in
out
in
out
in
loope
in
jecxz
in
call
loop
cli
in
in
out
in
jecxz
in
out
in
call
loop
inc
loop
in
out
in
call
loop
shl
in
call
loop
inc
out
in
call
loop
adc
loop
stos
out
in
out
in
jecxz
in
jecxz
in
in
in
jecxz
in
in
in
loope
in
loop
in
in
in
jecxz
in
out
in
loop
in
call
loop
xlat
loope
in
loope
in
jecxz
in
call
loop
xor
loop
inc
out
in
in
in
in
in
call
loop
mov
loop
sub
loop
shr
loop
pop
call
loop
arpl
loop
pop
jmp
loop
clc
jecxz
in
loope
in
out
in
in
in
call
loop
int3
jecxz
in
jmp
loop
inc
call
loop
or
loop
cltd
out
in
out
in
loope
in
call
loop
inc
jmp
add
xor
add
int
add
dec
adc
xchg
jge
add
and
lcall
add
add
roll
mov
jecxz
es
add
add
incl
mov
xchg
ret
add
add
lahf
mov
ret
add
ljmp
or
mov
xchg
add
sti
mov
testb
addl
xchg
xchg
insb
fsub
add
jmp
add
inc
add
mov
push
add
sahf
sub
addr16
mov
add
cmp
mov
sbb
add
call
add
frstor
into
pop
imul
das
and
dec
popa
add
dec
xlat
sbb
or
lcall
add
rclb
mov
pop
rolb
add
call
add
add
add
jb
jmp
fldcw
xor
add
mov
nop
es
add
pop
inc
add
add
pushl
add
jmp
add
mov
mov
movb
ret
add
add
jb
ljmp
cld
and
and
jg
add
push
add
loope
dec
pop
loopne
lds
shlb
out
les
lahf
dec
sti
mov
dec
lret
fidivs
mov
dec
add
mov
mov
cmp
jp
add
fmull
std
cmp
ffree
add
add
popa
add
jnp
add
int
sub
jae
lcall
decl
test
add
ret
add
mov
dec
iret
ficompl
add
lcall
cmp
jmp
mov
lret
popa
add
pop
in
icebp
sub
call
mov
aam
add
add
inc
add
add
stos
call
add
mov
call
icebp
push
add
inc
add
push
jns
aas
sti
mov
add
add
sub
data16
add
call
add
pop
and
mov
aam
xor
jmp
mov
mov
add
decl
add
mov
push
jne
add
lods
xlat
mov
add
cmp
inc
add
addl
inc
add
pop
adc
pushl
jmp
add
add
lock
lds
dec
mov
inc
add
in
jge
adc
cmp
add
fidivl
pop
add
incl
add
insl
lock
add
add
lcall
jmp
add
adc
pushl
add
mov
pushl
lcall
movswl
add
inc
add
inc
add
movb
mov
or
sbb
stos
out
xor
jne
pop
add
repz
cwtl
jnp
jl
lret
pop
popf
push
mov
add
add
pop
add
push
jle
les
jns
add
add
scas
or
xor
ljmp
add
push
add
xchg
loopne,pn
popa
add
shlb
ljmp
test
lret
cmp
xchg
mov
add
mov
loope
pop
mov
test
lret
jg
test
xlat
inc
add
ret
inc
add
rolb
dec
aam
mov
lcall
add
decl
add
cmp
shl
cli
cmp
imul
or
into
dec
in
inc
add
or
xchg
or
clc
pop
fcoms
add
frstor
call
add
in
sub
adc
fcoml
lcall
repz
add
add
add
mov
add
inc
add
pop
cmp
push
jp
add
stc
push
out
call
pop
test
add
cmp
js
lods
mov
mov
mov
add
leave
outsl
and
incl
add
test
xor
sahf
mov
add
cmp
icebp
into
mov
add
incl
push
add
nop
mov
add
add
int
sahf
int
add
arpl
js
add
scas
ret
add
jo
aaa
xor
ljmp
inc
add
add
jp
add
inc
add
dec
pop
add
fsub
add
add
dec
push
add
inc
add
ret
add
mov
lahf
scas
dec
adc
push
insl
lods
mov
repz
sbb
mov
add
add
xchg
das
xlat
push
test
mov
dec
mov
add
and
decl
inc
add
add
decl
add
add
out
cmp
jmp
add
insl
add
push
add
or
add
and
dec
push
add
movl
leave
insl
imul
lds
pop
popa
add
mov
arpl
ljmp
inc
add
push
aam
jne
add
daa
add
pop
add
xchg
mov
cli
mov
mov
xchg
sbb
outsl
cwtl
mov
add
roll
add
inc
add
rorb
cmpsl
add
add
add
arpl
call
xchg
mov
dec
fistpl
lds
add
lcall
ret
add
add
add
fucom
add
inc
add
push
add
gs
dec
pop
popa
add
mov
clc
jbe
or
jmp
add
rol
add
add
enter
xchg
mov
xchg
fidivs
inc
add
or
mov
and
ljmp
xchg
int3
mov
mov
add
add
add
push
mov
add
xor
lcall
jecxz
bound
pushl
add
fsubrl
dec
iret
cwtl
fildll
fimull
add
and
decl
std
adc
ljmp
incl
add
push
out
mov
xchg
lods
jne
daa
add
add
add
jmp
mov
push
xchg
lret
fcmovu
add
push
push
add
add
pop
and
sub
add
imul
add
cwtl
imul
add
call
xor
call
call
clc
in
cmp
add
inc
add
mov
dec
or
insb
pop
mov
in
and
ljmp
addl
shll
lock
pushl
cli
ss
enter
push
lock
decl
jecxz
in
out
arpl
inc
add
int
mov
or
movsb
add
push
add
lcall
add
jge
xchg
mov
in
sti
adc
ljmp
push
add
movl
add
fmul
dec
dec
movb
jge
loop
sbb
add
jmp
add
ds
or
mov
test
adc
decl
jl
add
jae
mov
jmp
add
lret
pop
stc
daa
add
hlt
int
mov
add
add
int3
cltd
lods
lret
or
lock
fisttpl
xchg
mov
push
inc
add
push
add
add
pushf
addb
add
cld
std
aad
add
testb
pushl
add
xchg
leave
mov
lods
dec
inc
add
and
call
sbb
lcall
add
pop
lds
popa
add
add
call
pop
loope
inc
add
add
inc
add
roll
call
add
mov
add
cwtl
adc
jmp
outsl
sbb
sbb
dec
in
lahf
enter
add
gs
sbb
or
movl
pop
je
xor
mov
push
sub
add
aad
in
and
decl
inc
add
xchg
xchg
cli
mov
add
lods
mov
add
rolb
repz
rolb
push
mov
adc
incl
add
pusha
add
mov
negb
divb
jmp
xor
xchg
xlat
roll
mov
lea
das
movl
dec
shl
add
pop
push
iret
das
nop
sbb
cmp
add
add
fsubs
decb
pop
sub
push
push
xor
decl
addb
add
add
notl
add
xor
ljmp
push
out
or
fdivrs
stos
jb
ljmp
add
dec
push
or
add
cmp
addb
add
adc
add
sbb
add
add
pop
addl
ja
divb
cmp
addb
pop
xchg
add
dec
flds
xor
sbb
xchg
aaa
xor
add
add
lea
ficoml
add
cmp
jnp
out
movb
and
ljmp
add
mov
jmp
add
lret
enter
sub
push
or
add
cs
jae
decl
mov
imul
add
and
lcall
pop
push
xchg
dec
jns
pop
outsl
movsl
add
add
repz
sahf
sbb
cmp
add
mov
add
incl
add
ss
mov
mov
mov
inc
add
lahf
lds
pop
pinsrw
add
imul
xor
add
mov
or
mov
loop
movd
shll
call
adc
add
inc
add
lods
jno
dec
aas
popa
add
dec
inc
add
out
ss
add
add
dec
pop
ljmp
pop
lret
mov
stos
cwtl
xchg
jecxz
add
pushl
dec
xchg
hlt
stc
sbb
lret
out
cmp
add
pushl
mov
pushl
iret
sbb
pop
outsb
mov
add
xor
add
add
xchg
push
in
pop
mov
xor
jmp
bound
call
add
mov
pop
das
sub
pop
and
pushl
add
rolb
dec
enter
loop
aas
sub
push
xor
decl
loop
mov
add
cmp
js
mov
and
jmp
call
or
add
xor
jmp
add
add
test
xchg
jo
jmp
add
dec
sub
cwtl
lcall
xchg
inc
add
adc
ljmp
cmp
adc
lcall
mov
adc
pop
xor
jmp
add
pop
ljmp
addl
or
sahf
iret
inc
add
decl
add
push
mov
push
add
lahf
cmp
test
push
aam
add
das
xchg
jns
sarb
sarb
add
in
jmp
xchg
nop
lret
push
arpl
jmp
add
sub
ret
int
sbb
add
xor
lcall
add
insb
insl
push
jae
lcall
add
sbb
sbb
dec
in
jp
xor
incl
add
pop
mov
ljmp
cmp
out
push
loope
sbb
int
add
inc
add
fucomi
sbb
add
es
pop
emms
mov
add
lcall
sbb
add
fldl
add
lret
or
add
add
insb
dec
movl
pushl
add
bound
lcall
fisttpl
dec
jg
je
add
js
add
dec
mov
fisubs
sub
and
addl
jg
mov
add
enter
xor
fstpl
in
clc
mov
add
add
nop
insl
data16
and
jge
in
pop
and
incl
add
lret
shr
test
mov
pop
insb
iret
lret
pushl
lcall
leave
xor
jmp
add
mov
add
mov
add
stos
in
cmc
bound
call
and
jmp
add
add
call
shrb
jmp
adc
jns
mov
add
push
add
into
or
push
in
les
hlt
mov
in
enter
ljmp
add
lcall
add
xor
fmul
add
call
mov
iret
popf
adc
jmp
add
push
es
push
push
pushl
das
les
push
add
stos
xchg
and
mov
cmc
stos
popf
dec
fstpt
add
scas
inc
add
jle
and
add
jno
inc
add
mov
add
mov
lods
push
add
aam
mov
or
mov
add
mov
gs
dec
dec
add
incl
jmp
mov
mov
inc
add
sahf
or
and
lcall
lds
cs
adc
mov
in
faddl
add
push
push
push
call
test
jne
push
push
call
test
jne
mov
lea
push
push
push
push
call
push
call
xchg
cld
lea
sub
mov
lock
lea
lock
ret
ljmp
mov
mov
sub
incl
add
add
jnp
add
add
cmp
pushl
add
mov
popa
add
push
mov
jl
test
add
xchg
jg
add
sbb
in
mov
ficomps
sbb
mov
shrl
outsb
mov
lods
ret
imul
jne
test
cmpsl
add
add
mov
add
repnz
sub
cmp
add
imul
pop
jg
dec
mov
stos
test
and
call
add
sub
cmp
pop
sbb
pop
out
out
push
les
add
lcall
fwait
add
call
add
push
insb
pop
jne
add
sbb
cmp
movsb
add
hlt
jne
pop
cmp
das
aam
add
add
loope
test
jge
add
add
xchg
nop
enter
add
jnp
roll
add
test
sbb
sbb
jmp
decl
out
jnp
add
outsb
das
dec
mov
add
pop
add
or
call
add
add
fsubp
add
dec
adc
push
and
call
sub
ja
push
add
movb
pop
out
xchg
jmp
push
jmp
pop
lret
cmp
jmp
in
lds
mov
fimull
add
jmp
add
add
add
add
fsubl
pushl
push
xchg
mov
sbb
outsb
jl
add
dec
mov
sub
popl
add
call
inc
add
dec
push
ret
push
add
out
adc
mov
push
xor
dec
std
jnp
ljmp
add
add
mov
jl
lret
inc
add
in
outsb
jnp
mov
add
cmp
into
add
fsubr
iret
repz
jb
incl
outsb
loope,pn
addb
add
fsqrt
xor
ljmp
mov
js
mov
add
add
add
daa
add
jmp
add
adc
pop
add
and
jmp
add
lcall
add
push
add
pushf
das
mov
and
dec
cmp
push
cmpsb
add
maxps
pushl
stos
xchg
xor
jmp
add
xor
decl
push
add
leave
push
loop
dec
stc
rorl
pushf
loope
pop
icebp
rcll
ret
add
mov
bound
incl
call
decl
add
jo
incl
add
iret
jp
movsb
add
movaps
add
add
add
sbb
js
push
xchg
call
add
les
mov
ficompl
leave
enter
add
or
add
jns
rol
add
testb
incl
call
add
imul
cmc
inc
add
decl
shlb
inc
add
mov
pop
mov
add
outsl
seto
jp
lock
hlt
pusha
add
mov
pushf
push
decl
mov
adc
jmp
add
add
into
mov
data16
call
sbb
and
incl
add
sbb
add
mov
inc
add
add
add
add
ljmp
jbe
lods
add
enter
sub
fnsave
movb
icebp
aam
sti
cmc
nop
dec
inc
add
and
call
xchg
push
add
mov
loopne
pop
repnz
add
add
pop
add
add
add
incl
push
add
sar
addb
add
lcall
dec
inc
add
sti
mov
add
push
jmp
add
xchg
lock
jle
nop
int
jae
call
inc
add
add
mov
lret
les
cmc
test
jmp
add
push
add
icebp
movb
add
int3
std
push
addl
addb
roll
cltd
fwait
jp
pop
pop
mov
add
mov
in
mov
add
pop
lcall
dec
mov
movb
lods
adc
ljmp
movsb
add
add
ja
or
add
xchg
cs
cmp
xchg
inc
add
mov
push
pop
inc
add
cmp
insl
test
add
xor
dec
xlat
fs
cltd
pop
cmp
add
lods
jle
nop
aam
lds
pop
mov
movsb
add
add
pop
mov
add
push
add
ja
mov
rcr
inc
add
shll
ret
add
cmp
add
cmp
add
add
pop
test
or
inc
add
out
das
repnz
push
add
rolb
iret
jne
roll
add
or
add
or
sbb
mov
pop
adc
js
jo
jmp
add
add
mov
push
add
stos
dec
ficoms
add
rclb
add
cmp
in
stc
das
add
cmpsl
add
cmp
cmc
jnp,pt
add
lock
sbb
pusha
add
in
dec
pop
cs
ret
add
and
icebp
mov
add
jne
add
add
js
popa
add
inc
add
mov
iret
jle
add
add
xchg
fcmovnbe
nop
jge
out
cli
test
pushl
jl
or
call
imul
dec
inc
add
cmpsb
add
add
addl
in
xchg
mov
ja
sub
lods
test
xchg
sahf
jp
add
add
or
pusha
add
inc
add
add
les
test
outsl
adc
frstor
fndisi(8087
add
arpl
jmp
add
push
addb
rorb
sbb
dec
push
add
data16
cs
add
ret
arpl
push
xchg
pushf
mov
test
out
inc
add
gs
add
push
dec
dec
ds
insb
mov
inc
add
cmp
add
cmp
filds
jp
jnp
cmpsl
add
dec
daa
add
mov
jmp
lods
add
jb
call
decl
sub
inc
add
add
lcall
add
mov
add
add
adc
decl
jmp
decl
adc
dec
fmull
push
add
and
decl
add
in
fnstcw
push
add
jns
add
sbb
xchg
dec
cmp
adc
in
inc
add
lahf
imul
mov
rclb
xchg
mov
rcrb
notl
mov
decl
inc
add
sbb
add
add
adc
jmp
decl
adc
decl
scas
cmp
xchg
pop
stos
sub
out
inc
add
xor
call
add
add
int
pop
adc
cmp
lea
mov
rcl
imulb
push
mov
lods
jno
incl
add
add
call
test
cwtl
ss
test
add
ljmp
inc
add
popa
add
jmp
addb
roll
add
add
aad
add
call
call
mov
add
iret
in
shlb
add
dec
test
mov
std
xchg
xchg
pop
sub
add
arpl
lcall
add
popa
add
or
add
addb
notl
fwait
cmpsb
add
add
movsl
add
aad
dec
in
jge
add
inc
add
lcall
dec
out
les
adc
inc
add
add
jbe
int
movsl
add
int3
mov
call
xchg
add
incl
pop
movl
add
das
clc
loope
mov
sbb
add
xor
in
adc
pushl
fistps
inc
add
pop
inc
add
dec
push
add
xchg
inc
add
push
add
call
or
add
inc
add
mov
or
add
testl
roll
mov
dec
out
setns
negl
test
add
into
adc
add
mov
add
pushl
mov
les
mov
add
decl
add
add
pushl
add
cmp
pop
lea
inc
add
dec
call
adc
mov
data16
lret
or
push
xchg
mov
or
addb
add
mov
add
out
and
jmp
add
jbe
add
sti
ja
add
sub
add
add
add
and
loopne
sub
add
xlat
adc
fwait
xchg
addb
les
mov
enter
xor
pushl
aad
add
add
lcall
pushl
cmp
inc
add
pop
nop
outsl
add
jle
add
adc
cmp
push
out
rolb
mov
add
push
hlt
cmp
data16
push
add
add
test
fnstenv
add
cmc
test
dec
addl
add
lcall
and
jl
xlat
sub
mov
pop
cltd
sub
jle
sti
addl
jp
add
fisubl
jg
push
lock
incl
aam
insb
pop
jne
add
add
fmull
cwtl
add
call
add
imul
ret
add
cmc
inc
add
xor
decl
es
nop
or
jmp
into
push
push
add
popa
add
jns
ss
ret
call
lds
xchg
push
xor
lcall
pop
pop
bound
incl
fisubs
inc
add
sub
add
stos
cmpsb
add
xor
jmp
add
xor
pushl
add
adc
incl
adc
inc
add
xor
pushl
sbb
add
add
xchg
mov
incl
imul
add
sbb
rcrb
xchg
mov
scas
sub
add
fdivrl
or
fcmove
sub
call
or
je
add
roll
add
stc
rorl
mov
mov
add
movsl
add
add
sti
or
pop
fists
add
mov
mov
add
lds
insb
lods
mov
add
nop
or
add
stc
ficoml
add
jo
decl
add
add
les
insl
xor
cmp
flds
call
dec
rcrl
mov
mov
and
jl
and
pushf
out
push
add
mov
add
fucomi
roll
add
add
add
add
insl
out
dec
xor
jmp
add
in
data16
cli
xor
call
add
sub
lds
movb
mov
outsl
fistpll
add
jle
sbb
xchg
mov
cmp
lret
pushf
push
popa
add
stos
lods
cli
ror
jge
add
and
inc
add
add
dec
call
add
xor
incl
add
outsb
mov
out
mov
add
dec
data16
mov
inc
add
leave
enter
add
mov
add
popf
sub
sahf
pop
shl
or
add
imul
add
add
lds
add
add
mov
and
lcall
add
add
ret
add
add
roll
add
jmp
inc
add
in
pop
add
mov
and
ljmp
adc
inc
add
bound
incl
loop
mov
push
xchg
fwait
aaa
in
mov
add
repz
jmp
add
inc
add
js
add
xchg
roll
add
push
jb
mov
mov
pushl
addb
add
xchg
pop
cmpsb
add
add
stos
mov
add
sbb
xor
call
cli
lods
inc
add
xor
jmp
mov
xchg
test
movl
xchg
sbb
add
rolb
mov
dec
dec
add
cmp
pop
and
inc
add
mov
shl
repz
mov
add
mov
mov
imul
pop
push
push
add
push
add
add
test
adc
mov
add
cli
mov
and
pushl
shlb
adc
ljmp
push
add
test
add
mov
ljmp
add
and
dec
inc
add
cmp
mov
clc
xchg
sub
fstpl
mov
add
add
add
add
jno
lcall
lahf
scas
ret
push
add
add
sbb
add
xlat
in
add
push
hlt
sub
cld
sahf
lcall
cmpsl
add
add
add
jb
decl
push
add
sbb
or
add
add
scas
sti
adc
test
cwtl
sti
lds
ja
add
cs
sbb
mov
push
add
dec
pop
mov
add
dec
sub
enter
fimuls
movl
fbstp
out
jmp
add
cmp
fucomi
fwait
pop
or
add
daa
add
or
xchg
mov
add
and
pushl
decl
jmp
icebp
pop
inc
add
add
xchg
dec
jb
pushl
add
cli
mov
xchg
loop
push
imul
inc
add
xor
mov
add
decl
fists
cmp
lahf
jno
pushl
add
leave
ret
add
sbb
xchg
into
fldl
add
add
push
add
enter
sbb
add
add
xchg
int
add
add
insl
call
lea
call
add
push
adc
ljmp
inc
add
popa
add
jno
pushl
aaa
movsb
add
ljmp
adc
and
outsb
movl
xchg
dec
jb
ljmp
dec
dec
push
ficomps
mov
add
lock
roll
add
mov
scas
addb
jno
jmp
add
pusha
add
jecxz
push
add
sbb
ja
add
aas
sbb
in
insb
sbb
ljmp
mov
xchg
popa
add
stos
and
jmp
add
cmp
loope
stos
lea
add
push
add
repz
ljmp
outsb
in
iret
mov
ljmp
push
add
pop
cmp
xor
cmp
flds
popf
std
out
ret
add
add
jmp
out
push
mov
inc
add
pushl
decl
rolb
out
cmp
add
sahf
add
pushl
inc
add
mov
add
push
or
add
sbb
mov
leave
inc
add
mov
adc
incl
add
idivb
roll
add
fdivs
add
mov
mov
lds
jle
add
call
call
inc
add
xchg
es
and
incl
ljmp
mov
scas
xchg
xchg
jmp
add
push
push
arpl
incl
in
and
fadd
add
push
add
mov
dec
xchg
in
stc
cli
fdivrp
xchg
and
fsts
pushf
sbb
lcall
add
add
popf
inc
add
mov
inc
add
sbb
add
icebp
in
or
jne
jbe
add
push
add
sub
cs
in
rorb
add
stc
cmc
sub
push
add
mov
clc
jno
decl
cwtl
pop
ds
int3
cs
add
dec
mov
mov
cmp
loopne
fsubs
push
sub
lret
add
add
add
scas
js
movb
add
mov
pop
cmpsl
add
fisubl
add
sti
stos
mov
push
add
in
je
test
sub
pushl
add
loope
mov
in
fistpl
adc
mov
jecxz
stos
pop
adc
inc
add
lret
sub
and
call
cld
fcomps
add
pop
mov
addl
pop
jb
pushl
add
mov
mov
xchg
jne
sbb
xchg
cmpsb
add
pop
sub
test
add
call
sahf
movsl
add
or
jecxz
jb
lcall
pop
lahf
mov
fstpt
add
rorb
lods
shl
rcll
add
int3
mov
push
add
pop
das
dec
and
ljmp
roll
inc
add
imul
add
dec
cltd
adc
aad
or
push
add
inc
add
repz
icebp
imul
add
movsb
add
cltd
test
add
add
push
lods
pop
cwtl
cmp
sarb
sub
inc
add
lock
arpl
push
pop
cmp
mov
pushl
push
and
ljmp
and
add
xchg
pop
cmpsb
add
roll
xor
ljmp
xor
decl
inc
add
je
aad
pusha
add
push
pop
out
addl
add
in
jge
in
inc
add
and
cmp
rclb
incl
decl
frstor
add
loope
cmpsb
add
jle
pop
jnp
add
arpl
pushl
cmp
jmp
dec
ret
add
add
and
jmp
add
add
mov
inc
add
sub
in
test
fmull
xchg
addl
add
dec
in
cwtl
rolb
add
incl
pushl
pushl
push
add
inc
add
add
jae
call
add
mov
pushl
add
ficoms
in
xchg
addl
clc
add
jecxz
adc
decl
das
mov
call
mov
inc
add
sub
jmp
add
cwtl
push
sbb
jae
ljmp
add
pop
nop
fnsave
add
adc
jp
add
sub
sarl
add
pushl
call
sti
movsl
add
add
cld
mov
add
daa
add
or
movb
add
and
jmp
xchg
test
jl
and
pushl
fisubs
add
inc
add
mov
and
incl
lcall
sub
and
inc
add
int
roll
add
cmp
jmp
xor
call
or
push
xchg
jae
push
in
jb
lcall
ficompl
inc
add
lahf
out
xchg
movl
and
call
cmp
test
out
sbb
mov
push
add
adc
call
mov
pop
sub
mov
dec
out
mov
inc
add
dec
push
add
out
pop
ljmp
xchg
sub
insb
dec
mov
and
jmp
add
add
and
aas
push
push
add
add
out
inc
add
xor
jmp
test
addl
pushf
adc
pop
dec
lcall
out
jmp
mov
add
pop
push
jp
int
pushf
sti
adc
call
incl
ret
movb
add
add
stos
addb
pop
and
aad
xchg
xor
mov
add
ret
mov
fidivs
push
data16
int3
int
test
loope
loope
roll
rorb
add
add
movl
add
ds
das
cmpsl
add
jg
add
sub
sti
cld
add
cmp
add
dec
add
ljmp
call
ljmp
xor
lcall
mov
add
js
rcr
mov
fildll
add
add
into
cmp
outsb
insb
pop
inc
add
add
roll
xchg
enter
jle
popa
add
jno
incl
lods
pusha
add
iret
xchg
fxch
roll
in
movl
dec
mov
add
add
and
lcall
push
add
xor
add
add
adc
decl
add
adc
add
inc
add
insb
jbe
add
xlat
pop
or
pop
addb
rcl
test
add
fwait
aad
inc
add
xlat
add
hlt
adc
arpl
pushl
call
test
arpl
lcall
icebp
stos
xlat
push
add
frstor
jae
pushl
ljmp
in
mov
xchg
push
jne
lret
sbb
add
scas
jno
in
pop
fdiv
in
push
add
push
mov
jb
decl
movb
add
pop
daa
add
out
aas
inc
add
and
ljmp
mov
sub
pushl
jmp
add
mov
inc
add
add
mov
add
inc
add
and
decl
lcall
aam
add
sbb
scas
mov
incl
add
push
add
idivb
add
cmp
roll
add
push
fsubl
ret
cli
or
stc
arpl
jmp
add
mov
add
inc
add
inc
add
scas
in
inc
add
pop
lea
ljmp
lds
lds
push
movsb
add
das
add
jmp
jmp
je
ret
add
sti
ljmp
add
add
mov
out
aad
push
add
sbb
imul
lcall
pusha
add
pop
adc
into
mov
or
add
test
loope
out
stc
rcrb
lea
add
cmpsb
add
add
add
rcll
add
and
lcall
leave
sbb
pop
bound
lcall
dec
sahf
and
incl
inc
add
sti
outsb
or
int
dec
mov
pop
sbb
ljmp
scas
or
add
xchg
cwtl
cmp
dec
add
movl
add
add
lds
xor
pushl
add
cmp
push
or
das
inc
add
mov
sbb
push
push
and
lcall
das
cltd
loop
jl
push
scas
outsb
inc
add
jae
incl
add
add
jmp
add
add
add
add
mov
jns
add
xlat
hlt
enter
add
out
jbe
dec
jne
repnz
add
add
add
add
push
add
lahf
mov
sahf
xor
call
pop
in
pop
je
add
add
fadds
out
push
push
add
xor
mov
push
add
popa
add
popa
add
xor
ljmp
mov
mov
fstpl
adc
incl
add
outsl
sub
and
lcall
inc
add
ja
push
jle
push
add
mov
cwtl
cmp
xor
pushl
cltd
push
jo
decl
loope
xchg
mov
pusha
add
repz
add
dec
js
movsb
add
add
xchg
dec
push
call
add
mov
test
out
sub
pop
popa
add
xchg
mov
repnz
add
and
lcall
ja
add
ljmp
cltd
lret
sub
cmovle
call
cli
push
add
adc
jp
pop
pushf
lret
stc
popf
shlb
decl
sbb
add
add
mov
call
jmp
call
add
push
imul
cli
inc
add
daa
add
adc
mulb
hlt
addb
push
add
add
add
enter
adc
jl
pop
add
pushl
pop
adc
decl
ret
add
out
popf
xor
ljmp
pushl
mov
mov
pusha
add
xchg
aas
insl
push
mov
mov
inc
add
add
ljmp
add
push
call
add
pop
pop
adc
scas
push
xrelease
repnz
or
test
xchg
add
lcall
xchg
push
loopne
ds
add
mov
cld
pop
lods
movl
pop
addl
add
add
sub
add
push
movsl
add
pop
dec
faddp
add
loopne
push
dec
xor
lcall
mov
fs
lahf
in
push
or
add
push
add
nop
lret
xlat
xchg
jle
add
xchg
mov
mov
add
xor
ljmp
pop
and
cmpsb
add
inc
add
push
frstor
add
sti
inc
add
lds
mov
add
add
mov
mov
add
add
add
decl
pop
jbe
add
fs
and
sbb
xchg
notl
add
scas
sub
add
or
add
mov
fsubs
pushl
movsb
add
add
int3
jg
add
jbe
add
xor
ljmp
add
mov
and
decl
lock
add
aas
add
sbb
adc
call
add
adc
push
inc
add
mov
add
add
add
xchg
test
mov
push
add
imul
add
mov
dec
inc
add
add
or
add
xor
push
cmp
outsl
lret
mov
inc
add
pop
test
inc
add
pop
xchg
xor
pushl
add
imul
add
dec
ficomps
in
cmp
test
decl
add
mov
out
mov
mov
stos
call
add
cmpsb
add
add
incl
add
out
mov
pop
cmp
std
mov
add
int
movl
jmp
incl
add
data16
add
add
adc
ljmp
add
add
add
xor
call
add
or
add
ret
add
mov
add
or
nop
lcall
xchg
inc
add
popf
xor
decl
fs
aaa
mov
mov
jae
in
xor
ljmp
add
mov
adc
call
add
mov
xor
pushl
add
and
jmp
jns
xchg
lods
dec
adc
ljmp
dec
jb
decl
loop
dec
mov
loope
mov
add
fsin
fwait
push
sbb
add
negl
add
pop
mov
loop
inc
add
aam
add
push
add
cld
add
add
add
xchg
add
decl
add
cwtl
jne
inc
add
add
loop
push
add
push
sti
movsl
add
mov
test
add
mov
add
mov
scas
jmp
jns
pop
jecxz
data16
jl
jmp
addb
int3
xchg
add
add
xchg
movl
add
fbstp
lcall
add
sbb
mov
bound
decl
cmp
or
push
dec
sub
add
addl
add
repnz
push
push
add
lea
add
sub
add
hlt
scas
or
add
fdivrp
mov
add
add
stos
lret
add
mov
add
push
mov
mov
add
add
ljmp
scas
mov
push
inc
add
jge
add
add
out
or
iret
in
arpl
fcomps
addl
icebp
dec
mov
filds
pushl
add
push
mov
pushl
call
add
fidivrs
adc
jmp
add
not
add
push
add
lcall
add
data16
aaa
jecxz
mov
imul
mov
add
sub
lock
ljmp
mov
and
add
xchg
addl
mov
clc
roll
add
push
add
fbstp
decl
dec
xchg
into
ja
add
add
cli
inc
add
cwtl
popf
inc
add
jns
add
inc
add
inc
add
sti
jp
jecxz
inc
add
test
aas
xchg
xchg
mov
call
sbb
incl
lods
mov
add
xchg
aaa
jg
add
add
pushf
jecxz
jno
lcall
test
fdiv
xor
pushl
sub
pushl
pop
mov
ljmp
add
adc
stc
lock
outsb
jmp
mov
ljmp
fidivl
add
jne
add
roll
add
add
cmp
add
int
xchg
movsl
add
rcrb
lods
add
insb
in
jmp
out
jnp
add
cmp
add
mov
add
fsubrl
sti
pop
icebp
mov
add
in
pop
add
ljmp
dec
xor
pushl
add
movb
jae
pushl
cmpsb
add
add
add
mov
jbe
add
inc
add
add
or
lcall
stos
repnz
jge
pop
ja
or
add
in
push
add
cltd
mov
aas
jae
pushl
movsl
add
mov
add
lea
adc
lcall
hlt
cmp
add
add
pushl
add
add
add
mov
add
add
popa
add
sbb
add
mov
add
sbb
add
xchg
push
xchg
ror
outsb
in
icebp
addl
add
xchg
hlt
xchg
in
mov
add
sub
mov
stos
int3
and
decl
add
inc
add
imul
jg
rorl
add
stc
jb
dec
dec
stos
lcall
mov
xor
call
push
pop
mov
sti
sbb
add
jl
adc
fs
add
add
mov
add
call
lcall
in
movsb
add
fwait
sub
push
mov
jbe
lock
xchg
lods
mov
lcall
add
ljmp
cmp
repnz
add
popa
add
dec
xchg
push
add
sbb
add
add
xlat
scas
les
aam
sti
sbb
decl
js
add
xor
mov
fisttps
insb
xor
jmp
lcall
bound
inc
add
xchg
lcall
jp
or
add
pop
add
fildll
sarl
add
cmp
aam
add
dec
sub
add
test
push
add
push
les
mov
movb
mov
add
lods
jae
pushl
add
xor
cmp
add
add
in
shlb
add
xchg
pop
sub
iret
inc
add
pop
sbb
movd
fistps
add
jmp
stc
inc
add
or
lock
loop
jno
adc
add
int3
fidivrs
push
insb
dec
lcall
add
add
jg
add
adc
push
aaa
jmp
add
outsb
cmpsl
add
mov
fst
inc
add
divb
incl
insb
test
inc
add
insl
cmc
clc
jno
pushl
mov
push
add
sub
add
clc
pop
stc
push
xor
ljmp
lock
mov
push
mov
push
fidivrs
add
addl
or
mov
inc
add
cmp
data16
lcall
mov
stc
into
xor
call
loope
mov
lea
add
pop
xlat
fsubl
add
xchg
aas
mov
cli
add
cmp
push
or
test
sub
push
mov
outsb
jns
add
mov
add
cwtl
mov
add
xchg
mov
add
dec
jae
jmp
add
add
mov
mov
cmc
add
call
popf
out
pop
lahf
bound
incl
fsubr
jl
in
pusha
add
mov
movl
push
add
push
xchg
push
movl
add
aam
leave
add
add
jge
stos
cmp
push
mov
add
leave
jno
lcall
add
cmovae
incl
add
cmp
add
xchg
inc
add
lret
add
mov
iret
nop
je
pop
dec
jnp
cmp
sbb
mov
xchg
test
dec
add
incl
imul
xor
out
aaa
mov
loopne
jb
ljmp
mov
add
add
push
add
lret
sti
pop
and
pushl
jb
lcall
jne
addb
add
xchg
adc
xlat
xlat
add
cld
add
ljmp
call
adc
out
bound
jmp
add
adc
push
add
hlt
add
or
add
cld
fsubrs
fcomps
int
add
iret
out
addb
jo
jmp
mov
jmp
fiaddl
lock
aaa
jmp
push
jp
sbb
adc
ljmp
lret
xor
pushl
add
ljmp
add
xchg
out
mov
cltd
repnz
incl
add
arpl
call
mov
add
xchg
adc
mov
pop
and
push
add
pop
ljmp
pop
sahf
dec
xchg
jae
lcall
sub
add
dec
mov
adc
fstpl
xor
decl
jo
decl
je
add
ljmp
ljmp
mov
pop
add
mov
add
push
pop
cmp
notb
add
add
cmp
push
fwait
data16
incl
add
xor
or
cwtl
test
xchg
outsl
push
add
cwtl
push
push
icebp
inc
add
xchg
movsb
add
lods
pop
adc
add
out
dec
icebp
je
jg
add
mov
fdivrl
call
call
movsl
add
add
sub
sub
add
xchg
cmp
add
and
jmp
sub
xchg
xchg
sbb
je
dec
pop
call
call
mov
add
sahf
xchg
jl
add
decl
add
call
add
mov
aad
add
in
mov
add
add
les
mov
mov
aas
adc
lcall
pop
in
pop
cmp
add
xor
call
stos
jne
mov
xor
ljmp
notb
decl
cmp
dec
xchg
cmp
add
call
add
cmpsb
add
addl
add
nop
mov
add
loop
push
add
daa
add
mov
or
xchg
ja
pop
fisttps
add
inc
add
shr
and
sti
sbb
bound
jmp
jmp
fldcw
data16
add
aaa
mov
add
sbb
pop
add
decl
outsb
mov
bound
fbld
pushl
add
or
add
addb
add
cli
fld
add
add
adc
decl
inc
add
xchg
cmp
scas
cli
add
call
bound
fcoms
ja
cltd
out
lods
das
xlat
nop
ret
add
mov
mov
xchg
int3
in
or
jmp
stos
pop
add
dec
and
mov
push
add
add
add
adc
fisubs
call
fcoms
lcall
xchg
imul
leave
mov
psrlq
repz
fst
dec
sub
mov
xchg
add
decl
add
call
add
cmpsl
add
arpl
incl
add
or
out
or
xor
pushl
mov
lcall
bound
cmp
add
add
mov
xchg
aas
push
rolb
add
jne
cwtl
pop
jns
lcall
test
cmp
add
inc
add
add
bnd
add
sbb
add
cmp
xor
add
push
add
pop
mov
xchg
mov
rolb
popa
add
loope
aad
push
add
aad
iret
mov
addl
jns
mov
ja
inc
add
add
out
cld
iret
cwtl
push
mov
push
inc
add
xchg
sub
add
ljmp
cltd
sub
add
add
leave
test
add
lcall
lcall
int3
or
in
push
add
icebp
adc
ljmp
imul
adc
pushl
add
test
stos
sbb
add
add
stos
adc
add
ljmp
jecxz
xor
mov
add
addl
add
inc
add
cmp
or
dec
ret
outsb
cmpsb
add
add
add
rolb
push
add
ret
add
mov
pop
in
aas
movb
add
lds
pop
ja
add
push
add
add
fucom
add
add
mov
add
and
incl
add
adc
mov
sub
xor
add
jnp
inc
add
xor
jbe
loope
jo
fcoms
add
and
lcall
xchg
hlt
sbb
or
push
add
addb
jmp
push
sub
push
popf
fildl
pusha
add
jp
mov
cmpsb
add
call
add
and
sti
insb
loop
sub
cmp
add
add
add
mov
push
add
or
pushl
pushl
jns
add
ds
add
pop
mov
shr
scas
repz
stos
xchg
cmpsl
add
and
mov
add
fst
data16
add
sbb
ret
repz
call
stos
pop
loope
add
lcall
mov
sub
test
jns
add
in
popa
add
push
sahf
cmp
add
loope
aaa
push
add
push
add
and
call
inc
add
sbb
xchg
cmp
add
idiv
lock
jl
aaa
lds
sar
add
jmp
incl
pushl
mov
mov
add
jb
inc
add
push
loop
xchg
xor
fistpl
dec
sbb
loope
mov
jae
jmp
or
add
mov
add
mov
imul
imul
mov
add
adc
add
sub
add
aad
fs
pop
add
lea
lods
out
nop
or
std
push
add
iret
or
add
int3
inc
add
add
push
and
call
add
pop
add
jb
call
add
sbb
add
ljmp
add
sbb
fwait
inc
add
out
adc
add
test
mov
mov
add
int3
aam
rcrb
mov
mov
or
add
or
add
fisubrs
add
scas
and
push
popa
add
mov
sub
lds
sub
mov
dec
int
add
ret
add
add
dec
cli
mov
cmp
popl
add
cmc
addl
add
mov
inc
add
lcall
out
and
jmp
add
dec
mov
add
cmp
add
icebp
add
xor
ljmp
or
outsb
pop
inc
add
add
pop
dec
add
add
add
mov
add
mov
and
stos
mov
mov
xor
incl
add
repnz
add
leave
lret
add
xchg
xchg
leave
les
sbb
sub
clc
stos
xchg
mov
add
mov
fwait
pop
dec
das
outsl
inc
add
pushl
adc
inc
add
or
lcall
outsl
mov
add
inc
add
outsb
xchg
addl
and
lcall
test
add
pushl
int
sbb
lods
addb
or
inc
add
add
jp
rcl
push
mov
add
xor
add
push
add
xchg
lods
and
mov
scas
test
aas
push
bound
cmp
xchg
in
ret
mov
lods
mov
add
add
call
aam
add
add
sub
add
scas
jo
push
loopne
jne
outsb
and
pushl
cmp
imull
inc
add
xor
ljmp
add
add
push
push
repnz
and
add
ljmp
jmp
lds
in
mov
push
aad
add
add
cli
and
mov
frstor
call
add
ficomps
rolb
add
add
xlat
les
rolb
enter
pushl
cwtl
aad
add
ljmp
and
jmp
sub
inc
add
add
cltd
cmp
add
mov
decl
xor
pushl
add
mov
icebp
sbb
add
loop
dec
pop
lods
jmp
movsl
add
xor
dec
cltd
jae
lcall
add
aas
cmp
iret
lds
int3
inc
add
add
add
lock
lahf
and
decl
pop
in
fwait
sub
xchg
add
pushl
ljmp
add
add
pop
icebp
cmp
nop
mov
add
insb
nop
lret
or
inc
add
in
jl
out
sub
mov
and
mov
add
out
xchg
xor
call
ret
add
add
sbb
add
mov
add
movl
pop
jae
ljmp
cmp
add
mov
xchg
push
add
mov
sub
pushl
add
and
fdivl
call
movb
dec
push
xor
jmp
out
dec
scas
insb
inc
add
mov
cmpsl
add
mov
fisttps
xchg
fidivl
add
daa
add
shll
incl
add
fidivrs
or
jl
dec
in
mov
jo
push
lcall
push
les
push
movsb
add
jno
lcall
cmpsl
add
xor
ljmp
cmp
add
xor
scas
and
decl
sub
add
adc
pushl
decl
add
movl
push
add
fcompl
bound
jmp
mov
pushl
movsl
add
call
add
loop
sti
or
add
push
arpl
lcall
jmp
sti
fcmovnb
add
sub
enter
add
add
add
roll
jb
decl
add
add
out
dec
stos
iret
sahf
xchg
or
add
into
jl
add
add
rolb
add
mov
out
push
inc
add
sub
add
mov
pop
mov
jae
add
cmc
jg
add
iret
ficoml
add
sti
or
cld
push
add
dec
pop
stos
xchg
hlt
and
incl
xchg
adc
incl
add
fmul
ret
add
add
pop
add
add
cmp
jo
decl
mov
push
add
incl
add
dec
sbb
cmovae
call
das
cmp
imul
add
in
mov
jp
dec
xchg
push
test
loope
xchg
out
pop
lahf
fwait
mov
add
add
add
decb
repnz
in
push
add
sub
pushf
xchg
cld
int
push
jl
xchg
sub
repz
adc
negb
lcall
add
arpl
incl
add
cmp
cs
push
cmp
xor
stc
mov
add
jmp
fs
jno
decl
jnp
roll
rcll
add
xor
lcall
add
out
frndint
scas
sub
out
and
incl
xchg
xchg
dec
jo
lcall
add
mov
add
jae
jmp
add
mov
push
stc
xchg
cli
inc
add
incb
add
lds
mov
pop
add
dec
sbb
add
add
pop
mov
add
add
push
lret
addb
add
fildll
roll
mov
jg
gs
leave
addb
stos
or
add
mov
jle
add
add
push
add
and
ljmp
inc
add
dec
pushf
inc
add
lcall
mov
add
add
lcall
ljmp
test
lods
insl
aaa
sub
xchg
mov
mov
add
sbb
dec
mov
jbe
push
xor
add
out
test
or
add
add
and
jnp
adc
pushl
rcrl
inc
add
add
js
decb
pop
mov
xor
incl
add
shl
dec
fstps
add
pushl
mov
add
inc
add
add
add
ljmp
add
fcmovne
jecxz
jle
cmc
cmp
add
lret
add
fiaddl
repz
pop
cmp
in
rcl
ficoml
add
jecxz
sbb
jg
fimull
xor
pop
adc
pushl
add
mov
ljmp
mov
add
and
pushl
inc
add
fsubl
add
add
mov
mov
add
cmp
test
movsb
add
mov
add
je
add
pop
or
add
leave
test
stc
dec
das
shlb
pop
mov
mov
lock
pusha
add
mov
add
ljmp
outsl
out
jmp
les
out
and
inc
add
cmp
add
ja
add
int
jg
mov
cmc
jnp
lret
add
addr16
sahf
lds
repnz
dec
xchg
ficomps
cmp
dec
xor
call
add
add
sub
add
mov
addl
xchg
xor
jmp
jmp
add
addl
fmulp
test
ret
sahf
in
mov
add
add
mov
popa
add
lods
test
in
jp
add
add
jbe
arpl
fiaddl
decl
in
jmp
or
out
pop
aad
aad
push
adc
call
add
mov
daa
add
add
jno
pushl
cld
cmp
jle
pop
test
add
jo
jmp
pop
inc
add
mov
add
xor
jmp
add
cmpsl
add
jl
and
mov
add
cmpsb
add
add
ret
stos
out
clc
push
add
fidivrs
cmp
bound
lcall
dec
jge
lahf
pop
ret
inc
add
insl
or
mov
add
cmp
jmp
add
or
add
mov
icebp
sbb
add
aas
adc
call
and
lcall
jmp
rolb
xchg
aas
push
push
add
add
dec
loopne
fs
sbb
push
ja
mov
outsl
push
rolb
mov
xchg
jmp
add
and
ret
add
jg
leave
ror
aad
sbb
leave
mov
add
add
cmp
jmp
add
add
loope
cmp
fsts
ljmp
ret
add
add
mov
lcall
cs
aad
stos
addb
add
jnp
fwait
addr16
add
add
aas
xchg
lea
daa
add
dec
in
ret
pusha
add
and
cmp
jmp
add
add
mov
sub
add
add
dec
mov
add
jo
call
rolb
add
push
adc
cmp
add
push
mov
inc
add
add
call
into
addl
add
add
dec
lods
mov
adc
pushl
jmp
add
scas
xchg
cmp
stc
outsl
jns
sbb
lret
inc
add
cmp
aad
dec
push
add
movsl
add
add
push
add
inc
add
add
inc
add
cmp
test
int3
mov
cmpsl
add
mov
cmp
in
add
add
push
das
push
cld
dec
dec
test
add
mov
add
cmp
add
add
add
push
repnz
into
xlat
ret
add
call
xor
add
xchg
insl
movb
or
addl
imul
hlt
fdiv
pop
dec
pop
pushf
mov
add
add
dec
fwait
inc
add
rol
add
sar
movl
outsb
dec
add
pop
add
clc
adc
fistpll
mov
add
add
inc
add
ds
hlt
jns
dec
xchg
adc
add
dec
movsb
add
push
pop
mov
mov
add
dec
xchg
mov
add
add
fsubrs
movb
add
inc
add
aam
das
not
pop
add
fucomi
out
pop
repnz
mov
cmp
add
in
jo
inc
add
negl
add
mov
cltd
call
lock
add
add
push
imul
incl
add
aas
notl
add
add
inc
add
int3
xchg
addl
add
les
enter
sub
iret
dec
dec
pop
sub
mov
xor
mov
call
add
xlat
pop
sti
in
or
test
shll
add
sub
sbb
add
add
adc
lcall
add
xlat
sbb
and
repz
push
add
fnstenv
add
xor
jp
add
cmpsb
add
add
mov
inc
add
ljmp
bsr
testb
in
push
sbb
jecxz
xor
lcall
idiv
mov
cld
addb
aad
add
push
in
sbb
xor
cld
lods
bound
inc
add
dec
stos
mov
call
xchg
mov
cmp
ljmp
add
or
popl
scas
xchg
mov
ds
push
jmp
add
mov
add
add
ds
add
addl
jne
jl
scas
push
add
fidivs
add
mov
pushl
sub
fsubl
in
mov
add
jmp
add
add
stc
movsl
add
inc
add
add
pop
add
add
faddl
lcall
xchg
add
jmp
add
cli
je
inc
add
fistl
pop
and
push
in
aad
add
inc
add
femms
outsl
push
push
mov
jo
fimuls
fldt
aas
adc
decl
fdivp
push
add
xor
incl
call
incl
add
dec
or
movsb
add
add
ret
add
cmpsb
add
add
dec
out
inc
add
add
lcall
add
xor
test
xchg
pop
inc
add
adc
fmul
jmp
fdivrs
pop
mov
lea
mov
sub
or
call
sub
mov
push
cmp
add
sbb
daa
add
sbb
xchg
roll
aam
add
or
dec
mov
or
fsubrp
ja
addl
pop
push
adc
ljmp
test
sub
lock
jns
pop
mov
add
lods
sbb
jge
and
add
sti
mov
inc
add
mov
sti
mov
add
stos
xchg
jle
fwait
push
add
add
stos
out
and
mov
add
add
jecxz
cmc
dec
sub
add
rcrb
add
add
insb
pop
out
mov
popl
add
fcmovne
repnz
add
mov
add
ret
add
lcall
dec
testb
add
test
push
add
mov
sub
mov
xchg
ljmp
pop
mov
imul
dec
pop
xchg
je
add
add
enter
or
movb
sti
or
cli
pop
mov
add
and
pushl
adc
call
jb
decl
lods
stos
push
addb
push
dec
add
incl
add
xchg
jg
roll
add
decl
xchg
call
add
inc
add
lods
aaa
and
jmp
add
addb
jno
jns
xchg
push
push
jae
pushl
jp
bound
call
mov
pop
insl
lods
into
cmp
add
mov
test
aam
or
mov
movsb
add
add
or
mov
les
fsubrs
add
lea
adc
incl
mov
cmp
mov
and
data16
xchg
into
flds
mov
pushl
lcall
add
add
clc
pop
repnz
sub
jle
ss
and
jmp
add
fldcw
pushl
add
daa
add
add
adc
incl
add
stc
xchg
sub
loope
shlb
decl
roll
add
add
addb
mov
jmp
add
pop
aaa
and
pop
imul
add
mov
add
mov
add
insl
fimuls
ja
jne
push
add
mov
test
call
addb
or
push
add
jg
add
lds
movb
inc
add
pop
outsb
pop
mov
sub
pop
scas
rolb
int3
pop
jl
push
outsl
lods
testb
add
push
or
add
aam
add
add
decl
dec
cld
sbb
das
out
jno
lcall
add
push
and
jmp
add
addb
roll
dec
mov
add
add
roll
add
ja
in
xchg
mov
add
outsb
out
and
call
rolb
imul
add
popf
std
js
mov
add
lcall
movb
add
add
ds
and
decl
add
push
add
stos
enter
lock
add
add
mov
ljmp
xor
decb
ss
add
dec
push
and
ficoms
pushl
ljmp
add
lcall
add
push
mov
inc
add
jg
add
decl
cmpsl
add
clc
lods
cmp
loop
outsl
push
aaa
ss
mov
call
add
dec
popa
add
sti
out
adc
jl
push
add
push
mov
ret
add
xor
ljmp
mov
add
mov
bound
inc
add
inc
add
iret
jge
aaa
mov
cli
mov
call
dec
xor
lcall
shl
mul
add
pushl
push
add
pusha
add
popa
add
inc
add
popa
add
and
stc
in
sub
decl
inc
add
imul
pushl
les
xor
pushl
add
addb
outsb
jne
add
add
scas
cmp
add
sub
inc
add
xchg
mov
add
call
lds
addl
mov
roll
jp
xchg
insl
push
data16
pushf
popa
add
or
pop
jnp
add
mov
inc
add
call
pop
mov
daa
add
sub
add
test
inc
add
add
cld
pop
pop
fwait
jecxz
xchg
aaa
fdivrl
or
add
pushf
adc
inc
add
and
decl
popa
add
ljmp
lret
xchg
jnp
mov
mov
adc
push
push
add
mov
push
pop
or
bound
call
inc
add
dec
in
movsl
add
incl
lret
das
pusha
add
sub
sbb
or
cmpsl
add
ljmp
call
mov
aas
movsb
add
xor
incl
mov
mov
add
fstl
test
add
sub
jmp
js
insl
mov
add
pop
sqrtps
out
and
xchg
adc
pushl
jmp
add
jns
add
cmpsl
add
inc
add
add
add
das
fimuls
add
or
sub
xchg
dec
repz
inc
add
add
movl
pop
mov
inc
add
ficoms
add
adc
mov
in
bound
incl
add
ss
add
jge
hlt
xor
cmp
push
add
out
pop
ja
add
aam
or
jmp
add
sbb
outsl
cs
add
pop
and
jmp
xor
inc
add
push
pushf
add
incl
add
mov
add
add
sbb
add
nop
cwtl
cmpsb
add
and
enter
call
lods
pushf
sbb
pop
add
int
aas
add
ljmp
push
push
call
add
push
add
mov
js
add
call
add
inc
add
scas
mov
loopne
add
fwait
sub
pop
les
imul
add
cmc
pop
clc
loop
sub
decl
lcall
xor
ljmp
add
inc
add
add
add
addb
aaa
sbb
sbb
mov
push
add
inc
add
loopne
je
add
jae
call
addb
outsl
xchg
mov
incl
cld
ret
negb
add
cli
jno
call
call
fisubrs
dec
mov
add
add
fwait
inc
add
test
and
push
add
adc
jmp
add
add
jle
add
pop
jge
add
pushf
cmp
aad
add
mov
push
pusha
add
bound
incl
repz
add
ja
dec
dec
cmp
loopne
add
jl
adc
and
fildl
mov
add
add
xchg
xlat
les
push
add
out
and
xor
ljmp
in
fcmovnbe
mov
jl
lahf
mov
int
xchg
iret
daa
add
scas
add
add
ret
add
pop
push
add
in
and
cmp
cltd
mov
jge
cmpsl
add
fs
lea
cmpsb
add
das
pop
push
mov
add
xor
incl
ljmp
add
mov
inc
add
mov
fsts
jmp
inc
add
add
loope
sub
add
movb
inc
add
add
mov
stc
jbe
add
dec
pop
pushf
mov
add
add
popf
loopne
fistps
mov
add
jmp
dec
ds
das
mov
or
adc
call
decl
add
bound
fsubrs
call
cmp
jmp
add
stos
jae
pushl
add
lret
lods
fsubrs
arpl
lcall
sti
mov
add
ret
loop
mov
mov
push
fwait
sbb
add
sub
xchg
aaa
xchg
add
jmp
add
inc
add
add
call
add
inc
add
imul
sahf
cmc
xchg
out
leave
sub
push
add
cmp
mov
lds
mov
movsl
add
pushl
add
push
add
inc
add
mov
mov
negb
js
mov
or
add
sbb
je
inc
add
push
add
lret
push
add
cltd
pop
cmp
add
aas
das
xor
pushl
test
or
add
incl
add
call
add
gs
xor
decl
sub
decl
xchg
mov
arpl
incl
add
pushl
lret
or
xchg
test
mov
test
push
add
pushl
add
add
dec
pop
addb
add
xor
ljmp
sub
fcoml
inc
add
test
addl
add
test
rolb
test
jbe
inc
add
loopne
js
sbb
add
xor
call
xor
call
mov
sub
das
dec
out
jno
lcall
mov
dec
outsl
hlt
mov
lcall
lcall
or
add
push
cmp
testb
insl
inc
add
add
mov
add
mov
inc
add
jnp
out
mov
call
add
push
stc
and
cmp
repz
cli
pop
add
lcall
push
fnstsw
push
cmp
add
pushl
add
add
sub
dec
nop
in
addr16
add
cmp
xlat
sub
add
add
int3
sub
xor
decl
repz
mov
cld
roll
cmp
into
or
add
aad
jle
mov
jnp
into
push
xor
incl
in
lods
lret
add
jmp
add
add
pop
loop
inc
add
in
mov
mov
je
addb
add
sbb
add
sbb
enter
insl
sti
push
loopne
roll
jecxz
in
out
dec
lahf
xchg
hlt
and
cmp
add
and
jmp
cwtl
mov
add
add
mov
jl
pop
or
fcmovu
sub
add
adc
scas
inc
add
sub
add
std
mov
psubb
xor
sub
add
ret
ljmp
add
dec
mov
jmp
add
lcall
push
test
push
mov
jne
addl
add
jmp
inc
add
xchg
movl
add
lcall
add
je
add
testl
call
add
cmp
out
push
add
adc
add
mov
call
fdivrl
mov
stc
je
or
pushl
jmp
add
lahf
and
lcall
add
inc
add
arpl
in
ret
add
mov
loope
mov
dec
ljmp
jnp
fsubr
xchg
fcoml
call
ror
dec
cmp
dec
sbb
add
call
lods
cmp
jg
add
add
iret
test
sub
add
aam
cmp
je
add
je
je
add
decl
pop
stos
xchg
xor
call
add
call
pushl
add
mov
les
push
push
add
cmp
add
and
pushl
adc
xchg
ja
mov
add
cmc
pop
add
add
add
data16
push
hlt
xor
pushl
incl
add
add
int
add
test
add
int
pop
lods
test
mov
add
xchg
jle
jmp
rorb
stos
push
mov
add
incl
mov
leave
mov
add
pushl
xor
decl
add
movsl
add
inc
add
sub
aas
adc
lcall
mov
outsl
nop
rcr
out
push
add
negl
adc
repnz
sbb
pusha
add
sbb
xor
mov
lcall
sahf
sbb
push
add
add
mov
add
add
fidivrl
add
xchg
cmc
sub
add
add
fcomps
inc
add
test
add
cmp
add
xchg
push
add
mov
add
add
bound
jmp
add
add
daa
add
int
addb
aad
mov
movl
dec
sarb
cli
or
add
mov
addl
sub
add
addb
stc
repnz
add
xchg
dec
int
pop
mov
add
add
outsl
jae
inc
add
cmp
add
jge
call
call
iret
and
xor
jmp
add
aas
add
ficoms
lcall
xor
call
cld
aad
insb
lahf
arpl
ficoml
add
xchg
decl
add
lock
add
inc
add
bound
push
mov
das
dec
push
dec
cmp
or
add
sti
lret
add
or
add
mov
call
jmp
mov
xor
inc
add
jle
add
mov
out
pushf
jb
pushl
lret
dec
jge
test
add
add
int
add
mov
jo
call
add
add
pop
xchg
cmp
int3
out
fwait
aas
rolb
pop
mov
ss
lods
xchg
push
sbb
add
pop
roll
sbb
leave
and
pushl
inc
add
push
testl
add
cwtl
mov
cld
clc
xchg
lds
push
jmp
dec
mov
add
add
ljmp
arpl
jmp
add
mov
inc
add
mov
add
add
add
movb
add
outsb
ljmp
add
cli
mov
add
arpl
call
je
dec
inc
add
sbb
add
add
pop
pop
cld
jmp
mov
aam
add
jo
ljmp
add
outsb
push
add
jp
addl
adc
incl
repz
lret
nop
adc
cmp
add
js
inc
add
int
jge
add
push
add
movsl
add
incl
lcall
test
add
ds
test
mov
sub
out
pop
mov
mov
aas
lock
out
loop
pop
int
add
daa
add
cwtl
mov
add
int3
addl
lcall
popf
jecxz
ret
add
pushf
test
mov
lret
clc
loope
cmp
add
xor
decl
scas
push
outsl
cmp
add
push
add
popf
jle
cmp
aas
pop
sbb
decl
push
add
dec
ret
fstpl
add
lret
imul
add
mov
add
aad
add
add
into
in
mov
xchg
pop
add
scas
mov
cwtl
lret
pusha
add
test
and
call
call
lods
xchg
sbb
add
addb
data16
add
mov
ficoms
scas
adc
pushl
loop
rcrl
imul
add
add
test
push
add
add
add
sbb
add
fwait
xor
push
mov
add
add
pop
push
add
hlt
adc
ljmp
xor
lcall
add
call
pop
arpl
ljmp
and
fcoms
add
lods
push
loop
add
sahf
adc
call
jmp
add
xchg
aam
roll
sub
fstps
push
sar
add
add
out
dec
addl
add
add
shr
outsl
mov
sub
sbb
xchg
or
xchg
rol
add
add
cmp
imul
add
mov
daa
add
fwait
dec
mov
push
sarb
and
pushl
add
in
push
push
pop
xchg
jbe
in
jge
pop
jae
decl
enter
adc
cmp
add
aam
jle
add
cltd
cmp
gs
dec
or
push
mov
mov
add
shlb
fists
jae
jmp
add
sub
mov
add
pushl
cs
ss
pop
sbb
dec
jnp
stos
and
xor
jnp
add
call
jmp
pushf
in
repz
add
shll
add
lcall
lret
sub
add
push
imull
jmp
add
jecxz
ret
sbb
xor
lods
movsl
add
mov
cli
adc
ljmp
inc
add
int3
sbb
adc
fsub
add
xchg
rol
add
add
add
add
mulb
add
ljmp
add
pop
mov
inc
add
std
das
lds
arpl
incl
clc
jp
xchg
push
add
ret
add
shll
add
cli
aas
pushl
add
cmp
add
arpl
lcall
add
add
pushf
dec
and
decl
out
addb
xchg
jmp
add
add
jns
and
call
add
add
jmp
add
mov
je
push
adc
call
call
and
xor
filds
jnp
cmpsl
add
jp
dec
mov
inc
add
pop
push
into
mov
add
pushl
add
into
sub
sub
push
inc
add
inc
add
das
arpl
call
jmp
add
sub
add
adc
fstpt
add
add
cmp
out
add
push
inc
add
pop
jg
push
add
dec
sbb
add
fsubr
lcall
ficomps
test
add
sub
cmp
loop
mov
clc
into
movsl
add
jno
ljmp
add
sahf
aaa
mov
add
loop
movsb
add
mov
incl
movsb
add
xchg
outsb
adc
clc
repnz
add
lea
add
dec
daa
add
add
add
lock
decl
xchg
cli
lahf
in
or
mov
add
add
add
push
add
fisubrl
add
add
call
inc
add
mov
xchg
stos
cli
mov
ret
add
add
repz
cmpsb
add
push
loope
and
incl
inc
add
add
add
notb
ljmp
dec
or
add
shlb
add
push
cmp
add
data16
js
add
out
sbb
add
push
xor
lcall
cltd
mov
out
mov
add
cs
out
fldt
stos
lcall
add
add
decl
mov
push
add
add
je
lods
mov
test
rolb
dec
mov
push
cltd
sub
push
in
loope
push
add
pop
inc
add
fmull
sub
frstor
dec
rcll
pushf
fisttpl
add
push
aaa
mov
ja
add
add
and
lcall
fdivrs
add
mov
cld
nop
mov
nop
arpl
cli
sub
xchg
fnstcw
add
dec
test
pop
lahf
pop
add
add
out
gs
add
mov
or
add
add
and
pushl
jns
roll
add
mov
add
notb
call
lods
ud1
ret
and
call
add
ljmp
add
bound
pushl
add
ror
push
in
ja
add
inc
add
incl
fdivrp
lret
xor
jmp
sbb
addl
add
pop
jbe
hlt
inc
add
add
inc
add
fs
add
ret
add
push
jb
pushl
pushl
add
pop
mov
add
test
mov
pushf
nop
negl
add
ljmp
add
cmp
pushf
pop
insb
scas
cmp
addb
add
mov
push
add
dec
xchg
inc
add
add
jne
bound
fdivs
sbb
adc
call
int3
into
jno
mov
add
dec
ja
xchg
pop
scas
pop
adc
popa
add
movsb
add
sti
movsl
add
dec
mov
dec
jmp
mov
add
mov
add
adc
aas
sbb
add
adc
ljmp
add
cmp
pop
roll
jns
scas
dec
movl
sbb
ljmp
shll
ds
add
push
sahf
push
repnz
call
add
fistl
add
add
fcomi
add
fisttps
add
faddl
flds
add
add
std
addb
ljmp
jmp
mov
push
add
cmp
mov
add
jecxz
sub
int
xor
mov
xchg
pusha
add
repnz
stos
das
push
dec
lahf
bound
ljmp
add
sub
pop
dec
xlat
ljmp
add
xor
inc
add
jg
shll
add
mov
aaa
push
mov
jmp
xlat
xlat
out
and
lcall
add
pushl
cwtl
movb
arpl
out
data16
call
fcmove
fmuls
mov
add
lcall
call
mov
js
cmp
add
adc
inc
add
add
out
mov
add
dec
mov
call
cli
xlat
cmpsb
add
push
add
decl
add
adc
icebp
cmp
xchg
inc
add
mov
loopne
loope
lcall
sbb
movb
add
int3
jbe
mov
push
add
add
sti
cmp
add
loopne
int3
loopne
mov
add
add
movsl
add
jb
call
sarl
mov
fsts
call
pushl
ljmp
push
inc
add
rcr
popf
jp
push
inc
add
inc
add
push
add
xchg
and
sbb
add
add
add
repz
mov
lcall
pushl
add
push
mov
lods
dec
pop
and
lcall
add
and
jge
add
mov
in
out
adc
mov
push
pop
scas
mov
incl
pushl
incl
fstpt
sbb
pushf
sub
outsl
jne
lods
pop
out
add
pushl
xchg
mov
add
rcll
outsl
pop
add
call
mov
add
add
arpl
call
xor
xor
add
push
add
add
movsl
add
push
inc
add
and
ljmp
mov
sbb
add
xchg
jno
jmp
add
dec
stc
inc
add
aas
and
pushl
add
xor
js
dec
pop
cli
add
jp
xor
decl
insb
cmpsl
add
inc
add
repz
std
mov
sub
xchg
xor
dec
mulb
inc
add
lea
ljmp
cmp
repz
push
add
sbb
inc
add
cli
sub
jo
ljmp
pusha
add
cmp
inc
add
cs
add
pop
jg
add
pusha
add
inc
add
in
pop
data16
das
push
movsl
add
add
dec
cmp
cmp
adc
ljmp
add
roll
int
cmp
pop
mov
add
jb
ljmp
sti
dec
clc
pop
xor
pushl
add
cmp
add
dec
xchg
cld
in
into
xchg
push
add
pop
stos
shll
add
insl
pop
cmp
mov
xor
jmp
adc
jp,pt
add
mov
sub
add
insb
jmp
add
fldln2
xchg
xchg
cmpsb
add
add
add
dec
ret
add
sub
imul
ja
sbb
nop
dec
jns
mov
out
xchg
fdivs
cli
mov
filds
mov
adc
incl
ljmp
mov
jmp
add
add
add
ss
jmp
add
stc
adc
add
fadds
add
cli
add
flds
pop
lock
add
add
jmp
add
xor
call
sub
add
jbe
and
decl
inc
add
cltd
stc
outsl
lds
add
jge
stc
cmp
dec
jecxz
push
add
adc
add
add
pop
cli
mov
add
add
sbb
add
mov
add
decl
pop
and
mov
xchg
mov
lret
pop
inc
add
or
fmuls
add
xor
sbb
rolb
mov
loop
pop
add
iret
repnz
add
add
in
push
add
xor
std
loopne
push
add
enter
add
pop
push
mov
loop
pop
jp
inc
add
lcall
enter
add
cmp
lcall
pushl
cmp
lcall
sti
rep
lcall
inc
add
test
add
push
add
inc
add
test
dec
or
daa
add
add
push
add
add
jbe
add
rol
add
xchg
mov
rorl
push
lret
rcrb
fmull
inc
add
cmp
add
mov
add
adc
pushl
push
imul
mov
pop
aaa
insb
cltd
mov
movsb
add
cli
aam
add
xor
leave
jg
jmp
add
add
mov
call
add
sbb
pushl
dec
mov
add
mov
push
dec
sbb
adc
add
fcoml
add
lret
jge
nop
jns
add
mov
ret
add
and
add
mov
pop
dec
mov
dec
inc
add
cmpsl
add
call
xor
add
cmp
pop
lods
or
stos
in
addb
add
dec
mov
mov
add
addl
add
rolb
add
js
add
jmp
add
shll
lock
pushl
and
lcall
cmp
lods
sbb
mov
xchg
addb
add
add
or
add
jecxz
loopne
iret
arpl
jmp
jns
add
call
pusha
add
into
in
lcall
repz
popf
sbb
jne
filds
incl
dec
sub
add
add
add
add
mov
and
inc
add
add
add
ret
mov
fsubp
add
mov
fsubs
inc
add
arpl
jmp
call
add
lret
jle
outsl
mov
add
jle
xchg
and
jb
in
mov
sub
or
add
mov
sbb
add
pop
push
ret
add
sahf
popa
add
aaa
add
call
cmpsl
add
add
insb
aaa
out
jle
add
test
idivb
add
iret
add
add
xchg
into
push
sub
shrb
inc
add
rcrl
add
addb
add
push
push
mov
fdivl
mov
adc
jmp
icebp
das
xchg
addb
daa
add
jge
int
movb
outsl
mov
jne
push
add
out
jae,pn
jmp
dec
data16
dec
stos
or
clc
jp
loop
adc
incl
add
add
repnz
dec
xchg
push
add
leave
push
sub
mov
lcall
add
add
incl
add
sarl
fistl
jne
lcall
xchg
lcall
or
add
push
add
dec
push
add
ljmp
add
incl
aas
test
push
add
bound
incl
lock
mov
mov
or
ljmp
add
push
pop
mov
add
fadd
add
adc
scas
sbb
add
xor
jmp
add
push
addb
sahf
sbb
jmp
cwtl
mov
add
add
pop
add
add
jo
lcall
mov
nop
lock
jns
inc
add
imul
addl
addb
add
add
push
roll
xlat
lea
dec
gs
int
add
dec
and
jmp
push
pop
jns
loop
push
inc
add
sbb
cwtl
sbb
and
pushl
lcall
test
addb
out
loope
sti
inc
add
jge
add
bound
ljmp
scas
or
lods
push
add
add
call
push
push
add
push
add
decl
dec
xchg
enter
insb
adc
ljmp
fisttpl
add
push
add
cmp
sub
add
push
add
outsb
sub
add
daa
add
inc
add
out
jecxz
xlat
sahf
rolb
push
sbb
add
adc
pushl
outsl
dec
stc
sub
sub
mov
ficomps
add
jp
cmpsb
add
or
xor
add
add
pop
sbb
enter
xor
ljmp
inc
add
mov
jmp
mov
add
add
incl
add
add
fstp
or
add
add
cli
out
jp
mov
sbb
decl
add
pushl
or
dec
movsb
add
jo
decl
add
decl
xor
call
add
aad
add
add
ljmp
or
ret
add
or
movsb
add
mov
cmpsb
add
jbe
fcomps
scas
mov
add
jecxz
addl
mov
call
mov
lcall
xchg
pop
outsb
adc
decl
xchg
add
lcall
into
jmp
call
jge
xchg
hlt
mov
fimuls
ret
loope
push
add
mov
add
ficoml
fnstenv
movb
pop
mov
cltd
mov
out
hlt
aaa
roll
testl
add
add
xor
add
cmp
xor
pushl
add
jp
aam
les
sub
pushl
testl
cli
xor
imul
loop
popa
add
push
dec
push
fmul
add
add
mov
inc
add
sub
addb
add
inc
add
repnz
xchg
mov
xchg
push
add
pop
mov
add
les
fimuls
add
push
cmp
int
xchg
jmp
mov
std
push
mov
lahf
dec
sub
adc
pushl
pop
scas
mulb
jmp
into
push
clc
dec
dec
or
je
xchg
sub
add
dec
xchg
imul
sub
dec
mov
fnstsw
mov
mov
mov
outsl
out
push
outsl
mov
add
mov
add
popf
loope
inc
add
mov
add
add
stc
fwait
mov
add
adc
call
decl
push
add
clc
sarb
in
cli
or
inc
add
add
jmp
add
add
mov
add
jge
fcoms
add
lds
sbb
add
add
add
sub
sahf
scas
xchg
scas
jns
add
outsb
push
jge
test
pusha
add
jle
jl
add
fstpl
sub
add
dec
mov
lcall
and
dec
movb
rolb
pop
pop
loopne
je
jg
mov
adc
call
and
call
add
ja
xor
mov
test
xchg
dec
mov
add
decl
inc
add
add
and
out
dec
mov
add
cmp
add
add
loop
loop
cmp
je
add
add
mov
fmulp
lds
jecxz
addl
add
adc
ljmp
add
add
jmp
mov
xor
pushl
cmpsl
add
add
jge
out
cmp
add
test
addr16
or
jle
dec
aam
pop
loope
add
decl
inc
add
cmpsl
add
dec
in
mov
add
add
roll
dec
imul
cmp
add
add
leave
inc
add
add
mov
addl
jmp
pop
mov
enter
lcall
pushl
add
addb
add
lea
cmp
std
sub
pop
mov
add
adc
decl
or
add
js
test
loope
pop
push
fdivrl
out
rcrl
add
add
sub
cmp
add
pop
pop
movsb
add
or
pop
mov
popa
add
popa
add
addb
into
mov
jl
mov
add
pop
inc
add
rcr
jmp
scas
dec
jp
out
into
xor
sti
aad
loop
mov
fisttps
adc
ljmp
add
and
jmp
add
xor
decl
addl
rolb
push
mov
les
or
mov
aad
add
add
push
cmp
sub
in
xchg
adc
jns
add
cmc
jb
pushl
add
roll
and
push
call
mov
dec
ret
add
add
ret
add
add
jne
lods
sbb
add
addb
fsubrl
cli
pop
in
int
or
and
and
push
jmp
mov
mov
ljmp
stc
inc
add
sbb
mov
cmpsl
add
fnstcw
add
loop
dec
inc
add
cmp
cmp
mov
sbb
mov
leave
mov
add
add
loop
daa
add
and
pop
sbb
add
ret
add
jp
sbb
fsts
add
push
add
cmp
mov
add
or
add
test
fsubrs
add
ja
roll
movsl
add
add
and
ljmp
ret
add
add
jg
lcall
lcall
mov
jbe
add
fnstenv
jmp
add
mov
sbb
jbe
sbb
sub
add
outsb
mov
mull
cmc
movb
add
add
lea
add
or
or
jl
add
add
inc
add
ret
add
add
add
jnp
test
push
je
xchg
xor
jmp
add
cmp
sbb
adc
ljmp
mov
clc
mov
or
pop
idivl
int
add
pushf
repz
xchg
sbb
add
jns
adc
lcall
add
push
add
fsincos
addl
pop
push
pop
sbb
add
inc
add
leave
push
add
adc
decl
xor
cmp
loope
imul
add
pop
add
mov
cld
mov
out
or
bound
ljmp
roll
add
adc
decl
pushl
popl
add
data16
in
inc
add
mov
add
adc
ljmp
std
add
out
inc
add
dec
imul
add
cmpsl
add
cmp
inc
add
push
add
js
add
cwtl
into
add
dec
add
ljmp
insb
in
or
jmp
add
mov
xchg
sub
add
fwait
mov
add
dec
xchg
nop
imul
dec
rolb
xchg
push
movsb
add
fidivs
inc
add
push
mov
adc
lcall
adc
call
imul
cmpsb
add
sbb
add
ret
pop
in
push
add
xor
ljmp
or
add
arpl
ljmp
sbb
sbb
add
mov
add
in
jg
jns
add
add
add
incl
pushl
add
repnz
add
mov
push
testl
mov
xor
ljmp
add
add
push
and
mov
mov
add
add
xchg
test
mov
imul
add
add
stos
or
lods
and
ljmp
dec
lds
xor
jmp
or
call
movb
ja
xchg
mov
xor
dec
xchg
in
pop
add
std
lcall
add
nop
mov
fadds
add
adc
cmpsl
add
pop
sbb
jae
pushl
decl
mov
xor
ljmp
add
je
ret
add
inc
add
rcl
push
je
out
inc
add
mov
add
movsl
add
daa
add
add
iret
ljmp
incl
mov
int3
lahf
ljmp
pop
cmc
lock
cmpsb
add
xor
cltd
adc
ljmp
jae
jl
lea
out
xchg
mov
loopne
mov
add
sub
xor
incl
inc
add
add
adc
lcall
pop
loop
mov
adc
pushl
cmp
call
pushl
clc
addl
xchg
adc
mov
mov
add
sbb
fsubl
out
xchg
jae
decl
arpl
decl
in
pushf
push
mul
add
repz
dec
addl
imul
ja
cmpsl
add
lret
sub
add
mov
add
adc
mov
repnz
add
push
movsl
add
and
faddl
add
push
add
push
push
add
out
rcl
lods
jle
xlat
and
mov
add
push
add
cs
jnp
ds
xor
cld
xor
call
scas
les
jae
incl
ljmp
add
aaa
aas
add
push
mov
add
add
hlt
lret
mov
nop
jmp
movsl
add
sub
nop
jmp
add
lahf
je
nop
jmp
add
add
dec
add
push
mov
xchg
ret
add
add
nop
jmp
ja
cmp
sldt
mov
add
nop
jmp
add
incl
add
add
mov
and
add
or
fimull
add
add
push
add
add
xlat
mov
jmp
add
xor
cs
test
lds
aas
add
nop
jmp
add
or
add
or
aaa
cltd
inc
add
add
add
nop
jmp
add
xchg
add
fisttpll
push
mov
xchg
ret
cmc
add
add
xor
jmp
add
add
adc
mov
push
mov
xchg
ret
add
pop
push
mov
xchg
ret
incb
add
mov
nop
jmp
addb
add
pop
add
lcall
mov
nop
jmp
cs
fstp
add
nop
jmp
jno
mov
pop
add
add
mov
nop
jmp
adc
add
movsl
in
mov
nop
jmp
add
mov
add
shr
nop
jmp
add
mov
add
add
push
mov
xchg
ret
pusha
cmp
jmp
mov
sti
pop
add
add
add
jecxz
push
dec
mov
nop
jmp
add
add
add
add
add
xor
push
mov
xchg
ret
add
aam
add
add
fiadds
pop
cmp
mov
xchg
ret
or
std
xchg
nop
jmp
mov
lcall
nop
jmp
add
pop
cmp
fisubl
je
nop
jmp
add
or
push
push
mov
xchg
ret
add
pusha
movsl
inc
add
nop
jmp
ja
add
add
mov
jmp
cmp
ret
jnp
jge
nop
jmp
add
add
push
xor
nop
jmp
add
add
sbbb
repnz
jmp
fiaddl
sub
cli
call
nop
jmp
add
add
incl
pushl
mov
nop
jmp
add
add
nop
jmp
punpcklbw
dec
mov
jp
jbe
nop
jmp
add
and
add
lcall
nop
jmp
add
add
add
cmp
add
rcll
nop
jmp
pop
fs
cs
cs
nop
jmp
add
add
add
add
mov
mov
and
jmp
fiaddl
mov
add
pop
mov
nop
jmp
add
movsb
add
lods
movzwl
nop
jmp
add
cmc
add
nop
jmp
push
xor
add
cmp
add
nop
jmp
or
push
ja
int
les
nop
jmp
fnsave
addb
push
add
dec
movzwl
nop
jmp
add
add
add
jmp
nop
jmp
jg
mov
std
add
nop
jmp
add
ficoml
ja
jmp
nop
jmp
add
adc
adc
lcall
pushl
nop
jmp
mov
add
add
repnz
and
pop
jp
outsl
pusha
nop
jmp
cmp
jae
add
nop
jmp
pop
cmp
jg
movsb
cmp
mov
xchg
ret
add
mov
push
push
mov
xchg
ret
add
add
rcll
mov
cmp
inc
push
mov
xchg
ret
add
inc
jp
nop
jmp
hlt
add
sbb
test
call
add
jg
xchg
xchg
int3
pop
nop
jmp
add
cmc
cltd
add
lret
jecxz
sti
shr
nop
jmp
add
add
fmuls
cs
add
pushw
add
sub
add
add
lcall
add
add
movsb
sbb
loop
jmp
add
sub
ss
rorb
add
add
orb
dec
test
and
sti
add
mov
pop
adc
add
fiaddl
add
add
jmp
aam
sbb
pop
add
add
add
mov
dec
push
nop
jmp
ficoml
cmp
mov
add
add
nop
jmp
add
xchg
mov
add
nop
jmp
fldl
add
lahf
sub
nop
jmp
sti
gs
add
mov
mov
xchg
ret
add
jno
cld
mov
push
mov
xchg
ret
add
or
add
nop
jmp
pusha
hlt
add
inc
add
pushf
add
nop
jmp
gs
add
mov
call
add
add
dec
cmpl
nop
jmp
adc
jmp
nop
jmp
add
cmp
add
nop
jmp
add
push
mov
pushl
add
add
add
incl
sti
xor
pusha
add
cmovae
add
add
mov
nop
jmp
incl
mov
mov
pusha
lret
addl
and
pushl
and
incl
add
sbb
add
add
fstpl
cltd
mov
push
push
mov
xchg
ret
add
push
mov
xchg
ret
pop
add
and
nop
jmp
cwtl
add
or
jbe
add
jg
nop
jmp
add
add
inc
add
xchg
and
jl
fisttpll
add
nop
jmp
pushl
push
mov
jmp
sldt
add
fs
inc
add
pop
push
nop
jmp
push
mov
add
rolb
pusha
add
dec
pop
nop
jmp
cmp
mov
add
pop
add
and
add
cmc
pop
add
fs
pop
mov
nop
jmp
mov
add
fisttpll
nop
jmp
cmc
mov
add
mov
xchg
ret
xor
fidivl
inc
nop
jmp
add
mov
add
out
rep
nop
jmp
cmp
jbe
mov
push
push
mov
xchg
ret
add
add
add
nop
jmp
add
or
adc
add
nop
jmp
jbe
mov
out
scas
je
nop
jmp
xor
add
add
nop
jmp
add
xor
or
mov
nop
jmp
add
cmc
add
xchg
mov
add
add
add
mov
add
movl
dec
inc
nop
jmp
addb
push
add
mov
insb
push
mov
jg
add
adc
and
add
add
sbb
mov
xchg
ret
jno
add
hlt
push
nop
jmp
pop
add
mov
nop
jmp
cs
add
add
cli
pop
add
fstpl
sub
mov
push
mov
xchg
ret
mov
pop
cld
push
mov
xchg
ret
or
add
enter
adc
mov
lea
add
data16
push
add
add
add
mov
jmp
xor
push
add
mov
jne
nop
jmp
fldl
add
and
incl
clc
jmp
nop
jmp
sub
cmp
popa
nop
jmp
mov
cmp
aas
mov
nop
jmp
add
cld
mov
nop
jmp
add
ja
add
insl
xor
nop
jmp
incb
add
jae
add
add
mov
add
nop
jmp
add
cmp
cli
incl
add
add
jg
pusha
push
add
stos
add
nop
jmp
cmc
add
add
cmp
nop
jmp
mov
add
adc
jmp
jae
mov
nop
push
movzwl
nop
jmp
add
push
mov
push
movb
add
sbb
mov
test
call
incl
movsb
add
shr
nop
jmp
aam
mov
add
push
nop
jmp
add
pusha
add
add
xchg
das
dec
nop
jmp
lcall
fcmovbe
add
xchg
cmpsb
add
call
add
sub
mov
nop
jmp
mov
ret
ret
add
jmp
aam
add
pop
inc
add
add
out
xchg
nop
jmp
mov
xor
xor
decl
push
cli
cmp
mov
add
nop
jmp
xchg
add
add
jmp
add
lcall
jne
nop
jmp
sti
add
mov
add
jmp
add
or
mov
incl
add
add
push
mov
xchg
ret
push
inc
add
nop
jmp
push
add
add
push
nop
jmp
pop
or
add
movsl
jae
mov
push
mov
cmpsb
faddl
mov
pop
fwait
or
push
imul
add
ret
add
in
in
in
adc
fists
jmp
push
mov
hlt
cwtl
rcrb
add
jp
or
add
cltd
add
cli
incl
add
jp
add
mov
adc
add
add
add
mov
test
insl
pop
push
mov
xchg
ret
cmp
add
outsb
push
push
mov
xchg
ret
add
add
pause
jmp
pop
cmp
add
cmc
lods
lea
nop
jmp
add
cwtl
pusha
xchg
xchg
push
call
nop
jmp
cmp
pushl
pushl
push
mov
xchg
ret
mov
in
add
mov
add
lock
je
add
sldt
add
push
fisubl
cmp
push
push
mov
xchg
ret
pusha
fldl
ljmp
addb
nop
jmp
fldl
jbe
test
inc
in
jmp
movl
and
inc
add
in
mov
nop
jmp
pusha
mov
mov
aam
mov
nop
jmp
add
add
lret
push
nop
jmp
cmp
cmp
mov
rep
nop
jmp
add
jno
mov
add
ljmp
mov
push
mov
xchg
ret
sti
cmp
or
rclb
add
or
push
mov
adc
lcall
call
cmp
add
add
nop
jmp
add
addb
add
sbb
inc
add
add
add
in
mov
and
add
add
jle
fldl
repnz
incl
add
add
pop
nop
jmp
add
cmp
xchg
xor
add
add
add
cltd
push
nop
jmp
add
hlt
xchg
add
push
mov
xchg
cmp
add
sbb
and
call
aad
add
or
or
add
push
add
adc
push
or
nop
jmp
add
add
cmp
jg
call
nop
jmp
add
into
je
nop
jmp
mov
cmp
add
decl
mov
nop
jmp
add
hlt
sti
mov
push
mov
xchg
ret
cmp
les
nop
jmp
cmp
add
hlt
inc
add
ds
push
mov
xchg
ret
add
add
jo
nop
jmp
add
jno
add
aaa
addl
fsubrp
addb
add
add
add
pop
add
incl
inc
add
mov
and
add
movsl
mov
jmp
pusha
add
adc
jmp
add
add
nop
jmp
pushw
sti
xchg
mov
mov
adc
jmp
add
outsb
mov
nop
jmp
mov
aam
jbe
call
add
add
stc
call
nop
jmp
add
fnstsw
mov
nop
jmp
add
mov
lcall
jg
nop
jmp
mov
add
pushf
mov
nop
jmp
add
ret
jle
popa
nop
jmp
push
add
mov
call
nop
jmp
add
add
inc
add
stos
push
mov
pop
data16
add
call
xor
add
push
mov
xchg
ret
mov
add
inc
add
cld
push
nop
jmp
add
add
jp
xlat
mov
xchg
xlat
movb
add
incl
adc
add
nop
jmp
add
adc
fisttpll
add
add
ret
add
add
cli
lcall
jg
add
add
and
ljmp
je
nop
jmp
add
cmp
inc
push
mov
xchg
ret
mov
ja
add
nop
jmp
add
or
push
push
mov
xchg
ret
add
bound
ljmp
push
mov
xchg
ret
add
aam
les
pop
mov
nop
jmp
movsb
jae
cmc
xor
call
mov
add
add
mov
mov
sbb
in
xchg
fildl
int
add
xor
out
std
pop
push
mov
xchg
ret
add
add
sub
add
jg
cmp
gs
jmp
movsb
add
inc
add
add
jp
mov
in
cwtl
fucomp
addl
aaa
scas
add
add
test
add
nop
jmp
cmp
dec
cmp
jmp
add
out
icebp
cmp
pop
call
add
or
jmp
add
add
dec
add
push
mov
xchg
ret
cmp
aam
mov
nop
jmp
add
add
or
jmp
add
mov
mov
xchg
ret
add
add
push
mov
xchg
ret
add
add
dec
push
nop
jmp
mov
xor
nop
jmp
mov
add
xor
jmp
add
cmp
add
fimull
pop
cmpsb
inc
add
sarb
pop
or
ret
ljmp
add
push
mov
xchg
ret
jg
xchg
cmp
hlt
mov
add
inc
cs
add
insb
add
push
mov
xchg
ret
add
mov
xchg
ret
lcall
add
nop
jmp
cmp
cmc
add
add
add
xor
mov
jmp
cmp
add
fnstsw
stos
mov
nop
jmp
push
add
xor
jmp
add
jmp
adc
jg
add
jne
nop
jmp
jp
add
add
dec
rep
nop
jmp
cmp
pop
ja
movswl
nop
jmp
jbe
pop
out
test
nop
jmp
add
add
loopne
popl
inc
idiv
incl
add
jp
add
mov
xchg
ret
ja
adc
lcall
nop
jmp
sub
add
add
rclb
cmp
sub
ret
add
lcall
inc
add
add
movsb
int3
inc
nop
jmp
ja
add
add
add
add
decl
bswap
jo
jns
mov
adc
add
ds
add
push
add
inc
add
stos
test
and
lret
xchg
mov
add
and
push
in
mov
nop
jmp
add
add
or
xor
cltd
call
nop
jmp
add
add
dec
cmp
jmp
add
xchg
sbb
jmp
cmc
movl
incl
jb
fldt
inc
add
add
cmp
jb
nop
jmp
or
add
add
mov
adcb
add
cwtl
add
add
inc
add
shl
nop
jmp
cmp
add
add
nop
jmp
push
add
add
add
int3
push
nop
jmp
add
cmp
mov
and
cmp
jmp
add
hlt
cmc
add
pusha
adc
ljmp
mov
nop
jmp
sti
or
add
push
nop
jmp
xchg
fldl
data16
cltd
add
add
push
jo
incl
add
shlb
xlat
or
stos
nop
jmp
movsl
add
push
push
cmpl
incl
add
jmp
xor
pop
add
add
jge
stc
nop
jmp
pusha
cs
add
push
add
decl
push
mov
xchg
ret
pusha
add
push
push
mov
xchg
ret
cmp
add
nop
jmp
add
add
push
push
mov
xchg
ret
add
add
adc
pushl
add
jl
jge
add
nop
jmp
add
push
add
push
mov
add
jp
xchg
cmp
fiaddl
nop
jmp
add
push
add
add
jb
cmp
test
adc
add
add
add
aam
add
sti
pop
movsb
jbe
mov
xor
nop
jmp
add
fldl
add
ret
mov
nop
jmp
jae
add
or
test
jmp
call
add
jne
push
mov
xchg
ret
add
push
push
mov
xchg
ret
push
cmp
add
ljmp
add
add
adc
fst
add
add
add
nop
jmp
add
add
mov
int
pop
jae
jmp
add
add
jmp
add
cmp
pop
pop
nop
jmp
add
add
scas
xor
nop
jmp
add
jp
add
jge
push
pusha
xor
push
add
rep
nop
jmp
cmp
add
add
lods
test
nop
jmp
add
add
out
decl
add
adc
jmp
decl
fs
jmp
add
push
mov
xchg
ret
mov
add
xor
add
sub
nop
jmp
add
sub
inc
push
adc
nop
jmp
pushw
les
cmc
push
clc
nop
jmp
cmp
or
mov
push
mov
xchg
ret
mov
add
add
arpl
jmp
cmc
sub
inc
or
mov
xchg
ret
add
nop
jmp
mov
lds
pop
ret
nop
jmp
cmp
or
add
add
nop
jmp
cmp
incl
add
movl
xchg
add
test
add
add
incl
cwtl
sub
and
add
hlt
mov
add
pop
add
add
in
dec
sbb
push
mov
xchg
ret
add
cmp
mov
mov
nop
jmp
add
cmp
fadd
add
add
mov
add
add
ret
xor
add
nop
jmp
jp
push
cmp
sti
or
push
or
add
mov
add
cmp
es
cmp
pop
fmuls
ljmp
add
cltd
sub
add
jmp
add
jmp
mov
add
dec
pop
push
mov
xchg
ret
lret
add
sub
je
cmp
add
setns
sti
nop
jmp
add
add
mov
js
push
sti
call
add
add
lcall
add
nop
jmp
movl
and
jmp
incl
adc
mov
mov
xchg
ret
push
mov
nop
jmp
mov
mov
xchg
add
jp
add
add
push
mov
xor
add
add
add
aas
xchg
pusha
inc
mov
add
negl
push
mov
xchg
ret
push
add
dec
cmc
incl
sub
jbe
dec
mov
push
mov
xchg
ret
jae
cmp
mov
nop
jmp
add
add
add
call
call
incl
add
mov
xchg
ret
fldl
movsb
and
decl
jmp
add
add
mov
inc
adc
jmp
add
jg
add
mov
nop
jmp
add
movl
add
outsb
xor
push
mov
xchg
ret
mov
jbe
movl
push
mov
xchg
ret
add
add
jbe
decl
push
mov
xchg
ret
add
push
mov
xchg
ret
push
jb
push
inc
add
in
mov
nop
jmp
add
add
aaa
xor
jns
dec
cmp
jmp
add
mov
ret
ljmp
jmp
add
mov
push
xor
add
add
add
xchg
mov
jmp
add
pop
ret
je
add
jmp
nop
jmp
incl
mov
mov
out
add
nop
jmp
cs
add
and
decl
nop
jmp
sub
add
mov
mov
xchg
ret
fldl
jbe
sub
div
call
jae
add
movl
addb
pop
nop
jmp
ficompl
add
add
hlt
outsb
jl
nop
jmp
add
push
ret
add
add
nop
jmp
mov
jae
mov
pop
push
mov
xchg
ret
cwtl
jae
push
aas
push
mov
add
jle
in
xchg
ret
or
jo
ds
push
mov
xchg
ret
add
sub
add
add
movsl
jae
pushl
push
mov
xchg
ret
mov
jmp
add
cmp
jmp
add
gs
jno
add
aas
adc
add
jbe
add
dec
nop
jmp
pusha
fldl
add
fiaddl
xor
lcall
adc
add
nop
jmp
pop
jno
cmp
jnp
nop
jmp
sub
add
pop
xor
nop
jmp
add
add
add
test
jbe
nop
jmp
add
add
adc
pushl
mov
nop
jmp
sti
add
add
pusha
nop
jmp
add
jno
mov
mov
nop
jmp
add
cmpb
mov
mov
push
mov
xchg
ret
ret
lahf
push
push
mov
xchg
ret
pusha
add
cltd
jge
adc
nop
jmp
add
push
mov
xchg
ret
add
add
lods
mov
nop
jmp
push
add
add
fisttpll
jg
lcall
sti
add
jbe
push
nop
jmp
ja
add
ljmp
aam
popf
push
mov
cmp
jle
bound
add
sbb
cmp
mov
and
sub
ret
jno
jg
mov
nop
jmp
add
movl
decl
movswl
nop
jmp
cmc
hlt
cmp
mov
nop
jmp
cmp
cmc
adc
test
or
add
sti
add
push
push
mov
xchg
ret
fisubl
add
lcall
add
inc
add
sub
fcomip
call
add
mov
ja
xchg
push
lcall
mov
scas
inc
add
xchg
add
lret
mov
jmp
add
add
lret
nop
jmp
add
mov
fadds
add
incl
add
push
push
mov
xchg
ret
add
adc
add
nop
jmp
fldl
xor
in
cmpsb
pop
sbb
add
loopne
add
mov
and
add
push
add
movsl
add
add
out
mov
nop
jmp
add
movb
mov
adc
jmp
movsl
cmp
rolb
jmp
xor
add
xor
push
nop
jmp
push
xor
jns
nop
jmp
add
add
test
fisttpl
jmp
fiaddl
add
cmc
addb
out
pop
push
mov
xchg
ret
pop
add
add
push
mov
xchg
ret
incw
mov
sti
incl
add
add
ret
into
mov
nop
jmp
gs
add
add
inc
add
inc
push
mov
xchg
ret
lret
jae,pn
push
sbb
rcrl
ret
incl
fsubrl
inc
and
jmp
add
mov
push
mov
xchg
ret
add
in
rol
loope
arpl
add
add
sub
mov
xchg
ret
mov
add
cmp
test
jmp
call
add
lcall
or
add
add
pusha
add
nop
jmp
xor
mov
pop
add
sbb
test
add
add
incl
add
jmp
ja
add
add
xor
imul
jmp
add
cmp
add
add
out
cmpsb
add
loop
mov
mov
nop
jmp
add
or
mov
jmp
push
nop
jmp
sti
push
add
add
add
fs
ret
add
nop
jmp
add
add
or
cmc
divl
mov
mov
xor
nop
jmp
add
add
add
push
mov
xchg
ret
add
add
call
incl
mov
add
add
cld
stos
nop
jmp
mov
or
add
lcall
cld
incl
add
add
or
pop
push
add
ret
add
cmp
jmp
call
add
lcall
add
ja
add
popf
mov
add
add
add
rep
push
mov
xchg
ret
add
nop
jmp
addb
ret
ret
incl
lea
push
mov
xchg
ret
add
add
xor
leave
push
mov
cltd
jae
lret
xchg
add
dec
add
in
call
call
pusha
add
test
mov
xchg
ret
add
cmp
mov
jbe
mov
call
nop
jmp
add
add
lret
sub
decl
jo
pushl
add
nop
jmp
jae
mov
lock
push
nop
jmp
add
jp
str
ret
nop
jmp
pop
add
add
add
aad
int
nop
jmp
ffree
add
pusha
lcall
outsl
mov
nop
jmp
lcall
iret
mov
nop
jmp
xor
mov
mov
call
incl
add
pop
fsts
jmp
add
andb
add
push
inc
add
add
nop
jmp
push
xchg
xor
mov
test
call
add
add
insl
pop
nop
jmp
mov
push
mov
das
pop
push
mov
xchg
ret
cmp
cmp
nop
jmp
cmc
frstor
xchg
mov
add
ret
add
nop
jmp
add
cmc
add
movl
sbb
pause
jmp
gs
add
data16
inc
add
push
mov
xchg
ret
jno
cmc
movsb
inc
add
add
nop
jmp
add
adc
mov
call
jmp
add
xor
mov
add
jmp
cmp
mov
xor
push
mov
xchg
ret
add
loopne
and
jmp
add
add
adc
dec
push
nop
jmp
lret
add
cwtd
push
call
jmp
xor
nop
jmp
sti
cmp
add
xchg
mov
sub
nop
jmp
add
cmp
inc
add
cmp
mov
xchg
ret
cltd
push
mov
add
dec
cmp
nop
jmp
xorb
lea
nop
jmp
mov
sti
fs
mov
lea
nop
jmp
mov
add
pushl
pushl
adc
add
add
add
imulb
lret
in
jmp
push
add
jmp
jae
add
mov
in
add
inc
je
cmp
xlat
push
clc
jle
push
push
mov
xchg
ret
add
cmc
addb
cmp
mov
xchg
ret
cmp
add
adc
ljmp
test
nop
jmp
mov
mov
nop
jmp
add
add
mov
in
sbb
add
mov
add
lret
mov
nop
jmp
cmp
lcall
nop
jmp
gs
cs
lcall
pop
nop
jmp
add
jno
movl
mov
in
ljmp
cmc
add
add
add
and
push
mov
xchg
ret
fstp
bound
cmp
test
out
call
incl
add
dec
xor
nop
jmp
cwtl
cwtl
jp
sub
add
mov
nop
jmp
cmp
add
add
nop
jmp
push
add
add
inc
push
add
pushw
xor
nop
jmp
xor
jae
add
outsb
and
push
mov
xchg
ret
gs
mov
add
rsqrtps
decl
jmp
xorb
cltd
loope
or
nop
jmp
pusha
mov
pusha
xchg
push
mov
xchg
ret
ja
adc
dec
add
nop
jmp
cmp
out
in
mov
cmp
jmp
ds
nop
jmp
add
add
jmp
cltd
add
movb
xor
call
nop
jmp
ja
addb
add
jne
nop
jmp
jno
push
add
add
jmp
add
push
mov
add
add
les
clc
inc
add
fisttps
icebp
incl
add
add
add
testb
out
nop
jmp
add
add
cmc
cmp
add
test
mov
add
dec
lea
push
mov
xchg
ret
mov
cmp
cmpsb
clc
cmp
add
cltd
cltd
stos
add
nop
jmp
mov
data16
or
and
add
pop
jae
jmp
xor
add
mov
nop
jmp
add
add
xor
mov
add
nop
jmp
xchg
incl
mov
outsl
movzwl
nop
jmp
data16
add
loope
mov
movsb
push
mov
xchg
ret
add
adc
jle
movb
jmp
cmc
push
add
mov
cltd
je
nop
jmp
or
add
nop
jmp
lret
cmp
add
cmp
nop
jmp
add
mov
popl
nop
jmp
jg
add
sub
add
incl
add
cmp
lcall
mov
nop
jmp
fs
gs
aam
add
nop
jmp
add
add
gs
nop
jmp
ficompl
add
add
add
mov
nop
jmp
hlt
add
mov
test
nop
jmp
push
cmp
add
add
lods
nop
jmp
push
push
add
add
mov
nop
jmp
mov
incl
add
add
or
inc
sti
incl
push
mov
push
add
int
sti
nop
jmp
add
add
xor
movb
add
shr
nop
jmp
add
imul
nop
jmp
add
fisttpll
fdivr
lcall
fnsave
add
in
call
incl
add
jg
test
nop
jmp
add
ja
cmp
push
add
push
mov
xchg
ret
add
pusha
add
cmp
mov
xchg
ret
mov
mov
nop
jmp
adc
add
xchg
add
incl
or
pushl
jbe
add
mov
nop
jmp
fstl
jno
add
xchg
leave
mov
nop
jmp
add
setae
xchg
add
call
cmp
fldl
in
lret
sbb
ljmp
mov
add
addb
add
push
mov
xchg
ret
aam
xor
movzwl
nop
jmp
add
cmc
add
mov
add
sub
jb,pt
nop
jmp
add
cwtl
gs
mov
nop
jmp
lcall
call
nop
jmp
cwtl
decl
and
mov
xchg
ret
aam
push
mov
nop
jmp
xor
add
jle
rclb
mov
and
sub
outsl
loopne
mov
xchg
ret
xor
std
xor
push
mov
xchg
ret
or
push
pusha
push
mov
xchg
ret
cmp
incl
push
add
cmp
nop
jmp
push
add
add
and
ljmp
inc
add
hlt
mov
pop
xor
nop
jmp
add
add
push
push
mov
xchg
ret
add
add
mov
add
add
jl
rclb
pushl
ret
cmc
ja
sbb
rclb
xchg
cmpsl
inc
add
add
aaa
sbb
jmp
or
add
push
add
xchg
stos
jne
nop
jmp
pusha
add
sub
jmp
push
mov
add
jbe
add
nop
jmp
xor
xor
inc
and
nop
jmp
ja
push
push
add
enter
mov
mov
push
add
add
add
pusha
add
xor
nop
jmp
xchg
add
fnsave
test
sub
jmp
add
add
add
add
add
jp
add
push
nop
jmp
cwtl
add
add
incb
mov
push
mov
xchg
ret
add
dec
mov
nop
jmp
add
ja
push
call
add
insb
aaa
push
mov
add
dec
imul
pop
shlb
ljmp
mov
out
stc
or
add
push
and
jmp
add
test
popa
add
adc
call
pop
addb
add
imul
add
add
int3
out
jns
pause
adc
cmp
pusha
add
inc
add
punpcklbw
jmp
leave
icebp
addl
test
mov
add
xor
in
mov
dec
movntps
in
push
inc
add
roll
add
pop
cwtl
cmp
leave
fwait
test
mov
sbb
mov
add
sub
add
push
dec
hlt
test
pop
sub
dec
insb
idivl
sbb
repz
mov
add
decl
add
add
call
lds
mov
popa
add
sub
sbb
dec
scas
icebp
push
add
cmp
add
dec
ja
push
xchg
xchg
mov
incl
add
jmp
add
fisttpl
pushf
xor
and
ljmp
add
fimull
jne
out
jecxz
cmp
jb
ljmp
and
jg
test
add
dec
jb
decl
or
push
add
push
add
out
cmpsl
add
add
xor
incl
add
lods
mov
mov
push
xor
jle
inc
add
aaa
ja
scas
jmp
jmp
fidivs
mov
add
add
jmp
pushl
add
dec
into
add
lcall
call
pop
xor
push
add
mov
add
lret
xchg
jle
mov
jg
test
js
add
add
mov
lods
push
fcomps
or
pushl
pushl
js
mov
dec
and
push
je
adc
lcall
add
shlb
gs
movl
data16
addb
add
add
scas
imul
add
jl
in
cmp
cli
in
or
xchg
rolb
mov
inc
add
pop
movsb
add
jmp
in
cli
inc
add
scas
mov
cmp
add
inc
add
leave
addb
add
add
mov
add
in
fmuls
out
and
fidivl
into
sub
mov
sbb
roll
xchg
std
xor
jmp
add
pusha
add
lds
addl
ljmp
add
sub
xchg
roll
add
cmp
mov
stos
jbe
add
nop
jmp
in
mov
add
or
add
push
fwait
sub
daa
add
mov
add
dec
leave
mov
xor
mov
add
mov
repz
cmp
outsl
pop
inc
add
add
mov
cmp
sub
add
add
pop
add
pop
add
add
add
enter
test
cmp
pop
out
or
jns
sbb
iret
notl
add
shl
fiadds
ds
mov
cmp
sub
mov
add
add
xchg
lds
lock
sub
jmp
les
shlb
add
jmp
add
add
movb
add
pushl
mov
add
test
add
lcall
pop
mov
add
int3
cltd
jno
clc
insl
sbb
lock
dec
sahf
leave
add
or
add
inc
add
stos
pop
addr16
add
mov
add
xchg
mov
or
push
aaa
add
lcall
fbld
jmp
add
addb
xchg
and
mov
addl
sub
ja
shl
xchg
and
outsl
mov
mov
inc
add
dec
movsl
add
negl
add
je
imul
pushl
xchg
popf
in
lcall
test
mov
xchg
sbb
jmp
lds
xchg
push
dec
cmc
xor
call
push
add
lods
sbb
call
add
push
mov
clts
add
jmp
push
add
movsb
add
add
add
push
add
scas
lods
aas
pop
in
pop
test
fwait
mov
or
aam
mov
mov
dec
xchg
pop
or
add
add
jmp
pop
sub
add
decb
jp
sbb
je
add
add
xchg
pushf
aam
fistl
add
cmc
dec
mov
hlt
xor
std
and
mov
and
jmp
add
js
pop
or
jg
xchg
and
ljmp
pusha
add
xchg
std
lret
ljmp
popf
xchg
lret
add
jmp
fdivrl
sub
scas
jo
decl
out
pop
sbb
scas
jo
pushl
xor
sub
mov
movl
sub
fs
out
and
inc
add
sbb
dec
push
in
xor
pushl
lcall
xor
incl
ljmp
add
call
add
jle
add
mov
push
add
movsb
add
clc
imul
addl
jno
lcall
add
add
les
scas
dec
push
add
add
lcall
hlt
add
add
std
repnz
jp
cli
repz
test
dec
aam
add
ffree
add
add
mov
add
aam
mov
add
test
fsubs
ss
ficoms
addl
rolb
xlat
dec
push
pop
scas
xchg
push
add
push
add
in
add
add
lods
outsl
rorb
rolb
bound
ds
stos
jge
lds
pop
add
mov
insb
enter
add
or
call
xchg
push
add
imul
ljmp
add
incl
sti
push
dec
adc
add
jnp
cs
add
and
incl
xchg
push
cmp
add
xor
mov
cmc
adc
push
dec
nop
mov
push
add
popf
or
xchg
xchg
lahf
push
add
roll
mov
rcr
dec
add
lcall
mov
popa
add
pop
je
add
pop
mov
jb
jmp
add
sub
add
test
add
add
lods
dec
aam
add
xchg
sbb
mov
push
and
jmp
add
add
lret
pop
push
imul
add
mov
add
incl
add
lret
jns
add
lock
cwtl
out
pop
fildl
dec
popa
add
mov
jmp
add
add
xor
jmp
add
add
shrb
int
xor
ljmp
xchg
adc
jmp
into
push
ficoml
add
mov
pushf
push
add
sti
test
inc
add
shlb
add
or
add
pop
fcompl
add
pop
jae
ljmp
add
lods
xchg
pop
lods
jne
add
stos
sub
add
inc
add
mov
gs
add
push
rcll
inc
add
das
and
incl
call
add
or
insb
shl
add
rolb
xchg
outsb
pop
not
out
movb
add
decl
add
shlb
inc
add
add
mov
fcoml
add
test
and
pushl
mov
adc
pushl
add
rcl
leave
push
enter
mov
pop
xor
dec
mov
add
add
cmp
add
jmp
push
add
jb
call
add
inc
add
int3
lahf
or
mov
add
push
add
scas
outsb
mov
adc
dec
cld
mov
and
dec
mov
ljmp
outsb
popa
add
popl
cmp
jge
add
adc
inc
add
push
dec
iret
inc
add
dec
pop
test
cltd
inc
add
arpl
jmp
aas
arpl
fisubl
test
xor
inc
add
inc
add
adc
jmp
jmp
pushl
call
mov
in
and
sbb
pop
lcall
add
aam
add
loope
xchg
mov
lret
sbb
jmp
decl
sahf
dec
std
inc
add
xchg
pusha
add
ret
imul
add
aad
std
ljmp
add
faddl
addl
add
xchg
bound
cmp
popa
add
adc
incl
add
lea
add
nop
in
dec
mov
adc
stc
pop
int3
data16
aas
mov
call
adc
aas
mov
pop
add
add
push
nopl
dec
dec
cmpsl
add
es
adc
pushl
sub
push
cmp
add
add
jl
cwtl
pop
call
out
sbb
add
sub
lock
xchg
jg
cmp
add
ss
add
sti
out
mov
push
add
jmp
fsubrp
mov
add
pop
or
sbb
or
add
xchg
push
add
sbb
movsb
add
and
pop
xor
js
add
int
add
jnp
addl
cmpsl
add
add
lcall
xor
push
add
decl
stc
add
xchg
movb
aas
sub
mov
iret
lea
and
fldpi
rcll
sub
add
jg
inc
add
mov
sub
ss
mov
add
add
add
add
xor
add
lahf
xor
call
mov
add
push
add
ja
icebp
push
jnp
adc
je
cmpsl
add
loope
shrb
and
lcall
inc
add
xor
incl
push
add
fistps
add
ljmp
mov
jle
lret
test
mov
fisttpll
out
outsl
xchg
pop
add
ret
aas
dec
jge
add
xor
jmp
add
cmpsl
add
add
mov
aam
sub
push
push
add
mov
sbb
cmp
pop
add
xchg
xchg
xchg
add
xor
inc
add
add
add
add
repz
inc
add
xchg
adc
cmpsb
add
or
cmp
fistps
lret
mov
add
je
pop
sub
add
movl
add
incl
cld
mov
aaa
inc
add
lcall
xor
call
call
fidivl
add
push
add
out
ret
add
mov
lcall
add
add
lcall
sbb
add
in
cmpsl
add
sub
add
repz
jmp
xor
incl
add
add
xchg
popa
add
divl
sbb
test
pop
ret
test
adc
fnsetpm(287
add
in
or
lock
stos
movl
decl
movsl
add
add
mov
dec
xor
mov
divps
mov
pop
test
insl
jp
sbb
add
and
pushl
cmp
decl
jno
call
mov
int
add
daa
add
add
in
ss
add
add
int3
adc
jmp
push
in
ja
roll
add
test
les
add
incl
lds
loopne
pop
addb
call
daa
add
fmulp
sbb
and
pushl
add
decl
jnp
add
stc
mov
add
push
cmpsb
add
add
add
je
add
jge
mov
add
add
add
dec
test
mov
mov
fidivs
mov
add
xchg
cmpsb
add
jmp
lcall
add
mov
add
lods
aaa
add
adc
add
pushf
inc
add
mov
add
add
cmp
xlat
out
fists
xor
cmp
insl
and
dec
addb
bound
ljmp
ret
add
pusha
add
pop
jl
add
and
jmp
add
jb
iret
add
inc
add
add
add
lret
nop
or
lods
roll
mov
cli
add
incl
add
pop
out
mov
mov
in
add
mov
xchg
in
lret
adc
decl
pop
push
and
cmp
negb
xor
jmp
sub
add
fwait
data16
roll
add
or
add
ds
lods
push
add
repnz
repz
add
aaa
mov
pop
fmuls
jg
add
sub
add
add
add
aaa
add
decl
imulb
sbb
add
test
sub
daa
add
les
and
decl
loop
inc
add
popa
add
popa
add
dec
jg
sub
add
and
call
add
enter
lcall
pop
add
repz
ss
add
pop
pop
ficomps
cmpsb
add
decl
adc
incl
cmp
mov
add
sub
add
adc
ljmp
roll
maxps
fsubl
add
fstpl
add
push
add
mov
add
cmp
roll
add
add
test
adc
push
mov
push
add
jmp
add
add
call
call
add
test
add
push
add
xchg
fnstcw
sbb
ljmp
rcr
lods
mov
test
add
and
ljmp
and
ljmp
xchg
addb
mov
mov
mov
sub
dec
imulb
test
rolb
xchg
pusha
add
mov
mov
repnz
mov
aam
add
add
popl
repnz
jle
cmp
add
fiaddl
add
xchg
xor
add
jecxz
dec
movb
xchg
rolb
or
mov
add
mov
add
mov
lcall
xchg
dec
fimull
cwtl
cli
addb
test
cld
movl
cwtl
faddp
add
rcrl
add
call
je
mov
xchg
adc
aas
pop
in
cmp
add
push
pop
push
cli
pop
sbb
xchg
fchs
add
movb
push
add
bound
push
sti
cli
and
mov
loope
sub
push
push
idivb
add
and
insb
jg
and
cld
stc
push
arpl
call
inc
add
inc
add
iret
cmpsl
add
cmc
mov
and
xor
daa
add
add
das
jp
push
scas
pushf
jbe
push
add
add
pop
repnz
stos
xchg
adc
pushl
add
mov
add
enter
cld
sbb
add
add
push
add
mov
add
push
add
sbb
add
jge
sub
add
aam
add
movsb
add
sbb
out
lret
push
xchg
fbstp
lcall
mov
mov
push
sahf
inc
add
in
fsts
jb
pushl
add
sbb
dec
aas
ljmp
inc
add
jg
add
mov
mov
jmp
add
popf
pop
add
lahf
mov
clc
jg
mov
add
lea
xor
ljmp
cs
add
divb
loop
fcoms
incl
add
mov
mov
add
add
mov
add
push
add
sbb
adc
add
sbb
movl
sbb
ljmp
lcall
jmp
call
mov
js
cmc
xchg
xchg
sub
add
push
add
inc
add
add
in
or
mov
mov
mov
add
cmp
add
push
add
xor
decl
jl
add
mov
push
add
xor
pushl
add
mov
clc
jne
cmc
scas
je
ret
add
stos
lds
mov
jmp
mov
cmp
sub
dec
imul
repz
enter
add
pop
cwtl
push
add
jle
add
ljmp
popa
add
call
xchg
out
test
xor
in
cwtl
sub
decl
sbb
add
add
rolb
je
mov
roll
scas
pop
add
jne
mov
add
add
inc
add
mov
in
out
popf
aam
pop
je
lock
pushl
add
add
push
sti
test
jle
dec
mov
sub
loope
nop
ja
add
cmp
sbb
mov
add
jmp
inc
add
inc
add
movsb
add
add
sbb
popa
add
ds
out
inc
add
mov
add
adc
adc
jmp
add
fildll
roll
add
inc
add
add
scas
mov
mov
cmpsl
add
roll
fiaddl
jg
and
lods
push
add
add
pop
add
jmp
jmp
inc
add
mov
ret
add
adc
pushl
add
add
call
lcall
add
inc
add
ljmp
add
add
add
inc
add
inc
add
out
movb
dec
in
mov
cmp
add
daa
add
addb
dec
idivl
roll
js
add
add
xchg
in
xor
ds
in
xchg
xor
mov
cmp
incl
lcall
cs
add
adc
call
call
xor
cmp
aad
int
add
and
call
ljmp
sti
sbb
call
popa
add
cli
push
mov
add
movb
pushf
out
scas
jno
call
add
add
lea
push
cli
ret
out
ja
add
in
jmp
add
iret
fiaddl
sub
add
popf
movsb
add
decl
jbe
mov
push
fsts
adc
jmp
push
dec
xchg
adc
mov
add
mov
jae
incl
xchg
dec
dec
aaa
add
jnp
pop
lgs
cltd
loope
add
popa
add
lock
addb
add
int
add
faddl
movsl
add
pop
jge
add
add
push
jo
jmp
add
in
addb
dec
lods
jge
cmc
cmpsl
add
add
out
xchg
xlat
pushf
push
jl
int3
es
add
inc
add
push
push
cwtl
daa
add
scas
xchg
repz
push
es
ja
add
sub
xchg
imul
add
add
pop
push
add
dec
cwtl
and
xor
xchg
in
sti
jmp
bound
lcall
add
clc
push
xchg
adc
jmp
add
sbb
add
mov
stc
addb
pushf
xchg
adc
jmp
add
push
inc
add
xor
lcall
loop
push
loopne
add
dec
cltd
fiaddl
arpl
jmp
lods
roll
add
add
add
mov
pushl
mov
xor
mov
add
jge
push
pusha
add
push
add
mov
mull
pop
cmp
add
les
mov
xchg
addl
add
or
add
addr16
jl
into
pop
addb
xchg
addb
add
out
inc
add
pop
or
mov
lea
mov
loop
jb
incl
and
call
ljmp
test
mul
add
add
dec
aad
rolb
add
rcll
clc
aam
in
cmpsb
add
add
mov
add
loope
emms
in
dec
mov
lods
mov
aaa
adc
lcall
mov
jge
add
mov
add
imul
add
je
addr16
add
add
call
frstor
add
jg
push
daa
add
decl
add
inc
add
add
jae
jmp
add
push
xchg
jmp
add
add
repnz
loop
stc
js
ljmp
mov
or
push
repnz
rclb
add
add
xchg
je
add
add
mov
js
sahf
jle
xchg
scas
inc
add
dec
testl
mov
mov
add
test
ss
add
push
out
das
inc
add
lods
jle
and
decb
mov
in
cmp
pop
stc
test
add
mov
add
push
repnz
add
loop
push
add
arpl
incl
inc
add
mov
push
add
dec
dec
pop
pop
repnz
mov
ss
mov
adc
decl
jbe
data16
lcall
lcall
mov
nop
fs
add
call
add
pop
inc
add
mov
add
pop
mov
add
add
xchg
movsb
add
push
xchg
sub
add
ljmp
sbb
jl
dec
pop
push
add
and
decl
ret
add
lcall
lret
jb
jmp
add
pop
mov
sub
decl
mov
add
test
call
add
aas
pusha
add
in
dec
fisubrl
push
mov
add
loopne
dec
inc
add
addl
lcall
or
sahf
pop
ds
add
push
xor
pushl
mov
cmpsl
add
add
mov
lea
inc
add
add
pushl
repz
scas
cli
or
adc
incl
packsswb
in
in
sbb
data16
ds
add
dec
push
jle
add
inc
add
push
add
push
sbb
fnstcw
pop
out
scas
fisubrs
negl
sbb
add
bound
incl
mov
in
sti
jns
loop
or
call
call
add
jg
add
add
shrb
add
add
add
jns
ret
add
arpl
pushl
and
push
fs
push
add
xor
outsb
push
and
pop
jne
dec
mov
ljmp
add
add
add
les
movsl
add
jne
add
iret
adc
std
ja
dec
push
xchg
jae
fdivrl
je
add
incl
addb
punpckhdq
xchg
sub
jle
jmp
add
adc
dec
sub
aaa
add
push
add
movl
mov
mov
mov
iret
and
rolb
mov
pop
jno
call
add
dec
aad
js
ss
add
jge
adc
add
inc
add
lcall
jmp
lcall
push
les
clc
push
rorb
addl
add
data16
add
jl
dec
cmc
popl
add
les
cmp
fst
sub
incl
ja
adc
sub
add
ljmp
adc
ljmp
inc
add
add
cld
add
push
xor
ljmp
xchg
clc
mov
xor
pushl
inc
add
lahf
mov
add
adc
call
add
push
add
add
mov
add
mov
stos
dec
mov
or
sbb
push
jae
pushl
outsl
pusha
add
fdivrs
add
mov
add
lcall
mov
scas
sub
add
ljmp
add
test
add
dec
sbb
add
addb
add
add
mov
ljmp
outsb
pop
push
pop
addl
call
aam
add
dec
jnp
add
xchg
sub
add
inc
add
fisubl
data16
fwait
sub
push
lods
sub
and
call
lret
xor
dec
test
inc
add
and
test
out
pop
inc
add
in
daa
add
loopne
and
jns
addl
es
add
lcall
add
and
lcall
sub
push
cmp
inc
add
daa
add
inc
add
repz
jmp
roll
pushf
in
data16
jae
call
movb
testl
add
xchg
out
imul
mov
add
roll
mov
lcall
mov
fldl
add
loop
add
add
pop
xor
add
xchg
xchg
cmc
and
jmp
add
outsl
push
add
sbb
test
xchg
jmp
popa
add
in
inc
add
mov
jmp
sbb
imul
inc
add
das
sub
daa
add
adc
call
push
ret
add
lods
addl
aaa
mov
xchg
loope
mov
add
call
inc
add
xor
fsub
add
lcall
rcrb
in
cmp
xor
cmp
add
mov
mov
add
test
push
add
pop
outsl
mov
sarb
mov
add
ljmp
adc
lcall
mov
dec
jmp
into
movl
add
repnz
pop
sbb
mov
popf
addl
xlat
stc
ja
add
push
add
pushl
add
aas
cmp
add
add
jmp
add
loop
mov
into
mulb
add
rclb
lcall
jbe
add
aaa
test
add
outsl
adc
dec
cs
addl
add
dec
mov
or
add
jnp
lret
adc
add
xchg
lods
das
xchg
mov
movb
add
loope
cmpsb
add
add
sbb
jl
add
test
sbb
ljmp
add
incl
add
dec
push
add
int
xchg
lock
mov
int
add
mov
js
push
ljmp
add
mov
and
jmp
add
add
movsl
add
call
popf
dec
and
call
push
roll
cmc
ljmp
add
pushl
call
push
add
call
add
mov
addb
add
pop
addl
decl
aaa
adc
add
add
jno
jl
cmp
addl
add
mov
mov
data16
add
call
sbb
mov
enter
repz
pop
sub
jl
cmp
xor
push
add
add
xor
add
icebp
xchg
mov
call
sti
push
xor
incl
add
or
popl
mov
ss
stos
pop
test
in
xlat
mov
sub
jb
call
movl
pop
std
add
out
jo
lcall
add
loopne
xor
lcall
dec
fadds
push
icebp
outsb
pop
xchg
les
stc
push
lret
pop
xchg
sbb
pop
mov
add
nop
cs
add
arpl
jmp
add
lds
lret
add
xchg
pop
or
stc
push
add
or
pop
or
decl
or
hlt
nop
roll
push
add
cwtl
cmp
xchg
cmp
mov
jne
add
add
inc
add
fcoml
aaa
hlt
in
adc
call
ljmp
movb
add
jmp
add
add
ljmp
je
add
dec
ficomps
dec
sub
xchg
jmp
test
add
jp
add
outsb
cmp
lcall
in
lcall
add
scas
mov
add
out
fidivl
add
sub
add
lcall
int
imul
rclb
ds
mov
jge
add
cltd
shll
add
lock
add
mov
ljmp
and
fbld
dec
sbb
sbb
mov
add
sbb
add
int3
addl
rolb
add
pop
dec
pop
and
call
adc
add
dec
sbb
push
loop
mov
add
push
add
cmp
into
pop
bound
jg
xchg
xor
pushl
les
add
pop
call
add
pop
sbb
loop
sahf
xchg
xchg
pop
iret
test
mov
add
add
jb
decl
addb
cs
add
jle
das
or
push
add
addb
push
add
pop
cltd
es
add
stc
jl
testl
pop
push
mov
xchg
sbb
add
add
jmp
add
jmp
pushl
idivl
add
ljmp
call
and
iret
test
push
add
xor
jmp
inc
add
jne
testl
add
loopne
fwait
fwait
sbb
jl
fcompp
rclb
add
jge
dec
jmp
inc
add
jle
add
cmp
add
mov
add
out
daa
add
loopne
lret
jg
sbb
dec
xchg
jae,pn
lcall
aad
addb
aaa
jns
xor
pushl
test
clc
jae
call
jg
sub
add
dec
cmp
add
fdivs
scas
adc
ljmp
jmp
add
dec
jns
add
sub
js
pop
add
pushl
add
sub
push
add
push
mov
fbstp
icebp
mov
pop
sbb
add
scas
pusha
add
xor
add
inc
add
add
add
addl
lcall
jle
add
add
adc
dec
idivb
jns
ret
add
add
mov
add
adc
inc
add
add
jne
ss
add
outsl
jmp
add
movb
sahf
lret
or
add
ss
add
add
add
add
lret
lret
mov
xchg
xor
mov
cmp
add
jmp
add
addl
add
pop
mov
int
add
and
cmp
data16
lea
sbb
add
repnz
ljmp
xor
pushl
test
jnp
in
mov
cmp
scas
sub
lds
shrb
add
pushl
add
ds
dec
or
incl
call
dec
cmpsb
add
scas
sti
aaa
data16
jne
push
add
pop
sahf
sarb
lahf
push
add
mov
cmovs
pop
sti
dec
xchg
icebp
mov
add
mov
fsubs
add
pop
push
add
and
lret
loop
jp
pop
mov
roll
hlt
add
jmp
mov
add
xorps
mov
add
pop
push
push
add
mov
cmp
jo
call
outsb
movsb
add
add
add
adc
incl
push
ljmp
add
js,pt
add
mov
add
add
add
mov
xor
jmp
jne
mov
add
das
ss
repz
add
xor
call
insb
in
ljmp
inc
add
lods
idivb
add
add
int3
push
add
add
xor
ljmp
int
add
sub
pop
jg
mull
ljmp
out
arpl
call
add
lcall
jecxz
sbb
ficomps
jge
add
ds
add
inc
add
cmp
or
xor
pushl
add
movb
inc
add
cmpsl
add
iret
lret
mov
js
outsl
test
mov
add
stos
fiadds
add
mov
adc
decl
or
js
xchg
jae
lcall
addb
test
mov
add
jl
lea
add
in
add
mov
add
notl
ret
push
add
nop
pop
jl
add
movsb
add
lds
cltd
scas
mov
add
or
add
loope
repnz
add
mov
dec
inc
add
add
ret
add
stc
xor
incl
addl
add
add
repz
ret
add
nop
push
jne
add
add
add
add
rolb
ljmp
mov
add
jmp
mov
add
iret
pop
imul
pushl
add
imul
add
push
loope
pop
sahf
roll
mov
and
pushl
add
loopne
add
pop
dec
add
lcall
adc
add
lds
push
add
adc
cli
repnz
mov
add
add
mov
add
daa
add
add
add
out
movl
pop
inc
add
add
add
dec
mov
adc
or
jb
jmp
add
js
rolb
add
xor
decl
push
aas
mov
cmp
add
mov
add
add
aam
cld
sbb
add
ret
add
js
roll
add
call
call
sbb
iret
addl
mov
pusha
add
push
add
das
movsl
add
rol
add
call
out
or
scas
scas
pop
xchg
fwait
mov
lods
mov
out
xchg
xor
jmp
call
add
std
dec
pop
add
ret
insl
ljmp
cs
dec
stc
fcomp
shl
fisubrs
xchg
add
mov
lds
cltd
push
add
add
push
dec
pop
les
inc
add
sub
lds
enter
fsubrs
add
les
nop
in
mov
lahf
mov
dec
jmp
add
xor
add
mov
add
sbb
cmp
xchg
sub
sbb
add
add
add
arpl
call
nop
or
and
jmp
add
add
call
add
add
inc
add
mov
icebp
jg
ret
data16
ss
incl
sbb
jmp
inc
add
loope
push
add
mov
sub
stos
fidivrs
add
aaa
sbb
dec
dec
mov
add
inc
add
imul
add
clc
cld
push
add
dec
mov
add
mov
add
lds
in
outsb
addb
add
test
xor
dec
stos
mov
sbb
jp
add
mov
aam
xchg
dec
das
cmpsb
add
sti
in
xchg
pop
add
add
fucomip
xchg
jp
add
add
sub
add
in
lret
inc
add
cmp
jae
incl
add
push
add
sbb
mov
add
test
add
add
outsb
xchg
dec
addl
add
cmp
add
out
push
add
jge
cmpsl
add
push
enter
add
incl
add
outsl
adc
jmp
add
add
je
add
jae,pn
ljmp
leave
pop
popf
lcall
mov
pushf
add
add
loope
test
sub
es
jnp
add
push
cmp
pop
gs
sub
pop
pop
jle
inc
add
call
pop
sbb
mov
ljmp
add
jp
sbb
add
mov
add
push
add
mov
ljmp
call
pushf
loopne
sub
inc
add
test
inc
add
mov
xchg
cmc
mov
incl
add
add
fadd
add
roll
out
or
fisttpll
and
pushl
xchg
in
imul
xchg
leave
or
push
add
out
adc
jmp
xlat
push
clc
pop
add
push
add
mov
inc
add
add
add
sbb
add
add
outsb
out
dec
add
enter
push
jmp
nop
adc
add
addb
xor
decl
add
add
cwtl
daa
add
decl
popa
add
jns
daa
add
nop
cld
add
lcall
add
scas
rcrl
pop
add
add
pushl
add
dec
fwait
in
std
cld
test
xchg
imul
lock
xor
adc
jp
add
jmp
aam
test
iret
xor
out
cmp
jne
sarb
add
add
jnp
add
mov
push
xor
inc
add
add
rcrl
mov
pop
push
add
sbb
add
add
lret
dec
push
xchg
out
xchg
test
dec
jns
add
ljmp
mov
add
jmp
pop
jo
incl
mov
decl
mov
add
add
cmc
sbb
add
mov
sbb
cmp
out
mov
add
addl
add
and
in
jne
ja
add
sbb
cmp
mov
sahf
mov
stos
mov
pushl
pop
daa
add
add
add
and
test
add
int
cmpsl
add
add
sbb
decl
aam
add
rolb
mov
push
add
repz
jae
dec
ret
add
pop
add
add
inc
add
adc
ljmp
decl
fcmovnb
add
pop
add
pop
or
insb
add
jnp
add
mov
add
jge
movsl
add
mov
add
pushl
incl
add
lahf
in
sbb
inc
add
or
push
jbe
add
lret
xchg
addl
add
mov
xchg
int3
stc
stos
into
xor
ljmp
add
sbb
add
out
sub
jmp
add
cmp
add
add
add
cmp
add
add
jne
add
add
insb
fsubrs
push
add
insl
icebp
sub
add
rcrb
sub
sbb
add
or
add
stos
movsl
add
jl
and
mov
mulb
mov
lock
add
pop
cmc
fnstenv
add
in
cmpsb
add
push
and
decl
jne
xchg
jae
cmp
add
add
inc
add
add
add
les
ss
pop
icebp
outsb
rolb
add
lcall
fdivl
add
pop
xchg
dec
dec
sbb
rolb
or
cmp
sbb
les
push
add
sub
add
add
sub
ljmp
clc
pop
mov
jle
insb
pop
sub
ljmp
add
out
sahf
cmp
or
and
lcall
loopne
outsb
jb
decl
add
add
inc
add
lret
mov
add
add
test
mov
add
sbb
jne
icebp
lret
pushf
icebp
push
pop
dec
push
add
inc
add
ss
inc
add
jno
call
xchg
inc
add
add
jne
or
sub
add
out
mov
add
lret
and
jmp
jmp
or
mov
push
sub
cmp
imul
das
fcom
adc
jmp
jmp
sysexit
mov
add
pop
push
add
add
mov
aas
ja
cmpsb
add
or
ja
addb
repnz
add
pop
stc
xchg
sahf
hlt
xchg
jl
jbe
in
inc
add
push
add
mov
aam
mov
mov
cld
add
scas
pop
addl
xor
ret
add
sbb
addb
rolb
imul
into
cs
imul
mov
jg
pop
pop
jecxz
jo
mov
out
call
test
and
arpl
incl
clc
sbb
add
add
mov
mov
data16
add
add
add
cmpsb
add
xor
push
mov
xor
add
cs
pop
dec
out
push
movb
add
idivl
sub
add
mov
jmp
add
add
insl
cmpsl
add
add
lcall
mov
xor
cmp
push
mov
add
repnz
es
pop
iret
push
add
aaa
jmp
imul
outsl
mov
add
xor
roll
pop
jnp
and
call
cltd
nop
call
test
inc
add
jne
ret
add
out
jnp
or
add
sbb
add
jmp
cmpsb
add
clc
ret
adc
dec
sub
mov
call
decl
ljmp
lcall
jmp
cltd
popf
cwtl
xor
sti
lea
add
mov
adc
jmp
mov
aam
int
add
add
or
push
add
popf
cltd
push
add
push
add
pop
xchg
in
pop
sbb
xor
call
cmp
add
cwtl
mov
add
nop
cmp
mov
inc
add
mov
out
cmp
mov
dec
mov
pushf
pop
jnp
mov
lock
loopne
xchg
leave
cld
cmp
add
add
add
cmp
movb
lods
fsub
add
imul
sub
pop
aam
xchg
push
add
ficomps
imul
xchg
pop
daa
add
addb
add
insb
addl
push
add
add
pushl
fdivr
pop
add
dec
js
test
jbe
dec
icebp
daa
add
add
outsb
sahf
popf
dec
decl
ss
sbb
adc
cmp
inc
add
mov
add
add
push
sbb
lcall
add
addb
add
inc
add
sbb
scas
jae
pushl
add
rcrb
movb
add
mov
add
daa
add
sub
add
add
xchg
jns
inc
add
or
and
lcall
add
add
jp
add
xor
jmp
outsb
scas
pop
xor
lahf
mov
in
les
xor
pushl
addl
jmp
decl
adc
cmp
ret
add
call
addl
xchg
icebp
sub
add
add
or
pop
stc
cli
fucomip
aam
jns
loopne
adc
sbb
mov
cmc
stos
les
add
dec
pop
inc
add
mov
add
lcall
adc
xor
call
adc
lcall
pop
lret
loop
mov
or
sub
add
daa
add
lea
mov
sub
scas
adc
decl
cwtl
ss
mov
sbb
dec
push
mov
add
in
inc
add
movb
scas
jo
pushl
pushl
data16
jmp
add
add
jl
shrl
stos
sarl
pop
mov
and
call
dec
je
dec
pushf
lock
ljmp
add
add
addr16
add
add
and
push
lcall
sti
stc
js
test
stos
dec
push
add
dec
cmp
add
addl
imul
add
inc
add
pop
ficomps
add
out
mov
mov
mov
js
mov
dec
cmpsb
add
aas
jb
fidivrs
mov
mov
push
stc
daa
add
stc
call
loope
cmp
pop
and
pushl
into
rolb
pop
adc
dec
push
jge
xor
inc
add
mov
add
repz
pop
sbb
add
cmp
xor
adc
cli
mov
add
cmp
dec
pop
pop
in
scas
and
jmp
incl
sub
add
add
pushl
cltd
jg
push
add
mov
add
mov
decl
data16
add
add
jmp
dec
push
lods
inc
add
decl
add
sahf
xlat
xor
ljmp
pop
out
pop
add
add
movl
movsl
add
add
xchg
inc
add
mov
add
mov
add
sub
mov
add
mov
ljmp
cmp
test
call
outsb
jnp
add
fldcw
insl
xor
pushl
push
add
add
sbb
rolb
add
mov
xor
stc
inc
add
push
add
add
lds
pop
sbb
pop
inc
add
stos
cs
jb
ljmp
add
mov
add
mov
add
pop
out
ljmp
daa
add
sahf
pop
or
enter
add
xchg
bound
pushl
add
push
cwtl
jmp
adc
decl
cld
outsl
loop
adc
dec
jno
cli
loopne
lods
pop
jl
jns
cmp
add
jno
out
dec
inc
add
icebp
pop
mov
add
jbe
push
add
sub
rolb
add
outsl
or
nop
mov
movl
fsub
add
add
dec
or
cwtl
push
test
leave
push
add
rcrl
add
jg
mov
add
cld
adc
ljmp
mov
test
add
jne
add
add
add
sbb
add
or
add
jp
in
dec
mov
inc
add
add
pushl
jmp
loope
fidivs
add
push
pop
jb
ljmp
and
incl
add
test
mov
or
int
adc
jmp
incl
jmp
add
fstpt
add
iret
iret
aas
jo
incl
add
lcall
mov
add
or
add
xchg
ja
add
add
add
xor
out
outsl
repz
mov
out
imul
add
mov
push
sub
scas
dec
mov
add
fmull
cmp
fidivrs
pusha
add
mov
push
add
push
and
lcall
add
out
fcoml
add
fucomi
add
dec
push
add
pop
add
add
add
call
addb
add
jecxz
jle
add
ljmp
icebp
repz
lret
sahf
jg
mov
and
imul
mov
lds
outsb
shl
add
add
mov
cmc
push
jnp
jg
jno
incl
std
outsb
mov
cmp
add
add
add
into
dec
mov
xor
addl
cmp
cmp
add
icebp
arpl
decl
add
test
add
pop
pop
aaa
jbe
mov
push
add
pushl
lret
jno
lcall
ljmp
cmp
add
add
jle
xor
jmp
add
add
incl
add
add
push
add
xchg
stos
cmp
add
pushl
in
sbb
pop
iret
stos
jmp
xor
jl
add
pop
ss
add
add
add
add
jae
inc
add
mov
imul
cmpsl
add
inc
add
addl
mov
cli
or
add
add
call
push
jo
incl
add
pushf
mov
outsl
loope
sbb
add
sbb
inc
add
pop
pop
inc
add
fdivrp
sbb
sbb
bound
ljmp
sbb
mov
mov
pop
bound
jle
add
loop
les
aas
xchg
lods
mov
add
xlat
scas
pop
jbe
fstpl
dec
mov
pop
fisubrl
add
add
add
adc
jmp
call
add
add
add
negl
in
cwtl
fwait
mov
mov
lock
mov
ret
add
test
sbb
call
xchg
negb
add
sarb
add
decl
scas
mov
fwait
mov
mov
testl
jl
add
decl
add
hlt
daa
add
call
add
add
out
pop
stos
decb
add
cmp
hlt
adc
pop
aam
add
clc
xor
jmp
movb
repz
icebp
aas
lea
rolb
push
mov
mov
std
insl
sub
lret
and
call
fisttps
xchg
dec
faddl
add
xlat
insb
and
call
scas
aad
sahf
js
ffree
add
add
add
movsb
add
mov
add
add
jae
lcall
sbb
call
ljmp
std
ds
add
add
aam
add
ljmp
inc
add
in
jae
call
dec
sub
lcall
add
or
mov
add
in
jno
jge
or
cwtl
jmp
add
add
and
call
daa
add
add
add
test
add
enter
pop
js
mov
pop
add
repz
lods
rolb
add
add
lods
addl
add
call
roll
add
mov
xchg
jg
add
xor
decl
xchg
add
add
inc
add
test
and
call
and
jmp
fwait
add
ljmp
add
add
dec
add
call
ljmp
add
and
jecxz
or
mov
add
jmp
aam
sub
iret
ds
mov
lahf
jnp
mov
mov
mov
scas
rolb
ja
pop
adc
lods
mov
add
dec
fldl
lcall
leave
data16
adc
call
sti
add
aad
stc
jno
jmp
lcall
addb
add
add
sub
lcall
les
or
sahf
lret
lret
hlt
mov
add
and
cmc
in
and
jmp
add
testl
jg
sub
add
xchg
jo
ljmp
decl
addb
add
inc
add
inc
add
lea
pop
mov
loopne
jnp
add
add
push
jmp
add
push
scas
dec
aad
dec
std
add
jnp
inc
add
fsubr
pop
adc
lcall
cmp
fwait
rcl
in
mov
add
addb
push
or
popf
nop
mov
add
mov
cmc
push
addb
sub
push
movl
add
ljmp
add
loope
lret
out
roll
add
lcall
add
mov
imul
mov
insl
scas
inc
add
fdivrl
add
add
repnz
add
dec
dec
lods
rclb
inc
add
mov
add
jl
add
xlat
cmp
add
add
dec
mov
dec
ret
add
jmp
add
or
xchg
xor
mov
push
pop
ret
add
add
pop
cmp
add
addb
add
loop
or
mov
popf
mov
add
and
xchg
add
ret
add
mov
mov
movb
add
inc
add
add
mov
std
std
lods
addl
fdivrs
add
inc
add
xchg
rcl
add
add
push
int3
xchg
cmp
dec
xchg
mov
add
nop
dec
push
add
push
mov
pop
mov
pushl
add
loop
mov
dec
fldt
ss
add
call
jbe
in
testb
or
jl
jbe
xor
add
and
pushl
add
mov
fcompl
fwait
pop
xor
incl
push
in
add
movsl
add
add
dec
jae
jmp
fistps
scas
lahf
sub
jp
add
add
cli
pop
mov
movb
stc
fdivr
imul
add
filds
pop
sti
pop
xor
call
call
jmp
pusha
add
addl
add
add
mov
add
out
stos
jle
add
loop
mov
repz
add
cld
in
mov
jp
sarl
add
in
movsl
add
outsl
in
js
nop
inc
add
aad
movl
add
pushl
push
rolb
daa
add
dec
inc
add
scas
jp
repz
in
or
ds
and
inc
add
add
add
daa
add
jmp
fsubrl
in
es
addl
adc
lcall
push
imul
repnz
call
jmp
mov
pushl
add
mov
pop
cmp
dec
rolb
and
pushl
push
add
in
stos
adc
ljmp
jmp
ljmp
jne
add
decl
add
push
add
negl
cmp
cmp
add
jp
pop
jae
cmp
dec
stc
ret
add
inc
add
jle
add
pusha
add
repnz
adc
jp
out
sbb
movb
ret
add
adc
add
int3
adc
and
pushl
pop
and
inc
add
jp
mov
decl
and
pushl
mov
lds
fistl
add
push
mov
add
xor
lcall
add
xchg
imul
divb
rcl
in
js
ds
pop
dec
je
lock
fildll
pop
popf
sub
dec
ret
add
jle
and
incl
add
bound
ljmp
cmp
add
inc
add
mov
movb
cli
push
add
xor
hlt
adc
jmp
add
incl
add
lcall
jne
shll
imul
rcrl
mov
add
bound
call
mov
add
jmp
push
ds
shlb
add
add
push
and
and
inc
add
ljmp
add
add
loop
push
mov
insl
xlat
push
add
repnz
dec
add
sbb
test
in
xchg
push
xchg
hlt
pop
and
mov
or
loope
rolb
add
cmp
add
add
bound
decl
add
add
stc
cmp
add
pop
cltd
or
mov
outsl
dec
icebp
mov
add
stos
mov
add
dec
ficompl
insl
in
sbb
mov
cli
and
inc
add
incl
aam
lea
xchg
jmp
call
add
dec
and
jmp
add
add
mov
pop
push
add
push
cmp
cwtl
adc
sub
jmp
addb
dec
into
add
ja
add
addb
xchg
jp
add
add
addb
shlb
add
insl
shl
or
movsl
add
mov
add
sub
loop
sbb
cld
pop
mulb
jmp
add
add
xchg
fdivr
movsl
add
add
add
jae
ljmp
add
add
pushl
mov
push
cmp
pop
add
cmp
scas
scas
adc
and
ljmp
pusha
add
loope
adc
decl
add
addb
ja
jae
jmp
fldl
daa
add
inc
add
push
out
aam
cmp
shrl
dec
pusha
add
pop
add
inc
add
lea
aaa
cs
add
dec
test
cltd
sbb
addl
xchg
add
push
add
mov
int
add
lcall
aad
jnp
add
add
pop
dec
mov
xchg
out
movl
mov
add
and
incl
adc
ljmp
outsl
sbb
movsb
add
inc
add
push
add
pop
add
add
imul
xor
aas
mov
test
sbb
std
add
dec
push
fistpll
lahf
cmp
add
cmp
add
sti
addl
cwtl
ffreep
add
push
pop
mov
add
mov
xchg
push
add
and
rorl
add
or
add
lcall
jge
and
decl
int3
repz
add
in
dec
add
ljmp
addr16
enter
inc
add
add
loope
mov
dec
sub
out
std
pop
add
incl
loop
or
add
stc
jg
add
add
push
add
out
stc
add
jmp
push
add
add
call
adc
in
jp
addb
add
out
jp
mov
add
add
insl
add
add
xchg
movsb
add
jbe
mov
sub
add
jns
lret
addb
add
jbe
das
stos
mov
rolb
add
sbb
jnp
mov
xchg
test
mov
lcall
push
add
inc
add
xchg
xchg
insl
lret
incl
dec
aas
nop
or
cwtl
cmp
ljmp
add
je
inc
add
add
jmp
push
js
pop
or
add
popa
add
movl
call
inc
add
xor
add
in
xchg
in
jge
movl
jno
mov
add
cltd
loop
pop
mov
inc
add
add
add
xchg
in
mov
cmp
xchg
test
ljmp
add
inc
add
in
cmp
add
add
sub
jl
loop
fisubrl
jo
inc
add
imul
sbb
lods
push
add
or
and
pushl
jmp
add
add
jae
pushl
jmp
fdivs
mov
mov
and
iret
or
dec
pop
hlt
repz
ret
add
or
add
setbe
add
add
add
xor
call
addl
mov
and
inc
add
dec
push
add
sbb
add
dec
out
scas
jne
es
cvtpi2ps
dec
out
das
out
sti
movsb
add
add
movsb
add
add
imul
call
shrl
add
add
add
lods
lock
sub
add
add
add
imul
jae
call
lock
mov
addb
xor
fidivrl
cld
jl
add
push
cmp
jge
addb
push
cmp
cmp
and
sub
test
cmp
push
pop
add
stos
cmc
das
add
call
add
add
scas
or
push
jmp
add
sub
add
enter
add
add
out
push
add
jmp
lcall
fdivrp
push
add
and
cmp
add
add
add
imul
add
add
add
shlb
out
xchg
add
incl
test
add
add
add
add
lcall
xor
call
add
int
add
adc
ljmp
fidivl
fldt
test
popa
add
lds
push
add
popa
add
push
jecxz
and
push
movl
decl
xchg
push
add
add
add
addl
pop
cmp
add
out
roll
imul
sbb
mov
stos
xchg
sub
add
add
add
ret
jg
add
scas
test
jae
jmp
add
addb
add
out
cmp
add
add
add
add
adc
call
sub
add
xor
decl
adc
ljmp
cmc
dec
mov
das
loop
out
push
in
dec
movups
pushl
jge
add
addb
dec
cmp
aaa
out
mov
iret
mov
jmp
lds
mov
and
ljmp
test
mov
cmpsb
add
mov
in
jae
pushl
add
scas
nop
aam
sahf
xchg
test
addb
add
cmc
mov
sub
and
ljmp
roll
sub
xchg
adc
movsl
add
dec
gs
add
sub
addb
add
add
and
cmp
cli
pop
and
decl
call
cs
add
fstps
and
pushl
fisubl
inc
add
add
dec
loop
jnp
mov
add
rol
add
push
add
xor
lcall
add
sub
and
pushl
add
addb
lret
dec
sbb
jecxz
idiv
int3
cmp
adc
pop
mov
add
lcall
and
aam
aas
xor
lcall
mov
jno
lcall
add
inc
add
or
imul
inc
add
add
frstor
call
mov
jb
ljmp
adc
lcall
mov
lea
mov
rorb
jno
mov
call
cmp
mov
mov
xlat
hlt
test
add
and
aas
cmp
push
fwait
out
movb
add
aam
sub
mov
jnp
notl
call
inc
add
pop
cmp
stos
adc
out
push
add
inc
add
add
popl
add
xchg
xor
add
aam
add
jmp
and
incl
add
inc
add
add
int3
icebp
sub
nop
xor
decl
scas
mov
xchg
inc
add
add
add
push
and
jge
fdivl
sahf
inc
add
fs
adc
lock
add
pushl
add
push
test
add
push
add
jb
mov
pop
sbb
add
test
ljmp
pop
clc
daa
add
stc
ljmp
add
sub
push
lahf
in
pop
repnz
imul
out
xlat
fisubrs
sar
push
ret
add
add
push
add
push
sub
pop
arpl
jmp
inc
add
dec
stc
lods
test
pop
mov
mov
inc
add
out
dec
jb
jmp
mov
repz
add
incl
add
test
ds
add
rclb
jmp
addb
add
mov
push
ja
cli
cmp
add
pop
ret
add
add
add
xor
inc
add
push
cmp
or
loop
dec
xchg
rolb
pop
out
add
add
xor
push
xchg
out
jns
add
add
ljmp
lret
ljmp
add
add
add
add
ljmp
adc
ljmp
fsub
add
dec
jnp
jecxz
add
cld
cmp
ret
add
add
add
push
mov
lret
and
pushl
in
mov
mov
add
add
jg
mov
das
sbb
call
addl
sbb
in
jle
or
push
cltd
cmp
xor
call
mov
fbstp
add
ljmp
add
jo
call
push
xchg
xchg
arpl
call
add
adc
cmp
add
fimuls
fdivrs
movb
leave
pusha
add
mov
shl
outsl
stos
lahf
mov
adc
inc
add
call
sub
add
dec
cmpsl
add
mov
imul
mov
cmp
xchg
lcall
iret
inc
add
dec
jno
decl
out
pop
nop
out
pop
loop
mov
popa
add
push
add
int
stc
int3
sub
stc
flds
mov
decl
add
mov
repz
ljmp
addb
add
add
add
push
pop
cmp
and
incl
repz
push
add
add
add
add
add
in
mov
jle
mov
sahf
mov
cmp
inc
add
pop
add
add
mov
add
je
imul
mov
or
jne
lock
add
add
ret
add
dec
inc
add
fucomip
lret
inc
add
cmp
icebp
lahf
pop
mov
jg
xchg
lret
sub
add
call
push
arpl
jmp
mov
cmpsl
add
test
ss
xchg
icebp
inc
add
or
stos
push
js
loopne
add
jge
mov
jle
jnp
sub
movsl
add
add
pop
pop
cmp
mov
add
jne
gs
add
in
sub
add
and
out
xchg
fistps
add
push
cli
out
add
in
sti
repnz
push
add
push
add
cli
lret
call
jbe
add
iret
cmp
sti
sbb
ljmp
ljmp
add
push
add
repz
inc
add
add
add
mov
push
dec
mov
jle
ja
mov
add
add
decl
insb
sbb
insl
mov
add
cmp
add
out
out
jmp
test
stc
and
jmp
add
add
test
add
iret
jb
inc
add
ja
add
xor
add
inc
add
add
outsb
dec
lcall
dec
loop
or
lock
add
mov
push
add
pushl
mov
ja
sub
add
push
inc
add
fs
out
lds
dec
mov
xor
dec
mov
push
add
movsl
add
add
std
aad
add
xchg
cs
add
sub
sub
pop
ja
xchg
in
xchg
clc
cmp
add
dec
movb
inc
add
adc
decl
outsl
xor
add
mov
fwait
cmp
pop
mov
adc
call
add
imul
jmp
add
fiaddl
call
mov
lcall
adc
and
dec
sbb
add
sbb
xor
call
cmp
sub
in
addl
add
cwtl
imul
js
add
addl
int
add
add
int3
fwait
pop
imul
cmc
inc
add
fldenv
in
loope
inc
add
arpl
call
jmp
add
cmpsl
add
add
sub
jb
jmp
add
mov
add
xlat
in
mov
rcrl
dec
arpl
stc
daa
add
fadds
sub
pop
xor
mov
add
rcrb
add
pop
mov
add
test
or
xchg
fiadds
dec
push
add
cli
xor
inc
add
adc
lcall
xchg
incb
inc
add
add
adc
mov
add
or
dec
test
add
push
std
sub
int
or
xchg
stos
jae
incl
add
add
add
lds
adc
call
out
cmpsl
add
mov
dec
cmp
ljmp
adc
add
adc
call
add
dec
fisttpl
int
mov
push
scas
int3
add
je
ror
mov
mov
repz
pop
int3
push
and
jmp
sbb
add
aaa
movl
mov
mov
add
xchg
cmp
add
sbb
fdivs
bound
jmp
add
add
jmp
fmuls
add
ljmp
and
jmp
roll
add
out
inc
add
mov
in
cld
mov
cmp
lods
pop
bound
inc
add
add
test
push
add
push
int3
das
aas
xchg
dec
fdivr
mov
sbb
add
and
testb
add
aam
sbb
scas
pop
jge
dec
les
cmc
push
add
and
push
sbb
add
inc
add
jmp
add
std
mov
add
stos
or
add
mov
int3
pusha
add
dec
mov
jecxz
jae
pushl
dec
add
dec
jbe
sub
aad
jg
push
lods
outsl
cmpsb
add
add
out
movb
or
add
xor
jmp
add
mov
add
cmp
sbb
add
sbb
stc
mov
mov
test
mov
add
dec
mov
add
int3
or
add
scas
addr16
dec
test
add
decl
add
inc
add
sbb
add
sub
add
test
shrl
ret
add
inc
add
inc
add
dec
cltd
jmp
add
jmp
mov
ret
add
psrlw
push
mov
add
inc
add
pop
add
mov
or
add
sti
sti
mov
adc
push
dec
cmp
rcll
add
sbb
jg
add
and
mov
xchg
cmpsb
add
add
add
fdiv
push
inc
add
insl
pusha
add
js
sbb
inc
add
lods
sub
rolb
icebp
inc
add
loop
outsb
pop
sbb
cmpsb
add
lcall
cmp
add
dec
add
mov
int3
mov
mov
inc
add
add
add
xor
decl
stos
outsl
xor
decl
call
sbb
add
mov
mov
add
cmpsb
add
mov
cld
sub
test
add
inc
add
or
push
repnz
jmp
add
les
pop
int3
jbe
add
or
or
aas
int3
xlat
add
add
bound
call
and
call
incl
push
add
pop
add
add
popf
loopne
lock
add
adc
lcall
out
in
outsl
lret
ljmp
aam
adc
cmp
out
icebp
gs
sub
insb
lock
incl
enter
popa
add
dec
xor
fldl
add
addl
inc
add
ss
push
add
xor
add
xlat
out
nop
repnz
sti
jns
xor
incl
ljmp
aaa
or
pop
aad
cs
add
add
add
nop
pop
imul
push
add
push
add
in
cmp
arpl
decl
dec
jo
cmp
sbb
sti
or
fmulp
mov
fstl
add
or
add
arpl
jmp
jmp
add
lcall
add
cli
stos
inc
add
pushl
add
dec
test
add
decl
inc
add
shll
decl
sbb
int3
or
xchg
dec
roll
or
aas
lea
jmp
add
xchg
jnp
add
mov
dec
or
and
decl
add
adc
pushl
jnp
cwtl
or
int3
or
jnp
mov
add
dec
popf
dec
movl
dec
push
ss
add
inc
add
decl
push
js
add
clc
movb
add
das
add
mov
into
idivb
dec
mov
xor
lcall
xor
add
daa
add
sub
inc
add
jb
call
and
data16
cmp
movb
add
movb
push
insl
clc
xchg
ja
push
rorb
jmp
addb
add
inc
add
mov
sub
test
pop
jae
pushl
add
xor
addl
xchg
xor
xchg
mov
sbb
fwait
xor
decl
xor
inc
add
frstor
cmp
jmp
incl
decl
add
push
nop
repz
add
mov
call
ljmp
dec
repz
jge
test
mov
into
push
add
sbb
add
insb
outsl
lods
push
inc
add
add
loope
call
cs
add
mov
jp
cmc
popf
test
addl
dec
scas
push
ja
in
fnstcw
add
cmp
add
pop
xchg
fidivrl
mov
add
fimuls
add
test
push
inc
add
lock
sub
push
jmp
in
test
stos
add
push
fnstcw
decl
leave
movl
sub
jl
jp
add
fiaddl
sti
cmpsb
add
insl
mov
decl
add
inc
add
fidivl
in
repz
lret
cwtl
inc
add
addb
les
sbb
rcll
jl
jb
push
arpl
lcall
add
jmp
pop
stos
sbb
call
add
add
imul
mov
add
inc
add
cltd
mov
lock
lcall
add
inc
add
add
roll
xchg
daa
add
in
and
incl
add
adc
ljmp
sbb
add
push
add
fldenv
loop
jmp
addl
add
jae
incl
add
test
in
sub
add
leave
xchg
lahf
fcmovnb
add
ficoml
pushl
lcall
and
jmp
sahf
js
mov
mov
add
add
cmp
inc
add
imul
add
push
shll
clc
jge
sub
lods
sbb
add
jle
add
lock
add
dec
jb
push
inc
add
xor
test
jb
lcall
test
out
mov
rolb
mov
popf
fsubrs
pop
pcmpgtb
cli
and
fsubrl
lods
cmpsl
add
cli
test
lcall
pushl
or
add
roll
mov
dec
insl
add
ljmp
rolb
add
mov
pushf
rcrb
add
decl
xor
decl
cmp
and
pop
mov
pusha
add
pop
lock
out
inc
add
stc
in
movsb
add
push
sbb
jmp
int
add
xchg
add
call
ljmp
lods
imul
add
add
add
mov
xlat
push
add
gs
sti
or
jmp
data16
cld
arpl
jmp
add
add
mov
cmc
mov
add
dec
pop
hlt
addl
int
add
dec
mov
ljmp
xor
pushl
jmp
add
add
mov
add
add
push
add
push
jo
jmp
cmp
loopne
mov
add
iret
leave
mov
movb
add
fs
mov
insl
lcall
add
repnz
mov
ret
add
add
rolb
push
mov
add
addl
cmpsb
add
add
inc
add
add
pop
push
sub
jmp
add
rolb
incl
fsubl
add
sub
lcall
addl
jecxz
aaa
adc
ljmp
cmpsb
add
add
js
add
add
adc
rcr
or
push
movb
and
push
push
add
or
int
int
add
fmul
in
add
jle
add
and
jmp
add
push
nop
lret
add
in
adc
call
add
or
push
cli
fisubrs
add
nop
inc
add
add
fbstp
add
loop
sub
fdivr
cmpsb
add
add
pop
ret
or
inc
add
add
pop
pop
lret
xchg
call
js
or
sar
dec
mov
hlt
pushf
jnp
add
xor
in
js
add
add
mov
inc
add
mov
shrl
add
enter
sub
push
add
movsb
add
adc
fists
add
jae
jmp
add
xor
jge
cmpsl
add
insl
mov
mov
add
cmp
mov
std
inc
add
inc
add
mov
add
decl
add
ret
add
inc
add
pop
insl
pushf
pmulhw
cmp
dec
mov
in
xchg
pop
dec
add
jp
sbb
add
incl
ljmp
add
cmp
mov
bound
incl
add
pop
stos
inc
add
sub
decl
inc
add
add
out
lcall
add
sti
out
jge
sahf
pop
push
xchg
mov
add
push
imul
incl
push
add
je
jle
add
jbe
mov
dec
jl
pop
repz
fidivl
jmp
cs
jo
incl
incl
add
add
incl
dec
fsts
jb
decl
add
jmp
add
pop
popf
push
mull
add
add
add
pop
sub
aaa
adc
lcall
dec
and
mov
mov
das
imul
add
addr16
ret
sub
fsub
add
pushl
aaa
outsl
xor
ljmp
add
das
mov
loope
cmc
sahf
push
pop
test
add
push
add
inc
add
and
inc
add
add
negb
push
mov
xchg
ss
jae
stc
add
add
mov
add
repz
add
add
add
lcall
aam
dec
pop
add
inc
add
jl
inc
add
inc
add
pop
cltd
mov
add
sbb
sbb
add
add
xor
in
ljmp
add
add
add
fldenv
add
ja
mov
xor
mov
cmp
add
sbb
ss
xor
jmp
call
add
jbe
imul
xchg
or
adc
pop
imul
add
in
aas
popf
push
add
outsl
fdivl
incl
adc
incl
cmp
jmp
mov
add
fwait
jecxz
jp
or
add
or
sub
testl
pop
fisubs
add
mov
add
sbb
sub
push
jb
pushl
add
lods
add
add
add
inc
add
mov
adc
dec
adc
or
xlat
mov
xor
incl
in
bound
call
add
jge
adc
test
sbb
add
sarl
shrl
adc
ficoms
add
xchg
lock
mov
dec
and
out
test
or
xor
jmp
add
mov
dec
nop
pop
mov
decl
push
add
outsb
pushf
out
xchg
les
cmp
add
mov
xchg
movsl
add
add
pop
mov
add
or
lcall
lcall
dec
stc
or
add
in
daa
add
add
inc
add
mov
add
outsl
xlat
sub
add
aam
add
mov
fdivs
faddl
add
add
lahf
mov
mov
sbb
add
add
or
xchg
mov
enter
mov
ficoms
xlat
push
dec
loope
test
pushf
cmc
sub
add
mov
lods
mov
sbb
add
fidivl
jp
add
addb
stos
mov
jp
pop
jp
inc
add
push
add
call
les
loop
push
add
test
outsl
pop
sub
add
incl
bnd
ljmp
mov
movsb
add
call
add
fdiv
and
decl
jnp
data16
inc
add
hlt
sbb
incl
mov
outsl
adc
jmp
add
stos
mov
xor
pushl
lea
xchg
cmp
add
add
lcall
arpl
push
sbb
in
in
loope
push
into
movsl
add
xor
inc
add
add
and
call
add
mov
mov
add
adc
imul
mov
add
add
add
sbb
stos
sbb
jns
pop
add
mov
cmpsb
add
add
add
add
and
out
not
sbb
add
mov
pop
sbb
add
push
add
add
std
loopne
sbb
and
clc
xor
decl
negl
addl
lea
add
add
jge
push
movsl
add
addb
add
outsb
ljmp
pushl
call
adc
ljmp
ja
loop
or
sbb
dec
pop
js
pop
ds
push
add
call
incl
decl
jmp
add
add
jge
add
add
rcll
add
sahf
mov
add
inc
add
xor
jmp
sbb
cmc
hlt
mov
add
movb
mov
sbb
mov
in
add
jmp
decl
pushl
outsl
push
sti
addl
inc
add
shrl
add
out
idivl
incl
add
inc
add
incl
sub
push
add
ss
outsl
fmull
incl
add
jp
add
imul
and
mov
xchg
or
jge
test
imul
cmp
add
cs
add
out
sub
adc
ljmp
cmp
out
mov
xchg
frstor
add
fisubrs
loop
fildll
add
ljmp
add
cld
hlt
dec
cmc
xchg
enter
cwtl
fsubrl
add
bound
decl
jle
outsl
xchg
xor
out
js
add
movl
fisubl
lcall
adc
call
add
cmpsb
add
in
neg
push
and
sti
je,pn
add
iret
xlat
or
addb
sahf
xchg
and
das
enter
xor
jns
and
call
fcmovb
add
mov
xchg
dec
jecxz
sub
repnz
add
mov
cmpsl
add
movsl
add
arpl
fsubrp
lahf
outsl
fisttpll
mov
mov
mov
add
popf
notb
jmp
add
ljmp
xchg
stos
mov
add
cli
out
lods
leave
pop
adc
pushl
lcall
mov
push
lahf
jmp
add
loop
cmp
mov
add
addb
add
lea
dec
ds
inc
add
iret
pop
jbe
mov
out
adc
pushl
mov
adc
ljmp
mov
call
addb
pop
fsubs
cmp
outsb
jbe
addb
xor
jmp
add
fld
add
mov
add
int3
adc
jmp
mov
das
movsb
add
xor
jmp
add
fwait
add
push
scas
outsl
mov
xchg
cmp
enter
mov
je
add
and
xchg
add
pushl
add
mov
add
add
sarl
iret
sbb
jp
add
mov
out
out
cmp
add
sarl
sub
push
clc
addb
aaa
and
decl
push
sub
pop
nop
clc
js
test
ds
jae
pushl
and
call
jb
call
call
dec
addl
push
scas
fmul
test
sbb
divb
call
aaa
push
add
shr
inc
add
add
add
cmp
mov
mov
dec
add
mov
add
ss
or
call
out
das
movb
add
adc
add
leave
rol
add
scas
cmp
loopne
push
outsl
mov
add
xlat
inc
add
add
push
add
stos
cmc
loop
adc
incl
push
cmc
addl
lret
and
dec
jns
dec
adc
cli
jbe
add
aas
cli
out
xchg
jnp
lret
clc
fsubr
loop
stos
cmpsb
add
add
ljmp
pop
movsl
add
add
call
lcall
mov
decl
pushl
cmp
add
add
roll
add
inc
add
int
push
mov
sub
jl
popf
stc
fcmovu
addb
mov
push
add
push
add
inc
add
and
mov
aad
mov
loope
cs
std
push
repz
ja
add
jp
add
add
call
or
add
or
shrl
test
sub
movsb
add
jecxz
bound
pushl
pop
daa
add
add
dec
fwait
imul
hlt
notl
add
pop
cmp
add
push
add
ss
in
movsl
add
xchg
test
xor
jmp
add
rcl
scas
or
jmp
pop
xor
fildl
in
inc
add
mov
movl
add
decl
mov
stos
inc
add
xor
push
jge
lods
iret
adc
bound
cld
and
pushl
clc
xchg
call
jge
pusha
add
roll
aas
or
addb
mov
fwait
mov
loop
in
into
jmp
cmp
into
jecxz
aas
les
inc
add
ret
add
inc
add
push
add
in
ret
cmp
incl
inc
add
adc
cmp
insl
fisttps
roll
add
ja
dec
sub
pop
in
mov
jbe
daa
add
test
inc
add
add
arpl
jmp
add
push
add
and
icebp
rolb
add
xchg
or
mov
lcall
or
pushl
call
sub
mov
add
cld
fcmovnbe
jmp
jmp
int3
mov
stos
xlat
mov
add
add
add
add
push
enter
sbb
add
imul
sub
jbe
mov
mov
in
jg
add
mov
or
out
sbb
ss
add
add
mov
jge
add
adc
incl
add
adc
decl
enter
add
add
dec
xchg
out
inc
add
add
data16
addr16
dec
movl
add
adc
jmp
xchg
bound
decl
add
out
push
movl
ljmp
add
icebp
movb
mov
xchg
push
mov
add
add
add
add
add
inc
add
lock
les
out
ret
add
adc
pushl
add
or
add
xor
lcall
pop
cmp
ret
add
add
addb
cltd
add
incl
jmp
add
pop
cmp
jnp
add
sub
jnp
scas
inc
add
int
add
test
jl
add
js
add
incl
jle
add
mov
add
mov
mov
mov
add
dec
lret
dec
shrl
push
mov
or
icebp
xchg
xchg
mov
pop
in
sbb
xor
lcall
jg
popl
add
jg
cwtl
data16
ret
add
mov
add
addl
pop
int
mov
xchg
mov
add
incl
addl
or
add
add
sbb
add
pusha
add
pop
cmp
sbb
loopne
pusha
add
call
add
call
mov
sub
add
add
dec
mov
add
inc
add
pop
mov
add
add
loopne
outsb
and
int
inc
add
lock
dec
ficoms
jbe
jns
inc
add
add
loope
sarb
add
mov
add
add
cld
cmpsb
add
mov
push
adc
out
push
jb
incl
add
mov
and
ljmp
xchg
cmpsb
add
sbb
movb
push
ret
add
movl
add
inc
add
fdivrs
mov
insl
lods
test
xor
fistpl
add
cwtl
nop
mov
in
bound
ljmp
jl
add
add
adc
push
add
add
inc
add
insl
jne
add
sbb
add
leave
movsl
add
add
add
sbb
add
rol
add
add
sub
xor
lcall
dec
scas
jns
add
btr
add
scas
push
loope
sub
aas
mov
insb
daa
add
insl
jb
jmp
incl
or
frstor
inc
add
in
pop
imul
inc
add
add
jmp
inc
add
mov
add
add
ret
add
xchg
mov
add
in
aas
mov
add
ljmp
add
int
add
jns
add
pop
aas
mov
loope
sbb
xchg
fbld
cwtl
add
divb
call
add
clc
cmpsb
add
negb
scas
cmc
gs
cld
in
repz
add
incl
pop
dec
rcl
jge
in
cmp
addb
inc
add
dec
xchg
pop
ret
add
ljmp
movl
ljmp
add
add
add
inc
add
cwtl
cmc
test
push
add
cmpsl
add
jns
push
add
testl
add
repnz
mov
out
lcall
add
push
cmpsl
add
daa
add
pop
cmp
add
int
add
jle
movl
ljmp
dec
xchg
nop
rcrl
dec
add
decl
sub
leave
add
lcall
add
out
lods
insb
roll
inc
add
xor
ljmp
push
xchg
cmp
add
loopne
sti
aad
add
fldcw
popa
add
aad
cmp
pop
add
add
idivl
add
pop
addb
jmp
test
dec
pop
xchg
clc
xchg
fildl
push
bound
ljmp
sub
movl
sbb
sarl
addb
sub
add
filds
js
fwait
xor
inc
add
add
aam
lahf
or
movsb
add
lock
add
add
add
cmp
enter
call
add
xchg
fsubrp
xchg
movsb
add
add
xchg
jo
inc
add
add
sahf
test
inc
add
aam
xchg
loopne
sbb
add
decl
aad
sub
inc
add
add
xchg
jne
add
add
jecxz
inc
add
rcrl
inc
add
jae
fsubs
add
outsb
stc
aad
push
add
loopne
movb
jg
add
lret
add
pop
pop
leave
xchg
xchg
hlt
cld
and
inc
add
data16
in
addb
cmp
mov
les
addl
add
jmp
pop
add
test
jl,pt
dec
jmp
add
cmp
data16
inc
add
enter
or
ret
mov
in
xchg
xchg
mov
sbb
pop
or
adc
lcall
xchg
adc
jmp
lahf
aas
inc
add
inc
add
add
add
data16
inc
add
mov
add
add
movl
pop
hlt
mov
push
add
sbb
mov
add
and
call
add
in
mov
outsl
mov
loop
call
add
addr16
in
jnp
xchg
dec
xchg
inc
add
cmpsl
add
and
mov
movb
outsb
mov
and
add
push
mov
pushl
incl
pushl
das
cmp
test
pop
jb
pushl
pop
or
call
pop
add
incl
jmp
call
and
incl
mov
mov
sbb
stos
mov
pop
fsts
add
sbb
jmp
inc
add
add
push
jecxz
push
or
inc
add
insb
das
mov
add
add
rolb
fistpl
in
cmpps
fcmove
cmc
loopne
mov
xor
ljmp
std
adc
incl
mov
xor
incl
add
dec
mov
add
sub
add
sub
lds
pop
mov
and
and
lcall
add
aam
test
mov
push
and
call
pop
je
sub
das
outsl
lcall
add
incl
lahf
in
mov
lds
push
add
addb
add
decl
jle
xchg
sbb
out
sbb
sbb
add
inc
add
enter
aaa
dec
mov
add
insb
fdivr
dec
cmc
mov
cmp
pop
jb
jmp
add
add
decl
pop
fwait
imul
fiaddl
adc
pushl
mov
adc
pushl
xor
jg
leave
out
pusha
add
pop
push
sbb
popa
add
imul
inc
add
enter
cmpsl
add
xchg
sti
mov
test
rolb
add
add
shlb
adc
mov
mul
add
jo
out
addl
cmp
lcall
nop
insb
sub
jmp
mov
fldenv
lcall
shlb
decl
addl
int
sbb
aaa
call
fisubl
ljmp
xor
decl
push
add
add
std
daa
add
in
iret
xchg
icebp
add
xor
incl
add
in
loope
add
cmp
sbb
sub
cwtl
addb
inc
add
sahf
push
mov
fnstsw
add
pushf
pop
add
popf
scas
popa
add
mov
and
ljmp
stc
ds
mov
call
pop
sub
add
add
cli
inc
add
nop
adc
jge
add
add
test
add
das
jno
decl
xor
iret
mov
cmp
add
add
iret
jno
lcall
cmpsb
add
mov
dec
xchg
ret
rorl
int3
aam
xchg
mov
int
mov
lcall
sub
lret
decl
adc
fxch
pop
stc
inc
add
mov
add
lcall
or
add
into
push
aas
sbb
add
jns
add
adc
call
sbb
out
xchg
enter
add
pop
insl
cmp
add
or
out
mov
pop
fsin
cltd
rclb
call
loope
rolb
scas
pop
sbb
push
out
mov
rclb
add
cltd
xchg
xchg
push
add
push
jbe
mov
sub
push
add
shl
add
add
push
mov
mov
jae
jmp
ljmp
aam
or
das
addr16
fwait
shll
add
pop
ret
addl
add
arpl
call
cmp
jb
pushl
xor
lcall
mov
add
add
jmp
nop
jle
add
add
jge
cmpsl
add
add
adc
pushl
add
decl
decb
add
mov
xor
jmp
add
out
sbb
lea
pusha
add
inc
add
inc
add
cmp
add
hlt
cmp
stc
in
jecxz
popf
movsb
add
sub
add
call
add
xor
inc
add
icebp
add
add
xchg
jmp
add
add
out
jnp
push
int
fst
test
out
xchg
fmull
movsb
add
fimull
add
adc
inc
add
jle
movsb
add
ja
add
fidivrs
outsl
pop
dec
sub
mov
add
in
xlat
mov
add
cmp
add
inc
add
add
pushl
sbb
pop
add
add
jo
ljmp
or
jmp
add
push
aas
mov
out
and
fadds
add
aaa
loope
push
scas
outsl
push
add
scas
or
incl
pushl
add
rcrb
jle
scas
pop
cmp
fxch
xlat
mov
add
cmp
add
adc
int
inc
add
and
decl
in
out
cmp
call
add
sub
add
mov
sub
fldenv
and
mov
rorb
pop
sbb
pop
or
mov
loopne
out
icebp
cmp
out
pushf
add
out
xor
or
pop
mov
add
push
sar
xchg
xlat
sti
in
dec
adc
add
pop
mov
lcall
dec
les
push
cwtl
stos
xchg
pop
fisttpl
add
pop
add
mov
xor
call
add
jg
push
mov
add
mov
xlat
roll
data16
rclb
mov
add
jmp
cwtl
xchg
inc
add
xor
adc
and
test
xor
lcall
pop
loop
out
lock
jo
call
lock
add
lahf
and
add
add
sub
out
insl
in
adc
lcall
and
pushl
jmp
add
add
lahf
fidivs
decl
adc
push
pop
lahf
int3
addb
add
dec
or
aad
xchg
adc
add
inc
add
add
mov
add
sbb
add
data16
add
adc
decl
add
cmp
nop
xor
call
loop
out
and
pusha
add
or
sub
lret
cmp
js
outsl
pop
lods
ror
add
xchg
mov
xchg
or
call
pop
fdivrl
sbb
mov
inc
add
nop
inc
add
jle
add
cmp
inc
add
add
push
repnz
cli
nop
addb
lods
xchg
push
imul
daa
add
negl
mov
add
add
or
add
hlt
jmp
data16
incl
add
dec
shl
add
cmp
add
pushl
lret
add
addl
into
shlb
jmp
xlat
sub
add
scas
pushf
adc
pushl
add
movsl
add
lcall
aas
push
fwait
inc
add
sbb
dec
test
into
das
addb
mov
nop
dec
ds
adc
add
mov
dec
invd
mov
add
inc
add
jbe
insl
mov
xor
cmp
ficompl
cwtl
test
add
mov
add
xchg
lds
inc
add
push
add
pop
ja
xor
incl
add
movsl
add
mov
in
cltd
inc
add
jmp
pushl
lcall
loop
push
add
add
add
cmpsl
add
push
add
addb
adc
add
call
adc
add
pop
add
cmp
call
addb
add
daa
add
int
inc
add
sub
add
jmp
add
pushl
adc
call
and
inc
add
int3
mov
xchg
dec
jecxz
les
add
decl
push
gs
movsl
add
ja
sbb
ljmp
add
push
repnz
ret
add
cld
icebp
popa
add
out
add
int3
js
add
add
pcmpgtd
mov
popa
add
loop
leave
and
jmp
add
rcl
and
ljmp
inc
add
adc
ljmp
in
dec
jecxz
lods
jp
add
fdiv
xchg
fsub
add
add
scas
outsb
mov
add
xor
int3
loope
and
jmp
add
sti
adc
stc
add
decl
push
sbb
lahf
out
int3
push
add
push
mov
cmp
jl
add
repnz
dec
adc
pushl
or
incl
add
add
add
sub
and
decl
jns
sbb
aad
sbb
repnz
lahf
js
add
test
sbb
sbb
inc
add
rolb
mov
or
push
inc
add
pop
or
add
and
incl
xchg
mov
lds
inc
add
jb
lcall
push
bound
pushl
add
int3
scas
add
add
sbb
clc
xchg
roll
push
negb
lods
repnz
add
mov
add
push
into
xor
aad
aas
jmp
mov
rcrb
outsl
repnz
lcall
in
cs
shrl
cmp
mov
decl
cmpsl
add
movsl
add
add
stc
aaa
ret
lods
outsb
push
or
add
movq
push
add
lods
js
jo
ds
jle
jae
incl
add
xlat
clc
mov
mov
add
scas
pop
maskmovq
testl
pushl
dec
xchg
popa
add
xor
pushl
add
call
push
add
add
or
ja
add
dec
mov
push
add
hlt
jnp
mov
call
lds
rorb
pop
imul
neg
mov
add
addl
add
sahf
push
sbb
hlt
mov
lahf
inc
add
out
and
pushl
sub
pop
shll
decl
jnp
add
pop
mov
add
mov
dec
mov
mov
pusha
add
lea
fistps
lcall
add
add
outsb
inc
add
xchg
pusha
add
pop
dec
dec
xchg
lock
dec
fsubrl
int
mov
add
sub
xchg
inc
add
addl
call
out
mov
cmp
add
add
add
cltd
loope
in
rolb
cmp
ret
cmp
outsb
jne
add
int3
insl
sub
pop
in
push
inc
add
mov
add
stc
mov
add
add
roll
add
ficoms
add
jb
jp
add
bnd
ljmp
jg
inc
add
xchg
movl
adc
pushl
xor
add
add
lret
cmp
roll
mov
dec
sbb
fsubrp
push
mov
add
add
aam
movsb
add
inc
add
and
pushl
dec
or
lahf
cmp
mov
rcrb
add
xchg
xchg
addl
mov
je
je,pt
adc
mov
addb
fstps
ret
add
mov
xchg
pop
xor
cmp
or
decl
mov
add
add
jmp
add
add
cmp
pop
dec
mov
add
adc
cli
sub
lcall
movsb
add
add
insl
inc
add
add
mov
and
dec
push
test
addl
add
add
add
mov
add
shlb
cli
fdivr
sbb
add
sub
add
add
movsb
add
add
addps
dec
cmp
arpl
decl
cmp
sub
inc
add
push
sbb
dec
into
and
jmp
add
push
add
add
or
push
dec
mov
aam
add
add
add
push
out
addb
and
fidivs
mov
add
add
adc
jmp
ror
and
lahf
ret
add
add
add
pushf
ret
das
lcall
jecxz
add
cmp
add
adc
jae
call
add
jno
dec
adc
call
mov
add
sbb
insl
addl
incl
xchg
jno
fcmovbe
addb
add
call
push
dec
seto
add
addb
add
daa
add
dec
notb
out
cmp
cmp
int
push
ljmp
add
push
addl
add
push
add
mov
leave
cs
add
add
nop
pop
daa
add
push
add
xor
add
imul
stos
nop
sub
add
add
rolb
cld
inc
add
jmp
xor
lds
jno
lcall
or
sbb
add
cmp
mov
pushl
ljmp
mov
out
push
movsl
add
cli
adc
incl
add
movsl
add
add
add
add
inc
add
inc
add
hlt
jp
loop
insb
repnz
sub
xor
incl
add
add
stos
add
incl
jecxz
cli
sti
lahf
jnp
add
add
call
add
addl
add
sub
mov
add
cmp
sbb
jnp
lahf
jp
add
rclb
call
add
xor
lcall
cmp
lcall
jle
arpl
clc
add
inc
add
add
js
push
add
jmp
add
mov
add
mov
add
mov
add
add
and
pushl
push
xchg
out
sub
aam
dec
fwait
jp
pop
dec
negl
outsb
add
inc
add
stos
movb
adc
lcall
lret
or
add
inc
add
sbb
add
or
add
push
dec
jmp
add
cmp
aam
jbe
mov
add
pop
fsubp
add
rolb
add
and
jmp
sbb
add
fwait
ret
add
in
sub
movl
and
call
mov
xlat
lss
imul
or
add
add
add
add
and
ljmp
rorb
add
bound
lcall
add
and
jmp
add
add
jnp
lret
incl
lcall
sbb
mov
incl
iret
mov
add
shll
add
xor
or
push
std
lcall
dec
push
cld
jge
cwtl
fistl
mov
jmp
add
addb
add
fldcw
repz
jno
or
add
mov
add
cmp
fnstsw
add
in
inc
add
jecxz
mulb
fisubl
mov
add
lods
clc
ja
ret
add
push
add
les
mov
jmp
add
add
pop
mov
push
pushf
xor
addb
mov
dec
push
add
add
decl
movsl
add
pushf
pop
rep
or
add
xor
decl
call
cmp
lea
add
pushl
add
je
add
xchg
addb
outsb
mul
add
add
jo
jmp
dec
stos
outsl
xchg
adc
pushl
mov
pop
add
jge
pop
inc
add
xchg
outsl
pusha
add
push
add
jno
dec
sub
add
jns
mov
add
pop
leave
or
inc
add
add
add
add
ss
add
pushl
and
push
dec
push
add
fld
add
fwait
popa
add
addl
add
jge
call
mov
add
das
add
jmp
add
jmp
cmpsl
add
mov
shll
inc
add
dec
push
add
in
repz
add
sbb
add
push
jb
ljmp
test
cmp
insb
roll
add
add
dec
dec
mov
pop
fdivrs
add
movb
add
test
xchg
pop
add
call
dec
pop
push
add
mov
add
xchg
push
mov
pushl
add
xchg
leave
xchg
loope
pop
sbb
push
add
scas
push
sub
outsb
scas
into
das
xchg
jae
pushl
add
into
jbe
add
lahf
test
add
pop
movl
jns
add
call
add
and
pushl
cmpsb
add
mov
movsb
add
add
mov
dec
das
cltd
xor
decl
xchg
adc
pushl
sub
add
dec
shrl
xchg
jb
pushl
sti
mov
stc
push
stos
les
sarb
fadd
add
stos
fldl
dec
pop
mov
adc
mov
outsb
and
decl
add
shl
add
outsb
lds
or
add
decl
imull
mov
jne
rep
adc
jnp
stos
incb
call
jmp
add
dec
cmp
xor
addb
add
jo
ljmp
loopne
hlt
aad
add
adc
shl
add
add
ljmp
insb
add
ljmp
add
addb
add
and
pushl
add
sub
ljmp
push
pop
add
adc
incl
in
lret
mov
cmp
cmp
lahf
add
xchg
pop
movb
cmp
mov
lea
in
arpl
in
inc
add
out
dec
ret
xchg
jmp
add
mov
cmp
dec
pop
test
rolb
jecxz
pop
ljmp
jmp
add
add
pop
pusha
add
ret
cmp
jl
mov
mov
in
loope
aas
push
dec
fwait
xchg
adc
cmp
enter
xor
fwait
cmp
dec
push
add
add
add
add
jbe
add
dec
pop
jae
jmp
cltd
sbb
add
sub
call
add
cmp
dec
lods
pusha
add
aas
sub
les
or
xor
jbe
inc
add
adc
add
add
outsb
cmp
push
mov
in
rolb
fimull
pop
sub
repnz
pop
sub
imul
jmp
add
add
cmp
loop
push
add
mov
pop
jae
jmp
decl
popf
pop
cli
aas
jl
sub
enter
push
inc
add
jae
sti
bound
cmp
add
aas
cmp
dec
inc
add
inc
add
add
add
decl
xor
dec
jns
sub
test
and
pushl
and
call
adc
inc
add
leave
fistpll
add
std
xchg
xchg
hlt
imul
adc
call
sahf
mov
add
add
in
mov
add
and
pop
out
adc
ret
pop
pop
lahf
inc
add
add
add
mov
add
inc
add
add
scas
add
incl
stos
insb
inc
add
addb
insl
fidivrl
in
in
fisubl
add
stc
les
addr16
add
negb
add
sahf
movb
add
mov
stos
test
add
xchg
xchg
jo
push
or
add
sbb
cmp
incl
popf
xor
call
lcall
or
push
add
inc
add
ss
movaps
xchg
fwait
pop
stos
cli
jp
test
dec
clc
cld
test
roll
add
inc
add
add
jge
clc
out
ret
add
sbb
add
add
data16
stos
xchg
mov
push
in
repnz
test
jmp
out
ja
sbb
mov
add
sub
into
cld
cmp
inc
add
lcall
mov
add
incl
outsl
add
pushl
incl
dec
enter
jecxz
enter
add
je
add
sub
je
add
add
add
mov
decl
inc
add
jo
pushl
ljmp
cmp
add
cmc
stc
cmpsb
add
iret
sub
push
mov
add
inc
add
push
sub
inc
add
jecxz
rcr
and
call
add
push
bound
decl
jnp
je
mov
add
jg
add
lock
daa
add
into
or
jmp
add
add
jg
push
mov
mov
sub
push
mov
add
lcall
cld
jo
jmp
add
add
mov
lea
incl
aam
add
sub
je
xor
mov
add
pushl
pop
xlat
push
add
incb
add
add
mov
xchg
aaa
xchg
xor
dec
clc
push
push
sahf
outsb
sub
pop
pop
pop
and
fcmovnb
add
cld
dec
bound
jnp
or
add
out
jb
pushl
xchg
addb
rclb
inc
add
xchg
mov
pushf
xchg
cmp
popa
add
mov
sti
inc
add
add
movsb
add
add
mov
add
ljmp
add
loope
aas
out
or
add
cwtl
stc
outsb
test
add
in
xchg
cmp
mov
jb
pushl
nop
stos
dec
jo
ds
add
cli
icebp
cmp
fcompl
add
lods
inc
add
mov
add
icebp
pop
cmc
ficoms
add
add
dec
lcall
jmp
test
cmp
push
mov
decl
jg
inc
add
add
inc
add
pop
mov
add
jl
scas
movsl
add
add
dec
addl
xchg
movsl
add
ret
add
add
inc
add
or
dec
pop
aad
in
scas
mov
out
jp
mov
add
call
std
push
movsl
add
incl
and
lcall
scas
scas
test
add
addr16
outsl
xchg
mov
or
roll
add
xchg
out
je
pop
sbb
sbb
add
decl
int
ljmp
inc
add
cmp
push
add
sti
out
xchg
mov
add
stos
test
dec
mov
int
movsl
add
add
add
xor
push
adc
lcall
jecxz
adc
mov
add
call
sbb
inc
add
scas
mov
inc
add
call
push
add
inc
add
add
aaa
xchg
dec
mov
add
add
push
jg
jo
dec
in
xchg
roll
inc
add
incl
add
jne
add
out
mov
pop
fwait
mov
and
incl
add
jl
pop
add
incl
add
add
xor
cmp
add
push
add
add
pop
mov
pop
push
add
sar
cmp
movsl
add
mov
inc
add
jecxz
xchg
mov
jmp
add
add
dec
outsb
mov
jb
pushl
lcall
push
adc
decl
add
or
and
ljmp
push
add
addl
add
mov
add
pop
or
push
add
push
add
and
call
dec
push
pop
or
loope
test
add
add
out
push
add
ds
add
call
sbb
add
mov
push
jbe
push
outsl
pushf
repnz
shl
add
add
inc
add
cmpsl
add
mov
add
sti
fiadds
add
out
push
jecxz
adc
sub
mov
lods
add
addl
std
repz
pop
sub
add
jge
or
inc
add
mov
lahf
mov
pushl
add
stos
push
fwait
loop
dec
sbb
imull
jae
decl
notb
inc
add
es
addl
add
cmc
outsb
gs
pop
pop
mov
lds
cli
in
and
stos
fsubs
add
das
loop
cwtl
mov
add
out
jb
pushl
out
mov
jne
add
add
jp
imul
ljmp
adc
lcall
inc
add
jecxz
pushf
jnp
mov
outsb
ficomps
add
test
jb
call
scas
push
aaa
icebp
mov
mov
clc
mov
and
call
jle
cmp
and
mov
cmpsb
add
add
addb
add
pop
pop
add
inc
add
add
lock
add
outsb
pop
repz
fcom
jp
call
cmpsl
add
add
jge
mov
push
add
and
addl
add
dec
outsl
mov
movb
jge
or
mov
add
test
cmpsb
add
ret
add
add
jbe
add
mov
lret
xor
imul
xor
lcall
add
pop
sbb
dec
inc
add
stc
mov
mov
fcomip
shll
aad
frstor
add
dec
xor
decl
mov
adc
ljmp
mov
addb
arpl
ljmp
cltd
push
add
movb
mov
add
inc
add
add
lcall
and
jo
call
test
stos
jl
popa
add
and
scas
sub
pop
mov
je
addb
add
stc
sbb
rolb
add
add
jmp
loopne,pn
cmp
add
int
and
jmp
add
add
mov
add
sbb
cmpsl
add
std
dec
mov
jo
call
dec
ja
mov
add
push
add
ljmp
add
push
movb
lcall
and
inc
add
cli
mov
pop
rcl
mov
jb
fisttps
mov
jns
add
add
jl
add
aad
adc
lcall
js
rolb
push
dec
xchg
inc
add
out
push
mov
js,pn
add
fisubl
pop
mov
add
jmp
or
mul
add
mov
jecxz
jo
pushl
add
sub
cmp
pushl
aas
add
shlb
pop
fadds
add
aaa
sbb
add
add
jecxz
ds
les
xor
decl
add
clc
push
dec
pop
add
cmp
xchg
or
addl
add
pop
imul
lcall
ljmp
add
pop
stos
xchg
inc
add
add
popa
add
pusha
add
jns
fwait
test
add
mov
leave
mov
cli
add
cld
xlat
mov
int3
les
mov
add
and
mov
push
add
dec
outsl
lahf
ds
popa
add
stos
incl
xchg
sub
add
mov
daa
add
fisttpl
add
decl
jg
jp
add
add
bound
call
xor
call
add
add
jno
pushl
add
fnstcw
flds
roll
add
add
add
sahf
pushf
jmp
roll
fs
and
pushl
test
xchg
or
add
lret
dec
mov
add
jg
cmpsb
add
add
add
xor
call
dec
fistpll
jo
call
add
xor
add
mov
add
addl
push
mov
add
flds
xchg
and
adc
cmpsl
add
test
nop
add
sub
push
add
jge
jno
sti
xchg
in
icebp
sbb
mov
mov
add
test
xor
push
shlb
call
jl
lcall
add
sub
cld
addl
std
pop
inc
add
or
test
es
inc
add
int3
push
add
jne
iret
push
dec
fisubl
add
outsl
adc
lcall
clc
les
rol
add
add
sub
mov
rcr
xchg
xlat
mov
add
lods
add
add
add
mov
add
or
insb
mov
add
pop
addl
add
je
add
add
mov
test
add
pop
add
add
add
aam
add
push
movsb
add
mov
add
jae
jmp
and
call
add
dec
sbb
push
add
xchg
hlt
and
in
xchg
icebp
popf
add
ljmp
add
sub
cmp
sahf
add
ljmp
xchg
stc
jb
pushl
xchg
cltd
pop
jmp
add
xor
mov
std
mov
sbb
sahf
xchg
pop
push
and
call
add
cmp
add
add
decl
add
pop
movb
xor
xlat
pop
inc
add
sub
pop
add
decl
push
scas
imul
ljmp
les
lods
jne
into
mov
add
add
pop
scas
fdivs
add
negl
push
add
inc
add
cwtl
aaa
and
aaa
inc
add
addl
cs
jmp
inc
add
sub
cwtl
add
push
cmp
mov
xor
call
fs
std
dec
cmp
add
adc
xchg
movl
add
ljmp
fdivr
adc
pushl
incl
arpl
pushl
rcll
shlb
decl
fists
xchg
mov
lcall
fadd
add
data16
push
add
scas
pop
jl
add
sbb
xor
js
add
mov
incl
mov
sub
mov
ret
add
add
add
mov
lcall
add
incl
add
push
pop
not
or
lcall
pop
add
dec
aas
stos
dec
daa
add
add
decl
pushf
xor
call
add
xlat
lcall
xchg
test
mov
out
bound
pushl
add
movl
xchg
js
push
add
sub
loop
fidivrs
fdivrl
mov
xchg
ljmp
pushl
int
add
addl
add
pop
data16
aas
push
shrl
xchg
popf
push
filds
call
or
add
xor
push
push
add
pop
or
add
loopne
push
add
fbstp
sub
inc
add
or
les
jnp
jp
xor
add
lock
lods
lcall
cwtl
pop
idiv
mov
add
mov
add
mov
add
mov
outsb
iret
mov
incl
ja
int3
jns
add
and
stc
popf
dec
push
pusha
add
xchg
cmpsb
add
cmp
lcall
mov
or
psubb
call
mov
add
jmp
mov
mov
fstpl
add
jmp
add
mov
cmc
pop
addl
dec
push
add
add
add
mov
sbb
inc
add
xor
add
add
push
push
or
dec
repz
pop
and
lcall
inc
add
enter
add
xchg
dec
mov
roll
fsubl
incl
add
adc
incl
inc
add
add
adc
lcall
out
insb
psubd
testl
cli
inc
add
incl
cmc
pushf
movsl
add
outsb
mov
roll
add
dec
or
push
add
inc
add
sub
scas
mov
add
add
inc
add
mov
dec
outsb
test
jmp
add
call
push
add
mov
add
push
pop
adc
lcall
add
inc
add
call
out
out
pop
add
les
lret
decl
add
inc
add
mov
jae
push
jp
push
add
xlat
jle
add
shlb
cmc
nop
dec
sbb
add
scas
fcmovb
add
gs
pcmpgtd
mov
add
jl
add
or
in
movsb
add
adc
and
pushl
hlt
push
lods
inc
add
pop
mov
fstpl
dec
xchg
xor
push
loope
les
sub
add
sbb
aas
fdivrl
add
lret
pushl
add
cmp
loopne
inc
add
sahf
mov
incl
icebp
sub
push
addl
arpl
lcall
add
add
mov
adc
dec
cmp
cmp
cli
adc
ljmp
jb
lcall
roll
and
cmp
pushl
add
out
pusha
add
jge
jle
popa
add
jmp
jmp
add
cmp
aad
mov
jmp
sbb
loope
cmp
lods
sarl
addl
cmpsl
add
add
jae
incl
cmp
add
push
add
fcomip
push
mov
pop
lcall
test
or
add
test
and
pushl
decl
add
lcall
pop
jle
clc
movsb
add
daa
add
ljmp
pusha
add
arpl
call
add
or
jle
add
roll
lods
dec
adc
ljmp
add
lret
call
incl
add
pushl
add
and
add
add
push
pop
pop
add
insl
fsubrs
add
fstpt
push
aas
js
faddl
add
push
add
push
mov
ljmp
add
in
push
add
cmp
call
imul
decl
dec
fs
pushf
jg
popf
cmp
les
jge
data16
add
pop
add
lcall
add
fiaddl
fcom
mov
cmp
arpl
pushl
mov
jne
ss
add
push
inc
add
call
cmp
jecxz
cmp
add
cwtl
fldcw
testl
sub
jnp
ret
add
add
add
lcall
or
das
lds
pop
addb
int
jge
or
add
adc
inc
add
jp
add
cmp
lret
ljmp
adc
cmp
addl
or
pop
add
notl
decl
lods
push
add
test
sub
jnp
inc
add
bnd
sub
or
dec
mov
out
test
pop
das
add
mov
das
add
decl
add
push
add
scas
mov
leave
jge
sbb
add
add
add
add
jl
fsubs
add
mov
add
mov
inc
add
stc
leave
lock
add
jmp
dec
jb
ljmp
add
pop
jmp
and
fld
add
jmp
decl
jmp
xchg
and
decl
mov
rclb
lcall
add
add
pop
xchg
idivb
call
mov
repnz
ficoml
je
dec
push
je
add
rclb
add
jmp
movsb
add
sahf
es
add
in
mov
fmulp
jne
add
icebp
pushf
arpl
call
lcall
aad
add
lods
jg
fwait
es
add
add
mov
mov
jne
add
aad
imul
mulb
add
test
jp
aam
xchg
dec
divb
add
adc
push
movb
mov
add
mov
outsb
popf
out
loope
dec
add
jmp
add
add
je
dec
mov
add
dec
in
pop
cwtl
rcrb
xor
call
ljmp
sub
scas
movsb
add
jmp
incl
add
inc
add
or
push
lds
call
mov
add
lahf
adc
incl
add
ret
add
cli
adc
mov
add
loop
cmp
enter
sub
inc
add
jmp
add
dec
int3
push
pop
shll
add
fidivrs
out
cmp
pop
roll
add
cltd
push
addl
rolb
push
add
mov
add
dec
lock
inc
add
push
inc
add
ja
add
add
lods
loope
stos
stos
xchg
mov
sbb
jp
add
and
lcall
faddl
add
cmp
rep
js
xor
fimull
dec
push
add
in
repz
adc
addb
jg
data16
mov
add
enter
rclb
scas
frstor
add
pop
jge
xchg
lods
push
js
lret
add
mov
fistl
add
add
jp
add
add
mov
ja
sar
in
pop
and
add
out
jmp
lret
cs
fiadds
add
sub
push
mov
add
lcall
int3
out
test
rclb
xor
stc
sbb
mov
out
pop
cli
outsb
mov
les
jb
lcall
add
std
mov
lcall
push
mov
add
cli
in
inc
add
sub
mov
add
inc
add
push
push
pop
nop
movsl
add
call
sub
fstps
lock
fld
add
pushl
ja
inc
add
into
dec
push
add
xchg
cmpsb
add
add
call
add
or
std
sbb
add
jne
inc
add
int
pushf
mov
cmp
ljmp
pop
sub
incl
cmp
dec
roll
mov
add
rcrl
movl
add
ljmp
rolb
xchg
dec
adc
inc
add
pusha
add
aas
imul
sahf
dec
sub
test
add
pop
es
add
fiadds
add
dec
fidivl
dec
cmp
add
in
mov
loopne
js
add
decl
add
data16
inc
add
add
push
movsl
add
call
add
rolb
add
push
add
movsb
add
loope
and
call
mov
or
mov
roll
cmp
jmp
outsb
test
pop
mov
out
shlb
add
shll
xor
ljmp
inc
add
add
lcall
xor
jmp
add
jbe
into
sbb
xchg
fisttpl
add
incl
add
mov
add
dec
mov
aas
sbb
inc
add
std
push
cmp
add
sub
add
idiv
mov
add
bound
inc
add
adc
incl
fdivr
rorl
cmp
add
and
jg
add
decl
mov
rolb
stos
xchg
pop
add
push
add
pop
cltd
movaps
xlat
jmp
xchg
loopne
ds
add
add
add
mov
add
dec
test
mov
add
and
inc
add
iret
inc
add
add
inc
add
xchg
jmp
add
add
sbb
dec
mov
decl
cmpsb
add
add
in
add
xchg
push
add
hlt
sub
xor
incl
jmp
femms
sub
add
xor
lcall
out
dec
and
adc
push
mov
add
sub
push
inc
add
xlat
out
jge
add
push
add
pop
or
add
sti
cmp
add
fnstcw
call
add
out
inc
add
and
dec
je
into
jo
decl
add
add
and
decl
call
xchg
and
jmp
out
out
popf
add
decl
xor
pushl
push
add
mov
cwtl
inc
add
clc
addb
cli
cli
sbb
out
pop
aas
js
add
add
add
movb
int
iret
aam
inc
add
add
sub
adc
je
movsb
add
ret
add
movb
repz
pop
ret
add
add
xor
lcall
and
xchg
dec
testb
incl
sbb
jno
call
or
daa
add
push
and
jmp
add
or
sub
jmp
jmp
add
ljmp
add
cmp
addb
dec
lahf
jb
pushl
incl
incl
mov
add
lock
add
inc
add
add
lods
outsb
jno
ljmp
push
pushf
dec
imul
add
inc
add
or
add
jo
incl
add
mov
add
loope
cmpsl
add
add
add
push
ljmp
xor
push
das
mov
add
push
add
les
push
add
add
add
incl
incl
add
jmp
and
call
mov
adc
add
dec
inc
add
add
decl
sub
mov
arpl
jmp
add
add
cmpsb
add
ljmp
cltd
xor
call
add
dec
and
pushl
add
fdivrp
repnz
xchg
maskmovq
testl
add
sub
push
add
ljmp
add
call
and
ljmp
add
xchg
jg
popa
add
addr16
aaa
in
or
add
in
pop
rolb
add
je
xchg
mov
fisttpll
add
push
adc
cld
outsb
call
lcall
mov
jnp
lods
dec
push
add
push
push
add
push
loop
addb
add
pop
and
out
add
cmp
pop
rdtsc
add
shlb
add
filds
add
sbb
mov
pushf
xor
call
add
rclb
add
sahf
mov
add
out
dec
sub
cmp
add
rcrl
mov
add
jbe
mov
add
bound
ljmp
mov
add
decl
jmp
hlt
pandn
add
jmp
add
dec
es
add
cmp
mov
or
add
call
fdivrl
sahf
jno
pushl
push
pop
add
xchg
lret
add
lcall
popf
fdivs
jmp
add
aad
add
push
cmp
popf
or
dec
lcall
enter
mov
mov
sbb
xchg
aam
out
push
inc
add
mov
add
and
insb
adc
incl
sahf
fidivs
stc
roll
movsl
add
add
lahf
iret
jl
sti
push
add
sbb
cmpsl
add
stos
repz
movsl
add
roll
add
insb
cmp
pop
add
jbe
add
repnz
loopne
ds
add
mov
dec
hlt
mov
lods
jp
adc
pop
dec
test
pop
icebp
mov
xchg
arpl
mov
cmpsb
add
cmp
fdivl
shll
call
jmp
nop
test
mov
add
jmp
les
nop
popf
in
je
int3
and
sbb
addl
loop
jmp
add
add
js
add
fldl
addl
aas
mov
aas
mov
pop
cmpsb
add
add
add
jmp
jge
cmpsb
add
add
add
int3
out
in
out
int3
add
add
js
xchg
inc
add
inc
add
sub
call
jmp
add
add
jmp
add
jmp
cltd
xor
push
push
add
push
cmp
push
mov
add
call
les
pop
imul
add
mov
cmp
add
pop
dec
imul
sub
add
push
add
add
fisttps
nop
xchg
dec
arpl
ljmp
add
add
mov
sbb
sbb
pop
lea
add
ljmp
add
add
add
aam
movb
popf
stos
add
mov
addb
add
inc
add
sub
mov
xchg
jle
popf
faddp
add
add
add
push
jge
outsl
inc
add
and
dec
mov
mov
jno
inc
add
pop
out
xchg
push
add
pop
cs
movb
add
add
incl
add
xchg
mov
movb
adc
lcall
jp
movsb
add
pop
sub
pushl
add
xchg
aaa
mov
in
fnstcw
sbb
add
lcall
add
add
cmc
clc
sub
pop
mov
ljmp
pop
add
ljmp
mov
jmp
add
pop
dec
bound
dec
mov
pushf
mov
sbb
pop
sub
in
ja
in
iret
mov
das
imul
add
dec
add
call
repz
xor
mov
movsb
add
add
xlat
cmpsl
add
xor
incl
sbb
sti
addb
idivb
push
add
push
add
inc
add
add
add
ljmp
xchg
imul
inc
add
jecxz
push
lret
rorb
sub
icebp
xor
out
inc
add
ret
add
add
lods
fsubrs
pop
bound
lcall
push
add
jle
jle
xlat
jg
add
mov
call
addb
add
rcll
add
add
addl
in
out
inc
add
aad
mov
cwtl
mov
inc
add
adc
push
das
push
add
data16
push
add
testb
adc
dec
in
adc
call
lcall
add
and
incl
add
decl
jae
ljmp
mov
jmp
add
adc
movsb
add
add
xor
jmp
add
fistpll
add
add
add
push
popa
add
aam
lods
sbb
nop
lret
loopne
jmp
sub
add
testl
or
add
in
mov
arpl
ljmp
test
and
cmp
add
scas
femms
in
and
call
add
test
inc
add
jp
mov
add
add
lahf
iret
xlat
cmp
hlt
adc
jmp
dec
mov
dec
cltd
push
add
jo
pushl
add
not
mov
out
dec
xor
dec
ds
xchg
inc
add
add
jnp
addl
test
in
sbb
mov
jg
push
add
es
and
dec
clc
xor
les
mov
push
cmp
add
add
sbb
xor
jmp
ljmp
int3
and
pushl
add
jmp
ret
add
ret
mov
add
pop
push
sub
sub
or
xchg
push
add
clc
inc
add
add
mov
add
add
mov
add
adc
add
add
dec
ljmp
xchg
pusha
add
xor
jg
test
inc
add
add
adc
add
add
aad
sub
and
cmp
add
shlb
and
incl
ficoml
add
call
sbb
or
test
lods
jae
decl
add
adc
ljmp
ljmp
pop
or
test
addb
add
add
fisubrl
std
stc
pop
xor
in
jo
lcall
add
xor
mov
int3
push
and
push
inc
add
cli
adc
xchg
mov
cli
adc
hlt
mov
lahf
pop
gs
sub
cmp
jle
push
add
dec
xor
decl
or
xchg
pop
push
jmp
add
xor
mov
jmp
call
push
stos
ret
add
cmp
add
pushl
mov
xchg
mov
cmp
in
gs
mov
add
fisubs
add
add
push
add
adc
call
add
dec
inc
add
negl
mov
add
sub
data16
dec
mov
dec
push
add
imul
xchg
and
incl
dec
out
jae
incl
pop
in
add
call
jmp
addl
add
incl
add
addl
and
idiv
nop
or
push
or
xchg
jecxz
dec
lock
lcall
add
push
fidivrs
adc
mov
or
les
add
adc
decl
movsl
add
les
inc
add
add
inc
add
sub
decl
mov
mov
dec
insl
clc
mov
add
add
add
inc
add
mov
pop
mov
mov
cmp
enter
xor
in
shrb
mov
jb
pushl
add
add
cmp
aas
push
add
mov
dec
fxch
jns
das
jnp
add
ljmp
mov
add
cwtl
inc
add
lock
in
add
add
push
add
add
push
rolb
inc
add
aas
push
xor
ljmp
call
mov
sarl
data16
addb
stos
insb
mov
add
enter
pop
add
incl
cmp
add
insl
xchg
mov
mov
fwait
sti
clc
inc
add
cmpsb
add
stc
xor
incl
add
inc
add
mov
xchg
repz
test
adc
add
sbb
jmp
pop
mov
sub
stc
lods
test
add
outsb
loope
push
add
jns
push
add
sahf
shrb
into
bound
incl
rcrl
add
mov
jmp
add
addl
rcll
popa
add
sub
adc
push
insl
jb
inc
add
pop
add
lahf
or
push
adc
decl
cmp
add
int
add
xchg
jns
dec
addb
jl
lret
adc
decl
arpl
jp
pop
add
add
push
add
pop
fdiv
fmull
pusha
add
sahf
pop
add
pushl
stos
xchg
repnz
push
push
test
push
shrb
jb,pn
push
or
add
add
xchg
fisttps
xchg
arpl
call
or
add
xchg
dec
fldenv
jp
add
jmp
lcall
add
clc
imul
jle
repz
pushl
lcall
rolb
add
add
mov
in
mov
movsb
add
pushl
incl
add
jmp
add
call
sahf
cmp
cmpsl
add
aam
add
ss
jle
add
add
clc
les
iret
lahf
dec
mov
add
xor
lcall
cwtl
cmp
and
or
mov
add
mov
add
add
lea
add
push
add
rclb
add
sbb
add
xchg
outsl
popa
add
stos
fmuls
adc
les
cmp
pop
sub
cmp
popa
add
jb
inc
add
pushf
insl
add
add
add
ds
rolb
add
cwtl
fidivrs
mov
mov
jge
or
add
dec
arpl
jmp
incl
mov
xor
add
loop
roll
add
cmpsl
add
push
add
add
jmp
push
lods
outsb
or
mov
ljmp
test
rcl
rcrb
iret
xor
pushl
adc
add
pop
mov
movsb
add
jnp
xor
js
jae
pushl
aas
sub
add
out
mov
add
dec
hlt
imul
inc
add
stos
jnp
nop
xchg
loopne
les
cmp
and
les
jae
call
add
les
jnp
roll
dec
aaa
popf
sub
mov
fidivs
add
and
call
cld
cs
fistpl
pushl
sbb
movl
inc
add
data16
add
cmp
incl
cmp
test
cmp
hlt
xchg
lret
xacquire
lret
add
call
cli
loop
xlat
jecxz
xor
ljmp
and
add
add
mov
jmp
lret
stc
push
push
jae
jmp
mov
and
ljmp
add
negb
rorl
dec
ja
ret
and
inc
add
or
or
decl
jmp
add
in
inc
add
add
dec
jmp
loope
pop
in
mov
loope
clc
inc
add
and
push
add
jmp
sub
in
jecxz
sub
add
nop
movsl
add
xchg
ljmp
mov
lods
adc
ljmp
jmp
dec
inc
add
cmp
icebp
inc
add
add
sbb
adc
ljmp
fnstcw
call
clc
jecxz
inc
add
addl
out
imul
push
xor
call
sub
jmp
add
push
lods
or
inc
add
addb
add
mov
jmp
add
add
pop
add
jmp
out
push
add
mov
add
nop
fisttps
int3
popa
add
ss
xchg
fimull
dec
cmc
add
lcall
sbb
das
outsb
movl
out
add
addb
jns
inc
add
jge
test
jns
dec
adc
add
pop
xor
jne
push
inc
add
pop
lret
aad
dec
xchg
movsl
add
pop
and
dec
ss
sbb
add
les
movb
and
add
ret
add
add
jmp
rcll
iret
in
cwtl
addl
jge
jl
repz
mov
add
fcomps
incl
add
lcall
lahf
mov
cmc
in
ret
add
ljmp
cltd
xchg
test
in
xchg
shll
add
adc
lcall
inc
add
inc
add
mov
fcomp
movl
scas
shrl
add
pop
add
jmp
add
das
aaa
lods
xchg
fistpl
inc
add
add
fisubs
ds
mov
mov
xchg
ss
addb
add
add
incl
mov
mov
loopne
mov
inc
add
add
aas
out
addl
push
add
xor
add
popa
add
mov
incl
push
add
loop
leave
mov
mov
repnz
test
int
mov
testl
add
repz
jnp
add
add
aad
stc
and
fbstp
incl
pop
xor
push
add
add
arpl
lcall
jmp
add
add
add
inc
add
aad
call
xor
jmp
repnz
imul
test
lret
add
sbb
xchg
cmp
add
int3
ret
add
pusha
add
push
lahf
mov
xor
jmp
shrl
outsl
jbe
add
lret
lcall
aam
inc
add
mov
xor
clc
push
lods
out
in
roll
mov
jmp
insl
mov
sub
push
add
repz
push
add
popf
add
incl
add
imul
sbb
add
movsl
add
push
add
ret
outsb
or
lds
inc
add
lret
push
jo
jle
add
push
add
sub
add
push
mov
add
push
mov
add
push
sub
dec
inc
add
lcall
cmp
pop
mov
add
sbb
add
dec
xor
lcall
add
pushl
jbe
pop
lret
or
add
dec
dec
xchg
pop
lret
cmpsl
add
xchg
adc
ja
add
fistpll
out
mov
add
nop
mov
aas
mov
mov
movl
add
push
enter
nop
add
jmp
movsl
add
add
pushf
jmp
sub
std
lds
fidivrl
add
aam
mov
sahf
adc
call
lods
push
add
outsb
roll
outsl
add
aam
add
dec
fwait
cmp
add
repz
and
jnp
push
push
add
aas
call
mov
add
leave
fisubrs
mov
out
jo
jmp
sti
shlb
call
mov
add
into
sub
add
jp
add
std
data16
incl
add
or
xor
ljmp
sub
pop
push
fwait
push
push
loop
dec
xchg
sbb
decl
rolb
add
push
add
cmp
inc
add
add
cwtl
repz
sbb
add
dec
jmp
push
add
mov
jnp
mov
in
jns
icebp
das
icebp
lret
lret
mov
enter
filds
leave
or
inc
add
mov
scas
add
call
call
add
insb
mov
add
push
int
add
ficompl
pop
add
and
call
add
test
out
bound
push
addl
add
cwtl
xchg
das
xor
incl
incl
add
inc
add
popf
push
adc
push
add
aas
sbb
nop
push
add
jp
pop
add
icebp
mov
lahf
mov
add
add
xor
mov
pushl
loope
xlat
mov
add
jmp
add
rcrl
or
xor
incl
add
mov
cmp
test
test
add
jbe
addl
xchg
jg
in
and
push
lock
add
dec
mov
inc
add
cld
in
push
ljmp
fisttps
or
test
cmp
mov
ja
jmp
pop
cmp
mov
add
aam
add
add
xchg
xor
incl
mov
insb
jecxz
xchg
jno
jmp
add
scas
nop
mov
mov
add
call
add
loopne
sub
pushl
out
movsb
add
es
scas
aaa
out
push
add
faddl
add
inc
add
sub
cld
call
pushf
cs
sub
ljmp
push
add
adc
add
mov
add
add
pushl
add
inc
add
add
fnstcw
shlb
add
fidivrl
jle
add
push
sti
mov
adc
ljmp
add
mov
in
mov
adc
pop
loope
adc
jmp
add
incl
add
push
mov
scas
adc
movl
pop
inc
add
cmp
add
cmp
pop
dec
sti
movsb
add
out
pusha
add
into
xchg
inc
add
jecxz
enter
addl
mov
aas
push
jmp
add
jl
popf
jno
pushl
jp
jecxz
add
jmp
addl
add
cmp
or
add
out
arpl
call
mov
out
iret
mov
sti
nop
pop
jo,pt
mov
add
pop
sub
sbb
add
mov
inc
add
jmp
pop
test
add
add
add
in
scas
in
daa
add
fwait
addb
add
push
add
jecxz
jae
decl
movl
rolb
add
add
lods
addl
add
dec
or
add
add
mov
adc
pop
das
pop
jle
cld
pop
add
decl
pushl
jmp
inc
add
add
add
call
stos
test
into
mov
add
jmp
ljmp
jge
mov
add
data16
add
mov
movsb
add
add
pop
jle
cmp
add
and
popf
ja
xchg
std
into
jo
mov
add
sbb
jmp
add
cmp
push
dec
aaa
xchg
vmwrite
push
cmp
data16
add
insl
pop
decb
cwtl
push
add
add
cmp
jg
sbb
daa
add
dec
xchg
inc
add
fimuls
add
add
divl
add
fcom
and
incl
arpl
jmp
add
xchg
testb
incl
lcall
cli
push
mov
add
decl
insb
jae
lcall
roll
sbb
cs
cmp
out
data16
add
add
adc
insl
cmp
fistl
add
xlat
cmp
add
imul
lcall
add
jmp
add
cli
daa
add
add
call
add
aam
cmp
push
add
data16
bound
call
call
clc
lods
jle
push
add
dec
stos
outsl
mov
aad
mov
push
bound
jmp
add
cltd
inc
add
in
jnp
add
inc
add
add
dec
adc
out
sub
add
stos
out
bound
jmp
inc
add
add
push
add
in
and
jmp
mov
add
outsb
in
incb
add
add
notl
decl
cmp
add
jmp
cmp
add
jnp
add
sub
add
add
push
add
jmp
push
add
mov
pop
fwait
jecxz
or
pop
lock
ret
add
mov
fs
mov
push
add
push
sbb
add
and
call
int3
rorl
push
add
mov
sub
xor
mov
xchg
iret
in
mov
das
mov
add
mov
mov
sahf
pusha
add
data16
ljmp
out
mov
sbb
add
xchg
xlat
je
loopne
mov
pop
rol
add
adc
incl
add
iret
repz
jmp
add
jno
lcall
add
xchg
popa
add
cmp
add
cmp
add
add
add
mov
xor
fsubrs
add
into
jo
pushl
ljmp
or
add
dec
pushf
or
in
mov
sbb
addl
add
add
incl
lcall
out
imul
jnp
movsl
add
fmull
loope
hlt
mov
in
movl
std
icebp
dec
adc
sbb
nop
nop
cmp
pop
adc
jmp
xchg
and
pushl
dec
mov
push
add
outsb
inc
add
cmp
adc
call
sub
inc
add
mov
pushf
fisttpll
decl
ljmp
add
add
lcall
dec
shl
add
mov
lret
add
jmp
add
icebp
cmpsb
add
inc
add
out
jge
nop
ja
mov
jp
dec
and
pushl
add
mov
add
daa
add
push
and
lcall
jmp
add
lcall
jne
add
test
divb
mov
add
sahf
into
xor
pushl
jnp
lcall
add
ret
add
add
nop
js
fisubl
add
movl
call
bound
ljmp
jp
aam
in
adc
call
pop
fsubs
call
outsl
xchg
rcll
cld
xchg
hlt
add
add
lcall
cmpsl
add
add
adc
jo
mov
insb
or
shr
repz
inc
add
cwtl
mov
sbb
mov
cld
lds
arpl
jmp
add
aaa
inc
add
sub
add
cmp
push
and
ljmp
pop
inc
add
inc
add
loop
and
fwait
mov
add
pushl
add
cwtl
pop
in
dec
add
mov
lcall
pushl
add
das
cmpsb
add
hlt
push
add
cli
lds
data16
mov
cmp
add
cltd
clc
inc
add
fisubs
add
jno
incl
fstl
scas
pop
push
mov
data16
add
mov
cmp
je
add
cmp
add
decl
icebp
neg
popa
add
cmc
stc
js
add
negb
imul
fwait
push
adc
ljmp
movsl
add
std
mov
add
sub
add
pmulhuw
mov
adc
dec
sbb
imul
and
jmp
add
adc
inc
add
add
jnp
add
mov
cld
fsts
movl
mov
or
call
or
cld
aaa
arpl
pushl
jmp
add
fisubrl
and
cld
fcmovu
cmp
add
and
jmp
call
add
dec
mov
add
fucom
add
dec
add
adc
call
inc
add
add
cmpsl
add
and
call
test
cmp
mov
mov
std
mov
add
xchg
js
sti
mov
mov
or
je
add
add
inc
add
loop
add
incl
dec
cmp
into
cs
add
lcall
ret
add
mov
mov
add
inc
add
cmp
add
mov
call
mov
pop
pop
xchg
mov
add
add
dec
ja
int3
mov
or
bound
ljmp
xchg
sub
add
jp
add
cmpsb
add
push
test
movb
add
movsb
add
mov
add
outsb
pushf
cltd
stc
fsubs
jg
add
mov
sbb
dec
xor
add
and
add
xchg
pusha
add
mov
jl
dec
rorb
add
add
and
jno
mov
aam
movl
add
je
shlb
adc
mov
jmp
add
xchg
cmp
lcall
mov
loopne
inc
add
jmp
add
pop
cmp
add
xor
jmp
add
add
fucom
add
fadd
add
jmp
shrb
sub
pop
inc
add
or
add
xor
pop
add
pop
mov
mov
add
and
add
incl
pop
or
scas
xor
push
add
mov
add
sub
add
jge
add
imul
add
pop
pop
cli
into
inc
add
jns
add
or
call
mov
lret
add
scas
das
iret
xor
ljmp
in
pop
test
call
or
add
mov
decl
sub
fmuls
dec
and
call
lret
pushl
add
pop
add
mov
dec
sbb
add
cmp
add
rcrb
call
js
outsb
xchg
pop
bound
jmp
add
add
add
jbe
add
add
iret
jmp
add
mov
mov
js
jbe
nop
bound
incl
add
pushl
ret
add
int3
and
call
add
aas
movsl
add
inc
add
mov
lcall
pop
mov
push
add
call
add
mov
adc
int3
fnstenv
lcall
dec
mov
xor
incl
fstpt
div
mov
adc
aas
out
jl
add
pop
jne
loop
or
push
add
pop
add
dec
mov
scas
sti
cwtl
or
push
xor
ljmp
enter
aad
lea
jnp
lcall
sarb
or
add
xchg
jbe
add
add
mov
inc
add
pop
scas
inc
add
fwait
stos
fists
add
les
nop
inc
add
xor
das
aam
add
mov
incb
inc
add
fisttpl
add
xor
fsubr
lea
or
rorl
mov
popf
sbb
dec
outsl
add
cmp
std
rolb
scas
push
add
and
fcmovu
dec
popa
add
cmc
push
add
loope
out
push
add
add
or
dec
test
popf
les
addl
sbb
add
punpckldq
ljmp
lret
loopne
mov
out
addb
xchg
inc
add
mov
addl
hlt
pop
sbb
add
test
push
std
adc
add
ret
add
add
add
popf
mov
pop
and
test
xor
dec
popf
rcll
pushl
icebp
in
rorl
out
mov
pop
add
add
add
jmp
add
push
add
dec
out
mov
add
add
repz
movsb
add
add
nop
outsl
loopne
xchg
sbb
jno
inc
add
addb
add
sbb
add
jecxz
sbb
adc
shl
add
rcll
inc
add
lret
inc
add
add
test
adc
sbb
add
decl
insb
leave
mov
jno
pushl
jecxz
push
add
incl
lcall
push
add
add
push
add
and
mov
incl
add
mov
add
fwait
cmpsb
add
add
add
mov
jecxz
pop
add
jl
add
xor
incl
decl
adc
paddusb
and
decl
add
sbb
pop
lcall
clc
cld
add
jmp
add
lret
cs
shrb
adc
incl
in
ffree
add
sbb
add
and
lcall
sbb
xchg
jl
push
int3
add
incl
xor
add
fnsave
add
push
add
lds
jb
jmp
in
sbb
in
inc
add
and
jo
mov
gs
mov
mov
out
xlat
shlb
add
pop
movsl
add
add
and
incl
mov
add
dec
push
add
addr16
add
enter
in
aam
pop
shrl
push
loope
aad
add
in
test
or
ret
add
ljmp
inc
add
add
add
add
call
xor
lcall
and
call
add
sub
mov
add
sub
fimull
cld
iret
test
add
fcompl
call
add
lds
addl
add
popf
cmpsl
add
pushl
lcall
add
icebp
movsb
add
xchg
mov
add
push
add
jmp
pop
xchg
das
cmp
pop
add
enter
incl
push
add
lods
in
icebp
jo
incl
mov
add
cmp
add
faddl
out
rcr
jmp
mov
add
jne
jl
or
add
ljmp
das
xor
incl
add
dec
xor
pushl
call
cli
pop
addb
add
fwait
sub
xchg
dec
jl
add
mov
mov
dec
scas
popa
add
std
ss
add
ss
mov
ret
add
shlb
ret
adc
decl
add
mov
add
ja
cmp
imul
add
in
test
add
jmp
add
or
fdivs
add
push
xchg
push
add
ja
add
add
xor
mov
scas
pop
pop
push
stos
or
inc
add
and
ljmp
arpl
lcall
inc
add
dec
sub
xchg
lock
pop
test
add
in
iret
dec
jns
add
add
sarb
add
ja
aam
xor
jae
incl
sbb
lds
push
das
cmp
enter
add
call
add
iret
int
cmp
push
add
add
add
mov
addb
and
call
outsl
ljmp
add
addl
add
add
add
out
imul
jmp
add
loop
jns
add
xchg
addb
add
and
decl
adc
ds
pop
cli
add
add
mov
idiv
into
mov
add
movsl
add
mov
add
gs
mov
or
and
call
data16
sbb
decl
mulb
pop
dec
sar
popf
xchg
adc
mov
mov
add
mov
pushf
ljmp
sub
add
pushf
cmpsl
add
int3
ljmp
sbb
add
add
ss
jns
cli
inc
add
add
pushl
add
jl,pt
test
cld
data16
inc
add
into
sbb
add
popa
add
in
and
ljmp
mov
push
inc
add
les
jp
add
add
add
and
out
dec
jae
jmp
xchg
sub
push
std
push
add
mov
pop
pop
lret
jp
adc
test
pop
jno
ljmp
and
decl
popf
jae
jmp
addl
jae
ljmp
addb
adc
add
out
ffree
add
add
sbb
incl
jnp
add
shll
decl
add
inc
add
fildl
add
xchg
add
and
lcall
decb
filds
adc
add
int
add
movb
sbb
xchg
rolb
sub
add
out
insl
rolb
push
pop
les
sub
xchg
mov
jns
dec
push
add
add
lcall
add
add
rcl
jbe
adc
decl
insl
inc
add
fstpt
add
call
mov
popa
add
pop
decb
or
add
addb
add
jmp
pop
int
add
inc
add
fstpl
add
mov
add
add
add
jmp
sbb
cld
push
lea
add
and
js
and
ljmp
out
jb
mov
rorb
ljmp
add
cmp
mov
add
call
add
mov
add
add
bound
push
mov
leave
push
shrb
push
rcll
inc
add
add
adc
lcall
test
add
sbb
add
sbb
pop
cmpsb
add
movsl
add
jge
add
add
push
add
scas
dec
cs
xor
incl
add
hlt
repz
aaa
roll
add
add
mov
sub
add
idivl
addl
add
sbb
jo
jmp
mov
add
aad
cmp
daa
add
popl
out
or
add
push
add
inc
add
out
icebp
hlt
mov
call
pop
ret
add
or
add
xor
inc
add
add
call
rolb
add
mov
add
mov
sahf
sub
cs
pop
adc
in
adc
jmp
add
cld
enter
ljmp
scas
ss
int
push
add
out
pop
add
sbb
decl
cmp
or
push
and
pop
bound
call
mov
dec
dec
cmp
add
jmp
add
add
push
dec
jg
mov
roll
dec
and
out
or
add
sbb
fldcw
dec
inc
add
add
or
add
incl
jg
movsl
add
pusha
add
lds
mov
jmp
mov
lcall
add
add
aaa
xchg
icebp
jne
aam
xchg
pop
pop
mov
lcall
xchg
rorl
add
call
pop
add
add
xor
jmp
add
incl
decl
mov
cmc
push
add
je
add
mov
push
dec
lds
dec
push
add
add
sbb
add
shlb
fdivrl
lds
xchg
and
inc
add
add
jp
add
leave
data16
add
xchg
sti
dec
jle
jbe
jl
sub
in
xchg
dec
fisttpl
mov
iret
sbb
aad
sahf
xchg
nop
xchg
call
inc
add
neg
sti
xchg
fucomi
popf
mov
into
lds
xchg
sbb
pop
das
mov
movsl
add
loop
inc
add
add
mov
add
into
pushl
add
lret
xchg
and
push
dec
scas
inc
add
jl
mov
add
add
call
call
add
xor
sub
add
mov
add
cmpsb
add
out
adc
pushl
inc
add
inc
add
xchg
and
add
jg
fwait
lcall
pop
shrb
add
ret
add
dec
loope
popf
jge
add
add
ret
stos
notl
sbb
add
add
xor
fsubl
pop
adc
pop
cmp
add
aas
rolb
outsl
adc
ljmp
push
jp
add
adc
mov
leave
dec
dec
pop
ds
cmp
push
add
ficomps
jae
call
into
insb
pushf
mov
lods
in
fwait
sub
roll
push
add
lret
aam
xor
ljmp
inc
add
std
xor
mull
pop
or
dec
adc
call
incl
decl
loop
sti
mov
or
xor
cmpsb
add
xchg
xchg
roll
rolb
add
out
jnp
test
pusha
add
adc
incl
add
cmp
jns
mov
add
xchg
jp
mov
add
decl
jae
inc
add
test
push
roll
mov
pop
push
fnstcw
mov
imul
sub
add
push
add
shlb
push
mov
pop
add
add
jp
pop
adc
push
fcomi
dec
sub
cmp
insl
push
das
pushf
or
xchg
xchg
cmc
addr16
insl
daa
add
lret
lcall
or
add
ljmp
addl
les
arpl
dec
push
push
inc
add
add
les
repz
add
pop
add
add
add
aaa
cwtl
repz
lods
iret
mov
add
inc
add
inc
add
adc
jmp
add
loopne
bswap
fsubrl
inc
add
lods
test
clc
mov
add
jmp
jmp
add
mov
add
fcmovnu
push
add
clc
dec
sbb
sub
add
les
pop
rorb
xchg
push
dec
mov
add
add
mov
add
add
pop
add
ljmp
add
mov
stc
sub
add
mov
int3
or
cmp
push
test
mov
cli
lret
jge
cmp
jg
jne
jo
pushl
add
push
jg
icebp
push
mov
xchg
mov
cmp
push
add
dec
inc
add
fistl
pop
lret
lcall
js
add
adc
add
into
add
into
jl
xor
jmp
add
adc
add
out
ret
add
test
add
addb
sbb
imul
xlat
cwtl
outsb
jbe
je
add
jp
popf
rorl
add
sbb
mov
add
add
pop
bound
lcall
out
pop
pop
add
mov
add
cmp
cmp
sub
out
push
add
xchg
nop
fdivrl
add
add
add
push
add
xor
lcall
mov
or
arpl
mov
in
xor
lcall
mov
and
call
add
decl
adc
jmp
adc
jmp
add
mov
pop
xchg
dec
xor
call
add
addb
mov
jmp
lret
jmp
add
imul
add
int3
ret
add
add
inc
add
add
and
call
add
xchg
xlat
sub
add
add
pushf
ficoml
jecxz
adc
jmp
roll
add
push
xchg
sarl
adc
pushl
add
notb
add
jno
call
in
pushf
xor
add
or
sub
add
lods
aas
les
xchg
repz
add
ret
add
scas
lods
outsb
jne
adc
call
icebp
and
ljmp
pop
divl
out
add
sub
add
popf
add
pushl
decl
fildl
jmp
add
lds
inc
add
xchg
xchg
cwtl
jg
add
push
xor
lcall
aad
add
fsubl
dec
sub
jge
add
jmp
add
incl
xchg
and
mov
add
mov
jecxz
xchg
repz
imul
add
test
xor
lcall
add
sbb
fsubl
add
cld
dec
add
add
sub
jmp
xor
ljmp
mov
ds
add
iret
jp
fidivl
imull
mov
setp
add
pushl
add
arpl
decl
lods
loope
movb
sbb
add
fisubl
add
push
daa
add
add
mov
add
pushl
decl
add
add
insl
in
jle
inc
add
jae
call
stc
push
add
xchg
jnp
add
in
add
data16
add
jmp
add
inc
add
scas
dec
cli
in
pop
sub
into
pop
sub
lcall
xchg
pop
or
add
sbb
adc
dec
mov
add
insl
sub
mov
mov
inc
add
jp
add
mov
fsubl
lahf
in
or
xor
cmpsb
add
add
test
sbb
add
repz
sbb
and
lods
cmpsb
add
addl
inc
add
push
add
pop
xchg
movsb
add
cmp
movb
add
aas
in
icebp
fsubs
mov
push
scas
add
jmp
dec
adc
decl
pop
mov
add
add
add
add
dec
test
add
or
add
add
sarb
xchg
xor
jmp
add
dec
lock
lea
ss
add
inc
add
roll
add
addl
ret
add
inc
add
push
add
lods
mov
add
add
incl
pushl
and
call
inc
add
jmp
add
mov
incl
lcall
or
push
mov
cmp
cmp
flds
jb
jmp
add
add
data16
movsl
add
es
dec
mov
leave
inc
add
insl
jne
add
leave
pop
push
add
shl
add
ficompl
mov
add
add
call
add
dec
xor
jmp
adc
pushl
push
push
xadd
lcall
mov
jb
ljmp
fwait
les
int3
mov
push
imul
sbb
rclb
add
insb
cmp
push
xor
call
push
mov
stc
out
xor
decl
pop
out
or
pushl
add
ret
sbb
add
mov
loope
xor
test
std
lret
xlat
pop
add
push
out
loope
inc
add
lcall
test
mov
pop
and
pushl
mov
call
incl
call
mov
xor
add
leave
mov
inc
add
add
or
add
add
add
xlat
pshufw
jb
incl
data16
add
adc
jmp
decl
cmp
std
xor
jmp
mov
and
mov
call
mov
add
inc
add
icebp
dec
jo
decl
ret
add
into
mov
add
lret
or
ljmp
mov
add
mov
add
mov
mov
cs
cltd
jbe
add
push
cmp
lcall
cwtl
wbinvd
loope,pt
add
add
addr16
xchg
fwait
fwait
push
sbb
or
stos
pop
xor
call
sbb
jmp
ud2
jns
mov
rolb
xchg
mov
add
mov
jg
jl
add
shr
xor
ljmp
cmp
jbe
das
dec
xor
inc
add
add
sti
pusha
add
push
add
insl
sbb
jecxz
xchg
sarl
fucomp
mov
add
xor
jg
add
in
fnstcw
loope
mov
clc
dec
pop
add
lcall
sub
add
inc
add
jbe,pt
add
mov
dec
pusha
add
push
add
push
cmpsb
add
add
mov
data16
add
aaa
dec
fisubrs
icebp
std
in
stos
adc
add
add
lods
pop
add
test
fwait
adc
push
and
jmp
add
shrb
add
popf
sarl
add
std
insb
or
add
add
inc
add
add
add
fs
movsl
add
aas
nop
inc
add
mov
inc
add
movsb
add
add
dec
add
in
inc
add
addr16
inc
add
enter
or
mov
test
push
mov
add
jo
jmp
add
mov
cmpsl
add
add
add
imul
adc
jmp
test
add
jl
add
add
xchg
int
add
add
lea
scas
cmpsb
add
add
inc
add
lcall
add
jecxz
cmp
add
add
addb
add
and
nop
sub
push
add
js
add
xor
pushl
incl
pop
dec
jne
lret
pushf
negb
mov
add
hlt
addb
add
rcrb
scas
out
jbe
sbb
ffreep
add
add
inc
add
cmp
mov
mov
fidivrl
cli
adc
pushl
decl
add
mov
notb
add
aam
push
imul
jns
add
pop
test
mov
add
adc
decl
out
lods
jae
pushl
int3
test
add
add
dec
add
dec
inc
add
addr16
cs
inc
add
call
jne
iret
add
fcomps
add
inc
add
mov
js
add
jp
add
mov
add
out
rcl
adc
call
cmp
out
xchg
sub
cmp
addb
pushf
in
sub
add
lahf
loope
xchg
cmp
xchg
cmpsb
add
add
xchg
dec
push
ss
push
add
mov
mov
add
add
mov
sar
f2xm1
fidivrl
call
lods
imul
imul
pushf
jg
lods
out
or
add
call
outsb
lods
ds
ljmp
xchg
icebp
iret
in
ret
add
add
adc
ljmp
add
lahf
in
xchg
jg
add
cli
sbb
out
fmul
popa
add
xor
add
incl
add
sbb
mov
pop
xchg
addr16
imul
cmp
inc
add
int
mov
testl
inc
add
xor
pushl
push
jae
lcall
pop
imul
add
lcall
jns
testb
imul
add
lds
pop
jae
dec
add
ljmp
add
adc
or
addb
pop
lret
movl
jl
xor
mov
aas
aas
es
sbb
stos
cmp
add
mov
mov
dec
nop
adc
fcompl
lret
mul
add
add
mov
add
rcr
adc
lcall
shrb
pop
mov
add
push
add
mov
cmp
jb
jmp
add
add
inc
add
out
movb
jmp
adc
add
sbb
push
add
add
ljmp
sub
cmp
jle
call
imul
call
fcmovnu
mov
leave
rolb
popa
add
mov
xchg
imul
int3
xor
lcall
outsl
push
xor
fadd
add
outsb
dec
lock
sbb
add
jle
cmpsl
add
in
lcall
add
add
pushl
push
add
cmp
mov
dec
lcall
xor
call
movb
add
aam
pop
add
add
lds
inc
add
xor
add
or
js
mov
or
xor
movsl
add
push
daa
add
add
test
fnstenv
jl
add
pushl
pop
repnz
dec
push
cmp
roll
push
dec
cmp
push
add
shr
insl
inc
add
inc
add
rolb
mov
add
add
addb
add
dec
push
add
add
pop
inc
add
add
adc
ljmp
leave
jo
call
add
insl
add
push
add
popa
add
sub
mov
add
movsb
add
add
ljmp
jle
push
repz
lret
outsl
push
addb
mov
add
aaa
and
add
add
xor
ljmp
fwait
adc
js
add
ljmp
xlat
mov
dec
and
jl
jmp
xor
mov
lods
push
outsl
sub
insb
xchg
jecxz
inc
add
jae
ljmp
add
loope
neg
hlt
ss
cwtl
movl
add
xchg
or
adc
aas
inc
add
add
fwait
xchg
push
mov
add
add
adc
lcall
add
add
jmp
add
loopne
mulb
add
movsb
add
xor
decl
outsb
xor
ljmp
in
push
add
cmp
pop
add
call
and
sbb
xchg
test
jmp
add
sbb
add
add
add
add
data16
lret
cs
in
fwait
push
inc
add
add
test
adc
add
add
sbb
add
add
or
decl
cmp
pop
inc
add
pushl
ljmp
ret
add
icebp
adc
call
add
out
adc
jmp
xor
inc
add
hlt
mov
add
mov
adc
repnz
pop
push
add
call
add
roll
clc
dec
test
call
jne
call
jecxz
mov
dec
inc
add
and
jmp
pop
adc
dec
pop
int
add
out
sbb
ja
testb
jl
out
sub
xchg
addb
sbb
mov
add
and
decl
push
mov
cli
cmp
add
incl
sti
in
jae
push
and
push
or
add
jnp
add
cmc
add
in
ss
xchg
and
jmp
incl
jae
decl
xchg
ljmp
add
mov
add
add
je
ret
add
scas
cmpsl
add
inc
add
sarl
add
ljmp
mov
ret
jl
sub
mov
add
pop
inc
add
addl
rolb
rolb
xor
ficoms
scas
loop
cmp
jmp
ljmp
add
add
filds
mov
lcall
adc
add
cld
js
cmp
ljmp
xor
fstp
pop
add
pop
nop
insl
lcall
out
mov
cmp
mov
add
mov
loop
pop
cs
add
mov
jmp
aas
mov
add
jnp
add
pop
int3
inc
add
sub
sub
mov
add
and
add
add
mov
lock
or
test
sbb
fdivr
leave
sub
js
push
xchg
sub
mov
add
sbb
mov
pushl
add
repnz
add
mov
sbb
add
add
repz
out
in
stos
push
sbb
add
fistpll
mov
mov
int
and
call
add
or
or
cmp
add
lea
or
ljmp
bound
inc
add
rcrb
add
pop
xchg
add
incl
add
and
lcall
roll
leave
dec
fimuls
scas
pop
loopne
or
inc
add
cmp
adc
cmp
sbb
je
jg
inc
add
xchg
sbb
scas
jbe
add
mov
out
xor
clc
push
lods
push
sub
dec
sub
jge
pop
push
roll
mov
mov
and
add
jno
js
mov
clc
cmc
addl
add
push
out
push
add
add
add
mov
add
sbb
add
mov
in
mov
call
sti
aas
mov
movsb
add
test
xchg
and
fisubs
add
mov
cmp
mov
add
aad
add
adc
fisubrl
add
loopne
dec
mov
ss
outsb
add
cmpsl
add
add
pop
add
aas
test
push
shll
add
add
dec
add
sbb
testl
and
sbb
lcall
lcall
imul
lcall
outsb
fistpll
inc
add
mov
sub
lea
push
push
add
je
movsl
add
add
out
push
mov
jp
mov
add
lcall
lcall
pop
push
add
lods
insl
inc
add
adc
incl
popa
add
xor
pushl
or
add
movl
sbb
lcall
testl
sbb
fnstenv
add
rolb
out
out
lea
movb
cli
not
test
ljmp
add
add
jle
adc
cmp
dec
in
ss
sahf
xchg
inc
add
fyl2x
lcall
pop
jge
add
and
ljmp
add
decl
sbb
add
xchg
fimuls
and
mov
add
sarb
add
mov
cmc
inc
add
push
addl
in
jmp
add
add
add
decl
xor
ljmp
mov
call
aad
add
dec
ficoml
daa
add
push
notb
add
daa
add
add
push
add
insb
rolb
add
mov
add
adc
jmp
jmp
fadd
add
daa
add
mov
add
add
arpl
jmp
leave
push
add
imul
cmp
incl
push
add
sbb
rorb
roll
in
incl
lods
pop
movb
and
ljmp
add
rorl
add
mov
sti
add
pop
in
dec
mov
out
mov
add
imul
test
push
xchg
adc
decl
and
cmp
jmp
add
pop
jno
fldenv
dec
ret
add
pop
or
mov
hlt
aaa
or
add
add
dec
mov
into
and
jmp
add
add
decl
add
fistl
lcall
add
in
sub
cmpsb
add
mov
ret
add
jmp
pop
cmpsb
add
add
mov
pushl
push
sub
sbb
inc
add
mov
and
jmp
dec
xchg
les
inc
add
add
adc
jmp
add
push
add
mov
mov
out
mov
addb
dec
ljmp
mov
pop
mov
add
add
jno
ljmp
dec
push
sub
ljmp
call
pop
cmp
adc
call
mov
out
pop
or
and
or
pop
popa
add
lcall
pop
push
or
xchg
outsb
pop
add
outsb
cmc
pop
je
jns
add
movb
add
loop
aas
lahf
outsl
inc
add
xor
call
repnz
imul
jg
mov
add
incl
add
jne
mov
cmp
add
movsb
add
imul
add
in
pop
clc
mov
push
mov
and
mov
adc
cli
mov
incl
xchg
lds
mov
add
fdiv
and
add
push
inc
add
pop
add
insb
mov
call
push
pop
imul
xor
testl
jmp
or
lods
or
decl
dec
lock
sub
stc
and
pushl
stos
pushf
dec
cwtl
cmp
add
add
fists
and
mov
push
addb
sub
add
mov
inc
add
xor
add
sbb
cwtl
ds
decl
leave
mov
int3
inc
add
aaa
cmp
into
lods
ljmp
aaa
test
push
cmp
aaa
inc
add
loopne
in
mov
clc
fiadds
in
mov
add
add
and
pushl
ss
in
add
ljmp
sbb
add
insl
push
adc
jmp
add
shlb
hlt
bound
call
add
or
and
decl
scas
mov
add
rcrb
lea
jmp
add
mov
jecxz
stos
fsubl
mov
add
pop
xor
call
nop
test
imul
addb
pop
aas
pop
loopne
popf
inc
add
ja
clc
ret
add
std
xor
jnp
mov
fdivrs
enter
sarb
addl
add
or
pushf
or
inc
add
add
nop
inc
add
jb
lcall
push
cltd
xchg
mov
add
add
add
mov
and
ljmp
add
cmp
jmp
sahf
stc
jo
jmp
add
cmpsb
add
xchg
sub
add
pushf
mov
lods
imul
adc
add
jmp
add
mov
aaa
pop
inc
add
add
add
add
decl
xchg
roll
add
pop
add
das
out
pushf
daa
add
add
xor
sub
cmp
pop
dec
mov
add
bndldx
add
lret
mov
add
jo
sti
das
leave
addb
sti
lds
negb
add
and
mov
add
test
mov
mov
outsl
je
decb
add
ret
add
add
add
inc
add
push
mov
mov
and
aaa
jp
sbb
mov
insl
push
add
bound
decl
add
jmp
lcall
xchg
push
add
adc
mov
jae
incl
add
cmp
std
addl
push
add
movb
add
les
and
call
cmc
pop
xchg
in
mov
dec
jle
cmp
jmp
add
add
rcrb
ret
shlb
add
call
pop
scas
pop
xchg
jns
add
add
mov
testb
jmp
add
shll
fisubl
movl
add
arpl
jmp
add
mov
insb
push
add
sti
push
sub
jle
imul
mov
cmc
je
add
and
call
data16
fstl
fucomip
push
add
or
lock
jle
sub
or
push
xchg
addl
loopne
popa
add
add
cltd
sub
add
pop
xchg
lods
ret
add
add
roll
add
add
fiadds
inc
add
mov
push
add
test
adc
mov
call
jl
dec
ss
cmp
mov
adc
dec
dec
jge
xchg
cmp
dec
mov
xchg
leave
shll
pop
fdiv
roll
mov
add
divb
add
jne
mov
mov
clc
push
out
addb
mov
mov
enter
je
add
cmp
pushl
add
int3
cwtl
add
setge
adc
lods
ret
add
jl
add
jmp
repz
jmp
cmp
add
inc
add
mov
add
xor
call
or
repnz
addb
popa
add
sbb
xor
clc
lea
ds
cmp
add
test
cwtl
int
add
cmp
sbb
in
xor
movsl
add
jle
test
inc
add
add
cmp
cmpsl
add
stos
push
adc
in
daa
add
out
cs
and
decl
repnz
loop
sbb
add
pop
ret
add
call
inc
add
xchg
pop
popf
mov
rolb
push
add
fwait
movb
jns
pusha
add
adc
lcall
inc
add
lock
ds
xchg
bound
sti
test
pop
pop
add
add
incl
add
add
inc
add
inc
add
addb
add
outsb
add
xor
lcall
add
dec
and
jle
icebp
addb
jge
sbb
add
add
hlt
pusha
add
sub
mov
hlt
and
call
and
call
push
add
inc
add
aam
dec
movsb
add
add
or
lcall
mov
jne
add
inc
add
push
push
add
jmp
add
pause
mov
xchg
xor
decl
aaa
inc
add
xchg
insl
aad
pop
jge
add
mov
add
mov
icebp
pop
inc
add
fstpt
fmull
push
mov
add
fisttps
lds
out
and
pop
dec
xor
adc
call
sub
sbb
add
add
sbb
js
add
sub
aam
dec
xor
dec
movb
add
sub
add
push
add
xor
lcall
in
sahf
pop
aaa
pop
sbb
add
shlb
add
lods
testb
mov
mov
pop
xor
call
add
sbb
jmp
adc
add
fildll
mov
out
outsb
pop
addb
addb
or
add
movsl
add
cld
lods
test
imul
ret
add
xor
cmp
jmp
add
dec
shll
add
add
sub
xor
cmp
shrb
add
cwtl
ss
repnz
cmp
fstpl
movsb
add
add
fistps
fsubr
jns
mov
cltd
push
div
xchg
outsb
and
jl
push
add
pop
inc
add
push
bound
ljmp
popf
mov
add
add
incl
add
aaa
cmp
cmp
out
into
pop
icebp
mov
add
inc
add
add
cmp
cwtl
in
mov
sbb
add
mov
xor
pushl
add
xchg
mov
or
call
test
call
push
push
add
mov
pop
je
add
pop
iret
push
icebp
push
or
pop
sub
jo
pushl
and
incl
sarb
lcall
add
mov
jg
add
mov
cmpsb
add
add
mov
add
mov
or
jmp
add
inc
add
inc
add
stc
dec
ss
ficoms
sub
push
add
ret
add
loopne
lds
daa
add
movsb
add
add
cli
jnp
cmp
add
add
insb
sbb
lret
push
push
cmp
add
jmp
dec
call
add
es
icebp
inc
add
xor
decl
push
adc
ljmp
add
dec
imul
add
lods
cli
mov
ja
loope
mov
mov
pushl
add
pop
xor
jmp
jns
and
pushl
clc
jae
push
mov
xor
incl
call
fsubrl
mov
xchg
pop
add
add
xor
icebp
push
mov
add
mov
lcall
test
dec
xchg
xchg
xchg
mov
rcrl
lods
push
add
ret
add
incl
add
and
push
add
mov
rolb
add
inc
add
add
icebp
pop
xchg
cmpsb
add
movsb
add
add
add
xchg
insb
xchg
clc
sub
push
fwait
movsl
add
add
data16
add
faddp
add
int3
das
jge
mov
outsb
rcr
mov
add
add
decl
data16
outsb
and
pushl
sti
cmp
push
mov
xchg
sahf
int3
in
dec
or
add
pop
jecxz
out
test
in
aaa
inc
add
pusha
add
sbb
add
and
pop
pop
add
fsts
add
jne
add
sub
xchg
jb
pushl
and
pushl
and
popf
lahf
pop
push
add
cli
in
xchg
push
addb
add
xchg
lcall
and
incl
add
dec
xor
in
add
add
add
movl
add
push
add
test
pop
jbe
add
or
adc
push
push
loopne
adc
adc
call
jmp
add
add
addb
lea
idivl
insb
mov
movsb
add
movsl
add
add
add
add
xor
jmp
add
jp
sbb
addb
xor
add
incl
test
dec
bound
pushl
add
push
adc
decl
add
xor
push
addb
movsl
add
out
cmp
add
imul
add
add
add
sbb
sbb
add
jb
decl
std
mov
inc
add
add
mov
mov
push
cli
scas
sbb
sbb
lcall
lret
jo
lcall
leave
jbe
lret
add
pop
jecxz
jle
add
lods
mov
add
ja
in
xor
mov
addr16
add
add
mov
pop
ficoms
add
add
inc
add
jge
add
and
cltd
sbb
inc
add
cltd
stc
pop
sub
mov
mov
addl
add
lcall
add
cmp
add
scas
add
call
push
ljmp
mov
decl
add
inc
add
fildl
add
addl
addb
add
add
add
add
ljmp
ficoms
or
cmpsl
add
movl
and
ljmp
call
sbb
add
add
xor
push
out
adc
call
or
jl
pop
movb
add
xor
lcall
dec
in
xlat
repnz
ds
fwait
xor
fisubs
add
movb
dec
pop
sbb
out
sub
xor
add
jle
leave
ss
inc
add
add
call
push
add
jmp
push
add
in
movsb
add
add
lcall
pop
aas
sbb
mov
add
fstpl
jmp
mov
test
lock
lds
jecxz
jg
sub
xor
cmp
add
pop
adc
add
xor
lcall
or
ss
push
cmp
push
daa
add
add
lods
dec
and
pushl
add
cli
push
add
inc
add
xchg
aad
add
decl
push
add
add
inc
add
call
repz
mov
add
add
sbb
add
cwtl
loopne
stos
jnp
in
jge
test
dec
aaa
mov
lcall
jp
add
jge
in
mov
scas
jge
add
add
in
mov
movsbl
insb
dec
stos
inc
add
cwtl
pop
mov
pop
dec
mov
add
inc
add
add
jle
add
add
push
jb
imul
add
add
jmp
int
jecxz
pop
inc
add
mov
test
add
insb
insb
mov
sbb
add
and
decl
xchg
mov
fnsave
stc
dec
cmp
ret
add
add
data16
lahf
and
pushl
decl
add
lods
sub
jge
inc
add
add
fsubrs
daa
add
divb
add
fidivs
add
pop
jns
lock
lea
roll
jg
add
addl
dec
addb
pop
rolb
xchg
xchg
adc
fimull
add
inc
add
int
sbb
cltd
jbe
out
aad
xor
add
or
add
mov
add
xor
jmp
add
into
add
call
add
add
jne
jge
outsb
add
pushl
cld
imul
movsb
add
add
movsl
add
add
incl
call
int
mov
aas
sbb
jl
jns
add
add
lcall
jmp
add
into
push
mov
or
movsl
add
jge
add
rolb
jne
push
add
xor
cmp
ret
and
ljmp
xor
push
add
sub
or
add
data16
cwtl
stc
mov
cmp
scas
cmpsb
add
ja
imul
add
incl
flds
decl
add
pop
ficompl
add
iret
ja
add
add
add
aas
mov
add
fldl
add
sub
jp
in
insl
loopne
inc
add
mul
add
lcall
add
dec
push
mov
xchg
xor
incl
add
mov
add
sbb
das
insb
mov
inc
add
icebp
mov
mov
add
mov
and
ljmp
add
ds
mov
lcall
add
mov
xchg
fsubp
add
xchg
push
add
lock
lock
scas
mov
lcall
add
mov
add
fimuls
add
loopne
sbb
sbb
lods
fwait
pop
sarl
mov
cmpsb
add
add
jl
ret
rolb
add
dec
ljmp
jno
call
add
movsb
add
sub
jecxz
sub
lret
icebp
pop
jnp
push
add
decl
stos
lods
jns
add
sbb
mov
jecxz
lret
jb
ljmp
ljmp
push
sub
add
push
jbe
cmp
paddusw
cmp
xchg
ret
add
arpl
decl
faddl
call
test
mov
add
and
lcall
aad
ss
add
cmpsb
add
add
cmp
xchg
push
sub
add
xchg
call
stos
inc
add
add
sub
add
add
or
add
int3
rolb
push
addb
inc
add
and
jne
push
dec
mov
add
dec
or
add
lds
push
hlt
push
fstpl
jmp
add
and
incl
inc
add
add
lock
fs
add
or
pop
data16
add
mov
push
add
mov
sub
sub
add
xchg
pop
xchg
mov
decl
movsl
add
stc
std
sbb
fsubs
add
adc
xor
pushl
repz
ret
add
lcall
add
mov
jp
add
inc
add
fldcw
and
jl
ficomps
adc
dec
jle
loop
cld
dec
jmp
add
addl
add
push
add
or
add
dec
mov
sub
push
int3
cld
sub
fwait
xor
jmp
add
xor
pushl
or
xchg
stc
into
dec
jo
lcall
testb
cmp
add
in
test
out
addl
testb
pop
xchg
inc
add
mov
movl
lods
cmp
add
aas
je
add
popa
add
cmpsb
add
pop
xlat
pop
add
xor
lcall
add
mov
jg
pop
mov
enter
add
daa
add
dec
into
loopne
pop
add
or
add
adc
pushl
adc
push
add
push
mov
ja
cli
cli
fsub
add
add
add
addr16
xor
rorb
cmp
add
in
adc
add
add
inc
add
jmp
add
pusha
add
ret
add
add
mov
push
push
push
add
push
ret
add
cmp
out
adc
pushl
add
iret
aaa
in
loope
and
pushl
sub
add
shll
ret
fstps
ljmp
add
mov
add
add
imul
addb
jl,pn
mov
or
or
jns
xchg
dec
fisttps
je
lds
scas
add
sti
pop
enter
dec
jns
pop
cmp
mov
add
decl
add
les
iret
int
pop
ret
ret
addl
popa
add
push
jns
push
inc
add
dec
mov
imul
add
addb
xor
lods
in
ss
outsl
dec
mov
mov
add
aad
in
or
pusha
add
or
add
cmp
fmuls
mov
out
jnp
stos
mov
add
inc
add
dec
outsb
inc
add
int3
imul
rolb
popa
add
add
add
jmp
repz
add
lods
rolb
lea
add
fsubs
call
jns
mov
add
jge
xchg
movb
jo
call
cmp
push
pop
into
jne,pn
jmp
lcall
push
add
jmp
sahf
dec
dec
fisttpl
ja
add
sbb
add
xor
jmp
dec
xchg
int
lret
or
ss
and
incl
call
stos
push
das
in
sti
jmp
fistl
ljmp
rolb
sub
rolb
test
add
add
dec
in
jp
pop
pop
fnsave
add
jge
xchg
mov
add
cwtl
and
imul
lods
addl
ljmp
ljmp
in
data16
jns
add
add
inc
add
leave
adc
call
jne
mov
pop
push
add
inc
add
or
add
std
stos
pop
in
hlt
aaa
or
jae
jle
dec
mov
jae
mov
mov
add
cmp
push
add
xor
jmp
add
in
xor
add
add
lcall
rcrl
lret
call
add
ds
lret
incl
xor
pushl
fcmovne
mov
xor
add
out
jg
in
mov
add
jae
call
dec
fistps
and
jmp
pushl
add
add
xchg
clc
addl
dec
or
jb
stc
cli
mov
add
inc
add
ds
rolb
cwtl
sbb
add
adc
jmp
mov
add
aas
jp
dec
ljmp
add
addl
mov
add
shlb
pop
insb
lcall
add
push
add
mov
mov
aaa
std
out
out
push
int
or
mov
out
xchg
mov
cs
or
cmp
sbb
push
popa
add
inc
add
lods
cmp
lahf
out
sub
add
addb
add
add
mov
ror
rolb
dec
loope
mov
std
jmp
dec
cmp
mov
add
ljmp
iret
bound
pushl
scas
nop
push
mov
pop
jmp
mov
and
ljmp
js
lods
xchg
xchg
gs
add
add
inc
add
addl
add
pop
imul
add
fcomi
sbb
add
add
inc
add
repnz
or
mov
outsb
shlb
add
lret
icebp
ss
adc
je
add
add
cmp
add
add
mov
daa
add
add
xchg
into
mov
dec
add
call
push
add
arpl
pushl
inc
add
movsb
add
add
popa
add
adc
mov
xchg
je
jno
in
outsb
rorb
sti
in
push
add
push
cmp
add
mov
add
jmp
add
lcall
add
inc
add
notl
mov
add
rclb
dec
in
addl
add
inc
add
xchg
mov
add
mov
sbb
add
js
je
add
movb
add
ja
add
and
jmp
std
repz
add
bound
jmp
jge
sub
mov
pushf
cld
and
aas
aam
add
mov
lock
adc
lcall
add
shll
lcall
adc
lcall
add
div
push
add
pop
push
jne
xchg
movl
cmp
inc
add
and
jp
fbld
lcall
iret
and
mov
decl
xchg
jae
call
daa
add
lock
movsb
add
cmc
rcll
add
dec
fsts
add
add
cmp
inc
add
add
add
aas
popf
lret
bound
call
movb
dec
or
rolb
rcl
iret
cmp
sub
mov
jecxz
repz
or
stos
test
push
add
mov
fnstcw
dec
repz
add
scas
mov
add
add
push
add
add
cld
incb
jo
jmp
pop
pop
dec
jecxz
mov
int3
rclb
add
jl
add
xor
pushl
repz
add
adc
add
push
inc
add
add
lcall
jae
ficomps
add
rcll
ljmp
lods
sbb
imul
pop
cltd
js
ret
rolb
add
lret
push
add
jp
add
push
hlt
pop
sub
pop
dec
cwtl
rcrl
je
lcall
mov
lock
sbb
and
lcall
jno
call
add
aad
add
stc
adc
add
jl
or
xor
ljmp
add
decl
loope
js
xor
pushl
scas
ljmp
add
add
lcall
aas
out
dec
scas
not
mov
je
add
sub
in
pusha
add
cltd
xchg
mov
mov
or
pop
push
add
repz
add
jb
call
push
repz
addb
test
xor
call
add
mov
add
add
scas
push
add
in
bound
cmp
pop
outsb
rcll
add
add
adc
lcall
pushf
add
pushl
jmp
add
add
or
call
add
test
int3
addl
or
jo
lcall
into
add
daa
add
add
or
jnp
bound
lcall
jb
decl
pop
data16
js
pop
cli
aam
add
call
mull
pop
pop
push
aam
jb
jmp
add
add
ljmp
mov
add
xor
mov
scas
iret
xchg
inc
add
mov
lcall
xchg
jo
lcall
add
push
or
add
add
ljmp
rorl
jb
call
dec
scas
pushf
inc
add
push
jg,pn
inc
add
jecxz
popf
lahf
repnz
sti
sub
and
jnp
fidivrs
mov
add
add
lcall
add
add
ljmp
push
add
pop
add
rolb
add
xchg
dec
xchg
jle
lea
lcall
add
add
aas
in
frstor
add
incl
lcall
sbb
add
jno
lcall
psllq
mov
add
add
pop
pop
add
mov
stc
inc
add
adc
incl
add
cmp
add
lods
cmpsl
add
data16
pop
push
xor
mov
imull
add
add
cmp
add
repnz
jae
jmp
daa
add
rolb
xor
incl
add
add
adc
jmp
add
aad
dec
sbb
add
stos
popa
add
sub
jmp
add
insl
fwait
stos
out
dec
int3
test
movb
je
mov
sub
jmp
add
add
les
cmp
add
pop
shll
addl
add
jnp
mov
add
add
xchg
mov
add
add
or
movsb
add
add
lcall
and
push
push
add
movsb
add
add
sahf
inc
add
mov
test
addl
add
add
mov
jmp
add
mov
add
sbb
jp
add
dec
jle
add
lahf
in
hlt
jp
add
add
and
jmp
add
sub
ja
lahf
arpl
fadd
add
push
jae
call
add
ds
dec
sub
mov
adc
cmp
cmpsl
add
add
push
out
xchg
inc
add
add
add
add
mov
add
fdivrs
add
dec
cmp
add
incl
add
fcomip
int
fiaddl
add
push
push
inc
add
add
xor
add
sub
jnp
in
pusha
add
popf
out
push
add
cltd
add
decl
add
lcall
push
add
lahf
mov
into
in
stos
dec
adc
decl
inc
add
clc
xchg
mov
dec
insb
icebp
arpl
call
add
jle
add
add
inc
add
adc
cmp
add
cmpsb
add
jmp
add
inc
add
sub
sub
cld
test
cli
push
pop
push
add
sbb
jne
ret
add
scas
inc
add
mov
addl
jb
jmp
mov
lcall
add
stos
lock
sahf
sub
cmp
pushl
jge
pop
mov
push
pop
int3
and
pushl
je
add
add
xchg
cmc
xchg
sub
insb
push
or
add
dec
mov
add
cmp
add
dec
out
xor
call
jmp
ss
or
sub
cmp
mov
and
jmp
add
mov
add
inc
add
insb
das
rcrb
mov
push
push
cmc
cwtl
cmp
add
cmpsl
add
add
push
add
pop
add
jmp
add
add
add
push
add
xchg
in
cmp
jmp
xor
decl
pushf
mov
add
addl
add
adc
pushl
call
dec
push
popa
add
insl
test
fcmovne
lcall
add
movb
add
rolb
in
testl
pop
mov
push
add
cmp
mov
call
or
insl
in
sub
incl
in
sbb
push
dec
jle
addl
push
inc
add
xchg
lret
je
add
mov
addl
clc
pusha
add
dec
jle
dec
pop
push
pop
add
clc
pop
and
pushl
dec
mov
or
inc
add
add
jns
fistpl
aas
mov
decl
inc
add
test
call
add
dec
int3
cmp
add
pop
imul
insl
out
fistpl
add
dec
pushf
addl
xchg
push
fimuls
nop
sahf
sarl
jae
push
ljmp
lcall
push
push
in
mov
add
fsubrl
lret
ret
add
lods
data16
addb
add
add
add
aaa
iret
rcrb
pushf
imul
add
std
add
jmp
add
push
dec
iret
repnz
add
cltd
iret
jecxz
fsubs
incl
add
out
cltd
movsb
add
cmpsl
add
jae
ljmp
jmp
addl
add
jmp
jmp
add
jmp
lcall
ljmp
add
aam
aad
add
push
add
mov
add
fmulp
push
add
xor
decl
cmpsl
add
add
shll
ljmp
add
pushl
inc
add
add
cs
movsb
add
imul
inc
add
sti
mov
out
adc
sub
addl
add
dec
ss
add
cmp
add
dec
clc
mov
pop
adc
lcall
das
je
adc
test
call
add
add
stos
jb
jmp
jmp
lcall
jle
sbb
add
add
dec
addb
xor
jg
cwtl
shlb
add
addb
or
add
add
and
jmp
add
add
daa
add
loop
add
out
jns
add
ret
shlb
push
loopne
movsb
add
movb
inc
add
mov
add
or
add
add
mov
add
add
add
nop
adc
jmp
push
add
mov
stos
sub
push
add
daa
add
add
xchg
test
dec
mov
lret
shl
add
clc
jecxz
aas
test
add
adc
jmp
add
add
fcoml
testb
adc
incl
ljmp
rorb
sub
or
shl
add
add
add
add
add
jge
addb
imul
add
add
add
jnp
add
jmp
add
mov
add
out
xchg
loope
push
or
decl
dec
push
push
int3
loope
les
cmc
add
mov
add
add
add
or
test
add
add
scas
xchg
int
stc
xor
jmp
add
cmp
push
add
jns
ret
add
add
daa
add
movl
ljmp
pop
xor
in
mov
cmpsl
add
add
ljmp
inc
add
jmp
aaa
in
push
add
add
dec
add
add
inc
add
and
les
in
in
jb
lcall
fucomp
or
out
push
xchg
in
mov
test
cmp
add
pop
stos
scas
fcomps
sub
pop
push
add
jmp
push
dec
fs
jge
iret
fwait
dec
insl
mov
dec
hlt
aaa
mov
add
pushl
lcall
repnz
cltd
xchg
add
out
mov
in
jns
add
das
addl
jno
ljmp
add
dec
dec
sbb
jl
pop
mov
add
dec
sarb
add
add
jnp
data16
add
add
ljmp
xor
jmp
add
inc
add
add
xchg
popf
lea
add
and
inc
add
sbb
repnz
insb
test
out
pop
stos
notrack
add
add
xchg
inc
add
push
add
add
in
add
xchg
inc
add
pop
call
adc
push
xchg
sbb
add
aad
pop
bound
incl
add
addb
jno
incl
add
cmpsl
add
mov
jne
add
movsl
add
enter
roll
inc
add
addb
iret
xlat
aam
test
add
and
call
jae
push
addr16
or
add
add
jmp
add
inc
add
push
mov
dec
add
or
adc
call
add
decl
sbb
cmp
pop
pop
ljmp
cli
int3
adc
call
sbb
add
add
or
fstpt
inc
add
and
lcall
add
clc
or
jo
call
mov
add
pop
add
decl
lcall
push
add
cli
add
pushl
add
push
inc
add
xor
jmp
hlt
vmwrite
mov
arpl
ljmp
sbb
add
add
lcall
leave
out
xchg
cmp
add
jge
add
test
sbb
fsubs
add
dec
mov
ljmp
push
add
push
sub
pop
stos
pushf
xor
mov
push
add
bound
pushl
das
push
pushf
mov
arpl
decl
insb
cld
addl
pop
scas
movsb
add
lds
rclb
lds
or
es
arpl
call
mov
jmp
stos
mov
adc
push
add
add
sti
ljmp
jmp
dec
rcll
dec
data16
add
int3
mov
add
test
add
incl
add
data16
jle
sub
imull
cmp
pop
or
add
pop
imul
mov
aaa
lahf
sub
dec
and
call
add
xlat
pop
or
add
add
icebp
mov
pop
inc
add
add
cld
jle
add
jmp
pop
hlt
out
movb
outsl
inc
add
fists
mov
divb
decl
pop
mov
incl
add
add
add
lock
add
in
insl
pop
fidivl
fisttpl
add
mov
in
mov
lcall
add
enter
xchg
mov
xchg
pop
add
add
add
add
or
fadds
decl
ljmp
add
add
pop
mov
fwait
aad
js
and
ljmp
dec
in
jnp
mov
clc
xor
add
mov
stos
xor
add
icebp
ret
jae
call
add
add
dec
roll
lahf
in
pop
inc
add
add
pop
call
addb
pusha
add
lahf
pop
std
xor
add
lock
add
xchg
push
add
or
test
push
inc
add
movl
add
push
outsb
lahf
or
mov
add
in
inc
add
paddusw
add
pop
or
and
ljmp
scas
push
add
adc
add
jbe
loopne
xor
jmp
call
add
mov
add
addl
add
call
arpl
inc
add
add
inc
add
sbb
add
inc
add
ret
and
call
add
pushl
test
insb
add
add
ljmp
ja
scas
add
call
add
add
bound
pushl
add
jmp
add
add
cmp
add
pusha
add
movsb
add
lods
push
add
mov
ret
add
inc
add
add
xchg
mov
add
pop
and
lcall
jle
ds
add
test
outsb
insl
out
scas
decb
add
add
pop
inc
add
add
add
jle
add
add
cmp
loope
mov
mov
add
popf
mov
dec
xchg
jns
add
pxor
incl
repnz
dec
pop
addb
add
lahf
or
leave
cmp
add
add
mov
mov
add
mov
add
dec
pop
out
cmpsl
add
add
fdivrs
add
roll
addl
repz
mov
mov
icebp
pop
jl
add
add
jp
push
fldl
jmp
add
dec
jmp
adc
jmp
add
inc
add
jmp
add
and
push
jnp
xchg
sbb
push
jmp
dec
add
jmp
lcall
inc
add
test
add
inc
add
cmp
daa
add
data16
add
into
pop
and
cltd
test
adc
pushl
add
and
stc
dec
pop
mov
add
dec
jbe
xchg
push
add
int3
dec
push
std
mov
push
add
push
or
mov
addl
into
adc
jmp
call
ret
js
shll
lret
add
stc
or
mov
inc
add
add
add
test
mov
inc
add
add
xchg
jecxz
ljmp
push
add
or
add
adc
decl
xor
mov
add
cmc
sub
mov
add
pop
pop
test
inc
add
cmp
mov
int3
add
rorb
add
add
push
add
pop
add
jne
test
add
sbb
adc
add
mov
or
test
fcmovne
jle
popa
add
cmp
add
add
jmp
push
add
fcmovnbe
das
push
add
repnz
pop
or
movb
jno
jmp
lods
xchg
js
addb
add
add
fldt
test
adc
addb
inc
add
daa
add
add
adc
jmp
add
stos
in
sub
add
add
adc
add
ffreep
add
or
outsb
push
add
imul
xchg
aam
shrl
and
jmp
sub
neg
in
xor
lcall
add
lcall
bound
decl
mov
imul
push
addl
pop
add
imul
add
sub
add
aaa
sub
add
add
cmp
dec
jo
decl
divb
push
add
jb
decl
dec
dec
icebp
sub
jb
mov
aas
cltd
or
add
sub
pop
outsb
adc
add
loopne
mov
jecxz
je
add
add
lock
pop
adc
add
mov
pushl
incl
add
mov
xchg
pop
jo
lcall
adc
add
cmp
in
add
jno
ljmp
add
ret
add
adc
call
cmp
ljmp
jae
mov
mov
add
fisubl
add
pop
jne
dec
xchg
scas
shll
add
pop
test
add
add
stos
insl
loop
jecxz
and
pushl
add
mov
add
in
push
add
sti
lods
into
push
add
pop
out
shl
pop
ljmp
add
or
xor
call
fucomip
jo
call
add
leave
xchg
push
mov
addb
repnz
add
jbe
add
add
incl
add
mov
test
jns
or
jb
mov
jg
popa
add
jl
add
add
movsl
add
inc
add
or
test
xchg
sub
or
add
add
xchg
dec
dec
xor
jmp
add
lahf
mov
addb
ret
fsubrl
add
test
fidivrl
add
int3
insl
pop
insb
out
jno
jmp
int
shr
xor
cmp
add
adc
jmp
push
add
mov
je
sub
ficoms
rorb
mov
call
test
sub
call
mov
mov
push
imul
ret
add
add
pop
fsubrs
call
insb
xor
decl
mov
sti
out
js
scas
data16
clc
sbb
sub
jno
incl
ljmp
add
hlt
fsubp
add
add
lahf
jb
dec
xchg
lret
dec
mov
add
ret
add
stc
movsb
add
addb
add
incl
movsl
add
lcall
inc
add
movl
jb
jmp
jnp
or
mov
add
add
inc
add
add
call
sub
pop
stos
fwait
mov
decl
add
mov
mov
mov
add
call
cmp
pop
cmp
add
jmp
add
mov
dec
bnd
mov
add
or
in
pop
sti
enter
add
jmp
lcall
mov
pop
roll
and
pushl
inc
add
add
sbb
mov
add
push
add
inc
add
add
mov
lods
add
cmp
add
cmp
leave
dec
pop
dec
ljmp
dec
add
jnp
mov
add
addl
add
sub
adc
pushl
aam
add
pushl
add
sahf
pop
add
inc
add
mov
fidivs
call
add
and
call
add
mov
inc
add
sbb
add
dec
lahf
popa
add
lret
mov
and
adc
pushl
push
add
das
icebp
push
fidivs
add
cmp
lds
push
pop
add
cld
sub
scas
sub
ljmp
add
add
stos
dec
or
mov
lcall
add
mov
xchg
xchg
mov
mov
lret
sbb
aaa
push
add
sub
add
call
xchg
pop
adc
ficoms
add
inc
add
stc
fdivs
pop
mov
mov
add
std
push
add
adc
jmp
add
mov
ja
mov
add
jecxz
mov
cmpsl
add
imul
push
mov
ss
add
repnz
mov
add
and
pop
add
clc
movb
add
add
scas
cmpsb
add
mov
add
add
lcall
add
pushf
and
cmp
inc
add
dec
roll
add
mov
add
jmp
cmp
inc
add
or
addl
dec
cld
addb
les
pop
dec
fidivs
add
aas
xlat
xchg
push
sbb
test
mov
cltd
scas
out
xor
call
sbb
add
addb
cld
pusha
add
mov
add
add
or
xchg
pop
test
mov
lods
xchg
hlt
mov
add
lods
jmp
add
and
js
sub
mov
sahf
mov
or
scas
lea
fwait
jae
mov
jecxz
pop
push
add
inc
add
sbb
icebp
dec
call
add
call
jbe
aad
add
add
xchg
fimuls
bound
decl
shll
mov
in
bound
lcall
fldenv
insb
addb
sbb
decl
add
out
fchs
add
add
add
adc
pushl
or
push
add
insl
fsubrs
add
add
add
add
sub
cli
test
icebp
cmpsl
add
mov
inc
add
jae
pushl
cmpsl
add
add
mov
add
cmpsb
add
add
int3
cmp
mov
adc
sti
dec
add
pushl
ja
addb
push
add
out
movsl
add
aaa
lock
mov
movb
add
cwtl
pop
dec
clc
cltd
sub
add
ss
xor
mov
add
jmp
fstps
dec
add
ljmp
shl
or
xor
jmp
jge
lods
mov
sahf
or
add
sahf
pop
mov
pop
add
and
dec
aas
iret
push
add
add
xchg
mov
add
pop
fimull
adc
addb
es
add
push
add
out
scas
insl
mov
and
add
mov
lret
sbb
push
add
cmpsl
add
add
jge
push
mov
iret
xchg
adc
inc
add
movb
add
add
mov
jg
mov
jnp
add
shrb
add
add
jl
push
add
leave
cld
pop
cmpsb
add
pop
xchg
dec
mov
std
mov
add
cmp
add
add
jmp
cmp
adc
jmp
add
jmp
add
call
mov
sub
push
imul
dec
out
cmp
das
jmp
add
add
xchg
jle
inc
add
mov
std
inc
add
and
out
es
sahf
push
mov
add
add
add
adc
push
loope
and
pushl
add
add
xchg
data16
pop
jno
inc
add
jb
incl
add
add
pushl
out
mov
add
call
std
jns
stc
clc
sub
data16
push
add
push
pusha
add
inc
add
cld
outsl
outsb
cmpsb
add
ffreep
add
add
sub
mov
add
fiadds
add
add
add
jl
jb
lcall
ret
add
sbb
pop
push
add
fildll
ljmp
and
jmp
add
mov
xchg
clc
jle
addb
add
jmp
add
aad
add
pushl
add
or
add
add
add
shlb
dec
and
pushl
nop
lret
pusha
add
ds
pop
or
mov
add
bound
jnp
outsb
dec
cltd
mov
add
inc
add
cltd
data16
jo
pushl
add
popa
add
testb
pushl
dec
aad
jg
enter
add
mov
add
mov
pop
sbb
add
je
test
add
cltd
add
sbb
call
bound
incl
call
lcall
mov
mov
sub
jle
adc
call
lcall
lahf
sub
pushf
dec
arpl
call
add
lcall
fisttpl
mov
imull
out
xchg
hlt
push
scas
pop
inc
add
loope
jne
add
cli
and
call
call
ss
jmp
xchg
mov
cmpsb
add
popa
add
or
decl
cmp
add
ret
add
add
xor
cli
jp
aas
push
add
push
jge
fcoms
add
dec
ljmp
stos
into
addl
mov
xchg
cmp
mov
add
icebp
fwait
mov
js
add
xchg
inc
add
add
dec
add
add
adc
pushl
out
adc
call
test
add
repnz
insl
lds
cmp
add
add
push
scas
xor
ljmp
nop
jae
call
arpl
call
xchg
jg
xor
in
icebp
setb
push
pop
xor
decl
xchg
xlat
jg
inc
add
loop
push
cld
dec
nop
gs
clc
mov
fwait
into
leave
dec
and
call
fnstenv
call
push
lds
cli
push
sub
jne
das
ds
add
add
dec
addl
add
xor
gs
imul
mov
add
pop
add
add
and
jmp
add
aaa
sub
add
inc
add
push
fwait
sahf
adc
pushl
lock
addl
cmc
addb
add
add
jle
adc
or
mov
add
lods
adc
dec
imul
add
add
add
add
xor
mov
data16
call
lcall
cli
js
add
dec
adc
pushl
testl
jg
rorl
jne
add
mov
mov
dec
icebp
push
fwait
test
pop
add
scas
mov
pop
inc
add
pushf
data16
add
add
mov
decl
add
dec
fldcw
xor
daa
add
dec
jge
repz
push
add
lock
jl
lcall
ja
cmpsl
add
lcall
pop
das
push
add
mov
mulb
jge
cmp
pop
pop
aam
mov
add
add
add
cmovb
call
je,pt
pop
xchg
cltd
ret
add
mov
or
inc
add
js
cld
xchg
enter
add
in
add
jmp
jg
shrl
test
test
adc
call
adc
ud0
sub
add
imul
inc
add
cmc
dec
es
mov
sarl
or
dec
in
movsl
add
add
repz
clc
push
add
pop
pusha
add
leave
mov
mov
jmp
and
ljmp
add
add
loope
xchg
cmpsb
add
ret
add
movsb
add
push
ret
add
movsl
add
mov
xchg
push
add
push
pop
lock
add
add
xor
call
mov
mov
insb
sbb
add
movsb
add
popa
add
pop
add
mov
sbb
add
cmp
scas
jmp
add
cmp
loope
mov
jnp
add
jnp
data16
daa
add
add
add
ljmp
stos
sti
push
ljmp
push
incb
add
movl
add
pop
mov
add
push
add
gs
push
or
incl
dec
cmpsl
add
addl
shl
xchg
stos
xor
decl
stc
popl
data16
dec
addb
sub
ljmp
test
repnz
lcall
mov
inc
add
cmp
add
popf
inc
add
add
iret
xlat
jg
leave
movl
xchg
ret
add
xchg
repnz
add
in
dec
loopne
sahf
add
dec
clc
inc
add
stos
outsl
outsl
sub
out
xchg
ja
add
movb
rolb
add
roll
add
jg
bound
lcall
lcall
rcrl
incl
add
lret
pop
add
add
push
add
lcall
add
xor
decl
mov
ja
iret
je
add
mov
xchg
adc
cmpsl
add
pop
shr
jge
add
jo
lcall
add
cld
mov
mov
ret
push
add
jb
fiaddl
mov
jmp
and
rolb
mov
add
movl
fisttps
add
add
sti
and
and
ljmp
cmpsl
add
xchg
or
add
pop
outsb
cmp
jmp
add
cmc
stc
jo
add
jne
mov
sti
jo
call
add
push
add
mov
add
dec
push
iret
sub
add
jle
add
pop
add
add
add
aas
roll
add
lret
in
xchg
push
cwtl
cmp
mov
imul
xor
decl
sub
movl
sbb
add
sub
cmc
dec
addb
add
pop
jno
clc
mov
lcall
iret
cmpsb
add
mov
add
imul
in
push
add
adc
dec
icebp
leave
paddsw
jmp
and
call
add
adc
lcall
sub
mov
lock
cmp
hlt
nop
mov
or
add
daa
add
fsubp
add
fwait
cld
cwtl
jae
pushl
add
out
stos
shlb
add
mov
int
add
add
js
jp
cmc
iret
punpcklbw
push
hlt
dec
movb
fidivrs
les
mov
arpl
jmp
pop
cli
int3
jae
incl
sbb
data16
pop
jb
fcoms
add
or
push
jg
xchg
je
add
add
push
add
add
lcall
or
fstpt
add
mov
inc
add
cwtl
dec
jmp
pop
add
add
add
add
dec
imul
movl
data16
mov
ficoms
dec
sub
add
add
add
pushf
lcall
loop
pop
xchg
mov
arpl
jmp
add
add
push
xor
mov
add
pushl
add
sbb
jne
rcrb
popf
lea
addb
push
mov
aas
mov
pusha
add
push
sbb
adc
aas
ds
fcompl
insb
dec
cmp
jnp
imul
xor
call
mov
ds
clc
addr16
jp
add
xchg
or
inc
add
pushf
cltd
movsb
add
bound
jmp
add
inc
add
inc
add
mul
add
add
mov
in
pop
mov
mov
dec
mov
dec
popf
xchg
cmpsl
add
add
add
add
add
addb
add
test
jg
imul
shlb
add
pushl
add
add
add
popl
push
dec
popf
jle
mov
dec
xor
ljmp
add
push
add
insl
sbb
aam
sub
mov
sub
add
adc
jmp
add
fwait
aad
test
into
loop
test
add
pop
data16
daa
add
mov
inc
add
sbb
insl
enter
or
push
outsl
cld
xor
xchg
mov
mov
aad
add
or
jmp
shrb
mov
add
cmc
gs
test
ja
movsb
add
adc
jo
pushl
add
decl
add
pop
in
xor
decl
add
xor
jmp
add
ret
add
pop
repz
mov
add
loopne
mov
add
add
test
add
movsl
add
addb
inc
add
add
pop
mov
add
fldl
je
fwait
cli
pop
roll
repnz
lea
push
out
repnz
test
fwait
sbb
dec
ffreep
add
push
pop
add
pop
push
add
sbb
imul
pop
mov
ss
mov
push
add
movl
add
decl
ret
add
ljmp
add
loop
in
ja
pop
add
std
in
in
cmp
repnz
pushf
daa
add
add
pop
mov
add
out
xchg
xchg
inc
add
add
loop
jb
incl
add
add
in
outsl
das
stos
dec
ljmp
rolb
adc
jmp
call
cmp
add
xchg
sti
mov
aas
cld
mov
add
pop
out
rcl
pop
loopne
jne
in
mov
scas
mov
add
sbb
popa
add
notb
incl
shll
les
mov
fdivs
add
xchg
addb
add
cli
decb
or
add
add
lds
aaa
push
add
sbb
add
add
test
les
cmpsb
add
add
iret
or
jge
adc
add
inc
add
jo
pushl
add
jecxz
movl
push
fisttpl
enter
xchg
addl
mov
add
cwtl
fsubrl
add
push
add
push
mov
add
fwait
in
data16
es
loop
ret
add
aas
lea
add
aas
mov
xor
cmp
lcall
int
lret
pop
das
dec
mov
add
add
jae
lcall
adc
jmp
add
clc
xlat
cs
add
lcall
add
xchg
std
inc
add
jmp
jo
call
add
add
sub
add
or
add
call
sub
cmp
loop
or
add
std
sub
add
add
cmp
add
ljmp
and
call
ljmp
and
pop
mov
push
add
ljmp
sub
incl
test
mov
add
addl
xchg
adc
nop
fwait
jns
add
add
int
add
jno
ljmp
bound
dec
aaa
push
lahf
ss
mov
shll
add
mov
jmp
inc
add
popa
add
nop
adc
call
push
add
add
add
add
in
aaa
or
data16
loope
cwtl
add
call
inc
add
push
lret
sbb
fisubs
add
outsl
pop
movl
add
aad
add
inc
add
add
scas
cs
loop
test
fldt
in
inc
add
mov
ficompl
push
add
adc
cmp
cmp
xor
add
sbb
xlat
bound
decl
pop
sbb
add
add
roll
add
cmp
dec
sub
jnp
ffreep
add
add
jmp
stc
and
incl
add
or
add
jle
cmpsb
add
add
decl
add
add
roll
cwtl
stc
shl
pop
jl
add
add
cmp
ret
addb
add
dec
lods
leave
repz
lcall
jns
outsb
rcl
xchg
dec
std
jmp
add
add
push
add
mov
mov
cmp
cmpsl
add
lcall
push
add
xchg
stos
popa
add
popa
add
lret
adc
call
xchg
push
push
mov
push
add
dec
test
fdivrs
cwtl
lret
sub
jp
add
pushl
add
bound
incl
inc
add
sbb
insl
loope
inc
add
and
sahf
mov
add
cmp
add
sub
mov
in
fcmovbe
mov
push
add
push
xor
add
decl
rclb
lcall
add
mov
add
leave
pop
test
push
xchg
loopne
inc
add
sub
js
shlb
jmp
shlb
js
add
add
mov
mov
add
add
add
mov
add
add
xlat
add
xchg
movb
dec
jns
popf
push
arpl
incl
add
and
pop
ss
add
add
add
jecxz
inc
add
xchg
add
movl
xor
ljmp
ds
into
pop
unpcklps
psubd
int3
sbb
fists
add
push
movb
mov
mov
out
data16
lods
mov
jl
mov
sbb
sub
ret
add
add
test
inc
add
imulb
cld
bound
jmp
add
add
cmc
repz
add
dec
add
call
or
add
add
add
add
test
add
push
repnz
test
jnp
add
mov
test
aam
push
add
add
decl
rorb
add
add
cltd
add
pushl
push
cmp
add
pop
into
cld
fisubl
cli
mov
add
iret
into
pop
cltd
ret
add
sti
add
pushl
sbb
jmp
add
add
add
decl
cmp
xor
pushl
add
pop
adc
jmp
jmp
add
add
add
fstp
movb
add
add
in
bnd
add
add
test
pop
or
add
add
xor
jmp
push
jg
xchg
or
pushf
xchg
fdivr
fldt
fcmovu
adc
decl
lcall
lds
dec
movl
mov
add
add
xchg
das
dec
movsb
add
rolb
add
cltd
icebp
xchg
test
in
pusha
add
pop
sub
add
add
add
outsl
push
add
add
incl
ljmp
stc
jbe
jo
incl
lcall
add
incl
add
cli
xchg
pop
addl
add
add
rclb
jl
pop
lea
add
jmp
decl
std
dec
xchg
cld
pop
loop
lea
arpl
jmp
jge
movsb
add
add
movsb
add
adc
incl
incl
add
sub
in
sub
dec
pop
xlat
mov
mov
or
push
mov
inc
add
dec
ret
add
popa
add
imul
add
jae
call
loope
shrl
cmp
dec
mov
sbb
add
push
and
incl
add
lds
lods
push
add
xchg
fcomps
dec
sbb
add
rcl
inc
add
xchg
mul
add
in
sti
sbb
add
ret
add
fisubs
mov
add
stc
scas
shlb
adc
add
cmp
sahf
scas
sarl
arpl
call
sbb
das
imul
add
ror
and
incl
arpl
dec
lods
jmp
cmp
inc
add
hlt
sub
cmp
add
test
add
jmp
decl
add
lds
stos
aam
imul
add
fimull
pop
mov
dec
lcall
les
adc
aas
insb
and
ljmp
popf
and
decl
pop
xchg
cmp
mov
movsb
add
xor
call
add
out
mov
add
out
xor
call
ljmp
or
or
pop
out
cmp
shll
rorl
push
dec
xor
mov
pop
push
call
fwait
add
add
addl
enter
shll
add
xchg
stc
mov
fcoml
dec
or
add
addb
add
test
iret
mov
xor
incl
sbb
pop
and
call
leave
lds
fwait
adc
jmp
jmp
mov
push
add
push
in
les
jmp
int
mov
nop
cmc
lods
out
mov
in
cmp
fdivrl
add
add
sub
mov
add
adc
negb
add
lcall
add
cli
inc
add
aad
rclb
fstpl
mov
addl
jmp
test
sbb
mov
adc
push
sub
inc
add
ds
push
add
adc
pushl
add
addl
ja
inc
add
lcall
cmc
mov
mov
push
push
cmp
lods
insb
cmp
and
ljmp
pop
mov
adc
dec
mov
add
lret
mov
pop
sbb
sub
lret
bnd
decl
ljmp
clc
xchg
sbb
inc
add
push
dec
push
add
pop
in
push
leave
lock
add
mov
ja
fwait
xchg
dec
or
add
movsl
add
mov
xor
mov
add
push
jge
xchg
xchg
dec
push
pop
rcll
data16
decl
xchg
add
or
incl
add
add
roll
dec
inc
add
mov
dec
fcoms
add
jg
pop
repnz
sbb
add
add
add
add
pusha
add
in
out
out
addb
outsb
or
add
add
pushl
fisubrs
or
out
dec
jbe
cmp
cmpsb
add
js
add
aas
lods
movsl
add
movl
sbb
addl
dec
mov
xor
jmp
lcall
mov
mov
jo
decl
add
jecxz
arpl
pushl
je
movsb
add
lcall
sbb
fidivrl
cmp
add
mov
add
add
sbb
pop
sti
jnp
add
lret
mov
stos
dec
dec
jge
lcall
decl
icebp
pusha
add
int
call
add
mov
repnz
push
cld
fiaddl
adc
incl
add
pop
inc
add
xchg
xchg
pop
movb
cmpsl
add
dec
mov
jmp
add
push
add
inc
add
iret
or
add
pop
insl
or
add
in
pushf
movb
rolb
mov
add
jge
add
bound
decl
cmpsb
add
add
js
nop
lods
fwait
adc
call
jle
add
ljmp
or
add
push
mov
jg
cmpsl
add
fldenv
mov
add
movsb
add
mov
mov
add
fistpll
add
add
decl
stc
jg
sub
mov
push
add
jecxz
and
sub
mov
addl
dec
push
shl
movsb
add
iret
or
stos
xchg
or
add
sahf
fdivrl
jg
mov
sub
ror
mov
add
xchg
fld
add
inc
add
add
call
lods
push
sub
or
xor
jmp
add
jno
inc
add
pop
pop
push
mov
outsb
xor
incl
add
push
add
popf
loope
into
mov
adc
pushl
add
mov
into
repnz
outsb
sbb
xchg
into
push
xchg
rolb
add
cwtl
out
mov
push
add
out
mov
lcall
add
call
in
cmp
popf
adc
add
add
nop
xor
pushl
add
sbb
xchg
pop
mov
insl
sahf
maxps
insl
fwait
dec
aas
push
dec
loope
xor
incl
popa
add
call
adc
in
jmp
add
mov
and
dec
adc
sti
mov
add
fmuls
add
dec
and
decl
insb
pop
add
mov
stos
push
add
or
repz
insl
enter
adc
call
mov
add
jg
mov
aam
add
addl
xchg
xchg
pop
loopne
mov
pushl
mov
sub
jns
sbb
mov
push
sbb
repnz
inc
add
in
add
lret
add
in
add
ljmp
add
pop
add
decl
jmp
incl
add
lcall
addr16
jae
ljmp
add
call
lcall
push
insb
xor
ljmp
data16
xor
pushl
add
or
fstl
ljmp
add
xchg
sbb
inc
add
lods
pusha
add
addl
aas
mov
inc
add
add
lods
addl
add
add
incl
cmpsb
add
jns
add
add
mov
lds
cmp
add
adc
jmp
dec
cmp
add
add
hlt
push
add
in
pop
aad
movl
xor
ljmp
je
lret
roll
add
mov
add
dec
data16
add
pop
scas
scas
stos
aas
add
cmc
cmpsl
add
addl
cmp
mov
add
movl
add
movl
jg
das
in
add
cmp
and
lcall
repnz
jo
push
lods
pop
cld
add
ljmp
add
add
mov
stos
popf
jo
out
test
sbb
add
add
mov
and
pushl
add
jno
incl
add
cmp
add
mov
pop
add
push
push
add
lret
ja
xor
call
insb
add
add
fadds
add
add
add
call
insl
loope
add
decl
xchg
jle
mov
add
lds
inc
add
add
add
adc
add
push
push
add
mov
data16
xor
call
repz
stos
cmp
xchg
or
je
add
push
lods
inc
add
cmp
bound
lcall
int
aaa
xchg
and
call
add
cmp
in
inc
add
add
ljmp
add
inc
add
decl
and
call
mov
jmp
add
inc
add
or
add
sub
sti
sub
xchg
or
sar
push
push
push
add
mov
fucomi
imul
and
ljmp
add
sub
sub
call
hlt
repz
add
bnd
shll
pushl
add
pop
mov
sub
cmpsb
add
out
aam
add
jbe
add
addr16
or
inc
add
cwtl
and
mov
inc
add
aad
fldt
push
repnz
rolb
sbb
add
js
mov
es
and
push
outsb
pop
sbb
insl
rcll
inc
add
add
inc
add
loope
addb
movsl
add
add
add
lcall
pusha
add
dec
jb
call
add
pop
xchg
pop
push
sarl
ljmp
cmp
mov
xchg
outsl
fidivrs
add
add
xchg
inc
add
add
pop
aas
jns
lcall
push
add
cwtl
jp
test
add
inc
add
movsb
add
add
sub
jnp
aad
add
addl
add
cmp
ljmp
add
jmp
sub
test
ljmp
in
nop
aaa
xor
dec
insb
pop
idivl
add
add
add
je
and
dec
sbb
add
push
add
aaa
lock
pushl
add
in
jl
inc
add
bound
ljmp
sbb
dec
ds
jbe
lret
xchg
das
dec
mov
add
mov
lds
cs
leave
clc
mov
pop
imul
add
add
test
ljmp
push
outsl
sbb
cmp
rcrb
add
cld
cmc
pop
out
jne
add
add
cmp
inc
add
les
push
fdivr
inc
add
ftst
add
add
add
cld
sbb
add
testl
out
and
lcall
lret
add
add
and
inc
add
add
fwait
dec
push
add
in
cmp
add
shr
cmp
lret
inc
add
ljmp
sbb
jp
add
add
add
loopne
scas
add
cmpsb
add
popa
add
and
in
in
add
jmp
cmpsb
add
jecxz
out
jp
sbb
dec
xchg
ret
sub
mov
arpl
jmp
add
jl
add
lret
jb
decl
icebp
addr16
ficomps
data16
in
push
add
pushl
xchg
inc
add
flds
add
mov
mov
std
xor
pushl
fmulp
out
cmp
hlt
sub
dec
scas
fnsave
jo
call
dec
sldt
jmp
add
daa
add
xor
call
aas
pushf
pop
add
out
movsl
add
jmp
lea
add
test
aaa
and
inc
add
xlat
sbb
movb
fldenv
add
add
jge
pop
push
or
or
pop
inc
add
into
pop
add
add
xor
lcall
add
js
mov
xor
nop
fdivrl
popa
add
out
pop
cmpsb
add
add
add
jne
and
decl
jnp
add
add
pusha
add
dec
enter
add
lcall
add
dec
push
add
push
lcall
sbb
bswap
punpckhbw
pop
push
fldt
repnz
add
les
jp
xor
lahf
nop
in
in
insb
lcall
std
dec
adc
xchg
sub
fisttps
xchg
cmp
add
test
pop
inc
add
jnp
cld
cmpsl
add
dec
mov
add
mov
or
lcall
or
nop
stos
or
dec
cmpsb
add
mov
sbb
movsl
add
fistps
mov
add
outsl
lock
jns
cmp
add
popa
add
scas
push
jmp
xor
jmp
outsb
test
push
or
add
daa
add
sbb
mov
cmp
jmp
jl
or
add
jmp
aas
pop
add
lcall
inc
add
add
inc
add
jo
decl
xor
jge
add
sub
dec
xchg
pop
je
dec
dec
mov
mov
add
leave
cwtl
aad
add
pushl
cld
add
add
lds
test
popf
into
fwait
mov
dec
jmp
cwtl
roll
mov
fwait
pop
aam
test
sahf
push
add
inc
add
clc
cwtl
popf
sub
xchg
sbb
xchg
push
add
cld
jmp
push
addb
fstpl
xchg
negl
fildl
mov
add
add
out
mov
les
nop
hlt
xor
or
push
pop
mov
add
cli
lcall
dec
cwtl
mov
and
pushl
loop
jg
xlat
cmp
add
jno
inc
add
cld
testl
cwtl
movb
daa
add
sub
mov
push
add
or
add
lods
mov
add
add
cwtl
mov
push
int3
mov
sar
and
incl
pop
mov
lcall
addb
pop
dec
insb
leave
mov
add
add
add
mov
add
push
mov
add
cli
enter
aaa
mov
sbb
or
loopne
nopl
call
ds
mov
inc
add
outsb
jnp
shl
test
sbb
add
sub
jp
adc
jle
aaa
jae
jmp
add
add
loopne
inc
add
insl
addb
push
add
lea
pushl
add
hlt
jge
or
add
decl
rolb
addl
jno
lcall
pop
mov
xor
jns
xchg
ds
add
add
incl
inc
add
add
cmp
add
lret
add
dec
or
push
jg
add
mov
push
pushf
lods
xchg
rorb
jle
dec
pusha
add
sbb
pop
stos
push
add
scas
ss
or
add
lods
stc
mov
add
cs
add
or
ficompl
add
sbb
ljmp
lock
add
mov
jmp
add
jne
dec
xor
fldcw
dec
mov
add
in
ret
loope
addb
and
incl
ljmp
add
das
clc
fcmovbe
enter
test
add
addl
and
jno
call
pushl
mov
add
push
add
mov
movsb
add
xchg
push
mov
jge
shll
fistl
xchg
xchg
xchg
or
enter
and
call
rol
add
add
cmc
incb
add
mov
mov
inc
add
jns
add
jle
add
std
cmp
stos
jbe
push
xchg
pop
xor
add
test
cmpsb
add
mov
dec
xor
out
mov
fwait
dec
lods
cmp
xchg
add
sbb
sub
mov
add
inc
add
add
dec
dec
xchg
push
add
xchg
daa
add
add
roll
lcall
das
ja
add
add
add
mov
add
aas
and
decl
shll
add
scas
lea
mov
add
push
scas
xor
ljmp
out
mov
mov
add
push
pop
rolb
add
push
dec
sub
adc
jle
dec
cmpsb
add
add
imul
cmc
adc
jmp
add
scas
repnz
into
filds
movb
add
decl
jmp
cwtl
addb
popf
jge
lahf
call
icebp
repz
or
movb
jmp
ret
add
cmp
push
add
in
ja
add
add
paddsb
sub
dec
mov
cmpsb
add
out
add
cmp
cmpsl
add
xchg
in
cmp
mov
or
add
add
cmp
movsl
add
movl
test
cmpsb
add
add
lds
xchg
rolb
add
imul
stos
adc
mov
into
xor
incl
dec
mov
incl
je
add
add
inc
add
xlat
ss
sub
add
jae
call
popa
add
mov
repnz
mov
push
sub
add
and
out
mov
pushf
jge
add
popl
je
les
inc
add
push
les
hlt
jle
and
ljmp
add
jp
add
push
push
add
lds
sub
add
mov
call
add
in
icebp
in
pop
add
jge
add
iret
fs
add
add
mov
add
mov
mov
mov
mov
sub
into
daa
add
add
je
jmp
add
lds
cld
cltd
push
jl
cmp
add
and
stc
fwait
stos
les
test
leave
arpl
decl
jnp
add
fucomp
popa
add
dec
cld
push
add
push
push
add
sbb
dec
bound
push
mov
add
mov
adc
ljmp
mov
lods
loope
pop
xlat
xor
call
jp
sti
les
mov
add
add
cli
sub
push
add
sub
ja
dec
shll
add
push
mov
xchg
mov
and
add
dec
xchg
repz
sbb
pop
add
push
add
and
decl
add
inc
add
lea
roll
stos
stc
lret
jl
addr16
add
dec
or
notb
pop
push
add
rcrl
data16
adc
push
nop
addb
inc
add
addr16
add
lock
mov
jecxz
push
cmpsl
add
aaa
mov
xchg
inc
add
jl
imul
add
incl
add
idiv
xchg
pop
mov
pop
sub
add
push
add
jno
lcall
jge
insl
mov
dec
pop
test
scas
mov
cmp
jb
ljmp
je
cmpsb
add
add
mov
add
testb
add
dec
lcall
arpl
fiaddl
outsl
mov
mov
jle
or
and
call
fadds
pushl
jmp
add
clc
and
pushl
mov
add
or
les
or
add
dec
aas
or
hlt
dec
cmp
mov
mov
into
jnp
pop
mov
loopne
cmc
cli
or
add
push
push
add
push
add
jg
add
mov
outsb
stc
push
add
xchg
cmp
add
cmpsb
add
in
mov
jb
jmp
xor
inc
add
inc
add
in
jns
sbb
add
pushf
leave
fisubrs
pop
ret
add
jne,pt
mov
add
xor
add
add
mov
push
add
arpl
call
add
add
decl
add
xchg
test
dec
lods
adc
std
mov
imul
mov
add
adc
call
add
daa
add
inc
add
test
in
push
int3
rolb
add
mov
add
or
add
add
js
add
jmp
sub
and
push
xor
out
nop
mov
jmp
add
inc
add
sbb
inc
add
adc
jmp
add
dec
leave
lcall
call
mov
ljmp
dec
out
mov
clc
icebp
jg
lods
pop
add
add
jg
add
stos
outsb
aaa
or
in
mov
repnz
xchg
rolb
sub
add
cli
es
inc
add
jnp
xchg
imul
add
add
add
add
jmp
add
add
add
fstpt
sar
sub
add
add
fsubrs
bound
pushl
jmp
ficompl
xchg
ljmp
push
ljmp
out
out
jg
inc
add
push
add
in
fnstcw
call
xchg
cmp
mov
fnstcw
xor
fistl
pushl
addl
add
or
dec
cmp
fwait
int3
inc
add
mov
add
addb
out
sbb
adc
call
inc
add
stos
cmpsb
add
dec
shll
mov
pop
pop
addb
add
mov
add
add
push
jge
add
add
add
jne
add
mov
jb
call
mov
dec
out
mov
add
jmp
add
rolb
add
mov
fwait
cmp
dec
mov
xchg
xlat
dec
or
std
adc
fiadds
lcall
add
add
pushl
pop
aam
adc
fsubrl
mov
outsb
and
pop
lods
xlat
mov
fadds
jmp
inc
add
cmp
add
push
adc
pushl
push
push
add
aam
add
add
xor
decl
clc
in
mov
add
add
aas
cmp
add
dec
icebp
into
incl
mov
lcall
adc
call
add
or
add
test
ret
add
pop
hlt
imul
xchg
push
push
dec
jns
add
add
pop
xchg
jle
jmp
add
cmpsb
add
enter
add
cmpsl
add
push
add
xor
jmp
add
shr
mov
add
sbb
addb
dec
bound
ljmp
pushl
add
mov
push
scas
xchg
addb
pop
fidivs
jno
call
mov
sub
addl
add
add
push
add
lds
cwtl
add
ret
add
ss
mov
test
mov
add
add
jmp
xor
and
call
add
aas
sbb
cmp
xchg
and
dec
fsubp
add
add
lcall
aaa
movl
jbe
add
cmpsl
add
add
sbb
pop
popa
add
cld
pop
push
add
bound
call
sbb
sub
mov
add
mov
loope
stc
cmp
fcomps
out
fdivrp
sub
imul
dec
movb
xchg
sbb
or
js
std
fsub
add
nop
jle
add
adc
popf
cmp
add
mov
add
jmp
add
xchg
dec
jmp
lds
ficoml
lcall
mov
cmc
ja
add
add
and
cmp
insb
cwtl
cs
inc
add
adc
fisubl
add
add
lahf
add
ljmp
push
xor
cmp
mov
pop
dec
sbb
add
data16
test
xchg
cmc
insl
movb
dec
imul
push
jo
call
add
dec
in
adc
dec
sbb
or
add
dec
repnz
add
sub
fstpl
add
adc
incl
sbb
lods
mov
incl
movaps
or
out
and
push
addl
push
scas
jmp
add
add
pop
ljmp
add
add
sub
add
push
add
pop
mov
std
fcmovnu
cmc
in
adc
jp
sbb
add
test
dec
jnp
and
pushl
lcall
pop
add
push
push
add
frstor
add
out
adc
call
movsl
add
add
mov
jae
push
cmp
add
ret
in
mov
xor
decl
fmul
fistpl
call
bound
ljmp
push
add
addl
add
xchg
pop
mov
rolb
adc
decl
mov
test
fildll
pop
cli
add
jmp
pusha
add
test
add
call
mov
movb
add
xchg
pop
bound
decl
inc
add
sbb
into
push
sbb
add
adc
call
add
mulb
xor
jnp
add
xor
ljmp
insl
sbb
insl
stos
jne
dec
roll
add
xchg
jae
lcall
test
mov
add
ss
cltd
jmp
add
add
add
test
addb
mov
xchg
jg
add
mov
xlat
lds
adc
lcall
xor
js
inc
add
addb
push
pushf
lahf
pop
arpl
fmull
out
or
loope
xchg
push
nop
pop
xor
pushl
add
add
loopne
outsl
push
add
test
addb
add
add
fsubp
add
popa
add
test
adc
jmp
add
mov
mov
sarb
out
in
jae
dec
add
fisttpl
cs
add
addb
add
roll
mov
jae
decl
adc
ljmp
adc
addl
movb
lock
cli
jo
incl
add
sahf
add
inc
add
jnp
hlt
data16
or
add
test
pop
xor
add
add
add
add
jg
add
add
add
fisubl
push
pop
jp
add
push
xchg
sub
sub
sti
fsubl
add
cltd
cmpsb
add
test
xchg
jmp
cmp
pushl
lcall
pop
add
add
add
adc
add
push
inc
add
test
adc
pop
xchg
dec
nop
adc
ljmp
add
mov
sub
and
jmp
imull
int
xchg
nop
sbb
mov
add
mov
dec
out
in
sbb
add
dec
into
mov
scas
or
add
inc
add
xlat
stos
mov
add
fiadds
lods
or
add
incl
add
aad
adc
mov
add
mov
jb
decl
xor
cmp
stos
mov
add
and
pushl
imul
movsl
add
decl
sub
push
add
lcall
add
fnstsw
add
add
jbe
dec
inc
add
inc
add
leave
fcom
cld
cmpsb
add
add
adc
cmpsl
add
sub
push
add
add
lret
mov
add
inc
add
iret
push
add
ljmp
push
or
add
fwait
out
xchg
pop
dec
and
lock
add
incl
jge
push
jle
test
test
add
incl
sarl
mov
add
daa
add
cmc
adc
ljmp
fmull
jmp
add
add
jb
incl
add
insl
inc
add
add
mov
call
movl
cmp
sahf
cmc
add
popf
jb
call
sub
jae
inc
add
jp
add
pop
lods
jae
ljmp
sub
lret
daa
add
mov
pop
pop
xor
inc
add
and
aaa
daa
add
incl
add
data16
mov
cmp
push
inc
add
fnstenv
inc
add
cltd
fs
movb
and
das
aad
loop
insb
loope
mov
mov
add
ret
push
das
cli
pop
sub
les
sbb
nop
mov
in
sub
decl
lret
cmp
add
repnz
das
stos
push
fildll
add
add
ljmp
pop
jns
push
push
iret
xor
call
jb
pushl
add
pop
inc
add
icebp
jmp
lcall
leave
mov
lock
stos
jge
add
sub
add
stc
sub
ljmp
ret
jle
add
add
lcall
add
jge
add
add
lahf
pushf
scas
mov
ljmp
and
add
ljmp
mov
add
jge
scas
insb
sbb
addl
xor
add
xchg
js
or
ds
add
incl
imul
sub
add
jbe
cmpsb
add
add
add
cltd
fstps
incl
jmp
add
add
push
inc
add
mov
lds
pop
lahf
adc
fcmovnb
add
dec
lods
insl
aam
and
inc
add
push
out
mov
pop
xlat
add
cmp
jmp
sub
add
sub
repnz
mov
dec
inc
add
pop
pop
leave
sub
and
dec
push
bound
jmp
add
inc
add
leave
push
add
pushl
add
jo
sti
int3
jecxz
into
pop
xchg
lock
jo
ljmp
inc
add
add
cli
fcompl
add
and
push
jne
mov
inc
add
test
out
sarb
dec
lods
adc
js
add
adc
incl
push
add
movsb
add
faddl
jbe,pt
pop
cltd
mov
add
loopne
inc
add
xchg
sub
mov
jp
cmp
sub
iret
xlat
addb
movsl
add
clc
bound
dec
roll
add
add
imul
mov
add
jg
dec
fadd
add
jl
rclb
add
inc
add
lret
data16
mov
call
add
xor
call
add
decl
mov
ja
add
test
add
adc
call
cmp
sub
cmp
push
out
addb
xchg
loope
movsb
add
add
imul
fcomps
and
inc
add
or
cld
cmp
out
xchg
jmp
pop
xchg
lds
cmp
inc
add
mov
xor
ret
add
adc
jmp
add
add
xchg
call
imul
bound
lcall
addb
xchg
dec
inc
add
cmp
jns
fwait
xchg
sti
leave
stc
dec
or
ljmp
mov
insb
jecxz
add
addb
sub
insl
xlat
sahf
outsb
sub
jae
lcall
push
add
loope
pusha
add
dec
jmp
adc
jno
incl
call
ljmp
outsb
jp
add
lods
stc
cmp
outsl
or
add
add
fstl
das
jmp
cmp
mov
add
add
pop
in
int3
addb
sbb
movl
jmp
test
repnz
inc
add
rcrb
ljmp
mov
or
add
jge
ret
add
outsl
or
scas
cltd
jg
aas
lea
add
add
push
pop
add
add
add
out
movsb
add
add
pop
in
mov
in
lods
rolb
rolb
cmp
jle
inc
add
mov
addb
add
int
push
fwait
sbb
add
sti
loope
mov
lcall
add
cmc
add
sub
push
add
stos
popf
fcomps
xor
cmp
aas
nop
test
stos
sbb
mov
push
add
ljmp
mov
inc
add
dec
bound
jmp
decl
aaa
dec
mov
lcall
lret
loopne
stos
sub
add
pushl
lcall
out
aad
add
dec
addl
pushl
jno
call
add
cmpsb
add
add
xchg
and
xchg
out
and
lcall
sbb
pop
les
or
out
adc
add
sbb
sbb
add
adc
decb
dec
cmp
outsb
inc
add
adc
pushl
add
xchg
movb
movb
adc
pushl
add
fimull
jno
ljmp
pop
xchg
add
jnp
add
decl
add
daa
add
cmp
add
add
into
int
test
lret
jmp
xchg
push
jno
pushl
into
pusha
add
ss
mov
mov
scas
mov
add
fcoms
pushf
into
addb
ss
mov
xor
mov
add
xchg
add
lcall
push
dec
xchg
stos
adc
ficoml
add
scas
imul
mov
add
outsl
loope
sbb
add
sub
sub
inc
add
out
mov
fcoml
add
jp
add
mov
sti
dec
jbe
fucom
add
add
add
cltd
cmp
mov
push
mov
imul
add
inc
add
add
pushl
add
add
ljmp
lcall
sbb
jg
add
lods
pop
aas
cs
lods
mov
lods
mov
add
add
pop
stos
aaa
call
pusha
add
adc
ljmp
add
push
lahf
or
jae
incl
inc
add
mov
add
jmp
xor
lock
jo
lcall
sbb
inc
add
pushf
sarb
insb
add
movb
mov
add
or
add
mov
add
sub
add
pop
mov
jecxz
sbb
pop
rorb
movb
fcmovnb
add
add
jmp
sub
inc
add
add
sub
decl
mov
loop
and
jmp
jmp
add
add
jb
incl
call
iret
or
inc
add
dec
jae
call
add
sub
add
mov
sub
mov
addb
inc
add
sub
add
pop
jno
jmp
decl
ljmp
add
dec
jno
jmp
add
data16
loop
scas
shll
mov
cmp
inc
add
rolb
xor
dec
push
test
popf
cld
mov
icebp
jg
roll
push
add
mov
jmp
cld
or
data16
cli
push
imul
popf
popf
xchg
int
out
mov
cmpsb
add
add
pop
stc
ljmp
test
xchg
fdivl
cmpsb
add
rolb
inc
add
test
dec
mov
add
pushl
movsb
add
or
dec
in
jmp
clc
lds
in
and
lcall
movsb
add
out
mov
add
aas
loopne
xchg
sub
push
add
cltd
jmp
add
sub
cs
je
push
add
jmp
add
add
push
xchg
jo
decl
adc
inc
add
push
add
inc
add
ds
dec
fs
add
shlb
add
xlat
mov
popf
push
inc
add
in
addl
add
xchg
xchg
inc
add
add
bound
incl
ss
push
add
bound
incl
jmp
incl
int
inc
add
xchg
mov
add
add
or
add
lcall
add
aaa
dec
sbb
out
lcall
pop
pop
add
add
inc
add
in
jp
sub
cmp
movsl
add
and
incl
add
add
and
add
decl
add
inc
add
lcall
adc
pushf
std
pusha
add
out
leave
add
lret
addb
add
xor
inc
add
dec
xor
xchg
outsb
inc
add
imul
iret
inc
add
inc
add
dec
mov
arpl
incl
add
add
add
add
add
jnp
add
sub
movl
out
dec
movl
push
adc
push
stc
jp
daa
add
add
add
imul
jmp
sahf
lcall
and
sti
mov
lcall
add
aas
mov
push
adc
mov
jmp
out
add
icebp
dec
addr16
cmp
add
gs
push
push
add
cmc
xor
incl
decl
sbb
js
add
xchg
mov
add
test
dec
sub
imul
sbb
push
jb
jmp
lcall
lods
lods
dec
dec
mov
pop
outsl
mov
rclb
popf
xchg
mov
add
sbb
ljmp
add
add
shrl
mov
add
sub
mov
add
and
incl
lcall
lret
jecxz
aaa
cmp
add
cmp
add
add
add
xor
aas
test
adc
call
pop
add
jp
in
pop
daa
add
clc
sbb
mov
cmp
cli
sar
ss
xor
call
pop
jmp
add
stc
push
add
call
incl
add
cmpsl
add
add
push
add
pop
push
addb
add
inc
add
jo
inc
add
mov
add
add
arpl
incl
add
ljmp
dec
shll
lea
stc
adc
pushl
cmp
xchg
pop
jecxz
push
add
dec
sub
jle
add
fmul
pop
xchg
xchg
addr16
adc
push
movsb
add
jne
add
add
fucomi
cmp
inc
add
adc
push
xchg
lods
imul
cmp
mov
add
dec
push
add
iret
aas
negb
stos
xchg
mov
add
popa
add
pop
jg
shl
add
out
or
add
add
mov
add
lcall
push
mov
add
add
int
add
arpl
pushl
jmp
mov
add
scas
pop
inc
add
add
jns
mov
loop
addb
and
push
idivb
sub
adc
cmp
mov
incl
add
inc
add
in
sti
and
lcall
scas
xor
add
icebp
in
and
lcall
inc
add
enter
xor
lcall
cmpsb
add
call
lds
fldt
pop
and
inc
add
add
mov
out
mov
jo
ljmp
mov
lods
pusha
add
mov
add
jmp
sbb
outsb
fwait
mov
add
lds
mov
adc
add
cmp
movb
add
cmp
cltd
int3
xor
pushl
add
insb
iret
stc
xchg
inc
add
mov
lea
cmpsb
add
add
sbb
add
mov
jmp
cmp
decl
add
out
adc
jmp
push
jecxz
jmp
mov
mov
data16
add
add
jp
inc
add
add
add
mov
jle
add
sub
push
add
addl
cmp
shlb
jne
xchg
arpl
cmp
mov
and
pushl
add
adc
jl
jg,pt
add
test
stc
cmpsb
add
add
add
ljmp
loopne
push
add
cltd
cmp
mov
sbb
cltd
push
add
inc
add
scas
or
test
inc
add
lods
jnp
mov
inc
add
add
mov
aas
sbb
lahf
push
add
shrl
aam
aam
mov
add
dec
pop
movsl
add
add
into
repnz
add
cltd
adc
jecxz
dec
shrb
popa
add
outsl
stc
and
ljmp
stos
and
adc
pushl
push
leave
cmpsl
add
add
in
pop
inc
add
add
add
in
fsubs
fsubrs
mov
out
jg
add
lea
faddl
pushl
les
sub
movsl
add
push
movb
mov
push
jl
xchg
lock
rolb
or
add
push
add
push
add
iret
pop
stos
sub
sarl
rolb
add
push
add
sub
insb
and
sub
add
stos
bound
ds
add
xchg
icebp
lcall
std
fldt
add
fcompl
test
xchg
push
add
repnz
cmp
lods
bound
cmp
add
add
xchg
movsb
add
add
push
das
popf
movsl
add
loope
mov
incl
add
add
sub
add
call
movsb
add
mov
push
add
ret
lods
or
mov
cmp
add
scas
mov
push
add
dec
bound
call
incl
add
push
addl
mov
sbb
add
mov
add
xor
lcall
add
jl
add
or
xchg
adc
jmp
add
mov
add
adc
mov
cmp
aas
mov
add
cmpsb
add
push
clc
sub
pop
or
add
int
jle
scas
ret
add
shll
test
dec
adc
jns
xchg
imul
add
cltd
xlat
xchg
int3
push
add
mov
addb
sub
add
mov
push
add
ffreep
add
jns
xchg
xchg
fisubs
add
jecxz
inc
add
std
xchg
addb
xchg
sub
mov
bswap
cmpsb
add
pushl
mov
decl
negb
mov
in
outsl
mov
sub
insb
and
add
insl
fsts
notl
cmp
add
add
in
jmp
add
and
mov
call
movb
add
rolb
push
add
lret
pushl
adc
lcall
add
ja
add
push
add
mov
add
call
push
push
fbld
add
push
add
mov
add
call
add
jmp
roll
push
add
popf
mov
add
out
stc
jb
ljmp
add
shlb
add
insb
fwait
and
inc
add
mov
add
les
mov
adc
mov
pop
jns
cmp
xchg
jl
add
push
add
jecxz
data16
jo
cli
or
mov
add
jmp
dec
mov
ret
add
pop
mov
add
add
mov
clc
sub
mov
test
addl
xchg
add
xor
mov
dec
inc
add
imul
add
add
pushl
sbb
sub
jmp
add
xor
add
loop
mov
add
cltd
fisubs
add
mov
add
shlb
add
decl
mov
add
inc
add
dec
cmc
mov
scas
dec
movsb
add
addb
mov
add
scas
mov
add
outsb
mov
add
enter
jg
pop
add
mov
pop
mov
add
roll
shlb
add
in
xlat
loopne
mov
ljmp
sbb
adc
jnp
stos
fbld
cld
or
and
ljmp
inc
add
and
pushl
repnz
add
add
add
inc
add
imul
add
addb
add
shrl
pop
test
rclb
movl
mov
add
pop
hlt
loope
xchg
and
mov
xchg
and
pushl
jecxz
pop
jmp
add
push
fistpll
add
jmp
add
add
rclb
hlt
leave
test
jae
cmp
lahf
mov
les
repnz
mov
es
add
add
in
jmp
add
mov
dec
repnz
lret
cld
add
cmp
lods
fldcw
add
test
jo
incl
aaa
test
jle
aad
add
and
incl
add
push
inc
add
jns
inc
add
add
pop
xchg
add
ljmp
in
cmp
ljmp
shlb
add
int3
sbb
add
ljmp
add
test
clc
pop
add
adc
decl
repz
sbb
add
jmp
inc
add
data16
add
ljmp
mov
mov
les
sub
lret
mov
out
adc
add
aaa
out
pop
das
push
add
xor
lcall
add
xchg
rcll
add
jl
int3
int3
pop
add
jmp
push
add
cs
jae
lcall
test
mov
mov
sbb
push
cs
add
pop
frstor
add
popf
jl
inc
add
jb
mov
leave
addb
lock
outsl
sbb
add
push
pop
mov
push
movsb
add
add
dec
jg
add
add
push
iret
mov
add
incl
mov
add
add
adc
jmp
leave
mov
add
mov
testb
add
sahf
jecxz
pop
in
or
add
rcr
inc
add
test
arpl
lcall
add
or
mov
adc
stc
and
add
mov
loopne
mov
add
cld
decb
add
stos
aam
add
outsl
bound
jmp
cmpsb
add
add
pusha
add
push
xor
dec
sub
iret
fldenv
call
add
push
dec
aaa
sbb
add
sub
add
add
add
dec
lods
or
add
add
inc
add
add
mov
add
add
loopne
or
add
cmc
cmp
jae
ljmp
loop
xchg
mov
add
add
add
call
add
inc
add
pushf
mov
lcall
add
stc
mov
shrl
push
aaa
mov
push
add
das
xor
lcall
add
in
pop
jmp
decl
rcr
mov
pop
dec
pop
pop
push
add
das
add
dec
negl
dec
out
mov
pop
loopne
popf
mov
adc
fstpl
dec
xor
pushl
cmp
add
std
stos
ficoms
loop
xlat
repnz
jbe
add
cmp
add
dec
cmp
push
xor
cli
jecxz
imul
pop
loope
data16
add
cld
imull
push
add
sub
jb
roll
push
fcmovne
jg
mov
mov
add
call
and
inc
add
mov
push
movl
scas
jl
push
in
ja
lahf
popf
pop
sbb
js
dec
imul
or
stc
inc
add
add
add
pushl
add
es
rol
add
jecxz
xor
jp
mov
adc
jmp
incl
out
frstor
add
ds
repnz
out
aas
inc
add
mov
xchg
pop
adc
incl
iret
dec
xchg
cmpsl
add
add
dec
je
or
jp
add
pop
xchg
fisubrl
add
addb
xor
ljmp
add
lret
pcmpeqw
add
add
addl
jae
call
cld
cli
addl
dec
pop
popa
add
and
jmp
add
and
call
pop
dec
jge
add
ds
icebp
les
or
xchg
into
js
jno
jmp
lahf
sub
fucomip
fldenv
jp
add
mov
sbb
adc
add
jnp
add
mov
add
mov
lea
cmp
roll
mov
bswap
inc
add
jle
dec
lret
in
int
add
add
pop
mov
add
pushl
pushl
add
ljmp
add
enter
rcll
cmc
xor
call
add
divl
ds
add
push
popa
add
rolb
iret
scas
mov
call
sbb
add
push
lret
add
hlt
add
xor
lcall
shl
add
adc
ljmp
pushl
add
pop
pop
cli
imul
lock
aam
jbe
and
jmp
jg
mov
dec
jo
decl
enter
fnstcw
add
add
add
call
add
popf
lods
aaa
nop
and
call
or
loopne
sarb
out
aad
add
jns
mov
or
in
pop
ret
add
fcmovbe
mov
add
push
pop
out
inc
add
mov
inc
add
mov
int
add
ja
es
call
add
pop
sub
fwait
jb
lcall
jle
jne
add
jbe
repz
arpl
lcall
lret
add
add
mov
popa
add
outsb
add
jbe
add
add
out
pop
lods
nop
addl
or
push
add
pop
add
leave
aad
loop
mov
add
xor
add
and
ljmp
add
mov
add
cmp
testb
inc
add
je
add
in
inc
add
push
adc
jmp
add
int3
or
lret
pop
mov
cwtl
mov
repz
call
mov
pop
sub
incl
add
lcall
add
fistps
bswap
jl
add
data16
pushl
add
iret
jmp
adc
lcall
fmuls
sbb
mov
add
sbb
add
xchg
cwtl
pop
fnstenv
mov
add
add
sahf
pop
add
jmp
add
push
add
add
aas
mov
cmp
rclb
incl
pop
add
add
lcall
cmp
sub
adc
in
xor
inc
add
nop
xchg
inc
add
stos
pop
push
add
add
add
testb
add
jo
mov
add
sbb
push
push
rorb
jbe
mov
addb
cmc
cli
rcr
mov
aaa
pop
aam
lret
add
mov
adc
addl
shlb
jmp
add
fwait
inc
add
xchg
in
add
add
dec
xor
decl
movl
or
mov
add
out
mov
rorl
out
xlat
sub
push
add
cli
test
iret
hlt
adc
add
sub
add
add
push
add
jp
add
adc
pushl
ljmp
mov
mov
jb
lcall
mov
mov
test
add
add
pushl
add
lds
outsb
jmp
add
into
dec
in
movsl
add
xchg
and
inc
add
ds
add
movsb
add
scas
cmp
add
sti
jnp
add
into
push
add
or
fists
add
mov
iret
sub
push
cltd
cmp
std
insb
xchg
pop
scas
lcall
into
inc
add
mov
loop
clc
xor
lcall
add
inc
add
add
add
push
add
inc
add
adc
cli
pop
pop
pushf
outsb
inc
add
add
sub
xchg
xchg
sahf
mov
add
add
push
xchg
sbb
add
mov
push
add
outsl
hlt
jnp
add
add
inc
add
add
mov
jne
push
add
push
or
mov
xor
call
add
lock
inc
add
inc
add
hlt
lret
add
pushl
add
jns
pop
sbb
int
add
add
add
mov
add
mov
ds
push
add
add
sbb
mov
add
add
enter
int
fs
ficoml
incl
add
push
xchg
pushf
fisttpll
mov
add
push
add
sbb
shll
ljmp
push
add
cmc
or
add
sbb
add
js
test
addl
mov
add
test
cmp
adc
jmp
add
clc
sbb
lret
push
add
movsl
add
add
add
lcall
lahf
mov
cli
xchg
popa
add
out
mov
add
enter
aas
lods
jge
roll
add
test
xchg
mov
movsl
add
sub
flds
jmp
pushl
int3
mov
mov
add
mov
in
loope
mov
dec
outsl
dec
add
lcall
add
xlat
fiadds
pop
cld
cmp
sub
add
cmp
enter
add
jb
jmp
add
call
outsl
or
add
iret
stos
leave
add
incl
mov
cmp
scas
pop
add
cmp
pusha
add
sbb
cmp
js
cmpsl
add
add
add
sub
pusha
add
lcall
or
cmp
xchg
xchg
int
add
cmp
sti
enter
add
mov
lcall
jnp
mov
adc
call
jmp
loope
decb
test
dec
xor
add
mov
jb
incl
add
call
push
sub
mov
add
add
pushf
jecxz
and
decl
jae
decl
add
pop
ds
mov
add
lds
mov
shlb
int3
dec
or
add
adc
jmp
adc
call
add
push
adc
push
ss
ljmp
sub
add
cmp
add
incl
loop
call
mov
add
add
jl
xchg
mov
sar
cmp
mov
add
add
sub
addb
sbb
sub
add
push
add
pop
fmull
add
add
push
lods
notb
add
inc
add
add
add
stos
xor
ljmp
mov
addb
add
enter
adc
call
cli
cwtl
ljmp
aad
js
pushl
in
dec
jle
inc
add
addb
mov
and
ljmp
add
add
sahf
fists
add
and
out
fmuls
loope
test
sub
jp
lods
leave
add
lcall
and
push
or
sbb
dec
lock
fwait
pop
jae
in
shl
ss
popf
pop
jge
add
movl
cmp
clc
pop
push
inc
add
mov
add
cmp
add
and
pusha
add
push
pop
mov
add
cmc
cmp
and
mov
adc
xor
hlt
jo
jmp
pushl
jmp
js
add
add
push
mov
push
mov
mov
push
rolb
sbb
test
roll
push
add
xor
call
pushl
add
sub
jns
shlb
add
push
add
ja
cmp
pop
add
fucomi
popf
sub
add
jecxz
iret
int3
lcall
add
add
aas
lods
addl
cmc
push
dec
dec
in
cli
test
pop
movb
add
sbb
add
pop
insb
imul
jge
add
lcall
inc
add
mov
push
add
pop
scas
and
jg
push
add
xor
pushl
jmp
popa
add
out
imul
add
cmp
add
jl
add
sbb
inc
add
movb
xor
pushl
pushl
outsl
jae
incl
ret
add
inc
add
add
fmulp
test
inc
add
rolb
add
cmp
jmp
call
jl
add
lcall
and
incl
pop
fisttpl
test
outsl
mov
inc
add
xor
add
daa
add
dec
jmp
call
add
scas
or
cmp
add
decl
out
adc
int
dec
arpl
incl
jmp
and
call
mov
add
and
pushl
mov
mov
add
cmpsl
add
js
popa
add
mov
cmp
repz
mov
adc
add
add
add
mov
adc
jmp
add
cmc
and
lcall
dec
inc
add
add
xor
add
add
cmp
mov
add
add
or
lahf
jecxz
and
jmp
lds
dec
imul
xchg
xor
ljmp
test
xor
pop
rclb
imul
fwait
cmpsb
add
mov
add
add
bound
lcall
sbb
iret
mov
je,pt
or
xchg
movsb
add
mov
aam
bsr
jne
dec
iret
push
mov
mov
test
add
add
sbb
int
fadd
add
mov
jmp
iret
sub
push
fs
add
and
pushl
arpl
pushl
add
pop
xor
call
mov
ds
nop
or
fdivrl
adc
inc
add
jns
add
mov
add
jl
rolb
add
push
xchg
enter
add
fcomps
sarl
dec
xor
add
add
add
jmp
add
or
add
push
add
js
adc
jmp
rcl
mov
inc
add
int
addb
add
mov
xor
cmp
add
addl
adc
lcall
add
jnp
insl
leave
push
add
fwait
js
in
xchg
pop
fbstp
mov
scas
imul
mov
pop
dec
mov
les
xchg
inc
add
out
sahf
cmpsl
add
incl
add
jp
enter
jmp
mov
inc
add
dec
pop
lahf
adc
dec
or
imul
data16
call
adc
call
int
lods
movl
add
decl
add
add
add
push
add
lret
lcall
sbb
jno
lcall
lods
add
call
add
lds
dec
cmp
add
iret
sub
mov
add
mov
add
sub
add
xor
decl
add
add
push
xor
inc
add
nop
pop
sub
adc
pushl
add
scas
rdtsc
add
cltd
fwait
lret
rolb
add
mov
add
cmp
mov
push
mov
add
push
add
aaa
dec
dec
pop
pushf
mov
call
add
jp
sahf
sub
add
add
incl
add
leave
bnd
add
jnp
add
jno
decb
inc
add
cmp
add
add
sbb
add
out
pop
sub
and
call
out
loope
jecxz
push
add
add
scas
or
xchg
or
dec
sbb
add
js
add
mov
add
push
add
ret
add
loope
das
inc
add
and
mov
add
ss
add
push
push
mov
sbb
jg
jge
aas
stc
mov
repz
pop
adc
test
push
inc
add
add
add
add
call
sbb
add
add
pop
push
pusha
add
adc
lcall
sub
sti
sti
das
aam
scas
xchg
xchg
repnz
adc
incl
jmp
add
mov
mov
add
xchg
repnz
mov
shrl
daa
add
dec
les
cwtl
lcall
divb
inc
add
movsl
add
loope
adc
decl
insb
addl
add
cltd
and
ficoml
sbb
add
leave
inc
add
add
sbb
and
adc
pusha
add
in
mov
add
lcall
in
enter
cmp
add
adc
xchg
pop
adc
call
push
xor
pushl
cli
pop
shl
add
mov
add
aaa
push
add
or
add
fwait
cmp
sub
or
push
stc
jae
lcall
repnz
add
inc
add
lock
in
jbe
add
xor
xchg
jae
call
in
mov
add
imul
sub
add
pop
inc
add
add
pop
idivb
add
xor
call
movb
scas
int
mov
add
lods
xchg
aas
jmp
xchg
cmc
sbb
sub
jne
bound
jmp
add
and
rolb
add
testb
add
cmp
js
or
add
xchg
sub
add
add
mov
mov
xchg
sarb
dec
aam
add
add
add
add
add
xchg
jp
xchg
xchg
into
mov
sbb
mov
and
jmp
add
sysret
add
dec
nop
std
push
add
xchg
or
add
mov
dec
jl
xchg
inc
add
cmp
add
lods
jl
add
das
add
add
es
pusha
add
jmp
add
sub
ret
aas
adc
fisubrl
out
sub
addl
and
lcall
fs
pop
mov
add
aaa
out
push
add
lds
pop
mov
outsl
test
ljmp
sub
mov
add
jo
call
or
xchg
cmpsb
add
push
jns
gs
imul
adc
add
roll
sarb
in
lock
add
fnstcw
aaa
iret
add
ljmp
addl
fwait
jl
add
cld
jne
jecxz
mov
movl
fwait
add
jl
push
movsl
add
ljmp
shrl
enter
add
pop
sbb
and
jo
fbstp
mov
sbb
add
or
scas
sub
add
add
jbe
add
in
xor
dec
inc
add
mov
add
out
push
add
movsbl
add
add
loope
push
add
jbe
dec
mov
fdivl
mov
ret
xchg
push
add
sarl
mov
add
stc
xor
jmp
pop
fsubs
add
jo
call
add
incl
push
cmp
mov
add
cmp
add
out
mov
mov
add
dec
pop
sub
mov
lcall
adc
call
add
mov
pop
and
jmp
int3
jl
add
sbb
pop
in
add
cli
sbb
out
shll
ljmp
push
pop
jnp
mov
add
inc
add
dec
jge
or
add
cmp
fdivrl
outsl
cltd
jmp
iret
dec
and
call
inc
add
iret
jp
xchg
sti
cmc
mov
inc
add
add
push
add
jnp
push
sbb
stc
adc
incl
in
mov
add
bound
clc
je
add
and
lcall
pop
pop
repnz
lds
jo
call
add
add
ss
out
xchg
mov
jbe
sbb
pop
movsl
add
mov
add
faddp
add
and
dec
xchg
cmp
add
mov
fbstp
jle
mov
ljmp
push
xchg
xchg
pop
add
add
sub
xchg
adc
jmp
add
add
jne
pushf
addl
add
sub
add
mov
mov
ja
jne
add
fcmovnb
add
add
dec
or
fwait
dec
cs
add
xor
aad
data16
lcall
fwait
mov
in
int3
inc
add
push
xor
mov
mov
add
add
add
add
push
ja
js
add
add
mov
add
stc
in
addl
in
jne
add
jne
add
mov
mov
lahf
insl
sbb
pushl
pop
mov
stc
jne
add
add
add
sbb
add
test
jmp
inc
add
call
add
unpckhps
add
add
aaa
sub
dec
les
sbb
add
mov
mov
add
pop
sbb
add
leave
scas
or
add
sbb
bound
call
incl
add
fsub
add
dec
movsb
add
add
push
add
in
jnp
scas
pop
sub
add
lcall
add
push
mov
clc
add
cmp
xchg
xchg
sarb
cmp
mov
mov
divl
add
add
test
fisubs
add
or
or
daa
add
rorl
scas
lret
cli
lahf
mov
lock
cmp
insb
test
mov
insb
inc
add
fs
xchg
inc
add
add
sub
lahf
add
incl
jmp
add
push
add
cmp
add
pop
push
inc
add
out
xor
add
popf
cwtl
inc
add
js
addl
and
jmp
add
pop
inc
add
sbb
and
call
add
or
jmp
add
add
jmp
add
addb
add
add
aam
add
jne
jbe
xchg
les
xchg
loop
daa
add
inc
add
add
add
and
jmp
fdivrp
neg
fsubr
pop
test
out
add
aas
jmp
add
bound
ljmp
cmp
aam
add
add
add
xchg
incl
test
add
lret
roll
add
popa
add
xchg
imul
addl
push
adc
incb
mov
sti
adc
jmp
xchg
lods
mov
xchg
pop
lret
jmp
iret
sbb
add
mov
or
mov
mov
loope
adc
push
rorb
push
je
add
js
add
add
sbb
ljmp
loop
inc
add
adc
jmp
add
or
cmp
fstpt
adc
ljmp
addl
add
mull
ljmp
out
sbb
fisttpll
js
add
loop
and
enter
sbb
add
jge
jno
lcall
mov
add
jae
incl
test
jbe
hlt
lods
xchg
ja
add
mov
or
mov
jbe,pt
jp
inc
add
push
xchg
or
add
ljmp
add
push
add
add
incl
mov
insb
dec
push
add
inc
add
out
shl
add
jmp
cmp
pop
add
inc
add
add
dec
movsb
add
add
sub
test
test
push
fprem
cli
out
jns
jecxz
clc
jp
addr16
push
xlat
call
or
add
add
lcall
sbb
pop
push
jmp
add
jnp
add
cmp
sbb
mov
add
sub
insl
out
stos
pop
movl
mov
xor
fists
icebp
out
mov
add
arpl
lcall
incl
call
add
roll
mov
add
add
xchg
fiadds
pushl
jmp
loope
dec
jne
movl
cmp
adc
lcall
test
push
add
push
mov
arpl
pushl
jp
cwtl
xchg
out
inc
add
dec
push
add
add
xchg
roll
or
add
add
in
pop
pop
jae
incl
add
lods
pop
in
call
add
lods
adc
call
inc
add
xor
mov
add
enter
call
push
std
mov
dec
fstl
jmp
add
mov
lret
mov
mov
add
call
mov
add
add
cmp
add
fyl2xp1
jl
add
add
mov
cmpsl
add
add
loopne
xor
pop
lea
ret
add
add
add
add
inc
add
or
add
dec
cld
lea
iret
ds
xchg
mov
mov
sub
add
pop
jecxz
into
mov
add
and
add
ret
add
shl
add
mov
xor
call
add
sbb
roll
jmp
les
shl
or
add
mov
add
add
ljmp
mov
add
lods
sbb
add
xchg
ss
mov
call
xor
dec
ja
jns
mov
add
and
call
fstpt
daa
add
in
mov
jp
mov
cmp
pop
imul
shlb
add
sbb
jecxz
inc
add
out
arpl
call
decl
cmp
jmp
add
pop
pop
push
fldcw
add
xchg
pop
loope
in
aas
insl
movl
stc
sub
pop
jp
adc
add
les
jmp
xor
dec
adc
lcall
scas
popa
add
test
pusha
add
lods
pop
or
add
popf
mov
and
call
add
call
movsl
add
repz
add
cmp
jl
add
aaa
mov
xor
pushl
cmpsl
add
pushl
push
xor
decl
rolb
lds
in
xor
dec
push
dec
pop
pop
dec
ret
sub
add
decl
sbb
stos
leave
mulb
add
and
out
dec
pop
jmp
sbb
cmovg
outsb
jmp
add
or
xchg
mov
mov
jp
add
cmp
imul
pop
jmp
cld
fdivrl
pop
sbb
ljmp
sti
push
hlt
sub
add
xchg
cs
jns
add
fdivl
add
dec
mov
lcall
xor
pushl
lcall
lea
add
add
imul
xor
dec
int3
movsl
add
pop
inc
add
pop
sbb
test
xchg
cmp
xor
lcall
or
mov
add
add
inc
add
jbe
mov
add
mov
rcl
fdivrl
mov
repz
sti
out
sub
mov
add
add
add
sub
aaa
mov
add
add
js
jnp
add
add
lock
js
push
add
sbb
inc
add
movb
sti
sbb
add
add
test
loopne
adc
loopne
lahf
mov
icebp
js
xlat
mov
add
push
loope
jmp
add
adc
push
xchg
cwtl
fidivs
decl
pop
scas
jnp
sahf
icebp
push
lret
call
sub
add
dec
add
lcall
sbb
stos
lods
testb
int3
and
fcmovbe
sahf
add
jg
jae
jmp
add
xchg
add
mov
addr16
add
in
scas
enter
add
lahf
adc
dec
jne
or
xor
ljmp
xor
add
push
roll
outsl
mov
ss
and
lcall
std
out
out
repz
jno
js
add
cli
and
faddl
jmp
add
movb
mov
add
inc
add
loope
repz
sub
add
ss
mov
add
inc
add
test
fildll
cmc
dec
mov
dec
add
add
push
add
add
jbe
add
add
notb
cmp
sub
out
ljmp
dec
inc
add
call
std
jnp
add
out
push
add
or
add
fstps
mov
add
or
jle
or
push
add
jno
call
das
xchg
js
sub
pop
add
rolb
imul
add
popa
add
icebp
add
out
mull
jmp
sub
pushf
adc
adc
mov
add
or
lcall
add
arpl
decl
lds
xchg
repz
add
sbb
insl
mov
cmp
add
scas
loop
inc
add
stos
jl
push
rclb
decl
add
mov
and
inc
add
scas
or
decl
pusha
add
push
lahf
dec
cld
sbb
add
int3
cs
movl
int3
shll
data16
and
decl
push
add
arpl
push
push
test
incl
fldcw
add
inc
add
add
add
addb
test
mov
jl
ja
add
pop
hlt
mov
sub
add
adc
pushl
add
leave
adc
add
out
sub
add
jmp
pushl
add
in
lret
mov
imul
decl
add
ljmp
movb
lcall
dec
push
add
push
jb
ljmp
out
stos
les
sbb
aas
roll
sbb
add
bound
call
decl
add
or
call
inc
add
add
add
dec
adc
decl
xchg
mull
add
in
cld
adc
jmp
add
add
icebp
rolb
add
call
test
add
jle
add
add
cmp
add
xor
decl
out
add
imul
fisttps
pop
add
jmp
add
jae
decl
xlat
in
aaa
leave
out
scas
mov
mov
insb
push
add
sub
cli
add
xchg
test
mov
lcall
imul
add
mov
inc
add
add
incl
bnd
add
cmc
in
pop
add
movsb
add
jno
call
xchg
push
fcmovnb
add
insb
adc
jp
stos
adc
sub
push
add
mov
cmp
push
add
add
add
movl
arpl
jmp
mov
das
add
inc
add
xchg
xchg
push
add
mov
int
ret
add
pop
imulb
sbb
mov
in
xrelease
push
add
pusha
add
scas
xchg
ja
inc
add
popa
add
inc
add
cmp
add
stos
insb
rcrl
std
hlt
stos
mov
xchg
or
jmp
fisttps
cmp
in
lret
call
mov
lret
aam
sahf
mov
ljmp
add
movsl
add
ljmp
inc
add
mov
or
jae
pushl
dec
addb
push
addl
iret
mov
xchg
jle
add
add
inc
add
or
pop
or
add
movsl
add
popa
add
in
sbb
add
decl
inc
add
stos
outsl
add
push
mov
movb
data16
add
add
ror
xchg
stos
mov
mov
int
xchg
scas
lret
adc
pushl
jmp
add
add
push
divb
adc
jl,pt
bound
lcall
rol
add
cwtl
test
mov
jne
stos
pop
inc
add
ret
add
add
add
filds
cmp
incl
add
scas
jmp
sti
jp
imul
add
addb
cmp
imull
add
sahf
lods
or
mov
mov
fisttpll
in
addb
jae
lcall
sti
stos
push
nop
pushf
push
add
shlb
test
decl
add
cmp
shrl
add
jp
add
push
and
cmp
iret
xor
decl
jno
incl
add
pop
add
inc
add
in
popl
add
xchg
scas
adc
shl
popa
add
call
and
jmp
add
xchg
pop
insb
add
or
add
dec
inc
add
pop
pushf
scas
mov
ljmp
loopne
lock
insb
mov
add
fwait
add
loop
stos
movl
sbb
popa
add
mov
fwait
js
ja
cmc
mov
pop
fdivrs
mov
sbb
add
popa
add
loope
in
out
addb
cmp
xor
lcall
imul
xor
decl
leave
sbb
add
add
adc
jmp
add
add
cmpsl
add
clc
jp
rolb
mov
imul
and
lcall
or
fisttpll
aaa
or
push
clc
inc
add
cli
cmp
icebp
push
add
add
movl
decl
cs
add
sbb
fidivrl
add
arpl
incl
insb
xchg
jbe
out
dec
in
jae
decl
idivb
or
dec
addb
add
sbb
dec
inc
add
xchg
dec
xchg
scas
outsl
inc
add
in
ret
js
add
push
rolb
add
mov
add
pop
jo
pushl
push
xchg
dec
fldcw
add
add
sub
push
push
scas
sub
pushl
inc
add
mov
add
shrb
xchg
out
inc
add
aam
jmp
add
mov
or
pop
fstl
jae
call
icebp
dec
inc
add
jecxz
mov
pushf
aas
mov
add
decl
adc
mov
leave
repnz
add
add
nop
addb
xchg
pop
mov
add
mov
cmp
pop
in
pusha
add
inc
add
ficoms
xchg
rol
add
add
adc
jmp
add
bound
decl
mov
hlt
rolb
int
add
hlt
bound
incl
clc
adc
and
ljmp
xor
mov
add
fdiv
scas
jb
decl
add
adc
call
flds
enter
jns
inc
add
inc
add
stos
push
ret
add
jmp
add
hlt
int3
push
add
mov
imull
push
jns
ret
add
add
add
out
js
add
cmpsl
add
jmp
add
jg
add
pop
int
inc
add
loop
xchg
roll
add
cmc
adc
pushl
or
call
xor
pushl
call
mov
cmc
cli
dec
or
and
loop
pop
test
int3
into
std
arpl
pushl
pop
xor
ljmp
add
pop
add
aas
cmp
mov
add
inc
add
jne
push
add
sbb
movl
rolb
gs
pop
je
add
adc
call
add
add
mov
pop
nop
sbb
add
js
add
xor
pushl
add
sub
push
add
vmwrite
adc
inc
add
pop
push
add
add
add
dec
cmp
add
add
mov
add
add
lret
add
inc
add
mov
ret
add
add
mov
cmp
negb
stos
call
mov
bound
inc
add
sti
adc
lcall
insl
dec
xchg
out
adc
arpl
incl
add
sub
add
xchg
dec
rcrb
movb
cltd
jle
dec
call
jmp
add
mov
mul
add
add
loopne
or
std
cwtl
and
ds
inc
add
add
add
or
in
jno
decl
or
add
add
mov
mov
cmpsb
add
push
enter
addr16
nop
adc
ljmp
push
out
hlt
sub
add
scas
sub
fwait
or
mov
into
js
add
pop
addl
mov
call
je
dec
mov
add
icebp
ljmp
dec
mov
call
pushl
jmp
incl
add
jo
lcall
les
hlt
stos
pop
adc
add
xor
mov
add
stos
xor
pushl
add
sub
sbb
xor
decl
mov
add
add
js
add
add
push
mov
leave
addl
add
mov
repnz
jle
add
out
nop
insb
roll
add
add
xor
fstpt
add
outsl
and
pushl
into
divb
lds
pop
jne
test
add
add
popa
add
iret
ret
add
or
add
sti
lds
xchg
out
aam
repz
cmp
add
xor
jmp
mov
jp
sti
cmp
test
and
decl
je
and
jmp
add
pop
loop
dec
into
movsl
add
xchg
pop
dec
repnz
out
insl
mov
adc
xchg
fisubrs
fmuls
add
jecxz
popa
add
jae
cmp
addl
add
push
add
add
jae
decl
js
add
add
add
in
mov
add
or
add
or
mov
decl
add
add
je
add
add
add
pop
aas
out
enter
push
lahf
pushf
icebp
imul
mov
sub
add
mov
add
lcall
xchg
hlt
xor
lcall
add
add
shrb
add
pushf
fisttpll
add
call
add
cwtl
movsb
add
inc
add
in
jge
add
lret
int3
mov
add
dec
cwtl
dec
in
lea
stos
cs
xor
lcall
adc
mov
add
inc
add
dec
or
add
dec
pop
mov
jmp
add
push
add
dec
movb
add
sbb
add
inc
add
add
add
inc
add
add
incl
inc
add
adc
call
sbb
pop
pushf
stos
mov
add
add
sbb
xchg
push
add
inc
add
mov
inc
add
mov
add
cmp
mov
jbe
dec
iret
bound
ljmp
add
sub
dec
sahf
jp
insb
out
xchg
jno
jp
add
int
stos
outsl
aaa
addr16
sbb
sbb
int
add
pop
int3
mov
ret
add
xchg
add
add
pop
push
inc
add
add
xchg
cmp
je
pushl
cld
xor
pop
in
lds
fidivs
add
inc
add
pop
es
and
call
std
xlat
or
out
mov
mov
xchg
ljmp
in
shlb
call
pushl
jnp
pop
scas
out
adc
jmp
add
add
add
dec
sub
stc
inc
add
add
movsb
add
add
dec
rcr
cs
jae
call
movb
cmc
jmp
add
sti
push
add
sbb
push
add
daa
add
mov
cmpsl
add
loop
cmp
loope
add
push
dec
jl
scas
sub
lcall
stc
xor
inc
add
inc
add
stos
xor
xchg
rolb
sub
mov
mov
push
aas
adc
mov
pushf
pop
push
push
mov
add
push
add
movsb
add
add
push
hlt
mov
jge
add
or
xor
pushl
jb
fbstp
add
pop
call
loope
rcll
jno
mov
add
les
pushf
pcmpeqw
push
popa
add
pop
fsubr
lea
leave
movsb
add
add
add
pushf
jno
jmp
add
add
dec
mov
scas
ret
inc
add
das
into
out
push
out
xchg
pop
or
add
pop
jecxz
dec
jbe
add
in
sahf
pop
sub
or
test
insb
fdiv
hlt
sahf
xchg
hlt
push
aaa
addl
and
ljmp
call
in
repz
add
add
es
mov
add
das
out
xor
inc
add
decl
add
popa
add
adc
add
mov
jp
add
add
jno
call
jns
add
lods
mov
xor
call
xchg
push
jg
call
mov
add
add
mov
sub
add
sub
imul
dec
and
jmp
addr16
add
lcall
add
add
rolb
addl
out
add
and
pushl
call
mov
jl
push
add
pop
in
out
cmpsl
add
add
add
fmuls
cmp
lods
push
add
repz
out
xor
and
jmp
sub
add
addl
movb
leave
add
lock
lcall
lds
outsl
push
sti
push
xor
decl
dec
mov
push
add
add
out
mov
jp
add
add
jb
incl
push
push
std
push
movsl
add
inc
add
repnz
add
jmp
test
movl
pop
daa
add
js
add
ljmp
testb
push
popf
movl
push
add
call
jge
test
lea
ret
repnz
outsb
xor
bound
ljmp
or
pushl
ss
lock
add
add
and
pushl
add
inc
add
xchg
push
aam
hlt
ljmp
add
loopne
inc
add
add
jle
add
add
cmp
aaa
sti
sbb
jnp,pt
xor
lcall
or
add
arpl
dec
test
xchg
loopne
sbb
lahf
dec
movl
out
jbe
mov
arpl
incl
add
fiadds
incl
call
inc
add
addb
add
gs
enter
add
push
add
xchg
mov
dec
mov
or
std
out
fisubl
add
aad
adc
add
add
dec
lock
addb
int
push
add
inc
add
cli
cmp
shlb
insl
jbe
add
sub
adc
decl
dec
sahf
lods
lock
jns
add
jle
in
pusha
add
jge
add
add
add
incl
add
jno
sti
or
packsswb
inc
add
add
lea
jle
lea
mov
movsb
add
jne
add
and
repz
add
add
incl
inc
add
out
leave
mov
add
loope
out
xchg
adc
incl
dec
cmp
add
fsubr
fwait
and
ljmp
add
idivl
adc
lods
mov
stos
or
sub
add
out
jbe
add
add
in
and
sub
mov
add
add
sbb
in
adc
inc
add
add
lcall
adc
fstpl
add
sti
cmp
adc
fmuls
xor
incl
stc
imul
add
insb
pop
push
push
add
std
lods
xchg
inc
add
jno
jmp
sbb
add
xchg
mov
mov
into
outsb
out
xlat
cmc
in
add
add
add
call
mov
incl
mov
add
add
repz
pop
pusha
add
nop
sub
dec
pop
cmc
movsl
add
jle
fsubs
add
aaa
into
and
jle
mov
jbe
add
mov
loopne
add
inc
add
jno
lcall
insb
sahf
das
xor
decl
xor
lcall
cltd
imul
lock
or
add
add
add
cld
add
call
add
dec
inc
add
sbb
or
pop
fdivrl
repnz
jmp
add
cmp
fcmovbe
popf
loopne
and
call
add
add
ljmp
pop
add
call
add
sub
ljmp
inc
add
fbld
stos
cmp
jnp
add
ds
rolb
cmc
add
add
xchg
lret
sti
in
inc
add
fdivl
adc
xchg
not
cmp
aaa
and
call
in
dec
outsl
out
add
call
in
xchg
push
add
pop
xchg
into
lcall
pop
nop
cli
sub
add
add
ret
add
pusha
add
jge
roll
add
ficompl
push
push
add
mov
fiadds
pop
and
ljmp
mov
push
add
push
pop
xlat
mov
add
sub
mov
pushl
inc
add
sbb
or
mov
mov
or
dec
xor
call
pop
addl
fidivl
add
mov
xchg
sbb
into
ret
add
les
out
cmp
rorb
imul
movl
add
stos
push
into
ss
clc
jg
push
push
add
out
imul
add
cmp
add
add
aam
ss
pop
add
add
or
mov
xchg
and
jmp
lock
add
mov
lods
fidivl
add
mov
roll
incl
xor
pushl
pushl
cli
mov
jne
add
add
add
fidivrl
iret
adc
loopne
enter
in
mov
test
out
xchg
daa
add
add
enter
xchg
mov
add
add
pushl
inc
add
ljmp
pop
cmp
mov
test
std
movl
and
out
jo
incl
add
cmp
add
jne
sub
add
add
add
fisubrl
test
xchg
in
dec
jno
jmp
jecxz
rolb
add
pop
push
add
dec
leave
adc
inc
add
loop
int3
cmp
add
into
mov
bound
incl
jmp
add
loop
mov
ja
jmp
sbb
imul
add
add
call
lcall
aas
aas
mov
add
mov
test
adc
incl
inc
add
pushl
in
jl
cmp
pop
adc
mov
add
addb
add
and
ljmp
add
xchg
xor
call
add
pop
std
sbb
add
stos
sahf
addr16
dec
inc
add
add
mov
add
add
add
mov
sbb
add
out
insl
mov
add
pushl
out
rolb
pushf
das
mov
imul
adc
decl
stos
stos
and
std
dec
push
mov
add
xchg
xchg
pop
add
dec
xor
add
leave
insl
or
add
add
call
push
add
icebp
adc
sti
dec
sahf
fidivs
mov
das
dec
pminub
jl
add
popf
test
add
into
repz
or
dec
or
int3
fmull
lret
add
out
mov
mov
add
mov
xor
ljmp
pushl
decl
jb
mov
test
xor
ljmp
mov
clc
aas
jg
add
addl
add
ljmp
dec
or
jmp
push
test
add
movsl
add
push
add
add
jmp
pop
mov
mov
sub
loope
ret
push
pop
add
mov
mov
insb
xor
decl
and
lret
inc
add
das
mov
ss
jnp
cltd
inc
add
add
fisttps
lret
pop
shlb
pushl
add
cmpsb
add
add
pushl
mov
bound
decl
rolb
cmpsb
add
add
imul
jmp
into
jae
ljmp
movl
loop
jne
shl
add
loopne
cmp
arpl
pushl
jnp
or
jmp
mov
in
mov
jg
imul
lods
ret
add
loope
push
jp
add
xor
fbstp
add
sub
add
test
add
add
mov
jle
xor
inc
add
gs
xor
add
stos
loope
fadds
xchg
xor
pushl
call
dec
movb
pop
and
pushl
jnp
jo
pushl
add
push
sbb
call
adc
jmp
add
and
inc
add
add
dec
adc
sbb
add
push
or
pushf
lods
aad
pop
adc
add
cmc
les
xlat
dec
rcrb
add
adc
add
jo
push
cltd
sti
je
push
adc
decl
out
dec
lods
mov
xchg
ret
add
int
add
add
sbb
adc
adc
ljmp
mov
jge
popa
add
call
mov
lcall
mov
fiaddl
icebp
rorb
add
mov
jl
add
push
add
sub
jae
out
rcrb
out
inc
add
decl
pop
jl
push
pop
add
ljmp
aaa
jb
jmp
incl
ljmp
int
add
cmp
jge
outsb
fucomp
arpl
fsubs
add
sub
loop
adc
add
sbb
xor
add
sahf
movsb
add
div
cwtl
pop
jo
cmp
sti
notb
add
fists
inc
add
add
add
sbb
push
add
pop
cmpsl
add
lret
add
xor
call
add
sbb
push
add
sbb
aaa
insl
mov
xchg
enter
add
cmpsl
add
sub
jmp
add
lods
ljmp
notb
cmpsb
add
add
sub
lahf
add
sub
pusha
add
sti
pop
movsb
add
addr16
add
add
inc
add
sbb
cld
movsl
add
mov
pop
scas
xor
incl
jb
lcall
push
add
ljmp
push
add
cmpsl
add
int3
stos
leave
jbe
add
mov
cmpsb
add
pushl
xor
call
js
add
add
icebp
lea
add
pop
incl
mov
pop
pop
dec
sub
aas
daa
add
add
fcoms
test
push
inc
add
jmp
add
fldenv
add
ljmp
int3
push
cmp
icebp
cmc
push
mov
lds
enter
add
jo
lcall
popa
add
mov
out
lret
loopne
sbb
cmp
xchg
cli
arpl
mov
decl
aaa
add
ss
add
inc
add
push
add
outsb
inc
add
and
incl
push
adc
mov
dec
std
sbb
call
cs
jne
sti
sub
add
add
add
arpl
lcall
out
outsb
loope
enter
std
loop
arpl
call
push
add
in
std
movb
lea
hlt
cmp
add
lods
imul
lock
into
xor
ljmp
add
mov
mov
add
push
push
add
lcall
add
jbe
add
xchg
sti
add
call
incl
incl
add
inc
add
mov
addl
add
xlat
or
push
add
aam
add
and
cmp
out
clc
in
xchg
and
dec
popa
add
jb
incl
add
add
pushl
lcall
push
pop
add
and
sti
nop
push
iret
lods
jge
in
jns
ret
add
inc
add
or
add
push
repnz
add
sti
adc
add
jmp
lret
dec
xchg
xchg
push
add
add
and
in
dec
mov
lcall
movsl
add
sub
bound
dec
pop
mov
add
add
out
pop
adc
jmp
addl
add
add
imul
stc
movsl
add
add
ret
mov
add
xor
jmp
add
add
cmp
add
sub
fsubl
dec
cmpsl
add
add
add
sbb
mov
sub
mov
test
ret
add
movl
add
mov
ror
jbe
sub
sbb
call
adc
bound
call
jle
sbb
loop
mov
imul
jmp
cmp
add
add
xlat
jg
enter
add
roll
add
add
add
pusha
add
mov
add
add
test
add
mov
add
insl
jge
jb
ljmp
push
ret
add
jne
rolb
fsqrt
and
and
sahf
add
pop
sub
cli
stos
mov
js
add
das
pop
push
pop
pusha
add
push
add
int
xlat
adc
pushl
fmull
sbb
add
add
mov
dec
inc
add
lret
mov
sub
add
in
fsubs
pop
or
aad
out
loopne
divb
add
das
or
movsb
add
decl
add
add
add
add
add
jge
jg
add
pop
add
incl
add
out
loopne
stos
mov
ljmp
sbb
pop
scas
sarb
add
add
outsb
int3
ds
add
jl
movsl
add
inc
add
or
ljmp
imul
push
cmpsb
add
add
jo
decl
cmp
mov
add
dec
xor
ljmp
inc
add
ret
mov
add
add
stc
js
clc
inc
add
lds
push
add
xchg
push
add
hlt
pop
jbe
pop
xor
inc
add
mov
lahf
cmpsb
add
addl
add
adc
inc
add
xchg
out
insb
jbe
add
sub
xchg
cld
cmp
pop
sahf
addb
add
mov
add
mov
loopne
mov
stos
sbb
add
out
pop
addl
loope
icebp
es
test
mov
addl
add
pop
add
mov
jmp
add
add
add
test
imul
add
int
dec
cmp
lds
push
push
add
ljmp
outsl
jle
outsl
cld
sub
xchg
jo
call
cmp
push
add
jb
pushl
sbb
pop
add
pushl
add
and
jmp
add
add
loopne
mov
xchg
pop
fidivrs
pop
roll
in
fistpll
pop
pop
and
cltd
lock
jnp
arpl
ljmp
add
in
shlb
add
outsb
add
call
in
lret
mov
inc
add
in
mov
iret
adc
jmp
add
loope
pop
push
add
test
add
add
xor
decl
ret
add
mov
add
sbb
js
pop
test
repz
xchg
loopne
push
add
add
add
push
pop
sub
dec
or
add
add
adc
jnp
xchg
cs
jecxz
mov
jne
add
add
clc
adc
clc
iret
dec
inc
add
add
ljmp
jmp
add
ljmp
add
ljmp
pushl
jae
inc
add
cmpsl
add
add
out
xchg
xor
iret
mov
add
sub
add
roll
cli
pusha
add
lea
add
and
ljmp
movsl
add
add
mov
add
incl
add
flds
dec
mov
push
dec
stos
jno
dec
stc
daa
add
mov
cli
pxor
add
add
add
push
mov
xor
lcall
xor
pushl
add
add
add
mov
jg
add
loopne
cmp
jno
pushl
pushl
pop
add
mov
call
jecxz
shll
add
push
add
lods
jne
add
sbb
add
add
imul
add
sahf
insb
nop
icebp
roll
pop
add
in
stos
add
lcall
add
decl
pop
nop
cmp
lcall
add
jb
call
add
call
add
dec
or
mov
inc
add
adc
in
push
add
dec
xchg
fisttpll
mov
mov
imul
cld
lahf
inc
add
fsubrl
fst
movb
ficompl
mov
inc
add
add
dec
stos
repnz
inc
add
pushl
popa
add
popf
add
add
push
add
jae
call
mov
add
ret
add
push
push
stc
or
inc
add
fcmovnbe
push
jmp
add
aad
mov
add
push
add
xor
incl
fwait
inc
add
add
cld
imul
stos
inc
add
cmp
or
ljmp
mov
add
addb
jmp
add
lcall
pushf
int3
scas
scas
cmp
add
sbb
pop
loopne
dec
sub
mov
lds
enter
inc
add
sbb
outsb
add
lcall
mov
test
add
and
incl
add
cmp
movl
adc
add
add
cmc
dec
cmp
jmp
add
jns
add
add
sub
add
decl
stc
ss
add
mov
lcall
mov
add
aaa
arpl
ljmp
add
fdivl
addb
add
sti
adc
cmp
add
decl
dec
aad
enter
add
mov
add
dec
sti
ret
add
cld
dec
scas
dec
sub
cltd
jns
add
add
dec
xchg
ret
add
call
imull
pusha
add
popa
add
js
add
cmpsl
add
add
int3
lock
add
add
add
incl
incl
repz
ljmp
idiv
shll
add
movl
cmpsl
add
ds
add
cltd
out
inc
add
xchg
pop
nop
jle
mov
stos
push
add
cwtl
ds
cmp
enter
aas
addb
or
add
sub
cmp
jg
movq
idiv
inc
add
insl
leave
loop
mov
mov
add
sub
repz
js
cmc
mov
add
jae
ljmp
stos
clc
int3
je
inc
add
loopne
add
insl
outsb
wbinvd
loop
in
dec
pushl
scas
mov
popf
mov
call
push
add
pop
shrl
xchg
aam
data16
mov
imul
cmp
das
jle
mov
test
stc
inc
add
es
add
icebp
mov
aas
or
add
pushl
cs
xchg
inc
add
push
shrb
repz
pusha
add
test
lret
test
add
pop
pop
addb
add
add
add
mov
jae
mov
add
inc
add
aaa
cmp
mov
add
call
cli
cmpsl
add
add
cs
mov
mov
add
ret
add
add
dec
push
mov
filds
int
js
add
push
out
mov
shll
nop
sub
mov
add
push
cmp
jmp
add
in
rcll
push
add
mov
add
dec
xor
sbb
mov
pop
data16
add
add
jmp
add
imul
imul
pushf
aad
aaa
jp
xchg
ds
push
jmp
add
add
add
lret
add
add
decl
data16
mov
lds
je
ljmp
ret
add
incl
fisttps
call
add
add
sub
cmp
sbb
xor
and
push
out
ds
pop
add
jmp
mov
mov
jmp
add
lock
call
mov
lods
jno
dec
jne
add
pop
jbe
mov
add
cmp
dec
sti
push
add
aas
enter
jle
into
aam
add
decb
jl
imul
mov
out
or
and
pushl
mov
daa
add
fstl
add
aad
movsl
add
xchg
jb
pushl
add
cmp
stc
sbb
mov
add
popa
add
cltd
mov
or
pushl
add
stos
inc
add
add
cs
xlat
addl
add
add
cmp
add
jp
std
icebp
cmp
rolb
imul
xor
incl
jle
add
rclb
call
addb
mov
sbb
add
in
xchg
xor
decl
outsb
push
add
int3
cmp
add
add
rcrb
add
call
pop
pop
add
add
sub
add
cmp
ret
add
int
add
call
inc
add
je
arpl
push
cmpsb
add
xchg
sbb
sti
shll
add
out
js
fdivs
add
inc
add
mov
add
add
or
jne
pop
push
adc
jmp
xchg
mov
add
xchg
cld
inc
add
add
add
lret
add
inc
add
fdivrl
lret
mov
leave
popf
ret
add
push
add
movb
add
nop
gs
ss
daa
add
add
mov
rol
add
icebp
and
ljmp
or
decl
les
add
decl
loop
pop
mov
daa
add
sub
mov
add
jmp
shl
inc
add
add
call
or
add
inc
add
add
dec
push
fildl
std
mov
lahf
cmp
inc
add
fstps
add
test
and
jmp
mov
add
xchg
mov
add
add
imul
push
add
xchg
cmp
mov
in
jge
notb
incl
add
divl
add
out
xlat
push
sti
jmp
add
iret
addl
les
hlt
pop
hlt
xor
pushl
add
push
mov
jmp
xadd
fidivl
add
push
add
imul
pop
dec
ret
or
and
incl
je
adc
mov
pop
pop
mov
lcall
and
icebp
in
push
mov
push
mov
add
cmp
add
clc
cld
mov
add
incl
add
dec
sbb
add
add
dec
ret
add
add
dec
adc
jmp
add
and
dec
dec
cmp
jmp
add
addb
push
lods
add
mov
jne
push
mov
add
aas
cmp
jle
sbb
add
das
lock
negl
add
pop
fcmove
ja
insb
cmp
add
mov
test
stc
and
lcall
xor
decl
out
testb
mov
sbb
add
mov
sarl
lcall
add
mov
fsubrp
or
ljmp
mov
add
or
jmp
add
stc
xor
pushl
lcall
outsb
and
pop
rol
add
lcall
add
cli
bound
call
add
scas
popf
aas
cmc
imul
jmp
lds
cmp
mov
mov
arpl
mov
add
adc
jmp
add
call
sarl
sbb
lcall
add
add
sub
add
movsl
add
sub
add
icebp
xchg
les
cmpsb
add
inc
add
ja
and
incl
jo
dec
jns
scas
jp
adc
inc
add
sub
pop
xor
ljmp
dec
jne
insl
cmp
mov
add
je
add
jmp
add
jle
inc
add
into
mov
insb
jmp
roll
hlt
lods
mov
rcll
fldcw
icebp
test
mov
stos
scas
sbb
pop
xor
pushl
movsl
add
sbb
jmp
mov
or
bswap
push
xchg
jle
add
imul
aas
divl
add
aam
xchg
xchg
sarl
push
adc
aas
xchg
mov
push
mov
mov
outsl
mull
dec
pop
daa
add
std
aaa
fstps
aam
dec
jge
sahf
xchg
and
add
std
xchg
inc
add
loope
pop
in
mov
add
jmp
push
add
out
lock
insl
push
add
dec
xor
decl
add
push
fnstenv
dec
dec
in
hlt
ret
add
add
sub
jle
mov
mov
xor
add
fdivs
add
popa
add
push
xlat
add
add
mov
xor
ljmp
call
add
leave
fdivrs
cmp
add
icebp
xor
push
add
pop
add
add
and
js
mov
scas
cmp
dec
repnz
movb
add
add
pop
cmp
add
pop
xchg
xor
inc
add
addl
fstl
loope
pop
lds
arpl
incl
pushl
add
add
fwait
cmp
add
add
inc
add
nop
or
jge
sub
xor
rcrl
shll
ret
mov
add
jmp
fsub
add
push
aam
cwtl
push
add
push
sbb
push
loope
adc
mov
add
ljmp
add
cli
nop
scas
cmp
mov
inc
add
xchg
dec
pop
push
lret
cltd
sti
inc
add
icebp
xchg
add
call
lock
push
xor
add
outsl
push
dec
or
idivb
add
pop
ss
lods
les
push
mov
adc
push
incl
scas
pop
mov
add
sbb
adc
inc
add
dec
fwait
int3
xchg
cmp
fdivrp
stos
jl
lods
add
incl
pushl
xor
jmp
add
dec
add
jmp
push
loop
out
in
adc
cli
loopne
push
push
ficompl
xor
incl
repz
add
ljmp
loope
or
push
add
inc
add
add
rclb
xor
lcall
jo
stc
popa
add
sbb
fwait
lds
or
faddl
add
adc
incl
add
adc
incl
pop
xchg
adc
decl
ss
or
add
add
fldl2e
push
add
cmp
add
leave
shrb
jns
repnz
add
lcall
add
jo
jmp
add
addb
add
loop
jne
sbb
jge
dec
pop
jle
xchg
pusha
add
mov
stos
xchg
cmp
add
test
sbb
incl
add
out
cmpsb
add
add
sbb
sub
add
ret
add
jne
add
lcall
xchg
in
cmpsb
add
pushl
xchg
jg
movb
add
and
decl
addb
add
pop
outsb
movb
add
scas
in
push
add
xchg
popf
pop
loop
hlt
addb
or
in
jmp
dec
test
adc
fidivrs
cmpsb
add
ljmp
jecxz
mov
xor
jmp
add
pusha
add
jo
jmp
ljmp
add
lcall
jbe
add
and
lcall
and
pushl
pushl
add
add
mov
pop
dec
add
cmp
dec
xchg
push
add
or
add
add
icebp
mov
xchg
and
test
js
and
ljmp
cmpsl
add
inc
add
xchg
jae
lcall
add
add
call
lock
add
mov
iret
cmp
push
jmp
mov
in
roll
add
pop
leave
lods
jb
ljmp
jno
dec
or
aam
nop
xchg
mov
data16
cmpsl
add
add
fsub
add
add
cmp
sbb
add
pop
les
mov
stc
call
sarl
xor
add
add
adc
incl
add
add
jmp
pop
mov
arpl
inc
add
call
add
and
jns
mov
inc
add
sub
das
adc
add
lcall
je
mov
push
out
mov
add
add
or
cmp
addl
add
push
insl
and
ljmp
add
add
repz
add
addl
push
push
jge
mov
pop
add
mov
icebp
or
stos
ja
aam
push
jb
incl
jb
dec
in
leave
insb
out
shrb
add
mov
mov
add
out
jle
add
dec
jmp
push
xor
call
or
test
add
sub
lds
lea
xchg
add
mov
add
ds
add
data16
mov
hlt
cmp
scas
ret
shll
pop
jl
pop
add
mov
add
rolb
movsl
add
add
mov
fildl
mov
insb
sub
jbe
insb
roll
idivb
int3
xchg
fimuls
add
mov
add
add
jne
loope
mov
push
add
js
add
pop
mov
push
add
add
add
add
mov
scas
mov
mov
xor
fnstenv
add
mov
out
xchg
aas
cwtl
sbb
add
xchg
inc
add
and
lcall
add
ljmp
xor
inc
add
mov
hlt
or
add
sbb
clc
cmp
pushl
jb
cld
cmp
sti
jne
add
pop
sub
ljmp
stos
push
add
mov
cmp
decl
pop
pop
xchg
push
lods
mov
test
inc
add
and
jmp
add
sub
and
fisubs
add
add
cmp
add
and
xor
pushl
enter
mov
mov
hlt
inc
add
out
jg
add
adc
decl
ret
add
fldln2
cmp
pop
lret
mov
pop
dec
lds
loope
or
cli
icebp
lret
inc
add
ret
xchg
and
dec
es
sbb
iret
mov
ljmp
jbe
mov
add
add
mov
xlat
sub
add
jnp
xchg
pop
dec
sub
push
xchg
pop
cmp
fisttpl
call
xchg
pop
movb
adc
mov
stos
std
mov
mov
jp
cmp
add
incl
call
pop
out
pop
add
add
mov
mov
add
mov
add
add
lahf
push
add
cmp
add
push
add
add
add
jns
addb
add
adc
jmp
adc
add
out
cwtl
lods
adc
jmp
add
insb
pusha
add
fs
mov
add
inc
add
add
pop
mov
mov
mov
add
mov
roll
add
out
sbb
incl
jle
inc
add
cmp
jl
pop
and
jmp
mov
inc
add
lcall
out
dec
pop
lret
es
popa
add
jl
add
mov
add
add
decl
scas
movl
add
pusha
add
push
mov
inc
add
xchg
movl
out
pushf
push
add
bound
lcall
mov
or
add
add
rcll
adc
and
ffree
add
mov
or
nop
mov
outsl
xchg
inc
add
fcomip
pop
xchg
xchg
adc
movsb
add
jb
call
adc
ljmp
and
fildll
add
or
and
inc
add
cmp
add
add
call
mov
bound
jmp
add
data16
add
nop
cld
pop
mov
into
mov
add
pop
jno
jmp
ljmp
add
aas
cmp
rcll
decl
mov
add
add
sahf
adc
add
ja
dec
lcall
imul
add
incl
xchg
add
ljmp
cmp
mov
mov
dec
mov
in
fmull
out
jns
sub
mov
add
pop
lret
sub
adc
addb
imul
xor
incl
add
add
mov
and
ljmp
dec
cld
push
sbb
add
pop
cmp
add
add
xlat
call
ja
rorb
movsl
add
loopne
cld
push
add
mov
add
insb
sti
ss
cs
xlat
imul
jmp
add
scas
xlat
push
add
das
fisubrs
out
roll
add
and
mov
dec
fnstsw
add
cmp
lea
data16
sub
or
ljmp
fcoml
lcall
or
mull
sub
add
mov
ficoml
fstpt
add
xchg
movsl
add
and
dec
movl
or
lcall
adc
pushl
in
inc
add
lcall
or
xchg
lcall
cmc
rcll
add
insl
pop
xchg
negb
aas
mov
fstpl
and
adc
stc
movsl
add
mov
shll
add
ficoml
xchg
adc
inc
add
add
add
xchg
push
jbe
add
add
inc
add
add
aad
add
out
movsb
add
add
test
and
mov
sbb
add
incl
lcall
rorb
repnz
add
push
addl
ds
add
xor
add
int
add
add
bswap
xor
decl
add
or
add
xchg
pop
jae
call
add
xor
decl
fiaddl
dec
cmc
aas
insl
les
mov
jecxz
and
lcall
aaa
adc
call
ljmp
je
add
push
inc
add
js
sub
add
mov
add
in
jmp
lods
push
add
push
insb
cmp
call
add
and
dec
pop
mov
mov
inc
add
stc
test
mov
add
pushf
mov
add
ja
add
lods
cld
stos
fldt
add
jnp
mov
cwtl
inc
add
add
popa
add
insb
lahf
rolb
mov
inc
add
aam
adc
jae
dec
jns
add
insb
sbb
addl
jae
incl
mov
addl
add
add
ret
add
add
xchg
lds
dec
movb
ljmp
decl
and
pushl
decl
psubw
add
xor
imul
jp
jge
or
bound
pushl
add
and
ljmp
sbb
repnz
add
add
decl
add
mov
add
sub
push
mov
add
in
mov
add
inc
add
std
inc
add
add
add
pop
mov
dec
mov
sub
or
add
ja
add
push
enter
mov
add
inc
add
add
pushl
add
xchg
lods
xchg
xor
jmp
add
jge
daa
add
inc
add
ljmp
outsl
inc
add
fldcw
mov
add
mov
add
push
add
bound
incl
xchg
and
decl
addl
add
or
add
pop
cmp
incl
jp
or
bound
pushl
ljmp
add
pop
mov
mov
lret
sub
shrb
inc
add
add
push
push
cld
mov
cmp
push
outsl
xor
mov
sbb
insl
fldl2t
sub
mov
jns
add
xchg
pop
pop
xchg
xchg
xor
sti
addl
aam
jge
add
mov
call
jmp
jnp
and
lcall
popa
add
xchg
data16
jecxz
push
xchg
jo
jmp
add
stc
add
push
mov
sbb
mov
jnp
ljmp
leave
sbb
mov
mov
cltd
pop
imul
gs
cmp
lcall
out
xchg
sub
add
daa
add
add
xchg
pop
data16
add
addl
adc
add
sarb
add
xchg
adc
movl
inc
add
popf
test
push
dec
xchg
lods
mov
sbb
out
mov
addl
add
ljmp
add
dec
shll
repnz
add
incl
stos
jl
add
add
int3
fcmovne
mov
ds
add
jle
xor
pushl
call
aaa
sub
sbb
xor
in
daa
add
jecxz
inc
add
add
outsl
cmp
pushl
add
add
roll
movb
rolb
add
lahf
mov
or
pushf
adc
push
sub
add
bound
jmp
add
int
add
cmc
cltd
cmp
and
ljmp
pop
xor
pushl
mov
lahf
inc
add
jo
incl
insb
push
jns
stc
and
jmp
add
data16
add
je
add
call
and
jmp
ds
and
dec
fprem1
rolb
mov
pop
add
push
add
jae
clc
pop
fdivrs
mov
or
cmp
std
push
lcall
add
jmp
outsl
mov
decl
pop
loope
inc
add
add
cli
fwait
imull
add
movsb
add
stc
ret
add
mov
add
mov
pop
insl
fisttpl
sub
pop
add
jg
add
stos
hlt
sub
jae
ljmp
movb
pop
out
or
push
add
jge
ret
add
addb
jo
cld
arpl
push
cs
iret
xchg
add
push
pop
mov
outsl
das
ljmp
dec
shrb
add
comiss
add
add
sbb
cld
cltd
lods
xchg
and
call
cltd
adc
fsubr
inc
add
or
loopne
lods
fwait
jae
push
test
cs
push
dec
sub
add
int
jbe
add
loop
call
add
ljmp
add
roll
add
int3
mov
jnp
jne
imul
push
add
and
incl
add
fcomps
add
push
mov
add
jne
xchg
fwait
movsb
add
add
jmp
lock
mov
dec
mov
inc
add
inc
add
in
cmp
add
out
inc
add
push
dec
inc
add
pop
sbb
inc
add
add
add
nop
arpl
ljmp
jne
pop
cltd
mov
lret
shr
xor
clc
sub
lods
xor
lea
pop
outsb
addb
repz
add
add
std
movsb
add
outsl
lods
loope,pt
in
mov
popf
mov
fwait
mov
stos
cwtl
fadd
add
sub
das
outsb
jp
add
js
mulb
daa
add
call
dec
fists
and
lcall
add
xor
pushl
incl
add
aas
fdiv
sub
mov
add
ljmp
outsl
ja
lods
enter
aam
xchg
movsl
add
add
sub
push
xor
lcall
cmp
add
in
mov
add
sub
cmp
jne
push
sbb
add
inc
add
inc
add
lods
xchg
pop
jle
add
shlb
jmp
add
jbe
add
out
add
jp
fbld
push
push
add
bound
incl
add
pusha
add
mov
movsb
add
dec
roll
pop
push
pcmpeqb
leave
fdivr
lret
lods
xor
lcall
pop
jle
sub
push
add
rolb
mov
push
add
pop
pushf
je
test
push
mov
add
incl
inc
add
pop
push
popa
add
mov
iret
cmp
mov
adc
cli
imul
add
add
xor
dec
cmp
add
call
and
decl
add
add
pop
inc
add
repz
or
xchg
cmp
jns
mov
add
roll
add
add
add
dec
inc
add
xor
inc
add
jmp
decl
test
jns
data16
add
faddp
add
add
hlt
and
lcall
add
xor
add
lret
not
cmpsb
add
inc
add
xchg
mov
add
mov
add
aas
jns
repz
into
push
add
push
sub
sub
and
in
mov
add
pop
lcall
jmp
or
add
dec
out
call
fimull
pop
add
call
call
sbb
ljmp
mov
add
or
lods
or
add
leave
and
lcall
add
scas
int3
movb
xchg
fldcw
mov
lcall
add
sbb
addl
lahf
dec
in
dec
and
jmp
clc
dec
jmp
adc
mov
test
data16
mov
add
jno
pushl
call
add
popa
add
insb
xchg
pop
stos
push
add
stos
mov
jmp
add
outsl
setg
addl
mov
mov
roll
fistl
add
jb
pushl
add
ss
pop
push
pop
pop
cld
push
add
rorl
out
outsb
sub
add
mov
inc
add
or
add
and
lret
das
out
movsl
add
inc
add
add
xor
call
add
xchg
pop
xor
jmp
or
xchg
mov
movsb
add
xor
repz
add
mov
push
add
and
ljmp
and
decl
add
mov
int
add
add
and
add
scas
mov
addl
sbb
in
adc
add
cli
leave
mov
test
mov
inc
add
sbb
stos
into
add
mov
mov
xchg
sbb
sahf
jne
scas
mov
add
cld
sub
push
add
mov
lret
sbb
add
jmp
add
sub
add
cmp
add
ds
movsb
add
xchg
fisubrs
fnstenv
add
rolb
outsb
add
incl
add
pop
xchg
sbb
add
mov
add
jbe
sub
add
add
mov
add
mov
add
leave
push
add
inc
add
mov
rolb
cmpsl
add
movlps
cli
jns
add
add
std
xor
inc
add
cmp
sub
jae
call
or
cltd
pop
jno
out
sub
add
nop
lds
dec
dec
data16
pushl
lahf
pop
arpl
ljmp
add
int
jns
add
pop
or
add
je
add
incl
add
fs
jmp
or
bound
lcall
mov
inc
add
decl
loopne
dec
pop
jbe
fnstcw
add
cs
add
add
push
add
pop
insb
mov
stos
pop
out
movsb
add
push
int3
out
jno
ljmp
dec
sub
add
push
imul
ds
add
or
dec
mov
mov
loope
inc
add
pop
lret
add
add
add
push
sub
add
or
inc
add
push
add
xor
jmp
xchg
out
cmp
out
xor
ljmp
push
pop
sbb
call
add
shlb
cmp
xchg
rolb
and
mov
add
add
ljmp
dec
ljmp
js
in
cld
adc
jmp
add
xchg
call
xor
decl
or
cld
mov
inc
add
dec
mov
add
xchg
addb
add
out
out
jle,pn
add
pop
add
add
imull
and
call
idivl
lret
add
std
sbb
push
add
push
roll
add
add
and
pushl
fisubs
cmp
inc
add
sbb
add
in
sub
dec
int
jge
add
imul
pop
out
dec
mov
xor
addl
enter
insl
xchg
xor
cmp
push
mov
ljmp
push
add
xor
lcall
call
add
rorb
addb
push
int
popa
add
fmull
jecxz
pop
add
add
addb
je
xchg
adc
call
inc
add
mov
imul
jmp
jl
add
mov
add
mov
mov
sub
dec
in
add
pushl
xlat
add
add
jecxz,pt
cmpsl
add
les
aam
add
jge
add
jmp
mov
xor
loope
sub
add
testb
jecxz
lock
call
add
imul
les
into
sub
add
mov
add
inc
add
in
pop
dec
mov
cmp
dec
jmp
mov
add
jno
jmp
add
jp
hlt
jle
mov
mov
test
aam
hlt
rsm
shlb
jmp
push
dec
xchg
add
fcoms
push
jecxz
mov
lock
call
dec
nop
addl
add
out
repz
aas
xchg
divl
enter
pushf
jmp
add
cltd
xchg
inc
add
add
mov
addl
insb
sarb
daa
add
xor
addb
add
sub
mov
add
lret
das
and
mov
incl
add
pop
xchg
xchg
cli
dec
fyl2x
loop
or
add
shlb
add
pop
roll
add
in
and
lcall
xor
jmp
add
push
add
sub
pop
adc
push
jecxz
insl
jae
incl
outsl
das
sub
cmpsb
add
add
aaa
mov
jge
add
push
test
shll
stc
cld
jbe
testl
add
filds
jmp
add
add
jo
fiadds
add
cmp
add
nop
ja
adc
xchg
dec
rolb
add
add
inc
add
cmp
sti
out
pop
mov
pop
push
add
mov
dec
push
add
inc
add
lods
ficompl
add
sti
mov
add
xchg
inc
add
imul
add
ljmp
add
add
cmc
das
adc
call
jmp
jl
mov
dec
xchg
cs
add
incl
addb
sub
xor
ljmp
or
and
lcall
cwtl
insl
inc
add
fcoms
bound
jnp
add
cmp
in
pop
xor
ljmp
and
loop
cmc
sub
pause
dec
repnz
popa
add
push
add
test
mov
sub
push
cmpsb
add
pop
xor
call
rcll
sti
pop
sub
and
decl
sbb
add
inc
add
jl
add
inc
add
cmp
les
int
push
xor
add
addl
iret
sub
push
xchg
in
inc
add
cmp
scas
mov
mov
push
add
mov
inc
add
js
add
add
sbb
and
add
inc
add
les
pop
or
add
inc
add
loop
mov
add
add
lcall
mov
jecxz
add
jle
add
push
add
push
add
pushl
add
data16
rcrl
push
add
mov
add
add
pushl
add
add
iret
mov
add
jmp
pop
sbb
icebp
inc
add
push
mov
add
loope
add
decl
cmpsb
add
popf
inc
add
add
mov
aad
mov
add
in
insl
jp
mov
data16
stc
divb
out
insl
sub
jecxz
inc
add
dec
arpl
aas
pop
pop
ja
add
incl
add
addl
add
rolb
jae
lcall
loop
mov
movl
add
add
dec
repnz
add
out
addl
pushf
xor
decl
push
add
or
out
mov
add
and
les
xor
decl
jl
jmp
repnz
add
mov
pop
out
das
addl
fmull
lock
rolb
add
add
mov
jmp
jl
add
iret
dec
cmp
pusha
add
cli
nop
aam
hlt
dec
in
in
lret
push
add
inc
add
or
xchg
rolb
iret
xchg
or
adc
cld
call
or
push
adc
in
rolb
add
or
jle
add
test
ret
add
mov
mov
add
xor
add
jp
aas
into
ja
ret
add
hlt
std
add
add
pushl
jns
xchg
sub
add
fistps
mov
jp
out
sub
push
nop
add
in
sar
and
call
and
jns
dec
loopne
cli
cmp
add
dec
fadds
mov
frstor
lret
sbb
mov
dec
rclb
out
lret
add
jmp
add
add
xchg
and
jmp
movaps
repz
cli
int
inc
add
call
incl
add
decl
mov
aam
and
call
repnz
imul
out
mov
push
loope
jecxz
pop
push
mov
xchg
push
add
fsubr
add
jmp
add
xor
jmp
add
mov
fxch
jl
add
mov
fadds
add
add
pushl
push
add
and
incl
clc
iret
scas
fstps
push
cmp
pushl
scas
icebp
adc
add
fists
add
sbb
popf
inc
add
push
shll
incl
sbb
add
jecxz
and
decl
inc
add
imul
pop
imul
mov
icebp
mulb
sti
cmp
movsl
add
pop
mov
loope
icebp
les
shl
add
add
sti
lds
rolb
decb
add
mov
add
int3
jle
add
jmp
pushl
add
mov
add
fwait
addl
add
dec
add
adc
incl
add
movsl
add
add
jmp
add
aad
add
lds
mov
ds
add
shrb
pushf
fiaddl
jmp
add
dec
and
push
add
dec
xor
jge
add
add
call
sub
jmp
fbstp
add
xchg
outsb
sbb
in
mov
fxam
add
add
xchg
add
inc
add
xor
pushl
pushl
add
or
add
push
in
inc
add
add
add
add
mov
loop
mov
mov
add
push
pop
mov
or
in
push
inc
add
rolb
mov
mov
addl
push
add
addb
loope
aam
adc
pushl
add
or
add
rolb
mov
xor
decl
popa
add
out
xchg
xchg
test
aaa
stos
push
add
push
add
dec
or
pop
mov
add
insb
pop
cmpsb
add
and
dec
inc
add
push
sub
jmp
add
push
xchg
hlt
fwait
jns
add
repz
jmp
adc
decl
lret
test
add
stc
scas
test
dec
ss
add
add
setg
dec
jecxz
and
dec
fsts
add
imul
stc
pop
mov
lcall
mov
lds
aad
xchg
jmp
add
sub
and
incl
sbb
lret
mov
add
movl
pushl
add
push
push
add
inc
add
or
add
add
jbe
cmpsl
add
ljmp
cmpsl
add
loope
sbb
les
push
addb
add
adc
jmp
add
and
mov
add
cwtl
data16
dec
aam
add
mov
add
dec
insb
push
add
mov
add
ja
test
mov
test
add
add
add
leave
xchg
loop
jbe
add
lret
test
js
fisubl
sub
mov
add
add
rorb
jl
xchg
adc
jmp
add
add
mov
ljmp
add
mov
add
jnp
add
push
sahf
sub
cs
xor
fstpt
mov
lock
xor
cmp
adc
cli
out
xor
jmp
add
xor
call
lcall
ljmp
xor
std
cmp
push
or
add
dec
cmp
add
cmc
daa
add
imul
add
cmp
pop
sub
decl
add
pop
xchg
in
mov
add
cmpsb
add
xlat
xchg
lock
lods
imul
add
add
inc
add
and
decl
leave
insb
sahf
lods
mov
shrb
add
mov
addb
shrb
add
add
jp
fwait
dec
adc
dec
shl
add
out
repnz
or
rorl
loopne
cmp
gs
movsl
add
and
call
inc
add
dec
jg
add
pop
cmp
adc
incl
mov
add
jge
add
dec
mov
aad
add
fcmovb
add
add
add
add
pop
jge
xor
incl
xor
roll
rorb
inc
add
pushl
enter
sub
fwait
inc
add
xor
jmp
add
movsl
add
je
push
mov
xchg
inc
add
shlb
add
jmp
add
negb
jnp
push
iret
in
js
ja
insl
roll
or
dec
mov
mov
add
adc
adc
decl
jmp
movsb
add
add
add
iret
sbb
add
jns
push
add
xchg
stos
fbstp
add
and
add
fists
push
hlt
scas
mov
mulb
lcall
pushf
xor
in
testb
add
ljmp
addl
adc
incl
out
out
mov
and
pushl
lcall
leave
sbb
add
add
add
push
or
add
add
movsb
add
pushl
add
jl
add
xchg
movsl
add
add
add
lods
test
mov
cmc
jge
add
addb
sub
inc
add
pop
lods
test
cld
jle
add
enter
ljmp
add
out
add
decl
sbb
inc
add
xchg
ss
lock
jge
and
int3
sbb
push
pop
inc
add
ret
arpl
jmp
insb
fwait
das
jbe
add
add
je
fisttpl
cld
pop
dec
ljmp
ljmp
sub
addl
add
int3
inc
add
addl
add
dec
xchg
int
mov
jge
mov
add
jae
lcall
add
cld
adc
jmp
ja
repz
repz
pushf
lods
ss
pop
or
xor
push
addb
daa
add
decl
adc
mov
dec
fdivs
add
push
das
sbb
cmpsl
add
pusha
add
movsb
add
add
and
call
jnp
add
and
or
lock
add
add
dec
sub
leave
ds
ljmp
add
xchg
sub
ljmp
test
jne
xor
pushl
jb
jmp
add
mov
insl
add
sti
lret
pop
add
int
data16
repnz
fs
push
add
ret
ret
add
mov
repz
lret
sub
dec
inc
add
sub
xor
fcoms
add
divb
incl
test
add
fisttpl
push
addb
repnz
fbld
add
dec
push
xor
mov
pushf
cmpsb
add
jo
pushl
add
insb
xchg
inc
add
push
adc
incl
add
incl
add
sahf
xor
add
lahf
cltd
or
jle
dec
mov
lds
xor
call
out
fcmovu
sbb
mov
pop
push
add
mov
pop
dec
lret
test
inc
add
push
shrl
add
push
add
mov
add
cli
or
push
in
and
call
data16
mov
cmc
and
or
add
add
call
add
xchg
mov
add
scas
lods
mov
int3
loope
adc
ds
add
incl
lcall
inc
add
movb
dec
notl
lods
sbb
sub
pop
pop
inc
add
dec
xor
test
inc
add
imul
mov
cs
mov
sub
daa
add
cmpsb
add
inc
add
pushl
imulb
and
and
call
les
jmp
mov
in
and
inc
add
stc
sub
je
add
adc
ljmp
addl
pop
jo
decl
add
or
add
xchg
out
fwait
outsl
repnz
rolb
add
pop
xor
mov
sub
add
add
add
push
scas
mov
ljmp
decb
rolb
insl
and
stc
out
popf
mov
repz
je
out
movb
jbe
inc
add
or
xor
jmp
add
lods
ficomps
xchg
clts
add
testb
daa
add
lret
xchg
push
jmp
lods
cltd
fdivp
jg
call
mov
add
lcall
das
mov
add
sbb
cwtl
lds
push
addr16
add
fsubr
fsubl
aam
add
mov
lods
push
add
add
outsb
cmpsb
add
popf
pop
add
enter
ja
test
push
pop
outsb
xor
inc
add
add
xor
jnp
out
adc
call
out
pop
jae
ljmp
add
scas
inc
add
nop
jne
or
and
pushl
ljmp
sbb
lret
jge
stc
and
cwtl
lahf
movsb
add
jecxz
movl
add
pop
add
dec
fstps
pop
ss
jmp
pushf
adc
incl
jne
mov
add
bound
dec
data16
jle,pt
stos
fdivr
aam
add
add
add
add
incl
push
or
aad
sub
push
push
rolb
repnz
dec
loopne
add
call
dec
adc
jmp
add
mov
decl
xchg
loop
lcall
mov
add
cmp
inc
add
pop
jle
leave
addl
add
roll
sub
add
lcall
jl
roll
lock
add
add
adc
stc
cmp
add
and
jmp
push
das
jle
mov
inc
add
fmul
mov
ljmp
pop
fidivrl
mov
add
and
push
stc
add
add
dec
fsubp
add
nop
sti
add
faddl
fstps
or
add
add
push
addb
inc
add
push
rclb
loopne
dec
data16
pop
pop
outsb
jno
decl
enter
add
call
jns
dec
test
fnstsw
mov
add
xchg
or
ret
add
fs
addl
loope
dec
jno
lcall
jp
xchg
xchg
lea
jns
add
mov
add
arpl
mov
sbb
arpl
ljmp
aaa
mov
add
jmp
int
add
jne
cs
in
jmp
add
add
sbb
je
jmp
ja
add
lea
mov
add
add
out
xor
call
call
jmp
push
in
dec
loop
and
pushl
call
add
jg
jae
decl
jmp
jmp
add
jne
add
add
add
mov
sbb
add
das
mov
add
or
stos
dec
test
cmpsb
add
int3
and
pushl
fistpll
lock
frstor
cli
bound
jmp
add
mov
inc
add
add
cld
sub
xchg
out
data16
ljmp
inc
add
in
jne
dec
cld
lret
inc
add
clc
sbb
sbb
jnp
add
clc
in
and
pushl
mov
pushl
aas
jo
pushl
xchg
sub
mov
int3
mov
add
cmp
sub
push
jnp
ret
aad
add
add
leave
outsl
cmp
jmp
add
movsl
add
call
pusha
add
mov
jmp
out
jbe
add
fucomp
loopne
adc
call
add
call
xor
int
f2xm1
inc
add
push
add
imul
dec
mov
pop
add
add
cmp
add
jmp
pop
adc
pushl
fidivrl
push
add
jae
mov
ljmp
movsb
add
dec
lds
rolb
add
insb
repnz
inc
add
lea
lcall
pushf
mov
add
cmp
outsb
pop
dec
lret
add
or
add
xor
ljmp
push
and
data16
dec
cld
mov
add
fcmovbe
add
pushl
add
sahf
mov
xchg
or
addb
add
and
inc
add
xchg
call
add
add
mov
pop
dec
and
lcall
add
mov
add
add
sbb
add
enter
dec
sbb
adc
jmp
neg
pop
mov
montmul
cmpsb
add
test
loop
out
xchg
aas
sbb
add
incl
add
cs
push
add
icebp
scas
fwait
jecxz
jae
jmp
add
popf
pushf
mov
test
mov
imul
aaa
inc
add
mov
in
loopne
popf
bound
decl
add
add
add
jecxz
mov
roll
push
mov
cmp
data16
iret
mov
rep
jbe
test
cmp
jmp
incl
adc
decl
add
cmp
mov
clc
inc
add
push
mov
sub
mov
xchg
mov
add
add
mov
add
rolb
mov
mov
loope
adc
sbb
insb
or
js
or
test
int
add
dec
imul
pop
add
add
cmp
dec
fldt
xor
jp
in
popl
or
add
add
jmp
jg
inc
add
or
mov
add
lds
jno
pushl
add
outsb
and
lcall
cmp
aad
add
add
adc
incl
test
daa
add
sub
add
das
rcll
push
xor
cld
cmp
cltd
test
mov
decl
jb,pt
pushl
add
sbb
pop
lods
mov
add
jns
sahf
test
add
pushl
scas
in
idivb
add
add
rolb
add
add
cmp
add
icebp
cltd
lds
push
jg
ss
les
movsl
add
add
add
or
cwtl
mov
add
add
lods
rolb
inc
add
mov
add
add
jno
in
and
pushl
enter
xor
call
call
divb
add
ret
add
ret
add
add
mov
lods
push
add
test
aaa
and
xor
ljmp
addb
add
popf
aas
shlb
push
adc
add
mov
out
stos
in
sbb
pushl
add
ja
add
xchg
adc
adc
dec
push
add
daa
add
add
cmpsl
add
ljmp
testl
add
sti
je
add
pushl
add
push
add
add
adc
ljmp
aas
daa
add
addb
and
incl
add
mov
pusha
add
add
popf
ds
pop
and
int3
rcrb
xor
ljmp
in
mov
sub
inc
add
test
mov
inc
add
fstl
fstpt
push
int
add
outsl
out
movb
add
stc
aas
ret
add
add
mov
jb
ljmp
sbb
add
int3
popf
jns
mov
mov
lock
add
sbb
mov
add
add
push
xchg
pop
or
add
fidivrl
and
clc
decb
fdivp
mov
add
mov
incl
add
sub
fwait
cmc
inc
add
add
clc
jbe
add
cmc
sbb
add
add
sbb
add
add
pushl
add
lcall
push
dec
shll
add
mov
add
add
incl
add
call
iret
out
inc
add
adc
dec
xchg
icebp
jne
add
pop
add
test
pop
or
add
fldenv
mov
add
adc
pushl
add
pusha
add
xlat
adc
or
xor
jecxz
mov
addb
dec
push
dec
dec
mov
inc
add
enter
popa
add
inc
add
add
add
push
lret
lret
add
cmpsl
add
addl
inc
add
les
addl
add
js
jg
movsl
add
arpl
decl
inc
add
xchg
cmp
enter
add
add
and
jmp
add
cmp
add
inc
add
movsb
add
lock
pushl
loopne
in
sti
and
insl
sub
jle
stos
dec
xor
ljmp
add
add
xor
lcall
push
add
add
cmp
push
hlt
rolb
sti
sbb
add
add
bswap
pop
lahf
iret
mov
sub
add
lcall
add
add
das
sti
jo
dec
sub
pop
push
in
addl
add
incl
int
cmc
idivb
add
add
sarl
add
mov
decl
xchg
or
imul
dec
jbe
push
mov
push
jno
ljmp
jp
add
xchg
inc
add
mov
add
xor
pushl
ds
movl
xchg
cltd
mov
add
lcall
sti
push
sub
cmp
add
and
mov
incl
ljmp
mov
add
add
and
jmp
add
cmp
fwait
and
pushl
xchg
push
and
and
lcall
sar
push
add
xlat
sbb
outsl
insb
in
aaa
ds
add
add
sub
add
sbb
add
add
pushf
pushl
add
nop
adc
popf
xor
jmp
icebp
addb
xchg
xor
pushf
mov
mov
rolb
mov
repz
inc
add
pop
xor
add
les
sub
add
mov
add
xchg
push
add
sbb
std
jge
mov
add
add
sub
add
or
cmp
or
mov
add
movl
mov
lcall
add
rclb
add
cs
and
call
jmp
mov
pop
or
out
pop
mov
add
repnz
inc
add
sbb
xchg
jecxz
sub
decl
loope
arpl
lcall
pop
sbb
imul
cs
fwait
pop
mov
imul
inc
add
decl
out
and
add
add
daa
add
call
scas
scas
hlt
addl
lcall
add
add
push
cmp
push
dec
cltd
test
xchg
dec
out
sbb
test
rolb
fsubrl
insb
jge
je
idiv
cmp
add
movl
jae
ljmp
test
add
add
add
incl
sub
xor
leave
or
scas
jne
inc
add
sbb
add
push
jae
call
addb
add
or
add
add
pushl
nop
ret
add
xchg
enter
add
icebp
push
inc
add
test
push
aad
xchg
and
decl
fsubrs
add
add
nop
lret
jmp
add
out
in
das
jl
arpl
jmp
add
add
jmp
daa
add
add
prefetch
add
push
mov
cltd
add
push
xor
add
add
stc
xor
incl
pushl
pushl
fmull
fcmovnbe
adc
call
sbb
stc
jle
add
ret
add
xor
incl
cmp
add
stc
pop
int
addb
or
jp
add
add
ljmp
pushl
jmp
call
jmp
add
add
das
nop
je
jg
add
add
add
and
ljmp
add
test
lret
dec
mov
and
jb
jmp
xchg
out
mov
add
repz
xor
repz
arpl
pushl
je
movl
call
add
mov
add
les
movb
add
add
lods
out
addl
mov
add
add
ficoms
lcall
cmp
add
add
add
mov
add
les
stos
jle
cwtl
jle
int3
fs
in
add
jp
movsl
add
push
lea
incl
ljmp
inc
add
cmp
bnd
add
add
lret
insl
xor
ljmp
jno
lcall
and
call
add
fwait
cmp
add
int
adc
ljmp
mov
pop
mov
xor
lcall
loope
adc
push
add
xor
ljmp
pop
or
mov
mov
std
pop
popa
add
mov
or
add
xlat
rcrl
fsubs
incl
fcmovnbe
into
bound
pushl
fisttpl
aaa
sbb
ja
addb
push
add
rolb
aam
add
sub
inc
add
movsl
add
imul
fidivs
push
addb
arpl
jmp
mov
add
incl
add
push
outsb
sub
add
lds
cmp
incl
call
add
out
js
leave
out
mov
scas
mov
add
xchg
push
addl
out
cmp
call
mov
int
sti
js
add
movsl
add
fdivs
call
ret
cmp
movsb
add
call
fstpt
push
das
inc
add
mov
fmull
mov
add
push
add
xor
pushl
pop
std
jno
incl
in
leave
ds
scas
mov
add
xor
dec
insl
mov
ljmp
mov
xchg
lahf
xchg
pop
cmp
add
into
cmp
inc
add
test
incl
mov
call
pop
enter
lahf
pop
movsb
add
jbe
add
rcrb
ret
push
mov
inc
add
les
data16
add
add
xor
fsubrs
pushl
jmp
add
pop
imul
and
ljmp
lcall
pop
push
nop
jns
inc
add
add
push
or
add
add
mov
add
and
incl
inc
add
inc
add
or
ljmp
bnd
add
mov
lods
fs
xor
lcall
aam
add
in
cmp
add
jae
incl
add
xor
incl
add
add
add
loopne
sub
add
inc
add
jns
add
add
jno
incl
add
mov
sahf
shlb
add
in
xchg
into
mov
jne
cs
jae
incl
add
in
enter
add
add
mov
sbb
and
ljmp
add
bound
call
dec
cmpsl
add
stc
je
add
add
jmp
mov
sbb
int
insb
shll
dec
ss
lds
and
pushl
pop
rolb
add
dec
jge
xchg
into
pop
cmp
roll
dec
xchg
adc
mov
add
fnstcw
lret
add
add
flds
add
sbb
mov
lock
in
pusha
add
sub
nop
jle
add
inc
add
scas
popa
add
add
inc
add
aam
fisttpll
out
mov
add
sti
inc
add
lock
and
pushl
add
dec
jns
add
and
lahf
lcall
out
add
decl
mov
int3
cld
push
add
xor
call
je
adc
jmp
movb
adc
jmp
push
pop
pop
dec
mov
sahf
jle
add
add
jmp
pushl
jmp
add
or
dec
xor
lcall
add
mov
add
jmp
add
call
push
mov
add
xchg
pop
adc
dec
xor
decl
sti
lret
icebp
das
sub
jmp
aam
jp
outsl
sbb
add
sub
adc
fisttpl
jp
add
jle
add
add
fsubr
fistps
incl
incl
loope
pop
mov
fsubrp
out
cld
pop
frstor
inc
add
add
cmp
mov
jg
add
xchg
push
inc
add
or
imulb
or
test
dec
loope
aas
out
js
add
les
mov
insl
push
sub
add
cmp
addb
add
push
add
insl
xor
jmp
add
mov
inc
add
and
add
data16
push
add
rolb
sbb
gs
scas
bound
jmp
decl
in
xor
decl
jp
jns
pop
adc
inc
add
test
xchg
dec
les
imul
xlat
insl
adc
inc
add
add
add
test
loopne
jmp
scas
sub
pop
xor
cmp
in
ss
add
cs
imul
das
mov
add
add
pop
dec
pop
push
lods
or
dec
movb
push
shrb
or
push
addl
jmp
pushl
fwait
roll
lcall
ret
fsts
lcall
add
add
jp
jmp
xchg
in
and
add
add
daa
add
add
mov
dec
mov
popa
add
dec
arpl
jp
xor
pushl
ljmp
ret
add
add
add
mov
add
adc
ljmp
add
add
aaa
sbb
pop
sbb
or
jge
dec
cmp
clc
sub
mov
and
xor
call
add
out
jns
addr16
add
push
daa
add
inc
add
inc
add
jo
lcall
add
lcall
sub
loopne
mov
hlt
mov
jl
rolb
jp
pop
and
lcall
scas
jp
add
outsb
jecxz
sbb
cmp
stc
inc
add
mov
mov
add
das
pop
sub
add
inc
add
mov
mov
add
inc
add
add
add
jge
adc
pushl
and
call
jmp
lret
loopne
mov
movl
mov
int3
xchg
pop
add
pop
or
add
decl
add
clc
adc
cmp
pushf
pusha
add
add
cltd
mov
lock
push
xchg
roll
push
add
movsl
add
lods
in
sbb
add
jmp
cmp
stos
sbb
xchg
repz
add
xchg
je
mov
add
jmp
push
add
adc
decl
jo
call
add
fstpt
xor
call
fnstsw
outsl
pop
inc
add
jl
lock
call
sub
fisubrs
decl
xchg
stos
in
and
stos
xchg
or
cwtl
adc
clc
jp
nop
lahf
aad
add
push
add
call
pushl
add
les
jae
pushl
add
mov
inc
add
fwait
pop
dec
adc
jmp
add
je
add
div
mov
jno
in
pop
inc
add
add
inc
add
imul
mov
cmp
add
enter
xchg
xor
call
lcall
add
roll
out
or
push
add
je
les
adc
lcall
popf
mov
add
add
add
mov
out
into
xor
incl
add
xor
cli
data16
add
icebp
mov
inc
add
add
add
test
or
add
add
add
ret
add
mov
call
roll
je
add
jb
decl
test
jnp
xchg
or
xor
jmp
aas
sub
or
or
push
add
in
pop
adc
sub
lea
add
push
add
jg
mov
sbb
or
cmp
xor
test
jg
ficompl
add
addb
add
jmp
mov
addl
out
push
addr16
pop
inc
add
fidivrl
fstps
xchg
mov
add
lcall
add
mov
repnz
int
rolb
cmp
add
add
dec
icebp
inc
add
sbb
out
dec
data16
add
push
jae
incl
ljmp
test
je
mov
xchg
imull
add
imul
add
cmp
call
xchg
xor
fsub
add
cld
mov
pop
add
xchg
repnz
fcompl
shlb
gs
dec
push
popa
add
int
add
out
adc
jmp
ret
add
add
add
add
aam
add
cmpsb
add
add
add
push
or
mov
testb
add
pop
in
ss
add
insl
ss
inc
add
push
test
test
sub
add
add
add
out
add
insb
ljmp
add
mov
pop
ljmp
jmp
incl
add
cmp
loop
rorb
and
jmp
pop
repnz
add
roll
xchg
rolb
add
or
mov
add
call
dec
addb
add
mov
add
mov
add
adc
decl
add
cmpsb
add
out
jnp
out
jbe
add
pushl
addb
pushf
dec
and
jg
pop
sub
mov
add
add
bound
incl
push
add
adc
lcall
insb
or
xor
push
test
nop
mov
mov
imul
mov
in
int3
jno,pt
ljmp
add
add
mov
pop
add
inc
add
daa
add
mov
call
call
xchg
pop
ja
add
add
shlb
dec
stc
adc
ljmp
in
cmp
add
ljmp
movb
add
mov
add
mov
popf
test
rcl
sti
push
scas
push
les
dec
je
rclb
call
ret
add
movl
pusha
add
popf
repz
insb
adc
decl
fildll
push
add
lods
nop
mov
roll
jle
cmp
pop
std
addl
add
add
add
push
sti
pop
repz
add
movb
add
xchg
lahf
xchg
movsb
add
in
out
add
inc
add
add
or
in
loop
inc
add
lock
add
dec
mov
add
in
pusha
add
adc
clc
movsl
add
add
push
popf
enter
dec
xchg
mulb
nop
mov
ja
addb
xchg
loope
push
add
sarb
add
loopne
js
in
add
ljmp
incl
add
cmp
je
repnz
add
push
out
xchg
rclb
add
jle
add
std
dec
lahf
lret
loopne
dec
xchg
xor
pushl
add
aam
add
add
add
push
aaa
xor
pushl
into
pop
mov
add
push
add
mov
add
or
mov
addb
repnz
cmp
mov
mov
repz
xchg
pop
div
call
add
jge
add
mov
aad
cmpsb
add
pop
push
addl
pop
add
or
inc
add
les
pop
and
jmp
xor
lock
clc
jns
add
add
in
jge
pop
dec
addl
and
push
cmp
roll
dec
and
jmp
dec
jmp
ficompl
lods
sub
decl
pop
outsb
outsb
insb
cmp
xchg
push
add
add
les
test
add
les
shlb
add
inc
add
pop
xor
mov
mov
decl
jne
mov
adc
decl
add
inc
add
iret
clc
out
jge
mov
jno
inc
add
pushl
add
push
adc
pushl
add
dec
roll
pop
xor
ljmp
add
add
mov
add
add
add
jno
inc
add
add
add
inc
add
psubb
das
cmpsb
add
cmp
incl
lcall
add
mov
adc
add
decl
sti
rolb
add
rcrb
mov
add
dec
popf
call
decl
sub
add
movsb
add
decl
or
add
fsubrl
jl
cmc
push
loopne
add
test
call
into
xchg
pop
jnp
add
movl
add
add
mov
negb
aas
fwait
cwtl
pop
jp
js
add
mov
add
jl
mov
push
add
cmp
add
push
dec
je
xor
call
psrad
xor
loopne
pop
push
aam
add
push
pop
jl
jne
add
addb
outsl
push
addr16
inc
add
sbb
mov
das
lahf
stos
pop
add
incl
mov
lods
adc
clc
cmpsl
add
xor
call
ds
pop
popf
out
inc
add
negl
add
or
add
ljmp
xchg
mov
pushf
push
add
leave
dec
pusha
add
aam
sbb
push
pop
pop
mov
add
inc
add
call
decl
cmc
pushf
addr16
mov
or
sub
add
ljmp
mov
jle
add
arpl
dec
negl
sub
add
rorb
test
push
add
mov
cmp
add
jae
lcall
out
fldt
xlat
jp
out
mov
lods
cltd
sub
add
mov
and
xchg
cli
leave
movsb
add
inc
add
rolb
add
pushl
add
daa
add
inc
add
inc
add
pop
jne
dec
dec
repnz
call
adc
cmp
sbb
pop
push
leave
sub
cld
aas
aaa
sub
fdivr
xor
fsubrl
out
mov
lret
add
je
add
sti
jl
fstpl
xor
decl
and
lcall
insb
mov
or
add
push
sti
xchg
cmc
stos
jae
decl
cs
mov
mov
xor
pushl
scas
stos
or
aam
add
mov
add
add
cld
cwtl
sbb
add
xchg
push
cmpsb
add
xchg
out
cltd
je
xor
inc
add
mov
out
into
jecxz
mov
add
jmp
add
xchg
mov
add
in
aas
movl
bound
incl
add
sub
hlt
enter
repz
lea
inc
add
add
call
and
push
add
add
add
enter
data16
pushl
outsb
dec
into
addb
add
call
add
add
pushl
push
mov
bound
mov
imul
jge
mov
add
jbe
push
lahf
lods
mov
mov
add
hlt
lds
jnp
dec
outsb
cmpsl
add
insl
pop
sub
ljmp
fldenv
call
sbb
add
rcr
xor
jle
add
mov
add
jae
lcall
add
mov
lcall
push
add
xlat
lds
inc
add
call
cmpsb
add
jb
jmp
test
jp
add
sbb
roll
add
sbb
or
add
add
ljmp
int3
cmc
mov
xchg
imul
int3
push
or
mov
add
imul
jp
push
scas
aam
add
ficomps
fcmovb
add
adc
pushl
imul
jmp
movb
sarb
add
out
cs
clc
cli
fst
xchg
push
jae,pt
pushl
add
push
add
add
jmp
add
insb
cmpsl
add
add
mov
add
addb
rcrl
add
test
data16
decl
cmp
or
jmp
add
push
add
mov
or
pop
add
add
fdiv
mov
shlb
jmp
add
scas
add
iret
mov
movsb
add
nop
or
mov
stos
fnsave
add
jnp
js
or
add
add
cmp
add
pushl
pop
out
rol
add
add
mov
lock
cli
xchg
xchg
push
add
dec
je
cmc
mov
mov
in
lods
sub
shlb
xchg
popa
add
stos
sbb
add
jno
push
push
cwtl
pop
outsl
sbb
pop
inc
add
movsl
add
inc
add
add
clc
lods
adc
dec
fcmovne
cmpsl
add
add
inc
add
cmpsb
add
mov
in
mov
pushl
clc
jo
js
add
jg
xchg
add
test
dec
std
addl
rolb
cmp
cltd
push
outsb
ret
add
inc
add
ja
add
