rorb
clc
jge
jmp
add
les
mov
imul
mov
rcll
shll
sar
shll
js
loope
lahf
inc
ja
stc
ljmp
call
mov
cmp
in
add
scas
jae
jg
sub
xor
int
sub
sarb
sti
out
popf
call
add
aaa
pop
xchg
or
cmc
loope
push
fstpl
add
dec
pop
and
mov
cli
int
dec
adc
lret
ret
pop
test
push
rcll
arpl
mov
bound
std
scas
ficomps
idivb
stos
xchg
jmp
cld
adc
add
scas
repnz
add
out
icebp
xor
shlb
add
add
mov
stc
icebp
test
cwtl
pusha
add
mov
xor
add
xchg
dec
filds
add
mov
test
fimuls
insb
orl
aad
xchg
and
fstl
add
push
push
cwtl
lahf
jg
push
lock
sub
add
ret
dec
nop
xchg
test
les
add
repz
add
add
pop
add
push
xchg
adc
add
mov
pusha
add
mov
aas
add
pop
out
xchg
movsb
movsb
or
mov
mov
add
mov
cmp
jnp
add
sbb
nop
pop
imul
flds
push
add
jecxz
inc
add
add
inc
add
paddq
and
xchg
aas
rcl
pusha
add
dec
stos
and
in
mov
fs
or
add
add
mov
ret
sbbl
aad
sbb
add
sub
mov
add
or
xor
add
fisttpl
ss
cmpsl
inc
add
je
lcall
mov
add
xchg
fisubrs
add
sti
xor
aas
insb
dec
into
jbe
push
mov
and
pop
inc
add
add
mov
mov
lret
into
dec
test
xor
cmp
insl
mov
adc
xchg
xlat
int3
mov
adc
in
inc
add
inc
add
or
hlt
addl
xorl
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
rcl
stos
fcoms
add
int3
lock
out
in
mov
pop
mov
loope
mov
popa
clc
int3
imul
pop
mov
xchg
push
rcll
cmp
add
inc
add
js
push
pop
ss
inc
xchg
mov
int3
aas
pusha
add
js
nop
out
in
cli
aas
push
iret
fwait
mov
lods
cmc
mov
cmp
daa
and
and
je
sarl
add
or
ret
dec
adc
icebp
jle
ss
inc
cmp
add
jmp
dec
mov
add
inc
xor
rcrl
clc
push
mov
test
scas
sbb
fisubl
fidivs
cmp
jl
push
xor
add
stc
in
mov
sti
lret
push
stc
fdivs
inc
jbe
bound
daa
in
mov
and
mov
dec
out
adc
or
adcl
out
in
stc
and
or
aad
jns
mov
movb
nop
loopne
add
inc
int
pushf
movsl
xchg
adc
nop
stos
inc
xor
add
add
jecxz
inc
aad
fcompl
xchg
js
add
jbe
rolb
xchg
push
vmovddup
mov
or
stos
hlt
cltd
in
cmpsb
and
jl
cmp
ret
mov
and
dec
icebp
fildl
mov
in
push
in
push
outsb
mov
mov
jle
fs
and
sti
rcll
shll
movb
nop
adc
btc
mov
lea
sub
outsl
push
cmp
cli
adc
pop
ljmp
xor
mov
add
les
lods
lea
mov
xor
add
xchg
dec
inc
add
dec
pop
cltd
pop
fs
pusha
add
stos
and
mov
add
ret
mov
xor
in
dec
mov
pop
lea
nop
imul
add
mov
sbb
mov
add
sbb
fldcw
out
dec
cmpsb
gs
out
sbb
hlt
in
push
and
inc
pop
lds
inc
add
test
inc
add
xchg
xor
aad
mov
dec
test
add
popa
mov
out
pop
ja
sbb
mov
lods
int
dec
jmp
ds
or
sub
out
sbb
add
fidivs
sub
xor
inc
lahf
dec
xchg
jae
nop
aas
dec
inc
and
push
add
sub
mov
test
sbb
pop
cmc
jnp
out
add
movsb
stc
or
test
vhsubpd
or
insl
or
adc
add
dec
scas
cld
add
push
jns
in
xchg
test
int
decb
cmp
or
stc
addb
dec
dec
insb
mov
mov
cmp
push
ret
popa
nop
dec
pushf
pop
cmpsb
cmp
int
mov
test
xor
mov
pop
data16
hlt
cmpl
shrl
out
adc
jb
pop
in
pop
ficoml
iret
inc
xchg
mov
mov
mov
pushf
adc
lret
clc
sbb
jno
int
add
stos
xchg
popa
gs
ds
imul
pop
mov
sbb
mov
cli
mov
add
jmp
add
icebp
or
mov
in
push
int3
scas
pop
adc
cmp
add
add
push
add
sarb
idivb
call
movsl
js
in
mov
mov
jecxz
fdivs
add
iret
data16
cmpsl
xor
repnz
push
push
rcl
xor
add
sub
jmp
ret
call
push
dec
loopne
arpl
sbb
dec
inc
jo
aas
dec
inc
pcmpeqw
or
repnz
and
sub
mov
ljmp
xchg
loope
popa
subl
xchg
jge
test
cmp
imulb
dec
or
inc
adc
lods
mov
mov
aas
clc
decb
pop
dec
dec
jg
cmp
out
dec
iret
insb
mov
xor
das
and
js
cmp
gs
arpl
stos
xchg
lock
mov
xchg
mov
enter
mov
xor
add
cmp
jg
push
mov
rolb
mul
stc
mov
and
rol
add
xchg
push
inc
add
arpl
ret
xchg
sub
inc
add
addr16
out
lcall
add
xchg
xchg
sbb
adc
pop
addl
jp
add
adc
sub
icebp
mov
mov
out
notb
pop
ud2
test
shl
jp
jae
xor
popf
pop
repnz
ror
pop
xor
loopne
js
lret
in
fisubs
bound
sub
jl
sub
lret
aad
movsb
frndint
xlat
ret
mov
jl
loopne
adc
pop
in
mov
pop
push
push
outsb
xchg
fisttpll
fcmovnb
add
test
mov
imul
outsl
mov
and
add
sbb
or
scas
stc
mov
and
xchg
lret
shr
aaa
jg
push
add
outsl
sub
pop
in
fwait
dec
push
ds
scas
push
iret
lahf
negb
lock
lods
dec
and
mov
xor
add
sti
jno
xchg
jo
or
add
push
adc
test
fstps
dec
push
enter
sar
fsub
cltd
mov
divb
mov
addb
int
fs
daa
inc
mov
push
inc
pushf
les
dec
sub
pusha
add
stos
addr16
dec
mov
add
mov
push
divl
or
and
jecxz
fadds
and
inc
add
inc
adc
mov
mov
inc
arpl
insb
arpl
mov
nop
in
adcl
movsb
add
into
arpl
push
xchg
jg
or
movzwl
add
cmp
ret
fbld
adc
stos
std
sahf
xchg
bound
outsb
ljmp
mov
xchg
movsb
sbb
addb
aas
shl
pop
movsl
adc
dec
pop
addb
and
je
cmpsl
inc
add
inc
add
les
dec
mov
fisttps
mov
nop
inc
jns
add
rcll
mov
cmp
and
outsl
jo
sbb
xlat
or
sub
jge
jno
mov
fcomps
fcmovnbe
mov
sbb
jb
xchg
mov
mov
xor
cmpsl
fisttpl
pop
pushl
enter
das
addr16
sbb
jns
jmp
jb
xchg
jecxz
xchg
or
inc
jns
andl
sub
iret
in
jp
inc
push
mov
repz
pop
ret
clc
add
andl
dec
test
inc
add
add
add
dec
lcall
pop
sbb
cmpsb
shll
inc
mov
in
add
add
inc
and
add
sbb
inc
add
fidivs
pop
and
mull
add
pop
sbb
testb
dec
test
push
jmp
dec
dec
add
add
lds
xchg
jl
lcall
je
test
shrl
or
shll
xchg
je
rcrb
add
fcompl
jo
stos
sbb
mov
add
xchg
ficompl
or
inc
add
push
test
jo
pop
in
xchg
adc
fcoms
add
xchg
daa
insb
fdivrs
fisubrs
mov
and
iret
iret
push
xchg
mov
push
push
int3
je
cwtl
xchg
adc
inc
push
iret
dec
dec
fwait
sbb
push
xchg
jbe
out
sbb
jno
into
cltd
adc
cli
cmpsl
xor
pop
push
mov
and
mov
or
popa
icebp
incl
add
add
leave
movb
jmp
push
lcall
pop
imul
cli
jbe
mov
loope
test
testb
add
or
xor
jno
fdiv
jmp
scas
push
inc
add
arpl
pusha
add
outsl
fnstsw
dec
xlat
mov
jl
test
sub
fldenv
dec
scas
inc
add
push
jmp
ret
cmp
aad
xor
ficoml
and
inc
add
pop
cs
stos
push
repnz
ret
test
ds
push
addb
in
sub
add
icebp
cmp
int
pop
in
cld
pusha
add
addb
jge
ss
pop
fcom
xchg
and
push
pop
push
repnz
xchg
pop
adc
addb
inc
add
cmp
lret
sbb
xor
fwait
mov
sti
xchg
cmc
rorl
mov
pop
pusha
add
add
cmpsl
mov
sub
pop
cmp
notb
jg
or
insb
mov
mov
xlat
bound
or
xadd
out
jecxz
xchg
xchg
repnz
mov
add
add
xchg
lock
ds
and
add
mov
add
push
leave
jae
mov
push
inc
add
pop
xchg
jmp
enter
xchg
test
jnp
pop
mov
dec
enter
inc
add
bound
cmc
clc
fs
xchg
inc
add
pop
repnz
ret
add
ds
push
rolb
pop
sbb
cwtl
xor
push
addb
fisubs
gs
int
xchg
pop
dec
std
mov
xorps
std
repz
fcompl
add
push
mov
or
shll
xor
movsb
xchg
repz
gs
movsl
dec
xchg
jno
mov
cld
jmp
sub
push
jno
push
dec
push
movb
sub
imul
add
jbe
jge
sub
pop
dec
ss
xchg
out
in
cmp
push
dec
jmp
sti
jno
pusha
add
mov
xchg
mov
pusha
add
test
add
pushf
mov
inc
add
add
lods
mov
addb
adc
pop
jno
jp
movsb
adc
add
inc
jb
add
data16
sub
inc
add
xor
loopne
add
in
add
add
cmpsl
mov
lahf
mov
mov
add
adc
clc
sbb
push
inc
add
fwait
mov
lcall
xlat
dec
adc
add
or
popf
loopne
int3
adc
fldt
nop
and
jno
mov
addb
sub
pop
decb
jle
add
iret
in
sbb
out
mov
jmp
sub
es
bound
lds
outsb
aad
push
mov
cmp
in
add
ljmp
push
add
int3
pop
xchg
push
inc
push
push
lock
push
xlat
ljmp
popf
mov
les
out
in
icebp
sbb
idivl
mov
push
jo
movsl
sbb
imul
insl
jne
xchg
mov
mov
jle
idivl
ja
mov
sbb
xchg
js
addb
repz
shrl
jo
xor
xor
mov
cmp
div
les
mov
add
jbe
ffreep
adc
and
fcomps
or
xor
xlat
movsl
dec
fcmovne
std
push
test
stc
int
or
lahf
and
repnz
popw
dec
addb
xor
mov
rcrl
sub
stc
mov
xchg
in
ja
in
cmp
outsl
daa
sub
mov
mov
loop
gs
push
arpl
cld
lret
les
mov
xor
pop
lods
sbb
cmpsl
lods
or
sub
inc
andl
outsl
cld
cmp
clc
jne
mov
dec
mov
push
mov
std
mov
sub
pop
pop
mov
ja
cld
inc
add
sbbl
addb
fisubs
rcrl
adc
adc
lods
mov
mov
mov
out
mov
int
add
push
jnp
aas
out
faddp
mov
js
sub
iret
fidivrl
or
aas
push
cwtl
inc
add
popa
and
movsb
mov
lahf
inc
rol
add
mov
xchg
adc
movb
test
aas
call
add
popa
sbb
leave
hlt
rcr
pushf
push
flds
imul
ja
xor
cmp
out
in
add
mov
and
xchg
movsl
jns
pop
js
xor
xor
stc
jb
outsb
mov
jno
add
mov
jno
add
arpl
call
jmp
mov
mov
addr16
adc
add
fldl
mov
push
xor
or
addb
xor
movsb
stos
ss
add
jne
movsb
push
sub
addb
jmp
mov
pop
jae
xchg
jg
cmpl
ret
cmp
ss
test
inc
add
xor
clc
xchg
mov
fimull
pushf
mull
add
shll
std
mov
shlb
add
mov
rcrb
mov
sub
push
je
sub
dec
mov
dec
lds
adc
add
adc
or
add
or
pop
outsl
inc
add
out
xor
sub
orl
and
imul
loop
jp
jecxz
addb
pusha
add
cmovs
call
xchg
mov
mov
sub
ss
xchg
pop
add
mov
push
flds
add
and
mov
and
cmp
scas
mov
mov
cmp
inc
add
mov
mov
push
push
rorl
and
outsb
sub
xor
iret
xchg
sbb
in
addr16
pop
je
adc
push
sbb
mov
inc
add
push
add
ljmp
aaa
add
sbb
addb
nop
xchg
popa
and
dec
xchg
movsb
testb
inc
xchg
sub
jae
dec
in
push
xchg
jle
scas
adc
dec
rorl
sub
dec
fisubs
add
rorl
iret
jge
scas
adc
fldl
add
ljmp
sub
int
adc
add
fwait
in
mov
shll
lds
and
lcall
mov
ljmp
mov
dec
jns
lods
out
arpl
xor
pop
enter
add
out
js
jne
inc
add
test
add
inc
add
inc
add
add
leave
cmc
inc
add
js
mov
into
loopne
xchg
ret
jb
adc
mov
add
vmwrite
addb
push
and
pop
mov
mov
into
pop
arpl
mov
mov
adc
fldl
push
gs
push
inc
aad
xchg
push
enter
xchg
into
xchg
lcall
adc
add
fcmovnu
int
aad
jnp
scas
inc
test
fcmovbe
fnstenv
or
outsl
and
adc
xchg
sarb
xor
fisttpl
xchg
gs
push
imul
jb
push
and
xchg
add
adc
mov
test
xchg
sbb
or
add
dec
sub
sub
popa
repnz
pop
sbbl
push
adc
clc
mov
xchg
aam
xor
enter
xchg
les
jo
dec
inc
add
xchg
rolb
add
lods
mov
out
sbb
fcoms
mov
fs
mov
shld
push
mov
jns
les
jecxz
leave
xchg
sub
into
ret
int3
fs
adc
xchg
sahf
fsubrp
cwtl
jmp
cli
mov
and
inc
shll
mov
sub
stos
jbe
cld
cmp
hlt
mov
test
addb
mov
lods
mov
inc
inc
cmpsb
pcmpeqb
xchg
rolb
push
cmp
scas
stos
aas
lret
mov
jno
lret
push
xchg
push
lcall
sbb
mov
int
pop
sbb
push
adc
stos
cmc
jbe
repnz
icebp
push
repz
add
adc
xchg
shl
nop
xchg
push
mov
jno
sub
fisttps
dec
jg
mov
in
pop
inc
add
push
out
cltd
jb
js
iret
subl
mov
add
popa
dec
adc
test
xchg
lods
sub
add
dec
ret
mov
callw
add
dec
fwait
push
and
notb
inc
mov
add
cli
pop
inc
add
ficoml
rcrb
inc
inc
and
repnz
lods
sti
or
lea
movsl
pop
pusha
add
xchg
cmc
ss
cmp
mov
inc
add
jl
add
sti
dec
or
pop
loopne
lods
sub
push
add
sarl
or
lret
push
xor
xor
add
addr16
aaa
fwait
aad
in
dec
push
add
int
aad
call
add
out
mov
loope
aaa
or
cmpsl
out
xchg
mov
movsl
jo
ljmp
push
repnz
out
movsb
push
mov
add
bound
shll
fcompl
or
inc
in
push
fdivr
adc
sub
jbe
xchg
cs
sub
sub
notb
inc
xor
dec
mov
xor
lahf
scas
mov
mov
xorl
test
or
pop
out
hlt
cmp
add
es
inc
xor
lock
jp
push
addr16
std
mov
mov
mov
movsl
push
sub
pop
shr
add
sub
sub
add
xor
rolb
xchg
mov
je
fwait
test
add
scas
xchg
cmpsb
iret
dec
xchg
xchg
lea
mov
addr16
clc
inc
add
leave
sahf
pop
std
jmp
dec
sahf
js
addr16
inc
add
jmp
das
push
inc
add
div
and
fcmovb
add
sti
in
popf
fmull
jae
add
add
stos
mov
push
mov
pop
out
cmp
add
push
mov
fldl
repnz
xor
lret
ja
cmp
mov
test
stos
mov
push
scas
mov
cmp
mov
add
hlt
cs
shll
push
inc
cmpsl
push
das
addr16
pop
fsubs
ja
and
mov
pusha
add
cs
mov
dec
jns
and
adc
aad
fadds
in
int3
data16
inc
add
or
jnp
jg
cli
jl
or
lods
mov
push
fstp
add
cmp
test
scas
enter
or
inc
int
adc
les
jmp
incb
xchg
add
cmp
es
test
push
test
mov
dec
sbbl
addb
popf
fsubrl
cmp
and
bound
lret
mov
xor
lcall
add
sub
xchg
movsl
xchg
paddb
hlt
ljmp
ret
jle
jo
push
jne
gs
mov
out
cmp
sbb
mov
jb
ss
cmpsl
out
sub
pop
xchg
aas
lcall
dec
pop
dec
push
fcmovnu
lahf
enter
mov
mov
out
inc
add
arpl
sub
lods
cmp
push
shlb
add
dec
movsb
dec
push
enter
loopne
add
stos
sub
add
or
aaa
rep
mov
ret
lret
aam
mov
xlat
push
ja
shll
sbb
out
add
xor
and
push
stc
mov
out
mov
and
mov
aaa
cmp
loopne
jo
test
adc
xchg
inc
aad
adc
dec
sub
es
fsubrs
repnz
xchg
scas
sbb
in
enter
leave
jl
aad
call
lods
push
cld
cs
cltd
dec
mov
cli
rcll
js
in
mov
pop
lret
insl
insl
and
add
addb
xor
add
addb
ret
mov
loope
cmpsb
bound
push
leave
cmp
inc
lods
mov
fisubl
fdivrs
push
in
push
jp
mov
lock
cld
shlb
and
testl
insb
or
add
inc
xor
imul
sub
sahf
xor
xchg
mov
decl
mov
mull
clc
mov
rcrb
js
mov
mov
mov
in
dec
or
rcll
inc
add
add
dec
arpl
ss
out
xchg
sbb
xchg
lods
lods
mov
insb
outsb
push
out
add
adc
xchg
fistps
xchg
push
lcall
push
add
test
xchg
flds
loope
mov
jae
jne
rolb
mov
jne
insl
js
sahf
stos
outsl
int3
out
popa
push
push
popa
sbb
jle
imul
notl
in
data16
ret
or
flds
fimull
stc
inc
movsb
pop
adc
into
inc
add
mov
and
pop
add
mov
xchg
xlat
pop
push
ficomps
loopne
add
push
xchg
and
mov
pop
cmpsb
rcr
adc
add
fnstenv
cmp
push
xchg
into
xchg
test
add
push
cmc
or
mov
rcr
repz
insb
addb
adc
mov
xor
pop
fnstenv
xlat
dec
frstor
icebp
jne
add
xor
xor
add
pop
pop
lock
xor
in
daa
inc
add
add
in
jnp
bound
pusha
add
pop
test
or
rcr
mov
inc
ljmp
add
add
stc
sbb
push
aam
cmc
xlat
and
lahf
pop
es
sbb
mov
fisttpl
mov
jo
leave
out
xchg
frstor
fdivrs
sub
mov
imul
dec
popf
repz
mov
push
sub
and
sbb
add
pushf
xchg
jae
jecxz
mov
movsl
mov
add
mov
xchg
add
ljmp
jns
dec
outsb
jns
aas
iret
gs
mov
add
sub
mov
bnd
jne
loop
sar
popf
lea
testb
movsl
imul
mov
iret
push
xor
xor
fsts
data16
add
push
or
add
or
push
nop
xor
call
mov
pop
insb
sarb
add
bound
mov
inc
add
scas
mov
mov
push
lahf
outsb
and
pop
pushf
test
sub
scas
aaa
xor
mov
mov
popa
mov
xchg
dec
aam
insb
adc
push
mov
inc
add
outsl
add
cmp
sbb
pop
loopne
xor
ret
loopne
cmp
mov
or
push
lds
cmp
add
stos
sub
pop
jnp
mov
jo
inc
push
push
sbb
cmp
add
nop
xor
mov
in
and
rorl
rorb
roll
fldt
adc
sbb
jnp
jno
or
add
add
mov
add
data16
out
sti
or
out
lods
xchg
cld
mov
ja
data16
ss
data16
mov
xor
call
mov
into
les
imul
je
ljmp
clc
push
add
mov
lahf
in
arpl
or
xor
test
icebp
addl
inc
add
out
dec
adc
pop
cwtl
scas
pop
xchg
adc
mov
test
roll
push
xchg
clc
and
in
nop
and
fwait
pop
pushf
lret
or
xchg
out
lock
cmc
cmp
dec
lret
scas
sub
xchg
mov
push
pop
jae
sub
cltd
inc
add
add
xchg
sbb
out
xchg
mov
lret
cmpl
stos
dec
inc
sahf
leave
dec
pusha
add
into
cmpsb
dec
jo
popf
std
push
scas
sub
cmpsb
loopne
rolb
adc
movb
xchg
jmp
sahf
jo
rcll
fcmovnu
fisubrl
jne
sbb
pop
lret
divl
mov
movb
aaa
add
rcrb
cmpsl
loopne
pushf
adc
dec
jb
push
add
xchg
pop
arpl
inc
add
xchg
popf
lods
mov
mov
lcall
xor
or
add
bound
mov
fimuls
clc
pop
jp
into
xchg
push
int3
addb
gs
test
lahf
outsl
arpl
ret
push
xchg
movsb
addb
arpl
or
push
repz
inc
add
dec
jne
pop
shll
aam
cmp
push
push
and
jecxz
fsubl
xor
jnp
cli
ds
aad
aad
std
pop
sub
push
int3
int3
pop
cmp
std
hlt
adc
scas
insb
sub
or
cmp
jbe
xor
mov
lret
add
mov
xchg
loope
sbb
inc
add
lret
sti
dec
sub
cld
mov
inc
add
stc
pusha
add
jg
sub
add
pop
jle
jp
in
repz
push
adc
ljmp
clc
xchg
push
xchg
and
jne
fcomps
mov
into
std
or
int
cmpsl
mov
xor
xchg
mov
mov
stc
dec
lcall
insl
lds
cs
clc
roll
add
dec
call
pop
ds
dec
andl
fbstp
add
in
scas
adc
sarb
fcmovu
cmc
mov
lret
js
mov
push
inc
add
dec
inc
push
cmp
gs
push
mull
or
les
dec
call
push
inc
mov
in
pop
ret
jae
pop
pop
dec
dec
adc
lods
in
jo
cs
cmp
ret
xor
pop
dec
push
xor
movb
aas
scas
fs
mov
pop
js
xlat
in
jecxz
sti
cmp
gs
adc
aaa
cmp
add
dec
out
fcmovu
and
adc
int
push
add
jg
mov
adc
repz
in
fdivs
xchg
xchg
out
add
jle
add
andl
or
scas
decl
sub
inc
add
ja
xor
insb
mov
data16
adc
add
xor
faddl
xchg
cmpsl
adc
sbb
out
dec
ljmp
adc
cmpsb
push
out
add
sar
out
sbb
push
add
or
popf
mov
out
add
sbb
xchg
or
adc
jg
ja
and
mov
addb
pop
push
das
stos
and
jno
call
push
push
mov
sbb
xchg
loopne
add
mov
xchg
push
mov
dec
pop
loope
int
imul
add
and
loopne
push
mov
xlat
aas
or
leave
pop
das
pop
sub
mov
sub
push
daa
mov
adc
jns
in
aaa
mov
mov
lcall
jge
lcall
push
cwtl
push
cmp
ja
push
add
mov
add
or
inc
adc
and
je
test
add
lds
mov
sub
mov
cld
fldl
popa
aaa
mov
cli
mov
scas
out
and
int
pop
out
xchg
inc
mov
movsb
sbb
cs
js
in
cmp
cmp
flds
inc
add
push
imul
inc
add
jae
push
add
lcall
inc
add
mov
ds
add
es
pop
movsl
gs
xor
pop
mov
loope
sub
add
adc
das
loopne
add
pop
sub
jle
mov
lcall
add
out
pmaxub
movsl
mov
rorl
mov
xchg
scas
lods
sbb
paddb
jno
pop
or
test
add
mov
repnz
cwtl
fstpt
dec
aam
add
add
daa
lods
pop
jle
adc
add
ljmp
add
xchg
test
mov
add
in
mov
js
xchg
push
jno
scas
stos
mov
add
inc
dec
fisubrs
movsl
test
and
add
add
ret
movb
stos
out
imul
lods
stos
lods
daa
push
hlt
and
cli
push
test
icebp
pop
je
add
outsl
imul
sbb
arpl
jmp
into
xchg
mov
jge
add
xchg
int
mov
aam
mov
test
negb
stos
loope
jg
jmp
ret
adc
sub
dec
pop
and
outsl
xor
and
adc
inc
add
mov
popa
addb
inc
cmc
or
jb
mov
adc
push
lea
lock
dec
push
in
pop
imul
push
iret
ret
push
or
adc
int3
popa
out
in
test
sbb
mov
nop
ret
mov
rol
add
rolb
xlat
jae
stos
int3
scas
inc
jne
aad
sbb
mov
add
and
add
jne
mov
in
outsb
add
leave
xlat
cmp
pop
mov
test
xchg
adc
add
add
ror
xor
cmp
sub
stos
scas
aaa
and
xchg
out
outsb
and
fnstcw
mov
lahf
mov
dec
pushf
leave
in
dec
and
aas
mov
add
fildll
fiadds
adc
fsubl
cli
jae
jne
ss
daa
ffree
dec
jge
cmp
loopne
pop
adc
jp
jle
mov
mov
jp
loop
push
xchg
movsl
jmp
inc
add
dec
lods
and
mov
enter
add
test
mov
add
cmp
jnp
add
jbe
in
mov
dec
pop
es
adc
addl
cmpsb
mov
retw
or
inc
add
cmp
xchg
cmp
push
cli
xor
mov
sbb
clc
mov
mov
add
pop
mov
jb
dec
iret
fs
xchg
pusha
add
loopne
mov
ficompl
mov
cmp
jne
fdiv
out
cmc
mov
add
cmp
je
out
arpl
fwait
pop
call
pop
or
cmp
lret
pushf
add
loop
push
dec
repnz
mov
idivl
mov
adc
out
pop
sar
stos
call
or
or
mov
xchg
jge
stc
mov
add
cmp
sbb
xchg
cmp
dec
nop
jg
imul
mov
cmp
mov
fidivrl
fwait
mov
bound
movsb
je
inc
repnz
stos
shl
jbe
aam
sbb
nop
sbb
sbb
inc
adc
dec
pusha
add
mov
cmp
fisttpll
mov
xchg
in
es
mov
mov
xchg
adc
iret
fsubrl
add
fistpl
fstpt
mov
xor
rcl
add
fisttpl
mov
inc
add
push
dec
or
test
das
cmpsb
les
insl
int3
mov
xor
sbb
sub
adc
pop
enter
push
pushf
in
xor
lock
mov
push
leave
ljmp
add
hlt
ljmp
loop
dec
pop
xor
into
mov
and
divl
push
cltd
out
aas
decb
sub
add
imul
xchg
mov
xchg
dec
into
mov
jl
push
jge
adc
icebp
test
dec
cs
les
dec
dec
jl
adc
lret
push
call
push
push
rol
rolb
jge
add
lahf
cs
lahf
popa
add
mov
test
daa
dec
inc
add
std
pop
sbb
in
adc
daa
mov
addb
jnp
pop
adc
fcomp
mov
add
dec
xor
xor
outsb
leave
fldl
add
add
mov
adc
mov
sub
cmp
push
add
pop
jns
add
jle
mov
in
add
jae
pusha
add
mov
and
jbe
xor
jge
adc
cld
shll
xlat
pop
inc
add
xor
mov
lock
frstor
add
dec
rclb
test
clc
std
or
cmp
jae
mov
scas
insl
nop
out
rcll
lahf
shl
lahf
pop
add
or
xchg
mov
add
cmp
add
pop
pushfw
fldenv
inc
into
out
add
add
dec
push
mov
add
or
stc
pusha
add
adc
faddl
add
ja
in
fistps
shrd
in
xorl
fwait
add
sub
xor
lcall
add
add
movl
adc
mov
enter
mov
and
xor
ret
movb
std
dec
fstps
push
and
mov
add
pop
stos
add
imul
push
or
add
lahf
out
leave
mov
adc
rolb
dec
pop
mov
and
jp
addr16
fisubl
jge
scas
or
add
outsb
mul
and
mov
and
stos
cmp
xchg
pop
lods
int
hlt
icebp
xor
sub
pusha
add
add
mov
nop
aaa
push
lahf
fiaddl
inc
mov
dec
mov
and
inc
add
inc
add
fidivl
fimuls
inc
inc
add
add
in
pop
inc
add
or
dec
ficomps
xor
and
cmp
out
in
je
fiadds
fsts
dec
pushl
stos
stc
add
push
pop
pop
je
pop
loopne
sbb
repz
rolb
ffreep
add
and
rolb
add
and
cltd
hlt
push
pop
popa
rcll
mov
mov
pop
mov
and
add
add
adc
cmpsl
mov
mov
mov
cmp
imulb
lods
cwtl
clc
sub
dec
mov
or
cmpsl
fcmovnu
or
or
sbb
test
xchg
jecxz
in
push
call
int3
fldt
addr16
add
cld
pop
mov
in
int
dec
jp
xor
mov
cmp
xor
mov
fnstcw
and
repnz
dec
sbb
mov
adc
xor
xlat
jbe
mov
lret
sbb
sub
mov
add
mov
add
aam
js
jge
rcl
dec
sub
push
cmp
xchg
stc
dec
fcos
jecxz
sbb
add
cltd
in
xor
sub
push
and
adc
lock
add
jno
or
adc
popf
xchg
incl
rorb
icebp
pushf
data16
cltd
xorl
imul
jmp
and
stos
in
data16
je
add
jmp
ja
addb
outsl
cmp
enter
ret
sub
cli
es
add
rolb
xchg
adc
stos
mov
add
iret
js
jl
jns
rcll
pop
imul
ret
hlt
lock
mov
aas
inc
mov
xor
adc
push
and
xor
repz
dec
scas
mov
fisttps
inc
push
xor
dec
movsl
mov
clc
mov
jo
lods
daa
dec
daa
cli
sub
inc
popf
push
ret
repnz
add
jg
mov
push
cmp
add
imul
subl
hlt
push
xchg
sbb
xor
rolb
add
notb
lea
sbb
xchg
lods
pop
jne
aaa
pop
dec
pop
dec
jl
inc
cmpsb
insl
add
adc
scas
sbb
lret
pop
sahf
mov
dec
int3
aas
add
int
cmp
pop
lcall
fwait
enter
mov
cmp
cld
dec
and
mov
inc
add
sub
lea
out
jb
mov
call
int
lahf
pop
call
sbb
cmpl
add
outsb
imul
jne
jle
xchg
cltd
cmp
es
adc
lock
ljmp
outsl
xchg
bound
cmc
mov
add
add
ljmp
mov
test
sbb
dec
xchg
jl
and
jb
mov
outsl
jb
pusha
add
mov
je
aaa
mov
adc
jo
fsubrs
ljmp
sti
mov
mov
mov
pop
movsb
outsl
xor
add
push
mov
mov
aad
in
lret
and
mov
cmp
jno
mov
push
mov
push
jns
fisubs
movb
fldl
pop
mov
pop
inc
add
inc
add
dec
outsb
das
cmp
out
mov
mov
mov
add
cmp
pop
inc
out
and
xor
cmp
add
stos
add
daa
xlat
and
inc
pop
jae
call
xchg
rcrb
imul
outsl
add
dec
sub
out
popf
sub
into
jae
cmp
add
xchg
lock
idivb
imul
mov
and
mov
lret
dec
es
shrl
fs
repnz
mov
inc
add
test
scas
xchg
popf
and
test
inc
dec
ja
adc
rolb
mov
dec
loopne
or
jl
push
pop
pop
or
cmp
add
cmp
jmp
stos
incb
xor
add
cmp
jl
or
sub
nop
push
push
inc
ret
jge
jne
js
cld
out
pushf
sahf
cmpsl
in
mov
xchg
sti
scas
fucomi
adc
popf
pop
mov
fs
xchg
sub
pop
sbb
scas
or
xchg
fs
mov
xor
setnp
pop
sarl
inc
pushf
push
movsl
lods
and
mov
ja
mov
mov
add
addb
scas
gs
push
mov
mov
xchg
sub
iret
cmp
fwait
pushf
nop
sbb
inc
add
xchg
mov
mov
arpl
lock
and
mov
subl
add
ja
adc
pop
sub
cmp
dec
and
test
cmp
cmpsb
adc
add
add
mov
add
sbb
out
scas
pop
jmp
push
xor
add
or
ficomps
or
shlb
aaa
dec
dec
outsb
add
pop
inc
add
mov
mov
data16
and
inc
add
mov
movb
mov
xchg
shlb
pushf
add
inc
add
sbbl
iret
jne
inc
add
add
cli
and
scas
aam
insl
dec
push
inc
mov
test
insl
icebp
stos
into
sub
test
rolb
cmp
fisubrl
ss
idivl
sub
adc
mov
dec
or
clc
mov
pushf
cmp
and
cmp
test
cs
sbb
pop
pop
cmpsl
mov
sub
inc
int
sbb
testb
pop
pop
adc
es
ljmp
add
add
xor
cmpsb
imul
cmpsb
out
fldl
or
mov
push
call
lds
aaa
sarl
pop
rolb
add
sub
dec
ss
cmpl
or
or
sub
inc
add
inc
add
cmpl
mov
and
daa
fldl
arpl
jp
mov
arpl
jl
sbb
dec
imul
repz
insb
imul
lds
lods
filds
add
mov
or
movb
movsl
cwtl
sbb
fisubs
mov
js
insb
sub
xchg
adc
lods
or
roll
add
xchg
int
and
add
adc
test
addb
dec
jg
mov
daa
into
xchg
or
jne
loope
mov
add
es
insb
stos
sub
ja
cmpsb
aaa
adc
jb
add
bound
add
ljmp
outsl
int
or
fidivs
aam
mov
adc
int
sub
or
sub
mov
cltd
push
pop
or
mov
loop
lods
ljmp
adc
xor
ret
jge
dec
int
add
dec
notb
sbb
repz
dec
repnz
imul
xor
adc
mov
cmp
wbinvd
adc
test
insl
xchg
fdivrs
movsb
xchg
xchg
sbb
sub
rsm
pushf
loopne
into
loope
or
les
in
das
test
jg
ja
mov
adc
and
jns
push
mov
out
int3
dec
sbb
add
add
xor
movsb
ljmp
jne
sub
pop
das
and
add
out
xchg
fdivl
arpl
negb
add
xchg
lret
fisubrs
adc
hlt
pop
and
mov
cmp
outsb
daa
push
adc
sbb
xor
push
pushl
fsubrl
jne,pn
and
lds
jnp
out
sub
sti
ficompl
cmp
mov
in
out
aad
adc
mov
pop
ffreep
add
mull
and
mov
inc
push
add
or
dec
mov
cmpsb
test
mov
or
jo
add
lds
xchg
cmpsl
adc
sub
adc
jle
push
adc
les
aaa
rcll
or
xor
dec
adc
ja
rorl
add
sahf
mov
inc
add
incl
sub
add
dec
gs
jbe
xchg
pop
stos
push
mov
jno
sarb
add
mov
stos
mov
or
push
lret
sub
adc
negb
out
pop
pushf
pop
mov
or
sbb
lcall
mov
cmc
push
ret
push
daa
popf
xchg
or
push
int
or
cmp
xchg
cmp
jb
repz
add
lock
adc
lret
lcall
dec
cmp
arpl
int
jmp
addb
add
movsl
sahf
repz
and
add
dec
add
mov
inc
add
movsb
int3
les
and
sub
aam
insl
sarl
fldenv
rcrb
xor
divl
add
int
add
xchg
in
and
inc
imul
sub
and
push
fimull
add
int
sub
insl
sbb
push
add
pusha
add
loop
pop
aam
pop
push
cmpsb
mov
xchg
fldenv
add
xchg
inc
push
add
adc
cs
xor
mov
add
sarl
and
mov
mov
lret
mov
mov
mov
xor
decb
push
addr16
lahf
push
or
fbstp
mov
xchg
lret
in
movsb
test
cli
data16
stos
loopne
mov
fisttpl
push
cmpsl
std
pop
push
pop
movsb
mov
aad
enter
call
popa
test
mov
dec
sub
add
cld
or
xlat
scas
gs
cmovs
out
loopne
or
adc
mov
pushf
mov
push
test
loope
vminss
mov
mov
mov
imul
mov
jae
into
sbb
mov
cmp
add
sbb
test
les
jecxz
sbb
cmp
fdivs
xlat
mov
lods
lret
rcrl
pop
add
stos
test
xchg
add
cmp
add
aas
es
jle
mov
xchg
push
xchg
xchg
inc
repz
xlat
xchg
or
add
jg
lcall
mov
cltd
movsb
push
jnp
adc
add
test
pop
fwait
rcll
xor
lock
call
add
adc
add
outsb
dec
jecxz
sub
or
xor
out
pop
xchg
pop
lret
xchg
ret
mov
into
sbb
mov
xor
pop
inc
hlt
cld
loopne
add
aas
xor
dec
popa
pop
pusha
add
fldt
pop
xor
push
mov
repnz
push
cld
xchg
mov
dec
in
xor
popa
sbb
push
add
es
in
mov
adc
jge
adc
dec
gs
scas
xlat
inc
xchg
or
popa
xchg
test
adc
push
add
push
adc
into
dec
into
lds
push
add
jne
sbb
ljmp
cmp
push
mov
insb
mov
lock
aad
in
enter
xchg
stc
dec
mov
push
or
add
fnstsw
mov
adc
aaa
lods
cmp
xorl
cwtl
pop
xchg
lret
insb
jb
movsb
cmpsb
inc
add
inc
lods
jae
mov
stos
movsl
dec
xchg
ljmp
and
icebp
and
xchg
dec
testb
jge
pop
or
xchg
sub
es
xchg
mov
push
add
sbb
or
das
xor
pop
cmp
test
xchg
jae
fisubrs
jne
call
dec
in
or
mov
jp
cmp
les
pop
add
and
xchg
push
and
inc
out
mov
or
lds
je
push
das
aad
repnz
sub
leave
pop
sbbl
clc
fisttps
out
loop
add
clc
in
add
push
pop
rolb
bound
std
js
xchg
addb
jmp
mov
sub
hlt
dec
push
cmp
es
lods
jp
arpl
push
in
ljmp
lods
add
nop
sbb
jmp
mov
stos
pusha
add
mov
addb
cmpsb
push
fldenv
sahf
popf
jle
dec
pop
add
addb
scas
fs
or
and
cmpsb
pusha
add
cli
rcll
imul
rorl
or
outsb
xor
push
subl
std
jmp
mov
shll
cmpsb
push
add
cmp
mov
and
jle
inc
icebp
pop
sbb
sarl
sbb
jns
mov
movsb
jae
mov
pop
ret
sbb
fisubl
ja
call
cmove
sub
inc
jg
cld
jb
mov
test
pop
add
cmp
mov
out
jl
pop
pop
stc
dec
sti
rorb
imul
comiss
outsl
sub
xchg
and
in
fmull
sub
dec
jmp
imul
pop
data16
mov
shrl
test
popa
push
add
sub
pop
test
inc
add
mov
iret
and
lods
std
fdivrs
or
outsl
and
hlt
js
jmp
and
adc
repz
test
pusha
add
jmp
jbe
adc
lret
bound
xchg
or
add
out
mov
pop
push
lcall
push
mov
xchg
ftst
hlt
jl
dec
arpl
jo
inc
lods
movsl
out
dec
push
notl
rcll
sbb
lods
loop
jg
movsl
test
enter
cld
stos
mov
insb
std
jo
mov
out
fstpl
fisubrl
push
addr16
cmp
bound
into
mov
or
nop
bnd
jne
xor
inc
mov
jecxz
pop
outsl
adc
rclb
push
arpl
inc
or
in
pop
jnp
jmp
xor
mov
push
orl
cmp
scas
jge
add
dec
fsubrs
mov
mov
push
add
lods
int3
add
ror
adc
pop
test
lods
in
dec
pop
and
popf
aas
in
aam
add
push
xor
scas
pop
mov
xor
xlat
stos
pop
stos
adc
stc
roll
xchg
add
out
outsl
negb
add
lods
jge
lcall
scas
into
loop
cwtl
je
sub
add
test
inc
sahf
repz
cmp
lcall
xchg
lret
add
cltd
sbb
or
iret
ret
and
test
movsl
bound
add
sahf
or
movsl
jle
pop
inc
add
addb
adc
loope
pushf
movb
test
cmpsl
loopne
inc
pop
mov
push
cmp
lret
sub
inc
popa
pop
jno
xchg
cs
add
cli
ja
dec
dec
sub
rcll
pop
push
mov
jle
imul
pop
fsubrs
add
scas
jbe
mov
movsb
push
ss
mov
inc
js
lret
push
rolb
rolb
mov
add
addb
popf
push
sbb
push
add
jae
inc
add
xorl
fs
cltd
daa
xor
sbb
movb
adc
inc
jl
add
cmp
test
xor
xchg
std
and
rorb
es
jg
inc
cmp
mov
aam
add
cmp
in
mov
jae,pt
test
int3
jnp
repz
lods
fs
dec
push
push
js
inc
ret
loopne
push
jns
sahf
hlt
aad
std
stos
adc
pop
mov
clc
mov
lret
scas
mov
xor
daa
jo
fs
push
lock
dec
lret
add
fdivrs
adc
mov
cmpsb
sub
and
jo
subl
mov
adc
nop
xchg
test
cld
lea
gs
das
ret
fsub
pop
push
lret
push
insl
and
stc
mov
test
popf
pop
mov
lcall
nop
int
inc
add
and
add
cli
dec
xor
es
add
fsubrl
test
add
std
out
loop
dec
imul
movsb
xchg
enter
pop
test
icebp
aad
jo
enter
sar
add
scas
xor
cmpsb
cmp
dec
popa
inc
leave
mov
push
xchg
fldcw
fcomps
dec
adc
add
mov
push
inc
add
popf
stc
cmpsl
loope
inc
mov
cli
push
add
or
call
pop
and
mov
pop
dec
cmp
mov
outsl
push
sbb
mov
mov
addb
mov
xchg
sbb
hlt
fwait
add
pop
inc
add
je
sub
out
sub
test
dec
sub
add
jne
mov
movsl
fistps
push
lret
test
daa
fisubl
pop
push
insl
iret
fistl
fwait
jg
mov
rclb
xlat
and
inc
add
jle
test
negl
dec
fstpl
add
mov
test
cwtl
push
nop
mov
pop
pop
adc
mov
aaa
or
xchg
roll
adc
mov
sub
mov
add
movb
pop
mov
jle
pop
inc
add
push
add
int3
push
sbb
out
aam
sub
add
add
stos
out
adc
jb
sarb
pop
loope
fld
add
jecxz
mov
pop
aaa
test
adc
cmc
rolb
cwtl
and
cmp
jecxz
scas
and
mov
mov
dec
sub
shl
and
arpl
cmp
fbstp
dec
cmp
adc
add
movb
loope
fisubrs
mov
imul
jo
xchg
loopne
inc
add
test
adc
mov
jle
je
cwtl
adc
xor
lahf
outsb
jnp
rolb
rorl
mov
movsb
fs
xor
mov
mov
loopne
shrb
js
adc
mov
cmp
mov
add
in
dec
adc
aas
jbe
jbe
dec
or
push
dec
mov
rcl
divl
sub
add
jo,pt
add
scas
cmp
jnp
in
cmpsb
xadd
xor
fnstsw
sbb
pop
loopne
subps
sbb
add
int
push
push
loopne
shll
stos
mov
cmp
shrl
arpl
cltd
mov
adc
ss
inc
add
cmp
mov
addb
sub
ja
pop
call
pop
mov
gs
iret
dec
xchg
add
fistpll
dec
rorl
jbe
insl
imul
add
movsl
pop
hlt
dec
out
repz
test
sbb
leave
gs
das
jnp
loope
in
addl
sbb
lods
addb
fildll
ljmp
sub
les
adc
mov
inc
inc
add
addb
nop
lds
push
jns
ja
mov
xor
pushf
push
stc
xlat
idivl
xchg
cmp
neg
jns
aaa
adc
add
ficoms
jmp
ljmp
imul
mov
popa
xchg
mov
jecxz
out
imul
xchg
cmp
popa
cli
xchg
inc
add
dec
dec
nop
xor
cmp
cmp
adc
and
mov
sub
xchg
pop
data16
xchg
in
rclb
or
pop
pop
pop
outsb
jns
add
int3
push
jb
inc
icebp
rcl
xlat
mov
into
cmpsl
adc
mov
xchg
sbb
push
ret
addb
lret
shll
repnz
fldenv
xor
add
insb
addl
xlat
inc
mov
inc
or
insl
sahf
dec
outsb
cmpsl
cli
sub
inc
add
push
jnp
inc
sahf
outsl
mov
mov
decl
out
cmp
mov
xchg
push
xor
and
jg
repz
pop
xor
hlt
aaa
xor
adc
add
divl
cmp
out
loop
dec
pop
inc
add
adc
inc
add
addb
pop
mov
add
addb
add
aam
and
pop
sbb
or
loopne
mov
addl
pop
or
clc
mov
inc
add
mov
sbb
jg
add
dec
jne
out
cltd
xchg
idivl
in
or
arpl
insl
cmp
testl
adc
call
int
mov
dec
cmc
movsl
or
and
repnz
std
cmpsb
adc
sbb
mov
adc
outsl
bound
add
mov
test
dec
in
shl
pushf
sub
jbe
scas
xchg
cmp
out
iret
xlat
into
push
out
lcall
movsl
push
inc
add
add
xor
add
icebp
pop
das
test
dec
push
ljmp
xorl
xchg
mov
cmp
in
icebp
lcall
sub
out
into
lahf
push
sbb
notb
test
ljmp
push
fs
adc
cli
popa
leave
call
sub
xor
dec
pop
lock
scas
lret
pop
add
or
jmp
frstor
xchg
xchg
out
cmp
loop
xchg
xor
xor
sbb
sub
mov
std
xor
xor
or
mov
clc
and
scas
sub
sbb
rorl
jmp
xor
add
pop
xor
aaa
push
aas
mov
into
pop
add
xor
jmp
add
add
mov
push
out
jns
inc
lcall
imul
movsl
addr16
cmpsl
dec
fs
jno
outsl
aam
lds
andl
scas
jl
pop
data16
pop
out
dec
mov
push
loope
xchg
mov
je
add
pop
lret
lahf
addb
add
inc
cmp
sbbl
sub
add
dec
dec
adc
push
test
rcrl
push
mov
and
addb
out
mov
xchg
clc
movsb
fiaddl
fstpl
sarl
ja
push
ret
adc
pop
push
add
lods
add
adc
pop
lea
popf
inc
mov
add
or
jp
and
fldcw
loope
dec
movsl
imul
push
js
push
repnz
add
lcall
ret
add
pop
mov
mov
mov
jmp
rolb
mov
xchg
repnz
push
addb
das
mov
or
push
mov
sarb
inc
add
add
push
inc
jmp
mov
add
mov
add
and
aam
jo
es
or
out
sub
daa
jmp
lret
add
pop
out
popf
xor
sub
fcoml
ja
sahf
mov
push
mov
fsubr
out
sbb
adc
add
sbb
enter
add
adc
mov
lahf
scas
lock
mov
fidivrl
inc
adc
es
sbb
test
pop
rolb
ror
jo
sbb
bound
jge
mov
insb
sbb
add
jnp
add
movsl
lds
loope
sahf
cmpsl
and
pop
inc
add
rol
mov
xchg
and
rolb
or
add
hlt
fs
jp
add
jnp
outsb
add
jg
dec
and
cld
cmp
fsubrs
xor
stos
jmp
cld
jae
pushf
cmp
cld
fidivs
shrl
mov
add
pop
pop
mov
add
add
add
sub
and
int
cmp
movb
and
and
add
in
call
lahf
xor
add
movsb
pop
inc
add
add
xchg
push
xchg
in
adc
sbb
cltd
xchg
cld
xor
in
fwait
cltd
dec
push
inc
jecxz
icebp
stc
xchg
push
scas
xchg
popa
aas
and
xor
or
add
icebp
cmp
std
das
cmp
icebp
std
mov
sbb
fisttps
stos
pop
ljmp
rorb
sbb
fisubs
sbb
sti
xor
inc
sub
mov
adc
sub
cs
in
cwtl
cmp
mov
xor
rcrl
or
pushf
adc
jg
cli
dec
xor
mov
ss
mov
je
sub
int
pop
aad
xor
cmp
jecxz
sbb
fwait
iret
lock
push
add
mov
dec
rolb
rcrl
shr
pop
dec
jnp
cli
int
dec
mov
enter
in
seta
lret
add
leave
lock
and
and
add
sbb
inc
add
out
cmp
jo
xchg
out
pop
add
xchg
sub
imull
adc
add
push
cmp
clc
xchg
pop
outsl
xor
lds
add
hlt
ret
f2xm1
adc
popa
pop
les
xchg
leave
sbb
jbe
mov
fiadds
jmp
pusha
add
cmc
clc
sub
adc
add
xor
add
add
aas
xor
adcl
mov
xor
aaa
mov
dec
xor
lea
lods
dec
push
fs
jae
add
cld
mov
and
pop
daa
lret
notb
addr16
je
lods
aam
in
in
jbe
repz
adc
enter
push
jno
pop
xor
add
outsl
inc
popa
ljmp
scas
scas
push
idivl
or
cmp
sbb
in
sbb
or
mov
xchg
inc
sahf
jge
dec
inc
add
jne
sbb
popa
out
mov
xchg
push
dec
adc
push
cld
ljmp
es
gs
sbb
and
sar
sbb
out
and
outsb
mov
dec
in
test
fists
pop
ss
in
pusha
add
daa
in
mov
les
in
jecxz
xor
call
mov
sub
lock
xor
arpl
add
add
push
addl
mov
sbbl
movsl
push
jmp
mov
pop
idivl
rcrl
movsb
xor
add
sub
jmp
test
jmp
mov
in
cwtl
addr16
je
cmp
icebp
adc
push
inc
add
mov
and
test
iret
lcall
popf
push
lcall
aas
mov
xchg
sub
bound
jae
xchg
mov
xor
bound
popf
mov
add
clc
xchg
bound
les
aam
and
addb
fsts
in
in
test
or
or
add
mov
push
xor
imul
fs
lret
add
mov
das
mov
cmp
pop
jg
add
jnp
xchg
mov
add
sarl
mov
mov
lock
cmpsb
stos
dec
cmp
call
push
dec
sub
mov
flds
pop
cmp
lock
test
push
daa
inc
add
xor
add
stos
push
add
mov
pop
mov
jg
aam
stc
jecxz
imulb
bound
test
bound
jnp
jp
sub
je
fidivs
ljmp
jle
sub
out
mov
pop
imul
jp
add
inc
add
sub
xchg
movsb
mov
aad
jmp
popa
inc
add
ds
mov
jp
ror
add
mov
mov
in
int
mov
ds
mov
inc
xchg
out
xlat
sbb
outsl
push
push
mov
add
cmp
test
repnz
aas
cwtl
popf
fsubrl
pop
mov
inc
dec
and
jb
mov
jge
cmp
add
add
sub
add
lret
inc
jns
dec
mov
in
lahf
mov
aas
jle
aam
hlt
pop
aad
push
adc
jne
adc
rolb
mov
add
mov
mov
add
jp
je
and
outsb
mov
pop
or
daa
sbb
xchg
xor
ss
xchg
scas
movsl
or
adc
lret
repnz
rolb
mov
cmc
pop
test
or
cmpsb
fstpl
add
aas
clc
call
mov
nop
js
lret
pop
fwait
xchg
xor
cs
adc
add
fsubr
sub
add
mov
jo
call
mov
add
stc
int3
js
mov
movsb
stc
mov
or
sbb
daa
ret
shl
push
test
add
addb
fchs
mov
mov
xchg
and
sub
jno
mov
jge
add
les
leave
dec
pop
iret
and
and
idivb
mov
add
or
mov
stos
out
cwtl
inc
add
bound
add
test
adc
fwait
jbe
push
xor
push
add
sti
pxor
adc
and
in
adc
push
ja
xchg
movsl
cmpsl
fistpll
enter
adc
cmp
cmp
stos
jmp
mov
ret
data16
addr16
cmp
mov
mov
pop
xchg
jo
dec
sub
push
pop
xchg
lea
arpl
cmp
mov
out
leave
xchg
jne
push
fsubr
mov
sbb
cmpsl
jae
outsl
pop
adc
xchg
leave
loope
add
and
adc
enter
mov
adc
cmp
push
imul
push
add
mov
nop
mov
cmp
mov
rcrl
sar
or
xor
enter
test
lock
add
pop
mov
sbb
das
or
add
fwait
cmc
loop
fnstsw
jns
mov
cltd
dec
mov
lods
or
imul
or
mov
loop
xor
add
bound
std
and
daa
cmp
add
addb
aam
std
cltd
insb
lods
fs
sub
std
cmpsl
add
jbe
fcmovne
cmpsb
pop
push
jg
int
jge
or
jl
add
sub
inc
add
jp
stos
sub
mov
mov
ret
inc
out
imul
adc
repz
add
dec
jmp
test
movb
pop
dec
js
cltd
fists
loopne
daa
in
mov
mov
std
add
xchg
sbb
hlt
cmpsb
movb
stos
lds
shlb
ds
bound
sub
mov
jns
jl
scas
sbb
hlt
shll
mov
fsubrs
int3
mov
popa
sbb
scas
xor
sbb
adc
adc
cs
add
inc
jl
jno
or
outsl
rolb
iret
dec
or
pop
jmp
into
dec
pushf
xor
adc
xchg
adc
fwait
cmpsb
adc
add
imul
scas
inc
or
jno
outsb
std
push
xor
or
lret
jb
or
scas
clc
dec
fiaddl
jecxz
mov
adc
stc
push
pop
ja
pop
int3
mov
pusha
add
sub
out
andl
cmp
push
pop
mov
xor
gs
inc
jne
imulb
sub
fdivl
jb
scas
xor
push
test
jl
fmul
or
add
sbb
addb
shl
dec
lods
iret
notl
push
lods
out
inc
add
repz
ffree
cmp
jno
in
rorb
cmpsl
cmp
ja
cmp
loope
outsl
je
adc
add
pop
dec
sub
cmp
add
dec
jno
or
dec
mov
or
pop
inc
or
addr16
shll
and
bound
sub
adc
jns
pop
enter
test
and
mov
mov
arpl
xor
cmpsb
movb
add
mov
mov
ja
fdivl
add
mov
movb
add
fs
sbb
ss
scas
dec
fmull
lahf
pop
and
push
inc
insb
test
ja
addb
test
jge
push
cltd
sbb
mov
aam
add
idivb
jmp
add
add
sbb
lock
adc
cmc
jnp
outsl
xlat
jns
call
fcompl
jns
dec
hlt
xchg
and
jae
cmp
bound
add
sub
mov
enter
inc
push
stos
add
arpl
add
xchg
fstl
fstps
adc
adc
lods
lods
mov
fildl
aaa
adc
call
pop
in
cltd
pusha
add
mov
xor
gs
xchg
push
jbe
lret
sub
dec
es
jbe
pushf
pop
xor
mov
mov
and
add
enter
mov
lods
mov
cmp
sti
pushf
xchg
sbb
rolb
outsl
sbb
jge
dec
jae
sub
rolb
push
das
mov
cmp
mov
mov
movb
dec
ljmp
testb
adc
xor
xor
leave
in
push
sub
sbb
enter
inc
add
add
subl
mov
jge
icebp
out
push
xor
mov
cmc
stos
dec
inc
add
add
lods
sti
xchg
fisubl
adc
xor
cmpsb
pop
test
int
test
stos
int
imul
push
fistpl
ret
dec
sub
loopne
arpl
adc
pushf
test
cs
enter
cwtl
push
push
dec
fisttps
add
adc
mov
mov
push
lret
cltd
dec
adc
stc
mov
daa
into
mov
jne
test
push
in
mov
mov
add
xor
faddl
sub
jl
add
adc
seto
add
out
mov
insb
incb
stos
jb
mov
add
lcall
xchg
cmp
lods
inc
inc
test
mov
iret
sub
sub
sub
xchg
idiv
pop
fidivs
addb
pop
cwtl
dec
add
movb
mov
xlat
and
push
lret
push
outsb
jmp
mov
xchg
leave
pop
ret
ja
add
outsb
sbb
sbb
aam
xlat
add
movb
fwait
sti
dec
push
lods
inc
pop
sbb
inc
add
test
popl
adc
jecxz
sti
stc
stos
addb
jne
lahf
fstps
imul
aad
lahf
jno
inc
add
add
mov
fidivl
sbb
lock
mov
dec
cli
test
popa
mov
cld
add
dec
adc
add
add
inc
add
test
sti
cmp
jp
fs
inc
add
int3
push
adc
lock
sbb
inc
add
inc
add
repnz
lret
movsb
sbb
pop
stos
iret
mov
nop
out
out
sbb
pop
fbstp
imul
inc
add
imul
into
cmp
mov
sahf
adc
movsl
mov
add
rcl
cmp
add
push
xchg
cmp
sub
jle
jnp
sbb
push
sbb
mov
imul
int3
inc
add
dec
xor
cmc
inc
add
icebp
shlb
xchg
add
dec
das
adc
sbb
sbb
add
add
and
repz
cmp
shll
jp
add
sbb
add
add
out
adc
cmp
lahf
addb
sarl
sbb
inc
add
out
push
fnstenv
mov
xchg
rorl
and
cmp
test
dec
lret
daa
jnp
and
push
cmpsb
insl
lahf
jmp
add
into
test
inc
arpl
adc
jno
adc
add
add
mov
cmovs
jge
imul
insb
cmp
fsub
frstor
das
xchg
imul
or
in
add
add
fs
add
cmp
das
das
cmpsb
repz
xor
sub
lock
out
enter
aas
inc
mov
mov
int3
testl
sbb
add
jb
lahf
fcom
fldcw
push
fcomi
mov
mov
roll
mov
mov
addb
cmp
imul
and
stc
mov
bound
iret
cmp
mov
push
inc
add
popf
cmc
xchg
dec
std
fdiv
jecxz
xchg
add
add
pop
add
addb
push
sbb
mov
fs
stos
push
push
test
or
mov
repz
add
in
mov
xor
pop
push
das
push
lods
pop
test
pop
testb
mov
rcll
popa
sbbl
fisttps
lea
add
js
adc
mov
mov
fcompl
data16
xchg
imul
test
cmpsb
xchg
push
push
mov
mov
cltd
mov
das
push
out
pextrw
dec
cwtl
hlt
add
inc
add
sarl
dec
sub
notl
aaa
inc
add
pop
add
pop
enter
mov
cltd
inc
sbb
dec
jns
and
pop
out
bound
scas
cmc
outsb
aad
daa
and
add
lods
jp
gs
pop
pop
push
outsb
xchg
or
xchg
jl
addb
ficoms
je
addr16
add
fwait
es
shlb
arpl
nop
xchg
sbb
mov
sti
jl
add
test
call
add
int3
jle
cmp
shll
cmc
stos
adc
ja
sbb
out
add
movb
cmp
jbe
push
outsl
dec
clc
mov
jg
mov
ficoml
insb
in
fistl
xorl
add
push
or
call
push
pusha
add
fcompl
stos
lock
push
loopne
loop
cmpsl
cmp
int3
push
push
add
mov
xchg
sub
aaa
ja,pt
mov
xor
push
jecxz
loopne
add
shr
test
gs
ljmp
cmp
out
dec
jno
and
pop
xor
je
sbb
mov
pop
jnp
shlb
mov
movsl
inc
add
or
orl
lahf
dec
pop
ds
xchg
dec
xchg
rcll
cmpsb
sbb
sbb
sub
aad
in
stos
iret
bound
cmpsb
add
lods
insl
movsl
xchg
push
out
xor
daa
fwait
mov
mov
dec
dec
cmp
mov
push
repz
mov
stos
enter
mov
inc
add
xchg
xchg
mov
mov
jp
add
add
addb
ficoml
scas
or
cmp
std
jns
lock
jo
insb
xor
cltd
sub
enter
bnd
add
push
push
mov
lret
iret
adc
cmp
adcl
call
push
push
push
cmp
or
jp
imul
xchg
imul
fildl
push
cld
sub
add
xchg
sub
push
sub
sti
xor
xchg
lret
mov
mov
or
adc
xor
cmp
jae
mov
mov
outsl
mov
push
add
mov
mov
add
cmp
or
mov
jne
push
add
sub
in
test
pop
mov
int
mov
je
push
push
fiaddl
imul
out
lahf
cmp
jl
test
addr16
add
test
or
adcl
inc
add
adc
mov
test
inc
movsl
cmp
leave
shrl
ljmp
out
adc
and
mov
add
xchg
push
lods
pop
or
inc
add
lcall
dec
cmp
mov
in
and
dec
inc
or
xor
icebp
push
adc
cmp
insb
in
iret
mov
test
add
sub
pop
mov
jecxz
shl
sub
xlat
dec
jecxz
jb
xchg
push
leave
jno
add
scas
daa
shll
imul
dec
or
pusha
add
xor
jmp
outsl
push
mov
add
in
inc
fadds
popa
fstpl
push
movb
mov
ret
jge
xchg
inc
loop
mov
add
je
xor
mov
or
stc
out
scas
mov
mov
loop
std
fwait
adc
mov
or
cwtl
mov
sub
fwait
dec
movsl
inc
xor
addr16
test
iret
cmp
or
in
mov
sub
fcomi
pop
xchg
neg
add
addr16
ljmp
add
shlb
addr16
cmp
xor
push
popa
aam
xchg
cli
scas
clc
rcll
addb
gs
push
les
add
mov
add
int
xor
fists
pop
idivl
in
shrl
in
cmpsl
mov
sbb
ficoml
add
push
std
ljmp
dec
mov
adc
mov
notl
stos
mov
icebp
xlat
cmp
inc
jmp
shl
cmp
mov
add
gs
stos
cmc
lcall
inc
add
push
pop
inc
add
mov
mov
fiaddl
decb
rcrl
aas
jbe
cld
or
lds
add
inc
shll
cmpsb
aad
shll
rcll
in
add
jecxz
inc
or
addb
imul
fcomip
fdivs
cmpsb
in
cmp
add
pop
les
xlat
jnp
loop
out
jge
mov
jge
jbe
loop
sub
xor
inc
or
neg
lahf
jno
mov
pop
es
cld
mul
sub
mov
xchg
idivb
and
lds
pop
or
add
add
scas
shrb
xor
cmp
xchg
inc
fdivrs
jo
dec
stc
fwait
add
xchg
pop
push
lret
jmp
in
pop
sbb
xchg
jns
mov
in
push
jmp
jo
dec
fistpl
rorl
cld
adc
addb
fistpll
jbe
jmp
ljmp
cli
adc
rcl
mov
dec
jnp
mov
lcall
sub
ret
push
pop
repnz
pushf
sbbl
sub
addr16
pop
mov
xor
xchg
es
push
movsb
leave
lcall
dec
lock
mov
and
popf
cmc
inc
add
push
push
mov
dec
mov
addb
adc
add
rolb
aas
ret
sub
outsb
in
cs
ljmp
cmc
sbb
in
push
xor
outsl
sub
test
sbb
xor
add
push
jno
out
jge
jne
add
add
dec
sub
pop
cmp
adc
jne
out
fnstsw
cmp
adc
aad
mov
mov
outsl
pop
sti
cltd
lods
jbe
outsb
jo
xor
jb
add
sub
add
lods
dec
int3
adc
add
mov
push
nop
dec
pop
mov
addb
out
and
add
and
idiv
in
pop
rcr
test
and
xchg
push
aaa
jp
fsubl
adc
outsl
dec
shlb
dec
arpl
add
adc
fisubs
add
repz
push
dec
xchg
sub
jno
test
add
cmpsl
jno
pop
nop
cld
push
je
jbe
lods
subl
rcrl
mov
sub
mov
fcompl
push
ja
push
inc
js
adc
xchg
xchg
inc
add
aaa
scas
aaa
addb
or
mov
lcall
push
das
jmp
add
xchg
or
movsl
dec
mov
or
xchg
das
call
adc
daa
daa
xchg
adc
clc
pop
cltd
push
nop
xchg
inc
out
leave
addb
jb
push
movsl
fildl
add
addb
sbb
xor
sbb
lods
jl
cmp
pop
pop
dec
mov
stos
data16
add
pop
adc
mov
stos
icebp
push
dec
xchg
mov
std
das
mov
fwait
ljmp
loopne
or
or
xchg
xchg
cs
addb
idivb
xchg
sbb
mov
mov
dec
jg
jmp
jge
gs
push
int
daa
jp
ljmp
dec
das
cli
inc
add
pop
je
dec
insl
lret
rol
add
add
jnp
add
mov
inc
add
movsb
push
arpl
hlt
jae
dec
dec
inc
inc
add
add
add
jmp
mov
ret
jb
loop
int
jle
add
xchg
jecxz
cmp
in
pop
cmp
mov
push
add
and
cmp
imul
sbb
cltd
cmc
das
dec
mov
add
pop
in
ljmp
pop
xchg
dec
xchg
aam
xor
lret
push
add
stc
mov
push
sub
cmp
fcoml
clc
pop
mov
inc
add
push
pusha
add
xchg
jbe
add
stc
out
inc
cmp
fmuls
add
xchg
add
leave
cmc
ss
scas
adc
iret
cmp
add
add
mov
loopne
repnz
outsl
xor
jge
push
or
lret
cwtl
rol
adc
jmp
repnz
adc
int3
mov
add
add
stos
dec
push
test
ss
imul
push
daa
inc
pusha
add
cltd
leave
cld
cltd
ds
in
iret
mov
jl
mov
test
into
dec
mov
dec
into
data16
add
sbb
lods
add
add
jne
test
mov
leave
mov
add
loop
mov
dec
pop
lcall
lahf
mov
hlt
movb
cmp
pop
insb
clc
pusha
add
inc
add
pop
jne,pt
mov
jg
addb
stc
mov
ja
mov
and
add
add
add
addb
mov
dec
cli
fldcw
nop
icebp
divl
pop
ret
dec
out
push
or
inc
jge
inc
add
jl
push
adc
jge
gs
mov
add
aad
add
addb
stc
insl
das
movsl
jmp
add
mov
lock
add
pop
inc
add
cmpsb
pop
fucompp
push
push
cmp
cmp
add
inc
add
push
addb
xchg
adc
dec
or
lret
iret
mov
add
repnz
fsubs
mov
add
and
add
lds
addr16
xchg
cmpsb
or
iret
popf
loopne
rcrb
cmpsl
push
dec
jno
sub
jo
outsb
in
or
fiaddl
rorb
xchg
mov
xchg
shlb
cwtl
and
into
in
aam
cmc
loope
push
add
mov
xchg
das
inc
dec
mov
mul
outsb
iret
jne
pushf
xchg
mov
add
pop
ret
leave
test
test
xor
outsl
inc
mov
xor
add
mov
cld
push
and
cmp
bnd
aas
aas
les
or
add
jo
cmp
test
sbb
jbe
jbe
enter
movb
inc
call
jp
divl
xor
cmpsl
fxtract
cmp
fmul
stos
rol
add
test
add
xchg
sub
popa
xchg
mov
mov
xchg
and
push
adc
mov
sub
jecxz
adc
clc
shrl
hlt
fldl
popa
pop
popa
test
xor
add
mov
loope
push
sbb
aaa
fnsetpm(287
gs
in
insl
add
loopne
fiaddl
mov
in
or
push
xchg
add
add
jecxz
xchg
jno
push
in
in
or
sub
test
or
inc
add
mov
inc
add
mov
outsb
or
shlb
mov
fwait
call
inc
add
ja
push
lcall
add
jb
pop
stos
in
sti
cmp
jnp
addb
stos
sbb
add
popa
lods
dec
lcall
add
or
test
mov
add
repz
sub
jne
filds
add
xchg
or
dec
cltd
inc
pop
into
mov
ficoms
and
mov
xor
dec
pop
std
add
jp
xchg
mov
mov
mov
nop
pop
es
int3
mov
pop
and
jo
mov
add
add
xchg
mov
or
fnstcw
fsubs
addb
jecxz
cmp
sbb
mov
mov
mov
sbbl
mov
call
pop
mov
xchg
xor
negl
add
loop
out
dec
lock
jle
xchg
pop
lahf
push
shrb
dec
xchg
movb
mov
call
pusha
add
nop
in
add
data16
scas
jp
add
add
sub
lcall
push
test
rorb
mov
sar
cmp
mov
and
push
cmpsb
ss
add
mov
lret
add
inc
cmp
add
jb
mov
add
add
add
insl
scas
xor
and
or
pop
cltd
out
vmovntdq
add
mov
in
xlat
insb
mov
mov
mov
add
or
imul
dec
std
sbb
repz
icebp
sub
inc
hlt
cmpsb
lret
mov
icebp
call
mov
int3
mov
and
xchg
shll
and
scas
mov
mov
addb
aas
addb
sbb
add
jmp
roll
and
inc
add
arpl
imul
inc
shlb
mov
jns
add
fcmovnbe
xchg
shl
mov
add
scas
addl
es
xchg
mov
sti
mov
es
addb
and
scas
pop
in
ret
insl
push
push
and
xor
lea
adc
cmp
mov
mov
xor
arpl
aas
or
jp
add
adc
outsb
xor
or
outsl
xor
xchg
js
out
add
jo
aaa
fidivl
xchg
shlb
das
sub
hlt
or
sub
icebp
mov
mov
dec
add
mov
daa
rcll
leave
into
push
imul
lods
mov
cwtl
push
cmp
iret
ljmp
mov
adc
jecxz
pop
jge
test
inc
add
jae
je
fst
loop
inc
xor
xchg
int
xor
add
add
and
imul
pop
les
or
xchg
push
stc
pop
fs
loopne
sti
fidivrs
pop
nop
out
cmp
into
sub
xchg
mov
repz
sbb
rclb
dec
fsubrl
out
mov
insb
adc
mov
pop
loop
sti
shll
insl
push
enter
jo
add
inc
add
out
leave
pop
dec
jecxz
mov
mov
mov
mov
pop
sub
pushl
adc
mov
pusha
add
jne
stos
lods
loop
mov
adc
cmpsl
push
jmp
xchg
push
shrb
repz
jns
rcr
fwait
pop
fisubl
jl
arpl
xor
jnp
fs
adc
pushf
gs
or
mov
cmp
add
pop
mov
in
inc
insl
and
js
mov
mov
adc
imul
sbb
enter
cli
fwait
pop
ds
fsubs
push
cmp
ds
test
int3
xor
or
jae
adcl
pop
push
rolb
test
mov
jg
fidivrl
add
add
or
dec
lea
aam
mov
data16
lahf
lret
shr
lret
add
scas
movsb
jp
and
mov
push
sbb
jge
jecxz
int
mov
fnstcw
daa
test
mov
inc
add
scas
inc
jnp
pop
lahf
lret
xchg
outsb
shll
stos
xchg
pop
add
loopne
add
dec
push
outsl
ljmp
bound
xchg
mov
push
jno
push
jmp
outsl
fimuls
pusha
add
push
in
add
gs
aas
pop
gs
aam
add
jae
je
sbb
imul
ret
lods
add
cmp
jo
add
fisttps
sub
lods
or
or
movsl
repnz
jb
iret
pop
leave
lahf
arpl
jno
ds
jle
inc
mov
ds
sbb
hlt
sub
addb
sahf
xor
lahf
popa
sub
movsl
mov
test
mov
adc
nop
mov
xlat
jb
mov
stc
nop
es
or
add
push
nop
es
shlb
add
xchg
add
add
add
stc
nop
es
or
xor
insl
add
push
mov
xchg
ret
pop
add
add
and
push
mov
xchg
ret
pop
push
stos
int3
gs
sti
rep
stc
nop
es
movsb
int
pop
movsb
mov
jne
mov
stos
mov
stc
nop
es
add
ret
cmpw
stc
nop
es
jge
add
call
nop
cld
nop
jmp
add
pop
mov
push
mov
xchg
ret
das
add
push
repz
stc
nop
es
add
push
stos
incl
add
add
stc
nop
es
add
xchg
push
push
and
inc
xchg
inc
add
push
stc
nop
es
add
pop
add
fiaddl
rcr
mov
push
mov
xchg
ret
add
xor
fxch
xchg
popa
cmc
fiaddl
cmp
inc
add
testb
jb
jmp
stc
nop
es
add
test
and
add
nop
es
stos
ret
call
stc
nop
es
add
inc
stos
inc
add
mov
jmp
cld
nop
jmp
popa
add
loop
fsts
mov
xchg
ret
xor
incl
add
mov
jmp
inc
add
addl
add
out
mov
nop
cld
nop
jmp
add
add
rcll
and
jbe
add
mov
hlt
mov
nop
cld
nop
jmp
add
pop
or
loope
add
jge
stc
nop
es
or
jae
stos
idivb
call
nop
cld
nop
jmp
movsb
popa
add
daa
lahf
lea
stc
nop
es
add
add
movsb
adc
add
stc
nop
es
flds
pop
xor
addb
lock
es
xor
stos
fisttpl
rclb
repz
add
stos
notb
add
fimuls
es
add
xor
dec
add
nop
es
int3
popa
inc
add
add
pop
jne
stc
nop
es
divb
sarb
and
stc
nop
es
flds
add
add
shl
stc
nop
es
lea
movl
add
add
add
xchg
or
add
add
cli
pop
nop
cld
nop
jmp
add
xacquire
add
pop
pop
int
jne
gs
nop
es
push
add
add
add
stc
nop
es
fildl
push
repnz
dec
movzwl
stc
nop
es
or
add
add
sbb
nop
es
roll
add
add
inc
xor
stc
nop
es
xor
add
ret
sbb
add
stc
nop
es
xchg
mov
cld
nop
jmp
add
or
add
stc
nop
es
adc
add
cmp
add
push
mov
xchg
ret
add
ljmp
nop
es
add
xchg
add
jg
or
nop
es
rcr
jae
add
and
add
add
push
nop
cld
nop
jmp
ljmp
add
movb
stc
nop
es
xor
bnd
xor
stc
nop
es
or
divb
mov
add
fimuls
test
sub
add
nop
es
inc
popa
je
push
push
mov
xchg
ret
xchg
ret
int3
inc
add
mov
nop
cld
nop
jmp
movsb
add
add
popa
add
nop
es
shll
int
dec
inc
fildl
dec
cmp
nop
es
push
mov
jge
inc
fwait
jne
stc
nop
es
add
add
nop
jmp
add
add
add
clc
push
stc
nop
es
add
ret
add
inc
jnp
stc
nop
es
add
add
add
test
push
mov
xchg
ret
xor
add
inc
add
dec
or
stc
nop
es
xor
pop
jl
mov
add
stos
pop
dec
add
popa
fildl
xor
cmpsb
jnp
stc
nop
es
test
fistl
xchg
add
insb
inc
insb
insb
stc
nop
es
ret
add
mov
stc
nop
es
add
and
jmp
jle
stc
nop
es
add
add
push
add
add
push
cmp
ret
jae
and
loope
add
nop
es
jae
add
je
jbe
pop
stc
nop
es
add
ljmp
mov
sti
push
stc
nop
es
add
add
push
mov
xchg
ret
pop
ret
add
in
pop
rep
stc
nop
es
add
testb
bound
mov
pop
stc
nop
es
je
add
adc
add
adc
add
stc
nop
es
test
and
push
add
add
nop
cld
nop
jmp
add
add
add
fcmovnu
ljmp
add
add
nop
es
stos
inc
dec
add
stc
nop
es
add
outsb
add
adc
daa
add
add
add
stos
add
jmp
pop
movsb
add
add
push
ret
lret
popa
nop
cld
nop
jmp
add
lea
imulb
mov
xor
add
stc
nop
es
roll
xor
stc
nop
es
int
mov
inc
inc
xor
sar
es
or
movsb
add
jae
add
add
test
nop
cld
nop
jmp
xor
add
lcall
adc
incl
mov
add
stos
repnz
mov
push
mov
xchg
ret
lods
jge
add
add
dec
add
nop
es
add
ret
addb
js
inc
and
nop
cld
nop
jmp
dec
add
jecxz
sub
test
add
nop
cld
nop
jmp
add
add
fiadds
enter
jb
add
adc
push
popa
add
sar
es
add
and
cmp
nop
cld
nop
jmp
or
push
int3
jae
add
adc
push
push
mov
xchg
ret
add
add
pop
rcll
je
movswl
stc
nop
es
mov
pop
and
push
mov
xchg
ret
xchg
jl
or
stc
nop
es
add
shr
movsb
mov
sub
sbb
rcl
adc
ret
push
stc
nop
es
add
add
add
pop
int
push
mov
xchg
ret
add
add
mov
mov
cmp
fdivl
cs
stc
nop
es
add
add
add
xchg
add
popa
stc
nop
es
testb
add
pop
add
sub
es
add
xor
addb
add
mov
stc
nop
es
stos
add
and
stc
nop
es
add
rolb
add
lea
push
mov
xchg
ret
int3
testb
or
es
add
add
outsb
jge
pop
mov
push
mov
xchg
ret
rcll
ret
jne
stc
nop
es
add
shlb
clc
add
scas
sti
inc
add
lea
test
aad
add
jae
xlat
mov
je
nop
cld
nop
jmp
movsb
mov
add
push
stc
nop
es
popa
add
stos
push
push
mov
xchg
ret
pop
jl
add
mov
stc
nop
es
testb
scas
mov
nop
cld
nop
jmp
mov
add
cmp
fs
add
jae
xor
add
add
nop
es
add
add
jnp
les
add
add
nop
es
add
lret
nop
cld
nop
jmp
add
add
or
push
or
es
das
add
add
rolb
sbb
lcall
add
dec
lods
ret
add
dec
pusha
stc
nop
es
add
roll
add
shll
les
sbb
nop
es
add
add
das
je
xor
rorb
nop
jmp
pop
add
imul
push
mov
xchg
ret
add
mov
add
jne
nop
cld
nop
jmp
add
add
jo
test
push
mov
xchg
ret
dec
add
lea
pop
xor
pop
pop
push
mov
xchg
ret
int
shll
stos
sbb
mov
xchg
ret
mulb
rolb
inc
add
clc
stc
nop
es
ret
testb
jae
mov
nop
cld
nop
jmp
pop
add
add
add
fmuls
es
add
add
pop
sbb
mov
push
mov
xchg
ret
jge
jge
add
nop
es
testb
add
sar
loop
nop
cld
nop
jmp
add
jae
add
popa
fldenv
popa
add
nop
es
add
add
insl
push
mov
xchg
ret
add
inc
xor
shll
add
popa
or
test
add
stc
nop
es
add
or
inc
stc
nop
es
add
sbb
pop
stc
nop
es
sarb
add
test
stc
nop
es
repnz
add
cwtl
shl
stc
nop
es
movsb
ret
add
popa
pusha
add
clc
nop
cld
nop
jmp
add
fildl
lret
cld
nop
jmp
add
add
add
sahf
mov
stc
nop
es
pop
xor
pop
mov
stc
nop
es
fildl
add
stos
stc
nop
es
add
add
mov
add
das
add
nop
cld
nop
jmp
mov
add
pop
cmp
mov
xchg
ret
add
pop
outsb
add
lods
add
nop
cld
nop
jmp
push
testb
or
push
mov
xchg
ret
mov
fimull
aas
stc
nop
es
int3
fistpl
int3
jl
int3
imul
es
testb
roll
xor
dec
lea
nop
cld
nop
jmp
xchg
inc
mov
test
push
in
mov
mov
adc
xchg
nop
cld
nop
jmp
add
das
add
testb
mov
add
stc
nop
es
push
add
jg
outsb
and
cld
nop
jmp
adc
add
xor
lods
fiadds
xchg
ret
loop
add
or
jae
push
mov
push
scas
adc
out
iret
add
out
addr16
jne
stc
nop
es
add
and
cld
nop
jmp
add
add
popa
add
add
mov
stc
nop
es
add
or
add
and
es
add
add
add
add
jb
add
fstps
fiaddl
add
push
push
mov
xchg
ret
rclb
add
pop
roll
pop
call
nop
cld
nop
jmp
add
mov
fisubl
or
dec
add
mov
xchg
ret
add
or
mov
mov
es
add
xchg
xchg
test
xchg
int3
mov
stc
nop
es
or
stos
or
adc
inc
nop
cld
nop
jmp
ljmp
inc
or
add
nop
es
add
xor
adc
mov
stc
nop
es
or
push
push
stc
nop
es
neg
add
nop
es
movl
add
mov
xchg
ret
movsb
lods
and
add
jnp
add
cmpsb
add
jl
inc
add
mov
push
mov
xchg
ret
add
mov
sti
nop
cld
nop
jmp
sbb
pop
add
lods
push
stc
nop
es
jl
stos
jge
stos
int
xor
push
stc
nop
es
add
add
std
add
stc
nop
es
add
add
je
push
stc
nop
es
inc
dec
add
add
in
mov
stc
nop
es
add
inc
push
adc
lods
push
mov
xchg
ret
add
add
testb
jb
adc
or
popa
inc
xor
or
stc
nop
es
add
ret
or
cld
nop
jmp
add
popa
add
inc
or
add
stc
nop
es
inc
int3
and
jge
mov
push
push
mov
xchg
ret
add
inc
or
add
mov
dec
push
mov
xchg
ret
fldt
je
jge
shl
or
add
stc
nop
es
add
je
lods
and
stc
nop
es
add
pop
add
sbb
jne
push
mov
xchg
ret
add
popa
xor
dec
push
push
mov
xchg
ret
fiaddl
add
add
cmpsl
mull
nop
es
div
add
loop
add
mov
stc
nop
es
movsb
popa
pop
push
mov
xchg
ret
pop
add
add
xchg
pusha
add
pusha
push
mov
xchg
ret
stos
add
mov
nop
es
popa
add
push
add
clc
xor
stc
nop
es
add
pop
mov
add
stc
nop
es
das
rclb
sarb
add
add
nop
es
add
xor
push
mov
xchg
ret
add
add
stos
fdivrs
nop
cld
nop
jmp
sbb
call
stc
nop
es
repnz
jnp
mov
add
add
nop
es
or
ljmp
es
pop
popa
xchg
or
inc
push
mov
xchg
ret
add
add
int3
add
xchg
pop
dec
mov
stc
nop
es
add
nop
jmp
add
xchg
mov
es
jge
mov
fistpl
cld
nop
jmp
add
pop
add
int3
stos
ljmp
stc
nop
es
add
fstpt
push
cmpsl
in
mov
stc
nop
es
test
sbb
add
shr
stc
nop
es
pop
add
add
add
xor
nop
es
jge
lea
add
sbb
adc
nop
es
add
add
stos
sbb
jb
add
repnz
add
add
incl
inc
cmp
nop
es
stos
roll
movsb
push
lret
cmpl
nop
cld
nop
jmp
add
pop
enter
nop
es
add
stos
adc
add
jmp
add
add
add
loop
push
sub
popa
add
nop
es
add
jae
add
mov
nop
cld
nop
jmp
add
push
pop
sarl
add
nop
es
add
push
or
cld
nop
jmp
das
ret
push
mov
cli
add
nop
cld
nop
jmp
add
add
add
hlt
jecxz
push
stc
nop
es
roll
add
push
ret
cmp
push
mov
xchg
ret
incl
add
das
jge
inc
add
lea
nop
cld
nop
jmp
add
popa
testb
add
stc
nop
es
ljmp
inc
push
mov
xchg
ret
movl
add
inc
adc
daa
adc
int
or
jnp
inc
add
decl
add
movsl
jl
fimuls
es
rolb
xor
add
stc
nop
es
add
xchg
add
lea
nop
cld
nop
jmp
adc
add
int
das
daa
add
nop
es
add
lods
add
mov
stc
nop
es
push
outsb
je
das
pop
inc
jmp
nop
cld
nop
jmp
je
add
ret
outsl
mov
stc
nop
es
pop
loop
add
jge
cmp
inc
add
add
mov
pusha
add
inc
add
cmp
nop
es
das
add
xor
stc
nop
es
add
inc
or
add
jecxz
push
push
mov
xchg
ret
add
add
movsb
ljmp
push
add
add
je
xchg
xor
nop
jmp
ljmp
add
cld
nop
jmp
add
sbb
add
test
nop
es
int3
add
lahf
mov
nop
cld
nop
jmp
add
add
mov
push
mov
xchg
ret
add
add
jo
inc
add
xchg
movsb
add
out
mov
nop
cld
nop
jmp
mov
int3
add
add
stc
nop
es
ret
jae
add
add
stc
nop
es
int
stos
xchg
pop
and
pusha
push
mov
xchg
ret
add
outsb
xor
adc
xor
cs
nop
es
fimull
das
addr16
jb
add
mov
mov
roll
add
add
nop
es
xor
xor
mov
stc
nop
es
push
ljmp
pop
rep
push
mov
xchg
ret
add
add
outsb
pop
les
loopne
cmp
es
xor
or
popa
xor
sub
stc
nop
es
xchg
add
outsb
add
cmp
jmp
add
add
add
add
or
fadds
xchg
ret
add
push
add
fiaddl
pusha
add
mov
push
mov
xchg
ret
add
or
mov
call
pop
add
add
stos
add
les
pop
mov
stc
nop
es
pop
inc
int
sarl
nop
es
ljmp
je
mov
nop
es
pop
or
xor
cld
nop
jmp
xor
rcrb
add
int
test
push
mov
xchg
ret
loop
pop
jl
shr
dec
adc
nop
es
pop
pop
jae
ret
add
popa
fs
nop
es
add
mov
add
stc
nop
es
pop
add
mov
dec
cld
nop
cld
nop
jmp
or
add
test
shrl
mov
stc
nop
es
add
push
add
add
fisubrl
mov
add
pop
adc
jae
popf
add
stc
nop
es
mov
push
loop
add
mov
stc
nop
es
add
or
or
nop
es
jl
add
je
dec
mov
stc
nop
es
add
or
ret
nop
es
add
stos
add
push
stc
nop
es
fcmovu
pop
dec
lea
push
mov
xchg
ret
mov
icebp
xchg
cmpsl
xchg
mov
stc
nop
es
ljmp
add
stc
nop
es
pop
stos
add
add
jns
xor
add
nop
cld
nop
jmp
add
jge
add
sub
push
mov
xchg
ret
mov
push
add
mov
stc
nop
es
add
add
test
jb
add
add
and
xchg
add
stc
nop
es
mov
fildl
push
xor
adc
xchg
int3
add
stc
nop
es
add
stos
add
movzwl
stc
nop
es
roll
negb
push
sub
stc
nop
es
pop
add
mov
jmp
add
add
je
adc
test
cld
nop
jmp
xor
add
cmp
mov
xchg
ret
popa
add
testb
sahf
mov
stc
nop
es
add
addb
push
dec
push
push
mov
xchg
ret
add
xchg
mov
int3
add
xor
jmp
stc
nop
es
testb
xor
mov
jl
add
nop
es
movsb
and
add
and
test
es
add
xchg
movsl
pop
int3
shr
push
mov
xchg
ret
add
xor
push
inc
test
dec
add
push
mov
xchg
ret
xchg
add
xor
call
es
sbb
add
add
mov
push
push
mov
xchg
ret
adc
inc
pop
out
mov
push
mov
xchg
ret
fstps
rcrb
cld
nop
jmp
inc
pop
add
cmp
js
nop
cld
nop
jmp
loop
sar
add
or
nop
jmp
add
jge
jb
nop
cld
nop
jmp
add
add
jl
stc
nop
es
add
add
mov
xchg
ret
add
stos
add
stc
nop
es
add
add
add
or
je
add
pusha
stc
nop
es
pop
add
ljmp
xchg
rorl
es
add
add
mov
mov
xchg
ret
pop
rorl
add
add
stc
nop
es
add
out
cmp
nop
cld
nop
jmp
int3
add
add
nop
es
int3
das
ret
add
add
sub
stc
nop
es
add
add
fcomi
mov
inc
sub
nop
es
movsb
add
xor
ret
mov
xchg
add
scas
roll
cmp
lahf
stos
das
shr
stc
nop
es
das
popa
add
mov
stc
nop
es
add
sbb
inc
push
mov
xchg
ret
loop
add
or
popa
add
inc
and
nop
es
outsb
shl
stos
dec
mov
stc
nop
es
stos
or
push
mov
stc
nop
es
loop
das
add
jne
mov
es
ret
xor
xchg
popa
aad
mov
add
xor
push
mov
xchg
ret
add
lods
add
sahf
mov
stc
nop
es
stos
jae
shll
add
stc
nop
es
xor
loop
add
jne
stc
nop
es
add
add
nop
es
rol
add
add
fadds
push
fadds
xchg
ret
add
xor
mov
nop
jmp
add
push
mov
stos
add
fistl
add
nop
es
inc
pop
sbb
and
push
mov
xchg
ret
test
int
movsb
pop
push
mov
xchg
ret
stos
add
fstps
outsb
inc
add
mov
add
add
testl
les
lcall
addb
ljmp
add
pop
lds
stc
nop
es
add
push
mov
xchg
ret
inc
add
pushl
sub
insb
std
stc
nop
es
xor
outsb
pop
insb
push
stc
nop
es
adc
add
or
es
add
add
inc
add
push
mov
xchg
ret
outsb
int
jge
add
xlat
ljmp
cld
nop
jmp
add
jge
test
and
stc
nop
es
dec
add
push
add
mov
decl
stc
nop
es
push
add
xor
add
push
mov
xchg
ret
repnz
xchg
divb
lea
push
mov
xchg
ret
and
xchg
repz
add
stc
nop
es
rclb
test
call
fildl
add
pop
call
stc
nop
es
add
mov
jmp
popa
nop
cld
nop
jmp
adc
xchg
mov
test
dec
push
push
mov
xchg
ret
add
add
mov
stc
nop
es
je
ljmp
push
push
mov
xchg
ret
add
add
add
jo
les
sbb
mov
xchg
ret
ljmp
aad
add
nop
cld
nop
jmp
add
add
mov
inc
clc
inc
add
sbb
loop
add
mov
stc
nop
es
push
int3
adc
dec
xchg
push
mov
xchg
ret
adc
add
jecxz
popl
stc
nop
es
add
mov
jb
add
stos
lea
stc
nop
es
xor
flds
add
add
es
adc
add
movsb
popa
test
adc
es
pop
inc
add
push
pop
pop
loopne
stc
jne
stc
nop
es
add
dec
sub
jmp
notb
stos
add
int
xor
add
mov
adc
cmp
nop
jmp
notb
stos
ret
mov
mov
push
mov
xchg
ret
xchg
add
add
out
mov
stc
nop
es
add
or
sub
nop
es
add
add
mov
jb
push
add
roll
push
push
mov
xchg
ret
add
fiaddl
loop
roll
movzwl
push
mov
xchg
ret
int
xor
cmpsb
add
and
sbb
stc
nop
es
add
pop
jae
inc
pop
push
stc
nop
es
outsb
add
stos
add
stc
nop
es
xor
add
add
pushfw
rep
stc
nop
es
add
sbb
xor
ret
andl
jmp
add
mov
pop
jno
ret
stc
nop
es
add
mov
add
shl
outsl
push
stc
nop
es
pop
das
pop
stos
pop
add
add
mov
xchg
ret
add
add
int
ret
nop
cld
nop
jmp
add
add
rcr
push
pop
add
pop
not
nop
cld
nop
jmp
add
roll
add
add
ffree
stc
nop
es
add
xor
jne
stc
nop
es
add
ret
mov
inc
add
subl
push
mov
xchg
ret
sbb
pop
stc
nop
es
int3
inc
movsb
add
add
decl
push
mov
xchg
ret
add
stos
add
cmp
stc
nop
es
add
das
rcll
ret
nop
cld
nop
jmp
or
mov
pop
add
test
add
nop
cld
nop
jmp
pop
add
add
div
nop
cld
nop
jmp
add
or
xchg
pop
add
or
dec
sub
nop
es
adc
fildl
popf
mov
push
mov
xchg
ret
pop
xor
push
std
push
stc
nop
es
or
add
add
hlt
inc
add
add
fiaddl
add
jb
add
add
xchg
or
xchg
pop
add
stc
nop
es
add
pop
pop
add
es
pop
add
test
push
faddl
xchg
ret
add
incl
mov
pop
mov
stc
nop
es
add
add
mov
xchg
nop
cld
nop
jmp
add
add
pop
add
push
or
fildl
xchg
ret
add
xchg
jl
call
stc
nop
es
add
popa
sub
nop
es
fld
add
adc
mov
nop
es
inc
add
add
mov
stc
nop
es
add
xchg
pop
add
add
add
add
nop
es
testb
fisttpl
test
out
stc
nop
es
add
add
mov
nop
jmp
lea
add
mov
push
jecxz
push
movl
xchg
ret
mov
add
xor
dec
mov
push
mov
xchg
ret
xor
dec
popa
add
test
nop
cld
nop
jmp
add
ljmp
mov
stc
nop
es
jge
jge
ljmp
nop
es
test
add
adc
push
push
mov
xchg
ret
add
add
add
add
nop
es
push
add
add
stc
nop
es
add
jae
mov
or
mov
xchg
ret
pop
stos
push
rclb
mov
nop
es
add
or
pop
nop
cld
nop
jmp
xor
test
dec
add
fiaddl
or
test
out
call
in
incl
roll
lahf
push
stc
nop
es
mov
repnz
rep
stc
nop
es
add
or
push
mov
xchg
ret
add
jae
ljmp
mov
add
nop
es
jmp
popa
adc
fbstp
stc
nop
es
add
stos
push
mov
add
lahf
adc
test
push
add
mov
nop
cld
nop
jmp
xchg
add
repnz
mov
fildl
add
stc
nop
es
add
jge
ja
call
stc
nop
es
add
stc
nop
es
rolb
add
add
nop
jmp
ret
das
add
add
stos
dec
mov
stc
nop
es
roll
add
add
add
nop
es
add
pusha
add
pop
stc
nop
es
je
rol
or
push
add
dec
stc
nop
es
lods
add
dec
or
xchg
mov
adc
cld
nop
jmp
imul
add
add
scas
enter
jb
add
cli
push
stc
nop
es
xor
repnz
stc
nop
es
das
repnz
dec
dec
push
mov
xchg
ret
xor
add
jmp
add
incl
je
add
jl
call
stc
nop
es
repnz
mov
stc
nop
es
add
add
adc
jno
xchg
jmp
jb
dec
mov
dec
movzwl
nop
cld
nop
jmp
add
add
add
adc
push
stc
nop
es
outsb
add
add
or
jne
push
mov
xchg
ret
add
or
dec
mov
stc
nop
es
or
add
pop
add
pop
mov
nop
cld
nop
jmp
adc
xor
stos
mov
stc
nop
es
add
adc
push
mov
xchg
ret
rorl
pop
add
lea
jp
stc
nop
es
add
add
lods
and
sbb
in
dec
add
sbb
add
add
inc
cmp
add
xlat
mov
mov
stc
nop
es
add
pop
mov
stc
nop
es
adc
je
mov
stc
nop
es
add
roll
add
mov
jmp
jge
inc
adc
add
and
stc
nop
es
int3
fstps
rolb
xchg
lods
push
push
mov
xchg
ret
xchg
mov
add
nop
es
add
add
add
test
cmp
popf
roll
xchg
ret
shrb
cmp
nop
cld
nop
jmp
das
and
stc
nop
es
add
add
rorl
add
stc
nop
es
add
add
add
add
push
mov
xchg
ret
jae
inc
add
ja
gs
mov
stc
nop
es
add
sbb
pop
mov
stc
nop
es
ret
xor
mov
stc
nop
es
add
add
mov
stos
rolb
es
add
xor
push
adc
test
dec
cmp
nop
es
add
inc
add
add
inc
add
mov
push
mov
xchg
ret
pop
and
add
clc
push
mov
xchg
ret
fisubl
pop
mov
cmp
stc
nop
es
mov
outsb
add
mov
stc
nop
es
add
repnz
call
add
add
xor
stc
nop
es
ret
jl
outsb
xchg
sub
nop
es
add
pop
das
pop
add
mov
nop
es
pop
xor
mov
add
nop
es
or
and
stc
nop
es
add
roll
iret
movswl
stc
nop
es
or
cmp
sar
es
and
pop
add
add
or
es
push
push
add
add
imul
nop
es
add
test
add
pop
xchg
add
nop
cld
nop
jmp
lea
add
lret
mov
push
mov
xchg
ret
or
add
pop
test
nop
cld
nop
jmp
add
add
add
add
nop
cld
nop
jmp
add
add
xchg
add
xor
aad
push
push
mov
xchg
ret
test
das
adc
push
mov
xchg
ret
add
xor
push
sbb
adc
nop
es
adc
enter
es
add
fnstcw
mov
xchg
ret
incl
ljmp
stc
nop
es
rolb
sbb
add
fidivrs
nop
cld
nop
jmp
add
adc
mov
stc
nop
es
add
dec
add
mov
xchg
ret
add
je
add
jle
stc
nop
es
outsb
push
add
das
dec
push
push
mov
xchg
ret
add
add
and
inc
add
xor
nop
cld
nop
jmp
xor
add
das
das
add
stc
nop
es
rcll
mov
stc
nop
es
add
and
add
push
mov
xchg
ret
add
lods
add
stc
nop
es
add
add
movsb
add
add
stc
nop
es
fptan
and
dec
cmp
nop
es
xor
stos
rolb
ret
sub
xchg
cld
nop
jmp
jl
add
rolb
jge
inc
push
mov
xchg
ret
add
xor
rorb
nop
es
add
fstpt
enter
add
add
nop
es
adc
inc
or
mov
xchg
ret
add
mov
cmpl
nop
cld
nop
jmp
add
testb
push
arpl
out
mov
stc
nop
es
add
add
or
mov
xchg
ret
ret
add
mov
jmp
int
movsb
add
shrl
push
mov
xchg
ret
test
add
sub
loope
nop
es
popa
ret
add
lods
clc
ret
stc
nop
es
inc
add
lea
or
inc
push
mov
xchg
ret
add
jae
dec
inc
add
add
inc
add
nop
es
add
pop
push
fstpt
jb
rolb
add
sbb
add
repz
mov
nop
cld
nop
jmp
add
loop
test
pop
cmc
inc
add
add
add
add
out
stc
nop
es
add
pop
cmp
repz
nop
es
add
add
pop
stc
nop
es
jl
add
mov
cmc
add
add
idiv
nop
es
test
movsb
add
and
push
stc
nop
es
ljmp
add
adc
shl
add
xchg
add
mov
repz
mov
xchg
ret
add
stos
mov
stc
nop
es
dec
add
test
call
add
stc
nop
es
push
add
push
nop
es
roll
add
and
hlt
inc
dec
lea
push
mov
xchg
ret
add
mov
rorl
aad
stc
nop
es
adc
cmpl
nop
jmp
das
add
dec
add
lods
and
imul
incl
add
add
adc
pop
stc
nop
es
add
das
add
mov
test
add
stc
nop
es
add
shlb
loopne
add
je
sub
enter
xchg
ret
add
movb
nop
es
xchg
push
stos
add
pop
mov
nop
cld
nop
jmp
adc
xor
ljmp
sub
add
add
add
dec
xchg
das
and
xor
sti
add
stc
nop
es
add
add
add
inc
sarb
dec
cmp
cld
nop
jmp
add
add
shl
jb
sub
or
stc
nop
es
add
add
ljmp
stc
nop
es
add
add
mov
xor
push
stc
nop
es
add
add
mov
add
nop
cld
nop
jmp
add
test
add
and
nop
es
outsb
or
xor
add
push
mov
xchg
ret
testb
movl
popf
loope
stc
nop
es
xchg
inc
pushf
push
push
mov
xchg
ret
int3
xor
add
add
out
inc
add
add
xor
add
div
stc
nop
es
add
add
outsb
dec
stos
mov
mov
mov
mov
xchg
ret
ret
ret
add
ret
je
stc
nop
es
add
int
stos
push
mov
xchg
ret
add
add
nop
jmp
ret
add
adc
add
cmp
nop
cld
nop
jmp
add
das
xchg
lods
notb
and
lea
je
inc
add
add
movb
idiv
inc
add
ljmp
push
mov
xchg
ret
sbb
add
add
ds
nop
cld
nop
jmp
pop
add
add
or
rclb
out
inc
add
or
add
add
adc
stc
nop
es
pop
ret
into
pop
push
mov
xchg
ret
add
add
add
add
mov
stc
nop
es
ljmp
rolb
mov
stc
nop
es
movsb
inc
add
xchg
movsb
dec
jmp
stc
nop
es
add
int3
add
in
mov
stc
nop
es
ret
add
add
mov
stc
nop
es
add
xchg
add
mov
stc
nop
es
add
add
add
sub
nop
es
add
add
ror
stc
nop
es
add
fildl
inc
add
stc
nop
es
repnz
mov
xchg
ret
int
add
add
mov
push
mov
xchg
ret
int
add
push
mov
xchg
ret
das
add
dec
add
cltd
call
stc
nop
es
add
ljmp
add
nop
es
add
push
add
add
dec
add
cld
nop
jmp
add
jge
add
cmpsl
mov
sti
stc
nop
es
int
xchg
jae
inc
sarb
nop
es
add
add
outsb
add
mov
xchg
ret
lods
add
add
jmp
mov
xchg
ret
add
outsb
idiv
xor
adc
cli
stc
nop
es
add
popa
add
jge
push
push
mov
xchg
ret
add
push
jae
add
popf
mov
nop
cld
nop
jmp
add
add
add
mov
nop
cld
nop
jmp
add
shlb
push
mov
aad
add
addb
pop
pop
loopne
jne
add
ret
aaa
xchg
jmp
fs
sbb
cmpsl
mov
xchg
lods
add
or
sbb
rolb
xchg
pop
push
add
sbb
and
push
xchg
jp
add
sub
inc
add
sub
mov
mov
iret
ja
and
mov
add
add
daa
mov
rorl
mov
in
xor
adc
cmpl
shlb
imulb
jmp
lahf
cmpsb
popf
imul
xchg
xchg
push
ret
pop
cmp
add
mov
mulb
test
push
popf
pusha
add
add
add
aas
lds
jae
mov
add
les
mov
add
mov
pop
out
sahf
push
push
or
call
int
dec
xor
sub
jg
repz
xor
out
adc
pop
out
and
es
sbb
mov
add
test
mov
fdivrs
push
leave
das
mov
jge
out
push
lcall
repz
mov
ss
lret
mov
fdivl
sbb
ja
inc
push
cmp
cmp
xchg
pop
and
mov
xchg
and
sbb
add
jb
addb
rol
xor
sbb
dec
cld
lret
lock
setl
aaa
add
mov
neg
mov
addb
mov
sahf
inc
add
dec
shrl
cs
pop
leave
and
mov
outsb
push
or
loopne
and
cmpl
pop
dec
dec
xor
and
and
jo
aas
je
jg
mov
das
loopne
sbb
add
xchg
xchg
jb
mov
repz
ret
add
fiaddl
and
add
xor
jo
arpl
dec
xor
int3
xor
decl
and
pushf
cmp
mov
aas
fwait
scas
mov
in
add
movb
sbb
push
pop
push
push
and
cmp
or
dec
cmp
push
ret
mov
or
or
sub
ret
adc
cmpl
jns
jns
add
repz
push
cmp
mov
mov
inc
ljmp
jp
pop
pop
push
or
imul
lahf
pop
mov
add
scas
addb
mov
add
pop
mov
shll
push
push
mov
lods
addb
cmc
sbb
add
imul
and
pop
es
push
test
sub
add
jecxz
and
push
mov
add
add
inc
pushf
int3
adc
adc
add
out
clc
test
xchg
in
xchg
test
mov
push
pushf
mov
add
add
add
outsl
int
rorb
fcmovnu
and
add
jno
dec
das
inc
pop
bound
mov
es
add
test
or
push
mov
popf
sub
xlat
sub
push
pop
das
test
das
lcall
jmp
jge
add
xchg
insb
sub
cmp
jmp
repnz
mov
iret
pop
mov
sahf
dec
adc
daa
sahf
les
jmp
jmp
pop
lahf
roll
jns
loopne
xchg
fidivrl
and
xchg
xor
adcl
pop
mov
push
aad
jae
lea
mov
into
outsl
cld
int3
push
lock
dec
add
test
and
ret
repnz
xchg
cmp
xchg
aam
popl
push
dec
es
clc
dec
jg
sarl
arpl
enter
mov
add
rolb
jae
icebp
arpl
out
in
cmp
xor
repz
filds
fwait
lods
and
or
rcrb
xchg
in
fwait
rolb
gs
inc
add
mov
push
popf
dec
imul
jne
cmp
inc
add
into
movl
jge
add
insb
cmp
in
dec
bnd
add
xor
jnp
addb
cmpsb
mov
popf
hlt
jno
fisttpll
cld
pop
arpl
sub
add
fistpl
js
adc
movaps
or
test
pop
stos
out
scas
or
adc
adc
and
fcompl
inc
add
outsb
mov
add
aam
paddb
rcrl
sub
data16
call
shl
les
aam
or
enter
adc
je
mov
or
add
js
or
fdivrl
inc
repz
les
gs
jno
or
add
push
ja
and
cwtl
insb
jbe
push
xchg
pop
in
out
pop
movsb
push
inc
push
inc
mov
pop
pop
inc
add
les
add
add
fimuls
add
sbb
pop
repz
shrb
loopne
lds
scas
pop
xchg
cmpsl
popa
jae
imull
bound
xlat
test
in
outsl
add
mov
sbb
push
push
je
sti
shrl
gs
add
and
adc
jb
mov
xorl
enter
push
xor
aad
push
pop
cs
pop
addb
xor
inc
in
cmp
stc
lret
ret
aad
mov
cmovg
dec
mov
add
testl
xchg
fsubp
scas
lcall
lahf
popf
pop
xchg
fistpl
dec
cmp
lcall
in
testb
into
cltd
pop
xchg
aas
outsl
mov
enter
mov
mov
sbb
push
add
rcl
jl
add
leave
mov
adc
add
xchg
dec
repnz
adc
push
and
cmp
fidivrl
cmp
sub
jno
inc
cli
and
imul
jl
imul
fcoml
pushf
add
cmpsb
out
push
imul
pop
mov
clc
mov
dec
xchg
das
adc
fidivrs
mov
add
addb
iretw
fisubrs
es
jp
xchg
out
sub
add
cltd
xchg
xchg
sbb
or
testl
and
and
xchg
xor
insb
rolb
jb
rolb
dec
mov
arpl
inc
add
cwtl
jae
pop
movb
cmp
lea
lds
mov
jmp
test
aaa
and
push
arpl
je
or
push
scas
jp
push
jnp
jbe
jnp
jb
jb
or
add
adc
aaa
popa
nop
cwtl
cld
mov
or
lods
jnp
add
clc
add
out
xor
inc
add
test
jmp
or
test
pop
mov
aaa
jnp
call
dec
mov
sbb
addb
adc
xchg
data16
outsb
lahf
fimull
inc
add
mov
mov
adc
jp
into
or
adc
pop
mov
fistps
xchg
aas
popa
pop
xor
xor
push
mov
mov
cmp
push
jb
icebp
add
fmull
push
add
cltd
jecxz
dec
das
or
das
loopne
pop
stos
add
adc
cmpsb
clc
dec
in
arpl
sbb
cmpsb
xchg
lret
dec
loop
movsl
pop
fs
dec
rolb
add
xchg
outsb
add
inc
add
rolb
add
mov
add
or
xor
mov
shrw
loope
arpl
mov
push
mov
sub
pushf
xor
or
jns
hlt
cltd
out
pushf
mov
mov
mov
ret
mov
push
jnp
add
movb
mov
add
movsb
xor
xlat
aas
out
repnz
sub
inc
mov
lods
out
and
addl
add
rorb
arpl
push
push
push
std
cli
scas
pop
nop
adc
cmp
rolb
mov
aam
add
sub
popf
or
fsubp
iret
enter
push
mov
ja
xchg
add
add
fists
and
add
push
add
pop
cltd
inc
push
push
add
pop
cmp
jo
scas
lret
push
add
sahf
xor
pop
jo
dec
stc
nop
mov
sub
dec
sub
xor
and
add
pop
push
add
repz
xchg
mov
adc
mov
mov
sub
shl
cld
sbb
out
sahf
lret
xor
dec
nop
push
lods
iret
jmp
jae
pop
inc
add
mov
dec
cmp
cltd
adc
add
loop
je
es
cmp
sbb
jb
and
inc
jecxz
add
add
inc
add
xchg
test
out
ss
testl
es
fwait
test
mov
push
mov
or
pushf
out
mov
mov
test
mov
ljmp
xorl
fmuls
and
mov
lahf
sti
inc
add
dec
lock
test
cmpsb
leave
in
fldenv
add
add
add
js,pn
cmpsl
jge
mov
mov
mov
shlb
push
ljmp
icebp
mov
ficomps
fstps
add
jl
std
out
push
movsl
les
sub
xchg
mov
movsb
push
cwtl
cltd
test
adc
inc
jbe
insl
fiadds
jle
into
test
adc
adc
or
bt
clc
adc
sbb
cmp
inc
add
js
mull
insb
mov
sub
adc
int
sub
gs
sti
loop
inc
add
jno
xchg
cmc
cmp
sub
and
nop
mov
imul
shrl
dec
cwtl
pop
mov
lahf
mov
mov
pop
add
adc
sbbl
push
jle
add
cs
fcoml
outsb
fdivrp
and
jae
push
dec
dec
andl
adc
add
imul
xchg
push
push
negl
mov
insb
mov
sub
notl
or
fisubrs
repnz
movsl
scas
xlat
popf
jmp
jno
scas
out
dec
dec
jno
mov
add
ficoml
and
push
stos
jns
loope
fs
push
jne
sbb
negb
fcomps
jle
push
in
jnp
xchg
frstor
or
xchg
xor
xchg
mov
sbb
popf
scas
repnz
out
sub
fldlg2
pusha
add
movsb
aas
mov
cmp
sub
into
cli
jg
pop
test
xchg
shrb
addb
addb
inc
ret
and
xor
cmpsb
jo
inc
mov
es
int
push
add
mov
roll
add
pop
inc
hlt
adc
lock
lods
test
inc
add
add
push
cmp
and
push
cmp
rcr
mov
add
pop
je
push
imul
sbb
xor
test
add
add
ret
cmp
fmul
adc
add
sub
fsubrs
add
lods
pusha
add
add
popa
xor
add
repnz
cmpsb
cmpsb
lea
in
jge
decl
mov
jge
add
mov
in
popf
mov
mov
pop
add
ret
ja
fmull
push
mov
cmp
adcl
pop
mov
jns
adc
add
loopne
xor
add
mov
repz
inc
btr
lods
mov
rolb
mov
sar
pop
xor
pop
out
add
sub
pushf
sahf
xor
inc
add
lea
imul
out
mov
fimuls
or
pusha
add
xchg
test
mov
fbstp
lcall
push
icebp
dec
scas
lret
out
xor
jmp
jg
add
inc
add
add
movsb
sti
inc
add
cmp
mov
push
pop
mov
inc
add
xchg
and
mov
pop
scas
pusha
add
xchg
aad
mov
shrl
cmp
rcr
enter
ds
jle
aaa
dec
cmp
and
jae
push
hlt
out
mov
rcll
mov
sub
mov
xchg
insl
lock
xchg
fisubrl
inc
add
xchg
pop
insl
imul
scas
cwtl
sbb
aas
dec
or
test
leave
js
je
xor
mov
leave
xchg
scas
test
pop
push
xchg
test
xor
out
dec
and
xchg
cmpsl
out
cmp
ret
loop
fistpll
add
inc
add
test
add
sub
sub
bound
leave
shlb
xchg
add
scas
stos
xchg
nop
ret
imul
repnz
sub
gs
jb
dec
mov
sub
xor
or
add
popa
dec
sub
lret
mov
inc
lds
repnz
mov
xchg
push
jnp
out
dec
push
adc
jge
xor
mov
rcrb
rolb
shrl
out
adcl
repz
mov
cmp
adc
xor
xchg
adc
adc
frstor
jge
cld
xor
daa
xor
sub
push
sbb
out
push
xlat
imul
push
sub
push
push
out
mov
aam
rolb
mov
pop
xchg
imul
mov
popa
xor
popa
inc
dec
jmp
add
ficompl
jb
xor
out
dec
push
xchg
rolb
push
push
dec
xchg
imul
fs
pop
into
xchg
icebp
add
popa
int3
leave
addb
movb
leave
jne
addb
fwait
dec
xor
mov
cmp
dec
iret
fdivrp
cmp
fdivl
jl
out
insb
fstpt
mov
lea
add
lods
push
insl
mov
lods
mov
sub
rcr
mov
and
aam
mov
add
cli
subl
mov
aaa
es
dec
loope
nop
jb
push
pop
ja
or
sti
push
add
inc
dec
mov
in
fmuls
mov
pop
mov
push
outsl
rcrl
fadd
bound
dec
leave
xor
xchg
mov
loop
addb
and
mov
lcall
lock
jnp
decl
dec
add
xchg
mov
xchg
popa
sahf
add
xchg
jecxz
int3
movb
in
push
add
adc
add
lods
cmpsb
xchg
fiadds
ss
jb
pop
or
rolb
cwtl
adc
test
dec
movsb
les
dec
mov
mov
sti
bound
into
arpl
or
mov
mov
clc
insl
aad
out
subl
fs
xchg
fcmove
add
lea
add
insb
cmp
push
cmp
dec
inc
add
and
pop
rolb
sahf
mov
mov
in
jl
mov
jg
les
pop
out
xchg
adc
out
test
pop
add
xor
push
cmp
mov
sub
sbb
lock
scas
iret
stc
mov
add
ss
mulb
fistpl
mov
inc
add
int3
scas
sbb
shlb
sbb
out
adc
dec
mov
xor
ret
test
mov
mov
mov
xchg
outsb
pop
aad
or
add
or
add
ds
jmp
dec
shrl
rolb
mov
cmp
xor
fprem1
cmp
outsb
fwait
insb
call
sub
xorl
xor
jmp
push
add
push
psrlw
ja
add
adc
add
cwtl
pop
sbb
mov
mov
pop
and
je
or
loop
push
add
mov
or
loop
movsb
ljmp
adcl
add
adc
add
divl
xchg
sub
push
mov
idivl
sbb
inc
inc
mov
hlt
loop
fcompl
dec
pop
add
adc
movl
inc
add
cmp
jne
add
ljmp
mov
inc
add
inc
add
mov
out
jp
stos
stos
jns
stos
imul
dec
mov
add
mov
enter
cli
or
add
add
movsl
das
cmp
ljmp
test
jp
jnp
addb
xchg
out
jo
mov
mov
add
mov
rol
sub
aaa
push
data16
add
mov
cli
repz
lods
addb
push
add
jge
add
aam
cmpsl
arpl
jb
cli
fst
movb
jb
fildl
inc
pusha
add
sub
xchg
push
inc
add
fisttpl
push
and
inc
push
scas
push
cmpsb
push
cwtl
lea
mov
add
std
sti
mov
add
dec
mov
pop
std
dec
lock
lcall
insb
dec
jbe
mov
addr16
icebp
addb
pop
mov
xchg
addb
rcrl
cld
cmp
fstpl
cld
pop
xchg
pop
pop
aas
pop
ds
in
mov
aas
pop
inc
add
dec
and
pop
push
cld
testb
incl
mull
mov
in
inc
add
movb
add
push
or
cmp
adc
pop
cmp
cmpsl
cmp
fistpll
test
xor
inc
add
incl
xor
cmp
rolb
add
fcoms
cmp
addl
bound
shll
xchg
add
sbb
add
test
lds
loopne
jns
sbb
and
mov
scas
ret
icebp
push
cltd
push
fsubl
add
add
jl
fucomp
leave
pop
int3
gs
test
fsubr
or
or
shl
push
stos
js
pop
dec
dec
lods
pop
test
xor
adc
push
dec
dec
and
orps
add
and
pop
or
fwait
lock
rorb
add
push
pop
int
mov
mov
je,pn
stos
cld
pop
mov
jbe
xor
cltd
data16
sub
mov
insl
stc
xchg
lahf
mov
jp
dec
psubw
add
jno
std
sar
mov
add
ljmp
stc
push
cmp
xchg
xchg
in
jnp
stc
mov
ja
mov
ret
int3
stos
mov
fiaddl
pusha
add
jge
mov
pop
xor
dec
or
jmp
out
push
pusha
add
out
adc
int3
inc
js
stos
adc
jnp
loopne
adc
sbb
fisttps
and
add
out
push
imul
movsl
add
add
test
or
or
xchg
lcall
cmpsl
lret
inc
add
jecxz
pop
std
pop
jnp
fst
or
das
popa
in
ss
xor
sbb
inc
incb
and
loope
popf
jnp
push
aam
and
mov
jno
scas
and
add
addl
mov
scas
test
jecxz
xor
xchg
cltd
les
xchg
stos
out
sub
inc
sub
test
gs
mov
sbb
loop
test
mov
jb
mov
ss
xchg
inc
add
fcomi
mov
aaa
xor
int
add
pop
cmp
fistl
ss
cmp
add
addb
mov
popa
push
cs
or
cmp
arpl
sahf
mov
rorw
cmp
mov
loop
add
ljmp
or
mov
enter
aad
add
sbb
pop
jmp
in
cld
inc
add
movb
cmp
jecxz
test
push
and
scas
mov
dec
adc
cli
in
sarl
inc
xchg
jl
pop
sti
pop
mov
insl
sbb
aaa
push
push
xor
outsl
das
dec
hlt
sti
stos
mov
cmc
jl
popa
cmp
add
push
enter
js
jl
dec
sbb
pop
pusha
add
stc
movb
fistl
sub
jge
push
add
frstor
rcl
jmp
inc
add
out
cmp
jno
push
mov
adc
jb
cmp
repnz
sbb
mov
sahf
test
insb
pop
push
addb
je
push
pushf
and
add
mov
cwtl
fidivrl
push
sbb
pop
pop
andl
das
pop
movb
add
xor
ret
sbb
add
stc
and
sbb
mov
insl
lahf
fadds
mov
push
imul
pushf
mov
add
gs
mov
leave
popa
adc
es
and
cltd
icebp
out
sub
mov
add
add
mov
lock
fistps
daa
jo
rcl
data16
jne
arpl
nop
or
fsubl
out
nop
lods
sub
mov
jno
sarb
into
mov
mov
sbb
adc
pop
je
push
test
incl
add
add
push
cmc
shrb
call
imul
int3
imul
cmp
jne
and
jne,pt
sar
push
mov
sub
dec
xchg
push
sub
das
dec
enter
int3
int
add
and
xor
xchg
rolb
cmpsb
rol
add
mov
rolb
rcr
ss
pushf
in
addb
mov
loope
jbe
add
sbb
cmp
push
add
cwtl
push
outsb
aas
jmp
add
mov
cmpsb
add
insb
dec
sub
add
pop
or
pop
mov
or
ljmp
xchg
and
adc
sbb
aam
push
int3
shl
sbb
cmp
mov
add
fcoms
in
ficompl
pop
pop
mov
dec
inc
push
push
loopne
add
repz
imul
stos
lret
add
imul
or
jl
int
pop
dec
test
add
sub
int3
les
ss
sti
iret
mov
xor
xor
rcl
mov
mov
nop
mov
pusha
add
or
adc
mov
and
add
popf
cltd
sub
int3
add
shll
lret
and
repnz
or
adc
sti
adc
mov
popf
push
call
ss
bound
movsl
inc
sbb
icebp
and
add
inc
test
dec
push
daa
jg
imul
pop
push
setge
inc
mov
xchg
jne
adc
das
mov
add
fsubl
jae
shrl
add
dec
clc
push
add
lahf
shll
add
mov
test
inc
sysret
into
xlat
out
jl
iret
loope
fwait
mov
scas
sahf
push
jns
add
icebp
adc
add
jle
mov
push
push
cmp
add
mov
push
cltd
jbe
outsl
clc
ret
inc
add
fstpl
adc
stc
and
xor
pusha
add
sub
xchg
mov
nop
ljmp
cs
gs
lret
lea
push
dec
sub
subl
les
fptan
test
mov
insl
arpl
dec
out
and
lock
fs
je
add
aas
adc
add
fcmovnu
addb
lods
xor
dec
je
mov
rolb
test
testl
push
repz
call
push
cmp
mov
add
das
imul
mov
fldt
adc
xchg
clc
enter
je
popa
les
in
int3
idivb
test
xor
xchg
mov
mov
adc
sahf
aad
iret
add
jbe
popf
sti
mov
pop
xchg
xor
xor
jne
mov
pusha
add
push
insb
fimull
xor
add
mov
jecxz
push
pushf
fcomp
loop
push
sub
sbb
cltd
dec
lret
sbb
xchg
es
inc
add
in
inc
daa
addb
aam
mov
out
inc
add
add
add
push
mov
pushf
adc
mov
push
bound
addr16
sub
sbb
fmull
lds
and
adc
inc
clc
gs
push
insl
cmpsb
and
or
add
pop
out
je
jne
imul
jp
xlat
rcll
lret
and
lods
outsb
pop
xchg
cmc
fstpt
mov
pushf
js
mov
jp
cmp
add
mov
pop
adc
ds
pop
out
test
lret
xor
push
push
rcrl
cwtl
decl
les
cmc
invd
cli
xchg
daa
in
adc
mov
aam
shl
jb
jns
mov
int
add
popa
jo
fcomi
or
aaa
push
sbb
sub
lcall
pop
imul
mov
and
pop
xchg
sbb
test
xchg
int
in
jp
mov
mov
push
imul
and
clc
mov
inc
add
push
push
pop
add
stos
mov
daa
movb
xchg
xlat
das
shlb
setae
add
cmpsb
repnz
movb
xor
mov
dec
movsb
outsb
cmpsb
dec
sub
adc
add
test
add
data16
mov
pop
xchg
loopne
mov
dec
jge
push
mov
adc
cmpsl
mov
add
mov
push
dec
rcrb
push
dec
pop
clc
lds
push
aam
or
xor
inc
mov
rolb
mov
push
ljmp
mov
lds
aas
out
jge
in
mov
imul
add
sbb
push
test
xchg
movsl
xchg
or
adc
add
scas
bound
cli
sub
mov
xchg
std
mov
imul
lds
jbe
inc
ljmp
enter
out
mov
popf
mov
inc
add
mov
push
xor
je
lret
pop
outsb
mov
add
int
inc
add
inc
add
add
sub
add
testb
add
cli
xchg
push
jge
sub
lods
into
xor
pop
adc
jle
mov
sarb
add
adc
pop
and
xor
ret
lock
add
pop
iret
sbb
shr
push
movl
jmp
dec
stos
lds
add
daa
xor
clc
das
loopne
in
repz
add
orl
sbb
jno
mov
inc
add
jecxz
clc
xchg
pop
ficompl
xor
mov
pop
adc
dec
push
jns
rolb
jle
xchg
and
push
rorb
lds
and
repz
sub
in
addb
inc
add
xchg
repnz
jns
add
xor
or
fdivr
gs
sub
je
test
or
aaa
sbb
and
and
std
lock
xchg
adc
add
lret
mov
jb
add
mov
fstpt
clc
out
cmp
add
jns
popa
push
lea
push
insl
push
add
out
inc
mov
ret
push
adc
std
inc
add
push
or
insl
xor
ret
push
insl
cmp
in
mov
xchg
add
sbb
add
push
add
fisttpll
mov
cmc
loope
aas
adc
add
mov
mov
push
mov
pushf
ret
cld
sbb
fcomps
popf
outsb
loope
repz
pop
inc
lods
repnz
rolb
cmp
xchg
push
dec
das
fs
lret
mov
stos
ret
lret
xchg
das
out
sbb
aam
popa
jmp
fstl
add
imul
les
add
add
add
inc
add
es
cli
push
xlat
outsl
cmp
jns
add
push
inc
enter
shrb
jae
sub
cmpsb
xchg
pop
cmc
fisttpll
les
adc
add
lods
and
dec
mov
push
scas
push
add
push
mov
imul
jl
xor
addr16
data16
xchg
adc
jp
xchg
lcall
cwtl
sar
or
stos
cmc
pop
lret
ja
hlt
aam
add
or
bound
outsl
sahf
repz
stos
fwait
jns
add
or
add
cmc
xor
sahf
mov
das
sbb
inc
add
out
fstpt
add
cli
adc
push
hlt
mov
xlat
loope
lods
icebp
jnp
test
push
lock
bound
sub
les
lods
insb
imul
mov
lea
jp
push
add
out
aad
add
push
into
inc
add
mov
rcrl
xchg
scas
pop
adc
sarl
dec
and
loopne
or
mov
add
lea
adc
mov
push
add
das
xor
arpl
jmp
pop
push
loope
adc
cmp
inc
add
add
ret
mov
sub
or
stc
negb
add
sub
add
lds
pop
mov
cld
bound
sbb
add
cli
shrb
add
popa
adc
xor
mov
xor
inc
scas
sub
sbb
jo
mov
add
and
mov
mov
cmpsb
xor
pop
and
push
inc
rep
mov
fwait
xchg
nop
xor
mov
add
xor
mov
dec
adc
mov
mov
cmp
daa
push
pop
jbe
add
rolb
sbb
or
ret
mov
sbb
add
pop
cmp
mov
popf
add
or
xlat
pop
mov
cmpsb
add
shll
or
imul
popf
push
dec
pop
scas
sbb
sbb
dec
sbb
rcrl
mov
push
movsb
or
loope
fwait
gs
adc
push
and
push
mov
cmp
mov
int
xchg
aam
sub
xchg
stos
iret
decl
cli
cmp
aam
push
add
popa
dec
fldenv
jae
addb
pop
dec
ja
idiv
adc
and
mov
fisttps
cmp
and
jo
fstl
lret
mov
sub
fcomi
mov
out
mov
cmpsl
rolb
or
lods
scas
xchg
faddl
mov
sub
int3
mov
sub
arpl
lcall
add
or
dec
sti
xor
sbb
daa
adc
add
jg
push
sbb
add
shlb
mov
inc
and
cld
mov
add
sub
inc
add
adc
lods
ja
jb
adc
jbe
les
aas
movsb
fs
hlt
push
out
adc
fisubrs
js
sub
test
cmc
xchg
mov
push
aam
daa
inc
add
inc
add
xchg
dec
push
pop
pop
imulb
and
pop
push
push
push
lcall
outsl
inc
add
add
jb
imulb
jnp
movsb
sbb
push
addb
mov
sbb
mov
inc
fsubp
add
pushf
cmp
out
faddp
mov
ret
sti
adc
aaa
rclb
addb
sbb
aaa
icebp
scas
add
pop
adc
push
lret
inc
add
sbb
ss
cmpsl
outsb
jnp
cmp
add
add
enter
push
rcll
xchg
push
leavew
pop
aaa
mov
add
cmc
mov
stc
add
adc
add
test
push
test
cmp
mov
jno
inc
add
imul
and
jnp
stos
loopne
cs
stos
or
pop
push
xor
cmp
bound
pusha
add
ror
adc
ret
and
shrb
incl
xor
adc
mov
xor
lcall
jne
aas
iret
rcr
out
lea
bound
xchg
aad
ljmp
xlat
rorl
gs
repnz
cmpl
mov
repnz
sub
adc
in
jb
inc
xchg
add
rolb
cmp
add
js
dec
add
sbb
or
mov
call
mov
cltd
mov
xchg
xor
sbb
sti
mov
and
jae
sbb
xor
mov
das
bound
aam
fucomip
cltd
mov
pmaddwd
mov
mov
mov
mov
cmp
movsb
int
add
pop
out
movsb
pop
jmp
xor
mov
popf
mov
jmp
and
xor
inc
ret
jle
and
scas
aaa
cmpsl
ds
add
clc
xchg
push
sub
sahf
dec
push
out
lret
adc
out
scas
inc
out
xchg
mov
push
jae
mov
movsb
or
adc
mov
test
pop
into
mov
pop
into
fdivr
enter
add
sub
or
pop
gs
scas
ret
insl
std
fildll
inc
add
mov
dec
shl
daa
pop
pop
mov
mov
add
int3
pop
aad
adc
js
icebp
dec
loopne
push
fdivrl
outsl
and
mov
call
xor
fcoml
and
shrl
xchg
repnz
push
dec
dec
xchg
sti
pop
xlat
pop
ja
ds
mov
aas
les
cmc
xchg
iret
adc
out
cwtl
mov
mov
jae
sub
pushl
mov
subl
or
cmp
add
cmpsl
fs
and
add
and
nop
adc
sub
dec
pop
loopne
cmp
xor
sub
rcll
mov
cwtl
fldcw
jbe
add
mov
jmp
dec
sti
add
sub
into
pop
arpl
sbb
movsl
inc
add
cmp
push
jl
mov
in
outsl
cmc
sbb
ss
jne
imul
pop
and
sub
jns
add
cmp
push
add
pop
cmc
fsts
je
enter
lds
push
lods
pop
xlat
test
aad
addb
in
addr16
shrl
ja
xor
xor
popa
inc
add
lods
addb
repz
pop
adc
sub
add
jne
dec
fistps
push
nop
js
leave
addb
icebp
jge
scas
sahf
aam
mov
cli
cltd
ret
dec
data16
push
loopne
lock
in
js
push
sahf
out
into
jecxz
fistpll
add
dec
aad
pusha
add
mov
cmpsb
cld
add
add
sbb
shrb
push
dec
jae
in
push
mov
add
js
js
add
xor
add
outsl
imul
or
xor
jp
sub
ja
ret
push
add
dec
lea
fs
mov
xchg
sub
dec
mov
xchg
dec
ds
adc
lcall
in
test
dec
cli
push
int3
sub
movsl
and
cltd
in
add
mov
cltd
or
adc
add
lock
mov
out
sti
into
daa
sbb
xchg
stos
scas
jae
js
or
je
dec
stos
mov
jmp
daa
pop
add
sbb
lods
pop
inc
out
sahf
in
mov
cmp
lret
scas
lea
clc
hlt
fcompl
outsb
mov
add
sbb
insl
rolb
cltd
sbb
fwait
dec
pop
mov
xor
pushf
out
incb
mov
cmpsb
jae
jp
sub
jg
pop
add
out
pop
sub
stos
inc
mov
scas
jb
mov
mov
mov
int
and
jo
fisttpll
push
inc
add
cld
xor
mov
or
les
push
ss
mov
out
lods
fcmovnb
mov
mov
test
cmp
mov
pop
cmpsl
je
add
inc
add
cmpsb
pop
pop
xor
shll
mov
loop
into
push
mov
inc
stos
pop
jno
fistpll
in
dec
ljmp
add
push
xor
pop
call
cmp
mov
adc
fmuls
mov
scas
push
or
jb
mov
divl
jmp
adc
pop
xchg
pop
xor
push
jl
dec
imul
lds
pop
mov
add
xorl
flds
hlt
sub
sub
add
push
aas
inc
ja
lret
das
addb
or
sub
fwait
fs
loopne
add
push
es
ljmp
inc
lea
and
iret
ret
cmp
add
jne
mov
fidivl
sarb
push
and
in
sub
push
scas
mov
fnstsw
cltd
int3
int
push
xchg
fisttpll
js
sub
popa
xor
lods
insb
pop
call
jp
aam
leave
mov
mov
test
mov
mov
add
jb
lret
pop
pop
or
add
cmp
jl
mov
mov
or
mov
cmpsb
push
fwait
rcrl
pop
adc
jno
aaa
push
lahf
push
lret
pop
mov
xchg
add
mov
add
rolb
addr16
adc
ds
lea
mov
add
call
or
xchg
stos
ret
adc
jae
mov
mov
aaa
mov
insl
xchg
and
pop
mov
sub
add
adc
xchg
mov
je
fstps
cmpsl
xchg
pmulhuw
add
add
loop
mov
adc
xchg
test
dec
sub
add
stos
out
xchg
xchg
push
and
mov
rcr
stos
pop
rorl
scas
psubb
lock
mov
test
call
jnp
les
imul
and
xchg
cmp
add
cmp
and
sub
outsl
pop
test
push
ror
fstpl
cltd
xlat
lods
or
cld
pop
push
push
xchg
fstps
in
mov
xchg
or
fdiv
hlt
inc
push
xor
jle
push
xor
dec
or
ja
xchg
pop
ficomps
test
pushf
mov
add
push
rcrl
scas
fsubr
xchg
sbb
scas
lret
addb
mov
xchg
sub
mov
sub
jno
ja
sub
pop
inc
add
dec
sbb
mov
cli
outsb
ss
and
rcll
sbb
test
push
add
push
or
sbb
test
push
pop
mov
dec
std
aad
clc
and
enter
dec
bound
or
cmpsb
mov
repz
lods
out
jns
stos
adc
push
aas
push
lret
add
xchg
call
push
add
add
jp
nop
add
arpl
dec
dec
into
lods
popa
lcall
into
lret
jge
ret
daa
inc
push
ds
imul
add
pop
sbb
test
in
pusha
add
inc
add
hlt
andl
mov
sub
jl
dec
add
dec
add
dec
pop
xor
or
sbb
cmpsl
fwait
pop
loope
add
push
xlat
xchg
lea
test
or
pushf
dec
nopl
push
push
sub
push
add
dec
lock
add
cld
cmc
jbe
dec
iret
push
ret
mov
loope
add
lods
mov
mov
divb
xor
imul
movb
scas
fnstenv
mov
jns
call
jno
sbb
into
xor
push
daa
push
sub
jo
push
aaa
sbb
test
mov
mov
leave
cmp
insb
cli
cmp
icebp
test
adc
ds
sbb
and
sbb
or
add
xorl
sub
and
xchg
adc
jecxz
rolb
dec
mov
jns
add
movb
test
pushf
ret
push
stc
pop
xchg
inc
cmp
aas
mov
enter
int3
cmpsl
hlt
loop
notb
or
adc
add
mov
mov
sbb
mov
imull
inc
add
rolb
add
push
fldt
pop
inc
addl
fstpl
sbb
jge
or
inc
xchg
div
sub
dec
pop
out
fmuls
xlat
std
aaa
pop
sub
test
pop
mov
sarl
lock
jnp
xchg
or
pop
xchg
jmp
sarl
pop
xchg
test
jmp
lret
das
or
test
dec
mov
movsl
mov
fwait
lock
cli
jne
jle
roll
fistpl
mov
cmp
bound
faddp
enter
fdivs
mulb
add
mov
test
jne
cmp
adc
std
xchg
pop
ljmp
and
pop
mov
xchg
mov
movb
mov
mov
add
ret
jle
add
ds
mov
add
in
pop
cltd
ror
icebp
test
fwait
fwait
outsl
and
in
cmp
cld
icebp
or
bound
mov
adc
outsb
cmp
repnz
jb
mov
not
dec
shl
pop
popf
arpl
add
mov
mov
adc
inc
add
mov
mov
les
push
jno
add
mov
dec
mov
cmpsl
ljmp
cli
and
add
mov
cwtl
lret
mov
pop
sub
std
and
inc
add
into
jns
loop
xor
jge
push
push
out
pop
out
cltd
or
add
filds
enter
mov
push
lds
jle
movsl
addb
cmc
pop
sub
inc
sbb
mov
inc
add
outsl
jge
jb
push
mov
jmp
inc
add
jno
cmpsb
sbb
cli
addr16
sub
pop
gs
clc
push
mov
arpl
add
shll
or
and
shlb
pop
inc
sti
fcoml
jo
subl
lret
and
sbb
xchg
mov
push
cltd
enter
inc
push
inc
add
cmp
cli
add
cmpl
mov
sti
xor
js
movsl
push
test
int
add
add
add
enter
mov
scas
fdivr
sub
sbb
jne
dec
out
add
add
repz
add
adc
dec
nop
or
mov
mov
push
out
mov
cld
pop
sub
lods
arpl
loop
and
add
test
aam
dec
loop
aas
ja
cmpsl
sets
jle
adc
sub
add
xchg
mov
add
cld
lea
in
pop
or
sbb
shl
sbb
js
add
std
add
xor
lcall
mov
call
out
push
dec
xor
mov
in
inc
add
xor
mov
xor
add
adc
ret
pop
inc
adc
std
test
push
cwtl
rcll
add
test
add
push
xchg
popa
and
or
jl
fs
repz
and
push
push
cwtl
push
jmp
rcrl
adc
add
fnsave
pop
popa
add
pop
scas
iret
add
mov
les
xor
mull
sbb
and
sub
xor
mov
mov
leave
das
push
es
add
jb
mov
in
push
in
cmp
mov
or
xor
add
and
jae,pt
in
mull
mov
xor
add
add
jmp
lds
jbe
push
jecxz
adc
mov
jl
icebp
pop
in
and
in
mov
pop
dec
loope
add
cmp
sub
mov
xchg
fistps
sahf
jle
jno
fisubs
stc
sub
jns
roll
mov
mov
sub
pop
and
xor
fs
jge
movsl
mov
mov
lds
movsb
repz
jo
add
sti
add
mov
std
pop
push
scas
inc
add
es
push
mov
fnstcw
lahf
imul
pushf
push
outsb
ljmp
dec
inc
pop
pop
movsl
sub
add
sub
add
sti
inc
test
inc
add
mov
fldt
popf
and
sub
flds
mov
sbb
pop
xor
mov
test
ds
out
fists
sti
inc
dec
push
mov
pop
mov
dec
mov
sarl
test
bound
aas
dec
xlat
sarl
ret
jmp
mov
xchg
pop
movb
filds
test
add
add
add
outsb
icebp
mov
test
pop
mov
or
das
mov
xor
mov
mov
mov
mov
test
aad
loop
cmpsb
mov
dec
mov
shlb
xchg
andnps
inc
add
jns
fcompl
or
ror
ficoms
ror
adc
rorb
repnz
mov
sub
mov
scas
daa
lea
xchg
push
jns
hlt
and
imul
xchg
and
add
or
rclb
cmp
fsubs
sbb
imul
fmull
ss
fs
movsb
nop
sbb
lret
sbb
mov
push
sub
mov
sti
push
pop
lret
jo
sbb
mov
push
cld
hlt
std
stc
and
jl
push
lea
mov
dec
lret
bound
aaa
hlt
pop
mov
add
mov
fdecstp
xchg
fcmovnu
dec
or
xchg
rolb
sub
mov
out
ds
add
push
sahf
test
stc
imulb
jecxz
mov
call
or
jb
notl
scas
dec
std
in
mov
out
inc
add
scas
or
fldl2t
sub
test
pop
in
ja
sub
push
imul
jns
add
loope
outsl
pop
jp
out
sub
stc
jb
int3
out
aaa
ljmp
or
jnp
imul
xor
mov
sub
fsubp
dec
dec
and
js
fstl
xchg
dec
push
std
cs
pop
addb
pop
pushf
movb
adc
sub
std
imul
call
mov
pop
test
xchg
pop
inc
add
adc
cld
mov
cmp
mov
pushf
std
push
rcrl
lret
jbe
and
lods
sub
add
test
lods
mov
mov
cmp
imul
pop
mov
push
xor
addb
movb
add
addb
aas
mov
pop
cmp
mov
bound
adc
loope
or
jno
in
outsl
bound
mov
inc
add
push
dec
cli
jb
xchg
movsb
lods
jbe
pusha
add
fstps
inc
call
mov
push
std
or
xchg
pop
push
out
mov
mov
add
movb
or
fistl
sbb
add
das
rcrb
mov
add
pop
ja
iret
xor
and
je
sub
dec
jb
or
fcom
in
rolb
repz
mov
add
mov
or
pushf
addb
jge
push
cltd
xchg
push
sbb
add
add
inc
add
test
dec
aam
inc
add
jo
adc
add
pop
fadd
push
xor
xor
test
mov
jl
jae
add
aad
adc
in
mov
repnz
fildll
push
shlb
and
ret
pop
xor
in
ret
push
mov
add
dec
or
add
inc
add
or
addb
sbb
les
cld
insb
mov
adc
scas
cld
sti
sbb
pop
loope
jbe
sub
imul
sub
es
outsl
xor
movsb
test
mov
mov
inc
push
add
lret
repnz
mov
inc
add
xor
data16
xchg
inc
add
jp
push
repz
popf
gs
in
xchg
mov
roll
stos
out
mov
add
mov
sbb
xchg
inc
adc
cmp
jge
mov
cmp
sub
push
insb
dec
test
add
jno
push
add
outsb
ss
fcoml
mov
movsb
jae
fisttpll
sar
pop
cmp
loop
nop
pop
sub
jp
mov
mul
pop
imul
fistpll
mov
xchg
push
add
jmp
es
inc
add
adc
xor
mov
repnz
out
mov
add
ljmp
shll
in
push
mov
sbb
inc
add
outsb
stc
scas
ss
adc
xchg
sahf
jbe
add
repz
rolb
inc
add
mov
das
test
test
addb
fimuls
lret
push
add
popf
sbb
add
cmp
push
add
sbb
mov
or
lahf
lds
int
cli
add
add
add
iret
outsl
cltd
out
dec
add
mov
mov
add
jb
mov
pop
rolb
pop
mov
in
inc
add
bsr
and
xchg
fldenv
sbb
lods
stos
jmp
orl
cmc
xchg
push
jno,pn
jl
flds
rolb
push
pop
std
push
pop
cmp
jp
rol
sbb
lock
ret
jns
loope
aam
pop
add
jo
jmp
test
xchg
mov
sub
jno
repz
out
push
imul
and
loop
cmpsb
pop
lret
sub
int
cmp
sub
add
mov
push
mov
pop
adc
gs
ss
jmp
outsb
in
aam
cs
orl
or
mov
or
pop
pusha
add
lock
mov
cmp
jo
rolb
xchg
adc
lea
cs
fsubl
add
jg
fs
and
xchg
xlat
dec
sub
add
rolb
add
data16
hlt
cmp
sbb
push
pop
adc
mov
add
add
and
les
test
movsl
or
fcmovnb
dec
xor
into
aad
dec
xchg
hlt
and
jmp
xchg
xor
and
icebp
loop
push
jno
dec
and
sbb
test
add
mov
ret
std
xchg
jno
jnp
fwait
mov
sbbl
sbb
lahf
mov
ret
scas
pop
and
xchg
add
and
nop
jecxz
mov
fcomip
aam
shl
addb
add
test
iret
push
cmp
cltd
pop
ljmp
movb
push
scas
jecxz
insb
pop
pop
xchg
negl
mov
mov
mov
enter
loop
out
sar
cmp
add
into
xlat
add
into
adcl
enter
dec
mov
pop
mov
pusha
add
xor
rolb
sbb
ja
decb
les
fnstcw
sub
in
pop
ljmp
mov
movb
scas
jns
pop
iret
in
orl
add
jg
mov
pop
dec
cmp
bnd
inc
cmpsb
sub
test
jae
clc
ljmp
add
mov
addb
adc
inc
mov
and
cld
and
jg
xor
push
xchg
mov
cmpsb
iret
sbb
and
xchg
add
adc
outsb
add
jb
fs
jecxz
loopne
mov
inc
jne
sbb
lods
icebp
sbb
sbb
mov
sub
nop
jp
add
int3
outsl
ret
sub
scas
mov
mov
ret
jle
add
aam
in
mov
dec
mov
or
cs
inc
add
int3
std
add
add
stos
mov
mov
add
sti
movsb
mov
mov
pop
and
jmp
mov
jmp
add
addr16
sub
push
jmp
and
subl
mov
inc
jo
inc
add
popf
mov
insl
cmp
cmp
mov
aas
test
add
add
xor
and
dec
push
mov
mov
add
cmpsl
mov
mov
ficoms
jmp
xchg
dec
out
lods
repnz
cmp
out
mov
int
or
ljmp
pop
cltd
xor
fs
dec
mov
jl
daa
shlb
icebp
sub
and
mov
add
add
test
cmpsb
movb
cli
shlb
aaa
bound
xchg
std
add
imul
add
xchg
idiv
add
imul
add
in
mov
je
push
and
mov
pop
xor
add
loope
add
add
xor
add
add
xchg
or
mov
in
test
outsl
arpl
jg
adc
jns
rolb
mov
inc
add
and
test
aad
adc
sbb
cmp
mov
and
xor
out
cld
fimull
mov
mov
ret
aad
out
fstps
outsb
in
stos
jns
xor
lods
mov
pop
or
adc
pop
mov
cmp
aaa
pusha
add
pop
push
jp
or
xchg
pop
mov
add
and
adc
outsl
fidivs
lock
or
daa
xchg
pop
mov
stc
jmp
jmp
rcll
cli
jp
jp
ror
lahf
scas
daa
xlat
mov
dec
cmp
jge
add
stc
arpl
dec
rclb
and
push
je
out
inc
add
add
add
aaa
and
xor
cmp
add
jg
add
adc
add
repz
jno
lcall
inc
add
js
pop
jg
jnp
adcl
js
call
sbb
xorl
mov
dec
jo
scas
arpl
in
jae
test
dec
fwait
stos
mov
and
jle
lret
bswap
mov
rolb
les
mov
adc
mov
add
cmp
inc
add
std
cmp
dec
enter
je
lcall
aas
daa
xchg
mov
add
xchg
hlt
mov
add
test
addb
add
inc
add
and
xchg
lahf
mov
mov
movsb
sti
shrl
add
add
adc
aad
push
add
lret
shlb
add
adc
cs
sub
mov
fldenv
pop
sbb
ret
mov
push
add
fmuls
fucom
dec
adc
pusha
add
leave
ret
nop
repz
or
cwtl
inc
add
jnp
mov
stos
int
push
bound
cmpsl
fistpll
mov
sub
addr16
mov
mov
xchg
mov
fstl
js
add
and
add
push
aas
rolb
jnp
ss
jae
pop
mov
and
fistpll
mov
add
dec
xchg
mov
dec
push
and
xchg
enter
out
adc
bound
int3
pop
adc
pop
enter
push
mov
or
stc
mov
insl
sub
mov
lret
test
ror
lret
sarl
jecxz
mov
lahf
inc
jo
ftst
push
add
xchg
pop
mov
cmp
out
mov
sub
stos
out
dec
mov
popl
bound
push
insl
imul
mov
pop
pop
add
pusha
add
in
stos
insl
into
pop
cmp
das
mov
out
sbb
mov
xchg
leave
je
aas
cmp
add
mov
insb
das
addb
add
lret
xor
gs
test
add
lret
adc
arpl
mov
mov
ljmp
cltd
sub
mov
push
ja
push
xchg
mov
addb
out
add
in
mov
dec
aaa
or
inc
jg
add
cwtl
test
inc
push
mov
and
sub
fsub
aaa
mov
xchg
movsl
mov
mov
inc
lds
mov
sbb
rolb
jnp
mov
inc
add
movsb
push
xchg
and
rep
int
jne
mov
cmpsl
fisttpl
add
sarl
mov
negb
dec
add
cmovns
imull
les
jae
lret
rolb
scas
sti
xchg
add
dec
icebp
push
mov
shrl
ficoml
pop
imul
lds
sbb
xchg
xor
out
jnp
imul
jge
pop
mov
out
mov
add
sub
addb
mov
repnz
aad
jns
adc
aas
mov
add
push
xchg
mov
jg
mov
mov
xchg
movsl
les
dec
mov
pop
repnz
mov
outsb
popa
data16
lods
pop
mov
in
fcoml
in
into
inc
and
and
jb
ljmp
add
xchg
cwtl
jbe
repnz
push
mov
xor
push
fnsave
push
sub
cmp
sbb
inc
add
into
dec
push
mov
sub
adc
add
repz
add
dec
cmovno
cmp
mov
add
add
ret
es
loope
pop
lds
pop
and
cmp
dec
and
loopne
lcall
push
pop
inc
inc
add
inc
add
adc
mov
stos
jecxz
inc
and
in
arpl
xor
mov
leave
test
xchg
sub
repz
add
rolb
cli
push
pop
fwait
xchg
dec
jns
mov
xor
int
add
xchg
movl
in
xchg
lds
loop
scas
mov
push
cmp
push
leave
add
leave
mov
push
insb
mov
sahf
fcoms
mov
or
xchg
cmc
mov
adc
and
mov
fs
sub
popa
adc
sub
outsb
outsl
mov
rclb
ret
adc
inc
lret
mov
ret
outsl
or
adc
add
xor
enter
cmp
pusha
add
mov
add
das
mov
divb
xchg
in
add
in
xchg
sbbl
xor
insl
add
and
mov
xchg
gs
mov
or
les
xor
std
jo
or
test
lret
icebp
repz
fnstcw
out
cmp
add
sub
jg
push
lds
movsb
jne
insl
out
dec
push
int3
dec
ret
in
xchg
stos
jecxz
stos
into
adc
mov
pop
imul
testb
add
into
imul
aad
add
pop
out
gs
pop
cmc
push
jmp
add
test
dec
stos
cmp
add
scas
ret
dec
jmp
xchg
push
mov
arpl
repnz
pop
nop
in
popf
iret
scas
aad
int3
popf
push
rolb
jge
stc
pop
dec
add
adc
insb
hlt
pop
mov
hlt
adc
sub
pop
and
cmp
shlb
mov
add
add
jae
sti
lahf
push
dec
dec
sub
sub
cli
sahf
gs
push
dec
jl
and
jge
xchg
imull
pop
loope
call
lcall
add
rolb
jge
inc
add
xor
mov
ja
mov
sub
cmpsl
ja
add
pushf
test
xor
or
push
cmpsb
int3
jno
mov
cli
stos
mov
addb
push
mov
sub
or
adc
mov
xor
add
sbb
and
pop
sub
lret
mov
pop
pusha
add
loope
fiadds
ficomps
scas
loope
cli
xor
cmp
pop
mov
aam
sub
ljmp
or
jb
sub
adc
xchg
faddp
xchg
jmp
push
imul
pop
xchg
adc
inc
add
add
mov
mov
add
pop
mov
and
shrl
fldenv
mov
pop
and
dec
add
xchg
loope
mov
negb
jmp
jg
add
mov
inc
add
mov
dec
movb
pmaddwd
fmuls
xlat
lods
jae
inc
es
stos
mov
or
jmp
mov
addr16
fcmovb
dec
iret
and
mov
enter
pop
cmc
add
sbb
sbb
inc
add
mov
jnp
jl
and
dec
mov
adc
mov
jmp
add
out
movaps
and
lret
jmp
adc
cmp
rolb
pop
jmp
cltd
lea
idivb
sbb
add
push
add
dec
in
push
outsb
pop
imul
jno
pop
nop
push
add
insl
lcall
add
hlt
ljmp
mov
das
jbe
jge
add
loope
aas
jne
pop
sub
cmp
leave
ljmp
test
ljmp
inc
add
add
mov
lods
cmpsl
aaa
mov
rolb
push
add
dec
sbb
ficomps
adc
repz
jbe
push
fcoms
or
clc
pop
cmpsl
stos
pop
mov
lahf
out
adc
and
fbld
iret
jnp
cwtl
xlat
adc
test
push
or
pop
push
mov
mov
outsl
add
xlat
mov
inc
push
mov
cmp
pop
jmp
arpl
mov
jecxz
mov
scas
popf
out
add
arpl
jmp
push
jb
mov
inc
pop
repz
push
push
or
dec
movsb
sbb
aaa
xchg
jo
js
notb
mov
arpl
movzwl
add
jno
inc
sbb
sbb
xchg
sub
pop
movsl
addb
notl
adc
push
or
decl
and
inc
add
and
mov
pop
es
and
mov
dec
lds
addb
daa
add
lock
fcompl
rcll
popa
cmpsl
mov
mov
inc
imul
dec
mov
insb
loopne
in
loopne
adc
inc
push
repnz
mov
xchg
adc
cli
out
mov
fndisi(8087
and
addb
nop
sahf
pop
cmc
shlb
sbb
add
dec
stos
sti
and
ds
pop
fdivl
cld
fucomi
push
mov
dec
jle
addr16
cltd
sub
adc
mov
pop
out
gs
dec
popf
pop
pusha
add
shll
je
mov
out
fwait
call
add
popa
iret
cmp
cmp
jecxz
test
shlb
test
add
in
rorl
mov
pushf
nop
mov
ss
lods
int
pop
icebp
movsb
fnclex
aas
stos
xchg
ljmp
insl
cmpsl
push
xor
xchg
adc
cmpsl
xlat
ljmp
leave
add
xor
test
das
out
les
inc
add
pop
dec
imul
enter
movsl
or
or
push
das
ss
iret
filds
popa
cld
mov
je
adc
movb
sub
lahf
mov
dec
xorps
adc
ret
add
push
mov
rorb
stos
mov
add
aad
adc
dec
xor
loop
adc
jnp
test
add
add
cmp
arpl
mov
jbe
shll
shl
icebp
mov
jg
mov
push
sbb
lcall
imul
jp
push
push
popa
dec
mov
jl
mov
push
add
stc
bswap
lcall
daa
sbb
inc
add
and
add
and
mov
nop
mov
aam
sti
fs
inc
add
cltd
xor
movsb
pop
adc
add
and
push
mov
daa
xchg
ja
fmul
iret
pop
pop
into
mov
mov
add
xchg
loope
add
xchg
sub
mov
movsl
jp
sub
pop
push
in
cmpsb
inc
ja
bound
popa
imul
and
call
push
mov
aas
pop
sbb
pop
aaa
push
add
or
scas
inc
mov
sarb
scas
mov
mov
popl
mov
cld
sub
stc
sub
shlb
ja
inc
add
xchg
pop
mov
jp
jl
mov
xchg
test
jbe
stos
popf
cmc
std
and
push
or
jnp
xor
xchg
and
dec
pop
jmp
sub
std
cmp
dec
sub
enter
adcl
push
loop
pop
cmp
ficoml
fimull
repz
mov
jle
sahf
sbb
bound
and
test
ret
cmp
mov
adc
sub
das
mov
add
pop
xchg
ljmp
cmpsl
jns
insb
inc
ds
arpl
push
add
lahf
add
shl
out
int
dec
xor
pop
test
sub
ficoml
and
and
flds
mov
jle
and
in
add
sub
outsb
pop
jp
inc
add
mov
ljmp
outsl
cltd
repnz
xchg
or
add
scas
popa
cltd
mov
or
add
lea
add
cmpl
mov
cwtl
add
cmpsb
mov
enter
mov
rclb
jo
addb
inc
insl
ljmp
pushf
dec
bound
gs
cmp
shlb
nop
xor
add
pop
leave
xchg
test
les
pusha
add
jae
rolb
add
in
mov
add
enter
fwait
xor
add
fs
sbb
pop
inc
add
cmpsb
and
add
add
jecxz
movsl
imul
and
shll
imul
mov
push
jns
pop
mov
popa
jne
jae
dec
aaa
out
aas
pop
clc
leave
outsl
jle
push
jp
mov
cmp
push
jecxz
sbb
mov
stos
cmp
xor
lret
imul
mov
add
mov
lods
jb
aam
stc
jecxz
jns
pop
add
jnp
sbb
repnz
ss
jecxz
sbb
or
and
and
in
out
inc
cwtl
adc
inc
add
out
iret
cmp
fimuls
xor
repz
adc
add
pop
test
int3
inc
popf
mov
add
int3
mov
add
fwait
xchg
jns
mov
addr16
sub
lcall
lret
pop
ds
pminub
cmpsl
lahf
pusha
add
add
fmuls
sti
jg
scas
push
xor
jo
and
jle
inc
add
add
lret
mov
repz
and
or
xchg
mov
mov
fiaddl
cwtl
push
xchg
gs
push
dec
fidivrl
fs
jne
es
fiaddl
add
popf
insb
outsb
jno
inc
push
out
push
xor
popa
int
sahf
lods
andl
pop
test
and
imul
push
outsl
ds
xchg
scas
mov
adc
outsb
cmc
arpl
jl
cmp
sub
and
adc
sbb
xchg
in
add
cmp
jbe
iret
pop
jle
aas
pop
icebp
mov
adc
or
or
mov
movsb
test
call
pop
dec
mov
je
pop
sbb
xor
add
lods
ret
mov
arpl
adc
lea
ss
dec
pop
adc
ljmp
adc
xor
push
loop
inc
or
mov
daa
and
mov
ret
cwtl
push
push
dec
orl
lret
jno
mov
or
in
push
loopne
add
add
and
sub
mov
cmpsb
add
adc
adc
mov
cmp
cld
mov
sub
sub
in
mov
push
add
add
xor
sbb
mov
mov
data16
ljmp
sti
jb
xchg
dec
inc
add
ds
pop
lock
into
inc
add
clc
push
xor
add
push
and
out
jno
xor
cmpsl
cmp
or
cmp
iret
mov
and
mov
ja
fdivrs
addb
pop
adc
mov
push
hlt
scas
mov
pop
cmpsl
dec
test
xchg
je
mov
test
int3
or
icebp
bnd
mov
pop
adc
in
inc
ja
imull
push
cmp
scas
shl
xchg
mov
add
dec
cld
sbb
push
xchg
push
and
mov
addb
sbb
pop
jg
mov
xchg
jge,pn
sub
add
in
cmp
add
test
cmp
rorb
dec
or
test
orl
stos
popf
jp
adc
insl
xor
cmp
or
mov
xor
adc
mov
outsb
or
inc
add
inc
fldenv
mov
stc
cmp
add
add
add
mov
cmp
add
pusha
add
dec
aad
and
sbb
jge
mov
dec
inc
xchg
xchg
es
xor
lret
repnz
lock
sub
inc
add
pop
lret
ror
cli
in
lcall
push
faddl
add
mov
icebp
ret
add
ret
in
xor
pop
jp
sbbl
push
fwait
xlat
and
mov
enter
add
push
pop
dec
ss
les
repnz
add
and
das
push
sub
call
les
mov
mov
or
addb
xchg
xchg
popf
cmpsl
sbb
xor
test
cmp
pop
add
fidivs
or
add
ss
pusha
add
lret
cmovge
pop
leave
sub
and
dec
ds
jle
int
add
jge
pop
sahf
add
mov
or
push
aas
data16
movsb
cmp
imul
iret
cmc
adcl
add
and
push
jmp
lcall
ds
pop
mov
jb
add
sbb
add
add
and
xchg
nop
mov
inc
push
test
lret
dec
mov
and
mov
loopne
inc
lods
inc
add
icebp
lods
adc
orl
cmpsb
ss
and
xlat
xchg
pop
movsl
retw
sti
jns
push
addl
lahf
test
jb
and
add
mov
mov
into
flds
add
hlt
test
std
push
pop
mov
mov
sbb
mov
imul
sbb
cltd
dec
ds
lds
sbb
cmpsb
cmp
sbb
ljmp
mov
icebp
push
xchg
ljmp
adc
xchg
lods
loop
add
mov
mov
dec
inc
add
fcomi
pusha
add
jecxz
out
push
out
mov
adc
out
mov
sbb
and
inc
add
daa
std
sub
andl
xchg
push
add
or
pusha
add
xchg
in
aaa
jmp
insl
incb
outsb
xchg
stos
int
ds
not
mov
stos
in
fistpll
lahf
movsb
push
push
cmp
roll
movsl
inc
add
add
add
mov
add
mov
les
pop
jg
jmp
sbb
jns
dec
lret
call
pop
adcl
mov
dec
popa
xchg
and
in
test
inc
adc
pop
rcll
out
lahf
xchg
add
fs
pop
aam
ljmp
jb
movsb
dec
leave
icebp
enter
mov
fstps
push
mov
lods
pop
addb
call
jae
cmp
in
sub
adc
out
addb
out
adc
lods
arpl
sub
lret
ds
jmp
lods
or
dec
cmpl
cs
push
rcll
xor
add
jb
mov
sahf
addb
add
into
shll
and
or
or
out
mov
out
sti
leave
shlb
addb
cmp
jle
xor
mov
je
xor
cld
jne
and
add
repz
arpl
cmp
sbb
cmpsb
sub
add
repz
xor
add
mov
or
cmp
adc
bound
call
adc
dec
inc
ds
cmpl
add
movb
and
addb
insl
sbb
mov
add
icebp
fmull
push
into
int3
in
sbb
or
enter
xor
int3
jl
add
stos
sbb
jbe
mov
icebp
test
sbb
pushf
sub
cmp
decl
mov
testb
mov
fisubs
insb
lds
fbstp
cmp
ds
dec
mov
jmp
pop
nop
adc
ss
loope
add
nop
pushf
jmp
pop
xchg
mov
fcmovnbe
loopne
lods
out
xchg
insl
xchg
inc
add
dec
jne
add
test
leave
dec
or
xchg
jbe
dec
push
xchg
call
sub
loope
add
jmp
decb
mov
mov
cwtl
sahf
sar
adc
push
lock
fistpll
fisttpl
xchg
bound
push
in
adc
inc
add
loop
popa
out
das
or
rcrb
je
add
jns
out
or
sahf
mov
outsb
dec
push
add
and
dec
add
adc
add
addb
out
icebp
mov
and
mov
test
cli
aam
or
daa
jb
je
lods
xchg
fsubl
decl
es
jno
movsl
fimull
sti
and
jnp
add
shll
add
js
cmp
movb
sbb
nop
enter
cltd
popa
insl
icebp
jle
xchg
movsl
xor
in
dec
test
xor
addr16
ds
push
jg
out
xor
out
addb
outsb
push
push
es
mov
test
jmp
add
aas
sarb
inc
jne
xchg
mov
cmc
hlt
adc
fildll
mov
sub
add
cmp
mov
or
sub
mov
cmp
dec
sbb
sub
or
fsubs
pop
push
mov
xchg
lcall
sub
jb
mov
pop
xchg
mov
mov
pop
xchg
icebp
dec
inc
add
sarl
outsb
aam
int3
js
jne
xchg
sub
sub
mov
mov
and
add
js
cmp
movsb
scas
pop
lret
cmc
ja
dec
adc
mov
push
jmp
mulb
std
mov
xchg
addr16
jg
inc
lret
das
lds
add
jge
mov
lret
clc
in
mov
xchg
push
insl
xchg
shl
leave
out
inc
add
pop
push
xor
add
add
mov
inc
add
add
gs
jnp
add
sbb
or
daa
mov
adc
jbe
mov
popf
or
cmp
pop
jmp
adc
jecxz
dec
fwait
pop
jne
xlat
int3
popa
inc
inc
add
outsb
mov
xchg
je
jo
add
dec
and
add
repnz
sahf
adc
arpl
sub
scas
loop
addl
stc
sbbl
mov
aad
inc
add
mov
add
clc
stos
leave
lcall
push
mov
ja
or
shll
in
inc
pop
cmp
mov
push
dec
add
xchg
mov
insl
lock
cmp
lret
dec
pop
xor
add
add
movsl
aas
inc
jmp
add
jnp
or
scas
and
push
insl
dec
in
addb
push
fidivs
fs
cmp
in
clc
inc
add
cli
jo
popa
stc
adc
mov
mov
out
xor
dec
jecxz
cltd
jne
jno
dec
pop
insl
inc
add
in
mov
roll
mov
sbbl
inc
pusha
add
in
xchg
sbb
dec
and
mov
out
add
fsts
xor
dec
ret
dec
test
jno
push
daa
lea
pushf
mov
es
add
dec
xor
fbld
mov
je
stos
cmp
mov
dec
cmp
add
mov
scas
mov
or
push
movsl
rolb
addr16
sub
pop
add
imul
xor
xlat
xchg
daa
jecxz
add
inc
add
insb
das
and
jo
sbb
mov
addb
add
cs
jl
gs
xchg
push
pop
lcall
aas
das
pop
jb
es
cmp
jbe,pn
mov
jnp
sti
pop
mov
js
xchg
xor
sbb
jo
dec
cmp
insl
sbb
xchg
es
push
loop
fisttpll
mov
iret
and
mov
add
sti
pop
mov
adc
popf
or
fldcw
push
add
sbb
cs
pop
ja
push
or
out
sbb
inc
addb
jae
ss
or
out
cmp
push
in
jecxz
leave
push
imulb
test
pop
sub
fiadds
ja
lods
dec
or
add
xor
sbb
and
std
adc
adc
stc
ss
xlat
dec
cmc
movsl
and
lods
xchg
stos
inc
add
loope
inc
add
clc
sbb
push
add
cmp
ret
out
xchg
jae
loope
dec
scas
xchg
fistps
pop
jecxz
aaa
inc
mov
jne
adc
adc
xchg
sub
repnz
cli
loop
cmp
push
sub
add
adc
mov
aas
and
adc
push
test
add
aaa
mov
movsl
in
add
and
out
dec
lock
push
add
push
repnz
test
out
int3
ret
loope
into
ror
std
fdiv
pop
push
xchg
ds
cmp
iret
je
xrelease
jno
mov
ja
and
lahf
ds
or
stos
cmpsl
push
gs
or
stos
cmp
mov
add
inc
add
stos
dec
dec
aas
nop
and
push
jo
test
shll
shll
inc
add
sbb
add
bound
mov
jb
cltd
push
add
sbb
adc
outsl
mov
jae
icebp
ja
fistl
inc
add
jg
je
inc
das
in
aam
out
test
jg
add
cli
rcr
xor
loope
lds
lds
add
and
add
add
cmp
cli
js
add
xchg
mov
jne
add
xchg
mov
pop
push
cmp
loop
aas
jnp
addb
lea
shll
gs
xor
pop
xor
outsb
mov
xor
mov
outsb
lds
pop
pop
sub
sub
idiv
insl
inc
out
rolb
add
cmp
and
inc
sbb
je
mov
out
dec
mov
jno
into
lahf
push
add
or
fisubrs
jnp
and
paddsw
decb
leave
pop
stos
cmp
loop
or
imul
in
xorl
out
jb
jmp
add
dec
in
cmp
inc
add
add
sahf
inc
jnp
fidivrl
fldl
adc
aad
jl
repz
movsl
addb
cld
lret
or
and
add
inc
add
sbb
mov
ret
mov
into
fldcw
lods
fildl
mov
add
adc
mov
cli
adc
push
jae
add
in
push
icebp
adc
push
add
ret
inc
add
outsl
adc
stos
fwait
and
pop
ds
cld
lcall
cmp
add
insl
mov
mov
cmp
in
or
outsl
mov
add
popf
scas
repnz
cwtl
xor
or
sbb
insb
daa
cmp
pop
arpl
dec
outsl
in
add
xchg
int3
and
addr16
idivl
cltd
dec
sub
movsl
gs
and
add
mov
das
mov
mov
rol
add
scas
cld
adc
daa
fldcw
dec
ds
add
test
push
add
add
arpl
rcrl
adc
mov
ljmp
add
dec
sahf
outsb
mov
jnp
and
push
xchg
adc
es
xchg
outsl
leave
aas
enter
push
push
sub
mov
xchg
test
xchg
iret
sub
add
fs
add
or
rolb
insl
sar
orl
mov
mov
movb
dec
or
fisttps
bound
jl
in
mov
push
sbb
sti
mov
cltd
jo
arpl
enter
inc
adc
int
scas
pushf
jge
or
add
fcompl
push
out
sar
arpl
xchg
lds
es
mov
dec
push
xchg
sbb
add
push
das
adc
pop
add
inc
or
movsl
lret
fsubs
cmp
xchg
mov
xor
inc
add
inc
add
cli
jp
cmpl
push
ss
push
imul
out
and
sar
es
lcall
rorl
ja
test
cmp
ficoml
sahf
mov
add
cmpsl
lods
shrl
sbb
mov
clc
cmp
add
sarb
jno
add
jns
jns
push
add
jo
mov
pop
mov
add
add
and
les
and
mov
cmc
movsb
addb
cmp
sbb
xor
ret
movb
pop
push
pop
rcrl
dec
and
out
push
mov
push
pop
xchg
scas
cmp
stc
in
xor
add
cmp
pushf
idiv
inc
add
mov
fists
xchg
cltd
mov
jns
add
inc
and
fwait
insb
pusha
add
out
xchg
fwait
mov
popa
push
lea
add
add
movsl
add
xor
enter
rol
add
add
pop
push
adc
outsl
jae
dec
mov
jmp
mov
cmp
test
add
jnp
out
sti
enter
inc
add
mov
inc
in
xor
mov
push
mov
dec
inc
add
and
sub
cmpsb
movb
mov
pop
in
out
add
clc
les
shlb
add
add
addr16
mov
cmpsl
ljmp
out
lret
add
sub
outsl
shl
add
insb
outsb
mov
insl
lret
add
jb
js
or
push
test
mov
ret
push
xor
rolb
ja,pt
inc
add
shlb
push
out
pop
call
mov
mov
push
fsubl
add
adc
faddl
nop
or
jge
add
pushf
cwtl
mov
inc
popf
push
cli
scas
xor
addb
scas
add
mov
adc
fistpll
outsl
xor
cmp
jge
xor
inc
add
add
mov
sub
dec
cmpsb
mov
popa
push
repnz
sahf
fistpll
cmp
jmp
lea
repnz
adc
test
sbb
add
push
mov
push
inc
ret
mov
lcall
cmp
pop
or
std
dec
and
fidivrl
in
lret
stc
imul
mov
and
push
add
movb
frstpm(287
scas
movsb
les
jg
add
mov
addb
int
std
pop
gs
sbb
fwait
mov
jl
jecxz
shrb
jge
mov
stos
dec
arpl
mov
lods
loopne
push
sbb
lods
fnclex
jecxz
xchg
test
xchg
cmpsb
push
add
mov
inc
add
movsl
bound
std
or
push
es
add
lcall
cmp
add
ss
jb
add
add
outsl
sbb
outsb
gs
adc
xchg
jne
push
add
bound
ja
sub
fisttpll
sbb
jp
in
add
mov
and
inc
or
mov
pop
test
pushf
in
pusha
add
xor
xor
addr16
repnz
das
mov
les
dec
std
cmp
mov
add
lea
mov
dec
and
cmpsb
call
pop
mov
xchg
push
mov
shll
mov
and
icebp
mov
repnz
push
push
mov
mov
jl
xchg
test
aad
bound
and
jp
add
scas
movsl
lock
lret
lahf
out
push
xchg
push
xor
js,pn
movsb
das
pop
mov
push
pop
popa
xor
cmp
rcrb
xchg
fadds
rolb
outsl
je
dec
cltd
aam
insb
jle
fmull
and
ret
xchg
jnp
je
cmp
repz
inc
sti
jo
sbb
add
jle
lea
cmpsl
jno
add
push
stos
mov
pusha
add
dec
rep
pusha
add
loope
ljmp
je
adc
xor
cwtl
pop
in
add
nop
std
jge
les
insb
in
add
movsl
jmp
push
inc
or
adc
jle
xchg
enter
loope
add
add
sub
jne
in
sti
sub
push
lret
and
push
iret
cwtl
js
and
aaa
dec
sub
movsl
enter
dec
call
divb
dec
adc
repz
dec
dec
mov
mov
add
mov
cli
cltd
rcr
inc
xor
rep
push
or
dec
pop
or
jle
inc
fdivl
mov
add
xchg
xor
cmovge
mov
xchg
hlt
dec
test
int
aam
test
push
add
xor
cwtl
mov
jnp
in
pushl
adcl
xor
rcrl
sar
ret
gs
sbb
cwtl
xlat
loope
insb
pop
xor
aas
iret
lcall
mov
jne
add
test
jbe
push
gs
sbb
test
in
je
lods
push
mov
xchg
test
adc
add
mov
testb
in
mull
jle
xchg
outsl
or
add
popa
cwtl
les
ljmp
sub
aaa
lret
ljmp
jle
and
push
stc
aas
mov
add
xor
sbbl
test
xor
jnp
movsl
cwtl
xchg
jl
add
nop
and
repz
cmp
mov
xor
daa
push
fs
and
pop
adc
dec
in
test
scas
pop
out
arpl
jp
mov
push
rcr
and
call
or
mov
mov
cmp
xor
add
or
or
shrl
sub
nop
cmp
add
add
pop
jg
scas
les
mov
jbe
mov
inc
cmpsl
shll
pop
xchg
lock
add
cmp
movsl
sub
add
stos
test
add
sbb
in
std
aas
insl
sbb
loop
rolb
pop
pop
push
test
xchg
jnp
aas
and
loop
dec
mov
push
daa
loopne
add
push
lods
shlb
out
stc
jg
push
sub
dec
push
mov
add
xbegin
sbb
popf
aas
inc
add
add
clc
aad
test
clc
xor
add
add
lahf
and
mov
shrl
pop
and
add
xchg
xor
sbb
pushf
loopne
ret
call
sbb
or
out
roll
pop
ja
stos
lcall
cmp
xor
sub
inc
jo
gs
and
jp
push
mov
add
jecxz
rorb
add
aaa
icebp
popf
pop
pop
ss
or
into
aam
xor
mov
popf
cli
jnp
jne,pn
cwtl
pop
hlt
cmp
push
push
pop
ret
adc
sbb
stc
pop
dec
xlat
cs
movb
add
mov
xor
cli
or
into
out
dec
dec
mov
push
xchg
cli
sti
mov
std
push
add
inc
add
lock
out
add
movb
xchg
lds
aas
mov
insb
jp
mov
mov
push
sub
enter
mull
std
clc
and
xor
or
push
inc
add
push
adc
stos
ja
rolb
add
add
aad
pop
mov
nop
test
dec
fistpl
and
iret
mov
and
sahf
addb
xor
daa
lcall
cmp
sahf
aam
iret
cltd
jno
in
movsl
mov
addr16
dec
mov
addb
fwait
jns
push
push
add
imul
mov
imul
add
pop
mov
add
icebp
sub
nop
fmuls
scas
fwait
imul
jg
add
push
jb
push
imulb
dec
and
loope
xlat
mov
lock
sbb
frstor
mov
add
popa
hlt
jnp
sbb
lods
hlt
or
add
je
add
out
dec
loop
push
pop
cmpsb
sbb
imul
xchg
loope
outsb
sub
arpl
imul
outsl
stos
push
push
decl
push
pop
jmp
pop
mov
mov
lahf
xor
cs
ja
add
and
pop
ret
cmpsb
jnp
fwait
add
imul
or
jbe
lods
mov
add
in
pop
push
sbb
in
xchg
push
dec
adc
mov
call
xor
mov
add
movl
add
fbstp
cmp
mov
sbb
outsb
mov
jbe
mov
out
add
imul
in
push
pop
lods
dec
push
cmc
xor
test
scas
push
push
addr16
scas
loopne
stos
int3
lea
aaa
dec
add
push
out
into
arpl
arpl
aas
scas
mov
inc
add
daa
push
loop
xchg
cmp
add
sub
cltd
in
clc
push
addb
arpl
imul
and
into
mov
cli
outsb
sub
add
pop
xor
mov
xchg
in
mov
pushf
xor
aam
pop
add
xor
das
imul
movsb
sub
push
in
push
ss
mov
fdivl
insl
xor
push
call
sub
leave
mov
xor
int3
jno
fnstenv
sti
js
sahf
push
inc
add
push
int
into
mov
sub
adc
add
in
movb
xor
mov
insl
addr16
mov
insl
out
mov
add
loope
push
pop
jl
ss
mov
jae
xchg
sub
in
popf
insb
add
rolb
mov
mov
fwait
lret
cmp
inc
mov
lret
fldt
mov
sbb
dec
mov
pop
mov
addr16
dec
aam
or
aad
lock
addb
stc
and
mov
aas
ret
lahf
sbb
add
popa
push
dec
mov
inc
popf
hlt
sbb
out
cmp
sbb
out
dec
push
xor
shrl
mov
stos
pop
call
mov
std
cwtl
popa
in
dec
mov
jecxz
lret
lea
shrl
adc
xchg
sysret
ljmp
sti
mov
xchg
ret
mov
pop
pop
cltd
adc
add
lods
dec
cs
mov
jo
out
fisubrl
int3
inc
add
or
aas
push
xor
std
call
insb
sbb
add
add
sbb
cld
shlb
fwait
mov
pop
in
mov
movsl
fcmovnu
pushl
mov
pop
or
sub
mov
or
sti
jmp
pushf
sub
and
xchg
cmp
jge
jl
jnp
int3
insl
gs
xor
sub
add
js
jno
in
in
xchg
mov
clc
and
dec
addb
xchg
pop
xchg
ret
imul
sub
adc
loop
adc
dec
xchg
or
add
xor
inc
add
mov
mov
sub
xchg
xor
aaa
lcall
aas
lahf
dec
dec
add
sub
lret
aad
mov
ret
xlat
lret
or
add
add
xchg
mov
neg
mov
cmp
inc
add
add
mov
mov
jp
sub
xchg
mov
push
es
inc
mov
leave
sbb
push
sbbl
outsb
cmp
addb
adc
jnp
jle
gs
in
lahf
faddl
sub
inc
add
add
pushf
pop
sub
mov
leave
mov
pushf
in
inc
mov
dec
pop
jne
iret
test
in
and
xchg
jbe
add
int3
dec
test
add
push
nop
lds
jbe
adc
or
dec
dec
or
or
lods
or
pop
or
call
jecxz
loop
call
ja
inc
add
add
movb
lret
push
js
and
mov
loope
sbb
jp
sub
nop
jmp
outsl
mov
add
add
fmuls
mov
adc
int3
addr16
enter
fs
sarl
or
outsb
sub
pop
ret
cmpsl
sub
sub
rolb
add
fsubrl
jge
cld
or
mov
sbb
popf
dec
sbb
dec
jge
inc
mov
sbb
lds
imul
jmp
int
push
cs
mov
dec
sbb
dec
mov
push
add
mov
add
inc
add
fdivrl
les
test
add
mul
dec
insb
rol
add
xchg
or
loopne
add
xchg
stos
mov
pop
je
repz
out
sub
push
pop
pushf
xlat
fcompl
add
mov
lods
fucom
cmc
decb
add
push
lret
xchg
add
inc
add
pop
xor
push
adc
adc
lods
add
and
add
rolb
push
inc
add
stos
fdivs
mov
shll
rolb
aas
cmp
ret
push
add
data16
xor
push
stos
test
mov
xchg
out
push
inc
adc
adc
jmp
jge
std
lret
fsubrl
dec
or
push
xor
sbb
rolb
rol
add
decl
fisttpl
aad
mov
inc
test
push
jbe
enter
xchg
add
add
push
and
lret
inc
add
cmp
daa
fs
lods
mov
repz
sbb
sub
xchg
arpl
mov
adc
scas
stos
sahf
cmp
aad
shlb
sarb
push
xchg
mov
rolb
fisttpl
add
push
call
sahf
jo
outsl
pushf
xor
xlat
call
add
nop
inc
add
add
outsb
sahf
movsb
sub
mov
jae
sbb
into
ljmp
fistpll
jmp
add
jp
mov
sbb
fwait
adc
pop
scas
jmp
adc
imulb
add
insb
cmp
jnp
inc
add
pop
loopne
mov
mov
add
mov
mov
jecxz
sub
push
mov
xchg
loop
sbb
cmc
add
pop
addr16
lods
les
cltd
cmp
push
sti
push
movnti
popf
and
push
dec
mov
mov
je
insl
outsb
int3
mov
in
and
xchg
mov
jns
add
adc
incl
popl
das
cmpl
pop
mov
addb
add
mov
sti
pusha
add
out
jg,pt
iret
js
cmpsb
push
fwait
aad
fdivrl
incb
and
jge
jg
sub
or
jae
testl
xor
sbb
add
add
mov
xor
mov
enter
stos
rorl
adc
sbb
fisubrl
push
sarl
or
fdivrl
and
aam
popf
dec
cmp
ret
add
xchg
cmpsl
arpl
xor
push
ffreep
or
sub
sbb
cld
fstp
push
xchg
push
dec
rolb
cmpsl
sub
add
jmp
in
cmp
cmpsb
cmp
repz
nop
cmpsl
or
shl
jmp
xor
mov
jl
add
xor
imul
xlat
cmp
or
clc
add
pop
cwtl
lock
cmpsb
sbb
daa
sbb
sbb
sahf
mov
add
mov
inc
loopne
add
inc
mov
dec
pop
cli
out
pop
add
faddl
movb
add
mov
loope
xor
in
jnp
mov
adc
shll
add
fdivrl
xchg
sti
pop
push
cwtl
std
outsl
jb
sti
inc
dec
cmp
fs
mov
sti
cmpsb
lret
add
in
vmovq
dec
ret
inc
add
fs
mov
inc
iret
insb
repnz
shrb
cltd
loop
mov
fldt
add
stos
cmp
mov
add
mov
mov
and
addr16
ljmp
lods
bound
ja
ret
jae
aas
and
inc
int3
dec
rolb
dec
push
mov
push
add
stc
xor
loopne
aas
cltd
iret
into
popf
cmp
std
addb
test
les
in
ss
fucomip
testb
cs
pop
int
pop
jg
pusha
add
jp
fs
insl
push
and
inc
add
imul
or
lods
xor
aad
lret
mov
mov
jp
or
pop
sbb
xor
ja
je
loopne
adc
ds
movsb
das
es
dec
test
shll
mov
and
sbb
popa
cwtl
enter
jg
mov
cli
jns
enter
mov
jb
rolb
mov
shll
pop
push
push
push
add
add
push
popf
rolb
nop
int3
push
scas
fcmovb
aas
ss
mov
cld
and
mov
add
xchg
mov
xchg
sub
pop
xor
aad
inc
add
andl
and
lods
clc
sub
cmp
or
push
mov
out
jge
sti
jle
out
adc
jecxz
fwait
xchg
push
push
out
mov
ljmp
add
nop
jmp
dec
in
sarb
into
xor
sti
sbb
cmovg
jno
mov
sub
imul
movb
cmpsl
cmpsb
push
dec
movsl
das
stos
addb
push
stos
pop
lea
insl
add
nop
aam
repz
push
lds
jmp
call
aaa
push
jns,pt
mov
lcall
inc
add
add
sarl
pop
cmp
out
iret
sarl
mov
push
imul
jb
rolb
cmp
cmp
dec
in
add
xchg
ds
cltd
sti
aaa
popa
sub
jle
test
and
lock
add
insl
int3
dec
xor
mov
push
dec
inc
add
dec
cmp
sbb
fdivrl
hlt
mov
inc
add
enter
mov
pop
cmpsl
xor
aam
add
inc
lahf
stos
push
add
int3
xchg
mov
push
dec
outsb
xchg
xchg
aad
push
xchg
repnz
add
dec
sbbl
add
jae
mov
mov
or
movsl
push
inc
add
shrl
mov
mov
pop
xchg
mov
lret
mov
push
sahf
sbb
jmp
addr16
sbb
or
daa
imul
in
xor
jecxz
pop
cmpsl
mov
out
popf
sbb
daa
and
inc
and
cli
mov
sti
rorb
cmp
and
enter
jae
in
pop
jecxz
mov
call
dec
sbb
push
addb
add
aad
jge
add
test
aaa
cmpsb
mov
or
add
sarl
icebp
out
or
insb
addr16
dec
in
fld
in
scas
and
scas
jecxz
add
out
popa
mov
jle
or
pushf
outsb
pop
addb
jecxz
xchg
lods
jge
mov
loop
fs
frstor
add
dec
mov
sbb
dec
lods
mov
sbb
shlb
dec
xor
mov
call
iret
bound
or
pushf
loop
lea
addb
imulb
das
sub
adc
xchg
popf
mov
les
mov
dec
add
add
add
ret
addb
repnz
aad
dec
sub
shl
add
jbe
jmp
add
into
pop
xor
test
jge
xchg
mov
xor
stc
and
incl
pop
sbb
stc
jle
rol
and
out
cmpsb
insl
push
push
add
sub
sahf
push
fbstp
mov
push
aad
cmp
jbe
in
out
bnd
adc
scas
jmp
or
int3
rcrb
dec
lock
cmp
add
scas
xchg
insl
icebp
rclb
icebp
or
sbb
jno
mov
pop
mov
xor
and
ljmp
pop
out
xor
adc
cmc
mov
aas
test
stos
mov
cmpsb
mov
cli
jmp
adc
lcall
call
push
enter
xlat
lahf
cli
out
add
insl
ret
add
in
rolb
add
add
add
push
inc
add
jl
add
jmp
mov
sbb
inc
add
add
add
add
and
pop
aam
xchg
adc
sahf
mov
cmp
add
sub
add
cmp
mov
xchg
cmp
insl
dec
stos
sub
cmp
cs
pop
inc
add
cs
jnp
daa
sbb
push
or
mov
andl
repz
test
movb
fsts
aad
aam
lcall
scas
pop
ja
fnstsw
cmpsb
push
jmp
dec
movsb
xor
pop
iret
jne
xor
mov
lods
push
ret
insb
xor
jno
push
int3
xor
and
stc
test
mov
js
mov
xor
jle
or
lret
rolb
jmp
or
mov
sbb
out
sbbl
add
pop
dec
loope
out
imul
push
cmp
inc
add
ret
fldt
addb
and
lea
movb
daa
pop
sub
push
jns
pop
adc
imul
daa
loopne
mov
add
add
subl
add
sub
dec
or
sbb
sub
xor
stos
movb
pop
mov
rorl
pop
and
imul
mov
xor
int
fcoml
add
dec
add
int
aam
movsb
xor
mov
addr16
mov
cvtdq2ps
or
add
xor
test
jnp
cmp
in
imul
pop
in
xor
adc
add
inc
add
cmc
or
inc
add
pop
hlt
aas
cli
sub
mov
xchg
mov
push
mov
in
push
insl
mov
inc
add
mov
or
pusha
add
pop
add
fwait
dec
pushl
inc
or
in
inc
pop
aas
stos
les
or
push
xchg
push
pop
scas
out
inc
add
jne
idiv
sub
sbb
in
movb
add
add
ficomps
mov
cmpsl
and
and
sti
out
mov
add
or
add
add
mov
divl
add
cli
add
repz
add
pop
pop
inc
das
pop
xchg
sbb
test
xchg
outsb
jmp
dec
in
pop
ret
jg
xchg
xchg
cmp
out
cmp
mov
adc
lcall
cld
xchg
mov
ja
add
or
sub
outsb
int
aam
insl
or
mov
scas
or
frstor
add
setae
xchg
shll
pop
adc
and
cmp
sbb
xchg
mov
lahf
fdivl
out
aas
or
push
or
sub
sbb
fwait
inc
add
or
mov
mov
outsb
dec
mov
das
add
shll
xlat
xchg
lods
jp
rolb
aaa
adc
sahf
xchg
in
inc
add
push
add
dec
sub
push
cs
int3
jbe
jge
in
jmp
pop
int3
es
gs
add
pop
jo
icebp
in
add
je
add
xchg
push
add
cltd
dec
dec
icebp
mov
jmp
les
xor
xor
sbb
mov
fstpt
movsl
fimull
aad
push
fistpl
or
add
jmp
insl
test
lcall
sarb
loope
in
nop
leave
mov
call
inc
lea
ljmp
xor
test
or
movsl
les
je
test
lret
push
push
lahf
xchg
mov
je
scas
neg
xchg
callw
imul
and
adc
inc
add
cmp
jmp
enter
fldenv
pop
jae
je
push
xchg
lret
ljmp
sub
movsb
cltd
lock
push
xor
dec
mov
and
sahf
jl
xor
jecxz
dec
add
les
arpl
push
xchg
jge
mov
pop
pushf
pop
les
adc
out
jl
cmp
mov
addb
xchg
rol
int3
in
push
jb
daa
shrb
lret
ffree
adc
sti
inc
and
jg
sub
test
mov
add
jmp
std
push
jne
sbb
cmp
std
out
sub
jo
movb
adc
mov
add
out
clc
cmp
pop
mov
les
stc
push
js
out
and
nop
fsubs
addb
sahf
outsl
leave
push
inc
add
in
stos
addb
push
jne
add
pusha
add
js
in
ljmp
xchg
enter
sub
inc
add
mov
xchg
sbb
shll
mov
les
insb
notb
ret
sbb
enter
add
mov
inc
add
jno
jp
test
aam
lret
mov
pop
js
icebp
aam
imul
enter
push
add
adc
ret
in
xchg
mov
or
lock
jo
into
dec
sbb
sub
push
jb
add
pop
call
shrl
lods
dec
cld
mov
xor
dec
aas
ljmp
mov
dec
xchg
sbb
mov
sub
cmpsb
stos
inc
add
ljmp
call
sbb
inc
add
lret
aad
add
mov
cmp
addb
aad
cmp
cmp
js
testl
cmp
inc
add
cli
jecxz
lock
xchg
sub
xchg
push
inc
dec
cmp
call
add
call
and
test
push
fdivrs
loopne
cwtl
aas
in
xor
xor
leave
pop
cs
hlt
fcoml
lea
cmc
push
xchg
addb
xor
cmp
pusha
add
xchg
mov
sbb
lea
mov
add
insl
pop
popaw
add
ret
mov
dec
sahf
cwtl
arpl
jle
cmp
aas
xor
out
cmp
subl
sub
insb
lds
aaa
cltd
sub
dec
ds
mov
jle
add
xor
push
cmp
sub
mov
mov
test
or
dec
fstps
add
dec
arpl
cmp
fstps
imul
cmp
add
insl
addb
or
arpl
sub
stos
aad
pop
xor
add
outsl
mov
or
cmp
sti
unpcklps
xor
aaa
mov
mov
pushf
stc
cmc
jno
movsl
test
out
pop
lods
unpcklps
sbb
icebp
sub
and
ret
add
dec
xchg
lret
fisttps
test
aaa
add
or
adc
add
mov
leave
cli
mov
jns
lcall
cmp
call
sub
repnz
outsb
sub
adc
cmp
add
scas
jne
adc
or
mov
orl
and
xchg
call
add
pop
add
push
sbb
aas
mov
sbb
insl
fndisi(8087
or
and
lret
jge
imul
mov
ud0
and
jnp
add
xlat
jg
or
add
or
pushf
inc
pop
stc
mov
int3
pusha
add
mov
int
and
inc
cltd
cmp
andl
into
cmp
push
ja
stc
test
jne
aam
mov
cmc
cld
repnz
mov
popw
icebp
xor
jmp
fimuls
imul
or
pop
cmp
inc
add
int
test
add
push
call
fsubl
test
dec
sbb
xlat
mov
add
inc
add
fcoml
dec
adc
xchg
mov
adc
sbb
sub
xchg
jb
jmp
sbb
sahf
rcrb
add
inc
add
mov
test
push
negl
mov
cltd
daa
cmc
or
repz
push
inc
es
inc
add
push
das
int3
push
rcll
adc
jp
inc
or
push
and
aas
add
out
adc
jae
mov
push
push
lahf
ret
mov
adc
add
insl
push
imul
push
jecxz
ficoms
inc
add
ret
sub
test
pop
or
into
inc
add
bt
js
je
cmp
sbb
adc
outsb
push
dec
adc
cmp
cmp
movl
cmp
ret
ret
bound
dec
mov
add
popf
ja
push
outsl
addr16
sarb
aaa
movsl
cmpsl
jp
xor
add
sbb
cwtl
ud0
jno
sbb
push
or
pop
jge
push
sub
movsl
adc
icebp
popa
and
mov
test
inc
add
imul
xor
mov
mov
pop
inc
add
jmp
shr
lock
add
or
sbb
dec
or
ret
std
and
in
gs
adc
repnz
roll
movb
add
ja
push
xor
pop
sbb
fisttpl
outsl
movb
push
out
sbb
add
inc
add
sub
cwtl
and
sub
lock
aad
push
int3
or
lcall
shl
shrl
mov
dec
jo
loopne
lahf
cmp
push
movb
iret
pop
loopne
add
xchg
inc
jmp
xor
cmp
add
pushf
and
cmp
rolb
xchg
jne
adc
fcoms
add
test
pusha
add
lods
sbb
cmp
add
xor
les
mov
adcl
lods
frstor
xor
loop
cmc
xchg
pusha
add
stos
mov
and
in
pop
mulb
add
stos
adc
inc
mov
jl
cld
repnz
cmpsl
xchg
dec
push
addb
cwtl
sar
dec
movsl
popa
loop
repnz
cmp
std
fidivl
mov
shlb
out
shll
jbe
enter
stc
call
fcomip
jle
push
add
out
test
fstpl
mov
add
fdivrl
roll
rolb
in
push
fwait
mov
movb
xor
scas
nop
shl
xchg
cmpsl
insl
pop
ljmp
jp
sahf
inc
cmc
xchg
or
jb
in
pop
out
mov
or
cwtl
push
mov
dec
invd
mov
stc
mov
inc
outsl
addb
xchg
test
icebp
int3
xchg
fistpll
push
pop
adc
cmpsb
dec
into
imul
subl
mov
les
imul
cli
sahf
xchg
adcl
mov
pop
movsb
leave
movsb
inc
add
clc
xchg
movsl
xchg
in
cld
and
fsubr
jge
lds
popa
jne
in
add
lock
gs
jne
scas
xchg
out
xor
in
pop
push
fcoml
or
lea
fiaddl
loope
mov
adc
jle
and
push
arpl
insb
fcmovu
je
lea
or
add
mov
push
fwait
mov
sub
cmp
call
inc
push
push
lds
movsl
js
xchg
add
mov
add
mov
jge
add
cmp
add
std
cs
into
jl
mov
cs
dec
inc
fldcw
cltd
outsl
mov
test
mov
mov
fnstsw
jl
cld
pop
rolb
addb
jmp
inc
add
outsb
ret
adc
inc
add
mov
cltd
leave
jmp
mov
sub
pop
jbe
hlt
adc
jg
mov
daa
push
add
stos
mov
lahf
data16
add
mov
and
xor
fdivrs
add
add
jo
and
lock
sbb
inc
add
enter
add
je
out
or
out
push
addb
pop
daa
and
jmp
gs
std
jecxz
ret
insb
push
pop
pop
lock
push
add
mov
sbb
jge
insb
mov
aas
stos
jge
xchg
mov
and
push
xchg
ret
gs
and
adc
adc
sub
les
cmpsb
inc
jne
xchg
cwtl
aad
push
test
add
mov
lahf
rorl
cmp
scas
sbb
test
sar
insl
and
add
add
pop
mov
or
cmpsl
pop
sub
lds
stos
leave
je
add
pop
mov
mov
ss
lret
stos
xlat
flds
cwtl
fdivrs
cld
mov
pushf
inc
xchg
sbb
std
data16
and
fdivrs
mov
rolb
int
mov
dec
data16
mov
enter
and
sub
mov
das
mov
add
sub
aam
icebp
xchg
cltd
inc
adc
push
div
cmpsb
cmpsb
repz
ss
dec
xchg
pop
inc
jne
or
add
inc
sub
jae
sbb
adc
pop
ja
dec
mov
and
jmp
movl
sti
xchg
mov
or
add
dec
enter
mov
fstp
pop
cmp
jae
sub
inc
mov
sbb
push
nop
jg
sbb
mov
jns
adc
add
mov
pop
add
xchg
int
mov
fwait
je
cmp
xlat
dec
mov
stos
xchg
aad
add
fcmove
push
mov
pusha
add
mov
dec
jo
lahf
loope
cmp
add
in
ficomps
sub
lcall
adc
lds
aaa
push
fcmovb
add
jb
sub
out
adc
cmp
fnstsw
inc
mov
and
fsubl
push
dec
cmpsb
xor
add
and
imul
or
add
mov
add
fsubrp
xchg
fisubs
insb
addb
push
jo
jle
stos
shrl
daa
xor
jbe
aaa
jno
push
lods
mov
icebp
and
add
lock
xchg
in
adc
push
cmp
popf
push
add
test
test
jge
daa
cmpl
sub
jno
push
cli
dec
sub
lret
sbb
xchg
push
mov
sub
pushf
orl
and
or
add
jb
mov
push
sbbl
sbb
sub
add
jb
xchg
mov
lahf
sbb
int3
lea
enter
cmp
add
js
add
adc
push
test
unpckhps
adc
lock
lock
add
push
ficomps
daa
fdivrp
in
repz
ret
int3
data16
movsb
xor
adc
cltd
shrb
sub
bound
jnp
mov
scas
xchg
sbb
pop
test
jg
les
test
push
dec
pop
mov
in
cmpsl
outsb
xchg
cmpsb
cmp
lods
add
xor
add
adc
fiaddl
xor
jge
imul
adc
enter
push
add
push
ret
das
insl
cmp
xor
or
test
out
data16
rcll
inc
add
stos
insl
addb
in
add
add
das
mov
xchg
xchg
sub
inc
add
int
jnp
xchg
dec
xchg
mov
xorl
cmp
repnz
and
add
es
gs
adc
sub
or
fwait
repz
lret
mov
std
mov
imul
xor
cmp
push
xor
jnp
lds
ror
cmp
in
sbb
xchg
mov
mov
mov
ds
jno
xchg
pop
sub
movsb
mov
les
push
mov
dec
push
fidivrl
mov
add
rolb
rolb
sub
mov
add
inc
add
mov
add
pusha
add
jb
pop
mov
mov
loop
push
push
aas
sub
pop
jp
mov
mov
push
sub
notb
push
add
cmp
fdivrl
mov
fabs
xchg
fsub
cmpsb
mov
sahf
adc
pop
imul
xchg
push
jle
ds
add
cmpsb
mov
imul
sub
sub
pop
jbe
mov
and
adc
imul
push
push
pop
lods
sbb
xchg
js
enter
sbb
mov
hlt
call
loopne
add
push
inc
jmp
xor
sbb
sbb
int
in
dec
push
pop
inc
sbb
dec
iret
adc
and
xor
sub
add
pop
sbb
icebp
pop
xlat
popf
fisubrs
cmovb
pushl
pop
in
ret
mov
inc
add
add
ss
sahf
repnz
daa
xor
mov
push
sti
xchg
xchg
mov
xchg
and
sub
jle
jl
jg
popf
out
xor
xor
mov
jecxz
shlb
xor
add
push
mov
fstl
jmp
stc
jle
add
lret
push
shrb
sub
fildll
adc
aas
xor
pop
nop
pop
inc
add
fs
idivb
loope
mov
mov
mov
je
add
or
adc
repz
mov
adc
add
mov
outsl
nop
mov
mov
xor
add
or
ret
pop
fdiv
cld
jno
inc
loopne
push
adc
mov
mov
aam
add
pop
aad
xor
loop
dec
push
push
add
inc
xchg
hlt
xchg
mov
dec
jo
loope
xor
xchg
pop
stos
insb
test
icebp
adc
insl
mov
out
pop
mov
ljmp
lock
bound
lods
test
jp
sbb
push
lret
out
fdivs
sbb
lret
mov
fimull
xor
aas
or
cmpsl
mov
aam
cmp
cs
mov
dec
in
cmpsb
fnstcw
ja
add
in
stos
jecxz
add
jno
or
jb
daa
mov
inc
push
sub
addb
push
scas
mov
add
ljmp
xchg
pop
je
and
lret
add
lds
mov
pop
push
negb
inc
add
fisttpll
add
inc
add
mov
fsubr
imul
inc
add
movsl
andl
stc
cmp
xor
sahf
sub
addb
in
movsl
sbb
nop
out
aad
sarl
testb
loop
push
add
cli
loope
sub
rcrb
rcrl
rorl
sbb
inc
add
popa
addb
add
add
stos
dec
dec
jbe
pusha
add
xor
add
repnz
cwtl
roll
jg
clc
adc
add
push
pop
sub
clc
sub
aas
lret
jno
push
lcall
xor
ja
cmp
or
jl
sbb
sbb
sub
pop
jb
dec
mov
push
data16
fnstcw
lock
ja
add
