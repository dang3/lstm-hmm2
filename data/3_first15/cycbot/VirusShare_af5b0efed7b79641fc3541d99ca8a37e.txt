add
add
add
addb
or
or
or
or
or
or
or
or
or
or
or
fwait
fwait
fwait
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
in
in
in
in
mov
mov
mov
aam
add
add
add
cmpsl
cmpsl
cmpsl
cmpsl
and
and
and
and
and
add
add
adc
adc
adc
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
mov
mov
pop
jp
and
and
and
and
and
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
add
sub
sub
addb
addb
addb
add
div
div
div
div
div
div
div
div
neg
fsubrl
insl
insl
insl
add
ds
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
jne
jne
jne
xchg
xchg
xchg
xchg
add
enter
enter
enter
enter
enter
enter
enter
out
out
loop
imul
lock
add
rcl
rcl
mov
mov
mov
mov
mov
mov
mov
cmp
cmp
cmp
mov
mov
or
or
or
or
or
or
or
add
add
sbb
ds
jmp
dec
dec
dec
dec
dec
test
test
test
test
test
test
test
jne
jne
jne
jne
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
mov
mov
and
outsl
mov
mov
mov
cmpsl
cmpsl
cmpsl
jp
jp
jp
jp
jp
jp
fidivs
jb
jb
jb
or
or
or
or
or
or
or
or
or
add
add
mov
add
add
add
les
add
add
loop
add
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
add
add
fidivs
je
je
je
add
add
ret
ret
mov
pop
pop
add
add
add
data16
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
add
add
add
arpl
add
add
add
add
les
data16
data16
data16
add
xor
xor
jg
jg
add
add
mov
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
in
pop
pop
mov
mov
mov
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
add
es
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
fwait
fwait
fwait
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
add
or
or
or
or
or
or
pusha
pusha
pusha
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
add
add
add
push
push
push
push
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
add
add
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
aam
or
mov
mov
mov
mov
ss
ss
dec
dec
add
add
add
div
div
div
div
add
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
ja
ja
add
add
add
flds
add
push
push
push
push
push
add
add
add
add
adc
adc
adc
adc
add
add
ja
ja
ja
ja
pushf
pushf
pushf
pushf
jb
scas
scas
scas
scas
scas
scas
scas
scas
scas
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
in
in
in
in
adc
adc
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
test
cmp
cmp
cmp
cmp
cmp
cmp
vpminsw
ljmp
ljmp
add
add
add
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
add
adc
adc
adc
mov
mov
mov
xor
xor
mov
add
add
repnz
out
push
push
add
add
add
add
add
add
add
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
jb
jb
jb
jb
jb
mov
mov
mov
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
add
add
add
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
lea
add
leave
leave
leave
add
add
add
add
sbb
sbb
sbb
sbb
fs
mov
mov
mov
mov
mov
rcl
shl
jecxz
jecxz
out
out
out
out
out
out
out
out
out
out
out
out
pop
pop
pop
add
add
add
ja
add
add
add
sub
jmp
jmp
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
in
in
in
in
in
in
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
add
fstps
popf
popf
popf
popf
popf
popf
popf
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
sub
lods
lods
lods
lods
lods
lods
lods
lods
xchg
xchg
xchg
jecxz
jecxz
jecxz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fs
mov
mov
loop
loop
loop
loop
jns
jns
jns
jns
jns
jns
repnz
fcomp
fsubs
add
add
jbe
add
add
add
add
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
test
test
test
test
push
push
push
push
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
sbb
sbb
add
data16
xor
xor
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
adc
adc
adc
adc
pop
pop
pop
pop
pop
pop
jo
jo
sbb
sbb
sbb
fcmovu
fcmovu
fisubrl
push
push
push
push
push
sub
sub
sub
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
xchg
wbinvd
or
or
or
or
xchg
xchg
xchg
add
mov
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
add
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
add
inc
pop
pop
pop
and
and
and
and
and
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
fcmovu
fiaddl
add
xchg
int3
int3
int3
int3
or
or
or
or
push
push
and
and
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
push
push
push
push
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
data16
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
in
in
in
in
in
in
in
in
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
mov
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
insb
insb
out
out
out
out
out
out
out
xchg
loope
loope
loope
loope
pop
pop
pop
xchg
xchg
xchg
xchg
xchg
xchg
jns
jns
jns
jns
jns
jns
jns
jns
jns
pop
pop
pop
add
sub
sub
sub
add
push
push
push
push
add
inc
inc
inc
inc
inc
inc
inc
adc
adc
filds
jb
jb
jb
jb
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
je
je
je
xor
xor
xor
xor
xor
xor
xor
add
add
mov
mov
mov
les
dec
dec
dec
dec
dec
dec
push
push
push
push
push
xchg
add
add
addl
test
scas
scas
mov
lock
lock
lock
lock
add
adc
adc
add
add
add
rcl
rolb
add
xchg
xchg
xchg
xchg
es
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
sar
add
mov
mov
mov
mov
mov
ja
push
push
adc
adc
adc
adc
adc
test
test
test
test
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
gs
gs
gs
gs
gs
add
add
push
push
push
push
push
push
push
push
push
mov
add
add
add
iret
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
int
int
int
ret
add
call
call
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sub
sub
cmpsl
cmpsl
cmpsl
push
push
push
push
push
push
push
push
push
push
push
push
push
bound
bound
bound
bound
bound
bound
bound
bound
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
mov
or
or
or
or
or
or
or
or
or
or
or
or
ljmp
ljmp
ljmp
mov
mov
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
out
adc
adc
adc
adc
adc
add
add
add
jo
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
div
div
div
div
div
div
div
div
div
div
div
div
div
div
notl
test
test
test
test
test
sbb
add
add
insl
insl
insl
insl
insl
insl
insl
insl
test
add
add
sti
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rcl
rolb
add
add
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
scas
cmp
cmp
cmp
cmp
cmp
jae
jae
jae
mov
sbb
sbb
js
js
js
or
or
or
or
or
or
or
inc
inc
inc
inc
inc
sahf
sahf
sahf
sahf
sahf
adc
adc
adc
sub
addb
fs
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
cld
or
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
add
pop
pop
mov
mov
push
push
push
push
push
push
push
push
push
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
mov
mov
cmp
add
fcmovnu
fcmovnu
fstpt
jle
jle
jle
sbb
cmp
cmp
cmp
cmp
cmp
jle
jle
jle
cmp
cmp
cmp
cmp
xchg
xchg
xchg
sub
sub
sub
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
jne
jne
jne
jne
jne
jne
jne
pop
pop
pop
movsl
movsl
movsl
movsl
movsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aad
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
daa
daa
daa
daa
daa
daa
daa
daa
add
add
add
add
sbb
sbb
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
add
add
inc
inc
inc
inc
inc
inc
add
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
addl
addl
addl
addl
add
add
xor
lock
pop
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
test
xchg
xchg
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
ds
test
test
add
add
lahf
lahf
lahf
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
iret
iret
and
lea
fcomp
fcomp
mov
mov
mov
mov
mov
mov
mov
mov
push
push
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
addb
addb
jle
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
mov
mov
lret
lret
lret
lret
lret
lret
or
or
or
or
or
or
or
cmp
stos
stos
add
add
add
add
fcomp
fdivrs
jle
jle
jle
jle
jle
jle
jle
jle
add
add
ds
jg
jg
jg
jg
jg
jg
jg
jg
jg
add
loope
mov
mov
mov
mov
mov
add
add
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
mov
mov
mov
mov
aaa
aaa
aaa
add
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
and
and
and
lcall
mov
mov
jge
mov
mov
test
test
test
test
test
test
test
test
test
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
add
sub
sub
sub
div
div
div
div
div
in
in
in
in
sub
sub
and
add
add
mov
mov
mov
mov
jo
jo
jo
jo
jo
jo
jo
div
div
div
div
neg
fisttps
mov
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
adc
adc
adc
adc
adc
adc
adc
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
data16
data16
add
add
cs
cs
into
into
into
into
into
into
into
into
into
into
into
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rolb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
and
and
and
lret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
rcl
rcl
rcl
rcl
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
repz
push
push
push
push
push
push
push
push
push
push
push
push
fadd
rolb
adc
test
imul
imul
imul
adc
adc
adc
adc
adc
adc
adc
adc
into
into
into
into
into
into
into
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
pop
adc
adc
adc
adc
adc
adc
xor
xor
xor
cwtl
fstp
fstp
fstp
arpl
arpl
arpl
arpl
arpl
add
add
add
adc
adc
adc
adc
aad
aad
aad
aad
rcl
rcl
rcl
rcl
add
into
into
into
into
into
into
into
into
into
into
into
into
into
rcl
rcl
rcl
rcl
rcl
add
test
add
add
add
fs
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
je
je
add
out
add
add
add
adc
adc
gs
div
div
div
div
negl
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
addb
mov
mov
mov
fstp
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
ja
ja
ja
ja
ja
ja
adc
adc
daa
daa
daa
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
and
and
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
clc
clc
gs
add
sub
scas
scas
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
jecxz
jecxz
jecxz
mov
mov
bound
bound
bound
bound
bound
bound
bound
bound
bound
xchg
add
add
add
push
lock
lock
pop
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
xchg
xchg
xchg
xchg
xchg
xchg
loope
loope
push
add
repz
add
add
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
mov
mov
add
sub
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
sub
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
call
call
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jns
test
test
dec
dec
mov
mov
je
je
je
je
aaa
aaa
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
xchg
xchg
add
add
inc
and
and
and
and
and
and
sbb
ljmp
add
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
test
test
pop
mov
mov
mov
mov
lcall
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
ds
push
push
push
push
add
add
add
cld
cld
cld
cld
cld
cld
cld
cld
adc
adc
jmp
xchg
xchg
xchg
xchg
xchg
mov
mov
sbb
sbb
sbb
sbb
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
pop
pop
pop
pop
pop
mov
fwait
fwait
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
fcmovnu
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
add
add
stc
stc
stc
stc
stc
fildll
outsl
outsl
outsl
outsl
outsl
outsl
ret
ret
ret
ret
ret
add
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sub
sub
sub
sub
sub
jnp
jnp
jnp
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
add
add
push
push
push
add
add
adc
adc
adc
sub
sub
call
call
call
call
call
scas
add
mov
into
into
into
into
popa
popa
popa
popa
jmp
add
add
add
add
call
aam
aam
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
aam
aam
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
rol
imul
imul
imul
imul
imul
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
fldcw
imul
mov
mov
mov
mov
lret
lret
lret
add
push
push
add
add
jg
add
add
add
add
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
in
in
in
in
in
in
in
in
in
in
in
add
add
add
xlat
fwait
test
test
mov
mov
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
in
jp
jp
jp
jp
jp
jb
jb
jb
jb
jb
add
add
add
jo
jo
jo
jo
jo
jo
jo
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rolb
add
add
add
add
rol
rol
rol
rol
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
leave
leave
mov
and
and
and
and
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
or
or
push
push
push
push
push
arpl
arpl
arpl
arpl
arpl
arpl
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
add
jge
jge
jge
jge
jge
jge
jge
jge
rcl
rcl
rolb
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
in
in
in
push
push
push
push
push
push
push
popf
popf
popf
popf
add
xchg
add
std
std
std
std
std
std
std
std
std
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cld
add
mov
mov
xchg
xchg
xchg
xchg
xchg
add
add
sbb
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
cs
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rol
out
out
out
out
mov
mov
mov
mov
mov
mov
mov
mov
add
jl
jl
jl
jl
pop
pop
pop
sbb
sbb
loope
loope
loope
loope
lock
lock
hlt
hlt
hlt
hlt
hlt
hlt
hlt
test
adc
adc
adc
adc
adc
adc
adc
test
add
add
add
add
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
jge
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cli
cli
cli
cli
pop
pop
pop
mov
popa
popa
dec
dec
dec
dec
dec
dec
mov
mov
add
add
pop
pop
pop
pop
pop
pop
pop
add
xchg
xchg
xchg
add
add
add
les
add
add
repz
repz
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
test
test
test
test
div
div
add
test
and
add
test
add
ljmp
pop
cmp
mov
pop
call
add
push
or
add
cmp
push
ror
mov
add
dec
aas
inc
sub
add
test
add
jno
imul
sbb
leave
lahf
je
sbb
pop
leave
clc
cmp
enter
sub
add
setl
push
xlat
inc
dec
mov
sbb
icebp
sub
add
xor
sti
inc
cwtl
aaa
enter
adc
add
dec
shll
add
add
mov
add
subl
add
jns
cmpsl
adc
add
outsl
cmp
scas
in
mov
pop
popa
fistpl
and
and
add
in
add
fcoms
clc
sbb
into
mov
fstp
aam
cmpsl
push
add
outsl
sti
xor
leave
lret
into
das
fwait
div
sbb
dec
icebp
shrb
add
mov
repnz
repz
addb
addb
clc
popa
jecxz
ret
add
mov
add
cmpsb
add
xor
scas
push
scas
add
ja
cmp
notrack
add
mov
jb
add
mov
mov
add
sub
mov
add
mov
mov
add
push
mov
cmp
daa
dec
jae
inc
imul
bswap
jl
push
xchg
fwait
pop
jb
add
ret
lds
sub
inc
pusha
cli
push
pop
cmp
push
push
or
dec
mov
add
mov
adc
push
jae
or
test
loope
pop
adc
mov
enter
add
mov
add
inc
test
add
mov
mov
xchg
and
add
mov
add
testb
inc
xchg
add
aas
add
ret
add
inc
fwait
xlat
push
test
jb
std
sbb
dec
dec
lcall
xchg
lahf
outsb
jns
lods
add
mov
add
add
mov
jbe
add
dec
sub
inc
xor
stos
add
mov
das
je
xor
add
clc
fdivrl
stos
add
pop
or
add
and
adc
add
cmp
std
add
add
dec
dec
push
repnz
mov
lret
add
cmp
add
sti
test
push
cmp
insl
cmp
addb
jb
js
imul
sbb
add
pop
push
jecxz
add
jb
inc
mov
mov
stos
lcall
add
add
hlt
out
cmp
sbb
mov
push
add
test
add
mov
add
cmpsl
addb
enter
jge
add
aas
int
jge
stc
in
jmp
out
xchg
lea
jle
ret
pushf
adc
add
cld
sbb
stos
add
add
add
add
inc
rcr
jg
popf
sub
daa
loope
pop
sbb
jge
fs
into
ret
adc
iret
pop
sub
jo
cmpl
cld
push
xchg
and
add
push
mov
add
xor
mov
jmp
inc
das
and
add
pop
out
sub
add
or
add
icebp
call
ja
outsl
sub
pop
jg
addb
jp
and
add
iret
jae
add
outsl
inc
adc
mov
mul
aaa
shll
xlat
outsb
add
add
cmp
or
int
mov
fiadds
mov
add
jl
add
mov
add
cli
jg
add
inc
inc
bound
add
repnz
icebp
mov
add
add
out
jl
add
stos
push
jo
aam
add
adc
aam
push
jnp
test
repz
mov
add
lds
mov
add
insb
jae
push
push
pop
mov
cmp
in
pushf
test
add
cmc
arpl
add
les
movsw
push
add
sbb
bound
add
movsl
sub
add
add
sub
jle
rcrl
cmpl
mov
mov
lods
add
insb
jb
mov
mov
ljmp
imul
subl
add
sbb
repz
sub
add
loop
push
aam
dec
or
add
int
test
pop
adc
rorl
add
popf
mov
fsubrp
pop
xchg
cmp
jle
jnp
add
mov
or
add
decl
cwtl
push
inc
cmpl
xchg
clc
xchg
sahf
adc
fnsave
push
fwait
add
insb
jecxz
stos
ret
fs
outsl
scas
paddsw
rorl
push
lds
xchg
pop
xchg
data16
aad
add
leave
push
addb
jl
lods
inc
lcall
jmp
icebp
mov
jge
daa
je
cld
pop
imul
dec
dec
lds
add
mov
jg
mov
out
and
fnstenv
fcoml
jge
add
jle
data16
mov
pop
mov
cmp
add
shll
and
add
outsb
xor
pop
cmc
jge
add
fldenv
popf
lods
add
scas
aas
popf
and
out
insl
stc
push
add
stos
xchg
fistpll
sub
add
add
cmpsl
negb
add
iret
fstps
rol
enter
mov
mov
leave
shl
add
add
movsl
inc
adc
inc
shlb
imul
rcll
rclb
mov
repnz
pushf
pop
jns
mov
mov
xor
add
mov
mov
je
lea
jecxz
mov
add
add
dec
pop
or
add
push
cmc
sub
add
xlat
fdivrs
sahf
pop
mov
and
in
pop
addb
xchg
dec
lret
push
mov
adc
int
push
leave
addb
mov
xor
adc
insb
and
inc
or
cmp
sbb
adc
jo
fs
movsb
add
jnp
arpl
add
dec
loope
in
add
add
std
call
cmp
sub
add
aad
ret
inc
mov
add
daa
shrl
icebp
rcrl
mull
addb
add
add
push
or
add
jl
loopne
xchg
add
mov
cwtl
or
add
adc
movsl
sbb
shl
rcr
jmp
add
cmpsl
cmp
xor
jmp
or
mov
mov
ja
add
std
cmp
mov
testl
sbb
call
adc
call
repz
xchg
add
outsb
xchg
mov
test
jbe
push
add
or
addb
int
shl
pop
sub
push
add
inc
dec
or
add
ret
add
push
add
push
pop
push
add
scas
jge
mov
mov
loope
outsl
inc
or
add
pop
jne
sub
add
sub
add
cmpsb
add
jg
add
jo
inc
jb
add
sub
inc
or
add
repnz
xor
test
add
sbb
add
aaa
cmpsb
add
in
xlat
add
pop
out
orl
or
mov
mov
orl
fdivl
pop
out
jno
and
add
test
add
pop
pop
mov
add
inc
and
add
add
add
imull
int
ja
decb
cld
and
lret
dec
sub
add
into
stc
push
out
testb
add
cmc
sub
push
add
inc
and
add
scas
lock
add
mov
add
lret
add
push
sub
add
add
or
add
fstpt
test
add
ja
jmp
mov
jmp
ss
cmp
iret
xchg
add
fmull
dec
mov
cmp
push
out
and
add
sbb
xchg
fistl
dec
insb
test
scas
add
mov
add
outsb
subl
fcoml
jb
inc
add
add
aam
fnstenv
cmp
jae
fwait
cli
mov
push
jne
scas
rolb
inc
push
add
dec
cmp
jecxz
add
mov
add
pushf
add
add
push
pop
fwait
repnz
dec
insl
test
add
mov
sub
add
jo
and
add
add
call
add
xchg
xchg
or
add
testl
cli
cli
xchg
ss
or
add
int
mov
scas
add
cmp
mov
test
mov
lods
and
xor
add
add
add
adc
divl
cwtl
push
add
xchg
aaa
sbb
push
add
dec
jle
mov
dec
pop
insl
pop
out
bswap
jecxz
ret
aaa
and
add
subl
lret
mov
popa
clc
xor
cli
sti
xchg
jl
sti
movsb
add
dec
loop
fcomps
jp
and
jne
cmc
pop
and
add
sbb
pop
cmp
movsb
add
push
scas
add
mov
push
cli
fmulp
add
add
mov
sbb
or
movsl
add
addr16
leave
sbb
add
cld
sbb
sub
add
add
insl
sub
add
repnz
lret
or
add
fnstsw
je
dec
mov
addl
add
arpl
cmp
jbe
xor
jl
dec
cmp
and
push
and
add
insb
or
jmp
sub
push
jmp
add
pop
fildl
stc
sahf
push
mull
xchg
rcl
faddl
add
enter
pop
pop
ret
movsl
mov
popf
or
jbe
add
test
add
stos
push
ret
pop
jl
cmpsl
enter
mov
add
ja
add
dec
sbb
xlat
inc
pop
mov
push
adc
pop
mov
and
add
inc
pushf
push
add
xor
add
pop
mov
rcrb
cli
mov
mov
add
in
je
imul
add
out
loope
sbb
std
xor
add
movsb
add
push
inc
mull
ficompl
mov
add
mov
call
out
cli
rcr
mov
test
add
or
add
cltd
aad
mov
add
or
jge
push
xor
jg
add
repnz
outsl
mov
add
ret
mov
ljmp
inc
lea
sbb
les
add
movb
mov
add
arpl
add
lods
add
or
or
push
out
ffreep
outsl
popf
mov
add
cld
jae
xchg
sub
add
xorl
xchg
aas
or
add
jb
fisubl
add
cmp
repz
add
adc
sbb
sbb
cmp
xorl
out
addb
mull
aas
and
add
rolb
sub
add
daa
and
jge
les
fstl
in
movsb
add
data16
repnz
cmp
sbb
nop
xchg
add
pop
or
add
fildl
nop
mov
mov
lcall
data16
arpl
mov
div
ret
add
xchg
repnz
aad
mov
sub
xchg
add
add
mov
js
xchg
scas
add
inc
ret
add
imul
rorl
fiaddl
cltd
xor
dec
pop
mov
add
xchg
addb
and
add
add
insb
pop
ret
adc
cmp
xchg
mov
sbb
xorl
int3
movsb
add
mov
rcl
jns
mov
sarl
add
inc
lcall
push
add
movsb
add
dec
push
add
dec
mov
outsb
sahf
ret
add
cmp
adc
jno
shll
jbe
mov
mov
jno
sbb
ljmp
adc
add
cld
xchg
popa
adc
mov
add
loope
cli
mov
lds
add
stos
jne
adc
cli
jb
addr16
testl
outsl
jl
add
pop
mov
int3
jg
mov
add
clc
push
fs
in
movsb
add
and
out
push
out
jno
add
pop
xlat
push
sub
add
or
add
cmp
add
out
iret
fists
leave
jg
rcl
repnz
cmp
call
mov
or
test
add
add
cmp
add
add
add
pop
dec
insb
loope
faddl
pop
sub
add
add
cmp
add
adc
mov
add
mov
lods
add
jge
jmp
test
fidivrs
and
add
mov
add
ss
aaa
out
sbb
dec
ffreep
mov
add
repnz
jno
mov
push
push
adc
pop
popf
mov
add
inc
enter
leave
add
add
mov
add
add
sbb
add
inc
push
dec
push
add
loop
fcomps
ret
stc
loopne
mov
add
ljmp
or
add
fidivs
cmp
pop
leave
dec
sahf
jno
adc
sahf
dec
mov
add
and
loope
mov
orl
scas
cmp
test
add
fnstcw
jns
cld
lret
fisubl
add
sub
add
inc
icebp
into
pop
mov
imul
mov
jb
mov
sbb
shlb
jecxz
xor
js
add
pop
iret
shrl
jnp
mov
push
add
imul
push
sub
add
cmp
rclb
add
sub
add
jmp
jmp
pop
pop
mov
xor
fwait
inc
adc
imul
dec
inc
cmpsb
add
or
mov
icebp
sti
inc
inc
lret
push
add
add
outsb
in
ljmp
push
pop
sbb
int3
inc
and
add
sbb
fsts
mov
std
and
add
dec
das
jae
pop
cmp
out
push
jmp
mov
shrb
stc
xor
imul
push
add
call
popa
arpl
sbb
aaa
inc
lock
add
ds
add
out
mov
divb
and
add
add
jg
jmp
jo
addr16
mov
add
mov
add
pop
mov
add
add
nop
pop
lods
add
or
add
ret
add
in
inc
cltd
inc
idivl
repz
push
and
add
add
sbb
inc
jg
dec
jnp
jbe
ret
imul
cmpsl
ds
sub
add
fnstsw
cmp
add
add
inc
inc
fdiv
iret
push
sbb
stos
and
add
imul
add
gs
mov
out
lret
add
sbb
add
sub
nop
mov
xchg
cmp
or
add
mov
mov
add
fistpl
xor
add
mov
add
in
add
xchg
xchg
shrb
mov
daa
out
mov
add
fstpl
lahf
jg
in
inc
cli
cwtl
xchg
sub
add
in
sub
dec
xchg
in
sahf
rorb
in
mov
add
stos
add
mov
in
cmp
addb
jns
mov
pcmpgtb
insb
lods
adc
in
cmp
pop
ljmp
jbe
and
add
into
mov
negl
push
add
pop
sub
add
add
xchg
ja
nop
and
xchg
popa
jl
adc
cmp
mov
add
add
add
cld
xchg
cwtl
cltd
imul
add
jns
dec
xchg
add
fsubrl
shll
add
add
add
enter
imul
add
xchg
arpl
outsl
loopne
lock
add
add
movsb
add
push
in
ja
fidivrl
add
add
sbb
jg
enter
sub
add
push
add
mov
add
push
test
js
and
jle
mov
addl
loopne
add
push
jmp
aad
in
adc
loop
pop
push
sti
mov
add
add
pop
sub
add
sub
test
stc
jb
rolb
leave
jg
mov
mul
out
jecxz
add
ret
stos
add
adc
jg
add
xchg
fwait
dec
cmpsl
inc
adc
sbb
push
sub
pop
cmp
jle
jecxz
inc
test
rolb
xchg
or
add
icebp
lahf
addb
ljmp
loopne
add
mov
cmp
and
out
dec
out
and
add
rol
das
cmp
jmp
mov
add
add
arpl
add
les
popa
sub
add
lret
hlt
sti
dec
add
mov
add
insl
inc
cmpsl
clc
scas
lret
adc
add
sub
dec
push
and
jns
dec
das
mov
mov
add
add
cmp
loop
scas
mov
ds
xor
popa
addb
xchg
ss
pop
mov
insb
pop
inc
lret
xchg
add
add
and
daa
cmp
fbld
out
inc
jmp
fistpll
aam
adc
xchg
xchg
lods
push
not
mov
iret
lcall
xchg
daa
cmp
add
sbb
xor
add
aas
fwait
orl
add
cmp
fcoms
das
push
popf
popl
je
addb
js
xchg
cltd
enter
xchg
inc
mov
add
mov
testb
inc
mov
push
push
std
or
add
pop
movsb
add
movsb
add
mov
add
and
add
decl
pop
jp
push
inc
dec
repnz
or
add
add
cmp
shr
pop
stos
add
inc
sbb
xlat
xchg
repz
add
xchg
xor
mov
mov
loope
popa
dec
pop
inc
imul
add
repnz
jae
add
outsl
mov
add
xor
add
mov
jp
or
iret
iret
dec
push
mov
sub
call
ss
xchg
test
add
loope
push
ss
stos
dec
jmp
add
aad
out
and
add
les
loop
or
add
bound
xor
mov
add
pop
sbb
dec
jmp
repnz
into
sahf
add
ret
daa
jae
adc
and
add
jl
add
in
inc
mov
xchg
push
jl
mov
adc
sub
add
push
pop
clc
jo
xor
addb
mov
xlat
sti
jmp
add
cmpsb
add
dec
xor
testl
jge
add
test
imul
rolb
divl
sarb
or
add
xor
iret
cmp
jne
loope
xor
in
addr16
mov
iret
or
and
add
dec
ds
ds
aam
add
hlt
popa
aam
ds
add
xchg
mov
add
add
dec
popa
cmp
cmc
fwait
cmp
add
push
paddw
sbb
rcrb
das
dec
mov
js
popf
dec
js
in
mov
add
add
add
lret
pusha
jnp
stos
mov
repz
add
addb
push
add
add
adc
add
add
cmpsl
ret
push
xchg
lds
adc
mov
add
shll
mov
add
cmp
mov
dec
popf
out
xor
ror
insb
stc
mov
inc
fstpt
lods
add
stc
adc
or
add
sbb
pusha
xor
add
push
mov
add
rcll
add
add
repz
outsl
lret
sbb
mov
movsb
add
pop
cmp
push
inc
insl
lret
add
rorl
add
in
adc
jmp
inc
push
add
aad
jmp
inc
in
fcompl
xor
or
add
lods
add
mov
add
add
add
push
xchg
jbe
push
call
dec
iret
icebp
cmc
icebp
idiv
push
or
add
int3
push
add
fcmovnb
shrb
scas
pushf
movb
add
out
push
adc
add
or
add
sub
and
in
mov
das
inc
push
push
repz
mov
inc
lcall
jbe
dec
lcall
dec
xchg
sub
add
add
adc
mov
add
movsl
fidivl
add
pusha
pop
xchg
or
add
xor
mov
add
xor
neg
jmp
xlat
fisubrs
add
rcrb
cmp
add
addb
xchg
add
inc
mov
push
outsl
fstl
test
cli
fwait
cmp
dec
cmp
add
add
mov
movsl
lret
insb
or
lcall
test
add
rcrb
xchg
dec
lahf
mov
dec
jmp
add
adc
into
ja
add
add
xor
add
mov
pushf
inc
xchg
dec
jb
cmp
jmp
dec
push
or
in
add
out
sbbl
lcall
add
in
stc
lds
aaa
jns
in
cmpsb
add
outsl
jbe
add
or
inc
sar
xchg
push
cmp
out
mov
add
jnp
out
dec
xor
bound
add
sub
add
rcl
push
xor
mov
add
jmp
arpl
or
gs
fimull
out
stc
dec
loope
hlt
push
pop
sbb
dec
jns
add
test
sub
add
addb
xchg
outsb
shlb
lea
and
loope
movsb
add
cli
xchg
pop
and
dec
sarb
imul
dec
mov
iret
add
inc
mov
inc
pop
sub
add
add
xor
int
or
add
add
xor
mov
shrb
push
xchg
add
lods
add
sub
add
lds
imul
cmpsl
and
add
add
out
cmpsb
add
popf
fstpt
cwtl
xchg
punpckldq
ja
cmp
cmpsl
ljmp
xchg
adc
xor
add
inc
fldt
mov
inc
inc
push
mov
add
test
add
out
test
push
out
stos
pop
lahf
xor
mov
add
push
lret
daa
xchg
add
loop
push
add
repz
add
add
push
pop
cld
mov
adc
jb
mov
add
ror
mov
add
int
add
xor
ja
pop
lods
add
inc
sbb
jnp
jo
xlat
adc
push
add
and
ret
fst
lods
mov
mov
imul
add
add
add
movsb
add
mov
nop
stos
add
mov
add
into
push
add
and
add
lock
cli
dec
push
push
sub
add
ljmp
jl
jmp
push
add
push
jne
dec
adc
fcmovbe
bnd
mov
add
cli
jmp
fsubs
add
insb
push
lods
add
push
sbb
cmp
fistpl
push
adc
lcall
push
xor
test
into
scas
jnp
sub
and
add
xor
jp
jl
outsl
mov
mov
add
fucomi
pop
fs
push
int3
mov
mov
iret
pop
test
add
mov
and
dec
lods
add
lahf
repnz
cmpsb
add
lret
in
xor
lret
xor
sbb
jle
repnz
jb
push
jb
mov
add
scas
pop
add
add
icebp
loop
and
leave
jmp
sbb
xor
rorl
lcall
movsl
inc
and
add
icebp
loopne
dec
pusha
xchg
out
jg
fcomp
add
add
je
dec
add
sarl
fcoms
add
fwait
jo
push
pop
data16
add
pop
or
addb
xchg
dec
mov
adc
out
jmp
or
sbb
sub
add
stos
popa
out
inc
inc
hlt
mov
pop
mov
js
push
pop
fimuls
add
movsb
add
mov
mov
jge
ret
cmp
mov
add
mov
add
aad
sub
add
adc
push
lret
add
sub
add
sub
loope
inc
icebp
addl
fistpll
push
sub
add
repnz
add
out
xor
inc
addb
or
add
or
std
xor
int3
fdivs
jecxz
add
xlat
pop
out
mov
xor
movsb
add
cmp
xor
sahf
xorl
add
out
stos
add
push
cmp
cwtl
cwtl
jle
movsl
hlt
mov
rcrb
add
stc
mov
rol
xor
xchg
add
or
aaa
lret
jl
cmp
add
add
push
js
add
adc
sub
add
pop
lret
ret
add
flds
push
cmp
add
out
xchg
out
push
push
data16
pop
sahf
popf
mov
call
and
add
in
push
stc
pop
cmp
mov
in
sar
stos
xchg
push
xor
add
and
call
add
sub
add
cmp
push
loope
std
inc
out
ror
out
push
xchg
mov
andl
mov
jns
inc
imul
add
into
xchg
add
add
js
xchg
sub
add
test
add
fstpt
add
jp
imul
fstpt
ffreep
adc
pop
sahf
push
xchg
lret
and
and
cmp
pop
daa
or
mov
mov
add
sbb
adc
aad
cmp
lock
rcrb
mov
add
sbb
mov
add
push
push
and
xchg
aaa
addb
aam
add
add
bound
lret
sbb
int
push
popa
add
add
add
movsl
add
jge
adc
cmp
stos
add
enter
and
call
add
add
pop
sub
or
ret
add
push
xor
jmp
dec
jne
arpl
ds
pop
imul
mov
pusha
jl
pop
mov
pop
inc
xor
dec
cltd
mov
push
or
add
std
jbe
pop
sbb
ret
jae
movsb
add
js
push
fsubrl
add
sub
add
icebp
inc
arpl
push
push
add
loop
mov
fcmovbe
dec
push
push
push
add
mov
add
loope
out
cmpsl
ret
sub
push
mov
mov
sub
movl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
and
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
and
jne
call
rorb
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
pop
pop
fcomip
shl
cmp
adc
add
jp
ror
xor
ljmp
outsl
lcall
mov
test
add
inc
add
cmp
testb
xchg
addb
mov
add
jge
fcomip
movl
das
loop
sbb
popaw
icebp
inc
cmp
js
inc
in
xchg
out
xchg
pop
cmpsb
add
mov
fs
fdivs
outsl
inc
mov
mov
mov
sub
add
adc
ret
cmp
add
xor
and
add
add
imul
inc
cmpsb
add
nop
mov
add
nop
lea
inc
dec
stos
imul
add
add
sahf
pop
fs
je
add
mov
add
mov
add
sub
add
les
outsl
shll
lods
mov
add
sub
mov
sub
dec
push
std
cltd
ficoml
push
lret
push
cmp
xor
add
fistps
sbb
mov
add
testl
sub
add
pop
stos
add
inc
scas
add
addb
outsl
dec
push
fisubs
sub
addl
add
dec
in
rolb
add
movsl
mov
add
lods
and
add
sbb
sub
add
sub
add
add
add
cli
loop
sub
jae
loope
or
out
add
jno
fs
xor
jmp
cmp
add
pop
icebp
daa
pushw
add
sub
leave
lock
add
add
add
and
adc
push
jecxz
sub
add
add
push
les
mov
dec
fidivrs
iret
ror
ljmp
mov
xor
add
lcall
add
xchg
mov
add
scas
add
out
rol
dec
lcall
cmp
add
addl
mov
test
inc
or
dec
popf
push
or
mov
int3
sub
dec
or
add
lcall
or
add
jmp
adc
ljmp
xor
pop
mov
outsb
mov
add
sub
add
xlat
add
add
sub
add
add
test
add
inc
stos
cmpsb
add
sbb
xchg
push
add
sub
add
mov
cmp
add
shlb
add
xor
add
add
jge
sbb
add
mov
fisttpll
or
add
add
and
add
or
add
fs
push
movsl
adc
pop
xchg
inc
jecxz
rorl
imul
icebp
pop
cli
add
add
sub
scas
add
leave
in
xchg
xchg
add
add
adc
out
jae
cwtl
adc
xchg
cmp
add
mov
mov
add
test
add
mov
add
addr16
ljmp
insb
leave
mov
add
rorb
add
pop
push
loopne
add
inc
ds
negl
xchg
adc
dec
fistpl
jnp
add
fsubl
or
aad
int
test
add
mov
mov
lcall
pop
repnz
mov
push
fimuls
pop
mov
xor
mov
mov
and
add
sub
add
lods
add
and
add
mov
lods
add
out
sbb
add
jp
ret
and
add
add
mov
and
mov
dec
or
add
sahf
into
gs
pop
xor
add
xchg
aas
lods
xchg
adc
mov
add
xchg
xchg
mov
addr16
mov
add
loopne
mov
dec
mov
mov
xchg
lea
jmp
add
out
mov
mov
add
mov
inc
mov
add
pop
call
add
into
loop
jb
mov
add
mov
add
inc
xchg
mov
call
pop
push
push
add
leave
jo
loope
xchg
add
lret
add
lahf
jae
leave
mov
add
addb
inc
and
fstl
movsb
add
test
add
rcr
sahf
mov
sbb
out
loop
sub
enter
dec
pop
sub
pop
jmp
in
sbb
add
push
dec
daa
push
lret
fsub
dec
setge
imul
lret
mov
pop
loope
add
mov
add
loop
xor
mov
add
and
add
add
xor
add
dec
iret
mov
sbb
jne
sub
add
movl
mov
dec
push
sub
gs
aas
rcll
pop
stc
nop
imul
add
ljmp
push
addb
jg
lds
add
sbb
cltd
jle
add
lods
add
fcoml
push
push
adc
push
popf
int3
xchg
insb
add
add
jp
mov
aas
adc
mov
add
daa
and
add
dec
cmp
push
mov
add
imul
insl
add
jns
pop
movsb
add
jge
add
jg
add
addr16
jp
xchg
jb
sbb
loop
cmpsb
add
lods
cmp
int3
int
add
jge
and
add
inc
mov
jmp
sbb
and
cmc
ret
cmpsb
add
push
add
mov
xor
add
xchg
call
push
mov
push
std
dec
mov
lods
mov
add
add
das
rol
neg
dec
je
xor
mov
jb
xor
and
add
add
inc
mov
add
cmpsl
fcmovu
push
add
sbb
add
adc
loope
enter
test
pop
dec
add
add
jb
call
hlt
dec
sbb
out
add
lods
cmp
cmp
loope
add
fidivrl
push
push
add
mov
shll
cltd
cmp
add
pop
lods
mov
and
add
je
ffreep
fstpt
dec
std
pop
xor
das
rcrl
add
xrelease
push
xchg
lahf
rorl
into
or
add
stc
mov
add
xchg
jbe
pusha
lods
scas
add
sbb
fs
add
xchg
push
add
shl
loope
add
add
push
sbb
inc
popa
xchg
inc
daa
cmp
add
push
add
add
push
or
add
add
leave
icebp
je
adc
je
add
mov
out
and
add
in
jne
mov
imul
add
stos
imul
lea
add
add
mov
add
shl
xorl
or
aas
xchg
sub
add
jle
rcrb
cmpl
add
cltd
xor
add
and
add
mov
mov
add
xchg
adc
add
push
adcl
cmp
push
jo
pushf
add
stc
or
add
sbb
mov
sub
xchg
das
addb
inc
loopne
mov
add
xor
add
adc
add
jg
pop
or
mov
jb
pop
cmpsl
xor
testb
sbb
add
push
jnp
push
add
out
xor
push
add
add
lock
add
mov
popf
cli
add
add
jnp
or
cmp
jb
add
dec
fidivrl
lahf
fists
cvtps2pi
bound
push
push
mov
push
ljmp
aas
and
add
flds
mov
add
rorl
jnp
fistpl
push
or
add
mov
loop
add
pop
xor
stc
lods
add
adc
mov
gs
inc
lock
shll
je
mov
add
add
cmp
out
mov
add
aam
call
pop
push
aam
add
pop
mov
add
fs
pop
mov
push
add
or
xor
dec
pusha
or
inc
ror
dec
lahf
cmp
cld
cmp
sbb
jmp
and
add
lcall
add
ljmp
fcomps
pop
ss
addr16
rorl
add
add
je
scas
add
add
add
cwtl
jnp
jle
test
add
ds
mov
popa
in
test
add
iret
dec
addb
cmp
scas
inc
scas
jp
add
pop
pop
fcoms
add
outsl
pop
notl
add
xchg
jg
xchg
mov
mov
jl
cld
sub
add
dec
add
add
mov
add
inc
ds
mov
in
and
sbb
mov
stos
ds
jg
fs
xchg
xor
add
lock
add
mov
lahf
lods
add
test
stc
pop
cmp
fisttps
scas
add
xchg
add
cmp
gs
mov
sub
add
add
add
cld
sub
add
addl
out
rclb
pop
push
inc
inc
pop
jge
into
or
add
out
int
inc
ds
loop
add
add
bt
test
add
sbb
cltd
dec
fs
pop
incb
xchg
lcall
je
mov
add
pop
push
scas
push
jg
ret
pop
push
add
call
mov
add
and
add
add
push
cmp
xor
cmp
add
ret
add
dec
call
repnz
insl
ret
rcrl
add
repnz
dec
imul
nop
sbb
add
jbe
stc
int
sbb
xchg
add
jge
out
adc
push
lods
add
pop
and
fstl
out
dec
fsubl
add
xchg
sbb
xchg
insl
pusha
sbb
mov
push
xor
rcll
add
add
inc
addb
cwtl
insb
and
add
dec
jg
aam
add
stc
add
cmc
out
addb
into
sbb
shll
in
in
lea
bound
add
xchg
sbb
cmc
movsl
addb
mov
in
jge
adc
pop
pop
push
add
sbb
pop
jns
call
aad
loope
and
add
iret
pop
xchg
push
out
mulb
and
add
sub
ds
jne
test
add
addb
mov
roll
add
lods
add
iret
adcl
scas
loop
mov
sbb
xor
and
add
xor
sub
add
mov
add
inc
fs
mov
pop
rcrl
mov
inc
je
ficoms
jns
dec
mov
add
daa
outsl
inc
dec
jno
jecxz
out
lret
inc
mov
cmpsl
jmp
mov
add
mov
add
lret
add
push
mov
mov
mov
jae
ds
fidivs
add
cmc
dec
test
add
addb
jecxz
and
add
xchg
hlt
outsb
popf
push
les
pop
add
add
in
roll
imul
push
xor
mov
fdivp
dec
ljmp
dec
aam
int3
fdivrs
dec
adc
add
loopne
push
jmp
push
xor
ficomps
adc
dec
out
and
imul
add
lods
pop
addb
decb
add
mov
push
xchg
popa
sbb
mov
add
push
xor
add
fnstenv
pshufw
outsb
mov
add
xor
xor
enter
mov
add
mov
add
push
add
loop
add
dec
mov
dec
sbb
xor
adc
xchg
jge
add
dec
call
pop
mov
mov
add
add
push
add
jecxz
add
das
ljmp
jmp
add
dec
popf
mov
cmp
xchg
add
ret
mov
inc
lahf
xor
mov
mov
add
iret
fdivp
pop
leave
lahf
jbe
jnp
cmp
mov
add
psllw
cwtl
push
mov
fstpt
jp
push
jnp
add
push
add
cmp
jmp
mov
cwtl
sahf
jl
lods
mov
cltd
sbb
cmp
pop
or
add
mov
add
add
and
add
mov
cwtl
jb
fisubrl
enter
ret
or
add
cmp
rorl
inc
je
add
insl
nop
ss
mov
add
add
mov
push
mov
leave
mov
sub
add
fs
pop
lods
rcll
cmc
cmp
or
add
int
movsl
outsl
add
add
add
sahf
imull
sub
xchg
pushl
xor
sbb
cmp
ljmp
add
data16
add
arpl
add
pop
mov
dec
arpl
add
lret
push
add
xor
mov
mov
subl
sub
push
stos
or
add
pop
cmp
mov
add
aas
in
outsb
and
add
jo
test
insb
xor
and
subl
cmp
jg
xor
jecxz
add
xchg
add
ret
daa
nop
sbb
sar
xchg
stc
dec
and
mov
dec
xchg
add
push
add
add
and
add
cmp
fiaddl
add
add
xor
cmp
fistps
pop
movsb
add
cltd
cld
push
nop
inc
xchg
mov
add
add
fdivrs
xchg
sub
add
mov
and
pusha
in
and
add
addr16
add
and
cmp
push
xor
aas
xor
sbb
in
fiaddl
pusha
sbb
out
outsb
gs
pop
imul
jmp
add
jle
loop
lock
add
test
add
push
push
mov
adc
adc
add
add
or
add
add
add
pop
arpl
fidivrl
mov
cmc
pop
xchg
add
addb
mov
lcall
pop
mov
or
adc
pop
aad
leave
repnz
call
push
cmp
mov
add
jl
add
repz
pop
shr
into
out
jp
jno
pop
mov
and
add
lods
add
jbe
lods
add
nop
popf
xor
add
add
clc
repnz
nop
nop
jae
scas
add
xchg
test
nop
push
mov
leave
nop
jmp
add
xlat
rolb
xchg
div
jmp
clc
pop
add
aaa
aas
fs
sub
push
xchg
fistl
iret
mov
xchg
ret
add
add
add
sar
repnz
nop
nop
jae
xor
add
add
add
add
and
add
xchg
clc
repnz
nop
nop
jae
stc
incl
add
add
add
repnz
nop
nop
jae
mov
xor
xor
mov
xchg
ret
xor
or
daa
rorb
lea
push
mov
xchg
ret
stc
lds
add
dec
add
clc
repnz
nop
nop
jae
add
fldl
add
iret
add
push
mov
xchg
ret
add
add
add
fistpl
push
mov
xchg
ret
add
add
clc
repnz
nop
nop
jae
add
add
fisubrl
jb
loop
xchg
push
mov
xchg
ret
popa
add
or
clc
repnz
nop
nop
jae
xorb
sarb
add
mov
das
xor
add
repnz
nop
nop
jae
incl
dec
popa
jns
inc
xor
add
addb
dec
xorb
add
add
mov
leave
nop
jmp
sbb
add
add
out
test
push
add
clc
repnz
nop
nop
jae
daa
or
mov
xchg
ret
add
push
push
xchg
add
das
xor
jne
nop
push
mov
leave
nop
jmp
add
fiaddl
rolb
repnz
nop
nop
jae
add
lds
sbb
push
clc
repnz
nop
nop
jae
rol
call
add
adcb
repnz
nop
nop
jae
add
add
add
add
push
clc
repnz
nop
nop
jae
add
sahf
fs
gs
clc
repnz
nop
nop
jae
lds
add
add
pop
sub
clc
repnz
nop
nop
jae
loopne
dec
add
add
roll
and
and
add
add
xchg
rclb
nop
jmp
or
add
add
repz
push
mov
xchg
ret
rorb
add
add
jb
daa
add
push
mov
leave
nop
jmp
stc
or
lret
fwait
clc
repnz
nop
nop
jae
add
loopne
xlat
stc
add
clc
repnz
nop
nop
jae
push
das
xor
sbb
in
leave
nop
jmp
daa
scas
add
mov
push
mov
mov
add
imul
jbe
add
nop
push
mov
leave
nop
jmp
pop
dec
add
sbb
dec
cmp
push
mov
leave
nop
jmp
xlat
cmp
add
fld1
clc
repnz
nop
nop
jae
xlat
rolb
add
add
sahf
mov
repnz
nop
nop
jae
dec
daa
dec
sbb
outsb
cli
stos
fld1
push
mov
xchg
ret
mov
add
sbb
in
leave
nop
jmp
add
add
add
shlb
aam
fld1
clc
repnz
nop
nop
jae
lds
add
add
pop
pop
clc
repnz
nop
nop
jae
add
push
shrb
repnz
nop
nop
jae
fiaddl
add
add
fs
adc
repnz
nop
nop
jae
add
sbb
dec
pop
lret
je
nop
push
mov
leave
nop
jmp
add
add
pop
push
mov
clc
repnz
nop
nop
jae
mov
add
dec
clc
add
icebp
inc
dec
es
repnz
nop
nop
jae
fimull
les
add
mov
clc
repnz
nop
nop
jae
movb
add
xchg
shrb
or
mov
xchg
ret
add
add
add
clc
repnz
nop
nop
jae
push
scas
aaa
add
add
add
iret
mov
clc
repnz
nop
nop
jae
add
rorb
and
sbb
repnz
nop
nop
jae
add
add
mov
nop
push
mov
leave
nop
jmp
lds
add
ds
push
movsb
push
mov
xchg
ret
add
sahf
add
add
xor
add
add
add
mov
clc
repnz
nop
nop
jae
add
sbb
or
add
jnp
popa
nop
push
mov
leave
nop
jmp
rolb
add
add
mov
add
add
repnz
nop
nop
jae
add
rorb
pop
nop
push
mov
leave
nop
jmp
add
add
adc
repnz
nop
nop
jae
aaa
pop
lcall
pop
or
push
push
mov
xchg
ret
add
add
xor
add
mov
xchg
ret
fiaddl
dec
or
add
cmp
repnz
nop
nop
jae
add
cmpl
repnz
nop
nop
jae
add
rolb
inc
add
nop
push
mov
leave
nop
jmp
add
jb
add
push
mov
xchg
ret
add
add
add
loopne
testl
nop
push
mov
leave
nop
jmp
loopne
xchg
jmp
mov
test
clc
repnz
nop
nop
jae
add
das
mov
clc
repnz
nop
nop
jae
stc
xor
mov
in
leave
nop
jmp
push
xchg
dec
or
enter
add
clc
repnz
nop
nop
jae
popa
add
call
ret
clc
repnz
nop
nop
jae
pop
daa
add
fistpl
nop
push
mov
leave
nop
jmp
add
add
sbb
jae
ss
call
add
add
aad
add
andl
repnz
nop
nop
jae
add
aad
mov
push
mov
xchg
ret
add
add
clc
repnz
nop
nop
jae
add
xor
nop
nop
jae
xor
add
fisttps
push
mov
leave
nop
jmp
loopne
xchg
jb
dec
pop
pop
and
add
add
add
add
add
clc
repnz
nop
nop
jae
or
or
nop
push
mov
leave
nop
jmp
add
les
add
add
clc
repnz
nop
nop
jae
add
add
ret
clc
repnz
nop
nop
jae
add
xchg
sbb
stc
pop
jnp
clc
repnz
nop
nop
jae
add
add
stos
incb
sbbb
call
clc
repnz
nop
nop
jae
clc
push
push
sub
add
nop
nop
jae
mov
xchg
inc
filds
or
and
cmp
add
call
inc
add
add
add
decb
push
clc
repnz
nop
nop
jae
add
clc
xor
scas
pop
push
mov
xchg
ret
movb
dec
add
scas
fldl
cmpsb
add
ss
mov
clc
repnz
nop
nop
jae
scas
push
add
add
aaa
add
nop
push
mov
leave
nop
jmp
dec
sub
daa
add
mov
in
leave
nop
jmp
ds
rolb
add
add
cmpsb
add
pusha
ss
add
clc
repnz
nop
nop
jae
add
add
add
loop
lea
clc
repnz
nop
nop
jae
aaa
xlat
les
fldl
mov
clc
repnz
nop
nop
jae
add
pop
xor
push
mov
xchg
ret
add
add
das
add
add
cmp
rclb
jmp
fs
add
or
dec
roll
mov
inc
add
add
mov
fisubrl
ret
nop
push
mov
leave
nop
jmp
scas
sahf
aas
add
clc
add
pushf
push
add
fidivs
jmp
mov
xchg
ret
add
push
add
add
push
and
cld
nop
nop
jae
add
sar
xlat
add
or
add
pop
or
repnz
nop
nop
jae
add
add
fistl
push
clc
repnz
nop
nop
jae
or
xor
add
push
push
mov
xchg
ret
clc
add
movb
stc
add
mov
nop
push
mov
leave
nop
jmp
xlat
aas
rolb
fwait
clc
repnz
nop
nop
jae
stc
jb
mov
push
nop
push
mov
leave
nop
jmp
clc
add
mov
xchg
nop
nop
jae
daa
sub
add
sbb
mov
clc
repnz
nop
nop
jae
aas
mov
add
das
inc
notb
pop
add
clc
repnz
nop
nop
jae
push
add
daa
add
add
fisttpl
test
or
cld
nop
nop
jae
daa
add
pop
add
push
mov
xchg
ret
add
movb
jb
pop
hlt
or
add
add
lcall
push
mov
leave
nop
jmp
push
or
lds
jb
and
dec
add
add
or
xor
add
fdivs
xchg
inc
add
xor
add
push
push
push
push
mov
xchg
ret
push
xor
add
imul
clc
repnz
nop
nop
jae
add
jb
popa
rol
push
mov
xchg
ret
add
add
jb
call
clc
repnz
nop
nop
jae
add
jb
jmp
add
popa
addr16
add
dec
cmp
add
push
addr16
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
add
loopne
add
daa
ds
mov
xchg
ret
aad
pop
adc
aas
scas
stc
mov
add
xor
clc
repnz
nop
nop
jae
add
mov
loopne
add
fld1
nop
push
mov
leave
nop
jmp
xor
add
nop
nop
jae
stc
add
stos
adc
repnz
nop
nop
jae
sahf
aaa
push
clc
add
add
jp
add
pusha
push
pop
fistpl
mov
xchg
ret
add
pop
aas
push
fiaddl
push
mov
pause
push
mov
leave
nop
jmp
popa
sub
push
pop
or
sbb
clc
repnz
nop
nop
jae
add
add
les
push
mov
leave
nop
jmp
pop
cmp
aaa
add
push
push
mov
xchg
ret
push
add
push
pop
add
in
lods
nop
push
mov
leave
nop
jmp
add
or
add
jmp
rclb
cmpb
add
dec
pop
aaa
dec
push
xor
clc
repnz
nop
nop
jae
loopne
xlat
daa
add
xchg
mov
leave
nop
jmp
xchg
add
xchg
add
mov
push
mov
xchg
ret
or
fldt
add
ud0
clc
repnz
nop
nop
jae
add
popl
cld
nop
nop
jae
add
cmp
mov
adc
repnz
nop
nop
jae
add
add
dec
adc
push
push
mov
xchg
ret
add
xchg
pop
sahf
add
fs
push
mov
xchg
ret
xor
jb
dec
add
jb
dec
nop
push
mov
leave
nop
jmp
aad
add
add
repz
repnz
nop
nop
jae
addb
add
add
iret
add
add
nop
jmp
add
clc
add
in
leave
nop
jmp
add
add
scas
add
add
push
mov
xchg
ret
add
or
lcall
sbb
pop
add
sbb
ficompl
subb
jmp
adc
add
add
add
jmp
in
add
pop
push
mov
xchg
ret
aad
add
scas
add
dec
pop
insb
les
fistpl
nop
push
mov
leave
nop
jmp
add
rolb
rolb
mov
repnz
nop
nop
jae
daa
add
jb
stc
add
clc
in
jge
jle
add
nop
jmp
add
add
data16
dec
push
clc
repnz
nop
nop
jae
dec
pop
dec
popa
loopne
mov
clc
repnz
nop
nop
jae
xor
cltd
pop
push
mov
xchg
ret
add
incb
daa
lds
loopne
mov
push
mov
pop
add
out
cmp
lock
xchg
inc
xor
mov
sub
add
adcl
jae
fnsave
addb
or
add
fcoms
lret
arpl
xchg
ret
popa
push
add
add
jne
jne
push
mov
xchg
ret
add
add
mov
leave
nop
jmp
addb
aad
dec
add
xchg
mov
clc
repnz
nop
nop
jae
add
pop
add
add
push
jp
xor
repnz
nop
nop
jae
add
aad
xchg
add
and
mov
xchg
ret
stc
rorb
imul
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
cmp
add
shlb
clc
repnz
nop
nop
jae
sbb
daa
fsubr
mov
nop
push
mov
leave
nop
jmp
addb
add
pop
daa
aam
and
in
leave
nop
jmp
xor
stc
xchg
daa
xchg
push
clc
repnz
nop
nop
jae
stos
sbb
add
add
xchg
mov
sub
add
gs
nop
push
mov
leave
nop
jmp
add
xchg
add
xchg
add
jb
ret
clc
repnz
nop
nop
jae
aas
dec
lcall
add
add
outsl
push
push
mov
xchg
ret
sahf
loopne
stos
add
add
jb
loop
push
clc
repnz
nop
nop
jae
xlat
incb
xchg
add
jb
out
push
mov
xchg
ret
jb
add
stc
dec
push
stc
dec
push
push
mov
xchg
ret
add
fcmovbe
add
add
add
push
clc
repnz
nop
nop
jae
ffree
add
stc
aaa
rorb
fld1
clc
repnz
nop
nop
jae
add
aad
daa
add
cmp
nop
push
mov
leave
nop
jmp
add
add
popa
pop
cltd
mov
push
mov
xchg
ret
add
add
insl
add
clc
repnz
nop
nop
jae
popa
push
xor
clc
repnz
nop
nop
jae
push
add
add
mov
push
clc
repnz
nop
nop
jae
sbb
pop
add
ds
sbb
lret
mov
mov
push
mov
xchg
ret
add
daa
add
rolb
push
pop
push
push
mov
xchg
ret
add
push
add
stc
pop
or
xor
push
mov
xchg
ret
movb
ds
add
sbb
mov
clc
repnz
nop
nop
jae
add
daa
add
shr
clc
repnz
nop
nop
jae
add
add
push
call
clc
repnz
nop
nop
jae
add
aaa
add
add
addb
movmskps
repnz
nop
nop
jae
jb
sub
push
xor
popa
dec
test
push
ja
clc
repnz
nop
nop
jae
incl
mov
jne
clc
repnz
nop
nop
jae
xchg
add
dec
imul
nop
jae
push
pop
sub
filds
jge
clc
repnz
nop
nop
jae
sub
sub
add
and
push
mov
leave
nop
jmp
scas
add
add
sbb
mull
repnz
nop
nop
jae
mov
dec
pop
mov
push
mov
xchg
ret
incl
add
add
xor
nop
push
mov
leave
nop
jmp
add
add
xchg
stc
inc
mov
push
mov
xchg
ret
clc
dec
add
add
push
nop
push
mov
leave
nop
jmp
add
incb
adc
test
push
mov
xchg
ret
add
add
add
push
int
add
clc
repnz
nop
nop
jae
rcl
add
scas
stos
or
insb
xor
clc
repnz
nop
nop
jae
les
call
clc
repnz
nop
nop
jae
add
adc
clc
repnz
nop
nop
jae
add
xor
add
xchg
test
and
and
pop
add
xchg
fldl
lds
mov
xchg
ret
pop
push
rolb
push
add
stc
add
nop
nop
jae
add
push
daa
add
add
fisttpll
mov
xchg
ret
dec
aaa
movb
add
adc
daa
jne
nop
push
mov
leave
nop
jmp
stc
mov
xor
push
mov
leave
nop
jmp
aaa
add
add
mov
test
push
mov
xchg
ret
call
add
add
add
and
push
mov
xchg
ret
add
das
sbb
pop
and
nop
push
mov
leave
nop
jmp
xor
xor
loopne
sahf
cmp
push
clc
repnz
nop
nop
jae
jb
xorb
mov
cld
nop
nop
jae
add
push
clc
inc
jge
call
nop
jae
add
push
push
xor
jmp
add
add
push
add
push
add
add
js
inc
add
pushl
sub
add
cmp
push
push
mov
xchg
ret
add
sahf
push
add
loopne
lods
add
call
cld
nop
nop
jae
push
aaa
xchg
shlb
mov
repz
repnz
nop
nop
jae
add
dec
stc
clc
or
mov
clc
repnz
nop
nop
jae
add
sahf
add
xor
repnz
nop
nop
jae
xlat
sbb
add
or
add
add
mov
mov
add
add
add
mov
xchg
aas
fistpl
push
mov
xchg
ret
daa
add
scas
add
add
mov
xchg
ret
add
movb
add
add
popa
clc
repnz
nop
nop
jae
shlb
pop
lds
add
sbb
call
nop
jae
xor
add
add
pusha
cmpsl
fistpl
clc
repnz
nop
nop
jae
add
add
pop
popl
mov
leave
nop
jmp
mov
pop
add
sub
rclb
fwait
inc
add
aas
add
xlat
call
clc
repnz
nop
nop
jae
add
add
pop
cmp
in
push
inc
iret
sub
shrl
cmp
fdivs
or
add
clc
repnz
nop
nop
jae
stc
add
add
add
add
cmp
add
add
add
jae
jge
nop
push
mov
leave
nop
jmp
xor
xchg
or
add
push
push
mov
xchg
ret
ljmp
add
add
or
jmp
repnz
nop
nop
jae
add
aad
add
or
add
pop
add
clc
repnz
nop
nop
jae
fs
cmp
dec
add
or
repnz
nop
nop
jae
add
add
add
cmp
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
xlat
call
pop
add
add
nop
jmp
add
pop
jp
push
push
mov
xchg
ret
add
add
popa
push
insb
jae
sbb
clc
repnz
nop
nop
jae
daa
stos
add
dec
decb
nop
nop
jae
add
aas
add
add
add
dec
jnp
jmp
nop
nop
jae
add
add
add
push
mov
xchg
ret
aad
add
push
clc
inc
push
push
mov
xchg
ret
or
stos
das
testl
mov
add
add
imul
xchg
ret
add
stos
add
add
push
clc
repnz
nop
nop
jae
push
add
add
push
in
mov
clc
repnz
nop
nop
jae
add
add
add
push
push
mov
xchg
ret
xor
pop
push
xchg
add
mov
xchg
ret
stc
aas
rol
push
add
mov
cld
nop
nop
jae
pop
push
xchg
add
mov
add
call
nop
push
mov
leave
nop
jmp
add
jb
push
add
loop
mov
nop
push
mov
leave
nop
jmp
xchg
sub
pop
dec
push
mov
xchg
ret
dec
add
popa
or
xlat
add
clc
repnz
nop
nop
jae
pop
daa
add
pop
pop
mov
nop
push
mov
leave
nop
jmp
rol
sahf
add
add
negb
mov
clc
repnz
nop
nop
jae
add
xlat
rclb
cmpl
mov
leave
nop
jmp
mov
push
push
mov
xchg
ret
rolb
incb
push
incl
add
in
test
nop
push
mov
leave
nop
jmp
fiaddl
add
push
push
mov
xor
repnz
nop
nop
jae
add
mov
sti
add
add
nop
push
mov
leave
nop
jmp
xlat
das
xchg
xor
and
repnz
nop
nop
jae
fiaddl
add
add
int
jne
clc
repnz
nop
nop
jae
lds
add
add
and
mov
xchg
ret
add
sbb
add
inc
sub
xlat
mov
xchg
ret
add
add
add
add
add
nop
jmp
xlat
add
add
clc
repnz
nop
nop
jae
xor
fstpt
loop
inc
add
addb
add
loopne
popa
pop
clc
repnz
nop
nop
jae
stos
sbb
add
fiadds
test
xchg
adc
add
add
les
add
add
cmp
add
push
mov
xchg
ret
ficompl
add
or
push
mov
xchg
ret
add
aaa
loopne
add
cld
nop
nop
jae
add
ds
fiaddl
mov
sub
sar
cld
nop
nop
jae
fs
add
add
daa
inc
imul
cld
nop
nop
jae
add
or
incl
pusha
clc
repnz
nop
nop
jae
add
xchg
add
add
stc
rolb
push
fnsave
add
push
dec
xor
add
addb
arpl
scas
cmc
call
nop
jmp
aad
aas
add
clc
repnz
nop
nop
jae
add
push
xor
clc
add
cmp
mov
clc
repnz
nop
nop
jae
push
jb,pt
cli
loop
dec
int3
mov
sbb
nop
nop
jae
xchg
add
scas
add
addb
popaw
popa
clc
repnz
nop
nop
jae
add
rolb
add
fcmovnbe
in
jne
clc
repnz
nop
nop
jae
sbb
inc
clc
repnz
nop
nop
jae
push
rolb
lds
shrb
xchg
push
clc
repnz
nop
nop
jae
fcmovbe
addb
add
add
sub
clc
repnz
nop
nop
jae
push
add
incl
sbb
mov
xchg
ret
das
add
add
loop
nop
push
mov
leave
nop
jmp
mov
dec
push
mov
clc
repnz
nop
nop
jae
add
les
repnz
add
repnz
nop
nop
jae
add
add
nop
push
mov
leave
nop
jmp
add
addb
shrl
inc
add
or
add
dec
add
incb
andl
nop
nop
jae
add
stos
sahf
push
add
push
xor
clc
repnz
nop
nop
jae
cmp
sbb
test
add
movsb
add
dec
test
nop
push
mov
leave
nop
jmp
xor
pop
dec
nop
push
mov
leave
nop
jmp
or
stos
add
shlb
dec
jl
add
nop
nop
jae
pop
add
fiaddl
add
add
clc
repnz
nop
nop
jae
add
add
jmp
daa
add
add
fstpt
push
nop
push
mov
leave
nop
jmp
or
fldt
insl
add
nop
push
mov
leave
nop
jmp
add
add
add
push
xchg
je
clc
repnz
nop
nop
jae
push
push
fnstsw
add
aas
push
clc
repnz
nop
nop
jae
fldl
xchg
xchg
pop
sbb
jo
add
dec
add
add
cmp
aad
dec
cmp
repnz
nop
nop
jae
or
push
mov
add
nop
push
mov
leave
nop
jmp
xlat
daa
pop
or
push
mov
xchg
ret
add
add
daa
add
add
and
add
movsl
xor
clc
repnz
nop
nop
jae
add
les
pop
xchg
lcall
notb
and
dec
add
add
loopne
adc
aad
enter
cld
nop
nop
jae
pop
add
add
add
roll
fidivl
xchg
ret
add
push
xor
add
adc
sbb
clc
repnz
nop
nop
jae
push
add
add
add
add
nop
jmp
add
incl
int
mov
add
incl
add
pushf
add
add
xor
orl
add
nop
jmp
movb
sbb
jmp
movb
fiaddl
xchg
sub
rol
or
mov
push
mov
xchg
ret
xor
add
add
add
lcall
inc
add
add
add
movsb
add
adc
enter
repnz
nop
nop
jae
add
jb
aaa
cmp
add
je
clc
repnz
nop
nop
jae
stc
or
nop
push
mov
leave
nop
jmp
sbb
decb
hlt
movsl
mov
clc
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
add
add
add
sub
xorl
clc
repnz
nop
nop
jae
add
adc
fld1
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
aas
rol
add
add
jg
nop
push
mov
leave
nop
jmp
add
sahf
add
add
clc
repnz
nop
nop
jae
add
aas
aad
add
add
add
ds
lods
add
add
mov
leave
nop
jmp
add
pop
add
dec
cld
fdivrs
mov
xchg
ret
add
sbb
stos
add
push
add
addb
movsl
add
clc
repnz
nop
nop
jae
add
add
loope
test
push
mov
leave
nop
jmp
add
sbb
gs
push
mov
xchg
ret
add
add
or
mov
clc
repnz
nop
nop
jae
xchg
add
lods
add
xor
repnz
nop
nop
jae
dec
add
push
addb
je
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
aaa
dec
xlat
clc
pushl
pushl
nop
push
mov
leave
nop
jmp
fistl
mov
clc
repnz
nop
nop
jae
sbb
sbb
sahf
jmp
clc
repnz
nop
nop
jae
sbb
lds
mov
or
mov
mov
negl
repnz
nop
nop
jae
sub
aaa
add
add
push
jb
nop
push
mov
leave
nop
jmp
add
mov
add
jne
int
call
nop
jmp
sub
dec
inc
push
clc
repnz
nop
nop
jae
add
les
add
sub
clc
repnz
nop
nop
jae
dec
add
lcall
jge
inc
add
add
dec
or
add
repnz
nop
nop
jae
cmp
add
rcl
mov
clc
repnz
nop
nop
jae
add
add
sbb
mov
in
leave
nop
jmp
add
stc
jecxz
fistl
nop
jmp
pop
add
aad
add
push
loop
add
clc
repnz
nop
nop
jae
add
add
pop
xor
mov
clc
repnz
nop
nop
jae
add
add
add
hlt
jb
out
outsl
mov
clc
repnz
nop
nop
jae
dec
push
stc
add
inc
lea
inc
xor
clc
repnz
nop
nop
jae
push
add
add
cmp
nop
push
mov
leave
nop
jmp
clc
sarb
add
xchg
imul
repnz
nop
nop
jae
dec
jb
sahf
stc
fiaddl
sub
jbe
clc
repnz
nop
nop
jae
add
add
add
sub
push
mov
xchg
ret
add
add
add
push
fucomp
cli
xchg
pop
push
mov
xchg
ret
popa
add
das
stc
rcrb
fs
inc
add
clc
repnz
nop
nop
jae
sbb
movb
add
jmp
addb
cmp
ret
or
add
add
add
add
add
clc
repnz
nop
nop
jae
mov
push
add
xor
clc
repnz
nop
nop
jae
add
dec
or
add
dec
mov
clc
repnz
nop
nop
jae
rol
fstl
mov
clc
repnz
nop
nop
jae
dec
add
aas
mov
add
add
add
rol
xor
add
add
add
jmp
loop
nop
push
mov
leave
nop
jmp
add
lcall
add
repnz
nop
nop
jae
add
fistpl
clc
repnz
nop
nop
jae
cmpb
incb
les
jne
clc
repnz
nop
nop
jae
fldl
cwtl
loopne
pop
nop
push
mov
leave
nop
jmp
fldl
add
mov
in
leave
nop
jmp
push
xlat
dec
add
add
add
fld1
clc
repnz
nop
nop
jae
add
add
scas
add
js
add
jmp
add
sbb
add
add
add
xor
add
pop
addb
icebp
mov
clc
repnz
nop
nop
jae
add
addb
lock
nop
nop
jae
clc
jb
xor
js
mov
push
mov
xchg
ret
dec
add
stc
rolb
and
add
repnz
nop
nop
jae
add
rolb
add
adc
data16
add
push
daa
add
inc
sbb
repnz
nop
nop
jae
add
daa
sbb
jb
push
mov
xchg
ret
or
add
and
mov
xchg
ret
add
rorb
add
test
sti
call
nop
jmp
pop
add
rep
clc
repnz
nop
nop
jae
popa
add
add
pop
push
add
mov
push
mov
leave
nop
jmp
add
push
ffree
add
scas
xchg
pop
push
mov
xchg
ret
add
rolb
sub
addb
je
nop
push
mov
leave
nop
jmp
add
fistl
movsl
mov
clc
repnz
nop
nop
jae
add
mov
add
clc
repnz
nop
nop
jae
cmp
add
pushf
mov
repnz
nop
nop
jae
jb
add
jb
push
clc
repnz
nop
nop
jae
rolb
add
aad
add
push
add
add
cld
nop
nop
jae
add
cmp
loopne
popa
jnp
clc
repnz
nop
nop
jae
add
dec
add
xor
pusha
clc
repnz
nop
nop
jae
add
aad
add
pop
mov
add
add
leave
nop
jmp
add
dec
pop
jecxz
clc
repnz
nop
nop
jae
add
lcall
push
add
add
pop
push
mov
xchg
ret
push
cmp
add
add
xchg
and
nop
nop
jae
add
add
push
xchg
nop
nop
jae
sbb
dec
fidivl
dec
add
push
addr16
nop
push
mov
leave
nop
jmp
jb
xor
add
repnz
nop
nop
jae
add
push
push
mov
xchg
ret
add
add
fs
stc
add
dec
nop
push
mov
leave
nop
jmp
rolb
add
xor
adc
nop
jmp
dec
add
scas
add
jmp
jmp
imul
add
dec
shrb
add
or
add
add
add
jle
nop
push
mov
leave
nop
jmp
add
add
add
jne
clc
repnz
nop
nop
jae
add
mov
repnz
nop
nop
jae
add
pop
push
push
mov
repnz
nop
nop
jae
add
fnstsw
shrl
inc
and
repnz
nop
nop
jae
jb
add
push
jmp
clc
repnz
nop
nop
jae
add
sub
add
xchg
xchg
clc
repnz
nop
nop
jae
push
add
cmpsb
add
sti
mov
nop
push
mov
leave
nop
jmp
push
add
add
sub
clc
repnz
nop
nop
jae
fs
jnp
push
mov
xchg
ret
push
pop
clc
or
add
mov
clc
repnz
nop
nop
jae
add
push
daa
add
add
add
pop
push
mov
xchg
ret
add
clc
add
xor
add
mov
adc
cld
nop
nop
jae
popa
scas
fs
rolb
add
mov
nop
push
mov
leave
nop
jmp
add
add
daa
loopne
in
repnz
mov
clc
repnz
nop
nop
jae
add
sub
mov
xchg
ret
dec
add
add
dec
rolb
add
add
clc
repnz
nop
nop
jae
loopne
add
pop
or
jecxz
sbb
push
mov
xchg
ret
sbb
add
add
dec
push
loopne
add
push
add
inc
lods
add
nop
push
mov
leave
nop
jmp
scas
das
add
push
add
mov
xchg
ret
sbbb
daa
cmp
cmpl
nop
push
mov
leave
nop
jmp
add
pop
add
rorb
pop
nop
push
mov
leave
nop
jmp
sub
mov
rcr
popa
fs
insb
cmp
repnz
nop
nop
jae
loopne
add
add
push
shlb
xor
add
clc
repnz
nop
nop
jae
rolb
add
dec
push
clc
repnz
nop
nop
jae
rolb
add
rcl
adc
fwait
clc
repnz
nop
nop
jae
add
incl
mov
sub
mov
clc
repnz
nop
nop
jae
add
or
repnz
nop
nop
jae
add
xor
sbb
movl
cld
nop
nop
jae
aas
aas
stc
or
mov
nop
push
mov
leave
nop
jmp
lds
outsl
loopne
repnz
nop
nop
jae
aaa
scas
add
add
mov
imul
les
popa
add
sbbb
mov
pop
nop
push
mov
leave
nop
jmp
add
push
adc
popa
popa
fidivl
je
clc
repnz
nop
nop
jae
add
sbb
mov
jg
clc
repnz
nop
nop
jae
add
push
clc
add
xor
inc
jg
add
das
sahf
mov
xchg
jp
cmp
call
nop
jae
add
das
sbb
sbb
mov
nop
push
mov
leave
nop
jmp
sbb
xlat
les
adc
mov
clc
repnz
nop
nop
jae
add
add
add
dec
cmp
repnz
nop
nop
jae
add
add
cld
cmp
inc
inc
add
repnz
nop
nop
jae
add
les
and
mov
xchg
ret
xchg
add
dec
cmp
popf
dec
clc
repnz
nop
nop
jae
add
aad
add
add
jl
sub
jbe
clc
repnz
nop
nop
jae
add
dec
adc
repnz
nop
nop
jae
xor
xchg
sub
sub
clc
repnz
nop
nop
jae
add
add
dec
shlb
and
mov
cld
nop
nop
jae
add
cmp
hlt
and
js
add
add
add
add
lods
add
aaa
movzwl
clc
repnz
nop
nop
jae
add
push
ds
push
push
mov
xchg
ret
sub
aas
cmp
xchg
mov
or
add
mov
clc
repnz
nop
nop
jae
mov
pop
sbb
add
push
movzwl
clc
repnz
nop
nop
jae
dec
add
add
leave
pop
push
mov
xchg
ret
les
push
lds
add
add
push
nop
push
mov
leave
nop
jmp
cmp
fst
mov
xchg
xchg
ret
add
xchg
pop
add
test
cli
call
nop
jmp
add
add
clc
repnz
nop
nop
jae
popa
dec
add
add
add
mov
clc
repnz
nop
nop
jae
add
stos
mov
clc
repnz
nop
nop
jae
jb
add
daa
add
adc
nop
nop
jae
add
popa
pop
fildl
add
rcll
insl
inc
add
or
add
sbb
mov
clc
repnz
nop
nop
jae
fiaddl
sub
xlat
jne
nop
push
mov
leave
nop
jmp
rcl
rcrb
clc
repnz
nop
nop
jae
xlat
add
sahf
push
add
adc
add
repnz
nop
nop
jae
add
add
mov
cld
nop
nop
jae
add
incl
add
sbb
pop
clc
repnz
nop
nop
jae
add
push
aas
rcl
stos
add
inc
roll
cld
nop
nop
jae
daa
les
add
add
mov
clc
repnz
nop
nop
jae
sub
add
mov
push
or
repnz
nop
nop
jae
loopne
xor
mov
xchg
ret
add
pop
add
add
add
sbb
nop
nop
jae
add
add
add
xchg
xchg
fmull
nop
nop
jae
add
sahf
pop
add
pop
scas
push
clc
repnz
nop
nop
jae
xchg
add
mov
clc
shlb
mov
nop
nop
jae
add
add
stos
sahf
loopne
sbb
mov
repnz
nop
nop
jae
add
or
cld
or
in
leave
nop
jmp
add
bound
repnz
nop
nop
jae
cmpb
sub
fnsave
loop
push
mov
xchg
ret
push
add
push
add
icebp
lea
clc
repnz
nop
nop
jae
add
push
add
lea
clc
repnz
nop
nop
jae
aad
add
sub
add
add
clc
repnz
nop
nop
jae
add
add
in
add
add
nop
push
mov
leave
nop
jmp
mov
rep
nop
push
mov
leave
nop
jmp
or
aaa
add
add
push
mov
xchg
ret
xor
add
add
cld
aas
mov
clc
repnz
nop
nop
jae
add
add
dec
nop
push
mov
leave
nop
jmp
push
add
add
aas
pop
add
repnz
nop
nop
jae
dec
aad
fstl
mov
xchg
ret
push
scas
fs
dec
xor
add
push
mov
xchg
ret
les
pop
pop
aas
rclb
cmp
nop
push
mov
leave
nop
jmp
add
fildl
mov
pop
shrb
add
adc
repz
repnz
nop
nop
jae
add
add
cmp
popa
je
clc
repnz
nop
nop
jae
incl
add
add
pop
jne
clc
repnz
nop
nop
jae
lds
add
rorb
mov
push
mov
xchg
ret
stos
xor
add
daa
sbb
push
clc
repnz
nop
nop
jae
xor
add
mov
push
dec
sbb
and
mov
xchg
ret
rolb
add
stc
das
add
leave
clc
repnz
nop
nop
jae
pop
add
mov
cmp
push
mov
xchg
ret
pop
add
add
add
or
add
add
shl
push
mov
xchg
ret
lds
lds
sub
add
mov
clc
repnz
nop
nop
jae
add
add
add
cltd
add
clc
repnz
nop
nop
jae
pop
add
push
pop
nop
push
mov
leave
nop
jmp
add
dec
add
add
aas
lea
clc
repnz
nop
nop
jae
sbb
xchg
aad
xor
inc
xchg
ds
xchg
add
add
int3
inc
and
gs
add
dec
stc
add
add
add
stos
add
xlat
and
clc
repnz
nop
nop
jae
fs
add
enter
add
mov
lods
clc
repnz
nop
nop
jae
push
add
movb
add
test
repnz
nop
nop
jae
add
fisubrl
add
dec
vpsubsw
clc
repnz
nop
nop
jae
push
aad
add
sahf
push
jo
mov
clc
repnz
nop
nop
jae
rolb
aaa
add
xlat
add
push
nop
push
mov
leave
nop
jmp
or
add
call
or
clc
repnz
nop
nop
jae
add
pop
add
pop
clc
repnz
nop
nop
jae
add
rolb
cmp
lret
add
cld
nop
nop
jae
rolb
rorb
add
clc
repnz
nop
nop
jae
or
add
fwait
push
clc
repnz
nop
nop
jae
aad
add
popl
clc
repnz
nop
nop
jae
aas
popa
add
jo
push
push
mov
xchg
ret
add
sub
add
mov
nop
push
mov
leave
nop
jmp
xor
add
mov
add
add
clc
repnz
nop
nop
jae
fiaddl
add
add
push
negb
xchg
push
clc
repnz
nop
nop
jae
dec
dec
add
vpminub
dec
mov
clc
repnz
nop
nop
jae
aad
add
add
sbb
add
clc
repnz
nop
nop
jae
sbbb
fisttpll
push
mov
xchg
ret
dec
rolb
add
add
shl
filds
std
fwait
inc
add
fldl
add
sub
popa
fistpl
clc
repnz
nop
nop
jae
dec
aad
add
add
hlt
psubsw
or
add
or
stc
pop
jb
add
add
push
add
test
sbb
cmp
ret
stc
add
fnstsw
add
cld
nop
nop
jae
add
rolb
add
xchg
repnz
repnz
nop
nop
jae
shlb
loopne
add
push
adc
nop
nop
jae
add
add
lds
insb
iret
test
nop
push
mov
leave
nop
jmp
xabort
add
loopne
clc
repnz
nop
nop
jae
sbb
sub
mov
popl
xchg
ret
lds
dec
add
mov
clc
repnz
nop
nop
jae
sahf
pop
scas
sub
add
pop
cmp
nop
push
mov
leave
nop
jmp
rolb
fldl
aas
decl
clc
repnz
nop
nop
jae
add
add
test
clc
repnz
nop
nop
jae
add
add
jns
clc
repnz
nop
nop
jae
push
fiaddl
add
inc
fcoml
test
add
leave
sub
repnz
nop
nop
jae
push
rolb
mov
mov
add
add
add
mov
cltd
add
inc
push
add
addr16
clc
repnz
nop
nop
jae
add
add
add
push
clc
push
loop
add
and
add
clc
repnz
nop
nop
jae
add
add
loopne
xchg
cmpsl
xor
clc
repnz
nop
nop
jae
mov
push
add
xchg
shl
clc
repnz
nop
nop
jae
add
add
push
add
incl
add
sbb
push
or
add
aas
fs
mov
cld
nop
nop
jae
cmp
ds
xor
xchg
push
mov
xchg
ret
les
mov
sbb
add
push
add
push
mov
xchg
ret
fldl
clc
fs
fldl
cld
push
mov
mov
add
repnz
nop
nop
jae
add
add
daa
xchg
aas
call
clc
repnz
nop
nop
jae
add
clc
add
mov
clc
repnz
nop
nop
jae
rolb
stc
mov
clc
adc
add
repnz
nop
nop
jae
add
pop
clc
repnz
nop
nop
jae
add
add
stos
cmp
lock
bound
push
mov
xchg
ret
xor
cmp
add
add
mov
push
mov
xchg
ret
push
add
push
add
add
fcomps
nop
push
mov
leave
nop
jmp
add
add
out
add
push
push
mov
clc
repnz
nop
nop
jae
mov
or
add
lea
nop
push
mov
leave
nop
jmp
mov
or
cld
nop
nop
jae
add
sub
xchg
add
dec
mov
clc
repnz
nop
nop
jae
pop
add
cmp
dec
cmp
pop
push
mov
xchg
ret
add
sub
stc
add
push
push
adc
jbe
test
add
pusha
clc
repnz
nop
nop
jae
ljmp
sahf
data16
inc
and
clc
repnz
nop
nop
jae
add
add
aas
add
add
cld
nop
nop
jae
push
xor
sbb
add
mov
cld
nop
nop
jae
stc
add
push
add
popf
pusha
clc
repnz
nop
nop
jae
add
mov
or
repnz
nop
nop
jae
cmp
add
push
sbb
push
not
clc
repnz
nop
nop
jae
add
push
aas
je
mov
repnz
nop
nop
jae
scas
sbb
add
mov
add
cmpsb
add
aas
push
push
mov
xchg
ret
rcl
aad
movb
fildl
jg
push
mov
xchg
ret
pop
add
add
sbb
push
mov
xchg
ret
add
js
repnz
nop
nop
jae
fldl
lds
subl
nop
push
mov
leave
nop
jmp
xchg
mov
add
int
push
mov
xchg
ret
stc
stc
daa
add
jb
add
std
push
clc
repnz
nop
nop
jae
dec
push
add
add
inc
push
adc
nop
push
mov
leave
nop
jmp
stos
fldl
cmp
repnz
nop
nop
jae
add
sbb
add
int3
lcall
cld
nop
nop
jae
add
scas
add
push
orl
xorl
incl
daa
add
add
add
nop
push
mov
leave
nop
jmp
add
add
sub
mov
add
mov
leave
nop
jmp
add
add
stc
or
lret
out
clc
repnz
nop
nop
jae
add
xlat
sbb
mov
adc
repnz
nop
nop
jae
xchg
scas
cmp
jle
je
clc
repnz
nop
nop
jae
add
pop
in
loop
clc
repnz
nop
nop
jae
add
xchg
add
add
add
nop
push
mov
leave
nop
jmp
sub
or
rolb
fs
mov
xchg
ret
or
pop
add
mov
clc
repnz
nop
nop
jae
stos
add
add
notl
cld
nop
nop
jae
popa
pop
xlat
add
add
add
repnz
nop
nop
jae
aaa
add
add
xchg
nop
nop
jae
add
daa
xchg
pop
nop
push
mov
leave
nop
jmp
add
fistpl
add
add
stc
fld1
push
mov
xchg
ret
add
add
add
add
xchg
mov
push
mov
xchg
ret
add
fiaddl
add
add
add
imul
cld
nop
nop
jae
add
xchg
add
dec
push
mov
stc
clc
repnz
nop
nop
jae
dec
add
fildl
cmp
pop
clc
repnz
nop
nop
jae
add
add
push
add
inc
daa
fisttpll
push
mov
xchg
ret
add
insb
sub
in
leave
nop
jmp
pop
aas
xlat
add
pop
add
clc
repnz
nop
nop
jae
add
add
dec
xor
push
mov
xchg
ret
add
sub
add
add
js
adc
cld
nop
nop
jae
dec
add
sub
jnp
clc
repnz
nop
nop
jae
add
fs
add
aas
das
adc
repnz
nop
nop
jae
fldl
pop
daa
add
sbb
fmulp
mov
clc
repnz
nop
nop
jae
or
add
add
cmc
dec
clc
repnz
nop
nop
jae
add
ds
xchg
or
dec
iret
mov
clc
repnz
nop
nop
jae
add
push
daa
add
push
push
mov
xchg
ret
mov
add
xchg
jae
cmpl
nop
jmp
add
std
xchg
nop
push
mov
leave
nop
jmp
push
add
add
dec
add
mov
push
mov
xchg
ret
add
add
add
sbb
add
add
ret
add
enter
xchg
ret
daa
sub
dec
add
jb
jl
clc
repnz
nop
nop
jae
add
pop
jl
lea
push
mov
leave
nop
jmp
add
add
lcall
and
inc
add
aaa
add
mov
add
call
clc
repnz
nop
nop
jae
add
scas
add
nop
nop
jae
aad
add
add
scas
add
xor
clc
repnz
nop
nop
jae
sub
fisttpll
cmp
in
push
mov
xchg
ret
incl
adc
daa
add
pushf
xchg
nop
push
mov
leave
nop
jmp
add
add
add
add
push
push
mov
xchg
ret
scas
xor
add
xchg
sbb
nop
nop
jae
add
add
arpl
loopne
inc
add
add
add
les
loopne
push
lods
jmp
add
add
scas
sahf
add
add
cmp
cld
nop
nop
jae
add
add
daa
lds
out
daa
add
push
add
add
dec
add
mov
nop
push
mov
leave
nop
jmp
push
add
jb
popa
sar
add
push
mov
xchg
ret
add
add
aad
push
popf
inc
clc
repnz
nop
nop
jae
add
aaa
shlb
mov
xchg
ret
shrb
shlb
stc
sub
clc
repnz
nop
nop
jae
popa
add
xor
outsb
out
out
add
nop
push
mov
leave
nop
jmp
add
pop
push
mov
xchg
ret
push
push
add
pop
add
aad
call
clc
repnz
nop
nop
jae
aas
movb
dec
xchg
add
clc
repnz
nop
nop
jae
add
mov
add
pop
add
adc
test
addr16
rolb
sub
repnz
pop
xor
mov
adc
out
pop
ret
addb
add
adc
xor
imul
push
xchg
add
add
add
fidivl
push
add
add
push
lret
pop
xor
in
jae
cmp
loope
and
mov
test
jmp
xchg
stc
pop
pop
mov
jg
test
pop
lea
add
mov
and
add
jbe
add
aad
lds
push
sub
add
cli
push
xor
mov
sbb
sub
add
hlt
sbb
jo
inc
jo
and
add
in
inc
movsl
stos
add
adc
imul
imul
movsl
inc
jo
cmp
pop
shlb
shll
and
and
jp
rol
dec
push
lods
imul
sbb
add
and
add
idivl
inc
pushf
jno
rolb
sbb
addr16
divb
xchg
int
aaa
xchg
pusha
mov
lds
std
frstor
not
arpl
ja
add
adc
mov
add
sti
cmp
leave
cmc
jae
pop
inc
and
add
jo
xor
pop
hlt
dec
daa
daa
out
fs
mov
add
pop
inc
shlb
or
add
mov
add
mov
or
mov
sbb
fwait
sbb
push
fbld
sbb
xchg
scas
enter
inc
out
add
adc
push
sbb
add
xor
rolb
xor
xor
xchg
mov
inc
mov
add
fmul
sub
add
fcmovne
imul
shrl
xor
cltd
pop
repz
out
or
add
shlb
add
ljmp
cmc
cmp
fcmovu
je
add
sub
add
xor
ficoms
sahf
cmp
cmpl
add
add
cmp
pushf
loope
xlat
push
add
lcall
xor
mov
add
add
movsl
inc
push
daa
ficoms
aad
sub
add
add
iret
add
pop
insl
pop
push
out
addb
int3
pop
mov
lret
jmp
addb
sbb
mov
rorb
push
add
push
add
ljmp
add
inc
out
rorl
add
frstor
testb
repz
add
imul
mov
and
add
repnz
inc
ja
sub
add
daa
cmp
add
sbb
sbb
add
pop
aaa
sbb
add
inc
push
outsl
das
repnz
ja
pop
mov
jno
cmc
inc
outsb
clc
bnd
lea
cwtl
les
addb
loope
xor
add
shlb
dec
inc
push
push
sbb
add
lcall
add
test
add
lods
fbld
pop
clc
or
add
sbb
xor
test
add
add
add
add
dec
inc
lahf
out
inc
adc
negl
mulb
add
test
lods
les
and
add
mov
cli
add
je,pt
icebp
add
lret
sti
jg
adc
into
test
add
adc
sub
add
mov
pop
lret
jl
jbe
inc
ret
mov
cmp
mov
add
jg
adc
faddl
or
sub
pop
add
add
cmp
fstp
insb
loope
add
js
jae
arpl
add
fcoms
or
cmpsb
add
out
xchg
pushf
jecxz
insb
pop
jmp
cld
jno
minps
je
mov
jecxz
dec
pop
dec
in
call
sub
int3
out
mov
add
mov
add
movb
and
add
cltd
push
add
or
lahf
cwtl
sbb
out
ljmp
add
add
and
push
mov
std
cmp
or
add
adc
xchg
add
add
pop
outsl
leave
mov
add
push
add
cmpsb
add
mov
push
jb
fwait
std
call
js
xchg
js
cmp
xchg
push
push
cld
sbb
inc
sti
xor
xchg
imul
add
pop
fsubl
push
inc
outsl
add
in
inc
mov
push
imul
das
mov
add
js
mov
add
cmp
addb
jb
mov
sarb
mov
add
outsl
add
add
add
push
sbb
cld
fwait
adc
add
mov
adc
lock
das
imul
dec
jb
xchg
adc
xchg
mov
int
and
add
pcmpgtd
add
out
aad
mov
pop
and
adc
aam
fistpl
adc
add
ljmp
sub
add
add
add
lret
or
add
stos
add
or
inc
jo
movsb
add
adc
ljmp
xchg
xor
add
add
cmp
ret
cmpsl
in
push
add
add
inc
imul
bound
fidivs
subl
mov
mov
test
sub
dec
inc
aas
dec
sbbl
pop
jl
mov
jne
int3
addb
sbb
addb
into
sub
adc
add
push
fst
sub
bound
add
inc
cwtl
cmp
mov
add
add
lret
sub
add
inc
std
ret
sub
add
mov
push
push
dec
xor
out
add
xor
mov
add
push
adcl
dec
sbb
loop
inc
dec
xchg
mov
add
ds
inc
xchg
jle
shl
aam
scas
je
sub
add
xor
add
xchg
add
bound
js
mov
add
jb
jo
mov
and
jns
add
cld
out
into
push
xchg
addb
push
data16
add
xor
imul
fadd
lret
sbbl
int3
or
add
push
xchg
cmpsl
inc
outsl
inc
not
icebp
dec
inc
stc
and
imul
mov
add
cmp
xor
stos
xor
and
add
mov
pop
push
fadds
and
add
add
addb
xchg
shrb
add
pushf
into
jle
add
and
in
imul
add
imul
fdivrp
ljmp
inc
mov
aam
add
cmc
fsubr
mov
add
xor
aad
or
add
add
sub
je
imul
daa
pop
and
add
mov
xor
add
dec
jno
cmp
add
add
jns
jp
stc
insl
addb
mov
ret
add
repz
sbb
add
add
xchg
fs
dec
fsubrp
mov
add
roll
pop
xor
iret
repz
fnstsw
push
loop
add
sbb
loopne
and
add
fsubl
add
push
out
add
scas
add
push
push
inc
pusha
popf
testb
push
add
mov
sub
add
stos
add
popa
add
add
and
popf
mov
add
mov
pop
sbb
xchg
stos
add
mov
add
popa
cld
je
faddl
cmp
mov
xor
add
add
add
fwait
insl
shlb
fldenv
add
sbb
add
mov
rcr
mov
sbb
add
add
jb
aad
xchg
pop
stc
inc
push
outsl
push
fstpl
adc
aam
ja
jmp
mov
ja
stos
daa
push
mov
add
inc
rcl
xchg
imul
sti
mov
mov
mov
add
add
or
in
jne
out
call
cmp
lret
fcomp
repz
pop
iret
sub
add
mov
test
outsb
out
pop
jge
loope
xorl
fsub
push
out
out
mov
add
scas
add
xor
xchg
stc
pop
jbe
and
add
lahf
xchg
mov
add
adc
cmp
stos
rcrl
xor
mov
add
fdivl
addb
sbb
movsb
add
sbb
xchg
lea
dec
xor
xor
add
inc
mov
add
add
add
lret
arpl
dec
test
mov
pop
or
aam
mov
add
push
test
add
xor
ret
add
xchg
popf
or
add
iret
stc
scas
or
sub
pop
das
movl
sub
add
pop
ficompl
testl
sub
add
add
mov
push
inc
mov
add
into
push
inc
data16
add
fnstcw
xchg
add
add
add
jb
test
movsb
add
mov
add
add
push
cmp
loope
roll
add
addb
jp
pop
pop
clc
test
add
inc
test
or
add
jae
add
in
push
inc
sti
out
dec
or
fwait
andl
inc
les
jp
jno
xor
in
jnp
push
add
jae
dec
stc
dec
adc
out
out
xchg
dec
and
mov
sbb
add
js
jne
xrelease
add
jbe
enter
add
xchg
add
mov
add
imul
hlt
cmpsl
pop
xor
cli
shr
or
add
xor
sbb
inc
idivb
and
lods
mov
add
fsincos
inc
jecxz
dec
sub
cmp
lock
pop
aam
xchg
lock
cmp
add
imul
insl
mov
mov
add
add
add
test
pop
mov
add
lret
add
add
jo
inc
inc
fs
mov
lods
push
add
xor
adc
mov
mov
push
stos
mov
pop
jne
jnp
sub
or
pusha
push
pop
adc
lock
ficoml
sbb
add
add
lods
add
ljmp
testb
mov
mov
mov
or
mov
mov
xchg
lret
test
add
add
ja
pusha
inc
fdivl
iret
xchg
repz
xchg
jp
fsubrs
add
mov
push
lea
add
add
jb
cmp
dec
bound
add
or
add
xchg
push
jecxz
imul
xor
sahf
stos
add
dec
fisubrl
inc
add
fisttpl
pop
rclb
add
hlt
dec
in
sti
adc
add
in
fldenv
add
cmp
jmp
cmpsb
add
add
adc
or
add
or
add
jae
movsb
add
movsl
mov
jno
lret
sbb
lahf
imul
test
imul
scas
add
arpl
add
mov
mov
dec
fimuls
loopne
jae
add
jns
loop
mov
add
add
jp
test
add
push
aam
adc
mov
leave
or
shll
popf
les
or
mov
add
cwtl
jb
or
add
cmp
in
fwait
inc
inc
or
add
mov
aaa
sub
add
and
pop
pop
mov
sub
add
fisubl
mov
data16
iret
jae
mov
add
pop
pop
mov
cmp
in
stos
add
pop
mov
add
sub
push
imul
pop
loope
test
add
add
outsl
mov
jae
mov
add
aaa
enter
jmp
into
mov
add
in
lret
sbb
cmpsb
add
test
add
ds
imul
sub
aaa
stos
add
loop
mov
add
dec
add
add
add
into
in
mov
int3
mov
fwait
int3
mov
out
or
add
mov
adc
movsl
test
add
data16
or
add
cmp
add
fnstsw
mov
outsl
cmc
testb
add
sti
shlb
add
pop
faddl
adc
outsb
mov
adc
ja
jno
fmuls
add
xlat
inc
movsl
sub
add
stos
inc
mov
xchg
lcall
add
add
out
add
cltd
pop
callw
add
add
add
inc
or
adc
mov
dec
lds
fistps
pop
inc
ljmp
add
cmp
sbb
in
and
add
jo
gs
pop
jns
and
add
xor
inc
add
add
dec
mov
add
add
add
add
add
xchg
lock
add
add
add
add
add
mov
add
enter
addb
xchg
mov
add
mov
add
addb
lods
add
nop
cmp
out
repnz
inc
rcrl
xchg
shll
add
mov
cmp
pop
jae
push
mov
into
out
cmpsl
popl
add
scas
stos
rolb
loope
sub
add
sbb
fistpl
inc
cmp
enter
mov
loope
int
pusha
adc
add
jnp
pusha
or
rorl
or
leave
push
add
loop
fisubrl
les
add
add
out
add
push
pusha
int
add
xchg
pop
inc
notl
mov
add
xchg
add
jmp
mov
add
jno
mov
push
loope
sbb
mov
testb
or
add
pop
push
add
aam
and
add
push
add
add
mov
cmp
popf
ucomiss
add
and
or
add
and
add
shll
inc
lods
sbb
jo
mov
test
pop
rorb
or
add
lret
xor
outsb
out
iret
scas
add
dec
adc
sub
add
rcrl
aam
test
repz
xor
mov
sbb
xchg
mov
jp
pop
mov
mov
fcoml
jns
inc
aas
sbb
add
add
and
lret
dec
ret
mov
out
mov
mov
repnz
or
mov
xchg
stc
mov
add
std
jmp
add
add
fisubrl
xchg
outsb
cmp
add
sub
fists
add
mov
cli
lahf
scas
std
leave
not
jp
sbb
mov
add
dec
sub
cmpsb
add
or
add
bound
lds
mov
mov
mov
mov
add
jmp
add
add
cwtl
xchg
daa
push
dec
pop
sbb
add
fstl
iret
jg
add
mov
add
cmp
mov
add
clc
or
add
aam
pusha
mov
call
dec
and
add
mov
adc
dec
xor
jl
ja
add
xchg
scas
inc
cmp
mov
add
in
add
lahf
push
add
movsb
add
loopne
aas
shll
add
cmpsl
and
add
sbb
mov
add
int3
fimuls
jge
fwait
push
jae
cmpsl
nop
lock
mov
inc
cmp
mov
add
and
ja
xchg
mov
dec
cmc
mov
das
mov
add
add
push
xor
iret
and
add
or
jl
inc
sbb
jmp
xor
mov
ret
add
inc
gs
loop
inc
fwait
mov
das
jo
push
fcomp
out
enter
dec
mov
add
decl
sti
leave
and
add
add
adc
shrb
mov
add
add
ljmp
add
mov
in
ja
js
add
fstps
scas
add
pop
in
pop
mov
sub
cwtl
dec
arpl
std
sbb
sub
xchg
pop
addr16
xchg
inc
add
add
outsb
adcl
push
mov
push
dec
ja
arpl
lock
add
into
popa
mov
add
fsts
shlb
add
mov
cmp
cmp
cvttps2pi
add
call
add
pop
test
jge
add
jmp
sub
push
in
out
dec
int3
sbb
sbb
pop
ds
mov
add
xchg
subl
add
lods
add
push
repnz
mov
sub
add
arpl
add
xchg
push
arpl
outsl
pop
aad
pop
jle
jno
mov
add
movsl
mov
add
in
or
add
and
add
push
xor
ss
mov
in
push
into
cmp
movsb
add
in
xchg
adc
mov
push
add
insb
cli
mov
testl
xor
call
cmp
or
add
decb
pop
pop
sbb
leave
js
enter
mov
inc
jecxz
lcall
icebp
shrb
add
adc
mov
xor
std
or
ror
xchg
sbbl
dec
das
shrl
hlt
jns
add
xchg
test
sti
into
in
mov
add
rcrl
jp
xchg
push
in
dec
lock
add
out
sbb
test
add
cmp
xor
add
adc
push
mov
xchg
int
xchg
pop
inc
or
add
leave
xchg
mov
push
icebp
in
xchg
daa
jl
lds
push
xchg
add
out
sbb
xor
add
push
or
adc
jnp
lahf
and
add
stc
cmp
jne
pop
push
add
push
add
pop
inc
mov
cmp
dec
loope
add
ret
jp
add
add
dec
push
fcomps
les
mov
add
loopne
add
sbb
enter
ret
mov
mov
add
push
mov
insl
xor
rcrb
sbb
cmp
dec
jle
cwtl
lods
add
mov
xchg
sarl
inc
aad
lret
mov
fst
cmp
xchg
mov
ret
js
clc
xlat
aas
lahf
cltd
pop
jb
inc
lods
and
add
push
jg
shlb
dec
jbe
cmc
mov
xlat
loope
or
or
add
add
loope
add
test
add
sahf
mov
scas
ret
add
push
jae
in
int3
cmp
insl
dec
push
cmp
clc
stc
call
sbb
scas
in
jp
lods
xchg
or
xor
add
sbb
sub
push
or
mov
add
push
adc
les
xchg
inc
xorl
add
add
adc
mov
pop
rcrb
adc
addl
out
xchg
and
add
cmp
xchg
andl
add
dec
mov
in
xlat
sbb
leave
lods
bsr
sbb
or
mov
add
add
xor
outsl
mov
and
add
stc
lds
jne
mov
add
and
mull
sbb
jne
add
jl
bnd
and
add
add
insb
mov
add
cmp
lret
rcr
mov
xchg
add
mov
mov
jo
dec
add
inc
pop
rcrl
outsb
or
add
add
mov
jg
test
stos
les
dec
mov
add
in
mov
mov
add
jns
add
out
aam
adc
adc
cmpsl
nop
sahf
movsl
shll
cmp
fimull
fsubrs
xchg
mov
insl
or
add
lret
mov
add
int
shlb
add
lea
mov
jle
dec
jecxz
sti
push
out
jl
push
imull
add
mov
add
aas
fcmovnbe
jle
insl
lods
sub
add
ja
rcrb
mov
ds
inc
scas
push
add
mov
dec
cwtl
into
push
std
inc
mov
cmpsb
add
add
add
pop
mov
roll
inc
xchg
add
pop
and
shl
mov
mov
add
test
mov
cmpsb
add
jno
add
inc
pop
mov
pop
addb
add
sbb
ret
push
shr
mov
pop
mov
adc
add
testb
pop
push
jge
sti
mov
add
dec
and
add
add
xor
xchg
inc
ljmp
push
jb
divl
ret
jecxz
cmp
sbb
mov
int3
popf
push
push
dec
pop
ljmp
add
cmpsb
add
push
outsl
jo
mov
ret
add
out
push
xchg
add
movsl
pop
insl
dec
mov
push
sub
add
daa
xchg
add
andl
stos
add
pusha
aaa
and
add
fdiv
jb
icebp
add
add
push
ljmp
add
sbb
push
jle
adc
add
cmpsl
add
add
bound
push
add
inc
jle
test
mov
add
xchg
enter
mov
cmp
add
jp
add
mov
add
add
pop
mov
mov
jae
add
push
sub
add
addb
ljmp
push
add
add
out
xor
sub
add
mov
add
add
dec
jmp
push
xchg
inc
cmp
pop
ss
out
pop
rolb
in
push
mov
add
sub
je
add
bnd
add
add
dec
bound
das
sahf
imul
int3
lea
or
add
xlat
test
lahf
and
add
mov
add
push
cmp
aad
mov
add
jo
sbb
sbb
mov
out
cltd
mov
add
movsb
add
mov
sub
add
sti
nop
push
add
mov
jns
fwait
xlat
add
mov
add
test
lea
xor
sub
add
in
xchg
jle
dec
xchg
add
aaa
and
add
pop
addr16
jno
ret
add
repnz
add
je
adc
add
jbe
add
cmp
and
add
add
inc
imul
mov
test
add
fld
lret
rorl
fisubrl
mov
add
xor
imul
inc
or
add
add
fistps
pop
test
inc
sub
add
sbb
lret
add
add
std
add
add
cltd
out
and
add
dec
sub
add
mov
add
in
dec
pop
insb
cwtl
mov
das
out
push
push
jle
push
shlb
and
add
imul
xchg
mov
add
test
add
lds
cmpsl
jecxz
lcall
mov
shrb
sbb
mov
int
jns
insb
addb
jo
cmp
rcll
out
addl
pop
fisttpl
in
into
push
and
add
xlat
adc
dec
mov
inc
shll
loopne
dec
inc
lret
movsb
add
xlat
mov
inc
movsb
add
inc
out
sub
stos
add
mov
frndint
cwtl
fmul
fs
add
jle
push
push
adc
add
push
cmp
inc
cli
dec
popa
bound
add
rolb
add
cmpsl
add
add
sbb
add
pop
jp
stc
addl
add
ret
adc
mov
add
addr16
cmc
rcrb
outsl
xor
iret
in
xchg
sub
add
idivb
pop
fcomps
add
out
add
mov
testl
add
xlat
gs
jle
les
add
dec
in
xor
out
mov
jge
iret
int3
ficoms
jno
dec
xchg
shrb
push
stos
or
add
mov
dec
jge
movsl
mov
and
add
dec
mov
add
mov
ja
add
add
out
mov
add
sti
or
sahf
push
push
add
scas
add
cmp
enter
add
push
lods
add
or
imul
and
pop
cmp
fsubrs
dec
dec
cmp
cltd
repz
jl
xchg
inc
inc
mov
inc
cld
add
add
xchg
test
add
dec
mov
hlt
ret
push
jns
add
std
add
inc
mov
push
xlat
and
add
fldcw
and
add
sbb
test
add
arpl
out
push
std
out
in
fcmovu
mov
add
ljmp
js
add
push
mov
push
mov
add
add
add
fisubl
add
or
add
xchg
cmc
xor
add
add
orl
add
arpl
loop
inc
into
addb
mov
push
pushf
cmp
pusha
push
mov
cli
inc
cmp
shrl
psubusw
mov
xchg
add
fsubs
fs
jb
icebp
xchg
out
addb
pop
hlt
scas
push
clc
mov
push
mov
gs
mov
fwait
stc
cld
das
push
add
pop
cmp
dec
stc
sub
in
lret
xchg
add
pop
xchg
loopne
fwait
mov
add
pop
sub
add
add
outsb
inc
ja
push
and
add
fsubrs
push
mov
adc
repz
inc
mov
mov
push
jl
xor
daa
sub
add
fxch
mov
into
add
pop
cli
insl
lahf
add
jmp
cmp
add
fldt
push
xchg
lods
add
pop
or
xor
add
lds
dec
pushf
and
addb
pusha
rol
inc
fadd
xor
out
hlt
or
test
popl
shll
add
xor
lret
sbb
add
add
add
fmull
add
ficoml
or
add
fnstcw
scas
add
and
xor
cmpsb
add
data16
add
push
add
or
add
cmp
jp
xchg
add
stos
add
jecxz
sub
in
jno
add
addb
dec
dec
fsubr
icebp
jmp
add
or
in
push
sub
sub
add
jl
xchg
and
out
movsb
add
movsl
mov
add
idivl
lock
or
add
mov
leave
sahf
or
ds
xchg
scas
cmp
rorl
inc
or
mov
lahf
inc
mov
lods
add
sub
add
add
pop
push
idivl
lock
and
push
add
cmpsl
out
xor
jg
dec
jl
add
lret
add
sbb
mov
add
cltd
jne
ret
xor
xor
pop
and
jno
xlat
and
add
add
xor
popa
xor
mov
mov
jo
mov
add
mov
lods
test
mov
push
xor
aam
push
add
mov
test
sbb
add
addb
ss
pop
scas
add
test
add
jecxz
add
repz
ret
jns
add
dec
leave
xchg
sbb
push
fimull
jno
mov
add
add
jb
mov
add
jnp
dec
fldcw
enter
mov
insl
adc
scas
push
ret
mov
add
add
add
hlt
mov
notl
cmp
dec
mov
add
out
roll
add
add
out
add
inc
and
add
add
xor
add
xchg
ss
mov
add
add
jecxz
lcall
inc
test
rcrb
pop
test
add
out
cmc
je
test
add
or
imul
or
mov
add
cmp
add
mov
add
xor
add
add
cmp
dec
lds
or
add
jg
inc
out
imul
add
bound
sbb
in
arpl
lods
add
mov
cld
lods
add
sti
arpl
pop
repz
add
ss
leave
out
scas
add
popa
popf
jl
cltd
xchg
in
mov
lcall
add
inc
fstl
and
add
stos
lcall
fmulp
fmulp
jns
add
lret
pusha
shll
add
pop
inc
loope
cmp
out
mov
add
rol
fisubrl
add
add
add
pop
cltd
or
cmpsb
add
fsubl
ljmp
cmp
ss
mov
xchg
mov
ror
pop
push
add
mov
sub
and
add
mov
jle
mov
add
jg
fxam
mov
pop
clc
aad
dec
mov
add
rolb
dec
xor
jae
add
dec
xchg
leave
sarb
lods
or
add
insl
add
jmp
adc
loopne
cmpsb
add
adc
dec
inc
sbb
add
jno
ret
loopne
cmp
push
fidivrl
or
lret
aam
and
add
das
fldenv
dec
adc
inc
mov
test
add
movsb
add
jmp
sub
add
scas
add
dec
int3
jg
inc
into
push
dec
mov
add
scas
scas
jne
add
mov
and
das
insb
push
add
mov
leave
pusha
popf
push
pop
cld
mov
int3
jnp
xor
dec
xchg
out
cmpsb
add
mov
add
les
add
push
shrl
add
popa
jo
add
add
xor
loopne
cmp
in
add
jno
rcrb
adc
add
dec
push
xor
cwtl
push
je
inc
cmp
mov
loopne
fwait
push
cmpsb
add
addb
mov
add
sub
add
add
sub
pop
cwtl
pop
or
aas
jmp
add
mov
and
add
sub
add
xor
insb
out
rcll
cmp
push
pop
push
add
inc
adc
jnp
add
pop
xor
pushf
xchg
and
mov
pop
jmp
sub
add
popa
in
cli
call
xchg
mov
or
std
rcrl
hlt
and
add
dec
rcll
stos
mov
mov
inc
fnstenv
push
add
inc
adc
sbb
pop
pop
icebp
addb
rorl
add
add
and
add
push
sbb
ret
ds
out
xor
loop
outsb
xor
add
mov
or
sbb
movsb
add
mov
add
pop
pop
mov
and
ret
jmp
or
in
dec
cmp
or
add
add
imul
data16
test
xor
or
add
add
or
jnp
in
arpl
out
push
jns
inc
pop
mov
mov
add
outsb
add
test
movsl
jmp
adc
hlt
ret
add
cltd
pop
pop
dec
aas
sahf
push
out
mov
add
jo
sub
add
cli
fisttpl
test
or
add
popa
dec
xor
pop
outsb
popf
int3
cmpsl
faddp
add
add
cli
bound
jne
sub
add
adc
das
shll
xor
pop
push
insb
mov
and
rolb
pop
nop
or
add
add
int3
sti
push
adc
mov
add
cmpsl
testb
add
mov
xorl
add
jno
lret
sbb
cmp
xchg
addb
or
inc
test
ss
mov
add
push
push
lret
notl
ja
testl
test
add
enter
add
add
add
movsl
dec
aas
aad
imul
add
add
add
addb
adc
sbb
jg
lock
push
and
cmp
aaa
jg
adc
add
mov
add
sbb
pop
mov
mov
test
sahf
data16
add
dec
pop
insb
addr16
int3
dec
jne
mov
mov
into
mov
add
inc
cltd
repz
int
add
ja
jl
add
mov
xchg
push
aam
fstp
add
pop
imul
add
movsb
add
xchg
add
xchg
and
lods
cmp
add
addr16
cwtl
mov
dec
les
lcall
mov
add
or
repnz
add
cmpsl
push
cmpsl
ljmp
sti
subl
add
fwait
and
add
sub
mov
fs
or
add
pushf
xor
add
stos
add
mov
jle
and
add
and
add
cli
incb
cltd
fcmovnbe
cmpsb
add
cmp
dec
push
add
add
sbbl
add
xchg
cmp
sbb
xchg
push
rcl
or
add
daa
dec
mov
add
call
cmp
dec
aaa
popa
ret
in
ljmp
lea
add
jmp
add
add
lret
hlt
xchg
add
mov
sub
add
or
xchg
jo
mov
pop
rorl
add
iret
inc
call
loope
int3
cmp
mov
and
add
fldenv
add
add
in
push
pop
dec
or
add
dec
xchg
inc
sub
add
xchg
jno
add
sbb
insb
bnd
mov
adc
fidivrl
mov
add
push
test
clc
je
lds
push
test
add
and
add
daa
into
jle
inc
dec
repz
out
rorb
push
je
stos
add
stos
add
scas
cmpsb
add
pop
mov
test
add
and
adc
mov
outsl
cltd
fucom
fwait
inc
fwait
and
push
nop
push
add
loop
sbb
push
popa
fwait
repz
ljmp
lret
out
mov
ret
xchg
adc
push
sbb
je
xchg
rcr
cmp
add
movsl
ret
fmul
sahf
loope
mov
add
push
jns
sbb
add
lods
add
mov
add
in
add
sbb
nop
sarb
hlt
jge
in
jb
scas
xchg
xor
add
add
lret
dec
iret
and
add
ljmp
mov
and
jns
push
sbb
pusha
xchg
test
add
mov
xchg
sub
add
add
jnp
inc
jecxz
imul
or
rol
fcmovb
mov
insb
pop
outsb
adc
aas
mov
push
inc
cvttps2pi
add
cli
movsl
cli
les
jmp
xchg
insl
ja
jge
stos
mov
add
pop
push
pop
ret
add
mov
add
and
add
jbe
hlt
jbe
pop
addb
daa
push
pop
adc
add
ja
arpl
xor
xor
cmpsb
add
lods
add
xchg
or
adc
sub
add
xchg
addb
icebp
call
jl
sub
add
loop
in
cld
sti
mov
xor
push
xor
add
xchg
add
xor
test
adc
add
mov
adc
mov
add
mov
xor
xchg
mov
add
push
add
test
add
add
push
in
pcmpeqd
add
push
push
jno
in
icebp
hlt
nop
pop
rclb
push
add
xchg
negl
add
pop
inc
pop
xlat
punpcklbw
enter
xchg
outsl
cmp
push
inc
gs
jp
jo
adc
ret
and
sahf
add
jnp
in
ret
pop
jmp
add
push
add
dec
and
add
ret
vpsraw
or
add
jecxz,pt
add
cmp
inc
dec
sbb
movsb
add
cmp
cmpsl
je
add
add
push
insl
and
sub
add
fsubp
fstpl
cmp
fildl
xor
add
add
mov
add
add
cmp
mov
mov
stos
add
jo
addb
mov
mov
add
or
xor
add
xchg
mov
add
incl
xchg
cli
out
inc
addb
loope
jae
mov
scas
add
ljmp
pop
pop
xor
add
and
adc
xor
cwtl
cld
mov
cltd
sti
xor
jbe
add
add
mov
sub
add
scas
add
fdivrl
js
sub
add
stos
fsubs
add
or
add
pop
arpl
add
scas
add
sti
stos
ficoms
in
bound
aaa
adc
outsb
inc
push
cmc
addb
jbe
mov
add
ffreep
dec
add
add
dec
push
mov
addr16
cmp
mov
out
ljmp
sbb
mov
add
dec
lret
jno
sub
sub
mov
add
testb
add
outsl
icebp
scas
add
mov
add
enter
movsw
adc
inc
ljmp
jecxz
loope
xor
fsubs
and
vmovdqa
add
push
add
enter
sbb
add
or
jg
cwtl
out
lods
add
xor
in
add
pusha
insl
mov
das
add
add
mov
lret
insl
dec
or
xor
inc
pop
cmpsb
add
out
jecxz
jbe
nop
aam
clc
push
cwtl
int3
aad
push
rolb
add
and
add
sbb
push
insb
xchg
lcall
sub
xchg
repz
add
dec
adc
std
mov
pop
dec
or
add
rolb
mov
mov
mov
jns
cmp
stc
shrb
cld
aaa
push
xchg
add
fbstp
test
add
cmpl
add
add
add
sbb
mov
and
add
ljmp
mov
push
jp
add
dec
int
push
add
jnp
addb
pop
xor
mov
orl
mov
push
add
sbb
jns
xlat
push
bound
nop
ret
loopne
mov
jg
add
scas
mov
daa
cmp
and
out
pusha
icebp
dec
addr16
add
add
lret
lods
and
add
sti
mov
loop
mov
dec
cmpsb
add
js
adc
add
pop
addb
pop
cmpsb
add
lahf
mov
aad
push
add
push
loop
jg
iret
pop
shr
dec
lods
add
dec
mov
mov
sti
out
icebp
and
add
add
push
out
fnstenv
dec
addb
pop
fistl
add
mov
add
add
aas
sub
add
icebp
push
pause
sub
add
inc
test
lods
pushf
lret
xor
xor
dec
mov
add
mulb
cltd
hlt
jp
and
lods
jle
mov
ss
jg
addb
stos
add
or
add
mov
jecxz
cli
jmp
test
addb
cmp
add
push
cmpsl
push
and
add
ret
mov
sub
add
cmp
test
add
dec
jmp
add
imul
jne
sub
iret
xchg
dec
mov
or
lcall
fiadds
add
cld
jnp
mov
add
sbb
add
pop
add
call
fidivrl
push
or
pop
hlt
cmp
pushf
je
xchg
or
add
mov
add
add
add
push
add
cwtl
mov
or
add
mov
push
add
clc
jne
fcmovbe
push
sub
add
int3
adc
addb
lods
fcmovne
pop
sbb
jns
dec
mov
mov
add
aam
or
add
mov
xor
stc
add
add
push
mov
loop
add
aad
add
lods
mov
add
dec
mov
scas
inc
mov
add
adc
addb
inc
pop
aad
mov
lock
add
pop
hlt
adc
sbb
pop
xchg
or
dec
push
nop
xlat
enter
mov
jns
testl
xor
lea
gs
aam
push
cld
gs
mov
xchg
push
xchg
add
lds
mov
jp
add
add
add
enter
add
jno
mov
cmp
push
lcall
dec
addb
jo
add
add
add
imul
dec
inc
jecxz
pop
jle
and
add
je
xchg
rolb
xlat
ret
fistpll
add
adc
sub
inc
jae
mov
loopne
aad
add
sarb
pop
add
push
xor
hlt
dec
cltd
dec
sub
add
adc
cmp
data16
add
add
addr16
icebp
or
add
mov
mov
jmp
add
xchg
insl
sbb
sub
add
add
xchg
or
add
scas
push
add
pop
nop
cmp
aad
add
jp
mov
add
add
and
xor
add
out
add
test
add
add
lods
add
outsl
sub
add
inc
mov
std
int
in
mov
pop
ret
and
add
hlt
aas
movsb
add
inc
inc
pushf
push
adc
testl
pop
sub
add
in
jbe
mov
sub
add
xchg
filds
xlat
sub
push
add
fucomip
stos
add
jecxz
inc
inc
jecxz
in
add
or
add
mov
jne
mov
enter
fisubs
push
test
add
xlat
adc
addb
xor
jp
das
lahf
sbb
add
sub
mov
lock
sysenter
movb
pop
adc
adc
add
add
push
add
cwtl
sahf
sub
add
aas
adc
jo
test
xchg
xchg
aaa
les
jne
bound
mov
xlat
add
xlat
dec
mov
add
dec
sarb
or
add
int3
cld
mov
add
sbb
fldenv
add
pop
out
push
or
add
add
xchg
lock
inc
hlt
xor
test
xor
inc
int3
mov
add
or
arpl
mov
add
xor
mov
jle
mov
xchg
insb
out
pop
sub
or
cmc
mov
sti
ds
ror
and
add
jae
repnz
sbb
popa
in
je
jns
xchg
add
dec
adc
add
out
dec
adc
mov
add
add
roll
push
outsl
lock
mov
jbe
mov
add
pusha
sub
mov
add
int
mov
xchg
cwtl
lock
je
into
das
mov
mov
mov
cmp
fwait
pop
sahf
xchg
cmp
pop
dec
xchg
imulb
jae
jne
iret
popf
jp
cmpsb
add
call
lahf
in
add
or
xchg
insl
pop
push
insl
push
and
add
movsl
jae
insl
hlt
or
add
add
bound
aas
fisttpl
pop
cwtl
jp
jl
xorl
sub
xchg
mov
test
dec
mov
add
and
add
add
mov
push
add
setne
popa
mov
xor
jecxz
add
pop
jnp
dec
gs
rcl
mov
add
je
jg
inc
insl
mov
add
xor
cmp
data16
xor
push
in
cmc
jl
js
dec
dec
push
fcomi
xchg
pop
push
add
add
mov
mov
dec
or
popl
js
test
add
sbb
dec
cltd
mov
add
repz
adc
add
test
mov
xor
out
sub
add
or
add
popa
pop
push
loopne
add
push
fwait
cmp
loopne
add
push
ja
in
lods
add
pop
or
add
adc
xchg
cmp
jne
sarb
add
add
push
add
lret
mov
add
jns
insl
sahf
xor
add
sub
add
cwtl
mov
and
and
rcll
cmpsl
hlt
jae
stos
add
aaa
inc
xor
call
add
dec
jno
xor
movsb
add
dec
mov
imul
add
or
xchg
jo
add
xlat
and
add
jg
sub
add
add
cmpsl
or
test
dec
mov
rcr
pop
dec
push
add
aad
cmc
pop
xchg
add
add
push
imul
int
add
mov
int
cmp
mov
add
mov
mov
mov
add
insl
aam
add
jmp
add
into
filds
sub
imull
add
mov
mov
lret
ret
add
repnz
mov
mov
lret
ret
add
jecxz
add
sarb
add
shlb
cmp
cmpsb
add
push
loop
add
and
add
test
push
mov
dec
xchg
and
pop
mov
aaa
and
movsb
add
cld
daa
lret
loope
add
add
add
jge
cmp
push
arpl
sbb
imul
loope
aam
cmpsb
add
adc
cld
mov
faddp
mov
or
iret
add
add
jae
xor
add
ss
xlat
psubusw
gs
je
ljmp
lods
add
ljmp
mov
dec
jge
vphaddubw
add
add
inc
ljmp
pop
test
add
nop
add
add
int
loope
gs
lret
and
add
jns
out
flds
mov
inc
pop
jmp
add
jo
lahf
loopne
in
daa
iret
adc
fsubrl
push
add
out
sbb
imul
add
add
jmp
or
add
add
add
xchg
add
bound
push
and
add
add
xor
dec
sbb
add
xchg
add
pushf
inc
pop
xchg
arpl
add
lds
pop
test
add
leave
sub
add
inc
mov
cmp
in
icebp
push
out
mov
addb
lret
add
and
add
sbb
outsb
dec
inc
add
add
jbe
fcmovnb
pop
adc
xchg
mov
pop
jns
add
inc
sub
inc
xchg
sbb
add
insl
xor
clc
mov
inc
push
jmp
imul
repz
les
add
stc
push
cmpsb
add
pop
inc
jg
lret
psrlw
notl
inc
mov
mov
add
jae
jno
dec
jge
jns
test
pop
lods
add
sarl
push
les
repz
sub
cmp
popf
mov
pop
ja
daa
dec
aas
cmp
in
add
pushf
aad
add
sub
ret
sbb
xchg
and
add
into
or
add
add
add
out
aas
xchg
outsl
inc
shl
xchg
in
clc
pop
in
scas
adc
mov
add
js
jb
pop
dec
fisttpll
in
mov
add
in
mov
push
insb
or
mov
pushf
shrb
arpl
repz
add
cmp
cli
adc
xor
and
scas
add
push
jp
push
fidivl
mov
pop
ret
pop
xchg
pop
jmp
add
mov
rcll
push
aaa
xchg
inc
push
pop
mov
add
fstpl
int
imul
stc
pusha
sbb
add
cmp
add
test
lods
add
cli
add
mov
add
div
inc
jo
xchg
in
inc
push
mov
add
add
addb
daa
cmpsl
inc
je
sbb
adc
add
and
add
sub
fmull
add
insl
sub
jo
dec
test
add
inc
mov
jecxz
ss
cmpsl
lahf
aas
sub
add
add
pop
pop
icebp
gs
jg
into
hlt
push
das
cmp
imul
pop
add
add
popf
aam
add
test
test
add
in
mov
jecxz
xchg
ljmp
xchg
add
add
push
add
add
adc
fwait
or
add
dec
pop
outsl
testl
addb
and
add
add
jne
out
test
add
add
inc
scas
add
sub
add
addb
mov
push
insl
addb
mov
or
add
insb
mov
into
mov
add
mov
shl
xor
mov
mov
push
add
js
mov
add
push
mov
xor
cwtl
bound
add
pop
and
add
xor
add
loopne
cmpsl
push
mov
mov
add
push
mov
add
imulb
dec
shll
cli
mov
loop
add
xchg
sti
ret
inc
lret
sbb
add
push
mov
mov
fistpl
lock
inc
out
popa
out
jmp
bound
mov
add
popf
aad
add
push
add
xchg
stc
jne
and
inc
jle
pop
or
push
rcll
negb
sub
jmp
cmc
dec
mov
nop
incl
add
dec
add
fdivrs
inc
xlat
or
ficompl
pop
cmp
add
sbb
scas
pop
pop
and
pushf
test
insl
xor
pop
movsl
loop
xchg
cld
or
add
int3
sbb
mov
sub
mov
add
cwtl
clc
or
add
add
out
mov
add
xchg
add
add
cmp
xlat
xor
add
lahf
adc
mov
and
add
repnz
add
test
add
add
mov
sub
add
sbb
mov
mov
insb
mov
add
aas
roll
inc
mov
ds
xor
fiadds
popf
sahf
movsb
add
push
dec
cmc
cmc
mov
add
mov
fstpt
add
mov
push
cmpsb
add
mov
jne
js
shr
nop
xor
adc
mov
add
repnz
add
sub
add
adc
sub
gs
dec
push
push
push
add
cmp
mov
rclb
out
push
jno
ret
sbb
xor
adc
add
aam
hlt
jno
dec
push
jb
jno
inc
lods
add
jl
mov
loopne
in
add
dec
notb
hlt
push
and
sbb
add
add
xchg
push
add
dec
cmp
add
dec
sbb
das
loopne
iret
hlt
pushl
xchg
sub
add
add
push
mov
push
inc
push
mov
push
add
add
push
dec
sub
add
mov
add
lahf
jl
jle
fldl
mov
add
push
fstps
add
adc
add
testl
pop
nop
sub
add
lds
test
leave
adc
js
mov
aam
xchg
add
clc
mov
or
add
add
mov
pusha
icebp
cmp
out
pop
add
add
or
push
cmp
pop
adc
add
add
add
aam
add
imul
mov
dec
or
test
add
push
stc
in
movsl
xchg
push
nop
mull
sbb
mov
add
xchg
loope
push
movsl
or
add
iret
fisubs
add
fwait
sub
add
add
cmpsb
add
inc
in
andl
dec
lret
push
lods
xchg
std
add
add
add
test
pop
dec
imul
jbe
jl
mov
pop
mov
lret
add
test
add
bound
mov
dec
xchg
sub
add
arpl
pop
arpl
loope
dec
pop
mov
add
loop
test
xchg
inc
or
add
mov
push
inc
push
in
loopne
xchg
mov
sub
int
dec
fldenv
add
jns
scas
cmp
cmpsl
jo
or
add
adc
jnp
sahf
add
imul
pushf
das
cld
add
add
sbb
cmc
lahf
add
add
push
aaa
jne
add
stc
mov
out
mov
sub
add
add
dec
dec
pushf
sub
add
jnp
mov
ror
jo
pand
pop
vmovsd
adc
add
pop
lcall
add
adc
or
add
pop
fisubrs
cld
movsl
mov
xchg
cmpsl
pop
sbb
cmp
xchg
add
popl
out
je
pop
icebp
pop
test
add
adc
inc
out
pop
jge
les
jle
pop
js
sbb
jp
hlt
or
push
shl
insl
jnp
hlt
jl
mov
jmp
sub
jle
add
sub
add
sbb
outsb
in
fwait
aam
pusha
add
add
dec
add
add
xor
cmc
cmc
je
dec
out
out
jb
jmp
mov
sbb
arpl
add
add
mov
add
add
add
pusha
packssdw
add
cmp
iret
test
add
cmp
ljmp
mov
sub
add
outsb
pusha
pop
and
add
cmp
js
push
stos
add
test
add
sub
add
add
ds
add
add
leave
aam
add
dec
pop
adc
cmp
shlb
cmpl
loop
clc
push
dec
lret
add
cmpsb
add
inc
sbb
loop
inc
sub
add
test
add
add
fcoms
adc
mov
add
push
jbe
dec
cmpsl
cli
push
mov
jle
movsl
sbb
or
add
std
lahf
sahf
and
add
add
loopne
scas
add
inc
enter
adc
lds
and
mov
pop
and
add
ljmp
dec
outsl
xchg
imul
and
sbb
pop
push
xchg
inc
fmuls
add
clc
add
add
gs
jo
out
stc
and
add
cmp
adc
mov
add
movsl
iret
pop
fstpl
and
add
das
cmp
sbb
shl
stos
or
add
jns
popf
xchg
xchg
imul
sub
push
xchg
sti
aad
sbb
cli
iret
outsl
stos
add
out
repnz
add
add
push
inc
mov
xchg
push
jno
add
pop
in
ss
add
fstpl
jo
out
xor
mov
xor
add
add
inc
push
test
add
iret
and
add
mov
add
loopne
dec
mov
jmp
add
lods
dec
inc
in
dec
jl
pop
or
add
in
xchg
jp
out
bound
mov
jb
push
inc
fcoml
mov
cmp
add
add
clc
out
add
sbb
xor
out
add
mov
enter
xchg
dec
sbb
add
movsl
mov
add
xor
into
fdiv
mov
fisttps
sbb
jae
loope
cli
xor
push
add
out
mov
add
shrl
add
cli
lahf
loopne
js
xchg
jae
add
mov
add
scas
add
mov
sub
cmp
inc
dec
push
jo
mov
aaa
cmc
ret
test
ret
mov
lods
add
out
mov
add
add
add
cltd
xchg
add
sbb
add
aas
movsb
add
fwait
shl
push
in
mov
pop
sub
jmp
sarb
pop
sti
mov
add
out
fidivrl
ss
out
or
inc
sbb
subl
rorb
cmp
fldenv
jl
add
out
push
aaa
jmp
ja
xor
lods
mov
add
out
aam
pop
dec
repz
jecxz
jmp
dec
ja
das
fnsave
std
xchg
push
dec
xchg
adc
das
mov
stc
mov
push
inc
sub
add
insl
mov
cli
jp
cmp
add
sbb
cmp
das
dec
addr16
subl
jmp
ret
scas
jo
add
jb
test
add
xor
add
add
dec
mull
dec
repz
mov
xchg
mov
lret
sahf
push
cmpsb
add
sahf
push
jne
mov
inc
push
jmp
fwait
leave
adc
iret
insl
faddl
add
int3
mov
movl
sub
add
inc
adc
add
push
test
add
ror
popa
fs
mov
add
xchg
pop
jge
jb
sbb
mov
sub
add
lcall
add
aaa
imul
les
subl
pop
mov
mov
add
addr16
mov
xchg
stos
add
and
add
in
jmp
add
xchg
test
sbb
sub
sahf
stos
add
xor
mov
xor
stc
xchg
dec
mov
add
jl
add
loopne
sbb
pop
insl
pusha
in
or
movsl
or
mov
out
adc
arpl
in
xor
inc
repnz
ljmp
xchg
jns
popf
push
jg
jb
add
push
dec
dec
pop
out
push
les
xlat
lea
pop
inc
in
inc
lods
add
daa
mov
add
add
add
push
jns
cli
jnp
add
push
into
dec
dec
push
pop
hlt
pop
and
add
notl
add
ja
outsb
mov
add
mov
add
adc
mov
std
outsb
sub
add
enter
add
push
imul
dec
adc
push
sbb
add
mov
pusha
mov
jns
sub
add
push
add
mov
add
pop
pop
call
sbb
add
push
push
jle
xchg
add
sub
fcoml
add
cmpsl
sbb
lret
cmp
add
lods
ret
jno
nop
call
das
mov
sub
dec
negb
pop
scas
push
add
loope
add
mov
hlt
and
add
movsb
add
ja
mov
add
or
xor
add
stos
std
clc
test
push
cmp
jb
or
add
enter
add
lret
xlat
and
fprem1
dec
aad
gs
add
add
ficompl
or
add
rclb
std
les
xlat
out
cli
out
pop
daa
mov
sti
xchg
gs
out
icebp
and
add
lret
push
cmp
sbb
add
add
add
add
or
add
add
aam
mov
add
pushf
repnz
aaa
or
adc
test
sub
add
add
xor
jns
add
cwtl
jg
imul
add
dec
mov
insb
dec
mov
push
or
std
dec
xchg
mov
mov
pop
sub
xchg
mov
ja
mov
loope
inc
dec
or
add
mov
aaa
inc
jp
fmuls
add
adc
add
add
add
mov
scas
add
stc
rclb
cli
cmp
int
dec
mov
pop
cmp
pop
adc
and
sarb
adc
fimull
pop
push
jae
mov
mov
fdivl
push
popf
fstpt
cmpsb
add
jge
cmp
fstpt
xor
sar
sbb
add
xchg
add
add
add
inc
pop
pop
mov
outsb
ss
or
add
dec
cmp
add
add
xchg
in
loop
sub
dec
outsl
orl
outsb
xor
xchg
mov
cmpsl
ds
loopne
in
add
addr16
stos
add
dec
dec
pushf
pop
mov
jnp
pop
adc
or
push
loopne
stos
add
loop
add
add
add
lahf
lret
add
in
lret
shrl
stos
pop
jecxz
mov
mov
xchg
aaa
lret
add
inc
pop
stc
or
add
add
incl
add
add
push
icebp
das
jg
or
add
jl
mov
enter
repnz
xchg
add
call
xorl
cwtl
jp
mov
out
mov
add
jno
lret
mov
add
mov
add
insl
call
scas
add
addb
popa
push
xor
add
arpl
add
dec
addl
inc
cltd
push
aad
mov
aaa
cli
faddl
pop
repnz
jnp
lock
mov
add
enter
dec
mov
add
sub
fistl
mov
idivl
add
divl
jle
push
push
add
into
pop
mov
or
add
sub
mov
add
cltd
and
add
addb
lcall
adc
int3
xor
add
adc
add
and
add
aad
sahf
sbb
addb
adc
out
addr16
lods
add
inc
repz
jbe
add
push
lret
inc
push
add
xchg
add
add
dec
js
xchg
push
sbb
xor
xor
inc
js
out
mov
add
push
xchg
out
loop
stos
add
in
dec
test
add
scas
or
push
lcall
cld
add
add
imulb
ds
jg
mov
add
mov
add
or
add
data16
mov
add
dec
mov
or
add
and
jle
test
add
xor
loopne
xchg
push
insb
mov
addb
jp
jecxz
ja
js
fwait
and
add
aaa
xchg
push
sahf
xchg
sub
jle
xchg
not
add
add
cwtl
hlt
in
xor
add
in
jne
sarb
out
rorb
js
ret
xor
adc
fstl
add
repnz
sbb
add
add
xchg
push
mov
add
or
add
mov
add
sti
and
add
pop
add
and
fldcw
add
sub
add
leave
xor
inc
ret
add
inc
out
xor
sbb
xchg
xor
sbb
add
rorb
add
sbb
add
je
add
push
add
std
rorb
aaa
or
add
mov
call
adc
adc
mov
add
lahf
cmp
add
sub
xchg
pop
roll
add
push
jmp
ljmp
mov
sub
add
mov
xchg
inc
fstl
pop
outsb
lock
clc
or
push
xlat
inc
fmuls
sbb
add
add
sbb
rcl
add
add
xor
testl
repz
add
out
dec
xchg
dec
jmp
inc
jae
mov
xchg
negl
jge
outsb
ret
shl
mov
sti
mov
add
cmp
pop
scas
push
scas
pop
lahf
out
cmpsl
jmp
add
jno
sub
add
cltd
je
add
pop
and
add
jl
xchg
sarl
fisttpl
dec
imul
add
sti
jnp
mov
add
dec
dec
addb
and
add
jb
add
into
xchg
xchg
pop
adc
add
sbb
mov
jb
add
fs
inc
push
stos
push
imul
pop
inc
xchg
rcrb
xor
mov
cmp
pushf
cmc
frstor
pusha
inc
push
pop
xchg
pop
inc
mov
add
add
mov
add
jno
mov
notl
add
dec
cmp
sbb
add
cmp
jle
lea
adc
imul
popa
shl
lahf
push
sbb
inc
mov
ljmp
add
add
ljmp
xchg
add
or
and
add
psubsb
rclb
mov
add
inc
push
jge
repnz
add
pop
mov
add
add
pushf
mov
leave
jns
rorb
add
fists
inc
pushf
ret
pop
push
mov
nop
movsl
push
add
sahf
jne
into
xchg
test
add
cwtl
push
iret
ljmp
add
js
mov
cld
imul
add
xor
std
idivb
jb
pushl
pop
in
cmpsb
add
jb
in
loopne
add
xchg
test
add
jmp
add
testb
addr16
push
cld
pusha
sub
mov
add
ficoml
dec
xchg
lods
add
scas
add
push
push
jg
pop
pop
outsl
pop
ffreep
add
add
fbstp
push
xchg
ret
xchg
mov
xor
mov
add
je
add
sbb
cmpsb
add
mov
add
bound
mov
ret
icebp
sbb
add
enter
rsm
add
insl
inc
aad
les
add
add
add
add
add
jp
mov
jae
int3
outsl
sahf
cmp
push
and
mov
or
add
aad
xchg
aas
push
sbb
jecxz
dec
repnz
in
mov
mov
add
adc
nop
arpl
fbld
add
xor
jo
mov
mov
inc
mov
dec
sub
add
cmp
mov
cmp
add
fnstsw
aam
xchg
mov
stos
push
sahf
lea
pop
imul
inc
mov
mov
push
cmpxchg
add
lahf
push
loopne
mulb
sbb
mov
push
pop
jp
imul
add
and
sarb
or
sub
add
rcrl
aam
sub
add
push
cltd
mov
stos
add
enter
add
dec
cmp
ss
or
add
inc
test
out
shlb
add
add
add
xchg
mov
sbb
pop
in
and
add
add
in
pop
push
add
lods
in
push
adc
in
cmp
repz
loop
fstps
fdivl
pop
fwait
lret
sbb
mov
add
add
pusha
pop
jne
lret
add
mov
lods
adc
mov
add
add
xchg
ja
imul
in
ljmp
add
sub
add
movsl
lock
jb
and
addb
insl
mov
scas
xchg
add
add
std
mov
jb
aad
jle
add
dec
test
add
ja
sete
add
mov
ja
cmp
outsl
pop
ds
add
add
jge
cmp
add
icebp
add
add
add
sti
call
stc
jne
add
imull
jnp
add
push
ljmp
mov
add
cmp
and
shr
sub
out
in
mov
ds
pop
std
out
int
shrb
add
add
cmp
test
add
add
addl
adc
add
cmpl
test
add
add
pusha
les
inc
mov
push
stc
mov
popw
xchg
sbb
in
pop
into
sub
add
push
call
add
les
scas
xorl
mov
mov
adc
dec
xchg
add
aam
hlt
mov
mov
dec
movsl
push
addb
and
add
mov
or
add
jo
outsb
xor
sti
pop
gs
push
call
add
inc
mov
adc
das
out
iret
mov
add
fwait
lea
add
sbb
xchg
xor
mov
push
cld
mov
add
add
lahf
cmpsl
ffreep
inc
or
add
mov
inc
pusha
shl
leave
xchg
sub
dec
fildl
orl
add
pop
pop
orl
add
pop
mov
add
movlps
sub
add
add
push
test
add
mov
sbb
mov
and
dec
inc
imul
add
fbld
jns
loopne
addb
mov
fbstp
aad
add
rorb
add
imul
push
add
dec
mov
sbb
test
xchg
add
push
test
add
and
add
pop
sahf
daa
push
xor
jg
push
add
lret
mov
adc
add
shrl
jns
add
jg
jle
addb
mov
iret
aas
push
dec
test
add
andl
add
add
sbb
call
or
add
fwait
lock
and
mov
stos
add
mov
add
shrl
aaa
add
jne
imul
add
ja
add
lds
push
imul
dec
sbb
xlat
pop
pop
cmpsl
sbb
sub
adc
add
add
mov
sti
xchg
rcr
xchg
push
insl
enter
push
and
add
mov
mov
dec
cmp
adc
out
jp
push
into
test
add
inc
jp
insb
xchg
loopne
out
cmpsb
add
mov
mov
rcrb
add
adc
add
imull
mov
stc
movsb
add
inc
adc
mov
inc
jp
or
add
add
rcr
or
add
xchg
push
add
jl
add
insl
insb
mov
ds
bound
sbb
out
hlt
xor
jne
jae
insb
stos
add
les
push
jp
jle
popf
pop
and
add
mov
dec
pop
mov
mov
add
pop
out
sar
mov
out
sbb
mov
add
stc
addr16
jns
jns
rol
in
fdivrs
dec
add
add
push
mov
int
das
std
pop
gs
addb
adc
push
fwait
adc
add
add
push
jle,pt
js
push
repz
xchg
sub
add
add
divl
call
por
cmpsl
or
add
add
mov
mov
cmp
push
add
or
mov
stos
add
ror
mov
add
repz
sub
add
pusha
lret
xor
mov
mov
les
dec
imul
addb
out
adc
mov
jbe
mov
add
ja
add
push
popl
xor
sbb
mov
imul
addb
xor
addb
mov
add
int
sub
add
sbb
xor
arpl
jge
add
xor
cmpl
movsb
add
sub
adc
xchg
add
jle
stc
xchg
mov
imul
arpl
add
add
lds
outsb
xchg
mov
add
pushl
xchg
sti
jl
add
and
dec
lea
lock
sbb
push
and
xchg
iret
xchg
mov
out
mov
dec
int
dec
push
ret
fstl
sti
mov
add
shlb
inc
sub
push
add
inc
xor
int
xchg
out
inc
ficoms
and
add
test
add
call
imul
leave
lcall
add
adc
jno
pop
or
add
add
pop
loope
dec
int3
inc
in
jmp
mov
enter
or
aaa
imul
add
xor
daa
outsb
idiv
loopne
stc
and
add
add
dec
mov
je
imul
sbb
stos
add
incb
jecxz
add
repz
mov
mov
and
add
aas
addl
add
push
movsl
imul
lods
add
xchg
fcomps
mov
add
jo
xor
dec
pusha
lock
cmpsb
add
aam
mov
add
jg
cwtl
jmp
dec
and
add
push
clc
addr16
jge
add
xchg
mov
add
and
mov
push
jbe
xor
cmpsb
add
cli
sub
add
add
into
adc
xchg
jecxz
add
add
add
add
into
mov
add
andl
sbb
add
icebp
push
bound
fimull
movsb
add
sar
mov
add
add
int
addb
pop
mov
add
enter
dec
call
mov
mov
cmc
dec
addb
das
sbb
add
nop
test
add
lcall
popf
test
add
jecxz
add
sbb
add
adc
scas
and
add
addb
add
push
xchg
aad
xor
sub
add
sbb
mov
add
dec
mov
jle
add
jo
stos
pop
pop
sldt
add
dec
mov
repnz
lods
mov
add
scas
add
retw
inc
mov
stos
add
iret
jnp
lds
cmpsb
add
popf
sti
inc
inc
adc
stos
cmp
xchg
and
add
and
jge
mov
add
add
xchg
ds
pop
fucomi
into
or
stc
cmp
inc
daa
cmp
lods
add
cmpsb
add
lcall
lahf
and
les
add
push
lahf
adc
pop
mov
add
adc
cli
scas
add
rol
inc
adc
mov
sbb
into
subl
shl
stos
rol
popa
aad
stos
add
inc
mov
xor
popl
pop
mov
adc
sub
add
add
pusha
dec
leave
add
loope
pop
test
mov
add
jo
out
movsl
inc
scas
add
jae
lods
ljmp
or
add
adc
mov
add
cmp
bound
dec
rcrb
jns
pop
enter
scas
add
roll
lret
int
dec
insl
in
adc
inc
pop
sub
add
sub
add
xor
pop
sahf
jle
add
cwtl
mov
mov
add
jb
rcl
cltd
cli
xor
fisttpl
mov
add
test
out
add
js
cmc
jmp
fld1
clc
addr16
cmp
repz
and
rcrl
fmul
nop
push
sbb
mov
sbb
out
jno
repnz
fsubrp
lret
in
mov
add
mov
pushw
jns
cmp
add
push
leave
loopne
add
dec
cli
or
pusha
push
lds
push
add
add
add
clc
inc
push
sub
ja
adc
call
cwtl
lcall
in
icebp
jbe
add
inc
arpl
inc
dec
iret
fisubs
lret
movsl
inc
xchg
fwait
mov
push
dec
adc
fistl
cwtl
imul
add
jmp
sbb
add
lods
add
or
add
push
inc
mov
add
pop
rcrl
add
xor
sahf
or
ds
sub
xchg
jns
jle
fmull
dec
call
test
add
sarl
add
negb
repz
imul
jne
in
stos
add
movd
adcl
fwait
jmp
enter
nop
sbb
clc
mov
sub
pusha
sahf
and
add
test
lock
add
mov
add
jno
add
lock
jns
aas
mov
add
pop
or
add
pop
push
add
je
xor
cmp
mov
andl
inc
aam
and
and
mov
sub
shrb
add
and
add
add
call
push
jmp
xor
mov
mov
add
add
add
xchg
adc
aad
sahf
testl
add
inc
or
pop
int
add
lret
add
fsubs
std
xor
jl
and
cmp
add
mov
inc
insl
sti
add
add
xchg
cmp
add
inc
in
mov
mov
add
test
insb
sub
add
add
xchg
push
orl
addb
ret
inc
fcoms
fildll
sub
add
add
dec
mov
add
add
xchg
addr16
pop
pxor
add
sub
add
pushf
inc
push
add
inc
ss
or
add
out
adc
mov
or
aam
lock
add
sahf
das
in
fidivl
test
out
cltd
js
dec
sarb
push
jecxz
lret
add
in
cmpsb
add
push
sub
add
and
fwait
inc
jg
aad
addb
arpl
add
cmp
sub
add
aaa
mov
add
ficoml
stos
dec
daa
imul
addb
stc
xorl
jl
xchg
and
add
ss
mov
cmpsl
leave
data16
jbe
in
push
aas
or
add
add
bound
sarb
lret
push
add
jmp
ss
dec
add
add
jp
testb
stos
movsb
add
xor
dec
jns
push
jne
pop
ret
mov
add
sub
popa
fwait
pusha
imul
add
dec
mov
add
outsb
daa
lcall
mov
dec
mov
add
jne
iret
xor
lret
push
shrl
add
push
jmp
xor
enter
add
stos
add
sub
add
lock
add
ljmp
mov
add
xchg
adc
rolb
mov
ja
fidivrl
test
add
imul
mov
add
addb
cmp
test
add
js
cmp
dec
pushf
adc
stos
add
or
lahf
rclb
mov
add
dec
insl
cmp
fildl
xchg
les
pop
sbb
enter
pop
iret
dec
rol
push
add
mov
add
aas
nop
cmp
push
cmp
mov
mov
add
out
add
add
dec
js
jb
mov
add
add
push
add
add
sub
add
pop
icebp
cmp
xchg
mov
add
in
xlat
pushl
fdivl
sarl
fcomi
jbe
add
bound
add
fadd
loop
enter
push
adc
in
je
addr16
add
inc
and
add
add
addb
xchg
out
adc
push
leave
cld
pop
inc
fldt
push
sbb
cmp
movsb
add
and
add
xchg
xchg
lods
pop
adc
add
cmp
in
cmp
jmp
add
push
lret
into
xor
sahf
mov
add
lock
and
push
push
cmc
mov
loop
mov
sub
add
mov
sbb
mov
add
xchg
xchg
add
mov
add
add
jl
jae
add
shl
fdivrs
jns
loope
mov
jle
test
add
pop
xchg
pop
inc
flds
jne
inc
jg
dec
pushf
rorl
cmpsb
add
jle
imul
mov
add
movsb
add
mov
add
mov
add
and
je
jnp
sub
and
add
pop
mov
xor
dec
sti
gs
cld
or
add
fistpll
js
in
push
lods
aas
addb
xchg
aas
mov
push
addr16
stos
ss
add
xor
jo
jg
add
push
add
lret
jp
xchg
add
inc
addb
lret
lret
cmp
inc
xchg
cmp
aam
imul
add
mov
sub
in
mov
add
lods
or
add
shl
dec
adc
add
xchg
mov
idivb
cmp
or
add
outsb
repnz
add
add
inc
pop
test
add
or
inc
lea
xchg
mov
in
sti
pop
jle
push
sub
add
pop
add
add
add
out
sub
add
cwtl
push
xor
and
add
sbb
dec
fsubl
clc
pop
inc
out
in
sub
add
in
xor
sub
add
sti
sbb
add
popl
jo
loopne
xchg
dec
push
add
lea
xor
nop
mov
add
and
test
add
fiaddl
cmc
push
add
add
ss
push
add
jno
fmulp
sarb
cltd
jbe
add
roll
push
loope
or
add
add
fistps
xchg
xchg
cmpsl
cltd
lds
xchg
mov
rcl
jae
imul
iret
and
mov
mov
add
pushf
notb
fldt
add
imul
push
mov
add
mov
fisubrl
add
inc
inc
gs
arpl
and
add
push
xlat
ud1
scas
inc
or
sbb
rclb
ja
sbb
popl
push
loop
pop
push
add
jne
lret
ret
xchg
add
add
cmp
popf
jle
repz
int3
sub
add
ret
inc
xor
mov
pop
ret
push
push
add
jecxz
adc
jb
sub
xchg
cmp
add
js
add
jb
pop
mov
add
dec
or
add
mov
cmp
add
push
mov
cmpsb
add
push
push
add
imul
xchg
mov
add
pop
ss
stos
inc
aad
out
or
test
js
les
add
js
mov
sub
add
pop
sub
ja
sub
loopne
addb
xchg
outsl
sub
std
adc
pop
sbb
fldenv
add
xchg
dec
fistps
jns
andl
add
fstpl
movsl
cmpsl
xchg
testb
add
inc
paddq
add
inc
push
daa
mov
pop
xchg
ficomps
adc
sti
sub
into
outsb
aaa
mov
fisttps
lret
jle
push
aad
loope
pushf
pop
jne
aam
negb
test
add
push
mov
fwait
sub
add
add
cmc
sbb
lret
add
cld
pop
jle
add
push
mov
push
sub
add
pop
loop
hlt
dec
sarb
add
aaa
and
add
icebp
hlt
out
cmp
cwtl
out
pop
test
or
ja
pop
jo
loop
sbb
shl
mov
mov
sub
xchg
jnp
sub
pop
out
jbe
xor
adc
test
add
cmpsb
add
dec
or
add
xchg
add
xlat
dec
push
and
lock
sub
add
add
mov
jns
dec
lret
cmpsl
jno
mov
movsb
add
fwait
cwtl
and
dec
xor
scas
add
mov
rcrl
cmpl
xchg
xorl
add
daa
lret
nop
mov
add
inc
xor
movsb
add
aaa
mov
jno
push
dec
pop
faddl
ja
cmp
clc
xchg
sbb
xchg
movb
add
sub
mov
xchg
dec
in
xor
add
mov
add
cmp
inc
mov
xchg
testb
dec
pusha
fmull
add
inc
mov
add
out
jno
fimull
add
leave
in
call
cmp
mov
mov
in
shll
cwtl
mov
pusha
adc
jl
loope
add
jl
and
add
fdivp
rcll
lods
add
or
xor
les
sbb
not
mov
cmp
mov
imul
add
inc
cmp
repz
iret
addb
add
adc
add
fmuls
add
cmp
mov
jb
inc
stc
xchg
add
jmp
add
out
in
stc
dec
push
sub
add
push
sti
cltd
xchg
out
inc
data16
hlt
std
pop
jle
stos
add
ljmp
add
and
add
xor
outsl
loopne
add
mov
push
fimull
add
iret
or
add
test
add
jge
sbb
aam
jno
xor
ret
add
adc
aas
mov
xor
fwait
int3
cmc
push
push
dec
lret
pop
inc
and
add
sub
in
jg
pop
push
int3
xchg
add
cwtl
popf
xlat
jmp
lret
std
xchg
mov
add
nop
jbe
mov
and
add
dec
out
mov
add
push
add
aaa
cmp
stc
and
add
dec
shlb
das
fsubrs
into
test
pushl
aad
lcall
lret
sahf
aaa
js
dec
ficoms
mov
add
outsb
xor
jb
sbb
add
sbb
cltd
lcall
out
dec
xchg
add
jp
fs
mov
add
aas
scas
add
pushf
mov
sti
addb
jbe
in
icebp
add
lds
jb
pushf
mov
jo
movl
add
sub
add
nop
push
arpl
fsubrs
add
sbb
movsl
pop
jg
sub
add
mov
mov
adc
sbb
push
pop
fwait
pushf
jmp
add
lea
mov
cmp
xchg
mov
mov
pop
adc
in
add
cmc
ja
xor
movsl
jl
clc
sbb
push
add
adcl
out
push
xchg
sbb
add
scas
push
jbe
pop
xor
cmc
mov
inc
dec
adc
dec
mov
pop
and
pop
mov
add
aas
sub
jbe
andl
add
sub
add
mov
mov
add
aad
out
and
add
add
lret
int
test
jge
cmpl
pop
pop
out
nop
push
mov
and
add
add
ja
sub
add
outsb
nop
jmp
add
add
js
jbe
jns
roll
add
pop
pop
jle
or
add
je
cmp
xchg
add
mov
add
inc
in
cmp
dec
jno
adc
inc
daa
inc
mov
mov
popa
jg
add
push
ljmp
lcall
pushf
sahf
nop
loopne
add
cmpsb
add
or
add
add
enter
test
pop
jns
mov
add
repz
shll
jmp
sub
out
sub
pop
mov
mov
sub
add
jl
or
add
icebp
stc
int
lods
push
js
cmp
movsl
push
cmpsb
add
repnz
pop
mov
nop
inc
dec
insl
fcompl
lock
rcl
fwait
enter
add
test
fidivrs
mov
out
das
pusha
ret
hlt
push
daa
mov
mov
mov
jno
xor
dec
push
add
rclb
mov
add
in
xlat
je
push
cli
dec
mov
add
mov
add
cmp
jb
add
add
cmp
mov
xor
push
push
jbe
mov
add
cwtl
test
das
jl
xchg
addb
ds
add
add
mov
mov
add
ljmp
aas
xchg
cmp
lret
hlt
negl
in
test
mov
inc
ljmp
jg
rclb
sbb
jmp
dec
das
adc
pushw
je
adc
add
mov
inc
add
add
mov
add
dec
mov
add
xchg
add
add
bound
aam
fnstcw
cld
add
add
je
xor
jp
dec
pop
sbb
adc
add
movsb
add
imul
dec
pusha
dec
sub
add
scas
test
jge
subl
push
add
mov
pop
mov
divl
mov
mov
test
add
add
outsb
pushf
repnz
add
and
add
dec
add
add
adc
imul
add
jecxz
ljmp
fs
out
inc
pop
xorl
cmp
icebp
outsb
pop
mov
inc
out
or
cwtl
inc
sbb
and
imul
and
add
mov
vunpcklps
lods
add
pop
inc
andl
jmp
movl
nop
push
sub
add
bound
pushl
jmp
push
xchg
push
in
pop
mov
add
push
push
add
ss
add
add
lods
add
jb
pusha
lock
add
mov
add
push
cmp
insl
lret
call
cmp
mov
add
cmp
mov
add
mov
add
adc
add
xor
icebp
mov
enter
loope
sbb
pushf
sbb
xor
fisubl
add
add
jmp
rcl
xor
cmp
scas
sti
adc
add
test
add
jmp
stos
loopne
fcoml
mov
push
sti
xchg
mov
add
cli
and
add
lods
add
ljmp
jge
leave
jne
aas
shlb
add
pop
push
mov
or
add
dec
cltd
stos
cmp
lcall
pop
mov
decb
pop
cwtl
sub
add
jecxz
cmc
sub
jle
adc
in
pop
test
push
add
aaa
and
inc
outsl
shl
jb
aas
jno
popf
mov
leave
jb
jmp
nop
xchg
inc
lret
pop
cmpsb
add
in
or
cmpsb
add
out
dec
add
or
add
mov
das
or
add
jecxz
jnp
fsubl
stos
add
inc
sbb
fwait
mov
int
inc
or
jmp
add
add
loope
imul
adc
add
insb
test
outsl
mov
loopne
add
mov
add
push
lcall
mov
pop
adc
aam
inc
loopne
add
test
add
add
sub
add
in
adc
sbb
pop
jl
mov
dec
sub
in
jl
dec
pop
jns
pop
bound
add
mov
pusha
clc
sbb
inc
sti
inc
inc
or
add
outsb
cmp
hlt
add
cmp
nop
pop
xchg
pop
and
add
sbb
push
hlt
in
pop
pushf
pop
out
or
push
lcall
add
leave
idivb
enter
add
dec
clc
and
add
add
inc
fsts
fdivs
data16
add
push
sbb
lods
add
imul
mov
lods
add
cld
pusha
dec
jl
add
add
xlat
mov
pusha
insb
add
mov
cwtl
adc
add
rcll
dec
or
add
fimull
add
jb
xlat
push
sub
sbb
pop
int3
sbb
mov
rcrl
jg
sbb
sbb
jmp
add
pop
inc
insb
jb
xchg
add
mov
add
insl
in
outsl
lret
mov
inc
lea
xor
push
outsb
mov
add
inc
shll
and
add
lds
mov
test
outsb
push
add
cmp
or
addl
add
cld
push
jb
out
sbb
out
lret
dec
cmp
add
ror
stos
add
mov
add
repz
shrb
mov
add
nop
add
aas
std
xchg
scas
add
xor
add
push
sbb
dec
xor
adc
pop
loope
hlt
mov
push
xor
add
mov
jg
add
jne
dec
fldcw
leave
push
mov
add
add
add
neg
pushf
adc
add
add
std
fwait
and
add
add
popa
roll
add
cmp
cmp
pop
hlt
into
mov
add
xchg
ret
subl
sbb
in
add
fildll
add
pop
sbb
fiadds
xchg
scas
mov
add
in
cmp
into
xor
add
mov
add
mov
arpl
or
add
lods
stc
xor
xchg
ljmp
call
sbb
or
fidivs
add
pushl
mov
cmc
xchg
adc
add
inc
adc
ljmp
imul
dec
and
add
lcall
dec
xchg
leave
xor
xchg
add
addb
daa
dec
sub
xor
push
add
add
add
movsb
add
mov
cld
dec
dec
sbb
inc
pop
xchg
add
push
adc
pop
rorb
insb
aaa
cmc
xor
inc
xchg
xor
mov
add
jg
stos
xor
add
add
jns
imulb
leave
imul
pop
ret
je
add
jmp
jge
push
add
add
mov
mov
std
mov
out
out
loope
shll
push
aas
and
pusha
jns
lds
add
cmp
addb
ss
inc
sbb
push
sub
add
nop
shlb
xchg
adc
fs
stos
mov
add
fistps
into
or
lock
aaa
pop
mov
out
cwtl
inc
and
add
scas
xor
jl
sub
add
dec
iret
xor
sub
push
lret
cld
sarl
inc
cmpsl
fistpll
or
scas
push
add
mov
jle
jp
mov
add
shll
push
push
setae
push
sarl
add
xchg
repz
add
movl
push
mov
cltd
addb
push
mov
add
xor
xchg
add
stos
jge
inc
lods
jbe
int3
movsb
add
sbb
pop
shrl
add
sti
xor
stos
dec
push
add
xor
add
aam
hlt
jbe
add
cld
hlt
add
cmp
add
loopne
and
add
push
xor
dec
pop
pop
outsb
xor
mov
push
add
mov
cmp
stos
jp
mov
cmp
jp
aas
lods
add
popf
sbb
dec
adc
add
cmp
add
mov
pop
incl
add
mov
add
or
add
out
imul
add
dec
shl
add
fnsave
sub
xchg
mov
mov
enter
push
add
add
mov
pop
mov
add
push
add
fstpt
add
nop
xchg
fcomps
js
lods
cmpsl
je
int
jp
and
sbb
jp
add
out
sub
jne
iret
jle
rcrl
add
pop
les
fwait
cmc
fisubrs
add
shr
repnz
add
jno
pop
push
add
daa
stos
add
jmp
lea
mov
cmpsl
cltd
ret
add
dec
adc
and
dec
insl
cmovne
cmp
shrb
rclb
jbe
int
add
push
inc
arpl
scas
add
insb
sub
jecxz
mov
jmp
add
sub
mov
push
cmp
or
std
xor
adc
cld
inc
fildl
imul
jb
cmp
test
add
inc
pop
insl
xchg
or
add
mov
inc
out
lret
in
xor
push
xchg
add
add
xchg
add
test
add
sbb
add
loope
and
add
add
inc
dec
and
add
jne
insl
or
jge
sbb
rcll
add
inc
push
test
add
inc
add
lock
mov
add
add
adc
adc
out
pusha
nop
mov
fs
xor
add
add
ret
testl
hlt
repnz
mov
out
mov
call
push
ds
out
xor
cld
push
repnz
xchg
add
xchg
shll
push
cmp
add
jge
icebp
addr16
add
repnz
pop
add
xor
sahf
sbb
dec
xchg
inc
inc
xchg
insl
aas
nop
scas
push
add
mov
cmpsl
mov
jbe
add
cmp
pop
and
and
cmp
xor
in
dec
fbld
pop
out
pop
xor
fildll
add
out
out
in
out
nop
mov
adc
nop
lods
sbb
or
add
aaa
and
inc
or
add
outsb
mov
xor
rol
lods
add
addb
mov
add
pop
leave
rclb
and
xchg
add
add
and
push
mov
mov
add
add
xchg
push
mov
mov
sbb
add
add
ds
aam
xchg
cmp
push
add
adc
dec
push
add
add
clc
inc
roll
add
cmp
push
fisttpll
add
or
add
push
scas
leave
inc
xor
and
add
push
push
add
or
push
mov
cli
imul
sub
add
lret
sbb
add
mov
add
pop
and
fistl
xchg
mov
add
jns
arpl
sbbl
add
pop
or
add
shlb
jg
add
in
jae
push
fcoms
movsl
xchg
jnp
add
in
xchg
jb
add
and
add
jns
add
pop
mov
ja
add
and
mov
leave
fidivrs
mov
add
fidivrl
xor
cld
mov
or
push
add
add
xor
mov
ja
sub
imul
test
dec
sub
ret
sahf
adc
mov
xorl
repz
inc
sub
add
add
arpl
cmp
jmp
add
aaa
adc
popf
jmp
inc
mov
push
or
aad
orl
add
add
dec
aad
and
add
ret
push
inc
inc
add
add
mov
dec
adc
js
xchg
in
lods
fiaddl
add
cmpsl
dec
nop
out
mov
ljmp
xchg
pmullw
stos
test
add
or
sub
add
cmp
add
mov
pop
daa
mov
jne
ss
push
rcrb
lods
push
or
add
iret
inc
sbb
aas
mov
fsubs
add
fistpl
push
xchg
push
add
inc
xor
int
out
mov
add
cmp
aas
inc
inc
sub
jns
stos
in
mov
add
adc
pop
in
push
adc
lods
cmp
jl
dec
or
add
bound
add
xchg
fisubrl
bswap
repnz
add
loope
push
in
mov
add
test
sbb
adc
add
scas
add
add
add
enter
mov
inc
jns
add
mov
mov
dec
cld
inc
or
add
cmp
aas
hlt
lods
scas
lret
das
jg
add
push
and
add
add
lret
insl
mov
add
js
mov
mov
test
jo
sbb
add
jb
pop
mov
pop
mov
add
pusha
orl
add
inc
sub
or
add
inc
out
in
jbe
pop
push
leave
nop
mov
add
add
pop
jnp
lcall
ja
add
movsl
sbb
cwtl
push
xchg
loop
add
shll
add
or
add
add
xor
sub
add
jae
jno
push
mov
inc
negl
in
add
add
ds
cld
cmp
add
push
add
mov
add
inc
mov
arpl
add
cmp
jo
push
addb
lcall
add
pop
dec
mov
sbb
sbb
sbb
mov
dec
sub
add
das
sub
enter
xchg
add
pusha
and
sub
aam
outsb
out
pop
adc
fcmovne
addr16
and
add
add
add
nop
pop
decl
decb
repnz
mulb
leave
or
add
daa
sahf
sub
add
add
and
aas
pop
jg
leave
xchg
or
add
add
mov
je
lock
xlat
mov
cwtl
loopne
ret
ljmp
add
pop
out
push
fnstcw
adc
push
outsl
dec
loope
test
add
pop
imul
movb
add
mov
add
out
push
cmpsb
add
mov
push
add
dec
cld
mov
add
sbb
xchg
add
inc
into
shrl
in
push
pop
jns
dec
xor
scas
add
outsb
and
push
add
mov
pop
and
add
jg
push
mov
outsb
mov
test
add
push
dec
mov
sbb
and
ret
jbe
das
leave
push
pop
outsb
mov
dec
jg
out
jne
pop
fs
cmc
push
add
sbb
add
add
inc
dec
js
ljmp
push
add
cmp
out
sub
add
add
popa
popa
pop
stos
shld
and
add
cmp
mov
mov
push
mov
fsub
mov
add
lds
pop
add
add
add
movsl
leave
xor
dec
jl
rcll
lock
cmp
add
push
add
cltd
sub
add
scas
add
iret
addr16
jnp
add
add
xchg
mov
xor
push
add
js
icebp
xchg
mov
popf
loope
loopne
add
pop
pushf
insb
jmp
and
add
fcmove
fwait
cmp
or
add
add
adc
and
add
test
add
add
pop
jo
add
lods
add
je
cmpsb
add
add
add
aas
or
add
xchg
aas
mov
pop
mov
add
xchg
mov
jno
adc
test
pop
lods
add
xchg
hlt
imulb
sub
test
add
mov
xor
pop
xchg
push
add
repnz
sahf
sub
add
iret
nop
imul
add
xlat
xchg
lds
sub
add
mov
stc
mov
jo
adc
adc
add
lods
add
sub
xor
jnp
pop
mov
mov
jecxz
cmpsb
add
jns
or
add
addb
aas
sub
add
jge
dec
loop
add
sub
sar
aad
add
rorl
mov
lods
add
mov
mov
jb
xchg
mov
cmp
cmp
addl
rcrb
fsubrl
js
adc
imul
add
push
dec
fs
pop
cwtl
ret
adc
inc
in
jp
sbb
or
add
mov
daa
pxor
and
xchg
out
xchg
inc
scas
test
add
les
push
push
fldz
addb
adc
mov
jmp
into
js
rorl
add
data16
enter
push
inc
cwtl
sub
les
leave
jne
lret
decb
ja
scas
loop
xchg
mov
add
mov
pusha
mov
pop
or
add
mov
notl
pop
imulb
add
adc
adc
shl
out
mov
add
add
addb
cmp
das
xor
and
add
add
inc
pop
jp
cmp
jns
aas
sahf
dec
test
mov
addr16
add
lahf
xchg
pop
call
push
adc
loopne
add
sti
mov
dec
mov
add
loopne
in
sbb
hlt
and
add
movsl
ds
sub
add
mov
add
jecxz
cmp
rorl
add
les
jmp
sub
mov
add
sti
jns
imul
movsb
add
dec
aas
add
xor
add
or
cmp
pop
or
add
add
or
add
add
push
add
lcall
std
sbb
mov
aam
add
stc
arpl
pop
arpl
jmp
out
ret
popa
jge
add
mov
mov
aas
and
inc
popa
xchg
movsb
add
icebp
pop
mov
dec
movsl
add
rcll
fnsave
je
add
or
and
add
mov
mov
cmp
lret
movsl
jmp
add
add
sbb
sysret
jns
and
add
sub
add
sub
push
xchg
add
xchg
add
add
insb
fists
mov
test
add
add
sahf
in
ss
mov
add
add
sub
add
inc
in
rcrb
cmpsl
outsb
pushf
test
aaa
roll
nop
mov
cmp
add
pop
and
int3
xlat
mov
add
cmpsl
popa
cwtl
xchg
fistl
add
mov
pushf
push
add
pop
sbb
cmc
fcomps
rcrb
sub
sub
add
add
add
mov
jb
add
push
sbb
add
ljmp
add
push
lret
add
inc
or
hlt
mov
scas
add
push
mov
add
fxch
ret
adc
loope
mov
adc
jb
add
sbb
out
out
imul
add
push
mov
jl
jle
fwait
mov
add
or
cmp
add
jnp
add
sbb
and
out
out
add
imul
and
add
addb
daa
ja
add
mov
outsl
ljmp
add
pslld
add
xchg
and
add
stos
cmp
add
arpl
add
jmp
or
add
pop
pop
out
inc
push
jne
lret
in
add
insl
into
cltd
push
lret
adc
dec
mov
add
or
test
add
loope
cld
mov
add
hlt
sub
fidivrl
mov
or
add
dec
add
jl
push
inc
jp
add
push
lock
stc
popa
nop
push
mov
jne
dec
sub
add
sbb
push
lock
ljmp
add
mov
adc
mov
mov
sub
pop
push
add
gs
mov
inc
xchg
cwtl
sbb
scas
ja
xchg
add
add
sti
leave
mov
mov
add
pop
xor
jb
cmpsb
add
add
clc
adc
outsb
sbb
out
add
dec
mov
add
jbe
daa
jl
inc
mov
shr
insl
sarb
dec
pop
jl
cmp
add
sbbl
add
imul
push
out
inc
inc
aam
mov
jnp
pop
iret
jp
add
stos
pop
mov
je
xor
sti
lods
add
mov
adc
int3
cli
xorl
and
sub
add
and
or
add
jne
jnp
push
imul
inc
hlt
jb
std
scas
add
or
add
mov
add
xchg
mov
add
add
xor
mov
add
xor
pop
dec
arpl
xorl
push
add
movsb
add
mov
xchg
clc
and
jg
add
inc
js
mov
mov
add
add
add
mov
push
stos
sub
add
push
dec
xor
dec
cmp
js
je
cmp
pusha
cmpsb
add
cmp
inc
repz
pop
sarl
add
add
lods
add
push
sub
inc
dec
aad
movsl
mov
out
scas
cld
pop
push
sub
mov
sbb
xor
xor
xor
xor
add
in
aad
mov
add
cli
fstp
les
push
and
add
ss
movsb
add
int3
mov
ret
sti
rolb
add
repz
sub
out
mov
jbe
lods
add
mov
add
add
ja
hlt
in
lcall
add
lock
add
add
movsb
add
and
or
call
add
jmp
add
xchg
push
and
adc
movsb
add
mov
add
add
fadds
mov
daa
imul
js
js
or
add
inc
cltd
and
add
fdivrl
dec
jecxz
daa
mov
add
cmpsb
add
iret
dec
sbb
aas
lods
add
fstpt
sub
jo
dec
cmpsl
roll
mov
add
mov
mov
xchg
movsb
add
loopne
or
add
mov
add
out
ret
mov
repz
sbb
mov
aam
jmp
das
dec
stc
std
xchg
js
addb
inc
dec
pusha
add
lods
repnz
je
mov
add
adc
cmpsl
dec
mov
shlb
add
ret
mov
ret
add
xor
add
ret
addr16
pop
add
jmp
sub
add
add
int
lds
add
out
or
std
dec
jl
mov
fs
pop
dec
xchg
add
cli
lcall
aam
add
add
dec
sub
add
stc
pop
pop
ljmp
xchg
mov
pop
push
sub
cltd
mov
add
add
mov
mov
add
mov
int3
js
inc
aad
pop
hlt
in
jne
inc
adc
dec
push
stos
int
add
insl
jle
add
mov
lret
pop
stos
aaa
or
push
mov
xchg
std
sbb
and
add
rcrb
mov
jbe
mov
in
movsb
add
push
or
add
xchg
cmp
add
add
inc
pop
lea
add
jnp
xchg
push
add
mov
add
xchg
mov
fs
add
dec
js
dec
xor
push
sub
add
mov
nop
pusha
adc
or
add
js
xchg
push
jne
in
jp
adc
add
add
inc
bound
int3
add
xchg
arpl
add
push
movl
addb
imul
add
imul
add
pop
jns
sbb
jae
adc
enter
jnp
mov
jae
lcall
add
xchg
add
adc
fcomps
push
add
ds
jge
sub
sbb
pusha
loopne
popf
sub
dec
sahf
push
shlb
fbld
aad
dec
add
cli
add
add
fstpt
dec
dec
sbb
sbb
add
or
cmp
pop
imul
xchg
rclb
inc
dec
and
imul
mov
dec
add
and
add
add
enter
pusha
xchg
cli
push
push
pop
jbe
adc
xchg
mov
adc
push
add
jae
push
scas
add
lods
add
pop
cwtl
scas
add
xor
clc
ror
sub
sub
in
add
add
add
push
and
add
jnp
or
add
mov
mov
add
sub
inc
movsl
mov
repnz
rcll
aad
dec
loopne
nop
repnz
adc
add
insb
ret
into
outsb
je
push
je
je,pt
cwtd
imul
repnz
push
mov
xlat
test
add
adc
add
popa
aas
pop
gs
push
ja
arpl
sbb
in
dec
adcl
push
lahf
arpl
lret
in
jae
add
xchg
mov
fnstenv
add
add
xchg
ljmp
les
neg
test
inc
cmp
cli
pop
rcll
and
add
mov
sbb
add
mov
or
mov
sbb
sbbl
out
movl
int
cmp
inc
add
ror
pop
jb
adc
jbe
xchg
push
add
mov
std
mov
adc
add
cmpsb
add
ja
pop
nop
and
add
jne
pop
dec
mov
cmpsl
or
sbb
pop
pusha
jo
sub
add
ret
push
xchg
jno
bound
out
addb
mov
mov
dec
into
mov
inc
sahf
sar
jp
add
mov
add
in
mov
lret
mov
add
sub
add
loopne
int3
cmp
sbb
push
jmp
pop
push
ss
mov
data16
push
pushf
mov
std
aad
std
lods
lea
add
cmp
push
iret
loop
fwait
push
lds
add
dec
mov
jno
jne
mov
testl
sbb
lea
mov
push
push
add
sti
or
add
and
add
mov
xor
int
add
mov
inc
jb
xor
or
add
pushf
ret
addb
mov
add
jne
xor
add
jge
add
or
add
inc
outsb
insb
mov
add
add
lods
add
outsb
inc
mov
test
add
jno
pmovmskb
mov
xor
adc
ss
add
fstp
sahf
cmp
dec
ds
adc
add
pop
stc
dec
add
add
pop
roll
inc
call
add
in
adc
mov
push
fistl
add
loope
xor
mov
inc
jns
ds
mov
pusha
ja
stos
add
fistpll
mov
or
add
pushf
add
jo
add
stc
repnz
push
pushf
cmp
enter
sub
add
adc
add
mov
add
pop
loopne
mov
jo
xchg
add
jno
jg
pop
leave
fsubl
mov
into
or
add
mov
add
push
cmp
scas
add
sbb
mov
jne
gs
js
bound
shl
nop
push
inc
dec
push
in
mov
pop
sbb
push
cmpsb
add
mov
daa
jmp
inc
add
xchg
fiadds
add
aad
push
notl
pushf
dec
mov
jne
pop
mov
add
add
jb
add
xchg
pop
addr16
adc
xor
add
adc
mov
add
clc
test
add
dec
scas
add
imul
jmp
das
jne
ss
or
add
push
mov
mov
bound
fmull
repz
inc
dec
xchg
outsl
add
add
xor
and
add
dec
push
mov
add
and
int3
fcoms
add
insb
pop
sub
add
xchg
add
add
sahf
outsl
fdiv
cmp
push
mov
in
cmp
fs
out
and
test
add
jo
mov
inc
and
incb
add
outsb
mov
add
lods
scas
add
cmp
add
fdivrp
les
fsubrl
pop
xchg
add
xchg
mov
add
add
and
add
jmp
pushf
jmp
daa
jmp
lods
dec
or
add
mov
jg
add
and
add
test
outsb
jmp
pop
mov
daa
int
mov
test
add
pop
imul
outsb
inc
xchg
aaa
sbb
mov
add
xchg
add
filds
add
js
and
add
jp
arpl
ret
add
lods
sub
add
loope
add
sbbl
add
fiaddl
add
add
xor
and
add
addl
add
mov
add
inc
dec
sbb
add
imul
xor
rcrb
xchg
xchg
add
add
bound
add
dec
lods
pop
out
aaa
stos
pop
imul
add
inc
out
jb
pop
inc
mov
add
mov
lcall
dec
or
das
in
and
add
add
imull
outsl
in
xchg
push
cltd
test
test
jns
and
inc
rcrl
ja
ror
ret
or
add
push
jge
inc
mov
sub
into
fcomps
jg
fidivl
mov
cmpsb
add
sub
add
lret
push
gs
inc
jge
in
adc
xor
shlb
xor
inc
lcall
imul
jne
mov
add
add
and
add
xor
xchg
sti
loope
sub
or
add
cmpsb
add
jns
rcl
sbb
add
fstpl
jmp
and
add
fstpt
sahf
rorb
lock
xor
sbb
and
jo
scas
add
xchg
popa
xor
cld
inc
movsl
addb
pop
and
add
add
add
aas
add
je
test
add
add
add
sbb
add
sbb
lods
dec
cli
mov
add
pop
sbb
sbbl
xor
enter
les
add
inc
xchg
fidivl
addb
mov
enter
add
xlat
out
stos
add
sub
lods
add
arpl
cmp
pop
push
ss
repnz
mov
jp
mov
into
pop
sbb
sub
inc
dec
inc
push
imul
xor
mov
add
or
add
add
or
add
add
and
add
shr
sahf
mov
mov
add
jns
or
les
add
xlat
pop
jns
mov
cmp
sti
push
int
mov
fsubl
nop
or
add
cmc
inc
ret
or
add
imul
jle
test
add
add
jg
sbb
push
dec
addb
push
les
and
add
jge
jge
lock
pop
jbe
xchg
push
or
add
mov
add
sub
add
jg
icebp
test
mov
add
leave
stos
clc
ss
pop
jp
xchg
add
cli
mov
ret
dec
lds
jl
insb
vpor
pusha
adc
ret
add
xchg
push
sbb
inc
out
dec
wbinvd
xor
mov
repnz
add
rcll
and
mov
add
add
add
xor
or
jg
pop
sub
add
shlb
xchg
mov
jbe
dec
outsl
shlb
lahf
in
add
cmp
mov
mov
mov
push
push
mov
mov
push
nop
mov
add
hlt
inc
frstor
add
mov
pop
aam
cmp
icebp
cmp
sbb
xchg
add
add
fldcw
sub
add
xor
or
test
add
cmp
add
test
icebp
sbb
or
add
push
push
pop
cmpsb
add
jg
or
mov
add
repnz
pop
and
add
jge
add
insb
xchg
push
mov
int
scas
jnp
and
add
mov
addb
mov
lret
jo
mov
ss
fcoms
insl
outsb
mov
jnp
dec
mov
addb
jle
dec
or
ss
add
sub
mov
add
int3
add
add
inc
jne
fcmovb
pop
sub
add
push
js
add
dec
les
sub
add
jg
push
mov
jl
push
add
cmp
fimuls
xor
addb
in
test
add
cmc
fldz
sub
xchg
jno
mov
push
scas
push
adc
inc
push
add
add
stos
add
adc
movsb
add
ret
insl
negb
shl
lock
jns
lahf
mov
add
push
loope
add
push
add
sub
inc
sbbl
add
out
add
jb
cmp
xchg
addb
push
mov
xchg
fxch
lahf
leave
addb
incl
iret
fistps
add
dec
pop
push
inc
pop
inc
pusha
push
add
gs
out
jg
std
shrl
add
popa
lock
pop
stos
add
or
add
mov
and
add
pusha
pop
jne
loop
outsl
dec
movsl
arpl
pop
cmp
jbe
add
pop
add
out
mov
add
mov
add
mov
mov
add
jo
mov
push
and
add
popf
mov
mov
gs
pop
enter
sbb
sub
add
jle
add
add
icebp
mov
inc
push
add
jae
rorl
or
lret
adc
inc
jne
inc
pop
inc
xchg
xchg
mov
add
mov
jle
jmp
adc
sub
lcall
repz
stos
push
inc
in
jle
mov
mov
add
add
repz
dec
out
add
cltd
hlt
dec
test
cmp
inc
xchg
pop
das
fs
les
into
ret
icebp
pusha
ds
xchg
add
mov
cwtl
stos
add
fdivr
insl
xlat
mov
add
dec
test
xor
adc
inc
lret
sbb
xlat
and
add
insb
jle
lods
add
ret
mov
mov
outsb
addb
and
fisttpll
decb
daa
adc
mov
inc
cmpsl
add
cmp
add
xchg
mov
add
xchg
add
rorl
add
fbstp
lods
sti
out
mov
imul
dec
jg
cwtl
insl
add
jbe
lea
idivb
add
adc
cmp
aam
lret
add
fldz
ja
add
add
jb
cmp
add
outsl
sub
or
add
xor
popf
test
fiadds
clc
add
push
add
in
cltd
xor
popa
mov
lds
insb
jg
add
sarb
xor
add
clc
inc
xchg
mov
xor
iret
movsl
les
xchg
push
push
int3
popa
lods
jl
imul
outsl
inc
lret
mov
fidivrs
mov
ret
pop
fs
add
movsb
add
mov
scas
add
in
or
adc
scas
add
push
hlt
adc
xchg
out
jmp
nop
cmp
ret
out
add
inc
in
add
cltd
pop
je
jp
cmpsb
add
add
sarb
jbe
pop
add
add
mov
popa
adc
insl
jno
xlat
mul
jae
lds
add
add
add
and
or
add
lods
push
das
jg
pop
icebp
sbb
add
and
add
cmc
inc
rcrb
sbb
xchg
int
add
inc
inc
addb
push
xor
or
add
inc
jle
xor
cli
cmpsb
add
test
mov
jge
add
rcrb
leave
shll
stc
and
add
dec
dec
out
push
mov
in
sub
add
jb
test
sub
add
sti
fcomps
add
add
pop
ret
ja
push
add
in
aaa
mov
adc
insb
sub
add
testb
lods
add
lea
add
push
cwtl
outsb
add
add
xchg
lods
xor
xchg
add
add
sub
xchg
mov
add
lret
add
add
ret
lcall
dec
clc
icebp
mov
mov
insb
inc
idivl
sub
loope
lahf
push
dec
bound
hlt
inc
jae
fs
add
add
mov
lods
jl
sti
imul
mov
add
mov
xchg
jmp
out
orl
fst
pop
in
test
sub
add
add
icebp
jo
or
inc
repnz
xchg
cmp
in
sbb
inc
xor
dec
mov
add
add
loop
pop
xchg
daa
xchg
mov
add
sbb
ret
add
dec
aad
les
mov
add
xor
add
dec
dec
data16
add
pop
mov
xchg
mov
add
add
add
mov
add
ds
addr16
jb
mov
inc
testl
xor
cmp
xchg
arpl
add
push
push
mov
ret
inc
insl
pop
sbb
gs
adc
fcmovu
fidivrs
xlat
in
iret
xchg
stos
add
jae
add
in
mov
add
jp
push
add
mov
add
aad
xchg
cmp
cmp
add
lea
add
cmp
outsb
push
xchg
xchg
dec
les
mov
add
add
jae
cmp
popf
adc
add
clc
cmc
hlt
xchg
inc
or
add
test
add
shl
jae
lds
add
shl
in
nop
inc
pop
movsb
add
imul
or
ja
fadd
lret
imul
inc
cli
xlat
ds
sub
add
add
js
sub
add
ficoms
outsb
cmp
add
jne
add
enter
add
adc
or
add
adc
xchg
cmc
lods
iret
add
dec
movsl
jl
pop
int
lcall
sbb
ret
fdivl
cmc
sarb
sahf
popf
imul
add
lds
push
add
push
and
add
add
add
popa
fidivrl
inc
add
add
inc
xor
mov
add
sbb
ret
xchg
add
pop
add
add
fwait
in
icebp
scas
add
jb
aam
cmpsb
add
xor
add
sub
sbb
xchg
add
out
pop
inc
cmp
loop
inc
pop
pushf
xchg
aam
mov
ficoml
aad
jo
sub
add
add
aas
fsubrl
add
add
cli
adc
sti
stos
add
jle
jmp
push
pop
inc
adc
imul
add
icebp
sbb
jo
pop
mov
add
pop
mov
stc
scas
add
cmp
dec
pop
loop
cmpsb
add
pushf
hlt
je
pop
cmp
mov
add
add
rclb
or
add
addb
insl
adc
std
fs
aas
push
cmp
inc
xor
mov
iret
dec
lods
add
imull
mov
js
xor
push
fbld
or
add
imul
test
inc
cltd
xor
idiv
mov
and
in
repnz
pop
inc
xchg
add
mov
stos
mov
push
movsb
add
mov
add
popf
jne
cmp
or
add
inc
push
icebp
xor
pop
xor
inc
popa
or
add
mov
or
add
shrb
jge
add
adc
out
scas
add
mov
add
add
add
fildl
push
add
sahf
mov
outsl
popa
les
movsb
add
pop
popf
pop
mov
das
sub
add
call
xchg
std
cmc
mov
add
pop
mov
add
inc
dec
inc
in
lock
test
add
into
mov
add
fsts
mov
xchg
ss
jmp
and
add
add
push
add
stos
add
or
add
add
mov
jbe
lock
jge
or
add
aaa
dec
push
aad
xor
iret
dec
xchg
fdivrs
or
rcr
xlat
xchg
add
add
fdivrs
les
and
out
mov
add
cmc
and
pop
mov
sahf
les
adc
jo
dec
cmp
sbb
dec
xor
sbb
add
add
pop
and
add
movsl
scas
add
sbb
lock
sbb
cltd
mov
test
mov
add
lcall
fistps
fs
mov
add
enter
sub
sub
add
stc
arpl
movb
or
mov
call
rcr
aas
std
push
stos
add
jle
sarl
ja
add
popa
cmpsb
add
lcall
add
mov
add
mov
xor
sub
add
cmp
push
jecxz
or
add
mov
add
pop
test
add
not
push
add
and
jne
sub
add
or
add
stc
mov
add
inc
inc
sub
add
add
push
or
add
add
add
ja
psrlw
dec
test
push
subl
add
shr
call
inc
pop
mov
gs
xchg
test
add
adc
pusha
ret
sarb
mov
add
gs
inc
test
add
or
add
push
pop
mov
addb
arpl
leave
aad
outsb
shlb
mov
lret
xlat
ja
rorb
cmp
jp
pop
icebp
test
mov
add
and
add
test
add
sbb
cmpsl
ret
sub
add
fcoms
test
mov
cmpsl
sub
push
shll
add
test
add
sbb
sub
addb
cmpsl
mov
add
add
add
sbb
add
or
test
lret
loopne
adc
and
add
add
dec
fcoms
push
pop
add
loope
arpl
lods
xor
dec
addb
mov
pop
roll
add
addb
stos
sbb
cmpsb
add
aas
jne
add
cmp
push
sbb
add
fmul
dec
sti
scas
add
sarl
xor
orl
jno
xchg
daa
in
lea
inc
inc
and
add
add
das
mov
and
mov
inc
pop
ret
and
fimuls
add
test
shlb
add
jmp
out
add
sub
add
lea
imul
mov
or
mov
fdivl
addb
mov
add
pop
adc
hlt
add
add
inc
in
mov
dec
push
mov
add
sbb
add
gs
adc
adc
and
add
mov
xor
add
jge
add
pop
add
lea
scas
add
sub
add
movsl
movsb
add
and
add
cltd
adc
cli
push
fdivrl
in
cli
leave
fs
and
add
mov
add
lods
xchg
add
dec
and
arpl
and
push
add
mov
add
jmp
out
in
push
mov
add
add
mov
pusha
mov
cmp
push
add
int3
pop
addb
aam
sub
pop
sbb
repz
sub
add
push
xorl
xorl
push
xor
mov
xchg
pop
test
adcl
sbb
and
add
mov
add
addb
jp
jae
outsb
test
sar
dec
aas
add
add
fcmove
int3
pop
adc
add
int3
lods
add
fidivl
add
add
inc
cmp
adc
sbb
data16
sbb
push
inc
pop
push
xchg
aad
xchg
clc
jbe
shll
jno
sbb
and
add
dec
push
inc
or
cmp
mov
ret
in
or
adc
add
jns
xor
add
sti
mov
push
and
add
jbe
fldl2t
dec
pusha
ds
add
pop
push
stos
add
mov
xor
pop
sti
stc
push
add
rcrb
jno
push
sbbl
xchg
adc
sub
imul
dec
aad
mov
loop
pop
mov
xor
cmp
or
idivl
or
out
push
add
cmp
add
imul
je
mov
cwtl
add
das
popa
mov
add
stos
mov
out
divb
push
sbb
test
add
sbb
inc
cmpsb
add
sub
add
inc
fld
divl
pop
test
inc
mov
imulb
add
sub
decb
aam
add
add
jge
paddsw
add
fsubl
loopw
inc
dec
in
xor
popf
cmp
das
clc
jl
cmp
sub
add
icebp
daa
sbb
add
dec
daa
mov
jl
inc
dec
clc
into
int
jno
pop
sbb
fwait
pusha
inc
or
add
add
push
shr
jns
pop
dec
push
out
mov
add
push
lcall
fisubrl
dec
sub
shll
ficomps
add
bound
add
push
jnp
lahf
incb
add
or
add
adc
xor
and
add
add
inc
mov
scas
add
mov
add
jne
lret
test
cwtl
mov
add
add
call
loopne
add
add
cmp
mov
mov
mov
cmc
inc
and
add
dec
addr16
sbb
jbe
scas
xchg
imul
adc
jge
in
test
lret
in
jns
das
sub
dec
das
adc
repnz
add
and
add
scas
xchg
sub
add
mov
fdiv
loope
js
add
arpl
sbb
jecxz
ret
push
test
pop
mov
mov
add
xor
fwait
out
add
insb
cmp
repz
xor
xchg
pop
mov
fsubrl
ret
push
mov
xor
fstpl
and
out
sti
test
add
jne
into
cmp
dec
mov
inc
push
jo
cmpsl
fbld
add
pop
bound
and
add
pop
aas
fs
pop
rol
sub
add
test
add
shrb
sbb
sarl
out
add
dec
fadds
sti
int3
or
inc
repnz
push
loopne
mov
inc
pop
jp
pop
add
xor
jl
mov
jg
orps
dec
dec
test
sub
dec
les
add
or
add
xchg
scas
popl
and
lea
add
push
push
add
jns
insb
cmp
cmpsb
add
shlb
cmpsl
jle
fnsave
nop
shlb
push
addb
pop
loopne
rolb
sub
add
ret
adc
stos
add
ljmp
mov
add
leave
adc
jecxz
les
shl
push
btr
data16
in
pop
mov
mov
add
lret
cmp
dec
in
stc
lods
mov
add
add
shrl
mov
add
out
fldl
add
movsl
xor
or
add
mov
in
pop
jbe
mov
add
cld
sub
add
pop
not
xor
add
push
inc
pushl
cmc
add
add
scas
mov
add
mov
cli
jle
mov
cmc
dec
std
add
xor
or
pop
ds
sub
add
adc
imul
and
add
outsl
push
cmp
subl
mov
add
fs
ljmp
add
add
pusha
inc
adc
out
sarb
cmc
pop
lock
shll
and
ja
push
aas
clc
packuswb
sub
add
xor
shlb
add
test
mov
add
aaa
pop
pop
xlat
nop
cld
add
dec
cmp
adc
add
fcmovnbe
sbb
dec
add
add
pop
gs
mov
xor
rorl
ljmp
add
lret
iret
fnsave
or
push
and
add
jg
loope
mov
mov
xlat
cmc
negl
stc
jecxz
js
out
xor
dec
frstor
inc
jge
test
add
add
pop
loopne
test
add
inc
pop
sub
dec
xlat
xchg
mov
sarl
add
cmc
xchg
jno
test
add
inc
dec
aad
push
add
outsb
std
insl
int3
mov
add
sbb
or
add
and
and
add
pop
dec
mov
dec
dec
push
negl
push
aad
xlat
add
add
pop
mov
add
add
sub
out
ljmp
add
dec
dec
or
add
dec
jp
nop
inc
fldcw
push
dec
push
push
inc
push
aam
sbb
cwtl
inc
add
adc
outsb
jne
test
add
add
cmc
repnz
mov
scas
add
pop
push
push
fimuls
mov
add
add
jbe
mov
add
test
add
add
cmp
or
add
mov
mov
jae
dec
cmp
jnp
fwait
dec
adc
mov
add
jmp
iret
sbb
add
jle
add
rorb
add
pop
and
cwtl
imul
add
add
repz
mov
data16
inc
mov
adcl
jae
mov
insl
loope
lods
add
fwait
dec
fsts
sub
mov
add
call
add
pop
jns
iret
lock
lods
jne
lods
mov
je
inc
sbb
add
sub
add
outsb
jo
push
movsl
add
and
add
fs
pop
add
adc
loope
adc
cmp
dec
cmpsl
pushf
sub
add
pop
inc
arpl
add
popa
fld
dec
mov
cld
jmp
add
das
insb
in
stos
mov
in
push
xchg
insb
mov
mov
add
push
imul
insb
nop
hlt
into
movsl
jbe
sub
add
ret
add
js
push
pop
push
pop
xchg
inc
rcrb
mov
dec
jecxz
add
push
leave
and
add
adc
mov
adc
popa
mov
xorl
pop
or
add
xchg
fcoms
jb
fldt
add
fisubrl
inc
and
add
test
add
ja
or
add
jecxz
add
mov
lret
xor
aas
inc
jmp
push
mov
rcrl
jp
shl
dec
pop
mov
hlt
and
in
mov
jl
jno
mov
repz
and
jae
mov
add
aas
inc
sub
push
add
repnz
xchg
add
addb
mov
add
icebp
test
add
add
leave
xchg
cwtl
fldlg2
mov
jbe
imul
out
leave
testb
add
add
adc
add
add
repz
xor
aad
xor
and
add
add
outsb
lea
ret
cmp
cmp
lea
fstl
or
fisubrs
mov
fdivs
xchg
jb
lods
add
test
add
idiv
mov
pop
rolb
insb
cmpsl
xchg
push
inc
jno
add
in
mov
jbe
addl
sbb
rcll
pop
cmp
lods
dec
arpl
insl
aaa
adc
fstpt
mov
fadd
xchg
scas
sub
add
inc
pushf
fisttps
icebp
or
add
add
xor
push
add
dec
xor
add
mov
fs
add
sbb
repnz
lds
add
push
xchg
add
add
cli
xor
cld
or
add
andl
mov
or
les
ja
dec
or
xchg
loope
mov
jne
out
jmp
add
cmp
add
cmp
or
add
mov
mov
std
adc
addb
and
popa
adc
add
shlb
or
add
outsl
add
add
jae
ds
push
mov
add
jno
addb
pop
test
add
out
in
mov
push
fimuls
add
push
sarl
jb
outsb
or
add
out
out
cld
and
add
dec
mov
mov
fisubs
add
pop
scas
add
push
jae
mov
add
add
test
lcall
and
add
dec
ds
pushl
push
add
inc
xorps
add
movsb
add
dec
mov
mov
cwtl
mov
imul
lahf
pop
inc
and
jg
gs
mov
andl
add
loopne
addb
call
cmp
mov
add
add
int
mov
data16
js
aaa
pop
dec
jecxz
in
mov
adc
cld
add
jg
mov
lea
dec
sti
push
jmp
inc
cmp
add
add
cmp
jmp
out
add
dec
xor
add
popa
stos
cmp
add
jb
push
mov
add
lcall
cmp
js
mov
xchg
pop
test
add
add
dec
xchg
add
xor
and
jns
xor
bound
or
out
mov
add
mov
popa
mov
test
mov
mov
loopne
movsb
add
inc
int3
sbb
int
dec
mov
in
sahf
sbb
push
ja
xor
jne
cmp
xchg
addb
pop
fdivrs
dec
cli
addr16
sbb
jg
pop
sbb
imul
add
add
add
add
cmc
mov
dec
outsb
push
jl
xchg
dec
xor
sbb
add
sbb
inc
jo
sbb
lods
add
ficomps
or
push
cmpsb
add
repz
add
cmp
dec
ja
enter
les
xchg
lret
jae
loop
in
insl
pushf
xchg
xchg
shlb
out
clc
xchg
add
int
xchg
add
pop
gs
mov
jecxz
cmp
jbe
add
fdivrp
shll
add
imul
lret
xchg
add
adc
into
cmp
add
scas
out
int
add
aas
mov
sahf
push
outsl
mov
loop
ror
imul
push
and
aas
fimull
xor
fsubrp
adc
aam
add
jecxz
add
out
push
xchg
je
jb
inc
inc
mov
add
xor
add
aaa
cwtl
xchg
push
push
sub
add
pop
mov
pop
jg
sbb
or
add
lods
push
xchg
mov
add
sbb
in
inc
or
sti
into
loop
and
add
loopne
cli
push
mov
pop
pop
dec
lock
dec
outsl
inc
lcall
add
add
lret
lret
stos
push
lods
add
mov
add
into
and
add
fdivs
add
push
or
pushf
pop
in
sub
mov
popa
xchg
addb
in
inc
xor
test
add
test
fstl
negl
xchg
xchg
push
dec
cmp
sbb
pop
inc
fmul
or
add
fidivrs
sbb
jmp
movsl
outsl
pushf
pusha
adc
frstor
inc
mov
sbb
out
adc
add
gs
pop
or
add
sbb
push
mov
add
mov
add
pusha
lahf
inc
add
add
xchg
push
add
scas
add
cmpsl
lea
adc
shrl
imul
data16
leave
xchg
test
add
inc
in
mov
arpl
pop
push
push
jmp
int3
sarb
in
pop
loopne
ret
fimull
cmp
and
add
pop
loop
add
test
add
sub
add
add
mov
jmp
add
dec
stos
add
sbbl
push
jns
mov
add
pop
cmp
xchg
adc
mov
mov
adc
pop
fsubrl
add
jne
mov
lea
push
push
and
out
dec
loopne
xchg
cmp
add
adc
imul
xlat
xor
add
jne
pop
paddsw
hlt
adc
jl
adc
lods
add
fmuls
jle
xor
add
dec
gs
out
push
in
and
add
mov
inc
aas
lcall
mov
sbb
and
add
jg
imul
add
jne
sub
add
jns
dec
mov
addr16
mov
xor
out
test
jno
mov
add
add
dec
sbb
pop
dec
movsl
divl
or
add
les
jno
les
sbb
out
pusha
pop
lret
or
add
fs
cltd
xor
aam
add
inc
add
add
add
jg
pop
cwtl
test
add
jne
cmp
push
add
xor
or
add
add
push
xlat
test
add
ret
add
sar
mov
add
sarl
pop
mov
xchg
mov
cmp
ret
add
mov
cli
dec
lock
push
sbb
imul
stos
add
fmuls
loop
testb
add
pop
daa
nop
xchg
add
add
mov
add
add
jmp
dec
int3
les
add
inc
jne
push
arpl
xchg
lock
fmuls
xlat
fdivl
rcrb
add
out
pop
fiadds
pop
cmp
sub
in
push
sub
scas
add
sbb
sti
testb
jl
fsubrs
add
out
cmpsb
add
and
add
test
add
lahf
xchg
fsubrs
stos
sbb
add
mov
and
dec
inc
jns
movsl
lret
sub
xchg
add
jns
das
jb
movl
pop
mov
add
decl
add
inc
dec
pop
mov
add
dec
mov
les
mov
xchg
jno
cmpsb
add
jl
pop
sub
add
add
push
adc
sub
add
int3
ret
cmpsb
add
sahf
dec
repz
lea
add
add
mov
add
add
cmc
lcall
add
out
add
addr16
add
ds
aad
out
push
roll
add
and
pop
lods
out
icebp
add
bound
xor
or
add
mov
sub
add
sub
add
lret
in
push
inc
mov
add
std
inc
push
fiaddl
clc
movsb
add
out
pusha
or
lret
or
add
mov
cmpsl
inc
pop
cltd
test
add
sub
add
lock
insl
addb
push
pushl
hlt
jmp
add
pop
add
cmpsb
add
push
rcl
aaa
jle
xchg
mov
push
sbb
pusha
inc
cmpsb
add
stc
cmp
push
sbb
xchg
rorl
mov
push
cmp
sti
mov
add
nop
test
add
sbb
mov
jmp
in
pop
jg
add
in
clc
xchg
pop
or
xchg
addb
in
outsl
mov
mov
add
jl
cmpsb
add
pop
int3
fisttpll
rclb
scas
or
add
add
push
dec
pop
add
xchg
and
xorl
pop
pop
or
mov
jg
xor
xlat
mov
add
pushf
js
push
add
and
add
cli
mov
cmp
int3
push
fcmovne
inc
sbb
cmc
xchg
mov
loop
mov
add
add
aas
cmpsb
add
dec
cmp
and
add
add
sbb
out
jno
test
add
je
add
faddl
add
ficoml
add
mov
outsb
and
push
aaa
jp
cmp
bound
mov
cwtl
rol
insl
push
popa
cltd
repz
push
in
push
add
subl
mov
add
jge
icebp
mov
add
xor
cmp
out
xchg
loop
xchg
add
pop
ret
add
add
fwait
aas
out
add
add
add
mov
push
and
add
dec
mov
add
fldt
xor
insl
dec
cmp
add
add
jmp
imul
adc
sub
add
add
mov
add
add
push
add
jae
lds
mov
add
add
push
sbb
ja
repz
add
add
dec
repnz
add
stos
dec
xor
add
cmc
dec
dec
xor
add
jae
add
inc
xor
push
adc
add
out
mov
inc
repz
into
lret
fcoml
fldl2t
pop
rol
adc
add
loope
add
sub
insb
adc
arpl
shl
loope
add
jno
add
fwait
std
and
add
mov
add
insl
xor
ljmp
enter
lahf
sbb
dec
movb
leave
sub
add
push
addl
add
inc
jg
push
sahf
test
add
int
and
out
lods
or
add
push
rorb
call
pop
inc
popa
push
jae
jle
add
lahf
jecxz
sahf
dec
jns
add
cli
cli
or
mov
push
mov
sub
add
sbb
push
insl
stc
jae
add
stos
add
xor
inc
mov
jmp
add
fimuls
add
movsl
xchg
pop
pushf
add
add
icebp
ljmp
mov
das
out
and
add
pop
sub
mov
inc
fisttps
mov
add
xchg
cmp
arpl
stc
add
in
test
add
and
dec
and
add
cmp
sub
adc
add
mov
pop
or
add
adc
mov
dec
dec
addr16
fsubrp
ljmp
cmp
add
sbb
push
add
dec
xchg
mov
out
add
fidivl
xchg
adc
xor
add
inc
test
or
add
lret
mov
fnstsw
sub
addb
push
rcrb
xchg
mov
push
sub
add
sbbl
add
dec
ds
xor
cwtl
cmpsb
add
pop
inc
dec
xor
in
add
or
add
sbb
add
dec
out
add
je
jo
xlat
push
arpl
add
test
add
jno
js
jb
add
jae
and
out
xchg
xchg
testl
mov
lret
dec
gs
pop
xchg
or
add
sahf
pop
mov
xor
mov
sub
mov
sbb
push
and
add
sarb
mov
xchg
push
addb
out
sti
push
insl
rorl
and
loopne
cmp
mov
cmc
xlat
xor
add
add
jge
jmp
stos
add
jnp
add
push
add
xor
add
pushf
popf
adc
add
add
cmp
cmpsb
add
fs
pop
mov
mov
rclb
pop
outsb
fs
mov
jb
inc
jb
mov
mov
addl
push
lods
fildl
jp
sbb
mov
add
fistpll
pop
cli
xchg
dec
cmp
mov
and
lods
add
xchg
xor
dec
je
aam
add
xor
add
inc
imul
xchg
lcall
int3
mov
sbb
add
inc
inc
pop
jno
or
add
int3
add
xchg
add
ss
sub
add
or
outsl
mov
fbstp
mov
add
or
in
std
pop
jl
hlt
cli
roll
add
cmpsb
add
xchg
in
add
fsts
add
nop
dec
imull
mov
aam
jnp
ret
sbb
addb
jnp
roll
out
inc
pusha
add
fwait
mov
test
add
ds
sbb
xchg
xor
insl
setp
rol
or
xchg
cmp
ret
add
add
mov
addr16
jp
inc
push
scas
mov
lret
push
add
add
mov
daa
in
cmc
outsb
inc
imul
adc
fadds
outsb
addb
push
add
jns
popa
mov
loop
xor
add
lahf
inc
cmp
xlat
stos
add
sbb
cltd
inc
pop
push
movsl
inc
add
push
mov
add
xchg
push
push
dec
pusha
jp
gs
and
add
dec
or
push
addb
int
add
add
adc
stos
add
push
not
fcoml
cmpsl
xor
cli
enter
xor
lock
push
mov
loopne
sub
inc
xorl
dec
or
ss
and
add
jecxz
jno
push
jmp
test
add
cmp
shrb
xchg
xor
std
pop
shll
xor
push
das
jbe
mov
shlb
js
in
cmpsl
sub
add
les
mov
arpl
and
push
ds
push
repnz
inc
jno
roll
aad
jg
mov
add
add
psllw
js
test
jle
call
and
and
add
cmp
sarl
mov
outsl
and
add
push
scas
push
dec
push
add
and
add
pop
lret
sti
into
mov
xchg
movsb
add
movsb
add
push
cmp
out
call
scas
pop
push
or
add
mov
pop
pop
push
imul
mov
inc
pop
push
push
ss
add
add
sub
add
xor
push
pop
sbb
inc
pop
and
add
fcom
lret
lds
add
test
in
les
shlb
add
stos
movsl
scas
add
mov
xchg
add
add
enter
add
loop
push
mov
add
mov
in
sbb
add
gs
and
lods
sub
add
add
out
nop
jmp
mov
js
cmpsl
cmp
add
dec
fdivs
popf
scas
add
std
push
add
pop
rclb
sbb
jmp
addr16
adc
mov
add
jmp
add
popf
popa
mov
push
dec
sub
call
out
call
xchg
add
lods
add
ja
jns
je
jbe
lods
add
mov
xchg
popf
sub
add
push
adc
cmp
test
add
and
add
aas
inc
cld
je
shlb
xor
mov
cmp
cmp
adc
lods
add
dec
lea
nop
test
add
sub
mov
cmpsb
add
jbe
arpl
daa
cmp
adc
sub
sbb
iret
push
xchg
je
push
add
inc
dec
daa
stos
fdivrl
aaa
sbb
je
stos
xchg
push
mov
xor
ja
shll
mov
lret
push
xchg
or
add
nop
xchg
push
hlt
mov
mov
add
inc
jp,pt
mov
add
add
adc
fcompl
ret
cltd
aam
sub
jecxz
xor
dec
cmpsl
add
mov
add
inc
lahf
jbe
add
push
add
pop
sbb
sti
push
and
mov
ret
pop
shll
pop
sub
xlat
std
hlt
pop
pop
aaa
adc
push
add
add
push
mov
aad
out
sar
pop
hlt
xlat
cmpsl
inc
push
sbb
in
and
xchg
rcrb
pop
pop
mov
add
pushf
inc
xchg
or
mov
cltd
addb
fidivs
sbb
sub
add
into
les
cltd
ss
add
jmp
addb
mov
mov
add
cmp
lds
pop
mov
add
add
daa
push
add
fmuls
cmpsl
imul
add
clc
lea
jle
add
lret
hlt
lea
add
add
enter
aas
pop
scas
add
pop
push
add
gs
sarb
fstl
pop
mov
add
les
pushf
out
cmp
addb
and
add
jne
push
add
add
cmp
imul
outsl
and
add
add
add
jle
lea
add
test
add
push
push
sahf
testb
mov
add
xor
sti
jno
shlb
add
cmp
jno
add
add
loopne
xor
cmp
mov
out
push
xchg
aaa
int
jb
scas
loop
add
pushf
or
in
add
sbb
push
mov
fstpl
mov
ds
xor
rclb
mov
add
dec
inc
mov
add
push
add
in
mov
in
xor
cmp
mov
push
imul
or
add
sub
loopne
mov
sub
sbb
cli
push
add
dec
adc
imul
push
add
and
add
movsb
add
xlat
sahf
sbb
pcmpgtb
push
add
repz
in
add
pop
adc
cli
addb
clc
pop
sti
imul
add
push
fs
add
and
lods
add
push
mov
add
roll
insl
add
add
shl
leave
in
xchg
jns
add
cmp
sub
sub
add
pop
pop
jge
nop
mov
leave
cmpsl
repz
sbb
xchg
jne
jle
repz
or
add
sub
add
test
jae
lcall
ret
add
add
push
mov
add
adc
xchg
pop
cli
dec
or
add
mov
add
mov
lcall
jne
push
xchg
nop
hlt
xchg
add
aad
add
jl
outsl
adc
add
jnp
xchg
ds
lea
push
and
mov
add
add
out
mov
jp
dec
adc
fimuls
pop
dec
pop
inc
push
push
inc
dec
adc
xchg
xorl
add
loopne
int
add
mov
or
add
in
repnz
aam
addl
lahf
lret
rclb
add
add
add
add
sbb
arpl
ds
dec
xchg
rolb
add
insb
cwtl
xor
insb
je
xor
push
add
inc
test
xchg
nop
cmpsb
add
stos
add
and
add
cltd
push
add
push
inc
dec
xchg
arpl
shrd
xor
fcomi
in
movsb
add
clc
inc
imul
scas
add
cmc
fiaddl
mov
shrb
cmpsl
and
dec
addr16
imul
add
push
add
cltd
movsb
add
in
add
pop
aaa
jbe
rorl
jb
cltd
pop
xor
fstpl
push
add
xchg
sti
sbb
into
inc
fcmovnb
sub
mov
aaa
stos
enter
addr16
add
jl
push
cltd
roll
inc
dec
repz
inc
cwtl
jae
add
cli
daa
lods
add
mov
and
ljmp
add
adc
in
or
add
add
fnsave
sbb
push
or
scas
add
fcmove
mov
pushf
mov
adcl
xor
mov
and
or
add
repnz
ljmp
add
sub
add
mov
shrl
daa
inc
fsubrl
aaa
leave
push
aaa
test
add
rcrb
inc
ret
cmp
mov
add
add
xlat
push
mov
add
mov
add
add
push
mov
add
sbb
add
add
add
in
int
pusha
daa
insl
rcll
das
outsl
nop
out
and
push
je
push
flds
ret
add
lods
add
stc
in
add
xchg
inc
mov
sub
add
xchg
pop
mov
add
aaa
xchg
mov
add
add
js
mov
add
jae
dec
push
out
xchg
das
sub
pop
lret
add
test
sbb
add
pop
ds
shrb
cmp
add
jg
or
mov
movl
add
add
test
add
mov
movsb
add
aaa
cmp
lds
arpl
sti
pop
xlat
add
stos
sub
push
lahf
fidivs
divl
add
add
inc
pop
sub
add
add
add
add
aad
insb
mov
mov
add
or
add
xchg
add
pop
aas
cmp
push
pop
pushf
cmp
push
cmp
sahf
xor
dec
sbb
mov
out
ret
mov
ret
daa
xchg
push
cmpsb
add
lea
mov
add
and
loop
mov
lahf
pop
aas
popf
xlat
push
cmp
jmp
pcmpeqd
repz
cmpsl
adc
dec
iret
dec
dec
inc
xchg
lret
sbb
lock
sub
add
add
mov
add
mov
and
add
cltd
mov
mov
fsubs
iret
push
add
mov
movsb
add
mov
add
fists
fmull
in
and
aas
mov
add
pushf
add
in
adc
inc
fcmovnbe
jmp
test
add
shlb
add
shll
jo
cmpl
ds
xor
and
inc
push
add
mov
inc
inc
jmp
ret
stc
rorb
aas
lcall
add
aaa
dec
sub
add
repz
add
sub
scas
add
sub
clc
shr
rorb
add
in
addb
roll
jae,pt
out
add
fmull
mov
mov
ret
in
divb
sbb
add
push
dec
mov
jns
mov
add
jg
cmp
sbb
push
les
dec
pop
or
cmpsb
add
xchg
jle
loopne
add
add
dec
mov
add
push
add
insl
add
add
pop
mov
add
dec
inc
xchg
mov
pop
cmp
pop
call
add
clc
addr16
add
fst
sub
sbb
imul
and
add
loopne
ret
and
add
call
add
and
add
popa
pop
mov
add
jns
pop
xor
add
mov
adc
iret
add
add
inc
popaw
jecxz
inc
incb
imul
out
push
aad
add
mov
jns
jge
ret
cltd
outsl
xor
mov
push
imul
cld
xor
xchg
and
add
mov
add
add
pushf
ficompl
inc
repnz
adc
test
add
insl
xlat
clc
pop
xchg
add
call
or
add
rorl
jne
bound
pusha
lock
pop
shlb
in
lcall
fisubs
jae
add
and
add
sahf
add
add
pop
adc
dec
dec
and
cmc
mov
xor
loop
dec
cmc
pop
test
mov
add
shl
aas
addb
mov
add
add
jle
adc
insb
scas
dec
ljmp
cmp
js
inc
xchg
mov
sbb
arpl
sbb
jmp
test
add
inc
fbld
add
adc
add
mov
add
mov
mov
pop
mov
loop
jmp
lods
shll
add
in
jno
sarl
mov
outsb
int3
inc
iret
cmp
add
ss
inc
andl
mov
or
cmp
mov
jge
mull
pop
cmpsl
test
add
cmpsl
mov
add
movb
mov
js
daa
leave
jge
add
leave
dec
adc
xchg
sbb
or
mov
std
mov
add
stc
int3
push
rcrl
add
add
lds
ret
loopne
sahf
aam
xchg
xchg
pop
test
add
add
push
lock
mov
ficomps
xor
adc
add
int
cwtl
ror
das
lods
add
bound
mov
xchg
inc
xchg
pop
xor
rolb
daa
shr
das
adc
adc
adc
rclb
mov
out
andl
pop
and
sbb
nop
sbb
xchg
add
cmp
cmp
imul
add
inc
push
bound
add
ds
dec
mov
xchg
push
out
je
add
aad
dec
in
or
jge
add
out
out
adc
ret
and
add
loope
inc
mov
mov
add
add
add
shlb
addb
dec
sub
add
mov
mov
xor
add
fwait
xor
inc
jecxz
xor
sti
sub
cmp
arpl
add
add
add
mov
std
and
sub
ja
add
aam
add
dec
sub
add
cmp
xor
mov
add
push
xor
or
add
push
add
inc
mov
lahf
lods
add
call
or
pop
push
add
push
add
push
add
js
lcall
add
add
and
add
pop
dec
inc
jns
pop
xchg
rcl
or
add
popa
xor
shll
jbe
popa
movsl
fstpl
mov
idivl
pusha
mov
popa
outsb
and
add
test
jge
shlb
jl
jmp
adc
cwtl
jle
sub
push
lret
fsubl
xor
das
out
insb
std
fcmovne
sbb
pop
out
std
jge
addb
iret
repz
mov
add
add
in
shrl
add
incl
loopne
mov
push
inc
dec
bound
add
push
pushf
out
and
add
add
jbe
sti
sar
into
clc
xchg
push
lahf
xor
inc
lock
or
fistpl
push
repnz
sub
add
add
and
mov
xchg
mov
stos
add
in
lcall
jnp
push
popf
inc
aas
sahf
js
pop
fsubrs
push
mov
lcall
jmp
popf
fimull
adc
add
mov
inc
fldcw
test
dec
test
add
jecxz
hlt
in
add
mov
add
into
iret
daa
enter
icebp
outsb
jmp
pop
rcll
pop
mov
out
out
scas
push
push
add
pop
push
add
lcall
outsb
pop
sti
jbe
mov
lods
cmp
pop
andl
pop
add
jno
ljmp
sub
mov
add
cmp
add
repz
add
sbb
cmp
sub
add
fisubs
and
xchg
cmp
movsl
xchg
cmpsb
add
and
add
movsb
add
xchg
sub
add
addb
and
aaa
jno
add
dec
fldenv
and
add
je
iret
mov
cmp
imul
jl
add
inc
push
pop
sti
cmpsb
add
add
lods
push
pop
divl
addr16
jb
js
inc
outsb
bound
add
sbb
adc
xlat
xchg
sbb
lahf
mov
pop
mov
add
xchg
add
js
add
int
jecxz
add
lahf
dec
imul
add
rclb
sbb
push
out
adc
stc
cmp
stc
pop
cld
lahf
loopne
add
dec
inc
cmc
dec
lea
add
jmp
nop
or
js
add
xor
addb
cmpsw
push
test
add
inc
lods
cmp
jle
lea
push
mov
enter
pop
mov
add
cmc
cmp
add
mov
enter
sub
out
inc
addb
mov
add
stos
add
into
cmpsl
pop
mov
lret
mov
aam
inc
lea
sbb
mov
and
and
mov
add
cmp
cltd
sbb
ret
and
enter
addb
loope
cmpsb
add
mov
addb
fwait
mov
dec
cmpsl
mov
add
cmp
je
add
add
cwtl
and
add
lods
sbb
mov
and
test
dec
pop
inc
push
add
mov
sub
push
mov
aaa
push
cmpsl
xchg
sahf
ja
insb
add
add
arpl
add
dec
lahf
sbb
jecxz
cld
gs
fidivs
sub
mov
add
shl
inc
bound
jmp
push
inc
ds
fidivl
clc
xor
add
lret
loope
or
add
clc
push
out
mov
add
mov
add
mov
hlt
lret
movb
add
fnstsw
add
add
push
pop
mov
lock
add
aad
add
push
clc
mov
jp
add
data16
ret
add
add
adcl
jg
mov
push
jp
rcrb
add
imul
sbb
pushf
fwait
loop
add
loope
add
daa
mov
add
push
lret
add
and
in
xor
pop
stc
sub
aaa
mov
clc
and
add
and
add
pusha
mov
add
mov
test
add
dec
push
or
push
pop
mov
xlat
mov
addr16
xor
lds
fs
xor
sbb
inc
addb
imul
xchg
psubusb
inc
test
add
out
iret
push
imul
dec
dec
stc
into
bound
add
jmp
cmp
push
int
enter
dec
dec
xchg
out
gs
xor
adc
jns
in
test
lock
adc
mov
add
cmpsb
add
fs
xor
dec
jb
lcall
or
and
add
mov
add
xor
imul
inc
inc
ds
xlat
lds
int
add
add
jb
test
add
notb
pop
loopne
insl
xchg
jecxz
add
jns
mov
push
fs
or
add
cmp
test
add
pushf
stos
insb
mov
stos
add
fdivrl
test
add
mov
push
bound
xchg
add
aas
in
xchg
xor
push
xor
aam
push
hlt
ret
and
pop
insb
pop
sti
je
addb
data16
cmp
push
add
fcoml
jmp
mov
add
lods
add
jmp
add
add
fisubl
add
ss
int3
sbb
add
or
add
add
add
sub
push
fmull
cmpsl
into
push
jne
add
xor
xor
cmp
xor
in
xchg
adc
mov
insb
cmpsl
pop
fcoml
mov
add
pop
lret
add
mov
cwtl
leave
lds
mov
scas
sbb
xor
mov
add
dec
cli
adc
add
outsl
xor
add
or
add
pop
std
arpl
jl
out
add
mov
cmp
add
xor
pop
gs
arpl
filds
add
adc
jbe
add
add
ljmp
add
push
pusha
sbb
sti
imul
xor
add
aad
add
sbb
xchg
scas
dec
in
shll
adc
mov
or
add
sahf
jnp
add
hlt
cltd
jb
add
adc
sub
add
add
xchg
sar
mov
loope
cmc
lcall
and
add
lcall
add
outsb
leave
mov
mov
sbb
in
jg
jbe
sub
add
jne
add
std
mov
or
add
dec
repz
clc
push
sbb
mov
lcall
jp
mov
jne
push
sub
add
and
add
lds
add
nop
xchg
arpl
lock
jae
in
sub
adc
push
mov
xchg
in
je
mov
jbe
hlt
jg
or
add
jl
mov
add
mov
pop
push
ret
mov
add
add
scas
add
mov
add
push
add
addb
arpl
cmp
xor
push
sbb
mov
mov
push
add
jp
add
pop
push
jns
cmc
jl
add
jmp
dec
bound
xchg
dec
outsl
fiaddl
add
add
add
lret
xorl
add
hlt
mov
xor
add
gs
add
add
pop
xor
add
fcomps
sub
cmp
xlat
inc
popa
popf
les
jo
cmp
cltd
daa
loop
mov
lds
rolb
test
and
dec
sahf
daa
jl
and
add
dec
jecxz
cwtl
xchg
add
sub
add
or
inc
mov
stos
cltd
fcmovne
cwtl
jmp
pop
mov
add
pusha
pop
and
add
ficoms
dec
sahf
sub
add
push
daa
fsubr
mov
add
mov
sbb
add
movsl
fdivrs
push
sti
dec
xor
or
fdivl
movsb
add
rolb
mov
add
sub
add
xchg
divl
inc
jb
aad
jg
mov
add
shl
push
in
push
imul
add
test
inc
lds
stos
fwait
int
sahf
fs
adc
pop
xor
dec
ljmp
addb
mov
dec
pop
mov
fs
sbb
push
pop
out
push
out
mov
in
jns
mov
sub
add
inc
fists
lds
mov
and
push
push
add
jne
mov
add
lret
and
add
orl
outsb
lods
gs
bound
xchg
xchg
in
jle
imul
int3
pop
addl
xchg
fisttps
add
jge
sbb
das
test
add
in
pop
imul
dec
xchg
add
outsl
jae
jbe
adc
dec
and
idivl
fcmovu
call
je
enter
add
mov
mov
mov
add
fdivrl
lahf
mov
add
cmp
sahf
cmp
jmp
xchg
bound
jnp
dec
mov
and
add
setl
add
push
imul
ffreep
inc
lods
add
add
sub
add
pop
dec
jno
movsbl
pop
pop
test
add
add
mov
ret
lea
or
add
bound
outsb
insb
cmpsb
add
jne
rcrl
pusha
dec
aas
push
addb
flds
add
mov
mov
pop
pop
and
add
fcmovbe
icebp
cmpsb
add
mul
out
test
add
mov
addb
xor
roll
jg
add
enter
xchg
mov
push
fld
mull
add
xchg
xor
pushf
adc
jnp
mov
add
mov
add
out
push
xchg
add
add
call
cmc
mov
leave
pop
mov
add
xorl
lcall
ret
add
fnstcw
add
or
add
dec
addb
jo
jp
lods
pop
stc
mov
insl
test
add
add
into
dec
andl
push
call
addb
jno
pop
pusha
out
mov
push
ret
add
leave
lock
and
fldenv
int
mov
in
mov
xchg
ja
mov
je
js
dec
xchg
push
xchg
imul
and
add
add
add
add
shl
imul
sbb
popa
ret
add
aad
and
sbb
add
jle
xchg
sub
cmpsb
add
lcall
xor
adc
sub
sub
js
adc
inc
mov
pop
loopne
adc
pop
fisttps
stos
add
xchg
int3
xchg
adc
ja
fs
add
addb
xchg
imul
in
fidivl
cmpsb
add
jne
ljmp
cld
xchg
ds
dec
and
push
jge
xor
inc
call
ljmp
add
and
add
inc
xchg
add
pop
les
fldt
xchg
cli
mov
idivl
insl
lock
dec
in
mov
mov
push
mov
or
add
jne
and
add
addb
mov
mov
add
imul
push
pop
jo
ds
jae
sti
in
insb
mov
add
xchg
loopne
add
scas
stc
xor
jbe
repnz
negl
inc
cmp
push
add
pusha
test
add
sbb
add
add
pop
inc
xchg
sbb
cmp
hlt
fcmovnb
jecxz
push
jmp
loop
pop
sub
mov
stc
lahf
jnp
cwtl
fsubs
popl
cmp
div
int
push
mov
nop
push
outsl
xor
aaa
and
mov
mov
add
test
add
pop
sbb
std
out
lds
stos
add
ljmp
fsubl
stos
arpl
shl
faddl
mov
inc
decl
add
rcrl
mov
add
xchg
cmp
lods
loopne
out
xchg
lcall
stos
in
add
leave
insl
push
xor
int3
gs
add
and
add
mov
not
inc
inc
mov
add
xor
stos
insl
scas
add
mov
fcompl
sbb
sarl
add
mov
rcrb
icebp
xchg
iret
leave
test
add
inc
or
add
addb
data16
pusha
jge
fucom
sbb
add
leave
push
call
add
imul
int
iret
push
and
push
inc
inc
sbbl
add
push
xchg
mov
add
add
xchg
data16
and
add
xchg
stc
lea
mov
daa
test
add
push
adc
pop
mov
xchg
lods
add
lods
add
sbb
or
lds
clc
ret
push
stc
jb
add
lock
mov
or
add
lods
add
push
in
arpl
xlat
dec
fcompl
addb
test
int3
push
add
fs
sarb
int3
pop
adc
push
std
mov
mov
push
add
push
mov
mov
or
add
js
js
negl
add
shll
mov
shll
fistl
je
add
cmp
lea
dec
rclb
add
stc
sbb
mov
add
and
movsb
add
mov
add
push
push
jbe
cmpsb
add
mov
dec
inc
and
ljmp
lds
add
mov
add
push
jl
xchg
pop
leave
out
repz
mov
repnz
loopne
adcl
add
sub
add
cmpsb
add
cwtl
xor
inc
aad
xor
test
mov
add
aas
int
fwait
lea
xor
pop
inc
mov
add
add
out
leave
mov
add
sub
mull
add
mov
rorl
fdivl
or
add
cmpsl
cltd
pushf
popf
int
cld
addb
and
aad
sub
add
add
sbb
insb
push
add
jg
sbbl
ret
out
dec
lock
add
mov
add
add
add
sub
mov
add
rcll
sub
add
add
add
add
jle
pop
rcrb
add
add
add
jae
aas
mov
add
popa
into
daa
push
test
add
pop
in
sahf
cmp
add
popl
add
inc
mov
ror
sbb
aad
add
adc
lea
test
add
mov
in
loop
out
ficoms
jae
fstpt
inc
jbe
xchg
pop
xor
and
add
scas
push
aad
cwtl
adcl
subl
clc
fs
add
cmp
sbb
jmp
repz
adcl
sarb
stos
add
xor
push
xchg
movsb
add
xchg
not
xor
add
mov
insl
out
pop
and
add
xor
add
jp
mov
fistpll
add
mov
xchg
fcoms
add
sarb
pop
ja
lods
add
sub
add
push
adc
fs
add
push
jo
divl
jle
lock
in
pop
and
add
aaa
ret
shlb
add
inc
movsl
push
decl
pop
scas
sbb
loopne
movsb
add
sbb
fstl
fwait
sti
pop
jnp
loop
mov
xchg
popf
adc
leave
hlt
xchg
add
sbb
cmp
addr16
push
dec
jns
sbbl
push
fstl
insl
std
lock
test
dec
and
mov
jo
imul
add
add
dec
imul
cmp
dec
xchg
pushf
mov
loope
add
xlat
cltd
pop
push
in
fld
pop
lods
aad
scas
lods
add
addb
or
pusha
mov
movsl
insb
or
add
add
stos
shlb
add
stc
add
add
rcrl
push
mov
add
mov
add
gs
imul
mov
pushf
ljmp
and
add
fiaddl
outsb
mov
adc
test
out
out
add
cmpsb
add
int3
iret
push
xor
rorl
or
loopne
xchg
ds
test
add
push
pop
cmp
fistps
int3
lods
mov
inc
inc
in
cmp
or
add
add
and
add
and
add
cmp
jnp
inc
add
add
rorl
add
cmp
addr16
jb
xor
add
cli
scas
iret
push
xchg
or
add
in
aam
jne
mov
iret
movsb
add
jmp
add
out
hlt
adc
mov
loopne
rcrb
mov
cld
or
add
aaa
scas
add
imul
xchg
addb
dec
pop
cmp
icebp
push
xchg
mov
add
ljmp
imul
add
imul
mov
add
loope
add
in
push
add
add
push
mov
add
cmpsb
add
add
add
adcl
dec
lds
sarl
jns
int
pusha
xor
inc
mov
fs
enter
shr
ja
cmp
add
gs
arpl
icebp
shll
add
inc
popf
xchg
xor
add
add
fs
sti
int3
cld
int
mov
pop
fldenv
and
push
add
mov
add
and
push
stos
add
xchg
das
shrl
and
add
jae
cld
jae
fidivrl
dec
mov
jb
and
mov
dec
pusha
pop
push
adc
divl
sti
fs
ja
loop
add
and
lcall
and
add
sub
movsb
add
scas
add
popa
leave
fldenv
in
xor
push
mov
sbb
dec
mov
add
add
add
add
xchg
hlt
jge
ljmp
inc
je
xor
cmp
lcall
rcll
add
aas
js
push
xchg
push
sbb
int3
ja
lds
mov
mov
add
or
add
je
mov
test
add
xchg
add
je
add
stos
ret
push
loopne
mov
loopne
or
add
add
add
pusha
scas
add
jp
outsl
add
into
imul
xchg
jo
add
sub
add
fwait
pushl
fdiv
gs
loop
xchg
fistpl
nop
sbb
jbe
notb
jb
mov
add
add
mov
stos
add
pop
sbb
add
cpuid
add
xlat
inc
xor
inc
mov
stos
add
xchg
hlt
movsb
add
pusha
mov
cld
add
test
add
add
add
add
adc
pushf
add
add
dec
sbb
jp
dec
cwtl
inc
cmp
fdivrs
xor
xor
pop
mov
mov
add
aas
jne
mov
popf
out
insb
push
rclb
push
lods
outsb
ja
jne
js
xchg
popf
sahf
aam
ror
lahf
pop
mov
test
add
or
add
pop
add
nop
cmp
add
mov
cmpsl
sbb
arpl
jle
mov
jp
mov
add
inc
pop
inc
out
subl
add
xchg
scas
push
add
lods
dec
aaa
hlt
bound
xor
mov
out
xchg
or
add
jnp
jg
cli
into
push
shll
or
lret
xchg
movb
add
cmp
mov
inc
cmp
add
pop
add
add
mov
xor
xchg
mov
add
pop
add
add
add
or
add
out
out
mov
fildll
push
dec
push
add
arpl
mov
or
inc
lret
aad
add
mov
cmpsb
add
outsl
push
add
xchg
dec
dec
inc
fcomps
in
divb
mov
push
add
push
inc
out
pushf
imul
add
hlt
cmp
and
add
sub
add
mov
add
call
out
fstps
jmp
clc
mov
and
mov
je
pop
sti
ljmp
add
xor
add
adc
push
add
scas
add
pushf
test
cmc
push
xor
inc
imul
push
mov
add
stc
mov
sarb
in
jmp
imul
icebp
data16
add
js
add
jo
test
nop
daa
sbb
add
iret
cmp
js
sbb
add
popl
int
fs
imul
add
add
add
cmc
hlt
dec
daa
outsl
mov
sub
ja
sub
cwtl
enter
and
aam
xchg
mov
cwtl
mov
sub
std
xor
add
dec
sub
mov
add
xlat
xor
sbb
and
int
xchg
stc
cmp
test
outsb
cmp
add
mov
add
or
jl
add
cld
adc
sti
ss
jg
xor
cltd
outsb
dec
lret
cmpsl
xlat
pop
cltd
jge
stc
loopne
bound
push
xchg
inc
mov
roll
add
or
add
dec
mov
fcomps
mov
lret
testb
add
mov
mov
cmp
aam
fwait
stc
push
sbb
push
push
lds
inc
mov
jecxz
xor
dec
or
xor
inc
imul
repz
add
movsb
add
dec
std
fnstsw
add
add
add
add
push
movsl
pop
sbb
xchg
ud2
mov
ret
pop
js
mov
cmc
shll
add
xor
imul
push
add
add
push
pop
cmp
add
inc
sbb
mov
std
loopne
add
add
add
in
out
cmp
cmp
pop
or
fsts
add
hlt
les
fistpl
lock
jl
pop
lcall
leave
cmp
pop
adc
add
jg
add
xor
add
jo
lcall
mov
xchg
or
add
add
add
mov
jecxz
and
add
xor
add
cmovs
pop
adc
add
cld
sti
jecxz
test
add
insl
cmp
pop
pop
arpl
xchg
xchg
jno
mov
les
dec
clc
push
add
push
iret
sbb
xor
and
add
nop
mov
sbb
jnp
inc
imul
add
imul
add
dec
orl
into
dec
mov
out
lods
add
add
pusha
lods
sub
add
ret
lods
add
test
add
sbb
dec
cmp
fstl
jmp
out
push
in
shlb
inc
cmpsl
movsl
push
lods
add
ss
cmpsb
add
les
pop
inc
pop
std
call
imul
add
inc
aaa
cltd
call
xchg
mov
push
cmpsl
test
add
addb
cmp
shll
mov
out
mov
sub
rclb
inc
mov
rclb
test
movsb
add
push
movsl
in
adc
push
adc
add
jmp
xor
aas
mov
cmp
add
cmpsb
add
push
imul
add
add
pop
in
mov
add
cmp
pop
nop
cmp
jecxz
inc
jg
mov
xlat
dec
js
mov
iret
sub
add
adc
jge
dec
pop
ds
mov
add
call
adc
mov
ja
mov
fdivl
lock
ret
and
xor
xor
loope
ficomps
xchg
stos
mov
add
sbb
fcoml
out
adc
loop
xchg
add
imul
add
add
push
add
aas
out
fwait
inc
divl
lahf
sahf
mov
sub
pop
and
push
mov
add
jp
jp
add
add
iret
mov
sbb
dec
hlt
jmp
add
add
add
mov
inc
fucom
leave
addb
sub
add
push
imul
cmp
outsb
lret
jp
stos
stos
add
loope
push
add
inc
mov
add
pop
jb
adc
ds
push
ss
rorl
or
add
push
add
pop
shrb
add
sub
add
add
repz
mov
in
outsl
xchg
xchg
jmp
pop
sub
add
fimull
cmp
insl
mov
or
add
mov
in
repnz
mov
insb
push
add
out
scas
test
sbb
add
and
add
cltd
rcr
lret
dec
xor
push
dec
mov
test
jne
dec
hlt
jg
add
add
inc
xor
scas
enter
add
mov
loop
push
insb
jge
add
add
ss
fwait
mov
add
popf
mov
dec
mov
sub
add
mov
add
int3
mov
and
add
pop
push
add
rclb
aas
out
mov
nop
mov
mov
loope
fists
adc
add
or
add
out
jbe
dec
in
fcomi
movsl
loopne
rorl
xor
add
add
sub
add
mov
add
mov
cmpsb
add
mov
into
xlat
test
add
inc
jne
xor
and
add
popf
fldt
imul
xchg
sub
add
sbb
add
nop
test
add
pop
adc
push
add
sbb
add
outsl
fstpt
pop
jmp
xor
cmpsl
pop
jne
pop
add
ret
add
mov
sbb
lcall
add
lds
push
add
inc
arpl
out
pushf
scas
add
xchg
int
and
add
and
add
dec
pop
nop
lret
add
call
das
movsb
add
jg
pop
xchg
inc
out
in
stc
jo
inc
dec
scas
jle
push
lea
mov
pop
sbb
cmp
mov
add
fidivs
cltd
and
add
mov
std
mov
add
test
add
mov
inc
lea
add
mov
add
test
hlt
push
add
lock
sub
insb
xlat
jae
add
icebp
addb
push
add
mov
or
adc
push
sbb
add
sub
add
out
add
fisttps
adc
cmovb
add
mov
add
mov
add
push
mov
add
or
hlt
and
add
mov
gs
sub
negb
mov
add
add
sub
add
fdivs
add
add
add
ljmp
dec
lret
inc
stc
popa
xor
stos
add
shlb
add
je
xor
add
popf
outsb
movsb
add
adc
jo
cli
jecxz
aam
push
add
push
or
lock
add
adc
push
daa
lahf
enter
rorl
add
pop
addr16
and
add
add
aad
jb
jns
add
sar
dec
jecxz
movsl
or
add
add
jns
loopne
ret
jle
pop
jle
pop
sarl
test
add
jae
adc
std
cmc
push
mov
addb
push
mov
cmp
stc
mov
mov
mov
test
add
cmpsl
sub
add
xchg
inc
sbb
lret
add
jg
push
test
incl
popa
test
add
insb
fs
or
pop
test
add
xchg
lea
jns
add
sub
pop
movsb
add
or
add
add
add
popf
and
add
dec
inc
scas
inc
and
add
cmpsl
test
add
inc
lret
leave
nop
fidivl
add
add
std
addr16
add
and
cmp
mov
inc
add
add
add
add
add
in
cli
mov
add
add
cmp
inc
iret
cmp
adc
cmc
xchg
sub
add
add
jge
cmp
into
and
add
push
sub
add
inc
xchg
add
xchg
add
add
stc
nop
push
add
subl
out
movsb
add
cmp
add
sbb
add
js
add
sbb
ss
ror
dec
insl
dec
rcll
out
mov
add
cld
push
add
ret
addr16
das
dec
push
test
xchg
and
add
mov
add
sub
xlat
sbb
sahf
hlt
xor
lods
add
and
mov
add
add
int3
cltd
mov
add
iret
ret
ljmp
jmp
add
mov
push
popa
leave
sbb
and
shrl
inc
pop
add
dec
jle
pushf
push
pop
pop
orl
loop
inc
or
add
and
add
cli
xchg
inc
and
add
test
add
testb
add
insl
test
mov
add
dec
aas
test
add
stc
out
in
adc
xor
sti
mov
pop
jecxz
lock
push
add
jae
and
push
lds
lret
xchg
or
mov
stos
imulb
clc
shrb
add
xchg
add
dec
fdiv
inc
and
dec
lock
jae
popa
jns
int3
mov
out
sub
testb
add
add
dec
out
add
repnz
add
or
add
cmp
add
mov
mov
movsl
loope
lds
mov
add
add
dec
outsb
mov
hlt
cwtl
mov
lock
fmul
das
adc
jb
add
add
rcrl
mov
xor
xchg
sub
add
push
mov
aam
add
mov
and
or
cmc
jno
add
add
add
pop
sub
add
add
pop
lahf
pop
pop
aaa
sub
add
add
pop
shlb
add
push
inc
scas
add
addb
cmp
inc
dec
mov
add
shlb
sub
add
jbe
add
lcall
add
add
add
mov
and
add
add
add
scas
or
add
int3
sub
call
pop
cmpsb
add
scas
add
mov
cmp
cmp
mulb
add
cmp
inc
lock
arpl
add
mov
mov
scas
add
out
push
hlt
push
pop
dec
sub
sbb
jge
mov
mov
js
push
add
mov
lahf
xchg
outsl
push
jbe
cli
mov
add
pop
jecxz
fmull
add
mov
add
stc
xchg
out
in
sahf
bound
add
dec
sbb
mov
cmp
into
inc
pop
push
imul
add
mov
add
imul
sub
add
fistl
data16
push
add
jb
add
inc
imul
fbld
push
js
cwtl
cmp
test
sbb
clc
mov
lahf
dec
jl
dec
enter
add
mov
add
add
xchg
pop
clc
dec
dec
lret
mov
xchg
ret
or
add
sbb
mov
daa
addr16
fbld
add
push
mov
cmc
cmp
aam
sti
ljmp
add
pop
mov
pop
inc
test
add
add
in
pop
lret
mov
jne
ficoms
pop
cmp
xor
pop
test
sub
add
adc
scas
add
aas
insl
jl
or
nop
mov
cmp
or
add
testl
mov
addr16
add
push
xor
xchg
inc
cld
or
jo
frstor
insb
and
addb
dec
lock
sub
add
and
add
fdivr
imul
shlb
sbb
pop
xchg
xchg
or
add
add
add
je
adc
outsl
mov
xchg
movsl
inc
adc
add
adc
jle
sbb
mov
add
or
adcl
imull
push
jle
imul
lds
xchg
lret
clc
cmp
add
add
nop
fwait
sti
cmc
hlt
adc
add
xor
mov
aas
mov
add
xchg
movsb
add
test
and
add
outsb
cltd
mov
mov
and
xchg
mov
loopne
add
pushf
add
out
aas
repnz
add
push
lods
add
adc
sub
mov
add
add
hlt
xchg
scas
add
mov
add
sahf
mov
scas
fiaddl
push
jo
jg
ret
inc
das
jle
dec
xchg
mov
dec
iret
addb
popf
into
mov
jnp
mov
cli
push
and
push
rcr
fisttpl
add
cmp
outsl
shrl
sar
sbb
or
add
add
nop
in
test
int
add
add
add
fdivrp
test
add
add
ficomps
add
sub
add
cwtl
aad
or
add
aad
fnstsw
or
pop
int
cld
jg
popf
iret
imul
in
dec
stos
add
mov
xchg
ret
or
add
mull
addb
cmpsb
add
mov
mov
xchg
mov
add
daa
xor
jb
add
dec
sbb
hlt
pushf
and
ja
loop
inc
sti
int3
insl
les
in
sub
add
cmp
out
test
add
mov
add
add
fxch
cmp
push
add
pop
mov
inc
addb
mov
fcmovbe
mov
add
jle
pop
std
and
add
int
sbb
or
in
pop
xchg
xor
mov
mov
addr16
jno
mov
add
add
icebp
add
xor
cltd
cmp
add
inc
adc
push
mov
cmp
pop
stc
mov
sar
jbe
pop
sub
add
sahf
mov
add
adc
add
ss
aam
add
arpl
dec
cmc
dec
dec
mov
add
mov
idiv
sbb
loopne
hlt
or
add
sbb
add
push
or
fcompl
pop
fcmovb
xchg
add
sbb
inc
push
jb
or
lret
add
inc
daa
sbbl
xchg
sub
inc
add
pop
movb
add
xchg
add
dec
or
cmp
cmc
sub
add
or
mov
out
dec
popa
jae
add
fst
inc
les
add
or
add
movsl
add
add
fisttpl
add
cld
scas
pop
shrl
cmp
xchg
add
jp
dec
and
add
mov
mov
data16
std
fcoms
jae
or
cwtl
shr
pop
cltd
jecxz
pop
sti
in
jnp
or
add
test
add
xor
add
xchg
push
pop
ljmp
repz
mov
inc
xchg
rorl
add
mov
sbb
shr
sub
add
jno
add
pop
add
add
mov
add
nop
push
in
xor
leave
lea
add
jb
add
outsl
andl
add
cmc
in
dec
outsb
imul
stos
scas
inc
or
add
jno
add
sub
add
jae
adc
imul
sbb
insb
add
xchg
divl
test
add
add
jmp
add
or
add
sti
idivl
add
add
jns
mov
xchg
add
cltd
or
add
add
jne
pushf
pop
test
add
mov
dec
sbb
pop
pop
adc
lock
lods
fstl
scas
add
jns
negl
scas
add
dec
xchg
add
leave
sbb
mov
add
add
imul
add
add
loop
mov
push
push
adc
add
mov
mov
aam
xchg
push
rcrb
pop
lds
mov
fisubrs
xor
xchg
sbb
pop
fs
mov
and
mov
addb
in
roll
push
cld
aam
cmp
jo
out
mov
test
add
cmpsb
add
imul
and
add
add
and
add
aad
faddp
frstor
cwtl
pop
daa
xchg
sbb
push
add
movsb
add
adc
add
add
add
mov
add
jb
sbb
jmp
add
add
cmp
inc
mov
scas
dec
xchg
insl
out
add
out
cwtl
movsl
test
add
lods
fimull
push
and
jns
add
mov
mov
fistl
sbb
add
add
add
inc
lret
sub
lret
xchg
jmp
cwtl
divb
daa
ss
add
mov
clc
mov
add
add
add
enter
add
aad
ret
push
push
movsl
pusha
fdivrl
out
sbb
add
cmp
arpl
xchg
cmpsl
add
int3
sbb
dec
add
add
push
dec
dec
mov
add
orl
gs
cmc
jo
int
iret
push
xchg
jbe
out
add
ret
jnp
push
push
mov
pop
stos
add
aam
iret
push
push
lcall
mov
dec
mov
add
fdivrl
frstor
mov
add
and
add
aas
sub
inc
inc
jne
add
xchg
dec
push
ja
js
push
add
dec
adc
and
xchg
jnp
repnz
int3
int
ljmp
add
roll
cmp
add
sub
mov
jmp
add
add
movsl
push
test
add
add
repz
add
int3
lahf
ret
jg
stos
add
sahf
fimuls
jl
pusha
in
pop
leave
scas
daa
and
add
jns
push
add
iret
mov
and
add
mulb
xor
cmp
pop
out
jo
lods
pop
fsubl
addr16
add
add
add
jmp
leave
fwait
dec
js
xchg
push
ljmp
xchg
xchg
dec
cwtl
shrl
pop
shl
in
enter
add
inc
jle
sbb
test
add
rolb
cmp
out
mov
push
outsb
iret
int3
hlt
mov
mov
movsb
add
sbb
rorb
adc
jns
clc
movsb
add
mov
mov
add
mulb
test
cli
shl
lock
sbb
add
nop
ljmp
rorb
xchg
fadd
call
lcall
je
adc
addb
dec
fwait
adc
lock
push
lcall
dec
fisttpl
add
cmp
xchg
add
test
add
lret
scas
xchg
dec
jg
adc
xchg
lcall
add
adc
and
pushf
add
inc
xchg
je
pop
cmp
mov
add
arpl
mov
add
xchg
test
add
inc
jb
stc
adc
xchg
and
add
cmp
pop
and
add
add
push
pop
xchg
repz
ss
add
add
cmpl
add
and
iret
mov
add
loope
outsl
lret
and
add
les
leave
jns
add
xchg
mov
add
andl
xchg
mov
scas
or
inc
pop
pop
loopne
cmp
mov
add
scas
or
add
dec
jo
add
addb
movsl
call
dec
das
mov
rcrl
mov
mov
add
test
add
decb
add
xchg
add
inc
scas
iret
sbb
cmp
add
arpl
mov
jne
loop
dec
pushf
data16
inc
out
mov
add
test
pop
add
repz
jbe
pop
push
sbb
xchg
adc
xor
push
add
mov
push
add
pop
mov
jl
fwait
test
add
or
dec
je
negl
push
stos
mov
dec
gs
add
ss
cmp
jns
negl
in
jns
ljmp
mov
ret
or
jl
jmp
add
in
push
add
fwait
inc
jae
add
cmp
and
add
mov
jbe
pop
enter
jb
adc
jo
les
add
repnz
dec
or
add
add
loope
xor
add
dec
and
inc
add
add
inc
mov
adc
push
jo
or
sbb
inc
mov
aaa
push
push
pushf
ss
das
decb
out
bound
push
xor
shrb
insl
and
add
xchg
aas
push
push
adc
add
and
add
jg
fsub
cmp
push
add
icebp
jae
call
imul
jmp
push
add
xchg
mull
mov
push
fdivr
fstps
lahf
addr16
icebp
pop
rorl
imul
into
arpl
add
data16
add
or
jl
cmp
push
lock
in
call
ds
dec
mov
add
xlat
addb
push
add
pop
dec
test
add
cmp
and
add
incb
jb
gs
std
add
add
pop
lock
mov
add
stos
add
fwait
add
leave
mov
add
cmpsb
add
add
repz
js
jecxz
mov
outsb
cmc
fwait
xlat
pop
jns
adc
lahf
push
lods
ror
jecxz
rclb
sub
add
push
mov
pop
addr16
out
rcrl
in
cmp
push
xor
add
mov
shlb
ljmp
gs
mov
cmp
xchg
data16
add
jnp
test
test
add
and
add
in
in
outsb
clc
insb
fsts
dec
ljmp
sahf
mulb
add
mov
pop
in
stos
out
push
pop
add
add
push
and
add
push
add
xchg
add
add
push
xorl
cmp
mov
add
add
sti
nop
mov
add
mov
sbb
cltd
jge
addb
pop
pop
mov
add
add
mov
dec
shlb
add
xchg
aas
into
enter
inc
popa
mov
cmp
in
and
jno
push
adc
mov
add
aas
push
add
pop
lahf
jmp
cmp
add
mov
push
imul
dec
and
add
xlat
into
jecxz
add
xchg
cmpsl
lods
add
lock
mov
das
or
add
sbb
add
test
jns
out
push
sahf
inc
fldl
add
stc
xchg
add
add
sbb
daa
daa
ljmp
mov
pop
popa
add
jmp
into
add
xor
jmp
or
add
adc
push
lds
mov
xor
in
pop
aam
sub
add
add
outsl
out
xor
lods
outsl
loope
cli
lock
jge
icebp
mov
scas
pop
cmp
add
mov
mull
add
sub
add
fs
dec
outsb
imul
add
and
add
cli
shlb
push
in
sbb
movsb
add
cwtl
daa
xor
jb
add
xchg
out
fchs
xchg
fsub
pop
jo
adc
data16
add
shl
mov
mov
push
scas
sub
add
out
pop
jo
push
add
repnz
bound
xchg
adc
add
outsb
divb
pop
mov
and
test
lahf
xchg
sub
xchg
mov
add
aaa
addb
adc
mov
lcall
ljmp
pop
addb
testl
dec
jmp
add
hlt
orl
add
mov
xlat
cmpsb
add
xchg
cmp
cmp
fisubl
add
add
cmp
add
inc
out
pop
js
aas
jg
cltd
cmpsl
fcmovb
add
add
mov
add
xchg
lret
cld
mov
add
cmpsb
add
lock
jo
leave
pop
dec
in
movsl
ljmp
push
mov
lret
fs
sbb
push
mov
add
inc
inc
sub
push
push
data16
add
pop
lahf
adc
add
fldl
in
movsl
sbb
add
daa
mov
add
jne
addb
ret
dec
inc
push
lods
xor
test
add
pop
jmp
cmp
or
add
aam
shrb
add
nop
or
add
scas
dec
or
nop
jns
jle
out
add
sbb
adc
xchg
fsubs
call
and
add
mov
loope
repz
std
loopne
and
add
addb
pop
adc
leave
mov
push
add
cmc
bound
add
les
and
add
push
jmp
add
mov
sbb
add
add
jle
pop
aam
adc
add
mov
rclb
js
add
xor
pop
daa
addb
inc
xchg
fneni(8087
pop
not
mov
xchg
add
iret
mov
sbb
repz
jg
lahf
clc
inc
fdivr
xchg
cmp
fcompl
iret
decl
cmp
xor
add
out
loope
xor
push
push
or
add
int3
fistpl
addr16
fs
out
sub
add
imul
jno
int
pop
stos
mov
dec
shll
shll
jns
add
push
or
add
xor
repz
add
addl
sbb
or
mov
into
cmp
pushf
adc
add
lods
rcrl
add
std
outsb
arpl
add
popa
xchg
xor
fsubrs
add
in
sahf
shlb
jno
cmp
lret
fisttps
add
fxch
mov
push
pushf
and
test
add
xchg
mov
mov
cmp
cmp
ret
call
cmp
jnp
imul
xor
pop
fadd
push
ret
cmp
and
add
sahf
pop
in
ds
cltd
montmul
cmpsb
add
dec
js
push
divb
push
les
iret
mov
mov
test
out
imul
enter
sahf
xchg
mov
add
push
xor
and
add
jnp
add
mov
mov
mov
and
lahf
push
pop
mov
mov
or
in
lods
lret
test
add
aam
add
or
push
add
xchg
lret
mov
add
data16
add
shll
add
movsl
mov
add
add
in
xchg
and
add
mov
inc
xchg
fcompl
mov
add
iret
lret
xchg
adc
add
mov
add
int
cmp
push
js
call
movsb
add
aas
mov
add
or
add
inc
ljmp
jle
fwait
clc
mov
add
sldt
add
pop
mov
jb
ja
cld
adc
push
shll
addb
pop
lds
add
jnp
inc
mov
add
inc
test
add
add
add
cwtl
into
loopne
mov
pop
test
add
add
repnz
add
test
xchg
add
mov
pusha
shlb
jnp
scas
aad
mov
loopne
js
mov
test
add
mov
fimuls
cmp
popf
cmp
icebp
add
add
sub
push
rcl
xor
in
xchg
iret
dec
ss
iret
or
inc
les
inc
push
mov
add
negb
fsubrs
addb
push
js
stc
frstor
add
add
leave
push
sub
add
adc
and
decb
into
stos
add
push
mov
outsb
pusha
adc
scas
xchg
add
aad
subl
sub
add
aas
movsb
add
sub
or
add
aam
mov
add
cmp
setbe
push
inc
addb
iret
adc
add
mov
add
sub
add
jno
aam
cmp
jle
or
add
pop
xchg
xchg
cmp
push
jb
outsb
mov
movq
inc
call
sub
add
add
scas
popa
in
add
sti
gs
ss
fisubrs
jecxz
add
xchg
add
or
movsb
add
pop
sbb
add
movsb
add
xchg
pop
inc
or
add
inc
test
add
add
and
test
add
int3
pop
cmp
add
in
push
and
add
xchg
pop
jae
jge
cltd
test
add
inc
movsl
js
cmp
add
lret
add
loop
push
addb
or
add
add
add
fsubp
mov
add
ja
or
add
push
mov
add
dec
xor
adc
sahf
mov
add
in
mov
sub
add
pop
fs
xchg
xchg
into
int
pusha
imul
push
fsubrl
mov
add
fcmovnbe
jnp
lret
sub
add
scas
add
add
add
jp
pop
pop
mov
mov
add
add
cmpsl
xor
sbb
add
add
data16
pop
add
addb
jp
xorl
add
dec
mov
add
clc
inc
mov
pop
pop
xor
jo
sbb
add
das
xor
and
add
and
add
scas
jl
push
shll
add
xchg
lret
dec
arpl
or
add
mov
add
xchg
ds
add
add
mov
jno
mov
push
in
jge
sbb
mov
add
add
lret
add
outsl
sahf
jnp
cltd
or
add
mov
add
mov
mov
push
sbb
cmp
repz
mov
cmpsb
add
dec
adc
int
lret
mov
mov
add
hlt
push
ss
scas
add
jne
mov
add
sub
mov
adc
mov
add
add
add
aam
negb
loopne
std
aad
jle
cmp
sub
stc
test
sti
movzbl
addb
jl
add
rcrb
add
sbb
add
sahf
imul
add
mov
fadds
add
stos
jmp
ss
test
add
xchg
inc
add
add
lret
xchg
sub
repnz
add
repz
dec
jbe
or
jge
stc
mov
mov
add
loop
jnp
cli
loop
cmp
or
add
rcll
sbb
push
add
dec
sbb
mov
xor
loopne
gs
mov
add
stos
add
test
daa
pop
push
hlt
mov
add
js
imul
dec
pop
jp
sub
imul
mov
ret
fiadds
add
mov
add
inc
jl
add
ljmp
mov
add
add
pop
and
add
fstpt
aam
mov
nop
jae
add
sbb
dec
ljmp
xor
jnp
mov
add
and
add
mov
add
outsb
leave
addb
xchg
add
add
ds
ljmp
add
add
movsl
ret
push
add
sbbl
add
adc
mov
xchg
das
dec
outsl
push
addr16
cmc
fildll
addb
lret
mov
call
mov
or
add
dec
inc
dec
mov
dec
adc
fistl
add
add
repnz
cmp
add
pusha
sub
add
add
add
mov
jmp
xor
or
add
xchg
ficoms
xor
pop
dec
xchg
xor
imul
add
xchg
mov
jl
adc
add
fwait
cmp
loop
dec
xchg
dec
xchg
stc
push
nop
ljmp
jns
cwtl
dec
jl
fwait
movsl
cmp
call
test
mov
cmp
mov
add
jp
rol
add
and
push
pop
shll
and
add
in
pop
or
add
adc
mov
pushf
inc
lcall
xor
pop
test
add
ss
out
jle
test
clc
pushf
and
lret
shll
imul
insl
sub
fs
lahf
dec
stc
testl
mov
mov
add
mov
xor
add
inc
movb
add
push
add
filds
loope
addb
sub
add
xchg
xchg
test
xor
rorb
ljmp
add
inc
xchg
mov
add
icebp
ljmp
test
inc
call
push
push
clc
dec
mov
pop
xchg
xlat
rcl
add
push
xor
dec
loope
add
movsl
scas
add
sahf
jmp
inc
in
lcall
mov
sahf
popa
xor
add
movsl
mov
das
xchg
add
add
adc
mov
add
add
rorb
add
mov
cld
pop
or
sahf
inc
fdivrp
cltd
sub
add
add
and
add
add
sbb
xchg
in
add
add
sbb
shrl
jmp
and
add
lds
and
pop
rcl
xor
xor
add
add
and
add
or
add
add
pop
into
rcl
pop
out
enter
dec
pmaxsw
mov
push
and
ss
xchg
cmpsb
add
pop
test
pop
pop
inc
cmp
rorl
scas
jbe
push
add
mov
add
aad
push
add
add
inc
les
mov
add
xchg
mov
in
sbb
sub
add
add
add
add
cmp
arpl
adc
add
iret
mov
add
jle
mov
inc
sbb
xchg
adc
mov
jb
xchg
aad
xchg
arpl
js
pop
mov
cld
inc
push
pop
add
add
mov
movl
push
xor
pop
cmpsb
add
call
add
fisttps
mov
pop
inc
cli
cmp
pushf
sbb
hlt
jl
lcall
ljmp
mov
add
dec
loop
pushf
andl
or
add
add
repnz
push
add
hlt
aad
adc
cmp
dec
shll
add
jae
scas
dec
xchg
pusha
inc
mov
addb
sbb
pop
sarb
pop
sbb
pop
out
in
sub
add
xchg
jo
push
loop
test
cmc
in
push
movsb
add
add
jecxz
cli
dec
iret
loop
out
xchg
in
push
or
add
popf
test
add
add
das
imul
sbb
orl
mov
scas
mov
add
xchg
loop
mov
add
cli
dec
push
xchg
lret
stos
add
jmp
jae
add
add
inc
xchg
add
hlt
fnstenv
and
add
in
inc
push
orl
jp
loopne
das
scas
add
xchg
add
sti
into
and
insb
mov
orl
push
popf
scas
xor
pop
cmp
sub
mov
int
inc
mov
add
dec
jp
cmc
jo
pop
dec
jl
aas
mov
xchg
addb
aam
xchg
xor
and
imul
dec
mov
add
rorl
lods
add
sbb
mov
rcrb
add
icebp
or
add
push
cmp
ret
add
add
push
xchg
add
sub
add
sbb
jo
sbb
jne
test
add
add
stos
ret
leave
mov
add
add
add
in
sbb
inc
mov
add
movsl
xchg
ret
rorb
add
adc
mov
bound
in
call
les
sbb
inc
shlb
add
movntps
add
fwait
stos
add
jmp
and
add
xchg
loopne
out
add
dec
cltd
pop
mov
add
cmp
add
add
nop
or
add
add
xor
add
int3
push
add
std
or
add
fsubs
inc
or
mov
cmpsl
sti
jge
mov
shl
call
add
aas
pop
pusha
fs
mov
push
add
or
add
test
out
jo
add
adc
shlb
js
dec
movsl
cmp
lahf
or
add
push
cmpsb
add
imul
add
xchg
and
add
add
dec
push
add
scas
cmpsb
add
aaa
cwtl
fsubp
and
sbb
jo
sarl
add
das
mov
add
dec
mov
mov
movsl
je
cld
cmp
popf
lcall
add
in
fsts
pop
ret
add
fildll
mov
inc
lea
jb
and
and
add
push
mov
mov
dec
xor
nop
loopne
lea
inc
jmp
repz
sarb
emms
ljmp
add
out
cmp
iret
sbb
mov
dec
popa
fmuls
nop
mov
add
xchg
xchg
mov
add
push
fdivrs
mov
xor
add
lods
xchg
lods
pushf
push
fstpt
mov
ss
pop
mov
add
xchg
mov
xor
add
dec
js
addb
fwait
jno
jns
sbb
and
add
mull
xchg
jnp
pop
inc
mov
lahf
cmc
loopne
jo
mov
add
mov
push
enter
out
mov
mov
fcmovbe
arpl
outsb
repnz
xor
or
add
cli
push
je
add
std
sbb
into
fisttps
push
lret
and
mov
pop
cmpsl
mov
mov
out
inc
pop
add
and
add
repnz
cmp
mov
push
push
or
add
push
add
aam
imul
testb
ret
repz
insl
jle
push
aas
cmpsl
outsl
fs
popa
enter
shrb
add
pop
xor
push
out
daa
sub
add
cltd
inc
sbb
lds
sarb
xor
add
into
jno
movsl
sahf
xor
add
stos
add
test
add
add
into
jo
xchg
int
cmp
std
addr16
pop
push
add
pop
mov
add
mov
scas
or
add
rolb
aad
ja
add
dec
sub
add
mov
add
add
and
add
rorl
mul
lea
adc
add
out
cltd
dec
sahf
mov
test
iret
pop
shll
insl
add
arpl
sbb
lret
push
std
pop
mov
add
leave
cmp
sbb
push
push
add
lahf
push
xor
add
xor
mov
add
test
gs
add
pop
pop
das
sbb
popa
shll
shl
pop
fnstsw
mov
add
pop
mov
add
in
outsb
fdivr
mov
mov
lahf
fs
and
xor
inc
stos
movsl
scas
xchg
add
add
jmp
cmp
enter
add
inc
mov
fnstcw
mov
add
pop
in
outsl
aad
shr
dec
inc
mov
je
rcrb
add
sub
add
in
scas
add
mov
add
push
add
ja
shll
push
add
push
mov
add
loopne
jnp
inc
mov
add
cmc
adc
lea
mov
jmp
mov
jno
jle
push
push
cli
and
fs
ja
mov
add
aas
sahf
daa
in
pop
addl
add
add
add
sub
add
mov
aaa
add
cmp
cld
sub
add
paddsw
push
out
sub
fidivrs
jle
jne
mov
pop
incb
cld
lock
mov
addr16
iret
xlat
inc
cmova
scas
add
roll
cli
fbld
sbb
push
loopne
xchg
pop
jg
add
add
add
jge
in
adc
inc
push
outsb
push
add
cld
lds
fptan
mov
add
add
push
shl
cltd
push
add
les
mov
sbb
in
add
add
add
addb
aad
icebp
testl
xlat
xchg
vpunpckhdq
and
add
add
aas
addb
xchg
mov
imul
xor
je
popa
pop
mov
add
notl
push
push
pop
push
insl
mov
mov
mov
fwait
sbb
add
ja
lods
add
jp
jp
dec
mov
add
rorb
cmp
xor
rorb
dec
jle
adc
cmpsb
add
test
add
sbb
out
inc
ja
mov
mov
mov
add
dec
stc
jns
call
test
mov
pop
pop
arpl
xchg
push
xor
mov
add
jbe
mov
add
xchg
add
leave
orl
add
mov
push
adc
jb
push
inc
ret
das
stc
push
int
les
out
add
outsb
pop
je
shrb
shll
rcrb
adc
lea
mov
jns
jl
xchg
shll
and
add
mov
sbb
sub
add
pop
test
add
test
iret
hlt
mov
xchg
mov
pop
adc
sbb
xor
jbe
movsb
add
push
daa
and
pusha
ds
xchg
add
test
add
add
fsubrs
add
add
push
test
add
out
sbb
mov
add
add
ljmp
popa
in
sub
jno
sub
lods
out
pop
repnz
cmpsb
add
mov
dec
and
outsb
adc
test
add
add
sbb
add
test
adc
sti
cmp
out
pop
loop
add
in
add
jge
int3
and
fidivl
cwtd
xchg
ficomps
mov
xor
xlat
adc
adc
adc
add
adc
add
add
jo
pop
adc
add
jne
movsl
pop
repz
enter
add
xorl
or
add
pop
pop
daa
xchg
cltd
pop
push
cmp
test
add
dec
pop
lret
push
add
push
push
ficomps
add
mov
push
xchg
jo
dec
aaa
add
pop
aad
cmp
idivb
das
packssdw
pop
xchg
fbld
test
and
and
cltd
dec
je
cmp
mov
add
les
add
add
pop
jmp
movsb
add
adc
scas
mov
loopne
into
dec
or
add
mov
jae
popa
in
dec
int
jp
sahf
aaa
add
ja
rcll
add
add
or
push
mov
in
add
add
ja
out
pop
pop
add
and
dec
clc
mull
pop
cli
mov
adc
lahf
ljmp
add
into
cmp
sub
outsl
rorb
add
mov
cmp
fstps
repz
inc
insl
xchg
popa
push
test
add
dec
loop
notl
lds
jmp
cmpsb
add
test
scas
add
xchg
fs
and
add
ret
add
popa
cmp
lds
aas
and
add
outsl
fistl
rolb
ret
add
sub
add
jae
sar
inc
movb
add
outsb
and
aam
add
notb
mov
jbe
mov
add
jge
test
jge
ds
and
fisubl
mov
jb
push
adc
sbb
cmpsb
add
and
add
or
adc
mov
dec
inc
aam
outsb
in
push
xchg
adc
addl
add
inc
mov
add
jge
add
xor
pop
sahf
xchg
jno
scas
push
mov
lahf
sbb
dec
out
xchg
pop
jae
lret
imul
mov
cwtl
int3
add
inc
cmp
insb
hlt
dec
sub
add
fcmovnbe
in
xor
leave
out
push
mov
sahf
pause
imul
adc
add
lods
add
inc
sahf
push
sbb
add
fs
add
jns
jo
out
push
add
mov
add
fwait
jmp
add
add
rcrl
rcrb
repz
add
push
add
jb
lcall
push
ret
adc
fs
sub
dec
test
fnsave
dec
push
jb
adc
add
jmp
add
mov
add
cmc
aas
int3
mov
add
push
and
sub
push
jge
test
add
add
decb
sbb
movb
jo
std
jbe
pop
dec
xlat
lods
add
mov
fwait
cmp
add
hlt
out
mov
shll
loopne
mov
add
fadd
sub
xor
pop
mov
or
push
xchg
or
jmp
add
add
jle
mov
mov
mov
xchg
jg
mov
add
and
and
outsl
shll
sti
test
scas
add
jmp
insb
outsl
xchg
xchg
jnp
jge
or
add
inc
push
cmpsb
add
jp
sbb
mov
mov
add
push
add
std
cli
and
add
mov
nop
xchg
pop
jno
mov
andl
cmp
mov
nop
sub
add
add
fnclex
dec
in
add
mov
roll
mov
stos
add
pop
jg
push
mov
and
push
loopne
inc
jb
sub
add
test
add
push
gs
add
and
call
xor
dec
mov
add
loopne
lods
add
sub
add
add
add
push
jmp
addr16
mov
cld
sbb
dec
inc
adc
push
mov
add
add
daa
scas
cmp
xchg
mov
add
or
lods
add
imul
push
add
cld
outsb
aam
mov
and
add
sbb
add
mov
fistl
add
jo
std
dec
push
lret
cmp
lods
rcrl
push
xchg
adc
sbb
int
scas
add
add
or
stos
scas
push
sbb
xchg
add
mov
add
mov
mov
fcmovu
xchg
test
add
cmp
int3
ret
dec
mov
add
cltd
and
add
sbb
scas
sub
add
adc
push
or
add
ds
add
cmp
jecxz
movsb
add
push
mov
xor
outsb
shlb
int3
aad
std
das
jecxz
adc
insl
popa
or
cmp
add
addb
enter
or
add
pop
mov
test
add
push
add
data16
jb
sbb
dec
pop
push
add
ds
sbb
fiaddl
add
lods
mov
add
faddp
jp
cmp
jno
pop
addr16
movb
sub
add
add
sbb
test
add
int
imul
inc
push
add
inc
arpl
cwtl
and
add
inc
push
jae
add
dec
outsb
pop
mov
xchg
add
cmpsb
add
sbb
xchg
xchg
in
pop
cmp
adc
or
add
pushf
data16
push
jg
xchg
add
loopne
push
popa
sub
add
pushl
push
insb
mov
sbb
add
andl
fldt
mov
adc
jp
in
clc
mov
lock
add
push
cltd
or
add
loope
inc
add
les
add
xchg
sub
push
lods
ret
and
add
fadd
push
movsb
add
lods
flds
add
push
ret
mov
sbb
bnd
lea
inc
rolb
jge
sbb
add
add
sub
add
not
push
xor
add
fs
insb
or
sbb
not
gs
inc
lock
jbe
inc
je
push
add
push
add
in
fwait
and
add
addb
sub
add
cmp
add
push
add
movsl
add
lahf
push
stc
push
add
add
ljmp
sbb
shlb
rorl
mov
add
mov
dec
fstps
or
add
adc
sub
add
mov
aad
mov
mov
add
sarl
enter
sbb
add
ds
add
in
pop
mov
nop
push
inc
mov
sbb
add
mov
pop
pop
xchg
and
aad
repnz
loopne
out
add
test
add
cld
xchg
add
add
addb
sbb
add
mov
add
or
dec
out
test
mov
dec
sub
int
add
fsts
sub
dec
mov
add
lahf
cmpl
add
inc
inc
fsts
add
fwait
or
add
les
fisubl
sbb
add
fdivrs
fstps
add
adc
add
in
daa
and
add
adc
mov
ret
xchg
adc
addl
sbb
add
pop
outsb
test
add
bound
xchg
mov
push
mov
jo
and
xchg
ffreep
xor
testb
xor
add
fidivrs
lea
add
repz
adc
pop
mov
add
aaa
mov
add
js
je
pop
push
add
push
clc
daa
out
in
inc
outsl
mov
add
mov
stc
ret
fstps
push
fdivl
fimull
inc
add
stos
add
adc
orl
add
loop
out
or
add
push
dec
das
or
add
inc
mov
add
daa
jnp
lods
add
test
test
jmp
jmp
ljmp
dec
shll
bound
jo
aam
bound
add
push
add
xor
loop
and
add
xor
mov
inc
mov
add
in
pop
fisttpll
daa
addb
xor
icebp
jns
adc
xor
xchg
mov
inc
jns
rorb
fs
iret
inc
mov
add
icebp
xchg
int3
xchg
add
ret
pop
mov
aad
dec
dec
pop
bound
mov
addr16
add
sub
add
sub
add
movsb
add
inc
test
gs
clc
fildl
sub
movl
js
fmul
ja
sbb
add
inc
inc
pop
lock
int
and
add
pop
push
enter
test
add
add
addr16
and
add
xor
shl
stos
negl
xor
push
ja
add
dec
addb
in
icebp
pop
movsb
add
mov
adc
xchg
jecxz
fildl
sub
add
add
and
add
sub
push
add
add
add
add
xchg
cmp
xchg
inc
pusha
sbb
inc
lds
rorl
addb
stc
int
addb
and
add
fldcw
xor
fucomp
into
not
lcall
sahf
lock
lods
lret
sar
int
inc
or
add
sti
mov
mov
add
xchg
add
pop
mov
mov
addb
test
add
shrb
add
inc
cli
sub
xor
add
movsb
add
adc
jne
add
push
cmp
shr
insl
push
mov
movl
testb
add
dec
pop
push
in
pop
dec
insb
adc
fwait
or
add
add
ret
cmpsb
add
repz
rorb
add
idivl
push
pop
cmp
mov
push
mov
aas
jae
add
outsl
aad
or
push
cmp
inc
shl
leave
lahf
inc
jge
in
aas
cmp
mov
add
push
scas
nop
jg
sbb
dec
push
ret
add
add
arpl
or
add
add
lahf
adc
and
add
test
mov
add
inc
dec
addr16
xor
repz
std
pushf
dec
in
jnp
mov
add
pop
xor
mov
add
mov
addb
or
add
pop
push
adc
push
add
or
cwtl
scas
add
sbb
jns
aaa
jmp
leave
in
xlat
xchg
lods
add
pop
js
jmp
xchg
icebp
or
mov
cmp
cmc
repnz
shll
pop
cmpsb
add
pop
pushf
sub
xchg
xchg
jnp
icebp
cld
int3
sub
sbb
add
push
js
adc
ret
les
int
pushf
mov
icebp
lock
add
gs
addb
mov
fistpl
dec
mov
imul
loop
insl
lea
aaa
mov
add
dec
mov
inc
ss
mov
out
or
add
sub
add
cmp
in
jno
fdivl
mov
adc
popa
flds
pop
jecxz
add
in
pop
lahf
pop
add
add
cmpsl
ret
ss
pop
fisttpll
pop
insl
sub
out
clc
jo
out
add
xchg
addb
in
iret
in
xchg
mov
jmp
out
adc
sarl
and
add
add
dec
dec
fstpt
lock
xchg
add
jb
dec
jge
inc
and
add
cmp
push
xchg
or
add
xlat
mov
cmp
insb
loop
dec
jmp
or
add
xor
fisttpll
push
xchg
add
add
push
or
leave
push
push
and
add
add
hlt
xchg
adc
xchg
dec
int
jae
loop
cltd
dec
xchg
add
sbb
mov
test
add
call
add
movsl
shlb
into
mov
adc
outsl
lods
add
fnop
add
subl
sahf
inc
mov
xchg
cmp
jb
popf
in
add
add
negl
clc
aaa
cmp
out
inc
pop
lret
cmp
cmpsl
out
add
insb
fisubrl
lds
xchg
add
jbe
daa
decb
add
scas
add
mov
lods
add
or
inc
dec
cmpsb
add
sub
add
shlb
add
jno
xchg
lea
aas
cmpsb
add
mov
jmp
add
mov
js
dec
and
outsl
inc
push
lret
cwtl
xchg
stc
sbb
stos
mov
add
xchg
push
cmp
aam
cmp
add
and
add
mov
cmpsl
sbb
add
andl
cmp
out
add
xor
mov
add
add
repnz
out
lret
and
das
stos
and
add
addr16
test
add
ds
ljmp
inc
ss
iret
stos
loop
pop
inc
xor
lcall
stos
insl
cmp
outsl
mov
sahf
jne
add
add
jno
push
inc
xor
inc
repz
add
mov
push
outsl
mov
mov
add
rolb
hlt
xchg
fwait
or
cmp
add
jl
cmc
fistl
inc
inc
pop
lahf
push
mov
fsts
nop
and
add
aas
orl
add
add
into
adc
leavew
int3
insl
inc
lahf
inc
test
add
or
add
pop
leave
mov
sub
mov
add
pop
icebp
fists
dec
in
push
add
mov
add
pop
adc
push
mulb
add
test
jmp
adc
add
mov
add
movsl
adc
jbe
inc
adc
add
inc
pop
pop
mov
xchg
xchg
lret
and
add
test
push
lea
or
out
adc
dec
lods
mov
xor
out
shl
cmp
add
in
clc
leave
xor
add
int
inc
aam
sbb
xchg
push
movsl
cmc
mov
add
and
add
enter
int3
xlat
arpl
cmp
add
or
fadd
fwait
lcall
imul
scas
imul
ljmp
pop
fldl2e
xchg
bound
add
movsb
add
push
mov
test
add
jge
push
add
shrl
enter
xchg
loop
shll
sub
add
test
sti
aaa
lock
jl
ds
push
aaa
cltd
insb
mov
cmpsl
das
cmp
sub
lret
adc
inc
jmp
add
dec
pop
or
mov
add
mov
and
jg
jecxz
std
xchg
and
add
xlat
rcrb
dec
mov
fldenv
mov
add
jl
add
bound
pop
mov
dec
xchg
xor
add
into
pusha
xchg
add
aaa
sarl
add
xor
out
add
push
xor
add
repnz
sbb
mov
testl
add
test
add
fistpll
mov
jmp
mov
lret
xchg
dec
in
test
add
pop
or
add
inc
mov
mov
jl
inc
xchg
add
imulb
fld
cmc
dec
out
iret
xchg
popa
sub
add
int3
pop
xor
cli
sbb
add
dec
ja
xor
clc
pushf
jg
jne
scas
nop
push
add
scas
add
inc
xchg
push
mov
imul
add
jl
add
add
jge
add
imul
cmp
push
lea
stos
add
add
sbb
add
mov
sti
pop
je
data16
inc
addb
cmp
add
jno
dec
sti
scas
add
inc
inc
dec
nop
lcall
call
test
add
into
dec
int3
jb
jmp
shlb
mov
mov
loop
rorb
add
push
xchg
xchg
repz
test
add
rorb
dec
sbb
ss
pop
dec
test
scas
push
enter
cli
mov
test
add
jns
xor
push
sub
mov
add
push
jbe
and
add
add
xchg
jmp
cmp
inc
pop
out
add
lret
ss
xor
add
pop
mov
xor
add
ret
sub
add
lods
add
clc
mov
cmp
cmp
add
xor
jae
sbb
cmc
dec
mov
arpl
hlt
addr16
add
movsb
add
add
test
add
jle
pop
aam
out
push
test
inc
cmpsl
dec
cmpsb
add
adc
dec
add
add
mov
sub
add
fdiv
or
add
mov
add
xchg
addl
jnp
inc
cltd
sub
add
inc
mov
clc
xchg
clc
ljmp
add
stos
in
xor
add
add
icebp
cmp
push
sub
lods
add
adc
fs
adc
enter
movsb
add
mov
add
jl
addr16
add
sbb
ja
and
imul
xor
inc
inc
ja
loop
cmc
cwtl
in
xchg
add
rclb
xor
mov
test
add
ficoms
lods
and
add
pop
hlt
addb
test
add
add
cli
push
sub
enter
icebp
push
jp
add
stc
test
inc
cltd
ret
push
and
add
enter
jo
sbb
add
xchg
xor
je
push
inc
lahf
and
aas
pop
mov
lret
lods
add
pop
lds
sub
shll
roll
add
add
add
stc
cmp
or
adc
push
add
dec
pop
int3
scas
add
adc
ljmp
stos
or
addb
repz
dec
push
ss
jge
mov
inc
mov
pop
bound
lods
sub
add
pusha
push
ret
add
add
pop
sbb
fdivrs
sub
xchg
add
add
daa
fdivs
xchg
mov
add
adc
mov
add
ss
xor
cli
cmp
lret
adc
cmpsb
add
cmp
cltd
insl
xchg
daa
push
sysenter
and
add
mov
cmc
adc
jno
iret
lods
push
jmp
xorl
das
addr16
cmpsb
add
shrl
add
add
repz
xor
push
in
add
mov
add
outsl
sbb
jae
add
pop
pop
int
stos
add
sub
fwait
call
mov
add
xor
mov
adc
cmp
add
addb
shl
adc
pop
hlt
mov
add
add
sahf
cmpl
push
push
cli
lea
add
sahf
mov
xor
and
adc
add
test
add
sub
add
aas
xchg
push
lahf
jnp
jmp
add
addr16
repz
js
in
pop
in
inc
xchg
xor
push
out
lds
mov
lock
aam
mov
jmp
add
push
or
fwait
hlt
rcrb
cmp
sbb
outsl
push
jne
sbb
add
add
jmp
add
and
add
test
add
movsl
adc
out
pop
cmp
fsts
adc
sahf
call
add
xchg
xor
and
add
mov
insb
lds
icebp
loopne
mov
add
jp
dec
push
add
adc
add
fnsave
add
sahf
xchg
call
jne
xlat
pop
sbb
je
xchg
push
add
and
pop
dec
cli
jp
mov
add
add
and
add
add
add
xor
jp
mov
fidivrl
mov
add
push
stos
out
sarl
inc
rcll
add
out
add
add
add
jns
cmp
addr16
cmp
shlb
add
mov
jg
inc
add
pop
pop
adc
add
iret
test
add
cmp
jo
pop
pop
in
movsb
add
scas
mov
js
rolb
aad
aam
int3
dec
out
movsl
pop
rorb
sarb
pop
addl
push
lahf
psllq
or
xor
outsl
mov
sahf
aam
imul
out
xchg
outsb
or
add
add
sbb
xchg
pop
aas
jno
pop
pop
jl
add
jp
repz
cmp
push
dec
push
sbb
aam
shl
and
add
fnstsw
xor
add
idivl
popf
nop
add
add
add
in
lock
aas
in
add
test
add
aaa
mov
add
mov
popa
mov
add
adc
add
mov
sbb
fwait
inc
cmp
and
add
stos
add
jae
and
add
movsl
dec
lret
inc
sti
addr16
jae
sbb
js
lock
js
lcall
inc
ljmp
add
mov
push
fldcw
add
or
add
sub
add
sbb
mov
mov
push
adc
pop
insl
ret
add
adc
jg
lods
add
add
xor
fwait
repz
cmp
pop
jo
into
mov
push
cmpsl
ds
stos
iret
addb
xor
addr16
insb
imul
cmpsb
add
imul
cwtl
arpl
xchg
cmc
push
repz
and
mov
addb
mov
pushf
mov
inc
aam
mov
add
xchg
mov
jb
add
or
add
sub
bound
add
lods
add
cld
movsl
das
loopne
add
loope
insl
mov
inc
cmp
add
add
push
jg
cmp
cltd
xchg
leave
fists
fisubrs
add
imul
lds
or
ret
inc
sbb
mov
aam
loopne
add
daa
mov
or
add
fimuls
inc
add
sbb
inc
mov
add
push
add
iret
fisubrs
imul
cmp
out
out
shll
leave
ja
add
jp
cmp
sub
add
add
sti
popa
aam
cmp
rcrl
push
add
std
and
add
xor
loope
and
mov
ficomps
mov
or
mov
xchg
jae
add
cmp
jle
dec
pusha
push
push
push
add
lret
dec
jge
test
add
or
add
or
adc
add
mov
add
cmp
pop
aad
je
xor
pop
adc
add
cmp
jo
movsl
mov
ss
mov
stos
mov
sub
add
add
iret
jo
and
dec
mov
clc
loop
jge
insl
ja
add
shl
jecxz
fiaddl
cmp
add
push
mov
ja
mov
insl
icebp
mov
add
add
add
add
rcrb
mov
rol
loopne
push
test
add
mov
enter
add
test
add
andl
add
mov
pop
mov
mov
mov
add
out
dec
daa
xchg
fwait
arpl
add
dec
push
sub
pop
mov
sbb
cmpsb
add
arpl
add
imulb
add
fnstcw
mov
add
iret
lahf
mov
inc
mov
pushf
xchg
add
imul
add
xor
xchg
jno
in
into
jle
ja
inc
in
sbb
outsl
jl
push
negl
fidivl
pop
outsl
mov
pushf
mov
shll
hlt
test
or
test
add
mov
pushf
sbb
loop
lods
rcrl
dec
lock
add
xchg
fs
inc
mov
xchg
scas
add
dec
scas
xchg
jmp
lds
pushf
cmp
add
clc
cmp
add
cmpsb
add
stos
add
gs
data16
adc
in
lcall
imul
add
aad
mov
sub
add
push
push
push
sbb
lret
xlat
rcl
lods
add
sub
sbb
mov
add
add
mov
test
add
jne
sbb
jle
aad
add
inc
sbb
icebp
mov
mov
or
add
add
add
inc
jmp
loope
dec
adc
dec
or
add
xor
push
ret
fcomps
push
add
add
inc
add
loopne
push
mov
push
add
mov
pop
inc
xor
sub
xchg
mov
mov
add
or
dec
cld
dec
aam
and
add
push
test
das
mov
mov
add
cmc
leave
in
xchg
jl
or
add
clc
mov
add
push
add
cmp
add
lock
sbb
jmp
clc
hlt
push
pushf
mov
mov
add
and
sahf
inc
jle
cmc
repnz
add
sahf
stc
cli
sub
add
pop
in
mov
dec
lods
cmp
mov
mov
cmp
mov
loop
jmp
lahf
add
insb
stos
mov
gs
add
shl
cmpsb
add
or
add
inc
mov
push
add
lret
call
mov
jb
mov
int3
lret
add
mov
add
jae
insb
adc
pushf
push
jno
jge
cmp
movsb
add
ja
add
mov
mov
add
cmp
adc
mov
ud1
and
xchg
stos
add
std
movsb
add
shll
add
mov
aam
mov
add
js
add
add
lods
add
and
shll
mov
sub
mov
dec
icebp
mov
add
mov
cmp
push
xor
addb
fstpl
add
xlat
scas
fists
pop
xlat
and
cmp
out
mov
loope
rol
test
repnz
sti
test
add
push
or
dec
jb
popa
sahf
leave
ss
sbb
lock
add
or
add
add
scas
add
push
xchg
and
sbb
add
add
sub
add
int3
bound
outsl
fcmovb
addb
sub
add
loop
js
leave
addb
ss
leave
mov
scas
add
mov
add
xchg
sbb
dec
mov
ret
jns
addb
add
add
pop
mov
xchg
add
nop
push
add
aas
addl
add
add
hlt
xchg
sub
add
add
fadd
lock
imul
xor
sub
add
dec
xchg
outsb
std
adc
imul
adc
mov
fmull
xor
add
mov
dec
subl
lods
add
nop
repnz
roll
add
hlt
mov
push
add
cli
ja
push
and
add
mov
test
pop
jg
scas
jbe
add
xor
add
divb
sarb
add
ficomps
add
js
sub
add
xchg
add
and
add
fldenv
dec
xchg
mov
sbb
mov
dec
or
cwtl
xchg
movsl
jl
ret
pop
jp
cmp
pop
gs
inc
mov
xor
add
jbe
add
inc
fcmovne
xor
add
mov
loopne
inc
jp
xor
data16
add
mov
add
add
lret
sub
jno
scas
inc
or
add
and
test
out
cmc
sarl
add
adc
addb
fistpll
add
stos
add
fadd
add
add
add
or
jo
loop
rcl
cmp
stos
fs
imul
in
add
or
add
xor
enter
adc
push
add
mov
aaa
adc
outsb
push
fcompl
leave
sarl
or
add
add
and
add
add
sbb
orl
add
movsb
add
mov
sub
add
mov
push
dec
mov
xchg
and
xor
dec
adc
mov
inc
jge
dec
add
add
in
loopne
cwtl
jg
in
sbb
lock
sbb
out
mov
aam
add
mov
push
ficoml
sahf
push
cld
test
jle
add
push
pop
pushf
jp
imul
and
add
add
dec
movsb
add
test
xchg
mov
mov
call
scas
inc
push
cltd
jmp
arpl
xchg
add
stc
push
loop
jne
pop
and
adc
jo
add
jo
fiaddl
push
mov
rcrl
mov
iret
pop
sbb
aam
add
push
stos
add
sbb
mov
add
add
mov
jnp
add
addb
dec
push
cld
mov
or
enter
icebp
insl
fs
das
out
pop
mov
divl
xlat
je
xlat
ds
stos
add
loop
mov
jp
add
add
fs
dec
ret
xchg
and
jnp
add
mov
decl
je
jg
inc
dec
pusha
sbb
add
sbb
add
sbb
push
jge
sub
push
add
mov
and
add
lcall
add
test
add
lods
sbb
push
aad
cld
mov
pop
ljmp
je
out
jle
mov
add
rolb
sbb
pop
out
icebp
jnp
mov
adc
add
and
add
inc
cltd
and
add
pop
xlat
add
add
aaa
push
das
cmc
xchg
xchg
add
sub
add
scas
add
sahf
in
icebp
daa
jecxz
add
fimull
add
ficoms
add
adc
scas
add
fistps
outsb
gs
js
fadds
push
add
addb
clc
jp
add
jns
xchg
arpl
gs
sar
pop
pop
xchg
cwtl
or
xchg
sti
int3
mov
int3
push
int
fimuls
jge
popa
fists
pop
mov
or
mov
bound
inc
add
mov
add
and
js
in
mov
add
pop
dec
jb
sbb
or
cltd
lea
add
and
add
jle
add
ret
lea
add
mov
in
add
add
data16
add
jle
add
adc
push
aaa
xchg
dec
fxam
out
ss
jo
test
js
jnp
push
or
lods
push
add
pop
jl
imul
dec
jecxz
push
ja
shl
in
mov
loop
cmp
lcall
cmp
pop
sub
add
fdivl
add
insl
or
inc
insl
addb
les
sbb
mov
sbb
jae
jnp
add
rcr
inc
in
fwait
shll
sti
dec
dec
rcr
nop
insb
and
mov
add
loopne
lea
xlat
cmp
cld
cmp
shlb
loope
xlat
mov
iret
pushf
jge
mov
fwait
cmp
mov
stc
dec
and
add
and
mov
jae
jle
addb
mov
out
dec
dec
inc
pusha
pushf
bound
bound
dec
jmp
sti
rcr
popf
aad
sub
add
sub
add
jg
add
add
movsl
sub
add
lock
in
popf
sbb
and
add
add
in
sarl
or
add
add
mov
mov
jns
arpl
jae
dec
adc
in
xor
ror
push
outsb
dec
inc
pop
xor
dec
into
ss
add
add
movsb
add
mov
sub
movsb
add
and
sub
add
or
add
add
or
aaa
sbb
add
sarb
adc
push
fxch
inc
test
add
insl
out
adc
add
pop
lods
mov
mov
push
add
repnz
repz
add
fildl
add
lock
add
call
in
add
mov
fwait
lret
test
add
xor
and
add
arpl
mov
add
cmpl
sub
add
add
sbb
push
filds
add
inc
das
mov
lock
add
leave
jno
xor
clc
or
add
mov
cltd
adc
and
add
sbb
mulb
jb
mov
enter
mov
add
add
daa
jns
dec
jne
pop
and
add
dec
mov
movsb
add
dec
xchg
scas
inc
jl
adc
mov
add
mov
add
mov
push
add
xchg
scas
gs
lods
ljmp
xchg
push
add
dec
mov
add
mov
nop
divb
in
lcall
or
add
dec
fwait
sti
or
push
add
out
mov
mov
add
fwait
test
add
cmp
add
mov
mov
sbb
add
push
add
in
leave
cwtl
fimuls
pop
mov
xor
add
mov
mov
idivl
add
push
sub
movsl
mov
add
leave
fistl
addb
or
push
outsl
out
add
pusha
sbb
push
scas
add
ja
add
push
fmull
dec
data16
add
add
add
fcomps
sbb
leave
sub
add
cli
subl
xchg
inc
adc
sub
mov
add
cmp
dec
dec
mov
or
add
and
add
enter
ljmp
insl
dec
add
dec
lahf
int
repz
add
loope
outsb
mov
cmp
addb
dec
adc
and
add
movsb
add
arpl
xor
add
lahf
stos
les
sahf
mov
jle
adc
sti
int3
xor
mov
mov
add
pop
mov
ret
add
add
and
add
jle
add
sbb
out
nop
mov
xchg
adc
mov
dec
movsl
xchg
inc
iret
pop
adc
dec
cltd
mov
mov
fcoms
add
add
push
xor
stos
add
adc
jmp
cmp
aad
jmp
sbb
popa
pop
adc
xchg
ljmp
mov
das
and
ja
lret
jl
fmul
sbb
add
add
add
add
mov
in
dec
mov
out
inc
daa
les
out
pop
icebp
mov
dec
xor
dec
inc
icebp
lret
addb
imul
insb
pop
aad
and
add
repnz
jne
push
add
xchg
and
or
and
add
addb
add
mov
add
xchg
jbe
add
in
mov
add
add
sarb
imul
ret
adc
sub
push
or
fsts
and
lods
adc
adc
and
pop
jo
js
add
in
and
push
pop
mov
add
inc
mov
add
dec
mov
inc
and
mov
loopne
add
ret
pop
pop
add
pop
mov
cmp
imul
add
add
mov
adc
mov
scas
add
push
add
fistps
jecxz
add
popf
lahf
lock
and
xchg
add
fistpll
add
or
fsqrt
cmp
mov
cmc
fstpl
add
hlt
cmp
into
dec
pop
lods
mov
dec
inc
jle
add
imul
rolb
xchg
push
add
insb
add
xor
pop
or
add
jmp
jmp
imul
lock
lock
xchg
xor
fisubrl
pop
rclb
add
cmp
add
dec
pop
jecxz
xchg
xor
lret
and
add
daa
lock
add
push
mov
add
add
aaa
adc
lods
add
pop
int
xchg
mov
mov
jne
add
fnstsw
add
cmp
add
xor
add
dec
addb
pop
cmc
fists
sbb
inc
bound
mov
xor
insb
mov
xor
xor
add
add
add
adc
ds
mov
jp
jp
push
in
rolb
add
and
add
cmpsb
add
xlat
insb
add
add
js
and
jnp
pop
dec
out
add
in
ds
sub
add
mov
pop
fdivrl
stos
add
jl
cmc
pop
add
sub
add
lods
outsb
pushf
leave
pusha
cmpsl
dec
jnp
fwait
lret
arpl
add
adc
mov
mov
add
jo
add
enter
shlb
in
cmc
lcall
daa
adc
int3
add
jp
inc
xchg
cmp
inc
add
add
push
add
aas
das
xlat
inc
ljmp
add
shll
fdivrp
fimull
and
add
ljmp
sbb
push
add
jo
int3
lods
add
inc
sbb
and
add
mov
add
stc
inc
mov
sbb
lock
cmpsl
sbb
cmc
movsl
xor
add
add
add
add
add
dec
jne
mov
push
or
add
add
in
pop
adc
arpl
mov
xchg
arpl
icebp
lods
push
fimull
xchg
dec
xchg
and
add
icebp
sub
add
sub
add
stos
add
pop
cld
jns
rcll
lcall
xor
push
add
cmpsb
add
or
clc
sbb
add
jns
dec
push
push
pmullw
add
sbbl
ret
imul
test
add
out
mov
adc
inc
imulb
add
clc
and
add
enter
sub
add
imul
jecxz
inc
xchg
hlt
xor
sub
add
outsl
pop
mov
fwait
lcall
jp
add
mov
cmp
add
dec
xor
inc
jle
cmc
add
add
stos
lods
movsb
add
xchg
into
jnp
and
add
out
idivb
xchg
xchg
fldl
rcll
nop
std
test
add
add
mov
xchg
fisttpll
aad
arpl
int3
ljmp
add
and
cld
test
add
add
xchg
or
clc
lods
jae
ja
sub
add
ljmp
aaa
cmpsb
add
sub
add
in
in
jmp
loope
mov
and
add
jg
adc
inc
icebp
arpl
sbb
jg
add
out
dec
push
push
int3
xchg
ret
imul
dec
out
out
leave
addr16
imul
loopne
and
add
add
sbb
lods
add
add
popa
xor
loopne
add
inc
fsubl
add
add
cmpsb
add
adc
fnstenv
leave
insb
fs
push
subl
push
imulb
or
mov
iret
xor
jno
inc
dec
fs
outsl
pop
cmp
add
repnz
or
inc
mov
add
inc
mov
mov
add
mov
add
push
cmp
add
ds
mov
mov
pop
and
add
add
lds
rorl
movsl
mov
dec
pop
cld
icebp
adc
icebp
addb
add
xchg
int
mov
adc
add
jbe
repnz
fsubr
rorb
xchg
addb
xor
or
adc
lret
push
push
push
sbb
adc
in
imul
rorb
push
and
push
bound
add
out
cmp
add
lahf
mov
lea
add
ja
add
outsb
mov
add
cmp
add
in
stos
mov
add
loope
arpl
push
xchg
dec
jle
pop
xchg
ret
sbb
mov
add
aaa
cld
push
cmp
adc
add
fistl
dec
sub
add
mov
add
dec
lods
add
movlps
xchg
and
add
push
sahf
rorb
push
das
aas
mov
add
int3
adc
add
mov
xorl
add
add
add
jge
jmp
sar
add
aaa
jmp
jno
leave
push
or
add
ljmp
mov
add
lods
daa
pop
mov
mov
scas
inc
jno
add
xchg
jle
lret
sahf
addb
xchg
stc
rol
fs
fdivl
sub
add
mov
xlat
lahf
fisubrs
mov
xchg
leave
add
leave
test
xorl
mov
add
sbb
pop
mov
sub
add
das
pop
xor
add
mov
jmp
nop
mov
add
push
pusha
loop
ret
popa
iret
addb
jo
daa
movsb
add
repz
test
add
addb
push
sbb
in
addr16
aad
mov
add
rcrl
add
fnsave
add
xor
add
jae
xchg
sub
add
sub
add
push
pop
aaa
push
mov
addb
rclb
loopne
add
leave
cmc
lcall
add
inc
addb
js
mov
sbb
xor
nop
inc
std
sub
call
int3
adc
xor
xor
shlb
add
jbe
pop
scas
mov
sti
js
in
add
sbb
fsubr
ja
idivl
into
or
add
jno
idivb
jge
xor
xchg
scas
add
mov
mov
jmp
outsb
add
jb
fs
sbb
sahf
add
add
gs
mov
add
dec
mov
mov
out
add
daa
les
movsl
out
outsb
push
les
shrl
imul
data16
add
insl
insl
or
add
mov
mov
les
add
movsl
scas
add
lods
add
mov
mov
add
das
loope
add
mov
addb
fwait
inc
std
shrl
jae
dec
push
mov
add
movsl
shlb
enter
cmp
lods
add
das
ljmp
or
add
add
mov
shl
fwait
in
mov
add
xchg
push
xor
fstps
stos
nop
pusha
ds
andl
xchg
pop
addl
mov
sbb
add
adc
add
xchg
or
add
push
add
pusha
xlat
int3
sub
sub
pop
dec
fstpt
out
pop
inc
rorl
add
mov
sarl
data16
jae
add
pop
xor
pop
cmp
sti
pop
mov
test
add
push
add
out
call
mov
mov
xchg
and
add
pop
dec
sub
add
in
add
push
add
addb
sbb
add
stos
or
add
add
add
jp
bnd
jno
pushf
movsl
and
add
rcrl
add
fidivrs
add
mov
fcomip
inc
cmpsb
add
movsl
incb
add
lahf
pop
in
leave
dec
pop
fidivrl
cmp
add
gs
and
or
fnsave
jae
add
add
fwait
xor
dec
in
push
cli
loop
ret
aas
push
and
add
data16
add
push
add
lret
cld
clc
jb
add
aam
or
mov
insb
arpl
mov
add
addb
inc
jl
outsb
sbb
add
into
push
adc
add
xchg
pusha
lods
add
cmp
mov
mov
jbe
add
cltd
pop
pop
aad
arpl
nop
xchg
int3
mov
ret
add
data16
aaa
test
fildl
movsb
add
jle
leave
addb
jle
add
rcrl
mov
add
dec
mov
push
sarb
pusha
ja
sbb
std
jmp
push
add
lcall
addb
adc
jae
jge
mov
pushf
xchg
dec
cmpsl
lods
cmp
add
mov
add
stos
add
jecxz
jge
cmp
mov
add
add
add
add
pop
push
add
int
add
xchg
mov
add
leave
jecxz
cmp
out
add
xor
push
int3
fldl
add
mov
add
int3
xchg
push
add
mov
sub
add
lock
inc
lods
cwtl
call
mov
add
xchg
add
mov
vsubsd
add
or
add
sbb
mov
sub
and
add
sub
nop
test
add
push
jne
jp
mov
stos
fs
in
inc
mov
shrb
add
xor
fimull
jp
pop
aaa
pop
lock
test
add
sub
add
pop
mov
outsb
pusha
stos
add
loope
pop
xor
loopne
inc
shll
add
gs
or
add
out
xchg
in
stos
add
out
pop
mov
loopne
add
std
fisubl
rcll
add
adc
inc
jp
jmp
jmp
fstpt
add
out
mov
add
test
jo
mov
add
add
popf
into
jecxz
add
push
pushf
shrb
add
mov
add
das
inc
pop
mov
jbe
movsl
clc
fdivrp
lods
add
pop
pop
clc
scas
mov
pop
push
jae
dec
xchg
lock
xor
sub
out
iret
pusha
inc
cmp
lret
xchg
bound
lcall
lock
idivl
stos
add
mov
or
add
add
lret
mov
sub
add
push
repz
iret
xor
add
add
mov
out
push
fsubrl
dec
xor
push
add
inc
push
add
jle
rorl
add
add
add
mov
add
shl
cltd
aad
pusha
mov
mov
dec
mov
add
fcomp
ss
add
pop
adc
xor
mov
mov
add
jne
add
in
dec
sub
push
mov
ja
inc
sub
fmull
sbb
stc
push
add
cltd
or
add
add
insb
inc
les
add
mov
add
dec
mov
jo
hlt
cmp
lods
add
movb
test
cmp
sub
add
insl
insb
and
add
mov
add
int3
hlt
sbb
push
push
add
sti
xor
xor
jge
imul
gs
or
cmpsb
add
inc
xor
hlt
pop
adc
rcl
mov
add
xor
cmpsl
add
cmp
cwtl
or
cmc
or
sub
add
lods
in
mov
lods
add
sbb
int3
insb
clc
or
add
cmp
jecxz
push
add
repz
xchg
sti
push
aas
inc
lret
add
fbstp
add
xor
popf
clc
in
js
pop
insl
adc
or
loopne
add
xchg
cmp
add
push
add
repnz
in
sti
leave
out
dec
jo
sbb
add
fs
out
add
fcmovnb
xor
popf
cmp
xchg
lcall
int
out
outsl
test
daa
cmp
loopne
add
int3
rcr
mov
add
push
out
les
mov
add
xchg
or
aam
scas
add
ja
add
add
add
ret
push
push
add
aaa
mov
add
pusha
mov
add
loope
jmp
sarb
jne
and
add
fisubrl
pop
sub
add
lahf
cmpsb
add
enter
hlt
std
adc
inc
pop
jno
aad
mov
xchg
mov
test
add
add
mov
idivl
std
mov
xchg
add
jbe
ja
addb
test
out
add
fistl
xchg
or
fsubr
jle
loop
loope
shlb
in
scas
add
outsl
sub
add
stos
daa
out
pop
dec
push
add
pushf
aas
aam
iret
lahf
cmp
fistpl
loope
test
jle
pop
pop
pop
cmpsl
add
add
lods
mov
add
js
jle
mov
push
mov
add
mov
addr16
sbb
aad
xor
add
dec
das
in
adcl
cwtl
cmc
lcall
out
pushf
add
xlat
addb
adc
xor
add
mov
and
pop
inc
in
pushf
iret
mov
js
mov
add
repz
mov
insl
and
add
sub
aas
dec
mov
add
enter
dec
cmp
leave
in
loope
outsb
push
cmp
add
hlt
addb
push
inc
push
adc
hlt
and
or
add
movsl
pop
cmp
cwtl
add
mov
mov
add
jno
pop
mov
shrb
add
jp
push
je
add
push
add
add
dec
roll
dec
mov
add
addb
mov
add
mov
push
and
add
mov
fnstenv
add
cld
sbb
add
insb
mov
add
mov
add
addb
jg
sarb
and
add
inc
leave
push
je
flds
in
mov
add
add
add
rorb
add
cmp
cwtl
stos
add
lea
pushf
in
inc
adc
cld
imul
add
idivl
add
scas
cli
pop
stc
mov
lods
add
or
mov
add
add
cmpsb
add
add
add
adc
xchg
push
add
push
mov
sbb
xchg
cmpl
cmpsl
adc
mov
add
imul
ds
add
add
js
frstor
and
add
loop
xor
sbb
in
pushf
push
xor
xor
pushl
fistpll
cwtl
jl
jns
imul
out
clc
pop
ljmp
popa
push
add
add
icebp
stos
add
mov
movsb
add
mov
add
test
push
sbb
pop
jnp
cwtl
or
add
ss
or
add
jne
outsl
in
sbb
cltd
dec
inc
inc
push
inc
sti
push
pushw
idiv
dec
xor
mov
add
imul
add
push
fcoml
xor
bswap
push
testl
xchg
pop
ds
add
add
testb
or
add
sbb
xchg
mov
movsl
insl
shlb
xor
cmp
pop
mov
leave
shr
aam
iret
out
add
clc
bound
add
ret
add
xchg
jp
jo
add
jp
sub
pop
sbb
and
adcl
movl
add
mov
aam
pusha
jle
pop
lock
pop
sar
sbb
mov
add
sub
sbb
lret
test
enter
add
inc
and
cli
icebp
dec
and
add
test
mov
add
loopne
loopne
ficoms
xor
sbb
inc
inc
xchg
int3
and
sbb
and
add
add
aaa
add
fimuls
jge
lcall
sbb
xchg
lret
add
jo
mov
fstpt
iret
test
xchg
or
add
addb
jmp
icebp
mov
fstps
pop
or
add
adc
mov
add
lret
mov
dec
cld
xchg
sarl
bound
add
pushl
js
xchg
add
adc
stos
sub
add
xchg
mov
sbb
add
xchg
dec
scas
jb
jns
inc
popf
scas
ja
fnstsw
jp
lret
inc
imul
jne
mov
add
in
or
popf
enter
add
sbb
add
sbb
or
add
cwtl
mov
add
add
out
xor
add
and
add
jmp
or
push
data16
and
add
mov
dec
mov
add
ror
cmp
add
flds
mov
xchg
inc
dec
addb
jp
xchg
ret
jl
add
jns
jg
mov
cmpsl
arpl
lret
pusha
fs
test
add
flds
out
mov
add
mov
fists
inc
add
lods
add
xchg
xor
cmp
add
add
fistl
inc
arpl
roll
mov
add
fbstp
fisttpl
scas
add
loopne
add
push
stc
dec
add
add
add
mov
mov
mov
add
nop
mov
loopne
cmp
fldenv
fisubrl
subl
shlb
stos
jne
lods
mov
jl
add
add
test
ja
mul
mov
repz
repnz
dec
pop
jmp
add
in
fidivl
inc
mov
add
jbe
mov
mov
cmovs
pop
or
add
scas
out
fbstp
xchg
add
pop
addr16
or
add
xchg
and
push
mov
popf
call
aad
or
add
and
add
dec
aaa
sahf
icebp
mov
add
cmp
add
lcall
jp
jbe
mov
add
and
add
add
add
dec
sbb
pop
mov
pop
das
mov
add
add
imul
add
outsb
imulb
fnstcw
hlt
pop
mov
pop
repnz
add
add
aam
add
call
mov
mov
mov
add
rclb
add
mov
les
jp
mov
bound
cld
jmp
sti
mov
stos
add
mov
add
adc
or
sbb
push
btr
dec
in
pop
or
add
xchg
sub
add
test
add
sub
add
call
add
and
cmpsl
lds
add
xchg
inc
paddb
imul
sbb
movsl
test
add
add
ljmp
add
arpl
mov
cmp
psubq
mov
add
pop
test
add
add
add
lods
add
add
lods
sub
add
cmp
xor
mov
jmp
call
inc
xor
add
stos
add
mov
add
in
in
add
add
sbb
mov
pop
in
add
mov
mov
add
fmull
popa
idivb
sbb
pop
aad
mov
add
repnz
add
inc
lahf
sbb
and
rorb
add
xchg
movsl
xor
add
push
test
add
inc
mov
stos
add
stc
xchg
xor
add
add
ss
or
test
add
inc
or
add
outsl
xchg
xor
test
add
clc
imul
call
enter
add
shrl
cmp
add
ss
hlt
cld
xor
push
add
and
cmp
test
xor
sub
add
ror
ss
sbb
add
mov
add
or
imul
call
xchg
dec
mov
add
dec
push
js
mov
xchg
and
add
and
fldt
or
lock
add
add
push
sub
cmc
inc
pminsw
add
aaa
adc
call
lods
mov
jmp
add
add
ret
add
pop
mov
cmpsl
dec
out
push
data16
add
out
hlt
cmpl
pop
fisttpll
add
cli
push
aad
mov
int3
pop
aam
divl
ja
xor
add
js
add
imull
adc
pop
call
add
inc
cld
adc
add
add
push
jmp
mov
gs
cmpsl
ret
add
mov
add
add
in
repz
mov
jbe
arpl
mov
pop
and
add
add
hlt
xchg
push
add
dec
jl
lds
xorps
loope
fists
pop
inc
js
push
jg
push
jo
mov
add
in
lds
add
mov
xor
fidivl
cmp
sbb
inc
mov
pop
js
xor
add
ret
cli
test
add
pop
in
push
push
add
push
aaa
push
sahf
adc
cwtl
xchg
cmp
mov
inc
cld
mov
add
in
xor
clc
outsb
push
shlb
mov
xchg
jg
inc
arpl
jne
call
xlat
sub
push
jnp
pop
jle
pusha
mov
xchg
addb
cwtl
or
adcl
and
inc
sub
add
test
add
popf
idivl
sahf
jge
sbb
scas
add
add
out
in
popa
icebp
sbb
js
rolb
add
lret
cmp
popa
mov
push
ljmp
inc
rorb
add
push
add
movsl
and
ds
dec
push
jle
insl
std
repnz
push
sbb
add
hlt
or
add
add
pop
dec
and
add
std
cmpsl
pop
jnp
or
add
add
add
or
xchg
repnz
cmp
xchg
add
add
jmp
or
add
add
fists
add
jge
std
addb
aam
imull
pop
cltd
sbb
add
xchg
adc
lret
dec
inc
dec
sub
add
push
and
add
popf
insl
inc
xchg
addb
nop
mov
and
add
add
out
mov
cwtl
test
add
pop
cld
mov
repnz
xchg
decw
add
dec
std
or
mov
sub
iret
outsb
mov
add
dec
sti
jmp
mov
mov
call
cld
sarb
add
jecxz
enter
andl
add
push
cmp
dec
out
add
movsl
xor
add
lock
test
cmp
jg
sbb
dec
pop
xchg
int
jne
add
subl
xchg
pop
mov
cmc
aas
shlb
add
mov
push
loop
mov
mov
xchg
mov
cmpsl
mov
cmpsb
add
ret
add
inc
mov
ret
les
sbb
add
xrelease
add
sti
imul
adc
hlt
andl
push
add
add
pop
stos
aaa
leave
push
mov
add
outsb
cli
pop
jne
add
or
add
and
cmp
ljmp
addr16
push
sub
fmulp
mov
push
add
inc
add
nop
outsl
sahf
xor
rcl
repz
fsubrl
xor
add
lret
jo
pop
cltd
and
add
and
jne
movsb
add
or
add
add
add
ja
test
aaa
and
pushf
sbb
add
mov
push
or
shrl
add
xor
fists
add
dec
adc
mov
add
inc
push
sub
lahf
add
add
dec
pop
add
add
mov
shll
pushf
adc
sahf
movsl
sub
add
fsubrs
push
dec
clc
xor
add
shl
adc
or
add
push
add
rcrl
dec
cmp
mov
icebp
fidivs
add
add
fisttps
addb
sbb
add
or
std
sti
in
xor
hlt
cmc
xchg
rol
in
add
cmpsb
add
mov
adc
push
dec
sti
popf
call
cli
inc
or
add
sbb
inc
aam
cmp
jnp
in
out
jecxz
adcl
je
push
lcall
cmpsb
add
xchg
add
fdiv
repz
and
lahf
fdivrl
add
and
popfw
shl
in
pop
mov
add
pusha
cli
gs
fmulp
or
add
je
add
mov
hlt
cmp
xor
outsl
cmp
fisubrl
dec
ror
shr
add
and
divb
sti
push
add
fstl
add
pop
hlt
loope
xchg
stos
add
arpl
and
or
add
push
sbb
addr16
xchg
add
jo
scas
add
dec
out
jg
add
dec
dec
aam
out
mov
add
add
in
mov
movd
imul
xor
jb
mov
mov
add
add
mov
cmp
add
leave
scas
xor
mov
gs
pop
inc
jo
cmp
ds
cmpsb
add
jns
xor
scas
add
int3
fwait
cmp
add
add
mov
add
outsl
mov
cmp
rorb
add
and
add
sub
add
push
jmp
add
divb
push
add
in
and
add
push
pushf
notl
pop
cmp
inc
fstpt
pop
test
incl
ljmp
jnp
add
mov
and
add
fidivrl
addb
les
add
outsl
fs
int
dec
inc
mov
xchg
add
add
fisttpl
mov
push
sub
popa
mov
cmpsl
mov
add
pop
xor
aas
cwtl
inc
ja
jmp
jle
xchg
or
add
cmp
add
adc
and
and
mov
add
rolb
idivl
ret
out
dec
fldt
insb
pop
loopne
add
dec
mov
add
movsb
add
push
add
add
out
mov
jl
pop
mov
adc
aas
and
dec
loop
add
jg
int3
and
clts
add
sbb
cli
inc
mov
popl
add
nop
jp
imull
add
shrb
xchg
sub
jle
push
add
ja
fwait
jecxz
lret
add
adc
imul
test
add
lret
addr16
xchg
test
lahf
stos
repnz
mov
ret
ja
imul
add
add
in
pop
insl
pop
iret
fiaddl
movsl
push
stos
add
mov
add
les
jecxz
xor
andl
add
cmpxchg
fdivrs
fwait
test
adc
leave
dec
sbb
add
lods
add
hlt
xchg
jns
lea
add
into
stos
ljmp
into
sahf
pop
aad
cmp
aaa
push
popa
push
cwtl
mov
add
add
xchg
jns
adc
out
fistl
adc
mov
scas
gs
or
cmc
vshufps
cmc
mov
ds
pop
loop
aad
sub
rcr
dec
stc
add
add
subl
add
add
mov
add
add
add
insl
mov
pop
and
daa
cli
push
xorl
icebp
cmp
repz
insl
and
mov
jmp
loopew
pop
mov
or
add
add
inc
int
or
add
imul
lea
mov
push
jo
add
inc
sbb
adc
xchg
icebp
lds
add
jp
xor
push
add
aam
fdivl
dec
lds
rcl
aam
sub
add
add
jae
xchg
incb
lea
fmulp
in
add
hlt
add
and
mov
add
cld
ss
shrl
add
inc
or
add
add
outsl
popf
mov
lds
add
add
jp
add
pop
fsts
push
ret
add
cltd
adc
lock
in
aad
push
mov
fwait
stos
add
into
imul
push
xor
xor
xor
sub
add
sub
add
add
cmc
imull
add
cmp
insb
in
mov
jne
add
pusha
pop
lahf
popf
daa
push
sub
mov
xchg
add
add
loop
cmp
add
mov
add
push
imull
pop
pop
jmp
test
mov
jl
loope
fnstcw
pop
dec
out
add
lods
add
popf
cmpsb
add
call
add
loop
add
mov
lret
mov
jo
mov
add
xor
inc
lds
ret
sarl
add
and
add
push
add
sbb
push
jg
push
add
and
add
push
xchg
rol
push
fdivrp
xchg
add
in
loope
rol
lock
in
add
cld
inc
and
inc
mov
addb
loopne
mov
sub
add
mov
add
xor
mov
inc
pop
push
bound
add
rcr
mov
push
mov
call
add
add
outsl
mov
in
lcall
or
xor
sub
add
mov
shlb
loop
fnstcw
icebp
ret
leave
shlb
dec
adc
enter
mov
rcll
ja
jecxz
mov
add
mov
dec
rcrl
add
add
cmp
xor
iret
xor
add
lds
je
cmpsb
add
shrl
repnz
movd
add
call
roll
push
fucomp
and
add
into
call
mov
dec
into
xor
icebp
pop
xchg
dec
sub
and
add
or
add
das
data16
mov
jg
adc
addb
cmp
and
imul
mov
add
movsl
mov
repnz
add
test
add
add
lds
pop
addr16
add
add
mov
popf
push
decl
push
mov
add
mov
push
adc
inc
testl
push
enter
add
inc
xchg
inc
std
push
add
pop
lret
std
leave
sbb
inc
dec
pushf
pop
insb
jl
dec
xchg
add
jge
push
add
inc
daa
and
add
xor
in
iret
mov
rcrb
aad
aam
scas
add
fs
test
inc
into
outsb
aaa
jecxz
in
push
fsubs
popf
add
mov
fwait
dec
lcall
jg
test
jne
ret
outsl
dec
outsl
sbb
add
sbb
outsb
dec
clc
inc
std
aad
sbb
out
sub
add
xchg
add
add
jecxz
xchg
dec
xchg
xlat
xor
lods
sbb
mov
dec
pushf
pop
xchg
cmp
stos
add
add
add
pop
loop
cmp
mov
cmpsl
jmp
add
add
add
pop
fstpl
jo
add
insb
rol
aas
pop
imul
adc
nop
mov
cmp
mov
hlt
jg
sti
mov
jne
in
sub
fdivl
mov
add
lods
add
and
add
das
adc
add
pusha
jmp
xor
stc
test
sbb
or
add
lods
jmp
mov
adc
cmpsl
add
mov
add
les
add
add
add
insb
pushf
in
dec
fisubl
pop
aad
jns
mov
add
pusha
inc
add
lods
add
call
push
jne
movsl
push
add
loop
jmp
pop
test
add
jle
cli
jg
pop
sti
in
dec
scas
add
push
inc
jbe
and
add
add
mov
add
add
mov
push
cmc
jbe
test
sbb
mov
iret
insl
or
add
dec
jnp
int
add
rorb
add
xchg
adc
push
outsl
cmp
cmp
add
pop
insl
repnz
and
add
add
pop
fs
shll
or
add
mov
subl
add
je
inc
adc
out
lods
add
mov
xor
mov
iret
dec
outsb
and
test
fldt
lock
push
mov
lock
push
lahf
sub
add
adc
add
add
add
insb
jae
data16
push
cmp
add
ja
lea
movsb
add
push
fsubs
and
mov
push
icebp
add
add
fwait
mov
add
negb
pop
scas
or
add
mov
cmc
arpl
mov
rcll
add
inc
out
add
inc
int
faddp
dec
jp
dec
push
outsl
xchg
stos
add
add
add
lock
add
mov
mov
add
int3
addb
aas
mov
pop
fstpt
data16
add
or
add
add
cmp
push
fiaddl
adc
add
push
shl
clc
lds
insl
push
ljmp
add
int3
into
cmp
daa
lret
xor
jne
add
add
pusha
jno
jecxz
mov
push
aaa
adc
push
leave
add
add
icebp
xchg
inc
cmpsl
xchg
add
push
loope
jb
add
cmp
and
add
add
aaa
in
cmp
dec
pop
je
add
jmp
pop
jnp
add
cwtl
jae
or
add
movsb
add
inc
dec
mov
cmc
adc
aas
jp
add
add
add
test
add
add
addb
xchg
push
add
repz
add
adc
fldt
add
jne
jb
imul
repnz
addb
shrb
push
js
repnz
lea
add
mov
sbb
loop
leave
sub
add
in
mov
out
sbb
jg
add
dec
outsl
mov
dec
outsl
adc
add
outsl
cmpsb
add
jb
push
imul
inc
shl
push
or
add
jbe
inc
mov
das
dec
cli
in
and
add
clc
cmp
add
or
add
mov
push
adc
xchg
xchg
and
add
add
inc
lahf
insb
sarb
xor
add
call
add
add
cld
jb
jb
xor
ret
add
xor
mov
or
addb
fdivr
les
add
hlt
inc
mov
cmp
cmpsl
ljmp
dec
pop
jne
and
insl
xchg
adc
add
pop
xlat
das
xor
lahf
fmull
insl
iret
lods
add
xchg
sti
push
jne
and
insb
test
jge
call
add
shlb
movsb
add
add
add
rcr
or
cmp
adc
rorb
inc
push
xchg
xor
rcr
add
sbb
mov
fsub
fstl
jecxz
sbbl
inc
push
or
aaa
addr16
cmp
push
add
sub
sub
add
mov
lret
xchg
shll
mov
mov
fstl
add
sahf
xor
cmp
push
mov
repnz
sbb
mov
pushl
mov
add
push
jns
push
jecxz
and
add
mov
mov
jo
pop
or
add
add
xchg
and
add
add
or
adc
movsl
mov
add
or
add
add
add
add
subl
and
or
add
stos
add
faddl
ljmp
push
and
add
ljmp
add
jp
mov
xor
mov
popl
out
adc
pop
xchg
push
movsl
sbb
sub
add
arpl
jg
add
les
hlt
in
pop
push
xor
jmp
add
ret
or
add
pop
lods
add
add
mov
add
mov
pop
shrb
das
in
add
stos
add
cmp
pop
loopne
add
addb
pop
mov
mov
add
lret
mov
popf
nop
cmpsb
add
aam
lret
call
add
mov
add
add
imul
add
aaa
xchg
insl
pop
inc
dec
les
daa
mov
loope
pop
and
add
enter
gs
add
add
mov
push
or
add
scas
add
add
add
xor
mov
add
jge
imul
dec
popf
pop
mov
xchg
cmp
dec
in
fidivl
mov
popa
inc
test
add
addr16
mov
mov
pop
int3
pushl
add
sub
fildll
add
mov
pop
jo
lcall
xor
test
add
sbb
push
aam
and
add
sub
adc
xor
adc
ljmp
xchg
std
and
add
add
sub
push
enter
stc
mov
add
fldt
add
out
filds
add
lods
add
and
add
xchg
aaa
or
add
clc
xchg
and
add
and
push
out
jle
inc
cld
jno
add
std
fnstcw
push
add
add
push
add
shll
push
sub
add
notl
insl
rolb
mov
imul
add
scas
add
stos
pop
icebp
ss
jne
adc
add
int
xor
add
jns
jbe
sarl
roll
add
sbb
add
pop
outsl
rolb
sahf
test
xor
sub
add
mov
or
ds
adc
add
add
popa
ficoml
subl
add
xchg
in
pop
int3
fsubp
arpl
mov
add
movsl
movsb
add
sbb
movsb
add
push
add
xor
fwait
lret
inc
jbe
sub
mov
xor
nop
xchg
in
push
pop
sar
jnp
add
lods
insl
inc
nop
outsb
push
cmpsl
cmp
mov
and
les
mov
add
add
or
mov
add
dec
adc
add
aaa
aas
frstor
leave
xchg
sub
add
dec
loope
or
add
add
push
mov
cmp
add
fwait
sub
daa
loopne
dec
fidivrs
adc
sub
add
mov
mov
iret
sbb
dec
imul
out
jmp
js
or
popa
cmp
insb
cmp
inc
mov
sub
in
xor
out
add
add
jmp
add
add
add
add
add
push
add
adc
push
sarl
xor
int
xchg
jmp
setp
jbe
add
add
add
xor
loopne
bound
pop
mov
pusha
xchg
in
inc
les
add
add
add
imul
cmp
xor
test
add
dec
or
pop
mov
and
add
pop
xchg
add
pop
ds
xchg
xchg
mov
leave
rolb
xchg
cmp
add
or
adc
je
cli
add
lock
mov
add
add
sbb
ret
iret
pop
pop
rcrb
inc
mov
add
add
add
insb
loopne
push
add
jo
sbb
mov
decb
add
add
adc
pop
xchg
shll
pop
push
xor
inc
out
hlt
xchg
sub
add
lcall
cmc
out
lahf
mov
xlat
addb
jbe
mov
add
pop
call
pop
test
call
rcrl
sti
cmpl
inc
mov
add
push
in
cld
xchg
add
enter
add
ffreep
aas
outsb
cmp
idiv
sub
add
js
testb
add
dec
push
pop
mov
cli
pop
ja
iret
mov
fcmovb
add
add
stc
mov
xchg
xchg
ret
cmp
out
add
insb
sub
add
call
add
xor
mov
jno
add
cmp
fdivr
sbb
sar
aas
fstpl
pop
pop
and
shll
fdivp
mov
outsl
adc
sbb
cmp
dec
add
mov
and
add
mov
add
push
push
test
add
mov
sbb
pop
mov
cltd
xchg
or
add
xor
or
add
lds
mov
js
jmp
adc
sahf
cwtl
sbb
das
jmp
in
sub
add
xchg
add
mov
mov
rclb
add
xchg
notrack
mov
scas
add
add
add
add
add
addb
jno
add
mov
add
aas
pop
ret
inc
scas
add
jne
ret
add
addb
mov
push
mov
imul
xor
decl
xor
add
add
mov
mov
fsubl
add
push
rcr
mov
add
jne
inc
pop
pop
addb
jg
dec
add
cmpsb
add
int
add
lret
add
imul
push
unpcklps
and
sub
add
dec
mov
lods
add
popa
int
jo
sub
fwait
into
out
lods
dec
mov
repz
or
add
je
dec
rcrl
jo
add
jne
add
loop
pop
clc
pop
cmc
push
mov
add
gs
mov
jmp
and
add
addb
test
add
sbb
or
add
xchg
add
notb
out
ss
shll
test
mov
imul
push
outsl
sbb
push
imul
push
add
dec
sbb
fsubrs
cmpsb
add
adc
jae
mov
mov
xor
sar
mov
cmpsl
out
stos
add
sub
add
push
jns
add
add
add
dec
lea
add
aam
cmp
xchg
fdivs
add
or
add
in
notl
out
cld
test
aad
cltd
sbb
mov
inc
mov
je
pop
add
add
inc
fidivl
cmpsb
add
push
icebp
aad
add
ss
stos
mov
das
inc
mov
addr16
xchg
inc
or
xchg
dec
add
add
xor
cmp
mov
clc
cmp
pop
cmp
pop
and
ret
mov
xchg
mov
pmaxub
frstor
inc
andl
add
roll
ret
mov
lods
add
shr
repz
dec
les
ret
std
loope
inc
and
lcall
outsb
cmp
arpl
dec
data16
pushf
jg
cmpsb
add
sub
dec
je
add
out
adc
mov
and
add
xchg
sbb
add
jo
add
clc
add
add
jno
out
ss
in
in
jle
cmpsl
ss
in
mov
add
cmpsl
and
add
sbb
out
dec
pop
sub
add
mov
je
mov
add
add
jo
arpl
ja
gs
push
mov
adc
mov
add
imul
add
xor
inc
frstor
add
mov
add
fwait
mov
loopne
xor
add
pop
sub
add
in
xchg
in
push
out
inc
xor
add
lahf
jno
add
mov
add
add
sbb
pushf
adc
fwait
aas
movsl
je
jne
pop
xchg
icebp
imul
inc
adc
jne
push
xor
sbb
aas
adc
xor
mov
outsl
xlat
mov
mov
mov
sub
inc
outsb
out
pop
ret
jmp
icebp
push
xlat
pop
imul
add
aaa
sahf
pop
sub
and
add
mov
xchg
ret
in
cld
shll
mov
mov
data16
jns
cmpsb
add
notb
add
imul
dec
pop
fdivrl
jl
sub
add
sbb
in
testl
sub
add
push
jbe
dec
xchg
js
loopne
add
xor
push
add
mov
sub
add
and
add
pop
test
xor
cmpsb
add
xchg
fisubrs
add
xchg
movsl
inc
roll
add
jg
add
divb
add
pop
scas
add
jns
dec
pop
pop
pusha
fs
pop
shl
push
mov
add
push
sbb
int
xor
mov
das
sbbl
mov
daa
mov
movsl
or
add
add
lods
mov
jg
sahf
inc
ja
add
fdivs
mov
call
lcall
mov
sbb
add
in
and
add
sub
add
add
push
rcll
insb
sbb
cmc
sahf
popf
inc
inc
lock
iret
xor
add
add
push
add
mov
add
sub
add
std
test
cmp
mov
xchg
jg
add
mov
add
pop
outsl
xchg
loopne
adcl
fmull
addb
call
add
push
lea
add
cmc
mov
or
pop
sbb
add
push
lods
add
rcrb
add
adc
mov
add
orl
sbb
or
add
add
shufps
iret
addr16
repnz
stos
add
jle
push
pop
mov
add
loop
jbe
das
shll
add
adc
mov
xlat
mov
add
cmp
aam
inc
fistl
xchg
cwtl
xor
out
cltd
or
mov
add
aad
inc
scas
add
dec
mov
and
lock
out
jno
dec
scas
movsl
test
stos
add
cltd
cmpsl
pop
adc
mov
add
add
movsl
fsub
pop
sbb
shr
popa
mov
add
aad
adc
sbb
add
add
mov
add
xor
sbb
js
add
push
clc
loopne
push
push
add
push
or
add
add
cmpsb
add
in
pop
mov
mov
nop
out
xchg
stc
pop
addr16
aaa
or
add
add
lcall
add
mov
inc
inc
aad
das
fnstcw
addb
xchg
add
add
jbe
inc
sbb
add
add
add
js
add
add
pop
mov
inc
xchg
dec
insl
fldt
test
hlt
inc
pop
adc
add
add
popa
jns
addb
jle
adc
loop
sar
aad
ficomps
into
xor
add
rorb
add
popa
push
push
sbb
inc
pop
mov
add
push
inc
cmp
add
and
sar
push
out
mov
add
sub
orl
sbb
adc
cmp
fbld
mov
add
cmpsl
movb
add
inc
sbb
add
add
add
xor
popl
add
lods
add
les
add
in
lea
add
ret
xchg
inc
add
add
add
pop
loopne
cmp
and
add
stc
aas
sbb
pop
xor
add
into
sti
lcall
fstpl
push
push
or
add
jno
jnp
adc
add
mov
cmp
add
leave
xor
loope
sbb
push
movsb
add
mov
mov
lea
xchg
imul
adc
outsl
dec
std
addr16
or
xor
pop
iret
mov
add
mov
dec
fnsave
add
add
test
add
adc
add
daa
int
add
lods
mov
add
add
sub
add
adc
stc
movsb
add
popf
hlt
mov
jp
addb
das
divl
pop
push
cmpsl
inc
clc
pop
inc
adc
iret
or
add
hlt
jl
sahf
or
add
mov
inc
ficomps
ret
lcall
push
mov
xchg
out
icebp
add
add
cmp
stos
or
add
leave
into
ffree
repz
mov
add
mov
lds
mov
and
add
add
mov
mov
cwtl
cmpsl
jno
mov
add
aam
mov
loop
add
mov
dec
jne
scas
add
gs
notl
daa
pop
imul
add
jge
mov
inc
push
push
xchg
add
add
add
leave
sti
loopne
in
mov
shl
data16
add
aaa
dec
xchg
dec
rcr
std
pop
aaa
jno
outsb
fdivrs
add
xchg
add
lahf
daa
sbb
shll
popf
xchg
inc
nop
in
adc
pop
int
add
push
add
sbb
ficomps
test
add
mov
outsb
jmp
loope
cld
mov
add
inc
xchg
cmp
loop
mov
adc
xor
xchg
dec
add
ss
stos
or
add
out
das
jge
addr16
mov
add
jmp
xchg
push
int
adc
mov
add
fs
mov
add
jle
add
add
add
iret
mov
adc
add
dec
pop
sarb
dec
popf
loope
push
adc
add
cwtl
mov
or
add
jmp
cmp
dec
jl
incb
adc
add
test
xchg
out
aam
mov
jnp
mov
add
call
and
sbb
sti
inc
or
in
test
add
jno
into
mov
mov
cmp
inc
repz
add
jae
rcl
sarb
les
ret
filds
add
mov
icebp
mov
dec
icebp
outsl
add
add
xchg
add
cmp
and
add
xchg
add
mov
add
xchg
mov
sbbl
pop
push
mov
jg
mov
add
add
ret
popa
fstl
mov
mov
add
add
movsb
add
adc
cld
or
add
mov
pop
push
adc
sbb
sbb
pop
mov
jbe
sbb
mov
jno
inc
insb
push
add
pusha
sahf
mov
xor
repnz
add
add
add
or
add
mov
pop
jge
dec
mov
pusha
mov
adc
pop
mov
cmp
inc
pop
dec
push
aad
stos
add
shlb
add
out
inc
jecxz
enter
xchg
scas
add
lret
jb
arpl
push
popf
rcr
popa
repnz
cmp
push
arpl
aas
imul
sbb
add
test
add
xchg
shll
outsl
push
jmp
or
add
leave
dec
xor
inc
dec
mov
movsb
add
or
lods
jge
mov
fistpl
lret
add
mov
ret
in
and
xchg
pop
int3
add
add
scas
add
cwtl
arpl
test
add
sbb
ja
fwait
cld
sar
jne
sti
push
dec
pushf
adc
jne,pt
cmpsl
aam
out
call
add
in
cmc
loop
adc
add
pop
add
and
add
and
add
sti
fistl
jne
add
add
loope
clc
aas
cmp
cmp
xchg
aas
mov
and
add
mov
add
out
loop
xchg
xlat
cmp
ficompl
enter
movsl
push
add
lahf
lret
inc
js
xchg
add
jge
add
outsl
pop
mov
add
add
xlat
repnz
pop
out
jl
jae
cmpsl
gs
pop
jg
inc
xchg
add
xchg
fbld
je
test
add
and
add
and
push
push
fstpl
dec
scas
add
fwait
and
jle
lods
add
mov
or
add
hlt
pop
mov
outsb
les
mov
addb
aam
int
in
out
jo
addb
sub
add
or
and
xchg
adc
aad
adc
and
jecxz
pushf
xor
loop
mov
add
fisttps
add
pop
adc
sbbl
and
add
rcr
repz
pop
or
cmp
out
mov
enter
pop
add
adc
add
add
xchg
jnp
push
cltd
ret
mov
pop
jo
addb
mov
sbb
adc
mov
adc
xchg
lea
leave
mov
clc
mov
ja
in
xor
fmull
add
ficoms
mov
lahf
lcall
fcoml
lahf
scas
add
dec
xchg
std
fcmove
pushf
xor
add
pusha
sub
add
cmc
mov
inc
jno
mov
add
inc
xchg
mov
bound
fisubs
shll
mov
xchg
stos
mov
add
mov
orl
jl
xlat
sub
int3
inc
shlb
stos
add
and
mov
add
or
and
add
fs
jb
add
jnp
add
fists
push
mov
add
add
leave
mov
lcall
addb
lcall
add
shrb
add
aaa
stos
add
push
jl
sti
xchg
add
fdiv
in
inc
push
adc
mov
sarb
add
or
add
ret
xchg
dec
mov
out
pop
clc
shrl
add
pop
outsb
cmovne
addr16
addb
mov
add
xchg
xchg
or
add
stos
add
lcall
add
lods
add
test
icebp
aad
addr16
outsb
jmp
xlat
xor
adc
jle
jo
pop
mov
xor
add
popf
das
test
add
dec
sbbl
enter
add
test
add
stos
xor
mov
add
add
test
inc
push
xchg
add
add
adc
mov
data16
add
movsl
lret
adc
lea
ss
ss
fdivp
xchg
aaa
leave
in
lahf
pushf
mov
inc
push
fstpt
jge
add
arpl
iret
mov
fsubrl
add
inc
gs
pushf
and
xor
add
shlb
data16
inc
je
mov
addr16
push
xchg
icebp
jle
add
fisubs
push
jmp
addb
mov
subl
mov
das
je
mov
push
add
call
xor
mov
add
dec
mov
cmpsb
add
or
inc
sahf
rcll
lret
push
dec
inc
jecxz
xchg
je
repnz
stos
add
sti
movsb
add
cltd
rcll
fwait
mov
fldl
and
add
addr16
xor
repnz
jno
cli
out
pop
cmp
add
out
add
cmc
mov
xor
stc
ja
fisubrl
add
add
push
inc
cmp
inc
mov
add
pop
scas
lret
sbb
cltd
dec
fadds
add
or
add
jnp
inc
cmpsl
out
shlb
jbe
add
and
je
add
js
mov
iret
xlat
inc
pop
push
shrl
xchg
cmc
xchg
out
sbb
mov
sbb
dec
inc
test
add
xchg
fwait
or
add
push
nop
testl
xlat
push
xlat
sahf
adc
sbb
mov
out
add
ret
sbb
add
bsf
or
add
add
addb
and
daa
pushf
rorl
xchg
add
xchg
add
add
pop
cwtl
mov
add
mov
jnp
add
add
jae
test
add
or
cmp
dec
cmpsl
lahf
push
adc
out
or
push
xchg
aam
add
xchg
sub
add
lods
add
sub
jmp
dec
lea
mov
add
leave
pop
repz
jae
rorl
jl
rcl
pop
mov
add
nop
mov
fcomi
dec
mov
or
pop
adcl
jae
lret
int
add
dec
xor
adc
sub
add
xor
add
pop
xchg
add
sub
add
add
xchg
add
pop
out
mov
add
mov
add
cmp
add
mov
inc
outsl
xor
add
cmp
pop
scas
mov
je
fldcw
scas
add
popa
jae
add
aam
add
and
ja
subl
jnp
repz
loop
out
or
add
and
testl
pop
and
ljmp
mov
in
xchg
mov
pop
xchg
inc
out
lock
testb
in
sti
jo
cmp
add
aaa
jle
jns
mov
ret
mov
add
mov
cltd
cmp
add
mov
add
jo
pop
outsl
icebp
inc
aas
leave
cmp
scas
add
ret
push
movsl
cltd
out
add
ja
dec
loopne
push
int
push
or
add
add
jge
js
test
add
add
je
negb
pushf
adc
mov
xchg
adc
pop
xlat
inc
mov
int3
jbe
int3
loope
arpl
pop
out
fwait
sub
add
outsl
imul
add
add
out
out
mov
add
dec
imul
insl
adc
aaa
loop
pop
daa
bnd
add
add
ss
jmp
add
jle
cmpsl
push
pop
call
clc
aaa
lret
dec
or
add
lret
or
add
lahf
dec
inc
jmp
movsl
mov
add
jecxz
or
sti
call
loopne
stos
inc
addr16
push
aad
add
int
stc
pop
jp
daa
les
mov
dec
xchg
lret
mov
mov
add
fsubl
andps
in
cli
mov
movsb
add
pop
xor
inc
pop
mov
xlat
ret
mov
add
add
mov
or
mov
loop
add
daa
test
add
xlat
mov
add
ret
or
jnp
add
imul
in
add
cmp
add
mov
add
jecxz
mov
add
mov
adc
or
add
jmp
mov
add
call
jne
je
jmp
mov
add
std
adc
daa
add
add
pop
popa
arpl
insb
lret
sti
xor
std
pop
test
add
hlt
inc
jnp
cmp
sbb
pop
imul
mov
add
cmp
inc
in
jg
pop
dec
pop
lahf
sahf
sbb
mov
rcrb
int
or
add
cmpsb
add
js
add
dec
xchg
mov
add
jne
enter
in
jmp
nop
xchg
icebp
int3
dec
mov
add
xchg
add
lods
push
push
test
mov
xchg
pop
aam
in
adc
and
aaa
clc
std
jl
pushf
adc
push
add
add
sub
add
arpl
and
add
and
movsb
add
dec
sbb
mov
add
xchg
jae
xor
out
shlb
mov
add
popf
lcall
loopne
ljmp
stos
add
jp
ret
add
inc
lds
xchg
lret
mov
xchg
or
add
push
and
pop
pop
test
add
or
mov
sub
add
icebp
les
add
cmp
jmp
add
repz
cmp
xchg
scas
ja
sub
add
pop
dec
mov
add
jne
pop
push
lock
add
add
add
mov
add
mov
int
pushf
inc
arpl
add
in
mov
pop
addb
pop
lods
mov
rcrl
mov
or
add
push
add
lock
notl
xchg
dec
jne
push
add
mov
add
lcall
sbb
add
lea
add
pop
int
add
ds
lds
sub
add
xchg
add
ret
fwait
pop
jb
mov
add
add
neg
in
cmp
call
mov
add
std
jns
jno
callw
cmp
add
add
pop
mov
pop
jg
aas
add
dec
jae
in
inc
jnp
and
add
jle
imul
cld
imul
add
inc
les
repz
xor
xchg
add
jbe
jl
test
add
sarb
add
cmp
jo
mov
xchg
push
pop
gs
out
lods
add
add
add
inc
or
add
mov
cwtl
nop
mov
add
add
push
mov
mov
mov
test
add
inc
mov
mov
arpl
fcoml
push
add
nop
insl
sbb
push
fsubp
in
or
add
add
into
das
lcall
addb
lea
xor
or
add
pop
mov
add
add
stos
jbe
fimuls
add
ljmp
cli
repnz
lea
inc
xchg
mov
dec
or
xchg
fsts
scas
add
and
add
add
xchg
mov
add
outsb
push
inc
push
pop
incl
add
lret
insb
clc
push
add
inc
iret
das
pop
aad
adc
leave
adc
and
add
lds
xchg
out
mov
xchg
or
add
stc
mov
repz
and
add
cmp
add
or
add
imul
sahf
adc
mov
ljmp
shrl
dec
fcoms
add
add
dec
mov
mov
addl
xor
dec
mov
imul
add
xor
out
add
aad
icebp
fildl
add
xchg
repnz
push
sbb
jne
pop
dec
mov
fdivl
sbb
dec
rcr
cmpsb
add
imul
repz
dec
ja
and
add
ret
jl
mov
mov
add
sub
add
add
cmp
test
add
push
mov
cmpsb
add
dec
inc
jmp
add
loope
arpl
or
add
xchg
aaa
inc
xchg
cwtl
push
subl
and
test
add
add
add
fwait
ljmp
cmc
fsubl
xor
add
loopne
xchg
addb
fisubrs
das
sbb
fistps
add
test
add
leave
mov
xor
add
pop
addb
dec
push
adc
add
stos
push
ja
out
xchg
jae
xchg
jno
mov
test
add
test
rcll
pop
cmp
addb
xor
dec
fisttpl
add
mov
movsb
add
bound
add
jns
mov
hlt
cmp
test
add
dec
les
add
pop
mov
push
cmp
outsb
jb
add
push
mov
add
pop
ficoml
add
xlat
cmp
push
adc
or
lahf
loopne
jge
add
outsb
and
mov
data16
lods
add
push
scas
jne
ja
or
mov
fisubrl
lret
test
add
add
movsl
xchg
fcmovbe
xor
hlt
adc
fwait
aaa
push
fcmovne
mov
insl
mov
pop
and
push
xchg
lea
dec
mov
inc
add
aaa
pop
and
add
mov
je
int3
add
add
scas
add
xchg
mov
mov
add
pop
ret
pop
insb
add
mov
mov
add
sahf
insb
aad
je
loopne
sub
popa
add
jge
out
jne
push
call
hlt
and
xchg
add
add
mov
stos
add
dec
dec
mov
add
mov
leave
or
add
rolb
add
movsb
add
xchg
push
push
add
std
mov
lret
ja
rorl
cmpsl
movsl
dec
repnz
add
push
mov
call
sbb
mov
mov
test
jge
mov
add
shlb
mov
in
js
xchg
xlat
mov
rorl
mov
add
jnp
jge
nop
sub
cli
xchg
frstor
sub
inc
jns
add
jge
call
stc
pop
fisttpl
cmp
movl
adc
add
add
in
dec
ficomps
in
inc
jns
push
sti
sub
add
and
cli
repnz
cmp
inc
lds
dec
mov
pop
adc
jae
add
insl
mov
add
lods
in
sbb
mov
add
test
psadbw
or
add
add
out
ror
rol
cltd
mov
jge
cltd
and
pop
fnstenv
add
cli
pusha
lahf
daa
outsb
xlat
mov
mov
stc
sub
imul
dec
mov
jno
add
sub
add
and
xor
outsl
push
insb
mov
pop
xor
insb
mov
mov
addl
add
popa
push
popa
mov
add
fidivrs
hlt
xor
dec
mov
int3
push
pop
leave
in
das
imul
movsb
add
ljmp
add
mov
add
add
ds
and
add
nop
mov
imul
xor
push
sub
mov
add
call
inc
sub
add
enter
mov
add
sub
xor
pop
inc
jmp
lret
jle
push
xlat
mov
sub
lret
mov
jae
je
cmp
inc
push
jmp
pop
inc
inc
out
mov
jbe
lahf
ret
insb
mov
icebp
jmp
sbb
xchg
aaa
aaa
imul
cmp
add
jns
in
shll
push
sti
sarl
add
add
jmp
add
jmp
add
jmp
aas
sbb
add
cmpsb
add
adc
xchg
stc
loope
mov
inc
cmp
add
xor
inc
xor
mov
add
push
call
ljmp
mov
or
add
sub
add
xor
push
lods
add
mov
dec
sub
lahf
adc
mov
push
je
dec
inc
push
addb
sub
add
test
add
add
jnp
add
call
jns
or
add
sarb
gs
dec
mov
add
stc
outsl
xor
addb
shll
add
and
and
add
sub
add
mov
cmpsl
add
jno
add
add
jp
xchg
std
mov
add
out
fidivrs
call
addb
jae
inc
fdivr
lret
push
roll
xchg
or
add
nop
push
scas
dec
mov
dec
inc
cltd
leave
scas
add
dec
xlat
xchg
mov
add
mov
cmpsb
add
outsl
mov
push
mov
add
movsl
xor
clc
loop
popa
rorl
mov
add
push
mov
and
add
sti
imul
and
add
mov
add
fwait
inc
xchg
lock
movsl
imull
mov
add
pop
divb
mov
testb
in
jg
imul
loope
jns
mov
daa
nop
and
add
jbe,pt
or
add
add
push
mov
mov
add
jmp
cwtl
xchg
les
add
cmp
add
inc
push
mov
jo
add
je
cmp
add
pop
and
cmpsl
std
iret
xchg
not
xchg
ret
sub
movsl
dec
addb
add
fmuls
jp
xchg
add
xchg
fs
dec
xor
sbb
pop
mov
jnp
pop
mov
into
inc
rol
inc
mov
add
sbb
pop
xor
scas
add
clc
test
add
scas
lahf
and
repz
add
das
mov
add
rclb
mov
add
pop
push
mov
fldl2e
sti
daa
mov
fstpl
jp
or
js
mov
out
sysret
pop
ret
cmpl
lcall
test
cmp
xorl
add
cmp
arpl
mov
addb
xchg
add
icebp
rorb
add
pop
or
add
cmpsl
adc
bound
adc
add
mov
adcl
sub
add
repz
add
add
loope
push
mov
pusha
iret
adc
pop
test
add
add
xchg
and
add
mov
inc
push
and
jmp
dec
or
add
add
icebp
rcrl
pusha
repz
mov
add
xchg
mov
add
mov
ret
push
xchg
xor
or
add
in
ss
xchg
add
add
movsb
add
cmp
ljmp
int
imul
push
loope
test
fbstp
mov
mov
leave
cld
mov
inc
inc
addb
xlat
pop
or
out
pop
rorl
xchg
cmp
repz
inc
lods
add
jge
enter
pop
out
popa
adc
fisubrl
jecxz
fisubrs
push
cmp
stos
dec
dec
push
add
repnz
bound
out
rorl
add
adc
add
dec
add
loope
push
or
add
leave
jmp
push
insb
int3
push
xor
jae
popl
add
mov
add
push
add
lods
adc
sub
add
hlt
mov
mov
out
arpl
add
aaa
scas
add
mov
sbb
ret
xchg
fsubrl
fdivp
or
add
push
add
sbb
add
fs
daa
leave
dec
mov
stc
icebp
repz
jnp
aad
mov
scas
mov
add
dec
push
add
add
bsf
aad
negl
push
add
inc
lock
jp
cltd
inc
mov
scas
gs
in
inc
pop
mov
and
add
fisubrs
add
inc
push
push
addr16
add
outsb
xchg
push
xchg
add
cmp
test
mov
inc
arpl
movsl
dec
pop
test
add
jbe
jo
sub
add
loop
aam
push
int
popa
shlb
clc
in
push
lods
add
mov
lcall
add
cmpsl
push
cmpsb
add
adc
loop
adc
push
sub
pop
cmp
jno
adc
mov
add
dec
jmp
and
hlt
xchg
xor
cmpsl
in
sbb
cmp
popw
mov
add
add
iret
je
add
xor
pusha
xchg
mov
add
mov
add
shlb
int
mov
jle
imul
scas
add
les
int
pop
pushf
jp
std
fisubl
add
test
add
lds
mov
xchg
add
shl
jnp
test
add
lds
inc
jle
fsub
ret
rcrb
add
repz
add
mov
sub
add
inc
mov
add
fwait
loopne
sub
add
xchg
adc
mov
add
pop
test
add
or
add
nop
or
add
xchg
add
mov
add
xchg
insl
xor
push
mov
imul
xor
pop
sbb
pushf
inc
pop
pushf
jge
push
enter
add
mov
pop
test
add
daa
or
xchg
in
ljmp
mov
add
in
in
sbb
test
mov
jle
add
push
adc
add
add
int3
std
inc
inc
mov
add
add
mov
mov
xor
arpl
lock
fwait
jnp
ret
ljmp
out
add
mov
test
lea
test
add
fwait
iret
addr16
aas
sti
loop
or
add
pusha
cmp
jb
outsl
shl
xchg
xor
pop
xlat
out
push
aad
mov
xor
and
add
inc
dec
xchg
ret
pop
jno
add
in
ret
inc
fs
fwait
inc
jnp
insb
push
mov
cmp
lods
add
mov
rolb
aas
adc
add
add
or
add
insl
push
shrl
xor
add
push
pop
lds
xchg
xor
or
add
les
xchg
aas
mov
add
cltd
js
add
jnp
adc
xor
mov
mov
xchg
pop
daa
lods
add
mov
add
add
stc
mov
in
mov
or
add
pop
or
add
push
popf
mov
mov
mov
mov
add
mov
push
mov
popf
daa
fdivrp
fcmove
mov
jle
add
mov
dec
mov
add
mov
add
movsl
icebp
fldenv
fisttps
mov
lret
or
add
sti
mov
cmp
inc
and
pop
addb
mov
add
add
lahf
int
test
mov
std
movsl
xchg
jge
shl
add
add
add
add
add
popa
and
and
add
add
push
mov
add
pop
addr16
sbb
movl
add
aad
int
add
add
sbb
add
add
lea
cmp
add
jge
add
and
add
add
rep
pop
shr
add
aas
scas
add
add
shrb
ret
add
cmp
fildll
jg
pop
out
mov
add
movsl
js
jb
in
in
add
ret
mov
adc
fldcw
addb
aad
int3
xchg
xchg
sub
push
in
les
loopne
loopne
cli
jle
xchg
in
inc
stos
push
xlat
dec
xchg
sti
adc
mov
add
add
and
add
cltd
jmp
adc
cltd
xchg
scas
add
lret
push
push
fucomi
and
add
cli
pop
aaa
ficoms
add
mov
imul
scas
add
sub
add
in
push
xchg
fadd
xlat
int
adc
int3
adc
jno
push
xchg
ja
cmp
push
movsb
add
rcrb
dec
inc
dec
xor
inc
adc
lret
stos
jae
jl
cmp
push
fs
push
sahf
and
add
add
enter
pop
or
add
aas
sub
add
movb
lret
adc
into
out
or
cmpsb
add
sbb
hlt
sahf
data16
add
sti
or
mov
pop
sub
dec
or
je
mov
call
nop
frstor
add
xlat
data16
add
mov
outsb
add
add
or
lahf
xchg
data16
shl
add
lahf
hlt
fnstsw
and
mov
stc
stc
enter
add
out
jecxz
inc
or
add
push
icebp
xlat
jbe
and
lahf
sub
add
dec
outsb
mov
adc
add
push
ljmp
leave
sbb
je
sub
xchg
dec
inc
add
xchg
iret
lcall
jecxz
add
cmpsl
data16
mov
add
sahf
shll
movsl
test
fs
jg
inc
fsub
loop
clc
loop
lods
add
icebp
mov
adc
add
fsubs
cld
test
add
out
lret
andl
enter
xor
xchg
add
push
cmp
jmp
insl
dec
add
add
cmpsb
add
mov
aaa
lret
cmc
jp
cmpsb
add
lea
xchg
add
xchg
mov
add
lret
add
xchg
mov
roll
jecxz
jp
add
dec
cmp
sbb
adc
push
jnp
and
add
cmp
test
add
xor
dec
data16
add
fwait
shlb
in
sbb
sub
hlt
mov
cmp
push
fistps
inc
cmpsb
add
and
add
xor
push
andl
cmp
imul
into
pushaw
or
add
mov
push
push
ljmp
mov
jno
cmp
cwtl
daa
nop
or
add
out
and
add
jno
jecxz
pop
mov
sbb
test
add
add
add
loope
popf
mov
scas
xchg
inc
faddl
push
pushl
in
clc
mov
add
jo
int3
and
add
dec
stos
add
aad
loopne
add
mov
lea
inc
xlat
jno
sbb
mov
add
sub
add
mov
add
cmp
add
fs
lock
add
out
add
add
movsl
mov
add
mov
add
loopne
xchg
mov
xchg
mov
add
loopne
cmp
add
fistl
ds
in
out
inc
or
add
cmpsb
add
mov
sub
add
push
mov
cmp
lea
add
push
lcall
shrb
add
cmc
sbb
cmp
xor
add
mov
add
add
mov
and
xchg
add
or
add
add
add
add
fs
mov
add
push
or
fucom
rorb
rolb
push
xchg
mov
add
add
insb
cltd
push
outsl
push
wrmsr
dec
in
add
addb
push
mov
stos
pop
mov
pop
push
popa
lcall
add
cmp
testb
movsb
add
fistl
in
xor
ljmp
add
and
out
pop
clc
mov
add
pop
mov
in
stos
and
loope
stos
add
nop
sahf
dec
jno
inc
into
adc
xchg
xor
push
add
pop
xor
fsubrs
add
add
scas
add
sbb
pop
or
inc
push
pcmpeqb
add
adc
ljmp
inc
sbbl
movsb
add
inc
inc
push
pop
lret
test
add
lock
push
add
pop
leave
imul
sub
add
xchg
or
addb
aad
jp
ljmp
rorb
mov
pop
stos
adc
ret
out
xor
je
add
push
xchg
in
rolb
std
pop
pop
sub
add
imull
insl
dec
fiaddl
mov
enter
decb
add
les
dec
adc
cltd
sti
sbb
sbb
dec
xchg
adc
and
add
mov
popf
rorb
add
addb
sub
add
jle
cmp
stc
sub
add
and
fdivrp
idivb
stc
xchg
or
sarl
mov
add
scas
add
inc
jo
dec
mov
in
lret
insb
push
push
mov
add
loope
add
addr16
in
lahf
push
add
lret
mov
add
jmp
rcl
stc
mov
rcll
lahf
pmulhw
inc
je
push
or
add
lcall
movsb
add
bound
add
insl
pop
add
add
xlat
dec
popa
xchg
ljmp
adc
add
test
add
add
sub
addb
xchg
add
mov
add
fdivr
and
mov
push
jb
mov
out
gs
xor
insb
push
dec
pusha
addb
mov
adc
ret
pop
mov
jecxz
and
add
add
shrb
fisttps
pop
stos
jo
push
xchg
pop
sbb
iret
mov
push
adc
rol
pop
sub
add
shrl
pop
push
add
stos
add
into
aas
sbb
xor
add
adc
cmp
push
arpl
and
addb
jl
dec
push
add
pusha
mov
mov
mov
in
add
lret
int
popf
pop
out
repnz
xchg
fwait
clc
lods
add
setge
insl
inc
lds
add
lock
inc
cmp
std
jle
pushf
outsb
sbb
cwtl
mov
stc
xchg
rorl
repz
int
pop
sbb
bound
push
add
mov
add
xchg
mov
add
insl
jno
pop
sbb
add
fldlg2
sahf
add
cmp
add
out
fwait
push
cmp
add
pop
xchg
jecxz
sub
add
xrelease
add
xlat
jne
fcomi
push
push
inc
pop
scas
stos
add
add
dec
and
xor
insb
lods
add
shll
in
cmp
dec
inc
fs
jmp
cmp
addb
inc
stc
in
cmp
cmc
bound
imul
lret
stos
add
fisubs
add
mov
mov
add
stos
arpl
xchg
inc
sub
add
dec
sahf
or
add
lea
js
mov
cmp
lods
add
sub
add
push
push
mov
imul
add
add
adcl
daa
insl
dec
icebp
adc
cwtl
mov
popa
push
or
add
adc
dec
dec
adc
fmul
inc
inc
mov
add
and
add
test
repnz
push
into
inc
je
sbb
mov
xor
mov
in
adc
mov
cmc
add
add
add
fs
mov
dec
xchg
sub
add
add
and
add
ds
lds
cld
iret
sbb
cmp
adc
push
add
mov
out
jbe
mov
jle
repnz
push
addb
jmp
in
repz
je
sbb
or
push
xor
add
adcl
iret
add
add
add
pop
daa
cmp
xchg
xor
pusha
push
add
xor
add
sahf
sbb
add
jo
mov
push
mov
in
mov
mov
add
xor
imul
enter
enter
add
aam
xchg
add
xor
add
rclb
push
push
and
andl
fadd
mov
add
pop
push
dec
out
out
push
add
fnsave
das
cld
jne
addl
lret
xor
add
mov
mov
cltd
inc
jbe
roll
dec
shll
or
cmp
adc
jg
sti
adc
dec
pop
aaa
add
rcll
ljmp
push
or
add
into
push
and
push
fs
jb
test
add
add
add
rorl
pop
imul
int3
xchg
push
int
add
xchg
add
shrb
push
data16
add
rcrb
bound
add
outsb
dec
sbb
test
add
divl
add
dec
in
into
in
add
fwait
loope
jp
add
mov
add
mov
jl
or
add
jnp
add
mov
adc
scas
pushf
add
sub
add
pop
xor
not
addr16
mov
add
cmp
mov
dec
bound
jno
mov
add
lret
shlb
lods
add
cwtl
enter
stc
inc
jb
mov
add
sub
or
add
xchg
test
add
add
push
inc
or
add
into
sbb
pop
test
out
in
xchg
jo
das
mov
or
add
inc
scas
add
adc
sub
aad
add
mov
mov
cli
dec
leave
mov
in
scas
add
in
ljmp
enter
dec
pop
inc
movsl
scas
add
fidivrl
gs
icebp
out
inc
lea
or
add
cltd
push
jle
inc
loope
daa
sub
add
or
xchg
push
aas
scas
mov
iret
sbb
aam
add
push
lea
add
popf
mov
les
add
xchg
and
add
fs
cmp
je
sub
add
pushf
jmp
jbe
je
add
add
stos
add
add
add
pop
inc
stos
add
aas
mov
add
add
add
dec
cmpsb
add
cmpsl
lahf
icebp
xor
dec
adc
lock
jo
inc
dec
jns
cmpsl
mov
cmp
inc
ret
or
add
inc
into
cmp
add
stos
and
add
add
orl
lcall
sbb
pop
and
add
stc
sbb
push
ljmp
cwtl
mov
dec
outsl
pop
shll
not
adc
add
add
aas
push
pop
sarl
pop
sub
add
mov
add
pop
push
add
inc
add
add
adc
sbb
sbb
add
data16
jmp
sub
add
mov
add
add
ja
hlt
push
add
sbb
adc
add
push
pop
push
add
add
lret
and
add
jne
andl
loope
cmpsb
add
add
add
fiaddl
lods
xor
daa
gs
lret
out
push
adc
sbb
add
xchg
ja
mov
in
push
sbb
add
mov
dec
sbb
cmp
scas
sarb
xchg
add
and
test
add
jecxz
out
sti
xchg
les
jg
out
mov
cmc
dec
mov
shlb
bound
add
or
add
pushf
cld
mov
pop
push
icebp
or
add
repnz
add
out
add
movsb
add
lret
sub
add
shrb
add
cli
mov
lahf
pop
dec
test
sbb
sub
add
repnz
jne
inc
cmp
cli
cmp
add
add
loopne
into
add
xchg
add
das
push
aaa
and
add
fwait
cwtl
imul
mov
cmpsb
add
sahf
std
lcall
add
pmaxub
lcall
in
add
adc
mov
lock
testl
add
dec
ret
pop
js
jg
movsl
pop
dec
xor
adc
sahf
mov
imull
imul
jecxz
fstps
bound
sbb
add
xor
xchg
mov
and
add
rcll
push
sub
add
dec
insb
ds
mov
push
aad
mov
add
sbb
fstl
sub
mov
in
mov
cld
and
sbb
add
loope
or
pop
pop
out
das
jg
push
out
cmpsb
add
jle
add
cmp
add
mov
jle
dec
ret
add
add
xlat
iret
or
sarb
mov
jnp
subl
mov
and
xchg
sarb
cli
lahf
cmp
mov
icebp
out
mov
add
mov
les
movsb
add
nop
adc
jo
fadds
imul
xchg
xlat
jbe
rcrl
inc
lcall
add
repnz
pop
mov
shl
add
cld
push
push
mov
add
mov
push
cmpsl
pop
cmp
inc
jnp
jecxz
add
sub
add
cmp
insb
icebp
in
push
mov
add
push
fstpt
and
add
push
fsubr
rolb
in
mov
add
pop
in
sbb
arpl
in
dec
mov
add
add
popf
imul
add
add
pop
daa
sbb
out
clc
ficompl
xchg
add
jns
mov
push
leave
and
outsl
dec
loop
mov
push
faddl
add
add
push
add
xchg
sub
add
cltd
mov
lds
add
cmpsl
mov
add
sub
sub
push
jecxz
add
test
les
imul
add
adc
mov
stos
leave
dec
cmp
push
push
add
jo
xor
jmp
cmp
xchg
out
ljmp
addb
dec
mov
xchg
mov
or
add
inc
insl
push
sbb
jmp
add
push
and
add
add
lret
sahf
pop
in
dec
lods
dec
mov
testl
add
sub
jl
mov
adc
inc
adc
iret
mov
push
sbb
xor
addb
sub
add
add
ljmp
add
in
or
add
and
ds
xor
xchg
cmp
mov
test
add
mov
add
fsts
add
addb
dec
dec
fcomps
add
and
nop
adc
mov
adc
add
add
scas
loopne
mov
repz
testb
imul
into
movsl
pop
mov
mov
add
xor
test
fwait
mov
test
pop
mov
mov
lret
and
add
std
mov
add
add
shlb
mov
dec
xchg
add
ret
pop
mov
add
add
je
xchg
xchg
mov
sbb
std
sub
add
idiv
mov
add
jecxz
xor
cli
push
ret
add
sbb
inc
mov
push
add
push
sbb
sarl
push
sub
add
into
inc
add
add
into
std
das
lea
outsb
mov
mov
pop
or
clc
mov
add
pop
add
push
fwait
adc
daa
push
pop
call
stos
aas
mov
out
adc
adc
ds
cmp
std
adcl
jb
sbb
mov
loopne
inc
ss
pop
test
add
loop
push
cmpsb
add
pop
out
jb
jg
jl
stos
add
out
cmp
add
faddl
cltd
dec
mov
lods
add
add
add
loope
xor
add
jae
dec
add
stos
repz
dec
and
call
add
add
push
xor
add
dec
imul
cmp
add
mov
add
xor
push
pop
addb
sbb
push
sub
add
push
or
add
pop
inc
pop
sbb
add
icebp
ret
int3
negl
pop
pop
cmp
mov
xor
js
push
enter
imul
add
sbb
xchg
icebp
jbe
xor
test
fistl
lcall
xlat
sub
add
je
inc
adc
sub
addb
pop
sub
add
add
add
mov
push
test
add
idivb
sub
mov
fldl
pop
add
add
les
sub
add
in
adc
xor
add
add
jns
shrb
or
pop
mov
iret
mov
sbb
mov
add
fs
dec
enter
xchg
testb
add
jp
dec
ret
ss
addb
in
lret
das
adc
pop
ucomiss
add
iretw
xchg
push
push
cmpsl
faddl
add
jnp
jb
jo
cmc
dec
mov
mov
add
jge
loop
repnz
add
xchg
ljmp
lahf
das
sbb
push
repnz
add
add
push
icebp
inc
addb
test
add
or
add
scas
add
push
pop
and
add
add
leave
lds
cmpsb
add
add
and
add
jnp
add
mov
add
jnp
xchg
add
mov
xchg
and
add
adc
jmp
or
add
add
out
mov
nop
adc
sub
rorl
sub
add
mov
imul
mov
loopne
add
mov
add
cmp
out
leave
add
pushf
sbb
sbb
scas
repz
pop
add
add
add
xlat
je
add
cltd
insl
xchg
arpl
pop
daa
pop
push
mov
add
lcall
mov
pop
lock
add
fidivrs
mov
sbb
sbb
add
mov
jae
xchg
mov
pop
scas
add
lds
xor
add
push
iret
sub
add
and
add
lds
dec
xor
and
dec
pop
push
add
mov
add
repnz
add
add
out
inc
hlt
test
add
call
mov
add
mov
inc
imul
sbb
add
pusha
xorl
sbb
cltd
call
fiaddl
add
mov
call
dec
xchg
mov
pop
fcoms
add
jmp
fisubs
add
cmpsb
add
sahf
fsubrs
aam
ret
fidivl
shlb
mov
mov
add
sub
add
pop
jae
add
inc
and
out
repnz
cmc
scas
subl
add
lock
iret
lahf
inc
or
add
add
mov
pop
mov
add
mov
ja
xor
mov
add
cmc
mov
mov
add
add
jo
sahf
cmpsb
add
ds
add
adc
hlt
rclb
add
push
mov
xor
pop
movsb
add
stos
add
cmpsb
add
loopne
shl
mov
int3
clc
fisubs
sub
pop
shlb
xchg
adcl
sub
add
pop
cli
adc
add
add
repnz
jae
mov
jne
mov
nop
int3
cmp
and
add
add
jnp
xor
inc
in
add
scas
sbb
add
into
clc
rclb
add
cmp
add
loop
lea
or
aas
nop
ds
inc
inc
out
stos
movsb
add
test
jle
rcl
lcall
inc
rcll
add
ret
lds
repz
mov
and
add
xor
jno
sbb
dec
leave
sub
repnz
sub
add
add
or
add
repz
xchg
int
add
mov
add
arpl
imulb
or
add
adc
leave
imul
movl
mov
cmp
cli
mov
sti
sub
add
and
add
add
jne
add
clc
negl
ret
mov
and
xor
data16
adc
rcll
push
add
popa
mov
mov
les
and
das
imul
outsl
imul
pusha
pushw
add
jno
mov
add
fisubs
ja
mov
mov
xchg
out
pop
and
add
add
call
pusha
daa
add
add
add
or
lret
dec
mov
sbb
add
add
add
mov
add
jb
cmp
lret
jg
and
xchg
xor
add
mov
mov
push
push
mov
add
add
xchg
push
add
decb
sbb
sub
add
add
add
adc
pop
mov
sbb
cmp
insl
or
add
inc
loope
jne
mov
addb
fisubrl
fisttps
dec
cmp
xor
cmc
and
and
add
adc
add
daa
inc
call
daa
pop
xor
cmpsb
add
addb
addb
cmp
mov
mul
pop
or
mov
add
insb
mov
xor
pop
sbb
les
xor
xor
push
xor
fnstsw
xchg
push
movsl
jo
and
ss
adc
nop
push
pushf
add
add
jmp
adc
adc
lret
js
or
ljmp
daa
stos
aad
dec
add
add
jne
add
subl
movsb
add
push
add
arpl
add
dec
arpl
adc
aam
adc
call
mov
in
js
adc
rorb
call
and
xor
cmc
lds
inc
mov
fbld
testl
stos
cld
addb
aam
fwait
test
add
jmp
popf
cmpsl
sub
repnz
insl
fnstenv
inc
adc
or
das
or
add
push
add
stc
repnz
dec
adc
fiadds
pop
lock
add
push
sub
add
add
and
loope
iret
pushf
push
xchg
sahf
shr
shlb
add
or
repz
jp
in
aas
push
add
out
mov
cmp
sub
inc
fcmovnu
shl
lock
add
or
add
into
jnp
lahf
imul
add
add
adc
dec
inc
lods
testl
add
sub
xorl
iret
xor
mov
leave
in
fdivrl
addl
mov
test
pop
mov
mov
add
cmp
loop
add
xchg
fcmovnbe
aaa
mov
call
cmp
push
shlb
js
or
add
insb
inc
into
pop
dec
sbb
pop
insb
push
push
addl
lock
push
sub
add
add
add
add
loop
sub
add
xor
outsb
push
lock
insl
lds
mov
add
mov
add
sbb
les
adc
cwtl
test
add
xor
add
add
add
mov
js
adc
add
mov
repz
mov
jp
rolb
add
push
add
mov
and
ret
add
mov
in
push
inc
cld
mov
jbe
or
mov
inc
lea
add
out
adc
push
inc
arpl
add
inc
pop
pusha
add
add
xchg
out
fisttpl
add
pop
pusha
ret
xchg
imul
add
jecxz
add
mov
cmp
test
add
mov
bound
add
adc
out
sbb
int3
inc
xchg
sub
add
jmp
add
or
add
addb
or
add
sbbl
add
push
add
fs
cwtl
add
add
jg
into
push
clc
inc
sbb
je
or
add
pop
lret
jns
sub
add
mov
in
add
decl
cld
aad
mov
out
call
dec
lods
add
sbb
add
sar
imul
sub
bnd
sahf
mov
sbb
aad
add
repz
insb
adc
sub
add
mov
nop
mov
lcall
and
add
add
inc
xchg
rolb
pop
stc
cmp
dec
jl
ror
mov
add
jecxz
xor
mov
add
imul
add
dec
dec
lahf
xor
jecxz
adc
cmp
jno
adc
andl
popa
mov
add
or
inc
jge
cld
jg
pop
inc
dec
out
mov
add
aaa
jns
int3
pop
add
lock
add
pushf
jl
add
push
lcall
fbstp
divb
pop
mov
int
inc
fsubrs
add
add
mov
xchg
rcrl
add
xchg
add
call
jo
out
mov
inc
ret
jg
aaa
jecxz
rcll
test
add
out
cmpl
pusha
mov
imul
add
add
jno
pop
inc
and
imul
add
dec
test
add
push
add
cmp
insl
add
add
fidivs
mov
add
sbb
cwtl
nop
mov
add
ret
mov
decl
mov
mov
add
pop
cmp
xor
push
pushl
jne
insl
fnstenv
dec
ret
push
adc
mov
fisubrs
and
add
jmp
int3
data16
add
enter
sub
add
pop
arpl
add
mov
fistpl
addb
add
leave
dec
and
dec
xchg
add
add
add
add
rclb
data16
cwtl
dec
lods
add
mov
repz
add
addb
pop
imul
jno
dec
imul
or
cwtl
popf
push
xlat
jl
and
add
jle
jo
adc
jae
add
xchg
add
add
pop
stos
lock
lea
inc
push
add
test
ds
data16
enter
pushf
cmp
xor
lods
mov
fidivl
cmpsl
inc
repnz
add
mov
add
stos
add
or
cltd
and
add
pushf
push
cmc
add
add
mov
jg
jl
push
xor
pop
mov
add
push
inc
xchg
cmc
push
dec
xchg
in
sbb
cmpl
fimull
xor
xchg
add
call
popf
out
add
adc
sbb
sahf
je
sbb
or
add
mov
add
push
mov
add
lea
mov
mov
or
add
or
add
nop
fildl
add
mov
add
adc
add
add
jp
js
popa
add
pop
hlt
mulb
out
jae
inc
sbb
push
cld
clc
lret
addr16
sarl
notb
movsb
add
ja
rcll
fnstenv
shlb
pop
xor
cld
jbe
fldt
jecxz
add
das
xchg
addb
push
cmp
fs
inc
decl
inc
fmull
aam
cmpsb
add
aad
push
add
dec
jmp
add
mov
add
adc
dec
mov
shrl
add
aaa
cltd
dec
sub
add
cmp
mov
add
into
enter
jecxz
add
add
fists
cmovge
ds
lods
add
test
or
add
pop
cmpsb
add
cmpsl
dec
add
add
pop
fcompl
add
and
add
push
or
lret
out
add
push
insb
sarl
push
pusha
fs
repnz
sub
add
or
inc
ret
add
or
add
mov
sbb
pop
inc
mov
add
or
add
lret
pop
jne
and
add
leave
mov
mov
cltd
mov
adc
mov
fwait
call
pop
cmc
push
shl
add
jle
adc
lock
sub
or
js
dec
cltd
jecxz
or
stos
add
sbb
dec
pop
xor
add
jne
xor
std
dec
out
xlat
xchg
setp
pusha
daa
lods
cmp
dec
cld
sbb
add
xlat
dec
jo
popa
repnz
xchg
loopne
outsb
mov
mov
add
std
clc
shll
add
add
clc
jecxz
cmp
add
push
pop
neg
test
add
sub
popf
cmp
add
das
pop
aaa
fdivrp
cmpsl
sub
stos
cmp
add
fmuls
mov
add
sub
add
sti
addb
into
das
sbb
mov
pop
fwait
cld
rcrb
orl
add
jg
imul
mov
js
clc
inc
xor
mov
add
jg
inc
mov
add
sarl
sbb
dec
jmp
fs
add
mov
mov
in
ds
dec
inc
stc
jno
aam
ret
mov
add
push
in
xlat
mov
loope
ja
sub
add
add
test
add
gs
jle
lock
cmc
add
add
movsb
add
pop
xchg
clc
pop
repnz
sub
mov
add
cli
insl
mov
subl
fidivrs
loopne
sbb
insl
aaa
pop
jmp
inc
ljmp
shll
and
add
in
and
add
xchg
push
in
stos
rcl
lods
add
out
loop
imul
ss
std
xor
ret
call
sbb
ret
lock
add
lahf
jge
or
add
das
push
mov
clc
and
add
das
inc
data16
jae
jns
enter
add
rclb
and
add
xor
fdiv
call
out
jbe
xchg
rol
ja
mov
stos
sbb
int
lahf
pop
dec
mov
add
fs
sahf
sbb
imul
aaa
scas
add
pop
arpl
sbb
pop
pop
add
icebp
call
movsb
add
fucomp
sbb
dec
or
add
xor
mov
cmp
adc
add
repz
adcl
add
dec
adc
add
sub
add
and
add
int3
jo
inc
jb
adc
mov
call
cmpsb
add
jnp
inc
pusha
xchg
push
roll
add
int3
xchg
xchg
add
mov
mov
jle
aas
xor
js,pt
inc
pop
add
jmp
or
data16
inc
push
add
xor
add
push
cwtl
mov
add
fists
lods
add
movsb
add
jne
and
pop
add
test
add
outsb
enter
ret
xchg
mov
shll
mov
add
outsb
and
add
add
lret
aam
iret
outsl
jle
mov
in
popw
add
pop
lods
add
into
or
add
push
out
add
or
add
stos
add
fisubrl
in
inc
sub
add
xor
loopne
aam
aam
aad
stc
cmp
add
in
xchg
fnstsw
outsb
cmp
adc
add
and
pop
insl
pop
xor
das
outsl
lods
add
imulb
add
pop
jl
loope
adc
add
jecxz
adc
inc
pop
cmp
dec
std
xchg
ljmp
push
add
mov
mov
add
div
jg
fisubl
add
xor
lds
add
cli
enter
add
xor
mov
scas
pop
cmp
ret
push
add
mov
loop
add
adc
je
push
mov
iret
and
add
xchg
out
ss
mov
mov
inc
push
loope
ljmp
sbb
scas
add
jae
mov
add
sub
add
loopne
das
sub
add
in
or
add
cmpsl
aas
cmc
adcl
lcall
cmpsl
push
push
movsb
add
push
fnsave
add
xor
add
aad
jmp
add
icebp
xor
mov
add
add
jno
mov
lods
add
loopne
dec
inc
add
add
add
les
jb
add
sbb
test
add
or
mov
add
ret
adc
adc
lret
dec
sbb
fxch
mov
pop
clc
aam
je
cmpsb
add
or
mov
add
add
or
popf
rorb
insb
xchg
mov
add
pop
mov
push
add
fisubs
inc
pop
pop
enter
add
ret
mov
add
arpl
roll
add
add
popa
xchg
add
jo
jns
mov
add
add
push
fidivrl
add
add
sbb
sbb
sub
add
fwait
mov
xor
add
cmc
shr
outsl
scas
lods
mov
add
std
outsl
add
frstor
add
jb
repnz
dec
mov
add
ds
add
cmc
dec
dec
pop
sbb
add
movsl
enter
idivl
mov
addb
pop
outsb
rcll
cmp
add
imul
mov
add
add
addb
sbb
or
dec
imul
add
ret
mov
mov
ljmp
add
xor
das
xchg
jge
sub
add
out
movsb
add
lahf
shlb
xor
imul
loope
add
xchg
add
mov
push
adc
add
mov
dec
sbb
dec
inc
fnstsw
cld
xchg
add
push
lahf
pop
repnz
divb
cmpsl
aaa
shll
aam
xor
stc
arpl
mov
mov
cmc
addr16
jnp
add
mov
lret
mov
mov
add
xchg
rcrl
mov
add
insb
add
add
roll
out
or
add
inc
push
adc
jae
pop
xchg
scas
add
adc
repnz
add
pop
outsb
cmpsb
add
mov
mov
pop
stos
add
jnp
adc
push
push
mov
or
add
cmpl
add
mov
add
jnp
imul
rcl
addr16
add
mov
inc
xchg
add
hlt
xor
int3
push
adc
add
jne
icebp
imul
push
lock
add
add
adc
inc
ret
xor
mov
ret
sub
add
inc
mov
pop
addb
and
out
cmp
add
dec
outsb
cmpsl
jo
push
dec
xor
xor
add
outsb
jmp
mov
add
add
lahf
push
lea
push
jb
enter
ljmp
add
add
lods
in
push
add
adc
movsb
add
cmp
pop
orl
add
insb
inc
in
pop
loop
incb
fisubrl
mov
add
aas
add
mov
add
mov
push
mov
mov
jle
sub
xchg
mov
jge
mov
in
movsb
add
inc
dec
mov
out
hlt
mov
add
sbb
add
adc
stos
lds
add
xchg
add
jo
xchg
stc
add
add
out
pop
pop
jg
xchg
jnp
adc
mov
popfw
rol
inc
lcall
fcoml
in
filds
add
jmp
add
dec
addb
or
add
mov
add
sbb
sahf
push
loope
mov
inc
scas
add
lods
sti
cld
adc
pop
out
lds
sbb
mov
add
loop
sbb
mov
add
mov
add
enter
inc
xchg
xchg
sub
and
add
in
insl
pop
addb
hlt
addb
adc
inc
test
add
cmpsb
add
incl
xchg
add
ficoms
add
lods
add
or
and
inc
mov
ret
add
sub
sub
mov
add
dec
jle
mov
adc
arpl
rol
xor
mov
imul
call
add
outsb
mov
mov
push
add
iret
cmpsb
add
push
or
push
sub
aam
mov
sbb
fistpl
add
add
test
add
pushf
pop
xor
add
xor
lock
das
mov
push
sub
add
cmp
int3
imul
bnd
jne
mov
test
add
out
xor
and
mov
sti
pop
cmc
pop
ja
sub
mov
xchg
jns
adc
jmp
jne,pt
mov
add
mov
add
aad
enter
and
add
lds
and
adc
add
into
sbb
add
pop
loop
dec
imul
pop
push
fnop
fcompl
mov
je
mov
iret
add
fnstenv
xchg
mov
pushf
rolb
add
xchg
push
cmp
or
add
mov
add
add
jge
pop
ljmp
cld
inc
arpl
test
sbb
add
mov
mov
jb
xor
xor
adc
xor
rcrl
add
xor
or
push
xchg
jmp
xor
lock
xchg
lods
add
ja
or
add
xchg
sbb
xchg
cld
pushf
loope
push
or
testl
or
add
rol
jl
adc
insl
pushf
xchg
fsubrs
mov
sbb
pop
stc
add
adc
out
jg
add
insl
fadds
sbb
cmp
in
lods
insl
out
mov
add
xchg
in
in
lods
sbb
call
xlat
mov
stos
add
pop
mov
addr16
in
movsl
and
addr16
loop
or
bound
add
pusha
jl
roll
rcll
cmp
add
xchg
int3
int
jnp
push
sub
out
data16
xchg
add
push
ja
imul
push
out
add
xchg
and
add
lea
push
out
push
or
add
addb
dec
sahf
cmpsl
test
add
cwtl
pop
and
add
xchg
dec
inc
push
inc
or
add
add
pop
cld
repnz
push
out
sub
add
dec
stos
add
or
add
push
inc
or
jne
jb
jbe
pop
add
lret
or
sub
into
inc
imul
pop
decb
push
add
rcl
add
xor
out
push
lea
cmp
add
dec
pop
dec
cmpsl
sub
add
movsb
add
mov
mov
mov
mov
add
xor
adc
mov
add
mov
jge
pop
or
add
sub
add
popa
sub
cmp
add
enter
add
testl
xchg
xchg
jp
int
add
test
mov
adc
add
add
leave
xchg
jge
dec
mov
xor
add
jne
jg
add
push
cmp
add
call
add
rorb
add
stos
ret
add
inc
mov
add
ret
out
or
add
xor
out
leave
inc
jle
push
mov
add
stos
or
sbb
jmp
imul
and
add
pop
imull
add
add
repnz
add
and
sbb
push
jmp
das
inc
enter
pop
jo
push
sub
pop
cld
xor
xor
nopl
loopne
push
add
xor
loope
test
inc
sti
jg
jl
cmpsb
add
pop
sti
les
jo
add
add
xor
mov
ljmp
add
stc
mov
add
pop
stc
sub
add
jl
jl
arpl
js
jg
lcall
ds
jno
lret
fmull
rorl
adc
jnp
add
mov
je
pop
ror
or
hlt
testl
jle
int
mov
add
stos
jecxz
cmp
mov
pop
jnp
in
or
add
xor
pop
addb
je
lret
mov
add
enter
daa
xchg
imull
add
or
add
out
cld
mov
jp
in
inc
lods
in
sub
outsl
add
loope
out
jb
jmp
out
or
add
add
jbe
xor
fwait
stos
add
mov
scas
add
lea
pop
pop
cmp
arpl
push
xchg
add
add
test
mov
push
dec
addb
pop
out
iret
testb
add
add
push
sub
cmp
add
aaa
sub
cli
adc
xlat
call
outsl
out
mov
cmc
adc
add
sbb
jmp
test
add
scas
push
sbb
sub
add
push
add
push
mov
and
add
add
inc
jbe
cwtl
mov
add
or
add
add
push
int
shll
cmpsl
mov
add
sahf
and
add
scas
adc
pop
push
add
jb
mov
in
mov
push
add
pop
repz
sti
jno
dec
inc
cmp
fcomi
push
ja
out
push
enter
cwtl
fistpl
int3
addr16
xchg
inc
imul
push
add
addr16
scas
add
push
addb
pop
test
add
push
fmull
add
sarl
add
in
inc
sti
rclb
cmpsl
inc
or
push
out
cmp
dec
sub
scas
rorl
add
data16
sahf
jp
add
jns
js
sbb
out
test
add
dec
out
jecxz
add
sub
add
dec
sub
roll
xchg
jecxz
or
add
sub
add
push
cmp
std
cwtl
add
push
sub
add
adc
add
pop
pop
inc
call
mov
add
xor
notb
push
push
add
call
sahf
mov
pop
daa
jns
push
ret
add
out
in
and
add
ficompl
arpl
in
stos
add
add
add
add
add
push
mov
jl
add
dec
pop
je
mov
add
in
std
jno
add
pop
xor
mov
add
add
add
out
insb
mov
sahf
pop
stos
pop
mov
add
cld
dec
das
std
and
add
jnp
add
fsubr
mov
xchg
or
xrelease
add
scas
add
lret
scas
or
add
add
xchg
jo
js
and
add
cmp
add
push
inc
in
fwait
pop
xchg
mov
xor
mov
cli
jg
shll
mov
add
add
jae
lret
cmp
mov
test
add
xchg
call
sub
add
adc
cmp
add
jo
push
je
or
add
clc
clc
rorl
xor
dec
pop
ret
stc
mov
lret
mov
add
daa
lock
mov
test
add
fstpl
add
lds
add
cmp
add
and
add
and
add
cmp
mov
sub
add
das
inc
fisttpll
shll
cmpsl
sub
add
insb
mov
inc
cmp
lock
add
add
fnstcw
stc
add
nop
mov
add
stos
add
ljmp
or
add
jg
xor
daa
imul
add
mov
fistpl
pop
cmp
and
out
cwtl
out
dec
push
stc
hlt
sub
sub
push
sbb
inc
push
push
add
aam
lods
add
insb
repz
fisttps
add
and
add
adc
scas
add
push
sub
cmp
popf
nop
movsb
add
repnz
and
add
in
sub
add
add
fdivr
mov
add
cmp
sbb
aad
sbb
or
xor
mov
xor
and
icebp
fs
mov
add
pusha
add
fisubrl
add
jne,pt
dec
mov
add
cmc
xchg
push
je
and
add
add
sarb
dec
mov
add
sbb
mov
int3
ja
add
stos
add
mov
outsb
pushf
pop
aaa
sbb
add
cltd
lock
mov
arpl
adc
sbb
sahf
cmp
add
add
mov
jmp
xor
pusha
sub
add
add
add
add
clc
mov
lock
push
add
pop
cwtl
lods
xchg
stos
add
jge
ljmp
xchg
add
jne
out
cmp
std
push
sbbl
add
xor
or
add
or
add
or
push
xchg
out
outsl
and
add
mov
add
ja
out
rolb
ss
inc
rolb
scas
mov
lcall
mov
lods
add
out
cwtl
mov
fnstcw
out
push
pop
imul
mov
fs
or
in
and
sub
add
dec
mov
jae
rcrb
add
adc
ss
xchg
pop
addb
jno
mov
add
adc
loopne
sti
daa
add
xor
jecxz
push
or
addb
sbb
insb
jg
cltd
cmp
popf
loope
lods
add
jmp
add
sub
mov
repz
into
outsb
mov
add
lret
add
cmc
jb
movsl
inc
or
jno
mov
scas
add
jb
xlat
xchg
insb
mov
xor
mov
out
xor
xor
or
add
xlat
dec
loopne
dec
or
mov
add
add
jo
cmp
test
bound
aaa
mov
in
scas
xchg
add
add
push
out
insl
xor
cmc
cld
adc
stos
mov
adc
mov
inc
std
or
add
xor
xor
lock
xlat
insl
ds
or
add
and
xchg
stos
add
and
add
jnp
aam
mov
sub
or
push
and
add
add
and
data16
push
push
jge
mov
add
xchg
fwait
mov
add
sbbw
inc
sbb
inc
xchg
lcall
add
push
inc
push
add
pop
ret
push
sbb
enter
add
pop
imul
pop
ljmp
mov
adc
dec
lcall
loopne
std
aad
mov
shrb
add
cmp
mov
imul
add
mov
lahf
mov
add
push
add
add
add
aam
jae
repz
inc
stos
add
cld
testl
add
or
xlat
test
add
push
push
shrl
mov
add
add
lahf
xchg
pop
lds
xchg
mov
add
ret
push
add
scas
mov
cmc
in
pushf
or
add
inc
mov
inc
std
sub
add
rcrb
mov
add
shll
repnz
in
mov
and
mov
fadd
mov
fidivl
add
rcrl
addb
mov
add
mov
cwtl
push
add
loop
aaa
jno
aas
lds
icebp
adc
or
add
push
add
add
add
cmpsl
in
xor
outsl
add
add
sub
add
cli
inc
stos
add
xor
ds
sbb
mov
add
push
test
cmp
testl
add
cmp
mov
push
cmp
shrl
sbb
and
add
add
daa
pop
push
cmp
add
add
inc
js
sub
add
cmp
arpl
add
mov
add
inc
or
add
sbb
lock
xchg
test
fbld
add
hlt
adc
decb
repnz
mov
inc
mov
sbb
rep
cmp
ljmp
mov
sub
mov
add
mov
add
add
sbb
test
add
clc
rcrl
mov
shrb
dec
cmp
icebp
repz
or
add
mov
lods
xchg
sbb
test
add
ds
js
testl
lret
addb
filds
addl
add
lret
jg
test
and
jl
out
lods
cmp
ret
add
mov
add
movsb
add
or
shll
aaa
push
and
add
push
aaa
push
and
sub
add
and
add
cli
xor
mov
push
mov
iret
xchg
dec
pop
sub
dec
push
addb
jecxz
popf
in
imul
dec
cltd
addb
or
add
sbb
sbb
jnp
add
mov
add
nop
cmp
cmp
scas
and
add
mov
and
push
ret
add
add
js
add
cli
or
add
shl
pop
and
pop
testl
insl
mov
mov
cmp
ja
xchg
add
out
enter
dec
push
add
movsl
sub
add
and
cmp
add
xchg
cmc
mov
into
and
popa
fistpl
add
add
bound
sbb
fcoml
add
mov
push
negl
add
enter
aas
inc
xchg
std
mov
add
pop
inc
mov
add
into
fs
arpl
bound
aaa
and
sbb
xor
adc
mov
pop
fiadds
clc
push
and
jae
or
sub
sbb
jl
pop
inc
mov
inc
rcrl
dec
dec
xchg
xor
aaa
jnp
pop
push
ud1
add
imulb
adc
jp
jne
xchg
hlt
lods
add
iret
test
add
clc
mov
xchg
fdiv
and
aaa
cld
pop
lahf
add
add
inc
out
push
sub
cli
adc
push
fucomp
rolb
add
fisubs
dec
repz
add
in
jecxz
test
nop
add
jle
sahf
out
idivb
out
cld
pushf
pop
call
add
aad
add
imul
andnps
dec
mov
out
and
jg
add
xchg
add
or
add
ja
cmpsb
add
xorl
shll
add
push
cmp
inc
lret
popa
dec
mov
fs
add
and
add
add
adc
add
sub
cmp
add
add
add
mov
push
add
add
loop
jo
inc
je
mov
mov
add
mov
add
pushf
stc
push
jp
je
mull
imul
jae
lock
sbb
lock
sbb
add
adc
inc
dec
shlb
loope
adc
add
ret
movsb
add
lret
inc
jns
fsts
rclb
fadd
mov
sub
add
sbb
xchg
sarl
mov
add
add
push
mov
cmp
add
in
mov
mov
add
lea
add
mov
repz
jae
cld
mov
lods
add
and
add
push
adc
xchg
mov
cwtl
jmp
jmp
sti
stos
dec
fwait
pop
pop
inc
pminsw
sbb
sahf
jnp
bound
add
inc
ja
add
sti
push
add
sbb
mov
fdivrl
repz
xor
lock
xchg
add
mov
outsb
popa
cmp
add
cmc
or
add
daa
fstpt
dec
shr
popf
icebp
jnp
add
add
add
inc
jbe
xchg
add
pusha
push
push
into
ret
add
or
add
add
lret
add
lock
test
add
test
jns
and
lret
xchg
push
add
mov
add
shrl
hlt
jp
add
ljmp
add
pop
pmaxub
dec
push
icebp
lret
push
xchg
test
xor
je
cltd
addb
mov
int
dec
mov
cmc
rorb
add
repz
cmp
add
rcll
movsl
pop
int
jecxz
data16
mov
add
push
fisubl
jmp
arpl
add
pop
js
insl
enter
and
add
pop
pop
mov
je
or
add
xchg
add
pop
and
add
dec
add
add
movsl
jmp
and
mov
cmc
mov
test
mov
add
pop
and
add
jl
cmpsl
shl
out
xchg
inc
sbb
les
inc
mov
popf
xchg
or
add
insl
xchg
xchg
aas
aad
pop
mov
cmp
int
lock
sub
adc
mov
and
lret
jns
inc
or
sbb
add
add
mov
add
add
stos
add
ficoml
xchg
xchg
ja
add
gs
add
xchg
unpcklps
sahf
int3
mov
in
pop
test
add
daa
fcoms
add
shll
add
in
or
pop
xor
int3
sub
add
add
xchg
add
enter
and
add
add
test
lods
add
loopne
mov
and
add
addb
ja
dec
or
add
adc
aaa
inc
int
add
lds
xor
add
in
or
add
cmp
add
push
xchg
mov
push
pushf
addb
push
cmpsl
js
outsl
adc
cmp
and
add
add
jle
or
add
popa
mov
xor
int3
and
add
add
insb
lcall
pop
or
add
add
inc
mov
sti
mov
xor
add
lds
dec
cmp
pop
test
add
xor
add
xor
ss
scas
clc
fisubrs
or
add
mov
movsb
add
add
lods
add
shll
lods
mov
pop
mov
add
add
dec
fimull
add
div
xor
loopne
add
and
cmp
sbb
hlt
scas
rolb
pop
jns
add
push
add
pusha
test
stc
cmpsb
add
in
add
je
mov
add
add
push
test
or
faddl
mov
sbb
add
add
in
ret
add
out
addr16
add
xchg
inc
jo
add
or
add
insb
jmp
xchg
add
lret
sbb
sbb
add
mov
add
add
add
add
mov
xor
call
lods
shlb
add
add
add
lret
dec
std
pop
in
xchg
add
push
test
add
sub
add
ja
add
add
mov
xchg
dec
jno
fsubp
pushf
jnp
mov
scas
fadd
adc
adc
xchg
mov
add
paddw
jp
add
lahf
clc
adc
sbb
sub
add
out
push
mov
xchg
mov
loop
xchg
cmpsb
add
sub
add
pop
sbb
add
mov
push
cli
ss
and
dec
push
add
add
add
outsb
and
add
mov
add
dec
push
adc
adc
add
popf
rcl
and
add
push
inc
push
add
ja
adc
xchg
repnz
add
imul
lods
jb
in
outsl
pop
pop
jle
mov
add
add
adc
inc
xor
mov
jmp
add
add
sbb
and
add
loope
insl
pop
or
add
je
add
jo
jge
scas
adc
stos
in
and
add
mov
jge
insb
xchg
stos
mov
aas
mov
aaa
or
add
mov
add
je
add
sbb
mov
add
dec
je
dec
les
jo
sti
push
add
daa
in
jbe
arpl
xor
jno
jo
fidivrs
sbb
add
repz
add
or
add
test
and
pop
mov
in
push
mov
lea
jle
repz
cmpsb
add
or
add
sub
or
jmp
adc
jbe
add
loop
repz
jae
std
jns
add
add
decl
inc
push
insl
lea
xchg
sub
push
das
dec
movsb
add
popa
pop
mov
add
xor
pop
sub
add
xchg
aam
adc
outsl
pop
jne
push
dec
test
orl
dec
sub
add
stc
inc
jge
or
mov
or
add
or
mov
pop
jb
add
and
pushf
or
mov
add
cmp
push
jmp
dec
jns
dec
mov
and
loope
pop
and
add
lcall
int
add
push
and
add
add
fwait
out
pushf
ja
add
xlat
push
add
fisttpll
iret
xor
and
inc
in
add
loop
inc
or
mov
add
push
add
cltd
cmp
push
enter
stc
mov
add
mov
inc
mov
add
add
jmp
jl
repz
add
dec
scas
or
add
and
add
cli
add
add
je
add
add
add
and
add
sti
hlt
rol
ret
in
sbb
test
add
jo
mov
in
dec
push
add
cltd
cwtl
ret
bound
popf
cmp
pop
jb
addb
out
in
cmp
dec
std
add
lods
add
cmp
mov
add
inc
xor
add
add
mov
movsl
pop
test
rcll
add
push
push
mov
jecxz
xchg
xchg
add
mov
mulps
fld
inc
pop
test
jecxz
sbb
and
add
fs
dec
stos
fstl
jp
add
sbb
insb
jle
add
in
mov
test
add
ljmp
push
prefetchwt1
push
pop
fdivl
out
pop
sub
fwait
add
cmp
or
inc
test
adc
sub
or
add
add
sbb
add
dec
cmc
lret
mov
rcll
xchg
cmp
add
ds
outsl
lea
testb
daa
ljmp
or
lods
add
addl
add
fisttpll
jns
mov
push
aaa
cmp
dec
outsl
xchg
add
jno
add
bound
sbb
pop
or
lock
pop
shlb
add
js
dec
sti
addb
loopne
jns
add
jb
add
int3
imul
cmp
xlat
mov
cmp
fs
add
add
add
add
jecxz
test
add
add
add
and
xchg
add
cmp
loopne
adc
add
jecxz
divl
fnstcw
add
add
insl
inc
mov
mov
jge
add
cmc
insb
aaa
inc
cmp
add
jg
and
add
pop
js
lods
add
imul
out
cmp
add
in
push
mov
add
pop
add
add
outsl
inc
adc
addb
imul
insl
out
jns
jbe
bound
jl
add
sub
and
les
adc
popa
lret
add
add
ficompl
repz
add
adc
xlat
cmpsl
rclb
push
sbb
stos
adc
enter
fsubrs
add
repz
fcoms
clc
popl
sub
xor
pop
mov
add
mov
fwait
addb
ljmp
arpl
lcall
loope
cld
dec
dec
test
add
lods
add
sub
add
add
sahf
push
out
iret
aad
xchg
add
in
and
add
adc
add
lret
fdivrl
add
sbb
add
add
add
pop
jle
xchg
fucomi
adc
filds
repz
fs
adc
inc
mov
lds
icebp
push
mov
add
cmpsl
sub
add
xor
in
add
repz
insb
push
mov
mov
add
inc
mov
xchg
in
scas
add
test
add
mov
fwait
lock
loopne
test
add
inc
and
fmuls
daa
jl
test
in
movsl
outsb
leave
jmp
sahf
jp
into
sbb
fcmovnu
idiv
aam
sbb
add
mov
fisttps
sbb
jp
add
jbe
add
mov
sahf
movsl
data16
pop
jl
mov
add
add
add
jae
xor
shll
call
inc
sbb
mov
add
xchg
addb
in
fmul
leave
mov
xor
ret
add
pop
fadds
jo
pushf
push
lcall
mov
sub
add
addb
into
sahf
mov
pop
int3
xchg
adc
push
rolb
jl
or
dec
mov
add
add
or
add
outsb
out
xchg
adc
fnstcw
ja
jmp
and
mov
and
and
add
push
lcall
push
jp
add
cmp
daa
mov
dec
sbb
adc
into
in
dec
and
add
add
add
ret
push
add
push
sbb
cli
jno
add
das
pop
sbb
push
add
add
out
mov
and
mov
add
addb
imul
cld
xor
jmp
mov
sbb
sub
hlt
mov
mov
add
hlt
sub
add
add
or
add
push
mov
js
add
jns
in
dec
fildl
add
jbe
aad
add
jno
mov
lds
dec
add
cmp
inc
push
sub
mov
sub
add
addb
jae
add
pop
dec
dec
jb
mov
sbb
xor
ficoml
leave
sbb
icebp
insb
inc
ficomps
adc
fdivr
add
aaa
out
movsb
add
pop
adc
pop
xor
popa
sub
jp
cmp
into
data16
test
add
or
add
lret
push
addb
push
push
add
xchg
rcrb
add
fwait
lahf
ret
and
add
mov
cmp
sbb
aaa
add
add
in
xchg
cmc
cmp
push
push
mov
add
mov
mov
push
xlat
addb
lock
lret
iret
push
fldenvs
add
in
jle
mov
daa
roll
add
int
aas
lcall
add
mov
sub
test
jle
addb
xor
scas
or
ljmp
push
add
les
mov
add
dec
mov
loopne
test
add
add
add
add
sub
add
jne
arpl
inc
adc
and
loope
lods
add
in
cltd
xlat
lcall
add
loop
xlat
dec
test
add
add
mov
adc
add
push
add
fcoml
mov
aas
jl
lahf
inc
insb
test
mov
mov
add
js
add
hlt
dec
outsl
mov
add
add
add
data16
sbb
je
jge
scas
inc
in
pop
out
daa
cmp
roll
sub
test
jbe
jnp
and
xor
shlb
add
addb
lcall
pop
mov
xchg
shld
jbe
add
movb
add
cwtl
push
bound
mov
cmpsl
add
add
cmpsb
add
addb
jns
add
xchg
bound
add
out
imul
mov
add
repnz
sbb
jo
and
popf
sahf
push
pop
sarb
add
cmp
add
js
in
cmc
ret
add
adc
add
fidivl
inc
mov
dec
roll
jbe
mov
add
test
add
jecxz
add
in
push
test
add
sub
fst
jnp
lods
cmp
addb
paddsw
xchg
idiv
push
push
add
inc
fsubrp
jb
lea
add
cmp
xor
pop
inc
test
add
cmp
add
cmp
fisttpl
movsb
add
movsl
aas
mov
outsb
push
inc
mov
add
mov
