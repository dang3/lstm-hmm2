add
xor
push
push
add
adc
push
adc
adc
adc
adc
adc
jb
xor
add
add
adc
inc
xor
add
jo
adc
add
xor
pusha
add
xor
inc
push
bound
add
inc
add
pusha
inc
add
inc
xor
pusha
add
add
push
push
jo
xor
add
push
jo
inc
pusha
adc
add
inc
push
push
and
and
add
add
push
xor
xor
jb
inc
add
pusha
push
inc
add
inc
add
inc
xor
pusha
jo
add
pusha
pusha
adc
add
xor
xor
add
push
add
and
add
xor
adc
add
xor
add
add
jb
and
add
adc
jo
add
and
inc
pusha
pusha
and
add
xor
adc
pusha
add
add
inc
push
add
adc
xor
inc
inc
add
xor
inc
add
xor
pusha
jb
adc
push
inc
adc
inc
pusha
add
and
push
adc
add
add
and
inc
jo
inc
jb
push
and
inc
and
and
add
add
add
and
and
pusha
add
and
jo
add
push
inc
push
xor
add
xor
push
pusha
jo
adc
jo
adc
add
add
jb
jo
adc
xor
push
inc
jo
jo
inc
jo
pusha
add
push
xor
bound
pusha
add
pusha
inc
push
add
add
push
push
xor
add
adc
bound
add
inc
and
and
pusha
add
jo
jo
adc
add
add
and
pusha
jo
and
inc
add
add
add
and
jb
inc
xor
and
jo
inc
xor
add
inc
add
push
xor
inc
and
push
adc
add
jo
adc
pusha
push
inc
add
xor
pusha
jb
xor
inc
bound
xor
jo
inc
xor
add
xor
and
add
inc
add
push
and
xor
adc
pusha
xor
jo
add
inc
add
xor
pusha
xor
add
adc
xor
push
jb
xor
add
inc
and
jb
push
add
adc
inc
adc
pusha
bound
push
add
add
bound
add
and
add
add
push
and
inc
xor
xor
adc
adc
jo
adc
inc
add
xor
add
add
inc
jb
bound
add
jb
xor
and
add
xor
add
add
pusha
add
add
push
and
bound
add
jo
adc
add
inc
inc
and
bound
bound
add
push
adc
add
push
push
inc
add
jb
adc
add
inc
push
xor
xor
jo
add
inc
inc
adc
add
add
push
xor
add
jb
xor
adc
inc
pusha
add
pusha
pusha
and
jo
push
jo
inc
bound
and
pusha
xor
adc
jo
push
adc
inc
bound
xor
push
pusha
xor
inc
adc
and
add
adc
inc
add
bound
add
and
and
xor
and
adc
and
inc
inc
add
jb
push
pusha
push
xor
add
adc
xor
jo
inc
push
and
xor
push
inc
inc
xor
jb
inc
adc
xor
and
adc
adc
adc
inc
jo
and
jo
add
inc
adc
jb
add
pusha
inc
bound
push
and
push
xor
jo
adc
adc
pusha
pusha
xor
adc
xor
push
pusha
inc
push
add
push
pusha
jb
inc
push
adc
add
pusha
push
and
push
inc
jo
push
inc
push
push
xor
jo
and
and
add
jo
jo
adc
add
add
inc
inc
inc
xor
and
jo
push
add
bound
adc
add
xor
add
xor
add
adc
add
and
push
adc
add
inc
adc
add
jo
inc
jo
add
add
inc
push
adc
jo
add
and
pusha
inc
add
add
pusha
inc
push
jb
adc
adc
inc
inc
jb
adc
adc
adc
bound
xor
push
jo
and
bound
push
and
and
xor
jb
bound
and
add
xor
inc
jo
inc
add
xor
pusha
add
xor
adc
xor
jb
xor
push
add
add
xor
and
inc
and
inc
push
jb
xor
and
jo
xor
add
adc
and
and
xor
push
add
inc
inc
push
push
bound
add
add
inc
inc
adc
add
and
push
and
inc
pusha
pusha
pusha
push
push
jb
jo
jo
adc
add
and
push
add
add
push
and
push
add
inc
adc
jo
bound
push
bound
add
push
and
pusha
add
pusha
adc
jo
add
add
inc
and
and
add
add
xor
add
jo
jo
add
inc
inc
xor
xor
push
add
inc
and
xor
and
push
add
add
adc
jb
adc
inc
and
push
and
xor
xor
xor
xor
inc
inc
jo
add
inc
jb
push
add
add
push
xor
push
and
inc
inc
xor
jo
add
jb
add
adc
add
add
and
inc
inc
add
jo
add
jo
adc
xor
inc
and
adc
add
xor
push
push
add
pusha
pusha
push
push
add
jo
bound
adc
and
push
push
inc
push
xor
add
push
xor
push
inc
xor
push
jb
bound
xor
adc
push
adc
add
adc
inc
adc
inc
inc
inc
pusha
pusha
jo
inc
add
push
xor
adc
add
inc
push
pusha
inc
add
inc
xor
push
and
add
adc
add
adc
and
push
push
add
pusha
push
adc
adc
xor
and
add
add
adc
and
jo
inc
add
add
xor
push
pusha
and
push
inc
jo
xor
add
jb
push
add
add
adc
and
and
add
add
inc
inc
and
add
jo
add
add
and
add
xor
xor
push
add
pusha
bound
push
jb
bound
push
pusha
xor
jb
pusha
jo
push
and
push
inc
adc
adc
add
push
add
xor
inc
adc
push
inc
jb
inc
and
add
push
inc
add
inc
adc
add
bound
add
and
adc
add
adc
inc
jo
add
pusha
adc
and
add
xor
jb
add
adc
jo
add
push
xor
jb
jb
inc
inc
push
push
and
xor
adc
push
jo
push
add
adc
pusha
push
add
push
add
xor
push
add
add
adc
adc
and
jo
add
adc
jb
xor
xor
jo
inc
add
add
adc
xor
jb
inc
push
jo
add
add
xor
inc
jo
inc
jb
adc
bound
and
xor
push
pusha
jb
inc
inc
and
pusha
xor
add
jo
jo
xor
bound
add
xor
and
xor
pusha
adc
add
inc
adc
and
adc
and
inc
pusha
jo
inc
adc
push
adc
xor
inc
and
jb
add
push
inc
xor
xor
jb
adc
add
and
jo
xor
and
and
jo
add
and
inc
xor
bound
xor
inc
and
xor
pusha
pusha
adc
xor
pusha
push
xor
add
xor
inc
xor
adc
jb
and
inc
adc
push
adc
add
add
jo
and
adc
jo
add
inc
inc
inc
jo
push
jo
add
pusha
jo
and
and
push
xor
pusha
and
add
push
jo
inc
add
add
xor
add
jb
push
add
inc
and
and
bound
xor
inc
jo
pusha
jb
adc
add
xor
adc
jo
inc
inc
inc
add
xor
push
xor
xor
jo
pusha
and
inc
and
inc
push
add
jb
jb
and
pusha
jo
and
inc
add
inc
push
adc
inc
jb
and
adc
add
pusha
bound
add
adc
bound
push
jo
add
push
pusha
add
push
inc
xor
xor
inc
add
add
adc
add
add
jo
add
push
adc
bound
xor
pusha
adc
pusha
adc
push
pusha
pusha
pusha
bound
inc
inc
and
and
xor
add
adc
and
inc
inc
inc
xor
push
and
add
jb
push
add
xor
add
push
add
push
inc
pusha
xor
add
inc
jo
add
add
pusha
xor
xor
add
and
inc
and
add
inc
push
xor
pusha
xor
jo
jo
add
add
jb
and
add
add
inc
and
jb
jo
bound
jo
add
and
adc
and
adc
xor
pusha
add
add
inc
inc
xor
bound
adc
push
add
add
adc
pusha
push
add
xor
jo
inc
push
jo
and
push
add
adc
inc
add
pusha
and
xor
xor
adc
add
inc
inc
and
pusha
push
push
add
push
xor
pusha
adc
inc
add
jo
add
add
add
push
pusha
xor
and
adc
add
adc
jo
adc
inc
push
xor
push
add
add
push
and
add
xor
adc
inc
and
push
inc
pusha
bound
pusha
add
push
jo
add
add
and
inc
bound
xor
xor
add
push
and
xor
add
inc
adc
inc
add
jb
bound
add
jo
xor
adc
add
jb
jb
adc
push
xor
push
add
add
jo
jo
push
and
add
xor
jb
inc
add
inc
adc
inc
push
xor
add
add
and
inc
inc
push
and
jb
push
pusha
and
and
add
push
inc
jo
add
adc
pusha
add
jo
xor
inc
push
xor
xor
xor
adc
add
xor
adc
add
adc
and
add
push
bound
adc
push
and
adc
inc
add
adc
and
inc
add
jb
add
and
adc
add
adc
add
and
add
and
add
xor
jb
jo
adc
push
add
xor
inc
xor
add
adc
add
add
adc
pusha
and
and
inc
jo
xor
jb
bound
jb
and
and
and
jo
add
xor
xor
jb
pusha
jo
add
push
add
jo
and
xor
xor
bound
push
add
inc
push
bound
pusha
add
adc
jb
and
xor
xor
add
add
and
pusha
add
adc
xor
pusha
inc
add
inc
inc
add
adc
inc
add
push
add
add
jo
push
xor
push
add
push
adc
xor
bound
add
inc
push
add
push
add
push
inc
xor
inc
add
adc
and
xor
jb
jb
push
inc
add
push
inc
inc
pusha
xor
adc
xor
push
add
adc
xor
add
inc
and
adc
jb
push
pusha
inc
inc
push
and
add
inc
inc
push
add
bound
bound
inc
and
push
add
jo
pusha
adc
add
and
inc
xor
add
and
add
inc
jb
xor
add
add
inc
and
xor
xor
adc
inc
add
jo
and
xor
inc
bound
inc
push
xor
push
add
inc
pusha
and
inc
inc
pusha
xor
and
xor
xor
adc
pusha
and
pusha
adc
bound
pusha
adc
inc
push
jo
inc
and
push
and
inc
add
inc
jo
inc
adc
and
xor
inc
jb
jb
xor
inc
inc
xor
add
xor
add
xor
push
xor
inc
push
add
and
jb
xor
add
inc
jo
add
add
inc
xor
add
jb
adc
inc
add
and
inc
and
pusha
push
and
and
inc
adc
adc
push
pusha
add
xor
push
jo
inc
xor
push
add
and
add
and
inc
inc
pusha
inc
bound
pusha
xor
add
add
jo
push
jo
add
adc
adc
adc
jb
bound
pusha
inc
adc
push
add
adc
push
add
inc
inc
pusha
inc
pusha
xor
add
pusha
adc
add
adc
jo
adc
jo
and
add
add
add
jo
add
and
adc
xor
pusha
adc
adc
inc
jb
xor
xor
add
add
add
xor
xor
pusha
and
add
xor
xor
xor
jo
pusha
adc
add
jb
add
jo
push
push
inc
pusha
and
add
add
inc
push
adc
inc
jo
xor
add
add
inc
add
adc
push
xor
and
add
inc
inc
and
adc
push
add
xor
inc
add
add
inc
add
add
adc
add
and
add
pusha
and
adc
push
add
and
pusha
adc
push
pusha
add
inc
jo
and
jo
add
bound
add
xor
push
xor
adc
and
bound
pusha
and
and
push
xor
add
add
push
pusha
add
push
adc
add
jo
pusha
pusha
adc
push
and
xor
inc
inc
and
pusha
jo
push
inc
add
adc
pusha
add
and
add
inc
adc
xor
inc
and
push
add
adc
pusha
jb
add
and
add
add
jo
pusha
push
push
xor
push
xor
inc
xor
add
jo
and
inc
jb
add
xor
pusha
and
inc
inc
adc
adc
push
add
inc
adc
xor
and
and
inc
inc
add
jo
add
jo
inc
jb
bound
push
and
and
push
pusha
adc
add
adc
adc
adc
xor
and
push
xor
push
and
jo
add
jb
xor
inc
bound
inc
adc
xor
xor
push
jo
adc
pusha
push
push
inc
xor
add
add
and
inc
push
add
push
inc
pusha
inc
add
add
adc
adc
push
add
inc
xor
add
add
adc
inc
pusha
add
pusha
add
and
inc
add
jo
add
push
add
push
add
push
pusha
add
add
xor
and
add
adc
bound
add
add
pusha
push
and
pusha
xor
push
jo
xor
pusha
bound
and
jo
adc
add
add
xor
xor
inc
and
adc
add
adc
add
and
and
inc
adc
inc
add
adc
push
pusha
adc
jo
inc
xor
inc
push
add
inc
pusha
push
push
and
jo
add
jo
add
adc
inc
adc
add
push
add
push
add
bound
xor
inc
adc
and
pusha
and
add
pusha
add
add
inc
jo
inc
and
jb
inc
adc
add
add
and
xor
pusha
jo
add
and
xor
add
inc
inc
inc
add
add
add
add
pusha
jo
push
add
add
add
push
adc
add
bound
and
and
push
push
pusha
inc
inc
inc
and
add
add
adc
xor
adc
add
jo
inc
jb
xor
and
inc
and
jo
inc
xor
bound
xor
inc
inc
bound
pusha
xor
add
bound
add
adc
and
pusha
push
add
jo
adc
xor
add
jb
and
inc
xor
adc
and
bound
bound
adc
and
add
add
xor
adc
jb
add
jo
adc
push
adc
adc
xor
push
push
pusha
xor
push
add
xor
add
add
inc
jo
inc
xor
push
and
xor
inc
add
and
inc
inc
jo
push
push
add
push
xor
and
inc
and
jo
push
jo
add
jo
add
inc
jb
bound
push
add
add
push
xor
pusha
jo
inc
adc
pusha
adc
xor
add
add
jb
jb
pusha
adc
xor
adc
adc
push
pusha
bound
xor
jb
add
adc
and
pusha
adc
and
push
jo
add
add
push
push
add
xor
xor
pusha
jo
add
xor
and
add
add
and
add
xor
pusha
inc
add
bound
and
adc
jb
push
add
adc
push
adc
inc
push
xor
inc
pusha
adc
add
add
and
add
pusha
and
xor
add
add
adc
inc
adc
xor
bound
xor
jb
jb
and
adc
and
push
jo
add
adc
adc
and
inc
add
pusha
and
jo
inc
add
adc
xor
bound
inc
add
jo
add
and
push
xor
pusha
add
push
jo
jo
xor
jb
adc
and
add
bound
inc
and
bound
bound
xor
adc
adc
add
inc
inc
inc
inc
and
xor
and
add
and
bound
add
xor
adc
inc
add
xor
pusha
and
add
push
and
and
add
jo
jo
pusha
push
add
push
pusha
add
add
adc
pusha
add
add
adc
jo
inc
and
jo
jb
and
add
bound
push
push
inc
adc
and
and
adc
push
inc
xor
adc
add
push
add
jb
inc
add
xor
and
add
pusha
xor
add
inc
xor
and
bound
inc
inc
add
push
push
add
pusha
pusha
and
add
xor
xor
pusha
add
inc
and
xor
and
push
add
push
push
inc
adc
inc
adc
add
adc
adc
push
jo
add
and
xor
inc
add
adc
xor
push
add
jb
jb
jb
push
push
pusha
adc
pusha
push
add
and
inc
xor
inc
pusha
push
jo
adc
inc
jo
add
and
inc
add
jo
add
and
jb
adc
inc
adc
adc
inc
inc
and
pusha
adc
jb
adc
inc
and
inc
inc
inc
bound
xor
push
xor
adc
adc
adc
inc
inc
add
push
push
inc
inc
push
add
bound
pusha
push
inc
pusha
and
push
push
push
push
add
inc
jo
pusha
jo
and
pusha
jo
and
add
adc
adc
inc
jo
jo
add
push
add
and
adc
add
pusha
adc
adc
and
push
pusha
inc
inc
inc
inc
xor
adc
push
and
adc
jo
push
and
pusha
add
adc
add
push
and
inc
jo
push
add
adc
jo
add
adc
pusha
xor
inc
inc
adc
push
xor
xor
jb
jo
add
inc
and
add
bound
add
pusha
inc
inc
xor
add
jo
xor
and
add
inc
and
xor
inc
inc
and
pusha
jo
jo
xor
jo
add
xor
push
pusha
pusha
and
bound
adc
jo
add
push
jo
pusha
push
add
push
xor
push
and
add
jo
jo
add
and
pusha
push
adc
add
xor
pusha
xor
add
jb
add
add
jo
bound
xor
and
adc
push
inc
jo
push
xor
adc
xor
push
xor
adc
pusha
jb
jo
xor
adc
xor
pusha
push
inc
adc
jo
pusha
push
add
inc
adc
xor
add
adc
adc
push
add
and
xor
inc
adc
inc
add
jb
inc
push
add
xor
add
and
add
pusha
xor
xor
pusha
push
push
adc
xor
pusha
add
add
add
adc
jo
push
add
adc
push
push
add
push
add
inc
jb
add
jo
add
xor
adc
inc
and
inc
xor
and
add
add
adc
add
xor
jb
adc
inc
xor
xor
pusha
add
push
add
bound
jb
jo
jo
add
push
add
inc
jb
adc
add
adc
inc
xor
push
inc
add
adc
xor
add
inc
xor
jb
adc
jo
jo
xor
adc
inc
pusha
adc
inc
add
adc
pusha
adc
jo
push
inc
add
inc
and
inc
xor
push
push
add
add
xor
inc
and
adc
xor
and
pusha
inc
add
push
inc
inc
and
push
jo
adc
add
and
jb
xor
xor
adc
add
push
add
add
adc
push
add
jo
add
jo
add
push
add
add
add
push
jo
add
and
bound
bound
push
push
adc
and
add
adc
and
add
push
xor
jo
add
adc
add
add
adc
adc
add
and
and
add
and
adc
add
inc
xor
pusha
and
adc
add
add
add
push
inc
adc
and
add
inc
add
xor
add
inc
pusha
xor
inc
add
push
and
jb
bound
pusha
and
inc
inc
jb
bound
xor
add
jo
pusha
pusha
and
inc
xor
and
adc
inc
pusha
inc
adc
inc
add
bound
bound
add
push
inc
xor
add
inc
xor
xor
inc
adc
push
pusha
add
inc
xor
inc
jb
push
add
xor
and
inc
xor
adc
jo
add
adc
push
xor
add
xor
pusha
and
add
add
pusha
add
xor
xor
add
add
add
and
xor
push
inc
adc
add
add
inc
xor
push
jb
push
jo
push
xor
add
and
adc
xor
jb
xor
inc
jo
add
adc
push
and
and
pusha
jo
adc
pusha
jo
push
add
add
and
adc
bound
push
push
xor
and
push
and
inc
add
add
adc
xor
add
jo
and
add
inc
xor
adc
adc
and
add
add
xor
and
adc
and
add
push
add
inc
jo
adc
add
and
adc
adc
push
jo
and
inc
push
push
and
xor
push
push
jb
push
add
inc
inc
jo
push
push
xor
add
xor
bound
inc
and
adc
and
add
jb
jo
and
jo
add
and
adc
and
inc
inc
jb
jo
xor
and
adc
and
add
add
push
adc
add
and
pusha
and
adc
and
push
bound
jo
add
xor
inc
inc
jo
push
xor
inc
and
and
inc
xor
add
adc
and
xor
add
push
push
and
add
xor
jo
jb
pusha
pusha
push
pusha
add
push
inc
push
jo
and
push
add
add
inc
xor
add
jo
inc
pusha
jo
bound
push
jo
adc
push
inc
xor
jo
add
add
xor
push
add
inc
push
add
inc
add
adc
jb
add
inc
jo
add
add
adc
jo
adc
inc
add
add
adc
adc
pusha
jo
adc
inc
push
add
inc
bound
add
xor
and
push
add
pusha
xor
pusha
and
inc
add
jo
inc
jo
bound
add
add
jb
adc
xor
inc
xor
pusha
stos
and
push
mov
lcall
lret
jl
dec
add
add
scas
or
add
add
mov
mov
shlb
add
gs
scas
xchg
add
add
sub
add
in
lods
loop,pn
cmp
xchg
loopne
inc
xchg
mov
pop
pop
or
push
push
icebp
fildl
and
xor
pop
dec
mov
add
add
cmp
fsubp
push
adcl
daa
mov
nop
xlat
push
int
xchg
inc
add
and
mov
outsb
rcll
xchg
add
subl
daa
jae
fbstp
into
fwait
rol
and
sti
jnp
lret
bound
add
into
bswap
push
inc
lock
popf
jb
inc
test
add
sub
stos
bound
fwait
out
jns
push
sti
sub
mov
repz
pop
movsl
test
xor
into
leave
xchg
repnz
hlt
call
pop
jo
lock
test
pop
popa
and
mov
fisubs
push
xor
lods
push
repnz
ret
or
mov
inc
sub
jne
mull
or
mov
movsb
push
rclb
ja
push
orb
mov
add
jnp
loop
fcompl
pop
add
arpl
mov
push
or
lods
xchg
push
mov
mov
orl
add
inc
js
roll
push
or
add
xlat
stos
xor
iret
cmc
stos
cmp
add
or
pop
sahf
push
add
add
add
add
rol
push
mov
push
loope
pop
pop
fwait
push
gs
inc
add
and
mov
mov
xchg
ss
mov
imul
dec
push
frstor
add
add
lods
test
nop
sub
add
add
arpl
sbb
mov
add
in
mov
jecxz
sti
mov
mov
std
add
sub
mov
test
lods
or
add
add
in
lcall
add
xchg
pop
shll
mov
add
add
stos
call
into
sub
adc
in
pop
xchg
add
add
pop
dec
mov
sbb
mov
les
inc
fsubl
add
add
shlb
push
push
ss
add
subl
pop
insl
pop
jne
push
push
and
add
stos
pop
push
pop
adc
cmp
dec
and
add
add
xlat
cltd
int3
stos
mov
nop
ret
loope
scas
adc
add
adcb
jne
ficoms
xchg
adc
adc
repnz
mov
jg
fldcw
push
mov
inc
sub
in
lcall
into
addr16
mov
sarb
add
add
push
shrb
push
mov
test
rorb
mov
sub
add
add
jb
sbb
cli
dec
add
les
or
mov
and
add
add
add
add
jns
repz
mov
add
add
push
and
add
add
add
movsb
aas
dec
jp
add
add
clc
pop
lret
loopne
add
add
mov
inc
fnstsw
jp
repnz
aas
mov
add
fdivrl
dec
mov
pop
dec
jnp
xchg
add
sbb
lea
dec
add
add
ret
ja
xor
mov
test
mov
xchg
or
mov
push
pop
ja
mov
ret
movsb
ret
bnd
add
add
sub
mov
rcr
xchg
sti
lcall
gs
fwait
xchg
cmp
xor
sbb
sub
cmp
add
add
aaa
and
jp
cmp
insb
add
pop
mov
jbe
cmp
sbb
xchg
add
aaa
pushf
or
and
out
jbe
aam
mov
add
test
add
sti
call
cmc
mov
adc
pop
xor
fidivrl
push
sbb
dec
add
cmpsl
jl
popf
pop
in
clc
lods
jne
outsb
mov
xchg
daa
bnd
lret
imul
mov
lods
incl
rclb
inc
add
add
ret
or
mov
dec
cmp
push
cmp
add
add
cmp
push
loop
add
add
add
in
cltd
or
xlat
sahf
mov
mov
and
add
popf
movsl
mov
add
add
dec
add
popf
cltd
push
fdivl
lock
scas
test
sub
repz
fld
mov
add
jecxz
pop
inc
out
cmp
andl
add
add
in
into
loop
xor
jmp
fmuls
aad
ret
icebp
inc
add
and
sbb
or
xchg
add
push
insb
add
add
push
mov
ffreep
or
ljmp
and
push
lock
enter
jne
sti
mov
add
xlat
jle
psubq
mov
add
add
aaa
int3
add
add
jecxz
pop
and
ret
ja
push
rcl
dec
xor
add
add
dec
add
sarb
cld
or
std
call
add
mov
push
daa
and
push
notb
jp
xchg
push
mov
add
or
xchg
mov
nop
rcl
xchg
inc
movsl
je
dec
imul
sub
lcall
daa
orb
arpl
add
or
test
mov
add
lea
add
add
add
and
xchg
rolb
jne
adc
jge
mov
out
cmpb
inc
add
add
or
bnd
mov
mov
fimull
push
push
lods
adc
inc
stc
cli
test
sub
test
jge
add
pusha
add
add
adc
imul
enter
and
ret
cmc
cmpsb
cmc
push
fistl
add
add
rorb
or
pop
ss
loopne
mov
lahf
xchg
push
adc
jno
inc
sub
add
add
movsl
movsb
pop
call
leave
push
jle
outsl
adc
sar
enter
and
xor
in
sub
jno
movsl
sub
add
jmp
add
and
out
movsb
sbb
sub
iret
xchg
lcall
push
ljmp
add
add
arpl
scas
insb
add
add
call
jmp
sub
dec
mov
addr16
sahf
ret
push
clc
ret
mov
cld
xor
add
add
mov
rcrl
add
adc
bound
loop
mov
sub
xchg
lods
pop
out
add
insl
push
lahf
rorb
add
add
mov
cmp
imul
cwtl
mov
push
mov
nop
xor
cmpsl
fcomps
sbb
push
lea
add
add
std
dec
mov
mov
mov
jl
mov
dec
add
mov
out
outsl
or
je
test
icebp
add
loopne
jne
icebp
pop
rcrb
mov
and
adc
pop
adc
iret
gs
repz
mov
add
inc
iret
mov
leave
cltd
subb
add
add
mov
mov
jle
aas
or
push
pop
pusha
add
xor
mov
or
add
add
jo
and
mov
call
xchg
call
das
enter
add
xor
test
or
add
xor
xchg
mov
sub
add
add
mov
clc
xlat
scas
mov
inc
dec
movsl
inc
add
pop
inc
mov
jg
dec
test
stos
and
fistpl
pop
sbb
add
add
push
test
fsubrp
mov
loop
in
lods
stc
or
xchg
mov
mov
aaa
repz
sub
xchg
mov
andb
add
add
ljmp
daa
loop
mov
mov
adc
imul
cmpsb
cld
addl
xchg
gs
push
mov
add
add
lds
lock
or
mov
inc
das
mov
add
add
add
call
jl
out
sti
jl
pop
loopne
out
mov
mov
outsb
nop
mov
xchg
pop
xor
faddl
shl
jmp
mov
fadd
movsb
jp
sbb
lret
aaa
jns
bnd
dec
test
sbb
push
sbb
xor
ja
mov
xor
add
add
cmp
jno
xchg
sbb
decb
inc
add
add
dec
cli
and
add
add
repz
jl
mov
push
cld
dec
xor
adc
add
add
pop
push
or
mov
push
out
add
add
cmpb
cmp
jmp
lret
jecxz
push
aas
xor
sbb
cmp
cmp
mov
mov
ret
loop
xor
cli
push
mov
mov
or
add
add
mov
lret
adc
mov
add
add
sti
pushf
cmp
int3
mov
dec
cmp
add
add
mov
sub
int
push
adc
xor
adc
xchg
and
mov
mov
movsl
sbb
xor
sbbl
or
or
add
in
push
add
imul
lds
add
mov
pop
divb
ret
pop
movsb
mov
push
xchg
popf
mov
add
jno
mov
insb
add
xchg
pop
sbb
add
dec
add
mov
aam
add
xor
aad
cmpl
call
iret
fnstenv
jmp
daa
sbb
nop
xor
pop
mov
mov
mov
sub
add
add
xchg
push
nop
std
sbb
or
add
add
sbb
pop
std
lea
sub
mov
or
aam
pop
ret
lahf
inc
inc
fidivs
mov
mov
pop
inc
test
sbb
add
mov
add
add
xor
add
packuswb
rcrl
and
fwait
rorl
add
out
das
fisttpl
dec
sub
mov
xor
xchg
jbe
jb
les
fildll
add
add
aaa
push
pop
sbb
mov
push
inc
jp
sub
mov
bound
or
add
dec
push
cmp
add
xchg
xchg
and
loop
and
mov
outsb
lock
popa
sub
dec
add
add
daa
movsb
test
add
fbld
jne
aam
jae
mov
and
cmp
add
lods
xor
xlat
dec
inc
insb
add
add
xchg
fbld
add
pop
mov
outsl
icebp
mov
add
scas
andl
mov
mov
mov
sub
mov
jo
push
push
mov
add
pop
cwtl
stos
andl
and
add
add
sub
add
add
jae
mov
es
addb
addr16
rcrb
icebp
sub
test
les
and
pop
xor
test
pop
inc
insb
add
add
leave
mov
call
and
push
cs
lods
cltd
cltd
in
jae
and
mov
ljmp
aas
cmc
or
add
add
add
add
add
push
fnsave
ds
dec
and
mov
or
es
enter
lds
dec
int
cmovl
add
add
inc
icebp
pmullw
das
nop
mov
add
movsb
aaa
sbb
add
ljmp
jle
mov
std
out
lcall
inc
add
add
out
mov
jle
pop
outsl
aaa
imul
add
ljmp
mov
in
mov
adc
jne
adc
loop
cmp
xor
fadds
ljmp
add
and
or
add
add
pusha
add
add
inc
cmp
pop
ss
pop
xor
js
push
push
das
cltd
xchg
div
and
jae
clc
mov
add
xor
add
xor
sbb
das
push
mov
jl
loop
mov
aam
xchg
xorb
mov
add
and
add
add
popa
adcl
xor
push
pop
divl
pop
popa
pop
ret
iret
xchg
xchg
dec
add
add
lahf
insl
hlt
push
fists
mov
add
jbe
fwait
jecxz
loopne
add
std
out
pop
fcmovnu
push
mov
add
add
add
hlt
ja
sub
mov
mov
nop
push
xchg
into
sbb
shlb
mov
cmp
xchg
push
hlt
xor
adc
ror
ret
jne
sbb
sbb
lods
jne
mov
xor
cwtl
jle
xlat
dec
dec
add
add
in
into
fisttpll
das
push
icebp
aam
add
add
add
push
sti
inc
add
push
and
add
add
shlb
inc
add
push
xlat
dec
cli
in
push
jl
jecxz
orb
add
ds
xchg
mov
mov
popf
or
add
add
or
add
add
inc
xchg
push
repz
mov
nop
cli
movsb
xor
out
push
mov
mov
fcmovnb
sub
add
add
fistpl
mov
add
xchg
aas
ficoms
dec
movsl
je
ljmp
add
add
jp
rcr
mov
add
add
mul
out
in
shrb
add
pop
mov
cmpl
jb
lret
jg
xor
add
rcrb
add
push
or
push
mov
jg
inc
add
add
bound
add
inc
lret
aas
mov
jecxz
pop
pop
sbb
jp
or
int
pop
xor
xor
es
mov
mov
push
push
fwait
popf
lds
scas
cmp
mov
jle
or
popa
xchg
pop
cs
jne
gs
imul
pop
daa
jmp
test
add
andl
inc
jnp
lret
and
mov
cmpl
mov
sub
lods
jnp
xchg
mov
mov
pop
aaa
or
lret
pop
cld
sbb
mov
mov
add
jne
clc
xor
iret
aaa
cmp
add
add
add
mov
aas
lcall
jmp
cs
push
add
fwait
sarl
loope
je
adc
add
add
pop
cmp
fcoml
sbb
or
add
add
repz
mov
enter
or
and
add
xchg
rol
cmp
or
sub
inc
add
insl
mov
mov
jle
out
pusha
add
into
or
loope
nop
inc
add
mov
add
add
pusha
add
push
push
stos
imul
push
xchg
test
sahf
stos
das
imul
inc
xor
jne
lods
leave
dec
cmp
shrl
pop
add
imul
shrl
int
cmp
add
add
inc
push
adc
jb
or
add
add
mov
out
mov
mov
icebp
add
push
jge
lcall
shrb
enter
and
mov
movsb
pop
out
shrl
mov
cld
pop
mov
inc
cmp
aaa
dec
dec
subb
mov
fisttpll
lret
mov
xchg
cwtl
jb
push
loop
fadds
xchg
test
add
jbe
dec
es
rclb
xlat
sub
add
add
repz
imul
mov
or
mov
les
push
sbb
xor
and
mov
test
fimull
cmpl
xchg
enter
adc
push
cli
sbb
and
cld
lods
xor
add
adc
push
icebp
out
cmp
push
repz
xor
cmp
add
add
icebp
fwait
cmp
add
add
add
add
mov
jnp
mov
leave
mov
add
jb
insb
add
or
loope
cmp
in
jl
into
cmp
fldcw
js
cmp
pop
mov
xchg
mov
cmpsb
vmovshdup
xor
sahf
lret
mov
shrb
mov
je
mov
sub
out
xor
mov
add
mov
jle
xor
inc
add
add
jle
mov
cmpsb
xchg
push
mov
pop
inc
add
add
stos
ret
hlt
push
jno,pt
jl
dec
mov
add
add
jmp
shrb
add
mov
adc
mov
sub
add
add
nop
pop
mov
fmul
inc
dec
mov
jle
call
add
inc
and
xorb
add
mov
repz
inc
add
mov
in
xor
ljmp
je
mov
add
mov
mov
jns
xor
xchg
imul
xchg
movsb
insb
add
jle
xchg
scas
xchg
push
pop
or
lea
repz
add
push
dec
add
js
mov
push
cmpsb
dec
push
dec
add
add
mov
mov
push
xor
cmp
rcrl
pop
pop
movsb
push
jg
imul
call
testb
push
mov
outsl
call
jo
das
cld
or
mov
enter
sub
iret
orb
add
dec
and
rcll
call
ds
jl
stc
jno
mov
add
stc
std
inc
xor
out
pop
sbb
jae
pop
jbe
outsb
jno
pushf
jl
jb
sub
lret
fdivrl
jp
cmp
mov
dec
add
add
push
lock
lods
test
or
add
add
add
in
call
mov
jp
add
scas
leave
movsb
fidivrs
inc
add
add
cmp
jp
shlb
push
xchg
pusha
add
mov
add
add
jge
sub
lcall
aas
mov
notb
and
mov
stc
lea
notb
inc
push
leave
stc
pop
ret
push
sub
pushf
or
fnsave
add
add
mov
add
dec
add
cld
jae
and
cwtl
mov
xchg
add
add
in
add
cmp
jne
lea
push
push
mov
push
call
cld
or
mov
shr
shr
mov
add
push
push
push
push
push
call
leave
ret
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
not
inc
sub
mov
clc
je
push
pop
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
push
cld
call
test
je
jmp
add
adc
ds
mov
add
xchg
in
dec
push
out
push
jmp
sub
jb
movsb
or
mov
add
xchg
sbb
add
add
add
add
dec
push
pop
fistps
sti
pop
jmp
add
add
out
and
add
pusha
add
add
fistpll
push
mov
sub
add
add
dec
and
add
add
data16
add
add
nop
pop
mov
jl
mov
out
inc
add
fdivrp
pop
lea
inc
shrl
adc
push
cs
cmp
out
outsb
or
mov
sbb
jne
xor
jnp
add
add
inc
mov
and
sub
push
inc
cmp
add
aam
pop
mov
add
add
add
add
inc
mov
add
add
mov
push
pusha
add
add
xchg
addb
xchg
call
adc
addr16
mov
add
lahf
pop
jge
add
push
mov
lahf
xchg
mov
inc
add
add
add
mov
rcrb
pop
out
cmp
add
sbb
push
adc
mov
iret
aad
add
mov
and
mov
js
incb
mov
movsb
sbb
or
mov
xchg
pop
push
out
test
hlt
imul
dec
pop
rcl
push
fcomi
rdmsr
xchg
shl
jmp
js
aas
out
xchg
icebp
push
xor
out
in
adc
fbstp
and
add
add
add
dec
adc
pushf
inc
inc
es
xor
push
cs
dec
add
mov
mov
and
testb
fistl
out
adc
je
in
push
add
add
mov
int3
pop
lahf
push
jne
out
mov
xchg
or
mov
lret
mov
add
pop
mov
or
add
scas
imul
pop
mov
adc
fwait
data16
add
and
mov
iret
rclb
enter
add
jl
xchg
pop
ds
loop
sahf
iret
dec
pusha
add
push
cmp
sbb
push
jg
xchg
cmp
add
add
add
test
pop
sub
fbstp
fistl
dec
jg
xchg
push
sub
add
add
and
fisttpll
imul
xor
add
leave
int
lahf
and
rol
cmp
add
test
ret
aas
xchg
xchg
jecxz
lock
insb
add
ljmp
add
add
adc
lret
and
add
add
lahf
sbb
and
add
add
ds
scas
xchg
out
imul
filds
push
push
mov
pop
stc
and
inc
add
add
xchg
xchg
std
pop
inc
add
add
mov
mov
fidivl
or
add
add
mov
or
mov
rcr
sbb
add
mov
rcll
push
dec
sub
and
movsb
inc
mov
dec
lret
jp
dec
lock
mov
add
add
mov
aas
out
stc
imul
imul
repz
addr16
test
hlt
or
mov
fcmove
daa
jo
cmp
pop
or
xchg
sahf
test
inc
add
ljmp
jb
xchg
add
jge
add
mov
add
add
dec
call
cwtl
mov
add
add
mov
mov
xchg
stos
outsl
sub
xlat
pop
mov
add
xor
xor
test
js
test
add
add
jbe
mov
cli
fmull
add
push
add
dec
sub
scas
ds
imul
mov
push
addr16
shl
inc
sahf
jns
setno
fwait
inc
add
add
and
in
pop
jnp
mov
test
mov
cmp
xchg
pop
cmp
adcl
add
add
add
out
loope
fwait
inc
movsl
or
mov
mov
dec
sahf
std
test
mov
dec
jmp
add
add
and
mov
add
add
adc
lock
add
es
jno
sbb
xorb
stos
out
mov
adc
add
add
sbb
xlat
cmp
mov
into
repz
inc
mov
repz
cmp
and
aam
jmp
add
adc
incl
hlt
adcb
add
pop
in
leave
ds
sub
add
add
stos
inc
lea
dec
pop
push
cltd
outsl
add
push
xchg
mov
inc
dec
add
add
and
add
add
or
loope
jne
cbtw
lods
push
mov
adc
fcmovne
jmp
popf
mov
add
lret
xchg
sahf
dec
mov
addr16
rorl
fcmovne
sub
cld
xor
test
add
add
mov
push
popf
adc
enter
dec
add
add
int3
add
sbb
push
fcmovnb
cmpsb
xchg
mov
add
cs
add
add
jbe
mov
negl
popf
pop
xchg
sub
mov
add
add
add
mov
push
stos
popl
or
mov
movsl
sub
add
sub
mov
fucompp
inc
fldenv
movsb
adc
inc
pop
out
test
and
add
xlat
jg
xchg
jl
out
xor
and
mov
add
add
popa
outsl
sbb
add
inc
sbb
push
xchg
mov
add
add
push
mov
stos
xor
jbe
andb
push
mov
shrl
dec
loop
push
ja
jb
fadds
sbbb
xor
imul
repnz
cltd
sbb
ret
push
pop
fldl
repz
dec
jne
adc
add
add
daa
mov
inc
nop
cmpl
jne
add
dec
add
add
and
jno
pop
lock
les
popf
test
mov
xchg
mov
iret
jg
inc
aas
adc
or
add
add
fnstsw
pop
loope
xchg
std
sbb
mov
mov
aam
inc
aad
sub
mov
sub
add
add
pop
fidivs
adc
add
mov
insb
add
lret
ja
add
add
add
loopne
push
cwtl
pop
jae
sti
jne
scas
sbb
adc
add
pop
or
add
dec
daa
cmpsl
jge
xchg
mov
pop
or
fisttpl
leave
out
or
lahf
inc
add
add
lods
rol
sub
add
add
sarw
dec
inc
add
add
adc
sbb
cmp
leave
repz
jmp
cld
repz
jo
les
pop
xchg
xchg
push
pop
fildll
mov
shlb
add
add
loope
sub
popf
push
out
xchg
jnp
adc
in
mov
adc
in
jg
in
inc
adc
cmp
js
dec
je
xor
movsl
and
add
add
stos
pop
int3
inc
push
mov
fisubrl
movsb
cltd
test
test
add
add
loope
test
add
pop
inc
add
add
outsb
mov
scas
or
add
add
mov
jnp
pop
cmp
fwait
adc
add
add
add
ret
mov
mov
mov
cltd
and
inc
sbb
inc
sbb
mov
sbb
scas
in
inc
add
dec
xchg
movsl
push
lcall
lods
stos
adc
xor
mov
add
ficomps
das
roll
xchg
lcall
add
test
imul
das
inc
scas
cmp
mov
inc
enter
icebp
lods
add
add
jp
inc
roll
xchg
stc
data16
add
in
inc
scas
mov
pop
mov
mov
inc
or
add
outsl
mov
jle
insb
add
in
sub
add
add
push
cmpsl
inc
popf
add
add
add
leave
fistl
add
add
out
xor
out
movsb
or
lds
push
pusha
add
add
imul
mov
pushf
pop
loop
add
pop
or
inc
add
inc
lret
push
call
sbb
dec
and
mov
loop
xchg
dec
das
dec
cmp
dec
leave
push
stos
dec
stc
shrl
shrl
xchg
jb
popl
add
add
fwait
and
mov
aam
out
dec
lods
lock
push
pop
xor
scas
mov
add
repnz
pop
dec
sbbb
insl
push
dec
xchg
fucom
or
add
add
lods
adc
mov
stos
dec
mov
jmp
mov
mov
les
ret
push
xlat
dec
add
add
fldl
pop
sarb
and
add
add
jle
jae
xchg
pop
mov
mov
fldl2t
imul
daa
shrb
scas
in
dec
lret
mov
cmpsb
fbstp
fmull
add
adc
mov
fdivrs
icebp
addl
pop
sbbl
popa
xchg
jmp
sbb
and
or
xor
mov
add
add
adc
mov
add
sub
mov
rol
pop
sub
add
add
add
xchg
fmulp
addr16
ret
xchg
cmpsb
pop
pop
es
fdivrl
and
mov
cmp
mov
push
leave
and
mov
into
aad
lock
dec
add
rcrl
sub
mov
cmp
std
aad
jmp
push
sbb
int
jnp
add
push
cmp
add
add
dec
ss
test
nop
and
add
mov
pop
cmpb
mov
add
xchg
push
outsl
jp
repnz
push
cmp
js
es
cmp
aad
lret
and
jg
cld
pushf
cs
sbb
pop
fidivl
lahf
sbb
pop
les
mov
cmp
mov
push
idivl
scas
mov
pop
shll
cmp
lret
dec
inc
iret
jl
add
add
stos
or
mov
sbb
cmp
adc
lods
out
add
add
pop
mov
ficoms
outsb
lret
mov
sti
loop
stos
cld
dec
cmc
arpl
add
rorl
add
enter
jno
inc
inc
add
xor
add
dec
pop
adc
inc
add
add
push
and
add
je
stos
loop
xor
pop
in
sub
and
add
mov
icebp
scas
sbb
or
test
stc
mov
mov
add
add
xor
mov
or
mov
mov
aas
cmp
mov
xor
jle
call
add
pop
mov
test
add
add
outsl
loop
sub
cli
jae
jae
cmc
cltd
pop
or
mov
push
enter
add
add
add
add
sub
adc
push
repnz
int
dec
xchg
push
adc
sbbb
xor
gs
je
mull
cld
mov
in
xlat
adc
dec
add
fists
or
mov
add
add
dec
add
and
test
sub
add
add
add
add
push
mov
add
add
lret
xchg
add
imul
push
or
dec
add
add
leave
out
not
pop
jge
outsb
lods
pop
adc
jb
pop
and
add
jbe
imul
xor
ja
push
lods
andl
fcmovne
lods
cmpb
out
adc
mov
je
mov
sub
add
add
mov
ret
daa
fdivrl
daa
sbbl
bound
or
add
add
out
add
push
shlb
dec
scas
jnp
sbb
int3
cmpsb
mov
or
add
mov
stos
and
or
add
mov
mov
bound
sbb
xor
pop
mov
add
mov
ret
xchg
mov
aas
icebp
xor
pop
test
cmp
pop
pushf
push
dec
je
mov
jb
xchg
mov
add
test
cmp
test
add
add
sub
pushl
and
mov
test
sbb
xor
cmp
aam
add
fwait
jnp
push
lahf
ret
movsl
cld
jl
stos
es
push
lcall
and
add
fsubrs
mov
adc
add
add
sbb
cmc
pop
push
scas
mov
add
sbb
movsl
es
fsubs
xchg
adc
lea
push
lock
shlb
jmp
out
add
mov
test
adc
enter
out
iret
mov
mov
dec
xor
add
aad
add
add
jnp
jo
sti
push
cwtl
pop
lock
ds
shlb
pushf
test
fldt
add
mov
xor
in
scas
xor
adc
add
jl
sbb
popf
rol
insl
inc
mov
sub
mov
jno
pop
xchg
gs
loopne
mov
jbe
add
stos
inc
add
sarl
imul
and
mov
test
test
in
je
adc
lcall
mov
xchg
add
pusha
add
add
mov
sbb
jnp
popa
jnp
add
add
and
mov
aas
mov
xor
add
add
mov
leave
jbe
mov
aad
cmp
fstl
xor
add
lret
fiadds
add
add
add
add
mov
mov
pop
and
add
sbb
push
xor
out
xchg
lods
cmp
jae
jl
add
add
nopl
dec
add
add
jp
filds
add
add
clc
repnz
jmp
jae
xlat
mov
and
cmp
clc
repnz
jmp
jae
stos
shll
push
fadds
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
and
mov
clc
repnz
jmp
jae
add
lock
push
fcoms
movzwl
clc
repnz
jmp
jae
add
add
add
add
push
cmp
clc
repnz
jmp
jae
add
xlat
and
hlt
add
add
test
std
push
clc
repnz
jmp
jae
lock
add
dec
add
add
add
repnz
jmp
jae
hlt
inc
or
ret
xor
xchg
clc
repnz
jmp
jae
sbb
mov
add
add
jne
clc
repnz
jmp
jae
in
incl
and
add
add
add
xor
incb
jbe
mov
push
mov
xchg
ret
stos
add
add
add
add
hlt
push
lods
mov
mov
arpl
ss
dec
or
scas
push
add
mov
add
cwtl
jo
sbb
add
in
add
push
push
in
pop
or
jp
dec
add
faddl
jge
jae
add
clc
repnz
jmp
jae
cmp
out
add
test
repnz
jmp
jae
test
mov
add
stc
mov
push
mov
xchg
ret
mov
add
add
dec
add
pop
lea
clc
repnz
jmp
jae
test
add
inc
add
addl
adc
mov
leave
nop
jmp
add
mov
add
push
mov
leave
nop
jmp
add
mov
jno
mov
mov
xchg
ret
movsl
cmpsl
arpl
xor
add
inc
rcll
add
mov
clc
repnz
jmp
jae
cmp
mov
add
pusha
push
mov
xchg
ret
add
add
popf
add
js
sub
sldt
clc
repnz
jmp
jae
mov
push
test
cltd
pop
clc
repnz
jmp
jae
and
js
xor
js
fsubr
add
shr
clc
repnz
jmp
jae
add
cmpsl
movsl
add
push
add
fwait
leave
clc
repnz
jmp
jae
pop
xchg
add
add
jecxz
add
test
pop
clc
repnz
jmp
jae
add
jecxz
mov
add
jno
or
mov
repnz
jmp
jae
add
add
fcmovu
dec
xor
pop
push
mov
xchg
ret
fiaddl
add
cmp
popf
add
ret
add
stc
mov
nop
push
mov
leave
nop
jmp
roll
xor
stos
add
add
sbb
add
repnz
jmp
jae
add
add
add
sbb
add
push
mov
xchg
ret
or
add
pusha
add
lcall
call
nop
jmp
fimull
mov
cld
jmp
jae
add
mov
out
jg
clc
repnz
jmp
jae
test
movsl
sub
dec
adc
and
das
ficompl
je
clc
repnz
jmp
jae
push
sbb
ds
cld
jmp
jae
add
pop
movsl
add
add
test
add
add
add
jge
clc
repnz
jmp
jae
jo
inc
pop
add
stos
jno
in
adc
repnz
jmp
jae
lock
add
mov
add
add
repnz
jmp
jae
movsl
hlt
jo
mov
stos
inc
add
add
fdivs
sbb
add
repnz
jmp
jae
dec
sub
cmp
add
add
leave
push
clc
repnz
jmp
jae
arpl
pop
add
add
addl
std
and
add
and
dec
in
mov
push
mov
xchg
ret
js
add
in
mov
out
mov
clc
repnz
jmp
jae
lock
dec
mov
cmp
mov
imul
add
add
add
add
jo
mov
xchg
inc
add
add
ficoml
shll
add
movsl
mov
pop
inc
add
add
add
add
jmp
jae
das
add
add
add
test
das
add
xlat
call
nop
push
mov
leave
nop
jmp
add
add
add
jno
push
nop
push
mov
leave
nop
jmp
mov
add
add
cmpsl
pop
repnz
add
andl
and
add
add
loope
push
mov
xchg
ret
hlt
add
add
add
add
das
mov
clc
repnz
jmp
jae
add
add
pusha
add
xlat
test
pop
pushl
clc
repnz
jmp
jae
add
add
nop
jno
nop
push
mov
leave
nop
jmp
bnd
add
or
mov
jp
nop
push
mov
leave
nop
jmp
repnz
dec
cmp
test
incl
sti
clc
repnz
jmp
jae
dec
add
cmp
cmp
push
mov
leave
nop
jmp
dec
xor
add
in
add
sbb
repnz
jmp
jae
add
push
add
sub
fiaddl
pop
out
push
push
mov
xchg
ret
dec
sub
pop
add
out
add
add
mov
xchg
ret
ds
xchg
shrl
test
call
nop
push
mov
leave
nop
jmp
mov
dec
add
add
xchg
push
nop
push
mov
leave
nop
jmp
stos
add
mov
pop
adc
add
inc
add
roll
push
mov
leave
nop
jmp
add
add
add
fistpl
clc
repnz
jmp
jae
inc
mov
add
cmp
clc
repnz
jmp
jae
jo
add
sub
add
add
clc
repnz
jmp
jae
add
add
push
add
sub
add
push
mov
xchg
ret
push
repnz
test
repnz
fld1
clc
repnz
jmp
jae
add
add
cmp
movsb
push
mov
xchg
ret
sub
add
add
jne
clc
repnz
jmp
jae
out
xor
lock
add
in
inc
add
out
test
add
movsl
add
arpl
add
add
movl
cld
jmp
jae
add
xchg
add
push
add
add
clc
repnz
jmp
jae
add
inc
mov
add
decl
push
mov
xchg
ret
add
mov
shrl
test
jnp
inc
nop
push
mov
leave
nop
jmp
lock
add
add
add
jno
fucomp
mov
repnz
jmp
jae
add
add
add
add
add
nop
jmp
add
add
lock
popl
clc
repnz
jmp
jae
add
jo
out
xor
add
push
push
mov
xchg
ret
add
sbb
add
add
nop
lods
fistpl
clc
repnz
jmp
jae
jno
add
fadds
add
add
clc
and
add
add
sub
or
add
nop
jmp
add
roll
add
insl
add
clc
repnz
jmp
jae
das
mov
pusha
push
and
clc
repnz
jmp
jae
and
and
add
dec
add
lds
cld
jmp
jae
add
cmp
jecxz
add
clc
repnz
jmp
jae
and
inc
rcl
mov
notl
in
mov
add
add
sub
ret
sbb
cltd
fld1
clc
repnz
jmp
jae
dec
xor
add
add
add
repnz
jmp
jae
movsl
mov
dec
jnp
add
hlt
subl
leave
nop
jmp
jno
repnz
stos
add
add
add
inc
push
mov
xchg
ret
dec
xorl
das
mov
fsubrs
nop
push
mov
leave
nop
jmp
movsl
mov
push
add
dec
fidivl
or
nop
push
mov
leave
nop
jmp
inc
roll
add
add
clc
clc
repnz
jmp
jae
add
add
push
cmpsl
add
pop
add
clc
repnz
jmp
jae
mov
adc
cld
jmp
jae
test
push
addl
add
add
cmp
jae
add
nop
push
mov
leave
nop
jmp
repnz
test
mov
orl
arpl
add
clc
repnz
jmp
jae
and
add
jno
cmpsl
mov
nop
push
mov
leave
nop
jmp
add
jecxz
sub
pusha
mov
clc
repnz
jmp
jae
add
test
ret
add
add
fwait
push
mov
xchg
ret
mov
add
add
out
add
push
pusha
add
cmp
nop
push
mov
leave
nop
jmp
add
add
das
add
call
add
add
add
jnp
adc
add
and
insb
add
xorl
add
clc
repnz
jmp
jae
push
add
roll
push
inc
add
push
xlat
add
add
add
add
addl
add
xor
and
add
push
xlat
mov
inc
push
mov
xchg
ret
add
add
add
add
lret
push
push
mov
xchg
ret
push
test
fisubl
arpl
add
add
dec
xor
xchg
test
sldt
clc
repnz
jmp
jae
add
add
add
add
repnz
jmp
jae
mov
fsubs
jo
add
clc
repnz
jmp
jae
add
sbb
add
test
mov
and
pop
sub
repnz
jmp
jae
jnp
in
xor
push
jmp
add
jecxz
dec
add
xchg
add
roll
add
test
add
repnz
jmp
jae
movsl
add
dec
mov
add
adc
push
inc
add
mov
fcomps
mov
clc
repnz
jmp
jae
ret
adc
jo
adc
add
jno
add
adc
add
js
test
inc
add
les
cmp
cld
jmp
jae
mov
fdivs
rcr
cmp
cmpsl
insb
inc
add
popf
js
add
and
in
pop
clc
repnz
jmp
jae
mov
jo
jnp
lock
decl
jmp
jae
add
mov
scas
xchg
push
mov
xchg
ret
and
movsl
xorl
xchg
lret
xor
push
mov
xchg
ret
test
add
push
add
hlt
add
add
add
dec
cmp
repnz
jmp
jae
xor
mov
add
mov
push
clc
repnz
jmp
jae
test
add
add
das
add
cmp
xor
clc
repnz
jmp
jae
add
add
add
add
mov
push
mov
xchg
ret
add
add
add
mov
rorl
repnz
jmp
jae
add
test
test
add
add
ret
es
nop
push
mov
leave
nop
jmp
add
test
push
add
xor
clc
repnz
jmp
jae
roll
jo
xor
add
add
xor
pop
clc
repnz
jmp
jae
dec
push
mov
in
add
fisubrl
push
mov
leave
nop
jmp
repnz
push
add
push
add
sub
jmp
jae
cmp
add
repnz
repnz
sahf
jmp
jle
clc
repnz
jmp
jae
add
fiaddl
add
mov
add
dec
mov
repnz
jmp
jae
incl
add
add
das
add
add
mov
push
mov
xchg
ret
xor
add
pop
in
and
add
adc
inc
lods
push
dec
push
clc
repnz
jmp
jae
and
add
add
adc
push
sub
nop
jmp
add
jno
adc
add
test
push
mov
leave
nop
jmp
cmp
dec
dec
test
push
repnz
cld
jmp
jae
add
inc
add
push
add
nop
stc
call
clc
repnz
jmp
jae
ds
add
add
clc
repnz
jmp
jae
lock
dec
add
add
add
repnz
jmp
jae
in
jno
cmp
out
js
add
clc
repnz
jmp
jae
out
fcomp
adc
mov
adcb
nop
push
mov
leave
nop
jmp
add
stos
add
push
push
mov
xchg
ret
test
add
add
add
hlt
mov
push
decl
test
repnz
jmp
jae
out
add
add
stos
add
add
add
mov
clc
repnz
jmp
jae
add
add
mov
repnz
jmp
jae
add
test
add
or
mov
arpl
nop
push
mov
leave
nop
jmp
dec
pop
lock
add
xchg
xchg
mov
clc
repnz
jmp
jae
add
add
lock
stos
mov
roll
mov
xchg
ret
add
mov
test
and
test
cmp
mov
leave
nop
jmp
js
add
dec
add
inc
add
mov
push
mov
xchg
ret
stos
test
add
pusha
add
add
xor
cld
jmp
jae
ret
pop
add
add
add
mov
fld1
clc
repnz
jmp
jae
out
pop
add
add
add
pop
clc
repnz
jmp
jae
add
mov
push
and
ret
cmp
add
adc
sub
scas
enter
jmp
jae
test
mov
rcl
movsl
enter
inc
and
repnz
jmp
jae
add
fiaddl
out
out
addl
xor
pop
push
mov
xchg
ret
add
mov
add
add
cmp
mov
clc
repnz
jmp
jae
and
add
add
nop
push
mov
leave
nop
jmp
sbb
cmp
xlat
rcl
xor
add
cmpsl
in
lods
push
clc
repnz
jmp
jae
jo
add
add
ret
add
add
clc
repnz
jmp
jae
xor
mov
add
clc
repnz
jmp
jae
add
add
test
add
xor
stos
mov
pop
bound
xchg
ret
sub
inc
add
mov
test
add
add
sar
cld
jmp
jae
add
fidivrl
add
arpl
xor
nop
push
mov
leave
nop
jmp
dec
and
add
stos
movsb
hlt
fisubl
repnz
jmp
jae
inc
cmp
jnp
add
jno
icebp
add
clc
repnz
jmp
jae
xor
add
test
mov
push
mov
xchg
ret
test
add
mov
add
jo
ret
add
jmp
clc
repnz
jmp
jae
push
add
sbb
or
cmpsl
add
inc
popaw
pop
push
mov
xchg
ret
dec
push
mov
xlat
add
ret
mov
or
add
add
xchg
call
jmp
jae
and
sub
mov
lock
dec
add
outsl
jne
clc
repnz
jmp
jae
xor
add
jle
mov
clc
repnz
jmp
jae
hlt
addl
repnz
stos
js
js
sub
mov
xchg
ret
mov
add
add
call
nop
jmp
add
cmp
add
add
imul
cmp
ret
lock
out
lock
add
add
movsl
mov
mov
xchg
ret
das
jecxz
add
add
xchg
cs
mov
adc
repnz
jmp
jae
in
in
add
out
add
push
sbb
in
add
sub
add
push
shrb
psllw
movsl
mov
clc
repnz
jmp
jae
add
fiaddl
mov
mov
nop
push
mov
leave
nop
jmp
cmp
hlt
add
sbb
lcall
mov
leave
nop
jmp
cmp
roll
add
cld
jmp
jae
add
add
add
jo
add
mov
roll
cld
jmp
jae
add
add
pop
add
mov
inc
add
add
add
fiaddl
jo
test
xchg
mov
clc
repnz
jmp
jae
add
add
add
add
add
pop
clc
repnz
jmp
jae
out
mov
mov
js
in
popa
pusha
push
mov
xchg
ret
xlat
xchg
jecxz
fcmovu
stos
add
hlt
add
add
cld
jmp
jae
stos
add
add
add
jo
jo
and
cli
mov
mov
push
mov
leave
nop
jmp
pop
add
mov
add
add
mov
test
orb
loop
cmp
cmp
add
loop
adc
push
mov
xchg
ret
add
add
add
add
push
mov
mov
jge
roll
xor
mov
push
lea
push
mov
xchg
ret
addl
add
adc
add
add
xor
and
push
push
mov
xchg
ret
add
sub
test
popf
add
add
jno
mov
sub
call
add
andl
add
add
test
add
nop
push
mov
leave
nop
jmp
add
push
add
test
mov
popf
pop
inc
add
jo
in
add
mov
add
add
cmpsb
sub
mov
sbb
push
mov
xchg
ret
add
add
add
sub
mov
xchg
ret
jno
mov
add
jo
pop
nop
push
mov
leave
nop
jmp
add
add
add
add
mov
iret
or
add
cmpl
add
add
add
popf
shll
xor
in
imul
outsb
add
add
add
add
add
clc
repnz
jmp
jae
add
add
loop
clc
repnz
jmp
jae
add
cmp
add
mov
add
xor
adcl
repnz
jmp
jae
adc
into
in
rclb
nop
jmp
add
add
add
test
test
push
mov
xchg
ret
jno
lock
add
add
add
pop
clc
repnz
jmp
jae
add
add
pop
push
add
clc
repnz
jmp
jae
subl
roll
cmp
cld
jmp
jae
add
add
lock
repnz
mov
sbb
push
mov
xchg
ret
add
add
hlt
mov
sub
add
sub
add
add
repnz
jmp
jae
add
add
add
hlt
add
outsl
mov
clc
repnz
jmp
jae
add
add
add
ja
nop
push
mov
leave
nop
jmp
mov
or
add
pusha
add
or
add
add
popa
add
push
mov
xchg
ret
add
test
fcmovbe
xchg
push
add
add
add
lret
mov
adc
push
mov
leave
nop
jmp
add
mov
add
push
add
add
clc
repnz
jmp
jae
ret
add
movsl
test
mov
inc
add
clc
repnz
jmp
jae
add
incl
test
popf
add
add
jae
clc
repnz
jmp
jae
andl
jnp
add
push
add
pop
nop
push
mov
leave
nop
jmp
mov
add
or
adc
cs
sbb
add
orl
xorl
add
lea
push
mov
leave
nop
jmp
mov
add
pusha
add
lock
add
mov
xchg
ret
sbb
jo
dec
in
das
add
jle
add
nop
jmp
add
add
add
mov
clc
repnz
jmp
jae
add
test
test
add
enter
mov
clc
repnz
jmp
jae
add
add
add
mov
push
pop
clc
repnz
jmp
jae
add
inc
out
das
pusha
sbb
fadds
loopne
call
clc
repnz
jmp
jae
add
cmp
mov
jmp
jae
out
mov
add
inc
and
push
mov
xchg
ret
add
cmp
lret
push
mov
xchg
ret
add
fiaddl
add
test
add
add
add
mov
push
mov
xchg
ret
arpl
and
movsl
add
inc
mov
add
std
inc
add
add
add
js
add
pusha
movsl
mov
xchg
js
test
xor
push
mov
xchg
ret
lock
add
add
add
xor
add
xchg
push
push
mov
xchg
ret
mov
stos
dec
xor
mov
push
clc
repnz
jmp
jae
cmp
add
add
add
jmp
jae
movsl
addl
lock
add
add
inc
dec
dec
mov
clc
repnz
jmp
jae
add
js
add
hlt
jnp
mov
mov
cmovne
sub
add
add
add
imull
test
xchg
ret
test
push
stos
lock
stos
mov
rclb
cmp
cmp
ret
add
pop
add
movsl
add
or
ficoml
add
sub
push
roll
repnz
jmp
jae
lock
cmp
stos
cmp
inc
sbb
adc
inc
add
add
add
fiaddl
mov
sub
add
add
add
add
dec
mov
repnz
jmp
jae
add
in
adc
mov
add
push
adc
mov
push
mov
xchg
ret
add
add
add
jo
fld1
clc
repnz
jmp
jae
add
jecxz
in
add
add
in
sbb
jmp
jae
add
add
cmp
add
add
repnz
jmp
jae
xlat
add
fsubrs
mov
clc
repnz
jmp
jae
dec
jnp
pop
add
add
call
push
mov
leave
nop
jmp
lock
push
add
or
addl
ret
add
push
mov
xchg
ret
test
add
dec
add
add
flds
in
leave
nop
jmp
cmp
add
mov
test
jnp
nop
push
mov
leave
nop
jmp
add
or
test
add
and
mov
xchg
ret
jecxz
add
add
push
push
xor
mov
push
mov
xchg
ret
fisubrl
repnz
push
mov
xchg
ret
add
pop
add
or
in
add
fsubr
repnz
sub
cld
jmp
jae
add
add
arpl
add
add
sarb
popa
clc
repnz
jmp
jae
add
add
add
xchg
add
add
nop
push
mov
leave
nop
jmp
add
dec
pushl
cmc
add
clc
repnz
jmp
jae
das
add
popf
fisubl
clc
repnz
jmp
jae
dec
jnp
mov
repnz
add
lock
pushl
clc
repnz
jmp
jae
add
add
add
add
mov
push
mov
xchg
ret
test
add
add
push
add
nop
push
mov
leave
nop
jmp
mov
add
add
fnstenv
clc
repnz
jmp
jae
fiaddl
add
dec
nop
push
mov
leave
nop
jmp
dec
jno
fiaddl
and
add
pop
push
inc
lcall
inc
add
add
add
ret
xor
clc
repnz
jmp
jae
movsl
lock
add
cmp
out
jb
push
mov
xchg
ret
add
push
add
add
enter
repnz
jmp
jae
arpl
cmp
test
add
fld1
clc
repnz
jmp
jae
add
add
add
cmp
in
add
mov
nop
push
mov
leave
nop
jmp
repnz
lock
lock
repnz
jmp
jae
jno
das
popf
add
in
push
stos
add
in
add
pop
dec
jns
sbb
nop
dec
push
add
in
stc
add
fwait
clc
repnz
jmp
jae
add
xlat
add
dec
add
add
xor
adc
jle
jb
nop
push
mov
leave
nop
jmp
jnp
add
pushl
icebp
pop
push
mov
xchg
ret
push
ficoml
out
add
xor
fcoms
mov
mov
add
ds
popf
sub
cmp
cmp
add
add
jmp
jae
add
mov
pusha
dec
and
add
clc
clc
repnz
jmp
jae
add
add
add
in
addl
mov
mov
push
mov
xchg
ret
arpl
hlt
jecxz
fidivl
pop
out
roll
inc
fistpl
push
mov
xchg
ret
add
push
sbb
roll
add
add
add
clc
repnz
jmp
jae
add
fsubs
lock
or
add
add
repnz
jmp
jae
sbb
add
cmpsl
lock
adc
scas
nop
push
mov
leave
nop
jmp
adc
add
xor
js
mov
add
les
push
mov
xchg
ret
stos
out
pop
jo
hlt
fidivrl
and
sbb
repnz
jmp
jae
fdiv
sbb
push
xor
mov
pop
xchg
call
clc
repnz
jmp
jae
push
mov
push
mov
push
push
mov
xchg
ret
popf
in
xchg
add
or
add
in
leave
nop
jmp
test
push
add
add
jnp
add
sbb
push
mov
xchg
ret
add
jecxz
jo
mov
movsb
adc
add
nop
jmp
add
xor
arpl
imul
inc
add
test
repnz
add
push
in
popl
jne
clc
repnz
jmp
jae
lock
stos
das
add
push
cmp
nop
push
mov
leave
nop
jmp
sub
arpl
inc
fdiv
addr16
clc
repnz
jmp
jae
add
fiaddl
adc
xor
lea
jmp
jae
or
adc
stos
add
add
cmp
mov
xchg
ret
popf
test
add
and
lock
dec
mov
adc
nop
jmp
hlt
repnz
dec
add
add
sub
add
add
push
mov
leave
nop
jmp
out
repnz
adc
add
add
xchg
repnz
jmp
jae
js
hlt
add
add
push
add
clc
repnz
jmp
jae
fiaddl
test
xlat
add
add
add
add
add
pop
cmp
push
mov
leave
nop
jmp
adc
add
add
pop
add
clc
repnz
jmp
jae
ds
jno
clc
mov
ret
clc
repnz
jmp
jae
add
add
fcmovu
jnp
push
xor
in
leave
nop
jmp
add
add
hlt
add
mov
xor
adcl
push
mov
xchg
ret
dec
add
add
test
popf
add
lock
mov
push
mov
xchg
ret
popf
test
ret
xor
mov
push
js
sub
stc
nop
push
mov
leave
nop
jmp
add
popf
add
add
popf
rep
push
mov
xchg
ret
movsl
ret
mov
jecxz
rcll
push
fld
call
jmp
jae
js
add
subl
sub
push
mov
xchg
ret
stos
add
add
test
push
add
mov
push
mov
xchg
ret
pop
mov
add
in
xor
and
mov
cmpl
repnz
jmp
jae
lock
add
add
xlat
movsl
arpl
jo,pt
clc
call
repnz
jmp
jae
add
pusha
add
xchg
cmp
push
subl
ret
dec
dec
push
add
mov
or
xor
clc
repnz
jmp
jae
add
jnp
js
popf
pop
iret
pop
push
mov
xchg
ret
rcl
add
add
test
add
mov
jmp
out
add
xor
dec
add
fiaddl
add
add
nop
push
mov
leave
nop
jmp
mov
add
cmp
add
cld
jmp
jae
das
add
add
pusha
add
test
inc
cmpl
nop
push
mov
leave
nop
jmp
add
add
mov
jb
imul
jmp
inc
jnp
add
add
mov
div
clc
repnz
jmp
jae
jno
test
push
add
adc
add
mov
clc
repnz
jmp
jae
add
test
dec
roll
ret
mov
fistpl
push
mov
xchg
ret
cmp
cmp
add
xchg
mov
push
clc
repnz
jmp
jae
add
add
or
mov
in
leave
nop
jmp
test
add
add
pop
add
popf
add
inc
and
nop
push
mov
leave
nop
jmp
add
jnp
das
add
mov
clc
repnz
jmp
jae
push
test
jecxz
add
mov
repnz
jmp
jae
add
add
inc
cmp
pop
lea
clc
repnz
jmp
jae
mov
dec
add
int
repz
mov
xchg
ret
incl
add
inc
add
add
clc
repnz
jmp
jae
add
jno
add
nop
push
mov
leave
nop
jmp
and
add
add
add
add
sbb
cld
jmp
jae
test
mov
add
popa
lea
clc
repnz
jmp
jae
test
in
add
add
add
aam
aas
mov
push
mov
xchg
ret
add
cmp
in
addl
jmp
jae
ret
add
and
testl
cmp
jmp
add
jbe
xchg
lods
clc
repnz
jmp
jae
ret
add
add
mov
repnz
cld
jmp
jae
add
fimull
cmpsl
movsl
add
test
aaa
mov
clc
repnz
jmp
jae
add
add
xlat
sub
or
mov
push
mov
xchg
ret
test
in
add
add
cmp
je
clc
repnz
jmp
jae
inc
in
lock
add
addb
add
repnz
jmp
jae
sarl
mov
add
clc
repnz
jmp
jae
add
cmpsl
ds
hlt
xor
mov
clc
repnz
jmp
jae
add
add
add
push
das
add
push
mov
xchg
ret
add
add
add
test
jl
pushf
xor
cld
jmp
jae
add
repnz
add
add
add
add
and
add
add
push
mov
leave
nop
jmp
hlt
popf
fsubrs
test
repnz
push
push
mov
xchg
ret
add
add
add
add
add
shl
nop
push
mov
leave
nop
jmp
add
jno
jno,pt
inc
jo
rep
clc
repnz
jmp
jae
test
add
add
mov
mov
add
clc
repnz
jmp
jae
lock
add
sub
jo
jne
clc
repnz
jmp
jae
hlt
incl
jno
add
and
repnz
jmp
jae
lock
add
add
in
add
add
repnz
jmp
jae
js
addl
sbb
fisubl
add
clc
repnz
jmp
jae
test
add
add
add
dec
lock
rcll
jmp
jae
add
popf
add
add
add
sub
clc
repnz
jmp
jae
inc
add
mov
sub
shll
push
mov
xchg
ret
add
mov
mov
pusha
add
icebp
hlt
incl
inc
add
das
add
add
add
add
clc
repnz
jmp
jae
arpl
call
or
cmpl
add
jg
nop
push
mov
leave
nop
jmp
js
add
add
xchg
dec
push
clc
repnz
jmp
jae
xor
sub
movsl
dec
add
popf
add
inc
push
jmp
add
add
mov
pusha
pusha
sub
push
mov
leave
nop
jmp
fiaddl
add
in
adc
pop
hlt
inc
adc
or
inc
add
add
add
add
and
push
mov
add
add
daa
add
or
jno
add
inc
add
push
add
clc
repnz
jmp
jae
add
add
xor
add
adc
push
mov
leave
nop
jmp
pusha
pushl
mov
add
pop
add
clc
repnz
jmp
jae
sub
add
ret
add
add
fadds
inc
je
clc
repnz
jmp
jae
xor
or
mov
push
mov
xchg
ret
add
add
add
pop
inc
add
add
add
sbb
adc
ds
hlt
incl
jge
clc
repnz
jmp
jae
mov
add
add
add
push
je
nop
push
mov
leave
nop
jmp
add
add
xor
nop
push
mov
leave
nop
jmp
arpl
mov
sub
add
add
mov
clc
repnz
jmp
jae
add
in
xor
add
andl
jmp
jae
add
add
xor
nop
push
mov
leave
nop
jmp
add
inc
popf
movsl
adc
test
inc
stos
clc
repnz
jmp
jae
pusha
add
add
add
add
fistpl
clc
repnz
jmp
jae
add
dec
add
ds
add
add
mov
imul
add
add
insb
stos
add
es
push
push
mov
xchg
ret
xor
mov
add
add
and
mov
jmp
jae
add
add
test
add
add
add
imul
add
andl
add
mov
add
cmp
in
leave
nop
jmp
fidivrl
out
cmpsl
stos
mov
pusha
daa
rep
clc
repnz
jmp
jae
and
adc
das
shlb
push
push
mov
xchg
ret
add
mov
mov
add
add
incl
test
fwait
push
mov
xchg
ret
sub
add
cmp
popf
enter
mov
xchg
ret
add
add
add
testl
clc
repnz
jmp
jae
inc
add
das
lock
call
add
xor
incl
add
add
add
push
loopne
repnz
jmp
jae
hlt
add
mov
push
sub
jne
clc
repnz
jmp
jae
and
in
add
pop
xor
push
mov
xchg
ret
add
das
adc
jo
mov
add
sub
mov
jg
add
insb
nop
push
mov
leave
nop
jmp
add
xor
add
push
inc
add
add
mov
repnz
jmp
jae
add
jecxz
add
stos
rcrl
inc
add
xchg
add
add
add
add
test
inc
mov
clc
repnz
jmp
jae
lock
add
mov
mov
clc
repnz
jmp
jae
test
repnz
arpl
test
add
decl
repnz
jmp
jae
fiaddl
add
test
mov
leave
nop
jmp
add
mov
add
repnz
or
nop
push
mov
leave
nop
jmp
xchg
add
arpl
fisubrl
in
or
add
icebp
add
add
gs
inc
leave
cmp
nop
push
mov
leave
nop
jmp
add
fadds
add
rcrl
mov
leave
nop
jmp
inc
test
add
xor
add
call
nop
push
mov
leave
nop
jmp
pusha
mov
add
jmp
inc
push
add
dec
jo
add
out
lock
push
jns
repz
mov
xchg
ret
add
add
inc
add
std
mov
clc
repnz
jmp
jae
add
fiaddl
ds
dec
jb
push
clc
repnz
jmp
jae
add
add
repnz
lock
div
nop
push
mov
leave
nop
jmp
add
test
fidivrl
mov
loope
rclb
jmp
xor
add
add
in
mov
test
clc
repnz
jmp
jae
test
add
mov
nop
push
mov
leave
nop
jmp
add
or
dec
add
add
add
ret
imul
clc
repnz
jmp
jae
and
add
jnp
mov
mov
aas
inc
add
mov
dec
add
add
popf
add
push
mov
clc
repnz
jmp
jae
add
add
addl
out
jmp
gs
repnz
jmp
jae
add
mov
addb
movb
pop
jg
add
add
xor
ret
test
out
add
mov
add
add
add
push
mov
xchg
ret
jno
and
js
add
mov
xchg
ret
jo
mov
mov
mov
add
add
xchg
xchg
push
clc
repnz
jmp
jae
ret
inc
add
hlt
and
mov
add
jg
clc
repnz
jmp
jae
mov
mov
ret
movzwl
clc
repnz
jmp
jae
add
pusha
push
add
test
repnz
clc
repnz
jmp
jae
add
add
test
test
arpl
xor
adc
add
add
dec
add
test
add
push
add
jnp
inc
lock
repnz
jmp
jae
add
mov
add
sbb
in
leave
nop
jmp
jo
add
mov
add
push
nop
push
mov
leave
nop
jmp
mov
lock
test
add
add
cld
jmp
jae
add
bnd
movsl
add
and
loopne
nop
push
mov
leave
nop
jmp
add
add
add
cld
jmp
jae
in
add
add
add
nop
inc
add
in
popf
hlt
dec
cmp
test
add
clc
nop
push
mov
leave
nop
jmp
add
sub
ds
mov
daa
add
clc
repnz
jmp
jae
add
add
lea
clc
repnz
jmp
jae
xor
add
fadds
and
add
test
jmp
jae
add
arpl
mov
add
or
add
add
push
notb
jmp
jae
lock
mov
add
inc
out
call
push
mov
xchg
ret
mov
inc
and
mov
add
add
xor
clc
repnz
jmp
jae
add
add
lods
push
clc
repnz
jmp
jae
jo
add
add
cmp
xor
push
add
nop
push
mov
leave
nop
jmp
add
add
mov
cs
clc
repnz
jmp
jae
add
xlat
jno
and
mov
mov
push
mov
xchg
ret
jo
add
mov
mov
js
add
fld1
push
mov
xchg
ret
add
add
mov
mov
daa
mov
push
mov
xchg
ret
jnp
fdivrs
add
add
mov
xchg
ret
stos
js
incl
ret
sub
add
adc
inc
clc
repnz
jmp
jae
add
add
add
cmpsl
push
lock
add
nop
push
mov
leave
nop
jmp
add
dec
test
sbb
movsl
clc
repnz
jmp
jae
add
popf
add
add
clc
repnz
jmp
jae
in
xor
push
add
addl
jmp
jae
add
ret
add
add
test
add
add
je
clc
repnz
jmp
jae
movsl
fiaddl
add
out
add
repnz
jmp
jae
stos
add
mov
add
add
pop
mov
nop
push
mov
leave
nop
jmp
fidivrl
add
xor
add
lea
mov
mov
leave
nop
jmp
add
test
inc
lock
call
nop
jmp
add
add
add
aas
mov
clc
repnz
jmp
jae
dec
test
jno
add
add
arpl
fwait
imul
cmp
ret
test
add
jo
jo
mov
add
clc
repnz
jmp
jae
mov
pop
or
lock
xlat
inc
fistpl
push
mov
xchg
ret
arpl
addl
add
and
pop
mov
push
mov
xchg
ret
test
add
dec
add
add
add
mov
nop
push
mov
leave
nop
jmp
in
add
mov
jo
push
pop
cmpw
nop
push
mov
leave
nop
jmp
push
xor
addl
add
mov
push
clc
repnz
jmp
jae
jo
add
test
xor
add
push
mov
xchg
ret
out
add
add
test
add
add
int3
loopne
loop
pop
clc
repnz
jmp
jae
lock
pop
xlat
mov
arpl
mov
clc
repnz
jmp
jae
add
mov
dec
inc
sub
mov
clc
repnz
jmp
jae
add
sbb
or
push
add
xor
clc
repnz
jmp
jae
movsl
xlat
add
add
sbb
jmp
jae
add
add
add
imul
clc
repnz
jmp
jae
add
jno
and
repnz
jmp
jae
add
ret
jo
add
xlat
pop
or
mov
jne
clc
repnz
jmp
jae
ds
add
lret
mov
leave
nop
jmp
inc
jno
hlt
adc
in
push
mov
push
and
call
nop
jmp
jecxz
add
jnp
in
pop
mov
clc
repnz
jmp
jae
sub
add
add
in
xor
mov
sub
repnz
jmp
jae
sbb
jno
add
mov
push
mov
xchg
ret
add
in
add
add
add
add
or
mov
push
mov
xchg
ret
add
add
dec
dec
add
xchg
add
add
sbb
inc
add
xor
mov
movsl
and
clc
repnz
jmp
jae
arpl
add
adc
add
pusha
sub
clc
repnz
jmp
jae
in
add
fiaddl
das
fadds
add
cmpsl
lahf
push
clc
repnz
jmp
jae
add
popf
test
jo
add
clc
repnz
jmp
jae
add
add
jnp
cmp
cld
jmp
jae
in
add
add
add
add
ljmp
sbb
repnz
jmp
jae
pusha
jnp
repnz
add
xlat
inc
lods
clc
repnz
jmp
jae
out
add
add
push
add
sbb
clc
repnz
jmp
jae
cmp
test
test
stos
shll
add
push
mov
xchg
ret
jnp
add
dec
add
add
cmp
in
add
add
nop
push
mov
leave
nop
jmp
fiaddl
jno
add
lock
cld
jmp
jae
mov
add
mov
nop
push
mov
leave
nop
jmp
test
lock
add
sub
add
and
jmp
add
test
arpl
add
add
add
and
cmp
jno
clc
repnz
jmp
jae
add
in
add
add
push
mov
leave
nop
jmp
xlat
inc
add
xlat
mov
jp
push
push
mov
xchg
ret
in
add
add
add
add
xlat
push
jnp
jb
nop
push
mov
leave
nop
jmp
adc
sub
add
add
in
leave
nop
jmp
add
lock
push
out
add
or
add
add
add
jmp
jae
add
mov
test
mov
push
inc
push
push
mov
xchg
ret
mov
add
adc
and
add
scas
sbb
add
rclb
jmp
arpl
add
fcom
or
pop
rol
clc
repnz
jmp
jae
inc
test
add
test
in
add
pop
test
cmp
push
mov
leave
nop
jmp
add
test
add
stos
mov
inc
inc
cmc
pusha
push
mov
xchg
ret
out
add
add
add
mov
enter
push
mov
xchg
ret
xlat
add
test
add
add
or
mov
add
repnz
jmp
jae
xlat
add
add
movsl
add
sarl
cld
nop
push
mov
leave
nop
jmp
cmpsl
shll
add
cmpsl
add
fdivs
cld
push
add
clc
repnz
jmp
jae
add
hlt
lock
add
add
stc
clc
repnz
jmp
jae
js
movsl
add
and
pop
push
mov
xchg
ret
add
repnz
cmpsl
cmp
nop
push
mov
leave
nop
jmp
mov
jno
in
stos
cmp
jmp
add
cmpl
jmp
test
cmp
out
add
imul
jmp
fidivl
add
add
and
in
leave
nop
jmp
mov
add
sbb
fiaddl
add
add
not
clc
repnz
jmp
jae
add
fdiv
add
and
fsubs
add
add
pop
add
clc
repnz
jmp
jae
mov
mov
out
test
push
inc
xchg
fld1
clc
repnz
jmp
jae
ret
add
stos
add
pop
adc
in
mov
mov
and
push
mov
xchg
ret
add
add
add
push
add
xor
fwait
clc
repnz
jmp
jae
hlt
popf
add
xor
inc
add
xor
clc
repnz
jmp
jae
add
add
jo
add
jmp
cmp
add
xor
add
fiaddl
test
dec
add
add
add
mov
dec
push
mov
add
mov
into
add
lret
add
mov
jmp
jmp
jae
add
pop
add
add
add
lock
cld
jmp
jae
xlat
mov
add
cmpsl
add
js
push
and
clc
repnz
jmp
jae
add
add
cmpsl
test
push
xchg
fwait
push
mov
xchg
ret
add
xlat
inc
add
inc
add
test
jnp
and
jge
clc
repnz
jmp
jae
mov
add
add
add
stos
clc
repnz
jmp
jae
add
and
add
add
mov
xchg
ret
fiaddl
add
cmp
sbb
ret
add
sbb
repnz
jmp
jae
add
add
add
add
add
clc
repnz
jmp
jae
push
sub
push
lock
in
and
add
add
sub
clc
repnz
jmp
jae
or
arpl
push
fimull
aaa
mov
clc
repnz
jmp
jae
add
add
add
lea
clc
repnz
jmp
jae
add
add
add
inc
xchg
xchg
ret
cmp
add
lock
fidivrl
lock
add
add
add
add
in
add
and
add
add
repnz
add
test
add
in
movzwl
clc
repnz
jmp
jae
inc
add
push
add
mov
add
add
add
inc
push
clc
repnz
jmp
jae
mov
and
add
out
inc
mov
clc
repnz
jmp
jae
add
add
add
add
add
pop
clc
repnz
jmp
jae
dec
push
add
js
in
mov
xlat
add
call
cld
jmp
jae
inc
add
xor
add
js
mov
fs
repnz
jmp
jae
or
add
dec
push
data16
xchg
jp
jne
nop
push
mov
leave
nop
jmp
add
rorl
mov
add
add
loop
push
mov
xchg
ret
hlt
dec
test
add
or
add
add
add
es
and
clc
repnz
jmp
jae
lock
addl
cmpsl
push
in
cmp
enter
or
repnz
jmp
jae
add
dec
push
add
add
enter
jmp
jae
add
add
add
inc
addl
xlat
out
adc
jmp
jae
add
add
add
jnp
arpl
add
add
add
push
mov
xchg
ret
add
add
push
ds
add
or
add
add
cmp
add
js
popf
add
add
add
fisubrl
mov
stos
clc
repnz
jmp
jae
add
ficoml
pusha
lock
hlt
aam
add
iretw
fistpl
push
mov
xchg
ret
add
add
fiaddl
test
add
nop
push
mov
leave
nop
jmp
mov
and
jle
cltd
add
clc
repnz
jmp
jae
add
out
mov
add
mov
clc
repnz
jmp
jae
incl
add
hlt
add
adc
push
xor
mov
clc
repnz
jmp
jae
test
cmpsl
xorl
fisttpl
in
leave
nop
jmp
and
jo
add
jecxz
hlt
jecxz
adc
call
jmp
jae
add
push
add
out
not
nop
push
mov
leave
nop
jmp
lock
lock
adc
add
add
nop
jmp
nop
push
mov
leave
nop
jmp
add
add
add
add
dec
inc
add
add
pop
dec
nop
push
mov
leave
nop
jmp
mov
add
add
and
mov
push
mov
xchg
ret
add
jnp
or
xchg
cmp
add
push
mov
xchg
ret
add
add
ljmp
aas
clc
repnz
jmp
jae
add
in
mov
add
rorl
je
inc
add
cmp
add
roll
js
das
jmp
add
add
add
add
stc
add
clc
repnz
jmp
jae
addl
add
add
add
nop
push
mov
leave
nop
jmp
push
stos
and
test
add
mov
push
mov
xchg
ret
mov
add
hlt
push
mov
push
dec
add
add
ja
test
fdivrp
clc
repnz
jmp
jae
out
lock
jecxz
add
clc
repnz
jmp
jae
add
jo
add
arpl
add
test
int
call
nop
jmp
xlat
dec
mov
in
insb
add
add
testl
clc
repnz
jmp
jae
add
pusha
add
add
repnz
repnz
jmp
jae
and
fdivrs
add
add
mov
clc
repnz
jmp
jae
js
xor
jno,pt
add
jp
jbe
clc
repnz
jmp
jae
or
sub
sahf
adc
cmp
nop
push
mov
leave
nop
jmp
test
popf
js
add
add
mov
andl
jmp
jae
add
add
das
add
cmpsl
test
nop
push
mov
leave
nop
jmp
add
add
add
lock
add
add
push
inc
add
js
add
add
add
test
test
pop
mov
loope
incl
add
nop
jmp
xor
stos
xlat
fidivrl
fsubrs
jmp
jae
add
add
out
add
ds
in
ud1
es
jecxz
repnz
jmp
jae
stos
cmp
add
or
clc
repnz
jmp
jae
in
mov
add
add
or
and
add
nop
jmp
add
and
jp
add
pop
inc
add
add
add
cmp
add
enter
add
ja
clc
repnz
jmp
jae
lock
add
add
in
leave
nop
jmp
add
mov
stos
add
call
inc
add
add
add
mov
repnz
jmp
jae
ds
xchg
add
add
mov
popf
push
nop
push
mov
leave
nop
jmp
pusha
xlat
shl
mov
addl
pusha
add
adc
push
clc
repnz
jmp
jae
popf
mov
add
add
add
push
pop
clc
repnz
jmp
jae
add
add
pusha
adc
add
adc
inc
inc
add
repnz
jmp
jae
add
add
add
cmp
mov
xchg
ret
add
dec
add
add
ds
and
fldl
bound
nop
jmp
add
ret
add
lock
sbb
clc
repnz
jmp
jae
dec
mov
push
add
cmpsl
arpl
add
cld
jmp
jae
add
xor
add
adc
add
mov
clc
repnz
jmp
jae
ds
add
add
add
mov
clc
repnz
jmp
jae
ret
lock
cmpsl
add
add
cld
jae
repz
repnz
jmp
jae
add
dec
dec
in
sub
xlat
jo
push
mov
add
adc
or
lcall
push
add
repnz
jmp
jae
add
ret
lock
outsb
push
stos
inc
clc
repnz
jmp
jae
cmp
add
add
pop
clc
repnz
jmp
jae
add
add
add
jbe
pop
nop
push
mov
leave
nop
jmp
jmp
and
lods
mov
add
aad
sub
add
testb
cmc
js
aaa
or
add
repnz
jmp
jae
add
sbb
add
out
pop
cmpsl
push
clc
repnz
jmp
jae
add
add
add
push
push
push
add
mov
xbegin
jae
xor
add
cmpsl
mov
add
or
repnz
jmp
jae
add
pusha
in
cmpsl
pushl
clc
repnz
jmp
jae
add
add
lock
cld
jmp
jae
add
xor
shll
in
jg
add
repnz
jmp
jae
pop
push
popf
add
test
add
inc
push
clc
repnz
jmp
jae
arpl
add
push
sub
sub
mov
leave
nop
jmp
add
add
pop
add
add
test
int3
clc
repnz
jmp
jae
add
add
add
mov
leave
nop
jmp
add
add
add
js
add
lods
push
mov
xchg
ret
pusha
inc
test
add
js
add
adc
cmp
jmp
jae
mov
add
js
jg
or
nop
jmp
hlt
mov
dec
add
add
xchg
clc
repnz
jmp
jae
out
add
movsl
sbb
ret
lock
in
jne
ret
add
repnz
jmp
jae
mov
addl
mov
mov
xchg
ret
add
add
add
mov
adc
iret
fwait
clc
repnz
jmp
jae
add
add
add
dec
cmp
push
mov
leave
nop
jmp
movsl
ret
add
ret
add
hlt
add
test
mov
xchg
ret
add
add
add
add
js
repnz
jmp
jae
add
add
add
jns
in
add
clc
repnz
jmp
jae
fiaddl
add
cmp
mov
mov
adc
sbb
push
add
add
ja
lcall
add
clc
repnz
jmp
jae
add
add
add
into
cmpsb
xchg
clc
repnz
jmp
jae
add
add
add
add
fistpl
push
mov
xchg
ret
add
ret
add
add
push
push
mov
xchg
ret
add
adc
xor
add
sub
add
add
push
push
xor
clc
repnz
jmp
jae
mov
add
fwait
mov
clc
repnz
jmp
jae
add
add
xor
int3
pop
fwait
nop
push
mov
leave
nop
jmp
lock
add
add
cmpsl
add
jg
sbb
clc
repnz
jmp
jae
add
jo
test
add
push
ficompl
sbb
in
leave
nop
jmp
add
andl
mov
add
add
clc
repnz
jmp
jae
in
add
in
movswl
clc
repnz
jmp
jae
add
and
pusha
pusha
add
push
mov
xchg
ret
add
mov
add
repnz
jmp
jae
jnp
mov
add
loope
fistl
rolb
ret
cmp
rcl
add
jo
add
add
bound
repnz
jmp
jae
add
mov
test
add
clc
repnz
jmp
jae
fadds
add
add
mov
cs
pop
pop
push
mov
xchg
ret
add
add
mov
mov
mov
xchg
ret
mov
mov
add
add
mov
clc
repnz
jmp
jae
sbb
add
add
jo
mov
clc
repnz
jmp
jae
add
add
mov
clc
repnz
jmp
jae
add
add
add
jecxz
dec
push
nop
push
mov
leave
nop
jmp
add
mov
and
mov
mov
xchg
ret
add
inc
add
pusha
add
clc
repnz
jmp
jae
add
dec
lock
js
add
orl
cld
jmp
jae
mov
add
add
add
add
fwait
push
mov
xchg
ret
add
xor
add
cmp
das
push
push
mov
xchg
ret
add
add
add
add
jg
clc
repnz
jmp
jae
add
add
mov
add
add
fld
nop
push
mov
leave
nop
jmp
cmp
repnz
sbb
in
add
incl
and
dec
cmpb
popf
stos
xor
cmpsl
xlat
inc
andl
push
pop
repnz
xchg
push
mov
pop
sahf
fsubrl
add
lcall
mov
enter
out
lahf
xchg
add
add
dec
inc
adc
test
icebp
mov
jnp
adc
and
test
fucomi
in
push
pop
sarl
ficoml
test
sbb
pop
mov
push
lods
rorl
test
and
add
sbb
rcrl
add
add
pop
mov
jp
sarl
add
jp
in
push
adcl
add
add
xchg
std
loopne
add
add
add
mov
add
add
cmc
xor
push
jge
sarb
push
popa
aaa
xor
sbb
imul
jae
nop
push
lds
clc
mov
lock
les
add
add
add
add
idivl
shr
mov
adc
lcall
xchg
xor
nop
push
mov
sbb
gs
push
and
add
add
hlt
and
inc
and
and
in
mov
add
mov
rcl
add
int
add
add
aam
push
stos
push
jns
rorl
xchg
inc
cmpsl
in
scas
iret
lcall
add
in
add
add
in
and
mov
inc
sarl
add
add
test
mov
outsl
jne
push
out
push
jo
add
inc
inc
pop
aaa
mov
cwtl
ret
ds
mov
cmp
dec
pop
inc
fcmovnu
pushw
pop
lds
jecxz
clc
and
add
add
fwait
int3
add
dec
mov
add
addr16
push
inc
leave
pop
xchg
add
add
add
mov
loopne
clts
pop
adc
jecxz
shl
or
mov
add
add
and
dec
pop
mov
jb
push
add
jbe
adc
in
in
scas
jmp
jg
int
sti
jae
sbb
add
xor
gs
out
adc
repnz
hlt
ficompl
push
add
add
push
mov
adc
roll
sub
push
pop
cmp
add
aas
inc
mov
add
ss
cltd
mov
lcall
lock
push
sbb
cltd
cmpsb
test
mov
mov
cmp
pushf
rclb
test
push
enter
outsb
icebp
jae
jno
ss
imul
push
sti
xor
cmpsl
xchg
adc
ret
sub
test
test
add
cmpsb
mov
lret
fidivrs
xor
and
add
add
add
fistps
cwtl
xchg
cmpsl
stos
mov
daa
daa
sbb
lock
add
mov
add
add
aaa
adc
pop
and
pop
push
leave
addb
test
loop
outsl
mov
lock
or
add
add
add
add
xlat
pusha
add
add
pop
lods
fcompl
int
mov
iret
cmpsl
or
mov
cmpsl
jnp
add
dec
push
ss
push
insl
dec
shrb
or
add
add
ret
daa
int
lret
into
push
dec
add
add
sbb
nop
push
sub
mov
add
add
and
mov
add
add
add
mov
or
add
add
add
add
imul
sub
mov
out
incl
add
lcall
fdivr
sub
add
add
loope
fldcw
mov
pop
jge
xchg
add
mov
test
add
jecxz
cmc
xlat
jl
jae
sbb
sahf
das
loopne
movsb
mov
test
mov
cld
xchg
or
add
add
mov
ret
jmp
add
push
cmp
inc
inc
inc
inc
push
xchg
in
adc
cmc
mov
fimull
jle
add
mov
add
add
xor
mov
std
aas
xchg
xchg
fadd
and
adc
sub
andl
mov
add
cmp
loop
ja
add
add
add
push
pop
aas
xor
popa
or
rcl
jo
sbb
ljmp
add
add
jl
mov
push
test
stos
dec
add
test
push
cmp
mov
add
add
mov
sbb
add
mov
adc
ss
sub
pushf
test
repnz
imul
pop
mov
push
popa
inc
jle
add
sbb
add
add
cmpsb
mov
and
mov
test
lret
rcr
xlat
inc
xlat
cld
pusha
add
add
sbb
mov
ja
and
test
int
sub
add
add
mov
lret
mov
cmp
add
add
cwtl
inc
or
aad
jnp
out
popf
outsl
add
push
or
adc
popf
xor
push
mov
outsb
repz
sbb
jp
in
cmpsl
adc
lea
ficomps
je
inc
adc
mov
add
push
adc
mov
pop
ret
jae
add
mov
out
push
adcl
inc
mov
add
mov
mov
nop
jle
xor
xchg
mov
in
inc
add
scas
ficomps
test
fcoms
cmc
dec
aam
push
pop
orl
add
add
add
dec
and
add
add
sbb
push
enter
add
xor
xor
int3
mov
cld
mov
mov
fwait
in
es
add
add
push
test
jb
subb
idivl
sub
add
fsubrl
lds
sub
add
add
cmp
adcb
andl
sub
pop
es
push
jecxz
cmp
adc
push
dec
push
xchg
js
out
jmp
jge
insl
sbb
mov
mov
loop
dec
loope
ja
test
pop
or
in
lret
jae
shll
scas
add
add
dec
add
add
jl
sub
xor
xchg
imul
xorl
or
push
jno
jnp
roll
and
push
push
insb
add
add
sub
add
add
add
pop
pop
mov
add
add
add
jg
lcall
orb
je
leave
or
je
faddl
mov
add
sti
and
add
pop
outsb
hlt
add
add
add
mov
add
add
pop
mov
dec
pop
mov
push
imul
add
std
fcomi
dec
add
pushf
xchg
jge
stos
sti
movsb
sub
repnz
adc
inc
data16
fwait
dec
add
add
pop
jno
stos
lret
inc
cmp
mov
xchg
jno
ljmp
inc
add
btc
inc
stos
in
pop
out
data16
add
pop
test
xor
add
hlt
pop
push
cmpsl
iret
sub
mov
push
xchg
sbb
xor
test
dec
sti
adc
xor
push
ja
push
mov
repz
test
add
add
add
mov
dec
sti
push
icebp
adc
add
lods
clc
xchg
dec
push
push
push
cld
fwait
imul
fisubrs
stos
cltd
addr16
rcll
mov
cmp
add
pusha
add
add
into
or
push
inc
inc
mov
jne
lcall
push
pop
or
add
add
or
add
add
in
outsb
sbb
and
add
xchg
push
xchg
inc
mov
or
mov
and
and
add
cmp
lods
mov
lcall
paddsw
pop
add
mov
gs
and
mov
mov
andl
je
mov
gs
fmuls
add
pop
es
jp
mov
and
add
add
scas
inc
inc
pop
adc
pop
inc
add
pushf
jns
pop
mov
mov
add
stos
ret
loop
test
jns
in
shr
xor
cmc
jle
ret
test
roll
push
and
add
add
out
xchg
mov
test
push
inc
pop
add
in
adc
pop
int
fwait
and
jb
out
call
es
sbb
add
sti
xor
aam
fld
jp
test
jae
mov
mov
xchg
sub
add
add
sbbb
inc
add
adc
frstor
lods
sbb
mov
outsl
xchg
jl
roll
out
stc
dec
pop
jp
popf
add
test
cld
repz
and
xchg
push
cmc
mov
mov
or
add
add
fcomps
push
inc
and
nop
mov
outsl
push
add
lea
mov
iret
das
lahf
bound
add
add
ljmp
lds
add
add
adc
test
dec
push
pop
data16
mov
or
add
add
mov
jmp
mov
popa
inc
add
pop
fstl
or
add
mov
cwtl
xchg
ss
push
and
lods
mov
add
mov
pop
adc
add
bnd
push
std
sbb
push
test
icebp
test
cmpsb
push
repnz
test
cmp
mulb
mov
and
sub
pop
lcallw
sbb
add
add
movsb
push
cs
add
add
push
aam
bound
sub
add
add
andb
add
add
xlat
test
pop
clc
sbb
push
mov
ret
sub
in
xchg
idiv
divl
jb
add
sti
fldcw
add
add
and
mov
sub
jbe
mov
xchg
repnz
bndcu
iret
aas
xchg
into
movsb
xor
fwait
test
cli
repz
out
mov
add
mov
add
out
jle
sub
add
es
cmp
mov
xor
mov
add
jl
sbb
hlt
sub
add
add
aad
add
push
gs
scas
cmp
in
inc
add
add
xor
add
cmp
ret
xor
add
add
lods
dec
add
mov
lret
adc
add
out
and
mov
jmp
mov
mov
push
jae
lea
mov
xorl
add
pusha
add
fsubrs
jne
das
push
faddp
ss
add
add
ja
mov
adc
lret
int
and
leave
mov
aas
incl
daa
aad
xchg
lods
dec
add
add
jbe
ljmp
mov
hlt
cmp
add
add
inc
add
jg
add
sbb
test
jmp
ds
add
add
dec
mov
push
mov
ss
int
scas
push
jb
sub
xchg
gs
sbb
lea
inc
add
add
iret
icebp
sbb
nop
sbb
add
push
ljmp
add
mov
sbb
sbb
pop
sub
mov
gs
ss
mov
pop
inc
out
addr16
cs
ljmp
add
pop
dec
add
add
jae
pop
and
jnp
sub
pop
mov
add
jo
out
scas
add
add
test
mov
lods
sbb
outsb
mov
dec
add
add
sbb
bound
add
xor
add
add
push
das
inc
ficompl
jl
mov
cmp
mov
pop
stc
rcrb
add
add
bnd
pop
insl
daa
pusha
add
mov
add
sahf
sti
push
stos
push
nop
rcl
or
add
lahf
lahf
cbtw
adc
gs
jl
cs
loopne
sbb
jne
dec
add
outsb
mov
adc
inc
add
mov
add
pop
bound
and
pop
arpl
data16
add
cli
js
or
scas
in
inc
mov
cs
out
mov
and
ds
scas
pop
push
adc
mov
insl
pop
mov
add
add
lret
jno
sti
in
sub
add
add
mov
push
ja
push
cltd
push
imul
fisubs
mov
nopl
movsb
ret
push
xchg
leave
sub
mov
test
push
loop
fcoml
sbbl
iret
andb
add
xorl
out
push
cmp
add
add
clc
push
mov
dec
aaa
repz
sarb
cmp
outsl
call
sub
mov
out
daa
mov
les
fcmovnbe
add
add
add
mov
shll
das
xchg
lds
add
test
js
add
add
fldenv
cvtpi2ps
add
add
inc
add
add
add
cli
out
testw
loopne
cmp
adc
add
mov
stos
ds
fcoml
and
add
add
fimull
inc
insl
pop
lds
imul
sbb
mov
les
testb
or
add
add
push
out
sub
pop
push
push
jp
fsubrs
add
mov
mov
roll
cmc
call
nop
stos
addr16
ficompl
rcr
js
adc
xchg
aam
cmp
inc
xchg
mov
mov
sbb
aam
jbe
pop
insl
lea
loop
scas
rorl
sahf
adc
add
mov
cmp
jne
cwtl
imul
out
or
mov
cmpsb
popf
lahf
push
dec
add
add
jo
cwtl
xchg
repnz
enter
sub
add
add
in
fwait
out
push
or
sub
cmp
pop
dec
add
add
mov
fnstenv
mov
out
push
mov
or
pop
jge
mull
cwtl
test
lcall
mov
inc
fistps
cmp
add
cld
jge
add
popf
mov
add
add
and
mov
push
in
inc
add
lahf
scas
mov
les
add
sbb
std
shll
mov
popa
mov
mull
add
add
xor
add
std
xchg
test
fcomi
cs
push
sub
add
add
add
std
shrl
jnp
sub
pop
es
nop
add
sahf
pop
in
add
call
add
add
cmpl
pop
cli
stc
mov
fdivp
into
mov
arpl
gs
mov
dec
add
arpl
loopne
sbb
mov
inc
aas
xor
push
jle
loop
xchg
mov
add
pop
stc
bound
mov
in
pop
test
ljmp
sub
mov
aam
mov
shrl
xchg
and
daa
test
add
add
jg
and
mov
push
push
sbb
lods
dec
pop
pop
lea
fimuls
cmp
xor
add
add
repnz
andb
fst
adc
add
add
in
add
dec
test
aas
mull
add
cmpsl
push
inc
cld
rcrl
add
mov
int3
int3
mov
add
sub
or
add
add
inc
or
add
add
rcl
inc
add
or
add
add
xchg
cmp
loope
mov
add
add
push
fistpll
jle
mov
sub
shll
pushf
inc
lods
jge
rcr
addr16
lods
lea
mov
sahf
hlt
xchg
mov
push
pop
mov
pop
aam
jp
call
imul
add
add
mov
add
add
add
nop
inc
ret
out
test
inc
adc
imul
popf
push
cmp
pop
jno
ret
add
mov
jae
addr16
pop
leave
push
push
or
add
lods
je
adc
xchg
mov
imulb
adc
add
push
aad
inc
jp
jle
mov
adc
mov
xor
or
add
test
dec
add
add
and
leave
mov
push
in
dec
jp
fmulp
out
push
or
adc
inc
add
add
popa
lds
xchg
es
pop
daa
xlat
aam
jbe
dec
mov
daa
mov
hlt
xorl
add
push
rorb
adc
mov
pop
and
inc
cmp
lock
sub
cltd
sub
sbb
add
jno
push
sbb
sarb
sub
push
mov
stc
jle
mov
aas
es
lods
cmp
out
xor
push
inc
pop
test
push
out
dec
es
add
add
inc
stos
xor
clc
mov
inc
leave
inc
hlt
mov
add
mov
push
ret
add
add
add
mov
lret
sarl
add
loop
movsl
lret
inc
and
imul
jle
test
inc
pop
and
test
jns
je
sub
insl
sub
ja
and
pushl
fcompl
push
stos
xor
dec
add
add
or
mov
pop
aam
push
scas
mov
add
lret
mov
add
les
push
push
pushf
test
xchg
pop
mov
mov
es
mov
das
xchg
jecxz
ja
mov
cmpb
mov
push
addb
add
in
or
fists
popf
cmpsb
dec
mov
out
pop
inc
add
add
xor
add
add
add
leave
mov
add
jg
mov
add
add
mov
sub
and
add
add
add
add
xchg
int3
pop
xor
push
in
popa
in
or
mov
pop
sbb
add
add
hlt
add
mov
insl
lds
adc
and
mov
pop
fmuls
add
add
add
pop
lret
mov
push
repnz
or
mov
add
sbb
dec
out
cmp
inc
insl
adc
stos
xor
and
das
rcrl
pop
mov
mov
out
es
and
mov
nop
scas
stos
mov
inc
ljmp
es
dec
add
xor
clc
xor
dec
add
add
xor
mov
inc
fwait
mov
orb
and
aas
cmp
xor
sub
add
fidivrs
inc
cmp
les
add
add
add
add
add
aaa
es
out
testl
add
mov
jno
shrl
in
add
imulb
and
mov
adc
mov
out
fsubrl
add
add
dec
sub
mov
aaa
pop
xchg
and
add
add
add
add
mov
negb
leave
fcompl
rolb
add
add
add
arpl
movsb
jne
cmp
add
bound
lock
iret
int
sbb
test
inc
movsl
adc
sbbl
or
add
add
enter
rclb
add
add
add
and
mov
add
pop
and
add
push
xchg
add
add
jbe
ja
add
add
int
sbb
add
add
mov
xchg
inc
add
add
andl
out
dec
fistl
lret
insb
add
add
leave
fists
pop
or
out
ljmp
imul
iret
and
add
xor
add
add
pop
mov
dec
jecxz
gs
dec
add
fsubr
call
add
dec
add
test
sti
imul
mov
aaa
add
mov
lret
add
sub
or
sbb
jo
pop
mov
lods
xor
mov
pop
add
jns
jns
js
outsb
les
nop
jecxz
add
insl
in
stc
and
add
add
and
nop
push
popa
call
mov
push
int3
shl
mov
add
sub
mov
dec
inc
xor
clc
dec
adc
daa
push
push
rcl
inc
push
loop
mov
mov
add
add
lret
int
mov
inc
xorl
jns
mov
add
cmovge
lds
mov
sub
jle
add
add
cmp
rcl
into
hlt
test
repnz
stc
mov
imul
add
ljmp
lcall
add
jae
sbb
pop
jle
and
add
add
leave
es
stos
cmp
icebp
mov
aaa
adc
mov
jp
mov
cltd
jmp
popf
and
add
xchg
or
jbe
adc
ret
mov
mov
lahf
inc
popa
je
pop
push
adc
dec
xchg
jae
mov
dec
sub
adc
sub
test
add
add
rolb
test
add
add
cmc
lcall
dec
xchg
cmpsl
les
fidivrl
inc
lods
inc
add
sbb
jns
dec
sub
movsb
dec
shl
cmp
add
add
and
add
add
leave
bound
arpl
jo
repz
jge
or
inc
add
add
and
sub
push
push
ficoms
xchg
jbe
cli
repnz
fdivs
test
aad
cwtl
ss
shl
mov
lock
add
add
sbbb
cmp
push
lods
jmp
mov
push
daa
jecxz
fnsave
daa
data16
cmp
push
cmp
add
dec
out
inc
add
add
sbb
add
add
xchg
pop
clc
in
test
in
and
pop
lret
insl
inc
add
ss
pop
in
xor
sbb
fistps
mov
add
add
nop
jle
mov
mov
cld
loop
shlb
add
insb
add
add
xchg
ret
add
add
mov
jno
jg
xorb
or
mov
sbb
xor
mulb
xchg
add
add
pushf
aad
repnz
fisubl
or
mov
cmpsb
mov
inc
scas
mov
jbe
enter
add
add
stos
shl
mov
add
sbbl
mov
mov
sbb
clc
cli
rcll
and
mov
or
mov
leave
std
mov
push
add
lcall
and
add
add
jle
xor
cmp
xchg
add
outsb
lcall
add
add
mov
jg
adc
sub
and
lret
jl
xlat
mov
std
mov
in
add
add
add
rcl
repz
std
ficoms
sub
inc
add
add
fistpl
fisubrs
add
add
or
lods
sub
mov
adc
mov
sbb
test
in
imul
xchg
cmp
add
jge
inc
xchg
sub
mov
jecxz
dec
xchg
testl
ss
or
mov
arpl
mov
int3
jl
xchg
sti
xor
push
cmp
or
jnp
push
xor
pop
adc
xchg
sub
mov
dec
add
ror
test
mov
xchg
cwtl
mov
mov
xchg
add
add
jp
pusha
add
add
andl
cmp
push
sub
lods
jp
inc
adc
lahf
out
add
cs
cmp
push
stc
sub
mov
cmp
add
add
ljmp
pop
test
add
into
sub
mov
mov
add
rorb
jge
bnd
inc
add
jo
into
hlt
je
push
cmpsl
dec
add
cmc
mov
push
int
add
jmp
and
inc
test
shr
mov
int3
mov
add
add
pop
push
sarb
scas
jge
data16
xor
leave
hlt
into
test
addr16
out
pop
xchg
add
add
xor
push
out
std
fdivrl
add
add
iret
aaa
ret
dec
lret
imul
jnp
in
xchg
in
jp
out
xor
insl
push
ret
add
xor
lock
repnz
add
add
mov
bound
int3
dec
pushf
xchg
mov
call
adc
or
pop
pop
std
or
mov
xlat
pop
add
inc
push
int
int3
fwait
out
dec
sub
cmp
sub
add
add
into
pop
ret
sbb
mov
jbe
adc
add
add
out
sub
mov
aam
cld
xchg
adc
test
add
js
mov
pop
sahf
add
pop
pop
clc
fwait
and
mov
adc
mov
cld
jecxz
ljmp
add
add
jge
scas
ret
inc
or
cmpsl
movsl
movsb
clc
sub
mov
pop
mov
lcall
int
dec
or
add
add
inc
adc
mov
add
add
pushf
mov
test
pop
rcr
and
mov
push
fstpl
add
or
push
push
mov
outsb
lcall
bound
pop
mulb
mov
mov
rclb
faddl
mov
dec
xchg
fdivl
add
add
pop
and
mov
adc
inc
and
and
cwtl
sti
sub
int
push
outsb
push
push
mov
jcxz
dec
xorl
mov
push
mov
add
sub
add
add
mov
mov
movsb
leave
mov
movsb
sbb
mov
add
add
mov
in
sub
mov
add
stos
jmp
mov
add
mov
cmp
lods
mov
sti
mov
test
sbb
add
add
testb
add
add
xor
enter
mov
fildll
add
add
add
mov
add
and
mov
pushl
cmpsb
pop
inc
add
add
push
hlt
int3
out
test
hlt
lret
nop
mov
jne
jg
push
push
xor
mov
shlb
mov
adc
xor
sbb
jae
jle
into
mov
lret
add
add
stc
rol
fsubrp
int3
bnd
mov
xchg
faddl
movsb
jmp
add
add
add
add
add
add
xor
fcomi
mov
add
shll
in
mov
call
mov
add
sub
add
gs
iret
faddl
xchg
dec
xchg
xor
les
lock
mov
pop
and
add
add
lret
add
add
popa
fmuls
cli
lock
jae
add
jecxz
and
add
add
dec
add
add
mov
mov
add
add
add
adc
jb
adc
jle
out
xchg
push
lods
aas
cmp
outsl
int
dec
add
cld
sti
mov
outsb
testl
cmp
adc
add
add
add
loop
jmp
sarb
add
mov
lret
ret
pusha
add
aaa
pop
push
dec
jecxz
xchg
inc
add
add
xchg
cmpsb
lret
mov
inc
add
add
xchg
push
pop
mov
xchg
dec
jnp
cwtl
or
mov
jp
inc
adc
xor
xchg
mov
xchg
mov
xchg
pop
xchg
add
add
sub
add
add
push
xor
xor
add
add
lds
xchg
mov
add
push
in
or
add
add
mov
add
add
cld
sbb
mov
cmp
xchg
mov
std
dec
cli
fidivrl
mov
jbe
movhps
sub
jae
and
cmpsb
xor
jo
add
add
es
lods
cs
push
dec
push
jge
inc
nop
lods
dec
add
push
xor
push
outsl
cmp
sbb
pop
xchg
push
aad
sbb
pop
push
sub
add
pushf
mov
and
sub
ds
and
push
bound
mov
jg
jnp
cltd
aas
lahf
mov
add
add
add
mov
jnp
insb
add
lods
addr16
lods
idivl
mov
out
adc
cmp
mov
jecxz
mov
pop
test
jno
mov
lods
je
lret
insb
add
clc
loop
in
outsl
cs
mov
add
add
mov
andl
add
test
inc
shl
mov
outsb
inc
jae
insl
mov
add
push
adc
hlt
popa
cmp
adc
pushf
xchg
mov
int3
push
add
add
add
jmp
inc
iret
xor
pop
and
test
testb
mov
sahf
xchg
in
add
add
inc
jmp
aas
lea
add
add
shlb
jge
iret
rcrl
dec
dec
add
jno
xchg
push
xchg
loopne
mov
in
add
add
or
add
add
jno
add
add
pop
adc
jae
das
scas
in
call
call
push
inc
popa
jl
dec
push
int3
pop
aam
and
mov
adc
repnz
mov
mov
out
sub
add
add
xchg
mov
fistpll
push
jbe
pop
fstps
add
sub
call
into
inc
inc
mov
mov
loope
xchg
lods
pushf
pop
in
cmp
add
add
enter
movsb
ret
lret
or
mov
xor
out
mov
std
xor
add
jecxz
enter
dec
aad
notl
and
add
add
int3
xchg
push
push
aad
mov
test
add
pusha
add
add
data16
push
pop
imul
repnz
add
add
or
loopne
add
add
adcl
mov
mov
fnstenv
add
ja
push
jmp
push
lods
lcall
daa
fnstsw
repnz
xor
fisubl
pop
fsubrs
sti
out
xchg
and
mov
add
add
cmpsb
mov
dec
add
add
mov
xor
test
jae
xlat
andb
mov
mov
jns,pn
sub
add
add
pusha
add
add
insb
add
inc
das
xor
pop
mov
add
xor
add
mov
mov
mov
push
aad
sub
mov
stc
sbb
mov
std
fdivl
push
or
xor
cmp
add
adc
psubw
ret
pop
out
cs
sbb
out
inc
fmull
fwait
std
cmpsl
call
add
add
mov
jns
js
mov
leave
and
push
mov
add
cmp
and
jmp
jnp
xchg
icebp
xor
add
mov
mov
sahf
stos
call
add
add
xchg
in
cmpsb
imul
mov
push
je
js
push
xchg
es
out
sub
popa
iret
mov
loope
adc
jmp
jl
sbb
add
loop
sub
add
add
add
jns
inc
stos
movsb
push
rorl
pop
sbb
cli
inc
dec
shll
mov
add
xor
add
sub
jne
das
lods
mov
add
add
insb
add
add
rol
inc
inc
or
out
push
fsubl
jl
jnp
xchg
hlt
dec
and
xchg
or
jg
popa
inc
cmp
out
imul
js
cltd
loop
xchg
hlt
fisttpl
xchg
test
or
scas
jne
test
mov
add
push
sub
stc
lret
out
or
cmc
pusha
add
push
mov
movsl
inc
add
add
shl
mov
in
xchg
jp
or
or
add
jns
imul
mov
push
inc
add
add
and
mov
mov
je
cmpsb
outsl
out
popa
aas
fsubs
add
mov
outsl
xor
mov
add
add
loope
jbe
movsb
in
add
add
xor
push
loopne
jle
icebp
scas
add
add
add
jmp
mov
inc
cmp
xor
dec
das
sub
pushfw
cmpsb
fstl
aas
into
lods
jp
pop
cmp
push
pusha
add
fdivrs
xor
mov
add
add
add
lods
jae
mov
movsl
add
add
add
cmp
mov
out
aad
jnp
add
push
enter
enter
lea
dec
outsb
add
add
add
shl
test
pop
stc
fwait
cli
repz
faddl
mov
adc
fisttpl
out
mov
add
add
repz
add
add
jge
sub
mov
fdivrl
jo
test
lea
add
add
repz
mov
add
jbe
ffreep
add
add
add
cli
add
cmp
inc
data16
or
add
lea
dec
popf
daa
or
cmp
or
adc
icebp
rorb
add
add
add
jnp
add
test
jno
pop
in
loop
xchg
inc
pop
outsl
push
push
arpl
push
cmpsb
js
jno
add
dec
add
add
add
int3
test
push
lcall
cli
mov
lds
inc
mov
shrl
rclb
roll
aam
xchg
or
jp
inc
call
add
pusha
add
rcrl
add
add
adc
jns
add
mov
push
dec
or
add
add
in
arpl
imul
add
jno
imul
stos
lock
adc
xchg
aas
lahf
xchg
xor
in
pushf
xchg
mov
out
mov
adc
add
add
lods
dec
add
add
jg
clc
mov
sub
xor
into
test
aam
jecxz
int
sub
add
js
int
add
mov
add
les
clc
mov
test
hlt
stos
jge
lret
dec
sbb
sub
fsubrs
ljmp
add
dec
mov
add
add
add
rcr
movsl
out
push
jge
fists
jb
into
mov
push
or
add
insb
add
add
or
stos
call
loop
cs
sahf
inc
dec
bnd
pushf
and
add
add
cli
sahf
std
xor
loop
loopne
popf
sbb
mov
adc
add
xor
test
daa
and
shll
imul
ret
mov
add
movsl
push
xor
add
xchg
out
adc
out
imul
stos
orl
mov
xchg
cs
loop
leave
add
add
mov
in
inc
sub
jg
lret
pop
push
push
idivb
dec
or
mov
jl
cmpsl
aaa
mov
enter
add
add
pop
add
jae
or
pop
nop
sub
into
sub
inc
add
inc
nop
dec
in
add
add
adc
jp
fnstsw
iret
je
in
add
add
add
add
or
add
add
add
add
add
movsb
xchg
mov
push
inc
add
add
ret
test
out
loope
cltd
lret
test
push
sub
xor
mov
add
add
add
lahf
jnp
nop
leave
jg
mov
scas
rolb
cld
mov
inc
add
cmp
lock
mov
jecxz
push
sti
mov
pop
les
mov
mov
xchg
ret
adc
add
outsb
mov
jl
mov
and
hlt
and
mov
bound
add
add
pop
push
add
shrl
inc
stos
sbb
test
lock
inc
arpl
pop
stos
mov
sub
push
mov
xchg
mov
lods
sahf
jbe
cmpsb
cmp
inc
popf
xor
inc
mov
dec
cmp
cltd
sub
mov
cltd
lea
jno
mov
inc
jns
pop
imul
inc
lret
and
mov
mov
mov
in
pushf
ss
adc
inc
add
jns
dec
add
add
nop
xchg
mov
mov
add
je
stos
xchg
fsubs
repnz
popa
shlb
and
jnp
inc
sub
or
ret
es
push
std
or
or
add
add
sbb
xor
add
fldcw
or
add
mov
stos
test
sbb
jmp
fdivrs
insb
add
add
add
add
pop
fdivrs
adc
push
bound
shrb
add
adc
push
add
stos
mov
add
add
loop
add
add
mov
mov
cld
and
add
add
push
add
add
add
loop
fwait
lods
sub
add
fwait
sub
mov
in
je
push
popl
mov
add
add
xchg
push
gs
loopne
aam
mov
add
dec
sub
add
add
hlt
xor
dec
dec
aaa
push
or
mov
std
sbb
pop
inc
sub
xchg
mov
imul
add
add
jns
mov
jnp
add
add
pushf
popf
sbb
mov
adc
add
add
or
or
mov
xor
fnstsw
mov
push
or
test
xchg
add
ret
data16
aad
ret
in
cwtl
and
add
outsb
pop
mov
and
mov
or
cmp
cmp
in
aad
inc
add
add
movsl
stc
ljmp
pop
cwtl
jno
sub
add
add
add
add
in
cld
xchg
fnstsw
aam
dec
push
popa
add
jnp
or
loop
lret
xor
mov
clc
aad
xchg
lds
daa
xor
push
stc
push
xchg
cmpsb
outsl
push
idivl
mov
add
add
pushf
add
mov
add
mov
test
dec
mulb
in
popa
push
cmp
ss
add
es
aad
inc
ror
dec
mov
cmpb
mov
add
outsb
pushf
xchg
dec
int
insl
lock
mov
push
arpl
add
push
pop
ficompl
sbb
push
xchg
mov
sub
add
add
pop
nop
pushf
add
repz
subl
shll
add
add
add
mov
decl
add
add
dec
leave
ret
xchg
rorb
inc
add
mov
add
add
add
rclb
ret
jbe
loope
movsl
dec
filds
insl
jmp
sub
or
add
add
mov
loop
mov
je
mov
add
mov
nop
mull
das
test
mov
add
dec
add
loope
cmpsb
sbb
push
pop
cmpb
test
or
mov
lret
aas
mov
add
ffree
dec
add
add
pop
movsl
jl
sub
add
add
outsb
pop
xor
lcall
adc
clc
add
into
or
add
add
push
xchg
mov
dec
add
stos
pop
inc
and
add
add
daa
jno
pop
scas
sbb
fnstcw
pop
xchg
jbe
push
ljmp
hlt
out
dec
outsb
idiv
jmp
add
xchg
or
lret
jg
cltd
data16
rol
lock
add
add
mov
aam
sti
jge
pop
xor
push
dec
mov
outsl
testb
add
mov
push
rcrb
popf
inc
add
add
lcall
jae
lods
pop
add
add
add
add
add
adc
add
sahf
push
idiv
push
jno
gs
and
dec
push
repz
pop
and
pop
es
or
dec
pop
call
rorb
jno
and
adc
mov
mov
add
test
das
cmp
xchg
and
mov
add
add
mov
fadds
cltd
mov
mov
popa
mov
stos
ja
sub
iret
add
add
add
ljmp
adc
pop
and
add
ror
lea
mov
add
add
jmp
add
jge
pop
or
mov
mov
sub
ret
pop
scas
in
int3
adc
xlat
push
xor
pop
push
outsl
aaa
repz
jae
incl
mov
jle
xchg
mov
cld
or
imul
into
pop
jbe
mov
jp
ret
dec
popfw
fsubrl
aas
lods
stos
ss
cmp
cmc
int3
rorl
mov
or
sub
mov
add
add
jp
mov
xchg
mov
push
ficomps
sarl
fcmovb
lahf
adc
out
jno
dec
add
add
pop
push
cmp
pop
push
inc
mov
jbe
mov
int3
iret
mov
sbb
mov
je
pushf
addr16
mov
add
add
and
add
inc
add
mov
add
add
jp
rcrl
xchg
and
mov
mov
mov
inc
add
add
int
mov
add
xchg
in
add
push
inc
add
jb
cmp
lock
mov
sbb
mov
adc
scas
je
pop
sbb
add
dec
xchg
lret
arpl
jmp
xlat
dec
sub
mov
lcall
mov
dec
ja
lods
mov
cmp
add
add
add
add
cmpsl
enter
fisubrs
adc
test
dec
push
fdivl
lock
dec
stos
testb
xor
pop
ret
adc
adc
sub
mov
adc
push
xchg
and
scas
rcll
stos
rcr
adc
mov
xchg
call
repnz
loope
push
cmc
pop
xchg
mov
cmpsl
jmp
mov
mov
out
pop
xchg
adc
es
push
sahf
adc
imul
sub
mov
add
add
rclb
jbe
mov
testb
lea
imulb
mov
mov
add
out
mov
int
sbb
shr
add
add
lea
inc
sbb
stos
add
shrl
add
mov
stc
sbb
sub
mov
mov
outsb
fidivrl
jmp
sbb
fwait
lcall
add
mov
mov
fcomip
add
add
xlat
and
mov
pop
jmp
rcll
xchg
into
pop
jl
jae
es
add
add
pop
repz
adc
or
add
add
jae
add
add
xor
add
add
cltd
mov
xchg
mov
add
aam
add
add
out
push
jno
add
daa
aaa
push
mov
mov
inc
cld
cs
aam
or
mov
pop
mov
das
rorb
fisttpll
stc
mov
out
inc
add
cmp
fsubrl
push
out
inc
pop
lods
push
pusha
add
add
jbe
mov
push
in
cmp
add
add
mov
hlt
or
testl
insb
add
cmp
int3
test
dec
pop
jl
outsb
xchg
sti
mov
clc
mov
add
inc
pop
cs
or
push
and
add
add
pop
nop
js
cs
scas
adc
xor
dec
pop
xor
mov
add
add
push
sub
add
add
loop
test
xor
test
inc
lahf
addr16
loop
subl
or
outsb
icebp
int
pop
sti
jnp
loop
add
jo
jl
push
nop
sub
add
add
mov
lods
call
cmp
sarl
dec
add
adc
add
in
bound
pop
mov
jne
add
lods
into
inc
cltd
sub
loop
cmp
mov
mov
test
insb
add
add
jp
stc
lds
cmpsb
dec
sbb
jmp
add
xor
mov
int3
sub
mov
add
cmp
dec
add
add
add
push
fsubr
add
je
sbb
out
adc
jg
bound
or
add
and
add
add
pop
out
xchg
int3
add
daa
mov
sub
mov
add
add
lret
int3
push
xor
or
leave
test
icebp
push
dec
adc
mov
mov
ja
mov
pop
dec
fcomip
aad
add
add
xchg
int3
mov
inc
nop
mov
push
inc
hlt
push
cmp
add
cmpsb
sbb
aam
sbb
addr16
adcl
add
add
das
stos
push
cli
lcall
cs
pusha
add
nop
ss
add
cmpsb
repz
lcall
mov
arpl
scas
lods
mov
add
insl
xlat
mov
divb
inc
rorb
jae
mov
nop
adcb
mov
add
sub
in
xchg
jo
sti
lret
cltd
rolb
add
push
test
insl
dec
pusha
add
and
sbb
popf
icebp
jge
add
add
xchg
icebp
les
lcall
rorl
inc
jns
pop
ja
mov
inc
je
jb
popf
mov
imul
add
add
adc
xchg
sbb
mov
and
loopne
scas
jp
repnz
mov
lret
pop
and
mov
lods
push
ret
je
icebp
push
xor
sub
pop
testb
cmpsb
jmp
add
add
inc
push
push
push
in
mov
cltd
bound
adc
add
add
int3
mov
in
xchg
daa
cmp
lret
xchg
add
xor
fcoml
add
add
add
pop
es
maxps
movsl
stc
sub
xchg
dec
mov
xor
mov
adc
lcall
sbb
cltd
jae
jo
add
jecxz
lods
gs
jbe
test
adc
hlt
jb
jecxz
aam
in
jl
add
add
jmp
pop
nop
dec
xchg
jbe
dec
in
mov
int
ds
cmp
pop
jl
mov
add
add
add
jmp
test
mov
mov
add
add
adc
cmp
mov
roll
jl
jecxz
xor
mov
push
inc
add
add
cs
sub
mov
jns
adcl
jecxz
jl
push
mov
int3
mov
jge
mov
pop
xchg
rcll
and
add
add
hlt
mov
xchg
add
cli
std
xchg
fsubs
jmp
mov
sbb
cltd
repnz
xor
xchg
pop
jmp
push
stos
fists
pop
xor
pusha
add
add
add
add
fnstsw
add
or
ja
xor
mov
dec
add
mov
add
inc
and
popl
lret
add
mov
add
add
xlat
mov
adc
dec
push
mov
rcll
sbb
ss
fwait
loop
rcrb
into
or
push
dec
stos
int
in
inc
pusha
add
nop
loope
add
add
out
sbb
mov
pop
fstpl
mov
cmc
roll
cmp
mov
movsl
cmpsl
sbbb
fldenv
add
pop
cmp
shrl
in
dec
add
pusha
add
add
js
ljmp
sub
jne
shrl
mov
inc
repnz
mov
add
add
inc
add
mov
mov
stos
xchg
push
clc
mov
inc
mov
xlat
les
cmp
add
xchg
xchg
shrb
sbb
addl
add
mov
add
add
xchg
mov
or
pop
pop
sbb
call
add
dec
inc
add
pop
jmp
out
jl
mov
sub
xlat
sub
repz
push
mov
fadds
repz
mov
mov
xor
call
clc
ret
add
lret
cmpsb
xor
add
cmp
and
add
add
add
jae
bound
lcall
stos
mov
add
es
cli
pop
and
mov
popa
call
popa
inc
add
add
sahf
and
add
add
xlat
pusha
add
add
cmpl
jbe
imul
addb
add
fcoml
add
add
mov
dec
add
add
sbb
dec
sbb
leave
unpckhps
xchg
or
add
add
clc
mov
pop
xchg
sub
jecxz
dec
add
mov
lock
aam
std
mov
stos
or
test
mov
adc
xlat
inc
adcl
ret
sbb
add
add
push
push
mov
repz
fisttpll
adc
je
clc
dec
or
sbb
mov
popf
shll
sub
add
add
jo
pop
movsl
inc
aam
or
cmp
rcrl
and
mov
mov
insl
mov
ss
xchg
mov
jecxz
in
sub
add
add
nop
out
data16
je
inc
add
add
aam
stos
fimuls
jne
int
dec
outsb
pop
int3
or
lods
faddl
mov
je
xor
out
adc
add
jbe
sbb
inc
mov
xor
jp
add
add
push
dec
add
add
ss
inc
add
lret
testl
es
mov
movsb
imul
pushf
dec
lcall
pop
insb
add
add
movsl
sub
cs
aad
jns
pop
lock
and
and
pop
jge
gs
or
adc
jne
test
dec
mov
call
add
xchg
outsl
adc
sahf
stos
or
add
add
add
jmp
int3
pop
lret
mov
mov
fdivrl
aaa
aad
mov
push
mov
add
add
movsl
adc
mov
mov
fnstenv
add
add
outsl
mov
js
stc
xor
shl
rcl
mov
push
cmp
mov
mov
inc
xor
aas
outsl
xor
mov
jge
pop
sub
add
add
add
in
add
leave
insb
add
add
sbb
xchg
in
jp
pushf
jecxz
push
or
dec
shlb
sub
fcmovb
outsl
lahf
in
test
mov
in
call
stos
add
daa
dec
and
mov
adc
dec
xchg
dec
mov
pop
mov
add
pop
out
ja
jle
int
jns
dec
rolb
sub
xchg
retw
std
imul
jl
push
xlat
pop
push
adc
push
push
outsl
mov
xchg
cmp
jne
decb
add
add
mov
test
add
pop
cmovne
add
add
xchg
in
mov
push
mov
test
repnz
inc
loop
jnp
cld
or
js
cmp
push
jle
sub
mov
mov
fwait
enter
jne
cmp
in
pop
mov
lret
xchg
inc
rorb
add
xchg
sub
fidivs
xchg
in
loopne
xor
imul
jne
mov
cvttps2pi
mov
scas
loope
and
fwait
sub
add
mov
pop
cmp
mov
jo
dec
xor
cmp
pop
lods
loope
mov
out
ja
and
add
add
repz
lahf
mov
xchg
out
jg
fsubrs
xchg
cli
dec
add
add
ror
gs
or
mov
jmp
add
dec
scas
push
je
add
outsb
jmp
mov
ret
add
data16
pop
dec
add
add
rol
pmulhuw
into
fdivl
xchg
loopne
add
add
pop
add
mov
push
int
jge
out
das
push
in
inc
lcall
aas
jg
or
xor
push
push
mov
fidivrl
and
fstpt
or
and
pop
sbb
add
add
test
sub
add
add
imull
adc
js
cmpsb
lock
lret
add
mov
fsubrl
add
add
std
rcr
push
pop
fwait
ds
bswap
push
push
sbb
lock
add
add
ja
jb
jo
push
push
fsubrl
cmp
add
inc
xor
shr
cmp
adc
cwtl
sub
adc
test
rcll
push
shr
sbb
push
xor
cmpsb
cli
int
xchg
cmp
sub
mov
add
add
hlt
cmp
je
dec
push
mov
add
add
std
fsubrs
sahf
test
in
aam
into
dec
fdivrs
stc
cmp
loop
rcrb
pop
cld
sub
add
add
add
ds
loopne
mov
mov
push
inc
add
stos
aas
lret
add
popa
or
shll
xchg
mov
clc
mov
push
push
jns
imul
psllq
mov
dec
add
add
les
iret
add
mov
push
push
sub
cmpsl
dec
xor
into
cmp
testb
add
add
adc
call
add
stos
jo
jns
ss
enter
xchg
jbe
pop
aam
mov
mov
sbb
mov
test
clc
or
inc
push
enter
out
stc
or
jecxz
cmp
adc
add
add
add
add
out
add
mov
mov
add
add
add
add
daa
jmp
add
add
sub
inc
mov
add
add
inc
sub
add
add
subb
lahf
pop
imul
pushf
cmpsl
inc
iret
in
icebp
orb
and
add
add
sbbl
mov
lods
jecxz
fisttps
icebp
pusha
add
add
add
cmp
and
popf
mov
test
cmp
ds
mull
inc
divl
and
cld
mov
push
loop
into
push
push
test
add
add
add
mov
xor
push
clc
call
aaa
xchg
jle
test
imul
xchg
adc
adc
fiadds
cmp
xchg
inc
add
add
cmpsb
cmp
test
jno
in
mov
inc
bound
lahf
loope
aam
test
adc
and
mov
test
add
add
or
adc
add
stos
sbb
adc
push
or
add
add
sbb
push
iret
test
add
add
test
imul
scas
hlt
push
mov
icebp
mov
add
add
jae
add
add
add
in
dec
add
add
xchg
dec
mov
sbb
ljmp
sti
cmp
add
or
mov
or
add
add
js
dec
jmp
inc
popf
outsl
xchg
ret
dec
add
add
mov
and
aas
je
faddl
xchg
leave
push
mov
or
leave
bswap
mov
sub
xchg
sti
adc
add
sub
inc
add
add
sbb
mov
aaa
pop
test
aas
hlt
sub
add
xchg
lcall
insb
add
add
in
pop
cld
mov
mov
in
and
push
xchg
lds
xchg
ds
adc
lods
fwait
test
add
fcmovbe
push
ret
pop
push
mov
call
cltd
xchg
iret
adc
mov
fsubrl
sub
add
add
jp
jns
mov
xlat
xor
dec
adc
add
add
add
test
leave
jno
aad
movsb
ficompl
mov
add
add
pop
jecxz
xchg
mov
lods
inc
jmp
add
jno
inc
lods
mov
mov
idivb
addr16
add
add
pop
loop
gs
add
add
or
add
add
and
mov
pop
pop
pop
repnz
test
in
ret
xor
adc
xchg
sbb
movsb
adc
jnp
iret
sti
loope
xor
add
mov
push
pushf
in
dec
add
arpl
inc
aad
cmc
xchg
shufps
adc
xchg
inc
add
cmp
fstl
lods
push
inc
xchg
and
add
add
add
pop
and
mov
dec
push
mov
lock
test
fstps
cmp
pusha
add
add
jnp
jg
xchg
popa
je
arpl
push
mov
push
push
fidivl
pop
in
test
pop
xor
sub
lret
lock
jno
bound
pop
pusha
add
fistps
xor
je
pop
xor
xor
add
mov
push
ret
mov
add
pop
add
push
inc
jmp
call
arpl
notb
dec
jae
sub
scas
popa
mov
mov
test
aam
adc
add
aad
jne
add
mov
mov
add
les
fcmovb
mov
push
sbb
fcmovu
addr16
pop
mov
mov
jle
adc
add
sahf
add
mov
loopne
add
add
arpl
shll
aas
cmpsb
jge
enter
add
xchg
cmp
inc
sbb
sbb
xchg
mov
add
pop
gs
xor
or
xor
jmp
jg
jmp
into
mov
ss
sbb
stc
shlb
push
or
inc
inc
add
mov
subb
and
sub
add
add
pop
imul
pop
das
mov
in
xchg
pushf
test
adc
xchg
out
daa
pop
inc
or
sahf
movsb
shlb
lret
inc
add
stos
ss
jg
xor
pop
loope
lahf
or
mov
add
add
push
jecxz
imul
in
mov
push
iret
dec
add
add
and
nop
dec
dec
cs
popa
inc
add
add
add
testb
add
int3
sbbb
adc
adc
loopne
jge
mov
bnd
clc
dec
icebp
push
orl
mov
pop
cmp
push
add
add
add
out
jg
jle
inc
repz
add
add
inc
or
pop
sbb
pop
xor
ret
dec
add
inc
cs
adc
lret
xchg
movsb
push
daa
inc
add
add
imul
sbb
mov
jg
push
fstpl
jb
test
pop
test
jmp
xchg
lahf
ljmp
inc
cwtl
mov
add
rolb
or
add
mov
pop
stos
out
and
andb
mov
mov
call
add
orl
addr16
xchg
int3
push
imul
adc
pop
mov
repz
jecxz
or
mov
into
sbb
out
add
add
aaa
hlt
lods
add
add
add
popa
aas
ret
add
add
xchg
scas
ficoms
xorb
sbbl
scas
or
hlt
mov
inc
add
add
rcr
aaa
mov
add
add
mov
roll
js
mov
adc
mov
scas
jle
xor
add
sub
adc
dec
icebp
ja
stos
and
stos
sbb
mov
subb
add
test
imul
mov
psubw
add
inc
jno
xchg
sub
fidivrl
dec
cmp
add
add
lret
xchg
int
push
mov
in
add
movsb
dec
xchg
add
add
ja
cmp
add
or
mov
outsb
shl
pop
xchg
pop
outsb
cltd
subl
dec
pop
in
pop
cmp
add
add
add
add
cmp
aam
mov
lcall
addr16
cmpl
xchg
xchg
aam
inc
mov
jne
add
add
add
daa
jbe
lods
pusha
add
add
mov
sub
xchg
pop
xchg
or
cmp
mov
add
add
add
test
enter
bound
mov
add
and
mov
add
add
add
xor
pop
sub
sbb
ss
rcl
test
adc
mov
add
add
mov
jp
inc
push
push
insl
sub
sbb
mov
adc
adc
xchg
inc
movsl
data16
add
lcall
out
in
hlt
xor
adcb
lret
test
add
add
fisubrs
repnz
mov
mov
repz
inc
fidivrl
jg
lcall
mov
mov
scas
lahf
pusha
add
add
inc
lret
dec
add
in
xor
or
add
add
out
lret
add
add
add
gs
scas
jge
adc
jae
sti
into
scas
and
add
add
add
sub
in
pop
jp
pop
cmp
aaa
sub
pop
outsb
mov
inc
adc
iret
mov
shr
xor
pop
xchg
mov
cmp
and
dec
inc
pop
xchg
mov
xor
mov
addr16
cld
fwait
mov
js
js
and
add
pop
xchg
and
add
add
femms
out
pop
ret
mov
lret
adc
insl
adc
scas
or
mov
add
dec
or
mov
add
adc
xchg
push
lret
add
cli
mov
cmp
mov
dec
xchg
push
sub
decl
ljmp
xchg
jp
sbb
loop
incl
mov
fimull
dec
mov
add
add
add
mov
mov
imul
sub
ficoms
add
out
rolb
scas
cmp
sub
mov
sub
inc
add
jle
cld
pop
clc
mov
add
cld
xchg
pusha
add
aaa
jmp
jg
sahf
mov
pop
pop
bound
pop
aaa
and
pop
leave
push
das
mov
movsl
mov
lahf
into
adc
incb
mov
add
hlt
cmp
add
ret
adc
leave
cltd
dec
add
add
push
test
int3
hlt
shl
and
add
add
cmpsl
cmpsl
mov
jmp
or
jae
decl
dec
mov
out
and
push
fsubrs
shr
jnp
pushw
sub
add
add
int3
mov
or
rolb
add
mov
cmp
mov
fidivrs
pop
popa
add
xchg
jae
and
inc
in
mov
mov
add
mov
pop
stos
fisttpl
mov
mov
lcall
xchg
movsb
mov
outsb
add
add
add
cmp
mov
jmp
add
xchg
jne
cmpsl
dec
add
mov
loopne
mov
ljmp
jne
pop
push
mov
sahf
pop
test
dec
insb
add
add
sub
add
add
in
mov
ds
pop
pushf
sahf
and
dec
add
lock
add
add
adc
mov
mov
add
add
mov
fmull
or
dec
add
adc
mov
es
fisttps
jp
inc
adc
add
mov
ja
and
in
add
mov
push
cmp
or
jecxz
cmc
pop
push
add
mov
std
adc
sbb
test
add
add
inc
push
jg
push
xor
inc
dec
dec
nop
add
add
add
into
push
fstps
sahf
out
popf
jnp
mov
add
out
mov
dec
inc
add
add
mov
xchg
push
sbb
add
dec
mov
inc
sbb
dec
rolb
sbb
adc
sahf
idiv
push
and
and
adc
sbb
cmp
out
push
test
push
push
int
test
cmp
mov
shlb
orb
xchg
mov
add
sar
xor
call
test
out
cltd
push
shll
sbbb
dec
add
cmp
push
jg
sub
ds
mov
jge
sub
mov
jns
add
add
mov
push
push
in
ja
xchg
xor
add
add
out
in
popa
rclb
xorl
add
cli
and
add
add
and
iret
stos
mov
and
and
mov
add
pop
lret
inc
add
adc
or
add
add
in
outsb
lret
sbb
pop
mov
mov
add
test
mov
lcall
addr16
test
push
pop
in
mov
sbb
nop
repz
pushf
scas
addr16
and
into
jle
sti
daa
jp
data16
lods
gs
inc
mov
adc
sub
add
pop
test
jmp
push
pop
int
add
lea
pop
sub
mov
cmp
ljmp
add
mov
jp
adc
add
add
inc
add
pop
adc
inc
add
mov
add
add
add
add
add
add
inc
out
add
add
dec
add
jns
test
aad
add
add
icebp
sbb
pop
lock
mov
imul
clc
ret
arpl
insl
inc
pop
mov
mov
inc
add
mov
std
lods
mov
hlt
sbb
dec
xlat
sub
push
clc
mov
cmp
add
add
in
jne
xor
pop
mov
jp
and
inc
repz
sti
icebp
sahf
bound
test
stos
or
stos
fadds
push
sbb
pop
rcrb
adc
std
dec
fwait
mov
sbb
outsl
stos
sahf
sbb
fmull
add
xlat
jle
mov
out
adc
inc
add
add
jmp
xchg
pop
sbb
cmp
push
add
mov
in
inc
add
or
stos
call
out
or
add
add
loopne
shll
mov
sub
sbb
fnsave
fadds
imul
mov
jb
mov
sub
sub
lds
in
or
mov
dec
mov
out
mov
imul
mov
lret
push
pop
movsb
sbb
lock
add
outsl
addr16
cmp
sbb
cmp
cli
xor
add
add
shll
add
add
sub
loopne
push
movsl
push
add
sub
mov
pushf
loop
sbb
add
cmp
movsb
push
mov
add
xchg
mov
jns
sub
add
add
loopne
add
ja
jl
add
add
mov
icebp
icebp
cmc
adcl
xchg
ss
in
stc
les
add
add
push
mov
lret
mov
xor
mov
xchg
add
aam
dec
push
xor
add
add
pop
into
fistl
shrl
xor
in
or
add
add
rcrl
jmp
cmp
sbb
ljmp
add
notl
je
cmc
jmp
test
sub
ret
sub
add
add
push
sub
add
add
sbb
movb
push
arpl
jns
addb
sbb
jl
aaa
hlt
fsubrl
cmp
fst
cmp
stos
inc
ds
imul
add
dec
les
inc
pop
loopne
push
sbb
enter
add
aas
mov
add
add
add
cmpsb
add
mov
sub
add
add
inc
cmp
insl
and
cmp
add
add
ljmp
and
test
add
add
add
repnz
andb
push
mov
add
add
addl
dec
inc
add
add
fcompl
dec
vrcpss
divb
add
fisttpll
dec
es
xor
and
add
add
sti
fcomps
add
mov
or
mov
mov
add
fwait
mov
or
add
add
jg
lret
loope
mov
jg
and
mov
inc
adc
sub
loope
into
decb
lret
sub
push
mov
add
mov
sarb
pop
fildll
cltd
lret
into
xchg
fisttpl
addr16
add
mov
push
icebp
mov
inc
add
mov
mov
shrb
add
add
out
add
add
add
iret
jg
aad
mov
inc
and
add
pusha
add
add
stos
push
inc
pop
idivb
cmp
subb
add
arpl
push
dec
add
inc
stc
jne
add
add
sahf
loopne
mov
and
mov
xchg
dec
aam
jb
hlt
loop
xchg
mov
test
pusha
add
add
ret
imul
in
xchg
pop
test
repnz
add
add
mov
xchg
mov
outsb
js
xchg
clc
push
sbb
and
call
mov
mov
add
add
sti
mov
out
imul
mov
ja
sbb
pop
pop
add
mov
push
jb
sbb
add
cwtl
sub
add
add
shll
sbb
and
add
add
iret
out
mov
xor
outsl
sahf
scas
das
pushf
ret
test
mov
add
icebp
xor
dec
flds
xchg
or
add
add
fcompl
cmpsl
aas
clc
mov
add
pop
popf
and
adc
mov
ficoms
dec
outsb
pop
jp
mov
fistps
jp
loopew
adc
sub
dec
add
add
test
mov
xor
ljmp
add
ret
add
add
and
enter
stc
inc
pop
xchg
inc
inc
jb
cmpsb
cli
or
add
add
add
add
adc
ss
add
add
add
in
add
mov
cmpsb
push
repnz
push
sbb
movsl
out
imul
push
push
mov
cmp
mov
jmp
popa
sub
add
add
out
sbb
push
loop
mov
add
mov
push
out
and
mov
mov
lfs
ffreep
addr16
dec
add
add
mov
add
add
mov
sbb
shrl
mov
dec
add
add
repz
jmp
xor
or
jno
or
mov
sbb
add
pop
jl
jp
jp
push
cmpsl
lock
add
mov
sub
repnz
add
cmc
cmpsb
push
push
imul
add
inc
mov
add
jne
add
push
sarl
fcoms
push
les
rorb
sbb
add
add
push
and
addr16
add
addr16
add
mov
lock
pusha
add
add
inc
and
fistpll
out
mov
mov
cmp
ds
add
clc
jle
push
inc
mov
aam
ror
fildll
add
pusha
add
inc
and
mov
out
divb
jl
adc
cmp
add
mov
into
pop
or
add
add
cmpsl
das
sbb
mov
out
cmpsl
sub
cmp
mov
mov
mov
cmp
sub
pop
mov
add
add
sbb
add
add
cmpsb
push
sub
add
add
jge
add
add
sub
lock
xchg
add
nop
stc
test
push
xor
or
adc
test
into
push
shrl
add
add
add
inc
bnd
fiaddl
sub
add
lret
inc
or
loope
aaa
faddl
lcall
lahf
arpl
push
pop
cmp
lods
cmp
inc
out
fildll
bound
add
inc
sub
jmp
push
movsl
inc
add
add
lods
jp
or
add
dec
push
cmpsb
dec
dec
add
cmp
aad
test
adc
bound
mov
ret
mov
mov
dec
add
fmul
push
jno
or
out
dec
add
add
dec
add
add
arpl
cmp
push
outsl
aad
push
pop
aad
xchg
jg
xor
jmp
out
pop
adc
mov
add
add
ss
out
xchg
bound
mov
add
add
mov
in
push
mov
cmp
roll
insl
and
add
je
sbb
add
and
xor
scas
pop
dec
pop
or
ret
sub
jno
cmpsb
pop
lahf
xchg
sub
add
add
mov
xchg
stos
pusha
add
adc
inc
add
add
mov
jmp
add
pop
push
pop
shrl
add
xor
or
pop
mov
add
add
stc
lahf
enter
in
sbb
pop
xchg
xchg
sbb
mov
stos
int3
mov
or
add
add
cmc
pop
pop
inc
push
mov
xor
pop
into
pop
dec
idiv
mov
mov
test
adc
int
push
test
jmp
loop
sub
pop
push
out
insb
add
add
add
sahf
popa
mov
pop
in
add
add
pushf
mov
rclb
lcall
pop
repz
test
pop
cmp
jno
imul
add
push
cltd
test
add
mov
add
lea
add
add
dec
sub
cmp
adc
adc
xchg
sbb
mov
test
adc
xchg
pop
cwtl
push
lahf
stc
pop
push
leave
in
pop
push
into
mov
adc
push
add
xchg
and
xchg
stc
xor
push
dec
dec
add
add
stc
sub
add
add
sahf
mov
mov
scas
dec
and
aam
call
das
add
mov
add
lret
data16
add
add
aad
jp
aam
fwait
adc
std
xchg
aaa
cmc
pop
xchg
aad
daa
bound
push
cld
dec
add
or
mov
add
add
jo
sbb
ljmp
add
add
add
add
xchg
iret
in
daa
cmp
aas
hlt
bound
jmp
loope
rcrb
addr16
mov
cli
call
add
mov
add
add
add
cmp
mov
xor
add
movsb
dec
daa
fcoms
inc
aaa
fwait
jecxz
adc
outsl
dec
add
add
in
rcrb
dec
jae
insl
xchg
pusha
add
add
outsl
icebp
adc
cmp
lods
inc
add
add
jno
stos
push
out
jp
aam
mov
lods
xchg
and
pusha
add
add
shll
movsb
push
in
fists
push
jle
popa
lar
stc
or
push
sub
add
add
rcll
cwtl
insl
repz
hlt
cld
lds
or
lds
push
ljmp
pop
mov
add
dec
add
mov
sbb
add
or
mov
add
inc
add
add
mov
mov
jmp
fnsave
div
xchg
xor
sti
inc
push
inc
or
add
add
into
mov
gs
xor
xchg
cmp
mov
bswap
movsl
push
outsl
scas
call
ljmp
call
test
push
lcall
mov
iret
shrl
add
add
add
add
insl
enter
hlt
xor
add
icebp
into
cwtl
movsl
clc
frstor
dec
sbb
stos
cli
mov
add
add
mov
or
and
cmp
out
jbe
add
add
add
js
dec
xorb
mov
jp
fsubrp
xlat
sub
dec
or
add
add
add
add
mov
pop
dec
add
add
call
add
xchg
pop
xor
or
mov
ja
pusha
add
fnstsw
mov
stc
sbb
movsb
mov
jbe
aam
jb
nop
xchg
icebp
xlat
dec
out
xchg
mov
out
jl
scas
xor
or
mov
xor
or
add
add
lock
add
outsb
js
popa
les
pushl
cmp
mov
scas
jns
xor
pop
xor
aaa
loopne
push
dec
and
dec
mov
add
sub
pop
sbb
cld
add
add
leave
xor
das
xchg
push
push
lea
movsl
lock
dec
add
lock
xchg
rorb
add
add
pop
popf
sub
mov
sub
cmpl
dec
add
add
in
ds
mov
push
test
add
add
add
add
add
add
pop
in
stos
std
stos
xchg
outsb
mov
jecxz
sarl
or
add
pushf
repnz
pop
je
jl
mov
add
mov
outsb
dec
add
mov
add
jmp
jge
jmp
pop
xchg
add
das
jnp
loope
or
adc
xlat
gs
mov
cmp
fucomip
mov
xchg
fildl
mov
dec
aas
stc
mov
mov
and
push
outsb
mov
sbb
mov
add
popf
pop
into
leavew
push
jle,pn
sahf
flds
add
xlat
jns
nop
and
add
inc
add
cmp
ret
sbb
fucom
popa
inc
add
movsb
mov
push
push
or
imul
pop
push
loop
or
push
jmp
mov
jbe
dec
mov
scas
push
popa
xchg
cld
ljmp
add
add
iret
dec
jmp
nop
loope
or
add
add
mov
jl
rcrb
std
in
jns
dec
mov
add
add
outsl
dec
add
add
leave
adc
sti
stos
movntq
out
pop
and
sbb
jns
lds
pop
mov
xchg
mov
fcompl
jecxz
pop
mov
add
add
movsb
lock
add
push
in
jmp
dec
sbb
dec
outsb
xor
push
pop
dec
add
mov
sub
mov
ret
jo
cmp
mov
aaa
pushf
clc
fidivs
push
out
pop
bound
fsubrl
scas
fwait
leave
mov
xchg
sbb
jmp
lahf
sti
push
movsb
out
sbb
or
lock
mov
sub
js
scas
in
xor
cli
mov
js
add
add
ret
jg
sub
add
add
leave
or
sub
add
add
sbbl
pop
and
mov
mov
add
xchg
xorb
add
fcmovb
imul
scas
sbb
stos
cld
push
lcall
inc
add
add
jne
ljmp
jg
daa
popa
or
dec
add
add
lea
pop
adc
mov
or
roll
add
shll
mov
lods
sti
mov
mov
pop
xor
adc
add
inc
and
dec
add
xchg
pop
xchg
lds
test
dec
fld
clc
push
cltd
dec
sbb
xchg
add
cltd
incb
fwait
mov
das
shlb
mov
push
adcl
xor
ja
imul
sbbb
xor
stos
sbb
push
mov
lods
out
fildl
push
ret
mov
in
push
call
sti
and
inc
repz
xchg
and
mov
add
add
pop
iret
andl
dec
add
pusha
add
add
add
ret
xor
add
lcall
cli
pop
loope
movsb
test
in
push
je
sub
mov
adcl
add
add
xor
cmpsl
lock
jg
sarb
ss
popa
cmp
inc
add
mov
add
add
data16
mov
rcll
sbb
add
add
add
into
addr16
clc
sub
loopne
adc
add
add
add
das
add
xchg
fldenv
pop
sti
popa
lods
push
je
orl
gs
cmp
add
add
pop
dec
iret
bound
mov
cltd
and
gs
xor
js
cmp
push
adc
daa
fildll
lds
imul
mov
xor
shlb
mov
push
adc
add
shlb
aaa
imul
or
push
ss
jmp
push
lahf
cmp
fwait
and
mov
mov
add
add
push
pop
aas
xlat
mov
repnz
mov
add
add
popa
xchg
pop
pop
pop
adc
adc
and
mov
out
arpl
sub
lret
push
xor
insb
add
add
fisubs
add
sbbb
add
mov
repz
or
mov
add
add
hlt
adc
jbe
sub
out
in
mov
out
jnp
jno
push
fcoml
and
add
jno
repnz
sub
mov
inc
or
add
add
mov
cltd
mov
mov
sub
add
add
add
les
or
mov
mov
cli
movsb
mov
inc
xor
jno
daa
iret
cli
jle
mov
sarl
dec
add
add
lret
in
stos
in
fldl
jnp
pop
aas
xlat
push
loopne
jle
pop
sbb
cld
sti
push
loop
add
add
sub
mov
mov
mov
je
push
adc
or
add
or
sub
add
add
push
pushf
xchg
mov
or
mov
jmp
add
jbe
sub
mov
add
add
adc
mov
pop
arpl
add
test
xchg
rcl
pop
ss
or
lock
lds
mov
add
cmp
mov
add
add
mov
aad
mov
xchg
adc
test
outsl
mov
add
add
inc
ja
dec
std
pop
cwtl
outsl
scas
aaa
jmp
outsb
sbb
add
mov
and
add
add
xchg
test
add
repz
add
add
add
adc
test
add
add
jle
mov
push
mov
xorl
mov
pop
pop
cmpb
sbb
cld
aad
out
outsl
fistl
fwait
jge
jg
iret
out
cmp
pop
mov
les
ret
out
inc
dec
lcall
mov
cli
sbb
add
int
mov
jne
jne
sarb
add
cs
sbb
add
add
bnd
adc
vsqrtsd
jne
add
add
mov
ficoms
add
add
sbb
daa
ret
sbb
shr
std
fnstcw
std
lods
jmp
push
ret
sub
add
add
add
mov
mov
add
adc
test
pop
jo
jmp
add
adc
adcl
fsub
test
stos
pop
mov
jmp
jo
mov
data16
add
add
adc
lea
in
jbe
add
add
es
cmp
cmc
jmp
xchg
arpl
addr16
in
or
sub
jae
pop
mov
inc
ret
mov
add
or
call
adc
add
les
or
jle
lcall
gs
in
xor
sub
mov
ret
cltd
aaa
add
mov
aas
mov
jmp
pop
es
shrb
inc
xlat
rol
add
add
sub
mov
mov
add
mov
aas
lods
push
sub
mov
fisttpl
jmp
in
scas
clc
cmp
add
mov
cmp
pop
enter
xchg
jbe
fdivr
pop
rolb
add
add
stos
jl
fildll
xlat
and
sub
add
out
cmp
icebp
jp
sbb
cmp
sbb
nop
std
sbb
pop
and
dec
jno
fwait
bswap
and
add
add
jnp
xchg
jecxz
sbb
push
rolb
out
mov
cmp
test
mov
jg
xor
insb
add
mov
add
xor
xchg
out
lods
lret
push
je
ja
fldenv
dec
xor
or
add
add
call
push
lods
mov
gs
repnz
jge
mov
add
add
add
add
imul
imul
stos
sbb
mov
int3
push
add
jp
sbb
sarb
dec
add
add
call
add
stc
aaa
push
dec
add
mov
mov
and
mov
or
movsl
add
pop
into
inc
add
push
mov
dec
ljmp
fidivrs
loope
push
das
lret
mov
jae
or
mov
add
mov
sub
jae
imul
sub
mov
xorb
mov
testl
pushf
jl
cmp
jb
loope
mov
xchg
dec
dec
sbb
push
sti
jle
push
cli
xor
sub
add
add
mov
add
imulb
mov
inc
add
add
add
add
test
jae
mov
dec
ljmp
inc
arpl
mov
hlt
lods
and
ret
subl
scas
cltd
push
jge
mov
out
and
lahf
imul
add
mov
ficoms
shll
pop
xchg
add
mov
inc
ss
or
mov
lret
fsubrl
cmpsb
add
add
out
aas
out
in
add
xchg
mov
or
ljmp
add
add
fcmovnu
adc
aas
les
daa
int
inc
add
lahf
aam
fstps
pop
imulb
add
push
je
xchg
cmpsl
movsb
jnp
ja
jl
scas
outsb
push
sbb
mov
sbb
add
add
insb
add
push
xor
add
add
cmpsb
jbe
pop
out
outsb
addr16
mov
mov
popa
les
jno
push
lret
ret
test
adc
aad
and
dec
jbe
pop
inc
stc
cmp
add
imul
push
xchg
mov
add
xor
pop
pop
and
add
add
ljmp
not
xchg
xor
gs
mov
add
add
cmp
aas
frstor
jne
arpl
cmp
jno
mov
xlat
jmp
push
out
mov
rcr
jmp
lret
mov
push
mov
add
sarl
xor
repnz
add
push
dec
xchg
int
mov
push
in
push
xchg
les
or
push
pop
int3
jbe
ss
movsb
jle
fadds
mov
imul
int3
mov
fcmovbe
fiaddl
lods
movb
mov
add
add
lret
add
add
and
sub
testb
stc
fdivl
add
xchg
dec
or
sub
add
add
movb
jae
dec
pop
insl
mov
lret
and
add
add
jg
mov
jl
fistl
ja
movsl
mov
jns
and
mov
data16
cld
push
mov
push
jle
mov
roll
add
add
xor
add
add
mov
data16
add
imul
dec
add
js
dec
out
or
and
mov
cmpb
add
push
nop
mov
lods
repnz
inc
shrb
add
sar
adcb
pop
xor
js
add
mov
mov
adc
fdivs
test
sub
add
add
cld
mov
add
add
nop
sar
jno
into
pop
pop
inc
cmp
add
jge
addb
hlt
addr16
popf
jle
jns
xor
xchg
icebp
cmp
bound
cmp
daa
ret
int3
mov
add
jl
pop
stc
pop
rcl
out
aad
jp
lods
lods
out
mov
ja
or
sub
lds
lock
xchg
jmp
inc
add
add
into
ficomps
add
add
mov
mov
pop
sbb
xor
add
sub
add
add
pop
out
rclb
cmp
test
and
add
add
cmp
add
ret
daa
jne
cs
add
adc
movsb
mov
mov
ljmp
mov
fcmovnu
inc
out
pop
push
mov
lahf
jno
loop
fidivl
out
data16
hlt
addr16
add
add
push
cltd
inc
add
mov
sub
mov
mov
xor
movsb
inc
add
xchg
xchg
bnd
cli
popl
cmpsl
repz
pushf
jmp
jnp
pop
rolb
jecxz
fwait
inc
add
add
push
adc
xchg
cmp
sbb
call
add
add
add
dec
sub
add
add
add
fwait
jmp
add
xchg
adc
aad
xlat
bound
fdivr
cmp
mov
gs
add
popa
test
add
and
inc
mov
or
ja
inc
test
dec
add
fdivl
mov
out
add
add
add
add
add
and
add
aam
add
add
add
popa
push
imul
add
orb
dec
mov
sub
mov
scas
cmp
mov
int
stos
das
bound
push
cli
popf
loope
and
and
mov
in
out
dec
movsb
hlt
test
repz
adc
or
xlat
add
adc
xchg
dec
xor
repz
and
mov
xor
add
sbb
add
sub
add
add
lock
jno,pn
add
pushf
stc
out
push
cmp
add
add
add
loope
fmuls
mov
ss
mov
mov
outsb
fisubs
or
xchg
jb
add
add
iret
popf
shrb
das
decb
mov
xchg
mov
or
add
add
scas
push
mov
test
sbb
push
jbe
xor
mov
int3
out
scas
xorl
imul
lock
add
add
adc
lods
das
test
xor
mov
xchg
jge
xchg
cli
fdivp
cmp
sbb
and
scas
lods
cld
lret
xor
xchg
test
add
add
add
add
push
mov
add
add
add
jbe
shll
add
out
popa
out
loope
mov
adc
push
fimuls
out
push
add
add
add
mov
mov
adcl
mov
sub
ret
repz
add
add
adc
mov
pushf
sbb
mov
jp,pn
pushf
mov
mov
mov
testl
aas
jns
pshuflw
xchg
repz
xor
add
add
shrb
add
add
add
sbb
add
negl
dec
shrl
insb
add
daa
cmc
subl
add
leave
insb
add
add
addr16
out
repnz
in
or
stos
mov
jecxz
sbb
add
add
pop
call
jp
or
test
cmc
aad
jle
sbb
testl
dec
in
mov
sbb
add
and
ficoms
cmp
lretw
aam
mov
mov
mov
rclb
add
add
sbb
sbb
insl
addr16
into
std
push
inc
js
pop
jnp
stos
sbb
add
or
add
add
and
add
add
cmp
xor
adc
add
add
arpl
fmull
mov
add
subl
push
cmp
pop
mov
dec
add
inc
sarb
sar
or
pop
jmp
or
fidivrs
adc
xor
push
push
clc
js
add
xor
arpl
or
add
add
outsb
sbb
or
ret
mov
ljmp
push
dec
ret
xchg
fwait
mov
xchg
out
test
sbb
mov
test
jp
adc
mov
data16
faddl
add
add
add
mov
add
mov
jo
mov
pop
or
add
add
jmp
pusha
add
add
adcl
add
mov
lret
mov
mov
add
add
pop
js
sahf
stc
push
jmp
out
jg
and
mov
pop
ja
add
decb
fwait
loop
mov
push
push
dec
mov
mov
loopne
pop
and
add
xchg
shlb
jle
add
add
mov
add
hlt
sti
xor
lods
fidivrl
xor
pop
stos
mov
cwtl
mov
adcb
jecxz
add
sub
add
add
add
add
stos
aad
xchg
jp
rcll
adc
subl
and
mov
jno
pushf
mov
movsl
lock
mov
sbb
lods
sbb
add
add
mov
add
add
add
mov
xor
push
int3
or
mov
sbb
mov
leave
push
pop
in
mov
and
imul
mov
ficoms
pop
outsl
add
jmp
outsb
push
mov
mov
sbb
imul
imul
or
and
mov
scas
insl
pop
cmc
xor
sarb
xlat
out
fsubrp
cmp
and
add
add
mov
dec
add
add
repnz
jo
mov
add
ljmp
sbb
repnz
lds
cmp
mov
push
adc
or
push
jl
push
push
mov
aam
push
fstpl
add
rcl
sub
sbb
add
add
lret
stc
dec
add
add
nop
adc
cmp
pand
imul
sub
add
add
or
add
add
add
xchg
mov
mov
daa
rolb
cwtl
push
repz
cmp
add
lret
inc
xor
add
xor
out
xor
add
add
into
dec
push
sub
and
movsb
mov
out
adc
sub
cld
popf
mov
ss
mov
pop
fsts
inc
add
and
cmp
aaa
mov
mov
sbb
add
fldenv
stos
into
push
fabs
cwtl
test
adc
fdivrl
xchg
push
mov
mov
mov
add
xor
enter
add
pop
add
ja
add
cmc
rorl
add
xchg
out
sarb
aad
notl
cmp
fidivrs
cli
in
pop
push
push
lods
lea
pop
lock
sub
mov
xor
stos
xlat
jb
gs
jmp
mov
add
adc
push
mov
fwait
aaa
mov
or
xor
add
add
std
mov
jb
mov
xlat
mov
sub
add
add
or
add
add
cmp
mov
out
stos
xchg
and
mov
data16
pop
mov
lds
adc
add
pop
outsl
lret
dec
dec
pop
xlat
nop
lahf
push
push
dec
and
dec
add
add
sbb
and
jp
test
cmp
push
lcall
add
xchg
fcomps
cs
push
inc
loopne
mov
fwait
in
pop
jae
repz
pop
icebp
imul
out
lods
pop
xor
push
fwait
mov
xchg
jns
xchg
xor
stos
mov
inc
xchg
sbb
add
mov
cmp
scas
jecxz
jle
mov
sti
rolb
in
in
popf
jo
sub
cmc
stc
or
add
push
orb
add
clc
pop
dec
fcomps
fsub
adc
mov
daa
inc
add
sub
jg
icebp
mov
pop
clc
jbe
cld
push
inc
push
bound
xchg
jo
add
add
aas
jmp
sbb
push
jge
dec
add
mov
lods
or
shlb
add
dec
inc
es
leave
fucomi
mov
int3
xchg
sahf
scas
mov
pop
sub
inc
add
add
or
jle
daa
xor
in
outsb
iret
adc
sub
mov
ret
js
insb
add
outsb
stc
pop
or
add
add
push
insl
xor
and
mov
andl
push
adc
jno
fiadds
in
jl
xchg
loop
add
add
cmp
mov
add
add
add
push
test
add
add
add
add
xchg
mov
add
add
push
inc
add
add
fld
and
mov
scas
jmp
je
jp
cmp
movsl
cmp
mov
fxch
pop
add
mov
xchg
mov
adc
xor
push
dec
add
add
aad
or
iret
mov
sbb
cmp
adc
adc
or
into
adc
insb
add
adc
insb
add
sub
jl
add
jecxz
int
push
or
mov
jnp
cmp
out
pushf
and
nop
cmp
enter
add
add
mov
pop
push
in
jl
jmp
add
mov
cmovne
xor
mov
adc
push
or
pop
sbb
mov
loop
stos
arpl
add
add
cmp
lods
dec
sub
push
push
es
cmp
mov
add
lods
add
xchg
fmull
add
add
data16
out
sub
add
push
sbb
ja
mov
insb
add
add
ret
and
pop
adc
ljmp
jl
repnz
aas
int3
pop
cmpsb
mull
sbb
popa
adc
jl
push
aas
or
fsubs
add
add
add
add
add
arpl
mov
add
sbb
cwtl
mov
lret
outsl
insb
add
ljmp
xor
stos
pop
pop
inc
sbb
inc
add
add
add
mov
and
and
add
mov
pop
cmp
lods
cltd
dec
jmp
add
xchg
ud0
mov
loopne
add
add
pop
sahf
cld
sbb
mov
dec
push
imull
mov
jbe
enter
and
add
add
add
lods
sub
fnstsw
push
push
pop
xchg
adc
jnp
and
and
mov
sbb
fsubl
stos
pop
call
addr16
add
mov
mul
add
pop
ljmp
add
pushf
shr
xchg
xchg
adc
pusha
add
mov
dec
in
lea
jmp
add
and
mov
cmp
add
add
rclb
mov
add
popa
orl
jo
mov
fidivrs
pop
cmp
add
add
lds
dec
mov
cmp
add
mov
sbb
addr16
push
lret
mov
stc
mov
mov
popf
mov
shll
scas
outsl
test
out
mov
dec
mov
faddl
les
add
add
popa
add
lret
adc
inc
push
stos
sub
mov
add
add
test
pop
mov
sbb
add
pop
xor
addr16
ljmp
sti
inc
add
sub
clc
add
mov
push
cmp
sahf
push
notb
call
inc
add
add
inc
adc
xor
and
sub
scas
xor
rcrl
fisubrs
mov
in
cwtl
add
jle
ret
inc
cmp
or
mov
cmpsb
lock
mov
sahf
adc
push
ljmp
dec
lret
insl
sub
add
add
xchg
add
pop
or
mov
mov
cmp
cmpsl
inc
or
add
add
lods
xor
inc
add
add
cmpl
test
jo
and
pop
or
push
into
ljmp
mov
mov
hlt
pop
push
jl
sahf
imul
cwtl
jl
jge
je
xlat
and
or
mov
fldenv
leave
inc
ljmp
enter
data16
jmp
sub
add
add
add
add
fbstp
not
das
push
xchg
repz
sahf
mov
shlb
mov
xchg
es
add
inc
add
fldcw
add
add
or
pop
out
lea
into
adc
pop
cltd
addl
xor
aaa
pop
sahf
faddl
repz
add
add
cli
divb
subb
push
outsb
pop
in
adc
outsb
pop
insl
test
and
xchg
sbb
popa
outsb
inc
add
sbb
and
add
in
lea
leave
in
sub
clc
into
pushf
mov
popf
or
fistpll
adc
stos
mov
lahf
add
sbb
add
add
jmp
mov
push
add
scas
push
mov
int3
adc
mov
out
repz
xchg
jo
bound
les
test
add
es
adc
add
add
add
or
jbe
sbb
or
add
add
inc
add
adc
cmp
xchg
xchg
iret
jg
aad
popa
fisubrs
mov
hlt
xchg
cmc
vmovapd
sub
add
add
fdivrl
out
insb
add
mov
push
scas
and
shrb
add
mov
cmpsb
sti
dec
add
add
into
mov
orl
xorb
sub
subps
sub
out
movsl
jmp
add
add
add
and
dec
add
mov
push
notl
int3
and
jbe
loop
jl
adc
arpl
push
ret
sbb
ror
movl
aam
shrl
add
add
cmp
jl
mov
movsb
cltd
pop
push
je
in
je
sub
lret
push
xlat
add
xor
adc
add
or
mov
jnp
add
outsl
repz
push
outsl
imul
add
add
add
add
add
add
arpl
adc
mov
add
add
negl
repnz
xor
sub
cmp
add
sar
add
add
movsl
sbb
add
add
adc
je
call
sahf
outsl
mov
rclb
mov
pop
int3
stos
dec
add
xor
pop
sti
notb
aas
inc
cmp
mov
push
lds
stos
adc
add
add
add
mov
jns
mov
add
ss
add
add
add
mov
aam
xchg
xchg
inc
fadds
mov
ljmp
fdivr
lock
jno
hlt
mov
add
call
sub
mov
inc
add
iret
dec
cwtl
daa
rcr
xlat
popa
xor
xchg
sbb
or
add
mov
push
loope
add
add
jle
ss
aad
popf
rolb
mov
add
rcrl
cltd
daa
push
push
and
test
push
cmpsb
fisttpll
push
leave
sar
sub
add
add
pop
sbb
add
add
test
loope
imul
in
or
add
add
xorl
xchg
mov
stc
mov
sbb
add
insl
dec
mov
inc
pop
xor
rcrb
add
add
clc
repnz
add
add
insl
bound
sbb
loopne
pop
pop
stc
push
icebp
jp
lods
das
mov
roll
xor
sbb
add
jecxz
xchg
sbb
sti
push
mov
and
clc
dec
add
add
push
nop
add
rolb
add
add
push
or
loopne
add
push
outsl
ret
aas
popa
lcall
out
ja
lcall
add
push
pop
lods
jb
xchg
cmpsl
jmp
mov
inc
fidivrl
outsb
imul
cmp
jp
sti
jl
mulb
add
add
sbb
push
pushf
popf
adcl
insl
icebp
push
pop
fcomps
sbb
in
sub
or
mov
inc
jnp
sti
cmp
outsl
hlt
add
jg
rorl
mov
add
add
dec
mov
dec
cwtl
sub
sub
mov
push
cwtl
mov
popa
fistpll
jbe
and
mov
scas
divb
adc
xchg
sahf
lret
out
repnz
cmp
popa
jecxz
add
add
push
add
add
add
add
sub
mov
ja
mov
add
add
pop
fmul
popf
mov
fldcw
lock
sti
mov
add
add
xor
xchg
lea
add
add
mov
xchg
xor
adc
daa
adc
fnstenv
add
insb
add
shrb
add
and
mov
cli
shr
xor
imul
cld
mov
std
or
mov
shll
vxorpd
adc
nop
cltd
fld
in
cmpsl
adc
ja
jle
leave
std
scas
rorl
mov
repnz
imul
cwtl
cwtl
dec
xchg
sbb
mov
fldl
jg
je
dec
add
push
insb
add
add
ret
sarb
add
mov
dec
add
add
jle
add
pop
or
stos
ret
jle
cmp
pop
push
loop
add
add
xchg
cmp
add
add
mov
add
add
add
out
inc
add
dec
pop
jno
cmc
sarl
add
add
add
add
add
shl
sahf
repz
ja
repnz
je
or
pop
pop
aad
ret
add
add
repz
add
add
push
mov
add
add
xor
enter
add
add
jmp
mov
inc
add
xorl
add
fistpll
add
push
iret
insb
add
add
add
sub
mov
jp
sub
lcall
add
dec
lds
cmp
lds
out
cmp
add
and
mov
mov
aam
xchg
es
push
mov
mov
scas
repz
and
xor
add
cs
add
add
cli
std
repnz
imul
sbb
add
out
xchg
das
push
cwtl
sti
adc
xchg
out
cmpsl
pop
out
push
pop
inc
arpl
add
jge
inc
add
add
fwait
mov
leave
arpl
add
pop
cmp
or
add
add
shrl
cld
pop
add
add
add
add
add
jns
sub
test
lret
test
test
mov
jg
cmp
xlat
cmp
pop
divb
idiv
inc
jecxz
add
hlt
aaa
add
shl
xor
adc
inc
mov
xchg
xor
cmpsl
insb
add
add
js
js
mov
xor
jmp
add
outsb
and
mov
movl
dec
add
add
jl
out
adc
mov
add
test
mov
mov
add
mov
push
xchg
add
mov
add
mov
add
add
in
ss
add
rolb
loope
cmpsl
inc
add
xchg
loope
or
mov
adc
ds
add
scas
adc
aam
aas
sub
sbb
addr16
and
pop
fwait
cmp
xor
loopne
fdivr
pop
pushf
movsb
xchg
pop
jl
clc
mov
inc
cmp
mov
dec
ss
or
mov
and
add
add
insl
xor
scas
pop
pop
and
rclb
fiadds
add
add
push
aas
xor
xchg
add
imul
xchg
int
adc
popa
fnstcw
push
mov
insb
add
xchg
scas
cld
cld
aad
jb
xor
in
cmp
add
add
add
add
int3
int
add
add
sbb
pop
sub
mov
pop
lcall
push
cwtl
iret
out
mov
add
rcl
jnp
popa
jg
nop
dec
add
add
jle
jecxz
cwtl
inc
je
pusha
add
add
out
push
push
xor
outsb
inc
leave
imul
mov
jo
pop
loop
and
mov
insl
jl
mov
xchg
stos
sbb
mov
xchg
push
push
and
xor
mov
fildll
add
daa
mov
insl
fwait
ja
mov
add
pop
popa
sbb
add
add
mov
add
add
add
cs
jne
jb
fisttpl
add
add
rcrl
adc
add
add
mov
add
repz
pop
dec
leave
add
xchg
js
add
add
dec
dec
lea
aas
ljmp
add
add
add
add
jae
or
adc
mov
add
in
loop
mov
clc
mov
es
mov
xchg
in
xor
adc
push
xor
fcoms
sbb
lcall
pop
cmp
sbb
add
add
pusha
add
jmp
mov
adc
or
lahf
jae
sub
dec
push
std
cltd
in
cs
jne
fstpt
dec
ss
inc
jae
cmp
std
mov
mov
add
add
flds
mov
repnz
mov
pop
leave
test
out
outsl
mov
add
out
dec
adcl
ja
or
add
add
jg
nop
xchg
xchg
push
lahf
cli
sarb
jb
cmpsb
xchg
sbb
add
add
xchg
add
add
add
add
add
add
inc
insb
add
add
pop
inc
fisubrs
push
sub
ror
lods
rorl
mov
dec
movsb
pusha
add
or
and
mov
jno
sbb
adc
add
sbbl
inc
leave
mov
outsl
dec
mov
cltd
mov
nop
add
aaa
rolb
imul
mov
lock
icebp
repnz
mov
add
add
jo
mov
shlb
add
add
add
mov
popa
sarl
add
add
fsub
pop
add
add
mov
pop
sbb
iretw
dec
sub
std
mov
jg
add
add
scas
pop
arpl
fstl
lock
nop
cmp
cmpsb
cmp
or
aad
xor
add
add
das
mov
ja
insl
xchg
inc
inc
add
add
mov
push
fcoms
pop
jl
mov
add
in
iret
movl
and
add
add
js
add
pop
inc
das
out
in
or
xchg
pop
push
jg
bound
add
add
sbb
add
add
rcl
rcll
pop
mov
add
mov
adc
loopne
shrl
add
add
lea
add
add
pop
pop
nop
rclb
out
inc
int
mov
inc
icebp
les
pop
fwait
xor
add
add
call
add
les
cmp
add
and
cld
arpl
pop
das
into
and
mov
adc
cld
mov
test
enter
add
sub
scas
jecxz
dec
add
add
mov
and
cmp
fcoml
add
add
idivb
dec
adc
or
add
add
dec
jae
adcl
xchg
ds
xchg
mov
and
or
aaa
mov
and
jno
inc
lea
mov
mov
repnz
fdivrs
nop
sub
inc
add
add
pop
icebp
add
cwtl
cmc
add
rolb
mov
mov
movsb
jecxz
push
push
mov
add
lods
test
inc
int3
es
sbb
fwait
mov
fsts
add
lea
shlb
add
jne
xor
push
dec
mov
stc
add
outsl
lock
pop
jo
xchg
fisttpll
mov
add
add
mov
mov
push
adc
push
je
repnz
movsb
push
cli
adc
stc
sub
lds
js
mov
sub
scas
les
mov
mov
sub
add
add
xor
fstpl
std
insb
add
inc
add
mov
add
add
push
lret
les
sub
popl
adc
vshufps
jg
or
add
add
xchg
mov
sub
add
loop
jno
sbb
add
das
popa
outsb
std
nop
enter
into
shl
add
xchg
cmc
jmp
movups
ja
aaa
sub
add
add
mov
push
ja
mov
add
mov
lock
add
add
jno
repnz
stos
jmp
jecxz
aaa
jecxz
add
add
cmp
cmp
push
xor
jmp
xchg
add
cmp
push
or
add
add
lods
xchg
pushf
and
imul
inc
mov
aas
and
mov
xor
cld
pushl
fmul
aad
in
mov
jg
div
jne
mov
inc
cltd
mov
lods
ja
subb
in
mov
mov
in
lds
add
mov
ss
xchg
mov
pop
orb
fnstsw
jge
rol
sarl
and
in
cmp
imul
add
add
fdiv
ret
push
movsb
sub
add
add
flds
aas
adc
push
arpl
arpl
sub
repnz
aam
xchg
lea
add
js
mov
adc
xchg
dec
sarl
jno
add
add
add
mov
mov
sbb
add
es
jnp
lret
cmp
in
push
push
add
add
add
mov
dec
push
js
cltd
popa
push
inc
cmp
js
pop
sub
out
sub
add
add
and
sahf
push
mov
push
mov
fldl2t
out
jle
orb
inc
add
aas
pop
mov
cmp
int
jg
add
add
scas
movsb
test
add
add
or
mov
lret
push
pop
inc
add
adc
scas
ja
sbb
aad
popa
dec
mov
es
add
add
arpl
adc
lret
xor
add
add
add
test
push
jge
xor
jg
mov
add
inc
clc
aad
sbb
inc
add
subl
add
inc
cmp
push
push
scas
incb
testb
jbe
and
dec
pushf
jno
cld
out
mov
mov
mov
aam
jnp
xchg
ret
mov
insl
xor
cltd
aas
adc
adc
add
add
add
jns
mov
lret
popf
xchg
add
mov
adc
lret
mov
and
cmp
lahf
xor
into
pop
sbb
popw
jb
inc
test
pusha
add
mov
sahf
cmpsb
rorl
inc
arpl
xchg
push
push
int3
and
daa
push
mov
adc
aad
sbb
add
pop
xor
add
sbb
sbb
cmp
add
ja
sbb
mov
pop
test
adc
pop
dec
ds
sub
call
add
add
sub
add
hlt
sub
xchg
stos
dec
pusha
add
add
dec
testb
divb
push
mov
sbb
hlt
enter
mov
dec
movsl
fcmovbe
inc
xchg
cs
xor
je
jg
hlt
cmc
mov
das
outsb
out
sbb
dec
jp
push
popf
adc
lret
scas
and
mov
mov
sub
add
add
xor
movsb
sarl
xchg
push
test
test
and
pop
adc
cs
mov
dec
mov
jns
jecxz
nop
stc
adc
mov
outsb
add
add
add
add
add
xor
add
mov
mov
push
sub
add
pop
ficompl
dec
fisttpll
pop
and
sub
int
mov
shll
in
jns
mov
jo
and
adc
jno
stos
jg
out
sbb
or
insb
add
cli
xchg
aaa
cld
jb
add
add
inc
sbb
ss
shrb
mov
add
mov
insl
fisttpll
pop
cvtdq2ps
add
sub
stc
dec
ret
dec
loopne
fnstenv
cmp
jecxz
addl
sbb
push
push
sbbl
add
add
add
add
jo
mov
push
incl
add
stos
xchg
daa
je
fwait
sub
mov
xor
rorl
add
xor
lds
push
push
ss
test
sub
inc
movsb
mov
mov
and
mov
nop
mov
je
stos
mov
out
pop
cmc
lea
and
add
add
jecxz
in
nop
in
jecxz
push
dec
add
mov
mov
ret
mov
mov
sub
mov
sub
or
add
add
add
add
fnstenv
out
shlb
mov
call
leave
das
xchg
cmp
add
add
add
aas
dec
add
mov
hlt
jmp
sbb
shr
mov
add
add
jmp
cmp
outsl
push
push
dec
add
add
popa
in
sarb
divl
dec
mov
jo
das
xchg
and
mov
add
dec
add
add
push
cs
sahf
mov
sub
je
add
add
roll
pop
adc
add
add
add
add
add
out
pop
mov
add
mov
cmpsl
push
add
add
add
and
mov
popa
adc
outsb
sub
add
add
jno
jp
shlb
add
dec
test
sub
xchg
das
jp
popa
sub
sbb
out
sahf
into
mov
jo
cmp
out
and
dec
add
add
mov
out
jmp
add
add
add
and
jp
or
mov
add
add
jl
out
cmp
cmp
jle
insl
inc
std
inc
clc
sub
pop
imul
or
adc
sbb
jl
xchg
data16
add
add
in
cmpsb
cmp
add
int
adc
ret
sbb
jecxz
lock
add
add
xlat
in
dec
out
lock
int
cmc
push
xor
add
add
sbb
es
sbb
jns
add
call
pop
dec
mov
sbbb
xchg
xchg
imul
add
pop
cmp
mov
push
int
push
imul
ljmp
gs
adc
add
add
add
and
add
add
add
add
movsl
push
pop
dec
add
add
or
add
add
mov
cs
iret
pop
movsb
es
add
mov
jecxz
mov
loop
repnz
out
add
add
imull
imul
jne
mov
sti
push
sbb
xor
out
stos
loopne
dec
into
dec
in
xchg
into
pop
in
pop
jne
jb
sub
add
add
ret
mov
aas
xchg
fdivrl
xor
test
jne
lcall
add
jne
add
add
add
pop
insb
add
add
lcall
jns
push
sbb
aam
fwait
lahf
xor
jb
movl
test
xchg
adc
adc
xchg
xchg
mov
outsl
dec
add
add
ja
pop
rcll
add
mov
icebp
sti
push
pop
outsl
movsb
fwait
aas
sti
popf
sub
add
sbb
mov
add
test
xor
mov
in
mov
and
imul
add
ret
add
add
add
ds
pop
lcall
cmp
les
in
inc
add
cmp
aad
mov
data16
mov
xor
inc
sahf
pop
leave
jns
add
add
mov
lret
lahf
inc
cmp
xor
andl
add
pop
add
sub
push
pop
push
test
fwait
out
lea
loope
push
sub
jecxz
dec
mov
add
xchg
dec
mov
push
push
aam
xchg
sub
or
xchg
loopne
add
add
ret
inc
dec
add
add
push
inc
mov
cmp
cmp
push
push
mov
jbe
cs
test
dec
add
sbb
ss
daa
movsb
adc
fwait
sub
xchg
lock
iret
cmpsb
mov
jge
les
int
inc
add
negb
inc
add
add
cmp
mov
add
add
sbb
mov
add
pop
fldt
call
jns
loope
jb
push
mov
pop
fildll
mov
es
lods
mov
loope
inc
mov
add
ret
lods
cmp
sbbl
mov
jbe
xchg
cmpsl
in
cmp
add
add
outsl
movsb
lret
mov
add
add
mov
mov
add
jecxz
add
add
add
or
mov
mov
inc
add
mov
cmpsl
rcrl
bound
add
mov
mov
pop
jp
sbb
out
add
add
js
outsb
ds
add
add
cltd
fsub
fldcw
and
and
add
cmp
add
or
test
out
push
sahf
fsubs
push
push
neg
and
add
add
xchg
xchg
jge
add
xor
jg
sbb
popa
push
shll
leave
pop
cmpb
mov
add
add
adcl
sbb
add
call
add
iret
inc
or
add
dec
xor
mov
mov
add
add
pop
jmp
add
cmp
iret
fdivl
pop
mov
cs
dec
jns
lods
add
shl
add
insb
add
add
stc
dec
imul
jo
jmp
cmpb
push
stos
fbstp
sub
add
add
dec
repz
ret
rcll
fisubrs
add
add
lahf
js
xor
pop
into
lods
sub
mov
pop
mov
inc
jnp
cld
pop
xor
ja
adc
sub
popf
add
mov
sub
add
mov
lea
fistps
add
add
punpcklbw
add
add
adc
enter
cmc
jecxz
inc
push
js
lds
or
mov
imul
sbb
add
insb
add
mov
imul
sbb
mov
test
add
add
add
cmp
stc
pop
adc
xor
sbb
je
jmp
test
jmp
pop
cmp
add
mov
add
jo
jg
lods
and
add
add
sub
pop
xor
mov
sbb
enter
ror
push
push
sbb
test
popf
xor
mov
adc
mov
inc
mov
mov
lahf
dec
out
push
scas
mov
mul
imul
push
add
mov
add
add
push
or
mov
jbe
clc
sub
jmp
in
int
cmpsl
imul
add
mov
stos
shrl
dec
cmp
outsl
in
lcallw
jbe
push
mov
fidivrs
add
shrb
cmp
cmpsl
add
mov
std
cmp
cs
out
cmp
mov
add
sbb
int3
ljmp
add
add
add
add
push
dec
add
mov
dec
add
add
jmp
aam
or
pop
xor
add
mulb
add
adc
hlt
scas
inc
repnz
add
mov
int
mov
add
cmp
cmp
aaa
pop
ficompl
cmp
sbb
jmp
pop
fdivs
xchg
cmpsl
dec
add
dec
jbe
ret
cli
in
or
add
add
outsb
pop
mov
and
das
cwtl
cmpsb
ret
lahf
sub
and
lea
div
or
dec
add
add
sbb
mov
push
mov
xchg
push
iret
lock
ds
jl
mov
ljmp
sbb
popa
cmpsl
shrl
xchg
shll
add
testl
jle
xchg
lds
add
add
pop
cmpl
outsl
add
xor
pop
mov
popa
mov
pushl
jno
repnz
pop
jecxz
add
add
mov
fwait
out
push
imul
add
es
aaa
movsb
add
dec
add
adc
add
cmp
ljmp
cmp
cmp
fnstenv
adcl
xchg
sub
add
call
les
or
push
sbb
or
daa
jbe
xchg
mov
shl
aam
add
or
add
add
mov
add
scas
mov
or
and
mov
push
jp
push
cmc
lods
ja
cmp
mov
int3
cwtl
bound
add
ljmp
mov
ret
daa
sbb
and
pop
mov
clc
mov
lea
add
mov
mov
add
fisubrs
cmp
mov
decb
je
xchg
xchg
sar
xor
sub
add
add
add
add
xchg
aas
outsb
addr16
loopne
mov
xlat
pop
and
add
add
lret
adc
xchg
test
les
shl
mov
cmpsb
out
orb
add
or
mov
xchg
outsl
shll
mov
add
sub
icebp
fisttpll
test
xor
pop
mov
pop
cmp
sbb
adcb
jmp
inc
add
add
lahf
inc
add
inc
add
add
jg
add
add
cmp
mov
in
js
mov
pop
scas
clc
add
mov
mov
shl
mov
int
inc
dec
dec
and
mov
cli
sahf
fwait
add
xor
add
add
out
xchg
push
adc
sbb
xchg
mov
mov
movsb
repz
xchg
sub
adc
add
add
mov
add
sub
add
outsb
dec
dec
testl
cmpb
mov
mov
mov
int3
call
push
jmp
push
scas
bound
cmc
cmp
lcall
cmp
and
mov
out
out
add
xchg
dec
call
and
add
add
jo
pop
or
cmpsl
scas
push
mov
es
ficomps
add
mov
adc
jle
and
outsl
and
add
add
sub
add
add
lret
cld
cwtl
lods
push
mov
lea
repz
add
les
push
test
notb
jnp
inc
add
add
les
orl
or
mov
sbb
adc
jns
inc
add
add
test
enter
loopne
xchg
fldl
jp
sub
in
xor
insb
add
jae
fwait
loope
scas
jle
idivb
loopne
mov
sahf
push
lahf
jle
cmc
xchg
push
popf
movsb
adcl
psubw
dec
mov
fidivl
stos
push
ljmp
sysexit
mov
les
xor
add
nop
in
push
test
add
add
cltd
int3
shr
xchg
lcall
sahf
sub
scas
insl
jne
and
mov
jge
jmp
sti
leave
xor
inc
xchg
cmpb
xor
add
add
pop
dec
add
sub
xchg
sahf
pushf
lods
push
aam
inc
mov
xor
vphaddubd
push
sbb
aam
lahf
xchg
orb
add
adc
add
clc
jb
std
jl
cmpsl
xor
cltd
jmp
dec
cmp
push
cs
xchg
push
lahf
mov
cmpsl
push
into
push
push
dec
jge
adc
sti
or
jg
lds
jecxz
stos
add
mov
std
movsl
xor
fwait
jmp
call
imul
aaa
sti
pop
adc
jb
sbbl
and
inc
add
add
popf
xchg
fnstsw
adc
or
mov
sbb
add
add
add
add
mov
mov
sbb
sub
mov
mov
push
out
aad
xor
jnp
jo
mov
cmp
cmp
incb
lods
idivl
add
or
add
add
add
in
add
lods
gs
xchg
jbe
mov
outsb
insl
cmp
push
mov
or
inc
add
push
imul
int
xchg
xchg
mov
loope
or
mov
or
jo
mov
push
clc
fwait
push
sub
sub
mov
jbe
test
pop
stc
mov
loope
rorb
mov
sbb
lods
rolb
outsl
insb
add
mov
mov
incb
add
add
add
mov
test
push
adc
xchg
or
and
add
add
add
adc
mov
push
repz
add
pop
adc
repz
xchg
xor
aaa
push
inc
add
pop
imul
leave
mov
aaa
insl
ja
push
cmp
insl
daa
outsb
inc
punpckldq
pushf
mov
add
add
mov
lods
xchg
push
mov
pop
jl
push
add
add
add
pop
ds
iret
pop
jb
leave
rolb
popa
xorb
hlt
cltd
push
xchg
mov
inc
dec
xor
loope
pop
or
cmpsl
in
xor
fldenv
add
inc
jae
push
add
pop
push
mov
adc
loope
inc
jne
or
add
and
mov
dec
push
sbb
sahf
aam
lahf
push
inc
std
mov
add
add
dec
or
add
add
mov
push
add
addr16
stc
pop
fstl
mov
adc
adc
loope
test
add
es
lret
mov
leave
scas
outsl
repnz
and
repnz
push
test
push
pop
sbb
cld
inc
cmp
lret
mov
dec
pop
ret
push
test
mov
pop
aad
xchg
and
fld
icebp
cmp
lods
add
mov
repz
shll
inc
into
mov
add
push
add
cmpl
fidivs
dec
add
mov
addl
jbe
gs
and
add
test
add
add
lods
int3
imul
enter
mov
aas
roll
xchg
mov
mov
inc
pop
mov
pusha
add
add
movsl
lds
adc
fldl
jg
pop
aaa
cmp
mov
mov
push
cs
clc
sbb
sarl
sbb
xor
outsl
push
lods
mov
push
xchg
dec
add
add
sbb
mov
fistpll
fstpt
pop
pop
push
test
add
mov
pop
sub
add
leave
rcll
mov
data16
aad
jns,pn
cmc
pop
dec
into
dec
cmp
clc
adc
mov
mov
mov
mov
add
pop
fsts
sub
add
add
stos
sbb
test
mov
shll
stc
or
imul
aam
add
das
adc
add
add
add
orl
mov
rclb
add
movl
jmp
lcall
pop
outsl
push
cmp
or
add
mov
mov
xchg
pop
lahf
dec
test
xor
xchg
mov
inc
adc
add
jg
add
add
xor
push
scas
arpl
in
lea
or
add
add
shll
xor
pop
adcb
pushf
jle
lcall
xchg
imul
xor
and
je
add
out
clc
pop
mov
mov
xchg
or
pop
sti
mov
add
add
cltd
cli
outsb
leave
ja
or
jmp
add
aaa
out
ret
dec
push
inc
add
add
jle
add
add
add
mov
call
gs
add
add
pusha
add
add
je
leave
loopne
sbb
loop
cmp
mov
daa
scas
jbe
vmovmskps
adc
fsubr
je
pop
scas
nop
push
in
fstpl
je
xchg
pusha
add
add
aad
insb
add
add
or
mov
ret
icebp
movb
mov
test
xor
insl
pop
lcall
xor
clc
push
xchg
outsl
push
jecxz
leave
lods
push
and
add
add
fildl
mov
in
int3
push
in
mov
mov
mov
add
jno
shl
aas
scas
pop
stos
pop
adc
pop
pushf
pop
cmp
add
mov
push
adc
daa
dec
add
add
pop
sbb
aas
pop
jae
or
sar
lea
scas
call
jle
in
popf
sbb
int3
and
pop
adc
mov
xchg
movsb
gs
aaa
cmp
xor
mov
iret
jo
pushf
sahf
xchg
adc
mov
xchg
jl
js
mov
add
add
or
add
add
mov
mov
add
loop
add
add
push
stos
pop
adc
add
lods
mov
pop
loope
dec
decb
mov
fsubr
scas
pushf
sub
mov
add
add
imulb
mov
dec
lds
mov
data16
mov
pop
imulb
cld
aas
jl
movb
add
lret
sbb
rcrl
pop
xchg
mov
jp
aam
mov
pusha
add
and
nop
mov
out
or
mov
sti
mov
mov
add
add
cld
lock
jp
daa
dec
xchg
aaa
or
add
add
dec
push
js
mov
cmpsb
fimuls
jp
lods
pop
lahf
mov
insl
pop
or
mov
pop
test
xlat
fcoml
aaa
es
out
fdivrl
cmp
xchg
les
push
outsb
mov
jae
xlat
pop
std
jle
cmpsl
xchg
fnstenv
add
add
gs
dec
mov
lret
sbb
add
cmp
add
or
mov
lcall
mov
add
stos
cmp
imul
sbb
ret
push
ja
lds
scas
push
stos
xchg
addr16
test
add
mov
test
add
add
add
int3
push
ss
mov
sbb
rcll
imul
add
scas
jecxz
add
add
jae
in
fstl
add
add
outsl
and
sti
mov
add
bound
call
pushf
and
add
add
mov
nop
shl
fisttps
ljmp
sub
add
add
add
ret
dec
sub
lcall
jmp
inc
test
cwtd
adc
int3
loopne
lea
add
add
jns
push
add
mov
lret
jle
mov
add
add
mov
push
sbb
xor
xlat
or
sub
mov
mov
nop
push
and
mov
jo
nop
mov
pop
xor
mov
inc
mov
stos
cmp
into
je
lahf
fstpt
add
test
sbb
dec
popl
mov
xchg
dec
push
adc
pop
addl
add
add
mov
jecxz
arpl
arpl
add
add
pop
into
sub
add
mov
and
daa
rcll
mov
sub
shrl
bound
pop
fsubrl
outsb
mov
add
or
push
lahf
xlat
fildll
cmp
xor
imul
aam
loope
divb
cmp
icebp
or
mov
lret
xchg
das
inc
add
add
add
test
daa
push
popf
pop
sub
inc
ficomps
data16
mov
dec
push
jg
mov
xchg
add
cmp
xchg
call
fmuls
outsb
push
pop
sub
cltd
inc
add
or
adc
add
add
add
ds
outsb
sbb
push
mov
cmpsl
int
mov
mov
xchg
jno
mov
add
mov
jo
pop
jns
outsl
mov
outsb
fldenv
mov
add
add
test
or
or
scas
ret
repz
mov
add
mov
add
sbb
push
adc
pop
test
sub
sahf
incl
mov
or
push
lds
fnstsw
push
mov
pop
fimull
add
pop
addb
pusha
add
add
sub
add
cmpsl
push
fsubs
add
add
leave
test
push
idivl
add
xchg
jb
add
add
imul
xchg
add
inc
add
add
cmp
mov
xchg
icebp
xchg
jne
sbb
dec
out
rcr
add
cmp
das
ljmp
add
add
loop
push
mov
add
sarl
xchg
pop
jnp
jb
outsl
insl
xchg
sbb
mov
test
dec
add
add
into
push
xchg
mov
xchg
std
cltd
lods
cmp
sbb
add
out
adc
add
sbb
loope
movsl
je
xchg
jb
xchg
xor
in
test
mov
mov
sub
mov
sub
add
add
mov
loop,pt
sti
test
pop
scas
scas
sbb
mov
int
mov
pop
mov
loope
jbe
add
add
bnd
stc
movsl
ret
adc
push
out
mov
fsubl
jge
or
movsb
xor
lods
rolb
add
out
lret
push
sbb
ret
jle
cmp
add
add
call
shlb
mov
add
andb
add
add
in
repnz
ffreep
mov
int
adc
faddl
jl
mov
sahf
xlat
push
xchg
push
pop
out
lret
bound
int3
stos
aas
dec
add
add
rol
xchg
cwtl
jnp
fcomp
orb
jae
in
add
sahf
pop
mov
or
movsl
add
test
ret
std
aam
mov
xor
movsl
clc
sbb
sbbl
call
add
push
add
test
add
pop
jmp
lret
outsl
xchg
imul
xchg
js
mov
cld
inc
push
cmp
pusha
add
lahf
fmuls
xor
add
add
xor
dec
jnp
add
cmp
scas
decl
mov
int
push
mov
lea
add
lret
mov
sub
sahf
cmp
sub
jp
and
je
ret
es
mov
mov
add
sub
xor
testb
push
push
mov
fwait
xchg
aam
xchg
xchg
sub
add
std
push
inc
mov
ret
stos
xchg
aas
adc
lret
movsb
xchg
xchg
fidivl
add
dec
add
add
aaa
je
mov
nop
and
test
add
add
or
add
add
dec
into
cmc
or
pop
jo
stos
lret
mov
add
insl
insb
add
add
shll
adc
or
sub
and
add
add
aam
fistpl
arpl
add
jne
jle
dec
jo
mov
fnstcw
and
add
add
add
add
add
or
fistpll
sub
test
hlt
jo
popa
lea
data16
sub
test
add
add
add
nop
cs
mov
and
mov
push
outsb
push
jle
ud1
add
imul
daa
inc
add
add
fsubp
andb
idivb
xchg
shlb
pop
or
mov
aad
add
mov
in
jae
pcmpgtd
ror
loopne
int3
mov
cmpsb
aaa
xchg
in
icebp
jl
inc
add
mov
loope
sub
cmp
nop
mov
add
push
xlat
jns
lret
cmp
fldl2e
mov
sbbl
mov
fimull
into
push
xor
jecxz
iret
add
add
or
mov
jp
pop
es
push
stos
mov
stos
les
add
add
enter
imul
and
add
add
add
add
adc
and
add
add
mov
sub
mov
loopne
dec
add
add
lea
cmc
into
mov
add
jmp
add
mov
jae
fnstsw
pushf
movsb
xchg
sbb
mov
pop
int3
stc
mov
add
add
mull
add
and
loopne
lds
int3
mov
add
add
mov
cs
push
les
fcmovb
aad
add
add
jns
call
add
mov
sub
jp
push
fisubrs
sub
mov
dec
push
mov
bound
cmp
sbb
icebp
push
sahf
mov
push
sbbb
ja
xlat
xor
stc
cmp
inc
repnz
popa
and
jne
ds
scas
fldcw
sub
ds
jl
test
insb
add
fcomps
sbb
lahf
shlb
mov
out
dec
jecxz
add
mov
mov
divl
push
xchg
adc
jbe
inc
sub
mov
cmp
xchg
repnz
adc
pop
mov
mov
xor
cmpb
push
push
sub
mov
outsl
sbb
popa
mov
test
pop
add
mov
add
in
cmpsb
lods
stos
xchg
adc
pop
xchg
xchg
add
inc
shlb
add
add
cli
outsb
dec
xchg
xchg
add
add
jbe
ret
or
ret
xchg
push
lock
jno
pop
sub
leave
in
data16
sarb
pop
mov
adc
cmp
mov
outsb
push
loope
dec
or
outsb
and
mov
dec
add
aas
jmp
cmp
xor
aad
push
pop
push
or
mov
mov
add
testb
pop
jns
and
add
add
adc
test
mov
add
and
jge,pt
shll
into
outsl
or
add
add
push
shll
add
outsl
outsl
icebp
arpl
xchg
cmp
jmp
dec
add
add
mov
aad
pop
scas
mov
mov
xor
jge
mov
nop
ret
lcall
in
les
testb
test
sub
sub
mov
mov
mov
out
aad
movsl
jae
divl
add
pop
int3
lret
mov
add
add
mov
inc
cmp
in
sub
cld
mov
cld
popa
mov
fidivrs
push
in
add
add
aas
xorl
mov
add
dec
icebp
cmp
xchg
ja
shlb
std
xchg
mov
pop
clc
pop
and
mov
in
enter
add
add
pop
call
add
add
rcrb
adc
xor
add
lcall
mov
xor
add
inc
jl
xor
sbb
sbb
add
mov
insl
pop
rorb
scas
arpl
xor
addr16
mov
add
sub
pop
mov
jmp
jmp
faddl
mov
ret
jns
inc
aam
pop
insl
sbb
fnsave
test
add
out
xlat
ljmp
sbb
mov
add
add
add
inc
rorb
add
cwtl
int3
mov
imul
add
fsubrs
lcall
jl
lret
add
data16
mov
mov
inc
add
add
dec
fmuls
add
mov
shll
lahf
pop
pop
dec
add
add
js
sub
add
add
jae
mov
ftst
cmp
lock
out
xchg
xor
sbb
pushf
jno
push
inc
dec
fimuls
adc
adc
in
roll
add
add
and
add
andb
add
sti
mov
mov
add
mov
pop
gs
adc
stos
pop
movsl
cld
out
stos
inc
adc
inc
add
scas
in
es
mov
rcrb
add
ret
aas
xchg
mov
stos
cmpsl
jbe
add
mov
inc
add
add
add
insl
aam
insl
mov
add
sbb
xchg
adc
xchg
sahf
in
jp
cmpsl
xchg
bound
dec
addr16
ret
pop
cmp
mov
add
add
add
pushf
jl
add
add
fcoms
or
push
dec
shrl
lcall
add
add
cmp
mov
sub
sbb
add
mov
shl
outsb
xor
add
mov
inc
iret
fsubrl
add
loopne
clc
pop
xor
mov
add
fistl
xchg
push
sub
mov
jmp
xor
std
mov
and
add
add
fwait
mov
aad
xor
sti
icebp
inc
fucomp
jb
aas
cmp
cmp
outsb
inc
sbb
xchg
cmp
fwait
adc
sarb
sbb
fldcw
call
jno
outsl
sbb
add
add
add
inc
mov
mov
add
or
dec
mov
negb
icebp
dec
ret
sub
test
dec
dec
mov
jnp
sub
pushf
cmp
call
das
push
and
push
std
add
add
ret
and
add
sbb
aam
and
sub
fldenv
add
add
lahf
jne
mov
add
mov
jbe
insl
adc
aad
aaa
xchg
test
ret
and
mov
dec
filds
jge
jno
scas
cwtl
setg
popf
sbb
mull
inc
add
add
outsb
repnz
imul
movsl
inc
dec
add
add
sub
insb
add
add
popa
cmp
mov
mov
pop
mov
add
mov
rcll
add
add
inc
add
adc
jg
std
fisttpll
pop
add
add
add
or
add
je
shl
in
add
add
outsl
mov
adc
push
jnp
dec
add
add
stos
and
bound
out
int3
dec
dec
add
ss
dec
sub
mov
add
xchg
imul
in
pop
push
inc
fisttpl
stos
dec
mov
lea
mov
push
in
mov
lods
pop
fiadds
add
cli
xor
fmull
test
pop
add
add
inc
xor
adcb
jo
add
shrb
add
add
push
adcb
and
out
mov
rcrl
jns
mov
push
push
addr16
aad
iret
jmp
lcall
repnz
imul
inc
jg
rclb
push
add
out
fildll
jecxz
fisttps
and
add
cmpsl
je
subb
add
add
add
mov
jmp
inc
sti
rcl
add
xor
mov
add
add
data16
movsl
push
enter
add
adc
cmp
lods
sub
loop
add
add
cli
push
push
xchg
or
mov
ficoms
lods
xchg
jno
push
test
add
lret
mov
sarl
ret
jl
add
add
sbb
cmp
add
mov
into
push
cmp
pop
ficomps
test
stc
jno
push
jp
aam
incb
xchg
cmp
ss
and
mov
adc
add
add
pusha
add
add
mov
fisubl
inc
clc
xchg
xor
lds
mov
cmp
sahf
popa
ja
fwait
mov
sbb
add
jl
pushf
jnp
and
out
cmp
cmp
dec
add
add
in
mov
xor
sub
mov
or
add
add
test
insl
add
add
enter
add
add
mov
mov
mov
push
loope
sahf
mov
pusha
add
add
fcmovu
lods
jle
and
mov
in
into
imul
xchg
add
add
scas
js
sub
int
pop
cmp
push
icebp
jle
mov
cmp
cld
fnsave
mov
mov
add
mov
mov
shlb
lds
add
adc
mov
add
pop
cmp
xchg
add
cmp
push
mov
jmp
jmp
out
pop
add
push
cmpb
repnz
pop
inc
adc
inc
xchg
hlt
sbb
std
test
sbb
lea
push
adc
ljmp
xchg
sub
add
sahf
hlt
mov
add
add
add
inc
bound
into
arpl
mov
add
mov
mov
pop
add
lods
adc
cmpsb
lret
inc
outsl
stc
leave
inc
mov
sbb
gs
enter
add
mov
es
rcll
imull
iret
test
and
cmp
xor
adc
sahf
cli
cwtl
insl
cmp
push
and
add
aad
mov
or
adc
addb
mov
push
adc
pop
xor
dec
add
add
test
mov
add
add
cmp
popa
add
add
hlt
mov
push
mov
and
mov
mov
xchg
stc
stos
call
test
stc
xchg
sahf
cmp
adc
dec
mov
bound
inc
jb
data16
outsl
mov
add
add
pusha
add
xchg
movsb
fadd
and
mov
add
add
fidivs
pop
imul
or
mov
mov
mov
inc
imul
add
add
js
gs
add
add
cwtl
cmp
adc
cmp
inc
cmpsl
lret
sbb
arpl
mov
push
mov
cmpsb
movsl
jo
jmp
imul
jns
push
into
dec
cs
add
mov
mov
dec
fiadds
add
jg
gs
loop
xchg
mov
outsb
inc
mov
cmp
xor
push
fdivrs
inc
add
jle
adc
repnz
rcll
movsb
dec
and
mov
add
add
add
orb
jmp
pop
push
lcall
repz
add
add
insb
add
add
lock
in
add
jnp
push
mov
mov
add
test
or
add
add
scas
xor
dec
lds
insl
or
sub
sub
dec
cld
in
arpl
jge
adc
cmp
leave
jb
incl
add
in
pushf
lret
add
add
adc
imul
repnz
daa
fimull
adc
outsl
cmp
and
add
add
shrl
xorb
imul
mov
cwtl
rcr
mov
call
cmp
mov
into
stc
cld
andb
outsl
js
fisubl
add
add
add
pop
scas
popf
jl
lock
gs
sahf
push
sbb
mov
or
jne
dec
add
mov
lds
lahf
test
iret
sub
sbb
divl
mov
popf
mov
insl
addr16
gs
pop
mov
jge
sbb
cld
xchg
inc
add
add
push
add
xor
add
pop
cmp
aad
inc
add
add
sub
mov
adc
pop
lock
add
fcompl
fiadds
jb
sbb
pop
cs
iret
movsl
idivl
push
lret
leave
aaa
popa
mov
gs
lods
mov
add
add
inc
arpl
xor
sbbb
pop
push
push
daa
dec
daa
xchg
repnz
mov
mov
jmp
test
cmp
out
mov
mov
ljmp
mov
add
push
movsb
mov
inc
jno
dec
pop
inc
mov
fistpll
mov
push
pop
push
mov
add
add
dec
mov
push
push
adc
mov
imul
mov
adc
dec
and
add
add
icebp
movsb
mov
sub
sahf
pop
sub
inc
cli
pop
mov
cmp
add
add
lock
mov
enter
pop
sti
push
int3
movsb
daa
sbb
push
iret
fadd
sbb
je
mov
add
and
add
add
mov
add
inc
jns
jle
ret
mov
add
add
mov
outsl
lods
cld
jmp
fsubl
add
add
xor
dec
add
inc
mov
mov
cli
cmp
scas
mov
hlt
mov
clc
aaa
xchg
mov
add
and
mov
test
jno
push
mov
mov
dec
add
or
xchg
fnsave
dec
add
add
inc
cmc
sub
add
add
cmova
pop
xor
addr16
xor
pop
sbb
bound
push
jg
popf
cmp
inc
adc
pushf
sbb
mov
jg
or
or
mov
add
mov
icebp
sti
xchg
mov
adc
jle
mov
jb
pop
mov
shl
jp
int
ficomps
notb
add
outsl
mov
aad
adc
div
call
add
add
jo
add
lods
pop
std
mov
inc
int
ficoml
jecxz
inc
add
movsb
and
lods
pop
sbb
or
add
add
xchg
mov
cli
adc
add
cmc
sahf
mov
arpl
cli
jae
inc
fsubrs
daa
or
mov
sahf
mov
and
inc
or
arpl
filds
sbb
insb
add
add
add
loope
pushf
negl
pop
push
pop
add
dec
mov
mov
out
xchg
out
cltd
fisubl
inc
add
add
test
push
test
bound
sub
xchg
cmp
in
mov
xor
rcll
adc
add
mov
add
add
popf
jmp
je
sub
mov
mov
adc
add
add
xchg
inc
inc
repnz
ret
mov
push
jne
repnz
ds
add
add
cmp
add
add
add
add
add
adc
mov
popf
cltd
add
sbb
adc
add
add
add
dec
ljmp
push
push
mov
pcmpeqd
subl
pop
push
add
add
and
mov
mov
movl
loop
push
repz
jmp
loope
nop
xchg
iret
rcrb
cli
and
mov
add
mov
cmp
add
cmc
dec
test
mov
iret
sub
mov
iret
mov
repnz
arpl
add
and
add
add
add
je
js
les
sbb
loope
sarb
int
mov
stc
and
add
add
mov
lcall
add
add
jg
sti
fcoml
out
mul
aas
and
test
mov
add
test
push
and
cli
lahf
lock
test
add
add
add
movsb
data16
in
idivl
xchg
data16
out
es
sub
stos
xor
fwait
mov
mov
clc
inc
test
mov
add
sub
add
add
lods
outsl
in
or
add
dec
mov
mov
mov
es
pop
dec
es
mov
add
add
ret
mov
cltd
dec
add
push
popa
fwait
add
pop
jmp
or
addb
mov
iret
push
jl
mov
mov
addr16
or
push
call
dec
add
add
add
faddl
aad
cmp
and
add
inc
ljmp
mov
xchg
add
addr16
jecxz
mov
add
push
mov
and
js
rolb
add
add
push
mov
sbb
mov
add
mov
and
sbb
dec
xlat
aad
shr
mov
or
add
add
fisttpll
fcompl
addr16
xchg
sub
fyl2xp1
repnz
sub
mov
mov
xchg
movsb
xchg
aaa
ret
push
xor
fbstp
push
sub
decl
add
les
add
add
stc
cmc
mov
sbbb
aas
lret
and
add
add
pop
mov
sub
add
add
add
add
int
sub
add
add
out
jnp
out
mov
cmp
add
add
jmp
sbbl
pop
mov
dec
lahf
lods
pop
jns
add
cli
icebp
out
outsl
repz
mov
mov
dec
mov
adc
add
loope
jne
adc
jmp
add
pop
lods
dec
jns
lahf
out
sub
mov
mov
mov
adc
inc
push
addr16
mov
mov
xor
xor
add
xorl
push
pop
xchg
cmp
cmp
and
adc
add
add
add
mov
add
test
dec
repz
xchg
xchg
xor
mov
cmpsl
bound
mov
add
mov
xchg
test
in
add
add
inc
sbb
mov
dec
cmc
push
inc
lret
mov
cmc
fstl
mov
add
xlat
out
daa
push
jecxz
ret
xlat
push
sub
loope
insl
dec
mov
cld
ret
push
mov
add
les
mov
sbb
cmpsl
ret
jmp
sbb
lock
xchg
xor
mul
out
out
jp
pop
mov
mov
push
mov
or
add
dec
add
add
ja
subl
mov
add
stc
leave
call
rclb
or
add
mov
add
ret
daa
mov
enter
adc
fstps
dec
call
add
add
fstl
mov
jne
ret
mov
add
dec
mov
or
cmpl
ljmp
pop
sub
ret
fidivrl
std
mov
insb
add
add
or
add
cmp
pop
andb
and
mov
fstl
jb
fists
insl
push
mov
jp
ret
jns
enter
xor
out
inc
xor
adc
fmull
xchg
pop
jge
out
out
addl
cmp
push
sbb
jns
xchg
lret
nop
mov
scas
xlat
push
jno
int
andl
add
add
js
repz
or
sbb
lods
add
add
add
cs
aad
sub
mov
lds
ja
cmpsl
neg
outsb
leave
sub
add
add
mov
pop
rorl
pop
in
mov
add
and
cmpsl
cmpsl
clc
insb
add
add
inc
pop
pop
jno
shrl
mov
mov
fsubp
mov
pop
enter
scas
fdivl
clc
mov
and
add
add
mov
out
data16
jg
enter
fwait
sub
sbb
mov
loop
in
shrb
mov
notb
push
push
or
fadd
loop
jns
add
mov
add
add
mov
repnz
xchg
iret
pop
divl
popa
cmp
inc
push
divl
add
push
push
sbb
lret
pop
dec
add
add
mov
cmp
add
add
mov
jl
popa
clc
pop
push
sahf
fsubr
cmpsl
lea
jbe
inc
xor
sbb
mov
jb,pt
addb
movsl
dec
cmpsb
pop
mov
and
out
mov
jp
add
add
pop
pop
imul
add
adc
pop
xor
mov
mov
sbb
das
into
mov
sbb
mov
jns
inc
cli
push
mov
mov
stc
fcoms
mov
dec
mov
inc
add
add
rorl
add
add
stc
cltd
push
idivb
mov
cmp
add
inc
dec
jbe
pop
stos
div
xor
jecxz
pop
sbbb
dec
mov
cmp
es
aaa
and
jmp
mov
add
daa
mov
dec
add
add
loop
mov
add
or
stos
xchg
jmp
in
xchg
adc
mov
xchg
dec
fnstcw
sbb
and
mov
sub
fcom
jns
or
mov
or
add
add
add
lock
imul
push
and
add
add
push
push
addr16
in
inc
mov
loop
loope
ror
gs
pop
xchg
pop
mov
hlt
popf
movsl
fwait
push
and
mov
aas
cmp
add
sub
ss
push
cmc
repnz
sbb
in
gs
add
jl
and
and
add
cwtl
xor
pop
mov
push
mov
scas
xchg
movsb
sbb
jp
stos
jb
add
add
cltd
sub
mov
add
mov
aad
xor
xchg
mov
cltd
icebp
cmp
xor
rcl
popa
pop
push
xorb
pusha
add
add
lcall
fiaddl
sub
mov
gs
sahf
iret
sub
mov
outsl
dec
mov
addr16
dec
xor
or
mov
or
cmpsb
jp
jg
int3
les
mov
je
adcb
add
add
jnp
imul
add
add
insb
add
add
mov
pop
in
pop
jmp
add
add
imul
dec
jmp
inc
ret
mov
add
add
sbb
faddl
add
cmc
jns
popf
lret
cmpsb
imul
add
add
in
arpl
add
jno
push
mov
push
ja
test
leave
shll
push
xor
add
adc
sub
mov
add
add
add
xchg
and
pop
call
add
add
in
inc
mov
lret
lahf
popl
mov
cmp
add
mov
inc
push
sbb
push
xor
pop
dec
std
mov
pop
stos
data16
or
dec
add
movsl
in
lret
outsb
loope
fnsave
outsb
ss
test
cli
xor
pop
aaa
cs
out
sti
add
mov
push
cmpb
xchg
pop
sub
insb
add
add
fidivs
fdiv
divl
pop
aam
adc
imul
add
add
test
iret
sbb
sub
add
add
stos
mov
xchg
std
xchg
movsb
mov
pop
sub
cmp
sbb
xchg
and
pushf
mov
test
js
mov
movsb
or
testl
out
shlb
dec
add
add
mov
jbe
and
add
add
mov
inc
pushf
ficoms
jle
in
sub
jns
mov
rolb
dec
add
add
lea
dec
cmp
cmp
add
add
add
jg
testl
add
mov
push
sub
add
jmp
push
jecxz
notb
add
js
aas
fwait
ret
loop
or
add
add
stos
daa
aaa
and
bound
mov
inc
frstor
and
pop
shll
add
jne
dec
and
cmp
mov
adc
cmp
or
mov
xchg
sbb
lods
dec
in
jp
mov
mov
shl
fwait
stc
cld
insl
xor
jge
enter
leave
inc
jnp
or
add
add
add
jg
dec
sub
enter
fnstcw
ret
add
add
dec
dec
in
sar
add
enter
add
pop
mov
in
cmp
add
jp
sti
das
cs
rcrl
mov
mov
xor
jno
adc
cmp
int3
push
mov
add
mov
stos
scas
inc
repz
xor
or
ret
mov
in
sub
lods
and
add
mov
jecxz
lret
cmpsl
cmpsb
pushf
adc
add
les
push
imul
and
mov
xor
test
add
mov
stos
out
dec
je
rcr
ret
cmpsl
and
add
pop
gs
fstps
add
ljmp
adc
add
add
add
xor
cmp
adc
push
push
jb
and
adc
test
add
add
into
dec
add
mov
xlat
cmpsl
out
es
add
add
fiaddl
repz
mov
lahf
daa
adc
mov
add
pushf
mov
xchg
pop
pusha
add
add
xlat
daa
in
adc
popa
xchg
mov
add
sub
lret
mov
add
popa
ret
and
pop
push
add
mov
pop
ffreep
cmp
pop
test
add
add
cmp
add
add
icebp
xor
jne
push
lret
mov
add
mov
addr16
push
adc
push
cmp
adc
in
sahf
cmpsb
aam
js
mov
jbe
adc
gs
jbe
jmp
sbb
mov
mov
xor
arpl
mov
mov
mov
mov
jg
sub
mov
out
mov
mov
sbbb
mov
pop
push
mulb
xchg
lea
aad
mov
push
cmpsb
aad
lods
lods
adc
stos
lods
repz
insl
push
jo
mov
and
fstps
sbb
xchg
or
int3
popa
negb
lods
xor
jb
dec
pop
push
and
mov
out
adc
rcrl
jmp
or
sbb
fistpl
jae
or
xchg
mov
mov
xor
mov
ja
xchg
push
incb
in
cmp
inc
pop
iret
jne
mov
lods
nop
jmp
xor
jno
inc
or
adc
mov
fwait
stc
push
rolb
jg
negb
jge
sbb
adc
int
push
cmpsb
imul
loop
jbe
pop
mov
or
fistps
insl
adc
ja
xchg
shrb
pop
mov
push
fsubr
lcall
gs
sbb
mov
pop
fistl
mov
add
add
inc
add
add
or
jle
sarb
cli
inc
ljmp
xchg
xor
add
test
cmp
icebp
stos
rcll
ret
bound
push
insb
add
add
out
enter
jnp
aam
loop
stos
fisttps
add
fmulp
je
jns
add
mov
push
mov
and
mov
repz
add
inc
add
add
sbb
fcmovne
sti
sub
and
mov
mov
add
add
pusha
add
add
repnz
imul
into
scas
pop
sbbw
addr16
outsl
push
fwait
xor
movsb
aas
cmp
xor
sub
mov
rcrl
xchg
adc
or
add
add
call
lock
mov
add
addr16
insb
add
add
scas
mov
dec
cmp
sub
add
add
mov
out
in
sbb
lret
fnsave
add
mov
add
add
pushf
fdivrs
add
mov
mov
test
inc
add
add
and
push
and
push
jnp
repnz
jae
fnstsw
add
add
fsts
add
pop
movsb
fadd
adc
jp
icebp
data16
jmp
add
or
sbbb
add
leave
insl
adc
jbe
inc
add
add
pop
dec
pop
or
add
add
cmpsl
sbb
iret
lahf
sarl
roll
cmp
dec
add
add
xor
mov
sbb
adc
mov
fsubl
int
add
add
push
jno
cwtl
arpl
mov
mov
add
or
mov
add
add
pop
loopne
add
add
add
mov
data16
loopne
pop
mov
and
add
jg
sti
inc
jbe
xchg
rcrb
add
mov
add
or
push
xchg
mov
lcall
jecxz
hlt
inc
add
add
xchg
pop
insl
inc
pop
cmc
pop
scas
xor
imul
or
test
add
add
shrl
add
mov
popf
xor
cli
lahf
lods
push
roll
add
out
rcl
je
test
pop
out
ds
add
jno
pop
xor
mov
int3
push
jo
adc
test
pop
not
add
lods
cld
pop
adc
cmp
notl
cmp
xchg
aad
mov
add
add
adc
xchg
mov
jnp,pt
sub
out
insb
add
sub
stc
dec
add
add
mov
aad
aam
xchg
iret
subb
mov
imulb
hlt
out
pushf
addl
stos
jno
popa
rcrb
mov
adc
add
out
je
shrb
add
add
add
add
cmp
mov
push
mov
add
add
jnp
mov
rorb
mov
mov
dec
movb
add
add
fidivs
in
mov
loopne
adc
add
pop
loope
mov
es
add
add
ljmp
push
imul
add
roll
push
test
mov
scas
bound
mov
or
iret
mov
sub
mov
pop
mov
test
add
xor
adc
sub
or
aad
mov
aam
inc
pop
clc
fdivs
ja
xchg
scas
or
add
add
lcall
adc
push
xlat
mov
add
add
add
mov
outsl
out
aaa
aas
mov
xor
push
xchg
lods
insl
push
cld
stos
jl
xlat
and
mov
xchg
or
mov
sub
imul
mov
or
add
add
es
dec
sbb
jb
pop
lcall
sbb
mov
sub
mov
push
and
pop
sbb
arpl
add
cld
xchg
add
mov
or
add
adc
mov
pop
notb
add
xchg
daa
push
jb
xchg
adc
jmp
cmc
cld
sbb
mov
cli
gs
cmpl
and
loop
add
add
add
add
add
inc
add
add
mov
icebp
iret
xor
inc
pop
fcompl
js
xchg
cmp
scas
push
ret
mov
push
add
packssdw
xor
loopne
cmp
adc
inc
push
stc
inc
xchg
cwtl
movb
ficompl
mov
dec
add
mov
and
add
jmp
push
arpl
pop
cld
mov
sbb
push
shl
lret
ret
or
add
add
imul
or
add
imul
sti
and
pop
mov
ja
rsm
xorb
add
mov
out
xor
std
cli
scas
mov
clc
cs
add
add
daa
push
dec
mov
decl
adc
mov
add
xchg
popa
push
pop
jl
es
sub
add
add
add
adc
lret
loop
mov
test
mov
aad
fistps
and
add
add
stc
sbb
add
add
adc
pop
lcall
shrl
add
add
aas
cltd
int
jg
mov
xor
jo
gs
pop
xchg
xchg
loop
add
add
pop
test
fwait
xor
and
add
add
sbb
or
mov
add
int
daa
or
cmp
push
xchg
or
jmp
lahf
test
add
add
cmc
push
andb
arpl
push
mov
mov
popf
push
push
negb
adc
add
adc
jns
testl
xchg
xor
lahf
and
add
add
sub
js
in
dec
push
push
adc
adc
es
mov
inc
out
arpl
mov
out
cmc
rorl
push
test
push
cld
les
push
sbbb
lods
cmp
hlt
xor
add
add
jmp
and
sti
les
mov
add
add
inc
add
add
add
pusha
add
add
das
xor
add
arpl
fiaddl
and
mov
inc
out
adc
popl
jle
xchg
mov
xchg
mov
iret
aas
mov
xchg
add
add
movsb
push
adc
fsubl
add
jecxz
dec
adc
les
inc
push
je
loop
inc
add
add
jp
sub
add
sar
in
lock
shlb
add
mov
and
mov
jg
test
add
add
xor
imul
push
xchg
push
xchg
push
jp
outsb
sbb
enter
iret
je
dec
lods
xorl
les
add
add
cmp
pusha
add
add
cwtl
cmp
dec
mov
add
lret
lods
aam
lods
imul
push
movsb
jle
jns
cmp
add
add
sub
cli
xchg
push
and
in
lcall
add
mov
sahf
cmp
sub
add
add
movsb
push
sub
mov
stos
sub
add
add
add
sub
add
add
add
mov
enter
addr16
sbb
sub
add
inc
jnp
lea
sub
add
add
mov
sub
add
add
add
imul
add
add
je,pn
dec
add
mov
add
add
test
inc
jl
and
mov
in
in
lret
sub
stos
nop
sub
lods
and
add
add
shrb
adc
sub
or
and
add
lds
adc
jmp
les
pop
jge
mov
pop
stc
pop
add
add
pop
or
iret
sbb
mov
fidivrl
int
loopne
xchg
push
test
adc
add
insb
add
inc
add
push
pushl
inc
pop
mov
ljmp
push
pop
mov
inc
cli
xor
test
add
sahf
ret
jae
std
aad
pushf
mov
lret
std
insb
add
jno
and
mov
pop
and
subl
dec
add
roll
dec
scas
inc
add
add
out
xor
movsb
test
push
add
mov
jle
xchg
notl
sbb
add
add
dec
pushf
sub
add
add
mov
insl
push
add
aam
add
adc
sbb
cmp
pusha
add
add
ret
xor
mov
out
pop
pop
xor
fildl
add
mov
cwtl
fcmovnb
mul
hlt
inc
sahf
xor
inc
mov
xchg
add
sub
mov
jns
mov
adc
add
ror
mov
mov
or
add
addl
in
add
add
pushf
cmpl
add
add
movsl
mov
add
push
call
test
or
mov
jecxz
push
aaa
adc
stos
mov
subb
pop
arpl
pop
xchg
push
pushf
mov
fwait
pop
sub
popf
lods
push
popa
bound
fld
sub
mov
mov
sahf
and
inc
push
test
add
add
push
or
dec
mov
cld
mov
lcall
add
cs
jle
or
mov
cmc
loop
clc
out
orb
insb
add
xlat
lret
cmpsl
xchg
xor
pop
pop
dec
dec
les
gs
add
add
lds
sbb
push
jl
ja
lret
sbbb
repz
add
add
add
add
jp
sub
pop
jne
fisubrs
rcrl
mov
stc
lods
add
add
sbb
mov
add
add
js
mov
xchg
ljmp
lea
pusha
add
add
xchg
std
mov
jp
add
add
push
popf
jno
sti
repnz
mov
int
lahf
dec
dec
dec
xchg
js
sbb
test
fisubrl
add
add
xlat
test
add
add
or
sti
nop
sub
scas
les
adc
sbb
add
mov
push
inc
cld
dec
into
mov
or
cmpsb
xchg
imul
scas
or
add
add
inc
dec
add
cs
movsl
adc
loope
add
add
mov
ljmp
pop
add
add
add
cmp
and
movb
or
or
int3
or
sbb
sub
cmpsl
sahf
fdivs
jae
sbb
push
cmp
insb
add
ds
or
mov
sbb
pop
cwtl
push
add
data16
mov
out
test
scas
adc
mov
mov
cmp
inc
add
xchg
in
add
jbe
es
add
out
push
sub
push
cmpsl
cmp
mov
jge
daa
cmp
mov
rcrl
lea
dec
push
jl
mov
jb
mov
mov
sub
mov
loope
push
mov
dec
cmp
dec
and
scas
push
push
xchg
mov
and
add
add
push
into
cmpsl
hlt
out
xorb
or
adc
jge
sub
lcall
jne
call
jle
test
test
add
add
push
sub
insl
and
mov
cwtl
and
ja
inc
cmp
add
add
mov
pop
adc
fisubrs
xchg
adc
lods
rep
incb
or
mov
fsubs
lds
sarb
xor
add
call
lds
int3
test
shrl
push
cs
arpl
mov
adc
adc
add
movsb
xchg
jp
jbe
push
test
dec
add
sbb
add
add
add
mov
add
cld
stos
loope
sar
jnp
mov
orl
arpl
jnp
xor
mov
outsl
das
call
jbe
add
mov
add
add
and
and
inc
enter
xchg
push
adc
roll
mov
dec
add
add
and
or
mov
ja
fmull
cmp
es
pop
notb
add
add
add
add
add
nop
xchg
divb
sbb
xor
rorb
add
orb
add
lea
aaa
popa
cld
jne
stc
push
push
call
lods
pusha
add
outsb
test
popa
pop
sbb
stos
lods
inc
push
mov
repz
repz
shll
sbb
mov
out
add
jns
in
dec
add
add
mov
jo
aaa
push
fildl
push
fidivrs
add
add
leave
cmc
out
cmp
gs
pminsw
in
movsb
imul
push
shrl
add
mov
es
hlt
dec
fdivrs
pop
sti
and
lock
retw
mov
mov
jg
mov
dec
add
add
sbb
mov
dec
pop
jne
push
pslld
mov
add
jnp
mull
pop
ret
sub
cli
imul
pop
cmp
add
add
test
sahf
in
sbb
idiv
rcl
xchg
fnstcw
add
jge
jp
cmp
dec
add
push
dec
mov
add
add
add
cmp
adc
adc
or
push
outsb
stos
push
out
cwtl
jg,pn
add
mov
add
add
mov
or
mov
add
push
test
add
ret
fwait
cmp
in
xchg
call
mov
add
add
sub
xor
adcb
xorl
push
push
xchg
dec
mov
sub
bound
add
lds
add
shr
jne
mov
add
add
dec
jg
sub
add
add
lea
stos
push
rcl
test
mov
shrl
loopne
pop
in
adcb
into
push
shlb
loope
dec
out
lds
xchg
cmp
popf
mov
aam
and
aam
loope
and
mov
push
xor
pop
sbbl
cli
pop
and
add
add
push
mov
add
enter
push
pop
ja
or
add
add
cmp
mov
push
aad
sar
mov
push
inc
iret
cld
pop
imul
xor
add
push
sub
mov
and
cmp
aaa
jns
jns
out
sarb
aad
inc
add
add
stc
scas
mov
jle
add
or
mov
add
add
sub
sub
pop
gs
jns
je
das
add
push
shlb
jmp
add
add
and
test
inc
xchg
mov
add
add
pusha
add
add
pop
aam
les
add
add
jno
cmpsl
sbb
enter
or
mov
int3
add
cmp
add
add
add
mov
or
loope
xor
push
inc
pop
lods
adc
mov
pop
sbb
cmpsb
popa
xor
adc
add
push
push
outsl
inc
ja
add
jno
scas
ljmp
add
and
cmp
xor
xchg
fnstenv
and
repnz
dec
or
repnz
push
lahf
ret
jnp
orl
add
add
adc
int3
inc
push
dec
add
xor
cmp
mov
sbbl
add
add
add
test
add
dec
and
pop
and
lock
imull
inc
add
xchg
and
sarl
add
cmc
adc
inc
imul
add
jecxz
aad
fcmovnu
movsb
popa
in
jbe
popa
dec
add
add
mov
out
jno
xchg
xorl
enter
xchg
test
icebp
ds
xor
add
inc
add
mov
mov
fildll
testb
add
pop
cmp
cmp
mov
cld
incb
mov
out
xchg
jb
loope
movsl
jmp
mov
add
mov
insl
cmp
pop
push
sbb
mov
aas
or
mov
inc
pop
clc
insl
cltd
test
xchg
shll
pop
adc
xor
lret
pushf
lods
test
js
mov
andl
cmp
and
faddp
lahf
pushf
jno
inc
add
jecxz
dec
in
pusha
add
add
push
cmp
mov
add
add
mov
imulb
xchg
mov
add
jbe
pop
adc
scas
adc
sar
cmp
add
int
pop
sub
mov
imul
ja
xchg
add
inc
mov
sti
adc
aaa
pop
and
sbb
mov
pop
sbb
add
jbe
lret
jb
xchg
jmp
cmp
test
add
add
xor
xor
jno
mov
inc
mov
add
pop
push
cmc
test
pop
pop
xchg
inc
add
add
dec
push
call
mov
mov
jns
add
add
add
mov
add
pop
push
pusha
add
add
in
out
add
jb
push
jp
inc
xchg
and
push
mov
cmpsb
mov
inc
dec
add
add
inc
push
mov
add
adc
mov
negl
add
ss
push
or
add
add
pop
inc
shlb
sbb
mov
sub
mov
xor
or
mov
aad
dec
mov
scas
mov
jns
jo
shlb
add
add
push
fstp
jno
gs
push
dec
mov
push
mov
push
xor
dec
jnp
mov
and
bound
push
pop
xchg
outsb
mov
mov
arpl
sbb
add
add
xchg
test
lods
leave
push
stos
out
notl
add
mov
xchg
imul
add
es
or
add
add
cld
incb
push
nop
jecxz
mov
add
add
xchg
sub
hlt
dec
mov
inc
mov
inc
stc
mov
adc
pop
cmc
loop
or
add
add
add
insl
test
jae
xor
inc
sbb
mov
and
mov
inc
add
arpl
mov
lds
pop
pushf
pop
sub
adc
cmp
lock
jecxz
and
mov
lock
shrd
daa
jl
cmp
aam
dec
mov
fcmovb
or
mov
inc
rcll
adc
xchg
add
add
add
sbb
or
add
add
iret
dec
add
add
mov
push
lret
neg
push
jge
repnz
pushf
in
sub
sub
add
add
mov
jp
jae
add
add
test
orl
mov
aas
and
mov
pop
cmpsb
sbb
sub
add
add
mov
add
mov
outsb
cld
testl
cmpsb
loopne
adc
xchg
sub
add
add
js
out
scas
mov
jbe
repz
cmp
pop
fcomps
stc
lods
push
into
out
sbb
jmp
mov
popf
out
add
sbb
rcrl
add
add
mov
add
add
mov
sub
cmp
call
mov
inc
popa
push
pop
or
add
add
lcall
add
or
jle
out
xchg
jne
daa
adc
arpl
add
or
test
mov
xlat
movsl
in
xor
inc
cmc
dec
add
add
jbe
xchg
insl
in
xchg
cltd
pop
out
pop
jge
shrb
push
rol
add
pop
jns
inc
add
lods
cmc
adc
arpl
movl
add
shl
outsb
ret
mov
push
repnz
int3
xchg
or
add
sbb
cmp
fdivp
xlat
cmpl
add
dec
cmp
inc
clc
adc
inc
hlt
add
clc
pop
dec
and
add
add
jmp
add
inc
bound
sbb
mov
imul
xchg
mov
mov
push
fstpt
arpl
push
inc
in
pop
notb
out
push
dec
add
add
lret
shll
add
hlt
loop
pop
out
xchg
inc
xor
add
sahf
mov
add
fnstsw
push
pop
popf
push
sub
add
add
pop
je
xor
add
add
std
stos
je
lods
xor
fwait
cmove
mov
add
add
inc
add
add
loop
adc
imul
xchg
xchg
repz
add
ljmp
add
fldcw
add
jge
pop
jnp
daa
in
lods
orb
ret
inc
or
shl
outsl
cmp
cmp
ljmp
or
sbb
and
enter
into
xchg
adc
lret
rcrl
push
pushf
out
lcall
loopne,pn
jl
add
add
add
ret
std
push
shll
mov
add
add
lods
jmp
mov
add
add
nop
jns
add
xlat
out
pop
testb
push
cmc
xchg
jp
add
add
jmp
sub
insl
sbb
add
mov
or
mov
aaa
mov
nop
dec
add
dec
ret
pop
or
mov
fcomip
sub
int3
ret
xchg
je
scas
cmp
add
add
and
add
jne
xor
cmp
popf
pop
ja
out
int3
cmp
std
jmp
sub
mov
jmp
repz
mov
loope
imul
jb
outsl
cmp
aad
mulb
cmpsl
push
mov
in
pop
mov
add
add
cmp
mulb
add
add
add
add
add
xchg
cmpsl
push
adc
fsub
addr16
rolb
add
lea
inc
dec
movsb
cmp
shlb
sub
mov
stos
shl
push
mov
dec
cmp
sahf
xor
cmc
lock
xor
sahf
inc
nop
cld
xchg
mov
add
add
push
out
out
sti
mov
sub
add
add
mov
leave
or
fsubrl
gs
push
leave
xchg
pop
lret
ljmp
dec
roll
add
scas
xor
pop
sbb
adc
in
addl
movsl
popf
insb
add
add
sbb
push
cmp
inc
add
add
out
lock
cmp
sub
and
add
push
ja
rorl
add
add
push
mov
test
ret
ss
or
mov
mov
lods
jne
add
add
pusha
add
add
xor
add
add
mov
in
or
adc
sbb
sti
add
mov
enter
push
fwait
add
add
rep
cmp
in
aam
movsl
scas
xchg
push
sbb
addr16
add
add
push
sbb
mov
jecxz
dec
cmp
add
xchg
push
ret
icebp
jmp
lret
jb
lods
mov
fucomi
lea
pushl
xchg
popf
mov
add
clc
push
insb
add
adc
sti
pop
mov
pop
notl
bound
jl
cmp
lcall
mov
gs
sub
jo
cmp
std
inc
shrb
fistps
int3
adc
pop
mov
ljmp
add
aaa
fists
or
mov
jmp
mov
sbb
ret
add
inc
mov
cmp
add
cmpsb
xor
inc
xchg
lret
mov
fxch
lret
adc
pop
js
add
add
sub
add
add
into
jmp
adc
mov
repz
scas
pop
loope
fdivl
mov
fwait
xsha256
cmpsb
xchg
xchg
inc
sbb
mov
sub
lret
jne
lods
pop
movl
dec
add
mov
ljmp
add
add
add
dec
ja
loope
add
mov
jns
mov
add
mov
inc
push
jle
sbb
in
popf
stos
and
roll
jl
xchg
add
and
add
add
out
divl
das
sahf
pop
test
push
fldcw
mov
mov
mov
cmc
stos
cmp
xor
or
cwtl
cmp
cmp
push
fpatan
sub
mov
shrl
sub
mov
sub
outsl
or
sar
aam
pop
leave
lahf
pop
imulb
addr16
mov
popa
add
cli
pop
jmp
cwtl
jns
nop
push
out
push
add
jg
add
add
add
push
jnp
mov
jp
addr16
out
add
scas
loopne
jecxz
je
add
mov
push
or
mov
jmp
mov
fwait
pop
test
add
mov
fnstsw
add
sub
mov
icebp
xchg
ja
insb
add
mov
and
mov
fists
push
pusha
add
sbb
adc
outsl
mov
or
or
mov
inc
add
incb
mov
imul
lea
notl
and
shlb
add
fwait
sbb
test
sub
mov
mov
push
pop
pop
cmpsl
xchg
jle
hlt
mulb
and
popa
mov
fsubr
pop
push
mull
test
fiaddl
xchg
xor
aaa
jo
xlat
and
mov
add
add
in
popf
cmp
out
mov
pop
adc
mov
sub
in
xchg
insl
sbb
mov
clc
jnp
add
add
loope
fwait
movsb
int3
pop
bound
or
xchg
jle
cmpsl
shll
or
mov
rcll
mov
mov
subl
add
add
addb
add
nop
adc
mov
popf
push
xor
mov
std
ja
or
mov
push
loop
add
add
cwtl
jae
nop
jbe
add
jmp
fsubr
mov
inc
add
fwait
and
add
add
in
dec
and
add
das
add
mov
test
mov
or
mov
xor
js
add
add
cmpsb
shr
daa
cltd
sbb
pop
imul
leave
inc
repz
loopne
repnz
sarl
add
aad
and
int3
rcrl
std
mov
std
dec
mov
insl
pop
in
pop
fcmovb
mov
mov
mov
repnz
lcall
push
jle
stos
xor
push
ja
mov
pop
mov
add
dec
add
add
push
mov
cmpl
scas
and
arpl
xchg
cmp
add
mov
repz
add
jns
add
clc
xchg
mov
mov
dec
lods
roll
or
jmp
das
lret
or
js
jmp
add
pop
pop
cli
jmp
out
mov
fistl
adc
inc
add
add
add
fcompl
xchg
xor
add
or
cmp
add
mov
push
xor
xchg
out
popf
push
mov
es
clc
adc
xor
add
js
dec
inc
and
addb
aas
pop
imul
add
dec
mov
add
add
xor
push
outsb
jns
stc
jnp
sub
mov
add
add
add
pop
push
scas
scas
sbb
mov
pop
stos
aas
cmp
jns
in
mov
pop
pop
dec
add
add
filds
xchg
lret
cmp
add
push
xor
jl
mov
mov
popf
into
jnp
push
mov
add
add
in
and
mov
pop
inc
xchg
xor
out
mov
mov
psraw
ja
popa
stos
and
test
js
pop
lods
test
dec
or
cli
sbb
or
jno
mov
add
add
mov
mov
stos
xorb
jbe
add
aad
mov
loop
or
repnz
sub
add
mov
cwtl
push
sbb
add
pop
dec
adc
or
lock
add
add
add
ficomps
cmpb
mov
add
inc
cmp
sbb
dec
ret
ror
stc
inc
add
lds
lods
clc
imul
add
mov
push
fistps
dec
ss
jg
add
add
jns
sbb
lret
nop
movsb
mov
pop
pop
push
cmc
xor
pop
mov
popf
and
addb
cmp
add
aad
jbe
insl
rcrb
ja
fadds
add
cmp
add
jnp
loop
lcall
ret
add
wrmsr
test
dec
xchg
mov
adc
or
mov
push
or
mov
inc
mov
mov
push
js
mov
dec
repz
add
add
lcall
sub
mov
lds
add
mov
imul
add
add
xor
cmp
dec
adc
xor
xlat
and
xchg
out
push
fisttpl
mov
add
add
add
add
sub
mov
aas
mov
mov
jmp
icebp
sti
je
mov
mov
inc
pop
xchg
jnp
xor
xchg
daa
repnz
cmp
and
adcb
cmp
add
add
mov
inc
aaa
and
insl
insl
or
aad
sub
ss
lret
outsl
or
add
fbstp
push
adc
aas
js
push
mov
lcall
shr
add
lret
je
add
add
or
add
add
inc
test
mov
push
add
add
lods
mov
or
data16
add
add
mov
sub
mov
dec
pop
in
or
or
fistpl
rcl
sbb
leave
adc
cmc
dec
lahf
mov
movsb
aaa
push
xor
mov
or
mulb
mov
cmpsl
dec
add
pop
adc
mov
and
xor
movl
imul
add
add
mov
cmc
push
jo
lcall
scas
adc
sti
stos
and
movsb
xor
imul
push
shrl
aad
es
adc
icebp
mov
out
repz
jae
pop
cmp
dec
cmp
rclb
mov
je
movsl
mov
push
movsb
xchg
leave
mov
mov
add
pop
pop
addr16
fstpt
dec
insb
add
insb
add
stc
loop
lret
in
adc
xchg
sbb
cmp
lahf
inc
add
je
cmp
imul
add
add
lods
lahf
in
cmp
add
add
cmp
cwtl
push
adc
gs
add
pop
cltd
fdivrl
dec
xchg
sti
addr16
nop
mov
xor
sub
jae
push
dec
add
push
push
pop
pop
jae
movsb
mov
xchg
xchg
addr16
sti
enter
add
add
xchg
outsb
or
add
add
fcomps
add
enter
dec
pop
nop
jbe
call
lret
fbstp
lock
or
or
xor
ret
mov
mov
mov
adc
jbe
inc
mov
test
pop
jnp
mov
lret
clc
xchg
pusha
add
aad
push
or
cmp
inc
jae
mov
mov
xchg
arpl
ret
fistpll
out
call
lock
neg
test
add
fisttpl
mov
cmp
invlpg
add
adc
pop
mov
mov
add
xor
mov
loope
cmc
inc
iret
lahf
loopne
lods
jnp
add
dec
adcl
insb
add
add
add
mov
pop
add
les
sub
inc
loop
xchg
dec
mov
or
mov
xlat
in
dec
pop
pusha
add
add
inc
add
decb
stos
outsl
cwtl
mov
push
lock
insl
cmc
je
add
addr16
mov
pop
push
and
push
or
rdpmc
aad
and
mov
ds
lret
dec
cmc
dec
cmp
push
pop
jne
add
rcl
push
mov
add
mov
add
test
arpl
incl
outsl
sbb
in
xlat
or
jns
add
outsb
push
mov
add
add
dec
ret
fidivrs
xchg
clc
inc
daa
push
adc
add
add
cmc
test
dec
insb
add
add
cmc
jne
cmpsb
int
add
mov
mov
mov
mov
mov
sbb
add
out
ds
sub
add
add
subb
cmp
add
repnz
xchg
push
xchg
jbe
pop
pop
int3
push
dec
jle
mov
stc
test
sub
add
add
icebp
sbb
cltd
inc
cs
add
mov
add
push
loop
popa
stos
sbb
add
mov
test
bound
ret
push
int
dec
cli
sub
mov
jne
jg
sub
add
int
pop
pop
ffree
fidivrl
inc
in
mov
jmp
cs
call
add
arpl
mov
or
fldt
add
cmc
out
enter
loopne
aam
add
adc
aad
add
push
push
cmpb
jbe
leave
ds
leave
je
jae
outsl
push
lea
jecxz
push
lahf
adc
add
add
cmp
jo
lahf
call
push
xor
adc
test
add
add
arpl
dec
add
add
xchg
inc
enter
rclb
sub
mov
push
jns
lahf
es
ret
and
out
jge
sub
stos
pop
pop
and
mov
add
push
xchg
or
jecxz
mov
jno
rorb
out
lods
mov
push
mov
call
add
mov
aaa
add
add
ja
jbe
adc
adcb
add
iret
scas
mov
daa
adc
mov
lcall
mov
clc
outsb
imul
cmp
mov
dec
adc
add
xor
add
nop
int3
cmpsl
fimull
mov
imul
mov
add
daa
pop
sub
mov
lahf
or
pop
mov
add
fimuls
add
and
stos
aas
push
iret
or
fnstenv
push
push
test
jbe
rcll
dec
jmp
push
rorl
adc
add
loope
add
add
mov
xlat
shrl
scas
pop
xor
mov
inc
mov
jae
popw
dec
add
jl
shll
in
fstps
jns
pop
lods
imul
loopne
int
mov
push
push
lds
sub
add
sub
add
mov
cmp
add
add
dec
ficomps
add
dec
mov
push
data16
mov
test
test
push
mov
xor
lret
mov
cmp
dec
frstor
add
add
mov
imul
add
adc
jmp
shrb
add
sbb
add
mov
add
add
cmp
imul
mov
cltd
in
jb
test
jmp
pop
movl
add
mov
inc
add
test
dec
in
popa
pop
pop
iret
add
add
or
cmpsl
dec
and
mov
add
add
fsubrl
cmpsl
ret
test
mov
xor
xor
jo
iret
jge
mov
scas
inc
icebp
add
mov
cli
add
lcall
add
jbe
cmc
insl
pop
js
add
add
jo
xchg
xchg
pop
lods
xor
nop
test
jge
mov
je
pop
cmp
pop
pop
push
inc
jecxz
mov
and
inc
mov
dec
repz
add
adc
dec
add
mov
movsl
aam
add
xlat
mov
push
punpckhdq
fistpl
addr16
ror
inc
xor
lret
push
leave
jle
xchg
das
pop
test
mov
arpl
add
xor
push
mov
daa
aaa
cmpsl
push
mov
sbb
xchg
or
add
add
fildll
test
jp
xchg
ja
mov
mov
sbb
fisttpll
add
add
js
jae
adc
leave
cs
dec
add
add
cld
inc
hlt
iret
fbld
call
lret
mov
shr
push
imul
add
pop
mov
add
add
stos
push
xor
pop
xchg
lods
push
sbb
mov
pop
mov
mov
jne
adc
inc
cmp
add
mov
dec
int
fnsave
out
sub
mov
and
das
insl
leave
jns
stos
mov
add
mov
int
ljmp
sbb
push
mov
add
imul
out
nop
sbb
ss
push
in
add
fcom
mov
sub
and
repnz
add
ss
testb
add
lea
add
add
lods
ja
push
adc
xor
dec
es
divl
sub
loopne
pop
fcoml
sti
jge
idivb
lds
push
cld
xchg
stos
add
add
add
pop
jb
adc
sbb
jns
add
mov
cmpsl
pop
inc
adc
hlt
enter
add
pop
popf
mov
xchg
xchg
cmp
push
push
adc
and
jl
lods
adc
mov
in
xchg
jne
aas
pop
or
add
add
test
sbb
add
mov
scas
xor
rcrb
pop
sar
fisubl
pushf
pop
outsb
cmovbe
pop
xchg
xchg
adc
in
and
xchg
out
out
mov
cmp
cld
sar
cmc
jl
or
cmpsl
jmp
push
out
push
lods
jg
popa
mov
stos
jecxz
jle
mov
mov
or
sbb
adc
jo
push
jo
push
std
lcall
add
add
add
sbb
jns
add
add
mov
dec
int
fisubs
inc
add
mov
bound
jae
add
mov
cltd
jb
call
add
outsl
add
add
add
sub
in
pop
cmc
mov
or
mov
pop
dec
testb
add
add
xchg
orl
or
push
sub
loopne
cmp
or
mov
fisubs
xchg
lret
das
cltd
in
loopne
jae
mov
xchg
scas
sbb
mov
mov
xor
mov
add
add
add
xchg
push
bound
repz
dec
std
movsl
cs
out
bound
xchg
push
jge
imul
int3
sbb
ljmp
add
jmp
pusha
add
std
add
sbb
dec
mov
shl
mov
xor
mov
fstps
leave
fwait
sbb
mov
mov
and
popa
inc
in
aaa
xor
jae
faddl
adc
cmp
ret
jns
xchg
loop
cs
add
add
add
inc
loop
loope
sar
sub
add
add
add
and
mov
adc
popl
and
xchg
ss
pushf
push
test
push
pop
xor
add
or
pop
mov
movsl
ss
mov
mov
js
add
mov
out
addr16
add
add
out
and
mov
add
add
lods
inc
push
pop
pushf
mov
xor
sbb
cmp
pop
add
mov
dec
jb
push
ss
fidivs
jnp
cld
lret
mov
push
leave
cmp
pop
push
cmp
adc
add
xor
fmul
cmpb
enter
sub
xor
les
push
ds
leave
cmc
cmp
aaa
es
xchg
cld
or
add
mov
pop
arpl
jge
jb
fnstenv
add
push
dec
or
add
add
or
jo
sub
add
and
js
inc
push
mov
sti
pop
je
repnz
or
mov
fdivrs
push
lods
test
leave
fbstp
cs
pop
jnp
pop
lahf
cmp
sbb
lret
cmc
shrl
add
idivb
in
imul
inc
dec
push
stc
xchg
mov
aaa
test
stc
test
les
sub
adc
ss
clc
inc
add
jb
icebp
push
pop
enter
add
add
mov
iret
jbe
pop
dec
dec
add
jns
lret
cmpb
jmp
cmp
or
mov
adc
add
add
aad
call
out
add
add
imul
add
inc
and
add
add
mov
and
push
sub
pop
xor
ljmp
mov
mov
sub
ficompl
imul
jnp
and
push
faddl
into
pop
orb
sub
jb
mov
pop
cmc
stc
movsl
cltd
cmp
add
xchg
adc
sbb
add
dec
pop
cmp
jae
aaa
mov
ljmp
mov
adc
repnz
cmc
jge
jmp
hlt
add
pop
dec
mov
inc
mov
fcompl
loop
ljmp
js
adc
adc
int3
pop
inc
lahf
nop
popf
cmp
xor
add
add
ret
call
mov
xchg
jo
xchg
jecxz
mov
mov
cmp
adc
mov
inc
enter
jae
ret
std
add
add
cli
sub
add
add
fsubs
add
inc
scas
lods
jg
test
add
xor
mov
or
add
add
add
dec
push
mov
les
mov
test
repnz
push
and
jp
es
icebp
stos
inc
mov
xchg
mov
test
jge
mov
aaa
aas
subb
inc
fidivrs
jb
sbb
cmp
add
add
add
add
mov
fsubrl
add
add
push
inc
sub
out
and
add
jbe
push
sarl
inc
lret
push
sbb
mov
add
insb
add
add
adcb
inc
add
aaa
cmc
stc
pop
cld
mov
inc
sbb
mov
fnstsw
movsb
dec
add
add
ljmp
sub
xor
adc
in
mov
add
jp
orb
mov
add
add
add
add
mov
bound
xlat
add
add
mov
cltd
cmpl
mov
add
add
add
sub
add
add
out
mov
fisttps
stc
sub
add
add
pop
push
or
sub
mov
ds
shl
xchg
jmp
xchg
sahf
sti
jbe
andl
sub
mov
or
add
add
bound
cmc
jno
outsl
stc
adc
repz
jle
aas
data16
add
add
sti
xor
jp
sub
add
add
cli
xchg
out
cmp
test
jo
adc
jnp
add
add
dec
add
add
dec
jl
movsl
test
jge
nop
push
mov
push
pop
jg
adc
push
sub
jb
and
mov
jne
jecxz
pop
movsb
mov
hlt
mov
lea
into
out
dec
add
sub
add
add
adc
cwtl
xlat
jg
or
scas
insl
inc
out
jo
push
popa
outsl
leave
cmp
aad
xchg
shr
nop
jnp
cmp
data16
dec
add
add
dec
add
mov
add
mov
popf
or
mov
into
fcoms
sbb
repnz
dec
icebp
ret
cmpsl
out
fdivrs
insl
outsl
dec
repz
pushf
int3
popf
cmpsl
push
call
push
lods
popf
xchg
scas
ret
xlat
sub
mov
movsb
repz
inc
sub
cmpsl
sub
mov
imul
mov
adc
popf
lcall
sub
mov
add
aaa
in
jno
nop
pop
push
sbb
push
shll
cld
push
jbe
add
adc
js
xor
add
add
push
dec
rcll
idiv
push
pop
cmpsb
xor
pop
aam
sbb
pop
xchg
popa
fdivp
loop
mov
incb
sbb
pop
xchg
xor
into
cmpsl
scas
jae
mov
inc
push
xorl
or
mov
gs
clc
ljmp
xchg
lahf
bound
sahf
loope
mov
aas
es
xchg
adcl
add
mov
jns
nop
mov
dec
add
add
cld
add
adc
add
add
sbbb
loopne
inc
call
inc
mulb
mov
sub
mov
cmp
rol
stc
inc
xchg
rcrb
cmc
push
ds
mov
xadd
sbb
sbbl
std
aam
dec
dec
aad
sub
mov
pop
ss
sbb
pop
push
sarb
notb
or
add
pop
ret
dec
iret
mov
mov
outsb
jecxz
call
loopne
test
mov
movsl
and
add
add
in
in
popf
loope
cld
aas
sbb
mov
idiv
cmp
imul
push
mov
add
jle
cmp
cmc
sub
mov
mov
add
inc
addr16
rorl
fidivrs
insb
add
add
push
sbb
int
sbb
jmp
add
push
adc
jge
and
cs
jne
lahf
repnz
notl
pop
hlt
mov
sub
mov
push
xor
add
add
jnp
mov
mov
test
inc
jae
enter
sub
lret
loopne
or
add
add
bound
sub
add
add
add
add
and
add
add
cmp
add
sahf
sub
call
icebp
fdiv
dec
movsb
push
mov
test
mov
add
add
sbb
sbb
add
mov
jae
aam
call
or
pop
mov
add
cs
rolb
inc
add
add
sahf
dec
xchg
stc
int
jg
cmp
shlb
mov
sahf
ret
rcl
movsl
psubd
lods
cmp
xchg
cmc
int
add
sub
add
add
add
mov
arpl
cltd
leave
dec
add
movsb
pop
in
adc
add
add
xchg
pop
in
loop
popf
xor
sub
outsb
mov
add
cmp
sbb
or
add
add
xchg
add
add
sub
add
add
pusha
add
add
shrl
xor
add
add
mov
sub
mov
or
sbb
stc
sub
add
add
out
aad
add
pop
ja
popa
sub
test
or
inc
add
arpl
inc
jne
jns
sbb
adcl
std
std
sbb
call
add
add
cmpsb
pop
filds
add
mov
add
add
or
mov
dec
or
jle
add
mov
aam
mov
cld
test
jnp
daa
pop
adcb
ss
pop
lret
outsl
testb
and
add
add
call
fucom
shrl
cltd
mov
adc
int
movsl
sub
add
add
push
dec
add
lcall
cli
insb
add
and
mov
or
idivl
roll
add
adc
in
rcrb
imul
mov
add
mov
enter
cmp
mov
jg
insb
add
std
ret
sbb
pop
enter
mov
mov
mov
enter
add
add
or
mov
add
add
adc
push
enter
adc
add
pop
in
jnp
push
cmp
mov
inc
add
arpl
add
add
out
add
add
add
mov
das
dec
call
add
xor
je
sbb
add
add
sbb
xor
push
add
add
xor
xchg
jb
outsl
das
push
in
jnp
lret
add
jge
testb
add
in
mov
fistl
nopl
cmp
xchg
pop
mov
roll
add
pop
xchg
cs
shl
mov
xor
js
dec
cwtl
xchg
gs
cmp
cwtl
pop
mov
gs
sbb
or
sbb
movsb
adc
mov
push
stc
je
test
add
xor
push
aad
hlt
stc
movsb
mov
add
add
push
lock
test
xlat
mov
push
cwtl
add
mov
mov
stc
fucom
enter
or
mov
movsb
and
mov
clc
jnp
pop
jp
jecxz
inc
add
add
mov
mov
daa
cwtl
cli
jmp
icebp
push
lret
xchg
push
sub
and
jp
arpl
mov
mov
add
out
add
add
ficompl
stc
fldl
push
cmp
in
jae
out
mull
pushf
inc
sbbl
pop
dec
sub
mov
imull
add
pusha
add
cmp
loop
dec
mov
stos
push
aad
mov
ss
outsb
arpl
push
iret
mov
clc
mov
loopne
pop
adc
pop
jno
or
add
add
mov
aaa
push
js
loop
ss
sub
and
add
add
push
aaa
pop
or
and
pushf
jo
in
pusha
add
add
stos
or
mov
mov
mov
add
add
scas
arpl
jo
mov
add
xor
add
fisubrl
jecxz
add
add
pushf
or
mov
add
jmp
das
dec
out
or
add
add
call
sbb
inc
push
or
add
add
and
add
add
jmp
stos
stos
test
stos
rcrl
or
mov
add
push
xchg
mov
hlt
in
adcl
dec
lods
xor
outsb
push
loopne
pop
jmp
add
mov
enter
mov
out
ljmp
pop
sub
mov
bswap
lahf
andb
addr16
jb
dec
mov
mov
xchg
lret
cmp
inc
pop
xor
mov
mov
int3
mov
add
xor
repz
mov
fidivrs
popf
cmp
call
pop
lods
cmp
movd
cwtl
push
mov
ss
xchg
lret
push
sahf
pop
rcr
jle
and
mov
je
test
or
mov
imul
mov
adc
int
int
cmp
xchg
mov
clc
adc
pop
push
jns
mov
sub
mov
jg
sbb
scas
xchg
mov
arpl
mov
add
add
jae
icebp
rcll
mov
xor
shll
daa
add
ret
mov
push
mov
in
add
aam
gs
sbb
mov
add
add
pop
dec
les
xor
cld
sub
mov
push
push
pmulhw
inc
mov
inc
stos
sbb
rcr
inc
jno
xchg
or
sbb
push
nop
adc
scas
fisubrl
add
dec
push
xor
xor
out
pop
int3
iret
fcmovbe
xor
fbld
adc
aad
dec
adc
xchg
mov
mov
imul
pop
scas
pop
ret
decl
pusha
add
in
fwait
je
mov
push
mov
add
or
stos
ja
pusha
add
add
add
adcb
mov
push
inc
add
add
addb
pop
push
daa
xchg
out
xlat
dec
add
add
add
add
pop
and
aaa
insl
mov
push
sub
sbb
lret
mov
sbb
stos
je
dec
iret
data16
mov
filds
add
add
mov
scas
test
fmull
dec
add
ds
das
xchg
lahf
adc
icebp
and
or
and
add
add
rolb
xchg
xchg
outsb
and
add
add
cmp
adc
add
sar
push
or
or
xchg
pop
push
fwait
add
mov
add
add
stos
dec
adc
add
add
out
loopne
adc
pop
and
add
out
icebp
mov
add
mov
jbe
fistpl
add
add
mov
hlt
ja
add
add
mov
fsubs
jle
lods
je
sarl
lret
pop
jmp
add
add
and
add
add
add
test
push
push
aaa
cmp
arpl
sub
ret
cld
dec
insl
jp
cwtl
adc
stos
div
mov
xchg
insb
add
push
iret
repnz
sub
loop
mov
jb
sbb
push
push
push
mov
test
add
les
mov
bnd
xor
imul
aas
loopne
in
test
ja
sbb
cmp
inc
and
ljmp
scas
xchg
cmp
mov
cmc
and
outsb
call
push
js
jg
push
and
mov
add
push
out
lcall
and
push
jae
je
sbb
scas
add
mov
add
pop
loope
movsl
mov
dec
sub
add
dec
push
xchg
jb
sti
movhps
inc
mov
mov
mov
mov
cmpsl
push
xchg
or
add
add
repnz
test
push
pop
mov
iret
sbb
les
push
mov
call
or
nop
fstl
lcall
roll
push
and
into
inc
pop
pop
rcrb
fisubs
mov
xchg
dec
out
aas
lods
movsl
cmp
push
jp
dec
add
add
add
or
iret
xchg
sti
int
lock
stos
adc
add
dec
adc
dec
mov
mov
push
call
popf
pop
cmp
cmpsl
jmp
push
inc
pop
jae
jp
cmp
and
insl
dec
add
xchg
not
xchg
or
inc
js
addr16
cli
cmp
cmpsl
mov
out
mov
repz
lcall
jl
repnz
and
mov
mov
add
es
mov
nop
hlt
cmc
mov
mov
or
sub
loopne
sbb
outsl
xor
mov
lea
add
jbe
add
add
mov
std
iret
add
clc
sbbb
jo
mov
jne
popf
add
add
add
stos
mov
aas
adc
or
add
add
mov
ja
ret
add
movsb
cmpl
pop
in
stos
mov
mov
adc
test
push
test
leave
stos
cltd
cmp
mov
inc
add
add
xlat
js
mov
aad
add
int
inc
add
add
push
out
in
or
js
add
add
jae
inc
test
mov
mov
add
ljmp
out
bsr
xchg
mov
js
fisubrs
add
add
xchg
andb
dec
pop
xchg
int
xchg
mov
call
ficoml
mov
cmp
dec
dec
add
add
lock
add
and
icebp
xchg
data16
lods
test
mov
inc
dec
bound
or
out
jne
cs
test
add
pop
mov
pop
or
mov
dec
add
and
dec
inc
dec
add
inc
add
add
add
rorb
sbb
ja
addb
add
mov
mov
es
ds
ss
mov
shrl
cmp
mov
add
mov
mov
or
mov
in
dec
add
sbb
dec
add
xor
pop
cltd
add
cmp
in
dec
add
push
sub
add
add
aaa
ficompl
hlt
mov
pushf
xor
lret
xchg
je
jne
add
add
nop
pushf
add
mov
add
add
not
fsubr
cmpsb
jl
add
mov
inc
sub
add
add
cwtl
ds
fsubrs
mov
stos
jle
ds
pop
dec
std
rolb
add
add
ret
sbb
movsl
enter
fprem
out
out
ret
dec
rorb
jecxz
dec
mov
add
in
mov
add
push
dec
pop
sub
add
add
jb
lods
mov
sub
dec
pop
test
int3
pop
pop
loope
jmp
cli
mov
in
inc
test
lds
add
adc
add
add
cmp
add
cmc
add
add
add
mov
or
adc
nop
adc
dec
mov
add
pop
out
pop
and
add
add
add
mov
mov
popf
mov
jl
dec
add
icebp
xor
in
or
xor
add
add
dec
add
cs
loope
clc
scas
sbb
pop
xor
mov
mov
popa
fcompp
xchg
push
inc
je
jle
repz
pop
ds
add
add
pop
rolb
add
mov
add
add
add
fistl
push
or
mov
add
test
loope
ljmp
add
js
or
adc
stos
imul
sub
mov
jp
pop
lods
pusha
add
add
jp
push
push
jp
pop
or
ja
aam
add
add
add
rorb
in
sbb
or
jge
test
arpl
xchg
imul
inc
shll
or
mov
mov
negl
fcomi
sarb
and
mov
inc
test
xchg
out
bts
push
cmpsl
fcomp
mov
sbb
adc
lcall
xor
add
add
add
add
add
sub
mov
jne
fisttpl
add
fcmovnbe
sub
add
add
popa
test
addr16
push
mov
pop
sbb
xorb
mov
cmp
pop
mov
int3
push
mov
rcl
les
aad
es
es
icebp
xchg
or
pop
xchg
mov
int3
pop
jnp
out
dec
add
add
add
inc
out
add
adc
clc
push
gs
les
jg
outsl
sub
mov
iret
rclb
lods
mov
repz
push
jmp
xor
ret
bnd
pinsrw
xchg
adc
mov
in
stc
inc
sahf
pusha
add
das
clc
adc
add
add
cltd
dec
add
sbbb
stos
xor
xor
mov
jne
in
mov
cmp
dec
lret
jle
mov
addr16
sbb
cmpsl
jnp
movsb
pop
mov
add
add
add
jge
pop
mov
bndldx
mov
mov
pop
sub
add
add
sub
sti
mov
sub
adc
sbb
iret
lods
add
roll
or
test
and
mov
dec
add
add
pop
or
mov
lea
pop
imul
add
sahf
inc
repnz
lods
pusha
add
add
mov
add
add
add
inc
shlb
add
add
movsl
jne
jecxz
loope
mov
and
out
pop
test
mov
jno
aaa
faddp
jae
add
add
ret
sub
push
mov
mov
add
jae
cwtl
pop
inc
mov
mov
xchg
aad
push
xchg
dec
cmp
je
and
adc
add
add
xchg
or
add
add
sub
jg
sahf
aam
ss
rcrb
or
xchg
inc
dec
stos
mov
sub
add
add
add
inc
shll
ljmp
sbb
cltd
xor
mov
jae
mov
mov
xor
jae
cwtl
xor
fdivrs
test
sbb
inc
push
jne
je
mov
test
mov
add
lds
fwait
cmp
dec
pushf
mov
add
clc
xchg
and
in
je
cmc
cwtl
inc
dec
sub
add
add
or
mov
int
fnclex
sti
call
add
add
sub
add
add
mov
scas
pushf
mov
fwait
aam
or
add
add
cltd
lods
bound
jmp
daa
pop
push
cmp
add
add
mov
sub
stc
cwtl
dec
mov
cmp
out
push
lret
stos
int
inc
mov
and
cmp
addl
add
and
jecxz
xor
xlat
pushf
pop
mov
sub
add
add
in
int
add
add
jo
fstpl
add
add
add
filds
mov
xchg
adc
mov
inc
outsb
push
cli
lcall
sbb
add
add
out
sbb
lret
xorb
addl
xor
sarl
mov
lahf
inc
mov
xchg
adc
jg
test
cmp
pushf
mov
popf
or
add
add
cmpsb
mov
mov
cwtl
les
inc
sbb
jns
les
mov
cmp
mov
mov
loopne
arpl
mov
stos
gs
xor
sub
and
mov
jl
hlt
nop
sub
pop
in
imul
jns
push
jp
and
pop
add
and
and
mov
sbb
sub
add
xlat
cli
push
cmpsl
or
mov
add
add
and
fdiv
mov
fiaddl
mov
jl
sahf
mov
adc
dec
sbb
js
adc
adc
mov
pushl
jne
or
fisttpll
push
cmp
cmp
roll
add
scas
insb
add
add
mov
add
cli
inc
repz
and
ficoms
outsb
stc
test
add
add
clc
mov
mov
out
or
mov
fsubrp
sar
enter
or
xchg
mov
inc
add
add
and
mov
mov
pop
out
or
add
add
add
add
cmp
in
adc
jnp
push
mov
test
push
es
mov
inc
add
incb
inc
mov
das
ljmp
add
xchg
int
test
pop
mov
add
and
cmc
sbb
jmp
add
add
xlat
xchg
pop
push
dec
jl
cmp
test
loope
inc
data16
sub
xlat
es
fwait
loop
ffreep
mov
sub
mov
sbb
mov
lretw
xchg
sbb
mov
fnstsw
xor
in
mov
add
testb
lock
aas
or
push
sub
aad
and
pop
inc
or
mov
xor
xor
push
lods
xchg
pop
jle
in
aad
dec
int
add
test
mov
add
scas
scas
push
add
mov
lcall
ret
jg
xchg
jl
or
add
add
add
add
dec
add
cmpsl
xchg
repz
pop
fimull
lahf
pop
ret
push
inc
arpl
dec
cmp
pop
sahf
cmp
ficomps
add
loope
in
imul
adc
add
sub
mov
ret
dec
ficoms
add
pop
lcall
pushf
xchg
in
and
add
add
pop
aas
jmp
add
add
fsubp
sbb
pop
push
scas
push
int
popf
fisubl
movsl
xor
add
add
xor
loop
out
in
js
rolb
mov
xchg
lds
cmp
mov
imul
mov
push
sub
add
add
add
inc
sbb
mov
cmp
add
add
in
inc
or
cmp
sbb
and
nop
inc
or
add
adc
lcall
jo
aaa
xchg
fidivl
add
sbb
and
jo
sbb
push
imul
notb
sub
inc
add
add
div
mov
mov
insl
push
test
sub
push
arpl
out
add
add
imul
in
out
out
retw
add
add
push
mov
jl
call
outsl
sub
mov
lds
loopne
jne
push
mov
add
add
aas
sbb
inc
add
shll
push
xlat
jbe
mov
add
pop
mov
jl
rcrl
dec
mov
in
inc
scas
dec
cmp
lcall
mov
cmp
mov
add
add
push
sbb
cld
add
push
dec
add
add
add
cltd
out
sbb
push
pop
rcrl
add
add
jb
push
jno
loope
dec
add
add
push
mov
xor
add
pop
mov
pop
rol
push
stc
push
mov
mov
add
outsb
sbb
push
ret
lods
jp
ror
cli
dec
mov
adc
mov
stos
int
lcall
add
add
add
repnz
lods
mov
enter
outsb
mov
pop
call
add
add
mov
inc
add
add
leave
mov
jl
mov
aas
test
cmp
cmpsb
or
inc
inc
call
pop
pop
outsb
or
jo
incl
addl
test
inc
outsl
outsb
sub
mov
or
add
xor
mov
cwtl
outsl
jl
xor
fdivl
cld
adc
fnstsw
mov
mov
add
add
jecxz
and
dec
stc
push
and
insb
add
sub
add
mov
jnp
and
bound
add
push
push
test
xchg
mov
bound
aas
mov
dec
xor
sub
das
pop
xchg
add
add
add
sub
lret
jo
add
loopne
add
lahf
fwait
in
leave
push
movsb
cmp
jae
std
adc
sub
add
add
add
xchg
xlat
pushf
cli
rcrb
mov
cli
sbb
out
jecxz
adc
mulb
aad
shlb
add
add
sarb
add
add
add
es
sub
adc
jg
test
gs
cmpsb
and
add
add
add
in
mov
jo
mov
push
mov
cmp
out
mov
addl
cmp
dec
add
add
cltd
lahf
pop
stos
lock
and
lods
xchg
xor
xor
nop
loopne
sahf
pop
add
add
mov
faddl
stc
mov
jb
fstpt
imul
push
add
sub
xchg
lahf
inc
add
cltd
mov
test
orb
pop
xchg
xor
je
push
dec
push
xlat
and
clc
push
pop
cltd
je
xor
adcb
mov
pop
dec
add
adc
pusha
add
inc
add
and
js
add
or
fisttpl
add
mov
ljmp
sub
mov
shlb
and
cmpsb
daa
lcall
add
push
cld
rorl
add
mov
add
sahf
adc
cmpb
aam
and
mov
add
mov
add
and
imul
adc
mov
fwait
mov
add
xor
add
add
iret
cltd
roll
dec
add
cmc
xor
add
add
into
ljmp
cltd
push
arpl
inc
gs
xor
arpl
aaa
adc
scas
gs
add
add
xor
fstpt
test
jae
test
loopne
icebp
push
pop
mov
mov
adc
mov
int
lahf
xor
leave
arpl
cmp
es
add
add
out
into
cmp
xor
mov
sbb
inc
adc
js
sbb
cmp
mov
mov
xor
xchg
add
add
ja
arpl
add
add
add
add
pop
iret
outsb
xchg
in
jge
stc
push
fdivrl
adc
jne
sub
add
add
add
add
inc
push
jge
xchg
leave
jle
lea
add
mov
adc
xlat
mov
add
cmc
enter
dec
pop
adc
add
test
mov
data16
add
add
arpl
add
add
mov
and
mov
add
add
cltd
shlb
stos
lock
ss
xor
xchg
data16
xor
lods
ret
add
movsl
scas
fidivrs
pop
cs
aam
and
add
add
add
inc
mov
test
pop
mov
add
add
xchg
xchg
mov
lret
cmp
jp
sub
cmpl
into
add
add
add
mov
imul
scas
xchg
sbb
decb
pop
sub
sub
push
call
movsl
jne
adc
xchg
int
add
test
mov
xor
xor
in
mov
add
pop
repz
add
or
lds
iret
sti
jbe
sbb
lret
dec
add
push
and
clc
stos
ss
aad
push
or
add
add
cmp
add
mov
repnz
push
and
adc
lods
push
mov
xor
ret
mov
add
or
mov
mov
call
jnp
or
mov
lods
dec
in
pop
mov
hlt
iret
mov
jp
add
add
stc
mov
into
xchg
js
inc
gs
pop
dec
lret
out
leave
pop
jns
insl
adc
xchg
jb
nopl
adc
je
lock
pop
push
imul
add
add
mov
push
cli
bound
add
xor
scas
inc
mov
ljmp
jo
inc
pop
int
lahf
cmp
xor
addr16
inc
or
xor
dec
outsl
sti
shr
dec
lgdtl
mov
int
gs
jp
iret
cwtl
cmc
dec
xchg
mov
out
lods
in
push
shll
add
jle
xchg
mov
dec
fwait
call
add
ret
push
mov
out
adc
jbe
fidivrl
jmp
xchg
cwtl
xchg
sahf
shll
dec
add
or
mov
nop
or
add
add
jmp
je
es
add
add
add
add
mov
add
mov
sub
sub
insb
add
sub
mov
jb
insb
add
add
cmpsb
and
push
iret
test
fldl
rcll
sub
dec
lret
jge
adc
add
add
and
lahf
stos
xor
adc
loope
xor
mov
mov
pop
sbb
mov
add
sub
sti
inc
das
test
cmpsl
aas
lret
shlb
lret
lea
and
jae
int
or
mov
add
add
pop
jns
add
mov
lcall
and
xchg
and
adc
iret
sahf
cmp
scas
jl
addr16
int
xlat
fisttpl
out
xor
add
clc
cmp
add
sahf
add
inc
shrl
add
jmp
and
mov
or
fildl
mov
push
in
das
mov
pop
push
pop
rcll
test
loop
mov
add
add
mov
xchg
add
pop
mov
shll
add
add
xchg
lods
or
fistpl
sbb
push
jmp
cwtl
fisubs
xor
push
ja
mov
hlt
or
mov
add
add
cmpb
int
shlb
add
add
sbb
fnstenv
inc
cwtl
cmpsl
add
sbb
push
mov
push
mov
add
pop
lods
jl
ja
ret
pop
inc
inc
sbb
faddl
add
add
imul
repnz
mov
test
jae
mov
xchg
fistl
adc
add
add
add
add
add
outsb
enter
pop
mov
pushf
jp
fstl
mov
add
jo
mov
cmc
out
int3
sub
ss
jmp
jp
cmp
inc
xchg
pop
mov
or
add
add
test
lds
movsb
jbe
ss
push
mov
add
mov
cltd
push
xchg
xchg
add
or
clc
xor
jb
sbb
enter
orb
adcl
inc
dec
pushf
test
add
adc
lea
sbb
movsb
push
jbe
outsb
inc
add
add
popf
int3
aam
sbb
mov
add
add
cli
stc
adc
mov
add
add
add
xchg
imul
inc
add
add
dec
add
mov
push
pop
stos
aam
add
add
js
adc
sahf
mov
add
add
add
mov
jge
cmc
das
inc
push
mov
ljmp
pop
adc
sub
pop
rol
pusha
add
xor
push
int3
jo
test
cld
pop
popf
stos
and
add
pop
ss
mov
int
mov
repz
iret
add
fsubrs
add
add
add
cli
adc
mov
add
add
and
ret
jne
adc
xlat
push
cld
daa
cwtl
nop
push
inc
add
mov
pop
jb
fldt
or
aad
out
in
pop
jnp
jnp
icebp
scas
imul
sbbb
push
xor
shll
scas
fwait
xor
js
rcll
adc
popa
sbbb
or
mov
xchg
xor
addr16
loopne
add
adc
testb
adc
push
push
or
lods
adc
mov
int3
inc
add
add
xor
cmp
aaa
sahf
mov
add
add
add
stos
lahf
push
pop
gs
sub
js
mov
add
add
pop
lock
ja
clc
rorl
add
pop
jo
test
ret
pop
push
jge
mov
add
dec
add
add
repz
mov
jecxz
outsl
sbb
jae
sub
bound
adc
push
push
imul
sbb
testb
or
dec
mov
add
mov
pop
inc
xchg
clc
fildl
dec
pop
outsb
addr16
mov
mov
cltd
xchg
popf
xchg
add
cmp
lds
add
add
out
dec
add
add
push
fnstsw
lcall
les
insb
add
add
push
inc
hlt
jg
inc
inc
lods
call
jge
xor
fst
push
push
ljmp
cmp
dec
add
ljmp
lds
subl
pop
push
sbbl
push
ret
push
dec
lret
mov
sti
pop
xchg
imul
movsb
mov
in
scas
push
mov
mov
fisttps
stc
test
out
add
ja
ret
cmp
in
adc
add
idivb
pushf
sub
add
add
lret
add
add
sbb
pop
fidivl
insb
add
add
add
test
add
fwait
sbb
inc
rcll
add
add
in
add
testl
fsubp
popl
aas
cmp
xor
pop
repnz
int3
cmp
xchg
push
add
add
popf
jae
int3
fisubrl
or
addr16
mov
sahf
cmp
or
add
add
push
aad
loopne
pop
cmc
mov
fisubrs
xor
xchg
cmp
add
xor
movsb
mov
lods
jo
das
sbb
repz
popa
pop
xchg
das
data16
bound
mov
repz
add
add
loopne
popa
stc
inc
add
add
fildl
lcall
scas
aaa
mov
and
pop
pop
jp,pn
push
sbb
add
add
add
add
add
add
add
add
push
mov
shrb
add
adc
lahf
test
mov
movsb
cs
pop
movsl
and
xlat
dec
xor
xorl
add
aad
ds
lock
decb
cltd
out
es
mov
pushf
add
add
add
fwait
push
cmpsb
cmp
xor
aam
mov
add
pop
push
push
stos
popf
xchg
mov
nop
daa
dec
or
add
or
lret
in
xlat
and
xchg
scas
xchg
fsubp
adc
mov
loope
aam
cmpsb
pop
inc
push
sbb
sub
add
add
dec
cs
pusha
add
add
ja
mov
outsl
sub
push
das
mov
add
aaa
cmp
lret
shlb
loope
or
mov
xor
das
lret
xchg
notl
add
add
sub
mov
ss
lods
add
shll
add
jns
and
push
push
dec
or
add
xchg
in
cmpsl
push
mov
xor
add
add
jne
or
add
add
jecxz
test
dec
call
pop
pop
int
aas
sub
fadd
mov
push
sbb
jge
repnz
cli
repnz
std
lea
add
add
dec
add
cmp
rolb
adc
stos
dec
inc
lret
jne
movsl
mov
cmp
ja
cmp
idivb
enter
inc
jmp
movsb
push
mov
inc
orl
lcall
cmp
mov
cli
adc
pop
shr
not
or
fildll
loopne
xchg
ja
ljmp
xchg
and
and
and
add
fldenv
mov
pop
add
shll
mov
cmpsb
add
add
mov
add
loop
fstpl
jne
mov
mov
mov
sarl
fwait
mov
dec
mov
xchg
and
xor
lods
popf
jae
inc
inc
add
outsb
stc
jae
add
add
lds
add
add
jno
mov
cli
in
adc
push
into
clc
sbb
cmp
dec
fisubl
hlt
addr16
jge
testb
add
in
and
je
cli
fadd
in
sbb
push
ffree
int3
notb
iret
iret
ljmp
mov
mov
loope
mov
add
movsl
repnz
popa
mov
xchg
pop
mov
sub
and
add
int
jmp
adc
jno
xchg
xor
mov
add
add
add
pushf
jns
aad
add
add
out
sbb
jo
cwtl
test
and
jmp
jle
sub
aaa
std
cmp
out
or
or
jae
outsb
add
add
into
pop
jnp
adc
pop
xchg
pop
push
repnz
aad
icebp
pop
in
add
or
add
add
es
loopne
in
cli
outsl
pop
hlt
mov
into
mov
and
xor
cmp
jne
and
add
add
xchg
movsl
xchg
mov
xchg
pusha
add
add
and
add
movsb
xchg
rcll
mov
mov
add
add
mov
out
cmpsb
cld
dec
add
add
jae
inc
xor
add
xor
push
in
ds
stc
sub
pusha
add
and
mov
sahf
cmp
add
add
into
js
mov
stc
ss
fidivrs
ret
inc
add
add
add
shlb
add
clc
iret
mov
cld
pop
cmp
cltd
jg
call
mov
inc
movsl
pop
jmp
add
lahf
aam
andb
lret
mov
rcr
cmp
sub
cwtl
pop
mov
add
int3
cmp
xor
dec
add
or
mov
bound
mov
ret
insl
cltd
cmc
and
fsubp
jl
repnz
mov
xchg
xor
add
add
xlat
lcall
inc
add
xchg
mov
mov
add
add
mov
lods
xchg
jg
test
fld
lea
add
jmp
imul
popf
xor
mov
mov
sbb
outsl
cmc
or
lea
lahf
pop
dec
dec
movsl
push
stc
sbb
add
add
push
push
fwait
gs
cmc
sahf
scas
aaa
mov
lds
lods
cmp
add
shlb
pusha
add
push
push
mov
daa
cld
imul
lret
mov
pop
test
dec
outsb
repz
xor
sub
jb
cmp
cmp
add
add
inc
sbb
xor
add
mov
testl
sub
mov
lret
mov
out
fmull
ret
movsb
and
and
add
add
mov
out
sahf
mov
and
add
add
lods
sub
add
add
mov
mov
cmc
sahf
pop
call
sub
mov
mov
repz
add
cld
pop
push
in
ret
pop
test
arpl
push
daa
add
add
add
les
cmpl
sbb
dec
mov
dec
push
add
add
add
mov
test
call
mov
add
add
aas
hlt
leave
daa
loope
cli
enter
rcrl
dec
orb
adc
mov
out
fadd
es
pop
ror
pop
xor
add
jne
mov
cmp
mov
xchg
or
cmp
and
add
add
mov
mov
mov
dec
add
xchg
xor
mov
testl
inc
test
add
lods
sub
and
add
add
xor
ret
pop
in
data16
mov
add
add
test
dec
push
and
test
xchg
xchg
ret
add
test
je
ficoml
xor
popf
xchg
dec
dec
xor
mov
add
jnp
cltd
xchg
mov
nop
push
enter
addr16
cli
lret
dec
bound
je
mov
sar
test
sub
pop
adc
add
mov
in
hlt
xchg
and
rorb
out
or
shlb
jbe
iret
in
or
mov
mov
mov
add
sbb
pop
sahf
sub
test
call
add
sahf
push
mov
inc
inc
jae
jbe
xchg
mov
add
js
xor
loop
dec
pop
insl
mov
mov
mov
add
add
sub
lret
lock
stc
xchg
scas
mov
dec
push
mov
pop
cmpsb
jecxz
add
mov
jg
xchg
test
mov
ss
dec
aam
push
jbe
test
push
adc
fadds
push
orl
das
inc
add
cmc
ja
xchg
inc
jbe
pusha
add
add
and
push
lods
dec
mov
jmp
sub
mov
jbe
mov
push
push
scas
dec
insl
cs
in
push
testb
jmp
dec
push
sbb
mov
add
rol
jae
repz
dec
add
iret
test
xchg
sub
mov
iret
adc
movsl
or
negl
mov
faddl
add
add
mov
inc
xchg
adc
or
and
add
add
test
mov
cmovle
adc
in
ficompl
add
add
shll
jge
rorl
add
add
dec
add
inc
and
mov
sbb
outsl
xchg
in
sbb
sub
jns
sarl
inc
adc
sbb
sbb
lcall
push
and
addl
cwtl
xor
add
add
add
push
inc
add
bound
cmc
loope
cmpsb
pop
xchg
mov
add
test
add
mov
inc
ljmp
icebp
sbb
sbb
xlat
sub
mov
pop
jl
scas
icebp
fistpll
lods
lcall
or
sub
add
dec
add
mov
daa
movsb
lds
test
add
add
pop
daa
dec
add
add
add
add
hlt
jbe
testb
add
int3
popa
or
or
mov
and
lret
push
test
lock
dec
add
add
jbe
pop
aas
lds
mov
xor
aam
mov
add
add
ja
add
add
stos
fldt
inc
loope
cmp
add
add
push
sbb
dec
add
add
aad
add
int
jg
imul
add
cvttps2pi
mov
fcom
mov
xorb
cwtl
cmp
inc
dec
mov
mov
mov
out
sbb
mov
add
add
jne
jo
test
xchg
cmpsb
jle
xlat
dec
xchg
inc
in
je
ja
jns
jne
dec
insb
add
add
sarl
add
or
inc
lret
ss
add
inc
shl
jle
inc
push
dec
add
jg
sub
add
add
daa
mov
mov
add
lock
mov
outsb
dec
add
add
cltd
rcll
repz
and
add
add
sbb
ja
add
add
add
xlat
jo
mov
add
add
roll
add
jbe
mov
mov
sub
push
push
dec
add
cmp
push
pop
sbb
push
mov
add
add
sbb
adc
push
jecxz
or
add
add
cmp
sbb
add
push
sbb
fimuls
pop
push
jge
inc
cmp
scas
aad
out
pop
mov
add
inc
add
add
and
lods
leave
or
sahf
pop
sub
sub
add
add
adc
jg
xlat
test
add
add
add
push
jnp
pop
jns
xchg
daa
out
adc
out
mov
adc
cmp
mov
jp
pusha
add
fdivrl
or
push
mov
add
add
sbb
add
push
adc
xchg
cmp
stos
cli
jle
or
mov
imul
add
imul
add
xchg
pop
enter
adc
xchg
outsb
iret
fwait
fwait
cmp
jbe
add
add
test
in
fldcw
scas
jbe
outsb
jne
xor
inc
xor
iret
or
mov
sub
mov
sub
inc
jbe
fdivrl
push
out
add
mov
popa
lea
fdivr
cmp
lods
pop
or
xlat
repz
xlat
in
lcall
xchg
inc
mov
int
xchg
xorl
lcall
mov
mov
push
jl
adc
pop
leave
dec
imul
subl
add
xchg
push
test
add
add
and
mov
loop
out
repnz
daa
les
xchg
cwtl
jmp
mov
imulb
cmp
adcl
loop
xor
enter
sbb
outsl
xlat
rorl
dec
inc
jmp
addl
jnp
aaa
bound
jae
dec
add
add
rolb
psrld
xchg
and
fnstsw
add
add
stc
cmp
cmpl
xchg
pop
cmc
std
mov
adc
and
fmuls
in
in
xor
add
into
mov
add
add
xchg
sar
out
mov
jb
aaa
out
cmpsb
aas
lds
adc
push
test
fists
das
pop
notl
pop
push
cld
inc
cld
xlat
scas
clc
test
add
sar
les
mov
jmp
xor
xchg
movsb
and
xor
xor
add
cld
mov
mov
xchg
push
aam
fsubl
add
lret
shr
mov
xchg
dec
add
ss
add
adc
mov
push
div
jb
mov
arpl
into
add
xor
mov
adc
add
add
add
mov
fdivr
iret
arpl
lock
xor
jp
mov
sahf
rcll
fwait
out
loop
jl
sub
loop
cltd
cmpsl
gs
stc
movsb
fnstcw
and
mov
pop
xchg
scas
inc
add
add
dec
pushf
and
add
add
add
add
push
inc
test
cli
and
jp
mov
xor
notb
movsl
leave
and
mov
sbb
or
dec
jp
mov
add
add
xor
ja
add
jns
push
adc
es
pop
mov
add
push
mov
jns
popf
inc
nop
andl
xor
add
in
sahf
mov
add
mov
fisttpl
mov
flds
add
ret
jmp
cltd
lea
or
inc
testb
hlt
loopne
ds
aaa
cmp
cmpsl
xchg
ja
daa
sti
out
xor
sub
mov
test
in
mov
daa
movsl
sbb
outsl
add
jno
add
add
pop
cmp
add
xor
movsb
xchg
sbb
dec
shrl
jno
mov
push
push
push
jns
aas
ss
dec
popa
cmp
out
adc
fcmovne
aaa
cmc
fimuls
out
add
push
lds
or
das
decl
cmc
jae
mov
add
add
jae
inc
inc
add
add
cmp
scas
movsl
sahf
roll
add
sysenter
jg
gs
out
aas
insb
add
add
dec
add
mov
jbe
xlat
push
jge
cmp
inc
rcrb
add
js
mov
in
fisttpll
add
mov
cmp
xchg
arpl
stos
sbb
add
jae
int
mov
sbb
mov
add
loope
xor
add
js
mov
ret
shrl
add
add
cmpsl
loope
loop
test
xor
jg
xchg
add
pop
out
pop
mov
push
pop
scas
movw
lahf
imul
add
pop
xorl
mov
pop
jns
xor
add
repz
mov
divl
mov
fistl
imul
repnz
xorl
test
mov
xchg
outsl
in
stos
xchg
jmp
jnp
stos
xchg
cmp
jae
imul
xchg
lret
scas
add
xchg
dec
pop
addr16
sub
mov
nop
mov
dec
inc
dec
dec
add
add
mov
ljmp
push
mov
lret
add
stos
jmp
add
std
add
mov
add
add
add
and
ret
dec
out
cmp
shl
lods
cmp
mov
pop
test
in
jl
shld
or
add
add
icebp
clc
inc
add
add
or
call
sub
jp
je
mov
fiaddl
xrelease
xchg
xor
sub
add
add
xor
lds
add
lds
push
shll
inc
push
imull
add
andl
lret
add
push
sbbb
add
ss
mov
dec
add
mov
call
loopne
xchg
test
add
daa
sbb
lea
data16
jp
iret
xor
pop
xchg
add
in
mov
loopne
adc
test
pop
dec
add
std
lods
dec
cmp
xor
shrb
push
pop
in
inc
mov
mov
lock
xor
mov
pop
out
mov
adc
mov
daa
inc
add
pusha
add
add
push
add
add
add
out
push
sub
add
add
cmpsl
add
add
int
or
dec
fisubrs
loope
sbb
push
test
mov
push
repz
ja
dec
hlt
bswap
inc
or
add
add
rorb
inc
mov
les
ret
lds
cmp
adc
sar
ljmp
jge
add
add
add
inc
or
shrb
mov
mov
or
mov
xchg
jmp
add
push
add
inc
out
ret
dec
shlb
fidivl
inc
scas
daa
js
adc
orb
in
add
jbe
add
mov
leave
out
incl
mov
pop
push
mov
push
cs
jbe
nop
lds
xlat
push
es
pusha
add
aam
push
mov
xchg
mov
lcall
inc
jae
inc
rcrl
nop
data16
mov
push
mov
orb
add
add
add
dec
push
push
insb
add
rclb
insb
add
movsb
xor
insb
add
loope
add
inc
lret
daa
stos
roll
mov
jle
stos
push
lods
push
jno
ljmp
add
and
scas
cmp
or
mov
add
add
or
mov
sub
in
cwtl
fwait
test
add
add
loopne
popl
ja
add
mov
jno
sub
pop
sub
mov
pusha
add
add
jbe
rcll
add
add
mov
lret
sub
add
add
or
or
push
mov
add
aad
jl
js
add
inc
add
ljmp
add
sbb
lret
add
add
dec
into
push
xchg
out
sti
lods
xor
xor
ljmp
and
mov
aas
ds
mov
add
add
sbb
jmp
clc
and
mov
xlat
out
lcall
inc
sub
orl
clc
xlat
in
lahf
repnz
dec
dec
mov
sbb
aas
sti
dec
jnp
add
mov
add
loope
pushf
jo
test
loopne
cld
in
fistpll
add
pop
nop
cmp
aam
roll
data16
xorb
add
push
dec
push
scas
push
sbb
stos
icebp
popf
sahf
pop
imul
iret
mov
dec
sti
jbe
add
dec
add
add
mov
pop
in
pop
inc
add
add
xchg
dec
arpl
add
add
push
rclb
or
ret
mov
and
add
add
cmp
cmp
mov
iret
add
pop
fwait
adc
add
enter
adc
push
rcll
jns
loope
xor
adc
jbe
lods
fcoml
sbb
adc
add
sub
mov
bound
mov
repnz
cli
pop
mov
dec
push
sbb
add
addr16
pop
repz
pop
popa
sti
je
inc
add
add
add
jns
jno
add
add
mov
xchg
push
push
pop
in
shlb
dec
add
add
sbbl
lock
popf
jmp
add
add
je
add
mov
push
inc
push
jnp
dec
fsubrp
insb
add
mov
add
aam
dec
add
mov
mov
and
mov
mov
xchg
jbe
pop
mov
xlat
or
hlt
int
pop
leave
or
lock
jmp
push
jge
ljmp
fstl
mov
mov
push
sub
or
adc
add
jne
fbld
jl
shr
int3
aas
je
adc
add
add
mov
dec
add
add
jne
repnz
mov
sti
test
fwait
pop
mov
pop
push
aam
push
scas
and
mov
int3
rcll
add
ljmp
jg
inc
add
add
jl
dec
or
dec
add
add
cmp
or
mov
testl
data16
xchg
pop
icebp
imul
lahf
or
inc
and
add
add
pop
rorb
rorb
jnp
xchg
sti
les
add
add
movsb
lods
sub
mov
cmp
add
add
mov
das
rorb
cltd
or
dec
cmp
sub
outsb
sar
dec
dec
inc
je
add
add
insb
add
add
xchg
mov
add
jne
popa
cmp
dec
add
add
aas
and
mov
xchg
popa
pusha
add
and
mov
sub
add
add
icebp
xor
popf
inc
daa
and
xchg
jne
jae
dec
orl
sbb
dec
or
dec
adc
add
cld
dec
mov
jns
inc
mov
jae
lcall
rol
add
mov
sbb
xor
div
ret
mov
add
adc
daa
addr16
ljmp
sbb
add
add
mov
loopne
mov
mov
add
imul
mov
sti
mov
mov
pop
jns
sub
or
lds
xchg
aas
addr16
cmp
test
add
add
push
cs
test
scas
jle
je
or
mov
out
mov
xchg
sbb
shrl
cmp
mov
add
mov
or
mov
sub
mov
iret
xchg
xchg
ds
hlt
sbbl
lods
ret
sub
xchg
jl
jne
push
jg
lahf
stos
xchg
add
inc
jp
aas
ss
mov
and
mov
adc
mov
in
sahf
or
add
add
mov
xchg
pop
shrl
add
cmp
add
add
lock
add
loop
add
add
leave
movsl
lods
xor
mov
scas
insl
push
ret
cmp
nop
lods
div
bound
bound
add
ror
shrb
push
adcb
stos
mov
cmp
in
sahf
jnp
add
add
sub
and
ljmp
mov
add
add
outsl
lahf
movsl
inc
scas
inc
loop
daa
pop
or
or
mov
stc
mov
push
xchg
mov
nop
dec
cmpsb
and
xchg
mov
bound
movb
add
add
outsb
mov
das
adc
jns
outsb
clts
adc
ftst
clc
arpl
std
cld
fistps
push
stc
in
movsb
enter
add
rcll
jo
jmp
or
jb
stos
push
ljmp
mov
add
cmp
inc
or
or
fsub
imul
or
cmp
jg
jecxz
cmp
adc
stos
cltd
pop
add
cmp
or
push
sar
aaa
and
xlat
add
sar
dec
xor
jbe
insl
rclb
add
add
pop
test
out
rcrb
vmulpd
mov
fsubrp
jo
ret
add
mov
sub
add
add
in
arpl
cmpsb
mov
jmp
add
add
sbb
gs
cltd
cmpsb
xchg
and
add
add
cmp
out
adc
inc
call
add
mov
lcall
add
add
dec
mov
leave
cmpsb
loopne
mov
movsl
push
aas
xchg
or
mov
pop
xchg
mov
lcall
pop
lahf
leave
xor
adc
mov
or
add
add
shr
mov
add
inc
add
lds
xor
idiv
add
xor
jle
out
or
das
push
call
je
mov
cmp
and
aas
cmpl
loope
loopne
mov
ficoms
xor
push
gs
popf
cmp
rcrl
inc
cmp
adc
out
lret
mov
mov
xor
mov
aas
sti
jo
ret
sbb
add
test
adc
mov
and
mov
add
add
shlb
mul
push
cmp
aaa
es
aaa
inc
add
push
mov
jg
bound
add
add
sbb
cmp
scas
sub
add
add
xor
addr16
pop
mov
scas
insl
mov
test
mov
and
mov
fprem1
mov
add
or
das
jne
mov
mov
adcl
movsl
aam
and
mov
inc
add
add
or
push
shll
xchg
stos
shll
cmp
sbb
mov
test
mov
add
in
mov
mov
or
shlb
fidivrl
lods
in
int3
movsb
mov
add
leave
in
push
dec
xchg
loopne
lods
mov
pop
addb
movl
jnp
movsl
ss
cwtl
pop
enter
loope
mov
add
popa
ja
adc
and
ljmp
add
add
lahf
out
adc
loop
cmp
test
outsl
in
js
repnz
sbb
inc
add
add
data16
add
add
add
jo
pusha
add
add
sbb
mov
aam
add
add
loopne
add
add
lods
stos
hlt
les
jns
jno
mov
push
mov
cmp
and
xchg
jae
xor
add
add
out
lret
js
iret
mov
addr16
push
sbb
sbb
xlat
neg
outsb
add
in
out
jg
add
add
imul
bound
loop
add
add
cs
mov
icebp
in
sub
mov
xor
cmp
lods
stc
sub
xor
add
add
ja
dec
mov
jle
push
call
adc
pusha
add
mov
sbb
mov
sub
mov
and
add
add
pop
mov
cwtl
fistl
add
in
mov
aas
pop
pop
jmp
mov
add
lret
rorl
pop
nop
dec
nop
into
mov
cwtl
sub
sbb
das
aaa
cld
imul
mov
sbb
jno
jns
aas
dec
mov
jne
sar
inc
sub
clc
int
jnp
add
mov
iret
insb
add
add
dec
sub
add
add
add
jns
add
lock
iret
cmp
shl
int
fsts
insl
mov
xchg
add
lods
fisttpl
in
inc
and
test
mov
xchg
dec
push
int3
jp
push
cld
loope
in
add
add
stc
mov
hlt
or
add
add
add
add
add
xchg
mov
in
outsl
lret
jmp
xchg
mov
shr
push
cli
imul
insl
hlt
push
and
xlat
mov
cmpsb
xchg
inc
add
or
test
xchg
jo
gs
add
add
add
and
loope
adc
add
mov
add
push
test
movsl
into
addr16
sbb
adc
scas
subl
pushf
sarl
push
iret
fcmovnu
bound
pop
mov
mov
xor
repz
pop
and
xchg
add
add
inc
aad
ret
dec
repnz
add
add
mov
pop
mov
add
add
leave
mov
in
mov
cmp
fldl
addb
add
add
cmp
inc
add
add
add
imul
lock
imul
scas
jge
inc
js
xor
push
ss
lds
or
add
add
add
add
add
add
iret
and
mov
int
push
push
pop
xor
loope
je
push
sub
pop
sub
mov
add
add
ljmp
mov
test
movsl
sbb
xchg
popa
movsl
outsb
fucom
mov
adc
mov
in
stos
dec
shlb
scas
mov
cmp
push
ret
rcr
sub
add
cltd
dec
add
push
aas
jo
add
add
jmp
inc
jge
nop
mov
sbb
jae
jecxz
ficoml
int3
movsl
fsubr
scas
and
cmpsl
rorb
scas
sahf
xchg
fistps
inc
imul
add
popa
xchg
cmp
pusha
add
das
sub
lds
rcll
push
mov
ja
daa
fcoms
add
add
and
imul
cmp
in
iret
test
or
fldenv
or
jae
mov
add
and
or
add
add
push
mov
popf
in
mov
xchg
jecxz
gs
push
test
cmpsl
push
aad
sahf
fcompl
scas
xlat
leave
push
push
add
push
inc
add
add
mov
xchg
out
add
add
pusha
add
add
lahf
add
mov
xchg
sbb
and
add
mov
ret
pop
mov
icebp
loopne
push
test
pushf
dec
add
sub
add
add
or
pop
push
and
add
add
mov
add
add
add
dec
add
add
aaa
jne
push
jmp
rcrl
add
add
push
xchg
xor
add
add
dec
icebp
lret
add
add
mov
mov
xchg
mov
mov
add
je
divb
add
add
add
aam
cltd
sbb
out
sbb
mov
je
out
mov
sti
les
add
jno
stos
iret
add
add
pushf
pop
shrb
add
add
add
add
jne
mov
ror
sbb
mov
adc
cmovbe
add
add
add
push
leave
adc
fidivrs
adc
and
mov
leave
popa
jmp
dec
inc
mov
lret
or
mov
scas
nop
pop
into
pop
adc
mov
cmp
pop
inc
mov
add
fwait
repz
lods
cli
es
mov
adc
cld
or
jnp
and
popf
dec
add
add
jp
add
add
add
mov
push
repz
inc
adc
push
push
hlt
and
add
add
xor
adc
loope
arpl
dec
add
lods
clc
sahf
sti
dec
add
add
sti
inc
push
cli
shrl
sahf
test
add
add
addr16
dec
add
add
mov
xchg
or
add
add
push
cmp
aam
adc
sub
mov
hlt
sub
mov
insl
mov
lock
adc
sbb
aaa
xor
add
pushf
and
ja
shl
sub
mov
cmp
mov
fildl
add
pop
addr16
xchg
jns
xor
xchg
mov
pop
pop
push
rcrl
xor
sti
aaa
stc
test
dec
add
rclb
push
or
pop
mov
into
ljmp
mov
int
mov
jae
mov
or
mov
adc
out
sbbb
outsl
ljmp
es
push
lea
add
add
mov
add
lret
adc
dec
cmc
push
pop
cmc
arpl
mov
pop
je
or
mov
clc
mov
inc
lahf
mov
push
fnstcw
inc
cmp
sarl
cmp
add
jns
add
pop
scas
cmp
repz
jb
dec
data16
or
mov
sti
leave
dec
sbb
loop
mov
mov
add
add
add
ret
lods
mov
cmp
jae
add
mov
mov
fsubs
out
push
dec
pop
mov
dec
movsl
enter
lret
pop
or
fwait
ja
jns
cmc
nop
cmc
aad
out
push
shlb
add
push
push
xor
jmp
sub
add
add
pop
mov
inc
push
mov
add
add
mov
shr
jbe
xor
xor
sub
xchg
ret
dec
dec
dec
inc
lods
pop
mov
shll
inc
add
arpl
fimuls
xor
adc
andb
fwait
or
add
add
push
xchg
stos
xchg
inc
lods
icebp
test
aas
dec
add
add
inc
xor
and
add
sti
mov
sub
out
sti
push
sbb
xchg
xchg
add
add
fdivrp
into
mov
sub
add
add
sbb
inc
stos
ds
jae
cmp
lods
push
or
shlb
add
add
outsl
push
push
insl
ja
test
add
ja
adc
mov
push
xor
movsl
mov
mov
add
add
shl
movsb
in
jp
fcmove
mull
lea
add
add
mov
cmp
xor
jl
push
push
rclb
add
add
lock
mov
pop
rorb
lods
or
push
mov
xchg
mov
je
jge
inc
fcmove
popl
cli
test
stos
pop
negl
adc
sti
pusha
add
add
int3
jmp
pop
fbld
add
es
mov
mov
jecxz
pushf
inc
loop
mov
xchg
inc
stos
mov
je
stos
cmp
push
adc
sbb
or
inc
test
add
or
mov
outsb
test
popf
and
ljmp
add
add
hlt
divb
xchg
scas
mov
jae
add
xchg
pusha
add
add
pop
add
add
add
rcrl
xor
mov
loope
leave
pop
dec
icebp
int3
sub
push
hlt
sbb
add
add
add
mov
pop
mov
xchg
fldt
add
mov
out
pop
pop
aam
add
add
sti
mov
add
add
add
push
mov
add
jg
sbbb
and
test
outsb
xchg
in
hlt
test
jge
pop
and
mov
fwait
loop
and
data16
leave
std
push
sbb
stos
fcmovnb
lea
push
bound
outsl
popl
jb
xchg
add
xor
stos
mov
pop
fstpl
clc
pop
push
repnz
xchg
ja
dec
mov
loopne
out
fwait
jns
push
imul
or
mov
dec
repnz
or
inc
add
sahf
mov
add
add
mov
inc
add
xchg
inc
neg
lods
shl
cmc
js
cld
lret
mov
mov
mov
push
cwtl
js
roll
adc
add
and
in
pop
sub
mov
mov
sbbl
iret
out
jle
push
pop
mov
mov
stos
insb
add
outsb
xor
imul
sub
add
add
jge
add
or
rcrb
mov
add
add
add
xor
dec
icebp
or
add
iret
xchg
or
dec
aam
sub
dec
add
add
cwtl
inc
sbb
lods
stos
fdivl
int
stos
rcr
add
sub
mov
mov
scas
push
notb
add
insb
add
add
pop
xchg
mov
arpl
sbb
ret
push
hlt
scas
jno
mov
es
and
add
add
sub
sbb
shlb
add
add
adc
fsubrl
push
in
jl
xchg
shlb
xchg
in
xchg
and
push
adc
stc
mov
add
add
gs
mov
cmp
or
add
add
ljmp
sahf
mov
rclb
xor
mov
add
inc
aad
cmpsb
nop
lods
pusha
add
add
and
mov
add
or
jge
push
adc
stc
flds
pop
sub
mov
leave
adc
fmulp
lock
adc
xchg
pop
pop
xor
adc
pop
bound
or
or
add
add
jbe
daa
dec
add
int3
or
xchg
insb
add
jl
fistpll
add
add
ds
inc
jnp
add
add
inc
add
add
incb
fstl
cmp
clc
inc
add
add
lods
and
xor
fldcw
inc
add
add
xlat
push
std
xor
xchg
mov
push
pop
in
fwait
xchg
imul
jmp
and
cs
sbb
jo
mov
mov
inc
je
cmp
or
lock
fimuls
cwtl
dec
rorl
and
push
notb
dec
add
add
pop
rolb
out
aaa
out
bound
iret
xchg
mov
les
jae
xchg
dec
push
test
pop
leave
add
out
jl
scas
xchg
pop
jp
mov
mov
add
xchg
inc
add
add
inc
das
outsb
sub
enter
pusha
add
xor
mov
ds
mov
pop
inc
out
in
sub
add
add
repnz
sub
xor
xrelease
add
add
jae
lahf
movsl
arpl
mov
frstor
dec
add
subb
mov
xor
mov
jae
jno
sbbb
mov
add
addr16
mov
xor
cmp
add
add
add
add
add
mov
dec
xchg
jge
ljmp
repnz
pusha
add
xchg
roll
outsb
mov
mov
mov
or
xchg
pop
in
fimull
xor
and
shlb
add
xchg
imul
hlt
jecxz
out
mov
push
jnp
xor
xor
dec
pop
mov
xor
repz
mov
add
add
lret
call
gs
add
dec
jp
call
rcl
aad
mov
add
add
mov
push
inc
add
add
cld
inc
ja
nop
pop
std
jp
dec
add
add
dec
dec
mov
ret
jle
idiv
cmc
icebp
sbb
cld
push
and
subl
addr16
adc
inc
mov
add
add
add
ds
hlt
and
add
add
in
dec
add
add
and
add
add
mov
fcomi
ret
xchg
aas
add
inc
add
pop
dec
add
divl
add
add
add
sbb
jo
icebp
insb
add
bnd
ret
pop
push
jo
jbe
mov
in
into
push
popa
aad
daa
cmp
lahf
dec
jge
testl
push
mov
add
push
mov
push
lcall
jo
add
sub
mov
std
popa
dec
adcb
jnp,pn
sbb
add
add
mov
add
enter
pop
cmp
add
xchg
mov
dec
daa
movsl
mov
mov
or
into
cli
xchg
add
add
sti
dec
mov
cld
in
jae
es
push
sbb
movsb
mov
add
inc
xchg
nop
mov
xlat
jp
in
fisttps
ja
inc
scas
fsubrl
mov
test
dec
aad
call
movsb
sbb
mov
cmp
movsb
data16
outsl
push
nop
cmp
adc
jg
xor
add
mov
scas
pop
inc
lcall
add
inc
add
push
adc
mov
adc
xchg
push
pushf
repnz
xchg
push
jg
add
add
jnp
pushf
xor
jne
in
xchg
push
outsb
jbe
xlat
push
and
mov
or
inc
out
xchg
js
movsl
fsubs
add
inc
add
add
out
test
lret
sti
mov
mov
mov
cmpsb
clc
or
shll
add
aam
cmp
mov
jle
push
sti
add
mov
add
sbb
add
add
add
inc
movsb
push
or
test
pop
fcmovnbe
fsubrl
add
sbb
aam
scas
loop
and
inc
mov
sbb
jnp
pop
cmpsl
addl
inc
sbb
adc
mov
out
sub
mov
mov
add
add
mov
xor
cmp
cmpsb
jne
push
jnp
or
add
add
push
jno
add
orl
in
push
or
push
cltd
sub
add
leave
pop
lea
add
loop
pop
sbb
add
sbb
push
in
stos
shlb
cmp
mov
pop
stos
xor
mov
das
and
mov
ret
shll
cmp
sahf
je
jmp
popa
lds
mov
inc
add
add
loope
insl
js
add
decl
add
add
sub
add
into
lds
adc
pop
lret
push
adc
sub
or
movsl
leave
dec
xchg
mov
ljmp
sub
and
add
add
cmp
and
mov
add
add
repnz
add
push
stos
es
lods
inc
int3
and
add
add
add
adc
lock
and
add
add
add
add
and
arpl
ret
push
fisubs
add
mov
pop
jmp
sahf
cmpsl
add
mov
sub
dec
ret
pop
pop
mov
add
lret
xor
push
mov
jbe
jle
in
rcrl
movsl
inc
cmp
jo
lret
add
add
fisubrs
add
add
mov
jecxz
sbb
dec
fadds
mov
gs
stc
sub
add
add
stos
mov
out
xorl
pop
jo
add
sbb
xor
mov
add
lcall
and
mov
mov
outsl
dec
ljmp
lret
aas
imul
popf
shrl
add
sbb
add
add
test
add
add
or
cs
fldt
movb
fildll
shll
mov
nop
rcll
mov
shll
add
jne
gs
cltd
test
dec
add
adc
xlat
dec
jmp
add
loope
add
add
push
dec
jno
xchg
add
add
inc
add
add
test
lods
mov
lock
adc
lret
pop
enter
lods
lcall
or
xchg
lea
and
add
fstpl
add
add
or
dec
xor
adc
add
push
pop
xchg
adc
iret
push
sub
repnz
dec
add
add
cltd
dec
loope
js
xlat
push
cmp
add
add
pop
ljmp
jecxz
les
mov
add
or
and
mull
add
cmp
adc
fdivrl
cmc
insl
outsb
out
inc
pop
sbb
out
out
push
cli
das
call
mov
add
add
pop
xchg
mov
mov
clc
enter
add
cmp
add
add
loopne
add
add
add
add
add
adc
mov
inc
add
add
cmp
adc
mov
fldcw
adc
scas
stos
imul
in
mov
pushf
bound
addb
cmp
dec
daa
sub
add
add
scas
ds
jmp
mov
cli
leave
jns
cmpsl
mov
movsb
pop
add
mov
icebp
push
rorb
add
add
jl
lret
enter
lods
cmp
add
add
negb
imul
jo
and
mov
jbe
sti
pushf
add
add
add
scas
mov
dec
add
pop
clc
pop
in
mov
add
aam
jle
mov
std
bound
xchg
shr
into
movsl
xor
in
mov
arpl
xor
shll
sahf
mov
out
loopne
call
push
dec
add
add
std
push
sub
mov
add
mov
cmp
add
add
fdivrp
dec
cmp
stos
dec
addb
mov
daa
setl
fsubr
pop
aam
jecxz
xchg
add
cmpsl
jo
add
add
cmpsb
sbb
cmp
sbbb
xor
add
sbb
fdiv
mov
daa
sub
add
xor
xor
push
or
jle
scas
push
mov
mov
add
sub
mov
pop
cmpsl
sub
add
iret
fsubs
or
jmp
enter
mov
xchg
lds
dec
ds
push
iret
popf
xchg
xchg
push
orl
add
add
adc
add
inc
flds
jno
repz
xor
out
pop
in
inc
xchg
aad
jae
stc
cmp
xchg
imul
add
add
test
or
das
scas
jecxz
das
push
scas
imul
shrb
push
jne
xchg
pop
jnp
push
fisttpll
jecxz
add
mov
loopne
pop
hlt
add
add
add
sub
dec
add
faddl
add
add
and
add
add
mov
icebp
bound
add
into
decb
cmp
jg
mov
dec
add
add
jne
in
dec
add
add
or
sub
mov
lds
jnp
cmp
pop
lahf
xor
add
add
add
aas
test
movsl
dec
add
mov
std
sti
es
sbb
sbb
add
push
jp
push
stos
xchg
std
mov
mov
or
sbb
xor
cmp
pop
sahf
cmp
push
testl
das
sbb
cmp
fnstcw
add
mov
mov
lret
rep
xor
xor
jmp
add
mov
or
loopne
or
leave
push
add
dec
repnz
add
add
dec
dec
test
xor
leave
sbb
loope
rcrl
xchg
pushf
lret
mov
fcompl
push
iret
in
mov
and
inc
lret
add
dec
add
add
lock
ja
inc
add
add
cltd
ret
pop
xchg
das
lcall
jecxz
xchg
xchg
loope
daa
inc
add
jbe
adc
and
add
add
rcrl
or
mov
in
mov
add
enter
inc
add
add
scas
out
xor
sub
add
mov
mov
add
mov
jno
and
push
dec
add
jl
xor
cs
push
push
arpl
inc
sub
xchg
sbb
lcall
popf
cmp
pop
dec
fwait
lea
dec
sub
inc
cmpsl
xchg
mov
jo
sahf
lret
xchg
pop
negb
ja
add
sbb
cmp
aaa
stc
push
mov
loope
insb
add
add
sub
aas
adc
scas
mov
xor
inc
test
jmp
add
cmc
ss
cli
sbb
test
out
inc
xor
add
and
cmpl
add
in
lods
adc
in
in
xlat
outsl
popa
add
insb
add
jecxz
sbb
ds
add
add
add
cmpsb
or
imul
imul
incl
add
add
movsb
adc
mov
ret
sub
jmp
add
add
xchg
add
add
xor
lret
test
lcall
adc
mov
sbb
popa
push
imul
inc
movsb
ficompl
add
je
out
adc
add
add
mov
andb
mov
lfs
aad
add
add
ds
outsl
fadds
add
mov
push
fwait
cmpps
aam
xor
xlat
insl
dec
icebp
sub
popa
adc
add
add
jno
in
fwait
inc
add
add
add
adcl
call
ja
gs
lret
add
adc
daa
orl
add
or
nop
fnstsw
enter
cltd
scas
fcmovnbe
mov
add
jns
inc
lock
stos
scas
ret
les
or
add
add
shlb
sub
add
add
mov
mov
ja
add
aam
or
les
add
add
outsl
hlt
jne
jg
add
outsb
cltd
and
cmp
add
add
shl
in
out
add
add
and
add
add
inc
pusha
add
cs
add
movsb
jb
out
jo
mov
repnz
or
push
aaa
cs
add
cld
inc
xchg
fwait
jge
in
xchg
inc
add
add
cltd
scas
and
push
mov
pushf
pop
not
or
add
jne
xor
add
mov
lock
loop
pop
sbb
add
add
fidivrs
xor
pop
mov
and
add
add
add
outsb
sbb
and
icebp
pop
cmp
fimull
adc
cwtl
mov
outsb
xor
push
inc
mulb
add
xchg
add
add
add
add
xchg
jnp
out
cmp
addr16
pop
add
dec
lret
dec
cmp
mov
add
and
inc
or
jno
jmp
add
popfw
roll
add
lock
stos
add
out
adc
jge
add
add
iret
jg
call
xor
ja
js
add
add
cmpsb
decb
mov
ret
add
mov
jno
sub
add
add
pop
nopl
push
mov
mov
add
add
out
out
pop
iret
mov
add
add
js
pusha
add
add
cltd
lock
leave
mov
mov
mov
es
adc
rol
mov
dec
push
jne
sub
add
add
popa
je
rclb
xor
dec
shll
scas
push
sarb
inc
add
popl
mov
pop
adc
adc
in
insl
pop
xchg
xchg
data16
aad
out
nop
push
push
sub
mov
push
insl
sub
jg
mov
sahf
push
sub
lcall
lock
mov
add
stos
xor
jo
sub
insl
xorb
add
dec
negb
mov
mov
mov
push
mov
mov
add
add
dec
adcl
frstor
add
add
add
es
jb
jno
mov
pop
xchg
inc
add
add
std
mov
xchg
mov
mov
fidivrs
shll
pusha
add
mov
add
data16
cmp
jns
and
mov
xor
movaps
mov
and
clc
sbb
sbb
movsb
mov
xlat
jns
lcall
mov
cmp
in
pop
cmc
pop
sbb
cwtl
add
add
add
xchg
inc
pop
xchg
add
insl
or
mov
pop
jb
adc
stc
sub
mov
clc
test
subl
xchg
xchg
rcrl
clc
test
sbb
mov
add
or
jecxz
adc
fnstenv
adc
jnp
jge
pop
push
and
mov
pop
cmpsb
sbb
adc
jo
pop
mov
mov
cmc
jle
add
scas
mov
idiv
jns
ss
lods
loop
cmp
stc
fildl
add
insl
xor
jle
jge
add
add
dec
out
lock
add
add
push
cmp
mov
pop
adc
or
mov
enter
sahf
dec
andb
dec
sub
hlt
mov
repnz
add
add
push
sub
add
add
and
add
add
mov
adc
test
pop
mov
inc
int3
in
xchg
sub
roll
push
pop
pop
subl
cmpb
test
pop
cld
sub
add
cmp
sbbl
sub
repz
add
add
push
mov
push
cld
iret
and
add
add
add
or
adc
mov
adc
add
add
mov
cld
rorl
popa
add
mov
jmp
aaa
xorb
pop
jnp
push
gs
add
cmp
pushf
mull
xchg
sbb
xor
and
mov
push
mov
out
pop
mov
add
mov
xor
cmp
mov
iret
les
out
push
daa
lods
push
inc
jns
es
jno
push
cmp
ror
je
inc
mov
pop
sbb
scas
fbld
inc
add
add
mov
aad
fcmovnbe
sahf
pop
xchg
cwtl
aam
add
add
add
cmp
add
add
jnp
movsb
ja
inc
lods
sbb
idivl
iret
push
iret
lret
pusha
add
add
dec
add
add
mov
or
shll
jmp
inc
jecxz
sub
mov
mov
mov
cli
adc
faddl
fldcw
lret
sarb
cld
ficoms
inc
cmp
jle
xor
xor
add
addb
adc
xor
xor
and
movsb
fiaddl
mov
movsb
data16
add
lods
adc
sahf
pop
movsb
frstor
repnz
imul
add
add
setge
or
int3
mov
shr
pop
shlb
cld
cmc
sbb
add
mov
dec
add
popf
push
mov
test
movsl
mov
push
xchg
mov
lods
lret
mov
jb
testb
jmp
out
lahf
bnd
loop
jl
orb
and
mov
fidivrl
jae
add
mov
mov
add
dec
add
adc
pop
and
fwait
int3
cmp
loope
ret
movsb
hlt
adc
add
shrb
pop
imul
mov
add
add
add
xchg
mov
std
add
add
mov
aas
push
xchg
jbe
in
adc
jmp
xchg
js
lret
mov
add
add
xchg
mov
movl
add
inc
add
xlat
and
add
mov
mov
pop
and
into
pop
mov
xchg
dec
add
add
movsb
aaa
jp
pcmpeqw
or
cmp
pop
pop
pushf
mov
add
or
sbb
ss
sarl
add
das
loop
inc
add
add
inc
mov
add
add
add
add
addr16
and
add
in
sub
add
add
sub
andb
add
inc
mov
repnz
mov
hlt
iret
sub
mov
in
add
add
push
movsl
sub
xchg
out
mov
add
add
pop
jg
dec
fimuls
xor
mov
mov
insl
xchg
mov
add
stos
add
lret
lahf
jl
mov
lock
adc
pop
lcall
out
jno
in
in
push
cmp
xor
iret
movsb
pop
push
inc
inc
adc
push
js
cvtps2pi
cli
loope
insb
add
add
mov
inc
in
jmp
add
popa
jb
and
push
pop
inc
fisttps
iret
out
mov
mov
cmp
mov
xor
push
in
aam
dec
loopne
dec
add
xchg
dec
add
add
jecxz
adc
xor
iret
movsl
loopne
jno
movsb
jne
in
mov
loop
pop
add
gs
mov
pmulhuw
xor
xchg
insb
add
or
mov
call
sbb
movsb
addr16
sbb
stc
push
lret
xor
xchg
sub
orl
add
xor
add
add
mov
adc
add
aaa
out
mov
aas
push
call
lds
ja
sbb
or
mov
insl
leave
cmp
mov
mov
push
fwait
xor
jns
jb
push
xchg
inc
add
add
xchg
adc
loop
clc
in
lds
pop
addr16
data16
notb
mov
xor
jle
jmp
cmpl
jne
sarl
add
sub
add
add
pop
jae
cmp
and
add
add
mov
mov
nop
lds
add
xchg
insl
sbb
push
subb
orb
add
sbb
js
xchg
sub
into
pusha
add
add
xlat
sarl
sub
sub
add
add
add
sbb
mov
stos
insb
add
xor
add
pusha
add
add
adc
inc
mov
lahf
outsb
lock
pop
jae
inc
jne
cwtl
fidivrl
enter
inc
or
rclb
lret
add
add
popf
stos
adc
adc
or
cmp
mov
add
adc
sub
pop
mov
in
js
adc
dec
mov
add
dec
into
lret
aaa
sub
xchg
adc
dec
das
stos
jg
ss
fcomps
mov
leave
in
mov
mov
add
add
ficompl
add
jle
int
fsubrp
sub
mov
sub
mov
jns
negb
add
fsubrl
loopne
mov
mov
add
add
int
dec
add
add
les
cld
or
arpl
add
lods
dec
xlat
mov
ljmp
mov
add
cwtl
nop
lret
int
add
loope
mov
test
lret
in
fildll
add
add
xlat
lret
add
add
das
cli
push
and
mov
lods
imul
jmp
shl
scas
push
or
and
mov
fxtract
mov
add
mov
rorl
cld
xor
ret
pop
cmpsb
jecxz
sbb
fimuls
add
xor
mov
adc
pop
rorb
add
mov
pop
iret
xchg
shlb
jns
jl
loopne
call
and
jb
stos
inc
xchg
sbb
mov
dec
or
or
jmp
mov
pusha
add
add
je
sbb
in
xor
push
out
sbb
hlt
dec
inc
sbb
add
add
and
mov
in
mov
pop
hlt
push
loopne
mov
push
inc
add
fwait
bound
ss
fistpll
sbb
cmpsb
addr16
mov
xor
add
loopne
call
sub
mov
add
jg
dec
add
jb
fildl
aas
insl
xchg
ja
pop
out
mov
add
add
add
sbb
je
insb
add
add
add
fstpl
push
xchg
pushf
sbb
and
mov
outsl
cmpsb
xchg
into
clc
aad
add
enter
outsb
and
out
add
add
cmpsb
out
mov
dec
push
nop
jp
adc
lret
and
add
add
jecxz
lock
sarl
mov
add
je
pop
sti
cltd
in
stos
dec
push
out
mov
push
lods
loopne
sub
add
repnz
fisttps
push
int
jb
add
mov
imul
mov
nop
xchg
add
testl
xchg
movsl
das
fildl
xchg
mov
jp
dec
call
hlt
push
inc
xchg
mov
jg
lock
inc
add
jmp
cmp
sbb
add
add
ror
loopne
loop
jnp
push
loop
mov
add
add
add
mov
jle
push
daa
mov
sub
shrb
aaa
push
adc
mov
clc
popl
inc
test
bound
add
in
mov
dec
add
add
push
lahf
pusha
add
add
lret
fldenv
mov
fwait
jp
inc
daa
lcall
ret
mov
adc
mov
pop
movsl
ss
push
dec
add
add
fbld
add
fwait
aad
sub
mov
mov
mov
add
add
mov
jmp
insb
add
pop
mov
aas
mov
rcrl
lock
sub
testb
add
popl
add
pop
test
data16
jg
jmp
mov
push
cmpb
add
gs
cmp
int3
sbb
pushf
sbb
xchg
cmpsb
pop
or
jp
dec
mov
jne
jecxz
push
inc
ss
add
add
pop
jnp
insl
in
imul
cmp
cltd
push
cmp
sub
rcll
jnp
je
push
stc
ds
stos
mov
jne
sbb
or
jae
repz
add
inc
mov
divl
sub
mov
int3
cmc
pop
push
fldenv
testl
add
or
sbb
inc
add
lea
add
add
add
add
in
in
sub
mov
add
add
or
xchg
xchg
add
add
rcrb
jns
or
test
aam
push
lret
xchg
inc
rcll
sbb
loopne
xor
add
add
push
mov
icebp
gs
xchg
or
mov
insl
xchg
gs
xchg
fildll
adc
add
add
std
xor
xor
sbb
fnsave
jmp
inc
add
add
add
mov
scas
das
fsubr
mov
cmp
sbb
popf
adc
push
test
sbb
xlat
test
lock
test
shr
lds
mov
mov
pop
insb
add
mov
stc
and
add
add
inc
jbe
daa
cs
pop
push
cmp
add
add
add
cmp
int3
fwait
cmp
mov
mov
push
stos
mov
jo
or
add
add
xor
into
jbe
out
ljmpw
xchg
dec
add
or
add
cs
dec
mov
repnz
mov
add
ret
push
ljmpw
ja
sub
push
aam
shlb
sbb
add
dec
icebp
mov
iret
adc
lods
addr16
stos
sbb
pop
mov
enter
sbb
in
insb
add
add
test
fwait
ljmp
add
add
in
shll
mov
iret
iret
mov
adcl
mov
adc
jmp
ret
jae
mov
cli
and
mov
jae
int
xor
add
cmpsl
stos
pusha
add
add
test
mov
xchg
dec
add
add
fnstenv
ss
jae
jae
mov
push
cmp
inc
rcr
repz
add
add
les
repz
cmp
push
add
mov
cmpsb
sub
or
mov
dec
push
dec
add
add
mov
ja
add
add
in
dec
add
add
fldt
mov
aaa
loop
sbb
mov
mov
jnp
pop
cmpsl
repnz
std
adc
cmp
push
pushf
adc
pusha
add
out
mov
xchg
jno
and
loopne
pop
es
sti
cmp
loop
fldt
fildl
mov
adc
add
add
jnp
mov
pop
adc
push
rorl
sbb
push
jns
push
movsl
test
imul
int
loop
arpl
lret
push
and
sbb
jnp
add
add
add
xchg
ficoml
dec
mov
cwtl
pop
lods
dec
arpl
fsts
sbb
xor
out
add
add
dec
add
add
add
adc
add
mov
cltd
and
lock
xchg
out
add
mov
adc
mov
in
adc
aam
jb
arpl
imul
aas
pushf
loopne
lret
cmc
mov
mov
fstpt
add
add
ret
dec
add
inc
ret
out
mov
sbb
adc
add
push
jecxz
test
scas
icebp
inc
into
stos
dec
sbb
arpl
sahf
cmp
push
xor
mov
js
push
mov
add
xlat
out
push
lock
push
scas
iret
sarl
jbe
cmp
shrb
popf
mov
push
mov
cltd
sbb
sub
test
sahf
movsb
and
or
inc
sbbl
daa
xchg
pop
push
lods
lret
sub
add
add
add
arpl
daa
ja
xor
cld
cld
sbb
loope
add
add
lods
daa
and
add
add
popa
test
hlt
dec
jb
mov
mov
orl
jb
negb
mov
mov
out
sbb
imul
xchg
dec
mov
mov
mov
push
in
dec
add
mov
inc
add
add
push
in
cmp
rorb
inc
loope
in
push
sbb
scas
mov
mov
pushf
call
sbb
dec
add
sub
decb
and
lcall
insl
mov
loop
cmpsl
aad
js
push
in
jecxz
push
mov
in
daa
clc
sub
add
and
mov
and
mov
sahf
fidivrl
enter
rclb
add
add
jmp
fcmove
lods
mov
jmp
add
cmp
inc
push
mov
sbb
add
mov
push
lcall
popa
scas
pop
add
mov
xchg
jo
lret
inc
add
add
out
add
add
sti
clc
out
jbe
jae
iret
sbb
je
aam
pushf
mov
lods
jbe
pop
push
shll
stos
pop
adcl
jmp
rorl
push
mov
add
add
ret
insl
push
loop
cmpb
lret
leave
push
fcomps
out
mov
mov
daa
dec
jo
sub
add
add
cmp
sub
add
add
add
dec
add
add
outsl
hlt
inc
add
jp
imul
mov
popf
mov
xor
add
xchg
xchg
popf
push
insb
add
add
jecxz
cmp
lahf
into
mulb
add
add
shlb
out
push
or
add
add
cmp
dec
add
mov
aas
outsl
sub
mov
sub
inc
repz
mov
test
sub
addr16
xor
or
jno
rol
rolb
mov
add
testl
xchg
mov
sub
mov
mov
inc
pusha
add
add
pop
inc
add
xchg
inc
jnp
es
add
add
add
scas
cmp
mov
mov
inc
xchg
jbe
cmpl
mov
push
dec
add
add
jnp
outsb
push
sub
jb
mov
dec
clc
sub
mov
push
push
loope
mov
test
cmp
add
add
add
stos
cmp
es
add
add
add
add
outsb
push
add
pop
dec
adc
outsb
mov
cmp
cmpl
and
push
mov
push
jno
push
ds
add
add
jl
adc
sub
pushf
mov
std
mov
mov
das
jl
add
add
pop
jmp
jg
mov
mov
mov
sti
outsl
dec
add
je
add
add
push
shll
sbbb
insb
add
add
add
inc
or
das
sbb
leave
or
aaa
cmpsl
adc
adc
mov
push
insl
fbstp
sbb
ret
pop
push
fnstenv
int
mov
loop
push
push
cmp
jl
dec
ror
xchg
jmp
popf
xchg
mov
inc
les
test
shrl
add
add
lods
pop
xchg
pop
mov
push
cmc
dec
jmp
iret
popa
jecxz
pop
andb
bound
or
mov
fsubrl
and
inc
add
add
popa
test
xchg
add
add
add
add
mov
mov
sub
rorl
add
add
into
jmp
xor
sbb
push
call
cmp
and
cltd
int3
nop
pop
xor
out
lods
adc
sub
int3
and
add
add
add
add
ja
mov
jae
sarl
into
aaa
or
push
xchg
mov
stos
mov
add
add
mov
sub
sub
and
sub
test
out
imul
mov
add
add
notl
add
call
stos
pusha
add
clc
lret
leave
inc
add
mov
fnstenv
push
mov
push
mov
add
dec
adc
mov
rorl
sbb
popf
aaa
mov
aas
xchg
adc
mov
gs
sbb
ds
cwtl
aad
test
cmpsl
fstl
fisubrs
jae
dec
xor
fldl
scas
cmc
cmpl
add
add
add
in
mov
add
sbb
xchg
leave
add
mov
insl
xchg
cmp
fstpt
lret
xlat
inc
jecxz
add
add
mov
ret
dec
xchg
pop
sub
dec
add
mov
add
adc
push
fisttpll
loope
scas
mov
push
popa
adc
clc
lret
repnz
push
xor
xor
rolb
imul
add
int3
movsl
popa
pop
aad
rorl
popf
sub
call
sbb
test
sbb
jns
pop
repz
add
icebp
add
add
in
add
icebp
inc
mov
ret
add
add
add
add
jo
lret
push
mov
daa
mov
add
add
jmp
push
pop
cmp
pop
sbb
dec
add
add
adc
sqrtps
pop
out
sbbb
mov
js
pop
in
ret
lods
pop
ja
xchg
test
xor
into
push
roll
and
cmc
xchg
jge
add
add
or
mov
xlat
or
outsl
mov
and
jne
xor
or
stc
movsb
rolb
add
adc
push
jle
insb
add
sbb
add
lods
test
lret
movsbl
add
add
stos
pushf
imul
cmp
push
call
xchg
push
hlt
push
mov
jge
mov
out
cmp
and
orb
add
movl
test
add
jge
stc
stos
sbbl
pop
xchg
js
add
mov
nop
mov
mov
test
push
adc
add
add
test
add
out
add
add
mov
inc
add
popa
add
push
jno
das
adc
lock
xchg
daa
mov
pusha
add
arpl
sbb
mov
add
add
add
mov
and
test
outsb
dec
add
sub
sbb
and
add
adc
push
fnstsw
add
add
test
inc
add
add
jge
and
scas
xchg
mov
mov
xor
jle
int3
xchg
fsubrl
lods
stos
les
daa
jg
cmp
add
mov
xor
enter
and
add
add
add
sbb
or
add
aad
mov
push
add
add
dec
std
or
add
xlat
or
mov
jmp
sbb
inc
add
add
add
adcl
jl
jno
jecxz
out
nop
imul
add
add
stc
in
and
mov
push
das
and
mov
jne
dec
add
add
mov
fdiv
add
push
pop
popa
loope
test
iret
inc
inc
cmpsb
lds
mov
add
aam
mov
xchg
lds
dec
xchg
adc
scas
repz
icebp
mov
filds
xor
sub
scas
mov
mov
sbb
mov
sub
mov
loopne
rol
ds
jge
std
insl
repnz
push
into
loopne
add
add
lea
fbstp
ljmp
add
mov
push
xor
jns
add
add
add
lods
jle
idivb
or
mov
or
add
xchg
imul
divb
cmp
add
loop
mov
pop
push
shl
pushf
adc
repnz
enter
xchg
es
rcl
imul
add
mov
das
or
add
add
xchg
je
xchg
sbb
sub
cmp
cmpsb
xor
je
daa
sub
cs
out
xchg
mov
std
inc
pop
js
mov
daa
add
adc
inc
cmp
sbb
add
inc
add
add
loopnew
daa
xor
mov
in
pop
dec
sub
add
jle
dec
push
mov
jae
add
mov
cmp
pushf
pop
adc
mov
sbbl
add
add
add
add
push
mov
out
jl
imul
loopne
shl
std
and
cmpsb
insl
shll
cwtl
xor
mov
sbb
in
pop
aad
imul
pop
push
pop
add
cwtl
mov
push
push
ret
mov
aas
mov
aad
mov
xchg
sub
add
add
int3
cld
xchg
push
pop
pop
mov
push
fistl
add
add
cmpsl
mov
in
add
add
add
pop
push
lret
dec
add
push
call
sub
mov
cld
sbb
jne
push
icebp
cs
adc
subb
lock
aas
popa
xchg
push
lret
adc
sub
add
add
fcomp
xchg
or
add
stos
adc
jmp
xor
or
add
add
add
xchg
xor
and
pop
outsb
rcrl
add
jl
jbe
xchg
test
jne
or
out
add
mov
add
sarl
sub
add
add
out
xor
add
mov
add
xor
cmp
jecxz
rorl
jp
push
mov
lea
in
xor
add
add
xorl
sbb
and
mov
subl
pop
in
and
std
push
add
add
add
daa
clc
mov
inc
outsl
scas
push
push
lret
mov
xchg
cmp
lret
xor
add
add
adc
addl
pop
push
std
insl
int
mov
adc
sbb
jmp
jl
out
fldt
mov
pop
jae
pop
aaa
lret
jno,pn
sub
add
add
lcall
fldl2e
mull
add
js
adc
push
pop
mov
add
add
add
add
pop
push
stos
stc
and
add
add
es
mov
fistpll
testb
int3
subl
mov
mov
in
pop
in
andl
shll
jmp
stos
jl
test
addl
push
cmpsl
js
loop
inc
add
add
loope
mov
mov
sub
push
pusha
add
add
shll
sbb
sbb
add
add
in
xorb
add
cmpl
pushf
bnd
xor
sti
aad
xchg
push
push
dec
jmp
cmp
cmp
xchg
jne
rsqrtps
sahf
pop
loopne
repz
insb
add
add
jp
lahf
mov
mov
lods
mov
scas
push
push
mov
test
ret
inc
add
add
es
sti
cmp
jno
sub
jo
lods
or
mov
jno
sub
push
cs
add
loope
add
add
add
pop
int
std
adc
mov
arpl
xor
add
ret
ss
rclb
sbbl
addb
push
je
movsl
imull
jg
decl
jmp
lret
jecxz
add
add
dec
imul
sahf
aad
les
rcl
mov
jne
cwtl
inc
mov
in
cmp
test
add
mov
insb
add
or
add
add
fldcw
inc
inc
fsubl
add
popa
out
outsb
push
add
add
add
inc
add
add
xor
pop
push
pop
push
scas
loope
pop
sti
popf
inc
xor
sbb
fcoml
ret
add
aas
sub
pop
mov
add
add
adc
imul
jmp
pop
cwtl
test
and
add
mov
int
inc
add
int3
jmp
add
lret
hlt
sub
push
sub
xchg
cmp
out
cmp
mov
sbb
sub
mov
push
lea
add
add
shrl
mov
inc
mov
xor
lock
mov
les
dec
sub
and
add
add
or
add
add
fsubrl
push
jns
mul
inc
scas
xor
stos
jne
xchg
mov
add
jnp
add
mov
rcrb
jno
push
je
cmp
lods
fwait
ja
dec
into
or
clc
rorl
mov
pushf
rorl
adc
loop
mov
dec
movsl
or
push
clc
aad
or
mov
cmc
sub
add
add
in
sbb
movb
ds
sahf
push
nop
pop
xor
xchg
rolb
xchg
fxtract
push
or
insl
and
adc
add
add
sub
cmpsl
xchg
das
out
cmp
gs
xchg
movsb
divb
xor
jp
xor
add
xlat
faddl
adc
fstps
pop
jle
shrb
sbb
pop
repz
stos
dec
aaa
mov
pop
push
js
sub
add
idivl
push
test
addr16
mov
cmp
add
mov
lcall
xor
pop
outsw
dec
sbb
stos
mov
movsb
stos
aad
iret
mov
mov
xchg
sbb
xor
add
add
add
add
add
lret
into
push
add
or
addb
ja
inc
dec
roll
add
add
cmp
adc
inc
out
icebp
lods
mov
aas
adc
xchg
leave
ljmp
add
xchg
xor
mov
push
pop
inc
push
data16
stc
mov
cmp
mov
mov
and
lock
arpl
outsb
scas
push
mov
idivl
jnp
inc
inc
lret
icebp
pusha
add
add
es
fiadds
movsl
mov
ret
and
enter
push
lods
out
and
mov
or
add
add
sub
lods
sub
mov
pop
jmp
adc
push
push
out
push
pushf
sub
sarl
test
mov
xchg
out
adc
repz
adc
mov
add
add
mov
aam
mov
in
push
or
push
mov
jbe
lock
dec
add
add
sub
mov
jne
andl
pop
cmp
add
sub
sub
mov
ret
mov
jae
lret
mov
in
int3
cmp
dec
scas
sti
xchg
xor
es
mov
test
sbb
sbb
pop
dec
xor
lgs
rolb
mov
mov
add
mov
cmpsb
int
push
shl
sbb
and
add
add
and
add
add
sahf
sub
fistps
frstor
add
add
xchg
test
jecxz
cmp
jbe
sbb
popa
dec
cmp
push
arpl
jne
lret
lret
icebp
scas
movsl
lock
not
cltd
es
xchg
push
sub
ds
cmpsb
jecxz
and
mov
add
pop
repz
out
xor
lea
mov
shlb
add
add
or
add
mov
loopne
test
add
add
aas
out
mov
add
mov
lcall
adc
push
aad
mov
mov
mov
add
add
ficoml
sbb
cmp
fdivr
out
push
jle
jnp
add
outsl
loop
or
jnp
outsl
cmp
jecxz
mov
pusha
add
pushf
sub
xchg
mov
ljmp
or
and
jle
cmc
xor
nop
jne
push
jp
sbb
sub
mov
orl
cld
test
add
add
lcall
adc
out
fisttpll
add
add
movb
push
push
push
lea
mov
imul
mov
add
lods
jbe
pcmpgtb
mov
cmpsb
ss
sbb
mov
sarb
arpl
jmp
aam
je
in
mov
int
ja
pusha
add
dec
dec
dec
push
pop
fwait
scas
dec
cltd
jnp
push
movsl
cmpl
nop
mov
add
add
mov
mov
in
add
das
xchg
fsts
add
add
lds
fwait
sub
mov
push
mov
outsb
enter
add
adc
test
push
mov
and
add
add
sbb
sbb
aas
ja
loop
xchg
add
jge
vmaxsd
aaa
xor
mov
add
pop
push
jo
lods
js
add
scas
adc
jmp
sub
add
add
pop
pop
pop
cwtl
pop
cmp
add
add
inc
add
add
stos
xlat
adc
jne
jl
rcl
xlat
dec
add
add
out
shrb
sub
add
add
cmp
insl
mov
mov
testb
add
add
cli
xchg
cmp
add
add
aad
or
in
add
daa
adcb
push
mov
nop
je
mov
cmp
hlt
mov
out
cltd
add
add
add
cmpb
test
popa
shrb
and
dec
add
fiadds
fwait
inc
mov
mov
popf
mov
inc
xchg
mov
rcr
out
xor
jmp
add
cmp
out
jo
call
adc
testb
jle
mov
testb
inc
add
add
lock
dec
dec
int
jno
out
pop
push
cmp
jo
ljmp
sub
sar
xchg
mov
std
arpl
add
add
out
adc
adc
mov
xor
inc
add
add
addb
mov
sbb
inc
lret
cmp
aaa
lret
cmpl
jo
mov
data16
mov
mov
repz
dec
mov
sub
add
push
push
or
mov
or
shrl
and
add
add
inc
push
jp
push
inc
gs
adc
or
mov
andl
push
fmull
adc
rolb
sub
add
add
iret
dec
add
imul
and
add
add
scas
repnz
mov
je
mov
outsb
loopne
aam
sarb
push
cmpsb
adc
int3
insb
add
mov
es
out
stos
repnz
out
cmp
mov
mov
jnp
add
add
int3
pop
loop
push
mov
add
adc
sub
add
add
outsb
pusha
add
add
jno
add
add
into
testl
pop
xchg
sti
lcall
push
shrb
add
inc
cs
or
xor
pop
sbb
ret
int3
inc
cmp
add
add
add
fdivrl
ret
pop
ret
pop
lock
fsubp
push
test
cld
push
out
mov
xchg
clc
push
pusha
add
add
scas
mov
outsl
xchg
stc
clc
ret
shl
adc
xchg
mov
add
add
xor
push
dec
add
mov
pop
cmp
add
add
and
out
and
lret
inc
add
out
xchg
xchg
cltd
cs
mov
test
push
add
add
xchg
mov
mov
mov
sti
add
mov
jo
jne
jle
mov
dec
dec
cwtl
call
add
add
jnp
push
ljmp
xchg
xchg
aam
add
add
cmp
mov
out
and
mov
push
mov
xchg
cli
mov
inc
filds
add
rorl
add
add
loopne
sbb
cld
and
sbb
push
jo
pop
sub
jecxz
mov
mov
sbb
call
testb
add
lods
dec
inc
add
add
pop
cld
sbb
les
inc
notb
nop
mov
sub
in
add
add
add
jnp
int3
cmp
out
and
jl
pop
cmp
notl
cmp
push
fildll
add
add
in
cli
or
add
add
pop
fwait
xor
arpl
adc
jl
ljmp
and
fnstsw
gs
add
dec
add
add
cs
pop
inc
cmp
lea
push
mov
or
add
add
add
add
xor
ret
xchg
test
sbb
lds
das
mov
sbb
pop
and
add
add
add
add
clts
loopne
movl
lds
fisttpll
and
orb
popa
popa
push
mov
lds
adcl
inc
cmp
xchg
loop
aaa
mov
jo
xchg
lds
mov
add
add
cmc
mov
ds
jne
add
add
inc
xchg
sbb
cmp
jg
adc
in
scas
out
or
add
add
add
xor
lret
mov
mov
pop
shr
insl
adc
call
add
push
cld
test
loop
in
add
enter
and
add
add
add
or
add
add
es
cmp
iret
xchg
outsb
shll
inc
add
cmpsl
ret
sub
orl
jecxz
cmc
js
fcoms
add
add
add
sbb
jne
insb
add
add
jb
bound
loop
arpl
jb
jp
add
lahf
iret
mov
aad
jg
imul
xor
aas
into
pop
and
mov
cmc
adc
xor
icebp
out
xchg
or
xor
call
add
sbb
adc
imul
add
cmp
add
and
mov
fdivrl
cmpsb
in
jle
cmc
jae
in
pushf
lret
cli
cmpb
inc
sub
add
lea
or
pop
stc
pop
int3
cmp
and
pushf
add
in
cmc
int
mov
mov
xchg
sub
push
mov
and
mov
scas
sub
adcl
and
fbld
mov
andb
mov
loopne
or
shll
add
arpl
pop
mov
push
les
xchg
movsl
and
mov
add
mov
scas
jecxz
test
inc
jecxz
add
add
test
test
jne
std
jbe
cltd
adc
hlt
xlat
push
mov
scas
push
out
fld
nop
lret
int
dec
and
add
add
decl
add
ret
bound
mov
dec
xchg
fstps
mov
iret
xor
leave
mov
fwait
mov
sub
cmp
sbb
xor
ljmp
add
std
js
ljmp
cwtl
push
sub
mov
add
add
or
and
dec
cmp
xchg
mov
xchg
pusha
add
mov
cmp
pop
inc
cmp
ja
sbb
or
call
sub
mov
add
sar
loop
repz
mov
loope
dec
cmp
push
fwait
sbb
ljmp
xchg
pop
push
call
add
add
stos
icebp
shll
sarb
lods
cld
dec
dec
add
lret
shrb
xchg
sbb
rolb
jae
aam
mov
negb
mov
adc
inc
add
add
push
push
mov
shl
testl
test
inc
add
add
sub
xor
mov
cwtl
pop
sub
loop
sub
add
add
xchg
popa
push
cs
push
push
or
mov
dec
add
add
add
mull
mov
push
add
add
add
or
add
add
xchg
mov
outsl
data16
add
mov
add
add
mov
test
mov
add
mov
test
or
add
add
pop
shrl
mov
ljmp
mov
insl
jno
fmull
clc
or
add
add
push
divb
hlt
mov
leave
jne
xchg
aaa
add
jbe
jmp
mov
push
and
add
add
mov
add
and
add
add
add
jle
sub
mov
ds
ror
stc
dec
xor
out
dec
int3
scas
std
scas
dec
mov
mov
adc
mov
mov
cmp
add
sbb
push
dec
add
mov
mov
into
aad
aaa
ds
pushf
lahf
dec
adc
adc
mov
sbb
leave
sbbl
insb
add
add
out
pop
cmc
out
shlb
add
add
mov
add
add
add
jmp
nop
dec
fsub
sbb
dec
sbb
push
mov
add
add
mov
mov
test
out
mov
adc
add
push
mov
add
add
add
xchg
jg
inc
add
add
mov
add
fsub
int3
mov
and
add
add
adc
adc
arpl
sbb
mov
push
or
mov
add
mov
loopne
daa
imul
xchg
and
and
mov
cmp
push
push
subb
dec
lret
push
je
push
rcll
loope
sbb
addl
add
add
add
mov
aas
ret
adc
fistpll
adc
add
pop
dec
add
xor
lea
frstor
mov
test
sbb
push
cli
mov
cmp
mov
shrb
aas
mov
enter
push
push
jne
inc
add
jnp
fisttpll
mov
data16
mov
stos
mov
dec
test
xor
scas
fiadds
in
inc
aad
sbb
sub
inc
add
add
and
add
outsl
and
dec
into
cld
pushf
or
add
cld
xor
mov
and
add
cld
movsl
ret
lods
cld
dec
add
aas
xor
mov
and
mov
pusha
add
dec
mov
add
add
stos
pushf
jae
in
xor
xchg
mov
mov
and
add
add
add
cmp
dec
or
mov
or
add
dec
add
push
pop
data16
add
stc
or
add
add
jle
addl
into
jl
imul
ret
mov
or
mov
in
lea
test
incb
add
shl
push
leave
xlat
cld
jecxz
push
mov
je
lret
nop
hlt
sub
mov
push
mov
ss
or
cmp
xchg
jmp
lock
mov
xchg
xor
mov
add
xchg
xor
cmp
add
add
mov
mov
push
sub
mov
sub
movsl
ja
sbb
adc
scas
xor
add
add
inc
sbb
add
mov
not
negl
loope
rcrb
shll
mov
clc
push
loope
imul
aad
add
and
scas
xchg
insb
add
pop
sub
in
shrb
xchg
or
mov
das
jo
mov
and
add
add
gs
enter
sahf
fnstcw
xor
inc
sbb
andl
xor
jns
jp
jne
jmp
test
or
xchg
and
mov
add
in
add
mov
outsl
sbbl
add
add
jae
mov
dec
xor
mov
add
out
divb
or
pusha
add
add
add
fucomp
add
mov
xorb
std
aas
cmc
mov
inc
mov
es
mov
add
mov
pop
stc
push
jns
pop
pop
sbb
xchg
xchg
adc
sbb
xchg
mov
pmaxsw
mov
mov
mov
mov
add
add
add
fldcw
cli
push
es
adc
push
repz
sbb
add
pusha
add
add
add
add
push
dec
add
add
jge
ret
dec
pop
push
mov
ljmp
imul
xchg
xchg
inc
cmp
ret
lea
pop
std
les
add
add
xor
push
pop
sbb
add
mov
sti
sbb
add
dec
daa
or
add
add
jp
dec
inc
lods
mov
outsl
pop
or
add
add
movsb
lret
movsl
jp
add
add
mov
pop
jecxz
in
inc
add
arpl
adc
cmp
add
out
push
jb
jmp
mov
adc
insl
jmp
cmp
add
out
imull
add
add
xchg
aaa
mov
add
daa
int3
and
push
insl
icebp
dec
xchg
adc
add
add
add
add
aam
negl
add
decl
call
add
mov
imul
pop
adc
fdivr
adc
add
add
cld
sbb
xchg
lcall
pop
lods
xor
push
sub
add
add
add
in
in
inc
lods
mov
aad
cmp
out
test
and
jbe
call
addr16
movsb
sbb
jne
popa
das
ljmp
movl
es
sbb
pop
push
rcr
jnp
cmp
insb
add
add
and
push
dec
arpl
push
test
bound
out
push
data16
cmp
into
les
add
pop
lahf
sub
mov
lret
lahf
xor
add
push
lret
shrb
mov
addb
movsl
sub
or
lods
nop
jo
xchg
xchg
mov
jg
push
pop
cmpsb
xorl
mov
pop
out
inc
add
add
mov
mov
add
and
xchg
mov
mov
jg
insl
inc
sbb
or
mov
jns
icebp
xchg
xchg
movsl
jne
outsl
add
add
mov
test
sbb
push
es
xchg
adc
or
cmp
imulb
fwait
mov
jbe
and
insl
push
mov
nop
inc
add
add
cli
je
xlat
cld
dec
mov
and
add
add
lret
mov
mov
dec
add
add
std
movsl
pop
cmpsb
mov
sub
mov
add
inc
mov
bound
out
adc
test
pop
jo
add
pop
cmpsb
daa
imul
jnp
lds
jp
mov
shld
push
fwait
mov
xor
in
pushf
and
pop
incb
add
lret
js
icebp
add
mov
add
add
pusha
add
pushf
mov
fimuls
arpl
aaa
ss
mov
add
inc
pop
inc
add
add
inc
test
push
xchg
push
pop
pop
mov
push
add
add
push
push
jbe
xchg
xor
inc
inc
adc
mov
pusha
add
add
sub
mov
add
add
mov
add
add
js
lods
in
mov
cs
clc
out
cmp
out
mov
sbb
cli
inc
inc
add
cwtl
cwtl
cmp
or
dec
add
add
enter
inc
add
add
testb
push
sbb
ja
adc
movsl
xchg
xchg
in
int
or
mov
cmp
je
out
mov
jg
cmp
sub
lods
sbb
out
pop
xchg
outsb
fldl
movsb
psraw
iret
pop
repz
scas
mov
jns
push
push
ret
pop
and
add
add
les
stos
jne
shlb
dec
sbb
cmp
mov
inc
sbb
sub
add
add
add
inc
mov
add
add
lret
jae,pt
cltd
add
ljmp
or
cltd
or
mov
mov
sub
imul
jbe
add
add
imul
add
add
popf
roll
add
add
dec
add
add
fdivl
inc
aam
pop
nop
mov
sbb
in
lcall
sub
jecxz
jnp
add
add
hlt
decl
ret
fwait
mov
add
sbb
and
add
add
adc
pop
or
add
add
lods
mov
sbb
test
testl
mov
dec
add
mov
sub
rorb
sub
mov
jecxz
add
mov
add
add
notl
sti
xchg
test
fidivrs
xor
icebp
shll
add
psllw
cld
mov
mov
pop
int3
xor
mov
cmp
cltd
xor
add
mov
adc
and
les
insb
add
add
lock
xor
das
xor
hlt
jne
xchg
fbld
pop
push
mov
test
mov
movsb
sbb
repnz
lcall
icebp
pop
jge
add
xor
add
add
lcall
ret
rorl
add
call
fldcw
add
add
pop
cmpsb
cmp
pop
push
mov
popa
xor
add
add
xchg
xchg
mov
arpl
and
add
mov
add
fdivs
mov
xor
loope
test
adc
add
jg
pop
jnp
sbb
mov
jge
aas
jl
movsl
out
jns
fstpl
or
dec
jg
jp
cmp
add
add
pop
mov
add
add
xor
mov
add
mov
xchg
pop
pop
sub
or
add
add
add
add
or
mov
dec
add
mov
mov
add
mov
or
add
add
jnp
pushf
or
fdivr
and
add
add
xchg
aas
inc
pop
push
xchg
invd
add
pop
hlt
jbe
stc
mov
xchg
mov
push
hlt
outsl
rcl
pop
inc
mulb
in
push
cmpsb
xor
or
mov
pop
mov
add
mov
ja
or
mov
fiaddl
mov
sub
add
add
push
adc
add
pop
dec
nop
pop
mov
add
jb
and
add
add
fwait
sbb
imul
jg
push
addr16
in
pop
imulb
add
add
bound
movsl
and
scas
sub
push
lods
stos
sbb
pop
or
mov
ljmp
mov
test
mov
cmp
xchg
pop
xor
mov
mov
mov
sub
fsubl
add
add
mov
ljmp
add
jne
je
sub
mov
add
add
jmp
stos
out
inc
movsl
popl
or
add
add
pop
aam
mov
jecxz
add
add
jle
inc
add
icebp
sub
mov
in
and
cmc
fldt
test
cmpsl
and
loopne
stc
out
cltd
and
loope
mov
lret
aad
or
adc
sbb
or
mov
in
inc
add
add
pop
fnstsw
push
jmp
jae
jp
mov
mov
dec
add
in
dec
pop
sahf
pop
pop
ss
test
jmp
add
add
cmpsb
addb
add
mov
xchg
push
sub
add
add
std
mov
inc
fisubrl
push
add
adc
sub
add
add
loopne
adcb
add
add
pop
imul
sbbb
aas
add
mov
shll
es
lds
inc
hlt
pop
or
leave
jo
and
add
add
xor
dec
fbld
lock
dec
rorl
mov
pop
cmp
je
es
clc
call
mov
adc
sbb
add
sub
nop
and
add
add
lcall
or
pop
push
add
cli
in
add
and
cli
xor
and
add
jge
mov
andl
sarb
imull
jae
ror
adc
sbb
call
repnz
sub
mov
aaa
aam
mov
mov
sahf
jo
ret
push
sbb
push
rcll
jo
stos
cmp
add
mov
jno
xchg
xchg
cmpsb
sub
add
mov
fwait
xlat
les
clc
and
add
add
push
int3
pop
jae
insb
add
mov
mov
es
dec
add
add
xor
shrb
add
inc
add
add
jge
data16
gs
sub
add
add
jno
int3
xor
test
cmpsb
adc
mov
pop
push
add
add
add
repz
fldz
or
fiaddl
mov
std
cmpsl
scas
jmp
mov
sub
out
jnp
sub
add
dec
add
lods
xchg
push
cmpsb
sub
add
add
data16
loop
pop
dec
cwtl
xor
cmp
into
mov
add
mov
je
inc
adc
inc
out
or
add
add
popa
push
aad
into
pop
add
loopne
xchg
add
loope
test
rcll
jmp
add
add
dec
add
jg
cmp
sub
enter
sub
leave
push
outsl
adc
adc
add
jno
xchg
leave
repnz
xchg
shrb
sarb
push
rclb
repz
dec
add
mov
test
fcomps
and
mov
or
sub
sub
cmc
inc
add
add
ret
mov
and
ret
cmp
adc
mov
pop
sarl
sarl
push
negl
jae
pop
mov
push
filds
lock
add
xchg
push
sub
add
add
jecxz
data16
rorl
add
xor
daa
stc
fsubs
sub
adc
add
mov
add
add
dec
push
and
add
jg
jnp
xor
dec
mov
cmpsb
adc
rcrl
pop
test
cmp
inc
hlt
cltd
ja
clc
cmpsl
ljmp
add
icebp
jno
popa
add
aaa
adc
fsubr
lods
inc
xchg
fsubrs
or
add
add
mov
scas
enter
ja
sub
inc
add
fidivs
les
push
sbb
add
idivb
pop
out
js
inc
or
mov
add
cmp
mov
push
push
test
sub
add
add
mov
rcrb
lods
gs
jecxz
and
cmp
dec
ret
push
lods
pop
pop
cmp
add
icebp
andl
sub
je
fiaddl
notl
xlat
inc
add
add
leave
insl
mov
in
xor
lods
cmp
scas
push
jo
out
faddp
or
mov
xchg
into
dec
mov
les
pusha
add
add
cmp
imul
das
adc
mov
repnz
adc
inc
jne
lods
ret
sbb
sti
lret
sub
and
out
int3
dec
ljmp
sarb
int
push
add
add
arpl
sti
gs
int3
pop
dec
add
add
aad
mov
jns
push
sub
add
add
add
add
stos
mov
add
add
add
add
inc
xchg
mov
ljmp
add
imul
rcll
loop
test
add
add
push
pop
cs
add
inc
sub
mov
repnz
push
xor
jnp
pusha
add
mov
jmp
stos
test
test
scas
xlat
add
add
add
cmpsw
push
jo
lret
shll
lods
loope
mov
adc
mov
add
add
adc
add
mov
out
stos
pop
mov
ds
je
into
push
and
ret
popf
adc
pop
xchg
jg
jp
les
icebp
pop
and
xchg
fwait
pop
imulb
pop
xor
pop
sahf
lret
add
adc
push
movsb
jbe
aaa
insl
icebp
sub
scas
test
mov
imul
sbb
ja
mov
in
jg
mov
adc
daa
and
inc
xor
pop
je
mov
add
fstpt
dec
or
test
mov
xchg
or
mov
je
repnz
cwtl
dec
xor
xchg
dec
adc
ret
insl
in
cmp
mov
fistpll
inc
fstpl
add
icebp
mov
mov
mov
movsb
mov
jns
jo
xor
jl
inc
scas
bnd
xor
xor
mov
mov
push
test
repz
insl
cmp
sub
mov
cmp
lds
sub
mov
fistl
in
movsl
sbb
mov
out
mov
adc
add
add
add
add
adc
jno
cmp
call
and
leave
push
cmp
in
out
sub
mov
cmp
loopne
adc
outsb
push
push
xorb
add
mov
mov
adc
scas
bt
and
add
add
mov
pop
jnp
jbe
call
loopne
add
and
xor
xor
mov
repnz
repz
dec
pop
cmc
andl
jnp
jle
or
insb
add
add
iret
insb
add
mov
jne
cmpb
and
xchg
sub
mov
insb
add
add
or
add
add
cmpsb
out
cwtl
mov
ret
adc
pop
mov
andb
add
add
add
add
pop
mov
add
add
add
and
mov
fcmovnbe
out
dec
cmp
lds
jnp
lret
xor
mov
xchg
rclb
mov
loopne
fidivs
sti
ljmp
cmpsl
ja
xchg
add
roll
ja
mov
stos
and
rclb
cmp
add
fnclex
xorl
add
test
mov
add
add
add
push
data16
cmc
int3
cmp
sti
in
ret
fnsave
jb
sub
pop
call
push
andb
cmc
inc
pop
out
xchg
test
add
add
daa
add
add
add
push
into
xor
add
nop
clc
jne
f2xm1
rcr
add
insl
aam
dec
jnp
adc
stos
sbb
add
mov
dec
push
cltd
into
negb
pop
jmp
adc
sbb
pop
mov
or
cmp
add
add
negb
movsb
sub
add
aad
sbb
cltd
imul
sarb
sub
outsl
js
dec
loope
inc
loop
push
mov
mov
push
ret
cmp
sbb
or
add
add
lahf
adc
sarb
lock
and
add
add
add
add
sbb
push
data16
push
cld
icebp
ret
shlb
clc
inc
xor
dec
mov
jae
mov
add
ljmp
push
pusha
add
add
sub
rcll
jmp
sbb
mov
mov
sub
add
add
mov
add
jp
andb
add
test
sub
mov
add
cmp
mov
mov
clc
cld
and
adc
push
mov
lock
jle
ja
test
dec
hlt
lods
push
xor
add
fisubs
mov
pop
sti
insl
and
sub
lcall
sti
sbb
lcall
add
das
les
jns
lahf
movsb
andl
getsec
inc
popa
xor
push
out
aam
xchg
je
out
push
push
sbb
or
mov
fsubrp
xor
decb
push
roll
or
add
add
add
add
mov
je
pop
ret
das
sub
add
add
jge
mov
adc
pop
call
dec
add
mov
push
mov
add
add
add
flds
add
enter
imul
add
and
dec
add
add
mov
notl
idivb
mov
and
hlt
pop
mov
filds
add
aas
xchg
dec
push
scas
mov
dec
pop
mov
ret
das
rcrl
les
je
push
jl
fdivrl
add
nop
ja
repz
mov
xchg
cmp
mov
add
iret
add
add
sar
inc
add
add
fldt
xor
nop
adc
or
dec
fwait
je
iret
push
int
mov
and
test
pop
xchg
or
add
add
test
lcall
mov
arpl
ljmp
std
test
mov
ror
push
add
add
and
add
add
lods
mov
add
fdivrs
inc
mov
pop
arpl
pop
xchg
sub
add
mov
cmp
mov
add
and
add
add
add
xchg
pushf
leave
std
mov
test
inc
add
and
add
out
test
add
nop
pop
dec
dec
sbb
daa
jnp
add
leave
jne
fistps
inc
jno
out
jns
sub
sbb
movsl
jne
push
adc
fsubrl
mov
sub
cwtl
dec
mov
shll
mov
cmp
lds
repnz
xchg
dec
mov
stos
cmp
imul
sub
xchg
enter
mov
add
and
add
add
fwait
es
adc
cltd
aad
mov
sahf
mov
add
push
cld
inc
add
mov
scas
inc
ja
push
sub
mov
or
add
add
repnz
stos
xchg
push
test
xchg
imul
sub
mov
aam
jne
mov
adc
push
mov
sahf
pushf
fdivs
je
push
lods
push
fstpt
test
push
cmc
mov
das
cmp
or
add
add
xor
jp
push
in
fisubl
js
fdivrl
pusha
add
add
movsl
push
xchg
movsl
shrl
add
mov
add
add
pop
lds
push
ret
jne
inc
add
add
pop
inc
sti
imul
add
mov
cli
pop
sarb
add
outsb
bound
leave
in
xchg
sarb
inc
cmovbe
cld
adc
push
push
and
mov
mov
int
pushf
fstpt
lahf
or
imul
mov
add
add
int3
out
add
sbb
add
sti
pop
ljmp
popf
sbb
jecxz
or
mov
lcall
add
add
rorb
push
out
jno
jb
dec
es
push
jbe
js
xchg
icebp
jb
das
cmp
fnstenv
pop
xchg
pop
adc
imul
sub
in
jle
cltd
cmp
addr16
or
push
jle
add
xchg
in
dec
dec
mov
dec
addr16
jbe
push
jg
rol
inc
sbb
pop
ljmp
jae
lock
add
add
sbb
xor
add
dec
xor
adc
sbb
out
ljmp
add
add
xchg
xchg
and
mov
imul
rolb
mov
dec
jg
cmpl
mov
push
mov
xchg
mov
movl
add
dec
mov
faddp
orb
add
daa
jnp
pusha
add
insb
add
add
stc
pop
jnp
aas
push
aaa
cmpsb
jno
lds
mov
mov
dec
pop
push
test
xchg
insl
dec
add
add
lea
aas
mov
and
push
imul
repz
inc
add
add
jl
dec
jl
popf
fisubrl
cmp
xchg
daa
imul
mov
or
jno
push
mov
out
mov
test
xchg
and
stos
mov
repz
jo
ret
push
movsl
mov
and
add
add
mov
fcoml
cmp
cmp
add
add
pop
pushf
sbb
enter
loopne
movl
aaa
icebp
movsl
pop
xorb
mov
aam
scas
push
dec
pop
call
add
scas
bound
or
mov
pop
sbb
add
add
psubsw
add
or
add
sub
push
lds
xchg
in
in
push
and
cs
xor
hlt
xchg
sub
mov
add
lret
xor
sub
jns
sub
pop
dec
add
inc
add
add
gs
jp
out
aam
cwtl
cs
xor
stos
out
loop
pop
add
add
add
cltd
inc
mov
add
add
jb
rorb
mov
cs
jb
xchg
dec
dec
xchg
fisttpll
add
shlb
into
push
inc
xchg
jmp
sub
mov
push
dec
stos
ljmp
adc
lcall
fidivrl
js
push
icebp
rorl
in
mov
push
jnp
jge
scas
pop
popf
stc
mov
cltd
xor
jmp
cmc
fists
mov
adc
mov
mov
dec
cmp
test
mov
pop
shlb
xchg
push
repnz
rcrl
es
jns
mov
mov
pop
dec
cmp
add
add
xchg
push
loopne
xchg
inc
jbe
mov
mov
fdivl
push
add
in
daa
in
sti
push
in
stos
lcall
adc
jecxz
mov
ret
lods
arpl
inc
mov
arpl
jae
lahf
fnstenv
frstor
rolb
add
test
enter
ret
call
inc
add
in
fdivs
or
add
add
mov
xlat
pop
sub
mov
mov
xor
dec
js
mov
jl
mov
pop
sbb
stos
js
cli
jp
scas
pop
je
in
cmpsb
xorl
xchg
add
xor
out
jp
out
pop
xor
xchg
cmpsb
out
iret
dec
sarb
add
add
jno
add
add
in
add
add
xchg
add
mov
cld
notl
add
jl
mov
jno
enter
addb
dec
inc
xchg
pushw
adc
cltd
pushf
mov
jnp
lock
fmul
sbb
pusha
add
mov
add
add
jmp
sub
rol
std
rcrl
subb
mov
cs
iret
add
stc
jo
int
xor
mov
inc
add
or
mov
xchg
mov
decl
add
add
adc
push
push
imul
xor
incl
adc
pop
ja
xchg
add
mov
insb
add
icebp
mov
jge
testl
mov
jns
pop
sub
dec
mov
add
gs
inc
mov
mov
idivb
js
inc
std
mov
add
add
dec
in
jge
push
jb
mov
push
ret
and
dec
pop
cli
mov
in
push
push
jmp
add
jp
movsl
movb
popf
cld
outsl
sbb
dec
pop
rcll
fistl
sbb
popf
fisubs
jge
int
sbb
xchg
cmpl
dec
add
add
pop
cmp
add
test
fiaddl
add
inc
sbbb
jecxz
inc
inc
or
sbb
ret
in
scas
push
and
cwtl
test
xor
dec
pusha
add
add
cmp
ret
bswap
dec
loopne
out
cld
mov
fwait
popf
in
adc
jbe
bound
sub
mov
into
aad
adc
add
pusha
add
mov
mov
outsl
mov
imul
add
shll
and
add
add
gs
or
jno
roll
add
xchg
inc
rolb
arpl
setne
loopne
mov
inc
adc
mov
enter
jmp
call
add
pop
xor
add
add
add
pusha
add
pop
mov
add
add
mov
push
mov
xlat
cli
cmp
ret
fists
sbb
mov
jecxz
pop
lret
pop
test
add
shll
iret
lods
pop
loop
sub
loopne
cmp
sbb
add
add
nop
sbb
scas
insl
iret
int3
cwtl
mov
inc
pop
cwtl
test
enter
sub
mov
pop
test
inc
push
push
enter
add
pop
push
push
mov
mov
jnp
add
addb
add
cmp
fistl
stc
or
xor
dec
in
add
add
add
xor
add
add
lea
aad
xor
sub
push
dec
notl
mov
add
jmp
iret
or
mov
jne
or
add
jb
repz
mov
adc
and
add
add
aas
arpl
push
imul
outsb
pushf
jg
sub
lods
pop
jae
or
test
mov
bound
movsl
scas
xor
repz
adcl
jne
ret
mov
cmp
fst
ret
and
add
add
add
sub
add
add
cmpsl
pop
jns
mov
sbb
cmp
sbb
notl
or
fistps
bound
add
add
pop
jl
mov
mov
inc
adc
mov
movsb
pop
mov
add
les
add
fisubrs
insl
test
push
testl
subb
cmp
hlt
and
mov
dec
add
add
dec
jmp
aam
cmp
mov
jl
mov
mull
and
add
add
sub
or
mov
fsts
add
inc
add
add
adc
cld
jbe
sbb
xchg
out
and
inc
frstor
ret
scas
sarb
lea
adc
dec
add
add
loope
jnp
pop
sub
add
add
push
inc
add
mov
aas
cmp
xchg
sub
cwtl
mov
and
and
mov
loopne
rclb
imul
cli
loope
insl
mov
popf
jg
add
add
add
js
pop
add
mov
sub
pop
push
adc
adc
lods
dec
jecxz
popa
mov
inc
jns
and
cmp
ljmp
pop
lea
add
add
negb
add
mov
add
mov
enter
cs
sub
mov
xchg
es
add
add
in
aaa
and
xchg
cmpsb
cmp
into
aam
push
sahf
rorl
add
add
aam
pop
lds
add
lods
xor
cltd
lahf
push
ss
cld
inc
add
js
add
add
add
sbbl
sti
js
push
rcl
pop
add
jbe
or
mov
pop
mul
mov
popl
add
jbe
dec
mov
call
push
mov
inc
pop
pop
sti
cmp
in
test
push
jl
je
in
mov
popf
call
int
add
je
jecxz
push
jecxz
dec
pop
fstl
push
testb
sub
lock
mov
aam
cld
dec
xchg
and
add
add
nop
lods
dec
popf
mov
fdiv
ror
mov
cltd
nop
jb
mov
movsl
fiadds
stos
js,pn
scas
or
mov
mov
jl
jnp
cmp
add
add
fwait
xchg
test
mov
movsb
flds
add
inc
stos
cld
and
inc
outsb
jl
mov
ljmp
push
ffreep
icebp
arpl
inc
loopne
dec
add
add
jp
mov
sahf
imul
inc
in
push
daa
rcrl
jmp
scas
xchg
and
mov
push
daa
adc
mov
mov
adc
repnz
cmp
cmpsb
xchg
mov
inc
fwait
mov
ljmp
adc
sti
adcb
lcall
add
add
shlb
sbb
repnz
add
add
xchg
sub
mov
pop
mov
add
jmp
sub
add
add
lahf
xlat
cwtl
pxor
mov
xchg
inc
jge
into
cmp
add
fwait
in
mov
in
aad
addr16
aas
sti
retw
test
add
cli
xor
xchg
mov
notl
inc
inc
push
es
inc
add
xor
mov
cmpsl
sbb
cmp
rcrb
ror
pop
dec
sarl
int3
dec
add
enter
mov
jo
xor
adc
sub
shrl
hlt
xchg
pop
lods
pop
xchg
jge
jnp
fldenv
inc
iret
inc
call
arpl
add
add
mov
pop
icebp
stc
and
xchg
adc
imul
add
pushf
fnstenv
jecxz
out
ficoms
lods
and
mov
jp
and
mov
pop
repz
outsl
scas
orb
jmp
add
add
add
jle
mov
inc
add
add
jmp
push
test
dec
stos
cmpsl
les
sub
and
mov
or
lcall
int
hlt
cmp
mov
adc
leave
fiaddl
add
push
fidivs
jmp
add
fnstsw
and
adc
add
add
insb
add
add
add
pop
ljmp
add
test
xchg
mov
sbb
pusha
add
or
pusha
add
add
jns
and
add
add
dec
add
add
push
mov
insl
addb
mov
out
cmp
addr16
insl
push
ja
int3
in
add
idivb
outsb
arpl
push
or
mov
jne
cmp
loopne
out
dec
add
test
out
test
popf
add
add
add
imul
fwait
mov
cmp
gs
xchg
shl
or
jne
ss
inc
add
cld
insb
add
mov
int
cmpsb
inc
add
sub
push
add
sbb
stos
shrb
fwait
test
sbb
sub
imul
aad
clc
rcr
lret
mov
leave
enter
add
aaa
jp
inc
add
add
xlat
gs
repz
sbb
int3
pop
mov
add
es
pop
aam
cmpsl
into
mov
xchg
enter
push
xor
std
fbstp
stos
pop
leave
adcl
lret
test
and
out
mov
pop
int
dec
inc
call
dec
xor
stos
or
add
add
add
jns
loope
sub
add
add
int3
and
loope
imul
cmpsl
in
mov
mov
std
in
push
mov
add
add
outsb
inc
jmpw
jns
mov
cld
lahf
lret
pop
inc
add
push
add
add
jp
and
push
jb
add
xchg
enter
mov
add
jb
sbb
leave
sbb
leave
adc
add
add
add
sbb
cmp
outsb
pop
lea
add
add
mov
lret
aas
shr
ljmp
and
add
loope
dec
add
add
es
clc
jns
stos
cmpsb
xor
lock
sbb
enter
jmp
and
sub
mov
in
xor
add
negl
mov
loope
mov
add
mov
mov
dec
mov
rcl
mov
adc
aam
fadd
mov
add
sbb
mov
push
mov
add
add
bnd
ffree
cmp
adc
aaa
std
inc
dec
pop
jmp
insb
add
or
add
add
sub
mov
jbe
movsl
cmp
add
add
fbstp
in
mov
jl
add
add
or
jle
push
push
imul
ljmp
add
xor
jbe
ret
and
add
add
fdivrl
and
data16
mov
adc
and
add
add
ds
jp
hlt
mov
add
add
dec
add
add
push
fld
ret
mov
lods
in
push
push
call
setno
mov
in
pop
mov
xlat
inc
repz
lock
neg
cmp
add
pop
pop
les
xor
xchg
xlat
dec
mov
mov
inc
aas
xchg
cltd
push
cmp
add
mov
inc
push
mov
add
and
movsb
fdivs
add
add
adc
add
cmpsl
mov
pop
loope
add
mov
mov
add
js
filds
daa
sbb
les
mov
cmp
add
or
inc
cmp
pop
bnd
inc
xor
ljmp
lret
add
add
add
inc
add
mov
rcrl
ja
mov
