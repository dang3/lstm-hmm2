nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
repz
repz
repz
add
mov
mov
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jge
jge
jge
jge
jge
jge
jge
jge
jge
repnz
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
and
and
and
and
and
and
and
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
loopne
loopne
loopne
loopne
addb
add
jl
add
add
flds
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
push
push
push
pop
pop
pop
mov
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
mov
mov
mov
out
out
out
out
out
out
add
test
test
test
test
test
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
push
push
push
push
push
push
push
push
add
stos
add
es
add
cmp
cmp
add
dec
dec
dec
dec
dec
dec
dec
dec
cld
cld
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
add
adc
adc
adc
adc
adc
adc
add
les
add
add
add
add
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
xchg
xchg
xchg
or
or
xchg
xchg
add
add
add
addb
addb
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jp
jno
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lret
lret
lret
ud0
incl
add
fstp
fstp
fstp
fstp
fldl
add
add
add
add
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fs
fs
fs
jns
jns
jns
lret
mov
add
push
out
add
inc
adc
adc
adc
adc
jno
jno
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jp
jp
jp
jp
jp
jp
jp
jp
jp
add
add
add
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
inc
inc
inc
inc
add
add
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
add
fwait
fwait
fwait
add
pop
pop
adc
incb
add
ret
ret
ret
ret
ret
ret
ret
ds
add
add
add
test
test
test
js
js
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
test
in
in
in
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
ds
add
and
std
and
and
and
mov
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
add
jne
jne
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
cmp
cmp
cmp
jg
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sahf
in
in
in
in
and
and
add
cs
cs
or
or
or
or
or
or
nopl
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
test
test
test
test
test
test
test
test
test
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
ds
mov
add
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
movl
ret
ret
ret
ret
ret
outsb
repz
repz
repz
jle
jle
add
mov
mov
mov
mov
mov
add
add
add
cmp
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
mov
mov
add
add
mov
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
popl
add
add
mov
mov
mov
mov
mov
add
add
inc
inc
inc
inc
inc
inc
inc
cld
cld
cld
cld
cld
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
popa
popa
add
int3
int3
int3
int3
int3
int3
int3
int3
add
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
and
and
and
and
and
and
and
and
and
and
and
rcl
rcl
rcl
rcl
rcl
rolb
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
xor
xor
xor
xor
xor
xor
xor
xor
addr16
add
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
add
xchg
xchg
add
add
mov
into
incl
add
imul
imul
add
add
jl
jl
jl
jl
jl
add
mov
mov
mov
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
add
lods
lods
lods
lods
lods
lods
lods
lods
inc
inc
mov
mov
mov
mov
mov
mov
mov
add
dec
dec
dec
dec
dec
dec
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcrb
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
lcall
test
test
test
test
test
lods
lods
lods
lods
lods
add
add
add
cmp
push
add
test
test
test
test
test
test
add
add
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
dec
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
add
add
add
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
add
loope
loope
loope
loope
sub
sub
sub
jl
jl
jl
jl
jl
adc
cmp
cmp
cmp
cmp
cmp
cmp
and
inc
inc
add
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
add
addb
add
add
scas
scas
scas
scas
scas
scas
scas
scas
push
push
push
push
push
push
push
push
push
push
push
add
and
add
add
add
call
call
call
call
xchg
xchg
xchg
xchg
xchg
mov
mov
imul
imul
imul
imul
imul
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
add
addl
addl
addl
addl
addl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
jmp
jmp
jmp
add
or
or
lret
lret
lret
add
sub
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
add
add
sti
sti
sti
sti
sti
sti
sti
or
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
add
pop
pop
pop
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movsl
movsl
movsl
movsl
movsl
add
add
mov
mov
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
jnp
jnp
cmp
cmp
cmp
lcall
lcall
lcall
lcall
add
add
repz
repz
repz
repz
repz
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
roll
add
add
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
jnp
jnp
jnp
jnp
jnp
jnp
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
out
out
out
out
out
out
out
add
add
cmp
add
add
jns
jns
jns
jns
jns
add
sbb
sbb
sbb
add
add
pop
pop
pop
pop
pop
data16
int
add
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
dec
les
sbb
sbb
sbb
sbb
mov
mov
mov
jg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
adc
adc
adc
and
and
js
push
push
push
push
push
push
push
push
add
bound
add
ds
mov
mov
mov
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
dec
dec
dec
dec
dec
dec
dec
dec
dec
es
es
leave
leave
leave
leave
leave
leave
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
or
or
or
or
or
or
or
or
or
dec
dec
dec
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
inc
mov
add
flds
add
and
and
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
popf
popf
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
lret
lret
lret
lret
lret
div
div
div
div
divb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
add
add
jae
jae
jae
add
add
add
add
add
add
add
add
add
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
push
push
push
sbb
sbb
jle
jle
jle
jle
jle
jle
jle
mov
xor
addl
add
ljmp
ljmp
ljmp
ljmp
mov
or
or
or
or
or
or
add
add
and
and
and
and
and
and
and
and
and
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
out
out
out
out
out
out
out
out
out
out
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
or
jge
jge
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
rol
rol
shr
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
add
jl
jl
rcl
rcl
rcl
rolb
add
add
add
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xor
xor
xor
xor
jge
jge
jge
jge
addl
addl
adcl
adc
adc
or
lods
lods
lods
lods
lods
add
add
lcall
and
and
and
into
clc
push
push
xor
jmp
and
xor
outsl
fnstcw
rol
hlt
mov
jmp
xchg
mov
mov
and
outsb
lahf
push
out
dec
push
jmp
aas
dec
das
push
out
frstor
push
loopne
in
lcall
cmovs
jl
cmpsl
fcomps
fnstcw
inc
pusha
cmc
xor
mov
cmp
inc
adc
in
pop
inc
into
mov
loopne
add
cmp
mov
inc
loopne
pushl
xlat
add
pop
sbb
popa
cwtl
push
jo
pop
lret
sbb
inc
mov
shlb
shll
jo
mov
mov
xor
insl
jmp
xchg
mov
and
sarb
add
dec
adc
pusha
fidivs
add
inc
or
sub
adc
loopne
out
push
mov
ljmp
sub
mov
test
loopne
xchg
mov
loopne
xchg
sbb
push
lock
shlb
add
cmp
fs
dec
lret
cmp
test
andb
loopne
stos
cmc
fistpl
jb
cmp
je
pop
jge
fs
inc
in
test
jecxz
mov
repz
fistpl
jb
jo
imul
loopne
sbb
jnp
mov
jo
bnd
push
sbb
fs
ss
loopne
ret
lcall
lret
xor
int3
stc
jnp
dec
pop
test
call
mov
mov
jle
rolb
inc
push
lods
inc
shlb
ljmp
sbb
loop
and
mov
loopne
mov
mov
pop
fdivrs
and
repz
mov
cmp
ret
fwait
scas
aam
cmp
inc
sub
push
ret
out
out
cmpsl
add
es
lods
shl
push
movl
add
shlb
rcr
nopl
insb
incb
and
imul
push
xchg
xor
out
xor
loope
adc
mov
andb
mov
push
push
imulb
lds
xchg
push
and
sti
loop
xlat
sbb
in
and
andl
mov
loopne
movsl
sbb
out
imul
andb
sti
sbb
lea
pop
mov
pusha
imull
aas
jae
sbb
pusha
pusha
orl
rcll
adc
test
pusha
jmp
cli
pop
loope
or
mov
or
pop
adc
rolb
and
pop
popa
in
push
and
add
andb
scas
pusha
add
pusha
rolb
pusha
and
add
insb
inc
inc
fsubl
js
mov
mov
out
cmp
fsubrs
hlt
mov
aaa
mov
lret
pop
sbb
mov
pop
out
mov
in
cmpsb
and
testl
aaa
mov
lods
mov
or
mov
sbb
push
cmp
push
addr16
sbb
jmp
out
loopne
idivb
mov
cmp
mov
das
mov
or
cli
pusha
out
jmp
les
jae
ret
cltd
push
add
in
aam
push
loope
sub
and
movsl
jmp
sub
rorb
mov
push
add
push
mov
push
inc
sbb
andb
rclb
mov
mov
pusha
inc
or
mov
cmp
cli
icebp
xchg
pop
pop
decb
pusha
add
pusha
insl
and
loopne
jne
and
push
xchg
imul
add
loopne
sub
jo
fucomp
mov
inc
push
xchg
and
jg
loopne
xorl
and
pop
and
lret
rorb
jg
xchg
sub
loopne
add
pop
sub
addb
sarl
xchg
mov
inc
stos
loopne
mov
popf
clc
xchg
sub
mov
ds
mov
loopne
mov
mov
jae
jb
addr16
pop
cmp
pusha
and
scas
cmp
pop
mov
cli
nop
mov
pop
int
adc
push
adc
movsl
pop
inc
dec
loopne
pusha
mov
inc
mov
adc
or
shll
lock
test
mov
in
mov
add
inc
jge
mov
sub
xchg
adc
inc
cwtl
cmpl
and
imul
out
lods
add
jnp
outsl
mov
jmp
adc
inc
pusha
xchg
negb
fnstcw
cmpsb
inc
rorb
mov
push
sbb
mov
test
pop
add
sarb
movsl
inc
loopne,pn
cmp
mov
push
mov
aas
cmp
adc
repz
dec
addb
cmp
vpmaxub
sub
sub
jo
addb
es
sarb
lods
push
popa
dec
fstl
adc
movsb
add
mov
push
lahf
or
inc
and
addb
adc
jecxz
and
sbb
shl
call
andb
push
lods
pusha
pusha
mov
sahf
push
and
cwtl
xchg
int3
in
rclb
movsl
xchg
jmp
repnz
rcr
mov
aad
fisttpll
and
mov
push
out
into
shlb
movsb
pusha
and
mov
dec
jle
pusha
jne
lcall
std
xor
popf
push
mov
hlt
out
jmp
addb
insb
mov
push
and
sbb
ret
xchg
inc
or
loopne
je
jge
addb
and
inc
inc
adc
popa
outsl
mov
aas
add
repz
fcomps
lods
and
cmpsb
mov
sub
dec
out
subl
xchg
pop
mov
andb
fdivs
dec
mov
pusha
sahf
push
stos
and
shll
loopne
jmp
loopne
dec
lock
dec
test
mov
jbe
mov
sti
repnz
dec
cmp
cmp
nop
pop
push
mov
xchg
xchg
fistl
sub
pop
int3
mov
in
pushf
mov
shll
stos
clc
push
testl
sbb
movsl
call
or
add
or
loopne
push
ror
gs
mov
dec
xor
mov
mov
xor
push
push
cmp
pop
add
daa
pushf
ror
add
and
jb
inc
stc
dec
sub
int
mov
add
fwait
jg
in
cmp
xchg
xor
push
mov
loopne
lods
loopne
lahf
mov
mov
adc
mov
push
jo
sbb
and
sahf
and
and
pop
pop
scas
add
push
xorl
bound
inc
loopne
add
adc
lret
icebp
loope
sti
repz
adc
inc
or
rorb
rol
ret
cmp
xor
pusha
and
jne
and
inc
rorb
and
enter
pop
fnsave
and
xchg
lret
mov
dec
sbb
aaa
in
xor
add
je
add
outsl
aaa
xor
fistpll
adc
nop
ret
dec
fistpll
test
sbb
stos
cli
or
pop
int
cmpsb
mov
mov
pop
les
out
mov
pop
sbb
and
cmc
enter
int3
or
addb
cmp
adc
arpl
test
fwait
ljmp
sub
rorb
adcb
mov
js
inc
pusha
in
xor
addb
cmpsl
or
int3
cmp
cmp
pushf
add
mov
loopne
in
pop
mov
jecxz
mov
lret
jae
cli
daa
sub
and
sbb
and
ret
inc
shll
jl
loop
dec
cmp
or
adc
inc
ds
or
or
gs
pusha
jg
push
add
and
insl
adc
pusha
and
ljmp
add
fs
and
mov
adc
lock
mov
add
rol
negb
shlb
stos
shlb
in
es
inc
jmp
test
push
out
pop
mov
inc
pusha
hlt
fisubs
fisubs
push
fstpt
mov
add
in
icebp
std
pop
outsb
outsb
andl
lret
fldt
outsb
sub
adc
fisubrs
pop
cltd
orl
mov
in
cld
das
ret
mov
and
sbbl
daa
shll
mov
inc
mov
inc
and
inc
push
jmp
cli
flds
shlb
in
push
xchg
inc
sbb
popa
cmp
add
shlb
int
cmp
adc
and
xor
gs
stos
and
push
add
sub
and
xchg
fs
lds
sbb
mov
mov
shl
out
in
or
or
std
xor
out
fbld
and
push
sarl
or
mov
inc
lods
pusha
mov
shlb
add
imul
addb
out
or
test
stos
andb
fnstsw
xor
jae
mov
sbb
cmp
add
add
or
ja
repz
pusha
addl
loopne
test
add
inc
pop
xor
add
cmpb
and
jnp
dec
cltd
test
sub
pop
ds
in
inc
inc
cmc
push
std
dec
es
add
rolb
or
push
test
add
pusha
loopne
in
sbb
rclb
xchg
imull
cmp
adc
jmp
push
stos
mov
push
fdivrl
inc
loopne,pn
push
push
mov
sarb
enter
mov
mov
ja
scas
and
dec
pushf
lods
sub
fbstp
jg
lods
and
xchg
aas
push
out
hlt
adc
inc
pusha
sbb
xor
or
pusha
sbb
lods
fs
cld
mov
fisubl
ss
sub
rorl
and
bound
sub
andb
jmp
dec
mov
or
shlb
rolb
lcall
test
and
icebp
jmp
sub
push
jb
sub
add
add
adc
xchg
or
loopne
mov
cmpl
fs
xchg
loopne
jo
adc
outsb
adc
add
in
cmp
addb
lcall
icebp
daa
stos
sarl
movsl
and
mov
mov
and
add
cld
xor
loopne
mov
mov
xchg
js
icebp
dec
cltd
jbe
mov
data16
mov
add
fcoml
loopne
push
andb
xlat
test
notb
test
xchg
mov
shlb
xlat
into
in
stos
inc
pusha
pop
outsb
aam
add
add
std
lock
push
mov
clc
mov
loopne
cli
divb
fisttpll
mov
add
rcl
fsubrp
and
loope
mov
xor
popf
dec
lret
or
and
add
inc
repz
inc
lods
pusha
and
sub
and
mov
pusha
movsb
pusha
inc
fildl
lcall
dec
and
push
jae
jno
inc
rolb
rolb
movsb
and
js
xchg
sub
inc
mov
out
cmc
inc
fwait
dec
cmpsb
inc
mov
iret
jle
mov
aaa
ret
add
pop
jle
mov
lret
sbbb
jmp
pusha
lds
cmpl
mov
test
pop
xchg
jl
mov
inc
mov
dec
add
or
xor
pop
pop
xchg
enter
jne
push
mov
xor
fs
pusha
and
outsl
fistpl
dec
inc
lds
ret
sub
dec
ss
and
and
ret
mov
rorb
jle
sahf
in
sahf
bound
subb
pusha
cmp
xchg
and
and
cltd
mov
das
test
add
mov
out
loopne
lahf
sbb
inc
outsb
xor
rolb
cmpsl
ss
push
add
movb
sub
sbb
pop
inc
jbe
popa
or
and
popf
or
inc
stc
xor
add
in
jbe
cmp
adc
addb
dec
je
daa
jo
ds
mov
add
pusha
push
inc
and
movl
flds
adc
dec
test
push
les
in
rolb
andb
push
arpl
out
adc
enter
push
add
pop
mov
test
inc
and
cld
push
popa
les
mov
lock
jb
rolb
shll
shlb
push
jnp
imull
cmp
pop
jb
ljmp
pusha
cmc
inc
shld
mov
add
mov
rolb
out
inc
sub
inc
jbe
out
nop
cmp
fcmovnbe
aas
imul
mov
sub
ljmp
gs
loopne
xchg
ja
out
push
fisttpll
and
inc
sbbb
lods
mov
dec
popw
andb
mov
sub
sub
and
jne
jle
fistps
pusha
loopne
insb
and
mov
inc
pushf
mov
and
add
push
lods
and
and
mov
ja
jno
jmp
push
shl
enter
mov
clc
cmp
lcall
add
in
pusha
cmpb
sub
add
push
sub
inc
inc
mov
push
mov
cmp
inc
or
jmp
mov
add
cmp
idivl
andb
pusha
jg
movsl
xor
outsl
jmp
scas
mov
jg
lock
into
out
jmp
call
fucomip
movsl
stos
and
das
adc
mov
mov
sti
and
and
nop
jge
sbb
mov
shlb
repz
dec
inc
repz
or
inc
and
imull
add
xor
inc
mov
cmp
inc
rol
cmc
int3
sti
add
push
or
adcb
sbb
jmp
push
scas
pusha
addb
inc
sbb
xor
popf
mov
andb
andb
mov
xor
mov
or
pusha
mov
rolb
pop
les
lret
mov
lods
rolb
or
jecxz
fdecstp
test
stos
js
loopne
int
je
or
and
dec
jnp
pop
cwtl
imul
mov
add
mov
sarb
mov
adc
pushl
mov
sbb
loopne
sub
jle
inc
loopne
iret
fistl
shlb
and
rcrb
sub
and
cmp
mov
andb
loope
call
fwait
lods
or
sbb
cmp
pop
lods
insb
and
rorb
rolb
jecxz
pusha
clc
add
inc
and
or
popa
jne
xor
pop
pop
leave
repz
add
mov
mov
mov
test
and
in
loopne
pop
addb
in
cmp
add
push
jnp
shlb
add
lods
mov
and
xor
loopne
mov
les
out
std
adc
lret
cs
and
and
js
dec
test
add
jg
sbb
stos
inc
inc
daa
jne
sub
sbb
js
add
stc
imul
loopne
add
int
lret
push
push
dec
in
mov
repz
pop
push
pusha
loopne
addb
popa
cltd
mov
sbb
mov
dec
sbbl
mov
inc
ss
das
lods
cmp
fmuls
fsubp
add
in
add
and
inc
mov
mov
add
pusha
popl
xor
aam
mov
sbb
and
insl
mov
inc
pusha
cmp
rclb
push
lcall
sbb
pop
or
dec
std
cld
or
mov
cmp
movsb
pusha
loopne
insl
fistpl
addb
and
test
pop
push
ficoml
stos
sbb
in
nop
push
std
push
andb
dec
mov
jl
pop
imul
push
sbb
push
xchg
rorb
adc
pop
gs
testb
loopne
andb
push
repz
cmpsl
xchg
lret
adc
loope
hlt
jle
cmp
rorl
rcll
shrb
scas
pusha
rcrb
aad
inc
inc
fildl
add
xor
sub
inc
dec
push
xlat
push
andb
cli
or
jmp
outsb
or
xorb
push
loope
sbb
add
and
and
notl
add
inc
ret
fcoml
mov
loopne
testl
stc
xchg
movsb
addb
and
shrl
push
and
inc
ficoml
mov
dec
add
or
rcr
lret
ss
or
lret
mov
xchg
sbb
push
sbbl
int
leave
shrl
inc
mov
jbe
mov
xchg
jp
clc
loope
es
cmp
mov
pusha
xorb
dec
pop
fs
add
jae
sahf
shll
repz
in
add
inc
push
stos
pusha
loopne
add
mov
and
call
stc
ss
pop
xchg
add
rcr
or
and
inc
inc
sbb
std
mov
adc
sub
and
fiaddl
adc
bound
push
mov
dec
mov
push
inc
les
mov
jmp
les
fcmovnb
clc
jbe
test
and
add
mov
ljmp
into
ja
cmp
mov
test
rclb
jnp
addb
xchg
sbb
popa
in
ret
cmp
sbb
push
popa
mov
mov
jb
sti
ds
andb
dec
fdivs
jns
or
pop
mov
pop
adc
xor
xchg
es
mov
mov
test
or
cltd
adc
pop
pop
mov
jecxz
push
push
movsb
pusha
loopne
movsl
xchg
shll
scas
add
or
das
cmp
cld
dec
mov
das
jle
lea
add
repz
and
out
mov
or
sbb
js
pusha
cmpb
push
xor
mov
jg
stos
and
call
loopne
xchg
xchg
cli
fwait
dec
leave
dec
lods
add
add
mov
inc
mov
pop
add
or
or
rclb
jnp
pusha
and
mov
ud2
pop
adc
mov
stc
ffree
mov
mov
cmpsl
push
mov
push
add
cmpsb
pusha
loopne
jl
push
loopne
int3
fs
test
das
shrb
inc
add
lret
push
dec
mov
in
addb
and
inc
inc
lods
xor
dec
dec
mov
mov
es
push
loopne,pn
rcrl
dec
sub
add
cltd
repz
arpl
and
fwait
and
cli
into
jno
sub
pop
mov
shlb
gs
pop
insb
out
repz
pop
orl
inc
cmp
add
cmp
js
cmpsb
inc
cmpb
xchg
add
stos
test
xchg
mov
xor
iret
clc
icebp
roll
push
cmpl
and
xor
fcompl
mov
loopne
ror
test
inc
pusha
and
shrb
add
shrb
stos
mov
out
shl
orl
call
test
jnp
mov
outsb
add
adc
cmp
into
cli
cld
pop
push
pusha
pusha
outsb
std
mov
rclb
loopne
loopne
jl
cs
and
or
push
add
add
push
add
arpl
adc
orb
inc
or
add
pop
inc
or
shrb
xor
jo
fwait
inc
jnp
data16
add
stc
add
sbb
das
ret
pusha
pop
pavgw
sbb
loopne
add
pop
dec
sub
mov
sub
sub
mov
stos
enter
cmp
sbb
jp
adc
loop
ret
iret
fisubs
inc
mov
mov
or
pusha
add
stos
and
xchg
cli
orl
lret
push
cltd
mov
add
mov
addb
jae
inc
push
mov
out
adc
test
loopne
test
add
test
orb
addr16
or
addb
add
add
and
add
cmpb
mov
stos
add
adc
mov
cs
xor
dec
jmp
mov
inc
sbb
imul
cmp
inc
jb
leave
out
and
sub
add
mov
lahf
xlat
imul
loopne
xchg
sbb
cmp
dec
add
loopne
fwait
or
loopne
andb
shll
fwait
sbb
mov
sbb
lcall
sub
xchg
aad
sub
push
mov
inc
xchg
add
loopne
lock
xor
out
or
xor
xadd
pop
or
ljmp
pusha
inc
cmpsl
xchg
loop
push
adc
dec
push
cmp
jp
je
addl
xchg
repnz
cmp
pushf
mov
test
fimuls
xlat
mov
add
sbb
loopne
addb
add
andb
andb
mov
loopne
pop
sbb
js
fidivl
pop
ja
inc
int
jo
push
fwait
es
and
shrb
rcrl
mov
cmp
push
rolb
add
add
test
cltd
fnsave
orb
lret
push
cmp
inc
test
inc
repz
sbb
mov
and
adc
pusha
sbbb
shrb
rcrb
cmpsb
and
mov
and
xchg
jmp
and
hlt
sbb
aam
scas
and
lcall
xlat
add
add
pusha
ret
notl
lods
insl
popa
shl
cmp
mov
shlb
bound
sub
add
mov
pop
jb
xor
jmp
and
lahf
inc
xchg
add
push
push
push
push
push
push
call
sub
add
imul
lea
and
cmp
je
mov
push
push
bnd
cmp
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
add
and
leave
dec
shl
jle
dec
mov
mov
loopne
out
or
add
pop
pop
movsb
mov
subb
mov
andb
cmc
rcl
ja
in
sbb
mov
inc
mov
test
addb
xchg
bnd
popf
loope
pushf
sub
inc
imul
sti
jns
sbb
ds
xchg
mov
ja
fs
jge
and
mov
cmpsb
loopne
outsb
sbb
popf
pop
repz
pop
add
sarb
inc
pusha
mov
mov
xchg
leave
xchg
enter
inc
xchg
ret
pop
adc
cltd
jmp
daa
xchg
sbb
dec
aaa
lock
and
dec
enter
inc
lods
fsubs
loopne
jne
pusha
int
cli
rorl
jle
pusha
shlb
andb
shlb
aad
mov
mov
pop
fs
sbb
xor
mov
sbb
fucomip
lds
dec
dec
dec
push
test
hlt
es
pusha
negb
into
stc
lds
lea
insb
cmp
aad
mov
loope
push
stc
dec
loope
xchg
xchg
imul
lahf
aas
jp
stos
es
pop
je
inc
loopne
ljmp
loopne
push
mov
aas
fs
lea
push
cmpsl
aas
enter
ljmp
lds
sub
loopne
stc
andb
loopne
push
inc
add
dec
gs
xchg
dec
lea
add
test
rolb
pusha
data16
sar
sbb
pop
or
int3
or
pop
sbb
inc
push
fimuls
mov
add
xchg
sub
nop
loopne
addb
in
pop
jge
es
and
int3
pop
jge
outsb
mov
std
je
pusha
pop
dec
addb
cmp
cwtl
out
push
inc
shlb
xchg
shrl
shlb
inc
add
xor
mov
inc
add
ljmp
in
jbe
addb
sub
sarl
jb
jb
in
mov
aas
xchg
daa
pop
pushl
out
jl
sar
fwait
xorl
pusha
and
adc
in
or
add
cmc
rorb
loope
and
pop
sub
push
add
adc
sub
mov
sub
jge
fs
or
fdivs
test
add
push
add
addb
jbe
hlt
in
dec
sub
dec
fadd
jo
adc
sahf
pop
and
push
outsl
cs
rcrb
in
rolb
jmp
and
or
and
lret
inc
jno
sub
aaa
outsl
push
jecxz
push
xchg
cmp
cmp
mov
push
shl
dec
fdivs
insb
rcrb
sub
pusha
stos
inc
mov
rolb
mov
push
push
popa
lret
push
add
enter
sub
inc
push
loopne
xor
cmpsl
jle
cmpsb
add
add
xorb
xor
mov
or
add
fsubrl
and
rolb
popf
mov
mov
insl
push
mov
cmpb
div
stos
push
mov
and
loopne
mov
xchg
pop
lret
xchg
aad
or
mov
mov
loopne
jp
dec
je
iret
lret
dec
and
sbb
mov
fwait
test
add
jp
popa
pop
and
repz
jg
sahf
xor
pop
mov
fisubl
inc
pusha
add
pusha
sbbb
in
fs
popf
and
and
loop
lods
sti
iret
xchg
add
add
mov
sub
cmpb
and
icebp
js
or
loopne
sub
inc
addb
xchg
jp
rol
andb
fidivrl
aad
and
push
cmp
pop
mov
sarb
sahf
pop
les
pop
fiaddl
and
mov
jge
in
clc
push
mov
rcrb
mov
aad
add
mov
inc
pusha
ss
gs
mov
pop
xchg
fimuls
lahf
pop
xchg
add
add
arpl
in
loopne
repz
mov
fdivrl
mov
jg
ljmp
addb
lcall
add
mov
lahf
and
add
sub
add
lret
add
daa
push
inc
or
sub
rcr
aaa
aaa
mov
and
and
or
loopne
push
or
add
xchg
fsub
sbb
andb
xchg
das
adc
rorl
pusha
pusha
popa
insl
dec
mov
adc
shll
addb
xor
inc
rol
sub
pusha
rolb
mov
xchg
popa
andb
cltd
mov
jecxz
cmp
cltd
sub
outsb
pop
fadds
in
std
aas
inc
imul
lcall
pusha
pushf
jne
push
leave
or
sbb
scas
dec
push
mov
add
lea
pop
shlb
lahf
in
inc
add
xchg
enter
leave
addb
push
lea
jne
add
add
lea
mov
filds
add
imul
and
sbb
arpl
cmp
pop
xor
or
sbb
insl
out
imul
ret
and
rorb
pop
ds
dec
mov
and
sahf
inc
fcoml
sub
loopne
add
xorb
cmp
mov
sbb
push
xchg
sub
icebp
repnz
pop
mulb
jbe
shrb
add
shlb
xorb
hlt
mov
daa
add
cli
xchg
pop
fwait
mov
sbb
mov
mov
loope
rsqrtps
adc
js
pop
mov
and
and
repnz
and
push
pusha
mov
cmp
aas
fwait
push
shlb
inc
enter
das
xor
xor
cltd
aaa
or
mov
fistpll
lds
mov
pusha
xchg
shlb
sub
aas
pop
dec
jne
sbb
mov
push
mov
mov
mov
fstpt
shlb
pusha
sub
add
pusha
andb
sahf
je
fldenv
and
xor
xor
stos
inc
pusha
and
and
aaa
xor
dec
aam
aas
inc
fs
shll
inc
jne
aad
or
pop
sub
and
fidivrs
pop
mulb
inc
loopne
jecxz
pusha
andb
jne
andb
inc
loopne
cltd
ret
add
mov
dec
add
and
rcll
and
rolb
mov
int
test
sarb
cld
xchg
rolb
pusha
inc
lea
add
stos
mov
add
loop
or
loopne
fsubrs
add
jmp
call
test
in
ret
and
add
or
xchg
mov
or
inc
xor
jp
fdivrs
mov
outsl
aad
cmp
xor
fadds
or
adc
add
cmp
xlat
and
and
and
sbb
mov
jl
ja
jmp
mov
mov
loopne
jl
nop
out
push
in
or
add
pop
pop
dec
sub
ret
lret
inc
adc
mov
mov
cmp
and
pusha
test
shl
and
dec
mov
adcb
jne
pop
ss
out
int
insl
ljmp
mov
lds
and
mov
in
pop
jl
mov
sub
pop
ror
jecxz
shlb
gs
outsl
scas
adcl
imul
sub
bound
xor
fidivl
mov
inc
sbb
aaa
xchg
add
xlat
sub
pusha
xlat
mov
cmpb
stos
add
das
adc
call
and
loopne
and
lods
dec
push
mov
inc
pusha
jge
add
jnp
icebp
out
dec
fcoms
push
mov
rolb
dec
nop
into
sub
sbb
or
add
mov
ret
ror
test
inc
aad
push
lahf
push
test
shlb
imul
stos
andb
fucomip
andb
lcall
jle
lock
inc
push
sub
and
mov
cltd
cwtl
adc
sbb
mov
add
and
aas
lods
addb
loopne
mov
mov
xor
pop
and
nop
lods
add
xchg
jnp
pop
xchg
cmp
jmp
push
stos
lret
mov
andb
inc
xchg
cmpsb
loopne
rcrb
mov
cltd
pushf
repz
push
pop
loop
fnstcw
outsb
jne
mov
scas
and
pop
lret
aaa
out
pop
imul
sbb
imul
and
and
call
cld
aas
add
pop
cmp
pop
movsl
jle
cmp
mov
add
push
into
rclb
push
jbe
mov
call
xchg
push
daa
mov
mov
xchg
nop
mov
add
lods
andb
jbe
arpl
mov
bsr
push
pop
mov
and
inc
jle
push
mov
dec
cli
mov
andb
cmc
test
gs
xchg
mov
mov
fcompl
mov
call
sahf
lds
cs
and
jno
sahf
push
test
sarb
inc
arpl
jle
inc
and
fbld
fs
and
adc
rolb
sub
pusha
cmp
sahf
pushf
mov
loopne
mov
pop
and
stos
xchg
insl
das
subl
add
add
inc
mov
rclb
mov
jnp
outsb
sbb
insb
mov
and
adc
jge
mov
mov
lcall
pop
rsqrtps
push
mov
xor
and
sbb
mov
mov
inc
inc
movsl
mov
add
int3
loop
inc
ljmp
mov
or
loopne
ljmp
in
rep
out
sbb
dec
mov
mov
jae
xchg
pop
outsb
movl
hlt
lea
add
mov
cld
pop
mov
testb
pusha
sbb
filds
jl
mov
stos
outsl
js
movlhps
xor
cmpsl
ds
cmpsb
add
loopne
mov
push
fadds
loopne
test
shlb
movsb
loopne
mov
lods
loopne
inc
ret
jne
xor
sbbl
stos
push
mov
inc
pusha
and
sar
push
xchg
or
mov
xchg
sbb
shll
mov
dec
clc
inc
xchg
loopne
out
das
in
pop
jns
andb
push
dec
stos
inc
pusha
stos
pusha
inc
push
pusha
inc
sbb
xor
jo
in
jle
ss
add
jp
mov
jecxz
dec
stos
sbb
jg
inc
shl
adc
pop
mov
pop
cli
pop
flds
dec
int
xor
das
pushf
xchg
add
adc
sub
in
pushf
xchg
adc
test
xor
mov
mov
mov
icebp
hlt
outsl
cmp
push
sbb
jno
and
loopne
movsl
int3
fwait
mov
lahf
xchg
and
inc
add
push
rolb
jnp
or
mov
add
or
and
push
xor
and
xchg
push
rclb
stos
jbe
popf
cmp
je
dec
push
inc
mov
shl
andb
pusha
mov
and
add
and
jge
lret
xor
add
sub
fcomip
mov
xchg
ret
stos
and
or
mov
adc
imull
loop
mov
mov
sbb
lcall
add
dec
xchg
adc
mov
xchg
arpl
mov
loopne
mov
ret
stc
movsb
pusha
addb
loopne
in
and
and
adc
push
and
addb
rorb
daa
push
pusha
pusha
mov
pop
sub
loopne
movsl
ret
xor
and
addb
andl
rorb
jmp
cli
mov
in
and
rcrb
pusha
inc
xchg
ljmp
push
and
xchg
mov
fstpl
xchg
ja
test
lds
out
xor
or
inc
add
pop
stos
inc
add
lret
mov
rcll
fists
xchg
adc
push
dec
sub
inc
imul
repz
push
push
in
mov
sbb
popa
arpl
and
test
pusha
sub
pusha
xchg
and
and
shl
jne
xchg
jecxz
pusha
and
pusha
cmpsb
loopne
cmp
jle
xor
call
popf
xchg
and
xor
aaa
mov
and
insl
cmc
dec
sbb
rcl
pop
in
push
mov
push
add
or
mov
add
mov
loopne
insb
jmp
aam
test
add
pop
dec
mov
and
push
xlat
icebp
aad
and
fimuls
mov
jmp
mov
mov
xchg
pop
jae
inc
les
mov
mov
shlb
push
and
sbb
std
ret
sub
mov
and
daa
sub
mov
inc
shrb
test
rcrb
icebp
xchg
mov
shll
mov
jg
mov
or
and
mov
xchg
loopne
inc
andb
les
pusha
mov
mov
out
sbb
mov
add
and
jae
cmp
mov
adc
dec
lahf
xchg
push
dec
mov
inc
in
js
dec
sub
ror
mov
mov
dec
lods
fiaddl
mov
xchg
in
lret
imul
sbb
fsub
aas
cmp
add
and
pop
data16
pusha
rolb
mov
scas
loopne
push
inc
pop
jns
inc
mov
or
cmp
inc
xchg
fwait
jbe
xchg
xchg
shr
sub
mov
mov
das
das
cmpsl
or
loopne
push
cmpsl
jbe
or
mov
or
xor
cmp
mov
lock
lock
daa
fstpl
add
add
mov
nop
cld
jae
scas
add
add
cmpw
clc
repnz
nop
cld
jae
add
add
in
imul
nop
jmp
add
inc
add
inc
inc
icebp
jmp
clc
repnz
nop
cld
jae
add
add
ret
add
push
pusha
nop
push
mov
leave
nop
jmp
add
add
out
cmp
and
push
clc
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
add
roll
add
clc
repnz
nop
cld
jae
repz
add
inc
imul
and
add
pushf
add
mov
mov
add
adc
add
adc
in
leave
nop
jmp
mov
testl
add
add
mov
cmpl
nop
push
mov
leave
nop
jmp
adc
cmp
loop
dec
mov
push
mov
xchg
ret
add
int3
adc
add
sub
and
add
divl
add
int
push
push
mov
xchg
ret
pushf
add
out
mov
add
testb
nop
nop
cld
jae
add
mov
mov
and
push
clc
repnz
nop
cld
jae
add
add
das
add
add
pusha
out
ror
push
mov
xchg
ret
add
xchg
add
repnz
ljmp
cmp
repnz
nop
cld
jae
add
outsb
sbb
and
clc
repnz
nop
cld
jae
rolb
add
mov
push
mov
xchg
ret
add
std
fildl
mov
repnz
nop
cld
jae
movsl
out
add
add
mov
clc
repnz
nop
cld
jae
xor
daa
add
add
test
push
add
nop
push
mov
leave
nop
jmp
mov
jno
cmp
nop
push
mov
leave
nop
jmp
out
add
loop
clc
repnz
nop
cld
jae
add
mov
xor
add
in
rcll
push
mov
leave
nop
jmp
adc
pop
push
push
mov
xchg
ret
int3
std
inc
std
xor
add
mov
clc
repnz
nop
cld
jae
adc
into
pushf
add
add
jae
sbb
clc
repnz
nop
cld
jae
fsub
idivl
daa
mov
or
in
leave
nop
jmp
fistl
out
pusha
mov
mov
xchg
ret
mov
add
mov
push
mov
leave
nop
jmp
loop
insb
mov
add
push
xchg
add
clc
repnz
nop
cld
jae
jno
xchg
out
daa
add
fsub
push
push
mov
xchg
ret
jg
mov
add
shlb
pusha
insb
stos
je
nop
push
mov
leave
nop
jmp
add
mov
xchg
ret
add
add
add
add
add
repnz
nop
cld
jae
add
add
movsl
adc
loop
imul
clc
repnz
nop
cld
jae
mov
add
out
sub
pop
xor
clc
repnz
nop
cld
jae
fiadds
add
add
add
clc
repnz
nop
cld
jae
add
std
mov
subb
add
add
nop
push
mov
leave
nop
jmp
xchg
cmpsl
aas
add
clc
clc
repnz
nop
cld
jae
add
pop
inc
rclb
add
add
repnz
nop
cld
jae
out
rclb
or
add
into
mov
add
movsl
int
and
mov
popa
clc
repnz
nop
cld
jae
repz
jno
inc
add
cwtl
xchg
es
nop
push
mov
leave
nop
jmp
and
xor
pushf
insl
push
clc
repnz
nop
cld
jae
add
push
aas
add
sarl
pop
push
mov
xchg
ret
shlb
add
add
dec
pop
movsl
mov
push
mov
xchg
ret
add
xor
bound
push
mov
leave
nop
jmp
cmp
push
push
mov
xchg
ret
ficoms
add
int
xor
fisubs
add
sbb
push
mov
xchg
ret
add
add
repnz
repnz
nop
cld
jae
cmp
add
add
mov
xchg
ret
add
insb
add
mov
adc
repnz
nop
cld
jae
aas
jno
add
push
clc
repnz
nop
cld
jae
repnz
add
push
aas
mov
pop
inc
add
fisubrs
addb
sarb
mov
xchg
ret
push
mov
pushf
add
adc
pop
push
mov
xchg
ret
add
int
mov
jg
and
mov
xchg
ret
add
add
add
add
xchg
std
call
nop
jmp
add
and
gs
mov
stos
jnp
add
add
add
outsl
out
subl
mov
xchg
ret
ret
add
aas
int3
add
push
mov
leave
nop
jmp
fiadds
int
add
insb
jno
add
push
mov
xchg
ret
add
add
es
mov
repnz
nop
cld
jae
xor
aas
add
add
nop
cld
jae
add
adc
add
pushf
add
nop
cld
jae
std
xor
adc
pop
clc
repnz
nop
cld
jae
add
mov
xchg
add
jb
mov
nop
push
mov
leave
nop
jmp
add
push
and
pusha
inc
xor
nop
push
mov
leave
nop
jmp
mov
das
add
nop
nop
cld
jae
int
mov
pop
mov
addb
cmp
ret
add
add
add
insb
add
jg
outsb
and
repnz
nop
cld
jae
push
add
std
fildl
xchg
pop
jmp
incl
add
into
add
icebp
add
add
add
add
add
repnz
nop
cld
jae
add
xor
nop
push
mov
leave
nop
jmp
add
mov
clc
shr
push
add
nop
push
mov
leave
nop
jmp
rcr
cmp
clc
repnz
nop
cld
jae
mov
push
add
movb
scas
outsl
inc
add
movsl
das
rolb
push
add
repnz
nop
cld
jae
add
add
xchg
xor
clc
repnz
nop
cld
jae
mov
fldt
add
imul
subl
nop
cld
jae
and
add
add
cltd
jne
clc
repnz
nop
cld
jae
xor
add
xchg
pop
push
mov
xchg
ret
add
mov
das
add
add
pusha
loopne
push
clc
repnz
nop
cld
jae
add
add
add
jae
rcll
nop
nop
cld
jae
into
push
add
lahf
mov
clc
repnz
nop
cld
jae
mov
int3
dec
shrl
sub
nop
jmp
push
add
ficoms
popf
push
push
mov
xchg
ret
mov
cmpsl
add
out
mov
mov
incl
push
add
push
inc
add
xor
es
shr
clc
repnz
nop
cld
jae
aas
add
roll
cwtl
mov
inc
daa
add
push
mov
xchg
ret
add
cmp
push
add
lahf
ret
nop
push
mov
leave
nop
jmp
idiv
add
std
add
push
clc
repnz
nop
cld
jae
xchg
roll
add
mov
mov
xchg
ret
add
add
add
repnz
nop
cld
jae
icebp
adc
testl
clc
repnz
nop
cld
jae
push
daa
icebp
push
repnz
mov
add
clc
repnz
nop
cld
jae
add
add
nop
cld
jae
add
out
add
add
sub
loopne
jecxz
enter
repnz
jno
repnz
add
add
and
dec
sub
nop
jmp
adc
inc
mov
lret
nop
push
mov
leave
nop
jmp
mov
ret
add
cmp
clc
repnz
nop
cld
jae
add
add
pop
add
clc
repnz
nop
cld
jae
add
add
add
jo
fistpl
push
mov
xchg
ret
add
add
das
add
loop
and
pusha
clc
repnz
nop
cld
jae
xchg
add
add
add
subl
xorl
add
push
add
es
add
mov
clc
repnz
nop
cld
jae
add
pop
sbb
mov
clc
repnz
nop
cld
jae
pushf
repz
add
mov
mov
xchg
ret
adc
add
add
nop
push
mov
leave
nop
jmp
xor
mov
add
xor
clc
repnz
nop
cld
jae
into
xor
mov
push
das
mov
clc
repnz
nop
cld
jae
mov
inc
add
xor
push
mov
xchg
ret
faddl
add
clc
add
xchg
lret
movsb
clc
repnz
nop
cld
jae
inc
add
push
add
roll
jne
clc
repnz
nop
cld
jae
add
add
inc
ficomps
inc
mov
add
nop
push
mov
leave
nop
jmp
add
add
push
inc
push
add
clc
repnz
nop
cld
jae
add
cmpsl
inc
pop
clc
repnz
nop
cld
jae
add
mov
add
inc
loopne
or
mov
loopne
push
clc
repnz
nop
cld
jae
add
daa
add
roll
repnz
nop
cld
jae
mov
add
nop
cld
jae
add
loop
adc
add
or
repnz
nop
cld
jae
inc
add
int
add
add
add
leave
nop
jmp
das
add
nop
push
mov
leave
nop
jmp
daa
mov
xchg
repnz
jno
push
mov
xchg
ret
cmp
add
bound
mov
xchg
ret
push
fdivrl
xor
push
mov
nop
push
mov
leave
nop
jmp
repnz
jno
jne
nop
push
mov
leave
nop
jmp
add
add
and
add
nop
jmp
mov
add
nop
push
mov
leave
nop
jmp
add
add
add
daa
popa
clc
repnz
nop
cld
jae
mov
fadd
add
add
pop
mov
clc
repnz
nop
cld
jae
mov
testl
dec
nop
push
mov
leave
nop
jmp
fiadds
das
inc
add
or
repnz
nop
cld
jae
add
add
add
pop
add
clc
repnz
nop
cld
jae
add
add
out
popl
clc
repnz
nop
cld
jae
mov
es
imul
in
leave
nop
jmp
daa
ret
inc
push
push
jg
inc
subb
test
adc
add
repnz
nop
cld
jae
add
add
bnd
add
and
add
das
add
cwtl
stos
rolb
xbegin
jae
movsl
das
push
add
jno
jb
jne
nop
push
mov
leave
nop
jmp
xchg
loop
pop
fistpl
clc
repnz
nop
cld
jae
inc
aas
add
repnz
aas
outsl
inc
add
pushf
add
adcb
push
lods
pop
push
mov
xchg
ret
div
add
adc
push
mov
leave
nop
jmp
add
push
add
repnz
and
adc
add
repnz
nop
cld
jae
add
push
test
rolb
movsb
shlb
and
mov
repnz
nop
cld
jae
shl
into
add
adc
push
out
shl
clc
repnz
nop
cld
jae
out
push
mov
push
clc
repnz
nop
cld
jae
add
jg
adc
jns
clc
repnz
nop
cld
jae
push
add
and
outsl
xor
nop
push
mov
leave
nop
jmp
add
adc
mov
nop
push
mov
leave
nop
jmp
add
add
adc
loopne
mov
push
mov
leave
nop
jmp
add
add
push
add
std
add
nop
push
mov
leave
nop
jmp
clc
mov
mov
and
test
nop
push
mov
leave
nop
jmp
push
ds
test
xchg
ret
add
cmpsl
inc
add
add
clc
repnz
nop
cld
jae
add
add
mov
mov
nop
nop
cld
jae
add
add
add
nop
nop
cld
jae
add
add
push
push
mov
xchg
ret
add
adcb
mov
push
push
mov
xchg
ret
add
out
add
push
clc
repnz
nop
cld
jae
inc
int
add
mov
add
clc
repnz
nop
cld
jae
add
add
jg
mov
outsl
loopne
mov
xchg
ret
icebp
add
add
mov
divb
push
push
mov
xchg
ret
push
int
inc
xchg
add
clc
repnz
nop
cld
jae
xor
add
xor
add
movswl
clc
repnz
nop
cld
jae
das
add
add
and
imul
clc
repnz
nop
cld
jae
es
aas
mov
mov
jecxz
clc
repnz
nop
cld
jae
add
add
repz
mov
nop
push
mov
leave
nop
jmp
out
into
std
add
and
add
add
push
mov
xchg
ret
repnz
add
es
mov
ss
clc
repnz
nop
cld
jae
add
add
lea
xchg
ret
add
push
add
jo
cld
push
mov
xchg
ret
mov
rcll
jno
add
mov
push
mov
xchg
ret
out
add
fiadds
mov
jle
add
nop
jmp
shlb
jno
lcall
fld1
push
mov
xchg
ret
add
cmpsl
add
add
sub
jbe
inc
add
inc
fiadds
inc
mov
loop
jns
ficoms
nop
jmp
repnz
xchg
clc
add
movswl
clc
repnz
nop
cld
jae
add
into
fmul
jo
sbb
push
push
mov
xchg
ret
pushf
jno
repz
daa
clc
mov
push
clc
repnz
nop
cld
jae
add
pushf
mov
inc
mov
nop
push
mov
leave
nop
jmp
push
add
daa
inc
add
sbbl
add
xorb
out
add
xor
dec
clc
repnz
nop
cld
jae
add
int3
add
es
mov
je
clc
repnz
nop
cld
jae
roll
sbb
lea
nop
nop
cld
jae
das
add
add
or
jmp
mov
xchg
ret
repz
add
add
nop
cld
jae
inc
negl
add
add
clc
repnz
nop
cld
jae
addb
roll
add
repnz
nop
cld
jae
push
add
mov
mov
arpl
clc
repnz
nop
cld
jae
add
add
adc
nop
cld
jae
movsl
add
add
inc
add
nop
push
mov
leave
nop
jmp
adc
loop
add
rol
lock
fld1
nop
push
mov
leave
nop
jmp
add
add
add
out
add
jmp
std
add
add
add
xor
std
add
add
lods
mov
clc
repnz
nop
cld
jae
add
std
out
int
xchg
jne
clc
repnz
nop
cld
jae
faddl
xor
sbb
clc
repnz
nop
cld
jae
jg
insb
add
add
pusha
pusha
cmp
jne
clc
repnz
nop
cld
jae
add
push
pop
loope
clc
repnz
nop
cld
jae
add
fisubs
pop
pop
clc
repnz
nop
cld
jae
add
jno
add
jnp
sub
add
add
int3
add
mov
mov
movsl
faddp
xadd
add
repnz
nop
cld
jae
xchg
neg
add
push
iret
mov
push
mov
xchg
ret
xor
push
push
sub
pusha
sub
mov
add
in
push
mov
xchg
ret
clc
add
adc
xchg
push
addr16
push
mov
xchg
ret
add
add
push
mov
leave
nop
jmp
std
add
add
push
mov
xchg
ret
daa
add
xchg
mov
mov
in
leave
nop
jmp
push
jg
mov
mov
rclb
call
nop
jmp
add
scas
imul
jge
add
clc
repnz
nop
cld
jae
add
mov
flds
nop
nop
cld
jae
add
das
add
insb
rorb
inc
and
lret
clc
repnz
nop
cld
jae
add
push
adc
bound
mov
clc
repnz
nop
cld
jae
das
into
cmp
ret
movsl
outsb
cmp
repnz
nop
cld
jae
add
int3
add
repnz
nop
cld
jae
add
xchg
mov
mov
push
mov
xchg
ret
mov
add
addb
mov
clc
repnz
nop
cld
jae
add
add
notl
push
mov
leave
nop
jmp
cmpsl
add
roll
daa
lods
push
mov
add
dec
add
push
ret
add
ret
add
movzwl
clc
repnz
nop
cld
jae
int3
add
push
push
leave
clc
repnz
nop
cld
jae
into
add
add
add
or
loopne
inc
and
js
repnz
nop
cld
jae
repz
jg
fld1
insl
or
add
repnz
nop
cld
jae
add
adc
add
clc
repnz
nop
cld
jae
add
add
nop
push
mov
leave
nop
jmp
add
add
add
push
add
clc
repnz
nop
cld
jae
add
das
int
loop
xchg
imul
nop
nop
cld
jae
notl
add
inc
jecxz
sbb
nop
push
mov
leave
nop
jmp
testl
adc
add
aas
inc
add
bound
insb
popf
xor
clc
repnz
nop
cld
jae
mov
int
sti
pop
push
mov
xchg
ret
loop
and
mov
mov
mov
repnz
nop
cld
jae
add
add
add
add
pusha
cmpb
nop
cld
jae
shlb
mov
nop
nop
cld
jae
add
add
push
nop
push
mov
leave
nop
jmp
cmp
inc
out
add
clc
or
mov
mov
adc
repnz
nop
cld
jae
add
add
clc
add
repnz
nop
cld
jae
add
xchg
inc
int
add
xor
cltd
fistpl
push
mov
xchg
ret
fiadds
add
add
ret
inc
mov
clc
repnz
nop
cld
jae
add
ret
xor
je
clc
repnz
nop
cld
jae
movsl
push
repnz
nop
cld
jae
inc
repnz
pushf
push
arpl
in
add
push
cmpsb
add
sti
add
cs
ud1
add
clc
repnz
nop
cld
jae
add
dec
add
movsl
push
and
add
add
add
push
stos
push
mov
xchg
ret
cmp
add
scas
jg
add
cmp
cmp
and
cmp
add
inc
jg
push
ret
imul
mov
xchg
ret
mov
aas
xchg
add
cwtl
pop
jge
ret
push
mov
xchg
ret
add
add
add
inc
add
cmp
repz
repnz
nop
cld
jae
add
add
shlb
repnz
nop
cld
jae
jno
clc
adc
sub
repnz
nop
cld
jae
std
add
xor
clc
repnz
nop
cld
jae
add
out
mov
test
idiv
clc
repnz
nop
cld
jae
mov
add
inc
inc
add
nop
jmp
repnz
adc
jmp
jp
nop
push
mov
leave
nop
jmp
add
add
movsb
pusha
add
ljmp
loop
cltd
push
clc
repnz
nop
cld
jae
fiadds
add
add
push
mov
xchg
ret
rolb
push
adc
clc
repnz
nop
cld
jae
add
add
pop
push
mov
xchg
ret
movsl
pop
add
out
add
stc
fld1
push
mov
xchg
ret
rol
add
add
repnz
cmpb
and
nop
cld
jae
adc
add
push
push
inc
and
repnz
nop
cld
jae
mov
insb
xchg
popf
ret
push
mov
xchg
ret
xor
add
fmull
repnz
nop
cld
jae
cmp
rolb
add
add
inc
sub
sbb
clc
repnz
nop
cld
jae
add
add
xlat
call
clc
repnz
nop
cld
jae
jno
mov
and
push
mov
xchg
ret
fiadds
add
add
je
pop
mov
nop
push
mov
leave
nop
jmp
add
add
int3
push
repnz
nop
nop
cld
jae
repnz
mov
mov
imul
cmp
ret
add
clc
roll
int3
cmpsl
inc
cmp
pop
push
mov
xchg
ret
add
pop
std
add
add
pusha
and
decb
ret
add
scas
add
add
fildl
or
inc
addb
loopne
pop
clc
repnz
nop
cld
jae
add
add
out
add
rorl
mov
adc
repnz
nop
cld
jae
mov
ret
push
clc
repnz
nop
cld
jae
int
add
mov
add
out
push
clc
repnz
nop
cld
jae
and
cmp
nop
nop
cld
jae
add
das
insb
add
ret
mov
clc
repnz
nop
cld
jae
add
mov
lss
clc
repnz
nop
cld
jae
fucomi
adc
push
mov
leave
nop
jmp
int3
xor
cmp
add
push
xchg
adc
sub
xchg
inc
add
repz
inc
add
xor
push
or
jne
push
mov
xchg
ret
add
add
shr
push
idiv
incl
mov
and
mov
add
into
adc
pop
mov
clc
repnz
nop
cld
jae
add
push
fisttpll
test
add
clc
repnz
nop
cld
jae
pop
add
xlat
pop
push
mov
xchg
ret
add
inc
add
imul
jae
xchg
add
add
rol
cs
loopne
orl
add
add
add
add
add
nop
push
mov
leave
nop
jmp
add
repz
je
mov
idiv
repnz
nop
cld
jae
add
add
add
testl
inc
pop
push
mov
xchg
ret
add
inc
ret
xchg
mov
clc
repnz
nop
cld
jae
push
xchg
das
fiadds
push
pushf
fisubs
mov
push
mov
xchg
ret
add
sar
push
clc
repnz
nop
cld
jae
add
pushf
push
add
insb
add
pusha
nop
push
mov
leave
nop
jmp
xor
add
testl
fistpl
nop
push
mov
leave
nop
jmp
into
add
add
mov
clc
repnz
nop
cld
jae
add
bound
repnz
clc
repnz
nop
cld
jae
jg
mov
add
add
xchg
inc
sub
clc
repnz
nop
cld
jae
add
into
adc
loop
add
nop
cld
jae
movsl
into
add
add
adc
roll
repnz
nop
cld
jae
int3
add
int
push
inc
shlb
mov
add
clc
repnz
nop
cld
jae
pushf
add
fcoml
fbstp
sar
repnz
nop
cld
jae
add
das
add
add
inc
xchg
push
nop
push
mov
leave
nop
jmp
add
add
add
testl
pop
mov
xchg
ret
aas
adc
xor
cmp
mov
leave
nop
jmp
loop
add
add
jl
mov
push
mov
leave
nop
jmp
cmpsl
jno
push
add
cld
aam
fwait
push
mov
xchg
ret
add
add
add
test
clc
repnz
nop
cld
jae
push
mov
push
test
mov
and
add
repnz
nop
cld
jae
int
add
mov
pusha
mov
mov
call
cld
jae
add
inc
pop
test
nop
push
mov
leave
nop
jmp
icebp
sar
das
add
mov
cli
xor
and
add
pusha
inc
push
sbb
and
add
add
insb
out
add
mov
add
add
pop
add
shlb
xor
push
mov
xchg
ret
aas
add
adc
andb
mov
push
mov
xchg
ret
testl
inc
add
test
repnz
nop
cld
jae
rolb
push
add
mov
fs
insb
clc
repnz
nop
cld
jae
ficomps
push
and
nop
push
mov
leave
nop
jmp
add
daa
testl
mov
push
mov
leave
nop
jmp
add
filds
push
mov
leave
nop
jmp
es
add
popf
push
push
mov
xchg
ret
add
add
add
add
iret
jne
clc
repnz
nop
cld
jae
add
push
insl
xor
clc
repnz
nop
cld
jae
add
cmp
add
mov
repz
inc
add
add
ret
into
xchg
add
and
clc
repnz
nop
cld
jae
mov
add
rol
pop
add
nop
push
mov
leave
nop
jmp
mov
int3
sbb
nop
push
mov
leave
nop
jmp
add
push
daa
add
cmpsl
rorl
inc
add
add
add
insb
add
fcos
and
clc
repnz
nop
cld
jae
add
add
insb
jno
add
clc
repnz
nop
cld
jae
ret
push
add
mov
shl
add
nop
cld
jae
xor
push
add
fistl
add
adc
repnz
nop
cld
jae
add
add
movsl
mov
mov
clc
repnz
nop
cld
jae
icebp
push
add
add
jle
pop
sub
clc
repnz
nop
cld
jae
add
cld
mov
call
clc
repnz
nop
cld
jae
xor
das
adc
pop
clc
repnz
nop
cld
jae
icebp
push
addb
adc
repz
xor
inc
jmp
decl
pushf
add
push
add
add
movsl
dec
mov
loop
clc
repnz
nop
cld
jae
das
into
add
mov
xchg
test
jge
add
add
scas
cmp
add
es
mov
jbe
add
out
movsl
add
shll
data16
loopne
jp
pusha
and
add
clc
repnz
nop
cld
jae
push
add
add
iret
call
clc
repnz
nop
cld
jae
shll
add
add
clc
repnz
nop
cld
jae
add
add
add
mov
rolb
add
clc
repnz
nop
cld
jae
das
add
push
inc
not
push
mov
xchg
ret
inc
push
adc
into
add
out
shlb
add
pop
insb
inc
add
cmp
add
repnz
lret
push
es
jecxz
push
mov
leave
nop
jmp
add
add
movzwl
push
mov
xchg
ret
and
push
ret
mov
clc
repnz
nop
cld
jae
add
push
loop
nop
push
mov
leave
nop
jmp
add
xchg
mov
add
xchg
mov
mov
clc
repnz
nop
cld
jae
bound
int3
int
pusha
mov
clc
repnz
nop
cld
jae
divl
add
add
add
inc
add
push
mov
xchg
ret
xor
add
add
push
pop
clc
repnz
nop
cld
jae
das
add
add
fildl
std
outsl
mov
clc
repnz
nop
cld
jae
cmp
add
add
aam
inc
add
mov
ficoms
int
fisubs
loope
repnz
repnz
nop
cld
jae
adc
add
add
aam
add
daa
pop
clc
repnz
nop
cld
jae
mov
add
inc
dec
push
push
mov
xchg
ret
add
das
aas
jg
fsubp
add
add
clc
repnz
nop
cld
jae
add
fld1
clc
repnz
nop
cld
jae
repnz
add
add
add
dec
cmp
mov
xchg
ret
fisubrs
add
add
add
add
repnz
nop
cld
jae
loop
add
fldenv
jb,pt
nop
push
mov
leave
nop
jmp
out
ret
repnz
push
push
mov
xchg
ret
int3
push
push
add
push
xor
repnz
nop
cld
jae
add
add
es
ret
clc
repnz
nop
cld
jae
add
add
push
clc
add
push
clc
repnz
nop
cld
jae
int
mov
int
and
insl
add
clc
repnz
nop
cld
jae
shlb
inc
cmp
shr
add
dec
insb
add
add
cmp
mov
nop
nop
cld
jae
add
scas
or
cmc
mov
clc
repnz
nop
cld
jae
add
adc
add
loop
lahf
movzwl
clc
repnz
nop
cld
jae
insb
add
cld
clc
repnz
nop
cld
jae
add
mov
sti
shl
push
mov
xchg
ret
out
add
mov
popa
clc
repnz
nop
cld
jae
add
mov
scas
push
pusha
or
cmp
inc
xor
nop
push
mov
leave
nop
jmp
add
push
mov
out
clc
repnz
nop
cld
jae
add
add
ds
mov
xchg
ret
add
aas
add
into
adc
and
add
mov
mov
cli
add
enter
scas
add
movl
clc
repnz
nop
cld
jae
scas
add
push
xor
add
imul
cld
jae
inc
inc
add
xor
nop
push
mov
leave
nop
jmp
add
mov
andb
mov
leave
nop
jmp
fidivrs
inc
mov
das
loope
clc
repnz
nop
cld
jae
loop
add
repz
clc
repnz
nop
cld
jae
cmpsl
add
xchg
add
add
repnz
nop
cld
jae
add
add
fcomi
add
fs
add
das
mov
int
testl
nop
push
mov
leave
nop
jmp
add
push
test
and
add
add
push
mov
add
jmp
clc
repnz
nop
cld
jae
add
inc
das
add
pusha
pusha
loope
andl
nop
cld
jae
and
add
push
loopne
sbb
nop
cld
jae
add
add
add
rolb
add
nop
push
mov
leave
nop
jmp
add
add
add
cwtl
dec
je
clc
repnz
nop
cld
jae
int
add
add
clc
repnz
nop
cld
jae
cmp
pop
add
add
repnz
nop
cld
jae
add
scas
das
adc
rep
clc
repnz
nop
cld
jae
add
movsl
add
repnz
out
fistl
sarb
xchg
ret
push
add
int3
insb
shrl
andb
loopne
daa
jmp
out
inc
adc
add
add
out
int
loop
pop
movzwl
clc
repnz
nop
cld
jae
das
pop
add
add
and
clc
repnz
nop
cld
jae
std
add
add
xor
nop
nop
cld
jae
add
pop
inc
add
movsl
out
push
nop
push
mov
leave
nop
jmp
scas
add
and
adc
xor
call
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
adc
add
add
xor
nop
nop
cld
jae
movsl
repz
push
lsl
nop
push
mov
leave
nop
jmp
add
add
nop
nop
cld
jae
inc
and
add
add
xor
push
clc
repnz
nop
cld
jae
and
out
rclb
sbb
cmp
repnz
nop
cld
jae
add
add
mov
pop
nop
push
mov
leave
nop
jmp
cmp
add
mov
test
push
mov
xchg
ret
loop
mov
repnz
or
aam
fistpl
clc
repnz
nop
cld
jae
loop
mov
add
adc
add
clc
repnz
nop
cld
jae
add
daa
add
int3
loope
push
mov
xchg
ret
fcomi
add
inc
jno
add
outsb
aam
mov
call
nop
jmp
push
daa
das
fdivrs
add
clc
repnz
nop
cld
jae
add
int3
jg
add
decl
mov
leave
nop
jmp
mov
add
js
call
clc
repnz
nop
cld
jae
adc
std
es
pop
clc
repnz
nop
cld
jae
cmp
add
cmp
mov
mov
repnz
nop
cld
jae
adc
add
add
inc
lcall
repnz
nop
cld
jae
loop
jg
inc
add
add
and
push
mov
xchg
ret
daa
add
xchg
add
and
add
push
mov
xchg
ret
int3
add
add
xor
add
clc
repnz
nop
cld
jae
inc
das
out
insb
add
inc
popa
push
clc
repnz
nop
cld
jae
mov
int3
inc
add
xor
repnz
nop
cld
jae
adc
add
out
add
nop
push
mov
leave
nop
jmp
movsl
add
ret
add
add
clc
repnz
nop
cld
jae
out
add
push
ret
mov
adc
add
add
add
repz
pop
int
push
clc
repnz
nop
cld
jae
inc
pushf
mov
add
sbb
clc
repnz
nop
cld
jae
add
add
nop
cld
jae
int3
add
push
xchg
call
clc
repnz
nop
cld
jae
add
add
inc
add
nop
push
mov
leave
nop
jmp
shll
add
add
loop
and
clc
repnz
nop
cld
jae
add
push
jno
ret
add
repnz
nop
cld
jae
xchg
out
mov
push
add
repnz
nop
cld
jae
cmpsl
jno
fnclex
es
inc
addl
cmp
ret
jg
fcmovnu
mov
pop
xchg
add
nop
push
mov
leave
nop
jmp
out
pop
daa
das
mov
rcll
repnz
nop
cld
jae
pushf
add
test
cli
clc
repnz
nop
cld
jae
cmpsl
adc
pusha
and
add
push
mov
xchg
ret
das
add
mov
dec
idivl
clc
repnz
nop
cld
jae
push
add
mov
xchg
ret
add
add
rol
jmp
dec
clc
dec
inc
clc
repnz
nop
cld
jae
inc
das
add
out
push
clc
repnz
nop
cld
jae
add
inc
add
mov
nop
push
mov
leave
nop
jmp
pop
add
mov
mov
add
repnz
nop
cld
jae
add
inc
clc
mov
nop
nop
cld
jae
testl
xchg
mov
clc
repnz
nop
cld
jae
add
mov
int
and
jne
clc
repnz
nop
cld
jae
add
add
clc
add
mov
clc
repnz
nop
cld
jae
rclb
push
mov
xor
test
repnz
nop
cld
jae
add
adc
je
clc
repnz
nop
cld
jae
push
fisubs
in
clc
repnz
nop
cld
jae
int
add
repnz
nop
cld
jae
inc
add
add
in
out
fwait
push
mov
xchg
ret
add
das
inc
add
mov
clc
repnz
nop
cld
jae
add
cmpsl
add
movsl
add
mov
mov
nop
push
mov
leave
nop
jmp
add
add
add
inc
popl
nop
nop
cld
jae
add
add
add
fs
popa
call
nop
push
mov
leave
nop
jmp
das
das
add
pushf
mov
cld
jae
add
jg
adc
add
bound
lret
nop
push
mov
leave
nop
jmp
out
add
add
mov
push
mov
xchg
ret
loop
add
add
repnz
into
adc
in
leave
nop
jmp
das
adc
movsl
add
orl
add
clc
repnz
nop
cld
jae
insb
add
shlb
inc
sub
repnz
nop
cld
jae
add
dec
loopne
sub
clc
repnz
nop
cld
jae
mov
repnz
dec
jl
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
int3
mulps
repnz
nop
cld
jae
int
mov
cmpsl
inc
add
shlb
adc
repnz
nop
cld
jae
adc
add
jbe
clc
repnz
nop
cld
jae
add
inc
je
clc
repnz
nop
cld
jae
add
fcoms
test
repnz
nop
cld
jae
scas
pop
pushf
jecxz
jge
clc
repnz
nop
cld
jae
repnz
std
cmp
add
jmp
out
add
clc
add
add
add
ret
add
add
push
cmp
inc
and
repnz
nop
cld
jae
mov
add
add
add
repnz
nop
cld
jae
adc
loop
pop
fwait
push
mov
xchg
ret
add
add
add
pushf
adc
lock
mov
xchg
ret
add
push
scas
add
mov
add
mov
clc
repnz
nop
cld
jae
add
icebp
roll
or
xor
xor
nop
push
mov
leave
nop
jmp
add
push
clc
das
daa
push
outsb
andb
jge
lret
push
mov
xchg
ret
mov
add
add
add
nop
push
mov
leave
nop
jmp
add
jno
ret
das
add
movsb
clc
repnz
nop
cld
jae
mov
add
and
pop
cmpsb
mov
loopne
mov
xchg
ret
push
insb
add
and
add
clc
repnz
nop
cld
jae
push
jg
sub
loopne
fld1
push
mov
xchg
ret
das
std
inc
inc
aas
bound
std
jb
xor
jge
clc
repnz
nop
cld
jae
push
add
mov
push
clc
repnz
nop
cld
jae
add
add
mov
nop
cld
jae
inc
add
add
adc
xor
nop
cld
jae
add
clc
jno
mov
adc
nop
push
mov
leave
nop
jmp
inc
icebp
movsl
int
cmp
out
nop
idiv
fld1
nop
push
mov
leave
nop
jmp
adc
fists
mov
xchg
ret
mov
jg
fdiv
add
cmp
mov
xchg
ret
add
add
add
mov
daa
pop
nop
push
mov
leave
nop
jmp
add
std
lahf
mov
nop
push
mov
leave
nop
jmp
clc
into
movsl
add
into
adc
nop
nop
cld
jae
fildl
adc
and
push
and
pop
call
clc
repnz
nop
cld
jae
push
add
add
pop
pop
push
mov
xchg
ret
roll
int
mov
add
jb
xor
clc
repnz
nop
cld
jae
add
into
xchg
stos
mov
stc
clc
repnz
nop
cld
jae
inc
push
add
bound
not
clc
repnz
nop
cld
jae
repz
add
add
insb
addr16
nop
push
mov
leave
nop
jmp
add
add
mov
arpl
xchg
ret
mov
add
fcomi
outsl
pushl
nop
push
mov
leave
nop
jmp
repnz
movsl
add
or
mov
xchg
ret
mov
adc
nop
push
mov
leave
nop
jmp
add
xor
add
jg
and
popf
clc
repnz
nop
cld
jae
add
call
clc
repnz
nop
cld
jae
xor
bound
push
clc
repnz
nop
cld
jae
roll
into
inc
add
add
repnz
nop
cld
jae
std
ret
add
push
add
xlat
mov
push
mov
xchg
ret
xor
adc
xor
pop
add
clc
repnz
nop
cld
jae
das
add
xchg
add
xor
pusha
test
loopne
pusha
and
xchg
inc
add
push
insb
xor
add
das
loop
mov
pusha
les
xor
repnz
nop
cld
jae
mov
negb
cmp
call
inc
add
add
add
out
sbb
nop
nop
cld
jae
fisubs
add
ficomps
nop
nop
cld
jae
add
add
aaa
je
clc
repnz
nop
cld
jae
add
fbstp
clc
repnz
nop
cld
jae
mov
and
lea
mov
cmp
ret
xor
sub
sar
nop
nop
cld
jae
int3
cmp
movsl
add
mov
sub
push
pusha
loopne
out
sub
add
repnz
nop
cld
jae
add
cmp
add
nop
cld
jae
out
add
add
scas
add
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
leave
nop
jmp
add
mov
scas
add
test
loopne
inc
insl
add
clc
repnz
nop
cld
jae
add
scas
add
add
push
clc
repnz
nop
cld
jae
out
jg
testl
clc
repnz
nop
cld
jae
faddl
fistl
cmpl
nop
push
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
pushf
add
cmpsl
cmpsl
ret
fisttpl
push
mov
leave
nop
jmp
add
int3
icebp
add
push
add
outsl
rep
clc
repnz
nop
cld
jae
das
add
rclb
sarb
cld
jae
add
scas
add
std
int
loopne
dec
mov
nop
push
mov
leave
nop
jmp
insb
mov
cmpsl
add
clc
repnz
nop
cld
jae
add
aas
lods
shlb
addb
jbe
mov
push
mov
xchg
ret
add
mov
aas
faddl
rorl
enter
nop
cld
jae
add
add
cmpb
mov
clc
repnz
nop
cld
jae
mov
mov
lods
mov
clc
repnz
nop
cld
jae
loop
add
jae
push
mov
xchg
ret
add
add
add
add
mov
call
nop
jmp
repnz
add
call
clc
repnz
nop
cld
jae
movsl
es
daa
jle
add
clc
repnz
nop
cld
jae
mov
negb
push
push
mov
xchg
ret
add
add
imul
cld
jae
add
clc
add
push
mov
xchg
ret
add
add
mov
add
add
div
nop
push
mov
leave
nop
jmp
add
adc
int3
rolb
inc
clc
repnz
nop
cld
jae
push
std
dec
push
clc
repnz
nop
cld
jae
loop
clc
add
add
clc
repnz
nop
cld
jae
add
addr16
clc
repnz
nop
cld
jae
mov
add
push
add
je
inc
loopne
shlb
clc
repnz
nop
cld
jae
add
add
mov
jg
nop
push
mov
leave
nop
jmp
and
int3
add
inc
and
clc
repnz
nop
cld
jae
add
inc
add
push
adc
mov
xchg
ret
loop
mov
out
nop
addl
mov
xchg
ret
add
add
fistpl
push
mov
xchg
ret
add
fdivr
add
add
fldl
nop
nop
cld
jae
loop
clc
das
add
sbb
fstpl
repnz
nop
cld
jae
mov
repnz
add
movsb
pusha
add
fld1
push
mov
xchg
ret
xor
insb
mov
mov
nop
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
ret
cmp
aas
or
repnz
nop
cld
jae
mov
ret
add
std
inc
mov
nop
cld
jae
mov
out
loop
faddl
repz
mov
xchg
ret
xor
add
das
insb
add
add
push
mov
leave
nop
jmp
fildl
clc
insb
mov
div
clc
repnz
nop
cld
jae
add
addb
shll
jmp
insb
inc
add
movsl
movsl
add
adc
clc
add
nop
jmp
int
add
add
and
xchg
repnz
nop
cld
jae
cmp
shll
mov
xchg
ret
add
std
xor
movsl
loop
push
adc
loopne
mov
nop
nop
cld
jae
repnz
pushf
add
add
jmp
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
xor
inc
icebp
xchg
nop
push
mov
leave
nop
jmp
aas
add
xor
movsl
add
xorl
clc
repnz
nop
cld
jae
icebp
ret
dec
push
mov
add
add
push
pop
test
add
add
or
mov
lods
clc
repnz
nop
cld
jae
daa
add
add
roll
inc
add
icebp
add
icebp
scas
add
push
mov
xchg
ret
add
add
add
fildl
mov
nop
push
mov
leave
nop
jmp
icebp
add
insb
jecxz
mov
outsb
mov
insb
daa
add
add
faddl
insl
mov
movsl
mov
clc
repnz
nop
cld
jae
cmp
repnz
push
mov
xchg
ret
add
inc
add
mov
repz
clc
repnz
nop
cld
jae
mov
add
int
cmpsl
sub
nop
nop
cld
jae
add
or
cmp
out
mov
clc
repnz
nop
cld
jae
out
insb
insb
add
clc
repnz
nop
cld
jae
clc
add
repz
add
push
clc
repnz
nop
cld
jae
adc
int
add
add
sub
jg
nop
push
mov
leave
nop
jmp
add
add
pushf
cld
add
mov
push
mov
xchg
ret
add
add
addb
push
clc
repnz
nop
cld
jae
icebp
xchg
add
movsl
add
mov
inc
adc
repnz
nop
cld
jae
rcll
push
nop
push
mov
leave
nop
jmp
repz
xor
add
mov
add
add
clc
repnz
nop
cld
jae
std
mov
fldcw
mov
nop
nop
cld
jae
push
inc
int
jae
clc
repnz
nop
cld
jae
repz
add
out
cmp
push
push
mov
xchg
ret
add
add
addb
add
nop
nop
cld
jae
add
push
and
mov
leave
nop
jmp
add
fimuls
clc
repnz
nop
cld
jae
int
add
add
cmp
mov
nop
cld
jae
clc
ret
inc
add
pusha
out
inc
out
clc
repnz
nop
cld
jae
add
mov
mov
add
pop
nop
push
mov
leave
nop
jmp
cmpsl
adc
cmpsl
xchg
mov
clc
repnz
nop
cld
jae
add
add
add
adc
mov
push
mov
xchg
ret
repnz
add
repz
cmp
push
mov
xchg
ret
insb
mov
mov
mov
shl
incl
push
mov
shlb
xchg
add
in
dec
cmp
repnz
nop
cld
jae
shll
mov
clc
nop
push
mov
leave
nop
jmp
add
ficoms
std
lea
push
mov
xchg
ret
std
insb
add
add
test
ret
nop
push
mov
leave
nop
jmp
add
add
testl
test
repnz
nop
cld
jae
inc
es
add
cmp
rep
clc
repnz
nop
cld
jae
mov
movsl
add
push
nop
push
mov
leave
nop
jmp
jg
add
push
add
ljmp
push
mov
xchg
ret
add
add
int3
std
adc
mov
lods
and
imul
nop
nop
cld
jae
int3
add
stos
clc
repnz
nop
cld
jae
mov
scas
dec
push
clc
repnz
nop
cld
jae
add
push
push
cmp
mov
xchg
ret
add
add
gs
clc
repnz
nop
cld
jae
icebp
inc
inc
adc
into
inc
ds
aam
or
jo
nop
push
mov
leave
nop
jmp
add
push
cmp
nop
nop
cld
jae
mov
add
mov
mov
shlb
clc
repnz
nop
cld
jae
add
inc
inc
lahf
fld1
clc
repnz
nop
cld
jae
fimuls
cmp
fld1
push
mov
xchg
ret
shl
mov
push
pop
clc
repnz
nop
cld
jae
add
add
add
add
inc
mov
mov
inc
mov
pusha
mov
mov
mov
push
mov
xchg
ret
xor
add
and
repnz
nop
cld
jae
movsl
int3
add
add
push
mov
sbb
jno
popa
add
shll
cld
push
add
and
jg
add
sahf
cld
xor
jle
push
and
bound
adc
loopne
pop
and
or
add
mov
inc
push
andb
xchg
loopne
mov
dec
and
pusha
mov
mov
xor
call
mov
jl
mov
je
jge
hlt
scas
add
mov
xor
dec
add
add
aam
add
fldenv
lret
ja
jb
daa
mov
mov
and
inc
jmp
lea
pop
mov
ret
adc
fistl
shrb
jne
adc
addb
or
pop
jecxz
jmp
add
and
cmovp
mov
stc
sbb
mov
loope,pt
rclb
pop
sbb
mov
push
nop
sub
shlb
adc
ret
mov
or
data16
push
sbb
xlat
cli
inc
pop
test
inc
jle
outsb
pop
jnp
int3
lret
dec
int
inc
loopne
jnp
icebp
popa
hlt
lahf
movsl
pop
pop
out
adc
cmp
aam
mov
and
lock
loopne
xchg
add
test
pusha
xchg
add
xor
ljmp
iret
stc
or
cmpsb
pusha
inc
out
pop
cli
inc
mov
adc
jo
push
and
jp
and
mov
pop
mov
cmpsl
push
xchg
mov
cmpsl
ficomps
stos
xchg
adc
shlb
inc
adc
pop
cld
sbb
xor
mov
sti
imul
or
adc
into
add
push
xlat
mov
fldl
test
fwait
hlt
dec
or
dec
inc
dec
mov
xor
in
imul
push
sbb
pop
popa
dec
cmc
in
pusha
leave
xchg
jnp
cmp
gs
cwtl
lea
fbld
cmc
int
addb
movsl
out
push
mov
pusha
pop
jne
pushf
sbb
push
pushf
cmp
cmp
iret
bound
call
and
add
cmc
int
cmp
cmpsb
add
xor
sbb
das
in
dec
mov
int3
pop
insb
mov
inc
shrb
negb
out
pop
lds
cmp
stos
fsub
cwtl
xchg
dec
jle
andb
sbb
sti
rorb
out
inc
repnz
rorb
sarb
cs
and
addb
sub
inc
out
rolb
ret
loopne
add
dec
mov
jno
add
and
mov
fs
adc
out
lcall
and
mov
sbb
mov
iret
scas
inc
int3
mov
mov
xchg
pop
mov
or
and
addl
mov
andb
inc
push
pusha
pusha
jnp
movb
cmp
add
adc
loop
mov
lret
outsb
sti
xchg
mov
mov
jge
xor
addb
xchg
lret
pop
hlt
aas
aas
add
sub
adc
dec
mov
xlat
js
fisubrl
loopne
pop
xchg
ficoms
rcll
jge
mov
lcall
dec
hlt
and
inc
push
mov
fcomp
push
imul
cmp
pop
sub
cmp
add
stos
and
test
mov
sbb
test
clc
bound
in
int3
fsubs
sbb
jno
std
sbb
nop
xlat
xchg
jno
mov
in
imul
addb
mov
mov
pop
ret
scas
and
mov
rcrl
loopne
xor
push
mov
push
xor
add
fwait
xor
test
pusha
xlat
in
pushf
add
mov
xorl
pop
stos
cli
push
mov
addr16
push
mov
lcall
xor
ror
pop
cli
sbb
fmull
loopne
sti
inc
cmp
lret
lahf
test
cmp
ds
sub
shl
in
jb
mov
pop
xchg
out
call
pop
or
leave
mov
sahf
adc
out
lret
push
outsb
dec
test
rclb
insb
sub
sbbb
aas
cmp
cs
inc
adc
dec
dec
mov
mov
int3
in
ficompl
push
scas
adc
pop
add
and
ret
out
push
push
mov
addb
pop
fnstenv
fbstp
addb
iret
mov
and
and
add
push
inc
add
inc
lar
pusha
ret
xchg
add
mov
decb
shlb
cmp
lret
outsl
sub
inc
and
js
je
ret
daa
jmp
inc
add
jmp
dec
sub
hlt
pop
mov
iret
jnp
loopne
icebp
test
mov
inc
pusha
push
sqrtps
adc
jo
addb
mov
add
faddl
shl
stc
call
ljmp
mov
cmpsl
xchg
test
mov
pop
adc
pushf
jb
mov
and
rolb
and
cmpsb
inc
loopne
add
and
pusha
add
pusha
and
pusha
ret
push
out
in
mov
movsb
and
and
loopne
movsl
int
add
pusha
jg
cmp
add
pusha
fwait
in
push
inc
rcrl
filds
stos
mov
int3
sbb
les
pusha
addr16
and
mov
sar
jns
pop
sbb
ljmp
mov
xchg
cmp
mul
inc
jnp
fdivrl
pusha
lret
ds
add
incl
fldcw
outsb
or
shlb
mov
push
pusha
add
fcoml
andb
push
addl
inc
jns
and
loope
add
xchg
push
out
and
xchg
bound
push
cmp
addb
dec
jno
jns
and
add
fisttpll
xor
mov
add
mov
sub
leave
jecxz
pusha
loopne
ljmp
xchg
in
mov
jo
and
add
into
mov
pusha
sar
and
mov
mov
add
pusha
add
mov
mov
loopne
imul
loopne
in
and
xchg
daa
or
orb
sarb
or
mov
andb
andb
lret
xchg
pusha
mov
mov
outsb
sub
add
test
pusha
jbe
or
and
inc
rcr
push
add
xor
insl
jmp
je
push
inc
repnz
sbbl
loopne
xchg
or
or
shll
iret
mov
jge
inc
mov
push
int3
pop
mov
sahf
push
outsl
fbld
cmp
xchg
xor
pop
push
insl
cli
aad
shl
adc
add
mov
sbb
cmc
ljmp
fsubrs
dec
jmp
rolb
jnp
add
pop
into
je
dec
shlb
sti
mov
cmp
jnp
cmp
leave
push
loopne
ss
call
arpl
fwait
mov
outsl
and
mov
add
daa
popf
mov
jmp
enter
icebp
push
and
xchg
sbb
cmp
outsl
cmp
shlb
sub
inc
sbbb
loopne
test
add
iret
mov
rolb
cs
add
and
fcmovnb
or
xchg
int3
jne
iret
pop
xor
stos
mov
pop
mov
out
ret
pop
xchg
pop
push
es
mov
mov
mov
pusha
and
dec
dec
sub
jnp
xor
call
jb
scas
cmp
xor
pusha
xchg
rcl
mov
rol
fcoms
cmc
mov
shl
outsb
xchg
ljmp
lods
pusha
pusha
out
dec
pop
jae
push
pop
jge
in
xchg
cmpsl
cltd
pop
addr16
faddl
imul
roll
fwait
add
add
adc
int3
int
or
sar
and
mov
and
sub
adc
pusha
and
inc
pop
lcall
sahf
pop
sbb
sub
dec
mov
shl
sub
push
mov
imul
inc
cmp
pop
leave
mov
and
mov
pusha
add
inc
inc
push
sub
clc
jge
cs
inc
mov
subps
rclb
dec
movsl
push
out
data16
mov
loope
hlt
imul
gs
std
xor
mov
and
add
jo
add
sbb
add
mov
into
jg
cmpsb
addb
add
addb
ret
sub
add
ljmp
cmp
shlb
push
and
fcoml
js
andb
mov
xorb
stos
addb
and
mov
cli
jnp
iret
and
cmpsl
jno
into
mov
xor
and
stc
or
adc
or
xchg
sbb
loope
out
cmpsb
pusha
add
popa
xchg
les
arpl
insb
rorl
jo
and
add
aam
rolb
loopne
pop
pop
or
loopne
movsb
mov
add
pusha
jl
sti
out
stos
and
enter
outsl
push
push
sub
aas
push
addb
push
or
push
pusha
sbbb
lret
outsb
cmpsl
jns
mov
and
popf
mov
leave
lods
call
adc
add
mov
cs
shlb
dec
sub
leave
mov
shl
or
or
xchg
mov
and
or
mov
pusha
out
xchg
push
add
imul
cmpsb
pusha
andb
and
jo
sbb
enter
loopne,pn
mov
xor
adc
mov
cmp
scas
loopne
scas
pop
pop
int3
pop
mov
and
xor
inc
cmpb
stc
xor
mov
addb
ret
leave
pop
push
cld
xor
loop
and
pop
sbb
ja
sbb
pop
fsubl
pop
cmpsb
inc
loopne
jb
push
jmp
and
mov
or
cmpsl
or
arpl
lret
fsubrl
mov
xor
mov
mov
push
push
jae
repnz
add
lahf
js
in
in
xor
aas
pop
and
dec
repz
lea
in
push
mov
fucom
idiv
clc
jae
outsb
mov
mov
mov
ss
stc
dec
sub
je
inc
mov
pusha
and
inc
into
mov
je
ffreep
sub
add
int
mov
push
push
add
out
jmp
jne
add
mov
and
fnsave
xor
imul
loope
jns
push
cmp
mov
jo
outsb
pop
and
mov
rolb
loopne
jne
inc
mov
or
and
adc
add
inc
sbb
push
xor
mov
mov
pop
mov
inc
loopne
or
and
sbb
fcmovne
rorb
inc
imul
enter
dec
jae
or
push
jle
sub
add
pop
pop
in
xor
sub
mov
inc
lahf
hlt
in
clc
cltd
and
add
pop
xchg
insb
out
mov
out
mov
push
sbb
shll
sar
and
fmul
and
loop
mov
mov
inc
loop
rolb
rcrb
add
inc
and
and
add
aam
cmp
push
dec
loopne
mov
adc
pop
mov
sti
lret
lock
outsl
jecxz
movsb
addb
add
shlb
mov
stos
xchg
xor
and
jb
lods
inc
xorb
aaa
or
add
xor
add
inc
loopne
pop
dec
imul
shl
mov
pusha
add
lock
inc
and
mov
sarb
andb
push
jecxz
fistpl
mov
mov
inc
adcb
cwtl
arpl
mov
outsb
sar
fisubrl
and
or
loopne
data16
pusha
loopne
movsl
testb
pop
into
fs
sarl
push
mov
sub
loop
mov
add
and
dec
aaa
sbb
enter
xor
mov
jbe
mov
pop
mov
or
pusha
inc
or
add
xorb
les
jge
lcall
ss
mov
cmovne
inc
mov
xor
pusha
pusha
mov
inc
xchg
fsubp
cli
mov
frstors
push
jmp
add
loopne
out
arpl
inc
jp
ret
insl
push
pop
lds
inc
mov
lods
and
and
pusha
jp
loopne
arpl
imulb
push
outsb
imul
xor
and
loopne
inc
rcrb
lods
mov
pop
jnp
jg
fwait
cld
lret
test
rclb
mov
xchg
testl
sub
and
out
inc
in
jg
cli
cwtl
icebp
xor
and
xorb
mov
out
fs
push
enter
cmp
out
dec
xchg
daa
or
mov
xchg
push
incb
mov
rcrb
sarl
cltd
mov
and
mov
out
fsubrl
ss
scas
test
inc
mov
sarb
js
cltd
gs
mov
dec
or
mov
adcb
lods
mov
loopne
inc
sub
jmp
dec
inc
sti
lcall
mov
shr
loopne
and
pop
mov
mov
fistps
push
mov
inc
fucom
imul
dec
adc
call
mov
fs
ret
mov
add
mov
pop
xor
call
adc
mov
imul
into
ss
jbe
andb
ret
lret
ljmp
jecxz
call
inc
and
mov
jecxz
add
rcrb
lods
pusha
loopne
loope
rclb
pusha
test
add
pusha
push
int
ja
icebp
and
add
mov
pop
mull
sti
push
jecxz
jl,pt
pop
outsl
sbb
mov
and
mov
inc
call
jae
fcomi
sub
sbb
cli
fadds
addr16
and
add
push
aad
pop
mov
shrb
shlb
dec
lahf
sbb
and
mov
lods
xchg
dec
cltd
inc
inc
aaa
dec
xor
inc
adc
mov
mov
and
xchg
aad
inc
orb
mov
hlt
je
pop
lock
pop
mov
pop
add
sbb
xorb
rorb
add
hlt
data16
xchg
std
inc
neg
inc
mov
add
add
jb
imul
inc
ljmp
cmpsl
inc
xlat
inc
dec
adc
sbb
pusha
jns
sub
jo
stos
and
push
scas
pusha
and
and
add
cmp
insb
push
mov
or
inc
scas
push
dec
lock
ficoml
mov
jp
adc
xchg
test
and
xor
pusha
and
cmpsb
pusha
loopne
cmp
aam
ja
addb
stc
jbe
or
mov
mov
pop
jo
repz
sbb
and
fidivl
cld
outsb
add
dec
pop
sub
gs
aad
sbb
pop
xchg
out
lods
loopne
movsl
jnp
fwait
jae
out
ljmp
mov
inc
imul
mov
std
and
shlb
fcos
lret
mov
pop
repz
xor
das
mov
push
andb
addr16
jle
test
inc
mov
mov
inc
flds
xchg
and
cltd
dec
lods
sbb
sahf
pop
ss
jg
xor
shll
dec
test
aad
stc
cltd
bound
add
jmp
rcrb
pusha
and
xchg
std
pop
cmp
jge
es
andb
xor
mov
std
repnz
shrb
mov
ficoms
lret
mov
out
inc
xchg
out
loop
pop
adc
pop
mov
mov
sarl
or
fwait
lret
js
imul
mov
int3
inc
xchg
add
mov
insb
mov
inc
and
xchg
test
jo
fisubrl
adc
shl
add
adc
lds
ljmp
ret
adc
push
jne
mov
stos
mov
filds
data16
and
add
mov
mov
repz
mov
xchg
mov
subb
inc
cmpsl
popl
std
jmp
rcr
pusha
xorb
jb
or
mov
shlb
andb
dec
mov
cmp
lock
mov
outsb
fwait
in
fdivp
mov
push
and
pusha
and
xor
pusha
shrb
mov
loope
push
out
shll
loopne
sub
mov
loopne
jbe
faddl
mov
or
push
jl
lds
pusha
pusha
add
pusha
loopne
shl
dec
xor
mov
inc
test
stos
pusha
pusha
outsb
xchg
sti
rorb
out
and
jge
das
sti
or
pusha
iret
aad
cld
cmpsl
shlb
sbb
pop
ret
outsb
adc
sbbl
sub
cli
pop
movsb
and
insb
ljmp
lret
andb
mov
and
mov
inc
adc
pusha
pop
cmp
mov
pusha
add
loopne
and
xchg
xchg
xchg
add
neg
xlat
and
adc
push
dec
dec
xchg
stos
mov
sahf
adc
jp
pusha
std
test
popa
ret
movsb
rolb
shll
lods
sub
cmpsb
inc
mov
jmp
xchg
sub
mov
shlb
xchg
icebp
xchg
and
and
fimuls
loopne
mov
push
cmp
xor
loopne
rolb
mov
mov
and
mov
and
lods
shlb
hlt
jns
mov
in
sbb
jmp
push
ljmp
inc
adc
movsb
mov
xchg
sbb
rcrb
mov
pusha
sbb
inc
jmp
push
movsl
cmp
cmc
xchg
inc
mov
jns
push
jb
mov
loope
and
cli
inc
add
inc
pop
adc
imul
mov
fwait
adc
sti
fisubrs
pusha
mov
sub
push
xor
insb
push
loopne
ffreep
dec
sub
inc
pusha
mov
pusha
add
test
inc
push
test
and
mov
sub
fsub
cmpl
cmp
inc
addb
mov
loopne
jns
inc
pop
movsl
pop
lds
jp
mov
ror
or
pusha
xor
addb
lcall
cli
mov
out
add
mov
fs
pop
sub
loopne
nop
xor
add
js
std
jae
loop
outsb
loopne
gs
lret
loopne,pn
fidivrs
call
cltd
mov
cmp
and
rcl
in
fsubr
movb
addb
and
cltd
lock
pop
inc
or
in
inc
push
fiadds
pusha
xchg
mov
push
cmc
push
iret
ds
loopne
sub
inc
and
inc
mov
xchg
jbe
or
sbbb
pop
in
inc
les
sbb
add
mov
fs
ret
and
sub
inc
add
xlat
xor
scas
push
mov
dec
bnd
sarb
jmp
add
pop
xchg
daa
mov
sarb
mov
rcrb
jl
mov
rol
mov
jno
mov
push
push
test
rolb
add
loopne
push
iret
shlb
lcall
add
loopne
and
mov
icebp
rcrb
pop
dec
adc
fwait
hlt
pop
fiadds
imul
scas
add
int
xchg
jl
pop
dec
or
or
mov
cmpb
mov
mov
clc
pop
outsl
fnstenv
cmc
jbe
jg
push
insl
mov
pop
lret
add
int
test
loope
pop
pop
sbb
mov
jno
adc
xchg
push
mov
fs
dec
mov
cmpsb
mov
xor
add
pop
xlat
mov
int
ljmp
fldl
add
xchg
aam
call
and
ss
add
xchg
cli
xor
pusha
mov
lret
mov
adc
mov
mov
push
mov
or
jge
mov
arpl
jg
mov
aas
sub
mov
rcrb
repz
xchg
sbb
xchg
popf
in
icebp
and
rcll
jg
lods
add
mov
decl
pop
xor
andb
jae
inc
cmp
mov
ret
loopne
mov
mov
push
push
cwtl
addr16
sbb
ficoms
mov
pop
addr16
cmp
popf
sbbl
arpl
sbb
mov
sti
jl
pusha
orb
push
rol
jecxz
xor
out
jge
addb
ljmp
mov
pusha
pop
pushf
cmp
outsb
nop
fnstenv
test
pop
repz
test
or
xor
insl
mov
mov
aad
mov
sub
and
adc
repnz
dec
ss
negb
pusha
mov
pusha
and
pusha
and
sbb
add
xchg
lahf
into
lods
inc
loopne
inc
inc
pushf
sti
pop
cmp
fs
lods
and
das
push
imul
inc
jge
cmp
clc
aam
sahf
sbb
repz
inc
mov
loopne
scas
and
rcrl
and
pop
mov
pop
gs
cmp
sub
mov
jp
pushf
xchg
or
shrb
mov
dec
pop
mov
inc
pop
xchg
sbb
jl
mov
bsr
and
ja
push
adc
cltd
in
pop
jo
cmp
dec
dec
arpl
aaa
sub
loopne
inc
inc
dec
addr16
add
mov
pop
inc
mov
jns
sbb
sti
scas
or
lret
mov
push
andl
xor
jl
mov
mov
shlb
xor
mov
and
out
and
sub
shr
out
pop
or
mov
rolb
cmp
xchg
addb
enter
jge
movsb
and
sbb
xlat
arpl
and
cmpb
rolb
lock
sub
cwtl
cmp
mov
test
pusha
push
fisubrl
or
lret
repnz
inc
mov
icebp
xor
pusha
shlb
adc
icebp
inc
inc
mov
cmc
push
fs
daa
pop
rorb
insl
cmp
popfw
iret
mov
pusha
mov
mov
sahf
fcmovu
daa
jno
pop
fsub
pop
pusha
outsb
outsb
sub
pusha
repnz
hlt
push
sub
add
mov
leave
inc
std
sub
shlb
pop
jnp
ja
inc
inc
cld
std
and
cmpb
inc
dec
jnp
jmp
repz
and
pusha
add
in
pop
aad
mov
loopne
jg
and
ret
pop
xchg
out
mov
scas
loopne
or
mov
andb
mov
lret
popf
out
mov
sarl
test
dec
pop
in
in
jmp
add
inc
sub
pusha
test
dec
add
andb
add
std
jle
mov
dec
ret
out
dec
mov
daa
jmp
stos
out
mov
xchg
mov
addb
mov
add
inc
andb
mov
into
sbb
pop
in
mov
pusha
outsl
mov
loopne
jne
sub
in
pop
push
testl
push
sbb
cmp
inc
insl
jne
cmp
pop
dec
stc
xor
lods
stc
xchg
sbb
mov
and
xor
loope
cmp
fsubl
sahf
pop
popf
aas
push
ret
sub
lds
add
out
jp
inc
push
pop
push
mov
shll
mov
jnp
rol
rolb
lcall
bound
mov
pop
push
xor
movsb
inc
mov
mov
cmpsb
pusha
rclb
loopne
bound
mov
divl
mov
test
pusha
inc
push
lods
or
repnz
jb
jo
jg
addb
jb
mov
fstpl
mov
loopne
js
pminsw
stos
rolb
inc
inc
fsubp
mov
loopne
cmp
test
sbbb
inc
push
cmp
push
js
out
cld
out
retw
cmp
xchg
in
mov
mov
orl
push
inc
jo
and
mov
and
dec
fmul
dec
ret
mov
cmpsl
in
mov
pop
and
fsubrl
and
popa
ret
andl
cwtl
mov
cld
pop
lret
mov
jb
shl
roll
addb
rolb
gs
xchg
push
and
add
xchg
jg
inc
mov
inc
or
dec
call
dec
push
cld
xor
scas
andb
add
fnstenv
pop
or
and
mov
sbb
daa
or
ret
push
rep
loopne
lcall
shl
adc
aaa
lods
loopne
sahf
pop
sarb
cmp
pusha
inc
jno
sub
movsb
inc
loopne
push
pusha
sarb
cmp
arpl
sub
and
les
mov
and
fs
gs
shlb
gs
xchg
pop
jp
jge
ss
cmp
pusha
shrb
mov
in
cmp
mov
scas
xor
loopne
and
repnz
iret
mov
push
mov
push
dec
cmp
mov
cltd
fwait
mov
cmp
das
jae
xor
mov
dec
pop
jnp
andb
xchg
cld
ja
inc
gs
pop
hlt
movsl
cmp
mov
jge
push
xchg
add
mov
add
inc
mov
addb
xor
or
xlat
sub
imul
pusha
inc
mov
sbb
inc
clc
push
popa
push
gs
pusha
and
js
popf
lock
mov
xor
jecxz
test
pusha
rorb
adc
add
mov
and
loopne
push
shlb
out
sub
add
stos
inc
shl
popf
nop
in
jnp
pop
mov
lock
std
pop
sub
mov
or
jae
xchg
inc
insb
jmp
mov
bound
pop
dec
bound
fcomps
pop
sbb
or
mov
ret
cmp
bound
xchg
and
add
in
xchg
push
loopne
xchg
cmp
push
rorb
fmul
lock
and
sub
mov
adc
adc
jmp
xor
mov
bound
lret
stos
sub
add
dec
test
mov
add
pop
mov
push
xor
aaa
and
push
pop
rcrb
in
sbb
ds
push
nop
inc
mov
pop
aas
cmp
dec
insb
mov
inc
rclb
scas
pusha
inc
pop
adc
lret
mov
fmuls
sti
xchg
scas
add
scas
add
and
cld
push
push
jle
mov
idiv
aaa
mov
mov
cmc
addl
shl
mov
addb
inc
mov
andb
cmp
pop
out
bsf
xchg
fnstenv
inc
mov
mov
pop
int
fstl
xor
mov
jle
add
inc
xor
sahf
sbb
popf
dec
xor
sbb
ljmp
add
addb
cmp
cmp
xor
pusha
inc
bound
xchg
sub
xor
inc
inc
cmc
jle
push
dec
outsl
pusha
in
lds
enter
mov
pusha
add
shlb
rolb
mov
pop
xor
rolb
pop
lea
cmp
mov
addr16
add
aam
stos
mov
sbb
andb
mov
jne
sbb
cmp
stos
incl
sarb
std
insb
or
and
mov
cltd
lods
add
std
mov
popa
or
mov
mov
mov
add
jl
cmpsb
loopne
mov
inc
push
rol
mov
cld
inc
popf
in
pop
loope
sub
hlt
jg
cmpl
frstor
loopne
sbb
and
and
psllw
mov
roll
inc
loopne
pop
xor
outsb
out
inc
jmp
mov
add
add
add
adc
aas
cwtl
hlt
inc
clc
jle
push
dec
adc
shlb
repnz
push
jge
mov
push
hlt
and
pusha
movb
jno
cmp
call
mov
dec
call
add
shr
jge
jmp
mov
and
lcall
or
movsb
rolb
xor
cmp
cld
shr
mov
and
rolb
and
pop
add
mov
gs
cmp
ret
into
clc
ja
pusha
pusha
scas
mov
sub
pop
or
mov
pusha
inc
outsb
addb
mov
loopne
mov
pusha
jne
pusha
or
movsl
sti
adc
cmp
fcmove
cltd
cmp
or
mov
lcall
aaa
cmc
popa
movsl
or
fstpt
scas
pusha
inc
test
in
mov
std
sbb
test
and
dec
icebp
push
data16
int3
lods
mov
jo
addb
xlat
sahf
mov
int
add
mov
sbb
js
inc
ror
sub
and
and
sahf
pop
into
lds
movsb
and
je
add
cli
dec
push
add
pop
ja
leave
jns
adc
test
mov
loopne
lret
jecxz
bound
jp
lea
mov
add
or
adcb
rorl
xchg
inc
push
ljmp
lea
fs
pop
cmp
or
mov
adc
andb
fmul
repz
scas
jecxz
xor
mov
mov
add
dec
jnp
xlat
mov
call
adc
and
jl
bound
inc
sub
inc
ret
mov
rolb
inc
and
pop
and
add
popf
pop
ja
in
push
adc
mov
cmp
jne
iret
push
adc
adcb
mov
test
add
mov
cmpsl
jnp
jnp
lahf
lods
fidivrs
add
or
inc
in
int3
xor
mov
scas
add
inc
cmp
jg
xor
xor
shlb
inc
fdivr
aas
movsb
loopne
push
cmp
cltd
pop
mov
xor
xor
hlt
mov
mov
loop
mov
lock
push
andb
push
sub
adc
dec
dec
shrl
pusha
shlb
clc
dec
dec
mov
repz
popa
pop
iret
ss
xor
add
ds
test
shlb
and
fidivrs
and
xchg
and
cmp
fimuls
cmp
push
jle
mov
push
xchg
add
pusha
add
xorl
add
push
cltd
int3
andb
icebp
cmp
dec
fistps
pop
lcall
fdivrl
dec
icebp
push
inc
add
inc
mov
xor
pop
ljmp
stc
sub
mov
and
inc
pusha
or
inc
lods
pusha
inc
cmp
stc
bound
andb
movsb
pusha
add
dec
mov
pop
lcall
pushf
cmp
mov
jae
fwait
lds
and
mov
ja
stos
loopne
addr16
aaa
pop
mov
sub
cwtl
outsb
fstl
lock
lea
jge
lcall
cmp
push
loopne
xor
pop
and
shrb
imul
pusha
and
add
fstps
mov
pusha
loopne
aam
popf
jnp
and
add
mov
loopne
mov
fists
cwtl
sub
and
ret
cltd
mov
inc
js
andb
ret
xchg
dec
mov
lea
jmp
and
sti
adc
loopne
outsl
outsb
inc
push
jmp
mov
mov
int3
mov
mov
add
pusha
and
mov
mov
gs
sarb
pusha
pop
sbb
inc
or
jg
lock
inc
subb
lock
out
stc
aas
stos
and
jnp
or
stos
and
rol
inc
push
ficomps
jno
movhps
add
cmpsl
test
mov
shrb
outsl
sbb
pop
pinsrw
cmp
negl
pop
inc
cs
popf
mov
and
imul
mov
and
loop
movsl
xor
add
and
pop
push
shlb
mov
mov
andb
mov
insl
inc
pop
adc
pop
cmp
and
push
xor
loope
cli
je
pop
xchg
dec
stc
xchg
out
inc
pusha
aaa
test
and
xor
sub
add
scas
and
aad
shlb
ret
pusha
insl
dec
push
sbb
popf
add
rcll
mov
clc
cmpsl
test
add
inc
aad
inc
loopne
xor
popf
das
sahf
mov
movsb
loopne
ljmp
xor
mov
xlat
and
inc
fs
pop
loopne
fcmove
xchg
push
sbb
sub
addb
adc
loopne
add
and
pushf
andb
imul
data16
rcll
jle
call
decb
mov
mov
and
icebp
cmp
or
jbe
dec
test
jmp
sbb
je
mov
inc
shl
mov
add
mov
outsb
sti
cmp
adc
add
push
jo
push
hlt
mov
mov
cmp
jno
and
inc
inc
imul
aaa
and
add
pop
jg
jecxz
adc
jb
inc
loopne
pop
pop
aam
nop
add
inc
dec
dec
ret
jl
and
sbb
iret
xor
shlb
lods
pusha
and
mov
xor
aaa
dec
pop
sbb
mov
and
test
pusha
enter
add
cmp
add
sub
loopne
mov
xchg
cltd
adc
jge
ljmp
add
sbb
mov
mov
xchg
fcompl
mov
loopne
repnz
xor
je
inc
inc
clc
icebp
fsub
dec
inc
les
push
pusha
inc
dec
dec
lret
test
push
aaa
xchg
mov
aad
jns
pop
cmpsb
and
inc
cmp
shr
mov
in
ss
push
lods
add
out
push
cmp
push
pusha
and
adc
xchg
jo
mov
cmp
stos
fwait
and
ret
mov
xchg
add
add
xor
mov
aad
inc
sub
lret
pop
mov
pusha
loopne
pusha
mov
sub
outsb
dec
stos
inc
mov
ret
mov
aaa
repz
movsl
cmp
add
push
ds
adcb
cmp
add
dec
fsubrs
sub
loopne
and
inc
cmpsb
addb
lahf
dec
bound
mov
or
es
loopne
add
nop
mov
loop
mov
test
add
dec
arpl
scas
xor
rcrl
sub
jno
sti
jmp
into
aas
fnstsw
movsl
insl
push
idiv
sbb
xor
mov
ss
xchg
lahf
push
rolb
pusha
cmpb
mov
pop
cmp
jne
sub
inc
cli
or
inc
out
pop
mov
add
push
jg
into
jb
mov
push
xor
adc
enter
pushf
or
mov
sbbb
shl
andb
rolb
adc
add
lods
mov
movsl
popa
add
fidivl
dec
addr16
enter
fsubl
mov
out
inc
cmp
mov
cmp
outsb
outsl
pop
xor
push
divl
imul
and
popa
arpl
dec
push
jae
je
and
movsb
pusha
and
push
stc
fstpt
mov
imul
and
cmp
add
dec
inc
mov
sbb
jge
out
add
fs
in
lret
push
inc
pusha
aad
mov
pop
std
iret
sub
mov
inc
add
cmc
gs
ret
cmp
add
dec
pop
mov
xchg
jp
pusha
inc
push
mov
imul
xchg
cmp
mov
mov
pop
shlb
xor
out
pop
xchg
shrl
fsubl
adcb
pusha
or
xchg
adc
dec
inc
sbb
aad
xor
loopne
aaa
sub
xor
fimull
cmp
rcll
pop
xchg
test
inc
push
and
pop
hlt
mov
jno
ret
addl
or
xorb
fbld
nop
mov
jmp
xchg
jle
testb
jg
sarl
test
or
and
fxch
jo
sahf
idiv
dec
inc
xchg
sbb
pusha
pusha
cmp
mov
add
gs
sub
dec
in
shlb
popa
jmp
pushf
jp
cmp
icebp
call
insb
mov
mov
xorb
add
inc
cmp
pusha
mov
mov
dec
sub
jns
and
inc
push
adc
lret
add
divb
add
mov
loopne
addr16
cwtl
repz
dec
std
sti
repz
xlat
cmp
insb
fidivrs
and
and
push
mov
xor
cld
cwtl
jbe
dec
jae
sbb
jge
pusha
inc
imul
outsb
mov
sub
push
inc
inc
jbe
test
sbb
mov
pushw
and
fwait
call
cmp
shrl
shlb
test
inc
rorb
mov
fwait
aam
jle
les
mov
cli
inc
push
imul
xchg
and
hlt
loopne
push
lea
pusha
repnz
ret
fdivl
xchg
popf
subl
pusha
xchg
nop
div
aam
dec
lods
inc
shr
jmp
sbb
popf
xor
cmpsl
imul
push
pop
cli
push
jns
mov
enter
inc
lret
pop
mov
inc
addb
mov
test
loopne
aad
push
pop
iret
fimull
loopne
xor
mov
or
inc
mov
cld
mov
xchg
dec
add
add
fstpt
out
jmp
mov
pusha
inc
cmpsl
dec
cmp
push
add
mov
rclb
ds
adc
mov
dec
xchg
mov
xor
mov
xchg
xor
les
int3
ret
popa
nop
add
sub
rcrb
push
sub
lcall
cli
jne
rol
movsb
add
mov
jno
repnz
cli
adc
mov
mov
and
mov
loopne
jecxz
aad
shlb
pop
mov
into
sti
mov
jo
inc
inc
in
js
jge
cli
mov
and
push
adc
or
and
cvtps2pi
pusha
loopne
pop
or
shrb
icebp
jne
jmp
sbb
andb
andb
aaa
nop
mov
add
mov
mov
in
mov
mov
pusha
add
loopne
cmc
cltd
mov
sub
pusha
repnz
inc
xchg
add
std
xlat
cmpsl
or
aad
icebp
mov
leave
ss
dec
dec
stos
sbb
mov
push
addb
and
mov
xchg
adc
xor
xorb
push
xchg
add
jne
es
lea
and
das
dec
xor
fwait
clc
insb
pop
repnz
loopne
mov
addr16
jo
lods
shlb
out
adc
mov
jecxz
repz
and
fsubl
rolb
lcall
aad
sbb
data16
and
cltd
add
inc
xchg
jae
xchg
and
cmp
sarb
shlb
mov
push
inc
and
and
and
jo
mov
or
add
sbb
xchg
in
fidivs
aad
fs
or
pop
and
mov
mov
shlb
or
test
aas
push
add
arpl
andb
test
add
sarb
lock
adc
and
push
jg
sbb
pushf
pop
stc
insb
xor
push
je
ljmp
add
dec
flds
push
outsb
mov
iret
and
testb
outsb
daa
push
mov
mov
in
sub
inc
loopne
or
lods
add
stos
fnstenv
rorl
push
in
pop
push
inc
loopne
xchg
dec
or
cmp
aam
andb
stc
lods
pusha
and
inc
loopne
mov
aaa
or
push
mov
mov
adc
mov
data16
mov
pop
sets
loopne
mov
loopne
ud2
jo
sbb
mov
aaa
int3
ds
pop
sahf
popf
push
aad
fildl
adcl
adc
jge
ffreep
mov
loope
xor
xor
and
andb
sub
lcall
mov
add
mov
cmpsb
and
xor
sbb
inc
push
push
xchg
jle
jbe
rolb
mov
cltd
in
pop
mov
jle
xor
jne
push
cmpsb
add
xchg
push
or
dec
dec
add
shl
rol
pop
xchg
and
push
or
lods
rolb
out
mov
in
sub
adc
int
mov
addb
mov
rclb
ror
push
loopne
push
jp
cmp
loopne
cmp
int3
cmp
cmc
cld
loop
xor
pop
adc
jae
mov
mov
mov
loopne
jg
add
xor
dec
push
js
rorl
outsb
or
inc
dec
mov
out
lahf
jl
cmp
fldl
jb
cmp
shlb
test
mov
dec
or
and
xchg
push
lock
std
adcl
andb
dec
push
cmc
test
shlb
add
and
orl
les
pop
mov
push
lock
loopne
cmp
inc
rolb
pop
push
shrb
insl
out
mov
pusha
jmp
push
adc
sub
fstps
pushf
push
loop
pop
enter
cmc
fidivrl
and
or
mov
jns
push
push
mov
aam
mov
jmp
add
pop
dec
cmp
mov
mov
inc
push
inc
mov
shl
or
mov
cmp
mov
xor
int3
cmpsb
add
cmp
add
shrl
rolb
fbld
inc
leave
dec
jbe
iret
stos
dec
jecxz
fidivl
addr16
imul
shlb
loopne
xor
inc
negb
and
inc
jbe
push
jbe
fldcw
mov
rcrb
stos
pusha
add
aaa
aas
icebp
pop
mov
rolb
repnz
hlt
push
and
in
and
in
ret
and
out
fwait
push
mov
pop
in
addb
lods
pop
inc
push
mov
cmp
addb
andb
cli
xor
pusha
pop
sub
cmpb
mov
mov
or
add
les
xchg
sbb
pop
mov
xor
adc
cld
sub
add
sbb
fidivl
xor
xor
sub
jp
and
insl
movsl
mov
mov
stc
push
mov
daa
lret
mov
sbb
loopne
setns
dec
pop
cli
jge
mov
cmp
and
inc
xor
jl
dec
int
pusha
popf
mov
jmp
inc
lods
mov
and
jno
xchg
sub
sub
loopne
dec
and
lock
inc
fnstsw
jge
dec
push
addb
dec
jae
das
mov
adc
pusha
add
mov
xor
enter
sub
and
rsqrtps
pusha
add
and
mov
in
dec
sbb
and
and
adc
mov
jl
mov
dec
ds
mov
addb
pusha
mov
and
pusha
test
pusha
lahf
adc
aad
aaa
sbb
ds
sbb
popf
push
cmpsb
pusha
and
mov
sub
or
push
add
addb
and
mov
or
pusha
mov
mov
shll
test
pop
dec
es
andb
add
push
in
adc
xchg
ffreep
mov
aam
mull
mov
inc
mov
cwtl
jmp
pusha
inc
out
test
mov
in
int
inc
xor
test
inc
nop
mov
xorps
dec
sbb
fwait
adc
fildl
pop
xchg
push
arpl
inc
cmpsb
addb
rolb
shlb
xchg
adc
in
cmp
push
jnp
loopne
cmpsb
inc
mov
jmp
lds
jge
add
mov
add
iret
sarb
fsubrs
pop
sbb
inc
xor
add
xlat
pushf
jl
pop
and
jl
jmp
sub
test
mov
ret
fs
sub
test
mov
stos
outsb
pop
jl
sbb
loopne
jno
scas
jo
mov
int
push
rol
mov
inc
fnstcw
rolb
or
add
andb
fnstenv
addb
mov
mov
insb
adc
andb
pusha
orb
xchg
xchg
inc
popa
shll
pop
test
in
jne
cwtl
into
push
movsb
and
imul
xchg
push
out
dec
test
inc
xchg
push
add
daa
test
sbbb
add
push
loopne
imul
cli
out
or
rcl
dec
pop
mov
mov
in
adc
scas
shlb
and
xor
pusha
cmp
shlb
sub
and
inc
cmpsl
pop
adc
add
mov
adc
adc
dec
lods
shlb
mov
pusha
arpl
xchg
in
add
and
loop
pop
dec
loope
dec
out
adc
addb
sbb
fmul
jns
push
rcrl
lea
inc
arpl
xorl
cltd
dec
in
mov
dec
mov
loopne
pop
sbb
cmp
cmp
add
xchg
sarl
shll
dec
int3
adc
loope
sub
mov
inc
mov
or
rcrl
int
sbb
imul
push
adc
or
pop
push
inc
push
sub
leave
shrl
mov
cltd
push
aam
or
add
movsl
insl
ret
pop
push
pop
push
push
fisubrl
push
ljmp
aam
xor
add
jbe
mov
jb
ja
mov
add
mov
jle
and
and
loopne
flds
addr16
xchg
mov
mov
rolb
add
addl
mov
stc
xor
lret
pop
jecxz
hlt
orl
enter
sub
push
clc
mov
mov
mov
fwait
push
shll
loopne
jmp
loopne
call
xor
adc
enter
push
add
nop
cwtl
cld
sbb
xchg
and
enter
out
movsb
loopne
arpl
lea
ror
and
inc
ja
xchg
stos
mov
loope
out
rorb
inc
test
ret
xchg
sub
mov
or
ss
mov
add
push
add
or
loopne
dec
pop
mov
adcb
xor
nop
or
add
loopne
inc
and
fwait
mov
mov
es
add
idivb
andb
addb
mov
xchg
add
and
and
lds
jne
shlb
pusha
fucomp
test
loopne
push
sti
push
loop
cmpsl
jecxz
cmp
out
cmp
push
push
dec
mov
aam
pop
xchg
sbb
mov
inc
xor
mov
adc
inc
test
adc
cmp
jg
inc
inc
daa
out
inc
inc
pushf
lods
cmp
push
fstps
sbb
inc
sbbb
cmp
dec
add
jle
mov
pop
dec
std
sbb
repnz
mov
xor
addb
and
push
std
dec
ret
push
mov
lahf
lock
push
pusha
inc
jae
cli
mov
lret
push
jge
sub
and
add
loopne
iret
and
mov
clc
sub
mov
mov
add
ror
jns
pusha
loopne
xchg
cmpsb
loopne
int3
fldl
lret
andb
in
xchg
and
aam
pusha
add
and
xchg
add
inc
push
and
andb
imull
xchg
inc
mov
pusha
sub
outsl
pop
clc
fimull
repnz
mov
je
jl
mov
daa
mov
pop
mov
psraw
jbe
pusha
mov
lods
xor
jae
xor
cwtl
jmp
pop
in
gs
in
lret
xlat
dec
hlt
cmpsb
add
dec
cmc
stos
xchg
ret
add
iret
dec
shlb
bound
ljmp
xor
fisubs
iret
roll
ret
pop
add
mov
inc
cld
pop
in
or
inc
mov
test
loopne
loopne
inc
cli
mov
sbb
add
add
in
test
andb
mov
add
and
call
iret
lock
inc
pusha
mov
and
xchg
stos
and
and
sub
loopne
cld
fadd
daa
cmc
sub
pop
add
inc
add
movsb
andb
sbb
out
add
pusha
adc
inc
jecxz
aas
jge
cmc
mov
add
mov
and
loope
std
add
inc
loope
je
aam
mov
push
filds
dec
les
loop
aaa
fsubrp
clc
imul
sarb
xchg
jne
sbb
inc
in
insb
out
pop
pusha
sbb
mov
ljmp
mov
adc
adc
lock
in
jecxz
andb
loopne
fadd
lock
imul
lcall
notl
sti
sbb
sbb
loop
ljmp
cmp
adc
loopne
out
push
add
loopne
inc
or
andb
stos
jb
and
xchg
cld
xchg
or
and
bts
or
pop
mov
out
adc
sbb
fnstsw
adc
pusha
add
pop
outsl
out
and
rclb
jmp
or
orb
sbb
popa
sub
test
push
inc
fcomp
xlat
sbb
xor
push
cmp
dec
xchg
jecxz
sub
les
fs
sahf
adc
jns
mov
pop
cmp
add
pusha
mov
sub
lcall
out
loopne
iret
bts
jb
add
shrb
cmpsb
loopne
and
and
ja
aam
test
shl
daa
cmc
pop
dec
pop
jp
and
and
add
and
movsb
and
inc
test
out
addb
fcmovb
sbb
lret
loope
jae
loop
nop
rcll
mov
adc
cwtl
xor
and
andb
or
sub
imulb
inc
inc
add
sbb
repnz
add
lcall
pop
mov
das
out
inc
mov
add
jae
mov
test
fwait
adc
add
cmp
lret
xor
movsb
mov
xor
jb
adc
inc
stos
fdivs
in
roll
outsl
imul
daa
mov
ljmp
popa
lret
mov
add
pusha
sarb
and
mov
and
inc
lds
xchg
cmpsb
inc
and
cli
mov
ret
xor
lcall
and
jl
mov
mov
pop
mov
inc
dec
and
xor
cli
scas
and
mov
stos
mov
and
mov
push
imull
and
and
je
rcrl
iret
jno
mov
and
mov
push
popa
mov
and
js
shrb
xlat
push
pusha
inc
repz
lcall
mov
enter
cli
pop
push
mov
and
orb
inc
hlt
jbe
pusha
add
jle
mov
mov
mov
xor
xchg
and
and
pop
out
es
add
mov
sub
jecxz
ffree
mov
andb
and
lods
aaa
loopne
in
test
cwtl
and
and
pop
mov
inc
int3
pop
iret
jecxz
mov
push
lock
shrb
cmp
dec
cmp
repnz
imul
push
fildll
orb
mov
add
and
jecxz
inc
out
loopne
push
push
mov
shlb
fldl
mov
insb
insl
fstpl
shl
cltd
sahf
insl
xor
adc
or
mov
mov
lock
push
loopne
cltd
ficoml
xor
jmp
push
xchg
iret
cmp
mov
lods
andb
pusha
icebp
iret
pop
insb
mov
stos
orl
pop
ficoms
movsl
mov
adc
shlb
test
inc
cld
mov
shl
dec
dec
fists
mov
movsl
jae
inc
inc
xchg
push
out
mov
add
mov
mov
add
and
jns
sahf
cmc
mov
and
mov
fiadds
insb
das
add
rolb
out
rolb
mov
lods
daa
pushf
push
loopne
into
sub
loopne
pop
mov
insb
push
or
and
sbb
or
nop
adc
loopne
jo
lretw
jg
jnp
and
and
mov
lock
and
loopne
stc
rol
push
jle
push
scas
cmc
pop
or
stos
xchg
orb
jae
dec
jbe
mov
inc
cmc
adc
pop
frstor
incl
subb
sub
add
jecxz
aam
xchg
xchg
repnz
dec
xchg
cli
loop
adc
jne
mov
fsubs
dec
js
mov
jge
into
cmpsb
shlb
sbb
loopne
popf
popf
pushf
out
and
lcall
movsl
cltd
sub
pusha
cmp
xchg
cmp
popa
rcrl
and
add
rolb
add
sbb
popf
xor
inc
sub
and
cmpsb
add
loopne
das
mov
negl
int
and
mov
sub
add
clc
cmp
sbb
or
loopne
cld
mov
arpl
jmp
xor
cmp
add
xchg
add
pusha
pop
inc
dec
sbb
and
jecxz
xchg
pop
enter
xor
cmp
sub
pusha
sbbb
pop
xor
pusha
ret
pop
fsubrl
mov
xchg
mov
mov
shll
jl
outsb
rcr
sbb
cmpsb
shlb
mov
inc
loopne
in
fwait
test
loopne
insl
cmp
push
cmp
and
xorb
sbb
xchg
repz
sbb
xor
mov
subb
dec
mov
and
mov
sub
cli
pop
cld
jb
popl
xor
add
jmp
loopne
out
addb
shl
sbb
dec
mov
mov
outsb
stos
mov
and
and
cmp
clc
mov
jp
dec
jno
test
pusha
and
insl
push
shl
add
push
subl
outsb
test
ds
inc
shrb
hlt
hlt
push
stos
mov
insb
xor
add
inc
ljmp
leave
mov
jle
pop
jg
fnstcw
inc
pop
and
fmuls
loopne
ja
xlat
mov
mov
jb
add
pop
in
in
ljmp
sub
and
pop
pop
mov
xchg
mov
movsb
inc
inc
mov
and
jecxz
mov
enter
inc
pop
and
and
fildll
dec
mov
xor
mov
pusha
adc
inc
sti
mov
xor
movsb
rolb
and
out
addb
bound
loopne
ds
pushf
xchg
mov
rorb
add
testb
push
cwtl
pop
pop
mov
pusha
fbstp
insl
leave
xchg
mov
scas
and
mov
shl
mov
sub
test
mov
mov
rcrb
loopne
ljmp
add
andb
or
push
pushf
movups
push
or
push
xchg
loope
push
dec
pushf
lock
add
pusha
rorb
sbb
pusha
loopne
test
lock
cmp
sahf
call
jb
addb
cmp
out
mov
test
pusha
shrb
and
loopne
test
jb
adc
sbb
ja
add
sbb
xor
inc
mov
pop
popa
dec
xlat
scas
inc
push
shl
fs
lret
sbb
inc
mov
les
push
rol
mov
and
jns
movsl
sbb
inc
add
rorb
rorb
dec
sub
or
insl
jbe
mov
and
sub
loopne
mov
loopne
cwtl
lock
movsl
jmp
rorl
mov
mov
lea
and
in
add
inc
popf
and
pusha
add
repz
mov
icebp
lds
ss
lcall
pop
mov
leave
pusha
pop
inc
insb
mov
andb
dec
sbb
push
mov
inc
xor
sub
xchg
repz
cmpsb
addb
inc
inc
xchg
lods
mov
and
rorb
xor
push
fdiv
sti
push
xor
fnstcw
sti
sub
adc
adc
push
sahf
adc
lcall
loope
add
pop
sub
cmp
mov
dec
pop
dec
loopne,pn
pusha
push
xor
xor
ljmp
fcompl
push
ss
outsb
xor
push
and
sub
notb
cmp
vmread
movsb
pusha
inc
call
or
add
inc
ss
sub
int
out
adc
jge
adc
addb
scas
inc
mov
xchg
mov
mov
add
xor
addb
lahf
jg
or
pop
cmpxchg
and
sub
mov
push
clc
imul
cmp
test
loopne
add
inc
cmp
jne
cmp
ret
inc
mov
fildll
inc
mov
mov
sub
pop
push
sti
sbb
arpl
rcr
sbb
add
fimuls
call
int3
sub
cmpsb
and
shlb
frstor
rolb
xchg
inc
loop
inc
sbb
testb
inc
divb
and
pusha
xchg
sbb
sbb
cmp
stos
and
iret
sub
push
jl,pt
and
fs
pusha
jne
repz
mov
loopne
aaa
and
mov
dec
sahf
fildll
jl
loope
leave
dec
adc
sbb
inc
mov
add
bound
xor
add
xchg
mov
test
int3
cmpsl
mov
loopne
shrl
mov
fxch
cld
push
out
push
push
dec
outsb
mov
dec
rclb
mov
cld
cld
mov
xor
movsl
pop
or
les
fadds
loopne
add
sub
jnp
ret
stc
jle
mov
pusha
loopne
mov
addb
shlb
mov
fstpt
lahf
push
pushf
or
adcb
mov
cmp
out
xor
adc
xchg
ret
and
fdivp
xchg
addr16
pop
sti
sbb
inc
mov
in
sub
add
fcoml
iret
dec
jmp
jbe
push
in
cmpl
imul
clc
or
pop
pop
sahf
jp
pushf
mov
ds
mov
iret
sbb
pusha
stos
rol
enter
pop
jns
inc
inc
lods
ljmp
push
daa
lds
lock
dec
jge
popa
add
inc
loope
cmc
inc
stos
jns
ja
mov
xor
and
mov
addb
arpl
and
or
pop
pop
sbb
adc
gs
addb
cli
lret
inc
ljmp
scas
xor
add
lds
sub
add
and
and
jne
std
call
lcall
loopne
les
mov
push
jecxz
pop
dec
pop
inc
push
xor
pop
push
test
inc
jb
jnp
push
aad
inc
jmp
xor
inc
daa
les
sbb
mov
sbb
or
loopne
cmp
add
pusha
addb
shl
fwait
pop
jnp
clc
sbb
and
sarb
add
and
pusha
fcmove
mov
outsb
ficomps
xchg
cs
mov
xchg
ljmp
mov
or
pop
push
mov
orl
lcall
mov
shl
mov
adc
addr16
inc
popf
cmp
push
inc
and
ds
call
fwait
pusha
adcb
cltd
rol
loopne
jne
std
ljmp
xchg
lcall
addb
jns
sti
xor
add
xchg
mov
pop
or
cmp
cmc
outsb
imul
out
andb
andb
in
pop
pxor
and
and
addb
movsb
pusha
and
and
sbb
mov
and
fmuls
lods
push
and
mov
jmp
sahf
cltd
sbb
xlat
jo
push
pop
hlt
xor
xchg
cld
jge
insb
push
test
inc
xor
add
dec
movsl
mov
in
jnp
jb
inc
repz
and
fadds
mov
mov
loopne
fists
xchg
inc
dec
in
das
sbb
in
add
pusha
mov
dec
pop
adc
adc
movsl
mov
ja
xor
xchg
inc
xor
add
mov
lds
in
cld
in
xor
fcomip
mov
mov
mov
rorl
insb
adc
stos
xchg
les
icebp
pop
lods
addb
subl
xor
xchg
adc
inc
repz
sub
loopne
xchg
inc
add
xchg
stos
or
stc
rcll
inc
or
mov
cwtl
mov
and
jno
cld
push
mov
loopne
mov
adc
inc
sar
dec
adc
mov
dec
pop
test
shrb
sbb
and
and
mov
mov
mov
test
lcall
mov
sbbl
adc
pusha
pusha
mov
test
shrb
jo
cmovo
popl
cmp
fistpll
push
cmpsb
mov
dec
inc
push
addl
mov
cmp
mov
addl
push
into
leave
adcl
mov
jecxz
rcll
hlt
popa
imul
cwtl
dec
xlat
and
adcb
and
sbb
rolb
sbb
aam
jb
adc
xchg
stos
loopne
hlt
jo
ds
movsl
mov
xor
pop
loope
dec
xchg
test
inc
sub
loopne
aaa
test
imul
popa
jmp
jns
jle
dec
xor
pop
add
mov
cmp
xchg
psadbw
rolb
mov
jp
sbb
pop
fst
push
push
pop
icebp
cmp
xchg
addb
jge
pop
mov
sub
adc
mov
add
jle
dec
pop
or
and
inc
rolb
pusha
mov
or
clc
fidivrl
xchg
test
mov
scas
pusha
pusha
xor
sub
and
adc
and
out
sub
add
sbbb
aaa
loopne
dec
inc
mov
add
pusha
mov
pop
int3
push
or
mov
mov
push
adc
inc
loopne
je
add
and
cmp
dec
lahf
push
push
push
int
xchg
lret
push
fwait
outsb
push
sbb
ja
imul
fistl
add
cmp
mov
push
add
je
and
lahf
push
sbb
fisubl
mov
and
add
scas
mov
cmp
add
push
adc
jl
inc
add
into
aaa
sti
lods
pop
inc
les
popa
cmc
icebp
rorb
inc
pusha
jge
inc
ret
out
les
push
mov
repz
enter
or
add
fucom
lret
xchg
outsl
mov
pusha
test
fisttpll
test
fmull
and
mov
scas
pusha
mov
cltd
cltd
stc
mov
pop
fisttpl
push
xchg
lahf
loope
push
sti
add
add
movsl
in
out
loopne
sub
jp
aas
mov
popf
int3
fsubrs
and
push
lahf
mov
xor
jnp
xchg
adc
aam
aas
fisubrs
mov
xor
adc
xor
add
cmpsl
loope
pop
push
jnp
js
ret
shrd
mov
fiaddl
shlb
add
sbb
pusha
mov
lea
movsb
pusha
mov
shrl
inc
mov
jo
js
xchg
xlat
adc
mov
push
mov
sub
pusha
out
inc
mov
mov
pop
dec
inc
push
mov
imul
and
and
loopne
pop
mov
pop
mov
ret
imul
jb
fwait
int3
addr16
nop
addb
int
mov
jl
add
das
push
cmc
push
push
xchg
mov
pop
jno
roll
loopne
xchg
inc
adc
adc
sub
or
inc
mov
dec
pushf
mov
push
hlt
jl
arpl
mov
add
jecxz
data16
addr16
sub
fisubs
scas
inc
mov
imulb
icebp
mov
into
jmp
adc
mov
sarb
lret
loopne
dec
js
push
iret
inc
cld
test
jmp
stos
shlb
fmull
add
mov
jns
stos
in
clc
pop
jp
add
mov
cmp
adc
mov
sub
sbb
and
add
mov
inc
mov
cmpsb
mov
push
add
aad
pop
push
fdivp
dec
xchg
mov
mov
jle,pt
clc
add
pusha
leave
jae
and
mov
and
and
adc
andb
push
inc
xor
add
int3
test
jbe
test
pop
rcrl
and
inc
std
je
pop
push
inc
jne
jno
loopne
mulb
shl
push
sbb
out
xchg
jns
aas
mov
and
scas
mov
push
and
pusha
push
dec
idivl
mov
pop
roll
ret
imul
int3
hlt
sbb
push
mov
and
cmpsb
rol
jnp
inc
inc
cmp
jnp
add
fwait
xchg
ss
push
jp
push
mov
or
push
int3
outsb
sbb
mov
mov
mov
stc
pop
add
add
sbb
and
ljmp
rclb
in
and
cld
rol
jmp
mov
outsb
inc
mov
inc
jnp
push
cmp
mov
iret
ret
pop
pop
jns
cmp
and
ja
test
and
loopne
ret
pop
out
inc
cmc
sbb
clc
cmp
stos
push
in
rcll
sub
inc
pop
ret
pop
push
push
jle
xchg
mov
hlt
dec
lret
in
popf
adcl
xchg
inc
add
xlat
adc
jne
xor
movsb
pusha
and
icebp
movsl
dec
dec
push
jle
fcmovne
sbb
mov
jbe
aam
sbb
pop
bound
add
sbb
pop
push
pusha
loopne
lcall
and
mov
pop
daa
imul
jmp
mov
aas
pop
dec
andps
xchg
mov
inc
xchg
call
mov
push
mov
addb
lds
mov
inc
add
xor
outsl
jb
rolb
dec
sbb
add
and
mov
cli
aas
lcall
fiaddl
xchg
pop
sbb
loop
movsl
push
sti
aam
and
inc
mov
pusha
insb
shrb
or
lods
dec
loopne
arpl
loopne
jo
sahf
push
pop
incb
sbb
jmp
sbb
dec
loop
ret
inc
cwtl
insb
sub
mov
xchg
push
push
andb
jns
int3
mov
loopne
in
mov
ljmp
inc
inc
push
xchg
shlb
outsl
mov
fmull
fs
repnz
loopne
loopne
vorps
and
aaa
xor
pusha
and
inc
inc
jnp
mov
mov
call
adc
and
inc
and
js
pusha
and
mov
add
mov
movsl
adc
stos
add
lret
mov
int3
add
and
pusha
xor
lock
bnd
pusha
mov
push
inc
add
lret
ja
mov
jo
ret
mov
add
inc
ljmp
mov
repz
and
inc
fs
decb
or
inc
sbb
xorl
popa
sub
add
xorb
rolb
gs
xchg
sub
adcb
jnp
sbb
leave
scas
add
cmp
cltd
mov
imul
cmp
outsl
cmp
bound
push
mov
in
nop
dec
inc
jb
xor
dec
and
add
push
mov
or
and
iret
andl
mov
pusha
popa
mov
mov
js
stc
sbb
mov
shl
fdivrp
repnz
arpl
pop
push
mov
scas
mov
addb
jns
add
and
push
mov
popa
or
mov
test
mov
inc
fwait
jae
adc
inc
rcrb
aam
sub
mov
inc
mulb
and
cmpsb
pusha
loopne
mov
mov
and
nop
jmp
fsubrs
and
outsl
inc
add
jp
dec
sbb
inc
push
movsl
adc
xor
movsb
rol
mov
fwait
and
cmp
outsb
mov
add
xorl
inc
sbb
cbtw
arpl
mov
arpl
cmp
cs
xchg
mov
jmp
addr16
fmul
insl
ljmp
ficoms
test
add
dec
cltd
loopne
scas
dec
mov
adc
rorl
mov
addb
and
xor
js
jno
scas
addb
jnp
add
nop
cmp
bound
push
flds
sbb
or
jno
xchg
int
mov
pop
out
addb
pop
stc
mov
jne
in
loopne
or
xor
int3
faddp
test
je
dec
in
mov
add
dec
sbb
in
mov
ja
sbb
pusha
lahf
lcall
mov
mov
mov
mov
addb
rolb
pop
repnz
pusha
in
and
sbbb
xchg
sbb
fsubrp
jae
enter
xchg
into
shrl
inc
loope
test
adcb
cmp
std
lods
mov
mov
xchg
popa
ds
rclb
pusha
jnp
jo
aas
addr16
rorb
jecxz
in
inc
adc
jecxz
movsl
icebp
in
sub
shlb
mov
dec
fcompl
dec
inc
or
inc
inc
jge
pop
pop
add
daa
lahf
outsb
jnp
pop
loope
leave
sub
or
loop
cmpsl
in
mov
scas
pop
push
cmp
or
das
or
mov
adc
mov
push
xor
inc
pop
jb
and
mov
add
inc
ds
and
andb
stos
loopne
mov
loopne
xchg
mov
clc
jle
jecxz
fisubrl
dec
leave
ss
sub
rolb
sbb
pop
shlb
out
pop
or
and
loopne
jo
mov
repz
mov
shl
and
addb
test
sub
mov
jp
cmp
pop
rcll
cmp
xlat
mov
call
hlt
es
pop
xor
rolb
jb
xchg
or
inc
shld
inc
xor
mov
push
xor
dec
jb
rolb
jno
loop
mov
popa
in
int3
insl
data16
mov
movsl
push
xor
aaa
fsubrl
popa
rcrl
cwtl
lret
repz
mov
dec
je
shlb
mov
jae
daa
stos
bnd
dec
jp
loopne
icebp
in
pop
arpl
loopne
dec
lret
mov
jecxz
xchg
mov
repnz
rorb
mov
mov
inc
lea
and
pushf
daa
cmp
add
test
dec
ja
sarb
mov
call
mov
mov
cmp
fxch
pop
mov
test
fisubs
pop
fildl
push
shlb
lods
shlb
sbb
jp
inc
cmp
jecxz
sar
sub
pusha
pusha
negb
pop
adc
insl
cmc
sub
mov
dec
push
pop
dec
and
mov
and
data16
js
inc
iret
cmp
and
pusha
push
fmuls
mov
cmp
jno
adc
lock
in
fsubrl
ret
loop
adc
int3
sbb
movsl
vdivps
aad
xor
pusha
inc
ljmp
shlb
lods
shlb
mov
loope
or
shlb
mull
pusha
mov
fnstenv
dec
int3
xor
out
loopne
imul
in
test
xchg
push
jnp
mov
pusha
mov
sub
add
int3
mov
aas
daa
fs
xor
fnstcw
loop
pushf
push
mov
xchg
or
shlb
jo
adc
sub
mov
xlat
push
lods
sbb
sbb
add
and
jo
int3
insb
mov
out
addr16
xchg
pop
outsl
inc
push
mov
movsb
inc
mov
or
pusha
cmp
mov
xor
xchg
mov
jge
daa
pop
jmp
cmp
lock
loopne
xchg
sbb
loopne
js
loope
push
enter
add
in
mov
cwtl
lcall
xor
sub
dec
in
stos
lock
sarb
mov
int
ret
mov
hlt
pop
jbe
stos
mov
push
dec
in
sub
push
mov
add
dec
hlt
and
sub
add
adc
fstpl
mov
fldt
inc
and
mov
imul
cmp
jge
dec
jae
andb
jge
or
pusha
andb
mov
daa
insl
add
mov
and
jl
jae
test
xchg
push
mov
cmp
sbb
loopne
iret
loopne
mov
mov
adc
mov
loopne
inc
add
xor
shrb
or
stos
xor
push
mov
push
mov
mov
movsb
loopne
mov
aaa
mov
rolb
or
pusha
sbb
hlt
imul
mov
ja
ja
scas
jmp
add
js
xor
aad
pop
jns
cmp
and
push
and
jno
shrl
xor
andb
add
sub
cmp
inc
cwtl
dec
pop
in
mov
pop
stos
loopne
ret
and
rcrb
loopne
std
addr16
adc
stos
add
xchg
movsl
lret
rclb
push
cltd
cmpsb
add
xchg
jb
xchg
inc
loopne,pn
mov
ds
mov
inc
bound
stos
xor
es
push
pop
mov
mov
add
inc
addr16
push
mov
xlat
dec
cs
and
mov
mov
insl
movsb
loopne
adcl
pusha
adc
in
lahf
dec
aad
popl
mov
and
lcall
jne
jo
enter
jle
pushf
pushf
popl
jecxz
mov
xchg
loope
pop
cmp
xchg
and
rorb
loopne
jl
fs
ss
jb
xchg
inc
in
xchg
jg
loop
add
add
outsb
das
mov
dec
jns
addb
xorl
push
test
pop
pushf
mov
popa
sarl
push
fnstenv
and
aas
test
add
inc
adc
inc
lret
movsl
cmp
push
test
sub
inc
cltd
les
push
rolb
cmp
into
pop
je
pusha
loopne
push
mov
inc
xacquire
dec
int3
mov
fistpl
icebp
dec
push
mov
adc
push
ss
dec
aad
add
fstl
hlt
jle
psrlw
test
mov
fs
in
leave
mov
out
stc
ds
and
in
notb
and
loopne
push
clc
addb
xchg
mov
sbbb
jne
rol
pop
rorb
rolb
and
mov
dec
jmp
adc
shl
outsb
sar
cmpsl
fidivrl
push
cwtl
leave
repz
andb
loopne,pn
sub
lds
jmp
add
jecxz
mov
lock
push
paddsw
add
insb
repnz
xchg
lds
jno
sbb
imulb
xchg
sub
loopne
andb
inc
and
mov
shlb
jne
mov
and
test
leave
mov
add
pop
hlt
add
lret
shll
frstor
in
jecxz
inc
int3
std
mov
sarb
cmp
jnp
mov
test
add
inc
dec
mov
inc
loop
mov
rcr
mov
idivl
or
les
movsl
lds
loope
mov
loope
testw
lods
push
pop
lods
add
dec
adc
xlat
in
xchg
popf
sub
sarb
mov
adc
and
adc
cli
std
fnstcw
imul
addb
xlat
pop
lds
jb
cmp
sbb
stos
rolb
icebp
test
inc
mov
in
xor
xor
and
dec
insl
dec
push
sbb
ror
pop
xor
stos
xchg
sub
addb
add
mov
xor
and
loopne
pusha
rolb
ja
mov
jb
cmpsl
mov
shlb
and
xchg
and
rolb
loopne
jl
sbb
cmpsl
insb
mov
rclb
hlt
negb
add
sub
insl
lret
rorl
aaa
mov
sahf
push
pop
lock
jp
test
add
test
andb
rol
sbb
and
xor
mov
leave
inc
lods
add
in
mov
fcomps
outsl
shl
jl
add
loopne
aaa
xor
mov
shl
xor
addb
dec
mov
dec
sub
mov
prefetch
add
rcrl
int3
mov
mov
out
out
flds
loopne
jo
dec
aam
push
xchg
fiaddl
insb
dec
lods
pop
pop
dec
jmp
xor
mov
cmp
fstpl
cmp
andb
dec
push
push
xchg
mov
xchg
aam
mov
test
and
shlb
pusha
rorb
cmp
add
popa
test
add
aas
addb
mov
shl
adc
hlt
andl
int3
aad
shl
cmp
pcmpgtb
repz
pusha
push
loopne
and
inc
fsqrt
mov
stc
lds
shll
mov
inc
fs
dec
repnz
loopne
add
inc
jg
sbb
inc
dec
add
jle
addr16
rolb
push
jg
xchg
hlt
xor
mul
rcrb
cli
xchg
stos
mov
pop
push
scas
push
fsubr
mov
test
lds
rorl
add
daa
pop
aaa
imul
aaa
nop
mov
loopne
sub
cmp
test
jl
loopne
test
pusha
inc
cmp
cmc
adc
sub
or
loopne
outsl
out
call
cmp
sub
fucomi
push
outsb
ret
cmpsl
jge
or
leave
add
mov
jge
ficoml
mov
inc
mov
mov
inc
mov
mov
xchg
push
add
inc
adc
and
xchg
lds
sbb
mov
mov
mov
out
aad
imul
dec
mov
mov
into
jns
sbb
add
pop
adc
shrb
mov
mov
loopne
ja
addr16
lret
or
mov
push
rclb
mov
pusha
arpl
cmpsb
rol
int3
and
rolb
hlt
inc
mov
add
adc
shlb
jmp
xchg
shrb
loopne
clc
dec
aam
nop
mov
aad
xchg
sbb
or
imul
mov
int3
and
pop
push
cmp
insb
push
addb
lret
push
or
pusha
imul
jecxz
sahf
mov
cli
sub
lods
cwtl
test
pusha
loopne
push
push
outsb
sub
sar
mov
pop
sub
into
xchg
dec
popa
jns
addb
xchg
cltd
nop
mov
addb
jecxz
mov
dec
movb
xchg
pop
mov
sti
push
inc
inc
nop
dec
inc
fsubrp
pop
neg
add
push
out
add
imul
jbe
mov
mov
sbb
or
shrb
and
pusha
addb
push
rcrl
mov
mov
jp
imul
loopne
addr16
in
shl
mov
jnp
mov
and
clc
and
movsl
sbb
add
sub
loopne
repnz
or
mov
shlb
repz
rorb
pusha
xchg
jge,pt
inc
add
loopne
cmp
jle
jl
fistl
iret
push
dec
outsl
fnsave
orl
fs
or
addb
and
mov
lock
mov
dec
lret
pop
xchg
add
fisubl
and
cmp
movsb
inc
andb
bound
andb
jg
inc
subb
hlt
adc
add
shlb
cmp
lea
stos
and
in
mov
jns
cli
xchg
int3
inc
stos
pop
lret
mov
adc
dec
ljmp
xchg
in
push
loopne
sahf
lcall
aas
sub
out
jg
test
or
test
mov
inc
in
mov
sti
arpl
push
loopne
fmull
leave
xor
sbb
and
rcrb
pusha
dec
jmp
adc
fs
inc
mulb
and
and
cmp
clc
jmp
add
rolb
mov
add
xor
cmc
repz
and
jmp
add
ret
movsl
sub
iret
sbb
xor
notb
rolb
cmp
or
shlb
add
pop
and
pusha
repnz
subb
arpl
and
in
je
xor
push
cmp
and
add
xor
inc
jmp
fbld
or
mov
mov
add
shlb
pop
dec
je
cmpsl
jo
and
enter
add
loopne
adc
ss
mov
xor
xchg
stos
inc
loopne
bound
scas
pusha
inc
imul
jbe
test
mov
pop
pop
imull
add
dec
shlb
rcll
xchg
xor
shlb
rolb
enter
addb
xchg
cltd
cli
pop
dec
mov
sbb
push
jne
and
inc
lods
rolb
ficoms
pop
mov
rclb
das
mov
dec
data16
aad
rolb
push
jne
arpl
rolb
packuswb
ret
test
jo
loop
inc
rclb
push
pop
inc
push
add
or
cmp
mov
ret
nop
test
pop
jae
fstpl
cmp
fstps
rcll
test
lock
add
xor
sub
add
setae
jge
xlat
cld
mov
lock
test
jae
sbb
and
inc
nopl
xchg
xor
push
inc
mov
mov
pop
imul
ljmp
addb
mull
mov
lret
pop
test
xchg
mov
push
push
shl
xor
mov
cmpb
cmp
pinsrw
jo
fdivl
inc
pop
mov
mov
bound
loopne
shlb
pusha
rorb
push
dec
mov
mov
mov
push
lahf
clc
mov
inc
and
andb
subb
leave
jl
inc
jns
pop
dec
daa
out
dec
inc
pop
shl
dec
addl
push
clc
xchg
in
xor
shll
cmpb
rcrl
popa
lahf
mov
mov
inc
cmp
mov
mov
push
lods
push
imul
push
and
inc
xchg
je
andl
hlt
fistpl
rorb
loopne
dec
rorb
imul
mov
and
in
movntq
repz
shlb
pop
adc
enter
paddusw
pop
pop
das
dec
repz
add
jmp
clc
mov
scas
pusha
loopne
sbb
xchg
and
add
xchg
fldcw
andb
ljmp
push
outsb
inc
sbb
js
mov
cmp
add
inc
cmp
jl
nop
mov
icebp
lds
adc
sub
faddl
loopne
pushf
fadds
pusha
shlb
js
addr16
loop
push
call
flds
fucom
dec
adc
mov
xor
and
xor
call
push
shlb
mov
add
pop
dec
scas
mov
dec
add
pop
dec
lods
pusha
and
cld
mov
push
push
dec
leave
add
adcb
and
loopne
inc
inc
mov
out
sarl
lds
xchg
and
or
outsl
jecxz
int
add
mov
and
lods
cmp
fidivrs
mov
sbb
sub
dec
mov
or
mov
out
idivb
add
mov
inc
sub
rcrb
dec
pop
sbb
andb
cmpl
loop
int3
jae
cmp
or
cmp
or
inc
xor
sti
cmpsb
loopne
addb
icebp
out
and
mov
pop
ret
sub
loopne
and
xchg
add
loopne
pop
divb
aad
fcompl
fstpl
mov
imul
and
ds
mov
xor
pop
popa
mov
ret
mov
scas
mov
mov
add
cs
rclb
mov
add
mov
ret
shll
ret
dec
sbb
jae
push
add
repnz
xchg
insb
out
lret
cld
call
loope
fisttpll
mov
mov
out
add
inc
xchg
repz
lea
cmpsl
push
mov
movsl
andb
mov
pusha
rolb
int
out
xor
jo
lods
pusha
test
inc
inc
or
mov
fsubr
mov
mov
ja
aaa
inc
lahf
lahf
inc
ds
sti
lcall
mov
movsl
jge
loopne
notb
popa
inc
in
int
loopne
in
adc
daa
stos
xchg
shr
jecxz
sbb
and
mov
jmp
push
inc
xchg
leave
aad
mov
iret
clc
sbb
xchg
das
je
dec
jge
out
enter
add
loopne
jae
lds
sti
add
loopne
pusha
mov
std
rol
xor
daa
pop
pop
cmc
es
adc
add
inc
jmp
sub
pusha
lods
inc
addb
or
loopne
int3
add
add
icebp
addr16
js
add
mov
sbb
inc
pop
mov
add
ret
push
mov
sub
inc
push
vprotb
dec
shll
xchg
adc
pusha
sub
addb
cli
cmp
or
xchg
mov
xor
pop
mov
inc
pop
cmc
iret
hlt
or
pusha
ret
pop
int
add
push
or
and
test
inc
arpl
loopne
or
mov
lret
mov
call
inc
mov
push
sub
mov
fcmovnu
ljmp
mov
mov
daa
loopne
pusha
shlb
mov
add
sbb
loopne
pop
cmpsb
loopne
sbb
rcll
jb
inc
cmp
xor
add
pusha
pusha
and
sbb
add
fldenv
addr16
movsb
and
xchg
lcall
lcall
ret
push
mov
lock
mov
sub
pop
sti
add
mov
iret
clc
sub
les
shrb
lahf
daa
cmc
jg
inc
lcall
mov
pusha
or
addl
jle
mov
inc
pusha
call
add
adc
lret
pusha
inc
jle
scas
mov
mov
ljmp
cmp
mov
push
popa
push
and
mov
push
gs
inc
and
add
mov
jp
loopne
xor
in
rol
dec
jl
repnz
ret
loope
mov
out
out
sbb
in
jbe
sub
loopne
inc
pushf
xor
test
add
and
shrb
imul
cmp
xchg
dec
or
dec
aam
mov
cmp
loop
rolb
mov
push
in
cltd
into
test
add
push
pusha
loopne
xchg
iret
sub
nop
cld
dec
cli
jp
jl
icebp
arpl
out
inc
rolb
push
paddw
cmpsl
jne
and
cmp
divl
ret
inc
cmp
add
aam
in
std
sbb
cwtl
sbb
jnp
es
sbb
repz
andb
insl
int
insb
mov
and
mov
and
mov
stc
shll
pop
xor
iret
sbb
data16
pop
cmpsl
iret
mov
loopne
inc
aas
int
add
lods
pusha
mov
inc
sahf
lcall
xor
in
pushf
mov
lea
out
out
call
mov
and
loopne
out
fsubs
call
and
iret
pop
xor
in
and
jg
push
ja
inc
and
mov
cwtl
xor
mov
and
xor
mov
cmp
loop
xchg
icebp
rcrl
flds
xchg
mov
popa
inc
movsb
pusha
loopne
inc
push
scas
mov
add
fsts
mov
inc
dec
cwtl
xchg
or
and
jge
add
pop
test
inc
shll
pusha
loopne
out
mov
add
sbb
cmc
or
inc
fbld
out
outsb
mov
mov
and
repz
jns
mov
push
out
aam
lret
push
aad
adc
inc
sahf
andb
clc
imul
addb
aaa
jo
sbb
or
fisubl
and
pusha
sub
pop
add
mov
adc
inc
or
cmp
sti
out
sub
adcl
mov
dec
sub
sub
lods
rcr
into
scas
ficoml
sub
add
into
pop
mov
mov
xor
sub
add
or
pusha
push
xchg
fwait
push
pop
adc
pusha
addb
in
or
and
fwait
mov
sub
and
jle
scas
addb
loopne
loope
mov
dec
sbb
test
mov
pop
sub
sub
push
mov
and
push
insl
sub
pop
mov
xor
jb
or
inc
pop
shrb
and
iret
add
andb
repnz
nop
ret
ret
stos
and
in
jno
jne
mov
and
shlb
cli
and
enter
add
scas
mov
scas
inc
mov
mov
call
andb
popf
lods
inc
adc
xor
and
inc
outsl
mov
xchg
mov
outsb
and
cmpb
arpl
pusha
lods
xor
js
nop
or
stos
mov
push
call
jg
sarl
rcrb
and
out
aas
sbb
add
movsl
fcmovne
jo
xor
loopne
into
es
cmpb
jle
and
sarb
test
rcrl
sub
add
push
stos
push
nop
cmp
pop
push
and
cmc
mov
les
or
xchg
mov
outsb
push
jle
pop
xchg
fwait
adc
inc
mov
fiadds
pushf
ljmp
call
addb
dec
cmpsb
and
cltd
adc
jmp
shr
cmp
xor
inc
xlat
insl
adc
mov
adc
jge
add
pop
sbb
jecxz
cmp
xor
mov
es
shlb
lret
jbe
inc
add
pusha
pusha
adc
sbb
pusha
dec
pushf
popa
inc
test
and
mov
dec
jo
enter
in
push
pop
xor
shlb
enter
movsl
cltd
or
pxor
jge
push
and
xchg
int
mov
addb
add
scas
xchg
lahf
nop
call
cmpsb
addb
mov
xchg
enter
jno
and
mov
xchg
cmpl
inc
mov
stc
mov
xchg
outsl
clc
pop
lods
shlb
rcrb
into
pop
or
add
stos
mov
mov
jb
lcall
pop
xchg
jne
xchg
dec
pop
pop
outsb
jecxz
nop
ljmp
sub
add
rclb
pop
xor
mov
mov
pop
and
push
push
cmc
dec
cmpsl
xchg
gs
int3
sub
mov
and
rorb
sub
test
xor
or
and
mov
testl
nop
mov
and
sbbl
jbe
iret
sti
mov
mov
pusha
test
fistpll
shl
and
test
sbbb
sarl
test
andb
and
loopne
ds
add
fildl
adc
rcrb
imul
outsb
out
andb
movsl
pop
dec
pop
mov
xchg
and
pusha
push
push
aaa
nop
fbstp
inc
and
rolb
hlt
je
push
div
ret
gs
imul
mov
cmp
je
test
andb
cmp
inc
ror
das
pop
subl
jp
pusha
rclb
cmp
jnp
lds
jg
bound
jns
andb
andb
inc
mov
sub
data16
xor
mov
ret
adc
dec
sub
shrb
jmp
popf
mov
shrb
repz
and
adc
fs
mov
sub
mov
sbb
adc
roll
and
mov
insb
out
inc
aam
loop
jg
mov
and
mov
push
add
inc
dec
adc
cmp
and
mov
jmp
int3
leave
adc
add
xor
push
rolb
je
push
testb
and
dec
icebp
push
daa
andb
decb
rolb
adcb
shrb
push
dec
mov
loopne
test
addr16
loope
jne
idivb
addl
fwait
mov
lcall
fs
push
mov
les
movsb
loopne
push
sbb
jmp
call
stos
bound
js
mov
rolb
mov
movsb
loopne
sbb
jbe
cli
dec
push
loopne
cmp
cwtl
sti
cmpsl
es
into
dec
xchg
pop
pop
push
dec
push
mov
push
filds
addb
xchg
rcl
mov
sbb
js
into
addr16
mov
aam
fisttps
shlb
jno
mov
lahf
shrl
sarb
add
mov
pusha
cmpl
adc
in
mov
mov
jmp
mov
sbb
mov
cmp
icebp
mull
push
xchg
hlt
pop
xchg
fiadds
mov
and
bound
addb
add
cmp
lods
loopne
sar
cld
insb
cmc
jo
test
sub
loopne
lods
and
xchg
out
imulb
inc
push
xchg
push
lea
dec
fwait
push
loopne
xchg
pusha
imul
andb
rcrb
pusha
sbb
add
popa
xor
cmp
inc
and
mov
cmc
dec
and
and
pusha
mov
add
mov
mov
dec
mov
je
decb
push
out
sub
addr16
movsb
and
mov
jecxz
jp
rol
sahf
fstpl
adc
pop
mov
andb
or
and
stc
jecxz
fcoms
mov
adc
push
mov
inc
mov
rcl
je
inc
sub
push
out
mov
mov
mov
imul
scas
loopne
dec
pop
outsl
and
sub
aad
adc
push
cmp
mov
xor
andb
or
push
rol
xchg
jns
add
inc
not
loopne
adc
cmp
cld
and
and
dec
out
sbb
and
add
jp
cmp
dec
xchg
and
jnp
mov
add
and
incl
repz
mov
imul
mov
mov
mov
js
ret
mov
jnp
insb
andb
inc
jp
pop
sbb
inc
push
push
shlb
lock
addb
andb
loopne
xchg
add
mov
fnsave
fucom
mov
add
mov
mov
stos
rol
loopne
arpl
loope
lea
inc
sbb
push
arpl
or
loopne
xor
cmp
inc
in
pop
sub
pop
andb
mov
pop
sub
mov
mov
pop
add
ficomps
nop
push
jae
and
pusha
mov
movsb
mov
inc
rolb
lods
pusha
loopne
sub
loopne
hlt
cmpsl
push
push
loopne
jnp
mov
rol
sbb
test
loopne
jno
dec
sub
pusha
mulb
mov
call
xchg
roll
add
mov
int
and
or
add
cmpb
mov
xchg
xor
scas
inc
shrb
push
call
bound
sub
sbb
outsb
jns
jmp
testl
dec
dec
test
add
nop
jnp
jns
in
add
pusha
out
xor
mov
xor
leave
scas
loopne
ret
repnz
jno
addb
arpl
shr
cltd
rcrb
and
pop
mov
and
mov
notb
add
jecxz
call
rolb
dec
inc
or
enter
jae
aam
mov
add
roll
add
mov
shlb
add
addr16
sbb
add
stos
and
add
or
loopne
mov
inc
xor
xchg
cmp
and
leave
inc
pusha
lret
test
int3
andb
inc
and
push
popa
push
inc
push
inc
sarb
mov
and
inc
sbb
xchg
mov
jle
rolb
pop
or
mov
rolb
pusha
and
pusha
dec
arpl
inc
pop
arpl
out
add
addr16
inc
loopne
add
inc
add
pusha
imul
xchg
test
pusha
xchg
aad
add
cmpsl
movsb
add
loopne
out
stc
fcoml
and
or
jno
and
add
cwtl
pop
pop
mov
fstpt
cmc
cmp
pop
mov
push
andb
scas
inc
loopne
scas
enter
add
callw
movb
push
add
cltd
scas
subl
add
rol
and
inc
fimull
mov
mov
addb
adc
arpl
cmpsb
andb
adc
fldcw
sbb
iret
push
popf
xor
push
sbb
lds
cmp
les
scas
lcall
mov
inc
loopne
shlb
and
pusha
dec
lret
mov
pop
cmp
sub
inc
movsl
fs
xchg
xchg
clc
xor
lret
xor
mov
ljmp
addb
mov
adc
add
xchg
out
lcall
jp
pop
push
sarb
xchg
jne
in
aad
cli
les
aas
loopne
push
fsts
loopne
mov
pop
movsl
lret
or
dec
shrb
push
mov
and
dec
adc
cmc
push
and
iret
jge
or
or
xchg
add
and
lea
out
inc
insb
mov
push
push
and
xchg
jb
fwait
out
xchg
pop
fiadds
mov
loope
pop
ficompl
pop
jle
xor
pop
iret
adc
mov
and
add
pusha
adcb
pusha
movq
js
mov
addb
mov
out
loopne
cmp
int3
mov
lock
in
mov
lahf
addb
fbld
push
sbb
iret
adc
lahf
push
test
mov
pop
jp
idiv
sbb
add
push
lret
aad
fstpt
sub
sti
fdivrs
andb
cmpsb
pusha
and
or
mov
inc
and
jbe
xor
js
stos
mov
pop
lret
pop
pop
out
test
inc
int3
adc
pop
xchg
xchg
pop
movsl
pop
int
pop
jmp
ficoms
rolb
mov
mov
stc
lahf
adc
push
inc
xchg
xchg
dec
pushf
and
idivl
movsl
lock
andb
cmc
xchg
add
mov
fwait
clc
mov
push
loopne
mov
inc
xchg
pop
push
and
stos
rol
das
mov
icebp
setno
jecxz
loopne
jae
shlb
sbb
xchg
das
cmp
mov
in
loop
das
xor
addb
push
data16
pop
mov
xor
mov
xor
aam
inc
loopne
mov
dec
or
adc
mov
subl
xlat
rolb
and
dec
loopne
movsl
dec
pop
ret
ficoml
ja
cmp
cmp
cltd
xchg
shrl
fisubrs
jae
mov
mov
movlps
cmp
mov
fistpll
rorl
sti
add
mov
adc
loope
push
add
mov
mov
xchg
ds
dec
out
rorb
add
stc
sbb
fidivs
inc
add
xor
aaa
call
aam
stos
xchg
pusha
add
fisttps
shlb
and
mov
in
xor
mov
mov
jle
les
loopne
scas
mov
jp
sbb
mov
add
cmpsl
push
or
loopne
inc
and
mov
and
xchg
leave
xchg
sbb
add
faddl
mov
stos
inc
and
scas
inc
mov
add
lret
mov
add
xor
shl
cmp
popf
or
or
add
mov
xor
pusha
ja
add
add
mov
sub
mov
and
inc
add
add
mov
repnz
das
sbb
sub
loopne
adc
add
pusha
add
add
and
mov
inc
int
xchg
mov
int
push
mov
jge
lods
andb
jne
push
mov
arpl
dec
mov
inc
mov
mov
inc
cmp
mov
fadd
ffree
push
pop
sbb
push
inc
cltd
cmpl
pop
sbb
inc
xorb
popf
hlt
fldt
test
mov
mov
cmpsl
out
pop
fs
or
add
inc
in
enter
mov
adc
stc
imul
arpl
out
shl
jmp
jge
mov
addr16
and
out
mov
push
cmp
pusha
sbb
add
addb
into
mov
inc
xor
pusha
ror
lds
in
push
mov
rorb
xor
mov
jmp
add
inc
sub
loopne
lods
xor
add
add
sbb
adc
cmpsl
test
addb
mov
xchg
fcoms
sub
push
lcall
or
sbb
movsl
or
mov
dec
xchg
add
andb
jg
std
insb
pop
sbb
and
jge
mov
loopne
dec
sbb
test
or
cmp
js
rolb
imul
icebp
fsts
pop
adc
xor
or
pop
pop
mov
aad
cmp
out
add
nop
das
xor
andb
pop
push
mov
out
dec
adc
fdiv
sbb
xchg
insb
sahf
mov
sbb
xchg
mov
jae
add
dec
adc
movsl
xor
inc
inc
pop
clts
rolb
add
and
fcoml
ljmp
push
int3
call
mov
lock
dec
gs
cmpb
stc
andb
dec
and
loopne
jb
ja
in
cmpsl
inc
lret
es
inc
jp
mov
adc
push
and
lds
add
and
xchg
mov
add
pusha
data16
cmc
ljmp
pusha
in
mov
and
repz
mov
call
jns
nop
je
adc
push
push
loopne
adc
mov
inc
fcmove
pop
mov
jmp
inc
ljmp
jl
mov
jnp
sub
arpl
cmc
rorl
jmp
or
inc
sti
in
jge
pusha
inc
pop
dec
push
fisubs
and
jecxz
sub
and
add
jg
pop
cld
and
inc
mov
add
mov
mov
jno
inc
stos
loopne
cmpsl
jge
fs
jp
test
and
dec
sub
ret
ret
xor
jnp
loopne
loop
int
pop
jl
leave
add
add
push
push
pusha
pusha
add
jno
cwtl
loop
mov
xor
push
mov
cmpsb
loopne
test
mov
dec
test
adc
jmp
inc
rolb
and
ud1
inc
and
sbb
rorl
cmp
shll
out
pop
daa
xchg
fstl
push
dec
faddp
inc
out
pushl
mov
test
inc
jle
loop
mov
loopne
mov
push
dec
or
aaa
test
pop
pop
dec
and
mov
push
dec
add
add
movsb
and
nop
sub
ja
mov
xor
roll
xchg
cli
sbb
addb
mov
pop
jmp
cmp
inc
out
pop
lock
and
pop
std
int
int
rorl
scas
loopne
int3
push
xchg
jne
and
in
fistl
fidivl
and
adc
pusha
sti
add
inc
pop
sbb
xor
leave
in
hlt
mov
or
add
or
pop
dec
dec
mov
imul
lds
loopne
fldl
dec
push
mov
sub
and
aaa
fnstenv
mov
fdiv
scas
push
add
nop
cmp
dec
mov
push
inc
and
cmc
push
jae
inc
loope
out
pusha
orb
into
fucompp
popa
xor
push
lods
shlb
ljmp
loopne
movsl
mov
mov
cli
inc
js
mov
outsl
outsl
add
add
adc
cmp
mov
adc
add
and
lret
add
inc
fadd
testl
and
sbb
inc
mov
xchg
sarb
imul
daa
push
mov
push
adc
je
jbe
mov
push
add
inc
inc
add
or
pop
sti
out
xchg
cld
cmc
test
jmp
inc
inc
inc
add
mov
insl
jmp
fistl
add
scas
int
add
push
rorl
and
andb
int
jp
xchg
push
cli
out
test
xor
push
in
mov
and
xchg
cmpsl
mov
loopne
xchg
inc
in
out
and
mov
inc
stc
push
test
dec
push
sbb
lcall
rorb
icebp
xor
xlat
pop
jge
cmp
pop
xor
fbstp
lcall
xor
jecxz
mov
mov
rol
pusha
pusha
ret
fidivs
dec
aam
jl
scas
jp
fldl
out
lods
add
mov
mov
loop
mov
mov
pop
call
xor
aad
inc
pop
loope
xor
filds
pop
push
add
inc
sar
and
sahf
arpl
mov
jg
sbb
adc
pusha
lods
addb
sbb
js
adcl
clc
inc
fnstcw
push
sbb
xchg
jne
jecxz
add
and
or
loopne
jns
xchg
pop
bound
mov
xchg
repz
inc
push
das
pop
test
xchg
mov
ficoms
repz
sbb
push
mov
addr16
shr
sub
loopne
push
mov
cs
and
mov
add
inc
mov
fcom
push
lret
cmp
mov
mov
inc
or
add
and
mov
jg
enter
xchg
jae
nop
out
jae
cwtl
mov
jle
pop
mov
and
js
shlb
popa
xor
shl
mov
ljmp
cmp
sarb
add
loopne
jg
jns
aas
sub
pop
inc
add
or
loopne
and
sbb
mov
push
and
pusha
mov
mov
push
addb
mov
dec
xchg
mov
rorl
mov
pop
xor
mov
inc
mov
mov
xor
inc
xchg
lods
jl
push
enter
push
jge
clc
xchg
and
mov
cmp
test
outsb
push
push
dec
mov
push
cmp
pop
fildl
and
adcl
mov
lds
adc
cltd
push
and
adc
mov
adc
mov
loop
xor
mov
stos
sbb
mov
mov
push
jl
shlb
stos
jle
dec
mov
push
shlb
pusha
inc
jg
pop
ds
outsb
or
rcrb
dec
inc
pusha
or
and
xor
bnd
mov
cmp
shlb
adc
and
push
fdivr
sbb
cmp
loopne
xor
inc
xlat
ss
push
std
cltd
dec
dec
cli
pusha
jno
scas
inc
mov
push
sar
xchg
leave
imul
pop
dec
mov
and
insb
out
mov
aad
or
mov
mov
dec
gs
shll
pop
mov
sub
loopne
imul
inc
jg
xchg
pop
imul
fcoms
jecxz
vmwrite
out
and
add
inc
stos
rolb
mov
sahf
jo
fiadds
loopne
mov
mov
xor
jle
addb
add
dec
cltd
mov
shlb
mov
mov
jo
or
jno
mov
add
mov
ret
cld
lret
or
pusha
sbb
stos
add
inc
jl
add
adc
jg
movsl
cmp
aas
pop
sbb
dec
mov
ret
pop
fwait
pop
pushf
gs
mov
mov
push
jmp
lcall
xor
mov
outsl
in
in
aad
rcr
imul
mov
rclb
push
ljmp
mov
shlb
decb
sar
push
lcall
sbb
repz
mov
adc
movsb
mov
loopne
sbb
mov
add
push
sub
lret
bound
cmp
or
and
subb
insb
jmp
mov
xchg
pop
jns
jns
xor
inc
sub
mov
jo
jnp
std
inc
or
mov
and
jns
mov
and
cld
mov
or
xor
xchg
loope
fimuls
mov
cmpsb
addb
mov
or
or
rolb
cmpsl
cmpsb
loopne
xor
mov
and
cmpsl
inc
ret
scas
pusha
mov
pusha
test
and
jp
sbb
and
andb
andb
or
inc
cmp
je
rol
xchg
lahf
mov
mov
int
sti
jmp
stos
add
cld
jge
jmp
lret
vandnps
inc
push
add
pop
call
sahf
subl
mov
mov
lcall
repz
fimuls
lea
add
jg
cltd
xchg
jl
sbb
gs
loopne
push
mov
adc
cmpsl
xchg
aad
pusha
inc
stos
shlb
xor
hlt
xchg
sub
scas
add
fsubl
test
sarl
loopne
in
pusha
cwtl
lods
ret
mov
push
pop
je
hlt
mov
shrl
sbb
cwtl
adc
xor
cmp
addl
insl
loopne
mov
stc
insb
andb
and
pusha
rorb
bswap
or
sti
addb
ds
arpl
fs
xchg
dec
gs
adc
in
fcoms
mov
pusha
dec
outsb
mov
jmp
cs
and
jge
mov
int
repz
ja
inc
pop
addr16
jne
mov
add
sub
in
inc
pop
je
loopne
ds
and
push
pusha
and
loop
xchg
add
aas
pmuludq
andb
adc
mov
call
outsl
leave
pop
iret
mov
sbb
mov
xchg
pop
adc
xlat
ljmp
iret
sub
cmp
loopne
sub
and
cld
insl
push
clc
mov
mov
pushf
cmp
or
addb
rolb
bound
pusha
inc
xchg
inc
scas
andb
aaa
cmpl
bound
pop
mov
and
aaa
hlt
lret
loope
inc
fisubrl
xor
pop
push
push
dec
mov
sbb
inc
in
jne,pt
pusha
mov
push
inc
loopne
movsb
loopne
iret
jmp
popf
jge
push
les
loopne
adc
shll
mov
negb
lock
mov
loopne
es
mov
pusha
xor
bound
add
mov
add
and
sub
xchg
or
pusha
cmpsl
inc
daa
lret
rclb
fistl
mov
pusha
inc
bound
mov
sub
stos
aam
add
mov
mov
lret
shr
cwtl
jo
inc
inc
mov
and
pop
dec
pop
data16
aaa
inc
mov
dec
pushf
xor
dec
hlt
inc
scas
rcr
pusha
add
add
sarb
popf
add
dec
add
pushf
push
rol
inc
fistpl
rol
push
pusha
add
test
mov
push
loopne
and
inc
lock
addr16
add
xchg
sbb
sub
cs
in
lret
xor
sbb
fdivrs
inc
rcrb
shlb
push
adcl
pop
loopne
pusha
mov
add
pop
or
pop
roll
jmp
add
aas
rorb
cmovb
inc
notb
sbb
sbb
inc
push
hlt
ret
mov
loopne
jne
cmp
data16
addb
ret
mov
cmpb
scas
andb
outsb
in
jg
popa
mov
xchg
pusha
stos
and
jle
or
lret
js
das
dec
cmp
js
insl
sub
shrb
lock
rolb
cmp
adc
adc
and
out
xchg
in
jo
push
shrb
into
lods
loopne
xchg
lcall
add
loop
pop
sub
xchg
bound
inc
shlb
push
int3
xchg
loopne
xchg
insb
jo
nop
jmp
and
fimull
andb
vpsrlw
std
out
mov
mov
in
mov
in
sbb
push
adc
outsb
sub
adc
inc
mov
and
jl
push
nop
ss
lods
pusha
mov
pusha
add
shl
repnz
into
fsubr
jb
jge
mov
loopne
mov
ret
xchg
cmp
ljmp
mov
xchg
jg
int
mov
xor
jle
mov
icebp
xchg
in
pop
ret
jne
xchg
inc
in
mov
lods
add
xchg
cmp
cld
aaa
sub
pusha
imul
push
xrelease
sub
clc
ret
in
and
jo
cmpsb
addb
sbb
hlt
sub
xchg
mov
andb
add
and
clc
inc
jmp
fwait
push
pop
jnp
mov
add
pop
cmp
add
sub
pusha
shr
inc
fnstsw
push
xchg
lahf
mov
loopne
das
push
pop
sahf
dec
mov
sbb
fimull
mov
loopne
iret
imul
pusha
in
jnp
roll
mov
shlb
loopne
or
out
int
mov
and
loopne
rol
xor
das
mov
push
push
jmp
mov
notl
cmp
stc
cmp
test
and
idiv
dec
call
pusha
add
mov
xchg
cmc
mov
test
and
sbb
or
imul
out
loopne
pushf
or
and
mov
nop
dec
xor
fdivs
push
fstps
jmp
pusha
inc
fdivl
jl
scas
inc
rorb
push
mov
adcb
sbb
or
pusha
dec
dec
movsb
inc
add
ljmp
inc
pop
mov
les
cmp
add
inc
adc
mov
insl
sub
addb
add
sahf
inc
loopne
mov
shl
aas
inc
andb
sub
pop
sub
roll
add
push
sbb
sbb
xor
imul
xor
dec
frstor
loop
sbb
loop
rorl
jbe
xchg
fnstenv
dec
adc
insb
pop
fisttpl
adc
pop
jmp
mov
rcr
mov
pushf
jns
jo
icebp
cwtl
push
stos
dec
scas
in
bound
rorb
pusha
inc
pop
xchg
pop
pop
fimull
push
xor
and
jbe
mov
negb
popa
or
loopne
fistl
test
mov
shl
lds
mov
add
loop
loope
pop
jmp
inc
andb
shlb
lods
inc
inc
sub
pusha
cmpsb
and
pop
cmp
jae
mov
js
mov
pusha
addb
mov
clc
push
mov
or
push
les
or
insl
icebp
add
xorb
enter
out
out
mov
jmp
and
inc
ret
cmp
inc
jl
loop
dec
insl
jne
mov
pop
mov
orb
stc
mov
pop
cmp
fdivp
xchg
sub
and
arpl
add
push
lcall
fcmove
bound
test
in
dec
sar
lahf
or
imul
sbb
and
inc
mov
jb
int3
adc
in
not
rcll
mov
les
or
mov
or
pop
push
jl
sbb
leave
sbb
sub
cmp
sbb
push
and
div
insb
adc
mov
and
movsl
lret
stos
adc
cmp
or
sub
xchg
cltd
incb
pusha
inc
cmpsb
mov
xchg
movsl
lret
mov
in
mov
or
pop
or
xlat
mov
test
cmpb
and
shrl
pusha
dec
jb
loop
and
and
push
sbbl
ret
shr
mov
fldt
and
cltd
fdiv
es
loopne
inc
into
subl
test
fcoms
xchg
mov
cmp
in
or
inc
orl
jo
xlat
rcll
jno
loopne
push
cbtw
mov
fs
push
inc
enter
push
cmp
mov
jnp
push
in
cld
dec
xchg
mov
adc
mov
or
mov
add
jns
cltd
lcall
dec
xchg
xlat
aad
add
clc
cmc
aad
or
mov
mov
xchg
mov
and
lds
mov
aam
mov
ror
mov
xchg
push
mov
sub
sarb
mov
loopne
or
jno
cmpl
push
scas
pusha
cmp
rolb
adc
cli
ds
bound
outsl
push
add
inc
cmpsb
inc
and
add
stos
dec
push
add
loopne
jo
push
add
pusha
add
fcomps
inc
icebp
add
add
xor
aam
pusha
mov
mov
mov
fcoms
sysret
mov
mov
pop
adc
sbbl
cmc
jg
pop
outsl
bound
pop
pop
dec
push
xor
mov
cmp
rolb
sahf
lahf
xchg
adc
fmul
adc
push
loopne
pushl
call
sub
out
icebp
pop
push
nop
lods
mov
ret
test
pop
xor
adc
and
xchg
push
jl
ja
mov
xorb
dec
out
adc
fnsetpm(287
rclb
jne
push
outsl
add
cmpb
mov
loop
pusha
and
fsubl
sbbl
xor
sahf
sbb
push
data16
test
aaa
add
shlb
dec
xchg
in
xchg
rorl
pop
and
add
pop
push
pop
mov
lods
js
dec
loop
push
and
arpl
imul
mov
or
inc
popf
xor
pop
fs
addr16
movsb
pusha
and
push
mov
mov
inc
repnz
pop
or
fcoms
arpl
ret
adc
cmp
mov
sub
dec
loop
test
jb
adc
stos
sub
vmovq
add
out
pop
sbb
push
ficoms
loopne
sbb
pop
mov
addb
andb
fwait
mov
fwait
iret
stos
loopne
dec
jmp
pusha
jge
mov
icebp
add
pop
sub
inc
push
rolb
cmpsb
inc
adcb
sbb
daa
inc
std
adc
dec
les
push
out
rol
pop
sbb
sbb
xor
sbb
sbb
jne
scas
and
shl
popf
cmp
add
bound
mov
repnz
mov
inc
cmp
sub
pusha
pusha
fwait
or
in
sbb
add
or
pop
cwtl
push
xchg
or
pop
mov
xlat
mov
rolb
sti
mov
test
arpl
mov
aaa
xchg
fptan
push
xchg
ljmp
xor
imul
lret
mov
pop
ret
out
sub
pusha
test
pop
sbb
mov
loopne
fidivl
pusha
ret
mov
ret
pop
inc
lea
scas
loopne
mov
lea
xchg
and
ds
mov
mov
pusha
mov
inc
call
xchg
shlb
and
push
or
sbb
shlb
jo
aam
pop
sbb
lcall
fs
mov
push
xor
cmpsl
push
ss
cltd
sbb
ja
dec
leave
mov
leave
lods
or
inc
pop
and
inc
sub
pusha
lret
inc
mov
mov
pushf
scas
mov
dec
push
jbe
out
mov
push
ret
popa
in
scas
push
and
leave
and
subb
jo
sub
daa
scas
add
daa
pop
pop
addr16
decb
add
xor
xor
and
aam
loope
rolb
mov
xorb
mov
cltd
lock
jecxz
fwait
stc
jg
iret
movsl
sbb
shld
stos
addb
push
adc
sub
negb
hlt
lds
mov
out
pushl
and
loopne
mov
pusha
and
fs
push
vmovsldup
test
sbbb
sbb
pushf
mov
aam
mov
loopne
out
leave
outsb
jo
push
push
sti
jg
loope
mov
dec
cmc
xor
sahf
out
fidivrs
in
rolb
popa
or
or
sarb
out
mov
imul
call
in
sub
and
inc
push
lret
jnp
addb
lock
xchg
ficomps
out
xlat
mov
mov
ret
xor
adc
inc
dec
popf
cmpsb
rolb
pushf
adc
leave
cmp
addr16
fiaddl
fidivl
push
sub
xchg
inc
fcomi
xchg
loopne
sti
and
mov
and
push
cmc
sahf
inc
xchg
dec
leave
fldl
push
rcll
sbb
add
adc
lock
aas
push
fidivs
sub
lcall
inc
pop
mov
mov
jo
addb
push
jmp
jp
inc
mov
pop
aas
out
jne
insb
dec
and
shr
ret
icebp
mov
mov
rol
pop
stc
sbb
mov
sub
push
push
lods
andb
xor
push
sub
xchg
jo
and
or
loopne
or
cld
mov
loopne
xchg
dec
or
inc
int
pop
jle
jecxz
dec
sub
inc
mov
inc
sbb
enter
loopne
loopne
xchg
sahf
mov
mov
and
rolb
fisubrs
loopne
push
dec
rorb
outsb
add
xchg
inc
push
pop
lds
loopne
loopne
lock
xchg
pusha
scas
pusha
pusha
adc
add
sub
les
and
loopne
push
shlb
adc
and
push
push
sbb
cmp
mov
loopne
daa
mov
push
cld
or
orb
hlt
popl
int
inc
fldt
mov
lret
sub
and
ficomps
xchg
lahf
addb
andb
jl
mov
pop
test
or
mov
xchg
test
and
and
dec
sub
ljmp
int3
out
lock
inc
xchg
outsb
mov
adc
out
jne
dec
test
outsb
sbb
add
mov
push
inc
mov
testb
call
fisttps
arpl
outsl
cwtl
in
push
mov
mov
test
push
inc
fs
enter
sbb
sbb
std
into
sbb
and
iret
mov
ficomps
addl
mov
cmp
rolb
xchg
xor
xchg
push
fdivs
jle
sbb
subb
cs
add
jbe
mov
cmp
call
sbb
aaa
xor
pop
mov
int3
dec
xlat
or
mov
push
cmp
bound
sahf
pop
mov
push
mov
out
loopne
in
imulb
enter
out
mov
sub
rcll
in
jae
jmp
jl
dec
gs
mov
outsl
or
fdivrs
dec
and
and
and
push
insb
mov
addb
and
shlb
testb
scas
scas
shl
fidivrl
fldenv
pusha
jmp
adc
fimull
addr16
mov
dec
fcmovnbe
aas
mov
mulb
andb
xchg
mov
pusha
paddsw
jno
std
iret
divps
pop
out
sub
jle
fdiv
test
inc
and
int
sbb
movsb
rolb
dec
cli
inc
sbb
repz
push
xchg
or
and
add
mov
jne
bound
out
shrl
add
into
movsb
add
stos
or
and
stos
and
lret
fsubrl
mov
push
mov
xor
push
and
pusha
inc
adc
je
repz
jg
test
js
mov
cwtl
aam
les
mov
mov
insl
sbb
int3
mov
and
mov
clc
repnz
and
and
aaa
and
rclb
push
pushl
fcomi
jmp
out
adc
pop
cmp
aas
std
bound
adc
jg
add
add
rcr
mov
pop
pop
std
sbb
jb
enter
inc
sub
adc
js
xchg
out
arpl
dec
cwtl
lea
and
shl
xor
inc
pusha
xor
add
int3
loopne
js
push
add
int3
add
popa
xor
in
jo
cmp
shlb
dec
adcl
and
mov
js
jge
sti
push
pushf
rol
leave
lds
fildll
fs
inc
andb
mov
std
ljmp
ret
or
and
loopne
negb
test
inc
xor
cltd
mov
xchg
rol
fsubrl
xor
pop
movsb
loopne
jns
inc
out
add
fwait
pop
mov
pop
outsb
lods
dec
push
cmc
and
bound
sahf
lods
inc
mov
outsl
lods
inc
and
xchg
call
shll
add
sbb
lret
adcl
dec
cwtl
outsl
mov
test
add
cwtl
sbb
lods
cmc
inc
mov
inc
add
ljmp
mov
fbld
addl
xchg
cld
ja
out
aad
addb
jne
mov
xchg
add
int
les
add
mov
add
sbb
lcall
cmp
jo
add
mov
jmp
aaa
je
sbb
sub
pop
inc
and
xor
push
mov
out
push
sbb
and
inc
mov
jg
xor
mov
stc
push
push
mov
shlb
repz
pop
iret
xlat
scas
pusha
and
mov
aam
jnp
shlb
sub
add
mov
pusha
and
sub
mov
rorl
and
mov
fidivrl
fsubr
stos
das
call
xor
cwtl
mov
stos
rolb
mov
or
dec
push
popf
test
shl
inc
mov
and
sbb
cld
lods
loopne
int
mov
xchg
or
jae
and
loopne
jmp
int
rorb
loopne
syscall
sti
insb
hlt
js
pop
add
cmc
repnz
dec
lret
dec
inc
sysexit
mull
loopne
leave
inc
fwait
std
xchg
enter
xchg
movsb
shlb
pusha
add
push
mov
inc
hlt
insl
dec
xchg
mov
insl
sub
loopne
mov
movlps
push
jns
push
sub
and
add
fistps
addb
sub
sbb
xchg
or
cmpb
add
add
adcb
add
hlt
lock
pop
cmovns
mov
scas
out
xchg
or
inc
addb
sub
jns
pop
lds
add
bswap
jecxz
or
mov
iret
sbb
test
push
andb
ror
jmp
push
loopne
rcrl
loop
jl
daa
mov
adc
pop
mov
fcmovbe
push
pusha
add
mov
outsl
hlt
cmp
pop
cmp
rolb
sub
enter
add
js
jbe
inc
scas
call
or
jmp
sbb
pop
pop
cmp
sarl
or
clc
xchg
xlat
jns
adc
stos
push
fldt
sbb
lea
jae
addb
cld
scas
mov
stos
pusha
orb
mov
aaa
lock
and
andb
jne
addb
inc
dec
sbb
inc
pusha
pop
ljmp
in
or
les
cmpsl
xor
loope
cmp
jg
loopne
push
mov
pop
jo
mov
mov
movsl
out
push
cmpsb
mov
test
loope
sbb
aas
out
jb
mul
fucomp
cmp
aaa
dec
sbb
dec
pop
mov
xchg
loop
push
or
mov
addr16
loopne
xchg
adc
push
inc
jnp
pusha
adc
push
in
shll
xor
push
stos
shlb
inc
mov
test
xchg
fcomip
jl
jg
pop
cmp
repz
shlb
addb
sub
rolb
call
ja
mov
ret
lds
scas
jns
and
fwait
cmp
or
and
adc
adc
add
shl
or
ret
mov
test
inc
xchg
popa
addr16
cmp
lods
inc
add
pop
into
aas
mov
es
and
decl
cmp
mov
jb
sbb
jle
or
pusha
scas
mov
and
inc
repnz
jne
mov
fidivs
adc
imul
mov
pusha
add
int3
xlat
jg
xlat
jg
mov
shr
andb
inc
movsb
pusha
inc
test
out
push
and
inc
rorl
xchg
mov
fmull
loopne
mov
sub
mov
into
mov
add
and
mov
pop
dec
shll
mov
push
push
imul
xor
lret
js
filds
sub
lret
xor
sub
pop
lods
pusha
mov
shlb
call
push
adc
fdiv
jmp
gs
andb
loopne
je
sub
add
pusha
lret
sub
push
adc
mov
xor
je
sbb
leave
call
jnp
pop
and
loopne
add
lret
xchg
pop
pop
xor
add
xor
test
sbb
mov
fsub
pop
pop
outsl
push
in
addr16
int3
dec
sbb
jge
pusha
sub
mov
add
sbbb
xchg
pusha
fbstp
inc
pushf
leave
jmp
cmp
cmp
addr16
aad
jmp
push
pushf
push
loopne,pt
dec
push
addb
roll
sarb
notl
inc
adc
pusha
movsl
sti
dec
notb
push
dec
sarb
testb
jmp
in
fistl
pop
xor
add
inc
lret
or
mov
mov
shlb
pop
out
xorl
or
cmp
mov
nop
xchg
lds
insb
mov
pop
xchg
lret
ljmp
mov
and
test
inc
push
or
and
xor
rolb
aas
inc
pop
mov
in
mov
gs
insb
adc
arpl
add
xlat
xchg
add
inc
sbb
mov
sub
add
fdiv
ror
aad
lret
and
jge
psubw
xchg
jecxz
mov
sbb
cltd
cmpsl
pop
mov
adc
xor
mov
cmp
pop
or
pusha
mov
dec
inc
xchg
nop
mov
mov
jmp
inc
push
inc
gs
popa
adc
add
or
cld
cmpsl
std
mov
or
and
loope
mov
decb
sbb
ljmp
dec
inc
xor
mov
sub
add
add
ficoml
and
xchg
scas
jo
arpl
sub
pusha
cmpsl
js
pop
and
inc
cltd
lahf
mov
xchg
int
sti
lcall
inc
jbe
loopne
pusha
and
movsl
mov
fadd
dec
sbb
jnp
mov
in
push
ss
stc
jo
in
fisttpll
pushf
adc
out
mov
roll
sub
inc
pop
stc
test
push
es
and
insb
lock
imul
pop
jbe
sbb
jnp
sub
xchg
xlat
mov
mov
rolb
add
jbe
cmp
cwtl
insl
jb
icebp
or
mov
fs
push
mul
shlb
push
out
scas
add
mov
sar
mov
mov
shll
popf
xor
cmc
cmp
mov
and
out
inc
pusha
pop
xchg
dec
push
dec
fldln2
pop
test
mov
pusha
cwtl
lds
je
hlt
lods
shrl
insb
cmp
lock
ret
lods
imul
mov
repnz
fnsave
lods
dec
dec
fnstcw
popf
pop
fchs
dec
rorl
mov
add
shlb
leave
xchg
outsb
lahf
mov
rolb
cmpsb
mov
mov
inc
mov
clc
mov
add
mov
push
rcl
inc
xor
loope
jg
rcrl
jno
mov
rolb
jecxz
xlat
xchg
and
pusha
dec
adc
xor
add
rcrb
xchg
dec
lcall
lret
push
or
shrb
rol
jno
addb
xor
mov
pop
sub
pop
mov
mov
out
mov
rcrb
cmp
mov
stos
push
loopne
push
mov
push
or
imul
fdivrs
ret
or
pop
cmp
loopne
cltd
mov
mov
xchg
add
mov
daa
ds
jnp
lahf
mov
aad
mov
ja
movb
lcall
xchg
pop
jmp
pusha
mov
jo
mov
push
pusha
mov
mov
add
mov
sti
cmp
xor
adc
fistpll
or
pusha
pop
fsubrs
andb
push
movsb
pusha
loopne
mov
inc
pop
addr16
enter
pop
call
mov
mov
mov
stos
and
and
add
and
mov
dec
adc
mov
and
scas
test
inc
pushf
sbb
sbb
xor
ss
dec
push
das
nop
adc
cmpxchg
add
jae
imul
or
inc
pusha
mov
andb
or
add
lods
and
sarl
mov
rcr
sub
add
cmpsl
subps
xor
pusha
or
xor
andb
pushf
int
pop
mov
cmp
out
stos
sub
div
push
inc
sub
mov
lret
push
stos
imul
rol
and
mov
inc
sbb
sahf
addb
enter
cmc
adc
and
ss
addb
and
dec
mov
or
mov
repz
add
mov
enter
loopne
mov
add
pusha
icebp
out
and
clc
cmp
push
sarb
int
mov
pusha
pop
cmp
cmp
aam
ret
jmp
mov
xor
pop
aad
cli
push
out
inc
push
call
enter
sbb
push
mov
out
aad
jnp
lret
out
imul
pusha
or
jp
shll
inc
jle
jmp
adc
outsb
pop
adc
sub
inc
mov
add
loopne
inc
loopne
xor
jbe
sub
and
and
loopne
cmc
jge
xorl
lea
cmp
int3
add
add
fisubrs
mov
pop
mov
addb
arpl
xchg
inc
or
pusha
adc
sub
addb
sarb
ljmp
shl
rcrb
bound
int3
loopne
or
and
inc
cmpb
fimuls
push
and
rolb
gs
call
mov
pop
outsl
pusha
shll
sbb
dec
pop
mov
and
pusha
jle
mov
sub
add
imul
push
add
add
test
jmp
dec
scas
rol
push
aam
dec
mov
push
dec
jmp
mov
adc
mov
aas
xor
xchg
adc
mov
jecxz
addb
add
push
mov
inc
mov
adcb
push
inc
pusha
dec
cmpsl
push
dec
inc
mov
inc
lret
fs
sub
and
scas
mov
inc
mov
fs
loop
xchg
sbb
jnp
jp
pushf
in
xchg
lret
ds
lret
incb
aaa
adc
arpl
push
xor
lea
addb
and
xchg
xchg
cmpsl
mov
clc
jle
arpl
mov
fcomip
pop
sar
add
add
push
xor
push
lock
loopne
mov
pusha
push
and
std
push
dec
pop
mov
inc
and
sub
mov
hlt
sub
sarb
jno
push
data16
add
and
jg
mov
xlat
std
enter
inc
xor
and
pusha
sarb
add
stos
inc
pusha
mov
or
and
shlb
jae
pop
loop
mov
and
inc
daa
cmp
inc
cmp
dec
dec
movntq
out
hlt
xchg
out
jne
xchg
push
lret
mov
repz
loopne
in
js
jle
and
loopne
cwtl
jge
or
inc
lods
clc
or
cmp
dec
pop
aam
fistps
xchg
pusha
add
push
nop
icebp
push
xchg
xor
push
sub
inc
mov
xor
jnp
sbb
inc
int3
xor
and
sbb
cmp
lret
jb
jbe
scas
shlb
stc
xchg
push
addb
add
hlt
cmp
xlat
repnz
mov
rolb
inc
or
adc
test
shl
add
and
es
rolb
sti
mov
pop
xlat
call
lods
andb
out
imul
sub
sub
pop
pop
or
sar
mov
inc
mov
shll
sarb
popf
lret
mov
loopne
pusha
and
push
add
incb
out
addb
rolb
add
mov
mov
movsb
mov
addb
fwait
cmpsl
sub
shlb
psubw
sbb
add
sti
and
add
shlb
jno
pop
addr16
adc
popa
jge
push
clc
sbb
push
jbe
add
inc
mov
mov
sbb
divb
sub
loopne
inc
inc
stos
outsl
ss
loopne
mov
and
rorb
add
adc
call
cmp
icebp
sbb
addr16
and
imul
iret
jg
aam
mov
xor
insb
add
sbb
adc
rorl
mov
xor
inc
inc
adc
negb
xchg
and
xor
shll
dec
lock
loop
mov
sbb
mov
test
xorb
sub
test
push
lcall
in
mov
cmp
sahf
xchg
add
jnp
push
pushf
sarb
imul
or
inc
mov
mov
je
scas
mov
and
outsb
out
mov
out
sub
sbbb
stos
pusha
pusha
ds
sbb
mov
sbb
call
pusha
inc
nop
xchg
xorl
and
and
clc
out
shlb
int3
xor
scas
jae
aad
inc
imul
mov
stc
and
in
in
inc
inc
pop
fwait
dec
popf
jl
lret
mov
sbb
test
mov
sar
xor
aas
cli
jbe
adc
lret
scas
mov
add
std
push
add
mov
pop
aam
test
mov
xlat
jnp
test
pop
fildll
or
adc
ret
xor
cmp
inc
mov
mov
lret
pop
lds
dec
data16
mov
adc
rolb
popf
dec
cmp
inc
fwait
push
push
shlb
jns
push
cmpsl
add
pop
pop
sahf
fisttps
xor
mov
das
fildl
add
xor
in
in
jns
add
divb
mov
fucom
mov
orb
loopne
loopne
sbb
push
js
imul
xchg
loopne
loopne
leave
cmpsl
mov
fadds
inc
push
das
adc
scas
push
mov
mov
mov
add
pusha
mov
roll
andb
inc
fmul
js
pop
fsubrl
inc
arpl
mov
mov
loopne
sub
sbb
inc
leave
sarl
mov
cmp
stos
and
xchg
mov
std
mov
xor
pop
jge
adc
mov
loopne
ja
xor
clc
add
sarb
aaa
push
fisubrs
mov
loopne
and
sbb
cmpsb
shlb
adc
ss
mov
sub
inc
hlt
fisttpl
fucomp
pop
pop
ja
rolb
icebp
mov
or
lea
test
inc
adc
mov
and
repnz
mov
test
pusha
xchg
test
mov
dec
aaa
test
repnz
and
out
cmp
in
jle
inc
rorb
addb
mov
repz
fdiv
rorb
es
sbb
inc
bound
sbb
test
sbbb
jno
inc
mov
int
sbb
lcall
mov
adc
jge
xchg
inc
stos
mov
or
cmpb
fs
pop
addb
cmp
and
push
xchg
mov
mov
inc
pusha
int3
and
jno
rolb
sub
mov
int3
into
gs
lret
andb
mov
or
in
or
pusha
mov
dec
test
xchg
pop
les
cmp
jo
mov
jmp
shlb
pusha
mov
loopne
sub
cmp
loopne
aad
add
cmpl
mov
loopne
outsl
fcmove
inc
inc
data16
lods
mov
sub
loopne
cwtl
add
add
pusha
mov
push
out
repnz
aaa
mov
push
fsubp
lret
ja
dec
push
iret
xchg
out
push
mov
xor
stos
and
ljmp
popf
jbe
dec
aaa
adc
sbb
clc
mov
adc
pop
cltd
mov
xchg
xchg
iret
popf
fcmovnbe
jnp
inc
gs
leave
in
insl
aaa
lret
imul
dec
adc
ret
pop
sbb
cmp
fwait
aam
lea
add
stos
loopne
cmp
daa
push
clc
jle
fcoml
pop
int3
in
dec
movsl
insb
pop
inc
mov
rol
mov
add
sub
loopne
lods
pop
packuswb
cld
imul
dec
pop
sbb
fistpl
add
mov
xor
shlb
rolb
push
inc
jo
xor
imul
into
or
inc
add
inc
cmpsl
dec
outsb
ja
mov
inc
mov
lock
loop
andb
cmpsl
test
pusha
xor
inc
and
outsb
fldenv
mov
dec
mov
loopne
cmp
cmp
sub
sub
loope
push
mov
mov
icebp
jl
mov
mov
inc
sub
rcrb
mov
shl
mov
push
andb
lock
in
ffree
dec
stos
add
jl
movsl
cmp
mov
mov
inc
inc
jmp
fnstenv
inc
xchg
loope
add
and
pop
mov
dec
mov
adc
mov
imul
out
andb
mov
das
loopne
loopne
mov
addb
jmp
mov
jmp
sub
bound
fstp
dec
add
adcl
loopne
xor
out
and
pusha
nop
xchg
rolb
pusha
cwtl
fnstenv
jo
fs
test
add
test
add
shl
mov
mov
pop
inc
addb
ja
sub
stos
loopne
or
add
cmp
pusha
mov
incl
add
mov
mov
jmp
scas
rcrb
mov
inc
test
andb
dec
mov
fs
jge
insl
aaa
test
inc
mov
xchg
rclb
push
cmc
mov
iret
fprem
mov
cli
int3
sbb
insl
inc
sbb
mov
je
scas
je
inc
imul
xor
pop
xlat
pop
rcrb
loopne,pn
aad
je
push
shlb
fistpl
cmc
mov
mov
jecxz
nop
lods
outsb
jns
inc
adc
lods
pusha
sarb
dec
jbe
rcrb
loopne
stos
shlb
push
insl
xchg
add
dec
shrl
loopne
and
test
repz
ret
in
cmc
xchg
inc
int3
sub
addb
fbld
andb
sbb
add
cmpb
pusha
add
movsb
and
daa
adc
pop
push
andb
dec
repz
pusha
pusha
or
insb
mov
cmp
xchg
cmpsb
add
es
addb
ret
adc
int3
add
jg
mov
jno
jne
xchg
mov
les
pop
ret
jmp
cmc
dec
mov
inc
popa
or
test
fldenv
pusha
mov
mov
nop
icebp
mov
fwait
mov
inc
mov
outsl
data16
and
pushl
ds
mov
shlb
sbb
add
outsl
test
paddd
pop
dec
sbb
lods
testb
add
andb
jne
shlb
je
push
or
aas
orl
xor
add
sarb
jo
shlb
in
adc
xchg
inc
pop
inc
out
add
shr
mov
sbb
mov
rorb
loopne
sbb
pop
addb
fiadds
aam
data16
xchg
add
cltd
or
repz
mov
loopne
fcomp
mov
pusha
add
sbbb
cli
mov
push
sub
loopne
push
mov
xchg
pop
inc
mov
cld
gs
mov
add
sahf
imul
jecxz,pt
insl
inc
data16
push
pusha
ja
mov
and
mov
fwait
or
and
push
ljmp
andb
and
jmp
sarb
les
add
mov
xor
dec
push
scas
dec
push
mov
lcall
xor
mov
cmp
sub
loopne
rolb
repz
mov
cmp
mov
repnz
mov
mov
sub
lcall
cwtl
sub
jbe
jbe
ss
pusha
add
sub
imul
push
inc
pusha
out
sti
movsl
fwait
dec
dec
jo
xchg
stos
and
xor
push
inc
ss
mov
lea
inc
xchg
insb
push
mov
inc
dec
and
in
jo
mov
loopne
push
mov
ds
popa
jl
mov
jno
bound
gs
pop
inc
out
mov
inc
pusha
jns
dec
dec
addb
out
and
or
add
sub
ret
loopne
jne
rolb
fldl
inc
leave
incl
enter
mov
lret
pop
ja
sub
or
shl
mov
mov
xchg
mov
adc
jmp
or
inc
jl
cmp
dec
mov
mov
je
cmp
jge
mov
inc
xor
add
lcall
cli
mov
pop
mov
cmp
ds
sub
orb
loopne
xacquire
fistpl
pop
fnstenv
fucom
in
enter
and
cmp
pusha
insl
cmc
cmp
jb
pusha
add
jbe
pop
lcall
data16
inc
inc
jb
jp
loopne
pushf
mov
test
inc
cld
out
mov
lods
loopne
mov
fimuls
mov
aaa
iret
jns
and
inc
dec
push
fcoms
int3
push
mov
addb
loopne
loop
add
xor
cmp
pop
mov
mov
push
insb
adc
mov
inc
and
and
loopne
pop
pusha
enter
je
in
sbb
ret
inc
pop
xlat
rcrb
jg
stc
jbe
or
pop
les
xchg
ret
xchg
iret
sbb
mov
int3
mov
jo
rcl
test
push
inc
mov
sub
and
ss
jnp
fsubrs
mov
scas
stos
xor
lret
hlt
std
pop
jecxz
out
jmp
and
or
mov
mov
and
xchg
flds
aas
sbb
jecxz
xlat
hlt
jo
fistpll
aam
rolb
cmpsl
jle
mov
pop
jge
dec
enter
lret
rorb
or
push
fcompl
call
ss
add
in
jg
mov
pusha
mov
sbb
mov
fldt
or
mov
lcall
out
mov
test
inc
aam
xor
and
jnp
out
inc
mov
fwait
push
push
mov
and
xchg
lods
inc
or
mov
push
nop
cmc
rorb
pushw
inc
mov
mov
mov
pop
leave
cmp
scas
aad
mov
sarb
pop
xor
and
pop
pop
jne
test
sbb
pushf
outsl
sti
aas
hlt
dec
mov
dec
enter
pushf
dec
cli
addr16
pushf
xchg
inc
mov
call
and
cmp
aaa
jle
mov
loopne
and
loop
mov
and
add
add
or
and
add
arpl
addb
call
out
jmp
add
fidivs
mov
and
enter
xchg
lret
add
in
push
loopne
sub
shr
lds
loop
pop
sbb
ret
imul
nop
sti
daa
inc
stos
and
adc
mov
inc
sbb
push
mov
xor
pusha
xorb
add
cs
xchg
sub
and
mov
cwtl
in
nop
loopne
movsb
loopne
mov
je
nop
fstpl
gs
mov
sbb
dec
lcall
inc
shlb
aaa
sti
xor
add
sbb
cmp
rolb
loopne
push
pusha
pop
inc
xchg
ficoms
inc
mov
jl
adc
push
ds
add
and
cmp
adc
and
push
shrl
adc
push
rolb
xor
fmull
mov
jo
out
ss
add
mov
sahf
adc
scas
mov
popa
stc
inc
pop
jp
vunpckhps
mov
mov
and
add
cli
mov
add
gs
sub
shlb
cmpl
popa
add
addb
loopne,pn
fldcw
xor
test
lcall
jle
and
psadbw
movsb
loopne
jecxz
pop
lds
mov
add
mov
xchg
aaa
add
add
and
adc
mov
xor
xor
and
push
inc
cmp
rcl
in
and
inc
mov
pop
insl
iret
mov
cmp
xchg
add
push
xchg
loopne
lods
inc
pusha
je
and
outsb
arpl
les
test
shlb
inc
mov
movsl
cmpsl
and
mov
dec
sbb
jp
xor
adc
inc
nop
xchg
add
loopne
iret
inc
adc
and
ret
call
jl
jge
pusha
adcb
andb
aad
cld
fcmovu
rcr
negb
rolb
push
add
add
scas
add
addb
add
andb
xchg
dec
iret
pushf
sbb
dec
xor
dec
int
and
dec
ret
inc
and
xchg
mov
mov
and
mov
into
addr16
push
and
cmpb
dec
sbb
adc
sti
mov
xlat
inc
int
xchg
xchg
std
es
jge
decb
aad
mov
and
enter
sbb
pop
dec
repnz
mov
and
ds
test
add
mov
stos
loopne
and
ss
fidivl
repz
lcall
notb
or
fcoml
push
and
mov
adc
inc
pushf
rorl
adc
in
andb
xor
pop
call
movsl
outsl
or
adcb
lret
push
fcomps
out
push
rol
pusha
mov
sub
pusha
mov
mov
shrl
loop
imul
add
rcl
push
cltd
push
pop
push
inc
outsb
je
inc
inc
sbb
xor
into
dec
sbb
or
hlt
jg
inc
int
pop
push
daa
mov
lahf
mov
ljmp
jmp
add
mov
cmpsb
and
lahf
clc
add
inc
cwtl
mov
and
in
and
repz
dec
cltd
push
shlb
jmp
push
flds
fdivrp
xchg
jns
add
sar
movsb
and
out
mov
pushf
cmp
out
jmp
andb
inc
jns
scas
inc
mov
xchg
lahf
push
popa
in
sbb
mov
clc
push
and
shll
adc
out
mov
jno
ret
and
add
mov
outsb
cwtl
pop
lods
cli
fwait
mov
and
xor
decb
adc
xor
pusha
rol
sub
aam
mov
andb
decb
xchg
push
jnp
out
js
and
mov
ffree
add
popf
adc
fsubl
cwtl
insb
stos
test
movsl
fildll
mov
cmp
xchg
int
test
aaa
sub
sarb
leave
std
out
int3
sub
mov
push
inc
mov
push
movsb
loopne
fs
enter
faddl
sbbb
pusha
add
in
bound
inc
stc
pusha
subl
cbtw
jge
mov
and
xor
push
notl
icebp
aad
in
jecxz
pop
mov
rolb
fimull
loopne
mov
inc
adc
nop
and
pop
cmp
outsb
insl
xor
xchg
pop
jl
addb
loopne
adc
pop
dec
push
pusha
jno
mov
xchg
test
add
inc
jbe
adc
iret
int3
lods
addb
hlt
lcall
pusha
xchg
or
in
xchg
push
andb
test
pusha
lret
or
cmp
sbb
push
mov
sub
jns
dec
sub
cmp
cmpsl
lahf
in
arpl
ljmp
sbbb
pusha
add
cmp
popfw
pop
fcomi
xor
push
push
pop
inc
pop
scas
inc
inc
shll
cmpl
add
and
dec
add
pop
push
push
int3
mov
xlat
pop
xor
xchg
shl
nop
stos
and
add
mov
inc
mov
mov
mov
sbb
lahf
and
or
or
pop
inc
arpl
jns
add
leave
icebp
cmp
out
in
sbb
xchg
lods
andb
add
ljmp
xchg
lret
mov
rcr
push
inc
jmp
lea
pusha
movsl
dec
pop
in
cmp
xchg
inc
in
addb
movntq
inc
shl
xchg
call
andb
dec
or
out
nop
clc
punpcklbw
inc
sub
and
add
fisubl
add
xchg
sub
adc
sub
ror
mov
das
pop
mov
xchg
mov
addb
in
add
mov
pop
test
xor
lods
shlb
stc
dec
ret
cmp
add
cli
ret
pusha
inc
xchg
cmp
dec
test
loopne
popf
mov
xchg
sbb
inc
and
call
adc
mov
pusha
mov
jne
sub
and
and
mov
dec
dec
mov
xchg
or
pop
xchg
pusha
ss
xlat
and
hlt
out
in
lods
xor
and
mov
dec
lret
movb
pop
test
fidivrs
imul
push
jb
pop
jnp
stc
mov
sbb
mov
inc
movups
sbb
movsb
andb
pop
movsl
out
cs
inc
add
rolb
xchg
add
sub
loopne
dec
add
add
cmp
and
ljmp
adc
xchg
add
loopne
fwait
cli
rclb
lahf
cmp
sbb
lea
pusha
loopne
cmp
cmpl
addb
int3
es
test
outsl
outsb
mov
loopne
inc
inc
ja
xchg
and
sub
add
mov
inc
rorb
cmp
sbb
push
add
dec
addr16
lret
call
addb
hlt
notb
jo
addb
ret
outsb
in
and
mulb
rorl
mov
and
rcl
fstps
and
pusha
xor
dec
jmp
int3
out
mov
mov
ss
inc
adc
pop
dec
cltd
jae
cmp
pusha
pusha
pop
mov
push
cltd
popa
inc
bound
add
leave
nop
push
cmc
test
mov
test
inc
imul
in
mov
xor
dec
cmp
add
mov
mov
leave
pop
mov
inc
aaa
push
ljmp
lock
inc
loopne
lods
addb
andb
add
loopne
push
pusha
sub
dec
popf
inc
mov
jae
sbb
pop
aam
cmpsl
cmc
movsb
shl
loop
mov
add
adc
andb
divb
sub
pop
mov
clc
fstpt
sbb
test
and
pop
cmc
in
imul
negb
mov
mov
pusha
and
mov
repnz
insb
andb
pop
mov
ror
ss
scas
imul
and
and
mov
mov
fwait
inc
xor
mov
jle
rolb
int
outsb
or
add
call
dec
and
and
inc
rcr
adc
adc
xor
mov
mov
fcmovbe
fistpl
sbb
add
cmp
adc
xchg
int
cltd
jnp
andb
and
sub
mov
mov
icebp
loopne
cltd
mov
add
loopne
mov
stos
loopne
lock
dec
jns
clc
and
and
rolb
sbbb
rolb
mov
mov
and
cld
push
jo
cltd
mov
lock
ss
movsb
mov
addb
insb
sbb
inc
mov
insl
jno
pop
xchg
mov
sub
mov
leave
mov
fadd
cmp
mov
sbb
add
mov
push
int
mov
mov
sub
jl
out
popa
xor
das
jno
sahf
lods
cld
andb
inc
pop
icebp
mov
cmpb
repz
mov
add
pop
sbb
sti
jbe
loopne
sbb
into
xchg
out
std
push
add
pusha
pusha
fstl
cltd
gs
pavgb
mov
pop
lcall
aam
lock
push
dec
inc
stc
addb
cmpl
pusha
hlt
pop
call
mov
shll
loopne
mov
rorb
xchg
shrb
scas
dec
mov
fsubp
and
sub
mov
add
push
xor
popf
and
and
sbb
inc
jbe
push
inc
in
xchg
mov
jmp
xchg
adc
mov
pop
mov
dec
inc
sub
mov
and
and
mov
ret
jne
inc
dec
outsl
nop
pop
movsl
cmp
and
cltd
mov
mov
in
es
loopne
ret
mov
dec
je
inc
cltd
pop
mov
mov
mov
add
mov
or
mov
inc
cmp
jp
push
ret
and
push
iret
aam
dec
pop
fcomip
ss
ror
andb
and
call
pop
mov
cwtl
jge
xchg
addr16
rcr
nop
daa
aam
push
xchg
addr16
cmc
aaa
or
scas
pusha
rclb
cld
dec
icebp
fsubrl
loopne
movsb
and
ja
test
rorb
rolb
xor
cmp
insb
jecxz
cmp
repnz
gs
and
pusha
jbe
mov
pop
jb
cli
roll
sub
loopne
sub
pushf
mov
or
mov
popa
pop
jb
and
test
repz
test
inc
loopne
into
and
inc
loope
push
jns
clc
shlb
sub
insl
lea
sbb
aad
pusha
shlb
and
add
aaa
mov
shlb
shl
mov
inc
popf
push
mov
xor
push
and
sub
pusha
idivb
imul
popa
mov
ffreep
add
fstl
mov
push
fsts
test
scas
add
lret
outsb
arpl
mov
and
dec
jne
xchg
sbb
je
pop
sub
mov
sbb
mull
shlb
lahf
pusha
bound
notb
sub
mov
sbb
loopne
rol
lods
inc
add
mov
addr16
or
inc
jns
icebp
inc
sbb
call
loopne
cwtl
push
and
add
imulb
xchg
gs
xor
andb
xor
dec
lods
inc
mov
push
mov
push
pusha
out
fcoml
movsl
stos
sub
stc
dec
test
and
cmc
sub
and
and
xchg
mov
mov
push
shl
ret
mov
clc
xchg
iret
adc
pusha
and
and
cmpsl
cmp
stos
sub
call
orb
inc
fsubl
cmpsl
test
cld
jmp
shlb
mov
mov
les
stos
rolb
inc
movsl
test
inc
sarb
loopne
inc
fstpt
push
loopne
mov
inc
mov
into
lds
cli
mov
shll
push
jbe
cmp
pushf
push
sar
jle
pusha
loopne
rolb
dec
pop
cmp
std
call
dec
jge
xor
loopne
popf
into
cmpsl
add
and
jp
inc
push
dec
out
inc
mov
daa
fsubrs
loopne
pusha
mov
mov
xchg
or
pusha
push
and
jne
adc
dec
inc
mov
mov
loopne
xor
fwait
in
insl
inc
adc
das
jp
into
push
cmp
loopne
call
or
cmpsb
rolb
repz
and
push
jae
xlat
fs
adc
xchg
es
lahf
push
mov
fisubrl
jb
scas
std
sub
sub
pusha
cltd
insl
out
dec
cmp
xchg
mov
cmp
hlt
mov
and
lods
and
inc
cmp
pusha
add
in
add
push
and
mov
cmpsl
aam
mov
test
and
mov
jnp
addb
push
xchg
or
xchg
mov
imul
loope
jae
pop
xchg
or
and
ljmp
arpl
pusha
outsb
stos
andb
sub
fs
adc
faddl
xor
mov
sti
cmp
mov
enter
xor
sub
dec
inc
pop
dec
mov
add
mov
mov
xor
inc
xchg
mov
lock
les
mov
aaa
jo
inc
pusha
adc
push
ljmp
mov
repnz
mov
popf
popa
stos
add
cmp
loopne
sub
and
addb
inc
sub
cmp
cmp
loop
xchg
popa
push
fldl
mov
pusha
in
pop
mov
loope
add
insl
jp
bound
rolb
inc
and
loop
push
sbb
pop
inc
scas
inc
inc
scas
and
pusha
add
sbb
rcrl
pop
xchg
mov
mov
fsubs
incl
test
lock
adc
xor
adc
cmp
fiadds
sub
add
push
sub
xor
gs
push
mov
andb
dec
jnp
inc
jp
mov
push
lds
sbb
imull
push
and
mov
popa
sbb
je
mov
outsl
aas
mov
sbb
subl
mov
test
mov
int
lods
inc
and
fstpl
add
loopne
in
mov
gs
loope
pusha
push
and
stos
pusha
and
xchg
mov
das
mov
fsubrl
ljmp
loopne
in
cmp
xor
adc
enter
mov
inc
mov
xchg
add
loopne
aas
mov
push
mov
and
and
mov
lods
and
add
in
sbb
pushf
leave
mov
sub
and
pop
adc
out
pop
jle
lods
shlb
pusha
pushw
addb
out
mov
xchg
test
inc
push
dec
xorl
pop
mov
inc
push
insl
ret
daa
mov
mov
adc
rolb
jnp
inc
mov
std
bnd
pop
dec
icebp
mov
in
mov
mov
inc
sub
inc
dec
sbb
mov
loopne
push
mov
xlat
and
shl
movsl
test
mul
lock
pop
or
loopne
outsl
addr16
out
push
loopne
push
gs
clc
sahf
stos
push
xchg
loopne
std
mov
repnz
inc
pusha
jb
mov
xchg
data16
shl
sbb
cmc
xchg
add
test
sub
rolb
subb
lcall
and
fsubs
xchg
loop
repz
mov
and
cmc
sar
das
clc
xchg
sub
inc
notb
mov
and
shlb
into
mov
mov
addr16
inc
repnz
aad
fldt
int
mov
rorl
push
sbb
lds
repnz
sbb
jbe
int3
pusha
or
pop
pushf
or
inc
xlat
mov
xor
lret
dec
xchg
repz
stos
and
rcr
pop
mov
orb
shl
xlat
fadd
clc
mov
push
xchg
loope
dec
ret
or
pusha
xor
shlb
lret
sub
sbb
addb
add
add
adc
pusha
sti
add
xchg
or
jbe
pop
add
adcb
pop
lahf
test
loopne
mov
pop
mov
insb
cmp
xchg
xchg
xor
add
pop
or
shl
add
jns
push
push
or
mov
loopne
repnz
outsb
call
frstor
sub
rolb
mov
addb
mov
add
sbbb
ret
cmpsb
mov
ds
jo
pop
lret
ljmp
inc
sar
mov
test
call
loopne
mov
shlb
das
push
sti
les
dec
inc
jecxz
flds
inc
sar
outsb
pop
jb
ret
mov
loop
dec
mov
cmpsb
pusha
and
mov
pusha
stc
inc
pop
popf
mov
and
popf
fldl
jns
pusha
sar
mov
shlb
inc
add
jo
into
aad
add
mov
testl
sbb
xor
cld
inc
mov
rolb
pusha
and
imul
popf
sahf
ret
cli
mov
push
rclb
shll
sbb
add
dec
and
pop
test
pushf
xor
xchg
stos
lea
sbb
dec
mov
sahf
divps
int
push
pop
fcos
out
lret
inc
sar
bound
mov
sbb
stos
inc
adc
lds
and
fildll
pusha
add
inc
mov
xorb
push
movsb
shl
popa
sti
sub
subb
or
outsb
movsl
xchg
ret
cmp
sbb
in
orl
js
or
add
fidivrs
cmpsl
add
add
and
data16
loopne
test
pusha
test
mov
sbb
xchg
es
add
and
xchg
dec
lret
mov
repz
push
jmp
mov
andb
ret
xlat
out
push
mov
xchg
cmp
movsb
shl
add
inc
das
jecxz
pop
in
int
daa
jb
push
jp
rorb
aad
jno
add
add
test
and
mov
jle
dec
adc
icebp
hlt
push
lret
repz
pusha
loopne
loopne
mov
sub
add
rolb
and
add
mov
jb
dec
mov
adc
rcll
and
pusha
pusha
push
flds
mov
mov
stos
inc
into
xor
add
and
push
mov
adc
xchg
sub
scas
sbb
je
cmp
hlt
pop
in
or
or
sbb
push
inc
dec
loope
jns
inc
cltd
scas
fwait
and
lock
push
or
jp
fidivrl
flds
ror
lret
pop
jmp
add
rolb
and
or
xchg
inc
xchg
xor
dec
mov
and
mov
mov
cmc
test
mov
or
aas
sub
add
mov
add
push
shlb
fstps
hlt
jp
cmp
xchg
insb
stos
and
inc
xchg
mov
inc
add
dec
call
mov
add
and
push
jmp
icebp
outsb
sar
pop
jecxz
push
inc
orb
and
push
gs
cmp
out
dec
icebp
cmp
ror
data16
insb
int3
push
imul
mul
adc
sub
add
mov
xor
mov
xor
ret
shl
aam
sarl
sbb
lea
movsl
test
add
gs
mov
shlb
lcall
sub
repz
mov
and
inc
shl
lahf
rorb
loopne
and
stos
mov
mov
loope
in
cmpsl
lret
xchg
rcrb
aaa
xchg
sahf
sub
adcb
mov
ja
mov
lret
movb
jge
dec
add
and
hlt
lahf
testl
iret
pop
popa
inc
movsl
mov
sti
lds
jp
mov
mov
mov
js
popf
push
loopne
cmpsb
rol
mov
stos
jns
sbb
xlat
or
inc
int
jo
and
movsb
rolb
jne
popf
mov
loopne
testl
mov
pusha
mov
in
in
rclb
inc
and
ss
insl
pusha
jl
push
inc
and
mov
sahf
ljmp
jns
mov
fidivs
add
mov
je
xchg
loopne
in
mov
sub
nop
pop
cmpsb
mov
and
adc
lods
add
imul
mov
incl
test
pusha
leave
xor
out
test
mov
pusha
and
push
popf
out
sbb
jg
xor
cs
add
mov
push
fadd
loope
jecxz
and
sbb
adc
es
andb
sub
loopne
or
rcrb
add
mov
sub
add
jb
fisttps
sbb
inc
add
adc
push
out
lea
xor
pop
loopne
fstps
jg
insb
stos
and
divl
mov
rcrb
shl
jae
je
inc
bound
aam
dec
pop
push
je
mov
jns
mov
mov
cmpsb
mov
add
add
mov
hlt
outsb
pop
xchg
jmp
in
inc
cmp
jp
das
dec
xor
add
add
mov
and
inc
loope
test
addb
jecxz
or
add
stc
pop
jge,pt
or
data16
pusha
jge
cltd
ret
mov
sbb
jmp
mov
xor
andb
sub
ja
dec
mov
out
rcrl
pusha
test
addb
sarb
icebp
or
push
andb
inc
add
out
xchg
mov
add
dec
mov
jp
and
std
rorb
mov
jge
clc
mov
mov
fisubs
inc
std
andb
sbb
out
ret
stc
stos
add
jge
pop
cmp
jae
mov
inc
inc
incl
mov
adc
jne
insl
cmpsl
popa
cmp
xlat
xor
int
fmull
or
dec
mov
add
mov
xor
int3
pop
lock
movsb
rolb
inc
rcrb
inc
ret
addr16
sbb
xor
ds
and
les
or
mov
push
inc
jae
jle
stos
mov
sbb
addb
rorb
and
xchg
push
rolb
jecxz
pop
stos
pusha
loopne
test
xchg
fimuls
xchg
cmpsb
add
loopne
addb
add
and
idivl
and
popa
or
add
fidivl
cmpsb
addb
sub
sbb
call
movsb
add
jge
into
mov
adc
pop
stos
fsubs
sbb
sarb
xor
and
mov
faddp
ljmp
loopne
add
mov
shlb
mov
clc
or
aad
push
in
inc
add
scas
and
xchg
in
out
arpl
cmp
rolb
mov
in
xor
sub
loopne
cmp
cmc
cmc
add
sbb
jne
inc
sbbb
leave
sub
pusha
xor
jmp
jno
movsb
add
sub
pop
ja
imul
mov
mov
orl
ficompl
enter
xlat
jb
int3
aam
xor
inc
inc
inc
inc
fisubrs
add
jno
jl
out
push
pushf
xor
pop
out
lods
pusha
add
test
mov
mov
loopne
das
icebp
xchg
iret
cmp
sub
pusha
repnz
into
in
sub
inc
cltd
push
and
lahf
xor
movsl
sahf
cmpsl
flds
jbe
scas
pop
insl
das
mov
cltd
mov
loopne
out
dec
mov
xorl
inc
cmp
loop
hlt
fistps
sub
xor
sub
cmpb
loopne
daa
notl
xor
mov
mov
adc
pusha
mov
add
rolb
aad
add
popa
arpl
dec
mov
push
cli
icebp
clc
jb
psubsb
test
cli
push
popa
jmp
das
and
rclb
ss
lea
cmp
ss
aaa
and
push
jmp
insl
mov
jmp
inc
inc
sub
and
pop
push
jnp
out
jmp
sub
or
and
in
dec
in
test
xchg
hlt
cmc
jns
pop
sub
mov
mov
push
jns,pt
add
out
add
jp
ss
and
and
ficoms
inc
pusha
inc
std
dec
mov
insb
and
jg
mov
cmpsl
int
add
fmul
loopne
add
inc
mov
jb
pop
or
addr16
push
andb
add
hlt
dec
jb
clc
iret
xor
jbe
push
dec
pushf
mov
dec
lock
dec
cmpsl
cmp
xchg
fcom
push
loopne
add
into
sbb
or
add
scas
adc
ja
lea
cmp
cmp
out
stos
add
dec
adc
dec
jo
adc
idivb
mov
xchg
pop
jbe
iret
mov
loope
sub
mov
rolb
xor
sti
dec
mov
xchg
mov
bound
pop
out
popa
mov
addb
lock
adc
mov
dec
inc
fstl
or
pop
mov
inc
pushf
and
mov
mov
mov
rolb
fidivs
dec
xchg
pop
lods
and
push
data16
push
andb
push
xchg
xchg
mov
and
sbb
adc
cmp
sahf
mov
addb
add
arpl
incb
mov
inc
ljmp
addb
jnp
mov
jo
mov
mov
mov
xchg
sbb
mov
add
adcb
mov
mov
jl
jb
scas
inc
inc
popf
mov
rcrb
sub
pop
inc
incb
inc
repz
and
adc
fadds
jae
shlb
andb
and
jp
pop
push
andb
cld
jge
add
mov
loopne
js
sti
ljmp
sahf
cmp
and
fdivp
das
scas
pusha
inc
imul
cli
sbb
shrb
shr
loopne
mov
and
repz
adc
pop
addb
add
xchg
std
mov
xor
push
clc
sub
add
mov
jae
out
push
xchg
aad
stc
fisttpl
xor
movsl
scas
pusha
loopne
fdivl
jge
lods
es
loopne
adc
rolb
ja
lret
push
loop
jp
mov
ret
dec
imul
incb
sbb
rolb
xchg
mov
add
add
or
mov
cwtl
iret
lods
sub
xchg
fcmovnu
mov
cmp
imul
push
pusha
popa
and
orb
xor
test
mov
cmp
fldt
mov
leave
adc
nop
dec
inc
hlt
push
enter
and
enter
out
insl
lock
leave
add
pop
push
pusha
shl
or
stc
std
adc
and
ja
lcall
jns
rolb
mov
xchg
div
jmp
pusha
cmp
jns
mov
enter
push
cmp
or
xor
lcall
idivl
in
push
cmpsb
and
xchg
imul
inc
sub
ds
pusha
and
shr
pop
xchg
iret
cmp
jae
addb
mov
xor
add
mov
mull
or
pop
cs
pusha
add
pusha
mov
pop
inc
outsb
icebp
pop
call
sbb
mov
loopne
popa
nop
jmp
repnz
inc
sbb
inc
and
sarl
sub
add
adcl
shlb
and
movb
cmp
shlb
inc
dec
cltd
sub
rol
jmp
sbb
adc
pop
stc
or
push
andb
lods
std
ljmp
mov
lock
fwait
cmc
out
pop
fcompl
add
repnz
fimuls
push
loop
fs
or
cmp
mov
call
out
sbb
sbb
imul
cmp
aaa
cld
ljmp
shlb
add
mov
push
xor
rclb
rcll
pusha
jnp
mov
fbstp
push
xorl
out
inc
std
lret
arpl
shlb
ret
mov
sbb
push
cwtl
push
jmp
sbb
inc
popf
mov
fisubrs
fabs
mov
andb
xchg
insl
dec
cmpsb
and
out
xchg
cltd
arpl
add
fsubr
jae
push
idiv
in
aam
cwtl
sub
or
dec
aad
negb
mulb
jno
xor
mov
mov
inc
js
cmp
andb
icebp
xchg
xchg
inc
aam
sahf
lahf
into
enter
andb
rcr
shll
pusha
mov
movsl
rdpmc
pop
int
xchg
fwait
iret
jecxz
insb
cld
cld
pushf
sbb
popf
jmp
leave
mov
push
pop
xchg
andb
jl
fmulp
mov
pmulhw
in
lret
jbe
rolb
dec
push
ljmp
outsb
cmc
cwtl
xor
orl
leave
sub
xor
ljmp
mov
ret
cmp
inc
fidivrl
cmp
and
pop
cmpsl
mov
or
push
hlt
lcall
mov
addb
mov
pusha
sbb
push
cmpsb
andb
sub
subb
dec
jle
in
iret
sbb
dec
fincstp
ret
push
push
mov
mov
shlb
rol
ret
add
mov
mov
inc
lret
cmp
push
out
repz
jae
push
xor
mov
rolb
mov
add
scas
dec
jo
data16
fnsave
daa
popa
push
xchg
xchg
dec
aam
xor
mov
ss
jbe
gs
dec
mov
xchg
adc
leave
out
push
and
movsl
daa
inc
jmp
mov
out
mov
add
mov
sbb
leave
fcoms
mov
or
lock
push
cmpsb
add
push
pop
sub
xor
add
inc
call
pusha
aad
dec
sar
pushl
and
inc
and
sub
or
pusha
mov
dec
shlb
add
push
out
hlt
in
enter
mov
and
push
out
mov
adc
imulb
and
stc
mov
addb
and
dec
xor
testb
mov
mov
push
adc
fmull
add
push
dec
mov
mov
and
das
push
jae
and
jl
icebp
icebp
cmp
nop
cli
leave
je
nop
shrb
imul
xorb
mov
and
dec
mov
jnp
sbb
xor
xlat
loope
xlat
jmp
xchg
sbbb
mov
adc
les
cmc
xor
rol
sbb
rolb
loopne
pop
lret
iret
ret
mov
add
sbb
dec
lods
inc
iret
pop
xor
push
pop
adc
test
dec
loope
xor
cmpsb
add
mov
and
loopne
fstps
loopne
aad
lea
or
clc
in
inc
inc
dec
adc
cmp
push
push
shll
sbb
mov
jmp
addb
inc
inc
mov
jmp
inc
mov
out
imul
in
sub
add
mov
sbb
mov
xchg
mov
andb
mov
sbb
loopne
fdivr
push
adc
adc
loopne
add
pusha
loopne
jb
sub
and
ljmp
rcr
pusha
xor
cmp
mov
xor
andb
popf
in
fldcw
mov
fwait
xchg
imul
xor
jno
loopne
cmp
inc
and
into
adc
xchg
enter
mov
jge
orl
addb
lods
rolb
mov
add
rolb
push
addb
lods
rol
idiv
cmpsb
and
and
fisubrs
mov
sub
mov
outsl
cwtl
jnp
scas
and
int3
mov
in
and
rcl
cmp
rol
adc
lods
mov
inc
and
mov
pusha
adc
pusha
loopne
add
mov
cvtdq2ps
jg
inc
push
shrb
rolb
loopne
push
insb
adc
adc
test
fnstsw
shl
pop
cli
aas
jnp
movsb
loopne
jbe
out
addb
sbb
and
and
mov
push
sub
adcb
loopne
pop
aas
fists
outsl
mov
in
les
clc
addr16
push
lods
dec
in
loopne
sub
xor
shl
movb
loop
or
xor
andb
and
cltd
popf
add
pusha
adc
and
aam
testb
push
add
stos
pusha
shr
xchg
test
loopne
andb
sbb
or
shrb
jle
xor
mov
sub
mov
sub
pusha
xor
pusha
and
cmovne
pop
mov
and
and
ret
and
dec
std
loope
push
pop
cmp
sbb
pop
ficompl
aam
ficoml
paddsb
fstpt
int3
outsl
xor
dec
pop
and
pusha
mov
lret
mov
shl
sbb
mov
and
outsb
filds
pusha
and
push
out
adc
movsl
adc
sbb
add
add
inc
idiv
cmp
mov
lret
add
xor
fs
dec
cmc
mov
mov
and
inc
and
rol
mov
add
dec
xor
jge
add
mov
fmull
out
inc
aas
movsb
inc
adc
push
push
movsl
fstps
lods
inc
mov
xchg
icebp
mov
pop
xchg
jb
es
loopne
xchg
scas
cmpsb
loopne
xor
fsubrs
jo
sub
xor
scas
mov
dec
jp
inc
inc
popf
adc
add
enter
mov
fdiv
jl
push
push
inc
inc
and
fstpt
or
enter
out
pusha
mov
cli
mov
jmp
test
loopne
bound
dec
sbb
outsb
xchg
xchg
das
inc
scas
or
and
mov
icebp
or
ss
test
dec
or
sar
cltd
mov
cmpsb
and
adc
imul
in
popf
repnz
add
inc
sub
pusha
gs
mov
or
mov
and
dec
xchg
sbb
jge
xor
lods
pusha
mov
push
popl
pop
mov
rolb
or
mov
scas
add
mov
ja
jbe
pop
sub
out
shl
fidivl
in
inc
or
stc
rorl
jae
fstpl
rep
and
cmc
mov
xchg
lods
shlb
mov
outsl
dec
jge
push
inc
cmp
jecxz
sbb
cmp
loopne
push
rol
push
fisubrs
aam
pop
dec
xchg
and
xor
xchg
subl
add
es
and
addb
sub
addb
ljmp
xchg
icebp
or
or
sub
jmp
jb
gs
add
adc
adc
mov
dec
xor
loopne
pop
rcl
divl
int
in
sub
pop
xchg
ror
mov
loopne
mov
inc
shlb
push
add
testl
lcall
ja
lds
and
adc
rclb
out
neg
das
push
ret
xor
push
fbld
add
dec
fbld
cmp
mov
rolb
or
adcb
ja
iret
inc
mov
pusha
test
call
icebp
ja
loopne
mov
jae
cmp
mov
loope
inc
adc
sbb
jo
insb
xchg
sbb
into
ret
and
add
in
dec
xor
addb
loopne
cmp
pop
mov
loopne
and
sub
mov
inc
jp
inc
push
jge
sbb
lcall
add
pop
pop
add
jmp
add
idivb
and
inc
ret
mov
shlb
pusha
data16
mov
shlb
push
outsl
or
push
sub
loopne
cmp
add
in
sub
add
jnp
jp
dec
xlat
fucomi
jl
mov
lcall
and
sbb
nop
cli
sbb
loopne
xchg
jns
loopne
push
xchg
sub
and
sub
xchg
pop
mov
leave
pop
jl
ret
test
lea
push
in
call
push
out
andb
lock
and
fisubrs
push
stc
adc
xchg
iret
inc
dec
sti
xchg
mov
shll
push
pop
xor
ja
int
mov
add
dec
clc
and
loopne
jl
pop
stos
pushf
xor
and
inc
mov
cmp
and
adc
mov
and
adc
lods
and
test
subb
rcr
and
shrb
mov
movsb
mov
and
negl
rolb
add
ret
pusha
adc
dec
cld
mov
fstpt
mov
pusha
movsb
rolb
and
data16
in
arpl
jle
les
fildl
and
sub
rolb
mov
test
inc
call
and
pusha
adc
fwait
add
pop
bound
or
not
mov
mull
icebp
xchg
outsb
stos
dec
lret
sti
push
in
icebp
sbb
xchg
mov
bound
adc
enter
lock
dec
add
into
cmpsb
rolb
sti
xchg
jmp
sar
pop
mov
dec
icebp
faddl
or
andb
cltd
out
mov
lea
jle
fwait
loopne
jmp
scas
inc
add
andb
rolb
rolb
mov
dec
mov
mov
loopne
and
adc
rcl
or
loopne
imul
aad
xlat
jp
add
shlb
mov
loopne
jp
les
dec
jns
mov
pop
lgs
and
sub
pusha
mov
rcl
add
imul
and
lret
ss
andb
jo
jle
inc
and
mov
cmp
mov
inc
mov
add
dec
mov
andb
ss
popf
subl
pop
inc
cli
rep
loopne
jecxz
xchg
inc
jo
and
add
rcrb
xor
xor
sub
addb
inc
ret
std
pop
mov
mov
mov
add
mov
fisubs
cmp
adc
pusha
clc
test
mov
in
lods
and
push
push
fcoml
test
and
and
cli
in
aad
mov
add
xchg
pop
add
xorb
std
lods
shlb
stc
loope
jmp
scas
mov
andb
and
sub
mov
sbb
dec
xchg
sahf
push
push
jne
pop
adc
shr
js
mov
and
add
mov
icebp
jmp
sbb
aam
pusha
adc
loopne
scas
pusha
cmp
push
adc
scas
pusha
pusha
push
fmul
sub
mov
inc
addl
mov
shlb
inc
ret
cwtl
inc
in
outsl
push
pusha
loopne
or
pusha
cmc
push
add
pusha
cmc
popf
out
inc
push
mov
inc
mov
pop
test
add
add
add
call
rolb
inc
imul
mov
pusha
loopne
dec
andb
xchg
add
rclb
pusha
data16
fistl
fldt
rorb
outsb
mov
mov
adc
sub
lret
inc
ret
jns
mov
sub
jnp
pop
push
nop
and
add
add
mov
lea
pop
in
mov
orb
js
ja
or
xor
inc
mov
shlb
pop
add
push
loopne
fwait
lds
int3
je
sub
popf
nop
pop
sbb
and
cmp
in
push
add
cmpb
out
push
lods
shlb
loopne
sbb
mov
addr16
push
addb
xchg
fdivr
jae
rcl
dec
mov
fwait
scas
mov
adc
fcoms
jl
stc
sbb
inc
or
mov
orl
cmp
mov
dec
sbb
and
inc
decb
andb
or
sahf
adc
inc
xor
add
add
movsl
mov
cmp
push
and
loop
es
add
add
cmp
mov
mov
iret
sub
rcrb
add
mov
jmp
jnp
test
rcl
cmp
sbb
add
pop
aam
addb
test
inc
call
stos
add
cmpsb
inc
loopne
lods
loopne
insl
adc
mov
adc
push
fwait
jnp
loopne
es
and
hlt
sbb
or
insb
test
andb
pusha
mov
push
ja
pop
dec
xlat
add
adc
icebp
pop
adc
jb
mov
fdivl
cmp
stc
adc
xor
sahf
mov
arpl
and
mov
sbb
lods
loopne
test
aad
pusha
shlb
mov
rol
xor
cli
fsubrl
aam
loopne
push
jnp
adc
test
mov
add
mov
add
sbb
mov
pop
iret
add
call
xchg
loope
push
ficoms
lcall
subb
push
mov
xlat
add
icebp
or
cmpsl
insb
mov
insb
in
outsb
cmpsl
shrl
mov
cmc
movsb
add
in
cmp
and
pusha
dec
pusha
push
movsl
and
dec
dec
shrb
testl
popf
push
or
std
mov
outsl
mov
lahf
rolb
lcall
cltd
cmp
jmp
stos
stc
mov
rolb
mov
or
repnz
pushf
or
jl
add
sbbb
inc
rclb
leave
int3
adc
out
cmp
and
jo
push
lcall
and
or
loopne
dec
add
or
aad
add
inc
mov
sub
xorb
and
mov
test
shlb
and
in
into
rcrl
pusha
and
push
cmpsb
and
inc
loopne
mov
and
js
in
xchg
daa
jmp
notl
std
jecxz
lcall
xchg
insb
enter
dec
ficomps
jo
add
add
jecxz
orl
int
sbb
bound
jno
nop
dec
cmp
pusha
orb
loopne
add
and
add
addb
aad
andb
out
add
mov
aam
xor
addb
sub
mov
push
dec
aaa
dec
or
nop
pusha
or
add
jp
shl
loopne
mov
addb
adcb
testb
pusha
inc
and
mov
sub
mov
jnp
mov
cmpl
pusha
inc
clc
xchg
dec
push
sub
fsubrp
daa
xor
add
test
arpl
shlb
out
icebp
stc
out
push
mov
push
inc
divl
pusha
pusha
push
addb
sub
lock
add
sbb
sub
pusha
and
cli
pop
aas
addr16
and
daa
jnp
mov
das
and
mov
xchg
shrl
int
mov
filds
and
add
or
pcmpgtd
pop
push
in
inc
pusha
mov
sub
mov
daa
mov
loopne
sub
and
pusha
push
std
sbb
and
push
adc
inc
inc
cld
mov
inc
mov
mov
test
loopne
mov
adc
in
sti
sbb
mov
loopne
addb
inc
rclb
jle
ljmp
scas
paddsb
dec
mov
hlt
aaa
xchg
mov
sub
cmpb
xor
pusha
loopne
addl
adc
movsb
add
outsb
cmp
or
mov
shlb
mov
ljmp
stos
andb
mov
jbe
jns
loopne
test
pusha
xlat
xchg
xor
inc
inc
test
pop
lret
mov
xor
fidivrs
testl
and
adc
pop
push
loopne
and
pop
addb
outsl
add
mov
cmp
mov
add
mov
add
movups
andb
push
inc
rclb
fsubl
je
loopne
xchg
add
pop
xor
adc
mov
faddl
pop
ds
xchg
imulb
std
add
mov
popf
enter
imul
lahf
mov
push
insb
mov
dec
out
test
and
arpl
cmp
outsl
daa
aad
jnp
sub
ds
add
mov
repnz
inc
inc
std
sub
out
cwtl
jp
or
add
icebp
push
add
loopne
pop
xchg
test
pusha
mov
call
mov
ljmp
sarb
and
jg
sbb
mov
jecxz
dec
mov
cmp
add
enter
pusha
mov
rolb
xor
mov
inc
imulb
pop
mov
add
inc
sub
addr16
adc
push
add
mov
jecxz
shrb
std
aad
adc
loop
dec
jbe
jbe
pushf
fisttpl
loope
inc
pusha
add
inc
int
rolb
aad
pusha
pusha
in
rcrl
aas
or
inc
add
in
out
hlt
call
pop
test
mov
rcll
popa
sub
cmp
inc
out
add
mov
aas
shl
xchg
sbb
js
push
fldcw
add
mov
pop
adc
mov
sub
jp
jle
dec
daa
xor
mov
mov
and
out
enter
jle
gs
sahf
js
addl
and
dec
mov
mov
lods
xor
mov
shl
pusha
and
push
pushf
sbb
popa
repz
push
pusha
pusha
and
in
mov
inc
lret
xor
inc
and
or
sbb
mov
rcrb
lock
sti
gs
dec
addb
jp
push
ds
inc
jnp
xor
add
rcr
aam
mov
xchg
jge
std
stos
add
daa
lahf
jnp
inc
clc
xchg
pusha
stc
add
xor
xor
mov
adc
in
aam
addb
dec
or
xchg
dec
xlat
jl
add
mov
or
jl
cli
cmpl
mov
in
add
shr
je
or
mov
das
stos
shlb
fldcw
add
sahf
jnp
stc
mov
insl
jns
mov
js
aad
cmp
adc
out
push
and
lds
lret
push
add
push
rorl
hlt
jge
cmp
push
addb
jbe
loopne
js
imul
fmuls
shrb
les
rolb
shll
js
mov
inc
pop
das
jmp
pop
sbb
mov
or
rorb
add
and
mov
mov
outsb
or
adc
pop
cli
int
pop
dec
jp
shlb
jmp
mov
shlb
shl
test
shrb
out
aam
lds
xor
mov
mov
popa
jne
mov
pusha
mov
add
enter
jmp
dec
test
add
rolb
outsb
fsubr
daa
and
add
shlb
daa
test
add
movb
adc
ss
xor
jg
aam
scas
loopne
jbe
fwait
mov
mov
sahf
and
subb
test
mov
push
pusha
and
pop
fstl
test
pop
repz
loopne
mov
or
mov
jecxz
ljmp
adc
jg
sti
popa
and
inc
loopne,pn
ret
loop
adc
in
repnz
jno
inc
pusha
add
in
jecxz
testl
add
or
lcall
call
repnz
pop
mov
cwtl
push
ja
pop
iret
imul
loopne
test
roll
dec
sub
adcb
pop
out
sub
mov
fcomi
xchg
repnz
inc
pop
repz
push
stc
shrl
xor
shlb
fisttpll
test
loopne
add
mov
in
std
xchg
arpl
loopne
ficompl
pop
cmpsb
inc
subb
dec
xchg
jo
mov
mov
inc
mov
pusha
loopne
sbb
cmp
and
cltd
movsl
add
sub
add
mov
push
add
cmpsl
xor
or
add
hlt
adc
mov
add
mov
fwait
xchg
fidivl
dec
pop
mov
add
mov
inc
mov
mov
add
dec
lds
dec
jecxz
daa
xor
daa
test
xor
movsb
inc
and
lcall
jecxz
and
lea
shlb
gs
in
fs
jmp
sbb
ljmp
inc
inc
xchg
or
and
sbb
xlat
loop
adc
fwait
sub
test
add
sub
daa
sub
movsl
push
mov
add
mov
mov
or
shlb
sub
rclb
lret
fbld
enter
add
inc
ss
clc
add
inc
in
repnz
and
loopne
and
daa
or
inc
pop
movsl
test
ljmp
cmp
fldt
cld
add
lret
int
pusha
push
jnp
adc
sti
loop
mov
popf
cli
adc
pop
push
cwtl
mov
cmp
fcomip
cmpsl
push
cli
test
mov
out
je
lahf
stc
lret
sub
pusha
inc
mov
xchg
push
mov
nopl
dec
outsb
xchg
inc
xchg
pop
inc
push
mov
push
xlat
push
xchg
bound
sti
sub
mov
jg
das
inc
pop
fadds
push
xor
xchg
test
xchg
pop
loop
and
pop
add
mov
add
loopne
and
xchg
mov
mov
cmpsb
inc
or
jg
into
sbb
es
inc
add
loopne
mov
icebp
mov
loop
addb
pop
lret
pop
fstps
enter
insl
sub
sbb
rol
sub
sub
cmp
mov
inc
xchg
mov
imul
sbb
or
add
loopne
jmp
nop
adc
add
push
lods
in
int3
insb
mov
jmp
xor
aas
fdivl
aaa
scas
shlb
in
xchg
pop
mov
mov
jmp
jae
je
rclb
popa
adc
push
and
add
mov
jecxz
loop
loop
in
in
pop
repz
jno
call
sub
add
pop
or
inc
xchg
xor
sub
inc
mov
inc
imul
mov
mov
pusha
pusha
dec
add
test
inc
cmp
xchg
ja
insb
rep
jmp
daa
jns
into
scas
fdivrp
inc
mov
jl
addb
jb
mov
shlb
aad
hlt
sahf
add
jns
pop
pop
xor
jle
andb
ss
pop
pusha
cmp
loopne
inc
pop
pop
or
pusha
mov
cmpsb
mov
les
sbb
mov
rolb
inc
into
test
mov
les
or
cli
fadd
mov
pusha
add
mov
add
jle
loopne
mov
cmp
mov
push
xchg
fcmovbe
add
loopne
mov
movsb
mov
inc
dec
xor
test
pusha
mov
shl
and
xchg
xlat
xchg
shl
out
mov
push
xchg
sub
pusha
rcl
out
in
jns
inc
add
mov
and
fcmovb
dec
mov
imul
les
shrl
pusha
add
jae
mov
mov
movsb
inc
mov
mov
xchg
pusha
sarl
dec
stos
or
imul
jmp
loopne
shl
sub
cmp
mov
clc
sub
das
test
push
push
cmp
or
pusha
mov
push
addr16
or
and
aas
cmp
push
cmpsb
inc
and
sub
in
and
add
and
xchg
addl
jnp
addb
add
iret
call
dec
dec
or
pop
leave
repz
sub
add
adc
add
addb
mov
pusha
mov
out
adc
pop
sub
mov
pusha
mov
jle
call
cmc
test
mov
out
pop
pop
popa
cmp
testl
addb
jno
fdivrs
sub
xorl
inc
in
hlt
adc
pop
mov
cmp
hlt
mov
cmp
rcll
in
cld
mov
cmp
in
add
shlb
addb
push
out
jecxz
inc
addr16
and
or
cmc
pop
cmp
and
addb
ret
inc
add
add
add
sub
sbb
ds
pop
in
outsb
adc
loopne
nop
cld
clc
push
push
xlat
ret
nop
jge
or
add
scas
jnp
arpl
shlb
adc
arpl
and
pop
adc
mov
loopne
icebp
in
call
mov
and
inc
and
mov
inc
ss
jns
adc
pusha
sbb
add
rol
adc
shll
lock
insl
std
mov
push
inc
insb
mov
pusha
inc
or
and
sub
scas
inc
add
mov
fistl
loopne
imul
xchg
cli
xchg
xchg
mov
xor
dec
lds
rcrb
repz
mov
inc
xchg
fcompl
pop
mov
push
mov
sub
loopne
mov
mov
cmpsb
inc
and
mov
das
ja
jle
insb
and
imul
jo
mov
sbb
dec
xchg
cmp
jmp
scas
pushf
jo
rcr
repz
rcrl
jmp
loopne
pop
sub
mov
movsl
lods
lods
mov
add
push
rolb
add
jns
dec
iret
xchg
lds
jp
mov
inc
loopne
jmp
repnz
cmp
loopne
jne
add
aas
scas
outsb
fxch
rorb
push
outsb
out
add
sbb
mov
add
mov
aam
mov
fstl
push
and
inc
xchg
mov
loopne
pop
dec
and
jb
pop
cmp
stos
rol
std
loope
in
xor
hlt
fs
rolb
dec
xchg
gs
xor
sub
rcr
push
and
xor
adcl
add
push
and
fptan
inc
pushf
addb
std
aam
repnz
xchg
insb
adc
mov
cli
or
and
adc
inc
lret
shlb
roll
out
imul
push
inc
jp
ja
loopne
inc
mov
pop
cmp
sub
orb
pushf
cmp
lea
mov
adc
out
leave
xor
imul
imul
mov
jae
addr16
lea
iret
in
mov
sbb
or
add
loop
mov
pusha
pusha
fidivl
push
mov
cld
ret
inc
sub
outsb
loope
push
jns
in
in
adc
aad
and
inc
and
fnstenv
sub
xlat
lods
mov
pusha
addb
pusha
jnp
xchg
pushf
or
pusha
enter
xor
shll
add
jae
leave
fdivrs
ss
pushf
inc
jge
out
pop
and
xchg
in
cld
rcr
inc
in
pop
imul
sbb
les
pop
adc
addb
xorb
int
rclb
mov
jmp
mov
jnp
mov
movsl
lock
add
aas
sub
and
rol
and
test
aam
jge
cmp
push
and
loopne
aas
and
jbe
fxch
out
hlt
addr16
xchg
jo
sbb
cld
lret
push
jno
stos
loopne
cld
cmpl
xor
and
mov
sbb
fstpt
xchg
xchg
jl
mov
xchg
or
add
shlb
test
loopne
push
dec
mov
shrl
sbb
and
inc
pusha
adc
xchg
int3
adc
xchg
aas
pop
dec
sbb
pusha
and
fcos
hlt
repnz
inc
and
arpl
scas
and
das
int
mov
inc
xchg
dec
adc
cmpl
adc
cmc
and
rolb
sar
push
lahf
movsb
addb
inc
xor
aas
inc
sbb
xor
scas
pusha
rclb
pusha
orb
and
fs
dec
fwait
ja
add
popf
test
hlt
dec
xchg
inc
and
lea
mov
mov
jl
inc
les
movsb
loopne
std
mov
gs
xchg
mov
add
add
mov
ljmp
aas
sbb
fnstsw
das
imul
mov
xchg
imul
xchg
mov
lcall
xor
mov
add
mov
push
shl
add
loopne
inc
push
in
sbb
xor
jns
loopne
and
cmp
mov
jnp
pop
inc
pop
pop
fstpl
je
gs
inc
adc
js
mov
dec
mov
and
sub
fimull
and
testb
lahf
or
mov
repnz
and
bound
xor
ds
and
loopne
pop
fcmovnbe
xor
pop
cmp
mov
mov
js
popf
mov
loopne
into
test
and
pop
xlat
add
add
mov
loopne
and
loopne
pusha
sbbb
dec
push
loopne
or
xchg
mov
dec
std
dec
loop
cmp
mov
subl
mov
sbb
inc
loopne
jno
and
icebp
testb
gs
imul
xchg
add
mov
rol
mov
pop
mov
mov
ja
pusha
or
lcall
cltd
aam
int
imul
xchg
lock
stc
xchg
cmp
cmp
sbb
sbb
sub
shl
fucom
mov
dec
aas
rcrl
int
andb
xchg
fwait
jp
mov
push
mov
inc
idiv
add
loopne
pop
jb
jns
mov
inc
subb
adc
pushf
aad
pusha
inc
jae
inc
mov
scas
cmp
addb
cmpsb
loopne
sahf
lods
rol
movzwl
ds
cmc
push
mov
lahf
icebp
addb
xchg
test
pusha
pop
jbe
add
mov
add
cmpsl
hlt
mov
and
addb
add
inc
loop
inc
sbbb
hlt
adc
mov
and
sarb
loopne
cmp
call
loop
in
lods
mov
clc
sub
pop
add
dec
pop
pop
mov
and
sti
dec
xor
add
test
adcb
loop
lcall
xchg
lods
movsb
pusha
pusha
push
inc
sub
andb
out
jl
mov
xor
and
loopne
daa
cwtl
pop
sub
dec
imul
mov
loope
in
insb
movsb
pusha
and
stos
push
sbb
loopne
pusha
cmpb
xor
test
pusha
loopne
frstor
shl
gs
test
vorpd
inc
mov
inc
xchg
mov
push
push
andb
lcall
jnp
loopne
xor
pop
mov
andb
into
int3
lock
arpl
lods
and
xchg
xchg
and
je
dec
push
pop
mov
aam
fs
subb
and
or
pusha
mov
and
add
push
testl
mov
das
movsl
insl
pop
mov
mov
cmp
jo
cmp
dec
outsl
adc
cltd
faddp
xor
ret
push
loop
pusha
inc
xchg
or
inc
adc
and
lcall
mov
inc
pusha
lcall
dec
pmulhuw
loopne
adc
mov
ljmp
std
adc
add
enter
or
inc
mov
loopne,pn
mov
and
hlt
popa
ss
xchg
mov
ror
xchg
xor
cs
jbe
mov
arpl
add
rcl
push
add
rolb
pop
push
sub
and
scas
in
sbb
jmp
jo
xchg
cmp
mov
inc
hlt
lahf
dec
add
inc
fmulp
mov
dec
pusha
pop
inc
inc
jbe
or
xchg
mov
ret
mov
add
andb
pop
sub
mov
and
mov
stos
mov
mov
enter
cmp
test
inc
icebp
aas
inc
dec
mov
stc
enter
or
push
xor
movsl
add
jbe
add
pusha
pop
out
push
adc
fcomi
loopne
sbb
mov
shl
sti
sub
inc
push
out
fdivrl
mov
add
scas
pusha
cmpb
in
jg
or
scas
imul
ja
inc
dec
enter
inc
push
push
les
and
in
add
and
xchg
aas
jecxz
push
popf
popf
pop
sub
in
pop
insb
movsl
cld
or
rclb
out
mov
std
and
sbb
jp
inc
subb
das
lods
add
xor
mov
add
inc
adc
outsl
mov
sub
sbb
cmp
in
idivl
add
pop
popf
pusha
clc
je
and
jle
inc
loopne
push
xor
add
push
lds
sbb
sti
sahf
shrb
loop
shlb
rolb
loopne
sahf
ret
shrb
rcrb
mov
test
and
lea
sti
lods
mov
test
add
and
outsl
inc
cmp
notl
mov
popf
dec
mov
stos
inc
and
pusha
rolb
rcrb
addb
ret
test
cmp
aaa
fsubr
pop
mov
sbb
jne
xor
jno
loopne
andb
mov
sbb
mov
inc
bound
sub
cltd
jno
das
pop
in
ret
inc
dec
dec
insb
aam
mov
dec
xchg
pop
xchg
add
cli
mov
pop
xchg
mov
stos
add
mov
mov
cmp
adc
xchg
push
mov
and
insb
and
add
ljmp
inc
push
inc
loopne
xchg
in
cli
ret
sub
pusha
in
or
add
pusha
sbbb
fucomip
xor
add
cwtl
jg
mov
push
inc
add
cli
inc
xchg
mov
add
shlb
repz
push
sub
fdivrs
aam
jno
jecxz
mov
push
mov
mov
adc
xchg
or
subb
loopne
adc
je
enter
dec
cmp
mov
add
loopne
or
inc
addr16
pusha
rclb
addb
int
fstps
pop
lret
addb
push
adc
cmp
dec
je
jg
xchg
call
sub
cmc
xor
pop
pop
aad
mov
andb
jne
popa
pop
mov
adc
test
mov
jge
jae
sub
adc
and
inc
inc
push
mov
mov
xchg
test
and
insb
sti
sub
add
adcb
and
das
mov
pushf
incl
pusha
fwait
jg
cmp
pop
and
push
js
xor
inc
loopne
pop
cmpsb
pusha
rcrb
pusha
mov
mov
sti
sbb
jge
sbb
lods
xor
dec
mov
dec
push
adc
mov
add
pusha
inc
lret
daa
xor
push
loopne
ljmp
pusha
rolb
arpl
shl
jle
pop
andb
rcrl
in
cmp
pusha
imul
js
popl
cli
notl
sbb
pop
mov
jge
out
mov
dec
cmc
lea
loopne
pop
sub
adcb
sahf
out
cmc
mov
mov
loopne
xchg
imul
sbb
pop
jbe
loopne
jns
test
and
mov
out
or
ret
pop
stc
xchg
inc
sub
add
mov
nop
sbb
fs
popa
mov
inc
sar
push
ljmp
aaa
ret
inc
mov
stos
add
rcr
idiv
fs
aam
xchg
scas
call
bound
mov
inc
loopne
aaa
inc
bound
insb
mov
les
pusha
sbb
addb
sbb
xchg
std
call
push
mov
pusha
sub
jl
add
test
andb
inc
or
inc
stos
adc
inc
subb
cltd
mov
xor
sahf
out
stos
shl
mov
out
std
sub
jl
add
xorb
call
gs
add
loopne
inc
rorb
add
xchg
rolb
pop
scas
adc
mov
rolb
js
mov
test
addb
inc
inc
dec
push
mov
aaa
jmp
inc
cltd
aam
negb
gs
jne
mov
pop
in
cmp
cld
sbb
adc
fnstcw
or
mov
push
pop
dec
mov
add
in
imul
arpl
hlt
sbb
adc
xchg
ljmp
mov
mov
rclb
adc
lea
xchg
and
hlt
mov
loopne
in
stos
add
out
xor
and
cmp
pop
cmp
push
in
fcomps
loopne
mov
inc
mov
add
sbbb
sbbb
cltd
mov
aad
dec
aaa
mov
pusha
add
flds
inc
and
in
loope
mov
mov
add
sbbb
test
sbb
mov
lods
add
out
xor
lods
add
mov
ret
scas
jl
dec
jnp
and
pusha
inc
or
mov
jb
jl
push
mov
dec
fstpl
pcmpgtw
adc
and
cld
lcall
jae
rclb
andb
loopne
adc
loopne
dec
or
pop
test
sbb
cmp
add
addr16
das
adc
aad
arpl
pop
mov
mov
or
sub
in
push
fcmove
xchg
jge
dec
cmovno
xorb
addr16
cli
fs
xchg
js
inc
sbb
xor
in
xchg
pop
mov
shlb
push
xchg
adc
jle
mov
pop
xor
xor
xchg
push
test
jne
pop
loop
enter
inc
dec
int
mov
andb
sub
call
or
nop
imull
aam
push
add
pusha
test
inc
outsb
sysexit
jbe
ds
cmpsl
enter
repnz
inc
addb
mov
scas
loopne
push
adc
dec
sub
int3
xchg
push
mov
mov
or
loopne
or
sbb
and
pop
xchg
leave
add
mov
and
inc
inc
sub
inc
pusha
or
shll
andb
jecxz
push
inc
insl
mov
shl
aaa
mov
and
xchg
pop
je
loopne
lock
add
mov
sub
mov
das
dec
sbb
subl
sbb
mov
test
sbb
pop
test
test
scas
rclb
shlb
inc
sbbb
mov
mov
add
pusha
add
add
pusha
cld
bound
loopne
adc
andb
mov
sbb
cmc
adc
and
adcl
pop
cs
add
add
out
mov
lock
sbb
lcall
jb
mov
xor
and
aaa
out
jbe
loope
push
fcmovne
mov
shlb
into
leave
push
loopne
fistpll
adc
mov
imulb
sub
rcl
into
mov
test
and
pop
cmp
pushf
xchg
dec
pop
insb
and
pop
or
inc
rorb
shlb
cwtl
fistps
adc
add
mov
and
or
and
negl
add
sarb
andb
icebp
fdiv
mov
scas
loopne
gs
inc
xor
mov
inc
adc
shl
push
loopne
dec
sbb
jge
xchg
pop
inc
clc
pop
lock
push
xchg
dec
jbe
andb
rolb
xor
mov
inc
and
and
pusha
and
aad
jecxz
das
dec
inc
mov
sbb
add
push
sti
scas
fs
mov
add
ret
push
xchg
imull
loopne
dec
insb
xor
cmp
mov
and
loopne
or
mov
cmpsb
mov
xlat
mov
xor
adc
in
cmp
xor
and
loopne
jo
and
inc
leave
lds
and
loopne
and
cmpb
jg
cwtl
out
sub
fidivs
mov
jg
mov
add
and
fistpll
scas
test
mov
sbb
add
cltd
add
inc
lret
pop
mov
mov
cmp
mov
sbb
loopne
mov
loopne
insb
stos
lock
insl
dec
xor
loopne
stc
pop
xor
push
test
mov
and
out
rcll
cmc
mov
jns
and
pusha
js
js
decb
mov
movsl
mov
sbb
in
xlat
gs
and
jne
in
dec
insl
add
scas
mov
add
fisttpll
mov
ja
cmp
jno
ror
into
cld
jns
shlb
pusha
jne
inc
mov
push
mov
cmp
fmull
call
and
or
xchg
adc
push
inc
pop
xorl
popa
push
mov
pusha
in
imul
jp
insb
xchg
rcr
nop
andl
out
clc
or
push
mov
mov
inc
sub
adc
fisubs
and
mov
sub
in
nop
mov
xor
add
inc
add
sahf
inc
push
adc
dec
adc
ja
inc
cld
sub
add
call
fwait
in
xlat
push
fisubrs
loopne
shl
mov
rolb
stc
test
loopne
std
jmp
outsl
dec
inc
idiv
mov
inc
pushf
setno
and
add
loopne
in
fldcw
inc
rclb
cmp
cmpsl
iret
mov
btr
movl
and
inc
mov
push
std
stc
mov
add
cmpsb
loopne
pop
mov
rorb
add
enter
mov
mov
cmpsb
loopne
je
sahf
iret
sti
lods
mov
loopne
leave
xchg
out
xor
add
mov
mov
ljmp
and
mov
or
pusha
loopne
insb
xchg
or
loopne
outsl
xor
jecxz
xor
scas
pop
adc
mov
sbb
rorb
ret
clc
decl
inc
divl
pop
mov
mov
mov
lods
rolb
mov
cmp
fcomps
and
fsubrs
scas
popf
sbb
jecxz
je
rolb
xlat
push
push
std
test
sbb
and
inc
dec
inc
mov
sbb
push
lcall
ljmpw
dec
sbb
jns
adc
dec
inc
shlb
mov
out
aaa
outsl
cmc
push
fstl
lahf
mov
addb
sbb
and
add
mov
sahf
imul
inc
xor
jo
out
mov
pop
test
and
push
mov
gs
push
sti
mov
mov
icebp
test
pusha
xor
xchg
lret
xor
xchg
sub
sti
mov
shlb
test
add
and
xchg
int3
sub
xor
push
pop
sahf
ljmp
cwtl
lods
shlb
jmp
scas
shlb
les
pop
mov
add
xchg
stos
add
es
loopne
push
stos
mov
je
or
and
and
loopne
nop
ret
cs
sbb
sbb
jle
push
test
sbb
adc
mov
loopne
clc
mov
rolb
add
adc
xlat
push
and
xchg
inc
add
fs
test
xorb
fwait
jg
or
daa
test
pusha
adc
xor
add
leave
jmp
ficoml
mov
addr16
jbe
pusha
and
dec
leave
or
stc
adc
pop
push
fsqrt
insb
and
jp
xor
xlat
out
xor
shlb
xchg
outsb
xchg
clc
mov
popf
arpl
decb
and
or
pusha
mov
cld
add
add
sbb
imul
icebp
mov
rcl
stos
inc
loopne
cmp
shll
in
loopne
mov
dec
daa
mov
sti
int
push
test
fiadds
jl
mov
imul
das
xchg
mov
lea
loopnew
mov
ds
adc
daa
leave
mov
orb
shrb
xor
es
fwait
aaa
arpl
mov
xchg
in
sub
call
ret
add
loopne
pop
cld
push
hlt
lock
rolb
lods
andb
and
pop
jnp
adc
std
push
addb
add
pop
mov
inc
push
pusha
xorb
mov
xorb
jmp
pop
movsl
or
int
add
in
sbb
pop
je
jge
inc
loopne
pusha
pusha
mov
in
pop
test
inc
jg
adc
mov
loopne
in
mov
orb
andb
xchg
cs
shrb
andb
outsb
inc
mov
adc
sub
sarb
lcall
lea
sbb
push
test
cwtl
sub
sub
and
mov
mov
mov
sbb
and
xor
les
inc
xorb
pusha
pusha
clc
hlt
push
push
int3
scas
rol
mov
jnp
and
pop
xchg
xlat
dec
rcll
and
and
lds
push
lods
pusha
and
mov
dec
fsts
bound
jae,pt
and
sbb
test
add
and
addr16
loopne
loop
shl
ret
enter
xor
and
cmp
in
pop
push
loop
mov
addb
push
bound
cmpsl
xor
mov
dec
adc
push
loopne
je
mov
lret
adc
add
andb
gs
or
inc
pop
ret
stos
lahf
mov
lea
add
shl
pushf
dec
sbb
in
mov
xor
and
inc
mov
andb
mov
mov
test
mov
test
scas
mov
adcl
test
dec
cmpsl
outsb
dec
mov
cmpl
mov
loopne
xor
adcb
mov
xchg
adc
inc
les
enter
shlb
lods
rol
jno
mov
pop
jge
dec
pushf
cmp
andb
addb
jnp
ret
sahf
lods
and
mov
fsubrl
push
pusha
cwtl
sti
fistl
into
mov
or
fidivrl
pop
push
mov
jmp
mov
inc
mov
and
cmp
and
push
hlt
out
pop
lahf
stc
bound
shr
stos
inc
andb
rcll
in
mov
jo
in
fadd
incb
int
mov
jecxz
testb
jne
and
and
mov
inc
and
divb
pusha
shlb
add
insl
inc
xchg
pop
leave
or
nop
in
pop
cmpsb
loopne
push
rolb
add
fcoml
dec
call
pusha
bound
scas
andb
mov
add
hlt
xor
jns
stc
cld
stos
mov
and
sbb
add
fs
pop
inc
arpl
inc
out
test
sub
sub
rorb
arpl
xor
adc
inc
pushf
push
call
testb
rolb
test
sbbb
test
loopne
inc
loop
stos
jle
fwait
aam
or
ret
or
and
rolb
cmp
jne
mov
xlat
pop
xchg
insb
xlat
jbe
inc
lods
inc
loopne
insb
icebp
dec
jo
imul
lret
loopne
adc
pusha
nop
add
shrb
mov
mov
rolb
lcall
mov
mov
js
shlb
add
rcl
jp
adc
lds
dec
lahf
stc
jno
inc
mov
sub
adc
inc
test
push
or
sbb
adc
loope
imul
cmp
filds
add
dec
lods
int3
rclb
addb
mov
test
add
mov
push
dec
stos
inc
and
dec
xlat
mov
imul
ljmp
inc
mov
hlt
xchg
mov
mov
push
sbb
addb
andb
leave
push
sarl
jmp
mov
inc
fs
add
fsubs
pop
test
mov
jmp
xchg
lock
push
adc
inc
inc
adc
in
sbb
pop
push
pusha
rcrl
and
iret
mov
pusha
sbbb
xlat
mov
pop
xor
clc
or
dec
mov
dec
lret
mov
or
xor
pop
xor
lea
mov
mov
test
add
xchg
pop
cmc
mov
add
pop
out
add
or
loopne
xchg
add
subb
jge
push
pop
cmp
cld
ds
lods
rolb
xchg
ror
inc
cmp
int
and
loopne
sahf
hlt
js
sub
mov
lret
jl
mov
popf
xor
adc
xlat
dec
inc
mov
xor
pop
aad
mov
cmp
sub
jle
jb
mov
enter
sbb
push
add
rolb
fmuls
inc
jp
mov
fldl
pop
xchg
jecxz
pusha
mov
ljmp
dec
movb
and
in
inc
fdivrs
enter
ret
jb
adc
movsb
inc
inc
add
rol
popf
and
pop
scas
adc
ret
add
shlb
fs
mov
pusha
psubd
mov
out
pop
scas
and
inc
jb
pusha
pusha
inc
mov
sbb
fcoms
mov
outsl
bound
int
xor
lcall
lds
xchg
rorb
aaa
mov
mov
inc
pop
fcom
dec
out
rcrl
leave
aad
jo
xchg
jnp
push
pusha
loopne
lret
mov
inc
cmp
xor
or
and
lds
inc
loopne
stos
and
or
add
pusha
out
xchg
dec
rcrl
ljmp
pusha
add
inc
sub
shrb
dec
pop
cli
lret
sarb
sbb
jno
mov
shll
push
inc
out
and
add
daa
pop
adc
loope
and
je
xchg
lock
fimull
xor
add
adc
adc
aas
iret
int
jae
imull
add
bound
dec
xchg
loope
stos
mov
sub
cmp
loopne
test
sahf
insl
gs
mull
mov
sub
add
int
les
je
gs
mov
loopne
push
xor
mov
enter
into
fcompl
and
adc
sub
inc
xor
mov
test
inc
push
cmp
push
aas
sub
add
dec
cmp
and
or
andb
jno
xchg
mov
fildl
push
scas
add
inc
enter
push
loopne
jb
inc
add
sbb
pop
mov
sbb
cli
xchg
fdivrp
movsl
lea
inc
mov
add
xor
inc
mov
inc
sahf
jmp
or
loopne
push
cmpsb
andb
add
test
lahf
mov
add
or
fwait
xchg
out
jnp
lcall
and
rcrl
push
xchg
push
jne
and
and
inc
push
addb
jnp,pt
lcall
sbb
pusha
ja
outsb
gs
imul
rolb
mov
lret
xchg
or
and
jbe
add
mov
test
lods
loopne,pn
and
inc
lret
jl
addb
daa
iret
test
lret
mov
and
pusha
mov
dec
or
sbb
icebp
loop
xchg
subb
pop
or
inc
add
leave
and
add
mov
and
add
je
fbstp
cmp
mov
mov
inc
push
flds
and
scas
iret
stc
icebp
sub
loopne
fidivrl
jns
scas
push
loopne
cmp
pushf
fs
and
fbstp
ficoms
inc
inc
mov
pop
cmp
xlat
mov
add
jae
adc
ja
ret
insb
dec
pushf
inc
bound
pusha
xchg
in
testl
xchg
and
dec
dec
jecxz
loopne
cld
cmc
mov
push
fs
addb
pusha
outsl
in
test
loopne
mov
inc
pusha
dec
rorb
inc
inc
sbb
loope
sbbl
ror
push
aas
pop
pop
loop
test
inc
leave
nop
or
jne
push
jcxz
mov
inc
xchg
insb
cmpsb
inc
loopne
sbb
push
rolb
fucomp
dec
add
mov
push
ret
rcl
push
mov
push
stos
mov
add
xlat
pop
lods
out
ja
stc
je
addr16
mov
push
andb
pop
or
sub
loopne
repnz
add
or
sbb
xchg
push
and
shl
leave
xor
jns
dec
andb
push
stos
sbb
out
inc
loope
push
out
mov
pusha
mov
mov
imulb
inc
int
push
addb
fcmovnbe
pop
ret
jle
mov
inc
inc
into
inc
scas
and
fwait
stc
outsb
jo
shll
mov
mov
test
hlt
fildl
mov
test
add
mov
push
dec
sahf
add
pop
xchg
frstor
rolb
xor
or
jl
rolb
jg
mov
outsl
inc
pop
adc
xchg
lret
and
xor
xchg
inc
jo
loop
mov
out
pop
pop
xchg
test
imul
adc
pusha
repnz
movsb
mov
adc
add
andl
mov
scas
and
pusha
push
adc
pop
lcall
cmp
push
loopne
sbb
test
sub
inc
sub
jecxz
das
push
xor
add
inc
dec
icebp
incl
lahf
inc
jne
nop
mov
and
orb
andb
loope
insb
jl
mov
addb
sub
fwait
loopne
mov
ret
push
les
xchg
pusha
jl
mov
cs
mov
cmp
jl
push
and
or
inc
xchg
ss
pusha
loopne
xor
add
shl
andb
loopne
imul
roll
push
in
mov
add
pusha
cmp
sbb
pusha
addb
xchg
or
cli
pop
aam
fcoml
fldcw
pusha
orb
fld
fadd
cmp
add
and
pusha
je
push
in
mov
jp
ja
das
mov
add
or
mov
mov
add
jo
add
or
in
mov
push
jmp
dec
shl
sub
adc
inc
add
mov
xchg
xchg
scas
in
or
mov
push
mov
pushf
subl
cmp
dec
aaa
lods
pusha
inc
inc
nop
inc
sbb
rcr
jl
mov
clc
pop
cmp
fisttps
ljmp
loopne
pop
add
inc
mov
and
inc
pop
xchg
mov
add
sbb
inc
jne
scas
dec
out
out
outsb
add
int3
enter
add
or
repz
test
outsb
sti
jecxz
push
pop
out
sbb
and
mov
and
add
inc
shlb
out
sub
pusha
in
imul
rolb
test
pushf
pop
gs
mov
popa
f2xm1
push
icebp
lahf
mov
pusha
aad
rolb
mov
add
cmp
mov
mov
ds
shl
add
cmp
loopne
loopne
inc
and
mov
pusha
mov
pusha
and
xchg
push
out
andb
rolb
push
add
cmp
sbb
std
sub
inc
mov
bt
and
in
jno
stos
das
dec
cli
mov
iret
inc
push
sbb
insl
jne
and
in
xchg
jp
inc
test
pusha
sub
ja
mov
add
out
rorb
add
and
jbe
mov
ret
ffree
addr16
pusha
mov
addb
rep
inc
shlb
xchg
dec
and
cmp
addb
or
loopne
push
fsts
xchg
outsl
pop
das
out
js
mov
pop
dec
mov
add
out
lcall
cwtl
out
adc
divl
das
std
sub
or
ror
call
xchg
inc
mov
mov
lock
inc
inc
loopne
inc
or
iret
push
aas
arpl
hlt
cld
or
loope
lds
shlb
shl
xor
dec
or
mov
inc
dec
xchg
daa
or
xor
mov
out
mov
pusha
data16
inc
mov
mov
mov
add
inc
pusha
aas
and
mov
mov
sbb
in
mov
inc
or
add
inc
push
mov
pusha
cli
lcall
push
jp
mov
arpl
xchg
sbbl
sbb
js
and
cmpsl
and
inc
push
packuswb
xchg
cmp
mov
push
add
insb
dec
addb
and
loopne
push
and
pop
inc
and
popa
fadd
sarl
stos
inc
sbbl
adc
inc
addr16
adc
in
loopne
inc
insl
or
rcrb
nop
stos
sbb
or
loopne
and
jg
cmp
scas
jo
movsl
xor
adc
repnz
incl
push
clc
ljmp
push
inc
out
push
mov
add
popf
ret
les
sbb
lret
mov
add
orb
mov
cld
ja
adc
jecxz
and
xor
adc
push
mov
pop
jns
push
ret
hlt
mov
loopne
dec
sahf
sbb
mov
test
jge
xor
lret
add
loopne
popa
int3
jl
addb
pusha
mov
out
push
test
out
mov
hlt
test
sbbb
test
pusha
mov
loopne
outsl
outsb
xor
repz
orb
rcr
loop
scas
bound
and
inc
mov
cmp
loopne
inc
loopne
fistps
inc
xchg
sub
add
mov
out
or
push
rorl
cli
mov
les
sti
pop
int3
pop
adc
pop
xor
sub
add
andb
jmp
lcall
sbb
jbe
pop
lods
pusha
mov
int3
sahf
xchg
pop
ss
mov
add
orb
popa
xchg
dec
push
repnz
pop
clc
xchg
pushf
pop
mov
add
iret
addb
and
enter
pop
addb
xor
ret
push
rcrl
bound
cwtl
mov
add
in
and
shrb
push
push
mov
lds
pusha
and
fwait
subl
and
pusha
lock
pusha
rolb
loopne
fimull
cmc
lcall
ficoms
setb
dec
sbb
and
mov
inc
mov
shl
inc
pushf
mov
addb
inc
sub
inc
jbe
xchg
sub
loopne
dec
test
and
cmpsl
mov
add
pushf
or
fucom
mov
rcl
stc
int
int3
rcr
push
out
and
mov
sub
mov
mov
dec
les
daa
jp
sarl
adc
adc
sbb
ss
rolb
pusha
js
or
jb
fwait
xchg
pusha
sub
das
les
aad
imulb
icebp
arpl
daa
imul
mov
loop
in
out
and
adc
mov
mov
shlb
xor
mov
and
mov
addb
mov
pop
stc
fmul
lret
add
andl
pop
cmpl
js
jmp
rolb
pusha
shl
add
call
and
stos
inc
shr
popf
in
or
mov
mov
mov
aaa
pop
scas
mov
hlt
cmp
push
xor
insb
sbb
inc
xchg
mov
sbb
out
ret
sub
inc
dec
nop
out
xchg
iret
xor
jl
jbe
jecxz
cmpsb
shlb
loopne
push
je
movsl
inc
int3
sub
pusha
mov
inc
loopne
push
sub
ret
pusha
inc
add
mov
xorb
sbb
mov
jne
insb
xchg
jl
clc
lods
and
loopne
and
dec
pop
aad
mov
or
lods
xor
add
out
lock
iret
loopne
push
push
mov
enter
mov
add
sub
andb
pop
outsb
bound
addb
stc
add
loopne
loopne
pop
mov
and
cmp
xor
push
cmc
cwtl
or
ret
sbb
mov
in
loopne
lea
xchg
jnp
xor
fisttpl
add
dec
shlb
test
rolb
ss
pusha
gs
incb
call
les
dec
mov
ds
pop
or
aad
insb
call
rol
push
imulb
add
and
xchg
iret
repz
cmpsl
lret
or
rcrb
and
and
jmp
movsb
and
add
mov
jle
hlt
cmp
ret
lcall
inc
cmpsl
lds
pop
sub
stos
add
inc
xchg
jecxz
cmp
pop
mov
sub
imul
and
leave
aas
call
inc
and
popa
jns
mov
sbb
insb
lahf
inc
jg
rolb
dec
jmp
insl
mov
jg
add
popf
jbe
out
push
mov
jno
das
mov
pusha
nop
jecxz
into
addb
aas
mov
jnp
in
rorl
mov
mov
stos
add
jae
loopne
in
xor
adc
adc
pop
cwtl
sbb
pop
mov
mov
loopne
jno
mov
push
jmp
sbb
loopne
leave
jns
shll
daa
fs
stc
adc
add
pusha
sbb
jno
jns
fwait
stos
mov
jle
pushf
pop
cmp
mov
test
shlb
mov
add
add
loopne
pop
pusha
test
inc
repnz
lea
repz
shr
gs
mov
rclb
cs
lahf
mov
inc
gs
inc
pop
push
loopne
popa
inc
jne
or
adc
and
popf
push
and
xchg
mov
xor
push
gs
pusha
addb
addr16
cwtl
dec
jp
bound
mov
cmp
xor
add
int
add
mov
out
fsts
inc
rcrb
and
add
shlb
insl
inc
leave
rolb
add
pushf
fstpl
sbb
movsb
and
in
mov
jbe
repz
into
imul
loopne
shlb
popa
jno
add
dec
shll
shrl
jg
add
add
loopne
in
gs
or
jecxz
dec
clc
jnp
add
inc
pop
cmp
add
jmp
inc
inc
fcoml
loopne
xor
jns
jnp
les
rcrl
push
cmp
push
addb
inc
cmp
popf
ja
mov
pusha
add
push
std
fidivl
mov
adc
or
fsubp
sar
icebp
fwait
sahf
add
mov
insb
das
les
push
add
loope
jo
and
add
out
out
mov
mov
xor
in
pop
cmp
lods
mov
add
fcoms
int
jg
scas
loop
repnz
dec
cld
mov
in
inc
pusha
lret
jnp
inc
sarw
call
xchg
out
insb
add
sbb
nop
ja
lds
add
in
rcll
adc
ss
add
dec
sub
lods
shl
push
and
movsb
addb
pop
push
rcrl
push
out
inc
mov
mov
rorb
enter
sub
inc
into
pop
inc
aaa
and
pusha
and
sub
inc
add
inc
adc
xchg
aas
out
xchg
outsl
inc
dec
push
and
addb
xchg
pushf
jmp
repz
shrb
mov
fstl
pop
xchg
test
loopne
push
loopne
sahf
bound
push
xchg
in
inc
push
inc
cmpb
andb
rolb
sbb
ds
shrb
ret
and
pusha
std
mov
add
pusha
std
lock
pop
jo
xor
je
dec
ja
jle
and
lea
inc
inc
cmp
loope
das
mov
and
mov
or
orb
mov
pcmpeqw
jg
mov
pop
or
inc
inc
and
pusha
xor
push
ror
xchg
into
mov
loopne
inc
fsubrl
scas
mov
add
loopne
fsts
sbb
inc
dec
sti
mov
and
and
arpl
cmp
push
pushf
and
inc
cli
dec
push
pushf
push
mov
inc
sub
mov
push
mov
and
arpl
test
sbb
imul
xor
cmc
sbb
push
hlt
stc
jb
jmp
rcll
pop
mov
cmp
cld
adc
mov
popa
std
imul
add
push
sub
mov
orb
dec
xchg
cmp
andb
fucompp
mov
dec
pop
insb
pop
add
nop
jo
add
pop
pop
les
inc
cwtl
and
add
cmp
xor
sbb
sbb
shlb
mov
sub
add
sub
rclb
idivl
push
lods
cmpsl
std
and
add
pop
mov
cmp
lds
mov
xchg
mov
pop
dec
xchg
stc
aaa
push
xor
lret
add
loopne
pop
cmp
xor
rolb
arpl
shlb
add
loope
and
cs
rorb
pusha
nop
adc
shll
xor
pop
add
pusha
mov
mov
xchg
inc
dec
jno
add
add
pop
icebp
fiaddl
enter
inc
popl
jbe
fucomip
push
andps
and
pop
movl
add
push
rcrl
mov
add
xorb
jmp
adc
loopne
pop
mov
pop
sahf
xchg
lcall
int3
stos
mov
into
divl
pop
popa
lods
xlat
imul
mov
int3
mov
incl
loopne
scas
inc
enter
orb
movb
cmpsb
andb
pusha
test
mov
pusha
pusha
inc
es
jge
ljmp
movsl
or
ret
and
stos
loopne
adc
fwait
cmpsb
loopne
adc
adc
cwtl
mov
icebp
cmp
cld
int
rolb
pop
js
ret
add
and
sbb
jge
cmpsb
pusha
add
out
jmp
rclb
ret
mov
orb
mov
call
call
fmuls
inc
loopne
or
stos
hlt
add
add
mov
xor
rcll
shlb
pop
shrl
or
and
out
lds
mov
enter
lods
sbb
sub
and
add
mov
adc
sbb
in
lock
xchg
icebp
fistps
pop
cmp
sbb
jp
loopne
stos
fdivrp
sub
pusha
sbb
sbb
mov
cld
aas
aaa
and
lahf
mov
mov
negb
hlt
jnp
outsl
outsb
int
jmp
inc
shr
mov
push
cmp
jge
and
lret
loopne
or
push
cli
xchg
dec
mov
ret
ss
cli
xor
clc
jnp
in
xor
addb
inc
dec
inc
pop
jle
cwtl
and
mov
test
inc
cmc
mov
mov
mov
inc
mov
xchg
adc
fsubrp
push
hlt
mov
cmp
add
es
pusha
sbb
loopne
inc
add
dec
addb
xor
int
stos
inc
adc
movsl
arpl
pusha
mov
andb
inc
pusha
fistl
mov
push
cli
rorb
in
test
pusha
cmp
fcom
stos
cli
pushf
jns
or
inc
and
insb
mov
sahf
dec
je
and
das
jb
mov
fisttps
pop
mov
mov
rcll
sub
loopne
in
mov
lcall
xor
adc
sbbl
pusha
jle
shlb
add
scas
hlt
pop
mov
pop
outsb
imul
mov
js
clc
pushf
mov
shl
pop
repnz
rclb
and
push
push
scas
fucomip
fnstcw
gs
dec
pop
xor
mov
add
sbb
jge
jp
add
jns
jo
push
and
mov
jb
lahf
lds
and
adc
inc
cli
pop
rcll
das
leave
paddq
clc
pop
rcr
mov
jle
loopne
dec
inc
mov
test
push
jns
aas
jo
sub
inc
jbe
push
mov
lds
dec
push
pop
add
shll
xor
aam
andb
dec
ds
sbb
lret
in
fisubs
and
aas
negl
pusha
pusha
xchg
enter
repz
pop
cld
cmp
adc
add
or
loopne
ret
or
aad
or
inc
cmp
mov
mov
movsb
mov
push
mov
pop
repz
and
sbb
jg
xor
inc
mov
lods
pusha
shl
mov
mull
pop
mov
leave
jo
clc
ljmp
cld
das
inc
aad
ds
jecxz
push
and
pop
inc
fidivrl
mov
push
repz
sub
mov
sarb
add
cmpsb
inc
mov
sub
jbe
mov
xor
mov
inc
out
cmp
cmp
and
test
add
add
in
and
jno
xor
cmpsl
aam
rolb
addr16
sti
notb
add
mov
ja
mov
test
jnp
mov
sub
loopne
call
push
mov
movsl
add
into
scas
and
inc
fcoml
cli
shr
cmp
sti
pop
dec
xchg
and
pusha
notb
outsb
int3
or
and
iret
adc
and
xchg
lods
mov
and
and
loopne
ljmp
imul
sahf
call
rolb
sbb
inc
addr16
shrb
orb
add
fiaddl
mov
inc
pushf
daa
sar
rolb
lret
popa
or
sub
inc
std
repnz
jge
hlt
loop
rorb
sub
imul
mov
and
jae
sub
lds
inc
shrb
xchg
mov
mov
addr16
sub
mov
adcb
mov
inc
leave
add
inc
pop
mov
add
movsl
cmp
cmc
test
out
push
pop
loopne
jge
sti
dec
loopne
popf
mov
mov
mov
pop
sbb
and
jl
inc
pusha
push
repnz
aaa
cmovs
iret
mov
addb
push
xlat
adc
inc
jne
pop
aaa
std
dec
lods
mov
or
inc
stc
add
mov
and
sbb
xchg
loope
jmp
mov
shlb
scas
mov
orb
andb
lea
daa
dec
xlat
cmp
and
lahf
xchg
inc
and
andb
inc
jge
jno
stc
xchg
cmp
xor
xor
fstps
xor
les
sbb
mov
adc
inc
lods
pusha
inc
pop
jmp
jp
add
in
decl
and
rcrl
mov
and
cmp
xor
jmp
inc
loopne
mov
into
sub
pusha
mov
iret
fmull
and
and
inc
outsl
add
add
cs
add
bound
push
icebp
cmpsb
loopne
push
adc
rol
call
lret
mov
inc
mov
inc
xchg
fwait
xchg
pusha
cmp
xor
int3
hlt
and
int
je
mov
and
nop
adcl
insb
ffree
and
add
scas
iret
push
add
int
loopne
pop
push
dec
les
mov
add
mov
jo
orl
loopne
rcrl
icebp
stc
cmp
mov
loopne
xchg
ret
add
int
and
adc
andl
mov
adc
loopne
cmp
out
lock
jae
std
mov
lds
sub
inc
xchg
xchg
add
and
fiadds
mov
lods
ljmp
inc
rcrb
js
loopne
inc
add
cmp
neg
pop
negb
fwait
mov
inc
nop
repz
dec
rorl
mov
shlb
push
push
pusha
adc
lea
push
lds
lods
add
jl
les
bound
hlt
insb
inc
dec
shl
int
push
cmp
sub
cmpb
lcall
iret
lahf
sbb
mov
pusha
and
in
pop
daa
dec
dec
bswap
pop
sbb
push
add
sbb
add
repz
add
ret
inc
test
sbbb
jecxz
stos
add
and
inc
fisubrl
insb
sbb
pop
testl
jnp
sub
or
add
rcrl
dec
stc
aam
test
add
push
dec
dec
or
inc
ljmp
testl
and
push
andb
and
add
popa
inc
pop
adc
test
rcrb
add
or
aaa
push
push
mov
add
mov
imul
lods
and
sbb
dec
pop
pushf
xlat
orl
mov
pusha
adc
ret
xchg
fwait
sti
insl
andb
and
insb
jle
ret
rolb
andb
sti
xorl
sub
cmpb
lods
shlb
mov
popf
addr16
sbb
lahf
nop
or
rclb
mov
inc
pusha
push
inc
loopne
test
and
mov
add
loopne
orps
mov
add
mov
jmp
andb
mov
or
pusha
ss
addb
andb
sub
jnp
mov
shl
fimuls
scas
pusha
and
mov
aam
mov
scas
loopne
mov
jne
sbb
add
shlb
lock
fwait
adc
call
push
push
xor
sub
or
jno
xor
or
pop
jmp
push
cmc
pop
add
dec
pop
sbb
shlb
pop
pop
sbb
bound
shlb
sbb
and
orb
ret
leave
test
add
outsl
adc
sub
popa
jle
sub
and
loope
mov
testb
loopne
push
aad
movsb
loopne
ds
jmp
pusha
add
or
pop
or
and
add
in
fists
pop
xchg
pop
add
mov
add
inc
sub
sub
mov
push
mov
inc
add
shll
pusha
mov
jne
and
add
loopne
jle
mov
inc
pop
mov
inc
mov
add
inc
ds
adc
add
shl
push
xchg
dec
movsl
ret
jae
inc
sbb
sar
or
xchg
jb
push
pop
xor
jg
sub
and
xchg
mov
xchg
jo
fadds
aam
or
and
in
lret
mov
addr16
into
and
inc
loopne
dec
fistpll
and
loope
and
out
vphaddubq
add
mov
mov
pusha
out
jg
cmp
out
cwtl
add
fs
pop
fldt
inc
mov
testl
loopne
leave
mov
mov
sub
add
xchg
mov
cmc
pushf
mov
mov
mov
loopne
sbb
xchg
mov
inc
add
and
rol
dec
push
addb
xor
pop
xchg
xchg
andb
shr
mov
mov
jge
adc
lahf
ror
js
and
int
push
loope
pop
out
or
add
or
and
add
rclb
repnz
pusha
mov
pusha
dec
dec
mov
inc
and
mov
or
mov
xlat
lahf
and
cmp
pusha
mov
and
cltd
out
inc
stc
push
and
dec
out
xor
shlb
movsl
mov
andb
pop
xchg
adc
lret
icebp
lock
jno
lahf
ds
loopne
shl
and
inc
xor
pushf
ficoms
mov
dec
push
push
mov
mov
mov
add
inc
ljmp
mov
stc
mov
and
int3
push
push
test
rcrb
shll
and
jns
lret
int
jae
cmpsb
inc
add
into
aam
addb
xor
sub
add
push
mov
jbe
mov
pusha
loopne
sti
mov
sbbb
pop
jbe
pop
jae
mov
test
loopne
inc
add
jns
shll
imul
addb
stc
dec
pushf
stc
inc
mov
push
repnz
xchg
aad
ss
loopne
cmp
and
pop
ljmp
or
mov
mov
out
ds
cmpsl
jno
lods
inc
ffreep
outsb
fcmovnbe
cmp
inc
stos
aam
and
movsb
mov
pop
xor
jno
loopne
push
xor
movsb
and
mov
aad
aas
xchg
jno
clc
addb
mov
push
ljmp
inc
and
out
push
jmp
sbb
pop
push
add
mov
add
add
mov
push
lea
jbe
loopne
and
add
