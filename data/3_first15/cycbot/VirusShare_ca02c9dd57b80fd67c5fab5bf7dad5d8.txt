mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jbe
jbe
jbe
jbe
jbe
jbe
jbe
mov
push
push
push
push
push
push
push
push
push
add
add
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
add
add
adc
adc
adc
add
enter
enter
enter
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fildl
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
pop
pop
pop
mov
add
test
test
test
test
test
test
test
test
scas
scas
scas
scas
scas
scas
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
add
into
into
into
into
call
call
aad
aad
aad
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
flds
add
fstp
fstp
fstp
fstp
fstp
fstp
fstp
movsb
movsb
add
lea
lea
lea
add
gs
gs
xor
lea
lea
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
js
js
js
js
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jmp
jmp
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
and
and
add
and
and
and
and
and
and
add
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
addl
addl
addl
add
mov
mov
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
adc
adc
adc
adc
adc
adc
adc
adc
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
mov
mov
mov
or
or
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
add
sbb
sbb
sbb
add
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
addb
addb
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
div
div
div
div
div
div
div
div
div
div
div
div
div
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xor
xor
add
add
add
add
adc
adc
adc
adc
adc
jmp
jmp
mov
pop
pop
xchg
xchg
rcl
add
sbb
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
add
add
addl
mov
mov
mov
mov
mov
mov
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
and
and
and
and
and
and
and
and
and
and
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
jg
jg
jg
jg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
and
and
and
and
and
and
add
add
ret
ret
ret
ret
ret
ret
add
add
and
and
and
and
and
sbb
sbb
sbb
add
iret
iret
iret
iret
iret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
aam
aam
aam
aam
aam
aam
aam
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rcl
rcl
rcl
rcl
add
out
out
out
out
out
out
out
out
out
add
popf
popf
popf
popf
popf
popf
popf
popf
xchg
xchg
xchg
xchg
xchg
xchg
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
mov
mov
mov
push
push
push
push
push
push
push
push
push
sub
sub
sub
sub
sbb
sbb
add
add
pop
pop
pop
das
das
das
das
das
das
das
das
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
add
sbb
sbb
add
add
mov
mov
add
sub
sub
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
or
or
or
or
or
or
or
or
or
or
or
add
add
popl
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
adc
adc
adc
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
add
addl
addl
addl
cmp
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
add
add
add
add
in
in
in
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ds
ds
in
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
aad
aad
aad
aad
aad
aad
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
push
add
add
or
or
or
or
add
add
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
fs
and
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmp
cmp
cmp
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
test
test
test
test
test
test
test
adc
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
div
div
and
and
and
add
add
movsb
movsb
add
div
div
div
div
div
div
div
div
div
div
addl
addl
addl
addl
add
add
add
jb
jb
jb
jb
jb
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rcl
rcl
rcl
rcl
sarb
cmp
cmp
call
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
mov
mov
mov
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
add
add
lea
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
or
or
or
or
or
or
ss
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fcmovu
fcmovu
fcmovu
xchg
xchg
xchg
xchg
xchg
adc
adc
div
div
div
div
add
aam
enter
enter
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
push
push
push
push
push
test
test
test
test
test
test
les
add
add
pusha
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
mov
incb
add
xchg
xchg
xchg
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
add
push
push
push
push
push
push
push
push
push
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
pop
pop
aam
aam
add
fstps
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
add
cmp
cmp
cmp
cmp
cmp
cmp
add
rol
rol
rol
rol
rol
push
add
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
mov
add
add
add
or
or
or
or
or
or
or
or
cmc
cmc
les
add
out
out
out
out
inc
inc
inc
inc
inc
inc
inc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
add
add
pop
pop
pop
pop
pop
pop
pop
addb
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
roll
add
add
mov
mov
add
add
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
mov
mov
mov
push
push
add
jbe
jbe
jbe
jbe
jbe
jbe
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
and
and
and
and
and
add
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
insl
insl
insl
insl
insl
insl
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
fstp
pop
pop
add
add
aas
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
leave
leave
sbb
sbb
sbb
add
sti
sti
cmp
cmp
add
rcl
rcl
rcl
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
add
dec
dec
dec
dec
dec
dec
dec
add
sldt
add
adc
adc
adc
adc
adc
adc
movsb
movsb
add
add
lret
lret
lret
lret
lret
lret
lret
lret
lret
test
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
xchg
xchg
add
faddl
add
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
addl
addl
addl
addl
addl
add
add
add
add
add
add
out
out
out
out
out
out
out
out
out
out
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
div
div
div
div
testb
dec
dec
dec
dec
dec
dec
dec
dec
add
lcall
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
filds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
xor
xor
jge
jge
jge
jge
sub
sub
sub
sub
imul
add
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
mov
mov
mov
add
add
bound
bound
bound
bound
bound
bound
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
sub
sub
sub
fstps
cltd
cltd
push
push
push
push
push
push
push
push
push
push
adc
adc
adc
adc
adc
add
xor
xor
xor
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmp
into
into
into
into
into
into
mov
mov
add
dec
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
loop
inc
and
pop
lcall
mov
or
shlb
sub
or
mov
mov
inc
test
sahf
inc
sar
repnz
pusha
sub
mov
sahf
jl
mov
push
andb
in
and
pop
nop
out
jne
jo
mov
jb
ud2
test
pusha
xchg
dec
mov
mov
inc
inc
out
push
mov
inc
orb
inc
dec
ret
and
xchg
push
add
ja
shll
adc
sbb
sbb
loopne
cmp
xchg
lds
aaa
and
loopne
fdivrl
addb
das
daa
add
push
dec
subl
add
arpl
pop
xlat
add
loopne
mov
mov
repz
mov
in
mov
bswap
sahf
xchg
enter
push
and
leave
mov
pusha
jge
add
test
cltd
xchg
int
pusha
pusha
iret
aam
xor
std
push
inc
inc
sbb
push
jnp
pushf
push
iret
sti
je
andb
sub
and
pusha
add
dec
out
jl
jno
dec
pop
testl
arpl
pop
stc
test
add
stos
pusha
mov
scas
or
xor
mov
cltd
push
mov
mov
nop
xor
mov
mov
lods
loopne
jo
pop
jp
addb
mov
and
or
sbb
push
scas
rolb
fistps
xchg
cmp
mov
add
arpl
push
sbb
lock
dec
and
loopne
xchg
xchg
aas
lahf
inc
sbb
js
add
inc
pop
xor
inc
repz
or
loopne
scas
add
mov
insb
push
movsl
insl
xchg
add
cli
ror
cmp
mov
test
add
inc
inc
push
push
adc
mov
xchg
add
jge
in
and
repz
popa
and
rorb
imul
cmp
insb
daa
inc
int3
mov
cmp
mov
and
fwait
jae
push
jl
add
inc
fldenv
loopne
adc
dec
andl
loopne
and
lods
andb
adc
popa
push
pusha
mov
shrb
insb
jmp
movsl
stc
or
sbb
mov
and
sbb
push
adc
daa
popf
rolb
shrb
dec
imulb
mov
jmp
and
pop
push
addb
jae
pop
cmp
lahf
ja
pusha
xorb
pop
iret
ror
aaa
jb
sbb
cmp
shll
jmp
bound
or
xor
add
sbb
repz
lret
jae
or
cltd
mov
inc
test
inc
adc
pushf
cmp
add
int3
ljmp
icebp
pop
fcoms
mov
rolb
push
xchg
sub
push
push
push
inc
inc
mov
inc
or
jns
and
add
and
add
in
and
mov
sbb
and
test
sub
js
aam
pop
add
push
testb
push
dec
out
repnz
push
test
xorb
mov
inc
mov
and
cwtl
mov
sbb
bound
loopne
or
inc
sbb
fsubr
int3
cmp
fbstp
ficomps
aad
outsb
cmp
adc
cmp
cltd
fsubr
push
jns
cltd
pop
dec
int3
sub
add
adc
pusha
ja
bound
pusha
sbbb
xor
or
sbbb
loope
hlt
inc
outsb
mov
rcl
fcomi
int
outsl
cltd
mov
cwtl
mov
pusha
add
sti
cmp
scas
mov
in
fcoml
dec
push
mov
sti
sub
sarl
add
andb
or
and
push
in
mov
jmp
mov
mov
mov
loopne
je
jns
enter
or
pusha
cwtl
and
movsl
mov
jge
pop
jge
lea
xchg
push
xchg
jbe
in
scas
andb
in
push
outsl
les
movsb
inc
loopne
lods
mov
mov
bound
add
push
jp
stc
adc
lea
out
loop
dec
sub
inc
popf
xor
call
popa
leave
push
xchg
adc
pusha
addb
mov
xor
xchg
xor
sbb
and
pusha
mov
adcb
jl
dec
inc
xchg
jg
push
mov
cmc
flds
adc
pop
movsb
add
popf
mov
gs
loopne,pn
dec
add
fs
pushf
jp
push
or
loopne
clc
test
sub
adcb
sbb
mov
pop
ret
lds
mov
cwtl
enter
cmp
mov
imul
dec
adc
loopne
mov
add
mov
adc
inc
push
jno
xchg
dec
out
in
negb
push
xchg
pusha
imul
pop
mov
out
cmp
pusha
loopne
cli
jp
cmpsl
cmp
daa
add
sahf
mov
jecxz
cmp
hlt
das
inc
mov
loopne
push
imul
and
cmp
mov
jns
rolb
mov
add
inc
and
mov
inc
sbb
jbe
lcall
mov
cwtl
xor
cltd
jge
push
shlb
sbb
or
addb
mov
inc
mov
pop
shl
andb
ror
xor
jp
cld
xchg
push
mov
xor
and
fistpl
popa
ficoml
pop
scas
and
dec
pop
out
jl
in
test
js
inc
push
cmpsb
pusha
add
sahf
push
add
scas
add
sub
ror
and
dec
cmp
mov
insb
pop
adc
shll
scas
into
push
aam
mov
repnz
push
inc
sbb
adc
inc
aaa
sub
leave
mov
test
in
mov
adc
add
or
and
and
inc
add
or
data16
sbb
pusha
xchg
xor
aas
or
add
fnstsw
xlat
add
push
clc
mov
pop
xchg
jmp
cmp
and
les
shlb
dec
ljmp
add
cmpsl
sub
sub
add
push
mov
addb
lcall
int
cmp
dec
stos
loopne
fdivs
rol
mov
and
shlb
inc
fmull
xchg
push
andb
outsb
int
clc
daa
cmp
xor
add
xorb
in
adc
dec
add
dec
pop
ds
call
rolb
dec
cmp
and
lcall
cld
push
xchg
adc
les
or
inc
fistps
inc
stos
mov
into
repz
mov
jg
inc
movsl
cmp
mov
cmp
sbb
stos
mov
mov
push
dec
outsl
inc
loopew
rol
fldt
loopne
inc
inc
lret
and
neg
scas
incl
rclb
dec
insl
notb
and
cmp
inc
pop
add
mov
out
mov
hlt
ret
cmp
and
cmp
add
jnp
js
dec
push
or
pusha
incb
in
pop
sub
push
cmp
pop
push
sbb
cmpb
cs
shlb
add
jne
jne
pusha
and
cld
lahf
sub
and
inc
lock
push
cmpsl
pop
cmp
lods
sub
jp
sarl
cmp
sbb
cmp
dec
in
cmp
xor
fcomi
and
pusha
pop
adc
out
popf
loop
repz
and
loopne
jmp
or
jle
adc
loope
mov
scas
dec
jge
loopne
loope
rolb
and
shl
inc
jmp
loopne
movsb
and
aas
xor
mov
add
sub
inc
jle
pop
cwtl
jo
mov
pop
out
lcall
addb
jg
test
outsb
out
stos
inc
pusha
clc
sbbl
mov
sub
into
incb
pop
jge
sbb
loopne
dec
test
clc
out
or
jge
xor
decl
andb
sbb
dec
push
pop
std
pushf
shll
cltd
in
and
sahf
or
mov
mov
pusha
push
fcomps
or
mov
mov
add
jecxz
out
push
push
jle
addb
add
sub
push
andb
call
cmpsl
movsl
mov
cmpsl
mov
xchg
hlt
outsl
xor
inc
ds
pop
cmp
and
dec
repz
testl
add
ret
jmp
mov
fbstp
and
xor
ljmp
xlat
imul
push
fdivl
pcmpeqw
lock
mov
and
adc
adcb
pop
hlt
mov
hlt
gs
jecxz
xchg
pusha
popf
lcall
sbb
sbb
mulb
pusha
mov
ret
out
ljmp
data16
mov
fwait
xchg
push
sub
and
adc
cwtl
push
out
rcr
push
addb
fdivrl
mov
sahf
xlat
scas
mov
mov
movsb
inc
pusha
jge
cmpsl
inc
push
pusha
or
ds
mov
jo
lret
add
add
fs
shlb
push
sub
loopne
shlb
mov
shl
cmp
std
mov
aad
sbb
mov
negl
mov
mov
mov
add
xor
xor
jnp
in
dec
frstor
dec
mov
cli
mov
inc
das
and
scas
dec
adc
dec
repz
mov
rolb
ss
push
dec
in
add
pusha
cmpb
mov
bound
push
andb
pusha
adc
dec
loopne
add
push
rol
jecxz
daa
xchg
movsb
and
ja
pop
and
pusha
shlb
movb
dec
or
loop
cmp
add
pusha
lods
mov
sub
pop
aas
pusha
fdivrp
dec
pop
lods
addb
in
dec
addb
pop
out
bswap
xor
and
add
or
mov
test
mov
xor
mov
dec
mov
lea
push
adc
inc
mov
dec
add
and
mov
cmc
subl
nop
pop
cmpsl
or
jo
and
pop
add
push
mov
jbe
pop
xchg
cli
pop
shl
xchg
leave
mov
inc
imul
pusha
loopne
jnp
dec
lock
sbb
dec
aad
push
xchg
push
pusha
pusha
pusha
insb
test
mov
fxch
jle
andb
lret
stc
in
add
mov
fwait
dec
lea
cmpsl
xchg
out
loopne
sub
loopne
add
paddusb
mov
push
inc
and
loopne
sarb
and
mov
andb
inc
fcmove
and
xchg
push
add
mov
popf
lahf
sar
std
jno
adc
mov
xchg
inc
xchg
and
adc
repnz
incb
aas
fstpl
adc
inc
cmp
aaa
ror
gs
or
xor
mov
mov
jne
int
mov
adc
pusha
and
xor
int3
lods
pusha
cmp
in
lea
mov
push
cmp
cmpsl
addb
cmp
sarb
or
loopne
test
int
repnz
orb
push
jmp
xchg
shll
mov
leave
sbb
rorb
repz
jecxz
xchg
jo
sahf
mov
in
adc
xor
mov
cmp
or
add
shl
rorb
andb
add
mov
iret
fsub
xor
rcl
xchg
scas
inc
sub
ss
ljmp
cltd
or
mov
clc
ss
mov
push
jge
dec
imul
shll
add
inc
call
pop
push
inc
jg
dec
inc
adc
les
jnp
mov
and
cmp
insl
and
pusha
frstor
or
call
and
movsl
aas
nop
and
add
dec
cmp
sahf
mov
js
mov
mov
and
inc
cmpsb
pusha
adc
lods
and
addb
icebp
xor
sub
pusha
or
and
jg
sbb
ror
inc
push
out
es
inc
add
rolb
or
pusha
sbb
dec
and
loopne
frstor
push
dec
cmpsl
jne
sbb
and
nop
repnz
iret
ds
std
mov
fs
jne
mov
rol
xor
add
sub
pusha
jns
lahf
les
or
rolb
jle
cli
push
enter
loopne,pn
pushf
xor
push
fsubrl
lea
loop
inc
pusha
xlat
and
cmpb
aam
or
fisubrs
add
bound
sub
loopne
pop
inc
cld
popa
and
loopne
xor
mov
iret
fiaddl
xchg
loope
mov
lock
mov
loopne
cmp
orl
cmp
jecxz
inc
leave
cmpl
shl
rorb
inc
je
xchg
lahf
cmp
loopne
push
adc
add
lahf
and
inc
mov
adc
mov
sbb
lret
adc
lods
mov
and
and
lret
rcrl
mov
jne
out
jmp
inc
out
imul
inc
sarb
outsb
test
xor
stos
andb
mov
sub
loopne
ret
stc
inc
and
inc
outsb
adc
decb
inc
and
les
and
dec
out
fnsave
ret
bound
testl
mov
sub
rolb
pusha
push
stos
repnz
inc
mov
pop
outsb
sti
repnz
arpl
add
sub
dec
and
loopne
pop
lcall
jp
or
jmp
sub
and
andb
pop
cld
add
sbb
mov
push
sbb
mov
sub
addb
out
rcll
add
sbbb
and
into
fnop
pop
cmpsl
les
pop
pop
add
shlb
and
or
or
inc
and
pop
jp
xchg
xchg
sub
pop
jmp
push
jp
xor
adc
sbb
mov
jmp
push
ss
movsb
inc
add
adc
imul
add
sbbl
pop
repz
ficomps
lcall
fs
xchg
pop
mov
xor
sub
outsb
mov
add
sub
xor
sbb
pop
mov
add
popa
imul
ljmp
dec
pushf
pop
xchg
jo
xlat
mov
add
xchg
sub
xchg
mov
lods
test
add
andb
mov
push
jp
imul
std
lcall
rcrb
jg
fimuls
dec
fisttps
and
lods
rcrb
mov
ret
xchg
lcall
cmp
mov
inc
scas
pusha
inc
mov
clc
dec
adc
jns
xor
out
mov
cmp
adc
clc
repz
or
push
inc
das
andb
or
add
pop
cltd
pop
std
push
fiadds
pusha
and
decb
and
ret
jb
xchg
jmp
sbb
pusha
pusha
ficoml
or
arpl
jl
mov
mov
mov
rolb
add
insb
push
movsl
mov
add
mov
inc
shl
add
addb
sarl
inc
xlat
nop
aaa
hlt
push
lret
and
rcrl
xchg
cld
sub
xor
inc
cmp
inc
add
scas
mov
andb
add
and
and
ret
scas
push
leave
mov
loopne
in
lods
add
sub
sub
movsb
loopne
lock
mov
shl
rolb
and
cmp
into
fidivrl
pop
dec
lock
push
sbb
mov
mov
addl
inc
inc
push
mov
int3
and
cmp
movl
rolb
adc
push
in
mov
call
mov
and
jo
ficompl
push
xchg
int
xor
ja
adc
ss
into
mov
in
shrl
rorb
inc
pusha
rcrl
hlt
loope
cmp
mov
addb
stc
xor
or
shlb
fmull
loopne
lea
inc
or
loopne
xchg
fdivrl
add
push
mov
xor
sahf
out
inc
jmp
rcrb
rolb
cmpsb
pusha
inc
jecxz
add
and
or
cmp
leave
jp
xor
jns
or
pusha
mov
shr
pop
orl
in
push
dec
add
inc
rorb
sarb
rcl
ficompl
and
xor
push
andb
out
lds
fs
inc
add
push
inc
adc
andb
xchg
or
and
adc
jp
sub
lret
or
xchg
lea
jle
pop
cwtl
xchg
jns
pop
rolb
lcall
or
shrb
push
mov
xchg
and
loopne
out
nop
jnp
loope
int
or
mov
jmp
insb
shlb
inc
shlb
dec
insb
mov
pop
call
push
imul
lcall
addb
pop
hlt
cmp
xlat
push
xor
pusha
push
shrb
inc
mov
shl
das
js
push
sbb
popf
push
mov
pop
lds
inc
and
inc
add
ljmp
pushf
and
shrb
cmp
int
cmp
push
sub
mov
out
xchg
pushl
inc
mov
pop
mov
add
loopne
add
xor
add
inc
xlat
push
adc
mov
hlt
cmpsb
and
pusha
add
addb
dec
push
or
or
xchg
call
mov
push
out
hlt
xchg
dec
lcall
fisttpll
cmp
loopne
cmpsl
push
fildl
xchg
and
pusha
mov
inc
and
mov
xor
add
mov
cmc
add
loopne
aas
addb
repz
inc
xchg
or
rcl
stos
in
pop
cltd
xchg
cmp
mov
jl
jno
pop
push
dec
ficoml
out
repnz
imul
frstor
mov
gs
adc
and
cmpsb
and
mov
fdivl
pop
and
mov
rolb
add
jge
fdivrl
lahf
in
sahf
add
xor
push
adc
mov
inc
ss
hlt
jmp
cmpsb
pusha
inc
test
and
enter
ja
pop
imul
inc
adcb
and
out
jae
cmpsb
mov
shl
jo
xlat
aaa
out
cli
in
jae
addb
cmp
dec
loopne
inc
pusha
outsb
pushf
hlt
ror
lock
and
mov
scas
enter
rdpmc
into
push
scas
mov
lcall
jne
and
insb
lahf
sbb
scas
add
inc
and
inc
jno
push
test
mov
add
or
mov
mov
and
test
loopne
mov
mov
loope
popl
lret
daa
push
xor
imul
adc
enter
jnp
and
pusha
aaa
js
or
dec
and
pop
mov
jne
arpl
add
jae
push
adc
enter
fwait
or
mov
inc
mov
mov
out
mov
add
es
pusha
and
adc
iret
adc
cmpsl
or
pusha
repnz
adc
and
mov
std
test
jae
add
orb
int3
testl
add
rclb
inc
xor
fwait
lret
mov
shll
dec
jmp
inc
mov
inc
fimuls
test
mov
mov
andb
add
sbbb
jmp
and
adc
add
sbb
and
jnp
xchg
inc
pusha
xchg
pusha
mov
clc
dec
in
mov
cwtl
pop
pop
insb
sbb
lods
add
xor
dec
fstpl
andb
fcoms
push
fmull
lods
loopne
mov
jno
aaa
test
orl
sar
jns
addr16
pushf
loopne
loopne
cmpsl
jae
and
lds
nop
jmp
push
xor
inc
mov
pusha
push
loopne
addr16
in
int3
mov
xlat
test
pusha
movsb
rolb
les
mov
jns
clc
cmp
sbb
jbe
negb
add
mov
loopne
cmpsb
mov
andb
shrl
aad
add
push
xchg
pop
pop
aaa
adc
jge
mov
push
rcrb
in
mov
imul
cli
jne
jae
mov
imul
in
cwtl
push
and
addb
add
or
loopne
pop
mov
and
shlb
cmc
orl
aas
out
loope
daa
test
rolb
and
or
mov
add
xchg
cmp
push
loopne
fsubp
ss
xor
pop
movsb
loopne
cmpsb
andb
mov
test
andb
mov
decl
push
adc
push
adc
push
outsl
push
addb
inc
and
xchg
and
addb
sbb
add
repnz
or
mov
pop
test
dec
cwtl
mov
rcrb
xchg
stos
xchg
adc
mov
into
popl
pop
mov
push
dec
xor
push
fstp
aam
ficompl
or
movsl
cmp
jp
sub
add
ficoms
adc
addr16
mov
sub
insl
bound
cmp
and
andl
sbb
mov
in
pushf
dec
out
repz
notl
add
mov
xchg
pop
pop
lahf
addb
pusha
pusha
mov
lods
pusha
inc
sbb
xchg
jne
inc
adc
xchg
aam
fs
push
sbb
add
andl
int
mov
jne
dec
mov
popa
int3
jg
pop
sbbl
mov
inc
add
mov
or
xchg
loopne
jns
out
rclb
inc
pusha
out
iret
andb
jg
insl
push
cs
test
pusha
sbb
add
jnp
in
addb
jge
xor
repz
inc
ds
add
and
add
and
push
insl
inc
dec
xor
xor
and
jno
mov
lods
add
pop
jns
repnz
out
nop
cwtl
js
xor
fwait
call
adc
add
inc
lods
inc
add
bound
movsl
xchg
lods
shlb
push
out
shll
xor
and
and
add
xchg
mov
cmpsb
loopne
mov
and
pop
inc
and
rolb
and
adc
xchg
loope
adc
pop
xchg
mov
stos
sbb
ja
aam
jno
arpl
inc
mov
test
and
xor
inc
lods
add
int
fisubrl
rcll
pop
sbb
or
pusha
sub
xchg
jne
fwait
popa
mov
xchg
add
in
leave
mov
jnp
loopne
xor
shlb
sarb
jecxz
pop
jae
fisubrl
cld
mov
add
push
push
push
push
push
push
call
sub
add
imul
lea
and
cmp
je
mov
push
push
bnd
cmp
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
and
mov
jg
in
lods
andb
jb
bound
adc
adc
sbb
je
andb
and
xlat
push
mov
notl
sub
jle
push
andb
mov
enter
nop
mov
shlb
pusha
and
mov
das
push
dec
dec
jmp
inc
add
inc
mov
les
add
or
int
dec
mov
cmpsl
and
add
pop
imul
loopne
add
sarb
mov
lds
mov
push
leave
cltd
clc
adc
push
and
lret
mov
in
pop
lcall
push
adc
pop
loop
lods
inc
mov
loope
pop
movsl
push
inc
cmpb
ljmp
xorl
shll
loopne
daa
sti
addb
mov
fcomi
cld
jle
pop
push
mov
sub
or
mov
cmp
adc
test
pusha
sbb
imul
cmpl
mov
imul
mov
mov
rcl
sub
pusha
adc
movsb
pusha
add
cmpsl
pop
nop
xchg
jl
inc
loop
repz
or
and
incb
cld
xchg
std
and
icebp
clc
cmp
jmp
ficoms
int
js
arpl
movsb
andb
dec
xor
addb
out
xchg
ds
mov
aas
jmp
lahf
cmp
rcrb
mov
loopne
xor
dec
cmp
lods
mov
inc
inc
aas
ficoms
les
sbb
test
add
inc
and
ds
mov
mov
arpl
lcall
ljmp
loopne
xor
js
cmp
out
into
mov
mov
pop
popf
mov
dec
and
cmc
frstor
movsl
je
mov
scas
shlb
or
sti
push
nop
mov
and
cwtl
mov
sub
jg
stos
lea
inc
out
inc
mov
in
and
scas
lcall
addb
push
and
pusha
shrb
mov
pop
sbb
mov
loopne
fwait
or
inc
ret
adc
add
test
cld
fsubr
xchg
xchg
hlt
bound
enter
inc
lret
jp
arpl
loopne
push
sahf
sbb
mov
cmp
rolb
rclb
inc
xchg
mov
ret
dec
jl
fdivrs
ret
push
jmp
movsb
shlb
adc
xchg
mov
add
mov
push
mov
or
add
push
inc
push
shlb
xchg
aaa
or
pusha
cmp
loopne
mov
mov
add
inc
push
loopne
mov
adcl
or
repnz
shl
mov
mov
inc
and
jb
xor
cwtl
or
repz
insb
test
add
inc
adc
add
mov
lock
mov
loopne
mov
loopne
je
out
rcrb
pop
jle
jl
pusha
pusha
sbb
jmp
movb
rcrl
inc
ror
mov
and
call
pop
sar
shll
inc
add
xorb
mov
and
popf
push
add
inc
ss
mov
push
pushw
popf
push
pusha
fwait
mov
and
hlt
incl
sahf
insb
dec
inc
xor
jae
ss
sub
mov
mov
or
and
cmp
pop
into
dec
addr16
jp
pop
aam
add
mulb
pop
sti
jp
repnz
cmp
scas
insb
or
imul
outsl
shlb
inc
mov
and
mov
cwtl
ret
push
pop
andb
and
and
mov
or
adc
fisubrs
adc
rolb
add
popl
mov
jb
pop
ds
inc
and
incb
and
sarb
out
xchg
push
sarl
fstp
xchg
pusha
in
mov
call
xchg
loopne
loopne
push
loopne
jp
push
sbb
scas
sub
cmp
jbe
in
adc
inc
rolb
loopne
mov
pop
sti
sub
add
mov
loopne
add
loop
pop
out
test
and
ss
out
xor
xor
dec
dec
movaps
jo
mov
test
push
mov
inc
shlb
mov
mov
xorb
inc
jbe
jnp
mov
add
push
ja
shlb
or
mov
cmp
or
loopne
fnstsw
cmp
rol
pop
xor
sbb
in
pop
push
dec
imul
and
in
pop
mov
cmp
sub
and
subl
pushf
cmp
movsb
andb
std
inc
sub
sahf
sar
fisttps
add
int
dec
xor
xchg
icebp
push
mov
inc
shlb
ss
movsb
mov
js
push
dec
ja
mov
and
icebp
fldl
mov
cmp
and
xchg
ljmp
add
dec
push
pop
repz
sahf
inc
popa
xchg
or
mov
aaa
aaa
push
jbe
pop
jb
sbb
hlt
ficomps
pusha
jl
lret
xchg
addb
and
loopne
cmp
scas
dec
xchg
mov
add
push
test
dec
mov
pop
es
xchg
mov
movsb
and
stc
out
and
ret
pusha
into
jg
add
insb
adc
mov
inc
lock
std
popf
mov
sbb
pop
pop
xchg
sbbb
mov
push
fs
mov
inc
inc
sub
cmp
push
inc
lds
insl
adc
jns
sbb
andb
nop
adc
jp
mov
sub
fmuls
adc
fisubrs
jno
mov
and
andb
cmp
cmp
mov
and
dec
cwtl
xor
xchg
pop
rcll
testl
xor
popl
add
loopne
les
sbb
mov
inc
mov
lods
andb
ret
cmp
ds
or
loopne
in
mov
add
inc
cwtl
xchg
mov
adc
pop
inc
inc
add
xlat
lret
test
and
cmpsl
push
loopne
or
push
sar
in
and
and
pusha
shl
repnz
fnstcw
sahf
rclb
insl
mov
hlt
pop
pushw
mov
mov
fwait
jae
js
rolb
inc
fidivrs
mov
loopne
es
or
sbb
cwtl
dec
xchg
pusha
test
fcoms
icebp
inc
out
jae
fwait
dec
clc
dec
sbb
pop
sub
inc
pusha
xchg
xor
cwtl
push
stos
rol
jle
test
mov
mov
inc
xchg
push
xor
lret
pusha
push
adc
test
add
mov
fcompl
mov
push
sbb
and
mov
je
cmpsb
and
push
scas
pop
sahf
xor
mov
ljmp
daa
dec
jb
inc
jae
in
jno
test
xor
or
sarb
mov
sub
adc
cwtl
testb
rol
out
pop
ss
xchg
pusha
push
pusha
and
push
mov
mov
sbb
loopne
hlt
cmp
mov
in
lods
pusha
addb
adcb
lret
addr16
push
cltd
push
jg
xor
and
inc
mov
xchg
add
xor
lock
cmp
inc
sub
add
dec
adc
fsubs
lea
push
shlb
pusha
jge
shl
addr16
les
mov
push
jle
fst
popf
fisttpll
pop
xchg
inc
pop
idivl
sahf
loopne
repz
fwait
movl
fmull
leave
or
loop
iret
add
loopne
cmpsb
add
insb
mov
and
lods
mov
shrb
mov
call
pop
xchg
ljmp
les
xor
in
xchg
inc
cmpb
loop
jle
push
loopne
aaa
fdivs
mov
in
xlat
jno
andb
push
andb
loopne
scas
int3
cmp
inc
add
adc
fimuls
add
inc
and
adc
in
pushf
inc
aam
hlt
aas
aam
cltd
aas
sbb
daa
mov
rolb
shl
xor
fidivrl
loop
xchg
fnsave
and
push
loopne
mov
lahf
stos
mov
fnstcw
mov
mov
pop
arpl
dec
cs
outsb
in
mov
mov
rolb
add
dec
cmp
sub
or
addb
add
faddp
xlat
lds
loopne
xchg
xlat
mov
add
dec
push
repz
out
or
into
or
inc
cmovg
or
sbb
addb
inc
std
mov
mov
pusha
pusha
nop
xlat
fisubrl
insl
mov
pusha
loopne
and
lea
push
or
mov
incb
mov
loopne
outsb
push
adc
cmp
dec
in
xchg
sbb
pop
push
inc
loopne
inc
arpl
and
mov
loopne
imul
fnstsw
sub
mov
addb
repz
lods
insl
cwtl
push
mov
lods
inc
pusha
inc
push
les
jg
aaa
jg
mov
and
flds
ljmp
out
jno
shl
popf
push
loopne
faddp
pop
mov
pop
cmc
push
scas
addb
movsl
shr
cmp
in
test
loope
and
je
push
mov
mov
push
jmp
ss
add
mov
sbb
addb
inc
inc
cmp
repnz
adc
pop
cmc
ret
mov
sub
mov
inc
xchg
les
sti
and
mov
push
ror
xchg
lods
testl
jns
lds
es
mov
xor
mov
adc
pop
dec
xlat
loopne
mov
or
add
xchg
aaa
sti
mov
cmpsl
xchg
movsl
fstpt
push
ret
mov
mov
fnstenv
lret
push
mov
pusha
sub
add
imul
jb
mov
addr16
movsb
addb
add
add
push
jl
pusha
xor
enter
mov
push
les
ljmp
fcoml
dec
imul
rorb
xor
mov
icebp
cltd
enter
orb
inc
cmpl
add
les
pop
and
out
js
mov
inc
push
not
scas
adc
gs
mov
dec
adc
and
scas
addb
incb
shl
mov
mov
pop
pusha
leave
gs
pop
pop
and
loopne
jb
std
lods
mov
mov
xchg
addb
stos
mov
mov
xchg
aaa
inc
and
addb
inc
fwait
sti
ss
bound
inc
insl
fldcw
jae
jge
jmp
xor
sti
mov
lds
jbe
add
divb
fnsave
pop
cs
shrb
loop
adc
and
dec
aad
mov
add
dec
or
pusha
sahf
cmp
rolb
in
mov
hlt
dec
add
subb
out
aam
mov
mov
mov
fcoms
addr16
shlb
test
pusha
and
aad
mov
sbbl
ss
lds
dec
sub
iret
mov
xchg
sahf
or
sub
pop
or
invd
rolb
addb
or
mov
or
addb
jmp
psrad
or
rol
mov
ret
cld
inc
xchg
cltd
loop
jl
push
stc
push
lds
fsubrp
pop
loopne
test
pusha
ljmp
data16
lret
jecxz
add
push
or
pusha
sub
add
rolb
rorb
xchg
inc
loope
andl
push
es
outsl
dec
and
scas
pusha
loopne
ljmp
shlb
shlb
test
mov
and
mov
rcl
sbb
pop
pop
fimuls
sbb
loopne
andb
xor
inc
inc
aaa
or
test
mov
subps
sbb
fadds
div
adc
xchg
cmp
mov
gs
and
fwait
shrl
and
cltd
add
xor
inc
xchg
mov
xor
mov
xchg
sbb
xchg
fisubrs
or
inc
loopne
fidivl
in
add
add
lcall
push
lahf
inc
xor
sarb
lret
inc
loope
jmp
add
add
dec
xor
sub
shrl
andb
add
decl
pusha
daa
mov
add
and
inc
dec
out
addb
add
mov
rolb
adc
mov
adc
sub
loopne
mov
cmp
shlb
cmp
test
in
or
mov
std
mov
add
loopne
or
add
mov
mov
loopne
addb
push
pop
mov
aad
push
mov
mov
fcomp
pop
out
fadds
jbe
dec
mov
andb
loope
sub
and
andb
push
loopne
and
and
mov
pusha
loopne
jle
ljmp
mov
lahf
pop
fcompp
cmp
inc
out
xchg
sbb
inc
out
les
mov
cmp
fcmovbe
out
cmp
test
mov
leave
mov
and
pusha
loopne
push
scas
pusha
and
jecxz
and
and
mov
addr16
sub
fs
mov
add
add
rcrl
lahf
push
mov
dec
stc
stos
daa
mov
mov
xor
popf
nop
pop
xor
mov
into
mov
fchs
pop
aad
cmc
testl
inc
in
push
sbb
insl
add
mov
sbb
inc
clc
dec
xor
pop
jb
sahf
in
pop
test
aam
adc
mov
loop
sbb
jno
loopne
mov
pusha
and
sub
cmp
leave
or
push
mov
jne
sbb
loope
mov
nop
cld
jae
jne
mov
clc
repnz
nop
cld
jae
add
in
leave
leave
xlat
mov
push
mov
xchg
ret
das
push
filds
add
push
mov
clc
repnz
nop
cld
jae
add
pop
xlat
out
in
aas
movzwl
push
mov
xchg
ret
inc
add
add
out
pop
clc
repnz
nop
cld
jae
add
add
outsl
inc
mov
clc
repnz
nop
cld
jae
mov
in
mov
jge
nop
push
mov
leave
nop
jmp
ret
add
add
test
nop
push
mov
leave
nop
jmp
add
sbb
push
mov
xchg
ret
inc
mov
add
jae
movsb
pusha
pusha
mov
adc
push
dec
push
mov
xchg
ret
add
lcall
mov
out
int
jecxz
add
scas
add
add
fiadds
add
add
clc
repnz
nop
cld
jae
stc
add
xor
clc
repnz
nop
cld
jae
sub
sub
leave
xchg
push
shr
clc
repnz
nop
cld
jae
add
into
mov
movsb
push
mov
xchg
ret
aaa
add
add
adc
mov
mov
xchg
ret
pusha
add
xlat
add
cs
cmp
add
clc
repnz
nop
cld
jae
mov
add
mov
leave
nop
jmp
add
sub
mov
mov
leave
nop
jmp
adc
inc
adc
add
sti
xor
clc
repnz
nop
cld
jae
pop
sub
add
push
push
mov
xchg
ret
add
mov
add
inc
push
mov
adc
adcl
and
rolb
add
outsb
cmp
nop
cld
jae
jne
sub
pop
lock
movsl
fld1
push
mov
xchg
ret
mov
add
add
add
clc
repnz
nop
cld
jae
shl
mov
cmc
pushl
clc
repnz
nop
cld
jae
adc
adc
ror
repz
clc
repnz
nop
cld
jae
into
add
and
add
clc
repnz
nop
cld
jae
ljmp
and
dec
cmp
repnz
nop
cld
jae
in
add
test
adc
add
repnz
nop
cld
jae
add
add
add
add
nop
jmp
xor
add
add
nop
push
mov
leave
nop
jmp
pop
push
inc
add
push
push
mov
xchg
ret
add
add
cmp
shrl
mov
xchg
ret
ret
jb
add
pusha
lret
push
nop
push
mov
leave
nop
jmp
add
add
and
nop
cld
jae
cli
add
add
add
loop
nop
push
mov
leave
nop
jmp
add
add
add
add
nop
jmp
getsec
add
add
jne
add
push
mov
xchg
ret
inc
push
add
push
add
addr16
nop
push
mov
leave
nop
jmp
push
add
mov
loope
xor
or
and
imul
sub
mov
nop
push
mov
leave
nop
jmp
filds
add
xor
jnp
inc
xor
clc
repnz
nop
cld
jae
inc
scas
in
push
cmp
fwait
push
mov
xchg
ret
add
filds
les
add
insb
adc
mov
xchg
ret
sub
fs
or
add
nop
jmp
lods
call
clc
repnz
nop
cld
jae
pop
add
add
nop
jmp
jb
filds
cli
adc
pop
push
mov
xchg
ret
add
into
add
mov
mov
dec
and
clc
repnz
nop
cld
jae
add
add
add
stc
clc
repnz
nop
cld
jae
add
xchg
add
push
jbe
push
stos
loopne
push
add
clc
repnz
nop
cld
jae
add
add
add
lea
clc
repnz
nop
cld
jae
sub
add
add
je
nop
push
mov
leave
nop
jmp
movups
mov
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
and
add
and
jmp
clc
repnz
nop
cld
jae
add
add
imul
loopne
mov
inc
in
push
mov
xchg
ret
into
outsl
add
add
mov
mov
clc
repnz
nop
cld
jae
into
add
sub
and
add
add
add
pusha
or
nop
nop
cld
jae
add
fists
add
cld
clc
repnz
nop
cld
jae
add
add
push
add
add
cmp
xchg
xchg
ret
add
filds
add
mov
test
clc
repnz
nop
cld
jae
jne
add
clc
repnz
nop
cld
jae
inc
into
shlb
mov
xchg
ret
add
fdiv
add
rcr
lret
dec
imul
cld
jae
add
leave
add
jge
clc
repnz
nop
cld
jae
scas
ljmp
and
nop
nop
cld
jae
lret
add
add
mov
clc
repnz
nop
cld
jae
add
das
ljmp
push
mov
xchg
ret
cs
add
add
outsl
pop
dec
mov
popa
inc
add
add
mov
add
jge
clc
repnz
nop
cld
jae
and
dec
push
nop
push
mov
leave
nop
jmp
arpl
add
mov
roll
jb
clc
repnz
nop
cld
jae
jb
and
add
mov
xchg
ret
push
add
fisubs
insl
push
push
mov
xchg
ret
movhps
inc
add
add
mov
test
add
clc
repnz
nop
cld
jae
inc
scas
pusha
cmp
jae
add
add
push
les
add
fidivrs
sti
add
add
nop
push
mov
leave
nop
jmp
into
inc
push
and
test
repnz
nop
cld
jae
aaa
add
xor
jl
add
and
fs
outsl
fs
sbb
repnz
nop
cld
jae
inc
add
xor
inc
xor
mov
repnz
nop
cld
jae
add
xchg
rorl
test
sub
add
repnz
nop
cld
jae
stc
add
xor
xor
jmp
add
mov
lret
xor
mov
add
dec
cmp
nop
cld
jae
das
add
push
add
add
cmp
mov
clc
repnz
nop
cld
jae
mov
add
insb
push
add
nop
mov
push
data16
jns
sar
nop
nop
cld
jae
frstor
add
clc
repnz
nop
cld
jae
fildll
cli
add
rorl
repnz
nop
cld
jae
add
jae
push
mov
clc
repnz
nop
cld
jae
ret
add
mov
push
mov
xchg
ret
mov
xor
outsl
notl
repnz
nop
cld
jae
add
sbb
mov
mov
dec
rclb
rclb
and
clc
repnz
nop
cld
jae
leave
add
xor
sbb
clc
repnz
nop
cld
jae
add
movsb
ret
cmpsl
push
nop
push
mov
leave
nop
jmp
pusha
insb
pusha
add
inc
rolb
mov
clc
repnz
nop
cld
jae
jb
lret
inc
add
test
rolb
data16
pusha
add
cmp
clc
repnz
nop
cld
jae
add
fildll
pusha
xchg
loopne
sub
nop
push
mov
leave
nop
jmp
add
add
jg
push
mov
xchg
ret
into
xchg
add
dec
mov
nop
mov
addb
cmp
ret
sub
rclb
add
cmp
nop
push
mov
leave
nop
jmp
insb
jae
in
faddl
sahf
in
addb
mov
nop
push
mov
leave
nop
jmp
pop
mov
and
repnz
nop
cld
jae
add
add
lret
mov
add
and
jns
add
movsb
bound
xchg
ret
arpl
push
imul
nop
push
mov
leave
nop
jmp
inc
outsl
add
add
and
mov
clc
repnz
nop
cld
jae
rolb
add
clc
repnz
nop
cld
jae
mov
add
xchg
pusha
pop
call
nop
push
mov
leave
nop
jmp
add
add
and
repnz
nop
cld
jae
mov
add
sub
nop
nop
cld
jae
add
add
sub
pop
or
loopne
pusha
clc
repnz
nop
cld
jae
add
les
add
add
clc
repnz
nop
cld
jae
aaa
add
filds
add
cli
mov
jns
add
ret
scas
add
add
clc
repnz
nop
cld
jae
push
pop
imul
mov
mov
xchg
ret
arpl
mov
pop
add
and
add
add
add
pusha
mov
add
clc
repnz
nop
cld
jae
into
rolb
add
add
dec
inc
call
clc
repnz
nop
cld
jae
sub
in
mov
clc
repnz
nop
cld
jae
sldt
add
mov
xchg
je
add
jae
add
rorb
xorl
add
sldt
add
cmp
nop
nop
cld
jae
paddusb
add
mov
into
nop
in
pop
clc
repnz
nop
cld
jae
add
jne
les
add
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
outsl
pop
add
insb
xchg
mov
clc
repnz
nop
cld
jae
sub
arpl
xor
nop
cld
jae
stc
cli
sub
into
adc
add
push
mov
jae
add
enter
in
leave
nop
jmp
add
repnz
push
push
mov
xchg
ret
add
add
ljmp
aam
inc
add
jae
sub
fbld
xor
clc
repnz
nop
cld
jae
lcall
dec
ret
nop
push
mov
leave
nop
jmp
inc
repz
add
shl
mov
clc
repnz
nop
cld
jae
mov
pop
push
mov
xchg
ret
add
add
add
jae
add
and
cmp
clc
repnz
nop
cld
jae
mov
nop
push
mov
leave
nop
jmp
add
inc
aaa
mov
push
mov
xchg
ret
repz
filds
scas
push
add
add
loop
clc
repnz
nop
cld
jae
fildll
and
mov
inc
sbb
repnz
nop
cld
jae
filds
cli
ljmp
repnz
nop
cld
jae
ltr
add
scas
push
push
mov
xchg
ret
add
arpl
mov
hlt
clc
repnz
nop
cld
jae
xor
add
mov
inc
push
dec
clc
repnz
nop
cld
jae
rep
outsl
vpbroadcastq
nop
jmp
add
jne
fiadds
test
repnz
nop
cld
jae
add
xor
clc
repnz
nop
cld
jae
pusha
add
sub
xchg
add
inc
clc
repnz
nop
cld
jae
sbb
add
mov
shlb
clc
repnz
nop
cld
jae
pop
pop
add
add
add
add
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
into
jnp
push
mov
xchg
ret
shlb
arpl
push
add
loopne
mov
clc
repnz
nop
cld
jae
mov
add
or
and
sub
push
mov
xchg
ret
inc
mov
cmp
repnz
nop
cld
jae
add
fdivl
repnz
nop
cld
jae
sbb
shlb
movsl
add
clc
repnz
nop
cld
jae
scas
adc
add
add
rorl
add
add
add
inc
add
add
cli
mov
leave
nop
push
mov
leave
nop
jmp
scas
aaa
add
add
add
nop
nop
cld
jae
jne
faddl
add
add
push
mov
add
add
cmp
stc
add
out
add
add
clc
repnz
nop
cld
jae
aaa
sub
add
add
and
sub
nop
nop
cld
jae
sub
adc
scas
add
cmpb
and
pusha
mov
mov
mov
leave
nop
jmp
sub
repz
push
mov
xchg
ret
add
xor
add
jb
pop
add
clc
repnz
nop
cld
jae
sub
add
cs
xorb
clc
repnz
nop
cld
jae
add
pop
add
loopne
push
dec
mov
clc
repnz
nop
cld
jae
add
sub
es
nop
push
mov
leave
nop
jmp
pusha
filds
ret
mov
shlb
inc
add
add
jae
add
clc
repnz
nop
cld
jae
inc
add
xchg
sbb
pop
cmp
mov
clc
repnz
nop
cld
jae
adc
add
add
pop
sbb
add
shrb
add
movsb
push
xor
add
outsl
add
mov
clc
repnz
nop
cld
jae
add
fcompl
addb
sub
test
icebp
clc
repnz
nop
cld
jae
add
cmp
push
mov
xchg
ret
cmp
add
mov
mov
xchg
ret
xchg
into
add
sub
push
mov
xchg
ret
cs
add
mov
xchg
ret
jne
add
ds
inc
mov
nop
push
mov
leave
nop
jmp
add
pop
nop
push
mov
leave
nop
jmp
fldl
add
add
add
mov
and
push
mov
xchg
ret
push
outsl
add
add
add
mov
mov
mov
leave
nop
jmp
add
lcall
add
clc
repnz
nop
cld
jae
add
and
mov
nop
nop
cld
jae
pop
add
add
arpl
add
add
nop
push
mov
leave
nop
jmp
push
punpcklbw
inc
cmpw
clc
repnz
nop
cld
jae
ljmp
sub
clc
repnz
nop
cld
jae
outsl
add
xlat
mov
clc
repnz
nop
cld
jae
repz
add
adc
pop
clc
repnz
nop
cld
jae
mov
add
add
push
mov
xchg
ret
add
fistpll
adc
add
nop
push
mov
leave
nop
jmp
add
add
das
add
clc
repnz
nop
cld
jae
add
add
sarb
mov
mov
push
mov
leave
nop
jmp
lret
sbb
mov
xchg
ret
add
sub
adc
inc
lea
push
mov
xchg
ret
les
fisubs
add
sbb
incl
in
leave
nop
jmp
and
cli
pop
movsb
add
inc
loopne
mov
xchg
ret
add
add
add
clc
test
nop
nop
cld
jae
add
inc
add
into
add
push
mov
xchg
ret
pop
leave
add
xlat
add
lcall
add
clc
repnz
nop
cld
jae
add
xlat
mov
call
nop
jmp
inc
mov
gs
clc
repnz
nop
cld
jae
and
add
fwait
ret
filds
pop
sub
les
cmp
push
add
add
rorl
nop
cld
jae
pusha
add
add
mov
push
mov
xchg
ret
sbb
add
rolb
adc
mov
pop
clc
repnz
nop
cld
jae
repz
add
add
rol
fld1
push
mov
xchg
ret
in
add
add
push
mov
xchg
ret
add
mov
xlat
add
xchg
pusha
clc
repnz
nop
cld
jae
add
add
add
into
pop
push
add
pusha
pushf
mov
subb
and
pusha
clc
repnz
nop
cld
jae
add
add
add
add
imul
nop
jmp
sarb
das
push
test
mov
mov
clc
repnz
nop
cld
jae
into
leave
sub
cmpw
nop
push
mov
leave
nop
jmp
xor
inc
add
mov
xchg
ret
pop
push
pop
rolb
add
cmp
popa
clc
repnz
nop
cld
jae
and
ret
add
fs
inc
push
add
add
rolb
add
add
sub
pop
mov
xor
clc
repnz
nop
cld
jae
pop
add
add
clc
repnz
nop
cld
jae
xor
insb
pop
add
mul
pop
imul
xor
incl
add
and
clc
repnz
nop
cld
jae
add
and
inc
das
cmp
nop
cld
jae
into
stc
add
mov
inc
insb
push
inc
add
inc
loope
dec
sub
lds
add
add
les
add
cmpl
cld
jae
mov
xor
clc
repnz
nop
cld
jae
add
add
scas
pusha
pop
inc
and
push
mov
leave
nop
jmp
add
adc
leave
in
xchg
push
clc
repnz
nop
cld
jae
mov
add
add
xor
clc
repnz
nop
cld
jae
add
inc
jb
daa
inc
clc
repnz
nop
cld
jae
add
add
jb
add
pop
mov
mov
clc
repnz
nop
cld
jae
pop
push
inc
add
add
fldenv
push
mov
xchg
ret
fisubs
xchg
push
add
clc
repnz
nop
cld
jae
adc
ret
add
xlat
je
clc
repnz
nop
cld
jae
add
into
xchg
mov
clc
repnz
nop
cld
jae
les
ficoms
add
ret
clc
repnz
nop
cld
jae
add
push
cmp
inc
xlat
and
push
mov
xchg
ret
lret
filds
xor
jmp
fnsave
xchg
ret
add
cli
mov
pop
add
nop
push
mov
leave
nop
jmp
cmp
inc
rcrb
jg
clc
repnz
nop
cld
jae
les
add
add
daa
call
clc
repnz
nop
cld
jae
add
outsl
fmull
jmp
mov
xchg
ret
fiadds
add
cmp
add
nop
push
mov
leave
nop
jmp
add
add
sub
es
jecxz
repnz
nop
cld
jae
add
cmp
push
mov
xchg
ret
add
mov
sub
xor
and
pusha
mulps
repnz
nop
cld
jae
add
add
js
and
lock
push
clc
repnz
nop
cld
jae
fmull
add
je
into
sbb
nop
cld
jae
add
add
or
push
mov
leave
nop
jmp
adc
add
add
rolb
mov
clc
repnz
nop
cld
jae
add
add
rcll
cld
jae
jb
add
xchg
arpl
mov
leave
nop
jmp
add
add
add
sbb
notl
nop
jmp
pop
ret
ret
clc
repnz
nop
cld
jae
add
pusha
add
shlb
jo
div
clc
repnz
nop
cld
jae
add
add
push
repz
add
xor
jmp
pushl
add
sbb
inc
add
repz
fs
clc
repnz
nop
cld
jae
xlat
add
cli
adc
or
dec
and
test
jg
add
in
pop
add
xor
add
out
fwait
push
mov
xchg
ret
add
inc
add
repz
add
push
mov
xchg
ret
mov
add
fildll
leave
sub
push
mov
xchg
ret
movsb
add
adc
mov
mov
xchg
ret
jb
imul
jns
sbb
push
mov
xchg
ret
verw
into
mov
push
push
push
mov
xchg
ret
inc
add
ret
xor
inc
adc
icebp
addb
cmp
ret
add
add
add
add
lea
nop
push
mov
leave
nop
jmp
add
add
add
lods
clc
repnz
nop
cld
jae
add
push
add
add
je
clc
repnz
nop
cld
jae
filds
add
inc
rep
clc
repnz
nop
cld
jae
mov
add
in
call
clc
repnz
nop
cld
jae
add
test
loopne
lock
xor
clc
repnz
nop
cld
jae
str
in
mov
add
repnz
nop
cld
jae
arpl
sub
add
dec
mov
clc
repnz
nop
cld
jae
add
adc
sbb
pop
clc
repnz
nop
cld
jae
add
arpl
push
inc
inc
and
mov
mov
fwait
sub
clc
repnz
nop
cld
jae
mov
fucomip
push
clc
repnz
nop
cld
jae
add
pop
and
ror
push
mov
xchg
ret
repz
pusha
add
push
add
nop
push
mov
leave
nop
jmp
scas
arpl
and
add
call
nop
jmp
scas
scas
fdivrl
add
repnz
nop
cld
jae
fucom
xor
mov
cmpsl
fs
add
xchg
add
add
mov
repnz
nop
cld
jae
add
mov
inc
pop
pop
clc
repnz
nop
cld
jae
leave
inc
add
xchg
add
add
clc
repnz
nop
cld
jae
xlat
add
ljmp
nop
push
mov
leave
nop
jmp
add
leave
verr
or
inc
inc
dec
nop
push
mov
leave
nop
jmp
add
add
push
jmp
add
add
add
into
push
sub
add
cs
cmp
mov
xchg
ret
into
add
ret
add
xor
test
in
call
nop
jmp
add
add
mov
mov
nop
cld
jae
inc
add
xlat
les
xchg
and
clc
repnz
nop
cld
jae
fiadds
mov
add
in
leave
nop
jmp
add
pop
add
and
stos
jnp
add
xor
fsubl
arpl
pop
push
clc
repnz
nop
cld
jae
lcall
mov
jmp
pusha
add
jne
add
cmc
movzwl
clc
repnz
nop
cld
jae
sub
sub
stc
popa
nop
push
mov
leave
nop
jmp
add
add
pusha
insb
add
aaa
push
push
mov
xchg
ret
add
add
fs
cs
push
push
mov
xchg
ret
into
mov
les
cmpsl
mov
clc
repnz
nop
cld
jae
jb
lret
jb
mov
nop
cld
jae
pop
push
add
mov
push
mov
xchg
ret
imul
mov
push
mov
xchg
ret
str
adc
jne
cmp
aas
push
clc
repnz
nop
cld
jae
push
adc
add
push
push
mov
xchg
ret
mov
pusha
outsl
add
jbe
mov
nop
nop
cld
jae
add
insb
mov
inc
add
add
push
mov
xchg
ret
add
add
inc
push
add
dec
sub
repnz
nop
cld
jae
add
add
add
mov
repnz
nop
cld
jae
lcall
ds
out
mov
push
mov
xchg
ret
add
jae
jne
clc
repnz
nop
cld
jae
lcall
nop
nop
cld
jae
arpl
add
add
mov
leave
nop
jmp
insb
xlat
add
sbb
add
clc
repnz
nop
cld
jae
repz
push
clc
repnz
nop
cld
jae
cs
add
inc
inc
push
mov
inc
add
cmpsl
pop
fiaddl
or
add
jne
push
mov
xchg
ret
cli
add
cli
pop
add
pop
xor
repz
clc
repnz
nop
cld
jae
push
ret
or
clc
repnz
nop
cld
jae
add
add
adc
nop
nop
cld
jae
add
add
cmp
nop
cld
jae
add
into
cmp
add
add
repnz
nop
cld
jae
cli
add
cli
ljmp
pusha
and
add
pop
clc
repnz
nop
cld
jae
add
into
add
add
add
add
clc
repnz
nop
cld
jae
add
cmp
inc
fistpl
nop
push
mov
leave
nop
jmp
add
add
add
push
and
sti
add
clc
repnz
nop
cld
jae
pusha
mov
in
cmp
add
push
mov
xchg
ret
add
add
pop
scas
mov
clc
repnz
nop
cld
jae
fiadds
add
add
nop
push
mov
leave
nop
jmp
pop
xchg
add
inc
add
add
nop
push
mov
leave
nop
jmp
mov
mov
clc
repnz
nop
cld
jae
push
aaa
fists
adc
mov
push
mov
leave
nop
jmp
add
inc
stc
add
jecxz
jne
clc
repnz
nop
cld
jae
pop
add
add
pusha
loopne
ret
inc
les
in
pushl
clc
repnz
nop
cld
jae
add
xchg
add
loopne
je
clc
repnz
nop
cld
jae
add
push
xchg
push
mov
xchg
ret
rolb
mov
add
sqrtps
repnz
nop
cld
jae
sub
add
mov
loopne
je
pop
movzwl
clc
repnz
nop
cld
jae
xor
add
push
clc
repnz
nop
cld
jae
add
pop
fs
mov
xchg
ret
and
pop
add
outsl
call
push
mov
xchg
ret
xchg
add
aaa
ret
mov
dec
clc
repnz
nop
cld
jae
add
xlat
add
add
aas
mov
nop
push
mov
leave
nop
jmp
add
and
push
mov
xchg
ret
outsl
les
add
add
push
add
and
clc
repnz
nop
cld
jae
adc
add
lret
push
mov
xchg
ret
add
add
add
add
push
mov
clc
repnz
nop
cld
jae
stc
inc
add
pop
push
mov
xchg
ret
add
pop
add
sldt
mov
add
add
repnz
nop
cld
jae
add
add
daa
jmp
aaa
jb
add
ljmp
outsl
add
dec
nop
push
mov
leave
nop
jmp
add
add
cmp
loopne
xchg
jne
nop
push
mov
leave
nop
jmp
add
add
insb
inc
add
arpl
add
add
add
mov
nop
push
mov
leave
nop
jmp
imul
pop
push
mov
xchg
ret
add
fxsave
imul
inc
add
sub
add
add
add
push
push
mov
xchg
ret
add
add
add
out
jl
sbb
repnz
nop
cld
jae
adc
add
pop
push
inc
add
adc
add
xor
cli
stc
add
add
aas
fistpl
push
mov
xchg
ret
repz
add
clc
repnz
nop
cld
jae
scas
les
add
fdivrl
repz
clc
repnz
nop
cld
jae
push
push
fs
add
mov
adc
repnz
nop
cld
jae
add
and
imul
gs
add
les
push
faddl
rorl
nop
nop
cld
jae
sub
ds
pop
ja
clc
repnz
nop
cld
jae
add
in
mov
nop
nop
cld
jae
add
jb
fists
push
dec
add
clc
repnz
nop
cld
jae
and
add
add
rcrl
repnz
nop
cld
jae
imul
stc
call
mov
xchg
ret
add
xchg
in
xchg
mov
repnz
nop
cld
jae
fildll
ret
stos
clc
repnz
nop
cld
jae
pop
outsl
fildll
add
lcall
add
add
repnz
nop
cld
jae
add
inc
movsb
add
mov
jmp
clc
repnz
nop
cld
jae
add
sub
movsb
add
into
in
in
les
test
pusha
stos
mov
clc
repnz
nop
cld
jae
insb
ror
push
add
add
cmp
enter
nop
cld
jae
adc
mov
push
mov
xchg
ret
into
repz
add
jmp
nop
nop
cld
jae
add
insb
pop
add
jns
nop
push
mov
leave
nop
jmp
in
in
add
clc
repnz
nop
cld
jae
add
push
xlat
jae
add
in
leave
nop
jmp
add
add
inc
inc
jmp
xchg
inc
add
pop
fbstp
push
pop
add
mov
add
clc
repnz
nop
cld
jae
outsl
mov
dec
out
clc
repnz
nop
cld
jae
add
fldl
add
repnz
nop
cld
jae
xor
add
js
pop
jnp
cmp
nop
nop
cld
jae
add
into
les
jae
push
mov
xchg
ret
add
ljmp
dec
add
repnz
nop
cld
jae
add
jne
les
clc
repnz
nop
cld
jae
fiadds
mov
push
mov
xchg
ret
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
push
pop
subps
push
mov
xchg
ret
and
xor
xor
call
clc
repnz
nop
cld
jae
add
add
and
clc
repnz
nop
cld
jae
add
nop
nop
cld
jae
mov
pop
add
rclb
inc
add
sbb
add
repz
xor
nop
push
mov
leave
nop
jmp
sub
aaa
add
xor
scas
enter
nop
cld
jae
das
add
xor
outsl
sub
clc
repnz
nop
cld
jae
into
sub
addb
inc
in
repnz
nop
cld
jae
add
add
mov
loopne
jmp
add
inc
cli
rolb
scas
fld1
push
mov
xchg
ret
add
add
xchg
add
pop
jns
sar
repnz
nop
cld
jae
mov
fiadds
push
and
xorb
push
mov
leave
nop
jmp
rolb
sub
add
push
mov
xchg
ret
sub
push
push
add
mov
xchg
ret
sbb
inc
into
add
sbb
ret
pusha
clc
repnz
nop
cld
jae
inc
scas
add
lcall
jb
clc
repnz
nop
cld
jae
rol
add
add
test
sbb
push
mov
xchg
ret
and
outsl
and
add
div
loope
push
mov
xchg
ret
adc
add
mov
xchg
push
push
mov
xchg
ret
les
add
add
add
add
pop
or
repnz
nop
cld
jae
jae
ficomps
add
mov
push
mov
xchg
ret
add
sbb
sub
mov
xchg
ret
add
add
movzwl
clc
repnz
nop
cld
jae
imul
inc
jle
jne
clc
repnz
nop
cld
jae
sub
push
mov
xchg
ret
xor
add
add
rolb
dec
cmp
repnz
nop
cld
jae
add
fildll
les
push
mov
leave
nop
jmp
inc
add
add
add
mov
nop
push
mov
leave
nop
jmp
rolb
fistps
ss
push
add
nop
push
mov
leave
nop
jmp
faddl
add
xor
leave
aad
clc
repnz
nop
cld
jae
outsl
fiadds
add
jae
add
nop
nop
cld
jae
add
rolb
add
nop
push
mov
leave
nop
jmp
pop
add
and
repnz
nop
cld
jae
add
add
test
loopne
clc
repnz
nop
cld
jae
cmp
clc
repnz
nop
cld
jae
add
add
add
sti
clc
repnz
nop
cld
jae
rolb
xlat
add
lds
and
and
filds
add
fdivl
scas
pusha
clc
repnz
nop
cld
jae
mov
add
inc
decl
mov
leave
nop
jmp
leave
inc
mov
ljmp
push
mov
xchg
ret
fnsave
das
add
add
add
pop
clc
repnz
nop
cld
jae
inc
ljmp
push
stos
mov
clc
repnz
nop
cld
jae
das
add
add
jae
push
push
mov
xchg
ret
lcall
repz
pop
pop
mov
nop
push
mov
leave
nop
jmp
add
fistpll
push
mov
xchg
ret
push
lret
fsubl
clc
repnz
nop
cld
jae
sbb
das
adc
xlat
inc
scas
insl
lea
clc
repnz
nop
cld
jae
add
xchg
sbb
push
mov
leave
nop
jmp
add
shrb
filds
inc
push
mov
clc
repnz
nop
cld
jae
add
outsl
xor
sets
xchg
popa
push
mov
xchg
ret
stc
pusha
fdivl
cmp
mov
clc
repnz
nop
cld
jae
add
push
nop
push
mov
leave
nop
jmp
pusha
push
add
pop
xor
clc
repnz
nop
cld
jae
add
jb
pop
pop
rep
clc
repnz
nop
cld
jae
add
pop
add
jne
jge
sbb
add
clc
repnz
nop
cld
jae
sub
mov
mov
fwait
push
mov
xchg
ret
add
scas
arpl
sub
add
pusha
push
mov
xchg
ret
add
cmp
test
fdivr
clc
repnz
nop
cld
jae
add
add
or
add
add
add
fnsave
rclb
and
mov
xchg
ret
add
add
add
add
cltd
push
push
mov
xchg
ret
add
add
jne
add
clc
repnz
nop
cld
jae
fiadds
add
inc
jbe
mov
cmpsl
mov
popf
clc
repnz
nop
cld
jae
mov
mov
nop
push
mov
leave
nop
jmp
push
add
jne
nop
push
mov
leave
nop
jmp
add
add
push
mov
clc
daa
add
out
fs
adc
xor
lods
incb
cld
es
in
push
push
mov
xchg
ret
add
push
sbb
leave
imul
inc
adc
iret
push
push
mov
xchg
ret
add
sbb
add
orb
mov
xchg
ret
and
in
add
out
pop
addl
nop
push
mov
leave
nop
jmp
add
add
inc
adc
repnz
nop
cld
jae
push
add
lcall
nop
push
mov
leave
nop
jmp
xchg
add
imul
leave
nop
jmp
cs
add
stc
sbb
shl
adc
clc
repnz
nop
cld
jae
inc
imul
jmp
inc
add
add
add
add
cmp
clc
repnz
nop
cld
jae
add
mov
adc
nop
jmp
stc
add
push
lret
jge
sbb
cmp
repnz
nop
cld
jae
into
add
add
mov
clc
repnz
nop
cld
jae
pusha
add
mov
outsl
fisubrs
sbb
clc
repnz
nop
cld
jae
add
add
cmp
rolb
add
add
repnz
nop
cld
jae
das
add
add
in
inc
fbstp
add
add
add
add
stc
sub
addr16
push
mov
xchg
ret
arpl
add
scas
shl
add
clc
repnz
nop
cld
jae
add
outsl
xor
shll
repnz
nop
cld
jae
add
jae
inc
fiadds
add
mov
nop
nop
cld
jae
movsb
inc
xlat
add
lret
rolb
xchg
inc
add
add
pop
rolb
add
pop
shr
clc
repnz
nop
cld
jae
add
inc
ds
cmp
ljmp
jbe
clc
repnz
nop
cld
jae
add
add
add
fistpl
clc
repnz
nop
cld
jae
add
in
inc
scas
rolb
rol
push
stos
push
mov
xchg
ret
sub
inc
fists
pop
adc
adc
repnz
nop
cld
jae
das
das
add
jo
and
pop
adc
pop
addb
cmp
ret
xlat
outsl
frstor
add
dec
add
clc
repnz
nop
cld
jae
inc
mov
add
pop
cmp
pop
push
mov
xchg
ret
add
add
notl
mov
xchg
ret
imul
mov
int3
dec
cmpsl
mov
clc
repnz
nop
cld
jae
sbb
add
clc
repnz
nop
cld
jae
add
add
mov
nop
nop
cld
jae
ljmp
sar
nop
nop
cld
jae
add
add
ret
jne
clc
repnz
nop
cld
jae
add
add
push
icebp
add
clc
repnz
nop
cld
jae
xor
xor
add
out
adc
in
leave
nop
jmp
into
lret
add
fimuls
add
push
mov
xchg
ret
sbb
das
lret
add
lahf
pop
push
mov
xchg
ret
add
insb
sub
add
xor
mov
mov
clc
repnz
nop
cld
jae
shlb
add
nop
push
mov
leave
nop
jmp
inc
or
inc
nop
in
jg
rcrb
repnz
nop
cld
jae
sub
verr
sub
nop
cld
jae
sub
push
fisubs
add
push
mov
leave
nop
jmp
ret
xor
lea
clc
repnz
nop
cld
jae
add
sub
mov
inc
jp
nop
push
mov
leave
nop
jmp
add
and
mulb
push
jno
jge
clc
repnz
nop
cld
jae
in
stc
add
sub
nop
push
mov
leave
nop
jmp
add
add
jnp
in
xlat
call
nop
jmp
fmul
das
add
nop
cld
jae
pop
add
add
stc
vpsubsw
clc
repnz
nop
cld
jae
add
fsubl
nop
nop
cld
jae
filds
lcall
mov
xchg
ret
sbb
add
ret
das
add
add
push
mov
xchg
ret
add
outsl
add
mov
adc
repnz
nop
cld
jae
pandn
add
test
mov
and
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
push
add
add
lcall
cld
jae
add
sub
add
repz
ljmp
cld
jae
add
add
scas
push
add
fucomp
std
clc
repnz
nop
cld
jae
add
add
jle
clc
repnz
nop
cld
jae
cmp
add
add
push
mov
xchg
ret
fildll
add
add
mov
push
mov
leave
nop
jmp
push
add
rorb
mov
repnz
movsb
call
nop
jmp
add
add
add
repnz
nop
cld
jae
add
sub
inc
add
nop
push
mov
leave
nop
jmp
lret
add
inc
roll
nop
cld
jae
add
mov
add
cli
fsubrl
dec
nop
push
mov
leave
nop
jmp
xlat
mov
mov
add
ret
mov
clc
repnz
nop
cld
jae
add
mov
shlb
jo
nop
push
mov
leave
nop
jmp
stc
push
add
push
push
mov
xchg
ret
add
add
les
add
push
clc
repnz
nop
cld
jae
fldl
cmp
add
mov
clc
repnz
nop
cld
jae
add
pop
insl
mov
clc
repnz
nop
cld
jae
rolb
xchg
mov
jae
repnz
nop
cld
jae
outsl
add
add
stos
push
clc
repnz
nop
cld
jae
push
scas
into
faddl
xlat
inc
cmp
nop
push
mov
leave
nop
jmp
add
ljmp
add
pusha
addb
clc
repnz
nop
cld
jae
jne
add
insb
add
cmp
push
mov
leave
nop
jmp
sub
add
push
add
nop
push
mov
leave
nop
jmp
add
pusha
mov
push
mov
add
mov
adc
mov
xchg
add
jno
rclb
adc
cmp
ret
sbb
add
lret
dec
push
addb
add
xchg
fistpl
push
mov
xchg
ret
pop
insb
add
rolb
inc
sbb
push
clc
repnz
nop
cld
jae
ret
outsl
pop
adc
pop
pop
mov
clc
repnz
nop
cld
jae
ljmp
mov
xorb
mov
nop
push
mov
leave
nop
jmp
pop
inc
into
mov
jne
nop
push
mov
leave
nop
jmp
add
out
mov
clc
repnz
nop
cld
jae
leave
add
push
cli
lcall
nop
nop
cld
jae
add
sub
and
and
xor
push
mov
xchg
ret
add
fisttps
add
jne
enter
nop
nop
cld
jae
add
mov
mov
nop
push
mov
leave
nop
jmp
add
inc
mov
clc
repnz
nop
cld
jae
fildll
inc
cwtl
scas
add
push
mov
xchg
ret
jae
add
in
mov
nop
nop
cld
jae
add
shrb
iret
mov
push
mov
xchg
ret
jne
jb
imul
and
dec
clc
repnz
nop
cld
jae
lret
jae
adc
leave
push
and
repnz
nop
cld
jae
aaa
mov
and
clc
repnz
nop
cld
jae
add
dec
mov
xchg
ret
mov
mov
fistpl
nop
push
mov
leave
nop
jmp
add
add
add
jmp
clc
repnz
nop
cld
jae
add
mov
nop
nop
cld
jae
add
xlat
sub
xlat
fisubs
mov
leave
nop
jmp
shrb
sub
fwait
clc
repnz
nop
cld
jae
scas
cs
xchg
pusha
pusha
jns
xor
adcl
repnz
nop
cld
jae
into
and
add
clc
repnz
nop
cld
jae
das
cs
repnz
nop
cld
jae
pusha
add
inc
add
pop
movsl
push
clc
repnz
nop
cld
jae
push
jb
xor
lcall
and
push
mov
leave
nop
jmp
add
leave
add
sub
cmp
clc
nop
push
mov
leave
nop
jmp
jb
add
arpl
push
mov
leave
nop
jmp
in
mov
mov
add
add
nop
push
mov
leave
nop
jmp
add
add
lret
mov
rclb
nop
jmp
repz
add
cmp
nop
push
mov
leave
nop
jmp
push
shl
into
add
jno
call
cld
jae
add
add
add
stc
sbb
jg
add
lret
add
add
lret
add
clc
repnz
nop
cld
jae
and
add
add
adc
rolb
fld1
push
mov
xchg
ret
add
arpl
sub
nop
cld
jae
lcall
add
nop
push
mov
leave
nop
jmp
inc
add
xlat
outsl
push
jle
shr
sar
clc
repnz
nop
cld
jae
add
pop
mov
rorl
repnz
nop
cld
jae
add
cmp
inc
add
clc
repnz
nop
cld
jae
add
lock
ds
aas
sar
clc
repnz
nop
cld
jae
ljmp
mov
xchg
ret
leave
movsb
lret
rclb
push
fcomip
jb
add
clc
repnz
nop
cld
jae
add
in
add
call
inc
add
add
add
add
cmc
movzwl
clc
repnz
nop
cld
jae
add
fistpll
rol
push
mov
xchg
ret
add
repz
pop
sahf
push
sti
add
nop
push
mov
leave
nop
jmp
add
arpl
filds
add
push
push
mov
xchg
ret
fistpll
mov
add
ret
sbb
cld
jae
add
in
fcomp
add
push
mov
xchg
ret
add
cs
push
add
cmp
nop
nop
cld
jae
movsb
add
add
fwait
push
nop
push
mov
leave
nop
jmp
add
aaa
movups
sub
mov
clc
repnz
nop
cld
jae
cs
das
leave
sbb
mov
xchg
ret
add
adc
and
xor
clc
repnz
nop
cld
jae
outsl
add
push
out
pop
nop
push
mov
leave
nop
jmp
add
add
imul
movsb
clc
repnz
nop
cld
jae
xor
repz
add
pusha
pusha
rdpmc
sar
nop
nop
cld
jae
movsb
add
fs
lcall
cld
jae
jb
adc
add
cs
xor
leave
add
push
mov
xchg
ret
pop
add
pop
xchg
fwait
nop
push
mov
leave
nop
jmp
cli
add
pop
scas
lcall
clc
repnz
nop
cld
jae
pop
add
add
add
pop
clc
repnz
nop
cld
jae
add
add
add
mov
repnz
nop
cld
jae
add
push
in
movzwl
nop
push
mov
leave
nop
jmp
add
add
add
fld1
push
mov
xchg
ret
add
rolb
scas
add
inc
push
mov
push
add
or
or
jmp
in
inc
add
lcall
mov
pop
clc
repnz
nop
cld
jae
cs
add
in
movsb
add
pusha
sbb
mov
clc
repnz
nop
cld
jae
ucomiss
outsl
jae
add
add
nop
jmp
faddl
add
add
jge
add
add
repz
add
push
nop
push
mov
leave
nop
jmp
into
into
xlat
add
subl
clc
repnz
nop
cld
jae
xchg
mov
fisubl
movsb
clc
repnz
nop
cld
jae
insb
mov
add
jbe
clc
repnz
nop
cld
jae
add
add
das
ret
push
mov
xchg
ret
push
add
into
scas
add
into
clc
repnz
nop
cld
jae
sub
add
mov
push
mov
xchg
ret
adc
pop
lcall
repnz
nop
cld
jae
add
add
add
pusha
inc
add
movsb
add
add
adc
push
clc
repnz
nop
cld
jae
add
inc
in
add
int3
mov
add
sub
add
push
mov
leave
nop
jmp
insb
xlat
pusha
push
add
call
inc
iret
add
clc
repnz
nop
cld
jae
add
pop
add
add
add
clc
repnz
nop
cld
jae
add
inc
ljmp
pushf
repnz
fwait
clc
repnz
nop
cld
jae
add
jb
fiadds
mov
pop
sbb
nop
cld
jae
pusha
add
add
lods
push
mov
xchg
ret
inc
add
inc
frstor
push
getsec
imul
cmc
dec
add
add
fisubs
repz
nop
push
mov
leave
nop
jmp
aaa
jb
sbb
add
push
push
mov
xchg
ret
insb
mov
stc
pop
scas
lods
inc
pusha
dec
mov
clc
repnz
nop
cld
jae
mov
popf
push
push
mov
xchg
ret
add
fidivrs
pushl
push
mov
xchg
ret
jne
pop
sub
aaa
push
mov
add
add
dec
push
xlat
add
sarl
pusha
add
cmp
roll
adc
int3
adc
inc
and
andb
stc
jae
call
jle
adc
mov
iret
repz
jg
jl
inc
push
stos
and
stos
mov
cmp
mov
mov
aaa
rcl
enter
gs
or
loopne
mov
imul
and
mov
movsl
scas
shl
or
push
clc
andb
jg
scas
pusha
pusha
icebp
movb
jb
pusha
rcrb
shlb
sbb
test
loopne
mov
call
and
pop
clc
scas
inc
mov
jp
hlt
pop
out
dec
fiadds
loopne
inc
rcrb
sub
pusha
xor
ret
les
push
and
fidivl
xor
shrb
mov
push
fsubrl
ljmp
jp
ret
inc
stos
fildll
cmp
mov
or
insl
push
test
call
test
cmp
cmp
cwtl
jecxz
xchg
push
mov
mov
loopne
sbb
imul
mov
push
mov
inc
or
popl
rolb
arpl
rolb
xchg
push
sbb
and
mov
rolb
jb
jae
idivb
pop
dec
out
aad
cwtl
push
shlb
cmp
inc
xor
pushf
xor
insb
jae
aam
push
bound
aam
cmp
adc
jnp
out
mov
inc
sub
pusha
add
and
loopne
push
cmp
insl
fwait
add
jmp
pusha
mov
out
aaa
mov
loopne
insb
cmpsb
pusha
mov
mov
jb
mov
loopne
ror
add
add
dec
dec
shrl
enter
jb
mov
andb
mov
fldcw
stos
mov
arpl
mov
outsb
in
jecxz
mov
dec
adc
daa
pop
jmp
jg
pusha
add
mov
rolb
loopne
cwtl
addr16
mov
adc
test
loopne
sti
dec
pop
pop
loope
sti
shrl
nop
repz
xlat
aaa
push
frstor
xchg
popf
sbb
add
add
xor
sub
or
add
pusha
inc
outsl
repz
shlb
mov
jb
jne
pusha
mov
pusha
loop
xor
rorb
fs
loopne
testl
and
sub
add
insb
mov
insl
sbb
add
lahf
int
xchg
and
sahf
inc
jb
andb
mov
and
and
xlat
sub
pusha
icebp
hlt
add
inc
in
sbb
loope
stc
outsl
out
mov
pop
jno
and
mov
sbbb
push
add
or
jae
add
sbbl
rolb
inc
xor
mov
fwait
insl
pop
divl
fimuls
loopne
mov
xor
lods
scas
sar
cmpsl
sub
pusha
mov
and
jne
ret
fucom
mov
sbb
mov
pusha
and
cmp
dec
jno
and
mov
pop
mov
loopne
jge
sbb
rorl
jns
sbb
mov
loopne
and
dec
dec
pop
mov
and
add
gs
and
stos
push
push
aaa
jno
add
mov
inc
repz
lcall
mov
jge
stos
and
icebp
idivl
ret
push
into
or
and
shrl
inc
pusha
mov
adc
mov
addb
pusha
iret
fidivs
aaa
push
pop
nop
incl
aad
add
mov
xchg
sub
and
cmp
loop
pop
jno
xor
je
pop
mov
movsl
xor
sar
movsl
push
testb
xchg
arpl
clc
cmp
lds
divl
int
mov
mov
insl
clc
and
mov
fs
pusha
ffreep
cmpsb
loopne
loop
daa
popf
fsts
into
mov
pop
aaa
or
mov
aad
in
xor
xor
hlt
leave
popw
stc
lds
inc
adcb
out
jle
das
and
pop
jle
mov
inc
in
xor
icebp
outsl
or
lock
shlb
fnstcw
xor
push
cli
popa
adc
adc
and
xor
mov
mov
inc
es
pusha
or
add
test
sbb
inc
out
add
and
pop
lods
mov
xor
loopne,pn
mov
cltd
lds
xor
push
out
jmp
push
call
imul
pusha
rclb
push
pushf
dec
jo
andb
call
xchg
fs
mov
add
xchg
add
mov
mov
add
push
push
shlb
xchg
push
add
and
pop
cwtl
mov
loopne
fcmovnbe
adc
mov
mov
leave
mov
imul
sti
fisttps
and
and
xorb
rolb
or
and
push
fcompl
xor
xlat
cmpsb
addb
push
and
rolb
pop
xchg
pop
sbb
sub
and
mov
andb
push
pusha
jbe
shrb
mov
push
mov
hlt
add
push
ret
popf
jecxz
loopne
push
pusha
ret
adc
jl
rcr
inc
jbe
shlb
cmp
leave
fcomps
and
dec
nop
pop
pop
push
pusha
add
add
pushf
ret
cwtl
pusha
es
shrd
pusha
movsl
inc
inc
xchg
push
sub
add
hlt
rorl
jne
popa
fdivrl
mov
rol
cwtl
lret
or
shlb
movsb
shl
arpl
mov
cmp
pop
jp
andb
push
mov
dec
push
mov
lahf
jmp
shlb
and
imul
and
pop
jmp
repnz
leave
lock
mov
mov
ss
jecxz
out
mov
xor
je
ret
xchg
fstp
xchg
dec
jns
adc
rolb
loopne
lret
lret
and
and
add
dec
loop
stos
andb
loopne
xor
cmpsl
mov
popf
jge
add
sub
pop
jns
push
xchg
or
adcl
or
test
loopne
cld
inc
adc
xchg
xor
ja
adc
and
arpl
ret
repnz
inc
not
or
jbe
shrl
add
dec
leave
les
xchg
or
inc
je
fsubrl
pusha
mov
stos
nop
mov
mov
mov
jle
imul
inc
xchg
push
int
dec
cmp
das
dec
or
shlb
movl
stos
mov
out
push
sbb
and
loopne
xchg
loopne
scas
test
lock
add
in
outsl
inc
sahf
into
lcall
lds
xchg
adc
sub
jle
xor
int3
add
rorl
add
add
push
pop
jecxz
sbb
ret
xchg
loop
scas
add
pop
mov
in
xor
cwtl
inc
js
in
jno
call
inc
push
pop
insb
lret
or
stos
dec
pushl
ja
ret
sbb
xlat
pop
inc
jge
jbe
shrl
cmp
or
adc
dec
sbb
sub
pop
inc
adc
or
xor
das
lcall
and
jl
test
mov
cmpb
or
addr16
inc
fsubs
and
xor
push
pop
jmp
xchg
fildl
mov
pop
jmp
jmp
or
rorb
inc
mov
les
jne
loopne
loop
in
aam
and
mov
rolb
nop
mov
mov
lahf
js
insb
frndint
push
subl
fwait
inc
std
add
aad
enter
pop
adc
out
inc
inc
or
data16
and
fildl
jno
mov
or
add
rolb
inc
lret
jp
sbb
in
jno
iret
rclb
mov
sbb
pop
loop
data16
pop
jnp
xchg
sub
ja
insb
cmp
lret
mov
lret
xchg
pushf
inc
addr16
fwait
adc
addb
imull
movsb
andb
lods
add
stos
andb
sbb
and
popf
lea
sbb
repnz
in
push
arpl
int
pop
pop
pop
inc
pop
nop
cld
aad
arpl
sti
xchg
pop
pop
and
xchg
addr16
or
add
and
or
aaa
push
xor
pusha
addb
push
inc
imull
imul
icebp
stos
andb
pop
shr
sbb
push
clc
cmp
sub
loopne
push
mov
or
shlb
push
loopne
xchg
and
shl
std
xchg
push
push
and
mov
andb
cmpsl
inc
test
mov
cli
insl
and
sbb
clc
mov
fnstsw
popl
cwtl
cmp
sub
imul
push
and
lret
ret
seto
popf
mov
iret
xchg
mov
and
rolb
loopne
ljmp
mov
aas
dec
pusha
jmp
sub
inc
inc
cmpsl
xchg
mov
orb
mov
scas
sbb
xchg
lret
inc
das
repnz
call
test
mov
lcall
cli
mov
push
ficomps
xchg
call
mov
and
mov
and
test
loop
inc
ret
imul
sti
cmp
icebp
addb
and
inc
mov
inc
scas
clc
mov
pusha
mov
or
pusha
stos
add
mov
xchg
cltd
es
xor
push
scas
xor
sub
clc
inc
inc
mov
lock
ffreep
rep
push
jge
pop
fst
ret
shll
leave
jmp
xor
push
add
mov
je
leave
or
pop
sbb
push
pusha
add
xorb
stc
adc
loopne
inc
inc
mov
add
into
movsl
jne
dec
loop
xlat
push
lods
inc
inc
xlat
repnz
push
movsb
addb
inc
dec
sbb
bound
push
shl
xlat
add
or
enter
and
mov
sbb
scas
hlt
cld
lods
shl
push
test
in
cli
scas
test
andb
jge
lods
int3
jge
add
stc
cmp
add
dec
in
add
ret
add
push
add
rclb
cmp
jl
or
xchg
xor
scas
add
mov
rolb
inc
or
test
push
lea
insb
adc
jl
mov
push
xlat
lret
sub
xor
xchg
out
sar
mov
pusha
adc
sub
and
add
pusha
in
add
or
add
push
repnz
lcall
sbb
sbbl
inc
mov
push
loopne
sahf
or
jge
adc
cltd
iret
addr16
shrb
rcrb
cmp
jne
rolb
jbe
pusha
mov
repnz
mov
and
loopne
inc
pop
mov
hlt
call
pusha
inc
xchg
jmp
or
cmp
add
and
inc
and
mov
pusha
clc
lret
dec
jbe
sub
or
loopne
loopne
iret
jg
mov
sbb
push
cmp
std
push
cmp
pusha
jbe
jno
shr
andb
shlb
shl
add
add
mov
testl
mov
dec
std
pop
jno
test
mov
mov
aad
jns
jl
mov
cmp
mov
scas
pusha
inc
insl
test
mov
cli
jecxz
gs
mov
jb
or
adcb
mov
dec
aam
pop
and
push
stos
and
mov
sbb
test
mov
push
pop
leave
in
pop
mov
loopne
loopne
ficoms
xchg
mov
xor
std
lcall
loopne
pop
and
loopne
stos
pusha
add
inc
xor
sbb
dec
shrl
inc
cmpb
pop
xchg
loopne,pn
lcall
lea
mov
pop
xchg
pop
add
enter
pusha
mov
filds
rolb
push
xor
push
popa
cmpsl
add
xor
fwait
xchg
inc
enter
pop
push
cltd
cmc
or
mov
jnp
add
pusha
dec
movb
pusha
mov
popa
testb
negl
enter
push
pop
lret
sbb
in
aas
sahf
pop
in
add
rolb
sub
jae
icebp
lock
movsb
inc
and
into
inc
cmpsl
rcrl
dec
push
fldt
pop
push
mov
push
push
dec
scas
mov
jp
inc
enter
sbb
mov
cmpsl
dec
mov
daa
mov
push
out
push
inc
and
add
xor
inc
arpl
lods
aaa
hlt
scas
test
lcall
mov
in
pop
adc
in
fsubr
mov
ret
insb
and
addb
pop
test
pusha
shlb
loopne
mov
and
roll
loopne
pop
out
jl
jb
fsubrs
pop
int3
adc
shl
imul
cmp
mov
mov
fisubs
andb
add
jo
lock
mov
inc
inc
pop
mov
shl
mov
push
inc
add
sub
add
rolb
add
ret
loopne
fcomps
mov
into
inc
lahf
cmc
addb
dec
sbb
rolb
xchg
xor
ret
scas
and
inc
loopne
pusha
pusha
cli
lret
mov
je
inc
ret
addb
jmp
loope
mov
cmp
mov
loope
push
hlt
les
popa
or
sbb
andb
lods
inc
and
andb
rolb
add
ror
andb
sub
lcall
jle
rolb
mov
jle
add
shr
mov
iret
add
and
packsswb
out
cli
mov
loopne
jp
gs
rclb
dec
and
sbb
mov
add
test
and
shrl
shl
int3
sub
mov
mov
filds
notb
je
lret
inc
inc
push
nop
and
mov
ret
in
mov
pusha
adcb
pusha
int3
jbe
inc
aad
and
add
pop
cwtl
scas
shll
int
arpl
push
jae
cmp
gs
xchg
icebp
pop
arpl
xchg
outsl
mov
sub
aam
fnstcw
les
jae
ficompl
mov
mov
movsl
rcl
add
mov
mov
call
shlb
ds
aaa
mov
rcrl
addb
aaa
fnsave
icebp
dec
mov
jg
je
jmp
mov
sub
loopne
mov
jp
jno
sub
jb
stos
lods
loopne
adc
lea
fidivl
mov
pusha
xchg
or
loopne
nop
or
mov
push
andb
mov
jle
ds
popf
or
cwtl
sahf
fs
and
add
and
sbb
fmull
ja
mov
jbe
cwtl
cmp
jo
shlb
das
jo
pop
sub
rol
fdiv
sub
and
pusha
adcb
rcr
adc
and
or
push
pop
stc
mov
sahf
lods
ja
stc
loopne
in
add
pusha
lods
dec
pop
icebp
xor
push
repnz
rcl
fists
xchg
cmp
scas
xorl
xor
push
lods
andb
mov
addb
pop
push
mov
xchg
imul
xor
mov
pusha
in
ljmp
cli
mov
jle
jo
dec
loop
andl
jmp
cli
hlt
adc
xchg
outsb
xor
push
inc
loopne
mov
mov
push
sub
shlb
cmp
cltd
into
imul
mov
xchg
push
in
xchg
test
pusha
cltd
jnp
add
add
movsb
loopne
popa
mov
xlat
cmp
mov
sahf
mov
int
mov
shrb
cmpb
imul
rclb
mov
and
sub
add
push
jo
add
arpl
pop
xor
popl
mov
lret
sub
and
xor
jae
adc
mov
inc
lea
add
inc
pusha
mov
xor
lret
jae
fs
in
mov
pusha
loopne
and
mov
mov
jmp
pop
adc
lock
xor
mov
hlt
addr16
dec
inc
lock
bound
mov
test
add
sub
adc
jnp
mov
shll
xlat
sub
inc
imul
int3
aam
loopne
xchg
xor
cmp
add
pop
cmp
cmp
lods
pop
jae
cld
add
rolb
incl
sbb
pusha
or
repnz
mov
inc
add
outsl
push
pop
or
repnz
rcrb
push
and
shl
push
pushf
xchg
pusha
enter
cmc
loope
push
push
add
pop
cmpsl
shl
roll
lahf
iret
xchg
xor
lods
pusha
pusha
add
cmpsl
lahf
shll
testb
shlb
xor
xchg
mov
or
addb
stc
mov
rorl
cmp
or
mov
xchg
fsubl
repnz
mov
shlb
or
dec
notb
mov
movsl
push
sbb
xor
stos
mov
clc
sbb
dec
daa
sbb
out
loop
shl
pop
push
movsl
sbb
shlb
cmpsb
add
push
pusha
pusha
push
xchg
sarl
inc
sbb
lret
xor
pop
lret
ret
mov
out
out
add
imul
enter
and
popa
std
cmp
repz
loopne
pop
aam
pop
adc
inc
mov
loopne
jg
jle
jmp
cmp
mov
mov
test
add
dec
into
leave
stos
push
pop
lahf
mov
icebp
xchg
jnp
push
pusha
loopne
cmp
outsl
cmp
pop
pop
pop
bnd
inc
mov
mov
loope
inc
pop
lea
mov
in
test
add
xor
add
pusha
inc
jecxz
scas
add
push
xchg
mov
dec
inc
push
push
fnsave
jg
jmp
dec
rcl
enter
aad
sub
leave
sub
jg
and
loopne
clc
pop
gs
andb
pop
push
addr16
andb
rol
aaa
fwait
push
cmp
sti
jecxz
lods
rorb
shl
add
mov
out
xchg
clc
je
cmp
xchg
fwait
insl
test
orb
into
inc
movsb
loopne
movsb
and
ret
ds
into
jecxz
lods
addb
andb
mov
daa
jmp
leave
sbb
dec
mov
arpl
mov
pusha
mov
fisubs
das
pop
jne
scas
and
and
scas
loopne
bound
jmp
jae
or
sub
sub
repz
add
dec
loope
push
imul
jge
lock
mov
shlb
inc
pop
hlt
in
mov
jp
mov
test
mov
rolb
orb
sti
dec
xor
push
lahf
test
push
jb
push
and
xor
aam
jns
into
sti
shrl
or
rolb
mov
dec
mov
sub
mov
das
es
sub
and
mov
adc
mov
inc
sti
mov
addb
faddl
loopne
xor
in
int3
nop
xchg
aam
scas
pusha
mov
fs
jb
xchg
ja
inc
xchg
xchg
outsl
pop
int
movsb
rolb
mov
shll
sbbb
push
in
fldt
addb
rcll
and
imul
lock
or
je
add
not
push
inc
and
int3
cltd
fiadds
xchg
sub
in
bound
cmc
sub
cmpsb
shlb
xchg
jmp
mov
push
mov
lds
mov
loopne
mov
pop
inc
mov
xchg
aaa
pop
mov
loopne
sub
inc
and
rol
pushf
add
or
add
bound
loop
loopne
loope
cli
pop
and
mov
sbb
call
loopne
add
orb
adc
pop
fsubp
fidivs
xchg
and
insl
flds
xor
subb
jbe
aad
pop
ljmp
and
scas
testb
jne
add
adc
sbb
sahf
mov
push
inc
pusha
push
in
lret
loopne
ret
and
add
inc
in
push
testb
and
jo
std
jae
push
stos
add
pusha
cmp
push
mov
mov
scas
jmp
pop
sarb
pop
fchs
xchg
sbb
es
mov
or
rolb
mov
push
cmp
sarb
adc
sbb
mov
fnstcw
push
addb
sub
or
adc
sub
sub
les
mov
pusha
pusha
push
mov
daa
into
std
jecxz
addb
call
shlb
shl
jbe
pushf
nop
pop
jno
adc
cmpsb
andb
idivb
adc
lea
and
data16
xlat
pop
jo
cmp
fimuls
ss
pusha
add
and
mov
jg
test
inc
jnp
xchg
mov
add
movsl
rorb
test
andb
add
jns
lret
push
sbb
pusha
cmp
and
inc
rolb
lcall
jb
rol
cltd
push
push
shlb
mov
mov
xor
mov
push
add
mov
xchg
push
mov
pusha
sub
add
dec
xchg
arpl
or
shlb
xchg
mov
xor
or
mov
fs
add
jno
push
lods
mov
adc
xchg
and
inc
nop
inc
insl
nop
and
rorb
or
in
mov
mov
inc
xchg
das
or
mov
loope
inc
loop
adc
dec
and
mov
mov
andb
leave
xor
cmp
and
xchg
fcomp
shll
dec
push
push
xchg
movsl
pusha
jl
sbb
nop
dec
clc
clc
int3
inc
inc
and
loopne
jle
inc
pop
test
inc
loopne
or
and
push
addb
add
inc
repz
mov
jg
out
or
aas
inc
jno
stos
pop
arpl
test
dec
sub
mov
fldcw
and
pusha
inc
inc
and
xchg
push
lahf
lods
jl
inc
add
mov
or
push
and
push
push
addb
sub
mov
aad
cmp
adc
sbb
and
shlb
lret
ss
mov
jecxz
je
imul
fs
sti
adc
mov
andb
dec
mov
movsl
pop
inc
dec
dec
sbb
je
loopne
adc
xchg
loopne
cmpsb
rolb
push
mov
and
push
sar
adc
add
sarb
ss
dec
mov
sub
sahf
inc
jnp
or
test
dec
mov
shlb
or
mov
push
xchg
or
lret
and
cltd
in
lret
cltd
mov
int3
pusha
xor
pusha
push
and
loopne
adc
cwtl
inc
minps
je
push
lret
pop
das
dec
cs
mov
in
adc
lock
aam
add
test
and
push
scas
andb
xlat
push
fs
push
int3
test
xorb
pusha
shrb
sub
mov
sub
add
add
cltd
inc
in
pop
ficomps
jo
and
aam
mov
and
xor
pusha
add
lcall
dec
pop
adc
jle
pop
ret
xor
ja
mov
pop
or
and
rcrl
aad
insl
jo
and
push
and
add
cmp
shl
or
inc
jl
and
mov
push
adc
dec
mov
arpl
aad
pop
pop
push
add
data16
rorb
lret
xor
adc
lea
xchg
lret
mov
pusha
and
add
cmp
mov
sub
cli
pusha
gs
mov
add
sbb
sub
mov
cwtl
hlt
addb
xchg
or
pop
xchg
stos
aaa
fcomps
adc
rolb
decb
scas
pusha
add
outsl
pusha
ja
ja
or
mov
mov
and
push
andb
mov
mov
lret
orb
mov
test
hlt
js
lods
sbb
jmp
inc
leave
rol
mov
pusha
mov
push
popa
xor
mov
pushf
jle
lods
rolb
add
mov
sbb
inc
out
xchg
int3
cli
ds
or
hlt
pop
xchg
jle
loop
xrelease
cmp
outsb
rcll
mov
sbb
pusha
and
adc
outsb
fs
fsts
mov
rorb
mov
pusha
mov
mov
rcll
ss
pop
sub
stos
lds
inc
inc
or
xchg
sbb
adc
je
sbb
fcomi
jnp
test
mov
pusha
repnz
sbb
or
lods
jnp
dec
push
pop
jae
pop
mov
adc
jno
jle
or
add
push
mov
adc
js
push
xor
cmp
aam
dec
adc
jl
push
faddl
pop
jge
mov
pop
cmpsl
push
rolb
loopne
pop
js
and
add
jg
cmp
nop
test
add
inc
shlb
sub
push
jl
xchg
add
mov
ret
sub
pusha
xchg
inc
sub
outsb
push
push
popf
cmc
and
sbb
mov
addb
pusha
std
pop
rorl
mov
mov
mov
push
and
jmp
adc
loop
mov
mov
adc
int
cwtl
daa
int3
faddp
test
scas
mov
out
mov
out
mov
add
lock
sbb
loopne
ret
cmpsl
sbb
addb
or
shlb
and
cltd
lret
and
and
pusha
mov
mov
jnp
outsl
inc
sbb
daa
or
xor
cmp
sbb
ss
repz
stc
pusha
add
sub
add
add
lea
in
inc
xchg
add
cli
inc
mov
rolb
cmpsb
add
popa
es
inc
mov
insb
add
add
mov
pusha
pusha
xor
add
add
sbb
pusha
pusha
and
lods
pusha
add
imulb
and
sub
mov
pusha
or
shl
inc
and
mov
push
loopne
mov
and
loopne
pusha
add
clc
loope,pt
jecxz
test
subb
xchg
xchg
add
mov
out
pop
mov
add
inc
adc
gs
loopne
pop
loopne
ljmp
imul
cwtl
pop
scas
add
outsb
mov
jl
in
pop
popa
repz
push
cltd
jne
std
add
std
and
loopne
cmp
pop
pop
scas
rol
push
xor
xchg
pop
or
out
mov
loope
mov
xor
rolb
rolb
sbb
adc
add
pop
js
cmp
inc
jecxz
inc
rolb
dec
pop
cwtl
stc
lcall
xchg
out
cli
jecxz
inc
mov
mov
and
lcall
int3
mov
mov
mov
cmp
xor
jbe
pusha
add
int
je
movsl
out
roll
and
sarb
sahf
ds
mov
rep
fisubs
cmpl
sbb
or
pusha
cmp
pop
daa
mul
jg
test
mov
cli
cmp
sbb
pop
cwtl
mov
mov
test
mov
dec
jns
adc
out
ja
xchg
dec
mov
addr16
sahf
movsb
and
sbb
inc
pop
daa
aas
and
in
dec
jp
call
jbe
jge
cli
cltd
ss
imull
ja
test
pop
aaa
out
imul
mov
sbb
sbbb
loope
shlb
ret
xchg
out
mov
cmpsl
pop
fimuls
and
mov
jo
xchg
sbb
in
cmp
and
mov
fidivrs
push
andb
xor
mov
loopne
sub
pusha
inc
cli
fisubs
shl
lds
xchg
cmp
shlb
test
in
movsb
andb
push
adc
dec
pop
fsts
mov
add
outsl
xor
xor
bnd
shrb
xor
jae
pop
pop
std
sbb
fdivrp
pusha
fsub
lods
mov
je
mov
repz
movsb
add
je
mov
jb
cmp
ja
in
push
cli
sub
andb
push
ror
cwtl
xor
sbb
dec
clc
dec
stos
sahf
inc
mov
ja
pusha
mov
sahf
dec
bound
pushf
mov
add
in
popa
xlat
jnp
mov
push
and
mov
lea
cmpsb
mov
mov
sbb
mov
and
pusha
mov
sbb
ja
pop
lea
adc
xchg
cmc
xchg
sahf
dec
and
loopne
pusha
adc
mov
lret
aaa
mov
ss
xchg
mov
and
jle
scas
add
das
jmp
popa
lock
sbbl
mov
add
sbb
or
andb
xchg
ror
adc
inc
inc
pop
call
add
cmpsb
pusha
add
fs
loopne,pn
jne
cmpsl
test
sub
xchg
mov
and
sbb
push
loopne
mov
mov
mov
loopne
inc
lods
sbb
jge
sub
mov
sbb
test
pusha
push
adc
inc
test
daa
ja
mov
pusha
pop
fwait
les
insb
or
sbb
mov
ss
addb
push
cltd
out
xor
mov
orb
pop
leave
sub
xchg
addb
rol
add
add
fdivl
roll
jno
incl
jecxz
pushf
stos
add
add
loopne
pop
mul
inc
jg
add
into
pop
popa
inc
aaa
adc
mov
popf
js
and
mov
loopne
jbe
push
fmuls
rolb
sbb
inc
or
shrb
sahf
mov
inc
cmp
jnp
sub
mov
enter
fldcw
add
loopne
ficoms
pop
pop
mov
or
aad
inc
icebp
rorl
shl
or
or
and
bswap
dec
test
mov
cmpxchg
pusha
sub
pusha
and
pop
sub
popa
or
dec
push
loopne
iret
xor
cmp
add
adc
loopne
sar
cwtl
clc
jnp
push
inc
mov
popa
mov
pusha
jle
lahf
out
mov
rorb
push
inc
pop
scas
shlb
rcrb
or
jle
or
or
dec
sub
add
shlb
cltd
cwtl
adc
dec
lret
cmp
and
xchg
gs
dec
je
dec
std
loop
jp
or
pause
pop
and
loopne
daa
mov
cltd
inc
ss
addb
sbb
push
mov
das
dec
into
pop
into
out
loopne
in
dec
jmp
pusha
xchg
add
dec
rcr
stos
add
test
lea
std
mov
aas
scas
inc
pusha
imul
mov
sbb
jno
cwtl
enter
shr
andb
test
inc
and
cmp
idivl
pop
inc
inc
xor
cli
popf
out
addr16
pop
jl
and
loopne
mov
test
pop
test
mov
and
stc
dec
push
adc
mov
push
sbb
fstl
jmp
inc
and
lods
imul
rolb
dec
pop
movsl
or
and
sbb
pop
imul
mov
rolb
mov
mov
mov
test
pusha
loopne
fdivrs
mov
push
push
mov
ret
loopne
inc
out
inc
mov
loopne
sub
pusha
dec
cwtl
jo
jecxz
pop
mov
and
andb
push
sub
pop
lods
add
pop
jmp
les
loopne
rolb
xchg
cmp
loope
sbb
add
mov
rcrb
pop
push
and
mov
pusha
mov
ss
icebp
dec
mov
aaa
rolb
das
ret
imull
out
pushf
int
and
loope
mov
cmp
outsb
inc
sub
and
inc
add
mov
and
lret
in
adc
loopne
inc
or
sbb
inc
subb
adcb
and
or
inc
jns
loop
pop
rol
sub
in
imul
and
inc
cltd
sarl
repz
outsb
insb
stos
test
inc
inc
lods
pusha
add
aad
jne
movsb
inc
pusha
icebp
adc
hlt
add
in
test
andb
sub
mov
push
addb
or
addr16
jb
popf
xchg
mov
or
pusha
jmp
xchg
cli
inc
scas
inc
mov
inc
add
sbb
jl
push
imul
sbb
mov
push
mov
subb
mov
xchg
shrb
shl
push
loopne
add
pop
mov
sub
mov
mov
dec
rcl
stos
shlb
and
sar
push
sub
mov
shlb
lret
daa
outsb
in
lock
rolb
pop
ja
shrl
fwait
inc
xchg
ror
aas
jbe
mov
rolb
sbb
sub
iret
in
je
pop
sarl
lcall
inc
add
aam
mov
loopne
addb
fnstsw
sbb
nop
nop
ror
cmc
push
stos
inc
mov
mov
scas
mov
mov
sbb
sahf
adc
dec
sbb
imul
mov
or
xchg
pusha
push
mov
mov
addb
test
mov
mov
mov
and
sub
hlt
and
push
fisubs
in
xchg
jg
xchg
mov
addr16
push
push
addb
push
dec
jge
xlat
bound
decl
into
in
and
loop
jle
les
mov
jg
pop
jp
imul
push
cli
cmp
cmpsb
mov
pop
mov
cmc
dec
mov
je
mov
and
repnz
dec
cmp
icebp
dec
lds
jno
ds
mov
insl
jno
pop
dec
pop
roll
lea
scas
pusha
pusha
pushf
or
adc
lret
cwtl
sbb
xchg
fmuls
inc
rcrb
movl
mov
and
outsb
dec
inc
sub
mov
mov
out
mov
aam
pop
add
mov
outsl
insb
and
loopne
xor
add
xchg
add
add
mov
push
outsl
pop
aaa
out
or
mov
mov
sar
jmp
out
popa
pop
bound
push
shlb
sbb
push
and
loopne
fcomps
inc
fisubl
mov
test
cmp
stos
cmpsl
ja
mov
rol
ret
sbb
and
mov
push
mov
dec
int3
ret
mov
cmpsl
js
aam
dec
repnz
lret
pop
sub
xchg
mov
movsl
xchg
mov
fs
xorb
xorb
and
jle
and
mov
mov
push
xor
lret
mov
fmuls
add
and
sub
mov
enter
cld
lret
xchg
je
pop
sahf
mov
push
test
int3
sub
mov
sbb
jo
fisttpl
mov
in
stc
daa
push
jae
and
pushf
fistpll
in
cli
je
ret
jns
push
outsl
aas
lods
add
cltd
mov
addb
jecxz
add
cmovg
loopne
call
xchg
lret
jne
addps
leave
mov
and
inc
test
jmp
out
cmpsb
pusha
inc
lcall
mov
mov
pop
popf
das
int
loopne
push
and
lret
mov
aam
lcall
andb
sti
popa
sub
pusha
dec
ja
and
fisubl
rcr
outsb
push
cmp
inc
mov
lret
in
mov
and
jne
xchg
sub
jp
in
fisttpl
jp
push
cli
mov
fsts
mov
into
aad
dec
addb
es
xor
mov
mov
outsb
cmpsl
pusha
subl
ds
xor
and
andb
cmp
and
cmp
sub
inc
cmc
push
sar
mov
inc
in
xor
push
jmp
jle
and
dec
orl
ja
pop
aas
mov
xchg
out
xchg
pushf
in
andb
add
pop
mov
fwait
mov
inc
add
clc
jns
jo
aam
loop
loop
ficompl
push
addb
and
loopne
pop
or
jo
add
mov
dec
ljmp
jle
push
pusha
and
and
push
popf
fdiv
push
xchg
add
jmp
aad
sub
cli
das
je
xchg
inc
roll
in
sbb
and
lret
ret
inc
xor
adcb
rolb
inc
and
jae
pop
mov
jmp
arpl
jb
stc
add
push
add
test
add
pop
xchg
dec
mov
imul
pop
addr16
dec
fcmovu
lcall
stos
les
and
mov
sub
idivl
xchg
push
push
push
mov
loopne
loop
sub
dec
ret
mov
or
add
add
dec
imul
mov
add
rolb
or
add
pusha
sti
mov
in
mov
mov
pop
test
roll
pop
xor
dec
push
pop
repz
stc
or
ret
repz
sbb
mov
push
push
adc
dec
add
mov
ds
loopne
insb
repnz
repnz
pusha
mov
shlb
jmp
inc
es
leave
lods
add
pop
push
xchg
sub
inc
scas
pop
push
xlat
lods
xchg
pop
mov
fsubr
dec
adc
shlb
and
loopne
hlt
scas
or
and
adc
xchg
pop
xor
pop
mov
lock
cmpsl
fsubl
out
mov
or
inc
or
mov
lret
ss
inc
into
adc
xchg
out
xor
mov
movsl
cmpsl
mov
mov
ret
or
sub
loopne
lock
jl
add
loope
dec
and
pusha
pusha
inc
in
movsl
inc
mov
jbe
ret
fs
or
andb
dec
dec
insl
cmp
and
jg
add
mov
imul
add
stos
add
fisttps
mov
out
add
add
jns
aad
mov
int3
lods
push
jne
mov
jl
cwtl
inc
lods
inc
loopne
test
inc
xchg
loopne
jmp
push
sub
addb
fldenv
mov
aaa
cltd
cmp
data16
ret
dec
xchg
insl
in
jle
cmpsb
add
push
push
xlat
inc
adc
cs
int3
adc
andb
add
xor
inc
pusha
adc
jb
inc
mov
inc
add
push
xchg
sub
mov
cmp
adc
pop
mov
xchg
loope
sahf
nop
sbb
mov
pusha
sbb
pop
cmpsb
inc
add
inc
xor
adc
inc
andb
inc
shlb
aad
lock
pusha
into
sti
pop
jne
nop
adc
sbbb
arpl
neg
mov
xor
pusha
and
pop
ret
jle
inc
loopne
mov
mov
mov
testb
inc
nop
push
xor
jbe
rcrb
or
and
sbb
xchg
jge
clc
clc
pop
inc
addr16
pop
push
out
sbb
pusha
jle
mov
fdivrl
xchg
cmpsb
inc
addb
sub
add
mov
add
dec
add
loopne
aam
pop
cltd
addl
in
inc
or
add
lahf
xor
xor
stos
or
mov
lcall
adc
and
and
iret
pop
pusha
inc
adc
inc
mov
inc
mov
inc
ja
test
xorb
ljmp
cmpsl
test
daa
cli
je
dec
aad
inc
mov
xor
mov
adc
mov
fisubl
rol
ret
jl
fidivl
adc
xor
enter
call
stc
xor
sti
pop
cltd
aam
add
mov
fisttps
add
scas
pop
into
inc
jle
or
aas
lods
loopne
fidivrs
aad
sub
and
enter
fs
aaa
sbb
xor
outsb
mov
andb
and
pusha
loopne
shlb
int
xchg
ja
jmp
or
shlb
andb
imul
shlb
add
andb
loopne
out
dec
lods
loopne
bound
mov
dec
sbb
sub
addb
jle
add
mov
pop
aas
sbb
imul
je
aam
icebp
and
and
pushf
xchg
in
addb
lret
stos
movsl
adc
push
and
pop
push
inc
add
push
add
out
mov
loopne
sbb
and
pop
adc
or
push
aam
out
pop
push
fsubs
repnz
jne
cltd
jnp
push
cltd
sarb
cmp
push
les
mov
addb
hlt
or
sarb
icebp
pop
lcall
test
sub
add
or
mov
mov
push
stc
mov
sub
mov
jg
loopne
out
mov
mov
adc
sub
cmpb
pop
ret
lock
ljmp
cmc
test
mov
adc
in
add
jno
stos
inc
add
shlb
pop
and
pusha
pop
pusha
xchg
in
leave
test
loopne
mov
testl
cli
mov
cmpsb
loopne
stc
mov
add
addb
les
jl
pop
mov
push
adc
hlt
pop
mov
ror
inc
push
sbb
jge
pushf
xchg
loope
fsubrs
sub
and
cmc
pop
push
xlat
outsl
dec
add
pusha
rolb
test
pusha
mov
call
lret
loopne
shlb
addb
adc
outsl
mov
pusha
gs
add
sbb
or
pop
mov
and
loopne
test
inc
loopne
nop
and
add
imul
adc
je
leave
or
cmp
stc
test
pusha
xchg
mov
sub
jecxz
pusha
push
cltd
sbb
adc
jnp
jecxz
pusha
pusha
jae
popl
add
add
dec
shlb
sti
xchg
jecxz
mov
and
lock
jmp
ret
mov
cmp
lods
mov
dec
jb
adc
cmpsl
mov
mov
add
inc
and
imul
cwtl
cmc
stc
xchg
lret
jg
xchg
nop
lret
add
movsb
loopne
dec
pop
mov
stos
pusha
add
int
sti
dec
mov
orb
test
dec
int3
pop
and
test
xchg
dec
imul
loopne
inc
push
ret
push
shrb
rolb
add
mov
or
ljmp
pushf
and
aaa
fnclex
call
mov
pusha
adc
and
and
shlb
mov
and
loope
pop
cld
mov
adc
push
jl
adc
inc
loopne
or
inc
push
pusha
orb
inc
loope
iret
mov
adc
pusha
inc
cmp
loopne
push
sbb
add
faddp
pop
dec
pop
addb
sarb
stos
in
pushf
shr
jl
cld
aad
idiv
add
inc
add
inc
loopne
and
jl
int
and
sbb
mov
and
push
jmp
fs
mov
push
or
in
int
out
dec
mov
and
aad
stc
sub
loop
aad
jae
ja
mov
pop
movl
pop
add
and
sbb
fstpl
mov
cmpxchg
popf
sbb
shrl
jg
mov
and
push
jp
pusha
add
outsb
sub
sahf
mov
add
pusha
shlb
arpl
inc
jnp
and
add
subl
ja
int
out
int3
hlt
dec
scas
add
imul
lods
filds
and
ss
hlt
pop
and
in
add
outsl
and
pop
inc
mov
sahf
pop
stc
movsl
lret
rolb
lret
jge
push
add
in
sub
mov
dec
mov
lock
aad
lock
jmp
xor
xchg
adcl
shlb
pop
adcl
test
mov
insb
jp
sbb
insb
test
and
ficomps
mov
in
cmp
mov
mov
bound
pusha
cmp
call
xor
sbb
arpl
add
pusha
adcb
rorb
rolb
imul
xchg
xor
inc
nop
dec
pop
out
jl
push
sub
hlt
sbb
ss
inc
add
mov
xchg
subb
loopne
sub
lock
lock
shlb
subb
pusha
inc
adc
aam
add
inc
daa
outsl
mov
inc
inc
pusha
mov
inc
cltd
sub
hlt
int
jge
sbb
hlt
lcall
rol
push
and
imul
jno
fstpt
pop
xor
mov
ljmp
movsl
fwait
jbe
paddsw
lock
inc
fstl
shll
mov
xchg
fistpll
mov
sbb
mov
adc
imul
mov
fwait
in
push
and
mov
cmp
sbb
std
xchg
inc
or
lahf
out
adc
pushf
pop
inc
aas
test
test
xor
cmp
xor
loope
inc
cmp
and
in
mov
in
cwtl
sarl
mov
add
js
adc
fidivrl
inc
or
jae
mov
fmuls
inc
inc
dec
fsubrl
push
mov
sahf
js
add
fcoml
cmp
cmc
sbb
popa
jnp
lahf
xchg
mov
jbe
jecxz
shlb
punpcklbw
sbb
and
pop
sub
repnz
dec
mov
cmpsl
push
jmp
dec
fisubrl
inc
jl
adc
rcrl
add
jge
inc
subb
rol
mov
jno
and
mov
nop
or
and
cmp
jo
jl
cmp
andb
imul
mov
inc
or
imul
pusha
orb
mov
xchg
push
daa
jns
xor
sbb
inc
loopne
lahf
xchg
je
and
movsb
add
mov
loopne
fsub
cmp
pop
pop
pop
int3
imul
inc
dec
add
in
nopl
in
shl
pop
pop
in
test
and
mov
xchg
aaa
jg
push
or
popa
iret
imulb
or
sahf
sub
pushl
andb
sub
inc
add
cmc
movsl
adc
shrb
xchg
inc
jle
aas
jnp
popa
mov
mov
cwtl
pop
ljmp
sub
inc
sbb
add
add
and
mov
xorb
mov
adc
mov
sub
rolb
lea
inc
push
sub
out
int
gs
jle
mov
and
fsubl
repnz
mov
mov
push
dec
sbb
inc
inc
stos
mov
and
mov
push
test
add
mov
adc
faddp
dec
cld
into
push
adc
pusha
loopne
adc
lods
out
xor
jmp
xlat
cltd
add
and
mov
add
fcomip
jo
je
xor
leave
inc
loope
adc
aam
in
mov
push
or
shlb
mov
lods
loopne
mov
mov
add
push
sub
leave
push
sub
loopne
pusha
mov
cltd
dec
mov
adc
mov
sub
popf
push
and
push
inc
aad
repz
ret
mov
xchg
cltd
cmp
int3
add
test
addb
and
ror
jg
cltd
add
dec
xchg
pop
dec
mov
or
loopne
sbb
pusha
sar
xor
loopne
bswap
push
xchg
jge
pop
adc
fdiv
adc
inc
int
inc
andb
je
call
and
pop
jp
insl
and
dec
lcall
imul
sub
inc
mov
je
cmp
mov
loopne
inc
insl
sub
mov
andb
aas
fcompl
lret
push
xchg
jmp
fidivl
dec
mov
rolb
xchg
fstl
pop
test
or
inc
pop
xchg
lods
iret
fmull
mov
pop
test
pop
xchg
inc
lock
mov
aad
fwait
push
out
lret
cltd
fstps
leave
pushf
popf
pushf
and
pusha
xchg
or
mov
rol
inc
and
out
dec
mov
outsl
cmc
pop
andb
add
loopne
push
push
dec
insb
pop
sarl
shlb
mov
jp
add
inc
aad
mov
loopne
and
cmp
and
pusha
std
nop
fldcw
jne
mov
loopne
test
add
xchg
aas
and
push
loopne
push
stos
mov
fnstsw
mov
pop
jnp
cli
push
dec
jae
xor
pop
jmp
xchg
xlat
dec
std
data16
repz
mov
pop
jnp
loopne
and
subb
mov
ret
cltd
out
sub
pop
add
add
pop
mov
jb
aaa
pop
inc
lods
mov
rolb
shlb
fwait
mov
iret
ja
unpckhps
add
sub
push
faddl
pusha
pop
pop
xor
add
mov
popf
inc
movsl
sub
shrb
frstor
mov
aas
lds
je
pop
mov
add
sub
loopne
xor
frstor
and
dec
out
jno
xchg
loopne
pop
xchg
aad
ficoml
cmc
sahf
cmpl
dec
shlb
aas
sub
cmp
cmp
shlb
pop
push
inc
mov
inc
mov
imul
shrl
pop
pop
scas
and
repz
mov
add
xor
and
mov
inc
inc
ds
shr
push
inc
outsl
andb
test
inc
fistpll
rolb
shlb
mov
subb
and
xchg
sub
ret
rorl
add
inc
mov
dec
imul
mov
fisubrs
and
add
xchg
pop
push
push
and
test
push
lret
bound
push
xchg
and
nop
in
lret
xor
mov
cmp
adc
dec
outsl
mov
jmp
andb
insl
out
test
mov
dec
cli
pop
divl
iret
jmp
xchg
xor
xor
and
arpl
push
adc
cmp
ret
scas
loopne
aad
inc
dec
push
push
jne
out
cmp
into
mov
xor
lods
add
and
loop
loopne
mov
and
mov
and
xchg
mov
xor
xchg
mov
add
mov
outsl
lock
loopne
enter
cmp
sahf
dec
pushf
xchg
jge
sahf
repnz
and
mov
and
add
lods
adc
xchg
lret
jno
inc
add
mov
mov
pop
jnp
add
and
sub
and
jmp
mov
testl
mov
popf
fucomip
or
xchg
lret
dec
mov
mov
popa
in
mov
xor
add
push
cs
add
shlb
adc
shlb
mov
loopne
mov
movsb
shlb
add
in
mov
loopne
push
nop
inc
movlhps
dec
jno
cmp
iret
and
loopne
sbb
ficompl
pop
mov
xchg
sbb
xor
push
cmpl
loopne
push
add
lods
andb
imul
stos
sbb
aas
lfs
jmp
and
loopne
pop
push
add
jle
jmp
outsb
add
jle
jns
pusha
inc
mov
aad
mov
insl
ret
les
shlb
mov
inc
fisttps
mov
stos
decl
sbb
addr16
add
mov
aad
add
mov
inc
hlt
nop
add
loopne
loopne
and
in
data16
addb
ret
shlb
lret
loope
ds
insl
aad
cld
and
and
jmp
inc
mov
call
cltd
into
pop
push
test
pop
clc
mov
neg
ja
inc
pop
pop
jns
aad
xorl
add
shlb
mov
mov
mov
in
push
xchg
push
lret
and
and
mov
das
dec
cmp
adc
ret
adc
inc
xchg
adc
sbb
shlb
or
inc
mov
jae
mov
pop
scas
pusha
loopne
and
add
mulb
mov
or
loopne
test
dec
push
cli
gs
call
push
or
add
call
add
pusha
mov
dec
pop
mov
inc
popf
or
dec
cld
push
inc
and
push
adc
adc
repnz
stos
inc
pusha
andb
mov
lods
andb
mov
loopne
and
sbb
clc
push
dec
ret
and
mov
popa
test
shl
mov
push
jnp
cmp
xchg
pop
aad
out
xchg
mov
add
xor
sub
loopne
push
aas
mov
fdivr
lock
dec
aaa
bnd
ret
xchg
icebp
icebp
jns
or
cmpsb
mov
pusha
clc
loopne
xor
and
ja
sub
cld
and
add
inc
xchg
leave
je
mov
cmp
and
jnp
jb
mov
rolb
rorb
xchg
in
call
and
cld
cmpsb
inc
subb
sar
rolb
repnz
leave
and
adc
jne
test
xorb
sbb
sub
fsts
dec
ljmp
pop
scas
mov
dec
idivl
cli
dec
jae
inc
outsl
xchg
aas
cmc
mov
and
mov
inc
add
add
dec
in
nop
xchg
jl
pusha
and
cmp
fisttpll
in
fldl
mov
shrb
out
movsb
mov
inc
jno
pusha
and
or
adcb
add
and
jecxz
test
pop
pop
mov
add
clc
mov
xor
ficoms
adc
add
repnz
push
movb
sahf
sub
icebp
mov
loopne
outsl
xchg
and
inc
rcl
jo
pop
add
std
mov
add
mov
sbb
xchg
loopne
mov
and
sbb
out
add
mov
mov
fsubl
push
test
sbbb
in
add
ret
cmpl
sbb
wrmsr
int3
mov
imul
add
inc
mov
aas
mov
mov
scas
test
fcmovnu
imul
bound
cmc
xor
lea
fbstp
mov
pushf
push
jle
add
push
inc
shr
pop
movl
jle
sahf
aas
movsl
xorl
nop
inc
sti
call
inc
and
and
lods
push
test
cltd
hlt
int
pop
loop
ss
fildl
add
and
sbb
scas
add
mov
adc
push
daa
mov
xchg
bnd
add
fwait
movsl
aaa
cli
mov
test
or
sub
sbb
push
fsubr
dec
push
mov
addb
lahf
pop
mov
adcb
and
and
rcll
lret
pop
mov
cmp
movsb
add
imul
inc
out
rolb
pusha
and
insl
pop
add
add
lds
shrb
rcr
push
std
push
adc
xor
mov
outsb
jecxz
jp
push
in
add
repz
frstor
imul
adc
cmp
aaa
loop
cmp
add
sub
inc
pusha
sbb
cmpsl
fildll
add
mov
xchg
push
mov
mov
out
xor
pusha
rclb
subl
dec
rcrb
inc
push
stos
es
dec
push
and
sbbl
loopne
ficomps
pop
hlt
test
aam
out
add
lods
pusha
loopne
shlb
pusha
cli
iret
xchg
in
lret
cmp
and
addb
aas
lcall
loopne
jmp
dec
pushf
rorl
and
jmp
loopne
fwait
rolb
add
and
sub
add
mov
inc
sub
add
test
adc
pop
test
cmp
fstpt
rcl
push
lods
inc
pusha
and
cmc
scas
loopne
imul
inc
pusha
xchg
in
lret
into
jle
mov
dec
fxch
cmp
or
adcb
mov
icebp
insb
mov
add
and
mov
sub
pusha
loopne
loopne
fisttps
pop
or
enter
pusha
xor
and
js
pusha
pusha
fists
mov
xor
movsb
mov
add
enter
push
shlb
out
mov
rcrb
pop
jbe
mov
dec
insl
sbb
inc
fwait
leave
pop
bound
mov
dec
lahf
rcrb
dec
jl
pusha
ljmp
leave
arpl
sbb
shrl
mov
fcoms
mov
mov
cmp
jne
dec
lods
lea
xchg
movsb
inc
add
mov
ret
xchg
xor
popf
sti
adc
sbb
negb
hlt
popa
in
addb
jl
fs
xchg
add
shrb
inc
call
cmp
mov
addb
and
or
lcall
or
mov
pusha
out
repz
cmpsb
loopne
fwait
out
lock
push
addb
xlat
push
jnp
sti
in
xchg
mov
inc
lock
mov
addr16
dec
push
lds
mov
xor
and
fldenv
add
pusha
movsl
pop
in
ljmp
andb
rorl
cmpsl
mov
jns
loopne
push
mov
mov
mov
std
and
loopne
lods
mov
cmp
cli
push
cld
add
out
dec
mov
add
iret
xchg
inc
mov
add
mov
add
jge
test
pop
xor
xchg
subb
shl
aas
adc
add
sbb
sub
and
push
and
test
mov
pushl
sub
inc
and
call
or
sbbb
fidivl
mov
mov
jl
loopne
mov
adc
jno
stc
and
and
pusha
orb
dec
mov
and
ljmp
scas
in
or
push
scas
shlb
inc
add
lret
cli
add
fisttps
and
add
test
mov
incl
inc
adcb
inc
shlb
loopne
mov
push
cli
lea
in
in
loop
adc
and
cs
addb
add
movsl
shlb
add
fistpl
mull
dec
adc
addb
mov
shlb
adc
add
xchg
mov
pop
inc
push
xchg
xor
jns
sarl
inc
mov
cmpb
call
in
cmp
sahf
adc
sbb
repz
nop
cli
gs
loopne
pop
cmc
pushf
int
or
lods
dec
or
leave
push
and
adc
pop
jae
add
inc
loopne
cmp
add
aad
jnp
mov
movsb
pusha
add
push
and
adc
push
loopne
das
dec
mov
xor
imul
pop
outsl
xchg
dec
scas
sub
je
in
outsl
out
and
pusha
and
loopne
push
add
push
inc
iret
ret
stc
pop
and
push
xchg
int
mov
pop
push
sub
idivl
jmp
je
fidivrl
jb
shlb
xchg
push
test
pusha
dec
movsl
xchg
stos
test
mov
sbb
jb
test
mov
repnz
pusha
shl
xchg
test
lods
outsb
lods
pusha
mov
push
pop
andb
cmc
push
cmp
pop
xor
dec
sti
lods
and
and
clc
xchg
data16
and
stos
cmp
pop
ret
sub
and
sbb
hlt
movl
cmp
sub
sub
inc
gs
cld
adc
jno
dec
shll
dec
fists
push
and
push
pushf
inc
pushf
mov
jbe
rcrl
shl
mulb
scas
add
jo
xchg
out
mov
mov
xchg
ret
andl
mov
out
loop
inc
push
and
ds
push
dec
dec
bound
andb
loopne
aaa
test
fsubs
fidivs
popf
sub
inc
mov
aad
sub
adcb
outsl
aaa
ja,pt
inc
pusha
lahf
jmp
test
mov
loopne
jle
fidivrl
and
add
ror
arpl
sbb
pusha
sbbb
into
sbb
das
mov
mov
movsb
addb
dec
rcll
addb
cmp
sbb
fcmovbe
xchg
call
cmp
mov
mov
sub
imul
shlb
lret
popa
scas
inc
shrb
addr16
push
mov
xlat
push
add
mov
add
xor
and
jnp
shlb
and
popa
bound
mov
sub
mov
aas
insb
xor
mov
and
xchg
add
adc
inc
pop
push
inc
cmc
out
lahf
stc
out
out
xor
mov
call
add
sbbb
push
aam
loopne
mov
and
lods
pusha
cmpb
jge
jl
nop
fwait
mov
cmp
cmp
or
mov
mov
mov
mov
pop
ret
adc
mov
sbb
adc
fcomps
popf
int3
cmp
add
mov
rol
into
push
je
insl
lahf
dec
in
je
mov
ds
sti
insb
or
subb
inc
push
sbb
and
push
fwait
testl
loop
cltd
adc
push
insl
xor
pop
test
pusha
xor
lcall
sub
push
pop
pop
pop
cmp
xlat
push
rolb
cmc
test
andb
in
adc
pusha
shl
dec
pusha
cmpsb
add
ds
gs
xlat
push
xor
pusha
pusha
xor
scas
pop
sahf
sbb
xor
addb
adc
and
cmp
lods
inc
inc
movsb
loopne
mov
xchg
adc
ss
jae
lds
fistps
and
sbb
mov
xor
mov
push
cmc
dec
lret
jge
sbb
outsb
cltd
fstpl
xor
add
sbb
ds
aas
dec
adc
jge
or
add
jmp
cmp
mov
adc
and
inc
iret
mov
loopne
fildl
loopne
mov
ror
and
mov
add
in
cmp
and
sub
loopne
lds
ds
cwtl
dec
mov
push
push
inc
inc
ret
rcrb
test
add
cmp
mov
es
subb
fwait
mov
push
jns
ds
xchg
lds
leave
scas
loopne
aad
cmp
out
add
pusha
and
cmp
and
push
push
cld
lods
and
shlb
sbb
jne
rcrl
sub
mov
xchg
inc
rorl
pusha
or
or
mov
dec
sbb
xchg
incl
pop
jbe
icebp
repnz
arpl
mov
mov
addb
add
and
fbld
pop
adc
pop
push
fwait
xchg
and
test
cmp
in
rolb
push
push
xlat
popa
inc
movsb
loopne
pop
popa
push
cmp
in
scas
and
iret
and
add
jecxz
mov
cmpl
lcall
cmpsl
push
adc
sub
inc
add
mov
jae
sub
sbb
test
and
and
mov
mov
add
mov
out
cwtl
mov
add
dec
push
jl
cli
pop
call
jmp
and
add
hlt
mov
subb
cmp
fcmovne
rorl
add
loopne
lods
cmp
xchg
pop
cwtl
hlt
inc
and
pusha
repz
jge
aaa
jo
loope
mov
mov
xor
or
and
and
mov
scas
jne
pop
in
je
add
shlb
mov
add
shl
pop
mov
mov
mov
cmp
incl
aam
notl
rcl
sub
add
mov
int3
aas
mov
lahf
fisubrl
jno
jmp
popa
add
xchg
add
xchg
jbe
nop
dec
std
pop
mov
push
jbe
push
pop
fmull
mul
movsb
and
in
cmp
xchg
push
and
addb
sar
js
cltd
mov
xchg
aam
outsl
popa
sbb
inc
and
lar
and
shlb
repz
mov
orb
mov
fmul
cmp
inc
mov
dec
je
inc
add
mov
mov
loopne
dec
popa
outsl
push
fwait
movsb
loopne
xchg
fstpl
in
outsl
push
inc
xor
pop
push
fidivl
push
inc
inc
movsl
or
loopne
adc
fistps
cwtl
mov
shll
and
mov
add
add
aad
xchg
out
mov
outsb
sahf
sub
push
bound
cmp
sbb
add
testb
sub
pop
dec
loopne
push
addb
aad
adc
sarb
popa
sub
adc
test
loopne
popa
xchg
push
adc
bound
mov
loopne
js
out
hlt
in
loope
mov
adc
pop
in
inc
pusha
movsl
inc
lahf
aad
adc
inc
pop
cmp
jno
inc
repnz
adc
mov
rclb
adc
and
inc
inc
cmpsl
sub
or
cli
in
fwait
mov
rolb
add
js
lds
push
dec
out
lods
push
and
cmp
jmp
lahf
ja
mov
hlt
jno
dec
mov
aam
pop
pop
and
cltd
les
sbb
addr16
shlb
fdivl
cmc
adc
adc
loopne
pusha
mov
inc
xor
fisttpl
nop
lods
inc
loopne
or
sub
xchg
mov
pop
fmull
and
cwtl
ret
mov
inc
cmp
addr16
inc
loopne
insb
xchg
jns
in
push
mov
mov
pushf
mov
push
shlb
lock
shrb
push
pop
fdivrl
out
cmpsb
inc
inc
and
inc
lods
dec
pop
shll
mov
mov
daa
repz
notb
inc
pusha
add
sbb
or
inc
push
test
and
and
jns
test
std
clc
jg
dec
mov
sbb
loopne
inc
stos
pop
dec
in
scas
subl
inc
int
mov
in
mov
mov
mov
shr
and
adc
addr16
add
loopne
js
cmpl
lods
inc
xchg
cmc
cmp
xchg
xchg
mov
movsb
and
adc
dec
xchg
mov
rol
inc
jns
mov
bound
shlb
or
mov
add
test
jnp
mov
inc
out
xlat
addb
sub
mov
inc
cmp
push
mov
lret
loope
into
cmp
fs
idivb
inc
add
int3
addb
mov
shlb
sarb
test
inc
jecxz
add
mov
lret
jb
inc
add
add
mov
sahf
fwait
je
and
and
add
mov
pop
je
mov
fdivp
push
testl
je
cmp
pop
adc
jbe
lret
shlb
test
add
movsl
cmp
mov
loopne
cld
out
push
das
mov
jno
mov
and
addb
shr
xor
orl
add
jmp
dec
addl
cmpsl
fwait
lahf
popa
jae
mov
daa
push
inc
sarb
and
sbb
movsb
rol
mov
add
inc
sub
xchg
and
mov
js
aam
mov
stos
add
mov
lds
jmp
jmp
out
nop
jae
test
mov
sub
lods
data16
and
aad
cmp
incl
mov
mov
insb
and
andb
and
loopne
loopne
push
into
roll
add
mov
in
iret
adc
sbb
repz
cmpsl
sti
sbb
leave
add
subb
fs
sub
and
or
adc
repnz
pop
mov
jmp
mov
mov
push
test
frstor
shlb
and
xchg
mov
and
nop
pop
neg
fs
jb
movsb
loopne
jb
mov
hlt
aad
nop
dec
fsubrs
int3
loopne
orl
out
xor
ljmp
sahf
push
jns
rol
fs
inc
pop
dec
add
sbb
inc
pop
imull
loopne
mov
xchg
out
xchg
pusha
pop
fisttpl
pop
and
mov
xlat
sub
add
negb
std
mov
lret
in
lret
fdivs
insb
mov
mov
adc
hlt
push
pushf
sub
loopne
int3
mov
lods
jb
xor
mov
mov
mov
add
xchg
enter
cmp
mov
test
inc
pop
sbb
cmc
ds
andb
dec
mov
push
xor
lea
dec
inc
dec
rcrb
mov
jo
inc
out
mov
test
pusha
add
or
dec
ret
push
sbb
inc
lahf
in
addb
and
mov
lret
add
test
rolb
popf
push
add
inc
mov
outsl
mov
in
push
jno
fsubrl
rclb
jl
add
aaa
mov
aas
cli
stos
add
dec
pop
lcall
decb
rolb
jne
test
inc
fimuls
js
shrb
idiv
cmp
jmp
popa
int
loopne
xor
sbb
mov
jne
pusha
mov
rorb
push
mov
mov
scas
inc
mov
shlb
xchg
push
jb
lcall
and
popf
repz
and
fldl
add
push
inc
cmpb
pop
jge
bound
lods
inc
and
and
xchg
jns
xchg
fiadds
in
repnz
cmp
mov
pushf
dec
out
jmp
jmp
cmp
xor
nop
inc
inc
mov
cltd
adc
or
rorb
mov
mov
pop
fcmovb
cmp
pop
mov
inc
imul
leave
sub
inc
and
push
faddl
clc
outsb
icebp
js
cwtl
jecxz
dec
lea
loopne
sbb
andb
les
outsb
sti
or
ret
scas
loopne
in
loopne
fs
xchg
movsb
add
and
pop
mov
std
xor
push
fldt
test
xor
sbbb
scas
loopne
dec
fcompl
xchg
and
rolb
pusha
add
pop
mov
outsl
in
or
pop
cmp
pusha
fwait
fwait
adc
push
push
pushf
jb
xchg
or
pusha
pop
lea
mov
add
in
mov
into
mov
cltd
bound
dec
adc
xchg
sti
add
movsb
loopne
lea
xchg
push
das
lret
pusha
adc
shlb
or
and
jmp
arpl
inc
and
insb
and
lret
loopne
mov
and
jno
pusha
shrb
iret
sub
sub
push
mov
jb
mov
sub
dec
xchg
and
aad
andb
scas
xchg
mov
push
add
andb
ret
jno
shrb
shrb
ret
xchg
push
rcrb
and
cltd
xchg
sbbb
sahf
shrl
and
sub
fs
push
xchg
dec
sbb
jecxz
add
shll
out
stos
loopne
ds
shl
sub
and
lods
mov
mov
mov
mov
mov
add
outsl
pop
and
in
mov
pusha
and
lock
mov
add
loopne
dec
test
mov
lods
add
mov
fcmovbe
jmp
mov
push
addb
fiadds
pusha
add
add
dec
cmp
push
mov
inc
xchg
js
xchg
mov
jmp
rcrl
add
and
mov
rolb
sbb
ret
xor
pop
xchg
jecxz
test
fistpl
pop
sub
push
push
lods
jmp
pop
popa
dec
fwait
inc
mov
mov
xchg
jmp
cmp
and
sar
cli
xchg
mov
pusha
sar
fdivrs
mov
pop
and
cmpl
mov
push
lcall
mov
fidivs
inc
add
and
in
sbb
mov
add
pop
mov
inc
imul
ss
es
mov
lock
ja
xor
loope
cmp
loop
fcomps
rol
jne
dec
or
inc
je
inc
lods
add
enter
or
and
inc
mov
lret
mov
call
jns
mov
insl
jnp
xchg
mov
mov
pop
sbb
xor
pusha
std
inc
out
ficomps
jge
xor
outsb
push
or
rolb
ret
scas
adc
insl
ret
repz
sub
or
loopne
andb
mov
xchg
in
add
inc
rol
scas
lock
pop
ds
mov
mov
cmpb
dec
dec
popf
enter
push
mov
fistps
or
mov
std
lret
mulb
add
jne
sbb
outsl
jecxz
mov
xchg
loop
xchg
dec
not
push
into
lahf
add
inc
cmp
int
mov
shlb
shl
push
cmp
adc
inc
andb
mov
push
mov
lret
lcall
leave
push
add
mov
push
aas
jnp
loopne
sub
pusha
inc
dec
sbb
inc
push
jbe
data16
sub
adcb
inc
add
rclb
call
dec
xrelease
ja
or
inc
sbb
mov
lret
inc
std
popf
dec
gs
xchg
cmpsl
xor
cmp
cltd
test
loopne
ret
lea
fimuls
cli
mov
in
adc
sbb
aad
addb
inc
or
loopne
xchg
and
sub
inc
jns
and
dec
gs
mov
jecxz
test
push
add
sti
enter
in
jge
pop
push
subl
add
xchg
jnp
inc
popf
je
fsubl
test
imul
imul
adc
ror
fs
shlb
add
add
xchg
cld
scas
inc
mov
add
lcall
sbb
adc
mov
mov
dec
cmp
sub
xor
jmp
pusha
mov
int
test
inc
mov
inc
clc
or
popa
xor
sbb
pusha
cwtl
pop
inc
jb
mov
aas
sub
xlat
rorb
xchg
ficompl
mov
scas
jns
pop
out
add
les
iret
lcall
out
mov
push
add
add
loop
mov
push
rorl
stos
pop
call
inc
loopne
fiadds
jl
loop
outsb
stc
cmp
in
add
and
subl
addr16
mov
int
pop
iret
int3
loopne
push
add
dec
dec
push
and
jmp
add
aaa
insb
pushf
jge
test
gs
pusha
and
pusha
add
test
fidivrl
rolb
mov
mov
and
leave
jp
rorl
xchg
scas
fcmovne
js
add
cmpsl
lds
dec
repz
cmpsl
addr16
in
pop
sbb
inc
aam
push
jle
rolb
test
push
sub
cmpsb
mov
mov
in
sub
cmpb
movl
loopne
dec
inc
inc
mov
and
cs
xchg
movb
inc
sahf
lcall
notb
popa
enter
jg
ret
cs
loopne
jo
and
push
adc
sahf
pop
lahf
loop
pop
mov
mov
rolb
push
jbe
stos
shlb
enter
and
rorb
fldt
outsb
mov
orb
cmp
mov
mov
mov
xchg
out
ss
sbb
testb
sbb
cmp
jmp
push
out
mov
and
mov
into
repz
sbb
nop
hlt
jecxz
imul
inc
jno
int
gs
mov
and
loopne
adc
iret
mov
stos
dec
inc
out
sbb
sti
icebp
hlt
push
fiaddl
jb
mov
and
rol
cmpsl
push
popa
hlt
lock
inc
insl
dec
repz
sbb
xlat
das
sbb
test
lret
pop
mov
loop
inc
sarb
dec
mov
lea
mov
shlb
pop
mov
add
test
in
daa
add
mov
jg
aas
testb
pop
inc
push
pusha
and
in
adc
imul
xchg
adc
add
lods
cmp
mov
push
add
scas
pop
cmc
fistl
sub
add
mov
lods
add
leave
fiaddl
inc
loopne
pop
mov
inc
sahf
mov
loopne
adc
sub
lret
aaa
jae
testb
andb
inc
mov
or
test
addb
or
loopne
mov
mov
out
shrl
test
shlb
pusha
adc
mov
xchg
repnz
out
push
aaa
mov
jo
xor
scas
shlb
je
pusha
mov
inc
pop
aad
sti
int
mov
adc
dec
mov
rolb
mov
pusha
add
adc
and
repz
add
je
pop
xchg
xor
fnstsw
arpl
push
pop
cs
mov
and
add
test
loopne
scas
pusha
loopne
mov
jge
test
mov
lea
push
inc
push
jae
insb
ret
andb
lods
popf
shll
sbb
add
daa
xchg
dec
stc
fnstenv
push
int3
aaa
or
add
push
loopne
mov
repz
test
and
mov
es
sbb
in
repz
loopne
push
test
push
shl
lods
loopne
mov
add
cmpb
add
xchg
or
movsb
add
shr
inc
and
lea
pusha
js
xchg
add
jbe
gs
lea
loopne
xorl
pusha
icebp
in
fsin
hlt
ds
add
pusha
pop
lret
jle
pop
andb
xchg
xchg
mov
fsubr
test
add
xchg
leave
jg
sub
and
imul
inc
loopne
movsl
push
loopne
rorb
orb
sub
mov
add
pop
jnp,pt
xchg
stc
pop
mov
loopne
mov
loop
shlb
inc
xor
dec
dec
loop
ror
daa
stos
loopne
sarl
shl
adc
cmp
ds
push
dec
aaa
mov
rol
imul
mov
fsts
xorl
std
and
pusha
xor
mov
sub
sbb
rol
sub
shlb
add
mov
cltd
daa
and
inc
stc
movsb
loopne
xchg
jb
jns
imul
aam
leave
cmp
dec
xchg
sbb
rolb
mov
mov
adc
add
lods
mov
inc
stos
loopne
or
inc
push
fs
loopne
mov
outsb
pusha
mov
ja
sbb
push
dec
vmread
push
mov
and
mov
inc
mov
jp
rol
xchg
ret
sar
adc
or
mov
fwait
sub
loopne
dec
push
lcall
mov
sub
addr16
push
lret
mov
mov
xchg
addr16
dec
stc
inc
dec
ja
jmp
pusha
pop
stos
add
and
mov
mov
mov
add
or
and
popa
push
dec
push
jo
inc
and
dec
sbb
loopne
notl
inc
mov
jae
add
add
loopne
sbb
std
cmp
bound
loopne
andb
xchg
jnp
sbb
cltd
fstpl
cmp
jbe
inc
add
mov
mov
and
pop
xchg
call
push
adc
xchg
jno
xchg
dec
test
lcall
jmp
lods
andb
imul
mov
dec
adc
mov
mov
mov
bound
xlat
hlt
push
leave
call
mov
shl
add
and
mov
inc
mov
rolb
add
xor
mov
notl
xchg
shr
xchg
lret
cs
add
jb
in
mov
cmpsl
cltd
cmpsl
sbb
dec
inc
or
loopne
adc
cmpb
pusha
jg
adc
mov
std
add
dec
iret
and
mov
sahf
std
jns
outsb
dec
inc
jne
jns
pop
cld
mov
xor
das
dec
push
dec
jae
in
andb
loopne
add
push
stos
lods
mov
imul
mov
push
inc
loopne
add
and
andb
or
addb
push
fidivrs
aad
mov
insl
mov
mov
aas
lahf
xchg
sbb
cmp
or
andb
cmp
cmp
rolb
clc
mov
pusha
outsb
cmp
lods
and
add
push
in
push
xchg
loopne
fdecstp
jl
roll
add
dec
jmp
jmp
gs
imul
xchg
pop
jne
addr16
xchg
pop
addb
dec
dec
addb
jae
lock
xor
imul
filds
sbbl
popf
sahf
inc
mov
jg
shl
cmc
es
fmull
loopne
or
add
jmp
and
imul
inc
fcom
pop
call
test
inc
fldenv
mov
inc
testb
call
adc
add
add
hlt
popf
jl
test
inc
mov
push
pusha
pusha
outsl
fldl
outsb
adc
addr16
test
and
sub
shlb
rclb
or
loopne
jbe
xchg
sub
push
roll
and
ret
insl
push
insl
lahf
insl
jecxz
dec
aas
fs
iret
jno
xchg
enter
mov
pop
mov
movl
mov
cmp
mov
and
dec
dec
sub
xchg
fcmovne
and
rclb
fildll
pop
arpl
cmp
test
sbbb
or
mov
jo
and
shlb
dec
dec
lret
rolb
mov
jns
ds
test
inc
cmc
lret
mull
mov
pusha
scas
movsl
ja
dec
pop
fs
dec
ds
push
add
cltd
repz
fs
divb
in
insb
add
mov
mov
add
das
cmp
mov
scas
inc
sbb
mov
xor
cmp
mov
addb
mov
pop
sbb
loopne
mov
and
pop
mov
xchg
dec
ljmp
push
rolb
mov
and
xchg
iret
or
mov
js
movsl
inc
dec
ds
dec
daa
sbb
scas
inc
and
in
mov
mov
and
xor
loope
andb
gs
sbb
and
inc
out
or
lcall
fstp
dec
cmpsl
dec
cltd
rorl
dec
mov
addr16
cmpsb
andb
add
and
pcmpeqd
xchg
adc
jmp
xchg
aas
jge
sbb
or
pusha
out
lret
call
das
lods
addr16
dec
inc
pop
clc
pop
loopne
dec
adc
rolb
mov
pusha
dec
mov
push
mov
das
or
and
pusha
and
out
mov
jecxz
pushf
mov
add
orb
pusha
inc
popl
cwtl
lret
cmp
repnz
daa
ja
iret
into
pop
ljmp
data16
nop
sahf
lcall
cmp
sub
push
mov
mov
rol
push
or
cmp
cmp
movsl
pop
pushf
vpshuflw
loop
pop
push
add
mov
lea
addb
mov
shl
mov
mov
push
lret
inc
rclb
shlb
roll
or
in
cmpsl
sbb
test
adcb
or
cmpsl
sbb
mov
incl
dec
xchg
lcall
dec
xchg
je
popf
push
rcrb
addb
rcr
cmp
stos
addb
ficoms
inc
loopne
repz
loopne
aad
out
sbb
aad
mov
mov
inc
dec
push
insl
popf
std
or
lahf
icebp
sub
xor
inc
orb
pop
addl
andb
insl
mov
xor
lcall
pop
xor
add
and
pop
call
adc
pop
lret
mov
orl
pusha
inc
jne
iret
xchg
mov
inc
cmpsl
or
inc
mov
cs
and
xchg
je
shl
xor
xchg
lea
shlb
mov
je
dec
lock
insl
cmp
mov
movups
mov
mov
mov
xchg
and
les
repz
mov
inc
inc
aaa
sahf
pop
or
outsl
shlb
xchg
fdivrs
and
push
jg
call
mov
bound
and
mov
inc
inc
add
sti
lret
fistpll
xchg
les
ret
mov
jno
and
addb
fwait
xchg
mov
mov
pop
js
dec
in
int3
ss
cli
pusha
repnz
jp
dec
or
mov
lods
mov
inc
sub
mov
scas
loopne
cmp
mov
repz
xchg
mov
jg
inc
test
addb
mov
or
and
mov
xchg
andb
loopne
jns
test
loopne
mov
jp
stos
loopne
adc
mov
mov
xchg
dec
inc
xchg
mov
sub
pusha
scas
pop
pop
loopne
mov
out
mov
xor
xor
out
pushf
dec
add
fdiv
add
mov
cwtl
ss
popa
inc
mov
daa
mov
hlt
push
shrl
repnz
cmp
daa
rcrb
pusha
fcmovnb
pusha
int3
or
enter
std
mov
out
pop
stc
push
adc
xchg
scas
loopne
rclb
and
push
imul
push
into
inc
lea
add
test
punpcklbw
rcl
loopne
sbb
xorb
inc
inc
adc
add
and
addb
xchg
fcomp
out
adc
mov
xchg
imul
adc
sbb
xor
push
sub
cmp
lock
pop
fs
mov
cltd
lret
sbbb
mov
pushf
mov
rclb
jmp
pop
cmp
jns
call
les
out
and
pop
sub
popf
lret
push
jmp
inc
pusha
jno
xchg
andb
out
add
and
testl
inc
sub
and
loopne
xor
add
clc
and
inc
js
addb
mov
inc
add
mov
add
jg
add
fwait
sub
rcr
mov
loop
shlb
push
test
mov
push
xchg
scas
aas
repz
inc
or
jo
dec
icebp
in
xchg
add
adcl
mov
add
cs
inc
out
and
and
iret
jecxz
fimuls
fsts
aad
cmpsb
add
mov
mov
imul
imul
inc
imul
sbb
cmp
push
mov
jecxz
shl
addr16
loope
mov
cmpsb
and
adc
and
or
mov
mov
xor
or
ret
jmp
or
loopne
call
cmpb
xor
loopne
ret
jb
pusha
shrb
mov
leave
adc
loopne
push
cld
js
mov
scas
adc
push
popf
cld
cmp
add
ret
xor
xchg
sub
adc
pusha
addb
andb
mov
lods
add
inc
pop
jg
popa
or
mov
fistpl
flds
pop
cmpsl
push
cmp
insl
sahf
mov
add
mov
sub
subb
add
add
jl
xchg
push
aas
aas
je
stc
mov
mov
arpl
ret
stc
pusha
data16
pusha
mov
xor
mov
and
loope
sub
rclb
call
jp
and
jge
cli
push
dec
test
and
pop
shrl
and
rorl
addb
or
adc
dec
nop
or
cli
loopne
loopne
jecxz
mov
mov
iret
fimuls
iret
data16
xchg
insl
jo
dec
dec
jecxz
bnd
mov
adcb
fwait
mov
inc
mov
mov
push
adc
shl
loopne
loopne
in
xor
scas
frstor
adc
jecxz
testl
clc
fistps
cmc
jbe
in
pop
push
ss
push
repz
sbb
int
mov
aam
int
mov
lea
mov
mov
hlt
frstpm(287
xor
sbb
adc
jmp
stc
pop
arpl
aaa
in
mov
inc
clc
or
inc
lds
idivb
test
pusha
cmp
sahf
les
inc
fdiv
cmp
add
jns
nop
cmp
bound
and
rolb
data16
cmp
xchg
pop
int
inc
cld
lcall
and
jge
rolb
cwtl
lods
loopne
shll
lahf
mov
inc
sbb
pusha
sub
and
and
inc
mov
dec
mov
in
pop
cmpsl
dec
or
inc
sti
push
add
and
and
andb
cmp
and
mov
stos
loopne
mov
lret
sbb
jne
mov
push
xor
mov
lods
shlb
lret
inc
push
adc
out
mov
mov
inc
and
mov
or
push
hlt
dec
mov
xchg
push
std
test
loopne
in
jmp
shlb
loopne
pop
xor
xchg
jecxz
int3
cmc
mov
jae
pusha
andb
sub
inc
fnstenv
lods
xor
cmpsb
mov
push
bound
fimuls
aad
jae
int3
aad
shlb
repz
mov
sub
cmp
scas
mov
mov
lods
mov
mov
sub
je
fwait
pop
pop
sti
mov
into
cmovns
or
loopne
pop
repz
cmp
pusha
orb
add
loopne
xor
cmc
ljmp
inc
and
pop
nop
cmpsb
mov
rcrb
stos
inc
add
inc
push
popf
int3
pop
xor
sub
add
movsb
loopne
mov
iret
aad
and
inc
jb
xor
or
jnp
roll
or
pop
jg
mov
fisubs
hlt
fistpl
ja
jno
fst
add
inc
sbb
in
aaa
test
mov
int3
std
dec
shrl
and
orl
cmp
and
scas
xlat
add
cmp
loopne
test
push
test
pusha
or
xor
icebp
dec
data16
ss
sub
add
add
jno
and
stos
mov
out
mov
cmp
out
in
sarb
and
rolb
iret
cmp
xor
inc
pop
xchg
mov
add
add
mov
mov
std
roll
test
add
dec
int
andb
ja
mov
jnp
call
sbb
inc
and
or
or
or
mov
adc
adc
orl
pusha
inc
in
pminsw
sbb
push
add
and
add
fsts
adc
mov
rolb
push
dec
add
test
add
shrb
mov
jne
sub
inc
push
mov
lret
jmp
lods
rolb
test
pusha
pop
test
sarl
shlb
or
lods
pusha
inc
or
add
and
test
in
push
adc
jle
cmpsl
hlt
sbb
in
xchg
or
ljmp
sbb
sbb
mov
mov
or
inc
and
pusha
and
in
sub
mov
inc
and
xchg
jno
push
push
test
inc
cmc
rorb
push
not
add
fnsave
notb
inc
imul
push
mov
sub
rcr
daa
cmp
cli
mov
jle
aad
inc
rclb
jmp
movsb
add
xor
aaa
push
lock
popf
sub
ror
mov
add
shll
xchg
push
cmp
pop
nop
sbb
sti
and
loopne
xor
adc
out
aas
mov
sub
imul
and
in
sti
and
jo
adc
sahf
pop
jo
repz
jno
scas
andb
mov
inc
loopne
jbe
loope
shl
movsb
add
sarb
rcrb
mov
fs
mov
adcb
sti
and
repz
scas
roll
inc
cmpb
into
mov
jne
mov
add
mov
and
arpl
pop
popf
xchg
push
dec
cli
cmp
pop
sbb
mov
push
repz
add
outsb
jns
je
adc
sarb
or
loopne
inc
loopne
add
jp
xchg
jg
sbb
addb
mov
inc
add
nop
bound
loopne
sahf
adc
and
sub
movsl
lahf
test
inc
dec
add
push
mov
inc
sar
mov
pusha
lods
mov
sbb
repz
mov
push
cmp
or
data16
gs
and
add
loopne
iret
in
decl
inc
aad
daa
fsubrp
enter
inc
pusha
clc
mov
push
push
push
adc
repnz
ds
andl
andb
add
add
dec
repnz
mov
loopne
jmp
sbb
ret
mov
jle
movsl
mov
je
lret
nop
add
jge
shufps
sbb
mov
add
pop
xchg
jg
daa
add
fbstp
aad
push
xchg
sti
sti
hlt
sbb
pusha
add
pusha
jmp
in
mov
and
dec
pop
popa
dec
std
aaa
inc
imul
jns
and
add
loopne
mov
mov
loopne
mov
pusha
loopne
xchg
inc
mov
out
inc
and
in
bound
in
mov
daa
xchg
es
and
loopne
sbbl
shlb
andb
inc
int3
shlb
addb
pop
in
jge
sbb
shll
out
cld
or
push
rolb
clc
adc
mov
jmp
jg
mov
xor
cli
xor
mov
jns
fdivl
lods
inc
loopne
out
repz
inc
cli
mov
loopne
push
jge
lods
mov
xor
add
fmuls
addb
fistps
pop
sbb
pop
sti
pop
leave
sub
loopne
pop
add
inc
xorb
scas
mov
or
sbb
and
inc
and
sub
inc
loopne
iret
iret
rorb
jmp
mov
ljmp
test
inc
jbe
std
adc
push
movsl
mov
xchg
out
repz
cwtl
cs
adc
rolb
nop
jle
lods
shlb
enter
sbb
lcall
cmp
movsb
add
mov
add
mov
and
pop
and
popa
out
and
add
add
sbb
call
pop
sarb
sti
mov
add
mov
mov
sub
loopne
fs
sbb
nop
or
pop
sbb
hlt
push
fidivs
inc
add
inc
sub
jno
add
ja
shlb
adc
push
inc
out
jnp
xlat
or
mov
jo
cmp
movsb
pusha
and
into
sbb
sbb
aas
movsb
addb
loopne
shll
in
mov
ljmp
xor
cwtl
rcl
daa
adcl
bound
inc
test
pushf
cmc
and
or
mov
mov
sub
add
mov
mov
add
cmp
xor
push
test
int
mov
addb
pop
scas
inc
fdivrs
inc
mov
add
push
inc
into
jp
dec
repz
mov
sub
icebp
mov
pop
xor
and
inc
hlt
fs
and
sub
mov
sbbl
shrl
adc
add
bound
or
xchg
push
and
lret
and
or
notl
outsb
andb
or
inc
ret
insl
clc
jbe
inc
lcall
mov
testb
xor
or
cmp
mov
pusha
out
lock
mov
scas
and
addl
mov
add
jns
sub
push
mov
arpl
andb
pop
push
jno
dec
push
jb
push
xor
ficoms
loopne
lret
mov
inc
add
andb
or
xorb
jns,pt
shlb
and
fisttps
jne
out
sub
mov
les
sar
out
mov
add
jae
mov
jne
int3
addb
mov
aad
insb
xchg
popa
sbb
jecxz
lahf
inc
sub
cmp
iret
adc
stc
bound
sub
outsb
das
frstor
dec
std
sbb
dec
xor
push
clc
inc
imul
mov
pop
fcomp
movsl
mov
loopne
data16
xchg
fnstenv
pusha
cmc
mov
divl
push
xchg
pop
or
out
and
cmpsb
and
fs
jl
or
clc
lods
cmp
jo
cmp
sbb
loopne
fadd
jbe
addb
push
into
out
push
mov
dec
ret
xchg
dec
lods
xchg
pop
push
adc
cmp
sub
andb
imul
lahf
push
int3
mov
addb
andb
stos
and
jg
and
je
xchg
xchg
mov
pusha
out
or
inc
mov
and
les
mov
sbb
idiv
and
or
mov
push
ljmp
in
or
cmp
inc
rorb
xlat
addr16
shl
lahf
outsb
fstp
sbb
testl
scas
rol
push
adc
pop
rolb
mov
sarb
inc
mov
int3
push
lods
mov
sbb
and
or
out
repnz
sub
loopne
add
loopne
adc
and
xlat
sub
adc
dec
out
int
out
test
mov
in
int
sub
shlb
xorb
inc
cwtl
dec
mov
lds
outsl
gs
sub
popa
mov
cmp
push
loopne
adc
xchg
fistpl
loopne
in
insb
pop
sbb
stos
cmpsl
adc
repnz
mov
or
and
jle
sub
cmp
cli
rcrb
repz
or
pusha
or
pop
insl
sub
and
test
loopne
inc
xchg
pusha
xchg
or
inc
loopne
mov
push
push
and
push
add
icebp
inc
mov
add
ja
adc
ret
inc
and
sub
add
mov
add
shl
imul
add
add
pop
sti
push
loopne
mov
mov
inc
aaa
test
sub
loopne
pop
popa
xor
shlb
inc
and
rcrb
cltd
rcrl
sub
pusha
fdivrl
and
loopne
xor
addb
jb
fcoml
mov
sahf
daa
mov
sbb
add
push
push
out
mov
pusha
mov
rorb
dec
xchg
out
aaa
mov
rolb
loopne
ljmp
add
lods
and
into
imul
lret
dec
and
adc
in
test
xchg
and
adc
or
shrb
push
andb
sub
sbb
daa
jge
cmpsl
xorl
js
mov
inc
push
add
push
sbb
or
rcrl
addb
xor
jo
int3
popf
lock
mov
lahf
and
insb
aad
xchg
inc
jg
adc
shlb
push
in
test
loopne
xchg
bound
inc
adc
jae
lret
sti
in
es
enter
fsub
mov
mov
sbb
flds
out
out
enter
adc
ja
cltd
leave
cmpl
outsl
mov
dec
sbb
or
pop
xchg
pop
out
ret
adc
mov
jecxz
and
lret
outsl
pop
leave
mov
sub
lock
movsb
inc
add
xor
mov
add
loopne
mov
rolb
push
stc
aas
cmp
inc
add
out
insl
test
or
add
add
push
cld
lcall
sbb
scas
or
orb
shr
pop
lods
loopne
js
xchg
in
sbb
sbb
and
mov
ds
or
dec
add
mov
inc
mov
xchg
mov
pusha
jle
scas
imul
popa
enter
rclb
sub
pusha
mov
ret
aam
ret
cwtl
scas
inc
add
je
loopne
inc
and
shlb
and
loopne
or
fadds
sub
dec
adc
std
push
pusha
subb
ljmp
push
movsl
or
stc
outsb
or
shlb
push
inc
jns
mov
pop
adc
jl
mov
orl
ror
mov
pusha
xor
jno
les
inc
bndldx
pusha
mov
shrb
shll
mov
into
pushf
jno
sbb
shll
and
test
pop
xorl
mov
add
lcall
dec
aam
andb
adc
aad
mov
loopne
adc
and
sbb
out
mov
ficompl
push
push
pusha
insl
sub
adc
addb
fnstsw
mov
or
add
xchg
dec
adc
and
pop
sbb
rcrb
mov
aad
in
hlt
insb
cmp
or
outsl
mov
insb
test
pop
mov
mov
mov
cmpsb
and
jp
add
fnstcw
xor
inc
mov
cmpsl
dec
aaa
inc
lahf
int
dec
lret
xor
movsl
out
mov
sbb
add
or
add
imul
adc
daa
push
gs
xchg
mov
jp
jne
push
push
andb
push
outsb
or
and
fidivl
data16
inc
push
mov
add
loopne
stos
mov
rolb
call
cld
push
jbe
dec
shll
jbe
dec
iret
int3
sbb
pusha
sbbl
nop
pop
mov
and
push
push
outsb
test
inc
fsubs
pusha
rolb
lods
rolb
movsl
mov
scas
mov
pusha
adc
mov
pop
cmp
fwait
sbb
adc
imul
mov
add
aaa
xchg
repz
inc
mov
xchg
in
sbb
pusha
loopne
and
mov
inc
divl
or
sub
adcb
and
loopne
outsb
mov
and
lods
and
inc
stos
addb
inc
add
sub
inc
stc
mov
sarb
stos
sub
inc
rorb
pusha
and
outsl
jno
shl
push
and
push
addb
loop
scas
addb
inc
mov
cld
pushf
mov
inc
cmp
das
push
lods
loopne
xchg
or
sub
jmp
pop
push
repnz
push
rolb
pop
cltd
xor
jbe
jge
add
add
pop
stc
jl
ja
cli
repnz
shlb
dec
push
mov
mov
pop
bndstx
push
andb
xchg
aam
xor
pusha
pusha
ret
cmpsb
and
repnz
mov
mov
inc
movsl
jbe
and
lea
imul
pop
dec
jne
mov
inc
xchg
cmc
dec
jo
movsl
inc
or
pusha
test
incb
sbb
shlb
add
repz
shl
pusha
add
push
and
popf
mov
mov
push
addb
xchg
insl
push
add
lds
andb
mov
sar
dec
or
xor
repnz
inc
inc
dec
jbe
fisubs
and
mov
push
rolb
pop
out
jne
cs
sub
rclb
out
mov
xor
pop
lock
xchg
or
add
xor
cltd
sub
sbb
add
xlat
and
push
loop
cmpsl
dec
pop
test
arpl
cmpsl
pop
jnp
imul
push
std
jo
out
enter
leave
aas
fsub
fidivrs
sub
rorb
scas
shl
xchg
dec
mov
pop
and
and
mov
mov
in
sbb
mov
jae
daa
div
int3
gs
sub
and
loopne
xchg
aas
adc
sbb
fldenv
and
sub
pop
mov
mov
sbb
jle
mov
sub
pop
rorb
dec
pop
in
sub
inc
sub
test
xor
icebp
cmp
mov
call
inc
pusha
insl
lret
mov
inc
mov
lcall
loopne
stos
mov
je
pop
xchg
xor
cmpsl
pushf
int3
loope
jne
pop
ja
fwait
sub
addb
cmpb
mov
fistl
or
push
rorl
rorb
cwtl
or
jae
in
aad
stos
faddl
sti
sub
pop
push
pusha
and
fdivrs
scas
inc
adcb
jp
lods
int
push
movsb
add
aad
fldt
pusha
and
mov
and
fidivl
and
cwtl
dec
sti
js
and
sbb
mov
mov
jns
inc
mov
inc
addr16
jns
pusha
pusha
pop
jmp
cmp
aam
and
loopne
dec
fisttpl
inc
loopne
js
adc
test
sbb
aas
or
cmpsl
test
inc
cltd
xor
shlb
sbb
jmp
fidivl
movsl
movsl
fcoms
jmp
dec
imul
sbbl
sub
loopne
add
and
xchg
sub
mov
push
mov
or
mov
shrl
pop
icebp
jno
inc
inc
push
mov
dec
add
jb
aas
fsqrt
cwtl
or
push
adc
adcl
pusha
sbb
jle
add
cli
adc
pop
jne
push
sub
mov
and
or
and
icebp
adc
ret
decl
loopne
in
jno
dec
clts
andb
mov
or
mov
gs
mov
mov
add
ror
out
loope
sbb
shrb
xor
sbb
dec
inc
dec
xor
add
jns
shr
mov
sub
xlat
mov
inc
subl
adc
pop
lods
mov
push
sbb
or
xchg
xchg
les
loopne
in
mov
outsl
aas
clc
pop
pop
inc
in
nop
sti
jae
mov
lock
addb
roll
jae
orl
dec
sar
nop
jg
jae
shl
xor
pusha
movsb
andb
mov
and
rorl
and
je
shr
in
xchg
sbb
pusha
pop
or
inc
test
cmp
xlat
int
andb
pusha
pusha
mov
data16
add
inc
and
xor
and
fs
cs
orb
add
pop
sub
fs
pusha
pusha
jmp
das
ffreep
jle
jo
and
xor
cmp
nop
pop
dec
daa
inc
adc
lods
jp
xchg
sarl
pop
inc
lret
inc
in
movsl
sub
add
test
loope
sub
xorb
jmp
loopne
and
mov
push
lret
add
stc
pop
push
shlb
cmp
jg
fdivs
adc
sbb
inc
and
out
inc
inc
and
out
fwait
inc
and
and
mov
add
fs
int
pop
icebp
cwtl
cmp
dec
and
aas
sub
pusha
jp
out
addr16
scas
inc
add
add
jmp
add
repz
mov
out
dec
movsl
jbe
and
lcall
and
sbb
out
repnz
aas
adc
mov
xchg
in
inc
xor
nopl
and
and
mov
add
shrl
adc
add
addb
jnp
in
mov
cmp
cmpsb
pusha
inc
cld
ret
fmulp
sbb
xchg
iret
fstpt
pop
js
adc
shlb
jmp
faddp
lret
lea
andb
jecxz
and
mov
push
jno
mov
data16
cmp
push
push
pusha
jbe
jb
push
add
pusha
mov
mov
push
and
mov
inc
inc
sbb
jbe
pusha
loopne
or
dec
adc
jne
lret
xor
adc
inc
inc
cmpsb
add
sub
and
jae
fwait
js
loopne
lods
inc
fcomip
inc
push
shlb
movsb
mov
lahf
out
gs
mov
mov
dec
xchg
push
add
add
and
sbb
popa
adc
mov
pop
dec
xor
or
orb
and
icebp
cwtl
jl
stos
jo
pop
xor
jecxz
lds
addb
xchg
je
inc
jno
lcall
test
loopne
jo
adc
add
gs
xchg
cmpsb
and
frstor
rolb
addb
bound
cld
push
fmuls
jmp
jle
ja
int3
pop
push
rcl
sbb
mov
lret
sar
xchg
jbe
sub
mov
mov
xrelease
pusha
jecxz
adc
ret
mov
mov
and
mov
add
aam
pop
add
nop
push
dec
sub
inc
into
pop
and
loopne
addb
inc
addr16
inc
popf
lea
xor
movsb
add
adc
add
sarl
inc
enter
rcrl
addr16
jg
loope
repz
inc
add
scas
rolb
push
mov
rorb
jnp
push
pop
rcr
inc
cmpl
pusha
cltd
jnp
aad
mov
loopne
cmpsb
and
jle
shl
addb
jmp
shrb
loopne
mov
outsl
out
sbb
popf
lods
test
loopne
pusha
inc
jno
lods
and
inc
fsubl
inc
loopne
call
mov
sbb
adc
push
arpl
inc
pslld
adc
popa
js
cltd
in
add
hlt
inc
popa
ret
das
pop
data16
lea
faddl
push
adc
pusha
pop
sub
ljmp
dec
repnz
mov
shl
xchg
shrb
mov
mov
cmp
inc
pop
stos
add
mov
ficomps
pop
pop
shll
decb
add
loopne
sbb
sbb
mov
and
scas
sbb
jbe
mov
add
adc
dec
cld
lcall
fcmovnb
int
sbb
cmp
lods
mov
mov
insl
mov
pop
sub
add
cmp
pusha
mov
in
out
inc
incl
mov
test
popl
test
inc
into
xchg
test
pusha
bound
inc
jns
addb
out
mov
or
adc
mov
adc
mov
pop
rolb
mov
scas
and
loopne
outsl
inc
imul
sbb
cwtl
add
loopne
xor
sbb
fs
or
add
inc
cmpb
inc
in
mov
add
push
xchg
in
add
push
loopne
cmpsl
dec
or
loopne
sbb
rol
popf
je
jecxz
int
adc
inc
fstps
cmc
and
ret
adc
lahf
dec
lcall
fdiv
push
loopne
inc
fs
icebp
and
xchg
push
lcall
and
and
push
aam
aaa
or
add
sbbl
and
pusha
rorb
shlb
and
and
sarb
fistpl
daa
add
inc
adc
mov
and
add
jae
lods
add
dec
xor
inc
adc
jnp
rcrl
aaa
mov
arpl
and
add
adc
xor
pop
sti
shrb
add
lcall
sarb
loopne
xchg
test
inc
add
notb
imul
and
pusha
and
mov
inc
shlb
stos
and
and
enter
out
fistpl
gs
inc
pop
and
cmp
stos
lods
arpl
test
insb
cmp
pusha
ljmp
int
push
rorb
push
dec
mov
nop
sti
dec
sar
xor
fdivrl
mov
cwtl
jae
add
or
sbb
loopne
mov
test
add
mov
ljmp
stos
cmpsl
mov
jl
and
pop
dec
dec
jno
xor
andb
push
adc
push
mov
dec
jo
sub
cmp
and
testb
shrb
sbb
in
add
inc
hlt
lods
pusha
and
inc
shlb
or
aaa
lods
filds
repz
xchg
jae
xchg
push
push
pushf
inc
jo
xlat
das
pusha
push
mov
jmp
iret
into
hlt
cmp
les
in
dec
push
stos
add
call
xchg
aam
mov
xchg
adc
addr16
lcall
mov
jmp
mov
push
lds
fwait
push
stc
cltd
pop
dec
xor
cmp
addb
addb
gs
loopne
frstor
inc
and
fldl
loopne
lcall
mov
in
mov
xchg
sarb
push
cmpsb
inc
mov
bound
inc
pop
jbe
add
sbb
mov
loop
cmc
insl
adc
fildll
mov
scas
andb
inc
clc
cmp
and
jnp
data16
cltd
pop
lret
clc
or
pusha
mov
cmp
add
xchg
js
mov
sub
pop
movsb
add
rolb
loop
shll
mov
sbb
dec
cmp
pusha
mov
pop
add
loop
push
popa
xchg
and
mov
ja
nop
popf
lahf
in
pop
xchg
jmp
mov
in
daa
mov
pusha
in
push
cmp
rolb
add
dec
push
rolb
fstpt
cltd
in
adc
fdivrl
jmp
out
sbb
inc
pusha
mull
cmp
sbb
cwtl
in
and
lret
pop
aaa
shll
mov
push
and
mov
aaa
in
sub
add
sarb
dec
out
jae
cs
rclb
add
loopne
sti
push
popa
cltd
xchg
test
mov
mov
and
mov
and
push
mov
fs
inc
out
add
push
pusha
ror
jecxz
and
ss
stc
mov
pop
nop
mov
shll
pop
js
in
push
xor
sbb
sbb
aam
bound
in
jb
mov
or
push
mov
mov
sbb
mov
lock
negb
int
push
shlb
add
xor
loopne
fcmovbe
pop
lds
andb
andb
mov
clc
test
shrb
mov
adcb
andb
cmp
jae
addb
aaa
mov
imul
cmp
test
lret
xor
ret
push
loopne
movnti
mov
jg
cmpsl
push
andb
add
inc
adc
loopne
ja
jo
andb
mov
pusha
loopne
or
mov
loopne
fisubrl
orb
xchg
out
test
andb
and
hlt
and
push
aaa
andb
test
lahf
xchg
hlt
stos
cmp
jne
mov
pusha
fists
push
pusha
sarb
add
dec
inc
ds
outsl
dec
push
ja
pushf
lds
mov
addb
jo
jb
out
daa
out
sub
pusha
and
mov
mov
or
add
mov
add
and
andb
orb
inc
xor
mov
sahf
int
mov
cs
aaa
loop
bound
rolb
stos
push
out
mov
loopne
ss
iret
add
xlat
cli
data16
inc
sbb
or
shrb
mov
and
pusha
pop
fdivrs
insl
mov
repnz
enter
push
outsb
jge
jno
xchg
push
negl
das
imul
addr16
xor
add
sbb
mov
insl
scas
mov
xchg
push
shlb
test
shl
in
insb
xor
add
push
mov
test
mov
test
add
insl
adc
mov
fidivl
cli
adc
repnz
shrl
inc
pusha
jno
test
mov
mov
inc
xchg
pop
or
add
pop
lods
xor
sub
push
pusha
shlb
jecxz
sub
insb
mov
int
std
cmp
rolb
ret
push
je
or
loopne
outsl
push
jl
cmp
mov
xor
out
sub
out
es
add
mov
test
add
js
subl
mov
pop
mov
and
pusha
add
mov
mov
inc
jne
pop
sub
pusha
inc
adc
and
and
movsl
in
add
pop
xchg
xor
adc
outsl
movsb
and
in
jle
cmp
fwait
shl
nop
inc
jbe
loopne,pn
xor
mov
jg
sbb
repnz
rorb
sub
mov
testl
mov
mov
in
add
movsl
xchg
call
testb
inc
pop
shrb
xor
sub
and
imul
ljmp
inc
rorl
xor
or
loopne
loopne
pop
push
lock
lods
and
daa
ljmp
inc
mov
mov
add
rolb
in
cltd
ret
lea
mov
sti
movsb
and
mov
out
inc
jmp
xor
jbe
xchg
mov
sub
jl
add
push
and
dec
cwtl
xor
inc
rorb
mov
jle
pop
and
xchg
insb
cld
dec
xchg
mov
add
mov
and
loopne
aam
jl
pusha
rcrb
je
adc
xor
adc
mov
sub
and
jb
icebp
insl
and
mov
lds
push
mov
sbb
fcompl
cmp
fsts
outsl
stos
shl
mov
and
sbb
pop
xor
cmpsb
inc
mov
inc
iret
shll
ds
jb
nop
pop
xchg
lods
rolb
outsl
mov
adc
add
fs
mov
jecxz
loopne
andb
inc
popa
cmc
out
addb
lea
adc
add
leave
cmp
lods
mov
mov
repz
andl
push
and
pusha
shlb
sbb
lods
scas
xor
dec
pop
sbb
pusha
push
mov
enter
add
mov
fwait
cmp
inc
mov
mov
movzbl
fimuls
push
pop
cltd
mov
hlt
rcll
shlb
and
cmp
push
cmp
shlb
dec
loopne
in
aam
mov
pop
adc
cmp
pop
rcrl
and
loop
rcrb
mov
sub
test
test
loopne
mov
mov
add
int3
xchg
sbb
testb
add
sub
add
cmp
mov
push
repz
fnsave
push
add
mov
inc
aad
xlat
dec
mov
mov
scas
cmpsb
shlb
loopne
out
add
ss
lret
push
dec
addr16
add
sbb
leave
mov
add
adc
loopne
sarb
xor
stc
imul
dec
fildll
stos
inc
pusha
in
lret
xor
add
pusha
jno
and
ja
aad
xchg
fldcw
loopne
jno
inc
fcmovnu
push
xchg
aaa
int3
push
das
jecxz
pushf
push
push
icebp
pop
sti
fisttpll
lds
sbb
in
cmc
repnz
dec
adcl
loopne
jge
or
shr
sub
mov
jnp
inc
imul
jg
jecxz
rclb
mov
aaa
les
fnstenv
or
pusha
mov
daa
ds
jne
lret
dec
push
mov
dec
cmp
insb
mov
jne
jmp
loopne
adc
pop
jle
cli
movl
xor
and
fs
jnp
mov
cmp
cmp
jg
sbb
ret
sbb
popf
jne
dec
mov
daa
dec
sbb
dec
mov
cltd
lret
rcll
sahf
fwait
dec
out
jl
out
lds
das
dec
xor
jnp
pusha
pusha
fiaddl
pause
ljmp
inc
cmp
popf
push
cmp
pop
aaa
xchg
fildl
cltd
mov
shlb
or
inc
dec
adc
ret
mov
xchg
jmp
loopne
dec
shl
sub
scas
mov
shrb
push
test
add
idivb
mov
xor
mov
add
and
inc
push
je
pop
sub
mov
cltd
push
repz
xchg
shr
shlb
fildl
cwtl
imul
inc
loopne
fisubrl
mov
mov
shrl
and
shlb
sahf
xor
sub
rcrb
mov
xchg
adc
and
mov
stos
gs
movsb
add
cmc
fcmovnbe
cmpsb
mov
lcall
sub
xchg
sbb
and
jmp
mov
add
add
inc
addl
pusha
mov
aas
out
fdivp
jecxz
nop
sub
xchg
xor
jl
inc
stos
pusha
and
mov
movsl
iret
jns
mov
xor
jo
add
fmull
inc
mov
inc
scas
andb
cld
pop
inc
lret
int3
sbb
into
xor
js
xor
add
add
add
lds
loope
icebp
pop
cltd
gs
and
addb
inc
inc
fimull
mov
outsl
cmp
inc
movsl
adc
loopne
xchg
movsl
or
pusha
and
inc
cmp
fs
inc
adc
in
xor
mov
popa
pop
mov
int3
add
push
mov
pop
or
aaa
shl
cmc
pop
push
addr16
or
dec
cmpsl
add
jle
cmp
xchg
sahf
popl
and
sbb
arpl
dec
popf
rorb
inc
leave
out
dec
fisubl
mov
andb
jg
leave
ja
popf
push
ds
addb
aam
loopne,pn
rcr
sub
mov
sbb
mov
mulb
popa
push
push
loopne
adc
add
add
shlb
dec
jo
or
rcr
mov
add
adc
xlat
aaa
sahf
in
clc
inc
loope
sbb
mov
outsl
ret
fwait
dec
or
and
loopne
adc
fisttpl
dec
out
cmp
into
test
inc
insb
xlat
jo
xchg
jp
dec
andb
mov
loopne
add
aaa
rorl
std
or
cmp
ret
sahf
mov
pop
xor
pop
les
mov
ljmp
adc
add
mov
pop
and
sbb
shlb
xchg
into
and
mov
mov
loopne
pusha
out
xor
cmpsl
lret
ss
or
sahf
mov
mov
push
sbb
push
jmp
pop
inc
call
dec
sbb
inc
add
inc
jns
shl
aaa
stos
andb
je
cmp
xchg
aam
inc
push
pusha
xor
addb
lret
aaa
xchg
ret
aaa
push
cmp
ret
adc
xor
mov
insb
test
push
and
cmp
xchg
shrb
loopne
xor
inc
mov
cmp
mov
inc
inc
int3
jg
mov
and
and
cli
inc
sahf
mov
or
mov
cwtl
pushf
ficoms
stos
inc
add
sahf
mov
dec
ret
mov
and
inc
pop
push
adc
mov
loopne
mov
movsl
fmulp
std
jbe
and
lock
jle
jae
nop
rcrl
sub
pusha
adc
pop
sub
xchg
or
rorb
aas
mov
pusha
and
jnp
pusha
pusha
adc
shlb
inc
lods
cltd
sub
loopne
stc
shll
sbb
imul
mov
and
daa
inc
xchg
mov
sub
add
xor
inc
arpl
cmpsb
and
and
inc
xchg
xor
adc
out
push
in
sub
and
jbe
pop
cmp
cmc
xor
jne
and
lcall
popa
pop
sub
inc
aas
inc
xor
adc
pusha
stos
rolb
xor
pop
push
pop
add
mov
pusha
pusha
pop
inc
or
loopne
inc
insl
ljmp
fnstenv
dec
mov
cwtl
dec
sti
xchg
or
sbb
pushf
int
rol
fsubl
stc
je
stos
dec
negb
mov
or
lods
mov
xor
int3
mov
add
mov
xor
mov
movsl
fcomp
inc
pop
xor
mov
push
and
aam
xchg
pusha
xchg
add
imul
fldl
mov
and
and
ret
aad
shlb
lcall
jae
xchg
outsl
push
mov
inc
js
add
ret
stc
cli
ror
jb
xchg
mulb
rol
push
lods
and
jnp
orl
cld
mov
mov
mov
mov
cmpsb
inc
pusha
sub
and
addb
inc
xchg
adc
rol
jne
je
dec
or
jmp
mov
nop
sub
and
add
add
push
sbb
pusha
loopne
jbe
xchg
testb
push
in
fbstp
lds
test
inc
adc
stos
sarl
addb
sub
insl
fistpl
pusha
insl
or
rclb
daa
mov
xchg
mov
scas
pop
cs
mov
and
lret
mov
cmp
inc
stc
inc
popa
jl
cmp
or
subb
stos
sbb
xchg
xchg
jno
std
add
inc
pop
out
mov
mov
pushl
repnz
aam
inc
push
add
pop
negl
jnp
inc
aas
lea
loopne
ss
add
and
inc
cltd
repz
ret
xchg
scas
inc
ja
cld
xor
nop
lds
rclb
loopne
inc
loopne
rorl
inc
shr
push
mov
xchg
mov
je
dec
out
push
add
and
fimuls
mov
xor
add
pusha
pusha
fwait
jge
mov
call
inc
and
mov
rolb
dec
dec
xor
push
addb
mov
imul
pop
push
inc
sub
add
das
sub
lahf
pushf
mov
add
ja
in
mov
mov
or
xorb
ret
sub
jge
mov
test
mov
inc
xlat
test
ror
dec
xorl
pusha
stc
lods
imul
sbb
adc
xor
and
int3
test
jg
rep
inc
add
fistps
aad
sbb
adc
fistps
cmp
adc
mov
in
lods
lret
mov
rclb
lret
test
sub
insl
fidivrs
sti
dec
call
lock
add
pusha
pusha
mov
and
movsl
xchg
test
and
aas
cmp
jp
fwait
push
aas
mov
mov
mov
sub
lcall
pusha
loopne
out
fdiv
sbb
mov
lea
out
fcompl
mov
xor
pusha
pop
into
xchg
aaa
jg
push
shrl
stc
mov
addb
lcall
addb
mov
test
mov
std
push
push
xchg
icebp
fldenv
loope
psraw
clc
mov
addb
gs
leave
xchg
or
adc
sub
call
add
loopne
mov
test
pushf
inc
mov
mov
mov
and
mov
fsts
idiv
aas
repz
mov
add
out
jg
out
into
sbb
fsubs
jo
jo
push
insb
push
adcl
jp
rolb
aaa
jnp
and
jno
ja
jo
xor
sub
add
adc
mov
add
dec
push
sub
cmpsb
shl
iret
xchg
or
push
inc
mov
add
xlat
mov
addb
imul
mov
jns
pop
mov
ret
lods
cmp
fadds
inc
out
mov
mov
aam
mov
gs
shlb
aaa
lret
or
mov
fadds
pop
push
pop
stos
mov
add
nop
clc
imul
and
aam
cs
loopne
lahf
rorb
subb
ss
jg
notl
into
fdivrl
adc
shlb
xchg
adc
inc
adc
add
pop
pop
cwtl
jl
and
in
dec
sub
pop
das
ror
sbb
loopne
xor
mov
loope
mov
push
inc
lods
or
and
adc
int3
andb
mov
outsl
fstps
cmp
inc
pop
test
and
cmpsl
cmp
mov
sub
ror
mov
icebp
lods
testl
jb
ficomps
js
push
mov
inc
out
jbe
shl
inc
mov
pushl
shr
shlb
add
loop
sub
xor
jecxz
dec
ret
icebp
mov
mov
fstl
jne
lods
mov
roll
sahf
pushf
movsl
dec
rorl
sbb
dec
or
lahf
lods
rolb
inc
inc
jne
std
hlt
jle
adc
rep
cmp
lret
addb
and
repz
inc
inc
inc
sbb
jecxz
dec
push
pusha
loopne
pop
int3
cmp
test
loopne
repnz
pusha
or
xor
xchg
jge
leave
in
jg
xchg
jne
imul
es
cli
or
test
loopne
add
je
push
stc
lret
jns
add
and
popf
arpl
pop
cltd
leave
in
lea
push
mov
push
dec
add
cmpb
bswap
pop
shlb
add
cmp
das
inc
xor
adc
rolb
jle
inc
mov
inc
loopne
and
add
call
push
fidivrl
or
jbe
stos
movsl
pop
aad
rol
mov
test
roll
clc
mov
inc
adc
inc
xchg
inc
cltd
mov
pop
push
add
pusha
cmp
and
loop
sbb
cmp
mov
xor
add
jae
mov
xchg
add
in
int
mov
sbb
stc
jno
out
lret
iret
pop
or
pusha
mov
lcall
jmp
fldcw
rolb
mov
test
in
test
das
mov
js
mov
or
test
xchg
dec
mov
test
rcrb
addl
lock
repnz
into
out
fnsave
inc
jbe
push
inc
xor
jp
mov
add
imul
addb
and
inc
and
and
mov
push
pop
push
sbb
loopne
test
jg
add
sbb
dec
push
jne
adc
cmpsb
shlb
jl
out
mov
or
orb
jno
negb
and
xor
inc
inc
fwait
into
xchg
stc
dec
out
and
sarb
mov
adc
mov
pop
dec
leave
ret
jl
cmp
and
lcall
movsb
shlb
xchg
inc
cmp
pop
pop
push
loope
sbb
mov
cwtl
xorl
mov
je
test
sub
sub
inc
ret
pop
add
pusha
cmpsl
jecxz
repnz
ret
mov
andb
mov
loopne
sbb
or
hlt
loop
pusha
loopne
adc
pop
imul
push
add
addb
jne
mov
fistpll
inc
andb
pop
shl
mov
fs
lds
scas
and
xchg
mov
loopne
je
inc
fisubs
loopne
test
mov
movsl
in
mov
push
int3
inc
sbb
push
insb
sbb
sbb
fildl
mov
fistl
mov
xchg
inc
xor
iret
stc
cmp
lods
inc
jg
loopne
cmp
out
pop
adc
pop
roll
js
pop
fsubr
adc
out
jae
and
add
sub
loopne
mov
enter
ficompl
js
xchg
insl
and
aad
pusha
rcr
inc
insb
aas
jl
jle
mov
movsb
pusha
add
add
ficompl
or
or
fistpll
scas
mov
ljmp
add
pusha
loopne
loopne
fistl
movsl
add
pusha
inc
inc
loope
add
mov
enter
xchg
sub
and
xchg
pop
cmpsl
aaa
scas
loopne
inc
pushf
hlt
and
pop
mov
loopne
out
sbb
mov
cltd
shlb
es
and
and
lret
mov
or
and
rclb
adc
pusha
sbb
repz
test
and
mov
mov
sbb
das
in
mov
dec
jne
dec
push
arpl
inc
pusha
mov
fdivl
and
push
cmpsl
xchg
inc
outsb
xlat
xchg
sbbb
adc
scas
mov
push
andb
loopne
jo
xlat
xchg
shlb
orb
mov
jo
add
dec
mov
lods
xchg
rcrb
loopne
mov
mov
loopne
mov
cmp
subb
pusha
ds
fsubrl
shlb
icebp
mov
test
in
decb
loopne
sub
test
jbe
scas
and
insl
mov
and
iret
fisubl
adc
and
and
mov
sub
mov
inc
in
outsb
fdivp
hlt
jmp
dec
setnp
sub
push
pushf
xor
sub
cmp
pop
loop
rorl
push
divb
push
fcmovnbe
push
rol
aas
mov
inc
mov
push
adc
inc
addb
dec
mov
pop
les
sbb
add
adcl
out
cmpsl
bound
and
negb
hlt
adc
mov
mov
lods
aaa
repz
inc
push
adc
rclb
mulb
lods
shlb
cmp
cmp
mov
push
rcll
fcoml
cld
inc
cmovns
in
mov
ds
mov
add
mov
pusha
andb
fwait
enter
orl
push
scas
lods
mov
lret
add
sub
lods
xchg
sbb
in
and
mov
aaa
ja
mov
imul
add
mov
cmp
bound
mov
mov
dec
inc
push
mov
xchg
pushf
rcrb
sbb
pop
adc
mov
mov
add
shll
and
rolb
push
and
dec
inc
sub
or
loopne
and
addb
pusha
loopne
shlb
shll
dec
test
pop
cmpsl
sub
and
xor
push
inc
add
loopne
icebp
lds
adc
pop
andl
pop
out
jno
sub
inc
and
dec
or
sub
dec
out
mov
loop
and
fcmovbe
push
sbb
inc
addb
addb
pop
test
rclb
add
loopne
fimuls
pusha
xor
push
add
dec
subw
scas
imul
mov
pop
mov
adcb
mov
mov
jb
nop
jne
xor
je
mov
xor
mov
stos
loopne
outsb
mov
dec
push
fstpt
pop
nop
mov
loopne
or
mov
mov
push
inc
and
jno
lods
inc
pusha
dec
mov
xor
nop
push
mov
test
pusha
push
mov
mov
or
dec
in
adc
movsl
mov
daa
inc
mov
push
inc
add
jg
adc
fs
add
repz
and
aas
xor
loopne
rolb
push
fcomi
fwait
xor
push
addr16
lret
addr16
and
fldcw
and
dec
add
ret
inc
add
rorb
jb
imul
orb
cmp
jl
mov
aam
cwtl
into
pop
add
rcr
divb
sysret
aam
lods
jbe
data16
xchg
mov
pop
addb
sahf
das
pusha
test
inc
sbbb
push
add
bound
pusha
cmp
mov
test
inc
jecxz
and
andb
addr16
add
rol
fnstenv
pusha
rclb
mov
loopne
adc
das
sbb
jns
shlb
shl
xor
dec
nop
outsb
add
sbb
xbegin
bound
shlb
xor
mov
or
pusha
andb
insl
popf
imul
inc
mov
aaa
rolb
test
pusha
pushf
gs
and
add
popa
jae
rclb
or
inc
pop
sbb
pusha
and
aas
addr16
mov
enter
sub
ds
lret
inc
add
inc
neg
adc
dec
xor
pop
js
inc
loopne
loop
push
push
add
sahf
test
mov
ficoms
jge
loop
cmp
jl
or
xor
jp
outsl
ret
xor
inc
pop
cltd
push
pop
mov
mov
rcrb
inc
rcrb
jbe
xor
cmp
xchg
jns
push
in
fildl
jne
dec
push
arpl
inc
add
inc
and
out
cmp
mov
push
lret
std
outsl
in
dec
cmp
pusha
mov
fucomp
out
adc
jno
fldcw
and
int
andb
dec
mov
add
bswap
arpl
addb
fdivs
sub
sub
push
popf
clc
lret
lahf
or
adc
add
movsl
outsb
jl
mov
mov
mov
jb
push
ret
add
mov
fldt
mov
mov
fldenv
or
inc
sub
pusha
mov
dec
or
dec
mov
pop
mov
inc
mov
add
push
mov
xor
stc
out
cmp
xchg
add
mov
xor
or
add
pop
out
outsb
cmpsb
loopne
push
xchg
loopne
fstpt
lea
sub
mov
cs
add
sti
lahf
cmpsl
movsb
and
ret
mov
mov
add
xchg
mov
lea
jge
incb
fdivl
xchg
pushf
aad
mov
gs
adc
lds
and
shufps
ja
pop
jno
xlat
inc
adc
and
mov
mov
xor
aad
outsl
ss
fmuls
add
les
pusha
pushf
push
add
jge
insb
and
xor
add
mov
ficoml
sub
add
xor
cmp
sarb
loopne
jecxz
bound
inc
mov
hlt
lret
jecxz
shlb
loopne
push
mov
push
mov
leave
movsl
movsb
shlb
pushl
or
mov
fs
xchg
and
jne
cli
int3
inc
lock
inc
popa
fwait
sub
inc
adcb
jl
mov
xor
push
in
or
aaa
ss
mov
addr16
shlb
push
jg
inc
mov
sub
xor
xchg
inc
pushf
push
in
imul
rorw
pop
inc
bound
fnstenv
pop
jno
mov
xlat
jp
out
inc
push
sbb
push
adc
loop
shlb
movsb
pusha
inc
popf
pop
idivb
mov
xor
mov
out
and
ret
dec
aaa
fstps
loope
fisttpll
dec
jl
dec
pushl
and
fs
inc
pusha
idivb
xor
testb
rorb
or
iret
lret
push
add
inc
test
cmp
inc
daa
jg
cmp
add
xor
add
pop
inc
and
scas
mov
fisubrs
ret
add
test
pop
int3
ja
sub
push
push
jb
rcrb
jno
jecxz
shlb
notl
jl
sahf
cmc
xchg
ljmpw
jo
jp
lahf
ss
push
inc
sub
aas
sub
and
mov
add
inc
pusha
sbb
hlt
and
leave
dec
test
arpl
scas
and
out
arpl
roll
mov
loopne
ficompl
pusha
nop
jnp
fmul
cli
mov
pushf
je
xchg
pop
aam
shlb
add
inc
add
sbbb
dec
push
inc
jp
dec
inc
sbb
add
pop
js
lahf
lret
ret
aas
out
pop
stc
push
divl
pusha
rclb
pusha
xchg
jle
mov
test
and
mov
pusha
add
ds
add
add
mov
push
rolb
lret
outsb
dec
clc
int3
in
xchg
cmp
icebp
jae
repz
adc
lcall
icebp
mov
rolb
pop
add
xlat
fstpl
sbb
stos
pop
sarl
fstl
cltd
mov
adc
dec
dec
push
inc
xchg
into
pushf
imul
pop
das
mov
sub
mov
mov
ret
push
cmpsl
jno
loop
or
loopne
xor
lea
in
aam
insb
xor
test
and
mov
xor
xchg
in
insb
cmp
jae
pusha
add
daa
jnp
pusha
mov
insb
out
mov
imul
add
pusha
xor
int3
loopne
add
lret
ret
arpl
mov
mov
int
pusha
call
in
cld
sarl
push
push
xchg
repnz
shll
ja
orl
dec
les
dec
mov
inc
shrb
fldcw
sub
add
loopne
adc
mov
jmp
fs
out
loopne
enter
addb
and
add
add
loop
jb
xchg
pop
pop
xchg
or
mov
jo
pop
mov
ret
bound
popf
jle
mov
add
mov
lahf
jnp
sbb
andb
std
ret
inc
hlt
inc
popa
sub
lcall
adc
movsb
andb
or
pushf
addr16
gs
shlb
inc
insl
cli
sbb
dec
lds
inc
enter
sbb
and
loop
popa
pushf
loope
sar
hlt
pop
xlat
pop
rcrb
push
loopne
or
and
in
and
rclb
test
push
jge
and
mov
or
sub
and
and
sar
rolb
imul
mov
insl
les
mov
push
xchg
mov
jne
loop
andb
and
mov
lds
mov
dec
cmp
cld
mov
jle
dec
xchg
loopne
xor
imul
pop
mov
loop
int
inc
addb
inc
jo
addb
aas
inc
xor
stos
add
sub
and
fmulp
bound
push
cmp
push
fnsave
push
lods
or
loopne
push
call
shlb
pop
or
pusha
rclb
jle
dec
xor
inc
call
mov
loopne
addr16
cmp
or
rolb
rclb
or
sbb
jno
lds
xor
pop
sub
xor
lock
and
mov
and
and
xor
pop
ror
in
and
fsts
iret
lock
cmovl
and
mov
dec
or
test
mov
in
lret
cmc
jnp
mov
xchg
xlat
je
test
mov
addb
subb
dec
add
dec
dec
inc
icebp
push
jg
mov
aam
pop
inc
int3
test
add
adc
in
pop
arpl
lcall
mov
jp
out
mov
icebp
in
into
push
gs
push
mov
aas
mov
fdivl
bound
mov
xchg
mov
push
inc
into
out
mov
pusha
jnp
mov
fadds
add
repz
jge
push
loop
sub
rolb
mov
pop
std
movsl
mov
xor
mov
push
mov
add
mov
inc
sbb
lret
stc
sti
out
sub
mov
pusha
and
leave
push
pop
push
push
adc
sub
pusha
add
mov
mov
shr
mov
and
mov
sub
xchg
rcrb
in
addl
inc
adc
add
add
arpl
inc
fnstsw
inc
add
pushf
dec
into
add
addb
adc
fiaddl
mov
shlb
in
pop
out
xchg
xchg
rcrl
pop
enter
rorb
push
pop
push
push
sub
fmul
ror
fs
inc
lret
rolb
or
rol
les
addb
pop
imul
add
cmpsl
mov
nop
in
pop
outsb
mov
or
and
aas
sub
loopne
and
loopne
mov
out
sahf
push
xor
push
pop
mov
or
add
and
inc
adc
cltd
cmp
add
or
sbb
sbb
push
mov
adc
movsl
lret
fisubl
andb
or
add
jle
and
sbb
inc
sbb
inc
pop
mov
xchg
xor
cmp
jno
lahf
and
addb
fcoms
loopne
dec
and
and
xor
scas
pop
push
mov
loopne
lods
pusha
shlb
in
movd
aas
mov
xor
push
adc
mov
fisubrl
sar
mov
mov
pusha
mov
push
addb
mov
pusha
and
and
or
daa
pusha
push
addb
stos
push
stc
or
and
shlb
add
cwtl
ja
insb
cmc
mov
adc
mov
and
mov
jae
loop
inc
mov
leave
lods
and
dec
nop
aaa
sbb
add
or
fists
lds
mov
dec
push
mov
mov
pop
outsb
dec
inc
sbb
cmp
cmc
stc
hlt
dec
sbb
adc
addr16
push
pusha
inc
pop
shlb
inc
push
inc
or
mov
rolb
leave
mov
inc
adc
test
add
inc
mov
subb
xor
movsb
rolb
and
add
stos
inc
scas
mov
loopne
mov
xor
loopne
lock
icebp
ret
sbb
ret
pushf
addr16
sahf
jbe
lds
and
loopne
push
std
dec
jae
lods
rolb
add
ficoms
xchg
mov
insl
mov
lret
in
push
mov
cmc
sub
andb
push
test
loopne
mov
push
sahf
mov
pusha
cld
dec
loopne
sbb
out
cmpsl
sbbl
les
std
ret
xor
ljmp
lods
add
sub
inc
xchg
jmp
mov
sbb
fcom
push
add
adc
inc
shl
pop
pop
dec
gs
mov
and
pop
loopne
add
pop
xchg
jmp
dec
out
lret
in
jne
adc
mov
stos
lock
lds
insl
mov
xorb
mov
lock
movsl
add
fdivs
cmp
sbb
movsb
add
in
loopne
cmc
inc
xor
pusha
mov
and
adc
repz
add
and
xchg
sbb
push
push
add
clc
arpl
shrb
pop
das
mov
mov
pusha
aaa
rclb
inc
das
dec
insl
sub
loop
shll
lock
pusha
inc
push
dec
scas
cmp
addb
pop
or
subb
mov
mov
inc
adc
mov
in
mov
ljmp
xor
mov
xor
fstpt
xor
imul
out
repnz
pusha
rclb
movsb
rolb
dec
aaa
fmull
cmp
or
mov
mov
sub
jg
inc
mov
xchg
fldenv
xchg
push
test
mov
mov
mov
jns
hlt
add
add
and
fs
mov
shl
shlb
and
xchg
cmp
mov
add
xor
pop
or
inc
sbb
call
mov
sub
pop
jne
lock
shlb
pushf
mov
int3
push
mov
nop
mov
push
fnstcw
popa
rolb
test
loop
mov
shlb
dec
mov
imulb
add
sbb
jg
jnp
cmp
add
cmpb
loop
add
jb
in
fcmovb
xchg
lret
mov
or
inc
xchg
fldt
inc
mov
mov
pushf
lahf
mov
mov
mov
add
popa
out
or
add
int
push
dec
adc
outsl
push
add
inc
mov
mov
mov
mov
fisttpl
insb
xor
add
hlt
scas
shl
adc
jne
daa
and
add
cmp
ficomps
jp
mov
jno
adc
stos
and
ljmp
dec
inc
xor
dec
jle
roll
out
rolb
gs
dec
and
add
lret
push
cmpsl
hlt
mov
add
pop
xchg
inc
rorl
orb
push
movsl
and
subb
xchg
push
loopne
add
pushf
mov
mov
aam
sub
rclb
mov
repnz
aaa
sbb
cmp
xchg
fildll
pusha
or
and
jmp
jp
jne
dec
jle
ret
mov
push
andb
push
push
mov
leave
stos
mov
inc
and
or
addb
inc
inc
movsl
ret
or
jmp
out
mov
and
add
jp
pusha
add
add
jnp
xchg
lds
fisttpll
mov
and
push
adc
jnp
icebp
addr16
sti
pop
aad
pop
dec
sub
cmp
cwtl
ret
inc
loopne
insl
call
mov
push
into
inc
mov
test
in
dec
add
fstpt
fstps
mov
mov
pusha
test
cmpsl
das
test
shrb
ret
adc
addr16
das
cmp
dec
pop
lods
aad
sub
inc
hlt
gs
and
in
and
jbe
inc
mov
into
shll
pusha
inc
sbb
mov
daa
pop
dec
movsl
mov
inc
repz
lret
xchg
orl
movsb
add
and
out
aad
and
rolb
mov
int
xorl
push
inc
mov
mov
mov
popa
mov
rorb
pusha
dec
je
ret
cmc
iret
in
sub
in
fstl
shl
or
loopne
les
inc
pusha
jl
add
mov
fcompl
mov
or
mov
and
cmp
int
bound
cltd
jae
xchg
fiaddl
inc
les
mov
or
add
xor
xor
mov
enter
xchg
mov
addr16
jecxz
stc
imul
loopne
jb
out
cmp
jbe
pusha
inc
and
and
decb
fists
cltd
clc
repz
or
insb
xlat
insl
mov
mov
mov
mov
inc
rcr
testb
rcrb
test
rorb
sbb
negl
clc
and
inc
push
inc
inc
fidivl
jmp
orb
lods
scas
stc
jmp
sub
imul
sarb
adc
cmp
mov
shlb
aam
sub
add
scas
add
ja
pop
rorl
pusha
cmpb
lods
cwtl
cltd
or
add
mov
out
xchg
hlt
pop
mov
add
or
mov
shrb
and
rclb
jne
ss
push
pop
mov
daa
loop
pop
aaa
mov
cwtl
iret
sbb
add
add
test
inc
dec
xchg
jb
push
xor
fisttpl
pusha
add
call
jns
sarb
test
andb
mov
loopne
bound
push
cwtl
push
shlb
mov
leave
lds
loopne
dec
dec
lock
dec
imul
fwait
xchg
lods
sub
fistpl
iret
mov
mov
jecxz
push
cwtl
lret
mov
add
lret
test
mov
shlb
mov
or
out
or
and
push
dec
nop
cltd
pop
rcll
inc
pop
aad
push
inc
sarb
and
cmp
inc
inc
cwtl
daa
mov
arpl
mov
mov
scas
fcoms
adc
gs
test
je
in
mov
lock
mov
pusha
mov
fisubs
sahf
mov
rcrb
adc
or
pusha
mov
inc
mov
xchg
fwait
dec
mov
imul
cmp
inc
orb
fsincos
daa
adc
add
repz
les
mov
adc
jnp
shl
in
dec
pusha
loope
lock
andb
mov
lods
dec
loopne
cmp
cwtl
fmul
cmp
sbb
adc
jo
test
cmp
lret
das
sbb
inc
loopne
into
jnp
sbb
push
pushf
bswap
pushf
and
ss
dec
pop
clc
roll
shl
sbb
shlb
mov
jbe
rclb
push
mov
sub
mov
out
enter
cmp
cmc
loope
out
sbb
shlb
add
idivl
hlt
ficompl
scas
test
and
and
mov
and
xor
cmc
mov
repnz
xchg
sub
xor
cmp
and
sbb
jl
outsb
push
and
pusha
ret
aam
cmp
stos
mov
mov
rolb
xlat
scas
mov
or
inc
pop
int3
adc
mov
mov
and
mov
mov
fcompl
sbb
ss
sbb
aam
fs
out
test
sar
inc
dec
pop
mov
loopne
and
mov
xchg
repnz
dec
sub
jle
sub
and
jmp
mov
mov
dec
add
rclb
pusha
add
in
mov
inc
mov
rorb
out
pop
int3
or
and
mov
mov
sub
lods
pop
jmp
icebp
jmp
std
add
aaa
stos
rol
imul
adc
mov
push
xchg
xor
fstpl
aas
lock
add
jae
xor
rol
inc
and
jl
mov
stos
add
xchg
push
inc
orb
xchg
out
xor
xor
std
out
outsl
sub
loopne
dec
test
mov
aas
mov
xchg
push
inc
mov
adcl
ss
inc
lods
shlb
popf
nop
inc
and
jb
into
pop
cltd
decl
and
daa
sub
pusha
clc
jb
dec
xor
add
cmpsb
pusha
loopne
ret
xor
out
mov
pop
aam
jecxz
add
sbb
cmp
adc
out
and
loop
iret
jo
and
push
inc
jns
das
mov
in
push
mov
lcall
push
mov
add
cmp
add
dec
imul
dec
fcoml
xchg
rolb
add
push
lds
clc
sub
loopne
lea
mov
icebp
pop
cmc
test
dec
sub
cld
push
pusha
push
inc
and
sti
mov
clc
addb
shlb
in
repnz
cmp
pop
sub
mov
ss
sub
out
jmp
pop
jg
xchg
xchg
out
inc
sub
and
inc
fdivs
mov
ja
jnp
dec
and
bound
dec
push
cli
movsb
rolb
lea
push
sahf
jge
mov
inc
sbbb
daa
lock
lahf
insb
add
and
movsl
pop
push
enter
push
dec
cmp
addb
mov
cmp
pop
pop
popa
mov
jg
pusha
mov
mov
stc
pop
lret
jl
cwtl
push
imul
dec
shr
cmpsb
pusha
inc
fcmovnbe
fsubl
andb
and
dec
bound
iret
cmpsb
pusha
adc
lret
cltd
push
mov
insl
aaa
push
push
xchg
add
mov
xchg
mov
jo
cmc
mov
lahf
jne
in
mov
nop
rcrl
es
inc
pop
adc
add
addb
push
stos
add
push
ljmp
and
inc
loopne
mov
imul
outsb
mov
sub
add
and
or
mov
movsb
loopne
enter
pop
xchg
pop
jle
jbe
test
inc
popa
mov
mov
shlb
sahf
sahf
xlat
andl
inc
adc
int3
sub
mov
pop
mov
xchg
cmc
test
ja
lds
cmp
pusha
mov
aaa
adc
or
and
loopne
and
daa
lods
movsb
and
adc
cmp
andb
mov
dec
testl
addb
and
mov
sub
inc
mov
clc
push
inc
dec
shld
mov
sub
cmp
push
add
push
cltd
pusha
leave
movsl
jl
jmp
jne
adc
iret
stos
pop
add
in
jmp
mov
lea
add
lods
lea
and
dec
dec
jns
sahf
movsb
rol
call
jno
pop
sub
push
cmp
jo
lret
fildl
mov
inc
in
cmc
xor
inc
sbb
pop
xor
pusha
and
jg
int3
cmpsb
mov
inc
pusha
scas
pusha
and
mov
xor
js
or
jnp
stc
xlat
jo
and
loope
push
inc
frstor
add
inc
pusha
repnz
cmp
stos
dec
aad
pop
fbstp
cltd
jl
sub
adcb
mov
mov
idivl
pop
or
and
ljmp
cmp
stos
and
or
pusha
xchg
cmpsb
loopne
popa
out
ret
push
mov
push
jmp
fnstenv
jae
add
and
mov
aas
addb
into
fcoms
outsl
leave
and
jge
loopne
imul
and
xor
mov
daa
ret
out
rcr
sub
push
lock
push
repnz
gs
sbb
mov
mov
add
xor
mov
stos
loopne
mov
leave
faddl
movsb
mov
out
and
insb
leave
dec
and
icebp
insb
dec
lds
sbb
ja
mov
fcmovnb
lahf
jg
sub
pusha
sti
and
pusha
and
rolb
mov
xor
cmpsb
loopne
cmp
add
out
xchg
pop
mov
popf
mov
mov
fisttpl
adc
out
xor
dec
push
fwait
mov
jne
aad
data16
and
mov
loopne
inc
bound
andb
dec
sahf
mov
loopne
cltd
mov
and
pusha
cltd
inc
mov
mov
xchg
cmp
pusha
cmpb
add
lea
mov
movsl
cmp
out
xchg
sbb
cmpsl
into
sub
add
lods
mov
xchg
pop
xor
ret
daa
jl
jae
andb
inc
mov
addb
loopne
xor
inc
jl
arpl
mov
fistl
loopne
cld
shll
mov
imul
iret
jge
mov
inc
pusha
sub
fs
pop
sbb
pop
mov
mov
pop
mov
mov
add
inc
add
lcall
cmpsb
add
inc
aas
mov
lods
rolb
sbb
ss
add
fwait
inc
push
jb
loopne
push
arpl
pop
mov
call
out
add
mov
adc
dec
mov
inc
sti
adc
inc
mov
loopne
mov
sbb
scas
insl
popf
sbb
dec
icebp
mov
or
jg
js
lcall
xor
dec
pop
xlat
mov
sbbb
enter
push
xor
sahf
test
add
loopne
call
mov
pop
outsb
pop
icebp
jecxz
gs
lret
mov
addb
or
ror
ss
rcr
out
or
inc
fmul
pop
andl
negb
pop
or
mov
jb
add
shlb
repnz
pop
arpl
ljmp
inc
shl
pop
mov
xchg
dec
mov
sub
shlb
mov
and
mov
andb
add
add
in
repz
inc
sbb
pusha
and
pop
addb
and
xchg
call
add
mov
mov
sti
loopne
adc
inc
andb
mov
mov
push
roll
test
mov
pusha
push
xor
add
inc
and
leave
sldt
and
add
popa
or
and
inc
push
and
and
cmpb
mov
mov
and
testl
or
or
mov
or
fs
out
lods
and
cmp
ret
adc
add
fsubl
shr
ficoml
sub
les
cmp
sub
and
dec
inc
arpl
aam
mov
add
bound
adc
ja
int3
push
inc
sar
jns
mov
andb
cmp
jns
pushl
mov
mov
cmp
int
and
xor
adcb
dec
mov
sub
add
ljmp
ja
stos
dec
mov
sahf
sub
pusha
xchg
hlt
arpl
add
mov
push
inc
sarb
dec
sub
pop
cmpsl
jo
dec
mov
xor
adc
cmp
aas
repnz
and
jae
sub
inc
arpl
pushf
xor
add
mov
setb
repz
fildll
sub
shl
and
pushf
cmp
inc
fcompl
or
repnz
loopne
xchg
js
shlb
xchg
sub
loopne
daa
lods
jmp
cmc
mov
stc
fistpl
add
aad
addb
icebp
dec
adc
add
insl
push
dec
in
in
and
or
mov
mov
pushl
inc
mov
aad
fmul
dec
pop
jp
cmp
mov
scas
jnp
inc
pusha
dec
mov
or
inc
mov
sti
sti
cmc
call
mov
and
outsl
xchg
and
pop
xchg
sarb
mov
addb
xorl
inc
jno
mov
in
push
shlb
xchg
cmp
sbb
inc
adcb
xor
shll
cmp
pop
push
pusha
sti
push
sahf
lods
inc
mov
xor
sub
pop
mov
stos
shlb
loopne
mov
mov
test
cmp
ja
outsl
dec
jb
cmc
xor
jno
mov
dec
or
cmp
sti
jge
hlt
mov
xchg
inc
lret
xacquire
mov
loope
enter
pop
push
sbb
mov
pusha
inc
jo
or
inc
cmc
in
cmp
ljmp
dec
sti
out
mov
sub
inc
jns
mov
cmc
pop
mov
shrb
push
rolb
pusha
xor
popa
aaa
adc
inc
add
imul
or
inc
or
subl
andb
add
jae
loope
into
stos
mov
dec
cmpsb
add
enter
jne
jecxz
lock
ret
add
mov
sbb
xor
test
mov
out
mov
sub
loopne
mov
mov
mov
adcb
pop
jb
shlb
push
xchg
sbb
mov
mov
inc
push
pop
push
das
xor
sti
xlat
aas
pushf
stos
rol
jmp
add
pop
leave
push
ja
adc
xchg
xchg
rclb
cmpl
andb
pusha
xor
or
pop
push
or
ds
gs
inc
inc
and
sbb
xchg
pusha
sbb
in
mov
mov
jmp
jnp
pop
adc
mov
leave
aam
xchg
ret
xchg
xchg
sbb
cmpsb
shlb
bound
fsubs
lret
loopne
rol
clc
loope
add
mov
sub
aad
pusha
rcrb
es
jb
mov
push
notl
test
loopne
pop
pop
jb
jp
ds
add
inc
and
jnp
in
fidivrl
out
addb
jb
pop
mov
add
pusha
addb
push
cmpsl
dec
imul
sbb
pusha
addb
jno
sti
ret
or
scas
fidivl
pop
mov
outsb
jbe
add
aas
call
imul
pop
mov
aas
in
add
and
testl
cmp
inc
sub
movsb
add
mov
dec
mov
gs
clc
xor
sbb
add
mov
in
daa
ss
add
jp
in
lret
jae
inc
add
push
addb
pusha
mov
inc
add
movsl
cwtl
or
rorb
push
cmp
mov
mov
test
mov
adc
rcr
mov
stos
repnz
mov
inc
add
jb
aam
cmpsb
inc
or
mov
add
addb
stos
fbstp
rcr
inc
aam
outsl
mov
mov
and
cmc
in
dec
or
adc
cmp
dec
jae
push
cmpsb
addb
xchg
cmc
aaa
test
and
pop
fwait
bound
loop
sub
add
cmpsl
inc
maskmovq
negl
daa
xor
xchg
shll
and
add
movsl
ret
lret
iret
scas
pusha
loopne
inc
xchg
cmp
test
pop
adc
cltd
incb
and
shrb
outsb
iret
pop
or
xchg
mov
mov
aad
popa
pop
cmpsl
rcrb
stc
pusha
out
and
icebp
sti
add
lds
into
cmc
popa
out
and
shlb
rolb
ss
divl
push
push
add
jbe
add
scas
pusha
mov
pusha
sub
pusha
mov
cmpb
mov
add
andb
and
sti
mov
cmpsl
and
inc
mov
inc
shll
rclb
fdivrl
mov
or
add
inc
and
shr
fs
fldl
test
sub
shlb
sbb
dec
add
mov
xchg
in
das
adc
jae
add
pusha
or
inc
dec
lea
ja
loope
adc
int
inc
inc
jo
sbb
pop
jo
sbb
addr16
shl
cs
mov
push
and
call
inc
sub
into
in
scas
aaa
inc
ret
or
insl
push
insl
insb
pusha
dec
add
hlt
and
fwait
sub
push
repnz
xor
mov
mov
out
inc
ret
js
aad
pop
add
cltd
adc
rcrl
insl
mov
mov
or
and
stos
add
dec
adc
loopne
cwtl
inc
aad
lock
mov
and
pop
mov
jp
lods
mov
rol
addr16
pusha
loope
outsb
jmp
aaa
in
xchg
addr16
and
mov
xchg
dec
sub
daa
cmp
mov
cmc
lds
dec
jo
fwait
loop
clc
movsb
and
sbb
pusha
pusha
shr
xor
out
xchg
repz
xchg
pop
xchg
pop
stos
sbb
scas
mov
pop
lret
addb
jp
xor
inc
sub
ds
mov
xchg
adc
movsl
fmuls
call
jge
xchg
leave
sub
jbe
and
dec
xchg
jae
loopne
sbb
popf
in
jne
dec
sbb
pop
inc
cmpl
inc
call
dec
push
jae
mov
sub
sub
pop
ja
sub
inc
xor
sub
sub
loopne
out
dec
bound
and
pusha
pop
add
rolb
sbb
andb
add
orb
and
outsb
pshufw
jmp
insl
mov
dec
mov
mov
push
mov
pusha
dec
enter
pusha
or
andb
mov
mov
push
add
or
sub
addb
addb
cwtl
nop
cmpsl
bound
sub
inc
jno
movsl
fidivl
outsb
out
dec
cmp
jns
or
add
adcl
mov
fldl
mov
and
xor
outsb
inc
in
add
insb
pusha
addb
sbb
in
pop
add
xchg
shr
cwtl
sbb
xlat
addb
in
and
clc
adc
adc
loopne
xchg
ja
cs
loopne
loopne
mov
fs
pushf
neg
popa
or
xor
aam
outsb
mov
mov
pop
jmp
insl
push
mov
test
inc
mov
call
and
ljmp
cli
xchg
inc
in
call
and
rorb
pop
push
sbb
jg
adc
ret
mov
lock
xor
add
mov
push
cmp
iret
pusha
hlt
xor
cmp
or
rolb
pusha
imul
repnz
mov
adc
cmp
push
shl
cmpl
mov
add
rclb
shr
mov
repnz
scas
mov
inc
addb
xchg
movsb
loopne
cltd
addb
repnz
mov
inc
ficoms
loopne
lahf
cwtl
xchg
test
sarb
sbb
inc
cmp
pusha
inc
sbb
call
jmp
rolb
cli
mov
int
in
inc
push
scas
adcl
cmp
sub
in
cmp
shll
ret
push
xchg
ret
lods
andb
mov
sbb
mov
and
loopne
mov
mov
jo
ja
and
loopne
and
sbb
cltd
or
int
mov
inc
pusha
push
lds
rcrb
jne
and
mov
add
add
sbb
movsl
icebp
idivb
ja
fsubrs
andb
shlb
sub
outsl
scas
mov
dec
sbb
mov
add
in
cmpps
addr16
and
loope
jecxz
xor
xor
and
mov
adc
lcall
lock
xor
push
ret
xor
add
mulb
xchg
movsl
into
pop
fcomip
loopne
sub
pusha
and
mov
pop
mov
push
or
and
xchg
vcvtss2si
jns
in
dec
add
mov
mov
in
fmul
xchg
sbb
mov
fwait
xor
mov
stc
push
mov
adc
pop
pusha
loop
clc
jo
iret
xchg
xor
dec
xlat
adc
cmpsb
inc
and
xor
adc
out
push
ret
or
loopne
addl
sub
and
stos
inc
in
xor
push
arpl
mov
mov
cld
call
sub
xor
mov
lods
fadds
xchg
push
and
add
aas
mov
dec
mov
lcall
inc
sbbb
or
inc
dec
sbb
scas
xor
inc
loopne
test
mov
or
rolb
bound
add
es
out
andb
nop
ret
xor
xchg
pusha
ja
adc
sbb
pop
sbb
xlat
add
loopne
sti
xlat
dec
imull
loopne
mov
shl
fidivrs
cmc
xchg
popf
xchg
and
rolb
mov
loopne
sub
push
ljmp
shlb
adc
mov
mov
add
push
clc
lock
xor
dec
sub
addb
adc
shl
mov
mov
jg
sahf
lock
inc
sbb
inc
inc
mov
mov
dec
xor
xchg
and
pushf
xchg
cmp
andb
aam
push
ja
fsubrl
sbb
aad
pop
xchg
mov
and
iret
jae
sbb
and
and
fs
inc
sub
add
dec
daa
sbb
dec
into
sar
mov
out
lods
inc
loopne
sub
insl
and
mov
in
mov
cmpsb
shl
shlb
std
sbb
adc
into
pop
and
dec
pop
dec
imull
mov
ljmp
lret
jns
stos
and
jp
inc
mov
int
int
mov
push
jae
sub
jne
movsb
inc
loopne
pop
and
andb
mov
mov
rorb
or
shrb
mov
xorb
insl
lret
and
jb
iret
xchg
insb
lret
sbb
aaa
sbb
add
and
inc
pop
outsl
movsl
loopne
lods
xor
lods
pop
jo
adc
cmp
xor
push
shlb
mov
add
and
aas
add
in
das
loope
push
clc
test
mov
movsl
std
push
inc
push
loopne
stos
push
cmc
cli
lcall
mov
jne
int
gs
pusha
pusha
mov
andb
cmp
cmpsl
xchg
aam
setp
inc
mov
pusha
test
rcr
mov
loopne
lock
sub
and
mov
andb
dec
ja
mov
andb
loopne
loopne,pn
xor
xchg
inc
int
xor
mov
add
popa
loopne
cld
fsubrl
cmpsb
rolb
mov
xor
stc
outsb
or
and
pop
and
loopne
jb
cmp
insb
stc
shrl
jno
and
inc
xchg
lcall
and
cli
push
into
push
ja
xor
mov
loopne
imul
inc
push
addb
and
inc
and
push
int
jne
cmpsb
pusha
add
cwtl
cld
pop
mov
inc
rolb
mov
pop
sbb
cmp
and
lret
inc
lds
mov
mov
and
mov
ret
or
call
or
add
loopne
xor
push
xchg
cmp
stos
mov
ds
lret
sub
loopne
ror
and
pusha
pop
and
rcrb
andb
pop
ret
cwtl
mov
jbe
and
lea
sbb
inc
shrb
sarb
lds
push
inc
and
dec
dec
ret
pop
gs
or
test
pusha
outsb
or
stos
addb
cwtl
fldenv
xor
jp
and
sub
sbb
orw
icebp
inc
imul
mov
pop
pop
jg
mov
aam
addr16
mov
out
nop
cmp
jb
in
cmp
loop
add
popa
nop
add
shlb
mov
push
jbe
jae
out
pop
int
mov
add
pusha
pushf
and
and
pusha
pusha
insb
push
xchg
int
pop
pop
xchg
lock
neg
shlb
inc
jae
push
mov
sbb
insl
call
push
mov
pop
les
aam
outsl
mov
and
lret
in
or
pusha
xchg
addb
pushf
push
mov
mov
into
or
addb
or
loopne
in
and
jle
xchg
push
outsb
fstps
out
adc
pushl
leave
inc
mov
insl
scas
cmp
sbb
dec
divb
add
inc
icebp
fistpll
leave
aad
mov
add
popf
cmp
out
loopne
push
fldl
add
imul
jb
fbld
adc
add
adc
xchg
xchg
pusha
cltd
xchg
xor
mov
test
xchg
adc
push
cmpsl
xchg
loopne
loopne
add
sbb
dec
jg
cli
mov
inc
fstpt
addb
push
pop
dec
or
shlb
pusha
pusha
out
push
lods
aam
xchg
xor
out
aad
pushf
or
test
aam
xchg
add
rcrb
cli
push
cmp
pop
cli
dec
cltd
imul
xchg
adc
mov
add
ret
jb
add
mov
add
add
inc
mov
outsl
fstp
mov
add
add
inc
lea
or
inc
js
js
push
in
cmp
aas
pop
jmp
cmc
mov
mov
sbb
xchg
xchg
add
push
pusha
in
mov
sbb
stc
in
push
and
xchg
int3
dec
pop
pop
pop
dec
inc
sub
add
pusha
inc
xchg
sub
mov
mov
aaa
add
and
addr16
into
and
loopne
adc
inc
pusha
xchg
push
mov
loope
fnstsw
sarb
or
add
cmp
mov
mov
arpl
dec
push
mov
test
pusha
dec
loopne
mov
iret
mov
andb
addb
add
stos
andb
cmp
or
add
lcall
inc
fidivrs
loopne
out
mov
out
ds
jle
lock
inc
push
push
inc
inc
lock
fdivrs
stos
inc
mov
push
mov
cld
and
lret
pusha
ljmp
mov
jne
loopne
adc
lret
loopne
lret
jg
int3
push
xchg
cld
jle
jb
jmp
mov
push
and
add
loopne
ljmp
pusha
sarb
ret
mov
cmpl
adc
sub
sbbb
stos
sub
pusha
int
or
rcr
push
stc
mov
push
or
repz
jb
xchg
push
inc
and
xchg
mov
test
mov
rolb
and
in
pusha
mov
mov
dec
lock
dec
mov
loop
and
pusha
push
jno
jns
shlb
and
add
cmp
add
pop
in
and
iret
addr16
add
xchg
add
int3
insb
test
in
nop
fisubs
add
inc
push
lods
hlt
inc
movb
pusha
enter
into
lock
fs
sti
pop
sub
loopne
int3
mov
or
sub
gs
lods
inc
andb
cmp
push
adc
xor
xor
fstpt
test
sarb
mov
jge
loopne
out
cmp
loopne
hlt
notb
nop
addb
cs
dec
inc
int3
out
jo
add
movnti
notb
and
mov
loopne
stos
loopne
adc
sub
inc
lods
and
aad
mov
repz
out
add
dec
test
inc
loopne
xchg
adc
mov
sub
pop
push
sub
shrb
cmp
mov
fs
addl
inc
movsl
add
sarb
out
addb
dec
jne
mov
push
loopne
or
add
scas
mov
shlb
inc
jle
pusha
inc
cwtl
push
add
inc
shl
sahf
aaa
inc
ret
es
into
mov
xor
mov
js
mov
push
test
fimuls
pusha
loopne
cmpsl
xor
cmp
xor
andb
sub
jge
or
fcoms
lahf
sbb
andb
adcl
into
test
and
negl
mov
push
shlb
inc
mov
les
jne
es
mov
mov
iret
jg
andb
mov
rol
scas
pusha
orb
mov
mov
pusha
adcb
test
pusha
jmp
xchg
jl
movd
adc
outsb
test
and
or
int3
push
addb
push
fwait
xchg
xchg
push
lcall
pop
les
mov
es
subb
sub
push
sub
pusha
and
sbb
add
and
rcl
dec
push
mov
push
push
inc
sub
pusha
mov
cmp
arpl
pop
shrl
pusha
mov
and
jl
inc
sarb
fcoms
and
jmp
xor
and
es
and
cmp
test
xlat
addb
mov
cmc
bound
lcall
xchg
in
mov
or
jmp
outsl
ljmp
mov
cmp
xchg
push
mov
loopne
cwtl
mov
mov
addb
fildll
addb
adc
push
in
add
inc
call
cs
pusha
mov
push
popa
rcrl
ficoms
add
int3
or
pusha
daa
xchg
call
fwait
add
mov
subb
and
repnz
jne
movsl
rclb
fiaddl
sub
push
mov
leave
adc
stos
add
dec
add
mov
inc
inc
xchg
pop
mov
push
arpl
mov
xor
xor
jbe
add
add
mov
jecxz
add
inc
lods
jb
pop
inc
into
push
dec
push
xchg
xor
ds
pusha
and
out
xor
add
pop
loopne
mov
rolb
fcompl
adc
divl
pop
mov
add
imul
pop
repz
andb
and
mov
xor
jp
fcomps
mov
jbe
rorl
stos
add
jl
in
pop
xor
push
jge
shlb
js
xor
pusha
mov
xor
mov
popf
xchg
push
outsl
sbb
loop
pop
sub
popf
sbb
mov
sbb
cmpsb
add
lock
out
mov
rclb
sbb
inc
mov
xchg
daa
fsubr
push
cmp
lahf
lret
mov
inc
push
mov
pusha
mov
mov
les
lret
repnz
adc
xor
mov
orb
sbb
mov
nop
addr16
or
ret
rcrl
and
fisubrl
lea
dec
xor
adc
push
cltd
mov
and
pushf
movsb
mov
adc
sub
push
cmp
dec
shll
xchg
in
rolb
dec
into
pop
rcl
mov
sarl
or
sbb
jg
jg
jb
inc
loope
in
jo
ss
add
push
inc
out
fisubrs
pusha
pop
push
out
jmp
pushf
and
pusha
inc
jmp
xlat
repz
in
imul
pop
js
dec
pop
and
inc
arpl
imul
dec
push
aas
mov
insl
push
das
dec
daa
xchg
xchg
sbb
or
ret
scas
mov
jmp
fildl
or
ljmp
in
stos
and
and
add
arpl
xor
pop
out
adc
lock
in
ret
lahf
lods
pusha
and
les
andb
leave
decb
add
adc
aas
mov
adc
cmp
jg
call
mov
mov
test
and
mov
cltd
test
mov
stc
lcall
loopne
das
mov
mov
loopne
xchg
mov
xchg
mov
js
xchg
test
mov
loopne
pushf
sbb
inc
and
push
arpl
and
aam
push
add
aad
data16
test
pusha
push
das
mov
xchg
movsl
or
loopne
outsl
push
mov
fadd
shll
rorb
andb
sub
scas
fldt
add
pushf
fwait
sarl
sbb
lods
addb
or
loopne
cmp
or
and
mov
inc
dec
jge
or
pusha
rcrl
push
call
cmc
sbb
loopne
sub
sub
push
pop
pop
rcr
es
imul
jl
mov
inc
stos
pusha
pusha
dec
loopne
pop
aas
cltd
dec
jge
movsl
push
in
add
pusha
cmpsb
and
les
scas
loopne
call
lods
add
adc
jle
arpl
out
and
mov
rcl
xor
cmc
test
cmp
into
push
mov
sub
data16
cmp
mov
test
inc
loopne
and
inc
ss
mov
loopne
and
and
jge
test
scas
pusha
mov
mov
adc
lret
dec
sbb
xchg
push
pusha
mov
btrl
out
mov
std
imul
jo
add
mov
fwait
sar
add
add
rol
xor
mov
andb
xor
fmull
loopne
stos
addb
lods
add
dec
mov
inc
pusha
data16
loopne
mov
jo
pusha
inc
xor
sahf
jle
inc
mov
cmp
xor
cmpsb
add
ljmp
int
and
scas
pusha
inc
dec
push
lahf
hlt
imul
jmp
xchg
or
cmpb
add
sarb
inc
mov
sbb
pushf
aad
test
jns
sbb
and
pusha
pusha
sub
sbb
adc
je
aam
ret
add
ret
add
pusha
inc
jg
ret
in
adc
aas
push
shr
hlt
pusha
add
xorb
sub
adc
fs
push
sarl
push
mov
inc
xchg
test
popf
cmpsb
andb
xor
scas
addb
and
and
and
loopne
ss
insl
sub
andb
addb
mov
call
sub
loopne
cmp
movsl
sbb
jne
lret
jns
xchg
pusha
ds
mov
jns
ja
repnz
andb
inc
add
rcrl
inc
ret
lret
test
inc
jae
sar
lea
loopne
repnz
add
xlat
out
andb
push
xchg
pusha
fstpl
pusha
push
nop
ret
pusha
mov
push
iret
sbb
scas
pusha
adc
and
push
loopne
outsl
loop
fs
data16
jbe
and
add
mov
leave
inc
and
add
xlat
popf
test
pusha
push
outsb
add
jno
loopne
add
and
loopne
sbb
jo
jecxz
mov
cmpsl
fs
and
add
push
movsl
loop
push
test
and
dec
lds
mov
data16
pop
push
pusha
pusha
lahf
scas
rol
stos
sbb
mov
arpl
adc
mov
and
mov
loopne
adc
loopne
insl
push
ret
sub
mov
testb
dec
aam
je
lret
mov
mov
mov
xchg
sbb
inc
stc
ds
shrb
data16
mov
rcll
or
sub
inc
cmp
loopne
xor
rolb
push
sbb
pop
jo
daa
xlat
js
inc
sbb
rcll
shlb
inc
loopne
sbb
add
or
dec
jnp
cmp
and
push
jge
jge
adc
shrb
dec
and
into
divb
aaa
mov
xor
jnp
loop
shlb
insb
insl
mov
popl
lock
loop,pt
mov
lahf
and
lret
imul
add
out
or
mov
and
and
xchg
pop
movsl
inc
fwait
sub
sbbb
pop
or
fs
mov
dec
imul
fs
fwait
lods
shlb
fld
xor
mov
aas
int3
or
loopne
cmp
mov
aas
popf
and
rol
repz
loopne
fucomp
add
outsb
movsb
pusha
and
sbb
dec
aam
sbb
fwait
lret
dec
test
inc
adc
xchg
lcall
mov
push
cwtl
push
das
xor
inc
xor
pushf
xchg
jno
xor
xor
cmp
and
jae
add
cwtl
add
add
ficompl
call
scas
add
xchg
sarl
out
inc
jbe
aaa
sub
scas
mov
adc
andb
mov
pusha
jmp
push
sub
enter
pop
mov
adc
mov
out
cmp
xor
out
scas
mov
mov
and
dec
ss
arpl
loop
pop
lds
pop
jne
inc
and
shrb
cmpsb
pusha
inc
xor
mov
push
paddsw
loopne
pop
iret
mov
mov
rcll
xchg
push
push
pusha
pusha
ja
negb
xrelease
mov
cmp
rolb
ss
pop
dec
out
lret
in
in
icebp
mov
cmp
dec
popf
fs
loopne
adc
cmp
jbe
dec
adc
push
stos
shlb
push
insb
mov
jg
add
pusha
push
ljmp
ss
cmpb
sarb
jnp
in
dec
pop
inc
pop
std
pop
les
in
ja
not
cltd
dec
shll
loopne
sarb
xor
jns
mov
dec
cmp
decl
and
hlt
outsb
sti
xor
jne
mov
mov
ss
jns
pusha
loopne
add
mov
ss
xor
mov
adc
add
and
mov
adc
repnz
inc
pusha
std
call
add
scas
mov
push
sbb
inc
add
iret
mov
mov
icebp
test
and
dec
pop
jne
and
test
adc
pop
mov
fsubrl
imul
pusha
mov
daa
cmpsb
and
jno
sbb
iret
jle
sub
xchg
clc
lods
scas
sub
sahf
and
jno
cmp
into
jb
xchg
or
pusha
add
mov
fsubs
fmuls
mov
pusha
sarb
and
dec
xchg
cmp
lock
sbb
pop
jno
gs
sbb
shlb
mov
ljmp
mov
and
aas
cmp
inc
and
add
adc
push
jne
gs
shrb
mov
cmpb
dec
lret
lds
rolb
arpl
pushl
pusha
mov
call
mov
lock
inc
and
in
pusha
pusha
sub
inc
jecxz
pop
mov
dec
loopne
call
mov
mov
out
adc
sbb
cmp
jb
add
xchg
push
mov
repz
pop
add
and
mov
add
jbe
xor
add
inc
test
mov
bound
loopne
ror
and
jae
xor
mov
sub
rcl
pop
sbb
dec
pop
dec
or
dec
sbb
fcoml
loopne
or
and
inc
rclb
mov
mov
add
cmp
jno
adc
jle
loopne
mov
scas
addb
rolb
loopne
in
loopne
sbb
add
loopne
xchg
jb
adcl
vdivsd
cli
push
loopne
xchg
cmp
and
pop
jp
and
out
repz
ljmp
mov
sahf
sbb
insl
mov
and
fidivs
pop
mov
xorb
jg
sti
mov
pop
or
dec
mull
jecxz
addr16
js
xchg
pop
in
dec
push
cmp
cltd
sbb
mov
or
and
sub
arpl
jae
pusha
loopne
loopne
xchg
orb
sarb
pop
mov
cld
out
pop
bound
and
sbb
out
xchg
bound
xor
pop
ret
lods
and
scas
pop
mov
mov
out
lods
pop
and
sarb
adc
cmp
sub
and
loop
sbb
mov
xchg
das
pop
xchg
pop
and
mov
lret
sub
push
fadd
or
jbe
rolb
add
lret
add
mov
mov
pusha
jge
cs
cmpb
push
pop
adc
mov
or
jp
fisubl
test
loopne
sar
push
fbstp
jae
mov
sarb
hlt
xor
jle
or
pusha
pusha
mov
mov
loopne
push
in
pusha
dec
jmp
cld
iret
jo
jl
popf
inc
adc
loopne
adc
jb
or
mov
fucomi
xchg
stos
jae
jmp
sbb
in
mov
pushf
enter
jno
ja
mov
or
cmp
and
mov
lret
dec
insl
mov
xchg
idiv
sub
loope
repz
pop
or
testl
fst
cmp
rcrb
fistpll
jns
pusha
add
into
and
adc
inc
fisubl
inc
or
gs
fwait
dec
pushf
test
jae
mov
fstl
loopne
sub
loopne
iret
xor
jnp
or
add
ljmp
cmp
jg
addb
ficomps
mov
arpl
fiaddl
jns
fcoms
jmp
xchg
jl
jl
loopne
push
scas
xchg
xchg
push
cmp
sbb
sahf
lret
cmp
andb
cld
jnp
dec
or
jbe
imul
and
mov
pop
dec
mov
movsl
xchg
inc
jecxz
loopne
push
and
fwait
or
pop
je
inc
lock
stos
pop
sbb
xor
cltd
stc
jne
ds
inc
fprem1
testl
cmp
in
add
fsubrl
pusha
mov
std
xchg
cmp
clc
fdivl
addb
sbb
mov
push
cmp
scas
cmc
cwtl
dec
and
ljmp
loopne
fcmove
std
pushf
les
add
inc
mov
rcll
sub
pusha
and
pusha
out
test
loopne
and
nop
or
inc
jmp
pop
cmp
lods
dec
push
in
push
xchg
repz
adcb
inc
in
pushf
outsl
out
andb
sarb
shlb
and
fcmovu
mov
and
push
outsl
adc
pop
lgs
rol
cmp
adc
into
push
aaa
mov
pop
loopne
and
inc
lcall
mov
jns
push
mov
cmp
ret
push
loopne
push
add
rol
xor
push
mov
es
shlb
sbb
xchg
pop
push
push
mov
loopne
cld
jnp
fbld
and
movsl
add
out
push
andb
add
pusha
add
add
loopne
ret
ret
cmp
jns
add
mov
cmp
jg
loopne
ret
je
and
outsb
lcall
lds
push
mov
sub
outsb
push
andb
enter
and
pusha
jbe
push
movsl
add
jns
iret
int
movsl
shll
shlb
cmpsl
cmp
lret
dec
push
inc
mov
dec
push
add
pop
cmp
lods
adc
imul
andb
mov
jae
sub
or
or
sarb
adc
sub
mov
jb
lods
dec
aas
fists
and
and
inc
push
loopne
or
in
mov
mov
mov
cmpsb
mov
mov
xor
pop
scas
sub
and
pusha
xorb
add
sub
inc
mov
add
jnp
sti
dec
mov
inc
loopne
pusha
imul
mov
iret
clc
jmp
mov
xor
rcrl
cmp
dec
adc
sbb
add
shlb
or
or
les
mov
pusha
inc
add
ret
lds
and
or
mov
mov
jne
addb
or
jnp
xchg
mov
ljmp
pop
jmp
xchg
arpl
dec
std
jnp
lret
cmp
and
mov
add
pop
insl
push
fadds
add
call
cmp
xchg
fldenv
nop
push
add
pushf
int3
imull
fwait
jg
mov
adc
jle
sub
and
in
andb
sti
pop
cmp
or
sub
push
add
rolb
mov
ja
inc
pusha
loopne
mov
cli
xchg
mov
lret
adc
aaa
or
xchg
leave
inc
dec
loop
dec
pop
sub
data16
pop
ret
push
and
and
sub
rcrb
pop
sarl
rolb
or
loopne
cmp
imul
addb
inc
dec
xchg
push
das
sub
jb
mov
mov
cmp
insl
dec
lods
add
icebp
lret
inc
cmp
push
pop
mov
lds
shlb
outsb
mov
push
sti
leave
out
clc
faddp
mov
iret
jno
shl
mov
xchg
cmp
and
mov
cmp
add
inc
sbb
in
cmp
outsb
push
or
int
in
hlt
xor
push
jecxz
dec
or
add
andb
cmpsl
dec
scas
add
cmp
mov
or
loopne
call
add
mov
jo
notl
mov
push
scas
hlt
mov
loopne
or
add
addl
shlb
sbb
out
shlb
cmc
stos
mov
mov
push
xchg
incl
aad
cmp
imul
fsubrs
cwtl
iret
ljmp
rcr
sbb
add
xorl
movsl
sbb
sub
mov
and
xchg
push
push
aad
imulb
rorb
addr16
jns
xor
adc
add
jl
xor
arpl
xor
adc
push
sub
in
xor
shlb
shlb
xor
push
leave
fsubp
cmc
lahf
or
rcrb
rcrl
shl
xor
scas
inc
cmpb
push
cmpsl
jg
jae
dec
xchg
fucomi
jae
xchg
out
sar
inc
mov
mov
lcall
xlat
and
add
dec
or
adc
add
ja
test
loopne
insb
mov
inc
loopne
xchg
into
xor
data16
test
jp
call
pop
ja
cmc
dec
sbb
pop
adc
and
ret
dec
pop
push
repz
inc
adc
jg
fucompp
push
rcll
jnp
and
fs
jp
mov
aam
mov
inc
pusha
test
sub
and
shlb
pusha
pusha
ds
ss
push
cmp
das
popf
xor
nop
sub
inc
mov
ror
fs
mov
repz
lcall
xchg
shr
ss
cmp
xchg
pop
icebp
push
loopne
cmp
or
mov
mov
daa
jle
aas
scas
or
and
push
pusha
loopne
jae
cmp
mov
pop
add
cltd
sub
rorb
testl
decb
xor
xchg
scas
shlb
sub
or
xchg
shlb
push
out
xor
push
loopne
loopne
and
shl
out
xchg
daa
popa
pop
stos
add
push
pop
sti
sahf
sbb
or
xchg
jmp
rcrb
rolb
pop
inc
dec
and
and
jbe
push
ds
mov
stc
rolb
cmp
pusha
loopne
gs
mov
and
enter
addb
sbb
fcoml
aam
ja
inc
xor
sub
pusha
jge
cmp
cmp
add
leave
clc
not
loopne
xor
insl
aam
mov
jp
xchg
inc
pop
add
sarb
jge
push
dec
mov
mov
test
mov
shrl
cmp
sbb
int
mov
call
shrb
sbb
test
shlb
rcrb
imul
xchg
js
or
add
mov
xchg
push
xchg
inc
imul
ret
ljmp
cmp
stos
inc
and
mov
scas
and
cmp
push
clc
stos
and
fs
icebp
divb
or
add
mov
cwtl
insb
int3
sti
je
ficoml
add
loopne
add
bound
aaa
sbb
push
loopne
fs
cmp
int
and
int3
jle
push
scas
inc
pusha
sbb
in
rclb
inc
imul
rorb
mov
and
sbb
loopne
and
iret
jo
adc
or
or
add
mov
and
and
adc
and
xchg
mov
andb
jae
insb
shld
jl
lods
andb
pop
jb
mov
pop
xchg
fwait
jbe
add
rolb
sbbb
or
out
imul
movq
mov
je
bound
js
sbb
test
pusha
cmp
sbb
mov
shll
xorb
push
push
add
stos
cmp
push
xchg
loope
xlat
ja
and
test
int3
add
loopne
aad
lock
mov
rolb
push
and
inc
dec
xlat
dec
dec
negl
pop
inc
push
rcrl
sub
jbe
lock
push
xlat
in
nop
jg
ret
add
shlb
jmp
adc
das
lcall
test
cmp
pusha
mov
out
cmc
ljmp
fs
mov
loopne
cmp
bound
aad
lahf
lea
in
sbb
popf
lods
and
cmc
xor
or
aas
jae
andb
test
arpl
lcall
cmp
std
pop
dec
data16
push
lods
out
sbb
cmp
or
jge
jo
add
loopne
stc
dec
jo
fcomi
adc
jg
and
pusha
divl
lods
mov
popf
sahf
cmpsl
jecxz
in
jmp
cmp
mov
mov
mov
pusha
sub
jb
pop
ds
pause
mov
imul
xlat
xchg
sbb
test
andb
dec
xchg
fadds
push
ja
pop
dec
insl
and
pusha
sbb
and
push
rep
mov
ret
scas
inc
outsb
rcll
pop
cmp
insl
push
and
inc
pop
notl
scas
dec
pop
push
addb
loop
adc
fldcw
fisubrs
xor
inc
cltd
cmpsb
rolb
mov
pop
clc
popf
push
cmp
lcall
and
jno
inc
repnz
xor
stos
aam
cmp
iret
mov
rcrb
out
in
fs
pusha
xor
out
pop
add
shll
xor
dec
dec
stos
mov
loopne
and
loopne
call
pop
xor
mov
imul
and
pusha
xchg
into
adc
adcl
add
scas
enter
aaa
jge
repnz
lds
rcrb
jg
stos
xchg
cmpsb
add
and
call
repnz
lods
rolb
insl
dec
xlat
and
push
inc
cmp
pusha
and
cs
loopne
inc
pop
iret
dec
add
mov
fwait
clc
lock
jmp
jg
addb
xor
mov
cmpb
test
xchg
sbb
inc
add
inc
pop
inc
pop
cmp
jo
push
out
cld
fwait
daa
inc
lds
movsl
loope
lock
sahf
aas
repnz
in
xor
jae
add
mov
inc
sbb
movsl
add
xor
lret
push
xlat
or
add
loopne
add
pop
sub
lcall
addb
mov
sub
pushf
add
and
add
out
aad
jl
push
pop
mov
and
mov
pop
xchg
addb
pop
mov
jne
dec
add
into
hlt
push
mov
sbb
lock
sub
in
xchg
sar
mov
inc
and
mov
cwtl
mov
sti
addr16
insb
jae
xchg
std
mov
xor
in
loopne
jae
or
and
jnp
mov
sbb
push
mov
popa
rcll
xor
rorb
in
je
push
daa
push
enter
inc
sbb
add
xchg
add
rclb
inc
sub
outsb
jns
mul
test
sbb
int
and
dec
mov
adc
mov
adcl
sahf
test
mov
mov
sarl
in
div
cmp
loopne
fists
or
or
mov
cmpsl
cmc
xor
and
mov
xor
sti
je
add
mov
jmp
popa
jp
add
sbb
sar
sbb
lcall
test
loopne
dec
std
les
rorb
ret
mov
lock
rol
shl
ds
pusha
addb
pop
cmp
std
js
subl
std
mov
jbe
sub
push
add
ret
dec
shrl
fstl
pop
adc
mov
mov
mov
pusha
rcll
sub
stos
mov
jecxz
mov
mov
fidivl
call
outsb
bound
and
cwtl
loop
loope
in
pop
xor
aas
fldl
shr
push
dec
cmpsl
jl
xchg
pop
and
add
shlb
mov
leave
cmc
das
sub
in
loopne
add
dec
sub
aam
inc
adc
inc
lock
addb
cmpsl
rcrl
mov
lret
lods
inc
orb
pusha
mov
and
or
sbb
push
arpl
repnz
out
addb
jno
mov
xchg
sub
cmp
and
aaa
mov
pushf
je
mov
add
add
mov
popf
adc
add
popf
fpatan
cmp
sub
ja
mov
mov
pushl
sub
rclb
incl
add
add
dec
dec
inc
lods
inc
shrb
scas
mov
and
jecxz
cmp
addb
test
mov
andb
add
fcomps
pushf
frstor
shlb
sahf
lods
aad
cmp
cwtl
loop
jl
mov
das
sub
and
subb
sub
and
sbb
adc
shll
ljmp
mov
fistpll
inc
loopne
stos
pusha
pusha
mov
push
jno
mov
insl
pop
sub
or
pusha
pop
fisttps
out
notb
xchg
push
addr16
js
cmc
ss
jge
mov
cmp
cmpsl
dec
inc
xor
addb
inc
shrb
orb
mov
addb
or
cmpb
shlb
loopne
jge
adc
movsb
loopne
mov
add
inc
imul
mov
mov
and
adc
pop
mov
push
call
mov
inc
sti
mov
or
rcrb
lock
add
loopne
fistps
iret
inc
mov
cs
cmpb
inc
push
mov
rcll
call
hlt
inc
enter
mov
and
mov
ret
loopne
push
aad
in
add
movsl
jp
fadd
mov
mov
dec
lds
pushf
je
and
inc
and
fimuls
add
daa
adc
push
mov
pcmpeqb
and
cltd
arpl
fwait
push
mov
inc
push
pop
push
jo
push
adc
adc
mov
jb,pt
add
xor
leave
shll
loop
xor
mov
fidivl
sub
mov
fwait
push
btr
movsb
add
jp
pop
int3
push
add
stos
push
cld
sbb
dec
push
out
insl
dec
scas
inc
add
ss
mov
fnstsw
andb
push
mov
add
and
shl
stc
pop
pop
mov
and
out
add
xorb
movsb
loopne
mov
or
negb
inc
mov
mov
pop
xchg
lahf
jg
or
sarb
mov
lods
ds
ret
xor
pop
xor
add
inc
ror
pushf
mov
pushf
fildl
fdivrs
ret
shlb
inc
call
pushf
int
mov
cltd
bound
sarb
mov
stos
addb
mov
and
sbb
ret
pop
or
cmp
push
popf
mov
push
cmp
or
pusha
sarb
testl
add
sarb
adc
pop
sbb
out
xchg
xor
pop
and
out
or
sub
and
mov
xchg
insl
pop
cmpl
into
stos
into
mov
int3
fidivrs
addb
or
pusha
fisttps
fiadds
pop
adc
jle
mov
push
fisttps
add
jecxz
jb
lahf
aas
cmc
pop
mov
loopne
ja
add
push
rcrl
pusha
mov
cs
out
repnz
add
shlb
pop
lahf
pop
outsl
xor
imul
rolb
or
pop
mov
mov
mov
adc
mov
outsb
mov
outsl
sbb
jbe
add
push
pusha
and
push
push
mov
push
inc
loopne
test
mov
outsl
and
mov
lahf
int
xchg
xor
add
or
jmp
xor
jmp
ret
mov
mov
lret
mov
push
mov
xchg
adc
fwait
stos
or
das
repnz
sbb
push
mov
inc
inc
cmp
xchg
enter
mov
cmovb
or
shlb
add
imul
add
and
int
jge
test
and
add
mov
addb
test
add
add
loopne
addb
rorb
stc
inc
andb
push
jle
mov
inc
jns
clc
cmp
add
sbb
sub
pop
ljmp
inc
pusha
inc
sbb
add
push
fisttpll
imul
mov
pusha
dec
jbe
push
ja
mov
pop
mov
xor
sbb
jnp
in
lret
xchg
cmp
mov
lock
lock
andb
and
sbb
xchg
into
cs
mov
add
dec
jmp
js
inc
shlb
mov
fwait
dec
mov
shlb
cmpsb
and
addb
lret
adc
and
shlb
xchg
or
sarb
xchg
andl
and
dec
inc
int3
sahf
lahf
inc
mov
sbb
push
jg
in
adc
jne
pop
dec
or
ja
or
inc
int
pop
lock
xor
push
add
mov
pop
int
repnz
in
or
vprotw
cmp
pop
nop
jl
inc
bound
mov
add
fldt
out
clc
iret
rcrb
bound
repz
and
sub
xorb
jecxz
stc
mov
int
mov
loopne
pusha
inc
dec
repnz
or
add
cld
ret
andb
add
les
andb
xlat
xchg
jns
arpl
test
into
push
push
ja
movb
pop
sub
aaa
inc
add
pusha
shlb
js
dec
mov
mov
and
inc
sbb
imul
pop
mov
push
or
pop
outsb
cld
mov
inc
or
mov
jmp
pushf
inc
mov
adc
cmp
jbe
jg
std
dec
push
inc
xor
and
sub
add
lahf
jl
lret
mov
and
dec
pop
inc
and
and
pop
xor
loopne
jge
loopne
cs
and
add
subb
or
loopne
fiadds
addb
popf
ret
pop
jb
jle
repnz
inc
add
cli
pop
push
mov
addb
rcl
add
pusha
jmp
or
pusha
push
or
mov
mov
jmp
lods
fdivrp
push
mov
iret
xor
shlb
lcall
into
cmp
pusha
rclb
xor
sbb
push
shl
inc
rol
and
es
add
jae
mov
inc
dec
fsubrs
pop
push
movsb
and
ds
mov
and
mov
inc
jb
push
fistps
pop
bnd
das
inc
xor
jae
adc
andb
mov
mov
sarl
je
mov
fdiv
sbb
dec
int3
fidivs
and
lret
aaa
push
test
add
sub
orb
negl
xchg
leave
ret
lret
or
rolb
jp
enter
jg
ret
add
stc
jecxz
cmp
loopne
sub
in
aam
sub
fistpll
lea
add
add
leave
cs
loopne
add
mov
loopne
cltd
pop
ds
dec
pop
mov
add
fimuls
jg
sbb
outsb
or
jbe
xchg
sub
loopne
stc
cmpsb
mov
ss
sbb
cmp
les
stos
pusha
add
daa
dec
ja
pop
clc
paddusb
mov
test
mov
loopne
ds
inc
rcrb
xor
popf
xlat
fstl
cmp
inc
mov
xchg
jb
call
push
daa
outsl
jge
outsb
stos
and
xchg
dec
cmp
daa
sbb
les
push
lret
xor
mov
mov
sbb
and
bnd
imul
push
inc
add
xchg
leave
std
vpmulld
loopne
fimull
cmpsb
loopne
inc
inc
cmp
cld
mov
mov
clc
push
add
fistpl
xor
mov
or
add
loop
pop
jecxz
pusha
loopne
jo
sar
in
push
imul
ds
addb
inc
mov
xorb
add
cld
dec
cmpsb
rolb
out
mul
cli
cld
insb
ret
popf
inc
test
rolb
pop
or
imul
das
add
add
jnp
scas
andb
mov
cmc
loopne
mov
lds
test
loopne
xor
mov
mov
js
mov
inc
inc
mov
rcrb
pop
jp
and
mov
push
dec
sbb
dec
inc
sub
call
loopne
push
mov
dec
cmp
lds
mov
in
shr
or
add
lods
add
out
inc
push
push
insl
addb
negl
push
iret
sub
and
pusha
sbb
mov
mov
adc
inc
ss
xchg
xlat
andl
rcr
imul
push
addr16
rolb
jae
xchg
sbb
xor
pop
cmp
testb
xorb
andb
lret
insb
ja
clc
push
cmp
mov
jmp
add
cwtl
adc
lret
and
add
add
jne
test
inc
sbb
jp
sbb
xchg
fmuls
jne
outsl
insb
hlt
aam
aas
mov
pusha
leave
and
rep
xchg
mov
pop
mov
and
fnstsw
fiadds
lea
xor
movsb
inc
shlb
jmp
mov
inc
mov
pusha
xorb
inc
and
pushl
jno
test
pusha
addr16
out
lret
jno
push
xor
xchg
cld
mov
sti
sbb
inc
inc
add
subb
or
shl
and
subb
loopne
dec
sbb
mov
jg
mov
add
push
pusha
add
inc
mov
test
sar
test
adcb
and
mov
clc
ljmp
pop
xchg
mov
mov
dec
sbb
mov
rolb
and
pop
push
mov
add
or
std
or
loopne
ret
pop
xchg
ret
pusha
add
inc
sbbb
divl
jg
sub
mov
movsl
push
dec
xor
add
or
add
or
cli
aam
add
icebp
adc
xchg
dec
push
rolb
bound
mov
outsb
shrl
dec
das
push
fsubl
and
pusha
data16
cmp
pop
adc
dec
fs
cmc
push
mov
nop
add
repz
push
stc
fnstenv
mov
sub
orb
cld
hlt
sbb
stos
pusha
xorb
mov
mov
mov
pusha
and
xor
xor
pusha
rolb
test
add
pusha
mov
ds
leave
pop
out
leave
sbb
jle
inc
pusha
iret
jnp
imulb
jg
mov
shl
mov
push
movsl
pop
sahf
es
imul
add
sub
ljmp
xchg
outsl
inc
repz
leave
mov
adc
mov
push
pop
cmpsb
and
andb
rolb
jne
jns
sub
xor
xor
adc
jb
xor
rclb
sbb
jo
ret
adcb
push
sbb
cmp
mov
mov
inc
icebp
cmp
or
push
add
pushf
pushf
adc
lret
inc
pop
data16
xlat
mov
pop
sub
std
pusha
xchg
jne
add
loopne
inc
push
inc
leave
mov
rorb
les
jbe
fistps
jbe
add
in
sbb
and
popf
pushw
dec
test
pop
inc
pop
mov
xlat
mov
mov
loopne
ds
dec
test
lods
addb
mov
jo
xor
pop
or
lea
mov
shlb
mov
pop
pop
pop
sarl
or
pusha
movsb
mov
mov
in
rorl
jl
push
dec
ljmp
jae
dec
xor
pusha
inc
jle
add
loopne
adc
mov
xchg
sbb
loopne
repnz
jge
xchg
or
imul
or
mov
xchg
lods
add
and
push
add
ret
mov
mov
dec
and
and
mov
loopne
movsl
mov
iret
repnz
lahf
popf
test
andb
ret
mov
insb
add
sbb
pop
xchg
sti
dec
out
add
and
and
adc
mov
pop
fisttpl
and
pop
dec
sbb
and
mov
shlb
int
pop
adc
dec
insb
inc
inc
cld
ljmp
jmp
adc
inc
cmp
lahf
xchg
sub
out
sahf
scas
lods
pusha
shlb
mov
inc
mov
add
out
sahf
dec
inc
in
fnstenv
push
pusha
inc
and
cmp
loopne
mov
mov
and
ret
jns
and
rorb
inc
inc
out
xchg
fisubl
arpl
enter
cld
out
push
sbb
xchg
jns
addb
loopne
mov
push
lock
ret
jne
sub
ss
jge
test
mov
or
mov
mov
xor
sub
mov
lods
push
mov
test
jge
push
xchg
and
shlb
sar
xor
cli
lds
shl
inc
push
subl
xor
ss
xor
dec
and
loopne
push
out
add
nop/reserved
lds
mov
lret
pusha
loopne
pop
pusha
mov
or
std
pop
enter
loopne
shl
xchg
es
lcall
xor
lods
loopne
shlb
stos
and
and
xorb
mov
subb
xchg
dec
pop
repnz
dec
int
fisubrs
mov
add
stos
add
imul
xor
dec
lods
inc
loopne
lret
xchg
lret
mov
mov
push
fwait
sbb
add
push
add
lds
and
push
sbb
pop
negl
addb
fnstcw
sti
pop
movsb
shlb
aam
sbb
repz
mov
mov
inc
dec
int
ss
jp
mov
imul
in
push
add
sbbb
cwtl
pop
and
mov
adc
add
shlb
aam
in
mov
ror
pusha
data16
push
pushf
ret
or
mov
aas
pmulhuw
jge
adc
xchg
roll
mov
enter
adc
sti
mov
jb
repz
pop
pop
add
pusha
mov
mov
mov
adc
ljmp
addb
jmp
and
nop
push
pushf
sbb
adcb
rolb
stos
mov
mov
ja
movsb
inc
mov
xchg
sub
adc
and
inc
lret
lds
and
test
dec
jmp
stos
inc
mov
lcall
inc
cmpsl
sub
mov
sti
mov
and
and
leave
psrlw
push
and
sbb
jle
andb
xchg
cmp
scas
mov
and
icebp
mov
je
add
rcrb
or
daa
shrb
stos
mov
cld
stos
inc
loopne
icebp
xlat
sbb
lods
mov
xor
mov
std
xchg
lret
dec
ds
daa
dec
ss
mov
clc
rolb
jnp
lahf
gs
dec
xchg
daa
sub
inc
mov
mov
shll
mov
and
push
push
pusha
and
faddl
add
sub
ret
push
shlb
push
jge
fnstsw
sub
mov
iret
mov
out
shr
cli
or
and
dec
sub
xchg
lds
lods
mov
add
sbb
and
mov
xor
rolb
shlb
inc
loopne
pusha
adc
xchg
xchg
imul
insb
cmc
add
xchg
sub
andb
rorl
and
fucomip
mov
jl
mov
sbb
data16
lock
inc
sbb
pop
or
dec
or
xchg
cmp
mov
adc
push
cmc
jnp
std
rclb
shlb
mov
rolb
rcrb
sbb
std
jmp
or
and
cmpsl
sarl
or
add
leave
mov
pop
add
mov
add
call
mov
and
popa
in
sub
sbbb
inc
pop
fidivrl
mov
movsl
or
and
loopne
addb
add
cmpsb
and
out
jbe
push
add
fisttps
jecxz
sub
lea
idiv
cmp
imulb
lock
cmpsl
loopne
loopne
fimull
andb
xchg
jae
fcoml
dec
xor
lea
dec
jnp
mov
imul
loopne
inc
inc
int
xchg
stos
cmp
xchg
cmp
sub
insb
xchg
inc
cmp
je
dec
cs
cmc
mov
pop
cwtl
lret
jnp
mov
push
call
stos
loopne
mov
or
xchg
mov
repnz
addb
jno
inc
das
sub
mov
mov
pusha
inc
arpl
andb
ds
loopne
xor
out
testl
rorb
in
lahf
je
mov
cwtl
push
jbe
mov
jae
loopne
out
sahf
xor
cmpsb
loopne
mov
andb
leave
rcrb
scas
movsb
pusha
inc
mov
sbb
inc
mov
sbb
or
mov
and
imul
push
push
fs
push
int
fsubp
push
and
sahf
dec
adc
jno
and
loopne
int
addb
inc
mov
pusha
rol
cmc
jecxz
shlb
sub
dec
ja
mov
inc
jle
xor
test
addr16
push
push
pop
imulb
aam
mov
xor
rol
gs
test
xor
dec
mov
adc
mov
and
testl
mov
push
les
mov
std
test
loopne
pusha
add
inc
lock
icebp
add
and
out
out
in
int
aas
cli
lods
mov
inc
mov
mov
pop
outsb
mov
cmp
xchg
add
testl
lahf
jle
lret
sbb
das
sub
xor
rcrb
jge
imul
data16
pop
pop
shl
pop
jmp
addb
mov
and
adc
insl
xchg
mov
jge
andb
jns
pop
mov
inc
mov
and
sbb
mov
and
mov
push
out
ljmp
mov
dec
int
stos
and
scas
add
rcrb
inc
adc
aam
jb
nop
jne
or
ds
cmp
inc
lods
fs
outsl
mov
andb
or
js
and
loopne
test
dec
popa
negb
adcl
dec
fiadds
sub
imul
pushf
idivl
shl
mov
inc
xor
fstpt
add
adc
and
inc
jge
adc
inc
and
cmpsl
mov
cmpsb
loopne
xchg
mov
subl
loopne
loopne
inc
pop
aad
sbb
loopne
push
pusha
adc
mov
addb
xor
pop
jae
or
and
mov
xchg
mov
pop
mov
add
add
add
pop
fisubrs
dec
addr16
das
jb
rcll
add
cmpsb
loopne
lret
lret
addr16
sbb
jp
pop
inc
jge
jl
fiadds
fisttpl
adc
and
sub
cmpb
push
mov
loope
inc
push
push
ja
scas
lahf
inc
add
pusha
cmp
leave
jle
add
pop
mov
sub
inc
fnstcw
push
mov
or
and
mov
fwait
mov
push
and
loopne
or
scas
cmpsb
pusha
pusha
std
lahf
in
sub
ds
sbb
sbb
popa
xchg
adc
pusha
fs
pusha
add
loopne
mov
lods
int3
dec
fucom
movsl
mov
cs
pusha
popf
mov
and
mov
sub
push
sbb
push
loopne
mov
loope
cmp
xor
or
add
and
pusha
and
jp
dec
sub
cwtl
lahf
in
lret
mov
roll
popf
sbb
shr
call
pop
cmp
movsl
sbb
jmp
neg
pop
leave
dec
or
sbb
call
and
repnz
mov
push
push
inc
xorb
push
loopne
outsl
and
xchg
mov
in
test
inc
imul
mov
pusha
loopne
mov
shlb
loopne
fcomip
popa
mov
push
inc
add
add
jb
inc
shlb
mov
or
lcall
xor
xor
and
loope
movsb
add
loopne
loopne
sub
icebp
sub
loopne
sbb
ljmp
push
inc
in
out
xchg
cmp
loope
inc
stc
or
xchg
fcompl
inc
aaa
daa
adc
push
inc
and
cltd
mov
test
pusha
loop
loopne
repz
bound
notb
or
jne
imul
xorl
shlb
mov
jmp
add
xor
lds
pop
insb
pop
mov
pusha
push
jp
mov
aas
nop
xor
inc
pusha
movb
add
push
pop
and
insb
lret
andb
das
mov
shlb
fldenv
mov
mov
imul
xlat
xlat
addb
add
sbb
fists
mov
shlb
mov
loopne
mov
faddl
roll
sahf
mov
inc
inc
sbb
int3
fld
pop
pop
and
push
mov
inc
lods
loopne
jge
iret
xchg
sub
pusha
mov
mov
cmpsb
mov
imul
mov
minps
xchg
xor
mov
sbb
mov
mov
andb
lahf
aam
and
sbb
or
mov
out
fcmovbe
cmpsb
and
xor
shrl
repnz
push
fdivr
lea
mov
and
add
aas
icebp
out
jmp
fbstp
jg
ds
movzbl
andb
adc
pop
test
and
pop
inc
lcall
mov
push
fcoms
out
lea
inc
mov
loopne
ds
je
icebp
imul
push
in
mov
pop
aad
cs
nop
mov
rolb
in
in
add
andb
popf
mov
pusha
ljmp
and
loopne
push
pushf
cmc
dec
xchg
sub
xchg
and
jmp
rol
insl
into
movsb
and
popf
and
out
mov
mov
pop
pop
inc
pop
lcall
insl
fcompl
mov
inc
and
add
cwtl
in
mov
and
addb
stos
pop
nop
bound
lock
adc
dec
aad
sub
add
add
add
aas
xor
in
xor
xchg
xor
call
insl
insb
add
aas
sub
rcrb
mov
sahf
cli
mov
push
lds
xor
jp
pop
pop
pop
repnz
sub
clc
int3
enter
dec
fwait
lods
xor
mov
fnsave
jbe
inc
inc
adc
fisttpll
xchg
into
pop
stos
loopne
push
add
jns
rolb
loopne
ret
lret
pop
adc
adc
lcall
jo
popl
push
fucomip
mov
lcall
and
je
jge
ret
add
jo
addr16
cmp
xchg
lret
stos
sarb
js
cmp
daa
push
and
push
push
and
pusha
popf
in
mov
and
ret
mov
mov
fdiv
out
pop
jb
add
sbb
ret
or
bound
cwtl
call
loopne
mov
pop
shrl
or
pusha
out
shr
xor
mov
cmpsl
lods
addb
or
inc
xor
adc
movsl
sub
aas
adc
scas
push
and
loopne
out
shlb
cmp
push
loopne
mov
gs
mov
lahf
inc
adc
dec
or
decl
cmp
out
mov
cltd
or
mov
add
push
mov
cwtl
xchg
mov
sub
inc
hlt
sbb
aas
mov
add
inc
sti
and
lods
addb
or
mov
or
xchg
imul
push
jns
lret
push
lcall
test
pusha
repz
add
jb
rolb
cmp
fildll
inc
pop
pushl
shlb
pop
and
inc
imul
addr16
pop
sub
xor
aas
xchg
add
lret
and
dec
xchg
stos
inc
sbb
pusha
adc
lods
mov
ret
mov
xor
cwtl
mov
pop
rcrl
jle
fisttpl
into
xlat
and
ss
mov
sbbb
push
inc
inc
stos
inc
pusha
mov
sbb
push
dec
push
mov
push
cmpl
mov
fiaddl
pusha
mov
popf
pop
xlat
add
insl
andb
or
std
cltd
push
jl
cld
xor
scas
pop
cmp
mov
xor
aas
dec
ret
sbb
adcb
push
sub
pusha
mov
fidivrl
loopne
cmp
sub
push
jg
push
inc
stc
xor
add
mov
mov
mov
loopne
outsb
xor
push
andb
add
push
loopne
or
lods
loopne
mov
xchg
iret
and
pop
mov
rol
inc
js
add
inc
loopne
gs
loope
fwait
mov
xchg
popf
jns
inc
mov
hlt
cmp
popa
inc
xor
mov
in
dec
insb
cld
aad
int3
dec
out
jnp
jae
mov
sbbb
push
addr16
add
or
shlb
push
or
inc
rorb
rclb
and
adc
mov
cltd
and
ja
mull
and
cwtl
out
pop
xchg
ds
mov
xlat
mov
add
cli
push
sub
push
ret
iret
sahf
sbb
int
mov
movsb
mov
pushf
xor
aad
sar
jl
lret
orl
pusha
cmp
or
shlb
mov
mov
dec
aam
push
test
addb
lock
pop
in
daa
cli
mov
inc
push
pop
fiaddl
and
pusha
lret
sahf
ret
loopne
movsl
dec
sub
and
cmp
imul
mov
loopne
cmp
insb
sub
shrb
loopne
pop
lea
pop
mov
jmp
pusha
pop
xchg
hlt
imul
push
jge
jo
gs
je
pusha
mov
fs
sbb
add
inc
adc
add
aaa
mov
adc
mov
jmp
sbb
and
int
js
xlat
jp
loope
iret
pop
xor
xor
sub
or
push
out
pusha
loopne
outsb
xlat
jg
xchg
enter
andl
jbe
inc
pusha
pop
leave
pop
and
pusha
imul
lret
and
pusha
imul
inc
mov
mov
pop
testl
shlb
dec
pop
mov
mov
dec
and
bound
dec
cmp
or
pop
xchg
jbe
call
pop
cmp
out
mov
and
shll
pushf
das
jl
jns
pusha
add
adc
outsb
mov
pusha
inc
es
bound
mov
and
sahf
sbb
mov
mov
jp
ret
push
je
push
in
lea
pusha
loopne
aad
add
add
xor
adcl
mov
subb
in
pop
jg
cwtl
in
pop
inc
fistl
sarl
scas
stc
pop
or
test
imul
icebp
mov
or
jno
fs
or
inc
out
jnp
js
pop
loope
or
jns
xor
pusha
inc
push
adc
in
repnz
movb
ja
sarb
imul
fucomi
cmp
scas
mov
rolb
mov
xchg
and
orb
loopne
gs
aad
js
adc
addr16
dec
leave
push
daa
mov
jnp
rolb
pusha
outsb
sub
and
loopne
outsb
and
testb
mov
add
cmp
push
js
and
xor
scas
mov
loopne
adc
jo
iret
add
xchg
dec
dec
xchg
inc
pop
pop
cmp
cmp
and
movsl
cmpsb
and
xchg
add
jle
movsl
mov
sub
add
xor
dec
dec
scas
cld
pushf
and
add
add
pop
int
jnp
add
pop
add
add
or
and
clc
call
lret
and
stos
jne
andb
add
iret
xchg
mov
loopne
inc
in
fdivrl
rcrl
mov
test
or
sbb
sbb
movb
jo
dec
push
outsl
or
sub
sbb
mov
fdivl
dec
mov
scas
rolb
and
pop
pop
xor
subl
icebp
rolb
jmp
imul
call
mov
add
lret
dec
inc
stc
dec
push
inc
rolb
ja
pop
push
aas
sbb
lret
and
decl
rolb
loopne
mov
xchg
data16
push
loopne
lds
push
sbb
insb
fs
rol
popa
cmp
xchg
scas
pusha
inc
test
rorb
subb
loopne
mov
add
fildl
sbb
shrl
outsl
inc
push
or
rclb
out
push
hlt
aad
insb
out
lods
loopne
xor
ja
pushf
xchg
pop
pop
inc
mov
adc
mov
mov
lock
push
and
outsl
push
pusha
inc
movsl
andb
mov
mov
ret
lret
jmp
pusha
pusha
sbb
adc
push
addl
jnp
add
pop
in
jl
fisttpl
ja
mov
push
pusha
and
fs
jmp
or
add
sbbl
idivb
cmp
aad
mov
pusha
mov
inc
leave
idivl
ds
das
add
pusha
movsb
addb
imul
pushf
out
jnp
push
rolb
pusha
loopne
sbb
or
data16
fisubrs
adc
ja
shll
andb
ds
adc
lods
add
and
inc
out
sahf
data16
inc
outsl
pop
ja
sub
pop
nop
icebp
push
out
les
adc
and
add
mov
mov
cmp
mov
sbb
in
adc
lds
andb
xor
rol
lcall
lret
fld
lahf
movsl
mov
mov
xor
fstpl
maxps
mov
and
fsubrs
inc
fdivr
sub
ds
popa
mov
jns
test
push
inc
subb
xchg
inc
sti
mov
mov
rcrb
xor
lods
loopne
out
lods
xor
and
and
ds
sbb
je
pushf
xor
ret
loopne
gs
arpl
cltd
insb
call
push
dec
jo
roll
out
mov
inc
mov
pop
push
mov
rclb
cmpsl
jno
sbb
mov
loopne
cmpsb
rol
xor
daa
dec
in
cwtl
es
and
add
js
xchg
and
dec
repz
dec
and
addb
nop
and
inc
popa
lods
dec
sub
xchg
fsts
sub
pop
sub
xorb
pop
jecxz
pop
sbb
add
mov
push
inc
ret
pusha
inc
xchg
pusha
xchg
dec
xchg
push
jle
lret
xor
fistpll
fwait
sti
push
mov
scas
addb
mov
mov
inc
sbb
je
cmp
cwtl
idivb
inc
loopne
cmc
cld
add
dec
pushf
cmp
and
mov
shl
fidivrl
mov
loopne
mov
jmp
dec
push
xor
nop
lret
orb
mov
and
movsl
add
inc
adc
add
loopne
sbbl
setg
or
dec
mov
bound
fwait
add
aaa
out
xchg
aam
dec
sbb
pop
xorl
adc
add
pusha
rcl
daa
popa
out
and
inc
lods
xor
aas
add
insb
lock
jo
andb
test
rcrb
pusha
and
xor
fst
aad
dec
dec
mov
shl
pushf
xor
cmp
mov
lahf
or
and
xchg
mov
lock
mov
in
out
insl
pushf
dec
add
daa
cld
lods
add
imul
add
andl
adc
push
mov
and
sarb
mov
push
xchg
jmp
jns
dec
adc
dec
jle
les
xchg
orl
dec
sub
jns
test
rcrb
std
pop
int
gs
push
and
paddsw
call
dec
subl
inc
shlb
xor
xchg
xlat
aad
pop
sbb
mov
cwtl
aad
or
inc
push
mov
sbb
shl
dec
inc
loope
cli
ret
shlb
mov
dec
inc
xchg
in
and
fwait
push
lahf
sbb
add
outsb
cmp
loop
lret
add
popf
inc
es
pusha
rorb
push
ja
cmpsb
pusha
addb
daa
popf
xchg
out
mov
hlt
push
xor
sbb
mov
or
jmp
sbb
add
ja
or
xchg
jge
dec
shl
into
pop
imul
add
dec
mov
je
dec
mov
inc
repnz
sbb
or
add
sbb
mov
add
xchg
rcr
jl
shl
xchg
in
lret
jp
xor
movsb
addb
adc
adc
loopne
shl
insl
cli
rclb
loop
xadd
repnz
and
add
loopne
pop
xor
sarl
dec
sub
mov
add
mov
test
int3
cmp
rolb
jecxz
pop
add
xchg
sub
loopne
ljmp
or
push
iret
mov
orb
data16
pop
xorl
mov
sar
push
scas
mov
shlb
fcmovu
push
cmp
cs
fisubl
dec
loopne
aas
int3
andb
mov
add
imul
sbb
shlb
xchg
mov
add
fwait
outsb
mov
inc
dec
dec
ror
mov
popf
sub
pusha
push
andb
pusha
mov
leave
push
add
mov
outsl
out
push
adc
shll
loopne
xor
mov
sar
fstpt
push
inc
pop
cmp
inc
add
dec
push
test
add
cmpl
and
add
mov
mov
xchg
fsub
in
insl
out
incl
lahf
fimuls
cmpsb
pusha
loopne
add
rcrb
jmp
pusha
mov
mov
scas
inc
and
outsl
bound
addb
mov
and
inc
popa
loope
inc
out
pop
mov
fbld
mov
or
loopne
ret
test
fwait
testl
and
push
hlt
add
ljmp
jle
mov
mul
sbb
mov
add
dec
jp
mov
adc
add
aam
xor
scas
vmread
enter
cmc
push
and
mov
andb
aam
inc
lahf
add
pusha
sahf
gs
and
pop
cltd
or
lahf
pop
push
lods
inc
pusha
pop
aas
push
push
mov
mov
dec
jne
inc
and
ror
and
cmc
pop
jbe
cmpsb
and
jo
inc
mov
fnstenv
mov
mov
add
in
fistpll
out
lahf
jo
xor
xchg
dec
sti
inc
in
xchg
push
test
loopne
enter
rcrb
sti
imul
inc
loopne
sahf
add
jno
push
and
insb
out
xchg
jbe
pusha
add
jb
rolb
and
xchg
inc
ljmp
inc
fs
pop
push
nop
jmp
mov
inc
xor
call
jge
and
jae
pop
push
sbb
out
mov
repnz
pusha
or
into
loop
enter
pop
inc
and
inc
sub
mov
jae
xor
pop
add
sbb
or
xchg
mov
clc
inc
ficoml
pop
push
mov
loopne
addb
pusha
daa
inc
mov
inc
cmpsl
jg
or
jge
xchg
xor
mov
mov
js
sbb
ret
pop
mov
les
adc
shll
enter
dec
test
pusha
mov
loopne
out
out
jge,pt
loopne
adc
addb
addb
insb
data16
addr16
das
push
shl
and
rcl
xor
jle
xor
push
push
in
sti
int
push
jb
jno
fisttpll
xor
and
fdivrl
pop
bnd
cltd
int3
hlt
cmp
ret
pop
dec
and
out
addb
xor
and
cli
aas
stos
cmp
pop
add
loopne
add
jmp
rolb
push
andb
out
shlb
mov
clc
cmpsl
pop
sbb
mov
add
inc
cmp
adc
mov
loopne
push
lods
mov
sub
loopne
push
lret
ret
jno
imul
ret
out
cwtl
push
cld
xchg
ja
in
stos
push
popa
inc
xlat
fstps
test
test
add
idivl
pusha
pusha
push
add
addb
mov
dec
loopne,pn
xor
loopne
enter
mov
loopne
mov
pop
sbb
repnz
pop
dec
xor
mov
mov
mov
shlb
ja
int
enter
rolb
imul
jle
in
filds
pop
sbb
add
call
cmp
aas
popa
dec
inc
cmc
cli
ret
cmp
negb
loopne
fildl
xor
cmp
mov
add
leave
or
pop
push
mov
and
loope
aam
inc
push
popl
add
jno
jle
sub
enter
iret
pop
sub
pop
rcll
inc
cmp
loopne
cmp
loopne
pop
cmp
mov
push
fldpi
testl
mov
mov
push
xor
add
gs
movsb
loopne
or
mov
test
jns
rcll
add
mov
inc
sub
xchg
in
adc
scas
inc
jmp
pop
inc
mov
loop
mov
pop
cltd
or
out
fidivrl
mov
adc
sarb
mov
add
xchg
ja
outsl
ret
mov
pop
addr16
clc
sub
inc
sbb
jp
fists
inc
sbbb
and
inc
das
push
lock
push
and
cmpsb
shlb
in
cmc
inc
movsl
mov
shl
inc
cmp
aad
cli
adc
jb
add
sahf
ja
pop
ljmp
negb
pop
mov
and
ret
loopne
rcrb
lds
enter
add
sub
scas
pusha
loopne
addr16
dec
lret
pushf
or
rolb
into
dec
add
loopne
pusha
inc
sbb
shlb
loopne
imull
add
test
and
ljmp
sti
fcomp
cltd
shr
je
shlb
add
cwtl
ja
mov
xchg
fsubs
mov
movb
add
pusha
sbb
addr16
push
stos
movsl
push
ret
shlb
rorb
push
aaa
and
loopne
add
and
pusha
enter
cld
