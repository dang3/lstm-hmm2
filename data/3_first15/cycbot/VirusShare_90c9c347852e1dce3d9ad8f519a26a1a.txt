fildl
loop
fs
push
xor
cwtl
fstl
sar
add
xchg
push
fs
nop
ret
cli
repnz
push
or
int3
sahf
mov
xchg
pusha
add
jne
das
rolb
sub
pop
or
and
jbe
pop
imul
ret
dec
cltd
sbb
or
cwtl
cld
pusha
add
or
notl
mov
out
sbb
xchg
mov
mov
cltd
sub
mov
sbb
mov
fimuls
sbb
sbb
es
daa
pusha
add
ss
sbb
addr16
adc
mov
add
dec
add
test
lahf
and
or
movd
inc
add
add
xchg
dec
pusha
add
stos
aam
mov
inc
dec
lea
xchg
add
cs
gs
out
sub
add
mov
pop
out
mov
xchg
add
addb
sti
mov
dec
or
fucomip
inc
repnz
mov
dec
mov
xor
push
add
fs
sti
mov
xchg
xor
loopne
push
jmp
in
arpl
cltd
or
rolb
add
inc
dec
pop
test
repz
xor
and
mov
addb
shr
lret
mov
push
xchg
fnstsw
and
mov
mov
and
adc
leave
ret
in
cmp
sbbl
pop
xor
scas
inc
mov
mov
push
je
jecxz
xchg
push
or
cli
std
dec
and
dec
adc
mov
daa
mov
jmp
data16
in
movb
push
lret
pop
pop
popf
ja
imul
and
das
fimull
pop
sbb
addb
fstps
xor
jo
fwait
or
cmp
sar
add
lock
clc
test
pop
aad
jne
push
sub
addb
xor
data16
add
das
jnp
mov
add
jmp
jmp
fsubs
adc
add
adc
mov
xchg
outsb
addr16
pop
sub
cmp
mov
pop
jo
sub
sbb
add
add
inc
cmp
jp
jg
dec
es
dec
xor
les
jg
and
sub
push
push
lds
cwtl
xchg
push
pop
push
cmpsb
nop
sub
jge
into
lret
push
adc
inc
inc
int
incb
push
outsb
leave
gs
add
adc
and
inc
add
call
pop
hlt
test
add
cmpl
rcrl
push
add
stos
test
sbb
addb
add
and
add
cmp
call
sub
rorl
icebp
iret
fsubr
jnp
or
mov
adc
loop
cmp
aas
sbb
cmc
inc
add
add
and
cmp
sbb
cmp
les
xchg
mov
push
cmp
dec
rolb
mov
test
sub
scas
shll
adc
adc
int3
enter
std
pushw
add
push
jo
pop
jne
adc
xchg
imul
pop
test
add
inc
add
enter
outsb
repz
mov
xchg
in
stos
sbb
jp
push
add
add
mov
dec
mov
and
inc
add
xor
or
add
jns
sub
ret
notb
and
sub
pop
jo
out
std
jnp
add
daa
ljmp
les
mov
mov
call
jecxz
out
scas
jg
or
sahf
jg
test
mov
mov
into
dec
out
mov
test
mov
push
sbb
mov
add
add
shrl
xor
cmp
mov
jnp
std
repz
addb
popa
xor
addr16
addr16
add
loop
lret
add
pusha
add
inc
add
inc
outsl
stos
sti
insb
add
mov
shr
mov
add
sbb
add
fstp
jge
pusha
add
add
sbb
mov
push
cli
jbe
or
dec
mov
pop
pushf
or
popa
sbb
ficoms
adc
adc
cmp
mov
pop
shlb
lods
jo
add
lcall
add
and
push
jp
add
pop
sti
fnstsw
push
sub
pop
and
pop
ds
mov
jl
pop
pop
movsl
inc
add
in
cwtl
cs
add
xchg
or
xor
add
adc
daa
aas
loop
pusha
add
add
adc
cmp
cmp
ret
sbb
pop
dec
push
add
or
scas
add
out
mov
and
aas
in
push
dec
mov
aas
in
aam
testb
nop
mov
pop
imul
ret
negb
out
stos
push
xchg
ret
pop
dec
mov
add
and
mov
mov
out
xchg
in
mov
inc
mov
rcl
movsl
xor
cs
hlt
js
fnclex
pop
pop
mov
movsl
pop
repnz
xchg
xor
xchg
or
and
pop
xchg
imul
shlb
stc
inc
jns
cmp
shrb
fsubs
stos
sahf
push
mov
mov
js
xchg
leave
pop
dec
push
sbb
pop
inc
dec
xchg
loope
sahf
lods
and
add
mov
adc
dec
cmp
repnz
std
stos
jle
fiadds
fcoms
adc
jle
je
dec
nop
cmp
in
push
dec
es
roll
jecxz
dec
out
hlt
adcl
add
adc
mov
rorl
cmovs
lds
rorb
and
call
and
cmp
sar
aas
cmp
ljmp
insb
sbb
pop
in
cmp
cwtl
inc
fwait
mov
rolb
pop
popf
or
clc
adc
inc
add
pop
adc
xchg
mov
cmp
sahf
cmp
mov
int3
xor
loop
and
xchg
push
stc
add
inc
add
das
xor
push
out
sub
add
xor
push
add
scas
sarb
xor
push
mov
negl
aas
pushl
pop
repz
xchg
jg
aam
das
jnp
cli
mov
bound
popa
jge
inc
or
test
mov
popa
cmp
push
inc
add
mov
clc
popf
xchg
rcll
aam
cs
in
jmp
pop
hlt
mov
movb
es
sub
loop
xor
xchg
dec
mov
xlat
addb
insb
out
add
mov
fiadds
out
flds
out
or
and
les
push
push
clc
xchg
sti
push
loop
daa
inc
sbbl
or
icebp
mov
test
imul
out
pop
cmpsl
hlt
aam
or
inc
add
push
pop
xor
addb
jle
nop
sub
not
ja
or
das
sbb
mov
int
jo
lahf
dec
dec
mov
in
sbb
stos
lret
scas
js
or
adc
das
and
sbb
and
cmpsb
xor
add
fdivs
xchg
add
pop
xor
ret
push
gs
fsubl
sbb
add
sbb
rcrl
bndldx
or
xchg
push
add
push
repnz
push
mov
inc
jg
inc
frstpm(287
mov
out
cwtl
mov
xchg
mov
cmp
pushf
in
add
rcrb
test
mov
push
add
xchg
and
sbb
mov
out
int3
imul
and
cmp
inc
mov
mov
insl
mov
sbb
inc
add
loope
and
mov
jo
jo
add
adc
xor
push
lcall
insb
popa
inc
add
add
fnsave
sub
mov
in
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
pop
sub
mov
cs
push
push
lret
jmp
add
add
scas
stos
dec
xor
add
add
pop
add
shrl
add
cmp
jle
add
imul
loopne
lods
or
es
add
add
xor
adc
dec
movsb
push
push
insl
push
fwait
pop
aas
bnd
movb
mov
push
pop
xor
loopne
lcall
fadd
addb
stos
gs
addr16
lods
add
daa
jl
pusha
add
sbb
mov
mov
or
fwait
cmp
and
push
dec
sti
xchg
imul
bound
mov
push
add
mov
push
cmp
es
jle
cmpsl
inc
add
clc
xor
cmp
mov
add
xor
jbe
jo
mov
in
xchg
pop
adc
pop
aam
cmpsl
sbb
cwtl
into
or
cld
jno
adc
jno
jle
mov
pop
mov
out
add
lock
pop
jbe
add
inc
pop
jno
mov
das
pop
pop
mov
shl
xchg
pushf
addb
sbb
int
xchg
scas
push
jmp
push
sbb
push
inc
nop
jbe
add
sbb
jb
scas
sahf
iret
shl
pop
outsb
ljmp
add
push
mov
add
sub
push
add
push
pop
sarl
dec
jl
lds
adc
bound
jl
gs
jbe
sbb
ljmp
add
or
cli
leave
pusha
add
inc
cmpsl
insb
or
out
sbb
xor
loopne
das
lods
add
aam
mov
pop
jne
rorl
fcmovnb
mov
test
xchg
lea
out
jae
jo
push
jmp
lock
pop
mov
scas
out
jae
inc
add
xor
inc
add
shr
xchg
inc
pop
add
add
imul
hlt
mov
dec
mov
loopne
or
cmp
fs
arpl
mov
cmp
test
dec
or
sbb
or
mov
adc
push
dec
inc
add
xchg
and
sub
xor
sbb
and
jp
stos
jo
add
or
aas
enter
pop
dec
xor
loope
rol
add
movb
je
mov
das
push
mov
adc
sbb
xchg
push
xchg
stos
lret
ficompl
loopne
bound
jp
mov
pop
in
mov
add
scas
pop
jp
dec
aas
cmc
mov
jnp
add
pop
sbb
sbb
pop
xchg
std
jnp
cmp
daa
scas
push
mov
insl
mov
aam
push
cmp
std
push
cmp
push
popa
enter
sbb
cmc
cmp
imul
out
add
fstl
es
iret
fildl
movsb
jnp
rolb
inc
add
lock
test
or
inc
add
test
push
jp
into
fldt
in
mov
sub
test
push
mov
push
jge
repnz
xor
push
sub
pop
inc
popf
mov
shlb
add
adc
ret
outsl
dec
pusha
add
push
xor
rcll
add
popa
xlat
jo
mov
mov
inc
add
add
xchg
loope
xchg
inc
add
xor
das
int3
mov
mov
mov
adc
ljmp
ljmp
or
mov
cld
and
jns
pop
mov
push
cmc
aas
push
cmp
add
mov
add
loopne
pop
pop
repz
shl
bound
ds
or
inc
add
push
movsb
insb
cmp
dec
pushf
inc
add
stc
cld
fnstenv
out
mov
ret
fcoml
jnp
popa
insb
in
mov
fnstenv
inc
pop
mov
test
adc
sbb
sub
decl
movsl
inc
add
jo
into
test
rorl
or
out
mov
mov
mov
add
pop
int3
js
test
stos
mov
mov
std
inc
lock
iret
lahf
ficompl
pop
xchg
push
mov
stc
cli
ret
icebp
pop
repz
aad
out
decl
loopne
add
popf
inc
int
add
icebp
mov
int3
push
fisttps
push
dec
lret
rcrl
jb,pn
dec
cmpl
mov
mov
add
rcll
clc
mov
and
ret
jg
pusha
add
pop
or
dec
dec
leave
ficoml
sbb
into
push
fs
xchg
cmp
pop
mov
mov
mov
data16
push
fsub
ret
pusha
add
pop
inc
add
movsl
int
jae
and
test
stc
ret
mov
xchg
mov
dec
lods
or
mov
out
jne
add
mov
dec
pop
leave
mov
lea
inc
add
and
add
lcall
js
jp
xchg
movsl
rcll
xchg
enter
xor
in
jae
push
push
and
sbb
inc
lret
add
or
cli
int3
mov
mov
movb
xor
inc
push
mov
cmc
jbe
cmp
pushf
outsb
jo
cmp
roll
loope
add
cmp
add
fisubrl
mov
aam
sbb
xchg
push
push
push
and
add
sub
dec
jbe
add
loope
inc
mov
add
pop
xchg
push
jmp
scas
aad
mov
xor
pop
lahf
pop
mov
inc
cs
xchg
stos
int3
inc
add
cmp
mov
push
sbb
rcrl
mov
jae
fldenv
push
cwtl
and
add
mov
mov
jle
push
push
movb
mov
test
data16
loopne
test
fnstenv
pushf
mov
add
add
pop
inc
out
pusha
add
push
mov
xchg
or
pop
lea
pop
fmuls
inc
add
cmpsb
xor
add
cmp
sti
pop
fcomps
sub
xorl
out
inc
cmp
imul
mov
cld
je
pop
mov
mov
xchg
insb
xchg
imul
sub
mov
jo
add
mov
mov
cmp
mov
in
add
mov
addb
cmp
icebp
iret
mov
xlat
mov
add
cmp
cmp
pop
fs
dec
out
xchg
test
add
out
jne
adc
add
lds
icebp
sbb
movsl
sub
and
mov
mov
aad
sub
jns
mov
xchg
inc
add
or
push
add
push
aam
scas
insl
cwtl
lret
cmpsb
pusha
add
sbb
cmp
mov
fisubrs
into
push
inc
add
add
add
mov
loopne
fdivp
stos
add
dec
mov
test
add
dec
mov
pop
sbb
ljmp
push
and
nop
popa
mov
mov
lret
mov
stc
popf
add
add
jl
cli
jge
add
shlb
and
movsb
mov
xchg
dec
bound
dec
data16
sahf
jbe
addb
mov
andl
fldlg2
push
cmp
out
bound
xchg
cwtl
les
mov
les
jae
adc
mov
clc
ja
sbb
push
mov
stos
jns
mov
or
xchg
xchg
cwtl
and
cmpsb
gs
or
add
loopne
pop
xor
pop
icebp
faddl
repz
flds
dec
pusha
add
pop
jg
aad
push
pop
push
pop
jmp
test
ret
out
inc
push
mov
add
push
cmpsl
or
cmp
lcall
xor
cmp
mov
inc
add
push
and
or
arpl
add
cmp
and
xchg
inc
cmpsl
cltd
or
lret
imul
pop
xlat
dec
rolb
or
jo
push
adc
dec
rcll
arpl
add
pop
pop
fs
loop
add
stc
subl
pop
xchg
xchg
jmp
rcl
fdivr
sbb
add
add
sbb
sub
add
and
popf
fistps
punpckldq
clc
sbb
loope
cmc
lds
mov
ds
fnstsw
cltd
push
shlb
dec
or
add
stos
repz
nop
lret
int3
mov
mov
adc
mov
aas
sbb
out
lea
pop
sbb
sbb
jl
push
cli
mov
dec
xor
jae
add
cmp
mov
pop
mov
nop
fldl
add
jae
pushf
lret
xchg
shrb
adc
add
add
jle
pop
mov
sbb
aad
add
dec
fisubrl
push
mov
or
lock
ss
and
add
pushf
repnz
inc
add
or
inc
add
add
pusha
add
add
add
fs
add
cmp
lea
dec
cmp
push
fneni(8087
in
mov
jecxz
outsb
add
jns
lret
pop
and
stos
push
xor
stc
jge
add
sub
fcoml
mov
mov
cwtl
jb
outsb
sbb
outsl
int3
adc
add
sbb
cmp
mov
mov
jb
retw
or
sub
jg
sub
ss
adc
lret
pop
or
add
pop
sbb
xor
add
pusha
add
jmp
aas
add
pop
jns
repnz
aas
divb
iret
inc
stos
mov
pop
sbb
ljmp
aaa
dec
out
pop
loop
in
mov
in
push
lcall
fdivr
cmp
dec
fstpt
jb
jno
push
push
mov
add
inc
stos
or
addb
push
bound
add
mov
dec
push
inc
add
pop
fldenv
sbb
into
sbb
dec
mov
jecxz
adc
add
add
testb
add
test
pop
cwtl
inc
add
out
add
divb
jns
pop
dec
jmp
or
jg
mov
rcll
loope
imul
jmp
add
xchg
cmp
leave
pop
jp
adc
fldcw
sbb
adc
ret
mov
inc
es
push
loop
push
bound
sbb
mov
dec
mov
mov
cmc
nop
mov
insl
rolb
out
lea
in
or
addb
aas
add
cmp
pop
call
xchg
mov
bound
cld
inc
add
jnp
out
push
and
jmp
pop
adc
dec
int3
xchg
aad
mov
negl
push
xor
repnz
jl
add
and
bound
add
pusha
add
lahf
fs
outsl
dec
nop
cmpl
jp
ss
add
add
add
out
and
dec
adc
pop
stos
outsb
into
add
jl
addr16
cmc
movsb
mov
out
add
aad
fdivrl
aam
cmp
loopne
inc
add
loopew
fistps
ja
loopne
or
pop
mov
pop
or
andl
dec
bound
cmpsb
aaa
shlb
bound
push
xchg
loopne
and
enter
jmp
and
clc
mov
xchg
mov
jnp
fdivl
negl
out
inc
add
jge
lret
sbb
js
pop
and
add
sub
add
pop
arpl
push
sub
dec
nop
xchg
cli
ljmp
stos
xchg
les
test
fs
repz
xlat
and
movsl
aaa
xchg
hlt
mov
int3
into
sahf
loope
pop
jns
lea
inc
add
add
and
repz
int3
rolb
rcrl
sbb
and
jnp
sub
xchg
cmp
scas
rcrb
add
add
cmpsb
mov
and
aad
add
xchg
inc
add
add
xchg
dec
sahf
shlb
mov
fwait
gs
movmskps
lret
push
and
test
hlt
inc
loopne
scas
cld
push
bound
repz
movsl
mov
mov
xchg
mov
iret
xor
inc
add
adc
xchg
imul
test
sbb
push
sbb
cmpl
pop
sub
xor
scas
and
push
or
decl
fs
mov
movb
aam
idivl
add
fcmovu
icebp
insl
and
mov
inc
pop
cmp
add
addb
mov
sub
adc
jmp
pusha
add
push
and
imul
push
sub
rolb
jnp
add
and
aad
out
das
psubq
bswap
scas
mov
mov
push
sbb
sub
jmp
lea
out
mov
loop
jnp
sbb
out
adc
sub
icebp
sub
mov
pop
int
xchg
mov
inc
add
jecxz
lret
mov
inc
subl
and
aad
add
adc
pop
lock
pop
xchg
sub
js
or
inc
arpl
ds
xor
jns
lods
or
popf
test
test
add
add
enter
push
jnp
xor
movsb
dec
xlat
jnp
fisubl
add
or
adc
or
dec
lock
rolb
incl
dec
push
dec
imul
hlt
cs
insb
and
mov
mov
mov
mov
shr
and
test
push
jae
fldt
adc
mov
int3
sarl
cltd
les
aad
outsl
add
nop
js
popf
jb
loope
fdivr
lods
les
mov
addb
or
repz
xchg
icebp
cmpl
imul
inc
add
ret
mov
sub
jmp
fwait
pushf
test
cmp
xchg
out
lock
mov
and
adc
sbb
fxtract
out
mov
sub
mov
in
les
lret
mov
mov
add
cmpl
dec
movb
popf
push
aaa
lcall
outsl
inc
add
adc
sbb
sbb
ret
or
fstl
jmp
add
dec
int
add
jne
popa
jne
stos
inc
add
push
insb
jae
fwait
movsb
adc
mov
add
mov
adc
xor
lret
hlt
das
inc
test
lcall
aad
jbe
dec
jmp
movsl
stc
xchg
ds
int3
addb
add
int
or
pop
sar
addr16
pop
xor
add
ja
insb
insb
ret
dec
sarl
add
inc
in
daa
sbb
push
fistpll
pop
push
sub
int3
adcl
push
shll
in
enter
xchg
inc
add
or
add
or
and
xchg
test
add
mov
mov
loop
scas
xor
push
and
cmp
lret
or
add
xchg
inc
sti
sbb
jmp
jg
add
sub
mov
mov
or
lds
add
or
pushf
cmp
cmp
add
push
mulb
arpl
or
ficoms
test
fistl
or
sbb
lahf
mov
fistl
xor
add
cmp
dec
ret
xchg
outsl
imul
lods
lds
pop
and
push
or
fsubrs
in
dec
test
data16
gs
lods
flds
add
add
add
pushf
jo
push
sti
imul
jo
mov
mov
in
sub
mov
lcall
ljmp
movb
hlt
mov
jmp
pushf
push
xor
ja
add
ss
xchg
pop
ds
addb
test
jle
add
arpl
lods
jbe
arpl
shlb
or
dec
mov
test
shll
test
xchg
insb
addb
addb
dec
std
pop
ficoms
mov
hlt
rolb
or
xor
imulb
fidivl
stos
mov
jle
cmp
int3
mov
xor
inc
add
cs
add
fs
pop
rclb
or
adc
insl
sbb
stos
enter
in
fs
push
es
add
sub
jno
rcrl
and
lret
xor
jno
clc
mov
add
add
movb
mov
and
jns
mov
mov
mov
addr16
inc
sub
xchg
cltd
fwait
mov
push
add
lock
dec
sti
lods
fcomip
aam
into
inc
ret
mov
ret
testb
in
icebp
into
std
cmpsl
xlat
outsb
std
jl
sbb
jge
fbstp
fldenv
fwait
divb
jne
xor
stc
ffree
add
jecxz
mov
sub
idivl
test
loope
jle
adc
lahf
insb
lahf
xlat
push
mov
sub
mov
adc
sbb
push
sti
adc
out
out
lods
movb
mov
xor
push
mov
add
fdivrl
pop
imul
loope
fdivs
out
scas
fucom
cmp
ds
movb
movb
xor
xor
add
stos
inc
add
in
addr16
add
xorl
mov
push
loop
lret
imul
jmp
fdivrs
pop
jg
dec
dec
xchg
mov
adc
mov
jns
adc
inc
add
or
dec
dec
adc
xor
add
clc
pop
pop
inc
inc
add
ja
imul
out
and
add
add
stos
mov
mov
mov
iret
mov
cmp
lret
cmpsb
cmp
add
stos
mov
sbb
add
test
sbb
lock
dec
pop
repnz
mov
shlw
and
inc
outsl
negb
cmp
cmp
mov
sub
hlt
fistpll
jb
in
neg
pop
fcom
rolb
add
or
mov
adc
xchg
insb
sub
mov
movsl
xor
xor
orl
outsb
out
bound
test
add
cmp
xchg
js
cmp
add
xor
iret
cmp
shl
or
add
movsb
cmp
test
dec
aam
cmp
pushf
mov
rcrb
pusha
add
add
add
clc
mov
mov
fdivl
stos
cwtl
fcmovne
and
jo
adc
testl
fldl
sbb
ss
fisttpl
sub
add
ljmp
lahf
mov
pop
iret
mov
bound
mov
jns
xor
dec
stos
add
je
xchg
xor
adc
jne
notl
rolb
loop
add
add
std
add
xor
cmp
lret
push
icebp
dec
adc
imul
fdivs
jbe
add
push
cli
pop
cmp
jp
cmp
pop
pop
mov
pop
icebp
movsb
inc
add
mov
out
jg
aas
jp
mov
lret
add
data16
sbb
dec
mov
aad
lahf
dec
das
in
fistpll
ret
sbb
jmp
cwtl
scas
insb
dec
mov
pop
pop
or
or
push
rorl
ss
xor
ja
das
scas
inc
add
movsb
aam
add
cmp
movb
cmpsb
jae
lcall
xchg
negl
cmp
faddp
push
stc
push
push
pop
inc
xor
daa
mov
add
xor
in
fwait
xor
scas
movsl
dec
sub
add
mov
je
popf
pop
and
sub
add
pop
ret
in
aaa
xchg
fadd
add
pop
pop
mov
daa
les
andl
push
iret
rolb
sbb
popa
xor
int
jno
xchg
sahf
jne
sahf
mov
testb
add
lret
sbb
dec
shl
push
cld
xchg
inc
roll
jmp
add
stos
pop
mov
push
js
leave
push
sahf
les
add
dec
or
mov
outsl
scas
inc
aad
mov
fdivl
out
jge
add
jge
fucomip
cmc
xchg
adc
loopne
add
and
adc
jg
and
js
test
adc
imul
dec
shl
mov
mov
pop
mov
pusha
add
faddl
add
pop
sbb
pop
mov
cs
xchg
push
xchg
pushf
mov
jge
or
and
mov
add
add
cmp
bnd
inc
add
add
and
lcall
or
sub
add
mov
xchg
dec
jg
sub
add
mov
cmp
add
and
inc
push
stos
cmp
mov
xlat
mov
test
mov
cld
mov
adc
fnstsw
and
rcll
dec
pop
dec
or
mov
jae
add
cltd
jbe
cmp
mov
mov
das
decb
inc
add
mov
nop
out
dec
xchg
sbb
fildll
stos
cs
add
mov
add
lds
and
das
ret
add
ljmp
movsl
outsl
call
icebp
add
cwtl
lret
nop
out
fdivs
mov
adc
add
lcall
mov
jne
cmp
dec
or
ficoml
lods
or
mov
mov
inc
add
lods
mov
xor
in
lods
lahf
aaa
pop
mov
call
xor
mov
add
int
sbb
push
lret
pop
test
stos
add
loope
xlat
lods
mov
cmpsb
shl
sbb
jo
mov
and
push
add
jnp
add
in
xchg
inc
add
imul
fistpll
gs
pop
pusha
add
xor
clc
push
subl
add
jge
lds
test
in
inc
add
adc
das
lret
add
loopne
flds
pop
xchg
jl
lods
lods
add
xchg
pop
outsl
aam
fdivrl
lcall
test
in
inc
add
add
and
xlat
aad
xor
jp
adc
mov
pop
bound
push
or
xor
push
jbe
mov
aaa
xchg
scas
les
and
loopne
pop
pop
int3
mov
pop
addb
add
jge
imul
inc
add
sbb
mov
test
jle
sbb
in
movsb
sub
in
test
movb
mov
push
fld
jo
jo
jae
in
jl
cmp
mov
pop
into
mov
or
cmpsb
add
pop
jl
sti
push
fistpl
xlat
jb
xchg
add
dec
push
add
xchg
pop
push
add
jp
dec
daa
fldt
jne
pushf
je
cmpsl
lcall
push
imul
mov
xlat
data16
lcall
push
mov
call
ret
dec
dec
sub
lcall
xor
int
pushf
adc
daa
out
mov
aam
icebp
and
pop
adc
dec
jecxz
xchg
push
mov
add
movsl
out
push
jg
push
push
sbb
and
jg
xchg
or
jno
xor
push
add
addb
push
nop
clc
into
cmc
ret
mov
outsl
fwait
lcall
pop
jecxz
adc
or
push
aad
push
cmp
add
mov
mov
popf
xor
std
push
or
pushf
mov
stos
popa
cltd
cs
lret
sub
cmp
add
mov
in
jb
flds
mov
xor
xor
sbb
pushf
xor
jb
mov
xlat
aaa
xor
dec
int
add
fwait
xchg
sbb
shrl
pushf
lds
mov
mov
movb
add
add
in
shl
adc
js
in
cli
outsl
jg
xchg
pop
push
adc
and
push
jbe
inc
add
mov
pop
scas
mov
jne
sub
mov
jp
sbb
and
adc
mov
add
push
add
andps
fs
xor
stos
sbb
xor
xor
lock
adc
cmp
scas
jbe
arpl
inc
jnp
xor
add
add
inc
add
popa
or
scas
out
add
push
rol
adc
push
nop
loop
dec
and
mov
jg,pn
sub
push
repnz
sub
cmp
adc
dec
dec
add
xchg
cmpsl
out
mov
xchg
fiadds
dec
shrl
sub
pop
inc
sahf
gs
ret
sbb
mov
add
add
add
inc
loope
xor
add
push
xchg
mov
sub
sbb
inc
add
sub
fdivr
bnd
sbb
and
je
mov
out
lcall
call
push
push
mov
xchg
pop
es
add
fisubrs
out
add
mov
sub
add
or
jns
in
add
add
jae
je
lahf
fnstsw
and
add
enter
jne
push
int3
cmpsb
and
dec
aad
dec
into
out
or
movb
fidivl
and
fsubrl
mov
push
je
mov
int3
sub
cmpsb
add
mov
cmp
xchg
push
add
jnp
gs
mov
or
dec
aaa
cmp
cmp
ret
aad
xchg
add
cmp
inc
jle
add
pop
bound
xlat
inc
mov
fbstp
inc
add
pusha
add
aas
push
in
lahf
jae
scas
push
add
mov
scas
fildl
xchg
fists
and
es
incl
add
repnz
insb
stc
mov
fimull
pop
or
inc
push
xchg
test
dec
bound
les
in
cs
aad
cmp
or
mov
ds
pop
cli
mov
daa
lods
sub
mov
arpl
pusha
add
inc
das
ss
pop
div
xchg
movsb
lods
rolb
cmp
in
adc
mov
adc
add
movb
mov
jp
cs
mov
fnstenv
add
add
js
inc
add
fs
or
cld
fsubrp
outsl
dec
xor
rolb
and
pop
add
mov
inc
add
or
adc
inc
add
pop
popa
cwtl
xchg
dec
js
fisttpll
push
jb
dec
sub
leave
arpl
inc
add
adc
movsl
mov
add
mov
je
sub
iret
cltd
fidivrs
cwtl
iret
enter
sbb
lea
pushf
mov
pop
jp
xor
pop
popf
shll
xchg
jl
cmp
repz
shll
hlt
xor
add
aaa
mov
add
and
push
cli
js
add
add
movsb
cmp
add
add
es
iret
pop
add
jge
lret
push
mulb
outsl
out
pop
and
aas
mov
add
push
xchg
les
add
mov
jno
popa
lods
mov
jb
mov
rclb
add
scas
nop
and
pop
cmpsl
inc
dec
scas
mov
nop
xchg
lock
sub
cmp
adc
addb
xor
mov
adc
aam
shll
add
out
dec
mov
push
loop
or
iret
cmp
xchg
in
lcall
loopne
pushf
cmpsl
pop
in
or
and
xor
mov
fwait
in
xlat
and
pop
loop
add
lahf
mov
jg
lret
jno
push
jmp
add
or
pxor
lds
add
pop
sub
sub
or
xchg
jge
add
xor
xchg
cmp
subl
push
test
ja
fsts
add
push
dec
cmp
lret
aam
cmp
fnsave
lahf
hlt
fldl
add
lock
push
fnstcw
xchg
loope
leave
mov
into
pop
add
jl
out
inc
dec
mov
ljmp
xchg
xchg
lcall
lods
clc
jg
aam
mov
jp
lods
pop
adc
mov
shll
jl
aaa
push
or
loop
add
add
outsb
das
cmpsb
negl
mov
mov
dec
pop
shlb
add
cmc
arpl
push
stc
lret
outsb
jle
pop
sbb
pop
xor
add
adc
pusha
add
or
add
add
fmull
repz
mov
mov
xor
mov
push
add
lret
cli
xor
pop
lock
in
fadds
mov
mov
adc
ret
lcall
add
shlb
add
cmc
cld
leave
gs
mov
lods
fidivrs
mov
mov
or
in
adc
outsb
jns
adc
adc
mov
or
add
scas
pop
pushf
aas
out
out
das
imul
lcall
rorl
in
leave
adc
fcomps
add
xor
cmc
test
jno
push
mov
push
jns
mov
aas
add
add
pop
inc
add
in
push
push
sbb
xor
push
insb
push
pop
add
into
and
rolb
mov
mov
or
shll
lahf
jbe
in
mov
rcrl
dec
out
ret
sbb
loopne
cmp
sub
pop
xor
jecxz
and
jno
mov
or
in
mov
pop
mov
lret
jp
or
add
aad
addb
pop
addb
leave
push
mov
iret
pop
dec
gs
and
add
jae
push
jge
ss
jmp
fists
add
mov
push
ljmp
sub
fisttpll
lds
insl
ljmp
sbb
push
add
push
mov
push
xchg
inc
outsl
inc
add
jo
or
pop
daa
jge
add
jo
inc
add
out
push
xor
mov
cltd
dec
dec
sbb
jae
sti
jae
pop
pop
inc
or
neg
mov
cmpsl
xchg
xchg
adc
add
cmp
mov
repz
mov
xchg
sbb
mov
shll
rolb
pushf
scas
and
or
sub
cmp
lods
lcall
cmpsl
sub
sub
cmp
imul
gs
imul
in
rclb
in
popf
sub
clc
rol
add
xor
sti
insl
and
xchg
or
or
cmpsl
xor
adc
cmp
shl
push
fs
rolb
pushf
sub
lock
cmp
in
fwait
leave
dec
mov
andl
addr16
mov
fbstp
push
push
lds
subl
test
fidivrs
mov
add
test
and
push
lret
and
bound
jb
inc
add
call
clc
mov
adc
test
mov
adcl
jl
add
push
enter
add
adc
pop
xchg
mov
add
pop
roll
add
daa
stc
jg
fcmovnb
add
push
push
mov
add
jl
xchg
addb
clc
xor
cli
cmp
push
mov
sbb
insl
xchg
mov
inc
add
xor
fldcw
and
ret
fimuls
jl
push
mov
enter
sti
ljmp
push
add
inc
add
add
dec
inc
add
adc
pushf
out
sub
mov
int3
movb
loopne
push
adc
loope
int3
shll
scas
movb
xchg
dec
xchg
fcmovnu
icebp
insl
mov
pop
in
xchg
gs
into
mov
imul
xlat
lahf
lcall
pop
imul
add
mov
mov
dec
mov
in
inc
add
neg
and
add
push
stc
or
or
add
outsb
mov
scas
jns
mov
sbb
mov
push
call
xchg
in
cmp
add
movsb
jb
loopne
add
adc
addb
hlt
push
add
add
mov
shll
push
rcrb
stos
or
int
add
sub
shlb
addb
bound
fsubrl
xchg
push
push
into
cmpsb
repz
pop
lds
add
rolb
dec
or
or
in
out
ss
pop
rcrl
popf
sbb
call
ret
int
mov
lcall
imul
fs
mov
jb
inc
int
call
out
ja
roll
xor
cld
push
mov
cmp
mov
cmp
mov
mov
push
call
mov
les
rorb
xlat
jb
fadd
insl
cs
lock
mov
adcl
adc
sub
cmc
mov
mov
leave
int3
add
fistl
cld
dec
pop
je,pt
addb
or
test
inc
or
insl
test
and
inc
add
lea
or
fidivl
and
inc
testl
dec
inc
jnp
cmpsl
ss
out
iret
stos
loope
push
adc
jp,pn
andl
dec
xlat
push
cmp
pop
ret
rcrb
add
xchg
jns
xchg
call
cmp
outsl
pop
loop
mov
lods
mov
sbb
pop
and
sti
add
cmp
pop
pop
lahf
mov
mov
negb
add
lahf
call
jmp
cmp
shl
outsl
pop
std
test
stos
or
sub
sbb
shrl
or
push
loop
rolb
add
adc
ds
fldt
aas
lock
pop
sbb
jg
cmp
in
adc
aad
sub
or
cmc
adc
jns
add
mov
sbb
add
fs
sbb
es
out
mov
push
and
jp
loop
pushf
fisubrl
je
fwait
push
or
addb
add
sbb
inc
add
mov
aam
push
mov
roll
jo
test
adc
dec
out
imul
mov
repz
sahf
sub
add
mov
mov
xchg
mov
je
xchg
push
int3
inc
test
adc
sub
add
inc
add
cmp
push
rcl
or
aam
adc
xchg
pusha
add
sub
dec
xchg
sbb
add
mov
mov
stos
shl
int3
in
imul
push
inc
out
sbb
add
aam
imul
cmpsb
in
cld
or
add
faddl
add
ja
inc
cmpsb
test
outsl
shrl
xchg
fsubl
ljmp
lock
mov
addb
fidivrl
jb
add
or
fidivl
adc
mov
aaa
and
push
scas
addb
add
sbb
add
lock
jp
stos
scas
fdivrs
add
pop
lahf
adc
inc
dec
iret
mov
in
imul
int3
insb
sbbl
mov
sub
stos
outsl
stos
insb
xchg
xor
jecxz
cltd
rcrb
add
add
int
xchg
jno
dec
xchg
jmp
mov
inc
cmpsb
popf
out
shlb
enter
in
adc
jmp
xchg
sub
inc
add
add
loop
mov
repz
inc
add
mov
push
mov
movb
mov
add
add
and
dec
in
and
repz
adc
xchg
dec
es
jle
inc
add
add
test
das
mov
pop
std
adc
and
xor
test
rolb
push
fcompl
pop
hlt
mov
jl
xchg
lods
jno
dec
inc
pusha
add
out
sbb
add
cmc
lods
mov
loopne
in
or
xchg
movb
jmp
mov
push
mov
sahf
and
xor
xchg
mov
jnp
out
adc
xchg
jns
mov
ror
push
aas
je
cwtl
lods
xor
sbb
jp
gs
mov
mov
mov
ss
cmc
ja
repz
mov
lock
ret
hlt
repnz
or
cli
and
or
adc
sub
cmp
fs
push
dec
mov
push
jno
clc
divl
cmp
jns
add
push
scas
dec
jp
adc
jl
pop
pop
pop
sub
xchg
mov
enter
popl
xchg
je
push
lods
mov
mov
test
lods
testb
add
movsb
dec
js
adc
or
in
push
ret
jo
ret
add
aad
xchg
dec
out
sub
dec
and
mov
cmp
int3
sub
cwtl
and
cmp
sub
fucomp
sub
je
aaa
jbe
outsl
in
push
push
clc
dec
repz
sbb
ss
add
push
movb
add
inc
add
dec
scas
mov
add
or
add
cld
addr16
decl
fists
add
leave
lock
pop
cmp
jge
push
sub
mov
xchg
push
inc
add
dec
repz
mov
dec
or
out
lods
sub
clc
out
and
cltd
test
lds
test
test
repnz
ja
jge
inc
add
mov
push
mov
add
mov
add
push
add
add
xchg
imull
add
inc
mov
fistpll
movsb
in
mov
jle
lret
mov
dec
aas
jge
add
mov
jecxz
adc
mov
sbb
add
dec
jmp
dec
add
int3
sti
dec
adc
popf
repnz
push
add
sub
inc
add
add
cmpsb
push
push
das
es
dec
aam
jb
add
or
mov
jno
push
pushf
mov
cmp
outsl
cmpsb
and
push
mov
add
ret
mov
in
push
popf
fistl
add
xchg
hlt
add
les
test
sbb
jg
add
cmp
outsb
lods
mov
mov
add
sub
push
addb
loopne
pop
jmp
and
xor
inc
lock
push
fildl
movb
jns
sar
int3
mov
clc
adc
and
shlb
in
test
scas
mov
jno
add
fs
decl
push
popf
insl
mov
mov
add
add
add
test
outsl
push
int3
mov
les
bound
add
repnz
js
cmp
add
add
inc
add
jne
test
and
insb
mulb
add
push
add
xor
jne
cmpsb
mov
cld
jae
outsl
xor
pop
push
movsb
insl
mov
call
dec
push
add
in
push
mov
mov
stc
arpl
icebp
mov
mov
cmp
hlt
xchg
lcall
out
repnz
out
shlb
data16
adc
add
mov
mov
popf
mov
push
movsb
insl
cmp
test
orl
jb
mov
dec
mov
insl
cmp
mov
pop
or
mov
lods
fwait
push
mov
ds
lea
pop
add
movsl
sbb
inc
mov
pushf
and
in
outsb
int3
and
movb
shll
mov
pop
jle
cltd
scas
mov
cmp
pop
int
cmp
inc
mov
daa
gs
xchg
xchg
or
mov
cmp
mov
ss
inc
add
add
outsb
and
xchg
movl
jae
mov
bound
xor
ret
push
dec
bound
xchg
rcrb
xor
ret
cltd
dec
ja
fs
cli
or
jp
hlt
rcrb
out
mov
in
jecxz
addb
and
data16
inc
ds
insl
addl
in
dec
and
aam
aam
push
out
adc
add
std
pop
push
pop
mov
push
ret
addb
dec
call
sbbl
mov
mov
xchg
mov
scas
cld
out
in
adc
bound
lock
cltd
outsl
daa
xchg
pushf
arpl
pminub
enter
cmpsl
cltd
cltd
pop
in
xchg
fbld
sub
hlt
jnp
bound
mov
rolb
add
fists
test
sub
icebp
int3
push
mov
insl
sbb
out
test
adc
movsb
idivb
push
inc
dec
pushf
mov
in
call
add
push
dec
pop
xchg
loopne
sbb
add
cmc
test
adc
movb
push
and
sbb
push
inc
add
loopne
push
inc
add
dec
ret
movl
pop
ljmp
iret
lods
jne
imulb
jmp
sbb
sbb
mov
jno
shlb
adc
push
insb
sahf
call
hlt
movsl
addb
pop
inc
hlt
mov
into
jo
sbb
adc
jno
scas
xor
mov
stos
cltd
ds
add
ds
sti
mov
hlt
imul
and
iret
jbe
shrl
push
daa
cmpsl
cmp
xor
cmpl
push
jmp
push
aas
jne
fcompl
and
sub
cwtl
adc
adc
mov
mov
pop
cmp
addb
inc
fisttpll
fistpl
cld
jno
stc
sbb
lahf
or
push
pop
imul
out
int3
jo
push
stc
jns
add
xor
mov
outsl
mov
andl
or
test
movb
std
aas
jb
movsb
push
in
leave
rcrl
fptan
hlt
cltd
icebp
sarl
fisttps
xor
add
and
addb
mov
les
jecxz
leave
jecxz
adc
gs
fstpl
bound
cmpsl
and
inc
adc
add
pusha
add
sbb
sbb
add
add
lret
xchg
addb
xor
inc
push
add
push
les
sbb
mov
sti
lock
add
out
lods
repnz
mov
push
mov
push
jnp
int3
xor
push
xchg
adc
rcll
ja
mov
dec
push
add
fistps
in
dec
adc
arpl
add
pushf
push
js
daa
mov
scas
lock
in
xchg
jp
ss
dec
sub
fisubrl
outsb
xchg
mov
sti
jns
fisttpll
clc
cmpsl
ljmp
inc
stc
adc
or
mov
sub
xor
mov
imulb
sbb
add
xchg
insl
push
mov
sbb
movsb
cli
or
pop
and
inc
push
je
in
add
mov
jns
add
xor
pop
pop
mov
inc
mov
push
in
mov
and
pop
add
jp
adc
sbb
fwait
movsb
in
lcall
push
decb
movq
and
xchg
xor
test
nop
int
mov
add
push
adc
add
lds
popa
xchg
aas
xchg
xchg
or
jle
lret
or
sub
les
iret
movb
pop
in
cmp
mov
cld
mov
stc
in
jle
add
xchg
add
jb
pop
xchg
mov
cmp
stc
stc
imul
dec
mov
ss
add
inc
fwait
in
sti
sub
mov
das
inc
das
test
scas
push
ljmp
dec
bound
jge
and
mov
je
scas
sub
inc
sbb
ljmp
inc
sbb
add
loopne
xchg
sub
sti
pop
add
xchg
fnstcw
and
enter
jae,pt
sbb
mov
cmc
mov
js
sbb
mov
add
inc
add
push
cmp
lock
push
push
repz
inc
add
xor
push
cmp
sub
gs
je
dec
scas
jae
lret
xor
xchg
loopne
add
ficoml
xor
mov
jne
xorl
cmp
xor
adc
test
movb
addb
add
mov
fldl
daa
jnp
push
mov
mov
mov
dec
push
push
int3
jo
mov
ja
js
inc
add
pusha
add
call
nop
cmpsb
sbb
mov
push
mov
in
out
in
xor
sbb
in
lret
aas
mov
add
mov
sar
ss
pop
idiv
push
sbb
bound
mov
xor
push
inc
scas
mov
negl
xchg
mov
dec
push
inc
test
dec
sbb
les
loopne
jns
enter
mov
fs
lahf
mov
xor
add
ret
xchg
and
jae
data16
sti
cmp
loopne
jb
cmp
add
dec
pop
repnz
push
popf
inc
add
inc
movsb
jmp
mov
mov
mov
rcrb
cmpsb
gs
inc
add
rclb
popf
or
stc
push
xchg
dec
push
aad
inc
add
hlt
jne
mov
loopne
js
enter
push
call
add
ja
cmpsb
mov
cmp
pop
pop
mov
cmp
sbb
repnz
ret
insl
fmuls
add
mov
push
out
adc
arpl
jnp
xchg
push
aad
shr
cmp
pusha
add
adc
insb
adc
mov
bound
or
push
and
mov
mov
xchg
xchg
push
sub
outsl
mov
add
sbb
adc
loop
mov
push
xchg
ret
mov
std
imul
adc
aad
ja
mov
pop
cmp
lds
pushf
call
jno
sub
xchg
mov
inc
add
dec
push
mov
jg
movb
sbb
imul
jns
mov
xor
sbb
stc
xchg
pop
fwait
sbb
and
cmp
fsub
or
pop
pop
add
xchg
cmpsl
call
iret
aad
dec
sahf
cld
cwtl
addr16
xor
lahf
int
out
out
jg
cltd
inc
enter
lds
pop
sbb
jns
dec
mov
pop
add
cli
sub
push
sub
aam
std
add
jmp
mov
xlat
mov
pop
push
mov
lods
pop
push
arpl
lcall
mov
add
xchg
rcr
sti
fidivl
fsub
inc
add
push
sbb
pushf
and
iret
movsl
cwtl
lods
or
xchg
cmc
andl
pop
xchg
pop
xor
push
xor
test
jge
or
clc
filds
push
mov
xchg
out
mov
arpl
add
sbb
lock
inc
or
rolb
sbb
js
mov
adc
fdiv
lods
clc
dec
clc
or
addr16
add
fcompl
push
push
lods
lahf
test
fidivrs
sbb
xchg
cmpsl
push
pop
sub
into
stc
cmp
test
xchg
fdivrs
inc
add
fcoml
cmp
dec
ss
addb
push
rorl
aaa
jbe
jnp
add
add
inc
adc
addr16
pop
imul
cs
push
lock
in
loop
add
sti
sub
out
arpl
mov
jb
push
mov
cmp
aam
inc
xor
iret
jp
jl
add
cmp
rolb
jnp
insb
loopne
cli
stc
xor
shl
mov
aaa
mov
outsl
ret
add
cmp
add
nop
test
cwtl
pop
addb
test
add
loope
push
insb
adc
sbb
pop
mov
xor
inc
mov
hlt
into
mov
pop
and
adc
js
cwtl
cltd
in
mov
jle
stos
pushf
cmpsl
adcl
add
sub
or
lods
ret
add
popf
and
xchg
fstps
cmc
lcall
sbb
mov
int3
cmc
sbb
mov
add
pop
and
add
imul
fists
pop
xchg
or
outsl
leave
pushf
imull
cmc
scas
sub
cmp
cmpsb
cltd
dec
or
pop
pop
mov
xchg
and
inc
mov
flds
movsl
mov
cs
loope
inc
jle
pusha
add
aad
lret
mov
inc
add
mov
mov
jns
dec
loope
test
mov
jge
mov
xchg
sbb
fidivrs
mov
sti
pop
inc
dec
pop
or
add
inc
sbb
popf
cmp
movsl
mov
add
frstor
cmc
or
inc
add
dec
push
sub
les
fs
pop
imul
lods
psraw
dec
jne
js
cmc
mov
daa
inc
out
les
repz
repz
test
inc
int
mov
shlb
pop
xchg
cmp
js
dec
jnp
ficompl
sub
add
add
pop
scas
insb
mov
sub
sbb
xchg
rcrb
popa
insl
mov
je
jl
out
pop
inc
add
movb
js
cmpl
add
mov
outsl
rolb
icebp
scas
out
addb
jne
int
inc
add
mov
gs
add
sbb
mov
or
sbb
lods
test
inc
add
cwtl
addb
dec
push
add
push
jne
or
aaa
xchg
insb
jne
mov
mov
xlat
push
add
or
ljmp
mov
add
add
lahf
nop
xchg
cltd
xor
jno
push
sub
fildll
mull
stos
loopne
bound
js
push
or
push
sub
or
jg,pt
scas
in
jg
or
dec
fists
inc
idivl
pop
cmp
push
xchg
test
test
cmp
ds
xor
mov
cltd
sub
test
hlt
ret
popf
movsb
loopne
xchg
pop
cmp
push
outsl
shrb
out
call
out
cmp
add
mov
les
jl
sarl
inc
add
or
lcall
or
insl
jle
rolb
mov
xchg
aas
sub
mov
cli
dec
out
mov
mov
inc
inc
fcoms
mov
xor
add
aaa
lret
loope
xchg
mov
mov
sbb
outsb
push
add
pop
push
pop
in
int3
jp
into
addr16
add
addb
and
jge
xor
jmp
nop
notb
stos
loope
dec
sbb
push
les
out
sbb
in
sub
sti
outsb
mov
fcomip
add
addb
addb
ljmp
xchg
popf
repnz
cmp
hlt
cmp
inc
add
in
outsl
jge
inc
add
add
rclb
sbb
mov
add
push
xor
cmp
add
mov
xor
and
addb
add
sub
shll
dec
pop
adc
mov
fstps
leave
xor
fdivrl
dec
in
sub
imul
cmp
xchg
mov
addr16
cmp
aaa
dec
insl
mov
xchg
xchg
push
je
push
loopne
add
cltd
outsb
jecxz
mov
and
mov
cltd
mov
pop
cmpsl
movsb
jae
adc
dec
push
imul
pop
jle
ret
mov
jp
jne
pop
imul
fdivrl
call
xchg
dec
prefetchwt1
mov
push
dec
movb
fisubl
add
mov
pop
jns
bound
popf
cmp
push
mov
pusha
add
loope
movsl
mov
aam
inc
xchg
xor
sbb
cwtl
or
popa
gs
dec
in
or
inc
jmp
pop
sub
shll
jecxz
pop
nop
cmpsl
call
mov
lcall
fimuls
pop
adc
addb
add
fwait
xchg
addb
cmp
push
lret
and
push
fstp
pop
movsl
inc
add
mov
xchg
adc
push
gs
outsb
jnp
dec
imul
mov
xor
and
or
leave
pusha
add
movsb
mov
int3
add
lahf
mov
out
dec
and
cli
push
rcll
and
add
dec
hlt
bound
xor
mov
int3
xor
push
push
mov
loop
lock
inc
add
pop
in
in
movsl
jge
js
dec
sbb
lds
add
mov
mov
dec
bound
out
loop
cmc
sti
or
lahf
fs
mov
loope
nop
inc
xchg
jecxz
jp
mov
js
nop
dec
jbe
cmp
add
pop
cmpsb
push
ss
jne
shrl
xor
loopne
sbb
add
cli
push
mov
pop
ss
jae
int3
pushf
out
mov
xchg
mov
add
test
xor
sub
cmp
aad
out
aam
mov
stos
pop
mov
scas
jb
mov
outsb
movsl
cmp
adcl
xor
xor
adc
sbb
jmp
cmp
insb
lods
sarb
mov
fcmovu
or
inc
stc
sub
out
cmc
test
add
dec
dec
js
mov
ja
pop
enter
push
add
jns
add
xchg
outsb
mov
fisttps
les
out
add
lret
jo
sahf
ss
adc
loopne
jecxz
add
out
pop
les
scas
leave
out
fists
mov
dec
les
std
addr16
xor
lcall
mov
adc
sbb
add
mov
aam
push
dec
jno
ret
mov
in
movsl
lahf
in
and
xor
lock
es
pop
dec
push
imul
xor
push
mov
push
aam
add
or
ss
aad
pop
int
repnz
ficoms
mov
add
mov
mov
adc
sbb
xor
cmc
cs
sbb
incb
add
add
add
add
or
jae
in
idivb
in
and
outsb
popf
stos
outsb
mov
pop
jmp
addr16
out
mov
mov
dec
ret
aam
and
inc
add
push
test
xor
jns
xor
dec
mov
test
adc
movb
scas
ret
addr16
inc
add
rorb
rol
add
xor
in
xchg
adc
jne
bound
and
lret
scas
ret
push
add
repnz
dec
xchg
adc
jb
mov
fs
test
sub
xor
fbld
shll
dec
test
ffree
jns
addr16
add
cmpsb
arpl
pusha
add
add
orl
sti
jg
mov
add
add
cmp
or
mov
leave
cltd
mov
mov
add
jmp
inc
add
sar
fnstsw
add
add
shrl
int
ds
mov
jl
mov
adc
test
lds
addb
fnstcw
and
pop
ret
lret
enter
ret
or
cltd
test
push
push
add
mov
rolb
negl
or
sub
sarl
mov
xor
pop
cmp
jmp
je
out
push
add
lret
jecxz
adc
dec
addb
out
ja
pop
bound
or
aam
ljmp
add
addb
fnstenvs
sarb
loop
xor
mov
mov
mov
add
pop
mov
rclb
lea
xchg
push
pop
dec
addr16
pop
loopne
iret
xchg
popf
push
jmp
movsb
sub
pushf
mov
loopne
test
pop
pushf
addb
sub
sub
ret
ficompl
mov
outsb
adc
adcl
dec
imul
pop
in
mov
push
aaa
cmpsb
std
out
les
xlat
mov
adc
add
push
loopne
sbb
out
lret
xor
or
outsb
test
pop
clc
cmp
xadd
icebp
mov
or
das
enter
sub
dec
fcoml
pop
xlat
mov
fst
jnp
lods
cld
jge
insl
sbb
add
mov
outsl
movsl
adc
mov
inc
add
push
add
add
or
les
je
inc
pushf
xchg
sub
add
jge
out
mov
jbe
lods
push
div
pop
push
scas
jns
sahf
rolb
push
in
adc
cmp
pop
pop
sub
cmp
add
cmpsl
cmpsb
addb
stc
ret
jno
scas
fbld
lea
xor
cmpsl
lret
enter
insl
jno
push
add
roll
or
je
jle
add
in
repz
add
rcrb
cmp
les
xor
xchg
cmc
add
popl
imul
mov
xchg
mov
push
push
ljmp
pop
stc
cs
jge
pop
dec
and
xor
fstpl
addb
adc
add
pop
mov
les
inc
add
in
push
pop
movsb
inc
add
add
dec
push
dec
jmp
testl
rolb
push
pop
mov
xor
adc
stos
xor
jno
dec
mov
cmpsl
sbb
xchg
pop
or
out
mov
aad
xchg
inc
add
push
jae
inc
add
push
cld
stos
and
sbb
in
add
setg
xor
mov
cmp
mov
mov
inc
add
add
xchg
mov
lods
dec
fidivrs
jge
movsb
out
jp
cmpsb
addb
adc
bnd
stos
dec
mov
and
jne
xchg
das
mov
aas
stos
js
cmc
imul
add
and
mov
dec
xchg
mov
ss
adc
add
jle
push
mov
xchg
sbb
nop
aam
add
add
jb
loope
aad
js
cld
inc
rolb
and
mov
pop
bnd
add
push
lahf
fidivs
dec
push
enter
jp
arpl
enter
sub
jo
xchg
ljmp
pushl
test
iret
sbb
pop
lods
lods
pop
mov
pop
mov
and
int3
mov
push
cmp
add
mov
or
adc
add
addb
les
or
xchg
scas
cmp
mov
add
hlt
jno
movsl
dec
iret
xchg
negb
shlw
ret
pop
lahf
inc
pop
and
movsl
sub
sub
sub
adc
cmc
inc
data16
push
out
xor
mov
add
xchg
sub
movsb
dec
out
sbb
xchg
mov
add
cwtl
mov
outsl
inc
jne
data16
xchg
add
mov
dec
pop
fildl
cmpsl
xchg
outsl
out
data16
jnp
lcall
or
xlat
nop
stos
adc
aam
add
rolb
jo,pt
jmp
rclb
inc
add
push
sub
cwtl
cmp
cmp
or
sbb
add
xchg
xchg
pushf
pusha
add
or
daa
pop
aad
stos
in
inc
addb
push
fdivr
or
neg
iret
and
jne
int
arpl
mov
in
sbb
add
sub
imull
and
les
in
test
add
shll
aam
add
xor
jp
stos
cmp
addb
lock
add
inc
add
push
in
cltd
stos
pop
cmpsl
mov
pop
mov
jge,pn
mov
out
add
shlb
jnp
xor
hlt
stos
sbb
cld
in
pop
cmp
add
addb
js
ljmp
pop
js
loopne
nop
push
hlt
addb
cmp
fldt
add
or
and
add
je
cmc
repz
cli
xlat
adcl
ds
add
sti
xor
jo
push
inc
add
and
enter
movb
out
sbb
adc
ja
popf
and
rolb
adc
xchg
xchg
out
mov
out
add
jne
jns
pop
rorl
test
xlat
test
clc
dec
call
rcrl
jmp
mov
jne
add
xchg
sbb
hlt
cmp
movsl
cmpsb
inc
add
cltd
scas
add
push
mov
sub
add
ljmp
fsubr
or
push
clc
sbb
jne
adc
add
ja
or
push
jp
inc
sub
or
shll
out
out
cld
jg
cmc
popf
out
div
sub
gs
push
ss
pop
push
pop
out
and
pop
xchg
stc
aam
mov
leave
lret
out
add
jle
push
jae
shl
rolb
add
mov
out
add
jne
add
and
or
xor
xchg
adc
mov
loopne
jno
mov
jo
sub
jne
lock
jge
lock
int3
ret
push
fnstsw
sub
push
insb
cli
inc
add
xchg
xchg
lods
mov
insb
xchg
adc
sahf
jecxz
les
jne
fistpl
insl
js
sbb
add
call
inc
pop
fwait
out
fsubrp
test
jae
mov
fcompp
pop
pop
in
es
sahf
jnp
in
dec
jmp
add
testb
in
arpl
movsb
xchg
insl
pusha
add
adc
outsw
mov
xchg
mov
push
mov
and
mov
add
jge
sbb
addb
add
mov
ja
fcoms
in
and
jne
jge
rol
fbstp
push
sub
fs
add
out
daa
fidivrs
insb
mov
testl
sub
jmp
xchg
test
repz
loopne
pop
popf
in
mov
idiv
in
jnp
lods
test
xor
sbb
loop
or
loop
mov
leave
inc
add
testb
xor
add
jb
add
cmpsb
lods
ljmp
sbb
add
addb
fistpll
addb
xor
js
cpuid
les
xchg
cmp
testb
enter
out
sbb
test
test
fsubr
sub
xchg
mov
mov
and
enter
add
dec
aad
add
mov
fists
sahf
je
aaa
cmp
pop
push
icebp
fsubrp
adc
jge
testb
ss
jb
iret
jle
mov
jne
xchg
test
xor
insl
arpl
add
das
add
test
stos
xor
insb
adc
jge
mov
shrl
lea
mov
add
fwait
push
add
add
lock
jae
cmp
sub
jne
add
push
add
inc
push
xchg
inc
or
idiv
pop
hlt
faddl
xchg
xchg
dec
es
addb
mov
test
xor
in
add
and
out
push
jp
test
and
push
xchg
pop
mov
jmp
add
or
pop
push
xor
outsb
inc
fiaddl
xchg
int3
inc
add
lods
sub
pop
push
loope
dec
lods
cmpsb
xor
jbe
mov
jnp
stos
sbb
in
popf
sbbl
shll
inc
add
nop
inc
out
or
push
mov
iret
rcrl
add
outsb
fcompl
xor
in
sub
mov
sbb
ljmp
jp
xchg
jbe
and
gs
add
pop
sub
pop
add
stos
push
mov
enter
sub
ds
jge
push
in
adc
fistpl
dec
push
jae
mov
test
mov
add
cmpsb
in
and
arpl
push
add
jbe
cmp
rolb
aas
or
enter
mov
rorl
adc
shr
mov
pop
push
addb
out
xchg
pop
out
push
jp
push
rorl
add
inc
add
add
movsl
ficoml
push
inc
loopne
ljmp
loope
das
pushf
in
aad
xor
add
cmp
sbb
enter
mov
xchg
sub
out
dec
rdpmc
das
or
add
jno
popf
adc
sti
and
pusha
add
pop
dec
cmp
popa
ja
add
pop
xchg
mov
xchg
aad
out
bound
jge
outsb
push
mov
mov
mov
pusha
add
scas
inc
pop
pop
icebp
pop
dec
mov
mov
addr16
mov
jb
dec
or
in
push
aaa
mov
or
popf
and
call
ret
jg
sbb
aam
insb
cs
push
push
xchg
in
cmpsl
xchg
cmc
fs
pop
xor
fimuls
std
addb
subl
push
testl
jmp
sub
or
jae
adcl
bnd
imull
sbb
jno
add
cltd
sbb
add
inc
sbb
fwait
pop
ret
jne
loope
add
inc
je
mov
mov
jp
push
add
cmpsb
fidivrs
sub
cmp
adc
lock
rorl
sbb
pop
adc
sbb
arpl
add
movsb
and
jle
mov
cmp
out
inc
add
lcall
jecxz
mov
xor
mov
add
das
or
add
scas
pop
mov
addb
aas
add
xor
sahf
sahf
ret
push
cmp
sub
inc
add
repnz
pop
insb
in
test
pop
or
and
inc
lcall
fldt
push
cmp
repz
inc
add
in
ja
repnz
outsl
push
insb
inc
add
push
scas
testl
mov
cmp
popf
cmp
add
mov
or
rorl
lock
addr16
jnp
jo
jns
cltd
or
add
es
sti
cltd
movb
addb
pop
sti
lods
divb
add
jmp
cld
push
cmp
pop
jp
leave
push
and
jl
lock
jl
cmp
test
jb
mov
idivb
fidivrs
push
aam
leave
fidivl
xchg
jl
addb
mov
xlat
mov
gs
jmp
jmp
add
fmuls
subl
and
cli
and
push
fidivrl
movb
xchg
jb
mov
sub
ss
push
pop
lea
add
iret
in
ds
add
push
pop
sbb
shrb
out
aam
movsl
xchg
enter
or
xor
mov
sub
cmp
push
jle
pop
mov
jb
add
mov
faddl
sti
sub
outsl
mov
add
mov
adc
jne
gs
faddl
stc
jne
test
imul
fxam
mov
pop
pop
mov
movsl
mov
in
sbb
popa
imul
mov
mov
cmp
fs
mov
lea
sub
and
or
testb
mov
das
iret
call
cmc
xchg
xor
add
xchg
mov
jge
and
xchg
bound
insb
sub
cmp
out
mov
incl
add
repz
add
das
adc
dec
push
rclw
jle
add
repz
xchg
sahf
and
xchg
lods
lahf
add
psubusb
stos
test
enter
add
and
inc
mov
lcall
hlt
movsb
xchg
push
mov
out
xchg
xor
pop
sub
lock
xor
sbb
enter
sarb
aaa
cmc
xor
in
sahf
dec
cwtl
inc
mov
addr16
lret
mov
add
int
adcl
or
jmp
add
mov
fwait
popa
pop
mov
in
or
int3
nop
repnz
jl
fists
enter
jnp
add
js
sarl
inc
add
fcmovnbe
aaa
addb
cmp
pop
dec
mov
into
mov
std
push
sbb
nop
lods
je
pop
xlat
and
sbb
ret
cmp
xchg
ret
push
push
ret
popa
and
inc
add
xchg
pop
rcrl
jbe
pop
ror
inc
ret
push
inc
inc
add
add
xor
push
in
sub
pop
mov
test
add
fsubr
mov
hlt
jne
mov
ret
addr16
dec
scas
imul
mov
add
sbb
add
arpl
cs
pop
enter
add
inc
add
add
push
mov
add
leave
xor
jae
dec
ljmp
mov
sahf
sub
dec
xchg
mov
mov
adc
push
data16
pushf
insb
pop
add
pop
and
and
sbb
icebp
shrb
xchg
insl
jne
dec
jae
sub
sub
push
ret
sbb
loopne
dec
js
and
rorb
xchg
xchg
enter
add
push
sti
ds
add
xchg
and
and
insl
sbb
dec
pop
or
lds
add
clc
sub
test
xchg
mov
inc
jle
xor
mull
cmp
adc
test
push
pop
adc
inc
add
div
repz
mov
push
out
nop
addb
popa
lds
xor
in
sbb
xlat
icebp
cmpsb
sub
inc
add
inc
mov
aaa
push
daa
js
scas
add
inc
add
jb
mov
ss
enter
pop
pop
dec
add
call
test
inc
add
pop
cwtl
jno
add
aad
add
gs
iret
mov
add
and
fidivl
faddl
add
cli
mov
jmp
push
shrb
jo
cmp
dec
sahf
adc
movsb
push
addr16
scas
mov
push
mov
add
and
mov
sub
xor
aas
popf
lcall
xor
cmp
loope
sbb
popa
mov
xchg
dec
mov
add
sub
push
mov
inc
add
add
cld
ret
jne
jmp
cmp
movsl
jno
lcall
add
mov
test
paddusb
or
add
mov
and
push
push
add
sub
add
mov
mov
xor
jns
pop
lret
pop
sub
xor
cmp
sbb
adc
cli
in
adc
outsl
leave
lea
insb
jae
mov
movsl
add
jnp
xor
mov
push
pop
movsb
adc
jns
es
mov
xor
sub
pop
or
mov
add
mov
outsl
xchg
jp
stos
ljmp
ret
sbb
and
cmc
adc
pop
add
out
push
push
add
movsb
sub
cmp
mov
aam
loopne
xchg
call
push
cmp
in
mov
sahf
daa
shrl
jecxz
sbb
aad
aas
or
mov
negb
out
lds
xorl
sub
sbb
and
add
addb
jne
jae
les
or
dec
lcall
in
ljmp
scas
bound
insl
adcl
sbb
pop
xlat
lods
daa
sbb
mov
dec
test
xchg
jp
data16
pop
sub
test
out
fmuls
sbb
adc
dec
xchg
clc
dec
push
xlat
imul
and
clc
cltd
sahf
enter
mov
incl
insl
leave
cli
fadds
pop
imull
cltd
cmp
lea
bound
mov
loopne
dec
sub
or
aas
daa
addr16
cli
or
sbb
arpl
push
push
xchg
popf
push
add
sbb
cmp
add
add
add
mov
dec
push
gs
xchg
xor
pop
xchg
stos
ret
sub
lret
xor
scas
sbb
inc
or
insb
cmp
sarb
and
fisttps
rcll
sbb
popa
jmp
fwait
sbb
inc
add
fstps
cmp
xchg
xchg
mov
cmc
imul
imul
mov
inc
rcll
imul
and
arpl
add
fidivl
pop
dec
dec
aas
mov
ret
pop
pop
cli
and
add
add
outsb
dec
add
add
jmp
lahf
inc
decb
addb
xor
inc
xor
push
icebp
stos
dec
mov
dec
loope
xor
dec
inc
add
xor
jmp
lods
mov
scas
movb
add
addr16
in
cpuid
fldl
mov
addl
in
roll
mov
mov
fs
mov
call
add
addb
test
xchg
jnp
cltd
es
std
and
sub
das
int
push
fcomip
jne
cmp
adc
mov
test
sub
aam
out
sarb
pop
jp
cmpsb
push
lods
repnz
jp
insb
or
jns
shl
and
jae
in
jbe
sbb
mov
jecxz
movsl
jne
and
add
ja
push
xor
cmpsb
add
xor
in
mov
push
in
loop
xchg
pusha
add
out
fldenv
mov
mov
pop
mov
out
leave
push
pop
pop
adc
jb
jecxz
add
or
push
lock
xor
xor
sub
mov
mov
xchg
mov
mov
ja
jno
pop
rol
xor
add
cmc
les
scas
jmp
pop
insb
ret
mov
mov
btr
insl
in
das
inc
inc
add
addb
lret
idivb
xchg
dec
rolb
arpl
mov
into
in
cmp
add
loop
clc
ljmp
mov
into
mov
and
jb
hlt
jp
push
aaa
fistl
xor
out
in
lcall
pop
std
dec
mov
jg
int
cmpsb
jg
les
fsubrl
movsb
mov
mov
xor
push
stos
push
push
xlat
out
shl
rolb
aad
mov
sti
shll
ja
add
pop
mov
add
add
cwtl
dec
std
and
jg
and
rolb
add
fsubrl
insl
sbb
add
rolb
add
enter
push
mov
fcom
loop,pt
add
mov
repz
or
add
or
adc
inc
ret
daa
mov
mov
push
xorl
xor
enter
pusha
add
in
loop
test
jecxz
push
mov
push
pop
rolb
push
iret
divb
data16
mov
adc
jge
xor
insl
test
inc
mov
mov
cld
lret
add
fisubrl
push
iret
mov
add
cmpsb
push
dec
test
pushf
je
sbb
nop
les
hlt
scas
or
pop
lods
jge
xchg
mov
int3
adc
ret
out
cwtl
dec
sub
mov
adc
pop
cmp
mov
mov
xchg
jns
pop
mov
mov
dec
hlt
loope
stc
mov
jns
fwait
or
inc
and
cmp
insb
out
mov
iret
or
add
jp
add
inc
add
add
add
lcall
cltd
cmpsl
ds
add
xlat
mov
dec
les
mov
ret
out
es
mov
test
arpl
loope
arpl
xor
mov
push
sub
js
pop
mov
in
fsts
inc
add
mov
add
xor
jne
testl
nop
jmp
xor
adc
xor
in
insb
cmp
xchg
adc
add
add
inc
add
mov
lods
repz
jbe
inc
add
es
or
rorb
or
mov
call
dec
test
out
ret
fsubrs
jbe
and
fsts
cmp
lahf
es
add
mov
add
or
mov
push
in
leave
test
pop
outsl
cmp
in
dec
mov
xchg
inc
push
jg
call
fcomip
mov
ja
sbb
cmp
hlt
fimull
popa
insl
jl
mov
add
insb
jecxz
mov
and
int3
sub
push
iret
loop
push
stc
lods
out
je
mov
jns
add
not
in
dec
into
xor
ficomps
loopne
cs
outsl
push
mov
clc
repnz
jno
adc
or
xor
in
add
sbb
mov
outsb
push
flds
test
jbe
mov
mull
cmp
pop
scas
cmp
mov
aam
sbb
es
lret
outsl
mov
mov
add
mov
fdivrl
rcrl
jno
stos
ficomps
ss
movb
fisubrs
add
jle
fcmovbe
sub
ds
dec
push
jg
jmp
push
mov
mov
lahf
mov
popa
mov
ja
out
mov
mov
pop
add
js
push
pop
jge
rol
cmpsb
stos
jnp
inc
movb
lret
fsubrl
out
jp
mov
dec
repz
cli
into
sbb
mov
push
inc
add
add
jl
cmp
add
pop
sahf
mov
in
jmp
xchg
add
or
andl
scas
sub
fsubrs
add
dec
pop
es
add
add
push
loopne
movb
pop
adc
fwait
or
add
fdivp
jmp
arpl
in
ficoml
mov
pop
adc
push
sbb
add
movsl
jbe
xor
out
lods
shrl
jno
xor
adc
mov
add
pop
xor
adc
add
mov
mov
mov
or
test
cmp
cmp
stos
xchg
mov
and
aad
jge
mov
dec
mov
and
adc
and
add
inc
mov
jl
test
add
xor
adc
xchg
sbb
notl
repnz
lret
sub
xor
push
cld
mov
sub
out
je
mov
pop
add
aad
xchg
movsl
sbb
xchg
dec
push
ds
aad
push
movsb
dec
mov
movsb
or
sbb
mov
icebp
sbb
cmp
add
fstpl
sub
enter
lea
or
fwait
aad
mov
jl
lret
out
mov
in
adc
loope
cmp
hlt
ret
add
pop
inc
add
mov
mov
xor
jecxz,pn
cmp
mov
add
or
add
ds
outsl
mov
and
out
sbbl
fisubl
jb
mov
movsl
xchg
les
jge
dec
add
aas
sti
sbb
pop
sbb
cmpsb
jmp
push
sti
into
mov
add
scas
in
imul
dec
loopne
inc
out
je
xor
add
add
or
mov
mov
movb
sbb
lahf
cmp
dec
aaa
sub
mov
cltd
push
mov
ret
jne
sub
jle
test
inc
xchg
sub
dec
insl
movsb
or
test
xchg
int
icebp
imul
cmp
and
nop
dec
mov
mov
dec
ficomps
pop
ud0
cmc
pusha
add
jp
psubsw
cmp
push
inc
mov
insl
pop
sub
or
repnz
add
xor
pop
lock
push
cmpsb
jl
cmp
es
sub
mov
add
mov
mov
jp
in
xchg
nop
push
inc
call
cld
push
enter
sub
lret
lcall
mov
mov
mov
in
cmp
xchg
movb
xor
mov
jecxz
sti
ds
push
faddl
xchg
add
loopne
or
jnp
flds
xchg
sbb
notb
arpl
imul
divl
mov
sbb
aad
pusha
add
add
add
loope
add
push
pop
cmpsb
es
add
add
pop
push
hlt
fwait
mov
mov
add
dec
movsb
cltd
imul
iret
push
aad
dec
mov
jnp
lcall
pushf
jns
or
add
icebp
hlt
lods
insl
pop
sub
hlt
jnp
nop
lods
dec
and
mov
arpl
add
cmp
inc
add
nop
sub
dec
aaa
xor
nop
mov
jno
add
jne
or
adc
xor
add
inc
sbb
dec
mov
cmpsl
adc
bnd
icebp
sub
mov
call
movsb
into
jg
pop
sbb
lret
test
mov
add
xchg
or
dec
adc
test
scas
movb
test
pop
mov
dec
pop
lock
mov
outsl
xchg
scas
mov
popf
cld
xchg
mov
into
push
mov
jo
dec
dec
lret
cmp
data16
mov
scas
test
add
cs
mov
mov
int3
mov
ss
push
push
pop
adc
xchg
push
aad
or
cmp
mov
or
faddl
push
xor
and
or
sbb
xor
iret
cwtl
jno
add
cmp
adcl
rorl
mov
jne
push
add
add
daa
lods
ja
outsl
mov
popf
sti
cmp
add
mov
cmp
mov
int3
in
mov
jmp
daa
mov
pop
mov
cwtl
xor
jb
mov
add
xchg
mov
adc
cltd
push
lea
out
andl
inc
add
ljmp
sbb
and
rcll
xchg
dec
mov
rclb
sbb
add
jnp
fcmovnu
cmp
push
pop
in
add
lock
xchg
xchg
aaa
add
mov
popa
or
cmpsb
inc
add
mov
xchg
scas
dec
add
stos
aas
and
sbb
adc
pop
push
pop
xchg
fld
pop
adc
shrb
add
xlat
jns
or
jecxz
cmp
cltd
sbb
mov
adc
jg
xor
xchg
add
sub
adc
js
and
add
inc
add
xor
push
inc
cmp
pop
rolb
sub
addb
cmp
les
repz
aad
xor
addb
or
les
jae
push
rcrb
xor
add
add
cmc
movsb
pop
test
mov
lahf
or
cmp
lahf
out
test
dec
inc
add
movsb
lcall
dec
cmp
sbb
jae
mov
divb
jnp
add
mov
into
push
in
xchg
mov
test
or
in
adc
add
sldt
icebp
lods
mov
mov
addr16
sbb
adc
call
aas
sahf
pushf
sbb
out
dec
jae
cmpsb
mov
mov
cmp
lahf
in
xor
sbb
inc
push
out
lock
and
rorl
or
mov
imul
jge
xchg
mov
inc
add
ja
add
jg
sbb
aad
push
dec
scas
adc
cmp
scas
add
pop
xor
jb
xor
sbb
mov
push
add
inc
push
mov
ret
mov
dec
mov
int3
add
lahf
jge
test
push
mov
shl
jge
xchg
ret
xchg
aam
push
addb
jmp
cmp
imul
add
adc
rcr
or
jno
add
sarb
jl
pop
or
add
sbb
cs
sbb
mov
push
movsl
data16
xchg
mov
jp
inc
add
mov
addr16
push
popf
adc
mov
xchg
pusha
add
bnd
lcall
shrl
aaa
mov
push
sub
adc
inc
add
js
movsb
ds
mov
and
lret
js
cld
xor
cli
add
cmp
or
sub
aaa
or
jae
mov
or
insl
mov
push
mov
cmp
add
add
adc
mov
push
fsts
push
add
outsb
cmp
pop
mov
jne
or
jecxz
add
add
lea
mov
push
pop
pop
cmp
add
add
push
daa
sbb
and
pushf
mov
adc
jp
sub
xor
out
and
jl
addb
inc
addb
test
and
pusha
add
cs
imul
xor
scas
bound
xlat
add
adc
data16
push
stos
fnclex
sti
mov
mov
sub
xchg
icebp
nop
mov
mov
lds
rcr
int
xchg
rolb
mov
pop
inc
iret
mov
push
sub
mov
push
pop
sarl
repnz
aam
add
mov
add
jnp
xchg
lret
inc
inc
mov
mov
push
int
jbe
inc
pop
pop
sbb
jo
dec
dec
mov
add
ja
add
sarb
mov
add
and
lcall
movb
rcr
sbb
jno
dec
mov
popa
outsb
pop
xor
or
es
movb
outsl
inc
dec
lahf
in
mov
nop
jo
mov
jns
push
mov
add
stc
dec
jno
cmp
xchg
mov
pop
fs
and
jno
test
mov
jg
fnsetpm(287
scas
pop
lock
je
shrb
xchg
mov
pop
stos
ret
mov
fists
pop
mov
cmp
cld
outsl
adc
xor
xchg
inc
add
sarb
rcll
or
out
push
test
xlat
fisttps
add
fsts
dec
mov
cmp
jecxz
or
mov
inc
addl
add
int
cmp
lds
mov
xchg
xor
add
pusha
add
js
loope
jbe
jne
jg
repz
lret
fucom
cli
daa
pop
inc
mov
insb
push
or
or
mov
add
dec
pop
sbb
out
fsubl
fsubr
cmp
fwait
lahf
iret
pusha
add
push
pop
imulb
shr
xor
mov
add
fwait
pop
mov
sbb
movsl
mov
adc
add
inc
add
add
and
add
pop
stc
nop
jb
xchg
mov
push
aas
decl
stc
nop
jb
nop
push
scas
mov
inc
ds
nop
cld
jmp
add
add
mov
cwtl
inc
stc
nop
jb
add
outsb
add
mov
stc
nop
jb
add
pop
push
mov
xchg
ret
inc
scas
add
lcall
jb
iret
cmp
inc
mov
jb
add
jge
cmpl
jmp
push
xor
inc
mov
lds
nop
jb
jmp
push
orb
nop
add
dec
push
push
mov
xchg
ret
ret
cs
nop
cld
jmp
add
add
mov
pushl
stc
nop
jb
add
aad
mov
stc
nop
jb
movb
mov
stc
nop
jb
add
pop
test
nop
cld
jmp
add
push
call
add
sqrtps
nop
jb
add
add
insl
add
cmp
nop
jb
add
xchg
add
jg
mov
nop
cld
jmp
xchg
mov
add
nop
jb
add
jmp
cld
jmp
jmp
add
stc
nop
jb
add
add
mov
push
mov
xchg
ret
add
loope
pop
push
mov
xchg
ret
pop
add
add
int3
inc
push
mov
xchg
ret
insl
add
scas
imul
add
nop
jb
add
stos
xor
stc
nop
jb
add
test
push
mov
add
add
inc
add
mov
ljmp
insl
or
add
add
add
add
push
loopne
mov
jb
popa
add
mov
stc
nop
jb
icebp
mov
insl
push
nop
cld
jmp
add
add
add
stc
nop
jb
add
mov
sbb
mov
stc
nop
jb
insl
mov
sub
jb
jle
lcall
nop
jb
outsb
dec
test
loopne
mov
xchg
ret
pop
add
add
inc
jmp
out
mov
add
pop
add
nop
cld
jmp
add
add
call
ror
push
mov
xchg
ret
or
mov
insb
insb
stc
nop
jb
pop
call
popa
add
nop
jb
add
add
push
mov
xchg
ret
movb
test
imul
add
fadds
add
add
xor
stc
nop
jb
cmp
jmp
add
aad
fmull
jmp
jae
data16
add
inc
cmpsb
inc
add
mov
stc
nop
jb
add
inc
add
nop
jb
mov
cmpsl
add
lea
nop
cld
jmp
add
mov
nop
jb
add
or
stc
nop
jb
add
jle
add
cmpsb
push
jne
lods
stc
nop
jb
jmp
inc
add
add
stc
nop
jb
xchg
xchg
add
add
mov
xchg
ret
test
call
add
stc
nop
jb
add
outsb
add
xchg
js
movb
add
stc
nop
jb
rorl
nop
jb
popl
dec
icebp
add
inc
stc
inc
add
add
add
stc
nop
jb
xor
add
dec
push
stc
nop
jb
add
add
xchg
incb
cmp
add
add
add
dec
add
add
sub
inc
add
fadd
sub
add
stc
nop
jb
add
xorb
add
add
cmp
nop
cld
jmp
add
jle
push
xchg
std
pushl
push
mov
xchg
ret
incb
xchg
and
in
mov
stc
nop
jb
add
push
mov
xchg
ret
call
ret
xor
stc
nop
jb
mov
test
mov
push
mov
xchg
ret
add
lcall
stc
nop
jb
insl
add
fdivs
popf
mov
stc
nop
jb
add
iret
mov
jb
ds
test
nop
jb
add
push
stc
nop
jb
mov
add
mov
or
stc
nop
jb
nop
mov
cmp
nop
cld
jmp
add
add
mov
add
loop
scas
test
add
testl
nop
cld
jmp
add
ljmp
xor
sbb
push
adc
add
inc
add
movb
add
dec
add
nop
jb
add
call
mov
add
nop
jb
dec
aaa
add
adc
jne
and
push
mov
xchg
ret
add
add
negl
push
mov
xchg
ret
xchg
cmp
add
pop
jne
stc
nop
jb
add
jg
xor
incl
cmp
shr
nop
cld
jmp
fadds
jmp
test
xchg
faddl
jb
add
shrl
cld
jmp
add
jg
lret
mov
xchg
ret
add
add
gs
nop
jb
rolb
cmp
jb
outsb
mov
stc
nop
jb
add
add
push
pop
outsb
dec
mov
stc
nop
jb
test
out
not
stc
nop
jb
add
add
shll
addb
pop
movb
or
nop
jb
xchg
add
roll
push
mov
add
stos
add
xor
add
add
add
mov
stc
nop
jb
add
add
mov
stc
nop
jb
icebp
mov
popl
imul
stc
nop
jb
add
add
dec
add
data16
nop
jb
pop
add
dec
mov
stc
nop
jb
add
fadds
sarl
sbb
nop
jb
lcall
xchg
stc
nop
jb
pop
inc
nop
dec
jg
add
ret
push
jmp
jne
add
stc
nop
jb
call
dec
cmp
nop
jb
add
add
bound
fisttpl
test
pop
add
stc
nop
jb
pop
fimuls
jmp
add
add
cmp
jmp
nop
cld
jmp
add
add
mov
nop
jb
add
outsb
out
jle
xorl
mov
nop
cld
jmp
add
addb
fcoml
nop
jb
popa
call
rolb
dec
push
mov
xchg
ret
or
add
mov
stc
nop
jb
test
pop
movzwl
stc
nop
jb
xor
add
push
mov
xchg
ret
out
pop
data16
add
xchg
xchg
add
in
sbb
add
or
lcall
push
mov
xchg
ret
add
add
scas
stc
nop
jb
add
rorl
push
stc
nop
jb
fcomps
add
add
add
adc
add
add
adc
push
push
xchg
mov
in
cmp
push
xchg
inc
add
dec
mov
jb
test
add
jmp
out
push
stc
nop
jb
nop
inc
add
hlt
in
add
inc
push
mov
xchg
ret
mov
rolb
fisttpll
test
add
add
nop
jb
add
mov
cmpb
incb
lcall
outsl
popa
fs
nop
jb
scas
add
outsl
push
push
mov
xchg
ret
add
aaa
sub
add
stc
nop
jb
xchg
add
add
stc
nop
jb
add
fwait
push
push
mov
xchg
ret
add
add
push
repnz
pop
stc
nop
jb
test
ds
xchg
lcall
xchg
inc
add
jmp
rolb
nop
jb
shlb
jo
nop
cld
jmp
add
iret
add
add
jb
pop
nop
xchg
add
cwtl
add
stc
nop
jb
roll
add
add
aaa
mov
mov
stc
nop
jb
xchg
add
dec
sub
nop
jb
push
or
xchg
push
fdivr
nop
jb
fadds
add
test
cld
jmp
ret
mov
mov
xchg
ret
add
xchg
push
les
inc
add
mov
stc
nop
jb
add
add
stc
nop
jb
aam
call
mov
cs
nop
jb
add
pop
cld
push
mov
xorb
jmp
lods
bound
push
push
add
inc
xchg
adc
or
mov
jae
add
ret
popa
dec
mov
push
mov
xchg
ret
icebp
add
aaa
pop
daa
jmp
stc
nop
jb
push
ret
adc
mov
stc
nop
jb
adc
add
add
nop
jb
pop
insl
addb
je
stc
nop
jb
rolb
cld
jmp
add
jle
icebp
add
xchg
ficoml
nop
jb
nop
cmp
xchg
insl
add
rorl
cmp
stc
nop
jb
add
lcall
jb
and
xor
aaa
push
lret
mov
xchg
ret
lcall
jne
nop
cld
jmp
popa
and
inc
add
or
jb
add
push
stc
nop
jb
add
add
add
stc
nop
jb
dec
push
add
nop
jb
cmp
cmpsl
and
xchg
mov
stc
nop
jb
add
push
adc
stos
push
push
mov
xchg
ret
add
add
movsb
stos
jne
stc
nop
jb
add
hlt
adc
nop
cld
jmp
mov
push
add
add
push
add
stc
nop
jb
add
nop
fmull
jb
cmpsl
add
add
add
int3
je
nop
cld
jmp
sar
std
mov
stc
nop
jb
test
add
mov
nop
jb
fcoms
nop
jb
jmp
add
nop
jb
shlb
incb
add
cmpsb
inc
add
fiaddl
xchg
ret
fadds
mov
sar
mov
xchg
ret
add
mov
cld
jmp
outsb
add
add
add
and
add
rep
stc
nop
jb
lcall
mov
push
out
add
data16
mov
add
stc
nop
jb
add
mov
jb
inc
add
add
add
cmp
stc
nop
jb
insl
iret
cmp
fdivs
sbb
loope
add
jle
add
ja
mov
stc
nop
jb
add
pop
stc
nop
jb
add
call
jmp
inc
add
add
adc
mov
push
mov
xchg
ret
add
clc
dec
inc
nop
cld
jmp
out
call
mov
xchg
ret
popl
add
push
push
stc
nop
jb
push
test
adc
add
add
add
nop
jb
jae
call
stc
nop
jb
add
add
add
fildl
xchg
ret
data16
dec
movb
add
push
mov
xchg
ret
add
jmp
scas
push
add
add
mov
jmp
add
add
add
or
xchg
add
stc
nop
jb
scas
xchg
xchg
fisttpl
mov
adc
nop
jb
add
add
idiv
stc
nop
jb
scas
jmp
mov
nop
cld
jmp
or
jmp
add
decl
adcb
add
add
mov
xchg
ret
add
mov
xchg
ret
popl
adc
or
nop
cld
jmp
leave
xchg
jmp
stc
nop
jb
call
add
insb
xchg
stc
nop
jb
add
leave
add
pop
add
dec
or
nop
jb
add
lea
stc
nop
jb
add
mov
cmc
pusha
add
cld
jmp
rcrl
cltd
add
push
mov
xchg
ret
add
add
in
popa
stc
nop
jb
adc
mov
lcall
nop
cld
jmp
cmp
add
sar
jb
add
aaa
lcall
sub
nop
jb
add
data16
pop
jmp
stc
nop
jb
jle,pt
push
push
mov
xchg
ret
popl
jae
push
addb
or
mov
xchg
ret
xchg
add
add
mov
xchg
ret
cs
add
cmpl
nop
cld
jmp
add
add
out
push
push
mov
xchg
ret
mov
rolb
add
nop
cld
jmp
adc
add
sub
mov
jb
add
leave
add
nop
jb
add
xor
add
mov
stc
nop
jb
mov
add
pop
adc
jb
add
add
push
push
mov
xchg
ret
dec
jg
or
lods
stc
nop
jb
add
mov
data16
call
stc
nop
jb
rolb
xchg
xor
adc
nop
jb
lcall
mov
push
filds
xchg
ret
add
inc
and
nop
jb
push
insl
add
pop
out
xor
stc
nop
jb
jae
add
add
mov
push
push
mov
xchg
ret
add
add
add
out
stc
nop
jb
add
xorl
subl
push
mov
xchg
ret
jmp
sahf
jmp
stc
nop
jb
add
inc
lcall
icebp
inc
add
dec
add
mov
nop
cld
jmp
add
add
add
scas
sub
in
mov
add
add
sbb
pop
pop
jl
xorl
stc
nop
jb
add
add
sahf
dec
stc
nop
jb
add
jle
iret
xchg
popf
imul
stc
nop
jb
mov
add
add
imul
sbb
add
test
inc
add
in
mov
nop
cld
jmp
add
aaa
jg
lock
nop
cld
jmp
dec
add
jg
fsubrs
adc
stc
nop
jb
adc
add
loopne
add
stc
nop
jb
dec
aaa
add
cmpsl
movsb
or
sti
idiv
stc
nop
jb
dec
mov
nop
cld
jmp
add
mov
push
stc
nop
jb
add
fadds
add
add
div
stc
nop
jb
add
fadds
icebp
stc
nop
jb
pop
add
scas
ret
cs
jb
add
aaa
xchg
add
mov
stc
nop
jb
add
insl
iret
xchg
cmp
or
stc
nop
jb
and
aam
scas
add
push
add
add
nop
cld
jmp
add
add
push
nop
cld
jmp
and
add
mov
stc
nop
jb
test
add
icebp
rorb
stc
nop
jb
add
mov
stc
nop
jb
add
push
add
jae
cmp
nop
cld
jmp
roll
cs
subb
add
add
mov
stc
nop
jb
add
leave
call
outsb
and
cld
jmp
add
jle
add
pop
stc
nop
jb
push
add
stos
push
stc
nop
jb
push
aaa
add
jg
popa
push
mov
nop
jb
add
add
roll
es
mov
dec
stc
nop
jb
out
add
add
fimull
jmp
rcrl
jmp
xchg
fiadds
and
and
dec
add
inc
add
jb
jle
xchg
add
add
stc
nop
jb
pushw
mov
add
out
mov
stc
nop
jb
push
mov
fisttpl
jb
lcall
mov
stc
nop
jb
add
rep
stc
nop
jb
push
nop
cmp
lcall
stc
nop
jb
and
test
loopne
add
pusha
push
mov
xchg
ret
out
dec
add
mov
stc
nop
jb
add
jne
nop
cld
jmp
push
jae
push
add
nop
jb
test
add
add
mov
nop
cld
jmp
add
addr16
call
stc
nop
jb
add
add
nop
jb
pop
add
add
mov
xchg
ret
inc
fcomps
pop
add
mov
stc
nop
jb
add
push
jb
inc
add
add
add
jb
add
scas
add
add
movb
add
add
nop
jb
test
add
add
mov
stc
nop
jb
lcall
or
stc
nop
jb
add
rcrl
mov
push
mov
xchg
ret
lcall
jb
add
add
jmp
add
and
cld
jmp
add
add
mov
add
push
mov
xchg
ret
pop
add
loop
xor
stc
nop
jb
add
scas
enter
subb
add
add
dec
fdivrs
pusha
stc
nop
jb
add
add
push
stc
nop
jb
inc
add
add
mov
lret
call
stc
nop
jb
popa
popa
test
add
nop
cld
jmp
xor
push
add
add
and
sub
test
in
stc
nop
jb
ret
popa
push
arpl
jmp
stc
nop
jb
add
or
nop
jb
inc
push
add
push
mov
xchg
ret
aaa
add
mov
mov
stc
nop
jb
add
add
mov
add
nop
jb
add
dec
xchg
lods
call
stc
nop
jb
add
cmp
mov
out
add
add
add
rolb
cld
add
push
mov
xchg
ret
mov
mov
and
stc
nop
jb
add
lea
cld
jmp
add
add
sbb
repz
mov
xchg
ret
add
pop
aaa
ret
rcr
mov
add
or
cmp
dec
add
or
outsb
cld
incl
add
add
xchg
jle
add
nop
jb
ret
popa
iret
popa
add
pusha
add
ret
stc
nop
jb
add
insl
jmp
mov
xchg
ret
add
test
pop
nop
cld
jmp
push
add
shlb
call
stc
nop
jb
add
mov
xchg
jmp
mov
xchg
ret
add
add
cli
call
stc
nop
jb
fadds
movb
jb
nop
add
cs
push
mov
xchg
ret
add
mov
rclb
incl
add
mov
adc
cld
jmp
add
rolb
out
sub
add
pushl
add
mov
jb
add
add
rolb
push
pop
ret
mov
call
add
jge
test
nop
jb
out
push
jl
sbb
nop
jb
scas
add
insl
lret
rolb
stc
nop
jb
add
nop
stc
mov
stc
nop
jb
add
cmp
xorb
add
leavew
dec
leave
test
jno
mov
stc
nop
jb
cmp
je
add
stc
nop
jb
outsb
fsubs
cltd
push
stc
nop
jb
add
jmp
leave
outsb
cmpl
nop
cld
jmp
test
rcrb
add
nop
cld
jmp
inc
add
cmp
jg
stc
nop
jb
rolb
add
inc
add
mov
push
mov
xchg
ret
scas
add
outsl
mov
stc
nop
jb
add
test
jle
inc
add
dec
adc
sub
inc
add
add
stc
nop
jb
out
lcall
add
stc
nop
jb
mov
gs
test
nop
jb
add
stc
sub
stc
nop
jb
out
mov
stc
nop
jb
dec
scas
cmpsl
sub
popa
add
cld
jmp
dec
dec
add
xchg
incb
mov
add
stc
nop
jb
leave
add
pop
add
loop
mov
jmp
sub
jmp
or
stc
nop
jb
add
ror
cs
in
stc
nop
jb
add
and
push
mov
xchg
ret
jg
mov
add
add
inc
add
add
addb
xor
stc
nop
jb
add
jg
insl
add
outsl
call
nop
cld
jmp
leave
cmp
push
mov
jb
add
add
and
nop
cld
jmp
fadds
rcrb
ds
stc
nop
jb
mov
add
add
cmp
nop
cld
jmp
jg
add
inc
mov
add
nop
jb
add
jle
es
stc
nop
jb
cmp
mov
xchg
ret
jg
fadds
jle
xor
push
mov
xchg
ret
add
rcl
imul
cmp
nop
jb
add
add
add
jnp
jp
jbe
stc
nop
jb
add
add
push
nop
cld
jmp
add
add
cmp
add
movb
mov
stc
nop
jb
xor
incb
add
mov
in
add
dec
pop
or
nop
cmp
mov
xchg
ret
add
ret
iret
add
stc
nop
jb
add
test
add
stc
nop
jb
xor
add
push
stos
mov
push
mov
xchg
ret
jle
add
test
stc
nop
jb
jle
sbb
mov
sub
div
inc
add
add
mov
add
add
add
nop
add
add
add
push
loop
lea
stc
nop
jb
popl
add
xor
add
stc
nop
jb
add
mov
push
mov
xchg
ret
add
leave
outsl
mov
nop
cld
jmp
add
popl
testl
lret
out
add
add
pop
call
stc
nop
jb
add
add
sti
add
add
inc
jae
les
xor
and
stc
nop
jb
add
add
cmp
nop
cld
jmp
add
add
push
add
cld
jmp
out
and
add
rcl
xor
push
mov
xchg
ret
jle
or
dec
add
stc
nop
jb
mov
std
push
push
mov
xchg
ret
xchg
add
add
pop
push
nop
cld
jmp
aaa
leave
add
mov
or
nop
cld
jmp
call
cmpsl
sbb
inc
stc
nop
jb
add
add
or
stc
nop
jb
xor
inc
mov
mov
xchg
ret
jg
inc
cs
stc
nop
jb
jae
inc
add
pop
add
idivl
dec
cmp
nop
jb
scas
jmp
ds
xor
push
nop
cld
jmp
add
iret
out
inc
test
outsl
mov
push
mov
xchg
ret
add
iret
dec
imul
add
jmp
cltd
add
push
mov
xchg
ret
add
sbb
test
add
add
nop
jb
xchg
and
mov
nop
jb
add
lods
ret
stc
nop
jb
add
jmp
addr16
or
stc
nop
jb
add
inc
and
stc
nop
jb
add
pop
test
dec
jmp
stc
nop
jb
add
rep
nop
cld
jmp
dec
add
add
xchg
outsb
test
movsb
push
mov
xchg
ret
ret
add
add
mov
push
mov
xchg
ret
incb
ret
xor
add
nop
jb
mov
and
add
pop
push
mov
xchg
ret
iret
scas
add
add
sub
nop
cld
jmp
add
lcall
jb
scas
add
add
jle
or
sbb
add
add
jae
call
rcrb
jne
push
mov
xchg
ret
rclb
cld
jmp
test
add
mov
call
xor
decl
inc
add
fldt
stc
nop
jb
add
mov
add
jb
add
and
roll
add
push
mov
adc
nop
jb
iret
lcall
nop
cld
jmp
scas
add
add
fsubrs
sub
stc
nop
jb
icebp
cmp
and
in
rep
stc
nop
jb
add
push
iretw
add
mov
stc
nop
jb
iret
mov
jne
stc
nop
jb
add
xchg
add
push
mov
xchg
ret
aam
add
mov
stc
nop
jb
lcall
sub
cmp
inc
add
mov
jne
push
mov
xchg
ret
add
pop
inc
sti
push
stc
nop
jb
add
lods
movzwl
stc
nop
jb
add
add
das
mov
nop
cld
jmp
test
test
add
pop
movzwl
nop
cld
jmp
nop
add
data16
pop
idiv
stc
nop
jb
jmp
mov
cld
jmp
add
add
add
outsb
jne
stc
nop
jb
lcall
cmp
rclb
dec
iret
add
add
mov
push
mov
xchg
ret
add
insl
add
inc
add
xor
nop
jb
inc
xchg
scas
add
pop
add
jmp
stc
nop
jb
add
mov
xchg
ret
incb
repnz
call
add
test
fdivrs
stc
nop
jb
call
call
lock
nop
jb
add
leave
add
stc
nop
jb
test
fdivs
dec
jne
stc
nop
jb
add
sub
jbe
stc
nop
jb
add
insl
mov
add
nop
jb
dec
add
add
stc
nop
jb
add
lds
adc
inc
add
add
sahf
movzwl
stc
nop
jb
popa
add
add
ss
sub
test
call
jb
add
or
xor
decl
add
add
sub
jb
add
xchg
jae
and
xchg
xchg
sbbl
push
mov
xchg
ret
outsb
test
and
lods
xor
push
mov
xchg
ret
jle
popa
xchg
cmp
incb
xchg
ret
add
mov
and
stc
nop
jb
jmp
push
mov
mov
nop
cld
jmp
add
inc
mov
add
push
nop
cld
jmp
add
jg
lcall
or
add
nop
jb
add
mov
jb
lcall
add
add
push
mov
xchg
ret
dec
outsb
add
mov
stc
stc
nop
jb
push
add
add
scas
test
push
mov
xchg
ret
add
add
add
cld
incb
xchg
ret
add
add
cld
jmp
xchg
add
cmpsl
add
cmp
nop
jb
call
fucomip
mov
stc
nop
jb
add
jno
mov
mov
xchg
ret
add
fisttpll
adc
incl
add
xchg
cmp
sbb
dec
cmp
nop
jb
add
stc
test
nop
cld
jmp
add
ljmp
mov
lcall
mov
pop
cmp
out
jo
and
push
mov
xchg
ret
scas
nop
shll
loopne
stc
nop
jb
mov
push
nop
cld
jmp
insl
xchg
lcall
mov
stc
nop
jb
add
ret
adc
xchg
cmpl
enter
xchg
add
push
push
mov
xchg
ret
xchg
add
add
fisubs
stc
nop
jb
dec
add
add
stos
xchg
stc
nop
jb
jle
add
push
aam
push
push
mov
xchg
ret
dec
insl
jg
add
add
stc
nop
jb
add
add
add
add
pop
testl
and
test
nop
jb
lcall
stc
inc
add
add
popa
dec
xor
nop
cld
jmp
add
scas
insl
jecxz
dec
nop
cld
jmp
jle
jg
mov
push
stc
nop
jb
add
add
jmp
icebp
inc
add
jae
call
in
add
fiaddl
add
add
or
and
mov
xchg
ret
cmp
jle
rep
stc
nop
jb
xchg
add
inc
add
data16
xchg
ret
add
fcom
push
imul
nop
jb
push
add
leave
add
add
ret
jo
pop
push
stc
nop
jb
add
push
add
lods
stc
nop
jb
add
pop
push
addb
push
stc
nop
jb
add
xchg
or
mov
cld
jmp
add
lcall
add
push
stc
nop
jb
add
add
ret
add
jb
jae
aaa
insl
push
iret
add
add
stc
nop
jb
add
xor
fdivrs
mov
xchg
ret
add
mov
xchg
ret
jmp
dec
push
push
mov
xchg
ret
add
jg
ret
add
stc
nop
jb
pop
jg
sarb
nop
jb
add
add
lret
adc
mov
inc
add
dec
iret
mov
loopne
add
add
add
test
nop
jb
jmp
into
test
push
mov
xchg
ret
out
add
and
imul
leave
jmp
fadds
dec
xor
stc
nop
jb
jmp
adc
popa
inc
pop
and
popf
add
stc
nop
jb
jmp
add
add
stc
nop
jb
xchg
dec
add
test
repnz
stc
nop
jb
add
outsl
nop
nop
cld
jmp
or
jmp
and
out
pop
cmpl
nop
cld
jmp
cmpsl
pop
pushf
pop
push
mov
xchg
ret
cmp
add
stc
nop
jb
movb
add
mov
stc
nop
jb
icebp
add
pop
pop
adc
nop
xchg
les
pop
mov
stc
nop
jb
add
add
add
add
lods
push
push
mov
xchg
ret
add
adc
pop
jns
or
stc
nop
jb
shl
push
add
adc
nop
jb
add
pop
stc
nop
jb
add
add
add
inc
add
and
stc
nop
jb
add
lcall
cld
jmp
inc
add
ret
add
jge
stos
stc
nop
jb
insl
cmpsl
mov
inc
push
mov
xchg
ret
add
add
cmpsl
adc
pop
push
mov
xchg
ret
pop
add
add
add
nop
cld
jmp
add
outsb
and
nop
cld
jmp
xchg
data16
pop
xchg
icebp
mov
js
nop
cld
jmp
mov
or
jb
add
jmp
add
push
nop
cld
jmp
add
popa
add
pusha
stc
nop
jb
add
add
stc
nop
jb
popa
add
xor
push
mov
xchg
ret
add
pushw
insb
insb
add
nop
jb
add
add
xchg
movsl
fldcw
push
mov
xchg
ret
test
add
add
nop
jb
add
mov
jb
mov
add
nop
xchg
jmp
out
stc
nop
jb
call
sti
push
stc
nop
jb
add
xchg
roll
xchg
dec
dec
nop
cld
jmp
mov
adc
icebp
cmc
push
dec
adc
dec
lock
add
cs
fwait
mov
nop
cld
jmp
pop
add
add
iret
inc
jb
ds
push
mov
xchg
ret
add
jmp
dec
mov
stc
nop
jb
add
mov
stc
nop
jb
add
repnz
adc
pushl
scas
outsl
mov
stc
nop
jb
test
mov
nop
jb
cmp
xor
ds
xchg
mov
dec
idiv
incl
add
add
cs
stc
nop
jb
add
mov
stc
nop
jb
add
jmp
mov
stc
nop
jb
add
and
xorb
incl
add
jmp
mov
add
nop
jb
push
mov
add
add
stc
nop
jb
adc
add
pop
and
std
sub
push
mov
xchg
ret
movb
add
mov
stc
nop
jb
mov
xchg
mov
fists
lcall
add
test
nop
cld
jmp
pop
add
outsb
outsb
imul
stc
nop
jb
add
pushw
inc
push
add
inc
or
nop
jb
popa
add
add
push
jle
stc
nop
jb
icebp
add
add
jge
nop
cld
jmp
jg
cmp
inc
add
nop
cld
jmp
call
add
push
sbb
cld
jmp
jmp
add
jno
xchg
dec
add
stc
nop
jb
data16
cmp
xchg
loopne
bound
push
cmc
push
mov
jb
and
popl
jae
nop
cld
jmp
mov
add
mov
nop
cld
jmp
add
ret
add
add
or
nop
jb
add
rclb
push
incl
xchg
ret
add
push
add
push
stc
nop
jb
add
cmp
push
stc
nop
jb
iret
add
add
add
cmp
nop
jb
iret
add
add
push
mov
xchg
ret
adc
add
mov
ret
push
push
mov
xchg
ret
mov
popa
nop
cld
jmp
add
aaa
cmp
dec
je
stc
nop
jb
lcall
push
mov
xchg
ret
add
pop
fdivs
sar
jb
add
lock
test
fdivrp
stc
nop
jb
add
stc
nop
jb
nop
mov
inc
mov
and
stos
push
stc
nop
jb
jmp
roll
test
loop
nop
cld
jmp
push
add
add
inc
popf
shl
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
add
xor
outsl
pop
push
mov
xchg
ret
add
cmp
mov
ds
push
add
mov
sbb
addr16
fmuls
stos
mov
mov
push
add
mov
cltd
rol
lock
sbb
mov
addb
add
push
add
dec
in
lock
loopne
add
leave
fdivrl
push
scas
outsl
push
jmp
addb
dec
int3
xchg
mov
rolb
mov
push
fistpl
icebp
or
sti
push
das
pop
loopne
add
mov
jmp
mull
add
pusha
add
imull
push
insb
pop
fnstenv
loope
pop
iret
mov
fiaddl
repnz
sbb
xlat
cmp
xchg
cmpsl
loop
add
xchg
test
jns
xchg
cmp
inc
jg
add
lret
sub
add
movsl
add
inc
jg
cmp
push
negb
mov
lahf
or
jp
cmc
addb
xor
adc
repz
sbb
ficoml
adc
fmuls
push
add
jp
xor
scas
jecxz
mov
mov
cld
rclb
out
mov
imul
or
add
sbb
shrb
test
rep
sarl
dec
mov
ljmp
aad
cli
cmp
add
add
sahf
pushl
push
push
pop
shll
shld
push
add
push
cmc
loopw
in
cmp
xchg
loop
jle
add
cld
lods
int3
sub
add
pop
sub
add
cmpsl
mov
out
jno
and
addr16
mulw
addb
add
hlt
daa
movb
test
adc
cwtl
mov
xchg
frstor
std
negb
add
add
sti
es
in
jo
or
mov
cmp
add
sub
mov
inc
in
dec
test
scas
mov
repz
xchg
std
pop
jecxz
lods
adc
aad
std
stos
daa
xchg
notb
add
fsubr
imul
movl
lea
xchg
dec
or
clc
out
cmp
or
cltd
pop
push
inc
mov
add
inc
dec
ds
add
mov
xchg
inc
mov
lods
jg
mov
neg
push
xchg
into
push
push
vrcpps
xchg
dec
xchg
cltd
leave
out
mov
xor
loope
jne
les
mov
mov
sub
cmp
xbegin
imul
or
stc
ja
xlat
jg
out
imul
sahf
mov
push
out
sub
inc
hlt
push
aaa
push
cmc
jb
stc
cmp
add
adc
outsl
push
xchg
rorl
into
or
rcll
add
test
sahf
sub
call
cld
jle
fsubrl
jb
push
add
mov
add
mov
fwait
jb
rol
inc
pop
out
outsb
cmp
add
lods
xor
ljmp
mov
dec
mov
add
mov
pop
data16
mov
jg
add
pop
je
or
popa
xchg
sub
outsl
mov
and
das
mov
pusha
add
cmp
add
pop
hlt
movsl
cwtl
adc
jb
xchg
lea
add
mov
das
sahf
mov
add
pushf
movb
idivl
jmp
add
mov
int3
fstpl
adc
lea
lret
out
cmc
popf
inc
add
push
adc
cmc
bnd
stc
out
in
mov
or
push
imul
test
sahf
ficompl
movb
js
inc
movb
lods
push
push
adc
sub
stc
test
cmp
lea
mov
cs
add
mov
cli
shll
mov
cwtl
adc
xor
call
inc
add
add
loope
push
adc
imul
ficompl
mov
pop
and
or
push
cltd
cmp
sbb
or
cld
cmp
fistps
leave
out
ja
push
sub
dec
xor
hlt
dec
out
clc
call
mov
mov
add
mov
sbb
add
add
and
add
adc
lds
dec
sub
pushf
jp
sbb
outsb
mov
fisubl
xor
in
movsb
jns
sbb
add
add
cmp
imul
hlt
inc
idiv
jo
repnz
sbb
dec
pop
inc
push
aaa
pop
inc
add
xchg
inc
add
cmpsl
or
jmp
dec
mov
push
pusha
add
lret
add
add
stos
ljmp
push
add
into
dec
and
call
fsubl
repnz
pop
rcrb
inc
add
add
icebp
pop
cltd
fists
sbb
mov
fwait
push
xchg
comiss
and
lret
sbb
into
aas
xor
xor
add
test
xchg
mov
jne
adc
ret
mov
mov
xor
imul
scas
into
push
pop
ss
ss
je
add
pop
imul
insb
ret
js
xchg
sbb
adc
or
push
adc
mov
or
mov
pop
cld
dec
xor
mov
add
icebp
sub
movsb
xor
fwait
mov
mov
daa
dec
decb
scas
inc
add
mov
pop
xor
xor
pop
jnp
lods
aam
stc
inc
add
andl
scas
ror
xor
xor
shlb
loope
xchg
outsb
dec
and
add
jns
mov
insb
jns
insl
add
cmp
mov
adc
add
jne
or
mov
idivl
loopne
mov
pop
fwait
pop
mov
rorl
sbb
lcall
rcrl
add
pop
std
leave
test
lret
mov
jge
int
dec
jbe
sub
push
icebp
outsl
pop
inc
add
add
test
loop
jae
pop
cmpl
add
add
push
cmp
mov
sub
loopne
imul
cmp
fwait
adc
scas
mov
ds
fistpl
loope
mov
dec
loopne
loope
pop
pop
add
loopne
repz
inc
add
cmp
or
jg
outsb
mov
push
and
mov
mov
push
mov
cmp
mov
stos
movsb
or
movsb
inc
inc
add
test
pop
adc
lds
push
add
addb
add
pop
sahf
push
add
inc
loopne
add
sub
out
sub
ret
xchg
popf
mov
push
mov
jns
es
imul
pop
lahf
cmp
shll
xor
add
mov
dec
sub
stos
fbld
out
cs
mov
mov
xor
cwtl
xchg
mov
adc
adc
add
cmp
cmp
mov
mov
xor
test
xor
pop
call
call
das
sub
icebp
adc
sbb
dec
or
stc
shrb
sub
mov
xchg
ja
stos
adc
pushf
pusha
add
mov
repz
add
inc
push
pop
push
fsts
mov
lcall
push
lret
mov
push
ljmp
fsubrl
ror
cmp
ret
xor
cmp
ljmp
fimuls
or
jo
jne
add
loopne
mov
jecxz
add
cmp
int
and
push
mov
xchg
add
and
iret
fmul
and
pusha
add
bound
mov
mov
addb
stos
cmp
movsl
xchg
sub
add
loope
lock
push
jnp
mov
sbbl
les
rolb
mov
add
add
push
aaa
mov
add
sub
fstps
add
js
stos
mov
addb
jbe
fadds
mov
fucomp
sub
cmp
cmpsl
cmp
and
dec
jno
hlt
lret
lods
push
add
pop
jne
sbb
test
ret
lahf
jno
xchg
xchg
fnstsw
add
xchg
in
lea
out
imul
and
jge
sub
fisubrs
fstpl
in
pop
out
cmp
add
addr16
inc
xor
popa
add
inc
pop
inc
add
lahf
adc
mov
jp
xor
enter
and
pop
lret
jge
inc
nop
leave
call
iret
test
push
lcall
ljmp
cld
mov
mov
fisubrs
repnz
sub
cld
pop
cli
cmpsb
cmc
adc
scas
xchg
push
push
sti
arpl
mov
mov
jbe
xlat
sub
sub
xchg
mov
push
sbb
sub
xchg
and
mov
mov
pop
mov
add
das
cs
mov
fwait
addr16
add
mov
insl
lahf
or
sbb
and
shll
stc
test
sub
daa
dec
daa
mov
push
aas
sbb
adc
pop
xor
mov
lea
lock
jbe
dec
insb
test
jl
jg
fs
lret
jae
mov
adc
cld
scas
xchg
call
sub
fs
fxch
dec
pop
pop
rep
ljmp
push
xor
inc
add
sbb
stos
xlat
shl
xor
add
push
movsl
add
adc
sub
xor
les
fiaddl
xor
lods
mov
movsl
sub
cltd
jb
mov
inc
add
je
leave
in
xchg
push
add
cmp
or
add
jnp
lahf
sahf
jo
lock
push
nop
out
hlt
insl
dec
rorb
mov
int3
or
jnp
dec
mov
movb
xor
dec
inc
pop
sti
addr16
outsb
in
cmpsb
stos
filds
inc
jle
add
daa
ss
sbb
aad
add
pop
jno
inc
popf
popa
push
mov
mov
add
add
addb
imul
data16
cwtl
mov
test
inc
add
movsb
cmpsb
inc
add
stos
xchg
dec
ret
mov
add
add
cmpsb
leave
jg
aaa
add
pop
aam
add
mov
sub
cwtl
shlb
pop
inc
les
jo
lods
mov
mov
push
out
add
aam
adc
or
and
and
out
mov
jo
mov
pop
js
adc
sub
out
fst
jbe
xlat
mov
fmuls
loop
jne
jbe
xor
ds
rorl
repz
sbb
sub
jns
imul
pop
push
loopne
add
outsl
cmp
int3
pop
lret
adc
outsb
inc
add
push
xchg
cld
mov
es
mov
cwtl
push
rorb
fsubrl
jp
sbb
cli
lock
inc
xor
mov
push
rcr
sti
push
push
jo
add
sti
push
jne
sub
pop
jle
insb
pop
jle
sbb
ss
sub
pushfw
inc
dec
inc
add
mov
push
addb
or
lret
icebp
mov
rcl
and
inc
sbb
add
add
incb
montmul
cmpsb
addb
iret
jne
push
ret
jg
sbb
mov
fsubrl
sbb
sti
pop
mov
rolb
test
js
movb
inc
add
pop
dec
sbb
push
ss
lcall
jecxz
or
add
in
movsb
xchg
pop
data16
insl
pop
test
jne,pt
adc
sub
fwait
arpl
push
shlb
movb
and
and
add
sti
add
xchg
test
nop
movb
add
fstpt
test
jmp
es
mov
sub
iret
test
cmpsb
fucomip
adc
addb
loop
xorl
add
test
into
fidivs
xchg
nop
mov
std
pusha
add
mov
add
repz
in
stos
mov
or
icebp
pop
xor
lcall
dec
add
out
sarl
sub
pop
dec
push
lcall
or
loope
ret
jnp
xor
das
mov
bound
cld
pop
leave
sbb
jl
mov
pop
call
std
push
xchg
sub
in
cmp
mov
jl
rcll
sub
push
lret
insb
rcll
rcrl
bndstx
scas
lahf
sbb
jae
aad
sub
cltd
movb
push
dec
mov
push
cmpsb
ss
pop
out
mov
inc
add
jbe
mov
stos
loope
mull
popf
xchg
scas
in
sbb
int3
add
jnp
push
push
jg
mov
add
pop
xor
jg
daa
loop
loope
clc
push
sub
loop
icebp
mov
add
mov
push
ja
cmpsb
test
das
push
jno
dec
mov
addb
add
out
push
mov
loop,pn
add
mov
mov
push
std
mov
aaa
xor
sub
out
add
or
test
loope
sub
add
add
add
sbb
lcall
sub
adc
out
and
inc
arpl
xchg
arpl
insl
xchg
je
pop
lret
lcall
clc
popa
fwait
or
mov
xor
test
xor
add
into
pop
add
into
fisubl
nop
jo
sub
pushf
pop
mov
push
push
sub
add
enter
lds
psraw
mov
jle
add
lcall
mov
xor
lret
xchg
xor
popf
cmp
inc
add
cmp
add
pop
aad
test
repnz
lock
push
aas
and
sahf
aam
sbb
mov
rcr
out
add
ljmp
xchg
add
sbb
mov
or
les
jnp
sbbl
imul
inc
add
insb
and
jae
mov
test
std
filds
scas
outsl
sub
and
xlat
addb
popf
mov
js
xchg
fwait
test
inc
mov
cltd
lcall
xorl
dec
or
sti
jmp
jo
dec
and
scas
xchg
negb
mov
imul
jo
inc
test
fbstp
arpl
and
add
popa
xchg
add
pushf
das
pop
in
je
hlt
adc
addr16
dec
incl
sbb
add
add
movb
repz
cmp
addb
test
jo
out
mov
xchg
mov
add
sarl
or
mov
add
mov
cli
in
in
jp
push
push
popf
push
jl
mov
or
push
sub
mov
nop
shll
or
push
sbb
in
insl
mov
lods
pop
popf
mov
adcl
mov
lods
into
movsl
cli
push
jl
push
push
imul
les
and
stos
cmp
inc
ljmp
test
lock
loopne
in
jp
add
cmp
lea
pop
xor
mov
dec
in
jp
test
mov
push
repnz
popa
scas
imul
xchg
mov
add
cmpsl
jo
mov
add
xchg
push
das
xlat
ret
add
push
xor
dec
loopne
test
aaa
nop
cmp
add
mov
push
or
mov
mov
add
scas
mov
xchg
jne
ret
sarb
js
add
fwait
movsb
jle
insb
jno
out
imul
sub
divb
fcom
xchg
pop
mov
mov
stos
vpunpckhdq
aam
fwait
or
or
cmpl
pop
jnp
mull
sbb
push
jns
cmp
mov
jp
setle
add
ja
dec
aam
pop
lods
push
add
enter
add
insb
and
and
and
pop
dec
xchg
jecxz
cmp
add
scas
not
pop
push
xlat
mov
add
imul
mov
add
xor
rolb
xchg
sti
ficomps
pushf
fmul
push
sbb
mov
out
and
movb
add
adc
adc
jb
dec
mov
xchg
xor
aam
xchg
out
je
movb
sbb
jp
mov
cltd
and
xlat
jb
cmpsb
inc
add
in
movsl
pop
les
movsl
mov
xchg
rcll
iret
lret
pop
ljmp
or
outsl
jge
shlb
pop
std
out
rolb
or
mov
inc
gs
lahf
repnz
shrb
or
cmp
sub
popl
popf
leave
lds
pusha
add
adc
or
out
ss
cmpsl
push
aas
fisubrl
inc
add
pop
xchg
arpl
add
xchg
jno
add
cmp
mov
ret
dec
lea
js
stos
push
pushf
imul
mov
lahf
dec
aas
lock
mov
jne
mov
sbb
imul
sbb
xchg
xor
outsl
lret
xchg
cs
loope
mov
mov
jo
fxch
jmp
add
add
mov
mov
cmp
or
std
mov
add
jl
out
ja
dec
stc
cmpsl
rcll
pop
jo
sbb
add
add
xlat
push
dec
or
push
add
xchg
cld
jns
jg
mov
add
xchg
fwait
icebp
shll
add
lods
xor
sub
add
mov
pop
outsl
xor
dec
nop
sub
push
sbb
mov
cwtl
and
test
xor
add
lcall
je
push
sbb
cmp
ljmp
dec
inc
add
cmp
jo
roll
add
mov
add
fwait
gs
stos
push
data16
sub
inc
add
loopne
inc
add
std
xor
and
mov
daa
jmp
rolb
ja
add
pop
repnz
xlat
outsl
nop
ds
jg
sbbl
add
in
mov
cs
fstpl
scas
xchg
arpl
mov
pop
out
push
loop
add
repnz
pop
lcall
ret
pop
adc
xchg
and
adc
jl
sahf
ljmp
mov
jecxz
pop
test
mov
je
mov
cli
daa
push
xor
outsb
xchg
xchg
mov
rcrl
xor
mov
test
sub
add
addb
xchg
sbb
js
cltd
add
sbb
add
mov
insl
push
push
in
test
addb
pop
lahf
dec
pushf
inc
xorl
lret
xchg
mov
jmp
adc
or
aas
lods
test
add
lret
and
sub
sub
mov
shll
pop
dec
xchg
push
clc
jno
adc
test
mov
dec
jbe
xchg
cmp
les
shll
add
sarl
sbb
and
push
mov
mov
and
inc
dec
and
das
cmc
enter
and
shr
addr16
push
inc
fs
sbb
push
jae
sahf
addl
inc
cmpsl
fbstp
pushf
mov
xor
fists
xchg
inc
add
add
movb
lcall
mov
add
out
sbb
push
mov
adc
xchg
push
test
test
adc
jmp
imul
test
lds
out
pusha
add
pop
mov
push
add
sahf
loopne
xchg
sub
cmp
mov
cmp
xor
rorl
xchg
hlt
pusha
add
inc
gs
add
les
iret
mov
clc
xchg
insb
daa
sbb
pop
cmp
arpl
sarl
add
cli
cmp
add
out
cmp
and
pop
mov
rorl
das
sub
inc
out
je
das
push
add
cmp
cwtl
das
pop
or
sub
pop
ljmp
loop,pt
mov
insb
mov
or
mov
je
arpl
out
add
leave
xchg
mov
out
cli
negb
add
add
add
mov
popa
popf
mov
jbe
orl
iret
out
in
movsl
sbb
movsl
in
rcr
int3
addb
lea
lret
jg
roll
pop
mov
inc
add
pop
iret
inc
clc
mov
jb
je
pushf
out
mov
dec
adc
cmc
push
xor
outsb
aaa
sub
inc
add
xor
jl
pop
pop
inc
lea
rcll
int3
xchg
in
add
xor
and
dec
mov
fnstenv
sbb
cs
push
stos
insb
movsb
push
adc
add
add
add
push
cs
mov
test
aas
dec
rolb
add
sub
pop
data16
nop
lds
mov
insb
inc
lret
mov
leave
push
dec
arpl
test
aad
das
xchg
or
sbb
dec
mov
out
push
mov
lock
movsb
lods
bound
fldenv
clc
mov
std
lods
jno
fs
add
sub
lods
xlat
scas
loop
movsb
aas
daa
mov
pop
stc
outsl
sbb
bound
fbld
mov
insb
bound
xlat
cwtl
scas
sub
imul
jl
mov
ss
sbb
add
popa
stc
sbb
mov
xor
inc
cmpsl
and
int
mov
mov
movb
push
pop
dec
std
cmp
ds
push
xor
pop
fs
cs
sub
add
cmp
movb
and
jmp
ds
icebp
pushf
divb
addb
test
sub
popf
lods
ret
mov
add
dec
decb
jge
cmpsb
fidivl
mov
call
and
inc
add
pop
jno
xchg
xor
mov
mov
lods
outsl
xor
adc
mov
inc
add
add
add
add
pop
fbstp
xchg
or
pop
mov
dec
das
add
add
lea
push
add
mov
daa
rolb
pop
loope
call
sub
mov
push
add
push
jl
enterw
push
jae
push
adc
enter
out
inc
add
add
add
cmp
repz
imul
nop
mov
or
and
repz
rorl
xchg
adc
add
bound
pop
and
insb
and
sbb
pop
xor
mov
lea
push
js
std
jecxz
cmp
into
or
add
jns
push
xchg
or
addb
jno
add
std
mov
pop
jle
sti
les
mov
push
adc
mov
shr
loope
cmp
add
mov
lock
mov
enter
lea
lret
add
and
push
andl
dec
jmp
stos
pop
sbb
enter
outsl
push
adc
jmp
adc
xchg
movsl
fwait
outsb
fs
add
enter
cmp
or
xchg
decb
aam
aaa
push
fisubrl
rolb
sub
and
pop
movsl
push
pop
add
cli
jecxz
jae
or
movb
mov
es
adc
cli
pop
mov
push
xchg
push
rorl
sbb
xchg
or
or
mov
arpl
js
push
stc
mov
xor
mov
nop
negb
addb
clc
mov
add
das
lea
push
xchg
add
adc
cmp
stos
lods
aas
mov
adc
bound
bound
aaa
fists
rcrb
add
sbb
sbb
lret
jle
out
addb
enter
sbb
addb
addl
out
push
into
and
push
insb
fstl
popl
xlat
das
in
test
popa
dec
adc
pop
outsb
mov
rcl
mov
mov
jecxz
jae
xlat
and
jnp
outsb
out
insl
std
mov
sub
jne
jp
movsl
jb
int
lret
ljmp
int3
daa
pop
rolb
imul
add
adc
xchg
int
enter
adc
fs
push
push
add
and
dec
out
sub
dec
scas
mov
mov
je
or
repz
sub
xor
mov
jp
or
pop
mov
testl
mov
add
dec
jle
push
andl
arpl
les
sub
dec
xchg
or
aad
push
div
aaa
sbb
add
int3
xchg
cmp
xchg
mov
add
ja
shl
or
add
add
sahf
cmp
sbb
ficoml
test
and
add
push
pushf
stos
cltd
aaa
or
cmp
adc
jne
sbb
sub
mov
sbb
xchg
out
arpl
pop
adc
lret
inc
add
ret
orl
add
repz
inc
sub
add
mov
pop
sub
js
add
sbb
add
cmp
mov
ret
pop
pusha
add
mov
xchg
test
mov
aaa
or
xchg
inc
add
movsl
push
dec
jo
fcoms
add
mov
sub
mov
je
inc
inc
and
push
push
xor
mov
aas
xor
push
jge
dec
sbb
cmpl
jl,pn
and
fincstp
add
scas
stc
inc
add
loope
add
into
pop
roll
pop
adc
add
int
and
loope
sub
xchg
jecxz
fwait
or
cmp
insb
and
add
rorb
sub
cmp
adc
mov
and
js
mov
ret
out
lret
ds
pop
outsb
aad
mov
int
out
mov
mov
sahf
jnp
xchg
enter
inc
test
loop
lcall
cmpsl
fdivl
lret
xlat
mov
sahf
jns
xor
push
sahf
mov
loop
jno
lods
dec
cltd
add
test
pushl
push
jmp
or
dec
xchg
sub
push
nop
imul
cmp
cmp
dec
xchg
fcmovnu
sbb
mov
xor
scas
ret
ffreep
daa
mov
int3
popa
pop
pusha
add
movb
lcall
add
adcl
pop
popa
dec
imul
xchg
lods
push
dec
inc
add
push
add
xor
mov
fidivl
sti
cltd
pushf
mov
in
jmp
inc
add
ds
rcrb
add
push
fwait
dec
scas
jg
inc
mov
in
cld
or
xlat
mov
adc
inc
xchg
or
add
mov
test
scas
mov
sub
jmp
jge
add
lock
add
shl
xorl
pop
or
loope
and
dec
push
xchg
xlat
in
add
mov
pop
sbb
sub
or
out
jecxz
sub
jp
les
mov
push
mov
out
cmp
repz
or
and
fsubl
add
lret
mov
xchg
cmp
mov
cmpl
mov
test
xchg
pushf
jmp
repz
imull
aaa
xchg
rolb
and
popf
adc
addb
cmp
add
sub
add
adc
call
test
jb
andl
mov
mov
add
mov
stc
jb
aaa
xchg
push
jae
into
lcall
push
fildl
pop
jnp
jp
int3
cltd
dec
xor
pop
mov
mov
add
arpl
lret
sub
add
mulb
out
add
mov
scas
call
mov
jb
add
add
jae
nop
arpl
xchg
add
mov
clc
jecxz
divl
in
test
push
iret
xlat
push
dec
and
out
mov
mov
lcall
xor
loopne
xor
fcomip
pop
lods
dec
xchg
icebp
inc
xchg
inc
add
incl
mov
jbe
pop
clc
mov
sahf
xor
mov
ret
inc
cmp
mov
lods
js
bound
cmc
pushf
push
cltd
and
movsl
dec
pop
popf
dec
cld
fimull
mov
add
pop
add
out
lds
jl
pop
inc
add
mov
or
das
icebp
cmp
mov
scas
icebp
mov
xchg
mov
inc
mov
in
pop
insb
cmc
das
lock
popa
data16
or
aas
das
out
std
ret
in
xor
add
lds
inc
inc
push
mov
sub
mov
adc
push
insb
daa
repz
inc
add
sbb
push
pusha
add
inc
out
jb
sbbl
sub
ds
and
jno
add
aad
fidivs
push
add
lcall
jno
mov
rcrl
mov
cld
push
add
and
xor
lock
aas
pop
mov
push
mov
mov
add
mov
pand
dec
mov
sub
cli
xchg
aas
jb
leave
mov
cld
xchg
into
xlat
or
addb
or
add
fsubrs
loopne
loop
in
xchg
push
jecxz
xor
and
pop
xchg
jle
mov
cmp
inc
adc
lds
test
push
push
std
inc
add
insl
mov
shll
jmp
mov
aam
loope
fstpl
incl
dec
cmp
mov
push
xor
and
sbb
or
mov
lods
lret
mov
idivb
inc
fs
xchg
jmp
nop
iret
push
xor
pop
jne
mov
jo
jb
jbe
fistps
or
insb
mov
enter
sahf
pop
mov
test
int
aas
mov
dec
mov
adc
in
mov
gs
aas
testb
pop
stos
sub
int3
adc
loop
dec
adc
out
jae
ret
test
and
rolb
push
aas
int3
pop
popa
mov
mov
std
xor
addb
jmp
push
loopne
arpl
cmp
addr16
aad
je
pop
adc
mov
js
xchg
neg
dec
dec
pop
dec
pop
imul
mov
andl
jo
arpl
fiadds
dec
addb
pop
bound
push
shrl
addb
sarb
movsl
sbb
lahf
js
lods
mov
les
push
jle
imul
scas
jl
jb
mov
pushf
hlt
sub
rorb
call
jnp,pn
cmp
aad
out
xor
add
lret
and
in
in
cmp
push
rolb
mov
pop
cmp
cmp
and
inc
push
ja
sbb
inc
add
add
popa
sbb
scas
iret
jl
in
mov
inc
repnz
into
add
jb
jb
push
test
pop
scas
movsl
pop
pop
jp
dec
push
rcr
pop
xchg
ss
add
or
aaa
fstpt
sbb
lret
dec
xor
inc
xchg
push
subl
add
push
add
lods
or
outsl
daa
and
lcall
lret
divb
ficompl
addb
ljmp
idiv
out
sub
fstp
enter
add
addb
pop
jbe
sbb
testb
sub
or
cwtl
lret
mov
sub
lds
sbb
repnz
add
lea
xchg
addb
inc
add
int3
std
dec
xlat
dec
cmc
jge
cmpsl
jmp
pop
ret
cmp
bsf
push
jmp
cmpsb
push
mov
cmc
mov
add
cwtl
nop
mov
add
mov
dec
cld
pop
sub
cmp
jae
xchg
xor
push
cmp
add
jne
xchg
leave
movsb
mov
pusha
add
jno
std
int3
lock
rolb
and
js
sub
lea
outsb
xchg
cltd
add
mov
add
inc
data16
cltd
or
cmp
daa
or
inc
push
stos
popa
cwtl
dec
scas
divl
mov
dec
mov
mov
shll
jno
or
mov
push
ljmp
rolb
out
and
dec
addb
add
push
rolb
dec
jo
out
shlb
arpl
in
mov
clc
inc
xor
icebp
lock
test
dec
imul
movsb
fldenv
ja
inc
call
cmp
adc
cmp
adc
or
aaa
outsb
cmp
jmp
je
cmp
add
mov
inc
add
test
dec
xchg
outsb
int
xor
mov
je
xor
lret
daa
and
jo
add
mov
daa
popf
cmp
ret
or
push
mov
add
mov
mov
bound
scas
fimull
and
mov
add
add
add
pop
inc
add
add
dec
push
jge
add
add
imul
add
aaa
fadd
insl
imul
les
adc
aad
cmpsb
xor
and
ds
add
add
repnz
cwtl
jmp
xchg
push
cmp
mov
insl
mov
jo
in
mov
gs
mov
xchg
or
inc
add
add
into
pop
push
pop
cmp
fisttpll
mov
lcall
push
add
stos
xor
movsb
sbb
sbb
jecxz
hlt
cmp
in
jo
aas
xor
add
arpl
xor
add
and
lods
ds
jbe
sbb
scas
pusha
add
sub
xchg
cmpsl
lds
in
popf
sahf
sub
push
inc
hlt
or
add
xchg
pop
pop
lods
sub
mov
dec
adc
adc
push
orl
fcmove
das
or
call
jp
xchg
rolb
in
sub
push
cmp
orl
inc
pop
lret
xor
loopne
add
jle
sub
cmc
dec
xor
add
xchg
adc
pop
and
rolb
sbb
adc
cmp
lahf
inc
add
mov
fbld
xchg
lea
inc
mov
inc
dec
les
cmpsl
push
adc
hlt
ljmp
test
fs
out
ficompl
fnstsw
sti
or
add
mov
outsl
dec
lea
sti
in
ds
dec
jg
pop
adc
addb
fwait
out
sbb
popa
pcmpeqd
movsl
jns
out
sub
sar
or
adc
and
addb
add
jl
ret
sub
add
add
xchg
idivl
add
cmp
test
movsb
mov
flds
cmpsb
mov
mov
aas
adc
test
xchg
dec
arpl
dec
pop
jb
test
push
inc
add
add
enter
sbb
mov
mov
mov
and
fdivp
mov
mov
xchg
je
fildl
add
jo
and
loopne
sbb
mov
fistl
sbb
clc
and
mov
mov
clc
dec
pushf
inc
add
test
scas
push
or
mov
add
cwtl
or
mov
add
add
add
mov
gs
lea
cmp
push
test
lretw
jns
add
or
sub
pop
sbb
inc
arpl
dec
rcrl
push
add
arpl
sub
sbb
xor
mov
arpl
lock
add
push
aad
mov
mov
add
cmp
arpl
pop
xchg
jl
push
sub
ljmp
push
icebp
xor
int
negl
jno
arpl
leave
insl
sbbl
jle
ljmp
jge
cwtl
xchg
int3
lcall
into
sub
movsb
mov
cmpsl
and
lds
mov
push
cs
push
mov
dec
pcmpeqb
leave
adc
sbb
test
int3
jne
add
add
incb
add
out
xchg
ja
mov
sub
pop
pop
add
je
cmp
and
jae
add
or
inc
cmp
gs
test
je
sbb
test
imul
mov
imul
add
add
and
inc
inc
dec
jbe
mov
jl
jno
mov
shr
cmpsb
add
add
rolb
ja
sub
pop
and
aad
repz
ljmp
add
enter
adc
mov
mov
je
push
and
xchg
xor
jl
aam
and
jno
push
fdivl
jecxz
inc
add
rolb
ss
sbb
or
adc
out
add
fisttpl
pusha
add
xchg
push
scas
pop
mov
repnz
mov
shl
xor
mov
push
fldcw
in
cmpsb
cmp
jmp
xor
or
shl
or
dec
out
roll
pop
adc
cmc
jb
xor
add
loopne
aad
cwtl
cmp
cli
stc
push
imull
shlb
scas
enter
mov
in
dec
test
xchg
inc
add
cmpl
jmp
jbe
pop
ss
add
fdivrl
ja
enter
add
scas
push
jo
mov
jecxz
adc
int
add
add
pop
inc
lret
mov
out
cmpsl
or
xor
and
sub
cmc
in
popa
mov
sub
cmpsb
jns
adc
addl
movsb
inc
add
lds
les
call
push
pop
sub
shrl
mov
mov
xchg
or
push
imul
pop
ja
pop
xchg
iret
mov
inc
add
in
or
das
cmpsl
test
lahf
call
push
arpl
or
pop
fdiv
sbb
out
insl
fistpll
add
sbb
fisttps
xor
into
mov
shr
pop
adc
add
int3
and
xchg
mov
mov
call
sub
fs
and
or
adc
xor
lret
sbb
add
add
mov
insb
andl
or
dec
mov
dec
add
add
jae
adc
and
add
dec
addb
mov
push
subl
js
mov
add
xchg
bound
rolb
jne
aas
sbb
mov
cmp
inc
add
jbe
pop
jle
jb
les
dec
xor
mov
jecxz
jnp
rorb
mov
out
mov
popa
fcoms
mov
xor
add
mov
jno
stos
btr
mov
add
movsb
popf
popl
je
cltd
jo
or
jle
sub
aas
sub
pop
push
outsl
and
or
add
mov
daa
sub
jbe
add
gs
pusha
add
icebp
mov
push
inc
xchg
lcall
in
pop
syscall
nop
xchg
ja
es
lret
dec
in
ret
sbb
inc
add
data16
or
jnp
inc
add
xchg
xor
cmp
lods
push
leave
push
push
lods
jno
rclb
add
pop
test
ds
cs
jle
cmp
lret
mov
xor
jne
sub
add
jnp
cmp
add
dec
sub
and
add
pop
jl
cltd
push
cmp
xor
xchg
movsb
cld
fwait
into
ja
sbb
xor
jecxz
mov
and
or
dec
rcrb
stos
pop
aas
addb
mov
or
inc
sti
lret
aam
mov
and
xchg
ja
add
add
clc
mov
cmp
sub
xlat
push
inc
add
lock
and
lcall
inc
add
mov
daa
sub
les
mov
mov
pop
enter
inc
or
add
pop
sar
mov
push
xor
aas
sbb
and
and
loopne
aas
sub
xlat
mov
sbb
mov
or
mov
mov
push
ss
jge
add
mov
mov
rcr
std
out
jno
loop
addb
or
lret
clc
jns
push
add
data16
fadd
mov
aas
mov
stc
or
out
jp
add
push
jmp
test
sbb
push
add
and
add
inc
add
or
mov
enter
dec
add
and
sar
outsl
pop
dec
push
aam
test
fcom
xchg
or
jle
or
movsb
fcmovbe
adc
xchg
xchg
test
cmp
sarl
addb
add
pop
pop
jecxz
mov
inc
jmp
xor
outsl
xchg
pop
inc
add
push
cld
stos
or
aaa
cmc
jmp
stos
arpl
add
pop
loop
fs
cmp
popa
push
leave
cmpsb
and
mov
lret
jbe
pop
popa
loop
jle
jl
repnz
imul
repnz
scas
xor
lock
cmp
add
lretw
jecxz
aam
lods
testb
jp
arpl
inc
add
std
cmp
imul
mov
dec
push
mov
and
cmpsl
xchg
rorl
pop
aaa
bound
in
jge
in
scas
out
add
add
std
sub
add
pop
in
add
xchg
pop
test
sub
ret
push
and
aam
xchg
xchg
push
ds
aad
dec
mov
enter
push
add
sub
inc
imul
std
test
fs
add
dec
div
insb
jecxz
into
out
faddl
dec
push
add
aam
loopne
sbb
add
cmp
pop
test
std
fwait
dec
mov
inc
sub
add
dec
lahf
fldcw
mov
loopne
out
jle
popa
ret
jp
add
adc
push
pop
imul
aad
push
pop
insl
sarl
xchg
cmp
xchg
cmpsb
inc
push
xor
pop
jg
mov
sbb
pop
ss
mov
inc
cs
pop
fadds
dec
fisttpl
adc
inc
push
hlt
xchg
cmpsl
fcoms
mov
push
test
je
sbb
pushf
out
adc
stc
sub
sbb
xchg
add
int
mulb
and
dec
or
mov
movsb
push
call
sub
mov
jmp
es
or
sbb
imul
repnz
in
add
or
addr16
addr16
popa
cmpsb
lock
jp
push
xor
hlt
fsin
icebp
jb
add
jbe
add
fs
cmp
add
repnz
movb
js
pop
cmc
mov
out
mov
add
cmp
sbb
cmp
add
pop
lods
mov
cli
add
xchg
sub
dec
ret
lea
insb
push
inc
mov
addb
lock
adcl
test
testl
jle
pop
pop
int
aam
lds
addr16
push
sbb
jb
mul
imul
leave
pushf
sbb
dec
pop
pushf
adc
pop
push
push
movb
std
aad
out
daa
xlat
rclb
xchg
sub
aam
pop
sbb
cmc
xchg
inc
add
push
lds
test
add
xor
les
dec
addb
push
test
add
sub
inc
inc
ret
std
fsubl
pop
xor
stos
jne
cmpl
out
push
pop
rcrl
outsb
sub
sub
outsb
adcl
inc
add
mov
sub
mov
mov
dec
fbld
hlt
xchg
dec
dec
jge
dec
sbb
add
je
add
inc
add
or
sbb
or
out
dec
add
insb
xchg
sub
jle
jmp
ds
xlat
xor
mov
fadds
mov
mov
fwait
pop
aam
sbb
add
mov
sub
cmp
pop
add
and
ficomps
repnz
out
sbb
pop
mov
jle
pusha
add
push
fucom
ror
add
xor
fs
add
mul
mov
push
push
ficompl
test
jmp
pop
ja
daa
movsl
sub
bnd
sub
mov
in
loopne
andl
int
add
icebp
cmp
cli
jbe
push
dec
or
pop
mov
push
add
nop
pop
push
add
adc
push
add
adc
mov
movsb
cmp
mov
jbe,pn
aad
add
pop
addb
or
and
push
jae
ss
fstps
in
dec
pop
inc
ds
add
pop
fcmovnu
mov
aaa
or
jbe
add
adc
xor
add
repz
fucomp
insb
stc
imul
inc
add
insb
rorb
inc
sbbl
add
out
dec
insl
out
mov
and
clc
jo
add
dec
jecxz
xchg
inc
insl
pop
lea
jb
mov
push
or
fisubl
fsubrp
or
mov
clc
loope
cmp
push
test
mov
enter
aaa
loopw
call
xorl
xchg
add
inc
jmp
insb
je
add
movsb
and
daa
cmp
xchg
push
shll
add
sbb
add
push
lods
mov
cli
inc
add
push
in
push
call
push
inc
addb
out
mov
cmc
mov
lds
fs
add
fadds
inc
sbb
lds
mov
push
inc
pop
xchg
movb
mov
sbb
mov
or
add
mov
mov
daa
lcall
push
jle
cltd
movb
cmpl
ror
fs
mov
add
cwtl
popf
cs
call
mov
add
sbb
jnp
inc
add
or
fbld
ljmp
add
jno
data16
push
push
sbb
outsb
and
push
jno
adc
push
mov
icebp
imul
cmpsl
mov
sbb
inc
mov
mov
mov
scas
addr16
popa
nop
mov
jmp
ss
mov
push
adc
sbb
fnstsw
jmp
divl
or
cmpsl
push
mov
cs
dec
mov
cmp
out
xchg
mov
sub
push
sub
js
adc
shlb
mov
hlt
loope
ja
out
fsubrs
arpl
or
or
xchg
or
das
cltd
dec
dec
js
mov
cvtdq2ps
mov
xchg
aam
mov
enter
cltd
xor
mov
subl
xchg
imul
xchg
or
movsl
cli
fistps
cmpsb
mov
insb
cmp
addb
or
notl
int3
jo
xlat
es
sbb
pushf
cld
addb
push
inc
sti
jle
add
pop
loopne
sbb
sub
add
and
jl
out
imul
add
js
sub
testb
mov
add
daa
lahf
out
or
cs
mov
aas
xchg
cld
mov
pop
out
cltd
cmp
mov
fnstenv
repz
inc
add
pop
inc
add
cmpsb
jecxz
stos
mov
out
and
ljmp
xor
sbb
sub
add
dec
jb
push
repnz
pop
or
mov
rclb
mov
and
xor
jae
sub
cmpsl
add
testl
pushaw
add
stos
add
xor
mov
jg
push
dec
add
adc
jg
inc
add
mov
mov
jb
mov
scas
std
jae
or
inc
mov
pushf
pop
pop
add
lea
jle
push
lcall
mov
lret
add
addb
lcall
push
cmp
loopne
adc
pop
xchg
pop
daa
gs
shl
sbb
mov
jp
shll
xor
add
mov
push
loopne
testb
dec
mov
dec
jecxz
enter
mov
mov
add
xchg
scas
cmp
jbe
sbb
sub
iret
xchg
pushf
lcall
fistpl
or
ret
jle
pushl
dec
notb
xchg
sti
and
insb
jp
fwait
mov
shlb
add
xchg
mov
mov
stos
cwtl
cltd
mov
inc
sub
es
movb
xchg
std
xchg
outsl
mov
daa
adc
shr
cmpsb
mov
lahf
cmp
in
jp
inc
add
cmp
push
add
sbb
std
mov
lcall
push
mov
pop
sahf
push
pop
cmpsb
cmp
pop
push
dec
push
mov
or
mov
popf
je
addb
xchg
cmp
xlat
movsl
adc
out
lret
test
outsb
cltd
adc
add
outsl
cld
jmp
add
iret
push
jmp
ret
push
cmpsl
call
cmp
add
fisttpll
add
pop
or
aad
jmp
add
add
push
sbb
clc
hlt
jl
orl
je
js
loop
addb
fdiv
jle
imull
test
std
adc
imul
add
add
jne
test
xor
or
xchg
mov
movsl
mov
lret
ss
sbb
rolb
scas
dec
xor
add
sub
sar
in
pop
scas
dec
push
jmp
pusha
add
loop
pop
mov
pop
lock
add
push
stos
lahf
or
add
xchg
dec
push
xchg
jns
cmc
mov
inc
jns
dec
jne
mov
jp
jg
mov
add
es
ss
loop
in
cli
movsl
aam
into
es
pop
stos
jp
push
fwait
jns
sbb
out
sub
jne
add
sar
mov
mov
push
daa
icebp
pop
push
cld
xchg
cmp
lahf
xchg
push
filds
xchg
push
adc
aam
or
xor
xor
add
cmpsb
sbb
mov
fs
loope
pop
push
subl
add
sub
fistpl
lcall
sti
jbe
push
push
cmpsb
pop
jo
lock
les
jnp
add
addr16
cmpsb
pushf
in
push
adc
inc
add
push
pushf
mov
pop
pop
fiaddl
add
mov
adc
lcall
inc
jecxz
imul
andl
test
popf
push
add
imul
add
jbe
pop
add
aam
scas
cli
mov
mov
jg
mov
fldcw
aam
mov
sbb
push
repz
pop
and
or
es
dec
pop
pop
inc
xchg
sub
jp
xchg
aam
mov
add
pushf
dec
sub
das
lock
lods
pop
push
orl
idivb
cmp
xor
pop
or
add
lods
mov
adc
cmp
mov
pop
mov
add
push
pop
lcall
xchg
sub
jge
xor
xor
push
loop
stc
test
sbb
mov
clc
fwait
inc
add
xor
xor
stos
xchg
pop
aas
out
outsl
jb
jo
notl
insb
fstpt
ja
rcl
xor
sub
push
rcrl
xchg
adc
es
pop
mov
cwtl
scas
or
jl
lock
nop
mov
dec
pop
shrl
lret
popf
jmp
out
ljmp
mov
ret
aad
sub
cld
jno
jb
push
into
loopne
pop
xchg
pop
jbe
repz
adc
movb
rorb
cli
sbb
adc
pop
pop
in
in
ljmp
rolb
add
mov
sahf
rclb
into
loop
mov
fistpll
ret
adc
mov
mov
mov
lret
add
push
sub
jns
add
sub
in
test
and
rcrl
jae
jns
lods
bound
daa
shr
scas
loopne
dec
push
xchg
add
cmp
mov
outsb
addb
ja
loop
jl,pn
pop
inc
push
je
pop
xlat
mov
add
sub
lret
into
daa
inc
out
jecxz
loope
fsubl
popf
jne
xchg
cmc
and
xor
inc
add
jo
or
sahf
add
sbb
add
add
andl
adc
add
and
add
fildl
add
add
scas
mov
out
jmp
push
mov
xlat
pop
sahf
inc
add
xchg
or
add
lds
fidivrl
mov
mov
outsb
aad
add
int
push
addb
pop
icebp
jecxz
jb
dec
mov
aaa
push
mov
out
lcall
repnz
arpl
je
js
test
popf
lods
bound
lahf
flds
add
lea
sbb
add
or
sbb
push
insl
or
add
push
and
jle
or
fistpll
outsb
sub
jbe
or
cmp
inc
add
aaa
lcall
loop
jp
pop
fmull
dec
and
push
add
ficomps
je
dec
jnp
mov
je
fwait
imul
add
pop
int3
clc
clc
jg
mov
jmp
ret
sbb
scas
movsl
lds
pop
in
shr
pop
jns
mov
je
add
sub
repz
xchg
and
pusha
add
jo
lret
mov
inc
add
xor
outsl
fidivrs
xor
xchg
mov
lods
pop
xchg
mov
test
inc
add
ret
cld
mov
into
aam
add
loope
pushf
pop
fcmovnb
add
fwait
jl
cs
stos
insl
xor
outsl
stos
xchg
loop
add
shl
mov
es
xchg
sub
add
xchg
mov
loope
rcrb
mov
add
ja
xor
xchg
adc
popf
mov
imul
shlb
mul
mov
jae
xchg
mov
add
jnp
jns
xchg
js
addb
inc
inc
add
xchg
inc
out
addr16
aas
fcmovnb
test
jle
mov
dec
jbe
mov
dec
addb
pop
in
pusha
add
cs
aaa
inc
add
mov
icebp
push
dec
scas
sub
xor
cwtl
push
pop
fcmove
xchg
jo
add
insb
add
xchg
mov
cltd
call
dec
xchg
push
loopne
push
dec
sbbl
cmp
das
and
cmp
mov
cli
lcall
imul
mov
scas
pop
jbe
sub
pushl
js
push
cmp
jecxz
jge
or
add
add
jg
pop
sub
pop
add
pop
lods
jle
into
std
add
xor
icebp
mov
mov
lret
lds
xchg
push
add
pushf
mov
in
cwtl
mov
jae
loope
sbb
fimull
and
jp
sub
jp
add
add
cmp
dec
mov
dec
mov
into
ljmp
mov
fldenv
adc
mov
jp
orl
out
mov
addb
pop
rdseed
jmp
or
enter
sbb
pop
mov
or
adc
int
push
add
xor
cltd
testb
dec
setbe
loopne
mov
insl
sbb
add
test
cltd
bound
dec
mov
mov
jnp
sub
bound
or
adc
rolb
cmp
adc
fcmovb
lahf
jmp
and
sti
push
icebp
ucomiss
outsl
mov
scas
adc
and
add
arpl
sub
xor
idivl
in
mov
cwtl
movsl
jg
stos
dec
inc
test
outsb
cmp
xlat
out
adc
addb
rclb
mov
xor
imul
clc
mov
fimuls
or
mov
push
in
sbb
jae
pinsrw
loop
scas
out
cmpl
adc
call
sbb
mov
rdpmc
jp
jp
or
sub
stc
addb
xor
push
cld
xchg
mov
pop
sti
jae
or
add
mov
jnp
mov
and
jo
loope
sub
pop
cli
popa
jno
inc
inc
in
addb
sub
lahf
ss
and
or
sub
jg
out
fists
adc
dec
and
test
sbb
jnp
mov
addb
lods
xor
add
mov
movsl
jg
jae
frstor
push
add
iret
ss
add
cmp
sub
push
pop
lea
pusha
add
lods
cli
popf
xchg
jnp
repz
cld
push
cmpsl
ret
fdivr
mov
pop
mov
xchg
imul
and
sub
dec
cmp
imul
mov
dec
rorl
stc
mov
movsb
data16
mov
sub
lret
fucomi
int3
decl
rolb
lock
sbb
lods
cmp
pop
cmp
je
movsl
pop
mov
test
rol
add
xlat
movsb
sub
pushf
jge
jb
sbb
add
lret
dec
loope
add
repnz
mov
popf
or
ds
mov
push
add
dec
inc
add
int3
xchg
fistpl
pushf
pop
mov
pop
jnp
sub
add
ficomps
ja
lods
push
add
mov
fiaddl
clc
mov
push
pop
bound
and
add
mov
xlat
mov
lds
call
adc
add
and
push
sbb
add
sub
test
cmp
add
mov
jg
add
das
lret
cli
sbb
xor
into
pop
inc
dec
int3
sub
inc
dec
jp
add
jg
rorl
adc
dec
mov
push
add
xchg
jp
sahf
inc
ficoml
jecxz
in
outsl
sti
sahf
add
movsb
fscale
jbe
dec
cltd
push
loope
add
xor
test
stos
imul
pop
popf
fsub
ljmp
sub
mov
add
sub
cli
sbb
inc
add
hlt
outsl
sub
outsb
mov
fstpl
fs
int3
hlt
inc
add
ljmp
mov
cmp
adc
ja
in
test
adc
lds
mov
cmp
adc
and
leave
fcomi
or
ret
xchg
inc
add
add
xchg
adc
aad
xor
out
and
mov
loop
add
fistpl
in
push
cmp
jle
or
inc
mov
pushf
dec
pushf
adc
push
dec
jne
sbb
clc
aas
sub
pusha
add
mov
xchg
jne
mov
mov
lcall
ljmp
loopne
inc
add
add
xchg
insb
pop
xor
mov
add
push
jg
daa
xlat
xchg
shrb
jae
std
mov
pop
addb
dec
xchg
add
push
call
jg
inc
ja
addb
ret
pop
loopne
adc
cmp
addr16
add
mov
stos
ret
inc
add
adc
or
aam
jl
sbb
shl
out
lods
and
adc
mov
enter
inc
daa
fdivr
sbb
add
add
xlat
dec
sar
outsb
std
jb
scas
cltd
jne
add
mov
cmp
cmp
pop
icebp
sti
mov
mov
rcrb
ficoms
add
cld
mov
movsb
mov
cmpsb
fbld
loopne
add
xchg
cwtl
xchg
mov
in
movsb
dec
outsb
loopne
shll
scas
fsubrl
lds
add
add
pop
dec
fs
mov
jo
movsl
loope
dec
add
add
push
mov
sti
in
mov
inc
js
xchg
scas
dec
bound
scas
pusha
add
decb
add
rolb
push
adc
or
rorl
fisttpl
sub
or
add
cmp
xchg
lret
push
jno
dec
pop
test
xchg
add
mov
push
aam
add
add
jns
sbb
pop
or
lret
push
sub
das
ja
movsl
xchg
outsb
mov
lds
aad
lret
repz
adc
rorb
push
sub
ds
pop
adcl
mov
sarl
inc
add
jbe
psubq
mov
pop
sbb
pop
data16
cmp
les
ja
pusha
add
imul
dec
bound
add
fnstcw
cmp
push
jle
std
sbb
cmc
push
outsb
cmp
repnz
lods
add
insl
ss
or
int3
divb
dec
jno
call
fsubs
push
rorb
sbb
sub
movb
jbe
push
add
outsl
inc
add
daa
sub
fwait
jns
out
imul
in
fs
aaa
cmp
sub
add
stos
xorl
bound
fndisi(8087
mov
movsb
sti
mov
cmp
shll
add
imull
sbb
fs
dec
lods
lods
aas
jnp
sbb
add
inc
add
jno
and
or
lret
inc
add
les
cmp
add
shlb
das
adc
movsb
mov
mov
incb
or
mov
push
fisttps
addb
sbb
mov
xchg
rolb
pop
int
js
out
mov
cmp
rol
adc
outsb
fbld
in
add
push
je
adc
in
sbb
pop
xor
into
repz
xor
lcall
inc
aaa
push
sub
xlat
mov
mov
sub
test
add
insb
pop
dec
rolb
outsb
pop
mov
inc
add
or
dec
add
inc
add
ss
sub
mov
dec
push
shl
fdivrs
mov
and
pushf
push
das
adc
xchg
pop
sbb
mov
loopne
jecxz
in
and
call
add
repnz
stos
jne
sarl
outsb
test
mov
call
mov
clc
stos
repnz
test
out
repz
ror
stos
cmp
sar
push
xchg
cmp
idivb
xor
pop
or
add
mov
xchg
dec
lret
jecxz
add
add
jp
inc
add
cmp
lods
hlt
mov
test
cmp
call
movb
inc
imul
fisttps
dec
sbb
or
inc
cmp
xchg
dec
dec
cltd
adc
jo
mov
add
adc
mov
mov
cwtl
xchg
iret
pop
data16
push
add
int3
sbb
xlat
mov
xchg
in
adc
popf
sahf
fisttpl
mov
sub
mov
dec
and
jno
pop
ror
fcmovnb
cmp
xor
xchg
fs
lahf
xor
movb
pop
daa
jecxz
jae
pop
outsl
jecxz
pop
mov
flds
hlt
int3
mov
add
movsb
enter
mov
or
jbe
push
imul
bound
movb
popa
and
rcrb
mov
movsb
mov
call
mov
sbb
add
test
add
lods
into
jg
mov
mov
pop
mov
dec
mov
mov
shlb
inc
std
xor
clc
push
leave
pop
mov
movsl
mov
shl
scas
outsl
xor
dec
sub
jl
add
fidivl
add
movb
inc
mov
mov
jl
sbb
rorl
dec
lcall
add
add
and
mulps
lock
bound
xlat
add
add
incb
addb
add
ljmp
push
xlat
xchg
aam
xor
pop
movsb
mov
mov
repnz
add
jg
push
lods
pushf
sti
cmpsb
adc
fisttpll
arpl
addb
inc
add
cmc
mov
inc
add
sti
adc
sub
mov
cmpsl
jae
or
add
notb
xor
sub
mov
dec
mov
cmp
jne
mov
cli
clc
dec
incb
add
xchg
test
inc
cmp
push
add
dec
movb
not
fisubs
add
lods
mov
add
in
inc
add
imul
fwait
rcrb
dec
sbb
mov
add
push
push
add
sbb
addr16
pop
push
jno
push
jmp
pop
push
or
add
rsqrtps
mov
inc
sbb
movb
jo
dec
mov
push
add
mov
pop
sub
ficoms
jge
sbb
add
aad
imul
pop
lods
jb
fistl
aad
inc
scas
mov
insl
mov
sahf
cmpsl
pop
imul
and
or
mov
mov
or
addb
ret
out
sbb
add
jecxz
mov
and
jnp
sub
sub
add
pop
sub
mov
and
cld
iret
and
fsubrp
call
clc
iret
pop
fwait
ss
popf
out
xchg
mov
fists
lods
pop
add
scas
sub
dec
xchg
leave
sub
xchg
divl
jle
mov
mov
xchg
aad
xchg
dec
vpaddsb
repz
scas
push
jo
push
mov
push
add
in
aas
adc
cmp
out
arpl
cmp
add
or
xor
sbb
push
rolb
fists
paddb
add
mov
add
jb
xchg
dec
dec
mov
add
dec
mov
daa
xorl
or
add
sub
adc
adc
insb
mov
add
push
add
loope
push
stc
cmp
iret
sbb
jno
push
cmp
popa
call
add
push
xchg
movsl
cmp
mov
sbb
fcompl
mov
add
jl
inc
loope
mov
sub
cmp
add
pop
mov
stc
sahf
fdivrl
cmpsb
test
jmp
sbb
add
je
frstor
jl
test
test
daa
xchg
jg
loop
adc
jns
cmp
stc
pop
xor
xor
xchg
enter
or
ss
sbb
jmp
inc
outsl
ds
inc
add
dec
jnp
xorl
mov
nop
mov
or
in
fnstsw
xor
pop
adc
dec
mov
addb
inc
add
jb
pop
jno
xchg
dec
sub
push
xor
add
add
sbb
cmp
add
mov
arpl
adc
or
dec
in
lcall
cltd
xchg
adc
fnstcw
mov
cmpsb
pushf
int3
cmp
and
sbb
incl
pop
sbb
xor
xor
ss
mov
add
add
sbb
push
mov
test
add
test
inc
add
jnp
adc
adc
push
adc
xchg
outsl
gs
mov
jmp
adc
jns
rolb
xor
lods
and
xor
int
mov
push
scas
sub
fdiv
xor
in
in
or
xchg
popa
std
pop
in
cmpl
jb
or
scas
xchg
xchg
push
cwtl
push
lds
or
and
ljmp
dec
pop
mov
out
out
aam
imul
out
add
js
repnz
jp
notb
jl
int
stos
xchg
nop
hlt
cld
adc
enter
mov
mov
loope
sbb
dec
roll
xchg
out
mov
addb
test
jge
xchg
insl
cmpsl
test
add
stc
jle
lret
adc
scas
loop
inc
sti
mov
xchg
mov
sub
mov
stos
enter
inc
add
add
or
shrb
aam
add
lahf
ja
and
test
add
xor
add
adc
and
dec
mov
cmp
mov
xchg
int
jne
pop
insl
lret
add
jge
dec
push
pop
test
adc
add
ja
dec
lods
movb
or
cmp
frstor
stos
ljmp
stos
sub
cmp
inc
dec
aam
add
or
in
outsb
or
sbb
mov
addr16
pcmpgtb
pop
xchg
loopne
cwtl
dec
xchg
aaa
les
add
les
int
jb
les
lret
popf
addb
push
lods
loope
or
or
fisttps
jle
push
xor
add
add
into
sbb
mov
jl
jp
adc
and
fcomip
mov
aas
popf
jecxz
dec
ret
mov
pop
sti
sahf
aad
mov
icebp
movb
repz
addr16
sahf
lods
mov
mov
in
hlt
xchg
push
jb
lret
nop
xchg
dec
inc
add
jecxz
in
cmpsb
inc
add
addb
mov
popf
and
fisttps
mov
mov
push
mov
jecxz
jmp
mov
lret
inc
mov
in
cmp
and
dec
add
add
xor
pusha
add
cld
dec
shrl
mov
sub
jae
cmp
mov
mov
mov
fisubrs
scas
push
aad
dec
and
rolb
leave
sub
add
stos
aas
out
aaa
xchg
test
cmp
xchg
add
lret
repnz
testl
call
add
add
popa
leave
fs
ret
gs
arpl
mov
xchg
loopne
add
insb
mov
lcall
aad
jae
addb
fs
add
push
mov
pop
fs
fstps
mov
add
add
sarl
and
out
mov
cmp
add
loopne
idivb
xchg
shl
jno
xor
push
hlt
or
and
loopne
add
test
push
pop
sbb
arpl
or
mov
xor
les
out
mov
dec
mov
push
es
rol
ljmp
pop
lcall
add
pushf
fldt
pop
jo
jae
scas
push
ja
imull
dec
cmp
cmp
add
push
into
arpl
hlt
addb
repnz
and
out
sbb
pop
hlt
xchg
or
jbe
jge
xor
add
mov
and
dec
jb
push
or
lret
rcrl
mov
cli
mov
movb
sti
and
jecxz
rcl
and
add
nop
sbb
xor
test
lods
rcll
mov
lea
add
es
cmp
add
mov
push
add
adc
mov
dec
sarb
stos
adc
cmc
lea
testl
icebp
cmpsb
rolb
xor
cmp
mov
jo
call
xchg
sti
insl
xchg
out
stc
jg
cwtl
push
sbb
add
mov
xor
or
stos
pop
pop
movsl
lock
test
push
nop
lret
scas
jl
cmpsb
pop
cmovl
jp
outsb
das
outsl
sarb
jno
inc
sbb
jmp
mov
mov
ret
push
lcall
mov
imul
in
pop
aad
or
cmpsl
mov
adc
adc
sub
imul
movl
js
xchg
in
add
inc
add
jb
dec
lret
mov
iret
testl
out
jmp
mov
sbb
xchg
pop
mov
mov
mov
xor
cmp
push
addb
repz
add
sti
test
mov
xor
scas
fsubl
mov
aad
mov
mov
shll
mov
loop
mov
test
sbb
outsb
xlat
push
lret
cmp
push
push
dec
ds
jo
leave
dec
ss
mov
cmp
pushf
outsb
or
outsl
push
imul
adc
pop
push
pusha
add
xchg
push
push
push
pushf
stos
xor
pop
test
mov
jnp
sub
and
inc
add
xor
shrl
push
jecxz
mov
or
adc
dec
inc
lahf
test
sub
cli
push
xor
inc
cmp
add
scas
sbb
mov
push
add
pop
xor
or
bound
out
sub
and
pusha
add
insl
mov
sub
jg
nop
adc
mov
ljmp
sub
js
inc
xchg
cmp
aas
or
inc
add
mov
push
add
ret
lock
jns
stc
inc
dec
addb
ret
daa
pop
xchg
cmp
ror
roll
add
sbb
fidivl
dec
lods
or
add
popa
push
jno
add
pop
adc
in
lds
xchg
sub
aam
pop
incb
rolb
test
lods
add
adc
pop
das
sub
sub
pop
push
xchg
data16
cmp
gs
add
mov
jo
add
jp
add
fs
push
push
fstl
xor
jle
sub
add
stos
jle
jne
ficomps
push
into
jae
in
mov
or
shrl
mov
jmp
loopne
dec
in
add
movb
fwait
push
shlb
dec
mov
sbb
inc
pusha
add
in
sub
mulb
jg
push
dec
and
ficoms
lcall
and
add
mov
test
mov
mov
xor
adc
add
push
int3
out
test
and
je
xchg
mov
lahf
es
fsts
sub
arpl
cmpsl
rcrl
es
outsl
outsb
xchg
dec
loope
inc
idivb
jns
mov
fwait
mov
mov
add
cmc
dec
loope
cmp
stos
aad
jbe
push
ret
imul
inc
add
cmp
jmp
lods
mov
mov
dec
xchg
out
mov
mov
into
xor
add
inc
cmp
push
and
repnz
cmp
imul
fstps
mov
fidivrl
and
cmc
jp
cmp
call
call
dec
enter
into
adc
mov
notb
adc
popa
mull
xchg
sti
pop
inc
add
push
lods
push
out
inc
add
pop
aaa
sub
ret
repz
jbe
inc
add
xchg
adcl
rclb
mov
or
mov
adc
push
popa
adc
pop
jne
push
sahf
popf
cmpsb
les
in
inc
add
and
inc
add
insl
cmpsb
sarb
les
push
xorl
inc
add
outsb
inc
add
inc
push
mov
inc
add
add
pop
push
xchg
mov
bound
sbb
inc
add
ja
int
roll
cmp
mov
bound
addb
pusha
add
xor
mov
int
inc
mov
adc
sbb
lock
add
mov
mov
pushf
pop
inc
jge
nop
cltd
test
dec
stos
mov
cmp
andl
add
jmp
add
xchg
dec
in
lret
sub
add
xor
add
mov
or
sahf
jp
addb
clc
lcall
push
add
test
lods
sahf
mov
das
imull
addb
or
std
outsl
je
add
inc
add
add
xlat
ds
imul
pop
mov
mov
and
mov
add
call
out
je
lahf
hlt
les
or
je
pop
push
loop
xor
inc
fs
adc
add
inc
add
js
outsl
xor
push
sbb
pop
movsb
xchg
icebp
sub
testl
and
sbb
loopne
imul
fdivr
push
adc
pop
sub
pop
jp
roll
pop
jge
jbe
daa
out
movsb
je
add
cmpsb
aaa
ret
mov
leave
mov
push
pop
outsb
jp
adc
inc
add
dec
cmpsb
xor
jl
add
scas
idivl
jne
sbb
out
fst
pop
orl
adc
adc
sub
outsl
jmp
sahf
jge
mov
or
mov
pop
jle
sbb
jo
mov
cmp
gs
sub
stos
lea
fmul
mov
sti
push
imul
rdtsc
jle
mov
scas
movb
bound
push
push
jno
sub
push
pusha
add
xchg
add
dec
fbld
pop
lock
rolb
mov
dec
insl
enter
cmpsb
push
movsl
out
mov
lds
icebp
and
scas
in
fchs
sti
popf
sub
xor
rcll
inc
dec
ffreep
add
pop
mov
loopne
add
mov
mov
divl
lea
movsb
or
and
lds
loop
xlat
mov
push
cmpsb
mov
push
mov
je
and
or
into
cmp
sbb
add
mov
push
add
xor
mov
add
in
cmp
mov
loopne
rolb
inc
add
push
dec
push
addb
pop
shrb
xchg
mov
push
sub
call
jne
daa
mov
jne
dec
mov
xor
adc
movsl
iret
std
jb
mov
rol
add
stc
divl
push
fsts
out
fcom
idiv
ret
jecxz
popf
pop
scas
mov
js
mov
adc
add
add
mov
add
push
rolb
fwait
sti
xchg
into
shlb
out
push
add
js
fstpl
sbb
mov
adc
pop
lock
sbb
cmpsl
shlb
push
or
sbb
and
xchg
int3
iret
xchg
pop
jge
cmc
mov
dec
pop
fwait
pop
adc
dec
xor
or
cwtl
mov
mov
addb
add
pop
mov
push
test
das
in
incl
mov
lds
sub
cs
mov
shlb
mov
mov
movsb
jno
dec
fadds
shlb
cltd
std
jg
scas
sbb
add
inc
das
test
out
mov
cmp
sub
jge
enter
push
enter
pop
data16
int3
test
jns
push
or
cmp
imul
scas
cmp
dec
outsl
cmpsl
mov
push
loopne
iret
mov
cltd
out
jle
xchg
mov
mov
push
mov
adc
cmp
add
mov
add
je
add
add
jnp
mov
add
fldt
aam
adc
mov
loope
and
into
cltd
inc
repnz
faddl
cltd
into
notl
es
xor
add
iret
jl
addl
pop
cmp
xor
dec
xor
mov
addb
add
adc
add
xchg
loopne
in
addb
orl
mov
xor
mov
andl
jnp
dec
jno
lret
push
dec
lods
xor
es
cwtl
sbb
dec
mov
mov
pop
mov
repnz
and
out
xchg
popa
add
sbb
sbb
push
testb
js
xchg
xchg
mov
cmovbe
pop
and
sarl
scas
leave
push
add
lret
dec
add
xor
xor
add
sub
mov
sub
and
je
and
push
add
filds
ror
leave
les
sub
jl
and
push
lcall
add
loop
push
clc
xchg
lahf
push
lcall
xor
loopne
cmpsl
in
sub
imul
push
add
in
lock
jp
popf
sub
rolb
add
add
mov
in
je
imul
sbb
xor
loop
in
in
repz
imul
xchg
ret
popf
jle
sbb
call
jnp
popf
daa
jne
push
sbb
loop
sbb
hlt
sbb
movsb
testb
out
pop
jl
add
mov
movsb
lret
jae
sbb
sub
mov
adc
ds
or
bound
cmpsb
push
cmp
push
xchg
inc
add
shll
push
dec
push
repnz
xchg
imul
push
add
jnp
ss
xlat
mov
xchg
loopne
inc
add
pop
fistps
lret
rcl
cli
sub
or
in
add
es
add
lds
cmc
mov
aam
jns
sub
cmpsb
inc
stc
cli
push
scas
xchg
adc
xchg
test
negl
jmp
add
cwtl
decb
imul
add
jmp
xchg
mov
out
sbb
addr16
cmp
ret
in
pop
rolb
add
call
cmp
loope
daa
sbb
test
add
cwtl
loopne
lock
lret
mov
push
les
sbb
jg
add
and
int
ret
inc
add
lahf
lds
nop
or
jg
in
cmp
pusha
add
push
cmp
add
cli
xor
add
sbb
pushw
mov
and
push
xchg
test
add
adc
dec
adc
ret
aaa
or
das
pop
cs
xlat
rcrl
add
data16
mov
inc
xor
xor
cli
mov
pop
inc
add
xchg
rolb
imul
jg
test
and
aam
jnp
idivl
or
push
fdivs
and
push
sub
aaa
icebp
add
add
aam
cmp
scas
out
mov
pop
aas
rolb
fidivs
dec
inc
add
out
fdivrs
or
dec
dec
lds
add
push
jae
arpl
ret
adc
les
sub
push
orl
sahf
int3
sbb
rcrb
repnz
mov
das
je
mov
outsl
rclb
adc
test
ret
jnp
ficoml
jmp
cltd
aas
scas
add
mov
add
sub
add
fistpl
mov
cmc
cmpsl
sub
std
xchg
add
lret
jle
jnp
push
jbe
adc
xor
in
pusha
add
rol
stos
sub
xor
xor
add
mov
in
pop
fcmove
ret
sbb
bound
jnp
or
add
icebp
xchg
sub
xchg
cmp
push
imul
fldcw
xchg
jno
ror
arpl
adc
das
int3
jmp
sub
or
or
jb
fisubrl
mov
arpl
in
dec
push
mov
lcall
stos
mov
mov
add
outsl
and
movb
jo
cmpsb
adc
sti
adc
mov
jnp
or
ret
mov
mov
mov
add
out
inc
add
mov
push
aaa
xor
mov
nop
inc
dec
fiaddl
ret
push
dec
bound
lods
xchg
es
repz
xor
mov
add
pop
outsb
aas
sbb
in
xchg
negl
and
imul
add
ss
dec
fdivl
push
push
bound
adc
aad
xchg
movsb
cmpsl
out
outsl
insl
jb
jne
outsb
pop
cwtl
sahf
mov
rolb
push
xchg
in
xlat
js
fnsave
lret
cmp
imul
in
rolb
adc
popf
into
pop
xor
sub
sahf
push
adc
mov
add
add
mov
jp,pt
xchg
arpl
out
jnp
or
jl
inc
sahf
pop
dec
add
jl
std
pushf
mov
push
gs
or
add
add
popf
mov
pop
mov
cli
fdivs
leave
fs
lret
popa
push
call
jno
pop
sbb
sub
or
xor
inc
add
ljmp
sbb
cmp
fninit
and
stc
cmpsl
lcall
dec
pop
inc
movsb
shll
add
add
stos
imulb
inc
dec
je
adc
push
xor
addb
add
mov
mov
je
js
sbb
fwait
sbb
inc
add
sbb
data16
imul
mov
xor
add
and
iret
leave
and
addr16
jb
dec
fisubrl
shlb
adc
add
add
je
push
fxch
pusha
add
call
jmp
inc
add
push
gs
and
fcmovu
jecxz
add
repz
sbb
iret
in
or
loopne
jl
xchg
sub
mov
or
and
xor
sbb
push
add
pusha
add
add
sbb
add
cs
mov
add
adc
pushf
addr16
add
imul
push
xor
loopne
mov
xchg
fisttpll
mov
sbbl
add
movsb
adc
cmp
and
pop
ja
xchg
test
dec
jp
lds
dec
jl
add
into
inc
add
push
lods
dec
inc
add
movb
inc
icebp
lret
and
ljmp
sbb
je
cltd
jg
and
push
add
loopne
cld
sbb
and
imul
call
mov
pop
push
mov
push
and
mov
les
pop
rcrb
add
sbb
push
or
dec
add
cli
outsl
mov
add
add
dec
xchg
mov
out
jnp
mov
cmp
cmp
push
les
mov
adc
mov
add
mov
pop
mov
pop
xor
adc
test
sbb
das
cmpl
imul
mov
mov
faddl
ljmp
aaa
mov
mov
push
inc
cli
popf
cs
pop
shll
insl
cmc
enter
adc
push
js
out
push
mov
dec
loop
jo
add
mov
sub
add
cltd
mov
cmp
gs
inc
add
adc
fisttps
repnz
test
adc
sarb
sub
mov
daa
in
mov
les
scas
pop
or
ljmp
or
testb
ret
loopne
sti
out
stc
and
mov
popf
mov
ljmp
and
lock
jp
add
frstor
push
nop
in
roll
ja
mov
stos
ljmp
mov
call
push
into
add
cmp
out
xchg
std
mov
addb
outsb
push
das
mov
and
or
add
fwait
jge
out
xor
loop
cmp
dec
lods
cwtl
in
aam
pop
lahf
adc
fscale
sti
pop
xchg
and
mov
jp
iret
cs
rcll
rcrl
cmpsb
and
jle
add
and
add
mov
xor
and
xchg
and
push
sahf
outsl
mov
icebp
dec
mov
or
call
mov
aaa
mov
push
and
mov
movsl
test
add
adc
add
in
addr16
jecxz
ljmp
movsl
dec
je
imul
mov
add
inc
add
lahf
mov
xor
popa
lods
out
inc
aad
enter
inc
add
jg
lock
add
push
add
xor
add
dec
cld
addl
dec
pop
addb
out
add
pop
into
orl
enter
xor
imul
sub
jmp
sub
add
outsb
mov
jmp
xlat
cmp
imul
xor
nop
push
add
inc
add
add
push
add
aas
or
and
add
enter
lods
imul
rorl
xor
jb
int3
xor
aaa
and
pop
mov
mov
dec
mov
mov
sub
lret
mov
xlat
aad
addb
add
push
inc
add
mov
mov
jo
packssdw
or
mov
inc
add
loope
add
pop
shlb
repz
xchg
and
cltd
and
int3
jne
out
test
outsb
adc
outsb
push
gs
scas
lcall
xchg
xchg
sub
scas
add
add
in
jns
mov
sarb
fiadds
sub
ss
test
and
adc
test
loop
cmp
imul
imul
adc
xchg
or
mov
sub
sbb
mov
les
scas
xchg
leave
and
cmp
repnz
jmpw
mov
jo
test
addb
shrb
jecxz
addr16
sbb
lock
add
ficomps
pop
jae
add
mov
inc
pop
addl
addb
call
mov
out
mov
add
fcmovb
add
ss
or
add
push
mov
pushf
xor
inc
mov
push
cmp
cmp
lret
inc
add
stc
movsl
dec
shrl
mov
js
jmp
lret
call
in
repnz
ja
mov
and
popl
mov
stc
das
jle
outsl
addb
xlat
scas
and
dec
sbb
lods
lahf
push
cmp
adc
jp
int
xchg
xor
push
addr16
imul
scas
xchg
xchg
cmp
push
fldcw
lea
add
mov
xchg
fwait
enter
int
das
add
aad
mov
cmp
add
stc
inc
test
xchg
jle
mov
divl
push
add
dec
aas
rolb
push
pushfw
add
inc
scas
jecxz
inc
add
lods
test
movsb
jp
sarb
push
outsl
jle
mov
aad
clc
shlb
test
in
mov
add
or
jbe
repnz
gs
rcrb
test
clc
add
mov
gs
or
ljmp
adc
mov
sub
add
mov
cmp
rep
mov
mov
fcoms
pop
pop
inc
mov
sub
pop
xor
dec
cmp
mov
and
pop
jl
nop
lods
inc
add
add
testb
sub
dec
inc
add
testl
push
repnz
cmp
sbb
sbb
pop
repz
push
shlb
stc
mov
add
in
sub
xchg
cmpsb
jno
in
dec
imul
call
in
mov
adc
push
inc
add
lahf
ret
xor
lret
inc
add
into
loopne
sbb
scas
sbb
outsl
lahf
mov
mov
push
pop
cli
push
jno
addb
repz
into
lods
jmp
add
add
bound
push
hlt
ror
mov
cmpsb
dec
cmpsb
idiv
test
mov
mov
scas
dec
cmp
testb
cmpsb
adc
enter
sbb
dec
adc
mov
test
addb
mov
hlt
lahf
adc
add
adc
imul
inc
add
cmp
das
pop
jg
cli
mov
jecxz
addb
mov
fmull
mulb
movb
add
out
jl
data16
jns
xor
in
shlb
push
xchg
mov
push
loopne
push
pop
push
addr16
xorl
add
inc
add
repz
aaa
cmpsl
xchg
in
addb
add
mov
adc
mov
bound
lock
sub
jns
in
loop
adc
adc
notb
stos
push
or
js
or
push
fcmovnb
inc
add
mov
push
das
lahf
pop
mov
addr16
xor
jl
orl
mov
dec
pop
addb
mov
or
bound
sbb
lcall
add
mov
mov
push
ds
out
imul
dec
mov
push
mov
mov
nop
into
popa
xor
add
lds
pushl
insb
enter
pop
pop
mov
and
nop
out
pop
shll
daa
mov
add
mulb
inc
add
test
in
test
cmp
sbb
add
jp
ret
pop
jp
mov
loop
jns
stos
pop
mov
mov
jl
cwtl
fmuls
fdivrl
add
jne
add
fsubrl
push
mov
lret
rorl
add
mov
aas
pop
lcall
out
adc
jl
dec
ret
cli
pop
xchg
stos
sub
das
add
xlat
imul
add
lret
cmp
imul
iret
leave
hlt
and
add
xchg
xchg
mov
stc
xchg
jno
jbe
xlat
cmp
fstl
xchg
repz
push
imul
xchg
push
aad
or
mov
std
ja
in
cmp
inc
add
push
add
xor
enter
inc
or
add
scas
pusha
add
jno
jge
cmpsl
in
mov
shrl
or
mov
movsb
jmp
pop
xor
ficomps
das
mov
xchg
mov
fucomp
xor
push
dec
rolb
add
mov
fimull
xchg
xchg
cmp
ja
adc
adc
test
and
lds
pop
lock
mov
addr16
mov
inc
add
xor
adc
mov
pop
or
mov
ljmp
call
testl
add
movb
mov
dec
shl
cmpsl
dec
push
jle
hlt
dec
and
add
test
xorl
inc
mov
push
sub
jmp
mov
nop
movsl
pop
clc
or
adc
jp
pusha
add
mov
mov
add
in
push
push
int3
repz
add
iret
sub
loop
in
insb
icebp
outsl
mov
add
xlat
sbb
cs
jno
stos
out
les
rorl
scas
mov
or
push
lods
lods
das
jo
mov
mov
lea
aad
cli
ret
rolb
rorl
push
add
addr16
jbe
jl
loopne
enter
xor
add
pop
sub
sbb
out
dec
es
push
mov
dec
cld
sbb
popf
lock
sbb
jb
xchg
ret
cmp
xchg
xor
jno
pop
mov
arpl
add
jne
test
out
out
jbe
les
push
mov
sahf
addb
dec
xchg
mov
ficompl
push
pop
test
sub
adc
cwtl
inc
add
add
xchg
inc
fists
inc
add
mov
loopne
add
sub
add
ret
test
shll
and
xor
xor
jg
fcomps
jecxz
mov
add
icebp
ret
dec
aad
push
mov
popf
rorb
add
jp
fucomp
cltd
inc
add
jg
sbb
sub
push
and
or
les
icebp
dec
test
jae
mov
jbe
rolb
call
sbb
paddusw
add
ret
out
pop
push
push
scas
sbb
xchg
aaa
in
ret
and
sub
movsb
dec
jno
jmp
in
jne
mov
rol
mov
jmp
repnz
fldcw
jecxz
sub
add
inc
add
stc
push
popa
outsl
movsb
std
mov
pushf
stc
enter
scas
inc
std
xor
das
test
push
inc
add
jbe
neg
addr16
sbbl
xor
or
xor
call
test
lcall
repz
pop
lods
movsl
mov
mov
lahf
pushf
cmp
cltd
pushf
sub
into
mov
sbb
push
je
adc
adc
or
cwtl
test
adc
mov
leave
ja
lahf
mov
add
push
addb
xor
push
add
xchg
stos
mov
fisttpll
mov
mov
ret
xchg
add
and
fxch
outsl
xchg
std
xchg
in
test
lret
pushf
ret
fadd
inc
cmpsb
mov
pop
and
sbb
pop
mov
or
add
pusha
add
dec
adc
scas
jno
movsb
pop
sbb
pop
push
les
ret
rorl
mov
int
add
sbb
sub
add
cmpsb
lret
lcall
xchg
sub
inc
jb
dec
or
push
in
ret
xchg
push
addb
jg
adc
add
pop
mov
and
movsb
loope
ss
fildll
pop
lcall
lahf
addr16
lret
or
popf
je
add
cmp
mov
add
movb
xor
push
imul
add
rol
add
rolb
xchg
int
fisubrl
sub
sbb
add
mov
addb
xor
movsl
mov
cli
addb
xchg
sub
cmp
add
movb
cli
imul
or
popa
nop
popa
stos
mov
icebp
loopne
jno
xchg
jnp
xchg
les
cwtl
in
push
lahf
bound
les
movb
mov
push
mov
xor
ds
add
jns
dec
mov
xchg
movsb
dec
inc
add
push
sbb
cmp
adc
jns
add
push
xor
imulb
adc
add
inc
pop
int3
add
loope
and
add
or
fstpl
push
ljmp
movsb
add
push
shlb
push
mov
insl
xor
xchg
sahf
mov
cmp
add
add
pop
mov
adc
mov
in
xor
cmp
add
sub
lods
ret
pop
outsb
dec
ljmp
test
fwait
mov
into
inc
add
cli
dec
inc
iret
cwtl
dec
out
inc
add
mov
addr16
fsubrs
add
xchg
rolb
imul
lret
iret
gs
cmpsb
clc
insl
cli
fs
popa
out
or
sarb
cmp
xor
outsb
dec
jb
mov
adc
clc
in
stos
sbb
mov
xchg
xlat
xchg
mov
jl
dec
cvtdq2ps
add
pop
jmp
js
fwait
sub
add
add
push
sbb
push
hlt
xchg
shl
sub
movsb
xchg
iret
mov
in
leave
addb
jmp
rolb
push
int3
jge
mov
sbb
iret
xchg
test
bound
loopne
aam
inc
add
pushf
mov
add
add
test
jecxz
jle
out
pop
mov
jl
lret
add
fs
ret
pop
push
dec
pop
inc
add
mov
mov
in
pop
inc
push
stc
scas
or
jnp
sbb
pop
adc
pop
jno
mov
lcall
and
xor
mov
bound
leave
rcl
cs
scas
cmc
inc
stos
jg
and
adc
jmp
mov
inc
repnz
mov
and
js
ljmp
stos
mov
add
sub
dec
jmp
orl
outsl
xor
pop
and
ss
cmp
cmp
add
out
call
add
add
jge
add
data16
mov
in
lds
leave
push
add
add
add
mov
data16
cld
inc
add
add
dec
add
bound
and
outsl
mov
mov
cmp
insb
fisttps
pop
push
in
sahf
lods
scas
push
stc
test
ret
sub
mov
inc
add
lods
xchg
or
aam
pop
inc
add
dec
stc
cmp
aas
jbe
add
cmp
add
and
xchg
add
scas
dec
mov
enter
jp
lock
add
jne
out
lds
cwtl
or
pusha
add
dec
fwait
shrb
push
arpl
sub
push
xor
test
lahf
dec
mov
call
icebp
ja
xorl
add
pop
mov
orl
das
ret
jbe
loope
mov
outsb
shll
push
sti
stc
cwtl
xchg
gs
jno
xchg
addb
testb
jecxz
mov
xor
push
add
add
je
add
ss
outsb
addb
aad
mov
dec
xlat
rcrl
mov
test
add
adc
push
jbe
add
mov
iret
push
idivl
sub
inc
add
nopl
mov
int
out
lcall
sbb
add
insl
or
push
push
andl
jo
jmp
xchg
out
data16
je
fs
xchg
clc
jo
icebp
shr
fcmovnbe
lods
fdivrs
jge
mov
mov
test
jp
daa
mov
leave
pop
xor
pusha
add
outsl
cmpsl
sbb
stos
scas
ret
addb
pop
xchg
in
imul
stos
icebp
cmpsl
ficoms
adcl
push
or
cmc
subl
push
and
in
int3
pop
adc
repz
out
std
gs
mov
cmp
pusha
add
or
adc
xchg
into
int3
push
xor
sub
je
add
or
ds
lret
jns
push
push
add
test
jae
adc
mov
add
mov
data16
pop
add
shll
mov
in
adc
stc
or
int3
mov
dec
push
aad
fidivrs
pop
adc
push
add
sub
stos
lahf
jp
repz
rcr
jmp
add
inc
add
and
lret
adc
pop
push
aas
inc
loopne
pop
test
mov
pop
aam
jecxz
add
adc
mov
or
das
jb
or
test
inc
add
ja
arpl
xor
jb
or
in
pop
loopne
aaa
movb
sbb
les
out
mov
push
out
leave
inc
pushf
cmp
cmp
mov
addb
lcall
pop
push
aaa
incb
popa
daa
mov
sub
pop
mov
add
add
add
dec
scas
int
inc
sbb
js
xor
push
xchg
and
push
out
stc
mov
inc
int
jb
sti
push
enter
ss
mov
icebp
addb
aaa
pop
outsl
cmp
clc
mov
insb
add
popa
cltd
out
clc
pop
jecxz
jp
add
std
cmp
add
cli
inc
add
nop
rorl
outsb
xchg
xor
call
add
rorb
sbb
cmp
inc
add
jae
bound
mov
cmpsl
adc
hlt
push
mov
xor
dec
push
mov
je
mov
lea
enter
test
repnz
aaa
arpl
push
mov
scas
outsb
mov
les
cmp
add
adc
sub
cwtl
lds
repnz
jns
xchg
addb
lea
xchg
scas
cli
lahf
loope
cli
and
aad
mov
jns
sbbl
insb
dec
mov
arpl
mov
pop
xchg
inc
add
cwtl
ficomps
push
adc
push
xor
adc
loop
add
add
arpl
xchg
int
test
pusha
add
dec
loopne
jp
push
out
loopne,pn
lods
sahf
xor
dec
add
mov
sahf
jns
in
add
xchg
fsubl
add
xor
lret
js
dec
ljmp
mov
add
pop
fxch
mov
outsl
inc
test
cli
mov
mov
pushf
push
sbb
cmc
jp
add
iret
ret
and
inc
and
push
pop
xor
jmp
mov
add
aaa
es
int
fildl
rclb
stos
fs
dec
out
cwtl
in
sub
push
mov
or
mov
dec
xchg
lret
jmp
push
rorb
push
add
xor
ja
dec
xor
insl
sbb
stos
rorl
add
popa
in
xor
dec
mov
sti
or
add
or
fs
inc
add
xchg
mov
pop
pop
lods
loop
mov
gs
xchg
daa
pop
pop
inc
sti
sbb
xchg
sub
adc
lds
push
add
pusha
add
mov
addb
xchg
stc
ds
out
xchg
jo
lock
ljmp
stc
sarl
push
jbe
rolb
rolb
dec
ljmp
insb
int
jo
pushf
lds
jmp
mov
mov
jbe
inc
xchg
xchg
mov
lea
xor
sub
inc
add
and
xchg
mov
xchg
imul
xchg
daa
lock
ficoml
icebp
fwait
bound
push
in
mov
adc
add
rcrl
add
or
popf
adc
ret
leave
jl
or
mov
in
stc
imul
icebp
lds
lods
lds
test
mov
xchg
or
fsub
outsl
loop
inc
arpl
inc
add
aaa
mulb
cwtl
and
mov
push
mov
mov
je
pop
js
add
add
push
test
sub
lahf
popa
push
add
cmp
xor
or
pop
and
add
fdivl
jmp
leave
add
push
inc
stc
push
add
cli
imul
sbb
add
scas
and
pop
xlat
lahf
jecxz
neg
lcall
in
dec
rcrl
mov
out
subl
icebp
jne
ss
cmpsb
xlat
les
scas
push
push
sbb
fwait
push
fsub
add
mov
sbb
ss
stc
lret
ss
lods
ljmp
movsl
gs
xor
stos
ds
jle
dec
lret
pop
nop
imul
lahf
loopne
xor
or
add
ja
adc
pop
decb
addb
and
xor
jmp
or
insb
sbb
xchg
add
fimuls
inc
pushf
pop
sti
mov
repz
into
imul
clc
movsb
ret
das
and
iret
aas
sub
xor
mov
shlb
imul
cltd
lcall
sbb
jp
loope
xchg
inc
movsl
pop
cli
mov
pop
pop
push
sbb
sbb
mov
popf
jb
add
rclb
xchg
and
sub
add
pop
and
or
mov
jl
imul
insl
mov
sub
cmpsl
and
adc
dec
mov
inc
cwtl
movb
fcomp
lcall
call
mov
les
and
addb
addb
mov
and
jecxz
int
jo
mov
cmp
cmp
fcmovnu
adc
stos
inc
jmp
add
clc
xchg
outsl
in
out
sub
mov
cmp
das
stos
cmp
jl
jecxz
mov
add
pop
shll
cwtl
mov
ret
sbb
icebp
jno
aas
and
aas
inc
add
aas
lods
dec
xchg
ficomps
sub
mov
in
imul
movsb
push
mov
int3
shlb
das
jg
scas
sbb
pop
mov
lret
test
icebp
adcl
add
shll
mov
test
ja
mov
and
jbe
adc
add
or
sub
js
cmp
add
jl
adc
iret
rorb
in
add
popa
roll
cmpsb
xor
and
xchg
mov
add
test
add
movsb
scas
in
adc
loopne
testl
add
inc
add
push
add
fwait
mov
pusha
add
or
adc
adc
lock
les
sub
mov
test
inc
add
push
int
jo
add
pop
cmp
add
pop
and
imul
icebp
inc
fwait
and
sub
mov
xchg
shll
or
mov
jecxz
inc
mov
mov
xchg
adc
add
sbb
adc
jb
add
je
rolb
inc
mov
and
inc
add
in
add
and
adc
jle
sbb
sub
test
inc
add
mov
sbb
jne
xor
lahf
push
out
out
inc
xchg
mov
lcall
adc
cmp
add
adc
clc
pop
dec
clc
sub
shll
int3
sbb
ds
cmp
adc
mov
aaa
call
daa
mov
fsubl
xchg
xchg
test
lcall
dec
addb
and
lahf
mov
and
cmp
xchg
mov
lods
addb
pop
inc
add
mov
add
std
and
lods
or
push
stc
add
ret
mov
and
rcrl
dec
cld
in
mov
jmp
jle
xchg
rolb
sub
mov
inc
push
push
mov
mov
push
leave
ljmp
add
xor
ret
sub
push
scas
shlb
mov
add
rolb
ret
mov
int
add
rorl
imul
add
jne,pn
ret
icebp
ljmp
sbb
addb
and
or
sti
adc
add
inc
add
add
push
adc
out
into
loop
icebp
cmpsl
test
and
mov
push
cmp
mov
shlb
mov
xor
aam
fcompl
mov
mov
hlt
fildll
sbb
xor
idivb
inc
add
out
add
and
stos
clc
imul
xor
stc
jecxz
pop
inc
aas
and
push
fnstenv
add
mov
test
scas
cmc
mov
cmp
push
cmpsb
jl
sbb
icebp
in
insb
mov
mov
iret
pop
mov
cmp
dec
imulb
in
or
out
test
jnp
xchg
ljmp
mov
mov
loope
dec
or
xor
pop
lock
cmpsb
gs
adc
sar
add
fiaddl
mov
push
inc
mov
xor
push
leave
sub
movsb
jbe
out
dec
repnz
ret
out
dec
inc
add
fisttpll
cmc
pop
repz
and
dec
cs
jns
insl
cmp
cmp
les
dec
fwait
pop
xlat
addb
jg
adc
ficompl
cli
push
ljmp
add
xchg
lcall
addr16
cmp
inc
add
aas
ds
add
les
mov
loope
xchg
mov
inc
add
fldt
add
pop
notl
jbe
add
mov
cmp
shl
iret
cmpsl
addb
pop
and
mov
fwait
loope
es
or
adc
and
test
adc
rolb
cmp
dec
dec
sbb
push
pop
gs
mov
jmp
pop
xor
ret
add
sub
add
rolb
loop
adc
mov
inc
add
mov
das
mov
lahf
jp
into
es
setbe
add
xchg
int3
dec
cmpps
fisubl
dec
hlt
mov
inc
test
lret
test
test
mov
xchg
rcrl
fidivl
imul
jnp
mov
lea
jns
cld
shr
fsubp
mov
adc
fistps
add
and
or
sub
loope
loopne
push
jnp
fsubr
addr16
daa
fcompl
sbb
push
add
test
insl
outsl
shlb
cmpsl
arpl
mov
stc
mov
inc
mov
add
add
inc
addl
pop
push
addb
add
adc
dec
jnp
and
mov
sbb
int
jle
out
fiaddl
add
push
out
loope
and
mov
jp
sarb
movb
ds
sub
aaa
jp
or
add
divl
js
push
mov
cmp
arpl
sub
shll
aad
or
and
int
jne
add
mov
aaa
sarl
nop
clc
outsb
cmp
sub
jno
push
addr16
cmc
xor
mov
cmpsl
insl
mov
and
data16
inc
add
cld
stos
cmc
les
and
add
test
add
negb
push
mov
push
jl
add
pop
push
xor
in
xlat
xchg
pushf
les
lcall
add
out
jb
jnp
mov
dec
les
mov
and
xor
dec
cwtl
cmp
add
add
shlb
xchg
pop
out
stc
negl
and
movsb
cmp
arpl
add
rolb
xchg
lea
stos
push
decl
imul
and
dec
inc
add
sbb
sub
lahf
jae
mov
mov
add
inc
addb
loop
insb
mov
cmp
mov
pusha
add
cmp
push
lea
sub
fwait
test
cmp
add
insb
insl
add
sti
int
add
add
push
xor
jns
mov
xor
xor
add
inc
add
out
icebp
and
dec
repnz
cmpsl
inc
or
test
push
daa
push
jp
daa
or
mov
cs
add
add
push
pop
push
shl
push
fwait
pop
mov
pop
fistpl
inc
outsb
bound
iret
mov
shrl
shrl
add
mov
iret
cmp
sbb
faddl
outsl
and
mov
mov
lret
adc
push
pushf
push
aaa
fwait
lea
ja
sub
mov
int
add
sarl
repz
inc
add
rolb
xchg
pop
cld
pop
jmp
push
std
fwait
outsb
shll
push
inc
movb
add
add
sub
pop
mov
xlat
fs
movsb
sahf
pop
adc
je
dec
rolb
dec
add
cmc
or
pop
pop
and
movb
add
xor
fistl
jne
adc
pop
jmp
call
ss
mov
int
pop
sub
fidivs
push
pop
jbe
mov
push
test
icebp
pop
repnz
dec
mov
addb
push
loop
jmp
xor
fisubrl
incl
xor
push
mov
xor
push
adc
mov
xchg
into
mov
push
ds
rcrl
hlt
call
mov
sbb
xchg
or
mov
add
es
imul
xchg
cmc
mov
inc
add
cs
pop
pop
dec
fdivr
cli
lods
xchg
jno
sub
push
out
hlt
addr16
and
cs
pop
jns
out
inc
mov
jge
add
jg
xor
xor
in
testl
push
lds
push
call
aam
test
push
push
sbb
jecxz
mov
jle
fdivrl
imul
cmpsb
mov
sbb
jo
rolb
add
sbb
in
cmp
jnp
mov
add
or
dec
jbe
dec
dec
mov
cmpsl
inc
add
pop
in
out
mov
jo
fstl
mov
cli
call
out
ret
ficomps
add
sti
mov
mov
addr16
pop
xor
int
les
addb
add
lret
jmp
fstpt
scas
jbe
shr
cmp
add
push
fnstcw
adc
xchg
lret
mov
add
or
dec
fldcw
loope
inc
add
mov
mov
or
aad
add
mov
mov
inc
sub
xorl
jno
dec
arpl
and
or
add
sbb
out
jo
add
add
ja
add
sub
lock
jmp
add
fstpl
movsb
sti
into
push
rclb
pop
and
add
xor
push
das
fwait
xchg
cmp
lock
into
popa
mov
popf
push
dec
dec
push
stc
mov
add
sub
repz
stos
dec
movsb
push
ds
pextrw
add
out
leave
xchg
in
dec
mov
and
push
test
lahf
or
lret
xchg
outsb
push
dec
mov
add
loopne
jae
or
daa
cltd
dec
lahf
push
lahf
or
mov
push
add
movsl
cmpsb
jmp
push
popf
xchg
loop
add
or
jecxz
fbstp
fs
jae
fstpl
add
clc
idivb
add
in
sbb
cmc
sbb
or
repnz
xor
push
mov
loopne
cli
shll
push
mov
mov
je
out
scas
push
out
and
fwait
ret
popf
pusha
add
test
pop
adc
add
addb
xor
sbb
mov
sub
aad
and
sub
ljmp
js
push
jmp
xor
add
roll
pushf
jge
mov
shl
inc
add
movsb
cmpsl
push
jg
xor
mov
iret
mov
test
pop
add
mov
add
fwait
shll
add
daa
fcoml
loop
adc
leave
out
scas
pusha
add
shll
outsl
loop
rcr
xchg
jbe
dec
popa
ficoml
add
lret
mov
mov
addb
add
inc
lahf
dec
dec
jne
cmp
add
nopl
add
mov
cmc
push
icebp
daa
test
insl
mov
outsb
cmpsb
enter
xor
test
mov
ret
fimull
test
out
mov
or
clc
dec
xchg
popa
sbb
inc
add
add
cmp
add
out
jb
hlt
push
lret
fimuls
fninit
test
mov
mov
ss
push
cwtl
adc
ja
jnp
xorl
insl
ljmp
out
testl
xchg
mov
jle
imul
add
lret
int
add
or
xchg
cmp
sahf
sbb
insb
aam
mov
and
fists
adc
movsl
jae
and
addl
enter
prefetcht0
add
bnd
add
xchg
cmp
hlt
ljmp
adc
sbb
mov
cmpsl
mov
insb
rcrl
push
dec
shll
jp
ficoml
adc
les
stos
inc
add
cli
and
mov
pop
out
add
xchg
popf
adc
jne
inc
add
pusha
add
inc
out
jl
and
jne
jnp
add
jbe
cmc
cmp
addr16
in
out
push
xlat
push
jmp
mov
inc
cmp
xor
das
lea
push
xor
in
mov
pushf
cli
or
or
clc
dec
repz
add
into
mov
in
inc
add
inc
add
sbb
ds
cmp
sub
add
cmpsb
dec
and
cmpl
and
and
call
sbb
sub
push
lahf
pop
inc
add
jle
sti
lock
outsb
aam
adc
push
fwait
lahf
fbstp
dec
push
je
cmpsl
mov
mov
sbb
or
or
insb
test
mov
push
mov
mov
dec
call
insl
cwtl
sbb
scas
xlat
push
push
in
mov
or
lret
imul
add
sub
js
push
insl
fcom
xchg
pop
loopne
and
mov
add
shll
add
rcr
dec
int3
into
loope
cmc
fidivrl
in
insl
lea
sbb
jp
push
mov
stos
dec
add
jmp
shl
das
fbstp
fcoms
outsb
not
jae
clc
pop
iret
pop
fstps
jecxz
leave
and
xchg
inc
sbb
iret
pop
ss
xchg
pop
mov
jo
xchg
add
addb
inc
cmp
out
or
pop
mov
mov
jmp
aas
sub
pop
pushf
adc
pop
bound
mov
insl
lret
mov
and
xchg
xchg
cmp
dec
pop
jge
pop
hlt
rclb
and
icebp
imulb
inc
add
addr16
pop
repnz
lcall
scas
push
movsb
icebp
push
aad
jl
mull
iret
repnz
mov
mov
mov
std
aaa
jge
repnz
add
pop
pop
stc
mov
add
ds
add
dec
push
addb
pop
lds
push
lcall
add
add
je
adc
jge
push
pop
daa
test
popa
roll
dec
sti
cmp
fadds
les
rolb
cld
mov
aam
orl
mov
push
add
add
inc
add
repz
sub
fildl
add
jl
aam
sbb
jg
push
xchg
movb
add
jecxz
int3
jne
insb
dec
mov
xchg
out
leave
dec
inc
add
add
dec
add
int3
mov
lret
jo
mov
add
rolb
xchg
add
pusha
add
ss
adc
push
jb
dec
dec
pop
repz
inc
xchg
jmp
mov
or
mov
inc
outsb
cmc
addb
add
outsl
or
xchg
jno
jo
rcrb
mov
add
les
iret
inc
enter
fstpt
scas
and
add
mov
shll
mov
insb
insl
iret
dec
inc
dec
negl
mov
push
add
leave
cmpsl
in
imul
push
mov
adc
out
mov
adc
jne
mov
xchg
or
das
mov
mov
dec
test
jmp
daa
pop
stos
and
daa
push
sahf
push
sbb
hlt
mov
js
sbb
es
jo
imul
hlt
lock
xor
insb
addr16
leave
rcl
add
mov
mov
outsb
out
or
loopne
lods
sub
and
add
and
mov
adc
fwait
sub
out
or
mov
sbb
add
xchg
jns
hlt
repnz
add
inc
add
out
cmp
add
add
sbb
sbb
adc
inc
add
in
jno
ds
or
fisttps
std
jnp
add
pop
out
mov
push
add
aam
push
gs
lods
ja
lret
sbb
pushfw
data16
add
add
ja
mov
sbb
pop
nop
jg
add
adc
mull
jne
xchg
add
fists
add
popa
js
imul
movsl
mov
push
and
rolb
rclb
out
pushf
adc
jae
and
sbb
clc
cmp
adc
ja
movsb
jecxz
add
pop
in
sbb
add
bnd
outsl
adc
sbb
cmc
inc
add
mov
popf
cmp
int3
outsb
std
lret
jmp
sahf
lret
int
add
insl
pop
stos
imul
jmp
lods
dec
xchg
in
imul
ret
xchg
mov
into
negl
lret
fbld
inc
add
add
pop
sub
sbb
sub
pusha
add
push
or
jmp
mov
mov
movb
sti
pop
ret
and
bound
into
je
popa
adc
push
mov
ret
pop
xchg
gs
inc
add
xor
mov
ljmp
mov
xchg
addb
ss
lock
add
or
add
lahf
call
test
or
dec
stc
bound
mov
aas
ror
ljmp
add
add
scas
je
jg
notb
sbb
dec
or
add
popf
mov
ret
mov
or
add
lock
popa
aam
arpl
push
shlb
fldt
mov
and
inc
lret
lar
xlat
xchg
into
and
inc
cli
mov
adc
addb
lret
lcall
pop
insl
addb
scas
push
icebp
xchg
scas
sbb
inc
add
lds
cwtl
and
xor
es
sub
in
sub
sub
loopne
scas
mov
outsl
add
lods
mov
repnz
clc
std
lds
adc
mov
xchg
xchg
leave
push
leave
addb
jmp
lret
addr16
add
jg
dec
lret
enter
into
mov
xchg
daa
je
inc
lcall
xchg
mov
or
xchg
cmp
cli
xchg
adc
add
push
jae
dec
or
pop
and
inc
lahf
push
lods
jecxz
dec
popf
jb
inc
add
js
push
sbb
add
movsb
mov
pop
flds
add
jns
pop
xor
imul
mov
cmp
mov
xchg
sbb
cmp
xor
popa
fistpl
cmp
sbb
mov
add
icebp
xchg
adc
or
add
movl
inc
jp
out
test
jae
add
in
pop
mov
mov
jecxz
insb
std
jno
pop
test
scas
scas
pop
cmpsb
pusha
add
push
add
adcl
ja
cli
ja
and
addb
mov
xor
mov
pushf
leave
sub
out
test
sub
cmp
fsubr
push
outsl
lea
push
sbb
xor
jle
in
hlt
ret
cld
popa
daa
cmp
cli
pop
ss
push
xchg
fidivs
pop
pop
cld
int3
vmaxss
outsb
mov
daa
add
sub
sar
mov
push
xchg
mov
cmp
cli
xchg
adcl
xor
pop
jne
in
outsl
pusha
add
jbe
scas
addb
and
pusha
add
adc
leave
cwtl
nop
es
jae
testl
add
add
cmp
imul
sbb
pushf
lock
lcall
cmc
mov
ret
xor
addb
inc
push
sbb
enter
rcr
jo
and
or
outsb
cld
inc
shrb
cmp
push
jl
fidivs
movsb
pop
inc
add
and
mov
repnz
and
test
cmpsb
xchg
inc
push
push
push
jno
inc
and
dec
mov
ds
test
pop
xchg
lods
add
push
es
gs
xlat
subl
lock
lret
jo
insl
loopne
dec
lea
sbb
mov
mov
push
inc
add
xchg
dec
in
into
push
test
xchg
mov
fnstenv
aaa
movb
repz
jl
add
mov
pop
or
stos
jp
insl
cwtl
sbb
push
mov
xor
in
add
lret
mov
sbb
jbe
xor
repz
dec
mov
lods
lret
xchg
outsl
xor
cli
dec
out
enter
cwtl
jnp
mov
or
popf
xor
inc
add
push
cmc
test
cmp
cmp
and
push
inc
xor
daa
dec
sub
cld
sbb
and
das
xchg
ljmp
jl
aas
loopne
mov
push
xchg
lock
sbb
mov
jae
ljmp
call
pusha
add
xor
ds
xchg
add
adc
mov
add
insl
or
xor
xchg
jge
insb
test
clc
sbb
jg
mov
add
add
lods
cs
add
push
out
and
addb
enter
mov
dec
fcompl
mov
jne
aas
xor
push
loope
sbb
aam
fiadds
sub
sbb
pop
fistl
insb
mov
pop
ss
mov
arpl
and
pop
dec
mov
pusha
add
addb
push
out
test
mov
mov
adc
add
add
and
lods
xchg
xor
mov
ret
mov
add
sbb
cs
mov
fstps
push
in
loop
outsl
add
sub
or
inc
xor
or
add
or
add
add
xchg
aad
sahf
into
adc
mov
in
and
iret
rorl
add
push
imul
mov
cltd
aam
or
dec
lods
jecxz
addb
xor
icebp
add
ffreep
sub
adc
pop
inc
add
adc
push
cmpsl
clc
adc
add
cmp
add
cmc
in
xchg
and
push
xchg
mov
xor
mov
pop
or
jbe
lahf
add
mov
fwait
ret
sti
insb
outsl
cld
arpl
pop
mov
aaa
out
int3
jns
pop
test
adc
and
fs
jae
mov
rcr
leave
jle
movsb
mov
call
sub
jle
stos
sahf
adc
lret
cmp
lcall
mov
jmp
add
mov
mov
lods
in
das
addb
inc
add
ja
aam
les
iret
ljmp
dec
sub
xor
lret
ficoms
hlt
sbb
jecxz
push
sbb
add
and
mov
push
adc
or
arpl
loopne
lods
lods
cmp
or
xor
movsb
push
clc
or
mov
push
test
ja
ror
jmp
dec
fistps
add
mov
adc
xchg
scas
inc
add
add
mov
or
arpl
jo
out
in
mov
mov
test
lods
adc
pop
pminub
pop
das
loop
add
cmp
lods
cmpsl
decl
inc
add
es
movswl
daa
lock
jge
sbb
adc
fld
add
adc
stos
in
out
data16
xor
pop
jo
ret
jno
cld
jb
ret
enter
aad
and
mov
pop
fs
xchg
cmpsb
lcall
mov
outsl
mov
and
dec
test
aas
push
nop
inc
add
repz
or
leave
cmc
flds
pop
mov
xchg
pop
dec
cltd
inc
xchg
fs
ficomps
adc
insb
lret
mov
jns
js
add
push
dec
pop
jl
in
in
mov
gs
cmp
clc
pop
dec
push
push
push
xchg
lret
fs
stos
fistpll
popf
pop
pop
aas
notl
cmp
arpl
add
pop
fildll
pushf
gs
pop
sbb
cmp
add
add
daa
mov
add
ljmp
fistpll
pop
push
cmp
inc
xor
insl
addb
and
addb
pop
movb
call
loope
add
ret
iret
in
xlat
lods
mov
dec
ret
adc
loop
push
adc
xlat
dec
stos
pop
movsb
dec
sub
mov
xchg
mov
cld
addb
xor
push
cmp
sbb
outsb
push
in
adc
push
fcoml
dec
pop
xor
mov
add
jb
inc
add
add
sub
jecxz
push
add
sbb
and
jecxz
xchg
pusha
add
imul
xchg
ss
pop
js
inc
cmpsl
imull
or
out
and
mov
adc
cmpsl
js
inc
add
ds
inc
mov
add
lret
and
icebp
xchg
lods
push
jle
sub
xchg
jnp
xchg
adc
int3
out
xor
cmp
out
sub
or
ljmp
test
push
adc
sti
add
test
adc
outsb
fwait
sbb
sub
js
addb
add
jmp
dec
fwait
mov
xor
iret
movsb
aam
data16
bnd
or
xchg
nop
mov
and
jo
jne
sbb
mov
aad
push
imulb
addb
into
repz
aam
add
jne
mov
add
stc
stc
dec
add
in
idiv
shll
lea
ss
dec
out
add
imul
jns
test
mov
mov
iret
mov
xchg
jle
add
xor
call
aas
mov
fisttpll
cmc
stc
mov
xor
add
xor
mov
pop
add
jmp
rcll
mov
cs
mov
in
es
and
hlt
imul
add
mov
cmp
divb
je
arpl
sbb
vminss
lcall
cmpsl
movb
in
adc
add
cmp
sub
dec
dec
and
shll
add
test
in
dec
sbb
aas
mov
jns
outsl
aad
mov
mov
sub
or
cmp
and
sbb
mov
cmp
ret
addr16
nop
iret
add
int
jecxz
adc
stos
icebp
lock
sbb
add
dec
test
push
pop
roll
popf
mov
mov
aam
orl
enter
mov
mov
push
fcomps
aas
sbb
mov
add
sub
jl
in
movsl
inc
add
dec
lcall
add
rorl
jp
fwait
std
cmp
fst
jecxz
movsb
rcr
test
gs
adc
stc
imul
jbe
jge
fisttps
popa
addl
xor
mov
push
adc
cmp
adc
out
addb
mov
push
shll
add
fwait
adc
call
incl
add
insb
mov
inc
les
pop
sub
inc
cwtl
inc
add
add
stc
imul
test
dec
jae
mov
sbb
cwtl
mov
add
jl
jl
inc
mov
adc
mov
add
mov
pop
in
jnp
insl
push
mov
icebp
int
daa
jb
xlat
xchg
cs
dec
cmc
push
push
call
sub
cmp
test
add
mov
adc
je
test
xor
xchg
mov
jno,pt
int
add
ficomps
lock
sbb
iret
xchg
push
xchg
lods
cs
inc
add
add
repz
pop
out
rcrl
pop
scas
pop
cmc
pop
xchg
jecxz
xchg
hlt
cmp
cmp
out
addb
imul
ljmp
clc
inc
enter
jg
stos
movsb
pop
lahf
insl
cmp
cld
push
std
or
xchg
js
dec
fnstsw
jne
xchg
sub
add
hlt
or
repz
pop
jecxz
add
das
mov
fstps
addb
fcompl
jl
dec
hlt
dec
cmp
xchg
sub
push
cmpsl
pop
icebp
imul
sbb
sub
mov
mov
mov
adc
add
ds
add
test
or
data16
push
loopne
lods
test
add
repz
mov
adc
add
jno
loop
mul
in
data16
add
stc
loopne
add
dec
lret
jb
add
scas
cmpsl
mov
sti
mov
mov
ret
cmp
push
add
push
fxch
xor
and
fadd
mov
push
cmp
add
mov
mov
movsb
sub
add
loopne
xchg
out
push
clc
dec
xchg
aad
clc
push
mov
jp
xchg
sbbl
cmp
add
nop
push
add
jg
adc
stc
imul
mov
mov
and
stos
ds
orl
push
in
mov
pop
xchg
ficoms
addb
popf
xchg
shrl
mov
push
mov
pop
inc
bts
add
pop
in
mov
add
adc
push
add
pop
enter
fildl
lock
jne
add
xor
cld
pop
stc
sarb
or
insl
or
lahf
scas
addb
push
pop
mov
movsb
lahf
dec
xor
popf
repnz
or
fimull
mov
xor
addb
add
pop
or
arpl
sahf
sub
iret
mov
and
adc
jecxz
fsubl
in
pop
mov
clc
lret
outsb
test
cli
adc
mov
notl
lock
pop
dec
sbb
icebp
fsubrp
cmpsl
addb
adc
lock
add
inc
add
in
out
mov
xor
sbb
cli
xchg
dec
inc
add
call
and
lahf
mov
push
xor
nop
push
or
stos
xor
or
add
dec
cld
xorl
scas
insb
dec
out
inc
outsb
punpckhwd
and
xchg
loope
jno
pop
lahf
pop
push
addr16
fisttps
lret
mov
add
mov
or
in
add
or
add
daa
roll
inc
sub
lahf
cwtl
ss
mov
push
insb
mov
out
lcall
mov
test
or
in
jecxz
push
in
pop
ss
addb
add
ret
add
add
sarb
push
lea
mov
dec
and
call
add
adc
mov
sbb
cmp
les
or
test
daa
xor
cmp
les
pushf
jmp
cmp
add
mov
lods
cmp
push
add
adc
addr16
add
add
add
cwtl
cmpsb
push
out
pop
pop
pop
xchg
out
scas
js
addb
es
pop
mov
and
sahf
outsl
data16
sbb
adc
xor
lahf
adc
out
add
mov
stos
les
inc
add
ret
or
and
loopne
ja
add
fisubrs
pop
jbe
ljmp
xchg
pop
xor
add
out
inc
add
inc
add
cltd
pop
or
mov
jmp
pushf
xor
addb
fmull
mov
and
pop
mov
adc
add
pusha
add
jecxz
jno
xor
add
shlb
add
ljmp
push
test
fldt
xor
cmc
dec
pop
pop
int
jge
imul
add
into
inc
hlt
xchg
dec
xor
or
in
ret
add
imul
loopne
xor
push
or
dec
mov
adc
add
imul
test
mov
jnp
xchg
jp
dec
sbb
rorb
mov
xor
test
lea
jns
bound
ret
bound
loope
dec
mov
popa
adc
push
push
mov
ja
dec
mov
xchg
and
push
add
xchg
sbb
push
repnz
movsl
es
push
test
pop
xlat
lds
mov
or
les
sub
gs
lods
and
aad
stc
mov
add
dec
xor
add
cwtl
xchg
and
add
pop
stc
repz
xlat
sti
das
clc
xchg
not
add
scas
pop
sub
test
sbb
or
in
inc
add
jg
jo
dec
sub
and
adc
jl
test
lods
cmc
mov
test
cld
pop
movsb
xor
out
add
pop
jge
adc
rolb
cmp
das
xchg
or
out
out
addb
clc
mov
jno
andl
fcoms
push
inc
cmp
addb
sar
pop
clc
mov
addb
xchg
cmpl
lock
mov
mov
test
mov
mov
add
sbb
jg
aaa
pop
aaa
fldcw
pop
inc
push
ficoml
xlat
xor
js
inc
add
inc
jno
sahf
push
fld
lock
daa
sahf
and
push
aaa
in
outsb
js
and
dec
cli
adc
add
test
add
jae
popf
cmpsb
xlat
or
or
loopne
add
xchg
out
mov
dec
outsb
mov
inc
mov
ficomps
xor
add
or
cltd
jmp
dec
xchg
addb
adc
mov
loope
int3
mov
lock
lods
mov
gs
int
mov
mov
fcmovb
add
mov
add
or
jmp
or
sbb
dec
cmp
das
mov
add
dec
push
rcrb
push
jl
in
push
out
xor
ret
pop
cmpsb
cmc
jmp
addb
add
jmp
bswap
out
add
into
lods
cs
or
jns
rcll
out
dec
sahf
daa
jo
lock
push
aaa
and
addb
pop
out
jp
daa
aas
jp
jecxz
add
xchg
adc
rolb
test
pusha
add
jp
add
std
clc
les
mov
lea
in
out
out
push
and
test
add
jmp
push
ret
ljmp
movsl
stos
jns
test
jnp
pushf
stos
mov
or
pusha
add
cmp
out
mov
ret
pop
pop
or
adc
add
adc
pop
mov
movsb
xchg
std
cmp
in
add
add
sbb
cmpsb
aad
data16
lcall
add
add
cld
xor
cmpsb
cld
mov
pop
mov
adc
repz
stos
inc
add
movsb
mov
dec
cmp
xchg
hlt
movsl
push
mov
fildl
enter
addb
out
mov
leave
insl
iret
ret
sub
out
pop
in
mov
out
add
popa
pop
sbb
and
movsl
mov
repnz
mov
mov
ret
test
add
push
cmp
add
pop
jae
push
add
js
inc
je
pusha
add
lret
add
and
add
ret
mov
roll
mov
cmp
jbe
insl
pop
ss
mov
lret
jo
add
jne
add
outsb
fcmovb
add
addb
ret
cwtl
push
jno
cmp
jecxz
add
iret
xlat
jae
pop
mov
pop
call
and
jne
movzbl
clc
jmp
push
mov
jg
xor
fmul
lret
cmc
mov
add
inc
add
ss
lock
cmpl
and
movsb
out
fs
cmp
mov
aas
bound
lahf
dec
les
aad
adc
aam
pop
xchg
dec
push
jno
mov
jae
pop
sbb
cmpsb
addb
xor
add
add
aas
and
insl
xor
mov
adc
pop
pop
and
jae
int3
out
inc
add
and
pop
imull
les
jno
push
adc
jp
xor
jmp
sbb
nop
sub
das
in
jo
jb
les
sub
test
jmp
les
xor
lds
inc
and
inc
rolb
popf
cs
push
movsl
adc
sbb
mov
add
pop
mov
das
sbb
add
leave
in
jne
stos
xchg
fsubr
ret
arpl
cmpsl
push
xor
icebp
incl
loope
mov
xchg
stc
dec
xchg
movsl
mov
add
fwait
repz
pop
sbb
test
xchg
popa
lods
outsl
lahf
je
rclb
push
pusha
add
jae
mov
test
or
fidivrl
and
fwait
mov
in
sub
xlat
mov
xchg
cli
sar
ljmp
xor
mov
add
imul
addb
and
les
sub
lock
mov
mov
mov
ret
ret
mov
add
add
out
add
pusha
add
mov
mov
in
iret
xchg
cltd
stc
sbb
repz
lds
sbb
test
adc
bound
clc
inc
mov
mov
add
jno
shrb
cmp
xchg
nop
repnz
sub
out
inc
add
out
adc
inc
iret
mov
and
mov
out
xor
sahf
bound
in
xchg
and
add
icebp
jne
leave
loopne
sbb
int3
xlat
jle
lods
aad
testb
lds
pop
xchg
mov
icebp
lds
sub
ret
in
or
xchg
pushf
adc
xor
xchg
sbb
mov
or
std
sbb
hlt
out
insl
xchg
movsb
loope
inc
lods
push
sub
xchg
iret
sub
loop
pop
int3
pop
and
add
movsl
psllq
jg
or
and
push
loop
jle
sti
push
fidivs
in
pop
bound
lahf
mov
imul
add
jp
cmp
cwtl
xchg
jae
add
mov
or
aas
mov
fs
notb
in
xchg
cmp
mov
andl
rol
add
xchg
mov
and
and
push
outsl
or
ror
dec
pop
lret
clc
inc
inc
mov
divb
loope
add
scas
addl
mov
jb
icebp
xor
out
inc
add
into
mov
mov
xor
mov
add
mov
push
cmp
int3
icebp
cmp
jg
scas
leave
dec
jl
fsubr
popf
xor
roll
cltd
stos
shl
sub
adc
mov
fstpt
xchg
mov
movsl
mov
clc
push
jb
mov
movsb
push
fnstcw
add
adc
stc
pushf
dec
dec
jecxz
test
mov
jae
fiaddl
push
lock
add
aas
das
pop
push
std
mov
stos
push
dec
add
mov
pop
jnp
mov
xchg
mov
push
dec
icebp
pop
xchg
pusha
add
and
das
inc
bnd
out
lods
int
jne
push
dec
stos
divl
lds
add
out
push
loope
scas
scas
pop
jns
add
enter
add
adc
ret
mov
push
cmp
xchg
push
lahf
sbb
and
push
es
sub
roll
fsubrs
pop
loopne
mov
xchg
jl
outsl
jbe
rolb
pusha
add
popf
sbb
and
jne
push
dec
lods
sub
push
ja
inc
adc
fucomip
pop
pushf
and
cmp
push
dec
push
fisubrl
shrb
mov
shrl
sub
or
out
movb
jb
add
rclb
mov
mov
push
fdivs
pop
cld
cmpsl
xor
pop
add
lea
sahf
inc
add
add
ret
cld
iret
sbb
dec
test
movsl
mov
scas
loopne
adc
add
les
call
add
cmp
inc
add
bound
jge
xchg
addb
and
xor
repz
and
xor
add
mov
outsl
daa
scas
inc
add
mov
mov
add
imul
pop
lret
inc
mov
jns
adc
int3
cmp
fsubs
hlt
ret
dec
jne
or
inc
add
add
add
lcall
or
sub
cmp
add
ljmp
mov
cwtl
lea
xchg
into
mov
mov
pop
insl
xchg
push
ja
inc
add
add
fcmove
add
mov
push
pop
addl
imul
xchg
data16
and
push
arpl
loopne
mov
push
insl
sar
and
das
lcall
incb
scas
or
mov
or
jecxz
jne
mov
add
test
push
add
ljmp
or
xchg
cmp
add
or
add
pusha
add
test
fwait
xor
arpl
push
popa
jecxz
sub
xor
add
push
adc
add
arpl
or
add
and
dec
xor
mov
add
mov
out
cmp
mov
mov
push
scas
pop
jne
adcl
mov
sbb
add
repz
xor
add
pop
scas
xlat
dec
adc
test
insl
or
add
add
cmp
mov
fistpll
loop
movsb
sbb
pop
or
das
pushf
std
setp
sub
mov
stos
pop
cmc
xor
jne
scas
add
andl
adc
add
in
imul
aam
fisttps
addb
test
add
cmp
add
in
shr
mov
push
add
push
pop
test
in
mov
push
mov
mov
add
push
push
loope
cli
inc
int
movl
inc
add
scas
sbb
sub
push
stos
ss
idivb
push
xchg
sarb
or
in
into
js
ljmp
add
out
imul
rcl
and
stos
aam
push
ja
xchg
out
dec
pop
dec
cwtl
gs
pop
dec
jp
and
dec
pop
mov
jmp
bound
mov
adc
pop
outsb
mov
insl
or
fdivrs
mov
add
mov
add
aaa
dec
jbe
sbb
test
dec
js
aaa
add
in
fstps
push
sti
enter
mov
stos
cld
out
xor
jnp
in
pop
mov
repz
fsubs
jmp
lahf
mov
or
add
jge
mov
xacquire
shll
xchg
test
sbb
aas
jecxz
into
decl
pop
mov
push
pop
jecxz
ss
push
mov
cmpsl
ss
fmull
lea
inc
out
add
movb
add
pop
loop
std
lea
add
cwtl
mov
mov
or
jl
xor
or
fdivrs
shrl
gs
in
addb
xor
imul
ljmp
ja
xchg
sbb
pusha
add
cs
xchg
orl
loopne
test
push
movsl
fsts
fwait
stos
jno
adc
jo
inc
addb
rcrb
sbb
mov
movsl
mov
jle
jae
xchg
ja
imulb
mov
mov
add
add
test
pop
xchg
mov
jo
hlt
es
or
lea
ds
sbb
iret
sub
pop
cmp
stc
sbb
pop
ret
pop
andl
rolb
inc
add
push
dec
lcall
sbb
addb
cwtl
andl
add
cmp
jno
xor
pop
roll
nop
jo
and
pop
and
cmp
jo
xchg
fldt
in
xlat
mov
mov
pop
mov
mov
int3
push
xchg
mov
sar
loope
in
sub
xor
lods
jle
add
push
or
and
aam
push
ret
pushf
mov
mov
and
jl
sti
scas
lret
decl
es
mov
adc
movsl
mov
xor
or
sub
mov
add
mov
cmp
jp
test
jbe
and
dec
sbb
out
in
mov
and
lea
xchg
or
mov
push
arpl
add
iret
ret
pop
aaa
inc
add
and
cld
pop
addb
cmp
xor
push
test
mov
lret
jns
mov
test
add
popl
xchg
add
sub
and
push
jnp
mov
xlat
fwait
inc
add
xchg
mov
add
insb
mov
jle
add
rolb
pop
cs
pop
imul
add
and
les
mov
lret
push
mov
cmp
