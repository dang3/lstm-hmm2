add
add
adc
add
addb
popa
add
adc
or
adc
mov
or
add
mov
add
add
add
mov
add
add
add
or
add
add
add
addb
andl
add
or
add
mov
movsb
or
and
adc
add
add
inc
add
add
test
adcb
test
add
add
addb
add
add
add
add
add
add
adcl
add
inc
xor
add
add
sbb
inc
and
and
add
add
add
and
add
or
add
add
adc
orb
or
add
push
and
add
add
inc
add
add
sub
adc
add
add
add
add
adc
add
add
push
add
adcb
add
mov
addb
sbb
add
addb
add
or
add
inc
push
adc
add
xchg
cwtl
add
sbb
add
or
scas
push
adc
inc
inc
push
dec
adc
inc
or
push
scas
dec
adc
inc
in
add
inc
add
jb
gs
insl
fs
gs
inc
push
js
pop
js
call
sub
out
rorb
gs
push
pop
dec
pop
push
clc
flds
adc
ja
imul
ja
jb
cmp
add
mov
add
clc
sahf
mov
adc
inc
push
fwait
in
es
rorb
dec
aas
fdivs
stc
pop
mov
adc
or
call
lds
loop
repz
sbb
adc
jo
int
and
inc
add
push
dec
popl
int
popf
jge
bound
decl
adc
inc
bound
je
out
mov
lret
jno
lea
jecxz
cmp
jbe
cmp
jae
add
scas
repnz
jns
imul
jle
addl
xchg
jge
sub
jno
cmpb
adc
push
sbb
fcoml
inc
jp
push
js
popf
jo
mov
incl
adc
inc
test
ljmp
sti
out
inc
jmp
shrl
push
clc
cs
or
out
xchg
out
push
mov
in
add
lock
add
cltd
inc
bound
jno
test
adc
call
cs
mov
and
push
int
jo
xor
fwait
jge
clc
mov
mov
in
jge
inc
add
divb
clc
fs
add
jae
aaa
shr
sbb
daa
mov
call
push
les
xor
mov
add
cmp
xor
inc
inc
add
jmp
test
call
lods
sbb
lods
scas
sub
add
adc
add
or
clc
adc
jg
push
push
inc
rorl
fwait
imull
jecxz
sbb
sahf
add
add
test
flds
ljmp
mov
not
sub
and
mov
and
pop
sbb
adc
jo
add
data16
cmp
pop
xor
pop
jmp
lea
scas
add
add
cmp
scas
sbb
ss
inc
sbb
add
dec
call
xor
inc
push
insb
pop
or
mov
clc
popf
mov
adc
int
in
mov
cld
adc
insl
movsb
lret
xchg
sbb
add
loopne
mov
sbb
add
mov
sbb
add
in
ret
std
mov
sbb
add
jl
inc
add
mov
sbb
add
js
xor
out
dec
inc
in
xchg
xchg
dec
inc
add
mov
cli
out
jge
sbb
push
add
test
add
push
clc
mov
or
inc
inc
or
mov
or
jge
mov
sub
jbe
repz
gs
jns
add
cmp
jbe
bound
inc
push
pop
hlt
inc
dec
sub
inc
push
jp
mov
or
das
sub
add
jne
out
lcall
insl
or
jno
mov
dec
inc
repz
dec
or
sub
icebp
dec
push
psllw
lea
sbb
push
pop
insl
or
sbb
or
inc
jle
adc
mov
xor
xchg
adc
xchg
mov
jle
data16
jno
add
or
movsb
pop
pop
xchg
outsb
out
pushl
lock
pop
outsl
jae
mov
out
dec
xchg
add
repz
lahf
nop
add
adc
arpl
jno
push
je,pn
xchg
in
mov
shlb
inc
push
scas
sahf
in
mov
pop
mov
repnz
repz
pop
insl
or
je
or
add
or
inc
adc
inc
push
scas
in
mov
xchg
adc
fwait
fwait
push
dec
dec
or
sub
adc
or
dec
lds
adc
or
mov
inc
add
ds
jns
mov
add
jecxz
test
mov
and
inc
adc
loop
push
or
mov
inc
add
and
adc
jge
lret
aam
inc
add
pop
int
rolb
inc
add
jne
pop
add
or
inc
cs
leave
cld
mov
das
push
mov
cmpsl
cmp
inc
add
push
dec
ret
adc
inc
add
mov
mov
add
or
jbe
je
test
jo
inc
outsb
adc
xor
shlb
out
fs
adc
inc
push
or
inc
sbb
push
sbb
push
dec
cmp
fwait
add
or
out
aas
mov
lea
iret
dec
adc
push
and
add
jbe
add
add
inc
push
add
add
push
and
add
add
fld
inc
add
add
enter
in
push
cld
mov
xchg
sub
and
adc
aaa
sti
xchg
mov
test
testb
sbb
pop
cld
cld
adc
dec
adc
adc
data16
cmp
arpl
sbb
jns
je
data16
jnp
outsb
popa
das
add
cld
jge
dec
pusha
jne
dec
and
and
inc
rolb
sahf
xor
lds
jle
movsl
and
adc
loope
push
arpl
les
out
out
and
xor
cld
and
adc
mov
and
pop
push
jns
and
inc
inc
inc
dec
or
add
or
adc
test
add
sbb
push
sub
or
dec
add
adc
std
adc
sbb
or
push
adc
ss
pop
pop
mov
iret
aas
sbb
inc
adc
sbb
test
sbb
dec
inc
mov
js
add
testl
sbb
loopne
cmp
xorl
inc
xor
cmp
inc
xchg
xor
gs
and
jb,pt
bound
inc
scas
mov
insl
dec
mov
jle
xor
jg
mov
push
pop
nop
pop
outsb
aaa
shlb
push
call
inc
xchg
push
mov
sub
push
jbe
pop
add
movsb
cmp
fisubrl
inc
dec
add
inc
push
int
xor
ret
sti
fs
jo
add
push
add
fbld
push
mov
add
push
add
mov
mov
jae
jns
push
cmp
sbb
outsl
push
xchg
les
sbb
sbb
or
dec
adc
fiaddl
xchg
mov
xor
or
clc
pop
or
aaa
nop
cmp
lods
pop
sub
aas
xor
and
repnz
add
test
sbb
insb
xor
or
cmp
or
jo
inc
push
jno
cli
push
aas
shlb
mov
clc
mov
ds
dec
ret
outsl
jae
ret
shll
add
or
sbb
add
imull
inc
js
fwait
push
mov
divl
leave
mov
lds
ret
adc
push
inc
push
scas
mov
cld
xchg
add
mov
cltd
pop
jne
jne
sbb
int3
pop
xchg
aaa
mov
push
addb
add
inc
sar
iret
aas
dec
sbb
xor
hlt
dec
dec
push
fs
adc
push
rorb
inc
or
stos
push
es
sub
push
jno
nop
pop
sbb
pop
int3
mov
pop
repz
cmp
jle
or
jo
adc
cmc
add
lods
test
xchg
pusha
mov
cmp
inc
inc
mov
ljmp
xor
cmp
inc
or
rorl
lret
push
stc
lds
adc
push
ret
pop
adc
insb
push
ret
xchg
jmp
push
into
push
movzbl
pop
xchg
loopne
xchg
cmp
dec
jo
mov
ret
sbb
jne
dec
sub
push
push
jp
ljmp
adc
inc
fildl
int
pop
or
pop
scas
xor
incl
add
insl
pop
sub
inc
sub
jl
xchg
inc
lahf
jno
xor
sbb
and
pop
add
adc
movsl
sbb
or
sti
xor
addl
mov
and
xchg
and
insb
fcompl
sar
mov
repnz
repz
hlt
cmp
inc
adcb
ret
out
xchg
fmul
divb
or
add
xor
adc
test
insb
cmp
fs
pop
sbb
les
add
pop
mov
mov
or
push
shrb
add
sub
sbb
push
addr16
mov
cmp
addb
pusha
mov
cmp
cmpb
cmp
inc
sub
adc
jl
xor
lret
xor
or
pop
or
jg
lret
sub
aam
or
inc
dec
sbb
pop
cltd
or
add
cmp
push
fwait
add
ss
clc
xchg
psubb
mov
dec
cmp
ds
pushf
inc
sub
repnz
sbb
lods
adc
mov
push
adc
sbb
push
enter
and
int
clc
pusha
icebp
inc
out
pop
fisttpll
iret
ss
fwait
cmp
cmp
rcrb
jo
sub
lahf
push
push
jle
push
jmp
mov
push
dec
test
inc
cltd
out
or
dec
pop
add
jns
dec
insb
pop
pop
mov
sar
dec
sub
imul
hlt
mov
dec
pop
rorl
cmpsb
pop
int
and
xchg
or
movsl
adc
fidivl
and
iret
jp
mov
and
push
lods
add
cmpl
adc
test
dec
cmp
sbb
loope
adc
adc
pop
pop
push
pop
jno
mov
inc
iret
and
enter
and
negl
mov
daa
cmp
dec
mov
popf
adc
fmuls
outsb
aaa
fcompl
jle
mov
xchg
xor
pusha
or
xlat
and
lock
pop
mov
loopne
inc
gs
jo
lods
add
and
repnz
sub
shlb
insb
rcr
jl
sti
fbld
testb
inc
adc
add
les
out
outsl
jno
xor
mov
adc
xchg
lea
daa
sbb
adc
push
aam
jne
pop
and
push
dec
mov
ljmp
lret
push
fs
movsb
gs
fdivl
inc
ret
jl
jo
ret
stos
sub
loope
push
ffree
mov
push
mov
cmp
sahf
mov
xor
mov
cmp
js
adc
bound
loopne
es
sub
dec
jbe
scas
scas
dec
add
inc
lods
mov
xchg
lods
ror
loope
adc
xor
mov
push
fiaddl
mov
push
xchg
int
push
adc
push
push
dec
inc
sti
fwait
adc
dec
push
jno
dec
dec
in
inc
dec
fucom
adc
jge
addr16
push
push
std
ljmp
or
jg
es
fwait
push
sub
js
and
movsb
mov
js
push
inc
sub
imul
sub
dec
insb
dec
add
add
insl
test
push
aam
dec
xor
mov
mov
cwtl
add
add
test
nop
popf
nop
push
pop
outsb
cmp
push
adc
out
sbb
movsl
js
sbb
in
mov
outsb
jne
xchg
insb
pushf
and
push
sbb
lods
sbb
cmp
hlt
mov
cs
jbe
pushf
std
mov
mov
xchg
cmpsb
and
and
mov
or
sbb
arpl
frstor
sbb
sbb
out
pop
stos
lods
ljmp
fldl
pop
enter
pop
or
xchg
and
add
or
add
push
push
and
or
in
sbb
add
jb
push
or
jl
jle
push
add
push
outsb
or
inc
add
outsb
mov
cld
xchg
and
aaa
and
aaa
pop
adc
cmp
push
jp
js,pn
nop
bound
loop
inc
insb
mov
sbb
gs
cs
ret
and
pusha
cs
pushf
roll
das
cmp
rorl
push
sbb
push
out
inc
aaa
ret
loopne
shlb
mov
lcall
xchg
dec
or
addr16
cwtl
sbb
int3
inc
lea
inc
loopne
push
inc
xchg
shlb
nop
jl
cmp
cmp
and
add
les
mov
cmp
int3
scas
fistl
push
aam
test
sub
xchg
push
arpl
dec
and
sbb
jno
mov
sbb
push
aad
clc
xor
inc
rcrb
mov
and
cmp
add
jo
or
sti
gs
adc
mov
dec
adc
in
fildll
pushf
int3
jmp
mov
push
jge
xchg
out
mov
dec
mov
das
mov
and
nop
call
add
mov
ljmp
repnz
xor
cmp
ss
jae
cmpsl
adc
inc
push
cmp
xor
cmp
sub
jp
adc
pop
inc
fwait
jnp
outsb
adc
add
inc
loope
dec
sbb
mov
adc
adc
push
gs
add
pusha
sub
sbb
xchg
mov
test
pusha
outsb
insb
cmpsb
xor
test
xchg
pop
lret
adc
stc
xlat
jle
pop
adc
sbb
cmp
inc
dec
push
adc
inc
mov
xlat
inc
pop
lds
out
ret
xchg
pop
sub
rol
dec
or
push
cli
pop
push
adc
scas
lahf
in
lret
sub
pusha
adc
mov
out
repnz
pop
inc
shll
mov
inc
sarb
lret
jecxz
jb
cltd
mov
std
pop
in
stos
jnp
mov
pop
push
inc
cmp
xor
cmpsl
or
rclb
and
decl
cld
inc
mov
sbb
cmp
or
dec
and
mov
push
push
popf
jnp
cwtl
aaa
test
push
icebp
je
sub
cmp
int3
dec
bound
testl
mov
int3
and
inc
push
lcall
sar
lret
pop
add
sbb
cmp
inc
xchg
dec
sub
scas
out
mov
mov
or
push
add
xchg
mov
fsubl
cmpsb
sub
call
ret
dec
xor
xchg
lods
ret
movsl
cmp
les
add
fs
pop
push
js
and
lret
cmp
mov
call
xchg
inc
pushf
dec
or
outsl
lea
lods
add
xor
push
mov
inc
mov
push
sbb
sbb
insb
je
cmovp
mov
lret
xchg
pop
dec
and
jmp
push
jecxz
scas
mov
push
adc
fistpl
or
mov
addr16
add
aam
mov
orb
inc
adc
push
ret
pop
das
dec
enter
filds
andb
mov
shl
or
loop
push
mov
test
inc
loop
inc
jno
xchg
jno
and
jb
dec
push
nop
pop
push
mov
and
jmp
dec
push
xchg
lods
mov
push
je
fs
add
pop
push
adc
dec
add
into
aas
repnz
sub
xlat
sub
xor
jg
sbb
inc
adc
test
cmp
loope
inc
sbb
add
pop
push
add
sbb
xor
xor
add
mov
or
mov
xor
mov
mov
testb
add
cmp
push
xchg
orb
adc
pop
push
sub
hlt
test
loope
sbb
and
sbb
popa
xor
xor
sbb
inc
mov
sbb
cltd
or
ret
and
xchg
ret
inc
imul
arpl
ret
and
xchg
rorb
notb
cmp
mov
cmp
jecxz
andl
mov
mov
adc
incl
dec
cmp
clc
and
cwtl
or
out
jmp
insb
and
adc
mov
hlt
aas
clc
sahf
sbb
fs
push
sub
sbbb
mov
push
paddsb
sub
adc
popa
add
xorb
lods
or
roll
cmp
adc
cmpsl
dec
xchg
cltd
dec
dec
sub
adc
out
dec
std
jae
add
xchg
mov
sti
popa
sbb
add
adcb
cmp
lret
mov
dec
testb
lret
push
pop
addb
shlb
xchg
icebp
inc
cli
mov
xchg
imul
adcl
add
sahf
cmp
jp
test
lea
and
adc
push
xor
add
insb
jl
push
pusha
out
rclb
dec
and
test
mov
dec
push
hlt
mov
ja
pop
mov
mov
cmp
cwtl
in
pop
xor
mov
xchg
in
ss
dec
dec
and
aam
popa
cli
add
inc
and
adc
scas
xor
push
test
je
xchg
jecxz
shlb
cmp
movsb
dec
dec
jo
loop
push
or
fwait
test
and
adc
ds
xchg
adc
cwtl
aas
dec
mov
inc
jbe
jle
add
mov
inc
lock
sub
rolb
gs
mov
inc
jbe
xchg
adc
xor
ret
leave
sbb
xchg
xchg
cld
and
adc
jecxz
cltd
icebp
adc
cmpsb
push
cmp
push
cltd
pop
dec
xor
jl
addr16
or
cmpb
pushf
inc
push
leave
cltd
inc
xor
adc
mov
out
and
test
xor
xorl
popf
nop
into
js
jo
loop
sub
nop
sub
in
aas
adc
call
cld
pusha
push
or
inc
fwait
mov
xchg
mov
repnz
insb
andb
mov
test
or
loop
dec
and
int3
jno
or
xchg
fdivl
testb
jae
lock
fadd
dec
daa
inc
arpl
test
push
sub
push
outsb
into
xor
add
xor
xor
outsb
fwait
mov
int3
jbe
sbb
or
mov
sub
jae
dec
pop
xchg
shrb
std
cmp
mov
pop
std
dec
lret
out
sbb
sbb
aas
iret
pusha
fiadds
cmp
push
mov
cmovo
push
lret
scas
andl
add
xor
dec
insb
pushf
jns
xchg
cmpsl
test
enter
jmp
xlat
stos
ret
addb
jmp
mov
and
fbld
outsb
and
xor
or
mov
mov
and
clc
popa
mov
or
sbb
push
mov
mov
gs
mov
in
pop
adc
pop
jbe
aas
fwait
inc
inc
loopne
int3
aad
mov
nop
test
repnz
add
or
push
les
xchg
out
xor
bound
xor
ret
push
and
sbb
mov
pop
adc
loop
lahf
dec
paddq
push
in
and
sbbl
cltd
xor
push
xor
ret
inc
add
push
or
in
daa
cld
in
mov
and
fisttpll
int
enter
push
sub
scas
movsb
jecxz
sbb
fiadds
pop
mov
movsl
es
mov
add
movsl
mov
xchg
int3
in
pusha
push
and
popf
iret
pusha
xor
dec
sub
clc
sbb
cmp
inc
sbb
pop
mov
inc
and
push
or
push
fsubl
ret
aaa
add
je
loop
mov
icebp
cmp
je
jae
add
cs
and
rcrl
add
aad
and
clc
es
frstpm(287
xchg
xchg
js
jo
sub
mov
sahf
cmpsb
adc
es
mov
inc
out
adc
out
roll
ficompl
xor
sbb
andps
and
adc
xor
roll
mov
adcl
imul
jbe
scas
stos
into
das
lds
xchg
out
or
imul
scas
icebp
jno
inc
into
or
je
inc
shl
add
push
inc
add
in
xchg
sub
mov
jns
loope
cmp
adc
and
insl
xchg
cwtl
sbb
jno
scas
lret
inc
pop
enter
loopne
das
gs
inc
popf
fstl
cmc
lock
jb
inc
pop
dec
pop
fs
add
cmpsb
inc
and
fwait
dec
mov
dec
push
xchg
loope
popf
add
cltd
rcrb
mov
imul
mov
ja,pt
bound
xchg
jg
daa
je
fs
pop
es
inc
into
int3
dec
jo
cmp
and
mov
fsubl
pop
mov
fs
xchg
fsubl
fildl
or
test
xor
and
lds
icebp
pusha
inc
insl
mov
dec
test
movsb
add
out
dec
xor
pop
fwait
xchg
cmp
cmp
lea
xor
fiadds
loop
ret
js
or
inc
in
xor
jle
sub
mov
dec
jmp
je
sahf
push
fmull
faddp
push
js
pop
aas
dec
adc
jae
add
sbb
adc
stc
and
pushf
push
mov
insb
push
push
fisttpl
xchg
nop
rorl
add
pop
xor
mov
and
adc
enter
ret
ret
lret
jg
dec
add
jmp
sbb
lods
jg
es
cmpsb
mov
fisttpll
fsqrt
push
addr16
int
jne
xchg
cwtl
dec
inc
jo
push
inc
and
mov
hlt
aas
mov
rclb
dec
sub
xchg
test
push
into
inc
xchg
mov
mov
aas
scas
aam
mov
cmp
or
pop
inc
enter
lcall
xchg
pop
mov
into
add
lcall
fsubrl
clc
movsl
add
icebp
push
popf
or
add
jecxz
int
pop
in
mov
and
filds
popf
adcl
popf
cmp
sub
imul
je
test
push
or
out
adc
push
xchg
das
adc
pop
les
out
adc
ds
push
js
adc
lret
fstsw
cmp
das
ret
cs
push
aad
das
and
lods
ffreep
mov
push
sub
cmp
lods
fsubrs
cwtl
jo
dec
cli
je
push
adc
cwtl
daa
scas
push
push
sub
ror
popa
jb
xor
imul
push
xchg
je
adc
mov
idivb
dec
pop
sbb
aad
mov
cmpsb
inc
push
dec
gs
mov
cmp
pop
nop
ret
es
cli
mov
jle
cmp
sbb
dec
in
sbb
xor
mov
push
subb
xchg
xchg
mov
pop
add
js
nop
test
call
push
xlat
push
movsb
in
add
cmp
xchg
or
push
sub
insb
jmp
push
stos
push
and
insb
cmp
mov
push
inc
pop
out
into
insb
cmp
push
ficompl
sahf
jmp
out
lods
xchg
xor
pop
pop
sbb
lea
dec
mov
jne
adc
inc
cltd
or
push
pop
adc
rorb
add
fs
cmp
jle
in
pop
push
cmc
ds
push
or
rorb
and
sti
push
xor
mov
mov
adc
std
push
sysexit
push
test
push
push
cmp
dec
and
popl
ds
ret
jmp
xor
inc
pop
xor
inc
push
add
mov
clc
mov
dec
adc
cmp
push
insb
lods
int
cmp
sbb
leave
das
out
jnp
cmp
leave
outsl
sub
arpl
add
or
or
mov
ret
mov
scas
push
adc
rorb
loope
pusha
pop
outsb
adc
dec
adc
cmp
roll
movhps
std
inc
mov
cwtl
or
pop
xchg
aas
cmp
aad
mov
sub
test
add
scas
lods
repz
repz
fs
icebp
pop
pop
ffree
add
push
pusha
movsb
jmp
lock
cli
push
cld
das
outsl
sbb
or
fldl
pop
xor
cwtl
xor
dec
inc
adc
lret
inc
in
int
pop
xchg
in
and
int
cwtl
loopne
pop
movl
jbe
jnp
adc
mov
push
inc
push
pop
add
xor
mov
rclb
add
sbb
sbb
std
pop
push
pop
jmp
xchg
and
test
rclb
shr
inc
inc
das
xor
bound
pop
js
das
sbb
sub
cmp
adc
sub
pop
add
ja
adc
xchg
pop
xor
or
add
negl
mov
adc
sub
fldenv
ret
incb
pop
in
add
mov
iret
sub
adc
sub
shlb
int
push
push
adc
out
adc
jp
lods
ficomps
pop
or
or
mov
sub
mov
jmp
pushf
test
mov
jns
adc
dec
cmpsb
inc
iret
jmp
mov
nop
add
cld
andl
cwtl
popa
mov
mov
pop
jp
add
aaa
push
gs
out
pop
movsb
mov
and
pop
adc
adc
push
in
xchg
and
add
sub
xchg
out
fwait
in
aad
sub
sbb
push
mov
cmp
int
pop
dec
gs
mov
adc
mov
ret
push
mov
sbb
loope
push
jmp
pop
push
pop
xor
fs
mov
filds
cmpsl
adc
add
pop
test
test
push
jne
mov
sti
push
vmovupd
lods
into
inc
dec
fwait
int3
add
pushf
jb
popf
adc
sub
inc
fdivl
jns
stos
xchg
call
adc
xor
sub
push
push
das
xor
scas
adc
inc
sub
shl
pop
sbb
push
pop
mov
and
or
cmpb
inc
pop
ret
push
inc
dec
adc
test
adc
cmpsb
pop
cmpsl
pop
cmp
sub
xchg
inc
or
and
push
xchg
push
add
sub
loop
sti
sbb
jp
loopne
pop
dec
mov
xor
dec
ret
ret
push
pop
mov
les
clc
adc
movsb
pushf
xor
pop
mov
add
popf
inc
pop
fs
mov
dec
lods
sarl
add
jecxz
insb
or
cli
dec
push
xchg
inc
xor
cmp
cmp
sete
pop
sub
in
and
test
push
push
sbb
addl
cmpsb
orb
cmp
cs
orb
push
pushf
insb
xor
aas
push
pop
push
jns
lods
ss
les
sbb
cmp
or
dec
and
push
xor
inc
sub
adc
and
mov
cmp
inc
push
and
aad
jb
adc
in
dec
pop
ficompl
inc
push
jno
mov
test
pusha
push
test
xchg
inc
ret
dec
sub
sti
dec
push
mov
pop
inc
test
mov
push
adc
xor
push
and
dec
push
mov
dec
invd
push
push
bound
sbb
std
sub
js
xchg
rolb
xor
lds
cld
push
xchg
push
inc
pushf
inc
jae
lds
inc
dec
jns
push
ljmp
dec
xchg
xchg
insb
adc
lds
push
mov
rol
js
or
iret
xchg
xchg
jae
push
jns
mov
add
push
das
xchg
or
sub
inc
adc
xchg
xor
pop
fildll
push
cld
mov
mov
fadds
push
pop
sbb
push
and
dec
mov
cwtl
cwtl
add
ret
repnz
sahf
xor
es
icebp
push
in
push
cmp
mov
testb
mov
ljmp
push
cmp
inc
xchg
jns
loopne
rolb
dec
fs
test
fisttpl
bnd
push
jno
mov
lahf
xchg
cmpsl
cwtl
jae
xor
int3
in
xor
push
sbb
xor
xor
unpcklps
orl
mov
or
mov
adc
aam
sub
inc
and
push
or
inc
pop
push
daa
mov
cmp
push
and
mov
cmc
movsl
or
adc
test
mov
sbb
lds
out
adc
sbbb
xchg
je
push
sub
inc
dec
and
stc
mov
and
xor
sub
ljmp
int3
push
push
inc
add
add
leave
fwait
rcr
sbb
testl
or
pushf
fstl
jle
mov
ffree
daa
sbb
leave
sahf
fwait
inc
gs
jb
inc
dec
sub
pop
movl
sti
dec
call
hlt
push
in
mov
hlt
add
add
mov
mov
data16
cmp
or
stc
sbb
or
pop
dec
adc
cmpsb
repnz
jns
push
loop
xor
cmp
or
in
jo
leave
sbb
adcl
adc
mov
ja
xor
sub
push
add
ss
es
adcl
aad
les
inc
inc
lea
and
push
rcrl
ds
cld
fnstenv
or
sub
push
dec
iret
pop
loopne
clc
gs
fxch
jns
pusha
jl
hlt
movsb
sbbb
imul
adc
fnstcw
jecxz
adc
sarb
dec
es
push
lock
je
xor
mov
sub
or
vpermil2ps
cltd
xor
iret
mov
je
cmpsl
mov
insl
ret
int3
adc
lock
push
out
or
and
add
shrb
fbld
or
sub
push
push
fwait
sti
pmaxsw
daa
sbb
and
inc
push
or
add
xor
jbe
lods
imul
icebp
mov
add
ret
and
int3
jge
adc
iret
sbb
dec
cs
or
scas
pop
rolb
sarl
enter
cmp
das
mov
push
nop
or
xchg
dec
or
loopne
xchg
dec
decb
push
inc
movsb
mov
xchg
mov
in
or
pop
insl
mov
movsb
data16
add
jp
int
dec
cli
xchg
stos
jmp
lret
push
test
jle
call
add
cwtl
addr16
push
jbe
lea
cmp
mov
sbb
je
adc
jno
call
rol
ret
push
adc
push
cmp
mov
push
adc
push
pop
cmp
cmp
adc
andl
push
mov
js
sbb
xor
fdivs
mov
and
enter
or
sbb
gs
or
cwtl
and
and
or
ja
xchg
lods
xchg
call
scas
stos
jle
inc
insb
outsb
xor
enter
leave
lea
push
adc
leave
bound
pop
shrb
or
sub
and
sarb
sbb
cmp
out
sbb
insb
inc
dec
fisubrl
loope
jne
inc
sbb
hlt
xor
repnz
shll
push
inc
xor
lds
push
and
mov
adc
in
sub
iret
push
mov
sbb
xchg
adc
or
push
xchg
adc
inc
mov
add
mov
je
inc
jle
and
cmpxchg
shll
pop
sarl
inc
and
addr16
dec
or
pop
dec
insb
clc
add
mov
push
data16
movsw
jno
int3
mov
js
xorl
fs
xor
imul
in
or
adcb
cmpsl
es
rorl
jb
push
cmp
dec
shll
add
shll
mov
outsb
clc
idiv
mov
xor
adc
xor
stos
sbb
data16
fwait
popa
shlb
lds
and
sub
or
adc
and
jnp
pop
jb
adc
jo
pusha
int3
cmp
xor
roll
push
adc
push
cwtl
cmp
cs
sbb
rclb
subb
jle
xchg
pop
mov
test
aam
rcr
fwait
inc
cli
scas
mov
dec
jo
mov
sbb
rclb
scas
fcmovbe
rcrl
pop
adc
decl
xor
jge
scas
fiadds
int
loopne
push
sub
mov
nop
test
sub
mov
mov
xchg
pop
xchg
dec
add
lea
clc
stos
repnz
out
jne
jae
adc
popf
jo
or
add
xchg
int
scas
sub
and
je
pushf
sub
les
fsubl
push
sub
loop
adc
push
and
xchg
aas
fiadds
ljmp
push
mov
jbe
adc
aaa
fnsave
fsubr
push
int
rorb
mov
loope
xchg
cmp
lods
mov
mov
xor
in
les
push
js
sbb
sub
add
call
cmp
sbb
jbe
stc
dec
mov
fcoml
jbe
pusha
fldenv
sbb
jb
or
mov
xor
cmc
xchg
ljmp
dec
xor
push
enter
mov
push
mov
add
movsb
inc
repz
xchg
lods
adc
push
inc
stos
adc
hlt
das
mov
mov
mov
or
sbb
stos
dec
inc
mov
lods
add
dec
sbb
inc
xor
test
sub
ret
je
adc
adc
adc
out
in
jno
scas
and
outsb
push
out
cld
inc
xor
test
add
mulb
lock
imul
addr16
int
int3
mov
pop
aam
roll
data16
rol
mov
fstl
fiaddl
lret
add
jno
fstpl
jae
inc
in
loope
and
movntq
mov
xchg
jo
popl
loop
push
lea
shl
cmp
mov
inc
pop
enter
out
cmp
dec
cmp
out
cld
rcr
cli
sub
jge
sti
and
pusha
loop
mov
xchg
test
or
fisubrl
in
and
adc
dec
int3
enter
fdivr
and
add
clc
fcoms
in
scas
mov
mov
add
add
mov
je
negb
sbb
add
adc
roll
gs
cmpsb
cmpsl
inc
fcmovb
pop
pop
jle
ret
jno
je
fiadds
ret
sub
sti
bound
mov
test
fs
and
or
pop
ret
cmpsb
mov
insb
mov
inc
cld
pop
test
sbb
mov
xor
adc
mov
or
les
sub
lods
hlt
and
clc
push
push
mov
sbb
mov
and
inc
pop
push
push
loop
enter
cmpl
test
push
push
or
stos
out
hlt
mov
in
mov
jmp
pop
jo
imul
je
incl
push
inc
jge
imul
sbb
push
fmuls
mov
push
push
cs
jge
push
jno
push
adc
mov
jns
daa
inc
int3
int
mov
data16
stos
or
into
push
mov
ljmp
dec
adc
mov
sub
mov
cltd
test
aad
cmp
sbb
mov
rclb
paddq
xor
lds
daa
sub
sbb
cmp
pop
xchg
daa
dec
jb
xlat
loopne
lds
pop
lods
incl
xchg
ror
xor
xchg
sbb
mov
cwtl
in
adc
fadds
lcall
test
jle
das
pusha
push
mov
je
add
mov
movsl
sub
add
ds
or
or
stos
mov
add
pop
cmp
imul
adc
xor
and
add
dec
cmp
lods
or
cs
sbb
or
lock
rclb
or
cmovnp
and
lret
adc
lods
add
dec
in
mov
insl
aam
mov
lret
mov
scas
xchg
xor
or
sbb
pop
inc
jno
bswap
or
lea
push
mov
and
fs
push
jo,pn
shrl
push
mov
jle
addr16
sub
sub
adc
int
clc
cwtl
es
cwtl
pushf
movsb
aad
push
lea
and
or
aad
test
test
push
andl
adc
cmpsl
aam
test
out
or
xchg
xor
lds
xchg
sbb
fwait
push
inc
inc
mov
ret
xor
mov
or
cld
push
enter
inc
pop
lret
mov
adc
jge
add
dec
in
add
das
clc
es
mov
adc
sbbb
mov
xlat
adc
mov
adc
je
push
popf
push
sub
dec
mov
mov
repnz
push
mov
add
scas
mov
into
imul
mov
or
add
push
psubb
mov
cltd
jl
xor
pop
jecxz
hlt
test
repz
mov
xchg
inc
pop
xor
and
les
push
pusha
cmp
cli
push
xchg
inc
pop
xchg
fistpl
adc
jg
imul
subl
add
jne
jg
inc
outsb
ja
leave
adc
je
mov
test
cmp
pop
cmp
and
pop
nop
push
cmp
inc
jp
cmpl
xorb
xor
add
mov
cmp
adc
fisubl
pusha
adc
test
sar
je
fs
jne
insl
popa
cltd
add
loope
mov
clc
sbb
xchg
cmp
jns
ljmp
and
push
insb
in
in
cmp
outsb
mov
sub
adc
dec
push
rclb
push
sbb
add
mov
mov
call
scas
aaa
sub
int3
mov
jo
push
dec
and
lret
or
sbb
adc
test
daa
dec
call
push
outsb
adc
cli
sub
add
and
or
data16
movsb
push
add
sbb
push
cmpsb
aaa
inc
and
push
test
cmc
adc
outsb
js
cmpb
mov
stos
mov
mov
cmp
jns
mov
cmove
xor
adc
adc
in
push
jb
mov
or
call
popf
lock
dec
xchg
sub
and
clc
lock
in
sub
outsb
loop
push
rclb
push
mov
xor
push
fsubr
cmpsb
or
movsl
loopne
and
push
mov
pop
push
xor
adc
js
clc
push
pop
int
inc
jae
jg
stos
stc
addl
fdivrl
imulb
pusha
and
out
pushf
loope
sahf
push
push
inc
or
sbb
outsb
mov
inc
lods
inc
out
ret
hlt
mov
roll
push
pop
imul
shll
push
sti
push
iret
mov
jbe
cmp
aam
faddl
adc
repz
loope
mov
cmp
push
pusha
jle
mov
and
fstl
inc
push
push
push
pop
mov
and
popf
enter
call
sbb
mov
fadd
adc
sbb
dec
mov
aam
into
or
data16
xchg
mov
push
test
addr16
and
adc
add
and
bound
bound
in
lahf
adc
mov
xor
mov
leave
popa
xlat
lret
xchg
push
xchg
loope
dec
push
mov
loopne
adc
rcll
data16
push
cmp
mov
negb
fs
mov
add
jb
dec
cld
out
arpl
out
pop
pushf
inc
add
or
das
scas
or
fdivrs
pop
mov
push
mov
jge
pushf
adc
xchg
sub
mov
hlt
ret
aas
pop
aad
flds
dec
loopne
dec
fmuls
jne
push
loopne
aaa
push
out
pop
iret
push
cs
xor
shl
xchg
pop
fmull
sbb
je
sbb
test
push
aaa
addb
jb
xor
lea
sub
lret
shlb
loopne
and
add
jbe
dec
mov
jnp
hlt
inc
movsl
push
push
outsb
and
sub
lret
shlb
roll
int
and
xchg
insb
pop
dec
xchg
pusha
and
test
test
jae
add
pop
add
subb
sub
and
fistps
in
iret
push
xorl
in
cld
adc
stc
shrb
adc
loopne
xchg
inc
repnz
movsl
xor
aaa
and
pop
in
mov
repnz
mov
sub
movsl
roll
mov
and
inc
fwait
mov
fimull
movsb
movsb
mov
mov
inc
jge
xor
int3
jecxz
or
into
sub
in
cmp
cmpsb
cmpb
xchg
push
push
inc
sahf
lock
sbb
int
iret
or
inc
jl
push
sub
xchg
xchg
mov
pop
fimull
int3
insl
or
sti
lret
in
cmp
cli
push
sbb
pop
les
dec
movsl
add
cwtl
jmp
xor
enter
aam
mov
cli
inc
ja
cmpb
repnz
in
lea
sub
out
add
ss
push
ret
inc
mov
cwtl
leave
mov
inc
or
inc
mov
mov
and
lods
push
add
clc
xor
adc
jo
aam
cld
fs
mov
jns
int3
sbb
inc
mull
cs
arpl
mov
enter
add
cmp
jb
int3
dec
into
inc
int3
bound
enter
hlt
stos
imul
push
inc
mov
push
clc
inc
pop
mov
cltd
lea
xor
mov
cvttps2pi
or
lds
out
gs
mov
xchg
push
lea
lds
jno
pop
xchg
loop
or
test
push
ss
outsb
xchg
fs
filds
cltd
fwait
push
scas
xchg
mov
lock
mov
iret
push
pop
cmovnp
push
sbb
cmp
dec
cmpsb
mov
or
jne
test
or
adc
jae
push
lock
inc
shll
mov
push
sbb
cmp
push
and
xor
add
sub
insb
test
stc
bnd
add
out
sahf
roll
xor
adc
sbb
inc
add
xchg
pop
mov
into
xchg
adc
push
inc
add
rcll
je
sbb
andl
in
addr16
push
aam
js
push
push
mov
mov
lea
push
mov
nop
gs
ljmp
cmc
push
inc
jge
or
inc
push
cs
cmpsl
add
push
sbb
cmc
xchg
lcall
push
jl
xor
push
lods
mov
adc
addr16
pop
imul
into
and
jo
adc
adc
fisttpll
jo
and
and
mov
or
and
sbb
adc
stc
por
mov
sbb
int
sbb
or
scas
fs
cli
add
pop
sbb
pop
add
add
inc
inc
loopne
lods
lcall
adc
lret
mov
jb
insl
adc
roll
jne
test
loopne
push
stos
ror
sbb
push
js
cmp
jg
int3
push
jge
xor
clc
ret
lock
lock
call
inc
xchg
xor
pop
nop
dec
sub
dec
mull
leave
or
int
lock
sbb
xor
pop
mov
pop
xor
and
shll
sbb
inc
push
jge
ds
insb
sub
icebp
out
out
adc
xor
sti
and
jbe
fdiv
dec
repnz
pop
xchg
mov
iret
or
inc
lret
push
rcrb
cs
inc
test
push
xlat
xchg
dec
add
add
mov
push
lds
or
addb
push
xor
cld
ret
mov
or
lods
add
dec
or
in
inc
icebp
loop
adc
cmp
popa
cmpl
and
and
add
sbb
fcoml
add
sbb
and
pop
adc
test
push
jne
adc
int3
adc
jp
or
lock
sti
cld
mov
cwtl
dec
sbb
push
stos
outsb
popa
pop
pinsrw
push
push
adc
sbbl
lret
pop
pop
dec
mov
mov
cmp
sub
sub
mov
fcoml
lods
add
clc
add
sub
adc
push
push
push
out
sbb
cmp
pop
stos
test
xor
cmc
les
stos
xor
push
xchg
cmp
enter
daa
fdivrl
orl
push
repz
addr16
out
jo
dec
stos
clc
std
movsb
push
invd
mull
jl
subl
adc
cs
dec
sub
daa
fldt
dec
or
mov
orl
push
fildl
movntps
jne
add
sbb
outsl
cs
ret
ret
mov
ror
call
fmull
ja
sub
sub
ret
push
push
xchg
jae
pop
hlt
jmp
fcompl
dec
mov
pop
mov
jb
into
or
xor
out
and
daa
inc
and
cmpsb
inc
jp
test
idivl
ja
mov
jb
mov
xor
pop
xchg
test
jns
cld
stos
pop
js
sub
sahf
dec
jge
divps
sub
adc
push
iret
pop
add
sbb
fisttps
or
jnp
pushf
push
pop
sbb
mov
and
loope
scas
subl
jl
cs
xchg
jmp
lret
sahf
mov
dec
jl
dec
out
lods
pop
addr16
adc
ss
jge
or
mov
dec
pop
mov
das
popf
call
adc
orb
xchg
push
inc
push
in
out
adc
jno
push
and
popa
sub
out
mov
dec
jbe
dec
adc
repz
dec
mov
nop
mov
adc
pop
inc
jmp
into
dec
lahf
ja
sub
inc
push
mov
xor
and
loopne
test
bound
xorb
outsl
mov
or
cmp
call
test
cs
dec
orb
negb
push
push
dec
test
dec
adc
add
int3
fucompp
mov
xchg
pop
jmp
pop
ror
and
mov
sub
sbb
xchg
stos
mov
shlb
and
jmp
push
sub
fucomi
ret
mov
or
push
jmp
pop
jne
and
push
push
adc
add
dec
mov
sub
mov
cmp
or
sbb
adc
test
inc
adc
cmp
inc
xor
iret
lods
jns
pop
cmp
dec
add
pop
push
into
pop
jns
mov
cld
push
movsl
dec
push
insl
ss
pushf
mov
repz
pop
xor
aam
cmp
ret
jg
and
ret
popf
aam
push
test
xchg
sub
repz
adc
cwtl
rorb
xlat
addl
push
jecxz
mov
in
call
and
or
cmp
clc
mov
pop
sbbb
sub
popf
jne
mov
jl
aas
add
jo
push
and
test
mov
adc
mov
aaa
shlb
enter
sbb
pop
mov
into
adc
mov
xor
inc
push
adc
and
in
inc
fdivl
sbb
movsb
or
mov
rolb
das
js
repnz
and
aam
xorb
outsl
push
sbb
dec
ss
lea
jge
out
sbb
je
jns
mov
ret
inc
pop
sbb
add
push
sub
inc
jl
dec
adc
and
in
jae
movsl
pop
clc
gs
mov
pop
sbb
jl
cs
aaa
fstps
inc
push
lods
subps
xor
rcrb
mov
das
add
dec
xor
imul
insl
rol
cmp
stos
inc
out
adc
pop
jge
inc
and
mov
push
sbb
add
push
sub
xor
sub
dec
lcall
daa
jo
push
cs
lods
sub
jne
clc
adc
push
lea
mov
mov
push
push
cmp
int
jb
push
xchg
adc
adc
enter
sub
mov
dec
mov
lds
jbe
xchg
call
jo
inc
aaa
mov
adc
icebp
fistps
xor
jbe
aam
ds
inc
add
xor
cwtl
cli
xchg
lock
pop
push
lea
jmp
xor
ret
sub
lods
stos
or
inc
jge
out
jb
lahf
sbb
jns
aad
xor
push
in
adc
lds
jle
popa
xchg
adc
daa
mov
ret
ja
mov
mov
push
push
inc
test
xchg
or
pop
pop
mov
in
js
pop
or
dec
inc
xchg
ds
xchg
ljmp
cmp
add
out
pop
sub
leave
scas
nop
or
add
roll
adc
lods
push
sub
push
pop
push
mov
test
hlt
dec
cmp
xchg
pop
icebp
mov
adc
mov
cmp
enter
test
test
addl
out
call
push
mov
jns
adc
sub
jno
nop
xchg
jmp
lret
dec
sub
hlt
adc
clc
das
lahf
sub
push
push
hlt
or
gs
or
mov
mov
mov
mov
add
xor
jo
popf
ja
dec
cs
adc
adc
mov
mov
movsl
clc
sub
xlat
outsl
xchg
add
xchg
out
cmp
mov
mov
push
or
fistps
sbb
jnp
movl
sbb
ljmp
aas
shrl
push
or
fdivrl
add
jbe
xor
cmp
mov
sub
incb
movsl
mov
push
repz
pop
ret
dec
nop
cmpsl
in
sub
and
xchg
and
add
jl
xor
insb
in
xchg
or
mov
cwtl
mov
bound
push
cltd
cmp
clc
rolb
xchg
shlb
lahf
xor
jne
lds
jmp
xchg
and
andb
icebp
inc
and
test
clc
push
xchg
les
xor
mov
std
testb
and
ret
addb
sti
daa
cmp
or
rdpmc
test
or
into
leave
and
adc
sub
stc
fsts
ljmp
mov
fidivrs
and
popl
test
shll
cmp
sub
xor
inc
adc
xchg
in
lock
shl
pop
and
or
xchg
lods
pop
xor
arpl
lret
cmp
xor
mov
sbb
adcb
loopne
dec
xchg
sarb
fdiv
aaa
cltd
fsubs
je
adc
add
das
das
scas
outsb
cmp
add
cmp
xor
pop
pushf
ja
pushf
xor
testb
pop
push
mov
imul
mov
pop
xchg
test
ja
jbe
mov
push
and
out
and
clc
rcl
and
mov
inc
iret
fimuls
or
lcall
xchg
dec
mov
mov
in
jne
pop
sub
movsl
lea
shlb
or
push
call
inc
sub
mov
xlat
fiadds
jns
inc
inc
scas
inc
dec
sbb
loop
das
inc
shlb
cmp
add
dec
call
clc
sbb
and
dec
idivb
std
xchg
pop
pop
and
in
shr
adc
es
imul
insb
mull
mov
inc
inc
gs
inc
mov
add
pushf
push
pop
out
jg
add
or
push
sbb
mov
cwtl
or
sbb
into
je
cmp
xchg
jge
int3
lods
push
loope
pusha
cmp
or
clc
pop
aas
out
xor
hlt
sbb
cltd
xor
cwtl
popf
repnz
outsl
xchg
repnz
in
negb
int3
mov
sub
testb
mov
lret
fildll
push
je
aaa
in
sbbb
stc
imul
ss
ror
dec
adc
mov
push
stos
stc
iret
pop
xchg
hlt
cli
testl
inc
jbe
push
dec
mov
pushf
arpl
add
rclb
inc
scas
aas
cs
and
adc
rclb
inc
mov
nop
roll
dec
in
jl
xchg
lcall
insb
dec
or
test
adc
pop
frstor
lea
sub
inc
jmp
sbb
loopne
lds
adc
daa
outsb
adc
adc
shl
inc
sub
or
cld
and
mov
or
aam
cmp
adcb
fsubrs
dec
orl
or
add
cmp
insl
xchg
xchg
sbb
and
dec
mov
enter
pushf
xchg
pushf
inc
movsb
adc
mov
cltd
pop
popf
movsb
push
decb
jge
scas
sub
and
sahf
bound
adc
sbbb
xor
xchg
inc
inc
adc
fldenv
push
je
fsubrl
aad
ret
or
dec
push
pusha
jle
push
dec
lds
xor
repnz
aaa
popl
outsl
shl
out
or
pushf
jnp
jo
and
and
add
addr16
xor
int
dec
ret
mov
pop
inc
xor
clc
pop
cmp
clc
loop
dec
in
sub
inc
pop
pushf
aaa
sub
inc
push
popf
inc
inc
push
shll
in
dec
and
jg
xor
jno
push
adc
stos
push
or
push
outsb
adc
adc
xor
jp
negb
push
mov
xchg
and
push
divl
sahf
mov
imul
dec
adc
aas
jmp
xchg
faddl
mov
out
roll
and
pop
subb
shll
sub
adc
rsqrtps
cmpl
adc
pop
cmpb
popf
or
out
cs
fistps
lea
add
lcall
or
adc
xor
push
push
jmp
adc
pop
add
jns
loopne
mov
je
movsl
cld
lock
mov
lret
mov
adc
sbb
mov
loop
or
xor
dec
xchg
adc
lods
mov
push
psubb
gs
xorl
ljmp
aam
jne
sbbl
xchg
mov
cmpb
fcompl
or
loopne
add
lahf
adc
or
lea
lahf
sbb
and
inc
fsqrt
mov
rcl
inc
cld
fistps
adc
rolb
je
popf
inc
mov
mov
out
pop
in
adc
and
jg
push
xchg
mov
mov
adc
mov
lds
je
jne
add
sti
or
pop
in
and
outsb
outsl
mov
jmp
push
andb
add
jge
mov
mov
into
in
adc
mov
leave
ljmp
push
rolb
cwtl
push
and
aam
mov
std
lods
or
mov
jnp
pop
pop
into
push
dec
cli
dec
aas
mov
ficoml
or
or
add
sub
pop
cld
sbb
subb
ja
lea
mov
dec
int3
test
push
or
inc
add
ret
imul
inc
xlat
cmp
jbe
mov
mov
test
andb
rclb
and
mov
sbb
mov
mov
or
adc
adc
and
jbe
push
out
sub
cmp
test
sbb
push
mov
fdivs
and
pushf
and
mov
inc
and
or
or
mov
mov
rol
jo
test
movsb
cmp
or
lea
lea
mov
xchg
jp
adc
xlat
in
iret
mov
clc
notb
das
push
pop
ret
es
mov
scas
and
pop
iret
jns,pt
pop
dec
add
imul
and
stc
pop
and
or
adc
cmp
daa
xor
clc
stos
pop
inc
inc
fiadds
push
pop
mov
leave
cmp
pop
mov
pop
xchg
cs
push
xchg
mov
mov
pop
push
cs
int
jno
jbe
xchg
xchg
sub
sub
mov
movsl
pop
hlt
arpl
or
pop
pcmpeqw
repnz
and
cmp
jle
inc
mov
bound
sub
nop
cmc
mov
out
jl
or
lock
jno
pop
ret
xchg
inc
dec
sbb
mov
push
push
push
rolb
push
pop
mov
push
jne
call
sub
dec
imull
push
test
xor
pop
add
cltd
into
aas
ret
xor
sub
gs
add
mov
jg
repnz
or
fwait
mov
hlt
mov
sub
inc
lcall
ds
pop
aas
or
xchg
mov
pusha
inc
mov
and
sub
dec
or
repz
cmp
jne
fisubs
movsl
rolb
lret
push
or
in
push
lcall
push
roll
xor
xor
rclb
xor
push
push
lods
adc
push
mov
add
jge
imul
ret
icebp
add
call
movb
jns
pop
pop
orl
pusha
mov
inc
inc
rcl
xor
fwait
pop
test
adc
push
mov
xchg
dec
xchg
jl
pop
jo
adc
push
adc
aam
divps
repz
pop
push
push
mov
clc
inc
or
js
fidivrl
mov
enter
pop
mov
cmp
push
cmp
ficoms
push
std
xchg
nop
orb
mov
push
cmp
out
int3
or
daa
jl
call
sub
dec
and
jo
adc
scas
jp
lods
pop
jl
sub
jnp
enter
adc
push
insb
in
inc
fnstenv
cmp
out
push
cmp
inc
insl
fs
dec
push
test
xor
ret
adc
xchg
pop
sbb
loope
addl
aaa
divb
jp
stos
mov
dec
inc
das
xchg
dec
jns
add
fmuls
sub
cmpsl
push
sbb
sub
xor
pushf
iret
cs
push
es
and
sub
or
insb
add
mov
and
testl
and
pop
loopne
add
jns
push
add
inc
cwtl
push
das
push
mov
push
imul
mov
inc
push
or
out
jo
pop
fbstp
hlt
sar
and
jmpw
dec
jne
jle
jbe
sbb
rcr
adc
test
push
cmp
or
ss
mov
dec
in
inc
fsubrp
xchg
int
adc
mov
mov
jno
fsincos
xlat
or
or
movsl
adc
outsb
cmp
es
and
dec
or
adc
in
call
mov
stos
loopne
fadds
cmp
inc
test
insl
cwtl
inc
or
lods
iret
xchg
jno
test
push
push
dec
iret
hlt
sub
popa
dec
int
dec
repnz
fs
dec
mov
je
fbld
mov
cwtl
cli
dec
mov
pop
xor
ljmp
iret
lock
xor
xchg
push
cs
jo
insl
adc
add
adc
fldt
ja
inc
lock
add
mov
out
mov
shl
sbb
ret
sub
out
sub
push
scas
outsl
popa
cmpsl
fisubrl
add
inc
fs
call
cmpsl
fnsave
pop
sbb
cmp
outsl
pop
cmpsl
int
adc
dec
push
imul
push
sub
mov
or
and
iret
mov
pop
in
jl
nop
push
xchg
dec
pop
mov
enter
mov
shrl
in
fwait
int
std
add
xor
push
fdivrp
dec
and
adc
fnstsw
inc
test
leave
lods
and
je
mov
aaa
inc
fsubrp
or
cmpsb
imul
movsl
xchg
adc
int
xor
adc
jae
dec
add
fdivl
add
jns
cmpsl
xor
push
ds
lcall
cltd
sbb
popa
jo
je
inc
xor
sub
jl
ss
cltd
inc
xlat
repnz
addl
cld
andl
enter
push
xor
call
imul
cltd
adc
adc
fdivrs
insl
adc
mov
scas
lret
cmpsb
es
xor
add
fistps
outsb
xchg
push
inc
je
push
inc
pusha
jl
bound
jl
pop
hlt
mov
xor
add
arpl
fsubrs
push
mov
mov
dec
and
fisubrs
inc
adcb
jge
es
fimuls
push
out
rorb
jo
inc
inc
add
mov
jae
std
aaa
adc
roll
mov
out
push
push
adcl
and
inc
cmp
adc
sub
lds
rclb
push
enter
subl
push
outsb
mov
pushl
sub
xor
push
cmc
xchg
push
sbb
jmp
mov
dec
sahf
pop
inc
add
sahf
push
in
js
xor
push
mov
add
inc
aam
sub
inc
add
xor
push
mov
mov
push
repnz
ret
cmp
sub
inc
dec
test
dec
mov
cmp
stc
jo
scas
sub
mov
cltd
push
and
faddl
imul
sarb
outsb
and
int
and
ds
adc
mov
and
sbb
in
aam
or
sub
add
cmp
test
mov
jg
fidivrs
xchg
rcll
sub
jae
mov
cmp
mov
mov
addb
in
pushf
jno
mov
mov
inc
mov
xorb
scas
dec
push
xor
addr16
push
cs
test
pop
and
dec
out
fcoms
insb
mov
jecxz
dec
cmp
movsl
push
sub
jge
fs
pusha
arpl
ret
aas
push
cli
inc
movsb
scas
adc
xchg
cwtl
sbb
sub
cmp
adc
sbbl
dec
lds
cld
jne
jne
sbb
stos
mov
pushw
adc
movsb
in
xchg
push
push
out
sub
mov
sbb
cmp
aad
and
adc
mov
push
je
mov
adc
stos
pop
xlat
into
push
pop
test
cmp
je
mov
cmp
mov
xchg
jecxz
dec
add
mov
dec
js
andl
and
mov
mov
mov
pop
iret
dec
add
pop
mov
pop
ret
call
dec
inc
mov
sbb
adc
sbb
shlb
and
sub
mov
xorb
inc
jbe
cltd
sbb
cmp
sbb
sbb
xor
xor
xchg
in
sbb
xor
xor
movsb
dec
or
mov
push
push
shlb
ss
pop
dec
add
push
and
cmp
shlb
pop
addr16
outsl
adc
sbb
ret
scas
jge
xchg
call
bound
or
pushf
mov
xor
cmp
or
int3
sbb
into
cmp
cmp
and
xor
cmp
jmp
xor
cmp
in
dec
and
xor
adc
popa
sbb
movsl
test
sub
cmp
push
cmp
inc
push
inc
movb
cs
insl
mov
sub
and
dec
sbb
cltd
fdivrs
pop
insb
inc
push
jno
mov
dec
pop
xchg
sahf
enter
adc
push
jo
pop
pop
dec
add
xor
stc
mov
sbb
adcl
incl
cs
scas
mov
inc
xchg
pop
js
aas
jmp
mov
jle
push
jp
mov
push
cmp
subb
fucomp
and
sbb
das
cld
out
xor
add
cmp
inc
lods
outsb
in
lds
adc
out
jns
dec
or
xchg
int
loope
adc
pop
dec
arpl
loope
shl
jbe
push
sub
or
pop
jge
insl
push
inc
negl
mov
inc
push
push
jmp
out
mov
push
pop
out
mov
jecxz
inc
into
sbb
push
push
int
jmp
mov
mov
mov
shlb
sbb
add
fcmovnbe
cmp
xlat
sahf
push
movb
xchg
int
cmp
adc
arpl
pop
repnz
leave
mov
lret
or
pop
ret
xor
scas
jne
stos
jne
push
push
cmc
xor
pop
adc
jp
push
inc
cli
mov
std
cmp
xchg
sti
adcb
cmp
add
push
lds
mov
push
or
dec
mov
and
mov
sbb
fwait
call
adc
addb
xlat
es
mov
leave
lea
or
ret
das
aad
icebp
int
xorb
jne
aam
add
test
dec
movsb
cmpsb
mull
loope
xchg
ds
cwtl
mov
add
rolb
or
test
andl
popf
dec
inc
pushf
xor
adc
fcomi
jbe,pn
sbb
pop
fsubs
je
cmp
add
leave
push
cwtl
nop
jnp
dec
hlt
and
call
aaa
or
es
sahf
mov
imulb
rclb
xor
pop
int
sbb
and
xchg
xchg
adc
movsl
sti
imul
imul
dec
loope
es
je
adc
inc
push
cmpsb
jnp
mov
pop
push
pop
and
push
dec
cmc
sbb
xchg
cmp
lret
leave
push
or
adc
aad
pop
mov
lret
sete
sarb
pop
out
sarb
add
jle
pop
cld
cmp
lock
lods
roll
dec
xorl
inc
pop
mov
mov
push
jbe
ds
sbb
inc
out
jno
test
test
idivb
cmp
push
movsb
pop
push
bound
xor
pushf
je
xchg
jb
int3
fcmovnb
mov
push
popf
add
jl
sub
pop
popa
int3
shll
js,pt
push
addl
dec
retw
inc
xchg
mov
and
xchg
push
push
repnz
and
adc
out
sbb
sbb
sub
repnz
pop
adc
push
nop
test
pop
fdivl
xor
cmp
sub
inc
cs
inc
pop
adc
or
pop
dec
xor
roll
add
push
test
add
xchg
into
adc
jns
adc
pushf
in
pop
pop
and
clc
in
repz
push
loopne
js
inc
push
popf
pop
inc
fadds
inc
in
lock
ds
ds
mov
sti
cmpsl
jmp
push
loopne
test
xor
imul
or
inc
add
incb
pop
fidivrs
je
sti
dec
push
stc
jne
sub
xor
xchg
loope
cmp
loop
aad
dec
mov
push
xchg
jge
adc
in
or
add
in
dec
mov
jmp
out
mov
dec
ret
pushf
adc
clc
sbb
hlt
push
xor
dec
dec
mov
rcll
dec
fwait
out
les
or
sub
aas
xchg
daa
shlb
out
sbb
and
xor
adc
scas
cld
pop
cmpsl
das
push
aaa
fcoms
jg
out
push
ret
add
xor
push
mov
cmpsl
int
mov
mov
andb
xchg
cmp
add
push
in
fsubrl
scas
in
dec
sbb
jns
add
inc
test
and
cmp
jl
addr16
xor
adc
or
mov
adcl
or
mov
xor
adc
or
testb
sub
mov
int
dec
adc
or
jge
push
mov
cmpsl
nop
push
jne
xchg
mov
add
pop
mov
inc
lcall
and
rcll
out
inc
push
sub
add
cmc
and
dec
andl
push
in
mov
dec
inc
sub
roll
pop
mov
push
add
incl
lret
bound
sub
push
mov
lcall
fs
jmp
xchg
fwait
pop
sbb
loopne
push
test
adc
push
push
adc
lods
pop
lods
loope
icebp
xchg
push
rcrl
jp
sbb
icebp
clc
lret
inc
stc
cmp
roll
test
lea
mov
adc
pop
sbb
xchg
pop
xor
cmpsl
stos
sbb
cld
add
sbb
sbb
sbbl
or
or
das
gs
xor
and
xor
popf
push
xchg
sub
cmpl
aas
shr
cwtl
cltd
lea
push
push
data16
sub
loop
xchg
jl
xor
cmc
cli
push
adc
addb
xchg
les
sbb
adc
test
adc
cmp
inc
test
add
data16
push
fnstsw
cmc
dec
jne
jmp
push
into
loope
xchg
inc
daa
pop
and
xchg
cmp
adc
fadds
lret
adcb
clc
sbb
inc
jmp
lods
in
xor
or
test
push
jb
jno
xlat
jecxz
stc
clc
pop
es
pop
push
sahf
sub
rcrl
pop
sub
sbb
push
mov
xchg
push
mov
pop
pop
insb
mov
xor
das
cmp
test
pop
lret
out
add
mov
or
inc
adc
sbb
sub
inc
loope
push
cmp
inc
clc
mov
call
dec
int3
notl
pushf
pop
test
jg
cmp
fiaddl
repnz
rcrb
je
out
mov
sbb
xchg
add
cli
push
push
and
or
sub
mov
insb
lahf
nop
adc
les
cmpb
pop
lea
xchg
fiadds
insb
pop
setns
push
leave
in
pop
mov
test
pusha
or
jo
ss
dec
sub
and
dec
adc
inc
sbb
sti
shlb
loop
cld
xchg
sahf
mov
push
pusha
rclb
inc
call
adc
mov
enter
sbb
xchg
jmp
and
sub
inc
push
or
push
dec
les
cmp
jl
rcpps
dec
push
sbb
add
add
dec
xor
or
push
add
faddp
int3
bound
cmpsb
dec
xor
movsb
push
ljmp
vdivsd
scas
test
mov
mov
xor
push
leave
add
push
js
mov
cld
addr16
hlt
or
sahf
sbb
adc
jl
push
mov
adc
mov
adc
jbe
sub
jmp
jo
mov
out
and
sbbb
xchg
push
nop
and
ficoml
roll
or
cmp
xchg
or
inc
jns
xchg
mov
add
les
add
adc
pop
and
lock
stos
push
cmp
ss
bound
inc
and
int
andl
inc
jb
aaa
and
adc
imul
adc
in
in
inc
lret
pop
mov
add
outsb
or
push
inc
sub
or
insb
push
sub
mov
popa
push
fbstp
sub
pop
adc
adc
push
inc
sub
add
jns
add
push
loope
insb
out
stc
mov
lea
push
sbb
pop
pop
stos
sub
adc
clc
jle
shll
fwait
jp
pop
inc
mov
jecxz
add
or
adc
push
jecxz
sbb
jne
lea
lods
add
call
std
mov
arpl
mov
bound
push
lcall
xor
orb
push
sbb
dec
pusha
pushf
fadd
push
and
sbb
fsts
push
dec
adc
dec
mov
dec
xchg
xor
inc
pop
mov
jne
repnz
add
in
sbb
xchg
mov
movsb
mov
sub
stos
and
bound
mov
roll
pop
and
test
mov
pop
dec
adc
jo
sub
fbld
xor
cmp
mov
xchg
push
sbb
inc
pusha
push
cmp
mov
and
push
popf
mov
sbb
jb
pop
jnp
int
add
fstl
xchg
lods
and
jg
cmp
inc
dec
or
inc
or
xchg
aas
mov
push
sub
xchg
clc
prefetch
jle
xchg
push
pop
mov
jg
cmpsb
add
mov
inc
loopne
or
push
cmp
or
cmp
add
cmp
lcall
outsl
ss
sbb
adc
push
aas
aad
xor
repz
mov
das
fidivs
jmp
xchg
xchg
out
test
adc
adc
or
sub
lret
out
icebp
mov
repz
call
arpl
jno
adc
inc
sub
leave
xlat
rorb
add
jno
lods
aas
jge
push
xor
sbb
rcll
lcall
jne
sbb
inc
inc
jns
sbb
jnp
dec
push
incb
add
mov
arpl
aad
push
dec
cld
pop
dec
sbb
rclb
adc
nop
in
mov
ss
xchg
testl
xor
es
in
subb
pop
mov
push
add
and
fadds
lret
and
or
imull
sub
pop
es
addr16
xlat
cmp
je
mov
push
pop
les
scas
add
sbb
push
and
loop
fistpl
sub
andl
andb
sub
rcrl
mov
mov
push
inc
inc
and
mov
sbb
xchg
dec
data16
sub
push
call
add
dec
sub
mov
mov
rcl
jmp
and
mov
dec
fwait
sbb
pop
adc
inc
movsb
rcll
inc
daa
cmpsl
dec
xchg
sarb
and
mov
mov
inc
cltd
daa
sub
lods
add
jge
xchg
jg
mov
or
and
cwtl
jbe
mov
negl
inc
loop
fldl
gs
lcall
lods
or
add
dec
push
push
push
push
xchg
fisubrl
and
jns
movd
push
jbe
or
sub
dec
cltd
push
into
xor
pop
mov
orb
popa
insb
push
cmp
in
xlat
std
pop
sub
pop
sbb
std
jge
ds
or
push
pop
fcoml
fstpl
push
mov
sbb
mov
push
fimull
push
inc
xor
jb
lds
add
inc
add
sub
jle
xchg
or
sbb
push
mov
push
popf
setge
dec
pop
imul
xchg
push
pop
mov
das
xchg
push
adc
push
jmp
cltd
xor
and
addb
dec
inc
lock
aas
pop
ss
inc
cmc
fs
lret
rorb
or
daa
stc
cwtl
xchg
stc
fistpll
sbb
xor
pop
mov
je
cmp
movb
ret
dec
sbb
iret
mov
popa
adcl
xor
mov
into
int3
sub
push
and
fwait
mov
add
sbb
data16
mov
push
inc
push
cmpl
imul
push
push
xor
jnp
adc
adc
cs
lods
jbe
push
mov
ds
xlat
sub
fimull
dec
pop
jb
adc
inc
sbb
pop
orb
dec
cltd
inc
inc
inc
mov
test
sbb
enter
lret
push
clc
insb
dec
xor
fcomps
mov
vpsrad
shrl
sbb
xlat
inc
call
out
pushf
dec
adc
mov
popf
cmp
dec
adc
dec
jmp
ret
pusha
test
int3
leave
push
sub
fildl
xchg
bound
lret
pop
les
sahf
subl
push
and
arpl
push
xchg
adc
mov
mov
xor
sbb
js
sbb
mov
les
jmp
mov
add
push
lds
loop
push
iret
push
sbb
in
ja
addl
hlt
and
loopne
imul
in
scas
mov
adc
pop
xchg
jmp
mov
out
mov
dec
cli
call
loopne
jnp
push
enter
and
movsl
popa
mov
cld
cltd
lock
movb
call
arpl
dec
dec
jno
and
es
mov
icebp
push
adc
mov
pop
xor
fsubs
jnp
dec
push
out
add
adcb
sbb
rol
or
ret
xchg
loop
imulb
xchg
push
ret
inc
in
movsb
xchg
loop
hlt
push
sub
mov
into
enter
sbb
in
or
cmpl
push
push
inc
icebp
inc
rcll
and
enter
loop
or
dec
jo
andb
jmp
sbb
cmovge
push
sub
fstpt
mov
dec
imul
jno
mov
cmp
cmpsb
insl
int
inc
imul
inc
lret
dec
xor
fwait
xor
push
sbb
jne
push
or
aaa
inc
pop
loope
in
out
dec
adc
xor
xor
iret
sbb
imul
add
in
int
mov
shl
clc
push
push
movsb
or
sub
lcall
mov
mov
cmp
push
imul
fidivl
lsl
repnz
dec
rol
scas
ds
lea
cmp
dec
test
pop
push
fisubrl
vrcpss
jg
mov
das
je
sbb
loop
std
flds
or
add
sbb
mov
js
fadds
dec
inc
mov
lock
push
inc
xchg
xchg
xlat
fistl
pop
inc
mov
push
mov
xor
inc
push
jge
dec
lods
and
add
inc
lock
push
cvtps2pi
xchg
jmp
test
or
push
lods
fsubl
testb
gs
movsb
insb
loop
or
push
adc
xor
mov
adc
int
jnp
or
cltd
lds
add
in
pop
mov
add
inc
dec
into
add
insb
sbb
jnp
cli
sbb
mov
adc
and
addr16
outsl
push
adc
mov
cmp
inc
je
adc
addl
andb
jnp
stos
lods
sbb
adc
xchg
push
xchg
push
enter
ficompl
aas
data16
push
enter
imul
cli
leave
cmp
adc
inc
inc
shl
lods
adc
movsl
add
sbb
rorb
add
hlt
add
pop
pop
lock
leave
aas
jmp
mov
rclb
xchg
inc
jmp
cmp
mov
lahf
cs
aad
add
mov
pcmpeqw
lcall
cs
aad
or
inc
add
mov
ret
xchg
sub
dec
pop
dec
into
roll
in
ljmp
in
pop
or
das
xchg
add
mov
cld
adcl
mov
mov
loope
adc
pop
inc
test
outsb
lock
movsb
push
popl
int
or
insl
or
xchg
lds
mov
inc
mov
fnstcw
aam
dec
or
pop
pop
subl
out
dec
jge
roll
ss
inc
add
xor
adc
lods
aaa
fcomps
test
adc
sbb
xor
test
imul
jmp
dec
data16
out
das
pusha
add
dec
adc
dec
dec
hlt
and
xchg
inc
outsb
roll
je
psubw
cltd
sub
sarb
mov
sbb
popf
movsb
orb
lcall
inc
ja
filds
loop
shll
adc
je
dec
inc
or
add
mov
fs
xchg
das
xchg
pusha
mov
mov
add
push
or
inc
adc
stos
jge
mov
jle
subl
pop
test
mov
xchg
int
adc
and
enter
pop
rorb
xlat
xor
add
mov
iret
jnp
adc
and
xchg
ljmp
push
scas
push
jno
jae
aaa
scas
push
push
mov
out
jg
mov
push
bound
addr16
sbb
xor
stos
adc
or
and
clc
sub
leave
sub
mov
in
dec
insb
mov
leave
out
xchg
sub
mov
jge
rcll
cmpsb
mov
dec
pop
xlat
loopne
mov
push
sbb
inc
aam
add
adc
push
jae
cli
or
lods
push
xor
xor
ret
inc
cwtl
inc
push
loopne
sti
inc
mov
rcl
add
inc
push
scas
lods
mov
addr16
int
xor
shll
jp
sub
in
cs
ret
stos
xchg
inc
xor
mov
adc
xchg
push
or
out
and
cli
inc
enter
inc
fldenv
jb
mov
rorl
loopne
or
fisubl
sub
jmp
enter
test
xor
repz
mov
fbld
in
add
sbb
jns
rcl
adc
shl
add
mov
psubd
or
out
rorl
inc
jmp
push
adc
std
add
movsl
xchg
ret
das
iret
xchg
mov
mov
aas
lret
inc
push
sbb
aad
outsl
or
scas
dec
mov
lock
pushl
hlt
mov
and
je
test
inc
pop
cmp
cmp
rcr
sbb
xlat
jb
mov
rep
mov
push
mov
filds
mov
xor
mov
pop
ret
cmp
pop
add
outsb
inc
inc
cmpsb
cld
jb
out
je
je
fists
jo
push
cltd
sahf
xor
dec
jmp
mov
and
lret
jmp
xchg
mov
push
mov
lods
shrl
sti
add
mov
xor
and
sbb
das
push
jmp
lock
insl
xchg
hlt
add
jl
testl
and
rclb
xor
rorb
inc
add
clc
sbb
sti
jb
popa
pop
cltd
lock
jne
adc
lock
test
cld
pop
scas
fwait
insl
lahf
js
movsb
out
pop
jbe
adc
lahf
sbb
dec
outsb
pop
pushl
adc
nop
lods
xor
sub
loope
cmpsl
jo
push
loopne
xor
hlt
jg
sbb
cs
adc
lock
push
cmp
out
push
xchg
fdivs
pop
push
ds
or
jmp
ret
pusha
or
dec
scas
add
push
and
mov
mov
divl
xlat
inc
add
lods
aam
imul
in
dec
addr16
adc
cli
movsl
mov
add
push
cld
jne
cmc
jp
iret
inc
jecxz
aam
mov
mov
jns
popa
xchg
mov
jle
test
dec
pop
push
fwait
rcrl
cmp
jp
mov
scas
lret
test
aam
sub
mov
add
sub
test
mov
add
clc
mov
call
lods
cmc
mov
inc
sbb
adc
scas
pushf
xchg
sub
adc
imul
mov
mov
dec
repnz
dec
push
int
ret
in
sub
pop
and
enter
sbb
adc
fs
sbb
and
or
in
aaa
sbb
test
cwtl
xor
push
pop
iret
ss
scas
rcl
xchg
mov
adc
scas
xor
repnz
cmpl
mov
js
xor
clc
mov
inc
movsl
jnp
adc
in
ja
sbb
add
cmp
out
and
insl
outsb
call
mov
orl
mov
xor
mov
rcll
add
push
outsb
xchg
in
dec
cmp
jnp
sbb
enter
cmp
int
iret
arpl
add
jo
adc
add
cwtl
pushf
and
and
add
push
ficompl
xchg
pop
rcll
or
jne
adc
rcll
testl
nop
xchg
scas
shlb
outsb
push
addr16
xchg
inc
in
test
rorl
xor
ficompl
std
movsb
ss
data16
out
mov
add
xor
push
and
cmpsl
mov
cmpsl
and
sub
pusha
and
xchg
cs
mov
xchg
pop
add
test
add
pushf
pop
mov
jecxz
inc
clc
in
sub
push
es
mov
cmpsl
sbbb
arpl
inc
fldpi
and
les
mov
xlat
mov
nop
scas
adc
addl
mov
mov
xchg
adcb
stc
and
insl
xor
push
pop
or
sbb
hlt
pop
and
orl
dec
mov
jns
shll
push
lea
dec
or
lock
push
addl
sbbb
add
aas
int
insb
sbb
jge
bound
fldl
mov
adc
fld
sbb
lds
push
sbb
adc
xchg
push
test
add
pop
mov
mov
xor
push
mov
in
inc
cld
rorb
xchg
cltd
or
xchg
je
in
fldcw
hlt
in
cmp
and
inc
es
imul
gs
sub
or
stc
xor
inc
mov
insb
inc
daa
jbe
push
cltd
roll
adc
jp
loop
mov
lea
int
xchg
js
inc
cwtl
fs
sub
pop
xor
push
cmpsb
movl
add
addr16
dec
cmp
push
bound
adc
dec
clc
mov
int
pop
cmpb
sahf
cpuid
xchg
sbb
iret
adc
adc
outsb
test
fldenv
push
adc
adcl
xor
pop
fildll
loop
fidivl
mov
enter
xor
xchg
les
mov
mov
push
dec
jb
into
add
cmc
and
mov
out
sbb
pop
sbbl
les
insl
mov
push
leave
jae
and
push
mov
cmp
iret
call
mov
xor
sub
mov
dec
pop
sbb
cmpl
clc
add
pop
movl
push
mov
dec
ret
mov
pop
cmp
sahf
addr16
mov
in
inc
inc
es
xchg
xchg
in
fwait
repz
sub
xchg
xor
test
arpl
xchg
inc
mov
movb
mov
and
inc
andb
adc
dec
clc
inc
xor
mov
out
out
push
repz
pop
mov
push
test
mov
xchg
cmp
ret
out
add
cld
adc
ret
rcrb
sub
mov
dec
push
pusha
fdivl
and
fs
out
mov
xlat
aam
inc
or
test
int3
int
lods
adc
ret
jg
mov
xor
test
adc
xor
fists
and
add
subl
fadd
add
in
in
ret
jg
jge
movb
xchg
repz
add
pop
data16
sbbl
sub
xchg
lock
in
mov
adc
fists
xchg
das
or
into
sbb
and
push
clc
divl
sbb
adcb
and
mov
mov
int3
push
mov
push
push
getsec
ret
or
fidivs
sub
mov
mov
std
xor
or
adc
dec
sbb
cmpsb
mov
inc
or
xor
jp
fdiv
mov
insl
cmpsb
mov
dec
lods
mov
fstp
or
nop
xchg
dec
lret
scas
adc
mov
xchg
out
stc
scas
xor
jo
xor
xor
xor
xchg
in
cwtl
je
dec
mov
add
adc
lea
popf
jnp
push
adc
lret
xchg
inc
pop
push
lods
or
sub
push
mov
and
movsl
mov
cmpsl
sub
movsb
ss
gs
mov
lods
mov
push
movsb
pop
cmp
mov
pop
inc
test
cmp
sahf
inc
mov
mov
int3
mov
push
shlb
loope
xchg
dec
pop
clc
and
inc
aas
jecxz
pop
jns
mov
dec
lock
pop
pop
xchg
jmp
mov
pop
cmpps
cmp
in
pop
and
mov
lea
lods
mov
xchg
rorl
addr16
dec
inc
popf
pop
cmp
inc
sub
loopne
lds
xchg
add
xlat
test
sbbb
push
rcrb
jns
cmp
pop
inc
lea
enter
subb
out
mov
out
and
xor
mov
hlt
subb
pop
jecxz
xor
sub
inc
ja
mov
xchg
roll
icebp
and
repnz
pop
and
inc
adc
rorb
mov
pop
push
push
or
test
test
stc
xor
xor
adc
movsb
ja
popl
xchg
jg
shll
and
jb
repnz
adc
fdivrl
sbb
lock
pop
aaa
int
test
pop
mov
stos
dec
xor
dec
or
add
out
sub
loope
dec
xor
dec
xor
stos
or
add
bound
xor
push
or
dec
push
insl
jmp
push
pop
js
loope
pop
push
ds
sbb
push
jmp
std
and
inc
int
adc
dec
cmp
inc
daa
clc
pop
xor
xchg
add
aaa
sbb
jp
lahf
mov
jge
sub
add
jg
bound
and
or
pop
aas
xor
xchg
call
ja
addb
pop
aas
add
cmpsl
mov
rol
stc
add
xor
jb
adc
clc
add
mov
js
das
inc
pop
push
xlat
ja
add
or
in
push
addl
push
dec
nop
jbe
and
push
aaa
insb
dec
sub
js
rolb
les
shrl
add
dec
testb
inc
sub
inc
into
aaa
in
mov
xchg
push
mov
jne
pop
ja
imull
mov
sbb
std
pusha
mov
push
sbb
scas
test
push
pop
adc
test
push
xchg
call
push
xchg
cmp
and
pop
imul
sub
dec
sbb
inc
xor
xorl
push
sbb
pushf
iret
jmp
add
scas
sub
mov
sbb
and
jle
sbb
pop
ja
mov
mov
mov
adcb
stos
add
lret
dec
pushf
sbb
cmp
sbb
jae
popa
mov
jns
in
lea
or
pop
int3
add
mov
scas
nop
and
insb
pop
push
mov
aaa
shlb
or
cmp
rorl
call
add
adc
inc
pop
lock
sbb
cmc
shlb
js
ret
or
push
out
inc
fcomps
push
jbe,pn
jl
sub
jecxz
sbb
lret
out
cmp
leave
and
adc
ja
pop
inc
mov
fs
fsincos
pop
daa
lock
dec
push
mov
xor
outsb
adc
push
ja
cmpsb
or
or
int
int3
and
adc
and
shlb
sbb
pop
adc
add
xor
dec
cmp
mov
push
push
mov
mov
cmp
out
lods
stos
add
bound
mov
mov
mov
dec
push
add
cmp
mov
inc
jecxz
mov
cmp
pop
sbb
push
dec
add
mov
sbb
dec
push
add
shll
out
add
out
pop
xor
in
lods
faddl
lds
push
in
jo
or
xchg
les
jo
mov
pop
and
sbb
push
dec
sbb
pop
inc
cmpsl
sbb
gs
ficoms
jle
jle
int3
icebp
dec
dec
dec
fwait
mov
cmpb
sub
push
cmpsb
cwtl
pop
test
int3
aam
sub
shll
cmp
jp
in
jmp
or
or
pop
cs
cmp
out
and
sbb
push
test
push
popf
scas
mov
sbbb
popf
sub
adc
add
xchg
fwait
mov
sbb
iret
xbegin
hlt
xor
out
fcmovne
ds
xor
das
mov
js
mov
xor
shr
and
push
mov
jns
push
push
incb
js
xor
mov
sbb
inc
dec
mov
cmpsl
aam
adc
push
mov
xlat
sbb
adc
adc
test
push
insb
sbb
push
outsb
push
pop
and
lods
sbb
mov
inc
cmp
dec
push
cmp
push
xor
inc
popf
or
data16
rorb
fdiv
xchg
bound
and
xor
bound
rolb
lret
dec
enter
jge
lcall
lea
jle
xor
mov
scas
sahf
arpl
add
and
aas
iret
mov
lods
pop
fcoms
test
add
jp
add
mov
mov
adc
iret
stos
or
ss
arpl
pushf
rorb
inc
cmpsl
test
or
inc
popf
dec
and
adc
ret
imul
push
cld
lds
mov
jg
sbb
and
pop
fwait
and
mov
lds
out
mov
sub
adc
sub
adc
iret
xchg
or
fwait
mov
cmpl
test
or
jnp
adc
xor
adc
or
mov
sbb
inc
repz
ds
or
adcb
push
mov
lds
pop
jg,pt
jae
push
mov
ror
cmpsl
lcall
pop
and
adc
mov
inc
clc
inc
pop
xchg
add
xor
xchg
pop
mov
inc
add
sub
mov
adc
xchg
lea
inc
fdivl
push
dec
jns
xchg
cs
pminub
sbb
sub
push
jo
lea
pop
pop
ret
push
sbb
cmp
push
ss
pop
jmp
push
inc
orl
push
lock
mov
enter
aas
or
push
lods
test
pop
and
je
jle
adc
out
push
push
fcompl
jmp
std
sbb
or
cmp
sbb
sub
push
add
xchg
adc
jb
jns
aam
jo
jae
inc
lea
in
sub
pusha
jp
or
dec
pop
repz
jns
int
lds
push
fwait
push
push
je
adc
or
lds
or
popa
lods
and
mov
mov
inc
xor
inc
pop
pop
push
int3
mov
jmp
xchg
inc
inc
push
xchg
stos
movsb
pop
push
push
jae
or
cmp
lods
inc
add
push
add
lret
xor
push
push
repnz
repnz
cmpsl
xor
xlat
or
out
push
mov
in
sub
push
and
fs
inc
repnz
push
xchg
dec
and
js
hlt
js
adc
dec
jbe
push
or
add
out
push
jb
cli
mov
jbe
or
push
fbld
sti
push
sahf
rcrb
iret
jle
mov
add
pop
push
mov
ret
aam
push
bswap
jne
cwtl
push
sete
push
jecxz
dec
inc
sbb
push
push
mulb
adc
int
mov
and
push
icebp
je
jl
stos
pop
in
mov
inc
mov
popf
mov
adc
xlat
scas
insb
aad
imul
add
sub
inc
gs
cmpl
lret
je
fwait
test
bound
jo
scas
outsl
pop
dec
inc
add
cltd
sbb
dec
cmp
xor
and
or
mov
inc
inc
pop
add
stos
jo
mov
scas
add
push
xchg
sbbb
clc
cmpb
mov
sub
mov
mov
aaa
aad
shl
aas
rcr
sub
jl
shlb
mov
lret
dec
shlb
mov
mov
lahf
ret
outsb
add
sub
ja
imul
pop
push
sarl
push
add
fsubl
pop
out
leave
xchg
and
call
adc
mov
jnp
adc
push
and
xchg
and
daa
inc
adc
cmpsb
push
jns
pop
bound
loopne
js
scas
mov
mov
fiaddl
and
cmpsl
stos
and
andl
rcrl
xchg
jge
sub
cmpsb
or
loopne
addb
xchg
getsec
and
xor
in
xchg
push
sti
inc
mov
and
sbb
test
or
call
mov
int
jg
dec
ffree
in
cltd
inc
pusha
mov
and
stos
xor
add
pop
or
lret
outsl
or
out
lret
inc
imul
sbb
pop
push
mov
add
and
or
cmp
adc
jmp
leave
les
add
in
ja
cmp
icebp
ret
ror
pop
call
ss
add
adc
mov
jo
dec
mov
xchg
mov
push
push
and
es
cli
fsubl
inc
mov
cmp
hlt
add
scas
jle
xchg
add
xchg
push
insb
adc
inc
adc
test
adc
aam
xor
or
and
fists
or
pop
idivb
ret
out
dec
pop
lahf
or
dec
push
out
dec
int3
jmp
pop
pop
push
cmpsb
and
push
or
xlat
aad
add
scas
cmpsb
cmp
adc
adcl
test
bound
sub
andb
daa
push
shrl
dec
mov
es
rorl
sub
xchg
jae
jg
jmp
or
add
push
ss
add
pusha
xchg
cs
mov
and
jp
shlb
mov
ret
inc
into
mov
fs
push
cmp
pop
jnp
sub
jbe
pop
dec
popl
dec
inc
lods
jo
int3
jp
cltd
jecxz
add
xor
movsl
hlt
jp
jmp
adc
mov
pop
adcl
loopne
cmp
push
daa
testb
inc
and
or
cmpb
push
orb
test
ficoml
push
dec
dec
adc
pop
mov
outsb
jae
xor
pusha
sub
enter
insb
scas
sbb
pushf
mov
enter
mov
sbb
scas
jg
xchg
and
pop
je
in
and
rclb
inc
je
pop
adc
inc
cltd
hlt
xor
pushf
mov
add
sahf
jo
ja
test
pop
ss
rcll
mov
nop
adc
push
xor
jmp
call
jb
xchg
push
movd
enter
xchg
sbb
and
add
loope
adcb
movsb
mov
or
mov
or
xadd
xor
xor
push
shll
gs
jns,pn
call
inc
sub
push
xchg
and
adc
or
sti
mov
into
mov
fisubrl
lcall
xchg
js
shlb
mov
adc
pop
scas
fsubrs
stc
adc
ret
movsb
scas
aas
xorl
sbb
hlt
outsl
adc
or
pop
pusha
jne
ret
or
push
adc
jae
and
outsb
or
lds
push
dec
sbb
push
inc
sti
stos
nop
popa
sbb
and
cmp
xor
jl
je
pop
mov
bound
popf
mov
outsb
add
out
push
mov
movsb
mov
mov
imul
sahf
stc
push
hlt
sub
fnsave
sbb
test
pusha
inc
sub
adc
push
xchg
ja
push
push
jne
cmp
popl
mov
add
cmp
push
sti
or
or
xchg
mov
mov
sbb
jns
js
loopne
or
cmpsl
pop
js
push
adc
inc
mov
pusha
leave
sbb
int
cwtl
or
pop
mov
decb
inc
lds
lds
outsl
sub
mov
xchg
inc
jecxz
lcall
repz
jmp
xchg
enter
aad
dec
sub
jmp
cld
xlat
iret
aas
shr
shlb
mov
ss
sbb
mov
ret
push
cmp
cmc
enter
dec
and
mov
jns
lcall
aam
lret
mov
enter
ss
cmp
or
popa
and
cmp
inc
cld
into
orb
stos
push
insl
xor
imul
test
pushf
xchg
inc
push
in
mov
jae
mov
pop
pop
lcall
jle
stc
icebp
lods
push
test
adc
sub
sahf
aaa
fiadds
push
push
test
xor
push
in
jo
in
aaa
fwait
xchg
sbb
cmp
gs
pop
movsl
inc
stc
and
sub
xchg
sahf
jmp
clc
mov
mov
lahf
pop
int3
and
mov
and
mov
push
mov
xor
xchg
daa
or
and
mov
int3
xchg
mov
fidivrs
or
and
or
data16
popf
stos
inc
mov
pop
xchg
lods
add
outsl
dec
inc
paddw
bound
xchg
das
dec
add
inc
mov
lcall
sub
outsl
dec
fiaddl
or
jns
cmpsb
dec
stos
ds
mov
ss
lahf
addr16
daa
jnp
xchg
js
push
sub
imul
out
mov
adc
cld
js
imul
mov
mov
or
mov
pop
push
dec
push
out
sbb
fcmovnb
add
cltd
data16
push
cmp
pop
test
adc
push
ret
push
cld
or
in
je
fdivl
js
test
bound
xor
or
pop
jp
jp
cmp
popa
cmp
aad
jnp
mov
daa
sbb
push
inc
pushf
xchg
adc
cmp
jbe
xchg
inc
inc
in
mov
sbb
push
fsts
inc
pusha
xorl
jle
inc
cmpl
call
xor
dec
mov
add
xor
jb
call
into
in
push
in
xor
inc
cmp
out
push
enter
cmpsl
loopne
inc
popa
aas
sbb
mov
shll
sub
ret
fnstcw
mov
mov
outsb
mov
cmp
jl
xchg
out
lds
inc
push
and
popa
loopne
mov
inc
dec
adc
mov
scas
lods
movsb
lock
lcall
push
lock
js
test
dec
xchg
mov
outsb
out
test
inc
jge
outsb
cmp
sub
call
fstpl
xor
xor
outsb
ret
mov
or
xchg
clc
push
pop
xor
pop
shl
jae
pop
xchg
inc
dec
sti
cmp
dec
add
pushf
jge
jbe,pt
in
adc
jns
mov
dec
loop
in
adc
sbb
orb
sbb
cmp
popf
mov
out
add
pop
mov
adc
cs
test
pop
pop
sub
int
cmp
data16
fnstenv
in
dec
jb
pop
xchg
mov
inc
in
daa
mov
push
add
pop
inc
clc
dec
pop
movsb
jge
dec
jl
xor
lcall
pop
shll
pop
adcl
nop
xchg
test
jmp
push
lcall
mov
or
sub
loopne
cs
insb
dec
inc
pop
lahf
cmp
repz
adc
mov
and
push
or
mov
stc
push
xor
cmpsb
ret
sub
jmp
mov
lcall
or
xchg
movsb
xor
xchg
cmpsl
add
mov
call
insb
adcl
arpl
xor
inc
test
push
movsb
xchg
sub
or
xlat
das
sbb
dec
clc
and
mov
outsb
inc
and
xchg
pop
inc
jb
inc
and
test
ja
sbb
xchg
cmp
into
jns
or
in
bound
push
mov
dec
push
stos
cli
xor
xor
dec
ljmp
push
push
pop
out
fiaddl
push
mov
sub
or
xchg
in
pop
std
pop
fwait
cmpb
rcll
jg
mov
inc
mov
insb
jecxz
mov
adc
mov
inc
mov
inc
xor
add
loopne
pushf
dec
int3
mov
jle
mov
sbb
ret
ficompl
push
subb
inc
cmp
lods
out
aaa
aad
outsb
xchg
xchg
pop
notb
daa
sbb
mov
not
inc
push
sbb
cmpsb
cwtl
pushw
nop
inc
sub
shl
add
mov
dec
mov
jae
popa
xor
mov
push
push
cltd
fs
dec
adc
mov
call
fs
mov
push
aam
sbb
nop
pop
push
int3
ss
cwtl
movsl
ret
rcrb
add
mov
xor
lahf
addl
lcall
sub
addl
inc
mov
sbb
xchg
pop
movsb
and
test
xor
mov
cmpsl
icebp
adc
aas
dec
mov
ss
xchg
test
aas
movsl
scas
xchg
xor
sub
inc
sbb
jo
inc
call
inc
lret
jb
inc
nop
rcrb
jne
push
in
pop
mov
cmpb
xlat
in
int3
or
pop
xor
fwait
cmp
bound
adc
dec
xor
xlat
call
sbb
or
xor
insb
push
pusha
pop
ss
cmc
dec
xor
mov
out
outsb
and
cmpb
bound
dec
mov
fmul
dec
mov
push
xchg
xor
mov
cmp
lods
std
imul
dec
pushaw
fcoms
stc
pop
jle
lock
xor
jb
cld
fs
jmp
mov
jl
adc
mov
mov
stc
pusha
inc
xor
push
mov
dec
push
mov
movsb
fadd
cltd
cmp
add
mov
ja
pop
cld
push
cs
jns
jae
dec
jnp
ja
jae
inc
cmp
pop
ret
add
loope
mov
pop
push
cmp
cmpsl
bound
into
jae
adc
mov
xchg
xor
jno
or
mov
mov
mov
ss
dec
sbb
inc
nop
dec
inc
adc
inc
push
loop
daa
inc
lcall
dec
push
adc
addr16
push
jo
sbb
inc
and
enter
cmp
push
fndisi(8087
gs
sub
cmp
cld
or
xor
enter
adc
je
jbe
cmpsb
loopne
xchg
ds
scas
js
out
dec
jae
jo
dec
andb
xchg
xchg
xchg
mov
push
add
sub
popf
scas
lret
movsb
sbb
cmp
scas
jle
add
adc
je
in
sub
sti
and
bound
daa
scas
push
push
sub
popl
mov
jne
hlt
insb
xorb
movsb
clc
push
aad
and
ds
push
hlt
xor
test
or
inc
push
aad
imul
mov
insb
dec
xchg
inc
adc
mov
ss
sbb
dec
push
dec
ja
aaa
mov
fimuls
dec
mov
fsubrs
test
ja
loopne
xchg
cwtl
pop
dec
fisubrs
xchg
inc
or
lcall
and
or
xor
repz
in
das
ret
pop
adc
adc
es
repz
out
data16
push
les
push
in
scas
cld
repnz
arpl
push
je
aaa
lods
repz
insl
mov
adc
pop
dec
cmp
push
mov
and
xlat
rcr
jbe
jb
ret
scas
aad
mov
pop
add
xchg
cltd
adc
adc
sbb
push
xorb
clc
mov
iret
pusha
lods
cmp
and
adc
fsubr
mov
mov
ja
add
pushf
scas
bound
mov
dec
adc
fstps
mov
cmp
fcomp
jns
enter
mov
test
mov
fs
popf
sub
nop
or
pop
add
dec
pop
or
test
stc
dec
call
decb
or
fisubrl
ljmp
xor
add
pop
add
push
int3
test
imul
inc
icebp
cmp
adc
inc
or
insb
bound
jnp
daa
psrlq
mov
push
in
or
aam
and
popa
dec
jo
je
push
mov
jg
push
xchg
imul
xchg
fwait
xchg
mov
jb
cmpsl
or
mov
ret
lods
pushf
push
mov
fldl
test
aam
loope
mov
mov
std
dec
scas
push
add
ja
fadd
add
adc
gs
inc
negb
movsl
stc
ret
mov
adc
arpl
push
insb
insb
xor
rcrb
aaa
pushf
push
aas
pop
xchg
or
fidivl
push
stc
push
shll
test
and
in
sbb
dec
cmp
jg
je
pop
into
jge
movsb
jno
popf
les
cmp
pop
inc
sub
nop
pop
dec
test
jb
and
lods
xor
bound
rol
pop
mov
enter
xor
out
popa
mov
lea
testb
add
pop
push
lret
movsb
cld
xchg
dec
adc
hlt
pop
mov
and
mov
mov
pop
mov
or
dec
cwtl
inc
pop
sub
ljmp
jp
imulb
or
sbb
dec
imul
sti
adc
jge
adc
int
push
imul
fisttpl
push
cld
stos
in
in
inc
sbb
push
sub
sahf
loopne
push
jae
jl
lods
clc
lds
xchg
jp
ss
movsb
cli
lahf
dec
cltd
mov
not
pop
mov
pop
inc
jb
mov
cs
mov
fs
je
ljmp
adc
xor
pushf
rolb
xchg
test
mov
int3
xor
adc
sbb
jg
dec
loop
gs
jno
and
cmp
xchg
gs
xchg
inc
mov
lods
aas
sbb
sbb
movsb
push
test
in
inc
jns
rep
subl
and
inc
lods
xchg
sti
push
movsl
data16
lods
push
enter
sub
hlt
push
mov
lods
adc
clc
or
push
push
add
pop
add
xchg
mov
scas
movsb
in
xor
push
fists
loope
addb
loop
pushf
add
lea
scas
inc
mov
fisubrs
js
clc
ss
inc
cwtl
xor
arpl
std
out
adc
testl
outsl
xchg
mov
adcl
rolb
cmp
test
mov
out
lret
ds
pop
mov
xchg
call
into
test
inc
mov
adc
xlat
and
push
push
dec
adc
ret
repnz
pusha
pushf
mov
jne
inc
jmp
lahf
aam
lods
scas
roll
test
inc
add
call
outsb
cmc
rolb
daa
dec
mov
adc
adc
sbb
fs
mov
test
je
push
outsb
je
jg
push
fwait
xchg
push
movsb
mov
notb
pop
jb
sbb
inc
inc
adc
pop
test
or
movsb
and
mov
sbb
push
outsl
push
push
pop
sbb
gs
aaa
outsb
pop
mov
cwtl
adc
pop
inc
sbb
dec
adc
or
inc
and
pop
ss
mov
sub
mov
inc
addl
adc
pop
or
adc
outsl
push
jl
push
sbb
adc
jle
push
mov
xchg
push
add
sysenter
out
iret
jl
clc
mov
cld
shld
cmc
clc
inc
mov
es
jae
stc
push
cwtl
dec
xor
js
add
jl
ss
inc
push
or
jb
inc
sbb
ret
xchg
and
test
testb
jl
es
jo
jg
xor
lods
jmp
dec
add
xor
scas
xorb
je
adc
pop
into
mov
clc
cmp
pop
or
push
jmp
pop
xchg
push
mov
test
inc
dec
repnz
mov
loop
aaa
lret
pusha
jae
pushfw
dec
nop
and
mov
repnz
inc
add
and
shrb
arpl
pusha
stc
xor
add
mov
pushf
dec
lret
and
test
mov
jg
pop
add
sub
fnstsw
hlt
xor
call
pop
outsb
punpckhwd
mov
lcall
push
sbb
add
fimuls
aas
jno
add
jecxz
lock
push
sahf
or
pop
icebp
or
sub
lds
inc
call
or
push
out
add
xchg
xchg
xor
rclb
or
leave
mov
jbe
sbb
lds
cs
lock
insb
mov
clc
mov
push
xchg
inc
and
int3
sbb
data16
or
loopne
mov
pop
push
cmp
push
je
and
mov
enter
pop
jg
push
addb
mov
pop
shlb
rolb
and
and
stos
sbb
push
lcall
or
cli
call
xor
sbb
pop
je
dec
xor
popa
mov
fdivl
popf
rorb
inc
loopne
test
adc
or
or
sbb
mov
insl
inc
or
lret
sbb
hlt
mov
popf
push
test
xor
in
movsl
pop
enter
jecxz
sbb
mov
xchg
mov
bound
inc
adc
sti
sbb
fildl
divb
aas
in
push
pop
inc
das
pop
aad
mov
mov
aad
lods
lock
add
xor
rol
and
loop
fs
sub
sbbl
mov
imul
mov
mov
lods
loop
jcxz
mov
arpl
dec
xchg
push
aaa
pop
addl
dec
lds
loope
xor
mov
dec
js
pop
add
test
lea
popf
dec
mov
and
nop
mov
bswap
jl
or
pop
outsl
cwtl
or
in
test
mov
push
pop
jo
imul
loop
push
dec
mov
cmc
jno
test
dec
cli
and
xchg
in
jge
fs
cmp
jp
ds
push
sbb
daa
xor
out
pop
push
jg
sbb
lcall
addl
dec
cltd
daa
sbb
add
out
mov
pop
stos
push
fsubr
aas
lahf
insb
push
pop
mov
call
lock
stos
push
mov
xchg
jbe
lea
pop
inc
roll
popa
push
sub
adc
pop
push
jbe
xor
ret
adc
and
xchg
pop
sbb
push
stos
sbb
sub
sbb
pop
sbb
pop
jg
and
or
push
data16
or
insl
pop
sub
pop
cltd
mov
add
and
xor
imulb
pop
test
xor
subb
sub
or
xor
push
push
push
sbb
pusha
xchg
enter
int3
xchg
fs
les
push
jbe
or
dec
push
orb
fs
insl
mov
push
xchg
loop
je
stos
or
adc
es
jecxz
leave
stos
shlb
xor
cmp
inc
push
popa
loopne
inc
fdivl
lock
pop
fnstenv
dec
hlt
cltd
popa
push
inc
mov
in
ret
fidivrs
jns
push
xchg
shll
add
repz
jb
or
sahf
dec
rsm
push
xchg
pop
inc
add
popf
push
xchg
pop
inc
adc
stos
or
mov
sbb
fsubl
or
cmpsl
idivb
jmp
ret
pop
movsl
xor
xchg
xor
inc
sahf
or
in
and
cs
lahf
xor
pop
mov
int3
test
int
gs
les
pop
push
sar
inc
pop
pusha
and
jb
pop
inc
push
and
js
and
push
sbb
popa
xchg
loopne
or
push
cmp
hlt
stos
mov
jmp
push
mov
mov
xorb
inc
mov
adc
rcll
and
add
jge
gs
push
ret
je
sbb
inc
rolb
int
stos
ret
ds
rcll
xor
mov
inc
and
and
cli
in
or
cmp
xchg
mov
sbb
clc
xchg
stc
pop
dec
inc
xor
add
lods
add
sbb
fsubrl
inc
addb
mov
sbb
sub
inc
aad
mov
enter
sub
cmp
test
xchg
xchg
bound
push
xchg
push
and
imul
je
mov
pop
fadds
shl
ja
mov
scas
inc
mov
lock
xor
ja
jl
sbb
jg
push
sbb
movsb
fs
xchg
mov
or
inc
dec
orl
xchg
jg,pn
push
pop
out
xor
in
cmc
push
push
lods
xor
xchg
add
adc
push
test
jbe
sahf
cmpsb
or
stos
inc
cmp
leave
leave
pop
adc
scas
adc
outsl
pop
xorl
sbb
movsl
xchg
xchg
mov
out
adc
je
hlt
jecxz
aam
or
push
frstor
push
cli
push
xor
cwtl
sets
push
mov
xchg
test
fidivl
pop
clc
pop
jbe
push
pop
inc
push
aam
loopne
lea
int3
xorb
cmp
xchg
xchg
imul
inc
push
or
inc
xor
cld
int
loopne
shlb
push
mov
out
push
popf
push
add
shrl
cmc
and
clc
mov
ret
pushf
insb
shlb
adc
mov
dec
divb
in
push
loopne
push
mov
sub
inc
call
das
pop
loop
aaa
hlt
inc
inc
push
sti
dec
cmp
adc
or
or
jno
je
mov
addr16
inc
or
push
pop
adc
cmp
fmuls
inc
mov
xchg
cs
lea
nop
adc
dec
shrb
mov
or
jecxz
and
mov
rcrb
xchg
dec
minps
mov
mov
pop
mov
add
mov
dec
inc
pop
cmp
add
int
es
xlat
pop
mov
test
push
loope
mov
mov
sbb
xchg
gs
movsl
and
inc
mov
ret
sti
pusha
xor
inc
mov
in
popf
mov
jo
sbb
stos
xor
mov
or
cmp
cwtl
xor
xchg
or
jno
dec
xor
imul
inc
mov
or
icebp
dec
dec
test
inc
scas
aaa
adc
add
add
sbb
xchg
and
push
mov
add
sti
and
pop
cs
xchg
add
mov
or
sub
inc
add
mov
imul
sti
dec
mov
mov
mov
push
fwait
pop
repz
lcall
push
rclb
jl
fnstcw
insb
push
adc
ss
xor
pop
sti
adc
jbe
insl
popl
add
mov
pusha
and
mov
mov
push
sub
nop
jo
test
test
fsqrt
inc
jb
aas
ss
pop
push
faddp
and
iret
push
test
imul
mov
sbb
mov
das
cwtl
dec
outsl
lahf
or
xor
lods
add
int
sbb
sahf
add
lret
cmp
push
sbb
and
fwait
ja
pop
pop
xchg
xchg
sub
mov
push
and
or
mov
test
loop
pop
insl
stos
out
pop
adc
cli
in
cltd
and
fwait
dec
add
adc
dec
jge
push
ss
xchg
pop
add
and
fwait
dec
push
popf
and
stos
adc
xor
xchg
fmuls
out
clc
xchg
dec
cmp
cmp
jecxz
adc
imull
in
adc
enter
sub
mov
int
ss
lock
out
repz
out
addr16
and
xchg
rolb
scas
cld
and
inc
dec
inc
outsb
cmp
adc
lods
push
pop
out
mov
dec
mov
sbb
cmp
mov
add
mov
push
or
push
subb
or
pop
cs
adc
mov
fwait
cltd
fiadds
pop
dec
lret
adc
mov
enter
push
inc
adc
xchg
sub
xchg
adc
jge
cwtl
and
push
jb
fsts
into
pop
adc
mov
lahf
adc
xor
adcb
jp
movl
sbb
sti
stos
mov
sub
push
inc
stos
mov
pop
add
cmc
andl
fwait
lock
je
add
in
lret
repz
js
push
je
sti
movsb
stos
ja
aad
loope
ss
jb
mov
adc
test
add
mov
dec
mov
mov
pop
or
xlat
add
movsl
insb
jp
pop
mov
adc
cmp
jl
cld
pop
pushf
mov
mov
push
ret
mov
imul
xchg
or
pop
jae
push
mov
pop
adcl
lea
cld
adc
mov
mov
lcall
lahf
dec
ja
jb
mov
lret
adc
inc
sbb
jle
pop
ret
cmp
dec
xor
xor
adc
popf
mov
sub
push
inc
jbe
push
ret
dec
mov
jne
dec
out
mov
leave
fwait
popf
push
inc
arpl
jmp
xchg
lods
imul
xchg
sbb
sahf
or
out
push
jl
lahf
sub
or
add
aam
dec
sub
ret
sahf
push
sub
fcmove
jo
push
test
leave
xor
jg
daa
push
std
cmp
push
clc
cwtl
xor
shr
xchg
xchg
dec
jb
dec
sbb
ss
inc
cmp
in
cmpl
pusha
jmp
pop
call
cmp
mov
xchg
dec
mov
lcall
cmpsb
popf
mov
jo
push
int
cmp
inc
cmp
jmp
xchg
cli
and
mov
mov
dec
popa
jno
xchg
and
inc
inc
sbb
movsl
or
mov
mov
xchg
adc
clc
xchg
loopne
sti
inc
or
xor
clc
aad
cmc
outsl
pop
repz
cmp
inc
jecxz
push
fistpl
lock
push
pop
fistl
xchg
mov
or
push
out
cwtl
sub
outsl
rorl
cmp
int3
loope
dec
rorb
cmpsl
push
and
dec
jl
xchg
hlt
jg
mov
add
and
decl
mov
adc
aas
je
sub
dec
mov
xchg
or
add
insl
es
add
or
insb
outsb
fs
cmp
and
fimuls
dec
in
stc
out
xchg
lcall
in
jne
fsubs
addr16
or
push
add
sbb
bound
mov
rolb
into
or
les
and
xchg
daa
movsb
adc
and
or
push
push
xchg
inc
pop
jp
jp
shlb
scas
push
pop
jl
rcrl
rorb
inc
xor
pusha
xchg
and
les
fdivs
sbb
shlb
movsl
sbb
sbb
mov
into
dec
jmp
mov
popf
push
inc
inc
dec
es
push
add
fs
push
inc
stos
call
popl
clc
outsl
adc
xchg
adc
cmp
or
lock
cmp
clc
data16
aad
dec
xchg
stos
xor
cmp
adc
clc
cwtl
pop
sbb
ss
xor
push
es
es
aad
xor
fcoml
pop
xor
imul
ss
adc
and
scas
xchg
in
repz
mov
push
into
clc
push
fdivrl
adc
jmp
icebp
sub
jp
mov
daa
push
mov
xor
outsb
sbb
mov
xor
out
pop
hlt
fisubrs
loopne
hlt
push
xor
push
frstor
jns
cmpsb
arpl
dec
cmc
add
lock
mov
mov
into
lahf
repz
cld
dec
out
pop
adc
sub
popa
mov
adc
jns
pusha
pop
imul
adc
push
into
nop
clc
fcomps
inc
loopne
pop
ds
stos
jmp
cltd
sbb
pop
ffreep
adc
mov
in
loopne
inc
test
push
jno
lea
scas
cltd
lds
outsb
mov
movb
shrb
cwtl
rcll
clc
mov
sub
inc
jb
push
dec
sub
test
sub
sar
les
shlb
fists
push
lds
dec
loop
add
cmp
xchg
adc
leave
sbb
sbb
xchg
xor
xchg
mov
pop
and
adc
data16
and
xlat
shrb
aam
inc
pop
add
or
into
mov
sub
rcrl
and
es
xor
in
jbe
in
orl
out
aam
insb
mov
pop
fs
xchg
push
adc
fs
push
sbbb
addl
outsb
pop
mov
push
adc
push
xor
xor
pop
push
sub
and
popf
jae
dec
inc
mov
out
inc
pop
in
jl
lds
sbb
pop
dec
cmpsl
rcl
push
lock
pop
sbb
and
sub
hlt
stc
and
cmp
je
add
and
sub
push
pushf
or
test
in
inc
add
out
mov
push
xchg
jne
jl
in
inc
js
out
xchg
mov
inc
or
adc
stos
inc
dec
cli
es
adc
add
sub
pop
mov
pop
daa
insb
nop
push
inc
push
mov
aad
ss
nop
pop
or
dec
push
nop
cwtl
loope
mov
xor
xor
out
cmp
or
dec
pop
dec
or
jo
lea
outsb
jge
call
popf
jo
outsl
je
scas
data16
xchg
popa
in
js
pop
nop
clc
call
jbe
adc
jbe
jae
pop
data16
popf
jnp
push
js
insb
or
xor
inc
push
jmp
iret
test
inc
jl
adc
xor
jecxz
out
cwtl
xor
mov
jno
pop
mov
mov
andb
aas
sub
mov
adcl
xor
dec
in
scas
xchg
enter
stos
cld
decl
dec
fcomp
xchg
dec
mov
mov
sbb
insl
pop
push
push
sbb
sub
push
pop
mov
bound
mov
das
pop
fists
pop
repz
dec
xchg
sbb
inc
in
in
repz
test
or
sbb
pusha
dec
adc
dec
scas
call
into
and
inc
push
push
xchg
adc
or
inc
sub
cmp
insl
or
xor
mov
xchg
inc
adc
jbe
lock
inc
aas
or
sbb
dec
cmp
pusha
cmp
bound
ror
daa
mov
cmpsl
pop
pop
and
inc
enter
int3
sbb
mov
inc
insb
push
or
pop
adc
and
push
mov
in
or
pop
inc
enter
and
cmpsb
pop
xchg
xchg
cs
push
mov
and
loope
pusha
push
xor
into
imul
pop
add
xchg
sbb
push
rcll
adc
push
int3
xor
movl
jo
push
xor
std
xchg
cs
and
rorb
or
or
xor
add
int3
xlat
unpckhps
jne
ficomps
push
push
les
cli
or
daa
push
mov
movsb
enter
mov
adc
fcom
adc
mov
ja
jg
and
jne
js
mov
in
and
test
or
sbb
cltd
jmp
mov
rclb
or
mov
push
or
xor
test
or
xor
repz
add
pop
sbb
mov
dec
scas
sbb
push
and
call
shlb
or
sbb
push
push
xlat
sub
outsl
aam
lea
std
push
xchg
ja
jne
push
mov
dec
add
scas
dec
sbb
insb
scas
inc
xchg
dec
mov
inc
push
sti
shrl
dec
and
fcoml
push
lret
lea
and
jno
fs
mov
int3
cmpsl
jnp
in
push
inc
and
adc
add
jmp
push
xor
add
mov
movsb
sub
push
mov
xchg
mov
inc
push
fsts
add
dec
jl
dec
lcall
push
cmp
inc
in
pop
push
jb
pop
mov
jo
add
loope
adc
add
push
adc
movsl
data16
sub
sub
inc
ss
inc
jne
mov
sti
or
data16
cmp
icebp
cmp
add
adc
xchg
out
push
fiadds
adc
xchg
clc
dec
push
inc
pop
pop
dec
sarl
mov
dec
and
pusha
jle
in
je
out
in
es
std
pop
outsl
jmp
cmp
lock
push
scas
adc
jbe
in
cmp
dec
cmp
je
mov
xor
rcll
mov
dec
adc
lea
call
out
add
xor
out
sub
or
sub
push
xor
bound
or
mov
pop
std
inc
jecxz
inc
daa
loopne
mov
mov
dec
mov
imul
cmc
push
aad
jmp
adc
daa
push
and
or
adc
roll
stc
ds
insb
mov
fnstenv
jecxz
rolb
lret
push
mov
adc
mov
cmpb
push
xor
mov
fisttpl
pusha
or
jnp
repnz
pop
push
aam
sbb
loope
sbb
cmpsb
dec
into
push
shll
add
sbb
jmp
inc
and
test
or
xlat
mov
inc
jbe
or
in
mov
ss
mov
pop
mov
nop
push
cmp
enter
or
xor
mov
push
add
inc
jecxz
inc
push
xchg
adc
fcoml
outsl
mov
push
and
mov
pop
orb
es
cmp
fwait
dec
mov
or
xchg
push
pusha
iret
pop
add
iret
ds
fs
in
dec
and
call
xor
xor
sbb
push
cld
xchg
fistpl
aad
clc
loopne
mov
push
icebp
lods
xchg
dec
int3
xor
aam
mov
ret
testb
mov
imul
lea
xor
pop
cmp
and
adc
stc
hlt
xor
repz
fldcw
loopne
mov
test
add
adc
adc
xor
out
int3
add
lock
loop
and
test
insb
mov
lods
test
out
clc
push
push
jge
nop
subb
dec
mov
pop
ljmp
adc
in
cmp
sbb
or
or
or
bound
push
sub
stos
fs
sbb
and
adc
and
pop
xor
xor
sbb
push
add
dec
mov
bound
sbb
js
nop
out
lcall
mov
scas
jns
sbbb
push
pop
inc
fsubrl
nop
cld
lret
sub
xor
pop
outsb
rolb
int3
adc
icebp
popa
inc
mov
xchg
add
push
jl
in
jne
mov
push
mov
adc
and
and
sub
inc
setae
add
jge
jbe
lods
cmp
push
sti
sbb
in
push
xchg
push
cli
fs
jp
in
pop
or
mov
push
mull
in
adc
adc
push
les
ds
xor
inc
adcl
dec
mov
repz
push
insb
lock
mov
cmp
hlt
push
pop
cmp
out
jp
scas
or
cmp
push
mov
stos
inc
inc
mov
loopne
mov
lods
push
gs
pop
adc
out
xor
adc
in
jp
shl
jg
fucomp
sbb
add
dec
push
push
rorl
sbb
loope
dec
xchg
sub
clc
icebp
mov
xor
into
mov
push
sbb
aam
push
fildl
push
cmp
imul
dec
imul
jmp
icebp
mov
sbb
cmc
and
mov
cltd
scas
sbbl
aad
and
pop
mov
in
out
sti
shrl
and
or
test
lods
pop
loop
jp
adc
sub
adc
call
jno
xor
fiadds
sbb
int3
dec
les
xor
dec
fs
pop
inc
dec
mov
mov
sbb
dec
filds
movl
repz
adc
js
and
clc
popf
out
lahf
jae
jne
inc
ds
push
addb
into
push
adc
pop
dec
pop
rorb
jmp
daa
push
xchg
in
jo
cmp
ds
clc
xchg
push
add
or
movsl
iret
jmp
mov
outsb
int3
stc
pop
fwait
inc
gs
mov
inc
push
mov
push
movsl
xor
push
sbb
adc
movsb
inc
fwait
js
lods
add
mov
outsb
fstpl
test
xor
pop
out
and
lea
sbb
add
pop
pop
in
add
lods
into
mov
dec
lea
sbb
xor
in
xchg
stc
jbe
mov
cmp
jp
mov
les
inc
inc
xor
cmpl
repz
push
pop
jmp
ret
jo
cltd
data16
push
jp
test
ret
adc
dec
test
je
imulb
insb
lods
imul
cmpsb
les
lock
xchg
xor
adc
insl
int3
sar
inc
push
mov
pop
or
aas
inc
test
aam
rolb
subb
push
test
iret
adc
shrl
xchg
fmull
dec
test
jbe
push
sbb
xor
jb
cli
shrl
sub
pusha
push
or
jg
push
push
jmp
js
sbb
orl
mov
add
ss
shrl
add
inc
cmp
jae
sub
pusha
out
adc
mov
fmull
stc
adc
dec
aaa
test
mov
loopne
test
int
push
push
add
dec
fcoml
aaa
push
push
add
movsb
jp
push
inc
repz
out
jmp
jle
sbb
xchg
andb
loope
add
xor
or
cmp
adc
inc
pushf
mov
sub
xor
mov
push
push
mov
inc
add
aam
xchg
rcrl
mov
add
std
into
clc
pop
add
inc
incl
out
mov
test
xor
xchg
pop
cmpsb
rep
mov
jbe
push
aas
pop
cmp
pop
je
loope
jmp
pop
cmc
jne
jns
in
std
iret
xchg
add
push
inc
enter
sbb
inc
mov
pop
pop
pop
loopne
ljmp
jmp
push
js
add
cmp
jo
insl
push
out
loopne
add
mov
sub
dec
repz
sti
add
insb
xor
popf
mov
add
outsl
enter
push
lahf
mov
cld
mov
ret
cwtl
arpl
dec
aam
mov
sub
je
in
dec
push
aas
push
outsb
mov
mov
cld
out
daa
fwait
pop
jg
jb
xchg
sbb
nop
out
fcoml
push
in
in
fmuls
int3
es
cmpsb
jno
or
addr16
in
scas
or
aad
out
xchg
xchg
in
loopne
jp
insb
mov
hlt
adc
xchg
outsb
add
call
inc
mov
movsl
dec
push
fcoms
dec
ret
pop
int
sub
add
mov
data16
add
out
adc
sub
or
enter
outsb
xor
push
ja
int
or
je
rcll
lea
std
adc
push
adc
dec
pop
loop
test
push
xor
inc
in
outsb
push
pop
bound
fdivrs
daa
or
call
add
pop
mov
outsl
and
jb
or
and
movsb
jnp
push
pop
lea
fmuls
mov
lods
adc
xchg
xchg
dec
xchg
bound
loope
das
mov
add
jl
lahf
mov
mov
ljmp
mov
lahf
jmp
xchg
push
aas
sub
cmc
jo
push
punpcklwd
out
int3
ret
and
inc
jno
sti
shrl
or
and
xor
dec
inc
xlat
ljmp
add
sbb
ja
sbb
adc
cld
xor
push
inc
aam
pushf
pop
dec
push
xchg
add
ret
dec
cmp
sbb
imul
xlat
add
fstpt
cmp
sbb
and
fs
add
pop
sbb
dec
sub
inc
lds
push
push
insb
fs
sub
inc
mov
in
aam
out
sbb
xor
clc
insl
mov
loopne
pop
scas
pop
xor
jmp
or
fimuls
nop
in
pop
xchg
push
push
addl
ljmp
pop
arpl
jb
and
pop
sub
or
mov
jmp
push
mov
icebp
pop
movsl
cltd
adc
dec
xchg
movsb
sub
test
add
sub
add
int
enter
nop
add
mov
dec
inc
xor
fsubr
cmp
mov
pop
cmp
mov
cmp
xchg
ss
dec
inc
jl
sti
cmp
insl
add
cltd
pop
push
inc
andb
pop
fnsave
jge
outsl
andps
or
test
sbb
lock
sbb
add
jmp
adc
sub
in
mov
adc
and
aas
fists
adc
mov
loope
clc
punpckldq
pop
dec
lret
pop
pop
in
or
or
sub
jb
aad
add
or
jmp
push
mov
xchg
add
scas
test
das
add
iret
je
pusha
or
cld
hlt
pop
adc
xor
cli
push
or
hlt
mov
cli
mov
cld
add
jo
xor
mov
sbb
jle
add
and
cltd
cli
add
push
repnz
xchg
adc
pop
in
cs
cmp
and
cmp
or
lds
imul
sbb
insl
jg
dec
dec
lea
mov
in
add
scas
lods
cwtl
mov
push
mov
lcall
fwait
lret
inc
stos
fdivl
and
cmp
adc
data16
dec
test
xchg
push
jecxz
inc
cmp
mov
loope
push
xchg
sbb
cmp
rcrl
gs
mov
loopne
inc
cmp
mov
js
pop
adcl
cmp
sbb
add
xor
add
mov
jns
out
cld
add
mov
jle
and
add
js
mov
sbb
sbb
mov
sbb
push
mov
push
clc
es
or
mov
add
mov
xchg
je
add
or
xchg
std
ret
cmp
add
aad
xor
fldcw
cmp
push
xchg
dec
sbb
aam
stos
or
lds
adc
inc
and
or
fcoms
icebp
add
aam
jmp
bound
int
push
jnp
inc
cs
data16
inc
fwait
push
movsb
fs
jg
adc
push
dec
mov
push
xor
les
or
arpl
lahf
test
adc
imul
leave
push
add
xor
pop
shlb
mov
in
andb
loop
aaa
push
dec
lods
loope
push
dec
loopne
pop
xchg
js
bound
pop
test
or
clc
je
jge
scas
cmpsl
sub
test
aam
lret
and
adc
fnstsw
enter
xor
call
and
cmpsl
insb
scas
mov
inc
sub
xchg
cmp
mov
fs
test
lods
and
test
pop
loopne
cld
jmp
sarl
arpl
sbb
mov
test
ljmp
es
pop
xor
jge
mov
mov
add
xor
test
lods
ds
sbb
scas
pop
rcrl
push
outsl
xchg
fimull
cmp
cmpb
jnp
xor
pop
xlat
sbb
scas
push
iret
adc
cmp
mov
push
idivl
popf
sub
and
int
dec
sbb
and
sub
rep
lock
xchg
or
cmp
push
dec
jecxz
and
xlat
cltd
lcall
inc
jb
add
mov
sbb
mov
add
lock
nopl
int
fnsave
roll
int3
add
xor
fsubl
loopne
inc
mov
test
sub
sub
jae
xchg
pushf
and
push
clc
sub
or
xor
adc
and
lcall
add
xchg
xchg
in
push
setae
xor
sub
shrb
aam
ss
je
fnstcw
ret
xor
dec
movsb
jl
mov
out
in
push
and
sbb
inc
cmp
adc
push
in
push
out
push
sbb
or
fs
in
or
mul
out
idivb
fs
push
lods
outsl
pop
xor
adc
push
decb
dec
out
and
scas
dec
dec
mov
insl
jae
jle
psrlq
add
sarl
jo
das
je
popa
aas
into
sbb
pop
aad
jge
adc
mov
lea
sbb
cwtl
or
out
int
outsb
mov
or
mov
add
jp
ja
mov
roll
inc
cmp
mov
iret
rclb
sub
dec
xchg
push
je
adc
sub
cmc
inc
lock
cs
aad
lea
aas
mov
mov
jnp
push
dec
jno
call
mov
push
pushf
or
add
outsb
adc
aas
fadd
mov
inc
jl
inc
outsb
out
pop
test
test
sbb
and
jg
push
js
cmp
cmp
sub
mov
test
add
add
lds
je
or
inc
aaa
fnstcw
imul
pop
mov
mov
mov
imul
mov
xchg
or
lods
inc
fnstcw
or
outsl
cmp
adc
push
xchg
ja
push
cmp
add
xor
pop
and
jnp
sbb
cmp
daa
std
and
mov
push
jp
and
jmp
inc
nop
sbb
test
inc
out
repnz
sub
sub
test
shlb
pop
push
mov
inc
mov
scas
movsl
lds
sbb
movsl
mov
sub
sbb
dec
out
and
or
aam
ljmp
js
ljmp
and
xor
insb
lahf
cld
cmp
and
adc
sbb
push
pusha
test
mov
test
cmpsl
arpl
or
js
sub
aam
cs
adc
push
lds
jmp
and
mov
repz
pop
or
pop
arpl
pop
setp
mov
insb
lea
mov
add
mov
dec
cmp
sbb
sub
push
mov
fcmove
cmp
mov
xchg
mov
add
sbb
fdivrs
sub
aaa
lret
mov
mov
cli
shrl
pop
jae
pop
lea
aad
mov
mov
xchg
push
and
and
push
sub
ret
int
dec
pop
mov
mov
sub
sbb
add
pop
cmp
adc
iret
clc
insl
mov
jp
inc
push
push
lods
sub
sub
or
xlat
fwait
push
push
pop
test
out
push
sub
add
cs
cmp
dec
xorb
loope
jmp
out
test
fs
fwait
stos
cmpl
pop
andl
xor
inc
test
pop
cmp
sub
or
add
inc
mov
lea
shlb
push
cmp
xchg
push
scas
fiadds
ret
pop
test
push
stc
xchg
and
repnz
xchg
add
aas
ret
and
xor
sti
repnz
repnz
sbb
enter
mov
sbb
jno
ror
mov
push
lcall
jecxz
lcall
dec
testb
iret
add
cmp
js
stc
mov
mov
clc
aam
clc
out
mov
enter
and
dec
ja
push
jmp
in
in
jmp
sbbl
add
mov
adc
leave
add
mov
int
loope
jp
jl
nop
lret
repnz
rcr
enter
lret
imul
jne
jb
call
adc
out
xchg
cmp
test
xchg
in
xchg
nop
jl
inc
jne
push
movsb
in
cmp
adc
pop
pop
and
in
cwtl
imul
push
adc
sub
and
jle
or
inc
nop
inc
adc
out
enter
imul
xchg
pop
push
int
fsts
outsb
adc
xor
lods
popa
inc
decl
adc
aaa
push
idivb
neg
notb
rcrb
or
push
jne
sub
adc
sub
pushf
in
cwtl
lods
test
pop
ret
add
lods
jnp
jns
ds
inc
xor
pop
nop
repnz
sbb
iret
rolb
jge
add
pop
call
xchg
inc
add
int
mov
fistl
movsb
ficoms
sbb
jmp
lods
pop
insl
out
push
adc
loopne
inc
sbbb
pop
fsts
and
pop
scas
stc
std
and
mov
push
mov
scas
insl
mov
xchg
je
leave
cmp
iret
fadds
mov
xchg
dec
sbb
fiadds
sub
sub
mov
in
fmul
or
jo
js
movb
adc
jbe
add
or
adc
sbb
sub
faddp
adc
repz
add
ds
lahf
inc
sbb
adc
sub
xor
ret
jo
cmp
sbb
sbb
jae
sti
jbe
in
or
push
mov
fs
adc
ja
adc
out
stos
out
shl
fcmovnbe
loopne
jne
jmp
ds
insl
add
test
mov
cmp
inc
or
mov
sbb
add
adc
jecxz
and
push
call
adcb
mov
movsl
lcall
xor
test
inc
jbe
fs
stc
push
jo
add
or
dec
jmp
mov
cmpsl
push
lahf
out
xchg
jnp
insb
push
mov
and
sub
and
outsl
add
arpl
inc
js
jg
cmp
jbe
pop
push
stos
popf
mov
ds
orb
add
add
mov
push
loop
add
pushf
ret
and
add
adc
or
push
sbb
and
push
cwtl
lahf
add
call
hlt
mov
test
adc
jmp
push
xlat
add
inc
movsl
popf
sbb
out
sbb
loop
insb
bound
scas
sbb
lds
dec
es
mov
sub
push
pop
out
pop
es
adc
mov
fcoml
jnp
xor
int3
insb
dec
xor
inc
dec
add
lcall
sub
or
cli
loopne
xlat
mov
nop
jle
add
ret
pop
push
mov
rcll
adc
shl
add
push
iret
mov
inc
cmpl
and
mov
cmpsb
adc
and
out
push
test
js
sbb
sbb
push
jo
push
xor
xchg
mov
rcll
cli
cmpsb
fists
inc
je
ret
cmpsb
in
push
pop
imul
inc
inc
ds
pop
imul
pushf
test
mov
adc
clc
sbbb
sahf
add
popa
subl
pop
or
hlt
aam
scas
aam
pop
mov
mov
sub
push
je
push
inc
xchg
shlb
call
mov
xchg
xlat
lret
rcrb
push
rol
xchg
mov
in
inc
out
aaa
jns
xchg
pop
imul
pop
loop
xlat
jns
sbb
or
fisubrs
popf
xchg
call
add
mov
push
fsts
xor
pop
add
imul
add
push
ds
adc
sbb
sbb
xchg
adc
mov
call
in
xchg
jmp
iret
mov
add
mov
enter
xchg
add
adc
es
dec
cli
cmp
add
mov
sbb
icebp
popf
sub
and
sub
xchg
push
sbb
jbe
push
dec
je
loope
push
fsubrl
push
lret
in
cmpsl
fstps
pop
clc
out
lods
push
jae
sbb
inc
addr16
imul
and
ja
cwtl
adcb
inc
cwtl
loopne
icebp
add
sbb
cmc
mulb
jle
inc
push
cltd
inc
ds
xor
push
mov
test
xor
lea
jbe
adc
jne
fldt
scas
mov
add
add
mov
and
jecxz
int
dec
repz
push
iret
pop
addr16
in
xchg
pop
cmp
or
mov
push
dec
popa
daa
sub
inc
insl
or
aaa
mov
sub
scas
test
sbb
mov
sbb
dec
jno
push
mov
rcll
lock
cltd
push
jns
push
xchg
mov
push
rclb
sub
xor
mov
add
push
inc
subl
jns
mov
mov
sub
ljmp
push
xchg
cltd
shlb
push
scas
mov
pop
sbb
repz
cltd
mov
and
or
and
ds
pop
mov
xchg
lods
xchg
shlb
in
testb
xchg
outsb
inc
rcr
sti
adc
jl
mov
adc
jl
sbb
clc
into
sbb
xor
push
ret
mov
hlt
sti
adc
push
add
scas
mov
mov
cmp
aas
jg
ds
mov
push
push
adc
leave
je
xchg
mov
sti
inc
add
sbb
adc
fucomip
cmp
cwtl
adc
xchg
out
add
mov
mov
xchg
sub
andl
insl
dec
sarb
pop
dec
sub
jecxz
pushf
adc
dec
dec
inc
hlt
je
je
or
dec
les
sbbl
cltd
fldcw
and
addl
mov
dec
or
xchg
ret
test
xchg
push
dec
mov
lea
sbb
lds
aas
cli
add
aas
incl
xchg
jecxz
call
sti
fisttps
outsl
add
pop
test
dec
push
divb
pop
leave
or
pop
add
lea
add
ret
inc
pop
xchg
inc
push
sti
cmpsb
xor
cltd
aam
dec
or
push
sub
xor
aas
rcll
push
xchg
xchg
mov
dec
pop
jmp
es
aaa
push
jo
test
sbb
cld
xadd
bound
cmp
pop
addr16
sub
xchg
xor
js
sarb
hlt
and
aad
subl
lds
inc
push
ret
jecxz
push
sbb
push
pushf
cmp
dec
sbb
adc
jns
popl
push
aaa
xor
bound
testl
mov
lock
inc
outsl
cld
jge
adcl
mov
cltd
push
adc
xor
imul
mov
sbb
repz
push
sar
push
es
and
xor
adc
push
and
push
gs
pop
test
mov
sbb
je
adc
test
cmp
jno
push
add
stos
cmp
jg
ja
subl
or
out
sub
cmp
xor
push
cmpb
ja
mov
cmp
test
ret
xchg
int
and
jns
mov
or
inc
push
or
lods
cmove
mov
push
pop
movb
rorb
push
mov
push
xor
fwait
sub
mov
and
fmull
clc
adc
lods
outsl
inc
addr16
les
mov
add
cld
test
ret
mov
notb
pusha
jo
cmp
inc
add
add
cmc
nop
cmp
mov
test
cmp
in
dec
cmpsb
clc
inc
ret
loopne
call
push
int
pop
test
mov
in
mov
mov
xor
ficoms
sub
iret
in
pop
push
jno
sbb
jbe
mov
or
jo
cmp
es
ficoml
enter
and
sbb
adc
enter
jg
push
cld
jbe
fiadds
xchg
inc
push
and
jge
jae
xor
mov
clc
inc
push
cs
inc
mov
cmpsb
inc
clc
cmp
jno
xor
stos
lret
sti
adc
pop
cwtl
stos
outsl
daa
cmp
out
xor
int
pop
add
mov
jmp
mov
and
mov
adc
lea
mov
mov
in
fiadds
and
pop
mov
aam
pop
sbbb
jp
imul
adc
and
ja
enter
pop
insl
fs
push
jle
outsb
dec
mov
std
xchg
sub
cmp
nop
mov
or
je
jo
inc
mov
dec
movsb
push
scas
mov
xchg
das
mov
lea
and
fcomps
mov
sbb
scas
mov
mov
add
fwait
stos
push
pop
or
scas
cltd
test
inc
shlb
xchg
rorl
push
xchg
addr16
popa
jp
rcrb
pop
jg
jle,pt
or
orl
or
xor
cltd
shrb
push
push
sub
add
outsl
jb
mov
sbbl
not
mov
inc
into
int3
xchg
jecxz
inc
rcrb
jne
jb
pop
inc
lret
mov
xor
pop
jmp
lods
sub
aad
int
xor
sbb
mov
and
xor
and
aam
lcall
or
imul
in
pop
data16
arpl
and
push
stos
xchg
arpl
push
cwtl
aas
push
add
inc
cli
push
lret
sbb
sti
and
out
push
jae
dec
in
fistps
sbb
mov
ret
sub
mov
test
mov
and
leave
push
xor
rclb
push
loope
or
mov
pop
push
out
daa
pop
or
pop
insl
push
ret
roll
jnp
mov
inc
adc
jne
xor
adc
adc
ret
mov
sub
fwait
xchg
bound
xlat
cld
sub
insl
or
jl
adc
push
idivl
popl
dec
stos
adc
fisttps
mov
inc
pop
into
push
sbbl
mov
std
mov
push
frstor
xor
inc
cld
hlt
bound
push
dec
lods
jle
add
add
loope
lea
bound
mov
int
nop
cmp
mov
adc
jbe
sti
punpckldq
inc
mov
sub
sbb
aad
out
cmp
lods
add
xchg
mov
push
pushf
test
adc
bound
xor
out
inc
ds
dec
xchg
mov
test
addr16
add
or
fidivl
pop
push
xchg
mov
outsl
bound
and
fs
xchg
sbb
rcll
push
scas
jb
cmc
jnp
sbb
lret
sbb
sarb
ret
in
ds
or
enter
je
inc
cmp
xchg
jno
cmpsl
push
xchg
mov
jg
call
incl
sar
add
push
dec
test
sub
mov
lods
ds
and
jne
repnz
xchg
push
pushf
xchg
push
call
pop
mov
outsl
js
inc
xor
xor
lock
inc
cli
push
fs
mov
call
jecxz
add
int
popa
add
pop
cwtl
loop
dec
icebp
ret
aam
test
pop
fdivs
mov
aad
jb
adc
dec
int3
or
loopne
lods
cmp
inc
pop
call
xchg
jp
ret
or
and
xor
sub
xchg
and
ficoms
mov
adc
xchg
or
mov
sbb
or
inc
cmp
pop
sub
dec
outsb
mov
xor
mov
pop
sub
mov
les
mov
xchg
mov
sbb
enter
into
mov
xor
and
jp
insl
adc
in
int
in
int3
xchg
ret
mov
or
aad
lods
idivb
loopne
or
outsb
jecxz
sahf
mov
sub
mov
inc
decb
lret
popf
movb
call
push
mov
dec
add
or
add
sbb
lock
inc
inc
in
scas
mov
mov
sub
sub
pop
iret
dec
or
mov
test
dec
push
xchg
clc
dec
subb
mov
add
jne
add
inc
or
hlt
sbb
and
jp
push
push
or
hlt
cmpsl
cmp
or
gs
in
push
test
jne
das
cmp
stc
cmp
cwtl
adc
dec
gs
mov
orb
inc
loope
sbb
or
sbb
add
or
inc
scas
shlb
enter
adc
aas
dec
cmp
dec
lock
inc
out
and
sub
fucomi
xor
lock
fadds
inc
test
or
sar
inc
insl
test
jge
sub
push
or
or
jne
js
adc
mov
jl
mov
pop
mov
xor
ss
push
and
pop
icebp
xchg
imul
push
aaa
addr16
jns
es
ss
push
andb
shl
testb
add
add
inc
adc
add
aam
add
xchg
xor
or
out
movsbl
hlt
and
adc
push
lea
push
pop
jp
rolb
jae
int3
loopne
fst
lock
jbe
pop
ljmp
pusha
xchg
push
lods
pop
pop
inc
inc
sub
xor
ljmp
dec
lods
sti
addr16
icebp
pop
mov
mov
ss
sbb
divb
lret
sub
pop
ror
mov
and
int3
stc
rcll
out
aas
dec
xor
sbb
stos
dec
inc
add
mov
gs
iret
out
xor
mov
jg
dec
adc
in
xchg
cli
enter
push
imull
mov
or
pop
int3
mov
jno
movl
or
dec
xor
adc
add
adc
fs
sub
out
mov
push
push
inc
sbb
sub
outsl
mov
jle
xchg
mov
out
push
cli
inc
cmpsl
cld
push
mov
dec
fsts
repnz
xlat
push
cld
mov
jnp
sbb
xor
xchg
call
ss
inc
sbb
mov
xchg
mov
push
cmp
mov
sbb
fs
mov
out
aad
cli
jle
icebp
cmp
cmp
in
arpl
sar
mov
lret
add
mov
fstps
test
cmp
cmp
mov
decl
lahf
imul
inc
in
mov
into
movb
faddp
add
add
add
cli
movb
add
add
cwtl
movb
mov
add
inc
movb
test
add
lock
push
movb
mov
movb
faddp
add
add
add
cli
movb
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
push
imul
insb
insb
outsl
arpl
add
add
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
inc
inc
dec
push
dec
cs
dec
dec
add
add
gs
je
push
arpl
imul
add
or
add
icebp
pusha
bound
add
addb
add
push
mov
sub
push
push
sub
push
push
push
push
push
call
mov
xor
mov
mov
mov
movsb
loop
inc
cmp
jne
mov
pop
pop
add
pop
leave
ret
loope
add
add
mov
addl
in
sub
add
push
push
sub
push
mov
sub
add
push
call
mov
push
pushl
call
mov
lea
push
push
push
call
mov
push
call
or
mov
mov
subl
addl
sub
call
mov
movl
pushl
add
pushl
shrl
sub
pushl
call
addl
call
add
inc
add
test
addb
add
add
add
adc
or
adcb
in
push
push
push
mov
mov
cmpl
je
mov
decl
rorl
xor
roll
roll
add
jmp
add
pop
pop
pop
leave
ret
.byte
mov
add
