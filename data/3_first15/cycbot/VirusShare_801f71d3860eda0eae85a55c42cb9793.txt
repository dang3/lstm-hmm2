scas
add
add
inc
xchg
push
or
mov
orb
fbld
mov
mov
insb
add
lods
or
mov
add
loope
add
cmp
xchg
jle
sub
mov
jno
int
subl
shl
subl
jno
and
mov
add
shl
ja
outsb
cmc
push
sarb
imul
jg
or
sbb
xor
repz
fidivl
jae
movsl
test
out
fcomip
pcmpeqd
mov
xchg
flds
push
cmp
rcll
pop
xchg
mov
pop
push
jge
leave
and
add
dec
add
movsl
mov
xchg
mov
mov
or
stc
repz
in
and
push
mov
lea
cmp
and
mov
push
das
sbb
lcall
leave
jge
mov
hlt
push
movsl
popf
sub
mov
daa
mov
stos
sbb
sbb
fstl
insl
or
daa
jbe
add
lret
test
inc
add
jp
jbe
jne
jmp
ror
arpl
sbb
adc
inc
imul
inc
mov
fiadds
mov
cmovns
add
mov
xor
mov
nop
fwait
adc
dec
cli
out
sbb
aaa
fidivrs
and
add
popf
sbb
push
cmpsb
pop
xor
mov
add
les
add
sbb
push
push
push
aaa
iret
mov
add
mov
aam
insb
add
cli
fwait
cmp
in
mov
mov
add
cmp
inc
push
outsl
add
mov
add
call
fcmove
xorl
aaa
mov
or
mov
mov
add
mov
outsb
sub
mov
cmpsl
mov
daa
dec
sub
or
add
dec
aaa
stos
jmp
push
addr16
dec
stos
ss
mov
cmp
mov
push
sbb
or
mov
in
mov
add
sub
mov
or
dec
push
jbe
add
jmp
mov
mov
jnp
div
pop
lock
add
sub
pushf
call
sbb
fnstsw
cli
push
push
andb
hlt
xchg
in
adc
scas
or
mov
mov
dec
mov
push
cltd
sbb
mov
jbe
icebp
addr16
push
dec
sbb
daa
cltd
movsb
xchg
push
in
incb
call
adc
inc
cwtl
shll
push
rcr
in
adc
mov
jmp
addr16
add
cmpsb
cmp
divl
cli
stos
adc
xor
mov
add
shr
or
mov
cmp
adcl
loopne
or
mov
jno
inc
add
dec
loope
xchg
add
imul
icebp
cmc
pop
xlat
pop
pop
scas
or
andl
and
xchg
xchg
mov
imul
loope
pop
test
std
stos
or
inc
idiv
and
xor
pop
addr16
jl
and
mov
mov
mov
mov
je
roll
add
add
int
and
rcrb
pop
pop
xchg
sub
mov
or
or
mov
add
mov
fisubs
add
clc
testb
mov
stos
mov
rolb
jae
test
dec
push
bound
in
jbe
test
and
or
add
popl
add
dec
mov
sbb
sbb
dec
cmp
inc
test
xor
or
mov
mov
jecxz
inc
add
mov
xchg
mov
mov
call
popa
sub
inc
leave
push
sub
mov
add
add
test
mov
imul
ja
jg
xchg
jns
jmp
stos
xchg
add
jge
inc
add
cmp
repnz
mov
jp
lret
jge
dec
sbb
jg
mov
test
add
movsb
xor
add
mov
inc
push
push
outsl
ja
daa
adc
push
ja
push
jnp
insl
xor
cmp
movsl
test
lret
loop
jae
add
and
mov
xorb
push
loope
fstpl
call
mov
aam
out
adc
outsl
sbb
sarb
push
out
jp
stos
push
xor
mov
cmpsb
inc
xor
sbb
jmp
inc
cmp
pop
lret
imul
mov
push
inc
pop
jno
daa
jle
adc
pop
sbb
sbb
mov
and
mov
mov
adcb
push
je
mov
gs
ret
add
add
call
push
popf
mov
adc
and
loop
mov
add
add
add
sbb
mov
mov
nop
std
mov
cmp
outsl
fisttpll
add
mov
frndint
stos
or
mov
lea
mov
mov
stos
xor
lock
mov
mov
nop
jns
add
cmpsb
push
xchg
adcl
add
push
call
mov
sub
pop
std
cmp
cmpsb
push
aad
push
jnp
adc
add
add
mov
nop
or
mov
and
push
aas
sbb
xor
enter
mov
mov
xor
fildl
faddp
mov
inc
pop
xchg
cli
pop
imul
fistpll
pop
jb
in
jle
out
daa
add
ds
test
js
aam
inc
add
add
add
add
jnp
xor
arpl
in
sbb
les
mov
add
jmp
pop
call
inc
out
cmp
add
pop
cld
push
lds
add
add
mov
adc
sarl
mov
lahf
adc
mov
dec
and
mov
add
add
mov
mov
aad
cmpsl
or
pushf
dec
inc
pop
ljmp
ret
mov
or
rcll
push
lds
call
jb
ret
mov
dec
fists
inc
add
mov
sub
repnz
ljmp
fistps
mov
test
add
ja,pt
push
je
cwtl
iret
add
add
test
repz
dec
inc
mov
add
lds
dec
add
pop
sti
cltd
xor
add
adc
ret
xchg
mov
in
adc
jno
std
inc
add
mov
jge
push
jg
jp
dec
mov
pop
or
cwtl
and
xor
nop
sbb
inc
cli
out
test
fsts
jmp
mov
inc
jb
sbb
cmp
sbb
fcmovb
sbb
dec
add
inc
aaa
and
push
popf
sbb
mov
rolb
leave
addb
add
cltd
adc
rorl
fwait
ss
push
orb
add
and
mov
add
mov
leave
rorb
mov
hlt
push
lods
mov
sub
sbb
call
and
pop
out
insl
xor
icebp
adc
xchg
mov
inc
push
add
pop
in
or
mov
add
push
push
hlt
in
test
popa
xchg
cli
add
push
iret
and
and
shr
in
enter
cmp
mov
add
pop
repz
add
cmp
jl
sti
fstl
inc
dec
mov
xchg
jecxz
or
mov
mov
adcl
lods
fmull
insl
jns
idiv
mov
mov
stc
pushl
adc
mov
ljmp
and
xchg
ljmp
in
orb
add
add
mov
inc
dec
ss
mov
mov
mov
or
sub
popa
ljmp
add
xor
dec
mov
adc
jb
out
mov
cmp
rcll
lcall
cmpsl
repnz
stc
cld
xor
push
or
mov
dec
out
jmp
cld
add
sub
mov
cmp
sbb
sub
jg
scas
pushf
popa
mov
mov
mov
push
xor
mov
das
jae
sub
mov
scas
dec
hlt
nop
repnz
je
dec
jo
inc
mov
or
int3
fsubrs
sub
mov
cmc
push
push
push
mov
repz
add
cmpsb
or
mov
cs
mov
imul
jno
xchg
add
mov
add
mov
adc
in
addb
shrb
test
rol
mov
repz
ds
scas
xor
jmp
add
push
dec
nop
push
xchg
ds
in
add
mov
add
jp
adc
orl
pop
adc
add
add
dec
add
add
scas
movsb
stc
scas
inc
das
mov
hlt
lcall
add
jnp
mov
add
add
jno
mov
or
add
and
mov
dec
lret
xchg
lahf
sbb
add
out
xchg
out
push
inc
add
add
lahf
mov
jae
jne
pop
fisubl
inc
sub
sbb
leave
adcl
xor
xor
mov
test
adc
lahf
int
ds
fnstenv
out
mov
xor
cmpsl
repz
stos
cmp
add
aas
loopne
je
xchg
mov
je
mov
xor
movsl
mov
dec
scas
fnstenv
rol
or
jle
sahf
sti
jo
pushf
xor
lret
jbe
push
mov
addr16
push
adc
cmpsl
mov
clc
lahf
jp
aaa
mov
loopne
scas
pop
mov
inc
add
jne
push
imul
xlat
shlb
test
and
pop
in
and
mov
add
push
adc
push
adc
push
inc
clc
dec
push
mov
lcall
or
jbe
and
mov
scas
dec
jo
scas
and
leave
mov
add
je
in
add
in
xchg
mov
mov
lock
test
gs
xchg
add
add
mov
pop
loope
jecxz
sti
sub
test
xor
add
add
add
add
outsb
push
push
aad
and
dec
add
add
pop
sub
mov
icebp
ja
adcl
and
scas
mov
adc
ds
add
test
or
mov
ja
inc
add
mov
insl
xchg
nop
dec
aam
add
mov
cwtl
lcall
xchg
add
loop
fwait
shlb
mov
and
add
add
call
popf
dec
shlb
add
jb
jg,pn
add
mov
mov
xchg
es
sahf
or
pop
sbb
mov
incl
into
leave
imul
add
js
mov
add
jo
ds
jl
xchg
xchg
push
add
sbb
bound
mov
lret
ret
fdivrp
aas
push
pop
xchg
cmp
add
dec
push
inc
mov
fcompl
xlat
jge
stc
and
mov
rclb
addr16
add
or
mov
inc
out
cs
cmp
xchg
lcall
add
xor
push
sbb
mov
mov
nop
mov
fwait
mov
dec
testb
add
or
add
fistps
sub
lea
jg
add
mov
xor
popa
rcrb
add
ffreep
aam
sbb
add
add
adc
xchg
cmp
sub
mov
and
mov
cmpb
arpl
cmp
mov
mov
mov
ljmp
mov
add
js
icebp
jg
mov
es
mov
cmp
adc
mov
aas
aad
lods
inc
mov
sarb
adc
mov
add
jge
hlt
pop
hlt
scas
xchg
test
mov
pop
inc
add
fisttps
lcall
mov
cmc
mov
add
out
inc
sbb
mov
pop
adc
pop
add
das
jmp
mov
mov
mov
add
push
mov
out
aaa
jbe
cltd
clc
outsl
addr16
pop
ret
sub
movsb
mov
lret
fwait
aaa
arpl
push
test
sbb
jns
mov
add
call
add
push
in
jns
add
mov
mov
mov
add
jno
loope
std
pop
adc
mov
adc
int
test
insb
add
mov
dec
add
repnz
outsl
xchg
mov
pop
jmp
add
xor
add
pop
popf
sbb
xor
mov
mov
notb
adc
js
cmp
inc
add
add
ret
pop
push
push
repnz
mov
jmp
mov
arpl
push
loopne
test
es
xor
loop
pop
jns
jo
push
repnz
aaa
push
iret
pop
jmp
psubd
lock
adc
repnz
loop
in
xor
mov
sbb
call
inc
mov
pushf
inc
fldl
and
mov
iret
mov
add
add
test
add
mov
loope
cwtl
mov
xchg
cmp
push
mov
push
ds
add
inc
loope
mov
push
sahf
pop
insb
add
mov
sbb
pop
pcmpeqw
cwtl
pop
stc
push
sbb
pop
or
mov
xor
fistps
xor
pusha
add
incb
mov
int3
sub
test
arpl
mov
mov
xor
test
jg
add
mov
cli
jg
fadd
lret
fstps
icebp
out
xadd
mov
hlt
or
mov
rcrl
xorb
jmp
jns
arpl
loopne
loope
adc
lret
xchg
add
stos
loopne
mov
pop
push
add
cmp
imull
mov
mov
add
mov
push
pop
and
mov
mov
jns
mov
push
fiaddl
add
and
mov
daa
mov
jmp
xchg
addr16
std
lods
jle
push
push
push
jl
jmp
or
das
cmp
mov
adc
jne
jae
in
mov
add
add
mov
add
fists
mov
gs
push
addl
and
mov
sub
test
xrelease
sbb
and
mov
add
xchg
mov
push
push
push
add
js
push
jo
xchg
into
mov
add
adc
adc
icebp
mov
pop
addr16
xor
add
sub
adc
push
adc
mov
add
pop
fiadds
dec
push
test
cmpsb
push
repz
dec
jg
jb
add
inc
add
int3
push
push
push
imul
sub
push
xchg
jl
sbb
push
stos
sub
mov
xor
pop
lds
daa
stc
mov
mov
pop
das
push
jne
xor
sahf
movsl
inc
add
push
pop
test
ja
mov
add
add
dec
subl
add
push
icebp
mov
lock
out
lahf
cmp
movsl
inc
add
add
mov
add
pop
fiaddl
ret
fstps
dec
daa
lea
sub
mov
test
pop
cmp
imul
cmc
pop
mov
or
mov
sub
add
inc
mov
mov
les
movsl
ds
xchg
sti
pop
or
mov
add
and
mov
cld
xchg
sub
test
cli
push
add
inc
and
mov
aas
aaa
insl
sahf
daa
mov
fstl
add
xchg
jae
cltd
mov
add
adc
imul
divb
mov
sbb
movsb
inc
subl
loope
outsb
jb
adc
adc
mov
jecxz
add
push
push
cmp
repnz
mov
mov
mov
lahf
stc
filds
mov
cmp
jae
cmc
jg
cmpsb
add
mov
je
mov
mov
lods
pop
aad
es
mov
add
data16
loop
dec
inc
das
outsl
repnz
movsb
cmp
push
push
xor
bound
adc
test
jbe
sub
mov
sahf
inc
into
and
add
sbb
sbb
jmp
xor
cmpsb
shlb
iret
mov
push
xacquire
jmp
mov
add
add
scas
lods
cmp
jl
adc
sbbb
cmpsl
cmp
pop
dec
add
sub
mov
mov
jl
and
add
add
add
sbbl
xlat
movsl
adc
popa
inc
push
scas
mov
pop
jne
lds
sub
mov
or
mov
into
iret
aam
adc
pushl
xchg
jg
scas
cmp
xorl
jg
push
mov
xchg
jg
jle
int3
loopne
jbe
lods
lret
testb
pop
or
push
insl
adc
push
pusha
add
add
add
jl
jb
je
rolb
cmp
sbb
jmp
insb
add
push
insl
mov
add
imul
insl
push
mov
rcrb
jl
push
mov
lods
adc
jb
or
or
sbb
test
jge
lds
mov
cmc
and
add
mov
xchg
lret
sub
add
jne
or
in
mov
imul
xchg
push
add
and
jp
jae
int
xchg
add
mov
sub
mov
xchg
and
push
inc
add
sub
mov
aam
add
loopne
mov
push
lret
test
sbb
dec
iret
in
stc
xor
mov
xor
jo
out
adc
jecxz
xchg
push
pop
sbb
lea
add
mov
pop
and
mov
dec
add
insl
xor
mov
lahf
push
push
ljmp
lret
sti
mov
clc
insl
and
jnp
iret
test
adc
loop
xchg
cmp
lret
mov
xor
mov
sub
add
xchg
mov
inc
cli
adc
out
push
orl
pop
sub
sub
add
mov
dec
mov
je
jae
mov
cmc
std
and
mov
orb
cmp
add
mov
and
dec
jge
push
gs
adc
fisttpll
sbb
lock
xor
cmp
sbb
mov
mov
mov
hlt
ds
scas
mov
or
pop
xchg
test
jmp
jmp
jge
adc
fistl
hlt
mov
es
adc
add
sqrtps
xchg
push
mov
cs
outsl
jb
je
mov
sub
pop
xlat
fistpl
call
in
add
movl
clc
push
lea
call
sub
add
add
and
mov
cmp
je
mov
push
push
push
cld
call
test
jne
dec
add
mov
add
push
push
push
push
push
call
test
jne
xor
cld
push
es
lea
movl
push
push
push
push
push
push
clc
call
push
or
lea
jne
movzbl
or
add
mov
add
not
cld
xor
test
cld
jne
call
xor
mov
add
add
rorb
mov
bnd
cmp
mov
mov
mov
lea
lea
add
xchg
shr
shr
xchg
lock
and
sub
cld
jne
push
mov
jne
mov
jmp
arpl
add
dec
add
mov
mov
dec
inc
cmp
pop
push
adc
dec
fldt
repz
sbb
sahf
add
mov
xchg
push
pop
xor
dec
cmp
mov
cmpsb
cmpsl
dec
add
movsb
enter
add
adc
sbb
add
add
push
out
add
mov
and
add
mov
mov
xchg
adc
ret
add
es
push
cmp
pop
cmc
cld
push
shrl
xchg
sbb
movsl
fcoms
popf
adc
push
dec
add
add
setbe
lods
inc
or
outsl
push
cmpsb
push
pusha
add
inc
add
sub
mov
add
mov
js
stos
mov
inc
push
push
mov
mov
je
lock
mov
pop
inc
add
adc
loopne
mov
mov
or
lret
rcrl
lcall
jp
hlt
push
int
and
add
mov
pop
or
mov
add
or
lock
mov
or
push
pop
hlt
push
fistps
cmp
lret
negb
enter
sbb
call
jnp
rol
mov
mov
jp
popf
xlat
sbb
mov
out
pusha
add
mov
idivb
out
add
cld
loopw
int3
cmpsb
arpl
and
adc
mov
dec
add
and
call
inc
or
mov
mov
pop
cltd
movsb
xchg
data16
xor
or
loopne
fidivl
dec
cmp
adc
das
in
int
in
pop
push
or
sbb
ret
ret
loope
aaa
mov
add
les
movsl
xor
sbb
xchg
dec
icebp
pop
andb
pop
adc
sahf
loope
push
pop
je
add
mov
xchg
mov
ja
insl
push
lahf
and
mov
xor
mov
sbb
sahf
orl
pop
dec
adc
movlps
or
pop
ds
sbb
add
mov
fst
imulb
push
sbb
pusha
add
sbb
xchg
sahf
lods
aad
xchg
pop
push
add
mov
push
movsb
sub
mov
cmp
mov
add
in
enter
adc
das
fstl
sbb
jge
js
stos
outsb
push
lds
add
add
lods
push
push
shl
mov
ficoml
jo
pop
mov
mov
and
add
lods
leave
push
jne
xlat
stc
dec
add
and
adc
repz
mov
mov
ljmp
seta
push
pop
jl
add
fdivrl
xchg
out
and
mov
mov
xchg
xor
outsl
push
jne
shll
add
mov
mov
mov
jmp
test
icebp
mov
aaa
jae
jmp
jns
mov
add
add
mov
and
mov
jmp
popf
adc
int3
mov
and
mov
sahf
lds
mov
jge
push
rol
mov
cmc
jne
cmp
or
mov
mov
pop
adc
sbb
push
outsb
xor
ds
js
imul
xor
jge
xlat
jp
mov
bound
adc
pushf
scas
inc
ret
mov
jb
inc
add
add
jecxz
mov
add
dec
add
jnp
and
dec
mov
jmp
add
mov
dec
push
andl
bound
fcoms
add
ja
add
xorl
clc
ret
mov
sbb
xchg
lcall
mov
and
mov
pop
push
fmuls
add
xor
cmp
xlat
test
sarl
lahf
mov
xchg
stos
andl
add
jae
push
or
mov
add
add
leave
cmpl
adc
mov
dec
mov
add
insb
add
and
push
or
pop
imul
sbb
cmpl
das
mov
shl
fabs
xchg
ljmp
outsl
rcrl
pop
mov
enter
aam
push
inc
add
icebp
xchg
sbb
aad
add
xchg
cs
cmp
push
test
pop
das
sub
into
loope
cmp
add
in
leave
pop
int
or
and
mov
jnp
in
cmpsb
add
nop
fidivl
mov
xchg
mov
ret
in
sarb
pop
adc
loop
adc
dec
xchg
rcrb
es
subl
out
cmpsb
js
out
es
xor
bound
and
xor
scas
jns
mov
mov
or
mov
test
xor
mov
mov
and
mov
cmpl
xchg
jae
cmp
push
fistps
mov
mov
pop
pop
lahf
aad
add
mov
add
enter
int3
cmp
jecxz
sub
xchg
jge
in
add
mov
pop
dec
and
mov
testb
lods
dec
ret
subb
mov
sbb
inc
adc
arpl
mov
loope
inc
adc
jp
mov
sub
push
lahf
xchg
pop
and
cmc
fldt
mov
test
xchg
push
fistps
mov
lock
sub
mov
insl
or
jecxz
lds
inc
add
mov
add
add
add
dec
add
jl
sub
mov
push
add
mov
test
pop
lret
inc
and
mov
imul
sti
or
mov
movsl
pop
jg
sub
outsb
dec
add
xlat
cmpsl
dec
rcll
jae
imul
add
add
fsubr
push
pop
fsubr
push
scas
hlt
js
mov
add
sbb
subl
mov
sbb
add
lds
dec
pop
outsl
sub
jnp
add
pop
pop
jns
xor
and
mov
in
add
imul
add
sarl
insl
repz
xlat
cwtl
pop
adc
js
cwtl
pop
lcall
add
adc
stos
addb
add
fildl
xchg
outsb
or
loop
dec
pop
hlt
pop
jno
inc
push
fsts
cmpps
in
adc
cli
mov
sub
mov
jbe
lcall
sub
mov
int3
mov
sub
mov
imul
dec
add
dec
lea
xchg
clc
rorb
adc
inc
inc
add
leave
and
mov
xchg
call
sub
sub
xchg
mov
adc
push
in
xchg
call
adc
pop
insl
fildl
add
shll
or
mov
stc
fnstcw
out
inc
mov
cmp
add
push
in
icebp
fidivrl
fdivrl
xchg
sbb
mov
daa
sub
push
repnz
adc
repnz
jmp
popa
mov
popf
test
mov
inc
adc
sahf
pop
lods
les
xchg
mov
lods
cmp
dec
sbb
pop
dec
nop
mov
sub
insb
add
add
xchg
test
cs
mov
lcall
sub
leave
pop
ja
stos
shlb
mov
xor
add
std
outsl
shrl
adc
lock
jnp
test
das
inc
rorb
aaa
scas
push
adcb
cmpsb
add
add
in
inc
pop
mov
roll
stos
mov
push
cmpsb
in
popf
imul
push
aad
inc
add
std
xchg
stos
mov
and
xlat
es
std
jno
call
mov
out
dec
aaa
nop
inc
call
mov
mov
push
fiaddl
jns
push
arpl
mov
mov
adc
xchg
ja
imul
pop
mov
add
add
addr16
mov
add
lea
mov
jnp
hlt
sub
mov
inc
add
inc
add
sub
mov
push
xor
lds
sbb
jge
xchg
push
addr16
cmpsl
aas
dec
sbb
mov
out
testb
outsb
cmc
mov
mov
repnz
and
mov
ljmp
mov
mov
add
push
xor
xchg
lcall
jb
fmul
sti
orl
xchg
inc
add
inc
pop
inc
movb
sbb
mov
mov
push
scas
popa
add
out
sbb
in
mov
pusha
add
in
nop
aad
loop
xchg
mov
inc
add
in
dec
jae
push
inc
add
mov
xor
notl
fsts
add
add
add
aam
mov
add
movsl
cmpsb
roll
add
add
xchg
cmp
das
add
mov
shll
mov
mov
add
sbb
fistpl
mov
fistps
dec
add
xorl
loopne
fstpt
pop
cmp
ret
test
pushf
or
mov
mov
or
mov
cli
je
sub
jl
jp
jno
mov
movsl
add
mov
cmp
cmp
or
mov
ret
cwtl
xchg
jne
loope
pop
fmull
inc
inc
negb
je
mov
outsl
inc
inc
add
sti
jp
push
push
in
cli
xor
pop
and
lcall
int3
dec
add
dec
xor
add
mov
and
xchg
jne
call
pushf
shll
mov
ja
or
add
pusha
add
or
jg
ror
dec
add
sub
add
fsubp
shlb
bound
xor
mov
mov
mov
push
inc
mov
mov
cltd
test
das
xor
jle
add
add
inc
mov
sbb
xor
gs
or
mov
cmc
adc
cmp
mov
jns
or
mov
jmp
movsb
mov
popa
or
mov
mov
or
add
push
cmp
ljmp
mov
add
lahf
inc
call
ja
into
xlat
dec
sbb
mov
lods
adc
push
aas
xor
cmp
jmp
mov
xchg
iret
add
bnd
add
add
mov
xor
or
call
ds
mov
mov
jmp
frstor
and
mov
or
mov
aas
dec
ds
repz
mov
in
mov
push
and
adc
decb
repnz
jge
cmp
inc
mov
jmp
lret
pop
jb
dec
arpl
cmp
mov
jecxz
pushf
stos
mov
mov
add
dec
add
dec
dec
add
es
enter
xchg
jnp
mov
add
mov
test
cmp
jecxz
push
mov
inc
fsts
out
push
cmc
cmp
add
push
xchg
pop
outsl
sahf
mov
mov
gs
es
add
mov
hlt
je
add
rcrl
imul
adc
cmp
or
mov
rol
jg
imul
push
mov
mov
int
jp
dec
mov
loopne
popa
outsb
inc
add
je
add
add
sub
aad
pop
lcall
xor
orb
into
dec
in
ljmp
mov
xor
push
out
addr16
sti
xchg
test
data16
cltd
jg
stos
push
popf
adc
and
mov
pop
loop
adc
pop
ret
cltd
ret
fwait
outsl
sbb
add
cmp
jge
add
cmpsl
gs
in
cltd
addl
and
mov
adc
dec
add
sbb
sub
xchg
mov
lods
cld
sti
pop
mov
aam
into
and
ficompl
scas
hlt
out
cld
aam
pop
mov
pusha
add
movzbl
add
add
xor
lods
test
cmp
enter
test
add
mov
insl
jge
push
rolb
add
int
insl
call
andl
mov
mov
or
mov
daa
sub
movsb
adc
int
add
or
mov
or
mov
aad
push
fildll
add
xchg
xor
jecxz
ds
and
mov
cmp
pop
cmpsb
cltd
loopne
add
lcall
aad
mov
jg
mov
mov
jmp
ss
dec
xchg
out
mov
adc
mov
shlb
add
or
add
inc
clc
cmp
sbb
fnsave
sbb
push
rclb
mov
lods
popa
outsb
xchg
jno
call
add
subl
xchg
repnz
bound
xchg
add
fldcw
out
clc
repnz
nop
nop
jae
cmp
dec
add
add
nop
push
mov
leave
nop
jmp
add
scas
lods
add
pushf
popa
popf
add
jge
clc
repnz
nop
nop
jae
dec
jle
inc
gs
add
pop
pop
add
rcl
inc
mov
clc
repnz
nop
nop
jae
push
dec
add
add
push
clc
repnz
nop
nop
jae
sti
dec
add
stos
xlat
add
in
clc
add
nop
jmp
add
add
dec
scas
add
xchg
cld
nop
nop
jae
std
add
stc
std
jmp
test
adcl
cld
nop
nop
jae
call
push
add
add
add
rep
clc
repnz
nop
nop
jae
xlat
dec
push
add
push
add
push
mov
dec
insl
loope
cwtl
add
add
add
sub
or
add
fld1
clc
repnz
nop
nop
jae
add
sti
inc
dec
add
add
add
fldt
push
mov
xchg
ret
scas
add
test
test
push
xchg
mov
repnz
nop
nop
jae
dec
push
add
cmp
add
and
mov
andl
in
leave
nop
jmp
adc
add
cmpb
push
jl
push
nop
push
mov
leave
nop
jmp
stos
add
add
push
mov
push
mov
fdivr
repnz
nop
nop
jae
pop
jle
notl
add
jp
push
jo
jmp
dec
add
push
shll
ss
gs
lods
js
lods
jae
clc
repnz
nop
nop
jae
add
add
and
jp
cltd
test
gs
repnz
nop
nop
jae
add
cwtl
popf
pop
pop
and
cmp
repnz
nop
nop
jae
pop
js
add
sti
cmpsl
push
inc
add
fs
add
add
popf
add
add
inc
clc
add
mov
xor
add
clc
repnz
nop
nop
jae
popa
sbb
test
mov
leave
nop
push
mov
leave
nop
jmp
pop
pushf
add
add
jp
pushf
ljmp
movzwl
clc
repnz
nop
nop
jae
add
add
jle
add
sub
mov
leave
nop
jmp
push
mov
lods
dec
popa
push
add
jmp
testl
pop
jle
js
dec
popa
inc
mov
sbb
cld
nop
nop
jae
popa
add
add
add
aad
clc
repnz
nop
nop
jae
popf
add
mov
add
mov
xchg
ret
add
add
add
jge
enter
nop
nop
jae
gs
add
std
add
push
adc
fistpl
clc
repnz
nop
nop
jae
add
mov
push
clc
repnz
nop
nop
jae
add
push
inc
add
lods
add
cmpsl
add
into
inc
int
ret
add
and
ret
add
push
add
add
add
subl
push
mov
xchg
ret
stc
xlat
add
add
push
gs
cltd
out
jle
add
nop
jmp
add
add
add
or
repnz
nop
nop
jae
add
enter
add
out
push
nop
push
mov
leave
nop
jmp
jle
test
rcl
popf
pop
ss
add
lahf
pushl
nop
push
mov
leave
nop
jmp
dec
add
pop
push
inc
add
and
fistpl
push
mov
xchg
ret
js
dec
xlat
fmul
in
add
add
popa
nop
push
mov
leave
nop
jmp
shll
add
mov
push
add
add
test
nop
push
mov
leave
nop
jmp
popf
add
enter
mov
sbb
clc
repnz
nop
nop
jae
gs
pop
ss
fcomps
add
add
popf
push
clc
repnz
nop
nop
jae
dec
push
fadds
and
testl
mov
clc
repnz
nop
nop
jae
stc
add
add
dec
notl
pop
inc
pusha
push
mov
xchg
ret
stc
jp
add
add
cmp
add
nop
push
mov
leave
nop
jmp
std
fmuls
dec
add
mov
leave
nop
jmp
mov
ds
add
add
push
mov
repnz
nop
nop
jae
add
dec
sti
pop
add
clc
repnz
nop
nop
jae
stc
pop
add
imul
clc
jno
clc
repnz
nop
nop
jae
add
push
add
dec
fadds
add
add
ret
movsb
clc
repnz
nop
nop
jae
fadds
add
add
add
add
mov
xchg
cmpl
nop
jae
add
add
adc
nop
push
mov
leave
nop
jmp
jle
pop
sbb
push
dec
sbb
std
lea
nop
push
mov
leave
nop
jmp
inc
push
add
cmp
add
sbb
into
dec
pop
push
mov
xchg
ret
dec
test
sti
das
dec
push
lods
mov
clc
repnz
nop
nop
jae
adc
dec
add
push
inc
add
pop
clc
repnz
nop
nop
jae
lods
add
popa
test
adc
cs
jg
je
sub
rclb
ret
add
add
add
loope
incl
add
nop
jmp
cmpsl
add
popf
push
nop
push
mov
leave
nop
jmp
dec
dec
add
testl
dec
add
roll
mov
leave
nop
jmp
jle
dec
sbb
xchg
mov
clc
repnz
nop
nop
jae
add
push
roll
add
stc
add
xlat
fimuls
mov
repnz
nop
nop
jae
add
ja
call
jnp
rclb
fisubs
xchg
ret
push
add
jp
std
add
add
mov
add
nop
push
mov
leave
nop
jmp
add
add
testl
push
xor
add
repnz
nop
nop
jae
push
add
add
std
pop
ret
push
test
jp
push
add
dec
add
add
add
add
dec
xor
addb
cmp
ret
pop
jmp
sbb
push
pushf
mov
mov
out
sbb
push
mov
xchg
ret
pushf
popf
inc
add
add
push
lods
add
test
xor
clc
repnz
nop
nop
jae
testb
stos
inc
and
mov
lcall
cmp
cld
nop
nop
jae
add
add
add
add
lods
lea
clc
repnz
nop
nop
jae
cltd
pop
stos
add
scas
mov
mov
clc
repnz
nop
nop
jae
sbb
dec
add
add
lods
add
clc
repnz
nop
nop
jae
test
add
pop
add
fcomps
popa
mov
decl
clc
repnz
nop
nop
jae
add
add
add
jns
push
mov
xchg
ret
add
cltd
add
add
pop
sbb
add
clc
repnz
nop
nop
jae
add
add
in
mov
inc
enter
lcall
nop
nop
jae
scas
add
jmp
add
call
jb
pop
mov
clc
repnz
nop
nop
jae
add
add
lods
cwtl
dec
dec
mov
push
push
mov
xchg
ret
add
ss
dec
push
and
dec
sub
repnz
nop
nop
jae
add
dec
add
pop
add
dec
das
push
dec
mov
clc
repnz
nop
nop
jae
add
add
jle
shr
pop
push
mov
xchg
ret
lods
add
pop
jle
dec
add
roll
add
mov
xchg
ret
add
popa
add
mov
fisttpll
nop
nop
jae
jle
xlat
add
add
sti
cmp
mov
nop
nop
jae
add
jle
inc
xlat
push
in
notl
push
mov
leave
nop
jmp
add
stc
roll
std
add
add
scas
adc
mov
dec
pushf
add
add
pop
add
imul
push
mov
xchg
ret
add
inc
add
js
mov
clc
repnz
nop
nop
jae
add
lods
std
popf
add
mov
add
repnz
nop
nop
jae
add
add
push
add
push
push
call
clc
repnz
nop
nop
jae
add
jmp
stc
sbb
add
nop
nop
jae
and
add
ds
hlt
mov
in
leave
nop
jmp
add
add
test
adc
mov
mov
mov
xchg
ret
add
imul
inc
add
fisttpl
cld
nop
nop
jae
add
add
push
popf
push
push
mov
xchg
ret
inc
jle
das
ss
mov
fadds
enter
push
clc
repnz
nop
nop
jae
add
add
xlat
add
ret
add
clc
repnz
nop
nop
jae
add
add
add
add
push
mov
mov
aaa
add
inc
jno
adc
arpl
fstps
jae
repnz
nop
nop
jae
inc
push
mov
dec
cmp
adc
pop
nop
push
mov
leave
nop
jmp
popa
add
call
add
jle
cmp
repnz
nop
nop
jae
jle
add
jle
add
add
push
mov
xchg
ret
lods
pop
dec
cmpsl
dec
push
mov
lods
sub
jge
clc
repnz
nop
nop
jae
add
cs
add
sbb
ja
xchg
mov
clc
repnz
nop
nop
jae
lods
cwtl
add
add
add
stos
add
xor
in
inc
add
inc
sbb
gs
pushf
add
add
add
nop
nop
jae
add
dec
add
add
add
xchg
pop
clc
repnz
nop
nop
jae
add
das
popa
cwtl
push
jle
inc
mov
mov
xchg
das
add
add
ds
fdivs
add
xlat
roll
add
add
add
nop
push
mov
leave
nop
jmp
add
popf
mov
inc
push
add
mov
mov
push
mov
xchg
ret
add
or
popf
imul
jmp
push
mov
leave
nop
jmp
dec
mov
das
add
add
jne
clc
repnz
nop
nop
jae
add
push
test
rolb
test
add
repnz
nop
nop
jae
imul
add
in
add
andb
rclb
jo
inc
add
in
dec
add
sbb
add
push
push
mov
xchg
ret
push
dec
push
add
add
imul
mov
aad
clc
repnz
nop
nop
jae
add
add
scas
add
add
gs
repnz
nop
nop
jae
inc
add
ror
and
dec
push
inc
add
dec
add
pop
cmp
add
push
add
out
add
push
mov
xchg
ret
add
add
add
add
popa
add
iret
xor
clc
repnz
nop
nop
jae
or
pop
add
ret
mov
clc
repnz
nop
nop
jae
add
add
lods
push
ss
cs
add
nop
push
mov
leave
nop
jmp
add
scas
js
add
add
cmp
clc
repnz
nop
nop
jae
dec
push
test
add
mov
sbb
stos
nop
push
mov
leave
nop
jmp
add
add
add
dec
jmp
add
insb
add
push
mov
xchg
ret
add
push
add
popf
add
cltd
or
mov
clc
repnz
nop
nop
jae
stc
stos
scas
testl
push
mov
sbb
push
clc
repnz
nop
nop
jae
mull
add
add
mov
sbb
cld
nop
nop
jae
jle
jle
in
or
sahf
iret
je
nop
push
mov
leave
nop
jmp
sbb
lods
lods
gs
mov
jno
clc
repnz
nop
nop
jae
push
push
cwtl
add
add
add
push
push
mov
xchg
ret
add
pop
add
jmp
add
mov
clc
repnz
nop
nop
jae
sti
cltd
pushf
push
add
add
mov
xchg
ret
add
fadds
ja
push
jp
jmp
add
adc
clc
repnz
nop
nop
jae
shrl
mov
add
hlt
icebp
add
nop
push
mov
leave
nop
jmp
add
inc
negl
clc
repnz
nop
nop
jae
add
add
sbb
mov
inc
scas
push
loope
mov
adc
repnz
nop
nop
jae
add
xlat
jp
mov
inc
clc
repnz
nop
nop
jae
fadds
add
add
sbb
ds
push
clc
repnz
nop
nop
jae
add
or
or
repnz
in
add
or
mov
add
add
sbb
jg
jecxz
push
mov
xchg
ret
mov
add
add
add
adc
repnz
nop
nop
jae
mov
add
mov
push
add
lock
mov
es
jecxz
push
mov
leave
nop
jmp
adc
xlat
add
push
jecxz
jae
push
mov
xchg
ret
roll
jle
jmp
add
add
call
nop
push
mov
leave
nop
jmp
roll
stc
enter
sti
cmpsl
shr
clc
repnz
nop
nop
jae
inc
idivb
cmpsl
stos
testb
cmpsl
and
movsb
clc
repnz
nop
nop
jae
mov
inc
mov
jle
add
add
nop
push
mov
leave
nop
jmp
stos
add
cwtl
pop
std
add
add
jae
roll
push
mov
leave
nop
jmp
add
mov
add
int
pushl
nop
push
mov
leave
nop
jmp
push
call
add
add
ficomps
add
repnz
nop
nop
jae
add
add
jp
add
mov
sbb
repnz
nop
nop
jae
add
add
cs
add
jb
clc
repnz
nop
nop
jae
scas
push
add
add
add
cld
nop
nop
jae
dec
dec
std
add
add
cmp
ja
xor
clc
repnz
nop
nop
jae
mov
jle
jle
add
clc
repnz
nop
nop
jae
and
enter
repz
clc
repnz
nop
nop
jae
add
add
add
add
das
testl
add
clc
repnz
nop
nop
jae
popf
lods
push
add
add
add
repnz
nop
nop
jae
add
gs
add
imul
nop
nop
jae
test
sbb
add
add
adc
call
nop
jmp
sbb
cwtl
add
ja
mov
mov
xchg
ret
add
add
add
enter
add
and
push
mov
xchg
ret
in
cmpsl
add
inc
add
pop
add
scas
mov
nop
push
mov
leave
nop
jmp
pop
add
cs
popa
add
popa
dec
push
add
clc
repnz
nop
nop
jae
dec
call
test
add
insl
call
clc
repnz
nop
nop
jae
add
rorl
add
cmpsb
mov
clc
repnz
nop
nop
jae
lods
add
test
pop
rorl
nop
nop
jae
add
lods
lods
add
inc
shrb
push
mov
add
cld
add
add
add
lock
add
add
push
clc
repnz
nop
nop
jae
add
lods
add
dec
add
not
push
mov
xchg
ret
add
roll
gs
cmpsl
mov
call
nop
jae
add
add
pop
fcomps
jl
add
adc
repnz
nop
nop
jae
js
dec
add
js
or
dec
cmp
mov
xchg
ret
test
add
add
add
add
std
clc
repnz
nop
nop
jae
add
test
jae
dec
cmp
repnz
nop
nop
jae
add
enter
ja
add
clc
repnz
nop
nop
jae
pop
add
add
add
idiv
clc
repnz
nop
nop
jae
dec
add
popf
push
std
mov
clc
repnz
nop
nop
jae
add
add
or
repnz
nop
nop
jae
push
sti
cmpsl
jle
add
add
add
cmp
xbegin
jae
ja
stc
or
add
inc
xor
jmp
nop
nop
jae
ss
inc
cs
add
inc
nop
push
mov
leave
nop
jmp
add
add
add
add
nop
nop
jae
add
add
add
xor
clc
repnz
nop
nop
jae
add
add
mov
das
add
inc
neg
jg
inc
and
repnz
nop
nop
jae
add
add
in
mull
push
xchg
sub
gs
add
push
call
js
and
in
push
mov
fisttps
push
mov
leave
nop
jmp
add
add
add
mov
mov
clc
repnz
nop
nop
jae
pushf
popa
pop
imul
cli
dec
mov
clc
repnz
nop
nop
jae
add
stos
add
add
add
mov
cld
nop
nop
jae
mov
sbb
and
pop
mov
dec
pop
clc
repnz
nop
nop
jae
dec
mov
add
add
add
add
lds
in
add
mov
add
repnz
add
std
stc
cmp
mov
clc
repnz
nop
nop
jae
test
pushf
cwtl
add
lods
add
add
loop
nop
push
mov
leave
nop
jmp
std
add
lods
add
add
rclb
bound
and
dec
add
add
imul
call
nop
jae
cmpsl
add
scas
and
mov
clc
repnz
nop
nop
jae
add
add
test
xorl
nop
push
mov
leave
nop
jmp
add
das
popa
ja
icebp
push
clc
repnz
nop
nop
jae
push
add
das
and
add
dec
add
clc
repnz
nop
nop
jae
add
ja
das
add
jp
adc
push
mov
xchg
ret
jle
add
sti
add
fcompl
add
clc
repnz
nop
nop
jae
dec
or
add
add
pushl
clc
repnz
nop
nop
jae
std
das
add
add
add
push
mov
leave
nop
jmp
and
add
dec
mov
add
andb
pop
jle
add
ja,pt
sbb
js,pn
pop
shrl
add
sub
repnz
nop
nop
jae
lods
jle
add
add
popa
add
aaa
pop
push
mov
xchg
ret
add
dec
add
add
add
push
mov
xchg
ret
adc
sbb
pop
jmp
add
add
mov
xchg
ret
add
add
imul
mov
clc
repnz
nop
nop
jae
inc
std
jmp
add
inc
stos
jns
roll
repnz
nop
nop
jae
add
add
add
cld
nop
nop
jae
call
add
call
add
stos
pop
push
push
mov
xchg
ret
add
add
add
cmpsl
adc
dec
mov
clc
repnz
nop
nop
jae
add
cmpsl
std
add
cmp
inc
shl
clc
repnz
nop
nop
jae
add
add
stos
cmpsl
cs
add
lock
push
mov
leave
nop
jmp
fadds
add
add
mov
mov
leave
nop
jmp
js
add
add
push
mov
xchg
ret
add
or
add
or
pop
clc
repnz
nop
nop
jae
or
dec
add
push
sbb
insl
push
clc
repnz
nop
nop
jae
add
and
gs
add
stos
cs
mov
cld
nop
nop
jae
add
add
push
rcll
add
push
xor
repnz
nop
nop
jae
add
cmp
cltd
xlat
lods
enter
mov
cld
nop
nop
jae
mov
inc
imul
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
dec
add
add
add
repnz
nop
nop
jae
push
push
dec
sti
pushf
add
mov
add
repnz
nop
nop
jae
add
mov
mov
add
ja
and
cld
nop
nop
jae
add
ss
pop
scas
add
add
jns
clc
repnz
nop
nop
jae
pop
add
add
inc
stos
adc
clc
repnz
nop
nop
jae
add
add
ss
std
cmpsl
test
nop
nop
jae
add
add
push
add
adc
add
clc
repnz
nop
nop
jae
adc
add
adc
push
push
mov
xchg
ret
call
ja
pop
cwtl
add
add
xor
clc
repnz
nop
nop
jae
add
cwtl
dec
add
negl
mov
clc
repnz
nop
nop
jae
ds
push
and
add
add
add
mov
xor
clc
repnz
nop
nop
jae
add
add
add
cs
push
mov
xchg
ret
add
dec
or
add
push
mov
xchg
ret
push
add
add
popa
lods
sti
js
cmpsl
add
repnz
nop
nop
jae
jp
add
cmp
mov
lahf
push
clc
repnz
nop
nop
jae
add
ja
lods
enter
scas
cltd
push
jl
add
clc
repnz
nop
nop
jae
add
add
shrl
push
clc
repnz
nop
nop
jae
js
add
dec
and
dec
push
fwait
jne
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
sbb
sbb
sbb
push
add
add
arpl
repnz
nop
nop
jae
add
mov
test
add
cs
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
add
add
test
mov
repnz
nop
nop
jae
add
mov
nop
push
mov
leave
nop
jmp
notl
jmp
add
popf
add
clc
repnz
nop
nop
jae
dec
add
sbb
adc
repnz
nop
nop
jae
ds
inc
mov
call
clc
repnz
nop
nop
jae
test
ja
add
imul
add
add
repnz
nop
nop
jae
mov
add
add
xchg
sub
clc
repnz
nop
nop
jae
popf
scas
add
dec
add
add
xor
clc
repnz
nop
nop
jae
xlat
add
add
add
adc
clc
repnz
nop
nop
jae
add
mov
add
in
add
fiaddl
or
cwtl
add
add
repnz
nop
nop
jae
popf
add
cwtl
sti
jmp
jmp
iret
cmpw
clc
repnz
nop
nop
jae
cmp
jp
inc
add
push
aam
jmp
add
mov
add
add
push
add
sti
and
and
push
clc
repnz
nop
nop
jae
lods
add
dec
cltd
push
mov
mov
xchg
ret
cmpsl
lods
inc
add
add
fdivrs
lods
imul
push
mov
xchg
ret
jle
testb
mov
add
mov
clc
repnz
nop
nop
jae
add
push
add
sti
add
sti
adc
jb,pt
nop
push
mov
leave
nop
jmp
add
in
testl
movsl
fwait
push
mov
xchg
ret
mov
add
pop
add
push
inc
pop
in
dec
add
push
mov
xchg
ret
add
add
add
stos
add
cld
fdivl
clc
repnz
nop
nop
jae
push
and
add
pop
push
add
jle
mov
cmp
nop
push
mov
leave
nop
jmp
add
push
add
pop
pop
ss
std
shrl
nop
push
mov
leave
nop
jmp
add
add
pop
add
push
clc
repnz
nop
nop
jae
pop
xlat
add
dec
inc
mov
js
push
push
mov
xchg
ret
add
add
add
dec
add
cmp
or
mov
xchg
ret
add
dec
dec
jmp
dec
nop
push
mov
leave
nop
jmp
and
das
push
inc
add
aad
push
mov
xchg
ret
add
add
add
add
sbb
mov
lds
test
icebp
clc
repnz
nop
nop
jae
pop
add
add
fcomps
clc
repnz
nop
nop
jae
add
add
call
add
jo
add
nop
push
mov
leave
nop
jmp
mov
add
in
scas
add
nop
push
mov
leave
nop
jmp
add
adc
add
call
add
repnz
nop
nop
jae
pop
add
add
js
add
add
sar
repnz
nop
nop
jae
pushf
in
add
add
add
ja
dec
add
xorps
xchg
ret
add
add
das
sti
stos
cmp
nop
nop
jae
ss
in
add
add
imul
push
mov
leave
nop
jmp
push
and
mov
add
pop
fld1
push
mov
xchg
ret
push
jle
dec
sti
popf
dec
add
js
mov
push
mov
xchg
ret
cltd
add
add
sbb
idivl
fisttpll
nop
nop
jae
add
add
add
lods
add
gs
div
clc
repnz
nop
nop
jae
ss
push
add
xlat
adc
ljmp
clc
repnz
nop
nop
jae
fdivr
add
push
cmp
aad
inc
add
add
ror
add
sbb
add
rolb
nop
nop
jae
stos
add
mov
add
add
nop
push
mov
leave
nop
jmp
jp
add
das
push
add
jle
add
push
mov
xchg
ret
adc
add
cmp
nop
push
mov
leave
nop
jmp
add
jle
add
ja
icebp
push
nop
push
mov
leave
nop
jmp
add
push
cmp
add
add
mov
xchg
ret
push
add
scas
jle
add
add
add
add
pop
call
nop
jmp
dec
dec
mov
popa
inc
add
fwait
push
mov
xchg
ret
lods
add
pushf
add
pop
pop
add
cmp
repnz
nop
nop
jae
jp
add
push
add
mov
add
mov
repnz
nop
nop
jae
and
add
call
test
or
nop
jmp
add
push
std
inc
stc
add
add
add
nop
jmp
stos
and
add
mov
sub
repnz
nop
nop
jae
add
ds
call
imul
adcl
das
add
imull
or
xor
clc
repnz
nop
nop
jae
push
add
fsubs
push
nop
push
mov
leave
nop
jmp
and
test
stc
jle
xlat
push
cmp
nop
nop
jae
inc
cwtl
and
or
sbb
gs
push
js
add
nop
jmp
inc
jle,pt
das
pushf
dec
aam
mov
clc
repnz
nop
nop
jae
cs
dec
dec
add
add
add
jge
fmull
add
stc
add
stc
cltd
add
add
pushf
in
add
enter
xor
outsb
inc
add
popa
add
add
enter
push
add
inc
pop
clc
repnz
nop
nop
jae
add
add
add
popf
shrl
add
add
mov
cli
clc
repnz
nop
nop
jae
popf
add
add
adc
cld
nop
nop
jae
add
in
add
add
test
out
clc
repnz
nop
nop
jae
push
add
add
push
add
add
subl
jae
add
add
testl
clc
repnz
nop
nop
jae
add
enter
dec
imulb
add
mov
clc
repnz
nop
nop
jae
add
jle
sub
lods
add
clc
repnz
nop
nop
jae
add
add
add
cld
nop
nop
jae
add
add
cwtl
add
dec
add
ss
jnp
and
clc
repnz
nop
nop
jae
mov
and
push
push
mov
xchg
ret
dec
add
add
add
lods
add
push
push
mov
xchg
ret
mull
das
lods
jmp
inc
push
add
test
add
ss
clc
repnz
nop
nop
jae
add
sbb
sti
add
push
mov
xchg
ret
pop
add
pop
add
add
mov
push
mov
xchg
ret
add
cmp
add
xlat
add
xor
mov
or
repnz
nop
nop
jae
push
fcoms
add
jmp
add
sub
mov
add
clc
repnz
nop
nop
jae
dec
add
add
inc
pop
mov
lods
mov
nop
push
mov
leave
nop
jmp
lods
push
push
add
cmpsl
add
jg
clc
repnz
nop
nop
jae
sbb
push
mov
add
mov
clc
repnz
nop
nop
jae
add
inc
add
add
jmp
push
add
std
sbb
add
add
adc
scas
mov
insb
je
repnz
nop
nop
jae
mov
add
cltd
call
test
in
clc
repnz
nop
nop
jae
cmpsl
cwtl
add
pushf
inc
add
imul
clc
repnz
nop
nop
jae
add
ds
adc
test
nop
push
mov
leave
nop
jmp
imul
mov
call
call
nop
jmp
dec
cwtl
xlat
add
add
add
add
repnz
nop
nop
jae
jle
add
and
add
loop
add
repnz
nop
nop
jae
add
add
jle
inc
inc
scas
add
clc
repnz
nop
nop
jae
add
xlat
jp
add
cld
push
je
clc
repnz
nop
nop
jae
add
add
inc
add
std
mov
clc
repnz
nop
nop
jae
add
add
add
jno
clc
push
mov
xchg
ret
ds
lods
add
push
jmp
clc
repnz
nop
nop
jae
add
add
dec
lods
inc
cmp
stos
ja
fistpl
clc
repnz
nop
nop
jae
add
add
add
pop
add
mov
leave
nop
push
mov
leave
nop
jmp
std
jle
add
cmp
add
ja
ror
push
mov
xchg
ret
add
push
add
dec
rcl
inc
cmpsl
add
js
call
clc
repnz
nop
nop
jae
jle
inc
add
push
mov
repnz
nop
nop
jae
push
add
xlat
add
inc
mov
clc
repnz
nop
nop
jae
test
add
cmpsl
inc
add
inc
sbb
repnz
nop
nop
jae
dec
popa
add
dec
sbb
fmuls
xor
clc
repnz
nop
nop
jae
ss
add
or
jno
xchg
add
clc
repnz
nop
nop
jae
add
mov
push
mov
leave
nop
jmp
add
dec
add
ds
push
push
mov
xchg
ret
add
adc
add
ljmp
mov
icebp
inc
dec
es
repnz
nop
nop
jae
add
add
std
push
add
clc
repnz
nop
nop
jae
gs
add
add
stos
add
inc
clc
repnz
nop
nop
jae
add
pushf
pop
sti
add
add
popa
stos
cmpsl
and
push
mov
leave
nop
jmp
add
add
add
add
or
sub
nop
push
mov
leave
nop
jmp
call
push
add
rclb
nop
jmp
add
add
add
jle
and
and
xor
add
add
sti
add
add
add
insl
mov
clc
repnz
nop
nop
jae
jle
jle
add
push
add
add
add
clc
repnz
nop
nop
jae
add
add
das
popf
mov
xor
and
lods
add
push
add
stos
add
in
inc
rcrl
sahf
mov
mov
jg
nop
push
mov
leave
nop
jmp
stos
mov
stc
mov
in
push
xorb
pop
stc
clc
repnz
nop
nop
jae
lods
add
stos
add
add
add
add
repnz
nop
nop
jae
add
popa
lods
inc
add
leave
and
clc
repnz
nop
nop
jae
add
add
or
mov
clc
repnz
nop
nop
jae
add
add
sbb
sbb
pop
push
mov
xchg
ret
pop
add
inc
in
test
add
add
das
scas
mov
clc
repnz
nop
nop
jae
das
mov
inc
push
mov
clc
repnz
nop
nop
jae
mov
push
add
adc
repnz
nop
nop
jae
ja
add
enter
add
mov
adc
clc
repnz
nop
nop
jae
pushf
sti
mov
push
lods
loop
mov
clc
repnz
nop
nop
jae
mov
imul
adc
add
gs
push
and
add
adc
add
fldl
pop
cmp
mov
xchg
ret
ja
mov
mov
mov
mov
mov
xchg
ret
sbb
add
add
imul
add
push
mov
xchg
ret
add
add
add
pop
mov
adc
add
repnz
nop
nop
jae
das
add
add
add
incl
nop
nop
jae
push
add
fcoms
add
mov
sbb
cmp
xchg
and
jle
lods
adc
inc
push
inc
ja
jle
mov
sti
pop
clc
repnz
nop
nop
jae
add
sbb
popa
inc
add
cs
das
add
clc
repnz
nop
nop
jae
or
dec
add
mov
lahf
add
nop
push
mov
leave
nop
jmp
add
add
dec
add
add
mov
and
pop
sub
push
mov
leave
nop
jmp
dec
add
call
cmp
nop
push
mov
leave
nop
jmp
fadds
and
add
stc
movzwl
clc
repnz
nop
nop
jae
add
push
or
push
mov
xor
call
inc
add
stos
add
add
add
add
mov
inc
inc
add
cwtl
add
mov
add
add
add
dec
add
add
add
jle
popf
add
mov
clc
repnz
nop
nop
jae
push
cltd
add
adc
or
sbb
nop
push
mov
leave
nop
jmp
add
add
add
mov
movb
repnz
nop
nop
jae
add
add
add
add
pop
aas
add
nop
push
mov
leave
nop
jmp
cs
add
sbb
lods
call
lods
nop
push
mov
leave
nop
jmp
add
and
sbb
notl
inc
or
repnz
nop
nop
jae
scas
xlat
stc
add
testl
gs
push
mov
xchg
ret
roll
add
pop
add
add
add
pop
clc
repnz
nop
nop
jae
push
dec
dec
ja
jmp
ja
mov
add
add
leave
nop
jmp
cs
push
call
clc
repnz
nop
nop
jae
dec
imul
add
xchg
pop
std
mov
clc
repnz
nop
nop
jae
lods
push
cmp
lods
roll
jp
sbb
pop
clc
repnz
nop
nop
jae
inc
add
add
and
mov
clc
repnz
nop
nop
jae
jp
add
add
cmc
cs
clc
repnz
nop
nop
jae
add
dec
mov
add
cmc
push
nop
push
mov
leave
nop
jmp
cmpsl
pop
adc
add
xlat
dec
ffree
call
in
leave
nop
jmp
inc
imulb
add
sbb
movzwl
nop
push
mov
leave
nop
jmp
add
add
sbb
add
fadds
push
mov
xchg
ret
add
sbb
add
add
pop
ljmp
adc
repnz
nop
nop
jae
popa
add
idivb
jle
test
nop
nop
jae
push
inc
popa
ja
sbb
mov
mov
clc
repnz
nop
nop
jae
mov
inc
ss
stos
std
movswl
nop
push
mov
leave
nop
jmp
add
ds
add
add
fld1
push
mov
xchg
ret
scas
in
add
add
add
add
push
mov
xchg
ret
pop
add
dec
add
add
out
inc
add
mov
nop
push
mov
leave
nop
jmp
add
add
scas
add
cld
nop
nop
jae
neg
add
popa
add
mov
pop
enter
ret
nop
push
mov
leave
nop
jmp
mov
jle
scas
gs
push
add
mov
jne
push
mov
xchg
ret
add
add
add
add
add
push
dec
inc
add
ja
shrb
repnz
nop
nop
jae
das
add
idivl
add
jp
movsl
pop
push
mov
xchg
ret
cmpsl
push
add
stc
enter
js
add
cld
nop
nop
jae
add
add
popa
adc
add
fld1
nop
push
mov
leave
nop
jmp
add
add
lods
lods
add
add
outsb
and
repnz
nop
nop
jae
add
add
fstl
repnz
nop
nop
jae
add
add
and
xor
jl
clc
repnz
nop
nop
jae
add
add
add
les
fld1
push
mov
xchg
ret
add
stc
add
fadds
add
and
mov
xchg
ret
add
add
fsubrs
leave
clc
repnz
nop
nop
jae
add
sbb
dec
ss
cmpsl
add
cmp
add
clc
repnz
nop
nop
jae
std
add
add
mov
clc
repnz
nop
nop
jae
roll
enter
add
int
ljmp
add
add
push
and
and
add
or
add
repnz
nop
nop
jae
add
enter
add
call
push
mov
leave
nop
jmp
add
cmpsl
or
dec
add
in
jae
clc
repnz
nop
nop
jae
add
negl
pusha
clc
repnz
nop
nop
jae
and
add
add
add
imul
nop
push
mov
leave
nop
jmp
add
add
jmp
cmp
add
cs
repnz
nop
nop
jae
add
js
adc
xchg
and
add
push
pushf
add
fmuls
cltd
add
popa
mov
nop
push
mov
leave
nop
jmp
push
test
dec
push
add
add
es
inc
in
push
mov
xchg
ret
add
ja
lods
inc
sbb
add
in
jne
clc
repnz
nop
nop
jae
add
add
push
mov
mov
xchg
ret
add
xlat
push
add
mov
jl
mov
add
repnz
nop
nop
jae
inc
add
fadds
pop
add
clc
push
mov
xchg
ret
mov
add
fadds
add
divl
push
mov
leave
nop
jmp
add
add
add
jle
mulb
push
mov
xchg
ret
add
std
dec
inc
das
add
add
push
mov
xchg
ret
stc
add
inc
add
push
xlat
add
rorl
cld
nop
nop
jae
cmpsl
popf
ja
add
push
add
add
fld1
clc
repnz
nop
nop
jae
add
add
add
pop
js
and
fistpl
push
mov
xchg
ret
add
das
dec
add
mov
add
dec
jae
dec
sub
repnz
nop
nop
jae
dec
popa
add
test
add
or
add
and
repnz
nop
nop
jae
add
mov
inc
add
in
add
nop
push
mov
leave
nop
jmp
add
add
add
push
push
mov
xchg
ret
add
add
add
xor
clc
repnz
nop
nop
jae
scas
jle
das
add
add
jle
or
pop
push
cmc
xor
add
cmpsb
mov
push
addb
add
fsts
mov
xchg
ret
inc
push
add
add
pop
lods
dec
sti
add
popf
fwait
clc
repnz
nop
nop
jae
add
add
std
lods
add
mov
sar
stos
push
mov
xchg
ret
not
sarl
sbb
add
and
repnz
nop
nop
jae
ja
add
push
ja
dec
add
imulb
repnz
nop
nop
jae
popf
stc
push
pop
add
notb
xor
add
mov
loopne
clc
repnz
nop
nop
jae
mov
add
fdivrs
jl
xor
repnz
nop
nop
jae
add
add
js
add
test
jae
repnz
nop
nop
jae
in
add
popf
add
add
pop
clc
repnz
nop
nop
jae
jle
add
add
lods
push
jne
or
nop
jmp
popa
in
negb
jmp
add
inc
iret
fistpl
nop
push
mov
leave
nop
jmp
lods
pop
add
add
mov
clc
repnz
nop
nop
jae
stos
add
popa
add
push
mov
xchg
ret
add
add
cltd
add
repnz
nop
nop
jae
mov
adc
sub
jae
repnz
nop
nop
jae
add
imul
subl
sbb
add
ss
imul
push
mov
sbb
and
add
add
add
inc
mov
nop
push
mov
leave
nop
jmp
add
add
popf
add
jecxz
push
mov
xchg
ret
add
add
add
cmp
pop
mov
clc
repnz
nop
nop
jae
add
enter
add
add
add
push
mov
leave
nop
jmp
push
test
and
or
mov
popf
fwait
push
mov
xchg
ret
add
inc
enter
mov
sbb
nop
jae
gs
jp
cmpsl
push
gs
cltd
jne
clc
repnz
nop
nop
jae
add
add
add
pop
push
mov
pop
push
mov
xchg
ret
das
call
push
add
call
mov
mov
xchg
ret
add
and
add
inc
add
mov
test
call
nop
jmp
jle
add
add
repnz
nop
nop
jae
jmp
push
cmp
add
add
fwait
add
clc
repnz
nop
nop
jae
lods
ss
add
push
test
mov
out
mov
xchg
ret
add
add
mov
add
insb
add
rclb
pop
inc
add
add
pop
add
cltd
jp
add
nop
push
mov
leave
nop
jmp
stc
inc
adc
dec
add
repnz
nop
nop
jae
popa
dec
imul
add
clc
repnz
nop
nop
jae
add
add
add
inc
dec
clc
repnz
nop
nop
jae
add
add
mov
sar
cld
nop
nop
jae
add
add
in
mov
mov
sar
clc
repnz
nop
nop
jae
and
test
jp
add
in
leave
nop
jmp
add
add
ja
fadds
mov
sar
cld
nop
nop
jae
js
add
add
stos
add
inc
add
sar
cld
nop
nop
jae
inc
ss
das
add
gs
add
mov
out
call
nop
jmp
add
add
add
stos
push
lds
repnz
nop
nop
jae
add
and
add
adc
add
clc
repnz
nop
nop
jae
add
push
add
push
inc
roll
sbb
add
cmp
sub
push
mov
xchg
ret
inc
sbb
add
jl
mov
push
mov
xchg
ret
add
push
gs
test
jp
add
cs
add
ja
push
jmp
add
scas
icebp
add
clc
repnz
nop
nop
jae
imul
add
add
mov
leave
nop
jmp
jp
jmp
add
add
add
inc
call
push
mov
xchg
ret
push
add
add
pop
dec
add
inc
mov
out
repnz
nop
nop
jae
add
add
inc
stos
add
cmpsl
popf
xchg
je
clc
repnz
nop
nop
jae
add
add
inc
test
mov
leave
nop
jmp
enter
mov
dec
add
and
repnz
nop
nop
jae
add
cltd
add
jp
cwtl
add
fwait
nop
push
mov
leave
nop
jmp
or
dec
add
fadds
add
shr
clc
repnz
nop
nop
jae
pushf
enter
test
lods
add
push
mov
xchg
ret
add
jp
add
add
pushf
add
ret
call
clc
repnz
nop
nop
jae
push
add
pushf
or
scas
fisubl
clc
repnz
nop
nop
jae
pop
add
sbb
and
mov
repnz
nop
nop
jae
and
imul
add
push
add
jg
add
scas
add
jle
jle
add
add
popf
mov
cld
nop
nop
jae
add
scas
add
add
xchg
mov
xchg
ret
add
adc
dec
sbb
les
push
mov
xchg
ret
stos
add
cwtl
jmp
add
call
nop
push
mov
leave
nop
jmp
add
inc
add
ja
xor
push
mov
leave
nop
jmp
add
and
js
and
dec
add
add
mov
aas
add
imul
incl
add
lods
ds
add
nop
nop
jae
dec
add
call
jle
std
pushf
jle
lods
nop
push
mov
leave
nop
jmp
stos
add
fadds
add
add
mov
nop
push
mov
leave
nop
jmp
mov
push
add
add
test
fcos
clc
repnz
nop
nop
jae
stos
mulb
jle
js
push
clc
repnz
nop
nop
jae
add
scas
add
add
mov
sbb
inc
iret
cmp
mov
add
das
dec
lods
sti
add
sbb
add
mov
add
add
repnz
nop
nop
jae
add
jmp
add
inc
add
and
mov
add
nop
jmp
add
add
add
add
stos
add
add
clc
repnz
nop
nop
jae
add
adc
add
add
das
pop
clc
repnz
nop
nop
jae
add
add
add
fsubs
push
mov
leave
nop
jmp
inc
push
cmp
add
add
dec
add
add
clc
repnz
nop
nop
jae
xlat
sbb
push
add
add
icebp
nop
push
mov
leave
nop
jmp
cmpsl
add
js
enter
jmp
mov
nop
nop
jae
sar
add
dec
add
adc
inc
dec
inc
clc
repnz
nop
nop
jae
add
dec
add
clc
repnz
nop
nop
jae
sarl
enter
mov
dec
cmp
nop
push
mov
leave
nop
jmp
adc
add
add
add
in
fisttps
pop
js
add
roll
dec
add
stos
add
pop
cltd
adc
out
xabort
cld
nop
nop
jae
sbb
enter
and
add
es
pop
mov
nop
push
mov
leave
nop
jmp
add
add
add
cwtl
mov
nop
nop
jae
add
add
inc
push
add
add
xchg
mov
push
mov
xchg
ret
enter
imul
pusha
clc
repnz
nop
nop
jae
jmp
testl
add
add
call
nop
jmp
mov
shrl
nop
push
mov
leave
nop
jmp
cs
dec
imul
add
fld1
clc
repnz
nop
nop
jae
ds
add
add
jno
push
mov
xchg
ret
add
testb
add
in
inc
dec
popf
jl
mov
clc
repnz
nop
nop
jae
add
inc
sbb
add
pop
add
imul
clc
repnz
nop
nop
jae
dec
jp
cltd
add
adc
mov
xchg
ret
add
add
add
add
push
xchg
sbb
test
clc
repnz
nop
nop
jae
add
add
push
mov
and
in
leave
nop
jmp
add
testb
stc
pushf
adc
decb
add
nop
push
mov
leave
nop
jmp
cltd
imul
add
adc
nop
nop
jae
add
scas
add
add
pop
fistpl
push
mov
xchg
ret
xlat
jp
add
add
xchg
lcall
nop
nop
jae
pop
add
inc
mov
testl
add
jns
inc
add
adc
or
add
push
mov
pop
aaa
add
add
adc
add
add
clc
repnz
nop
nop
jae
cltd
add
sbb
add
push
inc
mov
push
and
mov
mov
xchg
ret
pushf
scas
ds
cmp
add
stc
std
jle
push
nop
push
mov
leave
nop
jmp
sti
mov
add
add
add
mov
clc
repnz
nop
nop
jae
enter
add
enter
add
in
nop
push
mov
leave
nop
jmp
push
mov
and
std
mov
add
aam
add
push
mov
xchg
ret
pop
cmpsl
add
add
ja
add
add
ds
popa
add
clc
repnz
nop
nop
jae
test
pop
mov
cs
push
clc
repnz
nop
nop
jae
add
add
pop
add
add
add
add
push
clc
repnz
nop
nop
jae
stc
add
push
push
lods
add
add
mov
pause
push
mov
leave
nop
jmp
sbb
cmpsl
add
add
in
and
repnz
nop
nop
jae
add
add
add
push
add
loop
push
mov
xchg
ret
add
enter
add
das
mov
clc
repnz
nop
nop
jae
add
add
add
add
mov
push
mov
xchg
ret
add
add
imul
add
mov
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
pop
scas
stos
ja
popa
push
add
add
add
nop
jmp
add
jmp
js
dec
inc
add
add
clc
repnz
nop
nop
jae
popa
add
ja
cmp
add
push
clc
repnz
nop
nop
jae
add
add
add
negb
jmp
clc
repnz
nop
nop
jae
add
pushf
add
cmp
nop
push
mov
leave
nop
jmp
inc
dec
jp
add
inc
add
jb
clc
repnz
nop
nop
jae
call
add
inc
push
mov
xchg
ret
add
add
add
push
add
pop
call
clc
repnz
nop
nop
jae
dec
jp
stos
jle
inc
rcrb
mov
clc
repnz
nop
nop
jae
add
jle
mov
inc
add
inc
mov
clc
repnz
nop
nop
jae
stos
sbb
add
push
add
sti
fdivr
push
mov
loopne
add
clc
repnz
nop
nop
jae
add
enter
scas
and
std
shlb
add
pop
push
mov
xchg
ret
add
add
cwtl
add
add
add
sub
sub
repnz
nop
nop
jae
add
call
add
ds
dec
add
and
nop
push
mov
leave
nop
jmp
add
add
add
add
jle
scas
add
clc
repnz
nop
nop
jae
or
stc
mov
or
mov
clc
repnz
nop
nop
jae
inc
test
add
add
add
pop
orb
leave
sub
nop
jmp
sbb
dec
stos
push
cmp
pop
push
mov
xchg
ret
shr
add
popf
add
or
imul
jae
jle
add
push
push
add
mov
nop
push
mov
leave
nop
jmp
fadds
pop
add
add
or
mov
clc
repnz
nop
nop
jae
popf
jle
add
add
add
call
xor
clc
repnz
nop
nop
jae
xlat
gs
add
shll
add
add
push
mov
xchg
ret
js
add
add
add
pushf
add
clc
repnz
nop
nop
jae
add
pop
adc
push
jp
cmpsl
call
clc
repnz
nop
nop
jae
inc
test
stc
add
ds
add
nop
push
mov
leave
nop
jmp
add
xlat
mov
lods
pop
inc
add
gs
add
call
ds
mov
inc
add
push
mov
xchg
ret
pop
add
push
add
dec
add
ja
cmp
ss
call
clc
repnz
nop
nop
jae
push
add
cmpsl
cmp
cmp
call
nop
jae
add
call
idiv
add
mov
pop
clc
repnz
nop
nop
jae
inc
add
add
add
cli
cs
test
addr16
push
mov
xchg
ret
cwtl
push
cmpsl
add
pop
add
add
movsl
mov
push
mov
xchg
ret
in
fdivs
dec
cmp
inc
xlat
jle
fistps
mov
xchg
ret
add
and
add
cmp
or
push
mov
leave
nop
jmp
push
push
stos
dec
add
mov
mov
sahf
add
add
add
add
add
popa
cmp
or
sub
clc
repnz
nop
nop
jae
add
push
test
js
cmp
dec
nop
push
mov
leave
nop
jmp
push
popa
sbb
push
js
sar
xlat
cmpsl
and
mov
add
push
mov
xchg
ret
mov
inc
xlat
cmp
clc
repnz
nop
nop
jae
add
push
add
add
call
add
clc
repnz
nop
nop
jae
scas
add
cltd
add
cmp
add
mov
push
mov
xchg
ret
scas
testl
popf
imul
mov
push
mov
xchg
ret
add
and
ds
sti
je
clc
repnz
nop
nop
jae
add
adc
rorb
mov
repnz
nop
nop
jae
push
inc
roll
dec
sbb
add
add
aam
test
nop
push
mov
leave
nop
jmp
add
imul
sbb
push
mov
xchg
ret
add
add
or
mov
add
clc
repnz
nop
nop
jae
dec
mov
add
ss
xor
jae
stos
add
in
cltd
test
add
popa
add
pusha
add
repnz
nop
nop
jae
stc
add
jmp
add
add
push
add
clc
repnz
nop
nop
jae
cmp
adc
repnz
nop
nop
jae
and
lods
lods
cltd
in
cmpsl
add
mov
clc
repnz
nop
nop
jae
cltd
add
add
add
cmp
mov
or
repnz
nop
nop
jae
add
jle
add
push
clc
repnz
nop
nop
jae
add
roll
inc
das
call
nop
push
mov
leave
nop
jmp
push
add
add
enter
add
add
mov
add
std
clc
repnz
nop
nop
jae
add
fsubs
xor
mov
clc
repnz
nop
nop
jae
push
rcll
gs
inc
and
mov
xchg
ret
add
roll
add
xlat
enter
add
add
jmp
repnz
nop
nop
jae
add
add
add
negb
xorb
les
repnz
nop
nop
jae
pop
in
add
inc
stos
add
nop
push
mov
leave
nop
jmp
pop
dec
dec
add
testl
nop
nop
jae
pop
lods
add
add
add
mov
add
repnz
nop
nop
jae
sti
add
xlat
add
add
add
mov
push
clc
repnz
nop
nop
jae
cmp
test
lods
add
ja
insl
xchg
inc
add
lods
ss
add
enter
add
add
repnz
nop
nop
jae
dec
and
add
add
nop
nop
jae
add
add
mov
add
cld
clc
repnz
nop
nop
jae
test
mov
cmp
cld
nop
nop
jae
add
fadds
add
lods
pop
sbb
in
push
clc
repnz
nop
nop
jae
add
dec
cmp
dec
add
add
inc
imul
nop
push
mov
leave
nop
jmp
add
add
inc
popa
xchg
fistpl
clc
repnz
nop
nop
jae
push
das
stos
popf
add
push
jle
sub
repnz
nop
nop
jae
add
add
call
add
add
push
mov
xchg
ret
add
add
add
sbb
inc
push
mov
xchg
ret
and
add
cltd
test
lret
dec
imul
nop
jae
push
jmp
push
dec
idiv
pop
mov
clc
repnz
nop
nop
jae
jp
negb
pushf
xlat
push
push
jb
jg
push
clc
repnz
nop
nop
jae
add
das
add
add
mov
push
mov
leave
nop
jmp
push
mov
fadds
add
or
loopne
repnz
nop
nop
jae
lods
jle
add
add
add
cld
push
mov
xchg
ret
add
add
stc
add
add
and
xchg
add
repnz
nop
nop
jae
push
add
add
scas
mov
mov
xchg
ret
add
mov
fadds
add
add
test
pop
xchg
xchg
ret
shr
add
add
add
mov
dec
add
sbb
repnz
nop
nop
jae
cltd
or
add
add
repnz
nop
nop
jae
add
adc
jle
add
jg
add
insb
nop
push
mov
leave
nop
jmp
add
stc
add
scas
mov
clc
repnz
nop
nop
jae
dec
add
js
xchg
push
mov
add
add
add
add
outsb
add
add
shll
in
add
mov
mov
xchg
scas
push
dec
push
test
mov
adc
dec
add
adc
pushf
scas
xor
mov
add
mov
add
insl
add
mov
or
xchg
add
xor
jge
adc
mov
push
ss
cmp
push
movsl
pop
insl
push
aad
dec
insb
add
int
push
xor
in
insl
add
mov
cmpsb
sub
loopne
jbe
mov
out
sahf
jnp
jo
add
jle
arpl
add
mov
ror
test
les
mov
into
mov
in
and
lcall
mov
or
xor
fcoms
and
mov
movsb
mov
pop
sarl
fsubs
add
xlat
lods
into
jae
sub
add
shrl
mov
and
fdivrl
out
mov
mov
push
push
out
popa
imul
mov
cmpsb
and
mov
mov
xor
les
add
xchg
into
sub
xor
in
jno
dec
lods
cld
dec
enter
daa
cmp
mov
xchg
adc
add
int
xor
stos
addr16
ret
mov
mov
jne
mov
cld
fcoms
ljmp
mov
cmp
xlat
add
mov
add
das
inc
inc
add
mov
mov
mov
sbbl
sarb
mov
add
add
add
push
inc
add
dec
push
pop
lret
fisubrs
mov
xor
add
push
sbb
mov
lods
scas
adc
insl
adc
add
imul
pop
shll
or
in
and
mov
add
aas
jge
stc
lods
adc
and
mov
add
fdivs
and
mov
mov
aas
sub
mov
and
mov
add
cs
add
sbb
mov
mov
fidivrl
sub
mov
inc
out
out
lcall
add
mov
dec
add
mov
sbb
cmp
divb
sbb
push
shll
stc
in
lcall
setbe
addb
push
cmp
in
lock
popl
and
mov
shll
push
push
cs
pushf
insl
shr
insb
add
dec
mov
enter
push
sbb
dec
add
or
imul
add
inc
add
ret
mov
pusha
add
push
mov
xor
je
jle
add
fnstenv
xchg
jb
lret
sbb
add
add
xchg
adc
cli
mov
mov
inc
add
test
xor
mov
daa
andl
lock
jno
jge
add
fmul
mov
mov
loope
add
lock
jns
lea
add
repnz
das
xchg
xchg
leave
in
cmpsl
add
and
out
sbb
xor
dec
mov
loopne
add
nop
pop
loope
scas
pop
clc
into
out
pop
inc
lret
inc
add
mov
xor
sar
scas
inc
lds
sbb
push
out
jnp
mov
mov
inc
mov
fwait
lcall
mov
mov
pop
pusha
add
in
push
stc
cmpsl
out
xchg
jl
cmc
adc
aas
cltd
ja
mov
jge
loopew
mov
addr16
inc
add
add
adc
cli
xchg
mov
sub
mov
push
inc
add
jae
and
mov
cmp
adc
sbb
pop
sahf
adc
jnp
or
cmp
or
mov
sub
mov
ds
stos
mov
add
mov
jnp
add
mov
pop
jecxz
decl
add
mov
add
mov
stos
scas
aad
push
or
mov
sub
mov
pop
loope
jge
ret
mov
or
pop
iret
popa
das
sbb
lcall
dec
pop
sbb
mov
push
add
sub
imul
hlt
fldl
adc
xchg
cmp
pop
aad
jb
adc
push
cmpsl
push
mov
clc
fbstp
mov
adc
lahf
mov
push
fcmovne
xchg
mov
cli
fwait
or
cmp
loope
xchg
ljmp
mov
pop
inc
add
dec
add
iret
test
jge
pop
push
mov
stos
pop
jecxz
inc
and
clc
inc
inc
add
mov
inc
and
std
push
push
rorl
into
ljmp
dec
xchg
cmpsl
ljmp
minps
repnz
bound
cmp
or
mov
add
add
rol
mov
fmuls
cs
jmp
jmp
out
stos
xchg
add
cli
lcall
mov
lahf
aas
shlb
pop
pop
rorb
add
add
sbb
ret
or
es
mov
cld
jns
mov
inc
mov
sub
add
rcl
aaa
mov
jne
xor
jl,pt
mov
cmpsl
pop
into
push
call
imul
cmp
aas
push
jg
stc
les
and
in
out
lret
test
jo
mov
jns
pushf
inc
fwait
stos
faddl
insl
popa
xchg
je
xor
sbb
shlb
fstl
cmp
mov
inc
add
shll
add
stos
push
xchg
xchg
mov
sub
dec
pop
leave
ds
scas
fstl
and
mov
inc
sub
mov
mov
xchg
test
dec
push
dec
roll
add
js
mov
test
js
outsl
dec
adc
mov
aad
push
out
ret
repnz
sub
mov
add
roll
add
mov
sub
test
add
add
es
xorl
pop
adc
inc
dec
jg
leave
sbb
loopne
dec
add
mov
mov
mov
and
mov
lds
add
add
bnd
xchg
mov
add
stos
lods
jl
into
pop
jl
or
loope
jbe
out
data16
or
and
stos
int
jo
pop
mov
dec
add
mov
add
pop
int3
push
out
add
jle
pop
jns
shrb
fcompl
xchg
add
mov
clc
mov
repz
add
fcmove
aaa
jo
repz
ret
add
stos
or
push
test
pop
sar
dec
add
add
push
imul
mov
push
mov
pop
call
jo
pop
xlat
and
mov
pop
js
insl
mov
hlt
xor
sti
inc
add
insb
add
testb
add
movsl
mov
mov
repnz
in
add
xchg
mov
adc
mov
ljmp
sbb
scas
cwtl
in
add
mov
pop
rdmsr
cmc
inc
cltd
rolb
add
cmc
movsl
cmp
mov
into
shlb
mov
or
mov
popa
add
mov
push
dec
add
movsb
pushl
cmp
jp
mov
pop
adc
sahf
mov
hlt
ds
inc
add
mov
pop
and
and
add
packuswb
adc
outsl
daa
inc
add
inc
lods
cli
pop
mov
das
outsl
xchg
mov
add
sub
push
aam
push
add
mov
add
addr16
mul
xchg
dec
and
lock
xlat
adc
loopne
push
outsb
dec
cmpsl
xchg
enter
add
or
push
movups
sarl
or
cmp
sub
mov
xor
sbb
je
jge
je
pop
dec
andb
push
out
test
rcrb
in
lds
int
out
sarb
push
pop
cmp
movb
xchg
mov
std
lods
sub
xor
test
shrb
ja
and
mov
aad
inc
add
lret
sbb
jnp
push
push
adc
adcl
xor
addr16
int3
sbbl
aam
out
subl
mov
dec
lock
mov
lahf
lcall
fistpll
dec
pop
loope
inc
xchg
iret
push
in
sub
divl
outsl
js
add
add
roll
stos
mov
mov
xor
bound
sbb
and
mov
add
lcall
or
fnsave
test
dec
add
mov
je
popa
loopne
cld
xchg
fisttpl
leave
fstpl
push
sbbl
idiv
mov
xchg
scas
or
mov
stos
test
jl
xor
jecxz
sbb
mov
repnz
dec
dec
jo
sbb
daa
inc
not
mov
orb
clc
sub
mov
sbb
bound
sub
pusha
add
repnz
add
add
adc
dec
int
test
and
in
lods
out
movsl
jns
mov
lahf
mov
cmpsb
cmp
test
mov
cmp
mov
mov
mov
into
pusha
add
jg,pt
push
push
mov
xlat
mov
call
mov
mov
add
sub
fwait
cmc
lds
adc
xor
jl
add
mov
dec
pop
fildll
inc
inc
vmwrite
add
shll
xor
mov
movb
dec
inc
mov
push
push
cmp
cmp
imul
cmp
cmp
xor
add
xlat
jb
cmp
fidivrs
jne
fcos
sbb
mov
lret
mul
sahf
fiadds
mov
add
mov
fsubs
ss
fstl
setae
cmpsl
pop
cmp
or
mov
sbb
add
pop
xchg
aas
sbb
mov
mov
inc
add
add
mov
sbb
pop
sub
cmpsb
jmp
mov
adc
push
dec
add
jns
pop
stc
dec
adc
add
mov
mov
test
mov
xchg
pop
adc
out
out
and
mov
mov
xor
mov
add
jb
test
dec
in
movl
add
test
lea
or
dec
movsb
mov
add
out
xchg
cmp
cmp
jl
loopne
and
pop
notl
pushf
pop
in
pop
into
mov
repz
jl
push
adc
orb
mov
in
xor
add
xchg
repz
aaa
sub
mov
mov
cwtl
cld
or
mov
lahf
lods
mov
mov
or
add
sbb
sub
mov
mov
idiv
aaa
clc
inc
sbb
sub
mov
add
shlb
stos
int
pop
push
pop
movsl
dec
jmp
icebp
insb
add
add
inc
add
mov
ss
add
or
mov
mov
fcomps
mov
test
mulb
sub
xor
test
lahf
pop
lods
ss
sbb
lcall
int
cmc
jmp
mov
repnz
add
add
add
dec
or
mov
dec
mov
in
lds
mov
add
mov
in
mov
pop
das
pop
mov
pop
hlt
lret
mov
sti
push
sbb
sub
mov
je
jno,pn
lret
dec
cmp
push
mov
fistl
mov
and
mov
es
add
mov
add
cwtl
add
mov
and
mov
and
ljmp
dec
push
adc
xor
cld
stc
cltd
repz
adc
pop
xchg
out
popa
inc
push
addl
jo
ret
sub
xchg
adc
mov
inc
push
jnp
and
mov
ret
mov
test
pop
mov
rolb
mov
aas
or
mov
add
nop
mov
roll
push
or
mov
imul
mov
cmp
stos
loope
pop
shll
jno
clc
sub
mov
add
xchg
inc
cmp
bnd
leave
inc
jne
lret
push
xchg
mov
fdivs
push
fcomip
mov
sti
cli
xor
pop
fmuls
add
lret
mov
ret
or
jbe,pn
push
lods
sub
dec
mov
jle
add
push
fcoml
dec
add
add
add
add
jo,pn
movsl
cld
iret
or
fsubrs
daa
mov
outsl
xchg
inc
add
jne
sbb
or
mov
movsl
movsb
xor
add
mov
push
bound
pusha
add
cwtl
lods
stc
hlt
rclb
repz
fimull
sbb
pop
adc
and
jo
add
xor
xchg
xor
push
fisubl
mov
stos
inc
dec
push
call
jbe
push
cmp
outsl
daa
pop
arpl
sbb
cli
outsl
mov
test
sti
ljmp
mov
jbe
xor
add
or
mov
mov
fbld
xchg
mov
add
adc
mov
mov
jmp
jp
jl
push
add
sbb
outsl
mov
pop
push
and
or
or
mov
mov
lods
test
lahf
lods
xor
dec
add
popa
xchg
das
out
push
or
mov
test
test
or
ljmp
mov
test
popa
inc
into
dec
and
mov
xor
mov
aas
imul
in
jbe
mov
mov
fnstenv
adc
hlt
stos
frstor
out
out
pushf
pop
jl
lods
lret
adc
loopne
int3
out
and
mov
paddq
data16
nop
pop
imul
mov
add
jecxz
adc
inc
adc
inc
add
xor
push
adc
cmp
popa
aam
add
cmpb
add
enter
lods
inc
add
add
out
daa
jo
pop
negb
loopne
jb
add
add
add
dec
lcall
rol
push
mov
ja
sbb
cld
mov
pop
pop
cwtl
push
cs
bswap
neg
and
mov
inc
in
imull
cmpsb
cmp
jmp
fmulp
pmulhw
add
outsb
jg
fstpl
inc
jns
cli
bound
test
jb
jle
add
ljmp
loop
add
aaa
cmp
push
and
mov
dec
shll
add
loopne
repnz
push
push
cmp
dec
add
stc
insl
je
add
dec
xchg
std
leave
icebp
mov
fdivr
aas
incl
adc
and
fistps
mov
fistl
repz
mov
pop
test
mov
sub
mov
gs
int
cmp
mov
add
ffreep
jbe
loop
pop
in
mov
and
mov
add
data16
add
xor
dec
ret
roll
aam
add
sub
mov
jg
xor
stos
jge
add
mov
add
mov
adc
dec
icebp
test
inc
sbbb
cs
repnz
pop
and
lret
mov
js
mov
cli
mov
add
add
adc
mov
cmp
in
lcall
test
add
jnp
add
add
mov
add
mov
or
mov
notl
dec
add
mov
push
push
in
call
popa
aaa
aam
pusha
add
mov
mov
out
rclb
pop
shrl
add
add
ss
add
mov
arpl
data16
cmp
push
pop
pop
adc
add
jle
es
jle
sub
mov
lret
jb
js
sbb
lret
push
gs
add
rorb
rcrb
std
xlat
cld
cmp
bnd
outsl
mov
sub
mov
mov
sub
cmc
fcoms
loope
cld
inc
add
inc
add
dec
pop
jg
cli
es
xor
adc
aas
sbb
aad
sbb
xor
add
cmp
mov
fwait
leave
add
push
mov
inc
push
inc
add
jecxz
roll
push
sbb
push
push
cmp
or
mov
cmc
jbe
sub
nop
jge
stc
cmpsb
in
aas
inc
data16
das
cmp
iret
adc
add
pop
lods
iret
push
inc
lahf
stc
lret
xor
adc
cwtl
lea
cmpsl
pop
inc
cmp
mov
bnd
push
inc
adc
je
pushf
popa
repz
fsubrl
jp
ss
mov
cmc
inc
add
cmpsb
push
sub
mov
mov
dec
popf
out
push
sti
cld
mov
idivl
fldenv
ret
dec
rolb
mov
and
mov
enter
out
inc
add
insb
add
btc
sbb
jb
loope
repz
dec
ss
xchg
lock
xchg
mov
jo
sbb
add
stos
or
add
fadds
jo
mov
push
adc
push
int
adc
jmp
loope
xchg
aas
adc
xchg
jl
sbb
int
jecxz
js
add
jmp
pop
xchg
push
sarl
dec
push
loopne
add
shll
clc
mov
jp
add
dec
add
pop
mov
push
and
add
mov
mov
in
enter
add
mov
mov
clc
lret
mov
dec
inc
inc
mov
fcompl
mov
mov
cmp
xchg
dec
fld
mov
outsl
shlb
adc
shll
add
cmp
or
add
das
stos
adc
mov
xchg
add
add
sti
in
fsts
ror
xchg
mov
add
mov
cmp
jp
sub
mov
ljmp
mov
xchg
lret
push
mov
xchg
pop
test
mov
icebp
movsl
lahf
and
push
out
fisubrl
mov
nop
jg
add
repnz
mov
repz
or
mov
pushf
aaa
adc
add
adc
add
or
ljmp
inc
add
mov
xchg
test
mov
mov
push
pop
sub
add
test
mov
and
mov
mov
pushf
push
cmp
adc
xchg
mov
add
xlat
je
dec
add
sbb
repnz
out
push
xor
mov
add
mov
cwtl
ret
jle
repz
pop
imul
cmpl
or
inc
add
cmpb
xor
jno
test
movsl
je
ret
pop
mov
add
sub
add
jne
sub
mov
pop
sub
add
jnp
add
stc
inc
add
mov
and
mov
add
mov
in
add
jp
add
cmp
mov
inc
fadd
test
cwtl
mov
sbb
out
loope
jno
mov
sbb
lcall
push
arpl
add
add
cmp
shrl
mov
fcmovnb
xor
ds
pop
sub
in
cmp
test
test
mov
stos
mov
test
aaa
iret
mov
add
xchg
lret
stc
stc
aad
insb
add
nop
jge
pusha
add
sub
call
jb
roll
xor
add
testb
xchg
ljmp
lea
jnp
jo
pop
or
in
xor
jo
outsl
out
pop
mov
and
fidivrl
js
or
shlb
jno
ret
in
jno
loopne
add
and
mov
movsl
xacquire
and
mov
xor
pause
pusha
add
add
fnstenv
mov
jg
and
mov
mov
mov
in
not
jl
mov
fldt
ljmp
rcrb
add
dec
leave
int3
or
cmpsl
inc
mov
cltd
and
pop
xchg
scas
sub
pop
mov
mov
xor
push
bound
xchg
mov
mov
push
sub
xchg
mov
mov
push
testb
add
dec
ror
mov
fidivrl
repz
imul
test
xchg
clc
incl
cs
sbb
add
sbb
jecxz
loop
pop
adc
test
mov
pxor
negb
push
jbe
adc
into
and
js
mov
xchg
pop
inc
cmc
and
out
mov
pop
pop
xor
lret
mov
roll
add
sub
iret
xchg
xlat
fcmove
jno
das
xor
jecxz
sub
jo
popa
and
add
xchg
mul
dec
pop
mov
add
sbb
adc
add
lods
xchg
inc
nop
jge
loop
adc
add
mov
rcll
xor
jle
sub
mov
adc
jne
cltd
add
mov
mov
daa
jmp
xchg
push
xchg
cld
scas
loopne
dec
fisttpl
mov
jne
xor
decl
push
pusha
add
nop
fisttps
inc
xchg
aas
call
mov
xchg
jno
pop
xlat
mov
mov
cmp
push
push
ficomps
add
jmp
jmp
mov
mov
in
ret
cld
cmp
jne
sbb
pusha
add
add
mov
add
fcmovnb
dec
inc
add
scas
scas
cmp
add
fstpl
cmp
add
inc
add
lods
orps
call
jo
add
lahf
lods
stos
popa
scas
and
ljmp
in
xlat
pop
iret
mov
arpl
in
add
hlt
hlt
xchg
push
mov
fnstenv
add
add
add
inc
bound
jge
sahf
sub
mov
sub
mov
mov
loopne
in
test
outsl
xchg
xor
mov
cmp
int3
lret
and
stos
outsl
add
mov
inc
inc
add
lret
sarb
stc
loope
stos
sub
xor
out
inc
add
popa
mov
add
stc
cld
jae
dec
adc
fxch
js
inc
add
aam
pop
fsubrs
mov
adc
mov
outsl
sbb
mov
pop
out
xor
push
inc
push
xor
lahf
bsr
ret
inc
add
mov
xchg
xor
cmpsb
loop
xchg
inc
add
dec
add
scas
jnp
movsb
jo
call
stc
xor
aad
add
cmpsl
outsl
ds
jo
into
insl
shlb
repz
mov
outsb
ljmp
and
shll
sbb
aad
ljmp
cltd
pop
call
mov
cmc
mov
mov
gs
jnp
xchg
add
xor
xor
push
enter
or
mov
flds
es
add
inc
inc
leave
pop
xchg
cmpl
call
add
mov
adc
xor
int3
lods
sub
mov
int
add
and
inc
add
xchg
movsl
inc
push
in
inc
add
add
add
cli
sbb
add
mov
sbb
imul
lcall
ja
ds
add
xchg
hlt
xchg
pushf
mov
or
xchg
or
mov
aam
push
sub
mov
xchg
sbb
or
mov
out
call
mulb
adc
jmp
add
pop
cmp
roll
aam
mov
clc
loopne
xor
mov
xchg
pop
roll
push
arpl
push
sbb
inc
int3
dec
pop
and
mov
shlb
lret
cltd
xchg
add
add
add
sub
xor
pop
jbe
mov
mov
fwait
mov
sub
push
cmpsl
adcl
lds
ss
jne
xchg
jne
outsb
jmp
add
ljmp
cld
pop
pop
aad
stos
and
fimuls
mulps
or
aas
push
call
inc
adc
xor
xor
pop
dec
out
cli
shlb
imul
out
sbb
lea
fcomps
jl
add
pop
jmp
testb
inc
popa
mov
out
js
sahf
pop
repz
mov
pop
push
pop
pop
je
adc
mov
in
pop
icebp
lods
inc
add
add
mov
mov
add
sub
adc
in
sbb
inc
add
adc
and
and
mov
orb
add
add
imul
cltd
pop
imul
test
add
adc
ja
fbld
mov
xor
add
and
cmpsb
adc
test
in
negl
cmp
call
or
mov
ss
add
data16
into
popa
repnz
nop
and
push
in
or
mov
add
fidivrs
loopne
int3
repnz
sti
jge
cltd
push
dec
mov
pop
jbe
sub
add
loope
mov
add
bound
imul
push
outsb
lods
inc
add
cmpsb
dec
outsb
ror
add
int3
mov
movsl
pop
fcoml
enter
inc
add
sbb
xor
mov
pop
scas
xlat
add
mov
ss
xchg
aam
mov
aad
out
sbb
inc
add
les
lock
in
arpl
call
add
sbb
stc
out
adc
mov
nop
ljmp
inc
lods
out
cltd
std
xlat
cli
stc
adc
mov
aad
das
pop
loopne
dec
add
mov
sahf
pop
arpl
test
add
mov
xor
fdivrp
mov
add
sti
jp
xchg
rorb
mov
pop
jge
scas
jb
add
jge
xchg
dec
and
out
xchg
data16
mov
fcom
mov
arpl
test
cmp
add
daa
jmp
push
and
mov
arpl
cmp
aad
sbb
sti
xchg
mov
add
mov
daa
mov
rcl
icebp
sub
mov
inc
add
mov
mov
add
nop
dec
inc
jbe
or
jmp
push
bound
iret
imull
clc
sti
adc
inc
jmp
adc
sub
mov
shrl
dec
jmp
or
test
jge
cmp
and
mov
jg
das
push
pop
or
mov
mov
daa
js
add
mov
stc
lret
push
jge
xchg
mov
pop
or
add
mov
pop
jae
int
mov
or
mov
mov
inc
adcl
mov
cmp
les
addl
aas
mov
pushf
add
and
dec
add
push
int
add
adc
sbbl
xor
or
jo
lahf
xor
lea
fisttpll
mov
sub
ret
xchg
add
testl
aaa
and
push
jecxz
cmp
pop
es
mov
cmp
add
sub
lret
in
movb
fisttps
jp
push
outsb
lahf
push
scas
cwtl
daa
in
xchg
into
test
aas
test
jae
add
inc
cmp
cmp
pop
test
sbb
lods
inc
push
repz
mov
add
add
aas
cmp
and
mov
std
mov
mov
pop
pop
call
dec
out
aas
and
mov
inc
into
xchg
int3
icebp
ds
xor
add
mov
add
clc
imul
outsb
push
lret
cmpsb
jge
add
mov
arpl
fwait
sbb
sub
in
pop
mov
sbb
cld
xchg
insl
repz
mov
inc
add
add
xchg
cmc
negl
cmp
adc
rorb
pop
adc
sar
sub
shlb
pop
and
repnz
push
inc
mov
add
gs
mov
add
and
adc
mov
xchg
inc
add
mov
and
pop
fidivs
add
push
jle
sarb
xadd
xor
mov
int
xor
pop
ret
shlb
cmp
mov
inc
add
imul
add
jbe
mov
data16
and
loop
adc
out
pop
mov
or
mov
fisubrl
mov
pop
bound
shrb
add
sub
adc
mov
arpl
mov
sub
into
dec
lret
mov
es
mov
add
ret
pushf
loopne
mov
add
scas
jne
inc
lods
fisubrl
inc
push
shll
add
outsb
xlat
stos
push
mov
call
add
jl
xchg
ss
popf
rcrb
mov
or
mov
pop
sarl
aas
mov
jp
jbe
adc
loope
out
out
jnp
daa
mov
mov
out
in
hlt
iret
jo
je
add
add
inc
lret
xor
xor
add
in
nop
or
cli
in
popa
sbb
mov
out
and
mov
cmp
test
out
mov
and
into
mov
addr16
add
inc
lahf
pop
ror
in
cs
sti
sub
mov
insb
add
mov
sahf
cmc
das
cltd
sub
jns
insl
sub
sub
mov
fdivrl
stos
cmp
loop
imulb
call
dec
add
aam
add
mov
sub
adc
pop
xchg
jecxz
pop
sub
push
jmp
jge
ret
add
ret
mov
cmc
test
ficoml
pop
and
pusha
add
add
push
mov
sub
mov
outsl
and
mov
mov
aam
sub
xor
out
shll
jns
add
daa
dec
cld
mov
pop
dec
and
inc
add
add
mov
sti
jl
mov
out
pop
or
andl
or
cltd
xor
mov
xor
aaa
scas
dec
lea
outsl
mov
test
add
add
jg
rcrl
xor
and
mov
add
add
and
mov
xchg
jg
ret
jbe
mov
sti
pop
sbb
das
pusha
add
cltd
adc
sar
mov
mov
add
lods
icebp
movsb
mov
jp
lcall
jl
dec
jno
jnp
sti
jbe
jecxz
es
or
mov
mov
movsl
jo
and
sbb
mov
dec
mov
mov
and
inc
add
fistl
jle
sarl
sub
mov
mov
add
out
push
jle
add
mov
inc
jae
xchg
adc
movsb
lret
jg
push
jno
jbe
lcall
out
add
add
je
cmpsb
and
cwtl
std
sarb
test
pop
fprem1
shll
jle
jae
or
lods
xchg
mov
mov
lea
or
inc
sub
pop
mull
add
lds
je
push
mov
inc
add
add
cmp
push
popa
inc
or
mov
jecxz
mov
mov
inc
fistps
add
in
in
outsl
push
cltd
sub
mov
clc
cmp
or
add
add
add
sti
fmul
daa
jns
add
sub
xchg
cmpxchg
inc
add
add
inc
ss
cs
clc
cwtl
and
inc
add
in
je
pop
jne
into
adc
dec
into
ret
add
add
int3
xchg
aas
in
fidivl
addr16
sub
mov
sahf
gs
cmp
xor
push
add
mov
es
add
xchg
leave
xorl
inc
in
add
mov
mov
push
fdivs
mov
into
add
mov
sti
test
fsub
cmpsb
sbb
lock
add
add
inc
add
jno
sarb
sub
and
pop
inc
jb
outsb
std
pop
add
mov
add
xchg
lahf
les
inc
add
sub
mov
push
out
adc
imul
xlat
sti
sbb
sub
inc
add
out
jo
subb
lds
les
repnz
pop
aaa
xchg
dec
add
push
ficomps
jne
leave
xor
cltd
xlat
jno
sbbb
dec
cmp
aad
add
add
sub
cld
call
movsl
std
add
mov
call
cltd
cmp
pop
mov
scas
pop
mov
pushf
jecxz
pop
pop
jo
jne
dec
push
cmc
mov
pop
cli
ds
sub
mov
adcb
jl
add
add
stos
pop
xchg
pop
mov
adc
push
jb
fstpt
mov
jle
add
sbb
and
cmpsl
insb
add
cs
cmpsb
scas
rolb
add
subb
add
push
iret
add
pop
jl
or
mov
and
popf
ljmp
aad
push
mov
xlat
aas
xchg
jae
lcall
push
cmpsb
mov
lret
out
int3
add
lock
sbb
ret
aam
mov
push
cmpsb
scas
aam
dec
add
mov
add
aaa
pop
jb
js
dec
adcb
xchg
sbb
mov
xor
sbb
cmpsb
mov
and
push
xchg
addb
lret
incb
and
mov
mov
sti
push
lods
fldcw
and
lods
mov
add
les
or
adc
inc
mov
jae
adc
aas
sbb
dec
sub
bound
out
and
mov
add
adc
sbb
fildll
xor
adc
fwait
mov
lock
push
js
adc
xor
movsl
in
mov
cld
ret
leave
fidivl
add
add
add
into
je
lret
movsb
mov
xor
add
arpl
sub
pop
push
jae
xor
add
jo
enter
popa
scas
nop
std
cmpsl
pop
inc
sub
stos
ret
fstpt
stc
mov
rcll
mov
mov
das
xor
mov
call
inc
imul
pop
sbb
andps
push
add
jns
lea
jns
add
mov
cs
std
pop
out
jo
or
mov
and
mov
mov
mov
add
aas
fcmovb
cltd
cmp
adc
enter
and
jnp
dec
add
add
icebp
mov
call
mov
inc
loope
jle
jne
mov
or
mov
fwait
cs
jno
cmpsb
pushf
and
ja
mov
pop
aaa
ja
mov
mov
into
mov
cmp
inc
shll
fldt
pop
pop
lods
daa
sbb
loopne
repz
sbb
mov
gs
pop
out
pop
xchg
or
cmp
gs
mov
add
jmp
lods
imul
jns
jg
in
xchg
xor
daa
mov
in
push
jne
and
pop
push
cmpsb
fdivrl
mov
jbe
pusha
add
aas
ficompl
mov
test
lret
dec
add
and
mov
pushf
ss
dec
add
sbb
scas
and
ret
mov
jmp
fstpl
inc
leave
xchg
insb
add
mov
mov
push
decb
mov
repz
mov
inc
test
in
into
repnz
sarb
add
mov
fisttps
sbb
and
adc
shrb
mov
out
add
mov
loopne
jae
lcall
test
dec
loop
mov
stc
mov
ds
ss
mov
xor
push
lcall
lock
mov
push
and
mov
ret
out
mov
jge
and
mov
xchg
mov
adc
add
mov
into
popf
loope
xor
adc
xor
xchg
mov
jmp
mov
add
iret
cmc
int
movsb
and
xchg
cmp
mov
mov
orl
cmp
inc
push
aad
outsl
mov
jns
add
push
gs
dec
decl
dec
dec
add
or
fnstenv
rorb
inc
cmp
mov
cmp
cmp
in
mov
add
xlat
sbb
pop
jmp
add
push
pop
movsb
xchg
sub
sbb
inc
arpl
mov
into
sbb
add
add
sahf
sbb
jle
sub
inc
add
mov
add
mov
aad
fwait
inc
loop
js
ljmp
fwait
xlat
iret
cmp
jg
add
in
lahf
mov
mov
add
jb
add
add
cmpsb
xchg
mov
xor
cmp
mov
push
lret
inc
add
xchg
cli
or
sarl
add
mov
mov
ja
loop,pt
mov
or
sbb
adc
and
fdivr
pop
xchg
mov
loop
mov
je
sub
outsl
imul
mov
dec
push
cmp
add
jo
mov
cmpsb
js
aam
adc
inc
out
fistpll
add
mov
daa
pop
jne
mov
adc
xchg
sahf
out
push
add
mov
mov
nop
rolb
testl
bound
cltd
lds
test
mov
inc
and
mov
mov
add
mov
dec
push
add
mov
pop
pop
xchg
rcll
lret
ss
ja
call
cmp
or
xchg
adc
add
mov
loopne
clc
mov
add
cmp
rclb
lods
fcompl
data16
mov
notb
and
idivl
sahf
int3
mov
mov
comiss
adc
in
outsb
lret
hlt
jge
call
inc
cmp
loop
adc
lock
mov
cmpsb
out
lods
push
mov
repz
gs
jg
ret
xchg
je
xchg
or
in
xchg
in
cld
loope
xor
xchg
mov
adc
add
into
jbe
je
add
add
sub
mov
jbe
mov
sbb
repz
ret
imul
add
mov
mov
add
cmp
lods
lahf
out
xchg
fdivl
cmpsb
testb
movsl
mov
sub
fldenv
add
mov
jg
add
add
dec
ror
fcompl
or
mov
loop
mov
nop
xor
push
into
jnp
push
frstor
cmovs
mov
pop
lahf
dec
repnz
les
xlat
push
popf
xchg
in
sahf
insl
lea
pop
adc
add
inc
add
mov
mov
mov
xchg
insl
sub
mov
mov
subl
jno
fidivl
addr16
int
das
xchg
fwait
push
das
or
mov
call
lock
mov
xchg
xor
xchg
and
push
xchg
cmc
mov
cmp
xchg
adc
sub
pop
and
mov
es
mov
add
mov
popf
inc
inc
lods
ret
pushf
sub
lcall
pop
je
addr16
push
cli
dec
dec
add
outsl
daa
fldenv
add
pop
fiaddl
sbb
pop
sbb
popa
or
push
jb
jmp
sub
out
xor
add
xchg
push
nop
std
leave
out
add
mov
ret
jmp
into
incb
add
mov
jmp
push
sub
mov
movd
sarl
loop
add
xor
xchg
or
mov
pop
into
and
mov
pop
shl
push
cmpsl
xor
push
in
pop
adc
fidivrs
and
mov
rcrb
iret
xor
in
pop
cmp
jbe
push
scas
add
inc
aas
mov
push
lret
sbb
fistpll
add
popf
cmpsl
ret
mov
inc
in
ss
jno
int3
rol
stos
pushf
pop
sub
into
or
mov
lcall
shlb
pop
jp
lahf
bound
add
mov
mov
or
push
negb
incl
xor
pop
xchg
mov
add
or
mov
stos
and
mulb
jae
in
test
in
mov
xchg
insb
add
dec
je
inc
add
in
pop
or
mov
loop
xor
add
sbb
dec
in
dec
leave
pop
out
sbb
scas
lret
ja
inc
stc
pop
rcll
and
mov
jns
aaa
xchg
lock
pop
fnstsw
cmpsb
push
cltd
lret
add
sarb
addr16
pop
dec
test
addl
xchg
sbb
mov
lret
mov
addr16
int
and
add
jnp
fnstenv
insb
add
adc
inc
add
pusha
add
mov
mov
mov
lock
pop
or
pusha
add
jae
jp
ljmp
sub
pop
stos
adc
pop
jmp
shl
rolb
jg
and
mov
pusha
add
je
add
pop
inc
xchg
or
decl
mov
sbb
cmp
add
xchg
mov
and
mov
lcall
mov
lret
es
push
jp
mov
mov
adc
cli
or
or
mov
movsl
nop
sarl
adcb
add
jno
mov
mov
jle
jl
xor
add
arpl
incl
mov
mov
decb
test
xchg
mov
sub
push
cmpsl
cltd
xor
jno
lods
mov
loop
pop
orb
add
add
sbbl
mov
test
hlt
insb
add
xchg
and
mov
mov
and
popf
push
xchg
add
aam
loopnew
aaa
mov
imul
adc
cltd
mov
fcomps
lock
hlt
mov
mov
fldenv
inc
add
lea
lea
sub
add
lds
out
loopne
dec
pusha
add
cmc
pop
out
int3
shl
repnz
ljmp
arpl
fiadds
add
adc
enter
add
jg
repnz
and
sti
cmpb
aas
imul
jnp
jb
in
std
arpl
loope
cmp
mov
pop
lds
add
or
mov
rcll
inc
mov
and
mov
fadds
test
push
jbe
fcompl
xchg
jmp
js
cmp
leave
mov
push
cmp
cmpsb
fucomp
test
xchg
inc
add
cmp
das
xor
mov
xorl
movl
push
mov
fldcw
mov
cs
cwtl
pop
nop
rcll
rcrb
sub
pop
cwtl
decl
add
shr
cmpsb
xchg
jo
out
mov
test
jge
movsl
xchg
std
mov
out
fbstp
insb
add
lock
mov
inc
imul
mov
xor
mov
push
mov
js
fsubl
mov
lock
outsb
aas
ljmp
add
jo
jno
add
test
inc
jae
movsl
out
pop
pop
popf
hlt
jae
pusha
add
stc
test
dec
pop
sbb
in
xor
xor
ss
loopne
jno
vorpd
movsl
int
mov
popf
faddl
rol
and
push
lret
nop
push
sti
loop
push
adc
out
and
mov
jp
mov
pop
not
add
mov
and
inc
out
xor
std
mov
add
inc
inc
add
pop
lea
inc
mov
or
cmpsb
cmpsb
mov
add
adc
cmp
adc
aad
popf
flds
inc
add
inc
shl
jne
or
mov
cmp
mov
pop
movsl
cwtl
xor
dec
add
aad
pushf
in
xor
pop
adc
jno
push
or
mov
sbb
ds
mov
add
mov
add
xchg
xchg
dec
imul
adc
fcoml
scas
xchg
pop
in
xchg
repz
and
add
aaa
stc
pop
add
mov
mov
ret
mov
mov
add
rorl
or
push
push
add
mov
out
stc
ret
mov
mov
loope
andl
mov
gs
iret
mov
sbb
mov
mov
test
mov
loopne
mov
clc
adc
dec
and
mov
rclb
pop
lret
xchg
cmpsl
sbb
push
add
mov
inc
sar
enter
jge
icebp
cmp
and
xchg
adc
jecxz
push
and
rcll
add
loopne
add
xor
scas
add
add
jmp
mov
in
dec
push
test
je
push
jecxz
mov
xchg
xchg
sti
jnp
repz
add
pop
shll
js
cmp
mov
mov
cmpsb
cmpl
add
mov
roll
lock
aas
sub
adc
sub
xchg
xlat
hlt
push
repnz
leave
push
das
add
mov
je
and
mov
pop
insl
push
out
xor
test
mov
pop
lret
popa
sbb
mov
mov
inc
jp
cmp
iret
rclb
aaa
orb
add
fimuls
add
mov
inc
mov
add
call
aaa
loop
sbb
jns
test
sub
fldt
pushf
inc
jno
popa
sbb
cmp
push
pop
aad
mov
or
adc
jnp
cmpsl
aas
leave
sarb
jecxz
add
fdivl
and
adc
and
lret
out
sbb
cltd
xchg
push
test
loope
jae
aad
sti
nop
lods
xchg
push
in
sti
je
adcb
lds
xor
or
add
mov
add
add
add
fnstsw
pop
rolb
jmp
cmpsb
shll
add
sar
into
test
pop
iret
std
sbb
sub
mov
outsb
jbe
jecxz
test
push
add
cwtl
inc
add
cmpsl
dec
inc
fcoml
xchg
int
cmpl
repnz
add
add
test
or
dec
outsl
stc
sub
hlt
iret
push
pop
push
sbb
and
cltd
push
mov
stos
dec
lcall
lods
ljmp
add
and
movsb
notb
push
mov
je
add
pop
insb
add
aad
xchg
adc
pop
jbe
jnp
popf
or
add
fldl
lret
cmp
pop
adc
xchg
out
add
les
hlt
and
pop
add
push
mov
dec
inc
inc
mov
sti
xchg
pop
cmp
lahf
insb
add
rclb
mov
lret
xor
cmp
test
push
pop
mov
pop
lods
enter
add
inc
add
aam
add
flds
shlb
loop
es
adc
mov
in
lea
iret
sub
cli
xor
pusha
add
mov
sbb
or
sub
xchg
mov
mov
mov
mov
rol
sub
and
in
rorl
iret
push
inc
aas
shr
cmpl
ss
data16
pop
imul
add
enter
ds
mov
in
push
mov
rolb
mov
sbb
jle
add
add
add
mov
pop
sbb
inc
and
mov
cmp
iret
jecxz
lods
outsb
mov
mov
inc
jae
mov
cmp
daa
es
or
add
mov
add
xchg
testb
imulb
leavew
mov
dec
rcrb
push
pop
cld
jp
push
mov
dec
hlt
stc
xchg
cmp
mov
add
sbb
popf
xchg
add
mov
add
daa
shlb
mov
popa
pop
das
dec
lods
jnp
fwait
add
rcrl
ret
xchg
orb
dec
enter
add
mov
cli
mov
fdivrl
sub
mov
push
mov
mov
outsl
ja
jne
jmp
add
cmp
mov
ror
pop
sbb
push
enter
dec
inc
fsubrs
adc
lret
cmp
or
mov
lcall
shll
mov
fucomp
pop
pop
pop
sbb
insb
add
rcl
push
pop
mov
scas
push
les
sahf
add
sbbl
and
xor
mov
xor
adc
cld
je
xchg
int3
cmp
ret
inc
out
jno
pushf
jmp
add
mov
jmp
outsb
cmp
dec
xchg
and
add
mov
xchg
jno
lcall
mov
test
fstp
iret
push
mov
andl
mov
inc
add
cs
push
pop
cmp
and
mov
mov
push
xor
inc
xchg
xchg
ror
xchg
mov
enter
cmp
lret
add
mov
or
mov
mov
scas
loop
leave
mov
lods
xchg
push
loopne
push
mov
adc
add
pop
roll
mov
add
push
sub
lock
ret
mov
dec
pop
jge
push
mov
sbb
out
pop
cmp
xor
jge
insl
stos
push
push
xor
loope
cmp
stos
mov
xor
jecxz
add
mov
or
xchg
imul
aas
sub
or
push
dec
ja
arpl
xor
cltd
stos
push
xchg
inc
add
mov
mov
mov
mov
add
add
mov
add
jo
inc
fwait
ljmp
lods
mov
lock
and
dec
jo,pt
jae
jo
mov
mov
outsb
cli
mov
add
mov
data16
xchg
jecxz
push
popa
iret
repnz
call
push
jmp
add
mov
stc
movsl
test
pop
xor
cmpsl
fcmovne
mov
cmp
bnd
or
outsl
xorb
xchg
decl
sub
mov
add
repz
mov
or
mov
je
mov
test
adc
test
lcall
add
scas
and
lahf
lds
xchg
leave
pusha
add
lods
adc
pop
aas
dec
add
or
add
stos
cld
dec
add
adc
add
mov
in
popf
push
insl
dec
or
mov
pop
aad
push
subl
mov
test
ds
es
xchg
nop
sub
fimuls
into
mov
enter
add
insl
dec
sub
mov
xchg
cmpl
mov
pop
sbb
mov
cmp
adc
outsl
in
les
mov
cmp
and
mov
xchg
mov
xchg
add
add
mov
add
cmpb
push
in
arpl
cs
imul
pop
sbb
out
insl
setg
lret
add
cmpsb
sbb
into
mov
xchg
test
inc
and
shll
scas
rcrl
test
cmpsb
add
push
jb
sbb
ds
add
fpatan
out
das
push
dec
add
dec
add
add
in
das
lods
lret
out
in
rcr
loop
xchg
fldenv
mov
test
adc
sbb
inc
add
stc
mov
add
add
adc
mov
mov
add
pop
mov
inc
dec
add
add
mov
inc
shlb
dec
add
dec
add
pusha
add
mov
mov
jne
push
sbb
inc
add
cmp
push
jae
and
mov
mov
adc
jne
add
sbb
xchg
pop
stos
out
mov
jmp
sbb
rcrl
push
cwtl
mov
add
add
push
fcompl
inc
sbb
jns
outsb
add
mov
xchg
out
dec
movsb
fldl
inc
test
int3
mov
mov
sbb
stos
ret
leave
ss
inc
shll
mov
ds
les
sbb
inc
push
lahf
mov
pop
and
mov
aas
xorl
pop
dec
inc
adc
enter
inc
cli
push
ja
in
mov
xchg
or
sub
push
hlt
cmc
in
or
mov
or
mov
mov
lds
mov
push
mov
add
add
add
lds
jmp
aad
or
dec
lods
jmp
sub
mov
xchg
push
shrl
ficoml
push
mov
ja
cmpb
add
shl
outsl
or
cwtl
adc
std
int3
xchg
xor
stc
cwtl
pop
dec
mov
repnz
test
das
lahf
add
xchg
xchg
loop
insb
add
and
mov
bound
enter
int3
lock
scas
mov
pop
sub
mov
cmpsl
xor
call
fwait
mov
dec
jecxz
add
cs
pushl
push
mov
mov
mov
into
xchg
js
pop
arpl
flds
adc
std
add
xor
dec
and
cli
cmp
decb
inc
divl
pop
shll
push
mov
icebp
or
shr
out
and
cmpsb
mov
leave
or
add
add
add
mov
xchg
add
in
sbb
fdivp
push
mov
mov
in
jge
popf
xor
jne
pop
cmp
into
pushf
xchg
pop
xchg
jo
mov
adc
push
or
pop
ljmp
add
and
mov
xchg
lret
adc
int
mov
add
jmp
jl
xchg
andl
inc
add
sub
add
xor
inc
lret
fldenv
das
push
or
lret
imul
push
lods
xchg
in
mov
mov
push
sti
jge
add
je
out
fnsave
push
sub
mov
mov
cld
in
inc
jmp
iret
call
jnp
jne
add
bnd
jl
out
pop
mov
lea
xchg
imul
lcall
add
lret
mov
jmp
and
movsl
push
fcoml
mov
jae
in
lock
flds
ret
test
mov
repz
cmp
mov
mov
out
mov
repnz
xchg
pop
ret
mov
movsl
mov
fsubl
mov
xor
mov
sbb
push
sbb
adc
rcl
lret
jnp
mov
adcb
pop
outsl
or
xor
add
add
scas
xorl
test
pop
jmp
or
inc
or
dec
pop
cmp
pop
leave
or
add
mov
negb
jle
mov
imul
mov
add
mov
adc
hlt
sti
xor
repnz
movsb
mov
jge
sub
jge
xchg
sub
mov
add
mov
decb
mov
in
push
stc
add
push
out
scas
sbb
out
out
stc
out
adc
jecxz
jno
jle
cmp
push
loopne
rorb
mov
xor
add
nop
sub
inc
push
or
add
mov
jae
in
in
push
pop
sahf
mov
mov
cli
cmp
jl
lock
sti
cli
xchg
xor
fbstp
enter
add
jne
cld
sub
popf
mov
mov
mov
popf
stc
push
ljmp
mov
xor
push
mov
loopne
add
pop
sbb
jp
cwtl
pop
popa
push
add
mov
push
daa
push
pop
sbb
and
xchg
sub
push
push
movsl
dec
mov
sbb
add
icebp
shll
inc
std
enter
add
sti
cmp
mov
jbe
lea
pop
mov
cmp
aaa
mov
mov
mov
and
fadd
mov
push
cmp
dec
sarb
inc
outsb
mov
lcall
mov
mov
shll
add
mov
out
xor
je
jnp
scas
js
je
cmpsl
mov
repz
dec
xchg
fidivs
test
repnz
out
into
aas
in
xchg
xchg
xor
xchg
adc
mov
cli
xlat
repz
mov
pop
aam
mov
call
out
sahf
inc
cmpsl
or
add
iret
pop
dec
fstpl
dec
add
roll
add
or
jecxz
xor
sbb
mov
add
scas
sbb
int
xchg
dec
bound
and
popf
mov
cs
add
out
rol
clc
mov
mov
cltd
xchg
mov
adc
dec
je
or
ljmp
push
je
test
add
das
ljmp
mov
xlat
pop
lahf
mov
and
pop
bound
mov
pop
jb
cmp
or
mov
les
mov
shlb
add
mov
add
mov
test
add
cld
xchg
mov
add
std
rcr
adc
add
popa
or
push
mov
outsl
jo
pop
bound
pop
out
orb
cmp
test
add
fisubrl
adc
and
add
jmp
push
test
cli
loopne
outsb
lret
outsl
mov
pop
movsl
lahf
test
sbb
cli
test
add
into
popa
mov
or
adc
add
jo
call
int3
pop
xor
dec
rcr
pusha
add
add
pop
push
mov
add
mov
dec
jne
stos
xchg
fisubs
mov
jne
add
fwait
lods
arpl
adc
push
cmp
cmp
dec
add
sub
mov
inc
jo
adc
sti
cli
cmpsb
cld
or
mov
mov
jmp
add
push
pushf
pop
pop
in
pop
lahf
imul
jmp
xor
out
push
add
mov
pushf
sbb
hlt
adc
ret
iret
addr16
mov
add
jbe
push
push
fcompl
mov
clc
push
popa
jmp
dec
sbb
dec
mov
push
dec
add
cmpsb
daa
cmp
mov
add
mov
gs
cli
pop
stc
xor
pop
test
ja
mov
mov
int3
mov
mov
testb
imul
in
cmpsl
pop
add
mov
add
mov
or
aaa
cli
jp
jbe
mov
mov
sub
mov
mov
outsl
adc
dec
add
add
jg
js
movl
xchg
rorb
adc
adc
clc
dec
add
sub
mov
int
mov
push
insl
push
aad
jle
pop
mov
cmp
inc
jl
cltd
push
repnz
and
mov
int3
dec
mov
cmpsb
rclb
lock
icebp
je
stos
scas
loopne
cmp
call
iret
arpl
xchg
or
mov
fadds
xor
sub
sbb
push
imul
fwait
inc
lods
into
fdivp
adc
adc
adc
mov
xchg
and
iret
mov
pop
ss
sub
sbb
xlat
pop
fstpl
fbstp
and
xchg
push
test
and
mov
shrl
mov
sub
add
jb
in
pushf
negb
sti
inc
test
pop
in
sbb
lods
pop
jp
add
push
outsb
in
out
lcall
movsb
xchg
inc
lcall
pop
cmp
sbbb
xchg
pop
and
add
rol
pop
inc
add
repz
pop
in
repnz
or
mov
jmp
les
mov
mov
add
mov
imul
lcall
add
mov
mov
aas
pop
mov
lds
push
cmp
mov
cmpsb
daa
hlt
repz
outsl
out
pusha
add
sbb
fisttpll
mov
cmp
loop
icebp
pop
xchg
je
mov
mov
les
sti
pushf
inc
cltd
decb
inc
test
loope
inc
and
ljmp
adc
fcoml
daa
jne
fwait
in
fldl
dec
ja
xor
dec
add
push
orb
mov
and
mov
add
scas
mov
popf
sahf
gs
test
mov
in
adc
add
add
imul
dec
add
or
mov
sbb
xchg
cmp
out
lock
popf
repz
fdivl
add
rclb
mov
xchg
add
add
mov
mov
jbe
out
cmp
xchg
mov
fildl
adc
mov
je
pop
popf
mov
add
cmp
jmp
mov
data16
mov
sbb
adc
jnp
movsb
mov
and
test
xchg
loope
mov
test
add
mov
mov
int3
lds
stos
call
fldl
imul
ja
mov
gs
mov
add
mov
call
and
fwait
xchg
jecxz
push
out
outsb
or
xchg
sbb
or
dec
imul
add
aaa
ror
aas
add
inc
adc
xchg
pop
rorb
add
sahf
jbe
sub
movsb
mov
iret
pop
jbe
fsubp
into
xchg
ja
imul
or
mov
imul
xchg
mov
xor
leave
orl
add
test
jecxz
int
xchg
out
scas
adc
push
imul
mov
mul
push
mov
push
jno
mov
pop
push
mov
push
pop
aas
movsb
data16
insl
jnp
cmc
push
fldl
fildll
mov
add
cmp
push
and
or
jnp
test
cltd
cmpsb
stos
lret
lds
mov
add
mov
sahf
loope
add
fmuls
add
add
cmp
mov
aad
mull
dec
test
mov
mov
inc
pusha
add
int3
arpl
mov
inc
idivl
pop
add
sbb
pop
and
add
pop
cmpsb
notl
repz
stos
push
jp
pop
and
ljmp
adc
pusha
add
add
xor
in
mov
push
jmp
xchg
push
mov
inc
pop
out
imul
pop
fidivrs
adc
imul
out
mov
mov
jno
jnp
lds
inc
lea
insb
add
pop
or
pop
insl
data16
cmp
add
popa
and
popa
xor
mov
fildll
mov
pushf
rcl
negb
scas
cmp
and
int3
dec
adc
add
mov
sub
mov
jecxz
mov
jle
xchg
pop
xchg
xor
movsl
cmc
aam
shl
jb
iret
pop
call
arpl
sub
pop
mov
inc
ljmp
mov
out
push
repz
add
mov
in
mov
cmpsl
scas
mov
add
out
add
mov
orb
push
leave
jae
pop
push
push
test
push
in
fwait
imul
mov
xor
fldenv
add
mov
jnp
ja
repz
lcall
aam
mov
imul
sub
mov
add
pop
adc
dec
cmp
int3
sbb
dec
add
jo
or
mov
add
dec
add
aad
or
push
mov
or
mov
jecxz
lds
enter
mov
fldenv
mov
and
xchg
sti
pop
add
hlt
stos
test
push
mov
ficoms
mov
imul
add
sbb
mov
jbe
add
test
add
leave
mov
sbb
push
shr
sti
push
arpl
ss
insb
add
aas
cmpl
add
add
mov
test
lahf
sti
mov
aas
dec
add
add
jae
push
mov
add
fisubs
fisubs
call
jl
xor
ljmp
xchg
pushf
in
jnp
adc
lods
push
cld
sbb
add
add
push
mov
add
push
addr16
sbb
mov
pusha
add
in
lods
sub
dec
pop
cwtl
shll
add
add
add
pop
push
dec
pop
adc
repz
push
in
rorl
mov
add
add
scas
orl
test
jmp
add
add
add
add
dec
add
test
sbb
add
inc
add
mov
or
sbb
cmpsl
xchg
testl
jecxz
je
frstor
hlt
sarl
inc
jle
add
add
sar
push
mov
out
jge
lret
int3
xchg
in
sub
mov
out
lcall
inc
out
add
xor
data16
fsts
mov
pushf
testl
jecxz
or
mov
mov
xchg
cli
mov
cwtl
stc
pop
xlat
test
adc
leave
dec
bound
dec
data16
add
jmp
xlat
out
sarb
mov
add
test
add
add
adc
popf
or
and
mov
je
stos
or
jmp
rorl
fadds
fistl
ljmp
loop
lret
add
dec
icebp
arpl
js
cmp
xor
jle
adcl
xlat
rcrb
add
into
xchg
push
cmp
xor
push
jge
add
jmp
and
mov
movsb
pop
imul
pop
jecxz
es
push
test
jmp
mov
add
jne
mov
insl
add
mov
xor
in
xlat
in
ja
and
mov
xchg
es
leave
push
orb
mov
std
cwtl
add
fistl
mov
test
jnp
sbb
mov
sbb
add
cmp
add
mov
pop
inc
jp
or
cmpsl
sarl
dec
loopne
shlb
mov
dec
leave
mov
aad
aam
sbb
rorl
add
cmp
pop
call
sbb
clc
aas
xor
push
faddl
clc
inc
add
cld
pop
jl
mov
add
xchg
addl
mov
and
test
adc
jb
add
loop
add
jmp
and
mov
call
gs
xlat
sub
mov
int3
in
psraw
cli
and
push
movsb
mov
add
add
mov
scas
in
arpl
pop
sub
push
lret
shl
pop
scas
pop
xchg
xor
ljmp
add
insl
in
add
in
inc
push
sub
mov
inc
add
hlt
or
dec
add
mov
push
sahf
fsubrs
mov
or
mov
push
inc
add
add
mov
stos
clc
nop
enter
cmp
sti
cmpsl
int
jno
je
data16
add
add
and
sbb
sti
mov
in
add
add
cltd
fsubl
push
jge
movsb
mov
push
out
push
ret
incb
xchg
and
mov
cmp
dec
mov
mov
inc
add
xor
jl
int
insb
add
je
divl
pusha
add
mov
add
add
mov
mov
sbb
cs
or
sbb
add
add
scas
sub
xchg
iret
pop
jb
push
and
mov
dec
sub
mov
pop
dec
fildll
xor
add
sub
add
fstl
pop
mov
jmp
dec
repz
and
sbb
fsubr
sub
cmp
push
movd
shlb
push
pop
adc
sbbb
decl
mov
mov
jecxz
lcall
fdivl
pop
mov
fildl
std
fisttpll
mov
jmp
divb
mov
and
add
dec
sbb
xor
jb
cmp
dec
out
fdivrl
mov
cmp
into
cld
cmp
add
call
inc
sbb
shrl
orb
jnp
ljmp
mov
add
xchg
daa
xchg
sarb
in
scas
lods
push
std
loop
xor
ss
sub
jp
or
mov
mov
ret
out
dec
aas
clc
into
inc
push
mov
fisubs
push
mov
cld
sub
mov
test
fsubrp
or
fcmovbe
or
mov
mov
lods
dec
add
rcll
fimull
add
xchg
jl
test
test
sbb
scas
hlt
sti
jae
or
mov
inc
out
or
pusha
add
sar
xchg
pop
jo
fwait
jl
sarb
aas
adc
std
stos
sbb
add
xor
adc
cltd
xchg
pop
lret
ja
sbb
into
popf
mov
mov
aam
frstor
sbb
fdivrl
pusha
add
cmp
jg
paddb
dec
outsl
mov
sbb
jb
aam
pop
fldenv
dec
add
mov
or
mov
mov
add
cmpsl
fwait
rcrl
jl
lcall
imul
xor
or
cmp
arpl
add
dec
add
sub
mov
je
data16
add
loop
fcoms
stos
inc
jmp
jp
lods
popf
movsl
out
cmp
add
mov
cli
dec
pop
adc
or
add
mov
add
mov
or
mov
xor
pop
adc
xor
cltd
adc
aad
repnz
add
bound
add
or
decl
xchg
and
mov
inc
add
into
xchg
repz
test
sbb
sub
mov
pop
or
or
mov
xchg
enter
add
ljmp
jl
dec
mov
int
add
repnz
mov
xchg
cwtl
sbb
test
test
and
icebp
jmp
mov
rcll
push
movsb
mov
mov
scas
fwait
mov
leave
jae
adcl
jnp
mov
aad
xor
rcrb
ss
adc
mov
inc
add
cmc
cltd
mulb
pop
movsl
add
adc
out
testl
jnp
lock
xchg
mov
into
mov
add
dec
xlat
test
add
dec
addr16
sar
mov
push
lods
pop
sub
mov
sub
popf
aam
add
js
adc
dec
test
call
add
jo
push
inc
cltd
dec
loopne
hlt
mov
fcmovne
jp
xor
mov
cmpsl
out
into
sub
mov
mov
into
lds
scas
mov
cmc
or
mov
push
adc
sbb
in
fiaddl
into
pop
daa
pop
nop
ret
xor
cwtl
movb
testb
loopne
bound
or
mov
or
cltd
cmpsb
into
and
sarb
adc
jl
call
jmp
ret
test
add
adc
lds
xor
xchg
xchg
adc
push
and
xor
xor
sti
ljmp
push
xchg
pop
outsl
xor
roll
mov
mov
dec
jns
clc
ja
ret
insl
push
fwait
aas
dec
add
add
fldlg2
or
mov
inc
ffree
sbb
adc
cmp
mov
mov
xchg
mov
daa
inc
push
adc
mov
or
xchg
scas
dec
push
jns
outsl
mov
imul
push
xchg
js
mov
scas
clc
sub
fcoml
xchg
dec
xchg
jp
xchg
lahf
dec
add
mov
cmpsl
mov
mov
maskmovq
divl
mov
xor
sbb
hlt
daa
icebp
xor
adc
pop
push
xchg
jle
sti
xor
adc
stos
xchg
outsl
mov
arpl
jp
xor
or
fstps
or
mov
or
jp
and
mov
sbb
lds
mov
add
add
xchg
cltd
insb
add
jp
xchg
ss
mov
dec
in
adc
repnz
add
mov
mov
mov
cmp
push
push
adc
mov
dec
enter
in
scas
and
dec
test
xchg
jge
add
jle
inc
dec
popa
pop
sbb
mov
fucom
inc
and
xor
sub
mov
enter
movsl
insb
add
cmp
inc
mov
mov
dec
add
je
xchg
or
pusha
add
mov
stos
sti
adc
pop
sub
cmpsl
sbb
push
out
repnz
sbb
push
mov
adc
xchg
jle
scas
sbb
mov
jp
popa
clc
and
dec
pop
mov
cwtl
cs
andb
arpl
push
je
arpl
or
mov
add
add
sbb
pop
aaa
and
or
xchg
or
shll
out
aad
or
mov
loopne
add
or
add
loope
and
add
mov
add
mov
add
mov
lods
mov
mov
pop
mov
js
sahf
sbb
xor
add
and
add
clc
inc
test
and
add
mov
cmpsb
or
xchg
push
xor
xor
jp
adc
mov
lea
sub
inc
xchg
loop
lahf
jnp
push
sbb
cmc
mov
je
push
loopne
cli
push
hlt
sti
mov
add
fcomip
cmc
aam
dec
idivb
out
into
insb
add
push
cld
push
out
or
jmp
int
jmp
jg
stos
mov
js
frstor
into
loopne
mov
jbe
lock
add
mov
inc
add
icebp
dec
aas
popf
aam
insb
add
mov
mov
roll
add
sarb
es
adc
push
in
jecxz
fldl
ret
incb
mov
jle
outsl
or
pop
js
dec
lods
movsl
call
add
lret
addr16
mov
in
cs
mov
add
mov
xor
add
sub
add
inc
add
mov
mov
lret
sub
xchg
lcall
mov
icebp
mov
pop
test
enter
xchg
adc
sarb
inc
and
mov
xchg
mov
mov
fcmovbe
add
mov
test
mov
pop
pop
add
mov
push
gs
jp
ds
shll
orl
inc
add
lea
jle
loope
add
test
lock
adc
inc
inc
cld
je
fdivrs
add
cltd
mov
stos
sub
mov
xchg
je
ja
pop
insb
add
in
cltd
pop
repnz
inc
add
xor
or
mov
sbb
mov
and
mov
cvttps2pi
mov
mov
lods
arpl
popf
fimuls
pop
fcomps
xchg
jecxz
or
nop
bound
lds
insl
adc
jne
repnz
insb
add
adc
in
dec
pop
dec
call
add
and
push
xchg
add
in
pop
sub
mov
pop
dec
push
push
leave
into
out
add
cmpsl
lahf
shll
out
or
loop
cltd
imul
sarl
loope
push
pop
cmp
jbe
mov
lods
inc
pop
mov
incl
or
loopne
add
sub
mov
ds
xor
mov
cltd
sbb
clc
lret
fsubs
add
mov
add
xchg
daa
scas
jb
pop
xor
jmp
push
xchg
cmc
ss
push
pusha
add
dec
add
dec
add
cmc
add
dec
hlt
or
mov
adc
aas
in
push
setns
xlat
push
mov
lock
mov
int
sub
ret
xchg
xchg
sarb
cmp
add
cwtl
leave
out
xor
je
data16
cli
fidivs
out
fcmovbe
sub
mov
fsubs
popf
rcrl
jg
cwtl
test
or
push
roll
scas
shlb
dec
inc
xor
std
and
mov
insl
push
je
shl
mov
clc
movsl
nop
repz
sbb
inc
lods
test
leave
in
fwait
lods
fists
xor
sti
lret
push
xor
cmp
mov
mov
aam
sub
mov
imul
jno
loopne
stos
push
xchg
jp
into
push
sbb
adc
adc
inc
cmp
add
mov
rcrb
mov
sub
or
mov
add
nop
lock
data16
add
add
mov
mov
enter
add
iret
mov
outsb
push
shrl
mov
ja
xlat
xor
cwtl
sahf
add
adc
call
and
add
xchg
inc
add
mov
xchg
push
adc
nop
add
mov
sbb
outsb
out
and
es
jne
push
fistpll
sbb
inc
lea
shll
mov
mov
add
clc
sbb
dec
add
mov
shr
fisttpll
imul
xchg
add
loop
cmp
mov
push
rcr
loope
xor
mov
add
pop
jmp
mov
mov
add
mov
leave
or
iret
add
rcrb
dec
pop
xchg
lahf
and
mov
mov
mov
outsl
in
daa
inc
iret
sub
mov
jb
loope
add
mov
adc
push
mov
arpl
mov
jo
lahf
nop
sbb
adc
out
xchg
jp
mov
mov
add
aas
dec
push
rcll
aad
dec
add
std
or
xchg
or
mov
jecxz
add
mov
mov
inc
loopne
xor
lock
sub
mov
add
mov
add
jge
and
mov
pusha
add
fistpl
dec
add
or
mov
adc
test
add
int
loop
inc
cmpsb
cwtl
pop
pusha
add
stos
cmc
cld
mov
sub
sbb
subb
sbb
sbb
aad
and
sub
add
xchg
out
outsb
repnz
addl
scas
and
push
aad
push
cld
test
xchg
cltd
shlb
lcall
adc
mov
jl
push
daa
sub
gs
out
imul
sub
je
ret
adc
add
cli
lds
pop
push
mov
bound
es
mov
rorl
das
cmc
add
daa
sub
dec
and
mov
mov
popf
cmp
add
jnp
pop
out
sub
lret
pop
jo
add
inc
sub
add
pop
outsb
lds
add
subb
mov
and
mov
bound
outsl
ljmp
sar
jne
adc
ljmp
popf
pushf
loopne
cltd
cmp
mov
aad
cltd
mov
fsubrs
cmp
add
push
mov
add
sub
xor
fidivs
jmp
add
mov
hlt
shlb
add
popf
out
ret
inc
inc
mov
jmp
push
mov
add
push
test
loop
das
cmp
and
out
and
ljmp
aaa
mov
jecxz
pusha
add
add
or
jge
add
mov
add
add
add
and
sbb
and
mov
fistpl
rcll
int
leave
mov
sub
in
or
push
aam
or
mov
jno
imul
mov
mov
add
nop
pushf
xchg
enter
add
movsl
adc
int
lds
pop
ret
cli
pushf
cmpb
je
cmp
xchg
mov
mov
push
mov
ftst
imul
cs
cmpsl
movsb
enter
ljmp
cmp
add
pop
ficompl
push
nop
add
mov
add
sbb
or
mov
pushf
adc
cmp
mov
add
out
add
cmp
add
mov
add
mov
cwtl
dec
mov
adc
sbb
jle
in
test
adc
add
xchg
movsl
xchg
push
pushf
xor
es
add
int
loope
icebp
rcll
sbb
dec
fidivrs
pop
leave
aas
loopne
xor
iret
je
shll
dec
scas
jbe
daa
jne
xlat
fnsave
add
lock
pop
add
mov
sub
push
and
xor
sti
ss
mov
add
cmc
add
xorb
loop
rorb
test
xchg
int3
test
pop
in
sub
adc
daa
jbe
or
in
ret
gs
mov
pushf
lods
lods
xchg
in
add
out
push
daa
scas
cmp
mov
std
xchg
shl
dec
jle
sbb
push
xchg
leave
mov
mov
mov
cmpsl
sub
add
arpl
add
add
add
jg
push
cmpsl
xchg
sub
into
jno,pn
add
jmp
popf
jbe
and
lods
dec
lahf
inc
repnz
leave
inc
outsb
mov
add
adcl
mov
int3
xor
test
push
push
ss
add
mov
jo
repz
and
mov
filds
add
jno
test
je
sahf
push
sub
jns
sahf
xor
in
sbb
insb
add
call
add
dec
add
pop
outsl
les
lret
insb
add
add
sub
inc
pop
pop
xchg
cmp
mov
out
movsl
ja
lea
add
pop
roll
rcr
inc
mov
mov
mov
jle
rcrl
push
mov
add
mov
add
test
test
mov
push
insb
add
mov
and
in
jle
ja
stc
repnz
fldcw
out
inc
add
adc
stos
pop
es
jo
jecxz
mov
jg
adc
push
add
in
cmp
push
mov
test
loopne
jl
scas
aas
or
mov
and
icebp
mov
pop
push
and
mov
add
aas
pop
out
in
adc
jo
xchg
outsb
sbb
or
add
xor
das
stos
jp
mov
mov
jl
dec
add
mov
xor
sub
iret
rcrb
inc
mov
push
sub
mov
add
loop
pop
mov
dec
aaa
cmp
lahf
or
aaa
xchg
rcrb
test
out
dec
adc
rcr
mov
enter
leave
jge
nop
ljmp
add
mov
mov
jbe
add
pop
jge
pushf
repz
popa
jge
dec
mov
and
mov
mov
std
jnp
xlat
sbb
pop
jmp
adc
stc
mov
push
js
int3
xlat
test
push
push
in
shll
psubsw
add
mov
add
test
je
cmp
fstpl
shrb
pusha
add
pop
xchg
mov
push
ds
push
mov
xorl
fmuls
dec
dec
add
mov
out
loope
shlb
mov
in
add
mov
das
jmp
mov
or
mov
xchg
sahf
add
les
inc
add
lds
enter
mov
xor
lock
in
mov
fisttpl
mov
pop
in
in
add
and
mov
rcll
inc
push
lret
adc
stos
dec
aaa
dec
add
into
call
push
enter
cmpsb
xor
pop
fstpl
rcl
into
cmpsl
and
add
add
call
add
jl
push
and
mov
mov
and
mov
cmp
jp
addr16
scas
push
out
jge
imul
jl
add
icebp
add
in
leave
rcrb
addr16
push
aas
add
add
dec
push
add
scas
insb
add
xor
dec
pop
mov
test
filds
mov
outsl
pusha
add
add
or
xlat
cmovo
mov
jo
add
mov
ret
loop
push
pop
repnz
gs
arpl
xlat
inc
imulb
mov
jbe
pop
outsb
movb
add
mov
pop
pushl
in
jmp
lcall
add
jo
orb
and
add
out
dec
add
mov
icebp
inc
cltd
push
jo
mov
sbb
adcl
je
lahf
jmp
sub
xchg
mov
mov
or
inc
lock
outsb
pop
icebp
mov
jns
push
push
sti
pop
stos
jg
cmp
add
in
xchg
ljmp
xchg
add
test
leave
jmp
ljmp
inc
mov
mov
xor
mov
mov
es
mov
xor
insl
xchg
push
clc
xor
roll
pop
jecxz
add
rolb
mov
sub
add
stos
lods
push
test
inc
enter
jb
fldt
add
pop
xchg
and
je
icebp
and
push
test
scas
or
mov
clc
fsubrl
adc
sbb
sub
mov
or
mov
pushf
js
cld
rol
fimull
sub
pop
outsl
or
adc
sub
mov
dec
sub
mov
pop
lods
xor
mov
jo
pop
je
adc
ret
pop
fiadds
inc
push
mov
jnp
or
ljmp
mov
sbb
fistpll
xchg
out
pushl
add
add
loop
or
add
lea
push
adc
add
jae
sub
mov
cmpsb
mov
pushl
shrl
add
rol
mov
dec
loopne
xchg
jge
add
shlb
jbe
add
fnstenv
jg
jmp
iret
jg
add
scas
js
test
mov
add
sbb
add
add
push
in
ret
cmp
fstl
mov
cmp
jp
sbb
sub
mov
add
mov
inc
lahf
in
mov
lds
sub
mov
lcall
js
mov
mov
data16
xchg
cmp
sub
popf
and
lea
mov
jg
mov
jb
mov
adc
or
jl
mov
pushf
aam
in
pop
lret
adc
or
push
or
mov
mov
or
emms
mov
lds
les
jnp
cli
clc
arpl
stos
jae
xor
xchg
sahf
sbb
dec
push
inc
inc
test
mov
push
xchg
das
subl
cmpb
lods
mov
add
in
mov
insl
faddl
cli
or
mov
inc
push
push
leave
inc
xchg
mov
out
movb
add
jne
adc
arpl
add
fstpl
rcl
jg
ds
in
mov
mov
out
jg
adc
or
mov
pop
mov
jg
and
arpl
aam
in
pop
xchg
xor
jnp
add
push
int3
orl
cmp
aam
scas
push
repnz
in
mov
hlt
mov
xchg
add
mov
mov
add
rol
add
jae
and
add
add
fdivl
sbb
shl
dec
add
mov
or
add
add
mov
mov
sbb
and
mov
test
into
pop
lods
call
jmp
out
outsb
icebp
add
sarb
mov
cwtl
jge
push
cmpsl
push
sbb
adc
pop
inc
test
gs
ret
add
mov
mov
cmp
push
mov
push
andb
push
scas
out
push
cmp
dec
cmc
jns
repnz
mov
adcb
adc
add
lret
repnz
xchg
ljmp
mov
xor
add
mov
add
cmp
or
add
xlat
pop
fdivrp
cmovle
add
decb
and
mov
mov
adc
adc
push
jne
push
ds
add
cltd
rol
lods
ja
or
mov
pushf
rolb
je
mov
dec
or
mov
add
enter
and
jo
into
mov
pop
mov
add
into
sbbb
sub
mov
add
add
mov
orb
int
aas
shlb
push
neg
pop
std
mov
xor
pushl
jmp
mov
movsl
xchg
xor
out
adc
push
out
aas
sbb
dec
je
mov
sbb
loopne
jge
je
add
mov
mov
lret
arpl
dec
aas
pop
mov
test
icebp
and
jmp
pop
sub
mov
mov
sbb
dec
mov
imul
dec
inc
sub
mov
mov
ficomps
push
test
js
stos
mov
je
mov
mov
icebp
lds
cmpsl
out
call
shlb
sbb
cmp
scas
and
mov
lret
jg
in
movntq
ljmp
js
mov
dec
add
mov
mov
push
aaa
xor
add
mov
mov
xor
fdivs
outsb
movb
sti
xchg
cmp
mov
mov
mov
jnp
fdiv
fimull
in
mov
mov
add
call
daa
lcall
xchg
sub
add
das
fwait
clc
data16
add
cli
int3
and
mov
inc
testb
add
add
call
stos
sub
mov
iret
daa
aad
sub
imul
mov
test
push
mov
ret
cld
lds
fsubrp
sbb
popf
lea
aaa
xchg
inc
add
data16
sub
scas
mov
cltd
dec
xor
stos
mov
int
pop
sbb
jl
add
sbb
je
daa
out
inc
mov
ja
shlb
iret
nop
add
xor
mov
add
les
shrl
enter
dec
add
dec
add
ficoms
movsb
lods
or
mov
jnp
cmp
sbb
arpl
and
mov
jo
jns
bound
popa
inc
add
outsb
inc
add
cltd
xchg
sbb
cmp
mov
xchg
call
sub
mov
mov
movsb
add
arpl
je
push
imul
xchg
lcall
inc
in
xchg
jne
mov
fwait
fwait
dec
add
fcomp
fiadds
fmul
add
add
mov
in
data16
clc
add
push
sub
mov
push
push
inc
add
add
mov
dec
out
sahf
pop
gs
roll
add
sbb
sbb
pop
add
pop
shr
repz
mov
mov
mov
add
sub
mov
add
pop
push
jae
cmpsl
movsl
out
fwait
dec
add
add
inc
add
insl
repz
call
mov
repz
inc
push
jle
and
cmp
push
push
jecxz
je
lret
inc
xchg
push
lds
mov
add
mov
and
mov
add
pop
js
dec
ficoml
es
inc
add
xchg
imul
mov
xor
inc
add
inc
hlt
sbb
jbe
and
cmp
cmp
mov
out
fwait
inc
scas
push
pop
lcall
add
arpl
repz
ret
mov
xchg
lret
sbb
lret
in
push
jns
aam
jo
dec
ret
in
jg
add
fwait
jg
mov
sbb
xchg
test
shrb
jl
clc
loopne
mov
add
das
ret
cmp
sahf
test
mov
outsl
or
shr
andl
adc
mov
add
mov
dec
pushf
xchg
mov
add
ret
xor
xor
shlb
loope
pop
outsl
pop
dec
push
fidivl
jo
xor
add
test
out
cmp
dec
add
aaa
and
add
push
push
xor
adc
and
mov
sub
mov
bound
add
cs
xor
jo
xchg
arpl
dec
add
add
add
sbb
inc
xchg
adc
mov
sahf
or
jae
aad
xchg
imul
add
xchg
sub
add
enter
xor
add
rclb
add
pushf
and
fnstcw
jbe
add
inc
add
xchg
jbe
pop
cli
sbb
mov
cmp
dec
xchg
and
cmp
out
adc
add
jle
repz
add
sbb
test
dec
shrl
int3
and
mov
mov
cmp
mov
xor
mov
cmp
das
adc
xchg
jb
pop
adc
sti
clc
sti
xor
aas
int3
sar
add
test
jbe
daa
ljmp
add
ljmp
rcrb
ss
jp
add
fldt
add
dec
leave
sarl
push
cmpsl
mov
cmp
jmp
movsl
sbb
jmp
pop
mov
add
aas
jns
pop
mov
cmp
icebp
mov
xor
cmpsb
insl
scas
sub
mov
mov
add
addl
lret
fucomp
repz
aad
add
xchg
ret
out
mov
lea
test
pop
add
loope
mov
std
sbb
add
add
mov
push
dec
push
in
pop
cmc
ds
jp
pop
add
mov
or
mov
dec
fsubrs
push
out
lods
negl
add
or
sub
test
mov
mov
xchg
push
jmp
mov
imul
lods
or
adc
inc
cmp
mov
movsb
push
cmp
fnstsw
repnz
es
add
mov
mov
dec
lret
and
mov
add
fwait
lret
cld
iret
scas
stc
in
mov
xchg
jecxz
fwait
cmc
mov
insb
add
adcl
sbb
jle
sub
inc
add
mov
loop
stos
pop
addr16
xchg
fwait
mov
add
cmpsl
add
mov
cmpsl
bound
stc
mov
shll
mov
and
pop
mov
and
mov
xchg
dec
and
inc
xchg
lock
sahf
mov
xor
aaa
test
into
shrb
ljmp
mov
rcl
xor
adc
cwtl
cmp
add
mov
add
bound
rolb
add
mov
mov
inc
add
loope
es
add
mov
xor
add
mov
popf
add
mov
scas
xor
inc
add
jp
and
dec
scas
pop
cmp
das
sub
mov
fmul
movsl
xchg
test
push
add
mov
ja
xor
add
jle
add
add
add
lret
mov
mov
xor
in
add
in
add
mov
and
mov
xor
mov
test
inc
add
sti
aas
pop
push
pop
inc
inc
sbb
ds
mov
lcall
test
sahf
sub
mov
es
jae
cmpsl
repz
cmp
adc
push
xchg
jg
in
test
inc
push
ret
jae
rcll
das
test
negb
shlb
cs
xchg
int3
inc
push
sub
mov
stc
cld
test
xor
add
push
and
mov
cmpb
data16
push
mov
sub
adc
lcall
cmp
and
xchg
cmpsb
push
out
ds
in
into
or
pusha
add
repz
lcall
add
add
shr
int3
jnp
jns
movl
fucom
cmp
or
mov
outsl
push
add
mov
add
out
sub
leave
fldt
and
mov
mov
imul
inc
lock
cli
js
push
xlat
scas
cmp
repz
cmp
insl
roll
add
aam
nop
insb
add
cmp
push
lret
mov
dec
add
cmpsb
incb
bound
add
mov
push
or
xor
fimuls
mov
pop
psubq
jge
sub
mov
add
add
sbb
sbb
nop
jno
add
enter
call
push
cmp
push
pop
mov
inc
aaa
and
cmp
cmp
outsl
mov
mov
in
cwtl
jg
pop
shufps
testl
dec
pop
pop
push
cmp
and
mov
aam
insb
add
mov
jo
dec
ret
add
sub
xchg
aas
mov
inc
add
xchg
sbb
fisubrs
dec
cmp
push
push
adc
pushf
movb
in
popa
jge
ja
sub
add
sti
fwait
cltd
cmc
jge
jae
xchg
and
mov
insl
movsl
divb
sub
mov
fsub
mov
push
inc
pop
push
mov
fnstsw
pushf
mov
mov
mov
inc
mov
add
int3
xor
cmpsb
and
cs
inc
ret
leave
and
mov
orl
mov
add
cmpsl
rol
fstp
dec
icebp
dec
jnp
andl
sub
add
ds
cli
jbe
dec
fwait
lcall
cmpsl
xor
jbe
inc
in
imul
fmuls
out
iret
das
ds
inc
add
push
push
inc
add
pop
mov
lret
dec
jmp
sub
mov
mov
data16
stc
ficoms
fldl
in
xchg
test
mov
xor
or
and
mov
lcall
jno
cltd
pop
dec
add
mov
cmpsb
pop
sub
mov
js
mov
jo
push
add
inc
mov
out
mov
jnp
out
stos
pop
sar
xchg
scas
xchg
jne
pop
and
mov
jl
add
mov
inc
andl
add
add
jge
inc
jge
mov
inc
sub
fdivrl
imul
or
loop
addb
add
pop
sub
nop/reserved
mov
out
jle
jge
xor
call
add
adc
sub
mov
add
jmp
sub
xchg
xor
add
pop
push
cmc
dec
inc
push
outsb
pusha
add
add
push
lock
cmp
pop
dec
pop
leave
dec
adc
add
mov
les
sub
cld
pushf
pop
or
mov
pop
pop
mov
jl
jae
test
push
dec
add
gs
sbb
add
lea
pushw
gs
ljmp
lret
mov
ds
hlt
add
jecxz
ja
adc
pop
inc
push
jg
out
sahf
outsb
dec
icebp
xchg
js
jp
ds
add
cwtl
mov
je
dec
add
icebp
mov
hlt
ficomps
fldl
push
mov
stos
test
jnp
in
mov
mov
xor
cmp
add
fdivl
pop
inc
pop
sbb
jb
mov
sub
mov
jb
xchg
mov
aad
add
pop
outsb
es
fwait
cwtl
lds
shrl
mov
sbb
test
mov
aam
fsubrl
mov
add
sbb
add
xor
test
sbb
mov
xchg
push
inc
fisubrs
or
mov
in
jnp
stos
adcl
add
sbb
aad
inc
add
test
and
mov
cmp
sub
fistpl
and
pop
lock
mov
ja
xor
mov
inc
push
out
call
sub
cli
inc
cmp
jnp
pushf
mov
rclb
sahf
negb
push
inc
mov
loop
add
call
add
adc
add
pop
pushf
inc
ds
in
jns
fsts
ljmp
mov
jl
mov
add
sbb
mov
mov
mov
shll
mov
nop
push
addr16
pop
inc
push
and
push
jmp
add
lods
lds
int3
or
mov
in
shll
aaa
push
aaa
mov
add
inc
frstor
sbb
mov
rcrb
lea
jnp
add
data16
sar
insb
add
mov
xlat
push
rcrl
or
add
mov
pslld
xor
aaa
pop
hlt
rorl
pop
ss
add
adc
add
stc
movsb
xchg
push
adc
in
add
outsb
cmpb
push
insb
add
or
jbe
dec
andb
push
sbb
cmc
sahf
pop
pop
mov
push
mov
mov
push
daa
in
aam
push
imul
cmp
fnstcw
adcl
add
shrl
mov
nop
adc
rcll
dec
ror
add
mov
stos
addr16
cmp
std
push
adc
aad
dec
pop
cwtl
dec
jp
stc
imul
rsm
or
sub
mov
add
lea
pop
mov
ret
call
call
into
pandn
cmpsb
cmp
cwtl
in
sub
jae
add
xchg
cmp
mov
add
icebp
adcl
and
mov
and
in
mov
jg
testl
pusha
add
pop
shll
add
add
pop
daa
pop
or
adc
test
stos
xchg
sbb
dec
add
mov
jmp
orl
jle
mov
pop
push
xchg
push
movb
push
cmp
out
xchg
xorb
sub
mov
jg
lahf
mov
hlt
stos
mov
mov
mov
and
mov
mov
adc
or
mov
mov
add
mov
sbb
fistl
cmpsb
rcrl
add
mov
icebp
addr16
pop
outsb
inc
fucomi
adc
add
imul
push
fisubrl
add
dec
and
jp
inc
mov
add
push
popa
sbb
mov
add
mov
ljmp
add
add
inc
stc
and
dec
ljmp
push
cmp
enter
mov
idivl
add
xor
add
pushf
mov
dec
xchg
mov
jg
loope
mov
out
xchg
jbe
enter
dec
loopne
and
jbe
xchg
adc
lcall
push
mov
pop
mov
sbb
aad
enter
mov
cmp
add
adc
add
dec
cld
call
in
popl
cli
cltd
test
mov
mov
pop
inc
mov
add
mov
mov
test
flds
cmp
mov
cli
hlt
jecxz
mov
push
sti
mov
add
add
pop
cwtl
call
add
add
mov
fidivrs
frstor
ss
jns
xchg
lcall
fucomi
arpl
psrad
xlat
sbb
mov
add
mov
push
not
scas
leave
and
outsl
adc
cs
mov
xchg
bound
ret
add
add
icebp
fildl
add
insb
add
push
xor
mov
fcom
out
mov
jmp
sti
arpl
add
xchg
addl
and
stc
in
mov
and
add
les
faddl
push
into
loope
ja
test
adc
push
aaa
sub
out
lods
or
movsb
daa
inc
jae
popf
sub
push
loope
inc
and
sub
fwait
xlat
in
ds
call
js
xor
push
cmp
push
pusha
add
xor
cmp
inc
add
mov
cmp
mov
or
test
adc
out
scas
xchg
lret
lret
jbe
es
pushf
iret
aam
adc
jmp
in
xor
call
pop
or
pop
and
push
sbb
imul
xor
aaa
sbb
jo
xchg
xchg
cmp
ficoml
mov
or
mov
adc
ja
jmp
sub
mov
in
inc
add
push
ja
out
lods
stc
xor
pop
mov
inc
cwtl
or
lret
ret
or
push
shll
rep
add
sarl
scas
pop
or
inc
add
mov
add
outsl
movsb
sbbb
cmp
pop
xor
xchg
xchg
sub
call
jle
cwtl
fsubl
pop
jns
pop
pop
inc
push
in
scas
sbb
test
repz
pop
orb
add
xchg
mov
push
rclb
mov
addr16
xchg
scas
mov
mov
dec
dec
popf
movsb
testl
push
iret
test
jnp
mov
popa
ds
testb
xchg
adc
sub
mov
pushl
jecxz
popa
outsl
insb
add
adc
xor
shll
dec
sub
mov
add
insl
jnp
mov
rcr
push
lcall
xchg
jns
push
cwtl
add
mov
addr16
cmp
lret
sti
mov
dec
fistpl
mov
dec
lods
push
mov
sbb
add
sarb
je
push
or
add
add
or
mov
lahf
sub
mov
dec
hlt
stos
js
mov
add
mov
loop
mov
add
mov
dec
mov
cld
xor
xor
sub
fcmovbe
cmp
in
mov
fistpl
jae
sub
xchg
sub
cmp
lcall
push
in
dec
add
ja
adc
aas
shrb
pop
jge
sbb
out
hlt
pop
sbb
sbb
push
addb
jl
lods
aas
fiadds
sbb
sbb
push
inc
add
in
jle
out
fadds
dec
mov
jae
adc
or
mov
test
mov
adc
mov
scas
dec
ds
cmp
mov
bound
dec
mov
inc
or
test
cmp
movsb
iret
js
mov
cmc
mov
add
mov
out
scas
add
notb
or
mov
ja
js
mov
cmpl
jns
imul
int3
pop
or
mov
das
xchg
xor
push
xlat
cmc
mov
mov
add
add
cmpsl
in
dec
aaa
nop
insb
add
aas
push
loopne
pushf
sbb
mov
mov
mov
iret
or
mov
call
dec
ret
out
push
ret
mov
daa
dec
dec
pushf
or
mov
jno
int3
and
mov
add
enter
dec
mov
push
imul
push
mov
mov
cmp
add
les
arpl
push
std
adc
push
or
adcb
add
xchg
pop
jb
cmp
lds
inc
int3
mov
sti
or
pop
lret
add
mov
mov
ljmp
aam
fdivl
add
movl
add
movsb
imul
add
in
jp
xchg
jo
xchg
ljmp
xor
xchg
adc
hlt
loop
push
gs
add
add
popf
or
mov
imull
add
mov
sub
mov
add
aam
push
sti
dec
popa
test
add
mov
dec
sub
sti
ljmp
jbe
scas
and
nop
mov
add
rclb
push
decl
jg
sbb
shl
stos
add
add
pop
xchg
pop
aam
adcl
sbb
icebp
and
mov
in
xchg
cmpsb
mov
out
push
sbb
mov
into
loope
cmp
sbb
fcomps
and
jecxz
lds
and
add
mov
add
cltd
movsl
ja
add
mov
arpl
push
mov
ret
out
pop
jg
dec
outsl
les
add
cmpsb
or
adc
imul
mov
add
push
xlat
lds
adc
add
jp
sbb
cmp
jae
test
adc
test
mov
pusha
add
in
scas
dec
mov
mov
dec
inc
sub
je
adc
inc
test
adc
push
pop
dec
out
jecxz
imul
lahf
sti
sub
dec
add
sub
enter
outsl
xor
insl
push
shrl
mov
in
mov
mov
imul
fsubrl
sub
pushf
lahf
jb
and
mov
test
jo
mov
add
and
cli
and
outsl
iret
xlat
rol
jl
push
daa
addl
jae
add
adc
out
lea
loopne
pop
ss
mov
add
sub
hlt
or
mov
adc
ret
dec
add
lock
dec
add
lods
hlt
cmp
pushf
popl
mov
sub
mov
dec
cmp
imul
fisubl
aas
cmp
or
outsb
data16
jns
inc
js
jl
sbb
sbb
in
pusha
add
hlt
subb
xchg
or
mov
add
clc
in
movsl
fiadds
add
push
imul
shrb
jmp
add
pusha
add
mov
mov
cmpsl
cwtl
mov
les
dec
cmp
es
icebp
mov
sbb
mov
sbb
insb
add
xchg
outsl
push
ss
and
mov
aas
fwait
xor
mov
dec
add
aad
push
enterw
sub
ljmp
mov
mov
scas
sub
pop
mov
and
lret
pop
mov
insl
fmul
mov
push
xchg
push
push
ja
mov
mov
add
push
dec
mov
add
sbb
hlt
mov
inc
add
add
test
mov
add
inc
loope
add
xor
xchg
mov
inc
lret
shlb
shr
xor
xor
add
add
leave
add
push
test
xor
fisubl
mov
cmp
mov
ret
stc
lock
lods
sbb
cli
out
inc
add
and
mov
cli
movsl
jp
scas
xor
adc
cs
cmp
fisttps
pop
push
push
repz
ficompl
movsl
jno
mov
inc
les
movsb
loope
lds
mov
mov
mov
bound
nop
cmc
mov
or
scas
xchg
int
jecxz
gs
jmp
dec
ljmp
pushf
xchg
push
dec
push
aas
in
nop
pop
sbb
pop
call
imul
mov
add
cltd
mov
ja
push
repnz
mov
mov
adc
mov
ficoms
dec
repnz
xor
sarl
fmull
shr
xchg
jnp
imul
in
xchg
out
jecxz
mov
add
add
adc
sub
push
mov
jae
add
iret
arpl
mov
aas
or
sbb
xchg
pop
push
es
add
sbb
subb
test
pop
scas
fwait
dec
sbb
mov
mov
loop
sub
je
dec
mov
inc
add
pop
mov
cwtl
xchg
mov
add
xchg
ljmp
cmp
flds
add
lea
pop
dec
lea
add
push
add
out
rcl
outsl
cmpsb
aas
repnz
mov
xor
adc
sahf
mov
jbe
xor
cwtl
cwtl
sub
test
xchg
mov
nop
lds
push
cmpsl
movsl
cwtl
or
mov
mov
mov
sti
xchg
lahf
mov
mov
mov
les
icebp
lods
add
jbe
mov
mov
mov
mov
rclb
push
sbb
add
outsb
inc
test
int3
jnp
sbb
and
pop
sarl
sub
mov
push
sub
mov
repnz
cli
cmp
sub
fdivrs
ret
add
arpl
cmpsb
rcrb
sahf
jmp
cwtl
or
stos
cli
push
outsb
mov
stos
das
faddl
outsb
out
mov
cltd
jg
xchg
pop
fdivs
xchg
and
aad
push
pop
cld
int
imul
jne
add
jbe
sbb
sti
mov
xorb
insb
add
cmp
roll
pusha
add
stc
lea
pop
adc
out
push
mov
mov
xchg
push
push
adc
adc
cmp
mov
std
shlb
push
movsl
mov
push
push
loop
inc
mov
mov
or
fisttps
mov
jecxz
sub
push
push
add
mov
mov
imul
loope
div
xor
and
push
jecxz
std
inc
add
cmp
sub
loopne
add
add
mov
mov
mov
add
adc
rcr
xor
or
mov
mov
ds
iret
jbe
xchg
cmp
rcll
jbe
or
leave
ss
inc
cmpsl
xor
and
mov
hlt
adc
mov
xor
mov
xchg
cmp
and
pop
in
sarb
sahf
mov
or
sbb
dec
xor
leave
sub
push
pop
fmulp
push
push
jns
jle
xor
push
add
mov
inc
jle
xchg
aam
outsb
fstpl
or
mov
push
push
inc
into
mov
aaa
push
xchg
sahf
cmpsb
outsb
xchg
add
pusha
add
add
mov
add
cmc
std
push
sti
jmp
add
in
add
sbb
add
push
sbb
in
nop
lods
sbb
jb
int3
sub
mov
lahf
push
mov
cmc
mov
mov
pop
sub
push
pop
pop
fwait
sub
mulb
add
pop
js
je
dec
add
xor
dec
add
enter
test
iret
cmpsb
movsl
in
dec
ss
jge
xor
nop
aad
inc
add
and
or
lock
scas
sub
popf
pop
pop
jno
cmpsb
add
cltd
inc
out
add
dec
mov
shrb
in
adc
push
out
pop
je
int3
pusha
add
mov
cmp
mov
cmp
ss
sub
les
adc
mov
out
arpl
lcall
add
sub
or
mov
xchg
inc
in
pop
or
mov
inc
and
inc
fimull
aas
in
add
mov
add
mov
loop
add
mov
imul
cmp
es
sub
mov
jne
popf
lahf
in
mov
add
inc
fbld
sub
test
stos
clc
scas
add
mov
inc
add
jbe
cltd
lret
push
sti
push
pop
mov
inc
push
ret
adcl
into
dec
add
or
mov
lds
in
sub
add
mov
push
mov
jp
fmuls
mov
sub
mov
ret
mov
loop
sti
sub
jmp
jmp
shrb
mov
add
cmp
and
or
add
mov
mov
ficomps
mov
xor
popf
lret
std
loop
pop
mov
mov
inc
in
mov
in
testb
pop
pop
adc
pop
jg
mov
mov
jns
gs
mov
popa
stc
push
lret
push
icebp
insb
add
les
mov
sbb
xchg
jg
add
lds
add
adc
inc
add
mov
stc
fcoml
fdivp
mov
les
mov
bswap
stos
iret
or
mov
cltd
mov
das
push
xor
jb
mov
fcompl
stos
jl
out
push
rcll
imul
daa
loop
sbbl
jecxz
or
mov
jmp
cmp
in
mov
cs
cmc
push
adc
pop
add
mov
cmp
mov
jle
lock
push
pop
inc
add
mov
add
loope
sti
imul
xchg
shrb
mov
lret
add
ret
mov
cmp
mov
mov
xchg
cld
xchg
stos
jnp
add
icebp
xchg
push
pushf
xchg
pop
sub
inc
jno
inc
add
add
scas
pushf
dec
lock
inc
stos
dec
add
add
mov
lea
xor
sub
gs
add
das
adc
lret
xchg
push
sub
xchg
pop
mov
mov
cmc
pop
das
sarb
mov
imul
es
add
ds
add
add
out
and
in
jge
cs
in
std
fmulp
mov
xor
imul
std
sub
mov
pop
inc
scas
movsb
xchg
adc
ds
mov
add
aas
and
and
sub
je
sbb
outsb
dec
shl
sbb
call
fsts
mov
sbb
lret
and
mov
inc
add
add
push
test
add
shlb
nop
sub
mov
mov
sahf
lret
xor
and
cmp
les
push
rcll
sub
mov
mov
cmpsl
inc
add
mov
xor
lods
int3
loope
cmovae
in
hlt
adc
mov
add
cmp
xchg
jmp
sti
mov
fisubs
inc
pop
xchg
mov
push
movsl
sti
mov
add
push
push
scas
cli
mov
push
add
and
mov
xor
add
xchg
mov
push
sbb
sti
repnz
sbbb
xchg
icebp
ret
xor
push
sti
lods
xchg
inc
mov
gs
out
xlat
dec
jns
popa
ficomps
inc
mov
stos
cld
addr16
loopne
outsl
imulb
adc
mov
xchg
test
inc
mov
add
test
cwtl
scas
jo
pop
pop
lahf
data16
jbe
inc
add
stos
gs
mov
lahf
in
mov
dec
add
iret
ljmp
mov
out
decl
push
in
test
inc
in
aaa
ret
xchg
and
mov
out
mov
cltd
ljmp
es
mov
pusha
add
mov
arpl
xchg
ja
lods
testb
push
lahf
cmp
sbb
addl
add
aaa
fmul
fnstsw
sbb
fstp
popf
data16
dec
inc
mov
ret
push
xchg
les
adc
dec
aam
push
lods
lock
movsb
insb
add
sbb
rcrb
push
gs
cmpb
movsb
imul
adcl
outsb
vaddsd
add
cmp
movsb
cmp
bound
adc
jp
add
sub
mov
mov
add
adc
das
adc
movb
clc
pusha
add
xchg
ja
mov
inc
add
pop
jo
lret
jbe
xchg
jns,pn
add
loopne
pop
clc
in
mov
gs
xor
in
cmpl
jbe
lahf
testb
rolb
pop
jne
mov
pop
stos
jmp
cld
fstcw
inc
lock
movsl
cli
inc
add
flds
stos
jo
cs
test
clc
movsl
jb
add
sbb
and
mov
fldenv
mov
mov
cld
cmp
into
jp
repz
out
add
cltd
dec
ja
mov
std
adc
pusha
add
popw
mov
scas
testl
lods
sub
ljmp
mov
add
scas
sbb
add
outsl
xor
push
mov
sbb
mov
test
and
int
loop
xor
add
sbb
adc
xlat
rolb
shl
orps
or
pop
aam
xlat
scas
mov
mov
add
adc
inc
add
movl
or
jbe
ds
add
pop
pop
cmp
es
popa
add
push
and
mov
mov
mov
dec
lock
aam
repz
lret
add
xchg
push
repz
jae
push
mov
testl
cli
mov
mov
jecxz
push
push
outsb
cmp
and
jge
mov
js
jb
iret
adc
lret
xor
mov
dec
sub
pop
fisubs
inc
outsl
out
xlat
in
cmp
insl
sub
add
add
adc
xchg
fisubrs
mov
cmp
dec
xor
test
inc
imul
mov
jae
pop
sub
xchg
scas
sbb
out
sub
mov
mov
or
outsl
cmp
nop
sub
loope
rol
ja
and
mov
add
in
dec
loopne
aas
cmc
data16
in
pop
jns
dec
or
mov
mov
fidivrs
or
mov
out
loopne
loope
sub
mov
add
test
mov
jg
dec
mov
add
push
out
push
movsb
lret
cmc
fldt
push
mov
pop
dec
mov
xchg
xor
test
and
mov
xor
scas
call
xor
aam
ficompl
mov
push
xchg
popa
out
push
add
sbb
add
add
cmp
add
ret
enter
add
mov
aam
push
fsubrs
iret
std
mov
xchg
icebp
es
mov
cmp
insb
add
mov
enter
or
inc
stos
imul
jmp
push
subl
int3
sahf
daa
shr
out
out
cmp
vpsllq
jmp
mov
and
mov
jne
mov
fsub
xchg
sub
shrl
sub
mov
jge
mov
add
mov
sub
mov
inc
cltd
xor
lahf
int
fldcw
lea
and
stc
adc
push
lds
mov
and
pop
test
icebp
out
adc
outsl
push
mov
push
popf
cltd
pop
nop
xchg
pop
shll
mov
dec
ss
aaa
jl
jbe
out
outsb
mov
lret
out
jb
ds
mov
cmp
fcoms
filds
add
outsl
sbb
aas
pop
or
mov
jmp
jnp
push
jg
fnstenv
outsb
idivl
fmull
cmc
xchg
inc
push
fisttpl
mov
bound
jbe
aam
scas
mov
insb
add
add
test
lea
loopne
sub
jo
clc
cmp
and
mov
mov
js
jecxz
mov
sub
je
int3
out
jnp
lods
dec
add
or
mov
mov
mov
and
mov
js
dec
sub
mov
and
jp
or
loop
movsl
or
outsb
dec
add
adc
into
add
sub
mov
je
ja
lcall
add
mov
xor
mov
stos
add
and
lds
mov
bound
lock
xchg
lods
adc
mov
pop
repnz
imul
loope
adc
xor
fwait
push
push
mov
pop
fwait
ret
adc
lods
sbb
or
mov
push
pop
test
jg
mov
lods
sbb
add
adc
gs
iret
mov
adc
cmp
roll
add
inc
aam
mov
or
mov
push
pop
push
or
mov
rcrb
add
lods
je
pushf
lret
mov
inc
pop
loop
jecxz
lods
and
mov
jb
mov
mov
cmp
testl
cltd
fwait
repnz
js
jl
outsb
movsb
lds
adcb
sub
imul
pop
psllq
mov
mov
xchg
dec
push
stos
pushf
nop
and
sbb
and
dec
pop
mov
jo
cmp
sub
adc
inc
aad
stc
fiadds
mov
popf
mov
mov
mov
mov
repnz
pop
mov
popa
roll
jnp
add
add
add
test
inc
clc
xor
int3
jbe
icebp
int3
shll
not
jp
inc
adc
fcoml
push
jb
sbb
iret
xchg
mov
cmp
add
fldz
sbb
test
jp
dec
inc
add
and
mov
xor
arpl
lock
inc
push
in
ret
test
insl
cmc
mov
cmp
lea
push
ror
dec
imul
dec
pop
cs
jo
cmp
add
repz
adc
out
fwait
sahf
sbb
test
mov
cmc
fidivrs
cmc
scas
sub
jb
faddl
add
mov
add
stos
mov
mov
lret
movsb
adc
mov
add
and
mov
sub
mov
sbb
inc
rcr
jmp
ficomps
cmpsb
sbb
cli
movsl
and
arpl
les
incb
xchg
adc
and
mov
mov
clc
pop
push
outsl
push
outsl
pop
cmpsl
jno
fidivs
ffree
mov
fists
add
add
pop
inc
outsl
xchg
sub
add
aaa
sub
mov
ficomps
jp
jns
in
imul
sarb
push
std
dec
pop
fsts
add
add
insb
add
or
dec
test
cltd
mov
fsubr
test
shl
loop
out
xor
sarl
icebp
jo
and
mov
mov
xchg
and
push
sti
daa
push
incb
push
arpl
test
mov
pop
dec
jne
sub
fldt
add
inc
rcl
iret
and
mov
add
mov
shlb
loopne
lea
xchg
in
or
and
bound
lods
mov
xchg
jmp
das
test
sbb
inc
cmp
das
rcll
scas
sbb
fisttps
enter
add
pop
pop
push
or
mov
mov
loopne
lret
test
add
aaa
filds
mov
or
mov
mov
das
loop
add
mov
imul
add
addb
mov
add
mov
nop
outsb
mov
stos
inc
inc
pop
in
repz
test
jmp
dec
xchg
notb
push
dec
add
sub
call
leave
addr16
jae
pop
and
and
dec
clc
ja
ds
push
roll
jno
adc
jo
stc
mov
outsl
pusha
add
mov
cmp
mov
cmp
add
push
cmpsl
mov
daa
adc
and
out
and
mov
mov
inc
add
mov
push
xchg
cmc
lcall
inc
stc
mov
pop
xchg
push
lret
add
mov
std
mov
adc
dec
sbb
inc
jmp
mov
cmp
outsl
cs
pop
push
push
loop
cmpsb
loopne
jp
add
and
jmp
fldenv
jmp
xor
fdivrs
mov
mov
cld
loopne
mov
fsubrs
dec
add
hlt
sbb
mov
pop
aad
cmp
ret
jbe
xorl
fwait
add
add
adc
jno
mov
call
cltd
and
xor
add
std
lret
mov
sbb
jno
pop
sbb
stos
addb
leave
test
sub
clc
lods
stc
nop
inc
mov
mov
dec
rclb
ret
mov
nop
xor
test
lea
stos
lret
imul
and
test
lcall
cltd
jae
aaa
sub
mov
das
out
cmp
cltd
pop
scas
fcompl
adc
mov
xchg
in
data16
fwait
jno
push
pushf
mull
mov
dec
test
out
cmp
adc
inc
add
stc
push
xchg
cmp
mov
mov
inc
add
mov
popf
and
mov
add
movb
int3
leave
sub
dec
mov
mov
mov
add
jno
push
in
scas
mov
add
xchg
cltd
mov
mov
scas
out
pop
or
mov
mov
xchg
das
sub
mov
mov
add
push
cmp
and
mov
sub
xlat
cmp
mov
lcall
pop
sub
jae
cmp
mov
sbb
jecxz
add
pushf
fcmove
cmp
addb
jmp
or
mov
mov
jns
lcall
mov
mov
ja
or
push
fmulp
jle
cmc
pop
ja
or
mov
mov
dec
push
sti
xor
or
iret
imul
into
das
xorb
mov
mov
fdivs
pop
adc
adc
data16
mov
pushf
push
mov
bound
and
mov
adc
mov
add
jae
ficoml
cmp
ret
lock
push
mov
and
mov
jo
mov
mov
mov
push
insb
add
or
stos
fidivs
jecxz
bound
cmpsl
andb
loope
push
fdivs
rcl
xchg
gs
dec
sahf
imul
sahf
adc
jo
xchg
ret
repz
ljmp
push
sub
mov
call
adc
xor
mov
rolb
stos
das
dec
add
mov
add
mov
ljmp
loop
jle
iret
pop
aaa
fsubr
and
add
lods
adc
into
clc
add
and
mov
fcmove
and
mov
fadds
shlb
xchg
orl
loope
out
repz
jmp
fwait
jle
jle
xlat
and
mov
ss
xor
mov
add
adc
dec
add
mov
ss
xchg
fdivrp
sub
mov
mov
scas
add
add
addr16
arpl
mov
pop
mov
jmp
pusha
add
xor
adc
test
inc
aad
int3
xor
inc
add
call
nop
and
push
mov
add
fcoml
cmpsl
sbb
mov
sbb
mov
xchg
loope
add
mov
cmp
add
xlat
pop
pop
out
clc
or
sbb
inc
add
pop
ja
sub
mov
adc
data16
sub
imul
cld
or
sbb
xlat
in
add
cmc
nop
pop
shl
add
aas
adc
jge
cmp
iret
push
mov
rclb
test
add
mov
mov
mov
mov
int3
pop
xchg
call
dec
sub
jnp
ret
push
add
xchg
sub
mov
add
cwtl
and
adc
mov
test
mov
out
jbe
daa
pop
xchg
aam
arpl
xor
add
push
push
adc
loope
pop
pop
movsb
outsl
push
xchg
scas
jge
xor
sbb
push
jo
sub
mov
insb
add
sub
xor
test
mov
jne
xchg
orb
lcall
pop
cltd
mov
inc
add
clc
xor
and
pop
in
imul
and
mov
shl
insb
add
and
mov
movsl
mov
loop
test
or
in
outsl
mov
sbb
cmp
dec
add
jl
addb
mov
mov
dec
add
mov
cs
mov
mov
mov
add
xchg
xor
jo
lock
lea
mov
into
or
leave
mov
add
pop
movsl
lahf
xchg
add
push
xor
in
aam
and
imul
add
outsl
lock
ja
js
dec
add
mov
add
jnp
cmp
cmp
and
mov
aaa
mov
shll
jp
dec
jnp
jle
pop
adc
add
int3
push
out
jae
mov
add
mov
jnp
sbb
out
or
add
sub
mov
xchg
push
jg
das
sub
add
mov
push
stos
repnz
fwait
shrl
or
add
add
add
inc
xor
scas
sub
mov
sub
add
les
or
aaa
shrb
push
sbb
add
add
sti
out
iret
jmp
ss
xchg
in
mov
add
and
pop
outsl
inc
add
cmp
jae
in
call
add
mov
fwait
cmc
mov
push
idiv
les
lahf
push
pop
jnp
add
cmp
jns
jle
add
lahf
adc
jo
outsl
inc
jmp
dec
sbb
je
and
push
test
int3
add
sub
inc
inc
xchg
xor
jbe
dec
add
cmp
sbb
mov
sbb
arpl
mov
nop
loopne
add
mov
adc
inc
js
inc
or
cwtl
sbb
add
into
enter
ds
inc
ret
enter
add
adc
fcoms
add
mov
add
lods
hlt
loope
push
push
pop
jno
xchg
pop
xchg
inc
sbb
movsl
adc
movsl
notb
in
mov
out
mov
add
add
mov
mov
dec
out
aad
imul
push
xchg
stos
push
adc
icebp
xchg
je
and
jb
stc
popf
jno
add
or
testl
xor
push
fstp
mov
lret
adc
lret
aad
aaa
fldcw
mov
add
cmpb
shrb
pop
int
in
mov
cmp
mov
adc
mov
jb
jae
das
es
push
adc
mov
jecxz
sub
mov
jnp
add
aas
or
fwait
outsb
subb
add
pop
push
cmpl
inc
clc
xchg
into
xlat
mov
sbb
rorb
push
lea
dec
cmp
add
fisubrs
lods
inc
add
out
leave
mov
loop
sarb
test
cld
iret
cmp
add
xor
mov
in
fdiv
xchg
mov
add
xor
and
mov
outsb
cli
push
cmpl
push
dec
add
jae
sub
dec
add
dec
add
mov
aam
sub
mov
add
mov
mov
and
hlt
int3
or
add
mov
stos
ficomps
sub
mov
fildl
daa
xor
jne
add
and
mov
pop
mov
iret
mov
push
pop
sbb
inc
popa
add
mov
rcrb
sub
mov
jno
xchg
inc
adc
pusha
add
addr16
pop
lahf
cmp
fbstp
jb
add
add
fstpt
mov
sub
add
push
mov
add
inc
add
mov
sub
mov
add
mov
popl
inc
mov
pop
cltd
test
int3
pop
cmp
lret
into
adc
call
mov
sbb
add
adc
iret
pop
data16
mov
bound
dec
add
fnsave
bound
push
aam
add
jmp
pop
out
cmp
mov
lret
mov
cmp
dec
push
mov
mov
add
rcll
lock
pop
push
jecxz
pop
jae
dec
movb
pushf
ret
mov
shl
out
icebp
jo
mov
fsubs
fimull
pop
push
stos
jmp
cmp
sub
shr
cltd
cltd
push
std
pop
fsubl
mov
and
mov
mov
lock
or
dec
push
mov
sub
dec
add
jns
faddl
jecxz
add
jo
dec
add
js
xchg
aas
aaa
add
aam
movsb
push
movsb
or
imul
pop
push
xchg
rorb
dec
add
xchg
jg
add
fstpt
adc
inc
push
xorl
into
filds
ss
mov
sbbb
cs
mov
and
mov
add
add
add
clc
sbb
ja
pusha
add
js
pop
push
lcall
sbb
push
sbb
enter
aad
sub
mov
push
cmc
xchg
cmp
ja
scas
jecxz
into
aad
std
mov
rcl
jne
xchg
adc
and
and
mov
xchg
je
sub
outsb
pop
or
add
mov
mov
cmp
add
data16
add
dec
add
and
pop
aam
inc
add
xor
imul
or
mov
jl
jle
inc
xor
xor
ffree
jnp
in
jnp
iret
pop
js
ja
inc
and
add
dec
in
lret
std
xchg
and
or
popl
push
addb
add
mov
mov
xorl
nop
cmp
sbb
xor
and
addb
lock
mov
push
push
mov
push
lea
adc
mov
xor
add
and
popa
jl
hlt
mov
add
add
aas
stc
xor
adc
icebp
inc
sbb
cmp
enter
adc
iret
test
int
test
mov
xor
pop
std
test
sub
leave
mov
test
sarb
shl
jp
stos
pop
lods
sub
mov
mov
stc
or
push
ss
cmp
push
lret
cmp
addr16
cmp
fiaddl
filds
jge
add
pop
shlb
rorl
mov
scas
add
mov
xchg
sbb
pop
mov
loopne
mov
test
mov
push
movsl
lret
and
ja
je
inc
add
ja
leave
inc
imul
iret
mov
or
adc
lods
adc
dec
mov
mov
mov
cmc
push
mov
add
xor
insb
add
sub
add
mov
add
mov
lret
lods
inc
add
sbb
loope
enter
pop
hlt
add
mov
add
sub
pop
inc
dec
pop
or
lret
mov
mov
std
mov
add
cmp
outsb
pop
mov
push
daa
sub
mov
xchg
ljmp
stc
mov
fstps
stos
pop
pop
aam
outsb
scas
cld
aas
jg
imul
or
mov
test
stc
push
rcrb
jae
out
std
aad
inc
popa
cmc
sbb
jbe
add
mov
mov
xor
cmpsl
bndldx
mov
insl
notl
lret
inc
lock
jnp
or
mov
cli
xor
add
add
faddl
jl
test
add
add
add
stc
call
sub
pushf
xchg
xchg
push
stos
inc
cmp
lods
adc
rolb
out
inc
add
fsubl
push
push
aaa
cmpsl
inc
xchg
add
mov
add
cmpsb
push
add
add
jp
cmp
in
mov
pushf
sub
mov
mov
pop
xor
cmp
add
mov
push
sbb
repz
enter
mov
add
push
xlat
push
xchg
jl
repz
movsb
int
mov
jg
js
out
add
add
or
fwait
sub
push
mov
ja
mov
push
addr16
call
cmpsb
mov
pop
decl
lds
ret
push
nop
cmp
cli
push
addb
add
mov
cmp
insb
add
mov
and
or
mov
add
movsl
mov
mov
mov
add
int
jmp
ja
fidivl
movsb
mov
mov
ljmp
add
xchg
push
sub
call
lds
add
aas
mov
sbb
jns
int
out
outsb
xchg
jb
mov
pop
movsl
mov
imul
scas
xor
popf
lahf
add
mov
testb
and
add
push
cmp
push
push
imul
jns
jno
and
mov
sbb
add
add
mov
add
aad
add
mov
icebp
cltd
mov
and
mov
push
daa
movsl
add
mov
clc
repz
add
add
push
ja
lcall
movsl
sub
mov
ret
push
xchg
loop
lods
ljmp
push
adc
dec
mov
ljmp
loop
out
sbb
add
jo
subl
lret
les
and
mov
xchg
mov
fwait
stc
jae
lahf
nop
cld
gs
mov
add
add
or
cmc
mov
mov
mov
test
add
and
add
xchg
mov
sub
ret
pop
je
add
or
mov
mov
and
inc
add
add
in
sbb
cwtl
movsb
outsl
jns
dec
iret
mov
mov
xlat
jb
dec
mov
dec
imul
jg
add
mov
rol
mov
mov
ljmp
xor
push
aas
pop
lds
mov
je
xorb
pop
push
xor
ss
mov
add
leave
dec
add
daa
dec
in
mov
loope
pop
mov
add
popl
mov
mov
cmpsb
clc
subl
aas
dec
mov
in
sahf
jne
inc
jbe
arpl
out
das
jle
pushf
mov
inc
insl
push
sti
adc
adc
push
sarb
pop
adc
lcall
add
mov
add
add
mov
loope
jnp
int
sarb
pop
mov
ss
mov
inc
mov
add
lock
xchg
sbb
jp
pop
out
inc
div
and
andl
mov
add
int3
push
xchg
loop
cmp
jnp
sbb
stc
mov
pop
push
mov
add
add
movsl
cwtl
mov
loop
mov
repz
add
sub
jle
int3
add
sub
mov
rolb
in
push
in
jle
popf
xor
xchg
jle
cld
and
cvtpi2ps
mov
adc
push
or
mov
inc
adc
jmp
lock
jmp
data16
cs
xchg
fwait
adc
and
lock
mov
mov
int
jecxz
push
hlt
xor
hlt
inc
cli
push
icebp
fprem
scas
mov
add
aas
dec
outsl
pop
in
int3
clc
push
jle
sub
and
stos
ficoms
mov
test
inc
add
test
and
mov
sarl
pop
leave
pop
test
fiaddl
dec
fimuls
mov
add
sahf
in
pop
mov
dec
arpl
ret
enter
adc
xlat
aaa
outsb
or
mov
and
filds
in
in
push
in
orl
mov
jb
dec
add
out
mov
gs
dec
cmp
add
push
arpl
add
add
shlb
out
aaa
mov
add
cmc
or
add
adc
push
call
add
mov
add
pop
loop
cmpsb
in
adc
test
lea
pushf
mov
sbb
insb
add
es
xchg
mov
and
mov
xchg
imul
adc
daa
mov
mov
xchg
stc
lea
inc
push
sub
mov
aaa
ljmp
call
ja
dec
jg
ret
jecxz
add
dec
add
in
dec
or
pushl
pop
in
jo,pn
sahf
scas
fisubrl
mov
lret
add
add
popl
and
js
xlat
mov
and
ja
add
mov
into
test
dec
jb
faddl
xchg
shlb
pushf
or
lea
mov
mov
add
xchg
jb
mov
jmp
jno
mov
je
inc
stos
jle
cmc
lods
clc
mov
or
push
aad
and
subl
test
mov
loope
bnd
add
fisttpl
jnp
int
rcrb
out
mov
movntps
sub
mov
sbb
cld
push
xchg
cwtl
sbb
out
jg
add
mov
ss
push
test
js
add
int3
loopne
cmpsl
mov
cld
loope
gs
loope
sti
sub
mov
inc
aam
rorl
mull
mov
add
mov
fiadds
out
test
mov
xchg
scas
jo
popa
xchg
add
lods
jl
add
out
dec
add
add
ss
push
xchg
jmp
jp
in
or
mov
xlat
sub
and
mov
mov
lea
inc
add
repz
add
in
pop
or
add
cli
cmpsb
das
push
pop
lret
ja
cmp
aad
addl
xor
lcall
pop
sbb
cmpl
xchg
fnstcw
cmpsb
test
jns
cmp
mov
and
outsb
jmp
int3
nop
sub
mov
add
je
push
flds
add
cmpsb
add
adc
adc
lret
fildll
dec
add
push
movsl
pop
in
ret
cmp
push
sti
scas
insl
cli
pop
ret
das
hlt
inc
addl
nop
pop
loop
ja
out
sub
mov
std
inc
fsubs
mov
add
popa
ljmp
scas
lcall
add
push
daa
cmp
add
lret
lods
aaa
aad
jae
aaa
push
sbb
inc
popf
cli
sub
into
rorb
add
cltd
push
mov
nop
rcrb
push
js
stos
jmp
inc
push
push
adc
scas
mov
rol
sub
mov
mov
xor
xbegin
out
daa
pusha
add
pop
xchg
orl
scas
xchg
cmp
cmp
sahf
cmp
mov
add
jmp
in
jl
xchg
aaa
jbe
pushf
xor
pop
stos
loope
repnz
js
loop
add
mov
mov
jecxz
jl
clc
jns
mov
push
adc
sub
mov
cmp
subl
mov
mov
lock
dec
jo
cmp
cltd
insb
add
mov
inc
dec
jno
mov
cmpsl
add
push
adc
loope
sahf
lods
into
sahf
inc
ficoms
sub
sar
sbb
mov
xor
jae
mov
cmc
lods
push
xlat
adc
outsl
xchg
dec
add
add
xchg
lret
and
push
mov
xchg
insb
add
mov
xor
lret
mov
cmp
loopne
jmp
dec
mov
sub
add
mov
cltd
clc
scas
xor
push
dec
mov
add
pop
push
mov
outsb
add
mov
xchg
ret
mov
lret
lcall
pop
scas
enter
rolb
cmpsl
adc
add
ljmp
inc
add
cli
daa
and
mov
push
or
mov
mov
jp
pushf
push
sub
mov
jno
arpl
jno
jge
xor
mov
outsb
sahf
jnp
ja
mov
add
add
arpl
or
lahf
push
push
sti
pop
xor
cmp
je
and
cwtl
jb
lock
mov
sbb
add
mov
pop
or
mov
les
into
xchg
sbb
jge
xchg
rclb
inc
dec
cmpsl
je
push
or
adcl
jp
lods
and
hlt
pop
in
mov
or
mov
jb
jg
iret
dec
add
inc
movsl
aam
pop
sub
mov
aam
jmp
add
xchg
ja
add
mov
arpl
xchg
add
in
pop
int
loopne
cwtl
jge
add
and
adc
jns
rolb
push
cmp
clc
push
add
mov
sarb
xchg
fildl
push
sbb
mov
int
shll
mov
mov
fbld
add
adc
decb
stos
sbb
mov
idivb
aad
add
mov
ds
mov
cwtl
mov
and
adc
icebp
jns
sub
dec
stos
sub
insb
add
mov
jbe
in
pop
mov
push
sbb
add
call
adc
push
jle
add
pop
cmp
pop
lea
or
mov
cltd
hlt
repz
mov
outsl
gs
outsl
push
mull
xor
pop
aad
jge
push
jmp
sub
mov
mov
xchg
jmp
xor
push
cmp
pop
inc
add
popa
jg
jge
loop
jle
lods
pop
add
mov
sbb
hlt
out
push
or
mov
out
jge
push
ret
lcall
add
jmp
add
loopne
xor
out
mov
cmpsb
ret
imul
xchg
mov
mov
loopew
sub
imul
or
das
xor
mov
sbb
add
lock
or
inc
sbb
mov
hlt
xchg
jno
leave
jno
add
cwtl
mov
pop
pop
les
add
lcall
xchg
lock
cmp
add
in
or
mov
mov
pop
loop
cmp
orb
mov
pop
imul
adc
movl
arpl
dec
jb
adc
hlt
dec
xchg
jp
add
rorl
mov
lods
pop
inc
dec
std
aad
outsl
add
jl
pop
add
inc
jnp
lds
stc
movsl
shrl
mov
inc
dec
add
pusha
add
xor
lods
loope
dec
jns
outsl
lock
xchg
xchg
jb
call
add
push
aas
stos
sub
mov
popa
xor
add
xlat
or
aad
call
add
or
mov
inc
loope
test
or
mov
add
add
pop
rorb
notb
in
cmpsb
das
cmp
popf
adc
dec
adc
pop
pop
jp
inc
mov
test
xor
add
cmp
push
jl
xchg
out
xchg
in
push
movsb
and
mov
or
hlt
cmp
mov
xchg
xor
imulb
add
cld
outsl
add
fstpl
mov
fidivl
into
push
sbb
jmp
and
insb
add
cmpsb
lods
mov
and
adcl
mov
inc
xchg
dec
in
rcrl
aaa
lret
mov
cmpsl
and
xor
test
lods
pop
push
daa
rcrb
mov
mov
add
test
test
stos
pop
mov
or
xchg
cmp
or
dec
add
sahf
loop
into
xor
jmp
js
pushf
repz
cld
lret
fnstcw
mov
jle
xchg
mov
shll
int
fildl
enter
mov
aas
cmp
ret
mov
add
push
jnp
and
mov
les
sbb
int
xchg
inc
in
adc
add
push
aaa
xchg
outsl
lock
xchg
push
and
mov
pop
dec
xlat
sub
mov
andb
js
in
and
mov
pusha
add
pop
jge
mov
inc
xor
mov
and
pop
or
xor
inc
add
mov
sub
mov
sahf
add
je
mov
jo
sbb
pop
scas
test
mov
aas
mov
rorb
fwait
imul
popf
ja
jnp
loopne
jnp
into
pop
and
mov
sbb
repz
daa
fisttpll
dec
jbe
add
mov
mov
add
add
dec
pop
rorl
dec
iret
xchg
lahf
mov
sub
mov
pop
sahf
movsl
into
ljmp
mov
loope,pt
and
mov
add
imull
mov
mov
stos
mov
or
add
leave
stos
call
dec
add
xchg
push
arpl
push
jle
mov
ret
fsubl
lret
enter
cwtl
xchg
add
cmp
xlat
xchg
aam
repz
cmp
jne
stos
pop
sbb
sbb
cmpsb
sub
inc
xor
int3
loope
jne
add
insl
out
cmpsl
das
leave
mov
fcmovb
aam
sub
mov
sbb
bound
test
mov
and
mov
mov
xchg
push
subl
cli
push
xchg
jb
insb
add
jns
add
lahf
add
mov
daa
mov
xor
lret
fsubl
mov
add
hlt
sub
xchg
mov
add
cmc
out
mov
punpcklwd
add
mov
pop
dec
insl
pop
push
push
scas
not
in
or
push
xor
xchg
sahf
jno
inc
in
popa
jp
add
roll
mov
rep
xchg
or
leave
mov
js
mov
add
sub
mov
xchg
xchg
icebp
arpl
adc
nop
pop
adc
mov
sahf
out
lds
jmp
or
mov
mull
add
and
mov
lret
mov
fwait
test
vmovhps
mov
stc
cwtl
jae
fsts
jb
stos
notb
sti
sub
ficoms
cmc
or
mov
or
xchg
dec
popa
imul
loope
out
xor
cmc
insl
adc
add
orb
mov
add
push
ja
sbb
outsl
mov
or
add
fnstsw
push
xor
dec
add
xchg
cmp
inc
clc
aaa
pop
xchg
test
popf
rorl
popa
aas
test
push
scas
ljmp
xchg
sub
xchg
inc
adc
xchg
jge
aad
mov
cwtl
ja
mov
inc
aas
fcmovnb
subb
push
repz
fwait
push
pushf
out
add
sarb
add
stos
xor
add
stos
jmp
pop
mov
lahf
imul
sub
test
adc
mov
sbb
jb
jb
push
jae
jg
adc
dec
mov
xor
fwait
sub
dec
xor
decl
mov
data16
adc
outsl
inc
add
inc
icebp
inc
fmull
mov
mov
lea
into
pop
inc
push
sub
loope
mov
add
mov
push
lea
fistl
or
daa
mov
mov
mov
movsl
mov
fldl
js
mov
mov
inc
int3
popa
or
cmc
ljmp
add
out
ds
notb
ja
pop
adc
push
push
inc
xchg
pop
or
mov
out
pop
and
mov
mov
flds
pusha
add
add
pop
je
mov
decb
push
cmp
add
out
mov
add
add
cmp
or
mov
xor
add
mov
add
xchg
jno
jne
or
mov
les
lret
push
push
clc
jmp
das
mov
mov
cmp
mov
or
mov
add
mov
mov
cwtl
cmc
jge
out
push
and
mov
xlat
ss
push
clc
mov
mov
sarb
out
movsb
inc
stos
shrl
cmp
and
in
xor
jle
add
adc
mov
stos
xchg
ud0
dec
sbb
pop
fiaddl
mov
vmovntps
enter
add
mov
stc
cmp
jbe
test
mov
or
mov
push
stc
xor
bound
inc
push
nop
push
xor
add
es
and
add
arpl
mov
add
movsb
xor
jbe
ljmp
dec
test
mov
ret
adc
ret
in
xchg
call
stc
out
mov
mov
add
mov
test
out
push
cmpsb
sub
push
fists
add
add
xchg
mov
mov
and
mov
mov
add
fimull
pop
or
mov
icebp
fsub
iret
stos
iret
aam
inc
lods
sub
outsb
push
inc
adc
pop
test
add
and
mov
mov
add
xchg
icebp
mov
sti
mov
mov
movsl
pop
jmp
scas
jne
cmovb
xadd
test
std
das
pop
scas
push
xchg
push
and
loopne
add
rorl
dec
in
xor
mov
aad
or
mov
fildl
add
xor
xor
mov
ja
inc
add
add
test
outsb
jae
xchg
insl
dec
call
imul
push
push
leave
jno
mov
mov
fcmovne
movsl
aaa
bound
jg
sub
add
nop
mov
add
sbb
ljmp
in
jp
fninit
pusha
add
mov
mov
jecxz
lods
mov
mov
mov
scas
in
or
mov
fwait
stos
loopne
bound
jo
insb
add
add
mov
add
mov
and
ret
dec
xchg
loopne
dec
nop
xchg
add
push
mov
mov
insl
sub
add
mov
add
lcall
mov
stos
in
pop
jae
ret
sbb
mov
add
js
adc
jo
mov
ret
add
add
test
lock
insl
or
ja
push
cmp
inc
test
insb
add
jne
imul
inc
mov
cmp
pop
loopne
stc
sub
ds
enter
pop
jg
xchg
jb
sti
pop
cmp
add
insb
add
pop
adc
jbe
add
add
mov
add
out
push
into
pushf
push
cmp
mov
das
outsb
aas
jo
jl
jnp
je
sub
cltd
mov
ret
xorb
jae
outsl
xchg
mov
adc
push
xchg
sbb
rcr
ss
jg
jl
sub
cmp
dec
push
out
js
mov
jo
mov
outsl
frstor
incl
cli
clc
xor
mov
add
mov
jmp
dec
arpl
sbb
add
mov
std
lods
jbe
mul
xchg
inc
loope
mov
mov
subl
nop
dec
cmp
mov
pop
pop
js
jo
jge
mov
sarl
add
pushf
in
cmp
pop
xchg
lods
jbe
lods
inc
insl
push
adc
xorl
mov
add
add
mov
mov
jmp
pop
dec
push
pushf
xorb
add
add
sbb
out
sub
idivb
rclb
xchg
stc
jo
xor
mov
jnp
jmp
sbb
daa
fists
mov
in
aam
cmpb
cmpxchg
and
mov
xchg
rcrb
jmp
add
sarb
add
sub
sbb
dec
mov
add
fldcw
out
test
mov
add
std
jecxz
cltd
test
inc
mov
sbb
and
imul
mov
add
jl
stos
mov
in
arpl
jno
clc
out
dec
push
sub
ljmp
jl
out
pushf
pop
aam
popa
cmp
dec
stc
mov
insl
dec
add
in
inc
add
lea
test
dec
push
cmp
das
pop
bound
idivb
add
inc
sbb
fnstsw
test
push
or
mov
outsl
bound
adc
in
ja
mov
pop
stos
cmpsl
shlb
shlb
mov
lock
test
int3
mov
out
call
dec
add
push
sbb
test
inc
xlat
mov
into
pop
and
sbb
rcrl
ficoms
sbb
shlb
ss
adc
negl
out
dec
add
aad
pop
or
mov
add
adc
sub
repnz
shl
adc
pop
pushf
adc
lret
mov
add
pop
test
inc
xor
sbb
lcall
dec
in
xchg
in
inc
mov
ret
mov
pop
ss
adc
jbe
sahf
movsl
adc
dec
add
push
fldl
push
shrd
nop
xchg
fdivr
inc
add
pop
inc
mov
cmp
ret
int3
xor
in
jbe
ret
inc
add
mov
insl
lret
adc
scas
repz
in
ds
dec
cld
xchg
jge
cwtl
cmp
inc
lea
es
test
pop
pop
rcr
shll
inc
add
jl
sbb
push
aas
pushf
pop
leave
mov
mov
and
stos
lock
cmp
add
insl
dec
mov
pop
push
add
mov
fwait
pushf
adc
ret
jnp
sbb
mov
pop
mov
push
dec
call
pop
sbb
add
idivb
adc
leave
daa
lret
and
add
sbb
mov
mov
repz
int3
add
lds
js
popa
xchg
hlt
pop
out
mov
xchg
inc
int
add
mov
loop
mov
push
call
mov
add
sbb
sahf
icebp
mov
dec
lods
cmp
xchg
mov
add
mov
inc
add
dec
mov
pop
pop
daa
icebp
das
adc
add
dec
add
int3
popa
ja
xor
pushf
jno
dec
pop
jge
bound
lcall
sar
xor
sub
lods
loope
int3
cwtl
aaa
sahf
xchg
popf
clc
sub
mov
leave
je
mov
add
add
cli
fdivs
fsubs
adc
add
ficoml
movq
add
ret
mov
ds
pop
mov
popf
mov
jo
mov
test
jecxz
outsb
mov
push
bound
dec
mov
in
jp
int
cltd
clc
rolb
inc
add
xor
mov
add
testl
xchg
inc
outsl
enter
push
hlt
cmc
push
fiaddl
mov
test
gs
fidivrl
stos
sbb
sbb
or
mov
add
jns
test
mov
hlt
in
int3
into
aam
cld
pop
loopne
xchg
add
mov
sbb
adc
sub
out
loopne
mov
mov
clc
mov
add
lretw
inc
daa
sub
insb
add
daa
scas
lea
daa
or
mov
and
lret
in
leave
mov
movsb
and
push
mov
cmp
bswap
pop
shrb
mov
xor
inc
jnp
imull
push
aas
stos
xor
test
cld
movsl
sahf
ds
cmpsb
push
push
mov
inc
imul
mov
lods
rol
dec
add
sub
mov
add
into
dec
lods
dec
adc
fwait
jmp
dec
mov
mov
mov
add
outsb
jns
sahf
add
js
mov
push
mov
add
ja
mov
push
out
jo
in
pop
je
or
mov
mov
call
mov
cmp
loopne
pop
pop
push
sbb
xor
addr16
ret
jl
lock
add
jnp
daa
and
add
mov
mov
add
adc
mov
sbb
add
mov
inc
lds
in
mov
xchg
cmp
enter
cmpsl
mov
sub
popa
lret
add
add
add
fdivrl
pop
fsubl
repnz
xchg
test
xor
div
push
lret
pop
fnstcw
and
fcoml
arpl
and
mov
mov
inc
jecxz
mov
add
jae
adc
cld
adc
and
lods
stc
add
and
add
mov
loope
dec
pop
push
push
jae
mov
fdivl
scas
add
jno
cs
sbb
push
mov
jnp
and
mov
lcall
sub
mov
jne
mov
sarb
jo
lahf
pop
je
add
sub
sarb
add
push
sahf
cld
sub
mov
mov
inc
sub
ja
inc
add
jbe
leave
stc
test
push
ret
cmc
or
dec
lret
fstpt
sbb
mov
loope
sarl
and
int
add
scas
lret
ss
jp
mov
mov
hlt
or
into
jecxz
cmp
inc
adc
insb
add
flds
dec
add
push
cmpsb
inc
xor
mov
add
test
dec
add
aad
push
or
mov
cld
ds
repnz
mov
neg
jg
push
out
mov
std
inc
dec
jb
das
mov
pop
outsl
fisubrl
faddl
stos
push
orl
add
add
ret
jo
inc
add
test
pop
loope
ss
rclb
int3
mov
aam
adc
xchg
sti
cs
mov
les
mov
ret
xchg
sbbb
xchg
or
mov
repz
push
nop
aaa
lods
cmp
cmp
add
inc
add
jns
mov
rol
jge
adc
jle
dec
push
imul
add
or
mov
sub
stos
adc
dec
add
mov
scas
and
add
out
cs
xchg
lods
xchg
cmp
insb
add
in
dec
out
add
int
mov
add
insl
add
mov
mov
inc
add
mov
sub
add
push
stc
jge
cmp
xor
outsb
jns
sub
mov
pop
out
mov
jne
dec
add
je
cmp
mov
jmp
call
mov
flds
mov
stos
pop
das
add
pop
jecxz
ret
nop
outsb
hlt
inc
jmp
mov
stc
pop
and
mov
dec
scas
xchg
push
xchg
fsubrs
sbb
mov
and
mov
jecxz
xor
pop
mov
jp
sub
and
sbb
push
push
aad
xor
scas
jno
sbb
add
add
jge
add
and
bound
mov
adc
dec
jp
adc
add
mov
jmp
cltd
shll
add
add
pop
stos
xchg
pop
lds
jo
nop
pop
lods
mov
cltd
loop
inc
add
pop
repz
xorl
ds
popf
xorl
das
dec
xorl
sub
data16
mov
sub
mov
push
xorb
cmp
movups
daa
nop
push
mov
lcall
mov
mov
ds
add
scas
xchg
add
add
mov
cmpsb
push
aam
sub
movsl
popa
pop
jg
daa
mov
dec
add
ljmp
mov
pop
jnp
into
cmp
insl
mov
pop
shr
fsubl
aas
jle
lret
ficompl
das
and
add
mov
je
xor
sahf
dec
cltd
dec
fucom
mov
pop
and
mov
push
fdivr
adc
jp
sub
push
shll
add
add
int
add
les
add
add
sub
and
xchg
xchg
xor
jl
dec
add
mov
cld
jnp
adc
push
inc
jg
push
repz
inc
ss
mov
or
out
pop
inc
add
mov
sbb
dec
mov
fidivl
daa
fstl
mov
daa
inc
adc
dec
xchg
or
mov
push
cmpsl
xor
loop
mov
cmp
mov
push
jns
pop
rcr
add
sub
mov
jl
jb
cmp
add
add
mov
data16
xor
repnz
mov
or
xchg
mov
icebp
movsl
add
add
or
jo
xor
andps
aad
add
add
push
pop
xchg
push
cmp
ljmp
mov
je
dec
loope
xor
xchg
stos
sub
jmp
ja
push
ljmp
and
retw
mov
out
outsb
cwtl
xchg
fdivl
sbb
sub
arpl
cmpsb
xor
icebp
test
roll
insb
add
xchg
dec
add
mov
add
add
lods
loop
dec
in
das
dec
addr16
and
rcrl
mov
xchg
pop
icebp
or
mov
and
mov
add
push
pop
add
int3
mov
and
mov
lret
sahf
mov
mulb
cli
cli
shrb
push
jo
xor
cmc
testb
mov
push
push
pop
into
pop
std
ja
mov
stos
inc
add
scas
daa
sub
repnz
mov
pushf
stc
jb
push
push
cmc
outsb
cmp
in
shr
jns
cmp
lret
cmp
add
iret
cs
dec
lds
mov
mov
insb
add
mov
mov
lods
sub
add
fdivp
mov
and
mov
cld
xchg
loopne
cmpsl
xchg
xchg
jns
addr16
cmp
xor
int3
repnz
adc
dec
mov
or
fnstenv
stos
rclb
cld
pop
fisttpll
mov
add
mov
push
out
cmpsb
nop
xchg
stc
cwtl
push
aad
xor
push
aad
push
mov
inc
jmp
add
dec
add
add
add
jp
stos
loop
xchg
and
add
imul
dec
adc
rcll
sbbb
ja
push
push
movsb
jbe
cmp
jle
lea
add
add
inc
dec
sub
jl
fadd
js
arpl
ss
dec
inc
cmc
jmp
cmpsl
cmp
loope
mov
imul
fisubl
mov
jcxz
mov
outsl
lds
sbb
jno
jecxz
adc
cmp
adc
adc
add
inc
jge
add
mov
add
add
lret
dec
pop
dec
in
stos
jle
xchg
sti
and
mov
mov
add
mov
add
testb
mov
xchg
orb
cmpsl
clc
pop
mov
mov
ficompl
into
out
pusha
add
gs
xchg
pop
pop
dec
add
jae
mov
dec
add
add
loope
sbb
rorl
mov
dec
xchg
adc
sbb
adc
aas
outsb
leave
mov
sub
inc
add
xor
push
jle
dec
in
movl
add
rclb
xchg
push
test
dec
jg
cmp
call
or
mov
jbe
add
add
cmp
mov
add
adc
mov
imul
dec
adc
sahf
push
xor
test
ret
outsl
movsb
cmp
mov
sub
int
adc
add
sub
inc
add
push
in
xorl
xlat
jns
std
jmp
je
pop
xchg
push
xor
jo
sbb
add
sbb
or
cli
pop
sti
add
adc
cltd
cmp
add
add
std
repz
je
in
pop
ret
pop
in
pop
call
jae
inc
je
mov
add
sub
and
mov
add
lea
out
inc
add
movsb
mov
call
jnp
push
push
ret
mov
subb
fucom
mov
lret
dec
insl
mov
mov
jle
cmpsb
xor
int
mov
adc
pop
mov
out
cmp
mov
stc
movsl
mov
in
pop
inc
xorl
dec
loope
adc
mov
mov
aaa
sbb
test
mov
dec
adcb
shrl
add
aaa
lret
iret
pop
xor
xchg
out
cmp
vunpckhps
mov
mov
sub
mov
mov
add
dec
add
adc
and
and
mov
movsl
push
test
movsb
aaa
cmp
lret
ret
lahf
mov
cs
xor
nop
cli
jge
pushf
cmc
or
mov
mov
andnps
add
xchg
mov
sarb
adc
aam
pop
fisttpl
sub
and
sbb
jo
test
pop
or
add
xor
mov
stos
fwait
mov
inc
xchg
ds
andl
add
inc
inc
add
jge
mov
iret
imul
lds
je
adc
push
cmp
add
add
fcomps
mov
mov
movsb
shrb
pop
mov
add
and
push
push
ficoms
or
mov
mov
pusha
add
mov
sub
sbb
sbb
std
loope
mov
adc
adc
lods
stc
or
mov
xor
mov
decl
test
adc
data16
ljmp
in
lods
lods
pop
pop
cmp
add
movsl
xchg
mov
les
adc
push
lock
daa
sub
pop
xor
adc
push
loope
insl
dec
push
pop
pop
into
cld
xchg
xchg
sbb
adc
add
add
push
in
mov
repz
int3
lds
aaa
ret
aaa
stos
aas
lock
or
mov
fimuls
mov
push
out
insl
cmc
or
pop
fcoms
mov
xor
daa
imul
add
mov
cwtl
xchg
xlat
mov
inc
pop
sahf
iret
fbld
pop
pushf
mov
sub
push
sbb
movsb
jle
repnz
push
inc
jmp
aam
ret
aam
fwait
dec
push
dec
cmp
xchg
push
fisubl
jp
sbb
fbld
cmp
push
aam
push
ret
cmp
add
add
cmp
add
js
xchg
dec
mov
mov
mov
into
mov
arpl
adc
push
adc
pop
mov
ret
in
cltd
mov
xchg
pop
push
outsb
aam
inc
fimull
jae
cmp
adc
aam
imul
mov
add
inc
push
in
or
popf
mov
lret
lods
ret
sbb
or
inc
loope
mov
lret
adcl
jns
mov
fldt
jl
sub
mov
cs
mov
mov
sarb
out
shl
scas
mov
ds
nop
movsb
inc
xchg
and
mov
stc
mov
scas
imul
and
mov
fidivrl
loopne
loop
adc
cltd
add
sub
scas
sub
mov
adc
lcall
movsb
insl
fsub
shlb
mov
sti
or
adcb
mov
mov
mov
int3
or
add
xchg
imul
mov
sub
mov
test
sti
sbb
ss
test
xor
jecxz
iret
cmp
shrb
fnstsw
mov
out
sub
mov
outsb
out
fstp
jno
dec
popf
int
push
in
push
testb
inc
repz
popa
mov
xlat
lds
xor
scas
scas
jp
out
cmp
sbb
add
icebp
out
daa
lret
xorl
mov
out
les
in
in
push
inc
mov
adc
xchg
rolb
js
jg
adc
mov
sub
mov
add
mov
sub
cmpb
cmpsl
pop
mov
ljmp
xchg
and
sub
fildl
add
mov
mov
xor
mov
xchg
iret
loop
movsl
les
repz
jb
popf
fwait
outsb
and
inc
in
mov
mov
push
leave
cmpb
pop
mov
mov
add
sbb
sbb
shll
mov
add
in
enter
add
jmp
add
lahf
xchg
int
mov
ret
pop
scas
gs
jb
loope
xchg
icebp
daa
jo
add
in
mov
or
js,pn
rorb
push
add
shlb
push
xlat
add
and
int
cmp
xor
add
sahf
push
arpl
loop
adcb
aaa
pop
push
add
jmp
lahf
push
cmpsb
mov
jl
mov
add
movsb
stos
das
bound
mov
adc
pop
mov
imul
shll
arpl
fldt
add
add
fistpll
subl
sub
pop
pop
xor
mov
push
mov
inc
xlat
fbld
ja
or
mov
sub
mov
add
xor
fsubrs
and
mov
add
mov
add
nop
aad
mov
je
lcall
pop
data16
in
inc
sbb
adc
push
js
and
xchg
push
imul
adc
and
add
test
jns
jns
inc
jb
jle
and
mov
shrb
mov
pop
inc
fmulp
hlt
ret
pop
jecxz
lds
pop
shrb
rolb
cmpsb
inc
stos
scas
pop
cli
xchg
inc
daa
rcl
jg
pusha
add
jecxz
add
push
cmp
add
dec
dec
add
add
mov
insb
add
aas
addr16
push
aas
insb
add
testl
add
add
out
fwait
xor
sub
mov
leave
add
mov
add
mov
aad
pop
sbb
jmp
outsb
cwtl
and
inc
scas
clc
sbb
push
mov
fidivs
add
popl
inc
outsb
sbb
push
mov
mov
add
lahf
jle
mov
and
mov
add
add
das
aad
xor
pushf
push
cmp
push
sub
mov
add
aas
cmp
pop
inc
test
stc
jo
cmp
inc
sbb
jb
xor
add
mov
sbb
loopne
cmp
xchg
xchg
sub
mov
xor
pop
les
mov
push
push
enter
and
mov
mov
ret
sub
mov
jb
adc
pop
divb
loop
xchg
add
scas
jnp
lahf
pop
cmp
sahf
in
imul
mov
je
je
lds
add
push
neg
test
cmp
rclb
jo
popf
sub
mov
add
mov
in
push
xchg
mov
push
sarb
leave
imul
ss
popa
xchg
cmp
mov
cmp
iret
decb
mov
mov
nop
mov
inc
add
cmp
insb
add
pop
nop
inc
add
dec
into
pop
in
lret
loop
ret
das
fmull
jl
bound
push
std
movsl
fimull
add
jmp
pop
shrd
add
adc
add
mov
sbb
or
add
in
pop
loop
add
add
into
stc
push
add
mov
mov
sahf
jl
adc
lret
add
lahf
cmp
lcall
mov
int3
jmp
add
loopne
ss
xor
sbb
dec
add
ja
inc
add
mov
insl
sbb
or
mov
mov
daa
movsl
jne
adc
dec
mov
mov
mov
push
pop
mov
je
imul
mov
jle
int
xchg
ficompl
insl
inc
sub
mov
mov
stos
shll
insl
rorl
scas
pop
cmpsl
xor
fsubs
add
add
jno
add
maxps
rcl
test
add
pop
xchg
cmp
or
xchg
es
push
sbb
bound
add
xchg
stc
sar
push
push
pushf
jl
jns
xchg
add
mov
cmp
cmp
ja
pand
push
insl
test
shrb
add
cmpb
or
xchg
sub
cld
sbb
lds
push
sbb
add
popa
nop
fldt
add
repz
sub
push
fnstsw
test
jle
fwait
daa
or
add
cltd
mov
xchg
mov
adc
pop
add
sbb
test
push
mov
push
mov
and
add
add
add
lret
pop
push
mov
bswap
or
add
add
cmp
mov
rorb
in
sbb
mov
aad
in
mov
add
mov
xchg
popf
sub
inc
add
and
mov
cmp
popf
cmp
xor
xchg
scas
add
lds
or
mov
or
mov
aas
or
push
xchg
and
lret
clc
mov
mov
mov
sub
push
jmp
outsl
fwait
ljmp
mov
fdivrl
aad
inc
add
adc
sbb
and
mov
imul
mov
add
lods
jl
adc
mov
mov
add
repz
test
jmp
add
cmpl
ja
xchg
shl
ljmp
cmp
or
jmp
sbb
nop
lods
push
lock
hlt
push
repnz
jmp
and
mov
inc
add
push
stc
dec
outsl
lahf
add
xor
out
test
dec
push
push
arpl
or
mov
mov
int
repz
push
lds
cwtl
std
inc
aaa
mov
xchg
cmp
push
mov
inc
cmp
xor
jle
jnp
add
jns
sub
add
xlat
mov
loopne
xlat
out
lret
ds
mov
mov
aad
adc
mov
pushf
mov
ficoml
pop
outsb
hlt
adc
mov
stc
mov
sbb
add
lcall
fwait
loope
mov
pop
or
stos
in
xchg
aas
imul
out
push
add
mov
mov
sub
fisubrs
xchg
jle
push
roll
sub
or
sub
add
push
repnz
adcb
aas
roll
mov
enter
mov
adc
rol
and
add
int3
and
and
jae
pop
push
xchg
cltd
icebp
int
xchg
xchg
iret
push
icebp
in
sti
mov
jmp
mov
aas
sub
add
mov
leave
xor
cmpl
test
dec
clc
je
fstps
inc
add
and
cmp
dec
daa
in
push
dec
push
movsb
je
xchg
mov
adc
nop
cmpsb
add
mov
in
imul
or
add
ss
pushf
ret
pop
mov
nop
adcb
xor
xchg
fldt
out
mov
aaa
aaa
cwtl
xlat
pushf
and
xchg
push
loop
ret
sahf
and
ror
add
mov
add
dec
lock
fwait
stos
lods
mov
inc
cmp
and
dec
cwtl
into
add
in
sub
rolb
add
or
add
mov
mov
push
les
imul
insb
add
jl
cmp
mov
sub
in
mov
mov
rclb
repnz
mov
sub
xlat
lahf
es
sub
mov
inc
cmp
pop
cli
cli
xchg
fadd
and
mov
inc
ret
stos
cmp
enter
scas
lock
test
push
cs
adc
imul
pop
out
push
pop
mov
std
mov
add
sarl
cmp
lods
divb
orl
push
ret
lahf
outsb
rclb
sbb
nop
sbb
es
rolb
addr16
sub
addb
fsubl
faddl
cmp
mov
mov
add
inc
add
ret
mov
call
xchg
jb
or
mov
mov
add
or
sti
push
sbb
add
stos
shrb
add
call
data16
into
movsb
and
mov
lcall
into
push
imul
cmpsl
jnp
imul
mov
repz
sub
repz
movsb
inc
add
jne
andb
mov
stc
mov
push
lret
ret
pushf
pop
push
lods
rcl
nop
int
xchg
xor
lock
xor
scas
push
clc
sbb
dec
cmp
std
in
add
add
insl
or
pushf
outsl
xchg
negb
scas
movsb
pop
mov
jmp
lahf
stc
add
xor
xor
jge
mov
insb
add
mov
sbb
dec
mov
lcall
lret
loop
pop
sub
addb
jbe
sub
nop
sbb
push
xchg
mov
pop
adc
sarb
mov
add
pop
das
rcr
out
cmpsb
jle
enter
movsb
in
cmpsl
insl
add
and
mov
dec
add
in
out
xchg
shll
mov
mov
and
push
clc
imul
movsb
adc
mov
mov
fmul
pop
pop
mov
inc
test
inc
mov
jns
sbb
ja
cld
test
xchg
cli
jae
lods
jbe
lahf
hlt
jno
or
mov
jle
jg
xchg
imul
pop
ja
push
adc
mov
xor
pop
mov
or
dec
das
mov
push
mov
dec
jg
sub
icebp
in
add
add
shl
push
ficomps
mov
into
pushf
xor
add
mov
imul
jo
and
or
mov
dec
add
add
enter
push
xor
cs
outsl
cmc
lods
and
mov
insb
add
sbb
mov
sub
rclb
or
mov
mov
add
push
into
aaa
xor
test
hlt
mov
or
mov
xchg
sub
imul
popf
sbb
push
iret
jecxz
sub
fdivp
pop
inc
adc
lcall
inc
int
jle
and
loop
mov
mov
add
mov
addr16
mov
push
cmp
addr16
lds
mov
cwtl
dec
add
dec
mov
add
add
hlt
mov
test
xchg
add
scas
lock
adc
pop
sub
fdiv
xchg
cltd
lcall
inc
outsl
xlat
and
dec
mov
stos
sub
mov
push
sub
mov
mov
push
pop
push
scas
xor
js
push
out
sbb
add
mov
jecxz
clc
jge
data16
dec
add
mov
mov
dec
add
loope
cmpsb
mov
into
cmp
add
fcoms
and
push
imul
repnz
in
dec
or
aas
cmp
cmp
push
adc
mov
fstl
clc
add
fwait
les
cmp
mov
movq
pop
cli
push
scas
leave
out
mov
sbb
sbb
mov
sub
sub
mov
lahf
rorl
push
pop
pop
inc
shrl
arpl
or
loop
and
or
or
hlt
sub
add
popf
lods
mov
jg
testl
xchg
adc
addr16
test
sub
int
mov
add
push
filds
fdivs
mov
addl
adc
stc
or
mov
in
sbb
or
mov
popf
lahf
dec
cmovns
jp
xchg
ds
cmp
inc
negl
adc
xor
mov
add
adc
add
mov
dec
cld
cld
push
arpl
adc
xlat
call
push
sub
mov
mov
sub
leave
ljmp
jne
test
ja
mov
add
mov
frstor
mov
add
add
in
repz
lods
mov
out
cmpsl
lods
fdivs
jmp
add
add
mov
xor
out
insb
add
add
cmpsb
sub
mov
add
mov
ja
mov
add
fdivr
jo
jae
mov
pop
loopne
sbb
mov
and
push
dec
jbe
push
adc
out
mov
sbb
addl
test
cmc
mov
add
mov
in
add
add
pop
lock
in
xor
sub
mov
mov
gs
jg
or
mov
loop
jp
add
cwtl
sub
add
neg
or
mov
fistpl
cmp
xor
scas
stos
lods
sbb
xor
mov
mov
sbb
add
cmp
adc
add
add
or
mov
ljmp
pop
sub
mov
sub
sbb
mov
push
cmp
out
lods
repz
cli
loop
mov
cmp
sbb
fmul
mov
and
mov
jns
xor
clc
inc
jg
shl
pop
pop
xor
push
mov
outsb
ljmp
cmp
cltd
out
push
ret
cmp
arpl
jns
and
push
daa
mov
fimull
out
pop
inc
push
fistps
mov
divl
push
shl
or
mov
inc
scas
mov
dec
into
rcll
mov
mov
and
mov
lcall
nop
ret
inc
sub
mov
lods
add
mov
add
add
add
sub
mov
add
jmp
mov
add
sbb
and
add
cli
inc
dec
pop
pop
int
fldcw
sub
ds
mov
and
mov
add
or
xor
outsb
xchg
es
aaa
mov
pop
mov
mov
pop
and
mov
pop
shl
lods
addb
rclb
and
shr
xor
mov
pop
imul
cmp
imul
cmp
sarb
data16
and
sbb
dec
fists
int
lret
dec
add
mov
test
cmpb
and
out
pop
pushf
jp
or
arpl
push
jge
add
add
add
mov
jne
add
xchg
mov
add
iret
es
or
lods
stos
dec
add
add
mov
mov
pop
lods
sbb
mov
outsl
lret
hlt
fdivrs
add
lahf
iret
dec
add
xor
imul
add
call
dec
pop
jno
inc
push
movsl
shr
xchg
adc
sub
add
enter
add
mov
add
loopne
icebp
fistpl
dec
inc
adc
xor
xchg
mov
and
add
or
sbb
mov
add
sub
mov
cmp
in
movd
inc
popa
jae
scas
xor
pop
pop
leave
enter
or
mov
lret
jbe
jmp
je
xchg
xor
jecxz
dec
push
outsb
aas
adc
idiv
pushf
sub
mov
and
mov
xchg
adc
fdecstp
out
xchg
pop
jns
inc
leave
mov
xchg
push
into
cmp
ret
xorl
mov
and
mov
push
sbb
mov
pop
mov
nop
arpl
add
insl
xor
cmp
add
cmc
sub
mov
cltd
clc
mov
inc
js
movsb
nop
or
mov
sbb
lcall
call
xor
scas
adc
arpl
push
add
mov
dec
loopne
mov
inc
lods
sbbb
or
add
and
mov
add
xchg
pushf
jge
data16
repnz
xchg
test
aas
div
xor
jo
mov
sbb
lock
xchg
test
loope
pop
jne
and
mov
mov
inc
xor
pushf
cli
fnsave
roll
add
add
mov
mov
add
mov
imul
and
mov
inc
add
jnp
sbb
aad
mov
std
lcall
mov
in
int3
test
lret
in
lret
mov
add
xorb
add
std
cmp
mov
mov
scas
inc
add
negl
test
daa
jns
aad
jns
cmpsb
fistpl
push
lods
mov
scas
pop
mov
mov
add
cmp
adc
and
push
xor
aam
popa
and
inc
cmp
fistpl
mov
add
dec
add
bound
jmp
nop
dec
inc
cld
xchg
rdpmc
xchg
orb
add
add
jno
loop
adc
push
scas
mov
add
sbb
cmp
ffreep
xor
cltd
mov
int3
ret
popa
push
dec
push
jl
jg
stos
je
idivb
inc
loope
or
cmp
push
and
dec
daa
sub
cmp
mov
in
rcrb
cld
mov
loope
ss
js
insb
add
pop
pop
in
nop
jg
shl
test
sbb
mov
sbb
fisttpl
andb
xor
add
mov
push
mov
inc
add
add
add
iret
adc
sub
mov
divl
add
add
vprotw
sub
negb
dec
mov
add
jbe
push
test
test
xchg
cmovle
imul
xor
mov
dec
mov
and
push
ffree
cmp
fimull
and
xor
sub
mov
xor
loopne
jge
pop
into
add
push
int3
add
cmp
imulb
push
and
and
jmp
push
add
cwtl
jecxz
sar
rcr
aad
scas
sub
mov
jle
mov
mov
mov
dec
dec
add
idiv
sbb
aaa
loope
jge
daa
lret
popa
mov
add
sub
cli
push
mov
inc
jl
rorl
jecxz
test
adc
sarl
xchg
test
add
call
in
push
adc
shlb
jb
sub
and
mov
push
xor
rorl
lods
jmp
js
mov
js
sbb
or
mov
jle
pushf
cli
test
xor
jmp
into
jb
lret
movsl
aaa
mov
add
add
lret
mov
push
jns
enter
xor
pop
sbb
xchg
std
gs
dec
add
xchg
jp
dec
add
aaa
hlt
repz
fiadds
inc
add
aam
cmp
fistps
aad
mov
mov
nop
and
shl
and
mov
sbb
xchg
pop
mov
add
out
cs
pop
insl
mov
imul
daa
addr16
rol
clc
lcall
add
sbb
iret
scas
inc
insb
add
adc
and
sub
mov
add
fsubrs
sbb
add
in
into
add
fnstenv
xchg
shll
in
shrl
sub
jo
add
sub
add
pop
sub
push
gs
push
dec
add
adc
sbb
ret
cmp
mov
and
mov
sub
in
mov
ja
add
add
lret
adc
mov
stos
xchg
xchg
stos
mov
lahf
cmc
pop
add
bound
sbb
mov
sbb
cwtl
mov
mov
add
imul
add
enter
pop
jae
add
nop
dec
push
out
out
test
movsl
out
adc
inc
add
mov
aad
jnp
mov
ja
push
lret
cmp
mov
ljmp
in
cwtl
add
mov
add
std
leave
mov
ret
fsubrs
nop
mov
add
mov
mov
sub
mov
mov
imull
mov
dec
sbb
data16
mov
mov
sbb
js
fstps
clc
aaa
lds
ds
mov
xor
sub
dec
xor
out
iret
cmpl
rorl
sti
sbb
ret
outsb
and
add
cmc
cmp
mov
roll
subl
add
es
cmp
mov
xchg
xor
adc
inc
add
lahf
mov
push
imul
xchg
ljmp
xchg
ret
pop
roll
notl
je
ret
push
test
xor
cwtl
mov
jns
sbb
daa
sbb
mov
add
cmp
cli
pushf
enter
lods
xchg
jg
les
sti
sti
jmp
add
int3
jns
orl
sbb
cmc
sbb
enter
stos
add
mov
xchg
outsb
cwtl
mov
insb
add
sti
push
nop
cmp
mov
dec
add
scas
iret
shll
push
mov
leave
pop
test
add
dec
aas
ret
lds
add
dec
jmp
outsb
je
xchg
sub
pop
enter
mov
adc
xor
push
stos
mov
or
ljmp
add
mov
gs
add
or
mov
sub
xchg
or
mov
push
or
xor
in
test
pop
jnp
push
js
test
nop
hlt
mov
lods
or
xchg
mov
pop
mov
lds
test
push
fwait
out
les
dec
push
call
add
mov
in
lods
lahf
insb
add
mov
lahf
and
mov
jmp
jne
adc
add
pop
daa
sahf
out
fcomps
xor
and
jmp
push
insl
push
add
add
lret
pop
icebp
in
outsb
js
shl
inc
xlat
gs
pop
push
add
enter
mov
aad
add
mov
sub
mov
andb
add
add
fisttps
add
pop
jg
aas
jno
dec
pop
inc
test
mov
aas
mov
test
or
jns
xor
mov
sub
xchg
dec
stos
cli
scas
mov
sub
push
jo
daa
ja
cs
xchg
add
pop
push
add
rorl
push
mov
and
iret
pop
lods
fcoms
out
adc
rcrl
add
add
and
lea
add
push
insb
add
add
cmp
ljmp
jns
aaa
popa
jmp
xchg
sub
ljmp
fwait
call
int3
cmc
or
rol
gs
mov
pop
pusha
add
cmp
xchg
ret
dec
or
add
movsl
xchg
in
clc
pop
cli
jp
xlat
jle
jnp
stos
sbb
cs
and
lea
push
outsb
in
push
mov
mov
iret
pushl
aas
or
and
mov
pop
mov
add
mov
mov
inc
add
mov
add
lcall
adc
pusha
add
mov
icebp
lock
sbb
ss
inc
cmp
sbb
lods
pop
gs
jo
icebp
adc
mov
leave
mov
add
jg
and
cmp
pop
test
add
push
in
push
jmp
test
adc
movsb
dec
xor
jne
int3
mov
add
add
in
xchg
mov
repnz
sub
clc
inc
add
add
push
mov
mov
outsb
ficomps
sarl
sub
mov
call
insl
xor
xor
mov
cmp
clc
push
out
adc
mov
inc
lret
mov
push
inc
ret
dec
add
mov
mov
movsl
test
adc
outsl
pop
addb
sub
inc
add
sbb
add
mov
and
loopne
pushf
psrad
jno
xchg
ja
divb
xor
mov
out
pcmpeqb
sbb
jno
or
sti
mov
lea
mov
imul
clc
or
mov
mov
pusha
add
add
imul
add
icebp
xor
mov
push
sbb
das
test
mov
out
xor
mov
sub
cmp
lret
cmp
adc
dec
testb
pop
dec
ficompl
insb
add
mov
mov
mov
scas
aas
outsl
pop
mov
xchg
call
test
xchg
jl
mov
lret
mov
pop
inc
sub
or
mov
mov
decb
mov
mov
sbb
ljmp
xor
loopne
mov
add
mov
dec
push
sbb
jle
bound
and
add
add
mov
adc
daa
push
and
mov
push
fsubr
cmpsl
xchg
sub
mov
dec
fsubrl
iret
push
jecxz
mov
jecxz
cmpsl
or
mov
or
xlat
movsl
fisubl
add
xchg
lock
mov
ret
dec
pop
aad
pop
push
daa
mov
bound
mov
jnp
xor
dec
aaa
test
push
cmp
jbe
shr
fistl
mov
xchg
fnsave
jecxz
lret
or
mov
mov
xchg
add
mov
dec
add
cmpsl
xchg
js
add
add
push
sbb
gs
xor
mov
add
shll
cmp
ds
sarl
jo
mov
add
push
sbb
arpl
mov
dec
cmp
gs
xlat
insl
mov
mov
add
jne
add
lahf
and
mov
mov
imul
daa
loope
xchg
push
aam
lea
mov
pop
cmc
cld
rcrb
rcrl
xor
mov
int
imul
add
jne
mov
xchg
mov
arpl
testl
add
popa
dec
mov
lods
xchg
fdivr
sbb
xchg
mov
lret
jns
push
push
lcall
data16
add
sbb
idiv
js
fstps
lock
add
and
daa
xor
leave
and
aas
cld
inc
cmp
xchg
add
ret
aad
and
mov
subl
mov
stos
push
fwait
and
mov
add
and
mov
xor
add
push
jno
cmc
fwait
jns
dec
outsb
xchg
jb
push
cmpl
into
or
mull
xor
xor
clc
pop
mov
xchg
sub
inc
add
mov
adc
mov
dec
xchg
scas
xchg
loop
sub
sti
in
inc
mov
add
das
sub
mov
cmp
cmp
arpl
fidivrs
push
xchg
addb
sbb
push
and
mov
or
mov
mov
pop
jge
ds
inc
sbbl
push
inc
cmc
and
mov
push
loop
inc
int3
imul
clc
sbb
add
lds
nop
mov
or
mov
vmwrite
add
mov
push
subb
pop
out
add
push
mov
imul
add
add
je
push
movsb
push
and
sbb
cmp
ljmp
adc
jns
repz
cld
mov
dec
add
pop
mov
push
enter
ret
xor
add
dec
push
popa
shll
mov
hlt
insl
add
sbb
mov
daa
cmc
loope
lret
lods
adc
xor
sub
mov
fsubr
fcoms
lea
iret
test
dec
aam
and
mov
xchg
pop
jnp
scas
dec
add
mov
js
fistpll
xchg
adc
add
and
pop
mov
push
andb
jnp
notl
fdivr
cmpsl
mov
or
cld
push
and
mov
sub
and
pushf
mov
repz
add
jbe
pop
push
inc
shlb
sub
incb
jg
mov
scas
push
cmp
inc
daa
movl
pop
faddl
fisttps
lods
pop
pop
jge
std
adc
jne
push
cmp
inc
sbb
insl
add
mov
add
mov
out
push
stc
outsb
inc
add
mov
sarb
addr16
dec
nop
adc
add
std
fldcw
pop
xchg
std
jae
add
fcmovbe
les
clc
sub
inc
movsl
push
mov
insl
insb
add
jns
ds
sub
in
subb
clc
add
mov
add
mov
cli
adc
inc
loope
push
fsts
push
sahf
lahf
inc
jge
out
ja
and
mov
mov
sbb
dec
shll
jae
push
sarl
and
inc
addr16
mov
or
mov
cwtl
insl
inc
ja
stos
cmp
inc
mov
or
add
add
dec
add
pushf
adc
mov
mov
repz
outsl
idivb
add
add
add
mov
and
or
mov
cmp
add
add
insb
add
gs
outsl
mov
sahf
jo
xlat
sbb
mov
mov
sub
mov
add
add
mov
adc
sub
mov
stc
popf
mov
in
push
out
ljmp
add
xorl
lcall
sbb
pop
adc
xchg
hlt
fstpl
or
sub
mov
inc
jnp
adc
clc
xchg
cmp
into
jg
call
mov
push
cmp
jns
fdivrs
dec
add
mov
sbb
push
dec
cs
sub
mov
into
adc
mov
into
cmp
loopne
repnz
mov
fabs
das
in
gs
mov
sti
sbb
cmpsb
sarb
xor
mov
sbb
imul
inc
loopne
adc
add
cmp
push
out
ret
xor
jb
repz
pushf
cmp
add
mov
xorl
ret
xchg
movsl
in
rcl
push
or
sbb
into
mov
pusha
add
push
lock
and
mov
incl
mov
mov
dec
and
pop
loopne
sti
push
jg
mov
gs
adc
mov
shrl
aas
es
sahf
int3
adc
test
or
adc
sarb
lcall
mov
add
shlb
cmp
lods
jbe
add
add
pop
mov
xchg
push
pop
mov
lahf
je
add
les
out
mov
lahf
push
cmp
fcomps
out
out
mov
jae
faddl
xor
shrb
push
jmp
or
mov
idiv
out
shrb
add
imul
stos
bnd
daa
sub
sub
mov
add
bound
adc
mov
movb
add
imul
add
outsb
xor
xor
inc
add
jb
loope
bound
dec
add
add
add
sbb
mov
push
add
push
out
xchg
add
add
push
add
add
inc
cmc
popa
xchg
scas
sbb
rolb
orb
sbb
adc
out
or
mov
rol
mov
cli
push
in
inc
movsb
mov
shlb
scas
fisttps
add
xor
test
push
and
add
hlt
lahf
or
mov
in
clc
sub
push
movsb
mov
mov
add
add
mov
pop
dec
mov
jle
scas
cs
lar
mov
leave
out
int
insb
add
hlt
lret
or
mov
add
adc
mov
sub
mov
mov
fwait
cmovno
stos
xchg
testb
cwtl
addps
dec
add
adc
repnz
add
fstpl
sbb
xor
inc
add
jge
arpl
stos
movsl
out
sub
mov
out
jae
pushf
sub
mov
inc
add
add
mov
fidivrs
jno
inc
mov
lret
push
ficompl
sbbb
xchg
mov
push
lret
mov
jno
addr16
lods
or
mov
cmp
push
addr16
cmpsl
ss
and
fmull
mov
add
add
lods
push
out
mov
jae
mov
shrl
push
and
dec
lods
xchg
int
cmp
adc
femms
push
jo
pop
loop
jae
mov
adc
iret
outsl
stos
out
stos
and
jmp
cmpsb
lret
aaa
out
test
aaa
cld
mov
les
mov
mov
leave
mov
adc
and
stos
inc
jle
outsl
scas
cltd
and
loop
xchg
add
loop
mov
jg
and
mov
or
loopne
add
jle
das
or
outsl
inc
adc
je
cltd
inc
ret
lods
xor
add
imul
pop
push
mov
xchg
lds
mov
fsubr
es
pop
mov
dec
in
cli
push
add
scas
pop
jo
mov
hlt
adc
adc
das
pop
adc
notb
sbb
mov
mov
mov
popa
rcl
lret
jecxz
or
nop
call
neg
mov
add
mov
rcll
and
mov
xchg
xchg
and
mov
xor
subl
das
lods
push
and
pop
mov
mov
mov
add
mov
push
lcall
add
mov
ret
mov
rcrl
cmp
jnp
leave
div
popf
aam
andb
jmp
call
nop
pop
fwait
je
orl
sub
popa
movsb
cmpb
int
std
jmp
lcall
sbb
mov
cmpsb
repnz
mov
hlt
ss
insb
add
jb
cld
or
pop
pop
arpl
add
mov
roll
add
mov
nop
roll
sub
in
cmpsl
xor
inc
icebp
push
lds
adcl
xchg
sub
mov
jmp
push
fstpl
aaa
ret
sahf
sbb
jl
push
aad
shrb
jl
je
outsb
mov
ljmp
je
ja
int3
xor
in
movsl
fwait
sbb
dec
mov
mov
sbb
lds
or
xor
mov
pop
pusha
add
or
or
negb
sub
mov
or
cmp
xchg
xchg
add
cltd
cmpsb
xorl
mov
mov
xchg
jnp
add
or
mov
enter
pop
mov
and
repnz
add
mov
loop
test
leave
xchg
out
sub
js
rolb
sbb
ror
xchg
inc
dec
leave
add
or
mov
pop
ret
jp
loop
jmp
stos
test
mov
mov
sub
shl
jl
xor
xor
xor
shll
xorb
je
add
fnstcw
repz
or
mov
scas
xchg
jns
sub
xor
ljmp
jns
stos
test
popa
dec
or
mov
dec
mov
add
add
and
mov
insl
int3
movsb
jle
mov
lea
mov
sarb
and
xorb
add
xor
js
inc
and
mov
fwait
adc
cmc
lahf
iret
xlat
pop
sbb
fwait
test
ja
or
mov
pop
inc
add
cltd
das
xchg
adc
popf
clc
and
cmc
insb
add
icebp
add
mov
scas
pop
fwait
rorl
xor
or
test
inc
notl
arpl
add
mov
aam
lahf
xchg
stos
test
fistps
aas
cmc
xchg
add
mov
cmc
out
repz
pushf
mov
mov
and
ljmp
adcl
mov
mov
push
cwtl
push
pop
je
push
xchg
mov
imul
mov
jmp
sbb
jmp
mov
fidivrs
stos
dec
fldt
inc
sbb
inc
add
inc
cmpsb
leave
data16
mov
add
xor
xchg
mov
jg
jl
adc
sbb
je
add
pop
mov
scas
insb
add
inc
hlt
sub
xor
add
inc
pop
inc
jl
pop
cmpsb
or
nop
mov
pop
lods
cltd
jecxz
leave
shlb
jl
insl
add
mov
add
mov
cmp
add
insl
sarb
add
add
mov
dec
push
or
mov
jecxz
data16
bswap
xchg
icebp
add
add
mov
add
adc
inc
cmpsb
pop
xchg
mov
test
loopne
inc
add
xchg
test
sbb
and
mov
mov
filds
cwtl
xor
test
loop
jle
or
out
adc
loopne
cli
out
pop
out
cltd
loop
mov
insb
add
and
shrl
inc
add
dec
mov
xorl
push
lods
mov
ljmp
cli
sub
imul
cmpsl
shrb
jnp
push
popf
or
in
xchg
mov
fistpll
mov
ljmp
pop
sbbb
pop
pop
and
sub
mov
movsb
xorl
ficoms
popa
jl
xchg
mov
sahf
iret
pop
add
mov
mov
jbe
inc
sbb
cmpsl
call
add
rorl
pop
push
cli
stc
mov
fstpt
stos
jb
lret
jnp
xor
dec
pop
outsb
sbb
lods
hlt
jmp
pushf
mov
pop
test
aas
addb
sahf
cmp
sbb
in
inc
add
dec
cmp
pop
mov
stos
nop
bound
cmc
pop
sbb
mov
ret
ficoml
loopne
lahf
dec
int3
movsb
rcl
fwait
cmp
jp
sbb
icebp
cmp
add
into
inc
add
lahf
xor
sub
mov
add
hlt
push
daa
jns
jl
push
mov
push
inc
add
mov
adcb
push
adc
push
addr16
jge
inc
stos
mov
and
clc
inc
ffree
mov
add
es
mov
jo
add
add
mov
push
sahf
mov
lds
add
mov
sub
fadds
movsl
sbb
sahf
mov
add
xor
insl
and
aad
push
ret
sub
mov
aaa
sti
dec
dec
xchg
inc
lret
mov
add
dec
sbb
sub
or
mov
and
dec
inc
mov
and
fdivr
in
mov
dec
add
and
mov
add
ljmp
xchg
add
jl
scas
loope,pn
add
mov
test
ss
mov
mov
sub
push
xor
jge
push
mov
popa
mov
add
dec
add
or
add
inc
add
scas
add
mov
pop
test
sub
aaa
rcrb
and
mov
add
mov
testl
push
pop
clc
push
scas
insb
add
psubb
loope
pop
xor
push
imul
pop
cmpsb
rcrl
pop
pushf
stc
test
cmc
push
push
push
dec
jnp
sbb
cmc
xor
inc
jp
mov
cltd
sahf
jae
fwait
test
lcall
adc
add
ljmp
aas
lret
xlat
adc
mov
mov
sbbl
movsl
mov
enter
xchg
in
push
xor
or
add
shl
and
mov
mov
fnsave
jl
xlat
mov
rol
push
dec
add
add
or
mov
call
pop
push
inc
push
arpl
lret
jne
mov
and
mov
icebp
cld
icebp
and
mov
sub
mov
outsl
pushf
mov
pusha
add
rcrb
jbe
add
fdivrs
add
cmp
add
dec
cltd
in
popa
xchg
pushl
add
xchg
adc
push
mov
dec
popf
jg
add
mov
adc
and
mov
popa
repnz
add
mov
mov
add
mov
lds
lock
insl
scas
pop
mov
add
jg
sbb
add
add
rcrb
add
lret
and
inc
fisttps
mov
adc
fildll
jno
xchg
cmp
in
cltd
xchg
push
fisttpll
push
mov
insl
dec
add
mov
mov
xor
mov
or
mov
xor
sti
mul
add
mov
mov
inc
cmp
sub
mov
mov
aas
mov
jle,pn
add
mov
xor
leave
cmpsb
push
in
mov
adc
add
add
jl
lret
je
pusha
add
jg
rcrb
insb
add
xor
pop
scas
das
repz
mov
in
fucomi
pop
out
mov
xorb
and
add
add
mov
adc
add
add
enter
mov
loop
pushf
je
cmc
mov
neg
adc
add
add
mov
sti
mov
wrmsr
dec
push
fnstcw
lock
push
repz
in
mov
jg
ret
push
sub
mov
imul
add
insb
add
push
add
int3
in
pop
sahf
jnp
inc
andl
adc
jg
jp
push
mov
test
in
push
int3
cmp
repnz
popf
push
push
sub
icebp
aaa
or
into
cmpsl
data16
and
fcompl
dec
and
inc
add
add
adc
cmp
jae
xor
call
add
mov
and
mov
test
mov
rorb
mov
insb
add
jmp
inc
add
adc
test
popf
mov
sahf
lahf
movsb
xchg
ret
mov
dec
pop
gs
add
lret
and
or
ljmp
fstps
fisttpl
repnz
mov
lahf
mov
fdiv
ds
repz
test
bound
jl
loopne
imul
push
push
xor
cltd
inc
push
mov
popf
push
xchg
imul
sub
mov
inc
test
insl
das
inc
test
mov
fdivrl
mov
push
push
aaa
sub
shlb
lret
sub
push
iret
add
sbb
and
mov
test
push
test
fstpt
sub
mov
add
ds
or
xchg
push
adc
test
add
loop
das
mov
test
lock
fdivs
add
jmp
adc
xchg
mov
mov
lods
sbb
fiaddl
or
mov
ds
out
mov
pushf
cltd
sbb
add
hlt
fisttps
aad
pop
stos
hlt
shl
popl
mov
jecxz
cmp
dec
add
sbb
add
addr16
adc
add
ret
test
jne
sbb
sbb
and
cs
mov
mov
mov
enter
sub
mov
xor
loopne
ret
out
fwait
cmpsl
and
mov
push
mov
icebp
xchg
fcoml
ret
out
push
cltd
shlb
jb
pop
push
dec
loopne
dec
adc
mov
add
mov
mov
test
mov
fildl
insl
mov
xchg
or
out
movsb
push
mov
add
fwait
shr
inc
repz
pusha
add
ret
leave
jno
daa
rorl
xchg
adc
aas
jecxz
sub
sub
add
cmp
pop
pop
mull
dec
and
mov
pop
adc
les
add
imull
add
mov
clc
add
into
push
fstpl
add
movsb
mov
test
fimuls
add
mov
jae
mov
add
xor
xor
lcall
add
imul
pop
and
adc
sbb
sbb
mov
hlt
into
dec
add
pushf
loopne
add
mov
push
lods
lds
push
lahf
jbe
leave
mov
xchg
imul
mov
add
lods
or
mov
subl
fsubr
dec
bound
negb
cmpsl
das
insw
push
aad
loopne
sbb
mov
sbb
add
mov
add
push
data16
daa
mov
mov
push
add
cwtl
fsubl
add
lahf
mov
fwait
in
and
mov
dec
and
mov
mov
add
mov
loopne
mov
pop
inc
lahf
or
mov
aas
add
mov
lret
sbb
rorl
pop
ljmp
dec
loopne
xorb
in
movsl
push
mov
add
test
add
les
mov
popf
mov
sbb
dec
add
cmp
or
lds
add
mov
and
mov
or
mov
sub
mov
lahf
cmp
and
mov
mov
mov
pop
lahf
iret
insb
add
add
xchg
aaa
mov
out
push
mov
daa
cmp
test
dec
add
leave
test
popf
int
lock
dec
aaa
pop
adc
mov
cld
xchg
push
add
push
add
int3
adc
push
pop
dec
lock
test
inc
xor
imul
pushl
loop
cmp
lods
iret
ss
mov
nop
mov
lea
add
jb
add
jae
inc
dec
add
stc
mov
sub
jae
mov
sbb
add
add
in
fistps
shlb
mov
cltd
mov
adc
push
pop
mov
insl
lods
xchg
push
mov
mov
pop
mov
sbb
mov
mov
mov
dec
xchg
std
push
int3
add
mov
mov
mov
jl
daa
cmp
mov
sub
inc
cmp
enter
stc
cmpsb
mov
mov
fwait
shl
orl
scas
xchg
ja
adc
adc
clc
call
push
lret
add
mov
fcomps
xchg
push
inc
add
add
std
sub
cmp
or
popa
cmc
sti
add
mov
outsb
xor
sbb
je
inc
or
mov
gs
mov
xchg
xchg
inc
repnz
push
mov
stc
cs
and
xor
js
inc
push
pop
cmp
mov
push
mov
add
xchg
push
pop
pushf
out
popf
dec
push
lret
ret
inc
add
add
aam
mov
fld
dec
cltd
pop
lret
shlb
xor
and
add
cld
ja
divl
inc
mov
pop
mov
add
add
mov
aam
add
mov
hlt
rcrl
dec
js
push
aas
cmc
adc
sbb
into
sbb
mov
les
movsb
test
hlt
scas
xor
movsl
lret
or
sub
scas
addr16
add
out
jo
mov
nop
mov
add
mov
dec
xchg
mov
jle
iret
out
inc
add
add
or
jo
add
cmpb
adc
dec
xchg
in
add
lret
movsb
je
xor
xchg
rolb
mov
jmp
push
js
mov
frstor
or
mov
and
and
mov
inc
cwtl
cmp
rcr
ss
mov
xchg
popf
push
stos
sbb
loopne
push
dec
icebp
adc
lret
jae
sbb
adc
negl
lds
add
hlt
inc
negb
rcrb
or
mov
or
mov
cmp
iret
rdpmc
lock
push
mov
call
rcll
xor
xorl
insb
add
add
rol
inc
loop
iret
jo
flds
daa
pop
loopne
cld
mov
xchg
and
add
repz
push
pop
fistps
sarb
cmp
jb
cld
insb
add
mov
rcll
mov
jmp
jl
in
sbb
mov
imul
xchg
lcall
mov
sbb
pop
pusha
add
cld
popa
clc
fcomps
add
or
mov
movsl
inc
aaa
push
in
aad
popf
clc
rcll
inc
push
adc
sub
add
add
test
daa
sti
test
repnz
add
jo
push
loopne
lods
out
mov
movsb
sub
add
cmp
stos
pop
or
mov
unpcklps
shll
mov
mov
mov
or
mov
xchg
lea
arpl
add
mov
pop
jne
add
outsl
out
push
fsubl
ljmp
orb
sti
add
mov
pop
xor
fsubs
mov
inc
add
jg
inc
pusha
add
bound
push
adc
mov
jb
mov
std
out
mov
popa
mov
enter
add
lret
push
mov
sub
enter
adc
add
dec
cwtl
xor
add
fldl
add
lods
lahf
jp
lahf
xorb
add
aam
pop
inc
cmp
inc
das
mov
mov
xor
shr
and
mov
setge
pop
xor
xlat
je
add
jmp
pop
jo
push
dec
add
sbb
andl
in
pushf
adc
add
sub
mov
mov
mov
int3
push
in
xchg
dec
dec
xor
int
lret
adc
add
cmp
push
in
out
xchg
jae
ret
lock
cmpsb
ss
inc
mov
insl
sbb
mov
gs
cmpsl
inc
cmp
cmp
sub
or
mov
mov
mov
dec
sbb
xor
push
ljmp
leave
popa
bound
out
jne
sub
lods
data16
dec
add
mov
inc
add
add
pop
imul
loop
cmp
adc
mov
clc
ficomps
fsubs
js
add
add
test
add
pop
add
mov
ret
fbld
mov
add
mov
fnsave
mov
jne
add
lds
add
pusha
add
icebp
xchg
sub
mov
add
jne
mov
push
push
scas
test
pop
add
push
inc
mov
sub
xor
outsl
dec
inc
outsl
in
xor
mov
iret
sahf
adc
mov
fisttps
and
add
sub
mov
sbb
push
xor
insl
dec
jbe
xchg
mov
mov
xchg
dec
stos
pop
test
mov
js
add
dec
leave
repnz
mov
dec
inc
pop
notb
mov
jbe
xchg
mov
int3
fidivrs
mov
pop
cmpsl
scas
rcr
jecxz
inc
add
mov
arpl
push
mov
sahf
mov
mov
ret
sbb
add
ja
scas
lods
into
sub
cmpsb
and
outsb
ret
pop
jg
add
into
call
xchg
add
mov
and
and
mov
or
xor
repz
pop
push
sbb
mov
mov
popf
lods
jle
xchg
aaa
xchg
jbe
sbb
insl
pop
sarb
cwtl
fsubp
test
jb
ret
push
add
pop
push
mov
mov
mov
add
imul
push
jnp
xchg
std
sub
dec
stc
push
inc
add
pusha
add
mov
mov
inc
decl
repz
icebp
xor
add
lods
pop
sbb
mov
testl
push
cmp
lret
cmp
mov
add
mov
mov
mov
test
jb
icebp
int3
lret
hlt
xchg
push
xchg
cld
fcoml
aaa
mov
mov
movsb
jno
mov
or
hlt
lahf
xchg
fstpt
mov
xchg
mov
dec
mov
in
shl
in
pop
jae
inc
jecxz
jne
inc
int3
notl
xor
fadds
cltd
mov
stos
mov
mov
add
imul
out
push
insb
add
shlb
lret
clc
mov
das
push
cld
push
je
add
imul
or
shlb
pushf
push
dec
fisubrs
xor
xchg
js
dec
mov
sbb
repnz
push
xor
fadd
in
inc
add
jb
into
ja
shlb
popa
cmp
test
movsl
int3
adc
int3
xchg
imull
sbb
fdivs
mov
cltd
lods
pop
add
push
mov
add
mov
sbb
add
cmc
std
pop
xchg
int3
les
andb
cli
xchg
jns
add
push
cltd
mov
or
adc
pop
jl
fimull
mov
mov
add
mov
cmp
mul
in
jmp
call
mov
gs
pop
lods
pop
jb
ja
fucomp
lods
xor
stc
adc
mov
shlb
out
xor
loop
decl
add
ret
mov
out
jl
push
stos
scas
push
add
sbb
cmpsl
dec
icebp
sub
sub
dec
add
leave
or
or
pusha
add
add
insl
out
stc
ret
sub
lret
mov
pop
dec
jbe
lea
add
popf
aad
xchg
jo
negb
cmp
fldcw
mov
push
shll
mov
imul
stos
enter
jp
cwtl
aaa
jge
or
mov
mov
add
and
mov
in
add
cmpsl
je
movsb
xor
rcrl
dec
lods
dec
in
sub
mov
jl
das
mov
out
hlt
pop
jo
in
or
cltd
or
cwtl
pusha
add
add
inc
add
xor
addl
add
andb
insb
add
inc
das
rolb
mov
mov
insl
jge
push
jbe
mov
add
xchg
scas
pop
loop
cltd
adc
or
mov
icebp
scas
cmpsl
and
add
jne
daa
pop
cmpb
jmp
add
add
add
dec
and
mov
pop
pop
inc
add
add
jne
mov
shl
and
mov
mov
add
bound
pop
sub
push
mov
aaa
dec
pop
dec
xor
lock
mov
sbb
sub
add
add
jbe
pushf
adc
mov
dec
test
sbb
add
test
out
test
add
add
fstl
mov
popf
ljmp
adc
jns
add
insl
dec
xchg
xchg
mov
rorl
add
add
pop
out
add
and
mov
aas
lea
mov
push
sub
std
xor
pop
sub
mov
add
lock
pop
mov
mov
pop
lret
sti
pop
inc
add
dec
stos
inc
pop
cmpsb
lret
mov
mov
ss
push
ljmp
xchg
aam
or
nop
jo
cmp
add
push
sub
push
xchg
add
mov
shlb
mov
add
lret
push
loopne
mov
xchg
out
shll
fwait
xor
xlat
jne
xor
int
pop
cltd
pop
mov
subb
data16
cmp
mov
inc
gs
xchg
sti
or
cmp
fbstp
nop
mov
loope
pop
cmp
pushf
and
int
cli
adc
dec
jmp
add
testl
js
loop
sbb
mov
ds
test
add
add
mov
inc
adc
fisttpl
push
xchg
lods
cmp
pop
fcomps
imul
add
inc
add
addr16
pop
es
push
xlat
sbbb
inc
add
sbb
jne
and
scas
loop
lods
sarb
mov
add
jno
dec
dec
add
hlt
adc
push
dec
arpl
sbb
dec
add
icebp
sub
sti
jl
scas
pop
mov
in
dec
sub
mov
mov
mov
add
ljmp
sbb
nop
xchg
mov
mov
jb
js
adc
pop
mov
hlt
or
stos
xor
jl
push
leave
pop
lock
inc
test
out
loopne
mov
in
sub
mov
add
insb
add
cmc
push
cwtl
aad
xor
mov
xchg
int3
pusha
add
mov
lret
enter
push
pop
dec
dec
jge
cmpsl
adc
test
arpl
movsl
cmp
push
xor
das
aas
push
rorl
cld
jae
divl
inc
sub
mov
in
fisttpll
bound
add
shl
and
mov
jbe
test
add
mov
ret
cmpsb
sbb
jbe
enter
lock
cmp
mov
add
lods
div
mov
es
dec
imul
xchg
mov
xchg
mov
xor
adc
add
out
mov
add
mov
mov
xor
mov
inc
inc
push
stos
sbb
mov
lock
mov
mov
mov
mov
insl
or
pop
gs
add
mov
inc
cmpsl
add
dec
add
scas
cmpsl
jno
jmp
shl
lods
xor
add
sbb
add
inc
enter
into
sbb
pushf
loop
inc
push
cmpsl
pushf
xlat
dec
add
scas
adc
push
arpl
pop
adc
aad
jge
movsl
repz
push
scas
push
inc
cmp
add
test
inc
leave
js
arpl
inc
add
mov
add
pop
adc
mov
inc
movb
fnstcw
add
add
js
sbb
push
pop
mov
sub
adc
xor
iret
icebp
sbb
add
mov
jns
add
mov
mulb
pusha
add
inc
add
popf
ficomps
roll
test
adc
pusha
add
lcall
add
sub
mov
pop
ror
add
dec
add
inc
sbb
mov
ficoml
jnp
int3
lds
jns
add
mov
dec
lock
mov
rcll
pop
sarl
mov
out
test
test
loope
ja
fistpl
or
pop
sbb
js
lods
sbb
movsb
jnp
jecxz
fxam
lcall
add
add
jo
push
ret
aam
in
aas
aad
data16
aam
or
gs
dec
sbb
mov
shrl
enter
add
out
sahf
xor
mov
ds
in
in
xlat
jae
cli
and
mov
xlat
test
mov
sbbl
ret
jo
jmp
fisubs
test
dec
mov
xchg
sub
mov
inc
push
test
enter
mov
mov
fstpt
test
or
mov
test
int
sbb
add
xor
mov
add
movsl
ds
mov
mov
hlt
mov
and
mov
xchg
inc
mov
mov
out
cs
xor
add
adc
cs
scas
rcll
jmp
push
je
mov
ret
mov
ja
and
in
xor
xchg
lcall
sub
mov
inc
xor
sub
rorl
cli
sbb
pop
mov
inc
test
inc
add
add
mov
cmp
xor
mov
inc
and
add
mov
fdivrs
outsl
fcmovne
jge
mov
scas
sbb
mov
in
xchg
mov
add
cmc
mov
fdivrp
sbb
ret
fsubs
cmp
lret
sbb
ret
nop
clc
adc
sub
mov
sbbl
hlt
jne
add
add
cmpsl
loope
in
xor
in
add
add
ljmp
mov
add
dec
add
add
or
aad
lods
push
cmp
sub
andl
add
mov
das
rcrb
add
loop
mov
dec
ja
jecxz
lret
daa
dec
les
add
das
mov
add
jg
mov
add
and
mov
cmc
jge
sti
mov
inc
push
cmp
and
xlat
shl
xchg
pmullw
cmpsl
jb
lret
shrl
cli
aad
dec
imul
ficompl
push
dec
cmp
or
mov
cmp
ret
jmp
fnsave
cs
adc
ljmp
ret
insl
out
leave
jp
add
movsb
test
mov
cmp
jns
enter
std
fiadds
es
push
data16
mov
loope
or
jnp
testl
cs
loope
sbb
or
mov
mov
inc
bound
xor
cmp
fdivl
pop
inc
and
mov
mov
in
sarb
mov
dec
add
fwait
sub
mov
ja
popl
dec
inc
mov
push
std
pop
inc
add
add
repnz
cmp
and
xchg
add
xchg
mov
inc
add
pop
js
xor
ds
adc
xchg
pop
xchg
scas
jbe
jge
lahf
bound
mov
mov
sar
pop
cmpsb
bnd
stos
add
fmull
add
xor
mov
xchg
aad
scas
lock
push
out
pop
xabort
xchg
pop
add
mov
or
mov
ret
arpl
mov
js
mov
es
add
mov
jg
sbb
add
divb
test
fcmovb
pop
push
pop
mov
xor
xor
sarl
ret
fcmovbe
in
loop
lock
mull
test
inc
jle
jbe
add
cmc
ret
leave
lret
jle
fistps
std
negl
cmp
push
pop
les
cwtl
mov
and
cmpl
xor
push
add
mov
mov
mov
add
mov
adc
lcall
je
xor
ds
or
and
mov
es
xchg
cmp
xchg
andl
pop
popa
inc
add
add
or
xor
mov
inc
add
dec
mov
mov
mov
and
mov
add
dec
push
fiaddl
adc
jne
jns
jp
pushf
out
gs
outsl
scas
lods
fldt
or
mov
xchg
mov
dec
rcrb
ret
pop
push
inc
pushf
xchg
bound
mov
mov
push
sbb
sbb
push
pop
ss
cld
and
mov
sbb
popf
mov
popf
mov
push
dec
dec
add
and
aad
jge
movsb
xor
aad
pop
jae
sbb
popf
iret
xchg
scas
in
cmpb
or
pusha
add
daa
sbb
xchg
mov
in
jae
mov
js
jmp
ficompl
out
addb
popf
or
mov
add
in
dec
lods
adc
scas
xchg
pusha
add
and
mov
xchg
mov
pop
mov
push
dec
push
ljmp
add
and
mov
jl
sbb
mov
int3
ret
mov
test
xchg
sbb
adc
mov
mov
dec
adc
data16
sarl
add
mov
add
movsb
pop
das
loope
and
out
call
cmpsb
scas
lds
or
inc
adc
add
mov
sahf
mov
and
mov
dec
pop
mov
add
inc
insl
nop
jle
adc
mov
push
popa
js
push
jnp
lcall
jg
or
mov
push
inc
inc
fistpll
mov
push
pushf
mov
sbb
sbb
inc
pop
pusha
add
imul
add
repnz
shll
lock
pop
add
mov
cmp
stos
outsl
leave
xchg
loope
jp
xlat
test
leave
imul
cmp
cmp
add
mov
out
fwait
mov
xor
add
mov
add
xchg
jle
rclb
mov
das
negl
sbb
scas
mov
fcomps
pushf
mov
xlat
cmp
mov
push
sahf
push
ja
mov
dec
add
or
mov
cmp
out
xor
jno
dec
xor
push
push
mov
cmc
lcall
mov
or
mov
lea
add
int3
icebp
push
xor
mov
decb
mov
aaa
stc
dec
ret
cmpl
std
mov
add
push
mov
lahf
jne
cmp
rorl
dec
test
rorb
mov
xor
add
mov
pop
mov
clc
sub
add
jmp
mov
sub
lods
sub
test
add
mov
add
out
cli
mov
and
rcll
xchg
xchg
out
ret
loop
js
fcomi
sarl
ss
dec
stos
adc
inc
pop
ficompl
add
les
out
add
pop
std
jns
popf
icebp
and
mov
and
mov
movsl
movsl
dec
add
mov
jno
aaa
test
xor
add
push
sbb
faddl
mov
in
mov
icebp
fistps
dec
or
aaa
cli
jge
adc
add
mov
sub
aam
xchg
andb
add
inc
ficoms
push
test
ds
mov
nop
mov
jno
fcomp
or
mov
adc
sub
fcomp
jae
lods
pop
je
add
pop
mov
popa
daa
lcall
movsl
mov
fmull
lds
add
jne
push
add
jmp
add
mov
lods
sbb
mov
mov
add
das
xor
lea
or
mov
icebp
mov
inc
pop
pushf
out
pop
jge
arpl
or
mov
in
daa
cmpsl
mov
sahf
fstps
and
ja
add
add
insl
mov
adc
inc
out
aas
inc
dec
and
xchg
push
add
jp
add
ret
xor
fcompl
adc
inc
push
push
push
fstpt
in
adc
fninit
pop
xor
xorb
add
cli
bound
add
mov
imul
arpl
loopne
jge
and
insb
add
mov
jb
mov
in
lcall
loopne
adc
and
gs
outsb
pop
out
jbe
cmp
fidivl
adc
ror
jecxz
add
mov
repnz
dec
rolb
ret
or
mov
cltd
ret
iret
dec
test
mov
jno
ja
mov
fdivrp
xchg
mov
lods
lds
addl
mov
sub
fucomip
ds
icebp
cmp
fnsave
xor
pop
lcall
mov
out
cmp
mov
aam
scas
or
gs
bound
arpl
test
stos
push
mov
stos
or
mov
pop
cli
pop
mov
outsl
pop
out
ds
in
out
pop
pushf
mov
add
in
or
add
xor
cli
jne
mov
pop
mov
imul
add
mov
and
xchg
mov
pushf
cmc
mov
in
jns
int3
inc
jnp
add
mov
mov
repz
add
push
sub
mov
mov
adc
iret
cmp
loope
inc
pop
xchg
mov
jns
mov
loop
ds
mov
xor
ficompl
pop
repz
mov
lret
xchg
fiaddl
add
add
add
inc
and
rcrl
aad
dec
aad
sub
mov
pop
sub
mov
outsb
xchg
push
mov
lock
enter
xchg
jmp
outsl
and
mov
jo
dec
cld
pop
jb
sbb
sbb
sbb
cmp
out
fsubr
inc
fdivl
shll
dec
rcl
shlb
jle
xor
jno
fists
jno
out
push
cwtl
movsb
in
xor
gs
sub
add
movsl
xchg
loopne
inc
add
loop
add
mov
loope
out
in
imul
jne
and
ret
ljmp
daa
out
lock
cmp
push
sub
adcl
test
mov
add
mov
lds
push
out
inc
js
ficoml
add
add
arpl
cmpsl
adc
pop
xchg
sbb
rcrb
inc
and
lea
jb
fnstsw
cld
mov
dec
inc
jae
mov
add
mov
push
xchg
out
ja
xor
pop
xor
dec
xchg
shlb
rcll
mov
mov
daa
movsb
sbb
stos
xchg
idiv
lahf
inc
add
lock
mov
sbb
incl
mov
add
push
repz
mov
inc
cmc
sti
push
rcrl
jno
adc
in
push
or
ds
fidivrl
add
add
lret
adc
cld
movsl
insb
add
xor
cld
test
imul
cs
push
push
xor
mov
lods
inc
pop
or
mov
jp
or
mov
dec
pop
lret
test
sbb
pop
adcb
ljmp
pop
repnz
jg
aaa
loope
lea
pop
jb
pop
roll
push
inc
mov
xorb
stos
iret
out
out
outsb
jmp
repnz
jecxz
add
mov
add
outsb
in
dec
rorb
add
add
push
mov
mov
lahf
mov
mov
jmp
mov
rcll
dec
mov
dec
add
mov
mov
lret
aaa
out
pop
arpl
outsb
rol
inc
add
push
adc
mov
loope
scas
mov
xchg
add
mov
mov
cs
sbb
in
push
das
stos
loope
jns
outsl
lods
insl
popf
mov
add
jmp
jne
imul
ljmp
je
cmp
mov
js
int3
push
inc
mov
dec
addb
mov
cmp
pop
ficoml
mov
add
aad
mov
cmp
adc
pop
movsl
out
aad
shlb
jbe
xchg
es
mov
add
shlb
or
adcb
mov
ret
into
fsts
or
pop
sahf
xor
sub
xchg
adc
mov
lret
lcall
sti
icebp
inc
xlat
loopne
adc
in
sbb
shrb
add
mov
add
aas
insb
add
fstpl
cmc
out
push
mov
pusha
add
adc
jne
sub
in
enter
mov
xchg
fidivl
sbb
fmuls
mov
add
mov
mov
test
mov
out
cmpsb
je
adc
les
add
inc
sbb
pop
push
leave
or
add
int3
jns
movaps
mov
inc
dec
add
push
jbe
fmuls
icebp
neg
add
scas
sub
xchg
cs
and
mov
cltd
test
jg
pop
push
inc
pop
stos
aad
mov
push
sub
pop
loope
pop
sub
jnp
sets
and
mov
inc
lcall
or
cltd
cltd
scas
jae
ljmp
mov
in
sub
ja
or
mov
inc
sub
mov
mov
mov
add
adc
add
lcall
xlat
shlb
call
add
leave
adc
in
add
and
mov
add
stc
test
out
ss
pop
scas
das
sti
es
mov
jno
xor
stos
cmp
int3
pop
js
nop
xchg
xor
js
cwtl
in
mov
jle
andb
int3
sbb
add
add
xor
insl
lods
cltd
cmp
mov
xor
int3
jl
ja
adc
jbe
pop
mov
pop
sbb
ficompl
loop
add
iret
xchg
xchg
out
jbe
mov
or
scas
mov
mov
and
daa
push
dec
jl
loop
movb
out
sbb
movsl
fstl
lods
jne
push
and
cmpsl
cmpsb
xor
xchg
call
fdiv
mov
rcrl
inc
add
outsl
sarb
xor
test
arpl
push
out
sti
adc
inc
jecxz
popa
ret
inc
add
mov
imul
add
and
sub
sub
shll
xor
jl
mov
loop
clc
jno
xchg
mov
add
iret
ss
add
mov
jp
lret
test
cmp
jae,pt
mov
mov
sub
shlb
mov
jb
sub
pop
jae
push
or
mov
sbb
add
lods
or
andl
push
adc
addl
add
or
mov
add
fcomps
adc
imull
std
std
and
mov
pop
stc
daa
outsb
adc
in
lock
jecxz
add
push
andb
push
loopne
inc
pusha
add
in
negb
jg
jl
ror
sarb
outsb
xchg
dec
add
jp
add
faddl
adc
jmp
test
daa
jno
xchg
or
mov
icebp
or
mov
mov
lcall
pop
insl
and
outsb
push
push
cmc
fldenv
jno
adc
sarl
pushf
pop
es
in
cmp
xor
pop
arpl
sbb
das
xor
in
mov
mov
js
les
mov
jns
jge
jo
ds
sub
mov
fisubrl
add
push
out
pop
jbe
addb
jle
or
mov
add
mov
mov
inc
add
jmp
add
loop
inc
sub
mov
cmpsl
xlat
mov
xchg
insl
xlat
add
jmp
imul
mov
addr16
scas
xchg
stos
cltd
inc
jb
adc
xor
xchg
lret
loope
rcrl
sub
mov
int
mov
sbb
xchg
jle
dec
jmp
inc
add
scas
scas
test
sti
data16
mov
dec
rcll
shrl
and
mov
out
sahf
mov
adc
fildll
add
pop
sub
mov
and
fwait
mov
dec
lahf
cmpsb
cld
lea
mov
add
jne
mov
clc
repz
lret
adc
add
and
add
dec
cmp
movsb
sub
mov
add
mov
cmp
ficomps
xor
jmp
add
xor
loop
xor
pop
add
add
dec
or
mov
popf
push
push
pusha
add
cmpsl
xchg
mov
std
stos
imul
je
inc
cwtl
lods
jnp
xchg
jmp
xor
dec
mov
shrl
mov
mov
add
rorl
mov
mov
and
pushf
mov
sbb
lds
add
push
int3
sub
sahf
sbb
icebp
mov
scas
push
loopne
cmp
add
jg
loopne
sbb
or
add
sarl
mov
xchg
xchg
jne
add
adc
repnz
clc
lock
popf
lcall
stc
popa
je
insb
add
mov
add
push
and
jg
sbb
gs
repz
repnz
pop
ljmp
add
add
jae
clc
sti
or
mov
sbb
mov
add
lcall
ds
gs
subb
xchg
aaa
mov
inc
lahf
cmp
add
push
or
or
mov
jb
push
add
pop
loop
lcall
dec
pusha
add
outsb
xchg
inc
xchg
iret
cli
dec
pushf
push
and
mov
ja
fbld
loop
add
lahf
cmpsl
mov
or
or
iret
mov
push
dec
imul
add
jae
adc
in
mov
inc
mov
pop
inc
push
jne
and
scas
int3
ffree
cmp
or
mov
jmp
lret
mov
add
loop
jg
xor
enter
movsb
jo
or
cmp
add
aaa
daa
mov
adc
jl
sub
mov
push
fwait
sub
mov
xchg
push
lock
xor
cmp
add
mov
mov
repz
cmp
sub
loop
and
mov
imul
int3
xchg
mov
cmp
add
mov
jbe
lahf
lock
iret
js
xchg
fisubrs
add
xlat
enter
hlt
into
aas
bound
lds
leave
out
lahf
add
mov
pop
add
mov
pop
push
dec
jle
test
cmpsb
dec
push
in
push
ljmp
mov
add
mov
adc
pop
mov
inc
adc
mov
repz
mov
dec
mov
add
mov
or
movsl
rclb
push
push
push
sub
cs
or
sbb
mov
or
sbb
es
xchg
enter
jg
pop
mov
dec
add
push
sub
sub
mov
js
sub
inc
add
add
mov
mov
int3
cmc
cld
stos
test
inc
add
imul
add
add
dec
ljmp
add
mov
shrb
mov
icebp
or
mov
xor
cmpsl
and
mov
sub
out
push
mov
mov
fcmovnb
jmp
xchg
rcrb
jne
cmp
adc
testl
mov
push
xor
jge
orl
cmc
mov
add
out
xor
mov
jp
adc
idivl
out
in
int
add
sub
mov
sahf
add
mov
lcall
cmp
pop
es
add
loop
xchg
insl
cwtl
fbld
mov
sub
add
add
call
jno
pop
xchg
or
dec
dec
mov
pcmpgtw
add
idiv
mov
mov
add
mov
loop
mov
lret
and
mov
fcom
stos
pop
jg
test
lods
adc
ret
pop
arpl
and
mov
aaa
jmp
ljmp
push
js
ss
inc
add
notl
xor
mov
jmp
dec
add
es
fistpl
insl
std
add
dec
add
in
pushf
aas
mov
outsb
cld
loope
or
mov
mov
pop
mov
add
shrb
fiaddl
add
add
lods
sbb
pop
ret
or
mov
idivb
out
and
add
pop
push
bnd
xchg
push
iret
pop
in
jo
cmp
fmulp
add
mov
mov
add
test
cmp
sahf
rcl
xchg
fimull
cmp
mov
fistpll
aad
mov
cmp
fnstenv
push
in
cmc
shr
adc
push
sub
cmp
mov
int
add
ret
push
loop
aam
add
pop
pavgw
arpl
or
mov
fildl
push
into
xchg
and
mov
mov
mov
rorb
stos
rcrl
push
jne
sbb
ds
mov
call
add
loop
popa
push
and
add
xor
mov
fistl
xor
sbb
pop
mov
shrb
jp
xor
sbb
dec
add
mov
out
mov
xchg
jmp
pop
addr16
xchg
xorb
cli
dec
push
adc
into
leave
fwait
lods
add
mov
int
add
xchg
jmp
xor
ljmp
mov
addr16
hlt
and
in
cltd
fidivl
loopne
add
aad
mov
add
jl
jmp
stos
sub
mov
xchg
jecxz
aas
imul
ret
bound
test
xor
dec
inc
push
repz
jns
mov
jg
add
loopne
xor
testl
add
add
sub
add
xchg
push
ror
and
es
xchg
lahf
icebp
jp
sbb
rcrb
add
jmp
sbb
movsl
dec
outsb
dec
out
or
cmp
in
add
clc
mov
hlt
loop
inc
add
dec
or
mov
orl
add
lock
mov
adc
push
sub
popf
sub
pushl
add
outsb
cld
xorl
add
or
std
stos
mov
add
xchg
fld
or
cld
xchg
or
xor
mov
mov
in
stc
mov
push
out
sbb
ret
lcall
mov
adc
shll
and
repz
pop
mov
repnz
rolb
dec
loop
and
mov
add
cmp
outsb
mov
roll
mov
ljmp
shrl
push
lcall
mulb
and
mov
add
jb
nop
pop
push
faddl
sbb
add
jl
cmp
add
mov
out
pushf
lods
cmc
push
ror
sbb
sbb
cmp
jbe
lret
repnz
or
gs
sub
pop
xchg
loope
cli
ss
jge
jg
mov
add
stc
ret
inc
add
dec
mov
stos
in
stc
repz
cmp
xor
xor
mov
test
sub
mov
cwtl
mov
out
mov
imul
add
cwtl
cwtl
xor
mov
sbb
call
test
pop
stc
addr16
rcrb
cwtl
mov
insb
add
mov
add
push
xchg
or
mov
popf
in
pop
in
mov
bnd
mov
test
aas
rorl
or
push
xlat
je
add
mov
add
mov
add
mov
mov
add
ret
xor
push
mov
loop
xchg
cmp
in
add
push
pop
popf
inc
fsubp
test
jae
adc
mov
mov
mov
movsb
jns
gs
and
out
jecxz
jl
jbe
ds
mov
dec
add
testl
ss
or
mov
int3
and
pushf
mov
add
bswap
hlt
sub
mov
clc
fisttpll
add
mov
cli
or
mov
mov
or
mov
shrb
add
fsubrs
ret
mov
sub
mov
mov
adc
loope
add
and
mov
jne
mov
sbb
int3
pop
in
lret
sbb
sbb
push
add
or
rolb
loope
adc
insl
fwait
shll
add
arpl
sbb
cmpb
or
test
lahf
xchg
inc
out
mov
and
je
rcrl
faddl
mov
movsl
pusha
add
jmp
xor
mov
push
cmovnp
add
imul
mov
inc
lds
add
jp
scas
pop
mov
inc
and
or
add
dec
fdivp
xor
adc
ljmp
add
cmc
sbb
xor
es
add
shl
rcr
cmpsl
sbb
mov
mov
cmpsl
enter
jg
ds
xor
add
ds
ds
jmp
mov
ja
pop
inc
loopne
dec
pop
mov
sarl
mov
scas
adc
xchg
out
cld
push
mov
pop
and
insl
adcl
fsincos
xchg
adc
insl
cwtl
ffree
add
das
mov
stos
sarl
mov
mov
pop
sbb
xchg
xchg
mov
mov
mov
int3
pop
mov
sub
add
pop
test
sahf
addr16
mov
jmp
mov
sbb
jne
sbb
int3
mov
mov
and
rcrb
adc
sub
mov
aam
add
xor
or
mov
ja
sarl
add
ret
jno
jp
ss
xor
insl
dec
xor
jno
std
int
jb
je
iret
call
mov
cmp
test
mov
jns
dec
enter
add
lea
mov
xchg
inc
leave
addr16
insb
add
xchg
sub
mov
dec
and
dec
iret
add
xor
cs
add
mov
fisubl
add
test
adc
cmc
mov
rol
cmp
and
mov
push
mov
xchg
cmp
push
adc
xchg
push
sti
in
ret
and
mov
cmp
loope
notb
add
cld
dec
or
popa
js
pop
mov
arpl
sar
dec
push
movsb
inc
push
xor
pop
add
add
push
cmp
cmp
push
sbb
sub
jmp
fnsave
mov
into
addr16
lea
in
push
lahf
imul
repnz
out
mov
add
call
test
pop
mov
cli
stos
push
mov
shrb
add
pushf
and
mov
fimull
mov
xorb
mov
pop
rorl
adc
xor
dec
lds
mov
not
adc
out
fistps
bound
lcall
movsb
cmp
fistps
clc
aad
xor
cs
sub
mov
repnz
add
mov
mov
shll
sbb
sahf
dec
add
mov
cmp
cld
pop
mov
adc
mov
push
jnp
mov
and
mov
pop
jmp
test
mov
push
jg
aad
add
mov
add
adc
or
ret
aaa
mov
add
imul
mov
add
lods
inc
pop
ss
xor
xor
mov
in
inc
lret
mov
add
inc
cld
dec
or
imul
imul
push
mov
cld
rorl
mov
test
and
clc
mov
jae
pop
iret
sbb
test
sub
mov
mov
add
jnp
daa
movsb
adc
jl
dec
add
iret
inc
lock
int3
dec
push
movsb
mov
add
add
clc
fidivrs
or
imul
mov
jne
jp
push
or
mov
inc
jno
jecxz
jo
pop
cwtl
lea
je
repz
fisubl
sarb
stos
xor
das
lcall
outsl
shll
popa
pushf
inc
addr16
push
fwait
push
lock
ja
cmp
in
cmp
std
push
sbb
add
mov
sub
scas
rol
xchg
pop
test
pop
pop
mov
lret
ds
add
nop
jle
mov
cli
sbb
mov
add
ja
xor
add
mov
jecxz
sub
mov
dec
add
shr
out
nop
pop
or
mov
sub
call
in
pop
sub
mov
mov
xor
sub
mov
pop
mov
cmp
mov
jp
add
push
jg
jmp
decb
inc
mov
add
sub
test
lock
mov
dec
add
mov
xchg
and
cmc
or
xor
nop
push
pop
fcoms
sbb
mov
jne
loopne
add
repnz
cmc
dec
aas
sub
mov
mov
xchg
add
jecxz
mull
fldt
repnz
mov
into
out
cli
jmp
pusha
add
mov
les
mov
mov
and
add
hlt
cmp
fmuls
inc
cmp
fimuls
add
xchg
repz
mov
es
roll
push
mov
stc
mov
repz
mov
sarl
push
sub
mov
inc
mov
adc
shl
or
add
testb
inc
mov
push
cmp
adc
jo
cmpsb
es
push
push
or
fstpt
mov
pop
ss
mov
sar
clc
fcomps
xor
xor
pop
gs
mov
mov
insl
push
dec
pusha
add
add
add
and
mov
lret
jo
xchg
aas
xchg
enter
cmpsb
mov
mov
cmp
mov
shlb
notl
or
xor
hlt
stc
add
mov
dec
add
sbb
add
test
shll
jl
add
mov
cmp
sub
lcall
add
pop
pop
dec
ja
pop
xchg
sbb
mov
adc
jmp
pusha
add
dec
add
stc
loope
add
js
add
js
sub
out
leave
jb
inc
inc
xor
or
mov
je
std
dec
add
push
mov
xchg
fistpl
mov
das
movsb
mov
add
dec
sbb
test
cltd
push
rclb
pop
or
mov
xor
data16
jae
dec
movsl
enter
out
cmp
xchg
xchg
pop
sub
or
mov
add
mov
in
enter
add
cmp
aas
mov
aas
sub
mov
mov
cld
das
test
add
iret
lods
pop
push
cmc
xchg
sbb
insb
add
sbb
cwtl
jmp
or
mov
aaa
xchg
movsb
jl
push
scas
sbb
add
push
lret
jle
cmp
xchg
loop
cli
jnp
add
dec
pushf
mov
int3
or
xchg
mov
es
cmp
popa
dec
stos
sbb
outsl
shrb
add
jns
pop
outsb
jae
inc
or
lock
inc
add
pop
lret
lret
sbb
pop
jecxz
add
push
test
movsl
mov
mov
adc
or
add
push
out
mov
add
add
mov
or
out
addl
xchg
mov
std
mov
das
in
dec
test
aaa
cmpsb
call
into
jge
std
int
push
mov
pop
stos
adc
and
mov
cmp
mov
push
fisubrl
cwtl
jecxz
push
int3
data16
int
or
mov
or
mov
fnstcw
sbb
adc
dec
jge
cmp
test
add
and
inc
push
dec
or
xor
sarl
leave
mov
fcoml
xchg
fnstsw
mov
gs
add
add
mov
add
into
clc
fxch
inc
inc
in
ljmp
loopne
call
cmp
mov
scas
sti
sarl
or
mov
xchg
shlb
jno
lcall
and
mov
lcall
push
jns
xchg
sbb
or
add
addr16
sub
call
mov
lods
sbb
add
add
hlt
shl
inc
mov
rcll
sahf
sub
icebp
xchg
rcrb
add
jne
mov
mov
sub
inc
mov
and
dec
xchg
or
mov
fisubrl
mov
fstl
in
mov
mov
sarb
mov
clc
int
jecxz
sbb
sub
inc
cli
ja
mov
inc
add
in
add
xchg
loop
push
cmp
add
data16
cmp
add
add
lock
mov
aas
dec
add
add
add
or
mov
ja
xchg
or
xchg
dec
into
pop
mov
sbb
pop
dec
and
lret
sub
filds
add
jno
ss
sub
push
lods
add
mov
xchg
mov
rdpmc
add
sbb
mov
inc
sbb
mov
mov
iret
xor
nop
movsl
cmc
out
inc
leave
mov
cmpsl
scas
sbb
popf
popf
pop
mov
test
cwtl
sub
mov
sub
mov
pusha
add
mov
or
mov
das
xor
push
loope
cmp
inc
dec
add
mov
add
movsl
imul
insl
or
lea
es
mov
fbstp
sbb
daa
or
mov
rcl
or
out
notl
push
testl
cmp
add
in
gs
or
xlat
xchg
adc
sar
jo
xor
jns
int
sbb
out
cmp
adc
or
loopne
mov
add
cmpsb
push
jne
xorb
push
loop
xor
add
add
dec
mov
lcall
test
jecxz
out
aas
ds
shl
mov
jmp
pop
addr16
mov
pop
stos
and
push
mov
mov
imul
ret
into
lcall
add
pop
jp
dec
add
sub
mov
aas
mov
jns
lret
mov
mov
out
pusha
add
mov
leave
push
and
test
add
xorl
fwait
or
push
push
jbe
cld
jp
pop
pop
rcll
outsb
mov
jle
ret
ret
dec
pusha
add
cwtl
xchg
pushw
mov
cmpsb
stos
mov
inc
add
mov
mov
pop
pop
std
push
mov
and
mov
pop
add
popa
sbb
aad
je
push
iret
dec
pop
repz
inc
test
std
jnp
fildll
add
mov
pop
xor
cwtl
cmpb
jge
cmp
lds
mov
xor
std
addl
inc
add
mov
add
cmp
and
mov
dec
mov
pusha
add
add
inc
and
ss
cmp
mov
inc
pop
and
mov
mov
pop
mov
mov
fidivrs
mov
mov
xor
mov
add
jb
pop
jmp
push
jne
sub
lods
out
sub
xchg
sbb
push
push
cwtl
pushf
adc
inc
test
mov
push
inc
add
inc
jne
out
mov
add
repnz
inc
pop
jbe
aas
mov
mov
jl
out
add
insb
add
mov
rorl
add
pop
dec
add
mov
aam
lods
xor
xchg
sub
add
popf
bnd
sbb
push
push
mov
loop
xchg
fstps
movsb
repz
js
cltd
cmpsl
pop
adc
pop
xchg
dec
add
add
add
pop
mov
das
js
mov
inc
lods
mov
add
pinsrw
mov
inc
lds
add
daa
and
fadds
sar
jns
lret
enter
add
add
repz
loope
test
cli
fldcw
mov
add
add
roll
xlat
mov
dec
dec
aaa
scas
push
pop
or
popf
jl
sub
mov
ret
std
in
mov
push
stos
pushf
lahf
push
mov
ljmp
or
call
int
add
std
and
mov
add
adc
ja
pop
pop
dec
add
mov
xlat
jnp
mov
xor
inc
inc
sahf
mov
sar
adc
mov
lds
cmp
hlt
cmc
add
mov
cltd
pusha
add
rcrl
movsl
sub
xchg
adc
push
cmpsl
shr
enter
or
das
jl
fldl
jno
int
push
fisubl
shrb
sub
mov
push
aaa
xlat
adc
add
ljmp
mov
call
add
xor
xor
add
adc
subl
xchg
fcompl
push
push
jl
pusha
add
js
aas
sbb
sbb
mov
cmpl
add
ljmp
xor
mov
add
pop
add
mov
ljmp
mov
subb
inc
pop
push
sahf
out
aam
mov
cwtl
sbb
or
mov
push
push
popf
enter
call
add
jg
scas
xor
cmp
and
cmp
icebp
iret
clc
fbstp
sub
mov
mov
shlb
daa
xchg
inc
or
sar
jb
add
cmp
mov
nop
xor
xchg
mov
call
fwait
add
and
mov
add
lret
push
inc
add
shl
lret
std
test
aas
fsub
pusha
add
je
jmp
das
fisubrl
mov
dec
jecxz
add
ljmp
lods
dec
add
mov
stc
sub
mov
push
scas
xor
mov
ss
insb
add
hlt
mov
cmp
mov
or
mov
cmp
add
dec
out
fadds
loop
mov
and
mov
mov
imul
dec
add
mov
add
loop
add
cwtl
xor
stos
mov
into
sub
loop,pn
cmp
fwait
jne
push
test
mov
cmp
inc
jecxz
pop
adc
or
add
mov
mov
add
add
mov
push
inc
mov
mov
test
mov
loope
insl
mov
shlb
lahf
mov
sbb
xchg
pop
mov
and
push
sub
mov
push
stc
pop
aam
int
insb
add
add
xchg
xchg
mov
out
mov
bound
cmp
sahf
jmp
add
loopne
pop
fstpl
aam
xchg
push
dec
inc
cltd
push
in
ds
cmp
push
cwtl
stc
mov
lods
push
push
lret
pop
add
inc
xchg
mov
scas
dec
adc
lret
mov
sbb
xlat
inc
subl
mov
xor
loope
push
mov
xchg
std
cmpsl
or
cwtl
cmpsl
lret
sub
mov
lods
adc
pushl
aam
sub
sub
iret
sub
mov
mov
fwait
jbe
dec
push
push
cs
fmull
mov
push
add
les
add
mov
push
dec
cmpsb
out
sbb
mov
dec
pop
ja
stos
or
mov
inc
fisubs
dec
add
and
add
mov
negl
repnz
stos
mov
or
int
add
enter
ja
xor
pop
adc
fnsave
mov
imul
xchg
sub
mov
imul
add
push
xchg
repz
mulb
inc
add
ffreep
push
out
popa
pop
das
jnp
fidivl
push
dec
add
into
xchg
int
daa
and
xchg
add
mov
jmp
pop
icebp
ret
add
mov
insb
add
pop
xor
mov
lods
add
add
xchg
cmp
jecxz
std
push
inc
mov
insb
add
add
mov
push
or
rorb
stc
repnz
mov
xchg
sbb
icebp
movsl
loopne
and
mov
dec
fdivrp
fistpl
pop
dec
roll
add
pop
and
adc
add
int
fadd
pop
inc
add
ret
add
rorl
mov
mov
add
cmp
scas
push
dec
xor
add
test
or
jp
andb
mov
mov
sbb
xor
inc
push
les
lret
push
arpl
daa
insl
decl
fisttps
rsm
andl
jle
lahf
sahf
aas
xor
jnp
sbbb
test
cli
test
insl
mov
lods
or
mov
dec
nop
cmp
sahf
mov
addr16
aam
pop
pushf
dec
add
out
incb
sti
xor
jp
repz
in
inc
clc
aaa
int3
lds
insl
lock
clc
repnz
sub
cwtl
pop
call
add
mov
add
jno
or
or
mov
mov
fdivs
mov
cmp
int3
ja
adc
movsb
call
mov
out
add
cmpsb
fwait
outsl
rcrb
jae
addl
pop
lock
repnz
aas
lcall
sti
lahf
fisubrs
in
or
adc
mov
int3
jnp
lds
repnz
xchg
orb
arpl
sub
mov
add
dec
add
mov
sub
imulb
das
mov
ljmp
mov
shlb
dec
xchg
mov
mov
ret
push
mov
add
mov
dec
dec
add
ret
sub
mov
mov
lea
scas
imul
xchg
cmp
test
push
and
repnz
cli
fistl
dec
mov
std
cmp
ss
pop
adc
repnz
add
mov
pop
mov
and
add
sbb
rclb
xchg
dec
xor
or
add
fimuls
mov
mov
popa
jge
data16
xchg
es
test
flds
add
imul
mov
inc
nop
and
fdivp
rcll
es
lods
cmp
add
in
call
jp
sbb
cli
test
dec
xlat
neg
arpl
test
popa
mov
cmp
pusha
add
cmp
rcr
add
xchg
mov
cld
aad
pop
loopne
bound
mov
hlt
sbb
or
push
and
mov
mov
xor
ds
or
cmp
arpl
jae
push
test
cmp
hlt
jne
cmp
dec
add
sahf
jp
lods
dec
push
or
xor
loopne
mov
mov
and
adc
loop
lcall
imul
rorl
add
insb
add
sbb
pmaxsw
scas
jl
and
fwait
addr16
lock
int3
dec
jno
add
mov
inc
add
lods
xor
or
dec
add
xchg
mov
add
sbb
jecxz
das
sbb
pop
push
push
cld
and
push
cmp
add
mov
aas
insb
add
fcom
mov
mov
stos
shlb
call
mov
jmp
xchg
mov
sbb
xor
test
scas
push
cmp
mov
aam
sahf
and
mov
inc
add
out
push
ret
popa
push
lea
cmpsl
out
hlt
scas
pushf
mov
gs
ljmp
test
xchg
jo
movsl
mov
subb
add
mov
add
mov
ret
xor
out
loop
jle
mov
mov
push
in
inc
in
lret
nop
sub
mov
lcall
mov
mov
decl
add
test
pop
int
idivb
adc
jg
shrb
inc
add
cmpsb
push
adc
add
add
cmp
aaa
das
lock
mov
pop
mov
mov
jne
incb
add
jl
ljmp
add
cmpsl
stos
out
xor
add
and
add
or
mov
sbb
mov
arpl
add
mov
lcall
dec
add
and
mov
cmp
mov
stos
jl
pop
ja
fsubrl
shll
rclb
xchg
dec
add
sarl
lods
push
scas
jnp
int
cmpsb
xor
pop
xor
add
xor
add
loope
call
repz
pop
and
pop
dec
clc
mov
cli
pushf
xor
adc
insb
add
stos
stos
sbb
xlat
ss
popa
xchg
jno
mov
bound
scas
je
sbb
xchg
loop
xchg
aam
jg
fldt
enter
cmc
scas
cmp
fidivl
add
dec
loopne
cmp
mov
mov
push
mov
or
jmp
shrb
lock
add
xor
add
sub
mov
cmp
or
mov
cmpsl
pushf
or
mov
cmpsb
andb
add
icebp
xor
movsb
arpl
das
push
sbb
mov
ret
les
xchg
mov
ds
add
std
sti
aaa
adc
test
ss
inc
out
negb
fsubs
or
mov
in
les
imul
add
pusha
add
mov
mov
push
mov
inc
and
cmpsb
test
xor
mov
mov
mov
sbb
lret
fimull
lea
jbe
stos
jnp
push
arpl
cld
popf
xor
in
outsb
xchg
dec
inc
xor
mov
or
loopne
inc
cli
xor
pop
jge
pop
xchg
mov
test
push
in
add
mov
jne
add
add
popa
sbb
xchg
sbb
jg
rcrl
push
insb
add
mov
fidivl
sbb
push
sub
push
lea
push
in
sub
and
mov
or
sbb
inc
nop
inc
mov
mov
inc
out
push
cmp
loop
mov
jp
pop
push
lods
pop
inc
lcall
repnz
aad
lret
dec
iret
iret
jae
and
mov
add
lds
xchg
dec
add
lea
es
outsl
ljmp
add
add
cltd
add
clc
mov
or
push
mov
adc
mov
repnz
add
add
add
push
cmp
add
shl
out
jmp
enter
add
jbe
jg
xchg
stos
inc
cmp
fdivp
add
mov
add
inc
add
jecxz
xor
mov
push
mov
xchg
jmp
fwait
xchg
je
adc
mov
mov
aam
sub
mov
add
jno
mov
cmp
in
and
mov
add
aaa
and
das
inc
add
leave
lahf
test
packsswb
adc
pusha
add
mov
leave
cmpsl
inc
pushf
mov
dec
sub
mov
call
lcall
push
sub
push
jge
add
in
push
jecxz
pop
push
cmp
push
loop
fisttpll
jge
in
ret
sub
jle
sbb
sahf
or
mov
movsl
xchg
jno
or
hlt
les
mov
lahf
jnp
mov
fcomps
repz
dec
push
mov
add
cmp
scas
aad
mov
sbb
pop
sub
lods
push
cmp
push
pop
cmc
mov
jne
lahf
test
ljmp
add
mov
rcrl
andl
stc
mov
mov
xor
cmp
leave
das
push
inc
push
mov
sbb
mov
add
push
sub
cmp
scas
mov
add
sbbl
xchg
stos
shll
pop
out
dec
iret
adc
add
or
movsb
lahf
dec
add
add
dec
add
ds
rorb
or
mov
out
mov
inc
lods
ja
add
jge
int3
lock
jle
aad
cmp
push
stos
dec
add
mov
insb
add
loop
js
push
mov
inc
int
lret
sub
mov
dec
cmp
in
cmp
test
imul
dec
in
xchg
mov
or
mov
inc
das
clc
xchg
in
cmp
popf
aad
mov
ja
pushf
mov
and
mov
into
mov
pop
outsb
sarb
adc
mov
lea
sbb
mov
xor
in
push
js
xchg
jg
xchg
jne
mov
mov
mov
and
mov
outsl
pop
cmp
sti
push
mov
lods
mov
add
mov
mov
stc
mov
and
mov
int3
push
sbb
arpl
add
or
ror
cmp
shll
mov
mov
inc
dec
cli
xchg
push
cwtl
xor
jns,pt
xchg
mov
sbb
mov
popa
jmp
adc
add
mov
adc
sti
inc
inc
add
int3
movsb
mov
xor
subb
add
pop
outsl
mulb
inc
add
enter
cs
add
add
push
adc
adc
repz
push
rcrl
ds
push
mov
inc
shr
push
enter
shll
add
add
dec
add
test
ss
cwtl
sub
mov
mov
jmp
inc
add
fmull
pop
scas
bound
lock
push
test
mov
mov
cmpl
jnp
orl
idivb
ffreep
xlat
movzwl
cwtl
adc
aas
jne
in
sub
mov
mov
jecxz
ret
roll
fcom
cmpsb
jg
xor
jns
adc
inc
pop
ja
add
fildl
in
test
leave
mov
add
and
es
xchg
and
mov
or
mov
jp
pop
into
sahf
adc
clc
cmovb
pop
nop
adc
push
mov
push
fcmovnb
and
lea
jecxz
ret
cmp
add
js
pop
or
add
mov
sbb
push
inc
add
scas
stos
mov
sbb
sbb
or
add
dec
ds
xor
shrl
jl
lods
push
icebp
popl
mov
or
mov
sub
cs
mov
jecxz
push
and
push
sti
sub
int
jge
mov
push
mov
mov
mov
add
outsb
add
add
les
cmp
lds
jns
pushl
sbb
aaa
push
repnz
aaa
icebp
adc
jne
sbb
pop
add
sub
mov
push
mov
out
ja
jbe
add
mov
add
add
dec
das
test
adc
das
rcl
xchg
popf
test
lret
std
jmp
aad
pop
push
sbb
xchg
out
lods
or
ret
in
mov
xchg
mov
fmul
in
repnz
fistps
cmp
outsl
mov
inc
jns
lret
std
es
mov
mov
ljmp
jnp
popa
push
pop
out
xchg
jb
aas
push
pop
adc
outsl
push
loope
pop
sarb
xchg
xchg
fwait
bndstx
loop
mov
mov
cltd
jbe
repnz
add
ljmp
lcall
add
mov
add
out
loop
notl
loopne
xchg
into
outsb
sbb
add
add
outsb
jne
add
lcall
mov
sbb
xor
add
mov
dec
add
add
add
mov
pop
rcll
add
lock
mov
mov
imul
lods
jle
jno
aad
add
mov
push
inc
lret
xorl
movsl
fidivrs
jl
jbe
hlt
xor
cli
shl
cld
and
push
dec
add
xor
dec
adc
fdivrl
add
adcb
jo
arpl
and
sbb
sub
cld
aaa
pop
mov
pusha
add
ret
push
scas
ss
shr
pop
ret
xchg
and
adc
or
mov
jge
repz
mov
leave
jb
sub
xchg
jnp
add
adc
mov
and
mov
mov
add
add
leave
mov
imul
cwtl
dec
mov
sahf
std
cmc
divl
inc
add
mov
ret
vmovaps
mov
pop
adc
add
sbb
mov
mov
enter
xchg
or
fmulp
subl
ficomps
mov
dec
scas
push
and
lret
mov
add
add
add
add
jne
cli
or
add
insl
jne
mov
xchg
addl
mov
addl
sti
das
mov
cs
add
gs
xchg
and
mov
ret
insl
out
jmp
cwtl
cmp
pop
jle
push
push
sub
mov
jle
add
add
out
push
stos
cmpsb
fsubl
fwait
lret
ljmp
int3
and
mov
jecxz
mov
fwait
scas
enter
mov
pop
cmc
and
mov
mov
sub
cmp
clc
fisubrl
or
add
adc
push
or
cmpsb
sbb
aaa
cmp
pop
xor
dec
add
mov
dec
add
add
push
rcll
jecxz
add
inc
push
and
popf
mov
popf
repz
mov
dec
add
xchg
jle
mov
fisttpl
add
jae
dec
add
xchg
inc
in
je
fmuls
repz
mov
adc
mov
les
rolb
mov
outsl
lock
mov
xchg
jb
mov
fldt
cmp
mov
das
pop
aam
xor
in
push
sbb
xor
pop
pop
xlat
dec
mov
and
fistpl
sub
xor
clc
ljmp
mov
in
aaa
and
mov
mov
js
mov
mov
aad
push
pop
test
add
outsl
xchg
jnp
add
pop
inc
into
mov
mov
xor
out
add
mov
shlb
xor
es
mov
lret
xor
imul
sub
roll
cltd
lahf
js
push
xchg
pop
cli
pop
fnstenv
push
movsb
notl
std
push
popa
in
imul
jl
xchg
rcrb
add
mov
fcomps
mov
lods
cs
pop
sbb
add
jg
mov
fisubrs
fisttpll
push
xchg
es
aas
out
jecxz
xchg
or
lods
cmp
movsl
fwait
ljmp
mov
pop
imul
mov
add
repnz
cmp
add
inc
add
add
push
pop
add
add
insb
add
jmp
cs
inc
sbb
add
testl
stc
or
mov
rol
out
arpl
data16
sub
and
mov
daa
shlb
lods
xchg
test
add
mov
clc
cmpb
mov
jbe
sti
jge
je
sub
mov
enter
scas
cmp
jge
fwait
pop
or
mov
ficomps
pusha
add
mov
cwtl
cmpsl
add
mov
lods
rcl
xchg
sahf
dec
notl
xchg
mov
mov
or
clc
xchg
decl
insb
add
add
out
pop
dec
outsl
mov
cli
in
lcall
nop
movsl
inc
add
jbe
adc
sub
mov
jle
dec
or
mov
add
add
jb
pop
xlat
cwtl
ja
jecxz
sbb
xor
push
mov
loop
outsb
sbb
lea
mov
adc
mov
out
hlt
enter
mov
jl
push
mov
test
aad
daa
jle
out
stos
push
movl
push
sub
mov
mov
lret
in
shll
add
add
dec
xchg
test
imul
fisubrs
mov
push
jb
popa
sahf
mov
dec
add
out
rclb
dec
add
mov
fdivrl
mov
xchg
stos
inc
add
sbb
pop
xor
add
jno
call
in
jg
mov
insb
add
rorl
add
mov
mov
inc
repz
sbbb
or
mov
imul
pop
inc
cmp
and
mov
sbb
int3
stos
inc
inc
mov
add
pop
outsb
sbb
lock
push
pushf
sbb
pop
lods
mov
in
clc
std
repnz
insb
add
and
inc
mov
xchg
jl
in
out
adc
lods
arpl
add
jnp
es
fistpl
mov
add
mov
pusha
add
push
call
adc
arpl
or
arpl
sub
mov
mov
mov
sub
mov
lret
fmulp
push
mov
xchg
jno
imul
scas
fstpl
in
push
jg
add
mov
ds
lahf
pushf
mov
add
add
add
add
ret
push
pop
ficoml
xor
loopne
test
add
mov
aad
imul
lret
in
sbb
inc
add
int
and
add
pop
mov
mov
sbb
jge
mov
mov
sub
mov
popa
out
dec
jecxz
mov
adc
lcall
arpl
mov
mov
mov
adcb
inc
mov
mov
add
jnp
neg
mov
push
shl
pop
das
mov
add
mov
add
jle
xchg
and
adc
test
fwait
leave
push
dec
add
ret
ljmp
add
mov
jbe
lock
movsl
pusha
add
dec
dec
sbb
pop
movsl
sbb
cltd
adc
sbb
xchg
mov
add
mov
stc
in
stos
dec
push
imul
mov
ds
fists
cmpsl
xchg
xchg
std
fsubr
lea
push
push
leave
cs
push
test
loope
ret
loope
and
mov
add
mov
lock
shl
push
adc
mov
insl
out
outsb
test
cld
xor
add
rclb
mov
lods
movsl
es
adc
add
adc
mov
add
lret
jg
add
ret
xlat
cwtl
into
adc
test
pop
add
aas
xor
push
adc
js
test
pop
test
xchg
dec
repnz
nop
popf
inc
repnz
xlat
lahf
je
pop
jb
and
mov
jecxz
add
add
arpl
stos
mov
fwait
and
insl
addb
xlat
js
xchg
lcall
call
xchg
pop
cmp
xor
mov
or
pop
jge
and
or
mov
mov
add
xchg
xor
aas
push
push
sub
jb
movsb
sub
gs
adc
mov
mov
ja
movsb
sub
jnp
add
dec
add
add
das
sbb
add
add
jns
mov
in
or
sahf
sbb
into
imul
movsb
xchg
add
mov
mov
inc
add
pop
stc
jne
xchg
add
das
xchg
adc
inc
add
xchg
and
mov
xchg
fwait
push
mov
cmp
sub
mov
das
add
add
lods
sbb
out
push
jmp
int3
ljmp
cmp
sbb
add
and
sub
sbb
pop
loope
dec
add
pushf
pusha
add
rolb
lahf
mov
xchg
shlb
or
mov
add
cmc
pop
fldcw
lock
add
lods
movl
pop
in
add
outsl
xchg
imul
add
jmp
movsl
add
mov
cld
and
mov
xor
push
hlt
xor
scas
cld
pop
adc
scas
cmp
je
and
int3
mov
fsubrp
cmp
mov
add
mov
fdivl
jns
mov
mov
cmpsb
loopne
mov
add
dec
shll
test
fimuls
mov
repz
push
xchg
frstor
orl
add
mov
dec
js
add
or
arpl
mov
dec
subb
pop
or
mov
imul
add
mov
jne
inc
cmpsb
mov
pop
xor
mov
jecxz
sbb
add
movhps
add
add
add
mov
ss
xor
pop
dec
loop
add
fistl
jae
push
xlat
std
mov
add
insl
repz
sub
or
lods
aas
mov
lahf
divb
daa
push
dec
add
imul
add
fldenv
mov
push
mov
pop
dec
and
lock
aam
jp
stos
mov
lret
xchg
fcompl
dec
pop
add
mov
inc
decl
mov
pop
je
or
mov
int
cltd
mov
mov
adc
mov
out
pop
push
fdiv
and
pop
cmpsl
xor
push
out
pop
mov
out
std
xchg
insb
add
mov
adc
paddq
gs
js
jae
js
or
mov
push
xchg
add
test
cmpsl
sbb
je
jmp
sub
shr
stos
xor
cmp
jp
mov
push
pop
or
cmp
inc
add
bound
outsb
push
enter
out
sti
sub
add
add
psrld
inc
jl
ret
or
mov
add
push
xchg
mov
add
fcom
rcl
into
outsb
xchg
mov
cld
sti
scas
mov
mov
repnz
and
mov
dec
int3
push
jae
repz
and
mov
lcall
adcl
add
ds
popa
mov
and
mov
or
mov
test
leave
adc
cmp
adc
pop
dec
inc
js
push
sub
mov
push
pop
ds
mov
dec
ja
cs
mov
adc
add
jp
in
in
cld
and
mov
jecxz
pop
in
xchg
addb
cmp
mov
rolb
dec
jp
ret
pop
dec
or
mov
jp
mov
inc
stc
addb
jmp
paddw
add
int
add
sbbb
negl
add
call
test
xchg
inc
jne
insl
mov
mov
mov
int3
je
dec
add
sahf
fcoms
in
xchg
iret
mov
mov
sbb
xchg
sahf
rclb
push
cltd
repz
vpsraw
jmp
cli
shr
fildl
clc
sti
int3
mov
aaa
dec
cli
push
lods
add
aaa
xor
repz
jge
iret
xchg
jmp
ds
outsb
aam
cltd
lds
mov
xchg
fisubrs
clc
mov
add
mull
cltd
pop
mov
sub
xor
data16
push
mov
mov
test
or
mov
jecxz
adc
sub
mov
jno
sbb
add
bound
inc
in
iret
pop
add
push
or
xchg
add
out
mov
lock
inc
sub
lahf
imul
sbb
mov
pop
pop
mov
push
sub
leave
xchg
inc
xchg
mov
mov
loopne
jbe
dec
std
lock
push
push
aad
pop
mov
mov
out
jne
inc
test
sub
add
sub
mov
push
xchg
pop
inc
push
jnp
and
sti
imul
push
adc
jecxz
mov
inc
add
xchg
mov
fabs
push
jge
xlat
xor
ficoml
mov
dec
xchg
mov
dec
inc
negl
loopne
js
outsb
shr
pop
repnz
sbb
dec
movsl
pop
fbld
hlt
hlt
daa
sbb
push
pop
lret
fisubrl
mov
cmp
lret
xchg
xor
rolb
scas
mov
add
mov
divl
push
push
mov
mov
adc
adc
add
mov
fidivrs
push
nop
or
mov
jecxz
insl
je
pop
jmp
add
xchg
movsb
sti
bound
cmp
push
xchg
dec
adc
dec
add
mov
aad
rorl
sub
mov
cmp
jecxz
fadd
xchg
js
add
add
or
test
add
addr16
orb
add
add
popf
lods
mov
cmpsl
decl
add
mov
jp
cli
cld
dec
das
xchg
fiaddl
mov
addr16
sbb
jb
mov
clc
imulb
adc
push
pop
xor
xchg
lock
fsts
fimull
call
test
push
push
es
hlt
popa
fldcw
mov
pop
pop
imul
or
mov
outsl
ss
mov
rorl
stc
mov
mov
movsl
xorl
fistpll
cmp
pop
jo
add
sbb
cmp
daa
stc
aam
into
jno
push
or
hlt
mov
push
push
inc
into
mov
pop
pop
sbb
jb
add
push
cmp
mov
push
or
dec
add
popf
stos
scas
decb
adc
add
iret
pusha
add
mov
mov
xor
add
jle
cmpsb
cmp
add
mov
push
add
mov
test
pop
std
sbb
enter
add
add
add
mov
or
mov
fstl
dec
cs
fcoml
xor
insb
add
sbbl
outsl
xor
jp
add
add
sbb
jecxz
addr16
sbb
adc
mov
sarl
xor
mov
push
loope
arpl
sbb
icebp
add
mov
ss
xor
push
lahf
mov
push
push
nop
sbb
mov
add
adcl
mov
cmpsb
mov
enter
xchg
in
aaa
cmpsb
push
or
mov
add
jle
movsb
cltd
repz
jle
mov
xlat
adc
scas
and
in
rcrl
lcall
mov
and
js
pop
out
std
cld
xlat
sbb
js
add
sbb
sub
ljmp
leave
and
enter
adc
add
jae
mov
add
or
fwait
js
push
xchg
mov
repnz
enter
imul
jae
add
jne
clc
mov
or
sbb
cltd
rorb
mov
cwtl
sub
mov
outsb
stos
inc
add
add
cld
push
popf
test
mov
add
sbb
insl
inc
adc
int3
sbbl
dec
add
mov
inc
push
add
mov
push
inc
shll
cld
push
pop
push
fcmovnu
into
jmp
dec
hlt
pop
pusha
add
sbb
insl
xor
scas
pop
ffree
aaa
mov
shl
jno
idiv
sbb
add
mov
mov
repnz
mov
dec
add
add
or
js
xchg
mov
dec
pop
test
inc
jbe
add
test
out
stos
out
negl
gs
lods
jns
into
fsubr
xor
add
jle
stos
pop
imul
mov
add
add
or
mov
mov
je
push
insl
xchg
fidivl
or
mov
or
mov
xchg
imul
sbbb
pop
and
sbb
jbe,pn
fdivs
add
mov
addr16
inc
jb
lret
cmp
xchg
loopne
pop
div
jl
bound
sub
in
int
pop
inc
add
add
scas
mov
addr16
adc
cmp
out
frstor
mov
fstl
imul
mov
jnp
adc
fistpll
lods
and
add
mov
jecxz
push
push
cs
int3
fisubrs
add
add
bound
scas
mov
ror
push
dec
add
cmpsl
cmp
shll
sbb
leave
sub
fbld
mov
shl
and
dec
jbe
clc
je
sub
mov
xchg
das
and
mov
or
pop
xor
lock
mov
or
mov
add
mov
int3
jo
movsb
mov
movsb
mov
test
xor
adc
adc
add
mov
cwtl
dec
das
xor
fsubs
add
shl
xor
mov
push
jbe
xchg
push
mov
les
adcl
mov
cli
gs
xchg
stos
jge
xchg
push
or
adc
add
mov
orl
sub
mov
cld
adc
orb
mov
lret
leave
test
gs
push
rol
pop
jmp
sti
mov
mov
sbb
dec
rcrl
add
and
sti
xor
pop
mov
jmp
adc
sbb
sti
movsb
dec
xchg
push
clc
jl
mov
cltd
ret
xchg
cltd
inc
pushf
jl
mov
lret
xor
add
stos
adc
or
mov
sbbl
cmpsl
outsl
subl
add
inc
sub
mov
aaa
ja
adc
data16
push
inc
add
out
repz
or
mov
insb
add
into
arpl
mov
int
mov
ret
loope
cmp
fsubl
jecxz
test
inc
add
inc
lret
scas
pop
or
mov
push
pop
pop
cmpsl
ret
push
shlb
mov
mov
cmp
ret
sbb
mov
add
xchg
lahf
lcall
loop
push
out
sbb
pusha
add
andb
adc
repz
jne
mov
iret
inc
push
cmp
dec
ret
shrl
mov
xchg
pushf
je
loopne
daa
mov
lods
fstpt
add
mov
cmp
nop
in
sub
add
into
in
xorl
xlat
outsb
loope
enter
shl
je
xor
test
cltd
cmp
adc
push
mov
inc
push
loop
cmp
addr16
adc
xchg
push
pop
es
mov
push
jnp
das
inc
in
sub
mov
push
mov
out
inc
jl
add
dec
sbb
add
mov
mov
mov
push
lea
mov
mov
loope
mov
sbb
jl
inc
xor
nop
clc
lret
xchg
aaa
add
mov
lock
xchg
test
loopne
add
jnp
lock
add
push
adc
adc
add
add
add
in
sub
jno
insl
pop
popf
jne
add
insb
add
test
lret
mov
jmp
addr16
mov
test
in
mov
push
test
int3
enter
add
mov
aam
cmp
mov
sbb
sti
dec
hlt
adc
add
mov
das
cmp
push
sbb
and
inc
cmc
push
aad
jae
sbb
loop
in
add
mov
fstpl
call
mov
movl
or
mov
cmp
or
mov
mov
idiv
push
in
sub
sbb
stos
out
pop
adc
cld
sub
mov
add
test
fwait
test
mov
std
roll
add
and
mov
out
dec
inc
add
sbb
ds
xor
push
inc
mov
cmpsl
ljmp
add
jno
pop
mov
mov
cmp
cmc
ja
sub
mov
mov
mov
inc
dec
add
and
mov
rorb
mov
cs
push
aas
hlt
lret
xchg
adc
mov
sub
stos
mov
es
stc
bound
xor
in
dec
subl
add
sub
mov
das
addr16
cmpsb
and
mov
add
je
jne
mov
jge
mov
test
aam
leave
mov
lods
int
add
popf
stos
in
add
je
lcall
jo
mov
fiadds
mov
cs
mov
jg
jg
subl
je
loop
div
lret
add
pusha
add
loop
mov
sbb
setge
test
mov
sub
pop
mov
lods
imul
bound
xchg
insb
add
pop
lods
add
cmp
movsb
leave
popa
sub
sub
push
xchg
mov
and
mov
xchg
les
mov
popf
fidivs
fcom
sahf
imul
xchg
movsb
movsb
js
push
ja
xor
inc
cli
xchg
lods
mov
enter
add
jge
dec
add
add
and
xor
lods
test
add
hlt
test
dec
out
pop
shll
adc
lcall
mov
jge
int3
out
mov
es
lods
xchg
outsb
and
push
cmp
loope
add
mov
bound
shrd
jno
stc
das
sbb
je
mov
jnp
inc
int3
add
mov
jmp
hlt
mov
aad
inc
add
out
jns
add
mov
add
pusha
add
push
js
lret
jns
add
mov
hlt
pop
or
push
lds
push
add
ret
pop
outsl
xlat
add
mov
stos
mov
or
mov
mov
stos
roll
sahf
shlb
das
sti
adc
dec
jl
dec
subb
xchg
sub
mov
add
add
pusha
add
pop
sbb
popf
cmp
out
adcl
mov
fsubs
mov
mov
inc
dec
add
mov
mov
insl
push
data16
mov
mov
mov
in
jmp
enter
mov
add
into
out
out
push
lret
lahf
stos
xorl
pop
jle
cmp
sub
mov
cltd
mov
subl
jns
subb
or
sti
mov
scas
and
fdivp
pop
push
iret
popa
in
add
add
pop
lcall
ret
mov
shll
xchg
lods
shrb
mov
daa
aas
pop
sub
mov
ja
hlt
jns
xor
sbb
sub
inc
je
mov
add
mov
add
pop
stc
bswap
or
shlb
adcl
xchg
pop
jb
jle
pop
jmp
in
aaa
jb
outsb
movsb
in
jg
in
das
lcall
and
mov
adc
add
mov
add
sub
mov
dec
jb
rcrb
cmp
or
mov
jecxz
mov
jo
add
sbb
ficoml
inc
and
mov
mov
or
mov
scas
loope
jmp
stos
push
cmpsl
lret
cmpl
push
jg
daa
stos
mov
mov
imul
dec
fisttps
add
sub
jl
aas
int3
cltd
xchg
es
dec
repz
cld
adc
sub
and
lahf
lods
testl
pop
stos
xchg
mov
into
pop
and
mov
jns
sub
mov
mov
xchg
mov
xor
xor
mov
push
popf
add
mov
loop
or
icebp
cmp
leave
adc
push
leave
cs
les
add
int
xchg
fistps
pop
in
jno
pop
bnd
paddd
mov
dec
sub
fimuls
jg
sbb
ficoml
sti
xlat
sbb
xor
lcall
cmp
fwait
jmp
add
inc
add
mov
int3
xchg
int
lret
pop
sti
stc
push
divl
mov
jge
mov
sub
sub
mov
cmc
ja
sti
jae
mov
adc
in
push
add
leave
adc
in
push
sbb
jle
in
add
cmp
adc
or
push
push
enter
add
add
outsl
dec
sbb
dec
add
mov
dec
adc
push
mov
pop
mov
data16
cmp
cwtl
add
mov
push
loopne
inc
add
xchg
sub
mov
xchg
mov
jne
mov
jg
mov
in
mov
stos
mov
or
lcall
cmp
jle
or
mov
mov
jbe
add
mov
fildll
cwtl
std
cmp
sub
mov
mov
lea
shlb
ja
rclb
mov
add
cmp
xor
push
mov
cs
jle
add
enter
pop
fcompl
popf
ja
out
nop
sti
jp
adc
imul
fwait
popa
mov
add
int3
setno
sbb
adc
jne
push
rcll
pop
cmp
push
lods
imul
insl
imul
sbb
insl
test
lods
pop
lea
add
cmp
xorl
jbe
shlb
add
or
mov
add
cs
xchg
rol
jl
je
sbb
arpl
sub
mov
lret
inc
add
jmp
out
pushf
dec
add
test
add
mov
mov
jno
add
push
cmp
cmpsb
add
add
cmpsl
ss
and
ds
add
mov
add
sti
into
jl
and
outsb
lods
or
mov
push
add
movsb
into
inc
sub
cmp
mov
cs
dec
add
add
add
test
imul
std
xor
insb
add
sub
pop
cltd
jbe
rorb
mov
add
push
scas
lahf
les
add
mov
push
jmp
lret
xor
movsb
mov
pop
push
sti
xchg
subl
into
mov
inc
add
cld
in
inc
cmp
rcrb
movsb
inc
jle
xrelease
addl
mov
ret
sub
mov
push
rcrl
jo
xchg
add
add
aaa
xor
bound
add
jge
mov
xor
add
int
and
mov
and
and
out
adc
scas
outsb
test
add
add
mov
ficoml
xor
pop
cmpsb
fisttps
mov
mov
aas
mov
add
movsb
mov
xchg
je
add
outsl
int
mov
sub
cs
ret
pop
mov
sti
and
push
mov
test
and
mov
inc
arpl
ljmp
jae
mov
addps
bound
add
aad
ss
add
mov
divb
enter
add
add
inc
leave
fadds
dec
cmpsl
rcrl
and
mov
repnz
cmp
stos
inc
out
js
das
jnp
adc
sub
cmpsl
data16
add
or
mov
mov
int3
loopne
push
enter
add
cmpb
jecxz
fwait
push
orl
rolb
stos
cmpsl
push
rclb
insb
add
ret
mov
mov
mov
jns
pop
test
mov
out
xchg
and
fyl2xp1
push
sar
dec
insb
add
add
and
insl
cmp
mov
add
inc
es
jge
add
cmpl
mov
cmp
add
stc
mov
aaa
gs
pop
mov
icebp
jbe
cmc
std
or
mov
into
jmp
div
das
push
push
jbe
or
mov
add
add
sub
mov
icebp
bound
add
mov
sub
xor
mov
lods
aaa
sub
mov
insb
add
xor
fcomip
adc
mov
add
add
or
and
leave
mov
pop
je
ret
pusha
add
sahf
push
pop
lods
int
pop
jbe
in
add
mov
stos
bound
push
js
mov
cmp
add
xchg
lds
mov
lea
movsl
sti
mov
xorb
scas
faddl
cltd
and
into
or
mov
fdivrp
aas
das
mov
mov
push
mov
adc
sbb
lcall
add
push
int3
mov
leave
pop
xor
xor
mov
add
mov
mov
js
push
or
inc
andb
mov
test
cmp
stc
ljmp
rclb
mov
es
add
in
cmpsb
adc
shll
sub
mov
and
add
add
and
mov
mov
add
call
or
add
sbb
dec
add
push
divb
and
mov
in
je
out
fwait
js
jns
mov
pop
cmp
mov
je
stos
add
add
pop
lea
cmp
add
dec
in
lds
outsl
loope
or
xor
add
xor
pop
inc
add
lahf
ret
sahf
dec
pop
sub
push
lods
mov
test
int
fcmovbe
outsb
or
add
add
xor
add
mov
add
ja
add
mov
jns
mov
mov
adc
dec
cli
xlat
mov
and
mov
cld
push
out
lahf
push
mov
iret
push
mov
test
daa
mov
push
int3
pop
cmp
fadd
sub
adc
dec
add
ja
fstl
add
testb
std
cld
pop
jl
add
out
imul
sbb
inc
les
sbb
mov
add
add
shrb
mov
add
mov
ficompl
or
xor
movsl
or
mov
add
test
lods
loopne
xchg
xor
add
dec
roll
dec
add
xor
gs
cmp
mov
xchg
add
mov
and
mov
std
mov
cmpsl
pop
xchg
jmp
movsl
call
adc
mov
mov
and
loope
jge
add
add
in
push
or
dec
add
inc
pop
enter
or
mov
bound
mov
into
cltd
in
or
mov
add
sbb
shufps
jbe
int
or
mov
xchg
enter
sub
mov
or
xor
add
pop
inc
inc
push
mov
jae
add
pop
push
sahf
js
fdiv
movsb
and
fdivrl
mov
shlb
add
mov
stos
cmp
dec
iret
cwtl
jp
test
ror
add
ret
sub
mov
cld
sub
add
cmpsb
fidivrl
push
lds
ret
popf
cmp
imul
out
lret
dec
shlb
jmp
cmc
cmpsb
or
ret
insb
add
lahf
pop
add
dec
jns
jae
dec
or
insl
push
cmp
loopne
xor
shrb
add
aam
data16
jge
lcall
bound
fistl
jae
aaa
cmp
je
xchg
rorb
aaa
ss
hlt
rorl
push
stc
testl
imul
fwait
inc
add
outsl
cmp
fiaddl
jnp
add
cld
lret
call
ja
inc
sahf
lock
add
scas
xchg
imul
gs
dec
sub
push
movl
lea
add
les
or
push
leave
mov
cmp
hlt
int
add
cmp
orl
scas
lods
les
movsl
or
mov
int
loope
push
mov
pop
ja
aas
out
cmp
add
jns
in
imul
pop
icebp
cmc
mov
xor
mov
or
mov
add
insb
add
aaa
push
adc
cmpsb
loop
inc
add
mov
xor
push
pop
mov
sbb
mov
inc
inc
aam
mov
pop
jb
jecxz
dec
add
push
mov
add
mov
cmp
ja
test
test
add
add
mov
cmc
push
arpl
and
mov
fidivrl
das
movsb
dec
xor
neg
inc
dec
sbb
cs
decb
ret
adc
lods
fidivrs
jno
adc
ret
add
mov
add
mov
jae
rdseed
xchg
jp
xor
pop
in
jp
mov
addr16
jne
or
enter
aad
jmp
inc
out
mov
das
jl
and
mov
add
mov
scas
out
pop
xchg
pop
loope
jl
dec
add
cmpsb
outsl
icebp
int
xor
add
add
icebp
push
in
sub
call
push
adc
loope
call
mov
cmp
inc
add
repz
das
jle
sub
sub
sbb
bound
xor
sarb
pusha
add
testl
mov
fcompl
dec
add
mov
and
mov
and
arpl
repnz
xchg
test
or
mov
leave
orb
xchg
pop
push
push
ja
adc
sbb
cmp
roll
mov
add
dec
pop
push
adcb
fadds
cmp
push
popf
popf
ficomps
jmp
icebp
jp
xor
loopne
inc
add
jo
xor
push
fxch
inc
add
jnp
lahf
nop
or
mov
add
mov
lret
cmpsb
loope
in
xor
outsb
pusha
add
out
jnp
insl
inc
pushf
jecxz
fldcw
xor
mov
add
jmp
xor
lahf
jnp
add
aad
loope
shrb
dec
add
add
rclb
test
xchg
inc
add
lods
push
out
cli
mov
enter
inc
sbb
add
jo
outsl
jae
repz
mov
das
nop
pop
pop
mov
add
imulb
mov
mov
or
dec
mov
dec
ret
dec
test
add
mov
xchg
je
inc
sbb
jb
addr16
divl
aam
add
mov
xor
clc
sub
arpl
add
push
sbb
mov
test
mov
shrl
or
outsb
in
sti
aas
jne
repnz
sbb
xchg
cmpsb
and
push
inc
sub
arpl
adc
mov
mov
adc
stc
adc
pop
and
add
mov
sahf
inc
add
mov
or
test
popf
xor
mov
ficomps
or
gs
das
cmp
mov
jb
insl
mov
movsb
mov
push
orl
jl
clc
mov
add
mov
add
sarl
rcll
add
fisubs
adc
stos
std
test
jecxz
cmp
ret
dec
cs
movsl
popa
cs
lahf
xchg
mov
add
add
add
mov
xchg
cli
dec
add
pop
dec
cmp
xchg
pop
or
xchg
add
mov
std
addb
testl
push
sbb
in
mov
add
jns
inc
xchg
das
lret
mov
add
xor
jmp
dec
add
ljmp
xchg
out
sub
mov
jle
add
mov
aaa
data16
divb
aad
mov
lods
negl
dec
imul
iret
push
xorl
jns
imul
mov
dec
add
push
pushf
dec
hlt
ljmp
xor
or
xchg
mov
stos
add
mov
mov
es
out
arpl
inc
add
es
dec
xlat
xchg
orb
dec
add
dec
xor
sbb
movsl
adc
jns
jmp
fstl
pushf
test
rol
xchg
xor
add
insb
add
add
nop
test
outsb
clc
xor
scas
cmp
jp
ret
jae
fucomi
add
cmc
lret
cmp
ja
add
mov
add
or
jl
add
xchg
dec
add
aas
rcl
pop
cmc
fwait
sub
mov
sti
cmp
loop
sub
cmp
jp
in
push
mov
and
hlt
sbb
pop
sub
repnz
in
ss
adc
test
aaa
inc
add
sbb
adc
push
movsl
adc
jb
jno
stc
stc
pushf
rcrb
adc
popf
dec
pop
ss
cmp
movsl
jb
out
and
push
in
sub
xor
push
jecxz
xchg
sub
mov
push
mov
cmp
rorb
jmp
xchg
lea
add
add
add
fldl
add
and
jg
pop
rcrl
scas
inc
lds
movsb
jns
sub
mov
std
pop
imul
in
repz
add
loop
jmp
mov
mov
add
sbb
xchg
jle
cwtl
jl
inc
add
or
mov
pop
stc
push
jl
stos
aam
sbb
aaa
popl
mov
mov
pop
mov
add
add
inc
sub
dec
push
sbb
push
jno
push
subb
add
jmp
jbe
add
pop
imul
shrl
sar
int3
mov
mov
pushf
and
push
jbe
add
sbb
xchg
add
mov
js
cld
mov
rol
es
sbb
mov
sbb
cli
mov
add
sbb
sub
add
pop
pop
push
stos
push
xor
pop
aam
pop
ja
cmp
mov
addb
testb
dec
add
repnz
aad
out
adc
fiadds
and
mov
push
notb
enter
ljmp
mov
mov
add
mov
sbb
xor
scas
jmp
add
pop
ret
mov
mov
cmp
fldcw
cmp
divb
mov
test
pop
dec
leave
dec
pop
ret
sub
shll
xchg
mov
dec
add
pop
mov
add
mov
stos
cmp
jo
into
sahf
std
shlb
mov
add
repz
cmp
mov
test
mov
push
cmpb
jno
scas
push
dec
add
in
stc
out
mov
mov
add
adc
icebp
pop
sbb
push
and
addr16
mov
movsb
out
sti
movsl
mov
jno
outsb
push
mov
je
icebp
push
or
add
pop
sahf
adc
mov
int
and
adc
sbb
loope
cmpsl
dec
rol
lret
push
add
std
add
jmp
outsb
and
repz
es
add
push
mov
mov
mov
xor
out
or
mov
add
cltd
cmp
pop
bound
add
add
nop
push
dec
add
mov
test
inc
scas
out
in
and
mov
negl
js
or
inc
and
mov
mov
xchg
mov
mov
mov
fwait
cmp
jbe
xchg
int3
jge
fsubr
sbb
pop
gs
fisttpl
test
xorl
ja
jp
pusha
add
jns
dec
cmp
adc
jae
mov
ljmp
add
or
stc
pop
insl
icebp
test
push
adcb
lea
push
adc
dec
jmp
pop
inc
xchg
mov
add
jns
add
aas
lret
aam
sarb
add
mov
add
clc
sub
mov
xchg
dec
xor
push
stos
fdivl
cltd
adc
cs
push
loopne
push
cmpsb
mov
push
push
mov
add
sub
das
sbb
mov
add
insl
and
mov
mov
cli
push
cli
mov
loop
ror
pop
mov
fiadds
test
add
decb
outsb
mov
mov
and
sbb
dec
xor
ret
jb
gs
sub
sbb
mov
jl
test
add
add
mov
push
pusha
add
mov
xorl
mov
push
and
mov
adc
cmp
add
inc
sbb
add
mov
cmpsb
add
push
add
add
sti
icebp
sysret
mov
mov
mov
mov
push
pop
std
pop
dec
add
pop
fists
add
pop
jno
rcrb
shll
loop
adc
pop
jl
xor
mov
dec
add
cmp
xor
mov
inc
xchg
mov
pop
jo
push
fidivrs
test
in
cmp
orb
xor
add
dec
leave
xor
add
fwait
pop
movl
fcoml
cmp
shll
out
mov
push
out
add
clc
popa
sbb
adc
test
insl
test
and
shl
repz
sub
mov
cmp
pop
insl
cmpsl
cmp
mov
lret
mov
jg
ja
loopne
shrb
test
mov
mov
mov
sub
push
xchg
pop
mov
imul
arpl
sbbb
pcmpgtw
add
mov
add
mov
dec
call
mov
jo
dec
mov
jle
pop
xchg
push
xchg
cmp
movq
icebp
xchg
mov
hlt
idivl
sbb
xor
add
ficoml
jmp
adc
loope
add
pop
rcll
or
mov
enter
cmp
roll
insl
cmp
shlb
cmpsl
js
fistps
cmp
add
stos
mov
cli
hlt
fimull
into
outsl
das
cmp
or
mov
push
