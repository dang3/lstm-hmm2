daa
repnz
dec
subl
mov
mov
add
add
mov
gs
std
addb
add
sahf
roll
ljmp
xor
add
lods
or
mov
add
sahf
pop
je
loopne
xchg
or
cmp
pusha
add
add
fwait
mov
add
mov
movsl
rcll
add
outsb
add
mov
mov
std
cs
rolb
mov
jmp
sub
jno
inc
add
std
mov
xor
loop
js
and
xor
or
je
cmp
xor
sub
add
lahf
imul
cltd
jb
outsl
xchg
dec
cltd
jno
fldcw
jbe
in
inc
adc
sub
dec
lds
mov
aas
add
add
mov
fldenv
add
mov
add
add
add
add
jns
add
iret
xor
or
add
mov
inc
cmp
in
sbb
add
jmp
jns
sub
inc
inc
add
lret
add
xchg
popa
fucomip
sbb
movsb
add
pusha
add
jo
dec
les
addb
lods
fdivl
js
add
mov
mov
mov
les
fcoml
add
mov
add
aaa
adc
mov
sub
cltd
adc
and
mov
add
add
mov
aaa
push
add
add
dec
push
aas
rolb
dec
cmp
mov
sbb
xchg
pop
iret
xchg
add
jbe
fsubrl
mov
pushf
jae
xchg
add
xchg
add
add
fldenv
xor
jg,pn
sti
xchg
test
push
cmp
cmp
cmp
lcall
gs
add
add
dec
cwtl
clc
nop
add
add
mov
jl
add
add
cmp
push
pop
cmp
mov
test
jmp
adc
lret
pop
inc
add
add
lods
mov
mov
insl
fstl
adc
loopne
movsb
add
pop
push
add
out
pop
mov
add
add
xchg
roll
mov
pop
xchg
add
data16
and
mov
adc
mov
fldl
add
add
mov
add
add
fwait
push
jne
sub
and
sub
jb
xor
add
xchg
add
test
add
pop
loopne
cmpsl
arpl
add
call
jno
add
add
add
push
add
sahf
push
cmp
add
lret
inc
mov
movb
outsl
cmp
imul
add
add
add
jns
dec
rolb
pop
lcall
out
data16
add
add
cs
repnz
push
add
pusha
add
nop
add
add
mov
neg
add
jecxz
dec
stos
iret
mov
mov
or
out
bound
mov
add
mov
mov
xor
inc
add
jmp
aas
dec
mov
pop
dec
pcmpgtd
inc
test
pop
arpl
jns
dec
xlat
lea
inc
add
or
out
sbbl
add
xor
xor
adc
add
add
add
jnp
outsl
arpl
aad
in
sbb
add
inc
add
mov
addb
ja
add
adc
lods
popf
mov
loopne
xchg
lods
sarl
dec
jbe
mov
sub
add
add
add
mov
cwtl
jno
rolb
add
add
xor
add
mov
das
lods
mov
aam
xor
rolb
inc
add
add
add
add
pop
pop
push
add
call
aas
add
mov
fwait
stos
adc
out
sub
add
jns
and
mov
add
jp
xchg
dec
mov
xlat
push
add
add
mov
mov
add
mov
rolb
xor
sub
call
xchg
in
movaps
mov
fs
movsb
add
add
add
or
add
outsl
imul
das
xor
jns
add
adc
jmp
jp
repnz
add
xor
jbe
in
js
aam
emms
fidivs
je
rolb
lret
push
lds
mov
push
add
jp
cli
push
mov
aad
imul
mov
xchg
adc
call
dec
testl
mov
push
add
lods
in
out
jo
fisubl
cmp
clc
pop
pop
and
xchg
fwait
jmp
add
add
shll
add
fs
xor
jge
add
pushf
pop
es
fsubrs
jbe
cmp
add
mov
movsl
ret
test
push
xor
and
mov
mov
aaa
pop
mov
pop
into
movsl
xchg
aad
add
lahf
sbb
das
loope
pop
sub
add
mov
add
mov
int
movsl
sbb
add
jl
arpl
add
and
mov
jge
aam
jp
ljmp
add
inc
mov
add
out
pop
lods
pushf
in
jns
xor
int
je
xchg
sbb
push
lods
cmp
mov
lock
inc
add
lds
dec
testb
pop
inc
xchg
xor
movb
icebp
ds
daa
and
inc
xlat
gs
adc
movsl
dec
testb
add
pop
int
add
in
jo
pushl
clc
loop
in
and
mov
inc
add
jge
fstpl
sar
addb
add
loopne
testb
outsb
aas
jl
add
add
lret
mov
xor
add
lret
scas
pusha
add
push
add
aad
mov
add
jecxz
insl
jmp
xchg
fwait
les
sbb
sub
add
movl
jge
add
add
xor
stos
jnp
sahf
pusha
add
inc
add
lahf
or
adc
scas
cmp
sub
sub
mov
mov
ficompl
add
add
mov
les
repnz
dec
enter
ds
add
sbb
xor
fildl
mov
pusha
add
pop
sub
xchg
add
add
mov
mov
push
rcr
out
add
add
add
pop
mov
inc
pushf
sub
test
push
fisubs
in
loopne
cli
jae
pop
lds
add
jge
and
mov
mov
add
sbb
rolb
adc
adc
xchg
jo
aas
mov
jge
scas
stc
sbb
push
add
dec
loopne
pop
outsb
or
mov
test
scas
mov
add
sub
pop
sbb
mov
dec
les
mov
sub
add
add
add
cmpsb
add
pusha
add
cli
addb
fxch
fwait
jmp
push
add
add
adc
add
jnp
out
arpl
pusha
add
add
movsl
push
and
or
and
add
faddl
push
jecxz
add
or
dec
out
inc
add
mov
add
mov
pop
bound
mov
test
add
sub
push
sub
jbe
iret
ficoml
jne
cmc
or
dec
cmpsl
and
lahf
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
repnz
mov
sub
sub
push
pop
push
je
jmp
add
add
cmp
add
jge
add
daa
push
add
mov
in
ficompl
and
test
into
pop
xor
sbb
icebp
or
add
add
testl
inc
add
add
and
jo
or
jle
jb
movsb
add
dec
das
jmp
pop
dec
sbb
add
lods
sbb
cwtl
outsb
mov
mov
iret
push
add
add
xchg
add
pusha
add
mov
leave
aas
push
lret
decb
mov
add
push
add
xor
mov
fsubrs
jo
filds
add
out
jmp
int3
jge
adc
add
jmp
repnz
add
cmp
lods
xchg
popa
lcall
add
mov
xchg
je
or
lret
sub
mov
xchg
add
add
sub
add
add
or
pop
xchg
push
add
add
pop
stc
rolb
mov
jle
sub
push
add
xor
add
test
or
or
add
inc
add
aam
in
add
vorps
jge
and
mov
or
add
add
cmp
add
or
pop
arpl
or
pop
sahf
or
dec
inc
lcall
stos
push
dec
sbbl
popa
cltd
mov
dec
imul
add
add
xchg
mov
add
cli
mov
mov
sub
movsl
push
add
test
enter
push
cmc
pusha
add
xchg
les
xchg
andl
xor
xor
adc
or
mov
loopne
popa
ret
and
les
jo
enter
push
add
push
push
add
or
inc
dec
out
cmc
jb
mov
test
sti
sbb
mov
sbb
dec
cld
xor
add
outsl
fwait
js
sbb
add
jne
add
aas
push
add
add
add
mov
add
add
add
adc
xchg
scas
fs
aaa
gs
jl
test
aaa
sti
aam
mov
lds
in
xor
inc
out
cmpsl
or
std
mov
jg
cmp
xchg
js
movsb
add
xchg
add
addb
outsl
popa
mov
sub
adc
fcomip
add
in
dec
call
push
fisttpll
scas
scas
rolb
in
out
fsts
imul
lods
sub
outsl
rolb
rolb
and
mov
adc
push
pop
and
out
imul
mov
add
add
testb
add
dec
pushl
inc
add
sbb
mov
nop
add
rolb
mov
add
add
cmp
cmp
add
sbb
xchg
add
add
cmp
push
imul
inc
add
test
arpl
add
fisubl
data16
sub
xchg
adc
rolb
add
add
mov
std
mov
cli
call
lods
xchg
or
out
ds
mov
add
adc
mov
pop
sub
mov
cmp
add
mov
dec
int
int
mov
jb
pop
push
add
add
jmp
add
lods
call
jg
add
loop
adc
movsb
add
pop
adc
je
xor
sbb
add
add
mov
mov
add
mov
sti
fsubrl
aad
cli
mov
dec
pop
mov
add
dec
daa
xchg
add
xor
insb
adc
push
add
sbb
add
add
mov
mov
add
mov
jne
scas
and
jb
or
das
enter
sub
add
sub
adcl
fld
adc
ds
xorl
push
add
pop
in
hlt
add
test
sub
in
jmp
add
cmc
stc
jg,pt
xor
and
mov
add
mov
mov
inc
pushf
mov
mov
mov
xchg
add
mov
and
mov
mull
add
inc
add
orps
add
mov
add
fadds
add
add
sbb
add
pop
dec
or
inc
add
mov
stc
cmp
out
push
pop
xchg
lahf
repz
stos
mov
dec
movsl
cmp
add
or
out
enter
add
mov
ds
iret
pop
scas
and
dec
inc
les
dec
sub
add
and
cs
and
cli
out
stc
in
fiaddl
add
push
add
add
mov
std
jecxz
in
add
add
cmc
xor
and
mov
pinsrw
add
add
lcall
pop
fsubr
jmp
push
and
mov
add
sub
sbb
test
int
lods
and
jle
hlt
add
mov
inc
add
push
add
add
iret
pop
cmpsl
stos
lods
add
adc
add
add
movsb
add
add
xchg
popf
sbb
add
add
dec
mov
add
addl
mov
xor
sbb
and
pusha
add
pop
iret
ja
scas
out
add
add
add
or
mov
add
xchg
add
adc
data16
loop
add
popa
lock
in
loopne
mov
movsb
add
test
mov
jle
push
add
add
lret
repz
addb
pop
push
and
mov
rolb
addb
movsl
sub
sbb
aad
movsl
lret
loopne
inc
push
add
dec
movsb
add
add
mov
adc
lds
add
add
sbb
adc
dec
push
int3
sbb
and
mov
mov
add
fistpll
xchg
fdivrl
mov
add
xlat
in
cmp
add
add
add
xchg
jl
sarl
scas
sub
add
int3
mov
push
mov
xchg
sub
loopne
psrld
and
push
test
cltd
sahf
pop
aas
add
add
std
jle
pop
loop
popl
mov
jns
inc
add
rorl
mov
push
add
add
insl
add
add
cmp
cli
jbe
inc
add
mov
pminsw
add
add
pop
or
repz
add
or
and
mov
mov
adc
inc
inc
lcall
test
ret
cs
add
add
add
insl
push
add
fisttps
add
add
sub
push
xchg
adc
in
fisubl
sbb
lods
or
jae
decb
mov
mov
inc
add
cmp
add
mov
add
add
mov
adc
dec
and
mov
add
nop
add
movsb
add
jmp
add
filds
add
xchg
add
sub
jp
std
push
dec
jno
pop
mov
add
mov
push
add
add
ds
loope
add
add
pop
or
inc
add
imul
add
mov
sbb
out
mov
push
testb
imul
mov
xor
aas
inc
add
mov
add
add
out
outsl
sbb
add
inc
add
dec
push
add
add
sub
clc
xor
pop
dec
jo
add
add
add
push
add
cmp
add
pop
mov
or
in
dec
mov
test
add
xor
add
add
addb
jne
ja
cmp
fcompl
mov
iret
mov
jae
aaa
stos
movb
mov
mov
xlat
xlat
into
sbb
dec
mov
push
in
icebp
dec
into
pop
sub
add
insb
cmp
add
adc
cmp
xchg
fistps
add
cmp
mov
pop
mov
pop
loop
mov
stos
xchg
call
mov
add
and
add
add
xchg
pusha
add
add
push
add
add
mov
dec
and
test
pusha
add
push
nop
add
les
testb
jmp
lret
and
adc
outsl
cmpsb
add
mov
jmp
psllw
lods
into
dec
sti
mov
jbe
int3
nop
add
adc
add
pop
push
add
mov
add
pusha
add
xor
outsl
pop
hlt
add
add
add
test
shrl
lea
adc
std
pop
cltd
xchg
fwait
mov
not
add
add
push
outsb
jl
and
mov
adc
pop
jae
dec
les
cmp
add
add
adc
mov
pushf
or
orl
fidivrs
add
dec
fwait
jmp
add
add
rolb
lods
cmp
add
push
mov
int
add
lret
sbb
or
inc
add
inc
xor
xchg
mov
add
push
add
sub
fadds
popf
and
in
cmp
hlt
add
mov
inc
add
add
fimuls
push
test
add
add
or
in
push
jl
jnp
sub
cmp
mov
jmp
inc
aad
add
push
add
lahf
mov
cmp
add
lret
xor
mov
add
jle
fdivs
cmpsl
jae
rolb
add
mov
add
add
mov
addb
imul
lods
sahf
orl
cltd
push
add
insl
iret
aas
sbb
inc
add
pop
mov
dec
or
mov
inc
fdivs
or
arpl
movsl
imul
pop
mov
sahf
or
jp
imul
aas
test
xor
ret
inc
lahf
mov
jne
add
nop
add
outsb
popa
fimull
jle
outsl
add
add
cmpl
cmp
aas
sti
in
cld
repz
mov
out
jmp
add
add
add
ficompl
or
mov
clc
repnz
sbbl
add
pop
jne
pop
addb
mov
lods
nop
add
add
mov
xchg
add
add
push
int
add
sbb
add
add
lock
add
addr16
add
repnz
add
push
add
mov
jae
dec
pop
filds
add
adc
push
mov
add
add
xor
and
add
sub
inc
add
cmp
ja
stos
repz
mov
jl
add
add
xor
add
rolb
xor
loope
scas
nop
add
mov
fsubp
data16
add
sbb
dec
test
add
add
insl
iret
pop
aas
jnp
fistpll
inc
add
add
les
addb
add
add
xchg
mov
push
add
jnp
add
xchg
lret
pop
add
mov
cltd
cmc
dec
into
dec
les
insl
adc
add
mov
add
std
lods
mov
ja
ret
popa
rolb
mov
testb
rolb
adc
add
repnz
or
in
add
xchg
add
cs
or
jmp
test
xchg
sti
mov
dec
mov
xor
inc
add
add
aas
push
outsb
lds
push
add
push
ljmp
fidivrs
add
lock
sub
inc
fmul
mov
add
mov
xor
mov
push
add
add
pop
outsl
mov
je
sbb
xor
add
add
arpl
mov
add
dec
pop
stos
repnz
test
incl
add
std
popa
inc
xor
ret
xchg
ret
mov
inc
adc
add
pop
xor
add
lret
cmp
add
jns
cmp
mov
cltd
jmp
xor
test
xor
inc
cmpsl
xchg
add
adc
push
add
mov
add
outsb
jno
sbb
jo
div
cmp
add
cli
repz
imul
jns
stos
add
ret
add
leave
adc
ljmp
adc
mov
add
add
xor
add
std
testb
loopne
push
add
in
lea
add
gs
bound
mov
pop
lock
mov
fucom
add
movb
lds
add
push
add
stos
and
adc
adc
repz
cmp
inc
adc
mov
sub
or
rolb
xor
mov
leave
mov
add
mov
push
add
popa
push
add
xchg
xchg
add
loope
mov
and
mov
mov
add
in
mov
xchg
mov
xchg
sub
dec
pop
stos
add
cwtl
pop
adc
inc
pop
inc
add
mov
jno
jmp
or
add
rolb
add
mov
mov
mov
roll
xchg
mov
jmp
mov
push
add
add
jl
mov
scas
inc
stos
xor
add
pop
lcall
stos
mov
add
nop
add
fidivs
jle
add
fildll
call
inc
jle
dec
inc
data16
lret
push
add
and
mov
cmc
aaa
sti
cs
subl
jb
lods
test
jmp
and
sub
mov
mov
hlt
add
xchg
dec
mov
mov
stos
mov
sub
jno
xor
popf
push
int
add
cwtl
cmovne
adc
xor
add
add
xorl
imul
add
xor
cmp
int3
dec
xchg
adc
and
test
add
push
add
dec
popl
add
mov
add
add
gs
push
icebp
jge
mov
ja
pop
sbb
mov
and
add
or
loopne
and
in
xor
jae
add
sarl
mov
add
cmp
add
sub
mov
push
add
mov
dec
cmp
add
jmp
add
test
inc
add
add
jl
add
and
mov
mov
sbb
xlat
enter
cwtl
cmpsb
add
dec
cwtl
lcall
rorl
jmp
test
push
add
add
add
imul
add
cltd
ret
add
add
sub
aad
add
add
add
add
and
mov
add
add
push
add
mov
outsl
insb
sarl
add
dec
lret
mov
xor
mov
add
cld
sub
push
cmpsl
mov
data16
mov
add
shl
addr16
push
xor
pop
and
dec
inc
cltd
cmpsb
add
jge
lcall
add
xlat
dec
rolb
jmp
add
cmp
insb
or
cmpsb
add
xchg
add
push
add
aaa
adc
push
mov
add
addb
add
xchg
add
add
dec
aad
xor
mov
add
mov
test
movsb
add
mov
add
add
cmp
leave
fmull
add
adc
in
test
cwtl
lcall
add
mov
fwait
addb
mov
test
js
bound
mov
add
add
mov
mov
jle
jae
lods
mov
sub
data16
xchg
add
sbb
cli
test
xor
pop
push
scas
jne
pop
push
add
inc
add
sbb
add
add
sub
fwait
adc
idivl
divl
js
dec
out
cwtl
repz
mov
add
inc
roll
dec
inc
ljmp
mov
call
inc
add
push
xlat
cmp
add
add
pop
xlat
cmp
mov
cmp
outsb
popa
jo
mov
add
mov
imul
testb
push
rolb
sub
add
cmp
jno
add
sbb
pop
data16
add
lret
xchg
and
lret
leave
sbb
add
aad
mov
and
addb
pusha
add
test
jge
adc
loope
add
movb
xor
push
add
add
pop
or
xchg
lods
sbb
cmp
add
add
imul
sarl
ret
cmp
aaa
les
mov
jmp
add
add
stos
pop
adc
popf
push
add
sub
into
loop
cld
jb
ds
xor
dec
sub
movsb
add
ja
add
dec
arpl
jae
test
add
addb
add
add
pop
mov
add
add
push
sub
add
xor
les
inc
add
add
lods
cmpsl
push
adc
clc
or
add
add
mov
add
add
mov
and
add
inc
add
cs
adc
call
dec
mov
mov
sub
inc
add
adc
mov
xchg
add
xlat
sbb
outsb
pop
add
out
xor
stos
icebp
sbb
sahf
scas
dec
xor
push
push
lods
repz
add
lds
add
cld
sub
or
add
loope
test
add
xor
xchg
add
add
add
ds
push
add
lcall
add
repz
add
lock
push
and
pop
lret
iret
jmp
fbld
and
mov
loop
roll
add
test
pushf
lcall
mov
cmpsb
add
icebp
cmp
mov
or
jo
mov
add
addb
in
sub
das
xor
cmp
imul
push
add
xor
movsl
ficompl
sbb
add
movd
adc
cs
pop
jne
dec
and
mov
add
mov
pop
stos
sar
std
adc
sub
jl
test
rolb
scas
sbb
dec
jecxz
add
add
cmc
test
jbe
and
mov
insl
cld
push
sbb
push
add
and
jne
add
dec
mov
add
cmpsl
cmp
aas
or
add
sti
pop
mov
add
inc
add
add
pop
and
mov
and
test
add
mov
add
mov
adcl
mov
movb
sbb
fbld
add
add
add
aad
add
xchg
add
test
in
add
add
jmp
mov
pop
sbb
push
ffreep
push
addr16
add
cltd
movb
ffree
and
mov
add
in
push
test
lret
ja
cli
loopne
pop
stc
js,pn
into
xor
mov
sub
add
sub
add
add
pop
mov
lret
add
stos
cwtl
rolb
pop
ljmp
cmp
add
mov
xchg
xchg
test
scas
aas
jl
fcmovnb
mov
cltd
push
add
add
loop
in
loopne
sub
sub
in
ja
fdivrs
add
lods
push
cmp
and
jno
lahf
ret
mov
jne
push
add
xcrypt-ctr
cmpsl
pop
imul
int3
sub
frstor
add
mov
pop
lock
add
jae
aad
lods
adc
in
test
xchg
and
mov
add
mov
cwtl
sti
in
fsubl
imul
pushf
pop
ljmp
add
add
leave
scas
insb
ficomps
xchg
fdiv
pushf
notl
add
jge
and
add
add
add
test
mov
add
pop
in
loopne
sbb
pushl
sub
mov
mov
add
adc
ret
adc
popf
jae
add
add
push
add
inc
add
out
push
sbb
scas
mov
enter
mov
lahf
or
push
add
pop
pop
jl
add
mov
and
ret
add
add
mov
jbe
cmp
and
mov
pop
jno
jnp
adc
outsb
fwait
xor
inc
add
add
xchg
add
add
adc
push
add
add
dec
stc
xchg
add
enter
jno
xchg
shl
ja
fsubs
scas
ret
mov
and
mov
pop
add
arpl
add
mov
fmull
pop
mov
fimull
pand
cmp
and
repnz
fucom
add
add
fwait
out
push
gs
add
add
mov
pop
addb
enter
ljmp
cmp
add
jns
aad
inc
add
push
add
stc
pop
or
mov
add
idivl
push
add
add
rol
add
cmpsb
add
add
bound
mov
or
xorl
jbe
jecxz
and
mov
add
inc
add
cmpsb
add
into
push
ds
mov
aad
rolb
jne
addb
in
inc
add
add
jle
cwtl
out
xor
add
aam
jae
fiadds
jo
sbb
bound
mov
mov
es
pop
jmp
add
ja
movsl
push
add
add
in
sub
cvtpi2ps
inc
mov
add
arpl
out
pop
pop
jae
loop
pop
cmpsl
ret
les
dec
mov
mov
jmp
add
mov
add
outsl
dec
push
add
jb
jno
in
sbb
add
dec
pop
popa
test
add
clc
mov
add
add
xchg
add
fucomp
outsl
in
cmp
push
rolb
fnstsw
test
push
add
ja
repz
cmc
test
rolb
push
add
adc
add
or
add
movsb
add
jb,pt
loop
aas
ficompl
rolb
add
test
adc
fistps
jmp
add
dec
or
test
add
out
daa
push
outsl
add
mov
and
ret
mov
pop
inc
repz
enter
mov
jge
addb
add
cltd
pusha
add
or
jg
pop
fdiv
lods
jge
ljmp
call
jnp
add
repnz
pop
pop
pop
jb
icebp
movb
push
aam
or
cli
lahf
cli
nop
add
xlat
fyl2x
mov
hlt
add
lret
mov
lret
ds
jmp
cmp
cwtl
dec
outsb
inc
add
adc
stos
xchg
add
addb
popf
lods
xchg
adc
xlat
in
std
mov
xor
mov
add
add
add
inc
add
adcl
add
add
xchg
add
xor
add
sbb
scas
xor
insl
loop
roll
insl
xor
mov
lods
lahf
mov
mov
mov
inc
add
mov
mov
xor
dec
inc
add
push
aad
add
pop
adc
mov
pushf
sub
lock
add
dec
jno
jmp
ljmp
repz
in
and
mov
stos
fimull
mov
add
mov
xorl
in
iret
adcl
add
and
add
pop
cli
inc
push
inc
add
and
cmpsb
add
add
movl
add
mov
jle
add
add
add
stos
sub
add
push
add
push
add
add
in
adc
add
js
or
addl
jecxz
and
shll
jmp
or
jbe
je
push
xor
lahf
es
add
push
ja
add
ja
add
movsb
add
add
and
fwait
mov
mov
movsb
add
ljmp
xchg
adc
and
sub
cli
inc
add
add
sahf
push
add
pop
and
sub
mov
add
leave
ficompl
add
std
test
mov
data16
add
sbb
rcrl
mov
and
add
mov
add
adc
cmc
mov
mov
add
mov
or
sub
push
enter
add
sub
add
add
mov
add
leave
fisubrs
push
add
dec
xor
and
mov
and
add
mov
mov
movb
add
dec
std
inc
add
cli
and
add
add
add
add
dec
aam
dec
lods
dec
add
stc
add
mov
push
add
sbbl
add
mov
add
add
ja
mov
add
sbb
add
fildll
inc
ret
add
inc
add
inc
add
and
mov
addb
add
add
test
pop
xor
lds
mov
mov
push
add
scas
adc
cltd
add
xlat
jle
adc
mov
jns
addb
loop
mov
push
fwait
lahf
lods
mov
add
xchg
mov
inc
add
and
imul
pop
adc
sbb
loop
xor
out
add
jb
sub
add
fldcw
rorl
std
mov
pop
popa
into
cmp
aam
sub
add
xchg
add
push
aad
adc
adc
jle
out
xor
movb
adc
xchg
cmp
add
movsb
add
out
movb
insl
xchg
mov
push
xchg
add
add
sbb
aad
testl
add
rolb
pop
rolb
sub
push
scas
stos
std
inc
add
push
cmp
and
xchg
add
or
jg
lods
adc
push
arpl
rcrl
addl
pop
daa
push
add
aad
add
mov
add
clc
inc
pop
arpl
add
add
pusha
add
lret
jmp
add
add
add
add
mov
loop
jecxz
xchg
add
and
jecxz
sub
mov
test
adc
lret
jle
inc
cwtl
aas
xlat
dec
and
lret
jb
dec
push
add
add
add
in
imul
add
pop
les
lret
mov
lea
pop
add
mov
rolb
add
lea
ds
mov
mov
sti
push
out
mov
dec
daa
in
cwtl
in
mov
add
add
jl
outsb
sub
outsl
add
add
mov
mov
fnstcw
ret
and
mov
add
pop
sub
es
add
add
dec
adc
movsb
add
fnstenv
xor
cmpsl
lods
test
mov
je
mov
and
add
xor
pop
cs
and
mov
mov
add
add
add
pop
fiadds
pop
outsl
insb
mov
imul
cmpsb
add
stos
cmp
ds
add
xchg
add
add
xchg
add
push
add
dec
pop
mov
mov
add
movsl
sbb
pop
std
add
mov
cltd
mov
jns
aaa
sahf
std
adc
test
add
dec
sbb
add
xchg
add
add
add
xor
add
mov
scas
arpl
inc
add
enter
mov
movsl
test
add
rolb
fistl
dec
xchg
pop
rolb
jg
dec
fld
insb
pop
mov
add
lret
daa
jp
and
add
sbb
add
imul
es
add
add
add
cwtl
leave
inc
add
add
add
pusha
add
dec
mov
mov
mov
adc
hlt
add
pop
mov
add
fwait
testb
add
mov
or
push
add
pop
xor
pop
call
daa
aam
mov
lret
loope
add
add
cmp
aas
maxps
addb
add
add
jmp
in
lods
jp
push
and
mov
add
movsl
inc
lahf
out
jbe
xchg
add
adc
loope
jl
pop
lods
jbe
push
add
add
xor
add
stc
lret
inc
loope
movsl
xor
je
dec
cld
add
mov
push
add
pop
icebp
sub
pop
push
add
xchg
mov
mov
or
fcmovbe
addb
out
and
mov
cli
pop
and
test
mov
insl
dec
mov
jbe
jl
lds
sbb
add
sbb
pavgb
shll
or
inc
add
daa
hlt
add
add
add
or
add
and
mov
fcomip
shl
add
xlat
mov
in
hlt
add
and
int3
jbe
xchg
add
add
addb
adc
and
jp
adc
push
add
sub
add
add
add
mov
cmpsl
lret
pop
cltd
push
icebp
inc
add
xor
add
inc
lcall
sahf
idivl
ljmp
xchg
push
dec
pop
push
add
insl
fxtract
add
adc
xor
lock
sub
mov
jne
adc
xorl
aaa
pandn
mov
mov
mov
out
cmp
test
jge
add
les
ret
add
lcall
add
dec
imul
adc
aad
add
mov
call
mull
xor
imul
mov
jb
sbb
lock
add
inc
jns
cmc
pop
cmp
add
add
add
add
mov
xlat
data16
pop
jne
inc
add
push
xor
test
add
cmp
add
add
add
mov
aam
cltd
pop
or
jmp
cld
pushl
push
add
in
out
or
or
add
in
subl
sub
lea
fcoml
add
mov
add
pop
add
cmc
cli
xchg
add
add
add
add
add
iret
jae
jp
testb
dec
montmul
cmpsb
add
addb
mov
rolb
add
add
xor
pushf
lods
les
jl
add
add
add
mov
pop
add
mov
ret
ret
out
cmp
and
outsb
mov
xchg
jbe
pop
in
shrl
or
push
or
mov
mov
mov
dec
loop
adc
jns
imul
jg
add
mov
icebp
sbb
inc
movb
add
scas
in
movsl
xchg
add
xchg
add
add
jecxz
loopne
mov
dec
pop
cmpsl
les
movsb
add
sbb
xchg
or
mov
lret
add
xchg
sti
stos
movsb
add
add
add
add
add
movl
lods
test
scas
mov
add
add
mov
xchg
add
aas
xchg
and
push
xchg
or
movsl
lea
addr16
xchg
add
aam
jb
xchg
sbb
and
mov
add
rolb
lods
push
add
add
mov
add
fwait
adc
mov
add
add
mov
cmp
push
insl
out
pop
push
mov
dec
rolb
jmp
ret
add
mov
icebp
dec
adc
mov
mov
fsubrl
mov
repz
cmp
stos
mov
add
pop
je
xor
fwait
iret
mov
add
push
add
add
cmp
loope
xchg
or
cli
push
add
push
push
add
add
add
xor
cmp
sub
packsswb
enter
add
jb
sbb
add
push
mov
or
jmp
add
jmp
rolb
pop
xchg
sbb
iret
out
sets
cmc
sub
add
out
mov
xchg
mov
add
sub
add
sbb
cwtl
sti
into
movsl
cmp
enter
aad
add
mov
dec
lock
mov
add
add
add
mov
add
add
imul
addb
pop
add
clc
dec
sub
mov
stos
out
mov
ljmp
or
test
add
jp
add
mov
mov
loopne
dec
dec
push
add
ds
mov
push
lds
add
roll
add
mov
add
push
cmp
jl
adc
cmp
mov
hlt
add
aaa
arpl
add
in
lret
outsl
pop
icebp
addb
xchg
add
dec
mov
dec
sti
add
lock
fisubrs
test
inc
stos
jbe
sahf
insb
sbb
xchg
add
stos
xlat
mov
add
add
add
int3
repnz
testb
mov
and
push
add
mov
add
cmpsb
add
test
xor
stos
push
add
icebp
mov
add
push
add
inc
fs
addb
add
add
pop
fsubrp
mov
aam
push
add
bound
mov
jl
add
add
and
cmc
or
cmc
pop
pop
sub
sbb
ja
add
addb
pop
mov
ljmp
mov
sbb
mov
test
lcall
fnsave
sbb
sbb
add
push
add
add
push
add
or
adc
popa
adc
jle
add
mov
jb
adc
shl
ljmp
xchg
pop
push
sbb
add
add
or
aam
mov
xchg
add
add
adc
pop
arpl
jl
pop
sub
int
pop
jmp
and
add
into
cmp
add
inc
addb
jp
sahf
jg
add
ja
add
or
sbb
push
add
addr16
push
mov
sbb
stos
adc
add
icebp
cld
in
pop
test
pop
or
ficompl
bound
mov
push
add
add
movsl
rorl
xchg
cmp
push
add
int3
push
in
lcall
ret
cwtl
sub
shl
cmp
add
add
add
add
jnp
int3
lock
jo
mov
mov
cli
pop
test
aam
pop
jns
addb
lods
or
dec
jns
add
out
or
add
xchg
mov
addb
movb
outsl
add
test
repnz
push
add
sub
leave
pop
or
add
or
and
mov
add
add
add
mov
scas
jg
push
pop
inc
add
lods
test
frstor
push
cmp
inc
add
add
mov
roll
pop
scas
aas
sub
jno
add
sti
jl
push
add
jmp
in
jge
scas
dec
or
mov
push
repnz
sarl
insb
adc
or
xchg
add
mov
loopne
arpl
loop
cmp
testl
mov
add
push
add
test
ljmp
in
scas
jns
pop
gs
addb
mov
xchg
mov
out
loope
rolb
mov
lret
add
pop
inc
add
in
insl
je
pop
ljmp
xlat
push
push
add
sub
inc
sub
or
loope
add
imul
enter
add
mov
in
jno
sbbl
add
add
jo
xchg
jge
mov
dec
pop
mov
inc
add
xchg
inc
add
inc
fisttpl
add
jle
add
add
loope
xchg
add
lock
lods
xchg
add
jae
into
popa
or
or
cmp
push
add
test
add
das
in
mov
add
add
outsl
je
jp
sub
bound
mov
pusha
add
and
mov
push
cmp
add
mov
bound
mov
add
push
add
jle
adc
aas
xchg
add
jp
mov
add
test
or
std
clc
cmpl
fisttps
add
loope
push
add
inc
add
add
aam
push
add
jnp
pop
test
clc
push
add
adc
push
push
in
mov
pop
stc
push
add
sub
jns
add
and
jmp
add
mov
add
add
insl
outsb
in
push
ret
xchg
into
sub
add
and
pop
js
sti
mov
out
nop
add
mov
jae
mov
pop
ljmp
loopne
adc
roll
add
xor
rolb
addr16
lcall
jns
sbb
cmp
add
jb
pop
pusha
add
sub
icebp
xchg
lds
insb
xadd
stos
jns
mov
add
add
pop
push
add
popa
jnp
mov
rolb
pushf
mov
add
pop
sbb
rolb
cmp
and
mov
add
inc
add
add
push
push
add
negl
lret
outsl
pop
sub
add
iret
sbb
sub
add
push
add
sub
add
add
dec
pop
ret
inc
mov
xor
out
adc
add
jge
scas
push
add
add
add
cmp
jns
add
jnp
pop
test
out
add
mov
push
add
add
fcmovb
iret
out
jnp
je
jo
data16
jl
data16
add
sti
dec
popf
or
outsb
inc
add
add
rcll
rolb
repz
cmp
mov
add
cmp
das
add
rolb
push
es
add
xor
inc
jnp
loop
fistps
rcll
push
add
add
sub
mov
add
mov
mov
aas
mov
inc
enter
mov
add
add
add
add
or
mov
add
cmp
pmulhw
call
mov
imul
dec
stos
stos
movb
insb
cwtl
arpl
fstl
mov
inc
addb
loopne
jp
pushf
aam
das
lea
add
add
scas
push
mov
xor
add
add
fdivs
add
pop
push
pop
jae
adc
mov
add
pop
lods
xor
add
mov
movb
xor
out
sub
movsl
or
or
add
ret
push
cmpsl
out
push
add
inc
add
insl
xor
xor
add
jb
fdiv
test
pop
in
cmpsl
adc
add
lahf
rolb
addr16
add
cmp
pop
out
bound
mov
add
xchg
add
add
jg
dec
inc
in
testb
add
rcrl
cmp
add
lret
add
icebp
push
add
inc
add
dec
add
adc
pop
cmp
test
push
add
cs
add
xor
mov
xor
bound
mov
add
mov
out
pop
daa
xchg
add
ja
mov
pop
daa
sarl
insl
fmul
dec
push
add
inc
mov
sbb
adcl
dec
inc
jo
or
pop
insb
sahf
pop
lds
outsb
and
les
addr16
lds
mov
je
pushf
jo
addr16
imul
xlat
push
add
add
jmp
push
add
add
mov
add
pop
mov
gs
add
aaa
sbb
mov
add
dec
fsubrp
add
mov
mov
js
sub
enter
add
inc
xor
add
mov
std
jnp
add
push
cmp
mov
imul
add
push
rolb
add
and
jge
cmp
stos
mov
add
or
jg
add
mov
sahf
adc
jb
out
cmp
inc
or
add
add
mov
jne
adc
dec
xor
mov
dec
dec
xchg
mov
push
outsl
fbstp
or
out
add
xchg
aam
loope
add
into
dec
sti
adc
or
add
icebp
stos
cmp
pushf
addb
add
in
imul
add
scas
mov
xor
dec
daa
add
mov
insb
filds
add
add
add
add
lret
aas
xchg
pop
jne
add
jne
add
ret
test
add
aaa
add
mov
jg
mov
add
dec
scas
xchg
mov
inc
add
shl
mov
dec
dec
mov
add
add
add
add
add
add
adc
sub
sub
stc
clc
outsl
pop
or
xor
mov
add
add
add
imul
insb
pusha
add
mov
push
and
xor
in
add
lods
arpl
lret
add
mov
adc
xor
inc
add
add
add
adc
out
mov
add
dec
pop
push
mov
insl
mov
jle
add
pop
call
test
add
add
add
add
mov
add
add
sahf
add
mov
add
or
movsl
and
add
add
mov
add
xchg
mov
xor
add
mov
mov
testb
add
add
add
add
add
fnstenv
adc
loop
inc
add
sbb
add
mov
into
nop
add
add
dec
add
push
mov
jmp
out
pop
rolb
mov
in
in
sti
test
adcl
sbb
pop
fs
testl
outsl
aaa
mov
sbb
jbe
js
mov
repnz
rcll
mov
arpl
add
add
inc
jae
add
add
cmpsl
stc
jnp
add
add
cmp
mov
add
add
rcll
cmc
push
mov
jns
imul
pusha
add
rolb
mov
add
mov
add
dec
insl
mov
lcall
cltd
fisubrl
outsl
aas
lods
pop
int
mov
add
add
add
cld
pop
lds
add
cmc
lods
cmp
cmpsl
out
cmpsb
add
xchg
sbb
add
pop
adc
stc
mov
mov
mov
cmp
aam
cmp
xchg
xchg
push
xchg
add
sub
call
dec
sti
cmp
push
push
add
mov
shll
add
rolb
dec
dec
nop
add
push
movsb
add
mov
add
data16
push
ljmp
aaa
xchg
dec
dec
lcall
loope
or
ljmp
jle
add
add
push
das
insb
aad
pop
cli
or
movsl
popa
xor
jno
enter
lcall
add
repz
mov
or
aaa
add
and
cmp
gs
add
add
dec
scas
add
and
leave
dec
test
add
testb
mov
adc
and
mov
add
pop
xor
add
pop
add
add
add
add
add
mov
dec
testl
push
add
mov
mov
iret
lock
addb
cld
jmp
in
repnz
enter
sub
add
mov
mov
jp
jmp
pop
ja
fsubrs
add
pushf
popa
add
lods
lahf
cmp
add
mov
mov
pop
add
or
aam
mov
pop
sbb
add
mov
or
add
cld
add
pusha
add
inc
lea
gs
dec
push
dec
dec
addb
mov
add
xchg
mov
add
fiadds
add
aaa
inc
add
clc
outsl
ret
adc
adc
lcall
add
add
in
arpl
mov
add
push
add
add
add
andl
mov
add
jne
xor
sub
cmc
into
fmulp
mov
and
mov
inc
adcl
add
lret
mov
add
out
jbe
hlt
add
in
test
adc
sub
or
add
mov
dec
sub
xchg
mov
push
add
mov
scas
cmp
hlt
add
roll
adc
inc
add
ds
jmp
add
push
lds
cmp
add
push
icebp
out
sbb
push
inc
add
out
dec
and
out
add
mov
dec
mov
add
test
mov
lds
jns
inc
add
add
add
add
xor
loope
xor
mov
pop
xor
add
add
out
fnsave
sbb
lret
add
jno
mov
addb
mov
imul
add
mull
add
mov
add
mov
mov
or
jp
add
add
rcrl
pop
add
cs
fldenv
inc
add
pop
addb
out
rcrl
mov
mov
hlt
add
add
add
movb
mov
and
lret
nop
add
adc
xor
dec
pop
add
add
repz
mov
nop
add
mov
stos
insb
andl
add
outsl
sub
add
inc
add
add
add
cmpsb
add
daa
shl
xchg
repnz
mov
add
add
add
adc
and
add
add
push
add
add
add
mov
add
pop
sub
dec
clc
push
push
mov
je
divl
push
lcall
mov
addb
sbb
or
add
test
ja
lea
add
add
add
sub
add
mov
jp
cs
test
test
popa
mov
popa
and
mov
adc
lods
push
add
mov
jns
sub
sbb
jb
mov
in
lods
popa
mov
mov
addr16
aad
test
iret
stos
ret
add
mov
pushf
data16
add
xchg
add
add
inc
xor
lea
sbb
outsl
dec
sub
frstor
add
pop
push
ljmp
mov
xchg
add
inc
add
add
sbb
add
fildll
lahf
sub
add
pushf
addb
add
fcmovnb
ret
jmp
mov
jmp
xor
add
mull
add
dec
jp
adc
jl
sub
hlt
add
mov
pop
push
sub
jmp
add
mov
aad
rolb
xchg
add
add
add
add
addb
add
repz
xchg
dec
xor
arpl
inc
add
rolb
xchg
fisubrl
lret
mov
ret
add
mov
mov
jmp
dec
mov
ja
dec
and
imul
or
pop
mov
sub
lock
scas
mov
rol
orl
dec
adc
cltd
movb
mov
mov
and
lret
stos
mov
stc
xchg
add
add
add
jno
add
mov
xor
add
add
psadbw
and
cmpsl
or
cmp
cmp
pop
jnp
lret
add
cld
movb
test
add
adc
mov
or
aam
sub
sbb
add
add
scas
pop
mov
pop
loope
pop
xor
jg
or
add
lods
jns
rolb
test
rolb
and
test
jo
fnsave
out
mov
add
add
add
ror
popf
mov
add
add
add
jge
add
sbb
outsb
in
lret
add
mov
inc
add
add
push
sbb
aad
pmulhw
aaa
jmp
stos
cmpsb
add
add
testb
add
add
loope
pop
insb
scas
std
xchg
add
add
xchg
dec
pop
inc
add
jb
hlt
add
addb
add
lock
pop
cmp
adcl
stos
add
sub
add
jg
gs
add
add
mov
nop
add
xchg
add
push
mov
data16
add
notl
rorl
adc
pop
lcall
add
jp
inc
add
add
jg
cmp
add
add
add
cmp
jno
add
pop
ljmp
pop
jmp
xchg
add
lods
das
dec
mov
lock
iret
imul
xchg
add
add
test
pop
mull
add
add
add
inc
add
insb
sar
xor
and
mov
loop
ja
add
add
add
ljmp
mov
jl
add
and
fcoms
ds
inc
add
test
push
pop
add
xchg
add
add
mov
addb
lcall
ret
add
push
add
imull
push
or
pop
roll
adc
andl
cmp
add
cwtl
mov
add
add
mov
mov
add
add
push
pop
ja
insb
xchg
push
add
jle
ljmp
je
push
add
push
sbb
scas
mov
lcall
add
in
ljmp
add
add
xchg
dec
xchg
mov
push
test
add
mov
cmc
sub
add
add
xchg
add
push
add
arpl
add
adc
add
jp
xchg
cmp
rolb
mov
sbb
lahf
add
add
int
push
loopne
cltd
cmp
and
cli
xor
sbb
add
mov
add
xlat
push
add
add
int3
pushf
sub
add
lea
cmp
jg
enter
add
inc
sbb
or
add
and
mov
in
or
mov
add
sub
add
inc
add
and
mov
rcll
jmp
lcall
scas
addb
sub
mov
push
add
add
add
add
test
and
add
mov
sti
mov
cmp
lods
clc
and
add
add
push
pop
inc
pushf
out
into
out
movsb
add
addb
mov
xorl
imul
add
add
inc
std
xchg
inc
add
xchg
xor
jnp
popa
push
add
loope
add
addb
mov
or
add
or
add
mov
add
les
adc
add
les
scas
cmp
jmp
adc
rolb
mov
mov
xor
movsb
add
mov
sbb
push
mov
pop
adc
mov
add
fdivp
pop
psubusb
mov
subps
sub
inc
add
add
addb
inc
add
mov
add
xchg
mov
push
fnsave
pop
jb
pop
imul
mov
add
lret
mov
inc
xchg
cmp
add
sbb
into
stos
cmpl
pop
bound
mov
add
add
dec
cmp
add
ja
add
dec
adc
mov
dec
in
xchg
add
roll
rolb
and
test
add
fistpll
test
popa
aad
add
jns
scas
push
icebp
mov
add
fucomi
in
xchg
xchg
jmp
add
xchg
mov
mov
add
mov
sahf
pop
push
in
ret
mov
movl
sub
xor
xor
mov
add
pushl
add
scas
jmp
add
jecxz
push
add
mov
out
pushf
mov
inc
adc
js
loope
add
test
mov
add
fists
add
mov
sub
jno
rorl
pop
and
mov
mov
mov
dec
or
mov
pop
dec
out
faddp
out
repz
add
outsl
pop
xchg
mov
in
lcall
adc
mov
addb
fdivrl
add
pusha
add
add
into
and
and
mov
inc
outsb
shll
les
jecxz
jns
pop
add
mov
pop
mov
loop
loopne
and
in
rcrl
mov
jo
push
lahf
in
push
mov
inc
add
add
push
je
orl
push
add
sub
pop
repz
xchg
add
add
dec
xor
sub
sbb
add
add
pushf
pop
push
jl
add
add
nop
add
add
adc
mov
gs
jne
cs
push
add
lods
sub
or
jbe
mov
lret
rolb
xchg
add
cmp
xchg
sbb
mov
in
xchg
adc
test
add
cmp
inc
add
adc
insl
nop
add
inc
push
popf
addb
dec
fists
scas
push
xor
jo
adc
mov
in
popf
outsb
pop
add
ljmp
in
mov
and
mov
add
mov
add
dec
cld
inc
fldcw
add
add
add
aam
arpl
add
adc
jnp
push
xchg
testb
jns
add
xor
setge
jmp
add
xor
add
mov
out
pop
pop
popf
repz
sub
mov
in
add
mov
xchg
add
and
sti
xor
add
xchg
mov
mov
sahf
hlt
add
test
std
sub
add
idivl
fsubs
int
jl
add
add
add
mov
sbb
inc
add
fistl
or
inc
add
inc
les
mov
add
dec
pop
out
add
dec
hlt
add
dec
loopne
xchg
cs
mov
add
add
add
sahf
mov
add
add
test
push
adc
cltd
test
jne
mov
add
incl
fstl
sbb
jmp
and
mov
rolb
add
push
add
xor
movsb
add
mov
fwait
mov
and
add
add
in
sbbl
push
lret
and
rolb
or
fcoms
add
daa
push
push
add
pop
pop
loope
add
nop
add
mov
popf
aad
add
add
cmpsb
add
sahf
fmulp
jnp
rolb
add
add
ret
insl
xorl
inc
jle
lds
pop
xlat
pop
cld
add
test
add
dec
out
scas
lret
enter
add
add
ja
aaa
arpl
jp,pn
jg
dec
cs
cmp
mov
adc
test
aad
stos
mov
push
add
out
mov
add
inc
add
rcll
mov
loopne
push
jmp
add
pop
mov
bound
mov
push
pop
jmp
adc
lret
cltd
or
mov
leave
icebp
pop
cmp
push
add
inc
add
jmp
repnz
cmp
dec
test
xchg
add
push
inc
add
add
dec
or
add
es
push
add
push
insb
test
std
dec
int
jl
push
add
imul
mov
into
faddp
add
iret
js
fst
add
mov
add
adcl
mov
add
add
test
jecxz
bound
mov
add
lret
scas
aas
mov
add
add
push
data16
jl
lahf
xchg
push
inc
mov
fiadds
add
dec
call
rcrl
add
pusha
add
faddp
pop
jp
add
enter
mov
xchg
add
scas
sub
jl
test
mov
xchg
add
repz
xor
add
pop
and
inc
cld
and
add
pop
sbb
cwtl
enter
xor
mov
rolb
and
mov
das
sub
rorl
xchg
fcomip
add
jge,pt
gs
mov
mov
push
jns
mov
clc
mov
sarl
mov
xor
pop
mov
lahf
scas
cmp
fsub
add
addb
add
add
add
data16
bound
mov
add
add
icebp
iret
push
int
mov
add
jl
in
push
add
cmp
xor
and
add
or
test
or
cltd
jle
mov
cmp
inc
mov
add
popa
dec
lods
xchg
aad
adc
add
cmp
inc
add
adc
add
mov
inc
add
rolb
pusha
add
sbb
add
add
subl
leave
repnz
in
mov
das
add
or
mov
xor
mov
outsb
pop
outsl
add
push
add
sbb
add
es
hlt
add
cmpsl
mov
ficoms
xchg
add
jo
nop
add
mov
add
or
inc
add
cmp
scas
outsl
psubusb
xchg
mov
bound
mov
insl
inc
adc
test
xor
dec
sub
add
add
cmpsl
dec
jg
add
sbb
hlt
add
loope
adc
add
xor
mov
add
add
int
xor
sbb
cld
sbb
jl
inc
add
shll
mov
add
fdivs
incb
mov
popa
sbb
mov
jmp
push
add
xchg
push
add
imul
mov
add
ja
ja
add
mov
inc
add
add
lret
add
mov
addb
data16
rolb
adc
stc
int3
dec
sub
add
scas
mov
or
pop
fidivs
add
mov
xchg
pop
stos
cmpsl
or
add
add
or
nop
add
mov
add
add
xchg
iret
xchg
clc
leave
dec
sti
jns
xchg
add
scas
adc
js
sub
or
add
dec
jp
add
add
add
add
jbe
jbe
mov
out
sbb
push
pop
sub
and
cltd
jne
xor
or
test
out
mov
pop
packsswb
dec
pushf
nop
add
sahf
shll
mov
jne
add
mov
in
adc
xchg
add
inc
mov
out
mov
add
data16
add
sbb
fdivl
dec
fwait
imul
aas
mov
add
add
pop
xchg
and
mov
jp
add
inc
add
add
add
mov
in
pop
push
or
push
dec
sub
std
xor
add
mov
sub
add
in
in
pop
mov
aam
out
aas
mov
int
stc
test
inc
add
sti
sub
mov
dec
jecxz
fists
mov
cmc
jmp
mov
push
add
mov
sub
sbb
add
arpl
add
sbb
popf
rorl
lret
push
add
add
das
clc
testl
outsl
hlt
add
inc
add
cmc
add
icebp
decl
push
add
stos
push
add
jp
jns
add
out
jmp
fidivrs
add
mov
ljmp
jbe
repnz
jne
xchg
fildll
rolb
dec
ss
mov
push
add
pushf
cld
out
jno
clc
fidivs
push
add
test
inc
add
add
outsb
sbb
add
cmc
pop
mov
add
cli
xchg
pushf
rorl
in
popf
mov
hlt
add
mov
fistl
mov
xor
testl
pop
cltd
inc
add
add
jmp
and
add
and
mov
add
lods
lods
pusha
add
xchg
add
cmp
push
lcall
add
loop
add
mov
rcl
add
ret
in
mov
cwtl
sbbl
ds
movsb
add
mov
add
add
ds
add
or
fldenv
push
jnp
or
sub
test
cmp
add
movsl
push
popl
mov
and
xor
add
jns
add
inc
pop
popa
dec
sub
adc
stos
fdivl
add
add
add
add
lods
pop
iret
cli
pop
psrlq
inc
fwait
mov
sub
out
lods
jno
add
stos
jno
mov
add
add
mov
add
or
add
fstps
xor
and
mov
movsl
jo
bound
mov
loop
mov
pop
adc
out
mov
add
mov
mov
imul
imul
adc
rolb
repnz
js
add
add
std
xor
outsl
sub
shrl
rolb
jbe,pn
xchg
add
movsl
push
add
jg
add
add
mov
xchg
call
mov
call
add
mov
mov
xor
daa
mov
push
inc
add
jb
stos
adc
stos
push
inc
cmp
test
push
sbb
sbb
add
add
addl
sahf
lret
add
pop
movb
mov
dec
imul
ret
or
add
mov
xchg
mov
loopne
and
add
add
cmp
mov
lods
dec
sbb
pop
inc
add
mov
and
mov
sub
add
add
cmp
jne
loopne
aaa
ud0
pop
jp
add
add
add
insl
sbb
stos
test
jb
adc
add
mov
test
add
xchg
and
sbb
jns
inc
js
movsb
add
leave
dec
pop
aas
test
push
or
fdivrs
add
jbe
pop
push
add
popl
xchg
sti
cli
inc
add
sahf
pop
outsb
stc
sub
or
lock
cltd
xor
xchg
jecxz
mov
push
add
ljmp
in
jno
gs
add
inc
add
add
pushf
testl
dec
das
adc
mov
add
add
jae
add
arpl
push
push
add
jnp
loop
mov
add
out
sub
add
pusha
add
inc
mov
xor
jmp
out
jb
ljmp
scas
lret
pop
dec
xlat
adc
insl
mov
add
fwait
mov
cs
xor
push
add
add
mov
lahf
jno
pusha
add
push
jb
iret
ret
mov
ja
insl
pop
sub
add
mov
pop
out
jg
fstpt
add
xor
rolb
jmp
add
lea
add
xchg
shrl
add
mov
add
mov
xor
jecxz
and
add
add
add
jo
popa
rcll
movsb
add
je
cmp
mov
cmp
add
and
and
outsl
pusha
add
outsl
and
jns
jl
loop
jno
inc
movsl
dec
or
cltd
cs
add
xchg
xor
add
mov
add
mov
mov
add
add
dec
and
mov
push
inc
add
add
leave
add
into
lods
loop
cmpsl
stos
psubw
cmp
and
jo
popl
add
mov
mov
push
add
mov
int
add
fwait
je
mov
outsb
add
mov
loope
mov
add
xor
call
push
xchg
loop
adcl
jmp
or
add
sub
dec
lea
add
dec
xchg
add
mov
push
mov
xor
addb
add
les
lcall
mov
add
fistps
stos
adc
push
es
mov
dec
mov
add
ljmp
rcrl
or
add
jp
cwtl
gs
dec
jecxz
ret
arpl
jo
jecxz
jg
push
add
enter
out
add
sub
add
add
mov
add
out
loopne
adc
sub
add
sti
sbb
testl
pop
push
add
stos
jle
rcrl
dec
ficoms
pop
fisubrl
or
addb
int
pop
testl
add
add
lds
add
add
cli
inc
addr16
cs
add
push
add
add
adc
add
add
add
add
pop
or
arpl
mov
aas
in
jnp,pt
test
rolb
add
jns
add
jnp
clc
jmp
sbb
pop
mov
popf
outsb
jg
test
out
adc
clc
sub
and
mov
test
pusha
add
sub
aaa
dec
cmp
mov
out
and
add
imul
rolb
xchg
add
stos
jnp
add
inc
sub
gs
and
add
cwtl
inc
add
test
mov
add
pushf
mov
leave
xor
jmp
ret
and
nop
add
cli
sub
addb
dec
sbb
inc
add
add
xor
std
push
or
jo
mov
mov
lcall
dec
sbb
add
inc
push
and
mov
add
add
mov
lock
clc
jae
push
add
mov
push
fisttps
fdiv
add
in
jbe
xor
add
cltd
xchg
dec
push
cltd
clc
jns
lea
add
inc
add
movsl
xor
mov
rcl
loopne
inc
add
loop
sbb
inc
add
mov
out
imul
jg
add
add
add
scas
fisubs
mov
data16
mov
cltd
int3
mov
aas
add
jecxz
iret
sub
add
sub
aad
xor
pop
bound
mov
add
mov
in
push
push
mov
cmp
rolb
lret
fldt
pop
or
push
test
xor
push
dec
hlt
add
or
add
or
xchg
lcall
dec
mov
add
cmp
add
je
or
jne
push
add
add
dec
sbb
dec
ret
cmpsl
pop
xor
adc
dec
xor
in
cld
daa
fcomip
add
add
xchg
add
dec
mov
iret
add
add
stos
cmpsb
add
push
outsl
inc
add
inc
add
insl
cmpsl
mov
ret
mov
add
decb
jbe
push
ret
xchg
pop
xor
jp
enter
sahf
in
cmp
sbb
nop
add
mov
loop
pop
dec
fwait
and
mov
and
mov
hlt
add
lret
add
add
sahf
aas
ss
xchg
mov
add
mov
xchg
add
scas
push
add
faddl
mov
mov
aas
xchg
mov
mov
add
push
add
add
es
add
push
cmc
jg
add
adc
cmp
lret
push
add
jae
add
imul
rolb
add
mov
fcmovnb
ret
or
add
add
fnstsw
seto
pop
cld
xor
out
sub
push
add
movsl
cmp
add
add
sub
mov
stos
xchg
add
inc
aad
xchg
mov
sub
lods
mov
push
insb
lret
add
inc
add
add
dec
int
sti
add
xchg
add
adc
xor
add
sbb
call
add
movsb
add
add
fstps
ljmp
mov
jecxz
add
add
call
insl
mov
mov
imul
xor
cmp
sbb
sbb
add
incb
mov
mov
fdivl
push
fwait
sbb
add
add
add
subl
xchg
add
cmp
icebp
add
icebp
lds
dec
gs
add
push
push
add
std
insb
xchg
add
stos
ljmp
ja
std
ljmp
add
cmp
lds
dec
jnp
add
enter
xchg
xor
aas
out
push
outsb
jns
push
daa
sub
cli
fwait
repz
mov
pop
inc
add
popf
mov
xchg
jne,pn
lcall
bound
mov
add
xor
add
cmc
mov
mov
loope
add
in
jmp
icebp
adc
aad
das
enter
jbe
or
sub
test
add
mov
aaa
xlat
mov
push
add
stos
arpl
mov
adc
jmp
cwtl
in
sub
add
aaa
cmpsb
add
lcall
mov
loopne
jmp
cmp
add
in
push
leave
rol
add
add
mov
aad
out
mov
add
add
jecxz
add
inc
inc
add
mov
add
mov
cmpsl
or
aas
adc
lret
or
xchg
add
add
dec
int3
imul
sub
rolb
dec
in
add
fbstp
mov
dec
mov
cmp
xchg
test
add
add
add
add
add
add
pop
or
ja
add
xchg
cmpsb
add
loope
mov
scas
or
add
add
arpl
add
add
in
stos
inc
cs
add
add
loope
inc
lds
push
add
ficoml
in
bound
mov
in
pop
add
insl
pop
inc
cmpsl
jg
pop
dec
inc
xor
push
add
push
je
sti
sbbl
in
adc
fildll
sub
add
jmp
mov
js
or
mov
dec
lods
xlat
add
add
add
js
add
push
add
mov
repz
jae
stos
mov
test
xor
js
sub
repnz
sti
inc
add
pusha
add
cmp
add
pop
mov
add
add
add
sahf
and
mov
mov
cmc
in
fisubrs
int3
shl
add
scas
cmc
or
add
mov
pop
adc
add
push
add
mov
inc
add
fwait
and
add
je
cwtl
insl
cmp
sbb
push
stos
lock
jae
lea
add
add
or
push
add
and
add
repz
add
sarl
or
out
xor
add
dec
daa
movb
xchg
dec
ss
push
loop
icebp
stc
or
cmp
add
jge
add
outsb
sti
lock
adc
mov
jnp
mov
add
add
add
add
inc
out
lods
add
and
addr16
add
dec
fsub
add
add
pop
sahf
ss
sbb
test
mov
sbb
addb
add
and
dec
inc
add
add
faddl
add
mov
data16
test
mov
sbb
push
sbb
and
mov
push
data16
movb
pop
or
push
xchg
call
iret
xor
add
add
cmp
sub
je
push
add
arpl
xchg
add
add
mov
pop
mov
cltd
mov
xor
and
sub
notl
add
add
test
clc
inc
test
jecxz
jnp
rolb
pop
add
jg
dec
push
iret
sbb
jae
mov
jmp
xor
push
add
sub
popf
out
and
mov
mov
jne
repz
dec
inc
mov
dec
mov
xchg
mov
add
cmc
jae
aam
stos
dec
cltd
cltd
out
pop
lock
jmp
add
dec
insb
jge
dec
subl
data16
addb
mov
mov
das
add
sbb
pop
pop
pop
testb
pop
rolb
cmpsb
add
test
add
add
gs
cmp
stos
lret
xor
inc
add
adc
pop
test
fadd
mov
push
pop
sbb
stos
mov
mov
add
les
and
mov
add
mov
repnz
xchg
or
add
iret
push
je
pop
and
mov
int
loope
ja
sub
adc
in
adc
dec
je
scas
ds
fstl
add
cli
lahf
jecxz
lods
cwtl
je
pop
ja
mov
add
int
ljmp
pop
loop
xchg
add
rcrl
add
pushf
add
sub
std
pop
add
add
add
push
add
add
add
arpl
aas
push
or
in
add
out
push
add
sbb
cmp
pop
xchg
je
jbe
xor
sbb
negl
and
mov
add
out
pop
or
daa
pop
push
add
adc
aas
push
add
adc
xchg
xchg
xor
sub
roll
bound
mov
movsb
add
mov
in
pop
push
adc
mov
add
inc
scas
in
repnz
hlt
add
lods
push
and
mov
add
xchg
testl
jl
lret
or
daa
inc
clc
push
add
add
add
stos
xchg
data16
add
cmp
xor
xchg
push
mov
xlat
dec
or
dec
clc
int
test
mov
cmp
mov
adc
add
hlt
add
jle
sub
add
add
and
add
mov
add
mov
das
lret
loope
pop
push
movsl
jecxz
sub
sti
popf
imul
mov
add
sbb
add
dec
movsl
mov
dec
inc
int3
push
xor
add
mov
add
scas
cmp
call
mov
adc
int
insl
and
mov
mov
fwait
repnz
add
dec
test
xor
popa
mov
xlat
pop
fldln2
add
mov
pop
rolb
addb
movb
rorl
xor
int
add
add
add
add
add
jae
scas
lods
add
sub
xor
testb
add
aad
add
add
jmp
add
insb
or
test
mov
jg
rolb
add
add
add
lods
cwtl
inc
cmp
or
add
add
outsb
or
add
add
or
push
sahf
out
popa
addr16
rolb
add
movsb
add
push
add
add
add
add
xchg
push
pop
or
out
lea
mov
jl
add
scas
jbe
or
xor
add
add
jno
rolb
add
rolb
inc
add
inc
sub
outsb
cmp
add
add
mov
lds
mov
jnp
add
decb
hlt
add
popf
jmp
dec
cwtl
mov
mov
push
popa
mov
push
lret
mov
aad
pushf
adc
adc
add
push
fldenv
inc
testb
add
cmc
adc
inc
add
fisubl
popa
aam
sbb
jb
into
movb
push
les
aaa
sbb
add
add
in
xchg
add
enter
out
std
cmpsl
fstpl
leave
mov
add
aas
outsb
adc
mov
pop
push
add
scas
test
push
lret
pop
push
add
push
repz
repz
add
imul
sti
xor
call
pop
xlat
inc
lret
insb
cmc
scas
jecxz
add
mov
add
mov
fdivp
mov
add
mov
add
icebp
jp
jle
call
add
add
test
fwait
add
adc
add
mov
mov
inc
mov
cli
lahf
std
cmpsb
add
cli
pop
xor
test
push
add
push
add
rolb
add
add
add
xchg
loop
lret
push
add
jecxz
add
mov
push
mov
lret
inc
idivl
in
mov
add
xchg
adc
dec
mov
cs
cmp
out
adc
dec
decb
insb
mov
inc
xorl
loop
lcall
pop
out
lock
and
mov
and
mov
ret
jnp
mov
jmp
add
cmpsl
int
add
arpl
test
add
add
mov
add
lahf
imul
aam
nop
add
dec
out
dec
cmp
pop
lea
adc
fwait
push
jge
lcall
add
jg
add
add
inc
add
adc
std
pop
mov
and
sub
pmulhw
in
lret
popa
lahf
xchg
add
xor
mov
pop
addr16
enter
add
add
push
shrl
stos
xchg
add
mov
aam
test
cli
cmp
in
jne
sbb
test
call
add
pushf
push
mov
adc
and
xor
pusha
add
stc
movsb
add
jb
sbb
jne
into
into
rolb
inc
add
int
add
ret
enter
push
add
xchg
add
add
add
int
mov
add
sbb
add
xchg
add
fcmovnb
add
add
add
pop
jmp
mov
adc
les
imul
inc
out
push
add
aaa
pop
mov
sbb
jne
aas
lahf
sub
xchg
lea
cli
imul
inc
xchg
push
xchg
add
jo
add
add
push
add
cmpsb
add
add
add
mov
loopne
mov
add
add
xchg
add
add
leave
out
add
je
aad
in
add
add
push
add
dec
scas
es
xlat
jns
add
xchg
add
push
cmp
jmp
add
add
mov
pop
mov
pop
cli
rcl
add
gs
shll
sub
adc
fdivrs
add
rolb
arpl
outsb
jno
add
ss
dec
call
mov
into
cmp
test
dec
mov
loop
sbb
addb
add
and
mov
sbb
add
add
insl
push
fcmovne
cmpsl
imul
xchg
add
add
out
mov
add
mov
mov
add
add
jb
loop
and
mov
mov
out
xchg
subl
testb
jbe
imul
add
scas
jecxz
and
mov
fwait
jbe
aas
sub
rolb
add
mov
testl
insl
add
mov
call
and
mov
or
cwtl
add
mov
push
add
add
add
add
daa
loop
jne
scas
push
daa
pop
adc
dec
in
dec
push
inc
add
add
add
jae
xor
mov
add
mov
ficompl
push
inc
add
adc
xchg
push
testb
ret
add
rorl
mov
addb
add
add
dec
mov
jmp
ja
push
pop
cmc
insb
sbb
cwtl
je
cmp
adc
inc
add
cltd
int
popf
enter
fwait
jnp
jg
cmpsb
add
lret
sbb
imul
xchg
mov
lock
je
test
add
out
sub
xchg
add
sbb
enter
mov
inc
insb
adc
lea
ret
push
jg
add
jbe
lock
in
dec
fsubr
adc
add
add
cmp
add
adc
aas
mov
test
add
lods
testb
js
xor
push
lds
mov
add
add
mov
mov
sub
add
mov
and
mov
mov
push
xor
fisubs
fsts
pop
cli
xchg
xor
or
ret
jb
push
xchg
push
add
mov
nop
add
insl
lret
mov
lods
pop
dec
daa
adc
jecxz
jae
push
movsb
add
icebp
js
add
add
cmp
ja
add
adc
add
aad
jns
cwtl
cld
loop
sub
cmpsb
add
or
popa
sub
add
add
add
loopne
adc
loope
add
add
add
aam
cld
pop
pop
sbb
pop
int
jns
rolb
dec
sub
cwtl
lea
add
inc
add
ds
add
addb
insb
test
mov
pop
iret
test
xchg
outsl
mov
add
cmpsb
add
sbb
sub
popf
gs
jbe
inc
daa
roll
mov
aad
jecxz
add
add
repnz
jae
add
add
xchg
add
mov
push
mov
xchg
ret
xchg
add
dec
clc
dec
inc
clc
repnz
jae
jge
ret
bound
mov
mov
push
mov
xchg
ret
inc
mov
xor
mov
cld
nop
jmp
arpl
into
in
mov
clc
repnz
jae
add
mov
add
les
repnz
jae
fwait
jmp
ror
out
pop
xchg
clc
repnz
jae
add
add
mov
and
clc
repnz
jae
add
roll
call
clc
repnz
jae
add
es
repnz
and
repnz
jae
mov
add
add
add
push
mov
xchg
ret
add
jmp
fwait
std
mov
clc
repnz
jae
movsl
movsb
scas
mov
add
repnz
jae
xor
jmp
jne
clc
repnz
jae
jge
add
fcoms
gs
inc
add
add
add
cmp
clc
repnz
jae
add
sbb
addl
add
add
add
jnp
fwait
cld
nop
jmp
xor
scas
add
je
mov
add
dec
mov
clc
repnz
jae
arpl
mov
add
mov
mov
clc
repnz
jae
add
add
pop
fcoms
mov
xchg
ret
add
jmp
inc
add
add
add
add
push
movzwl
clc
repnz
jae
jge
add
mov
repnz
jae
std
movsl
ret
sahf
fucomi
mov
add
clc
repnz
jae
jmp
mov
mov
test
les
clc
repnz
jae
stos
add
add
clc
repnz
jae
adc
mov
clc
repnz
jae
add
add
pop
clc
repnz
jae
sbb
xor
add
add
lret
push
clc
repnz
jae
test
add
test
mov
pop
shl
push
mov
xchg
ret
xchg
add
add
or
popa
add
repnz
jae
add
mov
fiaddl
sub
jmp
jae
movsl
add
scas
popf
stc
pop
clc
repnz
jae
out
add
popf
jno
add
push
int
add
bound
mov
bound
mov
jae
add
add
add
add
or
add
add
rol
clc
repnz
jae
leave
add
rol
mov
lds
jae
add
add
fisubrl
mov
clc
repnz
jae
add
test
fwait
cld
nop
jmp
jno
xor
popf
add
add
lock
add
add
add
add
loopne
mov
xchg
ret
mov
rolb
add
add
and
xor
mov
decl
push
mov
xchg
ret
add
add
or
cld
nop
jmp
sahf
movsl
add
movsl
mov
test
fiaddl
xchg
ret
leave
add
add
arpl
add
fwait
cld
nop
jmp
mov
jno
lods
push
add
repnz
jae
add
mov
jbe
inc
add
pop
add
clc
repnz
jae
je
std
fmull
testl
arpl
add
mov
nop
jae
lods
add
into
jno
adc
nop
jae
add
fwait
movsl
scas
add
push
add
add
clc
repnz
jae
scas
add
dec
add
pop
xchg
nop
add
push
clc
repnz
jae
add
mov
clc
repnz
jae
add
mov
enter
cld
nop
jmp
loop
add
scas
push
add
push
add
out
jne
clc
repnz
jae
add
mov
inc
cmp
mov
xchg
ret
push
add
fcmove
call
clc
repnz
jae
dec
mov
leave
nop
add
cs
clc
repnz
jae
xor
add
xor
clc
repnz
jae
add
add
movsb
rolb
add
add
clc
repnz
jae
fildl
sahf
add
mov
mov
mov
clc
repnz
jae
add
mov
add
push
mov
xchg
ret
fwait
add
add
testb
mov
clc
repnz
jae
add
add
arpl
xor
clc
repnz
jae
add
es
nop
jmp
arpl
fwait
add
testl
fwait
cld
nop
jmp
jmp
jno
xor
test
push
mov
xchg
ret
stos
sahf
add
add
fdivp
inc
add
add
add
popf
xchg
int
mov
add
clc
repnz
jae
add
add
mov
roll
xchg
ret
movsl
movsb
cltd
mov
add
repnz
jae
add
xchg
pop
mov
clc
repnz
jae
or
add
movsl
movsb
push
add
je
clc
repnz
jae
add
jno
jne
fwait
cld
nop
jmp
out
cltd
jge
cld
sub
clc
repnz
jae
inc
fiaddl
add
mov
push
fwait
cld
nop
jmp
add
add
push
mov
in
add
sbb
mov
test
push
sbb
test
add
repnz
jae
mov
xor
lea
clc
repnz
jae
fstpt
xchg
pop
add
clc
repnz
jae
cltd
add
add
into
clc
repnz
jae
mov
stos
mov
add
add
nop
jae
out
add
mov
cld
nop
jmp
out
test
ficoml
add
fwait
cld
nop
jmp
xchg
rcrb
in
aad
add
add
or
test
inc
add
repnz
jae
mov
scas
lea
clc
repnz
jae
add
clc
repnz
jae
add
add
add
je
clc
repnz
jae
add
add
inc
add
add
jmp
xor
pop
mov
push
mov
xchg
ret
add
add
add
stc
add
push
mov
xchg
ret
add
je
add
jb
insl
ret
clc
repnz
jae
ret
add
sub
cld
nop
jmp
bound
or
add
xor
inc
sbb
sbb
add
add
xchg
add
add
repnz
jae
push
ret
enter
fwait
cld
nop
jmp
mov
ret
add
cwtl
pop
push
mov
xchg
ret
add
ret
add
int3
push
push
mov
xchg
ret
out
add
adc
add
lahf
pop
push
mov
xchg
ret
leave
mov
push
add
js
push
add
cld
nop
jmp
mov
add
das
add
clc
repnz
jae
add
add
mov
mov
fwait
cld
nop
jmp
jecxz
add
jno
jmp
cmpw
fwait
cld
nop
jmp
fucomi
mov
stos
push
cmpsl
inc
adc
clc
repnz
jae
fwait
mov
xor
jmp
xor
add
stos
fistpl
add
mov
clc
repnz
jae
std
add
add
add
cld
nop
jmp
std
jge
je
jno
add
mov
xor
push
mov
xchg
ret
mov
add
adc
and
dec
repz
add
add
mov
add
repnz
jae
add
xchg
outsl
sti
clc
repnz
jae
add
mov
jb
mov
insl
test
push
add
sub
scas
mov
clc
repnz
jae
mov
xor
fwait
cld
nop
jmp
scas
out
jecxz
add
add
fiadds
xchg
ret
add
add
add
int
ss
repnz
jae
xchg
jmp
add
sahf
push
clc
repnz
jae
jecxz
add
movsl
add
jmp
add
fwait
cld
nop
jmp
add
add
add
lods
mov
clc
repnz
jae
add
xchg
and
pusha
clc
repnz
jae
jno
add
arpl
add
in
jmp
add
jmp
dec
add
add
lods
add
pop
fwait
cld
nop
jmp
jno
je
add
and
clc
repnz
jae
mov
add
sahf
mov
fwait
cld
nop
jmp
add
add
pop
and
fwait
cld
nop
jmp
add
stos
aam
stc
cmp
push
mov
xchg
ret
adc
add
xchg
push
mov
xchg
ret
add
add
bound
mov
ret
clc
repnz
jae
test
scas
xor
test
sar
mov
push
mov
xchg
ret
add
cltd
mov
lret
call
clc
repnz
jae
movsb
es
dec
fwait
cld
nop
jmp
add
mov
add
push
mov
xchg
ret
add
add
leave
scas
es
clc
repnz
jae
movsl
data16
xorl
clc
repnz
jae
rolb
dec
push
mov
cmp
xchg
fiadds
mov
sub
repnz
jae
jge
arpl
out
add
rep
push
mov
xchg
ret
add
cmp
add
add
add
add
dec
add
add
mov
inc
add
mov
add
movsb
push
add
dec
push
mov
xchg
ret
add
ret
xor
data16
repnz
jae
add
sbb
or
repnz
jae
leave
out
movsl
ret
stos
stos
cmc
repnz
mov
je
clc
repnz
jae
mov
out
xchg
das
cmpl
fwait
cld
nop
jmp
add
push
movsl
stos
or
and
mov
add
inc
fwait
cld
nop
jmp
leave
add
add
add
add
push
clc
repnz
jae
add
add
xchg
xor
dec
add
fwait
cld
nop
jmp
jno
inc
jno
add
push
cmp
xor
add
clc
repnz
jae
add
cmpsb
add
subl
adc
add
mov
call
fwait
cld
nop
jmp
add
add
add
mov
add
add
clc
repnz
jae
inc
add
je
stos
push
clc
repnz
jae
add
push
stos
fistl
inc
add
clc
repnz
jae
out
add
rolb
pushl
push
mov
xchg
ret
add
add
add
sbb
repnz
jae
mov
add
ja
jmp
add
mov
add
add
dec
movsb
add
test
cmp
lcall
jae
out
std
jno
lods
mov
clc
repnz
jae
add
leave
cmpsl
or
cld
nop
jmp
ret
push
sbb
mov
ret
dec
or
repnz
jae
add
cltd
je
out
mov
clc
repnz
jae
or
jecxz
fwait
fwait
out
mov
dec
mov
fwait
cld
nop
jmp
mov
adc
xor
out
mov
push
mov
xchg
ret
add
xor
nop
jae
bound
add
jge
mov
fiaddl
nop
jae
add
fldt
daa
adc
add
repnz
jae
into
add
and
jno
test
xchg
add
pop
pop
add
mov
add
push
add
add
add
adc
repnz
jae
test
add
loop
add
dec
push
clc
repnz
jae
add
pop
inc
add
lea
fwait
cld
nop
jmp
fidivl
add
repnz
jae
add
inc
mov
add
cmp
xchg
add
clc
repnz
jae
ret
mov
test
fwait
cld
nop
jmp
add
dec
xor
repnz
jae
lods
movsl
mov
dec
add
clc
repnz
jae
cltd
add
add
push
mov
clc
repnz
jae
test
out
cltd
mov
clc
je
clc
repnz
jae
loop
add
add
push
push
mov
xchg
ret
add
ret
add
movsb
add
push
mov
xchg
ret
jecxz
mov
add
add
sbbl
add
add
add
xor
clc
repnz
jae
add
fwait
mov
push
mov
xchg
ret
mov
rol
movsl
out
leave
and
clc
repnz
jae
mov
movsl
add
add
popa
clc
repnz
jae
scas
add
add
add
add
mov
sub
clc
repnz
jae
mov
bound
pusha
clc
repnz
jae
add
jno
push
add
jb
jmp
add
nop
jae
push
mov
add
push
clc
repnz
jae
arpl
mov
xchg
or
repnz
jae
add
add
leave
lods
jge
lds
and
imul
nop
jae
add
int3
mov
fwait
cld
nop
jmp
add
add
add
jne
clc
repnz
jae
mov
add
add
fwait
cld
nop
jmp
jge
add
jno
add
ficompl
add
add
out
add
adc
add
add
sbb
xchg
faddl
xchg
ret
ret
xor
add
add
pop
popa
clc
repnz
jae
into
add
divl
mov
jmp
movsl
scas
add
add
sahf
add
push
fwait
cld
nop
jmp
add
test
add
int3
add
clc
repnz
jae
je
sarb
add
mov
clc
repnz
jae
add
add
mov
jns
mov
lea
add
ljmp
and
add
add
cmp
add
clc
repnz
jae
jmp
add
add
add
clc
repnz
jae
or
stos
arpl
repnz
jae
ret
add
arpl
es
add
jmp
test
loop
sbb
xchg
leave
fwait
cld
nop
jmp
jno
scas
leave
add
fwait
add
sti
add
clc
repnz
jae
add
loop
add
pop
mov
testl
fiadds
xchg
ret
add
add
add
mov
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
push
mov
fstpt
push
clc
repnz
jae
or
add
add
add
add
add
cmp
adc
out
repz
inc
jnp
add
add
repnz
jae
mov
mov
lret
nop
jmp
adc
movsl
push
adc
fwait
cld
nop
jmp
loop
add
add
add
mov
fmull
nop
jmp
arpl
mov
xchg
or
int
movb
repnz
jae
fwait
add
push
add
add
clc
repnz
jae
add
lods
movzwl
clc
repnz
jae
mov
add
scas
std
je
clc
repnz
jae
mov
ret
pop
adc
call
ror
inc
add
add
add
add
push
fwait
cld
nop
jmp
add
add
mov
popf
add
and
clc
repnz
jae
add
add
dec
or
cld
nop
jmp
add
add
push
clc
repnz
jae
popf
movsl
add
out
popa
clc
repnz
jae
add
out
stos
es
add
pop
clc
repnz
jae
add
jecxz
add
add
add
mov
jp
clc
repnz
jae
mov
or
add
add
add
add
test
push
mov
xchg
ret
add
push
jge
clc
repnz
jae
scas
add
add
add
jne
clc
repnz
jae
add
stos
movzwl
clc
repnz
jae
out
std
mov
sbb
clc
repnz
jae
xor
add
mov
clc
repnz
jae
inc
mov
mov
sahf
push
add
jne
clc
repnz
jae
add
repnz
jae
mov
sahf
add
inc
or
jne
mov
clc
repnz
jae
movsb
add
push
clc
repnz
jae
add
add
mov
add
add
repnz
jae
sbb
mov
add
add
dec
fwait
cld
nop
jmp
popf
add
add
add
stos
mov
nop
jae
mov
add
mov
fwait
cld
nop
jmp
je
mov
xor
add
lods
xchg
fwait
cld
nop
jmp
out
arpl
mov
scas
xor
es
add
fwait
cld
nop
jmp
lods
add
add
add
mov
cmp
ret
add
add
add
cs
clc
repnz
jae
sahf
lods
lods
in
add
test
repnz
jae
fwait
add
inc
add
adc
mov
push
mov
xchg
ret
add
mov
add
xor
push
inc
clc
repnz
jae
add
add
jle
add
add
add
arpl
add
movsb
inc
sbb
jae
jmp
movsb
mov
add
out
xor
fldl
xchg
ret
add
add
fisttpl
sub
jl
and
repnz
jae
out
mov
xor
clc
repnz
jae
add
mov
stc
jne
clc
repnz
jae
mov
mov
clc
repnz
jae
add
adc
push
push
mov
xchg
ret
loop
add
add
add
sahf
mov
fwait
cld
nop
jmp
jmp
add
mov
add
call
clc
repnz
jae
add
icebp
mov
mov
push
mov
xchg
ret
add
add
add
clc
repnz
jae
add
fiaddl
push
arpl
add
clc
repnz
jae
adc
fwait
mov
push
fwait
cld
nop
jmp
add
add
add
je
clc
repnz
jae
add
add
inc
or
add
repnz
jae
add
fcoml
mov
xchg
ret
push
fiaddl
add
jb
push
mov
xchg
ret
jno
adc
inc
add
mov
xchg
ret
add
stc
mov
clc
repnz
jae
push
add
add
mov
nop
jae
xor
je
lods
movsb
add
popl
clc
repnz
jae
out
add
add
sbbl
jae
add
add
or
nop
jae
out
add
add
mov
mov
push
clc
repnz
jae
add
add
add
clc
repnz
jae
std
mov
pop
push
fwait
cld
nop
jmp
cltd
add
movb
mov
xchg
shll
jns
jbe
clc
repnz
jae
add
jnp
icebp
fwait
cld
nop
jmp
add
add
add
add
mov
add
js
test
or
add
repnz
jae
add
xor
add
clc
repnz
jae
inc
add
mov
mov
xchg
ret
add
cmpl
cmpsl
cmc
inc
add
push
add
clc
repnz
jae
shlb
add
clc
repnz
jae
mov
add
adc
sbb
jo
clc
repnz
jae
push
into
xor
outsl
pop
clc
repnz
jae
add
push
fildl
xchg
add
mov
add
or
leave
sub
repnz
jae
add
add
adc
push
clc
repnz
jae
loop
add
add
mov
clc
repnz
jae
xor
cmp
mov
xchg
ret
rolb
movsl
add
std
inc
xchg
out
pop
fisttpl
nop
jae
mov
jno
jne
clc
repnz
jae
add
fnstsw
clc
repnz
jae
mov
mov
add
pushl
fwait
cld
nop
jmp
stos
push
mov
stos
jno
add
clc
repnz
jae
add
into
rolb
or
xchg
adc
add
add
loop
test
fwait
cld
nop
jmp
add
out
je
aas
push
push
mov
xchg
ret
add
add
inc
flds
xchg
ret
add
mov
mov
clc
repnz
jae
add
adc
add
repnz
jae
add
cltd
dec
add
sub
adc
repnz
jae
inc
jge
add
add
mov
fwait
cld
nop
jmp
ret
popf
add
inc
pop
rep
clc
repnz
jae
add
out
xor
push
stc
push
clc
repnz
jae
add
mov
lods
adc
push
clc
repnz
jae
scas
add
add
shr
clc
repnz
jae
std
add
add
aad
add
xchg
clc
repnz
jae
lods
bound
leave
sahf
ret
add
inc
push
lods
movb
add
add
jbe
mov
clc
repnz
jae
jno
fildl
mov
push
and
mov
ret
repnz
jae
add
add
mov
out
sub
clc
repnz
jae
add
sbb
lcall
push
add
test
add
add
cmp
push
mov
xchg
ret
add
mov
stc
clc
repnz
jae
mov
lods
jno
jge
movb
repnz
jae
adc
jmp
push
push
mov
xchg
ret
fwait
add
jno
add
cld
nop
jmp
add
ret
jecxz
add
pop
sbb
repnz
jae
je
mov
shrb
dec
cmp
repnz
jae
add
add
mov
sub
fwait
cld
nop
jmp
scas
add
add
add
fwait
cld
nop
jmp
sahf
add
add
add
repz
adc
add
add
jno
add
mov
clc
repnz
jae
add
sub
cmp
in
incl
add
inc
fiaddl
add
fwait
cld
nop
jmp
or
add
add
je
bound
mov
fwait
cld
nop
jmp
lods
leave
cltd
add
add
movsl
adc
add
inc
push
mov
xchg
ret
adc
add
push
cmp
loop
add
xchg
add
mov
clc
repnz
jae
add
add
lods
jno
add
lea
clc
repnz
jae
add
add
jno
fwait
cld
nop
jmp
add
add
bound
or
clc
repnz
jae
jmp
dec
add
fwait
cld
nop
jmp
stos
ret
lods
add
add
add
jp
idiv
repnz
jae
add
lods
decl
fwait
cld
nop
jmp
movsl
add
add
je
scas
pop
clc
repnz
jae
mov
jge
or
arpl
xchg
mov
clc
repnz
jae
add
cltd
add
nop
jae
add
push
add
mov
repnz
jae
add
out
arpl
add
add
push
add
je
fwait
cld
nop
jmp
std
cmpsb
add
clc
repnz
jae
dec
add
add
add
ret
hlt
add
add
fwait
cld
nop
jmp
add
add
movsl
push
jl
sbb
repnz
jae
xor
mov
add
inc
scas
push
clc
repnz
jae
into
add
loop
std
add
nop
jae
ret
push
jmp
adc
clc
repnz
jae
arpl
add
test
outsb
mov
fwait
cld
nop
jmp
add
add
cld
xor
clc
repnz
jae
add
adc
xor
in
add
fwait
cld
nop
jmp
add
cmpsb
add
xor
inc
add
add
add
out
push
add
cmpl
mov
add
bound
mov
nop
jae
adc
mov
jmp
add
clc
repnz
jae
out
add
mov
push
mov
xchg
ret
test
add
add
not
clc
repnz
jae
jmp
jmp
mov
arpl
mov
clc
repnz
jae
add
mov
aam
rolb
add
pop
jle
outsl
loopne
repnz
jae
add
dec
add
cltd
dec
push
clc
repnz
jae
mov
add
adc
into
add
clc
repnz
jae
mov
jno
fildl
mov
add
nop
add
mov
clc
repnz
jae
fildl
add
add
push
add
mov
add
add
repnz
jae
into
add
mov
clc
repnz
jae
add
imul
push
mov
xchg
ret
movsl
add
cltd
std
sahf
dec
inc
clc
repnz
jae
xchg
add
add
mov
pop
push
mov
xchg
ret
mov
cltd
lods
add
leave
pop
add
push
mov
xchg
ret
test
sbb
clc
repnz
jae
loop
arpl
mov
clc
repnz
jae
dec
dec
sahf
add
add
nop
jae
out
add
movsb
add
repnz
jae
add
jecxz
add
add
cli
clc
repnz
jae
add
out
mov
add
push
mov
xchg
ret
movsl
rorb
mov
add
mov
clc
repnz
jae
add
add
je
fwait
cld
nop
jmp
add
add
clc
repnz
jae
add
lock
mov
xchg
ret
rolb
arpl
add
sbb
add
stc
incl
push
add
loope
add
clc
repnz
jae
add
add
mov
scas
push
add
jae
movsb
leave
adc
add
push
and
jmp
add
std
add
adc
pop
fwait
cld
nop
jmp
add
add
or
add
lods
popa
clc
repnz
jae
lods
xchg
bound
add
or
popa
add
repnz
jae
add
add
out
jmp
ljmp
add
fwait
stos
sahf
cmp
mov
xchg
ret
scas
mov
add
jmp
mov
or
bound
xchg
inc
decb
lods
fldl
xchg
ret
add
add
jmp
pop
pop
fwait
cld
nop
jmp
add
add
jno
or
add
subl
push
mov
xchg
ret
add
add
repz
leave
dec
push
mov
xchg
ret
jno
add
aam
push
or
clc
repnz
jae
add
add
mov
push
mov
xchg
ret
out
add
insb
mov
push
mov
xchg
ret
xchg
add
fwait
cld
nop
jmp
loop
add
shl
mov
clc
repnz
jae
add
add
rdpmc
sar
nop
jae
popf
push
jmp
movsl
mov
add
clc
repnz
jae
xchg
add
fildl
mov
rep
push
mov
xchg
ret
add
add
jmp
dec
mov
fwait
cld
nop
jmp
or
movsl
add
add
push
push
clc
repnz
jae
add
leave
cltd
ficompl
and
fwait
cld
nop
jmp
sahf
jge
cltd
add
jmp
add
fwait
cld
nop
jmp
add
add
add
add
cltd
push
clc
repnz
jae
xor
mov
movsl
out
es
add
imul
clc
repnz
jae
add
add
clc
repnz
jae
movsl
add
je
xchg
and
mov
or
push
mov
xchg
ret
add
std
std
ret
mov
add
jg
clc
repnz
jae
dec
add
add
lods
fwait
cld
nop
jmp
test
add
stos
jecxz
jmp
movsb
add
xor
push
mov
xchg
ret
adc
mov
mov
push
mov
xchg
ret
add
movsb
push
jno
add
pop
xor
clc
repnz
jae
add
fildl
add
repnz
jae
push
into
add
fwait
add
repnz
jae
jecxz
add
movsl
into
add
push
clc
repnz
jae
add
push
add
xor
add
mov
xchg
ret
add
add
push
add
repnz
jae
stos
je
add
xor
and
add
push
mov
xchg
ret
add
dec
mov
fwait
cld
nop
jmp
or
movsl
loop
out
int3
mov
clc
repnz
jae
test
push
movsl
sub
ja
clc
repnz
jae
add
dec
or
clc
repnz
jae
jmp
push
mov
dec
rorl
push
clc
repnz
jae
jge
push
add
je
fwait
cld
nop
jmp
add
out
jno
xor
fwait
cld
nop
jmp
ret
add
cmpl
nop
jmp
movb
add
popa
ficoml
repnz
jae
add
ret
popf
add
mov
clc
repnz
jae
jno
arpl
add
push
mov
xchg
ret
lods
add
add
add
push
clc
repnz
jae
sahf
push
add
add
mov
data16
clc
repnz
jae
mov
loop
lods
mov
push
mov
xchg
ret
stos
add
push
clc
repnz
jae
add
loope
add
clc
repnz
jae
adc
sahf
push
jbe
shll
jl
jne
push
mov
xchg
ret
ret
out
add
out
rep
clc
repnz
jae
popf
sahf
add
adc
mov
and
clc
repnz
jae
out
movsl
add
ret
add
mov
jae
add
add
xchg
lret
cmp
clc
repnz
jae
stos
add
rorl
mov
fwait
cld
nop
jmp
mov
add
add
fwait
cld
nop
jmp
push
mov
scas
stos
ljmp
popl
add
bound
jmp
je
add
nop
jmp
xor
add
add
sbb
je
sub
add
add
add
mov
clc
repnz
jae
out
leave
adc
add
cld
nop
jmp
out
inc
lods
leave
add
ret
ficoms
mov
xchg
ret
es
add
add
add
adc
std
jmp
mov
loop
add
add
jl
push
mov
xchg
ret
add
inc
pop
mov
clc
repnz
jae
movsb
add
pop
clc
repnz
jae
jno
add
popf
add
cltd
add
push
mov
xchg
ret
stos
push
mov
jle
clc
repnz
jae
scas
add
out
arpl
fimuls
test
repnz
jae
mov
add
clc
repnz
jae
movsl
mov
add
aaa
mull
push
clc
repnz
jae
mov
arpl
add
dec
push
mov
xchg
ret
add
add
add
jmp
add
leave
adc
push
mov
xchg
ret
add
add
jge
int3
rep
fwait
cld
nop
jmp
test
out
push
je
add
nop
jae
push
rolb
add
inc
or
nop
jae
mov
add
mov
in
inc
add
out
add
push
clc
repnz
jae
add
out
add
add
mov
clc
repnz
jae
mov
out
add
inc
jb
clc
repnz
jae
out
add
add
clc
repnz
jae
add
add
addb
mov
fwait
cld
nop
jmp
repnz
jae
ret
stos
add
xor
decb
mov
adc
repnz
jae
movsl
push
add
adc
imul
jae
stos
mov
push
add
mov
fwait
cld
nop
jmp
add
add
add
in
fdivs
add
das
popa
mov
add
mov
mov
clc
repnz
jae
mov
add
icebp
clc
repnz
jae
add
add
arpl
std
test
sbb
mov
xchg
ret
add
jne
clc
repnz
jae
add
mov
out
pop
clc
repnz
jae
add
add
add
rolb
iret
pop
fwait
cld
nop
jmp
add
into
add
std
add
add
lret
push
fwait
cld
nop
jmp
mov
into
xor
stos
jne
clc
repnz
jae
add
adc
clc
repnz
jae
stos
add
add
out
jmp
add
test
add
push
add
imul
fwait
cld
nop
jmp
add
push
add
add
js
mov
nop
jae
jmp
jge
add
cmpl
fwait
cld
nop
jmp
mov
add
mov
loopne
inc
add
std
add
sbb
test
clc
repnz
jae
movsb
mov
dec
mov
push
mov
xchg
ret
add
stos
add
ficoms
mov
xchg
ret
add
add
inc
add
pop
xchg
jl
movb
mov
xchg
ret
dec
movsl
add
fcmovnu
test
fwait
cld
nop
jmp
stos
jecxz
test
test
add
add
repnz
jae
add
nop
jae
jno
add
test
add
loop
lahf
add
fwait
cld
nop
jmp
movsb
stos
push
mov
add
inc
jnp
dec
outsl
popa
fs
repnz
jae
add
add
mov
out
fwait
cld
nop
jmp
add
add
sahf
add
repnz
jae
add
xor
addb
add
repnz
jae
mov
push
mov
xchg
ret
add
cltd
ret
add
sarl
cld
nop
jmp
jno
jno
add
add
jmp
arpl
cltd
test
mov
mov
test
add
add
cmp
fwait
cld
nop
jmp
add
add
test
or
add
inc
add
add
mov
add
test
adc
add
clc
repnz
jae
jecxz
xchg
add
mov
nop
jmp
out
add
fildl
adc
inc
or
repnz
jae
add
xor
fwait
cld
nop
jmp
movsl
or
add
add
push
push
add
inc
pop
shr
clc
repnz
jae
add
add
add
out
mov
fwait
cld
nop
jmp
mov
add
add
mov
clc
repnz
jae
lods
bound
push
add
push
add
fwait
cld
nop
jmp
sbb
add
mov
xchg
ret
jmp
mov
out
mov
jl
push
clc
repnz
jae
add
add
subl
clc
repnz
jae
scas
stos
xor
stos
popa
in
mov
mov
clc
repnz
jae
add
mov
add
add
outsl
mov
push
mov
xchg
ret
movsb
stos
add
jmp
add
add
mov
inc
clc
repnz
jae
add
add
add
stos
clc
repnz
jae
jmp
dec
dec
jno
add
mov
push
mov
xchg
ret
fldt
push
add
repz
repnz
jae
out
dec
mov
add
xor
mov
ror
push
mov
xchg
ret
ret
je
adc
add
add
xchg
cmp
jae
scas
add
push
shrl
repnz
jae
add
add
sbb
outsb
mov
clc
repnz
jae
scas
add
add
mov
mov
nop
jae
add
pop
cmp
clc
repnz
jae
into
dec
xor
push
add
add
add
add
mov
add
fstl
mov
xchg
ret
add
add
mov
xor
add
mov
push
mov
xchg
ret
mov
in
push
push
mov
xchg
ret
mov
sbb
outsb
lea
clc
repnz
jae
ret
loop
add
fisubrl
mov
clc
repnz
jae
add
movsb
add
add
movzwl
clc
repnz
jae
xor
dec
add
add
clc
repnz
jae
jmp
movsl
arpl
mov
add
out
fidivs
clc
repnz
jae
add
mov
add
out
out
inc
push
add
aaa
inc
xor
add
mov
xchg
ret
xor
mov
nop
jae
fiaddl
sahf
movsb
adc
jno
xor
fwait
cld
nop
jmp
add
xchg
stos
clc
repnz
jae
jge
add
add
arpl
dec
cmp
push
mov
xchg
ret
jmp
arpl
add
or
pop
and
repnz
jae
fiaddl
add
scas
mov
add
repnz
jae
add
add
repnz
jae
dec
xchg
ret
add
add
sbb
cld
nop
jmp
add
add
add
add
add
fwait
cld
nop
jmp
add
stos
ret
movsl
scas
push
clc
repnz
jae
jno
add
cld
nop
jmp
add
add
ret
add
stos
xchg
cmp
jmp
adc
mov
add
shll
push
push
mov
xchg
ret
add
jae
push
clc
repnz
jae
add
bound
pop
and
clc
repnz
jae
arpl
add
adc
repnz
jae
add
add
je
ret
add
push
mov
xchg
ret
add
mov
stos
mov
fwait
cld
nop
jmp
push
add
ret
mov
pop
inc
push
mov
xchg
ret
std
mov
add
add
or
repnz
jae
xchg
adc
shlb
les
dec
mov
clc
repnz
jae
add
xor
inc
add
dec
movsb
arpl
cltd
test
add
add
repnz
jae
mov
lea
clc
repnz
jae
lods
mov
inc
add
jle
loop
push
mov
xchg
ret
mov
and
fisttpl
repnz
jae
popf
mov
mov
xchg
add
push
clc
repnz
jae
add
add
das
stos
push
mov
xchg
ret
arpl
scas
mov
js
repnz
jae
add
add
or
nop
jae
stos
add
add
mov
clc
repnz
jae
mov
and
test
fwait
cld
nop
jmp
jmp
jge
add
pop
clc
repnz
jae
add
rolb
leave
inc
test
mov
nop
jae
add
jno
add
repnz
jae
std
add
scas
add
jp
call
jno
inc
add
add
add
add
call
clc
repnz
jae
movsl
add
mov
dec
clc
repnz
jae
add
jmp
add
add
jae
mov
add
and
mov
repnz
jae
cltd
add
add
mov
add
clc
repnz
jae
out
add
add
fwait
stos
out
xchg
clc
repnz
jae
add
sahf
add
cmpl
fwait
cld
nop
jmp
jmp
stc
jmp
movsl
ret
add
loop
cltd
outsl
mov
clc
repnz
jae
movsb
add
xchg
jne
fwait
cld
nop
jmp
add
sahf
add
stos
fwait
jbe
xchg
add
jo
sbb
je
clc
repnz
jae
push
xor
jl
inc
xor
clc
repnz
jae
add
add
add
repnz
jae
jmp
add
mov
push
lcall
inc
add
xor
add
push
mov
xchg
ret
jno
add
add
jmp
clc
repnz
jae
add
add
inc
dec
add
adc
repnz
jae
add
loop
add
fcomps
repnz
jae
add
stos
add
je
clc
repnz
jae
add
imul
stc
jge
stos
test
fwait
jmp
add
jmp
inc
jmp
and
or
fwait
cld
nop
jmp
fiaddl
add
mov
iret
ss
add
add
insl
hlt
add
push
sub
movsb
add
add
icebp
jg
or
loopne
repz
or
mov
testb
add
rolb
in
cmp
sbb
add
mov
or
push
add
sti
mov
add
mov
in
jns
shll
xor
add
mov
and
mov
add
add
xor
xor
enter
jle
int
add
mov
add
scas
pop
inc
dec
xor
out
rolb
stos
mov
cmp
aas
aaa
mov
sub
adc
rcll
inc
add
loopne
mov
add
cmp
mov
lahf
scas
outsl
jmp
xchg
ret
add
mov
pop
mov
cmp
rolb
cmpsl
lds
or
add
sbbl
cs
add
pop
sbb
mov
icebp
fsincos
decl
add
push
sub
add
add
insl
xor
pop
scas
add
loopne
inc
jnp
sti
add
mov
or
mov
add
jns
add
pushf
pop
clc
test
movb
enter
sbb
stc
xchg
add
scas
jbe
xor
mov
jbe
in
push
dec
fnstenv
add
int
dec
pop
adc
lahf
mov
add
mov
jns
xchg
int
pop
push
add
mov
mov
add
je
rolb
xchg
sub
in
cmp
add
mov
mov
cmp
xchg
add
jge
add
jns
popf
pusha
add
xchg
mov
add
addb
add
add
push
add
jl
and
mov
dec
lcall
adc
arpl
add
add
stc
repz
push
addb
xor
add
xor
push
add
add
add
icebp
and
mov
dec
add
adcl
pop
sahf
mov
mov
add
jbe
push
int
into
xor
pop
jae
insb
pop
int3
adc
stc
add
mov
inc
arpl
jae
fstl
mov
add
pop
xor
push
add
add
repnz
add
inc
add
xchg
add
and
movb
sti
stos
into
add
and
lret
inc
xchg
add
dec
cwtl
lret
jnp
out
add
add
add
fwait
or
sub
fistl
add
mov
sbb
xor
test
clc
nop
add
les
add
loop
xlat
cmp
xchg
xchg
loopne
push
xchg
mov
cltd
inc
outsb
loop
fstps
jae
movsl
dec
xchg
add
sti
sahf
clc
jle
scas
push
add
xor
dec
data16
add
ljmp
lods
xlat
inc
fdivrs
adc
xchg
xor
jge
mov
mov
sub
inc
xchg
add
jb
cld
jg
hlt
add
push
loope
add
mov
ficoml
add
in
mov
sbb
call
add
add
and
jle
push
add
aaa
fisubs
stos
inc
sub
add
testb
add
in
inc
add
mov
add
jo
fwait
pop
xchg
clc
ret
or
mov
add
mov
sbb
fbld
push
imul
cs
ljmp
add
xchg
push
test
cmp
imul
test
push
out
ret
addb
movb
adc
loop
movsl
test
mov
sbb
sbb
inc
add
add
hlt
add
add
add
hlt
add
and
mov
pusha
add
fisubrs
adc
sbb
add
popa
test
hlt
add
cmp
add
add
aaa
rolb
dec
pop
hlt
add
rolb
inc
add
mov
aas
das
jae
add
push
add
add
shll
push
add
pop
stc
jg
in
dec
popa
ret
dec
push
lcall
mov
mov
mov
mov
xlat
lea
add
mov
mov
jp
hlt
add
in
cmp
dec
fisttpl
insb
lret
lods
and
mov
add
xchg
add
mov
inc
or
adc
mov
pop
xor
jnp
add
add
xchg
popa
fcmovnb
cmp
push
mov
cwtl
xchg
sbb
mov
sbb
imul
xchg
int
push
push
add
xor
cli
xchg
add
mov
outsl
mov
or
or
add
les
cmp
sahf
dec
shl
bound
mov
push
popf
and
adc
jle
add
add
jae
add
jns
xchg
xchg
insb
in
movb
out
add
pop
sub
xorl
add
push
mov
sub
idivl
add
ljmp
insb
fbld
pop
pop
popf
mov
or
aas
loopne
inc
add
addb
mov
mov
inc
mov
add
and
push
cli
data16
ret
mov
sti
cli
mov
add
arpl
cwtl
fistpl
dec
mov
add
mov
add
add
jmp
adc
mov
or
mov
add
les
pop
inc
add
cmpl
pop
rolb
cwtl
jg
int3
pop
test
fdivr
jno
add
lcall
jb
mov
add
add
and
aam
push
cs
repnz
add
add
push
pop
insl
int
add
inc
mov
add
mov
rolb
loopne
sub
xchg
add
add
mov
fwait
mov
cmp
add
add
insb
ret
les
scas
arpl
add
sbbl
mov
xchg
adc
cmp
jge
in
inc
add
add
jge
add
out
and
mov
out
test
lahf
mov
fcomps
ja
lcall
add
dec
mov
call
popa
mov
mov
add
mov
outsl
lods
xchg
add
add
sub
push
add
add
mov
incl
mov
push
andl
fsubl
jns
sti
push
lcall
xchg
adc
test
xor
movups
add
sbb
lock
add
add
pop
aaa
movsb
add
add
add
scas
dec
in
cld
stc
arpl
addr16
lahf
add
xor
jns
add
add
add
add
lds
add
add
dec
or
add
add
pop
xchg
pop
in
xchg
outsb
xchg
mov
nop
add
and
mov
testb
movb
addb
add
imul
add
dec
sti
clc
jne
fidivrs
pop
jb
cltd
outsl
pop
jbe
ja
pop
or
aas
pop
cmc
repz
add
add
aad
nop
add
sbb
jle
pop
mov
rolb
xor
add
add
sbb
dec
testb
data16
sti
add
mov
sub
pop
lock
addb
add
test
or
daa
jb
repnz
sub
scas
pop
clc
pusha
add
xchg
pop
stos
jb
movsb
add
int
push
addb
mov
mov
add
cmpsl
fiaddl
mov
cmpl
add
add
add
mov
mov
jns
lock
add
cld
xchg
add
pop
fldz
sub
incl
inc
add
cmp
jns
jb
fstpt
mov
add
mov
mov
mov
test
repz
push
add
add
addr16
mov
add
mov
add
test
ret
or
add
cmpsb
add
xor
leave
clc
sahf
xchg
addr16
add
push
sub
pushl
sbb
test
jb
loopne
in
cmpsb
add
pop
jmp
add
in
gs
add
loope
loopne
push
push
add
push
add
mov
pop
pop
lock
ja
movb
dec
inc
xor
add
pop
mov
cmp
push
jnp
jns
jl
fnstcw
add
cmp
aaa
dec
xchg
add
add
loop
scas
pop
cmp
add
mov
test
pop
je
iret
push
add
sbb
add
add
sub
push
movsb
add
mov
add
add
scas
mov
imul
mov
dec
jecxz
mov
loopne
xchg
fnsave
insl
inc
add
add
cmp
orl
jne
add
scas
in
mov
adc
mov
add
stc
jbe
or
add
addr16
add
mov
add
cmp
or
add
je
xlat
ja
add
add
add
sub
call
inc
add
push
fmull
jae
rolb
add
xor
sub
push
add
int3
stos
jns
imul
dec
mov
sub
push
add
xlat
dec
sbb
jle
add
add
out
mov
sub
or
insb
inc
add
lret
jl
imul
add
cli
adc
xor
jae
sub
xchg
out
mov
sbb
and
mov
cld
movsb
add
mov
jns
add
add
sbb
popf
jnp
jge
aas
into
mov
xchg
cmpsb
add
adc
in
pop
out
sub
mov
push
xor
aam
jo
xchg
int
sbb
ss
xor
data16
pop
icebp
into
push
mov
push
pop
loopne
push
add
add
nop
add
lret
inc
add
add
or
add
add
pop
sbb
dec
and
cld
movb
add
add
in
add
mov
sti
sti
pop
lods
out
push
add
add
popf
jb,pt
mov
add
add
addb
add
jnp
stc
mov
add
push
rolb
repnz
add
add
testb
add
leave
stc
outsb
cmc
pop
sub
mov
sbb
pop
int3
gs
mov
add
dec
sahf
sbb
lret
add
add
add
mov
movsl
into
leave
push
add
cld
sahf
sub
movsl
pop
clc
sbb
out
and
mov
or
add
hlt
add
mov
add
add
add
add
shl
add
pop
rolb
mov
call
add
add
pop
push
add
into
xor
ret
cs
test
or
sbb
add
rolb
shll
add
mov
fidivrl
mov
or
add
fwait
cmp
fnstcw
mov
add
pop
cmpsb
add
xchg
mov
loope
jecxz
add
push
paddsw
in
jns
sub
add
add
add
mov
add
xchg
add
xor
add
lahf
pushf
xchg
add
out
cmpsb
add
leave
pop
pop
rolb
jle
add
mov
int3
addb
popf
push
cmc
pop
ja
cwtl
das
in
pop
fdivs
decl
add
movb
rol
jle
arpl
ljmp
add
add
mov
mov
add
push
xor
xor
add
cmpl
inc
add
dec
and
mov
add
push
mov
dec
nop
add
das
xchg
add
insb
pop
inc
add
add
jecxz
jne
xchg
push
add
pop
loop
or
cmp
pop
pop
lea
pop
mov
cmp
add
inc
push
lret
adc
mov
icebp
adc
push
jg
stos
jecxz
jae
mov
faddl
add
loope
sbb
mov
inc
add
push
mov
push
subl
int
xchg
add
aam
add
dec
scas
and
call
adc
pshufw
fstpl
pop
gs
sbb
add
jb
mov
les
lret
loop
popa
jge
or
test
xlat
push
add
out
cmpsl
xchg
jg
daa
ja
add
inc
add
js
add
push
add
push
loope
hlt
add
mov
sbb
addr16
add
jno
outsb
cmp
ud1
aas
ss
add
cmp
xchg
add
sbb
cmp
push
int3
std
add
mov
neg
and
mov
aad
sbb
push
or
add
jo
add
aam
out
push
add
jb
mov
je
popa
paddd
add
adc
mov
inc
lock
cwtl
or
add
lods
dec
push
add
dec
out
addb
add
dec
adc
lret
add
mov
add
xchg
data16
inc
add
fldt
and
xchg
lock
adc
xchg
and
in
repnz
jo
lods
call
and
xchg
sahf
and
aad
add
or
add
js
sti
rorl
add
add
mov
pop
ja
mov
loopne
arpl
pushf
in
add
ret
out
lods
lea
inc
add
ret
dec
ret
mov
loopne
jge
add
add
push
add
mov
cld
mov
add
inc
jae
add
sbb
cld
add
mov
mov
sub
xor
hlt
add
sti
inc
add
fsubl
push
add
xchg
add
add
mov
mov
ja
add
addb
add
xchg
data16
adc
mov
dec
test
in
addr16
add
xchg
add
adc
popa
mov
jmp
add
je
fdivrl
and
mov
mov
add
js
lock
xchg
push
add
xor
lahf
or
mov
xchg
rcrl
cld
mov
loop
sbb
mov
outsl
addb
out
loop
pop
xor
mov
add
add
inc
add
xlat
push
add
mov
add
add
add
imul
lds
add
sbbl
cmc
push
mov
sbb
add
sub
add
fldt
add
mov
push
add
in
outsb
out
outsl
push
xchg
decl
xchg
dec
xor
rcl
stos
jmp
popa
dec
jae
push
xchg
popa
in
xor
add
mov
orl
and
xchg
lods
dec
lds
or
pop
dec
imul
add
popa
sbb
or
dec
aad
out
addb
add
xor
testb
add
mov
add
add
lret
rol
add
add
add
xchg
push
add
sub
les
insl
push
jno
or
pop
cwtl
es
jecxz
loopne
add
add
leave
inc
gs
add
add
jae
popf
stos
outsl
pop
inc
add
out
xor
loopne
sbb
loope
fstl
repnz
add
imul
add
imul
xchg
add
mov
xchg
loope
bound
mov
scas
icebp
push
add
xchg
add
sub
push
add
sub
add
ret
add
dec
insb
in
and
mov
add
add
add
add
jmp
add
add
fbld
pop
cmp
add
pop
add
mov
add
insb
scas
push
add
add
xlat
pop
outsb
dec
mov
ja
mov
pushf
call
add
push
rcrl
sbb
popf
aas
in
jbe
pusha
add
out
bound
mov
jnp
add
add
mov
cwtl
inc
dec
cmc
add
sub
add
or
add
add
add
push
fbstp
add
add
movsl
adcl
fnstenv
mov
inc
add
jmp
pop
call
xor
les
aam
sbb
add
inc
add
adc
mov
in
sbb
pop
int3
out
mov
pop
rolb
add
fsubl
add
add
add
lods
jb
add
stc
test
sub
or
outsl
jbe
or
testb
adc
lret
leave
lret
xor
ret
add
clc
sarl
addb
sub
nop
add
pop
or
jmp
add
lret
mov
das
rolb
add
faddl
fwait
or
dec
fistl
pusha
add
fstpl
mov
pop
out
imul
cmc
push
add
add
addb
add
add
mov
sbb
leave
sbb
add
inc
add
ret
add
add
jg
add
nop
add
mov
dec
or
mov
push
add
add
inc
add
cs
clc
iret
mov
cwtl
xor
movsl
add
add
dec
and
or
cld
xchg
add
push
add
mov
out
add
mov
add
adc
xor
dec
lcall
mov
inc
add
add
sub
mov
pop
lcall
add
es
aam
insb
sub
daa
cmp
add
iret
in
add
add
repnz
add
cltd
pop
fwait
pop
icebp
int
add
pusha
add
add
fidivl
mov
leave
push
int3
ja
shll
add
into
out
push
and
xor
mov
imul
push
mov
and
mov
jmp
sub
ja
pusha
add
testb
mov
das
loop
movsb
add
cmp
push
add
mov
mov
pop
mov
sub
add
add
or
add
jl
add
add
mov
xor
loop
mov
add
test
push
sub
aas
xchg
add
repz
jl
nop
add
add
mov
movsl
scas
ss
push
mov
addb
add
outsl
shrl
lret
mov
add
mov
add
add
mov
add
movl
sbb
pop
fnstsw
sbb
add
or
xchg
add
add
lds
movsb
add
cmp
add
je
cltd
pop
mov
add
add
cmp
add
mov
or
xor
in
icebp
push
add
jp
add
cmc
mov
lret
sarl
sbb
dec
sti
pop
dec
xchg
fildl
mov
add
add
add
jge
add
add
jb
cli
inc
add
bound
mov
stc
mov
lods
sbb
pop
sbb
or
out
lahf
jle
mov
insb
xchg
mov
or
add
push
add
mov
stos
add
scas
jbe
bound
mov
fcom
add
jno
decl
xchg
imull
mov
mov
add
add
add
add
mov
stc
sahf
add
mov
add
mov
sub
enter
pop
cmp
mov
push
cmp
fcompl
popf
gs
loop
test
or
sub
sub
add
add
ljmp
movsl
xchg
and
fcompl
pusha
add
add
add
add
add
xchg
add
inc
add
mov
add
inc
inc
jno
fidivrl
incl
dec
push
add
add
add
add
push
add
scas
ret
dec
sahf
repnz
cmp
add
push
add
rcrl
mov
ror
add
jne
pop
dec
push
add
sub
pop
jns
add
sahf
popl
xor
mov
add
test
lock
add
loop
iret
loopne
hlt
add
add
add
sahf
pop
scas
push
mov
add
pushf
and
add
mov
movsl
sahf
sub
pop
and
ucomiss
push
add
clc
hlt
add
aam
ja
int3
cld
roll
add
pushf
jne
jae
inc
add
sbb
add
push
xor
xchg
sbb
mov
call
add
mov
pop
xchg
add
xor
mov
flds
mov
sub
mov
aas
mov
icebp
add
mov
mov
mov
push
add
dec
adc
pop
fildl
xlat
pop
push
xor
push
addb
push
imul
add
sbb
jle
sub
pop
mov
or
jnp
add
mov
xor
or
pop
fstps
scas
aam
sbb
add
add
add
mov
outsb
mov
add
sub
add
add
pop
cwtl
nop
add
out
std
xor
mov
in
data16
mov
sbb
jnp
cltd
insb
sbb
inc
add
add
sahf
inc
add
cli
xchg
push
mov
je
xchg
outsl
dec
sbb
mov
insl
mov
jne
mov
fnstsw
scas
mov
add
add
les
add
add
add
xchg
add
fwait
mov
lret
mov
add
test
cmp
sub
and
mov
sub
adc
add
xchg
add
out
jl
add
popa
movsl
or
movsl
insl
loope
add
inc
mov
and
xchg
add
add
mov
xchg
pushf
push
add
jae
add
das
push
add
add
add
aas
dec
xchg
add
jae
add
je
xor
jne
inc
add
add
mov
jns
push
jmp
testl
in
pop
jle
mov
mov
std
mov
add
loope
or
fdivrl
add
add
ja
aad
add
sub
fimull
cmp
jle
add
push
add
add
push
scas
jo
pop
jecxz
hlt
add
jae
add
insl
pop
dec
stos
jle
jbe
fwait
popa
pop
mov
cmp
add
add
pop
aad
jg
add
adc
add
cmp
lock
sti
or
add
add
mov
mov
imul
add
adc
mov
ret
out
enter
dec
fsubs
add
ret
or
add
rolb
rep
cli
add
int
mov
fistl
add
jl
aam
add
sbb
inc
add
movsl
aaa
jecxz
add
inc
dec
cmp
add
push
repz
mov
add
add
insb
iret
jle
xor
pop
jecxz
mov
add
mov
daa
or
inc
add
mov
jne
jne
or
pop
xchg
add
cmpsb
add
fmull
sbb
repnz
in
jne
dec
jno
push
popa
dec
rolb
je
fcmovnb
add
mov
rolb
in
pandn
das
rolb
add
add
add
hlt
add
add
push
jo
or
add
lcall
int
ret
mov
dec
dec
stos
mov
aad
fisubrs
lods
cmc
push
xor
ja
add
in
mov
cld
arpl
aam
mul
and
sub
shll
addb
add
bound
mov
xchg
hlt
add
addr16
roll
add
xor
data16
mov
pmaxub
bound
mov
test
mov
icebp
jp
add
mov
out
add
add
pushf
add
jle
add
sub
push
add
scas
ljmp
mov
add
cmp
add
add
add
mov
add
stos
mov
xchg
add
mov
jmp
nop
add
mov
xor
cmp
add
add
push
les
pop
xor
jnp
add
add
int3
xor
mov
clc
mov
pop
lds
add
js
add
movb
fsubp
add
dec
push
pop
and
or
pushf
outsl
and
mov
inc
jae
add
xor
out
mov
mov
movsl
imul
stc
stos
movb
add
mov
dec
cmp
adc
mov
add
inc
xor
jb
mov
add
sub
or
add
add
add
xor
icebp
ret
rolb
test
push
test
add
outsb
inc
add
xchg
sbb
or
aam
aas
sbb
cmp
lds
mov
add
testl
cld
xchg
pop
rolb
scas
sarl
dec
in
push
das
cli
inc
add
jno
cmovp
movsl
inc
add
add
cltd
ret
js
add
stc
push
add
jle
mov
add
bound
mov
add
add
dec
mov
ja
lea
jp
cmpsl
movsb
add
aad
jae
or
dec
mov
sbb
mov
add
out
mov
and
int
test
add
add
outsb
imull
add
cmp
add
cmp
xchg
stos
xchg
add
mov
push
add
push
add
inc
add
aad
push
add
add
and
add
cwtl
push
jg
add
add
add
fsts
mov
xlat
xor
mov
mov
testl
add
xor
pusha
add
pop
and
sbb
jle
cmp
adc
push
add
mull
add
mov
dec
imul
outsb
pop
add
adc
aaa
stc
cmpsl
aam
pop
xchg
add
mov
rolb
in
gs
loop
inc
add
dec
es
std
xor
mov
pusha
add
pop
rolb
addb
add
cmp
ret
sub
cs
xchg
xchg
in
lds
mov
ljmp
add
data16
inc
inc
add
pusha
add
pushf
or
adc
jecxz
fdivp
add
pop
rolb
clc
pop
mov
pop
mov
add
xchg
clc
rolb
mov
push
fidivs
add
add
add
cmc
add
mov
dec
add
and
add
dec
sbb
or
xor
adc
iret
cli
or
cmc
inc
and
mov
add
int
add
pop
fadds
sahf
push
add
add
mov
lret
subl
andl
add
add
push
cmc
pop
adc
push
add
push
add
andl
stos
lock
mov
movsb
add
fwait
xor
add
mov
add
add
testb
lahf
clc
data16
sub
add
movsb
add
iret
and
mov
rolb
sbb
add
mov
add
add
push
mov
adc
std
mov
int
add
dec
xor
adc
dec
dec
mov
add
out
add
mov
sub
pusha
add
outsl
insb
stc
fwait
push
push
add
ljmp
mov
add
mov
xor
mov
lret
push
sub
repnz
jb
xor
add
add
mov
xchg
in
movb
fucomi
ret
xchg
add
insb
or
jge
jne
add
mov
adc
adc
cmpsb
add
add
ja
add
repz
sub
pop
push
mov
jmp
sbb
add
jns
add
aad
add
mov
iret
sbb
or
fstpl
test
mov
test
push
add
sub
in
imul
aas
and
mov
mov
cmp
mov
mov
out
les
push
gs
jnp
pop
shr
inc
add
dec
stos
outsl
orl
loope
add
push
add
add
loop
rol
add
jnp
fisttpll
mov
lret
mov
add
data16
mov
clc
sub
test
leave
xor
mov
mov
pop
repz
add
lods
adcl
es
rolb
in
mov
mov
icebp
scas
push
add
add
popf
jl
pop
cmp
cmp
sub
leave
enter
cwtl
mov
mov
add
mov
sub
fstpl
xchg
rolb
lods
jle
gs
mov
mov
add
add
fdivrs
add
add
add
mov
rolb
lahf
movsl
sti
mov
sub
jmp
dec
in
in
dec
xor
mov
popa
test
aad
mov
add
xchg
jnp
std
int3
pop
and
cli
pop
popf
xchg
add
cmp
dec
les
roll
add
pop
cmpsb
add
add
cmpl
add
push
add
add
outsb
sbb
iret
adc
mov
add
sub
mov
adc
scas
adc
dec
push
add
push
add
cmpsl
js
xchg
shrl
out
xor
repz
xchg
mov
push
inc
add
xor
add
add
add
lret
mov
sbb
add
add
ss
add
imul
movsl
fldcw
movb
add
repnz
addr16
add
add
jg
push
cld
iret
sarl
adc
or
sub
mov
pop
sbb
lds
add
mov
add
add
add
add
mov
rolb
rolb
or
or
add
add
add
cs
imul
shl
popa
xor
jp
scas
add
sti
mov
sarl
aam
xchg
push
rolb
add
add
add
add
add
ret
mov
lcall
data16
cmp
inc
add
push
add
shll
mov
ret
jmp
jae
lea
rcrl
aam
jne
sub
cmpsb
add
enter
add
add
pop
dec
pop
in
mov
negl
xchg
ss
sti
jle
mov
push
in
add
mov
ja,pn
ljmp
add
mov
shll
add
mov
jnp
mov
pop
scas
ret
push
add
add
inc
dec
or
and
xor
inc
add
jno
add
test
jecxz
in
push
add
and
mov
and
call
movl
fldenv
and
aas
sbb
aaa
mov
out
jl
add
adc
test
fnstsw
and
mov
movsb
add
popf
mov
fs
fucomip
jl
inc
fimull
cmp
jae
dec
cmp
mov
add
dec
mov
push
add
mov
or
sbb
gs
add
and
mov
fadd
arpl
gs
xchg
add
mov
lock
push
test
cwtl
push
add
sub
testb
add
add
cltd
imul
add
hlt
add
mov
adc
das
push
add
mov
call
icebp
dec
movsl
dec
js
xchg
add
mull
mov
add
incl
push
mov
xchg
add
xchg
movb
jle
add
testb
bound
mov
add
mov
add
lock
add
cmp
inc
lret
notl
fistl
add
jae
je
movsl
rolb
xchg
outsl
and
mov
add
dec
mov
add
cmp
div
sbb
xor
mov
push
scas
ja
pop
inc
add
add
in
and
repz
add
outsl
add
push
inc
add
lret
or
xchg
add
into
out
faddl
imul
mov
std
movsl
sti
pusha
add
and
in
addb
add
pop
jp
add
pop
addr16
je
rolb
add
cmp
push
add
outsb
sahf
sub
or
scas
ljmp
mov
push
add
js
inc
add
inc
insb
pop
dec
enter
xor
or
mov
add
mov
xor
xlat
lock
add
fs
add
enter
add
bound
mov
add
in
adc
insb
enter
add
sbb
test
fwait
ja
adc
mov
add
testb
cwtl
dec
xlat
add
andl
add
add
das
test
add
out
addr16
jae
mov
cmp
dec
mov
add
imul
sbb
or
sub
loopne
loopne
aad
addb
add
jno
mov
addb
add
std
enter
add
push
cmpsl
sar
or
add
fwait
rolb
jle
add
bndstx
add
or
addb
add
xchg
jae
js
mov
add
xchg
or
add
add
push
int
pop
add
mov
ret
sbb
dec
dec
ret
out
mov
or
in
mov
add
mov
add
mov
and
add
add
sahf
arpl
mov
addr16
add
ljmp
loope
add
js
in
adc
stos
jnp
xor
lret
jmp
add
dec
addb
inc
add
iret
leave
int
repnz
stc
repnz
lock
lods
sbb
add
pushf
jecxz
inc
add
fnstenv
add
jge
add
sub
dec
pop
popf
cmp
mov
add
add
pusha
add
inc
add
mov
sub
inc
add
mov
data16
add
add
add
mov
add
add
pop
test
sub
cmpsl
adc
mov
mov
add
add
push
add
pop
mov
add
pop
data16
adc
sbb
push
add
pop
jno
add
mov
or
or
pop
ds
pop
xchg
in
push
add
add
repnz
add
xlat
dec
cli
mov
dec
imul
mull
add
outsb
inc
add
add
out
jge
dec
pop
mov
pop
pop
fstpl
add
out
in
data16
cld
xchg
add
fidivl
insl
scas
pushf
mov
jmp
cmp
add
pop
popa
cli
aam
ret
jle
call
mov
add
add
std
pop
mov
cmp
add
clc
jnp
lret
cmpsb
add
mov
push
add
add
mov
add
pushf
ret
loope
xchg
das
sub
add
add
jp
pop
pop
or
add
loop
jno
xor
pushf
sti
cs
clc
cmp
mov
out
push
xchg
mov
movsb
add
adc
psubusw
add
jo
fldt
lods
add
mov
mov
add
add
and
pop
inc
add
jno
mov
xchg
add
popa
sub
popa
pop
adc
outsb
xchg
add
out
lock
inc
add
mov
add
mov
xor
les
xor
push
add
pshufw
dec
mov
sbb
bound
mov
add
add
mov
in
sbb
add
jo
or
add
mov
enter
add
out
sbb
mov
mov
jecxz
add
add
mov
cmp
add
mov
cmp
sbb
mov
aam
loope
enter
add
pop
lea
jns
and
add
addb
add
jae
push
add
xor
add
adc
mov
enter
add
push
sub
repz
mov
add
lods
mov
enter
loopne
sbb
in
test
add
insb
mov
movsl
sbb
scas
cwtl
fildll
lods
loopne
jmp
sti
mov
lods
mov
pushf
cmp
pop
pop
push
and
loope
mov
add
xor
add
rcl
add
ja
add
mov
sub
jle
add
les
sbb
in
nop
add
sub
lods
or
add
add
sub
add
nop
add
add
out
add
mov
mov
lahf
lret
mov
mov
add
popa
iret
mov
sub
sahf
daa
in
cmp
push
add
lods
mov
cmp
mov
inc
cmp
push
add
add
and
xchg
adc
xchg
sti
int3
movb
add
xchg
inc
add
fwait
test
icebp
pop
aad
repnz
mov
or
jno
mov
sti
sbb
mov
add
test
stos
sbb
cwtl
lock
mov
inc
add
add
in
push
sub
jge
outsb
jo
pop
cmp
cli
cmp
mov
sysret
xor
inc
mov
mov
mov
pop
cld
add
mov
push
add
jmp
ficomps
rolb
mov
add
sub
lret
or
add
fsub
add
out
fwait
mov
addr16
test
addb
adc
push
fwait
sti
sar
add
pop
pushf
loop
mov
or
mov
add
bound
mov
adc
pop
cmp
jns
mov
xchg
jge
add
add
cmp
pop
mov
leave
or
mov
inc
add
add
xor
mov
push
add
pop
xchg
outsb
daa
xchg
add
or
mov
push
add
sub
dec
cmp
push
add
mov
add
pop
inc
shll
add
testb
cld
push
add
push
movsl
jo
out
rolb
dec
jns
xchg
add
add
lret
add
add
clc
xor
or
add
fidivrs
mov
xchg
mov
mov
add
add
add
jb
iret
loop
sbbl
aad
add
outsb
inc
shrl
fneni(8087
add
gs
shr
push
add
fdivl
xchg
mov
add
in
stos
mov
push
xor
xchg
add
rolb
add
add
subl
add
stos
dec
add
mov
dec
ds
and
sbb
and
add
cmp
imul
xor
xor
rolb
xchg
ja
mov
data16
mov
sti
je
aaa
movsl
in
insl
mov
jmp
add
pop
sbb
add
or
dec
pop
mov
add
push
add
int3
sti
pop
cmp
cmp
add
sbb
inc
pop
cld
and
mov
add
incb
mov
add
mov
call
add
mov
add
insb
je
mov
and
ficoms
add
add
dec
test
mov
insl
dec
cmp
add
rolb
iret
lret
lcall
mov
in
add
rolb
sbb
int
xor
add
and
jb
add
xor
or
mov
sub
out
add
add
adcl
nop
add
add
mov
add
adc
inc
add
jns
add
mov
add
outsb
adc
aad
push
shll
add
xchg
add
mov
lret
fwait
jmp
int
inc
out
inc
jne
mov
aas
enter
add
mov
xor
addb
js
ret
add
leave
movb
add
push
add
sbb
rolb
add
das
sbb
sbb
test
sbb
add
jae
add
lods
cmc
add
mov
inc
push
add
cmc
cmp
das
pop
pop
xor
stos
enter
add
add
sbb
add
jns
add
pusha
add
add
mov
testb
add
add
mov
add
push
add
mov
pop
dec
and
mov
xchg
push
add
adc
nop
add
xchg
loop
mov
xor
rolb
jns
push
add
add
and
mov
sub
ds
lret
loopne
repnz
movsb
add
add
lret
dec
xor
add
ret
mov
jmp
test
adcl
add
jbe
push
gs
adc
ret
adc
int3
jno
add
mov
imul
add
cmpsb
add
add
add
add
roll
rolb
push
pop
or
add
mov
xor
in
xchg
mov
mov
aaa
scas
jae
mov
inc
fists
add
cltd
xlat
sbb
sub
push
call
jbe
add
mov
jg
inc
lret
inc
add
add
add
data16
sub
xchg
add
movsb
add
fisubrl
cmp
ret
push
hlt
add
in
mov
add
add
movsb
add
inc
jmp
add
cs
std
lods
add
mov
mov
mov
add
xlat
sbb
lahf
adc
cmp
sbb
inc
push
or
call
add
pop
adc
add
add
add
mov
scas
or
mov
sub
pop
popa
add
mov
addb
inc
add
add
jne
rcrl
or
sbb
xchg
pop
imul
add
outsb
sub
cltd
into
inc
add
add
add
add
sub
adc
xchg
add
loopne
cmp
insl
xchg
cli
daa
lods
clc
gs
xchg
sbb
lea
push
and
mov
xchg
xchg
cwtl
mov
imul
pop
mov
add
je,pt
dec
push
mov
push
xchg
sbb
clc
inc
add
out
movb
inc
jecxz
scas
mov
mov
xchg
add
inc
dec
cmp
mov
pop
fstps
leave
ja
pushf
hlt
add
cld
cmp
repz
addl
std
stos
movsb
add
out
addb
add
addr16
hlt
add
or
les
mov
repnz
add
ficoml
push
add
mov
add
xor
mov
cmp
cmc
adc
popf
ret
mov
xor
and
mov
add
mov
cltd
cli
dec
xchg
add
jbe
flds
clc
and
cmp
add
add
and
cmc
jg
mov
add
jp
mov
outsl
idivl
lods
dec
addb
mov
cmp
pushf
clc
add
jecxz
sbb
add
frstor
add
inc
stc
sbb
jbe
jne
sahf
and
dec
aam
xchg
add
aam
and
and
mov
add
decl
repnz
sti
aam
cltd
add
add
or
loope
lea
add
sbb
test
add
or
mov
xchg
jle
pop
add
mov
xchg
xor
cwtl
xor
add
push
or
dec
repz
mov
fidivs
xchg
jns
xor
jbe
xchg
add
and
mov
add
outsl
mov
addb
push
stc
add
mov
jnp
pop
rcr
dec
mov
stos
cli
and
addb
fistl
inc
add
pop
les
imul
add
add
mov
or
xchg
add
pop
xlat
test
into
ljmp
repnz
mov
and
push
add
add
add
add
filds
mov
paddd
adc
ret
sahf
mov
movb
ja
add
arpl
add
add
add
jbe
loop
jmp
add
or
jo
pushf
xor
sub
or
add
adc
push
jmp
add
in
inc
add
int
push
add
inc
add
mov
pushf
push
jne
dec
xchg
call
add
inc
cmp
outsl
or
jbe
out
dec
aas
adc
repz
sbb
mov
and
mov
add
testb
push
add
jmp
cmp
in
aam
ret
add
pusha
add
mov
outsb
jg
add
add
add
mov
sbb
mov
add
bound
mov
dec
xor
sbb
jge
add
mov
int
add
movb
xchg
xlat
inc
test
cmp
cwtl
push
pop
fldenv
add
mov
mov
stos
adc
in
into
mov
xor
je
mov
jbe
jmp
clc
orl
add
leave
into
std
sti
fisubl
add
add
xor
add
inc
add
adc
adc
rolb
push
jns
repnz
add
nop
add
lret
add
les
rolb
inc
mov
add
test
add
popf
and
hlt
add
clc
imul
js
sti
inc
stos
jbe
aam
icebp
inc
push
push
add
lret
dec
sbb
into
shrl
xlat
je
sub
xor
inc
add
dec
std
pop
xor
mov
add
mov
mov
mov
add
mov
xor
loop
or
add
and
daa
cwtl
xchg
xlat
cltd
pop
ret
mov
fildl
addr16
add
add
add
mov
xor
gs
inc
ret
add
mov
add
add
push
add
jae
mov
or
add
add
add
mov
xchg
add
add
adc
stos
pushf
js
add
inc
add
add
or
sub
add
js
cmpsl
out
add
jns
mov
add
mov
jl
pminsw
fldenv
in
push
add
fcoms
fs
add
and
iret
push
add
arpl
jge
pop
adc
pusha
add
sbb
add
mov
add
add
dec
daa
sub
jns
add
int
popf
add
push
sbb
mov
mov
lcall
or
add
mov
sub
rcrl
ja
cmp
testl
mov
add
push
xor
ds
movb
mov
jo
jmp
movb
jnp
push
dec
mov
add
aad
add
push
insl
daa
addb
into
int
add
arpl
add
xlat
jbe
sub
add
add
dec
and
mov
mov
mov
mov
out
pop
mov
mov
cmc
out
mov
test
daa
gs
inc
sub
add
add
xor
adc
add
add
fmull
xchg
xor
sbb
add
xchg
or
arpl
xor
ds
flds
add
pop
insl
in
sub
lret
sub
jnp
add
adc
mov
popf
dec
add
add
in
fcomps
mov
dec
mov
rolb
mov
les
aas
in
hlt
add
aam
pop
and
mov
lea
add
add
iret
mov
arpl
sbb
sahf
hlt
add
add
or
orl
add
mov
mov
fucom
cmc
xchg
sub
movsb
add
xchg
add
push
add
pop
jge
inc
std
outsb
outsl
inc
movsb
add
add
add
pop
mov
add
push
add
xchg
cmpsb
add
add
pop
hlt
add
add
adc
pop
loop
inc
add
add
ds
adcl
or
rolb
bound
mov
dec
cmp
add
lcall
push
add
add
les
aaa
add
mov
or
sub
lahf
out
dec
cmpsl
adc
test
or
add
add
test
rolb
mov
stos
ja
cmp
xor
push
fstpt
xchg
add
daa
fbld
or
add
push
add
adc
sub
xor
cmp
movsl
add
xlat
or
add
sbb
add
add
add
std
mov
aaa
dec
test
add
jns
addb
add
ja
add
in
mov
bound
mov
and
add
jmp
test
shll
xchg
or
ret
repz
dec
xor
shrl
dec
outsb
or
mov
cmc
cltd
pop
dec
iret
mov
js
add
addb
push
add
push
add
xor
inc
add
outsl
outsl
jno
xchg
cmp
add
xchg
add
scas
jo
mov
add
add
add
lods
enter
jge
lods
push
mov
in
push
imul
loop,pn
rcll
inc
add
add
jne
leave
xor
je
aad
add
cli
and
mov
add
add
adcl
mov
add
inc
sbb
add
inc
add
add
add
ret
pop
int3
imul
jnp
add
fdiv
mov
aaa
add
and
fucomi
sub
shll
add
push
lahf
xor
outsl
fsubrs
pop
mov
jp
cmp
out
or
jecxz
imul
or
add
mov
add
add
js
sti
dec
in
scas
subps
outsb
and
jne
cltd
cmc
xchg
add
into
pop
cli
cmp
stos
pop
sub
adc
add
add
mov
icebp
ss
loopne
adc
leave
xchg
mov
inc
add
add
add
xchg
sbb
add
xchg
xchg
addr16
dec
cwtl
cld
fdivrl
pop
mov
add
call
sbb
xchg
fidivrs
cwtl
rcll
in
lods
orl
stos
addb
add
xor
pop
mov
or
inc
add
inc
push
mov
out
and
and
push
add
add
inc
cli
and
enter
add
jns
imull
add
sahf
pop
cmc
sub
addb
sti
nop
add
shr
into
ror
inc
add
pop
mov
in
mov
addr16
cmp
or
mov
cld
pop
sbb
add
cwtl
sbb
sbbl
rolb
push
inc
ret
inc
push
push
roll
imul
add
inc
add
xchg
loop
arpl
add
push
jae
inc
inc
add
adc
cmpsl
xor
add
xor
fwait
xchg
cmp
mov
test
hlt
add
add
repnz
mov
andl
mov
loop
shll
scas
dec
and
dec
sahf
push
pop
mov
mov
loop
pusha
add
push
or
mov
mov
add
insb
cmp
mov
xor
test
out
dec
and
pop
mov
and
add
lret
enter
cmovb
mov
add
outsl
aam
lret
add
add
add
add
add
in
iret
cmpsb
add
or
mov
movsl
lods
jno
std
pop
xor
aaa
jns
xlat
bound
mov
rcrl
jno
xchg
cltd
push
dec
sub
add
inc
or
aaa
and
mov
jno
fnstcw
add
xchg
add
pop
push
add
add
sbb
adc
sbb
addr16
mov
pusha
add
add
add
ja
add
fdivl
mov
xchg
inc
inc
in
dec
jg
add
aad
add
mov
pop
loopne
mov
mov
shll
add
add
xchg
mov
cld
and
addb
ss
add
insl
add
mov
cmp
sbb
add
mov
sarl
and
mov
out
adcl
cmp
add
xchg
add
pop
fildll
testb
incl
add
add
push
add
push
movb
int3
cltd
xor
pop
xchg
add
add
or
pop
scas
dec
push
add
add
inc
add
out
or
std
mov
jmp
mov
mov
xchg
and
mov
ds
out
mov
cmpsl
enter
inc
lret
jmp
push
je
das
add
mov
testb
add
outsb
ja
add
add
cmp
dec
jns
in
fwait
mov
out
iret
jmp
add
add
jo
or
aad
cmp
cwtl
lds
add
add
add
add
xor
mov
mov
outsb
pop
loop
addb
loope
aad
pop
out
sbb
mov
and
mov
fidivs
xor
dec
push
add
das
sub
in
sub
sbb
lret
mov
lds
add
jp
out
mov
rolb
ljmp
add
push
add
movsl
pushf
mov
dec
xchg
add
mov
sub
cmp
adc
inc
icebp
scas
mov
pop
cmc
sbb
in
cld
addb
mov
push
stos
ja
cmp
bound
mov
js
dec
ja
movd
fisubs
pop
sbb
arpl
push
add
add
mov
insb
jne
mov
push
sub
mov
imul
mov
mov
add
adc
repnz
mov
inc
cmp
addb
add
add
mov
or
inc
adc
iret
loope
xchg
pop
loope
jmp
inc
add
add
adc
loopne
dec
adc
add
mov
push
add
dec
mov
inc
add
add
mov
lds
adc
add
mov
add
add
add
loopne
and
add
jle
add
lret
mov
add
add
xor
jbe
sti
sbb
pushf
jp
add
add
sbb
add
mov
lock
ficomps
adc
out
incb
mov
add
dec
sub
iret
adc
mov
lods
test
sub
pop
push
cmpsb
add
mov
add
add
dec
mov
mov
aaa
push
xchg
add
add
xor
add
mov
std
or
mov
add
dec
adc
xchg
add
xor
fdiv
add
add
outsb
inc
add
icebp
mov
or
jl
fistps
jbe
inc
add
add
hlt
add
rolb
mov
xor
lahf
xchg
add
gs
psrld
jp
insb
insl
or
add
cmpsl
xlat
out
loopne
sub
add
add
clc
insl
sahf
testb
add
loope,pt
add
xchg
scas
pop
adc
ja
jno
add
sub
ret
and
mov
add
xor
test
pop
jnp
dec
fwait
cmp
repz
lock
or
add
fmul
push
jg
loop
out
pop
and
mov
add
add
cmp
push
add
mov
cmpsb
add
push
add
mov
add
fsubrp
mov
add
addb
fstps
inc
loope
repz
enter
das
call
add
add
add
add
fs
repz
add
sti
push
add
dec
mov
test
mov
lea
add
and
add
add
sbb
cmpsl
stos
cmp
add
add
mov
and
imull
xchg
add
add
call
cmp
sbb
fnstenv
add
add
test
add
insl
mov
add
add
addb
push
pop
mov
add
fwait
stc
out
xor
divl
sbb
push
add
push
sbb
insb
xor
jno
iret
lds
sub
addb
sub
lahf
xchg
add
add
add
pop
fistps
push
add
mov
mov
add
add
lcall
gs
add
mov
jp
sub
loopne
daa
repnz
inc
in
pop
cwtl
imul
add
es
js
add
mov
xchg
add
add
xchg
add
add
movsb
add
lea
add
add
adc
add
xor
dec
sub
sbb
jl
add
xchg
xlat
imul
nop
add
xor
push
aad
sbb
xor
fs
jbe
fistl
xchg
xor
push
xchg
push
fldz
push
mov
xchg
insl
jnp
xor
frstor
add
dec
sub
cmpsb
add
add
lods
mov
mov
cmpsl
mov
add
dec
repnz
adc
aad
mov
xor
out
add
mov
dec
pop
mov
jno
push
add
dec
iret
push
ja
add
xchg
jecxz
push
jb
and
ret
movl
add
add
int
pop
push
add
jns
into
ror
orl
add
les
mov
insl
data16
add
mov
mov
mov
push
add
hlt
add
mov
mov
inc
dec
cmc
adc
scas
adc
add
xor
sahf
loop
imul
push
push
scas
xchg
cmp
push
lret
in
jle
cwtl
adc
push
adc
inc
jmp
add
mov
fsubrl
test
add
ret
add
push
add
push
add
pop
je
cmp
mov
in
add
scas
fdivl
add
add
mov
pop
int3
xlat
cltd
adc
dec
fidivrs
cli
int
mov
dec
add
or
inc
xchg
add
add
add
sti
and
mov
add
iret
pop
pop
insb
mov
and
xchg
add
in
lret
icebp
pusha
add
lret
out
xchg
leave
xor
or
add
dec
xor
sbb
add
fsubrp
dec
fcoms
add
les
jl
xchg
adc
add
testb
aas
lcall
pop
les
in
add
xlat
iret
adc
cmp
add
pop
outsb
cmp
mov
add
dec
push
add
push
in
stos
addb
jg
test
add
in
rolb
fucomip
out
testl
dec
cmp
mov
adc
mov
movb
add
jne
add
add
push
add
xor
lods
inc
fsubl
add
sbb
add
stos
cltd
aaa
les
mov
add
mov
sti
aad
jmp
add
add
add
pusha
add
add
mov
movb
je
in
add
imul
addb
add
xor
push
add
mov
scas
loop
fmulp
sbb
add
jg
mov
cmp
or
push
inc
add
mov
add
cs
add
arpl
mov
rorl
add
jge
int3
scas
pop
in
add
cli
sbb
push
add
push
add
xor
sub
add
and
das
fstpt
xor
cmpsl
lea
movsl
ret
mov
dec
sub
push
sub
sub
fcomp
cld
jae
out
test
xchg
jne
add
aaa
or
popf
pop
fldln2
cmp
add
add
add
mov
mov
mov
test
jns
add
mov
dec
ret
cmc
inc
lcall
add
add
add
js
add
ds
add
push
fnstsw
rolb
add
mov
push
add
iret
cwtl
jp
add
add
jmp
data16
mov
push
loop
xchg
cmovg
add
mov
mov
cld
fsubp
addb
add
add
add
popf
fdivrs
out
mov
repz
sub
sub
dec
data16
mov
add
add
add
inc
add
add
testb
add
mov
mov
fcoms
mov
add
pop
mov
fldl
addb
lods
jp
rolb
add
mov
pusha
add
jl
add
add
push
add
dec
in
sbb
or
add
mov
testb
mov
push
std
pop
lods
addb
fistpll
adc
sbbl
repz
int
sbb
jge
cmp
xchg
ret
pop
jp
xchg
sarl
cmp
fistps
mov
add
or
movsl
aad
cmpsl
idivl
pop
test
add
add
ds
std
push
add
mov
pop
rolb
pop
xchg
add
add
lahf
stc
jl
add
add
mov
and
mov
add
decl
add
bound
mov
add
sahf
cli
pop
int
push
mov
int
in
add
int
push
add
movb
dec
sbb
out
or
dec
add
repz
mov
test
pop
jg
lea
or
mov
add
add
add
aad
add
ret
cmp
or
stc
test
dec
inc
cli
inc
jle
add
rolb
adc
pop
in
pop
dec
xor
mov
add
out
out
call
sub
add
adc
mov
add
ljmp
stos
push
add
int3
ret
inc
add
dec
lock
movsb
add
add
jo
dec
out
enter
test
imul
lret
mov
dec
js
std
lcall
and
jg
sub
jae
jo
adc
das
dec
sarl
add
push
in
jo
dec
jle
add
add
add
add
out
popa
jmp
inc
add
add
mov
jbe
xchg
lret
dec
rcr
jp
pop
xor
add
lea
rolb
add
fldt
pop
insb
rolb
in
mov
add
add
rolb
ror
xchg
cmpsl
fcmovnbe
add
test
add
sbb
cli
fisubs
add
adc
js
into
xor
mov
add
clc
mov
dec
add
inc
add
popa
std
repnz
cmpsb
add
mov
mov
pop
adc
add
sbb
int3
leave
sahf
insb
adcl
add
xchg
add
mov
clc
sarl
and
mov
gs
jp
jnp
mov
mov
add
lock
pop
sub
add
sahf
jae
stos
cmp
mov
add
out
add
inc
stos
lahf
sbb
add
add
add
lock
mov
add
add
mov
mov
jno
add
pop
insl
jge
movb
sbb
imul
fwait
ret
out
je
push
insb
out
fstl
dec
lock
add
push
add
add
mov
aam
add
stos
add
xor
mov
mov
add
test
add
popa
ja
adc
inc
jle
pop
fildll
outsb
cmpsl
jae
popf
push
lret
mov
out
int
scas
mov
inc
add
lods
inc
imul
ljmp
nop
add
add
or
xchg
int3
mov
mov
mov
mov
pop
test
or
into
aad
stos
fs
push
add
testb
mov
mov
lret
jns
add
add
jnp
add
add
test
rolb
sub
movsl
cmp
xor
cmc
jmp
add
push
in
lret
cmc
pop
sbb
lods
cs
xor
xchg
add
lcall
daa
mov
add
mov
jbe
testb
pop
jg
stos
jecxz
in
ret
sbb
inc
add
inc
add
testl
cmp
stc
xor
xlat
and
mov
add
iret
mov
mov
int3
xor
push
fwait
push
jge
sahf
mov
add
add
and
adc
out
mov
push
add
dec
stos
pop
imull
add
gs
add
xchg
aas
xor
loop
dec
bsf
xchg
mov
mov
mov
cs
xchg
fistpl
pop
std
jmp
add
cwtl
adc
dec
pop
sub
and
sub
adc
mov
pop
and
popf
aam
push
pop
adc
mov
icebp
daa
sbb
aaa
sbb
inc
add
lods
push
dec
pop
dec
jmp
pop
inc
stos
mov
add
nop
add
add
pop
mov
repz
bound
mov
add
jo
inc
add
add
imul
clc
call
add
add
jp
inc
add
mov
pop
cmpsb
add
jnp
sub
mov
add
and
add
mov
lea
push
loop
int
enter
xor
pop
pop
and
mov
mov
repz
mov
push
and
inc
fsts
mov
pusha
add
cmpl
xchg
jne
outsb
pop
sbb
movsb
add
xor
adc
mov
dec
xchg
pop
xlat
ret
lock
add
and
mov
add
testb
jae
aam
add
jle
shll
add
xor
pop
dec
jno
add
sub
ret
nop
add
add
dec
adc
imul
addb
add
jae
pop
addl
add
es
add
or
sbb
or
xchg
add
addb
out
in
pusha
add
mov
stos
pop
xor
scas
sbb
icebp
jl
add
pop
incb
jae
data16
pop
push
pop
cmp
sqrtps
je
movb
add
rolb
jg
add
add
pop
xor
jmp
ljmp
enter
cs
add
add
test
negl
or
add
insb
adc
das
pop
add
or
add
add
dec
jae
js
sbb
fcmovbe
xchg
add
xor
add
inc
add
add
in
leave
add
add
sub
pop
jle
add
out
outsb
lret
mov
add
int3
rorl
mov
icebp
mov
loope
add
sub
nop
add
mov
and
add
out
add
sbb
stos
pushf
imul
mov
add
add
add
add
push
add
adc
fcomi
movsl
fadds
movb
cwtl
mov
add
rolb
add
out
addr16
add
mov
lock
add
dec
jecxz
add
jge
mov
xchg
mov
scas
rolb
mov
add
push
add
cmp
add
mov
test
stc
jnp
and
rcll
ds
testb
xchg
loope
inc
add
mov
push
loopne
or
je
adc
push
add
enter
sbbl
aad
add
movsl
pop
imul
das
and
mov
xchg
stos
pushf
out
inc
add
add
add
xchg
push
add
mov
add
sti
addb
loopne
add
insb
int3
add
mov
add
add
fwait
out
add
loopne
call
add
dec
aaa
scas
push
mov
pop
cmp
mov
pop
jmp
jle
add
add
push
add
jmp
loope
insl
mov
popf
push
add
pusha
add
mov
add
pop
cmp
add
add
scas
int3
loop
adc
arpl
mov
add
xor
jl
mov
adc
std
int
and
jecxz
lods
adc
push
mov
or
adc
add
aam
out
das
mov
inc
xchg
jns
insl
rolb
adc
adc
mov
add
add
add
add
pop
and
and
mov
add
add
add
xor
std
test
data16
xor
or
mov
rolb
aad
ja
movb
inc
xchg
add
call
aas
cmc
inc
add
insl
bound
mov
or
add
das
repnz
add
insb
sub
rcll
push
icebp
pop
cmp
add
hlt
add
movsb
add
add
add
repz
inc
mov
add
add
add
data16
inc
or
add
iret
test
mov
add
add
and
mov
inc
stos
and
mov
call
es
icebp
fcomp
pop
xchg
adc
xor
dec
test
mov
sbb
dec
rolb
add
sbb
mov
mov
adc
dec
rolb
dec
test
cmp
outsl
cmpsl
ficoms
mov
stos
xlat
mov
and
add
test
add
ret
adc
add
adc
inc
insl
add
mov
push
push
add
push
mov
lds
or
add
stc
int3
dec
sbb
add
push
add
add
sbbl
into
fistpll
lret
add
cwtl
add
mov
add
add
add
mov
ds
sub
outsb
add
mov
loopne
lahf
jl
add
call
test
out
sahf
inc
xor
pop
cli
dec
inc
mov
loope
outsl
insb
inc
add
cmpsl
out
mov
add
xor
inc
iret
out
and
lock
in
push
mov
insb
and
mov
les
inc
add
fidivrl
add
outsl
jl
in
addb
iret
add
mov
push
jle
jae
jo
lea
ja
mov
add
xor
mov
test
and
mov
js
aad
add
psubusw
add
add
xlat
sbb
mov
stos
out
addb
jns
and
or
imul
lret
or
inc
add
lock
cli
mov
adc
pop
jp
dec
cmpsb
add
mov
add
add
stos
daa
push
add
subl
push
add
mov
jne
add
inc
sti
lods
cmp
add
mov
testb
push
add
imul
mov
out
mov
add
pusha
add
add
adc
add
stos
into
adc
mov
loopne
cmpsb
add
and
das
outsl
push
xlat
nop
add
push
ja
add
or
add
mov
rolb
xchg
daa
cltd
std
sub
popa
jle
scas
and
in
loope
add
add
push
add
xor
mov
ja
insl
mov
add
insb
fsubrs
jbe
adc
das
pop
lret
add
rcll
mov
add
mov
add
adc
xchg
mov
pop
aam
movsb
add
rolb
arpl
add
sub
sbb
test
add
pop
data16
aaa
adc
inc
mov
andl
or
cmpl
test
pop
rorl
mov
addb
xlat
and
mov
div
mov
addb
insb
or
les
out
pop
xor
scas
push
cmc
daa
stos
xchg
add
add
shl
addr16
popf
inc
xlat
mov
add
add
int3
push
add
xor
jb
inc
or
add
icebp
push
add
sub
mov
add
cmp
add
mov
xchg
add
cmp
add
popf
imul
adc
shll
add
jne
addb
js
data16
mov
xchg
inc
cmc
enter
add
add
and
mov
cmp
push
addb
sbb
add
add
cwtl
ffreep
add
add
mov
fidivl
insb
xchg
add
add
int
pop
cmp
add
add
add
mov
mov
mov
enter
add
adc
add
addb
jge
add
add
mov
add
or
sbb
sbb
call
xlat
sarl
into
hlt
add
and
xchg
mov
dec
aaa
lret
fwait
aas
adc
xchg
add
add
mov
pop
fstpt
mov
std
pusha
add
mov
inc
dec
addb
js
cwtl
addb
push
arpl
fwait
adc
mov
add
scas
xor
sbb
popa
cmp
stc
add
lret
or
icebp
cmp
mov
add
stos
push
add
add
addb
sbb
add
or
add
add
cs
or
imul
mov
pop
jb
fmull
popf
stos
sbb
add
add
mov
in
aam
pusha
add
add
add
inc
add
add
add
je
cmp
or
cs
ss
stc
inc
add
pop
testb
mov
add
mov
adc
add
pop
addr16
mov
test
inc
add
enter
xchg
add
mov
add
in
pushf
mov
outsb
and
add
mov
das
data16
and
mov
add
pop
mov
test
jl
and
call
and
scas
popa
add
mov
mov
and
inc
add
add
mov
xor
das
push
add
mov
inc
add
jg
imul
mov
jg
and
pop
aam
jo
mov
add
add
ja
add
jnp
add
push
add
xor
or
fimuls
mov
lock
ds
popa
jg
mov
push
add
add
data16
inc
or
mov
lcall
les
pop
push
add
push
stc
rcrl
add
imul
popl
and
mov
call
cltd
cmp
pop
fsubl
add
mov
add
add
mov
idivl
push
add
and
push
add
jnp
test
mov
push
add
or
lds
add
hlt
add
cltd
adc
stc
sbb
int3
adc
xor
add
pop
push
add
in
scas
mov
mov
clc
jo
lods
adc
repz
mov
inc
xlat
add
cmpsb
add
sub
mov
icebp
pop
push
add
pop
and
mov
push
ret
movsl
and
add
call
mov
mov
dec
fiaddl
mov
iret
pusha
add
mov
rolb
xchg
loope
add
pop
mov
dec
or
rcll
lock
cmp
orl
cmc
cli
sbb
add
sbb
test
push
add
ljmp
add
or
cmp
scas
jmp
jo
test
push
add
cli
mov
sahf
mov
call
lcall
push
add
mov
movsb
add
pop
mov
pop
add
arpl
movl
add
or
les
loopne
mov
cmpsl
data16
jge
adc
nop
add
int3
xor
or
cs
xchg
add
add
mov
dec
fsts
xchg
add
push
add
mov
pop
dec
add
pushf
jae
jmp
addr16
cltd
std
into
dec
xor
hlt
add
subl
add
movb
add
adc
icebp
dec
xor
sbb
add
ret
stos
xchg
push
add
std
int3
cmp
insb
out
std
cmpsl
in
rolb
inc
add
out
pop
xchg
add
or
mov
loop
movsl
cmp
stc
mov
bound
mov
xchg
or
jbe
test
add
test
sti
dec
out
test
xor
loopne
sub
push
xchg
add
or
loopne
stos
test
inc
add
fdivr
pop
inc
add
or
fstpl
pop
das
addr16
xchg
add
add
mov
dec
mov
mov
mov
jae
out
inc
add
cmp
lock
rcll
add
repnz
ja
pop
mov
sbb
cmp
add
insl
test
add
jno
scas
and
lock
add
add
cli
mov
mov
cmp
leave
fsubrl
pop
je
mov
add
dec
imul
add
add
bound
mov
ret
bound
mov
add
add
es
bound
mov
add
fcompl
rolb
add
mov
mov
add
adc
add
add
push
sbb
add
add
add
sbb
fildll
mov
push
add
arpl
test
xchg
add
mov
repz
jge
cmc
inc
xor
add
add
dec
movsl
sbbl
mov
inc
add
sbb
add
sbb
add
push
xor
testb
push
add
adcl
insl
stos
stos
les
mov
adc
icebp
cli
push
add
sub
add
add
rolb
repnz
cmc
dec
mov
pop
sbb
mov
addb
and
pop
and
mov
sti
pop
cmp
dec
in
dec
popa
rorl
xor
mov
lret
mov
cs
mov
add
mov
loopne
xor
push
push
add
xor
aaa
xchg
jg
stos
bound
mov
ja
div
outsl
lahf
mov
push
fadd
or
pop
rolb
cmpsl
lods
test
xor
out
mov
mov
xchg
add
mov
or
add
mov
nop
add
add
roll
xchg
mov
add
cmpsb
add
add
add
mov
lea
jmp
mov
jl
loope
xor
add
add
les
add
adc
cmpsl
mov
sub
mov
mov
mov
add
cltd
testl
or
outsl
push
add
cmp
aas
ret
pop
add
ja
pop
jp
es
add
loop
push
add
xchg
xchg
cmp
mov
iret
xchg
int
stos
push
testb
add
mov
lret
inc
pop
mov
pop
inc
scas
add
cmpsb
add
add
imul
add
lcall
in
push
dec
and
xor
mov
sbb
add
popf
dec
add
mov
arpl
xchg
add
add
out
mov
mov
ret
add
jne
jbe
test
jns
aad
adc
nop
add
mov
test
push
lret
mov
add
js
push
adc
inc
add
arpl
sbb
xchg
sub
shrl
mov
stos
or
jo
and
addb
mov
add
mov
add
inc
cld
pop
jae
jne
add
add
mov
in
dec
jo
lahf
inc
sbb
movsl
mov
add
pop
bound
mov
add
pop
test
push
cltd
mov
popa
inc
add
mov
leave
in
xor
addb
dec
sbbl
add
ja
add
addr16
mov
xor
test
cmpsb
add
sub
lret
aad
add
fildll
push
add
adcl
add
mov
jne
xchg
add
sub
lea
add
push
xor
push
mov
inc
add
push
add
inc
push
cltd
repz
xor
adc
adc
cld
pop
je
cmp
or
and
pop
jp
add
or
xchg
add
enter
mov
pop
inc
pop
outsl
sub
xchg
sbb
adc
int
push
loop
jl
addb
add
data16
add
and
mov
inc
push
add
add
pop
add
sbb
add
insl
push
add
pop
aad
fwait
xchg
add
int3
jle
add
xchg
sub
movb
lds
add
push
sub
dec
scas
dec
add
lret
outsb
mov
aaa
xor
add
mov
hlt
add
sbb
xchg
or
cltd
cmp
xor
sbb
add
in
outsl
ret
add
add
cmp
add
add
dec
xchg
out
jle
add
jge
sti
mov
add
cwtl
mov
js
jg
add
mov
pop
cmp
add
and
pop
outsb
inc
add
inc
add
and
mov
add
add
add
js
in
or
mov
cmp
add
add
call
inc
sub
loope
add
ss
mov
dec
pop
mov
xchg
addr16
out
imul
lret
rolb
mov
leave
push
add
add
add
xor
add
mov
mov
cmp
enter
push
mov
jae
and
add
dec
jecxz
add
in
aaa
push
add
add
data16
add
jmp
jnp
add
push
xor
aas
je
cmp
or
mov
or
insb
cmp
mov
fstpt
ja
fsubrs
lock
outsb
rolb
push
add
test
ret
add
add
inc
add
jecxz
mov
lods
dec
popf
setnp
push
add
outsb
add
std
jno
add
mov
cmpl
movb
push
push
xor
lock
add
xor
dec
iret
mov
mov
push
push
add
cmp
dec
jg
add
add
clc
pop
jmp
mov
xor
or
dec
testb
jns
add
pop
pop
leave
push
add
and
mov
aam
fistps
pop
iret
xor
adc
sbb
push
add
fdivs
add
das
xchg
add
add
sbb
cwtl
adc
pop
scas
jl
add
add
mov
xchg
addb
lock
mov
mov
stc
lahf
jle
stc
sbb
ret
sti
movsl
outsl
xor
cmp
add
push
add
leave
gs
push
add
pop
mov
in
aad
jl
add
add
and
mov
add
jne
adc
xor
mov
mov
add
nop
add
add
dec
adc
jmp
movsb
add
nop
add
add
or
movb
into
xor
lret
cmp
cli
clc
push
aam
fstl
add
pop
lahf
mov
adc
mov
pop
in
fbstp
repz
mov
scas
xchg
gs
push
add
lcall
jecxz
or
roll
xor
xor
push
add
lret
inc
add
push
mov
and
mov
xor
sbb
add
add
mov
loope
push
add
add
je
jecxz
pop
mov
adc
jmp
jp
popf
loop
movsl
pop
pop
xor
mov
adc
add
add
add
mov
sbbl
dec
lods
mov
out
pop
iret
addb
add
out
and
add
mov
pop
insl
aaa
cmp
add
or
push
push
sbb
gs
fadds
mov
enter
imull
stos
mov
add
add
test
add
jge,pn
pop
pop
add
mov
fidivrs
cmc
data16
jmp
add
dec
push
add
rolb
das
sub
add
loopne
xchg
add
add
cld
out
mov
add
add
add
and
mov
sbb
adc
add
int3
into
fwait
mov
add
xor
sub
cmp
rolb
push
add
add
mov
fucomp
pop
pop
test
repz
lcall
xchg
add
add
add
cmp
add
mov
mov
xor
adc
aas
mov
add
add
stc
faddl
add
add
scas
jecxz
push
cmpsb
add
mov
adc
inc
push
add
adc
popa
xchg
iret
dec
hlt
add
mov
data16
idivl
and
jno
xor
std
rolb
xchg
mov
int3
movsb
add
xlat
mov
shll
add
mov
cld
jge
nop
add
adc
add
mov
push
and
jo
and
stc
xchg
add
inc
add
add
push
add
add
hlt
add
sub
add
add
mov
add
cmp
imul
add
das
adc
pop
sahf
sub
add
pop
pop
cmp
inc
mov
push
inc
ljmp
imull
add
out
add
mov
add
adc
dec
sbb
push
mov
jno
cli
or
inc
add
add
lods
int
cli
sahf
adc
add
inc
add
mov
add
push
add
int
push
out
jo
out
sbb
or
sub
stc
scas
dec
dec
movb
cld
pop
sbb
aad
add
test
leave
mov
out
lcall
je
add
divl
add
mov
test
cs
enter
cs
jmp
push
cmp
sub
enter
sub
and
jp
pop
mov
les
jbe
sub
jl
add
aam
mov
aad
das
mov
xchg
add
lock
ret
imul
cs
jmp
mov
add
jnp
and
mov
add
fcompl
add
cmp
add
mov
inc
dec
adc
add
jbe
into
push
jmp
leave
mov
xchg
add
add
xchg
push
sbb
sub
add
add
push
pusha
add
add
sub
add
jns
sbb
cli
mov
pop
movsl
aaa
push
add
std
test
xor
and
mov
jne
jl
test
jg
add
mov
cmp
cmp
frstor
call
add
xor
push
add
mov
decb
cld
jge
add
and
mov
jbe
iret
sbb
add
ja
sbb
add
scas
add
fcomps
loopne
fwait
jp
add
mov
cmp
mov
push
add
aas
mov
ret
out
iret
mov
add
mov
xchg
or
push
and
mov
add
mov
inc
xchg
add
push
add
add
or
clc
stc
inc
xchg
add
add
sbb
push
add
add
mov
test
cwtl
stc
fildl
xor
mov
add
mov
aas
sti
push
leave
jle
add
add
add
call
add
xor
jp
add
xor
sub
jmp
rcl
add
add
rorl
aam
add
xchg
rolb
pop
sahf
gs
lahf
add
add
out
fwait
adc
xlat
or
xor
add
push
inc
mov
sub
xlat
add
add
add
add
add
sahf
adc
push
in
insb
inc
mov
and
mov
lock
add
mov
andl
cmp
add
rolb
push
add
add
add
add
xor
or
add
add
hlt
add
adc
mov
int3
or
fsubs
fnstsw
mov
dec
sub
testb
hlt
add
cld
cli
jae
cmp
add
clc
hlt
add
sbb
lock
mov
popf
in
push
add
ret
sbb
or
mov
add
out
pop
enter
sbb
jl
add
loope
int
ret
push
dec
add
add
cmp
les
jno
add
fstsw
add
mov
ret
add
out
lds
add
out
pusha
add
jae
loop
sbb
cmp
sbb
mov
xchg
mov
add
mov
scas
sbb
dec
dec
cmpsb
add
xchg
add
push
add
stos
add
add
xlat
jae
add
or
rcpps
add
jne
addb
lods
jl
add
add
pop
adc
xor
push
loop
pop
mov
pop
add
cld
or
ljmp
sub
cmpsl
add
or
add
add
inc
loope
pushf
inc
bound
mov
out
xchg
std
sbb
add
cmpsb
add
add
popf
jge
into
iret
or
sbb
fimull
in
add
add
imul
inc
movsb
add
cmp
test
out
addb
cmp
mov
xchg
les
mov
loopne
jg
call
add
pop
clc
shrl
sbb
rorl
push
mov
pop
lahf
outsl
add
add
aad
fisttps
pop
adc
fstpl
add
jno
fsubr
ja
addr16
add
mov
and
add
mov
dec
xchg
add
int
xchg
add
add
jp
fwait
pop
aaa
mov
add
js
add
mov
add
in
pop
mov
int
sbbl
add
and
mov
add
ljmp
add
lea
iret
imul
ret
sub
or
movb
jb
jae
add
mov
xchg
inc
popf
aas
jno
add
mov
lahf
imul
mov
add
pop
mov
rolb
insb
push
add
add
mov
lods
jno
xor
add
jle
je
sbb
jg
insb
test
std
mov
sahf
stos
sti
dec
cld
in
add
add
loop
push
iret
xor
xor
adc
or
cmp
stos
addr16
jnp
lock
sbb
push
add
add
inc
pop
gs
add
roll
add
pop
add
ds
add
add
lods
add
sti
cs
les
or
pop
cltd
xor
fwait
mov
add
movsb
add
add
fcomps
add
daa
imul
ljmp
add
jp
add
movsl
and
push
add
and
mov
cmpsl
outsb
cmp
iret
push
mov
cltd
jmp
xchg
movsb
add
add
loopne
mov
inc
add
cmc
cs
dec
mov
xchg
add
in
addb
add
bound
mov
aas
xchg
icebp
rolb
test
imul
cmp
inc
sub
dec
fstpl
cmpsb
add
add
cmp
inc
sub
add
inc
add
mov
cmp
mov
cmpsb
add
cmp
aad
cmpl
add
mov
adc
jg
adc
scas
sbb
bound
mov
add
mov
dec
outsb
adc
xchg
add
lret
fldt
jle
add
sti
jp
push
add
inc
or
mov
cltd
sub
addb
fwait
addr16
lret
add
cmp
jg
pop
fidivl
add
add
sbb
add
rcrl
add
add
add
adc
xchg
mov
cmpl
stc
inc
rolb
mov
pop
loop
dec
les
cmpsb
add
out
xor
xchg
call
rolb
leave
jae
icebp
xchg
add
inc
add
repnz
movsb
add
mov
push
add
out
add
mov
sbbl
shr
lcall
jnp
add
mov
and
out
mov
imul
mov
lcall
movsl
les
cmpsl
sub
add
movsb
add
add
ljmp
insb
clc
dec
out
xchg
add
mov
add
and
lock
jae
mov
mov
mov
add
pop
call
xchg
mov
rol
test
add
inc
add
out
jmp
addb
pop
adc
add
sahf
pop
jmp
addr16
movsl
addb
mul
add
leave
out
add
lret
cmp
pop
cmp
sub
or
sub
jle
mov
cmp
std
push
mov
add
out
push
sub
add
add
or
test
add
or
inc
add
add
add
inc
add
into
inc
xor
mov
and
add
iret
cli
push
mov
movsl
mov
ljmp
add
mov
add
fwait
and
push
pop
adc
add
es
mov
lds
add
and
pop
and
push
shll
xorl
dec
add
mov
imul
dec
adc
add
jbe
push
dec
pop
ljmp
add
out
das
and
and
mov
xorl
mov
data16
testl
sub
add
jecxz
jmp
repnz
and
add
jmp
add
add
pop
pop
mull
add
in
add
out
add
dec
sysexit
std
push
add
add
add
mov
add
and
xor
mov
fdivl
add
mov
daa
clc
js
cmp
mov
movsb
add
inc
add
mov
inc
add
inc
push
add
or
lds
add
add
xchg
mov
icebp
bound
mov
lcall
pop
jb
lret
xchg
push
daa
cmp
inc
add
out
test
out
xchg
pop
fnstsw
rcll
add
in
jns
add
mov
add
lods
fucomp
dec
addr16
pop
int
pop
lret
insb
and
or
add
xchg
sub
sub
add
sub
adc
pop
loope
or
pop
addb
cmp
inc
add
ds
pusha
add
shll
inc
jg
add
add
add
rolb
fldt
add
pushl
cmp
mov
mov
int
sbb
xchg
lahf
mov
mov
and
mov
ljmp
testb
and
add
or
sub
sub
add
add
adc
sbb
add
addb
out
imul
ljmp
add
add
lods
adc
mov
adc
repz
out
test
add
lds
add
aad
enter
mov
cmp
aad
out
add
mov
out
fistpll
jo
mov
mov
mov
sbb
das
loop
adc
xchg
xor
jnp
dec
push
and
mov
xchg
add
xlat
out
popa
cmp
dec
jge
jg
mov
add
test
mov
mov
ljmp
mov
pop
cmp
scas
mov
mov
jge
mov
add
jge
pushf
xor
add
add
dec
ret
psrad
cltd
jb
pop
mov
call
inc
add
add
add
add
cmp
mov
xchg
inc
ljmp
subl
js
shl
jge
mov
in
cmpsb
add
add
mov
adc
out
sub
add
add
add
mov
cld
sub
sub
ljmp
scas
jnp
or
gs
add
mov
sub
sub
fisttps
adc
je
mov
mov
ret
punpckhdq
jo
adc
loopne
jb
pop
or
bound
mov
mov
enter
xor
add
jg
clc
wbinvd
mov
xchg
add
jns
push
mov
add
aad
add
xor
add
js
dec
and
jb
test
test
scas
push
add
add
hlt
add
add
add
add
jge
add
js
hlt
add
mov
js
icebp
sti
fistpll
popa
ljmp
xchg
adc
ljmp
loop
movsl
lret
insl
mov
and
and
mov
add
es
and
icebp
mov
mov
or
scas
insb
inc
fisubrs
mov
hlt
add
jno
mov
dec
scas
cmp
jge
mov
jle
cmpsl
pop
jecxz
insb
test
push
mov
xor
or
xlat
xchg
add
je
sar
mov
in
fwait
mov
lea
add
pushf
lcall
add
pusha
add
cli
sub
xchg
insb
idivl
stos
fiaddl
add
lods
cli
inc
push
add
int
mov
push
inc
add
repnz
sub
addr16
out
out
enter
cmp
daa
rolb
sub
mov
dec
pop
ret
mov
mov
add
mov
pop
jno
jmp
add
mov
inc
lock
add
add
add
cmp
stos
adc
jb
leave
in
xchg
add
add
push
fstpl
xchg
add
outsl
enter
shrl
cmp
mov
jge
jp
lcall
sbb
jge
sbb
nop
add
sub
cwtl
inc
add
jmp
gs
add
loope
dec
stos
addb
mov
inc
adc
mull
mov
push
mov
addb
push
mov
bound
mov
sub
movsl
mov
xor
add
call
add
add
mov
dec
das
imul
fwait
jp
das
adc
jle
popf
or
xchg
add
push
add
add
dec
jae
add
sub
and
int
push
add
sbb
aaa
bound
mov
add
sub
add
ds
jp
add
dec
sbb
in
lret
mov
add
mov
add
push
add
add
jp
in
or
xchg
add
xchg
add
pushf
add
cmp
ja
pop
inc
add
fcmovnb
add
push
add
mov
add
push
les
add
add
sub
icebp
cwtl
mov
mov
add
sub
add
add
sub
dec
mov
inc
xchg
add
jge
insb
jne
testb
movsb
add
add
int
inc
test
mov
add
mov
call
mov
mov
pop
repz
mov
add
mov
lods
sub
add
testb
fwait
pop
push
add
add
and
xlat
flds
lret
jmp
add
add
movb
fidivrs
mov
jecxz
add
jge
add
add
add
add
add
test
xchg
cli
int3
and
mov
lds
add
add
pop
inc
xor
std
inc
cmpsb
add
mov
adc
mov
cmpsb
add
aam
ficomps
add
add
add
rcll
xchg
gs
sbb
add
pusha
add
mov
add
push
inc
add
stos
das
mov
frstor
add
add
add
icebp
add
and
add
pop
lcall
push
stos
rcll
add
adc
imul
add
push
mov
rol
add
sahf
jecxz
dec
dec
dec
dec
jmp
add
or
jne
inc
ja
fistps
add
rolb
cwtl
mov
jbe
cs
push
add
jno
cltd
push
add
mov
xchg
add
fnsave
add
mov
add
add
add
mov
add
mov
adc
adc
sbb
xchg
sub
sub
add
cld
adc
mov
popl
jp
add
jno
add
add
and
pop
lea
mov
add
and
xchg
lret
aaa
sbb
add
aaa
sub
lret
jp
add
insl
push
add
lret
add
cmpsl
xor
add
cs
mov
sbb
sbb
add
add
push
stc
insb
jb
out
test
insl
jl
add
push
loope
add
addps
xlat
push
add
push
add
add
add
ds
mov
add
movl
add
and
js
push
add
pushf
ret
sbb
cmp
hlt
add
mov
rolb
cmc
inc
enter
and
mov
lea
adc
addl
mov
movd
jnp
add
push
or
add
test
inc
add
int
add
std
test
add
hlt
add
jecxz
add
mov
roll
pop
cmp
sbb
mov
mov
testl
push
add
add
dec
jge
mov
dec
gs
imul
add
cs
sub
sub
xor
mov
add
movb
lcall
rolb
out
inc
add
mov
add
jp
cmp
push
jecxz
scas
and
add
add
pop
dec
cwtl
dec
cmp
imul
pop
loopne
outsb
cwtl
pop
addl
mov
ljmp
call
lret
dec
xchg
pop
rolb
mov
mov
mov
xchg
int3
jno
mov
cld
clc
and
das
mov
pop
push
add
adc
leave
dec
lret
pushf
pop
popf
aam
and
mov
add
xchg
popf
inc
add
outsb
out
dec
push
add
add
add
test
andl
add
push
add
popf
addb
add
add
push
movsl
cmc
mov
mov
dec
cld
mov
mov
ds
add
add
sbb
mov
cmpsb
add
lret
dec
das
data16
add
pop
jnp
imul
add
add
add
add
mov
je
lret
cmpsl
addb
jl
mov
ficompl
daa
sbb
lock
push
sub
cmp
out
xchg
inc
dec
inc
fldl
popf
jbe
shll
je
faddp
add
mov
add
cmp
push
xor
btc
lds
add
pop
sarl
and
mov
xor
add
cli
mov
int
repnz
mov
mov
testb
fsubs
pop
push
add
xchg
mov
in
cwtl
xor
popf
movaps
aas
cld
ja
add
add
add
ja
pop
or
add
adc
add
add
sbb
add
pop
idivl
add
xchg
add
inc
add
jns
adc
lret
shrl
cmp
stos
aad
add
clc
movsl
data16
jnp
mov
mov
add
mov
add
add
cmp
xchg
rolb
jae
lods
xchg
ss
fldenv
add
imul
mov
add
add
or
add
sub
pop
lret
add
add
pop
dec
int3
adc
ds
loop
jbe
fsubl
add
data16
add
add
mov
add
mov
cmpsl
dec
mov
faddl
dec
rorl
add
mov
mov
out
or
lea
dec
mov
add
lcall
arpl
je
dec
fidivrs
psubsb
arpl
mov
or
lods
add
add
sbb
add
add
xchg
add
in
repz
dec
pop
adc
jl
adc
sbb
adcl
cmovo
mov
movsb
add
add
cmp
stc
jo
int
in
lret
or
int
add
push
cmp
add
popl
add
add
mov
jmp
insb
ljmp
sbb
sub
stos
sbb
add
cltd
daa
in
cmpsb
add
add
adc
sbb
in
mov
sbb
lock
out
fucomp
inc
add
sub
push
or
je
fwait
dec
fcoml
les
push
add
mov
pop
cmpsl
fmull
imull
push
add
jno
push
add
add
ds
pop
out
rolb
add
push
xor
inc
add
je
fsub
add
lret
add
add
mov
add
fbld
pop
lret
stc
push
add
gs
xchg
add
repnz
stos
jle
rolb
leave
mov
sub
cmpl
add
movsl
xchg
add
add
js
add
add
and
mov
xor
xchg
add
adc
loope
add
add
pop
push
add
fwait
push
repnz
insb
cltd
test
push
add
add
sarl
add
icebp
test
les
sbb
push
std
push
inc
out
sbb
test
cmp
jge
movsb
add
xchg
push
push
add
add
add
mov
add
aaa
clc
movsb
add
pop
jnp
mov
mov
pop
leave
js
out
icebp
or
add
sub
pop
jmp
add
add
add
add
testb
gs
xchg
jecxz
ret
push
ljmp
add
sbb
jns
xor
add
xor
push
imul
add
push
das
rolb
push
add
test
jae
in
lcall
cmp
add
pop
hlt
add
les
pop
pop
scas
xor
repz
imul
jmp
add
testb
add
mov
rcrl
jg
sbb
ljmp
add
add
add
dec
gs
push
add
jo
adcl
clc
xchg
jne
add
xchg
add
scas
cmpsl
das
xor
movsl
jp
cltd
lods
stos
jle
hlt
add
and
or
mov
add
es
lea
lahf
js
add
add
fcoml
mov
cmp
adc
and
mov
mov
add
add
dec
dec
test
cmp
adc
addr16
cmp
mov
mov
je
mov
dec
pop
imul
push
out
cmc
ja
mov
int3
imul
mov
add
add
cmpsb
add
in
add
out
sti
sub
adc
jle
add
test
add
or
fidivrl
add
and
lods
cmp
add
and
mov
xchg
inc
add
mov
add
popl
and
mov
jne
rolb
cmpsl
fcmovnb
loope
cld
js
cld
lds
cmp
sar
lret
add
mov
add
gs
cli
adc
lret
xchg
mov
hlt
add
repnz
mov
add
leave
adc
add
sbb
add
popf
mov
jbe
lret
xchg
jg
stos
sbb
add
mov
cwtl
pop
mov
push
add
sub
rolb
pop
stc
push
add
add
cmp
add
add
js
pop
adc
aaa
cs
push
add
add
add
add
add
pushf
in
add
add
mov
pop
call
cwtl
cld
rolb
add
addr16
call
add
jns
out
scas
mov
mov
sub
lds
add
nop
add
mov
mov
fcomip
add
mov
xchg
pop
xor
arpl
in
push
jecxz
mov
mov
xchg
sbb
push
add
add
mov
roll
ret
mov
and
stc
mov
push
cwtl
push
les
lret
mov
push
xchg
add
lret
mov
add
bound
mov
pop
mov
icebp
cltd
pop
pushf
sub
outsl
mov
add
outsl
bound
mov
mov
and
mov
jo
xor
popa
cmp
mov
movl
aam
mov
lock
mov
mov
add
add
add
mov
add
mov
out
push
add
add
in
mov
leave
clc
mov
add
movb
add
sbb
jno
add
add
push
push
cmp
and
add
nop
add
push
add
or
add
push
jno
add
add
add
add
mov
lea
push
add
dec
or
sbb
jnp
push
rolb
lret
inc
out
adc
outsb
pusha
add
mov
out
stc
cwtl
mov
jae
push
pushf
mov
cmp
ljmp
and
dec
ja
add
add
pop
out
add
aam
int
add
add
add
test
test
cmpsl
insb
sub
jmp
pusha
add
xor
lahf
jl
rolb
jmp
mov
ficoml
xchg
cmp
add
push
add
daa
xchg
add
insl
cmp
pop
jb
cwtl
sbb
roll
add
sub
sti
dec
push
add
in
shrl
cmpsb
add
mov
out
scas
in
test
std
loop
addr16
add
add
popa
mov
add
mov
add
mov
sbb
or
add
pop
pop
jnp
add
ds
aas
fucom
add
add
add
inc
add
add
loopne
and
daa
loop
xchg
mov
movsb
add
xor
popl
add
push
add
add
mov
scas
mov
stos
add
ret
mov
pop
dec
mov
test
add
cmp
test
aad
add
rolb
enter
testb
cmp
inc
add
add
add
mov
add
and
or
mov
add
add
ja
out
add
add
sub
mov
out
sub
jno
xchg
add
pushf
cmp
mov
je
cmc
aam
rolb
add
add
add
add
xchg
xor
add
add
cltd
push
add
sbb
lods
clc
in
movsl
lods
mov
push
adc
add
mov
mov
jg
add
jge
int3
hlt
add
jno
leave
push
add
mov
icebp
adc
add
pusha
add
pop
cli
mov
pop
in
xor
dec
mov
addb
mov
xor
fiaddl
sbb
paddq
xor
mov
xchg
add
das
mov
jg
cmp
inc
add
fsubrl
enter
lea
mov
or
imul
loopne
testb
cmp
inc
add
add
or
jge
jno
sub
cmp
xchg
push
pusha
add
add
add
cwtl
and
add
dec
sub
add
add
add
daa
and
add
stos
cmp
pop
sub
cltd
push
add
icebp
push
add
sub
dec
call
jle
dec
push
scas
lret
aaa
sar
or
lcall
mov
add
xchg
add
add
dec
jmp
mov
adc
inc
add
add
cmp
data16
rorl
or
or
add
enter
add
add
pop
inc
rcr
adc
mov
test
add
ret
xchg
aam
imul
lods
repnz
add
add
or
imul
aas
sbb
inc
xor
fcoml
ret
std
loope
xor
pop
mov
in
xchg
ds
add
bound
mov
push
add
push
sub
int
or
add
dec
push
add
data16
loopne
xchg
adc
or
add
insl
out
push
add
add
add
test
sub
fiadds
dec
mov
adc
ds
sbb
aam
aad
stc
mov
add
mov
add
add
pop
fcompl
add
sbb
mov
push
shr
xchg
mull
outsb
sbb
add
push
mov
add
xchg
cwtl
aas
inc
add
ja
movb
test
cs
cmc
lret
add
add
push
add
shll
and
mov
add
xchg
insb
xor
ficompl
ja
add
add
and
sub
add
clc
pop
test
inc
add
add
or
add
testl
popf
cli
sbb
mov
jnp
test
dec
mov
push
push
jnp
adc
add
mov
cmc
cmc
xor
scas
out
adc
pop
xchg
cmp
clc
mull
add
inc
add
int3
mov
add
mov
jmp
add
aas
imul
rolb
sub
inc
fsubl
add
cmpsb
add
lahf
mov
add
mov
test
cltd
repz
add
add
push
add
inc
add
or
or
into
inc
out
push
inc
fwait
das
lea
daa
daa
add
add
and
xor
add
mov
jo
mov
add
push
notl
mov
add
add
insl
sub
mov
gs
mov
add
ds
sub
les
test
adc
mov
roll
pop
mov
lcall
add
in
xor
cmp
add
mov
push
fldl
rolb
insl
or
mov
adc
lds
add
add
add
add
clc
mov
add
add
icebp
xchg
add
movb
inc
add
add
imul
mov
sbb
mov
in
xor
pop
add
add
push
add
movsl
adc
or
addb
mov
add
add
push
add
add
iret
push
repnz
push
add
repz
cmp
add
lret
xchg
dec
loop
cmp
add
out
cmpsl
nop
add
sbb
jle
add
add
pop
in
or
mov
mov
sbb
sbb
pop
jp
add
scas
clc
lods
inc
add
pop
aaa
sub
sahf
sbb
jnp
fists
add
sti
jp
or
imul
mov
dec
pushf
inc
add
ret
add
stc
pop
rorl
out
sub
fidivs
and
adc
cmc
sbb
pop
mov
loope
add
add
add
lock
add
jo
cmp
xchg
add
cltd
stos
push
aad
addb
add
mov
ja
mov
jnp
mov
fldcw
and
mov
push
add
testb
call
add
movsl
pop
imul
add
add
gs
fs
jne
add
add
inc
add
adc
push
add
dec
mov
ret
movaps
mov
jge
add
jl
ret
aam
push
add
imull
addr16
pop
or
loop
test
lods
test
fisttpll
add
add
push
add
rolb
dec
jl
pop
daa
or
neg
or
test
push
xchg
aas
enter
ret
add
add
sbb
add
inc
add
cwtl
sti
test
sub
sbb
add
push
add
fimuls
add
add
lret
or
push
sub
add
scas
in
cwtl
cmp
dec
int
add
add
ljmp
add
cmpl
fisttpl
ljmp
pop
jb
rolb
hlt
add
mov
data16
add
mov
mov
movsb
add
aaa
cmc
movsb
add
fmuls
add
xchg
add
add
xlat
addb
add
repz
push
add
and
mov
insl
jae
movb
add
insb
add
insl
lahf
pushf
movsl
test
add
loopne
popf
roll
mov
sbb
xchg
cmp
add
xor
xor
push
inc
add
enter
jge
mov
push
add
dec
fiaddl
mov
rolb
mov
push
xchg
rolb
add
add
add
cmovnp
push
movsb
add
add
lahf
sahf
push
cmp
add
testb
add
add
add
cwtl
out
push
cmovne
mov
jo
mov
push
mov
add
mov
sub
push
add
daa
jnp
int3
int3
add
mov
add
mov
dec
sbb
add
add
sub
push
add
data16
jb
rcll
sarl
push
inc
add
mov
add
scas
call
int
icebp
jecxz,pn
add
test
dec
pcmpgtb
xor
stos
jno
loope
add
mov
setge
inc
add
add
and
out
add
xor
fistl
aam
bound
mov
mov
sbb
repz
test
push
add
add
pushf
popf
xor
xchg
add
add
mov
enter
mov
add
mov
add
adc
mov
fiaddl
imul
or
out
loopne
xchg
add
mov
pop
jo
sbb
mov
add
adc
jne
add
or
sarl
dec
cmc
test
add
rcr
xchg
popa
stos
mov
mov
add
imul
xchg
add
movsl
add
cmc
xor
cmpsb
add
jle
inc
aad
fcmovu
arpl
add
xor
cmp
add
dec
cmp
sub
pop
movb
sahf
movsb
add
add
add
push
add
xchg
xor
les
pop
push
jns
mov
mov
in
das
dec
ss
movsl
sarl
sub
scas
sbb
or
das
mov
add
jp
neg
jle
add
add
cwtl
dec
bound
mov
mov
aaa
fidivs
cmp
adc
testb
jp
add
jbe
gs
dec
bound
mov
sahf
push
sbb
out
into
and
ja
mov
hlt
add
cmpl
out
fwait
inc
add
push
add
inc
mov
xchg
in
shll
adc
ret
add
xchg
je
jp
mov
inc
add
add
rolb
cmc
xchg
mov
xorl
lret
in
int
add
add
xchg
add
xchg
add
int
and
std
outsl
arpl
push
add
or
inc
mov
add
mov
mov
filds
add
add
add
xchg
addb
sub
add
jecxz
in
xchg
add
lcall
ret
popf
lods
dec
adc
cmp
and
jno
faddl
add
push
mov
bound
mov
mov
mov
xchg
add
jg
add
fcmovbe
add
add
add
imul
add
pop
adc
cmpsl
xchg
dec
cli
mov
mov
add
cmp
cmp
js
icebp
dec
cmp
mov
popf
push
add
cmp
adc
insb
dec
pop
loope
mov
add
add
out
pop
lods
jo
sub
mov
xchg
add
jl
add
test
jo
push
xor
pusha
add
mov
jg
aaa
dec
pusha
add
loop
pop
loopne
nop
add
mov
adc
aad
adc
jecxz
add
addb
clc
cli
cmp
add
fwait
mov
add
repz
lods
inc
add
mov
or
jmp
add
or
adc
jo
jge
pop
lahf
call
mov
rolb
pop
cli
push
test
lahf
push
mov
push
jp
mov
dec
push
sbb
jl
xchg
inc
add
movsl
pop
ret
mov
add
cmp
xchg
adc
pop
mov
sbb
das
int
addb
mov
sub
out
fidivrl
stc
push
aas
andl
sbb
jmp
add
pop
add
mov
adc
xor
and
jmp
xor
xchg
jl
dec
testb
xchg
or
add
daa
das
ret
add
add
addb
adc
sub
mov
inc
testb
add
push
fcomps
pop
sbb
mov
cmc
push
add
inc
xchg
test
add
jl
push
dec
fsub
mov
mov
mov
pop
xchg
popf
xchg
sti
xchg
cmc
ret
sbb
test
or
pop
cmc
jl
add
add
lods
push
add
add
jp
insb
imul
push
inc
mov
xchg
add
add
dec
inc
ret
add
testb
add
add
js
push
cmp
adc
sbb
add
adc
gs
js
add
add
mov
int
sub
xchg
add
outsb
insl
mov
sub
add
and
mov
add
movsb
add
pop
in
inc
mov
icebp
cld
std
jne
add
lds
add
test
jge
add
add
add
push
test
add
mov
test
insl
fldenv
and
sub
jbe
mov
add
pushf
call
add
out
ret
das
cld
ds
mov
sti
push
dec
push
sahf
imul
push
add
adc
mov
push
add
cld
repnz
or
loopne
add
pop
jae
testb
mov
add
mov
dec
stos
dec
aas
mov
add
mov
adc
mov
ret
lea
add
dec
push
adc
jecxz
push
cmp
adc
bound
mov
lods
sub
lea
add
add
mov
ljmp
and
or
int
or
add
pop
push
stos
push
jecxz
mov
add
pop
add
filds
add
add
add
enter
dec
cmp
jle
cmpsb
add
mov
add
add
add
ja
into
xchg
lock
dec
xor
in
add
cs
jnp
add
jnp
je
into
push
icebp
fbstp
add
test
pop
lock
add
mov
in
in
add
mov
add
insl
and
mov
mov
setns
mov
adc
std
je
push
test
flds
mov
dec
push
sbb
data16
cmp
cmp
add
pop
adc
outsb
stc
sarl
testl
lock
mov
add
outsl
aas
ljmp
adc
cmp
mov
add
aas
lret
inc
stos
enter
adc
add
push
add
addr16
cld
jne
add
add
xchg
ljmp
cs
lret
jmp
das
imul
mull
add
mov
jae
sti
or
add
pop
add
mov
add
lret
cltd
pop
inc
add
mov
add
cs
add
stc
rolb
jg
in
lahf
push
add
inc
ljmp
repz
nop
addb
add
pop
cmp
data16
xchg
add
add
add
addb
add
in
jno
iret
imul
add
mov
rolb
mov
les
sahf
mov
mov
add
jle
add
test
cmc
fcoml
pusha
add
jnp
insl
setge
cmp
xchg
push
jbe
gs
cli
pop
stc
lcall
mov
out
or
adc
and
mov
leave
rolb
mov
push
ljmp
test
out
xorl
add
add
cli
stc
stc
push
pop
adc
mov
cs
cmp
sub
jle
addr16
in
add
cmpl
mov
lock
xchg
add
mov
scas
lret
cmc
out
jne
jle
mov
mov
icebp
ljmp
test
push
add
add
add
pop
call
filds
mov
push
in
inc
je
jb
push
filds
mov
add
in
int
add
add
ficomps
fisttps
add
xchg
add
cmp
sahf
es
add
add
or
add
mov
mov
add
cltd
aaa
insl
jecxz
mov
call
add
mov
sbb
fcomps
js
add
mov
cs
addr16
add
add
in
add
icebp
mov
pop
and
sub
jbe
cmpl
sbb
ss
add
mov
loop
movb
pop
xchg
push
mov
xor
add
stos
cmp
insb
movb
arpl
add
cmp
inc
add
xor
cmpsb
add
mov
add
nop
add
and
mov
repz
cmp
out
mov
rdtsc
addr16
cwtl
repnz
jbe
adc
paddd
loope
pop
add
iret
lahf
xchg
add
push
add
xchg
int3
push
add
sub
addr16
movb
cwtl
mov
inc
add
mov
and
out
mov
imull
movb
rolb
lahf
lods
xor
lret
pushf
andl
stos
xchg
add
loope
add
mov
jmp
xlat
push
inc
add
or
jns
dec
jb
inc
add
aaa
xlat
out
pop
negl
dec
pop
xchg
add
jecxz
aaa
es
and
add
push
add
dec
sahf
xchg
add
mov
test
sbb
lcall
xchg
out
jns
add
sub
mov
iret
pop
outsl
in
addb
pop
fwait
jne
add
mov
arpl
push
scas
aam
dec
mov
fdivs
add
dec
pop
xchg
enter
loop
adc
addr16
add
add
add
mov
mov
sub
inc
rolb
mov
xor
xlat
rolb
cmpsb
add
inc
add
and
ljmp
insb
jb
mov
add
add
and
test
add
add
add
add
sub
cmpsb
add
push
sarl
cs
add
mov
jmp
je
sbb
add
add
fisubrl
lock
xchg
lock
scas
rcl
push
mov
add
outsl
add
add
rcrl
daa
cwtl
add
mov
movsb
add
lahf
xor
adc
jl
add
divl
movl
dec
mov
mov
add
push
in
lods
lahf
mov
push
stos
or
addl
mov
movb
add
data16
mov
pop
xchg
add
add
data16
and
test
cltd
popf
popa
adc
cwtl
rolb
sar
pop
movsb
add
stos
pop
push
add
cli
xchg
jl
std
in
xor
and
mov
enter
add
mov
add
mov
jecxz
sub
add
popf
add
lods
xchg
add
add
and
mov
mov
jmp
outsl
testl
xchg
pop
cltd
jmp
sub
push
add
lret
sbb
fstpl
aaa
xchg
mov
add
or
xor
fcompl
hlt
add
add
sbb
add
add
fst
add
add
mov
repnz
xor
xor
mov
add
dec
xchg
add
inc
add
push
movb
addb
mov
les
pusha
add
inc
add
xor
lods
inc
mov
sub
lcall
cmp
mov
xor
add
add
clc
imul
add
jno
sub
add
aam
scas
xor
mov
mov
add
add
dec
dec
xor
add
insb
pusha
add
repnz
add
fnstcw
push
jmp
add
mov
int3
les
daa
pop
test
pushf
inc
add
dec
in
stc
lock
add
cmp
add
mov
pop
push
add
and
and
xchg
add
jae
sbb
xor
out
test
sub
ss
push
add
das
push
jge
inc
aas
pushf
jl
sbb
pop
pop
orl
add
add
add
add
sub
and
mov
xchg
push
mov
mov
movsl
in
fisubrl
data16
add
xlat
inc
add
gs
addb
mov
sti
jae
lcall
mov
lret
add
add
mov
repnz
mov
or
add
xor
sub
add
out
or
mov
add
pop
cli
and
xchg
adc
sbb
sbb
pop
adc
sbb
shr
jl
fisubrs
cltd
outsb
test
fcoml
add
fcomps
cli
add
test
out
lods
add
mov
mov
or
cmp
add
loope
add
push
add
mov
outsb
cmp
dec
stos
xchg
fdivs
jg
lahf
push
fnstenv
add
jmp
bsf
inc
add
add
ret
fiadds
inc
push
add
add
add
repnz
add
add
adc
jge
rolb
out
test
add
xor
cmp
pusha
add
inc
add
push
dec
or
xchg
scas
inc
add
enter
sbb
add
call
jnp
push
add
ret
movsb
add
cmpsb
add
jae,pn
add
or
add
add
mov
mov
cmp
clc
push
popa
xlat
rolb
add
inc
add
inc
aaa
leave
daa
fcoms
mov
sub
sub
add
mov
jns
stos
out
jecxz
add
dec
or
rcll
cld
xor
lcall
and
mov
icebp
sub
add
aad
and
aas
nopl
gs
inc
cwtl
pop
jmp
sbb
push
and
addr16
popa
into
jno
jl
add
out
fadds
mov
jmp
sbb
add
cmp
xchg
add
jmp
aaa
mov
add
cmc
cs
les
imul
movsl
jecxz
pop
mov
cmc
sub
add
inc
add
sub
add
mov
mov
