jne
lret
jmp
jl
push
movsb
cmpsl
jns
mov
and
add
add
inc
add
xchg
in
enter
pop
xchg
xchg
mov
jg
leave
cld
mov
pop
lret
lock
adc
inc
add
mov
nop
mov
rorb
adc
adc
imul
jnp
aam
test
fiaddl
jb
xor
mov
sub
les
cmp
pop
pop
daa
dec
and
mov
shlb
push
cltd
sub
xor
aaa
ret
sbb
and
adc
sub
add
push
imul
es
in
test
lea
fnstcw
add
sub
add
or
pavgb
fcompl
add
inc
ficoms
scas
mov
pop
movb
cmp
int
outsb
ret
popf
mov
cmp
sub
sub
sbb
les
shlw
fwait
jmp
dec
xchg
dec
stos
ret
cmp
hlt
cmp
xor
add
bound
cmp
mov
nop
mov
mov
xchg
jge
cmpsb
cmp
cwtl
es
inc
loopne
pop
movb
mov
and
inc
or
mov
push
repz
js
imul
mov
xchg
push
das
cmp
xor
push
imul
push
pop
pop
inc
aaa
inc
add
push
addl
out
sbb
or
jb
cli
into
mov
add
xchg
push
jno
push
jb
push
sub
xchg
dec
xlat
cmpsb
mov
outsb
stos
pusha
add
push
into
scas
add
arpl
movsb
cli
aaa
push
neg
loopne
cli
add
push
add
pusha
add
add
shr
jbe
outsb
mov
adc
div
movsb
in
test
xchg
loopne
and
and
cld
out
loope
lock
mov
mov
adc
in
mov
outsb
fiaddl
sub
imul
int
out
cmpsl
addr16
aas
inc
add
fs
or
dec
call
dec
adc
test
xchg
push
pop
outsb
mov
cmp
js
pop
push
aas
pop
sub
dec
outsl
or
adc
mov
arpl
rolb
sub
aam
or
hlt
cmp
fildll
or
shlb
cmpsl
stos
xor
test
stos
sarl
das
test
pop
and
rcrl
adc
and
movsb
in
pop
out
mov
inc
add
add
add
repz
pushf
addr16
stos
sbb
add
lods
pop
push
dec
outsb
xor
add
pop
mov
xchg
or
stos
sbb
lahf
dec
mov
push
stc
adc
lret
movsl
dec
test
jae
and
jne
adc
mov
pop
push
jmp
fldt
scas
aaa
or
outsl
add
and
mov
out
insl
mov
add
mov
add
inc
mov
daa
xor
xchg
dec
xor
sbb
dec
sub
lret
xchg
pop
imul
ficomps
fsts
inc
add
sarb
pop
sbb
ja
paddsb
lods
xchg
push
sti
mov
and
mov
xchg
pop
add
add
pop
xor
scas
add
xor
mov
jns
pop
jge
add
les
mov
fcomps
pop
dec
sub
mov
add
rolb
push
inc
add
add
cmpsl
add
xor
pop
outsl
dec
stos
out
add
jbe
push
lcall
cli
xor
mov
ror
aad
inc
add
dec
xor
jmp
aad
or
push
popa
cmp
jmp
sbb
push
call
jb
addb
frstor
add
xchg
and
nop
fstpl
or
lcall
sub
mov
push
bt
sub
cwtl
mov
mov
add
fwait
int
fnstcw
adc
or
sbb
sbb
or
aaa
cmc
fs
cltd
push
movsl
pop
mov
in
into
out
xor
add
or
pop
sbb
js
mov
add
stos
dec
mov
cld
std
sub
loop
ljmp
lods
mov
clc
aaa
aaa
pop
in
push
mov
add
sbb
cli
push
scas
test
xor
jae
add
gs
rolb
pop
xor
pop
cltd
pop
add
sub
test
fadds
lret
add
test
add
out
lds
arpl
pop
add
xor
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
addr16
add
or
addb
add
clc
jle
lret
mov
rorl
mov
js
daa
push
sbbl
or
leave
fisubl
aad
dec
inc
add
dec
jle
scas
movb
add
jo
aaa
bnd
cmpsb
pop
mov
arpl
ljmp
out
jp
mov
add
mov
lahf
stos
jp
scas
lret
cmp
into
lret
inc
add
out
pop
xchg
xor
push
push
mov
into
out
mov
pop
adcl
das
into
fdivl
and
pop
sub
cmp
popa
fisttpl
adc
call
inc
sub
lea
mov
sbb
insb
adc
add
roll
add
inc
add
divl
aaa
add
aaa
sub
jne
fsubs
add
push
sbb
rolb
pop
add
sbb
xchg
sbb
sub
add
and
lods
lds
add
loope
add
fimuls
js
xchg
push
and
loope
jecxz
xchg
add
daa
negb
addb
movsl
and
mov
shlb
dec
xor
sbb
aam
andl
pop
lahf
dec
fwait
inc
or
aam
or
fcomp
jp
jns,pt
arpl
ret
mov
add
cmc
dec
mov
fwait
das
ljmp
imul
mov
pop
in
add
inc
jg
dec
lret
cmp
les
shll
mov
xor
xor
jle
add
mov
pop
out
dec
mov
dec
adc
sbb
flds
mov
out
mov
or
jae
lcall
adc
dec
sbb
mov
mov
add
sbb
push
inc
mov
add
fmuls
push
inc
insl
adc
push
in
pop
fadd
add
dec
scas
sub
std
aam
lds
mov
cmc
lods
jg
stos
jmp
mov
dec
sbb
std
push
cmpsl
fsts
and
mov
cmp
cmp
icebp
push
stc
pop
mov
sub
add
xchg
sub
daa
scas
addb
ss
add
lret
add
cmp
cmp
push
mov
fs
out
push
xchg
roll
sahf
cld
aas
rolb
out
adc
inc
add
fwait
stos
cmp
jl
and
iret
add
jle
ljmp
jge
out
add
inc
add
mov
rcll
add
dec
les
int3
lahf
aad
pop
sbb
mov
push
sbb
mov
aam
jb
sbb
clc
mov
pushf
mov
jno
xchg
adc
mov
mov
je
or
js
push
adcl
cmp
iret
pushf
fsubrp
int3
inc
add
rcll
mov
inc
and
xor
and
shll
or
push
mov
and
push
mov
and
cli
mov
test
loop
je
test
and
scas
and
push
jb
add
mov
movsb
aaa
addr16
mov
push
sbb
jns
push
cmp
enter
or
mov
sbb
cmp
test
sahf
out
daa
fwait
rolb
cmpsl
into
popf
jmp
push
push
add
adc
lret
movsl
hlt
inc
fcmovnbe
xor
call
xlat
es
je
rclb
mov
les
xchg
clc
adc
pop
mov
sbb
add
fisttpll
addr16
fsts
data16
cld
or
sub
cwtl
hlt
inc
mov
xchg
scas
mov
push
mov
sbb
and
push
push
into
xchg
xchg
fisttps
cwtl
out
sub
int3
ja
ret
aad
out
in
push
pushf
add
aam
add
mov
and
out
scas
ds
pop
or
pushf
movsb
xor
xor
inc
add
sub
sbb
add
ror
mov
xchg
pushf
pop
pop
jge
xchg
leave
cwtl
lock
into
test
add
adc
add
fsubrs
mov
mov
sahf
xor
or
cli
dec
daa
sbb
nop
adc
push
inc
add
xchg
jo
into
cmp
add
jb
icebp
add
movb
add
sub
loope
mov
add
mov
nop
pop
sbb
mov
xchg
addb
clc
jg
mov
sub
dec
and
movsl
jecxz
push
add
push
shll
stc
cmpl
fdivr
in
fidivrs
push
pop
inc
jno
movsl
mov
add
les
adc
popf
fisubl
push
or
pop
scas
fistpl
iret
xor
ss
mov
mov
push
mov
stos
addb
and
sub
pop
stos
jl
pavgb
les
mov
fisttpll
add
in
push
lock
and
test
xchg
lcall
add
xchg
outsl
pop
inc
and
loop
mov
rcll
add
sbb
test
test
lret
pop
cwtl
or
movsb
and
inc
add
dec
mov
pop
xor
adc
ret
test
rcll
test
aas
pop
xchg
jl
rolb
pop
cmpsl
lods
pop
popa
xchg
sar
aaa
lea
push
cmp
inc
add
inc
gs
adc
mov
enter
rolb
jecxz
xchg
pop
xor
push
test
add
mov
add
cmpsb
out
cmp
jg
add
js
js
mov
xchg
arpl
stos
es
push
adc
dec
cmp
xor
fildl
mov
push
sbb
arpl
inc
add
mov
xchg
add
add
out
ja
xlat
in
cld
imul
jge
loop
sub
mov
lcall
mov
add
mov
stc
inc
jbe
add
add
sbb
popa
lods
lret
xchg
and
and
out
mov
testl
cmpl
jecxz
imul
cmp
jne
rorl
adc
testl
add
add
negl
mov
lret
sbb
adc
fcom
dec
jae
sub
lods
xchg
out
cltd
outsl
and
sub
xor
or
add
dec
jnp
pusha
add
mov
lahf
adc
addb
add
fdiv
mov
pop
in
dec
mov
sub
lods
cmp
inc
sub
sub
popa
xchg
mov
xchg
into
fsubr
stos
or
inc
adc
in
sahf
pop
xchg
pmulhuw
pop
cmp
sub
or
adc
mov
add
fnstsw
mov
push
ljmp
pop
cmp
pop
or
setg
repz
add
stos
xchg
addl
xchg
fs
les
sub
sbb
jb
in
aaa
out
jo
insb
lea
xchg
adc
ror
inc
xchg
xchg
mov
xacquire
scas
flds
inc
ret
xor
test
mov
aas
inc
add
sub
in
std
mov
ss
push
dec
loop
push
movsb
sub
pop
stos
int
sub
aad
push
xchg
sbb
outsl
add
cmp
cmp
cmpsb
jl
testb
cmpsl
jmp
pop
test
cmp
movsl
sbb
xchg
sbb
addb
adc
ja
std
jg
pop
sub
pop
addb
add
out
or
cwtl
icebp
jae
lds
pop
push
dec
jne
popf
push
gs
xor
mov
das
jl
xor
pop
bound
out
xchg
jmp
iret
je
push
mov
in
add
dec
pop
cli
add
sbb
add
add
ljmp
or
or
xor
push
cli
test
xchg
pop
into
xor
jne
fsqrt
cmp
add
lret
add
imul
leave
into
pop
pop
dec
stc
sbb
jmp
mov
movsb
imul
add
rcr
mov
push
out
mov
add
pop
xchg
lods
mov
push
daa
test
pop
push
dec
xchg
ja
jae
xor
add
in
bound
jl
and
fimuls
fiaddl
aam
add
lea
add
rolb
mov
icebp
mov
adc
jb
mov
aaa
sbb
int
cli
rolb
adc
mov
mov
movnti
cmpsb
in
mov
pop
clc
xchg
sub
inc
push
dec
dec
cmc
fsubr
sbb
jae
test
insb
push
add
mov
outsl
das
mov
xorl
jae
mov
cld
lods
in
inc
adc
fstpt
push
test
push
and
add
add
jge
pop
stc
jnp
imul
lcall
sbbl
jns
fyl2x
gs
addr16
imul
add
add
mov
or
pop
rcrl
rolb
repz
pop
xchg
outsb
movsl
inc
add
sahf
sahf
dec
cmp
dec
inc
add
mov
movb
add
or
pop
scas
mov
cmp
cwtl
lahf
pop
pop
popa
xor
cltd
into
mov
rolb
mov
pop
out
rclb
cmp
mov
lahf
addr16
jmp
out
or
int
mov
sahf
dec
imul
testl
pop
and
mov
loopne
jmp
push
and
arpl
mov
dec
and
in
outsl
notb
pop
mov
or
ja
pop
cmp
pop
leave
mov
outsb
stc
xor
jne
pop
outsl
insb
mov
pop
aas
popa
aaa
xchg
mov
movb
aaa
vmovapd
dec
inc
add
adc
mov
mov
pop
ficoms
lock
add
mov
in
int3
dec
sub
cmp
dec
mov
mov
jb
xchg
pop
ja
mov
daa
test
add
jge
lock
jmp
in
xchg
scas
stos
aaa
loop
xchg
push
lods
ret
add
push
pop
dec
mov
test
mov
adc
icebp
jl
pushf
out
mov
add
fcmovbe
adc
cmp
xchg
shll
fidivs
sub
pop
dec
icebp
into
jl
mov
add
pop
push
jne
test
out
add
inc
add
push
push
add
jno
lret
sub
push
dec
iret
pushf
xor
add
jb
mov
cmp
mov
out
or
push
rol
cmpsl
rol
jmp
je
fsts
xor
xor
out
xchg
add
sub
jecxz
cld
mov
dec
pop
jl
lret
fs
mov
adc
std
sbb
push
arpl
xchg
and
xor
push
add
add
addr16
add
add
or
or
mov
ds
or
adc
sub
ja
mov
inc
add
or
aam
and
clc
cmpsb
pusha
add
add
lret
ss
das
enter
mov
xlat
movb
sub
add
xchg
push
add
sbb
lds
outsl
cmp
std
adc
and
sub
mov
idivb
subl
push
stos
inc
add
pop
push
push
or
and
popf
aad
mov
into
pusha
add
lods
icebp
mov
jge
pop
cwtl
sbb
notl
inc
add
mov
js
loopne
jg
cld
or
mov
pop
int
mov
and
push
filds
jne
pop
dec
pushf
lea
into
in
lret
pop
data16
add
xlat
mov
jl
lods
cmp
pop
jns
pop
cmp
leave
mov
mov
imul
cmc
lret
out
cmp
jg,pn
addb
lret
push
dec
stc
sub
mov
pop
loopne
inc
aas
jp
fdivrp
pop
sbb
dec
sub
test
add
add
dec
pop
test
inc
inc
add
das
addl
inc
add
divb
std
inc
add
outsl
and
shlb
ds
ss
mov
pushf
mov
repnz
loope
imul
ret
push
add
rolb
mov
aas
frstor
fwait
cmp
mov
mov
and
xchg
mov
into
add
cmp
add
mov
push
bound
xor
xchg
mov
aas
add
inc
into
xchg
or
cmp
push
add
and
add
add
test
test
add
adc
inc
add
push
outsl
lahf
push
loopne
add
and
adc
mov
les
xchg
or
mov
loope
mov
in
add
std
insb
push
divb
jbe
inc
xchg
inc
icebp
and
pop
stc
mov
insb
mov
add
lods
xchg
mov
addb
std
das
popa
pop
mov
mov
fwait
inc
add
popa
sub
pop
xor
xor
arpl
mov
xor
adc
jb
movsb
lock
xor
mov
jnp
add
adc
test
lahf
sbb
arpl
mov
adc
inc
sub
mov
pop
push
lods
sub
es
push
jp
jne
add
add
push
lds
popa
lahf
daa
fdivrl
and
adc
movsb
out
inc
add
addb
dec
in
mov
xchg
jle
fists
mov
pop
or
push
add
test
xor
or
add
mov
repz
mov
dec
les
mov
xchg
inc
mov
lret
ja
fucomip
adc
andl
addb
xchg
inc
add
mov
iret
daa
in
inc
add
pop
ret
xchg
xchg
gs
inc
pop
and
rol
add
loope
xchg
and
xor
stos
jmp
mov
jecxz
js
adc
add
daa
and
mov
inc
sarl
std
cmp
bound
clc
mov
fsubl
sbb
dec
pop
adc
push
mov
mov
lds
sti
mov
in
inc
loop
sbb
mov
sbb
inc
add
bound
push
test
lret
pop
xchg
testb
addb
add
adc
dec
cltd
into
inc
cmp
loope
pop
jge
in
lock
repz
add
and
add
dec
je
and
test
inc
pop
mov
pusha
add
jg
xor
int
or
add
test
bound
add
and
jo
cld
mov
lods
xchg
loopne
inc
sub
pop
das
loopne
movb
dec
sub
pop
sbb
xchg
xchg
push
aam
cmp
jg
or
lea
shll
nop
jns
pop
jo
insl
iret
jae
sti
icebp
pop
jbe
lcall
push
lods
mov
mov
ror
popf
aas
push
cwtl
sbb
test
lods
lret
lahf
jne
and
adc
mov
cltd
scas
insl
pop
or
popf
ss
std
sub
push
fistps
add
add
mov
xor
add
imul
jno
addr16
clc
fnsave
dec
in
cmp
mov
or
popf
push
out
cmp
add
push
orl
adc
and
cmp
add
mov
xchg
insb
or
pop
mov
add
jmp
lds
sbb
jne
fucom
xchg
enter
fnstsw
mov
jge
xor
adc
jno
js
pop
movb
jne
xor
pop
in
aaa
and
fcompl
jns
mov
cmp
pop
cmp
xchg
fdivs
ljmp
mov
mov
lods
add
add
sbb
push
mov
les
jne
add
hlt
paddsw
mov
mov
xor
xorl
es
xor
ret
mov
sub
int3
push
sbb
jge
jmp
add
or
or
imulb
dec
nop
dec
mov
sbb
fimuls
jnp
add
adc
mov
or
pop
scas
xchg
pop
adcl
add
cmpsb
cmpsb
aad
or
movb
fsts
insl
dec
ret
sbb
loop
insb
push
ret
int3
into
xor
pop
and
jne
xor
mov
and
inc
fmuls
jmp
inc
mov
sahf
inc
add
std
mov
lock
add
add
add
and
ficomps
fwait
je
shr
and
pop
je
lods
loope
push
sub
jecxz
add
add
push
cltd
sub
jns
add
adc
pusha
add
sub
add
mov
shll
mull
scas
arpl
out
push
hlt
outsb
push
adc
or
stc
xchg
cmp
xlat
or
and
sbb
repz
push
jbe
mov
mov
inc
add
mov
pop
jns
add
fimuls
sub
push
or
add
inc
cmpsl
imul
es
scas
outsl
ret
fisubs
xor
pop
addr16
dec
inc
add
in
out
mov
into
dec
les
loop
or
into
mov
sbb
stos
rolb
std
stos
cwtl
cltd
pop
mov
addr16
fidivrs
stc
xchg
bound
int3
cs
aas
xor
add
repnz
mov
adc
jl
ljmp
xor
test
test
cmp
inc
pop
xchg
and
js
in
add
nop
leave
and
leave
testb
mov
sarl
mov
cmp
mov
push
movb
adc
add
dec
cmpsb
sub
add
jb
or
dec
mov
test
adc
add
mov
push
add
out
sub
jecxz
aad
leave
mov
int
mov
ret
xor
add
das
sub
jo
xor
mov
jl
stos
pop
add
scas
cs
lea
leave
addb
sbb
std
xor
lock
imul
mov
jae
add
in
movsb
fwait
push
jnp
add
dec
inc
push
lret
lret
outsl
mov
mov
test
stos
mov
repz
add
mov
jno
mov
sub
push
xor
lock
add
out
xchg
gs
cli
mov
neg
cmp
jb
jb
inc
shrl
mov
dec
mov
in
add
mov
into
jge
and
jp
push
insl
les
jle
add
fldenv
mov
push
inc
add
scas
push
sti
movsl
or
push
adc
jnp
add
and
pop
int
add
fwait
movsl
pop
mov
push
cmp
cwtl
push
push
cmp
ljmp
shl
imull
hlt
mov
repnz
rolb
sbb
adc
push
add
jo
xchg
jo
sub
movsl
adc
addb
stc
jb
jne
jbe
insl
es
stc
fldenv
xchg
js
add
cmp
pop
sbb
mov
ficoms
push
popf
int3
imul
cmc
aam
cmp
fistpl
outsl
popl
cmp
imul
dec
and
mov
sahf
inc
ljmp
popf
out
xchg
addb
add
or
inc
lcall
sbb
fdivr
ret
xchg
and
inc
jns
testl
pusha
add
mov
push
rol
add
pop
and
std
call
add
pop
pop
and
test
add
sub
mov
je
bound
aad
mov
xor
pop
rcrl
das
in
add
lock
mov
sahf
push
das
shrb
or
addb
imul
test
stc
xchg
pop
and
sbb
mov
xor
cwtl
outsl
dec
sbb
jae
int3
js
mov
xchg
push
add
ss
ja
lods
sub
add
into
stc
pop
lea
sbb
add
add
jle
shl
xchg
inc
in
fisubrl
sub
adc
or
out
lock
dec
inc
add
adc
incb
add
pop
cmpsl
push
stos
pop
cmp
sbb
pop
addb
mulb
rolb
cld
cmp
out
mov
mov
add
popf
add
mov
pop
push
xorl
lods
movsb
dec
into
xchg
and
inc
add
iret
xchg
sbb
mov
add
out
mov
add
sub
lcall
push
or
mov
outsl
xor
add
add
std
lahf
subl
mov
repz
fwait
idivl
shll
sub
fmull
sub
jl
and
cmc
xor
jnp
and
mov
add
mov
push
or
gs
int3
cld
cmp
dec
cli
aam
sub
notb
sti
push
and
aam
sbb
pop
push
add
xchg
sbb
aaa
fldl
in
ret
into
mov
cli
inc
add
movsl
xchg
mov
int3
mov
fiaddl
inc
xchg
call
imul
push
test
in
ss
repz
inc
add
xchg
mov
sbb
push
push
push
adc
push
scas
int
pop
or
add
test
fwait
lea
and
mov
inc
cltd
addb
ds
addl
mov
add
mov
and
jbe
pop
loopne
test
dec
mov
in
mov
add
pop
ss
lret
imul
jp
push
stos
std
les
aam
sub
jp
mov
xchg
mov
mov
in
addr16
jne
mov
insl
pushf
xor
cmpsl
aaa
cmp
pop
add
dec
ret
js
add
pop
punpcklwd
or
lock
cld
adc
push
add
jle
and
or
cmp
push
mov
xchg
xor
add
mov
xchg
inc
sbb
fisttpl
addb
push
rolb
ffreep
add
mov
push
lea
es
in
push
outsl
mov
add
stos
dec
rcrb
stc
mov
loopne
inc
sub
rolb
aas
mov
push
sub
add
mov
or
sbb
mov
add
bound
and
cli
pop
xlat
dec
push
xor
jmp
sub
mov
xchg
rolb
insl
mov
add
add
cwtl
cmpsb
add
ret
pop
cli
and
push
leave
and
dec
xor
fmuls
sbb
sub
cmpsl
loope
in
jp
jb
mov
sbb
cmp
insb
xchg
test
imul
xchg
dec
idivl
add
xor
add
jl
jl
sbb
pop
sub
add
enter
pop
pop
sbb
popa
pop
dec
add
dec
mov
jb
lods
fsubr
xchg
sbb
add
mov
add
sub
mov
dec
pusha
add
and
pop
add
out
cmp
add
addb
xchg
adc
sahf
jbe
and
dec
xor
jge
in
outsl
xor
xchg
fisttpl
push
adc
in
pop
jle
outsl
push
cld
into
pop
push
jno
push
sbb
add
mov
add
ljmp
mov
add
push
add
inc
add
jno
add
xchg
or
mov
addr16
ret
inc
repnz
out
or
adc
out
sbb
push
jmp
in
aam
add
add
add
insb
leave
mov
mov
call
korw
icebp
adc
or
add
and
xchg
inc
addl
into
sub
inc
add
clc
ret
cmp
incl
fcompl
inc
push
fcomps
imul
jne
jns
sbb
lcall
add
dec
add
loopne
xchg
xor
add
sub
jb
and
outsb
push
das
mov
inc
add
inc
add
lcall
jns
pop
push
stos
stc
mov
inc
sub
stos
test
lods
or
outsl
cli
test
push
mov
outsb
jbe
ja
add
mov
jmp
add
rcll
stos
or
scas
jnp
insl
jle
add
sti
cs
xor
out
scas
sbb
into
shlb
mov
loope
hlt
pop
adcl
add
fiaddl
inc
add
mov
and
int3
lahf
lcall
addr16
fsub
jl
idivl
adc
add
adc
aaa
fwait
andl
add
add
pop
cmp
mov
cmp
add
add
lret
flds
add
test
inc
add
pop
test
cli
and
push
inc
add
and
lock
or
add
mov
mov
jmp
sahf
mov
add
sub
add
add
inc
add
add
add
idiv
inc
add
mov
dec
shl
gs
push
aaa
dec
sub
loopne
xchg
jno
out
sub
xchg
push
aad
inc
mov
adc
xchg
adc
push
add
fldt
lods
stos
pop
sub
je
fs
fsubrs
pop
mov
sbb
hlt
xchg
enter
sbb
push
dec
adc
cltd
imul
rolb
push
pop
push
mov
pushf
add
ds
mov
cmpsl
mov
or
test
js
cmp
je
movsb
dec
xchg
lret
mov
imul
and
inc
add
xor
movsl
adc
das
sub
outsl
cld
jge
mov
pop
adc
lcall
out
clc
and
les
cmc
ret
mov
lea
lret
leave
lds
add
cli
pop
fisttpl
aaa
bound
mov
lds
es
mov
pop
jnp
loope
adc
or
push
stos
cmpsb
loop
frstor
xor
add
dec
insl
dec
in
fisubrl
stos
std
movsb
adc
mov
xor
test
mov
inc
add
add
xor
pop
push
mov
lcall
dec
jbe
add
xchg
stc
bound
mov
into
in
ret
mov
mov
xchg
inc
add
stos
aas
clc
lret
inc
sti
mov
movsl
repnz
add
mov
xchg
fiadds
in
cli
stc
test
or
jg
lock
xor
sets
and
js
add
shlb
mov
adc
repz
pop
call
add
pop
nop
mov
fwait
xor
adc
in
ds
add
int3
jnp
push
test
mov
and
pop
mov
bound
mov
add
addb
out
lods
jp
add
push
movsb
outsl
jecxz
cwtl
lds
mov
test
push
cmp
mov
scas
emms
inc
add
in
sahf
hlt
sbb
test
xorl
lahf
mov
popa
addr16
mov
mov
add
scas
sbb
jb
mov
adc
fs
rorb
pop
jae
add
data16
xchg
cmp
add
es
push
rclb
sub
mov
enter
jo
mov
int
sub
dec
scas
pop
fadd
sahf
lret
jno
jno
dec
mov
mov
mov
cltd
or
jge
fxam
addb
mov
push
movsl
push
daa
mov
rolb
in
nop
fwait
addb
loop
rcll
mov
add
jae
gs
aaa
pop
rcrl
ret
fidivl
pop
js
sti
test
inc
jb
cs
jmp
lds
stos
add
clc
cmp
adc
lds
xor
add
cltd
imul
addb
movb
popa
loope
add
add
les
mov
add
outsl
or
add
insb
int
sub
sbb
sahf
xchg
icebp
pushf
leave
rol
and
push
xor
add
movsb
ljmp
add
fimuls
movb
inc
add
pop
shrb
jbe
push
mov
mov
jecxz
add
clc
rclb
jae
pop
and
rolb
cmpsb
or
add
xor
dec
into
sub
push
push
mov
xor
out
add
push
ljmp
out
cmp
xchg
inc
xchg
lret
lcall
pusha
add
mov
cmp
push
fwait
outsl
testl
jbe
xor
addb
into
lret
add
mov
sbbl
push
out
enter
test
pop
sub
les
xor
pusha
add
mov
notl
jp
sti
pop
push
rcl
inc
enter
push
stos
mov
je
add
inc
fstpl
jmp
dec
push
pop
negl
add
aaa
jmp
jbe
outsl
and
int3
fimuls
xor
fldenv
add
dec
lods
mov
test
mov
fwait
adc
jecxz
mov
scas
jg
add
inc
sub
pop
popf
mov
sbb
lods
mov
jl
jb
inc
push
test
mov
push
jmp
mov
out
data16
jl
add
idivb
out
or
xor
push
sbb
push
scas
jnp
pop
push
in
dec
pop
jbe
xchg
lock
mov
or
jl
mov
movsl
mov
cmpsl
jae
outsl
or
xchg
ja
add
hlt
xor
add
lret
pop
out
loope
jb
xchg
nop
cmp
mov
cmp
cmc
dec
in
scas
or
and
jp
cmp
movsb
or
subl
add
jb
test
sub
add
scas
jp
lds
cli
ss
fs
sub
add
pop
mov
push
push
cmp
xchg
movsb
arpl
mov
shlb
movsl
in
movb
sbb
add
adc
outsb
mov
adc
push
mov
and
nop
stos
hlt
push
popa
xor
and
add
leave
add
sub
movb
jns
sahf
sbb
cmp
cli
xchg
xchg
mov
shlb
test
add
mov
je
fldcw
addr16
int3
cmp
cmpsl
push
lret
xchg
xor
add
in
inc
aam
test
add
ljmp
addb
add
movb
mov
sahf
in
xchg
jno
sub
push
pop
rcrl
add
dec
add
icebp
out
stos
in
lds
jg
add
mov
mov
sbbl
sub
lahf
mov
mov
std
xor
stc
mov
lahf
mov
add
cmpsl
xchg
add
dec
push
or
fiaddl
cwtl
movsl
addl
add
dec
sub
xchg
mov
add
fidivs
mov
add
jns
pop
enter
adc
std
cmpsl
test
lea
add
add
ficoms
cmpsb
fwait
pop
loop
inc
xchg
daa
mov
add
loope
mov
ljmp
and
add
dec
call
lods
dec
imulb
xchg
addr16
cmp
pop
pop
dec
mov
test
lcall
jecxz
sub
pop
movsl
inc
aam
ficoms
mov
mov
sahf
jp
in
mov
ja
stc
jnp
insl
nop
cmpsb
mov
push
add
cmp
loopne
sbb
shll
inc
sbb
sbb
xchg
ficoms
out
mov
stos
jge
stc
mov
push
dec
scas
lea
xchg
mov
fsubrl
cmp
leave
lret
pusha
add
xor
or
add
aaa
daa
adc
insl
mov
je
push
sub
test
add
lret
outsl
inc
mov
lds
jne
mov
out
adc
mov
jnp
notl
mov
add
jae
xor
mov
inc
add
mov
das
nop
imul
cmp
mov
sbb
icebp
cmpsb
fimuls
and
inc
pop
push
mulb
outsl
xlat
sti
ljmp
adc
test
fimuls
lcall
add
pop
push
pop
and
dec
push
sbb
lahf
out
cmp
xchg
push
out
dec
mov
jmp
inc
add
mov
or
jns
sub
pop
push
inc
add
push
add
cmp
imul
cmp
data16
xor
xor
push
push
outsb
mov
add
and
and
and
iret
jno
jecxz
pop
insb
popf
lods
xchg
xlat
mov
daa
mov
in
inc
dec
std
test
cmp
jg
addl
mov
fadds
mov
push
cmp
push
jb
xchg
scas
or
xchg
cmp
inc
inc
add
adc
sahf
xor
pop
scas
inc
add
xchg
mov
xor
jnp
add
out
les
dec
push
dec
inc
mov
or
adc
or
notl
popa
pop
notl
inc
add
adc
jmp
sbb
push
push
add
mov
ja
cmp
inc
add
add
btr
imul
mov
or
dec
dec
enter
jge
inc
add
xor
mov
jl
push
fs
shr
mov
jle
xchg
mov
adc
mov
add
out
mov
mov
inc
mov
in
or
add
cmp
test
mov
repnz
mov
add
add
cmc
push
in
inc
add
adc
ds
ss
int3
in
movsl
test
lds
push
lcall
add
lret
mov
xchg
xchg
cmp
and
ret
out
jl
sub
add
jo
inc
mov
daa
cld
loop
pop
sub
jmp
pop
lea
mov
int
mov
fisubl
mov
fildl
sub
pop
and
fisubl
or
mov
scas
pop
rclb
add
jl
dec
or
test
pop
enter
and
xor
mov
inc
int3
outsb
push
add
add
in
aam
lret
sahf
data16
cli
ljmp
cwtl
cltd
shlb
fwait
mov
lahf
jle
jle
xchg
add
hlt
xor
je
and
loope
mov
out
stc
test
pop
loopne
out
or
das
lahf
lahf
shll
ret
mov
cmp
addr16
dec
add
add
xchg
xor
xchg
push
adc
rcrl
mov
addb
add
in
pop
mov
jne
lock
pop
lret
test
adc
addl
add
daa
sbb
mov
mov
inc
fnstcw
loopne
aam
mov
loop
scas
pushf
lahf
ja
push
jecxz
xor
cmp
add
jmp
cld
leave
or
jg
mov
cli
sub
jns
add
test
jo
lret
cmp
loope
in
test
popf
or
xor
jp
stos
in
pop
sbb
dec
adcl
dec
and
mov
jmp
sahf
mov
add
jne
hlt
jecxz
pop
and
push
jbe
add
sar
sbb
add
lea
sbb
daa
mov
jecxz
mov
data16
mov
jge
inc
mov
loope
push
ljmp
movsl
ja
sub
add
or
je
hlt
add
incb
hlt
stos
inc
add
jb
or
movsl
es
sub
stc
cmp
and
cltd
inc
add
out
inc
add
cmc
arpl
xor
cltd
enter
mov
cmpsb
and
xchg
cs
add
lret
nop
cmpsl
add
mov
lahf
push
push
das
in
loope
rolb
add
push
out
lods
fisttpll
jmp
sbb
and
cwtl
mov
push
dec
pop
jo
pop
comiss
cltd
insb
and
dec
adc
push
xchg
inc
lret
inc
add
xchg
push
addb
repz
sbb
xor
lret
das
repz
or
hlt
adc
mov
scas
addb
movsl
fldt
sbb
int
push
add
add
pop
pop
mov
idiv
sub
js
rcl
cwtl
fistps
mov
or
subl
or
rorb
sub
xchg
xlat
test
sahf
daa
jle
insb
pop
inc
add
ds
jle
subl
iret
addb
mov
lret
dec
leave
dec
or
jae
add
add
sbb
cmc
inc
add
sahf
and
mov
mov
dec
mov
jg
insb
dec
out
mov
test
xchg
sbb
sub
mov
fmuls
jo
lret
pusha
add
mov
mov
shr
xchg
clc
repnz
jo
mov
into
inc
add
mov
push
and
shrb
in
daa
dec
adc
movsl
sub
push
and
xchg
insl
pop
fsubrs
jb
fs
scas
arpl
es
xor
mov
mov
shr
inc
push
add
bound
or
pop
mov
mov
push
test
sub
cmp
cli
je
pop
mov
sbb
int3
lret
rorl
pop
mov
add
sti
jle
jo
repnz
mov
jbe
pop
lcall
icebp
scas
sub
jp
or
popa
addb
add
pop
lret
test
addr16
cli
in
int
xchg
arpl
sbb
add
ficoml
fdivr
mov
lret
cmc
test
fcmovbe
sar
and
xchg
aam
xlat
shlb
jbe
push
add
push
mov
push
and
jb,pt
sub
movsb
cwtl
cmp
pop
push
outsb
or
gs
jb
pop
bound
lcall
mov
pop
mov
pushf
sub
adc
rolb
addb
cmp
add
or
jle
pop
repz
adc
or
and
mov
xor
dec
shlb
dec
or
xchg
mov
add
clc
xchg
out
sbb
lret
or
push
jp
std
leave
daa
mov
jo
add
es
scas
mov
mov
scas
mov
repz
lcall
jge
add
loop
lods
mov
clc
fimuls
insl
es
jae
mov
repz
or
add
ja
les
push
lea
movsl
jecxz
cwtl
out
mov
mov
jl
add
cltd
mov
add
or
imul
jecxz
and
xchg
sbb
jmp
jo
jmp
fisubrs
add
shrb
push
add
and
cmp
pop
popa
fldcw
push
scas
sub
pop
es
sbb
cmp
mov
add
dec
inc
or
incl
mov
add
push
pop
in
pop
loopne
add
fdivrl
add
or
rolb
cs
and
dec
inc
xor
shl
sbb
pop
movsb
insb
pop
rcr
aam
shlb
mov
jno
sub
add
mov
out
hlt
pop
add
push
es
pop
mov
fistps
mov
out
push
add
cmp
lahf
sub
cltd
imull
jo
mov
imul
mov
jne
inc
push
and
lds
std
lret
xchg
dec
xchg
call
mov
imul
and
cwtl
push
call
sbb
outsb
bound
fs
icebp
stos
gs
push
sbb
add
outsb
ja
pop
ret
sub
xor
idivl
call
or
out
cmp
mov
out
mov
sbb
sub
xlat
dec
dec
add
lret
push
addb
jbe
mov
add
xor
jns
xchg
lcall
in
notl
das
sub
ja
xchg
mov
scas
cmp
sub
out
push
aaa
or
fsubrl
repnz
add
jbe
fistps
dec
enter
pop
jae
arpl
mov
add
imul
dec
inc
add
jbe
call
insb
add
js
aas
sub
mov
mov
out
dec
sub
push
fistpll
pop
inc
add
cmp
xchg
scas
fstpt
ds
and
mov
and
aas
imull
repz
pop
iret
xlat
stos
push
nop
addl
mov
jbe
repnz
lahf
daa
push
ds
push
xchg
jno
cmp
add
push
shrl
push
sbb
arpl
dec
sbb
add
mov
add
xor
inc
add
imul
mov
repz
mov
inc
xchg
sbb
das
fidivrl
int3
inc
mov
stos
inc
loopne
shr
lods
adc
js
andl
add
jns
je
repz
fstpt
icebp
mov
cmp
iret
out
inc
add
loope
xchg
sti
cmp
gs
push
mov
imul
add
add
lret
test
aad
pop
pop
pop
loope
inc
add
mov
xor
imull
icebp
adc
call
mov
loope
je
insl
in
pop
rolb
int3
mov
jg
movb
jno
add
cmp
fdivr
sub
cmovno
adc
ja
sbb
into
es
adc
add
int
xor
int
dec
inc
add
cmp
ret
fwait
add
cwtl
mov
je
pop
pop
xchg
add
push
xchg
cld
pop
in
cmp
jl
sbb
aam
arpl
fsubrs
inc
push
clc
or
push
jl
cwtl
push
mov
xchg
and
mov
rcrb
push
fldt
leave
mov
jge
and
fimuls
inc
mov
mov
aaa
xlat
scas
add
jne
imul
fstpl
adc
pop
adc
cli
iret
push
add
repnz
push
add
fsubr
pop
fprem
scas
mov
jae
add
in
xchg
xchg
pop
xchg
mov
add
add
and
mov
xchg
xor
add
inc
cwtl
adc
sbb
push
cwtl
pop
daa
inc
xchg
sbb
or
aaa
loope
test
inc
add
pop
mov
fwait
addb
pop
mulb
jecxz
in
scas
lcall
int
add
punpckldq
fimull
outsb
ret
mov
lahf
sub
or
fwait
pop
add
xchg
xor
aad
jb
and
out
and
pusha
add
sbb
inc
test
lds
ljmp
call
into
out
lods
bound
insb
inc
add
bound
push
arpl
inc
pop
mov
enter
and
addb
add
xor
fwait
push
pop
lea
sbb
push
adc
adc
add
test
loope
or
jp
aas
nop
sub
iret
clc
jge
hlt
cwtl
cmp
rclb
push
ss
mov
repnz
movsb
roll
mov
cmpsb
push
sbb
in
imul
loop
and
pusha
add
call
push
jecxz
mov
xor
int3
lahf
fdivrs
sbbl
fidivrl
in
cmp
cmp
and
stc
imul
mov
mov
insb
and
xchg
pop
lcall
sti
mov
shl
inc
add
mov
xor
or
leave
mov
lods
dec
iret
std
jns
mov
dec
jl
inc
add
inc
add
adc
add
in
mov
fsubrs
ret
push
aas
in
xchg
fmulp
mov
pop
jnp
stos
shll
les
mov
sub
stos
mov
aam
pop
sub
jge
cmc
lods
popf
sub
sar
movl
add
ljmp
or
fld
add
loop
sti
xchg
ficoml
add
push
jns
add
mov
cli
pop
push
pop
imull
push
jecxz
dec
cmp
inc
cwtl
xchg
les
aaa
inc
add
push
pushl
add
addl
arpl
push
sub
cld
cmp
loop
arpl
xchg
mov
sti
xor
push
repz
cwtl
pop
les
sub
loope
xchg
adc
cwtl
xorl
fwait
lds
add
push
add
fsts
lret
pop
pop
xor
sbb
lahf
notl
stc
fstpl
iret
push
stos
xchg
addr16
shrl
add
arpl
add
add
test
pusha
add
cld
bound
aam
addb
adc
lods
repz
popf
out
cs
sbb
jb
cmp
std
hlt
push
mov
or
fildll
imul
in
mov
fs
add
push
sub
loopne
xchg
jbe
in
add
mov
insb
loope
xor
push
cld
addb
cwtl
inc
ret
lods
push
xchg
fs
mov
sub
aas
mov
cmpsb
stos
xchg
aam
dec
push
inc
idiv
pop
test
nop
inc
xor
into
lods
leave
push
repz
mov
rcrb
outsl
loope
cmp
dec
lock
and
sub
jecxz
push
cs
mov
xor
sbb
push
ret
and
aaa
push
pop
jl
jns
xchg
pop
out
dec
and
or
cmp
mov
add
cmp
add
mov
out
sbb
cmpsb
insl
shrl
and
add
aaa
mov
inc
dec
iret
add
sbbl
jge
and
rclb
addb
cwtl
xchg
movsb
out
inc
cmp
dec
repz
bound
jb
sub
push
xchg
and
out
or
fistpl
push
add
dec
jns
rolb
add
jge
std
idivl
jae
lods
testl
add
xor
sbb
cltd
addb
aam
scas
pop
sahf
cltd
dec
mov
add
daa
push
push
dec
pop
push
xor
outsb
push
imul
push
add
int
inc
adc
add
mov
test
adc
lods
movsb
add
mov
in
inc
mov
int3
cmp
add
dec
or
push
int
fistl
add
lret
add
in
pop
mov
mov
xchg
rol
xor
add
mov
rolb
add
addb
scas
xor
insl
outsl
push
sub
push
add
insl
push
jg
pop
push
ljmp
pop
mov
xlat
cwtl
test
or
mov
hlt
dec
xlat
xor
stc
in
mov
popf
fildl
or
addr16
mov
out
pop
stc
adc
mov
bound
insb
iret
jns
push
xchg
call
and
popf
ret
imul
movsl
xor
push
jbe
cltd
push
mov
arpl
sub
mov
or
add
mov
add
add
add
pop
xor
cmpsl
dec
pop
pop
fwait
adcl
das
outsl
aam
mov
aam
sub
jg
pop
dec
sub
daa
ret
mov
mov
insl
or
push
aam
mov
xor
movsl
push
addr16
call
inc
add
dec
mov
jl
xchg
rcrl
xchg
push
dec
add
xchg
mov
mov
jmp
mov
sub
push
add
lahf
aas
cmp
dec
mov
sub
lods
cmp
inc
add
nop
pop
mov
adc
jp
and
jbe
stc
sub
xchg
aad
mov
sbb
jmp
call
cltd
pusha
add
mov
xor
jmp
popa
cmp
inc
repz
mov
sub
inc
add
add
push
push
add
mov
call
stos
in
add
lock
mov
mov
adc
dec
cmp
fnstcw
nop
popf
xlat
das
lcall
inc
in
fs
sbb
sbb
pusha
add
in
mov
addb
out
push
adc
daa
jg
mov
repnz
repz
loopne
mov
fiadds
lock
mov
xchg
neg
lods
rcl
stos
mov
fcmovbe
shrl
fisubrl
out
repz
scas
cwtl
sub
leave
fmuls
repz
push
cmp
add
or
add
idivl
inc
jae
cmpsl
lock
and
enter
sti
daa
mov
inc
add
mov
push
add
leave
sti
in
xor
and
add
dec
sbb
adc
mov
add
push
pushf
mov
add
movb
jbe
stc
add
enter
add
jge
xchg
sti
ja
adc
jo
gs
mov
push
xor
popa
add
jno
repz
xor
push
pop
sbb
push
arpl
lcall
inc
pop
or
repz
push
jge
je
shr
sbb
loopne
ljmp
setno
push
insb
mov
mov
daa
push
cmp
and
pop
sti
adc
in
pop
rcll
fadd
xchg
push
mov
mov
insb
inc
jbe
push
push
and
insl
xchg
xor
mov
xor
mov
je
insb
enter
pop
sti
cwtl
int3
sti
xchg
mull
add
scas
xchg
int
pushl
sbb
pop
cmp
jl
fsts
push
sub
xchg
stos
push
jo
cmp
and
mov
jge
dec
lds
sbb
sbb
jmp
outsl
mov
sbb
mov
and
lods
movb
mov
mov
cmp
pop
adc
in
jl
roll
add
mov
cltd
cmp
in
lea
and
test
jo
jo
xchg
ljmp
sbb
std
sub
pop
out
test
adc
rolb
mov
push
and
add
pop
das
mov
mov
imul
inc
add
call
cmp
shlb
sub
mov
call
loopne
jae
jno
or
lods
push
sub
sub
jno
not
roll
add
push
scas
cmp
push
dec
pop
outsl
push
push
sti
sub
and
pop
sbb
pop
push
add
das
lahf
sbb
stos
out
dec
lcall
shrl
mov
stos
and
add
cmp
pop
adc
test
lods
jo
xor
inc
add
std
ficomps
lret
pop
sbb
loope
scas
xor
inc
add
nop
cmpsb
sub
add
pop
dec
insb
cld
dec
xor
dec
xchg
movsl
and
jecxz
jno
mov
jp
stos
es
mov
mov
push
daa
faddl
clc
xor
add
aam
inc
add
mov
imul
in
sbb
in
jae
dec
push
adc
cltd
sub
push
xor
mov
movsl
inc
add
add
insb
inc
add
xchg
imulb
mov
add
addr16
mov
push
add
mov
std
push
add
out
push
movl
xchg
fwait
push
dec
pop
data16
fsubr
pop
adc
rclb
bound
mov
lea
fdiv
idivb
xor
in
xor
add
pop
mov
pop
mov
dec
je
dec
jae
xchg
loope
lahf
mov
mov
push
inc
add
push
mov
loope
divl
cmovno
mov
in
mov
dec
cmpsl
fs
add
test
fs
and
ficompl
mov
push
sub
mov
ret
dec
popf
jmp
lcall
push
add
das
out
push
push
mov
dec
xor
jecxz
aaa
mov
add
sub
push
jg
add
sub
jns
and
in
test
and
movsb
ljmp
add
add
lret
mov
lds
nop
loop
sub
add
loope
fcoms
or
scas
mov
mov
cltd
jle
add
imul
mov
ja
xchg
mov
aaa
sub
mov
out
clc
negb
mov
xchg
stc
fisubl
loopne
ds
add
adc
push
mov
addb
cmp
fmull
add
sarl
sub
mov
add
mov
mov
pop
fiaddl
jns
sub
lods
xor
aam
bound
repnz
xchg
sub
jge
push
arpl
popfw
inc
pop
addb
add
shrd
out
lock
int
pop
movsb
pop
fs
frstor
aaa
dec
xchg
and
insl
out
mov
or
mov
cmpsl
mov
pop
aam
mov
rclb
jl
pop
mov
xchg
adc
add
dec
vorps
xor
lret
mov
mov
add
fisubrs
fldcw
push
push
aaa
int3
push
dec
mov
js
test
or
and
xchg
and
adc
lahf
and
or
cmp
js
push
pop
int3
in
mov
push
adc
test
iret
add
mov
test
add
push
add
mov
cltd
cmp
add
mov
enter
or
arpl
stos
adc
cmp
mov
pop
loop
pop
xchg
add
loope
add
fisttps
add
sub
out
cmp
xchg
xchg
mov
in
jg
lods
xchg
aam
add
scas
sub
add
jl
into
lret
sbb
cmp
mov
or
test
dec
addb
add
inc
add
divl
ja
adc
roll
repz
inc
xor
out
mov
mov
xchg
sub
dec
enter
jno
les
lret
cmpsl
mov
mov
rcrl
cmpsb
push
les
mov
add
jb
push
icebp
inc
add
jnp
mov
pop
roll
ret
dec
dec
mov
pusha
add
add
inc
sbb
ss
bsf
jmp
js
adc
mov
sti
mov
adc
nop
lods
inc
add
outsb
les
fwait
mov
add
jle
xchg
rolb
dec
imul
push
repz
mov
or
sti
or
lds
cmp
rolb
mov
popa
dec
mov
add
adc
sub
push
les
add
inc
test
imulb
sub
repnz
insb
lahf
push
jmp
or
enter
test
and
in
inc
add
stos
ret
aad
add
or
inc
add
paddw
fsubrl
adc
add
jp
add
add
call
cmc
push
push
add
cmp
adc
jl
adc
adc
cli
xchg
inc
loopne
or
and
cmp
adc
xchg
sbb
inc
add
mov
pop
lahf
ljmp
fs
mov
jno
dec
call
popa
ja
push
add
aam
inc
add
test
sbb
jg
jae
fiaddl
subl
or
lea
or
dec
mov
inc
add
and
cmpsb
push
movb
jmp
jae
subl
mov
mov
inc
xchg
jae
repz
add
pop
fs
outsb
cmp
mov
lahf
xor
cmp
inc
pop
mov
imul
into
mov
loope
mov
cmpsb
out
sbb
lds
jmp
push
aaa
call
popa
int
jmp
jae
add
nop
cld
xchg
addr16
pop
cwtl
inc
cmpsb
popa
jmp
cld
cmp
das
hlt
push
push
loop
add
xor
xor
add
add
movb
loope
stos
pop
lret
in
inc
int3
movb
cmp
popf
mov
out
lods
jge
jecxz
in
jnp
les
pusha
add
js
cmp
test
scas
xor
loopne
push
push
icebp
xor
decl
movsb
jge
add
mov
sbb
outsl
lods
test
mov
mov
ret
push
ljmp
repnz
sbb
stc
fwait
sub
sub
das
shrl
xor
pop
sub
add
inc
jbe
outsb
and
dec
popf
mov
push
addb
fwait
xchg
xor
add
mov
mov
jb
lcall
add
imul
in
push
or
push
lret
mov
pop
movb
scas
int
pop
imul
mov
sbb
jo
push
mov
andl
aas
push
add
inc
mov
cmp
and
cmp
mov
testb
add
add
in
cmp
and
add
jae
mov
out
xor
addl
jge
fsts
push
imul
or
pop
pop
int
xor
mov
rcrb
jae
add
repnz
stos
out
lcall
lret
jecxz
cs
cmp
mov
icebp
pop
fcoml
and
pop
mov
cs
addb
xor
add
xor
push
jge
roll
repz
xchg
cld
popf
push
outsl
std
dec
mov
out
cmpsl
pop
out
repz
jle
int3
stos
movb
add
inc
add
add
lret
ret
subl
shl
and
out
test
out
push
call
sub
push
xchg
shl
in
sub
adc
add
cmpsl
enter
sbb
cmpsl
push
rorl
lock
mov
call
pushl
je
ss
xlat
inc
add
mov
xor
add
clc
lea
mov
insl
pusha
add
insb
loope
pusha
add
xor
mov
mov
cmpsl
jb
mov
insb
inc
add
dec
fs
dec
mov
adc
mov
pop
add
cmp
add
mov
or
negb
xchg
cmp
ljmp
add
push
cltd
xchg
pop
rolb
mov
sub
push
ja
or
movsl
push
mov
lds
cmpsb
mov
addb
jecxz
jo
addb
das
inc
add
pop
mov
into
push
xor
ret
addl
scas
pop
stc
adc
xor
lcall
jl
mov
ret
sahf
mov
adc
and
call
xlat
push
sarb
push
out
xchg
pop
push
mov
int3
enter
imul
enter
pop
movsl
sub
add
jg
incl
ds
add
bound
stc
lock
fsts
ss
fwait
sub
mov
in
or
imul
push
mov
mov
add
mov
xor
es
popa
insl
lahf
clc
jge
xchg
adc
push
add
pop
mov
icebp
push
and
sub
ds
mov
add
shlb
es
lds
mov
popf
sub
add
xchg
xor
jg
addb
fmull
aam
and
inc
add
imul
push
dec
mov
test
out
out
ja
repnz
adc
add
lahf
lret
pop
mov
jecxz
cmp
add
popa
cmc
sbb
out
fldenv
add
mov
mov
inc
add
jecxz
cmpsb
jnp
push
in
mov
xchg
jb
xchg
adc
bound
add
mov
out
sbb
jbe
jle
out
imul
addb
js
xor
outsb
test
ss
inc
xor
add
cld
repnz
jo
rorb
daa
roll
cmpsl
mov
add
dec
push
mov
xor
add
adc
jnp
jp
add
xchg
insb
int3
pop
xor
insb
add
jmp
aam
sbb
in
dec
inc
add
jl
pop
xchg
scas
ja
mov
and
data16
mul
dec
cmp
adc
add
out
jns
out
das
mov
xchg
add
frstor
ret
sbb
fwait
arpl
rorb
in
sub
add
mov
mov
orl
cmp
push
cmp
loopne
xchg
mov
or
cld
orl
adc
iret
aas
dec
pop
and
leave
and
nop
cmp
int
mov
jle
xchg
sahf
out
add
mov
ds
add
pop
int
dec
bound
xor
rolb
pop
rolb
xor
enter
daa
addb
inc
or
fbstp
stc
adc
or
out
pop
psubsw
lods
pop
add
ljmp
xor
sub
lea
incl
lods
dec
mov
push
mov
les
sbb
add
imul
add
js
inc
add
stos
cmpsl
ja
fidivrl
or
cs
std
mov
adc
js
loopne
add
rcrl
test
movb
pop
iret
pusha
add
mov
sahf
sarl
imul
mov
or
xor
nop
push
and
mov
mov
int3
imul
dec
lcall
cmpsb
bound
mov
in
rcl
push
pushf
hlt
out
sbb
ja
pop
pushf
pop
dec
mov
out
fwait
push
xchg
mov
sub
xchg
pop
push
fdivs
dec
xor
pop
mov
mov
fdiv
push
sbb
push
ljmp
pop
cwtl
jp
fs
xchg
ds
lea
mov
std
je
ja
xor
add
ljmp
repnz
enter
or
ret
sar
xor
jle
sub
adc
sub
pop
dec
xorl
sub
movb
arpl
add
add
jp
fbstp
mov
sbb
fistpll
add
pushf
addb
xchg
sbbl
xchg
data16
addb
sub
movq
push
pushf
adc
add
out
cli
jne
insb
mov
ss
movb
mov
jbe
dec
cwtl
hlt
loopne
cmp
mov
inc
add
xor
mov
push
into
rcr
outsb
mov
jb
dec
jne
and
dec
movb
arpl
int3
pop
jns
out
add
out
mov
dec
sub
imul
inc
inc
arpl
push
out
jmp
incb
and
stos
lea
movsl
add
call
mov
sbb
imul
hlt
jns
push
and
jb
lods
inc
add
cld
jb
mov
cmp
mov
mov
scas
sar
adc
push
outsb
and
xor
inc
push
sti
mov
dec
lds
imul
add
xchg
lods
pop
inc
add
add
ljmp
add
es
cli
popf
mov
cltd
jne
add
aaa
add
aas
les
cmpsl
or
pop
xlat
xchg
sti
lcall
add
cwtl
inc
lret
out
inc
xchg
iret
and
dec
sarl
add
xchg
outsb
stos
mov
jg
mov
shll
jno
cmp
add
xor
fstl
mov
cmp
cld
sub
add
add
cmp
dec
scas
nop
xor
addr16
xlat
out
ja
pop
jnp
jae
or
xchg
int3
fnsave
sub
imulb
xchg
mov
cmpsb
inc
scas
jns
gs
sbb
sahf
or
inc
add
aas
testl
xchg
aam
adc
sahf
pop
push
push
mov
in
jns
and
mov
ja
or
imul
add
loop
inc
add
push
fcomp
adc
addb
or
outsl
sti
jl
shrl
add
or
popa
cli
mov
ja
arpl
icebp
mov
mov
jge
push
movsl
or
stos
sarb
sbb
xchg
jbe
pop
inc
aad
mov
jbe
and
mov
sbb
add
jne
mov
pop
dec
mov
cmc
pop
sahf
ret
lcall
adc
sbb
push
lcall
into
mov
push
lret
fidivrs
pop
movl
add
push
add
mov
insb
cmp
ljmp
add
imulb
sti
je
cmp
std
pop
sti
or
ret
pop
sub
ret
or
and
mov
and
imulb
bound
gs
popa
xlat
sbb
xchg
xchg
xchg
jge
cmp
shrb
sti
in
in
lds
shrb
xchg
scas
pop
push
add
sub
sti
cltd
add
je
and
sbb
add
in
int
dec
and
dec
shlb
sub
xchg
pop
push
cs
add
add
frstor
jno
addb
cld
in
mov
pop
sbb
add
bound
push
jno
adc
enter
frstor
jp
test
or
push
insb
test
imul
add
jo
push
xor
and
sbb
push
sub
add
mov
cmp
mov
add
sbb
fs
push
sti
dec
test
add
cld
test
mov
add
cmpl
mov
cwtl
pop
push
xorps
jno
adc
xor
insl
iret
pop
movsl
push
add
sub
or
jp
cwtl
scas
lods
mov
cwtl
xchg
push
insl
sahf
push
xchg
gs
lahf
mov
notb
push
add
in
int3
sbb
ficoml
add
outsl
adc
mov
adc
pop
add
cltd
sarl
sub
scas
mov
popa
das
pop
in
xchg
xchg
mov
add
push
pop
pop
pusha
add
or
mov
imul
add
sahf
xchg
and
test
mov
dec
dec
popa
popa
imulb
int
lret
dec
dec
xchg
push
xchg
lods
mov
mov
mov
out
xchg
addr16
aam
inc
add
pop
adc
xor
fbld
out
cwtl
dec
sti
or
and
add
rolb
cmp
aas
push
cmc
cwtl
aaa
aaa
addb
aam
insl
sbb
clc
leave
lods
sbb
add
cmc
fsubrl
clc
xor
mov
add
hlt
sbb
mov
pop
pop
xchg
scas
pop
ljmp
cli
dec
jns
add
sarb
add
xchg
cwtl
test
add
push
iret
cmp
shrb
movsb
pop
mov
fidivl
jbe
or
addb
push
xchg
shl
loopne
jp
dec
hlt
pop
cld
bound
cltd
and
and
addb
pop
pop
xor
and
mov
inc
test
inc
out
out
xor
pop
and
inc
insb
cmpsb
pop
mov
pop
mov
xchg
push
mov
xchg
lret
addr16
mov
out
add
int
fcmovnb
adc
mov
addb
xor
sub
fnsave
aam
addb
int
ficomps
fiaddl
push
cmp
aam
and
mov
mov
ss
lret
add
push
push
ret
pusha
add
icebp
icebp
je
sbb
dec
xor
xor
rol
cmp
out
sbb
sub
mov
add
or
scas
mov
xor
add
bound
cmp
lahf
shrl
int
add
fsts
jno
mov
aad
cmp
ljmp
dec
addb
hlt
sbb
repz
push
adc
addb
dec
push
pop
push
xor
inc
lods
adc
add
mov
cltd
mov
add
sti
fsubl
dec
mov
fwait
push
into
fmull
in
inc
add
add
and
lods
cmc
dec
lea
movsl
mov
inc
add
aaa
cld
cs
sub
pop
gs
aas
les
icebp
lret
int
xchg
jae
mov
jne
icebp
fisubs
cmp
sbb
insb
rorb
jg
mov
add
xor
sub
jno
xchg
test
out
mov
shll
pop
addb
jns
mov
lcall
add
xor
cltd
mov
add
xchg
sub
inc
add
add
sbb
cmp
fs
pop
and
mov
cmpsb
ja
add
sub
adc
sarb
pop
repnz
mov
rorl
lods
test
mov
xor
addr16
xchg
add
rolb
dec
cli
std
jmp
ret
fistl
loopne
add
sbb
pop
or
mov
jle
test
loope
sarb
icebp
adc
add
xchg
mov
push
in
fcoms
lea
jecxz
pop
pop
loope
add
in
arpl
jmp
ja
mov
mov
scas
xchg
jp
ljmp
cmp
inc
pop
iret
mov
push
xchg
lock
or
add
lods
sbb
ret
sbbl
sbb
lret
mov
cli
adcl
nop
add
dec
mov
fidivs
xchg
add
xchg
xor
jle
out
jle
sub
adc
cmp
xor
add
movsb
leave
push
xlat
mov
add
ljmp
push
out
mov
xchg
ljmp
jmp
in
and
bound
dec
lock
and
sub
dec
addb
mov
xor
cmpsl
gs
enter
jns
outsb
in
leave
pop
add
pop
push
hlt
dec
sbb
sbb
orl
sahf
lret
leave
insb
mov
sub
adc
xor
mov
mov
pop
stc
int
das
sbb
pusha
add
add
pusha
add
mov
lret
movsb
movsb
lea
mov
jg
movsl
jp
add
push
not
cmp
mov
cmc
sub
in
mov
add
mov
add
into
rol
add
push
lea
jbe
cmp
dec
push
or
push
inc
push
pop
pop
dec
jns
add
sbb
push
lcall
loope
imulb
dec
fimull
xchg
cmp
dec
cltd
lahf
xchg
out
test
push
insl
inc
add
subl
adc
mov
lcall
clc
xchg
sti
stos
fwait
sarb
jl
add
mov
sbb
mov
out
adc
push
in
movsb
jmp
mov
addl
out
mov
outsl
push
xchg
mov
das
imul
or
add
push
jmp
jle
into
push
ja
jno
push
cltd
xor
sbb
pushf
imul
cmp
adc
pop
lock
mov
adc
jmp
xor
call
add
fwait
sub
data16
push
add
mov
jo
repnz
popf
mov
push
stos
cmp
ds
add
xchg
test
scas
addb
les
les
add
dec
adc
add
fsubrs
add
and
jns
add
ds
test
ljmp
in
stos
xor
std
call
movsb
mov
aad
and
nop
iretw
add
lret
test
sti
or
lea
lahf
icebp
xchg
pop
jno
fidivrs
jne
add
out
rorl
shrb
pusha
add
imul
inc
ss
xor
mov
out
pop
pop
arpl
scas
stos
xchg
mov
lods
test
mov
mov
add
push
imul
daa
or
xor
bound
popa
inc
add
inc
push
push
clc
inc
add
jl
add
ja
jae
adc
add
cwtl
loop
xor
outsl
sub
pusha
add
iret
addb
das
je
icebp
out
pushf
add
in
scas
xorl
adc
lods
inc
add
neg
inc
mov
inc
add
inc
int3
mov
or
sbb
mov
fdivr
nop
sub
ret
loopne
xor
shl
call
fistpll
jmp
pop
aad
add
addr16
out
sarb
aas
data16
cmp
addb
sub
adc
fsub
xchg
xor
out
hlt
lea
xlat
lods
popa
cmp
rcl
mov
in
mov
and
add
ret
push
xor
sbb
mov
push
add
sbb
fbstp
add
pop
and
imul
ret
std
xchg
cmpsb
in
stos
lea
insl
jge
and
mov
cmp
into
lret
jl
push
xor
add
mov
mov
lret
ss
lahf
mov
inc
mov
adc
inc
xor
jae
pop
push
pusha
add
xor
jle
stc
inc
add
or
pop
add
adc
adc
xor
pusha
add
cmp
inc
xor
xchg
add
or
data16
xchg
pop
movsl
out
pop
dec
push
add
and
push
mov
cmp
or
popa
mov
mov
adc
ficomps
repnz
mov
xchg
mov
adc
add
ret
imul
xor
lods
xor
xor
ljmp
cmpsb
and
mov
dec
sbb
jo
hlt
push
add
mov
add
mov
mov
adc
stos
add
aas
shll
cmp
mov
jnp
fstp
stc
stc
sbb
adc
push
sub
icebp
adc
cmp
jge
out
inc
jne
xor
add
mov
repz
add
adc
push
out
dec
stos
arpl
faddl
add
cmp
lahf
sti
mov
add
dec
pop
add
out
jnp
data16
movb
fisubrs
add
and
push
stos
rorl
fcomip
cmpsl
mov
movsl
fidivrs
pop
xchg
xchg
mov
add
insl
or
lret
pop
orl
push
jbe
sub
xor
cmp
out
inc
adc
or
je
fldt
ljmp
push
push
jle
fsubl
ss
or
out
or
push
xlat
in
add
jb
xlat
cli
rcl
jge
les
cmpsb
ret
pop
mov
ss
cmp
pop
add
mov
insl
fimuls
enter
and
add
stos
stos
inc
add
add
mov
add
sub
add
sahf
daa
or
mov
jno
sub
mov
add
inc
add
mov
lods
cmp
insb
mov
imul
cltd
out
add
push
test
pop
xchg
dec
adc
push
jl
mov
stos
jle
mov
fisttpll
xchg
loopne
xchg
shl
addb
lret
out
xchg
mov
inc
add
icebp
jl
dec
pop
adc
cmpsb
cmp
dec
inc
loope
sbb
es
mov
rolb
addb
test
inc
add
and
out
dec
lea
push
dec
cmp
mov
inc
add
dec
test
enter
in
add
cmp
insb
fnstcw
ror
xor
xchg
or
add
lds
mov
or
jnp
in
outsb
les
jmp
inc
push
xor
push
add
push
xlat
idiv
cwtl
mov
cld
mov
sub
fs
cmp
dec
adc
test
pusha
add
xchg
pop
call
add
jne
xchg
and
dec
pop
incb
cmp
xchg
cmc
cmp
cld
clc
loop
jno
add
cmpl
cmpsb
pop
cmp
das
fisttpll
sub
mov
leave
mov
shll
add
loopne
xchg
xchg
jecxz
lahf
fildll
xchg
pop
jl
adc
fs
data16
daa
fists
jbe
in
or
push
subl
mov
test
mov
mov
mov
negb
stos
out
pusha
add
stos
sbb
sbb
add
lds
in
and
sbb
rorl
dec
inc
repnz
or
loop
mov
outsb
sbb
ja
addb
pusha
add
fs
nop
or
inc
add
add
out
lds
lea
imul
add
in
push
jp
pushf
ljmp
fdivrs
int
xor
mov
jp
xchg
pop
mov
jns
mov
sbb
xchg
addl
test
out
test
add
adc
out
js
ret
push
leave
mov
xchg
sbb
pop
jge
out
jmp
dec
mov
sub
or
add
enter
push
pop
mov
mov
dec
lods
shr
data16
pusha
add
add
jno
test
add
fs
sbb
into
mov
fsubrl
mov
xchg
test
jl
ss
pop
in
insb
pop
mov
mov
data16
pop
ret
aad
sbb
sahf
pop
cwtl
fistpll
mov
movb
inc
add
add
jmp
sbb
cmpsb
in
add
xchg
cmp
mov
mov
lahf
mov
xchg
idivb
call
inc
add
add
sub
into
xor
roll
lock
xchg
mov
mov
pop
cmp
xchg
ret
sahf
flds
jmp
mov
pop
sti
mov
divl
scas
in
scas
and
cld
js
jns
mov
push
mov
xchg
ja
ja
dec
call
stos
pop
dec
dec
push
fisubs
add
daa
addb
xchg
xor
and
stos
repz
ret
sbb
add
push
sbb
add
aam
aad
push
aam
ficoml
nop
aam
push
xor
mov
mov
lret
clc
js
xchg
add
int3
jl
dec
pop
jno
jb
nop
push
mov
cmpsb
es
daa
aam
xor
jmp
fmull
je
jnp
inc
add
pop
subl
push
xchg
jmp
addb
bound
shl
add
out
out
out
mov
dec
sbb
adc
lcall
std
pop
cmp
mov
pop
lcall
or
add
dec
cmpsb
addb
jae
add
adc
mov
jae
out
or
jp
jns
sub
mov
ret
add
pop
popa
repz
add
fsubrl
jnp
mov
jle
arpl
imul
gs
jle
repnz
and
push
sub
ja
insb
fcmovu
mov
jle
and
jnp
cmp
mov
shrb
loop
adc
adc
or
out
add
or
add
out
inc
add
rep
push
or
xchg
sbb
sub
data16
add
dec
jg
and
psrad
adc
jo
xchg
enter
jbe
inc
call
into
test
sub
push
lcall
rcll
in
pop
fcoms
je
sub
es
aaa
xchg
js
lcall
outsb
push
mov
dec
xchg
xor
into
xchg
cmc
jmp
ss
pop
nop
xor
inc
add
adc
mov
add
cs
int3
popf
push
ds
movsb
movb
je
xchg
mov
xor
inc
add
pushf
jp
addb
fiadds
inc
fs
add
mov
xchg
inc
je
mov
imul
add
dec
cmp
lcall
movb
xchg
and
push
mov
mov
notl
cmpsl
dec
stos
movb
cmp
mov
insl
inc
add
xor
add
stos
lods
or
aad
daa
out
and
mov
xchg
pop
pop
lahf
mov
inc
add
mov
add
add
jb
in
test
adc
jmp
mov
push
aaa
test
fsts
addb
insl
xor
mov
add
mov
shl
cmpsl
movsb
xchg
sbb
sbb
pushf
lock
sub
xor
scas
sbb
cs
ret
push
jge
sbb
adc
cmc
pusha
add
cltd
stos
mov
mov
push
aam
and
les
mov
inc
mov
aas
cmp
rcr
gs
cmc
bound
or
fdiv
jg
int
jns
test
jp
int
mov
add
mov
in
sbb
hlt
cld
inc
add
outsb
rcrl
pop
out
inc
sub
testb
lret
in
in
test
in
mov
add
inc
xchg
xlat
add
int
pop
fmul
addl
in
cli
or
inc
jp
test
inc
dec
dec
fstp
imul
scas
sarl
jg
fldcw
xchg
pusha
add
ss
pop
pop
xor
pop
and
pushf
inc
add
icebp
and
lea
push
enter
jo
dec
rolb
call
mov
mov
sub
xchg
int3
mov
mov
outsb
addb
add
jle
add
addb
inc
pop
fstps
enter
mov
jge
fcomps
adc
xchg
out
sub
and
pop
add
flds
mov
dec
mov
xchg
scas
cs
cli
sub
cmp
pop
push
outsb
or
cwtl
lds
push
add
stos
fwait
xchg
rolb
add
lret
addr16
xchg
ficoml
loope
jnp
and
mov
bound
sbb
xorl
inc
nop
in
stos
cli
adc
mov
das
mov
andl
mov
cmp
sbb
bound
adc
fsubl
push
add
aad
jg
add
movsb
fbstp
pusha
add
pop
mov
jo
add
push
sahf
jecxz
in
lcall
lea
outsb
mov
sbb
add
add
sub
jge
lcall
mov
mov
addb
stc
sbb
mov
out
add
movb
imul
add
jo
jp
sbb
add
das
pop
in
pop
rorl
xchg
mov
add
adc
jmp
pop
aad
add
imul
push
repnz
adc
imul
xchg
movb
or
dec
imul
push
inc
inc
add
out
cmp
stos
jmp
addb
repnz
cs
dec
and
divl
sbb
mov
lret
insl
jb
or
dec
mov
out
stos
pop
mov
push
repz
dec
mov
ret
daa
stc
xchg
sbb
add
xlat
mov
sarl
push
add
idiv
sbb
out
hlt
jecxz
loopne
mov
adc
aad
movb
test
mov
rolb
out
ljmp
add
add
dec
xchg
inc
add
add
add
add
add
sub
clc
and
xchg
shrl
mov
mov
mov
jnp
add
jbe
js
adc
xchg
mov
hlt
imul
aas
imulb
addr16
mov
scas
xchg
sub
out
movsl
and
jb
add
adc
jmp
push
push
shlb
les
xchg
rorb
push
add
pop
out
add
xchg
mov
cmc
jb
cld
fildll
sub
insl
inc
add
pop
in
cli
sahf
fldlg2
in
lock
cli
xor
add
cmp
add
push
pop
push
dec
xchg
icebp
jns
xchg
jecxz
pop
jb
pop
and
shrl
jl
pop
add
xchg
std
std
ret
std
ret
jae
xlat
gs
add
add
mov
add
stos
fbld
add
and
cmp
adc
dec
aas
test
inc
add
add
mov
jb
js
xchg
fisttpl
addb
push
into
test
add
int3
popa
pop
jp
push
adc
and
sub
out
punpckhbw
sub
sbb
mov
jmp
add
push
call
sbb
sub
aad
jbe
push
orl
sbbl
ljmp
add
icebp
js
mov
ss
fbld
xchg
es
and
loop
add
les
inc
add
imul
cmp
das
jbe
mov
ret
and
iret
xor
rcll
push
mov
outsl
aas
adc
addb
mov
pop
mov
std
popf
ret
xor
push
popf
int
mov
out
push
js
add
xchg
orl
repz
inc
ja
and
xchg
xorl
sbb
bound
dec
cmp
filds
mov
sbb
ficoml
loope
mov
add
sub
sub
and
and
test
jns
addr16
rolb
popa
dec
push
ret
jp
les
pop
adc
add
hlt
push
mov
sub
xor
push
mov
xchg
mov
call
pop
mov
repnz
xchg
out
lods
cmp
out
xchg
iret
xor
cs
add
pushf
and
mov
inc
add
arpl
ljmp
gs
js
les
cmpsb
mov
test
lahf
mov
add
js
mov
mov
cs
movsl
insl
dec
cmpsb
jnp
inc
bound
push
or
inc
add
nop
ret
mov
je
sub
pusha
add
push
xchg
sub
or
fcmovnb
add
push
imul
int3
add
cmp
xor
insb
jne
scas
inc
add
sahf
sbbl
ds
arpl
call
jne
and
cmp
push
adc
loope
pop
mov
in
ret
lea
cmp
mov
push
inc
add
popa
js
cli
cmpsb
lds
rcrl
sub
or
mov
jl
xchg
xchg
js
inc
add
pushf
out
xchg
sub
push
dec
arpl
outsl
nop
xchg
jmp
jg
jl
add
test
jne
mov
shll
mov
add
xchg
dec
bound
dec
cpuid
xor
sub
stc
xchg
or
insl
or
fs
testb
outsl
roll
ljmp
mov
sahf
mov
or
mov
inc
inc
add
add
pushf
insl
cmp
or
push
add
fcoms
xor
xchg
bound
or
or
mov
inc
add
add
nop
cld
jmp
filds
jmp
loopne
add
mov
mov
mov
jmp
stc
add
cld
pop
nop
cld
jmp
lret
xchg
add
add
je
add
push
mov
xchg
ret
pop
pop
mov
or
mov
add
stc
nop
jb
add
fidivrl
mov
adc
cld
jmp
imull
mov
popa
add
nop
jb
add
cmpsb
and
stc
nop
jb
fiaddl
mov
cmc
pop
inc
cmpsl
xchg
push
ljmp
add
add
jmp
stc
nop
jb
xchg
add
sbb
dec
shl
nop
cld
jmp
add
mov
leave
push
and
mov
xchg
ret
add
add
push
adc
jb
add
push
mov
adcb
add
sbb
mov
stc
nop
jb
add
ret
dec
arpl
cwtd
ret
stc
nop
jb
ret
add
enter
jmp
sub
ret
mov
sbb
stc
nop
jb
mov
fs
insb
add
nop
jb
add
call
add
add
add
rep
stc
nop
jb
add
add
cmc
test
adc
nop
jb
inc
add
inc
push
mov
xchg
ret
add
xor
js
stc
nop
jb
dec
xchg
xor
scas
push
push
mov
xchg
ret
add
push
add
iret
push
stc
nop
jb
scas
add
decl
out
inc
add
add
push
stc
nop
jb
cmp
lret
add
inc
add
add
nop
jb
add
repz
cld
jmp
inc
add
fmuls
mov
xchg
ret
inc
add
jb
add
add
gs
cld
or
add
and
nop
jb
add
and
nop
jb
stc
add
add
das
je
nop
cld
jmp
scas
jg
mov
jb,pt
nop
cld
jmp
sub
mov
add
mov
arpl
add
stc
nop
jb
add
addr16
add
nop
cld
jmp
add
add
add
cmpl
add
scas
mov
cmp
test
sbb
add
incl
add
movb
mov
stc
nop
jb
idivl
add
stc
nop
jb
add
xchg
out
pop
add
stc
nop
jb
lret
sub
mov
add
nop
jb
mov
inc
sub
add
add
add
nop
cld
jmp
mov
jg
push
add
pop
push
stc
nop
jb
add
add
xchg
inc
add
sbb
cmp
nop
jb
scas
add
push
mov
jmp
lret
negl
add
nop
jb
xchg
sbb
imul
inc
add
repnz
test
and
nop
jb
add
add
cmp
stc
nop
jb
add
lret
add
nop
cld
jmp
inc
scas
add
and
es
mov
stc
nop
jb
mov
add
leave
ret
or
nop
jb
add
das
lea
stc
nop
jb
add
mov
stc
nop
jb
insl
fists
add
mov
nop
cld
jmp
sbb
add
add
and
movsb
stc
nop
jb
ret
add
add
cld
jmp
fists
fiaddl
jp
stc
nop
jb
add
add
add
mov
stc
nop
jb
add
sbb
add
lret
nop
jb
add
leave
add
xor
int
pop
jae
nop
jb
leave
lret
and
pop
lea
test
nop
jb
add
add
mov
push
mov
xchg
ret
sub
lods
jb
mov
stc
nop
jb
sbb
dec
xchg
add
nop
jb
lret
add
dec
add
add
stc
nop
jb
add
mov
add
nop
jb
gs
add
test
nop
jb
add
or
xor
add
nop
cld
jmp
xchg
sbb
movsb
stc
nop
jb
adc
add
inc
icebp
mov
subb
add
ret
ret
and
ljmp
subb
adc
mov
or
jb
add
filds
clc
stc
nop
jb
add
lods
mov
cmc
mov
add
add
stc
nop
jb
cld
mov
cmpl
nop
cld
jmp
leave
lods
insl
mov
mov
add
popa
sub
mov
imul
push
push
mov
xchg
ret
add
mov
mov
stc
nop
jb
add
sbb
add
xor
imul
stc
nop
jb
test
in
or
nop
jb
add
mov
add
sbb
mov
xor
add
mov
push
push
stc
nop
jb
add
ret
jbe
cmp
jecxz
add
mov
add
push
mov
xchg
ret
mov
add
cmp
nop
jb
add
add
push
mov
xchg
ret
add
xor
mov
stc
nop
jb
sbb
adc
mov
mov
xchg
ret
add
testl
jle
add
jb
mov
or
add
stc
nop
jb
mov
sub
stc
nop
jb
mov
add
add
nop
cld
jmp
stc
add
add
add
stc
nop
jb
add
add
inc
add
testl
movsb
sbb
add
add
add
stc
nop
jb
add
add
add
add
nop
cld
jmp
add
add
inc
popf
xor
push
mov
xchg
ret
jg
scas
mov
lods
mov
stc
nop
jb
sub
int3
inc
stc
nop
jb
add
xchg
add
sbb
nop
jb
inc
add
add
nop
jb
lret
ret
mov
aaa
out
add
add
add
add
stc
xchg
dec
add
add
lahf
pop
push
mov
xchg
ret
stc
add
xchg
pop
cmp
push
mov
xchg
ret
cld
add
add
mov
xchg
mov
xor
add
stc
nop
jb
add
inc
inc
add
nop
jb
negl
mov
add
add
add
add
add
popf
pop
stc
nop
jb
add
sbb
pushf
mov
push
mov
xchg
ret
insl
add
daa
lea
fildl
xchg
ret
sub
mov
push
stc
nop
jb
insl
add
add
stc
nop
jb
add
add
mov
lret
stc
nop
jb
add
stc
add
pop
test
nop
cld
jmp
inc
add
add
xchg
xchg
mov
cmp
nop
cld
jmp
add
add
arpl
and
push
mov
xchg
ret
ficoml
out
test
nop
cld
jmp
lods
add
sub
add
nop
jb
mov
or
nop
jb
add
add
add
es
add
ror
stc
nop
jb
sub
mov
add
xor
add
stc
nop
jb
pop
add
cld
jmp
gs
stc
stc
inc
add
jp
dec
add
nop
jb
add
add
stc
push
stc
nop
jb
add
add
jg
stc
nop
jb
ret
xor
rcr
jge
nop
cld
jmp
add
ret
mov
test
nop
jb
test
and
or
push
mov
xchg
ret
add
stc
nop
jb
sbb
add
add
mov
nop
jb
inc
pop
mov
mov
shr
push
mov
xchg
ret
add
mov
inc
cwtl
add
stc
nop
jb
add
add
lock
add
nop
jb
sbb
add
jb
add
add
sub
dec
mov
stc
nop
jb
add
stc
nop
jb
add
sbb
or
mov
xchg
ret
pop
add
add
sbb
add
nop
jb
xor
add
call
xlat
fiaddl
xchg
ret
add
add
nop
cld
jmp
add
cmp
add
mov
stc
nop
jb
idivl
adc
add
inc
fiaddl
xchg
ret
mov
lahf
call
stc
nop
jb
add
mov
stc
nop
jb
add
mov
lret
cltd
je
nop
cld
jmp
add
aam
mov
stc
nop
jb
push
sub
cmp
nop
cld
jmp
add
nop
cld
jmp
add
add
mov
mov
pusha
nop
cld
jmp
add
xchg
mov
add
stc
jne
stc
nop
jb
add
rcrl
lock
inc
add
filds
add
popa
add
mov
xchg
ret
xchg
stc
repnz
add
adcb
add
add
xlat
inc
add
scas
add
add
mov
and
add
ret
mov
lods
or
nop
cld
jmp
stc
xchg
add
add
xor
nop
cld
jmp
lret
imul
jg
dec
jb
add
nop
cld
jmp
sub
add
in
add
push
mov
xchg
ret
and
sbb
andl
andb
add
lret
add
nop
cld
jmp
sub
add
sbb
add
cs
stc
nop
jb
mov
add
sub
into
pop
stc
nop
jb
add
add
nop
jb
test
and
ret
jg
icebp
stc
nop
jb
xor
push
mov
cmpb
add
dec
mov
mov
jne
stc
nop
jb
pop
add
test
nop
cld
jmp
add
add
add
cmp
jb
add
add
cld
add
xchg
sub
addb
add
jae
add
stc
nop
jb
and
and
stos
mov
nop
cld
jmp
lret
sbb
pop
adc
add
lods
add
ret
sub
stc
push
push
loopne
mov
xchg
ret
add
mov
push
cld
jmp
push
add
add
jecxz
inc
jle
inc
or
nop
jb
filds
add
mov
push
mov
jnp
add
cmp
and
call
lahf
mov
stc
nop
jb
add
lret
push
popa
add
in
push
mov
add
add
and
push
add
inc
mov
push
mov
xchg
ret
cmp
add
and
push
mov
xchg
ret
jbe
sbb
and
nop
jb
add
dec
repnz
xor
stc
nop
jb
sbb
xchg
xchg
xor
dec
or
sub
testl
mov
push
mov
xchg
ret
add
pop
negl
nop
jb
lret
xor
mov
sar
mov
xchg
ret
scas
xor
sbb
jno
inc
add
sub
or
jb
add
pop
mov
stc
nop
jb
adc
pop
add
ss
sub
stc
nop
jb
add
jae
mov
stc
nop
jb
lret
cld
jne
stc
nop
jb
add
pop
mov
stc
nop
jb
add
jbe
or
testl
add
add
xor
stc
nop
jb
add
push
lods
inc
add
mov
push
mov
xchg
ret
add
pop
mov
stc
nop
jb
insl
movb
add
jge
stc
nop
jb
add
pop
stc
nop
jb
add
add
test
dec
mov
stc
nop
jb
add
xchg
add
test
push
mov
xchg
ret
add
inc
lret
add
aaa
xchg
das
add
stc
nop
jb
insl
lret
add
sar
nop
jb
add
add
add
mov
stc
nop
jb
dec
jns
push
mov
xchg
ret
add
testl
jb
add
stc
popf
shr
stc
nop
jb
scas
add
testl
jmp
and
and
test
nop
cld
jmp
lods
inc
dec
xor
test
mov
cmpxchg
inc
addb
jge
add
push
push
mov
xchg
ret
add
lods
add
fsubrp
das
sldt
stc
nop
jb
add
out
xor
stc
nop
jb
add
ret
add
add
loope
stc
nop
jb
mov
stc
nop
jb
add
add
xor
push
mov
xchg
ret
cld
mov
lock
mov
nop
cld
jmp
sbb
add
cmp
filds
xchg
ret
add
ret
add
shl
nop
cld
jmp
mov
add
adcl
decl
push
mov
xchg
ret
add
gs
insb
lea
stc
nop
jb
test
test
stc
nop
jb
add
lods
add
add
pop
add
stc
nop
jb
xchg
add
sbb
nop
jb
jg
scas
fiaddl
add
rcll
mov
popf
nop
cld
jmp
cmp
add
jmp
nop
cld
jmp
add
lods
stc
add
mov
cmc
in
add
add
add
xor
push
mov
xchg
ret
push
add
jp
push
mov
xchg
ret
mov
mov
ja
stc
nop
jb
test
sbb
nop
jb
add
mov
cld
jmp
add
lea
stc
nop
jb
add
add
sub
mov
stc
nop
jb
divl
add
ljmp
jle
stc
nop
jb
add
mov
push
nop
jb
add
fisttps
jb
xchg
add
incl
jb
add
dec
jg
aas
stos
stc
nop
jb
testl
add
xchg
xchg
insl
push
push
mov
xchg
ret
repnz
lods
add
in
je
stc
nop
jb
sub
push
mov
xchg
ret
sbb
add
jns
dec
outsl
popa
fs
nop
jb
add
jg
push
stc
nop
jb
cld
add
and
je
stc
nop
jb
add
mov
stc
nop
jb
cld
imul
add
add
nop
cld
jmp
adc
gs
add
jns
add
or
inc
add
add
repz
mov
xchg
ret
add
sub
xor
stc
nop
jb
add
outsb
call
stc
nop
jb
push
jbe
cmp
jne
push
mov
xchg
ret
add
add
or
add
add
imul
add
cmp
add
scas
repnz
add
add
push
addb
xchg
rcl
aas
pushl
stc
nop
jb
add
imul
or
mov
add
cld
jmp
add
add
stc
imul
cmp
add
lret
jbe
and
cld
add
stc
nop
jb
scas
sbb
sub
xor
add
stc
nop
jb
add
mov
jmp
jbe
add
add
stc
nop
jb
add
mov
add
add
pushf
add
stc
nop
jb
xchg
add
add
lret
stc
nop
jb
add
add
add
mov
add
add
push
sbb
stc
nop
jb
xchg
stc
sbb
jb
mov
sbb
add
bound
dec
shr
stc
nop
jb
mov
stc
mov
pop
or
add
ljmp
add
stc
nop
jb
mov
pop
push
stc
nop
jb
lods
add
add
xchg
or
subb
mov
add
sub
jle
inc
add
add
mov
inc
add
push
mov
cltd
sbb
add
add
mov
add
sub
add
sub
cmp
ret
add
jns
stos
stc
nop
jb
mov
cmp
sub
scas
enter
andb
lods
add
ret
test
stc
nop
jb
add
and
nop
cld
jmp
add
dec
sbb
flds
icebp
stc
nop
jb
mov
add
lret
mov
stos
add
nop
cld
jmp
add
add
add
pop
push
stc
nop
jb
add
lret
stc
add
add
in
add
in
add
insb
inc
add
dec
cmp
nop
jb
add
add
cld
pop
push
stc
nop
jb
add
add
or
mov
xchg
ret
add
add
icebp
inc
add
add
insl
sub
jbe
and
or
mov
xchg
ret
add
add
jno
je
stc
nop
jb
cld
imul
in
dec
in
repz
fiadds
cmp
loop
push
mov
xchg
ret
add
lret
and
adc
and
roll
cld
jmp
add
and
icebp
cwtl
and
stc
nop
jb
add
add
es
and
xchg
les
popl
jb
mov
popl
jb
add
call
nop
cld
jmp
add
in
and
nop
cld
jmp
xor
add
add
je
nop
cld
jmp
scas
add
push
mov
enter
add
add
movsl
jl
inc
adc
add
cmp
mov
mov
stc
nop
jb
mov
add
mov
cmp
lock
add
add
ret
inc
add
stc
nop
jb
add
test
daa
add
aad
ljmp
nop
jb
add
jmp
nop
cld
jmp
push
add
add
or
jb
xchg
add
add
add
add
jb
sbb
sbb
cmpw
stc
nop
jb
push
sbb
cltd
pushl
stc
nop
jb
add
mov
stc
nop
jb
add
sbb
jg
mov
nop
cld
jmp
xor
add
mov
stc
nop
jb
sub
mov
mov
nop
cld
jmp
xor
insl
mov
jb
xchg
cld
add
filds
addb
outsb
mov
stc
nop
jb
add
xor
dec
nop
cld
jmp
fiaddl
stc
leave
add
xchg
push
nop
jb
add
lret
push
sbb
mov
xchg
ret
gs
add
push
nop
cld
jmp
add
add
adc
jg
cmpsl
fidivrl
stc
nop
jb
add
add
add
call
decl
aad
lret
stc
nop
jb
push
mov
push
popf
call
stc
nop
jb
add
add
imul
add
nop
jb
add
inc
sub
add
adc
stc
nop
jb
xchg
stc
add
sbb
jb
add
xchg
lret
add
cld
jmp
lret
add
stc
leave
mov
decb
mov
add
nop
jb
and
add
add
stc
nop
jb
add
mov
mov
push
mov
xchg
ret
stc
add
aad
mov
nop
aas
jne
nop
cld
jmp
stc
add
in
lea
push
mov
xchg
ret
pop
inc
ret
js
test
add
nop
jb
add
shrl
adcb
insl
add
dec
jg
add
mov
stc
nop
jb
add
pop
stc
nop
jb
add
sub
negb
nop
jb
mov
insl
scas
add
push
mov
xchg
ret
repnz
repnz
pusha
add
xchg
clc
push
mov
add
jg
flds
aaa
add
ret
inc
add
mov
stc
nop
jb
inc
stc
add
add
stc
nop
jb
add
jge
stos
stc
nop
jb
add
add
imul
pop
push
mov
xchg
ret
jbe
inc
add
mov
jb
mov
mov
add
stc
nop
jb
xchg
ret
ret
sub
mov
call
add
mov
push
mov
xchg
ret
inc
add
push
lea
nop
jb
and
sub
push
mov
xchg
ret
add
outsl
loopne
cld
jmp
xor
push
aaa
push
jg
jg
stc
nop
jb
lret
insl
adc
sbb
inc
and
stc
nop
jb
add
jbe
movb
fs
dec
or
nop
jb
scas
xchg
add
sub
stc
nop
jb
fiaddl
inc
push
stc
nop
jb
xchg
add
add
stc
nop
jb
add
push
nop
cld
jmp
sub
add
mov
sub
sbb
inc
add
lret
lock
jb
add
add
add
cmp
rorb
add
nop
jb
add
scas
mov
sub
add
add
mov
mov
imul
inc
add
sub
pop
push
push
mov
xchg
ret
push
add
add
fisttps
test
stc
nop
jb
stc
mull
add
push
mov
xchg
ret
xchg
push
lret
add
xchg
cmpl
pop
push
add
inc
stc
scas
int
cli
nop
cld
jmp
imul
xchg
pop
scas
dec
dec
push
mov
xchg
ret
sub
lods
and
push
stc
nop
jb
add
add
leave
add
push
nop
cld
jmp
filds
jg
add
bnd
add
nop
jb
xor
xor
stc
nop
jb
lret
add
jbe
add
jb
nop
cld
jmp
add
push
mov
sub
jmp
cmp
ret
add
gs
inc
cmp
cld
jmp
sub
add
xor
nop
cld
jmp
sbb
scas
add
xchg
inc
ljmp
inc
add
cmp
pop
or
jmp
add
push
imul
add
add
add
es
stc
nop
jb
pop
call
stc
nop
jb
add
sub
jmp
inc
add
and
incb
add
nop
jb
add
ret
stc
nop
jb
add
mov
adc
pop
push
mov
xchg
ret
scas
mov
add
adc
add
push
mov
xchg
ret
lods
add
lea
nop
cld
jmp
jg
add
jno
sbb
popa
add
cld
jmp
add
stc
stc
add
test
xor
push
push
mov
xchg
ret
add
mov
add
pop
mov
stc
nop
jb
add
lods
add
cld
mov
clc
sub
stc
nop
jb
add
add
add
jb
add
add
ret
stc
add
add
add
nop
jb
push
add
jecxz
mov
stc
nop
jb
add
mov
jne
stc
nop
jb
add
and
jmp
push
sub
incb
xchg
ret
add
add
add
leave
stc
nop
jb
add
add
push
pop
gs
loope
nop
jb
add
add
and
xchg
repnz
fwait
cmpl
nop
cld
jmp
push
lods
add
add
nop
jb
test
push
adc
movsl
xor
nop
cld
jmp
scas
imul
fdivrl
nop
cld
jmp
imul
add
mov
stc
nop
jb
add
dec
dec
stc
nop
jb
add
add
add
pop
pop
push
mov
xchg
ret
insl
gs
sub
inc
add
add
add
nop
jb
add
add
sub
inc
call
inc
add
add
fwait
push
push
mov
xchg
ret
sbb
add
stc
nop
jb
imul
popa
add
nop
jb
add
sbb
adc
cmp
cs
nop
jb
add
inc
sahf
add
stc
nop
jb
add
push
or
push
mov
xchg
ret
ret
bnd
add
sar
incl
inc
add
mov
adc
mov
stc
nop
jb
adc
mov
xor
stc
nop
jb
sbb
mov
mov
xchg
ret
add
add
add
add
add
stc
nop
jb
add
fildll
movb
idivl
stc
nop
jb
dec
add
rclb
incl
add
mov
inc
add
add
stc
nop
jb
inc
add
add
jns
leave
nop
cld
jmp
xchg
adc
add
adc
incl
ret
add
stc
nop
jb
leave
sbb
add
add
icebp
stc
inc
add
add
mov
fiaddl
mov
add
pop
jne
stc
nop
jb
cld
dec
push
testb
clc
mov
nop
cld
jmp
imul
add
mov
stc
nop
jb
mov
mov
add
stc
nop
jb
add
jae
dec
nop
cld
jmp
leave
add
jbe
mov
jmp
out
out
clc
stc
nop
jb
sbb
inc
add
push
mov
xchg
ret
sbb
stc
add
mov
pusha
stc
nop
jb
inc
add
add
add
sbb
add
add
add
mov
add
jmp
add
insl
add
add
stc
nop
jb
add
mov
cmp
push
mov
xchg
ret
pop
insl
imul
push
stc
nop
jb
add
xchg
add
add
cltd
dec
push
mov
xchg
ret
add
lret
add
movsb
mov
jb
add
inc
ret
mov
add
nop
jb
ret
imul
fildll
pushl
stc
nop
jb
ret
ret
lods
add
addr16
cmc
add
inc
ds
nop
cld
jmp
add
inc
mov
sub
sbb
add
lods
sub
add
nop
jb
inc
xor
je
nop
cld
jmp
add
add
xor
nop
cld
jmp
xchg
push
and
icebp
and
bound
jno
push
push
mov
xchg
ret
testl
mov
stc
nop
jb
add
scas
add
mov
cld
jmp
add
sbb
add
sbb
inc
and
nop
jb
and
imul
orb
add
inc
test
dec
sub
nop
jb
ret
add
stc
cld
in
add
stc
nop
jb
sbb
test
push
mov
xchg
ret
add
add
add
add
stc
nop
jb
testl
jbe
movzwl
stc
nop
jb
xor
test
nop
jb
sbb
add
add
stc
nop
jb
add
add
lods
xor
push
mov
xchg
ret
add
insl
add
stc
nop
jb
mov
add
ss
dec
cmp
nop
jb
sub
add
add
stc
nop
jb
add
inc
stc
nop
jb
add
repnz
sub
stc
nop
jb
push
inc
add
push
push
mov
xchg
ret
add
sub
dec
jmp
stc
nop
jb
add
gs
mov
push
mov
xchg
ret
inc
add
mov
in
add
stc
nop
jb
add
lods
imul
stc
nop
jb
mov
sub
push
push
mov
xchg
ret
jbe
add
add
outsl
push
nop
cld
jmp
mov
inc
mov
sub
les
nop
jb
xchg
pop
jbe
mov
int3
mov
nop
cld
jmp
add
jb
sbb
cld
push
dec
add
mov
xchg
ret
add
jb
push
stc
nop
jb
dec
leave
xchg
sub
mov
push
nop
jb
mov
cld
stc
nop
jb
adc
add
add
scas
loopne
lcall
out
incl
sub
xchg
int3
add
push
mov
xchg
ret
sbb
and
mov
nop
cld
jmp
xchg
mov
stc
mull
mov
push
mov
xchg
ret
add
add
push
mov
xchg
ret
add
jbe
xor
sub
jmp
add
repnz
stc
nop
jb
add
add
add
loop
nop
cld
jmp
sbb
add
stc
nop
jb
sbb
sub
mov
stc
nop
jb
add
stc
nop
jb
repnz
gs
leave
sbb
lods
mov
stc
nop
jb
inc
ret
add
push
push
mov
xchg
ret
stc
add
add
mov
stc
nop
jb
mov
fistps
ret
icebp
push
add
jne
stc
nop
jb
mov
stc
stc
nop
jb
imul
in
add
jno
jno
jge
rcl
test
add
jb
xchg
sbb
pop
inc
add
push
mov
xchg
ret
push
add
popf
mov
stc
nop
jb
mov
add
icebp
inc
add
sub
add
jmp
mov
xchg
ret
mov
pop
stc
nop
jb
stc
add
imul
stc
nop
jb
add
insl
sbb
xchg
xchg
lahf
add
stc
nop
jb
xor
ret
xchg
sbb
jb
add
add
movsb
add
repz
nop
jb
add
xchg
stc
nop
jb
add
jmp
pop
jecxz
add
mov
mov
mov
incl
jg
pop
add
add
stc
nop
jb
pop
insl
add
jbe
rolb
add
or
stc
nop
jb
leave
rcl
mov
add
nop
jb
add
push
ret
add
or
xor
add
stc
nop
jb
add
mov
push
mov
xchg
ret
scas
add
jb
add
lret
xchg
sub
cmp
nop
jb
add
add
pop
mov
stc
nop
jb
xor
lret
nop
push
mov
xchg
ret
add
add
add
mov
stc
nop
jb
add
xor
stc
nop
jb
scas
and
nop
cld
jmp
add
mov
sub
jecxz
push
nop
cld
jmp
add
scas
sbb
push
dec
push
push
mov
xchg
ret
lods
dec
xchg
add
xorl
jmp
sub
jg
add
xor
add
add
nop
jb
mov
dec
add
incl
xchg
pop
mov
push
mov
xchg
ret
xor
ret
nop
cld
jmp
imul
add
add
add
call
insb
fdivr
incl
scas
mov
sub
pop
call
incl
add
jb
lret
xchg
add
inc
and
sar
jb
add
add
add
and
xor
fadds
add
xchg
ret
add
add
mov
push
mov
xchg
ret
ret
add
mov
cld
jmp
stc
add
dec
add
idiv
stc
nop
jb
add
out
push
stc
nop
jb
lret
lods
fildll
mov
stc
nop
jb
gs
add
mov
xor
stc
nop
jb
xchg
add
jne
stc
nop
jb
fiaddl
add
scas
pusha
stc
nop
jb
add
push
sbb
jne
nop
cld
jmp
ret
and
mov
nop
jb
add
cltd
xchg
stc
nop
jb
add
scas
add
sbb
xorb
lcall
mov
stc
sbb
icebp
nop
cld
jmp
notl
cmp
rclb
hlt
inc
add
adc
xchg
push
outsb
cmpl
nop
cld
jmp
add
lahf
push
mov
add
add
mov
or
stos
mov
push
mov
xchg
ret
add
fistpll
decl
nop
cld
jmp
add
outsb
mov
stc
nop
jb
xchg
stc
push
clc
movswl
nop
cld
jmp
add
add
add
cmp
stc
nop
jb
add
je
sub
test
jb
sbb
mov
ret
stc
nop
jb
add
test
mov
stc
nop
jb
sub
mov
jbe
add
nop
cld
jmp
mov
add
loop
addb
xor
jmp
add
fiaddl
add
add
and
jb
xchg
add
add
add
popa
stc
nop
jb
sbb
add
add
push
add
out
inc
add
lret
mov
add
stos
call
nop
cld
jmp
add
sbb
jge
test
idiv
stc
nop
jb
sbb
mov
stc
nop
jb
insl
add
add
sub
pop
icebp
inc
add
xor
mov
stc
nop
jb
mov
popf
dec
nop
cld
jmp
jg
inc
add
shrb
mov
xchg
ret
add
and
mov
xchg
ret
scas
negl
sbb
inc
add
lret
xchg
nop
jb
lods
pop
imul
add
movzwl
stc
nop
jb
add
push
add
lods
lods
push
mov
xchg
ret
add
ret
add
jns
push
mov
xchg
ret
add
mov
stc
nop
jb
add
add
add
stc
nop
jb
inc
mov
add
push
mov
xchg
ret
add
xor
cltd
and
stc
nop
jb
xor
nop
cld
jmp
add
pop
xchg
push
les
stc
nop
jb
mov
add
sub
mov
stc
nop
jb
mov
add
sub
stc
nop
jb
add
add
sbb
push
stc
nop
jb
add
add
sbb
sub
nop
jb
add
add
sbb
punpckhdq
mov
xchg
ret
lret
add
cld
jmp
and
add
inc
add
je
nop
cld
jmp
add
add
push
stc
nop
jb
and
mov
insl
mov
stc
nop
jb
add
pop
scas
ret
in
push
mov
mov
mov
add
je
ja
hlt
test
sub
movsl
repz
repnz
cmp
loopne
sbb
mov
cmc
push
rorb
popf
and
and
jnp
jnp
jecxz
cmp
xchg
mov
popf
repnz
pusha
add
mov
pop
fs
jae
ret
lods
lcall
insb
icebp
in
rorl
mov
mov
bound
or
or
fcomp
sbb
inc
add
jnp
fsubrl
sarl
sbb
push
add
mov
sub
movb
in
mov
daa
sub
add
xchg
js
xor
lea
add
cmpl
arpl
mov
add
add
add
sub
stc
inc
add
ret
aas
mov
testb
dec
mov
cmpl
cmpl
addb
popa
fsubrs
ret
adc
xor
pop
movsl
divl
add
movsb
ret
in
addr16
call
out
push
es
repz
add
insb
adc
xor
subl
sbb
add
sbb
dec
mov
rolb
bound
lahf
sub
xchg
icebp
stc
jo
mov
pusha
add
js
cmp
fucomi
jnp
cmp
fidivrs
addb
out
push
incl
mov
mov
imull
adc
jp
sbb
jle
adc
sbb
add
adc
imul
add
add
mov
aad
shll
and
push
add
or
sti
mov
call
pop
cld
addr16
mov
push
xchg
adc
add
mov
gs
mov
roll
sub
das
sub
jmp
aaa
push
sbb
mov
into
xchg
mov
roll
xor
js
jo
add
mov
pop
dec
jmp
sbb
mov
addr16
xchg
mov
aaa
movsb
addb
add
dec
jl
mov
xchg
add
dec
cmp
jle,pn
mov
ljmp
div
sti
xchg
and
xchg
cltd
sti
xlat
icebp
dec
xorl
xchg
push
dec
pop
pop
mov
jmp
outsb
dec
outsl
sub
inc
rolb
dec
movb
jb
jge
mov
nop
push
xchg
inc
dec
or
pushf
pop
icebp
test
jle
xchg
int
test
xor
pop
push
int3
adc
aas
loope
ficoms
out
jno
add
mov
push
pop
ret
or
sbb
test
out
jp
inc
cld
mov
icebp
mov
inc
jne
push
add
hlt
jnp
mov
ret
scas
inc
add
aas
ror
push
out
xchg
mov
data16
mov
stos
or
insb
and
fucomp
cmp
out
sbb
out
push
mov
iret
push
mov
xchg
repnz
int3
shlb
push
or
subl
or
stos
xor
dec
sbb
add
fiaddl
push
sbb
jg
sbb
push
fstps
rcl
insl
jle
test
dec
sub
push
insl
repnz
sbb
add
mov
sub
fisubrl
hlt
mov
bound
clc
shlb
fcoml
int3
or
and
decb
lods
testl
gs
xchg
xrelease
xchg
rolb
call
pop
lods
jae
rorl
mov
xorl
jge
movb
cli
add
sbb
xor
mov
pop
sar
lret
xchg
xlat
sahf
adc
out
inc
cld
add
jmp
call
sbb
adc
xchg
enter
or
jae
add
sbb
scas
neg
rolb
add
dec
daa
addb
inc
paddb
int
add
popf
mov
jmp
das
dec
sbb
inc
xor
push
add
and
push
popa
xchg
fs
cmp
jge
testl
or
mov
jno
imulb
push
mov
or
icebp
xor
es
xchg
lret
icebp
mov
leave
pop
push
mov
inc
add
iret
jl
or
aaa
sbb
imul
push
dec
dec
push
mov
popf
and
xchg
dec
dec
aaa
inc
mov
aaa
mov
inc
gs
xchg
jl
add
fwait
mov
fdivr
mov
fimull
lret
test
jmp
jnp
das
and
shl
mov
cmpsb
outsl
call
stc
or
int3
xchg
call
mov
clc
push
mul
out
lcall
ljmp
lods
mov
movb
lods
sub
or
fisttpll
jb
add
add
jne
nop
dec
rcl
add
cmc
sbb
xchg
icebp
lcall
test
inc
and
cmpsl
stos
jae
pushf
call
sub
stc
push
ja
lods
icebp
fisubl
bnd
cmp
dec
add
sub
popa
imul
inc
add
out
add
xor
dec
push
jbe
pop
add
dec
and
add
mov
stc
sub
mov
lods
mov
push
add
jle
aad
sub
xchg
jg
lret
add
mov
jbe
ds
addr16
scas
js
lcall
xchg
sbbl
data16
ja
lahf
push
fnstsw
mov
push
bnd
inc
add
test
mov
mov
cmc
ret
gs
push
hlt
jnp
add
xlat
bswap
jl
inc
add
jne
cmp
fnsave
notl
test
xchg
mov
pop
jo
pop
mov
scas
aaa
sti
xor
jmp
es
xchg
sbb
push
mov
stc
lods
inc
add
aas
xor
data16
add
jecxz
fstpl
add
mov
js
pop
fnstenv
out
xor
jae
add
add
mov
jbe
in
outsb
lods
rolb
push
xchg
lahf
jne
xor
fwait
mov
call
add
lea
mov
mov
xchg
lahf
adc
add
mov
mov
lahf
mov
inc
xor
pushf
cmp
mov
orl
iret
mov
push
add
rolb
lods
sub
dec
sub
aam
or
cmc
dec
js
add
sbb
lcall
out
pop
add
add
jo
stos
jbe
cmpsl
lods
mov
test
fisttps
sbb
out
pop
imul
and
sub
lcall
shll
push
mov
repz
or
aas
jp
insl
ljmp
sub
out
ss
jno
fs
cwtl
pop
push
push
mov
fs
test
lods
adc
cmp
js
dec
imul
fisttpll
fidivrl
aad
mov
scas
stc
push
jmp
xor
dec
jbe
lods
or
dec
lcall
testb
push
test
iret
cmp
sbb
push
std
push
or
ja
cmp
aaa
xchg
cmp
xchg
adc
mov
imul
adc
xchg
xchg
repz
xor
aaa
push
nop
aas
or
loope
xchg
sub
and
add
in
sbb
mov
rolb
xchg
ljmp
dec
mov
rolb
imul
sub
mov
fidivrs
push
xchg
clc
rolb
add
and
pop
jg
aad
add
push
shl
xor
mov
jns
cmp
cwtl
out
fwait
test
lahf
rolb
mul
mov
pop
mov
imul
push
cmp
inc
add
jb
add
stos
pop
mov
adc
mov
repz
push
js
add
jle
inc
jge
data16
add
push
sub
in
mov
sub
pop
xchg
sbb
dec
jno
stos
push
add
aam
lret
adc
cmp
push
mov
adc
add
mov
pop
popa
stc
add
push
nop
cli
cltd
sahf
out
sub
movsb
cmp
add
cmpsl
push
add
xor
add
jmp
or
push
sarb
push
jno
add
and
xchg
xchg
jl
pop
ficoms
scas
mov
xchg
xor
pop
adc
and
addb
repnz
mov
xchg
adc
dec
or
dec
xor
and
js
repnz
jle
or
rclb
mov
cmpsb
insl
movsb
or
xchg
push
mov
dec
test
jb
dec
jg
add
or
pop
mov
test
lods
fistl
jecxz
pop
dec
push
rolb
jl
lds
push
xor
icebp
outsl
adc
add
adc
sbb
es
and
add
xlat
mov
repz
shll
scas
dec
loopne
add
js
rorl
sub
cmp
or
sbb
add
add
lret
jp
sar
jmp
ss
and
fistl
fs
or
stos
pop
addr16
inc
add
jno
insl
sbb
dec
add
mov
pop
ret
and
iret
or
cld
pand
pushf
mov
add
ja
cs
insl
and
xor
mov
jmp
or
rorl
cmp
clc
lret
int
test
xchg
mov
cmpsl
mov
roll
add
mov
addr16
les
mov
popa
out
aas
les
inc
add
xor
add
jnp
xor
sbb
and
mov
add
add
mov
cmp
add
dec
inc
popf
testb
mov
push
add
ljmp
daa
inc
add
loop
ljmp
or
arpl
lds
dec
or
mov
jnp
out
xor
inc
add
cmp
movb
or
ja
push
push
neg
xor
fsub
mov
scas
xor
xor
dec
or
ss
cmp
add
mov
cmp
and
push
test
push
mov
xchg
mov
dec
outsl
aas
push
sahf
push
or
popa
ljmp
add
add
loopne
add
add
leave
push
pop
mov
sti
mov
mov
fadd
add
jecxz
pop
loopne
aas
jbe
mov
push
inc
add
add
sub
and
fiaddl
sub
insb
dec
fsubrp
and
aas
or
jmp
in
movsl
lods
sub
sti
in
dec
inc
add
jne
jne
sbb
and
imul
add
add
add
mov
mov
add
jle
addb
xchg
xchg
outsl
or
lret
lcall
pop
mov
adcl
sbb
loope
add
mov
inc
add
loope
inc
push
cmp
scas
mov
sahf
test
mov
arpl
add
mov
add
idivl
mov
add
add
jb
add
cmpsb
mov
xchg
lcall
sub
test
fstpt
push
loop
xor
lcall
sbb
iret
jmp
icebp
push
lret
jae
jno
movsb
out
cmp
and
popa
in
xor
push
mov
inc
add
lds
mov
test
fsubr
jg
cmpsb
nop
xor
add
or
frstor
add
add
inc
add
add
loope
cmp
fisttpl
fwait
push
push
sbb
shr
fmuls
les
pushf
push
fcmovu
into
push
push
adc
push
sbb
int
outsb
push
dec
xchg
ret
jp
or
add
mov
sub
jne
insl
jbe
pop
movsl
xchg
sub
xchg
push
or
pop
xchg
ja
cmpsb
stc
scas
or
in
mov
imulb
mov
add
push
cmp
xor
dec
sbb
xchg
jns
sbb
inc
add
push
mov
pop
lahf
test
jnp
sub
lock
xor
mov
jge
mov
xchg
cmp
mov
pusha
add
add
adc
in
fcomip
dec
insb
jg
loope
add
clc
mov
inc
data16
push
sbb
lods
xor
dec
or
imul
adc
insl
ret
out
movb
fsub
jecxz
or
int3
mov
out
es
aas
inc
add
fadd
ja
inc
add
add
sub
shl
in
push
add
aam
rolb
add
add
xor
daa
and
mov
jmp
addr16
rolb
scas
pusha
add
xchg
mov
addr16
mov
clc
nopl
cld
xor
inc
add
xor
jp
in
in
jge
out
and
mov
mov
or
inc
add
dec
push
jle
jno
iret
sbb
add
cmpsb
adc
in
sub
sbb
daa
repz
xor
sub
in
inc
add
mov
push
add
cmp
xor
outsb
imul
adc
lret
jg
dec
xchg
ja
dec
cld
and
cs
rolb
and
outsb
outsl
scas
xchg
cmp
inc
repz
pop
loopne
cmp
mov
xor
inc
xor
repnz
add
jg
add
clc
xor
sbb
push
loopne
push
add
sub
rorb
add
int3
bound
and
xor
xor
pushf
xor
outsb
arpl
mov
pop
inc
fidivrl
jb
pop
xchg
sarl
rcll
bound
pop
rolb
jnp,pt
lahf
adc
push
xor
testb
mov
rcl
repz
test
sub
in
xchg
jo
xor
jl
rol
add
iret
dec
xchg
fstl
loop
xor
dec
dec
push
cmp
mov
enter
mov
test
adc
jns
mov
add
mov
add
jae
in
std
cltd
addr16
add
xor
inc
add
cs
clc
xchg
das
cli
fucomi
fdivrl
pop
inc
lods
stc
insl
mov
or
dec
int
push
push
add
jae
inc
add
frstor
xor
leave
mov
add
or
je
hlt
push
jecxz
xor
and
push
jbe
xor
add
ja
and
mov
faddl
push
in
shll
add
ds
pop
or
stos
push
add
adc
inc
add
jno
add
and
adcl
or
lock
int3
sub
in
popl
add
int3
mov
test
xchg
dec
loop
loopw
pop
mov
and
in
jne
out
test
imul
fists
add
add
nop
mov
push
ja
push
nop
mov
xchg
daa
std
imul
or
xchg
faddp
add
jne
int3
cwtl
sbb
addb
loopne
data16
movb
xor
add
out
jb
stos
rorl
mov
roll
and
inc
imul
popa
stc
dec
data16
mov
push
movsb
in
cs
mov
imul
and
and
ja
pop
repz
add
pop
clc
cmp
sbb
pop
jg
push
jo
xchg
rorl
loope
jns
jns,pt
or
popa
test
mov
notb
and
cmc
jo
test
pushf
mov
xchg
dec
push
add
jns
dec
ret
out
loopne
mov
pop
and
push
add
popa
je
pop
repz
inc
add
and
lahf
cs
push
outsl
jb
fbld
add
lods
sbb
jge
addb
cmpsl
or
push
push
jecxz
jle
pop
jmp
pop
xchg
push
int3
ds
push
add
mov
loope
mov
loop
mov
dec
dec
cmc
add
mov
add
aad
lahf
dec
in
loop
scas
mov
movsl
pushf
jb
lcall
inc
add
add
jmp
stos
mov
shld
addb
cli
mov
add
inc
ljmp
insb
loop
movsb
pop
repz
test
aaa
push
mov
mov
notb
add
add
add
imul
incb
xchg
in
pop
push
les
ljmp
insb
jb
shrl
adc
mov
adc
imul
cmc
xchg
push
in
stos
add
cmpsb
call
out
xchg
outsl
inc
jmp
stos
adc
and
add
rcl
mov
sahf
dec
cmp
mov
fistpll
mov
inc
sbb
cmc
adc
int3
roll
lods
lret
aad
sti
xor
rorl
push
dec
pop
ljmp
xchg
inc
add
dec
pop
sub
push
xchg
push
push
bound
mov
lret
adc
rolb
daa
pop
jg
add
loop
pop
insb
mulb
and
fwait
dec
and
mov
test
mov
movsl
dec
in
aam
fchs
or
test
scas
into
sub
aad
icebp
jne
adc
mov
xchg
dec
fs
inc
add
test
test
pop
lock
addr16
xor
adc
xor
aad
add
jnp
cli
rolb
fistl
out
inc
push
sub
and
lcall
or
add
bound
jno
jns
ss
movsl
cmp
shll
loop
loopne
add
les
jmp
js
clts
add
adc
xchg
movb
fisubs
fistl
dec
xchg
jne
xor
lcall
int
mov
cmp
mov
popf
lods
scas
cmpsl
jbe
mov
add
jge
popa
adc
sbb
add
mov
mov
sub
aas
jmp
ja
scas
dec
enter
and
divb
addb
clc
aam
fwait
arpl
sbb
xchg
lcall
sbbl
pop
jno
out
push
leave
inc
and
xchg
jo
mov
gs
or
jg
divb
push
mov
lahf
adc
sbb
movsl
or
add
data16
cmp
adc
and
xchg
push
out
xor
and
iret
mov
call
add
pop
je
loope
neg
outsb
inc
pop
cmpl
add
jecxz
add
testl
data16
outsb
pop
rolb
fsubrs
push
cmc
pop
int3
cmp
dec
push
cmpsb
test
adc
out
addl
rolb
stos
ret
or
in
and
cmp
dec
xchg
repnz
jecxz
lret
add
or
ljmp
std
jg
xor
add
cmp
nop
inc
add
mov
sub
mov
movsl
shl
cwtl
sub
stos
out
mov
pop
pop
jmp
mov
aaa
xchg
in
fmuls
jb
test
es
movsb
data16
and
lea
add
fs
js
push
mov
insb
adc
add
xor
mov
ds
sub
mov
xchg
stos
lods
ret
ljmp
inc
add
push
inc
add
sbb
in
and
add
fs
sti
lods
sub
addb
rclb
sub
adc
add
xor
push
mov
add
inc
mov
lret
xchg
mov
mov
das
inc
test
pop
addr16
push
add
fstps
fs
cld
addb
stc
mov
jg
mov
or
xor
cmpsb
in
add
or
inc
dec
icebp
xchg
stc
and
mov
pushf
and
mov
jle
inc
add
dec
movb
icebp
mov
cmp
bound
in
mov
mov
mov
pop
lods
adc
add
in
push
or
ror
add
sahf
xor
or
xchg
push
loope
add
fldenv
insb
dec
sbb
loopne
idivl
lods
out
jg
rorl
add
and
push
sti
test
adc
into
mov
xchg
inc
add
mov
daa
fdivrp
xlat
push
add
into
in
sub
mov
push
adc
add
push
pop
sub
inc
sub
sub
inc
jl
fsubs
inc
add
scas
in
cli
insb
fwait
pop
mov
add
dec
adc
push
into
iret
dec
jo
fcomp
jg
jae
sbb
mov
decl
jmp
aad
addb
jb
push
fmuls
mov
aad
xchg
xor
add
in
inc
add
lea
push
and
push
add
mov
adc
sbb
add
sbb
inc
push
or
nop
mov
mov
add
mov
in
sub
call
dec
cltd
and
fisttps
je
dec
mov
ds
jns
mov
or
daa
enter
popf
pop
push
mov
add
push
jae
sbb
loope
mov
pop
cmp
cli
les
mov
jae
enter
push
and
pusha
add
pusha
add
dec
adc
sbb
in
fdivrs
cltd
arpl
dec
rcr
sub
xor
mov
sahf
mov
mov
pop
jle
xchg
mov
inc
add
jbe
enter
add
sub
repz
addl
mov
add
insb
mov
loop
movsl
xor
push
loope
notl
jp,pn
lods
incb
pminsw
add
imul
pop
leave
xchg
jbe
inc
repnz
rolb
pushf
scas
adc
jp
jnp
out
fcom
jp
out
imul
fdivr
mov
int3
mov
test
dec
jge
in
add
sub
sub
pop
mov
repnz
add
jne
shll
scas
rcrb
push
or
cmp
repnz
mov
add
add
jo
fs
sub
add
or
mov
roll
pop
add
push
push
add
xorl
pop
or
outsb
cmp
fstpt
subl
push
cltd
fidivs
addb
stos
jae
adc
add
ljmp
test
xchg
fdivl
mov
pop
int3
push
movb
es
mov
clc
sti
pop
imul
mov
loop
fwait
stos
sub
out
dec
jmp
pop
jne
inc
add
mov
sahf
xchg
pop
push
aaa
dec
cmp
push
mov
lods
rol
inc
add
mov
insb
xor
sbb
in
add
push
mov
pop
lahf
push
adc
adc
mov
rolb
mov
add
insb
mov
outsb
les
mov
add
jne
aam
ret
or
mov
jno
aad
dec
push
dec
mov
or
xor
xor
into
jns
adc
mov
je
pop
dec
dec
movsb
cmp
lock
cmc
jae
pop
sub
push
jg
fistps
nop
notl
jmp
jge
mov
dec
leave
xor
mov
lcall
addb
addb
pushf
je
mov
fldl
sarl
daa
xchg
cs
and
add
add
filds
and
xor
jae
inc
pushf
shrb
into
pushf
cmc
dec
movq
nop
cli
xchg
push
push
lret
or
in
in
push
call
cmp
xor
scas
imul
sub
adc
mov
bound
push
add
shll
inc
mov
add
add
es
fwait
add
push
xchg
leave
pop
call
push
inc
add
ljmp
xlat
test
repnz
je
in
jne
inc
add
jb
sub
push
arpl
pushf
enter
aam
sub
adc
lods
mov
mov
sub
sbb
rcl
inc
add
test
sub
movsb
and
add
jne
cmp
pop
inc
movsb
ret
dec
mov
fcmovne
movb
mov
lret
adc
add
dec
lock
cltd
out
outsl
addb
add
pop
jmp
mov
out
in
out
popf
les
pop
push
es
add
mov
dec
adc
add
push
xchg
add
std
adc
lods
or
inc
push
jbe
lods
dec
sbb
test
fsubs
pop
pop
das
into
jl
adc
jmp
popa
lock
and
jbe
outsl
out
cmp
addb
js
adc
jae
int
lods
push
inc
xchg
inc
add
sub
jge
hlt
dec
sub
es
xor
mov
and
scas
arpl
jbe
setns
xchg
mov
and
inc
mov
lcall
inc
add
mov
xor
iret
push
pushf
sub
adc
inc
in
je
jo
fwait
ret
mov
inc
iret
adc
adc
movsl
insb
fsubrp
movb
push
xor
sbb
les
push
pop
add
loop
lret
test
cmp
test
push
xchg
js
cmpsb
mov
int3
int
fs
mov
rolb
ret
add
leave
rolb
pushf
sti
test
call
cmp
dec
lahf
movb
sahf
dec
xchg
cmp
insl
imulb
mov
nop
jae
sbb
incl
mov
nop
pop
scas
inc
add
add
xchg
sbb
nop
add
jle
and
dec
mov
adc
xchg
repnz
fwait
sub
in
lods
jns,pt
push
cmp
notl
inc
jmp
lods
mov
inc
mov
test
test
lods
sti
sti
cmp
sbb
movb
in
jb
sub
mov
dec
push
lahf
lods
mov
push
pop
das
cwtl
jmp
jnp
push
test
lods
pop
push
add
notl
mov
mov
leavew
out
inc
add
xor
push
add
dec
xlat
dec
inc
pop
cltd
xlat
mov
popf
mov
out
mull
xchg
jmp
cmpsl
lret
pop
leave
add
inc
or
mov
jmp
pop
dec
divb
jae,pt
pop
loopne
test
inc
push
imul
pop
mov
insb
movsb
fwait
das
sub
add
divb
xchg
sub
mov
test
aam
addb
iret
mov
aad
jne
adc
sbb
popf
sti
je
jae
dec
mov
or
out
ljmp
add
xor
mov
ret
daa
imul
xor
add
sbb
adc
sbb
add
add
push
xchg
aaa
inc
jo
cmp
inc
add
push
lret
cld
xchg
sub
out
rolb
rcll
inc
mov
lcall
cs
bnd
jb
sub
mov
inc
add
ds
inc
add
insl
nop
lds
push
dec
imul
and
or
pop
stos
int
sbb
rcr
mov
add
addb
cld
adc
les
cltd
adc
add
push
adc
and
insb
js
int3
sarb
cmp
jns
pop
stos
iret
test
jge
cltd
fsubrp
dec
xor
bound
pop
or
mov
and
cmp
popa
movl
hlt
inc
dec
mov
shlb
mov
mov
cmp
enter
mov
add
or
sbb
mov
std
push
ljmp
cs
frstor
inc
push
and
loopne
push
add
push
jb
push
push
xchg
lret
rolb
cmp
and
xlat
xor
xor
movb
cmp
lock
lret
inc
test
repz
xchg
clc
addb
push
and
pop
imul
xchg
test
sub
popa
jo
mov
adc
addr16
xor
mov
in
sub
and
mov
or
mov
mov
out
setge
and
dec
jmp
sahf
mov
movsl
cmp
or
orl
add
add
xchg
rolb
mov
insb
mov
cmp
sbb
in
mov
testl
push
imul
ret
stos
mov
and
scas
test
cmp
push
add
jae
cli
add
loope
push
rolb
adc
pop
pusha
add
cld
loop
dec
divb
add
adc
add
test
and
jnp
push
add
jnp
fiadds
mov
pop
sbb
pop
mov
jmp
inc
add
jo
popa
push
push
sub
add
mov
add
fwait
cmpsb
mov
arpl
xchg
jne
inc
add
insl
imul
xchg
lret
jbe
dec
mov
pop
das
dec
mov
mov
leave
loop
mov
adc
add
push
mov
and
leave
fistl
mov
ja
in
pusha
add
push
cmc
divb
or
test
mov
push
pop
xor
xchg
gs
pop
repz
cld
sub
scas
mov
fs
adc
pushf
pop
movb
dec
cld
insb
cmp
aaa
cmp
jne
dec
dec
pop
outsb
pushf
add
cmp
fwait
je
rolb
sbb
je
mov
xchg
in
ja
xlat
mov
jmp
or
add
and
mov
add
insl
cmp
add
xchg
and
mov
into
aaa
data16
inc
add
mov
ja
ja
jge
mov
add
lahf
sbb
scas
movb
stc
adc
or
popf
xlat
inc
add
inc
add
icebp
ret
sbb
jns
lcall
and
cli
push
push
test
arpl
stos
out
lock
add
add
std
mov
cmp
jle
add
mov
fs
add
mov
decl
adc
inc
add
pop
loop
pop
add
push
or
and
jmp
fwait
inc
add
ret
or
mov
add
lret
jmp
xchg
pop
jge
fdivrl
mov
lea
leave
dec
adc
out
test
mov
adc
and
mov
fldt
jle
loop
int3
fwait
aas
lock
pop
aad
add
xchg
aam
mov
inc
cs
aas
mov
mov
pop
pop
mov
rorb
mov
add
sbb
xor
clc
push
cmp
je
rolb
lcall
cs
cmpxchg
mov
xchg
fs
clc
or
jge
xlat
movsb
js
aaa
lea
dec
repnz
sbb
jnp
mov
and
mov
push
test
mov
push
repnz
mov
mov
stc
push
mov
enter
js
movb
and
sbb
in
inc
add
and
add
add
lods
inc
add
add
lods
pop
push
adc
xor
push
add
xchg
push
lds
adc
add
cmc
inc
push
ret
pop
push
insb
pop
fistpl
mov
add
movsl
or
xchg
and
mov
add
daa
jno
rcrb
lock
lea
add
sub
add
int
out
pxor
jp
jp
dec
jns
cmpsb
push
jne
jge
movsl
sub
enter
bound
cwtl
insb
or
mov
pop
lock
shll
adc
imul
mov
push
push
pop
mov
fildl
add
xor
pushf
outsb
pop
cmp
not
inc
add
inc
mov
icebp
gs
mov
mov
jl
fmull
xchg
pop
lahf
cmpsb
ja
add
popa
xchg
push
xchg
jbe
daa
cmc
or
push
xchg
test
jmp
clc
dec
cmp
add
dec
adc
mov
sarb
scas
mov
mov
push
fisttpll
mov
je
sbb
add
xchg
xor
add
ds
xor
xor
icebp
aam
adc
xor
insl
fisttpl
sub
jb
add
mov
push
lcall
xchg
lcall
imul
jmp
adc
pop
inc
jle
add
data16
dec
insb
call
add
sbb
rcll
iret
push
jg
sbb
cmpsb
icebp
cmpsl
aas
cmp
ret
adc
inc
add
stos
repnz
ds
fwait
sub
jmp
add
mov
push
cld
sbb
jecxz
cmc
gs
adc
inc
loope
ret
adc
pop
cltd
push
add
xchg
rolb
add
pop
jmp
add
pushf
in
or
mov
add
inc
cwtl
testl
inc
inc
push
test
in
das
sbb
adc
sub
xchg
pop
icebp
pop
incb
sbb
mov
data16
out
push
in
cld
outsb
sub
cmp
mov
mov
pop
xchg
add
mov
xchg
or
mov
lods
mov
cmpsb
or
sbb
add
dec
mov
push
rorb
test
es
add
cmp
or
jbe
in
das
sbb
call
add
and
inc
add
mov
cli
mov
and
test
sbb
dec
or
add
xor
xchg
emms
insb
cld
mov
ret
or
jge
repz
pand
in
jne
pusha
add
sbb
mov
add
mov
inc
jae
pop
pop
pop
and
mov
sub
insb
outsb
or
lock
nop
fcmovnbe
fsubrs
inc
add
ja
fstps
gs
ret
fstpl
into
out
jne
xchg
mov
addb
mov
daa
leave
mov
xor
out
std
mov
popf
or
andl
cmp
pusha
add
leave
mov
fbld
cmp
add
dec
dec
int3
add
insb
add
lahf
test
add
jle
repz
mov
lock
mov
push
imul
inc
dec
dec
stos
mov
sub
sub
loope
scas
jno
fwait
aaa
into
in
pop
ss
aad
xchg
ljmp
inc
add
lea
xor
add
adc
cmp
lret
dec
cld
sub
xchg
xor
add
popa
mov
jl
add
mov
inc
mov
fwait
loope
and
ret
js
mov
xchg
dec
pop
std
mov
mov
xor
xchg
cmp
jl
sbb
nop
fwait
jg
dec
inc
add
scas
lea
fwait
adc
push
add
add
popf
inc
add
jecxz
mov
icebp
jle
mov
jp
jbe
dec
add
lcall
add
fistpl
add
inc
push
fistps
inc
add
cmpsl
lcall
mov
hlt
arpl
movsl
or
lods
pop
pop
arpl
pop
and
mov
pop
ret
ret
fs
sbb
movsb
xor
xchg
out
push
xor
lods
into
popf
mov
aas
nop
data16
push
jp
les
andl
fwait
sbb
sub
jp,pn
xchg
sbb
add
nop
inc
add
jl
mov
adc
loopne
inc
add
jb
adc
int
ljmp
in
insl
enter
pop
sbb
cli
sbb
dec
xor
es
add
addb
adc
mulb
ret
or
stos
dec
push
rolb
xor
les
loopne
fs
sar
pop
jb
mov
or
mov
jne
push
lea
cli
mov
stos
popf
sbb
push
mov
insb
pop
dec
cmp
mov
adc
mov
jecxz
shll
lahf
movb
pop
popa
xlat
pop
mov
sub
js
roll
xchg
ret
pop
ds
add
xchg
ja
fisubrs
push
mov
inc
add
pop
sahf
cmp
ret
add
rcll
loopne
repz
pop
mov
out
mov
mov
mov
pop
dec
rcl
rcrb
sbb
dec
xchg
gs
or
add
leave
addb
fdivl
pop
or
mov
shl
bnd
add
ljmp
add
int
inc
add
add
scas
loop
sbb
sbb
xchg
mov
jb
push
add
pop
push
cmp
mov
inc
mov
nop
fldcw
push
mov
in
in
fwait
cmp
sub
and
add
xor
pushf
inc
add
add
mov
jns
insb
push
in
movsl
xchg
push
ds
xchg
mov
lds
add
pop
ljmp
cmp
insl
js
lret
adc
stc
dec
xchg
ja
xchg
dec
add
lret
inc
popf
pop
mov
data16
cltd
xor
js
inc
add
pop
xchg
cmc
movb
add
dec
jns
mov
add
dec
push
sar
out
cmp
mov
je
out
ret
les
add
xor
add
jle
cmpsl
pop
mov
add
add
bswap
mov
add
fcmove
scas
int3
mov
sbb
icebp
scas
aad
pop
dec
xor
xchg
mov
dec
outsb
mov
es
test
pop
scas
out
jle
xchg
ljmp
mov
lea
add
mov
mov
fsubrl
cs
xchg
inc
jmp
test
add
popl
int3
mov
aas
and
mov
pusha
add
mov
sahf
sahf
fimuls
adc
add
mov
sub
repnz
clc
mov
popa
add
inc
iret
cmp
jae
pop
lock
add
xchg
xorl
ljmp
js
mov
stos
cmpsl
into
les
icebp
jmp
popw
jl
add
addr16
sbb
imul
dec
scas
mov
lahf
testb
mov
test
popl
dec
icebp
mov
popf
sbb
jl
jmp
mov
repz
dec
mov
pop
icebp
lods
fimull
addb
repz
dec
and
xor
push
add
mov
repnz
xchg
mov
out
flds
lret
mov
jo
jmp
jle
pusha
add
xor
aaa
inc
add
mov
or
in
movsl
cld
lcall
into
inc
push
jmp
jne
sbb
aad
pop
ds
outsb
stc
es
xchg
cmp
shll
std
sahf
imul
xchg
mov
das
into
mov
das
nop
dec
mov
movb
daa
add
js
imul
imul
add
lods
dec
out
std
jb
ret
daa
cmc
movsl
outsl
ss
inc
add
pop
inc
jp
jb
and
jp
int
scas
outsb
push
pop
ja
add
addb
ret
stc
mov
jo
add
std
cmp
and
into
adc
mov
sub
and
inc
lods
cmp
cmp
dec
jle
out
mov
sub
nop
push
lds
sub
lcall
mov
pop
ret
into
aad
ret
push
cmp
jae
aaa
adc
add
jae
pop
mov
add
imul
add
mov
xchg
sub
rolb
mov
mov
je
jl
mov
add
add
sbb
add
sbb
xchg
jne
mov
xorl
sub
ds
jmp
cmp
add
jge
in
push
sbb
aaa
xlat
addb
mov
mov
push
jl
hlt
xchg
repnz
add
inc
inc
add
xchg
lea
push
stos
lds
pop
cltd
dec
dec
in
add
subl
jno
push
orps
es
adc
push
fcoms
and
inc
add
add
push
sbb
movb
add
inc
mov
lret
cmp
add
push
or
xchg
cmp
dec
frstor
addb
stos
cmp
cmpsb
mov
lret
outsb
push
lods
cmpsb
dec
roll
rolb
sbb
add
mov
in
push
lahf
and
pushf
pop
adc
ret
pop
rolb
dec
sub
aas
sti
jecxz
pop
push
pusha
add
gs
lods
icebp
lret
mov
pop
and
mov
mov
testb
sub
xchg
out
or
or
jl
jg
imul
sbb
testb
mov
cmp
sub
fistpl
into
out
or
in
mov
cmp
add
popa
in
dec
inc
inc
add
addl
add
jo
dec
or
add
stos
sbb
popf
add
pmaxub
mov
jecxz
rcll
sub
test
pop
leave
gs
xor
sub
xchg
jae
jae
xor
sub
mov
fstpt
test
inc
pop
aas
mov
xor
dec
adc
insl
faddl
outsb
and
pop
ret
in
sub
pop
daa
stos
jmp
lret
imul
in
sbb
es
push
xor
call
or
add
scas
and
add
mov
pop
inc
add
add
add
scas
ss
jle
scas
mov
add
mov
mov
ficoml
ficompl
push
pop
movb
inc
add
aas
imul
push
pop
sbb
or
ds
jno
mov
add
je
lds
cmp
add
dec
and
push
add
xchg
dec
aas
std
je
mov
push
fwait
cmp
push
or
mov
sub
add
push
sbb
lret
inc
icebp
and
out
hlt
stos
imul
pop
jp
divl
shlb
add
dec
test
cs
mov
fnstsw
xchg
mov
lods
lds
xor
pop
jno
xchg
pop
cmp
fadd
and
mov
xor
frstor
mov
dec
jb
loopne
ret
add
inc
mov
xchg
sub
add
sub
mov
xchg
iret
outsb
test
fistpll
aaa
or
mov
arpl
push
aas
xchg
push
or
lret
and
rcrl
jl
cmp
adc
popa
cmc
in
xchg
mov
addr16
jge
add
fldenvs
popf
bound
sub
outsb
ret
add
cmpsb
cwtl
mov
add
mov
mov
ds
test
add
or
fnstenv
mov
and
lcall
mov
test
popf
outsl
insl
jae
add
gs
and
call
movsb
addb
in
aad
pslld
pusha
add
cmpsb
jl
ljmp
xor
scas
pop
fistl
addb
mov
test
push
popf
sub
outsb
ret
sbb
push
cmpsb
pop
lcall
lcall
jb
add
dec
or
addb
sahf
ds
sub
push
pop
pop
jns
dec
cmp
jl
out
pop
js
jge
jbe
sub
sub
test
inc
ret
add
in
inc
add
inc
add
adc
jmp
push
loop
add
or
mov
nop
lret
and
inc
idivl
dec
outsl
dec
mov
push
int
inc
add
pop
stos
sbb
incl
mov
xor
mov
stos
hlt
fbld
mov
cmp
cmp
jmp
push
push
push
lea
jl
fcomps
jbe
pusha
add
add
shll
mov
dec
fs
mov
mov
add
inc
add
push
sbb
testl
cmpsl
xchg
and
sub
add
leave
sbb
jbe
js
jmp
cmc
and
movsl
out
bound
ret
rorb
cs
das
cld
mov
pop
in
push
adc
mov
je
hlt
loope
sarl
lods
out
adc
dec
sub
mov
mov
adc
std
xchg
sbb
add
stc
insb
jge
add
pop
adc
in
mov
test
std
xor
scas
shll
insl
out
adc
or
or
jmp
push
inc
sbb
jbe
xor
in
or
or
sti
inc
add
cmpsb
and
add
dec
mov
rcl
dec
jae
imull
push
call
repnz
mov
mov
sbb
loop
scas
jmp
add
add
in
or
push
cmp
mov
or
xchg
push
pop
das
adc
or
push
xchg
pop
jnp
je
xchg
jg
sub
icebp
in
dec
xchg
iret
inc
adc
mov
cs
xchg
sbb
inc
add
pop
bound
dec
loope
cmp
hlt
inc
add
add
sbb
out
xchg
enter
out
fsts
sbb
or
sub
loope
pop
jecxz
les
packuswb
jae
ret
andl
push
add
inc
add
fs
push
add
add
lds
cmpsb
pop
dec
ljmp
cwtl
adc
hlt
adc
pop
mov
fwait
cmpsb
rorl
in
fucomi
cwtl
sub
movsb
mov
cmp
dec
test
mov
adc
lock
push
mov
data16
pop
cmp
and
xor
ja
sbb
mov
cltd
ficoms
pop
push
pop
clc
mov
fcomp
xor
sahf
mov
daa
add
push
out
lcall
ds
mov
jecxz
mov
sub
add
sbb
jo
mov
xchg
add
jle
ds
sbb
xchg
push
test
sbb
xlat
fisubs
mov
mov
cmp
out
xor
imul
jge
add
or
push
pop
pop
sub
and
sbb
popa
shll
fs
mov
lock
rolb
push
add
popf
gs
enter
es
dec
cmp
outsl
shlb
fdivrs
loope
add
mov
add
dec
das
scas
clc
cmp
leave
imul
jmp
jnp
mov
cmp
or
cwtl
dec
jns
lods
mov
xor
scas
add
push
jo
mov
dec
sbb
sub
mov
aam
mov
aam
and
and
and
rolb
pop
sahf
fadd
add
outsb
scas
outsl
lock
rolb
add
cli
negl
add
dec
scas
xchg
rcl
test
repz
cmp
jno
mov
shrl
jbe
jecxz
xor
push
add
mov
jle
inc
add
inc
gs
addb
dec
loopne
jmp
scas
pop
xor
push
clc
insl
sbb
lds
mov
mov
fs
ss
pop
sub
jbe
and
or
addb
adc
cs
add
mov
fwait
aas
sub
pop
and
xchg
imul
scas
test
add
inc
lds
xor
into
je
inc
add
sub
jae
sbb
fsts
lcall
and
mov
add
pushf
scas
shrl
or
jmp
into
ret
negl
outsb
mov
jp
outsb
arpl
inc
xor
jbe
out
add
mov
sahf
clc
insl
pusha
add
stc
adc
subl
jae
push
cltd
jle
orl
fsubl
mov
jne
xchg
arpl
lea
jns
adc
gs
add
out
mov
lods
imull
test
push
in
fdivr
test
mov
sbb
fwait
out
add
sub
lods
cltd
adc
mov
nop
sub
adc
mov
aad
xchg
mov
loope
adc
or
mov
out
xor
arpl
add
jbe
jns
out
out
xchg
jmp
mov
lret
dec
cmc
test
outsb
sub
mov
jge
mov
movl
pop
sbb
outsb
push
xchg
xchg
in
fs
std
cwtl
dec
jne
dec
int3
fists
pop
fcmovnu
sbb
and
cmp
loopne
pop
loop
loopne
add
stos
xchg
pop
in
rcrb
stc
rclb
pop
cwtl
pop
dec
xor
jl
inc
add
jge
jg
xchg
sub
in
jg
arpl
pop
adc
xchg
jnp
jl
xchg
jo
push
cmp
aas
dec
nop
jp
adc
push
or
dec
addb
ds
ret
dec
cmovb
pop
fistpll
inc
cmpsl
push
test
add
xchg
pop
mov
jb
mov
outsb
sbb
pop
outsl
cmp
xchg
jle
cwtl
cmpsb
int
stos
push
cwtl
hlt
cmp
xchg
mov
xchg
in
jne
pop
shll
leave
mov
add
jecxz,pn
push
and
std
cld
bound
mov
repnz
jg
jae
add
sbb
inc
aaa
mov
add
add
mov
aaa
ret
stos
xchg
push
cld
add
add
adc
shrb
sub
add
aas
cwtl
adc
rcl
adc
add
lahf
dec
sbb
out
call
inc
add
lock
mov
lret
sub
mov
popf
fs
cmp
adc
add
jg
daa
subl
cmc
mov
out
pop
and
ds
lods
aaa
push
jmp
jbe
add
cld
cld
movsl
mov
mov
mov
mov
xor
incl
sbb
lods
push
add
gs
and
cmpsl
mov
add
sub
add
call
aam
out
cwtl
push
push
fstp
cmc
mov
dec
ljmp
xchg
imul
mov
jno
sbb
aaa
dec
fnstcw
add
jns
imul
es
jne
ja
add
outsl
pop
mov
dec
push
jecxz
imul
add
imul
and
js
imul
fcmovbe
push
xchg
dec
loop
lea
hlt
xchg
ficoms
test
repz
add
popf
xor
dec
xchg
jnp
loope
cli
loopne
push
loopne
mov
dec
dec
aam
mov
or
and
pusha
add
nop
mov
fiadds
cld
push
sti
rolb
or
pop
rolb
shlb
cltd
pop
xor
fisttps
add
inc
add
loop
popf
test
aam
dec
xchg
push
xchg
pop
mulb
adc
pusha
add
lahf
sub
std
pop
jg
cmp
arpl
jae
adc
jb
sub
dec
dec
add
inc
add
add
lods
repnz
and
mov
mov
mov
lods
and
push
inc
add
jnp
rclb
daa
bound
mov
jge
stos
in
pop
mov
or
and
push
add
jmp
or
jg
add
scas
inc
fistpl
xchg
outsb
jne
sub
es
in
xor
add
add
jae
dec
sub
jno
cmp
cmp
jbe
outsb
mov
and
jmp
rolb
add
in
repnz
cmp
insb
in
lods
push
call
mov
out
jle
pop
push
fstp
adc
mov
cmp
repnz
add
mov
movl
cli
sbb
jle
lret
sahf
rep
inc
add
aad
popf
faddp
add
push
clc
cli
repz
mov
stos
mov
ret
cmpsb
dec
and
push
xor
adc
jecxz,pt
jbe
push
sbb
fstpl
mov
xchg
scas
psllq
movb
fbld
mov
mov
dec
lods
cmp
push
add
push
lret
int
es
out
stos
add
jle
sahf
push
addb
scas
xor
pop
insl
jge
mov
push
das
cmp
scas
push
xchg
pop
cli
aaa
fsubrs
cmp
popa
rolb
pop
das
push
mov
dec
scas
jmp
mov
pop
xor
and
outsl
sti
test
sbb
xchg
stc
mov
sbb
cmp
in
dec
aaa
stos
mov
pop
push
testl
in
fwait
test
xor
cli
inc
sbb
jbe
cmp
out
subl
repnz
rol
add
mov
add
dec
std
and
int
mov
xchg
dec
push
filds
mov
mov
pop
lods
mov
xchg
cmp
jnp
sti
inc
add
cs
inc
add
add
imul
add
xor
ret
cwtl
ljmp
stos
dec
mov
add
lods
mov
mov
cmp
das
loop
mov
mov
push
add
mov
repnz
sahf
repz
addb
aam
jg
ret
add
xchg
mov
add
pop
pusha
add
cmp
in
scas
mov
lea
aam
add
cmp
add
dec
sbb
ret
hlt
xor
sti
imul
repnz
and
pop
inc
add
loopne
lcall
in
jg
test
lods
fmull
add
mov
into
add
jmp
fidivl
adc
jmp
and
orl
adc
add
jl
mov
add
mov
leave
mov
push
rcr
pusha
add
es
add
add
decb
ficoml
insb
ja
lret
sub
add
inc
pop
fiadds
popa
xchg
fsubs
and
cli
ffree
sbb
xchg
lods
jae
dec
xlat
clc
push
add
pop
dec
rolb
out
xor
dec
aas
push
xor
xchg
sti
xchg
and
stc
ljmp
iret
imul
add
and
adc
mov
leave
aas
lds
inc
add
aaa
out
and
jae
mov
sbb
adcl
add
cmp
insb
mov
mov
jmp
das
mov
lahf
insb
xchg
les
mov
xchg
cmp
add
movsb
bound
in
push
cmp
jae
mov
add
pop
or
sbb
in
mov
or
mov
mov
push
xchg
fisttps
push
fildll
stc
xchg
and
xchg
outsb
movsl
in
add
addb
fsubs
dec
inc
scas
mov
add
cmp
pop
add
lahf
pop
daa
push
mov
jl
xor
orl
iret
mov
sub
add
xor
mov
add
add
aaa
jnp
or
xchg
mov
push
das
jno
jb
out
rolb
push
or
je
leave
jl
cli
push
xchg
test
icebp
fbld
incl
push
lods
mov
cli
in
xchg
out
cltd
xor
js
dec
movsl
mov
in
pop
sbb
in
xor
xor
dec
cmc
movl
or
stc
addb
outsb
addb
mov
sbb
cmp
pusha
add
add
imul
cmp
ror
push
cmc
or
jecxz
inc
add
and
cmpsb
fwait
lea
aad
jnp
add
fldt
xchg
jno
jnp
out
xchg
or
daa
jo
pop
test
push
inc
icebp
xor
sub
dec
cld
pop
pop
sub
daa
adc
mov
sub
adcl
add
jae
into
push
and
mov
add
inc
add
dec
xchg
xchg
xchg
dec
outsl
addb
out
push
add
popf
leave
shrl
ret
orl
cmp
repz
or
mov
add
arpl
adc
pop
pop
popl
xor
out
mov
movsb
data16
inc
jp
cmp
mov
mov
hlt
pop
pop
xchg
adc
loope
jle
lods
dec
out
inc
inc
loope
fisubrs
adc
push
insb
lret
scas
sbb
push
ds
jp
mov
cmp
fldcw
mov
adc
mov
xor
xor
xchg
sbb
sub
shrw
mov
sbb
ljmp
or
mov
and
sbb
xchg
push
dec
cmc
dec
shr
mov
mov
sub
out
add
lret
sbb
xchg
ja
rcr
iret
out
xchg
leave
clc
jbe
add
pop
nop
nop
imul
mov
xchg
pop
push
add
daa
sbb
mov
ljmp
or
push
mov
ss
lret
push
push
mov
stos
repnz
aas
inc
add
inc
call
sub
psrld
repnz
dec
xchg
cmpsl
icebp
cltd
push
add
xor
mov
dec
fmuls
addb
repnz
or
repnz
and
and
sub
jo
iret
fiaddl
add
sub
add
rolb
adc
mov
mov
or
getsec
and
sub
add
mov
cmp
pop
sbb
push
add
cmp
sbb
mov
add
mov
test
sub
or
movsl
mov
prefetcht0
mov
js
jb
testb
xchg
mov
sub
add
add
mov
inc
scas
adc
mov
popf
jns
add
pusha
add
inc
rclb
nop
js
mov
add
sti
jg
mov
mov
add
add
push
add
fwait
lcall
or
add
fstps
shrl
test
add
lahf
call
adc
xchg
fcompl
fidivl
pop
xor
mov
js
push
inc
mov
cld
jno
stos
push
cmp
mov
sarl
add
inc
add
add
cmc
addr16
add
add
mov
cmp
in
fwait
fwait
mov
sub
in
mov
add
xchg
loop
popf
in
aad
push
fisubrl
xchg
popf
inc
and
stos
mov
jae
mov
jge
pop
inc
and
inc
aaa
pop
stos
popa
comiss
or
adc
jmp
add
push
popa
arpl
mov
jg
xor
push
into
push
mov
mov
pop
faddl
push
jmp
lea
and
sub
test
xor
jecxz
add
int
add
sahf
out
popa
into
push
mov
loop
scas
add
inc
jne
mov
ss
jg
push
xor
xchg
sbb
add
mov
leave
or
push
mov
mov
add
leave
mov
mov
ljmp
fbstp
jno
cltd
and
in
nop
cmp
mov
lea
inc
xlat
pop
repz
xorl
addr16
jne
js
add
jl
adc
sti
push
inc
aam
or
sbb
add
cmp
inc
add
dec
sbb
mov
add
movsb
fs
in
sbb
push
inc
add
repz
add
mov
in
repnz
movsb
test
mov
mov
xchg
not
int3
repz
xor
sub
fmulp
rclb
mov
push
add
mov
dec
ja
xlat
jg
sub
cmp
mov
dec
je
adc
sub
imul
push
cmp
jl
aas
push
xor
negb
mov
adc
out
jmp
adc
aas
cli
mov
mov
adc
or
cmp
pushl
mov
add
mulb
jo
mov
and
movb
jp
mov
rclb
sub
cmp
sub
mov
mov
mov
jp
les
ljmp
lcall
notl
adc
pop
pop
jp
jecxz
cmpsl
lcall
dec
out
popf
cmp
out
pop
out
push
cmp
ss
mov
inc
add
fsubrs
repz
xchg
and
rolb
ljmp
loope
mov
sarl
adc
out
bound
sbb
jns
test
xchg
sti
movb
rolb
insb
adc
inc
add
addb
and
mov
add
mov
rolb
mov
xchg
pop
sahf
popf
mov
test
inc
pop
jmp
cli
es
addb
sbb
movsb
or
add
sbb
imul
cmp
fnstcw
cmp
nop
sti
ljmp
and
add
lds
ljmp
sarb
imull
in
dec
les
mov
cwtl
jno
jle
in
bound
ds
push
inc
add
pop
sbb
bound
js
rcrl
inc
add
mov
mov
in
arpl
stos
xchg
inc
add
inc
xor
pop
cmp
mov
add
pop
or
fs
ljmp
xor
fisttpll
xor
and
out
pusha
add
or
cld
addb
add
sbb
xor
add
jecxz
je
pop
push
divb
pop
hlt
fnstenv
or
rolb
lea
data16
sub
and
int3
lahf
test
js
cli
push
fldl
nop
cwtl
cmp
leave
addb
jo
fnsave
jge
add
or
mov
sub
testb
xchg
dec
pop
xor
je
pop
daa
mov
or
jne
add
mov
jl
pop
jns
fdivp
mov
xor
add
xchg
cmp
dec
je
xor
inc
add
dec
aad
bound
push
jg
jne
int3
push
add
sbb
jecxz
jb
sbb
ficomps
stos
mov
adc
stos
mov
add
gs
sub
adc
lods
fisttpll
add
inc
das
movsb
std
testb
sti
dec
and
xchg
cmp
les
adc
add
outsl
lods
inc
sbb
add
adc
add
repz
in
xor
das
lret
pop
test
out
xor
push
add
rolb
dec
adc
test
jmp
mov
mov
fwait
adc
pushf
push
add
bound
sbb
adc
or
or
push
sbb
mov
ss
push
es
aaa
into
dec
pop
aas
inc
add
inc
jg
lret
out
in
mov
add
jge
add
clc
add
nop
add
lahf
or
pop
ja
mov
ss
cmpl
clc
mov
cmp
push
add
dec
add
inc
aaa
xlat
jno
push
sub
push
push
mov
psraw
push
and
aam
movsb
mov
mov
or
inc
mov
fidivs
cmp
jmp
add
popf
mov
clc
fs
jb,pt
add
sbb
push
icebp
pop
xchg
cmpsl
bound
cmp
filds
mov
push
out
ret
daa
mov
push
dec
in
push
cld
pop
mov
sbb
idivl
mov
pop
lods
add
add
ret
or
fnstcw
add
lret
pop
lret
xchg
adc
mov
mov
xchg
data16
mov
jl
add
adc
adc
push
lret
add
divb
lcall
jp
and
push
or
std
adc
loop
aaa
aaa
incb
xor
adc
cmp
add
fimuls
add
int3
xchg
sub
add
and
icebp
pop
rcll
repnz
cli
or
jp
imul
add
add
scas
inc
mov
daa
cli
mov
inc
add
mov
add
inc
call
xchg
push
sbb
or
xlat
stos
hlt
mov
mov
out
in
dec
aas
popf
sbb
add
inc
or
push
addb
sub
mov
mov
fmuls
popa
test
sub
test
add
cmp
arpl
dec
rcrb
or
push
stc
pop
rorl
and
cwtl
or
dec
addb
cmpl
movb
lods
jle
sub
repz
cmc
test
in
arpl
addb
xchg
xor
push
add
out
sub
rcll
daa
jne
or
loopne
mov
push
bound
inc
add
jne
mov
push
ds
jg
data16
add
sbb
or
xchg
cmc
nop
xchg
rep
push
loope
pop
hlt
sub
mov
pop
pushf
inc
add
xchg
subps
rcr
jno
cld
cmp
and
and
mov
in
add
lea
fisttpl
push
arpl
jnp
xchg
pop
cmp
ljmp
mov
or
int3
jmp
add
add
add
jae
popa
or
adc
out
sbb
mov
sbb
divw
xchg
or
lds
inc
add
out
inc
add
test
mov
addb
imul
lahf
xchg
repz
les
sbb
mov
mov
add
sbbl
call
rolb
push
in
add
les
and
adc
outsb
lods
addr16
cld
imul
jae
daa
push
arpl
cmpsb
loopne
inc
add
push
out
mov
jge
xchg
jae
std
fistl
mov
iret
sti
and
movsb
test
push
je
int3
xor
lods
push
pop
scas
and
cwtl
out
mov
and
sub
stos
pop
inc
sarl
outsb
add
pop
into
or
ljmp
and
jecxz
mov
fcompl
pop
mov
mov
sti
inc
add
outsl
adc
jg
dec
jp
es
pop
imul
mov
lods
sub
ljmp
repz
dec
pop
add
and
ret
es
mov
inc
add
mov
dec
mov
jg
out
add
adc
idivl
aam
add
add
cs
sub
cli
lahf
add
sbb
adc
mov
dec
add
mov
iret
jmp
cli
sub
jo
add
enter
jmp
test
adc
push
scas
inc
data16
fiadds
movsb
icebp
pop
hlt
inc
test
push
xor
pop
test
mov
pop
pop
mov
loopne
mov
xchg
filds
push
fucom
sub
in
add
pop
inc
ljmp
add
add
mov
outsl
and
cwtl
outsl
pop
cs
clc
daa
jb
sbb
arpl
adcl
insb
push
lret
pop
cs
pop
xchg
fisubs
and
pop
dec
mov
or
lret
push
mov
xlat
cmp
add
in
test
pop
daa
cmp
or
in
xor
add
and
adc
stos
hlt
sbb
jle
dec
movb
mov
jp
push
xor
cmp
sub
nop
cmpsl
aad
cltd
jmp
add
add
and
or
push
sbb
jno
push
add
add
xchg
pop
push
add
clc
sub
add
jae
cmp
sti
sub
daa
test
popa
in
mov
mov
add
add
mov
repnz
lcall
rorl
rolb
pop
cltd
call
sub
insb
add
xchg
lds
pop
sub
sbb
mov
outsl
jb
pusha
add
daa
repnz
leave
jns
inc
scas
xchg
inc
add
cmp
xor
sbb
cmpsl
mov
sbb
test
mov
pop
inc
add
out
ds
arpl
arpl
outsb
movl
pop
inc
daa
loope
xor
lret
stc
cmp
sbb
mov
add
mov
add
sbb
add
push
cmc
pop
les
cmc
addb
fdivr
jl
clc
xchg
mov
mov
or
jge
push
mov
sub
addl
aam
mov
in
decb
xchg
jmp
inc
insb
mov
icebp
or
add
xchg
jmp
stc
out
mov
xor
test
pminub
imul
sub
mov
push
dec
xchg
mov
add
stos
js
mov
pop
mov
gs
stos
sbb
insl
adc
in
jns
jnp
leave
rol
adc
sbb
test
pop
lret
dec
cmp
loop
sbb
inc
rolb
es
add
add
icebp
jb
les
add
mov
out
push
sub
jmp
dec
sub
add
or
add
xchg
rcr
movsl
lea
push
jns
xor
inc
add
je
xchg
push
add
push
in
jbe
inc
add
cmpsb
add
inc
pop
andl
xchg
mov
or
adc
push
das
int3
pop
cmp
lret
jmp
shrb
add
mov
addr16
mov
je
fidivrs
mov
dec
out
sahf
fwait
sbb
gs
sbb
sub
nop
sbb
add
push
add
pop
movb
mov
test
aaa
icebp
xor
mov
push
pop
loope
add
fsubl
add
mov
or
push
cmpsl
sub
add
insb
shrb
orl
dec
sqrtps
mov
mov
lods
nop
mov
leave
jnp
or
mov
insb
jecxz
inc
insl
out
mov
dec
jp
cmpsb
cltd
es
xchg
push
stos
xor
mov
ljmp
xchg
sahf
mov
add
movb
fldt
stc
pop
pop
xchg
xchg
imul
push
lock
jnp
popf
pop
in
in
sbb
in
ret
add
mov
xchg
inc
add
sub
inc
inc
dec
ljmp
adc
mov
hlt
aaa
lock
ret
mov
xchg
ss
add
push
loope
aad
add
xchg
subl
idivb
xchg
ss
mov
loope
lods
aam
push
sub
test
mov
jo
add
push
cld
push
mov
aas
in
push
ret
shll
add
insb
std
clc
mov
test
cmp
mov
pop
andl
add
fisubl
cwtl
mov
sub
xchg
ss
loopne
fistps
cmp
mov
adc
insl
mov
dec
cmc
push
das
or
sub
fs
pop
jno
mov
out
sarl
loopne
mov
sbb
repz
push
cli
jmp
roll
add
hlt
push
ja
inc
push
inc
add
push
sub
add
mov
sahf
sbb
cld
and
in
add
daa
add
cmp
mov
xor
mov
push
sub
jg
xor
mov
enter
cmp
mov
loopne
inc
add
add
add
outsb
sbb
lahf
shrb
outsl
pop
sub
push
cmovne
cld
inc
rolb
mov
bound
cmpsb
sahf
ss
jns
xchg
insl
pop
out
xchg
jns
idivl
adc
insb
mov
jg
pop
add
jge
and
jnp
cld
cmovnp
jg
repnz
add
bound
stos
fdivr
aas
sbb
sub
bound
fstpl
or
es
stos
ljmp
mov
pop
mov
addb
add
cltd
mov
cmp
xchg
lods
pop
test
mov
into
notl
push
xor
sbb
sub
xchg
aam
cmpl
mov
inc
add
addr16
dec
sbb
loopne
xchg
add
imul
xor
jae
sahf
rolb
push
das
xchg
jle
sbb
or
and
jae
les
gs
push
sub
imul
adcl
fldl
xor
add
mov
fdiv
jbe
popa
cmpsl
sub
and
jle
push
dec
sbb
pop
in
inc
fmuls
jne
rorb
add
add
add
mov
cwtl
mov
push
ret
pop
mov
mov
jmp
loop
sbb
hlt
xchg
add
sahf
xor
cs
popf
add
add
and
jp
add
idivl
lcall
int3
leave
mov
sbbl
xor
out
addl
cld
jg
insl
rolb
add
lods
cmc
push
add
push
lretw
mov
mov
and
aad
lds
nop
insl
add
cmp
adc
dec
je
push
loop
mov
pop
cli
nop
popf
dec
dec
ja
test
adc
mov
out
dec
idivb
jo
prefetch
add
imul
cmpsl
repz
add
add
pop
pop
nop
addb
inc
jae
dec
xchg
stos
filds
js
sub
stc
sub
fs
bound
popa
ficompl
sahf
in
sbb
repnz
leave
popf
out
add
add
pop
stos
jg
mov
dec
insb
insl
ret
inc
add
push
dec
mov
xchg
in
inc
add
or
cltd
fcompl
add
xchg
lret
je
sub
xchg
fistpll
mov
sti
mov
bound
hlt
push
lcall
mov
ret
xchg
jae
lods
ret
mov
mov
inc
add
iret
add
dec
rol
rolb
add
pop
out
sub
mov
push
jnp
ficomps
lret
les
mov
add
aad
add
popa
sub
push
cld
enter
clc
jle
pop
sub
xor
insl
jg
push
pop
and
adc
cmpsb
or
data16
cmp
mov
mov
iret
lock
push
or
sbb
add
push
test
leave
in
add
cltd
and
mov
popa
shrl
dec
movb
mov
xor
add
ljmp
shll
frstor
cmp
repz
cvtpi2ps
mov
add
test
arpl
push
pop
adcl
popf
leave
arpl
repz
lods
test
hlt
xchg
add
fcompl
add
iret
not
adc
add
add
into
xchg
lcall
lret
lcall
cli
dec
mov
and
ror
pop
adc
stos
mov
mov
imul
lahf
lcall
mov
mov
or
sti
popa
sbb
icebp
ret
ret
dec
imull
in
les
fstps
xchg
pop
jb
push
pop
das
mov
mov
push
inc
add
mov
sub
test
das
and
sbb
push
jmp
imul
xor
adc
inc
add
add
add
add
je
lock
test
or
mov
jmp
in
adc
sub
stos
jae
add
add
cmpsl
jo
inc
add
or
out
addr16
add
inc
add
aam
ret
inc
xor
push
cmp
shll
insl
cld
mov
in
enter
stc
pop
xchg
xor
mov
or
cmpsl
pop
sbb
addr16
ficompl
mov
cmp
adc
lahf
pop
inc
add
lock
dec
pusha
add
mov
add
test
cmp
add
inc
add
xchg
ret
jl
nop
push
repnz
xchg
add
test
out
nop
push
mov
popf
fwait
movb
pop
fisubrl
pop
out
push
inc
add
and
pop
repnz
in
pop
hlt
fbld
pop
into
cmp
aas
ja
aaa
imul
lret
dec
ret
mov
mov
or
addb
add
or
fs
loop
xchg
bound
loope
fcompl
mov
add
out
pushf
add
jno
adc
daa
cld
and
add
add
aas
jns
mov
sub
rolb
pop
mov
pop
mov
out
cmpsb
test
sbb
jno
add
mov
add
or
fwait
jle
ret
dec
ja
sub
add
jo
pop
loope
outsl
push
cmp
fbld
pushf
ret
and
mov
jb
add
scas
sub
xor
or
xlat
xchg
aam
mov
int
xor
jns
sub
cmp
sub
jmp
daa
sub
mov
pop
stc
lds
or
or
insb
xchg
push
add
outsb
push
imul
jns
mov
inc
add
jge
xchg
bound
sbb
lock
out
aas
std
or
js
push
add
sbb
cld
fdivr
and
or
adc
cmc
jl
jae
and
sahf
popa
cmpsb
icebp
pop
loopne
adc
call
test
rolb
push
adc
adc
add
push
jns
add
add
daa
adc
jae
mov
xor
add
notb
mov
mov
cmp
add
mov
add
mov
aam
cmp
xor
sbb
sarl
xchg
sbb
mov
cld
cmp
add
push
hlt
ds
cmc
in
or
inc
add
ud0
stos
add
fucomp
mov
mov
fsts
adc
inc
add
add
sub
in
dec
out
lahf
adc
addr16
adc
xor
mov
sbb
frstor
iret
addl
repz
jo
sub
ficoms
hlt
pop
xor
add
add
sbb
dec
sbb
cltd
cmpsb
fisubrs
call
add
imul
jbe
adc
call
jns
mov
adc
add
xchg
pop
or
sbb
daa
pop
lcall
xchg
jl
jmp
mov
loope
adc
lea
insl
mov
out
arpl
test
push
mov
cmp
and
mov
lea
arpl
xor
pop
push
movsl
dec
loope
pop
cmp
or
inc
add
add
ret
add
mov
pop
mov
out
push
pop
cs
add
jmp
push
xchg
mov
mov
pop
outsl
lcall
out
sti
adc
push
dec
adc
cmc
mov
xchg
pop
or
pop
inc
add
cmp
sub
sti
icebp
ficomps
repz
cltd
mov
fldcw
xor
and
inc
add
sub
ret
aaa
stos
sub
jno
inc
add
jmp
test
lcall
ss
imul
out
sub
add
loop
imul
pop
lock
add
jb
hlt
rcrb
and
add
add
out
sarb
xchg
push
push
mov
shll
mov
xor
sbbl
jmp
cmp
mov
loop
dec
or
fcomi
jmp
push
das
jb
add
repnz
xchg
movsl
outsb
call
test
scas
dec
daa
xor
xor
inc
add
cmp
add
xor
mov
add
dec
out
sbbl
dec
faddl
bound
jno
stos
push
adc
add
adc
add
loop
insb
int3
out
out
inc
add
cld
outsl
or
cmp
dec
test
add
xor
sbb
int
test
adc
aas
or
and
sub
mov
mov
insb
lods
stc
sbb
pop
cmpsl
and
push
xchg
fistpl
mov
pushf
pusha
add
das
lods
pushf
ljmp
add
dec
in
add
nop
lock
aaa
stc
push
ret
das
xchg
add
gs
push
sbb
xor
cmp
movsb
push
add
mov
hlt
iret
into
cmpsb
push
fstl
adc
addb
add
fldl
add
inc
add
inc
push
push
lods
dec
cmp
mov
adc
mov
adc
lahf
sahf
movsb
shll
add
pop
lods
dec
sub
in
out
mov
aad
mov
cmp
push
fucom
fisubs
add
jae
jnp
mov
shlb
lds
movd
pushf
and
addb
push
adc
jge
repz
lret
pushf
adc
adc
mov
push
add
add
addb
sbb
in
movsb
add
cwtl
and
sbb
insl
dec
push
daa
mov
cmp
sbb
hlt
push
jg
pop
in
imul
cmp
call
fdivrp
sub
lds
mov
insb
movb
add
add
jae
stos
or
adc
xchg
lret
add
cli
pop
loopne
adc
mov
movb
sbb
jb
addb
std
dec
lods
or
lds
lds
je
sub
add
xchg
not
jecxz
add
pop
push
jnp
inc
scas
or
cmp
cmp
pop
test
and
or
add
mov
gs
ja
leave
inc
add
test
pop
enter
mov
popa
and
adc
add
loopne
pop
loope
adc
fstp
fwait
jle
loopne
in
jmp
call
mov
sub
add
pop
lods
pop
push
or
xchg
mov
or
add
mov
jmp
or
jne
test
sub
jae
sti
aas
pop
aam
testl
sbb
les
out
stc
cs
clc
inc
add
out
add
jnp
bound
cs
push
add
push
push
add
or
jle
cmp
xchg
inc
add
outsl
dec
movsl
or
out
add
add
aam
add
mov
popl
pop
in
pusha
add
push
adc
rcll
nop
xchg
iret
fildll
and
jne
push
add
and
pop
das
imul
adc
mov
outsb
inc
cmp
sahf
jl
adc
mov
data16
add
wbinvd
fidivl
enter
lret
mov
cmp
ret
pop
into
shrl
inc
fldt
add
std
and
mov
add
or
add
sbb
push
add
mov
rcll
add
sub
ljmp
adc
adc
cmp
xchg
addb
mov
lcall
addr16
and
hlt
addb
sbb
xor
stos
and
pushf
icebp
and
into
out
xor
sub
fsubrl
add
test
sarb
aad
outsl
lahf
inc
add
mov
pop
cmp
scas
mov
add
pop
cmpsl
xor
gs
scas
cmp
out
out
hlt
pop
dec
adc
test
sub
int
loop
test
loopne
dec
push
adc
jnp
add
xor
insl
or
xor
pop
xor
int
dec
pop
mov
mov
incl
enter
outsb
mov
hlt
test
mov
pop
mov
jno
xor
mov
xor
ds
pop
jnp
jle
xchg
and
cmpsb
push
add
add
out
mov
mov
push
shll
jno
addb
ficoml
push
push
int
fsubl
ja
add
pop
mov
rcrb
or
jmp
cmp
sbb
imul
jecxz
fisubrs
pop
xor
xor
adc
xor
pop
jge
push
hlt
ja
dec
inc
dec
loope
scas
call
add
xchg
stc
mov
jne
mov
jmp
push
inc
add
pop
push
dec
lret
or
pop
icebp
and
fcomps
lcall
add
jbe
addb
cltd
jne
xchg
pop
push
add
jmp
cltd
push
mov
and
xor
das
mov
add
add
scas
and
stc
cmp
scas
mov
add
add
sar
push
push
xchg
and
rcl
jmp
push
mov
cmp
int3
cmp
push
inc
add
outsl
and
xchg
sub
cmp
add
add
sbb
aaa
sbb
les
js
mov
xchg
iret
divb
fs
mov
xchg
pusha
add
push
addb
enter
push
and
adc
sbb
jb
mov
push
pop
mov
lret
lds
test
ss
mov
jl
xor
mov
xchg
call
add
bound
rcll
dec
or
jo
mov
loopne
repz
repnz
lret
pop
inc
jno
mov
add
add
movsl
and
lea
add
adc
icebp
inc
add
pusha
add
adc
movsl
jp
sti
and
lahf
pop
xor
in
addb
addb
fwait
sub
shll
int
push
fsubr
in
fildl
pop
push
mov
jo
mov
xchg
cmp
add
dec
sub
cmp
ror
inc
xor
dec
add
mov
cmpsb
lock
fimuls
add
repnz
pop
and
adc
dec
mov
ret
in
adc
cli
roll
xchg
mov
test
pop
iret
gs
rolb
cmpsl
pop
xchg
mov
leave
punpckldq
add
push
dec
out
scas
sub
sbb
mov
in
ja
popf
fsubrs
and
std
mov
xchg
dec
adc
dec
jns
xchg
sub
jbe
popf
mov
add
lds
mov
in
add
jb
and
xor
out
fmulp
pop
mov
sahf
das
out
mov
fs
inc
fimuls
and
cmp
rcr
ljmp
inc
pop
inc
jp
in
lea
cld
sub
nop
mov
add
pop
sub
jbe
outsl
mov
xor
lahf
jae
sub
les
sub
and
fadds
add
aam
inc
mov
mov
xlat
dec
in
xor
xchg
sbb
dec
xchg
ret
repz
fildll
push
sub
jnp
add
xor
add
rolb
jmp
and
mov
xchg
add
rolb
insb
test
leave
iret
test
mov
cmc
mov
jns
das
clc
jbe
in
pop
in
movsl
mov
add
scas
jae
stc
xchg
mov
dec
je
mov
aas
pop
inc
add
push
pop
jb
in
push
add
jo
rclb
mov
shll
lock
bound
mov
jle
xchg
add
xchg
hlt
inc
add
add
addb
dec
arpl
rorl
fcoml
std
mov
mov
or
ja
mov
add
out
insb
loope
repz
sub
je
mov
ljmp
incl
add
add
inc
add
in
std
jb
cmpsb
shlb
repz
mov
and
pushf
xchg
push
inc
and
fnstenv
fstp
sub
push
add
hlt
dec
jg
dec
pop
mov
jp
ss
jp
mov
xchg
xor
pop
nop
add
xchg
sub
movsl
rolb
sahf
imul
je
adc
add
ret
adc
xor
add
xchg
mov
pop
fdivrp
mov
add
jge
lcall
imul
jg
or
ds
lret
fisubrs
decl
mov
add
in
ja
movb
call
sub
jo
add
xor
mov
out
leave
dec
int
push
rcl
sbb
cmp
cmp
xor
mov
addr16
jge
addb
cli
arpl
popl
ss
jecxz
cltd
hlt
xchg
mov
and
ljmp
test
ljmp
aas
mov
movb
hlt
std
lret
add
push
or
inc
add
xchg
fildl
insl
and
jno
mov
gs
fs
xor
mov
add
adc
adc
adc
add
loope
addr16
and
jne
pop
test
cmp
aad
test
add
fisubrs
add
dec
lcall
pop
fcompl
fwait
cld
mov
loop
fwait
push
cld
push
xchg
dec
aam
fcmovnb
decl
pop
enter
popf
addr16
dec
gs
dec
mov
or
xor
and
sub
test
add
add
jno
add
fcomps
call
xchg
mov
fdivr
cld
cld
xchg
mov
inc
pushf
dec
std
sti
jno
cmp
cmp
das
push
mov
pop
lock
cmp
icebp
and
stc
inc
add
mov
jo
sbb
xchg
sub
or
lods
std
fwait
insl
jle
insl
daa
fmul
xor
scas
push
pop
popf
push
mov
mov
enter
push
jg,pt
outsl
inc
jmp
loop
hlt
mov
hlt
xchg
push
aaa
fdivs
int3
cltd
jnp
jae
xlat
vmread
rolb
aas
add
adc
subl
jmp
mov
add
gs
mov
jg
add
inc
add
lds
xchg
push
loop
pop
dec
adc
dec
mov
push
mov
and
cmpsl
or
mov
pop
jns
stc
pop
and
add
jle
dec
frstor
int
test
rcll
pop
adc
out
outsl
insb
stos
pop
push
add
pop
fnop
push
movsl
mov
mov
inc
add
fisubrl
xor
add
loope
xor
dec
cmp
movb
adc
push
fcmovnbe
outsb
fildll
out
mov
fsin
fildll
popf
mov
add
fnstcw
push
out
jb
inc
add
jne
sub
xchg
mov
mov
addb
push
aaa
and
bound
add
cs
pop
mov
push
jl
cmp
fsubs
or
push
jo
movb
inc
add
add
adc
scas
ljmp
add
addb
stos
inc
loopne
dec
shrb
add
ljmp
das
ret
mov
inc
pop
cmp
xchg
in
clc
jns
sub
inc
test
add
push
jne
cmp
jno
or
add
and
dec
lock
loope
cmp
or
xor
fcoml
push
pusha
add
hlt
mov
add
pushf
ja
add
pop
mov
add
test
add
enter
mov
add
out
adc
leave
addr16
add
sbb
mov
xor
test
add
xchg
mov
xchg
xchg
mov
dec
stc
push
mov
mov
adc
into
lods
mov
std
lcall
add
xchg
dec
mov
xlat
stos
xchg
jmp
fistps
xor
or
insb
push
mov
jmp
jge
or
add
add
outsl
test
xlat
jmp
dec
xadd
adc
scas
movb
lds
into
push
pop
sbb
dec
pusha
add
lods
fisubl
andl
gs
shll
int
push
test
imul
movsb
lods
adc
mov
sahf
popf
pop
cli
push
xchg
mov
add
dec
enter
fwait
dec
mov
dec
push
and
fnstenv
out
xor
mov
dec
lea
std
push
mov
xor
outsb
sub
xchg
sub
inc
add
add
xlat
lret
clc
lret
hlt
jne
mov
cmp
es
scas
jg
addb
or
outsl
mov
sbb
movsb
sbb
test
call
lea
jo
sub
push
or
std
aad
add
cmp
xchg
jecxz
xor
xchg
sbb
and
sub
pusha
add
xchg
call
inc
ja
jnp
jl
mov
pop
data16
mov
addr16
add
in
addr16
gs
fstpt
movb
mov
xor
and
push
jae
rolb
cld
test
push
mov
lcall
out
insl
mov
aad
or
adc
icebp
mov
sahf
inc
add
call
in
xchg
xlat
push
dec
push
mov
adc
dec
in
push
out
fmull
out
das
cmp
xchg
cmp
xorl
dec
pop
inc
aaa
icebp
mov
mov
dec
lret
in
add
add
cmc
fsubrl
add
in
dec
addb
pop
sti
mov
lcall
fisttpl
bound
pop
int3
push
addr16
scas
xchg
jg
cmp
mov
inc
cmpl
popf
shll
fsubl
add
add
add
or
les
hlt
out
xor
add
dec
enter
dec
or
loopne
push
stos
fidivrl
int
add
and
popf
sbb
pop
cwtl
pop
lret
push
cmpsb
cmpsl
pop
dec
lods
mov
sbb
and
adcl
or
popa
mov
add
dec
sbb
cmp
push
cwtl
or
fisubs
cmp
mov
int
hlt
loopne
addb
cwtl
inc
add
cwtl
fdivrp
sbb
inc
dec
sub
xchg
jno
scas
inc
add
lods
sub
and
cld
and
add
inc
add
mov
lcall
inc
add
ret
xchg
aaa
sbb
add
xlat
mov
ficompl
out
lcall
push
adc
sarl
xchg
cmp
movb
add
sub
addb
and
ds
sbb
pushf
nop
std
push
in
insl
dec
test
or
insb
push
sbb
dec
imul
add
jno
and
mov
jmp
mov
xor
and
jae
mov
jl
jnp
cmp
adc
jl
mov
subl
add
push
adc
data16
xlat
jg
ret
xchg
or
data16
into
out
mov
aas
in
dec
cmp
pop
push
rorl
add
jmp
in
add
mov
add
pop
mov
or
jae
fsubrl
movb
add
pop
pop
adc
push
popa
sub
psubsw
ljmp
sti
test
dec
insb
test
sub
outsb
fdivrs
shlb
and
push
jns,pt
sahf
push
je
movb
cmp
mov
lahf
fwait
xchg
loop
mov
outsb
push
sub
sbb
add
inc
xchg
stc
dec
ljmp
push
jno
add
push
data16
ficomps
andl
xchg
test
fldcw
pushl
push
xchg
or
sti
icebp
stc
outsl
mov
adc
int3
and
nop
dec
mov
add
ret
xor
jne
pushf
mov
jl
loopne
stc
mov
into
xor
and
je
add
pop
sbb
into
or
out
mov
lea
add
xchg
aaa
mov
lahf
into
fdivrp
pop
mov
movsb
xchg
rolb
adc
pop
addr16
mov
mov
fs
xchg
push
xor
mov
sahf
push
sub
ret
mov
bound
xor
out
add
add
fisubs
add
mov
nop
sbb
testb
mov
and
push
jno
shll
das
push
movb
cli
push
adc
lea
add
js
frstor
add
fdivl
lods
cmpsl
jg
pop
das
push
add
pop
sbb
mov
stos
xchg
int
push
cli
aad
dec
dec
out
jae
jl
push
test
pop
pop
push
pop
aaa
dec
xchg
jge
xchg
fimull
lret
movb
pop
jne
xor
std
lret
bound
out
in
add
sub
ret
and
mov
xchg
pop
fsubl
hlt
scas
pushf
mov
dec
pusha
add
cmp
shrl
pop
mov
xchg
mov
cmp
add
fldenv
xor
push
add
add
mov
sub
xchg
sub
lahf
std
cwtl
scas
lock
cmpsl
push
push
add
cmp
add
add
push
add
insb
nop
mov
les
daa
outsb
adc
outsb
mov
push
jle
mov
adc
das
lret
ss
or
outsl
jne
mov
xchg
ja
scas
subl
xor
repnz
addr16
jne
and
enter
add
enter
fwait
inc
in
sbb
add
stc
push
mov
and
into
sbb
outsb
or
add
dec
mov
dec
insl
sub
xchg
addb
rcll
inc
add
and
mov
inc
lock
int
sbb
ficoms
sbb
sub
arpl
adc
add
sub
pop
inc
scas
loop
mov
add
aam
movsl
iret
pop
fistl
mov
sahf
lds
out
and
test
pop
mov
jp
call
je
cmp
add
xchg
mov
add
sbb
lret
mov
jnp
lret
jle
sbb
aaa
and
mov
int
add
lods
mov
scas
outsl
mov
adcl
scas
mov
mov
xor
cmp
xchg
imul
inc
add
les
pop
fcmovnb
add
leave
movsl
mov
stos
mov
adc
outsb
bound
jns
cmp
mov
push
pop
dec
mov
inc
push
push
dec
xchg
or
mov
add
fs
xchg
cmp
add
or
add
movsb
mov
out
movsb
adc
lock
lcall
mov
mov
cmp
mov
add
jno
mov
ljmp
sbb
outsb
push
dec
jb
push
popf
aaa
cmc
lods
xchg
insb
mov
lret
mov
cltd
ja
pusha
add
movsl
lcall
jl
inc
add
lock
sub
add
push
repnz
popf
leave
xor
addr16
fsubrs
adc
add
rorl
scas
daa
mov
cmp
ficompl
push
add
imul
add
cmpsl
movb
add
pusha
add
add
jb
andl
add
sbb
les
jns
into
and
cmp
aaa
push
xchg
shlb
aaa
cmpsb
cmpsb
jnp
ss
test
lcall
iret
pop
jne
mov
leave
or
lret
shrl
fildll
ja
jp
pop
bound
xor
imul
adc
jnp
loope
mov
add
add
divl
out
rcrb
adc
and
int3
rcll
lret
cmp
xchg
pop
test
cli
jnp
add
lea
mov
add
aaa
scas
ret
jns
jo
mov
das
loop
mov
nop
jg
aam
add
arpl
xchg
xor
ret
pop
roll
add
cmp
add
outsl
leave
jp
pop
xor
mov
xchg
inc
add
push
sub
xchg
adc
pop
xor
mov
lods
fsubrl
jge
jnp
jmp
add
fdiv
inc
daa
clc
xor
mov
in
aas
sub
loop
inc
cmc
xchg
ljmp
jle
bnd
add
jno
mov
rcrl
xchg
outsl
push
inc
add
popf
xchg
jno
addb
xchg
popa
lds
shrl
cld
shlw
dec
mov
test
push
xchg
aad
adc
inc
std
lret
loopne
push
add
mulb
and
les
int3
call
or
sub
xchg
dec
rclb
fisubl
mov
mov
movb
lea
loopne
nop
xor
xor
xchg
cmpsl
xchg
push
push
xchg
pop
sarl
dec
push
mov
sub
mov
push
push
test
dec
loopne
out
fldcw
sub
cwtl
pusha
add
push
xor
mov
es
insb
ljmp
das
cmc
lds
dec
pop
ja
dec
xchg
xchg
test
stos
push
mov
lods
cmpsb
mov
push
mov
pusha
add
lret
popf
jp
or
mov
jmp
push
mov
mov
or
add
pop
lds
popf
addb
insb
popa
fistl
pop
imul
inc
add
cmp
imul
add
xchg
adc
push
jns
movsb
or
fwait
sub
push
cmpsl
les
adc
inc
add
add
add
xchg
jnp
rorb
les
xchg
rolb
jae
or
fidivs
fmull
sub
pop
jmp
adc
pop
adc
cmp
add
sub
xchg
cmpsb
fisttps
ljmp
lods
fldt
popf
push
xchg
mov
pop
xor
mov
insl
sub
or
push
adc
add
or
xlat
pop
imulb
jns
inc
jmp
or
cmp
addl
push
cmc
xor
popf
scas
stc
mov
gs
jge
add
inc
sbb
push
jne
or
sti
pop
jmp
sahf
mov
add
mov
mov
jmp
pop
mov
gs
push
add
inc
add
dec
lret
and
mov
fldt
push
add
js
bound
cltd
push
aam
lret
push
mov
or
daa
xor
addr16
test
adc
inc
jg
mov
or
ss
add
inc
add
stos
jne
inc
bound
mov
sarb
loop
cmp
imul
loopne
pop
fstps
jecxz
or
sbb
push
and
jl
aas
push
sub
shlb
cmp
ret
jnp
imul
dec
fisttpl
xor
adc
jmp
movsl
mov
xor
shll
push
lahf
jne
pop
xor
mov
sbb
pop
das
outsb
imul
pop
outsb
lcall
cmp
push
and
repz
cwtl
push
cmpsl
xor
into
into
cmc
dec
jmp
pusha
add
repz
mov
bound
insl
fimuls
xor
das
ss
xchg
out
inc
add
outsl
mov
fistl
pop
jmp
and
pop
js
iret
movb
lea
mov
cld
lock
xchg
leave
fcmovnbe
xchg
push
aam
pop
mov
add
rcl
repz
jp
mov
inc
add
in
sub
cltd
lret
jp
fwait
xor
test
and
pushf
inc
fwait
je
frstor
mov
xlat
and
shl
pusha
add
and
push
sub
ret
lret
add
data16
xchg
nop
test
mov
lret
xchg
and
mov
xor
les
out
scas
popa
xor
fstpl
das
fildll
in
jmp
into
adc
mov
into
fsub
jno
sbb
sbb
test
add
jmp
add
sub
out
imulb
cmp
jl
iret
adc
arpl
mov
dec
cltd
mov
jecxz
mov
scas
fldenv
shr
scas
sbb
push
xor
jge
sbb
mov
lret
xchg
icebp
or
add
add
bound
lcall
sbb
mov
sbb
add
sbb
xchg
adc
sbb
mov
fisttpl
clc
out
cmc
push
test
add
inc
sub
fbld
add
test
add
roll
cltd
fcoms
testb
dec
js
dec
das
adc
in
movsl
push
add
add
int3
inc
add
lods
mov
or
roll
iret
inc
add
add
es
in
cld
inc
add
push
and
pop
ja
mov
inc
add
inc
add
mov
mov
push
lcall
add
mov
lahf
fwait
mov
push
arpl
ds
jle
std
repnz
pop
lret
add
pushf
adc
sbb
out
adc
out
mov
std
jns
loope
add
or
jg
outsb
in
ds
push
push
repnz
push
inc
repnz
cmpsb
adc
inc
add
dec
xchg
cmc
stos
xchg
or
clc
sub
lretw
test
scas
iret
fmull
icebp
out
jmp
xorl
push
pop
and
movb
jg
or
jp
add
push
notb
ljmp
lock
add
sbb
xor
cmp
add
aam
or
cltd
pop
push
mov
pop
dec
mov
jp
xor
adc
sub
jmp
jno
cs
add
cltd
or
sbb
pop
mov
adc
xor
add
jp
mov
ficoml
cmp
xlat
push
scas
leave
ja
aas
scas
xchg
inc
add
pushf
in
nop
in
cmpsb
mov
clc
dec
xchg
add
add
cmp
dec
mov
outsb
or
add
jnp
fs
push
mov
mov
fwait
and
lahf
mov
xor
and
dec
inc
add
mov
jae
cmpsl
popa
das
mov
sbb
arpl
not
sbb
pop
cmp
fldenv
leave
xchg
adc
or
and
dec
xlat
inc
add
popf
xchg
xor
or
aad
jle
cs
das
loop
dec
out
aad
xor
push
cltd
xor
icebp
push
call
add
sbb
add
in
stc
jne
iret
mov
cmpsl
push
pushf
sahf
test
xcrypt-cfb
cmpsl
mov
adc
fisubrl
pop
xchg
dec
sahf
sub
ds
repnz
cwtl
dec
outsl
gs
out
js
add
sbb
inc
cmp
mov
add
loope
mov
bound
test
xchg
addb
sub
nop
sahf
cld
in
test
and
sub
leave
adc
ja
mov
add
lea
inc
add
jg
lcall
or
xor
lods
sbb
adc
pusha
add
mov
dec
inc
add
hlt
sub
cmp
nop
cmp
in
add
pop
fdivr
fmulp
ljmp
mov
push
jbe
mov
mov
cld
mov
jno
mov
jge
add
add
pop
les
mov
push
lock
and
or
lahf
lcall
pop
fiadds
cli
jmp
rclb
xlat
fstl
add
gs
les
sub
cld
mov
mov
les
fcomps
lret
mov
mov
icebp
daa
cmpsl
push
xchg
dec
dec
pop
repz
push
std
imul
outsl
jb
into
inc
add
push
cmp
add
ja
jg
shlb
cli
or
js
mov
xchg
adc
sub
xchg
pop
addr16
pop
sub
fstps
pop
les
pop
jae
xchg
out
dec
pop
inc
cld
and
mov
out
lock
jo
repz
sub
add
mov
addb
jge
sahf
mov
add
sti
mov
pop
jp
lds
sbb
mov
int
pop
push
or
test
add
xchg
push
cmp
dec
push
insl
cmc
ret
scas
mov
push
xor
add
dec
xchg
lods
sub
mov
xor
shrl
jo
add
cmp
add
cmp
pusha
add
mov
lds
ret
testb
xlat
sub
mov
dec
test
jl
ret
jns
mov
in
repz
addb
push
dec
jnp
cmp
mov
lret
mov
int
push
cmp
je
jecxz
add
pushf
decl
inc
scas
int3
mov
arpl
faddl
cmp
jg
add
hlt
aam
push
call
daa
iret
xor
mov
xchg
pop
js
rcll
out
and
jge
pop
or
sub
mov
pop
mov
or
push
add
mov
mov
push
add
adc
dec
mov
test
les
pop
jns
test
add
mov
call
ljmp
out
pop
ror
sbb
out
xor
aaa
fwait
ss
into
mov
sahf
xor
les
enter
movsb
aaa
xchg
mov
lods
fsubl
adc
sarl
add
mov
add
jle
addb
pop
adcl
xchg
hlt
mov
test
adc
push
outsl
add
sub
shll
or
add
xor
or
push
push
subl
test
add
pop
or
dec
arpl
jae
add
in
mov
movsl
xchg
cmpsb
dec
adc
mov
addb
add
mov
add
enter
data16
jge
orl
or
add
add
dec
dec
ret
hlt
push
add
ss
out
mov
cmpsl
fildl
mov
je
xchg
and
add
sahf
fwait
pop
data16
add
outsl
cmc
sbb
cmp
add
outsb
lret
inc
add
sbb
jno
lds
add
outsb
pop
insl
dec
push
lcall
aas
jae
push
and
addr16
dec
sbb
xor
mov
popa
add
int
movsl
insl
out
aaa
sub
xchg
loopne
sbb
fnstcw
and
mov
inc
add
out
sbb
sbb
cmpsl
ja
cmp
push
insb
lahf
adc
sub
rcrl
je
addb
push
inc
add
mov
dec
enter
adc
jg
cltd
adc
leave
rcrl
addb
add
sub
inc
add
bound
pop
push
filds
add
push
int3
mov
add
mov
mov
nop
sbb
js
xor
lret
dec
and
adc
inc
add
add
pop
inc
add
push
aam
jle
or
jecxz
mov
mov
add
aad
loope
cmp
sbb
sar
fists
cwtl
psubsw
mov
outsl
cmc
out
aam
dec
lret
inc
lcall
and
add
mov
cmpl
mov
lds
sti
sti
sbb
mov
xor
daa
fcompl
rolb
inc
mov
fbld
addb
popa
es
mov
stc
jno
jns
jge
adc
sbb
insb
add
sub
in
xor
push
les
pop
pop
flds
inc
add
nop
sbb
cld
clc
pushl
push
lods
add
add
mov
xchg
shlb
inc
addr16
fisttpl
pop
popa
int3
fmul
cmp
push
pusha
add
je
add
add
and
insl
out
pop
sbb
push
mov
popa
jo
stc
push
mov
arpl
push
add
sub
add
rcrl
popf
scas
inc
add
dec
pop
mov
jge
les
aad
loope
add
jle
cmp
add
inc
sbb
scas
jg
fisttps
mov
roll
pop
push
sub
push
lcall
add
sar
fldenv
movb
inc
cs
inc
mov
add
push
inc
add
lock
xor
ss
mov
scas
lret
push
push
sbb
jae
mov
and
ret
xor
xchg
adc
or
cmp
and
push
cmc
push
jg
shrl
pop
push
cmpsb
jno
mov
add
mov
nop
adc
repnz
push
pop
data16
imul
mov
or
xor
out
mov
mov
xlat
mov
add
cmpsb
sarl
pop
cmp
jl
push
pop
aaa
mov
mov
add
jbe
xchg
loope
sti
lods
sbb
adc
outsl
gs
scas
jl
and
xchg
lds
pusha
add
add
lahf
shlb
cmp
loopne
jno
clc
cmp
into
pop
je
stos
dec
es
jae
jne
adc
fs
mov
add
dec
mov
jae
xchg
test
mov
stos
mov
push
addr16
ret
lock
cmp
daa
repz
and
jno
daa
push
movb
add
xchg
aad
add
data16
subl
leave
jae
mov
jp
sub
add
xlat
jp,pn
sbb
add
push
mov
mov
in
int3
ljmp
cmp
add
xchg
jnp
push
and
cmpl
add
jns
mov
cld
lods
xchg
lcall
and
sbb
scas
push
adc
push
mov
lahf
sbb
sti
and
xchg
jnp
into
xlat
xor
sti
loope
xlat
roll
xchg
and
jo
jle
inc
add
and
dec
outsl
xchg
call
bswap
rorl
inc
add
imul
add
fstl
test
and
dec
mov
add
add
cmp
jp
fldcw
cwtl
pop
pop
lock
out
pop
into
dec
mov
sub
xchg
dec
mov
or
stos
jmp
ss
pop
hlt
das
aas
arpl
shlb
cwtl
sbb
in
mov
mov
mov
or
movb
add
subl
add
push
psubsw
aas
jb
mov
jno
pop
dec
or
repz
out
mov
loop
je
inc
xchg
test
push
xchg
mov
add
insb
outsb
je
pop
iret
imul
add
pusha
add
in
ficoms
jp
inc
add
push
shlb
jne
imul
cmp
dec
jb
es
std
mov
mov
into
cmp
xor
push
jg
sbb
test
pop
mov
mov
in
and
push
sub
pop
lods
call
insb
shll
xchg
pushf
dec
fimuls
test
cmp
ljmp
add
xchg
mov
cmp
mov
push
add
rcll
add
xchg
add
aaa
fidivs
jbe
repz
ret
lret
imul
cmp
ret
adc
push
bound
jb
or
adc
cmc
out
inc
jmp
xor
ret
xor
iret
xor
jl
inc
cmpsl
enter
adc
scas
xor
jo
xchg
jmp
push
jne
cwtl
movsl
mov
push
lret
sub
int
movsl
fcoms
stos
mov
lods
rorl
adc
faddl
add
pop
xor
cmp
jmp
push
pop
testl
lea
lock
fdivrs
xor
iret
leave
push
ss
cmp
test
lds
sbb
daa
push
cmp
lods
sahf
scas
xor
sbb
inc
add
add
dec
imul
outsb
iret
popa
addb
and
das
sti
int3
mov
leave
add
mov
xchg
cmp
iret
jge
add
lahf
mov
push
xor
sub
fs
add
lahf
and
dec
dec
cmpsb
retw
pop
lea
fwait
mov
mov
imulb
mov
mov
pop
mov
mov
gs
pop
fsubrp
mov
std
fimull
push
pop
mov
out
scas
rcl
mov
jne
aaa
out
loopnew
xchg
dec
push
add
or
inc
add
imul
shrl
xor
fistps
push
sbb
or
mov
cld
cld
sub
lcall
outsl
dec
and
xchg
xchg
sub
ret
cld
jcxz
shl
lea
addb
add
movsb
mov
add
movsb
push
jl
and
jge
jnp
sub
std
or
sbb
add
jo
mov
add
add
xchg
mov
or
andl
loope
pushf
cmpsl
leave
dec
mov
jb
mov
pop
lds
dec
sbb
jb
repz
in
add
jo
dec
jge
lock
or
aas
out
add
push
repz
pop
fisubl
nop
mov
dec
insb
jmp
add
pop
cmp
sbb
idiv
mov
add
dec
inc
add
or
push
sub
sbb
xlat
in
jp
cltd
gs
mov
xchg
xchg
lods
mov
incb
fstpl
xchg
movb
xchg
add
test
inc
adc
add
cmp
das
push
in
xlat
leave
fistpll
mov
adc
push
xor
jae
cmp
add
mov
xchg
mov
xchg
cmp
jbe
sub
mov
movb
pop
mov
data16
sbb
roll
xchg
pop
mov
ret
in
push
push
mov
arpl
add
add
or
add
add
push
xchg
and
mov
mov
and
ret
ds
je
test
and
add
fmuls
push
dec
cwtl
inc
add
cli
lcall
in
pop
adc
inc
add
xchg
enter
pop
sbb
jmp
jnp
call
addr16
mov
dec
aas
es
push
cmpsb
cmc
ds
into
lods
ljmp
sub
push
or
repnz
add
add
ret
push
ss
popf
fldenv
jo
add
pop
add
xchg
cmpl
lahf
out
xorl
mov
scas
addb
mov
inc
dec
insb
scas
aas
addb
leave
shll
enter
sub
cmp
or
cmp
imul
sldt
inc
add
sbb
xlat
mov
pushf
addr16
arpl
movsl
bswap
scas
xchg
xchg
ljmp
add
js
notl
enter
addb
add
inc
add
cmp
incl
mov
push
arpl
sahf
cmc
xor
adc
and
mov
xchg
add
or
sahf
pause
xorl
in
repz
bnd
cli
and
add
mov
add
add
repz
add
push
add
rolb
aad
aaa
test
pop
mov
mov
test
pop
mov
popf
jne
cmp
push
mov
popf
pop
insl
imul
xchg
add
inc
inc
dec
scas
lret
adc
int
add
jno
repz
add
mov
add
add
jg
mov
ds
scas
out
cmp
shlb
and
aam
