add
or
add
add
add
or
or
or
add
or
add
add
or
add
or
or
add
or
add
or
add
add
or
add
add
add
or
or
or
or
add
add
or
or
add
add
or
add
or
add
or
add
add
add
add
add
or
or
add
or
add
or
add
add
add
or
add
or
or
or
add
add
add
add
or
add
add
or
add
add
add
or
add
add
or
add
or
or
add
or
add
add
or
or
add
add
or
add
add
or
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
or
or
add
add
add
add
add
or
or
or
add
add
or
add
or
or
add
or
or
or
add
or
add
or
add
or
add
add
add
add
add
or
add
or
or
or
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
or
or
or
add
add
or
add
or
add
or
add
add
add
or
add
add
or
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
or
or
add
or
add
or
add
add
add
add
add
add
or
or
add
add
add
add
or
add
add
add
add
add
or
or
or
or
add
add
add
add
or
add
or
add
add
add
add
or
or
add
or
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
or
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
or
or
add
add
add
add
or
add
add
add
or
add
or
or
add
or
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
or
add
add
add
add
add
add
or
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
or
add
add
or
or
add
or
or
or
add
add
add
or
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
add
or
or
or
add
add
or
or
or
or
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
or
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
or
add
or
add
add
add
add
or
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
or
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
or
add
add
or
add
add
add
or
add
add
add
or
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
or
or
or
add
or
add
or
add
add
add
add
add
or
add
or
or
or
add
or
add
add
add
or
add
add
or
or
add
add
add
or
add
add
or
or
add
or
add
add
add
add
add
add
or
add
add
or
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
or
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
or
or
add
add
or
or
or
or
add
or
add
add
add
add
add
or
or
or
add
or
add
or
add
or
add
add
or
or
add
or
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
or
or
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
or
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
or
add
or
add
or
add
or
add
add
add
or
add
or
or
add
or
add
or
add
or
add
or
add
or
add
or
or
add
add
or
or
or
or
or
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
or
add
or
add
or
add
add
or
add
or
add
add
add
add
add
or
add
or
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
or
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
or
add
add
or
or
or
add
or
or
or
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
or
or
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
or
add
or
add
add
or
or
add
or
or
or
or
or
or
add
add
or
add
add
or
add
add
add
or
or
add
add
add
add
add
or
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
or
or
add
or
or
add
add
add
or
add
add
add
add
add
add
add
or
or
add
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
or
add
or
add
add
or
or
add
or
add
or
or
add
add
add
or
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
or
or
add
add
or
or
add
add
or
add
or
add
or
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
or
or
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
or
add
add
or
add
or
add
or
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
or
or
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
or
add
add
add
add
or
or
add
or
add
or
add
add
add
or
or
or
add
or
or
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
or
add
add
or
or
or
add
add
add
add
add
add
or
or
or
or
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
or
or
add
add
or
or
add
or
add
add
add
or
add
add
or
or
add
add
or
add
or
add
add
add
or
add
or
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
or
or
add
add
add
add
or
add
add
or
add
or
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
or
or
add
or
add
or
add
add
add
or
add
or
add
or
or
or
add
add
add
or
add
or
add
or
add
or
add
or
or
or
or
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
or
add
or
add
or
add
add
add
add
or
or
add
add
add
add
or
add
add
add
add
add
add
add
add
or
or
add
or
add
add
or
or
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
add
or
add
or
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
or
add
add
or
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
or
or
add
add
or
or
add
add
or
add
add
or
or
or
add
or
or
add
add
add
or
add
add
add
add
or
add
add
or
add
or
or
or
or
add
add
add
add
add
or
or
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
or
add
or
add
or
add
add
or
or
add
add
add
or
add
or
add
add
add
add
or
add
add
or
add
or
add
add
or
add
or
add
or
add
add
or
or
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
or
or
add
or
add
add
add
or
add
or
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
or
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
or
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
add
add
or
add
add
add
or
add
or
add
or
add
or
add
add
or
or
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
or
add
or
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
or
add
add
or
add
add
add
or
add
or
or
add
add
add
or
add
add
or
add
add
add
or
add
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
or
or
add
add
add
add
add
add
push
or
movsb
jo
mov
add
daa
sbb
mov
jne
mov
repnz
pop
mov
push
sub
fldcw
add
add
mov
aaa
add
jge
mov
add
add
mov
push
xchg
xlat
inc
into
mov
pop
mov
push
sbb
add
add
fs
and
add
add
inc
mov
cmp
inc
mov
stos
mov
sub
add
lods
fstl
or
add
jl
dec
out
or
sbb
lcall
cmp
add
add
mov
dec
mov
outsl
and
lods
dec
add
add
test
adc
xchg
jb
or
gs
stos
mov
add
aam
orb
adc
add
add
adc
add
xor
lcall
add
mov
pop
in
or
lcall
int3
lds
mov
loopne
inc
aas
pop
icebp
xchg
addr16
mov
outsl
mov
loope
fstpl
loopne
xor
jg
mov
xchg
int3
notb
sbb
into
push
cmpb
add
jmp
faddl
lahf
or
add
add
aam
sarb
lds
add
add
add
out
adc
test
pop
mov
loop
ljmp
xchg
fisttpl
add
add
dec
and
nop
xchg
cmpsl
lods
mov
in
mov
adc
in
addl
add
and
add
add
fstps
test
imul
add
xchg
das
and
pop
push
inc
aas
icebp
sub
fsub
xchg
sbb
pushf
out
jp
daa
dec
test
stc
cmp
xchg
movsb
loopne
or
dec
mov
shll
jae
add
mov
outsl
pop
push
dec
mov
adc
inc
mov
sub
icebp
mov
add
add
ja
sub
add
add
or
add
add
fldt
mov
push
push
adc
push
cmpsl
loopne,pn
jae
inc
add
add
ror
pop
es
pop
xor
mov
dec
mov
mov
addr16
push
data16
data16
inc
mov
push
addl
repz
scas
sub
imul
add
add
imul
inc
les
jle
int3
jno
fists
cmp
add
add
mov
adc
add
add
in
xorl
pop
inc
mov
mov
aad
mov
push
inc
scas
mov
add
add
push
inc
imul
xor
inc
inc
cmp
mov
add
fwait
pop
lret
adc
pop
add
add
add
jmp
shll
jl
lods
iret
xchg
jns
sar
or
leave
xor
xchg
sub
ja
orl
inc
enter
cmp
push
test
dec
mov
ja
sbb
fstpt
dec
test
pop
icebp
dec
mov
xlat
and
add
add
xchg
push
mov
add
push
mov
push
movsl
insl
adc
inc
add
add
shld
sub
pop
mov
cmp
enter
push
adc
and
lret
int
jnp
mov
iret
and
dec
adc
add
inc
in
ficompl
jle
out
jmp
add
add
push
jo
aam
mov
pusha
add
add
push
add
aas
mov
add
mov
out
sbb
leave
les
mov
mov
rcrb
add
or
subl
ficoml
add
bound
sub
sti
or
fstl
shll
mov
mov
mov
enter
add
repz
and
push
push
sbb
add
pop
adc
pusha
add
add
mov
in
rcrb
add
mov
add
xchg
inc
inc
jl
xchg
arpl
cmp
xor
push
adc
insb
mov
inc
loope
mov
and
xchg
sahf
xor
test
jecxz
int3
push
scas
cmpsb
pushf
add
divl
mov
pop
fcomi
in
pop
add
jno
sahf
movsl
mov
xor
add
add
out
mov
sub
xchg
js
cmp
cmp
fisttps
add
mov
pop
mov
jl
das
xchg
outsl
call
mov
sbb
and
in
nop
lds
add
pop
das
cli
in
ja
push
mov
add
loope
test
movsl
mov
cmp
mov
repz
xchg
movsl
rcrb
imulb
negb
push
pusha
add
add
mov
stos
inc
cmpsb
push
push
push
cmp
inc
test
outsl
lahf
jmp
mov
dec
daa
dec
ds
or
sbb
add
add
dec
push
roll
pop
fidivrl
dec
mov
add
add
push
mov
mov
aas
sbb
mov
popa
inc
stos
addr16
mov
push
fistpll
mov
in
movsl
or
add
add
add
push
cmp
lcall
gs
je
stos
loop
fcomps
add
add
mov
ds
out
iret
xor
js
mov
pop
lret
push
jno
pop
adc
movsl
in
pop
add
add
add
fistl
mov
add
push
xchg
cld
pusha
mov
mov
push
lahf
lcall
jae
push
mov
adc
add
add
add
gs
lock
add
add
inc
sbb
orl
fimuls
test
push
movsl
mov
lods
mov
jge
sub
loope
adc
movsb
xor
rcll
in
mov
mov
fsubrs
add
push
ficomps
addb
lcall
cli
dec
mov
shl
xchg
cmc
sbb
sub
add
add
stos
jb
out
xchg
cmpsb
ss
js
inc
mov
fiadds
add
add
xchg
xor
dec
sub
mov
test
and
ret
jo
sbb
add
add
icebp
lahf
xor
dec
mov
jns
shlb
imul
push
imulb
shrb
mov
nop
or
int3
jp
fisubl
out
add
lods
mov
hlt
dec
mov
loopne
jg
adc
add
add
add
shl
popa
hlt
and
mov
mov
jge
push
std
jne
adc
xlat
cmp
add
add
pusha
add
add
jmp
sarl
add
add
add
add
push
push
push
pop
add
add
push
imul
xchg
cmpsb
push
or
push
test
cwtl
js
movsl
ljmp
lods
rorl
leave
xchg
jbe
xchg
das
and
add
add
jns
mov
jle
sub
add
add
lock
jmp
add
add
adc
stc
mov
add
imul
add
add
mov
push
mov
insb
add
add
xchg
jmp
popf
jnp
push
repz
xlat
adc
call
add
fsubs
push
jle
xchg
adcl
cmp
add
dec
mov
fcompl
test
pushf
mov
hlt
xor
add
add
xlat
call
sub
jecxz
loopne
mov
scas
js
nop
xchg
dec
mov
addr16
xor
cmp
mov
or
push
lock
sub
ret
aad
adc
or
add
add
push
les
outsb
out
ffreep
mov
sbb
add
stc
out
into
push
cmp
add
add
add
add
movsl
dec
adc
sbb
add
and
add
add
xor
xorb
fmull
xchg
sub
out
mov
add
sub
aam
xor
add
sub
add
add
jp
in
sub
add
add
rclb
inc
xchg
std
pop
inc
add
add
or
or
sbb
dec
sbb
notl
push
lea
repz
loopne
int
jbe
lahf
xchg
shlb
or
mov
add
test
mov
ss
loop
jne
lahf
inc
add
add
sbb
jmp
mov
subb
push
or
add
add
or
decl
outsb
aaa
fists
call
add
mov
jecxz
fsts
inc
lds
rcrl
imul
cmp
faddl
xor
std
mov
roll
pop
sub
out
pusha
add
add
jns
or
mov
mov
xchg
xchg
loopne
xchg
addr16
cmp
int3
xchg
inc
jl
and
add
add
flds
mov
mov
test
movsb
ja
sbb
andl
testb
add
add
adc
adc
mov
ret
jp
mov
push
aas
sbb
in
cmp
add
mov
jle
into
mov
add
add
lea
add
add
in
jmp
popf
sub
add
add
sub
loope
pop
cmp
rolb
adc
pop
loop
xchg
push
dec
jae
loopne
fwait
xchg
jg
jne
popa
test
push
jno
push
pop
ljmp
mov
orb
iret
push
dec
xchg
ja
adc
sti
ljmp
lock
mov
sbb
dec
shl
rclb
add
sbb
and
es
jo
inc
sub
add
add
add
pop
mov
test
mov
das
outsl
cwtl
sbb
and
xor
add
add
cmc
and
add
add
test
push
lret
sub
addl
mov
stc
lock
lds
stos
adc
xchg
bound
adc
imull
cmpsl
dec
hlt
mov
push
loopne
outsl
sub
add
add
and
call
add
inc
repnz
add
cmovle
mov
sub
mov
roll
push
test
ret
insl
xchg
jo
ss
test
sbb
mov
iret
out
mov
sub
mov
push
call
js
xchg
jecxz
add
add
add
mov
dec
loopne
push
cmp
xor
mov
xor
jns
lock
mov
ret
adc
push
je
popf
loopne
insb
add
add
das
or
arpl
mov
in
je
in
inc
add
add
cli
sub
add
add
add
add
fwait
adc
sub
push
andl
imul
inc
xor
and
add
test
movsb
arpl
cmp
out
dec
ja
js
cltd
push
es
jns
bound
lret
push
aad
xor
fnsave
xor
hlt
mov
icebp
pop
inc
mov
cltd
lahf
scas
lea
add
add
push
icebp
sbb
add
add
add
popf
popa
inc
add
add
sti
push
adc
add
bound
dec
sbb
into
imul
add
sbb
add
add
jg
insb
add
add
test
xor
add
decl
add
xlat
jbe
enter
je
out
mov
mov
push
movsb
lret
cmpsl
lret
orl
jns
cmp
shlb
jne
and
add
add
lock
inc
mov
add
add
int
or
xorb
mov
add
add
mov
mov
stos
insl
ficoms
mov
sahf
jmp
push
adc
in
pop
adc
insl
popa
cmp
mov
add
add
jge
or
lahf
pop
xor
mov
ficoml
pop
jnp
mov
add
cld
sub
jecxz
ret
cmp
dec
lock
dec
out
sbb
add
add
push
lds
pusha
mov
insl
hlt
cld
je
add
add
or
clc
stos
xchg
push
xchg
push
icebp
mov
lock
movsb
mov
lahf
inc
add
add
enter
das
pop
mov
das
adc
mov
and
jg
scas
adc
jb
sbb
daa
xlat
xor
outsl
xchg
jnp
mov
stc
or
jns
or
ds
add
add
les
scas
dec
mov
mov
dec
mov
mov
mov
jg
xchg
cmpsl
lcall
mov
mov
clc
push
loop
notl
shr
cmpsl
cwtl
repz
pop
cmpb
scas
jge
mov
ret
addb
mov
aas
in
inc
xchg
xchg
orl
gs
adcl
sub
lcall
scas
aaa
cmp
mov
and
mov
jb
shl
jecxz
sbb
push
clc
and
or
das
add
pop
fists
push
mov
jl
call
mov
sub
add
in
leave
sti
lret
cmc
in
and
sbb
inc
mov
xor
in
ret
dec
pop
dec
mov
in
cli
mov
movsl
mov
cmp
imul
testl
add
inc
mov
sub
aaa
mov
add
add
add
insb
add
add
inc
into
mov
add
mov
loop
mov
mov
add
add
sbb
jb
cmp
cmp
roll
jb
mov
fisttpll
mov
or
push
ficoml
ret
es
iret
add
aaa
scas
mov
orb
xor
xchg
test
add
add
adc
repz
jnp
sbb
adc
cmp
cld
hlt
xchg
frstor
add
rolb
xor
jle
mov
mov
fcomi
mov
pop
mov
movsl
fcmove
mov
add
add
mov
add
add
push
xchg
and
add
add
adc
fcoml
or
push
lret
xchg
repnz
jge
in
mov
idivl
xchg
shlb
mov
add
push
fbstp
add
jnp
rorl
insb
add
add
xlat
add
add
add
pop
iret
ds
andb
bound
test
arpl
pop
dec
push
cmp
inc
mov
mov
iret
fiadds
mov
sub
add
add
add
sub
fsubrl
call
jbe
mov
xchg
or
add
add
and
jo
mov
stc
das
vmread
out
jl
pop
push
jmp
lret
mov
sti
iret
xor
popl
into
mov
pop
jge
add
add
mov
fimull
jbe
inc
ja
jl
sub
or
add
add
add
mov
push
test
push
sarb
hlt
in
out
dec
sbb
push
ret
push
lock
add
or
shl
aad
outsl
push
xchg
mov
add
add
outsl
out
ret
daa
mov
or
add
add
mov
xchg
nop
fsubp
test
add
pop
hlt
add
inc
shll
fsubl
jg
mov
inc
jno
in
mov
xchg
cmpsl
outsl
in
push
sti
lret
xchg
add
add
add
and
pop
dec
jmp
mov
mov
and
mov
xor
mov
mov
in
stc
xchg
mov
jbe
fidivl
jno
sbb
out
test
dec
add
add
or
aam
push
cmp
add
sbb
add
add
jae
into
test
ja
movntq
add
add
mov
adc
movsl
and
add
add
pop
cmp
xchg
inc
add
add
jle
stos
jecxz
addb
sbb
jnp
out
mov
mov
imul
lea
cmpsl
cmp
movsl
sti
aaa
clc
push
or
add
add
test
cmp
or
cmp
mov
inc
sub
xor
add
add
and
add
add
fmuls
push
cwtl
add
int3
and
pop
mov
and
mov
in
mov
arpl
gs
mov
and
in
js
inc
pop
aad
cmp
xlat
sub
inc
xor
sub
mov
dec
in
std
fs
mov
es
pop
int
mov
jle
add
add
ret
cmpb
das
sbbl
js
jb
xor
xor
adc
pop
or
lret
mov
jle
mov
sub
into
xchg
mov
adc
mov
cmp
or
add
add
inc
fisubs
xchg
adc
jns
aaa
mov
add
push
mov
xchg
sbb
repnz
mov
sub
add
add
push
push
jno
cwtl
daa
mov
daa
and
pop
aas
xchg
mov
add
add
and
shrb
add
push
aas
in
mov
mov
pop
loop
add
add
dec
aad
out
mov
aaa
push
mov
out
scas
push
xor
add
add
cmp
add
in
pop
push
pop
push
pusha
add
add
pop
je
pusha
mov
and
add
add
repnz
aad
mov
mov
and
xor
lock
xchg
and
push
mov
mov
xor
add
add
and
add
add
int
scas
fisttps
daa
dec
dec
mov
arpl
or
add
mov
adc
mov
adc
push
inc
addl
mov
pop
cmpl
les
adcb
add
sahf
push
push
mov
in
cmp
pcmpgtw
mov
rclb
inc
or
add
add
out
mov
jb
mov
xchg
adc
pop
add
jle
mov
pop
mov
cltd
into
cmp
cmp
inc
jp
push
dec
xor
fsubrl
add
fcomps
add
add
add
sbb
jl
and
movsb
mov
pop
add
adc
mov
push
arpl
ja
adcb
lock
shll
int3
jno
mov
sub
cmpsb
xadd
out
xor
add
addr16
ljmp
movsl
les
and
repnz
sub
add
add
fsubr
ret
mov
dec
add
add
aaa
xchg
xor
add
add
mov
test
cmp
into
mov
push
mov
inc
add
add
xor
leave
sti
add
add
out
aam
jnp
scas
push
hlt
xchg
jl
repnz
xlat
dec
in
out
dec
add
add
sti
mov
fwait
lret
sbb
rclb
add
scas
mov
xor
dec
xchg
adc
sbb
lret
push
repz
mov
add
add
cmpsb
pusha
mov
mov
out
mov
dec
bound
mov
insb
add
add
mov
mov
add
add
cltd
cmpsl
sub
add
add
jg
loope
mov
mov
add
test
add
add
mov
jge
adc
pusha
mov
repz
jl
add
add
xor
shlb
stos
add
and
cmp
add
adc
xchg
adc
pop
jmp
add
fnstcw
ret
jns
hlt
sbb
outsb
xchg
inc
fildl
leave
xchg
cmp
add
add
add
outsl
xor
inc
adc
cld
or
pop
cmp
icebp
ds
rcll
or
jg
sti
cmp
add
jo
dec
dec
cmp
lods
ljmp
xchg
addr16
mov
push
jae
adc
cmpsl
leave
mov
sbb
add
pusha
mov
mov
mov
mov
sbb
fildl
out
mov
aaa
jg
mov
inc
mov
dec
pop
cmp
add
or
les
add
add
cli
xchg
divl
stos
mov
push
mov
sub
call
cmp
jne
lea
push
push
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
lock
mov
je
mov
add
lea
clc
jmp
ret
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
cld
call
test
jne
push
call
jmp
loope
imul
mov
jl
jp
add
add
in
sub
out
cmp
push
clc
pop
mov
sahf
push
pusha
mov
add
lods
jle
xorb
cmpsl
pop
add
add
add
inc
xchg
xor
jg
inc
sub
rcll
xorl
cmp
xor
imul
movsb
xor
popf
cli
xor
outsb
mov
xchg
push
pusha
mov
mov
rorb
add
add
lcall
adc
dec
sub
jmp
stos
push
stc
xlat
mov
add
add
inc
mov
dec
daa
mov
es
imul
ljmp
popa
fmull
sbb
add
add
sarb
push
sub
mov
pop
cmp
add
fld
sub
rcl
out
addl
adc
lods
stos
fs
xlat
inc
mov
paddq
hlt
dec
mov
std
xor
mov
aaa
push
inc
mov
jl
mov
ss
lahf
pop
mov
jmp
mov
fistps
sti
dec
cltd
dec
mov
scas
push
lds
mov
and
xor
mov
pop
pop
sub
add
add
int
scas
adc
add
mov
add
inc
mov
mov
mov
inc
mov
jge
les
add
movl
add
add
daa
or
add
xchg
add
add
add
add
xchg
pop
loop
jnp
add
add
mov
mov
jg
dec
imul
adcl
cld
adc
sbb
or
xor
notl
jns
shll
pop
addr16
outsl
or
add
add
js
icebp
mov
cmc
inc
push
dec
mov
gs
add
add
adc
adcl
add
add
outsl
in
out
icebp
jnp
push
in
fstp
jecxz
and
add
bnd
testl
rcll
mov
shll
add
add
jb
shl
pop
rclb
add
push
ds
loopne
cltd
call
rcl
out
pop
hlt
dec
mov
loope
or
add
add
add
add
push
cmp
divb
add
add
add
add
adc
sbb
out
jnp
mov
jnp
ja
jnp
adc
mov
add
f2xm1
insl
aas
mov
out
fscale
xor
mov
xor
lock
add
inc
add
add
mov
cmpsl
cltd
push
lock
mov
fcompl
xlat
cmp
and
xor
or
clc
dec
add
add
sbb
push
jns
mov
xchg
movsb
mov
test
or
dec
adc
out
sub
in
pop
mov
add
add
mov
andb
scas
cmpsb
adc
mov
push
pop
fisubl
mul
jbe
dec
ljmp
lea
add
add
jg
dec
mov
sub
testb
pop
or
xchg
cld
cli
sbb
pop
xor
repnz
mov
sub
add
add
add
add
std
mov
and
mov
inc
dec
mov
stos
pop
mov
aad
cltd
lock
sbb
add
add
mov
cmp
cmp
mov
push
fwait
pushl
clc
fnstsw
pop
shl
scas
nop
jne
shlb
cmp
ss
mov
lret
arpl
sub
add
add
lahf
adc
dec
jns
jnp
outsb
add
jl
in
sbb
xor
imul
in
cmpb
cmp
jecxz
aaa
add
out
ss
flds
and
sbb
dec
push
fwait
and
add
add
repz
andb
movsb
iret
imul
lock
add
add
add
add
clc
sub
sbb
add
add
leave
fcompl
jns
mov
jo
mov
mov
mov
test
add
add
loope
les
mov
test
mov
ror
inc
lea
outsl
pop
cltd
cmc
xor
sbb
jae
arpl
add
add
test
ljmp
lret
cwtl
lahf
mov
pop
or
loope
add
add
jle
mov
mov
jge
imul
or
test
mov
mov
lret
insb
add
add
std
loope
enter
sahf
mov
jne
fdivp
js
push
imul
push
sub
adc
add
mov
out
jbe
imul
jecxz
loopne
aam
dec
sbb
cmc
pop
arpl
mov
testl
or
push
andb
lahf
cld
and
dec
cmp
cmp
push
out
mov
cmpsl
mov
rorb
icebp
cmpsl
aam
sahf
arpl
sub
mov
add
add
mov
gs
aas
xlat
pusha
add
add
jmp
add
out
imul
dec
dec
out
sahf
inc
aas
leave
mov
pop
dec
sarl
mov
aaa
pop
repnz
cmp
add
add
adc
add
lahf
dec
mov
pop
imul
mov
inc
imul
sub
add
add
popa
xor
sub
sub
add
add
or
add
add
lret
div
inc
adc
xchg
xchg
stc
lods
fcoml
add
add
adc
dec
cmc
pop
rol
add
aas
sbbb
add
sub
mov
lods
sub
add
add
test
push
push
fwait
cli
jecxz
aaa
aad
scas
enter
ret
test
enter
cli
in
ret
arpl
repz
mov
imul
insl
mov
mov
mov
add
mov
push
repnz
sub
xor
mov
xor
mov
test
stos
call
add
movsl
push
test
dec
hlt
or
xchg
and
add
add
mov
ss
leave
push
cs
js
pop
cmp
lea
jns
mov
lret
xchg
shl
std
ljmp
pop
xlat
leave
mov
in
in
les
dec
call
imul
stos
lods
scas
imul
sub
add
add
and
inc
mov
xchg
jo
push
inc
mov
adc
icebp
jmp
inc
push
and
outsl
add
add
std
repnz
jl
and
scas
enter
aaa
stos
mov
loop
cmc
dec
mov
xchg
stc
mov
std
popf
dec
mov
call
cmc
jge
fcmovbe
lahf
sub
add
mov
sti
scas
mov
and
xchg
push
inc
add
add
push
icebp
enter
xchg
xor
add
add
add
out
insl
cmp
xchg
scas
fwait
scas
fmuls
xchg
cmpsb
push
sbb
popf
out
aam
inc
mov
mov
add
mov
add
add
xchg
jp
xlat
dec
push
or
jnp
flds
pop
aaa
fcoml
popf
rcll
inc
in
and
call
movsl
sahf
cltd
out
xor
mov
ss
lods
adc
or
add
add
pop
negb
push
pop
or
add
add
mov
add
sub
les
pop
mov
pop
js
cs
inc
mov
pop
pusha
mov
jle
mov
enter
push
adc
repz
movsl
arpl
in
out
or
inc
les
jp
aam
add
jno
cmpsl
js
jmp
push
jle
ffreep
or
sbb
stos
lods
xchg
xor
aaa
add
add
add
mov
insb
mov
and
add
shll
dec
in
xchg
rorb
add
add
inc
mov
cmp
mov
jns
cmpsb
inc
and
push
int3
cs
and
addr16
scas
inc
jg,pt
mov
add
in
mov
loope
stc
fistps
loope
ds
cmp
mov
mov
add
add
add
lea
scas
arpl
add
sbb
sbb
mov
shll
repz
add
add
mov
add
lret
int3
out
testb
or
pop
int3
sbb
jmp
jp
inc
rcl
dec
dec
xlat
jl
ljmp
add
js
cltd
mov
dec
cmp
add
add
arpl
pop
js
jae
shl
nop
idivl
cli
jnp
xor
enter
add
add
ljmp
xlat
gs
jle
stos
outsl
mov
sbb
mov
add
add
mov
lods
xorl
aaa
fidivrs
inc
mov
mov
mov
test
nop
cltd
loopne
pop
dec
add
add
push
cmp
repnz
cli
fdivr
fisttps
add
add
mov
mov
call
daa
inc
or
add
xchg
cmp
mov
stc
pop
mov
mov
sbb
cmp
or
add
add
fstpl
pop
pop
push
sbb
mov
scas
in
jns
xchg
fiadds
shlb
test
cmp
out
into
mov
add
xchg
inc
mov
clc
roll
shll
add
add
outsl
and
add
add
sbb
shlb
stos
mov
mov
or
cld
negb
inc
push
rcr
sbbb
es
xchg
add
in
dec
pop
push
daa
insl
scas
inc
cmp
add
add
jle
in
xor
sarl
cmp
addr16
jl
cmp
lock
in
les
cmp
add
add
pop
pop
ret
push
cld
sti
sbb
sbb
jnp
mov
and
add
add
adc
mov
xchg
add
shrb
icebp
enter
add
bound
inc
jl
dec
in
xchg
popa
rolb
adc
add
jnp
adc
ret
insl
lahf
stc
cmp
aam
daa
mov
inc
add
add
dec
cmp
mov
add
rcrb
stos
loopne
jbe
xchg
dec
cmc
imul
imul
ror
sbb
push
in
mov
jnp
mov
add
add
push
jnp
cltd
add
fcomps
aad
subb
fisubrl
insb
add
add
dec
add
add
cmp
aad
ss
xchg
fldl
lret
inc
pop
out
lock
iret
lret
adc
out
orb
add
add
add
add
or
scas
movsl
cmc
cwtl
dec
rclb
sub
scas
mov
xor
pushf
aad
add
add
and
add
add
test
sar
popf
xor
adc
test
inc
push
in
mov
sbb
dec
aaa
xchg
fs
xchg
movsb
push
shr
xchg
adc
add
xchg
sub
fiadds
xchg
push
cli
mov
pop
aam
cwtl
xchg
iret
int3
lcall
inc
mov
es
ds
push
mov
add
add
cmp
andl
aaa
sbb
mov
push
sub
mov
aaa
repz
loope
pop
mov
jb
add
add
fwait
repz
dec
mov
fdivrs
outsb
subl
push
jge
imul
push
js
std
pop
lret
dec
push
shlb
mov
adc
addb
add
rcr
in
cmp
add
add
scas
je
add
add
push
jl
mov
popf
ja
cwtl
daa
push
dec
test
out
push
popf
sub
insl
aas
and
out
mov
adc
add
add
aas
les
femms
xor
test
adc
sbb
stos
int3
ds
add
add
sbb
movsb
adc
add
fsubr
push
cmp
dec
leave
dec
xchg
cwtl
inc
dec
in
adc
scas
sub
out
mov
add
lahf
jge
stc
add
jne
iret
out
daa
xchg
les
xor
mov
inc
lcall
or
push
idivl
gs
add
add
in
lcall
push
dec
enter
push
pop
stos
add
add
add
dec
mov
cli
dec
pop
aam
pusha
add
add
cmp
or
add
add
add
movsb
sub
insb
add
add
loopne
inc
lea
or
ljmp
cld
and
add
add
cwtl
mov
inc
mov
sub
iret
xchg
sbb
mov
fs
cltd
mov
bound
or
rolb
jl
xchg
fmul
sub
nop
clc
dec
cmp
add
add
mov
pop
mov
das
jo
dec
sarb
lea
rorl
clc
int
jl
jns
pop
leave
lahf
jns
or
shrb
sbb
or
add
add
cwtl
adc
sbb
add
fs
and
add
add
jecxz
mov
add
les
add
lods
fisttps
mov
mov
cmpsl
mov
add
std
push
fidivrs
cmp
test
lcall
adc
fldl
inc
test
pop
addr16
inc
mul
pushf
test
aaa
mov
cmp
pop
loopne
add
add
inc
inc
mov
into
icebp
shlb
icebp
cmc
push
hlt
or
add
add
mov
and
daa
test
add
add
mov
inc
mov
fisttps
cmp
int
lret
clc
push
out
add
adc
mov
mov
add
add
or
add
add
les
mov
inc
jno
add
add
mov
fwait
out
add
mull
insb
mov
mov
mov
inc
leave
pop
cwtl
or
add
add
notl
scas
ds
jl
add
add
xor
iret
pusha
mov
mov
mov
sahf
imul
mov
fdiv
pop
sbb
adc
dec
sbb
clc
repnz
nop
nop
jae
jecxz
sar
dec
sub
and
mov
xchg
ret
add
add
add
xchg
mov
clc
repnz
nop
nop
jae
insb
call
stos
add
dec
sub
add
add
sar
repnz
nop
nop
jae
add
add
add
add
lea
inc
add
add
add
or
add
pop
or
add
adc
insb
inc
sbb
sub
mov
mov
sbb
pop
imul
add
add
pushf
pop
jg
clc
repnz
nop
nop
jae
add
stos
add
add
fistpl
mov
xchg
ret
add
jg
sub
jg
add
add
repnz
nop
nop
jae
add
es
sub
jg
jbe
add
add
js
xor
nop
push
mov
leave
nop
jmp
add
add
mov
clc
repnz
nop
nop
jae
inc
add
mov
add
add
clc
repnz
nop
nop
jae
or
add
add
dec
add
add
das
cmp
nop
push
mov
leave
nop
jmp
add
add
call
add
add
movl
cld
nop
nop
jae
add
add
xchg
add
cmp
xchg
push
mov
xchg
ret
add
bound
sub
add
bound
pop
add
clc
repnz
nop
nop
jae
add
sarb
push
add
inc
add
add
cs
test
nop
push
mov
leave
nop
jmp
add
add
cmpsl
add
dec
add
add
mov
xchg
ret
add
add
add
push
cmp
add
cld
nop
nop
jae
add
inc
add
std
cmp
add
lods
push
clc
repnz
nop
nop
jae
add
cwtl
test
sub
add
es
add
xchg
add
imul
mov
jg
add
add
add
sub
add
add
mov
cwtl
imul
nop
jae
inc
mov
popf
add
jg
push
loope
clc
repnz
nop
nop
jae
add
add
jecxz
mov
mov
push
mov
xchg
ret
inc
mov
sbb
push
add
add
add
jmp
repnz
nop
nop
jae
add
sub
add
cmp
add
les
push
mov
xchg
ret
mov
add
test
add
or
sar
cld
nop
nop
jae
add
add
mov
add
add
add
xor
in
fcoml
data16
rolb
inc
add
add
add
in
add
clc
repnz
nop
nop
jae
insb
daa
add
add
add
mov
xchg
outsb
sbb
or
pop
call
nop
jmp
add
add
add
sub
repnz
nop
nop
jae
add
sub
ss
inc
or
fistps
insl
add
clc
repnz
nop
nop
jae
jg
inc
rolb
test
xchg
test
nop
push
mov
leave
nop
jmp
rolb
sub
add
dec
cs
push
add
movsl
mov
nop
push
mov
leave
nop
jmp
je
sbb
add
cmp
dec
mov
xorl
clc
repnz
nop
nop
jae
shlb
add
sbb
call
nop
jae
call
rolb
add
or
mov
repnz
nop
nop
jae
rolb
mov
add
add
ss
mov
clc
repnz
nop
nop
jae
dec
add
dec
add
bound
cmp
dec
nop
push
mov
leave
nop
jmp
xchg
add
cmp
push
xchg
pop
push
mov
xchg
ret
add
imul
add
add
rclb
jmp
add
bound
add
add
add
mov
xchg
ret
stos
inc
add
add
clc
repnz
nop
nop
jae
add
add
add
add
mov
clc
repnz
nop
nop
jae
inc
bound
stos
mov
push
iret
push
push
mov
xchg
ret
mov
cmp
cmp
add
add
fistpl
clc
repnz
nop
nop
jae
add
incb
and
cltd
add
out
jmp
test
add
clc
repnz
nop
nop
jae
inc
add
add
add
ss
add
nop
push
mov
leave
nop
jmp
inc
add
call
jne
clc
repnz
nop
nop
jae
sarb
dec
jg
mov
add
cld
nop
nop
jae
mov
cmp
push
jl
mov
je
clc
repnz
nop
nop
jae
add
jg
add
lds
nop
nop
jae
popf
or
stos
inc
and
add
add
push
clc
repnz
nop
nop
jae
inc
sub
cmp
add
cmp
push
mov
leave
nop
jmp
add
add
add
mov
pop
and
repnz
nop
nop
jae
incb
add
jecxz
add
add
clc
repnz
nop
nop
jae
imul
lock
add
hlt
std
add
clc
repnz
nop
nop
jae
cmp
push
push
adc
mov
clc
repnz
nop
nop
jae
add
add
es
mov
clc
repnz
nop
nop
jae
adc
add
or
inc
add
jecxz
add
push
mov
xchg
ret
xchg
add
add
cmp
repnz
nop
nop
jae
add
sub
add
dec
add
add
nop
push
mov
leave
nop
jmp
add
cmpsl
add
add
push
mov
leave
nop
jmp
cwtl
cmp
add
xchg
repnz
clc
repnz
nop
nop
jae
sub
mov
add
add
xchg
add
int
inc
and
clc
repnz
nop
nop
jae
daa
call
incb
add
mov
and
add
add
add
daa
mov
add
repnz
nop
nop
jae
add
sbb
add
inc
add
mov
insb
inc
add
add
cwtl
add
mov
or
add
mov
clc
repnz
nop
nop
jae
add
cwtl
add
in
leave
nop
jmp
add
mov
add
call
clc
repnz
nop
nop
jae
test
add
add
add
add
add
mov
push
mov
xchg
ret
add
add
mov
bound
sub
mov
add
mov
push
mov
leave
nop
jmp
sub
cmp
sbb
mov
leave
nop
jmp
mov
insb
add
jg
add
mov
aad
aas
adc
nop
jmp
add
cmpsl
add
mov
jg
jg
add
clc
repnz
nop
nop
jae
add
cmpsl
add
je
add
add
push
push
mov
xchg
ret
add
dec
inc
sub
jecxz
insb
add
stos
push
sahf
xchg
mov
clc
repnz
nop
nop
jae
cmp
add
add
lock
pop
push
mov
xchg
ret
jg
add
add
add
jg
fildll
div
nop
push
mov
leave
nop
jmp
mov
cltd
push
sub
add
add
clc
scas
mov
mov
clc
repnz
nop
nop
jae
push
shlb
add
jg
add
add
push
mov
xchg
ret
add
mov
add
dec
sub
push
clc
repnz
nop
nop
jae
add
fistpll
stos
add
es
aas
push
mov
stos
add
add
or
scas
scas
mov
add
add
dec
push
push
mov
xchg
ret
dec
cmpsl
mov
add
dec
pop
sarb
pop
clc
repnz
nop
nop
jae
add
add
je
daa
add
adc
mov
clc
repnz
nop
nop
jae
lock
add
inc
dec
jp
mov
clc
repnz
nop
nop
jae
dec
add
mov
add
dec
jg
adc
inc
nop
push
mov
leave
nop
jmp
imul
add
and
add
cmp
repnz
nop
nop
jae
dec
add
add
mov
mov
xchg
ret
cmp
add
add
add
and
xchg
shl
clc
repnz
nop
nop
jae
cltd
add
add
add
rcrb
and
and
add
push
add
add
add
pop
add
xchg
repnz
nop
nop
jae
add
add
add
sub
js
inc
or
repnz
nop
nop
jae
xchg
add
add
add
mov
push
jmp
add
add
add
add
add
add
adc
sub
rolb
add
test
cwtl
repnz
add
jl
push
jl
add
mov
stos
clc
repnz
nop
nop
jae
add
cmp
add
add
add
sub
add
add
inc
or
repnz
nop
nop
jae
mov
mov
mov
roll
repnz
nop
nop
jae
add
and
add
mov
add
js
pop
clc
repnz
nop
nop
jae
sbb
es
sub
call
in
xor
add
xlat
add
add
movsl
add
mov
clc
repnz
nop
nop
jae
cltd
sub
add
jecxz
add
add
test
add
add
inc
pop
pushl
nop
push
mov
leave
nop
jmp
add
jg
rolb
add
mov
push
mov
xchg
ret
and
add
incb
cmpsl
sub
add
add
push
shrl
leave
nop
jmp
fbld
add
add
sbb
cmp
add
imull
insb
gs
repnz
nop
nop
jae
rorb
add
add
push
or
outsl
arpl
add
repnz
nop
nop
jae
add
mov
imul
sti
fwait
clc
repnz
nop
nop
jae
es
js
std
sub
add
loope
clc
repnz
nop
nop
jae
add
add
xchg
add
add
cmpsl
daa
or
mov
clc
repnz
nop
nop
jae
sbb
add
sub
add
pop
cmp
cld
push
mov
xchg
ret
add
sub
push
add
add
add
add
cld
nop
nop
jae
mov
xchg
jg
sbb
stos
cmp
ljmp
jae
inc
push
cmp
mov
clc
repnz
nop
nop
jae
cmpsl
daa
ss
add
add
cmpsl
add
inc
push
inc
add
add
incb
cmp
xchg
mov
cli
or
add
and
jmp
mov
fidivs
push
push
mov
xchg
ret
sub
addr16
add
mov
lock
add
push
clc
repnz
nop
nop
jae
add
add
cmp
test
push
mov
xchg
ret
mov
cmp
add
or
in
leave
nop
jmp
xchg
xchg
dec
insb
xchg
clc
repnz
nop
nop
jae
cmp
add
daa
shlb
mov
push
mov
xchg
ret
or
ss
add
add
mov
add
add
pop
push
mov
xchg
ret
push
add
add
fs
jbe
mov
push
mov
xchg
ret
jecxz
jg
add
je
cmp
add
fwait
push
mov
xchg
ret
add
add
cwtl
add
inc
and
cmc
stos
clc
repnz
nop
nop
jae
cwtl
push
stos
sub
stos
add
add
push
mov
leave
nop
jmp
add
add
dec
mov
add
clc
repnz
nop
nop
jae
add
add
dec
stos
std
cmp
stc
push
clc
repnz
nop
nop
jae
add
add
push
test
add
call
nop
push
mov
leave
nop
jmp
popf
add
push
add
sub
repz
repnz
nop
nop
jae
pop
cmp
or
mov
lock
cltd
leave
mov
clc
repnz
nop
nop
jae
stos
jg
add
sub
push
leave
push
push
mov
xchg
ret
dec
cmp
rolb
dec
sbb
pop
and
push
mov
xchg
ret
and
add
inc
filds
add
mov
nop
push
mov
leave
nop
jmp
add
bound
add
add
add
pop
ljmp
inc
add
cmp
add
incb
mov
dec
je
nop
push
mov
leave
nop
jmp
js
add
add
roll
mov
xchg
ret
add
add
sub
inc
stos
add
loopne
push
sub
sbb
push
mov
xchg
ret
add
add
sub
add
add
in
push
clc
repnz
nop
nop
jae
bound
imul
popf
lock
mov
xchg
ret
mov
cmp
add
mov
pop
push
mov
xchg
ret
push
cmp
cmp
add
add
mov
clc
repnz
nop
nop
jae
add
add
stos
add
adc
repnz
nop
nop
jae
rolb
std
mov
add
sub
push
add
jecxz
clc
repnz
nop
nop
jae
call
inc
rcl
add
mov
rcll
addr16
add
add
push
inc
add
mov
add
add
test
xchg
ret
dec
add
add
bound
jg
mov
mov
clc
repnz
nop
nop
jae
add
add
cmp
insb
popf
mov
adc
add
nop
jmp
add
add
cltd
stos
add
jo
push
push
mov
xchg
ret
add
add
je
add
dec
add
mov
nop
nop
jae
cmp
and
adc
rolb
add
cld
nop
nop
jae
add
add
add
cmp
scas
push
push
mov
xchg
ret
add
add
add
add
inc
out
add
nop
push
mov
leave
nop
jmp
mov
mov
add
push
xor
repnz
nop
nop
jae
add
add
add
adc
push
mov
add
adc
add
in
push
rcr
add
mov
movswl
clc
repnz
nop
nop
jae
test
add
jg
das
add
push
mov
xchg
ret
add
xchg
popf
add
lds
cld
nop
nop
jae
incb
add
and
cmp
repnz
nop
nop
jae
cmp
add
xchg
daa
add
add
test
and
cld
nop
nop
jae
add
add
nop
push
mov
leave
nop
jmp
shlb
call
push
add
and
cmpsl
sub
clc
repnz
nop
nop
jae
add
dec
rcl
xchg
add
push
mov
adc
pusha
cmc
add
add
mov
es
sbb
repnz
nop
nop
jae
add
add
push
mov
cmpsl
test
leave
clc
repnz
nop
nop
jae
add
imul
mov
fwait
push
mov
xchg
ret
add
add
inc
xchg
mov
mov
xchg
ret
add
add
inc
call
es
push
jp
cwtl
lds
and
and
add
imul
add
add
mov
mov
push
mov
xchg
ret
imul
add
fistps
mov
clc
repnz
nop
nop
jae
add
js
inc
add
iret
mov
clc
repnz
nop
nop
jae
add
mov
fbstp
push
mov
leave
nop
jmp
add
add
add
add
repnz
nop
nop
jae
add
add
sbb
shl
push
mov
xchg
ret
add
imul
add
stos
loopne
mov
pop
mov
clc
repnz
nop
nop
jae
cltd
daa
rorb
filds
add
sarl
clc
repnz
nop
nop
jae
add
add
mov
dec
push
clc
repnz
nop
nop
jae
add
add
add
sarb
fwait
pop
push
mov
xchg
ret
daa
call
add
add
xchg
pushf
dec
pop
clc
repnz
nop
nop
jae
add
add
cmp
xchg
xchg
add
filds
sti
clc
repnz
nop
nop
jae
add
add
push
add
iret
mov
clc
repnz
nop
nop
jae
add
add
add
add
sub
outsb
add
add
inc
add
js
bound
add
mov
add
add
xchg
mov
clc
repnz
nop
nop
jae
insb
add
or
add
out
sti
push
mov
xchg
ret
add
add
add
xchg
sub
push
mov
xchg
ret
xchg
jg
je
add
add
cwtl
xor
sar
repnz
nop
nop
jae
inc
test
add
or
inc
clc
lea
mov
leave
nop
jmp
add
mov
inc
add
cmp
iret
add
nop
push
mov
leave
nop
jmp
push
add
cmpsl
add
mov
clc
repnz
nop
nop
jae
add
push
sub
add
cwtl
lock
fwait
clc
repnz
nop
nop
jae
test
xchg
add
add
repnz
nop
nop
jae
cmp
add
add
popf
add
nop
push
mov
leave
nop
jmp
and
mov
add
add
jg
imul
and
out
inc
add
add
adc
add
cmp
popa
mov
clc
repnz
nop
nop
jae
add
add
daa
add
or
in
leave
nop
jmp
je
cwtl
pop
rolb
call
add
mov
clc
repnz
nop
nop
jae
push
add
add
add
jle
add
nop
jmp
add
mov
add
add
add
subl
repnz
nop
nop
jae
test
incb
daa
mov
cmp
call
nop
jmp
shrb
test
not
clc
repnz
nop
nop
jae
add
mov
or
or
nop
push
mov
leave
nop
jmp
sbb
stos
dec
add
push
add
les
loopne
clc
repnz
nop
nop
jae
cmpsl
push
add
imul
push
mov
xchg
ret
and
add
push
test
xor
clc
repnz
nop
nop
jae
add
add
sarb
cmp
clc
repnz
nop
nop
jae
sub
and
add
dec
jg
mov
add
add
cld
nop
nop
jae
add
cmp
mov
add
sub
repnz
nop
nop
jae
sar
dec
mov
mov
add
sub
pop
stos
movsl
pop
clc
repnz
nop
nop
jae
add
push
add
add
push
std
jne
clc
repnz
nop
nop
jae
std
add
sub
insb
and
cld
nop
nop
jae
lock
add
push
sub
add
ucomiss
repnz
nop
nop
jae
cmp
popf
push
sub
add
std
add
into
or
push
mov
leave
nop
jmp
cmp
mov
or
add
add
fld1
clc
repnz
nop
nop
jae
sub
inc
cmp
add
add
clc
repnz
nop
nop
jae
mov
or
sbb
add
jmp
jg
popf
or
add
add
add
add
push
mov
pop
add
mov
xor
mov
mov
in
pop
mov
test
jmp
add
bound
add
push
add
clc
repnz
nop
nop
jae
cmp
push
add
add
icebp
inc
dec
es
repnz
nop
nop
jae
add
cmp
xchg
call
add
clc
repnz
nop
nop
jae
add
push
add
push
xchg
test
out
clc
repnz
nop
nop
jae
mov
fbld
adc
nop
nop
jae
add
imul
mov
or
mov
xchg
ret
push
push
shrb
add
es
xor
nop
push
mov
leave
nop
jmp
jg
mov
add
add
add
add
leave
pusha
add
shlb
not
clc
repnz
nop
nop
jae
add
add
xchg
cmp
shl
push
clc
repnz
nop
nop
jae
jecxz
addr16
lock
jno
repz
mov
xchg
ret
add
cmp
add
test
and
clc
repnz
nop
nop
jae
add
sub
add
pop
pop
clc
repnz
nop
nop
jae
add
cmp
dec
filds
sub
add
clc
repnz
nop
nop
jae
add
add
test
add
push
mov
leave
nop
jmp
add
add
add
pop
cmp
in
sahf
add
add
outsb
add
iret
inc
test
sbb
add
add
repnz
nop
nop
jae
add
cmpsl
push
jecxz
clc
repnz
nop
nop
jae
add
add
add
add
mov
dec
ret
add
push
mov
xchg
ret
cmp
je
add
nop
push
mov
leave
nop
jmp
fisttps
add
cmp
add
add
out
lea
nop
push
mov
leave
nop
jmp
mov
inc
add
add
add
dec
notl
push
mov
xchg
ret
add
jg,pn
add
sub
ret
nop
push
mov
leave
nop
jmp
ss
add
push
add
xlat
or
cld
nop
nop
jae
add
pop
cmp
add
sub
repnz
nop
nop
jae
rolb
cwtl
add
add
cmp
push
mov
xchg
ret
cwtl
add
add
add
es
mov
repnz
nop
nop
jae
add
stos
call
cmp
repnz
nop
nop
jae
add
add
daa
add
and
repnz
nop
nop
jae
push
sub
and
add
push
mov
leave
nop
jmp
filds
inc
dec
add
inc
inc
dec
add
add
add
add
mov
nop
push
mov
leave
nop
jmp
or
add
mov
xchg
ret
add
js
cmp
add
xchg
xor
xchg
mov
xchg
ret
add
test
push
sbb
pusha
push
mov
xchg
ret
add
inc
sub
add
add
xorps
xchg
ret
add
add
add
test
call
in
leave
nop
jmp
daa
mov
add
cmp
clc
repnz
nop
nop
jae
mov
add
add
push
xchg
add
in
es
je
clc
repnz
nop
nop
jae
sub
add
jg
mov
ret
add
add
mov
clc
repnz
nop
nop
jae
insb
sub
add
add
add
cld
nop
nop
jae
add
fildll
cmp
mov
clc
repnz
nop
nop
jae
call
cmp
add
nop
nop
jae
xchg
sub
sbb
add
mov
xor
push
mov
xchg
ret
add
cmp
add
mov
add
add
jg
add
mov
add
mov
add
add
loop
in
mov
inc
stc
jg
xchg
mov
add
add
add
ret
add
clc
repnz
nop
nop
jae
mov
stos
cmp
filds
xchg
push
push
mov
xchg
ret
lock
inc
add
push
dec
add
fidivl
add
nop
push
mov
leave
nop
jmp
dec
jg
fildll
add
add
xor
and
push
add
add
or
cmpsl
add
fld1
clc
repnz
nop
nop
jae
daa
mov
test
cmp
sbb
repnz
nop
nop
jae
add
insb
add
add
add
lahf
ja
jmp
call
add
add
add
call
movzwl
clc
repnz
nop
nop
jae
add
adc
test
lahf
mov
push
mov
xchg
ret
or
jcxz
add
ret
dec
cmp
push
mov
leave
nop
jmp
add
pop
jecxz
cltd
add
add
jmp
or
add
add
mov
cltd
add
add
pop
or
repnz
nop
nop
jae
push
cs
sub
rolb
and
jmp
nop
nop
jae
add
imul
add
add
lock
sbb
push
inc
add
cmp
add
add
sub
addr16
clc
repnz
nop
nop
jae
push
mov
add
push
mov
add
test
out
call
nop
jmp
call
add
pop
call
nop
push
mov
leave
nop
jmp
cmp
imul
mov
test
push
add
clc
repnz
nop
nop
jae
add
popf
rolb
add
push
adc
clc
repnz
nop
nop
jae
add
js
add
bound
loop
test
lea
push
mov
xchg
ret
add
add
jg
cmp
cmp
stc
clc
repnz
nop
nop
jae
add
cmp
add
push
mov
xchg
ret
mov
push
cmp
stos
sub
inc
sbb
clc
repnz
nop
nop
jae
mov
add
jecxz
add
jp
dec
cwtl
out
xchg
push
xor
test
jmp
cld
nop
nop
jae
sub
cmp
add
lods
clc
repnz
nop
nop
jae
add
sub
inc
add
add
push
mov
xchg
ret
add
add
add
add
inc
call
nop
nop
jae
bound
add
add
xchg
lahf
mov
clc
repnz
nop
nop
jae
sub
sbb
add
add
push
clc
repnz
nop
nop
jae
sub
cmp
jg
mov
lret
test
add
addl
add
add
fistpl
clc
repnz
nop
nop
jae
add
add
sbb
add
out
adc
clc
repnz
nop
nop
jae
add
add
je
add
sub
call
nop
jae
jecxz
sub
std
add
push
push
mov
xchg
ret
std
std
mov
mov
cmp
push
push
mov
xchg
ret
add
add
inc
add
add
rcll
repnz
nop
nop
jae
add
add
add
popf
add
sar
add
adc
inc
add
push
lock
pop
sub
or
add
loope
and
mov
leave
nop
jmp
add
fists
call
lea
add
clc
repnz
nop
nop
jae
js
cmp
stos
test
push
mov
add
ret
mov
add
add
add
dec
cmp
repnz
nop
nop
jae
mov
cmp
add
add
sub
clc
repnz
nop
nop
jae
xchg
add
push
add
mov
jnp
clc
repnz
nop
nop
jae
push
inc
push
je
add
rolb
sub
mov
xchg
ret
rolb
add
es
and
incl
add
repnz
nop
nop
jae
add
add
mov
cld
nop
nop
jae
add
mov
mov
nop
push
mov
leave
nop
jmp
cmp
and
push
add
jo
aam
call
mov
xchg
ret
add
add
add
add
add
shr
push
mov
xchg
ret
sbb
cmp
add
je
push
leave
push
clc
repnz
nop
nop
jae
add
push
popf
test
xor
clc
repnz
nop
nop
jae
add
or
mov
orb
sub
int3
fcos
push
loopne
repnz
nop
nop
jae
add
fildll
push
cs
add
add
push
mov
sub
nop
jmp
bound
add
pop
and
clc
repnz
nop
nop
jae
add
fisttps
call
add
outsb
inc
leave
fwait
nop
push
mov
leave
nop
jmp
cmp
add
add
add
pop
push
mov
xchg
ret
std
sub
or
dec
popf
add
std
add
outsl
xor
clc
repnz
nop
nop
jae
mov
test
fcomip
fs
mov
clc
repnz
nop
nop
jae
add
mov
inc
daa
add
mov
pop
clc
repnz
nop
nop
jae
or
add
shlb
mov
js
add
jbe
je
nop
push
mov
leave
nop
jmp
add
add
insb
push
cli
lsl
nop
push
mov
leave
nop
jmp
sbb
add
add
add
push
clc
repnz
nop
nop
jae
add
add
daa
dec
and
pushf
jl
pushl
push
mov
xchg
ret
add
add
add
popf
filds
js
and
incl
sub
add
add
mov
add
bound
sbb
sbb
cmp
ret
add
add
add
add
test
push
mov
leave
nop
jmp
jg
add
sub
add
add
jecxz
add
add
sahf
xchg
stos
nop
push
mov
leave
nop
jmp
add
jg
add
rclb
push
clc
repnz
nop
nop
jae
cmp
mov
add
add
clc
repnz
nop
nop
jae
adc
push
add
jg
cltd
xor
push
mov
xchg
ret
add
add
add
rolb
mov
push
mov
add
mov
add
xor
or
jge
leave
add
clc
repnz
nop
nop
jae
js
add
add
lods
fstpl
mov
xchg
ret
dec
incb
cwtl
add
add
add
sub
call
nop
jmp
inc
std
sarb
xchg
add
repnz
inc
pop
nop
cmpsb
aaa
movzwl
clc
repnz
nop
nop
jae
bound
add
clc
mov
mov
xchg
ret
push
add
add
add
add
mov
clc
repnz
nop
nop
jae
js
dec
js
call
add
ret
js
add
pop
insb
add
add
add
mov
je
lods
dec
nop
push
mov
leave
nop
jmp
add
or
call
ss
fistpl
clc
repnz
nop
nop
jae
cmp
mov
or
inc
add
stos
fildll
adc
add
add
dec
push
mov
xchg
ret
add
es
add
add
or
add
clc
repnz
nop
nop
jae
add
popf
xchg
add
add
adc
cmp
ret
add
pop
push
add
cmp
jg
mov
ret
sbb
nop
jae
es
add
add
push
insb
mov
divl
sar
cld
nop
nop
jae
add
imul
test
add
nop
jmp
add
fistpll
mov
add
push
popa
lods
push
mov
xchg
ret
cmp
add
add
jg
sub
add
add
call
nop
push
mov
leave
nop
jmp
jg
add
dec
add
mov
leave
nop
jmp
add
add
add
sub
add
add
add
add
push
nop
push
mov
leave
nop
jmp
add
imul
cmp
add
inc
push
scas
jne
clc
repnz
nop
nop
jae
rolb
jg
sub
add
call
mov
xchg
ret
add
cmp
mov
daa
add
push
mov
xchg
ret
add
jg
mov
add
add
add
cld
nop
nop
jae
add
insb
xchg
push
add
jb
test
call
nop
nop
jae
inc
add
add
add
mov
sbb
push
mov
xchg
ret
push
cmp
or
je
jnp
sti
nop
push
mov
leave
nop
jmp
add
daa
fbld
sub
repnz
nop
nop
jae
add
add
or
push
jmp
push
mov
xchg
ret
lock
add
push
cs
lock
incl
inc
cmp
add
inc
add
mov
add
add
insb
jo
clc
repnz
nop
nop
jae
xchg
mov
add
add
xor
nop
push
mov
leave
nop
jmp
jg
add
or
je
mov
push
mov
xchg
ret
je
add
inc
daa
sub
add
scas
in
outsl
mov
clc
repnz
nop
nop
jae
add
add
fistl
mov
inc
add
mov
add
imul
jae
add
imul
inc
cmp
cmp
pop
xor
clc
repnz
nop
nop
jae
cmp
mov
cwtl
mov
add
push
mov
xchg
ret
push
add
call
push
adc
mov
xchg
ret
imul
rcr
bound
cmp
imul
dec
mov
xchg
ret
add
mov
bound
add
es
cmp
push
mov
leave
nop
jmp
add
xchg
shlb
inc
test
cld
nop
nop
jae
dec
mov
jg
xchg
add
sbb
add
clc
repnz
nop
nop
jae
cmp
dec
add
add
fistps
mov
cld
nop
nop
jae
jecxz
je
add
add
dec
or
add
in
leave
nop
jmp
add
js
fbstp
test
repnz
nop
nop
jae
addr16
sub
add
dec
mov
ret
subl
push
mov
xchg
ret
add
inc
lock
add
test
add
clc
repnz
nop
nop
jae
add
sub
cs
sub
push
mov
xchg
ret
mov
add
inc
push
add
add
nop
push
mov
leave
nop
jmp
cmp
add
sub
pop
clc
repnz
nop
nop
jae
add
add
add
cmp
cmpsl
je
popa
add
clc
repnz
nop
nop
jae
es
add
daa
add
add
bound
mov
add
clc
repnz
nop
nop
jae
lock
add
add
mov
add
clc
repnz
nop
nop
jae
cltd
sub
inc
mov
sbb
push
push
mov
xchg
ret
daa
add
cmp
sub
mov
add
call
nop
push
mov
leave
nop
jmp
fildll
add
xchg
add
dec
add
add
js
stos
clc
repnz
nop
nop
jae
push
add
add
add
mov
js
pusha
clc
repnz
nop
nop
jae
add
cmp
cmp
sub
das
je
clc
repnz
nop
nop
jae
add
mov
test
repnz
nop
nop
jae
add
add
add
cmp
nop
push
mov
leave
nop
jmp
add
add
or
inc
push
mov
xchg
ret
cmp
add
add
jecxz
add
push
nop
push
mov
leave
nop
jmp
cmp
cwtl
add
jg
or
fbld
add
add
add
stos
add
in
leave
nop
jmp
add
add
js
std
add
dec
inc
ret
push
clc
repnz
nop
nop
jae
sub
je
sub
xchg
add
fwait
rep
clc
repnz
nop
nop
jae
add
dec
add
lock
push
mov
xchg
ret
rclb
adc
add
add
add
and
clc
repnz
nop
nop
jae
sub
sub
or
cmp
and
xchg
push
mov
clc
repnz
nop
nop
jae
shrb
inc
push
push
add
add
into
cmp
add
add
std
fld1
jmp
add
sub
add
add
dec
add
add
ficomps
push
push
mov
xchg
ret
imul
add
inc
rolb
jg
lock
out
inc
add
add
or
ja
clc
repnz
nop
nop
jae
add
call
lea
clc
repnz
nop
nop
jae
dec
rolb
dec
add
add
sub
repnz
nop
nop
jae
sub
stos
add
or
mov
in
adc
nop
jmp
add
add
add
add
cmpsl
add
das
add
clc
repnz
nop
nop
jae
sub
add
add
add
imul
sar
repnz
nop
nop
jae
add
imul
add
dec
stos
sub
add
clc
repnz
nop
nop
jae
popf
jg
inc
rolb
clc
repnz
nop
nop
jae
add
sarb
pop
add
movsl
dec
nop
push
mov
leave
nop
jmp
add
dec
or
add
ss
nop
push
mov
leave
nop
jmp
js
jg
add
jg
push
dec
add
add
push
push
clc
repnz
nop
nop
jae
cmp
test
add
stos
mov
add
clc
repnz
nop
nop
jae
add
add
or
mov
or
cmpsl
pop
add
add
mov
add
imul
add
push
scas
push
clc
repnz
nop
nop
jae
add
sub
popf
add
add
inc
clc
repnz
nop
nop
jae
add
add
add
pusha
add
add
jp
and
in
leave
nop
jmp
push
add
add
dec
add
cmpsl
add
repnz
nop
nop
jae
add
imul
ss
add
stos
mov
push
nop
push
mov
leave
nop
jmp
add
add
add
push
sub
and
test
add
add
nop
jmp
add
je
add
clc
repnz
nop
nop
jae
add
je
sub
mov
add
pause
inc
add
shl
incb
push
cmp
add
jg
pop
xor
clc
repnz
nop
nop
jae
add
add
es
clc
repnz
nop
nop
jae
popf
stos
bound
push
insb
and
dec
pop
push
clc
repnz
nop
nop
jae
and
shlb
std
add
add
add
add
pop
push
push
mov
xchg
ret
call
mov
add
dec
pop
push
mov
xchg
ret
add
fisttps
add
bound
mov
clc
repnz
nop
nop
jae
jecxz
add
cmp
add
add
pushl
clc
repnz
nop
nop
jae
add
cwtl
stos
imul
sub
mov
push
mov
xchg
ret
add
insb
sub
add
in
push
mov
xchg
ret
add
push
add
filds
add
add
pusha
mov
fistpl
clc
repnz
nop
nop
jae
add
add
mov
mov
clc
repnz
nop
nop
jae
add
inc
rolb
mov
pop
cld
xor
cmp
nop
push
mov
leave
nop
jmp
add
push
repz
clc
repnz
nop
nop
jae
adc
add
cmp
loop
push
nop
push
mov
leave
nop
jmp
inc
add
add
incb
jecxz
sub
add
loope
in
add
add
clc
repnz
nop
nop
jae
cmp
push
mov
clc
repnz
nop
nop
jae
sub
js
sub
add
mov
daa
adc
add
repnz
nop
nop
jae
add
add
adc
add
nop
jmp
add
add
add
out
nop
xor
mov
xchg
ret
insb
dec
add
rolb
add
add
sub
push
pop
push
clc
repnz
nop
nop
jae
pop
mov
add
cmp
insb
add
lock
lcall
push
mov
leave
nop
jmp
mov
add
or
add
add
dec
imul
nop
jae
add
mov
mov
xchg
ret
sub
mov
and
sub
sub
enter
cld
nop
nop
jae
add
add
add
incb
push
xor
clc
repnz
nop
nop
jae
sub
jecxz
je
add
add
pop
int
push
mov
xchg
ret
mov
addr16
push
push
push
mov
xchg
ret
add
add
dec
stos
add
add
add
sub
add
mov
xchg
ret
or
add
add
cmp
nop
push
mov
leave
nop
jmp
mov
add
inc
add
call
nop
push
mov
leave
nop
jmp
add
rolb
add
sub
inc
cmp
mov
xchg
ret
add
add
rolb
add
add
imul
xchg
add
fptan
xchg
add
add
add
add
add
test
and
repnz
nop
nop
jae
push
daa
cmp
popf
add
mov
push
mov
xchg
ret
add
add
push
test
adc
nop
jmp
push
dec
shrb
mov
clc
repnz
nop
nop
jae
addr16
add
add
add
shlb
rep
push
mov
xchg
ret
add
xchg
jg
sub
add
mov
nop
push
mov
leave
nop
jmp
add
lock
add
add
shlb
call
push
jno
add
es
push
adc
add
inc
push
mov
xchg
ret
add
add
filds
cmpsl
add
add
nop
jmp
add
cmp
lock
adc
call
nop
jmp
add
sub
add
sub
pop
inc
add
add
inc
cmpsl
add
sub
stos
popf
add
and
add
add
push
push
mov
xchg
ret
call
cmp
or
cmp
cld
clc
repnz
nop
nop
jae
cmp
inc
add
push
pop
clc
repnz
nop
nop
jae
mov
cmp
daa
inc
dec
add
std
push
push
mov
xchg
ret
xchg
add
add
add
cmp
shl
clc
repnz
nop
nop
jae
test
add
push
cmpl
nop
push
mov
leave
nop
jmp
call
cmp
rclb
xchg
inc
add
daa
add
add
adc
test
push
clc
repnz
nop
nop
jae
rcr
call
inc
das
mov
clc
repnz
nop
nop
jae
rcr
adc
add
and
repnz
nop
nop
jae
sar
add
add
add
push
mov
leave
nop
jmp
lock
add
decb
add
add
les
repnz
nop
nop
jae
insb
add
sub
inc
sub
cmp
add
add
repnz
nop
nop
jae
cwtl
add
add
test
add
add
pop
add
clc
repnz
nop
nop
jae
and
jg
jg
popf
inc
cmp
cmp
repnz
nop
nop
jae
sbb
add
push
inc
stos
push
test
push
mov
xchg
ret
add
je
add
add
add
inc
mov
clc
repnz
nop
nop
jae
and
add
daa
imul
sub
add
add
clc
repnz
nop
nop
jae
add
lock
add
insb
jne
inc
push
mov
xchg
ret
daa
add
add
cmpsl
or
rcrb
mov
push
mov
xchg
ret
add
lock
mov
add
add
mov
push
mov
xchg
ret
xchg
dec
add
add
adc
push
clc
repnz
nop
nop
jae
jg
imul
sbb
dec
inc
cltd
pop
lods
clc
repnz
nop
nop
jae
cmp
cmp
mov
lock
jne
clc
nop
push
mov
leave
nop
jmp
inc
add
add
add
adc
gs
clc
repnz
nop
nop
jae
add
add
jb
jb
clc
repnz
nop
nop
jae
add
add
add
dec
jecxz
lret
clc
repnz
nop
nop
jae
add
cwtl
add
fbld
inc
add
cld
bound
mov
xchg
ret
add
or
add
std
jg
bound
in
jbe
fldt
add
xchg
lret
add
pop
push
mov
xchg
ret
cmp
add
daa
dec
mov
mov
push
jbe
add
adc
add
pop
add
add
daa
push
add
in
leave
nop
jmp
or
je
add
jecxz
inc
add
js
mov
and
clc
repnz
nop
nop
jae
popf
cmp
add
jecxz
dec
mov
clc
repnz
nop
nop
jae
je
push
shlb
or
xabort
cld
nop
nop
jae
add
add
dec
cmp
add
add
push
fld1
push
mov
xchg
ret
add
add
xchg
and
nop
push
mov
leave
nop
jmp
add
cltd
cmp
push
cmp
clc
repnz
nop
nop
jae
test
add
daa
add
pop
inc
add
mov
cs
add
test
idiv
clc
repnz
nop
nop
jae
add
sub
add
add
je
clc
repnz
nop
nop
jae
add
add
push
add
jne
clc
repnz
nop
nop
jae
cmp
add
add
add
clc
repnz
nop
nop
jae
add
or
add
jg
add
clc
repnz
nop
nop
jae
cmpsl
sub
rorb
jg
cmp
mov
fistpl
push
mov
xchg
ret
add
xchg
add
arpl
stc
addl
cmp
ret
stos
pop
add
bound
in
add
push
mov
xchg
ret
std
mov
std
add
or
fistpl
nop
push
mov
leave
nop
jmp
test
add
jg
testl
aaa
fdivr
incl
test
incb
js
cmp
cmp
clc
repnz
nop
nop
jae
pop
add
inc
addr16
clc
repnz
nop
nop
jae
add
add
jg
add
sub
rep
clc
repnz
nop
nop
jae
rolb
add
mov
and
insb
mov
pop
push
clc
repnz
nop
nop
jae
push
sub
test
loop
or
add
add
lods
add
test
ljmp
nop
jae
or
add
sbb
nop
nop
jae
dec
cmp
cmp
sub
add
add
add
pop
clc
repnz
nop
nop
jae
xchg
add
xor
lock
inc
add
add
add
add
pop
sub
clc
repnz
nop
nop
jae
add
add
xchg
std
dec
arpl
nop
nop
jae
cmp
inc
add
mov
xor
mov
clc
repnz
nop
nop
jae
add
add
add
add
test
mov
xchg
ret
inc
add
add
add
shlb
add
add
nop
jmp
add
jg
mov
nop
push
mov
leave
nop
jmp
add
add
stos
add
mov
push
mov
xchg
ret
or
add
add
add
or
add
clc
repnz
nop
nop
jae
add
cs
add
popf
add
or
clc
repnz
nop
nop
jae
add
add
js
cmpsl
cltd
add
add
add
push
mov
xchg
ret
add
add
add
daa
cmp
add
mov
adc
push
mov
leave
nop
jmp
cmp
rcrb
cmpsl
je
mov
cmpl
nop
jmp
add
daa
cmp
int
je
js
mov
xchg
ret
or
popf
add
cmpsl
jecxz
add
nop
push
mov
leave
nop
jmp
add
sub
add
cmp
add
add
in
push
mov
xchg
ret
cmp
ss
js
add
clc
repnz
nop
nop
jae
add
sub
add
add
int
inc
loopne
repnz
nop
nop
jae
insb
add
imul
es
push
clc
repnz
nop
nop
jae
inc
mov
daa
push
push
mov
clc
repnz
nop
nop
jae
push
jg
add
add
jnp
clc
nop
push
mov
leave
nop
jmp
cmp
sub
add
push
cmpsl
pop
shl
nop
push
mov
leave
nop
jmp
add
rolb
cmp
add
shr
nop
push
mov
leave
nop
jmp
add
jg
add
cmp
inc
clc
repnz
nop
nop
jae
jecxz
cmp
gs
clc
repnz
nop
nop
jae
cmp
push
mov
mov
clc
repnz
nop
nop
jae
cmp
or
je,pn
xlat
mov
clc
repnz
nop
nop
jae
add
cmp
mov
inc
push
push
mov
xchg
ret
add
add
add
add
clc
repnz
nop
nop
jae
add
sub
rolb
add
test
push
clc
repnz
nop
nop
jae
add
add
add
sub
add
movb
jne
inc
add
add
mov
stos
rolb
mov
clc
repnz
nop
nop
jae
cmp
add
cwtl
mov
add
add
aad
subl
jae
mov
cmp
add
leave
push
push
mov
xchg
ret
test
add
shrb
add
jl
je
clc
repnz
nop
nop
jae
test
shrb
mov
pop
inc
cmp
add
push
xchg
jg
js
push
jae
push
mov
xchg
ret
jecxz
jg
xchg
add
add
mov
mov
adc
repnz
nop
nop
jae
mov
add
cld
arpl
clc
repnz
nop
nop
jae
inc
rolb
pop
cmpsl
or
mov
pushf
xor
mov
test
clc
repnz
nop
nop
jae
sub
push
je
rcr
call
leave
nop
jmp
add
add
jg
mov
repnz
nop
nop
jae
add
sub
or
add
add
dec
rol
push
mov
xchg
ret
add
xchg
jecxz
add
push
add
mov
push
mov
xchg
ret
addr16
jg
pop
add
imul
fistl
nop
jmp
cmp
add
add
stos
add
cld
nop
nop
jae
cmp
xchg
dec
add
scas
ljmp
jg
cwtl
add
stos
jecxz
pop
cmpsl
add
add
add
add
mov
xchg
ret
add
add
add
imul
scas
push
push
mov
xchg
ret
cmp
cmp
insb
add
cs
test
add
add
xchg
movsl
mov
clc
repnz
nop
nop
jae
cs
add
je
mov
icebp
push
clc
repnz
nop
nop
jae
add
add
mov
add
add
clc
repnz
nop
nop
jae
add
es
add
dec
add
pop
push
mov
xchg
ret
adc
cmp
std
pop
add
test
call
nop
jae
add
inc
add
mov
inc
clc
repnz
nop
nop
jae
add
dec
popf
es
cltd
xchg
or
push
mov
leave
nop
jmp
add
add
inc
shr
std
or
pop
in
call
nop
jmp
cs
js
inc
clc
repnz
nop
nop
jae
add
cwtl
cs
jg
cmp
add
push
movswl
clc
repnz
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
cmp
add
add
add
dec
push
pop
dec
pop
add
nop
push
mov
leave
nop
jmp
add
add
add
nop
push
mov
leave
nop
jmp
cmp
add
add
push
mov
leave
nop
jmp
add
add
add
add
inc
fisttps
nop
nop
jae
or
add
sbb
bound
mov
nop
push
mov
leave
nop
jmp
cltd
mov
push
add
cmp
ds
pop
push
mov
xchg
ret
dec
je
add
stos
cmpsl
add
xchg
popa
pop
clc
repnz
nop
nop
jae
add
rcl
add
mov
add
sbb
clc
repnz
nop
nop
jae
add
mov
add
add
js
mov
clc
repnz
nop
nop
jae
cmp
cmp
sub
add
add
add
add
repnz
nop
nop
jae
and
add
push
repnz
nop
nop
jae
or
mov
sbb
add
addl
push
or
add
stos
add
add
and
adc
add
nop
jmp
sub
rcr
ret
jmp
incl
add
es
add
mov
add
add
inc
add
add
ret
push
clc
repnz
nop
nop
jae
and
test
add
clc
repnz
nop
nop
jae
add
add
sub
add
add
popf
addl
jmp
add
std
cmp
add
add
xor
outsl
nop
push
mov
leave
nop
jmp
xchg
stos
js
add
push
mov
push
mov
leave
nop
jmp
push
mov
mov
pop
clc
repnz
nop
nop
jae
bound
add
test
add
add
leave
nop
jmp
sub
dec
add
add
jg
push
clc
repnz
nop
nop
jae
je
sub
js
rolb
ss
add
clc
repnz
nop
nop
jae
sub
push
cmp
repnz
nop
nop
jae
sub
add
mov
add
cmp
and
mov
xchg
ret
add
mov
add
add
xor
int
inc
add
shrb
add
add
insb
or
add
ret
clc
repnz
nop
nop
jae
add
add
add
bound
mov
es
jecxz
repnz
nop
nop
jae
xchg
test
dec
cld
icebp
pop
push
mov
xchg
ret
cmp
add
inc
pop
add
add
add
clc
repnz
nop
nop
jae
cwtl
sub
mov
add
xlat
mov
nop
push
mov
leave
nop
jmp
sbb
cmp
add
add
add
add
clc
repnz
nop
nop
jae
add
sub
xchg
add
add
jo
stc
push
push
mov
xchg
ret
or
add
mov
lock
add
xchg
cmpl
nop
jae
add
add
inc
jg
lcall
inc
add
std
add
add
add
push
daa
and
mov
xchg
ret
add
add
or
add
nop
bnd
mov
nop
push
mov
leave
nop
jmp
add
add
shl
add
imul
clc
repnz
nop
nop
jae
je
bound
mov
dec
lock
lea
push
mov
xchg
ret
add
cmp
add
push
cs
add
clc
repnz
nop
nop
jae
add
add
mov
and
mov
xchg
ret
add
add
insb
add
aaa
jne
clc
repnz
nop
nop
jae
add
mov
add
add
add
mov
inc
add
add
push
mov
clc
repnz
nop
nop
jae
add
mov
cmp
xchg
mov
setno
xchg
ret
mov
cwtl
add
add
add
cmp
clc
repnz
nop
nop
jae
jg
add
sbb
xchg
mov
lods
push
mov
xchg
ret
jg
add
add
inc
popf
decb
mov
nop
push
mov
leave
nop
jmp
cmp
add
lock
outsb
notl
repnz
nop
nop
jae
push
add
add
add
xchg
inc
lea
clc
repnz
nop
nop
jae
inc
add
add
inc
jg
mov
push
mov
xchg
ret
add
test
add
arpl
repnz
nop
nop
jae
fists
cmp
sub
test
nop
nop
jae
adc
add
add
or
scas
xor
les
mov
xchg
ret
cmpsl
inc
add
std
push
add
push
out
out
clc
clc
repnz
nop
nop
jae
mov
jecxz
add
push
inc
add
add
add
add
add
in
add
clc
repnz
nop
nop
jae
add
add
jg
lock
xchg
inc
add
push
imul
add
rolb
mov
leave
nop
jmp
inc
sbb
add
cmp
jg
jne
add
incl
nop
push
mov
leave
nop
jmp
bound
cmp
xchg
add
addl
cmp
ret
push
es
add
pop
add
dec
and
cmpl
nop
push
mov
leave
nop
jmp
cwtl
add
lock
sub
push
add
clc
repnz
nop
nop
jae
add
dec
add
cmp
test
push
mov
xchg
ret
cmp
sbb
add
adc
fwait
clc
repnz
nop
nop
jae
add
mov
inc
add
add
add
add
push
nop
push
mov
leave
nop
jmp
std
fcomip
add
sub
sarb
push
jecxz
mov
clc
repnz
nop
nop
jae
imul
cltd
push
push
add
mov
repnz
nop
nop
jae
daa
add
jg
add
cmp
test
push
mov
leave
nop
jmp
inc
add
add
or
clc
repnz
nop
nop
jae
add
add
mov
mov
leave
nop
jmp
js
mov
cmp
add
daa
add
repnz
nop
nop
jae
add
add
xchg
pop
ss
sbb
push
mov
xchg
ret
sub
cmp
add
push
stos
and
add
add
les
je
clc
repnz
nop
nop
jae
cmp
add
add
add
outsl
push
clc
repnz
nop
nop
jae
sbb
sub
inc
rcl
jg
dec
jne
clc
repnz
nop
nop
jae
add
cmp
push
dec
push
clc
repnz
nop
nop
jae
sub
xchg
or
sbb
push
mov
xchg
ret
add
imul
add
dec
add
clc
repnz
nop
nop
jae
add
add
mov
add
mov
nop
push
mov
leave
nop
jmp
add
cmp
daa
sub
add
add
and
repnz
nop
nop
jae
add
pop
stos
add
add
jbe
rcll
add
add
movsl
add
add
out
aad
and
lods
dec
mov
mov
inc
mov
add
push
push
lahf
popa
push
or
dec
into
ret
rclb
add
add
inc
mov
sbb
jl
add
add
jnp
jg
dec
add
add
xorb
mov
test
add
add
lods
mov
in
sbb
or
add
mov
shlb
cmpsl
dec
pop
pushl
mov
add
add
dec
pop
or
add
add
pop
mov
adcb
mov
in
mov
jnp
rcll
int
pop
hlt
lcall
dec
mov
add
add
into
cmp
in
std
xchg
mov
add
add
adc
sub
or
add
add
dec
rcrb
jo
negl
leave
call
cmp
lock
jle
mov
outsb
mov
es
ljmp
js
insl
sar
addr16
pop
add
add
add
in
arpl
inc
push
mov
mov
lods
shll
mov
pop
pop
aaa
cli
andb
add
out
mov
mov
sub
add
add
mov
jbe
orl
ficoml
lret
out
push
pop
pop
arpl
fdivs
add
inc
pop
cmp
cmp
test
dec
mov
loopne
in
mov
cmp
movsb
adc
lret
pop
rclb
push
dec
mov
sbb
jecxz
jle
pop
andl
movl
nop
lds
push
and
add
pusha
add
add
push
daa
adc
sub
fnstsw
jecxz
xor
lods
mull
outsl
push
std
jnp
cmpsl
mov
rcll
dec
in
testb
jbe
sbb
xor
cmp
insl
mov
int3
push
aad
fsubrl
sbb
push
jae
xor
add
add
xchg
outsl
push
stc
clc
test
push
test
pop
enter
add
add
std
nop
xchg
cs
stc
in
sti
or
xchg
test
add
cltd
jp
mov
aam
mov
adc
rcr
sbb
pop
enter
pop
clc
mov
dec
xchg
insb
add
add
push
testl
push
jl
int
or
add
add
ret
sbb
out
inc
mov
adc
add
cs
mov
add
xor
repnz
push
imul
insl
inc
shll
cmp
mov
add
loopne
jg
xchg
ja
mov
add
add
add
inc
push
jae
shlb
push
scas
add
add
inc
push
dec
jb
stc
les
add
dec
icebp
popf
mov
jp,pn
pop
push
fstl
or
cmc
call
add
xor
pop
jge
das
addr16
call
imulb
add
add
ds
jns
repz
add
sti
fcomps
and
jne
arpl
or
add
add
dec
stos
arpl
nop
fbstp
add
add
add
out
inc
cmp
push
inc
add
mov
add
add
add
push
inc
repnz
mov
fmuls
add
add
xchg
lcall
pop
add
loopne
xor
repnz
lods
mov
sub
add
add
jae
cmp
cmp
add
add
outsl
das
xor
fwait
add
inc
not
xchg
mov
add
add
add
add
mov
ja
xorb
add
stos
mov
test
jmp
push
jbe
out
adc
dec
jp
fiaddl
add
add
and
add
add
add
add
ljmp
add
add
in
ljmp
ds
inc
ret
in
pop
les
nop
pop
mov
hlt
out
or
push
xor
adc
in
pop
and
adc
jae
movsb
adc
push
es
xchg
inc
cs
add
in
jmp
cs
mov
and
add
add
sarl
sub
mov
ja
add
in
push
or
es
sub
push
nop
mov
pop
lret
sub
sarb
scas
out
popf
mov
fistps
dec
cmp
add
rcrl
scas
xchg
xchg
mov
mov
add
add
mov
add
add
testl
dec
fistl
add
add
mov
nop
fistpl
mov
add
sub
fwait
out
in
pop
jns
lea
add
add
inc
cmp
jle
sbb
in
js
add
add
jle
and
add
add
arpl
add
add
sbb
ror
cmp
cli
cmpsb
ffreep
mov
sub
sti
outsl
aad
mov
mov
mov
les
mov
mov
mov
mov
fidivs
rcl
push
jae
jno
mov
dec
test
cmpsb
into
cmp
movsl
inc
mov
push
sarb
clc
sub
sub
add
add
sbb
in
sbb
add
add
add
add
add
shll
xchg
daa
sti
mov
rcr
in
push
sahf
and
jo
jmp
dec
mov
xchg
and
add
add
or
lods
fld
lahf
jbe
cli
scas
dec
add
add
imul
pop
mov
mov
stos
lahf
orl
shl
xchg
imul
jnp
mov
in
arpl
push
pop
mov
std
mov
add
push
frstor
add
ja
pop
jl
test
dec
cmc
pop
jnp
ja
jo
inc
mov
fmuls
inc
mov
mov
push
stos
popa
xor
mov
repz
jmp
dec
outsl
xchg
fsubrp
insb
mov
test
loopne
cmp
mov
inc
mov
mov
imul
arpl
scas
push
fwait
mov
jg
mov
add
push
lds
add
xor
push
pop
add
add
add
jno
rcrb
test
incb
add
add
lahf
nop
std
add
sbbl
jno
rcll
lods
cld
mov
popa
xor
imul
add
add
sbb
push
loop
mov
mov
add
add
ss
mov
xlat
sbb
xchg
in
cmpl
pop
stc
mov
and
rorb
add
jge
jg
push
sbb
fwait
fwait
jp
nop
dec
add
add
subb
add
add
mov
and
je
sbb
lret
mov
int3
outsl
mov
dec
fidivrl
jle
mov
adc
mov
and
xor
mov
cmp
mov
fwait
arpl
stos
fcomp
xor
push
mov
add
add
clc
aad
add
add
lret
outsl
std
xchg
add
pop
or
mov
popa
or
add
add
xchg
sbb
pop
in
jnp
das
push
inc
add
add
nop
fwait
push
or
add
add
jl
mov
mov
jbe
inc
inc
mov
fsubrs
add
add
xchg
pop
in
push
into
mov
clc
pop
fldt
fcmovnu
enter
push
push
xor
cmpsl
mov
outsl
flds
jl
mov
add
or
add
add
call
icebp
or
movsl
lods
pop
jno
add
add
outsl
sub
sub
xor
add
add
jg
jne
push
pop
pushf
mov
add
add
mov
and
add
add
out
rol
mov
pop
and
in
scas
or
nop
xor
lret
out
jo
addr16
or
add
add
add
add
mov
test
xor
mov
ljmp
mov
mov
inc
dec
mov
movsl
das
mov
add
add
pop
popa
cmp
out
repnz
and
push
push
rolb
cld
mov
xorl
sub
add
add
jnp
jae
mov
mov
lds
push
in
int
iret
sbb
pop
icebp
sub
in
stos
adcl
mov
rcr
pop
int
mov
dec
or
and
pusha
mov
test
xor
adc
cltd
push
jae
addr16
add
xchg
pusha
mov
pop
lds
or
add
add
das
je
leave
sbb
mov
stos
icebp
lret
xor
jmp
add
add
in
pop
add
loop
in
sub
mov
add
add
xor
and
ficoml
sahf
sub
shrb
lcall
fwait
shlb
add
add
ret
xchg
mov
mov
call
arpl
mov
push
and
mov
imull
mov
scas
mov
add
add
add
rorl
lcall
outsl
pop
xor
mov
jecxz
mov
mov
pop
dec
xchg
push
mov
mov
outsb
mov
add
add
lods
inc
mov
stc
or
add
add
pop
andb
add
or
add
add
push
cwtl
cmp
je
insl
inc
subb
cs
sahf
mov
jne
cmpsl
add
add
frstor
add
sbb
add
add
cmpsb
push
add
add
add
adc
lods
div
test
mov
mov
adc
add
add
and
pop
ja
sub
out
push
and
inc
lods
test
inc
loope
xlat
cltd
daa
xor
mov
loop
and
inc
cs
sub
mov
int
fsubr
or
cwtl
or
jno
jnp
jge
mov
xchg
idiv
xor
xchg
or
int
inc
cmc
jae
jo
data16
repnz
mov
add
add
cmp
pop
fdivrs
push
dec
mov
and
add
add
sub
add
add
adc
scas
mov
adc
xchg
lahf
mov
arpl
test
inc
add
add
add
or
movsb
dec
mov
mov
fucomp
fistl
sub
xchg
mov
jge
addr16
add
dec
hlt
mov
push
mov
inc
leave
mov
add
add
in
inc
xor
inc
adc
ret
xchg
mov
lea
int3
adc
lret
jle
in
and
test
xchg
xor
add
shlb
add
add
add
add
adc
mov
fs
pop
xchg
inc
mov
pop
in
pop
or
ret
mov
call
xchg
mov
pop
loopne
add
add
les
call
mov
push
jmp
shll
add
lret
in
mov
lcall
add
add
leave
rorb
lret
ljmp
add
cmpsl
add
add
add
addr16
jmp
pop
js
jl
inc
add
add
cmp
scas
mov
ja
stos
fldenv
lea
adc
push
scas
insb
add
add
sub
add
inc
stos
add
jecxz
mov
cld
lahf
jmp
sti
cmp
lods
stos
popa
cmc
cvtpi2ps
add
add
or
jecxz
mov
add
and
add
add
cli
jb
push
adc
adc
into
enter
in
mov
mov
cmc
fbld
mov
andl
mov
lret
popf
dec
pop
outsl
cwtl
push
daa
mov
lods
push
push
les
or
add
add
iret
out
xor
iret
test
int
dec
add
add
push
mov
cs
sar
push
pusha
mov
and
jmp
out
insb
add
add
out
ffreep
in
dec
adc
mov
adcb
sbb
pusha
add
add
scas
jnp
icebp
je
add
cs
or
test
push
data16
subb
pop
out
pop
xchg
jne
enter
sbbb
add
add
orl
sbb
mov
subl
mov
mov
iret
sarb
pop
sub
push
add
lea
mov
jmp
decb
add
add
out
jne
and
cli
fisttpll
add
add
inc
xchg
adc
pop
pop
push
dec
jmp
pop
sub
add
add
sbb
add
jmp
add
add
mov
mov
add
add
mov
jno
addl
xor
les
or
xor
mov
jp
ljmp
iret
or
lock
jae
push
jnp
xchg
add
add
xchg
imul
add
add
push
dec
mov
jmp
fildl
pop
out
das
mov
xorb
sub
add
add
pop
sbb
inc
pop
inc
lret
push
inc
gs
mov
js
rolb
xchg
add
add
push
mov
sub
lret
push
notl
and
add
add
out
mov
add
inc
add
add
add
pop
lods
xor
mov
xchg
loop
adc
pop
push
jo
xchg
jg
repnz
or
mov
test
les
pop
js
pop
jp
setae
xor
enter
dec
xchg
jmp
adc
add
add
mov
add
add
add
add
ret
jl
xor
jp
sbb
mov
jns
pop
lds
scas
stos
out
push
call
push
std
push
test
mov
clc
fisttps
jns
jp
inc
stos
insl
enter
cmp
adc
pop
or
hlt
mov
xchg
adc
cmp
xchg
adc
add
add
jmp
mov
jnp
xchg
xchg
fprem
pop
add
inc
or
jns
sbb
iret
and
add
add
lods
sbb
pop
nop
cmp
adc
mov
add
add
cld
xor
add
add
add
add
add
add
jnp
jp
pop
into
and
add
lods
sahf
mov
mov
fiaddl
add
add
sbb
push
fstpt
or
cmp
rclb
add
inc
add
add
pop
ljmp
inc
mov
mov
fisubrl
add
aam
mov
cli
push
or
add
daa
mov
cmp
add
add
lret
in
lret
nop
rcrb
icebp
xchg
orl
mull
xchg
pop
test
stos
cmp
lods
stc
shll
sub
push
add
add
jl
stos
imul
in
fistpl
adc
into
and
add
add
jl
sarb
xchg
pop
cmp
add
lret
bound
xor
cltd
mov
pop
hlt
jge
mov
or
add
add
add
mov
lds
sbb
fdivs
mov
inc
add
add
cmp
sbb
mov
add
jge
fcmove
lcall
mov
jmp
incb
mov
das
mov
int
addr16
adc
iret
nop
adc
xor
in
mov
add
add
jo
ds
jg
lret
out
cmpb
pop
mov
cld
lret
pop
popa
aas
sbb
mov
pushf
dec
popa
adc
imul
jnp
mov
mov
call
addl
add
add
push
adc
aaa
add
xchg
mov
sub
add
add
add
add
loop
pand
sarl
add
add
push
jne
popa
nop
and
xchg
rolb
mov
xchg
in
push
mov
cmp
mov
push
jae
dec
cld
lret
mov
add
mov
mov
movb
add
add
pop
sub
add
add
sub
add
add
mov
int
mov
jmp
insb
mov
dec
imul
incl
pop
pop
or
fidivrs
add
aad
sahf
mov
xchg
leave
mov
cli
jp
jge
xor
sbb
mov
sbb
movsl
ret
or
adc
xlat
nop
push
jge
mov
mov
add
add
aad
adc
inc
std
add
cmp
sbb
frstor
add
dec
adc
add
add
add
add
fmull
or
sub
add
cmpsb
xchg
daa
mov
jl
rcrl
into
out
pop
fwait
add
lcall
lret
out
pushf
sahf
jnp
sarb
pop
pop
push
scas
dec
xor
and
push
sub
ljmp
mov
xor
adc
adc
iret
aam
add
scas
xchg
adc
mov
mov
jo
sbb
jg
call
pop
xor
add
adc
xchg
imul
stos
fwait
and
add
add
mov
insb
add
add
addr16
ret
out
xchg
push
std
dec
mov
cld
adc
cmp
add
mov
mov
loopne
and
mov
xchg
sub
add
add
add
add
sbb
adc
jae
mov
dec
jae
lret
pop
aas
adc
mov
sub
add
add
les
add
add
or
add
add
add
add
mov
add
add
sbb
add
add
mov
add
cmpsb
call
fsubrs
add
sbb
sti
add
add
xchg
and
je
lcall
push
sahf
mov
mov
fisubl
mov
test
mov
cwtl
ss
mov
add
dec
lret
cmpsb
xor
rcl
icebp
sub
arpl
add
add
out
ljmp
mov
jnp
fwait
pop
mov
cld
push
mov
add
add
add
add
add
xor
dec
mov
push
loop
adc
sahf
popa
and
add
add
lret
popf
pop
mov
dec
and
dec
pop
mov
add
add
cmovge
mov
js
lds
lret
stc
stc
push
andl
sbb
or
and
fdivrs
push
mov
ret
mov
cltd
mov
ret
hlt
jne
aas
lea
pop
imul
push
and
add
add
ds
cmp
add
das
xor
jne
ret
or
add
add
test
out
mov
out
leave
push
sub
aas
adc
and
add
add
adc
xor
cmp
out
adc
iret
sti
mov
in
dec
mov
sti
out
inc
jmp
out
push
mov
sbb
jo
nop
rcrb
mov
push
orl
cmp
pop
jg
mov
dec
pop
xchg
jns,pn
or
add
add
insb
mov
xor
lea
out
xchg
jae
sahf
outsl
loop
pop
push
inc
add
aad
lret
lea
incb
jp
lea
ljmp
add
pop
nop
inc
inc
pushf
inc
or
jg
jle
test
rcl
in
ds
imul
lods
xor
add
repnz
dec
mov
pop
and
mov
outsb
cmp
pop
dec
mov
mov
mov
movsb
je
xchg
add
add
add
add
cli
ret
add
add
gs
xchg
fisttpll
or
mov
mov
push
jbe
std
cmp
add
add
fwait
dec
sub
test
xchg
cwtl
mov
dec
mov
mov
mov
nop
icebp
jns
test
adc
stos
shrb
add
add
rol
fwait
push
test
add
add
push
xchg
daa
add
add
add
add
inc
pusha
mov
and
add
add
push
movlps
push
push
js
jns
mov
mov
and
shl
sbb
call
fcoml
out
push
xchg
push
sub
push
add
push
pop
push
aaa
data16
inc
std
or
movsl
sbb
hlt
or
adc
js
mov
add
xor
fbld
xchg
add
add
pushf
out
pop
inc
and
add
es
jns
fcmovu
les
fisubrl
out
xor
push
mov
and
add
add
xchg
pop
add
and
addb
lahf
jmp
inc
mov
mov
in
xor
sub
add
add
mov
pop
xchg
cmp
cmpsb
xchg
pushf
incb
mov
and
add
add
fsubrs
add
mov
mov
fnstcw
mov
add
add
pop
fdivl
and
sub
add
mov
add
add
enter
pop
inc
call
add
add
add
out
add
add
add
out
cs
mov
jg
fnstsw
xor
test
add
add
xor
pop
aaa
bound
das
mov
add
add
mov
dec
in
sub
mov
mov
dec
cmp
enter
repnz
push
sbb
add
icebp
les
popf
push
jecxz
jbe
add
add
sbb
cmp
jge
test
icebp
test
cmp
jmp
or
inc
add
add
aad
fadds
mov
xor
mov
add
xor
or
fwait
cmp
in
rclb
add
and
test
add
pusha
mov
out
scas
adc
lds
inc
and
add
add
dec
add
dec
mov
jo
sub
add
add
rorl
add
add
out
push
fiaddl
jne
pop
xchg
dec
ljmp
jnp
mov
adc
or
add
add
xor
cmpb
cmpsb
cld
mov
mov
pop
cmp
pusha
mov
pop
pop
mov
inc
xchg
sub
mov
hlt
clc
jl
push
ds
mov
cwtl
test
push
mov
add
add
mov
and
in
inc
add
add
ret
fld
out
and
push
sbb
inc
js
push
mov
xchg
iret
ret
mov
or
xchg
lds
mov
pop
xchg
inc
lret
mov
sahf
lds
mov
jns
mov
and
add
add
sub
jl
mov
ficomps
add
add
push
outsl
jmp
mov
mov
mov
cmpsl
xchg
sti
push
xor
add
add
lods
or
inc
sti
testl
add
and
xor
gs
pop
repz
add
add
repz
out
mov
mov
in
or
sbb
inc
push
ja
into
push
lss
clc
push
cmp
xchg
loope
frstor
xchg
mov
test
hlt
mov
aas
xchg
add
push
mov
sub
out
pop
out
icebp
shl
dec
mov
mov
pop
and
outsl
xor
lret
sbbb
add
add
jmp
daa
dec
stos
cld
fnsave
movsb
fwait
mov
add
add
mov
in
jmp
cmp
imull
cmpsl
lret
mov
mov
pop
dec
mov
jae
out
std
inc
mov
stos
mov
aas
dec
mov
jns
rorb
add
add
add
lret
add
add
add
pop
bound
mov
pop
sub
cs
lds
push
mov
mov
idiv
cmpsb
add
lret
add
mov
scas
mov
add
mov
add
add
dec
lods
xor
lods
dec
outsl
cmp
inc
jmp
repz
add
add
pop
icebp
xor
mov
bound
mov
stos
leave
out
mov
adc
add
inc
add
add
xchg
cli
jae
jl
dec
pop
and
std
adc
outsb
lcall
push
mov
ds
add
add
gs
inc
int
pop
mov
add
scas
jbe,pt
call
cmpsb
into
nop
ret
and
shll
or
cmp
repz
movsl
icebp
rolb
mov
xlat
pop
ret
subl
cmp
adc
scas
cmp
add
insl
jno
adc
insb
mov
xchg
push
xchg
inc
mov
rcll
scas
mov
push
add
xchg
negb
cmp
movsb
aad
aaa
mov
arpl
dec
xorb
add
add
push
inc
mov
jp
sub
jns
stos
movsb
jmp
mov
pop
adcl
scas
cmp
add
mov
lods
ja
shl
aad
cs
add
or
add
add
cmc
je
sbb
subb
push
ret
subb
pop
and
orb
add
cltd
adc
out
adc
mov
push
add
xor
cmc
hlt
mov
mov
enter
add
add
add
add
add
sub
mov
into
cli
jl
mov
outsl
push
pop
inc
mov
stc
lahf
insl
pushf
ret
pop
mov
xor
jp
cmc
xor
mov
mov
jae
add
and
xchg
lret
cli
pop
out
mov
jecxz
fistpl
sahf
icebp
pop
adc
mov
mov
cmp
sub
ds
mov
mov
add
int
scas
arpl
mov
push
jno
movb
sub
add
add
aad
cmp
imul
cli
in
cmpsb
cmp
std
rcrb
call
adc
add
xor
int
cmpsb
lcall
add
sub
add
add
add
imul
popa
jecxz
dec
leave
jnp
aad
mov
mov
add
pop
cmp
fwait
cmc
xchg
adc
addr16
cmp
lods
sub
add
fistps
jne
push
xor
add
mov
jae
lea
add
add
jnp
cmp
scas
lods
hlt
xlat
mov
mov
adc
addr16
jle
and
add
add
lahf
push
push
pop
fdivrl
sub
out
shlb
call
lret
lea
outsb
mov
shrb
add
add
xchg
dec
pop
pop
clc
ja
add
add
add
add
add
scas
add
or
add
add
pop
inc
inc
inc
add
add
fistpll
test
fisttps
mov
or
jle
inc
das
cmp
cmp
sahf
aad
fildll
add
add
and
mov
jmp
rolb
add
add
and
std
push
pop
and
add
mov
mov
scas
fstps
inc
jecxz
popa
gs
mov
cmpsb
pop
jns
and
test
lret
jae
cli
add
add
pop
jmp
or
push
push
loope
sbb
and
add
add
add
add
dec
sysret
lret
hlt
adc
push
push
xchg
mov
rcll
popa
jb
test
add
dec
es
cli
stos
pop
xor
pop
push
outsl
je
add
add
add
xchg
aas
out
mov
sub
jns
push
push
cmp
sbb
aam
sbb
mov
andl
sbb
movsl
ficoml
add
add
aad
test
mov
add
add
pushf
add
std
fs
mov
sbb
mov
dec
repnz
fsubl
add
mov
add
add
add
xor
test
aam
cmp
mov
mov
mov
das
cmp
sti
jecxz
mov
add
add
add
fs
add
add
xor
ljmp
mov
mov
jns
add
outsb
mov
mov
fdivl
jp
fdivrl
or
mov
movsl
js
mov
leave
mov
test
out
xlat
stos
sub
add
add
cmp
push
scas
rcl
pop
in
adc
push
in
mov
add
add
ss
dec
nop
adc
jns
and
add
add
inc
or
add
out
test
sub
mov
fisubl
gs
arpl
repnz
xor
lock
or
jne
aam
push
dec
rclb
push
cwtl
std
mov
adc
das
es
dec
mov
sbb
int
pop
ficomps
mov
add
inc
mov
add
add
jae
test
imul
popf
in
testw
lock
add
cmp
hlt
sub
add
add
aam
push
pop
and
add
add
push
dec
add
add
or
cli
xchg
cwtl
cmp
push
or
cli
xchg
mov
xor
hlt
xchg
out
into
adc
dec
add
add
int
lret
int3
cli
push
push
jbe
fstpl
pop
jle
int
mov
outsl
adc
mov
into
loope
mov
push
popa
lret
ds
inc
xchg
les
adc
xor
rorl
lods
imul
add
bsf
lret
mov
mov
jns
outsl
cmpl
add
mov
dec
lcall
mov
xchg
cmpsb
pop
xchg
add
add
int3
add
sub
dec
mov
scas
iret
pop
xlat
inc
ret
push
jb
mov
sbb
add
add
divb
dec
mov
int3
popf
mov
mov
inc
out
gs
loop
pop
fidivl
out
sbb
addr16
cmp
sti
xchg
outsb
and
arpl
test
int
jmp
shrb
lods
cs
mov
sub
jle
add
add
lea
mov
sub
add
inc
mov
xor
or
popa
xchg
push
daa
pusha
mov
mov
add
jno
or
iret
std
mov
mov
and
add
xchg
lret
ds
popf
dec
mov
std
cmp
xchg
adcl
inc
ret
pusha
add
add
imulb
add
add
pop
icebp
cmpxchg
inc
test
mov
jb
xor
inc
mov
pop
notb
les
ficoms
cmp
call
xor
cmp
xchg
pop
xchg
frstor
and
add
add
sbb
pop
pop
cmp
add
add
push
push
mov
adc
sbb
inc
mov
add
jnp
mov
icebp
pop
addr16
lahf
dec
andnps
cmpl
add
add
cmc
lgs
mov
pop
cmp
loopne
dec
mov
imul
add
add
or
add
add
add
add
repz
nop
push
pop
dec
add
add
aad
push
inc
add
add
imul
fwait
sub
idivl
mov
daa
pop
cmpsb
mov
test
mov
cmp
and
xor
add
add
dec
mov
mov
push
jle
adcl
inc
add
add
add
in
test
in
mov
and
in
sub
pop
inc
cli
pop
adc
orb
add
xor
or
adc
mov
sbb
into
pop
pop
inc
push
and
xchg
add
sbb
pusha
mov
mov
add
add
dec
pop
inc
addl
add
testb
jno
add
add
sub
add
add
dec
add
add
sbb
mov
outsl
mov
and
div
add
xor
mov
add
mov
cli
mov
jno
mov
xchg
cmp
jbe
mov
gs
stc
push
loop
mov
rcl
inc
mov
out
mov
and
add
mov
push
imul
je
dec
xor
add
add
add
add
inc
xchg
inc
aas
inc
add
add
inc
comiss
aad
sbb
mov
out
mov
xor
cli
rcll
add
sbb
mov
and
pop
scas
pushf
sarl
or
add
leave
jg
or
add
add
stc
pushf
bound
add
pextrw
sub
add
add
lock
pop
cs
pop
mov
sbb
push
popa
sbb
jne
xor
sub
add
add
add
mov
data16
shrb
in
push
inc
push
sbb
fnstcw
fisttpll
pop
cmp
mov
push
inc
mov
add
add
add
imul
lcall
and
push
dec
pop
cmc
jnp
js
jmp
rorb
add
cmpsb
mov
stc
xor
dec
mov
cmpsb
or
mov
mov
or
and
fdivp
clc
fstpt
aad
or
push
xchg
repz
xchg
xchg
inc
mov
pusha
add
add
shrb
bound
add
push
in
xchg
xchg
fs
push
cld
mov
shl
pop
pusha
add
add
out
mov
imul
jae
pusha
add
add
int
or
popa
pushw
aaa
ficoms
leave
xor
bound
inc
mull
add
add
stc
out
mov
xchg
ljmp
cwtl
clc
stos
xchg
push
mov
jmp
lock
adc
add
pop
sti
sub
add
add
jmp
jo
dec
mov
mov
loopne
xchg
cld
push
bound
add
add
jmp
fdivs
arpl
mov
lods
or
repnz
lock
addr16
scas
inc
sbb
adc
sub
call
mov
out
xchg
add
inc
add
add
in
jg
popl
sbbl
add
add
sarl
or
add
add
sbb
add
add
push
icebp
out
int
sbb
add
pop
outsl
sub
add
add
nop
mov
add
add
dec
xchg
psrad
fnstenv
mov
insb
mov
sahf
aas
pop
dec
lock
dec
cmp
aad
cmp
add
add
fwait
push
sar
push
dec
pop
adc
xchg
pop
shll
sub
mov
xchg
arpl
or
cmp
adc
mov
outsb
int3
mov
add
dec
mov
and
add
add
push
lods
cmpsl
sub
andl
std
popa
mov
xor
in
sbb
movsb
leave
sub
add
add
movsl
or
sbb
outsb
fs
mov
and
aaa
mov
ret
into
aad
mov
test
in
out
sbb
xlat
adc
loop
add
add
mov
fistps
jno
add
add
and
push
js
inc
dec
mov
jnp
or
inc
and
adc
cmp
or
inc
inc
add
add
xor
pop
mov
and
dec
mov
pop
rolb
dec
add
add
repnz
repnz
xor
add
add
jae
and
add
add
add
add
add
fldenv
xchg
and
and
mov
daa
dec
jl
idiv
mov
sti
outsb
push
mov
add
add
fistl
mov
lret
ret
sarl
fsub
mov
mov
subb
inc
pop
mov
add
add
add
mov
shll
mov
inc
xbegin
mov
add
xchg
out
pop
or
int3
ret
push
lcall
add
clc
insl
insb
mov
shll
insb
add
add
xchg
adc
mov
add
add
and
js
gs
add
add
mov
sub
movsl
loope
lret
popa
inc
mov
add
add
xchg
or
shll
sarl
subb
add
adc
subl
aas
mov
xchg
lret
shl
int3
or
ds
xor
outsl
imul
stos
imul
hlt
and
add
add
or
fwait
adc
add
add
test
loopne
xor
xchg
xchg
jle
push
cmpsl
push
stos
and
add
add
fbld
add
add
add
imul
add
bswap
jmp
out
cmp
shl
jl
out
pop
xchg
jecxz
pop
addr16
mov
add
movsb
lret
in
fmuls
popf
mov
jnp
fstps
adc
dec
sbb
cmp
jmp
push
cmpsb
push
push
jno
add
add
inc
das
outsb
cli
and
pop
mov
lahf
adc
cwtl
stos
add
sub
add
and
add
add
adc
xchg
add
add
mov
jg
mov
sub
mov
pop
movups
in
les
test
pop
or
add
aam
add
mov
mov
popa
adc
fcompl
gs
jmp
jbe
xchg
imul
mov
jmp
mov
push
addr16
add
add
dec
adc
add
jecxz
in
lahf
incb
cmp
es
pop
out
lea
adc
cs
add
add
sbbl
add
mov
inc
mov
sub
movsl
cmp
test
pop
mov
add
push
int
add
add
loope
mov
ret
inc
add
add
repnz
add
add
aas
mov
cmp
xchg
ret
push
ss
mov
testb
push
fdivl
aaa
xor
push
mov
mov
popa
push
inc
ret
cmp
cmp
jae
pop
adc
mov
mov
out
lret
mov
fdivrs
inc
ret
data16
insb
mov
xor
xor
xor
and
jns
jno
ja
cmp
add
xchg
mov
out
push
mov
xor
add
add
divl
push
or
jl
sbb
pop
jge
dec
neg
add
push
jae
jp
das
shlb
inc
test
stc
pop
es
inc
in
cmpsb
aad
or
sar
mov
add
mov
into
rcrb
int
mov
loop
cmp
mov
cmc
push
mov
scas
aad
dec
pop
jb
icebp
sub
mov
mov
sub
sbb
loope
pop
ja
jl
xor
and
dec
mov
xchg
jno
mov
inc
mov
add
sti
xor
xchg
pop
stos
mov
lahf
sbb
add
adc
add
add
movsl
imull
cmpl
lret
sbb
pop
stos
mov
add
addr16
in
pop
loop
dec
hlt
mov
in
xchg
xchg
pushf
pop
cmp
pop
xor
mov
lcall
pop
test
int
inc
adc
cwtl
xchg
fbstp
mov
push
lock
inc
sbb
add
add
or
test
add
add
mov
mulb
aad
adc
add
add
mov
pop
clc
jecxz
mov
and
add
add
and
test
xchg
mov
mov
daa
or
js
mov
sub
sub
out
add
add
dec
pop
dec
fcomip
das
gs
cltd
mov
cwtl
mov
adc
mov
add
adc
cmp
int
xchg
add
pop
jbe
xor
fs
daa
lret
subl
add
jge,pt
cwtl
test
ret
add
add
add
leave
icebp
sbb
loope
xor
mov
mov
fidivs
jae
mov
add
adc
jo
pop
sahf
test
and
add
sub
and
jns
js
mov
sub
push
scas
cmp
push
cli
and
push
ja
mov
sahf
pop
mov
fucom
mov
std
jno
sub
add
inc
in
mov
dec
jecxz
jo
push
loopne
push
fldl
pop
test
and
jne
sahf
jno
mov
roll
add
add
add
mov
add
aas
mov
es
pop
push
loope
sub
cmp
sbb
sub
add
add
int
jnp
inc
sti
lea
rcrb
ss
xchg
gs
cmpsb
stc
pop
inc
mov
pop
adc
clc
imul
or
ss
es
scas
sbb
cmp
scas
or
add
add
jmp
inc
add
add
insb
mov
mov
inc
in
adc
and
imul
jnp
add
add
push
fdivs
mov
or
dec
add
add
jp
jae
jo
mov
call
xchg
xor
mov
roll
mov
fimuls
mov
movsl
mov
push
mov
ljmp
mov
add
add
jp
addr16
lret
sbb
out
xchg
adcb
mov
add
add
int
push
inc
mov
outsl
jecxz
scas
test
test
repnz
mov
negb
mov
adcb
out
inc
cmp
fdiv
dec
push
and
push
inc
mov
mov
aas
push
lea
add
add
repnz
fwait
addr16
lret
dec
adc
dec
add
add
mov
mov
and
sub
lea
add
add
mov
outsb
cmpsl
fwait
loope
clc
ret
xchg
popa
insb
add
add
adc
add
test
dec
jne
add
cwtl
lds
lods
and
xor
pop
cmp
sbb
adc
or
xchg
outsl
lret
mov
lahf
dec
push
addl
in
mov
int3
out
popf
out
push
jmp
sbb
push
shlb
imul
scas
push
hlt
notb
add
add
adc
xchg
imul
imul
ja
je
add
add
cmp
sbb
xor
lret
and
add
jl
mov
arpl
push
adc
sbb
push
enter
daa
cmpsb
daa
fadds
add
pop
aas
or
xchg
fs
cli
xor
pusha
mov
pop
loopne
jmp
ret
xchg
movsb
in
mov
cmp
xor
sub
xor
arpl
add
mov
pop
or
add
add
inc
mov
aad
mov
in
add
xor
push
iret
jne
or
xor
cmpsb
add
or
add
add
inc
jns
imul
xorl
fwait
ljmp
cmp
add
add
test
add
lods
inc
hlt
fildll
lea
add
add
lret
sbb
and
dec
xor
sti
mov
or
scas
cmc
push
push
jp
lcall
xor
in
pop
push
and
or
add
add
scas
adc
inc
adc
sub
add
add
sub
add
add
and
add
xor
addr16
repz
mov
or
add
add
and
sbb
out
lds
xor
fidivl
add
nop
push
mov
add
pop
sub
add
add
clc
mov
pusha
add
add
mov
pusha
add
add
daa
dec
cwtl
xor
popa
push
push
mov
mov
bound
pop
push
push
mov
std
ficoml
adc
sahf
and
call
mov
out
inc
sbb
out
nop
in
fistl
jge
sub
add
add
xorb
inc
mov
push
dec
add
add
js
cmpl
lahf
and
add
test
pop
or
add
add
je
xchg
cmpsb
lcall
jp
sbb
scas
or
mov
mov
xchg
das
inc
pop
ljmp
cmp
adc
mov
push
mov
mov
push
sbb
xorb
jge
aad
push
dec
ret
adc
cmp
add
add
add
add
add
addl
fs
jnp
jo
shll
add
rcrl
mov
jno
jle
add
add
xchg
fsubrp
push
sub
add
add
xchg
andl
add
jmp
add
mov
pusha
mov
jo
scas
sbb
aad
dec
arpl
in
mov
cmc
mov
hlt
or
pushf
inc
add
add
or
add
add
mov
inc
push
and
add
add
adc
add
add
insb
mov
add
mull
jmp
add
push
adc
add
add
repnz
mov
sub
add
add
ljmp
add
add
sub
add
add
ret
mov
add
add
fdivrs
mov
push
xchg
frstor
mov
ret
sub
add
add
push
mov
hlt
cmp
add
add
jmp
xor
popf
add
and
inc
add
add
mov
xor
jecxz
sar
ds
ja
jg
cld
xchg
and
add
add
or
add
add
add
add
inc
fnsave
int3
xor
mov
cwtl
in
sarl
mov
aam
pop
mov
push
fisubl
add
add
push
xor
jns
popf
frstor
add
add
add
arpl
and
xchg
push
out
mov
test
je
les
add
add
dec
inc
xor
sbb
xor
rcll
add
inc
mov
add
add
nop
icebp
shll
add
cmpsb
daa
fs
adc
adc
fcmovb
mov
adcl
xchg
ficoml
cmp
and
add
add
adc
or
inc
sbb
lcall
test
das
adc
add
add
add
adc
jp
mov
mov
in
sbb
push
cmp
sbb
mov
mov
mov
add
add
push
int
mov
leave
add
add
add
xchg
pop
insl
xor
sti
mov
add
push
mov
nop
xor
mov
stc
dec
xchg
lock
mov
jmp
les
push
pop
pop
push
imul
rcrb
cmp
shlb
add
fstpl
add
add
imul
add
adc
fsubrs
sbb
sbb
ret
adc
pop
xchg
call
lcall
dec
xchg
sbbb
pop
mov
call
push
mov
aaa
fildll
add
cmp
fimuls
out
mov
add
add
mov
idivl
mov
inc
sbb
ja
out
mov
fcmovnb
and
stc
test
add
mov
jle
xchg
es
mov
pop
and
xor
rorb
es
fimull
add
add
xor
popa
outsl
add
dec
add
add
icebp
mov
push
pop
aam
shrl
fcoml
aam
pop
push
int
fnstcw
fcoml
add
add
sub
inc
mov
hlt
adc
aaa
std
lret
mov
insl
roll
std
sbb
or
sbb
adc
push
out
xlat
sub
add
add
add
and
add
add
in
cmp
stos
pop
lock
xor
pop
clc
scas
xchg
xchg
in
lds
jl
repnz
add
inc
repnz
cmpsl
prefetch
sub
add
add
add
add
push
sub
xlat
and
add
add
xor
loope
data16
xor
adc
sbb
or
mov
sub
js
mov
cli
in
mov
and
mov
inc
push
and
add
add
std
mov
shll
leave
stc
cld
shl
sbb
add
add
add
mov
repnz
jecxz
ds
and
repz
mov
dec
jp
mov
cs
dec
push
pop
mov
push
xchg
jle
rorb
jmp
add
cwtl
add
add
add
in
movsl
out
negl
outsl
sahf
mov
push
imul
dec
movsb
push
dec
lea
movsb
or
add
add
scas
cmc
or
add
ja
sub
add
add
clc
out
mov
add
leave
outsb
mov
cli
push
arpl
inc
je
xor
add
nop
xor
adc
mov
add
add
popa
jne
mov
pushf
dec
add
add
int
movb
call
or
mov
loope
add
add
in
ret
adc
xor
out
pop
or
cmpb
add
mov
mov
pop
mov
repnz
xchg
outsl
hlt
jbe
add
add
mov
pop
pop
jns
mov
in
lods
aaa
inc
imul
jmp
insb
mov
cmp
push
dec
add
add
mov
arpl
lret
rdpmc
test
popf
mov
out
in
mov
mov
loopne,pn
lahf
lahf
dec
jno
push
xchg
shll
dec
sub
xchg
xor
jmp
and
push
ret
cmp
idiv
push
and
dec
mov
ja
pusha
add
add
lret
add
and
and
outsb
jb
adc
add
mov
sti
push
pusha
add
add
add
add
add
add
lret
cwtl
mov
or
mov
mov
nop
shrl
xchg
mov
daa
mov
jne
jnp
jne
and
cmp
ret
push
in
adc
out
mov
sbb
pop
aam
mov
add
add
and
add
pop
pop
cmp
cs
add
sbb
lret
mov
mov
add
add
xchg
push
jae
gs
movsb
test
mov
mov
addr16
push
dec
mov
clc
sarl
push
dec
repz
push
jb
test
mov
cmpsb
jno
sbb
aas
cmpsb
jne
stos
adc
leave
popf
cmp
xorl
add
add
sbb
shrl
cld
pop
in
aam
add
imul
mov
cmc
mov
dec
in
xchg
add
bound
mov
add
xchg
jbe
mov
xor
ds
xchg
cwtl
jg
mov
add
hlt
sub
add
add
popa
pop
cwtl
mov
mov
xchg
aad
inc
iret
cmc
movsl
xchg
lods
ret
lods
cmpb
and
mov
cli
xchg
fnstsw
notl
cmp
add
xorl
mov
cmp
test
xchg
and
add
sub
popf
jno
notb
cli
xchg
dec
adc
inc
rcl
pop
ret
mov
inc
mov
push
mov
add
add
arpl
jo
insl
cmp
mov
jge
xor
insl
out
lods
mov
gs
lcall
mov
push
int
add
jg
push
sbb
xchg
add
add
fstp
jl
jbe
adc
sbbl
fwait
hlt
push
lcall
pop
or
and
sbbb
mov
add
int
lcall
cltd
iret
xchg
das
push
loope
leave
aaa
sub
add
add
js
and
add
add
mov
or
in
jne
aam
pop
imul
insb
mov
pusha
mov
pushf
jo
outsl
or
add
add
hlt
add
out
mov
mov
adc
aam
shlb
dec
jo
jecxz
imul
in
mov
and
inc
mov
adc
add
add
add
add
cmp
add
add
mov
movsl
and
stos
xchg
xchg
cs
bound
repz
popf
ret
fsub
fsub
xor
xor
add
pop
mov
sub
add
add
add
int
inc
push
and
add
add
add
jle
sub
push
xor
fiaddl
add
push
mov
add
push
xchg
pop
sbb
dec
repnz
adcb
fmull
add
add
stos
jp
mov
rcr
push
dec
mov
fadd
mov
outsb
mov
nop
out
add
add
adc
add
add
mov
pop
mov
add
sub
out
out
xor
movsb
or
rolb
add
add
add
jnp
int3
iret
data16
pop
jnp
or
add
add
adcb
sub
dec
mov
add
adc
lds
mov
shl
jg
cmp
push
adc
outsl
test
add
add
and
add
add
mov
sahf
push
mov
lcall
push
inc
add
add
mov
jl
push
test
shl
sub
add
add
aas
mov
jns
movsl
fs
cltd
neg
mov
cmp
test
sbb
int3
or
sub
cs
jb
cmp
mov
lret
stos
xorl
jno
movsl
daa
add
pop
inc
int3
dec
dec
mov
addb
add
jnp
mov
sbb
mov
add
lahf
shrb
push
push
push
jo
mov
adc
std
push
cltd
sbb
outsb
lods
adc
sub
add
add
int
fidivrs
mov
or
movsl
mov
mov
mov
pop
ds
jecxz
pop
aas
jp,pt
in
bound
repnz
or
add
add
mov
test
ror
mov
adc
jg
add
add
mov
imul
call
dec
jne
stc
sbb
push
cmp
cmp
scas
aam
dec
iret
mov
in
mov
jnp
fs
sbb
loope
and
push
xchg
mov
cmpsb
cmp
lds
add
xchg
stc
cli
adc
fistpll
push
test
mov
fwait
hlt
addr16
rorl
add
add
add
push
outsl
add
add
add
mov
addr16
jae
mov
adc
scas
xchg
movsb
insl
xchg
jbe
fisubs
add
add
add
add
out
jmp
and
xor
jns
aas
add
pop
xor
and
test
imulb
xor
push
inc
sbb
add
add
mov
out
andb
add
add
shrl
add
cmc
mov
push
ss
ljmp
adc
inc
sub
call
out
gs
sbb
mov
fisubrs
add
mov
add
add
nop
andb
sub
dec
add
add
push
inc
mov
pop
mov
jmp
add
mov
aad
in
mov
mov
cmpsb
inc
add
add
icebp
sub
xor
mov
lods
jbe
push
aaa
inc
subl
add
add
jge
ja
and
mov
add
add
add
mov
and
lods
cmpsb
add
add
add
inc
jns
jmp
adc
pop
mov
add
pusha
mov
jbe
and
clc
push
mov
mov
stos
push
mov
add
add
mov
xchg
xor
add
pop
or
pop
and
std
cmp
push
rcl
out
inc
jmp
add
addr16
jmp
push
outsl
in
pusha
add
add
push
lods
xchg
sbb
lock
push
arpl
and
mov
jne
lea
ja
je
xchg
insb
mov
daa
mov
xlat
xor
add
add
and
pop
hlt
sub
mov
add
inc
xlat
dec
jno
add
add
xchg
jo
mov
aad
pop
bound
sub
adc
cmp
ljmp
and
mov
dec
lcall
enter
shll
sub
aad
ds
mov
mov
add
add
cmpsb
inc
sub
mov
outsl
in
mov
stos
test
pop
dec
push
and
cmc
fs
mov
stc
or
in
rcrb
dec
add
add
and
jbe
mov
mov
xor
pop
cwtl
xor
hlt
cmp
ss
pop
jl
cmpsb
leave
in
pop
aas
jl
pop
or
aad
xchg
jg
sti
les
aaa
jne
call
mov
inc
add
pop
push
or
add
add
inc
push
mov
jnp
mov
dec
push
pushf
sbb
dec
add
add
and
push
xchg
mov
imul
jae
mov
pop
dec
sub
add
add
add
adc
add
add
test
sub
call
pop
pop
pop
add
add
add
pop
jecxz
and
dec
nop
sbb
add
xchg
push
cltd
test
inc
stc
jno
push
rcl
dec
add
add
aad
add
xor
mov
add
dec
fst
je
mov
mov
stos
leave
sarl
and
lret
cld
fwait
jno
and
cld
add
mov
lock
stc
dec
subb
stos
sub
add
add
test
add
add
add
add
push
pop
mov
dec
mov
fldenv
mov
sub
add
add
out
fwait
xorl
add
repz
add
add
loopne
ds
add
add
xchg
cmp
mov
stos
mov
and
cmp
mov
or
add
add
and
ja
mov
cmp
mov
add
add
mov
add
cli
jo
fwait
loopne
and
add
add
inc
mov
add
add
xchg
mov
jns
std
std
cmp
add
add
in
inc
in
pop
imul
es
sbb
adc
or
add
add
jl
xor
add
mov
adc
add
add
outsb
pop
jns
dec
cmp
pop
xchg
cmp
or
add
add
lret
fsts
push
dec
and
mov
ret
sbb
mov
add
iret
xchg
loop
es
fldenv
add
add
adc
sub
add
add
mov
int
xchg
loopne
jp
dec
data16
jno
js
or
in
mov
dec
and
add
add
fmul
adc
shlb
add
pop
xor
subb
push
int
or
sahf
cmp
into
out
mov
sub
in
push
std
push
pop
push
inc
jnp
sub
add
dec
cld
fnsave
sbb
popa
stc
iret
push
and
dec
mov
testb
add
imul
mov
call
mov
jae
fildl
fldenv
xchg
stc
out
in
add
add
fwait
mov
sub
add
add
and
cs
add
add
ss
push
add
fimull
sti
mov
pop
push
mov
inc
clc
cmp
add
sub
out
shl
sub
add
scas
cmpsl
cltd
xchg
pushl
fsts
xorb
inc
and
add
jns
jae
hlt
in
cmp
aam
cmp
xchg
jge
add
inc
add
add
leave
cmp
and
cvtpi2ps
sbb
sub
ja
jl
mov
shl
dec
ficomps
mov
popl
mov
sbb
ror
imul
sbb
fisttpl
add
add
lret
mov
mov
push
pop
dec
xchg
push
xor
add
add
mov
push
bndstx
in
lods
subl
add
aas
jmp
les
insl
jecxz
adc
adc
ret
mov
fdivs
push
fsubs
ds
add
add
and
mov
hlt
pop
loop
or
std
out
mov
sub
add
add
add
xor
dec
mov
test
xchg
enter
inc
mov
or
add
addl
lds
jecxz
pusha
mov
cld
push
test
jne
xor
jmp
add
bound
fmul
popl
add
and
add
add
add
add
mov
mov
mov
dec
jg
jecxz
cli
and
mov
mov
jge
pop
test
dec
jmp
jp
lret
sbb
jg
adc
jmp
mov
mov
icebp
shl
and
in
dec
push
stos
cmp
mov
sbbl
adc
jns
push
sub
mov
push
jb
lahf
hlt
or
push
pusha
add
add
jp
fcmovnb
dec
adc
jmp
or
add
add
icebp
icebp
push
pop
les
add
add
xor
aad
fdiv
add
add
shr
inc
sub
lea
and
addb
add
add
frstpm(287
sbb
mov
inc
data16
orl
divl
int3
mov
add
jae
jmp
mov
fwait
int3
cmc
repnz
mov
cs
inc
fiaddl
and
add
add
cmp
mov
mov
ljmp
sub
hlt
pushf
dec
add
add
aas
mov
enter
push
faddl
add
add
ror
ljmp
add
add
push
shr
xchg
dec
inc
and
xor
or
add
add
addr16
aaa
test
mov
xor
arpl
and
pop
sbb
es
mov
pushf
cmp
jns
mov
scas
xchg
mov
mov
sub
and
add
add
add
add
and
mov
or
jo
mov
pop
in
clc
add
add
add
nop
fldt
and
mov
cmp
cmp
adc
and
add
add
in
das
dec
xchg
adc
xor
sbb
lea
repz
arpl
dec
repz
add
add
loop
pushf
lock
aas
jmp
add
add
es
rcll
add
es
dec
mov
mov
push
sbb
arpl
sub
es
xor
mov
mov
push
xchg
cli
xchg
ret
xchg
cmp
cmp
bound
mov
lret
mov
in
inc
mov
mov
movsl
arpl
xor
sbb
jecxz
xchg
icebp
out
or
out
test
loope
into
cld
adc
sar
push
scas
adc
arpl
sarb
sub
sbb
push
jecxz
movl
pushf
insl
bound
add
mov
xor
fisttpl
repz
mov
ret
ja
rcr
into
add
pop
fsubs
add
mov
mov
ljmp
insl
lret
push
xchg
sub
fcmovnu
mulb
aam
scas
and
push
jb
sahf
jmp
loopne
insb
add
add
ret
mov
int3
cmp
adc
add
jns
xchg
xchg
add
int
xor
sbb
enter
inc
pop
dec
or
cmp
andl
cmpl
outsb
mov
xchg
sub
add
add
sahf
xor
mov
sub
outsb
push
xor
mov
xchg
push
ret
add
add
notb
ja
add
add
loope
jmp
pop
dec
sbb
xor
add
add
add
shll
add
addr16
push
mov
mov
lret
inc
ret
inc
enter
add
add
dec
outsl
dec
push
inc
push
outsl
xchg
orl
add
cs
shld
cmp
cmp
add
add
and
negl
and
add
add
push
cmp
arpl
popf
dec
lods
jl
in
repnz
jns
sti
sbb
dec
xchg
xchg
sub
mov
adc
testb
add
mov
jno
push
cmpsb
mov
xchg
ret
mov
data16
mov
in
test
hlt
xchg
add
adc
cmp
sub
add
add
add
adc
clc
popa
dec
mov
mov
and
add
add
popa
xor
pushf
movsb
jns
ss
cltd
das
int
xchg
sti
inc
add
add
jo
in
push
sub
test
jno
dec
mov
and
fnsave
add
add
sahf
mov
adc
push
incb
stos
std
ret
mov
add
add
or
add
add
clc
lret
aam
pusha
mov
int
cmp
and
outsb
pop
scas
xchg
sbb
aam
mov
adc
or
add
add
and
ret
aam
stos
add
add
add
icebp
or
int3
rcrl
cmpsl
mov
jmp
xchg
mov
or
add
add
mov
pop
push
dec
xchg
scas
push
cmp
mov
add
sub
or
xor
scas
inc
jmp
add
in
inc
add
mov
mov
call
fs
cwtl
packuswb
inc
out
shll
add
sbb
inc
adc
mov
jp
or
push
mov
push
cmp
jmp
jnp
mov
stos
and
add
add
fisubrs
add
add
inc
pushf
cmpsl
jb
cs
js
aam
out
dec
add
rolb
or
mov
mov
shrb
mov
add
add
lods
and
jbe
dec
mov
data16
movsl
xor
jg
rcrl
mov
and
pop
and
lahf
push
inc
or
dec
xchg
cmp
pop
pop
movl
add
add
add
add
cwtl
pop
dec
outsb
mov
cli
or
jae
sub
nop
iret
test
push
push
or
add
add
std
scas
scas
inc
push
sbb
rolb
add
add
inc
mov
jno
mov
pusha
mov
dec
xor
iret
xchg
icebp
jmp
mov
mov
pop
xlat
push
add
add
bound
push
dec
push
or
xchg
mov
add
add
adc
and
les
add
add
push
sub
mov
in
push
push
jecxz
push
sbb
xchg
sub
imul
mov
add
loop
mov
push
xchg
andb
add
add
popa
shr
cld
dec
mov
add
aaa
aam
mov
sub
pop
jbe
xor
ret
sbb
mov
pop
or
nop
sbb
mov
addr16
lret
xorl
ret
add
add
add
inc
fnstsw
sbb
lcall
jno
stos
jecxz
stos
jno
unpckhps
jno
sbbb
ds
sub
push
adc
xchg
and
add
add
mov
push
push
popf
les
mov
mov
xor
rorl
cmp
and
mov
mov
adc
cmpsb
test
ficomps
pop
in
jl
mov
loopne
mov
jno
int3
add
mov
add
add
add
cwtl
xor
fyl2x
dec
push
mov
mov
fdiv
adc
icebp
mov
pop
or
add
add
push
clc
xchg
jp
cli
xchg
pop
sbb
out
cwtl
or
add
lods
xchg
mov
mov
out
js
ja
jno
scas
mov
add
add
adc
xor
mov
add
add
loop
ror
and
add
add
sub
idivl
pop
aad
add
add
xorl
hlt
jo
pop
pushf
pop
in
mov
xor
lock
lret
add
add
push
or
mov
mov
and
mov
push
inc
mov
xorb
stos
imul
daa
pop
cwtl
ficoml
and
sbb
filds
mov
push
pop
js
dec
mov
pop
jecxz
cmpsb
test
push
fsubr
xchg
int3
in
jp
push
and
cmpsl
or
add
mov
js
sbb
ljmp
add
mov
add
add
inc
add
add
pop
inc
add
add
mov
add
cmp
add
add
dec
add
add
std
inc
clc
in
ja
pop
dec
mov
les
pop
test
adc
and
add
add
add
add
jbe
or
add
add
jns
inc
add
add
cmpb
pop
mov
jb
add
add
or
or
add
add
adc
dec
fldl
mov
add
add
or
add
add
je
in
es
pop
insl
loope
insb
add
add
mov
mov
aaa
cmp
inc
mov
xchg
cld
push
cmp
add
add
sbb
inc
popf
jo
decl
addr16
add
add
cld
fcmovnbe
cpuid
or
sti
xchg
xchg
pop
adc
inc
add
add
sbb
popf
sbb
fisubs
ret
add
add
pop
pop
fwait
daa
cmp
add
loope
mov
cmp
add
add
arpl
rol
rorl
rorl
pop
je
sti
push
lret
stos
add
sub
mov
add
add
sub
cmpsl
in
shlb
add
aas
mov
mov
cld
cmp
loope
inc
xor
pop
xchg
paddd
cltd
repnz
ja
bound
mov
mov
movsl
push
sub
add
add
mov
and
mov
and
ret
jbe
dec
sbb
add
mov
iret
inc
outsb
inc
mov
mov
inc
add
add
hlt
lock
loop
ljmp
add
in
scas
dec
and
mov
mov
add
add
or
add
add
sub
les
add
cli
fidivrs
lret
jecxz
movsb
aaa
lock
add
add
inc
loop
push
pop
adc
mov
or
add
loop
jp
in
xchg
add
add
in
adc
fbstp
dec
add
add
mov
rorb
push
cwtl
pop
mov
pop
in
es
sahf
xor
add
add
mov
xor
outsl
test
add
add
xor
add
stos
mov
ja
in
mov
pop
in
push
jo
push
dec
mov
or
cmp
scas
mov
out
xorl
push
inc
push
fidivl
or
mov
pop
ficompl
shll
add
add
jle
xchg
dec
mov
cmp
out
xor
push
std
das
orb
mov
dec
add
add
push
and
push
out
call
or
lret
mov
add
add
push
iret
jle
andl
sub
movsl
dec
jl
imul
cltd
xlat
jo
jp
push
add
jae
cld
jl
dec
mov
in
push
sub
add
add
into
daa
pop
out
dec
sbb
test
rorb
and
add
add
aas
xchg
repz
out
out
inc
scas
pop
fnstenv
std
pop
push
push
inc
mov
notb
addr16
or
add
add
cmp
xchg
sub
add
add
into
mov
repz
mov
mov
cmp
dec
mov
dec
add
add
push
jg
mov
or
mov
xchg
dec
xlat
add
int3
adc
test
push
cmp
pop
inc
sti
push
add
add
popa
sbb
xchg
hlt
and
mov
ret
jne
stos
daa
add
adc
stos
test
add
add
add
add
xchg
cmpsb
lods
loope
sbb
aam
cmp
repnz
add
add
jl
repnz
add
add
mulb
jae
inc
xchg
add
cli
jbe
jns
in
loopne
push
pop
sbb
add
fnstsw
fisubl
in
clc
aas
cld
sub
mov
int3
mov
add
hlt
rorl
add
add
loope
push
addr16
xor
add
add
xchg
out
dec
arpl
xchg
mov
pop
fistpll
dec
add
add
daa
in
fisttps
add
add
lahf
sbb
sub
mov
push
sbb
add
add
mov
add
add
int3
push
scas
pusha
mov
xchg
rcrb
mov
push
int
fmull
loop
xchg
mov
pop
loopne
hlt
sub
clc
enter
aad
dec
shrl
in
loop
sti
cmpsl
mov
sahf
pop
int3
jp
icebp
addr16
scas
cmp
stos
mov
or
add
add
dec
pop
cmc
xchg
sti
jecxz
fnsave
mov
mov
sbb
lret
cmp
xor
add
add
arpl
dec
add
add
and
int3
lock
insb
mov
stos
addr16
xchg
mov
pop
xchg
loopne
cltd
xchg
rcrb
pop
xor
and
add
add
jecxz
aaa
sti
out
and
lods
repz
imul
mov
sub
mov
add
add
mov
cwtl
pop
ss
add
jns
mov
and
das
mov
bound
adc
and
add
add
add
icebp
mov
fisubl
gs
repz
loop
mov
out
mov
inc
icebp
sbb
bound
fcomp
out
sub
cwtl
add
fbld
pop
mov
inc
jg
inc
add
add
ljmp
add
add
add
sub
jecxz
jbe
inc
insb
mov
pusha
mov
dec
jb
mov
and
ss
sub
gs
mov
cmp
add
add
int
add
bound
jo
jb
add
add
loopne
sbb
aas
dec
in
lds
aas
mov
add
add
cmpsb
test
pop
in
pop
les
addr16
inc
lock
mov
push
shrd
dec
mov
pop
mov
xchg
cmc
clc
icebp
or
add
add
repnz
mov
xchg
mov
mov
ljmp
add
add
pop
test
mov
mov
stos
push
dec
mov
enter
les
dec
ds
call
lods
xchg
push
and
add
add
mov
ret
sub
add
add
xchg
mov
pop
rcl
jle
xchg
insb
mov
cltd
setle
and
add
add
shrb
andb
add
repnz
into
sbb
dec
add
add
push
ret
cwtl
xlat
in
out
ficompl
ljmp
add
or
mov
pop
push
loope
fsubrl
fs
scas
inc
jmp
sub
add
fcmove
mov
addr16
out
sub
add
add
repz
in
sti
in
fadds
pushf
repnz
hlt
mov
inc
std
in
arpl
add
mov
wbinvd
add
add
add
push
test
nop
loop
or
push
loopne
repnz
cld
ss
lds
mov
loop
movsl
push
cmp
add
fdivs
add
add
cli
cs
fldt
pop
lcall
repz
add
push
sub
aas
out
bound
mov
mov
popf
ja
sbb
add
add
add
cmpsb
xor
outsl
je
cmp
xchg
fnstsw
repz
xor
mov
mov
push
imul
dec
clc
inc
mov
add
add
push
jl
mov
push
cmc
cmp
xchg
xlat
push
adc
repnz
movsb
fcomi
jae
mov
lock
inc
inc
daa
bound
fsubrs
pop
daa
fsubl
jl
sub
jg
and
inc
push
cmc
inc
in
movsl
outsl
mov
add
add
sbb
inc
shll
pusha
mov
mov
or
pop
daa
xlat
sti
xchg
xchg
add
add
sti
sbb
cmc
jae
sbb
cmpsl
scas
xorl
sbb
fs
push
cmp
divb
add
add
test
test
cld
fbstp
aad
sbb
add
add
dec
xchg
nop
or
scas
pcmpgtb
add
add
add
add
add
enter
je
or
add
add
xchg
push
pop
xchg
pop
lahf
loop
push
jne
fdivl
push
cmp
adc
mov
popf
bound
xchg
xlat
mov
fidivrs
push
ret
hlt
enter
xchg
lcall
mov
add
scas
jns
test
add
dec
mov
xchg
inc
add
add
mov
add
lock
out
subl
xchg
dec
mov
add
add
inc
inc
cld
aam
pop
xchg
aas
mov
add
add
mov
leave
fbld
xor
mov
iret
stos
sub
jmp
and
das
dec
push
mov
xlat
pop
sti
iret
lea
das
sti
adc
add
repz
push
sbb
push
mov
mov
lock
push
and
add
add
xor
out
pop
sub
mov
jns
mov
push
idivl
mov
and
enter
pop
jnp
cld
jo
sub
fistl
sarb
and
sbb
mov
mov
add
add
add
enter
or
add
add
or
add
inc
cmp
sbb
cmp
cs
add
add
rol
push
lea
lret
fwait
ja
inc
jmp
lret
pop
into
enter
or
rcrb
fimuls
cmpl
mov
push
popa
mov
js
mov
add
add
add
out
clc
and
loopne
push
sub
enter
mov
push
aam
das
xchg
test
add
add
dec
out
or
sub
mov
fisubs
cwtl
sbb
mov
lcall
mov
dec
add
add
aad
jae
fiadds
add
add
and
add
add
add
add
add
sub
add
mov
aad
add
add
xorb
sahf
xor
jp
insl
mov
pop
dec
jbe
dec
inc
mov
jl
xchg
xchg
rorl
add
sbb
mov
add
adc
mov
icebp
sahf
cmp
add
xlat
pop
ret
lret
scas
lock
mov
xchg
inc
push
rclb
mov
lods
adc
lahf
cmp
enter
add
add
orl
add
add
fidivrs
stc
mov
inc
add
add
jl
jno
push
je
jge
add
andl
in
and
add
jne
jno
imul
adc
mov
jp
push
into
cmp
xchg
jge
jne
arpl
add
mov
pop
push
je
std
dec
loope
adc
add
add
das
mov
scas
adc
orb
int3
mov
push
xchg
setns
add
add
cmp
repz
inc
add
add
or
add
add
pop
mov
cli
pop
add
add
add
mov
cltd
or
xor
inc
add
add
insl
mov
in
cmpb
cmp
xchg
fcmovu
sahf
into
mov
rcll
xor
jb
sub
sub
push
dec
mov
mov
sub
movsl
pop
xchg
sub
movsl
in
fisttpl
add
add
nop
pop
test
mov
mov
mov
das
loop
lcall
sbb
mov
add
add
push
adc
add
add
and
add
add
std
cmp
outsl
aam
or
add
add
sbb
jg
and
inc
fbld
stc
addb
add
add
scas
in
pop
xchg
add
push
arpl
inc
add
add
int
add
sahf
dec
movsl
lret
mov
mov
sbb
add
xchg
lods
mov
mov
popf
xchg
push
pop
pop
sbb
pusha
mov
jge
push
es
rcrl
lods
inc
in
mov
or
add
ss
add
jg
mov
add
add
sub
mov
mov
ret
inc
sub
add
add
push
inc
mov
sahf
mov
jb
outsb
hlt
fiadds
mov
inc
jns
add
add
negb
jle
aam
cmpsl
pusha
add
add
shll
add
add
add
inc
dec
mov
sahf
sub
mov
or
icebp
or
mov
aas
arpl
std
aam
icebp
mov
xchg
pop
call
call
data16
hlt
lret
and
add
add
fwait
mov
xor
xchg
shl
xchg
push
jl
ret
and
add
add
jo
movsb
int
push
sub
add
add
add
pushf
mov
xor
nop
mov
mov
add
add
hlt
ret
mov
cmp
nop
pop
pop
jno
data16
jno
adc
movsl
push
xchg
pop
in
outsb
repnz
lret
mov
and
scas
fst
inc
cmc
and
add
add
cmp
enter
adc
mov
add
add
add
xor
in
cli
loopne
or
push
xchg
adc
xchg
xchg
hlt
lock
push
out
fnstenv
adc
add
add
cmpsb
stos
cld
xchg
pop
push
xor
mov
les
popf
fdivrl
jecxz
stos
daa
sbb
xchg
cmc
ss
js
inc
add
add
fdivr
in
push
xchg
loope
aad
insb
add
add
mov
push
mov
ss
jno
aad
add
add
xchg
in
ficomps
fwait
ja
fistpll
pop
insl
cmpsl
adc
and
sub
pop
test
xchg
fnstcw
in
dec
call
add
add
cmp
jno
sub
sbb
mov
ljmp
cmpsb
jmp
adc
mov
lahf
leave
or
incl
add
fcmove
and
add
add
enter
add
add
add
add
insl
mov
les
dec
scas
mov
mov
sbbl
sbb
adc
lods
jae
xchg
inc
inc
mov
xor
popf
shr
mov
nop
sbb
mov
mov
jmp
add
cli
ljmp
mov
cmpsb
into
bound
icebp
stos
jecxz
mov
mov
dec
sbb
cmp
scas
pop
imul
add
add
in
pop
out
add
mov
sbb
mov
ds
imul
addb
mov
push
push
pop
inc
icebp
je
add
add
add
daa
fildl
push
dec
mov
fcomp
inc
notb
mov
fsub
xchg
movsl
xchg
push
xorb
add
add
fcoml
fwait
mov
stc
mov
jl
jge
mov
xchg
sar
add
add
inc
mov
lods
cmp
jb
mov
mov
sbb
add
xor
dec
rcrl
or
in
and
pop
dec
repz
add
add
or
sub
dec
xor
ret
add
add
out
out
icebp
inc
insl
inc
clc
inc
add
add
push
add
mov
pop
imul
add
add
mov
and
jb
dec
lret
push
push
pop
idiv
movsb
aaa
mov
pop
add
jmp
xchg
rcr
fistpll
xchg
call
or
add
add
cld
mov
cmp
xor
add
add
cmpsl
pop
and
jle
xor
add
add
jle
test
sbb
and
add
add
push
out
pop
pop
leave
inc
push
out
ljmp
xchg
mov
dec
cmp
add
lock
mov
push
jnp
mov
dec
call
les
fs
jecxz
xchg
sahf
test
mov
ja
cmp
cli
mov
add
or
adc
sbb
xchg
or
add
add
pop
sbb
xchg
hlt
int
dec
dec
jae
mov
lds
shll
and
add
or
add
add
out
pop
mov
cmp
roll
daa
ss
and
repnz
hlt
sub
add
add
push
rorl
add
jecxz
mov
add
iret
push
mov
add
fld
fildll
and
mov
fildll
mov
push
in
jmp
add
iret
aam
mov
fdivs
jbe
and
mov
fs
pop
mov
hlt
inc
sub
nop
mov
xchg
fildll
lahf
xchg
adc
add
add
jp
int3
pop
and
jecxz
jo
mov
out
sub
add
adcl
scas
int
add
add
sub
fcmovnbe
int3
mov
js
xor
push
jge
and
add
add
mov
insb
mov
popa
into
rorl
lods
push
cmpsl
dec
mov
cmp
daa
xor
test
add
add
add
xor
enter
std
add
mov
cs
add
push
and
add
add
mov
fs
loop
nop
fsubr
adc
mov
pusha
mov
scas
push
leave
dec
mov
add
add
js
cmp
jecxz
cltd
fwait
inc
inc
mov
add
add
jns
add
add
call
xchg
xor
jnp
jle
cmpsb
cmp
repnz
xor
adc
add
test
add
add
sub
add
icebp
ja
jmp
out
orl
xchg
cmp
in
push
sbb
add
out
out
mov
add
add
add
rorl
pop
adc
xor
out
or
dec
popa
dec
xchg
fst
jmp
outsl
fsubs
add
movsl
rorb
add
add
mov
mov
push
xlat
sbb
pop
push
cmpsb
xchg
sub
add
add
add
add
ds
out
inc
gs
add
add
dec
inc
add
add
int3
stos
sub
sub
add
add
add
add
repz
inc
fcoml
fmuls
jl
cmpsl
mov
subb
push
fisubl
add
add
xor
je
jns
nop
std
lea
aaa
dec
sarb
shl
mov
lret
sbb
add
ljmp
mov
out
sbb
push
fadds
adc
iret
cwtl
push
inc
ja
sti
jbe
or
jo
leave
jae
jp
or
add
sahf
sub
add
sub
mov
and
add
add
push
and
popf
jb
sbb
add
stos
jo
aad
jns
lods
add
test
fnsave
or
es
add
add
add
add
es
mov
dec
add
add
adcb
out
xchg
inc
add
add
xor
out
cmp
xor
jecxz
insb
mov
lods
mov
fs
mov
xchg
shrl
fists
sbb
insb
mov
jo
dec
jg
xchg
push
mov
add
add
push
mov
lret
gs
je
je
add
add
sub
add
add
insb
add
add
mov
add
add
jg
ljmp
sbb
xchg
sbb
mov
bound
scas
adc
sub
cmc
dec
mov
xchg
call
in
xor
mov
shlb
or
add
add
insl
xchg
imul
cmpsl
js
std
ds
test
bound
scas
sbb
loope
cld
xor
movsb
aaa
or
add
enter
mov
fnsave
stos
es
out
xor
stos
int
test
adc
push
mov
mov
cmpsb
sub
add
add
push
iret
dec
add
add
xchg
jo
push
jecxz
ret
cmp
icebp
insb
mov
push
pop
dec
xchg
data16
cmp
mov
loop
and
lret
pop
fmul
push
jae
sahf
outsb
xchg
pop
movsl
jae
jg
add
lods
gs
add
add
mov
dec
add
add
xchg
and
add
add
cs
fmull
add
add
icebp
loopne
jbe
stc
or
or
add
add
in
enter
sarb
lcall
add
subl
push
sub
mov
mov
jno
int
sti
enter
pop
cmp
xor
xor
cmp
mov
pop
adc
hlt
outsl
mov
xchg
jmp
mov
xchg
mov
xor
fldcw
jmp
xor
rcr
dec
jb
adc
add
add
add
push
loope
cmc
aas
aam
sub
add
add
inc
les
nop
sub
xlat
jl
add
add
add
je
add
mov
jbe
push
lods
mov
jl
rcrl
aad
jl
je
out
lcall
push
test
lea
enter
dec
cwtl
fdivrs
sbb
out
mov
bound
inc
fbstp
adc
and
add
add
mov
and
add
add
push
lret
cli
ret
add
add
andb
adc
mulb
inc
jo
mov
pushl
icebp
mov
xlat
jg
pop
sub
xchg
adc
aas
xchg
jae
jp
mov
mov
cltd
mov
or
and
add
add
xchg
add
add
add
add
jecxz
or
add
add
stc
mov
in
sub
add
add
outsb
push
std
sbb
sbb
inc
bound
add
add
mov
cmp
adc
sbb
out
jnp
jae
mov
adc
pop
add
push
inc
xor
cs
fldcw
or
mov
push
dec
mov
xor
cmp
es
icebp
mov
stc
push
mov
sbb
test
fidivl
and
add
add
mov
xor
ficoms
rcrl
mov
xchg
jo
clc
popf
jp
and
mov
mov
inc
mov
clc
les
daa
out
jle
das
outsb
jns
cltd
cs
mov
fiadds
add
add
test
add
add
adc
shll
out
cli
std
xor
add
add
add
dec
or
add
add
popf
adc
sbb
sub
push
cmp
cwtl
dec
mov
lret
addb
lods
scas
adc
sbb
subl
not
jo
mulb
out
cltd
in
daa
mov
dec
inc
cwtl
insb
add
add
pop
pop
stos
push
sub
les
int
cwtl
sub
add
int3
mov
lock
lcall
add
test
mov
lock
add
add
ret
outsl
adc
add
ljmp
ss
outsl
in
add
xchg
lods
inc
add
stc
repnz
out
mov
into
loopne
imulb
xchg
adc
outsb
and
inc
xchg
or
jne
data16
sbb
in
es
xchg
cs
add
add
push
sub
mov
jp
jno
in
or
testl
xchg
ret
data16
clc
cmc
lea
js
mov
sbb
add
add
lret
xchg
and
inc
rcrl
lret
push
sbb
aad
add
add
push
sub
add
add
orl
ret
inc
xchg
adc
fsubl
cli
popa
cmp
add
popl
mov
mov
xchg
sub
cmpsl
add
int
xor
mov
add
add
or
ss
lahf
inc
add
add
lods
sbb
mov
push
lods
mov
sahf
pop
add
mov
aaa
dec
mov
xor
movsb
dec
test
add
add
jns
jl
popa
fidivrs
mov
jp
cmc
jg
adc
addb
add
xor
xlat
fucomi
xor
push
dec
add
add
xor
movb
popf
mov
loop
push
fnsave
push
push
cmp
sbb
cmpsl
pop
popf
das
gs
mov
mov
mov
add
rol
popa
xchg
cs
lods
jb
jno
add
add
add
pop
test
xchg
ss
add
movsl
out
rol
push
pop
rclb
popa
stc
xchg
loope
inc
adc
das
call
jb
push
addr16
inc
fdivrl
pop
dec
test
ret
cmc
push
jns
add
add
adc
add
cmpsl
cmpsw
mov
adc
lcall
ljmp
mov
add
add
sbb
fsubrp
out
dec
xor
mov
xor
scas
mov
mov
pushf
sarb
hlt
das
inc
xor
add
add
jge
ljmp
mov
aaa
ja
out
mov
add
nop
in
lcall
sub
add
add
jno
mov
lock
mov
mov
add
add
insb
mov
push
jne
add
add
test
cmc
xlat
mov
xor
xchg
pop
jo
inc
ljmp
or
loope
pushf
mov
rolb
add
add
es
jnp
pop
sahf
add
outsb
loopne
xor
mov
and
add
add
add
add
sbb
into
sbb
lock
decl
mov
add
xchg
gs
orb
add
stc
mov
sub
sub
add
add
iret
iret
pop
sbb
or
pop
add
iret
mov
es
xchg
cmp
sti
sbb
repz
add
add
mov
dec
sbb
jne
or
adc
xor
mov
ficoml
jge
push
lods
inc
dec
pop
add
ret
jp
orb
add
add
lahf
sub
sub
clc
rolb
lea
shll
sub
add
add
pop
scas
adcl
sbb
mov
mov
test
cmp
mov
push
xchg
jno
test
add
add
enter
subl
add
adc
mov
add
inc
sub
int3
stos
push
mov
ljmp
push
pop
and
mov
ret
xor
pop
mov
mov
mov
mov
outsl
cmp
movsl
jo
fisttpll
or
add
add
cmp
add
clc
sub
mov
mov
jp
mov
mov
test
jo
mov
and
mov
add
stc
imul
add
mov
jne
jo
test
out
and
mov
imul
loopne
icebp
movsb
leave
rorb
cmp
dec
out
ret
push
jae
testl
and
add
add
add
bound
and
add
add
dec
or
mov
fcmovb
pop
sub
xchg
cld
pusha
mov
in
dec
mov
cmpsb
xchg
gs
add
push
test
dec
jbe
mov
imul
imul
fcomps
mov
shrb
add
add
xchg
icebp
pop
fdivrl
lock
cltd
std
fwait
sub
pop
int
je
scas
dec
repnz
xchg
out
jbe
add
or
add
add
add
add
add
add
add
nop
cmc
enter
add
add
add
add
add
add
add
hlt
mov
stos
out
adc
mov
adc
add
test
dec
lock
jne
mov
inc
jae
add
add
test
sbbl
cli
pop
cmp
xchg
inc
dec
nop
mov
lods
outsb
inc
mov
mov
mov
int
xchg
xor
nop
cmpsb
sarb
adc
xor
lock
repz
sub
mov
sbb
rcl
ret
leave
mov
iret
adc
dec
and
add
mov
add
push
in
out
fwait
adc
jno
ret
fstpl
in
inc
imul
je
inc
lock
mov
stc
loopne
jl
rcll
add
das
bound
rcll
les
jnp
stos
adc
adc
hlt
leave
pop
cmpb
mov
lods
adcb
add
add
ss
xorl
adc
test
enter
out
adc
jmp
dec
outsb
cwtl
out
fs
inc
inc
add
add
jge
or
add
add
dec
add
add
pop
add
out
fcmovu
outsb
jecxz
pop
and
jo
jg
sub
add
add
add
jo
add
add
inc
cltd
cs
inc
aam
aas
pusha
add
add
addr16
daa
enter
mov
scas
repnz
loopne
mov
loop
hlt
hlt
push
aam
and
lcall
push
fprem1
test
or
xchg
push
in
iret
scas
pop
add
mov
dec
stc
ljmp
add
mov
out
inc
cmc
or
add
add
movsb
mov
xchg
lock
jae
aam
mov
in
xor
mov
enter
adc
jo
inc
lret
xor
mov
inc
dec
adc
add
in
sar
sbb
jno
mov
add
add
push
ret
dec
mov
xchg
jmp
mov
adc
add
aad
lret
pusha
add
add
inc
inc
nop
repnz
movsl
jbe
pop
mov
movsl
aaa
ljmp
mov
mov
add
add
add
mov
cltd
arpl
lret
insl
inc
add
add
sbb
mov
xor
sbbl
in
push
shrl
enter
add
add
add
push
mov
push
xor
pop
scas
jge
sbb
into
mov
pop
mov
aas
data16
push
cli
cmp
mov
inc
stos
dec
popf
icebp
push
jl
insl
add
add
aas
or
sbb
scas
mov
dec
stos
add
add
push
into
jle
dec
imul
push
mov
stos
aaa
cmp
int3
daa
add
addr16
cmp
cli
pop
out
outsb
scas
cmc
aaa
push
dec
dec
mov
mov
data16
sti
and
jne
aas
or
scas
hlt
loopne
pop
subb
add
xor
mov
add
xor
cli
sarl
lods
sub
mov
mov
or
mov
push
cmp
inc
pop
hlt
push
in
mov
push
pop
dec
shrb
mov
or
add
add
mov
mov
add
int3
lcall
lea
das
push
pusha
mov
or
out
orb
add
add
add
inc
inc
mov
cli
adcb
push
or
add
leave
stos
jp
sbb
icebp
scas
cmp
xchg
sub
xchg
and
ss
mov
add
add
std
xor
cwtl
sahf
and
mov
push
mov
xchg
add
add
add
push
sub
enter
add
add
cltd
xchg
adc
gs
pop
cmpsl
cmp
xchg
int
std
js
into
jbe
imul
ss
sub
dec
divb
fs
outsl
pop
xlat
repnz
pop
push
pop
jnp
js
cltd
out
or
add
add
cmp
hlt
inc
jnp
xor
into
and
loop
mov
test
outsl
icebp
mov
test
add
push
cmpsl
xor
stc
test
push
in
mov
inc
jg
ret
jae
sub
add
add
add
subl
jp
cmp
fnstcw
sbb
lock
cmp
add
or
add
add
mov
mov
cld
adc
mov
sahf
jg
mov
jg
mov
rorb
and
ljmp
sti
xchg
mov
xchg
aam
out
adc
pop
ficompl
xor
fadds
mov
je
cltd
pop
inc
insl
test
xor
cmp
push
lock
add
add
sbb
rcl
sbb
test
add
add
arpl
stc
push
xor
fdivrl
add
clc
lods
and
sbb
ja
testl
mov
sahf
int3
sahf
xchg
dec
in
push
movsl
imul
dec
and
push
add
add
add
cltd
mov
ljmp
cs
fwait
sbb
stc
fsub
shrl
mov
push
sti
xchg
cmp
rol
push
pop
test
ret
or
iret
pop
mov
adc
pop
es
jo
outsl
lret
mov
fmuls
cs
dec
pop
clc
in
movsl
dec
add
add
das
imul
bound
jp
out
ja
add
add
sbb
add
add
jg
into
sub
add
add
dec
push
shl
adc
fdecstp
or
in
jbe
fstl
xor
sub
dec
es
mov
add
mov
jae
and
dec
add
add
jne
lds
outsb
and
or
lock
scas
movsb
push
imul
pop
stc
into
mov
aad
adc
add
add
mov
add
jmp
mov
lea
add
add
pusha
add
add
and
add
add
lock
pop
mov
pop
movsl
stos
push
jmp
ja
mov
cmp
mov
xor
aam
fcoml
int3
sub
pop
cli
clc
or
and
inc
mov
lock
xchg
lcall
add
add
adc
sbb
cmp
and
add
add
add
loopne
dec
add
add
sub
rcrl
into
ljmp
cmpsb
mov
iret
orl
push
icebp
outsl
fidivs
repnz
and
add
add
std
not
outsb
mov
mov
pop
lods
xor
add
out
mov
hlt
xor
stc
data16
adc
ds
xor
sub
cmc
popa
fcmovbe
xor
mov
in
cmpsl
test
add
stc
mov
ret
scas
in
add
add
add
push
bound
je
mov
into
bound
xor
or
add
add
sub
add
add
xor
sbb
flds
add
add
pop
mov
adc
or
add
add
add
add
add
add
mov
insb
add
add
cli
jae
add
add
inc
popa
or
add
add
jmp
jae
stos
adc
jp
mov
add
add
andb
jo
pop
push
out
ret
and
add
add
cs
fwait
shl
popf
sub
add
add
out
dec
add
add
in
fnstcw
mov
fcom
stos
adc
mov
dec
js
jae
add
and
add
push
xor
lods
mov
mov
adcl
movsl
lahf
mov
shlb
mov
fildl
xchg
ljmp
adc
add
add
push
je
scas
iret
xor
call
mov
jns
add
add
adcl
xchg
in
cmp
xor
in
sbb
sbb
inc
mov
pop
test
fildll
add
add
shrl
mov
add
xor
insl
lret
nop
sbb
repz
insb
mov
aad
insl
sbb
add
sub
sub
adc
xchg
or
mov
hlt
sbb
add
xchg
stos
bound
add
mov
add
add
jmp
inc
xor
test
add
add
lods
xor
add
arpl
add
cs
add
add
mov
jecxz
mov
scas
insl
jg
sbb
call
add
ficoms
or
inc
pop
cmpsl
mov
mov
movsl
mov
out
loopne
adc
imul
pop
push
xor
scas
dec
shll
add
add
dec
sub
add
add
in
mov
aas
scas
imul
out
cmp
or
inc
mov
add
add
lods
xor
pop
jge
xor
mov
add
add
adc
add
add
add
fwait
add
lret
mov
add
add
pop
add
jne
pop
xor
sub
add
add
mov
pushf
lret
push
push
andl
jp
jge
pop
pushw
mov
je
add
add
imul
sti
mov
adc
int
xchg
mov
outsl
fldenv
and
add
add
xchg
add
add
xchg
cld
jp
sti
mov
es
lds
add
add
cmp
rorl
add
add
mov
out
std
imull
add
hlt
insb
add
add
mov
add
add
aam
add
add
add
fnsave
arpl
push
pop
and
add
add
std
out
add
mov
popf
adc
xchg
aas
xchg
pop
pop
clc
jp
pop
pop
rcl
xchg
cmpsl
fldln2
sti
mov
add
add
pop
push
inc
lods
adc
cld
add
add
adc
gs
das
dec
movb
scas
jecxz
xchg
lret
mov
and
add
add
int3
xor
sahf
out
cmp
mov
into
mov
push
ret
test
push
imul
or
cmp
mov
xchg
mov
mov
lock
sbb
rorb
push
xchg
into
push
mov
sbb
jno
jle
xor
mov
fwait
test
add
cmp
paddusw
popf
xchg
xlat
fisubs
mov
adc
das
andl
jnp
add
add
ds
in
in
mov
pop
jbe
iret
pop
pop
lock
mov
loopne
and
pusha
add
add
movsb
push
mov
mov
add
add
xor
fnsave
ret
cmpsb
mov
push
notl
add
add
xchg
lcall
dec
sti
data16
xchg
fdivs
idivb
loop
or
inc
lea
ret
lahf
cmpsb
push
out
mov
jmp
mov
adc
xor
nop
cmp
aad
dec
pushf
xchg
and
data16
add
add
jbe
pushf
nop
or
add
add
fidivl
xor
add
adc
push
rcll
mov
inc
cmp
imul
or
shll
cmp
add
pop
push
sbb
insl
sarb
push
add
and
add
divl
ja
mov
rcrb
add
add
lods
addb
jl
push
cmpsb
std
sub
add
add
add
add
imull
jecxz
mov
adc
aam
adc
jle
add
add
jbe
mov
inc
ret
adc
jl
fs
and
popf
lret
call
inc
leave
jle
ljmp
xchg
ds
mov
add
sahf
fimuls
inc
jl
mov
mov
nop
or
add
add
xchg
adc
leave
rcr
sbb
test
add
add
sub
rsqrtps
sbb
add
add
add
pop
inc
mov
into
pop
ret
pop
in
jns
inc
add
add
push
cld
dec
mov
push
adc
pushf
insl
jnp
shlb
push
and
sbb
dec
inc
xor
loop,pn
test
inc
mov
jnp
xor
inc
mov
inc
sub
add
add
add
outsl
insl
and
mov
mov
enter
add
add
shlb
cmp
mov
ret
dec
movsl
dec
dec
cmc
test
mov
inc
or
insb
mov
mov
add
and
out
add
aas
aaa
mov
xor
fwait
pop
stc
sbb
flds
out
shrl
add
add
inc
push
popf
bound
mov
int3
push
loopne
pop
arpl
xlat
pop
mov
and
fdivr
data16
and
hlt
test
pop
inc
push
cmpl
xchg
and
mov
lods
push
push
xchg
pop
add
or
fnstenv
mov
pop
lret
ffreep
sbb
lea
stos
mov
in
out
pop
lret
mov
fucomip
cmp
adc
add
add
add
add
aam
lcall
push
or
outsl
jnp
push
lods
and
ljmp
add
push
add
idivb
add
test
cmpsl
jae
and
push
les
jecxz
xor
jmp
add
add
cltd
and
add
add
add
add
add
sbb
and
test
add
add
cmc
scas
aas
aas
jge
push
subl
xchg
inc
jbe
cli
cmpsl
mov
js
popf
xlat
add
sub
add
add
adc
or
aaa
dec
sbb
xlat
cmp
add
bound
add
in
popa
inc
scas
out
xchg
mov
mov
mov
push
mov
inc
add
add
inc
fdivp
mov
jmp
scas
inc
mov
adc
mov
add
add
add
push
in
imul
enter
push
xchg
sahf
scas
int3
sub
inc
adcl
lds
add
stc
inc
add
add
rcll
add
add
or
add
add
and
mov
out
inc
inc
add
add
pop
or
gs
mov
adc
mov
call
xlat
inc
sbb
sub
mov
add
add
in
fists
popf
xor
into
daa
fsubp
idivl
jae
nop
lret
dec
or
push
and
add
jp
mov
mov
add
stc
into
add
add
add
sub
mov
pop
mov
push
insl
mov
ffree
gs
pop
xchg
and
add
add
test
jmp
andl
push
out
mov
test
add
mov
je
ds
ret
dec
add
add
ja
add
add
cmpb
loop
daa
gs
xchg
sub
shlb
popa
sahf
cwtl
fcoms
mov
or
addb
add
push
jmp
add
add
cmp
and
and
hlt
sbb
sbb
xchg
and
add
mov
lods
iret
jg
or
adc
pop
lcall
jb
jne
push
out
or
add
add
cld
lahf
mov
push
les
mov
adc
cmp
jp
adc
add
add
addb
ss
stc
fsts
sar
incl
adc
jge
sbb
dec
sbb
add
add
sub
popf
push
in
je
cmp
int3
outsb
int
pushf
xor
scas
xchg
test
adc
test
jnp
sbbb
add
or
push
bound
add
shl
adc
sahf
push
xor
gs
lcall
push
dec
mov
aaa
pusha
mov
mov
mov
xchg
mov
add
adc
jge
pop
mov
aaa
in
adcl
inc
ret
call
or
int3
cs
or
int
mov
addr16
add
idivb
pop
lret
add
add
mov
shll
in
idivl
push
lods
pop
jns
cmp
int
mov
xchg
imulb
mov
adcb
std
movsb
les
pop
cmp
lahf
cmp
lea
xchg
faddl
inc
cwtl
jge
mov
leave
clc
jecxz
dec
cwtl
sub
adc
add
add
xor
fbstp
add
pop
mov
lea
pop
and
cmp
add
jae
lds
dec
adc
and
add
add
icebp
add
jne
pop
lock
add
add
add
cltd
out
repz
sbb
jg
dec
mov
mov
mov
mov
std
cltd
mov
pop
xchg
gs
xor
fldl
adcl
out
jno
mov
adc
mov
mov
inc
add
add
ret
je
lret
rorl
add
cmpsb
pop
jmp
sti
outsl
outsb
cmp
movsb
mov
in
xor
out
and
in
cmpsb
xor
add
sbb
shll
xchg
mov
push
out
lds
push
cwtl
shll
cmp
sbbb
frstor
xor
add
add
add
adc
adc
add
sahf
xchg
iret
inc
repz
cmp
or
mov
lret
mov
add
cmp
mov
dec
std
sbb
cs
push
aaa
pop
or
sbb
pop
aam
imul
sub
and
add
add
add
lret
add
add
dec
insb
mov
sub
cmp
xchg
stos
xchg
fcoml
or
mov
pusha
add
add
inc
add
add
xchg
add
pop
int
push
xchg
insl
sbb
xchg
jle
xchg
dec
push
out
adc
mov
inc
les
out
push
xor
arpl
push
or
mov
loopne
dec
aas
jno
pop
mov
and
loopne
stos
lret
aaa
mov
push
ljmp
add
mov
pusha
add
add
aaa
std
add
cmp
pop
dec
dec
shr
fcmovnbe
mov
jg
aad
mov
mov
mov
mov
push
lods
subb
add
jnp
rcrl
xor
sbb
mov
mov
xchg
bound
iret
lods
and
add
adc
xchg
sahf
ficomps
pop
sti
int3
arpl
out
pop
loopne
popf
jmp
xchg
cmp
scas
xchg
cli
shll
add
loope
inc
adcb
pop
sbb
mov
mov
jmp
jns
in
shlb
cld
sahf
notl
xor
xor
jo
mov
mov
stos
pop
mov
add
inc
add
cmp
adc
push
scas
or
mov
fidivrs
inc
mov
sti
inc
jno
ja
xor
and
scas
pushf
pop
inc
push
add
add
mov
fsub
sub
cmpsb
rcr
pop
scas
cmp
xchg
push
xchg
in
mov
mov
mov
mull
add
inc
call
sbb
pop
mov
jns
mov
mov
push
mov
test
lods
icebp
cmp
add
fucomip
stos
mov
add
add
add
popf
imul
add
sbb
scas
test
lea
ret
push
dec
add
add
xchg
push
xchg
mov
cmp
add
add
add
lea
add
jl
inc
out
push
aaa
out
ss
lahf
aad
fwait
mov
push
fucom
in
mov
andb
mov
stos
out
testb
add
xlat
lods
adc
xchg
mov
ret
push
xchg
xor
jmp
lds
pop
test
xchg
sbb
xor
inc
jg
add
add
into
add
adcb
add
add
pop
nop
pop
pushf
mov
cmp
pop
mov
xor
add
daa
mov
cltd
out
mov
stos
ss
in
jo
inc
hlt
mov
xchg
out
fldt
stos
movsb
dec
add
add
pop
lcall
insb
mov
sub
enter
sub
add
add
add
add
out
xorb
xchg
aaa
add
rolb
dec
adc
fidivl
cmp
push
scas
mov
out
jle
cmp
add
mov
shl
dec
mov
cmp
add
add
shll
sbb
stc
inc
jmp
jl
pop
stc
test
and
add
add
ds
pop
rep
and
push
stos
shl
stc
das
jnp
mov
loop
mov
test
xorb
add
paddw
rorl
add
in
xchg
xchg
jne
push
mov
jae
je
push
or
or
rorb
add
test
test
cmp
add
add
add
mov
scas
outsb
daa
es
mov
insb
mov
mov
add
add
rcrl
mov
out
mov
movsb
adc
outsb
dec
add
add
xchg
cmp
call
scas
arpl
sbb
add
xor
mov
xchg
sub
test
add
ficoms
inc
add
add
mov
ss
inc
mov
jae
jno
and
test
adc
add
add
mov
loopne
jo
push
and
lods
rcl
mul
xchg
cmc
pop
add
mov
xchg
cmpsb
jp
stc
mov
ds
add
sub
add
add
shrl
pop
sbb
ds
stos
ljmp
lret
setae
scas
add
add
add
add
mov
mov
icebp
add
cmpsb
sti
roll
lock
jns
xchg
jbe
jp
push
loope
add
add
es
arpl
stc
fildll
add
add
sti
je
jle
js
hlt
addl
lods
sbb
stos
add
sub
adc
loop
imul
mov
shl
mov
sbb
insb
add
add
imul
jp
arpl
stc
push
pop
push
inc
mov
repz
mov
mov
inc
orl
add
fmulp
in
fnsave
addr16
xchg
dec
inc
add
add
scas
test
movsl
aad
insb
add
add
sbb
call
add
jmp
jne
ret
xlat
ja
call
xchg
mov
insl
popf
sahf
je
mov
dec
add
add
aam
mov
rolb
pop
jb
jle
lea
pop
loopne
sub
popa
movsb
in
pop
cmpsb
push
mov
add
popf
dec
mov
jo
inc
sub
add
add
mov
ds
js
add
add
out
add
add
pop
add
aad
add
lods
cmovbe
add
je
mov
fcompl
or
mov
cli
xchg
lea
add
sub
jg
cmp
push
js
mov
cmp
add
add
push
pop
dec
add
add
sub
inc
and
out
lods
jne
shr
mov
adc
sbb
out
xchg
jl
loopne
push
mov
cmp
shlb
pop
lcall
sbb
fsub
lods
mov
fs
push
das
adc
enter
mov
ds
jae
jae
pop
lods
bswap
push
push
or
icebp
jmp
mov
jb
rcl
pop
loop
adcb
mov
or
add
nop
and
add
add
fdecstp
ljmp
pop
push
in
pop
sub
mov
shlb
mov
pop
lods
mov
insl
cli
jnp
lret
out
scas
xchg
lea
add
add
mov
sbb
insl
pop
mov
cmpsl
or
cltd
cli
or
xlat
movsb
dec
icebp
loopne
ret
jbe
rcrb
dec
in
aad
inc
mov
xchg
mov
mov
test
je
adc
movsl
aam
pop
dec
push
pushf
lret
ja
or
hlt
mov
mov
pop
test
or
jmp
cmp
hlt
add
add
add
test
add
xor
xchg
sbb
pop
pop
popf
push
ret
testb
jl
shr
popa
pop
sbb
push
and
inc
inc
es
jne
sub
sbb
and
add
popf
jmp
out
sti
daa
and
add
sub
pop
es
das
lcall
pushf
xor
add
pop
cmp
add
pop
pop
lret
add
add
and
test
xor
in
test
xchg
jo
jle
push
sub
into
dec
jo
inc
nop
sbb
inc
mov
in
inc
add
add
enter
add
adc
add
scas
or
cld
lods
in
rol
jne
cmp
mov
pop
push
push
add
xchg
hlt
xlat
sbbl
adc
ja
mov
mov
lds
lret
inc
add
add
mov
fistpl
imul
jle
sbb
pop
ds
push
or
add
add
repz
sbb
mov
xchg
pop
dec
mov
dec
mov
pop
pop
pop
imul
mov
xchg
cmp
add
add
add
push
repz
pop
cmp
or
add
add
test
add
add
inc
mov
inc
push
jecxz
pop
push
shll
push
ret
mov
sbb
data16
sub
and
jmp
shl
mov
add
fs
stc
sub
add
add
add
out
fdiv
iret
pop
shll
fnstcw
int
pushf
xchg
mov
cmp
add
add
jae
stos
sahf
mov
pop
sbb
jmp
rep
lds
add
cld
or
add
add
mov
mov
dec
cltd
xchg
imul
dec
lock
dec
add
add
lods
jo
xchg
xchg
pop
pop
psubd
cmpsl
push
adc
inc
jp
inc
push
lret
and
dec
pusha
mov
add
add
xlat
fldl
add
add
add
bound
push
lods
or
fidivs
xchg
outsl
bound
mov
nop
lods
fstpt
jnp
rclb
jmp
add
add
pop
add
add
jns
sbb
mov
aas
and
xchg
insl
dec
mov
adc
add
add
add
add
xlat
or
into
scas
xchg
pop
nop
sbb
outsb
or
subb
add
add
xchg
push
inc
push
fcoms
cmp
or
mov
inc
fmulp
bound
add
sbb
and
add
add
add
add
add
arpl
fidivl
shl
repnz
ret
inc
cld
fs
push
dec
cld
mov
adc
add
jmp
jb
ret
mov
dec
mov
xlat
icebp
adc
lock
test
jb
int
cmp
sbb
jno
leave
dec
dec
mov
lret
cwtl
mov
hlt
add
jl
or
add
add
mov
mov
cmpl
xor
mov
fcmovb
fwait
mov
pop
sbb
push
fdivs
mov
clc
ret
lahf
push
test
mov
add
les
pop
adc
cmp
mov
xchg
mov
ss
add
fcmovb
cli
jg
add
jecxz
ficoml
imul
jns
inc
pop
fnstsw
cmpsb
sub
add
add
in
xchg
aad
cmp
xchg
pop
add
add
add
pushf
les
add
add
mov
ret
subl
add
test
addr16
push
in
popa
adc
aas
lods
test
mov
adc
mov
push
sub
jb
int3
pop
lods
lods
jp
in
mov
inc
ret
dec
icebp
mov
fsts
leave
xor
loop
mov
add
add
jmp
add
add
adc
mov
mov
xchg
sub
add
add
add
add
jno
mov
out
jno
daa
sbb
sbb
cmp
lret
inc
sub
inc
add
add
dec
cli
or
xor
xchg
add
lret
aad
mov
sbb
mov
dec
cmp
icebp
or
dec
jnp
mov
int3
out
and
fisttpl
enter
inc
mov
jecxz
mov
notl
jl
cs
addr16
test
mov
add
int3
inc
outsb
mov
jnp
insl
ficoms
cmpsb
scas
imul
sub
cltd
pop
push
test
testb
dec
mov
xchg
and
add
add
mov
add
add
test
pushf
xlat
mov
mov
mov
cmp
rcrb
mov
mov
add
add
add
aad
add
add
add
add
leave
adc
ret
js
in
mov
push
add
add
add
and
add
psraw
mov
lcall
adcl
mov
add
and
mov
add
add
cmp
add
lret
aam
aaa
cld
popa
inc
add
add
nop
adc
insb
mov
jp
push
shll
add
add
andb
add
sbb
mov
add
and
add
add
push
or
clc
inc
ljmp
sub
add
add
in
aam
mov
aam
push
mov
jno
outsl
sti
xchg
xlat
push
es
mov
mov
adc
jnp,pn
or
add
add
xchg
leave
cmp
ficoml
adc
add
add
xlat
aad
je
add
add
test
inc
stos
out
loopne
mov
lds
test
inc
inc
sbb
add
add
adc
sub
test
call
xor
add
add
ret
sub
gs
xor
mov
mov
xor
mov
push
scas
cs
dec
push
adc
add
add
adc
ds
arpl
add
mov
sti
jl
add
add
imul
call
add
outsb
negb
mov
mov
testb
add
jp
outsb
loop
jmp
lock
scas
test
or
cmp
jl
clc
mov
xchg
std
cwtl
dec
lds
mov
in
dec
es
and
add
add
insb
mov
xor
mov
jnp
js
mov
push
cs
add
add
push
jae
and
add
cld
mov
sub
cmc
xchg
sbb
pusha
add
add
push
bound
daa
push
imul
xchg
mov
add
add
loopne
mov
mov
je
lahf
add
hlt
xor
jno
testb
sar
mov
cmpsl
inc
mov
aam
orb
add
add
add
das
mov
add
add
add
add
inc
push
cmp
add
add
add
add
mov
daa
or
mov
xchg
lods
sub
add
add
add
pop
aad
in
aam
and
mov
adc
lds
lahf
imul
fadd
xor
inc
add
push
jmp
fadds
mov
xor
in
mov
and
fsub
mov
cmpsb
lock
aas
pop
shlb
mov
mov
dec
sbb
push
dec
gs
and
movsl
pop
movsb
and
add
ficomps
pop
push
test
ja
mov
clc
mov
xchg
hlt
popa
sub
ss
and
add
add
add
add
nop
or
fwait
movsb
cmpsb
inc
dec
mov
pop
jo
add
ret
sub
add
xchg
shlb
push
pop
dec
andb
push
aam
add
add
sbb
adc
imul
or
add
add
sub
out
dec
mov
cmp
fwait
insl
jne
scas
adcl
add
sub
inc
mov
pushf
dec
mov
add
add
cld
push
mov
jmp
jns
adc
inc
mov
shlb
jnp
xor
cmp
add
inc
andb
loope
and
add
add
repz
inc
cld
std
push
inc
mov
pop
cmp
mov
inc
mov
out
addb
mov
leave
test
test
adc
jg
add
add
clc
cmp
popa
loop
mov
xchg
scas
xor
add
mov
ja
mov
fistpll
add
pop
pop
xchg
mov
ret
ljmp
pop
mov
inc
insb
add
add
jecxz
inc
add
add
add
hlt
jmp
das
sti
fisubrl
cmp
shlb
push
enter
mov
xchg
das
loope
sahf
gs
xor
mov
sbb
cmp
or
add
add
jns
and
sbb
mov
shrb
ret
imul
ds
ja
jb
cmp
mov
add
std
mov
clc
fbld
out
bnd
jns
adc
add
add
stos
gs
dec
add
loopne
movsb
or
add
add
ljmp
xchg
and
mov
loopne
fistl
cmpb
mov
imul
lret
cltd
fidivs
cmp
out
mov
sbb
add
add
add
add
inc
mull
lahf
lcall
add
add
sbb
out
sbb
outsl
std
mov
mov
push
call
sub
add
ljmp
scas
push
push
das
nop
pop
and
dec
cmpsl
mov
stos
adc
mov
out
inc
add
add
cli
sbb
addr16
push
sbb
mov
fistpll
sub
jecxz
mov
xor
movsb
movsb
mov
mov
mov
push
push
daa
and
add
add
stos
pop
push
movd
mov
lods
or
lock
inc
daa
push
mov
dec
mov
mov
sub
add
add
push
in
sti
mov
add
add
orb
jge
cmp
or
add
add
add
sub
jo
mov
imul
test
adc
jmp
out
push
das
xorl
int
ret
ljmp
addr16
cmp
dec
inc
push
xor
std
xchg
ljmp
test
and
or
jg
mov
mov
sti
in
or
xor
mov
add
add
add
cmp
pushf
jl
pop
sarl
xchg
jp
inc
mov
add
add
mov
and
add
mov
fistpl
sbb
cmp
lods
sub
or
add
add
cli
mov
xlat
add
dec
ljmp
push
pop
push
mov
pusha
mov
push
mov
xchg
mov
les
mov
arpl
adc
popf
push
aaa
je
sub
add
add
add
add
sbb
add
jmp
sbb
insl
aaa
and
add
add
roll
push
mov
imulb
add
push
je
pop
fisubrl
add
add
iret
push
pop
jle
add
add
insl
jl
xor
push
dec
rol
fldenv
sbb
arpl
lds
stos
and
jmp
jmp
mov
out
or
mov
ljmp
mov
add
add
int
jmp
fptan
sub
cmp
add
add
add
push
inc
mov
int3
cmc
xchg
xchg
mov
nop
push
shlb
test
jbe
ficoml
movsb
lods
test
idivl
jle
loopne
pushf
testb
and
mov
fcoms
sbb
mov
push
jl
add
cmp
push
mov
or
or
add
add
repnz
out
scas
dec
orl
cmc
or
add
add
or
xchg
xlat
or
aam
mov
repz
pop
in
jmp
adc
push
sub
in
add
add
add
pop
jne
mov
aaa
push
push
xor
jb
cmp
jb
fwait
popf
push
int
bound
jle
lds
xor
sub
add
add
bound
mov
movsb
popl
sbb
add
push
filds
add
shlb
sub
xchg
mov
add
mov
cmc
pushf
fdivs
add
daa
imul
mov
stos
jle
int3
cltd
cltd
enter
pop
jecxz
pop
xchg
cmpsl
mov
mov
add
add
add
stos
cmpsl
push
jp
scas
lret
jns
push
push
push
adc
popa
sub
dec
mov
cmp
adc
dec
mov
out
push
scas
arpl
push
stos
push
lea
and
dec
jg
sub
dec
mov
notb
add
sub
dec
js
sub
add
add
add
dec
dec
cmovno
add
adc
movsl
mov
jbe
rcl
cmp
ds
sti
inc
push
into
rcrl
ret
shl
add
sbb
adc
mov
jmp
add
add
inc
lods
xor
mov
jb
adc
dec
lahf
push
iret
ret
jle
xor
out
and
shlb
pop
xor
add
add
adc
imul
in
ret
mov
mov
add
clc
lcall
xchg
std
lods
mov
add
add
outsb
shr
stos
cmp
cmp
test
mov
js
mov
lcall
shll
and
jne
jns
xor
fstp
pushf
inc
and
add
xor
shl
cwtl
std
cmp
mov
add
pop
sub
add
add
jo
mov
add
add
add
add
stos
xchg
inc
sbb
out
js
jae
jl
inc
xchg
in
and
sti
loope
stos
lret
add
add
or
mov
pop
arpl
icebp
sbb
cwtl
pop
hlt
add
add
adc
insl
arpl
fcomps
loope
data16
mov
add
mov
outsb
std
imul
gs
add
add
out
pop
pop
popf
adc
ss
scas
cmp
mov
xchg
mov
testl
pop
cmp
dec
add
add
in
outsb
icebp
pop
or
add
add
xchg
mov
jbe
or
sub
int3
mov
add
add
add
add
inc
pusha
add
add
sbb
outsl
push
scas
fwait
out
add
add
and
add
add
mov
xchg
push
loope
add
add
scas
or
adcb
lods
les
mov
mov
cmp
sahf
je
sarb
outsl
addb
sti
loop
dec
nop
pop
fcoms
xorb
jae
jbe
clc
push
push
add
jle
fdivr
sub
nop
xchg
fcmovbe
pop
mov
testl
pusha
add
add
in
mov
dec
int
loopne
scas
je
cmp
push
inc
inc
clc
test
add
add
jnp
sbb
pop
pop
xor
add
popa
pop
in
mov
in
imul
mov
add
add
or
sbb
jnp
into
sarl
loopne
mov
loope
outsl
inc
divl
data16
enter
sub
add
add
clc
xor
nop
arpl
mulb
add
dec
aam
xorl
add
scas
bound
rcll
mov
lds
add
loopne
jno
fs
xor
sub
xchg
mov
mov
mov
mov
cs
push
pop
adc
dec
adc
add
adcb
mov
adc
add
add
pop
and
sarl
loopne
lret
jp
in
gs
or
add
add
cld
enter
dec
ret
les
dec
in
cmp
arpl
sar
dec
addr16
jge
scas
movsl
mov
ja
add
jp
or
mov
arpl
mov
aad
sahf
xlat
pop
mov
mov
mov
rolb
mov
int3
push
pop
int
sub
jmp
aad
and
out
inc
enter
mov
ret
mov
test
sub
dec
scas
add
outsb
leave
hlt
stos
xchg
fisttpl
add
add
fxch
mov
add
add
mov
lcall
add
sti
bnd
cmpb
jbe
xchg
pop
movsl
jl
and
add
xchg
dec
sti
bnd
aad
pop
mov
mov
aad
sahf
jle
push
pop
inc
cmp
inc
push
or
add
add
xchg
popf
bndldx
iret
mov
test
nop
jle
mov
ret
jns
out
xorb
jp
mov
lret
in
mov
mov
add
ljmp
pop
aas
dec
mov
test
ss
push
enter
pop
dec
data16
inc
out
push
push
jle
and
pop
sbb
hlt
sbb
popl
mov
jp
imul
popa
or
add
add
push
scas
dec
rolb
inc
cmc
in
popf
mov
ficoml
add
je
add
add
add
dec
les
push
jno
fwait
push
pop
cmp
add
add
xchg
movsb
fwait
mov
in
cmp
add
add
xor
add
add
add
or
add
add
mov
jne
stc
lock
ret
adc
adcl
or
lcall
sbb
sahf
or
mov
fcoml
shrl
push
xor
imul
add
pop
aam
cmpsb
daa
adc
popf
and
add
add
mov
scas
les
adc
pop
sbb
pop
das
or
add
add
call
add
leave
movsl
pop
push
pusha
mov
fwait
test
cmp
pop
add
hlt
mov
fisubs
pushf
sar
pop
mov
sub
mov
lock
fidivrl
xor
in
clc
xor
push
mov
cli
jbe
dec
mov
mov
lcall
add
add
in
add
add
add
jo
xchg
pop
aaa
push
cmp
sbb
adc
sbb
xor
mov
stc
pop
xchg
mov
mov
dec
stc
xlat
repz
push
lock
mov
mov
mov
push
bnd
jnp
push
adc
add
jl
sti
mov
ret
jle
fistl
push
jb
sbb
and
add
add
xchg
out
mov
jecxz
adc
mov
jge
fsts
inc
push
mov
iret
pop
or
push
dec
xor
add
xchg
icebp
std
jno
out
aad
or
add
add
mov
mov
jno
sar
imul
xor
and
inc
push
pop
or
les
jge
jo
mov
add
add
mov
jmp
and
stos
xor
aam
cmp
ficoml
push
push
fcomps
inc
cli
cli
inc
and
push
roll
add
fiaddl
cwtl
out
mov
and
lea
pop
cmp
in
sub
add
add
outsl
push
pop
into
mov
mov
mov
add
fsubl
add
add
add
jle
xor
lret
sbb
add
mov
add
jg
add
add
push
pop
scas
push
cld
cmpsb
sub
sbb
cltd
sub
lods
popa
aad
mov
aas
mov
inc
mov
mov
add
add
pop
mov
xchg
or
add
xchg
push
imul
inc
jns
lods
stos
jb
push
adc
imul
nop
xchg
mov
hlt
shll
ret
adc
push
push
dec
mov
das
jg
lret
push
clc
push
jl
repz
lcall
xor
jmp
jne
scas
rorl
add
add
imul
int3
sub
xor
add
add
rorb
add
add
dec
mov
adc
add
add
adc
leave
imul
add
sbb
sub
dec
insb
add
add
dec
mov
jle
paddw
xchg
jecxz
jmp
inc
xchg
cmpsl
outsb
jle
inc
and
dec
insl
lahf
insl
push
orl
cwtl
js
xor
lret
imul
add
add
add
mov
mov
add
add
mov
cli
adc
mov
shrb
add
add
add
pop
test
ss
push
and
in
or
pop
test
fadd
sbb
insb
mov
mov
cmp
xchg
and
gs
pop
aas
fidivrl
mov
int
pop
sar
mov
lahf
call
subb
pop
int3
stos
ret
adc
add
jmp
pusha
add
add
int
push
test
int
out
xor
mov
orb
jge
imul
add
cmpsb
push
push
mov
subl
imul
bound
adc
aam
ret
add
add
loop
pushf
cmpsl
inc
in
push
add
push
int3
imul
adc
jmp
aad
xor
out
dec
movsl
inc
loope
sbb
cmp
rclb
lods
iret
xor
add
push
jnp
jp
mov
cmp
add
push
mov
cmpsl
loopne
push
xor
pusha
mov
cmpsl
loope
adc
cmp
js
mov
xor
ljmp
push
int
mov
addl
or
add
add
out
in
xor
in
stos
mov
xor
inc
pop
je
push
mov
sub
scas
push
lret
inc
fistpll
pop
fnstenv
aas
cltd
int3
sahf
int
mov
out
add
out
aas
sbb
add
add
add
mov
add
pusha
mov
inc
icebp
scas
pusha
mov
test
add
add
jp
aaa
insb
mov
and
pop
shll
aaa
std
dec
stos
sarl
pop
pop
loop
xor
stos
sub
jge
les
out
stos
fildll
addr16
add
add
sar
test
insl
inc
fnsave
jbe
call
sbb
ds
add
add
add
add
mov
movsl
xchg
cmc
cmpsl
scas
and
test
mov
loopne
loop
mov
add
fcmovnbe
ret
jle
cmpsb
xor
rorb
fwait
je
mov
xchg
mov
lcall
add
mov
jnp
loop
fsubl
pop
xor
mov
add
mov
leave
js
pop
mov
repnz
testb
add
jmp
outsl
gs
mov
mov
out
mov
add
mov
mov
push
xchg
pop
cmc
fwait
cmp
jo
jne
mov
ret
sbb
add
mov
jle
sub
subl
push
or
into
popf
cs
mov
sti
insl
movsl
paddb
repz
rcll
pop
xchg
sti
sti
out
mov
roll
jo
jb
adc
mov
sub
aam
in
in
push
insb
add
add
pop
and
sbb
and
add
add
add
repnz
fisubl
push
mov
aas
xlat
in
sbb
pop
bound
movsb
out
aaa
outsb
pushf
inc
mov
repnz
dec
ret
inc
rcll
cmp
call
add
add
enter
jge
pop
jns
out
daa
mov
jp
out
add
add
movsb
jg
push
inc
and
add
add
adc
cwtl
and
sbb
cmc
pop
loopne
lods
pop
stos
add
add
add
or
int3
push
xor
jns
sub
mov
sub
adc
mov
bound
out
sub
cmp
sbbl
cmp
inc
sti
pop
in
push
aad
pop
ret
inc
and
gs
lret
push
fisttpll
stos
je
fstl
leave
push
fdivr
mov
in
enter
cs
jecxz
push
loop
sbb
out
aas
and
lds
mov
cmp
add
add
loope
stos
inc
pusha
mov
push
mov
sbb
stc
sub
xchg
stc
jo
xlat
xor
push
sbb
cmp
sbb
add
jp
add
add
pop
mov
lcall
fisubl
mov
jae
dec
jnp
mov
jecxz
pop
adc
imul
jg
in
mov
out
ss
addb
add
push
mov
mov
add
movsl
jg
or
out
mov
mov
jns
jb
call
in
shlb
fcoms
test
pop
mov
mov
xchg
adc
add
jp
xchg
sbb
mov
mov
add
dec
mov
lods
xor
rorl
push
pop
out
push
sbb
fcomp
push
jecxz
xor
shlb
dec
fildl
xor
sub
add
add
mov
pop
push
ret
jns
sbb
int
cld
into
or
add
loop
dec
add
add
ss
cld
add
nop
outsl
jg
ret
leave
pop
ljmp
pop
push
ret
and
fwait
xchg
mov
shl
das
cwtl
mov
inc
add
add
pop
inc
add
add
cmp
sub
cwtl
cs
idivl
iret
xchg
iret
loope
dec
in
pop
jns
ss
mov
stos
pushf
and
lret
mov
movsl
jge
lcall
jns
mov
popf
push
jbe
xchg
xlat
out
movsl
jb
sbb
jb
dec
or
inc
add
add
and
dec
je
pop
cmpsb
xchg
int
and
add
rol
pop
adc
pop
xchg
nop
movsb
jae
pop
hlt
and
xchg
jmp
test
xor
or
lret
adc
ja
add
add
lret
dec
hlt
xchg
jmp
out
mov
int
mov
inc
xchg
rorl
add
add
dec
fnstenv
shrb
sub
add
add
mov
sub
int3
les
jecxz
fisubl
rorl
sarl
hlt
or
add
add
enter
out
repnz
in
clc
data16
jnp
aaa
mov
into
or
add
add
bound
das
adc
movsb
mov
cmp
mov
or
add
add
frstor
int3
pop
in
or
sbb
into
out
add
add
into
gs
in
jno
mov
jnp
dec
push
inc
jg
or
push
loope
cmp
stc
pop
mov
add
add
out
cmpsb
push
xor
cmpsb
cmp
xor
fimull
xor
arpl
mov
dec
or
add
add
jl
ret
inc
fcmovnb
push
lock
add
add
cmpsl
lods
in
fnstsw
add
add
mov
mov
cmp
mov
add
or
movsl
dec
iret
cltd
dec
lcall
push
test
push
mov
ret
out
jecxz
pop
push
cs
lahf
dec
mov
fistpll
jae
ret
not
es
pop
pop
outsl
cmp
xchg
shr
cmp
stos
cmp
sub
add
add
lcall
add
mov
push
adc
stos
gs
or
add
in
ljmp
push
stos
js
mov
shll
xchg
and
add
add
test
and
sub
add
add
inc
mov
mov
cmpsl
mov
add
xchg
dec
mov
notb
mov
or
add
add
push
mov
sbb
dec
xlat
add
add
add
push
and
add
pusha
add
add
aam
pop
mov
add
add
add
push
xchg
daa
lea
mov
jle
jb
add
leave
orl
push
xor
inc
pop
mov
addr16
cmp
xchg
cmpl
xor
add
inc
vmovd
add
les
dec
xchg
icebp
fimuls
lock
fcomi
outsb
and
cli
out
leave
fucom
mov
add
add
add
add
and
mov
pop
mov
cltd
jge
movsl
rorl
add
add
stos
sub
sbb
cltd
xchg
dec
enter
ss
test
inc
add
add
sub
aad
push
dec
dec
jo
enter
imul
in
pop
and
add
add
in
imul
xchg
iret
cmpsb
dec
loopne
jmp
inc
fidivrl
sub
add
or
add
add
add
xchg
and
cmp
adc
cwtl
jbe
ja
loope
inc
add
add
lcall
addb
repz
cs
push
insb
mov
mov
or
add
add
mov
add
add
sahf
xchg
push
sti
xchg
jno
hlt
push
mov
sbb
lods
loopne
and
mov
add
cmp
lock
add
add
add
xchg
ficomps
in
xchg
fadd
mov
les
fisubs
mov
aas
rol
and
add
add
and
pop
sub
or
mov
add
add
add
pop
pop
xor
adc
sahf
push
mov
pop
scas
fldenv
add
add
cltd
cmp
fwait
inc
jae
mov
pop
pop
xor
jne
jge
xor
lahf
bound
adc
je
push
and
add
add
add
das
or
add
add
test
scas
cmp
add
add
movsl
pop
les
loop
add
and
outsb
imul
mov
cmp
mov
imul
sahf
mov
mov
mov
add
xor
mov
fiaddl
add
add
inc
add
add
cmp
dec
fwait
add
lcall
aam
inc
mov
push
repnz
pop
lea
push
ljmp
cmc
rcr
and
add
add
pop
not
roll
bound
mov
cmc
cmpsb
jmp
insl
data16
xchg
add
neg
inc
add
add
addb
and
add
add
add
sub
sbb
adc
xchg
hlt
sti
cmpsb
fmull
or
add
add
xlat
cmp
sub
insl
jmp
mov
cmp
lret
jnp
mov
push
in
pop
ja
fdivr
jo
sbbl
les
add
or
push
in
dec
dec
jo
jno
out
push
add
in
add
test
mov
pop
imul
std
sub
shl
js
dec
rorl
ret
push
and
pop
pop
into
push
test
cmp
push
inc
fisubrs
lea
add
clc
mov
scas
adc
fnstsw
add
gs
mov
xchg
or
push
hlt
mov
aam
js
into
and
mov
pop
mov
dec
in
aam
mov
movsb
fisubrs
pop
dec
fiaddl
add
add
add
jmp
inc
lahf
pop
jnp
dec
popa
divl
add
loope
push
aas
in
sbb
or
ffreep
add
pop
roll
add
add
push
out
inc
mov
inc
pop
popf
mov
idiv
das
push
data16
sti
jno
or
aas
cld
sub
push
xchg
scas
inc
pop
testl
pop
pop
movsl
xor
orl
sbb
les
xchg
sub
shll
add
add
aas
mov
outsb
call
cli
pop
push
in
adc
mov
nop
xchg
frstor
sbb
pushf
sti
dec
sub
jnp
mov
outsl
nop
sub
add
add
add
or
add
add
dec
add
add
test
jns
adc
add
test
add
add
add
or
push
popa
es
rcrb
mov
and
sbb
xchg
call
push
hlt
out
test
cmpsb
aam
test
mov
mov
dec
les
dec
dec
cmp
xor
or
add
add
insb
mov
dec
sbb
arpl
add
push
xlat
or
mov
mov
rcrl
cld
inc
jo
je
cmp
jp
repz
mov
add
dec
inc
xchg
xchg
into
js
xchg
imul
cmpsb
and
in
std
mov
add
add
add
adcb
int
iret
push
mov
pop
push
popl
mul
mov
jne
mov
aam
jl
inc
mov
dec
inc
mov
push
xchg
les
mov
adc
out
mov
push
xchg
dec
xchg
inc
push
cs
pop
add
rorb
pop
cld
outsl
fldl
or
add
add
add
add
mov
das
and
addr16
inc
add
add
lahf
cli
mov
adc
in
test
mov
mov
mov
mov
pop
fwait
sub
add
add
ss
cmpsb
and
dec
sbb
mov
adc
loopne
add
add
cmp
push
test
or
sbb
mov
adc
pop
rolb
add
add
mov
add
rcr
push
movsb
int3
add
inc
outsl
lock
xchg
sbb
add
add
pusha
add
add
add
dec
pop
ja
sub
xchg
mov
ljmp
adc
shrl
bound
in
push
mov
add
mov
add
in
push
mov
mov
jns
popa
pop
aas
pop
pusha
mov
aad
mov
push
xor
mov
cmp
mov
ret
add
add
ja
loopne
out
add
add
add
in
mov
pop
jge
clc
xchg
movsl
xchg
nop
and
fnstenv
mov
add
add
add
int
pop
dec
push
pop
out
scas
aas
dec
add
add
cmpsb
or
add
pop
mov
aam
popl
add
arpl
jg
mov
add
sbb
add
scas
leave
cmp
dec
sbb
repnz
mov
repnz
add
add
adc
add
repnz
cld
dec
inc
imul
hlt
jnp
push
icebp
out
xor
add
lods
lds
cmp
mov
xchg
mov
mov
sbb
add
add
adc
add
add
in
in
add
push
jnp
call
add
lahf
lret
add
add
loope
push
sub
push
int
pop
subb
cld
loope
cmpsl
stos
insb
mov
adc
out
imul
and
add
add
imul
add
inc
push
sbb
dec
sti
sbb
add
mov
xlat
out
add
add
mov
add
adc
adc
add
add
lcall
jg
xchg
inc
lret
icebp
push
fsub
test
add
add
mov
add
add
mov
arpl
push
mov
xor
push
or
insl
rorb
or
jbe
mov
push
lahf
mov
pop
aaa
es
cmpl
icebp
push
scas
adc
push
add
lcall
sub
insl
and
add
add
dec
fucomi
lods
mov
das
sbb
js
adc
add
test
xchg
pusha
mov
xor
pop
test
xor
sbb
mov
add
add
loope
jl
sub
push
das
sahf
pop
pushf
rcrb
je
cmp
mov
add
add
mov
stc
stos
les
xor
add
pop
iret
lret
aam
je
mov
adc
mov
add
add
mov
add
add
call
inc
mov
insb
add
add
out
xchg
aaa
pusha
add
add
outsl
sub
out
or
add
add
scas
mov
pop
xor
ds
loopne
xor
cmc
dec
sbb
ds
add
out
insb
mov
adc
push
scas
pop
sub
add
add
cmpsl
call
out
xchg
popf
jg
loopne
insb
mov
xchg
addb
imul
jmp
push
ss
fstl
outsl
rorb
jmp
add
fisttpl
mov
add
add
push
xchg
aas
int3
pop
add
lods
cmp
jb
insb
mov
fistps
daa
push
inc
jle
outsb
iret
xor
and
add
add
push
push
data16
jnp
iret
js
leave
vpminub
test
sub
lds
ja
and
shrb
add
push
add
adc
int
jbe
sbb
dec
mov
add
add
cli
jne
xor
lahf
xor
sbb
mov
xor
adc
jmp
ds
fdivrl
jae
cmp
fisttps
scas
mov
das
stos
loope
lahf
xlat
aad
cmp
add
add
add
loop
ss
stos
loop
out
push
and
add
add
jle
push
xchg
rcr
cwtl
jmp
pop
mov
clc
js
lods
lea
add
add
mov
add
mov
shrb
mov
fdivl
leave
cs
mov
add
add
add
add
add
fdivrs
sub
fiadds
aam
cmc
bound
push
sti
in
push
out
or
add
add
fists
xchg
clc
imul
sub
add
add
mov
inc
xor
jmp
add
push
into
mov
imul
and
push
adc
mov
add
add
jne
jg
into
adc
add
add
add
xlat
mov
adc
pushf
cmp
and
xchg
loopne
add
add
sbb
flds
xor
push
aas
push
dec
sti
sub
add
add
idiv
sub
add
add
sub
add
rol
mov
sbb
push
dec
xchg
add
add
add
scas
and
fists
and
clc
push
sar
xchg
dec
shr
xor
popf
add
mov
push
movsl
inc
xchg
add
pop
lock
aam
mov
mov
mov
roll
jns
dec
dec
popa
add
movsb
mul
xchg
pop
int
bound
add
add
out
xor
or
add
add
xor
jmp
xlat
jae
jl
mov
add
and
add
add
mov
js
cwtl
pop
and
jne
iret
sbb
mov
sub
data16
ficompl
mov
or
sub
add
add
add
add
cmc
dec
sbb
sub
das
into
bound
adc
sub
jo
cld
lret
pop
inc
add
and
mov
xlat
mov
sub
add
add
add
inc
sbb
mov
sarb
mov
lret
pop
jl
pop
call
test
data16
ljmp
mov
fbstp
jbe
fistl
mov
int
xlat
mov
jg
addb
mov
lahf
sub
and
add
add
mov
add
add
jle
ljmp
adc
xchg
dec
mov
mov
mov
inc
mov
and
pop
lods
int
mov
pop
int3
ljmp
in
fisubrl
inc
jmp
mov
sub
xchg
sbb
mov
add
add
add
movb
call
mov
inc
add
add
cmp
sub
imul
add
jbe
stos
or
add
add
ds
insb
add
add
lret
inc
add
add
pop
call
add
add
mov
out
sub
add
add
lods
lock
test
push
out
call
mov
mov
jne
add
add
divb
cmc
call
cmp
mov
add
nop
lret
or
add
add
mov
mov
orl
fistpl
sub
sbb
sub
add
add
scas
push
outsl
xchg
add
add
ret
ss
pushf
xor
lahf
jo
aaa
push
pop
add
add
in
push
mov
or
cmpsb
or
add
add
adcl
adc
fs
rcr
cmc
addr16
jns
mov
xchg
mov
xor
mov
dec
jo
negb
in
sub
add
xor
add
add
mov
inc
pop
mov
int
push
push
xor
les
add
add
mov
hlt
pop
mov
lret
into
dec
mov
sti
push
div
rclb
dec
call
pop
incl
mov
inc
mov
add
lret
jo
jns
xor
add
add
jge
movsb
dec
mov
scas
cs
inc
mov
jmp
add
xor
fs
xchg
mov
add
push
out
insb
add
add
ss
pop
and
test
push
pop
testl
add
add
cwtl
adc
xlat
stos
out
in
cld
call
add
add
dec
pop
scas
aad
jnp
xorb
imul
add
insb
add
add
cmc
dec
cwtl
and
sbb
xchg
daa
push
push
mov
push
test
ds
fsubrs
lret
or
add
add
popf
jle
outsl
int
inc
xor
jnp
push
mov
jl
popa
ret
scas
repz
cld
cld
and
jno
stos
jns
cmp
add
mov
ss
movsl
push
dec
loop
add
add
add
popf
repnz
test
add
add
add
cli
mov
mov
pop
iret
lret
call
cmp
lods
push
movsb
lea
jo
mov
mov
add
add
ljmp
or
fcoms
cmp
push
jl
jle
adc
repnz
addr16
lock
dec
add
add
jbe
jecxz
clc
add
outsb
mov
icebp
lret
shrl
cmp
cwtl
xor
push
pop
mulb
cmpsb
xchg
mov
xor
inc
mov
test
add
ficoms
leave
test
icebp
dec
add
add
add
mov
je
mov
out
inc
je
data16
adc
push
pusha
add
add
adc
inc
mov
orb
xor
add
add
adc
adc
jns
push
sub
out
cmp
into
inc
js
sub
push
aam
push
add
add
mov
add
jl
and
or
xchg
into
mov
lods
cmp
jg
dec
fstpt
adcl
into
pusha
add
add
and
cmpsl
call
pop
insl
mov
push
popa
repnz
jb
jg
adc
lret
icebp
add
enter
lea
fxch
pushl
adc
and
add
add
ficompl
and
add
add
cmc
cmp
add
add
and
test
sub
add
add
add
add
mov
in
test
test
imul
fdivrp
pushf
xor
dec
std
shlb
dec
mov
repnz
mov
xor
jp
cmp
test
mov
cmp
addr16
sahf
sub
subl
add
add
mov
inc
adc
xchg
jo
cli
out
imul
xor
add
add
scas
push
les
icebp
sbb
inc
adc
inc
iret
shr
out
scas
idivl
sub
call
pop
clc
cmpl
sbb
push
lea
sbb
popf
jge
dec
mov
pop
scas
cmc
dec
repnz
inc
stos
loop
incl
test
out
iret
mov
cmp
pop
mov
xchg
mov
pop
pop
clc
sti
andl
sub
mov
add
and
add
add
add
mov
test
test
sti
pop
push
testb
jno
add
add
add
mov
inc
mov
and
add
add
ljmp
dec
add
add
mov
sarl
int3
push
gs
cld
insb
add
add
and
pop
sti
mov
enter
mov
push
xor
fidivrl
pop
iret
out
cmovno
sub
insb
mov
mov
adc
sti
fs
or
lret
mov
in
sbb
push
imul
dec
faddl
out
sbb
lea
mov
add
add
lea
cmc
jmp
xor
add
add
shlb
sbb
mov
add
add
and
sbb
add
add
cmpb
testb
loopne
adc
insl
sahf
inc
cs
xchg
cmp
jle
pop
in
dec
out
scas
shrb
add
add
and
add
add
insb
mov
mov
mov
lock
and
push
push
jo
inc
add
xchg
sub
push
cmp
mov
ja
push
and
xorl
jnp
xor
ret
xchg
lret
andl
add
add
divl
add
add
fnstenv
call
stc
and
lahf
ret
test
cmp
dec
enter
mov
popf
cwtl
xlat
pop
jg
mov
push
and
jno
stc
test
lods
xchg
jno
popf
adc
add
add
push
aaa
std
mov
jge
cmp
jae
add
add
pop
sub
add
add
or
negl
jp
mov
in
sub
adc
scas
aam
jae
aaa
cmp
add
or
add
add
fldenv
in
add
add
mov
cmpsb
add
push
mov
add
add
add
ljmp
pop
mov
fs
pop
jecxz
mov
stos
aam
dec
mov
sub
hlt
aad
pop
cmc
movsb
lret
push
adc
adc
in
lds
mov
add
add
add
xchg
jg
out
dec
popa
gs
movsl
test
add
add
mov
add
add
mov
jnp
mov
and
add
add
xor
mov
jle
pop
inc
jp
adc
push
cmp
mov
add
jge
fs
lds
xor
mov
les
xchg
cmp
dec
sub
push
cmp
dec
pop
dec
int
inc
mov
push
stos
ja
push
dec
inc
mov
pop
stos
or
jg
sbb
jmp
mov
lcall
mov
mov
add
add
pop
outsb
sar
push
push
xchg
sub
add
add
xor
add
add
add
add
add
mov
fisubrs
in
aad
pop
nop
addb
mov
push
adc
jle
bound
add
add
fistpll
xchg
dec
call
add
mov
fcoml
mov
sbb
shrl
mov
mov
xchg
inc
xchg
out
mov
xor
pop
or
add
lock
inc
adc
add
add
add
add
jae
or
aam
int
mov
mov
jp
stc
mov
arpl
sarl
push
mov
push
fdiv
xlat
mov
mov
lret
icebp
dec
mov
imul
xchg
lret
add
add
pop
inc
add
add
sub
add
add
xor
jg
mov
mov
iret
pop
jae
sub
add
add
xchg
in
popa
aas
sar
xor
mov
or
mov
push
dec
mov
mov
cmpsb
mov
fstp
aad
andb
add
add
cmpsl
jnp
ficomps
fbld
bt
scas
enter
or
add
add
outsb
sahf
loop
lahf
in
sbb
sbb
jp
popf
cmpsb
adc
pop
and
cld
psrad
sub
mov
ja
sub
push
xchg
add
jns
mov
mov
add
scas
xchg
aas
lods
jecxz
fldpi
mov
mov
mov
add
add
xchg
add
add
mov
hlt
mov
test
shl
jle
cmpsb
dec
pop
test
iret
out
lahf
stos
jbe
sbb
add
xor
xchg
lahf
push
xchg
clc
cli
xchg
mov
xor
xor
push
xchg
insb
add
add
std
pop
mov
pushf
loopne
dec
jo
push
and
pop
and
xchg
fiadds
pminsw
xor
add
pop
pushf
mov
add
std
sub
add
popa
mov
movsl
lret
sub
xor
nop
fbstp
loope
add
sbb
xor
cli
loope
ret
lock
sbb
add
pop
cmpsl
sbb
xlat
js
xor
xor
icebp
jp
cmc
sub
add
add
add
add
movsl
sub
sahf
int
cmp
or
hlt
repnz
push
ret
aad
fnstenv
insl
loope
test
daa
add
add
xchg
ret
rorl
push
hlt
sbb
pushf
dec
dec
jbe
outsb
and
test
mulb
jno
scas
jg
movsl
inc
or
scas
jns
jae
icebp
add
popa
cmp
jge
push
xor
inc
fiadds
add
add
sbb
in
add
add
adc
add
add
add
sbb
lods
bound
jecxz
cmp
insl
cmp
add
add
addr16
nop
add
imul
add
mov
jge
mov
mov
stos
jns
shlb
xchg
cmp
sbb
popf
pushf
movsl
inc
sub
add
add
rol
sbb
jp
lods
cmp
dec
hlt
inc
cmp
sbb
fmull
add
add
add
xor
aam
inc
mov
xchg
fidivrs
add
add
inc
or
add
add
add
or
cmp
cmpsb
cmpsb
lods
mov
pop
jnp
inc
jecxz
inc
insb
add
add
in
mov
aam
jae
stos
xor
jnp
dec
cmp
cltd
fidivl
nop
mov
xor
sub
add
add
pusha
mov
repz
imul
add
add
inc
daa
mov
fs
inc
mov
fnstcw
lock
add
add
movsl
rcll
add
add
jno
cmp
mov
inc
fistl
in
out
adc
add
add
push
mov
jp
xchg
cs
inc
mov
pop
loopne
shrb
enter
nop
faddp
frstor
xchg
mov
testb
push
les
pop
addr16
test
add
ss
add
idivl
mov
cs
and
cmpl
add
add
cwtl
push
jmp
adc
repz
jmp
stos
xor
fstps
lcall
mov
sub
add
add
xor
and
add
add
add
cltd
pop
repz
hlt
adc
push
clc
mov
add
add
mov
add
add
adc
add
add
or
sbb
test
rcrb
add
add
popf
leave
and
jecxz
stos
in
and
or
pop
adc
test
mov
ljmp
sbb
lock
inc
sub
add
add
das
push
loopne
imul
jbe
sbb
add
add
jb
pop
addl
mov
in
outsl
pusha
add
add
clc
jno
int3
loopne
js
loopne
dec
aaa
xchg
arpl
aad
sahf
sbb
xchg
push
sub
scas
jbe
sbb
mov
pop
xchg
movsb
int3
sbbl
call
fcomp
push
repnz
mov
test
movsl
cmp
rcll
aas
adc
add
add
dec
adc
pop
movsb
dec
and
xchg
mov
cld
out
mov
icebp
dec
insl
pop
movb
add
lods
icebp
call
push
in
sub
add
add
mov
adc
mov
mov
mov
push
inc
cmpsl
int3
sbb
int
xchg
or
push
xor
mov
cmp
stos
jmp
add
add
or
add
stos
dec
sub
add
add
add
add
inc
js
mov
outsl
std
sbb
xchg
fstps
mov
dec
add
add
mov
jle
add
add
out
hlt
add
pop
in
into
scas
inc
push
pop
dec
jmp
sahf
ret
inc
or
mov
mov
aam
ss
cltd
push
push
imul
xor
mov
mov
jo
inc
mov
cs
popf
xchg
mov
add
add
cmp
push
pop
sbb
fidivrl
add
add
movsl
stos
hlt
jmp
ret
mov
scas
movsl
mov
in
sbb
add
add
add
or
add
add
or
loopw
inc
cltd
sub
mov
fmull
add
and
pop
add
mov
add
dec
sub
push
mov
inc
ljmp
jo
iret
xchg
mov
inc
add
add
mov
mov
mov
add
cmp
out
or
ret
add
add
lock
shll
jecxz
add
add
ficoms
stos
cmp
mov
xchg
gs
dec
mov
adc
sti
popf
pop
lahf
icebp
dec
pop
dec
cmp
cli
cmc
xor
int3
incb
add
sub
push
js
cmp
pop
dec
add
add
es
rolb
imul
mov
cmp
xchg
sti
or
aad
or
out
aas
int
add
add
add
imul
insl
in
in
loop
cwtl
stc
adcl
add
in
mov
out
cltd
jnp
into
adc
add
in
sbb
ljmp
lret
daa
xchg
ja
sahf
inc
mov
mov
in
or
add
add
pop
mov
mov
push
cmp
add
add
rcrl
ss
and
mov
fwait
xchg
iret
daa
adc
fidivrs
and
dec
mov
jns
sub
test
push
cmc
cwtl
fwait
mov
loop
mov
mov
xchg
adc
je
mov
adc
ds
push
mov
into
lret
cmpsb
adc
inc
add
add
repz
out
push
rolb
mov
push
xchg
jns
xchg
ret
aas
and
add
add
jne
xchg
or
jo
dec
repnz
cmp
lret
mov
out
rorb
add
add
scas
cmpsl
fs
inc
int3
sbb
mov
loopne
sub
arpl
and
mov
sbbl
popl
shlb
add
mov
repz
mov
xchg
cld
xchg
jp
inc
push
aam
fdivr
daa
adc
pop
vmread
push
pop
mov
fs
cmp
jle
stc
outsl
cltd
jno
add
add
xchg
out
push
jmp
add
add
push
xchg
cmp
xor
adc
jne
pushf
pop
mov
mov
inc
mov
xor
out
push
lret
and
add
add
push
xor
pop
cmpsb
lods
test
inc
testl
xorb
roll
cli
add
jl
aas
aad
int
fidivl
xor
mov
mov
dec
divl
out
and
std
enter
add
add
push
fs
push
cli
nop
inc
data16
mov
add
rcrl
ljmp
sub
pop
sub
add
mov
add
or
fnstenv
add
add
shr
push
aam
addr16
add
add
push
fldcw
adc
mov
shll
dec
mov
jle
add
add
xchg
mov
push
add
add
addb
add
mov
jnp
fdivr
movsl
xchg
nop
sbb
mov
in
out
popw
nop
scas
lock
sbb
mov
nop
mov
xchg
adc
popa
inc
mov
add
add
div
push
add
add
add
add
mov
loope
or
pop
push
add
out
sbb
mov
std
mul
xchg
inc
or
lcall
cmpsb
push
lret
les
mov
loop
pop
pop
mov
ret
inc
stos
pop
decl
sub
test
inc
stos
mov
addr16
dec
mov
sbb
add
add
add
shlb
push
call
repz
leave
rorb
inc
jno
ljmp
movsb
mov
lcall
ret
loop
insl
lea
stos
sub
add
add
or
add
add
dec
mov
cwtl
push
inc
mov
in
push
js
sti
shl
mov
pop
sbb
add
add
pusha
add
add
ret
bound
xchg
or
aas
dec
jmp
rorl
add
add
arpl
aaa
mov
pop
mov
test
push
aaa
and
pop
push
xchg
xchg
inc
testb
test
add
add
sub
lds
push
cs
inc
add
add
es
call
fwait
cmp
add
add
dec
jecxz
or
cli
add
add
push
xor
lret
cmp
mov
xchg
xor
push
mov
iret
xorb
mov
bound
add
sub
add
add
push
cmp
xchg
and
push
leave
lods
test
out
int
aad
cwtl
int
out
adc
call
test
add
repnz
jle
ss
dec
mov
andl
sbbl
lea
mov
dec
fstl
stos
push
xlat
cmc
mov
pushf
adcl
dec
push
in
add
add
iret
jmp
dec
pop
stc
int
xchg
dec
add
add
in
rolb
add
add
adc
xchg
mov
rcrl
xchg
mov
push
mov
call
test
and
add
add
xchg
imul
cmp
pop
mov
cwtl
mov
add
add
adc
lahf
dec
mov
repz
call
sahf
push
add
fcom
pop
mov
pop
fs
je
out
inc
sbb
loope
repnz
mov
nop
bnd
loop
or
into
testl
lods
xor
out
pop
push
into
and
add
add
xchg
jbe
pop
pop
insl
roll
sbb
push
out
adc
pop
jno
inc
add
adc
adc
div
dec
js
mov
mov
add
add
pop
popf
scas
cmp
xchg
add
add
push
stos
cwtl
xchg
jb
xor
and
cmp
dec
push
divb
push
push
xchg
push
push
jl
xchg
jmp
sub
sub
sub
or
sti
ffree
sub
adc
stc
pushf
pop
outsl
xor
jb
ljmp
stos
push
popf
ficomps
mov
push
mov
add
in
shll
pop
insl
movsl
aam
push
leave
xchg
or
cmp
add
add
mov
xor
sub
and
clc
pop
xor
xlat
bound
rclb
mov
mov
in
pop
jg
sub
out
adc
add
add
add
add
add
jecxz
leave
cwtl
xchg
lahf
xor
ljmp
xor
add
push
fldenv
inc
jl
mov
jne
dec
push
lret
mov
add
add
pop
mov
gs
mov
add
sbb
mov
out
jne
or
repz
mov
mov
mov
in
mov
mov
add
add
test
nop
rorl
xor
andb
pop
faddl
pop
push
hlt
loope
daa
push
test
lods
sbb
pop
aad
clc
stos
cmp
inc
jmp
inc
mov
mov
push
sbbl
popa
jl
sub
mov
dec
or
mov
repnz
jnp
popf
arpl
mov
fimuls
rcll
std
insb
add
add
aam
test
lods
dec
add
add
and
in
xor
int
clc
movsl
jmp
in
out
add
lods
outsl
xchg
adc
add
add
inc
fs
mov
sti
in
fmul
popf
aad
adc
jle
cmpsl
insl
mov
push
jne
sbb
icebp
cld
jle
xchg
mov
jle
mov
add
add
hlt
lods
in
pop
into
outsl
inc
mov
add
add
shl
or
mov
dec
or
mov
jae
aad
mov
and
mov
pop
adc
sub
mov
mov
add
loopne
cld
xor
int3
push
pop
mov
imul
mov
mov
lcall
sub
call
add
add
jmp
loopne
arpl
xor
add
mov
cld
mov
inc
bsf
daa
jo
jbe
push
dec
lret
jno
jmp
fbld
mov
subl
mov
mov
add
cmc
int3
lea
rcrb
jl
sub
fidivs
cmp
add
pushf
cmp
add
add
xor
jge
sub
in
push
xchg
outsl
icebp
mov
scas
pop
in
aam
lods
sub
mov
ret
movsl
mov
int
xchg
cmc
push
xor
cmpsb
cbtw
sti
or
test
and
dec
ret
mov
in
cmp
add
add
jo
int3
mov
mov
add
push
cmp
sbb
aad
add
inc
pushf
lcall
cltd
push
xchg
pop
mov
cmp
mov
out
cwtl
test
lds
lds
in
sub
add
add
sub
add
add
dec
xchg
mov
fistl
mov
push
subl
bound
gs
mov
dec
add
add
pop
mov
mov
mov
add
add
test
add
arpl
aaa
push
mov
and
push
mov
loopne
dec
push
lds
mov
out
lahf
loop
mov
loopne
mov
movsl
and
add
mov
sbb
cmp
iret
loop
mov
push
push
arpl
fucomi
lahf
jl
lods
jbe
mov
loopne
add
add
sbb
add
test
xlat
fcomip
hlt
ljmp
cmpsb
int3
ret
mov
test
loopne
dec
das
out
fcomps
popa
push
fwait
inc
das
sbb
push
and
rclb
jmp
neg
pop
hlt
imul
pop
in
adc
sbb
push
test
mov
imul
dec
mov
inc
fimull
cltd
and
jb
loop
inc
mov
insb
mov
adcl
push
rep
ret
pop
mov
mov
mov
lock
std
xor
pop
shl
test
mov
xchg
stc
addr16
add
add
jo
pop
movsl
xlat
adc
sub
mov
mov
add
add
test
add
mov
mov
xor
push
ret
xlat
pop
cli
divl
mov
xlat
imul
add
mov
pop
xor
or
test
insb
mov
data16
cwtl
jo
mov
add
in
mov
push
jnp
or
mov
roll
pop
in
lret
repz
add
sarl
ret
add
add
add
mov
add
std
mov
push
cs
add
add
inc
add
js
or
popa
push
sarl
dec
add
add
insl
pop
push
imul
add
add
fucomip
mov
pop
push
pop
jg
stos
dec
mov
jbe
test
lds
add
ljmp
lds
add
add
mov
add
add
stos
cs
stc
lea
inc
imul
mov
add
add
lds
mov
mov
add
add
add
add
addr16
adc
lds
sub
in
lods
push
cmpl
cmp
and
fiadds
and
andb
jo,pt
mov
cld
fmuls
mov
push
xchg
or
aam
shlb
mov
add
mov
pop
jge
xorb
sbb
mov
add
add
js
mov
jno
int
mov
mov
adc
loop
add
add
push
in
lcall
add
push
ret
cmp
mov
aas
inc
push
add
push
and
data16
jmp
daa
stos
lret
pop
fs
leave
fistps
dec
leave
xchg
cmp
add
add
add
add
sub
incl
adc
aam
imul
jno
inc
add
add
shrl
push
xchg
sbb
xlat
xchg
mov
out
dec
mov
add
mov
xchg
xlat
out
xor
sbbl
jl
mov
loope
clc
dec
add
add
mov
pusha
mov
cld
push
mov
jg
sbb
call
pop
mov
mov
xor
or
add
add
out
mov
arpl
fsubrl
add
or
mov
imulb
xor
push
xchg
andnps
scas
jge
scas
ret
or
inc
add
add
mov
pop
popa
xorl
add
out
popf
cld
cld
es
mov
test
push
dec
mov
sub
sbb
mov
int
inc
jl
fxch
scas
cld
add
ret
shrl
ret
lret
pop
mov
add
add
aam
ja
subl
and
add
add
cmpsb
lcall
call
mov
add
add
out
lods
sbb
add
add
jle
mov
lcall
stos
push
jle
mov
mov
arpl
xchg
fidivs
push
ficoml
fst
js
aam
push
mov
and
fldl
add
add
push
push
jmp
add
add
in
add
add
scas
ret
cwtl
enter
movb
pop
cmpsl
push
scas
imul
push
xorb
loop
dec
cmp
hlt
jmp
jmp
jne
in
pop
lock
hlt
and
rcrl
push
xchg
out
lods
iret
in
lcall
add
movsl
loope
ficomps
add
add
push
dec
jno
leave
out
addr16
les
sti
sti
push
mov
mov
loop
xor
stos
bound
add
add
out
dec
mov
subl
add
add
enter
push
jge
das
gs
repz
imul
in
pop
out
push
lea
add
add
test
add
add
fsubr
ja
pop
mov
pop
sbb
sub
jle
push
mov
adc
sti
pop
mov
add
add
into
xlat
mov
divl
cmp
xor
add
jae
shll
mov
mov
les
std
fcmovnu
das
add
or
or
add
add
popa
lods
test
imul
dec
xchg
push
or
addr16
or
repz
outsl
jmp
pop
mov
add
add
add
add
add
and
test
jbe
fwait
nop
mov
inc
pop
ds
add
add
ror
xchg
gs
mov
sti
pop
ja
addr16
stc
and
shrb
ds
mov
in
in
divl
mov
and
add
add
add
cmpsl
jmp
loopne
pop
xlat
mov
jmp
mov
mov
xchg
ficomps
imul
js
mov
shlb
add
add
xor
insb
mov
gs
pop
icebp
inc
inc
xchg
push
leave
imul
jl
mov
insl
and
out
add
daa
in
dec
mov
push
aaa
push
inc
add
add
pop
popf
fnstsw
jbe
adc
add
leave
push
cmp
sub
imul
add
jmp
lret
in
icebp
in
outsb
xor
add
out
or
add
cli
test
lods
push
mov
imul
xor
testl
add
jb
jb
pop
imul
test
add
in
sub
add
add
mov
ret
and
add
in
dec
jecxz
fbld
clc
into
pusha
mov
or
add
add
push
imul
sahf
mov
lock
icebp
movsl
pop
out
jp
subl
add
add
add
add
jnp
add
or
int
cmp
inc
inc
jns
jae
pop
mov
fisubrl
lahf
loope
notl
inc
add
add
add
cmp
out
outsl
push
sbb
add
inc
inc
add
add
sti
or
add
add
jge
jns
lret
mov
mov
mov
add
mov
lods
cmpb
mov
int3
pop
out
ljmp
icebp
xchg
sti
cmpsb
sbb
frstor
jmp
lea
dec
mov
xor
or
add
add
jno
add
add
mov
cmp
add
add
pop
fidivrs
fists
jmp
mov
out
fdivs
enter
ja
mov
add
xchg
movsl
and
add
add
gs
sub
xor
in
repnz
subl
add
inc
add
add
imull
mov
repz
leave
icebp
lds
cwtl
popf
dec
add
add
cmp
insl
aam
es
mov
cli
inc
movsb
sahf
mov
sub
fcomi
adc
mov
push
insb
mov
test
loop
xchg
push
loope
ja
add
add
mov
add
add
add
add
aas
pusha
mov
mov
hlt
cmpsl
mov
xchg
xchg
add
add
mov
push
stos
bound
int
pop
cmpb
xor
add
add
and
add
add
push
jmp
mov
loopne
sub
add
add
movsb
dec
js
lods
sub
add
cmc
inc
enter
add
insl
or
js
ljmp
sub
lahf
in
movsb
ljmp
outsl
cs
ret
ljmp
xor
movsl
sti
repz
subb
dec
push
add
add
add
add
add
lret
insl
mov
pop
cs
in
or
add
add
add
add
addr16
lods
mov
xor
in
adc
jb
imul
lock
iret
cltd
dec
mov
lods
sub
sbb
mov
push
in
mov
xor
add
add
dec
inc
sub
add
add
jp
adc
sub
add
or
pop
roll
add
add
lods
cmpsl
push
scas
aad
popf
mov
add
add
inc
jne
jns
pop
fisubrs
pop
add
or
lret
jnp
fistps
jne
mov
ret
jo
test
lock
fs
out
out
mov
or
jns
sbb
iret
jne
xchg
insb
add
add
std
mov
sar
mov
repz
std
getsec
push
in
mov
mov
xor
leave
lea
pop
cmpsl
pop
jo
mov
in
clc
in
std
sbb
cmpsl
or
add
add
add
add
sub
and
mov
rorl
push
lret
loope
sbb
mov
mov
aaa
push
int
aad
decl
add
mov
std
mov
lret
pushf
or
add
add
pop
leave
xor
int
loop
push
mov
test
fisubs
in
insl
popa
inc
fiaddl
add
sbb
fcmove
pop
mov
dec
add
add
loopne
popf
enter
push
cmp
push
xchg
test
mov
aas
roll
aas
in
sbb
movsb
in
je
outsb
push
aam
int3
in
jmp
mov
ret
sbb
outsl
sbb
and
ja
jle
cmp
jl
and
pop
std
sti
mov
lods
std
push
inc
dec
mov
mov
mov
push
inc
mov
cmpb
scas
xchg
push
arpl
jb
pop
imul
mov
jg
popfw
movsb
sahf
neg
dec
add
add
mov
repnz
push
leave
sahf
outsb
loop
scas
arpl
andl
mov
mov
adc
mov
push
and
add
add
mov
add
jae
pop
dec
lods
mov
add
add
cmp
add
sub
jecxz
sub
add
add
call
adc
add
add
push
loopne
sub
repnz
cld
in
insb
mov
loop
sahf
cmpsl
mov
cmp
add
add
jns
aad
cmc
roll
add
push
scas
sti
lods
mov
push
mov
scas
jns
xchg
sbb
test
sbb
sahf
adc
mov
mov
mov
rcr
jle
pusha
add
add
gs
popl
dec
mov
add
adc
sub
inc
mov
jg
aam
inc
pop
pop
mov
and
add
das
les
call
push
inc
iret
fbstp
inc
rorl
iret
mov
lcall
add
dec
sub
jnp
cld
pop
sbb
mov
adc
inc
sub
add
adc
and
jns
js
outsl
cmp
lahf
scas
test
test
mulb
pop
popf
cmp
ret
shl
mov
jp
push
cmp
or
add
imul
aam
pop
and
add
add
cmp
loope
sbb
daa
lret
scas
mov
leave
or
ror
jle
orps
repnz
mov
inc
hlt
es
test
aas
xchg
data16
insb
mov
popf
sbb
aam
dec
add
add
add
sti
cmpsb
insl
pop
xchg
std
js
les
das
dec
pop
sbb
dec
loope
adc
mov
stos
test
xchg
mov
add
add
decl
cmpb
mov
sbbb
push
jecxz
icebp
xchg
jmp
and
push
add
add
add
mov
leave
lock
mov
sub
cmp
sti
sbb
leave
leave
fnsave
int
lret
sub
test
dec
inc
add
add
lcall
pop
sub
push
out
dec
aaa
xchg
cmp
mov
xchg
es
jecxz
ds
das
movsb
and
rcrl
lock
cmp
jno
fdivs
mov
ficoml
mov
mov
fimuls
add
add
add
mov
mov
arpl
sub
add
add
mov
lods
ret
pop
ljmp
adc
loop
or
lds
push
and
add
add
test
ss
push
cwtl
adc
push
or
dec
lahf
sub
mov
add
add
negb
pop
lods
insl
divl
cmc
cs
aas
cmp
orl
andl
mov
int3
icebp
xchg
xor
add
jb
or
inc
mov
push
idivl
push
mov
mov
inc
jg
gs
add
add
cltd
nop
jb
test
jmp
cmpsb
mov
enter
jge
add
jbe
pop
lea
lock
lock
int
mov
push
shrl
add
add
imul
add
pop
pop
pushf
dec
xchg
sbb
sbb
add
cwtl
pop
cmc
xor
leave
jg,pt
pop
xchg
testb
insb
mov
push
pop
inc
mov
jl
mov
ss
push
or
mov
add
push
in
fldcw
xor
add
add
test
xchg
jns
iret
mov
cli
aaa
decl
adc
xchg
add
leave
sbbb
repz
jns
add
add
xchg
bound
add
add
ss
mov
aad
in
pop
sub
mov
mov
jecxz
pushl
adc
add
mov
add
add
or
add
add
push
xchg
cmc
mov
add
add
add
loop
mov
cmp
out
mov
mov
push
adc
and
add
add
jno
jmp
je
popf
push
mov
not
push
shl
xchg
mov
add
add
add
lahf
icebp
push
mov
aad
nop
lcall
mov
pop
stc
push
data16
sub
andb
add
icebp
call
add
clc
and
lcall
mov
repz
push
mov
popf
pop
dec
imul
or
add
add
adc
sub
add
add
push
stc
scas
pop
dec
mov
lea
mov
adc
sub
add
add
loop
xor
mov
sbb
add
stos
push
int
lock
add
add
lret
test
mov
lds
and
add
add
add
add
mov
sahf
outsb
lea
add
out
pop
pop
shrl
add
add
hlt
lds
xchg
push
int
jl
push
push
xchg
sub
scas
xchg
sub
push
jne
mov
adc
rcrb
jl
repnz
adc
add
add
movsl
rcrw
xor
es
adc
fmulp
jne
jg,pt
aad
inc
adc
add
in
mov
cmp
xchg
mov
loopne
mov
and
add
add
dec
scas
push
repz
add
in
in
sbb
imul
inc
push
ficoml
dec
repz
arpl
fistl
int3
mov
fidivrs
scas
mov
add
clc
mov
test
sbb
and
shlb
lds
arpl
hlt
pop
pop
xchg
lret
jecxz
sub
add
add
add
lds
js
inc
adc
setle
dec
sub
std
sbb
std
xchg
fmul
push
cmpl
sarb
int
mov
push
inc
mov
sarb
fstps
ljmp
mov
xchg
add
add
test
dec
mov
mov
xor
cltd
mov
loopne
pop
pop
push
inc
mov
imul
call
ficompl
cmp
out
test
mov
mov
jns
mov
mov
add
add
mov
add
add
add
mov
jne
sbb
lret
adc
jp
sub
mov
pop
or
add
add
sti
xchg
sbb
add
aam
push
test
pop
cltd
inc
pop
cmp
add
add
add
notl
inc
xor
mov
pop
push
call
dec
in
adc
sbb
mov
rclb
add
add
cmp
jl
add
add
add
jo
ljmp
dec
out
xor
push
mov
add
cmpsl
push
daa
out
mov
movsl
scas
jl
xor
push
push
sbb
data16
xlat
jmp
pop
outsl
and
add
add
add
mov
xor
dec
pop
test
add
add
add
sub
icebp
rcrb
xchg
insb
add
add
mov
add
lods
mov
nop
xchg
test
xchg
inc
mov
pop
out
xor
ja
fbld
inc
sbb
ficoml
ret
add
add
sub
adc
or
lds
pop
sbb
mov
dec
jae
rcr
mov
mov
jle
cmc
clc
mov
or
sbb
mov
inc
add
add
test
dec
mov
scas
adc
add
add
aas
add
cmpsl
mov
add
add
pop
hlt
mov
clc
mov
test
fistpl
mov
ror
in
scas
or
add
add
cmp
pop
dec
imul
aas
dec
add
add
inc
add
add
mov
clc
shlb
add
add
in
cmp
push
mov
test
gs
add
add
lcall
cld
addb
add
inc
xchg
loop
in
fs
xchg
ljmp
mov
and
mov
or
add
add
adc
pop
cmc
das
repnz
call
scas
popf
inc
out
mov
cmp
les
add
repz
add
dec
mov
iret
movsl
sbb
sti
cmp
andb
add
out
cld
add
add
out
mov
mov
popa
add
add
or
dec
inc
popa
clc
pop
cld
out
enter
mov
int
pop
and
mov
outsb
mov
stos
addr16
iret
test
rolb
pop
das
xchg
sub
sub
pop
jae
jl
data16
xor
add
add
inc
testb
cmpsb
out
dec
jmp
sub
add
add
enter
pop
bound
mov
jo
es
push
adcl
add
out
aas
pop
mull
mov
adc
and
pop
push
mov
xorl
xor
xor
insb
add
add
mov
inc
xlat
mov
outsl
ljmp
outsl
cmp
fidivs
stos
mov
fildl
out
push
mov
add
xchg
daa
xor
mov
jmp
xchg
mov
arpl
add
ja
sarl
sub
add
add
mov
jmp
add
rcr
cmpsb
jb
bound
in
clc
jbe
mov
rorl
and
add
add
stos
mov
push
pop
addr16
or
icebp
icebp
mov
aas
xchg
pop
stos
cmpsl
mov
xchg
or
xchg
pop
push
add
add
cmp
push
add
dec
inc
aaa
mov
xlat
add
adc
dec
xor
and
sbb
add
jl
loopne
lret
out
jg
or
add
add
repnz
dec
mov
xchg
fdivrs
lahf
mov
js
mov
pop
and
jg
ljmp
jb
jnp
sarb
pop
push
cmp
and
add
add
mov
jo
fidivrs
movsb
sub
add
add
fs
mov
xor
negl
xlat
dec
add
add
int3
in
mov
bound
mov
add
add
mov
add
add
test
add
add
pushf
mov
add
sub
add
add
pop
inc
xor
ficoml
mov
add
adc
aas
std
push
shlb
into
push
test
ret
mov
jp
mov
stos
xor
popf
lock
sub
inc
add
add
sbb
push
jge
ret
add
add
add
add
add
add
inc
leave
adc
push
push
dec
insb
add
add
rep
inc
mov
add
add
lods
inc
cmp
test
hlt
sbb
lods
inc
sbb
outsb
shll
gs
inc
pop
push
pop
dec
pop
add
add
add
sahf
push
pop
add
push
lahf
add
iret
sub
push
push
or
out
out
pop
xchg
sub
add
add
xchg
insl
in
sbbl
add
add
pop
loopne
ljmp
xchg
mov
popa
sarb
enter
xchg
pop
pop
daa
mov
inc
pushf
or
push
and
add
test
sbb
fdivrl
jne
push
inc
cs
pop
dec
add
add
int
add
out
xchg
out
test
mov
mov
mov
push
int3
xchg
mov
mov
add
hlt
mov
mov
mov
adc
gs
or
push
es
les
insl
push
enter
das
ja
hlt
cwtl
xor
outsb
inc
stos
inc
iret
xchg
jb
testb
push
fnstsw
and
push
sbb
std
addb
cmp
add
add
pop
std
fsubs
ljmp
add
add
into
test
mov
jae
add
add
add
movsb
push
cmp
sub
or
add
add
add
dec
repz
dec
mov
add
add
add
sti
push
pop
mov
aam
aaa
leave
mov
push
cmpsl
dec
mov
repz
add
add
aad
repz
xor
push
push
xor
lds
push
pop
loopne
das
dec
push
pop
jle
xchg
rclb
ret
aaa
stos
mov
xchg
or
push
pop
mov
xor
push
mov
in
sti
and
fldenv
fs
adc
pop
or
add
add
mov
and
xor
add
add
add
scas
push
outsb
mov
cmp
jmp
add
add
pop
arpl
ficoms
cmp
mov
add
xlat
cmp
mov
ja
enter
add
adc
jp
iret
sbb
int3
dec
pop
cmpsl
and
mov
jne
mov
negb
pop
lds
sbb
add
add
cmp
cmp
into
imul
add
cmp
add
sbb
push
jge
imul
aaa
and
jmp
mov
push
mov
jb
imul
mov
add
pop
lret
pusha
add
add
aam
mov
bound
pop
ret
repnz
add
add
fnsave
dec
sub
pop
cmp
mov
aas
adc
jmp
dec
mov
mov
push
aad
xchg
jecxz,pn
xor
inc
jbe
mov
fsts
dec
mov
push
add
add
add
cltd
add
add
add
xor
dec
pop
rolb
cli
fnstcw
add
cmp
sub
add
add
pusha
mov
fsqrt
hlt
repz
sarb
add
jle
and
add
add
adc
popa
lret
xchg
mov
daa
jns
std
fidivrs
add
xchg
push
adc
aaa
fdivrl
inc
mov
fidivs
adc
dec
fnstenv
shrl
add
add
lds
dec
add
add
cmpsl
lods
mov
pop
mov
dec
ret
lock
cmp
xchg
jp
lea
add
add
xchg
cmpsl
enter
push
lcall
push
jns
inc
lahf
jmpw
mov
sbb
add
std
fimuls
add
add
ss
pop
dec
int
shr
testb
mov
out
dec
add
add
fmuls
sbb
and
add
add
push
inc
fwait
cltd
jg
or
xchg
xor
inc
or
inc
and
push
lock
lds
mov
add
add
mov
cwtl
dec
inc
pop
pop
or
add
add
cs
sbb
add
add
sub
loop
cltd
and
add
add
dec
xor
jecxz
enter
inc
dec
dec
pop
pop
push
or
gs
mov
mov
add
dec
in
jb
int
stos
in
xor
cmpsl
xor
pop
xlat
lret
lcall
and
push
cmp
in
pop
std
jns
popa
jno
inc
lods
mov
xlat
jge
fwait
in
inc
add
add
dec
mov
fs
jnp
mov
fadd
mov
leave
icebp
lods
mov
sahf
div
lahf
jp
cwtl
adc
add
add
cmp
inc
add
add
adc
xchg
nop
arpl
add
add
add
add
add
push
cmp
jg
mov
insl
and
pop
add
mov
repnz
shrl
icebp
shrl
push
mov
scas
or
add
add
sub
sbb
xchg
pop
iret
or
add
add
add
add
mov
sub
adc
or
dec
rcll
aas
je
inc
add
add
add
jle
and
add
add
mov
push
inc
pop
push
dec
int3
sbb
add
mov
test
or
pop
call
and
mov
enter
sub
cmp
add
jge
cmp
fimuls
add
add
icebp
insb
mov
mov
clc
out
repnz
lea
push
mov
push
in
in
add
add
and
sub
add
add
mov
ds
mov
push
pop
popa
mov
loop
lahf
std
insl
add
jg
in
call
mov
cmp
xchg
sahf
movsb
nop
int
mov
xlat
loopne
jnp
jns
and
addr16
xor
shr
pop
arpl
daa
fcomps
mov
mov
outsb
mov
xchg
mov
mov
je
mov
std
ljmp
add
add
and
neg
jp
out
pop
lock
xorl
add
push
add
add
push
sti
scas
div
js
fldcw
lods
adc
xor
jno
stos
inc
leave
dec
add
add
mov
push
in
sbb
cs
sbbl
add
add
add
or
adc
lods
rcrb
mov
test
mov
icebp
shlb
pop
test
push
sahf
inc
push
pop
xor
sbb
pop
shl
ficoml
mov
add
add
xlat
cmp
stos
and
dec
rclb
cmp
fwait
sbb
add
fucompp
mov
loopne
or
xchg
and
hlt
or
add
add
push
jbe
jmp
mov
decb
stos
or
lea
push
push
cltd
mov
add
add
mov
push
add
add
or
add
hlt
out
inc
mov
jg
cwtl
sbb
insl
out
push
cmc
loope
and
add
add
push
push
add
add
cmp
js
scas
cli
mov
dec
fcmovu
add
outsb
adc
fistps
push
dec
comiss
xchg
add
or
dec
mov
and
dec
mov
add
stos
push
mov
push
adc
add
add
xchg
repnz
cltd
cmp
dec
add
add
outsl
outsl
imul
mov
add
add
add
mov
add
pop
xor
int
sbb
in
mov
pop
push
jl
fildll
out
lods
mov
inc
add
add
addb
jle
jae
in
mov
mov
outsl
fildl
add
add
add
in
fidivl
pop
dec
add
add
mov
in
data16
mov
or
ret
mov
cwtl
fwait
cld
movsl
pushl
add
addr16
cmp
hlt
or
in
cmpsl
nop
mov
sbb
adc
loop
xor
sbb
lea
jns
adcl
sub
dec
shlb
in
in
lods
push
push
fimuls
sub
mov
xorl
cs
pop
into
sbb
mov
rol
pop
movsl
mov
scas
and
ljmp
xchg
in
pushf
int
rol
notl
inc
icebp
lret
jge
sub
or
stc
dec
shll
add
add
mov
gs
add
add
fcmovne
jbe
xchg
sub
jae
jns
and
push
ds
pushf
fbstp
mov
xchg
xor
jl
pop
jge
push
loop
push
xor
inc
mov
fstpl
push
pop
lea
add
add
adc
add
add
add
add
sub
add
add
aaa
mov
movsl
adc
mov
stos
sbb
pop
dec
dec
add
add
add
popf
mov
add
insl
lcall
ljmp
add
add
test
mov
add
jne
lahf
xor
fstpl
insb
mov
ja
repz
add
add
roll
rolb
or
add
add
jmp
lahf
mov
or
or
add
add
fmull
mov
jg
sahf
inc
pop
push
cld
xchg
les
push
add
fmul
ja
cmp
sbb
fs
and
push
mov
or
fbstp
add
stc
int3
aaa
sbb
sbbl
fcmovne
mov
add
add
add
mov
mov
or
add
add
pusha
mov
mulb
mov
loope
mov
out
dec
out
iret
movl
add
test
sti
push
mov
inc
and
xchg
xchg
adc
push
xchg
loope
push
loop
loope
cmp
xchg
out
push
cmpsl
ret
mov
pop
pushf
pusha
mov
fistl
mov
in
jmp
cmp
pop
leave
testl
lret
popf
test
icebp
inc
addr16
in
mov
add
add
sub
inc
xchg
in
cmp
sbb
mov
add
xor
add
add
adc
fmull
add
add
and
pop
push
mov
cli
xlat
add
add
sub
add
add
adc
add
dec
mov
xchg
add
mov
add
xchg
out
xchg
adc
and
fwait
cmpsb
mov
xchg
sub
es
push
or
add
add
aas
cmpl
testl
add
pop
jmp
insb
add
add
xchg
add
add
adc
movsb
mov
aaa
mov
push
jl
imul
inc
notb
sub
add
add
xor
mov
les
sti
push
fwait
loop
dec
cs
sbb
sub
movsl
pop
add
add
add
add
add
xchg
mov
jg
mov
je
les
push
push
ds
movsb
inc
add
add
mov
aaa
xchg
stc
and
dec
push
inc
add
add
mov
sub
add
add
inc
mov
call
mov
into
jno
mov
jns
add
add
push
in
call
inc
add
add
pop
sbb
movb
sar
inc
xchg
or
add
add
cli
jl
movsl
inc
add
add
bound
sub
imull
jae
aam
lret
or
fcomip
or
pop
mov
lret
out
fists
mov
add
sbb
mov
shrl
out
mov
rcll
or
push
and
xchg
mov
popa
mov
call
mov
das
dec
fs
inc
xor
and
mov
mov
pop
lds
sub
outsb
pop
pop
or
stos
mov
add
add
add
rclb
mov
push
subl
test
loop
or
push
je
mov
mov
sub
add
add
ret
and
aaa
mov
add
ss
cmp
mov
aaa
xchg
jnp
test
addr16
adc
push
aam
push
bound
in
ja
fdivrs
jecxz
or
ret
dec
fldl
lods
out
mov
add
cmp
insb
mov
ss
inc
adc
imul
pop
ljmp
adc
mov
stc
push
xchg
dec
add
add
add
xchg
xchg
push
xchg
out
xor
shll
dec
adc
push
fmull
fsubs
std
int3
xchg
mov
fisubl
sub
orl
out
gs
aas
sbbb
adc
add
dec
loopne
out
add
sti
dec
mulb
and
add
idivl
clc
mov
sub
add
mov
jecxz
cmp
scas
mov
std
mov
add
lahf
es
push
add
add
add
rcrb
cmc
in
leave
pop
mov
in
dec
add
add
clc
push
sbb
add
add
aam
jo
xchg
inc
add
fmul
or
and
adc
pop
and
add
add
xor
add
add
add
fildll
push
sbb
shlb
fcoms
add
mov
bsr
movsl
js
or
add
add
shlb
jo
sahf
int3
sub
pop
addr16
sub
int3
xchg
add
repz
cld
js
movsb
jo
cltd
sbb
mov
xor
pop
call
adc
xor
push
mov
sub
add
add
aas
xor
mov
jp
dec
pop
loopne
sub
add
add
add
add
in
xor
aam
mov
pop
pop
add
daa
fwait
adc
jmp
xchg
mov
push
rcll
les
fyl2x
sbbl
cmpsb
fadds
add
add
cmc
xor
and
mov
add
sbb
arpl
divl
mov
pop
ret
mov
add
mov
add
jle
sub
add
add
ror
in
inc
sarb
jg
cmpsl
cmp
add
in
push
int
mov
repz
add
add
cmpsl
mov
and
add
jmp
loop
mov
add
add
dec
inc
pop
and
xchg
cmp
cltd
dec
push
icebp
or
add
add
mov
enter
gs
stos
shl
fmul
cld
sbb
lsl
add
add
add
add
adc
xchg
dec
or
add
add
jo
sbb
inc
pusha
mov
popa
sbb
mov
ss
push
nop
popa
jnp
aaa
and
add
add
sahf
mov
jge
orl
mov
lcall
cmp
fwait
subl
mov
std
sbb
mov
jmp
testb
dec
dec
adc
mov
jl
pop
xchg
mov
add
outsb
or
add
add
dec
sbb
not
jl
out
int
mov
push
roll
mov
add
add
add
add
inc
mov
movsl
jnp
pop
aad
in
or
and
add
add
ljmp
xlat
xor
sub
mov
icebp
fimuls
adc
stos
ss
and
pop
xchg
cmp
pushf
dec
lret
and
add
add
add
add
lret
cmp
leave
pop
int3
cmp
mov
cwtl
lret
xor
mov
dec
mov
sub
in
mov
jmp
ja
xchg
push
and
xor
sbb
jo
mov
pop
xor
jno
sbbb
add
pop
inc
ja
inc
add
add
push
stc
icebp
and
add
add
divl
cmp
dec
mov
in
sub
add
add
pop
rcll
ss
pop
icebp
add
aam
add
add
mov
xchg
clc
mov
dec
mov
push
push
jno
fwait
mov
ljmp
add
lods
pop
imul
testb
sbb
add
add
gs
mov
add
add
pop
cltd
jmp
loopne
int3
pop
mov
test
cli
jns
inc
andb
loope
push
fcoml
leave
xchg
and
add
add
add
add
sahf
and
shl
mov
aas
fiaddl
int
cltd
mov
outsl
insb
add
add
and
aad
cs
cmpsl
fadds
or
dec
add
add
fs
orps
cmpsl
daa
mov
es
sub
add
add
add
add
out
in
mov
lahf
xor
stc
inc
add
add
movl
pop
mov
in
mov
in
stc
or
add
add
movsl
loop
pop
jno
xor
add
add
dec
add
add
mov
add
add
out
mov
test
mov
xor
mov
les
movsl
out
mov
roll
and
add
add
jmp
mov
lds
sbb
roll
mov
mov
pop
inc
add
cld
sbb
mov
mov
arpl
loopne
push
fisubrl
xor
outsl
cmp
clc
cmp
js
loope
je
aam
fsubl
add
add
ror
mov
aaa
xchg
ss
daa
inc
in
inc
add
add
and
add
add
add
and
add
out
out
lock
rcll
loop
pop
and
mov
arpl
or
daa
inc
lods
icebp
arpl
push
add
add
ror
jno
loope
loop
lahf
loopne
add
add
mov
cmpsb
test
add
test
add
add
sbb
mov
add
push
mov
and
les
jb
lock
mov
add
add
push
loopne
aaa
push
icebp
xchg
mov
mov
sub
add
add
adc
sbb
movsl
jge
push
pop
ja
testb
or
add
and
jns
adc
rorb
add
fwait
js
imul
add
add
movsl
pushl
ds
mov
insb
mov
push
inc
mov
lret
scas
or
shrb
dec
sbb
loopne
lock
mov
inc
add
add
push
mov
pop
imul
lret
popa
xchg
and
sbb
adc
stc
rcrl
sub
add
add
mov
test
adcb
fs
or
lods
or
add
add
pop
aad
lock
add
insl
push
mov
sbb
lahf
jns
addr16
aam
xor
add
mov
rorb
loopne
jl
sbb
mov
lods
cmp
sbb
add
add
js
add
add
add
inc
lods
mov
sub
add
add
inc
mov
push
test
push
sarb
imul
add
add
cs
jmp
ds
in
lods
out
fnstenv
add
jae
xchg
fistps
mov
cmp
add
add
add
cmc
addr16
ja
divl
or
adc
add
add
add
add
pop
xchg
add
add
ja
aas
ret
cmp
add
cld
xchg
and
add
add
or
add
add
jne
jmp
sbb
std
adc
jnp
jmp
ss
add
add
jle
sub
add
add
orb
ds
jno
pop
or
pop
mov
out
sbb
add
add
int3
icebp
inc
push
push
lcall
lea
jno
dec
push
add
add
add
pop
inc
lods
dec
add
add
jecxz
pop
cli
test
ss
inc
loopne
and
pop
sbb
int
sub
das
fisttpl
movsl
cli
push
and
out
dec
mov
in
sub
adc
mov
popf
mov
jne
gs
add
add
pop
pop
xchg
popa
adc
fdivl
inc
add
add
sarl
inc
rcrl
ret
mov
push
jl
jb
add
add
add
in
aas
cmp
sbb
add
or
aad
mov
add
push
movb
mov
dec
push
test
jl
stos
pop
loopne
sbb
add
movsb
or
idiv
daa
arpl
add
add
test
mov
data16
in
push
loope
dec
pop
insl
fxch
es
outsb
dec
test
adc
das
and
add
add
pop
insb
add
add
push
roll
add
add
mov
xchg
adc
jmp
repz
push
test
out
sub
add
add
sub
add
jp
lret
cltd
in
jg
subb
add
in
ucomiss
dec
mov
out
movl
push
daa
pop
cmp
jl
dec
jle
fisubrs
mov
inc
add
add
jge
add
add
jbe
movsb
mov
add
sbb
sbbl
jb
test
or
mov
dec
notb
je
xor
mov
xchg
cmp
sub
std
sti
call
and
add
add
mov
add
imul
loop
pop
cmpsb
gs
add
repnz
lret
sub
adc
add
rcrl
ja
jae
inc
add
add
inc
lods
repnz
jb
dec
push
les
shll
cmp
scas
cmpsb
lcall
fadd
or
add
mov
lret
inc
mov
add
jge
shrb
add
add
lret
xchg
mov
hlt
into
and
pop
push
arpl
call
add
xorl
pop
test
cwtl
mov
add
insb
add
add
jbe
lret
add
add
insl
jge
cli
por
popa
push
mov
popa
add
xchg
les
fldcw
mov
out
cmpsl
mov
mov
and
add
ljmp
add
add
das
sub
pop
shrl
and
add
outsl
fdivs
pop
movsb
out
mov
jns
add
push
cmpsl
mov
rcrb
add
mov
fwait
gs
call
jno
into
lea
add
lods
ljmp
push
fstpl
test
or
add
rcrl
out
addr16
sti
out
ret
inc
int
fistl
fs
pop
mov
scas
inc
pop
mov
sub
mov
push
cmpsb
mov
shll
jl
mov
cmp
mov
fwait
lods
cmp
push
cmc
and
out
mov
add
jb
mov
sbb
andl
push
pusha
add
add
loope
jno
jp
lods
xor
add
add
ret
jmp
mov
aad
pop
ret
in
or
hlt
push
ja
dec
bound
xor
lods
jne
ret
mov
cld
or
add
add
xchg
push
xchg
dec
add
add
mov
add
add
ljmp
imul
add
add
pop
psraw
loop
stos
push
xor
outsb
mov
scas
dec
fstpt
and
in
jns
inc
int
mov
or
add
add
and
add
add
add
add
mov
xor
mov
in
leave
in
cmc
mov
call
faddl
mov
loopne
movsb
rolb
add
add
or
jecxz
push
lods
xor
es
cmpl
add
add
add
add
in
outsl
test
insl
mov
add
add
add
stos
aad
or
add
add
jecxz
cmp
ficoml
jns
jmp
clc
out
int3
adc
cmpsl
inc
mov
add
add
mov
add
push
mov
cvtps2pd
ss
mov
je
bound
mov
adcb
bound
sbb
fdivrl
rcl
icebp
fisubrl
clc
inc
sub
rcrb
mov
sbb
jge
inc
adc
add
add
js
shl
add
ret
outsl
or
add
add
sbb
loopne
iret
out
pop
cmpsb
jne
addr16
in
repnz
lock
inc
arpl
add
jne
inc
fadds
xor
sub
add
add
add
sahf
ret
pop
rcl
pop
or
pusha
add
add
std
pop
shr
rorb
out
out
fisttps
mov
fdivl
mov
sbb
mov
pop
mov
add
cmp
dec
push
lods
arpl
sub
add
ljmp
neg
or
add
add
push
push
scas
xorb
add
add
test
lods
iret
xchg
xor
leave
mov
std
pop
dec
das
and
mov
add
das
lock
adc
push
out
add
add
add
dec
mov
scas
mov
xor
lock
add
add
gs
mov
mov
add
add
into
loopne
add
sbb
je
icebp
add
sar
dec
stc
gs
cmp
leave
cmpsl
jne
push
or
cwtl
jae
cmp
jb
rcll
sarl
mov
inc
mov
or
add
ret
iret
mov
shl
out
sub
jecxz
test
out
in
inc
in
pop
sub
ret
dec
mov
inc
add
add
cwtl
mov
js
orb
and
add
push
call
and
cmp
add
outsb
cmp
push
rcr
mov
push
jno
lods
js
std
sti
sub
dec
ss
int
mov
or
add
xchg
mov
std
repz
add
add
jo
fucomp
inc
mov
mov
add
add
cmp
or
out
test
mov
xorb
inc
add
add
insb
add
add
into
aam
ret
dec
jns
inc
pop
in
aad
loope
mov
add
add
jp
inc
cld
icebp
test
cmp
js
jecxz
xlat
inc
fnsave
jge
aad
mov
scas
jno
es
stos
xchg
dec
add
add
in
xlat
mulb
add
add
out
push
scas
cmpsl
cmp
and
add
add
add
add
sbb
subl
add
mov
add
inc
repz
fldcw
xchg
push
punpckhbw
add
add
add
mov
push
and
mov
pop
jl
movsl
push
rolb
loope
jmp
cmpsb
dec
add
add
mov
mov
add
mov
sti
push
add
add
add
push
fisubs
inc
inc
add
add
hlt
xchg
inc
mov
add
add
mov
nop
inc
cmpsb
sbb
rcl
pop
push
mov
xorl
mov
aam
out
cltd
xor
mov
lea
push
outsb
movsl
inc
mov
push
movsb
mov
add
out
mov
jne
inc
sbb
mov
daa
push
leave
fwait
inc
add
add
adc
in
je
fnstenv
pop
cwtl
push
sbb
mov
sti
xchg
inc
stc
cli
ds
scas
into
in
mov
or
add
add
add
sbb
pop
mov
cmp
insb
mov
es
insb
add
add
repnz
cmpsb
mov
xchg
hlt
movsl
shll
add
shlb
add
add
ljmp
mov
cwtl
and
jle
add
roll
mov
stos
cmp
leave
nop
jp
les
mov
adc
fsts
out
jnp
out
arpl
test
and
xor
in
jmp
jnp
shl
fadd
pop
shll
add
add
aaa
lcall
add
movsb
adc
pop
orl
lods
and
mov
jae
fldenv
std
shrl
jnp
mov
add
mov
jl,pn
mov
pop
ret
mov
xchg
adcb
jno
mov
mov
add
add
mov
out
add
add
add
xor
dec
push
add
add
xor
add
add
fwait
lahf
stos
or
push
mov
sbb
rcrl
fnstsw
xor
arpl
and
mov
add
mov
add
or
push
dec
add
add
int
xlat
cwtl
imul
add
pop
inc
mov
gs
bound
or
add
add
loope
stos
sbb
and
jmp
addr16
mov
arpl
cmc
mov
add
add
add
test
insl
mov
cmp
sub
sub
add
sbb
mov
add
mov
jb
nop
inc
out
or
pop
hlt
sub
add
add
ficoml
mov
inc
das
sti
mov
mov
popa
and
add
add
add
mov
jmp
add
das
aad
or
popf
imulb
scas
clc
xchg
sbb
hlt
addr16
cs
mov
lret
pop
push
subl
or
xchg
es
test
cmpsl
sbb
fsts
dec
jecxz
mov
mov
xchg
and
movsl
test
inc
push
jne
adc
ret
mov
orl
fistpl
mov
inc
addb
add
add
add
add
mov
movsl
movsl
icebp
sub
add
add
ret
xchg
cmpsl
dec
xchg
mov
sbb
mov
add
add
sub
shl
mov
pop
add
addb
out
mov
cmpsl
xchg
out
nop
xor
rcrb
mov
add
add
imul
add
add
push
or
es
add
scas
mov
xor
cmpsb
ljmp
insl
popf
adc
add
add
dec
mov
cmp
popf
imul
mov
nop
popf
shlb
push
sub
sub
xor
rcrl
push
mov
test
xchg
mov
add
add
movsb
mov
xor
add
add
add
add
add
adc
mov
cmpsl
add
add
add
out
sub
insl
sub
mov
sub
mov
out
and
dec
scas
dec
mov
jbe
lods
dec
mov
add
add
mov
mov
aas
mov
mov
sub
jle
cmp
je
aas
push
addl
imul
sar
xchg
or
xchg
sub
mov
fadds
add
add
add
stos
fnstenv
pop
int3
mov
test
and
mov
inc
push
mov
mov
sbb
ret
fildl
enter
add
add
inc
mov
push
jle
out
xchg
repz
icebp
add
add
add
sub
add
add
ja
or
dec
mov
pop
fsubl
mov
mov
mov
cwtl
mov
mov
add
data16
jae
add
jns
xor
adc
cwtl
push
mov
out
sbb
inc
add
add
xor
or
rolb
xor
add
add
test
test
pmulhuw
inc
dec
sbb
add
cmc
decb
mov
or
cmp
dec
jb
stos
jge
push
das
sbb
add
jno
add
add
jns
hlt
icebp
out
roll
add
or
into
fs
roll
jno
rolb
mov
jp
jo
add
add
add
add
cld
call
orb
call
jb
pushf
and
xchg
sbb
out
je
jge
subb
imul
aad
js
jo
sbb
adc
mov
xor
outsl
lret
xor
cmc
pop
movsl
lcall
imul
add
add
jle
xchg
lods
movsb
pop
lahf
pop
mov
dec
clc
xor
jae
mov
add
add
add
inc
daa
dec
pop
ss
jp
ret
dec
mov
repnz
ficompl
mov
fcoml
add
add
add
add
add
adc
fcoml
cmpb
mov
test
push
cmp
xor
ja
mov
jl,pt
inc
shl
enter
movsb
loope
or
add
add
jne
pop
lds
add
dec
add
inc
rcrb
dec
sub
pusha
mov
dec
outsb
inc
mov
lret
mov
das
mov
lcall
outsl
or
jl
std
xor
inc
add
add
jnp
imul
and
jg
lret
das
out
push
sub
add
add
movsb
test
inc
jge
mov
add
add
mov
add
add
andnps
aad
pushf
fisubs
fmull
jp
sbb
dec
add
add
sti
lahf
scas
cmpsb
pop
movsl
pushl
add
into
lret
imul
xchg
pop
ja
scas
pop
loopne
jne
inc
mov
hlt
and
mov
fsubl
repz
andb
mov
nop
or
xchg
ss
mov
mov
add
add
mov
add
mov
or
adc
add
add
adc
scas
cmp
and
add
add
sbb
jbe
in
xor
call
dec
ficomps
mov
add
add
inc
rolb
add
add
add
mov
adc
dec
mov
mov
push
outsb
ret
mov
stc
in
inc
in
pop
scas
ret
jae
dec
cwtl
in
fstl
sar
cwtl
sahf
dec
add
add
pop
xchg
push
test
nop
mov
out
outsl
sbb
daa
lcall
add
add
mov
nop
movsb
dec
xor
cmp
or
add
add
add
lods
stc
shrl
add
add
or
dec
fsubs
pushf
popf
jmp
inc
sbb
add
add
popf
inc
pop
xor
adc
test
cmp
mov
lret
add
add
add
js
add
add
pop
addr16
ja
sbb
pop
imul
add
xor
ss
enter
inc
sahf
ss
mov
testl
adc
xchg
jo
dec
add
add
add
add
add
add
imul
add
add
in
dec
gs
push
push
leave
sub
mov
mov
add
test
sub
or
arpl
jecxz
repnz
int3
add
mov
add
xor
jbe
dec
add
add
lret
xor
cmpsb
popw
ljmp
addr16
dec
sbb
and
add
add
out
inc
add
add
cli
adc
sbb
les
add
sbb
rclb
pop
mov
imul
movsl
flds
ja
mov
frstpm(287
dec
mov
test
add
add
bound
jp
sbb
pop
sub
add
add
js
or
scas
dec
rclb
add
push
xchg
mov
add
ljmp
mov
scas
jns
cli
decb
sti
cld
pop
data16
std
mov
pop
fimull
ret
push
sub
add
add
cmp
test
fwait
and
mov
xchg
iret
loope
add
add
add
rcrl
cwtl
pop
in
mov
ror
mov
xor
cmp
adc
js
mov
out
movsl
enter
adc
fsubp
jnp
xchg
jns
dec
decb
xor
insl
jno
pop
fdivrs
dec
fisubrl
mov
and
int
lock
lea
inc
dec
jns
scas
ja
out
push
mov
popa
sub
push
lods
scas
pop
movsl
dec
mov
xchg
rcll
in
cmp
pop
xor
pop
lret
lods
xchg
insb
add
add
fnstenv
int3
xchg
int
js,pt
lret
fadd
inc
iret
jp
xchg
push
in
mov
jle
imul
clc
data16
xor
add
add
cmp
mov
add
add
pop
clc
cmpsl
aas
fiadds
cmp
inc
mov
ficoml
mov
lret
daa
shr
es
add
add
lahf
jg
jnp
and
adc
push
adc
loop
cmp
mov
test
dec
mov
popf
sbb
add
add
push
lahf
sbb
sub
add
add
mov
add
add
sbb
mov
mov
icebp
xchg
mov
popf
jbe
in
mov
leave
pop
add
test
lret
add
add
add
add
lret
lret
fwait
insl
pop
push
add
popf
inc
adcl
mov
insl
push
mov
int
stos
push
hlt
mov
pavgw
mov
stc
ficoml
mov
pop
cmp
fcompl
mov
mov
outsl
icebp
rorl
aas
stos
xchg
call
mov
mov
or
maxps
jle
bound
pop
stos
pop
xchg
mov
lds
add
add
and
add
add
adc
add
lahf
and
lock
loope
jno
fdivrp
int3
into
xor
in
push
and
add
add
js
or
std
mov
dec
jmp
xor
in
rcl
jbe
jle
mov
scas
sbb
push
cld
push
jnp
and
enter
mov
lods
and
add
mov
mov
and
data16
fldl2t
subl
int3
xchg
cmp
xchg
or
movsb
mov
cld
stos
mov
xor
cmpsb
test
or
cmp
orl
xor
add
std
inc
add
add
lret
aam
loope
inc
aas
in
dec
mov
push
inc
jmp
lret
lret
dec
push
xchg
adc
dec
lea
into
and
into
imul
stos
dec
inc
inc
cmp
push
add
push
push
adc
lock
mov
add
add
add
add
add
mov
inc
or
sbb
mov
add
add
cmp
add
add
in
fsts
pop
ret
mov
push
call
add
add
stc
jl
adc
add
add
data16
sub
in
xchg
mov
js
inc
add
add
add
repnz
push
sbb
bound
and
pop
adc
xor
pop
movsb
adc
jp
sarl
ljmp
add
in
idivl
xor
adc
xorb
sub
add
add
in
adc
mov
add
add
outsb
mov
cmpsl
lahf
das
adc
or
add
add
add
lock
shl
add
adc
sub
test
repnz
add
add
ret
enter
add
fsubrl
add
add
mov
imul
cmp
add
add
sub
add
add
ja
dec
pop
scas
add
add
add
sub
add
add
int
xchg
and
push
jns
loop
dec
mov
dec
shrl
pop
pop
pop
mov
cwtl
xchg
add
lods
test
ja
mov
pop
inc
adc
stc
pop
adc
add
add
push
sub
mov
add
add
xchg
movsl
mov
mov
rcrl
add
add
pop
mov
mov
popf
stos
lahf
das
bound
loopne
rorl
adc
xchg
jae
pop
xchg
push
or
sbb
add
add
mov
cmp
add
xlat
jl
add
add
mov
ljmp
cmp
jmp
push
sub
add
add
test
mov
push
mov
add
inc
pop
inc
add
addb
jns
pop
test
lea
xchg
ljmp
out
push
les
in
mov
sbb
inc
mov
int
aas
insb
mov
mov
cmpsl
les
add
add
or
out
inc
movl
jb
cmpsb
mov
add
movsl
ljmp
inc
orb
add
faddl
jbe
loop
pop
daa
mov
push
fsubr
jae
adc
lods
sbb
into
mov
pop
repnz
mov
cltd
sbb
lods
lods
or
sti
jmp
lea
or
pop
stos
mov
add
sub
add
add
sbb
ds
rcrb
pusha
mov
add
add
das
aas
les
lret
sub
fisubs
scas
data16
or
pushf
fsub
pop
dec
jge
pop
pop
dec
or
jbe
scas
push
sub
xor
adc
hlt
push
pop
push
add
jns
out
int
jbe
sar
inc
push
into
inc
add
add
xlat
push
addb
popf
xchg
mov
test
add
mov
pushf
in
jns
sub
add
add
popa
inc
inc
add
inc
mov
mov
and
pop
sub
cmp
ret
jmp
sbb
add
add
add
cli
add
xor
dec
mov
out
jmp
push
int
mov
adc
adc
add
add
push
xchg
push
inc
push
inc
aas
or
sahf
inc
mov
je
cli
popa
je
xchg
dec
ds
add
sbb
push
or
add
inc
movsl
movsb
addr16
add
add
add
add
add
xlat
xor
xor
sub
add
add
scas
es
movb
jle
mov
or
das
jp
push
jmp
and
add
add
mov
bound
xchg
push
mov
outsb
push
fsubl
and
jge
mov
mov
bound
xchg
popf
jp
mov
or
add
add
pop
mov
add
int3
std
mov
pop
xchg
fwait
pop
daa
idiv
out
shll
ret
insb
mov
imul
test
add
add
xor
and
pop
mov
mov
push
add
add
add
fisubrs
inc
into
data16
outsb
data16
mov
cmp
sbb
mull
fidivrl
adc
mov
add
pop
xchg
pop
pop
pop
xor
out
adcb
outsl
mov
inc
xchg
lea
cmpb
add
add
add
add
xor
test
cmpsl
jo
orl
jmp
lock
or
add
add
pushf
lock
push
inc
or
ret
pop
insb
add
add
jae
jae
jg
mov
inc
xor
imul
adc
stc
xor
add
sbb
pop
pop
sbb
xchg
movsl
inc
push
outsb
inc
add
add
into
rorl
add
rsqrtps
jns
cmp
add
mov
add
scas
fucomi
push
hlt
inc
xchg
mov
xorb
mov
outsb
xchg
xchg
int3
xchg
adc
push
das
pop
mov
add
sbb
in
push
fstpl
cmc
shll
inc
jae
dec
pop
add
add
dec
xchg
fwait
enter
mov
fdivs
add
inc
jg
out
push
jns
jge
les
out
cltd
adc
xchg
mov
jg
lret
jecxz
inc
add
add
inc
add
add
outsb
dec
xchg
pop
dec
nop
scas
xchg
push
xchg
and
incl
mov
xor
add
add
add
add
dec
stos
stc
push
mov
add
sarl
cltd
notb
cwtl
hlt
in
aaa
cs
cmp
psadbw
sti
jle
cmp
adc
mov
jo
xchg
movsb
push
enter
ret
jge
fdivl
pop
and
add
add
cmc
sub
add
add
int
and
add
add
jmp
push
mov
and
fldcw
idivl
les
nop
stc
and
cmp
cmp
xor
rorb
add
add
div
sbb
std
adc
pusha
mov
mov
mov
pop
sub
mov
pop
push
xchg
nop
xchg
pop
int3
cwtl
push
or
add
add
cmp
outsb
iret
sbb
popa
int3
mov
jno
adc
mov
push
sbb
pusha
mov
and
xor
mov
cs
fmuls
push
mov
pop
xor
pop
pop
fwait
movsb
sub
add
add
outsl
mov
xlat
and
add
add
sbb
shlb
jns
cmp
add
sub
add
add
push
inc
dec
aas
dec
outsl
les
push
fs
jmp
scas
insb
mov
adc
or
outsb
repz
mov
xor
and
sub
push
xchg
popf
or
add
add
xor
mov
pop
in
lahf
lods
das
push
push
inc
add
add
aaa
cmc
subb
outsb
test
xor
inc
adc
adc
xchg
in
mov
add
add
test
add
ficoms
mov
test
xor
shrl
add
add
push
lods
test
jmp
adc
add
jnp
arpl
jge
rcr
icebp
jecxz
scas
sbb
jns
movl
push
push
gs
add
add
add
fsubs
add
jo
daa
push
dec
add
add
cmp
jns
cmp
dec
fdivs
xor
add
cli
insl
ss
add
add
mov
add
add
ljmp
add
and
add
add
dec
add
add
xchg
cld
sbb
mov
jge
cmp
add
add
aam
xor
push
xor
dec
add
add
inc
mov
sti
sbb
ror
stos
insb
mov
mov
cmp
push
inc
icebp
movsl
cmp
add
fdiv
add
ljmp
xchg
adc
stos
adc
dec
mov
int
mov
mov
mov
scas
stos
in
incb
add
add
shll
pop
sbb
mov
test
mov
cmpsl
or
push
or
mov
add
or
sbb
scas
dec
mov
add
sti
and
jnp
jmp
mov
mov
mov
push
fsubs
add
add
loopne
mov
add
add
int
hlt
loopne
sbb
add
add
sub
pop
mov
out
sbbl
dec
mov
fidivrs
mov
cmpsl
cmp
dec
lea
xchg
push
mov
cmpsl
icebp
dec
adc
inc
mov
lcall
add
add
add
inc
mov
sub
adc
push
fisttpl
ds
mov
js
mov
and
lcall
int3
xor
aad
pop
es
or
add
add
add
jo
add
lock
imul
sahf
and
add
add
mov
enter
xchg
jecxz
sbb
add
add
jecxz
mov
mov
sub
add
add
or
adc
add
add
imul
add
or
add
add
mov
adc
jmp
add
inc
or
aas
cmp
or
add
or
add
add
fistpl
jns
cs
out
mov
mov
cmp
and
add
add
push
imul
mov
jb
hlt
push
sahf
pop
xchg
mov
icebp
mov
add
int
test
push
outsb
shll
lret
nop
lea
add
add
iret
or
mov
xor
mov
mov
jp
mov
sahf
out
lret
out
mov
push
fwait
adcl
xor
xchg
mov
add
add
add
ljmp
mov
sbb
data16
dec
xchg
aam
mov
xchg
cld
jne
rep
xor
dec
int3
enter
loopne
add
add
fimull
lea
lds
xchg
data16
fildl
add
add
lahf
pop
test
xchg
mov
mov
roll
add
add
jg
je
cmp
add
add
add
and
mov
sbbb
aaa
ficoml
imul
insb
mov
pop
sbb
mov
adc
add
int
xor
bound
test
add
add
fidivl
in
mov
pop
adc
in
cmp
fidivrl
dec
push
aad
or
add
add
sahf
push
sub
add
add
aas
les
add
add
xchg
arpl
jae
inc
add
das
adc
stos
stos
cld
ljmp
sbb
adc
fisttpl
and
add
add
fwait
das
xchg
out
ret
jge
pop
dec
inc
pusha
mov
or
jne
in
pop
test
add
add
add
and
push
xbegin
call
dec
add
add
imul
fidivrs
push
mov
push
aas
insl
or
shll
fsubrl
mov
mov
xor
add
add
enter
mov
add
add
icebp
xchg
jg
or
push
lea
out
jns
jge
fmul
subl
add
add
pop
inc
pop
add
cmc
lea
add
mov
mov
fdivrs
pop
push
fucomp
mov
in
ret
call
add
mov
mov
cld
jmp
mov
mov
add
jl
mov
add
add
mov
add
pop
jecxz,pt
push
adc
cmpsl
pop
add
add
add
cmc
ja
pop
or
aas
mov
repz
movsb
imul
ss
mov
add
add
push
je
push
jp
mov
pop
gs
arpl
jg
aam
aad
jo
outsl
gs
add
add
add
add
in
dec
push
fstpl
sub
add
inc
daa
shll
movb
mov
loop
push
insb
mov
pop
popa
cmp
mov
pop
lock
push
imul
add
add
pop
imul
add
add
add
add
jge
sar
je
mov
mov
pop
sbb
cmpsl
adc
and
add
add
std
fs
pushf
push
or
aam
and
lret
int3
lret
dec
xorb
xor
push
xchg
mov
mov
inc
sti
andb
dec
mov
mov
dec
lock
jne
mov
repz
push
pop
add
add
add
add
cmpsb
test
addl
movsb
mov
mov
insl
loop
dec
jmp
mov
push
dec
mov
sub
add
add
push
xchg
add
dec
jno
pop
dec
lret
pushf
cmp
addr16
dec
jle
mov
in
andb
add
add
outsb
cli
xor
aas
lods
repnz
add
add
sbb
clc
add
adc
daa
into
aas
cs
sub
add
add
add
add
push
ss
xchg
loop
xor
push
daa
jae
mov
cs
in
and
mov
lcall
aad
cli
fisubs
and
add
add
rclb
add
add
stc
nop
jae
int3
jg
repz
dec
test
pop
out
ret
outsl
xchg
jge
mov
adc
dec
and
aaa
std
cld
bound
xchg
aas
sbb
push
test
subb
cld
inc
mov
cmp
ficoms
rcl
xchg
jbe
shll
cmc
test
cmpsb
adc
sar
lds
add
add
add
add
add
add
pop
sub
add
add
pop
stc
movsb
mov
test
dec
mov
jecxz
mov
mov
daa
xchg
jbe
sbb
scas
xor
inc
cmp
add
add
add
add
dec
add
add
shr
mov
push
xorb
xchg
cmpps
cltd
in
pop
mov
sti
test
mov
jo
mov
lret
adc
lds
or
push
clc
jmp
mov
inc
mov
jo
xor
insb
add
add
pop
test
lahf
jnp
inc
sub
add
add
je
sbb
sti
push
dec
add
add
sti
fwait
mov
and
xchg
pop
add
add
out
insb
mov
cmp
das
push
cmc
lods
test
or
add
add
lret
out
add
add
je
add
or
add
add
pop
ds
mov
pop
sub
xchg
sbb
sbb
enter
add
add
sahf
push
das
fistpl
lahf
adc
cltd
sbb
add
in
xchg
or
scas
rol
imul
or
add
imul
xchg
test
add
add
mov
outsl
fdivl
xor
adc
mov
iret
outsb
pop
jae
mov
add
add
mov
pop
addr16
mov
subb
cmp
jge
or
daa
sti
inc
xorl
je
fidivs
jnp
mov
sar
lret
stc
mov
inc
js
or
push
inc
add
add
lahf
test
dec
mov
mov
pop
mov
mov
fxch
lods
mov
jmp
pop
jmp
dec
mov
mov
call
in
dec
movsb
add
mov
sub
mov
scas
add
add
add
pop
add
xor
push
int3
dec
ljmp
pop
ds
cmp
add
add
push
push
add
add
imul
je
dec
cmpsb
mov
out
stos
mov
jns
fcmovnb
sub
add
add
int3
pusha
add
add
mov
add
add
mov
movsl
push
popa
xchg
cmp
push
jno
push
sti
ret
and
sbb
inc
mov
add
aas
lret
sbb
outsb
inc
les
push
mov
lcall
xlat
adcl
add
pop
add
clc
inc
cmp
ret
xchg
test
scas
lods
mov
xchg
or
inc
in
mov
add
mov
add
mov
sbb
xchg
hlt
pusha
mov
daa
dec
sbb
mov
add
push
jnp
adc
or
cmp
add
add
fdivs
clc
xchg
inc
add
add
ss
add
out
iret
jb
test
scas
xchg
push
outsl
je
leave
xchg
insb
mov
jbe
jmp
pusha
add
add
ret
mov
sbb
or
add
add
mov
add
inc
imull
add
add
or
mov
add
add
dec
dec
je
arpl
xlat
add
shll
ficoms
jne
iret
cmpsb
or
add
add
add
add
les
out
int3
mov
mov
jb
les
or
add
test
sahf
fcomps
pop
dec
loop
sbbl
xchg
and
add
add
jno
fidivrs
add
stos
lret
add
shlb
lahf
stos
int3
mov
and
mov
and
add
add
add
rolb
fcompl
pop
xor
inc
sbb
add
mov
mov
in
adcl
fdivrs
hlt
add
add
iret
jne
push
shrb
add
test
movsb
jns
jg
mov
mov
movl
test
int3
ja
or
sub
orl
dec
imul
push
cltd
mov
jnp
aaa
clc
add
add
add
in
pop
xor
cs
inc
add
add
rcr
xorl
adc
and
jbe
push
cmc
fsubrs
add
cmp
mov
push
icebp
jns
test
in
ret
add
add
out
mov
das
jecxz
fidivrl
add
add
add
lods
sub
xchg
push
arpl
ret
cwtl
dec
or
pop
cli
lods
mov
mov
rorb
mov
stc
insb
add
add
subl
pop
dec
push
adc
xchg
inc
pop
add
add
add
mov
imul
lahf
pop
or
xor
fucomp
xor
add
cld
add
inc
mov
sti
shrl
mov
xor
add
mov
ja
out
fsubr
insb
add
add
sahf
xchg
popa
sahf
xor
inc
or
imul
mov
adc
rolb
nop
xchg
cmp
mov
cmp
add
add
ljmp
fsub
lahf
add
add
add
ret
stos
fnstenv
sub
int3
jb
or
mov
adc
add
add
mov
mov
iret
imul
aam
out
dec
mov
push
lock
push
push
popa
and
sub
std
insb
mov
mov
add
add
add
xor
mov
into
mov
mov
cwtl
mov
jle
aam
sbb
popa
lahf
xor
mov
jb
mov
mov
pop
jb
adc
pop
out
fimull
fistpll
data16
xchg
aas
xor
add
inc
jecxz
iret
sub
adc
mov
cmp
stc
push
mov
mov
add
add
mov
and
scas
xlat
icebp
mov
mov
andl
clc
mov
idivb
mov
cwtl
enter
dec
mov
std
xor
pop
test
jo
outsb
pop
in
jmp
fcomps
sbb
pop
pop
ss
cmpsb
or
add
add
imul
mov
ljmp
add
inc
cmp
adc
add
add
outsb
mov
imul
xor
cli
std
jns
mov
mov
xor
jne
ljmp
and
fwait
popf
stos
nop
pop
test
mov
and
push
icebp
mov
mov
push
sbb
popa
popa
nop
sub
inc
xlat
aaa
adc
pop
sub
mov
das
int3
lds
mov
jecxz
mov
fldcw
add
mov
push
jno
imul
fnstenv
pop
pushf
leave
add
add
mov
sbb
add
push
cld
arpl
and
lcall
stos
push
shll
add
add
scas
cmpsb
sub
add
add
pop
dec
xchg
sti
jne
stos
daa
scas
imul
pop
push
pop
leave
add
test
xorb
arpl
add
jno
jns
stc
stos
icebp
test
cmpsl
dec
mov
insl
cmpsl
adc
jecxz
sti
pushf
sub
add
add
xchg
push
dec
mov
inc
mov
xchg
cmp
cmp
xchg
sbb
add
mov
bound
cltd
jb
cmc
scas
iret
enter
add
add
add
add
and
add
add
cmp
rorb
add
add
add
xor
push
push
testb
insl
stos
dec
pop
addl
das
imul
pop
notl
sbb
add
xchg
cmc
mov
frstor
shrb
lahf
das
or
add
add
add
add
movq
sbbl
iret
fdivrl
jb
add
add
xor
sti
pop
inc
push
rolb
lcall
rep
hlt
mov
cmpb
adc
add
add
movsl
mov
in
outsl
xor
push
mov
leave
lahf
imul
pop
lahf
jb
and
add
add
add
add
mov
in
out
sbb
sahf
sarb
and
add
add
add
xchg
sbb
jle
cmpsl
sbb
fnstenv
lods
dec
jmp
xchg
push
shl
pop
pop
loopne
mov
pop
out
and
or
call
add
add
add
add
arpl
add
pusha
mov
mov
scas
inc
or
pop
bound
outsb
jle
add
add
jg
adc
pop
mov
shrb
add
add
mov
sbb
add
add
add
add
or
add
add
or
add
add
call
daa
mov
ja
cmp
add
xchg
pop
lea
dec
inc
mov
mov
sub
ljmp
mov
inc
addl
ret
scas
inc
push
cmp
ret
hlt
inc
pushl
imul
mul
push
fdivl
cmp
imul
adc
insb
add
add
jmp
mov
mov
dec
scas
insb
add
add
arpl
add
push
cmp
in
xchg
or
test
mov
test
mov
jns
sub
bound
add
add
adc
add
add
mov
add
cld
push
sbb
mov
outsb
jp
pop
ljmp
add
add
xor
mov
jno
adc
dec
add
add
add
test
jno
push
push
clc
sub
cmp
add
add
filds
add
add
rcrl
das
cld
xchg
jp
out
sbb
jmp
arpl
add
add
into
push
add
out
mov
cld
repz
add
call
add
addr16
mov
hlt
lds
xchg
xchg
add
add
add
cmp
adc
sbb
fldenv
mov
je
addr16
add
add
out
std
sbb
cmp
roll
rorl
mov
pop
aam
inc
insb
add
add
mov
and
add
add
or
push
aad
sbb
decb
mov
jae
fsubrl
add
add
mov
mov
ret
push
insl
cmc
sbb
dec
xlat
out
push
sbb
mov
jmp
mov
dec
ljmp
inc
add
add
mov
nop
popf
fistpll
jle
jno
std
lcall
call
cmpsl
and
mov
mov
pushf
dec
or
add
add
dec
sahf
add
pop
aas
mov
add
int3
xor
clc
fisubs
mov
or
or
lods
sbb
idiv
and
add
add
add
add
push
sahf
inc
test
add
add
scas
push
mov
jbe
mov
int
je
mov
pop
jle
mov
psubb
push
sub
jne
cmp
std
pusha
add
add
mov
add
add
call
ss
cmc
outsl
test
add
cs
adcl
mov
testl
sub
xchg
dec
leave
arpl
push
cmp
adc
fsubs
imul
insb
mov
mov
cli
inc
insl
imul
popf
inc
sub
add
add
add
add
pmuludq
ljmp
add
sub
mov
ds
in
xchg
and
xchg
repnz
add
add
test
push
stc
pop
mov
xor
xchg
mov
jb
outsl
sbb
stos
or
mov
sbb
sub
add
add
dec
out
add
dec
subl
cmpsb
cbtw
mov
mov
mov
movsb
fildll
add
add
mov
mov
pop
jnp
lods
dec
gs
sbb
test
hlt
repz
pop
mov
add
cs
dec
mov
enter
xor
cmp
movsb
or
mov
cmp
push
sbb
push
mov
loopne
add
add
std
add
pop
out
pop
in
push
sub
add
add
dec
cmp
adc
adc
adc
add
add
add
sti
enter
adc
fldenv
test
repnz
call
jno
mov
sub
add
add
es
pop
mov
sub
mov
shrb
and
add
add
jle
pop
aad
mov
mov
ja
inc
push
xor
repnz
pop
fcomps
test
adc
add
test
fstps
inc
mov
lcall
add
xor
je
fs
jp
mov
fsubs
mov
xchg
adc
mov
push
gs
sti
add
mov
add
sub
push
test
cmp
xchg
icebp
iret
cmp
dec
movsl
es
test
fnstsw
data16
sub
add
add
cmp
fldl
ret
dec
sbb
lcall
fiaddl
daa
call
xor
xchg
lret
xchg
inc
sub
pushf
mov
inc
add
add
cmp
mov
or
daa
jns
cmp
xor
sub
lock
movsl
mov
insb
add
add
jecxz
stos
daa
js
imul
mov
insl
jecxz
xchg
mov
push
insl
sub
add
add
mov
add
fistps
add
sub
add
add
mov
mov
and
add
add
orl
xchg
cmp
adc
insb
mov
and
add
add
stc
inc
mov
inc
rclb
cmp
sbbl
inc
orl
iret
arpl
pop
xchg
filds
cmp
loop
mov
xlat
sbb
cmp
mov
jl
in
test
add
or
lahf
sbb
lret
sub
mov
add
idivl
jb
push
jg
gs
inc
dec
add
add
mov
push
ss
dec
ja
dec
imul
ret
das
jnp
sub
pop
or
add
add
lea
fdiv
out
test
int3
out
iret
test
test
add
sbb
add
add
test
add
pop
inc
outsb
shlb
jbe
and
add
add
inc
cmp
jo
sbb
dec
sti
cld
pop
aaa
cmovp
lods
fidivl
mov
inc
lsl
sbb
xchg
in
fcomps
outsb
jecxz
or
push
fidivrs
jb
enter
push
mov
movsb
dec
add
add
rcl
test
xchg
lcall
icebp
jle
lock
loope
pop
stc
stc
ficomps
cmp
add
cwtl
pop
lret
stos
sbb
stos
test
adc
sbb
or
add
add
xchg
pusha
mov
dec
pop
mov
mov
mov
add
fs
push
sub
pop
push
mov
add
pop
mov
bsr
xor
mov
add
fwait
or
bound
test
add
xchg
cmp
add
sbb
add
icebp
ljmp
pop
xchg
repnz
testb
inc
sub
mov
xchg
jp
test
fwait
pushf
in
pop
std
pop
jns
fidivrl
add
mov
mov
scas
call
lea
test
push
aam
mov
add
sub
add
add
lods
pop
dec
sbbl
push
lcall
sbb
or
rorl
jne
shrb
daa
arpl
dec
add
add
test
mov
rolb
add
repz
ja
mov
or
add
add
sbb
leave
sbb
lds
sbb
mov
push
lcall
add
add
push
xchg
sbb
sbb
out
and
xlat
cmpl
popf
push
and
mov
dec
mov
mov
lds
dec
add
add
arpl
inc
insb
add
add
mov
popf
jle
inc
mov
pusha
mov
leave
aas
mov
out
aaa
adc
cmp
or
pop
or
mov
pop
mov
adcb
insl
ret
inc
leave
dec
push
dec
mov
ja
jecxz
shll
cmp
inc
pop
aaa
pop
lods
add
and
add
add
push
sub
mov
mov
push
add
faddp
daa
cltd
mov
add
pop
test
cmpb
daa
insl
jno
lret
mov
mov
adc
push
inc
sarb
mov
sbb
fbstp
jle
xchg
or
add
add
xchg
mov
ja
ret
out
and
xor
xlat
sub
add
pop
ds
stc
push
fiaddl
push
cmp
test
add
add
sub
cltd
pop
neg
scas
mov
pushf
gs
mov
push
je
add
add
dec
bound
sub
add
add
ss
push
movsb
fcompl
mov
mov
sbb
enter
add
cltd
jl
stc
sbb
dec
fdivr
mov
inc
mov
xor
dec
stos
add
cmp
mov
mov
shrb
mov
movsb
xor
mov
inc
mov
cmp
inc
imul
loop
out
adc
push
and
pop
jnp
cmpsb
and
xor
mov
inc
in
and
add
loope
mov
add
sbb
pop
enter
add
nop
jl
push
in
xchg
insb
mov
std
sub
add
add
out
movsb
jge
shlb
inc
add
cmp
into
call
add
add
push
stos
mov
dec
mov
sahf
adc
add
add
or
decl
add
jp
dec
cmp
into
pop
mov
loope
test
and
mov
push
bound
xchg
in
int3
push
imul
out
sti
push
lock
dec
add
add
mov
sti
push
sub
add
add
inc
call
xchg
xchg
mov
or
add
add
jbe
pop
xor
cmp
add
add
mov
ljmp
add
dec
dec
test
pop
sahf
adc
clc
popf
jmp
fwait
lret
fisubs
imul
add
add
adc
jo
cmc
movlps
jmp
or
out
push
rorb
aad
mov
mov
lea
inc
divb
adc
push
lcall
xor
cwtl
jecxz
xchg
add
add
mov
testl
sbb
mov
add
inc
cld
cmp
in
mov
sbb
cmp
adc
push
and
inc
mov
int3
ss
pushf
into
mov
adc
js
xchg
mov
js
inc
mov
xor
pusha
add
add
jp
js
daa
jno
outsl
call
adc
or
add
add
sub
movsb
inc
das
or
add
add
mov
mov
mov
dec
daa
fs
add
inc
add
add
push
aas
cmc
cmp
gs
push
hlt
into
sub
in
dec
inc
mov
movsl
outsl
popa
stc
dec
sub
mov
xchg
inc
mov
push
int3
sahf
or
pop
insb
mov
nop
push
cmp
ss
mov
adc
sub
add
add
push
mov
adc
and
add
add
add
add
xchg
popf
popf
pop
andl
daa
jl
mov
push
cmc
pop
add
add
add
adc
add
add
add
jmp
add
dec
add
add
pop
cmp
punpcklbw
jbe
add
add
popa
jo
dec
fwait
nop
mov
add
add
push
jmp
gs
xchg
lods
cmc
lock
mov
dec
mov
das
mov
jmp
xchg
flds
mov
push
sbb
arpl
aas
sub
jecxz
inc
addr16
in
addr16
jbe
sub
add
add
dec
lock
xchg
ret
jle
test
add
add
cld
lahf
add
out
xchg
xor
add
xchg
lret
neg
inc
adc
out
stos
lock
cmp
mov
adc
pop
jns
mov
int
xchg
adc
loop
adc
mov
xor
cmpsl
xor
push
xchg
les
sub
add
add
push
test
jns
pop
pop
dec
lahf
arpl
sbb
cmp
adcl
fcomip
lock
mov
fldenv
add
outsl
push
mov
mov
test
adc
hlt
adc
add
add
add
mov
mov
add
add
sub
lock
jo
sub
add
add
addr16
add
add
push
mov
mov
add
cmpsb
out
xor
mov
in
pop
dec
in
pushf
cwtl
les
inc
bound
push
hlt
add
jl
xchg
cmp
sbb
scas
mov
or
stc
and
add
add
cmp
pop
mov
fcmovbe
mov
or
add
add
add
add
sub
icebp
rcrl
aad
push
sbb
popa
dec
mov
xor
pusha
add
add
in
and
mov
fyl2x
enter
sub
jns
mov
add
add
loope
push
bound
sbb
or
add
add
add
add
sub
add
add
imul
mov
lods
add
or
call
mov
jecxz
cmc
pop
loope
adc
mov
or
xor
mov
lods
xchg
cmp
clc
add
cltd
scas
imul
sarb
test
leave
insb
mov
and
and
repz
nop
iret
int3
or
mov
repz
pushf
cmp
test
in
mov
jmp
inc
add
add
xchg
jl
jb
cli
sbb
lods
sbb
xor
xchg
adc
je
dec
dec
stos
adc
add
add
add
add
fs
xor
push
mov
sbb
xchg
jmp
mov
push
sub
popf
or
ja
nop
cmp
dec
inc
iret
psubq
pop
adc
sbb
inc
mov
movsl
inc
stc
mov
nop
jge
scas
mov
iret
pop
adc
pop
or
pusha
add
add
xor
pop
mov
add
add
add
clc
loope
push
loop
popa
add
int3
stos
loope
mov
add
add
pushf
hlt
sbb
std
jno
jbe
aas
clc
adc
lahf
or
add
add
inc
pop
mov
jp
sub
add
add
cmp
sbb
popf
xchg
push
cmp
push
sbb
inc
test
daa
sarl
insl
mov
cli
fsubrs
add
add
bound
leave
in
or
fsts
push
mov
repz
add
pop
cmp
xor
push
fistps
push
sti
mov
repnz
add
add
js
xor
dec
xor
mov
push
xor
mov
jle
mov
ljmp
arpl
or
add
add
push
ret
int
lock
addr16
inc
cmpsb
push
sti
lret
mov
xchg
xor
xchg
iret
movsl
movsl
gs
add
sbb
add
add
mov
add
add
mov
and
pop
lret
add
add
add
add
add
cwtl
xor
add
add
and
repz
mov
sub
enter
cmc
pop
mov
pop
dec
add
add
mov
adc
xchg
adc
cwtl
cli
fst
adc
pop
cmp
es
add
data16
pop
mov
mov
adc
divl
mov
pop
stos
adc
imul
jmp
add
add
mov
rorl
jecxz
dec
inc
add
add
pushf
stos
xor
lods
cltd
repnz
orb
mov
add
add
xchg
imul
test
mov
dec
js
fsubp
das
loope
sbb
or
mov
or
add
add
add
add
cs
data16
sbbl
repz
xor
xor
in
sub
add
add
push
aas
and
int
and
add
push
or
pusha
add
add
inc
sbb
and
add
adc
sub
dec
mov
in
mov
lock
jecxz
sbb
arpl
mov
mov
jb
mov
in
fstps
sub
add
add
pop
jl
pop
in
add
add
sub
mov
js
fsubl
mov
pop
dec
push
jp
test
lcall
mov
pop
inc
sub
es
inc
xor
cmp
lahf
clc
out
inc
adc
das
fisttpl
add
add
pop
fwait
mov
push
or
cmp
popa
sarb
adc
lahf
inc
dec
gs
mov
mov
jb
sbb
add
ficoms
shrl
add
dec
ds
inc
scas
mov
add
sbb
ja
cmp
dec
add
add
jne
sub
fimuls
add
add
add
in
in
mov
mov
cmc
mov
mov
or
or
add
add
sub
add
add
pop
mov
rorl
sub
add
in
lahf
mov
lret
sub
add
add
imul
lahf
adc
add
jg
aam
out
push
popa
adc
psrad
loope
outsl
lret
add
add
add
add
popf
cmc
mov
out
out
cmpsb
out
stc
iret
dec
mov
xor
rolb
add
movsl
hlt
mov
adc
bound
jae
and
add
add
dec
popf
add
add
add
pop
popf
mov
push
push
xor
clc
mov
push
xor
aam
jno
int
sbb
adc
add
add
dec
add
add
mov
add
add
daa
sbb
enter
and
add
add
adc
xchg
fidivrs
loopne
cmp
aas
mov
pop
psllq
lods
sbb
test
add
repz
cwtl
pop
cbtw
inc
adc
mov
andb
or
outsl
js
mov
cmp
pop
cmp
jl
add
add
fsubrs
and
push
and
add
add
fdivl
cmpxchg
add
repz
es
int
sbb
cs
std
cli
inc
dec
mov
js
mov
and
add
add
lret
mov
mov
jp
icebp
andb
cwtl
in
aas
das
pop
imul
pop
ljmp
mov
mov
ljmp
add
add
add
mov
add
xor
add
add
in
ss
inc
mov
lods
outsb
lea
int
mov
mov
mov
add
add
repnz
repz
inc
add
add
fimull
xchg
loope
dec
jmp
pop
mov
ret
fldt
out
sbb
mov
pop
lods
mov
enterw
jle
movl
lahf
mov
cmp
inc
lds
les
add
fisubrl
mov
addr16
das
decb
dec
mov
or
add
add
iret
inc
das
imul
pand
ret
cmp
leave
cmp
mov
jno
jns
adc
add
mov
add
ret
or
mov
test
add
xchg
jbe
add
and
adc
in
push
push
sbb
orb
push
mov
pop
sbb
rorl
add
in
int
add
add
add
mov
sub
jns
out
sbbb
ficoms
and
mov
popf
and
add
add
inc
push
rolb
xchg
movsl
mov
lret
imul
mov
ja
int
and
add
dec
mov
mov
sahf
xchg
hlt
dec
testl
add
add
je
stos
std
and
push
mov
gs
pop
dec
aam
xchg
lods
sti
fwait
out
testl
sub
stc
ror
int3
sub
loopne
and
add
add
add
add
ja
push
lods
mov
pushl
jno
dec
mov
ret
dec
mov
icebp
hlt
sbb
sbb
mov
ss
push
push
subl
mov
cwtl
pusha
mov
ss
cld
mulb
cld
aaa
xchg
repz
in
jg
les
mov
lret
into
lods
sbb
iret
imul
sbb
sub
add
add
inc
add
add
add
retw
int
ds
sbb
xor
into
or
jns
mov
aad
mov
cld
mov
mov
sahf
pop
and
add
add
leave
aas
mov
fstl
cmpsb
test
fsubs
dec
push
pop
fcmovu
pop
scas
mov
out
sbb
je
push
std
jg
fstpt
mov
mov
es
or
add
add
pop
sahf
movsl
repz
scas
sbbb
lods
jmp
pop
dec
push
pusha
add
add
lret
scas
mov
pop
std
rolb
jl
movsb
inc
sub
or
add
add
pop
jmp
test
aaa
jp
cld
or
add
add
add
add
jns
inc
add
add
mov
mov
xchg
add
cmpsl
jbe
fisubs
mov
loop
pop
js,pt
add
add
stos
daa
dec
push
test
insl
fsubs
inc
nop
push
cmp
call
lret
and
add
add
add
add
and
add
add
or
push
xor
sub
sbbb
das
sarb
xchg
fimuls
fwait
dec
xchg
xchg
and
mov
loop
in
test
adc
push
mov
cmp
add
add
out
clc
inc
mov
dec
xchg
popa
xorb
mov
int
dec
mov
mov
inc
sbb
and
add
addr16
jno
daa
ds
dec
add
add
dec
mov
sub
cmovae
inc
push
jo
ret
dec
stos
clc
ss
mov
adc
mov
dec
push
push
lods
les
xchg
push
stc
lret
pop
xor
add
stos
loop
test
add
pop
stos
mov
xor
xor
sub
add
add
jb
add
fdivrs
xor
xchg
cmpsl
rcrl
inc
add
add
fs
cmpsl
xlat
mov
inc
or
cmp
pop
cmp
in
pop
cmc
out
js
inc
mov
lret
loope
sahf
mov
add
add
mov
pop
sub
xchg
inc
out
repz
shlb
add
jl
andb
pop
push
or
add
add
addr16
outsl
push
xchg
lds
push
xchg
daa
add
add
add
rcr
adcl
leave
clc
add
add
fdivr
add
add
add
sbb
xchg
add
and
add
add
pushf
bound
ret
sti
in
xchg
xor
mov
inc
mov
mov
rorb
add
add
fdivl
push
dec
fistps
dec
dec
xchg
ljmp
adc
dec
popa
fisttpl
adc
mov
inc
push
xchg
adc
add
add
sbb
jmp
add
int3
cmpsl
mov
add
add
loopne
xor
add
add
xchg
xor
cltd
lcall
adc
adc
mov
inc
int
orl
lods
loop
lea
xchg
sub
xor
daa
jg
int3
dec
add
add
negl
test
adcb
movsb
lods
cltd
mov
xchg
jne
inc
jl
arpl
pushf
mov
test
mov
xchg
and
or
pop
cmc
mov
add
add
add
sbb
jno
push
pushf
mov
int
in
xor
add
das
outsb
push
jns
add
repz
movsb
iret
add
cmc
cli
daa
mov
mov
mov
or
outsb
mov
add
cmp
push
stc
sahf
jg
mov
daa
push
sub
pop
sub
sub
jbe
lahf
repnz
mov
mov
gs
cmpsl
mov
or
dec
sbb
add
jae
inc
sysexit
je
mov
fwait
or
mov
mov
cmp
add
add
add
or
movl
cwtl
adc
dec
aad
movb
add
pop
mov
add
adc
pop
mov
sahf
xchg
popf
push
dec
mov
bound
movsb
mov
sbb
aas
pxor
or
add
jbe
add
fstpt
xchg
mov
push
jmp
xor
in
add
sub
add
add
ja
cwtl
fcoms
cld
rcrb
sarb
mov
push
push
rcll
cwtl
mov
sub
xchg
cld
cmp
scas
ds
xchg
fsincos
pop
sbb
add
push
insb
mov
xchg
and
sbb
aas
pop
inc
loop
push
outsl
shlb
lea
call
add
je
push
dec
mov
fwait
xchg
orb
and
add
add
sbb
shl
cltd
adc
cmc
data16
add
add
mov
add
push
adc
add
add
testb
add
gs
add
add
aad
mov
ret
in
pop
mov
add
and
dec
popf
addb
jo
or
push
std
cmp
and
add
arpl
sti
adc
arpl
adc
daa
xchg
pushf
xor
add
add
mulb
addb
mov
mov
mov
add
add
mov
add
cmp
pop
stos
pop
icebp
lcall
jp
daa
sub
jb
mov
gs
dec
js
jmp
pop
rcr
das
mov
add
add
insl
scas
pop
inc
iret
and
add
add
les
shlb
adcb
cmp
and
sub
inc
dec
mov
add
add
add
add
mov
mov
xor
add
add
cmc
fstpl
jmp
ljmp
int3
movsb
adc
add
add
addr16
or
add
add
cwtl
push
fisttps
mov
adc
ret
ret
mov
pop
jno
and
add
add
xchg
stos
or
test
test
jmp
movsb
dec
mov
xchg
jmp
mov
sbb
dec
add
add
daa
aas
pop
xor
add
add
sub
jae
or
dec
jge
xchg
add
inc
xchg
test
sbb
mov
add
add
mov
jp
cmp
pop
sub
jnp
insl
fildl
ljmp
add
gs
or
out
xlat
fisubs
negb
mov
and
into
loope
repz
add
mov
sub
xor
or
inc
insb
add
add
cmc
and
add
add
or
add
add
clc
data16
negl
adc
sub
insl
mov
lds
sub
add
add
jg
xchg
outsl
pop
in
or
add
add
mov
popf
push
inc
jl
ds
cmp
inc
mov
push
sub
lahf
pop
ret
dec
push
pop
pushf
sbb
mov
add
jl
cmpsb
sub
add
add
test
lret
js
sar
add
pop
jmp
gs
xchg
xchg
sbb
mov
inc
add
add
push
dec
mov
mov
pop
or
add
out
rol
pop
inc
sbbl
inc
add
jne
mov
cmpsl
repz
cmc
je
pop
lods
mov
cmp
fadd
in
imul
bnd
mov
gs
mov
or
add
add
cltd
push
jo
mov
inc
mov
or
add
add
loopne
sahf
fistpll
add
add
sbb
fnstenv
add
mov
mov
outsl
pop
add
add
insb
add
add
mov
addb
mov
mov
iret
jmp
aas
sub
lods
bound
scas
xchg
roll
add
add
pop
adc
add
jl
or
sub
mov
mov
pop
loop
push
pop
test
adc
mov
jo
insl
mov
pop
pop
or
mov
js
add
decl
add
cmc
jmp
dec
add
ret
lret
out
mov
rorb
cmp
or
std
xlat
out
aam
mov
movsb
das
add
add
add
add
add
add
mov
push
gs
add
mov
scas
dec
jbe
adc
pop
aam
push
imul
mov
imul
inc
mov
call
push
pushf
dec
movsl
jmp
add
sarl
cmp
test
ds
push
sub
lea
pop
stc
mov
and
filds
je
mov
jne
and
add
add
ds
add
xor
xchg
sbb
jns
mov
popfw
adc
add
add
pop
call
das
mov
mov
push
ret
sbb
push
fwait
popa
adc
adc
push
insb
add
add
mov
xor
fcmovnb
stc
and
add
add
mov
dec
bound
add
cmpsb
adc
loope
jb
sbb
out
lods
out
mov
enter
sub
add
add
mov
mov
xor
inc
les
mov
or
xlat
cs
adc
and
add
add
pop
loopne
dec
mov
pop
add
mov
xlat
xlat
insl
inc
mov
pop
int3
test
lret
cmc
sbb
push
ret
and
add
add
repz
sub
add
add
cmp
adc
cmpsl
rol
rorl
add
add
int3
xor
pop
and
mov
mov
pop
mov
add
add
cli
inc
dec
sahf
xchg
jp
mov
xor
jno
daa
inc
repz
add
sbb
jmp
iret
xchg
sbb
je
dec
jbe
lret
mov
pushf
lods
mov
add
add
mov
adc
or
ds
push
out
xor
sahf
push
push
adc
add
daa
lds
push
addl
push
sub
pop
jae
sub
xchg
or
add
add
test
add
add
mov
adc
outsl
pandn
inc
fdivs
mov
inc
jmp
add
add
mov
add
add
insb
add
add
mov
xor
or
gs
xor
fwait
nop
jp
call
pop
inc
lret
cwtl
push
out
push
cmpsb
cvtps2pi
push
push
add
sub
pop
pop
leave
test
push
pop
mov
jbe
jg
dec
pusha
add
add
pop
outsl
mov
dec
cmp
jno
or
add
add
push
ror
enter
sub
add
add
adc
mov
out
xchg
ljmp
add
leave
aaa
dec
aaa
push
adc
cmp
cmpsl
jb
mov
cwtl
aas
sbb
dec
dec
mov
inc
notl
add
clc
jb
pop
sbb
fidivrs
xchg
daa
stos
push
mov
std
pusha
add
add
lea
repz
mov
dec
mov
cs
push
lahf
pop
aaa
xlat
push
iret
xor
lea
add
add
add
add
mov
mov
push
subl
outsl
inc
popa
and
mov
sub
pop
std
mov
dec
jmp
icebp
add
add
add
fildl
mov
inc
add
add
add
xchg
int
fucomp
rorl
mov
inc
jle
add
or
adc
mov
mov
jle
imul
jp
rcrl
stc
adc
push
sbbl
pop
lahf
mov
push
sub
rolb
add
leave
adc
jmp
add
add
add
sub
push
out
fnsave
shr
sub
cmpsl
out
out
cmp
push
sub
add
add
add
add
dec
add
add
or
add
fstps
pop
out
sbb
cmpsb
mov
outsb
ss
inc
add
add
loopne
rcrb
jne
mov
adc
inc
inc
popf
lds
mov
sub
add
add
inc
test
sub
add
add
mov
xor
mov
mov
gs
mulb
add
test
cwtl
xor
add
add
es
testb
cmpsl
fbld
push
cmp
hlt
jne
cmp
inc
add
add
rorb
loop
pop
subb
add
sub
or
mov
jp
lods
sbb
mov
aad
into
outsl
mov
stc
fisubrl
aaa
sub
repz
aad
sarl
mov
iret
push
vpmaxub
jbe
cwtl
testl
pop
inc
mov
add
add
add
cmp
cmp
movsl
mov
call
add
ja
stos
mov
add
add
ret
std
xor
add
add
icebp
mov
loopne
inc
rol
outsb
push
push
out
ss
andb
cmp
test
mov
or
xor
test
pushf
xor
add
cld
mov
es
cmp
jbe
mov
mov
rcr
xchg
pushf
jle
push
ja
lahf
cmp
out
cmp
repz
dec
or
clc
lea
xor
fidivl
ret
clts
incb
mov
push
sti
test
mov
xor
cmp
sub
xchg
leave
mov
leave
or
insb
mov
clc
ret
mov
int
scas
cmp
fwait
push
inc
jb
lods
jae
sbb
add
test
push
stc
test
enter
stos
stos
xor
cmpsb
or
enter
xor
or
mov
test
ljmp
sti
aas
mov
add
xchg
cltd
loope
rcll
push
call
xchg
int
xchg
inc
add
add
fildll
lahf
mov
insb
mov
int
cmc
in
cmp
sbb
pop
int3
pop
out
cmc
insl
sub
sbb
cmp
jno
loopne
out
pop
push
hlt
jmp
orb
mov
dec
or
xchg
mov
pop
cmpsb
add
add
add
pextrw
lcall
push
jl
mov
mov
mov
stc
fisttpl
xor
fdivrs
mov
and
jmp
add
add
and
add
add
loopne
sbbl
add
idivl
sar
or
jg
call
ret
pop
and
add
add
fwait
mov
movsb
jne
movsl
push
js
dec
fcomi
mov
mov
or
add
add
jge
add
add
dec
mov
cmp
inc
iret
hlt
sbb
mov
test
jg
icebp
jp
or
cmp
lods
add
add
inc
lret
sub
add
add
mov
add
and
lcall
push
or
add
add
mov
add
push
inc
jmp
out
and
add
add
dec
jno
mov
loopne
sbb
addl
add
add
add
aaa
loop
xchg
mov
add
xchg
out
push
inc
test
and
add
add
dec
repz
add
cmp
add
add
popa
sti
popf
loope
cmc
fs
push
lods
icebp
scas
mov
add
add
sbb
mov
icebp
jge
cmp
dec
cmp
testl
aad
and
aam
popa
inc
push
mov
xorb
js
xchg
xchg
mov
sub
pusha
add
add
cmp
aad
push
jo
sub
aaa
icebp
add
add
add
pop
fnsaves
lods
sub
add
add
mov
add
ds
arpl
stos
or
push
mov
dec
stos
jno
xor
jo
xchg
inc
gs
hlt
xor
dec
add
add
push
cmpsb
stc
enter
mov
fidivrl
or
add
add
or
lock
inc
mov
in
cmp
or
inc
xchg
pop
push
cld
xchg
inc
adc
pop
jg
repz
es
add
movsb
mov
out
sub
add
add
stc
add
movsl
faddp
ss
and
add
add
nop
int
mov
adc
psubusb
add
add
adc
inc
xor
add
add
fbld
add
add
add
sti
mov
dec
add
add
inc
add
add
fiadds
inc
dec
aas
jmp
dec
mov
ss
sub
add
add
ja
sub
dec
jno
sbb
pushf
fisttpl
mov
adcb
pop
push
rcll
mov
sbb
mov
sub
pop
mov
xorl
add
scas
mov
mov
or
add
add
sbb
jmp
dec
mov
into
mov
xchg
aad
sbb
test
mov
lock
mov
pop
lcall
ret
mov
mov
mov
add
add
jbe
cltd
cs
std
std
addr16
add
aaa
dec
adc
aad
fucomp
jnp
addr16
pop
es
cmpsl
push
add
jge
mov
outsl
mov
pop
ljmp
add
add
ud2
inc
mov
mov
add
add
jbe
ja
sub
cli
dec
mov
xor
mov
xchg
das
aam
imul
lcall
cmp
pop
js
mov
rcr
cld
test
cmc
dec
add
add
jnp
jecxz
mov
add
add
dec
sub
and
test
int3
xor
inc
push
inc
add
add
xor
mov
pop
dec
int
sbb
or
add
add
aaa
sub
lret
fdiv
les
stos
test
mov
xchg
jae
inc
int3
push
add
add
or
add
add
fbstp
push
mov
inc
mov
outsb
mov
repnz
insb
mov
out
das
or
add
add
push
aaa
pushf
dec
jns
xor
mov
shlb
shll
pusha
add
add
push
pusha
mov
cmp
data16
sarl
push
std
es
mov
sub
add
push
or
add
add
jb
mov
and
cmp
divb
in
pushf
dec
rcrl
add
test
mov
mov
push
push
push
xchg
and
jne
jg
loopne
out
insl
xor
push
jne
aas
pop
insb
mov
dec
jae
dec
mov
pop
lock
into
test
sub
mov
or
mov
ljmp
ja
gs
dec
mov
and
mov
add
add
push
leave
jb
les
add
add
add
clc
xchg
jge
in
and
add
add
movsl
outsb
into
test
jnp
xor
add
imul
pop
insl
add
add
add
rolw
nop
mov
int
mov
add
xor
jb
daa
pushw
outsb
xchg
out
sub
push
jbe
sub
add
dec
mov
imul
div
dec
ljmp
dec
aaa
arpl
cmp
ljmp
sarl
mov
mov
add
sub
or
mov
mov
push
mov
dec
shrb
mov
dec
adc
mov
jp
push
js
out
popa
xchg
in
lea
pop
or
push
or
push
sbb
jb
testb
add
add
mov
push
imul
aad
mov
mov
add
dec
add
add
jb
cmp
loopne
mov
add
add
sahf
fidivs
add
add
stc
inc
add
add
loop
mov
xor
dec
add
add
push
or
add
add
repz
add
outsb
jb
pop
push
jns
add
add
mov
shl
int3
stos
lods
mov
lret
push
xor
xchg
aas
mov
pop
jmp
sub
adc
popa
dec
andl
popa
adc
out
outsl
mov
cltd
xor
dec
scas
pop
xchg
fstps
inc
add
add
roll
test
aad
jecxz
and
mov
mov
loope
aas
rolb
int
fdivs
inc
xlat
or
mov
add
add
add
add
shrl
jnp
mov
cmp
jmp
mov
pop
mov
cmp
add
mov
adc
sbb
pop
inc
mov
das
and
mov
mov
adc
add
add
sti
xchg
xchg
dec
faddl
add
add
bound
add
add
add
add
push
xor
in
ljmp
nop
mov
add
add
aad
push
negb
inc
inc
mov
fnstsw
dec
add
outsb
lcall
addb
and
aad
les
add
add
mov
into
jno
clc
adc
loop
mov
add
add
mov
or
push
rcrb
fwait
cmp
add
cld
arpl
jp
add
jae
add
add
jecxz
jb
hlt
in
addr16
adc
test
imul
mov
push
and
dec
push
pop
xor
test
add
add
pop
nop
pushf
into
push
and
lret
and
daa
andb
inc
add
add
jb
movsb
mov
jmp
cli
imul
popa
pop
pop
sbb
fisubrl
or
sub
add
add
ja
jae
inc
mov
push
cmp
mov
mov
repz
add
add
xchg
inc
add
pop
ljmp
loop
jno
cvttps2pi
mov
arpl
or
mov
out
add
add
sub
lods
adc
add
data16
frstpm(287
pop
push
cmpsl
mov
mulb
adc
push
dec
cmpl
push
and
ljmp
add
or
add
add
sti
aaa
lock
stc
ljmp
add
add
hlt
jbe
inc
and
xchg
pop
shrl
ret
mov
data16
neg
jne,pt
gs
xchg
add
add
and
sarb
xor
xlat
push
out
mov
xlat
dec
add
add
loopne
repz
and
aad
fs
sahf
loope
in
pop
out
sbb
mov
mov
add
add
add
dec
lock
lods
add
add
add
jmp
iret
jl
scas
inc
inc
jbe
ret
sbb
clc
lock
mov
mov
loopne
mov
xchg
add
add
add
or
pop
cmp
in
lahf
repz
pop
push
push
pop
dec
hlt
inc
fcoml
in
nop
pop
push
std
sub
add
add
negl
mov
sbb
and
add
add
mov
adc
aam
or
rcrl
push
test
add
push
loopne
add
add
call
pop
xchg
inc
mov
xchg
jo
add
add
add
add
stos
fldcw
add
aad
testl
xchg
ljmp
add
add
xor
cmp
jnp
mov
add
add
ret
sbb
sub
out
or
or
cmp
testb
add
cmp
xchg
xchg
push
adc
inc
xor
mov
out
ds
jle
out
adc
push
subl
fldcw
pmulhw
mov
or
pop
idivb
mov
mov
lahf
fcomps
insl
pop
icebp
mov
sbb
lods
insb
add
add
lock
cwtl
jo
or
add
add
cmp
mov
out
andl
sbb
fsubs
imul
add
add
ret
aaa
adc
mov
gs
push
aam
outsl
test
and
add
add
notl
push
push
cmp
mov
inc
lds
insl
push
fwait
or
add
add
add
add
pop
cmp
add
add
pusha
add
add
sbb
mov
js
ret
ret
pop
repnz
xchg
pop
xchg
mov
add
add
cmpsb
das
xor
add
add
aaa
xchg
sub
add
xor
dec
xorl
push
sahf
dec
sbbb
sti
inc
fsubp
jg
push
dec
mov
mov
fwait
lcall
add
nop
je
xor
mov
mov
add
add
adc
mov
or
fldt
mov
ret
fstl
xchg
inc
add
add
outsb
push
push
mov
dec
push
mov
add
inc
add
push
add
loopne
jne
mov
mov
les
add
inc
add
mov
mov
mov
sub
aad
add
cmp
es
push
loope
insl
sbb
dec
repz
fdivs
outsl
sub
add
add
jp
jmp
pop
mov
cmpsb
dec
repz
mov
add
ljmp
add
add
add
cmp
xor
shll
movsl
idivb
sub
add
add
mov
stos
hlt
ljmp
test
sub
shl
xlat
rcll
jl
shll
inc
xor
aaa
out
pop
imul
cs
jb
aad
mov
mov
lahf
sub
push
ret
ss
loope
mov
push
adc
jecxz
pop
lahf
jnp
test
mov
mov
mov
mov
inc
add
add
mov
add
pop
inc
mov
arpl
or
ja
jb
pop
inc
push
leave
out
add
add
inc
fiaddl
jno
push
fistpll
enter
add
add
xor
cmp
jo
xor
orb
pop
call
add
add
add
in
bound
add
add
shlb
test
xlat
add
gs
rcrb
add
add
pop
hlt
xchg
mov
test
mov
arpl
dec
loop
sub
loopne
in
mov
shr
sbb
jns
mov
xchg
add
jns
mov
pop
push
pop
inc
push
add
mov
pop
mov
sub
add
add
jl
add
add
jbe
sbb
addr16
mov
out
data16
xor
add
add
jle
out
add
hlt
outsb
dec
cwtl
lods
mov
add
bound
jge
mov
lret
dec
jle
inc
cmpsb
fisttpll
mov
and
xchg
jae
mov
rorl
add
add
jp
and
sbb
iret
fisttpll
mov
mov
aaa
addr16
add
ret
das
insl
fstpl
movsb
xchg
loop
xorl
orb
sub
add
add
mov
or
add
add
into
push
insb
add
add
xchg
add
enter
clc
jno
fbld
jle
cmc
mov
add
add
les
ss
add
add
into
push
adc
scas
push
pop
xorl
sbb
pop
or
add
add
add
xchg
sub
push
xchg
add
mov
push
xchg
adc
adcb
cmpsl
mov
add
pop
mov
divb
and
add
test
add
add
mov
in
xorb
add
add
add
mov
xchg
lock
mov
and
add
lahf
ja
js
pop
jmp
cmp
movsb
pop
inc
push
adc
stc
insl
bound
mov
es
test
mov
loope
and
add
add
test
fcoms
mov
push
and
add
add
mov
loopne
xor
add
add
add
xchg
shrl
add
add
sahf
push
xchg
jecxz
inc
mov
mov
add
notl
out
mov
mov
bound
xor
add
add
jne
ss
sub
jo
lds
cs
jno
mov
or
jecxz
pop
xchg
or
mulb
lods
testl
add
out
idiv
in
out
loopne
test
and
mov
sbb
loop
arpl
mov
dec
xlat
cmp
fists
push
fisubl
add
add
xchg
ja
lret
xor
add
add
xchg
ljmp
lds
lret
ret
xchg
pop
mov
je
addr16
movsl
dec
cmp
pop
leave
inc
mov
dec
mov
add
add
add
jge
mov
xchg
push
testb
add
dec
outsb
movsl
push
daa
push
mov
mov
stos
inc
push
int3
jb
mov
mov
aad
mov
add
add
aad
enter
dec
push
stos
inc
icebp
xlat
das
rorb
je
inc
imul
add
add
test
xor
jns
pusha
mov
arpl
add
add
pop
sub
or
les
clc
test
jmp
push
aam
mov
adc
test
jo
xchg
popa
inc
pop
xchg
test
aam
loop
cmp
mov
stc
cmp
add
add
lock
lea
test
test
add
add
mov
stos
clc
loop
mov
shrl
imul
add
add
aaa
mov
dec
adc
pop
pushf
adcl
ja
sub
add
add
xor
jbe
push
xchg
add
push
or
adc
fsubs
out
mov
push
adcb
andb
inc
fcmovb
jno
cwtl
ret
push
pop
sub
xchg
cmpsl
push
pop
popa
mov
jno
pop
pop
popl
sbb
loop
fimuls
adc
lahf
arpl
fcoml
inc
gs
push
repz
jmp
mov
addr16
pop
push
idivb
add
add
bound
add
add
mov
and
add
add
inc
xor
xchg
xor
add
adc
in
inc
add
add
lcall
pop
or
ficoms
xchg
mov
fcmovb
add
inc
dec
mov
data16
pop
mov
add
add
xchg
and
pusha
add
add
jbe
inc
and
add
add
jle
cmp
test
sbb
and
pushf
ret
or
cmp
add
add
lods
test
inc
adc
jmp
mov
ret
sub
lcall
sub
mov
addl
aam
jae
pop
xlat
xchg
mov
xlat
lock
insb
add
add
lahf
cmp
add
add
add
test
test
ret
mov
add
add
add
out
shll
add
mov
fisttps
mov
jb
sbb
add
adc
data16
repnz
add
sti
inc
add
add
andb
add
add
add
push
pop
cmpsb
out
fs
mov
jbe
scas
pop
jmp
mov
outsl
lods
data16
shlb
add
add
add
jle
sbb
repz
pushf
stos
add
add
add
add
add
add
inc
mov
imul
push
jae
fnstsw
mov
mov
jae
jbe
mov
js
shll
shrb
into
dec
sbb
xchg
test
jnp
pusha
add
add
inc
add
add
cwtl
repnz
add
add
dec
lds
add
add
add
xchg
add
add
add
or
lock
lret
dec
sub
add
add
dec
jno
fdivl
jb
add
add
add
and
add
add
and
push
xchg
enter
enter
ljmp
pop
mov
cltd
inc
mov
dec
add
add
mov
xchg
inc
cmpl
cs
xor
mov
jmp
cmp
mov
ret
shl
mov
movsb
xchg
jecxz
test
mov
lods
lret
pop
mov
les
add
add
daa
icebp
xor
mov
jb
not
loope
pop
xor
bound
jp
sub
mov
add
add
add
lret
cmp
fyl2xp1
fcoms
jmp
mov
pop
cmp
enter
ds
add
push
imul
add
jg
cmp
cli
fnstcw
int
ret
adc
mov
add
push
push
mov
lret
mov
mov
or
add
add
pop
cwtl
les
add
cmp
add
add
sahf
add
movl
jns
xchg
sbb
add
add
add
add
adc
adc
out
fwait
pop
sub
mov
mov
jo
xchg
xor
movsb
jb
cs
loop
mov
fsubrl
in
int
int
popa
iret
jecxz
rorl
roll
add
add
xlat
sub
shll
sub
add
add
and
add
add
cltd
imul
or
mov
mov
loopne
xor
sarl
lds
pop
lcall
andl
add
stos
xchg
aad
cmp
xor
fdivrp
xorl
mov
aad
xchg
fsub
push
std
mov
sbb
push
pop
add
add
add
mov
and
cld
ret
lods
out
popa
sarl
mov
leave
mov
mov
push
mov
mov
and
add
add
filds
clc
je
inc
pop
cli
stos
or
add
add
sub
scas
les
jae
push
sub
or
lcall
xchg
or
add
add
mov
shlb
pop
add
pop
mov
sub
pop
xor
sub
add
add
or
mov
test
add
inc
xor
xchg
gs
aas
push
push
inc
pop
es
jnp
cmp
aaa
jne
icebp
push
sbb
loopne
enter
adc
add
add
jmp
mov
por
bound
push
and
add
add
lret
pop
xor
mov
rol
leave
adc
mov
inc
mov
xchg
cmc
add
push
xchg
insb
add
add
sbbb
mov
inc
mov
jg
cs
mov
jg
sbb
xor
pop
sub
lret
push
sti
mov
pop
pop
mov
jae
cli
orb
mov
add
mov
sub
fdivrs
mov
test
xor
cmp
sbbb
sbb
pop
rcr
xor
lea
arpl
mov
iret
in
and
add
add
xor
hlt
mov
loop
or
push
scas
icebp
sub
loopne
lods
push
stos
js
mov
pop
pop
push
mov
das
mov
test
shrb
mov
rclb
jle
xchg
pop
ds
mov
inc
addr16
dec
add
add
outsb
lods
mov
mov
sub
lods
lret
mov
xchg
lcall
addr16
bound
add
scas
leavew
insb
mov
xorb
test
cmpsl
fcos
mov
jae
es
cmp
es
in
test
mov
out
ror
fisttps
insl
in
sub
mov
xor
sbbl
adc
add
mov
dec
mov
outsb
out
mov
add
mov
pusha
add
add
pop
jge
jnp
int
outsb
or
sub
out
cli
or
dec
add
add
jg
jg
mov
add
add
xchg
add
das
add
add
add
test
rcrb
dec
loope
pusha
mov
dec
mov
das
enter
movsb
cltd
dec
clc
cltd
repz
dec
mov
pop
cmpl
out
dec
add
add
and
add
add
movsl
nop
stc
push
jg
xchg
mov
jmp
mov
fidivrs
inc
das
adc
sub
std
xchg
arpl
add
adc
adc
int3
rclb
mov
lret
enter
adc
int
xchg
sub
sub
add
add
andl
out
repz
mov
xorl
or
xor
sbb
lods
imul
jge
les
dec
ss
jg
push
movsl
fs
mov
sbb
fwait
fwait
pop
mov
test
add
inc
jg
jmp
mov
repnz
mov
adc
or
jl
add
add
add
add
add
sbb
cltd
xchg
pushf
data16
dec
lds
in
test
and
add
add
xchg
adc
add
add
adc
aaa
popa
in
inc
add
add
dec
jl
fcomip
mov
pop
ds
dec
and
scas
mov
cmpsb
jle
push
jb
shlb
lea
inc
mov
imull
push
insl
mov
pop
mov
ja
jmp
pop
jp
add
add
movsb
dec
add
add
or
add
jl
dec
and
add
add
add
mov
mov
outsb
sbb
jo
mov
sub
lss
out
push
mov
jecxz
add
add
mov
mov
out
pop
dec
mov
out
testb
and
enter
cmp
add
cmp
mov
std
pop
repnz
add
add
icebp
mov
and
add
add
mov
jmp
lock
stc
push
mov
mov
pop
push
push
pop
jbe
adc
add
add
jecxz
pop
adcl
daa
mov
inc
mov
mov
or
add
push
jb
inc
pop
sbb
aas
or
add
add
aaa
jo
add
add
cwtl
push
movsl
push
adc
outsb
sub
sbb
add
add
mov
adc
fisubrl
cmp
testl
mov
or
add
out
sub
add
add
add
add
repnz
std
stc
jbe
pop
pop
cltd
sub
jno
jo
decl
jle
pop
jne
mov
add
add
lds
pop
test
dec
fcoml
add
add
pop
jns
lds
cmpsl
push
loopne
insb
add
add
sete
dec
mov
add
add
js
sbb
push
repz
movsb
cmp
pop
popa
data16
pop
dec
scas
and
add
xchg
mov
psllw
fildll
repnz
adc
add
or
dec
mov
fmuls
insb
mov
mov
loop
mov
jge
jbe
cwtl
adc
lret
int
xor
pop
sbb
add
movsb
mov
add
mov
mov
pop
lret
adc
loope
inc
andl
adc
negb
jle
sbb
add
nop
int3
loopne
dec
js
int
pop
fcompl
sub
add
add
or
dec
add
add
mov
xor
and
mov
icebp
loopne
popa
aas
inc
jae
testl
and
imul
repz
dec
mov
jmp
pop
int3
and
fsubp
fbld
std
and
sahf
lcall
inc
sar
jno
push
push
fsubs
or
xor
push
movsb
pop
or
add
add
add
add
insb
add
add
mov
out
fildll
mov
and
add
add
push
push
fstl
ds
or
add
add
add
add
mov
xlat
lea
movsb
xchg
les
lcall
arpl
andb
out
push
nop
inc
dec
pop
cltd
mov
sbb
pop
xor
jbe
sti
pop
cli
das
pop
xchg
adc
lock
add
jnp
xchg
mov
mov
add
add
xchg
add
add
add
add
sbb
sub
jl
sub
js,pn
sbb
repnz
ret
int3
idivb
in
or
add
add
in
jge
movsl
sbb
inc
jnp
xchg
ficoms
stos
cmp
adc
in
jae
dec
add
add
daa
loop
insl
loopne
inc
pop
and
and
add
add
add
add
add
jmp
xchg
fisubrs
sbb
inc
mov
in
fsubp
daa
inc
push
nop
push
cmp
cli
pushf
adc
xor
dec
sbb
inc
jns
dec
xchg
sub
add
add
fs
or
insb
add
shlb
add
add
dec
pop
data16
add
add
fidivrs
xchg
enter
pop
ret
xchg
add
add
scas
cli
repz
dec
add
add
or
add
add
xlat
inc
add
add
mov
cmp
dec
add
add
add
pop
jmp
pop
loopne
mov
cmpsb
addr16
repnz
jle
pop
dec
jo
jge
push
add
stc
das
lret
dec
dec
adc
iret
inc
pop
xor
add
jbe
inc
cmp
in
mov
cmpb
xor
jae
mov
cmp
mov
scas
fcomps
fidivrs
test
add
cmpl
mull
sbb
dec
dec
pop
and
add
mov
mov
int3
ds
outsl
add
int3
pushf
int3
or
dec
xor
dec
add
add
sub
xchg
fistl
add
add
push
movsl
sahf
and
in
aaa
push
lock
add
add
sarb
cmp
jle
sub
jmp
xor
add
add
xor
out
cmp
lretw
out
cmp
add
add
add
es
pop
loope
xlat
cld
cs
mov
mov
out
test
mov
unpckhps
sahf
sti
loop
cld
stos
cmp
das
fnstsw
xchg
rol
or
push
out
cmp
lret
test
out
rolb
jp
pop
loope
hlt
pop
stos
cmp
and
inc
inc
add
add
push
andb
cmp
pop
xchg
xchg
jo
xchg
sbb
dec
daa
push
imul
jb
inc
pop
sub
dec
shll
inc
dec
ret
jle
mov
js
mov
or
inc
add
add
add
int
adc
ljmp
movsb
push
ret
in
sbb
xor
subl
dec
add
add
ds
mov
pop
pop
aam
xchg
push
sub
fimull
sub
repnz
orl
nop
xor
rcll
mov
mov
sbb
add
ret
add
add
ja
push
pop
xchg
popa
add
inc
mov
mov
sar
inc
lret
ret
insl
jp
mov
mul
scas
ds
das
sub
sub
add
in
jo
in
mov
lcall
inc
mov
mov
mov
arpl
inc
leave
or
pop
adc
adc
push
cli
pop
ret
into
mov
pop
lock
mov
inc
cmp
add
pop
mov
and
add
add
add
add
pop
cmpsb
sarl
inc
add
ret
xor
imul
arpl
add
push
incb
data16
inc
lea
add
into
sbb
aad
mov
das
cmpsb
dec
sbb
cmp
add
add
xor
xor
add
add
scas
push
mov
cmp
push
adc
adc
jge
or
mov
jp
iret
jp
fnstcw
orb
cmp
xor
xchg
cmpsl
clc
mov
add
movsb
cs
out
xchg
sbb
in
es
test
mull
add
add
sub
nop
rorl
add
add
sbb
jle
out
pop
mov
mov
mov
icebp
rcrl
int
xlat
and
std
leave
mov
mov
lods
or
fldt
aaa
mov
add
adc
les
xor
jl
mov
adc
movsb
psubusw
sub
add
add
addl
lods
adc
mov
test
add
add
mov
js
jne
mov
hlt
dec
addr16
in
hlt
ss
pop
sub
add
adc
add
shlb
mov
add
add
shrb
add
jbe
mov
add
lcall
add
add
lods
jp
sub
lea
mov
mov
add
fcoms
cmp
add
mov
test
or
cmp
ja
ja
subl
test
pop
movsb
or
add
add
mov
int
lea
adc
mov
sub
fidivrl
sahf
shlb
cmp
pop
push
bound
out
or
add
add
push
shll
add
lcall
sbb
rol
xchg
addr16
lea
lea
lret
mov
out
insb
add
add
xor
aas
lcall
rcrb
push
or
test
cmp
add
add
add
inc
mov
jbe
movsb
jns
jb
cli
push
daa
imul
add
mov
sub
add
add
and
add
add
add
add
leave
sub
add
scas
xchg
cmpsl
outsb
mov
inc
add
add
add
add
pusha
add
add
js
inc
adc
shl
lret
loop
adc
outsl
add
iret
movsb
arpl
ljmp
gs
jno
mov
jmp
add
jmp
outsb
push
mov
sbb
adc
js
inc
mov
dec
add
add
fnstsw
or
add
add
add
xchg
incb
or
mov
push
outsb
ja
pop
or
xchg
int3
cmp
fstpt
sti
test
push
jge
add
add
cmp
mov
jo
sbb
jns
or
mov
pop
mov
dec
dec
aam
cs
or
and
add
or
push
xlat
pop
dec
mov
ror
leave
call
mov
xor
lock
xchg
cltd
push
stos
dec
in
outsl
pop
lods
add
ja
mov
inc
jnp
std
and
add
cmp
addr16
lods
cltd
divb
and
jmp
nop
iret
dec
mov
out
xchg
jge,pt
das
das
jo
dec
lahf
mov
add
add
jmp
add
add
rcll
add
lcall
add
jae
loope
pop
inc
add
add
mov
outsb
es
pusha
add
add
je
mov
push
sub
add
add
jg
add
add
enter
mov
push
dec
cli
call
jecxz
leave
push
push
lods
repnz
push
test
xchg
mov
xchg
jo
mov
dec
out
cmp
cmp
cli
mov
outsl
or
mov
xchg
scas
mov
shll
add
add
out
jecxz
inc
add
add
outsl
add
sub
lahf
jns
and
sub
sub
or
mov
lret
es
xchg
mov
lcall
pushf
sbb
mov
or
mov
adc
push
cmp
jg
hlt
inc
nop
adc
test
outsb
inc
adc
hlt
gs
mov
and
ret
into
mov
add
test
push
cmp
dec
inc
jno
jmp
das
cld
jae
mov
enter
or
add
add
outsb
arpl
or
shufps
push
movsl
mov
and
out
jb
out
fldt
enter
mov
out
jg
jne
jg
movsl
lods
lret
insb
mov
pusha
add
add
xor
hlt
push
mov
dec
leave
pop
push
sti
in
jns
dec
add
add
adc
adc
add
add
orl
out
inc
xor
das
scas
lcall
jg
push
mov
out
mov
add
push
push
xchg
inc
add
add
inc
mov
pop
push
adc
inc
cmp
pop
out
scas
push
inc
xchg
movsl
xor
add
cwtl
into
mov
addr16
mov
pop
mov
jge
mov
call
js
mov
add
add
je
mov
outsl
adc
add
add
jbe
and
scas
xchg
jp
sahf
jae
fst
and
push
pop
pop
pushf
cmc
sbb
lret
insl
xchg
jns
addr16
ja
mov
leave
scas
cmpsl
ret
or
jmp
add
add
mov
pushf
xor
adc
sti
fs
in
xor
mov
push
shll
mov
movsb
jns
in
inc
add
add
xor
jmp
push
mov
pushf
sub
dec
in
inc
add
add
sbb
mov
add
in
sub
jbe
mov
clc
mov
inc
scas
mov
pop
or
shlb
sti
xchg
dec
or
add
add
mov
xor
add
xchg
fsubrl
add
cmpsb
repnz
sub
dec
mov
add
add
cmp
test
add
add
mov
sub
add
add
shrl
add
add
std
inc
lods
aaa
push
cmp
mov
mov
out
sub
xlat
mov
and
gs
pushf
les
dec
dec
mov
dec
std
and
xor
scas
idivl
jb
nop
fbld
mov
outsb
jmp
mov
mov
and
add
lret
int3
cltd
xor
loopne
pusha
add
add
pop
pop
pop
in
inc
lret
mov
add
lds
cs
icebp
cmp
xchg
mov
xchg
jae
inc
xor
out
jbe
inc
jle
jle
aam
aad
ja
mov
add
fistpl
shll
and
add
add
add
add
jne
inc
sub
dec
dec
mov
adc
cmp
add
sub
add
add
add
add
dec
xchg
cs
pop
lea
xor
sti
es
add
data16
mov
sub
adc
and
pop
fstps
cmp
inc
inc
add
add
call
inc
test
lock
xor
jb
jg
fildl
jg
and
fildl
sbb
scas
loop
cmp
pusha
mov
dec
pusha
add
add
mov
icebp
pusha
mov
lret
imul
out
inc
add
add
xchg
test
or
sahf
test
flds
add
js
xchg
and
add
add
sbb
jnp
fdecstp
jb
cmp
jp
mov
jo
xchg
push
stc
jbe
push
pushf
xor
mov
dec
aaa
pop
lods
mov
sbb
add
add
sbb
rol
jo
pop
stos
lds
push
std
xor
sahf
leave
xchg
xchg
add
sbb
call
mov
push
dec
add
add
mov
add
add
test
push
xor
add
add
push
cltd
xor
mov
mov
dec
jnp
imull
adc
xlat
mov
daa
cs
mov
cmp
lret
inc
aam
sbb
mov
bound
cmp
adc
sub
cltd
and
add
add
and
aas
adc
mov
in
or
add
add
test
fbld
add
push
mov
or
add
add
sarl
pop
mov
push
scas
adc
sbb
pop
popf
test
adc
gs
mov
outsb
jne
jecxz
mov
pop
cmp
add
add
add
dec
mov
mov
ljmp
data16
mov
mov
sbb
enter
mov
sub
add
add
mov
andb
inc
and
add
add
add
add
add
add
jbe
mov
cmp
add
add
add
add
test
add
push
sub
or
mov
push
imul
lahf
add
cwtl
mov
dec
popf
hlt
inc
adc
dec
jne
out
jae
jmp
add
add
enter
add
and
add
add
lods
cmpsb
jl
ds
test
mov
mov
inc
sub
jb
jge
shl
daa
mov
mov
add
add
xchg
rclb
stc
nop
inc
add
add
mov
in
cli
sbb
dec
insl
ljmp
sbb
mov
movsb
scas
dec
mov
mov
fisubl
movsl
arpl
jp
add
add
cmp
add
or
pushf
mov
out
xchg
jle
xor
sbb
scas
imul
and
mov
add
add
sahf
leave
dec
mov
and
add
mov
push
cld
cmp
pop
push
pop
push
fs
std
jp
fcoms
jne
push
cmpsl
aaa
xor
mov
cs
mov
mov
in
call
and
push
xchg
rolb
sub
add
add
sub
add
add
testl
outsb
jne
or
add
add
fs
inc
xchg
fwait
sbb
push
fiaddl
add
push
inc
bnd
add
add
pop
ja
cltd
pusha
add
add
aad
pop
fcmovb
push
dec
mov
std
lods
inc
pop
in
scas
test
out
frstor
add
add
test
lcall
ljmp
add
add
add
add
sbb
lea
mov
loopne
jmp
cmp
jle
pop
call
push
imul
movsl
inc
dec
cmp
pop
jmp
aaa
mov
or
add
add
xchg
xor
mov
mov
pushf
daa
imul
push
std
data16
add
add
dec
mov
cmpsb
add
mov
xor
add
xchg
jg
sub
iret
lret
adc
leave
sub
enter
xor
dec
mov
lock
jge
jae
aas
lods
mov
push
mov
sbb
into
cld
jbe
int3
ljmp
insl
jg
push
xchg
and
fsubl
add
add
add
add
lret
sub
push
lods
fs
mov
add
add
outsl
lods
idivl
int
dec
add
add
or
ss
push
jecxz
mov
add
add
add
andb
sahf
rdtsc
jb
pop
mov
xor
fdivrl
lea
pop
into
cmpsl
pop
adc
adc
jl
and
aas
pushf
adc
dec
add
pop
xchg
ffreep
lcall
lea
es
adc
push
test
xlat
addr16
dec
add
add
push
test
add
rclb
mov
loope
push
mov
add
call
push
jp
push
mov
sbb
add
add
cmp
les
jge
shlb
negl
adc
lea
and
aam
and
dec
sbb
inc
pop
jmp
push
mov
sbbl
dec
add
add
ds
add
add
mov
loope
add
add
mov
mov
jecxz
iret
mov
add
add
add
and
add
add
add
mov
je
in
enter
and
fmuls
mov
mov
xchg
push
cmpl
xor
adc
mov
ja
pop
lock
mov
out
iret
pop
test
dec
mov
push
pop
dec
push
or
xchg
stos
aas
fldcw
scas
leave
fiadds
ja
add
add
popf
push
jno
jo
andb
add
add
cmp
add
add
add
add
test
xchg
jne
add
add
dec
jg
add
add
test
jp
cli
sbb
pop
ret
and
leave
lret
sub
or
lea
cli
push
xchg
add
add
in
inc
testl
mov
add
scas
sub
add
push
negb
add
and
xchg
xchg
fwait
sub
gs
and
jp
add
mov
and
imul
add
add
push
mov
add
add
add
call
mov
add
jne
or
mov
jb
push
xor
adc
xorl
mov
xor
jmp
ret
je
xor
fcmovnbe
imul
jge
arpl
stos
pop
testb
sbb
or
add
add
cmpsb
pusha
add
add
and
add
add
test
mov
std
jno
xchg
jg
nop
insl
mov
xchg
mov
adc
leave
dec
dec
add
add
add
mov
xchg
test
push
rcll
push
mov
sub
xchg
cli
dec
ds
es
mov
and
jb
lods
mov
imul
dec
jo
loope
sub
add
add
adc
mov
add
add
popa
sbbl
sahf
dec
add
add
jo
fimull
jl
push
test
outsl
mov
and
cwtl
add
add
add
pop
pop
push
aaa
mov
and
inc
xor
or
add
mov
arpl
inc
int
outsb
jecxz
push
sbb
jb
mov
aaa
fistps
xchg
xchg
pop
test
insl
pusha
add
add
es
xchg
xchg
mov
insb
add
add
shrl
lret
sarb
add
add
sbb
movsb
fsubl
scas
cmc
push
enter
cwtl
stos
shrl
test
pop
test
lods
js
andl
scas
add
add
add
push
push
test
lahf
iret
jns
cmp
lahf
pop
bound
nop
mov
in
sub
add
adc
stos
test
pop
scas
aad
cmp
cs
fadd
push
es
sbb
cs
pushf
mov
jg
fdivl
add
add
add
add
add
cmc
xchg
cltd
cmpsl
xchg
out
xchg
jb
mov
cmp
int3
fiaddl
inc
dec
add
dec
sbb
adc
mov
cli
dec
mov
push
lret
push
fdiv
mov
pushf
sub
fcomi
xchg
dec
inc
push
jg
cmp
fs
pushf
into
mov
cmp
daa
jp
mov
je
repz
push
jmp
mov
add
add
test
mov
dec
mulb
sbb
sbb
push
xor
rorb
mov
add
add
test
sub
add
add
xchg
mov
dec
mov
add
add
inc
add
add
repnz
mov
dec
jg
popa
test
ret
jne
ret
fcmovnu
mov
adc
andl
mov
cli
mov
xchg
loop
inc
mov
push
outsl
sti
mov
mov
add
add
add
repnz
mov
push
fdivrl
xorl
ret
sub
icebp
and
add
push
push
push
push
jne
jns
lea
mov
xchg
xchg
sbb
dec
mov
mov
bswap
les
daa
mov
sbb
cmp
outsl
flds
add
jb
rcl
lret
or
add
add
lret
pop
inc
or
add
add
dec
add
add
int
lock
sub
add
add
sbb
inc
scas
jmp
mov
push
ss
dec
mov
push
push
xor
cmpl
cs
mov
adc
add
add
and
ljmp
add
lret
aas
pop
dec
dec
movsb
mov
negl
fnsave
ss
or
sbb
in
daa
jp
fs
loope
xor
mov
sbb
pop
scas
push
loopne
fidivrl
push
cmp
push
add
add
add
aad
dec
jmp
add
inc
sti
mov
jmp
add
add
lahf
fdivl
in
loope
add
add
jmp
push
sub
add
jns
test
push
and
pop
sahf
imul
cmp
add
add
add
js
cmc
cmp
mov
outsl
and
rol
jg
ret
out
jne
dec
cmc
adc
lcall
outsl
sbb
dec
xchg
ds
bound
mov
daa
js
cmpl
lds
mov
mov
div
sub
addr16
aad
pop
fnstenv
push
lods
cli
add
push
inc
loopne
jle
stos
and
and
add
add
enter
stos
std
incb
fcomp
mov
push
cmpsl
iret
cs
shlb
or
add
add
lret
mov
and
add
add
nop
data16
mov
xor
add
add
inc
jnp
push
mov
add
pushf
loope
ljmp
add
popl
mov
cmpsb
and
mov
jle
add
iret
inc
jo
jle
mov
cmp
fcompl
enter
and
in
lret
cmp
xchg
and
outsl
lcall
inc
testl
cltd
jmp
insb
add
add
dec
mov
testl
jecxz
hlt
imulb
or
xchg
test
stc
sbb
gs
push
sub
mov
popa
push
aam
jns
add
add
add
lret
mov
push
aad
xor
xlat
mov
iret
add
fs
and
fsubl
in
inc
mov
xchg
or
add
add
leave
out
add
add
add
mov
or
clc
and
test
jmp
jg
loope
sti
lock
push
daa
adcl
es
int
jbe
movsl
cmpsl
and
jbe
das
mov
das
lock
ret
orl
add
mov
adc
mov
repnz
clc
push
jg
arpl
repnz
push
bound
mov
es
lock
xchg
cmp
bound
test
jne
inc
dec
mov
add
add
pop
xchg
int
mov
cwtl
dec
add
add
sbb
cmc
imul
and
add
add
mov
icebp
push
es
test
or
push
jle
mov
xor
fimull
jno
add
and
fnsave
dec
add
add
fcomip
shr
or
add
add
xchg
adc
or
add
add
ret
nop
mov
jb
fisttpll
pop
mov
add
jge
cli
xchg
enter
fdivs
ja
sub
mov
sbb
push
loop
cmc
arpl
add
xlat
shll
push
in
adc
add
add
insb
mov
cli
sub
lods
call
stos
std
loope
mul
push
fdivl
jno
add
mov
sub
xchg
lahf
or
repnz
mov
push
cli
shlb
jnp
xchg
lds
or
add
push
pop
mov
xlat
push
add
add
mov
sub
repz
xor
mov
sbb
add
popf
push
pop
mov
mov
or
jo
movsl
call
add
add
cmp
mov
and
adc
add
add
mov
mov
lds
xchg
cmp
cwtl
loope
jno
add
outsl
push
mov
add
add
add
dec
mov
mov
popf
mov
jg
inc
aaa
fs
mov
mov
add
mov
aas
insb
mov
add
add
pavgb
cmp
add
icebp
add
inc
add
add
outsl
inc
jb
xrelease
outsb
movsl
das
push
leave
jle
enter
adc
scas
inc
mov
daa
add
outsb
stos
sub
add
add
aaa
mov
imul
xor
add
add
sbb
cmpsb
jns,pn
lods
sbb
sub
add
add
arpl
movsb
and
mov
adcl
dec
mov
bnd
inc
mov
mov
mov
stos
fld
adc
lock
add
add
jl
sbb
scas
ret
xchg
stos
outsb
arpl
xchg
adc
adc
lcall
pop
je
jecxz
adc
or
add
add
pusha
add
add
insl
fnsave
lret
lods
sbb
neg
arpl
icebp
lret
adc
sarl
inc
loopew
arpl
push
adc
and
aam
out
sbb
inc
inc
ljmp
rclb
push
mov
movsl
push
ficoml
inc
add
add
loop
sub
add
add
add
mov
dec
dec
mov
test
and
add
add
ffree
cmp
xchg
add
add
out
mov
add
add
pop
jmp
les
add
add
push
das
dec
ficoms
adc
xchg
mov
out
xchg
jl
mov
and
ret
lds
add
add
in
inc
push
xor
in
push
jbe
push
cmp
jbe
shl
mov
add
add
and
add
add
addr16
xor
xchg
mov
mov
jle
mov
sub
lds
test
mov
adc
adc
jne
mov
dec
xchg
or
test
aad
js
xchg
add
add
pusha
add
add
pop
and
lods
shl
or
gs
test
xor
xchg
dec
add
add
fwait
lcall
push
add
lea
pusha
add
add
pop
dec
mov
mov
jle
sahf
decb
aam
nop
jecxz
cmc
xchg
jbe
mov
mov
mov
nop
xchg
sbb
bound
add
rcl
jo
push
mov
mov
xor
pop
pop
addr16
enter
mov
jp
cmpsb
and
add
add
or
add
add
and
sub
nop
rclb
pop
fnstenv
daa
mov
lahf
data16
add
add
sub
add
add
pop
shr
out
sahf
addr16
pop
dec
xchg
idivb
sbb
push
fidivrs
xchg
lock
fldcw
mov
xor
inc
mov
dec
out
mov
sbb
mov
cli
in
mov
or
add
add
pushf
hlt
add
add
add
repnz
add
mov
mov
aad
orb
popa
push
scas
mov
add
add
mov
loopne
adc
add
add
jmp
or
shrb
outsl
dec
and
sub
aaa
xor
mov
xchg
stos
in
das
rorl
iret
sub
add
inc
sahf
dec
push
test
rcl
pushf
mov
pusha
mov
insl
mov
loope
inc
add
add
mov
add
xchg
add
hlt
push
fistps
mov
mov
pop
mov
lret
xor
enter
test
in
dec
cwtl
mov
xor
add
add
pop
and
stc
push
mov
or
add
add
mov
pop
jp
pop
push
std
enter
add
add
aam
jbe
insb
mov
frstor
add
arpl
dec
add
add
or
mov
dec
cwtl
test
std
inc
es
push
fcomps
xlat
sbb
cmp
cltd
out
cmp
add
add
pop
outsl
dec
inc
add
add
mov
cld
call
add
add
mov
sahf
sti
push
je
mov
sbb
add
add
or
cmp
mov
cmp
add
add
inc
mov
lret
xor
push
pop
adc
cmp
jno
jns
inc
mov
push
sbb
std
out
fimuls
push
stos
dec
mov
mov
dec
insb
mov
out
dec
xor
movsl
pop
jecxz
add
add
add
or
dec
mov
cmpsl
xchg
ss
mov
push
jp
fstpt
add
movsl
sarb
add
add
add
arpl
add
add
fistps
repz
iret
mov
daa
dec
add
add
add
sub
add
mov
fmuls
jns
mov
dec
sub
fists
mov
add
cmp
add
add
push
sbbb
ds
int3
out
inc
sti
mov
pop
aaa
pop
add
add
ss
mov
jge
lds
scas
jne
dec
add
enter
jl
int
cwtl
pop
imul
repz
add
add
mov
adc
jmp
push
imul
sub
push
cmp
pop
mov
xchg
push
jae
dec
add
add
or
testb
sub
sbb
cmp
sbb
scas
stos
mov
ret
jg
ds
pop
rorb
in
xlat
xor
mov
add
add
lods
imul
out
xchg
call
lret
push
xorb
fwait
lcall
add
ljmp
ret
and
add
cld
imul
dec
int3
and
out
outsl
and
sbb
orl
popf
insb
mov
fld
push
and
aas
sub
add
add
and
add
add
in
jns
mov
adc
push
aad
out
das
mov
mov
mov
and
add
idivl
insb
add
add
sbb
sbb
ljmp
add
icebp
fdivl
insl
cli
roll
popa
inc
cmp
jbe
sub
add
add
icebp
pop
mov
scas
pop
cmp
sub
add
add
xchg
and
add
add
and
add
add
push
ljmp
inc
add
add
pop
out
add
add
add
sahf
add
add
add
or
add
add
add
add
lahf
loop
nop
mov
mov
dec
gs
dec
and
add
add
pop
pop
pop
mov
or
add
add
out
inc
add
add
cmpsl
add
add
add
cmpb
adc
test
fucomi
ds
add
add
pop
aaa
inc
add
push
mov
jg
or
adc
call
add
add
xchg
je
jecxz
mov
mov
cmp
pop
mov
jp
idivl
inc
inc
mov
dec
mov
popa
aam
mov
pop
dec
lds
divb
mov
pop
shrb
test
dec
mov
leave
lgs
xchg
push
xor
es
adc
add
inc
add
add
push
cli
xchg
mov
fidivrs
add
jno
adc
push
lods
or
add
add
pop
aas
imul
clc
sbb
add
add
incl
lret
in
in
pop
or
jecxz
repz
add
add
pop
sti
xchg
aad
icebp
or
daa
add
dec
add
add
dec
shld
pop
sub
add
mov
jle
jecxz
arpl
push
jecxz
out
sbb
xor
add
add
jae
and
cmpb
pop
jecxz
pop
sbb
or
pop
mov
stc
lahf
outsl
stos
xor
into
push
jae
mov
mov
jns
push
xchg
pushf
mov
jnp
aam
xor
cltd
mov
pop
std
add
int
cmc
push
fdivrs
ja
movsb
pushf
cmpsl
xchg
xor
push
lret
or
inc
sub
adc
aaa
out
push
pop
push
mov
pop
int3
cmp
cmp
inc
add
add
stc
push
roll
add
in
pop
mov
add
adc
add
add
add
add
or
add
add
sub
add
add
add
sub
outsl
and
push
xor
and
add
dec
mov
push
xchg
call
stos
out
add
dec
addr16
lahf
movsl
jo
push
and
add
add
xchg
aad
push
dec
add
add
push
jecxz
divb
push
push
add
pop
jo
add
add
jmp
push
scas
das
fildl
imul
stos
ret
hlt
fstl
mov
cmp
mov
mov
or
fcompl
mov
pop
gs
push
mov
xchg
fcomps
lods
cmp
sahf
popf
loop
adc
add
xor
mov
mov
add
xorb
xchg
lods
loop
scas
inc
xor
insb
add
add
xor
mov
dec
xchg
dec
add
add
add
cmp
mov
dec
mov
adc
mov
jnp
in
mov
mov
pop
mov
gs
fwait
jecxz
or
inc
aas
stos
ficomps
addr16
push
int3
js
push
mov
sbb
divl
mov
nop
jns
pop
inc
stc
jno
das
adcl
mov
add
add
daa
in
test
push
mov
addl
or
add
inc
subb
add
add
gs
xchg
jmp
hlt
xorb
xlat
add
add
das
inc
mov
jnp
fimull
mov
push
inc
outsl
sbb
fmul
mov
mov
mov
cwtl
les
add
cmp
inc
aam
dec
and
jmp
jge
mov
pop
dec
fxch
inc
repnz
jl
jg
shll
neg
inc
test
mov
cmp
lcall
mov
sbb
ret
repnz
xlat
mov
mov
enter
sub
sub
sub
add
add
add
add
add
add
loope
jl
jle
outsb
cmp
mov
mov
shlb
add
add
std
bound
idivl
lea
popf
cli
rorl
pop
xchg
arpl
add
push
nop
insb
add
add
call
xchg
push
xchg
xlat
sub
add
add
add
and
mov
add
add
negl
cmp
fucomi
leave
jp
mov
orl
push
lea
call
add
mov
add
add
add
fadd
and
sub
cwtl
aad
pop
or
imull
dec
ds
scas
hlt
test
pop
inc
fmull
add
adc
lea
jmp
xchg
adc
loopne
mov
add
add
cmp
add
add
dec
mov
dec
mov
insb
mov
out
int3
push
and
mov
mov
adc
add
add
xchg
add
mov
xor
cwtl
push
push
dec
lret
jno
mov
mov
cli
lods
call
out
add
add
push
mov
shrl
inc
mov
in
gs
pop
xor
nop
add
cld
adc
fistl
add
cli
popa
sahf
stc
add
pop
xor
ja
mov
in
les
add
cld
fdivp
es
sarb
pop
cmc
push
push
ds
fnstsw
mov
loop
pop
sbb
filds
and
iret
ds
daa
pop
sti
cs
aas
shrl
mov
jnp
ret
test
andl
fisubl
add
add
jno
movsb
imul
pusha
add
add
mov
pop
pop
and
mov
adc
in
in
insb
add
add
add
addr16
in
add
add
sarb
into
xchg
inc
mov
ficompl
repnz
sub
push
mov
movsb
push
fstps
test
int
test
add
push
mov
add
add
xchg
push
daa
loopne
sahf
lahf
js
rcr
sar
add
aam
mov
mov
test
add
add
jnp
mov
and
out
xchg
sub
add
add
testb
inc
repnz
add
add
test
movsl
daa
sbb
rolb
push
and
push
adc
pop
imul
add
stc
add
out
call
push
adc
or
add
add
scas
lcall
add
scas
push
mov
xchg
lcall
adc
add
add
push
sub
sbb
add
add
ret
cmp
pop
mov
and
add
add
cmc
cmpsb
mov
xor
lods
and
add
pop
inc
mov
ss
sub
mov
les
ja
jmp
push
mov
std
int
js
pop
cmp
inc
sub
sub
arpl
out
add
push
stos
and
test
or
mov
rcrb
add
add
mov
mov
xor
insb
add
add
add
jle
inc
push
xor
push
jns
cmc
movsb
not
push
sub
push
rcll
add
mov
xchg
loope
mov
dec
mov
push
mov
xorb
and
add
add
out
pop
cltd
cmp
jb
scas
aas
sti
es
fiadds
jle
xchg
add
mov
sahf
stos
pop
dec
mov
mov
mov
add
add
add
pushf
movsb
test
decl
outsl
cmpsb
fists
loope
lea
je
imul
jecxz
pop
add
add
add
and
xchg
scas
lea
idiv
inc
pop
testl
or
jge
leave
movsl
popf
mov
add
rol
add
add
add
daa
fcmove
cltd
jnp
mov
bound
test
mov
add
add
add
add
lret
pop
lods
cmp
ljmp
mov
xor
shrb
fnstcw
int3
jns
sbb
imul
popa
add
cs
and
xchg
movsb
xchg
arpl
pop
popa
xor
stos
out
sbb
dec
add
add
out
out
inc
add
add
test
add
add
push
sbb
or
push
and
add
add
sub
mov
sbb
sbbb
add
add
add
pop
or
add
add
pop
int
data16
rcrl
fimull
jbe
mov
das
cmpsl
orl
xchg
les
and
mov
cmpsl
dec
mov
xor
mov
adc
mov
push
mov
test
xor
sub
add
add
pop
orl
add
add
aaa
add
out
scas
outsl
push
dec
inc
add
add
aas
cmp
loopne
imul
jb
imul
call
jno
pop
lds
add
add
ficoml
sub
imul
test
ljmp
add
pop
addr16
pusha
add
add
outsl
pop
sahf
pop
stc
loopne
lock
es
sub
into
adc
jo
pop
jle,pt
jp
daa
icebp
fistl
add
pusha
add
add
cmp
je
pop
push
xchg
add
add
xchg
add
cmp
push
xchg
rorb
add
mov
cli
jmp
incb
mov
mov
jle
push
sahf
popf
push
add
add
add
xor
hlt
scas
cmc
leave
gs
movsl
leave
mov
ljmp
add
add
add
add
add
add
inc
clc
stos
xchg
xchg
or
mov
lret
mov
ljmp
add
mov
jmp
add
add
js
sti
pop
or
mov
add
add
stos
insl
jecxz
addl
add
add
xor
test
mov
jl
push
out
add
sub
add
add
add
xlat
lahf
cmp
add
mov
addr16
mov
into
or
lods
add
add
add
cli
adc
pop
jno
clc
nop
aas
add
in
addr16
jmp
lods
sub
add
pop
test
sbb
pop
xor
add
add
sbb
icebp
mov
nop
cmpsb
add
add
stos
xor
add
add
movsl
jg
sbb
add
add
pop
pop
in
pop
test
mov
sbb
fsubrs
add
add
nop
enter
add
add
paddq
lcall
add
add
cmpb
xlat
in
clc
stos
test
add
add
ja
pop
dec
int
vandnps
lahf
mov
xchg
and
mov
inc
jnp
sbb
dec
fsubrl
cmp
pop
testb
in
dec
pusha
add
add
das
sbb
add
add
xchg
mov
pop
mov
add
xor
and
test
loopne
lret
shl
jle
insb
mov
sbb
ret
pop
lret
add
xor
sahf
in
mov
add
mov
add
add
add
add
inc
dec
mov
cmpsb
dec
mov
das
xorb
into
call
cmpsl
hlt
hlt
jb
xor
in
jmp
in
lods
in
loopne
xchg
or
xor
pop
inc
or
xor
outsb
mov
xchg
cmp
data16
into
inc
rcr
sbb
mov
cmp
adc
sub
fcmovu
push
mov
imul
add
add
inc
pusha
add
add
fildll
dec
push
into
fisubs
add
and
mov
popf
scas
mov
pop
mov
mov
push
inc
nop
shll
in
shll
add
add
test
jo
mov
add
add
add
add
add
ss
dec
je
sahf
jns
mov
mov
ljmp
sbb
add
add
jge
jle
push
std
mov
rclb
and
and
inc
mov
push
sbb
adc
pop
aas
mov
out
shll
fucompp
jl
sub
in
mov
pop
xor
cmp
jp
adc
iret
inc
fisttps
cli
fdivrl
add
push
iret
mov
push
cld
das
cmp
jae
pop
test
jo
xor
mov
xchg
add
mov
push
mov
add
add
cmp
in
jl
cli
cmp
add
add
dec
mov
aas
cmpsl
out
jle
and
add
jg
stos
push
mov
mov
pop
ss
mov
imul
nop
cld
push
sahf
push
inc
dec
sbb
adc
sub
ret
pop
sbbb
inc
filds
mov
add
add
pusha
mov
mov
mov
cmp
add
fldt
out
mov
loop
xchg
jl
cmc
adc
add
bound
repz
fadds
inc
add
add
mov
in
repz
sbb
test
jmp
ljmp
add
add
add
mov
xchg
sub
adc
cmc
int
das
sbb
fcoms
add
les
mov
sbb
stos
mov
inc
xor
adc
add
xlat
mov
mov
mov
sbb
mov
inc
mov
push
rorl
add
add
push
jmp
add
jno
sbb
lods
out
cmp
add
test
popa
lret
inc
add
add
aam
in
fisubrs
lea
fisubs
add
add
cmpsl
mov
cmp
dec
mov
dec
xchg
js
test
jbe
xchg
adc
add
loope
jb
addr16
stos
push
jno
cmp
dec
mov
loopne
fists
xchg
dec
jmp
sub
outsb
lret
mov
call
add
and
add
add
cmp
pop
and
out
pop
in
in
push
out
test
push
push
in
add
add
adc
cmp
mov
test
cmpl
pop
iret
mov
cli
cmc
sahf
add
add
add
lock
movsl
cmc
xor
and
in
lods
ja
pop
or
add
add
jae
add
add
loopne
mov
sbb
mov
pop
and
out
ds
cmp
ss
jmpw
jecxz
data16
or
push
aaa
rorb
xchg
sbb
pop
cmp
inc
add
add
add
int3
jecxz
hlt
mov
mov
stos
xor
cmovge
mov
push
dec
add
add
rclb
testl
push
fmul
cmp
add
add
add
sarb
jmp
fadds
lds
adc
loope
add
add
cltd
lret
add
add
imul
add
subb
pop
push
sbb
push
mov
cltd
pop
mov
mov
ja
add
add
cwtl
or
jnp
xor
add
fstp
addr16
mov
mov
xor
adc
and
out
sub
jb
and
dec
add
add
mov
add
aad
add
add
sub
fidivs
push
pop
sub
adc
inc
xchg
sbb
add
arpl
adc
dec
in
sahf
sbb
add
add
pop
mov
add
jmp
pushf
cmp
add
add
in
xor
repz
and
add
add
pop
pop
cmc
test
lods
sahf
fildl
stos
cs
fists
adc
subl
push
in
inc
mov
imul
push
lds
push
pop
inc
inc
nop
mov
in
es
cmpsb
mov
inc
add
add
pushf
sub
xchg
sbb
cwtl
ret
push
inc
mov
addr16
lea
aaa
hlt
fidivs
pop
jnp
repz
andl
dec
stos
scas
mov
add
add
sti
fbstp
add
inc
mov
add
subb
add
add
xchg
aaa
mov
add
add
add
mov
pop
das
jl
inc
add
add
loope
adc
out
pop
and
add
test
pop
movsl
cltd
mov
test
mov
sub
nop
add
xor
add
push
dec
xchg
repz
dec
ret
jne
jb
outsb
sub
push
sub
add
add
cmpsb
stc
push
ljmp
js
adcw
cmp
lods
mov
add
add
add
add
push
and
add
add
dec
dec
add
add
sbb
pop
int3
xchg
dec
add
add
pop
scas
jae
sarb
hlt
pop
push
mov
add
xor
ret
add
add
add
add
decb
add
movsb
mov
cmp
js
jle
out
mov
daa
std
scas
call
mov
mov
sub
je
nop
mov
out
and
ds
push
shrl
add
push
jae
cmp
scas
mov
mov
add
jne
pop
sbb
ret
fsubrl
cwtl
add
repnz
int3
ss
mov
mov
fwait
test
outsl
nop
lea
inc
nop
sbb
add
sbb
add
into
movsb
pusha
mov
push
mov
scas
xor
je
pop
xor
loopne
xchg
pop
hlt
roll
pop
sbb
mov
idivb
xor
jg
gs
add
add
lret
xchg
sub
jb
addb
add
add
repnz
push
pop
aam
push
jge
sub
push
aaa
add
ret
xchg
jl
mov
jae
out
gs
pop
sbb
mov
cld
push
into
pushf
mov
xchg
int3
mov
int
push
pop
addl
add
add
add
push
mov
jnp
pop
push
and
add
add
ja
mov
das
and
sti
adc
stos
out
inc
mov
mov
sbb
mov
inc
xlat
aam
mov
mov
jle
test
sti
mov
je
mov
repnz
mov
lock
loope
xor
pop
xchg
es
add
add
sbb
arpl
popf
xor
add
mov
cmp
adc
xchg
xchg
xor
and
cmp
dec
arpl
loope
aaa
xor
ror
or
add
add
in
jmp
test
stc
mov
add
add
add
int3
push
js
push
lods
pusha
mov
int3
sbb
divl
stos
adc
add
add
inc
mov
sbb
mov
fwait
sbb
arpl
cmp
mov
jp
mov
scas
int
test
mov
push
clc
out
fists
or
and
push
es
or
add
mov
lret
jecxz
mov
or
fs
into
psllw
add
add
and
ja
add
add
adc
mov
mov
popa
cmp
xchg
das
ret
xor
mov
cmpsl
pop
mov
in
or
add
add
iret
and
jbe
jnp
dec
jge
fucomip
sti
arpl
inc
fst
jge
add
add
xor
jae,pt
mov
cmp
and
push
push
lds
loopne
or
xchg
fwait
repz
push
lret
xchg
xchg
outsl
movsl
pop
mov
lods
mov
add
add
add
add
add
mov
into
pusha
mov
sub
add
add
pushf
out
ds
sub
add
add
movsl
mov
int
dec
idiv
lds
push
cmc
push
lcall
and
add
add
mov
aam
fsts
add
movsb
out
xor
or
add
add
out
dec
mov
sbb
mov
and
mov
inc
mov
inc
sub
push
or
pop
aas
in
mov
push
mov
add
lock
add
add
pop
adc
nop
adcb
sbb
pop
das
fbstp
pusha
add
add
xor
aaa
hlt
pop
rcr
xchg
mov
adc
and
add
add
add
add
jb
rcll
iret
scas
lret
jmp
push
jbe
add
add
jmp
add
adc
pop
xor
arpl
pop
add
out
mov
inc
mov
lahf
lcall
call
mov
adc
mov
mov
fcomps
add
add
adcl
xchg
nop
test
jno
mov
adc
scas
into
inc
mov
sbb
iret
mov
add
call
cmpsl
inc
jmp
arpl
add
pop
popf
cmp
adc
fs
adc
fcmovnbe
push
mov
fucom
inc
add
add
sub
cmpsb
sub
add
add
in
xchg
mov
ror
lret
stos
stos
insl
dec
incl
add
add
in
std
insb
mov
lods
sub
push
xorl
outsb
outsb
stos
sbb
pop
jns
mov
xlat
push
xor
mov
add
add
cmove
mov
add
call
sbb
xchg
xchg
mov
in
sub
jecxz
jo
sbb
loopne
mov
mov
roll
add
add
bound
inc
adc
pop
sub
lahf
jne
aaa
mov
jecxz
and
inc
scas
adc
sar
push
push
sub
mov
add
add
inc
aad
inc
lret
mov
add
add
sti
inc
sar
cmpb
repz
lds
pop
lods
orl
addb
stos
cmp
nop
scas
je
jg
fucomip
mov
add
test
xchg
cmp
or
mov
or
nop
xchg
mov
cmp
push
or
out
sub
scas
outsl
and
shlb
dec
pop
pop
imul
gs
pop
inc
inc
cs
test
push
stos
mov
std
in
or
les
add
fwait
not
outsl
add
add
add
inc
mov
fs
int
mul
aas
add
add
add
xlat
flds
das
lret
xlat
aad
mov
xor
scas
ror
or
insl
adc
das
popa
icebp
jecxz
insb
add
add
pop
ret
test
pop
cltd
cmp
data16
popf
hlt
ret
lret
cmpsb
xor
fs
cmp
cmc
loop
mov
mov
xor
and
add
add
bound
add
imul
push
and
lds
and
jnp
pusha
add
add
mov
sahf
cmpsb
cmp
cmp
and
or
add
add
add
and
add
aas
sbb
adc
aaa
rcrb
loop
out
sahf
pop
clc
test
add
mov
shll
mov
sbb
add
aam
and
add
add
xor
cli
les
insl
ss
rcll
lcall
xor
jle
mov
pop
sub
add
add
lods
mov
lods
mov
sub
add
add
add
cmc
push
dec
mov
jecxz
inc
mov
mov
jbe
jg
sbb
mov
ds
sbb
repz
push
test
add
add
add
adc
add
outsb
lods
mov
push
mov
add
add
xchg
sbb
xor
pop
add
add
add
push
pop
xor
mov
movsl
jecxz
mov
add
add
jp
cmpb
add
lods
jbe
sbb
out
fwait
pop
cmp
shlb
add
shlb
nop
cmc
int
stc
and
xchg
int
call
mov
and
add
add
bswap
mov
das
cld
sub
ffreep
mov
pusha
add
add
sti
mov
movsb
in
push
ljmp
out
rol
sahf
push
xor
jp
js
aad
add
add
push
jne
fidivrl
push
leave
add
add
add
pop
icebp
clc
xor
mov
and
add
add
pop
shrl
add
add
mov
das
leave
cld
iret
xor
je
call
sti
fmuls
out
cmc
leave
notl
add
add
cmp
ja
mov
in
cmp
inc
hlt
mov
in
rorb
add
ret
adc
xchg
imul
add
add
lock
xor
jns
mov
sbb
jbe
jmp
sbb
mov
jno
jo
pop
rolb
clc
and
mov
sbb
add
add
loope
and
add
add
shll
scas
push
sub
add
add
mov
fcmovb
cltd
mov
popf
fldenv
imul
cmc
or
add
add
les
xchg
mov
add
adc
mov
mov
icebp
mov
int3
push
mov
mov
lds
add
add
lds
mov
add
add
cmp
add
push
sti
mov
adc
add
add
mov
sbb
mov
push
inc
movsl
fmull
cmp
xchg
and
std
cs
fcoml
add
add
inc
aas
mov
aad
add
shll
sbb
repz
jge
out
std
scas
insl
push
xchg
outsl
or
shlb
xchg
xor
mov
pushf
insb
add
add
jg
je
ja
cmpsl
ret
scas
sbb
movsl
mov
add
add
imul
add
add
lea
jecxz
les
inc
mov
pop
xchg
in
sub
sbb
out
imul
add
add
or
clc
fmuls
mov
dec
andnps
loopne
mulb
add
add
in
mov
popa
imul
push
div
and
push
dec
mov
int3
lret
mov
mov
mov
pop
adc
xor
mov
mov
jle
clc
fcoml
and
test
addr16
cltd
cmpsl
cmp
lods
mov
xor
lds
add
add
xchg
out
loopne
xor
rolb
add
addl
or
add
add
pop
popf
sbb
mov
or
add
add
rcrl
mov
add
add
jns
dec
movsb
adc
sub
jl
lds
and
push
and
add
add
add
add
mov
sbb
das
faddl
mov
cli
mov
add
fidivrs
sub
idivl
clc
mov
mov
arpl
add
add
add
imul
adc
sbb
dec
rcr
fisttpll
nop
loopne
notb
mov
and
in
push
jp
adc
test
mov
pop
jl
addr16
add
add
cld
push
sbb
out
mov
sub
rorb
mov
ljmp
add
jmp
xor
cmp
pop
nop
repz
ss
xor
mov
outsb
adc
jecxz
push
fisubl
sub
fcoml
or
mov
inc
and
add
add
xor
test
dec
mov
jp
sbb
jle
mov
in
jno
pusha
mov
call
and
xchg
mov
or
sbb
xchg
fdivl
inc
mov
add
add
jp
xor
mov
xchg
testl
arpl
fadds
push
add
add
ja
sbb
lret
cmp
call
in
daa
mov
out
pusha
add
add
xor
xchg
adc
leave
stos
es
dec
lock
mov
mov
out
xchg
sub
add
add
in
jo
jmp
add
or
jb
mov
out
jmp
mov
rcl
lea
or
sub
popl
adc
addr16
cmpsb
mov
insb
add
add
push
mov
mov
jnp
and
add
add
les
sbb
aaa
xchg
sub
stos
js
in
push
mov
mov
xchg
lock
ss
push
mov
jle
push
xchg
cmp
add
add
rolb
pop
rcrb
add
or
mov
xor
data16
add
add
mov
mov
inc
adc
stc
xchg
mov
ja
mov
add
add
push
imul
add
add
pop
xor
sub
adcl
lods
idivl
mov
xchg
lock
jae
mov
mov
test
pop
mov
or
add
add
in
or
leave
push
hlt
mov
cmpsb
dec
fs
imul
add
add
outsl
push
pop
enter
add
add
cld
jecxz
mov
mov
mov
inc
mov
int
stos
lods
inc
inc
add
add
jbe
push
fwait
sbbb
int
pop
bound
jns
push
adc
fwait
inc
lret
add
add
push
outsb
movsl
inc
jmp
ss
mov
add
add
xor
fwait
scas
xchg
mov
ljmp
scas
jo
out
mov
sti
loop
mov
dec
add
add
sub
fs
add
add
negb
add
lret
sbb
dec
push
popa
ret
aas
or
mov
xor
mov
xchg
dec
shlb
test
add
dec
add
add
add
cmp
in
jno
mov
add
cmpsb
jns
test
sbb
push
fsubl
mov
in
mov
add
add
cmpsl
sbb
aaa
inc
lds
xchg
arpl
loope
insl
cmc
andb
push
inc
mov
sti
sub
push
daa
test
mov
add
add
add
mov
add
add
fwait
ret
mov
fsubs
scas
add
add
dec
flds
mov
mov
add
mov
fs
push
into
lds
out
push
xor
jge
mov
jno
mov
pop
adc
out
fwait
or
outsb
icebp
mov
add
add
add
add
test
es
jmp
gs
dec
jp
mov
mov
lret
push
mov
mov
mov
xor
add
je
mov
subb
leave
cmp
xchg
dec
rol
xchg
std
xchg
int
add
add
add
pop
push
cld
sbb
pop
adc
add
add
add
jmp
push
xchg
adc
sub
and
add
add
int
test
jle
outsb
and
nop
jge
or
add
sbb
lahf
outsb
outsl
outsb
ret
fbstp
sbb
jg
sti
xlat
fdivs
xlat
sbb
add
and
mov
mov
sti
pop
cmpsl
push
inc
fnstenv
outsl
aas
cmpsb
lds
lds
addr16
shl
add
mov
jmp
sbbl
push
into
lcall
add
add
stos
psrlq
mov
add
add
xchg
mov
mov
lret
movsl
push
mov
repnz
int
jge
stos
adc
pushf
inc
std
subl
add
add
fldenv
jg
push
pop
xor
jl
shrb
add
add
add
or
call
add
aad
mov
je
cmp
mov
push
push
cmp
and
add
add
mov
mov
mov
and
add
mov
loop
push
lods
push
repz
add
add
pop
hlt
push
push
pop
xor
jne
mov
xchg
or
add
add
iret
dec
clc
das
addr16
sti
fsubs
add
add
into
rcll
outsb
mov
cld
sub
and
add
add
mov
add
add
andl
call
movsb
data16
sub
add
scas
notl
fdivl
add
stc
pcmpgtd
dec
sbb
add
add
add
sub
sbb
pop
push
jmp
xchg
pop
or
mov
mov
xor
add
add
add
add
inc
fistpl
popf
cmpsb
orb
mov
cltd
fcomip
push
and
pop
in
dec
add
add
xchg
pop
add
add
add
add
add
sbb
iret
dec
mov
or
iret
hlt
int3
fcmove
lods
mov
cmp
add
push
sub
add
mov
add
mov
add
or
add
add
add
push
mov
add
dec
movsl
xchg
xchg
imul
sub
cmp
addr16
mov
repz
sbb
dec
movsl
lds
fldenv
shll
nop
adc
inc
mov
mov
lods
out
jmp
xor
add
add
mov
mov
inc
add
add
fisubl
jmp
rcll
jno
dec
mov
or
sbbl
add
add
mov
inc
mov
pusha
add
add
and
add
or
add
add
mov
xor
fucom
fimuls
fstl
sysenter
mov
push
in
divb
sti
mov
jg
push
iret
pop
movsb
jb
out
add
inc
adc
shrb
add
xchg
mov
push
mov
repz
pop
fsubp
fistps
inc
add
add
cwtl
rcl
dec
popa
inc
add
add
xchg
cmp
mov
add
add
mov
jb
sub
jno
out
push
xchg
inc
imul
dec
jns
imul
fwait
cmpsl
mov
cmc
pusha
add
add
sahf
adc
mov
push
enter
call
icebp
push
mov
fld
cmpsl
sbbl
pushf
add
icebp
out
lock
add
add
sub
jecxz
out
push
xchg
push
pop
sub
dec
add
add
push
dec
or
add
add
into
xor
mov
mov
call
imulb
std
dec
ss
imul
rcl
push
ljmp
aad
dec
cmp
add
add
les
lds
add
add
mov
jge
lods
outsb
call
lods
mov
popf
pop
stos
subl
pushf
adc
mov
cmp
rcl
mov
sub
aam
dec
stc
pop
into
int
mov
jno
cmp
push
fnstsw
std
out
aaa
adc
jl
dec
mov
mov
loop
mov
jl
sbb
lret
popl
in
mov
loope
cli
mov
subb
mov
in
xchg
cmp
aaa
pusha
mov
xlat
xchg
jnp
cli
and
add
add
cmpsl
sbb
clc
jae
mov
cmp
in
out
mov
mov
add
add
es
int3
divb
inc
rorl
lret
pusha
mov
mov
adc
mov
add
add
add
add
add
idivb
dec
addr16
adc
ret
cmp
dec
pop
je
push
sbb
and
js
mov
mov
lds
add
add
add
add
sub
jne
mov
pop
ljmp
inc
xor
out
call
fidivl
dec
int3
movsl
sub
xor
movsl
not
inc
lds
mov
xor
pop
lahf
xchg
sub
add
add
add
ret
cmp
lods
jnp
jmp
clc
ss
xor
ret
shlb
cmp
and
or
sbbb
mov
in
mov
mov
push
fnstsw
gs
mov
mov
mov
stos
mov
dec
add
add
shll
xor
fimuls
mov
xchg
dec
pop
mov
shl
out
lcall
movsl
movsl
inc
mov
in
mov
movsl
mov
pop
fstpl
jo
fidivrl
mov
aaa
popa
outsl
and
mov
add
orb
add
add
inc
aam
sbb
add
mov
sbb
out
or
mov
add
or
dec
movsb
or
add
add
loope
aam
pop
inc
ret
jb
scas
inc
mov
jmp
add
add
add
jecxz
pop
xchg
out
xchg
les
icebp
lea
add
add
cmp
xor
add
add
or
add
add
mov
xchg
xchg
inc
add
add
lea
xchg
pop
cmc
mov
xchg
push
andl
stos
sub
add
xor
icebp
mov
bound
fidivl
xchg
aas
pop
dec
sahf
push
mov
repz
mov
xchg
repz
cmp
cltd
sub
add
add
mov
mov
adc
push
test
loop
jbe
add
add
adc
scas
fbld
pop
jns
mov
leave
adc
int
push
repnz
test
xchg
push
push
popf
mov
int3
dec
xor
insb
add
add
xchg
cli
std
clc
push
andl
test
mov
or
out
adc
mov
jmp
add
add
add
mov
push
inc
mov
mov
mov
into
cld
cmp
adc
dec
mov
icebp
out
mov
fcmovnb
lret
cmp
pop
xchg
push
inc
xchg
int3
clc
nop
mov
scas
sbb
scas
mov
imul
xchg
push
jp
inc
add
add
andb
iret
jae
jno
push
repnz
icebp
mov
xchg
dec
pop
mov
les
inc
inc
add
add
inc
add
add
in
add
add
push
dec
add
add
adc
add
add
dec
fwait
addr16
lds
clc
inc
call
xchg
cld
sub
add
add
add
aam
cltd
bound
mov
cltd
jmp
pushf
aaa
scas
push
int
sbbl
push
mov
arpl
mov
aas
bound
add
add
push
daa
push
lods
repz
add
push
jno
cmpb
lret
sbb
inc
jno
pusha
add
add
popf
jno
add
add
add
je
arpl
test
aam
sub
add
mov
inc
mov
cmpsl
stc
and
add
add
mov
fs
push
addl
add
pop
adc
mov
je
cmpl
repnz
add
add
loop
dec
fcmovnu
ljmp
or
scas
lods
scas
insb
add
add
lods
mov
pop
scas
call
adc
