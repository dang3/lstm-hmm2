out
in
jecxz
in
out
in
in
in
in
in
out
in
in
in
out
in
call
loop
out
in
out
in
jecxz
in
in
in
in
in
in
in
in
in
out
in
jecxz
in
loop
in
jecxz
in
call
loop
mov
loope
in
out
in
out
in
jmp
loop
shl
loop
mul
loop
pop
out
in
loope
in
call
loop
and
in
in
in
loope
in
loope
in
out
in
call
loop
cmp
loop
xchg
jecxz
in
jmp
loop
mov
loop
mov
jecxz
in
in
in
jecxz
in
in
in
out
in
jmp
loop
cmp
loop
mov
loop
ftst
loop
jmp
loop
mov
loop
sbb
in
in
jmp
loop
or
loop
or
loop
push
call
loop
shl
in
in
in
call
loop
scas
out
in
loop
in
jecxz
in
loop
in
loop
in
in
in
in
in
call
loop
loop
in
out
in
call
loop
adc
loop
mov
jecxz
in
out
in
in
in
in
in
jecxz
in
loop
in
in
in
in
in
in
in
loop
in
out
in
jecxz
in
in
in
call
loop
out
loop
in
loop
shl
loop
push
jecxz
in
in
in
jecxz
in
out
in
call
loop
xchg
in
in
out
in
call
loop
cmp
jecxz
in
loope
in
loope
in
out
in
out
in
jecxz
in
out
in
jecxz
in
loop
in
in
in
loop
in
out
in
jmp
loop
push
out
in
call
loop
mov
loope
in
out
in
jecxz
in
out
in
call
loop
jne
loop
xor
loop
insb
loop
in
loope
in
loop
in
call
loop
loop
in
out
in
call
loop
mov
loop
shl
in
out
in
out
in
out
in
loope
in
jecxz
in
jecxz
in
out
in
in
in
jecxz
in
in
in
call
loop
xor
loop
or
loop
movsl
out
in
jecxz
in
jmp
loop
sbb
loop
pop
out
in
out
in
jecxz
in
loop
in
call
loop
push
in
in
out
in
loop
in
out
in
in
in
loop
in
call
loop
enter
adc
loop
or
loop
lcall
in
in
in
jmp
loop
shr
loop
enter
hlt
loope
in
jmp
loop
mov
out
in
out
in
in
in
out
in
out
in
jmp
loop
loopne
loop
dec
in
in
out
in
loop
in
jmp
loop
and
loop
adc
loop
loop
dec
out
in
jecxz
in
in
in
out
in
in
in
in
in
in
in
jecxz
in
loop
in
out
in
loope
in
loop
in
out
in
out
in
jecxz
in
out
in
call
loop
sub
loop
xor
loop
into
in
in
call
loop
mov
loop
int3
out
in
out
in
call
loop
sbb
loop
in
jmp
loop
int3
jecxz
in
in
in
call
loop
inc
jmp
loop
inc
jmp
loop
mov
loop
in
jecxz
in
call
loop
sub
loop
in
call
loop
aas
in
in
out
in
out
in
loope
in
out
in
out
in
call
loop
out
loop
scas
jecxz
in
in
in
jecxz
in
in
in
jecxz
in
loop
in
in
in
out
in
out
in
out
in
jecxz
in
in
in
jecxz
in
out
in
loope
in
in
in
out
in
out
in
in
in
in
in
in
in
call
loop
in
out
in
in
in
loope
in
loope
in
loop
in
jmp
loop
xor
loop
pop
loop
in
loop
in
jecxz
in
out
in
loop
in
out
in
out
in
loop
in
in
in
loope
in
loope
in
in
in
out
in
loop
in
out
in
loop
in
loope
in
loop
in
loop
in
loope
in
loop
in
jecxz
in
loope
in
loop
in
call
loop
leave
in
in
out
in
out
in
out
in
in
in
in
in
jecxz
in
jecxz
in
jecxz
in
in
in
jecxz
in
in
in
in
in
out
in
call
loop
add
loop
mov
loop
pop
call
loop
in
loop
in
out
in
in
in
loope
in
out
in
jecxz
in
loop
in
out
in
loop
in
loop
in
in
in
in
in
loop
in
call
loop
push
loop
in
loope
in
jecxz
in
loop
in
in
in
jecxz
in
in
in
out
in
loop
in
call
loop
daa
in
in
in
in
loop
in
call
loop
and
in
loop
in
in
in
jecxz
in
loop
in
in
in
loope
in
out
in
out
in
out
in
in
in
loop
in
in
in
out
in
loope
in
loop
in
jecxz
in
jecxz
in
loop
in
out
in
call
loop
cmp
loop
mov
loop
xor
loop
lods
call
loop
loop
out
loop
push
in
in
in
in
in
in
out
in
loop
in
out
in
loop
in
jmp
loop
aad
loop
loope
loop
xlat
in
in
jmp
loop
pop
jecxz
in
loop
in
loop
in
jecxz
in
jecxz
in
in
in
loop
in
out
in
in
in
loop
in
in
in
jmp
loop
and
out
in
jecxz
in
loope
in
in
in
call
loop
sub
loop
and
loop
xchg
in
in
jmp
loop
shl
loop
jg
loop
cmpsl
out
in
in
in
out
in
loop
in
loop
in
out
in
loop
in
call
loop
mov
loop
jecxz
in
jecxz
in
out
in
jecxz
in
jecxz
in
loop
in
loop
in
in
in
out
in
out
in
call
loop
or
loop
out
call
loop
repz
in
in
in
loop
in
in
in
out
in
in
in
loope
in
loope
in
loope
in
out
in
loop
in
in
in
call
loop
call
loop
scas
in
in
jecxz
in
out
in
call
loop
sub
in
in
in
in
in
loope
in
out
in
jecxz
in
loope
in
out
in
in
in
loope
in
loop
in
in
in
out
in
in
in
in
in
in
in
out
in
out
in
in
in
loop
in
loope
in
in
in
call
loop
test
out
in
loop
in
call
loop
ljmp
in
out
in
jecxz
in
loope
in
out
in
out
in
out
in
loope
in
out
in
in
in
jmp
loop
out
loop
cmp
loop
popf
out
in
out
in
out
in
out
in
call
loop
xor
loop
stos
in
in
loope
in
jmp
loop
loope
in
in
in
in
in
call
loop
jno
loop
ret
in
in
in
out
in
call
loop
cwtl
loope
in
loop
in
out
in
loop
in
loop
in
in
in
loop
in
out
in
out
in
loop
in
loop
in
call
loop
in
in
in
jecxz
in
jecxz
in
in
in
in
in
loop
in
loop
in
out
in
jecxz
in
in
in
jecxz
in
in
in
in
in
out
in
jmp
loop
sub
loop
add
loop
xchg
jecxz
in
jecxz
in
loop
in
jecxz
in
in
in
in
in
out
in
call
loop
int
loop
xlat
jecxz
in
call
loop
inc
call
loop
sub
in
in
in
in
call
loop
shr
loop
cli
out
in
in
in
loope
in
in
in
out
in
loope
in
in
in
loop
in
call
loop
loop,pn
in
out
in
loop
in
in
in
in
in
out
in
jecxz
in
out
in
jecxz
in
in
in
jecxz
in
out
in
out
in
out
in
out
in
out
in
loope
in
out
in
loop
in
call
loop
out
loop
loop
loop
add
loop
fninit
loop
pop
jecxz
in
loop
in
loop
in
in
in
in
in
out
in
out
in
in
in
call
loop
pop
out
in
in
in
loop
in
jecxz
in
out
in
loop
in
out
in
call
loop
pop
in
in
in
in
loope
in
call
loop
and
loop
in
loop
in
jecxz
in
out
in
in
in
in
in
in
in
in
in
call
loop
xchg
out
in
out
in
out
in
in
in
loop
in
out
in
out
in
loope
in
loope
in
in
in
in
in
loop
in
loop
in
out
in
out
in
in
in
out
in
call
loop
clc
call
loop
lods
loop
in
call
loop
shl
loop
mov
loop
mov
loope
in
out
in
out
in
out
in
out
in
jmp
loop
cmp
call
loop
xor
loop
into
out
in
call
loop
and
loop
and
in
jecxz
in
call
loop
dec
in
in
call
loop
pop
in
in
jmp
loop
adc
loop
dec
jmp
loop
lret
out
in
call
loop
mov
loop
mov
loop
xor
out
in
in
in
loope
in
out
in
out
in
in
in
call
loop
xchg
loop
in
jmp
loop
out
call
loop
outsl
out
in
in
in
out
in
out
in
jecxz
in
call
loop
push
in
in
jecxz
in
in
in
out
in
out
in
loope
in
loope
in
loope
in
out
in
jecxz
in
out
in
loope
in
in
in
in
in
loop
in
out
in
out
in
loop
in
in
in
call
loop
mul
loop
mov
loop
aam
loop
sbb
loop
sbb
loop
fsub
loop
jmp
loope
in
out
in
in
in
jmp
loop
shl
loop
pop
call
loop
je
loop
add
out
in
in
in
in
in
call
loop
es
in
call
loop
ret
in
jecxz
in
call
loop
ret
in
out
in
jecxz
in
jecxz
in
out
in
out
in
call
loop
mov
loop
cmp
loop
out
loope
in
loop
in
in
in
in
in
jecxz
in
in
in
in
in
in
in
loop
in
jmp
loop
and
loop
imul
in
in
in
loop
in
loope
in
in
in
in
in
call
loop
test
loop
jnp
loop
pop
call
loop
cmpsl
out
in
jecxz
in
out
in
out
in
call
loop
jmp
loop
lods
loope
in
out
in
in
in
call
loop
popf
loope
in
loop
in
loop
in
jecxz
in
loope
in
out
in
loop
in
in
in
out
in
loop
in
loop
in
loope
in
jecxz
in
loop
in
out
in
in
in
jecxz
in
out
in
call
loop
mov
loop
in
jecxz
in
in
in
in
in
in
in
in
in
in
in
jecxz
in
in
in
out
in
call
loop
out
loop
imul
in
in
in
loope
in
out
in
call
loop
in
out
in
out
in
call
loop
push
jecxz
in
loop
in
in
in
call
loop
mov
loop
mov
out
in
loop
in
call
loop
into
jecxz
in
loop
in
call
loop
or
loop
ja
loop
outsl
out
in
in
in
out
in
jmp
loop
mov
loope
in
loop
in
loop
in
out
in
in
in
loop
in
loope
in
in
in
out
in
loope
in
jecxz
in
jecxz
in
call
loop
mov
loope
in
call
loop
loopne
loop
mul
loop
movsb
out
in
in
in
in
in
jecxz
in
jecxz
in
in
in
out
in
loop
in
out
in
out
in
out
in
loop
in
in
in
loop
in
jecxz
in
out
in
in
in
in
in
loope
in
in
in
loope
in
call
loop
test
loop
in
loop
in
in
in
in
in
in
in
out
in
loop
in
out
in
loop
in
jecxz
in
loop
in
in
in
out
in
loop
in
out
in
loop
in
out
in
out
in
in
in
out
in
call
loop
push
jmp
loop
shl
loop
jo
loop
pop
loope
in
call
loop
dec
jmp
loop
and
loop
fs
in
jecxz
in
loop
in
in
in
jecxz
in
call
loop
out
loop
loope
in
loope
in
out
in
in
in
loope
in
loop
in
out
in
out
in
loop
in
in
in
jecxz
in
loop
in
call
loop
adc
loop
push
call
loop
loop
lahf
out
in
loop
in
jecxz
in
out
in
in
in
call
loop
xchg
in
in
call
loop
cli
loope
in
call
loop
scas
in
in
call
loop
fninit
loop
aam
loop
fsubp
loop
int3
loope
in
in
in
jecxz
in
out
in
call
loop
or
loop
mov
loop
in
out
in
call
loop
mov
out
in
loop
in
out
in
in
in
out
in
loop
in
loope
in
in
in
call
loop
jp
loop
lock
in
jmp
loop
shr
loop
shl
loop
adc
loop
adc
loop
xchg
in
in
loop
in
out
in
loop
in
out
in
loop
in
in
in
out
in
out
in
in
in
call
loop
fsubr
loop
xchg
call
loop
imul
loop
mov
loop
ljmp
in
jmp
loop
repz
in
call
loop
lods
jecxz
in
loop
in
in
in
call
loop
out
loop
lods
in
in
in
in
jecxz
in
out
in
out
in
call
loop
sub
loop
add
loop
jbe
loop
sbb
loop
jae
loop
psubsb
in
out
in
jecxz
in
out
in
in
in
loope
in
jecxz
in
loope
in
jecxz
in
jecxz
in
jmp
loop
outsb
out
in
out
in
in
in
loop
in
loop
in
out
in
out
in
out
in
jecxz
in
in
in
out
in
loope
in
loope
in
out
in
in
in
call
loop
push
out
in
in
in
in
in
out
in
in
in
jecxz
in
loop
in
loope
in
jecxz
in
jecxz
in
jecxz
in
in
in
in
in
out
in
out
in
out
in
jecxz
in
loope
in
in
in
call
loop
pop
loop
in
out
in
out
in
out
in
loope
in
out
in
in
in
out
in
in
in
out
in
loop
in
in
in
out
in
jmp
loop
fld1
loop
sbb
loop
push
jmp
loop
jns
loop
es
in
loop
in
loope
in
in
in
out
in
in
in
in
in
in
in
out
in
call
loop
jae
loop
pushf
loope
in
in
in
out
in
out
in
out
in
out
in
out
in
in
in
out
in
loop
in
loop
in
in
in
out
in
in
in
in
in
in
in
jecxz
in
loop
in
in
in
out
in
in
in
loop
in
loop
in
jmp
loop
test
loop
xchg
in
in
in
in
in
in
jecxz
in
out
in
loop
in
jecxz
in
jecxz
in
in
in
jecxz
in
out
in
out
in
out
in
in
in
in
in
jecxz
in
jecxz
in
out
in
loope
in
out
in
loop
in
jecxz
in
jecxz
in
call
loop
xchg
out
in
in
in
jecxz
in
call
loop
shl
loop
scas
out
in
call
loop
pop
loop
in
in
in
call
loop
loope
loop
in
in
call
loop
pop
jmp
loop
inc
jmp
loop
imul
in
call
loop
mov
in
in
call
loop
ret
in
call
loop
shr
loop
dec
jmp
loop
addr16
in
loop
in
loop
in
loop
in
in
in
jecxz
in
jecxz
in
out
in
call
loop
mov
loop
js
loop
ret
in
jmp
loop
sub
jmp
loop
push
call
loop
hlt
loop
in
in
in
jecxz
in
in
in
call
loop
lock
in
loop
in
loope
in
jmp
loop
shr
in
in
in
jecxz
in
in
in
out
in
in
in
jmp
loop
lret
in
out
in
out
in
loop
in
jecxz
in
jecxz
in
call
loop
es
in
call
loop
and
loop
ljmp
in
loope
in
call
loop
and
loop
and
loop
inc
out
in
out
in
in
in
out
in
jecxz
in
loope
in
loope
in
in
in
loop
in
loop
in
jecxz
in
in
in
in
in
in
in
out
in
jecxz
in
in
in
in
in
in
in
in
in
out
in
in
in
out
in
loope
in
jecxz
in
loop
in
jmp
loop
scas
call
loop
lret
out
in
call
loop
add
loop
cmp
loop
and
loop
popf
jecxz
in
loop
in
out
in
loop
in
in
in
in
in
out
in
call
loop
fwait
loop
in
out
in
call
loop
shl
in
out
in
call
loop
out
in
call
loop
fsub
loop
xchg
out
in
in
in
jecxz
in
call
loop
ljmp
in
out
in
out
in
jmp
loop
mov
loop
scas
jecxz
in
in
in
loope
in
jmp
loop
loop
pusha
out
in
in
in
jecxz
in
loop
in
in
in
loop
in
jecxz
in
in
in
out
in
out
in
in
in
out
in
in
in
out
in
out
in
in
in
jecxz
in
loope
in
out
in
in
in
loop
in
jmp
loop
add
loop
sbb
loop
fsub
loop
scas
jecxz
in
loope
in
in
in
in
in
loop
in
call
loop
mov
out
in
loop
in
out
in
jmp
loop
outsb
jecxz
in
loop
in
in
in
out
in
out
in
loope
in
jecxz
in
call
loop
shl
loop
cld
jecxz
in
out
in
jecxz
in
in
in
out
in
out
in
out
in
loop
in
out
in
in
in
out
in
in
in
in
in
loop
in
out
in
jmp
loop
sbb
call
loop
xchg
call
loop
or
loop
jl
loop
ss
in
jmp
loop
mov
loop
jmp
loop
mul
loop
push
jecxz
in
in
in
loop
in
out
in
loop
in
loop
in
out
in
in
in
loope
in
out
in
in
in
loope
in
in
in
out
in
out
in
jecxz
in
call
loop
mov
loop
enter
adc
loop
shl
loop
test
loop
adc
out
in
in
in
out
in
out
in
loope
in
xchg
and
pushl
lcall
add
mov
imul
jno
jmp
ljmp
add
adc
mov
add
pushl
addl
pop
aas
addb
jmp
inc
add
ret
add
int3
jnp
lahf
test
jmp
add
xchg
jae
pushl
add
add
add
dec
adc
dec
adc
pushl
add
add
add
daa
add
loope
push
ret
add
inc
add
add
jle
add
or
incl
add
sbb
call
push
add
call
in
sub
cs
push
add
scas
mov
lods
pop
and
lcall
add
lahf
inc
add
incl
mov
cld
dec
push
lods
xchg
xchg
fidivl
inc
add
add
pop
pop
repnz
call
add
and
mov
shr
jbe
scas
xchg
addb
add
add
call
in
mov
insl
pop
movl
sub
out
lea
jp
mov
add
addb
cld
mov
jo
jmp
push
scas
fiaddl
insb
sbb
add
cmpsl
add
jp
ucomiss
movsl
add
cs
add
add
pushf
mov
xchg
mov
scas
fadd
add
jg
add
and
call
pushl
imul
insl
mov
mov
ljmp
icebp
decl
cmp
cmpsl
add
repnz
jmp
ret
imull
xchg
push
add
cwtl
add
cmp
inc
add
add
aad
add
bound
pushl
mov
pop
or
add
add
add
call
add
xlat
push
rolb
xor
pushl
add
pushl
jns
cltd
pop
loopne
mov
neg
out
imul
lahf
pop
sbb
sbb
add
outsb
mov
scas
shl
mov
notl
call
mov
jg
mov
add
aam
pop
xor
pushl
mov
add
adc
pusha
add
xchg
adc
decl
add
mov
add
add
das
addb
xor
ljmp
mov
add
aas
xchg
sub
cmp
add
adc
mov
add
jecxz
sbb
add
adc
incl
add
rcr
repz
push
add
add
push
add
xlat
mov
push
adc
push
je
add
hlt
xor
roll
jns
push
add
push
std
stos
xchg
mov
lock
push
add
add
or
add
sbb
add
lret
jmp
add
addb
rolb
add
lahf
data16
hlt
sub
bound
call
add
pop
add
decl
mov
cmp
dec
popf
mov
sbb
jb
incl
fsubs
add
imul
lahf
int
fwait
imul
add
addb
add
add
daa
add
insl
mov
add
add
cmp
xchg
add
push
xor
jmp
add
movsb
add
loopne
aas
cmp
mov
inc
add
or
or
mov
add
in
out
fnstsw
out
jle
add
pop
outsl
add
fdivl
nop
test
xchg
sbb
fbld
lcall
push
out
jbe
mov
add
sti
xchg
jmp
add
iret
movb
fisubrl
add
jge
int
add
adc
incl
add
shll
jmp
mov
add
lret
add
add
mov
add
xor
add
add
loop
mov
sub
fwait
or
add
test
push
outsl
jge
add
mov
inc
add
test
int
faddl
add
add
jmp
add
pop
add
jg
adc
call
jmp
add
mov
push
add
add
cmp
add
cmp
jmp
add
xor
add
add
add
cmc
add
add
arpl
ljmp
add
xchg
mov
add
jmp
add
pop
fucomp
jae
decl
dec
pushf
dec
mov
or
mov
or
xchg
pop
test
lahf
dec
roll
xchg
and
jns
lcall
cmp
inc
add
jmp
push
lods
aad
loop
lcall
inc
add
mov
jmp
xchg
data16
sub
test
cwtl
add
ljmp
mov
psubsw
add
ljmp
daa
add
stos
cmp
pop
adc
decl
sbb
mov
rolb
inc
add
scas
cmp
hlt
pop
mov
int3
ljmp
add
add
or
push
xor
incl
jnp
add
xlat
jl
add
add
sbb
add
jnp
popf
loopne
pop
sub
sti
adc
add
push
add
pop
into
sub
add
cmp
inc
add
xchg
pop
push
lret
pop
sti
jge
add
sti
out
or
push
and
clc
pop
pop
add
mov
scas
adc
add
inc
add
mov
add
cmp
aam
mov
add
addl
aas
pop
xor
incl
decl
add
outsb
inc
add
push
cmp
add
sahf
mov
add
call
push
mov
add
fwait
xchg
mov
jb
lcall
push
pop
mov
sub
mov
rcll
mov
movb
add
testb
mov
mov
xor
add
pop
add
add
test
add
call
pushl
add
pop
push
jno
incl
call
add
mov
xor
dec
adc
lcall
mov
insb
mov
stos
lret
xchg
add
ljmp
jb
jmp
dec
test
cmp
push
and
decl
add
mov
cmp
sub
call
mov
add
lods
and
jmp
mov
add
scas
mov
pusha
add
add
mov
mov
fidivs
lcall
cmpsb
add
add
out
aad
xchg
movsl
add
add
addb
leave
inc
add
outsb
imul
add
cmpsl
add
in
add
push
push
add
ds
add
xchg
add
sub
sbb
add
add
add
sti
mov
icebp
sbb
xchg
and
mov
bound
ljmp
add
add
stc
cmp
in
mov
add
xchg
gs
mov
adc
inc
add
add
xchg
xlat
xlat
notl
add
add
add
mov
or
roll
mov
or
call
data16
dec
test
cltd
dec
push
add
jmp
add
dec
cltd
sub
dec
nop
hlt
cmc
mov
das
stos
loope
cmp
jg
or
xchg
mov
out
sbb
jge
add
push
mov
jge
roll
and
pop
adc
push
add
jmp
das
pop
add
add
dec
mov
push
add
pushl
mov
je
add
sahf
and
call
push
xor
lcall
mov
add
je
ficomps
cltd
ljmp
add
jl
add
add
adc
lcall
add
addl
ljmp
cmpsb
add
add
dec
rcr
call
shlb
add
lock
adc
push
pop
xchg
jno
jmp
add
dec
lods
movb
add
bound
pushl
add
repz
add
jbe
add
fs
inc
add
call
jmp
add
jo
out
pop
daa
dec
and
push
mov
sub
push
push
push
push
push
call
push
push
call
cmp
je
mov
lea
push
push
push
push
call
push
call
xchg
cld
lea
sub
mov
lock
lea
lock
je
ret
call
fisttpll
mov
sub
popf
bound
ljmp
mov
cmp
xor
lcall
and
pop
movsl
add
dec
insb
aad
mov
add
push
jns
pushf
movsb
add
add
inc
add
popf
clc
loopne
loop
lea
inc
add
roll
lcall
fildl
decl
mov
add
adc
ljmp
adc
fisttps
cmp
xchg
movl
lret
jmp
add
sub
int
mov
or
outsl
aas
roll
add
add
in
xor
and
call
add
outsl
add
incl
mov
scas
ret
add
jl
add
add
xchg
sub
fisttpl
add
pop
or
je
ja
ret
push
add
stc
fisubrl
add
push
mov
addl
test
nop
pop
sbb
jle
add
mov
mov
add
pushl
incl
add
add
clc
into
push
add
sbb
rol
add
mov
add
cmp
add
call
aas
mov
scas
clc
xor
cmp
add
add
bound
ljmp
push
jle
cmpsl
add
jge
sbb
aaa
stos
mov
mov
adc
cmp
pop
popa
add
scas
add
jmp
add
lods
clc
rolb
push
sbb
inc
add
add
add
ss
sub
sarl
jl
cld
mov
and
addl
push
jge
int
cmc
lcall
xchg
mov
xor
add
inc
add
dec
xlat
cmpsl
add
insl
fcoml
data16
xor
call
add
xchg
inc
add
addb
loop
incl
decl
mov
aas
cmc
movsb
add
dec
div
mov
add
add
jno
pushl
scas
roll
sub
std
add
call
xchg
lahf
jo
call
add
jae
call
fdivs
push
add
xor
add
jg
add
ljmp
jmp
add
xor
incl
or
add
mov
dec
in
repnz
mov
jle
lahf
test
cmp
incl
std
adc
add
jbe
bound
pushl
add
xor
add
or
test
or
arpl
call
add
popf
lea
add
add
sbb
out
int
mov
add
add
add
imull
push
add
mov
add
js
add
and
decb
sub
mov
jl
push
mov
int
add
lcall
cld
and
call
inc
add
add
push
cld
mov
mov
ljmp
outsl
pop
aas
cli
xor
ljmp
test
mov
xchg
jb
jmp
mov
xor
jmp
cmp
add
jbe
add
add
addl
add
add
sahf
sub
arpl
dec
xchg
test
add
lods
sti
or
xor
jmp
out
mov
stos
in
add
add
adc
decl
pop
xchg
mov
sahf
mov
add
enter
mov
add
rcll
add
aas
mov
cmp
add
cmp
jg
dec
lcall
add
in
addl
add
imull
xor
push
ret
add
pusha
add
push
add
pop
cmpsb
add
add
push
add
pop
pop
mov
mov
xchg
mov
add
push
add
in
mov
add
mul
add
clc
lods
mov
add
std
push
addb
add
inc
add
mov
xor
jmp
call
lahf
mov
push
add
inc
add
std
push
add
enter
pop
aam
add
jge
pop
in
lods
sbb
dec
bound
lcall
xlat
cmp
in
mov
sub
add
fcoms
push
add
in
sub
add
das
jecxz
fidivs
add
push
sub
push
add
dec
xchg
sbb
mov
icebp
int3
je
xchg
sbb
icebp
roll
add
test
add
mov
test
pushl
add
ret
add
daa
add
sbb
repz
hlt
insb
addl
data16
push
add
jp
add
inc
add
mov
insb
cmp
add
test
push
rcl
mov
mov
jnp
add
add
movsb
add
dec
dec
dec
xchg
jmp
cmp
mov
pop
loope
mov
int3
mov
add
add
fstps
and
call
push
inc
add
add
call
incl
add
or
add
cmp
iret
dec
push
jae
incl
pushl
mov
add
inc
add
aaa
and
jmp
sbb
pusha
add
in
pop
sbb
mov
imul
sbb
idivl
pop
mov
add
stos
mov
dec
push
pushf
scas
sbb
flds
outsl
addl
call
cmpsb
add
call
pop
mov
jne
scas
cmp
inc
add
popa
add
mov
mov
add
xchg
inc
add
pop
bound
call
cs
xchg
in
jbe
push
loop
jns
lcall
sbb
add
pop
sub
push
and
call
lds
xchg
sbb
add
add
mov
nop
enter
jnp
fwait
data16
push
add
adc
call
add
cs
std
les
sbb
cmp
add
stos
addb
add
xchg
dec
lds
in
fsubrs
idiv
bound
fndisi(8087
add
aam
or
dec
mov
add
jb
incl
jmp
add
mov
add
and
decl
fwait
repnz
add
add
popf
ds
iret
pushf
xchg
and
inc
add
ja
xchg
sub
add
addr16
fnsave
or
ljmp
fistpl
mov
fisttps
test
sti
sub
lret
sub
jl
pop
dec
pop
fistps
add
sbb
add
cmp
mov
xchg
mov
insl
mov
decl
add
or
dec
test
int
add
repz
push
cwtl
daa
add
xor
sbb
testl
add
adc
pop
data16
pushf
or
add
pop
mov
sysret
add
mov
loop
sarl
icebp
cmp
add
cmc
arpl
ljmp
nop
sbb
add
add
add
xchg
dec
lods
insl
adc
xor
call
push
cmpsl
add
jle
add
mov
ljmp
sub
add
ror
test
sub
out
pop
test
add
ret
add
imul
ficoms
dec
lds
and
add
and
incl
add
or
push
roll
addb
add
inc
add
pop
rol
add
insl
leave
cmp
add
xlat
rolb
push
add
add
add
cs
add
sub
add
rolb
dec
stos
cmc
sub
negb
pop
std
lods
enter
insb
inc
add
addl
add
roll
sbb
lock
pop
jecxz
xor
ficoml
add
mov
imul
lahf
push
add
addl
sbb
add
outsb
xchg
je
movb
cmp
icebp
popf
cli
sti
xchg
fbstp
sub
out
test
mov
add
push
icebp
call
jns
rorb
movsb
add
add
add
add
fdivr
or
mov
add
push
add
cmp
pushl
testl
add
das
std
add
add
je
add
sbb
jecxz
add
lcall
add
decl
call
movsb
add
add
add
pop
push
jecxz
push
enter
stc
jecxz
inc
add
xor
jp
in
cmp
dec
mov
cli
mov
imul
pop
out
faddp
add
lds
movsl
add
add
adc
cmp
add
adc
fcoms
push
add
popa
add
push
add
clc
lock
add
mov
push
cli
inc
add
xor
pop
enter
push
or
jmp
jmp
mov
ss
out
cmp
add
lcall
mov
add
pop
xlat
lock
neg
jge
xchg
dec
insl
cmp
imul
sub
test
jae
ljmp
addb
xchg
adc
daa
add
add
jg
jae
jmp
sub
add
and
out
sbb
les
pop
xor
call
movsb
add
or
jns
add
in
fdivrl
pop
xor
jmp
pushl
data16
cmp
add
add
ret
xchg
int3
cwtl
adc
std
xchg
inc
add
sub
add
add
jp
pusha
add
scas
push
pop
dec
inc
add
sub
xlat
jmp
aaa
lea
cltd
mov
add
mov
add
dec
imul
scas
scas
iret
mov
bound
decl
aas
or
sbb
scas
sub
popf
test
cmp
mov
jns
adc
push
sbb
add
shll
frstor
add
mov
add
jae
fiaddl
jl
add
pushl
add
jecxz
mov
cld
in
pop
and
aas
inc
add
jb
incl
je
add
ljmp
add
fld
add
add
mov
add
add
lea
adc
add
add
lcall
and
jle
int3
mov
add
movl
pop
add
add
push
leave
pop
dec
data16
sbb
and
inc
add
jnp
add
pushf
xor
cmp
xchg
cmp
add
leave
daa
add
stos
mov
lods
and
add
lods
or
sbb
add
dec
adc
dec
cmp
int
arpl
mov
xor
fisubrl
sbb
sub
add
lds
roll
movb
add
std
js
roll
repz
add
fwait
sahf
or
dec
push
jg
push
dec
push
insb
rolb
add
ror
mov
lea
add
sub
add
push
movsl
add
add
and
lcall
and
jge
scas
jae
incl
add
add
enter
add
insl
flds
jne
dec
outsb
scas
into
add
cld
push
mov
mov
xchg
adc
lods
push
dec
roll
xchg
pop
sbb
sbb
cwtl
rcl
negl
in
mov
dec
nop
ja
add
inc
add
sti
loopne
and
add
pop
lock
hlt
aaa
lcall
cmp
fdivrl
sbb
mov
out
jns
pop
cltd
lcall
fs
adc
decl
jmp
add
decl
mov
push
stos
js
in
jl
add
jp
add
fcmovne
lcall
cmp
jns
lock
add
jns
jo
jmp
in
int
pushf
lahf
fbstp
xchg
adc
lcall
add
outsl
roll
inc
add
hlt
add
push
repz
sbb
xchg
ss
xchg
jmp
pop
in
mov
pusha
add
les
pop
addl
fdiv
mov
add
add
adc
jmp
addl
add
js
jns
cmp
xlat
outsl
cmpsl
add
add
sub
mov
into
pop
hlt
or
das
pop
in
call
add
push
outsl
cwtl
cwtl
repnz
jl
das
fsubl
call
sbb
add
jb
decl
jl
add
jbe
inc
add
xor
scas
jns
or
and
pushl
call
call
into
xor
pushl
push
sub
outsb
loope
dec
mov
mov
ret
add
add
ljmp
in
jb
jle
add
mov
add
add
inc
add
cmp
cmpsl
add
pushl
popa
add
addl
out
lea
sbb
aaa
mov
jo
inc
add
add
call
push
add
add
sbb
fadds
add
add
icebp
mov
mov
jle
shl
js
mov
push
dec
pop
add
incl
mov
addb
jl
pop
push
sbb
mov
add
adc
in
inc
add
cmp
xor
jg
mov
add
inc
add
test
test
adc
incl
add
add
add
dec
sbb
add
push
jp
add
push
addb
mov
lret
call
dec
out
fistpll
add
js
pop
les
dec
clc
lds
out
adc
lcall
lret
add
pop
or
mov
xchg
adc
jmp
add
add
jno
incl
incl
add
js
add
lcall
add
bound
fsts
shr
stos
sbb
xchg
adc
fdivr
or
and
decl
out
mov
push
pop
pop
sbb
lods
mov
add
mov
push
fsubl
call
inc
add
add
test
add
add
rol
add
add
cmp
add
fdivrs
addl
ljmp
mov
mov
hlt
mov
lock
movb
add
test
push
mov
lods
mov
add
jmp
imul
add
rclb
xchg
popf
mov
cmp
cmp
out
popf
sub
add
dec
fincstp
xchg
pop
popa
add
popa
add
mov
incl
fidivl
mov
in
fnstenv
add
add
cmp
ljmp
loope
jno
ficoml
pop
cs
add
add
std
mov
imul
add
add
add
outsb
repz
add
inc
add
add
sbb
add
add
inc
add
repnz
jp
cmc
jle
push
cld
jae
pushl
cmp
mov
ficomps
ja
sbb
dec
ror
xchg
stos
outsb
fcomi
cmp
add
dec
xchg
aam
cli
icebp
test
jmp
add
mov
addl
pushl
shll
ss
sub
in
push
repnz
or
testl
icebp
ss
mov
add
sub
add
mov
mov
decl
faddl
add
xlat
push
inc
add
ljmp
cmpsl
add
frstor
add
inc
add
cmp
shlb
push
cld
in
push
inc
add
fsubr
xor
decl
test
inc
add
add
out
or
sub
adc
cmp
pop
or
jne
sbb
sbb
leave
out
repnz
fsubs
decl
popf
les
fstpl
add
pushl
add
adc
jmp
pop
pop
mov
jbe
add
add
inc
add
mov
sbb
add
add
int3
repnz
jo
ljmp
xchg
fwait
or
add
xor
jmp
add
roll
call
pushl
mov
and
dec
add
data16
inc
add
add
add
add
lds
arpl
incl
out
dec
cld
stos
popa
add
ficompl
add
xchg
lret
lcall
data16
cmp
push
repnz
add
test
pop
je
ja
pop
add
lcall
stc
xlat
push
add
mov
adc
mov
jmp
pushl
dec
scas
icebp
stc
movb
add
push
add
add
pop
dec
fdivrs
test
movb
mov
dec
mov
mov
cwtl
push
jns
xchg
enter
jae
incl
cs
fcomps
jo
dec
mov
es
add
lods
push
call
cmc
or
mov
add
mov
jo
jmp
add
cmp
add
movsb
add
add
punpckhwd
add
cmp
call
popf
movl
jne
jg
add
fsubrl
pop
jl
add
stos
cs
xor
pushl
decl
popf
mov
mov
inc
add
aad
daa
add
mov
add
sub
inc
add
jnp
add
addl
mov
loop
mov
add
iret
adc
pushl
pushl
add
add
call
push
mov
pop
movb
add
pop
ret
xlat
addl
add
movb
sub
mov
call
repz
mov
add
incl
aas
pop
cmp
popa
add
pop
sub
and
call
inc
add
add
add
add
pop
add
jmp
add
xchg
movb
notl
call
push
add
and
dec
jns
decl
ret
pop
rolb
shlb
add
add
sbb
cmp
test
add
add
fdivrs
pop
push
add
jb
push
inc
add
add
ss
cmp
cmp
ljmp
pop
adc
pushl
add
scas
cmp
repnz
ljmp
sbb
inc
add
mov
cmp
add
add
incl
mov
scas
dec
mov
add
sub
out
movsl
add
cltd
add
add
push
popf
int
add
jo
inc
add
jl
xor
jmp
add
mov
out
sub
xor
decl
test
inc
add
sub
add
push
lds
arpl
ljmp
call
call
ljmp
add
cmp
add
push
push
mov
jb
mov
mov
pop
and
incl
call
cmpsb
add
pop
sbb
add
imul
add
out
std
sub
add
decl
lods
imul
cmp
leave
dec
inc
add
mov
incl
lods
lods
nop
jb
jmp
pushl
xchg
lea
mov
mov
sub
and
incl
loop
cmpsl
add
add
mov
popa
add
cmp
add
pop
addl
add
or
mov
push
int
lret
xchg
aad
sub
add
pop
adc
jmp
mov
inc
add
add
xchg
jnp
add
incl
pop
test
add
add
ljmp
jmp
add
dec
mov
pop
int
add
call
addl
repz
add
mov
add
fdivrs
and
je
add
xchg
mov
shlb
and
and
jge
and
js
cmp
rolb
add
add
sbb
add
pop
lret
ja
addb
jb
ljmp
push
pop
pop
jb
decl
lcall
popf
add
sbb
addb
add
ret
add
add
jge
adc
stos
cmp
add
gs
stos
inc
add
roll
cli
mov
add
movsb
add
sub
mov
loope
push
add
push
movsb
add
mov
add
pusha
add
sub
dec
and
call
pop
lret
sub
sub
or
sbb
addr16
add
jb
ljmp
movb
nop
jmp
add
hlt
addb
arpl
in
sub
add
dec
xlat
jns
or
out
jmp
clc
mov
pushl
or
inc
add
aaa
xor
les
mov
dec
in
push
add
outsb
movb
add
addl
push
add
add
adc
ljmp
leave
je
test
pop
int3
aas
pop
add
inc
add
pop
scas
int
gs
add
lcall
mov
add
jb
ljmp
int
dec
shlb
add
enter
mov
jns
add
add
or
add
fbld
gs
clc
add
call
push
addl
and
in
mov
mov
pop
xor
sub
in
jae
in
lds
call
add
or
cmpsl
add
mov
add
call
ljmp
mov
add
sbb
outsl
flds
add
add
pushl
and
bound
mov
add
push
xchg
aam
add
or
fidivs
add
mov
roll
add
add
popf
xchg
jae
decl
dec
cmp
fdivrl
jo,pt
cmp
add
add
pop
cmp
add
mov
add
jno
decl
add
mov
mov
fistpl
cmp
add
out
pop
in
dec
movsb
add
roll
jne
mov
incl
lcall
xchg
cmp
cld
xor
jmp
add
and
add
mov
ja
sbb
add
loopne
add
call
fwait
cmc
fiaddl
pushl
add
movsb
add
or
lcall
mov
add
roll
or
sub
int3
push
add
scas
fcomps
inc
add
add
pop
push
add
or
incl
sub
mov
add
clc
add
mov
fld
add
mov
add
inc
add
pushl
dec
and
pushl
cmove
rolb
add
xlat
pop
push
add
jmp
add
push
add
and
ljmp
test
fwait
sti
push
mov
add
sbb
fcomip
das
pop
and
jmp
pop
lahf
cwtl
pop
adc
add
repz
add
das
lods
xor
add
adc
incl
add
call
aas
repz
stc
adc
jmp
add
mov
icebp
adc
add
call
incl
jmp
jnp
add
push
add
addb
divl
add
xchg
fdivs
add
out
adc
incl
lcall
addb
dec
shr
sub
ljmp
mov
add
xchg
inc
add
add
mov
sbb
add
dec
inc
add
or
jle
add
dec
jae
lcall
push
add
imul
mov
movb
xor
cli
addb
xchg
rcrl
mov
xchg
and
jmp
add
leave
pop
xor
jmp
aaa
push
cmp
insl
mov
mov
stos
cltd
sti
sahf
add
stos
jbe
xchg
or
xor
call
inc
add
mov
shrl
call
sub
add
outsl
sbb
jle
push
add
ljmp
add
ljmp
lods
sub
aad
xchg
popf
cwtl
push
sbb
jo
pushl
jo
jmp
add
add
adc
mov
cmp
call
pop
addb
add
add
stos
push
add
sub
add
into
mov
add
and
pushl
add
mov
repz
add
sahf
movl
mov
xchg
sahf
mov
pushl
add
addb
add
or
add
cmp
push
add
mov
insl
push
mov
push
add
testb
mov
sar
jnp
cmp
fidivrs
add
jmp
pop
nop
cmp
cmp
mov
addl
pop
jmp
lods
add
dec
pop
pop
cmp
jge
add
dec
pop
add
dec
push
ja
add
incl
push
push
loop
repnz
cltd
cmp
fcomps
in
lods
es
cmpsl
add
sbb
sbb
add
mov
outsl
out
mov
add
xchg
mov
add
or
mov
fisubrl
or
add
add
enter
add
push
movb
movl
lcall
mov
jnp
leave
ja
out
aam
add
adc
pushl
xchg
jo
inc
add
add
and
lcall
pop
jl
add
add
daa
add
stos
popa
add
mov
call
out
rolb
add
cmp
cmp
daa
add
add
add
data16
lds
sub
add
repz
pop
cld
mov
add
ljmp
sbb
cmp
mov
scas
idivl
push
add
add
mov
incl
push
loope
in
insl
dec
sub
pop
xchg
dec
cmp
mov
stos
insl
xchg
jp
addl
rcrl
mov
xchg
lock
add
mov
xchg
adc
decl
testb
push
push
loope
std
push
add
testl
stos
inc
add
add
clc
daa
add
push
add
fwait
movb
movsb
add
add
mov
movsb
add
add
add
mov
add
addl
and
incl
in
stos
dec
sub
add
sub
mov
sti
xor
jmp
add
xchg
dec
ja
dec
lcall
add
leave
scas
adc
and
fsubl
and
push
add
pop
sbb
ss
mov
scas
xor
cmp
incl
add
mov
out
pusha
add
dec
cmp
add
add
add
decl
cmc
inc
add
add
add
add
lods
aad
add
add
add
loop
xor
jmp
add
add
add
and
jmp
insb
fisubs
or
xor
call
roll
add
add
imul
xchg
cmp
jl
add
add
sub
stc
or
add
dec
xchg
bound
ljmp
lds
notl
add
les
movsl
add
das
out
xor
ljmp
roll
clc
jle
add
add
je
dec
push
and
decl
mov
jns
shrb
movsl
add
add
fiadds
add
pop
repnz
jmp
ljmp
jno
pushl
dec
and
push
pop
rolb
dec
mov
add
ja
pop
add
addr16
jle
jge
scas
cld
cmc
mov
hlt
aam
or
lahf
test
sbb
add
add
or
add
mov
mov
add
loop
cltd
arpl
jmp
ret
add
stos
cmp
mov
add
dec
mov
pushf
add
inc
add
add
jns
in
xchg
imul
shr
add
decl
mov
dec
sarl
test
ljmp
loop
mov
add
and
decl
add
jg
jmp
cmc
addl
add
push
add
jmp
test
jg
add
adc
pushl
pop
mov
add
lcall
addl
cmp
loope
sbb
iret
mov
call
test
add
add
or
rcll
sarl
push
or
xor
call
jp
hlt
jecxz
push
jge
xlat
cli
xchg
es
sbb
and
mov
stc
mov
insb
lret
add
and
cwtl
cmpsb
add
sbb
pushl
fcom
movsb
add
add
push
aaa
lcall
add
les
lock
lcall
lcall
add
out
pop
sub
add
dec
cmc
imul
dec
adc
jmp
xchg
in
pop
fcomps
add
je
add
dec
jmp
cs
add
add
aad
mov
add
mov
mov
add
mov
add
je
cmp
sarl
loopne
push
roll
add
addl
xchg
sub
add
bound
dec
adc
in
mov
add
sub
mov
pop
push
cwtl
sahf
pushf
jmp
scas
iret
mov
add
call
adc
fs
jno
fsubs
inc
add
add
decl
add
lahf
sbb
pushl
add
xchg
cmp
adc
jmp
xor
push
rcrl
add
inc
add
pop
ljmp
mov
pop
mov
into
push
shrl
sbb
xchg
and
mov
add
pop
jno
decl
clc
enter
mov
xor
push
push
xor
jg
loop
add
jmp
pop
inc
add
pusha
add
fwait
cs
add
mov
or
cmp
icebp
mov
imul
add
xchg
aad
add
cmp
add
addl
adc
add
cmp
jge
cli
nop
push
add
ljmp
sub
les
dec
add
lcall
addl
add
aam
ja
dec
loopne
xchg
lea
jmp
sbb
xor
incl
movsl
add
cs
xchg
mov
add
xor
or
add
adc
cli
mov
adc
pushl
lcall
in
sbb
mov
add
ficoml
inc
add
add
add
aam
divb
add
xchg
outsl
add
push
add
push
cmpsl
add
and
add
xlat
in
sbb
add
ret
or
add
sub
jno
lcall
pusha
add
bnd
lcall
xchg
int3
sahf
adc
pushl
add
cli
xchg
faddl
push
je
add
jnp
xchg
test
iret
add
decl
add
add
stc
lret
dec
adc
mov
add
movsb
add
call
and
cli
push
add
addl
push
clc
outsl
imul
add
decl
cmp
jge
cs
mov
rolb
push
mov
fbld
call
add
testb
and
inc
add
push
test
movsl
add
add
aaa
adc
add
cmpsb
add
add
mov
pop
arpl
dec
cmp
sbb
add
lods
jg
stc
lret
mov
add
push
push
add
sbb
add
add
add
add
decl
add
dec
xchg
test
add
xor
pushl
push
add
cmp
mov
xor
incl
shll
pop
and
pushl
add
add
add
and
call
add
insl
arpl
incl
inc
add
outsl
bound
jmp
add
add
add
dec
pusha
add
xor
mov
add
add
roll
add
or
add
lret
add
push
cmp
add
lahf
adc
inc
add
add
mov
push
add
inc
add
incb
decl
add
sbb
push
lahf
mov
js
rolb
ret
add
mov
add
add
add
add
js
mov
enter
insl
xchg
push
test
cmp
mov
stc
xor
fcmovu
inc
add
popa
add
addb
push
add
fistps
insb
dec
pop
adc
sub
jp
mov
mov
scas
mov
push
dec
sub
in
movsl
add
jnp
jns
add
sbb
xchg
fidivs
jg
add
aaa
cmp
mov
add
mov
mov
add
add
add
mov
cmp
add
xchg
inc
add
mov
cmp
push
and
lcall
add
repz
add
add
push
xor
jp
in
sub
add
adc
jmp
add
fbstp
add
mov
jnp
add
pop
sbb
faddp
add
and
cmp
fcompl
adc
leave
sub
add
jle
xor
out
iret
add
xor
ficomps
and
jmp
add
mov
call
cmc
movl
fs
mov
add
xchg
js
fwait
mov
cmp
nop
movsb
add
add
sub
lret
lcall
add
mov
shrl
movsb
add
add
cmp
mov
scas
lahf
sub
mov
roll
imul
cmp
dec
mov
push
inc
add
shl
add
sub
add
movsb
add
mov
add
sbb
pop
add
jb
jmp
or
push
add
aam
bound
ljmp
lahf
popa
add
repz
out
jge
pop
cmp
icebp
mov
repz
and
mov
add
inc
add
add
add
jmp
add
ljmp
add
stos
scas
sub
pop
lea
sar
xchg
xchg
out
addb
xchg
pusha
add
or
add
add
add
cld
push
aad
add
add
iret
jge
add
xor
call
add
jmp
add
jo
pushl
fimull
mov
push
fisubrl
adc
add
add
repnz
outsb
mov
mov
cmp
add
addb
aas
add
in
adc
decl
and
mov
or
add
inc
add
fistl
add
or
loopne
aam
cmp
into
outsl
or
add
xchg
outsl
mov
rclb
decl
or
add
add
add
pushl
in
hlt
ss
push
add
dec
jns
add
bound
call
jmp
ja
add
movl
push
das
jb
jmp
add
push
xchg
jae
ljmp
sub
add
sbb
add
add
int3
xor
push
add
add
dec
mov
ss
clc
ss
adc
pushl
add
fistpl
add
pop
mov
add
cmp
outsb
and
jnp
add
push
js,pn
add
sub
fadds
add
add
in
xchg
jp
roll
inc
add
add
add
shlb
add
int3
jp
add
add
inc
add
sti
xchg
dec
dec
cmp
call
roll
add
mov
mov
iret
sbb
pop
mov
movb
add
push
clc
popl
inc
add
jae
cmp
or
add
imul
add
sub
pop
imul
daa
add
std
cli
mov
add
ljmp
test
imul
add
sbb
decl
xchg
pop
add
add
add
mov
add
cmp
dec
leave
sbb
add
push
add
ds
add
in
xor
ljmp
jmp
addb
movsb
add
pushl
int3
test
cld
lret
movb
out
imul
add
and
pushl
call
js
dec
popa
add
iret
popf
mov
add
stos
in
loopne
movsb
add
insl
add
decl
iret
mov
add
sub
incl
jmp
add
jmp
add
jmp
jmp
add
xchg
addl
pop
movl
testl
add
dec
dec
out
cmp
mov
pushf
mov
dec
clc
add
lcall
add
add
mov
add
add
inc
add
add
jg
mov
add
jg
cmc
adc
adc
pushl
js
mov
and
lcall
test
mov
leave
or
fstpl
cmpsl
add
jg
lods
sbb
arpl
jmp
cmp
enter
add
mov
xor
add
add
add
jnp
sti
addb
ds
mov
push
add
jne
addl
add
add
fwait
inc
add
fcomps
ljmp
pop
jne
add
test
dec
sbb
lahf
xlat
aam
add
decl
loope
icebp
add
cld
inc
add
imul
arpl
ljmp
clc
in
stc
cmpsb
add
inc
add
or
pushl
adc
jmp
mov
add
addl
push
jne
frstor
inc
add
daa
add
add
mov
incl
call
push
insl
adc
jmp
test
lds
mov
add
add
add
add
divb
add
mov
cmp
incl
add
mov
mov
ljmp
stos
add
pushl
jae
jmp
add
add
or
xchg
cwtl
mov
add
incl
push
sbb
fcomps
nop
xchg
das
addl
cmp
add
push
add
add
jecxz
sub
pop
movb
lcall
add
je
out
test
or
push
rolb
add
cmp
cmpsb
add
lds
cli
push
add
jmp
cmp
mov
inc
add
jmp
les
aaa
in
ds
add
xchg
pop
outsl
fisubrl
roll
sub
add
mov
jne
loop
push
jno
scas
add
testl
ret
add
in
xchg
decl
inc
add
leave
mov
mov
add
xchg
insb
mov
add
sbb
add
cmp
scas
sub
pop
add
incl
add
hlt
mov
in
add
pushl
adc
pushl
add
movl
push
mov
sbb
add
loopne
cmp
notrack
add
pushl
xchg
sub
sub
sub
push
jns
cmp
add
and
mov
je
jg
mov
add
fsubrs
inc
add
bound
decl
add
sbb
cmp
add
es
add
adc
ret
xor
lcall
add
movb
add
jae
decl
add
add
cmp
add
testl
mov
add
add
call
add
jae
jmp
add
inc
add
mov
jmp
add
cltd
and
in
adc
outsl
mov
add
addl
repnz
and
ljmp
dec
mov
xchg
iret
clc
mov
lret
add
mov
cmp
sbb
add
add
lcall
fidivrl
push
pop
shlb
jmp
pop
adc
add
add
test
add
pop
push
jmp
add
stos
das
jb
jp
or
dec
ficompl
mov
out
in
int
xchg
rcr
jne
clc
lds
mov
insb
xor
in
jnp
into
test
inc
add
rcrb
bound
jmp
add
fs
xchg
jle
sti
adc
in
dec
mov
xchg
pop
shrl
pop
dec
popf
ret
add
jnp
int3
xor
jmp
and
call
in
add
call
dec
or
imul
add
mov
fdivs
add
jge
mov
add
push
mov
add
sti
xchg
jne
jb
incl
add
or
add
cmp
add
cmp
addb
loope
sub
sbb
add
shrl
cs
arpl
incl
jg
mov
or
add
add
add
mov
add
ljmp
adc
incl
pop
push
cli
adc
out
add
cmp
dec
or
call
jae
decl
pushl
mov
add
xor
decl
dec
jp
aas
loop
clc
mov
add
pushl
add
jmp
pop
lret
jl
mov
add
roll
add
mov
add
inc
add
aad
inc
add
inc
add
add
inc
add
sbb
push
bound
incl
insb
loop
pop
add
add
xchg
les
xlat
lret
data16
add
mov
add
movsl
add
mov
pop
jle
rcl
enter
insl
out
loopne
push
add
je
add
out
mull
ljmp
sub
add
call
lcall
enter
add
fimull
xchg
stc
mov
pop
inc
add
sti
mov
add
dec
push
cld
rol
add
test
add
and
cli
sub
or
mov
add
jmp
in
dec
stos
dec
xor
call
add
push
loope
fidivl
std
popf
add
js
add
in
adc
out
dec
test
jle
add
or
lods
aad
test
add
and
call
add
ljmp
cmpsb
add
sti
pop
cs
cmpsl
add
mov
sub
add
sub
push
xchg
xchg
xchg
movl
add
inc
add
fcmovu
loop
sbb
add
pushl
enter
pop
or
fucomi
push
add
add
les
mov
ficoml
add
add
inc
add
add
arpl
pushl
jns
sub
adc
cmp
rclb
bound
decl
pusha
add
pop
loopne
or
add
pop
add
mov
add
add
mov
dec
daa
add
jmp
mov
aad
sub
insb
movl
ret
add
stc
mov
or
mov
call
imul
ret
add
incl
fsubrs
jns
out
mov
mov
inc
add
add
and
pushl
add
roll
push
mov
add
loopne
fisubrs
add
pop
in
iret
mov
push
add
sub
cmp
xchg
xor
pushl
mov
ss
add
and
jmp
add
xor
lcall
addl
lahf
nop
mov
add
mov
add
addl
push
inc
add
shl
add
inc
add
cld
jmp
sbb
push
add
jns
fs
and
inc
add
fwait
sarb
pusha
add
or
call
lcall
cmpsl
add
add
and
pushl
scas
mov
add
dec
cli
mov
mov
add
add
mov
add
xchg
jns
add
fucomp
insb
xlat
jne
add
mov
add
lea
add
pop
jno
stc
mov
add
hlt
insl
pop
pop
jb
incl
mov
cmp
and
push
or
add
add
rcll
addb
roll
std
add
aaa
xchg
mov
add
or
add
pop
outsb
in
cwtl
jge
add
insl
inc
add
ss
iret
lahf
arpl
incl
popa
add
jg
sbb
add
das
in
sub
dec
jb
jp
sub
clc
iret
fistps
call
mov
sbb
add
movsl
add
add
call
push
cmpsl
add
add
call
lcall
jne
call
add
aam
call
in
in
jmp
add
decl
add
call
sub
push
add
cmpsl
add
clc
push
add
ret
add
jmp
mov
jmp
push
add
and
pushl
inc
add
add
ja
and
jmp
add
sub
add
decl
sub
xchg
cmp
add
lret
in
divb
add
mov
add
mov
out
fcmovnbe
nop
inc
add
dec
jb
call
daa
add
ret
add
add
add
sbb
mov
add
xor
loope
movb
add
call
add
cmp
cmpsb
add
popa
add
out
jnp
and
ljmp
add
sbb
aaa
rorl
inc
add
or
push
add
xor
jge
push
mov
sbb
pop
out
addb
sahf
pop
fisubrs
sub
cmp
add
add
pushf
add
ljmp
mov
fdivs
jmp
add
push
add
fadds
incl
add
dec
les
pushf
cmp
add
mov
rcll
mov
xchg
jg
add
add
lcall
jge
cli
js
clc
push
jnp
loop
iret
adc
incl
mov
mov
or
pop
jo
ljmp
add
add
les
mov
push
mov
dec
and
call
pop
add
add
nop
pop
insb
sbb
pushl
lcall
mov
ljmp
xchg
lahf
dec
lret
cltd
push
sarb
add
push
fsubrs
or
add
movsl
add
insl
pop
add
adc
decl
and
cmp
inc
add
inc
add
add
fwait
adc
incl
add
dec
iret
or
inc
add
sub
lcall
xor
fstps
mov
add
add
mov
cmp
and
sti
add
inc
add
or
imul
or
add
call
call
and
incl
add
clc
mov
out
rclb
in
mov
push
jle
dec
addb
adc
decb
in
push
mov
xor
decl
push
add
add
sbb
add
add
ljmp
data16
iret
cmp
pop
jo
incl
add
lods
or
pushl
decl
and
call
je
add
adc
lcall
mov
jns
shlb
cmp
add
xor
fildll
add
movl
lock
add
arpl
pushl
add
fisttpll
sbb
xor
add
add
add
ljmp
stc
dec
pushf
sub
xor
pushl
pop
xor
lcall
loopne
dec
lods
jno
push
js
ja
fdivrp
jle
aam
cmp
sbb
call
add
adc
mov
dec
ljmp
inc
add
jno
incl
dec
xchg
movl
add
decl
or
dec
fbld
ljmp
outsl
jecxz
mov
pop
xchg
add
incl
jne
lcall
add
cwtl
pop
adc
push
xchg
les
mov
sbb
les
push
add
mov
movsb
add
add
mov
fwait
pop
push
xchg
lods
pop
je
xchg
cmp
cmp
xchg
push
add
imul
call
push
add
sbb
stos
fldl
add
aaa
or
sub
mov
push
pop
ret
jle
loop
cs
cwtl
xor
push
fs
add
jmp
lcall
xor
incl
cmp
inc
add
xlat
loope
xlat
outsl
arpl
call
popa
add
or
add
mov
add
test
mov
cmp
fcomps
inc
add
add
int
add
ret
ja
mov
add
bound
decl
lahf
je
add
notb
jmp
add
jecxz
xchg
xchg
mov
add
sbb
call
jecxz
jecxz
adc
pushf
and
jmp
add
add
call
stc
in
sub
sbb
add
addb
push
hlt
movsb
add
add
add
sti
push
sub
sbb
add
shlb
fimull
addb
in
rcll
mov
std
or
xchg
jg
mov
jns
add
jg
add
sbb
aas
mov
jp
lds
jmp
add
ret
add
add
in
sub
call
aad
sub
xor
call
mov
push
add
pop
xchg
rorl
sbb
add
add
add
decl
xor
pushl
add
mov
loope
push
add
dec
mov
std
fucom
add
ljmp
jne
dec
and
jmp
inc
add
ja
add
sub
mov
xchg
cmpsb
add
mov
decl
mov
add
repnz
add
add
jae
lcall
fstpl
xor
ficoml
sub
push
roll
dec
incl
add
add
insl
bound
mov
jno
inc
add
loopne
jnp
add
jnp
add
out
inc
add
mov
mov
mov
add
add
scas
filds
call
jns
add
decl
stos
fnstsw
add
adc
call
pop
add
call
dec
hlt
jmp
sbb
add
inc
add
dec
lods
ljmp
add
jb
dec
cmp
add
xor
dec
fldt
adc
incl
add
mov
dec
pop
lcall
pusha
add
fidivl
add
or
add
imul
jecxz
divb
jmp
add
xor
mov
sahf
stos
lret
and
mov
repnz
add
push
add
mov
adc
call
dec
xor
stc
push
xchg
outsl
inc
add
dec
mov
outsl
data16
insb
imul
jmp
popf
mov
and
call
jae
incl
jns
add
icebp
sbb
ret
pop
push
add
roll
and
decl
xchg
or
jmp
add
test
add
ljmp
add
mov
add
adc
cld
js
add
push
add
adc
add
add
mov
mov
pop
sub
aas
cmc
mov
mov
add
inc
add
rcrb
push
push
adc
addl
data16
mov
lahf
dec
add
rorb
mov
lods
jne
add
int3
aaa
mov
and
jle
xlat
xor
test
add
or
add
and
add
stos
sbb
push
add
sub
jp
add
cld
scas
add
lcall
cmp
add
mov
add
add
loopne
sti
lds
pop
dec
jns
idivl
mov
add
jge
add
std
xchg
movb
mov
and
ljmp
xchg
fcompl
pop
in
shl
push
add
fcoms
in
mov
add
scas
pusha
add
stos
pushf
imul
add
push
add
push
mov
cmp
enter
jnp
int
inc
add
cld
cld
jno
incl
add
in
jg
stc
shl
add
pop
mov
add
jmp
add
in
and
jmp
pushl
dec
addb
or
mov
popa
add
lock
xchg
pop
adc
cmp
xchg
out
jno
jmp
sub
add
mov
mov
fwait
loope
mull
adc
call
inc
add
add
mov
test
add
cmp
mov
add
imul
dec
repz
add
nop
fimull
add
repnz
cmp
int
add
jne
add
mov
sti
popa
add
jl
jmp
mov
add
mov
cmp
fcoms
add
dec
pop
movb
add
push
aas
and
jmp
addb
add
cltd
add
lcall
cli
loop
outsl
mov
cmc
xchg
aam
add
pop
inc
add
xchg
fildll
add
addl
push
add
rolb
repnz
jne
faddl
sbb
dec
xchg
stos
stos
clc
into
jo
call
add
inc
add
push
stos
or
mov
add
xor
ljmp
pop
outsb
into
out
inc
add
fmul
dec
sbb
push
jmp
fcomi
or
add
xor
lcall
das
imul
call
add
movb
outsb
out
enter
add
add
add
add
add
push
add
push
add
xchg
divl
das
fildll
ljmp
call
shll
ja
out
mov
mov
xchg
and
lret
ret
add
imul
xlat
stc
add
ret
add
outsl
iret
jle
lea
add
add
push
add
mov
add
inc
add
adc
lcall
add
push
adc
inc
add
add
mov
add
mov
xor
xchg
inc
add
mov
pop
les
movsl
add
cmp
add
stc
in
in
xchg
iret
mov
add
decl
add
jmp
decl
add
fdivrl
mov
loope
xlat
xchg
mov
add
out
pop
jb
decl
dec
ficompl
add
sub
test
addl
jb
decl
movl
std
jl
add
lea
cmp
jnp
sub
cmp
lds
jo
jmp
add
and
incl
add
jb
jg
and
add
insl
insb
jns
outsl
xor
call
dec
push
add
add
call
add
add
push
add
xor
decl
xchg
inc
add
scas
xchg
repz
xlat
and
loop
fucomp
jbe
sbb
add
out
or
jnp
dec
push
stos
shlb
add
roll
xlat
test
ud0
or
jecxz
cmpsb
add
addb
add
xor
incl
add
add
add
pop
out
lret
add
add
test
in
mov
add
addr16
call
add
inc
add
stos
std
mov
add
jmp
push
mov
lds
jnp
sbb
lcall
sbb
les
dec
jecxz
mov
rolb
add
add
add
xchg
hlt
ret
pop
add
jae
call
mov
xor
jns
call
add
cmp
pushl
addl
xchg
mov
int
add
out
test
push
notl
dec
addb
add
movsb
add
add
add
add
dec
or
out
dec
fimull
sbb
cld
addb
mov
jmp
inc
add
leave
jmp
test
sbb
insb
push
add
imul
pop
xchg
xor
add
xor
mov
xchg
int
xchg
loope
out
fisttps
xor
incl
add
jmp
add
add
incl
add
add
jae
jmp
add
add
jecxz
mov
add
pushl
add
loop
cmp
inc
add
adc
jmp
add
add
fwait
or
sbb
add
data16
incb
jnp
add
and
lods
pop
add
add
hlt
add
mov
stos
adc
in
ds
call
and
fisubl
jnp
add
filds
dec
into
scas
and
ljmp
fcoml
add
pop
or
jb
lcall
pop
sub
repz
cmp
rcll
cwtl
ds
lds
addb
idiv
jno
ljmp
insl
mov
add
add
push
add
aaa
jmp
inc
add
out
pushf
pop
or
in
push
add
push
sbb
jmp
add
mov
js
js
cld
addb
add
jmp
stc
ss
fidivs
add
xor
add
push
add
imul
out
adc
cmp
addl
and
call
xchg
pop
or
sbb
add
lahf
mov
add
or
arpl
jmp
add
mov
mov
inc
add
bound
incl
adc
pop
cmp
xor
lcall
popa
add
insb
xlat
out
cs
aam
or
cmp
lret
xor
jmp
das
mov
mov
adc
and
ljmp
lcall
inc
add
jmp
add
xor
jmp
push
pop
fmulp
pop
pop
or
sub
add
or
call
add
sub
jne
repz
loop
fstpt
xchg
into
test
mov
mov
inc
add
add
mov
les
lret
pushf
cli
inc
add
es
add
inc
add
xlat
idivl
cmpsb
add
out
push
add
dec
iret
arpl
lcall
incl
push
adc
movl
add
addl
stc
lahf
xchg
stos
clc
push
add
add
pop
addb
xor
lea
inc
add
add
push
movsb
add
xor
call
je
test
into
cmp
lods
and
incl
add
sbb
sub
add
add
loopne
in
and
shrb
out
mov
decl
jl
add
sub
incl
jl
or
mov
pushl
call
add
jl
add
dec
push
add
out
inc
add
nop
lods
jmp
add
push
sub
decl
into
mov
jle
jns
aaa
mov
xor
sub
add
xchg
cmp
in
dec
and
incl
add
call
lret
dec
ds
add
cmp
ljmp
fcom
scas
inc
add
jp
add
add
dec
nop
add
lcall
stc
sbb
jmp
add
loope
mov
mov
add
lret
add
call
jbe
sbb
add
xchg
test
push
adc
inc
add
add
adc
decl
xor
addb
ja
lock
xchg
insb
or
add
xchg
lahf
fwait
jno
call
loop
xor
dec
jl
add
lret
out
push
cwtl
fldenv
add
cmp
push
add
fnsave
add
jne
pop
loop
xchg
mov
in
ret
add
mov
mov
or
iret
lods
nop
mov
incl
add
add
add
sub
add
mov
in
jp
leave
dec
or
add
xor
decl
add
xor
call
lods
xlat
dec
movsl
add
add
jmp
cmp
cld
push
pop
add
or
add
mov
into
sub
add
cmp
and
pop
adc
lcall
add
cmpsl
add
add
add
int
mov
negb
jno
call
add
mov
inc
add
out
lods
mov
xchg
push
sbb
jns
add
adc
dec
jp
xor
jmp
add
jp
add
ljmp
add
ljmp
dec
clc
pop
add
xor
lcall
lods
and
aas
sub
mov
mov
add
add
fildll
add
shr
or
aas
mov
imul
cmp
and
incl
jmp
mov
lret
mov
add
add
mov
ret
add
add
arpl
fists
add
or
enter
iret
roll
jnp
add
pop
adc
jmp
roll
cmp
mov
cmp
pop
add
out
mov
pushf
dec
mov
add
and
fnstsw
pusha
add
xchg
jp
jbe
addb
ret
add
mov
cli
repz
add
add
mov
stc
movsb
add
cwtl
aas
sbb
fldt
cmpsl
add
and
inc
add
add
push
add
mov
push
mov
mov
add
add
pop
sbb
in
fldenv
add
data16
add
add
push
iret
mov
and
ljmp
pop
adc
repnz
pop
jg
add
out
cld
lcall
inc
add
inc
add
mov
push
or
stc
leave
popa
add
pop
pop
cld
or
adc
ljmp
popf
sbb
arpl
sti
jle
je
ds
lcall
call
adc
ljmp
std
jae
jmp
add
and
call
push
jne
aaa
cmp
mov
ret
add
int
outsl
repnz
imul
pop
add
call
pop
add
add
fwait
xchg
or
xchg
or
das
rol
add
in
dec
fdivp
xchg
icebp
sbb
add
decl
in
adc
fistpll
push
add
aaa
mov
fdiv
jle
add
add
and
adc
dec
sbb
add
jp
xchg
js
imul
repz
inc
add
add
mov
inc
add
add
add
adc
lcall
add
and
jmp
sbb
jo
ljmp
mov
mov
call
add
pushl
add
dec
movsl
add
push
test
lret
stos
out
mov
add
rolb
outsl
xor
ljmp
sbb
loope
mov
pop
mov
lds
movsl
add
mov
data16
add
xor
jmp
add
add
mov
add
enter
data16
add
xchg
sub
xor
fistpll
xchg
xchg
inc
add
add
mov
addl
add
add
ljmp
mov
popa
add
sub
into
xor
mov
add
fcompl
add
ljmp
pushl
add
clc
xor
jmp
add
iret
cwtl
mov
addl
add
sub
jp
in
xor
decl
sar
push
add
lahf
out
repnz
sbb
xchg
into
cld
stos
add
call
sbb
into
add
out
sbb
outsl
in
push
jle
and
sbb
adc
pop
aad
ret
add
push
mov
push
aam
add
add
xor
fstpl
ljmp
add
add
call
and
aas
jle
add
movsl
add
mov
add
add
add
push
or
sarl
addl
bound
jle
lret
jne
ret
add
or
stos
lds
and
pushl
add
call
push
inc
add
inc
add
out
mov
dec
inc
add
sarb
mov
add
insb
mov
or
xchg
cmc
jecxz
out
call
rclb
insb
sbb
mov
bound
jmp
mov
mov
test
jmp
pushl
adc
pushl
out
xchg
aad
das
cs
add
add
bound
dec
lds
mov
xchg
jns
add
mov
sub
cs
add
ja
add
dec
jne
add
adc
lcall
mov
add
push
add
mov
les
mov
mov
in
hlt
jge
add
mov
out
push
add
notb
pushl
add
sub
xor
add
fidivrl
add
incl
add
cmp
jae
out
inc
add
pop
scas
mov
add
pop
ljmp
add
push
pop
addb
lods
mov
rorb
add
aam
jmp
add
fdivrp
pop
mov
scas
mov
jg
addl
pop
add
lcall
in
add
scas
cmpsl
add
add
inc
add
std
mov
add
lock
add
call
adc
call
add
add
xchg
add
out
inc
add
add
push
stos
data16
add
gs
fistl
fsub
add
add
add
add
mov
arpl
decl
scas
fdivl
call
fildll
ret
add
insl
jbe
mov
ljmp
and
out
aam
jge
les
mov
add
sbb
jg
sub
mov
add
ljmp
xlat
addr16
inc
add
and
incl
lcall
loop
aam
add
add
ret
add
add
push
add
jmp
cvttps2pi
add
daa
add
add
icebp
mov
add
fdivrl
call
add
mov
dec
outsl
ss
data16
pop
adc
and
push
lea
adc
add
movsl
add
add
push
insl
xor
jmp
pop
xor
decl
add
push
or
cwtl
mov
add
flds
add
mov
lret
add
mov
imul
xchg
push
adc
dec
shll
add
xor
ljmp
jbe
xlat
rorb
test
cmp
ljmp
xchg
lea
add
bound
incl
add
cmc
repnz
add
cmpsb
add
roll
lcall
add
ds
jnp
add
add
push
loope
bound
lcall
push
and
jmp
cmp
mov
pushl
lcall
ss
arpl
lcall
push
push
inc
add
imul
popa
add
lret
mov
arpl
incl
loop
dec
push
and
mov
push
icebp
inc
add
add
add
decl
iret
aad
das
stos
data16
int3
mov
mov
cmpsb
add
add
inc
add
adc
incl
inc
add
jnp
lahf
rcrl
fsubrp
aas
test
push
xchg
cmpsb
add
inc
add
jno
incl
mov
xchg
cmp
jg
xlat
icebp
pop
sbb
add
addl
adc
decl
add
std
cmc
leave
test
push
add
addb
dec
and
js
add
add
cmp
pop
pop
out
sub
or
mov
pop
xor
push
addl
fnstcw
xchg
cs
outsb
outsl
xor
lcall
stc
inc
add
pop
daa
add
add
sub
js
sbb
rolb
fwait
xor
jno
inc
add
pushl
inc
add
inc
add
inc
add
cmp
sub
mov
add
add
or
pusha
add
lock
dec
pop
pop
xchg
xchg
movl
mov
add
add
in
xor
sti
add
mov
add
push
add
rorl
cmpsl
add
add
mov
add
in
scas
rcll
pop
lods
inc
add
dec
sahf
jnp
add
repz
movl
decl
outsl
push
sar
dec
jle
movb
enter
or
mov
lahf
add
jmp
add
pop
jbe
add
dec
sbb
add
scas
popa
add
addb
ret
add
add
stc
sub
mov
add
add
adc
cld
mov
sbb
cmp
adc
ljmp
add
add
sub
mov
add
jmp
into
jae
cmp
and
dec
xchg
lock
mov
or
inc
add
test
fdivrs
lods
mov
stos
add
add
xchg
rclb
incl
add
jecxz
jle
pushf
test
dec
fnstsw
cmp
add
xor
xchg
inc
add
rolb
add
xor
lcall
add
fnstsw
or
add
in
sub
add
mov
add
ss
cmp
xchg
xchg
ja
loopne
sarb
xchg
hlt
sarl
test
mov
mov
add
add
jnp
mov
adc
add
inc
add
lods
ret
mov
add
int3
jmp
addl
push
add
lret
repnz
addl
in
loope
mov
add
inc
add
pop
adc
or
ljmp
fldt
xor
add
and
ljmp
add
add
js
add
add
lcall
jmp
add
lds
shrb
repnz
insl
repnz
fdivrs
punpckhdq
add
add
mov
push
xchg
or
pop
and
decl
pop
mov
lcall
jle
nop
cmp
lds
sub
mov
fistl
add
and
mov
push
add
rclb
add
int
xchg
jg
test
add
add
rcrb
mov
push
add
in
movsl
add
add
pop
das
pusha
add
in
jnp
add
call
call
mov
and
incl
add
fsubrp
stos
xchg
and
fildl
add
jae
jmp
add
popa
add
jmp
add
repz
pushl
add
jl
xchg
ja
xchg
ret
add
sub
pop
call
inc
add
lret
cmp
mov
jmp
decl
ret
add
aaa
ss
add
add
sti
cs
pushl
xor
inc
add
push
inc
add
mov
movsb
add
add
lcall
dec
dec
adc
add
mov
add
add
xor
call
incl
add
add
jle
in
int3
fwait
push
cld
pop
pop
insl
and
mov
sbb
add
add
add
add
or
add
dec
popf
xchg
ret
cmpsb
add
add
add
lods
adc
call
in
stc
inc
add
add
test
fwait
inc
add
sub
mov
add
lods
dec
adc
pushl
add
mov
add
in
cmp
clc
push
add
xchg
xor
lcall
test
dec
popf
pop
addl
add
incl
add
aad
ds
roll
imul
stos
into
int3
fwait
mov
or
inc
add
in
inc
add
push
xchg
test
cltd
and
call
fdivrp
sub
test
lock
pop
cmp
enter
cs
add
add
mov
roll
imul
stc
sub
dec
stos
mov
mov
add
or
add
lcall
ss
cltd
leave
and
jmp
out
push
add
addl
pop
repz
add
lcall
xchg
movb
jnp
test
sub
push
push
add
add
je
add
incl
add
push
movsl
add
inc
add
mov
cmp
movl
inc
add
dec
adc
mov
and
int
jg,pt
insl
movsl
add
movsb
add
lcall
in
test
ljmp
push
add
mov
fstpt
add
pop
jae
incl
outsb
call
pop
stos
rclb
add
enter
pop
sahf
roll
movl
popf
es
ds
jge
add
jb
ljmp
sahf
mov
call
add
add
add
sub
mov
add
rolb
add
jbe
add
jae
decl
insl
into
push
movsl
add
and
mov
mov
add
imul
cmc
ret
dec
sub
out
push
add
pop
inc
add
add
add
pop
or
push
push
sti
sbb
add
ds
inc
add
mov
daa
add
incl
jecxz
xor
je
and
decl
mov
iret
nop
fnstenv
pushl
ds
movsl
add
inc
add
add
scas
cmpsl
add
call
addl
dec
rclb
sub
loop
mov
cmp
mov
decl
lods
mov
jno
ljmp
and
pushl
add
sbb
add
push
mov
nop
cmp
add
pushl
mov
arpl
jmp
add
xlat
mov
add
repz
xchg
inc
add
xor
incl
xchg
aaa
ja
add
jo
call
add
mov
setae
xchg
mov
add
push
add
and
incl
jp
enter
rol
add
push
add
lahf
mov
mov
add
outsb
outsb
ds
rolb
add
aas
loop
addl
pop
add
add
mov
roll
pop
add
jmp
add
dec
out
dec
push
mov
add
mov
add
or
add
and
jmp
fistpll
loopne
insb
add
jmp
add
adc
cli
fists
add
mov
testl
or
add
mov
scas
ret
adc
jnp
cwtl
adc
cmp
movb
fisubrl
push
add
cmp
addb
add
in
ficomps
mov
or
adc
jmp
add
pushf
dec
mov
repz
cmpsl
add
add
iret
add
add
add
cmp
cltd
cli
push
add
push
add
fdivs
dec
lods
add
movsb
add
fsub
add
add
ds
push
mov
jmp
add
mov
add
movb
push
cli
ljmp
add
add
sub
std
pop
int3
sbb
mov
dec
fisttps
dec
jne
iret
iret
lea
add
out
cltd
in
dec
aaa
push
push
add
mov
jmp
add
pop
mov
dec
paddusw
add
jge
pop
test
dec
scas
inc
add
addb
mov
fidivrs
imul
add
out
out
add
inc
add
cmp
add
test
xchg
lahf
imul
push
add
js,pn
lods
dec
cmp
push
add
sub
insb
mov
ret
roll
inc
add
ljmp
pop
addl
mov
data16
dec
fisubrl
das
xor
stos
pop
add
cmp
add
mov
loope
bound
ljmp
lock
push
mov
std
inc
add
ret
add
add
or
cmp
mov
ja
add
push
add
ljmp
add
lcall
loop
movsl
add
add
add
decl
daa
add
es
movsl
add
push
jecxz
rolb
mov
xchg
adc
push
lock
push
add
jno
lcall
scas
sub
movsb
add
jns
add
fcoml
stos
inc
add
lret
dec
cmpsl
add
dec
cmp
add
dec
mov
inc
add
test
clc
add
mov
stc
pop
out
xlat
pop
and
lcall
in
pop
les
push
jmp
cmp
lcall
dec
push
ds
addl
das
inc
add
jno
incl
add
add
adc
push
add
dec
xchg
add
ljmp
add
or
push
add
xchg
fidivrl
cli
xlat
aad
add
adc
jmp
add
decl
cld
jbe
or
add
add
and
lret
ljmp
sub
jns
lock
add
pop
or
inc
add
add
loop
xor
jmp
add
mov
adc
lds
push
push
add
add
mov
add
xchg
maskmovq
imull
jbe
add
insl
pop
inc
add
push
add
negl
add
aaa
lret
mov
arpl
call
add
ds
or
add
mov
add
ljmp
xchg
xchg
adc
dec
incb
out
int
je
loope
fistps
add
decl
addb
add
jmp
add
loopne
scas
aas
movb
add
aas
xchg
mov
add
pusha
add
roll
jo
call
incl
ljmp
fstps
dec
ss
out
sbb
pop
sbb
std
sub
cltd
push
jns
add
add
in
add
iret
fistpll
mov
add
add
cmp
imulb
add
add
mov
add
or
lahf
jno
incl
add
addl
jl
add
lds
dec
mov
add
decl
mov
mov
in
push
xchg
jns
dec
mov
ret
add
outsl
inc
add
inc
add
addl
add
imul
adc
out
pop
icebp
add
ret
lret
cld
lds
mov
push
jno
js
mov
add
stos
cmp
xchg
jae
decl
xchg
inc
add
fld
add
add
pushl
scas
mov
add
add
add
fmuls
add
mov
inc
add
sbb
add
ds
fstl
out
xor
lcall
add
dec
loope
mov
out
sbb
imul
add
or
jno
incl
mov
add
lcall
xor
inc
add
loop
jmp
add
aaa
dec
inc
add
mov
push
add
inc
add
mov
addb
pop
movsl
add
pushl
sbb
sbb
add
add
fstps
ret
mov
add
jmp
add
jno
cmp
add
jge
inc
add
into
shrb
cld
dec
jle
adc
lcall
movsl
add
data16
incl
lcall
add
pusha
add
movsl
add
add
sti
lods
dec
sub
add
mov
lock
dec
data16
aad
cltd
mov
mov
add
decl
sbb
addb
jnp
xor
incl
aam
add
push
add
xor
jmp
add
das
mov
mov
cld
roll
imul
add
cwtl
jge
add
pop
add
inc
add
addl
add
shrl
add
pop
mov
movl
add
jo
ljmp
add
add
mov
dec
sahf
hlt
and
jmp
add
add
mulb
jle
add
data16
aaa
popf
sbb
xor
and
dec
mov
pop
xor
cmp
out
stos
or
push
add
add
fistl
pop
addl
dec
nop
sub
add
dec
pop
xor
mov
test
test
loop
sbb
rolb
cmp
iret
test
jae
mov
test
leave
mov
adc
jmp
add
incl
stos
inc
add
add
test
cmp
add
mov
add
and
inc
add
add
ds
and
fnstenv
add
push
pop
mov
add
aad
mov
add
mov
test
add
cmp
add
and
jnp
fiaddl
add
inc
add
arpl
lcall
pop
arpl
ljmp
lahf
pushf
scas
push
je
add
shl
add
push
jge
and
ljmp
imul
jge
dec
mov
add
sbb
pop
rolb
add
xchg
call
loope
cld
decb
imul
sti
or
loope
pusha
add
mov
movsl
add
jge
add
cmp
add
add
ljmp
out
enter
add
jmp
dec
xchg
pop
add
add
pop
dec
jge
mov
adc
call
add
add
add
out
adc
decl
addb
add
push
add
xchg
or
jmp
jmp
add
pop
cmp
sub
mov
mov
pop
pushf
aaa
sub
cld
aad
ljmp
fstps
add
lcall
adc
inc
add
add
loopne
pusha
add
jmp
add
sub
sub
push
add
xchg
icebp
sub
add
insl
adc
cmp
pop
call
ljmp
add
inc
add
mov
sub
adc
call
jnp
js
add
jmp
call
enter
pop
and
jmp
add
adc
jmp
add
add
pushl
jnp
fwait
push
add
imul
decl
std
mov
add
in
and
jecxz
repnz
push
add
je
loope
push
iret
mov
sub
and
jmp
or
add
sbb
lcall
test
push
add
mov
add
insl
rcrl
cmp
and
incl
adc
lcall
femms
sti
rolb
insl
je
inc
add
mov
pop
pusha
add
add
cwtl
xchg
dec
jp
or
push
add
xchg
mov
loopne
jne
add
stc
fnstenv
or
push
sbb
sub
sti
mov
xchg
jmp
add
and
daa
add
add
xor
decl
add
xor
call
out
cmpsl
add
mov
xlat
ds
sbb
shlb
sub
cmp
add
or
adc
call
outsb
push
lds
inc
add
movsl
add
decl
add
add
sub
js
imul
cmp
dec
mov
sti
out
lret
loop
cs
mov
push
je
add
test
popa
add
dec
push
mov
addl
mov
add
push
sub
bound
inc
add
pushl
add
add
test
outsl
addb
add
outsl
wrmsr
add
dec
pop
jae
cli
sbb
outsb
cli
lahf
dec
mov
dec
and
add
ljmp
pop
lcall
pop
add
pop
mov
add
add
jbe
add
call
das
sub
jb
call
test
or
bound
jmp
fwait
xchg
jmp
add
xor
decl
or
fiadds
jmp
add
add
sub
cmp
ret
add
jnp
dec
iret
out
imul
movb
add
inc
add
xor
addl
inc
add
sarl
xchg
sti
xchg
add
cmp
loope
adc
pushl
cmp
mov
lret
mov
ficoml
push
add
inc
add
cltd
out
add
push
mov
iret
pop
jnp
add
lcall
mov
add
sbb
pop
sbb
aad
add
add
add
xchg
mov
pop
mov
ret
scas
cltd
lds
pop
pop
sbb
push
inc
add
push
add
ja
add
push
add
fadds
xchg
fmul
pop
movsl
add
daa
add
movb
add
cmp
add
or
xchg
imul
add
push
add
daa
add
adc
call
add
add
or
add
add
fadd
add
add
stos
test
add
data16
mov
add
decl
hlt
xchg
sbb
cs
decb
popa
add
and
dec
and
incl
add
lcall
cmp
pop
addb
push
test
aaa
addl
add
sti
push
mov
lds
sbb
add
ja
jae
call
rcrl
mov
mov
push
add
pop
insb
cmp
js
pop
mov
add
scas
sti
inc
add
clc
add
sbb
add
jmp
add
add
add
dec
add
cwtl
inc
add
add
outsl
jge
leave
dec
and
aas
loop
dec
lcall
test
pop
or
add
bound
inc
add
addb
decb
mov
add
adc
out
mov
mulb
jg
decl
test
or
push
cmp
incb
add
shlb
call
sbb
lahf
js
mov
xchg
add
lea
test
dec
inc
add
add
std
pop
push
insb
vmread
add
adc
call
das
xor
inc
add
outsl
or
outsl
mov
insb
pop
cmpsb
add
test
jo
lcall
add
lcall
add
lret
add
mov
call
mov
repnz
jne
add
sbb
mov
ret
add
add
jl
mov
lcall
add
scas
mov
in
xor
incl
decl
or
mov
icebp
std
aas
jecxz
lahf
shlb
add
jb
lcall
daa
add
add
fldcw
insb
jae
cmp
push
xchg
in
out
pushf
sbb
mov
arpl
jmp
cmp
add
movsb
add
movl
scas
mov
add
in
xor
int3
add
inc
add
scas
out
in
mov
jb
pushl
add
push
add
sbb
lods
adc
jb
pushl
out
movsl
add
pop
insb
sub
sbb
ss
pop
nop
stos
add
ljmp
add
decl
mov
cs
add
mov
mov
pushl
call
add
lcall
or
pushl
add
ljmp
and
incl
lcall
add
xor
decl
incl
roll
add
loop
pushf
xchg
roll
add
add
cmp
add
int
scas
lret
pop
and
incl
adc
pushl
out
dec
pop
nop
shufps
add
test
add
decl
sbb
out
add
or
add
add
enter
push
add
mov
jns
and
jo
lcall
add
mov
cmp
jl
adc
call
ljmp
xchg
imul
jb
call
add
int3
stos
xor
add
add
movsb
add
add
dec
aas
aas
mov
and
push
mov
cmp
test
out
repz
sub
bound
ljmp
add
mov
decl
pop
add
call
sar
add
lcall
or
mov
add
add
fcompl
mov
add
ljmp
add
add
stos
cltd
pop
jp
popa
add
add
lcall
push
data16
hlt
js
add
add
or
cmp
add
and
imul
push
add
stos
push
push
add
stos
lods
lahf
ret
add
adc
jmp
sbb
jne
add
mov
add
xor
jmp
add
jge
mov
add
stos
dec
fdivl
addl
scas
xor
jge
add
fistl
test
add
cmp
add
sub
add
and
jmp
xchg
fwait
sub
jno
ljmp
xchg
enter
icebp
jns
shr
mov
gs
add
cmp
incl
enter
add
cli
aas
scas
cli
lock
outsb
inc
add
lods
push
sub
add
add
cmp
or
add
pusha
add
mov
add
add
sub
fstpl
movl
add
bound
inc
add
in
adc
jmp
fnsave
adc
incl
call
add
test
add
mov
add
cmp
xchg
and
cmp
lcall
cli
mov
pop
sub
add
repnz
jp
add
fildl
add
test
add
leave
fmul
pop
dec
loope
adc
call
jnp
add
add
or
add
inc
add
out
cwtl
aam
and
inc
add
jmp
jmp
add
add
add
add
pop
sub
sarb
inc
add
jne
add
lcall
imull
movb
sbb
add
adc
lcall
push
add
cmpsb
add
lock
cmpsb
add
cmp
mov
sub
add
mov
xchg
inc
add
rorl
jns
jmp
cltd
cltd
shll
add
jne
add
hlt
mov
sbb
repnz
mov
add
ljmp
add
add
cmpsl
add
ja
add
inc
add
add
add
add
fcomip
mov
mov
add
stos
adc
add
lea
add
add
adc
rorb
dec
fmull
fldt
mov
out
in
cli
add
cmp
add
add
mov
push
mov
xchg
ret
jl
movsb
xchg
cmp
jmp
iret
add
add
pop
iret
iret
hlt
or
jmp
pusha
add
addr16
add
sbb
je
sub
add
movsb
add
adc
nop
jmp
add
movsb
add
jg
inc
add
fdivr
adc
nop
jmp
fadds
imul
nop
jmp
add
add
jnp
add
mov
xchg
ret
outsl
add
cmp
add
add
add
add
inc
add
mov
nop
jmp
add
nop
jmp
lds
addl
add
in
dec
nop
jmp
add
mov
nop
jmp
popa
pop
add
add
push
adc
pushl
fmuls
movsl
inc
add
add
mov
nop
jmp
jno
loop
add
add
not
inc
add
notl
not
stos
xor
nop
jmp
loop
add
loop
mov
stos
movsb
inc
add
jl
aaa
or
nop
jmp
xchg
outsl
lds
std
and
nop
jmp
add
add
add
push
nop
jmp
add
add
add
lret
stos
push
xchg
inc
add
stos
add
inc
add
add
nop
jmp
stos
add
add
mov
add
add
add
dec
add
inc
or
add
add
add
addr16
add
ljmp
push
nop
jmp
add
add
adc
nop
jmp
dec
lret
add
test
adc
add
addl
dec
xchg
jnp
nop
hlt
pop
popa
nop
jmp
adc
mov
and
decl
add
add
dec
lret
add
jmp
adc
add
add
add
mov
mov
cli
push
nop
jmp
add
jl
adc
xor
nop
jmp
add
add
int
rolb
add
add
push
nop
jmp
mov
add
add
xchg
lahf
add
push
push
mov
xchg
ret
add
lcall
lock
add
mov
add
add
jbe
nop
jmp
adc
lds
adc
xchg
adc
add
add
pop
lahf
scas
ror
nop
jmp
add
add
lret
add
add
outsb
mov
nop
jmp
fdivrs
add
rep
nop
jmp
adc
push
adc
add
adc
add
pop
add
add
add
xchg
add
mov
jmp
add
mov
mov
nop
jmp
add
cmp
add
cltd
rep
nop
jmp
stos
lahf
add
add
bound
lcall
dec
add
add
outsl
stos
dec
dec
mov
xor
nop
jmp
stos
add
lds
or
nop
jmp
dec
cmp
add
add
adc
push
mov
add
push
add
add
add
xchg
cmp
pushl
push
mov
xchg
ret
pop
add
nop
jmp
lcall
add
cmp
jmp
add
dec
movsb
cmp
jmp
jnp
stos
jmp
nop
jmp
add
add
add
add
nop
jmp
pop
stc
fadds
je,pt
nop
jmp
lret
shll
mov
mov
add
stc
ljmp
xchg
inc
add
add
add
add
nop
jmp
outsl
add
mov
push
push
mov
xchg
ret
add
push
mov
xchg
ret
add
add
or
inc
add
lahf
push
movsb
add
add
call
add
hlt
repnz
je
nop
jmp
pop
cmp
inc
add
fadds
mov
xchg
ret
lds
cmp
test
call
add
lds
lods
nop
jmp
or
ficomps
cmp
mov
or
nop
jmp
outsl
add
dec
stos
add
nop
jmp
lds
add
rep
nop
jmp
pop
add
lahf
loop
add
decl
jne
nop
jmp
add
addb
mov
nop
jmp
loop
add
in
xchg
nop
jmp
imul
fwait
mov
nop
jmp
mov
mov
nop
jmp
ljmp
rolb
add
push
push
mov
xchg
ret
sub
leave
push
push
mov
xchg
ret
movsb
mov
lcall
add
push
mov
xchg
ret
add
pusha
aad
mov
nop
jmp
stc
mov
add
jbe
mov
nop
jmp
fiadds
stos
adc
lcall
push
mov
add
add
movl
add
inc
push
mov
xchg
ret
add
sub
sbb
xchg
call
add
stc
add
add
sub
loop
sbb
out
add
js
nop
jmp
add
ljmp
add
jo
mov
add
jmp
stos
and
mov
add
push
stc
add
nop
jmp
add
outsl
xchg
add
xlat
test
adc
nop
jmp
add
add
add
addb
mov
nop
jmp
test
add
add
test
add
lea
nop
jmp
add
add
dec
add
jmp
nop
jmp
add
add
add
jmp
lahf
imul
pop
nop
jmp
orl
push
cmp
loop
add
jne
nop
jmp
xchg
stos
adc
nop
jmp
add
and
lds
jmp
imul
pop
mov
push
mov
xchg
ret
xchg
xchg
jnp
add
mov
or
add
add
stos
mov
nop
jmp
lds
xchg
add
add
add
nop
jmp
or
add
dec
jp
push
mov
xchg
ret
fisttpl
jns
add
add
add
rolb
cmc
push
mov
push
mov
xchg
ret
add
or
rcll
add
push
or
push
add
cld
mov
nop
jmp
outsl
loop
add
nop
jmp
add
cmp
adc
in
push
lcall
inc
add
pop
cmp
call
nop
jmp
lret
add
add
xchg
add
add
fdivs
and
cwtl
jl
nop
jmp
lds
int
pop
jmp
nop
jmp
ficoms
jmp
jp
nop
jmp
roll
ljmp
jmp
iret
mov
add
mov
mov
add
stos
xchg
add
nop
jmp
add
add
add
push
add
roll
add
nop
jmp
xchg
add
add
xlat
lahf
les
nop
jmp
add
push
push
mov
xchg
ret
fadds
rcll
add
nop
jmp
and
iret
add
jmp
adc
add
loop
add
addr16
jmp
mov
dec
cmp
add
mov
add
lahf
test
fcoms
in
add
testb
push
add
arpl
jmp
add
xchg
adc
jne
nop
jmp
fsubs
cmp
pop
add
adc
xchg
xchg
and
adc
jmp
stos
add
add
nop
in
add
nop
jmp
jno
fdivr
ficomps
js
stc
nop
jmp
imul
add
push
mov
xchg
ret
jecxz
xor
decl
jo
add
jp
mov
add
cmp
add
loop
test
add
aam
xlat
cltd
mov
nop
jmp
adc
stos
loop
add
add
push
mov
lea
adc
mov
imul
adc
add
add
outsl
test
mov
jmp
jmp
add
add
lds
add
incl
add
or
fists
add
push
roll
fadds
xchg
add
jo
incl
add
shrl
push
push
mov
xchg
ret
add
mov
push
nop
jmp
movsb
cmp
add
add
in
stos
mov
fs
enter
out
adc
ljmp
rclb
fwait
inc
add
add
testb
inc
in
nop
jmp
jno
add
add
sub
jmp
add
loop
mov
push
sbb
add
add
add
and
cs
nop
jmp
push
jno
add
add
rcll
add
clc
mov
nop
jmp
stc
int
jno
adc
inc
add
sbb
cmpsl
inc
add
add
cmp
add
add
mov
lcall
add
add
fiadds
int
add
loopne
jge
nop
jmp
add
add
xchg
mov
add
add
dec
inc
shll
pusha
push
mov
xchg
ret
add
lret
xchg
adc
ljmp
add
nop
jmp
and
mov
adc
and
add
jp
add
inc
mov
call
sub
jmp
add
stc
jl
add
add
je
nop
jmp
add
add
add
nop
jmp
add
push
imul
mov
xchg
ret
add
xchg
add
jle
arpl
nop
jmp
add
add
mov
jmp
sub
add
dec
rep
nop
jmp
add
and
lds
lods
mov
nop
jmp
add
iret
dec
test
xor
jmp
add
dec
add
sbb
leave
sub
jnp
add
add
rep
nop
jmp
add
add
add
add
jmp
stos
adc
iret
mov
nop
jmp
add
add
add
jb
incl
add
add
add
add
add
nop
jmp
push
add
pop
jp
cmp
in
inc
ret
jo
add
and
incl
xchg
add
add
filds
sti
nop
jmp
add
add
add
add
add
rcrl
add
int
lcall
jmp
add
add
pop
nop
jmp
adc
add
xchg
sub
jbe
add
nop
jmp
add
lds
mov
add
nop
jmp
add
pop
add
add
adc
decl
add
nop
jmp
add
push
pop
outsl
add
inc
nop
jmp
add
dec
loop
jl
mov
add
shll
add
loop
adc
lcall
rolb
add
add
add
fsubrs
movzwl
nop
jmp
add
add
xchg
stc
pushl
push
mov
xchg
ret
fadds
sbb
lods
and
imul
loop
inc
mov
in
movsb
add
add
mov
add
add
nop
jmp
add
pop
fucomp
cmp
call
add
add
push
mov
xchg
ret
push
add
stos
mov
nop
jmp
lds
fidivs
nop
jmp
roll
add
adc
incl
nop
jmp
lret
cmp
xchg
loop
hlt
das
mov
push
mov
xchg
ret
add
popa
hlt
call
imul
in
jns
mov
add
add
sahf
push
nop
jmp
add
add
add
movsb
inc
add
add
add
mov
nop
jmp
iret
jl
inc
xchg
xchg
cltd
call
nop
jmp
add
add
call
add
sub
mov
xchg
ret
add
adc
dec
imul
jmp
jno
xchg
fwait
mov
nop
jmp
mov
mov
repz
incl
movsb
fadds
mov
lock
add
nop
jmp
add
stos
fsubrs
dec
cmp
jmp
add
add
shll
cmpl
nop
jmp
add
hlt
mov
pop
cli
incl
adc
add
cmp
push
add
iret
fiadds
add
incl
add
xchg
leave
jne
nop
jmp
jno
add
xor
nop
jmp
add
stc
pusha
or
addr16
mov
mov
push
mov
xchg
ret
lds
ljmp
mull
jmp
add
add
clc
push
mov
xchg
ret
lahf
add
xor
pop
jae
jmp
iret
stos
xchg
lahf
mov
call
nop
jmp
add
inc
stos
sbb
xchg
inc
add
add
add
push
mov
add
add
add
nop
jmp
add
add
add
test
jmp
and
ficomps
xorb
dec
adc
add
add
ret
add
or
sar
call
adc
xchg
add
add
lret
add
pop
adc
aas
add
nop
jmp
add
add
lahf
pop
dec
nop
jmp
mov
add
add
jmp
test
jmp
add
push
mov
add
add
adc
pop
jb
call
mov
nop
jmp
add
cmp
add
mov
nop
jmp
lahf
lahf
fmulp
insb
add
nop
jmp
lahf
add
add
add
jge
rclb
dec
sahf
inc
add
sub
addb
jne
nop
jmp
dec
lret
add
mov
nop
jmp
dec
mov
xor
call
nop
jmp
add
add
rorl
jmp
add
fwait
lea
nop
jmp
cmp
add
lret
nop
jmp
add
add
test
call
add
sub
jnp
add
dec
add
nop
jmp
lahf
stc
or
or
and
push
mov
xchg
ret
add
lret
jne
nop
jmp
or
mov
add
pop
push
nop
jmp
stc
add
dec
xor
call
in
push
mov
aas
add
ret
pop
ljmp
nop
jmp
lahf
add
add
roll
mov
xchg
nop
jmp
pop
add
add
cmp
jmp
add
add
shrb
mov
xchg
ret
test
pop
add
jg
nop
jmp
ljmp
mov
dec
add
add
add
add
je
push
add
mov
loop
mov
mov
xchg
ret
add
add
ljmp
adc
add
push
add
add
adc
jmp
add
jp
pop
push
add
pop
shrl
pushl
nop
jmp
pusha
add
imul
push
mov
xchg
ret
fsubrs
mov
nop
jmp
iret
xchg
add
add
jns
nop
jmp
add
iret
dec
add
popa
nop
jmp
add
pop
cmp
pop
or
in
inc
xor
add
xchg
or
shlb
add
dec
nop
jmp
add
cmp
lret
pop
nop
jmp
add
jno
push
add
inc
add
add
jbe
add
in
lods
jne
nop
jmp
dec
add
mov
push
mov
xchg
ret
mov
add
add
ljmp
add
iret
dec
add
jne
nop
jmp
add
call
add
stc
cmp
add
add
not
nop
jmp
cmp
shlb
add
add
hlt
mov
jmp
jmp
stos
add
shl
nop
jmp
xchg
add
iret
lahf
add
inc
add
test
lds
mov
jmp
push
outsl
fimuls
fcoms
add
push
push
mov
xchg
ret
add
add
fimull
test
in
call
jnp
add
lea
nop
jmp
add
stos
add
dec
xor
shl
incl
addl
daa
add
inc
add
add
test
mov
fs
jmp
push
add
xchg
jno
inc
add
add
decl
add
add
dec
fadds
xchg
add
sti
add
nop
jmp
add
xchg
test
xchg
inc
add
add
jl
add
push
mov
xchg
ret
add
and
add
mov
xchg
ret
add
jmp
imul
movb
mov
xchg
ret
fadd
push
add
ljmp
nop
jmp
mov
pop
add
cmpsb
add
cli
nop
jmp
push
add
xchg
fadds
sarl
aad
incl
mov
mov
out
or
addl
add
push
nop
jmp
pop
ret
add
je
nop
jmp
lahf
loop
and
pushl
ljmp
ret
add
roll
push
add
iret
add
nop
jmp
add
pop
add
mov
neg
add
nop
jmp
lahf
jp
pop
add
xchg
pop
call
nop
jmp
add
inc
rcrl
inc
std
decl
adc
push
movb
test
nop
jmp
add
or
ljmp
push
mov
xchg
ret
cmp
add
aaa
out
fmuls
pop
add
movsb
adc
and
push
mov
xchg
ret
xchg
jle
nop
jmp
add
add
jl
add
mov
nop
jmp
push
dec
mov
sbb
jmp
pop
int
add
add
sbb
jmp
add
fadd
add
fnstcw
nop
jmp
lcall
push
jecxz
in
dec
push
mov
xchg
ret
lcall
add
add
add
iret
add
jmp
and
add
add
xchg
inc
add
aad
incl
and
add
jnp
push
mov
xchg
ret
add
jno
add
icebp
repnz
dec
add
lahf
lds
test
je
nop
jmp
adc
sub
add
add
add
add
add
add
nop
jmp
jnp
xchg
ljmp
inc
add
add
ret
nop
jmp
add
add
add
add
push
mov
xchg
ret
imul
push
mov
xchg
ret
iret
add
push
mov
xchg
ret
add
add
jecxz
cwtl
mov
nop
jmp
push
adc
add
nop
jmp
lahf
add
shr
nop
jmp
add
movsb
add
pusha
sub
call
incl
cmp
pop
mov
nop
jmp
push
sbbl
pop
jp
mov
push
mov
xchg
ret
add
ljmp
add
or
add
mov
xchg
ret
movsb
cmp
fmuls
jmp
add
lahf
push
add
sarl
jmp
lret
add
xchg
and
sbb
mov
add
jmp
add
add
stc
add
inc
add
add
fiaddl
add
clc
add
nop
jmp
add
xchg
int
repz
add
add
dec
add
nop
jmp
addl
add
add
or
jmp
dec
adc
in
push
nop
jmp
popa
xchg
stc
jmp
jnp
mov
ljmp
add
jmp
push
xchg
ret
add
add
add
nop
jmp
add
add
cmc
mov
add
add
fmuls
add
add
add
add
lret
lcall
add
add
add
adc
push
mov
idivl
mov
lods
cmpw
nop
jmp
adc
add
movb
test
nop
jmp
iret
and
pop
add
lcall
call
incl
imul
in
jmp
nop
jmp
stos
add
int
push
push
mov
xchg
ret
lret
add
lcall
dec
idiv
incl
sub
add
call
in
push
fucomip
aam
add
xor
adc
sub
nop
jmp
add
sub
mov
xchg
ret
add
lds
leave
mov
nop
jmp
add
add
lcall
mov
jmp
add
add
mov
push
mov
xchg
ret
jp
adc
add
nop
jmp
add
add
ljmp
push
mov
xchg
ret
stos
sub
and
push
mov
xchg
ret
add
mov
inc
nop
jmp
lahf
add
mov
rclb
test
and
and
loop
add
add
insb
test
push
mov
xchg
ret
movsb
add
addb
add
lret
xor
nop
jmp
add
add
add
movsl
add
xor
nop
jmp
add
xchg
add
loop
negl
sbb
ljmp
lea
nop
jmp
pop
jno
add
push
xchg
add
pushf
push
mov
xor
call
push
mov
xchg
ret
lahf
popa
push
lea
push
mov
xchg
ret
jl
sub
mov
xchg
ret
add
add
sbb
nop
jmp
lahf
add
ljmp
call
add
nop
jmp
and
add
add
push
add
cli
shr
nop
jmp
jnp
add
add
push
stos
mov
nop
jmp
push
iret
fsubs
xchg
loop
and
pop
movswl
nop
jmp
add
inc
lds
sbb
nop
jmp
add
add
and
add
dec
cmp
jmp
adc
loope
imull
add
nop
jmp
add
adc
loop
inc
add
and
add
add
nop
jmp
imul
lcall
add
lahf
add
add
stos
and
dec
add
push
mov
xchg
ret
add
push
add
testl
add
add
add
nop
jmp
stos
add
add
add
hlt
add
out
push
rcll
add
nop
jmp
lahf
add
add
nop
jmp
add
dec
add
mov
jne
nop
jmp
mov
add
stc
mov
nop
jmp
pusha
sub
lds
loop
cmp
call
jmp
add
add
mov
push
mov
xchg
ret
addl
rcl
stos
lods
nop
jmp
add
xchg
add
fbstp
rclb
iret
add
lahf
dec
loop
xchg
or
mov
xchg
ret
add
add
add
jmp
add
jno
jmp
nop
jmp
add
add
add
mov
rclb
movsb
dec
add
add
add
add
incl
fnstsw
nop
jmp
pop
adc
xchg
push
mov
push
mov
xchg
ret
shrl
add
nop
jmp
add
adc
xor
nop
jmp
cmp
add
stc
dec
add
push
mov
xchg
ret
pop
add
add
in
add
or
add
mov
nop
jmp
inc
inc
add
scas
jne
nop
jmp
add
int3
cmp
nop
jmp
stos
lds
xchg
pop
cmp
nop
jmp
outsl
jno
pop
addl
pop
push
mov
xchg
ret
add
add
pop
mov
nop
jmp
add
add
add
pop
add
nop
jmp
add
add
add
add
jmp
add
iret
add
add
enter
add
xchg
add
push
mov
xchg
ret
loop
add
scas
push
mov
add
add
and
pushaw
enter
mov
movsl
nop
jmp
pop
add
imul
ss
jmp
add
iret
fadds
add
sar
decl
mov
stos
imul
jmp
add
mov
clc
nop
jmp
mov
add
add
jo
nop
jmp
add
fsubrl
inc
xor
nop
jmp
test
or
clc
pop
nop
jmp
add
add
xchg
lcall
nop
jmp
loop
adc
jmp
fadds
add
add
add
mov
nop
jmp
add
add
or
add
push
mov
xchg
ret
add
xchg
addb
pushl
nop
jmp
roll
add
add
push
mov
xchg
ret
cmp
push
nop
jmp
add
jp
lds
adc
lret
add
incl
xchg
popa
add
adc
sub
incl
add
push
add
shll
add
jbe
mov
push
mov
xchg
ret
stos
add
adcb
add
ret
nop
jmp
and
jnp
push
push
mov
mov
and
push
call
add
nop
jmp
addl
pop
dec
stos
nop
jmp
fsubr
outsl
dec
add
add
jne
add
jmp
add
add
andl
incl
cmp
add
jne
nop
jmp
add
add
add
cmp
testl
add
add
pop
mov
nop
jmp
xchg
or
lds
mov
xchg
ret
add
xchg
out
ret
nop
jmp
add
add
lahf
dec
or
mov
add
push
mov
xchg
ret
add
add
nop
jmp
add
adc
stos
lahf
dec
add
mov
inc
add
popa
push
int3
decl
push
mov
xchg
ret
pop
add
push
push
mov
xchg
ret
add
lds
mov
push
mov
xchg
ret
cmp
vhsubpd
add
fmul
add
inc
adc
mov
xchg
ret
iret
add
add
jecxz
addl
mov
nop
jmp
jno
dec
and
fsubs
pop
popf
push
nop
jmp
add
adc
lds
add
sbb
call
dec
outsl
or
xor
nop
jmp
test
mov
lcall
out
pushl
add
add
decl
jbe
nop
jmp
sub
lahf
add
imul
add
lahf
pop
add
js
push
mov
xchg
ret
add
int
popf
xor
push
mov
xchg
ret
loop
add
popa
push
mov
xchg
ret
add
iret
add
ljmp
pusha
nop
jmp
add
add
jnp
inc
adc
ljmp
mov
dec
add
roll
add
sub
nop
jmp
mov
add
and
call
nop
jmp
add
movl
push
mov
xchg
ret
add
insl
jne
nop
jmp
mov
incl
add
jmp
incl
pushl
call
call
stc
iret
add
add
mov
add
jns
sub
add
mov
and
fdivrs
push
push
mov
xchg
ret
add
stos
cmp
jmp
add
add
xchg
movb
xchg
add
xor
nop
jmp
fadds
mov
jae
pushl
add
popa
add
data16
cmp
jmp
add
add
and
push
add
test
add
nop
jmp
adc
nop
jmp
stos
outsl
add
lcall
add
addb
add
add
add
pop
add
nop
jmp
jl
inc
add
mov
add
mov
add
incl
outsl
push
add
jne
nop
jmp
movsb
add
mov
jmp
mov
add
mov
nop
jmp
add
add
orl
and
incl
iret
dec
addl
cmp
out
incl
movsb
popa
lcall
adc
jmp
add
push
push
mov
xchg
ret
push
add
xchg
xchg
roll
add
add
testl
add
add
cmc
fwait
xor
push
mov
xchg
ret
add
jns
add
add
cmp
sub
mov
sub
incl
addr16
mov
cld
ljmp
add
add
nop
jmp
add
movsb
add
add
add
mov
add
add
add
add
jne
nop
jmp
stc
and
test
icebp
call
incl
xchg
xchg
mov
nop
jmp
mov
inc
nop
jmp
inc
add
dec
dec
add
lds
mov
nop
jmp
add
add
add
pop
mov
nop
jmp
xchg
add
and
adc
call
nop
jmp
and
adc
movl
add
add
int
ret
push
mov
xchg
ret
jno
add
push
mov
xchg
ret
add
pop
lds
push
mov
xchg
ret
push
addr16
jmp
nop
jmp
movsb
ljmp
cld
or
repz
incl
sub
push
nop
jmp
and
add
add
add
jmp
add
test
pop
lds
cli
push
mov
cmp
add
cmp
mov
xchg
ret
cmp
adc
out
imul
nop
jmp
lret
dec
inc
loop
lds
imul
nop
jmp
dec
add
sub
nop
jmp
mov
add
cmp
add
and
ljmp
aas
add
add
ljmp
pop
jl
mov
nop
jmp
imul
add
add
push
mov
xchg
ret
ljmp
dec
mov
nop
jmp
add
lcall
add
add
nop
jmp
and
dec
add
add
add
nop
jmp
add
hlt
mov
jmp
add
push
jl
lahf
fadds
mov
add
incl
add
stos
push
push
mov
xchg
ret
and
mov
nop
jmp
and
iret
aad
addl
pushf
add
push
mov
xchg
ret
add
pop
movzwl
nop
jmp
add
mov
pop
mov
nop
jmp
adc
movsb
fadds
add
nop
jmp
xchg
jno
adc
mov
xchg
add
add
lods
cmp
push
pushf
inc
add
add
add
add
nop
jmp
roll
fcoms
nop
jmp
mov
roll
xchg
stos
int
push
add
mov
jmp
adc
and
ljmp
in
incl
add
addr16
mov
nop
jmp
addl
add
add
nop
jmp
add
add
add
and
movl
in
call
decl
push
cmpsl
add
jmp
xchg
shll
add
mov
jmp
add
add
mov
xchg
pop
pop
sub
nop
jmp
jp
add
fidivrs
add
and
mov
hlt
incl
addr16
add
lret
nop
jmp
lahf
jno
sub
jl
mov
adc
jmp
xchg
add
add
jmp
add
add
cld
inc
add
loop
jl
add
mov
lret
mov
xchg
ret
add
add
ret
add
add
ja
pop
stos
push
mov
xchg
ret
add
add
pop
nop
jmp
add
jmp
movsb
add
nop
jmp
add
add
in
jmp
nop
jmp
lds
add
mov
add
mov
xchg
ret
add
jl
fadds
repz
decl
xchg
add
jl
je
add
nop
jmp
iret
add
add
insb
push
nop
jmp
jl
lcall
add
push
mov
xchg
ret
add
int
roll
decl
jmp
jl
add
add
inc
add
add
shrl
jg
nop
jmp
add
lds
dec
xor
nop
jmp
rcr
add
inc
add
push
call
nop
jmp
add
lcall
jmp
add
adc
loop
xor
push
mov
xchg
ret
fcomp
lods
add
nop
jmp
lahf
outsl
popa
lret
xchg
outsl
sbb
push
mov
xchg
ret
dec
stc
add
call
incl
add
addr16
add
adc
nop
jmp
lahf
lahf
add
mov
adc
jmp
add
add
nop
jmp
inc
add
lcall
jmp
outsl
add
add
add
pop
mov
nop
jmp
add
mov
adc
jmp
lahf
add
jno
nop
jmp
popa
add
mov
push
mov
xchg
ret
fadds
add
jne
nop
jmp
add
add
add
jmp
mov
pop
iret
lcall
lcall
add
imul
rclb
lcall
movl
and
call
into
scas
inc
add
add
add
leave
sub
incl
xchg
cmp
jmp
dec
lds
and
add
mov
push
nop
jmp
movsb
loop
add
add
add
add
jl
sbb
jmp
xchg
lahf
pop
add
lcall
add
cs
add
add
mov
add
out
test
aam
pop
arpl
ljmp
movsl
add
cmp
add
movl
mov
xor
jge
jl
inc
add
mov
mov
lea
lds
jmp
add
mov
call
mov
add
das
xor
cld
lret
push
call
add
pusha
add
inc
add
iret
imul
add
ret
pop
leave
clc
cmp
les
add
add
push
cmp
add
dec
inc
add
rorb
fisttpl
add
and
call
jnp
xor
jne
mov
in
cltd
jecxz
js
test
adc
decl
iret
repz
add
jle
scas
lahf
ljmp
stc
pushf
jle
mov
add
add
addr16
mov
lds
arpl
incl
frstpm(287
add
pusha
add
mov
nop
and
lret
lea
xlat
cld
mov
xchg
popf
or
pushl
gs
add
scas
sub
jmp
pop
lahf
fmuls
add
push
dec
pushl
aad
in
cs
add
data16
test
and
call
xchg
aad
add
lock
xchg
int3
dec
rol
add
add
or
add
mov
mov
ja
add
add
xchg
les
or
stc
imul
ja
add
ss
add
bound
incl
add
xchg
jo
decl
mov
add
pop
cld
pop
sub
add
icebp
scas
movsl
add
jp
inc
add
add
rolb
add
test
add
dec
sti
insb
addb
add
mov
aaa
mov
add
ljmp
mov
adc
rorl
inc
add
and
call
mov
add
mov
add
add
jbe
push
ss
test
fsubl
fbstp
add
dec
sbb
add
add
add
or
add
push
mov
add
adc
add
add
in
jle
pop
pop
mov
add
add
lcall
pop
test
lods
pause
addl
add
inc
add
bound
jmp
pop
sbb
push
add
jg
add
add
insb
mov
repz
add
data16
jge
push
std
mov
push
rdmsr
add
out
jg
sub
add
cwtl
fisubrl
or
outsl
addl
sub
inc
add
jmp
add
add
add
jmp
add
fidivs
xor
call
movsl
add
add
shl
add
jne
add
inc
add
mov
shl
add
add
sahf
push
fdivrs
inc
add
fwait
add
call
push
push
pop
mov
jmp
jnp
outsb
mov
add
add
sahf
imul
bound
ljmp
and
add
lcall
jge
add
push
add
pop
mov
add
mov
push
sub
xor
shld
or
xor
lcall
fwait
lret
in
cmp
int
insl
cmp
xor
xor
scas
jb
decl
int3
mov
add
and
incl
incl
add
lret
mov
jnp
loope
inc
add
add
add
les
addb
loop
aad
adc
call
add
xor
xchg
sub
add
jp
lret
cld
dec
in
jmp
int3
aas
adc
call
add
stc
mov
incb
add
dec
fisttpl
fwait
xchg
push
hlt
aad
push
add
xor
lcall
lods
pop
outsl
out
jne
pop
cmp
popa
add
cs
pushf
add
js
inc
add
pop
xchg
xchg
sub
jg
jno
ljmp
scas
push
add
push
add
fiaddl
stc
xchg
mov
imul
aaa
sbb
call
xlat
add
pusha
add
fimull
add
cltd
sub
add
sub
dec
jmp
loop
out
push
in
testl
add
mov
lods
sbb
fisttpl
bound
mov
sahf
popf
adc
add
push
mov
xchg
push
fwait
stc
xor
ljmp
cmp
pop
adc
add
mov
jb
lcall
movsb
add
jmp
dec
sbb
stos
jp
add
add
add
add
add
inc
add
loope
dec
enter
or
ljmp
add
in
sbb
cmp
jmp
add
add
cltd
xchg
sub
cs
iret
jno
jmp
movb
sub
push
daa
add
pop
aas
inc
add
cli
call
pop
jg
js
add
incl
xchg
out
fcmove
push
mov
je
xchg
sbb
add
ss
add
loop
test
dec
add
lds
add
mov
add
or
mov
fwait
repz
push
ret
pop
add
bound
call
mov
inc
add
add
pushl
imul
jecxz
addb
xchg
mov
mov
push
mov
push
sub
outsb
xor
jmp
add
pop
mov
out
std
lret
icebp
dec
cmc
and
rcrb
std
popf
add
and
pushl
add
pushl
add
enter
mov
add
mov
pop
pop
loope
ds
add
js
loope
arpl
cmp
lcall
add
jo
push
mov
fists
add
jo
mov
nop
or
aam
hlt
dec
inc
add
sub
xchg
lods
and
jmp
add
add
push
sarl
fstpl
mov
add
mov
adc
add
insl
inc
add
jo
call
jb
ljmp
ss
aas
lods
sub
or
jmp
cmp
pop
cmp
dec
add
add
out
rolb
adc
add
add
mov
and
call
pop
test
add
into
jecxz
push
inc
add
imul
iret
lcall
dec
xchg
prefetch
lcall
xlat
push
aad
xchg
pop
bound
decl
aas
mov
pop
xor
enter
add
mov
xlat
nop
aad
push
push
movl
add
add
add
sahf
iret
pop
xor
jmp
add
repnz
movsb
add
pop
jp
add
aam
sbb
lds
int
fisubrl
add
add
mov
add
in
ret
add
add
xor
jmp
add
dec
faddl
add
in
pop
add
dec
pop
add
call
add
icebp
js
add
add
inc
add
jmp
xchg
jae
decl
or
add
das
mov
add
call
mov
cmp
add
popf
push
add
call
add
add
jno
pushl
aam
das
xchg
mov
add
fcoms
call
aaa
or
and
je
add
fidivs
push
xchg
iret
pop
xor
lcall
add
ljmp
mov
add
mov
add
ds
pop
mov
add
repz
xchg
popf
xlat
xor
dec
mov
add
lret
in
rolb
ss
push
add
add
xor
push
lret
add
fadd
add
icebp
loopne
dec
mov
in
mov
fistps
pop
out
add
mov
pop
add
add
incl
dec
data16
xchg
mov
add
xor
ljmp
int3
jmp
sarl
adc
pushl
add
ljmp
rol
add
xchg
and
jmp
add
add
loope
cwtl
aaa
sahf
int3
icebp
add
push
pop
pop
pop
stos
mov
mov
add
cmpsb
add
cmp
add
add
push
add
test
and
push
jns
add
add
jo
pushl
cmpsb
add
add
aas
mov
js
add
je
add
aam
add
movb
arpl
cli
xchg
or
jns
pop
pop
jns
fisubs
call
fldcw
push
push
jne
sbb
xor
ljmp
add
xor
lcall
add
dec
jge
mov
call
adc
push
inc
add
repnz
shl
sub
add
out
xchg
std
or
add
sbb
add
push
add
inc
add
jecxz
mov
pop
repz
xchg
fdivl
add
add
and
sti
movsl
add
jle
aas
inc
add
scas
fsts
dec
mov
add
iret
jge
ret
add
icebp
pop
out
dec
aas
and
ljmp
add
adc
incl
and
inc
add
add
add
push
xlat
inc
add
xor
jmp
std
lock
fcoms
add
pop
notl
fmull
add
or
jmp
mov
xor
rcrl
dec
pop
jnp
leave
loopne
bound
push
xchg
shlb
decl
add
lret
aam
add
gs
loopne
ds
mov
inc
add
addl
lds
dec
leave
and
push
movl
mov
add
icebp
push
add
clc
cmp
scas
cwtl
out
mov
jmp
inc
add
push
icebp
cltd
inc
add
push
aaa
repz
mov
add
sbb
pop
daa
add
addl
adc
jmp
mov
add
mov
add
call
cli
pop
movl
movl
pop
fimull
dec
ds
jge
jb
decl
test
std
inc
add
ficomps
cld
jns
fisubs
rolb
add
adc
ljmp
mov
sub
mov
add
add
xor
add
call
add
add
mov
call
or
pusha
add
notl
dec
ljmp
pop
push
stc
lods
icebp
jg
int3
add
imull
test
xlat
stos
int
pop
js
mov
out
cs
jne
add
incb
add
add
ljmp
leave
addb
add
movsb
add
mov
inc
add
jns
push
dec
push
add
xor
add
movl
addl
ret
add
inc
add
add
std
lds
mov
int3
roll
push
cs
testl
shll
incl
in
lret
inc
add
frstor
add
int3
or
add
add
fst
sub
sbb
push
add
mov
sub
sbb
add
stos
add
add
lock
in
test
mov
add
add
fcomps
add
add
and
call
and
mov
in
inc
add
pop
add
lock
inc
add
aam
add
fs
jmp
stc
add
call
in
jp
movsl
add
xor
push
add
popa
add
gs
add
inc
add
fcompl
imul
mov
arpl
cmp
dec
and
call
mov
add
jg
mov
push
add
jecxz
arpl
ds
or
add
aaa
nop
mov
add
lods
dec
push
mov
dec
adc
sbb
pop
and
js
push
addl
sbb
movsb
add
cld
mov
inc
add
lcall
mov
mov
arpl
call
dec
imul
add
fstps
add
fisttps
add
add
pop
mov
jb
decl
add
loopne
adc
outsl
scas
pop
mov
jno
jmp
add
add
mov
cltd
sbb
xor
call
xchg
sti
xchg
fwait
adc
pushl
loopne
adc
jmp
sbb
fyl2x
mov
iret
jns
add
fcom
ss
out
push
add
sbb
lcall
add
push
xchg
or
pop
gs
xor
ficomps
bound
decl
add
cmp
mov
addb
xchg
mov
add
add
call
add
xchg
insl
or
add
dec
push
mov
xor
leave
shll
addl
inc
add
push
jge
add
add
jg
dec
fidivl
xor
xor
pushl
add
cli
add
mov
test
mov
adc
dec
fisubs
daa
add
jbe
jmp
jne
imul
mov
movsb
add
mov
add
mov
out
cmc
leave
jge
iret
jp
les
test
iret
je
bound
decl
add
xor
mov
mov
add
add
cld
jns
cs
jle
add
jg
fidivl
add
push
inc
add
jle
aaa
cmpsl
add
out
std
mov
adc
jmp
add
stos
imul
mov
rol
add
fiaddl
add
xor
in
xor
jmp
add
mov
inc
add
sbb
call
sbb
int
and
call
jl
cmp
add
xchg
mov
dec
sub
inc
add
sahf
adc
call
xchg
std
popa
add
inc
add
std
lock
mov
and
add
pop
dec
push
sub
jg
jo
incl
addb
rolb
jmp
add
jmp
add
add
bnd
loope
roll
add
call
add
lcall
movsl
add
lock
add
lcall
add
ljmp
add
mov
jmp
add
pop
imul
cmp
add
fcmovu
daa
add
push
pop
movsl
add
nop
add
incl
add
add
mov
add
add
add
cmp
lods
popf
mov
or
lods
cmp
and
pushl
fwait
add
mov
jne
and
jmp
pushl
push
add
pop
add
add
cmc
mov
push
add
push
push
out
pop
add
add
ljmp
mov
out
and
call
xchg
xchg
lds
cmp
add
jmp
add
mov
pop
aad
add
out
mov
add
fisubs
ljmp
data16
mov
push
add
add
repnz
clc
xchg
mov
adc
adc
fidivs
ljmp
inc
add
add
jo
jmp
push
add
fildl
in
xchg
add
sti
cmp
add
add
add
imul
pop
sahf
ret
add
pop
inc
add
clc
icebp
data16
sbb
add
je
push
and
pushl
xchg
cmpsb
add
push
add
loop
push
enter
add
add
mov
add
dec
push
lea
call
add
mov
add
jmp
add
stos
test
fsubl
scas
movb
mov
ljmp
add
jae
ljmp
insl
addl
sub
jmp
add
decl
add
sbb
add
add
add
jmp
add
jo
incl
add
inc
add
dec
rolb
jnp
add
mov
pushf
xor
push
outsl
ret
add
push
add
xor
add
push
sub
jbe
mov
mov
pop
rolb
clc
shll
iret
push
add
popa
add
lods
insb
pop
push
add
and
incl
roll
mov
jg
mov
add
call
flds
add
add
xchg
xchg
in
loopne
xchg
rcrl
mov
les
ja
rclb
add
fnstsw
add
enter
xchg
add
inc
add
je
add
adc
dec
addl
add
movl
adc
cld
addb
pop
bound
push
stos
enter
or
daa
add
decl
add
stos
mov
jne
addl
cmp
dec
pushl
push
ret
add
out
addb
sti
movb
imul
push
add
rolb
loope
adc
add
push
add
stos
add
pushl
hlt
dec
mov
repz
ljmp
shll
add
les
add
sarb
pop
pop
pop
loopne
lods
push
add
adc
lcall
dec
sbb
loope
cmova
or
cli
and
call
add
xchg
lods
jne
addl
scas
and
lcall
add
mov
popa
add
cld
dec
adc
decl
out
ljmp
ficoms
push
add
test
mov
nop
push
aam
add
jmp
ja
add
add
add
pop
pop
or
add
lret
add
scas
mov
xchg
stos
add
pushl
aam
leave
xchg
xor
fadds
push
inc
add
or
jns
xor
adc
jmp
add
js
add
test
pop
fisubrs
pop
push
add
jbe
adc
decl
pop
or
call
cli
or
fidivrs
mov
nop
imul
add
movsb
add
add
dec
cmp
ljmp
addl
add
mov
jmp
add
add
and
cmp
incl
add
roll
add
inc
add
lcall
add
add
xchg
popa
add
xor
push
ret
add
dec
shr
adc
lcall
add
std
add
incl
lods
add
adc
sub
lcall
lock
mov
cmc
rolb
jmp
add
sarb
mov
enter
add
rolb
mov
push
push
add
jp
add
xchg
add
incl
add
pushf
sbb
add
mov
popf
adc
pop
cmp
add
mov
ja,pt
loop
adc
jmp
lcall
lds
and
incl
sbb
inc
add
add
jmp
test
sbb
sbb
pop
or
mov
and
pushl
dec
pushf
or
add
or
lcall
add
add
xor
add
in
mov
pop
ret
movsl
add
add
add
xor
jmp
ljmp
pop
mulb
dec
arpl
call
xor
decl
xchg
jb
jmp
add
and
pushl
ljmp
outsl
addl
int3
jl
dec
mov
push
popa
add
insb
and
incl
addb
push
dec
inc
add
call
xor
call
add
pusha
add
out
jmp
jl
gs
add
ljmp
add
movb
imul
leave
push
cld
sbb
dec
dec
lcall
or
lock
dec
dec
iret
js
mov
xor
inc
add
add
mov
add
sti
fists
add
out
mov
jmp
add
jmp
mov
ret
add
call
adc
mov
and
dec
or
xchg
push
mov
dec
xor
push
imul
jg
add
jae
incl
add
adc
fcom
cwtl
fcomip
adc
lcall
add
call
call
pop
std
lret
cltd
fcmovnbe
push
cmp
stos
jnp
sti
and
jmp
push
bound
call
pop
xor
fimuls
in
push
mov
pop
xchg
lret
xor
arpl
incl
outsl
xchg
data16
add
xchg
insb
addl
out
cmpsb
add
add
add
jp
push
ret
add
or
add
lds
xchg
adc
jge
movl
lcall
dec
data16
fisttpl
lret
or
out
sbb
and
jmp
in
pop
or
add
mov
decl
out
daa
add
mov
add
and
ljmp
addl
add
fistl
add
xchg
mov
push
out
popa
add
or
add
add
add
jno
call
jmp
add
add
cs
add
js
nop
xor
pushl
xor
jmp
add
inc
add
xor
jmp
add
fisttpll
repz
pusha
add
jmp
add
sbb
add
push
mov
frstor
mov
add
pop
test
mov
jae
pushl
lcall
jmp
add
add
stc
mov
movb
cwtl
sub
jle
mov
stos
cltd
inc
add
call
and
ljmp
mul
add
add
dec
nop
xchg
sahf
mov
pop
sbb
xchg
in
push
xlat
pop
mov
add
or
mov
pop
adc
jmp
add
add
fidivs
decl
pop
pop
or
jns
cltd
out
insl
cmp
xor
push
mov
inc
add
add
push
ror
pop
and
incl
add
sbb
mov
add
mov
add
xchg
sbb
inc
add
pop
pop
stos
mov
sub
adc
add
mov
add
xor
incl
add
int3
scas
adc
hlt
leave
sub
jle
pop
ljmp
leave
and
add
jp
mov
or
lcall
add
push
add
dec
fdivl
add
mov
cli
mov
pop
negl
jmp
inc
add
add
mov
lret
jmp
and
in
out
push
enter
jge
jb
jmp
add
push
fcomip
or
lahf
sahf
je
lods
mov
pushl
arpl
decl
add
xchg
adc
call
arpl
jmp
cmp
add
mov
cmp
movsl
add
push
add
and
icebp
and
pushl
mov
cmc
adc
decl
cs
add
rolb
pusha
add
jno
jmp
add
add
enter
data16
add
mov
inc
add
xor
ljmp
add
mov
add
inc
add
out
int
leave
inc
add
inc
add
push
sbb
adc
inc
add
add
out
jnp
jno
jmp
add
mov
fmull
inc
add
add
adc
decl
out
add
ljmp
call
scas
ss
rolb
add
pushl
add
xchg
sbb
pushf
cltd
cs
add
push
out
mov
xor
arpl
push
or
add
loop
fwait
add
fcmovnu
adc
ljmp
loopne
cmpsb
add
lcall
dec
movl
rcr
decb
int
add
add
mov
les
or
dec
int
add
or
pop
jne
add
movsb
add
dec
or
pop
sub
add
scas
roll
add
mov
add
pop
fstpl
add
cmp
add
dec
popf
inc
add
insl
adc
mov
sahf
lahf
ss
or
add
adc
add
frstor
sbb
outsb
fdiv
fists
jnp
add
lcall
or
xchg
aaa
xchg
mov
add
hlt
mov
add
decl
in
repz
sub
xchg
dec
add
decl
jp
pop
std
pop
cltd
popa
add
jnp
add
int
add
imul
add
add
cmc
sub
add
add
in
pusha
add
sbb
lods
xor
ljmp
add
dec
in
mov
incl
in
pop
add
or
add
incl
loop
inc
add
sub
jmp
adc
inc
add
add
test
popf
movl
ljmp
cld
les
pop
mov
arpl
pushl
add
push
jbe
xor
jbe
add
add
mov
add
xchg
fcomps
mov
std
or
add
ret
add
add
test
movsb
add
add
lcall
int
xchg
cltd
data16
mov
in
mov
add
add
add
cmp
mov
clc
jl
outsb
mov
lcall
test
add
add
add
xchg
loope
push
add
mov
xor
pushl
add
add
scas
add
add
and
push
add
fdivrs
inc
add
xchg
inc
add
xchg
push
push
dec
fbstp
imul
add
out
std
or
ds
dec
jecxz
sub
test
or
add
mov
add
add
push
xchg
addb
cwtl
cmp
pop
inc
add
add
push
shlb
mov
pop
add
add
test
xchg
jb
call
add
out
dec
mov
xor
daa
add
xor
in
xchg
jle
xchg
jb
stc
notl
decl
add
sbb
push
add
ja
mov
add
rolb
add
add
inc
add
cmpsl
add
dec
pop
add
sbb
data16
and
call
jmp
add
nop
sub
add
es
addl
ret
lods
push
loopne
insb
mov
pop
shlb
sbb
add
movsb
add
aad
ret
add
jmp
ljmp
pop
mov
mov
dec
adc
jmp
jmp
imulb
sahf
fwait
jmp
and
call
mov
movsb
add
mov
lods
sbb
scas
sahf
pop
cmc
push
addl
jl
add
add
das
inc
add
mov
jmp
repz
cmp
pop
sti
jo
aas
mov
cmp
mov
xor
call
jnp
out
inc
add
inc
add
bound
ljmp
cmp
in
jb
lcall
nop
bound
sti
pusha
add
adc
pop
dec
xor
decl
sub
mov
add
cld
cmp
decl
cwtl
mov
add
jnp
add
sub
sub
movsb
add
add
dec
stos
rcl
rolb
cmp
sub
cmp
add
outsl
pop
add
ljmp
add
add
and
les
cmp
cmp
add
add
sub
cmpsb
add
add
lods
inc
add
stos
jp
add
addl
add
sub
jne
addb
mov
add
and
lcall
add
pushf
push
add
mov
mov
scas
cltd
enter
fwait
imul
sub
jmp
and
pushl
add
negl
mov
fwait
inc
add
mov
jle
imul
jecxz
xchg
insl
inc
add
add
add
call
xor
pushl
rolb
add
xor
loop
push
lods
ds
add
add
mov
jge
roll
add
int3
inc
add
add
pushl
add
and
decl
mov
decl
add
jmp
add
add
add
push
add
cltd
adc
decl
add
mov
add
data16
roll
add
test
add
insb
outsb
mov
xor
incl
add
mov
add
push
mov
and
push
add
add
pop
cmp
into
cmpsb
add
sbb
add
xchg
mov
pop
xchg
or
add
push
add
in
xor
scas
das
xchg
adc
decl
cli
shl
lret
dec
movsb
add
add
cmp
cmp
add
add
add
ja
add
loopne
data16
add
push
push
push
pop
add
add
xchg
insl
or
mov
dec
aas
les
aas
lret
imul
lock
add
xchg
int3
test
sarl
test
or
lcall
js
add
fdivrl
or
lds
mov
add
add
inc
add
mov
xchg
xchg
mov
xchg
pop
cli
sub
add
dec
mov
mov
mov
add
enter
add
dec
inc
add
std
push
fwait
movsb
add
cwtl
lods
dec
es
rol
add
loope
lea
cmp
add
add
xchg
addb
add
movb
pushf
outsl
call
add
add
pushl
call
int3
push
add
call
add
arpl
jmp
add
in
data16
add
jae
call
cmp
inc
add
mov
in
fstps
jbe
xor
decl
add
add
add
push
inc
add
jo
incl
out
push
add
imul
popf
pop
lret
add
pop
fistpll
add
std
cmova
or
pop
stos
fs
or
xchg
dec
sbb
fmull
movsl
add
ss
cli
test
add
ror
add
add
es
jae
incl
pop
and
add
and
sub
add
rorb
push
inc
add
lods
sbb
mov
cmpsl
add
scas
add
decl
rolb
dec
cltd
mov
enter
add
add
pop
imulb
imul
dec
pop
icebp
inc
add
or
mov
rorl
jo
lcall
add
addl
or
cmp
mov
mov
add
mov
lods
int3
bound
incl
dec
mov
pop
mov
add
lock
nop
dec
or
sbb
cmp
fmulp
xor
jbe
add
jnp
mov
add
add
mov
xchg
pop
xchg
dec
jns
xchg
aad
pop
mov
popf
popa
add
adc
sbb
add
pop
fstpt
add
jecxz
xchg
jnp
add
rorl
roll
and
ds
leave
inc
add
decl
mov
jl
aaa
repz
jp
popf
jecxz
pop
add
cltd
mov
mov
movb
add
movsb
add
xchg
xchg
jp
add
push
mov
add
addl
mov
add
jmp
jmp
add
out
add
jge
je
add
xchg
adc
inc
add
push
ret
add
fwait
mov
test
je
add
add
xor
sti
add
sbb
add
add
adc
pushl
popf
ret
add
dec
nop
mov
jbe
push
add
xor
jmp
xchg
inc
add
mov
add
mov
mov
xor
ljmp
adc
cmp
sbb
add
bound
lcall
sbb
addb
and
decl
js
mov
scas
or
add
push
add
jmp
rolb
add
adc
add
add
pop
lds
mov
add
je
int3
fwait
std
pop
sbb
add
inc
add
jge
dec
inc
add
ret
add
add
push
cmp
mov
imul
sbb
add
movb
mov
sub
jmp
add
cmp
push
add
cltd
ja
mov
sti
jnp
addb
pop
mov
add
jmp
add
ljmp
or
xor
incl
xchg
cmpsl
add
in
jbe
add
in
loopne
xor
jmp
add
add
add
push
jle
cmp
les
or
mov
adc
lcall
adc
decl
outsb
out
push
xor
pushl
add
rolb
out
iret
addb
jnp
test
add
cltd
and
jmp
ljmp
sbb
add
or
add
push
add
pop
fsubp
add
push
mov
je
jmp
add
pop
pop
popa
add
cmc
fs
add
mov
add
add
stos
push
mov
add
test
movl
mul
add
sbb
sbb
js
mov
or
movsb
add
add
rorb
push
enter
sahf
data16
pushl
cld
ret
add
add
jns
movsb
add
add
call
adc
push
add
insl
lods
cmp
xlat
sub
add
add
push
jmp
inc
add
pop
ret
daa
add
add
xor
pop
add
add
xchg
mov
or
fdivrl
add
sub
mov
adc
call
mov
lcall
nop
sub
xor
dec
ret
add
cmp
inc
add
add
lcall
inc
add
ljmp
mov
add
pushl
add
inc
add
aas
sbb
movb
shrl
nop
xor
decl
int
add
outsl
cld
inc
add
test
fadds
add
out
mov
add
pop
push
push
sarb
pusha
add
outsl
lock
leave
inc
add
adc
mov
fsubl
add
jo
fsubs
add
jo
push
add
call
fcoms
add
lret
mov
add
add
arpl
std
lds
jge
mov
xor
ljmp
add
mov
clc
sti
xor
decl
add
jbe
mov
nop
aam
add
jae
call
sub
xor
lcall
add
pop
sarl
dec
fistl
lcall
push
add
ficompl
add
xchg
jge
xchg
add
decl
sub
in
add
cmp
add
mov
imull
stos
xor
decl
push
add
inc
add
and
call
loopne
or
sub
add
mov
cs
std
pop
imulb
outsb
and
addb
dec
mov
pop
cli
cli
stc
jmp
fisubl
xor
push
xor
add
lcall
movl
add
dec
mov
aad
mov
sub
add
hlt
jmp
into
testl
cmp
ja
add
mov
lret
jnp
add
int3
add
mov
out
xor
xchg
push
mov
pushl
add
out
scas
and
jmp
add
lods
imul
scas
or
pop
popf
das
out
dec
ljmp
add
add
adc
pushl
adc
icebp
jl
add
jmp
ljmp
inc
add
add
add
addl
add
decl
push
or
add
add
add
call
dec
int3
ljmp
cmc
jnp
inc
add
xchg
mov
add
fcmovnb
add
aam
adc
add
dec
popf
je
loope
arpl
jmp
xor
jmp
add
mov
pushf
pop
rorl
lcall
mov
add
pop
lock
clc
rcl
push
add
jecxz
std
xor
incl
lods
dec
pop
notl
in
xlat
adc
mov
push
add
icebp
addl
mov
sbb
mov
add
sbb
add
shr
mov
add
in
adc
jns
jae
inc
add
add
iret
xchg
mov
frstor
add
jns
lret
mov
test
add
add
xor
ljmp
pop
add
mov
and
data16
add
add
add
stc
daa
add
or
add
push
add
jle
xchg
push
and
ljmp
inc
add
dec
fldenv
add
pop
jle
inc
add
or
adc
jmp
add
push
fidivrs
sub
add
add
add
add
mov
scas
xchg
inc
add
clc
fbld
add
cmp
or
push
mov
add
xchg
dec
mov
loope
and
dec
mov
negb
mov
fdivrs
es
movsb
add
add
dec
imul
les
xor
jmp
fwait
dec
and
incb
lea
or
add
fbstp
add
jns
add
add
sbb
clc
icebp
fsubl
add
insb
lods
add
cmc
pop
js
test
adc
jmp
add
push
repz
fldl
add
addb
add
xchg
das
mov
add
add
imul
test
movsb
add
aaa
fsubrp
insl
mov
add
xor
call
bound
call
lods
fdivs
decl
and
incl
cmpsb
add
cmp
decl
mov
xor
push
dec
dec
adc
jmp
sbb
add
adc
ljmp
ret
add
add
stc
sub
out
adc
push
pop
sbb
rolb
fildll
repnz
push
add
adc
add
dec
pop
pop
add
decl
sbb
out
dec
mov
add
insl
lcall
adc
fucompp
scas
fcoms
sbb
mov
add
add
add
cltd
loopne
int
add
dec
mov
and
or
and
loop
bound
jmp
add
lcall
add
cmp
pop
jno
ljmp
xchg
addl
out
clc
sti
mov
out
mov
dec
insl
xchg
jnp
into
repnz
cmc
pop
in
add
ljmp
add
movl
sti
sub
add
add
repnz
add
sub
push
add
add
nop
add
mov
hlt
repz
mov
dec
roll
fnstenv
add
jae
pushl
lods
test
test
add
repz
les
rolb
out
or
test
add
add
enter
add
pushf
push
dec
mov
push
pushf
je
sub
add
add
xchg
mov
movsl
add
add
add
cmp
jno
call
mov
adc
add
cmc
and
out
fidivrs
nop
push
add
cli
fists
add
or
in
push
add
mov
add
dec
cmp
iret
imull
adc
inc
add
jle
push
xchg
cmp
mov
aad
sahf
inc
add
mov
shl
adc
fsubr
movsl
add
fstp
rolb
outsl
sub
add
lods
jl
add
fiadds
add
lcall
mov
jmp
add
push
add
stos
popa
add
mov
addb
xchg
and
ljmp
and
leave
lock
or
add
cwtl
cmc
in
out
xchg
inc
add
outsl
xor
lcall
add
movsb
add
add
mov
mov
cs
jne
lock
jmp
test
inc
add
mov
add
pop
in
pop
sub
add
addl
add
add
jmp
xchg
mov
add
out
mov
add
dec
mov
shll
roll
xor
inc
add
lea
or
add
mov
push
lcall
add
stc
fisttps
mov
xor
out
push
add
or
incl
ret
add
add
add
jmp
add
fstps
mov
das
push
add
add
rcrl
movsb
add
push
add
outsb
jmp
add
punpckhwd
mov
lahf
out
push
sbb
push
adc
lcall
pusha
add
cmp
add
add
scas
push
add
xchg
je
add
cmpsl
add
enter
rorl
fidivrs
add
add
adc
pop
xor
ret
adc
incl
add
mov
in
leave
mov
in
push
add
int
fcoml
out
adc
jmp
add
dec
aad
add
mov
jle
addr16
mov
rorl
pop
add
mov
sti
fsts
xchg
out
sub
call
icebp
movb
add
add
gs
data16
jmp
and
in
add
push
add
std
mov
add
into
clc
jne
je
int3
dec
in
sub
add
mov
mov
js
add
movsb
add
mov
add
sub
add
pushl
iret
mov
fcoml
stc
mov
xor
add
daa
add
lcall
cmp
cmpsb
add
inc
add
add
mov
add
in
pop
sub
add
call
sub
add
hlt
loop
popa
add
pop
sbb
add
xor
ljmp
inc
add
lahf
insb
repz
rolb
push
scas
inc
add
out
mov
stos
mov
add
int
sbb
test
mov
loopne
loopne
testl
xor
call
add
dec
add
mov
fsts
call
pushl
add
sub
xchg
cwtl
test
mov
add
add
pushl
adc
aas
cmpsb
add
mov
and
pop
ja
add
ljmp
fisttps
int3
mov
xchg
adc
add
push
xchg
pop
shl
add
test
push
popf
shlb
jmp
add
js
test
mov
inc
add
stos
addb
pop
stos
cs
add
ljmp
jmp
add
ljmp
into
fstl
add
add
mov
rolb
pusha
add
adc
ljmp
insl
xchg
mov
mov
fwait
jb
call
loop
mov
add
loop
outsb
push
ljmp
pop
ds
sahf
loop
test
add
fs
jmp
xor
rorl
pop
addl
or
add
push
imul
sbb
add
add
enter
int
sahf
add
addb
push
xor
call
add
dec
sti
and
xor
lcall
shlb
add
add
addb
notl
fnstcw
add
xor
jmp
add
lret
cwtl
adc
int
mov
add
jmp
jmp
sti
jge
mov
sub
add
add
jae
call
fidivl
add
push
sub
push
sbb
imul
enter
lock
ljmp
mov
mov
roll
repnz
add
jnp
add
ret
add
add
mov
daa
add
add
lods
pop
mov
push
add
insb
inc
add
fldcw
add
loop
inc
add
mov
add
xor
or
inc
add
jmp
add
add
mov
sbb
decl
xchg
pop
add
nop
pop
rcll
add
xor
dec
xor
jmp
int
add
cwtl
push
mov
mov
push
push
ja
lcall
cmp
loop
int
jg
mov
adc
ljmp
add
call
enter
dec
or
jecxz
insl
xchg
aad
idivl
fcmovbe
out
mov
or
adc
pushl
inc
add
xchg
les
sbb
mov
add
mov
push
add
push
push
and
cmp
xchg
jl
add
call
add
pop
xchg
test
rcll
add
ja
and
call
fmuls
add
mov
add
add
incb
call
test
add
shl
add
add
cmp
add
xchg
stos
aad
add
les
hlt
dec
and
decl
add
movb
mov
fisubrl
movsl
add
add
jns
pop
aaa
adc
pushl
pushl
add
cmp
fldt
add
push
add
mov
call
call
pushl
add
dec
inc
add
jnp
pop
cmp
add
inc
add
mov
add
movsb
add
mov
cwtl
push
mov
lahf
cs
add
inc
add
sub
add
mov
or
add
xchg
add
inc
add
mov
lcall
insb
xor
decl
jmp
add
pop
jmp
cli
inc
add
xchg
lock
push
or
add
add
movl
cltd
testl
pop
addl
hlt
rcll
jmp
add
jl
add
add
cmp
dec
stos
cmp
pop
clc
mov
fstpl
test
cmp
sbb
lods
push
or
add
inc
add
xor
sahf
pop
xchg
xor
pop
imul
add
sbb
inc
add
xchg
pop
jp
lds
cmp
int
jp
add
jp
add
sti
insl
mov
enter
xchg
mov
add
add
decl
inc
add
decl
aad
mov
adc
lcall
add
dec
xchg
push
add
inc
add
cmp
inc
add
jmp
add
dec
pop
sbb
movl
xor
decl
add
add
cli
enter
and
inc
add
cmp
popf
sub
add
lods
push
dec
out
insb
fdivrs
and
incl
dec
movsl
add
add
test
test
pop
sahf
int3
cmpsl
add
add
gs
add
inc
add
stc
aad
shl
in
mov
xchg
inc
add
adc
lcall
stc
or
incl
in
push
add
mov
sahf
sti
inc
add
adc
ljmp
push
mov
add
add
mov
jl
add
fistpl
jle
out
lcall
add
add
roll
push
add
pusha
add
sub
adc
incl
add
das
cltd
add
add
or
je
push
and
les
pop
add
add
fldcw
int3
sub
add
in
push
add
inc
add
cmp
add
ds
inc
add
outsb
add
xchg
pop
mov
add
sub
mov
add
inc
add
add
std
pop
test
sbb
call
add
mov
cld
jne
jecxz
sbb
bound
decl
mov
xchg
popf
in
lds
xchg
push
popf
pop
mov
xor
mov
xchg
cmc
mov
add
std
int3
ss
das
inc
add
add
add
call
jmp
add
and
call
decl
lahf
rcll
add
add
mov
inc
add
mov
imul
es
repnz
out
jb
incl
push
call
add
mov
les
test
push
add
jnp
addb
add
add
add
dec
or
inc
add
in
adc
xor
jmp
add
movsb
add
mov
xor
mov
add
cmp
xchg
out
mov
add
rolb
mov
lods
in
fisubrs
inc
add
add
mov
js
mov
sar
xor
decl
add
aad
add
add
in
outsb
inc
add
and
and
mov
sbb
fdivrs
pop
mov
add
push
add
jl
rol
add
add
add
call
dec
imul
push
add
ret
add
add
cmc
js
dec
mov
xchg
mov
add
jp
scas
push
in
mov
mov
mov
sub
cmp
add
data16
jns
add
cmp
lock
sub
decl
std
sbb
arpl
push
pop
mov
add
decl
sbb
add
add
daa
add
call
fisubl
add
jge
addl
arpl
call
add
bound
lcall
xchg
mov
insl
lcall
mov
jno
jmp
cmp
add
cmp
add
add
and
ljmp
pop
cmp
jne
les
pushf
mov
or
add
popa
add
sbb
add
incl
fmuls
inc
add
rolb
int
les
imul
jmp
jl
rolb
jne
push
add
data16
adc
xchg
addb
fidivs
decl
dec
pop
sti
lret
fildl
call
fistpll
lea
mov
add
ds
add
xchg
fisttpll
dec
xchg
xor
decl
add
pop
sbb
jge
add
lods
xlat
inc
add
sbb
aas
aad
sahf
roll
add
ret
add
sbb
jnp
icebp
pop
stos
mov
add
cmp
incl
dec
hlt
addl
mov
in
xor
incl
add
cmp
jecxz
arpl
pushl
int3
jp
cmp
add
push
add
jmp
xor
jmp
cli
lret
shlb
add
ja
ffreep
add
xlat
std
xchg
mov
jb
call
jg
push
add
clc
frstor
add
pop
decl
xchg
lods
add
jo
lcall
mov
adc
cli
mov
loope
inc
add
cmpsb
add
xor
inc
add
add
cmpsl
add
mov
bound
decl
fdivl
add
lahf
repz
sbb
add
push
xor
call
rolb
dec
cmp
lods
jbe
add
decl
jbe
mov
mov
sbb
pop
sbb
adc
jmp
decl
movb
cmc
out
mov
add
in
je
add
add
lcall
je
scas
jmp
sbb
fnstcw
mov
lods
lret
jb
call
mov
add
push
xor
jmp
pop
dec
enter
lds
enter
rcrb
addl
add
dec
jp
mul
add
add
add
add
int3
loop
adc
ljmp
add
add
xchg
movsb
add
out
mov
add
shlb
add
mov
cmpsb
add
add
push
mov
ja
xchg
mov
out
pushf
mov
aam
add
mov
loop
mov
jnp
add
fimuls
add
ljmp
aas
lods
jo
stc
outsb
lahf
push
pop
inc
add
add
pop
pop
adc
aas
lods
mov
pop
adc
lcall
pop
sbb
add
mull
dec
roll
push
jp
pop
adc
js
add
call
add
insb
stos
push
mov
lcall
push
sub
sub
int
and
lcall
cmpsl
add
cmp
mov
pop
es
add
dec
mov
fistl
add
in
mov
mov
add
js
pop
jg
inc
add
je
sbb
mov
pushl
sub
jno
mov
rorl
add
aaa
sbb
xchg
add
loop
test
fldt
daa
add
push
add
cmp
sub
add
and
pushl
call
adc
jmp
mov
add
add
jg
add
pop
out
dec
xchg
pusha
add
push
mov
fistpl
mov
jno
decl
add
addl
out
or
jmp
in
and
pushl
ljmp
bswap
in
mov
pusha
add
movb
mov
jg
sbb
jle
cmp
incl
mov
scas
push
mov
jmp
sbb
add
add
pushl
lcall
scas
xlat
outsl
test
in
xchg
out
add
push
add
decl
add
imul
mov
jmp
add
flds
pushl
add
sub
stos
cmp
adc
call
pop
mov
add
dec
aam
jne
enter
cmp
mov
add
adc
incl
jmp
pushl
mov
out
int
pushf
or
out
inc
add
add
mov
add
add
and
pop
fsubr
push
mov
lea
add
add
add
adc
mov
add
cmpsb
add
addb
mov
mov
loopne
sub
nop
jbe
movsb
add
mov
negl
lock
cmp
or
add
dec
jge
add
divps
add
call
packssdw
add
movb
test
lcall
incl
sbb
jecxz
inc
add
sub
jmp
add
lahf
mov
pop
das
pop
mov
loope
sub
stos
and
jne
bswap
std
fisttpl
arpl
decl
add
push
add
stc
inc
add
test
cmp
add
mov
or
add
push
aas
sti
cltd
loopne
jg
jmp
cmc
data16
add
xchg
aam
adc
decl
add
dec
pop
fiadds
ret
add
ds
add
popa
add
ljmp
icebp
gs
addb
jbe
ss
cmp
add
incl
add
add
sbb
add
add
add
lcall
sahf
pop
movsl
add
mov
ljmp
ljmp
add
add
push
out
stos
lds
movsb
add
add
rcrb
push
add
add
jmp
inc
add
lods
sub
jno
lcall
pop
mov
jmp
jmp
add
pop
fstpt
bound
ljmp
add
loopne
jne
add
inc
add
jp
push
int3
out
push
test
pop
mov
add
int
add
ljmp
jp
add
fwait
jns
pusha
add
loopne
mov
add
and
mov
fbld
add
mov
pop
xchg
out
daa
add
stos
inc
add
enter
jmp
add
mov
leave
and
lcall
je
add
add
insb
mov
test
add
add
dec
fcom
popa
add
sbb
les
cld
pop
cld
loop
xor
decl
sub
aaa
rcrl
in
jp
neg
pop
ret
add
add
and
fadds
fstpt
xchg
decb
jae
ljmp
and
aaa
or
jnp
inc
add
add
in
call
add
movaps
into
ljmp
add
add
lock
hlt
inc
add
dec
mov
mov
popf
cmpsb
add
fisttpll
add
adc
add
add
adc
jmp
add
pop
lods
jnp
int
jmp
jmp
add
add
jmp
add
dec
push
addr16
push
add
stos
push
add
outsb
push
ljmp
push
popa
add
sarl
add
add
add
add
add
in
push
add
add
jmp
cmp
jb
call
add
adc
inc
add
dec
loop
cltd
dec
mov
add
leave
sbb
test
xacquire
clc
stos
xchg
inc
add
roll
lcall
sbb
movl
movsl
add
cmpsl
add
xor
jnp
popf
jecxz
movb
add
rol
add
decl
and
call
cmp
add
cltd
sub
mov
add
jp
mov
add
cmp
add
lea
jmp
push
add
or
inc
add
iret
cmpsl
add
add
loope
lahf
cld
fcmovu
sbb
add
sub
or
outsl
in
xchg
add
ffree
add
ret
add
add
xor
push
mov
flds
lds
jle
dec
pop
dec
icebp
cmp
in
push
add
mov
sub
add
inc
add
mov
out
push
sbb
add
loope
dec
push
aam
adc
decl
nop
pop
rolb
flds
xor
call
add
and
call
jge
outsb
xor
xor
call
pop
mov
out
aas
pop
jo
mov
in
xor
pushl
inc
add
add
add
add
xchg
cld
pushf
or
add
jge
jmp
stc
or
addl
add
push
test
mov
sbb
stos
mov
jb
pushl
pushl
into
frstor
outsb
sbb
fdivs
add
call
xchg
outsb
xchg
inc
add
mov
add
scas
ljmp
jb
jmp
ror
or
lcall
jmp
pop
dec
sub
add
add
add
mov
pop
movsb
add
mov
adc
jmp
add
pop
lds
cmp
sub
add
call
sbb
cld
lods
ret
aas
hlt
or
add
dec
and
ljmp
cs
dec
in
xor
cltd
scas
mov
decl
loopne
mov
bound
pushl
add
xchg
in
in
sbb
shrl
sub
and
add
jg
adc
add
sbb
add
adc
add
cwtl
arpl
lcall
inc
add
addl
in
ficomps
xlat
dec
cld
lea
add
xchg
inc
add
nopl
test
add
mov
jl
add
js
loop
xor
ljmp
push
add
icebp
and
gs
aas
cli
js
ret
add
mov
mov
xor
jns
arpl
cmp
test
add
leave
in
aas
ljmp
add
dec
add
je
cltd
cmc
pop
cmp
adc
call
add
stos
xchg
inc
add
and
call
lods
lea
add
add
leave
std
and
mov
clc
mov
cmp
add
stos
hlt
lret
dec
mov
sbb
push
inc
add
cwtl
cs
add
inc
add
add
inc
add
xchg
pop
mov
out
adc
call
cmp
roll
add
stc
ds
mov
imul
mov
pop
mov
addl
add
mov
mov
cs
jo
sti
cmp
add
pop
add
push
mov
and
call
add
outsb
cwtl
push
add
mov
add
mov
movl
addl
pop
addl
popf
into
add
jge
or
sub
repz
bound
incl
add
pop
mov
int
popa
add
mov
rolb
add
roll
cmp
add
xchg
mov
add
push
add
dec
aad
fbstp
lcall
add
add
jbe
mov
sbb
add
add
jmp
rolb
add
add
jmp
add
add
cmp
add
dec
add
lcall
je
and
ljmp
mov
scas
clc
xchg
mov
add
xor
jp
add
add
jmp
jae
call
add
dec
ret
nop
mov
add
jl
cmp
aaa
ss
je
pop
jne
fmull
push
call
and
movl
add
pop
mov
add
ret
add
add
mov
or
sub
loope
or
add
ret
add
jg
test
add
jmp
add
outsl
add
incl
add
ds
sub
add
xchg
repz
insb
adc
cwtl
sub
mov
sub
pop
add
out
into
sub
cmp
outsl
cs
or
in
sbb
popf
lods
xlat
mov
adc
jmp
add
lods
sbb
in
add
jmp
and
incl
into
jo
fdiv
shlb
xor
jno
pushl
adc
jmp
stos
insb
test
add
jg
add
int
jp
add
adc
call
fnstenv
addl
and
add
or
rolb
add
jmp
add
outsb
lods
leave
add
xlat
bound
decl
add
jmp
aas
push
add
cmp
add
pushl
call
test
add
add
jmp
or
pop
leave
and
call
ljmp
inc
add
add
incl
add
mov
arpl
jmp
add
mov
movb
das
imul
fsubp
add
lcall
add
movl
pushl
add
mov
adc
jle
sbb
inc
add
and
jmp
addl
pop
mov
or
push
js
add
out
fistps
inc
add
clc
cli
cmpsl
add
out
mov
adc
rolb
add
add
pushl
add
add
add
add
push
add
je
mov
movl
pop
mov
sbb
add
inc
add
add
inc
add
nop
sub
add
add
sub
outsl
dec
cmc
jbe
add
mov
add
jmp
jno
incl
add
loopne
mov
cld
rol
add
add
ljmp
stc
pop
sub
add
fnstsw
mov
add
cmp
and
aas
shrb
add
and
ljmp
add
jae
jnp
xchg
add
add
and
dec
xor
pushl
stos
push
mull
add
add
mov
cmp
add
loop
out
pop
inc
add
mov
add
mov
jo
pushl
incl
add
lret
add
or
push
mov
add
les
popf
or
mov
dec
xchg
icebp
dec
pop
cmpsl
add
sahf
mov
add
and
shrb
add
fstpt
add
les
movb
add
add
add
push
add
insl
pop
arpl
lcall
mov
add
js
in
push
add
in
push
add
mov
mov
push
cwtl
or
lcall
std
jmp
add
xchg
fwait
cmc
and
jmp
incl
cmp
out
xlat
cmc
xor
push
lods
bound
call
rolb
push
add
adc
jmp
add
add
decl
sbb
lds
stos
ja
xor
lcall
adc
inc
add
add
insl
jb
pushl
lcall
xchg
sti
lea
decl
int
add
call
inc
add
sbb
jb
dec
rolb
lds
xor
add
push
jl
push
jle
addb
add
add
add
addl
mov
adc
jne
in
mov
add
popa
add
data16
add
add
cwtl
sub
add
add
clc
mov
test
push
iret
push
add
jmp
adc
pop
cltd
rolb
pop
mov
add
add
roll
aaa
pop
add
jns
data16
or
decl
add
call
cmp
cli
pop
out
adc
jmp
jns
push
lahf
sbb
xor
cmp
pushl
push
pop
push
add
rcr
in
mov
add
fsubs
aas
xchg
push
add
jle
test
sub
adc
ljmp
pop
movb
test
cwtl
dec
sar
aaa
or
lahf
in
adc
out
ds
mov
jnp
add
add
add
negl
sahf
iret
add
lcall
add
in
out
std
leave
xchg
jo
lcall
mov
movsb
add
in
popa
add
mov
movsb
add
add
fldenv
add
pop
sahf
out
cmpsl
add
pushl
call
add
scas
into
pusha
add
hlt
aaa
movsl
add
add
add
dec
das
push
add
out
jecxz
and
inc
add
add
scas
dec
fadds
add
add
mov
inc
add
scas
sti
out
add
call
add
insb
cmp
add
ret
xchg
pop
sub
fstpl
add
test
jmp
mov
cmp
lds
xor
call
jmp
pop
and
push
out
mov
addl
add
cmpsl
add
mov
cmpsb
add
mov
add
push
dec
cltd
push
add
cmp
jo
cmp
ljmp
adc
decl
fistpl
sbb
test
and
ljmp
or
addb
add
push
sbb
pop
inc
add
add
xchg
jno
ljmp
out
addl
outsl
mov
add
and
lcall
add
dec
mov
cmp
addb
add
ds
out
jae
dec
jp
lahf
je
dec
and
decl
jg
add
add
push
inc
add
add
mov
call
jge
add
adc
ljmp
add
and
incl
mov
xchg
pop
repz
mov
add
ret
add
add
call
imul
sub
add
les
push
add
rolb
add
cmpsb
add
push
pop
pop
add
sub
pop
icebp
sbb
xchg
into
addb
aaa
push
inc
add
loopne
iret
bnd
add
jp
add
mov
cmp
lds
pop
insl
inc
add
add
popa
add
stc
add
call
fldcw
add
cs
cmp
add
lcall
add
lcall
and
fnsave
pop
sub
imul
add
pop
mov
xchg
dec
mov
add
add
lcall
dec
cmpsb
add
add
jbe
je
shr
fxch
cmp
ret
add
add
imul
add
inc
add
loope
jo
call
inc
add
fbstp
add
push
add
repz
aaa
fcom
adc
add
jns
sub
mov
ret
mov
jb
fcmove
dec
inc
add
and
stos
push
pop
addl
add
inc
add
jns
std
test
mov
xchg
push
push
xchg
out
pop
add
add
dec
test
cmp
add
mov
imul
add
jae
pushl
add
ss
fwait
stos
mov
add
add
jmp
insl
adc
push
cmp
xchg
or
lds
addb
popf
pop
pushf
pop
inc
add
lods
leave
nop
imul
mov
adc
push
in
jecxz
jg
mov
arpl
ljmp
push
add
inc
add
mov
push
add
mov
add
xor
ljmp
ds
lock
push
xchg
hlt
pop
mov
clc
inc
add
int
add
xor
incl
add
scas
popl
lret
cs
adc
jmp
icebp
mov
add
sahf
sub
sahf
sbb
popf
and
jmp
add
adc
decl
data16
dec
and
std
mov
movsl
add
add
and
jmp
add
adc
push
inc
add
cld
leave
ror
mov
notl
xchg
movsb
add
les
sbb
in
mov
mov
hlt
xor
add
add
mov
jns
ss
out
stos
jns
mov
push
or
add
insl
mov
add
into
addl
add
stos
mov
daa
add
add
xchg
adc
fcomp
flds
decl
sub
add
jg
add
inc
add
repz
add
mov
add
addl
push
cvtdq2ps
sbb
mov
sti
movb
pop
stos
inc
add
xchg
mov
or
pushf
xchg
dec
mov
add
decl
add
lcall
mov
jl
or
inc
add
mov
jge
add
sub
ljmp
add
insb
in
cmp
out
testl
mov
add
rcr
sti
les
out
cmp
jmp
add
mov
xchg
cmp
add
add
jb
lcall
push
mov
add
jmp
add
das
jbe
lret
add
xchg
imul
and
call
adc
pushl
add
ss
scas
mov
mov
mov
xchg
sub
add
mov
les
push
add
sub
add
loope
fwait
js
add
fimull
dec
adc
call
addl
add
into
and
ljmp
add
pop
popf
out
cmp
add
fidivrl
jp
jmp
clc
test
mov
sub
or
add
cmp
std
mov
sub
adc
mov
mov
and
mov
add
add
enter
into
lret
test
xor
ds
daa
add
add
inc
add
jns
arpl
jmp
add
aam
pop
or
add
add
push
insb
out
insb
repz
mov
addb
mov
cmp
pushl
push
jbe
jne
out
shr
repnz
ret
add
int3
cmp
mov
adc
lcall
mov
inc
add
loopne
cli
add
jle
repz
ljmp
add
in
mov
sarl
in
add
or
jne
push
add
mov
pop
sub
add
addl
sub
scas
ljmp
add
fistpl
add
jp
add
cwtl
add
ljmp
or
cmp
sbb
jmp
add
scas
popf
sbb
add
add
pop
pop
push
mov
add
jmp
mov
mov
lret
inc
add
dec
cld
lea
cmp
repz
incl
nop
enter
pushf
cwtl
outsl
ljmp
add
xor
jmp
ljmp
push
pop
add
add
sarl
in
xchg
ret
fucom
add
iret
cmovne
data16
push
add
or
bound
push
outsb
loopne
adc
pushl
pop
sub
dec
xchg
insb
daa
add
sub
add
rorl
add
add
mov
aas
sub
add
add
test
xchg
pop
int3
or
inc
add
add
xchg
fwait
lahf
insb
or
and
jl
add
movl
push
add
sub
icebp
adc
lcall
mov
add
ja
xchg
mov
add
or
push
iret
addl
aaa
jns
add
pop
jns
aas
negl
add
xchg
fstpl
mov
call
mov
outsb
cmp
add
adc
lcall
add
lret
or
movsb
add
add
push
add
jecxz
data16
jmp
add
enter
mov
add
add
add
bound
cmp
jg
lcall
iret
dec
mov
pop
sbb
cmp
cmp
enter
out
adc
ljmp
add
pop
lods
fsubl
mov
int3
xchg
cmc
sbb
inc
add
test
sahf
lods
mov
add
pop
scas
inc
add
mov
out
lds
mov
add
add
jmp
call
dec
fisttpl
mov
fcoms
loopne
mov
mov
add
mov
add
shrl
add
inc
add
dec
aad
add
fsubl
pop
cmc
das
cmp
aaa
sti
mov
dec
jmp
jp
add
ffree
add
int
jnp
add
xchg
outsl
mov
add
mov
add
in
cmc
gs
data16
enter
add
mov
add
lret
fsubr
sbb
mov
jmp
add
roll
cli
cmc
mov
and
jmp
add
xchg
push
jle
adc
add
cmp
mov
add
add
add
call
lea
call
add
add
lret
lods
icebp
jo
jmp
add
pop
or
mov
addb
add
js
jo
incl
into
cmpsl
add
add
add
sub
xor
inc
add
add
loopne
je
fmuls
inc
add
sub
inc
add
dec
mov
addl
mov
shl
add
in
mov
movl
idivl
test
lcall
cmp
loop
dec
add
incl
push
add
call
pop
pop
mov
cmpsb
add
sub
or
add
add
push
xor
add
inc
add
xchg
out
daa
add
mov
repnz
add
fimull
shrl
pop
add
add
add
repnz
xchg
movl
dec
mov
out
stos
xchg
leave
dec
test
add
adc
lds
mov
add
lds
jae
pushl
add
mov
incl
ljmp
add
lcall
cli
pop
mov
pushl
add
jnp
add
mov
testb
daa
add
sbb
fnsave
stc
call
in
scas
sub
sahf
pop
pop
aad
push
inc
add
sub
decl
ret
add
inc
add
add
add
addl
pushl
out
jae
incl
out
call
add
addl
add
push
xchg
jns
lret
sbb
add
lret
adc
ljmp
pop
sub
mov
add
add
mov
stc
cmp
add
add
fadd
add
fisubrs
push
mov
add
add
incl
mov
mov
add
add
or
xchg
and
mov
pop
pop
push
pushl
add
arpl
call
sub
and
jl
mov
pop
adc
add
jle
add
jmp
push
lods
cld
sub
xchg
aas
xor
mov
jge
add
loop
sbb
add
aas
mov
add
add
fwait
int
add
enter
jo
pushl
add
mov
lock
sub
repz
sti
sub
jno
dec
ret
add
mov
add
add
and
mov
push
and
pushl
call
addl
inc
add
scas
imul
sbb
add
cmpsb
add
push
sub
add
cmp
dec
lds
daa
add
insl
cmp
add
int
mov
enter
add
mov
add
sub
icebp
dec
add
cmp
lcall
pop
add
rolb
xchg
jle
leave
add
add
rolb
add
pop
xlat
fdivrs
add
decl
out
addb
sahf
sbb
add
pushf
sahf
movl
call
sub
add
call
and
pop
xchg
add
add
mov
scas
dec
add
out
lahf
das
int3
sysret
add
cld
je
add
pop
addl
sbb
add
roll
addb
add
scas
rcrb
add
fs
add
jmp
add
add
les
in
and
add
add
incl
ficompl
add
mov
push
add
out
cmc
mov
add
ljmp
mov
mov
and
mov
shll
add
mov
add
rolb
call
test
add
leave
rcrb
mov
fwait
add
jge
pop
add
incl
add
jp
add
lods
fwait
into
test
sbb
add
shrl
xchg
and
jmp
add
incl
cmp
add
lds
cmpsl
add
je
add
repnz
or
xchg
cli
cld
inc
add
addl
imull
leave
out
xor
lcall
add
or
add
push
add
lcall
mov
lds
nop
imul
add
enter
add
outsl
stos
in
xor
mov
push
inc
add
int
add
inc
add
pop
jns
add
push
pop
int
out
pop
cmpsb
add
dec
sub
cli
push
mov
sti
clc
repnz
add
call
add
lret
add
decl
movb
add
fs
sbb
xchg
lods
jae
call
jmp
add
dec
and
push
nop
jp
imul
iret
addl
incl
inc
add
add
in
push
pop
repz
movb
cmovge
sbb
jg
xor
decl
inc
add
cltd
ret
add
add
jl
add
sbb
notb
add
in
dec
push
lea
add
mov
push
jle
mov
mov
add
xchg
mov
incl
fistpl
jb
jge
scas
push
addb
add
loope
filds
pop
lret
and
add
roll
add
jno
push
xchg
repz
or
mov
sbb
ljmp
lret
jno
decl
iret
mov
add
ss
pop
add
lock
ja
add
adc
ljmp
dec
int
aaa
sti
pop
imul
add
push
mov
add
push
cltd
inc
add
cmp
add
xor
lcall
sti
roll
pop
inc
add
add
nop
add
jmp
lcall
js
mov
add
mov
loopne
or
add
lcall
add
add
lcall
je
sub
add
add
jo
jmp
add
int
js
inc
add
mov
je
add
mov
sbb
mov
and
jge
call
push
xchg
movsb
add
out
sbb
cmp
add
cmp
add
add
jae
ljmp
ljmp
add
add
mov
dec
and
cld
pop
cmp
test
xchg
lock
dec
aaa
or
mov
in
xlat
and
call
add
sub
mov
inc
add
incb
pushl
call
add
aad
or
outsl
roll
add
add
decl
add
pushl
adc
incl
leave
int3
movsb
add
pushl
pop
into
cmp
decl
add
decl
ret
add
inc
add
push
add
add
decl
lds
dec
push
lock
sub
add
add
jp
push
add
ljmp
add
cmp
aad
adc
decl
add
cmpsb
add
add
pop
jge
addb
sbb
in
adc
decl
aaa
dec
inc
add
call
les
repz
pushl
cmp
push
pop
test
xor
add
cmp
mov
loopne
ljmp
rolb
add
incl
mov
jne
cli
inc
add
pop
mov
xor
ljmp
out
adc
jmp
add
xchg
repz
jo
jmp
fidivrl
roll
add
add
inc
add
fbstp
fisubs
add
cs
add
add
xchg
xchg
rcll
sub
movl
rcrl
fimull
inc
add
mov
xor
push
pop
arpl
incl
sub
dec
and
incl
decl
rcrl
add
adc
stc
add
add
mov
sub
sbb
add
lds
sbb
lds
movsl
add
add
mov
xchg
out
push
adc
pop
pusha
add
out
int
add
add
iret
int3
xchg
imul
add
add
add
add
add
add
add
inc
add
sbb
add
push
fnsave
pop
jle
aad
add
inc
add
or
lcall
add
inc
add
add
fildl
add
push
add
mov
mov
dec
cwtl
add
push
cmp
dec
cmp
decl
add
enter
cmp
call
ljmp
adc
int
xor
cmp
add
mov
popa
add
aaa
cmpsb
add
add
ds
sub
pushl
or
add
mov
add
add
jge
pop
stc
inc
add
mov
mulb
push
add
sbb
shl
add
xchg
xchg
xchg
icebp
mov
push
add
bound
ljmp
add
add
lods
add
add
in
mov
xor
jo
call
out
je
fnsave
lcall
addl
sbb
or
add
incb
in
sbb
add
cwtl
mov
add
ja
add
add
or
loopne
cmpsl
add
add
dec
enter
outsb
xor
dec
out
jae
pushl
add
cmpsb
add
jecxz
addb
add
cmp
push
dec
je
mov
mov
add
loop
mov
in
push
add
lds
ret
add
mov
add
xor
call
shrb
push
add
roll
adc
sbb
adc
dec
cwtl
mov
sbb
add
add
add
rolb
add
out
mov
hlt
arpl
call
add
outsl
add
popf
add
mov
jb
cld
lea
aas
jne
mov
add
aas
mov
add
push
addl
lock
int
jnp
cltd
inc
add
add
add
loope
sbb
xchg
fsubrs
pushl
inc
add
in
add
call
mov
add
inc
add
mov
dec
add
addl
add
loopne
cmp
add
test
dec
mov
inc
add
xchg
ffree
add
add
sbb
out
movsl
add
ss
mov
mov
sub
add
push
and
jl
add
repnz
add
xchg
inc
add
or
and
lcall
add
lcall
mov
pushl
add
imul
add
mov
mov
cmp
test
cld
movsl
add
ds
mov
imul
push
jns
add
lcall
mov
jns
add
repz
add
push
add
add
cmp
lock
or
mov
jge
add
push
add
xchg
mov
mov
cmp
incl
add
xor
inc
add
pop
out
into
xchg
packuswb
lea
inc
add
aam
add
fiadds
stc
daa
add
decl
dec
cmpsl
add
add
insl
lods
dec
pushf
mov
add
xchg
mov
dec
mov
mov
outsl
pop
add
shlb
add
add
add
pushf
sti
and
incl
cmp
int
add
mov
loop
fwait
sub
add
inc
add
add
add
dec
xchg
aad
fsubrp
inc
add
ja
add
stc
test
sti
and
lcall
mov
add
enter
push
add
jb
incl
add
loopne
pop
push
add
or
sti
or
xchg
jne
add
call
aas
lcall
add
lret
add
inc
add
movsl
add
rolb
pushl
ret
in
das
sub
add
push
hlt
dec
popf
outsl
sbb
add
push
mov
and
call
mov
fwait
xor
icebp
pusha
add
stos
pop
add
add
jmp
pushl
jle
add
jb
decl
bound
cld
adc
dec
dec
jns
add
sbb
push
add
data16
in
mov
cmp
fwait
add
test
int3
jge
add
in
push
loopne
mov
add
xor
lcall
lock
add
in
add
add
addl
add
jnp
add
xor
decl
stc
test
add
jbe
mov
idivl
add
xchg
fcomi
test
mov
add
movsl
add
add
pop
or
add
push
loopne
in
and
fstpl
add
ljmp
popf
dec
inc
add
pusha
add
cld
nop
repz
jmp
jecxz
addl
icebp
pop
fiadds
add
jmp
mov
divb
notb
add
mov
xchg
in
lods
stos
insb
adc
jg
add
jle
jnp
scas
out
or
divl
add
data16
cmc
push
inc
add
adc
add
xor
ss
cmp
movsb
add
add
lea
jbe
mov
add
enter
mov
cmp
push
bound
pushl
add
test
push
rolb
fisubs
decl
jae
decl
fisubrl
in
push
add
imul
add
add
add
mov
mov
add
fisttps
dec
stos
int3
sbb
add
pushf
cmp
rolb
add
call
pop
sahf
into
lcall
push
add
test
dec
pushf
fisttpll
mov
add
lods
sbb
mov
daa
add
test
loope
scas
sub
jecxz
jb
call
push
test
mov
inc
add
js
add
add
add
ljmp
push
fcomps
xchg
enter
movsb
add
pushf
mov
add
add
xor
std
nop
insb
xchg
add
call
test
bound
fcmovne
pusha
add
dec
stos
insb
and
incl
add
add
or
add
out
cs
add
and
inc
add
cmpsl
add
jmp
add
imul
lahf
movsb
add
add
add
mov
pop
out
and
decl
pop
push
in
inc
add
mov
loop
inc
add
add
test
repz
add
in
jno
incl
add
mov
xchg
cmc
out
stc
shll
pop
dec
sub
add
int3
mov
arpl
ljmp
or
inc
add
fcmovu
int3
aas
std
pop
xor
jg
add
pop
jae
inc
add
xor
call
add
add
lods
addb
add
dec
nop
sbb
xor
incl
ljmp
xor
sub
sti
imul
inc
add
pop
repnz
add
and
decl
mov
ret
pop
add
push
les
pop
jne
add
fisubs
ljmp
popa
add
mov
add
dec
xchg
sbb
decl
add
ljmp
addb
pop
and
lods
cmovle
js
mov
add
stos
or
add
les
xor
jmp
ljmp
bound
lcall
dec
add
call
add
fldenv
add
pushl
jbe
sbb
push
add
sub
inc
add
xor
pushl
jbe
stos
mov
fwait
jne
push
add
inc
add
stc
lea
jg
add
mov
in
mov
inc
add
das
shll
incl
sbb
cli
aam
push
add
cmp
cmpsb
add
or
stos
lea
jae
jle
inc
add
addb
or
add
cmpsl
add
rcll
cmpsl
add
add
add
into
inc
add
add
add
in
cmp
bound
ljmp
daa
add
push
add
xchg
or
add
enter
adc
add
lcall
pop
cmpsl
add
add
aad
add
movl
mov
add
imul
insl
push
add
add
add
lds
scas
lea
add
push
ror
fadds
add
lds
dec
pop
lahf
mov
notb
fdivp
pusha
add
and
call
add
sti
je
sub
lods
fwait
push
add
dec
or
push
add
movb
push
add
jl
add
add
call
or
push
dec
jne
add
add
add
aaa
or
std
push
add
add
mov
pusha
add
lock
adc
call
cmpsl
add
add
lock
cmp
add
incl
add
dec
mov
jle
mov
out
daa
add
xchg
push
add
lcall
fisttps
clc
dec
mov
pop
xchg
inc
add
je
add
int3
cs
sbb
cli
repz
incb
or
je
popa
add
lcall
pusha
add
cltd
jne
add
daa
add
xor
ljmp
sysret
add
loope
inc
add
popf
dec
dec
scas
cmp
call
push
add
cmpsb
add
push
add
scas
xchg
pop
inc
add
add
sti
sub
daa
add
movl
add
add
add
pop
mov
pushl
add
incl
push
add
outsb
mov
repnz
jmp
add
sbb
pop
movsl
add
add
dec
scas
stc
pop
or
cmpsl
add
add
addl
inc
add
or
add
mov
dec
movl
add
xchg
outsb
or
das
rcrb
mov
sbb
dec
xchg
add
cmp
jnp
cmp
pop
loop
add
decl
add
adc
incl
add
add
leave
jno
incl
jmp
add
call
ja
add
out
and
push
xchg
fisttpll
lock
aaa
inc
add
fisttpll
addb
pop
jno
jmp
aaa
inc
add
xor
lcall
add
fcompl
push
data16
mov
jno
std
lds
mov
push
mov
dec
dec
ret
add
add
pop
jo
out
in
inc
add
push
lock
add
mov
addb
inc
add
push
outsb
and
stos
mov
add
add
clc
pop
lahf
jp
mov
xor
add
add
inc
add
addb
dec
adc
jge
add
add
xchg
addr16
add
mov
push
mov
mov
add
jmp
add
add
adc
incb
add
mov
add
addb
pop
scas
test
add
push
add
jp
add
in
add
fmuls
xchg
xchg
test
adc
lcall
les
cmpsl
add
jae
lcall
inc
add
mov
ds
test
xchg
push
adc
mov
sbb
adc
jmp
or
push
mov
add
xor
call
add
dec
mov
add
add
cld
mov
add
mov
decl
lcall
add
sbb
fsubs
add
mov
in
and
mov
dec
or
cltd
mov
testl
xor
jmp
jmp
inc
add
jle
movsl
add
decl
lea
imul
sub
add
push
inc
add
imul
out
pop
add
jno
pushl
jmp
decl
movsl
add
add
push
dec
fwait
push
xor
call
add
inc
add
add
inc
add
insl
and
lcall
jae
ljmp
loopne
out
popl
in
xor
decl
into
in
jl
add
ds
add
mov
add
add
call
ficompl
int3
sarb
xchg
movl
incl
addb
add
cltd
repnz
test
faddl
decl
add
jg
add
pop
daa
add
sub
add
add
add
xchg
xlat
lret
div
and
jp
jbe
in
mov
xchg
ja
rclb
add
jae
jmp
ljmp
addl
add
ja
loope
xchg
in
dec
cmpsl
add
add
sub
std
pop
jae
push
cld
lret
ret
in
mov
addl
fsubl
xchg
int3
jge
stos
in
sbb
enter
add
push
sub
add
push
or
xchg
pop
add
sub
add
pushl
cmp
call
lods
pop
leave
push
arpl
call
outsl
sbb
test
jne
je
xor
add
jmp
sar
roll
jp
add
add
xchg
add
lcall
insl
mov
add
mov
shl
mov
add
shlb
jmp
add
addl
daa
add
add
icebp
xchg
faddp
add
out
push
jmp
iret
addb
add
int3
ror
add
rcrb
mov
cmp
rolb
xchg
aas
aas
push
sarb
call
dec
push
into
push
add
pop
xor
incl
add
cmc
in
lods
pop
and
sti
mov
adc
jp
je
movb
inc
add
pusha
add
sbb
lahf
test
cmpsl
add
add
pushf
jns
jg
int3
hlt
test
sysret
add
incl
add
pop
adc
jmp
add
push
add
mov
add
and
ljmp
jns
adc
pushl
xchg
mov
add
add
repnz
and
call
jmp
add
dec
pop
pop
jg
sub
iret
or
mov
mov
minps
pushl
add
push
into
jecxz
gs
add
add
dec
fidivs
mov
add
or
add
test
test
sbb
ljmp
je
cmp
add
jl
or
jl
nop
rclb
cli
jmp
lcall
add
add
cmpsl
add
add
push
mov
add
nop
jge
add
mov
adc
inc
add
fwait
and
call
add
add
cmp
decl
data16
mov
mov
incl
call
add
movl
lahf
mov
pop
mov
dec
ja
add
and
jmp
roll
add
mov
rclb
jmp
add
add
and
lcall
sub
add
roll
mov
xchg
mov
add
cmp
arpl
ljmp
push
and
call
jns
or
add
sbb
lret
repz
inc
add
dec
add
xlat
insb
inc
add
or
add
xchg
or
xor
add
jnp
add
add
add
into
aad
add
and
call
cmp
cwtl
leave
cmp
push
jle
add
leave
push
sub
add
iret
mov
adc
ja
add
fxch
add
pushl
add
mov
add
std
pushf
testb
lcall
xchg
loopne
in
jbe
inc
add
rorl
stos
adc
add
inc
add
scas
je
mov
add
push
fsts
mov
gs
fwait
out
repz
mov
adc
jmp
add
xchg
and
lcall
add
add
lods
xchg
inc
add
ret
add
ljmp
add
pop
cwtl
cmpsb
add
add
add
outsb
dec
imul
cmp
and
out
add
cmp
ljmp
dec
cmpsb
add
add
into
fnstsw
add
mov
add
or
add
push
sbb
add
add
and
jp
add
loope
jae
dec
clc
dec
cmp
add
add
jmp
add
fidivs
add
aad
je
jae
inc
add
add
adc
pushl
push
push
outsl
jmp
jge
add
add
adc
call
add
add
add
pushf
jbe
mov
xchg
mov
ljmp
sub
sbb
call
add
mov
xchg
sbb
rorb
and
mov
test
push
add
mov
add
add
pop
mov
loope
pop
xlat
sub
outsb
adc
cmp
shrb
outsb
jnp
add
add
cmp
lcall
test
shl
hlt
loope
leave
fs
cmp
js
add
data16
aas
out
out
sub
pushl
or
jmp
mov
sbb
add
call
addl
fstpt
push
add
xor
mov
mov
push
add
dec
dec
lahf
or
add
xor
inc
add
into
xchg
jge
imul
add
call
jecxz
xor
lcall
xor
xchg
jno
cmp
add
addb
add
add
clc
or
outsb
pop
add
add
inc
add
ljmp
mov
imul
scas
sub
add
lcall
jmp
jge
add
cld
cli
add
jg
jecxz
stos
cwtl
dec
jle
mov
pop
add
xchg
stc
mov
add
call
add
jns
add
leave
fcoml
mov
pop
add
jmp
repnz
mov
add
push
insb
daa
add
add
call
add
add
add
incl
rolb
mov
stos
test
sub
ljmp
pop
dec
aam
out
jnp
mov
add
mov
add
add
lods
xchg
adc
and
std
or
call
mov
and
decl
xchg
clc
js
jo
jmp
add
decl
cld
or
add
arpl
incl
mov
shll
in
outsl
mov
add
inc
add
cli
addl
out
add
iret
daa
add
xchg
dec
movb
mov
add
out
in
mov
add
mov
sub
enter
cmpsb
add
adc
shlb
add
jbe
movsl
add
mov
cmp
add
jle
jnp
sub
push
icebp
fldt
add
add
add
out
daa
add
outsb
aam
add
lcall
and
loop
sub
add
jb
jmp
pop
out
lea
sub
xchg
daa
add
lcall
push
jmp
and
incl
add
push
dec
adc
lcall
ret
cmpsb
add
add
add
xchg
push
xor
xlat
or
out
movb
lahf
sub
mov
mov
push
add
mov
lret
imul
repnz
add
fucom
add
scas
loope
cmp
movsl
add
add
or
add
roll
pushl
decl
fnstsw
add
push
add
add
fiaddl
add
clc
push
add
jecxz
sub
mov
or
or
roll
cs
mov
add
arpl
call
xor
mov
add
cli
insb
cmpsl
add
pushl
inc
add
add
add
and
call
push
add
shlb
and
xchg
cltd
sub
add
jp
lock
rcrl
add
movsb
add
sub
arpl
dec
or
lods
imul
cmpsb
add
add
fildll
add
add
mov
lcall
mov
das
or
add
add
lea
out
insb
ficoms
add
xchg
addb
mov
add
add
mov
lds
addb
add
xchg
dec
or
add
in
push
add
shl
out
addb
add
push
fiaddl
jae
decl
addl
xchg
scas
mov
xor
pop
imul
add
add
add
add
adc
jmp
add
dec
lods
mov
or
xchg
jb
decl
out
mov
mov
fdivs
inc
add
jo
incl
mull
jmp
lcall
add
negb
mov
repnz
cmp
and
sub
stos
sub
repz
add
ljmp
scas
roll
jbe
push
add
mov
mov
roll
add
add
inc
add
pop
add
add
add
adc
popa
add
sub
add
fwait
add
decl
das
fwait
pusha
add
mov
add
popf
outsl
xchg
cmp
outsb
push
add
or
xor
adc
decl
add
incl
lds
cltd
test
sahf
minps
inc
add
fistpl
stos
shr
mov
mov
inc
add
test
and
std
scas
outsb
sub
mov
incl
add
pop
in
cmp
xor
decl
lret
ljmp
add
cmp
add
neg
sbb
js
roll
add
and
add
lods
push
add
enter
aas
clc
or
inc
add
sbb
mov
loop
pop
push
add
cld
and
call
add
decl
dec
ret
add
mov
add
sbb
dec
ret
test
add
lcall
add
je
add
stc
push
add
mov
mov
xchg
stc
and
out
jb
call
into
shrl
dec
sbb
add
xchg
imul
dec
cmpsb
add
add
pushl
add
fstpl
add
mov
xor
dec
mov
outsb
lcall
jns
test
inc
add
nopl
add
out
mov
jnp
adc
incl
add
lea
lcall
test
dec
pop
add
add
and
ljmp
scas
add
ficomps
rclb
add
insl
add
lcall
add
rolb
sbb
data16
add
mov
mov
add
mov
mov
test
or
cltd
push
popa
add
lds
mov
popa
add
cmp
out
pop
addl
inc
add
stos
xchg
ljmp
mov
pop
loopne
insb
add
inc
add
sub
mov
insl
or
add
cwtl
ljmp
cmp
pop
cmp
jmp
jg
sub
ljmp
add
out
xchg
out
mov
add
add
mov
mov
pop
scas
push
sbb
std
push
cmp
pushl
push
add
sbb
add
loopne
fstpl
add
push
ret
add
ret
add
xchg
out
loopne
add
ljmp
push
add
out
and
incl
add
loop
add
cmp
add
push
roll
roll
add
push
add
adc
pop
or
push
jbe
scas
push
add
dec
push
xchg
xchg
outsb
push
push
xchg
div
leave
shlb
jmp
inc
add
jnp
add
and
jnp
add
mov
dec
add
sub
fwait
lahf
and
dec
jno
call
add
pop
add
pop
stos
les
je
jns
nop
lea
popf
jnp
test
inc
add
movb
aaa
int
add
and
sub
add
dec
ss
pop
add
and
lcall
add
sbb
add
icebp
movsl
add
test
mov
inc
add
lcall
sbb
aas
add
sub
repnz
add
fstpl
cmp
pop
add
or
imul
addl
imull
out
fwait
rolb
popf
mov
or
fists
add
add
mov
add
fsubl
fldenv
jmp
sub
add
lahf
xor
ljmp
mov
mov
mov
jo
call
aad
pop
addl
sbb
aad
add
push
into
ficoml
xchg
lods
push
cli
push
sbb
sub
and
jmp
add
call
fdivrs
add
mov
lcall
xor
ljmp
add
outsl
jle
add
test
lods
jbe
cmp
fmull
int
add
add
int
add
add
lahf
cmp
add
add
add
add
xor
dec
sub
add
cmpsb
add
xor
ljmp
decl
jecxz
fstl
pop
add
pop
jo
jmp
add
daa
add
clc
xor
dec
hlt
insb
pop
dec
inc
add
xor
call
add
loope
xor
fiaddl
stc
movl
mov
cmpsb
add
add
dec
mov
sub
std
insl
sub
bound
call
mov
jge
add
decl
add
decl
inc
add
cmc
inc
add
lods
xor
pushl
jno
push
push
add
scas
pop
xor
decl
testl
add
mov
leave
cmp
std
fisubs
add
lahf
push
add
mov
jg
add
cmp
add
add
add
je
or
outsl
ret
fsubrs
xor
aas
sarb
fnstsw
cltd
sahf
fwait
cmp
add
mov
mov
std
sbb
in
mov
add
rolb
jmp
mov
pop
or
inc
add
test
mov
into
lock
or
adc
jmp
push
jl
push
add
rolb
outsb
jl
push
cmpsl
add
pop
out
sub
inc
add
add
jmp
add
add
jge
cld
ret
add
fwait
mov
sub
clc
add
xchg
inc
add
lcall
add
jae
aas
ds
jbe
add
fwait
cmpsb
add
add
xlat
dec
icebp
jmp
mov
mov
xor
aad
adc
decl
jo
js
mov
mov
push
xchg
test
add
test
int3
push
aas
jae
pushl
test
xor
ljmp
jg
idivb
add
inc
add
add
sub
repz
jno
call
inc
add
add
cmc
daa
add
add
dec
mov
pop
or
aas
add
int
sub
push
add
jb
cmp
mov
add
add
push
mov
jg
testl
outsb
cwtl
xor
add
add
and
ljmp
add
push
mov
mov
add
push
dec
insl
roll
scas
popa
add
xor
lcall
jp
sub
cs
add
incl
jmp
add
xchg
out
mov
add
popa
add
movb
nop
add
int
or
rolb
add
enter
sbb
shlb
add
sub
add
ret
in
mov
add
xor
push
mov
add
dec
pop
sub
add
add
sbb
add
jmp
mov
xor
decl
ljmp
cmp
shrb
in
mulb
pushl
add
xlat
mov
add
push
push
add
sbb
push
add
inc
add
lock
mov
cmpsl
add
add
jmp
cmp
into
inc
add
adc
cmp
ss
cli
pop
pop
lods
addb
lods
stos
push
add
xchg
lahf
push
iret
data16
add
imul
push
add
add
adc
or
add
inc
add
pop
add
or
xchg
mov
add
sbb
rorl
in
aas
pop
lds
outsb
or
hlt
cmp
mov
fildll
or
add
push
add
call
add
mov
xchg
mov
in
notl
add
push
sub
mov
add
lret
add
adc
ljmp
outsl
xchg
icebp
outsl
leave
jnp
add
bound
push
daa
add
mov
or
rcrl
add
cmp
push
add
scas
cmpsl
add
mov
dec
jns
es
or
add
adc
pushl
in
adc
call
notl
mov
mov
add
pop
mov
push
fistl
add
add
add
gs
out
in
lock
add
fcompl
add
roll
inc
add
test
adc
pushl
clc
adc
call
add
sub
roll
lods
xor
pushl
popa
add
incb
inc
add
add
mov
sub
call
cmp
add
and
jmp
add
inc
add
mov
arpl
jmp
add
sti
pop
cmp
and
ljmp
add
inc
add
mov
add
mov
cmpsl
add
lcall
dec
sbb
add
pop
nop
sbb
arpl
ljmp
add
sbb
add
cld
scas
or
add
adc
jmp
call
add
add
cmpsl
add
xor
incl
jge
je
cmp
addb
xchg
sbb
add
test
hlt
loop
or
mov
mov
add
pop
rolb
jg
add
or
jecxz
pushf
xor
jmp
inc
add
pushl
xor
bound
incl
es
popa
add
insl
les
mov
mov
mov
movsb
add
jmp
inc
add
xchg
mov
add
xchg
stos
addb
mov
add
ljmp
pop
add
jmp
imul
in
arpl
dec
jns
arpl
ljmp
lcall
scas
movsb
add
mov
lret
addr16
add
js
dec
push
aad
inc
add
jl
sbb
addl
cwtl
sti
cltd
and
jle
dec
scas
ret
add
add
fisubrs
sar
loop
push
add
xchg
nop
fcmovu
pop
in
in
stos
icebp
or
test
rcrl
movsb
add
pop
inc
add
movsb
add
push
add
mov
sahf
cmc
lret
ds
pop
dec
jl
inc
add
add
push
add
push
in
out
sub
add
decl
add
fadds
add
rolb
add
lret
addl
push
jbe
add
add
xchg
sub
add
lods
fwait
jp,pt
inc
add
dec
ret
sub
dec
fidivrs
in
jl
sub
add
xor
add
push
dec
outsb
negb
cld
mov
roll
add
test
cmp
add
push
pop
adc
decl
add
and
cmp
jp
add
jmp
add
lcall
cmpsl
add
add
push
loopne
fadds
add
cmpsb
add
aam
jb
call
xchg
push
cmp
add
mov
add
movl
in
push
add
sbb
lea
add
mov
mov
add
add
sbb
push
add
mov
add
xor
fsubrl
add
mov
roll
add
in
xchg
jnp
add
pop
fisttps
push
add
pop
das
cwtl
sbb
iret
sub
add
data16
loop
sub
adc
add
insl
out
std
push
ret
add
mov
sub
fdivrs
add
hlt
data16
add
aaa
mov
add
insb
addb
push
mov
pop
cmp
mov
cmp
add
fsubrs
jb
ljmp
push
add
push
imull
loop
mov
out
test
repnz
cmc
and
incl
add
fidivrl
fdivr
loopne
mov
dec
mov
inc
add
test
fs
push
rolb
add
sbb
add
mov
cmp
push
adc
jmp
add
add
push
loop
dec
imul
clc
js
pop
mov
add
inc
add
test
ss
add
ljmp
sub
push
repz
call
sbb
xchg
lcall
les
push
push
test
mov
add
roll
pushf
push
add
add
loop
xchg
ror
xchg
movsb
add
add
add
cwtl
and
mov
xor
and
sti
mov
sbb
jmp
mov
add
scas
lea
je
imul
mov
push
add
test
sub
faddl
jle
and
shlb
data16
add
outsb
cmc
xchg
and
jmp
inc
add
cmpsl
add
lds
push
addb
enter
test
cli
ds
add
or
mov
fisttpl
or
lret
or
dec
pop
cld
cmp
int
addb
add
and
incl
cmpsb
add
insb
mov
stos
xchg
decl
add
pushl
jmp
cmp
mov
sarb
shlb
mov
mov
xchg
pushf
jmp
add
jmp
das
push
je
add
gs
movsl
add
movsb
add
push
in
fistl
add
xchg
xor
mov
repz
scas
xchg
setb
mov
jmp
testb
outsl
roll
add
jle
add
mov
add
add
fimuls
and
jbe
lds
add
add
leave
test
mull
add
decl
add
lret
add
scas
insb
add
jns
add
dec
cmp
arpl
decl
mov
add
fwait
add
aas
pop
in
clc
push
mov
mov
mov
fwait
pop
insb
or
add
mov
cmp
pushf
aas
dec
pusha
add
pop
add
decl
push
xor
jns
add
fimull
add
movl
add
cmp
dec
pop
add
jns
add
mov
add
jg
pop
mov
adc
call
add
repz
cmpsb
add
mov
pop
add
rolb
mov
add
arpl
call
add
jne
add
add
fdivs
mov
sub
pop
and
cmpsb
add
add
jae
cmp
ja
imul
fwait
pop
lret
add
jnp
add
inc
add
jne
inc
add
addr16
pushf
or
add
jmp
ljmp
mov
mov
add
add
loop
sbb
rolb
inc
add
notl
push
xor
fcoms
add
jae
call
inc
add
adc
incl
add
nop
cmpsb
add
push
pop
push
add
mov
jno
lcall
sti
pushf
pop
dec
push
stos
loop
dec
rolb
or
pop
roll
mov
sub
add
test
jge
inc
add
jmp
sub
push
add
adc
decl
shrb
cmp
add
add
add
incl
add
decl
add
call
mov
nop
jg
je
pop
leave
mov
ljmp
mov
jmp
lea
mov
pushl
mov
add
pop
or
dec
repz
and
add
mov
mov
push
dec
shll
jmp
jge
mov
incl
add
mov
add
add
add
bound
incl
enter
daa
add
flds
add
adc
in
movl
testl
jmp
add
inc
add
sub
cmp
rclb
fdiv
sbb
addl
jg
sbb
add
mov
fsubr
sub
inc
add
jmp
add
lcall
add
in
into
repz
add
and
lcall
sti
imul
add
fdiv
les
or
std
or
xor
pushl
push
pop
addb
mov
add
add
rcl
imul
std
bound
incl
incl
mov
add
mov
add
and
add
loopne
xchg
sbb
pop
repz
stos
ficompl
or
xchg
les
or
add
lahf
das
cs
sub
add
adc
inc
add
ja
int3
or
sarb
sub
and
or
and
pushl
sti
ss
in
adc
lcall
add
loop
pop
jp
lods
inc
add
leave
insb
mov
sahf
arpl
lcall
jg
add
cli
pushf
push
mov
push
clc
add
add
test
add
decl
aaa
sbb
xchg
rorb
out
and
lcall
repnz
pop
arpl
decl
or
fisubl
cld
enter
sub
out
mov
test
mov
push
jp
mov
and
inc
add
ljmp
dec
jnp
push
add
push
iret
xor
mov
adc
ljmp
or
add
add
iret
movsb
add
in
sub
dec
out
insl
movsl
add
mov
mov
loopne
jge
add
pop
repz
mov
inc
add
or
add
dec
mov
loope
iret
mov
add
rcrl
jg
add
call
scas
add
repz
dec
pop
lds
les
cmp
mov
sub
pop
insb
cmp
or
call
add
add
or
hlt
sub
outsl
iret
lds
add
add
sub
mov
aaa
push
scas
pop
out
mov
add
rcr
push
add
xor
fstps
push
or
add
mov
sub
add
add
add
add
shll
add
stos
fldcw
incl
add
lcall
sub
imul
inc
add
dec
mov
add
pop
enter
push
add
or
mov
mov
into
fdivs
add
mov
sbb
int3
add
adc
incl
add
add
pushl
add
cmc
or
add
jb
decl
fdivr
inc
add
fildl
call
sbb
sub
add
pushl
dec
imul
imul
addb
lcall
or
add
add
fsubr
adc
lock
dec
test
push
add
icebp
push
add
mov
add
mov
mov
add
pop
add
xor
clc
fidivrl
cld
and
call
adc
dec
lret
add
leave
pop
stos
daa
add
ljmp
xchg
stos
push
add
xchg
dec
or
add
loope
xor
ljmp
adc
jmp
add
leave
fdiv
popa
add
sarb
ja
add
jecxz
scas
std
loopne
and
lcall
add
add
addb
pop
jge
add
enter
dec
jmp
jnp
mov
mov
dec
data16
sub
add
lcall
pop
mov
add
pop
add
addb
add
jo
call
jmp
loopne
and
decl
add
push
jmp
push
xchg
mov
add
dec
xor
cmp
incl
call
xor
call
roll
inc
add
cs
into
mov
mov
sbb
dec
add
pushl
add
cmp
js
add
and
inc
add
add
pop
jle
in
jle
popl
add
sbb
add
loop,pn
lcall
ljmp
dec
das
int3
pop
sub
enter
popa
add
aam
add
jecxz
xchg
outsb
or
pop
fnstsw
add
mov
rcr
inc
add
xor
pushl
inc
add
push
add
add
ljmp
fistpl
add
and
mov
sbb
pushl
ljmp
add
jp
mov
add
movsl
add
not
stos
xchg
test
mov
ja
add
adc
inc
add
ss
out
jae
pushl
lds
repz
imul
add
inc
add
jge
out
pop
cmpsb
add
or
jnp
jbe
add
pop
rolb
mov
lds
sub
insl
rclb
add
jp
push
add
xchg
cmpsb
add
add
pop
js
or
cmp
add
sub
ljmp
add
pop
xchg
data16
aas
mov
add
cmp
and
mov
add
jno
fildl
add
out
mov
mov
push
mov
out
pop
pop
jmp
add
add
mov
add
cld
xchg
add
add
xlat
cmc
lcall
sbb
add
add
shlb
add
cmp
repz
add
or
add
add
call
cwtl
mov
push
cld
add
ljmp
xor
aas
fadds
ss
jne
outsl
movb
int
push
adc
lcall
mov
add
add
add
out
sub
add
stos
pushl
push
movsl
add
push
xchg
js
enter
jnp
add
test
aad
call
mul
add
jmp
adc
lcall
fisubrl
out
movsl
add
fsubp
add
and
incl
add
cltd
sbb
cmc
push
add
imul
add
popa
add
sub
mov
pop
push
call
add
lods
cltd
data16
pop
add
mov
enter
imul
les
ror
inc
add
ror
or
lcall
test
movsl
add
iret
lcall
js
add
sub
and
call
rcl
mov
pop
add
cld
add
ljmp
ret
add
add
add
sub
addb
inc
add
xchg
into
and
ljmp
insb
mov
out
add
inc
add
mov
add
std
xchg
xor
int3
iret
pop
or
dec
xchg
sbb
movb
jbe
iret
push
outsb
pop
inc
add
sbb
imul
add
aas
pop
mov
cmpsb
add
pop
push
adc
lcall
add
out
xor
call
add
ljmp
add
addl
repnz
mov
dec
insl
jbe
js
cmp
jp
and
dec
lods
jns
pop
les
enter
call
add
aam
icebp
pop
int
pop
mov
push
repnz
add
test
xchg
sub
and
inc
add
add
rcrb
add
repnz
js
hlt
addb
dec
in
push
add
xor
jmp
lret
adc
decl
inc
add
dec
icebp
pop
idivb
cmp
fcmovb
add
add
jb
inc
add
call
pop
mov
sbb
fstpt
cld
dec
sub
add
inc
add
add
jo
lcall
mov
fldcw
push
add
dec
sti
push
cmp
decl
jae
push
jge
xor
and
decl
or
add
add
add
movsb
add
mov
mov
icebp
pop
int
je
add
add
jnp
push
add
jne
mov
add
into
jecxz
add
dec
push
push
add
aas
jmp
adc
dec
sub
mov
sub
les
lret
adc
call
add
xor
incl
add
inc
add
add
add
jp
mov
lret
push
js
dec
pop
mov
xchg
xor
jg
xchg
cmp
add
cmp
mov
stos
daa
add
dec
add
xchg
enter
shlb
or
add
icebp
xchg
sbb
aaa
loope
dec
loop
jp
add
lcall
or
mov
jg
sub
scas
daa
add
js
loope
pop
pop
xchg
sub
lock
adc
lcall
movl
mov
add
add
dec
bound
pushl
add
xor
pushl
ret
add
mov
add
mov
negb
fimuls
call
sbb
movsl
add
dec
dec
addl
dec
lds
addb
dec
pop
sub
icebp
outsl
cli
cld
xchg
ljmp
or
add
pushl
add
inc
add
add
mov
imul
das
fsub
add
or
add
add
jmp
jl
dec
push
push
push
add
add
mov
movsl
add
shl
add
or
inc
add
jne
jmp
lods
adc
call
cmp
mov
add
ljmp
jge
or
xchg
sub
incl
push
add
xchg
mov
daa
add
cwtl
repz
bound
incl
ljmp
incl
nop
pop
mov
fnclex
add
sub
jns
notb
decl
sub
add
roll
cmp
decl
mov
add
mov
add
rolb
add
lcall
aad
movl
clc
mov
add
xchg
lret
in
pop
leave
sti
lcall
add
mov
push
add
push
lods
aas
add
call
fnstenv
add
lcall
fldt
cli
add
jns
add
icebp
loope,pn
call
mov
js
pop
sbb
test
xor
incl
pop
fimull
add
pushl
add
xor
fmull
add
mov
jl
add
add
add
ljmp
and
jmp
xchg
insl
fldl
incl
add
pop
push
add
testl
add
pusha
add
cmp
call
xor
incl
pop
nop
adc
fildl
movsb
add
insl
ss
push
std
and
pushl
adc
inc
add
sub
add
out
pop
add
add
stos
insl
sub
add
add
add
add
add
xchg
jno
incl
add
cmp
push
add
add
pushl
xchg
enter
mov
and
jg
repnz
arpl
lcall
ret
and
pushl
add
cmp
add
call
repnz
xlat
rcll
add
jae
cmp
add
adc
push
pop
push
idivb
mov
bound
pushl
add
mov
mov
pushf
inc
add
inc
add
movsb
add
scas
int
rcl
outsl
and
inc
add
pushl
cmpsl
add
sub
test
sub
pop
cltd
jmp
mov
in
shll
add
addb
jo
ljmp
in
hlt
pusha
add
mov
repnz
add
xor
lcall
add
add
mov
add
adc
incl
sti
insl
add
sti
and
push
cmp
jns
add
in
aam
add
out
xchg
test
mov
scas
dec
inc
add
add
stos
xadd
cmpsl
add
ljmp
add
add
loope
mov
xlat
inc
add
leave
jmp
add
lcall
add
push
aaa
mov
pushf
movl
add
lods
dec
sub
add
call
lock
rorl
adc
lcall
mov
jge
cwtl
roll
and
jmp
pop
inc
add
sbb
mov
addb
add
xor
ljmp
add
test
lock
inc
add
mov
shld
push
ret
add
ficoms
inc
add
sbb
add
add
add
or
in
mov
add
pushl
xor
mov
cmp
add
jns
in
inc
add
xchg
pop
movl
int3
and
ljmp
add
mov
add
incl
incl
add
ljmp
call
fiadds
add
add
mov
push
add
loope
ds
popa
add
out
pop
call
test
sub
add
add
cmp
pop
add
add
adc
call
inc
add
cld
sbb
sbb
xor
inc
add
inc
add
sub
push
add
jp
lock
or
add
dec
hlt
lds
clc
loop
xchg
lods
lods
mov
mov
iret
inc
add
add
inc
add
mov
add
jmp
add
loop
jg
cmpsb
add
pushl
cld
xchg
out
rcll
pushl
adc
in
out
sub
inc
add
lcall
add
add
stc
dec
ret
inc
add
mov
dec
enter
fldenv
popa
add
ftst
add
add
pop
add
add
xor
inc
add
out
pop
imul
mov
add
inc
add
insl
and
js
inc
add
adc
lock
lea
add
mov
mov
add
or
cld
lea
push
inc
add
arpl
lcall
xor
add
mov
call
mov
sahf
rcll
sti
push
mov
add
mov
push
add
adc
lcall
push
scas
mov
in
push
adc
insl
dec
mov
frstor
add
add
lods
cmpsb
add
cmp
add
out
mov
loop
in
std
cld
sub
cltd
sub
xchg
sti
sub
jnp
nop
dec
sbb
repnz
rorb
or
add
imul
enter
nop
pop
add
lcall
incl
jmp
roll
inc
add
add
insl
cmpsb
add
nop
mov
rcr
lock
loop
cmpsl
add
xchg
mov
imul
fsubrl
add
adc
push
add
sbb
add
add
add
jae
out
jge
bound
jmp
repz
dec
ss
add
add
lcall
add
incb
add
out
call
inc
add
add
movl
push
add
cli
das
lret
jb
call
test
add
incl
add
stos
or
add
bound
incl
out
mov
cmp
dec
pop
icebp
gs
and
cmp
lcall
movl
add
inc
add
push
sbb
add
int3
push
mov
in
add
ja
adc
mov
call
add
add
pop
ldmxcsr
add
push
add
addl
add
inc
add
mov
dec
push
add
ljmp
dec
cmp
addb
add
push
shll
add
inc
add
mov
sti
movb
mov
rolb
add
xchg
push
pop
add
jge
iret
sbb
decb
addb
cmp
outsb
sahf
add
stc
movl
leave
inc
add
sbb
pusha
add
mov
add
add
jmp
scas
push
add
out
fidivrl
cmp
sbb
sub
xchg
mov
inc
add
sub
dec
push
mov
add
lcall
add
daa
add
incl
add
ret
and
addb
pop
jbe
add
adc
lcall
add
jmp
aad
fldcw
add
add
decl
pop
fstps
jbe
pusha
add
xor
pushl
jb
pushl
jno
jg
mov
inc
add
das
mov
add
mov
dec
daa
add
dec
mov
rorl
lcall
nop
add
incl
add
add
test
loopne
aam
mov
add
decl
push
add
jecxz
jge
add
pop
dec
out
mov
int
add
lods
sub
add
or
popa
add
inc
add
rcll
loop
jg
cmp
and
daa
add
add
roll
xor
loop
dec
add
add
push
and
repz
jbe
dec
clc
lea
jae
push
mov
jge
rolb
add
xor
decl
xchg
jne
add
jmp
add
adc
call
add
inc
add
add
aad
add
xchg
ds
xchg
loope
scas
cmp
lret
sub
and
ja
add
dec
jmp
int
fldl
add
fiadds
das
sub
imul
ds
addl
sub
add
cmp
pop
pop
sbb
incl
add
sbb
add
inc
add
mov
xchg
lds
addb
add
fildll
pop
cs
dec
mov
add
jb
fbld
add
dec
fisttpll
push
add
cmp
jns
xchg
pusha
add
add
ret
add
push
add
imul
rep
fiaddl
xchg
lret
scas
ret
cmp
xor
sub
add
fisubl
add
mov
cmp
cmp
sbb
mov
lret
add
mov
xor
cwtl
add
adc
push
jg
add
add
jge
mov
add
add
jge
in
movl
mov
cmc
repz
mov
or
lcall
addb
in
jecxz
jo
jmp
add
stos
lock
mov
push
add
inc
add
sub
sti
add
cmpsl
add
pop
add
add
jns
loope
or
add
ljmp
jmp
gs
add
add
add
loope
or
decl
cmp
leave
cs
aas
test
sub
call
dec
jmp
and
jmp
pushl
lcall
std
repz
fwait
dec
fcomp
lcall
or
mov
ljmp
cmpsb
add
leave
mov
pusha
add
dec
sub
pop
jp
dec
mov
xor
call
and
decl
push
mov
and
decl
add
test
add
push
add
xchg
aas
dec
rorl
mov
mov
cmpsl
add
addl
cltd
adc
jmp
add
add
cmp
dec
punpckhdq
in
add
add
xchg
xor
add
call
lea
jge
add
xor
std
or
xchg
sbb
add
fcmovb
add
push
add
mov
add
bound
lcall
pushl
jmp
dec
xchg
in
shll
cmp
lahf
shll
add
sub
std
jns
ret
test
add
aad
add
lds
fdivrs
add
aad
add
add
cwtl
inc
add
fabs
add
and
call
in
pop
xchg
ret
add
mov
decl
cmp
call
inc
add
fmul
sbb
xchg
out
pop
divl
dec
mov
jnp
ljmp
xchg
push
call
or
loope
mov
enter
add
add
ljmp
aad
mov
dec
cmpsl
add
lcall
cli
pusha
add
repz
ljmp
add
lret
aam
add
mov
add
add
sub
mov
pop
popf
add
jmp
stos
inc
add
imul
int
cmpsl
add
sbb
add
mov
dec
or
das
roll
xchg
jle
add
lods
int3
int3
pop
addb
shll
ja
div
and
mov
fidivrs
loopne
aam
repz
lods
int
add
push
out
rolb
add
bound
jmp
add
fimuls
and
lcall
push
add
or
add
in
mov
jo
jg
add
ret
add
scas
cltd
fwait
mov
add
dec
inc
add
add
ret
adc
inc
add
inc
add
jnp
add
call
aas
push
add
loopne
jmp
pop
dec
icebp
lds
mov
sbb
jle
arpl
ljmp
add
add
add
dec
sub
push
mov
add
mov
add
js
rcll
loope
mov
cs
add
mov
add
add
adc
inc
add
out
push
adc
ljmp
inc
add
inc
add
mov
dec
adc
jmp
int3
inc
add
sbb
add
add
mov
mov
add
outsb
inc
add
or
cld
push
sub
add
add
add
js
inc
add
cmc
inc
add
add
cli
sub
add
add
push
scas
sbb
add
data16
xchg
fists
add
cmp
jge
add
cld
in
jnp
xchg
stos
aad
add
arpl
incl
int
push
add
ficompl
ljmp
xchg
imul
call
fimuls
outsb
cmpsl
add
stos
push
add
mov
add
dec
addl
add
dec
dec
repz
adc
jmp
add
xchg
hlt
add
mov
sahf
lds
jae
ljmp
test
or
pusha
add
addb
add
ret
jo
dec
xor
add
add
pop
xlat
dec
pop
mov
sub
ds
sahf
sbb
stc
mov
add
loop
scas
adc
add
jbe
add
add
aaa
mov
pop
pop
mov
loop
divl
jnp
in
cmp
xchg
xchg
mov
add
push
add
das
lcall
mov
add
cmp
lods
jae
out
out
mov
bound
incl
add
incl
add
decb
cmp
mov
jg
xchg
mov
movb
add
incl
add
lahf
gs
add
add
add
add
lahf
je
daa
add
ss
roll
add
daa
add
add
add
call
add
jae
pushl
stc
push
add
jo
jns
movsb
add
add
pusha
add
or
jnp
in
mov
add
movsb
add
add
repnz
mov
mov
mov
imul
add
sti
sbb
movsl
add
xchg
inc
add
outsl
and
push
pusha
add
adc
pushl
call
add
into
int
add
add
add
popf
nop
add
ljmp
movl
pushl
add
ljmp
add
cmpsb
add
add
loop
and
cmp
fsubrs
andps
jmp
add
ljmp
call
add
sbb
ret
add
inc
add
adc
add
adc
jns
add
lock
xchg
scas
or
adc
ret
cmp
popa
add
cmpsl
add
decl
ret
add
pusha
add
mov
add
mov
mov
xchg
iret
mov
add
pop
xchg
add
jecxz
adc
call
xchg
add
lcall
add
inc
add
jmp
add
pusha
add
xchg
xor
call
icebp
stc
sub
add
call
mov
mov
cli
test
sub
add
cltd
call
sbb
pop
adc
call
add
repz
mov
pop
add
add
lds
jecxz
popa
add
cmp
xchg
fwait
mov
add
add
scas
dec
fadds
add
gs
or
int3
or
xchg
rolb
and
lcall
adc
js
add
das
push
mov
cmp
adc
call
cmp
adc
call
rolb
inc
add
dec
add
add
add
push
cmp
mov
or
add
add
repz
ljmp
outsl
cmpsb
add
xchg
roll
xlat
call
movsb
add
add
dec
pop
xor
cmc
pop
dec
sbb
add
pop
sets
mov
arpl
push
movl
mov
dec
fstps
add
add
add
clc
jae
pushl
xchg
arpl
call
add
stc
addb
out
xor
je
imul
add
add
mov
add
add
test
hlt
mov
lcall
mov
outsb
arpl
incl
out
jg
jne
ret
add
push
xor
incl
sahf
cmp
cli
lds
cmpsb
add
sbb
mov
add
in
pop
jo
cmpsl
add
add
adc
fcmove
push
add
out
pop
rolb
loop
call
add
add
cmp
add
ficompl
dec
push
daa
add
enter
cli
in
pop
test
sbb
into
and
insb
mov
mov
lods
das
stos
bound
inc
add
xchg
mov
addl
add
xchg
cmp
out
les
pop
scas
pop
loope
addb
add
adc
mov
sbb
call
sub
and
dec
add
in
movsb
add
sbb
jge
ja
clc
imulb
incl
add
mov
cmpsb
add
cld
mov
add
mov
dec
addl
xchg
call
roll
cmp
add
inc
add
push
test
mov
add
add
in
cmp
pop
in
jl
push
push
xchg
imul
call
lods
insl
jne
xlat
dec
push
fmul
mov
inc
add
aad
aas
dec
cmp
out
inc
add
jg
outsb
stc
repnz
xor
incl
repz
cmpsl
add
scas
iret
push
ljmp
push
add
insb
mov
dec
sub
add
add
add
decl
xor
ljmp
jo
adc
mov
sti
or
add
mov
mov
add
add
mov
add
xor
pushl
add
inc
add
ljmp
addb
add
add
jno
jmp
loop
or
into
imul
add
ds
fidivrs
mov
scas
xor
mov
pop
and
mov
add
push
popf
xchg
mov
add
fdivr
mov
lret
mov
xor
lcall
test
add
sub
add
add
aad
mov
inc
add
adc
incl
pushf
cwtl
lock
addb
stc
mov
cmp
add
addr16
iret
or
add
add
adc
pushl
sar
cmp
add
mov
fistpl
mov
inc
add
mov
popa
add
mov
add
adc
mov
add
pop
cli
fcmovnb
add
inc
add
aas
cli
jbe
pop
popf
push
mov
ficomps
adc
decl
push
mov
testb
or
push
mov
call
add
add
call
cmp
call
sti
icebp
push
clc
add
loope
aaa
aaa
mov
lcall
leave
mov
roll
fsub
add
test
pusha
add
dec
jne
add
add
sahf
cli
sub
add
add
add
call
adc
ffreep
add
jg
adc
pop
popa
add
sbb
add
jno
lcall
lcall
cli
sub
add
sub
add
add
sarb
mov
cmpsb
add
add
popf
mov
add
xchg
and
inc
add
pop
pop
cmc
loopne
stos
push
flds
movl
mov
add
loope
xor
pushl
inc
add
mov
add
std
dec
lcall
push
xor
data16
lock
add
add
fsub
add
add
jmp
mov
add
cld
lret
insb
pop
add
push
sti
mov
rolb
add
mov
insb
hlt
inc
add
xchg
lret
adc
add
sahf
or
sbb
movb
add
call
mov
loop
pop
into
sub
insb
jecxz
xor
fsubr
sbb
test
sbb
adc
incl
add
xor
lcall
jmp
add
inc
add
ret
add
enter
insl
aaa
testb
hlt
addl
les
xchg
inc
add
xchg
clc
inc
add
add
pop
xchg
push
decl
clc
addl
xchg
inc
add
add
lcall
popf
faddl
add
add
cmp
pop
rolb
jmp
push
add
decl
add
or
das
bound
pushl
xchg
adc
add
add
add
popa
add
test
ds
leave
add
ljmp
xchg
sahf
fsqrt
mov
add
ljmp
cli
scas
sti
sub
adc
lcall
pop
xor
jmp
add
sbb
dec
stc
cmp
xor
incl
bound
jge
add
shrl
add
lcall
cmp
add
sbb
xor
popa
add
jae
push
mov
outsl
cmp
pop
fistps
add
add
in
je
add
add
dec
ja
add
add
jns
add
shll
adc
fucomp
sar
repz
pushl
in
mov
add
addb
add
add
add
cmp
xchg
icebp
sbb
pop
add
add
xchg
xlat
add
add
sti
mov
add
mov
add
sub
test
jmp
or
mov
pop
fwait
call
fistl
mov
mov
insb
dec
test
addb
add
aam
add
in
push
sub
repnz
das
inc
add
lret
sub
add
cmp
add
notb
add
dec
das
or
add
push
add
mov
stos
sub
mov
add
add
fisttps
into
pop
and
ret
lea
add
call
lret
or
pusha
add
adc
pop
add
add
js
dec
dec
and
cmp
add
gs
add
add
bound
jge
and
decl
add
out
xchg
and
decl
inc
add
jmp
add
rolb
add
push
ds
and
jmp
dec
push
adc
ljmp
lret
cmp
das
push
add
add
or
push
inc
add
lock
add
rcr
push
mov
cmp
les
in
rcll
cmp
adc
jmp
add
add
pop
jmp
add
add
sbb
cltd
sub
adc
add
jle
add
add
outsb
fldl2e
repnz
inc
add
inc
add
pop
addl
pusha
add
nop
sub
add
fisubs
jmp
add
inc
add
mov
decl
bound
push
adc
jmp
pusha
add
in
dec
add
jecxz
and
push
mov
in
das
mov
add
mov
and
int3
pop
in
pusha
add
mov
inc
add
add
push
add
add
incl
ret
add
sub
imul
add
add
xor
ljmp
and
lcall
lret
call
call
add
repz
add
add
push
and
call
adc
ljmp
rcrb
lods
imul
add
aam
add
add
mov
add
call
add
repz
add
add
add
pop
scas
and
xor
jnp
add
xchg
loopne
aad
add
shl
add
push
jbe
add
inc
add
test
cmovl
addl
add
mov
jge
add
imul
add
mov
or
movsl
add
add
roll
dec
lret
push
cwtl
adc
jmp
js
push
add
daa
add
cwtl
xor
inc
add
icebp
pop
sub
cmp
add
mov
add
fdivs
add
call
adc
add
sarb
sbb
sbb
add
push
push
add
out
mov
out
cmp
push
imul
add
jmp
add
inc
add
jmp
inc
add
push
inc
add
mov
outsl
jne
lea
push
insl
stos
pop
xchg
roll
push
add
arpl
inc
add
add
add
sbb
movsb
add
sub
add
adc
add
add
add
lds
aaa
mov
in
sub
stos
and
jmp
cmp
adc
add
xor
decl
std
add
push
adc
cmp
and
pushl
jmp
add
add
movsb
add
add
add
push
xchg
outsl
push
adc
lcall
rorb
in
push
push
add
add
jmp
test
outsl
ljmp
cmp
enter
pusha
add
out
xlat
fists
call
add
sahf
shlb
mov
adc
lcall
cmpsl
add
xchg
loop
pop
add
mov
add
scas
and
decl
push
add
mov
add
xchg
addl
add
add
mov
scas
push
add
and
lcall
add
call
add
adc
lcall
add
adc
jnp
add
mov
fnstsw
add
lret
add
ds
add
ds
roll
out
aas
insb
sub
add
incb
add
popf
hlt
mov
mov
add
hlt
mov
add
sti
in
jns
inc
add
xchg
enter
loop
addb
dec
inc
add
lcall
ret
movsb
add
in
adc
jmp
shrl
shrb
push
mov
jne
add
sbb
movsl
add
adc
pushl
incl
lds
js
add
push
add
pusha
add
jbe
add
add
cmp
test
add
sub
sub
fldcw
add
add
ljmp
sub
add
in
aad
adc
repz
shrb
push
sbb
add
add
jmp
add
mov
add
ret
add
inc
add
insb
push
adc
jp
repnz
add
hlt
push
in
imul
cmpsb
add
push
sub
lret
add
xchg
pop
mov
add
pminsw
add
add
add
mov
jmp
ljmp
add
outsl
mov
cmp
testb
jne,pt
pop
movl
add
cmp
decl
test
mov
add
add
dec
xchg
bound
jmp
insl
loope
sub
test
cmp
sbb
in
in
dec
mov
add
push
add
pop
imul
insl
xchg
mov
je
and
decl
xor
loope
xchg
loope
in
jmp
add
jp
lea
add
into
sbb
add
cmp
add
mov
add
mov
scas
imul
lahf
jo
pushl
add
push
mov
add
movl
add
in
mov
add
nop
mov
pop
fiaddl
add
stc
repnz
mov
add
arpl
call
add
add
fcmovnbe
push
cmp
bound
ljmp
add
pop
mov
jp
add
mov
add
add
or
mov
jb
decl
add
inc
add
movb
icebp
negl
xchg
arpl
dec
mov
mov
enter
and
out
mov
add
add
ljmp
add
out
outsl
mov
add
incl
dec
push
and
aas
enter
mov
push
add
push
mov
add
push
add
rolb
jl
add
jg
out
cli
inc
add
daa
add
pop
jmp
add
ljmp
add
jb
lcall
cmp
jle
sbb
mov
movq
add
mov
repz
mov
out
fxch
ljmp
mov
or
adc
inc
add
jl
add
decl
scas
xlat
ret
dec
push
add
aad
adc
mov
add
or
add
sub
add
pop
inc
add
and
incl
add
call
cmp
fisubrs
adc
lcall
inc
add
imul
lcall
jmp
stc
add
cmp
popf
scas
loop
pinsrw
xchg
dec
les
push
test
sub
stc
sbb
lods
rcr
add
loopne
mov
mov
add
outsl
mov
das
mull
xor
pop
mov
out
data16
add
dec
sub
xchg
or
clc
xchg
xchg
iret
lret
sbb
lret
outsb
add
out
mov
add
cld
push
add
inc
add
add
xchg
cld
leave
rcrl
mov
pop
push
add
in
xchg
or
add
inc
add
push
icebp
push
add
dec
push
lcall
add
jno
stc
cld
jecxz
add
incl
shl
add
rolb
mov
pop
mov
jb
lcall
mov
jbe
ds
cmp
add
pop
icebp
mov
mov
xor
lcall
pop
add
xor
dec
or
bound
inc
add
aad
ret
add
in
movb
loop
xor
decl
add
push
add
bound
jmp
add
xchg
xchg
jge
add
jne
cmpsb
add
add
or
decl
xchg
sub
add
lcall
in
lock
add
jns
add
les
xchg
mov
cwtl
jge
and
pushl
jg,pn
call
int3
add
add
and
call
pop
frstor
add
ljmp
add
leave
or
add
incl
add
rcll
push
add
dec
pop
addb
jge
cli
test
ret
add
jg
add
mov
xchg
fwait
xchg
pushf
or
cld
lret
sbb
add
loope
inc
add
add
outsb
dec
pop
add
xor
push
addl
loop
cmc
mov
add
dec
push
add
lcall
add
data16
add
sub
fcoml
dec
mov
add
inc
add
lcall
add
or
add
pop
mov
push
sbb
je
aas
leave
out
pop
push
fistps
dec
lret
shll
fcomps
sbb
movb
add
fwait
lcall
add
clc
mov
dec
int3
inc
add
cld
mov
shll
pushl
sub
ljmp
popa
add
dec
scas
cmp
cmp
dec
push
in
mov
shll
aas
jo
lcall
mov
add
test
push
add
add
pushl
decl
add
mov
jg
cwtl
mov
sub
jb
lcall
lods
xor
push
in
out
mov
adc
decl
add
push
add
add
inc
add
stos
adc
push
mov
daa
add
data16
add
add
dec
pop
add
add
imul
mov
addl
add
out
or
lcall
add
mov
add
dec
frstor
add
lods
cmp
add
arpl
lcall
pop
pop
pop
cli
mov
and
cmpsl
add
mov
adc
jle
add
xchg
movl
jl
negl
add
add
jnp
add
movsb
add
popa
add
shl
in
cmp
stc
adc
lcall
mov
je,pt
pop
inc
add
movsl
add
fiaddl
add
dec
xor
xchg
mov
pusha
add
jno
jmp
xlat
fwait
dec
mov
movb
js
fcomi
pop
in
aaa
addl
sub
sbb
incb
add
dec
mov
clc
lods
lret
imul
pushl
out
fstpl
mov
data16
out
ret
aaa
je
mov
sub
pusha
add
lea
ret
sub
add
inc
add
pop
sbb
add
add
add
add
jmp
dec
sar
pop
cld
sub
and
call
add
test
mov
pop
dec
add
push
loope
fiadds
add
add
ret
addl
pushf
cmp
add
add
jecxz
scas
mov
add
mov
loop
mov
aaa
push
add
stc
sti
mov
add
ljmp
je
mov
outsb
inc
add
pushl
call
inc
add
add
lret
lock
add
jmp
out
ljmp
mov
addr16
loop
inc
add
pop
mov
mov
inc
add
lret
push
add
jae
inc
add
add
xchg
js
push
add
mov
add
jmp
add
ficompl
and
jge
fildl
je
add
jg
add
ret
test
xchg
xor
ljmp
mov
outsl
push
hlt
adc
jmp
outsl
jg
adc
lcall
cli
push
add
push
add
ret
add
imul
add
sub
das
ljmp
and
ljmp
add
jns
notl
add
dec
sub
jne
fimuls
add
ret
add
je
xchg
jl
test
xchg
inc
add
push
add
fwait
cmp
sti
mov
add
fwait
cmp
mov
fidivs
add
leave
or
add
jp
push
rcrb
add
dec
mov
stc
loop
jns
add
mov
dec
movsl
add
movb
sbb
stc
add
add
addr16
add
add
xchg
stos
int
pop
jbe
jl
add
cmc
out
in
imulb
ret
add
jle
stos
fwait
clc
cli
movsb
add
add
outsb
imul
cmpsl
add
leave
mov
push
ds
xchg
jnp
push
jl
filds
dec
cltd
imul
rsm
cmp
popl
decl
add
add
jmp
adc
pushl
add
inc
add
decl
or
pop
push
add
mov
inc
add
add
out
mov
add
add
inc
add
addb
aas
xchg
or
add
inc
add
aam
add
iret
mov
add
dec
mov
dec
mov
adc
add
scas
sbb
add
add
inc
add
jmp
adc
imul
fldt
decl
inc
add
sub
and
jmp
add
cmp
add
stos
in
data16
les
pop
jle
add
dec
pop
cmp
out
sbb
add
or
lahf
jo
repnz
add
push
add
insb
arpl
std
rcrb
xchg
inc
add
pop
je
and
push
xchg
xchg
pop
adc
jmp
add
and
call
add
dec
incb
decl
inc
add
add
adc
incl
adc
jge
add
add
add
ds
mov
xchg
lret
add
mov
add
push
stos
into
push
add
dec
roll
sarl
jmp
add
add
fildl
add
add
dec
cltd
jnp
jp
aaa
sbb
add
jne
add
lds
jb
call
add
lret
movsl
add
push
pushf
and
pushl
add
inc
add
push
mov
das
mov
add
popa
add
test
aaa
xor
decl
mov
clc
mov
add
pop
into
mov
cwtl
pop
mov
add
add
ljmp
ss
adc
jg
add
add
lcall
xlat
movups
call
add
push
adc
add
add
loop
cmp
cmp
add
fs
idivb
add
ljmp
loopne
shrb
add
enter
adc
add
or
popa
add
cmp
inc
add
add
icebp
pop
adc
add
lods
pop
clc
add
int3
aad
add
incl
lcall
addb
lea
mov
inc
add
stos
jmp
add
insb
inc
add
and
incl
or
jne
arpl
lcall
insb
aaa
jo
inc
add
sub
add
addr16
bound
mov
xchg
mov
push
out
fcmovnu
ss
add
cmpsb
add
add
out
cmp
add
in
mov
fsubrl
mov
pop
lret
sbb
call
xchg
fistl
sahf
fsubl
inc
add
insl
jo
lcall
add
pop
or
enter
xchg
lret
add
add
adc
call
jns
dec
mov
add
jmp
and
dec
push
sarl
xor
ljmp
loopne
addl
or
add
push
add
fwait
xor
jmp
inc
add
jle
movl
int3
lock
or
sub
enter
jg
add
movb
push
add
js
add
or
xor
jg
aam
add
dec
cmp
ljmp
pusha
add
jnp
add
push
push
add
sbb
add
ljmp
add
in
test
decl
icebp
insl
xchg
mov
ficompl
icebp
addb
add
daa
add
daa
add
cmpsb
add
inc
add
sbb
inc
add
movsl
add
inc
add
add
jecxz
cs
or
add
jg
add
add
decl
loop
bound
clc
sub
addl
xor
call
xchg
mov
add
out
dec
pop
sbb
scas
addl
rolb
inc
add
mov
decl
cmp
into
push
add
cld
xor
incl
add
jb
jmp
ljmp
jecxz
cld
push
pop
add
repnz
pop
cmc
loope
movl
ret
int3
mov
pop
add
test
out
add
dec
loopne
loopne
pop
aaa
addb
add
add
mov
out
inc
add
sbb
add
ja
jmp
add
cmp
add
cltd
call
add
call
add
sbb
aad
add
rolb
fwait
movsl
add
add
push
pop
aam
les
loop,pt
bound
mov
xor
lcall
xor
cmp
add
pop
and
dec
push
dec
adc
call
jg
addl
add
lret
fistpl
outsl
xor
out
jbe
loop
jnp
add
add
sub
fistpll
mov
shlb
add
cmpsb
add
add
les
outsl
sub
push
cmp
add
or
and
jmp
lods
das
hlt
push
add
add
pushl
add
cwtl
aaa
pop
in
dec
aas
jge
addl
adc
pushl
add
idivl
add
out
cmp
xchg
fldcw
add
outsl
into
xchg
ss
xchg
gs
rcrl
cmp
mov
add
add
jae
jmp
add
pop
adc
push
testb
and
pushl
push
add
enter
ljmp
in
xlat
xor
pushl
and
jmp
add
pop
cmp
test
dec
push
je
cmp
lock
xchg
cmp
xchg
iret
flds
add
addb
xchg
push
add
xor
incl
ljmp
add
add
out
mov
add
jns
jge
add
and
roll
add
rcll
add
pop
sbb
loopne
cli
out
mov
add
add
mov
idiv
stos
sbb
pushf
js
jbe
add
push
mov
cmc
jge
dec
add
add
stc
filds
movl
add
sti
cmp
and
in
movb
or
mov
jg
sbb
add
jmp
jb
call
or
add
out
lods
add
decl
dec
push
push
add
jnp
add
jne
add
adc
add
add
push
jae
mov
xor
add
decl
fldcw
adc
lcall
add
sub
add
add
add
icebp
mov
add
in
in
adc
jmp
add
enter
push
add
aad
and
add
mov
test
mov
add
sarb
jg
jns
imul
decl
xor
inc
add
sub
push
outsl
xor
incl
cmp
push
arpl
jmp
mov
jp
clc
frstor
ljmp
inc
add
sbb
add
pusha
add
mov
add
test
add
cli
mov
xchg
pop
ret
add
add
add
roll
stos
dec
popf
push
dec
movsl
add
sub
add
in
jmp
fsubrs
mov
jae
ljmp
adc
jae
ljmp
popa
add
mov
add
and
mov
std
jno
lcall
fcompl
mov
add
add
cltd
inc
add
inc
add
out
sahf
add
repz
sti
adc
jmp
neg
push
repnz
sbb
mov
addl
push
fimuls
out
dec
inc
add
xchg
int3
je
repnz
mov
cmp
mov
cwtl
mov
sarl
fldenv
add
outsl
xchg
pop
test
mov
loop
insl
nop
and
jg
addl
nop
dec
xor
add
xor
sahf
jnp
add
fwait
test
add
xchg
push
into
sbb
push
add
testl
js
add
mov
add
hlt
addl
add
sbb
add
add
add
add
roll
add
add
and
add
lds
insl
fsts
inc
add
mov
xor
clc
clc
adc
call
add
ljmp
sub
add
jl
xchg
inc
add
sbb
mov
mov
fldt
mov
mov
mov
pop
mov
cmpsb
add
mov
add
popa
add
repnz
cmc
icebp
nop
sub
mov
dec
mov
add
jmp
int3
pushf
addl
imul
icebp
sar
fidivrs
fildl
add
addb
out
push
loope
mov
mov
cvtps2pi
cmp
movsb
add
lods
lods
test
incl
add
add
add
pop
rcr
ficompl
add
lods
loop
sub
movsb
add
add
scas
mov
or
call
sub
jp
pop
add
jge
inc
add
int
ss
mov
add
into
adc
add
scas
in
outsb
xchg
inc
add
add
push
add
jbe
pop
pinsrw
cmpsb
add
fcomps
mov
add
add
cmpsl
add
cmp
fstpl
in
mov
add
outsl
test
insb
push
add
pop
xor
add
lods
mov
sbb
addb
mov
adc
jmp
add
add
add
jns
repnz
add
out
inc
add
inc
add
bound
push
sbb
mov
bound
call
out
sbb
and
loop
fwait
mov
out
inc
add
dec
cld
repnz
mov
mov
das
pusha
add
rol
add
add
jmp
add
bound
push
scas
adc
call
add
aaa
dec
pop
inc
add
xchg
jp
xchg
out
add
mov
cmp
pop
movl
jg
add
xchg
test
sbb
xchg
push
and
decl
inc
add
data16
addb
shr
insl
sub
nop
mov
add
or
add
cmp
add
incl
add
xor
add
ljmp
add
roll
pop
rolb
add
inc
add
pop
dec
test
mov
add
xchg
sub
mov
loopne
movsl
add
int
add
mov
add
mov
filds
add
mov
repz
aad
add
pop
hlt
aaa
jg
fnstsw
aaa
cmp
xchg
or
and
call
addl
push
add
adc
decl
add
mov
insl
loopne
adc
inc
add
fisubrs
push
add
and
and
call
add
ss
dec
scas
mov
jle
add
add
xchg
cwtl
jecxz
jne
sub
je
testb
jmp
inc
add
popf
and
inc
add
push
dec
inc
add
ja
pcmpgtd
clc
inc
add
data16
add
mov
cwtl
adc
decl
add
cmp
push
add
arpl
mov
repz
add
incl
add
xchg
rcrb
decl
push
jo
decl
lods
dec
adc
decl
add
ljmp
xor
decl
push
add
jecxz
nop
add
ljmp
cmpsb
add
push
add
testb
call
lods
addl
fwait
and
add
push
sti
call
add
add
add
stc
ds
sub
inc
add
jmp
add
dec
dec
mov
mov
add
add
dec
lcall
fdivl
inc
add
pop
data16
add
ds
cli
in
inc
add
add
cmp
shrb
add
adc
pushl
add
adc
decl
pop
rol
add
out
mov
fnsave
or
adc
jmp
add
xor
decl
stos
lret
sub
add
add
decl
cs
ja
jbe
lret
test
xchg
push
jnp
add
jbe
sbb
cmpsl
add
div
and
incl
out
xchg
int3
mov
pushf
push
add
ss
int3
movb
xor
call
daa
add
push
sbb
stos
mov
cmc
pop
mov
lcall
sub
fcompl
ljmp
dec
ds
add
xchg
xchg
ret
rcrl
insl
mov
add
jno
pushl
add
cmp
imul
jl
add
fidivrl
add
lcall
js
add
sub
push
cmp
addb
push
sbb
mov
add
add
movsl
add
mov
add
shl
pusha
add
jbe
add
mov
add
push
add
data16
add
inc
add
gs
pop
add
add
mov
push
or
out
insl
repnz
outsb
jns
add
hlt
sbb
fdivs
add
add
sahf
mov
scas
jl
inc
add
pushl
and
incl
add
pop
mov
jp
xchg
into
sub
call
or
add
ret
aas
xchg
or
mov
dec
cmp
dec
mov
outsl
sub
add
aas
jecxz
mov
add
cwtl
shlb
add
adc
decl
inc
add
pop
add
insb
movsl
add
roll
add
add
xchg
push
xchg
xor
inc
add
xchg
lea
add
sub
clc
outsl
push
add
add
add
add
mov
sbb
cltd
imul
add
incl
add
add
sbb
cli
rorl
and
std
roll
int
add
push
nop
rcrl
out
mov
add
fisubrs
mov
add
out
sbb
add
fmuls
sarl
mov
stc
repnz
and
inc
add
cmp
call
jae
call
add
stc
push
add
decl
stos
jno
fadds
cltd
call
mov
inc
add
jne
add
loop
bound
lcall
add
out
or
decl
xor
fsts
incl
pushl
sbb
dec
data16
jnp
push
inc
add
add
inc
add
and
lcall
and
call
int3
arpl
pushl
add
lds
push
add
addb
add
mov
add
in
ja
push
mov
dec
fld
add
add
outsb
push
add
sbb
cmp
decl
addl
mov
sub
add
addl
stos
xchg
or
add
imul
iret
or
xchg
addl
call
call
je
ljmp
ret
sub
and
jmp
lock
mov
mov
in
mov
imul
stos
pop
jb
lcall
scas
nop
add
jae
incl
add
xchg
std
push
add
and
dec
sub
push
jbe
mov
adc
out
rcrb
xchg
add
lcall
roll
add
lahf
push
push
add
mov
add
mov
xchg
inc
add
jmp
ljmp
xchg
pop
add
xor
or
popf
jle
outsb
out
sub
ds
add
icebp
and
repnz
fwait
out
rolb
jge
adc
decl
pop
pop
lock
add
adc
call
call
addb
movsl
add
repnz
js
stc
addl
add
add
add
push
int3
dec
lock
in
xor
pop
fstpl
mov
data16
adc
inc
add
test
fimull
add
jg
inc
add
mov
add
add
sbb
add
inc
add
pop
add
jg
add
jmp
add
pop
adc
ljmp
add
mov
add
out
jle
add
call
aam
or
mov
add
dec
xchg
push
movsl
add
add
arpl
ljmp
add
sub
add
jge
inc
add
mov
add
adc
incl
mov
dec
and
decl
xor
mov
scas
push
add
mov
add
fsubl
add
hlt
mov
in
adc
lcall
sahf
rolb
add
mov
jp
scas
add
jmp
add
add
fisttpll
jecxz
mov
and
inc
add
add
cmp
mov
add
stos
mov
pop
daa
add
les
cmp
xor
cmp
add
das
addl
add
add
rolb
or
add
add
imul
sbb
jmp
lods
push
je
pop
cmp
scas
fidivs
push
add
jns
add
cmpsl
add
ljmp
add
add
dec
xchg
out
das
stc
and
sbb
fwait
lret
lcall
jne
lock
idivl
xlat
sub
jmp
xchg
push
add
lret
jle
add
test
add
add
inc
add
mov
es
add
call
add
mov
cmpsl
add
imul
ffreep
add
xchg
rolb
clc
mov
and
std
xor
mov
add
add
movl
sbb
adc
std
dec
insb
mov
jecxz
addl
add
jnp
add
mull
data16
add
sbb
pop
add
add
addl
lcall
rcrb
cmp
push
cld
int3
movl
fsubrl
sbb
insb
stos
insb
out
jl
add
dec
aam
add
xchg
xchg
cmpsl
add
pop
cltd
popf
sbb
je
cltd
cltd
movb
add
add
add
sbb
mov
fmul
pop
sub
cmp
jne
movb
dec
pop
push
addl
add
add
add
hlt
mov
aas
lcall
shrb
push
jg
inc
add
jno
lcall
xor
ljmp
dec
imul
add
jge
xlat
test
xor
jmp
loope
or
push
sbb
add
add
add
lcall
add
test
dec
jge
addb
mov
add
cmp
pop
jg
add
add
mov
outsl
outsl
xchg
add
xchg
xchg
push
pop
fsubr
bound
cmp
js
je
push
lods
ret
adc
lcall
aad
mov
jle
rclb
ljmp
push
add
push
adc
pop
fsubrs
ljmp
sub
inc
add
push
pop
loope
push
add
dec
idivb
addb
cs
xlat
cld
push
inc
add
xchg
out
lea
fwait
adc
ljmp
sahf
lret
sub
inc
add
sub
call
add
pop
mov
adc
call
push
add
in
fcmove
lods
mov
push
mov
int3
in
push
jmp
push
mov
fisubrs
cs
add
mov
fisubrl
add
aad
xor
inc
add
out
out
imul
decl
stc
repnz
add
bound
incl
add
sbb
mov
mov
das
xor
clc
ds
add
fimuls
add
decl
add
arpl
jp
add
mulb
add
mov
add
pop
jb
jmp
add
shlb
decl
xor
push
add
and
ljmp
sahf
lret
lock
fsts
loop
sbb
ret
sti
ja
add
push
and
ljmp
add
roll
lcall
fsubrp
xor
test
mov
add
incl
mov
add
add
jae
decl
les
push
cmc
roll
inc
add
popf
mov
enter
sub
shrl
hlt
pop
in
sbb
add
movl
lahf
loope
iret
inc
add
movb
add
inc
add
out
ficomps
add
lods
mov
movsl
add
add
out
lds
cmp
incb
decl
mov
add
nop
das
pushf
data16
or
arpl
ficoml
call
and
ljmp
add
jg
add
mov
pop
add
add
dec
adc
call
js
scas
jle
add
push
jp
inc
add
sub
repnz
cmp
sbb
xchg
sti
xor
ljmp
add
sub
xchg
aam
add
add
ljmp
mov
adc
jmp
xchg
rorl
jnp
sbb
mov
add
add
mov
mov
mov
add
push
add
jbe
sbb
add
dec
repnz
jns
add
in
movsl
add
add
movl
ja
mov
add
add
stc
push
add
push
add
jnp
pop
test
xlat
mov
sub
xor
pushl
mov
push
add
ss
pop
cwtl
stos
addl
add
sbb
add
das
daa
add
lods
rolb
add
ret
add
dec
jp
add
xchg
cs
add
cmp
jmp
add
enter
outsb
or
add
add
jmp
add
add
inc
add
inc
add
dec
int
clc
test
clc
mov
add
out
inc
add
add
enter
add
roll
cwtl
insl
inc
add
cmp
repz
add
mov
stos
insl
lods
and
cmpsb
add
inc
add
pop
add
fldz
push
push
movb
sbb
add
mov
dec
cwtl
mov
ror
push
cmp
add
call
pop
xor
clc
push
add
cmpsb
add
lods
and
mov
sub
movb
cmp
add
pop
push
ficoml
add
adc
call
add
cmpsl
add
daa
add
sbb
aaa
push
pop
and
pop
test
cmp
addb
add
cmpsl
add
jne
add
sub
int
insl
mov
insl
sahf
mov
add
hlt
cmpsl
add
mov
push
cwtl
shll
add
xchg
sahf
rclb
aas
pushf
xchg
lss
add
icebp
sub
faddp
add
mov
jmp
add
and
jmp
mov
xchg
call
pushf
xchg
pop
ror
sbb
stc
sub
add
inc
add
incl
incl
and
or
das
data16
or
add
pushl
add
mov
add
mov
dec
sahf
dec
mov
jo
jmp
dec
or
pushl
mov
dec
hlt
push
fwait
call
add
lods
loop
sahf
jge
in
fdivs
ljmp
inc
add
jb
add
add
push
adc
jmp
add
mov
add
cmpsl
add
lods
jbe
cmovbe
in
das
add
lcall
add
decl
push
add
mov
mov
adc
decl
jge
cmp
aam
ja
add
mov
xor
incl
shlb
add
xchg
cmp
add
add
roll
mov
daa
add
mov
add
mov
sub
mov
mov
js
iret
scas
jg
add
push
add
les
scas
jl
out
jo
call
divl
cwtl
adc
ljmp
cwtl
dec
add
incl
mov
aam
add
sub
mov
jo
call
dec
xchg
fbld
mov
jmp
roll
add
addl
add
popa
add
mov
add
adc
ret
add
jmp
add
and
jl
mov
add
xchg
notl
call
cltd
outsl
insb
test
or
lret
outsl
popf
pop
dec
pop
js
add
stos
lret
dec
pushf
add
fidivrl
js
dec
sbb
aam
pop
add
add
popf
jl
xchg
mov
mov
push
sbb
lods
xchg
mov
shr
movl
sti
pop
idivl
inc
add
or
add
lret
out
inc
add
lcall
addb
add
push
in
filds
add
popf
add
call
lcall
cmp
ljmp
add
addl
ljmp
pop
push
ss
push
add
mov
cmp
lcall
data16
jmp
add
sbb
or
mov
mov
sbb
js
add
xchg
sahf
inc
add
loope
pop
and
ret
add
sahf
in
addb
scas
jo
pushl
add
lcall
cli
xor
jnp
add
add
int
dec
add
data16
add
add
xchg
sub
jmp
add
mov
add
das
or
popf
push
stc
sbb
jmp
lcall
add
sub
add
add
dec
push
sbb
js
add
mov
jmp
pushl
add
pop
arpl
pushl
add
mov
lds
inc
add
add
mov
add
add
movsb
add
fdivs
add
jo
cmp
add
mov
mov
jge
inc
add
std
push
xor
dec
or
popf
inc
add
fsubl
iret
cwtl
add
call
add
bnd
sti
fsubs
decl
add
incl
cmp
push
out
xor
ljmp
imulb
mov
addl
add
mov
mov
roll
add
xchg
mov
and
jmp
add
ds
push
add
pushl
and
lcall
fucomp
xlat
cmp
adc
push
add
xchg
and
ljmp
push
xchg
insb
pop
dec
mov
fstpl
scas
divl
add
jmp
push
mov
lods
cwtl
push
add
push
add
ljmp
mov
add
scas
pop
sbb
sbb
add
add
push
jbe
xor
add
add
add
lahf
lods
out
addb
mov
in
add
add
addl
dec
mov
aas
push
add
add
add
push
test
xchg
pop
or
add
inc
add
add
pop
dec
adc
call
pop
popa
add
pop
fwait
icebp
pop
in
fchs
add
add
jg
lea
dec
sbb
loope
jnp
pop
inc
add
add
movb
cmp
cs
negl
addb
mov
xchg
push
cltd
sub
hlt
push
add
scas
cs
add
imul
cltd
leave
lahf
pop
inc
add
shll
add
add
bound
ljmp
pop
add
lcall
movsl
add
addb
sbb
add
jmp
and
sub
dec
fsubl
add
lds
repnz
xchg
add
jmp
add
jmp
sub
dec
mov
enter
or
add
dec
mov
add
add
loop
imul
push
xchg
pop
fnsave
in
and
pushl
mov
add
test
fwait
into
lock
push
add
add
icebp
adc
jmp
add
lods
in
pop
push
aas
fildll
mov
dec
outsl
lcall
xchg
scas
imul
or
jno
ljmp
outsb
dec
icebp
and
add
test
movl
add
jp
dec
jbe
add
add
jg
xor
aas
lret
xchg
push
xchg
mov
xlat
and
inc
add
add
stc
repnz
mov
mov
xor
jmp
cltd
xchg
enter
das
cmp
mov
test
mov
pop
add
adc
jmp
rcll
addb
lds
rolb
xor
inc
add
add
dec
jle
jge
fcompl
ljmp
add
inc
add
push
xchg
cmp
lahf
lret
loopne
ficompl
inc
add
lcall
clc
test
push
cwtl
mov
xlat
stos
shl
add
addb
add
and
ljmp
inc
add
sti
je
add
inc
add
xchg
add
addl
push
add
mov
jge
mov
push
add
mov
outsl
out
movsl
add
inc
add
lds
mov
inc
add
rcr
push
cmpsb
add
add
bound
ljmp
cmp
out
xor
add
mov
pop
add
inc
add
loop
repnz
mov
add
xor
decl
xchg
mov
push
add
mov
leave
neg
pop
nop
fcompl
xor
call
add
cmp
add
das
add
inc
add
icebp
mov
mov
xor
incl
decl
add
jmp
push
sub
add
out
sbb
movsl
add
jmp
dec
sub
movsl
add
dec
xlat
int3
and
push
roll
pop
in
bnd
ljmp
add
dec
imul
add
out
jg,pn
mov
add
sub
call
lcall
cmp
add
cs
mov
jle
add
addr16
add
add
adc
add
jnp
xlat
dec
cmpsb
add
mov
das
scas
sahf
clc
fdivs
sub
sbb
push
or
cld
jae
lcall
addl
stos
outsl
and
decl
mov
push
add
add
popa
add
adc
call
mov
iret
push
popf
push
add
loop
lds
imul
xor
pushl
add
cmp
mov
incl
push
mov
jnp
add
fidivrl
sti
pop
cmp
mov
js
test
and
jmp
add
pushf
clc
or
aas
dec
cmc
aaa
out
pushf
daa
add
cltd
std
sbb
add
cli
pusha
add
pop
fwait
push
aad
mov
adc
out
addl
add
add
sub
test
jl
pushf
xchg
jne
sahf
dec
jno
pushl
add
imul
dec
push
dec
dec
movsl
add
aaa
mov
add
mov
pushf
repnz
add
decl
hlt
fcmovu
xor
add
js
xlat
cmpsb
add
mov
push
enter
jnp
add
add
jne
daa
add
sub
pop
push
add
lods
xchg
in
xchg
adc
cmp
insb
cmp
ficoml
fdivs
add
mov
jno
ljmp
or
shrl
add
xor
call
jae
call
add
push
add
sbb
add
popa
add
or
jbe
add
aam
ds
add
add
incl
imul
or
test
add
pop
add
cmovbe
inc
add
dec
xchg
imul
inc
add
movb
cmpsb
add
negl
add
movl
sbb
pushf
inc
add
ficoms
incl
jmp
add
push
pop
in
sub
jo
inc
add
mov
add
rorl
repnz
movsl
add
movb
add
xchg
sub
xchg
enter
nop
and
aas
inc
add
decl
inc
add
out
mov
jle
adc
lcall
decl
add
out
mov
data16
lcall
xor
sti
js
aad
lahf
xchg
adc
cmp
jmp
loope
inc
add
add
xor
inc
add
mov
xchg
stos
sub
mov
addl
mov
add
jmp
add
sbb
add
add
out
jecxz
roll
xchg
jle
test
xchg
dec
lods
les
sbb
cld
hlt
testl
jbe
int
movl
faddl
add
arpl
jmp
push
js
add
and
ljmp
add
add
mov
fs
ds
or
fisubrl
add
add
movsb
add
jne
outsl
jb
jge
ret
add
addl
push
mov
xchg
xchg
call
dec
sti
sub
cmp
add
iret
pop
push
jmp
jge
rorb
lahf
push
or
add
sub
shrb
cld
lret
cmpsl
add
xchg
lock
or
add
or
and
dec
ss
rolb
scas
test
in
sbb
ja
or
add
add
sti
add
jmp
add
pop
iret
and
call
push
scas
popf
addl
cwtl
test
add
insb
pusha
add
dec
xchg
push
add
push
push
lock
mov
add
add
pop
mov
add
jmp
fs
add
cli
sbb
adc
std
out
pop
and
popl
xor
incl
pop
scas
das
mov
cmp
mov
add
testl
pop
push
add
ss
movb
movsb
add
add
inc
add
shl
add
roll
js
pushf
pop
out
fucomi
pop
rcl
f2xm1
dec
xor
jmp
add
add
insb
cld
adc
jmp
mov
add
and
add
call
call
ljmp
add
sub
and
pushl
lcall
add
add
mov
stos
jnp
sub
add
int3
adc
jmp
add
mov
dec
cmp
cmp
add
mov
sub
cmp
push
add
inc
add
mov
sub
lods
jmp
add
movsb
add
add
lret
repnz
lcall
divl
push
add
inc
add
add
or
adc
incl
add
dec
pop
ret
lods
pop
jo
sti
aaa
fs
inc
add
add
incl
les
test
iret
jge
in
and
jmp
add
add
mov
test
ss
pop
ret
sbb
dec
fs
xchg
dec
rolb
add
shrb
mov
add
loope
cmp
call
add
xchg
xchg
aad
inc
add
mov
add
add
fldcw
add
add
add
inc
add
add
or
add
enter
push
push
add
xchg
or
xor
cs
add
sbb
add
pushl
std
fmull
adc
incl
cmp
add
aaa
jo
pushl
add
lcall
inc
add
xchg
icebp
or
add
mov
xchg
cmp
mov
rclb
decl
into
pop
xor
add
repnz
push
add
xchg
pop
push
jne
cmp
inc
add
pushl
add
lcall
stos
into
push
dec
ja
add
mov
push
fists
pushl
nop
ljmp
add
sti
insl
sbb
add
cmpsl
add
cwtl
mov
inc
add
adc
lcall
dec
lret
pushl
std
inc
add
sbb
add
push
popa
add
mov
add
sbb
mov
mov
cwtl
mov
data16
add
push
sub
mov
or
test
out
in
and
jmp
add
jmp
add
add
addb
leave
xor
fldl
add
dec
int
or
xchg
mov
inc
add
add
decl
sbb
testl
add
jle
divb
into
jb
fisttpl
cmp
add
pop
popf
xor
call
imul
add
ljmp
mov
add
pop
aaa
imul
push
or
jae
mov
add
add
out
dec
rcl
out
stc
adc
decl
scas
inc
add
and
dec
xor
incl
ljmp
jmp
cmp
xlat
add
add
push
cmp
add
stc
pop
mov
lods
pop
jnp
loopne
xchg
cmp
insb
xchg
cmpsb
add
adc
stc
jnp
pop
xor
call
pop
ret
sbb
add
jns
cmc
dec
fcoms
decl
push
cmpsb
add
adc
sahf
in
lret
dec
hlt
jle
add
add
mov
or
xchg
and
call
aam
add
pushf
cli
mov
ljmp
adc
ljmp
int3
xchg
sbb
sbb
add
push
pop
in
pop
mov
jmp
lcall
pop
jbe
stos
and
inc
add
sahf
addb
add
stos
xor
lcall
movb
aaa
ljmp
add
pop
jbe
add
decl
fldl2e
adc
jmp
jnp
push
into
mov
aam
addb
add
inc
add
add
sub
iret
cmc
pop
push
mov
test
addl
add
pushl
cli
fbld
adc
decl
sbb
decl
jbe
cmpsl
add
adc
ljmp
add
test
ljmp
inc
add
mov
incl
mov
inc
add
loopne
test
ljmp
test
dec
pop
xchg
adc
jmp
pop
add
add
add
add
popf
repz
arpl
pushl
dec
adc
lcall
mov
sub
sbb
pushf
add
call
pop
addl
sub
shrl
cs
bound
jnp
pop
add
add
pusha
add
inc
add
xchg
cmp
jle
cmp
mov
incl
add
adc
add
and
ficoml
in
out
dec
add
loopne
fsubl
add
lret
cltd
xchg
mov
add
dec
jp
inc
add
and
lcall
outsb
addb
fstpt
fwait
out
insl
or
cmc
lds
aaa
sub
sub
sahf
add
jg
cld
out
imul
nop
mov
cli
out
icebp
popa
add
rcrl
add
push
add
incl
add
sbb
add
cmp
shlb
add
clc
sbb
and
call
inc
add
out
pop
lcall
add
call
mov
dec
xor
push
add
inc
add
int
lcall
fnstsw
dec
xor
pushl
out
ljmp
js
xor
ljmp
repz
push
add
pop
and
lret
ss
push
add
or
jle
and
pushl
add
jmp
pop
loope
das
in
mov
addl
add
out
and
call
add
add
imul
push
add
ljmp
in
imul
add
add
es
mov
jb
incl
add
roll
or
add
outsl
movsb
add
xor
incl
call
add
dec
mov
add
jno
ljmp
add
add
jno
pushl
push
add
jo
incl
decl
ds
mov
add
push
test
and
fldcw
aaa
mov
ljmp
add
dec
outsb
pop
arpl
jp
add
sbb
mov
sub
jbe
add
and
sti
push
add
stc
add
add
or
dec
dec
test
scas
jno
fcomip
inc
add
add
mov
mov
add
rcl
test
movsb
add
lock
add
mov
ficoms
in
jl
mov
add
test
jnp
add
call
inc
add
aaa
push
add
movsb
add
inc
add
cmpsl
add
decl
out
movl
add
add
xor
cmp
ljmp
mov
add
jle
add
pop
xchg
add
decl
pop
rcrb
pop
repnz
add
and
pushl
ljmp
adc
ljmp
cmp
jo
lcall
add
gs
addb
lds
xor
fistps
cltd
stos
adc
cmp
cmc
cmp
decl
add
mov
add
outsl
in
sahf
push
std
jecxz
stos
mov
or
add
add
insb
jns
add
add
decl
roll
xor
add
add
sub
jge
add
outsl
jg
data16
lods
pop
fimuls
add
int
divb
push
or
int3
addl
xchg
lock
jne
adc
cmp
add
roll
add
popa
add
sbb
lret
push
add
hlt
and
sbb
rol
add
or
jo
ljmp
mov
add
add
inc
add
dec
scas
loope
jnp
and
incl
lea
aam
mov
mov
or
jmp
add
jge
add
rorb
xor
ljmp
xchg
sahf
mul
add
fdivrp
lods
jns
mov
imul
call
add
loope
fstpl
add
decb
scas
sub
cmp
add
and
inc
add
add
dec
addl
into
rclb
add
jecxz
cs
jmp
add
push
add
and
decl
sbb
push
sbb
add
add
out
fisttpl
fists
add
shrb
addb
adc
jmp
add
add
jne
add
lret
fdivrl
add
addb
je
xchg
jns
xlat
xchg
xchg
sbb
mov
cs
add
decl
jo
jns
or
cltd
ret
add
add
xor
push
add
adc
add
xchg
jb
call
sbb
cmp
add
adc
ljmp
imul
xor
incl
dec
int
nop
dec
mov
mov
xor
call
je
ret
add
add
adc
jmp
sahf
mov
mov
or
fptan
xor
xor
add
jg
dec
iret
jl
xor
jmp
add
add
mov
loopne
lahf
or
push
sbb
out
jle
aam
add
incl
les
das
sub
add
lret
cltd
xor
stos
jns
add
push
js
dec
sub
add
sahf
sbb
addl
out
cmc
inc
add
add
add
push
add
sub
inc
add
add
sbb
pop
fdivs
pop
mov
and
incl
add
sub
call
icebp
cltd
cmp
ds
add
cld
xchg
mov
jp
mov
add
decl
mov
xchg
loopne
mov
xor
out
adc
call
incl
pushl
add
decl
movb
jno
cmp
add
cmp
xchg
int3
stos
mov
add
add
stc
xor
ljmp
add
cmp
pop
mov
add
cs
add
fsubrl
mov
loope
cmp
out
cli
out
or
add
add
bound
jmp
pop
mov
add
and
ljmp
sbb
add
fcmovb
add
adc
cmpsl
add
pop
dec
ficomps
and
ljmp
push
adc
ljmp
mov
mov
lret
add
addb
add
add
sbb
addl
pop
icebp
sub
rcrb
add
add
cmc
inc
add
jns
adc
inc
add
mov
imul
lcall
adc
mov
mov
test
into
mov
xlat
cltd
mov
sub
xchg
push
add
addl
fs
add
ljmp
test
add
incl
jne
shl
add
xchg
cmc
loop
imul
push
cmp
inc
add
sub
mov
mov
call
push
add
fdivl
call
sti
sbb
add
data16
call
mov
add
or
dec
roll
add
std
xchg
mov
dec
dec
inc
add
pop
add
mov
movb
sub
xor
jmp
bound
incl
add
add
addl
add
pushl
cltd
or
jl
add
sti
ljmp
jl
add
aam
mov
sub
add
jmp
sub
gs
js
scas
pop
std
jbe
jp
add
cwtl
and
add
sbb
aad
add
lcall
rolb
lods
cmp
mov
add
pushl
dec
add
sbb
mov
add
xchg
xlat
out
imul
inc
add
mov
icebp
mov
jbe
pop
mov
jl
jle
movsb
add
pushl
mov
in
and
decl
add
jle
sub
jg
imulb
roll
inc
add
add
push
sub
adc
fbstp
in
divl
insb
push
add
testl
add
aas
adc
jmp
repz
pop
sub
sbb
call
aas
xchg
xchg
add
xor
ljmp
out
roll
add
mov
data16
cld
mov
mov
dec
push
add
cs
mov
xor
add
add
jg
cltd
sbb
lahf
jne
addb
pop
adc
add
jmp
add
mov
add
xchg
mov
add
movb
pusha
add
push
dec
es
mov
jno
decl
jl
add
add
fwait
std
push
add
inc
add
jmp
cmpsb
add
fstps
cmp
lcall
add
add
mov
movsb
add
jg
or
add
call
mov
dec
jg
add
xor
jmp
add
jnp
xchg
xor
mov
test
jmp
fcmovbe
std
movl
jmp
add
cmp
popa
add
popa
add
sub
jl
fsubrs
cmp
sbb
push
add
sub
cld
inc
add
pop
mov
add
jmp
inc
add
bound
fimuls
adc
push
mov
add
mov
add
inc
add
push
cs
add
sub
add
sub
repnz
daa
add
add
pop
inc
add
into
mov
repz
add
shll
add
cmpsb
add
out
ret
add
xchg
movsb
add
outsl
adc
jmp
jmp
add
lahf
lahf
sub
add
add
and
dec
dec
add
in
push
push
add
cs
mov
sub
mov
call
mov
and
decl
add
dec
test
pop
ja
add
or
pusha
add
cs
roll
add
mov
add
les
aam
add
fdiv
push
add
lcall
add
add
daa
add
add
mov
sub
add
xchg
cmp
sbb
inc
add
add
inc
add
push
add
inc
add
call
add
in
inc
add
add
aaa
add
dec
loop
or
lcall
leave
jo
jmp
dec
les
xchg
mov
sub
add
add
pop
add
add
sub
cmp
incl
data16
decl
call
add
adc
js
add
adc
add
adc
cli
sarl
lock
push
dec
dec
repnz
jns
shlb
lahf
test
add
inc
add
sti
mov
add
add
add
incl
add
pop
add
ljmp
psubd
pop
add
push
inc
add
add
pop
mov
add
out
iret
sti
data16
add
add
or
cs
repz
dec
pop
sub
mov
dec
pusha
add
js
add
fnstenv
dec
sbb
test
mov
gs
nop
fcomi
or
add
scas
jno
incl
add
pop
push
add
ds
ret
add
jl
cltd
pop
add
or
popa
add
es
inc
add
push
mov
add
cltd
mov
jne
cltd
insl
push
add
jp
add
push
shrl
popf
in
mov
add
sbb
or
inc
add
inc
add
lret
lahf
sub
add
push
push
mov
dec
push
test
outsb
rolb
js
jno
lcall
inc
add
mov
sbb
add
out
add
das
push
out
mov
xor
pop
mov
push
cld
out
sub
add
mov
jbe
or
cmp
jae
ljmp
call
cmpsl
add
das
jl
test
add
add
data16
push
pop
cmp
loop
adc
add
call
mov
push
add
iret
adc
rcrb
inc
add
pushl
add
add
decl
les
sbb
and
add
call
jne
sbb
add
popf
arpl
pushl
add
les
out
or
dec
bound
incl
lcall
addb
add
sarl
sbb
add
cmc
addl
loope
fists
add
xchg
addl
add
jns
stos
inc
add
add
add
and
lcall
imul
js
rolb
add
or
test
les
ss
add
call
add
add
push
add
addl
out
mov
add
ficomps
les
push
insb
fmulp
and
roll
xchg
sub
cwtl
cli
les
popa
add
jecxz
add
inc
add
dec
push
cmp
shrl
mov
add
add
add
sti
icebp
cmp
jo
call
decl
scas
xor
xor
ljmp
or
xchg
dec
out
mov
jecxz
lret
testl
add
sti
out
test
pop
and
jmp
bound
jmp
incl
xchg
and
or
add
inc
add
fstpt
jno
ljmp
lcall
add
mov
mov
sbb
pushl
decl
movb
add
adc
int
inc
add
mov
add
stc
mov
stos
jb
mov
cltd
cmpsl
add
int3
aas
push
dec
enter
add
mov
xor
jmp
add
and
pop
lret
insb
outsl
pusha
add
mov
test
mov
sbb
add
push
add
fwait
aam
jp
add
pushl
mov
add
add
xchg
inc
add
and
ss
add
add
dec
in
mov
or
ss
int
xchg
out
movsl
add
push
mov
pop
cmpsl
add
mov
repnz
add
sbb
lret
repz
sti
dec
hlt
hlt
int
iret
add
inc
add
cmc
adc
mov
lods
push
lret
lret
add
call
lcall
push
and
jmp
xchg
cmp
sti
push
loop
not
push
addb
add
add
in
or
add
data16
out
out
mov
fisttpll
outsb
add
add
add
movb
inc
add
and
jns
aad
and
in
fwait
pop
xchg
ljmp
std
mov
adc
jle
iret
call
fcoms
add
lcall
xor
call
test
sub
mov
inc
add
pop
sbb
mov
dec
jnp
add
bound
incl
dec
fwait
sbb
xchg
fisttps
test
sti
enter
sbb
ss
add
dec
cmp
cltd
lahf
cmp
incl
ds
insb
push
movsl
add
add
mov
adc
pushl
add
rcr
lds
jmp
add
add
cmpsl
add
add
pop
or
bound
in
adc
add
push
pop
les
and
cmp
inc
add
adc
incl
imul
push
mov
add
add
add
push
pop
xor
fdivs
add
add
sbb
std
pop
dec
test
mov
add
mov
fwait
addb
adc
sbb
add
jbe
in
inc
add
int
or
jb
jmp
cmp
add
xchg
jl
xor
ljmp
ja
add
add
jmp
add
outsl
xlat
les
flds
ljmp
dec
jne
js
xchg
flds
add
xor
or
mov
decl
sub
inc
add
ljmp
mov
add
jnp
insb
int3
fmuls
add
decl
or
or
sbb
dec
cmc
jno
inc
add
cltd
jp
out
jae
incl
add
bound
call
call
add
mov
add
push
xchg
cmpsl
add
cwtl
loopne
cs
and
incl
lcall
in
pop
adc
and
ljmp
int3
mov
push
sub
clc
cmp
add
imul
ja
add
scas
adc
call
ss
xor
incl
or
dec
sti
push
pop
xchg
ror
push
aas
lea
add
adc
addl
mov
and
mov
jge
pop
std
in
ljmp
add
or
inc
add
mov
and
pushl
add
pop
fists
add
call
add
sub
pop
add
ljmp
mov
add
call
loope
mov
push
imul
inc
add
push
cwtl
lods
add
jno
jmp
add
inc
add
or
fnstsw
push
roll
inc
add
rcll
add
or
xchg
roll
add
cmp
add
xor
dec
dec
lea
pop
pop
jne
pop
pop
movl
add
add
je
and
incl
add
mov
add
divl
cmp
add
in
pop
fdivrp
sub
divl
add
add
mov
add
int
add
loope
cwtl
test
lahf
rolb
xchg
fidivrl
add
add
push
adc
xor
into
test
mov
lret
bound
incl
add
lock
test
ljmp
pop
stc
push
imul
mov
sub
add
iret
in
out
leave
in
addb
icebp
add
mov
add
sbb
inc
add
sar
lds
pop
add
enter
ljmp
add
pushl
pop
rcll
incl
test
nop
lock
ret
add
push
add
testb
mov
sub
scas
lret
ljmp
sti
xchg
repnz
add
pusha
add
addl
decl
add
inc
add
mov
xchg
jle
loopne
mov
mov
bndldx
cs
adc
pushl
jno
sti
ljmp
push
add
mov
mov
push
add
jmp
sub
mov
fildl
mov
inc
add
inc
add
lods
or
div
test
hlt
cmp
cmp
fimuls
ljmp
add
add
inc
add
cs
inc
add
das
pop
dec
scas
rolb
pop
imul
test
int
push
mov
xor
lcall
std
aad
mov
stos
rolb
inc
add
pop
add
enter
fcoml
add
aaa
iret
jno
lcall
pusha
add
insl
loope
mov
inc
add
clc
sbb
call
mov
and
fcom
push
add
xchg
adc
sbb
add
xchg
arpl
incl
add
cmpsb
add
pushl
mov
add
decl
add
decl
inc
add
fisubrs
fcmovnb
add
mov
or
add
dec
mov
xchg
dec
ret
add
cmp
add
add
mov
cmp
jns
add
cmp
cli
bound
decl
sub
add
xchg
pminub
add
jb
incl
lcall
add
notb
add
mov
add
in
inc
add
in
mov
xlat
jmp
adc
lcall
mov
push
lock
jmp
test
add
int3
cmc
push
add
mov
popa
add
divl
call
adc
add
and
push
adc
call
lcall
xlat
icebp
inc
add
xor
mov
add
inc
add
pop
pop
aad
add
cmp
add
add
mov
inc
add
adc
decl
add
int
add
aam
add
cmp
icebp
push
jne
push
and
pushl
mov
mov
pusha
add
dec
pushf
jmp
add
add
arpl
incl
xlat
pop
mov
ds
add
scas
lret
sbb
mov
add
cmp
mov
add
out
sub
add
add
add
lods
loop
or
pop
imul
lds
or
decl
pop
inc
add
add
popa
add
out
dec
sahf
adc
push
adc
dec
bound
jmp
add
add
add
iret
enter
add
xchg
or
ljmp
dec
addb
sahf
ljmp
in
sti
out
das
mov
add
fsubr
clc
jle
jl
add
add
add
add
ljmp
lret
push
add
outsl
sub
mov
xchg
jp
add
aad
add
sti
adc
cmp
add
dec
inc
add
adc
push
or
add
test
add
jno
lcall
add
cwtl
cmpsl
add
je
aam
add
dec
stos
ljmp
and
xchg
mov
add
rorb
add
inc
add
imul
push
test
enter
xchg
xchg
nop
jo
jmp
sbb
add
xchg
ss
daa
add
mov
ljmp
sbb
add
jmp
mov
add
add
add
add
push
js
fdivl
dec
bound
call
add
push
mov
jo
fdivrl
adc
clc
push
mov
test
pop
decl
jecxz
or
pop
cs
aas
lcall
adc
mov
add
lods
in
jge
jne
imul
add
mov
add
pushl
add
decl
jl
add
mov
sbb
mov
lea
ret
add
inc
add
lret
out
jb
jmp
add
add
sub
sub
add
adc
decl
pop
add
add
bound
dec
outsl
les
jb
jmp
add
xchg
mov
add
adc
pushl
call
push
xchg
in
sar
repz
inc
add
push
xchg
cli
push
add
test
inc
add
arpl
inc
add
adc
add
add
icebp
int3
jae
ljmp
add
add
loope
std
nop
mov
add
incl
jle
cmp
xchg
out
daa
add
or
add
fisubrl
cmpsb
add
push
add
sub
jne
add
xchg
jnp
add
add
sub
cmp
add
sbb
add
sbb
repz
xchg
scas
dec
jae
call
dec
arpl
jmp
add
rcll
add
aas
insb
pop
add
addl
out
jb
mov
sbb
add
add
add
sbb
in
ljmp
pop
add
add
incl
mov
rcrb
popf
jle
add
lret
add
xchg
jb
jmp
pusha
add
add
fstp
roll
xor
leave
addb
cmpsb
add
js
sbb
add
mov
test
roll
add
call
jp
cld
cwtl
jo
jmp
add
ret
mulb
add
or
add
add
pop
xor
ljmp
dec
mov
cmp
stos
sub
add
stos
add
mov
add
add
cmp
mov
dec
and
pushl
add
pop
add
add
test
ljmp
push
inc
add
lds
adc
cmc
lahf
jae
pushl
adc
call
add
dec
add
jo
faddp
add
cmp
test
xor
add
jge
jg
add
stc
mov
push
cltd
push
add
push
cmp
and
ljmp
add
add
add
lcall
xchg
cmp
addb
loop
in
imul
rorl
imul
pop
push
add
pop
mov
cld
push
add
pop
xchg
or
add
popa
add
inc
add
mov
pushl
add
add
add
add
mov
ret
lret
fdiv
pop
in
ja
mov
fldt
fmul
xor
jmp
add
int3
add
ljmp
cmp
pushl
add
add
movsb
add
lahf
ficomps
dec
cmpsl
add
add
mov
add
and
lcall
jge
add
fmul
inc
add
out
pop
addb
add
data16
push
add
lock
in
aas
jns
and
incl
add
decl
add
jle
dec
mov
aam
add
push
je
lods
movsb
add
add
mov
xor
addl
loop
add
jmp
add
add
fidivl
add
jae
ljmp
pusha
add
sahf
adc
jmp
add
outsb
sub
inc
add
push
add
std
xchg
cld
js
ljmp
leave
xchg
fwait
adc
in
sbb
add
enter
add
test
jmp
in
mov
movsl
add
add
mov
loope,pt
inc
add
and
lcall
stos
sbb
push
mov
push
add
dec
push
add
xlat
mov
adc
pushl
incl
add
mov
test
scas
adc
decl
add
imul
add
xchg
mov
add
add
inc
add
add
rcrl
mov
sbb
add
add
or
pop
into
mov
dec
enter
in
decl
add
jb
pushl
das
push
mov
add
adc
call
nop
sub
inc
add
adc
jmp
add
std
std
sbb
mov
cltd
in
jge
sahf
sub
add
lea
add
mov
add
add
add
cmp
loope
lock
push
add
xchg
add
xor
pushl
add
add
call
movb
repnz
ljmp
jle
add
add
cmpsb
add
sub
jge
add
mov
cltd
sbb
add
decl
fildll
out
jge
add
leave
pop
jmp
push
add
adc
mov
popa
add
pusha
add
fbstp
pushl
add
int3
mov
js
add
sti
int3
dec
call
add
insb
pop
in
aas
fstpt
test
movsb
add
add
push
dec
cmpsl
add
or
rcr
mov
add
jo
decl
jmp
jl
add
popf
xlat
data16
inc
add
frstor
add
fcomp
ret
inc
add
push
add
xchg
mov
mov
push
inc
add
repz
add
mov
rolb
sbb
incl
add
cli
and
ljmp
jmp
xchg
cltd
stc
push
mov
push
add
or
cmpsb
add
inc
add
roll
ss
add
push
cmp
add
in
dec
jl
add
notb
jns
add
sub
pop
iret
fstpl
lods
jle
mov
cs
out
push
add
cmp
mov
sbb
icebp
fisubs
push
xchg
cli
cmp
ss
add
and
incl
xchg
aam
stc
pop
addb
add
mov
sbb
sub
cmp
or
mov
jge
add
jge
dec
fyl2xp1
cmp
add
cmpsb
add
divb
ds
add
out
push
fstpl
add
lahf
rorl
addl
insl
sbb
movb
sbb
stos
sbb
mov
jg
lods
outsb
and
inc
add
pop
pop
jecxz
add
add
lcall
jl
adc
lahf
jmp
add
xchg
cmp
je
add
lock
add
popl
add
jmp
mov
mov
xchg
inc
add
mov
or
jmp
pushl
add
outsb
and
add
push
add
add
pusha
add
pop
dec
jp
imul
cld
or
add
decl
cmp
push
pop
cmc
adc
call
in
js
xor
add
inc
add
jle
dec
or
ja
add
xor
call
mov
pop
ret
sub
add
dec
lahf
xor
jle
add
mov
mov
sbb
xor
jmp
add
data16
decl
mov
lcall
mov
add
add
push
add
xor
xchg
insl
cmp
xchg
cld
sahf
sbb
fcompl
pop
aam
xor
imul
inc
add
fdecstp
imul
pushl
aas
sbb
sbb
add
add
call
add
add
xchg
stos
xchg
addb
add
inc
add
dec
mov
punpckhwd
add
addb
iret
mov
xadd
aad
ret
add
shlb
fldt
xor
add
leave
out
aad
in
lahf
mov
add
pop
pop
pop
cmpsb
add
jno
js
add
call
in
imul
and
call
or
adc
incl
pusha
add
in
cs
out
fidivrl
sub
add
add
test
int
add
dec
divb
mov
add
add
xor
ljmp
inc
add
inc
add
add
push
bound
call
add
add
hlt
xchg
and
pushl
inc
add
in
iret
mov
adc
out
cmpsl
add
lock
add
test
loope
dec
in
jecxz
mov
stos
aas
movsb
add
loopne
sbb
and
ljmp
jns
sub
inc
add
pushf
les
movl
cmp
stc
and
leave
inc
add
add
ja
push
cltd
lds
test
add
add
xchg
jg
add
push
loop
lea
roll
jg
add
xor
jge
fisttpl
decl
add
mov
dec
imul
inc
add
and
call
mov
push
add
testb
add
cmc
shlb
cmp
addl
push
out
insb
jae
jmp
add
ret
test
sub
jmp
pop
xor
fnstsw
xor
incl
into
lahf
xor
add
jb
call
inc
add
pop
fidivl
ljmp
push
add
mov
mov
icebp
and
incl
jb
ljmp
cmp
mov
test
clc
sub
add
mov
fldl
add
lea
decl
add
inc
add
loop
stos
addl
add
add
aad
stos
lea
roll
add
cmp
and
add
pushl
add
and
decl
aaa
clc
mov
cli
repnz
xchg
fildl
add
loop
fdivr
rorl
jns
add
adc
add
ljmp
add
mov
add
xor
incl
add
addl
adc
call
add
in
inc
add
add
add
add
insb
cld
test
outsb
movsb
add
stos
push
inc
add
adc
add
add
int3
je
add
add
shrb
mov
push
add
fistpl
xor
cmp
bound
call
xor
ljmp
add
add
add
stos
and
pushl
incl
decl
arpl
jmp
add
lds
cmp
stos
addr16
sbb
shll
add
xchg
incl
pushl
push
sub
add
mov
movb
add
xor
clc
adc
cmp
inc
add
push
bound
decl
xchg
jo
mov
ljmp
pop
ljmp
shll
or
push
add
movsl
add
fcmovbe
fsubl
jle
es
mov
dec
cmp
ja
add
lahf
mov
jg
les
mov
movb
add
pusha
add
cmp
sub
sbb
iret
sbb
push
add
sub
add
aam
or
add
sbb
punpcklbw
incl
cmpsb
add
daa
add
add
sbb
add
mov
xchg
add
mov
fdivrs
push
or
js
add
dec
mov
pop
lock
decl
or
stos
add
incl
add
ljmp
and
ret
sti
ja
outsb
jne
add
add
add
call
fldl
add
dec
addl
jo
jmp
inc
add
hlt
ret
leave
dec
iret
inc
add
inc
add
call
add
jecxz
push
add
sbb
cmpsb
add
call
js
add
add
mov
add
addb
dec
inc
add
add
addl
push
pop
jns
add
push
xchg
mull
add
mov
push
add
and
add
add
dec
xchg
push
movsl
add
mov
add
add
arpl
decl
push
mov
xor
jmp
add
push
add
sahf
data16
enter
add
and
popa
add
jb
call
push
lods
das
mov
dec
and
dec
stos
adc
mov
mov
mov
add
xor
call
lcall
xchg
xchg
pop
mov
push
mov
add
test
add
scas
xor
incl
add
into
outsl
out
sub
cmp
frstor
push
int3
out
mov
jae
ljmp
and
std
neg
fisubrs
lcall
icebp
addl
add
lcall
xor
add
fisubs
add
inc
add
test
daa
add
cmp
add
xchg
push
xor
ljmp
add
push
add
aad
mov
adc
jne
es
jp
push
jb
pushl
jne
out
shlb
jmp
add
adc
pushl
cmp
add
mov
add
loope
dec
xchg
mov
add
jnp
add
adc
mov
add
adc
jmp
add
stc
sbb
les
jo
dec
leave
inc
add
popa
add
and
jnp
push
or
mov
js
cmp
add
add
xchg
outsb
bound
call
jg
pop
xor
lcall
call
push
add
and
out
pop
into
loope
adc
jge
add
icebp
adc
call
jnp
add
call
add
adc
rcrl
adc
call
lods
sub
and
std
popf
test
jae
jmp
add
xor
sub
out
jne
sbb
mov
add
out
cwtl
lahf
sbb
mov
dec
jg
lea
add
into
pop
mov
lods
xchg
repz
fcmovu
pushf
scas
mov
lret
call
aam
or
add
leave
pop
add
loope
bound
cmp
add
add
push
xor
add
add
and
push
add
mov
add
movl
add
xor
cmp
add
push
add
xlat
fisubs
ds
rclb
add
scas
sub
sbb
add
add
add
xor
add
fidivs
add
mov
ja
sti
mov
add
add
adc
cli
and
mov
jecxz
sbb
popf
inc
add
cli
sbb
test
movsl
add
add
dec
mov
add
add
sbb
inc
add
scas
xor
lcall
in
fnstsw
add
sbb
xor
pushl
pop
add
fsubrs
push
add
and
es
inc
add
or
add
arpl
jl
rcll
cmp
add
xchg
in
inc
add
mov
xchg
lahf
push
dec
or
fidivl
lcall
add
ljmp
add
add
lcall
addb
lahf
mull
movsl
add
cmp
add
dec
outsl
repz
pop
add
jmp
add
mov
mov
inc
add
and
add
popa
add
aad
sbb
pop
push
pop
add
mov
add
jp
dec
inc
add
jecxz
stc
jge
outsb
pop
in
in
mov
sbb
add
mov
xchg
mov
cmp
test
sub
add
add
jno
inc
add
xlat
add
leave
lock
inc
add
jp
add
mov
inc
add
in
cmc
jecxz
loope
xor
inc
add
cld
fs
test
jmp
add
fdiv
mov
mov
add
fisubs
stos
out
insb
xchg
cmp
mov
add
dec
mov
push
jbe
cli
cmpsb
add
lahf
or
ficompl
movb
mov
add
ljmp
xchg
aas
or
add
pop
sub
cmc
dec
popl
in
xor
inc
add
push
cmp
add
ret
add
rolb
cltd
xchg
or
add
push
add
addl
in
inc
add
iret
bound
incl
add
adc
ljmp
scas
iret
add
add
repnz
xchg
add
inc
add
into
inc
add
sub
xor
add
lea
add
mov
add
add
shr
das
cmc
or
cmp
insb
fdivrl
dec
xor
xor
add
add
adc
add
add
cs
pop
pop
movsb
add
and
stc
ficoml
lcall
shr
iret
inc
add
inc
add
stos
cmp
add
add
xchg
inc
add
test
enter
and
pop
push
mov
add
lcall
add
add
out
xlat
cmpsb
add
push
add
xor
adc
mov
inc
add
adc
add
jmp
cmc
mov
pushl
add
add
xchg
out
adc
call
ljmp
shlb
add
ret
add
mov
mov
add
outsl
ljmp
add
xchg
xchg
enter
add
loope
dec
dec
jae
lcall
add
xrstor
push
add
arpl
decl
and
jle
add
xrelease
add
xor
push
movb
add
or
jae
mov
lods
std
cli
push
add
fadds
lcall
mov
mov
iret
mov
add
mov
dec
cmp
cmpsb
add
cmpsl
add
xor
add
push
inc
add
jns
add
and
lcall
cmp
and
call
loop
and
jmp
add
adc
jmp
add
mov
mov
pusha
add
sub
pushl
call
add
roll
mov
call
jmp
fxam
add
add
dec
mov
push
sub
mov
add
add
lret
test
xchg
testb
fistpll
jne
ja
iret
iret
pop
add
jmp
hlt
addb
add
in
mov
lret
inc
add
call
add
ret
add
jg
xchg
sahf
and
and
jmp
ret
mov
add
cli
leave
bound
dec
mov
cld
xor
cmp
loopne
sbb
or
stc
ja
add
add
dec
shrl
aaa
xchg
push
xor
call
add
add
hlt
imul
xor
mov
add
and
xor
jmp
add
add
lret
jb
call
iret
lods
outsb
xlat
das
push
add
xchg
xor
jmp
loop
movsb
add
outsl
mov
push
cmpsl
add
call
jl
fimull
add
call
rcrb
loope
arpl
call
mov
add
cmp
cmpxchg
and
decl
scas
push
xchg
lds
ja
stc
outsb
dec
and
pushl
add
cs
fcmovnu
sbb
inc
add
stos
jae
jmp
push
jns
add
in
sub
je
add
add
mov
add
push
add
push
add
out
or
in
test
sarb
add
scas
fnstenv
fdivs
add
cld
xchg
jmp
add
loopne
push
out
call
add
add
add
lds
movsl
add
sbb
add
call
movsb
add
add
les
mov
inc
add
sub
movsl
add
int3
pop
add
out
add
call
dec
pop
inc
add
call
inc
add
iret
shll
aad
add
add
mov
and
pushl
add
mov
add
mov
aam
in
pop
insl
xor
decb
movb
imul
les
mov
pop
shl
or
movb
add
stos
xlat
test
int3
mov
xchg
testb
add
loop
and
add
rolb
sbb
xlat
mov
add
mov
ds
add
test
call
add
mov
add
ja
ret
add
call
add
js
iret
into
push
add
fists
push
xchg
dec
sub
mov
add
daa
add
loope
mov
lcall
fisubl
movl
movb
cwtl
daa
add
or
add
fidivl
fnstsw
fdivrs
lcall
add
fildll
jl
add
add
jnp
add
call
sbb
add
dec
sbb
add
mov
dec
push
cmp
adc
movb
addl
test
fbstp
icebp
cld
in
enter
add
jae
jmp
inc
add
add
dec
and
in
outsl
add
sub
mov
js
add
decl
push
add
ret
add
mov
push
add
fwait
repnz
mov
loop
js
add
decl
ret
add
add
add
ret
add
push
add
mov
push
add
scas
loopne
add
inc
add
jp
pop
ds
lea
add
ljmp
cmc
sub
add
decl
pop
ja
add
rolb
add
sbb
lcall
ja
add
add
into
lahf
jl
pop
add
add
add
add
xor
call
out
loopne
mov
out
movsb
add
add
add
sub
add
sub
mov
mov
push
add
insb
mov
sub
ljmp
or
es
jne
push
in
jle
jb
pushl
ljmp
adc
ljmp
fwait
push
test
lods
fnstcw
add
stos
cmc
mov
mov
lcall
add
movsb
add
jns
pop
pop
dec
add
cld
xchg
lods
dec
dec
stos
lock
ljmp
out
shl
add
dec
pop
add
dec
mov
jecxz
scas
add
add
mov
rcrb
enter
inc
add
incl
ljmp
das
ljmp
imul
add
xchg
pop
xor
add
aas
or
add
or
sub
add
add
rcrb
add
test
mov
adc
xchg
das
dec
adc
xchg
gs
add
add
mov
jo
push
nop
cli
dec
cmp
jne
add
ficoml
add
cmpsb
add
addl
add
add
mov
adc
addl
add
add
jmp
mov
loop
jns
add
lods
ret
add
aaa
loop
out
adc
add
dec
addb
add
arpl
lcall
push
xor
test
loope
add
incl
cmp
cld
dec
out
adc
jns
add
scas
dec
popf
movl
in
or
into
neg
outsl
xor
incl
add
cs
mov
sbb
add
add
xchg
inc
add
inc
add
add
incl
call
outsb
cmp
cmp
inc
add
sbb
icebp
insl
cmpsb
add
sub
rorl
push
repnz
pop
fidivrl
jne
loopne
dec
addb
stc
inc
add
aas
jmp
in
jecxz
push
push
addb
dec
jno
fcompp
mov
jmp
add
insl
push
add
pop
popl
stc
movsl
add
and
ljmp
inc
add
jp
negl
pop
sti
popf
les
fdivs
add
jo
inc
add
leave
insl
outsl
lret
or
out
call
aam
outsl
push
xchg
iret
test
add
decl
add
inc
add
test
std
sub
add
cwtl
mov
add
ret
call
cld
jbe
or
rolb
loop
mov
cmc
mov
add
mov
add
dec
push
movsb
add
add
imul
add
add
jnp
out
pop
lods
jp
mov
and
ljmp
pop
nop
jnp
dec
sub
add
add
daa
add
popf
in
ret
idivb
cmp
add
imul
and
ljmp
ja
add
add
xor
add
ljmp
popa
add
cmpsl
add
add
sahf
sbb
add
loop
dec
xchg
roll
xchg
out
pop
nop
inc
add
add
mov
insl
mov
sbb
ljmp
mov
mov
sti
ret
iret
jbe
add
add
addb
lret
dec
popl
inc
add
add
addl
in
jge
push
addb
addl
call
sbb
mov
insl
or
or
mov
xchg
mov
add
loope
iret
mov
xchg
jmp
add
scas
in
stc
adc
jmp
jae
in
clc
mov
adc
ljmp
jle
add
jge
dec
fistpl
lahf
insb
mov
add
icebp
ljmp
scas
dec
dec
add
jmp
call
roll
out
addb
mov
push
fcompl
add
lcall
add
jle
bound
notl
xchg
fnsave
lahf
jge
pop
int3
add
jecxz
sti
mov
add
addb
inc
add
inc
add
add
jnp
add
pop
add
dec
popf
add
mov
push
pop
dec
mov
mov
add
sub
add
mov
add
mov
mov
add
movsl
add
add
pop
add
adc
mov
cmp
inc
add
nop
ja
add
mov
aas
sahf
fcmovnbe
xor
jle
popa
add
fidivs
dec
mov
in
hlt
leave
mov
ljmp
test
add
popa
add
cld
movsb
add
push
mov
incl
add
test
mov
sbb
sub
sahf
into
pop
ljmp
decl
iret
in
lcall
sub
sub
mov
jecxz
aaa
shr
lret
jl
out
mov
inc
add
add
lods
dec
dec
std
sbb
add
mov
add
sbb
aam
mov
add
dec
add
cmp
fadds
sub
mov
movb
cmp
pop
imull
xor
dec
inc
add
add
outsl
inc
add
push
fsin
adc
lahf
jnp
aam
shll
mov
js
lods
stos
sub
dec
mov
add
jno
call
stos
cmp
add
popf
cltd
lret
inc
add
iret
add
dec
jmp
ja
and
lcall
out
addb
inc
add
pop
dec
and
push
sub
add
stc
arpl
call
inc
add
jne
and
lcall
xor
pushl
add
pushl
stc
fisubl
std
lcall
movb
inc
add
aaa
aaa
pop
cld
add
ljmp
cmp
xchg
aas
fmull
add
stc
mov
lret
inc
add
popf
add
call
lock
call
pushl
rorb
cmc
pop
imul
push
push
mov
fnstenv
xchg
sbb
add
add
dec
and
dec
lcall
xor
ds
xchg
loop
insl
data16
cmpsl
add
add
add
or
jmp
addb
lds
mov
or
fmul
clc
pop
lods
out
adc
pushl
sti
movsb
add
xor
lods
xchg
jp
dec
ret
lods
push
inc
add
push
add
add
add
add
xor
jmp
add
push
das
out
xlat
jg
inc
add
mov
js
popa
add
into
out
adc
ljmp
add
add
cmp
incl
sub
call
mov
inc
add
scas
pop
les
sbb
or
xchg
test
pop
adc
call
mov
fidivrl
add
nop
xchg
popa
add
add
pop
test
xchg
outsl
xchg
cld
movb
add
popf
pop
inc
add
cld
dec
pop
mov
lock
decl
add
mov
mov
pop
cmpsl
add
lds
mov
add
xchg
loopne
mov
cmp
popa
add
inc
add
test
pop
sub
inc
add
mulb
add
addl
ja
add
jmp
cmp
add
in
or
push
pop
add
lret
sti
mov
add
adc
call
jnp
js
add
test
int
pushf
dec
test
lods
xor
incl
fstp
aas
call
xchg
test
cld
add
pop
jl
xor
pushl
cmp
add
inc
add
push
add
add
adc
in
dec
pop
hlt
cltd
hlt
ret
add
out
mov
add
lea
stos
lret
dec
pop
pop
daa
add
sbb
add
mov
mov
cmp
add
and
pushl
lcall
roll
add
pushl
ljmp
jle
in
stc
icebp
xchg
inc
add
push
jmp
addl
add
add
xchg
bound
jmp
add
pusha
add
call
fsub
add
paddsb
add
add
data16
mov
add
decl
xor
and
lcall
not
leave
pop
in
jle
add
add
push
add
pop
addl
dec
pushf
adc
fildll
pop
pop
xchg
aam
fwait
cmpsb
add
cmpsl
add
movsb
add
add
pop
jl
adc
add
add
dec
loopne
imul
dec
outsl
xchg
cmp
inc
add
sti
stos
clc
add
or
add
mov
mov
xlat
push
jmp
add
inc
add
adc
add
scas
inc
add
mov
push
nop
aam
add
cmp
stc
lea
dec
scas
inc
add
mov
xlat
and
dec
jnp
add
jl
add
mov
lcall
mov
or
add
mov
out
xchg
inc
add
cmp
aad
add
ljmp
add
lcall
add
outsb
push
inc
add
add
sub
arpl
pushl
jae
inc
add
push
fmul
pop
fldenv
or
add
decl
mov
mov
xor
pushl
add
dec
je
sub
decl
call
or
push
xchg
jp,pn
add
add
pushl
lock
add
cmpsl
add
add
mov
hlt
sbb
call
fldl
lcall
fistpl
ljmp
add
mov
cmp
mov
addb
add
cwtl
pop
pop
divl
test
mov
lcall
repz
add
xlat
or
sbb
addb
add
pushl
mov
add
ret
add
add
cltd
pop
mov
testb
jno
jmp
add
add
pop
add
add
das
repz
call
add
sahf
mov
cltd
addb
add
fucomip
mov
bound
pushl
add
imul
add
or
add
jmp
xor
loope
rorl
lret
pop
cmc
or
sub
outsl
out
push
add
pop
adc
call
add
dec
dec
push
add
mov
lods
push
add
lret
lcall
aas
sbb
add
mov
negl
add
add
add
fbld
add
into
push
pusha
add
jmp
add
xchg
scas
push
jge
add
mov
lods
mov
add
out
out
movsl
add
mov
push
add
movsb
add
popf
dec
popa
add
dec
movl
jmp
decl
loopne
add
push
add
add
add
add
mov
xchg
pop
cli
jg
jb
jmp
add
or
add
sbb
add
mov
js
add
jmp
call
lcall
add
sbb
add
js
fnstsw
push
add
pop
aad
add
add
add
add
imul
add
nop
push
push
add
sti
push
stc
mov
dec
addb
inc
add
add
adc
jmp
or
divl
into
in
inc
add
add
ret
add
lret
test
cmpsb
add
popf
inc
add
lods
xchg
jge
push
add
jo
dec
in
or
incl
call
add
leave
adc
inc
add
add
and
adc
jmp
add
lods
pop
std
arpl
pushl
mov
add
add
mov
arpl
jmp
xor
add
xor
jmp
add
addb
push
add
les
fstp
push
add
stc
dec
mov
add
add
fldt
add
pop
lcall
and
imul
ljmp
and
add
xor
decl
cld
mov
inc
add
sub
add
add
xchg
xchg
xor
incl
add
add
add
add
jp
adc
call
test
sub
add
pop
mov
out
call
popf
icebp
lcall
divl
dec
gs
push
add
pop
jg
ret
push
cli
imul
add
test
add
add
adc
lcall
pusha
add
sub
mov
pop
ljmp
add
adc
out
ss
ds
mov
xlat
fs
xchg
jae
decl
add
xchg
sub
aaa
push
and
fisubl
add
pop
rolb
dec
pop
adc
gs
push
add
cltd
xchg
xor
shll
loop
inc
add
roll
icebp
fldl
mov
add
xchg
leave
or
pushf
stos
movl
mov
adc
lcall
rcll
pushl
jmp
add
fwait
lret
pop
push
add
popa
add
jecxz
sti
pop
pop
scas
stos
add
add
jl
adc
pushl
cwtl
out
sbb
fs
scas
sub
pop
add
add
pop
mov
sbb
rcll
cmp
push
push
mov
add
adc
ljmp
add
add
cmpsl
add
add
jle
les
xor
jmp
mov
into
xor
ljmp
fmull
jbe
add
lds
push
mov
and
clc
mov
shlb
inc
add
loop
jmp
movb
stc
scas
xor
lcall
pop
sbb
or
add
loop
lahf
fxam
add
push
or
add
jmp
das
ljmp
jmp
mov
mov
add
pushl
add
addb
adc
add
add
pushl
repnz
dec
mov
addl
add
fwait
lcall
adc
dec
mov
dec
jb
call
lcall
add
cmp
or
out
addb
add
popa
add
das
cwtl
xor
push
add
dec
mov
inc
add
popa
add
sbb
push
ret
daa
add
dec
fnstenv
call
testl
dec
xchg
xchg
add
call
dec
jp
add
in
push
sub
xor
fidivrs
lret
fiaddl
pushf
cli
jle
pop
adc
incl
add
adc
lcall
repnz
dec
out
scas
enter
mov
cmp
pause
bound
jmp
adc
decl
add
ja
push
add
dec
xor
call
leave
std
cmp
add
pop
dec
sub
inc
add
gs
add
fnstenv
sub
lcall
test
add
and
in
cli
add
pop
insl
inc
add
test
add
stos
lock
pushf
ds
lock
call
add
mov
and
cmp
add
pop
std
je
add
add
mov
mov
adc
add
add
add
add
add
add
dec
sbb
xchg
in
addl
inc
add
packuswb
jbe
add
shll
addb
add
jo
lcall
add
dec
mov
jmp
add
rolb
mov
rclb
jns
pusha
add
movl
mov
jo
lcall
int3
add
jmp
add
add
pop
push
movl
ror
cmp
add
aad
pop
adc
add
mov
add
scas
xor
call
sub
stos
cmp
add
sti
push
daa
add
add
call
push
add
push
cld
add
mov
push
add
and
call
divl
cmp
dec
sbb
pushf
lods
sahf
arpl
dec
add
lcall
hlt
mov
in
fadds
add
jmp
cmp
add
lods
aam
add
add
jp
add
jmp
add
push
call
movb
clc
sbb
pop
or
jmp
add
jmp
add
push
add
xor
lcall
popl
add
out
push
add
push
add
addl
add
jne
add
add
in
roll
add
int
daa
add
jnp
add
jnp
xor
lcall
cmc
shll
inc
add
add
enter
add
lret
adc
dec
pop
add
addl
daa
add
mov
add
outsb
je
daa
add
cld
test
inc
add
cwtl
int3
or
lcall
je
add
mov
mov
sahf
aas
iret
mov
ror
and
mov
add
mov
test
add
mov
dec
movsb
add
adc
decl
jbe
xor
ljmp
out
or
test
into
mulb
ljmp
add
es
mov
sub
sub
push
hlt
out
fldenv
add
adc
out
push
add
test
fists
push
push
add
scas
les
out
je
cld
mov
xor
std
cwtl
aam
outsl
cmc
dec
adc
clc
loop
sbb
mov
add
sub
icebp
push
jge
add
and
xor
mov
add
cmp
movsl
add
add
lods
ja
imul
ljmp
dec
leave
jl
movsb
add
mov
lcall
scas
cmp
fistps
test
push
mov
aam
mov
ljmp
inc
add
xor
add
pop
add
add
dec
xchg
fnstcw
fisttpll
add
adc
add
incl
ljmp
add
stc
sti
inc
add
addb
and
decl
popa
add
scas
lock
xchg
roll
add
dec
sbb
incl
mov
rcrl
and
cld
sbb
addb
inc
add
and
jmp
pushl
jmp
add
or
dec
mov
add
lock
loop
add
ljmp
fistps
push
lock
loopne
popf
mov
add
add
add
mov
add
out
xor
jmp
pop
add
stc
push
add
rolb
add
add
xor
decl
add
push
add
nop
popf
pop
mov
dec
inc
add
loope
clc
data16
jl
lea
add
cmp
rolb
in
in
lret
push
inc
add
add
jae
decl
jnp
push
add
testb
mov
and
incl
ljmp
add
rorl
data16
mov
add
fistpll
jmp
add
mov
data16
push
mov
aam
add
outsl
fadd
add
and
in
inc
add
mov
add
lahf
cmp
add
mov
mov
ljmp
add
aam
add
fs
add
xlat
push
lret
adc
call
fistps
add
and
incl
cmp
push
add
push
pop
lcall
call
add
lret
aad
jg
jg
pusha
add
and
jmp
xor
ljmp
call
decl
sub
add
sub
out
push
add
push
mov
mov
addl
add
roll
push
bound
decl
sbb
call
stc
add
pop
rolb
add
incl
mov
repz
test
int3
pop
addb
adc
incl
add
aas
insb
push
add
lea
add
das
sub
add
fdivl
jnp
pop
lcall
call
pop
fists
pop
inc
add
movb
add
test
add
xchg
loopne
jp
loope
outsl
mov
sub
push
add
mov
lret
int
add
scas
addl
add
and
pushl
jg
cmovp
cmpsl
add
and
ljmp
out
hlt
or
adc
xlat
into
jne
add
jns
inc
add
add
add
fistl
adc
lcall
stc
cltd
dec
push
add
jmp
pop
push
add
out
mov
mov
sub
les
inc
add
ljmp
add
pop
add
dec
jmp
or
add
lcall
add
push
push
daa
add
xchg
out
sbb
xchg
pop
cli
sahf
push
add
and
outsl
lahf
rolb
add
add
inc
add
fdiv
test
inc
add
pusha
add
rolb
cmp
arpl
decl
add
cli
ret
add
add
hlt
aad
add
inc
add
lods
and
fdivrs
cld
xchg
lods
or
add
xchg
or
inc
add
shr
adc
jmp
ja
add
clc
outsb
ret
add
add
jno
mov
rcrl
dec
cs
mov
add
das
pop
pop
and
ljmp
jbe
sahf
ljmp
jmp
call
sbb
cmp
jecxz
lahf
dec
stos
pop
jo
jmp
add
les
mov
inc
add
mov
mov
add
xchg
xchg
cmp
add
adc
aas
mov
bound
pushl
repnz
jmp
inc
add
mov
mov
decl
addl
fildll
ds
inc
add
inc
add
adc
stc
and
ljmp
hlt
rcll
push
jbe
or
insl
cld
adc
decl
xor
in
push
jo
fdivl
movsl
add
add
cmp
cltd
outsb
fldt
jl
add
cmp
sti
scas
and
jnp
cmp
add
add
imul
inc
add
dec
outsb
mov
outsb
dec
sbb
icebp
daa
add
and
pop
mov
add
out
or
incl
incl
cmpsl
add
mov
movb
adc
incl
shll
add
mov
push
add
daa
add
add
mov
add
cmp
hlt
in
xchg
pushf
or
add
push
mov
jns
dec
mov
lcall
xchg
push
jl
popa
add
jbe
xchg
add
sti
dec
sub
int3
stos
jbe
add
add
adc
cli
and
jmp
add
mov
add
add
add
add
pop
and
incl
decl
add
mov
add
xor
aad
add
cwtl
fdivl
jae
call
add
add
mov
scas
nop
aad
mov
add
call
mov
mov
xchg
cmc
push
push
add
addb
repz
cmp
pop
les
lds
sahf
stos
inc
add
movb
pop
enter
jg
cmp
jmp
add
imul
fcomp
push
les
std
mov
inc
add
js
add
iret
or
add
push
add
and
pushl
add
add
imul
push
add
fwait
push
aaa
adc
aas
push
setbe
shlb
nop
add
jle
add
mov
loope
in
fisubrl
add
adc
jmp
add
xchg
xchg
jno
incl
cmp
add
pushl
add
sub
inc
add
jmp
jmp
push
add
lds
cmc
pop
sub
add
out
and
lcall
xor
pushl
nop
sub
or
lds
mov
stos
sahf
push
xchg
cs
popf
insl
test
jb
cmp
xor
fdivs
enter
pop
jecxz
and
incl
lcall
add
out
add
add
mov
fiaddl
add
js
addb
je
out
ds
jg
add
out
ret
add
in
rdmsr
add
xchg
inc
add
sahf
add
add
inc
add
inc
add
test
lcall
jbe
shll
xchg
or
add
pushl
add
out
pop
cwtl
and
or
add
cs
les
rolb
pop
jo
jmp
lcall
mov
add
insl
mov
add
push
int
add
pop
movsl
add
sub
cltd
das
and
jmp
add
dec
cmp
add
aad
jns
pop
mov
push
and
cmp
jg
sbb
bound
call
mov
adc
decl
add
xchg
fcompl
rcll
mov
rorb
push
add
push
movsb
add
std
cmp
xchg
jno
ljmp
push
add
fldcw
cmpsb
add
out
cmpsb
add
adc
add
es
push
pushf
adc
add
jae
jmp
add
test
ret
add
daa
add
add
dec
popf
fnsave
add
roll
loopne
add
sbb
jl
add
inc
add
xchg
pop
lret
imul
fsubl
push
add
ret
add
add
aas
jp
leave
adc
call
add
scas
sbb
rolb
jmp
push
add
add
add
xchg
stos
sub
ffree
add
add
mov
int3
outsl
xor
call
xchg
add
jmp
add
add
mov
pop
stos
nop
cld
cmc
nop
mov
in
xchg
shrl
add
add
cmp
lcall
pop
lcall
add
or
pop
insl
aam
shll
ret
add
outsb
addl
imul
sub
dec
into
mov
scas
mov
add
cmp
popa
add
pop
call
call
add
cmp
dec
out
mov
aam
test
pop
lea
ds
push
add
fmuls
lea
testb
call
ljmp
inc
add
enter
ficompl
sub
pop
add
inc
add
in
fldcw
add
pusha
add
out
daa
add
and
out
cs
addb
add
adc
pushl
popl
add
mov
add
enter
xchg
xor
ljmp
add
add
xchg
jb
decl
icebp
add
xor
lcall
cmp
add
sub
xlat
pushl
add
add
add
cmp
jl
jno
decl
add
lods
inc
add
mov
push
add
imul
and
pushl
ljmp
add
ljmp
std
out
rolb
inc
add
add
push
add
loopne
icebp
dec
fstl
sub
and
ljmp
push
pop
test
rolb
add
sbb
adc
ret
imul
add
mov
jnp
xchg
cmp
in
cmpsb
add
outsb
imul
push
jnp
add
dec
push
add
jg
xor
decl
push
add
out
inc
add
addl
stc
pop
movb
sub
add
stos
push
dec
adc
add
sahf
push
add
add
js
add
lock
inc
add
add
cmpsb
add
push
dec
outsb
pop
mov
sub
jmp
add
lcall
je
push
fiaddl
add
push
add
movl
cli
xor
ljmp
cmc
addl
addb
add
in
xor
jmp
add
xchg
fidivl
add
lret
add
addl
das
mov
ficompl
jno
out
xor
pushl
add
dec
adc
decl
stos
addl
push
add
dec
imul
out
fsts
ljmp
test
cli
adc
add
or
in
outsb
add
decl
in
mov
fmulp
jle
arpl
push
cli
and
jmp
add
mov
in
fidivs
push
xor
add
addl
cmp
add
movsl
add
repnz
test
dec
call
mov
inc
add
mov
mov
sub
iret
insb
dec
out
nop
sbb
pop
fisttpll
clc
js
add
sub
jmp
add
js
add
sbb
fwait
dec
lahf
and
divb
outsl
fwait
rcr
int
loope
mov
filds
idivb
js
sbb
add
push
incb
cmc
and
decl
add
fisttpll
sbb
jmp
stc
jl
add
push
add
mov
sbb
and
lcall
push
mov
cmp
mov
add
cmpsl
add
dec
daa
add
add
data16
add
xchg
fcoml
xchg
movb
add
sub
movsb
add
add
repnz
mov
je
stos
mov
lcall
add
mov
pushl
xchg
adc
pushl
add
test
aaa
movsb
add
inc
add
fidivs
add
pop
add
add
sbb
cwtl
push
add
add
add
and
push
or
jne
mov
decl
faddp
add
data16
add
lods
mov
add
and
jp
add
addl
add
into
push
add
ss
push
dec
dec
or
ret
add
add
bound
incl
jae
in
dec
jae
call
and
pop
dec
push
in
jae
incl
call
add
sbb
add
cmc
sub
sbb
add
add
ret
add
lret
test
out
jo
decl
mul
add
add
add
scas
popa
add
jmp
jg
add
repz
add
pop
dec
cmp
and
call
inc
add
push
xor
decl
and
ljmp
movsb
add
call
addb
add
pop
lcall
add
add
inc
add
jae
jmp
lods
mov
jecxz
and
call
pushl
adc
lcall
addb
jecxz
jbe
adc
add
add
and
clc
ret
add
jo
fdivrs
add
sbb
mov
jae
dec
xchg
push
ds
lret
adc
pushl
or
pop
enter
addl
cmp
add
loope
pop
add
dec
mov
cmp
imulb
mov
call
je
add
cmp
add
out
fstpt
jle
mov
out
push
add
mov
push
add
aad
jp
jl
add
add
or
outsb
sub
sbb
cltd
pushf
decl
mov
sahf
imul
add
movups
dec
jge
add
test
add
add
add
jno
cmp
inc
add
call
add
push
hlt
cmc
pop
add
pushl
add
iret
bound
incl
rorl
add
adc
pop
mov
add
push
into
mov
push
pop
lahf
inc
add
mov
mov
mov
add
add
inc
add
push
add
adc
add
insl
mov
inc
add
loopne
out
iret
roll
les
lea
xlat
sahf
push
ret
sub
add
test
jns
mov
mov
mov
cmp
jnp
add
jb
ljmp
sub
add
pop
xor
add
lcall
inc
add
decl
jecxz
ret
add
mov
add
pusha
add
imul
and
or
aam
adc
jmp
data16
lahf
jecxz
mov
xchg
mov
mov
push
loopne
ljmp
stos
out
test
idivb
cmp
iret
lcall
cmp
ja
add
lcall
add
loop
test
adc
fbld
add
popf
rclb
add
test
bound
call
xor
pushl
add
dec
cmp
add
call
mov
in
in
into
pop
inc
add
add
movsb
add
add
in
mov
inc
add
dec
rcrl
fs
or
out
addl
add
add
push
jecxz
add
or
jo
mov
pop
inc
add
aam
add
add
les
insb
fsubrl
outsb
inc
add
std
mov
add
dec
fscale
adc
jmp
add
clc
pop
dec
std
push
in
movl
jmp
insb
mov
cwtl
or
add
add
adc
xchg
push
add
xchg
push
add
add
call
add
nop
jne
lahf
pop
add
pop
inc
add
out
je
ret
test
lret
gs
add
add
jno
pushl
add
adc
add
add
cld
rorl
leave
gs
movsl
add
call
cmp
add
das
push
mov
bound
dec
roll
add
mov
mov
ljmp
add
rcl
push
mov
push
pop
addb
xchg
pop
add
cld
nop
cs
aas
add
call
ror
movb
insl
bswap
xlat
sbb
cltd
test
sub
loope
fcompl
pop
add
add
or
push
sub
pop
outsb
jnp
sbb
bound
push
test
arpl
lcall
add
dec
out
lret
fmuls
add
out
add
dec
daa
add
popa
add
lea
add
aaa
cwtl
ss
add
add
sar
xlat
xor
add
scas
push
adc
stc
les
cld
adc
jmp
add
stos
roll
int3
mov
inc
add
inc
add
fisubl
incl
xchg
and
fnstenv
push
add
or
and
js
xor
mov
add
shl
shll
aad
std
mov
dec
into
out
push
add
mov
loopne
movsb
add
add
fldenv
loopne
sbb
add
fisttps
add
fistpll
rcrl
xchg
push
add
loop
stos
fmul
lea
lret
aam
add
fs
jnp
xchg
fucompp
adc
fildl
jmp
add
mov
out
ljmp
cmp
fisubrs
add
cmpsl
add
leave
in
movb
mov
mov
sub
add
sbb
mov
sti
pop
jle
faddl
jmp
clc
mov
stc
mov
add
incl
and
call
ds
pop
sarb
add
push
add
insb
addb
inc
add
and
decl
sub
loopne
mov
add
add
add
add
add
add
xchg
xchg
inc
add
mov
mov
push
add
ja
sub
push
add
sbb
roll
out
pop
ss
cmp
ds
and
jns
pushf
ret
add
lahf
into
js
xchg
std
ret
add
jb
fidivrs
lahf
inc
add
dec
cmpsb
add
add
xor
enter
rolb
pushl
or
add
pop
cmp
add
jmp
add
scas
movsb
add
aas
mov
insl
xor
lret
xchg
cs
ds
stos
clc
je
dec
mov
add
mov
sbb
add
shll
leave
xchg
mov
js
add
add
faddp
add
add
decl
add
aas
fimull
rolb
mov
add
mov
mov
add
call
jbe
pop
adc
imul
test
add
decl
add
ljmp
cmpsl
add
in
mov
dec
or
adc
and
jmp
incl
sbb
xchg
pop
rcr
in
xor
decl
or
add
sub
ljmp
add
adc
jmp
incl
jmp
jmp
add
or
jne
add
and
dec
in
cld
scas
fninit
add
incl
movb
pop
popf
cld
add
add
lcall
data16
add
xor
mov
add
ljmp
add
lcall
in
js
movl
aam
js
add
outsb
inc
add
popa
add
imul
push
les
test
lcall
popa
add
push
or
add
add
ds
fnstsw
add
inc
add
add
or
add
call
adc
mov
sbb
idivb
add
lcall
jbe
enter
add
sti
sub
push
add
xor
call
add
dec
or
add
add
add
dec
mov
add
decl
push
lods
mov
add
cmc
sub
add
add
mov
into
test
adc
pushl
mov
testb
cmp
xor
pop
in
jge
jg
add
add
sahf
xchg
movsl
add
add
test
repz
mov
test
std
fxam
add
out
lea
ds
mov
and
inc
add
test
add
pushf
test
pushl
mov
cmpsl
add
and
pushl
mov
jecxz
addb
add
add
cmp
add
pop
pop
or
repnz
add
add
mov
adc
into
sub
adc
inc
add
add
add
ljmp
push
mov
add
pop
add
decl
add
add
enter
pop
xchg
mov
cwtl
mov
add
jne
add
jmp
decl
add
out
push
add
pop
xchg
out
pop
mov
mov
add
jmp
xchg
imul
inc
add
mov
add
add
mov
push
add
add
add
add
roll
inc
add
add
iret
loop
add
jmp
stc
inc
add
add
pusha
add
mov
por
add
push
add
movl
fldenv
mov
movl
mov
movl
push
add
adc
jge
add
fcoml
dec
dec
ds
mov
cmpsb
add
push
add
xchg
sub
sub
iret
loopne
jge
dec
out
sub
decl
pop
pushf
mov
outsl
repnz
mov
movl
add
pop
adc
aad
and
incl
add
adc
add
pop
mov
add
rcrb
add
add
add
jge
jo
incl
add
inc
add
je
add
add
add
movb
push
add
add
add
dec
pop
lods
clc
mov
add
adc
pushl
lcall
movb
loope
and
clc
add
cmp
add
nop
sbb
pop
in
out
addl
add
jge
leave
shrb
mov
add
mov
xchg
adc
call
fdivr
ficomps
decl
sub
and
dec
add
xor
jmp
lret
dec
dec
lcall
popl
inc
add
add
adc
pop
loop
out
rcrb
pusha
add
pop
add
ljmp
roll
add
addl
arpl
jg
mov
dec
shrl
data16
add
insl
jge
pop
sbb
or
add
sub
add
add
lods
data16
in
cmp
jmp
add
lahf
xchg
fidivrs
add
mov
add
push
mov
add
adc
cli
sahf
in
outsl
in
dec
addb
xchg
repz
add
sti
add
call
inc
add
add
mov
add
add
test
pop
sbb
iret
int
add
push
repnz
mov
loopne
fdivrs
dec
xchg
fimull
adc
pop
add
pop
add
sub
scas
in
cltd
xchg
inc
add
inc
add
mov
xor
lcall
fldcw
sbb
cltd
sbb
dec
lds
fistl
pushl
and
lret
jg
nop
sub
into
mov
in
mov
dec
or
add
add
push
push
clc
in
xchg
mov
add
lcall
jnp
xchg
cmovge
add
arpl
decl
xchg
stos
and
fisubrs
hlt
roll
in
pop
aad
cltd
pop
rolb
and
call
add
add
int3
and
cmp
pop
out
lods
shrl
inc
add
in
mov
xchg
mov
add
movsb
add
data16
push
add
mov
sbb
and
inc
add
cmpsb
add
ret
add
in
inc
add
punpckldq
incl
add
add
ja
ja
pop
add
mov
call
cmp
pushl
add
push
or
add
and
pushl
add
jmp
push
add
daa
add
and
ljmp
jp
dec
call
add
mov
inc
add
adc
call
mov
roll
out
lods
out
pushf
aaa
jns
mov
add
scas
imul
call
ret
add
jmp
add
add
add
add
ss
pop
mov
test
stc
aad
add
adc
inc
add
add
add
sahf
push
add
int3
mov
cmpsb
add
xor
add
sub
dec
pusha
add
roll
fdivp
inc
add
mov
jmp
add
in
lret
hlt
into
in
cli
movsb
add
enter
insb
dec
xor
inc
add
add
cld
lds
add
cmp
lods
jmp
push
lahf
add
lcall
lea
pop
scas
rolb
hlt
dec
add
ljmp
jmp
push
out
rolb
dec
jo
push
adc
mov
icebp
stc
scas
out
jg
jno
sti
roll
add
push
aas
hlt
mov
testb
xor
add
jmp
addl
inc
add
mov
je
add
pusha
add
jle
movsb
add
mov
add
les
xor
lcall
roll
sbb
add
cmpsb
add
js,pn
xor
add
add
add
ds
shll
adc
decl
add
nop
rolb
add
push
add
mov
or
xchg
loope
icebp
mov
daa
add
fsubrl
sbb
push
incl
add
and
adc
push
add
pop
pop
mov
jmp
add
std
pop
in
sti
jge
mov
jno
pushl
call
add
lods
push
push
add
pop
mov
cli
addb
add
mov
mov
add
nop
daa
add
decl
lcall
sbb
inc
add
int
push
add
mov
add
fmul
movsl
add
test
add
clc
mov
add
and
fnstcw
fisubrl
hlt
hlt
xchg
mov
scas
lahf
mov
add
add
pop
xchg
repnz
decl
or
loope
and
cmp
mov
xchg
cltd
sub
ret
add
daa
add
jmp
add
cmp
pop
out
push
xchg
xor
decl
and
incl
xor
pushl
push
mov
mov
add
dec
jne
add
lret
sub
les
or
jmp
add
add
adc
decl
in
sub
adc
mov
mov
iret
xor
pushl
and
in
or
lret
cmp
add
jno
call
lcall
add
xchg
das
hlt
cmp
ljmp
mov
pop
mull
out
shlb
and
add
insl
ficoml
add
cmp
nop
lcall
add
jnp
push
adc
jno
pushl
lods
mov
pushl
pushl
dec
cld
pop
sahf
sub
fcompl
inc
add
jns
roll
ret
add
sub
call
or
cmp
mov
shl
add
das
inc
add
xor
incl
pushl
inc
add
push
insl
sub
add
add
sahf
jnp
adc
incl
add
mov
test
pushf
push
add
lahf
mov
add
ret
call
js
cltd
xor
dec
popa
add
fsubr
pop
and
ljmp
negl
xlat
mov
mov
xchg
mov
pop
push
addb
add
add
ret
jbe
add
mov
xchg
pop
inc
add
or
jbe
add
add
xor
jmp
loope
xchg
jns
push
mov
test
push
add
adc
cmp
add
movb
add
add
pushf
sbb
cmpsb
add
jne
add
push
add
jns
add
lcall
add
add
jmp
add
add
addl
clc
cmp
inc
add
cmp
jle
jle
mov
movsl
add
inc
add
add
movsl
add
add
lret
hlt
test
jge
mov
dec
inc
add
dec
push
add
sbb
add
jbe
sub
into
adc
outsl
jae
call
dec
mov
imul
inc
add
or
add
mov
test
mov
add
adc
and
ljmp
add
add
into
scas
aas
xchg
jp
in
fwait
and
jns
cs
sbb
add
lods
addb
cmp
add
xchg
mov
add
addl
mov
add
sbb
add
add
add
sub
int3
xor
lcall
scas
dec
psubsw
aaa
pop
add
lcall
add
inc
add
out
test
adc
add
cli
nop
inc
add
ds
les
xchg
in
xor
ljmp
lcall
add
add
jl
push
jno
decl
xchg
sub
add
jecxz
jmp
adc
incl
pushl
loope
dec
clc
mov
roll
montmul
cmpsb
add
jl
movb
jmp
call
jge
add
mov
lahf
inc
add
test
outsb
int3
add
dec
cmp
sub
jb
pushl
add
jle
push
sbb
js
mov
jp
jecxz
add
fcompl
adc
jmp
add
lods
push
test
adc
fistps
mov
add
push
add
outsl
cwtl
popf
js
add
and
or
add
jmp
add
jmp
ljmp
add
and
jmp
pushl
outsl
inc
add
in
jle
add
xchg
or
add
imul
mov
stos
popl
add
add
je
je
inc
add
addl
pushf
jmp
add
imul
add
xchg
ret
add
pop
add
fists
add
add
push
jnp
add
out
bound
add
xor
in
lods
adc
incl
add
pop
add
dec
clc
mov
mov
add
ffreep
add
add
add
test
rolb
add
loopne
pop
jle
fisttps
mov
lahf
incl
add
fstl
in
mov
add
or
push
add
mov
sbb
add
jmp
cltd
sahf
add
incl
add
mov
fsubrp
fmulp
push
add
cmp
sbb
add
mov
xchg
jp
mov
mov
add
das
movb
fwait
xchg
call
add
dec
add
fisubrs
add
mov
add
decl
test
add
rolb
dec
push
xchg
jb
decl
add
jne
cmp
xor
decl
add
jmp
add
push
xchg
jmp
sub
add
dec
jl
add
xchg
sahf
lcall
xchg
rcrb
fistps
add
xor
add
test
movsl
add
add
std
movlps
jmp
and
push
add
pop
roll
loopne
xchg
cli
iret
mov
add
mov
add
rcrl
out
pop
adc
incl
add
mov
out
out
pop
and
lcall
dec
out
mov
add
pop
repz
cmp
mov
faddl
incl
add
add
mov
sub
jmp
add
push
add
clc
addl
xchg
pop
cmp
addb
add
scas
icebp
idiv
popa
add
cld
repz
sbb
fildll
aad
add
dec
rorl
add
push
add
out
sbb
jno
jmp
mov
dec
sbb
notb
decl
sti
les
sub
out
fidivrl
sti
insl
leave
loop
sbb
and
incl
adc
lcall
add
pop
out
data16
js
add
xor
call
xor
out
jbe
pop
out
movsb
add
arpl
decl
repz
decl
popf
mov
lea
inc
add
add
add
lcall
clc
push
cmpsl
add
pop
pop
or
decl
mov
movl
cmc
mov
faddl
xchg
xchg
les
loope
mov
push
push
repnz
add
imul
add
mov
in
aas
xor
and
call
sti
lods
fsub
add
pop
into
push
add
lods
sbb
out
sub
add
ljmp
xor
cmp
cmp
add
push
mov
imul
das
mov
xchg
or
add
repz
add
incl
dec
scas
sub
rcrb
in
call
call
or
add
pop
adc
push
xchg
scas
movl
xchg
movb
test
fstps
cwtl
mov
sahf
jl
loopne
mov
clc
clc
jo
jnp
add
lods
xchg
and
mov
lcall
mov
or
fndisi(8087
add
add
scas
adc
dec
xor
dec
out
xor
and
push
add
sub
enter
mov
out
mov
add
inc
add
mov
cmpsb
add
add
push
pop
rolb
xchg
outsl
xlat
imul
add
add
add
mov
out
addl
push
mov
or
add
dec
movl
add
std
cmp
test
lret
cmp
mov
dec
jge
add
ror
lret
cwtl
xchg
push
add
xor
cmpsl
add
add
dec
icebp
bound
incl
jmp
add
jnp
cs
mov
into
xor
xrelease
fst
out
and
dec
or
jbe
add
cmc
mov
add
test
dec
pop
push
inc
add
jecxz
scas
adc
decl
adc
call
add
mov
into
push
lcall
sub
push
add
stos
scas
or
mov
stos
addl
add
dec
nop
imul
stos
mov
movups
decl
add
fstpt
add
add
add
add
sub
addl
add
push
test
cmpsb
add
add
addr16
adc
movsb
add
add
add
mov
fcoms
call
sub
xlat
or
sbb
or
add
mov
add
arpl
jmp
call
mov
fcomip
out
sub
int
out
mov
jge
pop
mov
mov
les
sbb
fbstp
adc
jns
ret
add
movb
icebp
push
add
test
sbb
out
mov
bound
aas
mov
jae
call
movb
add
repnz
jmp
add
stc
or
mov
jae
inc
add
add
sub
decl
mov
xchg
insb
add
ljmp
add
popa
add
mov
pusha
add
cwtl
out
mov
jg
add
add
int3
rorl
add
add
mov
add
test
add
lcall
add
pop
div
push
sbb
or
xor
ljmp
jo
cmp
enter
arpl
call
fwait
jmp
pushl
push
add
fcoms
incl
add
xchg
sbb
xchg
xor
dec
xchg
mov
add
cmpsl
add
mov
cwtl
out
add
fidivs
mov
add
ljmp
test
pop
jne
add
test
jo
push
repz
cld
loopne
nop
leave
fcompl
mov
lret
add
xchg
fsts
add
pusha
add
leave
push
add
push
stos
or
call
mov
sahf
rcll
int3
xchg
mov
shrl
test
push
add
cmp
xchg
xchg
push
add
aaa
insb
ljmp
push
popf
popf
mov
add
int3
mov
pop
add
or
cmc
arpl
lcall
divb
ljmp
push
test
mov
in
lea
add
mov
ljmp
dec
pop
stos
add
add
int
or
or
or
ja
add
sbb
add
sbb
add
fimuls
out
iret
movsl
add
add
out
sbb
in
cld
popf
push
add
push
add
test
inc
add
adc
call
daa
add
add
add
add
add
inc
add
pop
add
call
je
add
sbb
into
addr16
adc
call
sti
xchg
jne
in
sbb
cmp
rclb
ljmp
add
push
cltd
cmp
mov
jns
pop
lock
push
add
adc
mov
nop
repnz
adc
cmp
add
jb
decl
les
pushf
into
out
fnstcw
add
push
mov
ja
cmp
add
sub
jbe
add
add
dec
xchg
js
and
decl
jbe
stos
sub
mov
xchg
cmp
addl
cwtl
test
or
leave
add
pop
ret
sub
out
mov
incl
add
add
mov
jp
add
add
add
fadds
stos
icebp
sti
roll
dec
jecxz
sbb
add
jmp
add
lcall
add
add
cltd
aam
addl
add
add
iret
mov
outsb
js
add
fdivrp
jecxz
arpl
jmp
call
jo
jmp
movsl
add
int3
idivb
roll
push
add
add
lret
push
jnp
lcall
add
sti
fsub
add
xlat
add
lods
adc
add
enter
dec
mov
add
mov
add
pop
add
sub
add
cmp
repz
pop
leave
xchg
addl
sbb
add
adc
js
idivb
lds
unpckhps
test
add
cld
add
xlat
sub
add
add
add
in
in
pop
pop
mov
add
sbb
test
jo
lcall
dec
sbb
dec
cmp
xchg
hlt
jne
add
stc
movsl
add
mov
add
add
outsb
push
insl
ret
add
add
xchg
ds
add
pop
add
push
dec
test
inc
add
mov
add
or
mov
add
mov
add
add
in
push
add
rolb
js
add
add
mov
add
mov
pop
or
push
add
ljmp
add
out
sub
mov
add
sbb
add
xchg
movsl
add
add
mov
xor
sti
inc
add
mov
add
das
fcoml
js
push
add
push
add
imul
add
add
add
pop
jnp
nop
cs
test
add
bound
lcall
addl
add
aad
stos
lret
fcoms
xor
lcall
repz
pop
pop
jns
fstl
add
pop
stos
adc
call
das
mov
add
mov
fadd
add
add
and
lea
cli
jo
inc
add
popf
adc
decl
add
add
inc
add
test
mov
mov
add
or
add
add
add
adc
decl
add
pop
loope
mov
pop
call
add
lea
fisttpl
add
jp
add
add
pop
cld
mov
mov
rolb
inc
add
cmc
addl
mov
and
incl
add
into
lds
rcrl
lret
test
dec
ds
add
fnsave
add
mov
iret
cmc
lods
mov
pop
jl
add
add
cltd
mov
push
lret
pop
call
aad
inc
add
mov
push
shrl
mov
ss
das
inc
add
pop
clc
xor
inc
add
out
pop
add
jmp
add
loopne
inc
add
add
jl
jns
fadds
add
test
add
lea
add
cmp
add
mov
add
loopne
push
add
pusha
add
sbb
addl
lret
mov
push
add
std
insb
test
fdivrp
push
mov
cmp
fsubrl
push
add
fwait
scas
addr16
add
rolb
push
call
jg
add
cmp
jmp
add
or
cs
loop
adc
pushl
jmp
add
jle
add
js
add
cmp
add
sbb
inc
add
push
add
push
jge
or
fiadds
add
in
imul
push
outsb
test
test
xor
xor
pop
and
addl
add
cpuid
add
add
repz
sub
add
call
xlat
lods
jo,pt
mov
add
lds
adc
jmp
add
call
add
sub
jmp
add
add
adc
call
mov
in
push
add
fs
fimull
cmp
add
daa
add
add
add
add
add
or
incl
decl
pushf
or
decl
mov
add
movsl
add
pushl
call
jle
add
add
ret
add
add
inc
add
sub
pop
nop
push
add
clc
adc
lcall
add
sbb
add
repz
add
rcrb
xchg
xchg
fnstenv
add
xchg
rolb
mov
add
add
mov
jns
jno
inc
add
add
inc
add
mov
arpl
call
add
lahf
jecxz
div
pop
das
addl
sbb
sub
and
call
or
lret
out
add
incl
push
lock
sub
xchg
push
sub
stos
fldt
add
mov
add
inc
add
or
add
jae
std
push
add
imull
loope
out
xor
call
add
movl
pop
push
sar
push
add
sbb
add
mov
notb
repz
add
add
test
add
sub
adc
ljmp
and
mov
mov
and
std
movsb
add
mov
call
inc
add
mov
add
mulb
ljmp
and
sbb
sub
fcompl
es
int3
cmc
lock
add
bound
lcall
cmp
add
push
add
adc
push
mov
jp
mov
addl
add
mov
movsb
add
add
push
add
jmp
iret
loop
into
or
xor
cli
or
jo
jmp
popl
call
add
pop
jg
data16
in
lret
mov
pushf
sti
inc
add
cmp
data16
add
or
call
add
add
push
cmp
testl
xchg
mov
and
dec
sbb
add
dec
or
add
inc
add
les
das
clc
addl
mov
jp
cs
sbb
add
adc
sbb
add
test
imul
mov
add
or
sbb
add
movl
add
movsb
add
incl
add
pop
test
jnp
mov
pop
imul
shrb
sub
add
fstps
out
jo
mov
mov
push
add
xor
ljmp
sub
add
xor
jmp
call
add
add
add
call
decl
addl
imul
push
movsl
add
add
and
decl
add
sbb
xchg
push
shr
lret
add
enter
jmp
enter
mov
lds
mov
cmpsl
add
and
les
or
movb
fwait
out
cs
mov
cmp
inc
add
fwait
inc
add
lea
dec
cmp
push
arpl
jmp
add
mov
add
movb
pushl
add
xchg
aad
xchg
add
inc
add
incl
loop
and
call
lahf
push
mov
sub
pusha
add
pop
iret
mov
xor
push
outsb
mov
xlat
movl
jne
mov
icebp
jns
int
mov
add
add
pusha
add
lret
iret
mov
dec
sbb
call
shrl
das
ja
add
lea
add
push
movsb
add
add
add
add
xor
push
loopne
pop
sbb
add
mov
add
imul
push
add
inc
add
mov
jmp
decl
xor
leave
inc
add
dec
add
push
sahf
push
int
outsb
popf
into
lds
lret
add
mov
add
pop
push
add
call
xchg
add
incl
pushl
xchg
pop
add
add
or
ret
dec
jle
popa
add
cmp
rcl
movsb
add
add
ljmp
in
inc
add
add
js
or
add
sub
mov
dec
sbb
push
and
in
push
jae
lcall
mov
jns
and
push
pop
roll
mov
add
lds
jle
add
add
addl
pop
add
pop
lods
jge
add
mov
jle
add
add
leave
mov
dec
fsub
add
pop
mov
roll
add
fdiv
sbb
add
in
or
add
push
cmp
add
popf
arpl
decl
jo
incl
ljmp
dec
hlt
sbb
add
dec
hlt
or
cmp
sub
add
add
pop
add
xor
call
add
add
inc
add
fiaddl
decl
addb
stos
addps
add
adc
incl
push
add
ficomps
add
add
pop
mov
stos
xchg
std
jecxz
dec
int
add
pop
mov
adc
call
add
fldenv
add
jns
add
or
int3
hlt
fwait
adc
cmp
add
insl
cmp
fnstenv
mov
adc
incl
loope
mov
sbb
mov
popa
add
xchg
int3
cmpsb
add
sbb
aas
add
jmp
add
pop
cli
je
add
ds
aam
add
sbb
fbstp
lds
xchg
fidivrl
sub
sub
add
in
je
pop
outsl
mov
add
fsubs
sub
sbb
dec
sbb
add
rolb
jg
add
ljmp
pop
add
mov
and
jmp
insb
inc
add
repz
jbe
add
add
inc
add
decb
lea
loope
or
add
mov
add
add
jl
scas
enter
fstpt
sub
iret
and
lcall
fistps
icebp
mov
lcall
les
inc
add
add
jmp
xchg
insl
sub
incl
inc
add
cmc
les
mov
add
xchg
add
call
jge
add
add
adc
dec
fistl
dec
xlat
adc
inc
add
add
int
add
fldln2
aad
add
lcall
cmpsb
add
add
xchg
scas
jle
add
xchg
xchg
roll
ds
les
rcrl
jb
incl
add
dec
xchg
fwait
sbb
addl
dec
cmpsb
add
lods
xchg
ret
add
ljmp
fisttps
add
fstl
add
cmpsl
add
pop
mov
add
das
stos
add
popl
add
and
mov
mov
add
out
ds
mov
cmp
mov
incl
add
push
js
mov
mov
into
add
incb
push
sub
jl
add
jmp
mov
addb
inc
add
sub
add
mull
decl
add
add
test
das
push
add
add
cld
jno
out
rcrb
fwait
inc
add
add
or
shll
add
xor
pushl
mov
aam
add
in
pop
ret
nop
add
jmp
mov
add
dec
jns
repnz
inc
add
shll
inc
add
lds
fidivrl
add
mov
outsl
pop
movl
add
fildll
add
addl
cmpsb
add
call
pop
shlb
add
decl
cmp
loopne
xchg
sti
add
call
add
out
ljmp
add
xchg
xchg
cmc
push
in
movsl
add
add
sub
decl
les
or
rclb
incl
jmp
popf
jno
ljmp
add
mov
add
or
inc
add
jg
sub
add
add
inc
add
stos
xchg
and
lcall
inc
add
std
lret
ja
sbb
fimull
push
mov
lcall
fs
leave
bound
call
incl
lcall
sbb
pop
imul
jo
mov
repz
aad
add
hlt
in
push
add
lds
push
shlb
add
xor
add
sbb
xchg
call
lcall
and
lcall
jle
lcall
cmc
cmp
add
add
mov
in
mov
sub
add
ret
jno
mov
mov
add
inc
add
stos
lock
lret
or
stc
shrb
add
rcrb
cwtl
sub
pop
push
add
jae
ljmp
add
mov
add
or
add
cmp
add
xor
ljmp
sub
mov
add
add
add
ds
add
xor
incl
add
inc
add
add
cli
rcrb
ja
add
add
incl
jle
dec
cmpsb
add
cmp
add
inc
add
inc
add
jle
add
inc
add
daa
add
lock
xchg
add
adc
cltd
shll
add
push
pop
jmp
add
add
leave
xchg
add
add
or
movsb
add
add
cmp
repz
or
xchg
js
mov
add
popa
add
add
jae
mov
in
movl
add
jmp
test
daa
add
add
rcll
push
stos
jbe
fdivr
fcom
icebp
push
add
loop
cmc
inc
add
cs
mov
jmp
add
push
hlt
lods
add
fsubrs
push
add
ja
pop
cwtl
lock
call
pop
shlb
add
fs
push
add
xor
jmp
test
or
nop
add
ja
mov
push
xor
mov
jle
js
jl
enter
mov
mov
inc
add
data16
addl
add
add
cmp
add
pop
push
adc
lcall
arpl
incl
add
mov
test
add
fistpl
or
mov
push
arpl
dec
fidivrs
push
lds
mov
xchg
lods
adc
lcall
lds
es
push
adc
test
lods
dec
bound
mov
jb
cmp
xchg
push
mov
pop
stos
xor
jmp
add
mov
inc
add
add
cmc
sbb
out
mov
movb
ret
add
movsb
add
add
xchg
add
add
aas
test
add
jb
jmp
add
rorb
add
add
mov
dec
jne
sarb
jge
ficoml
add
push
cld
push
movl
mov
roll
add
scas
mov
xor
decl
or
in
jl
dec
mov
pushf
sahf
push
add
data16
pop
mov
mov
add
add
lea
add
jecxz
scas
add
decl
xchg
push
in
mov
adc
jnp
add
cwtl
sub
mov
leave
sub
data16
jnp
ds
outsl
rolb
add
incl
pop
add
sub
add
dec
push
clc
adc
add
mov
imul
decl
mov
push
sbb
rorb
push
pop
std
movsl
add
jno
pushl
leave
inc
add
lock
adc
out
ret
add
push
xchg
in
dec
cmovle
jmp
lock
call
aas
in
jp
add
cwtl
test
mov
add
movb
inc
add
xor
ljmp
mov
add
mov
fmull
addl
add
repz
cmpsb
add
add
cmp
add
xchg
int
aas
dec
ja
ljmp
loope
daa
add
add
add
sub
pusha
add
push
add
push
xchg
push
add
add
outsb
cmp
add
incl
sub
call
mov
bound
jmp
lcall
xor
ljmp
add
gs
aas
stos
aam
push
add
mov
push
stos
xor
add
xor
inc
add
jne
in
add
inc
add
ret
pop
mov
add
dec
dec
sub
add
stc
jns
add
pop
sub
addl
outsb
mov
add
add
adc
inc
add
add
test
push
mov
lcall
add
add
add
decl
negl
lahf
stos
add
jmp
add
jg
mov
dec
dec
les
mov
sbb
incl
repnz
fmul
rorl
add
xchg
lret
add
bound
fldl
sbb
inc
add
pop
bound
decl
es
lahf
sti
cs
imul
add
add
push
add
push
sbb
dec
mov
ds
inc
add
pop
or
pop
add
pushl
cmp
add
and
jmp
add
add
aam
add
mov
scas
sbb
mov
add
shll
pushl
jle
add
std
mov
roll
sti
rolb
test
js
rolb
add
jecxz
xchg
xor
pushl
add
jns
add
lahf
xchg
addb
inc
add
cli
jns
int
add
jo
pushl
add
fnsave
lcall
fwait
jnp
xchg
imul
jmp
add
add
nop
scas
jne
mov
or
jbe
add
adc
incl
or
add
adc
add
push
and
lcall
pop
pop
stos
inc
add
shrb
push
test
cmp
add
bound
jmp
call
pushl
add
add
lea
add
lock
add
mov
es
mov
adc
pushl
ljmp
add
or
add
cmp
mov
push
cmpsb
add
add
xlat
bound
jmp
add
add
add
mov
add
lods
cmp
add
ss
adc
push
ljmp
addb
inc
add
add
and
jl
cmc
int
add
add
ret
stos
sub
pop
add
decl
xchg
mov
push
cmpsb
add
pushl
pop
or
dec
adc
xor
ljmp
fistl
pushl
incl
jbe
add
xchg
fs
notl
decl
pusha
add
xchg
xchg
in
mov
add
addl
cmp
push
add
les
jle
pop
add
inc
add
pop
cmovnp
test
add
data16
mov
add
ret
add
insb
dec
rolb
add
xor
jnp
sbb
jmp
add
add
mov
sbb
out
jno
pushl
aad
add
dec
movsl
add
and
call
mov
add
ljmp
inc
add
popf
mov
xlat
xor
in
loope
push
decl
out
pop
in
test
sbb
add
sahf
add
jmp
add
or
call
add
dec
out
jnp
adc
pushl
cmp
jmp
add
add
int
inc
add
add
add
call
xchg
pop
inc
add
lcall
pushl
sub
add
jp
shlb
adc
add
ret
add
push
add
fistpl
hlt
addb
sahf
cmpsl
add
adc
jmp
lcall
cwtl
movb
sub
call
add
pop
mov
mov
sbb
add
mov
push
pop
dec
and
lcall
dec
xchg
repnz
ret
add
loop
xchg
pavgw
les
dec
xor
add
add
add
lods
xchg
adc
incl
pushl
add
pushf
or
push
mov
add
add
scas
pusha
add
stos
cmp
add
dec
notl
add
mov
rep
ret
add
dec
xchg
cli
addr16
cld
nop
jno
dec
mov
inc
add
nop
lock
das
jl
test
addb
add
sub
icebp
and
decl
inc
add
mov
xor
pushl
push
test
mov
addb
inc
add
lret
ret
lret
addl
add
js
dec
add
incl
std
or
mov
xor
add
add
add
sbb
dec
mov
push
add
xchg
jnp
mov
outsl
push
sbb
add
test
ss
add
add
decl
pop
js
add
ljmp
add
add
notb
repz
jo
ljmp
cltd
test
inc
add
sbb
scas
stos
inc
add
add
sub
pushf
out
and
incl
inc
add
add
add
add
pop
enter
jle
leave
rolb
add
fstpl
add
repnz
addb
add
scas
cmp
add
fcomps
movsb
add
cltd
sbb
lods
je
cs
add
inc
add
popf
mov
cli
push
test
adc
push
add
movb
add
mov
inc
add
aam
add
add
mov
aaa
pusha
add
or
sti
or
add
icebp
cmp
add
add
add
insb
test
add
add
call
add
out
cmp
scas
dec
je
daa
add
add
jmp
repz
fisubs
jle
add
jecxz
aad
add
pop
or
negb
movl
mov
inc
add
add
ljmp
lret
addb
add
ret
add
jmp
add
pushl
add
mov
sbb
pop
add
mov
mov
xor
ljmp
jp
cwtl
fstps
add
add
lcall
movb
add
add
call
add
das
push
add
sub
dec
ds
dec
lret
mov
je
add
movl
mov
movl
add
jl
fcompl
add
or
add
mov
xchg
cltd
jno
jmp
add
mov
mov
inc
add
rolb
mov
pop
add
stc
adc
pushl
add
movsb
add
sti
push
add
adc
addl
jle
cli
add
sbb
sub
add
loopne
add
fistpll
incl
pop
adc
incl
stos
sbb
les
inc
add
ret
add
jp
add
icebp
cltd
loop
and
call
jne
rorl
mov
add
pop
outsb
sahf
repz
push
loope
mov
cs
addb
xchg
pop
addl
jecxz
mov
xchg
mov
add
sbb
add
add
inc
add
leave
xor
pop
insb
add
jmp
add
roll
add
add
iret
mov
add
xchg
and
incl
add
sbb
cmp
jb
pushl
add
jne
adc
mov
inc
add
push
lds
ds
add
push
add
hlt
icebp
xlat
mov
add
insl
pop
and
ljmp
add
cmp
add
add
cmpsb
add
add
fstpl
jns
add
ljmp
outsb
adc
jmp
add
lods
loope
leave
test
mov
outsb
xor
fnstcw
movl
add
cmp
add
add
xchg
pop
mov
adc
call
les
sbb
lods
add
add
sbb
jecxz
sub
xor
add
add
add
fstp
mov
fsubl
add
mov
rolb
rcrb
jno
call
ljmp
xchg
loope
rorl
insb
add
dec
cmp
add
or
leave
add
dec
insl
and
pushl
add
mov
mov
scas
adc
incl
mov
in
inc
add
shll
add
pop
add
call
xchg
pop
add
cmpsb
add
add
adc
add
aas
test
pop
push
add
in
in
add
inc
add
lds
inc
add
movl
call
ja
add
addb
lock
cmp
add
dec
add
lret
inc
add
mov
mov
jg
add
add
add
mov
sub
dec
xchg
pop
cmp
sub
add
int
or
stos
mov
sbb
je
lahf
mov
pushl
add
xor
mov
loop
mov
dec
jne
add
xchg
pop
fbld
add
lds
or
add
xchg
mov
stos
int3
pop
ret
add
push
add
add
out
and
sbb
scas
fdivrp
mov
jmp
call
mov
sbb
insb
sbb
les
jnp
add
repz
repz
cmpsl
add
add
add
sbb
mov
add
call
rolb
mov
mov
jg
insl
add
int
popa
add
sarb
pop
cmp
decl
rolb
add
jmp
inc
add
add
jmp
add
stc
sahf
mov
cs
fwait
adc
mov
insb
insl
jb
mov
outsb
or
pop
insl
outsl
sar
mov
cmc
dec
lret
lods
jnp
jl
mov
add
in
pop
add
icebp
std
pop
enter
add
stos
hlt
loope
mov
add
sub
add
incl
scas
les
imul
sub
add
cmp
add
push
data16
sbb
xor
add
sbb
push
push
add
das
imul
mov
dec
dec
sbb
add
adc
lcall
mov
or
pushl
out
or
sub
mov
decl
inc
add
call
pop
mov
xor
incl
add
add
scas
add
mov
jo
ljmp
cwtl
inc
add
les
add
lcall
ret
add
add
push
add
ljmp
mov
add
add
adc
decl
call
push
outsb
lds
data16
lcall
aad
add
cltd
xor
incl
jns
jl
add
or
std
pop
das
push
add
inc
add
lods
xchg
xchg
dec
enter
jnp
add
adc
lcall
lcall
cmc
xchg
adc
decl
xor
lcall
out
sbb
add
leave
outsl
pop
or
inc
add
scas
lret
mov
movsl
add
push
movl
mov
int
add
adc
decl
enter
push
fisttpl
incl
scas
int3
mov
add
daa
add
cld
sbb
add
push
shlb
jmp
add
xlat
cmp
add
fwait
popf
fcmovbe
enter
add
pop
inc
add
mov
lcall
pushf
enter
mov
shrl
jge
jns
sahf
pop
mov
sbb
jae
decl
jb
jmp
jmp
add
fstps
cmp
clc
in
or
add
addl
cmp
jp
push
js
sub
xor
pushl
pmullw
bound
ljmp
add
int3
and
dec
ret
cmp
ret
add
add
rolb
xor
add
sub
add
aas
sti
fsub
add
jle
add
mov
jb
jmp
add
incl
dec
xchg
push
add
mov
add
decl
lock
add
adc
xchg
sub
add
add
sub
add
cmp
cmp
cmpsb
add
aas
mov
push
cmc
xor
call
push
add
popa
add
sub
add
add
dec
xchg
aas
lock
xchg
daa
add
mov
ficompl
xlat
xor
call
stos
sti
dec
adc
add
addb
adc
pushl
mov
add
lcall
add
add
stos
ds
test
xchg
repz
add
mov
jge
dec
inc
add
sbb
add
push
add
sbb
dec
sarb
neg
loop
out
rcll
add
mov
mov
std
jmp
jo
jmp
add
sti
mov
add
dec
lock
adc
rcrl
into
movsl
add
add
add
sbb
add
jne
roll
add
ss
add
lea
lcall
inc
add
mov
jmp
lcall
roll
mov
add
add
xchg
cmp
add
fidivs
add
call
movsl
add
sahf
pop
inc
add
call
jmp
ret
add
add
and
inc
add
add
add
ljmp
pop
inc
add
inc
add
pop
or
add
shr
push
add
inc
add
xlat
iret
inc
add
xchg
jl
sub
ds
add
sub
loopne
or
push
fiaddl
inc
add
add
pop
add
sbb
add
cwtl
jle
jae
ljmp
add
inc
add
negl
push
push
adc
mov
add
arpl
jmp
add
cmp
mov
inc
add
and
dec
dec
loop
or
xchg
ret
add
arpl
pushl
add
call
add
mov
add
pop
and
lcall
cltd
mov
out
addb
inc
add
lds
loope
pop
jnp
cmp
add
xchg
loopne
cmp
js
nop
aad
add
cmp
add
add
sti
push
in
scas
cmp
jl
add
add
add
decl
fildl
mov
cmp
ljmp
stos
push
daa
add
pusha
add
test
sub
inc
add
pop
push
pop
adc
fstpl
std
push
inc
add
add
movb
push
mov
scas
mov
or
mov
movl
xchg
push
push
mov
addl
out
sub
add
mov
add
add
or
sahf
mov
add
lret
sbb
dec
jle
and
in
xchg
pop
add
add
flds
add
xchg
push
add
bound
decl
or
push
out
dec
jmp
add
cld
aam
add
xchg
cmpsl
add
fnstsw
add
mov
cltd
or
add
sbb
add
add
add
decl
cwtl
mov
mov
jge
add
and
pushl
add
out
mov
in
cmc
sub
add
mov
scas
mov
sti
and
incl
outsb
scas
add
jmp
add
add
add
faddl
add
xchg
sub
add
add
mov
scas
int
mov
fadd
add
ss
mov
xchg
jp
add
mov
add
add
out
out
push
aam
cmp
add
mov
add
add
imul
out
sbb
bound
push
jmp
lret
aam
add
jmp
insl
sub
add
shl
add
fucom
add
add
test
cli
dec
xor
dec
xor
jmp
lcall
add
pop
nop
enter
decl
mov
incl
jecxz
lods
dec
rolb
add
pop
xchg
daa
add
cmpsb
add
test
push
add
fisubrs
push
cltd
sbb
add
mov
test
mov
out
push
add
pop
loop
or
add
jp
lahf
cmp
add
adc
call
add
jmp
add
xlat
outsb
lock
das
jnp
outsb
or
dec
pop
xchg
cmp
add
jo
mov
push
test
cli
jnp
add
add
outsl
jecxz
cwtl
mov
cmp
add
jl
sbb
add
scas
push
add
pushf
inc
add
add
test
add
add
inc
add
mov
lret
into
in
xor
lcall
add
mov
stos
scas
xchg
cmp
pushf
cmp
push
aam
add
xor
ljmp
add
aas
add
pop
ljmp
inc
add
xchg
xlat
pop
add
adc
add
movb
add
xor
lcall
addb
ljmp
mov
add
pop
mov
xor
decl
call
mov
push
iret
outsb
push
xchg
or
dec
mov
inc
add
je
lods
negb
push
sahf
jno
call
add
pop
pop
xor
decl
pop
imul
jg
add
psraw
lds
iret
mov
sub
pop
inc
add
xor
push
add
add
mov
add
inc
add
scas
je
lret
push
cs
add
add
add
pop
es
add
je
add
jae
call
iret
add
jmp
std
adc
lcall
jmp
outsl
sub
add
ljmp
popa
add
or
incl
add
dec
cmpsl
add
add
jmp
add
out
arpl
ljmp
stos
or
sbb
sbb
mov
pushl
mov
and
ljmp
push
add
scas
mov
cld
fistpll
dec
mov
jl
add
fcoms
call
add
lret
jecxz
lock
xchg
xchg
int3
gs
jmp
or
mov
add
movl
add
push
add
stc
ss
pop
movb
add
addl
cmp
jno
jmp
add
xchg
movsb
add
pushl
push
add
js
ret
add
fwait
rolb
imul
xor
ljmp
add
sub
lock
inc
add
aaa
push
add
inc
add
outsb
adc
and
pushl
bound
pushl
sbb
leave
sub
dec
xchg
enter
mov
push
add
add
dec
mov
add
add
ljmp
loope
cmc
stos
sti
add
aaa
jg
imul
xor
jmp
mov
lcall
dec
cmp
jmp
add
push
cmp
jne
aaa
adc
add
daa
add
fmul
and
lcall
push
add
add
incl
add
test
add
imul
cmp
add
sub
test
aas
pop
ss
daa
add
add
inc
add
inc
add
xchg
and
pushl
pop
jmp
data16
add
inc
add
push
xor
push
fildll
add
call
add
mov
add
add
or
sahf
decb
push
lods
dec
dec
addb
add
repnz
cmpsl
add
mov
out
fidivrs
pusha
add
pop
mov
pusha
add
pusha
add
jg
jo
call
add
in
dec
imul
xor
jmp
cmc
jo
ljmp
and
pushl
add
add
push
push
add
rolb
cld
xor
jg
push
mov
jmp
cld
fstpl
insb
jae
jmp
call
xchg
push
add
add
mov
sbb
jb
jmp
add
add
add
jmp
add
or
add
addb
out
bound
inc
add
mov
mov
mov
lcall
leave
xor
jmp
pushl
dec
sbb
incl
add
xor
incl
scas
bound
pushl
push
push
movb
add
loope
les
int
addl
adc
add
popf
insb
sub
add
incl
pushl
hlt
pop
sub
add
jge
pop
sub
pop
and
mov
push
pop
lock
pushl
add
ljmp
lret
xchg
loope
std
movsb
add
xchg
fstps
popf
cmc
xor
jmp
add
test
movb
imul
add
add
add
cmpsb
add
add
pop
mov
rorb
pushf
cmpsb
add
scas
rcr
pop
imul
add
add
add
pushl
jae
add
insb
insb
cmp
add
add
fwait
dec
jo
jmp
add
add
pushf
lods
sub
add
lock
pop
jl
add
call
lods
inc
add
enter
sbb
push
mov
push
add
push
adc
decl
adc
jmp
add
stos
sub
add
mov
lea
push
adc
jmp
add
pop
cs
frstor
add
pushf
mov
repnz
add
mov
sub
fisubrl
ja
push
inc
add
into
push
inc
add
mov
cmp
add
jbe
add
dec
loop
jp
fisttpl
mov
add
sbb
add
or
fdivrl
xchg
lahf
jns
xchg
cmp
add
adc
adc
mov
xor
jmp
add
pop
inc
add
mov
add
outsb
jno
jmp
add
add
ss
mov
aaa
xor
call
ljmp
daa
add
cmc
inc
add
imul
add
into
inc
add
sahf
roll
add
add
dec
lods
lcall
add
nop
sbb
add
bound
cmp
add
nop
cmpsb
add
sbb
dec
test
jae
pushl
add
clc
je
xor
call
fdivp
lds
sbb
add
push
add
movsb
add
fbstp
dec
stc
pushf
push
add
jo
ljmp
jmp
inc
add
add
and
call
inc
add
jnp
add
fldt
jno
jmp
pop
add
cmp
add
add
sbb
call
mov
les
cli
ror
xor
jmp
cmc
movl
cmp
hlt
add
jmp
mov
in
addb
inc
add
jnp
add
fildll
scas
mov
cmp
addl
jg
and
fdivrl
lret
pop
dec
mov
xor
add
add
jb
lcall
add
mov
rorl
mov
test
or
insl
cld
ret
add
decl
add
ret
add
add
add
stos
sub
mov
add
lcall
sub
add
inc
add
insb
cmp
cmp
add
pop
lock
push
mov
sarl
decl
xor
or
push
jo
lcall
add
pusha
add
mov
push
mov
add
push
adc
inc
add
add
adc
call
lcall
or
inc
add
add
test
scas
dec
mov
add
lret
add
push
notl
call
std
rolb
add
add
xchg
jns
dec
mov
inc
add
test
jge
push
clc
jb
mov
add
mov
add
dec
or
add
aam
sbb
cli
lret
and
lcall
jp
add
add
stos
add
add
add
jl
add
add
call
push
add
bswap
aaa
movb
mov
xor
decl
jmp
hlt
pushl
inc
add
jns
out
sub
lcall
add
add
jl
or
add
shrl
imul
jg
or
cmp
out
inc
add
or
rolb
mul
add
sti
loopne
lea
add
enter
cld
aam
negb
jno
fbld
add
fiaddl
add
cmp
add
cld
jge
xchg
test
push
add
adc
sub
pop
test
dec
int
sahf
jns
add
or
lahf
cmp
in
stc
and
decl
pop
int
and
ljmp
lods
sub
add
xchg
xor
dec
cli
adc
ljmp
out
mov
xchg
or
add
or
mov
fstpl
roll
stos
addb
add
xchg
clc
inc
add
aad
push
aam
sub
cmpsl
add
dec
notb
add
xchg
test
pop
mov
add
xor
jle
dec
push
add
clc
dec
xor
jmp
cmpsl
add
add
mov
add
pop
or
cmc
lods
add
pushl
push
push
mulb
call
test
xchg
cmpsl
add
je
imul
add
roll
add
mov
jbe
fsubs
and
call
das
scas
sub
ret
iret
pop
pop
sbb
aam
addb
adc
and
ljmp
inc
add
dec
xchg
xchg
add
mov
pop
gs
xchg
shlb
jp
add
and
jnp
and
call
add
scas
sbb
add
cmpsb
add
dec
jns
add
imul
mov
inc
add
add
call
jmp
add
push
and
lcall
add
mov
add
and
jmp
mov
sub
add
add
call
scas
pop
add
add
ja
mov
mov
fisubs
push
jae
jmp
add
mov
fimuls
mov
add
je
enter
mov
mov
add
mov
sbb
incl
lcall
test
lea
stos
sbb
inc
add
add
cmp
add
push
ljmp
add
pop
into
cmpsl
add
imul
sbb
add
jmp
lcall
bound
ljmp
psadbw
adc
add
add
inc
add
pusha
add
push
sahf
dec
int3
or
out
or
mov
cmp
add
stos
pop
data16
mov
decl
pop
fucom
add
roll
imull
add
lods
cwtl
addb
add
int3
daa
add
push
pusha
add
test
push
aas
scas
popa
add
jb
ljmp
sbb
cmp
add
jmp
pushl
dec
es
cli
sub
add
dec
test
inc
add
roll
add
add
sub
or
pop
mov
int3
jne
pop
stos
fbstp
mov
mov
push
sarb
imul
add
sti
roll
mov
jmp
add
sti
xchg
mov
pushf
stos
adc
jmp
add
add
popf
fmull
add
dec
xor
call
add
mov
add
lcall
sub
addb
add
incl
outsb
or
clc
sbb
add
inc
add
add
xor
fistps
sub
sahf
mov
mov
inc
add
pushl
add
daa
add
add
and
jmp
pop
cltd
into
xor
jmp
mov
pop
and
mov
mov
enter
add
leave
out
xchg
imul
test
imul
pop
push
add
dec
push
add
lcall
into
std
in
test
cld
mov
popf
mov
jecxz
ffree
add
cs
dec
add
incl
call
jmp
add
movb
adc
pushl
xchg
push
adc
adc
inc
add
add
jo
fsubr
loope
mov
xor
inc
add
pop
adc
jmp
repz
add
pop
inc
add
or
add
jmp
imulb
add
cltd
adc
call
add
cwtl
not
or
add
mov
out
pushf
lds
mov
xchg
add
insb
mov
sub
ficoms
sub
add
xchg
pop
add
add
sbb
add
lcall
add
cmpsl
add
mov
sub
cmp
rcrl
cmp
sub
adc
movl
pop
add
inc
add
adc
pushl
push
inc
add
dec
or
add
xor
mov
push
cwtl
cmpsb
add
inc
add
aad
add
inc
add
movl
add
cmp
fsubl
movl
dec
add
ljmp
enter
loop
push
add
mov
decl
cmp
addl
test
in
insb
or
movsb
add
stos
push
add
mov
or
jp
add
cmp
push
xchg
adc
dec
dec
or
or
cmp
addl
shlb
add
pop
sub
imul
add
incl
xchg
sub
add
xor
push
imull
add
shlb
add
push
lds
mulb
in
pop
dec
mov
mov
xor
decl
ficoml
pop
data16
sub
cs
add
xor
movzwl
js
add
repnz
lcall
add
dec
mov
mov
add
mov
mov
fdiv
mov
mov
jg
push
mov
add
stos
adc
pushf
sub
and
xor
decl
sub
add
fisubrl
jbe
add
cs
cmp
out
inc
add
pop
sub
add
push
add
incl
xor
lcall
add
cmpsl
add
add
or
and
push
fsubrs
adc
jns
add
xchg
cmp
decl
ljmp
roll
jle
add
add
jmp
push
add
pop
add
call
sbb
and
scas
mov
sub
jmp
add
sahf
add
inc
add
add
inc
add
add
pusha
add
sbb
mov
add
repnz
cmp
dec
das
loop
mov
mov
jns
jg
mov
jmp
cmp
fldpi
push
add
cs
lahf
les
mov
add
mov
add
mov
push
add
and
incl
add
sti
push
add
add
pop
popa
add
pop
xor
pushl
movl
jbe
js
add
addr16
sub
add
addb
pop
cs
add
mov
xchg
sbb
jmp
add
add
push
cwtl
inc
add
lods
and
call
imul
fdivr
shll
call
xchg
imul
ss
insb
pop
xor
cmp
add
lahf
mov
data16
adc
rclb
add
add
add
movl
mov
pusha
add
sar
push
stos
pop
pusha
add
ret
add
add
lods
sarl
mov
adc
incl
incl
add
loope
arpl
call
add
or
or
jnp
iret
push
inc
add
pusha
add
stc
mov
imul
cwtl
das
aam
pop
or
add
aam
popa
add
cmp
lock
add
pop
mov
mov
popa
add
cld
out
inc
add
add
movsl
add
push
add
add
decl
dec
or
rolb
add
add
stos
push
add
mov
or
or
cmpsl
add
jns
aam
je
aas
and
pushl
add
jae
pushl
jp
les
sub
lahf
pop
inc
add
aam
movsl
add
add
push
jbe
mov
lods
pushf
scas
daa
add
in
data16
sub
pop
push
inc
add
cmp
jne
mov
add
or
mov
push
lock
add
push
add
and
dec
ljmp
ljmp
mov
or
adc
add
add
dec
cmp
pusha
add
nop
push
add
in
mov
js
pop
test
add
adc
jmp
add
js
mov
adc
in
add
jg
add
fcoml
cmpsl
add
add
add
push
into
aad
cld
icebp
repnz
pop
push
jmp
sbb
out
fmuls
sub
add
incl
imul
decl
jae
jmp
lahf
daa
add
pop
add
inc
add
enter
ficompl
push
js
add
fcomi
stos
jecxz
and
xchg
mov
add
ss
lods
pop
hlt
push
xchg
and
decl
add
repnz
lods
pop
xchg
mov
xlat
xchg
int
cs
mov
mov
int3
push
adc
ljmp
sbb
loop
adc
ljmp
addb
fwait
mov
push
pop
adc
dec
dec
cld
int
popf
and
in
lds
add
mov
add
movsb
add
xor
decl
add
xchg
in
jge
test
rorl
add
xor
je
ja
add
cmp
add
adc
cmpsl
add
fsubrl
add
decl
xor
incl
add
push
and
jmp
outsl
call
fdiv
movsl
add
adc
call
add
add
xchg
jne
adc
in
aam
aaa
sahf
mov
dec
cmpsl
add
add
je
cltd
inc
add
jbe
push
add
add
hlt
fisttpl
xor
pushl
add
daa
add
add
adc
inc
add
add
mov
icebp
sbb
lds
push
xchg
cmp
add
jae
jmp
add
add
cmpsl
add
and
incl
lcall
lods
xor
ljmp
add
and
call
mov
roll
add
fwait
inc
add
jp
inc
add
addl
loop
imul
pusha
add
push
add
cmpsb
add
add
jge
int
lods
mov
jg
bnd
shrl
and
decl
cmp
adc
call
mov
lds
popa
add
add
add
loopne
cmp
decl
call
xor
repz
add
mov
add
loopne
dec
add
popa
add
mov
out
cmp
add
xchg
jge
aad
add
and
add
jmp
add
mull
jg
add
add
inc
add
bnd
push
add
mov
aam
add
or
add
dec
faddp
add
add
rol
add
cltd
das
test
bound
dec
loopne
jo
inc
add
ret
xchg
in
imulb
inc
add
fsts
nop
pop
pop
stos
pop
pop
add
insb
cwtl
jp
add
daa
add
add
cmp
add
dec
mov
addr16
add
add
dec
ss
sub
cmc
aaa
loopne
lds
sahf
mov
int
jno
ljmp
insb
addb
add
push
sahf
out
addl
incl
add
jb
pushl
lcall
dec
loop
stc
or
add
push
iret
pop
mov
add
cmp
stos
and
inc
add
inc
add
ret
add
insl
sti
mov
sahf
add
mov
dec
lret
lds
mov
into
imul
add
fidivs
add
shlb
add
jecxz
mov
sub
add
incl
add
dec
pop
fimuls
mov
add
cmp
fisubrs
clc
mov
cs
int
cmp
add
push
movl
call
cmpsb
add
lods
test
movb
out
movsl
add
add
push
or
lods
xor
call
xor
jmp
ud0
add
fwait
add
jmp
add
mov
sbb
add
add
aad
int3
jnp
add
mov
ljmp
cmp
add
xchg
jo
jmp
roll
fstpl
add
pop
aam
mov
mov
sbb
addl
dec
lods
out
stc
ljmp
arpl
lcall
add
add
cwtl
lods
mov
add
mov
lds
jle
xor
cmp
dec
push
test
add
or
add
jae
lea
movb
add
add
mov
add
add
addb
aam
add
add
aam
and
decl
or
add
jg
jae
jle
gs
pop
jo
decl
add
lock
jmp
sbb
fwait
ja
mov
add
cmpsb
add
inc
add
add
call
cmpsl
add
decl
xor
mov
repnz
popa
add
cs
insb
cld
lds
fistpl
xor
dec
cwtl
ja
add
mov
add
scas
loopne
mov
xor
sbb
or
add
push
jnp
add
or
add
pop
ss
cmpsl
add
add
repz
add
add
xlat
test
lret
stos
pop
subps
push
roll
cmp
add
rorl
loope
das
inc
add
jecxz
decb
add
mov
movsb
add
data16
mov
sbb
xchg
hlt
mov
insb
movsb
add
iret
push
add
shrl
mov
add
in
je
adc
pushl
sahf
aam
sub
push
jns
repz
sbb
nop
sahf
roll
add
inc
add
and
dec
pop
ljmp
jge
out
xor
decl
outsl
popa
add
sbb
loop
dec
push
add
add
pushl
cwtl
and
mov
push
push
mov
add
add
outsl
out
test
mov
movl
pusha
add
and
lcall
add
mov
add
jg
shl
pop
or
add
decl
mov
jae
push
stos
xchg
mov
dec
push
test
add
cmc
adc
add
xchg
cmp
stos
jle
add
xor
call
add
add
add
mov
call
xchg
cmpsl
add
sbb
add
jnp
inc
add
cmpsb
add
xchg
loopne
cmp
add
fcmovnbe
add
and
pushl
incl
mov
push
add
jbe
or
inc
add
addb
enter
daa
add
repnz
add
add
add
jns
add
addb
lcall
mov
cvttps2pi
mov
add
lret
jns
jp
lret
add
dec
in
lds
dec
mov
bound
decl
push
add
jmp
or
add
sub
cltd
xor
add
add
popa
add
xchg
push
add
mov
mov
mov
push
mov
add
add
mov
scas
ficomps
stc
movl
fidivs
add
sub
leave
add
and
inc
add
mov
xor
jmp
jmp
add
sti
imul
adc
add
pop
mov
sub
dec
pusha
add
jb
call
fsubs
jp
int
mov
pop
scas
test
inc
add
in
imul
adc
pop
rcrb
cmp
cwtl
or
sbb
in
add
add
add
incl
rolb
repnz
addb
add
cmpsl
add
pop
xor
pushl
add
fistps
cmc
jg
xor
and
pushl
pop
pop
add
push
movl
pushl
add
notb
add
shll
add
popa
add
mov
aas
addb
pop
mov
adc
push
in
ja
add
pop
mov
loop
xor
jmp
and
incl
jp
add
sbb
bound
decl
add
mov
pop
movb
cwtl
sbb
addb
mov
push
jbe
ja
jno
jmp
add
xchg
jg
push
add
mov
decl
cmp
add
ret
add
add
add
add
jmp
pop
or
add
add
mov
lods
test
xor
std
std
cmp
int
sbb
decl
add
jmp
add
jecxz
test
adc
int3
adc
jmp
iret
jle
add
insb
arpl
fldt
adc
add
lahf
add
das
mov
add
mov
add
dec
sahf
add
fsubp
add
out
pop
fistps
mov
add
addb
jno
pushl
ror
mov
add
stos
xlat
dec
push
add
popf
xchg
inc
add
addb
add
jge
add
jb
fildll
clc
ja
add
or
add
imul
aas
mov
out
movsl
add
add
jae
lcall
lods
inc
add
mov
dec
push
add
lds
addl
or
ljmp
add
push
mov
add
add
push
jle
neg
xor
call
pushl
push
add
mov
call
movsl
add
in
stos
mov
add
mov
add
add
insb
jecxz
add
int
adc
call
addl
add
xchg
mov
bound
dec
movb
add
je
movl
dec
cltd
push
add
cs
arpl
ljmp
adc
call
add
and
jmp
pushl
inc
add
notb
add
push
add
add
inc
add
mov
hlt
loop
jmp
out
adc
call
sti
jle
add
pop
jbe
add
jno
lcall
add
xchg
mov
add
mov
movl
add
outsb
inc
add
xor
add
lcall
add
imul
add
jmp
add
xchg
ficoms
stos
mov
mov
add
data16
add
nop
jnp
add
cwtl
xchg
xor
fldcw
add
or
js
pop
xlat
lods
push
test
mov
mov
add
shlb
ljmp
cwtl
aad
pop
daa
add
add
lahf
insb
and
pusha
add
outsb
dec
mov
jno
decl
add
decl
sub
add
dec
popf
sbb
call
add
stos
jp
stos
das
fidivrs
dec
jnp
addl
jecxz
pop
mov
add
mov
faddp
add
frstor
pop
mov
sub
add
sbb
add
mov
lds
mov
ss
jmp
lds
lds
xchg
adc
incl
add
inc
add
or
mov
dec
dec
ds
pop
rcr
addl
inc
add
add
add
sub
addb
lods
xor
enter
loop
stc
cli
sahf
sbb
mov
add
cs
ss
jne
popa
add
and
addb
stc
jb
incl
roll
clc
sbb
add
in
mov
add
test
mov
add
and
add
and
int3
adc
push
fstp
stos
cmp
adc
decl
out
push
add
mov
jmp
add
cmp
add
xchg
ljmp
loopne
or
push
add
add
and
push
xor
incl
add
mov
jecxz
mov
roll
add
add
add
int3
nop
shrb
push
add
mov
movsl
add
add
outsl
jmp
cwtl
cltd
ljmp
add
rolb
add
cwtl
roll
dec
sub
add
adc
fisubl
add
mov
add
add
mov
add
pop
xchg
and
out
addb
inc
add
insb
pop
popf
imul
call
aad
add
push
add
sbb
arpl
incl
cmp
or
inc
add
dec
jge
and
jmp
add
iret
ffree
add
add
cs
test
mov
out
rolb
add
test
outsl
out
or
add
test
or
aam
add
mov
fstl
add
add
add
mov
test
addb
testl
add
int
mov
call
enter
iret
int3
add
mov
ss
add
add
stos
add
loopne
outsb
or
add
lock
sub
push
mov
add
cs
add
xchg
in
cmp
add
xor
pushl
mov
add
int
xor
fildl
add
xor
call
add
test
add
inc
add
inc
add
xchg
ljmp
add
and
push
outsb
mov
xchg
addr16
add
add
repnz
add
mov
xchg
add
inc
add
pop
inc
add
adc
lcall
pop
jns
inc
add
rcll
imul
add
lcall
fsubl
les
xchg
and
jg
dec
cs
inc
add
decl
jbe
pusha
add
and
jmp
sub
incl
in
and
pop
mov
inc
add
push
mov
lods
fbld
dec
xor
fidivl
add
ljmp
in
mov
bnd
mov
sbb
mov
cltd
iret
insl
add
dec
add
add
push
xor
add
pushl
pushf
daa
add
fs
or
mov
cmpsl
add
sub
and
cld
in
add
or
mov
add
add
add
xor
pop
shlb
and
jmp
add
loope
add
dec
ljmp
out
mov
push
add
flds
fwait
movl
add
popa
add
adc
inc
add
add
dec
enter
add
cmp
int3
addl
adc
ljmp
mov
sub
cmp
mov
add
push
lret
xor
add
lahf
cmp
sbb
jnp
fisttps
sub
test
sub
push
rolb
jmp
fisubl
incl
jge
cld
jb
jmp
xor
add
add
add
inc
add
or
jmp
add
lods
mov
add
pop
data16
push
add
ja
push
pop
sbb
add
pop
cli
dec
in
cmpsl
add
incl
ret
mov
mov
add
dec
sahf
lds
cmp
add
adc
add
jbe
xchg
jb
ljmp
movb
add
add
mov
mov
add
mov
aam
add
mov
add
push
into
aam
add
cmp
add
outsl
cli
pop
push
push
mov
data16
pushl
or
add
lea
add
dec
sbb
ss
enter
xor
sti
daa
add
mov
addl
add
dec
enter
push
add
fnstenv
call
dec
imul
push
xor
add
pop
jnp
insb
loop
dec
or
das
sub
push
pusha
add
dec
sbb
pop
sti
sub
push
int3
nop
aad
add
decl
xor
add
adc
lcall
dec
jne
mov
jnp
adc
pop
popa
add
xchg
or
out
dec
loope
mov
add
popf
mov
add
lcall
add
adc
cmp
add
lods
xchg
imul
roll
ret
add
add
movsl
add
add
sub
scas
aad
push
adc
dec
sbb
ret
je
div
js
sub
mov
fisttpll
add
add
push
inc
add
add
pushf
das
test
je
scas
xor
mov
jg
add
sbb
add
fimuls
xor
incl
xchg
into
aam
push
scas
into
in
mov
les
cmp
lret
add
lcall
add
or
roll
mov
add
cmp
mov
add
test
add
jns
push
sub
lcall
and
incl
lcall
xor
fists
cmp
sbb
add
dec
pop
lods
mov
xor
lcall
mov
or
add
dec
cmpsl
add
add
mov
fidivrl
ret
add
mov
add
bound
lcall
add
push
movl
mov
mov
mov
arpl
jmp
daa
add
roll
call
call
incl
inc
add
jo
fsts
push
mulb
jbe
add
in
adc
sti
lahf
mov
or
push
adc
call
jecxz
push
mov
add
icebp
jle
add
push
add
fiaddl
add
jg
jl
add
sub
jne
adc
mov
add
and
cmc
pop
sti
push
dec
adc
incl
add
adc
push
mov
push
inc
add
inc
add
lcall
stos
mov
aas
pop
add
add
decl
pop
repnz
mov
in
inc
add
fisttpl
dec
ds
mov
scas
cmp
add
decl
add
add
inc
add
repnz
add
int3
inc
add
jnp
shrb
out
or
roll
xchg
cwtl
xchg
popf
bnd
xchg
clc
add
decl
fcomps
jb
ljmp
mov
push
add
cwtl
fldz
push
insl
mov
fwait
pop
or
gs
mov
add
xor
add
sbb
add
ljmp
sarl
add
fstl
ljmp
add
adc
jae
cmp
add
add
test
fcomps
add
push
cmp
jae
lcall
and
lcall
fcmovne
push
add
call
add
sub
pop
movl
repnz
rcll
and
decl
cmpsb
add
add
add
add
lds
ds
inc
add
sti
adc
sub
mov
add
jmp
dec
call
mov
mov
pop
out
addb
add
adc
jmp
add
push
add
in
fidivrs
push
add
or
pop
and
cltd
pop
add
rolb
mov
add
add
add
in
fs
add
stc
lock
jnp
mov
sub
add
popa
add
push
movsb
add
add
mov
inc
add
addb
ljmp
add
insb
cltd
xlat
jmp
add
add
sub
add
mov
xchg
inc
add
jmp
cmpsb
add
roll
insb
inc
add
cmpsl
add
push
add
dec
inc
add
nop
ljmp
xor
add
jnp
hlt
add
decl
add
repnz
xor
mov
repz
jmp
xor
cmp
xchg
and
pushl
ret
add
adc
loope
in
sbb
roll
aaa
and
cmp
add
jl
add
mov
mov
add
mov
add
jmp
jnp
fldenv
add
add
jmp
push
add
sbb
incl
add
adc
push
jns
mov
stc
xor
ljmp
add
add
ret
add
xor
stc
aaa
push
add
rolb
add
adc
jmp
testl
cmp
dec
lock
mov
nop
movsl
add
imul
add
xchg
push
add
fmuls
and
incl
insb
jae
jp
or
bound
call
sub
pop
add
pop
and
dec
mov
or
rolb
add
dec
cld
out
imul
lcall
mov
aad
add
xchg
pop
into
call
daa
add
add
hlt
jae
call
cwtl
xor
decl
add
cli
jb
lcall
add
and
mov
adc
mov
dec
aas
jns
sbb
mov
pushl
ljmp
xchg
je
add
jmp
pop
add
int3
leave
mov
xlat
push
jmp
add
fiadds
mov
xor
jns
mov
sub
xlat
xor
lcall
in
push
add
push
add
sbb
add
xchg
and
call
mov
push
cld
stos
hlt
lods
and
xor
call
call
pushf
inc
add
add
das
mov
pushl
add
loop
mov
pop
lret
cmp
dec
fnsave
call
add
push
add
adc
movb
arpl
decl
add
xchg
lret
fistpll
inc
add
add
incl
fnstcw
pop
add
inc
add
sahf
ljmp
rclb
add
roll
dec
lahf
mov
pushl
dec
jns
add
add
push
dec
imul
push
add
rol
add
add
xor
incl
popa
add
dec
pop
test
add
scas
test
pop
sub
add
xlat
ret
add
repnz
jmp
lret
add
inc
add
sub
cwtl
repz
loopne
push
adc
imul
mov
lcall
push
fimuls
repnz
cmp
sub
add
add
movsb
add
push
add
cmp
mov
rolb
adc
addl
add
xor
fwait
roll
add
mov
mov
aam
popf
je
dec
stos
cmc
out
mov
stos
mov
bound
jmp
add
xchg
push
mov
mov
push
add
mov
add
push
add
bound
ljmp
fld
add
loopne
out
sarl
adc
lcall
add
movl
push
movsl
add
pop
fdiv
add
add
fbld
adc
pushl
pop
mov
add
call
sbb
inc
add
jmp
add
dec
add
lcall
adc
call
adc
mov
das
sub
pop
push
add
jno
call
add
scas
pop
mov
sub
add
xor
ljmp
jnp
add
call
and
fisubrs
jg
sub
mov
mov
add
incl
stos
cmc
mov
add
add
dec
add
add
out
je
add
xor
in
mov
insb
std
xchg
mov
pop
js
add
or
mov
add
jle
ficompl
pop
or
jecxz
add
mov
cld
adc
aaa
jb
cmp
mov
adc
inc
add
inc
add
fwait
addl
xchg
adc
call
add
add
adc
call
jmp
add
or
mov
push
add
push
cld
jnp
xor
xchg
mov
add
add
add
ret
add
xlat
pop
stos
repz
loop
pop
sub
jl
mov
fwait
sub
mov
repz
xor
jl
add
push
push
push
add
pop
out
clc
movb
add
fnsave
mov
add
xor
jmp
out
and
dec
mov
sub
shl
neg
outsl
outsb
and
mov
xor
jmp
popf
cmpsl
add
add
fwait
pop
dec
mov
add
out
rcl
popf
rolb
add
add
add
test
xchg
or
add
into
std
pop
add
gs
out
push
add
sub
or
int3
out
popa
add
cmp
add
mov
loop
and
pushl
sbb
jbe
add
sbb
rol
add
add
sbb
lret
js
inc
add
xlat
imul
add
add
jmp
add
mov
push
add
sbb
or
fldenv
add
cmp
in
push
add
push
ret
add
mov
add
js
jl
adc
pushl
pushl
pop
add
cmp
stos
icebp
in
inc
add
repz
xchg
sub
add
imul
int3
jns
add
dec
jno
call
xor
incl
add
inc
add
and
lcall
cmp
movsb
add
das
cltd
sahf
jl
inc
add
repz
push
add
lcall
add
ljmp
mov
nop
inc
add
cli
fwait
add
sub
inc
add
inc
add
xor
mov
dec
mov
add
scas
mov
sbb
mov
pop
popa
add
pop
xor
mov
movsb
add
pushl
add
xor
push
repz
add
scas
cmp
cmp
add
jmp
add
add
adc
call
add
jnp
shrb
cwtl
scas
leave
push
add
mov
inc
add
lods
addb
pop
stos
pop
pushf
adc
dec
sarl
cmp
cmp
bound
lcall
add
cld
js
cmpsl
add
mov
cmp
add
sti
cmc
add
es
stos
cltd
or
add
sbb
or
add
jo
pushl
add
das
shll
test
ss
sahf
adc
lcall
and
decl
mov
hlt
mov
add
loop
mov
mov
add
add
push
add
bndldx
mov
sub
ljmp
pop
out
add
stc
leave
cwtl
pop
jae
call
cmp
or
es
inc
add
and
decl
sahf
xchg
js
add
in
xchg
mov
sbb
pushf
dec
shrl
add
mov
lcall
dec
fisubl
call
loope
inc
add
icebp
sub
cmp
pop
xor
push
add
inc
add
fsts
add
push
add
mov
cltd
mov
jns
mov
mov
add
aaa
adc
dec
push
pop
icebp
add
cmp
mov
dec
loope
cmp
xchg
inc
add
movb
dec
adc
ljmp
lds
ds
addl
sahf
pop
add
mov
mov
cltd
rcrl
add
add
dec
xchg
jb
decl
test
lahf
ljmp
daa
add
mov
fsts
add
push
add
add
decl
out
dec
jle
add
lret
lock
mov
adc
jnp
add
arpl
decl
mov
shrb
xchg
loop
cli
ret
add
lcall
je
loopne
movsb
add
ret
add
add
pushf
add
add
fincstp
stc
jmp
mov
add
add
pop
sub
or
or
pushl
add
loop
add
lcall
inc
add
movb
movl
push
hlt
push
jno
ljmp
imul
jno
incl
out
pop
add
rolb
pop
mov
nop
int
add
add
lcall
push
mov
add
or
test
or
add
stc
inc
add
fisttps
arpl
incl
fldl
add
xchg
dec
inc
add
int
inc
add
mov
or
and
jecxz
mov
add
add
mov
add
stc
cmp
jae
lcall
jmp
fwait
mov
mov
add
add
inc
add
add
mov
add
mov
add
jae
ljmp
pushl
hlt
pop
lahf
mov
cmp
mov
cmp
add
add
loopne
inc
add
ds
add
push
jg
add
mov
add
pushl
jecxz
adc
in
nop
xor
ljmp
add
push
add
mov
divb
ljmp
das
jecxz
leave
inc
add
or
jmp
aad
pop
ja
mov
test
add
scas
ret
add
ljmp
mov
repz
in
push
enter
mov
add
cmp
fimuls
pop
jae
jmp
lock
fucomp
nop
jnp
dec
jecxz
jp
add
mov
add
add
sub
add
test
add
call
loope
in
divl
add
add
mov
add
add
add
test
mov
hlt
ds
and
daa
add
add
jmp
stc
imul
mov
add
push
and
cld
and
ss
cld
movsb
add
or
iret
sarb
pushf
push
lds
inc
add
js
add
fldenv
add
pop
jg
adc
pop
mov
add
ljmp
add
int
sub
pause
jae
lcall
loopne
mov
ret
add
mov
add
adc
jmp
adc
call
lret
mov
imul
inc
add
inc
add
mov
icebp
push
or
mov
push
into
add
add
add
add
cmp
add
xor
jmp
ds
pop
adc
inc
add
jl
jo
lcall
pop
or
add
pop
xor
incl
push
adc
add
roll
popf
push
movb
in
mov
jno
incl
std
nop
popf
mov
int3
je
lcall
outsl
call
push
add
outsb
sub
xchg
sarl
icebp
out
rcrb
jmp
enter
add
add
add
pop
add
add
mov
add
dec
adc
incl
cmp
push
add
add
call
add
jge
add
pop
mov
adc
jnp
add
pop
inc
add
inc
add
bound
incl
add
fistps
add
mov
lock
fbstp
call
test
add
in
push
popf
and
jmp
iret
push
add
push
sbb
incl
pushf
push
out
sub
dec
or
inc
add
out
inc
add
bound
incl
mov
dec
jge
add
aaa
addr16
out
in
sub
movl
sub
add
in
jno
pushl
fnsave
cmp
inc
add
dec
dec
daa
add
add
repz
dec
and
pushl
add
filds
sbb
add
add
ja
cmp
mov
pop
inc
add
int3
movsb
add
add
in
lods
loopne
sub
sbb
xchg
add
ret
add
or
inc
add
imul
decl
xor
incl
and
cmpsb
add
movsl
add
xchg
mov
add
cwtl
iret
cmp
add
ljmp
pop
mov
jl
js
jle
pop
sbb
add
push
inc
add
pop
movsb
add
mov
mov
inc
add
sarl
add
cmp
hlt
xor
ljmp
mov
pop
jmp
jae
call
add
into
sbb
lock
add
dec
test
out
lods
faddl
cmp
jno
out
iret
pop
jl
leave
mov
jmp
repnz
mov
clc
cmpsl
add
ljmp
add
std
or
lods
mov
add
add
mov
sub
sbb
cmp
add
or
test
xchg
enter
add
lds
mov
add
mov
cmp
add
loope
jb
decl
add
inc
add
add
jns
add
shl
add
decl
xor
incl
pushf
mov
incl
add
dec
jle
jmp
out
movsl
add
std
movl
add
pop
mov
decl
push
add
jo
lcall
add
xchg
add
add
add
add
jecxz
mov
adc
lcall
divb
add
enter
call
shrb
add
cltd
leave
roll
add
int
add
je
pushf
dec
add
pcmpgtw
bound
call
mov
inc
add
mov
rcr
xlat
inc
add
push
faddp
add
pushl
incl
iret
xchg
xchg
pop
sbb
add
xchg
fistl
add
add
sbb
add
dec
xchg
or
movsl
add
daa
add
inc
add
iret
push
add
incl
out
inc
add
add
and
cmp
add
ljmp
dec
mov
mov
aas
jl
icebp
inc
add
out
lcall
nop
cmp
pop
mov
xchg
jns
xchg
push
mov
add
sub
sahf
push
jns
add
xchg
xchg
mov
add
inc
add
add
lods
add
outsl
adc
in
mov
pop
aaa
call
sub
xchg
add
sbb
adc
incl
add
jns
lret
pop
xor
jmp
jmp
add
pushl
fidivrl
cmp
sbb
cs
pop
int
add
sbb
clc
stos
dec
repnz
pop
lods
sbb
lcall
xchg
aaa
cltd
in
rolb
push
push
inc
add
popa
add
and
xchg
xchg
leave
sub
add
jo
pushl
mov
add
push
xchg
roll
out
popf
pop
add
pushl
add
xor
cmp
incl
aad
addb
add
cmp
cmp
sub
imul
bound
and
lds
aad
add
bound
dec
movb
add
call
incl
mov
mov
decl
ficomps
adc
lcall
mov
cmp
bnd
imul
push
lods
lea
inc
add
lahf
aaa
leave
loopne
add
aam
add
jmp
roll
out
pop
push
add
xor
incl
add
push
shll
clc
jge
push
add
pop
xchg
and
call
add
xchg
and
call
add
test
lret
aas
scas
or
add
fldenv
decl
fst
mov
xor
cmp
add
dec
fidivrs
add
push
add
mov
mov
pop
insl
mov
addb
add
push
jl
pop
jae
decl
push
loop
cmpsb
add
or
and
and
movb
add
loopne
test
add
mov
cmpsl
add
decl
pop
add
add
xor
jg
scas
rolb
ja
add
fstpt
add
jmp
add
add
add
add
int3
inc
add
sbb
sbb
add
outsb
or
add
pop
fisttpll
add
test
push
mov
pushl
mov
lahf
sbb
add
scas
mov
add
mov
add
decl
add
mov
add
add
add
inc
add
add
pop
ds
repz
jnp
add
rorb
add
jbe
fidivl
add
fisttps
movb
push
les
dec
xor
jmp
add
pushl
add
pop
xchg
popa
add
bound
ljmp
xchg
addl
pop
shrb
mov
add
je
out
es
xor
movsl
add
push
lea
add
jmp
add
xchg
xchg
fisttpll
sub
add
xchg
ret
push
add
lds
and
lcall
cmp
mov
inc
add
decb
push
add
cmp
add
icebp
fsubrl
scas
cld
jl
add
test
mov
inc
add
sub
inc
add
add
mov
add
add
add
test
aad
fisttpll
mov
add
faddl
jmp
add
mov
add
mov
mull
ss
add
popa
add
jne
lock
mov
add
sti
adc
call
outsl
sbb
push
dec
pop
das
hlt
jg
aad
add
inc
add
add
jle
add
jl
jae
cld
sbb
or
lcall
inc
add
dec
mov
data16
add
add
int
fcom
imul
fldenv
out
loope
les
out
push
jge
xchg
cmpsb
add
add
sarl
fcmovnu
mov
roll
mov
add
add
ljmp
jo
pushl
insl
add
add
std
adc
ljmp
cltd
adc
adc
pushl
push
add
pop
rclb
add
bound
decl
incl
add
popf
rolb
nop
fdivr
xor
mov
add
out
add
ljmp
add
adc
lcall
mov
js
ret
add
rcrl
jb
call
cmp
mov
call
addb
testb
cld
push
xchg
xor
aas
aas
fisttpl
jecxz
sbb
add
js
or
jne
sahf
mov
repnz
add
ss
addb
fnclex
add
add
icebp
sub
jae
pushl
add
add
mov
out
lock
pop
add
add
jge
cld
cwtl
fistps
mov
add
dec
lret
cmpsb
add
add
pop
jp
lea
clc
adc
lcall
incl
cmp
sbb
adc
add
test
jg
add
test
add
cmp
add
lahf
pusha
add
hlt
mov
cmc
jecxz
add
jmp
add
ljmp
xchg
mov
lods
jge
sar
fcmovu
mov
mov
pusha
add
add
loope
test
pop
adc
outsl
mov
in
insl
lds
xchg
add
or
lcall
addb
rolb
add
call
add
xor
add
icebp
add
xor
pushl
decl
add
scas
lock
or
arpl
jmp
or
rorb
xchg
jbe
xlat
push
mov
xor
add
add
fsubr
icebp
lcall
ljmp
mov
mov
sub
push
add
call
pop
xchg
shrb
jbe
add
call
dec
adc
add
add
or
repnz
add
iret
icebp
sub
add
pop
stc
jne
ds
add
mov
out
repnz
hlt
sbb
mov
idiv
xchg
cmpsb
add
iret
xor
add
add
add
add
mov
lock
xor
push
dec
pop
cmp
pop
adc
incl
popf
adc
add
jns
mov
add
popf
out
xor
pushl
add
xor
mov
mov
ror
lea
and
incl
add
mov
dec
into
lcall
push
push
or
add
add
push
dec
or
cmp
addb
add
call
push
add
mov
mov
add
add
xchg
repz
add
ljmp
lods
mov
sbb
and
inc
add
test
mov
dec
addl
pop
add
loop
cltd
ficomps
std
outsl
cwtl
pop
addl
add
mov
outsb
inc
add
inc
add
and
ljmp
inc
add
xor
ljmp
pushl
add
add
test
push
jmp
add
mov
add
incl
inc
add
pop
mov
lods
cmpsb
add
cwtl
addb
add
add
stos
mov
add
flds
add
push
add
push
mov
and
cmp
mov
scas
jecxz
mov
les
rcrb
xor
call
add
cmpsl
add
add
lcall
addb
idivb
rcrl
add
sub
add
jnp
roll
mov
xchg
stos
sbb
jmp
add
add
lcall
add
and
incl
fwait
aad
add
adc
ljmp
data16
call
add
fildll
pop
pop
push
mov
add
test
out
push
inc
add
in
and
add
incl
jg
add
add
xor
fisubrs
nop
inc
add
lcall
add
test
dec
mov
add
lahf
adc
call
aam
push
popf
loop
repz
fcomi
cld
cmpsb
add
mov
xor
dec
data16
add
jmp
ret
add
add
outsb
adc
out
iret
mov
out
arpl
jmp
push
add
in
push
scas
sahf
add
jmp
add
add
fisttps
adc
jmp
add
stos
dec
enter
adc
pop
les
pop
sub
jnp
add
xor
add
add
mov
movsl
add
add
add
add
adc
lcall
add
xor
push
cmp
add
mov
add
cmc
mov
test
sbb
push
add
mov
sbb
cmc
dec
adc
mov
push
repz
add
push
sub
add
pop
add
data16
xchg
add
jmp
aas
clc
call
push
ret
add
add
adc
fnstenv
popa
add
ss
add
jmp
ljmp
xlat
pop
pop
mov
sbb
add
or
dec
mul
add
add
add
fwait
in
add
incl
add
repnz
outsb
push
push
adc
add
and
ljmp
cwtl
sub
movl
addl
sub
ja
add
and
incl
fbstp
gs
add
add
lret
add
add
add
ljmp
jmp
mov
mov
stos
gs
ljmp
jmp
incl
mov
lds
addb
add
into
sti
loope
lcall
lods
mov
push
add
inc
add
push
and
lock
fldt
cmp
add
add
push
je
jge
aam
rolb
add
mov
jle
add
mov
mov
inc
add
lcall
fsubrs
cmp
jp
sub
add
lcall
lods
mov
movb
data16
scas
push
fidivs
sub
add
inc
add
addl
les
arpl
lcall
insl
pop
out
jg
lret
scas
xchg
test
add
add
xchg
or
add
pushl
test
add
or
add
fbld
incl
call
das
data16
call
xchg
movl
pushl
add
insb
pusha
add
fimuls
sbb
in
cwtl
ret
imul
dec
fistpl
aaa
out
movsl
add
stc
push
ljmp
and
add
or
data16
cmp
xchg
aaa
pop
loope
hlt
ret
add
popa
add
sti
sahf
test
pop
cs
add
add
pop
in
ficoms
ljmp
add
cmpsl
add
jp
add
pop
cmp
addb
fbld
incl
add
push
add
roll
dec
pop
out
xchg
jmp
add
pushf
or
mov
stos
fs
pop
nop
mov
sbb
add
bound
call
add
add
add
fstpt
incl
or
and
mov
inc
add
add
push
pop
mov
jnp
fstpt
pop
sub
ja
repnz
out
mov
pushl
add
lock
test
iret
lahf
sub
in
or
add
xchg
cmp
push
dec
imul
add
scas
adc
push
add
mov
call
add
sub
push
add
je
mov
xchg
add
leave
dec
iret
test
dec
pop
int
add
popa
add
xor
jl
add
push
add
pop
cmp
inc
add
lods
pop
dec
cs
call
jmp
dec
pusha
add
mov
pop
sub
fiaddl
adc
ljmp
add
jecxz
mov
sbb
sub
push
jnp
call
mov
sbb
call
mov
jns
test
push
inc
add
pushl
xchg
push
push
add
add
and
in
ljmp
add
incl
add
push
jns
imul
mov
dec
inc
add
fisttpll
mov
stc
leave
cmp
frstor
push
add
cmp
in
hlt
fcmovnbe
push
in
roll
add
jecxz
sbb
add
dec
leave
cmpsl
add
sbb
sub
add
mov
add
fildl
cwtl
lock
or
add
pushl
add
mov
add
insb
and
jns
add
loope
jo
pushl
pop
dec
cmpsl
add
sbb
stc
pop
popf
jo
call
data16
adc
decl
dec
jae
ljmp
test
add
add
icebp
push
cmp
add
xchg
popa
add
mov
addb
add
add
add
ficoms
add
insl
ja
push
loope
dec
add
mov
add
sub
add
sub
fadds
cmp
int3
and
push
addl
add
add
add
add
out
mov
pop
or
dec
adc
call
jmp
add
pop
lahf
jns
scas
push
add
lcall
loope
stos
bound
incl
add
dec
xchg
cld
outsl
repz
out
aad
roll
test
jns
out
push
int
mov
inc
add
sbb
add
add
add
or
or
and
ljmp
lcall
pop
mov
add
jmp
stos
adc
sub
cmp
sbb
aad
add
sub
add
fistl
push
jne
add
cli
push
add
push
jae
ljmp
mov
loopne
lcall
add
nop
movsb
add
lcall
add
call
mov
add
lcall
rcll
mov
inc
add
lcall
add
add
stos
loope
ljmp
push
add
add
add
ret
in
and
ljmp
lods
data16
add
jnp
iret
lret
pushf
fdivr
fldt
or
stos
jmp
xor
add
mov
add
incl
push
and
pushl
push
add
jg
rolb
add
sbb
or
jb
push
lock
mov
sbb
add
mov
jle
cs
mov
dec
and
ds
pop
jp
dec
outsb
addb
add
call
add
add
incl
add
enter
add
mov
add
dec
pop
outsb
xlat
movl
add
add
add
jecxz
mov
test
out
rcll
add
add
ljmp
mov
movsb
add
add
sbb
cld
jg
nop
dec
or
mov
jg
push
add
ja
add
inc
add
es
xchg
cmp
add
pushf
in
sti
call
cwtl
daa
add
add
add
push
xlat
out
sarl
dec
stc
fstl
add
imul
adc
add
mov
je
sub
add
insb
push
add
push
add
data16
add
add
aas
outsl
insl
xor
decl
push
dec
std
dec
add
scas
cmpsl
add
stos
dec
add
call
add
adc
jmp
fcmovne
and
lcall
call
sbb
mov
xchg
movsb
add
xor
jmp
jnp
sub
add
cmp
add
pop
mov
mov
fstl
decl
cli
mov
add
push
push
aad
push
add
incl
add
xor
lea
add
daa
add
lcall
xchg
movl
ja
imul
rol
add
inc
add
cltd
mov
add
add
movb
fwait
call
add
nop
sbb
cmp
pushf
or
out
repz
add
add
ljmp
pop
jecxz
hlt
xchg
cmp
xchg
testl
jne
stc
aad
add
jle
lods
cmc
lods
lods
jo
call
dec
mov
add
add
mov
sub
add
add
icebp
mov
add
add
add
not
mov
mov
fistpll
add
add
push
add
sub
lods
fimull
pop
add
inc
add
fbld
in
addl
add
mov
lea
adc
pushl
mov
add
add
cli
in
stc
int
add
ja
cld
aad
lret
addb
loop
add
add
adc
pushl
add
mov
call
xor
aam
add
adc
lcall
push
add
lret
lret
movb
cli
push
add
inc
add
or
jo
decl
addl
push
mov
fsubrl
pop
les
cmp
arpl
decl
push
add
mov
add
iret
inc
add
add
movb
add
inc
add
inc
add
mov
les
in
xchg
stc
std
ret
add
pop
jge
adc
incl
inc
add
and
inc
add
add
xchg
mov
cmp
lcall
add
add
mov
mov
mov
mov
scas
jg
sbb
push
lret
stc
mov
dec
mov
mov
add
arpl
ljmp
in
mov
xor
sti
dec
pop
add
shr
mov
pop
dec
ss
pop
add
jmp
decl
mov
test
cmpsb
add
add
dec
fwait
push
xchg
sbb
adc
incl
add
loope
shll
push
add
outsl
jb
decl
add
addb
cld
push
add
jnp
movsl
add
pop
fscale
and
pushl
mov
outsl
movsl
add
add
pushf
dec
insb
fiaddl
add
mov
icebp
roll
sub
and
call
in
cmp
add
rorb
jae
mov
or
push
scas
sub
cmp
add
add
pushl
ljmp
add
jmp
xor
inc
add
jne
cmp
mov
dec
jnp
add
push
add
in
insb
or
dec
add
add
mov
lods
push
add
outsl
pop
sti
mov
add
add
rolb
clc
dec
mov
mov
add
dec
out
push
testl
movl
add
and
push
xchg
jae
jmp
add
jmp
add
out
adc
adc
add
sbb
mov
fidivrs
xchg
icebp
sbb
add
imul
add
clc
outsb
fmull
add
fsubrl
add
pop
sub
add
cmp
add
aas
outsb
shl
add
mov
ljmp
and
jmp
add
pop
or
or
add
sahf
jb
jmp
insb
mov
iret
lods
mov
add
lcall
in
pop
cwtl
push
jne
add
add
add
data16
mov
add
incl
add
inc
add
add
leave
in
push
test
push
decl
jbe
push
xor
add
addb
fnstenv
jecxz
rolb
addl
add
lahf
sub
cli
lock
mov
add
mov
dec
dec
stos
outsl
pop
shrl
stos
mov
jo
pushl
call
add
sbb
sbb
add
roll
jno
pushl
add
dec
data16
lods
sahf
sbb
jmp
xor
lcall
mov
mov
mov
pop
mov
movl
lea
mov
add
pop
cmp
add
addl
pop
inc
add
add
inc
add
jno
lcall
icebp
loopne
cltd
push
les
call
call
insb
loope
test
out
xchg
nopl
and
stc
int
loop
push
call
mov
enter
incl
add
xchg
jae
lcall
xchg
xlat
pusha
add
xor
incl
pop
mov
cwtl
repz
call
lcall
loop
inc
add
stc
jno
pushl
sahf
add
xor
pushl
cmp
dec
mov
in
pop
push
add
cvtps2pd
push
movl
popa
add
lds
addb
imul
ret
add
add
add
push
add
add
sahf
jecxz
stos
in
pop
add
cltd
aad
jmp
add
add
pop
inc
add
jl
roll
add
pop
dec
in
mov
mov
add
lock
xchg
xchg
pop
in
mov
add
jl
inc
add
in
test
movsl
add
push
sub
ss
dec
inc
add
enter
decl
add
imul
jmp
sbb
or
mov
add
clc
jae
decl
add
add
add
lcall
or
decl
cmp
fcompl
add
pop
add
push
add
xchg
hlt
add
mov
jae
pushl
add
cmp
add
mov
mov
mov
jg
xchg
jl
adc
ljmp
push
add
repz
cmpsb
add
in
fadds
xor
ret
add
jbe
jmp
je
add
addr16
add
push
rolb
mov
add
call
add
icebp
into
popf
inc
add
inc
add
add
add
nop
lcall
cwtl
cmp
rolb
mov
or
add
pop
xor
add
sti
mov
sbb
xchg
jmp
add
add
mov
jae
incl
push
lds
fwait
dec
ss
movb
shll
fbld
aam
add
repnz
cmp
add
push
add
pusha
add
jecxz
push
sub
jmp
in
mov
add
inc
add
decl
rcrb
and
daa
add
inc
add
xlat
xchg
jbe
mov
sbb
rolb
add
mov
mov
cs
stc
adc
call
push
add
into
popa
add
ja
add
push
and
or
jmp
sbb
add
jg
popa
add
sti
mov
in
adc
ljmp
add
add
and
lcall
add
xor
incl
call
or
or
adc
or
aam
add
pushf
mov
daa
add
add
pop
insl
add
stos
jo
call
add
jg
add
cmp
add
xchg
mov
out
test
jecxz
stos
into
les
dec
addb
int3
repz
inc
add
sbb
incl
dec
adc
jmp
dec
js
and
jmp
adc
jmp
add
incl
dec
mov
push
push
inc
add
pop
fcom
ds
add
push
add
add
add
mov
add
add
repnz
add
imul
add
cs
dec
ja
add
aas
js
fidivl
incl
push
daa
add
add
insb
sub
and
call
xchg
xor
decl
movl
pop
mov
jmp
add
xor
mov
xor
call
add
adc
ljmp
roll
jp
mov
add
cmc
outsl
shrb
sub
add
mov
arpl
decl
icebp
jbe
add
add
adc
decl
jo
decl
push
jl
popf
fistl
leave
and
ljmp
xor
lcall
push
add
addb
xor
call
add
cmp
mov
add
add
mov
mov
add
jno
decl
jne
add
addb
test
idivb
incl
jmp
add
in
sub
inc
add
xchg
or
mov
ljmp
lods
push
dec
xchg
inc
add
add
out
jne
loop
stc
jmp
add
add
rolb
dec
jge
add
sbb
push
mov
mov
addb
add
dec
cmp
jmp
adc
jmp
add
mov
add
incl
add
xor
incl
jmp
add
int
add
popa
add
xor
lcall
and
lcall
xchg
sub
std
xchg
data16
pushl
call
pop
push
jg
mov
add
test
scas
mov
jb
ljmp
cmp
popa
add
mov
roll
bound
push
dec
jno
inc
add
in
push
mov
lcall
add
add
add
dec
pop
scas
mov
ss
std
inc
add
pop
ja
add
add
push
add
data16
pop
add
lods
add
lcall
mov
add
inc
add
repz
ljmp
pop
fstpl
add
mov
add
lods
xchg
pushf
iret
jnp
popa
add
sarl
icebp
jns
cld
or
test
aad
cmc
mov
lcall
add
mov
add
lds
out
push
cmp
jbe
aam
jnp
int
add
add
jmp
add
add
or
xchg
pop
jbe
add
add
out
cmpsb
add
out
mov
lods
or
cld
mov
jns
add
add
in
sub
add
std
mov
add
fwait
push
add
and
call
lds
jl
ret
add
lods
push
inc
add
or
pop
jno
mov
loope
mov
clc
in
pop
insb
mov
xor
decl
mov
cmp
or
xor
decl
out
mov
inc
add
add
call
in
lret
out
pop
add
pop
insb
or
pop
addb
add
add
sbb
daa
add
js
push
inc
add
sub
sub
lods
ret
add
inc
add
addl
cmp
mov
int3
loopne
pop
and
lcall
aas
mov
jl
sub
add
push
add
xlat
jg
add
aas
jne
mov
loop
loopne
pop
adc
jle
mov
fmull
rcrl
dec
dec
emms
and
loop
dec
insl
enter
insb
arpl
clc
adc
mov
dec
aam
add
add
add
cs
add
test
adc
add
js
mov
or
leave
cmp
aas
jnp
add
add
add
xor
mov
add
fninit
add
jo
decl
aaa
int3
lds
dec
jo
incl
or
dec
sub
cltd
or
rcl
bound
fimuls
roll
mov
ror
rcl
or
in
inc
add
mov
adc
jmp
stc
add
lds
rolb
aas
add
decl
inc
add
cmpxchg
fdivrs
dec
mov
roll
cwtl
inc
add
out
mov
int3
mov
add
pop
mov
clc
dec
out
push
add
or
shrb
inc
add
push
add
add
xor
incl
jmp
add
mov
jae
incl
jmp
jmp
shll
add
ret
add
add
push
mov
imul
and
pushl
adc
ljmp
pop
add
pushl
je
iret
out
pop
clc
mov
add
int3
inc
add
notb
aaa
mov
sbb
add
pop
pop
sub
mov
jle
das
sbb
cmpsl
add
fisubrs
and
or
out
xor
incl
mov
decl
or
xchg
and
or
add
add
arpl
jmp
add
and
incl
add
jge
aad
js
out
cltd
mov
pop
pusha
add
pop
or
jmp
mov
clc
add
jmp
add
or
add
decl
addb
enter
pop
outsl
daa
add
stc
fidivrs
int3
inc
add
in
xchg
add
insl
cld
jp
lds
repnz
add
arpl
jmp
pusha
add
lahf
movsl
add
add
mov
xchg
je,pt
add
pop
fbstp
jp
add
lods
mov
cmp
aas
push
sti
movb
add
add
add
push
hlt
or
jmp
add
into
roll
add
addb
mov
hlt
call
xchg
popa
add
and
divb
add
fcmovnb
add
add
mov
or
push
add
mov
lods
cmp
xor
decl
xchg
dec
sub
add
dec
and
ljmp
movsl
add
add
call
js
add
or
cmpsb
add
add
pop
add
jmp
add
outsl
int
mov
add
add
hlt
sub
push
xor
pushl
jne
ds
add
pop
xchg
mov
sbb
dec
aaa
or
push
ss
aam
add
add
add
mov
pop
or
add
adc
call
or
xor
add
add
call
cs
add
data16
pop
sbb
add
jmp
add
incl
add
cmp
aaa
fs
mov
jmp
add
add
or
add
add
push
add
add
jmp
movaps
add
decl
ljmp
add
pop
push
add
sarl
dec
ret
push
test
ss
add
idivl
lahf
out
bound
jmp
push
or
push
xor
ljmp
addb
inc
add
hlt
int
add
add
iret
aaa
les
mov
add
jle
add
or
nop
fbld
cwtl
out
xor
add
stc
dec
in
repnz
aam
imul
add
ret
bound
jmp
decl
insl
in
mov
sub
push
jnp
add
aas
pop
adc
lret
mov
add
out
lret
stc
jg
add
movb
add
ljmp
dec
loop
add
lcall
out
xor
jmp
ja
mov
add
or
fidivl
ret
xchg
cmp
rolb
mov
jo
ljmp
adc
cltd
ret
add
push
popa
add
or
push
in
or
repz
jp
xchg
cmp
cs
call
add
adc
jle
add
add
add
mov
sub
xor
insl
into
sub
jl
add
jo
incl
add
inc
add
add
add
incl
add
add
imul
sahf
xor
fnstenv
jp
hlt
jge
lds
das
jecxz
adc
incl
add
int3
dec
xchg
mov
shlb
ljmp
lea
decb
incl
pop
inc
add
into
jp
sub
mov
jmp
add
sub
data16
add
inc
add
nop
lods
lock
adc
ljmp
jo
decl
lret
pop
lock
add
push
add
test
add
scas
add
add
add
in
pop
mov
adc
add
cmp
neg
lret
or
inc
add
add
out
out
push
add
aas
cs
clc
sti
jns
divb
inc
add
lds
jb
decl
aas
ret
add
add
push
sbb
add
pushl
jb
incl
add
lcall
loop
mov
sti
pop
add
mov
in
das
pop
adc
and
lcall
lcall
shlb
mov
call
add
lds
les
arpl
call
repz
movb
cmp
lret
xor
jmp
inc
add
sbb
in
sub
push
out
mov
add
stc
mov
xor
incl
add
lahf
adc
fmuls
inc
add
mov
add
test
sub
ja
add
add
pop
lret
xchg
sbb
adc
add
sub
xor
add
insl
or
cmp
dec
jb
cmp
mov
in
sub
add
add
into
js
sub
add
or
pop
nop
pushf
push
stc
pushf
push
add
inc
add
stc
mov
psubusw
pop
add
mov
scas
mov
mov
push
add
xchg
inc
add
add
leave
jg
movsb
add
sbb
jecxz
pop
add
dec
dec
push
add
out
addb
add
jge
and
ljmp
imul
jmp
add
add
cwtl
sub
incl
jmp
push
add
cmp
cmp
frstor
add
mov
mov
add
push
push
push
add
repz
in
lds
ret
add
ror
push
add
sub
add
add
repnz
add
sub
loope
and
out
movb
pop
add
sub
jp
push
add
jp
add
inc
add
adc
pushl
add
out
out
insl
xor
decl
into
cmp
add
mov
jge
pop
add
mov
sbb
add
out
dec
insl
pop
js
pop
adc
in
adc
ljmp
add
mov
push
add
push
dec
and
dec
inc
add
jp
add
xor
incl
add
fildll
rcll
add
add
mov
test
mov
add
outsb
lea
xchg
pop
sub
loope
fcoms
pop
sub
mov
mov
inc
add
inc
add
add
out
sub
jl
aaa
ja
add
pusha
add
inc
add
mov
scas
bound
pushl
rolb
aad
cmp
rcrl
sbb
and
jmp
add
push
add
or
push
add
in
and
sbb
add
add
lock
add
push
add
decl
lds
pop
roll
xor
mov
and
pushl
push
add
lds
lahf
pusha
add
pusha
add
pusha
add
add
cltd
insb
shlb
movb
sbb
xor
sti
jbe
hlt
or
fdivl
add
jns
repnz
mov
insb
addb
aam
aas
lahf
outsb
mov
add
scas
jecxz
cmp
mov
aam
addb
add
add
jecxz
push
mov
cwtl
fistpl
dec
aam
lods
sbb
mov
cltd
cs
add
add
test
cld
cs
movsl
add
fcoms
adc
mov
mov
add
dec
movsl
add
iret
and
ljmp
aam
lock
mov
mov
add
or
add
mov
daa
add
mov
pop
mov
addb
jge
add
incl
pop
sub
adc
inc
add
add
jmp
add
jle
jbe
sbb
sbb
decl
add
lods
lods
inc
add
movb
outsb
push
mov
lret
add
dec
cltd
movsl
add
clc
icebp
test
cmp
repnz
add
sub
pop
negl
add
lcall
sbb
add
out
xchg
jb
call
stc
pop
lds
sub
add
jle
test
and
pop
scas
cltd
movsl
add
dec
or
mov
add
add
mov
add
fistl
and
xchg
sbb
in
xor
jne
add
mov
lcall
lds
pop
roll
add
or
add
incl
add
jns
add
xchg
jp
mov
addb
lea
add
jp
dec
inc
add
mov
or
add
insl
aad
movl
adc
stc
xor
call
or
add
cmp
or
data16
int3
imul
add
or
test
push
add
mov
jecxz
mov
add
sbb
add
push
add
movl
movsb
add
add
mov
fidivrl
clc
sub
test
and
lcall
ret
add
push
dec
mov
out
push
insl
cmp
rclb
roll
ljmp
addr16
nop
movl
fisttpll
and
lcall
outsb
adc
pushl
add
xor
lcall
pushf
iret
push
add
push
or
xchg
loop
xchg
jge
push
add
jne
add
sbb
arpl
decl
jp
add
ss
aad
add
scas
inc
add
xchg
ret
add
add
lret
lods
lds
addl
pop
aam
add
ljmp
int
mov
add
lret
data16
or
jmp
add
jne
out
xchg
test
cmpsl
add
pop
dec
pop
add
jge
jecxz
insb
fnstcw
or
pushl
jo
decl
stos
sub
aad
mov
gs
popa
add
cmpsl
add
add
mov
add
or
add
cmpsl
add
add
cmp
mov
idiv
mov
mov
or
inc
add
imul
add
shr
mov
and
adc
loop
and
ljmp
lret
test
rolb
xchg
mov
jp
add
xor
push
movsl
add
aam
or
dec
mov
jno
ljmp
aam
insb
inc
add
popf
movl
add
decl
add
mov
icebp
imul
add
sub
out
bound
lcall
add
outsl
and
incl
pushl
add
push
dec
out
sbb
xchg
cmp
add
nop
and
mov
xor
sbb
decl
add
outsl
aas
pop
sbb
aas
aad
sbb
sub
ljmp
loopne
or
mov
add
mov
repz
add
data16
scas
cmp
dec
mov
lcall
add
mov
scas
adc
ljmp
add
inc
add
xor
sbb
popf
inc
add
pushf
call
dec
mov
add
add
cmc
sbb
xor
jmp
add
lret
filds
add
mov
xchg
js
ljmp
add
mov
add
mov
mov
sub
lahf
sub
mov
add
pushl
pushl
adc
call
mov
in
addb
add
mov
add
mov
add
lcall
data16
scas
pop
jne
mov
call
js
popf
add
decl
push
add
jo
call
stos
or
add
jbe
add
imul
data16
jmp
fmull
lock
cmpsb
add
add
add
adc
push
ja
add
lcall
mov
add
decl
mov
adc
jmp
add
xchg
les
xchg
add
iret
dec
cltd
clc
call
pusha
add
adc
std
ja
inc
add
pop
xchg
movsb
add
cltd
lods
into
cmpsl
add
int3
pop
mov
movb
add
pop
fldlg2
movsl
add
add
add
dec
xchg
mov
add
push
add
js
cmp
roll
mov
adc
pop
leave
push
add
idivl
jmp
add
add
insl
jp
scas
mov
pushl
add
scas
inc
add
push
rolb
mov
add
dec
lret
mov
ja
add
dec
stc
cltd
dec
mov
insl
cmc
pop
fistps
push
jb
jmp
add
adc
das
test
add
xchg
and
mov
add
test
pop
add
insl
xchg
in
jecxz
add
adc
incl
add
pop
aas
or
xchg
xor
fcmovb
add
xor
add
pop
jns
add
dec
rolb
add
pop
push
lock
fisubl
ljmp
add
jne
ret
add
addl
add
cmp
jmp
dec
roll
add
movsl
add
cmp
mov
iret
les
add
jmp
add
and
ljmp
test
add
add
sbb
sbb
shl
add
lcall
nop
lret
test
xchg
adc
decl
adc
push
add
mov
add
mov
adc
add
jne
add
jnp
add
adc
inc
add
or
scas
dec
shr
jbe
les
jne
jp
add
repnz
ljmp
add
inc
add
add
cltd
ret
add
add
incl
lods
ljmp
add
leave
js
add
sub
push
add
insb
out
xlat
add
les
jp
add
in
cmc
mov
add
js
data16
add
pusha
add
push
add
jae
decl
mov
pushl
inc
add
xor
fdivl
mov
cs
adc
cmp
push
ljmp
add
add
insl
iret
in
std
out
negb
add
jg
add
movsl
add
sub
add
out
mov
incl
add
ljmp
cwtl
fsubrp
adc
lcall
add
incl
decl
adc
incl
adc
incl
add
stc
popf
push
add
lock
push
sbb
jmp
mov
mov
jmp
add
add
add
or
xchg
test
jbe
add
ljmp
add
mov
out
fcomi
adc
xchg
xchg
jg
sbb
loopne
and
incl
add
jecxz
in
sub
cld
js
loop
mov
add
fsubrl
add
add
clc
add
popf
cmp
xor
decl
jge
aad
pop
fstps
xor
add
sub
cmp
pop
jo
pushl
add
cmp
add
add
lods
aad
bound
jmp
add
jg
add
out
cld
arpl
incl
add
inc
add
aad
movb
add
lods
ljmp
adc
lcall
and
ljmp
sub
dec
addl
push
add
jmp
roll
add
inc
add
add
ljmp
cmc
or
ljmp
fdivp
xchg
jmp
push
add
bound
decl
add
pop
movsl
add
add
add
add
mov
call
add
add
pushl
xchg
jmp
roll
xchg
jne
add
add
mov
or
xor
pop
add
sbb
addb
in
je
add
xlat
push
sbb
mov
roll
aaa
sbb
lcall
in
aad
jg
add
scas
data16
add
std
xchg
fmull
xlat
mov
shll
add
cmp
and
pushl
add
into
cmp
stc
sub
add
cmp
decl
add
add
popf
rcl
movl
xchg
dec
lds
push
insb
fbstp
int3
add
call
pushl
std
outsl
dec
lock
add
pop
cltd
rolb
add
add
add
dec
xchg
je
add
dec
add
mov
cmp
add
mov
add
jnp
inc
add
movl
iret
mov
add
push
add
cli
inc
add
mov
call
jmp
add
dec
and
or
push
mov
add
decl
addl
jnp
stos
jne
or
cwtl
jb
jmp
sub
out
sbb
rorb
add
test
cmpsb
add
push
test
adc
cmp
adc
ljmp
add
mov
xor
jg
add
or
sbb
ljmp
cs
imul
pop
test
mov
in
or
add
xchg
xor
inc
add
add
add
addb
add
call
lret
add
iret
aas
test
jno
lcall
push
lahf
pusha
add
rdmsr
add
mov
add
and
ljmp
sahf
sti
sbb
outsb
repnz
mov
movsb
add
call
incl
push
add
mov
sti
test
stos
les
cwtl
jb
incl
call
ljmp
movb
sti
popl
fs
ret
jne
loop
xor
call
loope
cs
sti
imul
movb
add
fiadds
decl
pop
aaa
je
lcall
mov
push
adc
decl
mov
add
mulb
lcall
add
dec
mov
cmp
ljmp
adc
push
ret
add
cmpsl
add
add
decl
pushl
adc
incl
jp
add
iret
sbb
lahf
mov
call
add
std
adc
add
scas
xor
push
and
pop
mov
inc
add
insb
dec
gs
mov
clc
aas
mov
xlat
xor
pop
jne
dec
cld
sbb
pop
dec
pop
addb
pop
push
add
mov
and
ljmp
lahf
insb
sbb
xchg
and
mov
stc
shr
mov
xor
decl
jecxz
inc
add
test
sub
movl
in
shlb
call
sti
mov
mov
add
iret
das
daa
add
and
call
xchg
jmp
add
xlat
pop
stc
mov
ror
lods
push
out
and
and
ljmp
cmp
add
and
pushl
add
cmpsb
add
pop
jg
add
mov
add
add
lret
pop
lods
jae
call
out
inc
add
add
jmp
roll
add
jmp
mov
sti
cmc
inc
add
stc
movb
add
add
pop
data16
add
in
enter
sub
notb
add
inc
add
dec
arpl
cmp
jmp
nop
add
add
sbb
in
or
jbe
add
popa
add
mov
mov
cmp
inc
add
and
xor
jmp
out
sarl
cmp
push
add
sub
bound
push
addr16
add
cld
xor
jns
leave
mov
decl
jge,pn
daa
add
mov
test
mov
adc
jmp
add
add
mov
ffree
add
test
addb
pushf
addb
pop
ret
inc
add
xor
jmp
adc
lcall
add
add
sub
sub
fidivrs
mov
add
add
dec
icebp
inc
add
add
test
jg
jmp
fbld
decl
adc
lcall
das
sbb
incl
add
outsl
jle
decb
adc
jmp
stc
lret
add
add
adc
ljmp
add
call
pop
or
add
adc
ljmp
pop
dec
popf
sbb
pushl
fldcw
and
incl
add
jecxz
add
lcall
add
call
add
mov
add
dec
fsub
add
add
je
inc
add
add
cmp
pop
push
test
lahf
addl
pusha
add
adc
mov
or
mov
addl
push
add
mov
cmp
loopne
divl
imul
add
imul
out
and
ljmp
jmp
lcall
pop
sub
jmp
add
test
or
leave
or
roll
clc
push
add
sbb
add
mov
add
add
add
add
cmpsb
add
into
test
add
xor
add
jns
add
sbb
insl
jnp
add
loopne
hlt
mov
sbb
add
pushf
pop
repnz
add
sub
inc
add
add
roll
add
outsl
sub
add
sub
add
inc
add
out
out
adc
add
xor
call
cltd
bound
jmp
call
add
out
lea
js
add
adc
jmp
add
mov
mov
add
std
repz
add
fxch
dec
cltd
xor
rolb
mov
jbe
mov
loopne
add
push
fisubrs
mov
add
add
jbe
mov
shll
ret
jo
fists
add
jne
sbb
imul
add
add
mov
addb
rcrb
lods
js
adc
add
add
jb
aas
fwait
loopne,pn
mov
out
hlt
sarb
add
add
cmpsl
add
jmp
add
xor
jmp
add
aas
and
ljmp
add
jne
jne
popf
sbb
add
ficoml
inc
add
mov
push
push
add
pushf
rcll
jle
mov
testl
xor
pushl
add
inc
add
inc
add
shrl
cld
and
lcall
ret
add
loopne
enter
add
inc
add
add
mov
add
mov
pop
push
add
addb
fwait
in
cmp
and
movsb
add
add
add
mov
outsl
xor
call
decb
adc
add
outsb
push
add
hlt
lea
add
daa
add
stos
dec
das
scas
test
enter
xchg
adc
jmp
add
ljmp
inc
add
inc
add
pop
cmp
jmp
decl
jae
lcall
xchg
cmp
ret
add
xor
jmp
add
jbe
loope
add
jmp
add
add
jbe
add
int
push
jle
add
jp
mov
daa
add
xchg
sbb
nop
ret
add
mov
cmp
mov
add
add
adc
jmp
ljmp
pop
pop
mov
add
push
add
jg
add
xor
aas
jb
ljmp
cmp
add
add
fwait
ljmp
add
lds
ret
add
sahf
ljmp
add
inc
add
imul
ss
imul
pop
adc
lcall
mov
int3
sub
add
inc
add
mov
add
ret
sub
sahf
sub
add
pushl
incl
incl
outsb
pop
mov
in
mov
push
test
add
add
inc
add
jmp
rclb
jmp
cmpsb
add
dec
push
sahf
insb
arpl
call
mov
push
cmc
push
int3
xchg
lahf
outsb
xor
in
sub
roll
add
inc
add
in
aaa
into
xor
stos
call
test
shll
movb
cld
js
add
mov
or
xor
lcall
movaps
pop
sub
imul
pop
add
dec
cmp
pop
sub
shll
lret
jecxz
jb
pushl
jmp
pop
add
in
roll
cmp
leave
add
add
add
cmpsl
add
add
xchg
pop
mov
pushf
adc
stc
mov
loopne
popa
add
cli
enter
scas
dec
inc
add
xor
lcall
and
call
xchg
into
sbb
roll
add
add
add
mov
xchg
pop
into
mov
fsubrs
xor
jmp
add
roll
dec
jp
fiadds
add
pop
add
in
outsb
mov
dec
xchg
ror
ret
add
rolb
add
outsb
mov
xchg
iret
inc
add
xchg
jo
incl
add
sbb
pusha
add
xchg
cs
lret
incb
loopne
mov
lret
mov
add
std
in
ljmp
pop
or
and
in
xor
jmp
add
repnz
add
mov
lds
movl
cmp
jmp
jmp
das
adc
adc
push
add
add
aaa
sbb
sbb
add
les
pop
push
push
mov
sub
add
mov
shlb
into
ficompl
push
jne
inc
add
add
add
popf
inc
add
sbb
mov
out
neg
or
add
jmp
jg
pop
fwait
adc
add
xchg
pinsrw
add
and
movsl
add
jp
add
ja
jb
lcall
pop
add
decl
add
push
add
jle
jecxz
insl
repnz
mov
jg
add
inc
add
call
inc
add
rolb
lods
inc
add
jmp
add
repnz
in
rorl
out
cmp
incl
add
mov
call
add
in
test
jg
or
add
add
das
and
mov
mov
add
add
add
lds
roll
add
pop
inc
add
xor
inc
add
mov
inc
add
sbb
add
push
add
in
sub
addb
seta
add
or
pop
clc
aas
mov
sub
inc
add
scas
int
add
inc
add
and
decl
rolb
call
sbb
cld
mov
add
inc
add
add
cltd
movb
xchg
push
clc
movb
add
mov
inc
add
fcomps
push
cltd
dec
roll
arpl
incl
lret
sub
ljmp
sub
cmp
sbb
into
cltd
mov
mov
add
arpl
jmp
add
or
jno
ljmp
add
sbb
push
add
and
dec
pop
xor
cli
inc
add
repnz
add
dec
popa
add
rcll
iret
and
pushl
mov
imul
cmpsl
add
sbb
jmp
ja
rcrb
sti
sbb
icebp
mov
addl
lcall
push
add
push
add
add
and
decl
loop
scas
and
call
add
imul
dec
cld
pop
mov
and
addb
add
inc
add
in
xchg
jp
movb
add
sbb
sub
cmp
add
cltd
xlat
or
push
add
sbb
inc
add
add
add
sbb
add
push
add
cmp
add
add
dec
inc
add
iret
imul
dec
cwtl
or
call
add
sub
add
xchg
xor
popf
icebp
adc
jmp
inc
add
sub
adc
cli
adc
pushl
stos
xchg
popa
add
or
push
add
add
add
xor
addb
pop
jg
xchg
jecxz
lret
mov
add
jne
push
aaa
adc
jmp
add
mov
int
push
lock
lcall
adc
cmp
add
outsl
xchg
cwtl
or
add
mov
lret
iret
jne
stc
mov
aad
add
cltd
bound
pushl
addb
inc
add
pop
movsb
add
lods
xor
repnz
xchg
hlt
sldt
jmp
add
mov
add
mov
mov
add
mov
pushl
add
jg
add
mov
loope
aaa
test
mov
add
fdivs
add
iret
pop
fnstsw
add
xchg
call
cmpsb
add
outsl
xor
call
inc
add
add
add
cmc
sbb
add
push
add
add
pushl
je
in
bound
ljmp
shrl
xchg
loopne
add
pop
fwait
mov
call
cmp
jmp
inc
add
push
fnstsw
jb
call
sbb
lcall
push
add
or
add
add
out
jl
mov
add
sub
add
dec
ss
pop
in
std
stos
lods
aam
add
cwtl
aam
mov
cwtl
jg
jae
lcall
decl
movl
add
lea
rolb
test
xchg
xchg
inc
add
pop
push
add
mov
push
add
push
add
jmp
mov
dec
jo
pushl
adc
adc
jp
ds
mov
add
loopne
imul
mov
sub
cltd
push
add
or
add
or
add
add
add
insb
jb
jmp
dec
cmp
add
jno
jmp
add
add
add
pop
hlt
jae
pushl
add
pop
stc
and
inc
add
dec
sbb
add
scas
jl
in
pop
add
decb
add
cmp
pop
add
mov
mov
push
add
adc
mov
add
movsb
add
add
add
imull
dec
mov
bnd
loopne,pn
sbb
add
cmp
mov
out
or
mov
add
out
push
mov
pop
pop
add
imul
add
push
cmp
ljmp
mov
popf
ljmp
test
movb
add
pop
sub
test
cmp
jno
jl
jp
loopne
cltd
lds
stos
ds
out
cmpsl
add
add
or
dec
loop
leave
ljmp
lcall
movsb
add
add
add
out
add
add
test
shlb
pushl
call
cmp
add
enter
add
add
or
les
std
push
jmp
sti
adc
incl
add
add
add
xchg
and
fsubrs
add
cmp
sbb
dec
xor
pushl
add
add
roll
jmp
add
call
push
jns
cld
ficoms
jmp
add
jmp
sbb
loop
fdivrs
imul
add
je
add
adc
decl
cmc
test
insl
mov
add
mov
add
in
nop
in
jae
call
xor
jg
add
xlat
addb
add
inc
add
testb
jb
cmp
mov
leave
jb
jmp
add
inc
add
cmpsl
add
dec
sub
insl
jb
ljmp
stos
mov
add
xor
ljmp
dec
out
sti
incb
add
loop
addl
add
xor
call
add
frstor
add
lock
add
inc
add
icebp
fildl
add
out
jne
setg
daa
add
add
push
push
add
fcoml
adc
shrl
add
ljmp
mov
icebp
dec
and
jo
sub
lret
add
dec
or
and
incl
add
cli
nop
push
rcrl
sub
repz
cmp
add
add
lret
das
insl
cmp
sub
pop
push
das
test
jp
xor
add
dec
data16
add
popa
add
fbld
jmp
add
and
add
add
fsubrl
jb
mov
inc
add
test
mov
add
push
add
imul
push
insl
fldl2t
ljmp
jnp
sbb
xchg
mov
data16
add
xchg
push
add
rorb
divb
out
je
test
roll
jmp
imul
enter
aaa
cmp
add
add
sub
mov
imul
xchg
and
decl
int3
cmp
push
mov
jb
ljmp
fwait
mov
add
xchg
repz
test
mov
in
data16
add
cmp
loopne
mov
jns
insl
rolb
push
add
jnp
daa
add
addl
cmc
rcl
jnp
les
xchg
addb
dec
add
add
push
or
add
dec
lods
aaa
add
sbb
call
mov
lret
inc
add
jns
add
test
in
imul
or
mov
add
jno
mov
jb
pushl
add
movsb
add
neg
push
adc
add
pop
mov
jbe
mov
add
sbb
js
or
add
roll
add
dec
movb
add
mov
loope
mov
sub
add
daa
add
lret
sub
out
outsl
hlt
in
inc
add
xor
push
adc
decl
shrl
sbb
add
add
test
ss
pop
sub
rolb
mov
pop
and
pushl
or
addb
add
add
jmp
add
add
or
push
add
fwait
add
loop
lcall
pop
jle
les
lods
inc
add
out
push
sbb
ljmp
adc
jmp
add
add
jmp
add
jmp
lcall
xor
add
outsl
pushf
rcll
add
imul
add
fldt
jnp
arpl
pushl
cmp
loop
rcll
mov
add
jno
out
outsb
jo
decl
lahf
dec
insb
fistps
add
push
add
jmp
jg
mov
popa
add
setle
inc
add
xchg
inc
add
fcmovb
add
add
sbb
add
inc
add
addl
xor
call
mov
add
shlb
add
add
ljmp
push
mov
adc
mov
or
dec
push
add
fisubrs
add
mov
xchg
popa
add
jmp
pushl
mov
push
add
pause
xchg
fcmovu
xchg
pushf
test
mov
mov
lea
mov
dec
mov
fsubs
pop
inc
add
sub
pusha
add
inc
add
add
cmpsb
add
jns
mov
ljmp
add
add
cmp
add
ljmp
mov
xchg
pop
in
lret
mov
xor
ljmp
jp
add
ljmp
out
fnstenv
add
loope
jns
add
test
jmp
pop
pop
jmp
add
in
xchg
inc
add
lcall
add
loope
lods
pop
and
decl
movl
mov
call
ljmp
sbb
mov
add
sub
mov
xor
mov
add
lahf
cwtl
mov
dec
stos
mov
ljmp
xlat
dec
dec
addb
jne,pt
call
sbb
mov
push
imul
ljmp
dec
and
mov
jmp
add
jmp
add
pop
pop
test
add
pusha
add
or
push
jno
decl
mov
add
pushl
add
jp
dec
pop
mov
or
add
add
add
arpl
lcall
push
add
inc
add
idiv
sti
xor
ljmp
out
leave
insb
repz
add
add
jmp
add
add
jp
add
jge
and
cld
push
pop
test
jge
add
incl
js
add
addl
cmp
ljmp
int
add
push
add
add
pushl
add
push
pusha
add
fwait
add
jl
insl
out
adc
dec
test
stc
cwtl
add
push
add
inc
add
add
and
call
incl
add
pop
add
add
add
mov
cmp
add
mov
lcall
cmp
jl
shll
add
fisubrs
imul
movl
movsl
add
call
mov
incl
dec
mov
fisttps
decl
dec
mov
jle
add
and
dec
or
movb
add
xchg
pop
cs
sbb
lcall
mov
ds
adc
add
ja
add
lret
stos
xlat
pop
fisubs
call
jl
xchg
nop
sbb
sti
adc
cmp
imul
xchg
or
pop
jecxz
imul
mov
sbb
add
xchg
nop
ret
add
pop
jl
sahf
xor
decl
mov
mov
decl
loope
fprem
add
decl
add
xchg
mov
in
adc
ljmp
add
add
lods
inc
add
add
nop
mov
test
in
stos
cmpsl
add
cmp
and
outsb
test
add
call
dec
test
xchg
mov
adc
push
movb
fwait
jnp
xchg
jp
sub
inc
add
add
cmpsl
add
cmpsl
add
add
sbb
xor
decl
add
add
jge
movsb
add
add
in
dec
dec
sub
roll
add
aam
add
pushl
jp
add
repz
incl
lods
outsl
xchg
add
add
cmp
add
test
call
decl
add
call
cmpsl
add
add
jbe
or
enter
push
add
mov
inc
add
add
push
add
jecxz
stos
xchg
lahf
inc
add
push
add
incl
add
ret
pop
rolb
add
cwtl
and
jmp
and
ljmp
or
mov
xchg
add
sahf
bound
lcall
and
inc
add
cli
int
in
stos
aaa
lods
data16
rolb
xchg
into
ret
add
xor
jmp
add
push
add
or
mov
add
test
jg
jmp
out
arpl
jmp
add
add
add
add
ljmp
inc
add
mov
mov
add
add
dec
add
add
push
add
popf
xchg
xchg
lcall
cmovae
incl
jmp
aad
add
test
jmp
sub
lret
xlat
mov
mov
mov
in
mov
adc
add
add
sub
jne
push
sub
add
push
add
insl
rorb
frstpm(287
add
movl
push
bound
decl
add
add
adc
decl
je
mov
add
add
pop
mov
mov
dec
sub
movl
and
incl
add
pop
imul
pushl
cmp
mov
add
add
fsts
lcall
sub
add
or
xor
fiadds
mov
in
hlt
call
add
ret
add
test
add
xlat
ja
mov
sbb
add
push
add
fdivrl
incl
add
mov
push
add
ret
pop
add
ljmp
mov
add
jb
pushl
push
cmp
addb
pushf
cmp
add
mov
sahf
pop
xchg
je
add
int
sbb
xchg
adc
adc
decl
sbb
add
add
push
mov
in
sub
incl
insl
out
xor
pushl
decl
jnp
add
aam
pop
add
mov
push
add
fnstcw
add
decl
add
hlt
cmp
cmp
sub
fstps
add
call
add
hlt
movsb
add
fs
inc
add
cld
add
xor
std
std
jp
lahf
fldl
push
inc
add
add
inc
add
add
xchg
adc
decl
ljmp
add
lcall
xlat
mov
in
mov
stos
xor
incl
sbb
and
jmp
add
xor
mov
pop
cmp
pop
mov
jne
add
iret
test
repz
stos
xchg
xchg
aaa
outsl
sub
pop
stc
scas
fwait
cmpsb
add
pushl
aad
push
or
cltd
outsb
bound
ljmp
jle
inc
add
jge
jno
jns
fbstp
add
add
out
fcmovu
cmc
dec
les
mov
mov
es
ljmp
add
add
in
add
jl
jg
and
xchg
call
add
or
fucom
add
sbb
pop
inc
add
and
incl
fldcw
add
sub
inc
add
std
into
pop
cmp
cmp
jnp
add
out
addb
in
mov
add
mov
pushl
test
add
adc
push
mov
xor
incl
adc
add
pop
sub
add
loopne
mov
jecxz
cld
repz
push
lahf
sbb
repnz
cmp
add
clc
sarb
lods
rolb
jmp
add
insl
jns
cli
mov
mov
add
gs
fildl
add
pop
cmp
add
mov
roll
add
push
add
push
push
add
in
div
addb
add
adc
decl
push
xchg
test
testb
imul
rclb
aaa
pop
lcall
cmp
lcall
add
das
out
out
repz
out
jb
pushl
into
in
stc
xor
fsubrl
mov
fwait
sbb
add
add
add
push
add
movb
mov
add
pop
jae
inc
add
jle
add
jo
call
mov
jae
dec
xchg
sbb
push
add
xor
inc
add
jb
fsts
ljmp
add
jecxz
clc
ss
add
push
add
addb
ja
add
mov
decl
nop
movsb
add
add
jns
pop
lods
sbb
sbb
add
add
add
cwtl
insb
push
lret
xchg
xor
push
lods
test
add
sti
jl
add
mov
mov
pushl
bound
push
addb
jle
push
add
adc
cmpsb
add
push
xor
ljmp
or
add
jmp
add
popf
roll
add
lcall
add
and
jmp
add
dec
imul
xor
call
mov
xchg
jns
sub
or
add
add
add
jnp
mov
and
pushl
stc
loopne
or
add
or
add
inc
add
and
incl
cmp
add
ljmp
jge
cmp
xchg
scas
xor
popf
mov
add
mov
movsl
add
sbb
or
sbb
movl
jge
add
add
pop
add
insl
loop
cmp
add
xor
lcall
add
add
jg
pushf
push
add
fiaddl
add
mov
jo
push
lods
lcall
sub
xor
fldenv
add
sbb
add
inc
add
int
insl
xchg
mov
cld
addb
inc
add
jns
cmp
lods
rolb
add
pushl
inc
add
pop
int
outsb
mov
jne
pop
add
add
jns
iret
mov
add
mov
and
fsubr
push
sbb
mov
dec
or
or
pop
xor
ds
movsl
add
in
cmp
icebp
int3
sti
sbb
add
arpl
jl
add
add
add
roll
ficompl
add
testb
lods
xchg
cmpsb
add
xchg
lea
inc
add
pushl
add
xchg
jmp
arpl
decl
sub
incl
mov
pop
aam
add
incl
insl
fildll
repnz
add
decl
push
add
cmpsb
add
ljmp
stos
sub
int
mov
lea
add
push
sub
add
add
jp
add
add
je
cmp
add
jecxz
les
lds
push
sbb
into
out
jle
dec
movsb
add
ljmp
xchg
sub
and
jmp
add
or
add
xchg
ret
add
add
data16
ds
add
popa
add
addl
bound
fstp
test
lock
pusha
add
sub
and
call
and
add
jmp
jo
call
dec
inc
add
js
push
add
lret
and
jnp
movl
add
ljmp
insl
movb
into
filds
sbb
cs
xchg
push
add
movsb
add
mov
pop
sub
mov
add
addl
lock
ret
add
call
mov
fsubrl
cs
add
jecxz
mulb
push
mov
