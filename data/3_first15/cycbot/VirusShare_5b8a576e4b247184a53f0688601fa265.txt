cmp
cmp
cmp
sub
sub
inc
inc
addr16
jge
jge
jge
ja
ja
pop
pop
pop
pop
pop
pop
pop
pop
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
sub
sub
sbb
lods
lods
lods
lods
lods
sbb
pop
pop
mov
mov
mov
mov
and
add
add
add
cmc
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
stc
stc
stc
stc
stc
stc
stc
stc
stc
ds
mov
xchg
xchg
xchg
fsubl
pusha
pusha
adc
adc
adc
rcl
rcr
ss
inc
inc
inc
inc
inc
inc
inc
rcl
rol
mov
xchg
xchg
xchg
lcall
or
or
or
add
add
movsl
add
popa
mov
mov
insb
insb
insb
imul
sub
and
and
and
ljmp
ljmp
addl
addl
lret
movsl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shlb
arpl
arpl
arpl
add
add
add
add
add
adc
adc
adc
adc
mov
and
and
and
and
jecxz
jecxz
jecxz
jecxz
jecxz
addl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
mov
aaa
aaa
aaa
add
add
add
sahf
sahf
sahf
sahf
sahf
sahf
movsb
movsb
movsb
movsb
adc
push
push
push
push
inc
inc
inc
inc
inc
inc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
or
or
or
out
out
out
out
out
out
out
out
out
out
addl
ffreep
rol
rol
fstp
fstp
push
push
push
mov
mov
mov
sub
sub
sub
sub
sub
inc
inc
push
push
push
mov
add
repnz
repnz
out
out
out
out
sbb
sbb
sbb
mov
add
dec
dec
dec
xchg
ja
add
add
mov
mov
mov
int3
int3
int3
int3
int3
int3
int3
gs
xor
std
std
sub
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
mov
xor
jae
out
out
out
out
sbb
sbb
or
or
or
and
and
and
and
and
and
and
and
and
and
and
and
add
add
mov
mov
mov
add
add
add
mov
mov
mov
ss
add
aam
ret
test
notb
xchg
xchg
pop
pop
pop
pop
pop
pop
mov
std
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
pop
int3
int3
int3
int3
int3
int3
mov
mov
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
jl
jl
jl
jl
jl
jl
jl
jl
jl
adc
adc
mov
mov
mov
mov
mov
add
add
push
push
push
push
push
mov
inc
inc
add
or
or
or
or
or
or
or
or
or
or
or
or
icebp
icebp
icebp
icebp
icebp
push
fldt
jae
jae
jae
jae
jae
jae
xor
das
inc
push
push
push
push
push
push
dec
dec
dec
dec
dec
in
in
in
in
in
in
in
in
in
in
es
es
enter
enter
add
add
sub
sub
sub
sub
sub
sub
mov
mov
push
push
push
push
push
push
push
push
push
add
test
pop
lea
add
data16
add
jp
jp
jp
ret
ret
ret
ret
ret
ret
ret
add
add
lea
in
lods
lods
lods
lods
lods
lods
jg
sbb
sbb
pop
pop
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
fcmovu
ficoml
test
test
adc
add
add
add
in
in
in
in
in
in
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
bound
bound
bound
cmp
add
sub
add
rcl
rclb
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
sbb
div
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
jo
add
add
and
lock
filds
sub
inc
inc
inc
inc
inc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
inc
add
and
and
and
cmp
xlat
xlat
xlat
xlat
xlat
xlat
add
cmp
cmp
rcl
rcl
rcl
rcl
scas
scas
scas
scas
div
div
div
div
mov
adc
filds
add
add
push
push
push
push
xor
xor
xor
xor
xor
adc
adc
adc
inc
inc
inc
inc
mov
add
and
popa
popa
popa
popa
popa
popa
popa
popa
ss
ss
loope
loope
enter
enter
add
add
add
add
insl
insl
dec
dec
dec
dec
sbb
dec
dec
cld
cld
cld
cld
repnz
mov
add
jmp
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
mov
ret
ret
scas
scas
scas
scas
add
add
add
out
out
out
out
out
out
xor
xor
xor
xor
xor
xor
mov
mov
mov
outsl
outsl
outsl
outsl
mov
rol
rol
pop
pop
pop
loopne
loopne
loopne
loopne
loopne
out
xor
xor
sub
sub
sub
sub
sub
sub
add
pop
pop
pop
pop
sbb
sbb
sbb
jne
cli
cli
movsl
movsl
movsl
movsl
fs
lods
lods
lods
lods
lods
lods
lods
lods
mov
add
sub
sub
sub
mov
repnz
jno
leave
leave
leave
leave
leave
leave
mov
mov
jmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
bound
bound
bound
imul
es
bound
add
aad
aad
aad
xchg
xchg
xchg
xchg
pop
pop
pop
push
push
push
push
push
push
push
push
push
mov
loopne
or
lahf
lahf
lahf
lahf
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
loopne
loopne
loopne
pop
sub
sub
sub
shll
and
and
and
pop
pop
inc
inc
add
add
add
add
or
les
add
add
pop
pop
pop
pop
xchg
mov
mov
mov
pushf
pushf
pushf
pushf
pushf
jmp
jmp
stos
and
and
and
and
and
and
popf
popf
popf
push
push
push
in
mov
mov
mov
add
daa
pushf
and
repz
les
add
or
add
outsl
outsl
outsl
xchg
or
enter
enter
enter
enter
enter
enter
sbb
sbb
sbb
sub
sub
sub
sub
sub
sub
out
mov
mov
mov
int3
int3
int3
int3
add
add
add
add
inc
lcall
test
push
push
push
push
push
push
push
push
push
add
add
add
add
push
push
push
add
add
add
add
add
add
sbb
sbb
sbb
sbb
adc
mov
mov
stos
stos
stos
out
add
fstps
pop
pop
mov
sahf
sahf
repnz
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
pop
pop
pop
add
add
inc
inc
inc
inc
inc
or
or
adc
xor
das
div
notl
adc
adc
lret
lret
lret
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
cmp
cmp
mov
mov
mov
mov
cltd
cltd
cltd
cltd
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
enter
push
add
xlat
pop
pop
push
push
push
push
push
push
push
push
jl
jl
jl
insl
insl
jae
jae
jae
jae
jae
jae
jae
iret
iret
outsb
add
data16
mov
inc
out
out
out
out
out
out
out
out
add
mov
mov
jae
jae
jae
mov
mov
and
mov
vpor
jmp
jmp
jmp
mov
test
fsubrl
and
and
and
and
call
repnz
push
push
push
push
push
repz
mov
mov
and
cltd
stc
stc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
inc
push
push
push
push
push
push
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
sub
sub
dec
dec
dec
aad
add
add
outsl
outsl
outsl
out
out
or
pop
pop
pop
pop
pop
pop
add
add
add
add
inc
inc
inc
inc
inc
inc
jo
dec
dec
mov
jle
insl
insl
xor
xor
xor
xor
xor
sub
push
push
push
rcl
rcl
rcl
rcrb
add
rorl
dec
cmpsl
cmpsl
aad
aad
cmc
cmc
add
and
and
and
and
and
and
and
and
and
and
jle
jle
jle
jle
imul
dec
dec
dec
dec
dec
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aad
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
arpl
arpl
arpl
arpl
mov
mov
mov
mov
cltd
cltd
cltd
cltd
test
test
inc
dec
rcl
rcl
rcl
rcl
rcl
dec
rol
rol
rol
rol
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
jp
loopne
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
push
push
add
add
and
and
jecxz
fstp
fstp
fstp
mov
add
xor
imul
imul
mov
lock
imul
sbb
sbb
sbb
sbb
into
into
into
into
into
add
add
or
or
or
cmp
cmp
cmp
cmp
cmp
adc
adc
and
and
and
jae
jae
jns
add
dec
dec
dec
dec
dec
dec
enter
add
add
xchg
push
push
push
push
out
push
push
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xor
xor
xor
insb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
or
or
add
add
aam
aam
aam
aam
mov
mov
mov
gs
add
add
add
add
add
add
add
add
add
add
add
add
adc
sub
sub
sub
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jl
in
in
sbb
sbb
sahf
add
sbb
sbb
sbb
xor
xor
xor
xor
and
and
mov
jp
rcl
rcl
sti
pop
pop
cmp
cmp
cmp
cmp
add
add
sub
sub
add
mov
mov
sub
rcl
rcl
rcl
rcl
je
je
je
je
je
je
je
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
in
in
push
push
push
push
push
push
push
push
push
push
push
pusha
pusha
scas
sub
sub
sub
sub
sub
daa
daa
daa
daa
mov
jns
inc
inc
inc
inc
stc
stc
inc
inc
inc
mov
adc
adc
adc
adc
adc
adc
adc
adc
add
imul
push
push
push
push
push
push
push
push
push
push
aas
aas
aas
aas
aas
aas
aas
mov
mov
and
jnp
pop
pop
pop
xchg
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
roll
lds
add
dec
dec
dec
dec
dec
dec
bound
bound
add
inc
inc
inc
inc
inc
cs
mov
add
add
addl
fdivrs
jns
jns
jns
sbb
sbb
sbb
sbb
sbb
aaa
aaa
aaa
aaa
aaa
scas
scas
scas
scas
scas
ret
ret
ret
sldt
add
bound
bound
bound
bound
bound
bound
bound
adc
adc
adc
adc
adc
insl
insl
insl
insl
insl
insl
insl
insl
xor
xor
fstp
fstp
fisttpll
dec
dec
dec
dec
mov
mov
mov
xor
xor
xor
xor
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
out
out
out
out
out
out
out
out
out
jp
jp
jp
jp
jp
jp
cli
cli
cli
cli
cli
cli
loop
loop
loop
mov
mov
insb
insb
insb
insb
aas
aas
ret
je
je
je
cmp
cmp
cmp
cmp
cmp
cmp
push
add
pop
push
push
push
push
push
push
push
push
mov
mov
mov
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
aas
and
and
and
and
and
and
into
into
into
into
into
into
into
into
into
into
jae
mov
mov
fisubrs
sub
jo
jo
jo
xor
loope
loope
pop
add
sldt
mov
xchg
xchg
xchg
xchg
xchg
xchg
add
inc
inc
inc
pop
pop
mov
mov
mov
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
je
je
je
mov
movsb
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
cmpsb
cmpsb
and
in
in
mov
mov
mov
mov
mov
mov
mov
mov
addb
addb
addb
or
or
or
or
or
jnp
bound
add
fcomp
lret
lret
sub
xchg
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
jmp
jmp
jns
ret
ret
push
push
push
push
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
xchg
xchg
xchg
sbb
add
jae
pushf
pushf
pushf
pushf
pushf
pushf
pushf
lret
lret
lret
lret
lret
call
call
popa
popa
repz
or
cmpsb
cmpsb
add
div
testl
adc
adc
into
into
xchg
xchg
xchg
xchg
xchg
mov
pop
pop
xor
xor
div
imul
in
in
in
in
cs
sbb
mov
rcl
rcl
roll
add
add
add
add
mov
mov
std
dec
dec
add
cs
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fiaddl
add
add
add
inc
inc
inc
inc
inc
inc
xor
xor
xor
xor
xor
or
or
add
add
push
push
push
push
mov
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
add
add
imul
or
or
or
or
or
or
add
add
lahf
lahf
lahf
and
and
and
cmp
mov
insl
insl
insl
insl
insl
insl
insl
insl
insl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pusha
adc
adc
adc
and
adc
adc
adc
adc
add
and
mov
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
lahf
lahf
test
test
test
cs
cs
out
out
out
mov
mov
rol
add
add
add
and
add
add
xchg
xchg
xchg
jmp
jmp
add
add
mov
mov
mov
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
inc
inc
inc
inc
add
dec
dec
dec
dec
dec
dec
dec
dec
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lahf
lahf
lahf
lahf
cmp
cmp
cmp
cmp
dec
dec
dec
dec
dec
dec
inc
out
out
out
mov
add
stc
stc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
cmp
mov
arpl
jb
jb
jb
ss
sti
sti
sti
inc
inc
inc
inc
mov
mov
ja
popa
popa
popa
popa
popa
popa
popa
data16
cld
cld
cld
cld
cld
cld
insl
insl
addl
dec
dec
dec
dec
dec
dec
add
add
add
add
outsl
or
push
push
push
push
inc
push
push
dec
dec
dec
dec
dec
dec
cmc
cmc
cmc
cmc
cmc
adc
add
insl
insl
insl
insl
insl
insl
insl
imul
fstp
fstp
fstp
fstp
fstp
sbb
sbb
sbb
add
adc
adc
adc
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
add
lahf
lahf
lahf
xor
xor
xor
mov
add
add
add
das
das
das
das
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
lcall
mov
mov
mov
add
addb
addb
aad
aad
xlat
xlat
xlat
xlat
xlat
push
push
push
stos
stos
stos
stos
stos
stos
stos
stos
dec
dec
dec
dec
dec
pop
imul
xor
xor
xor
xor
adc
add
add
add
add
inc
inc
inc
inc
out
jbe
dec
dec
push
push
lock
jp
jp
jp
in
in
pop
pop
pop
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
add
add
add
add
cmpsb
cmpsb
push
or
jns
sti
sti
sti
sti
sti
sti
daa
daa
push
sub
sub
add
add
add
sbb
sbb
sbb
and
and
dec
addl
add
sahf
sahf
sahf
sahf
add
dec
inc
inc
inc
inc
out
jmp
jmp
jmp
inc
inc
add
add
rcl
rcl
rorb
add
add
add
mov
mov
scas
scas
scas
scas
scas
or
push
push
in
in
in
in
in
je
je
je
je
je
jecxz
jecxz
addb
cmp
call
pop
inc
inc
inc
inc
inc
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
push
push
push
push
push
push
push
add
in
in
in
in
in
ss
pop
pop
adc
adc
jb
jb
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
daa
daa
daa
popa
popa
popa
popa
jecxz
jecxz
jecxz
push
call
lock
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
aas
aas
aas
mov
arpl
arpl
push
push
lock
sub
sub
sub
sub
rcl
rcl
rcl
rol
ret
add
mov
dec
dec
dec
add
add
add
add
outsb
outsb
add
mov
enter
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
rcl
or
sahf
sahf
sahf
sahf
sahf
sahf
sahf
out
out
out
out
out
out
out
aas
mov
dec
in
in
fistpll
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
sub
sub
sub
sub
mov
mov
mov
mov
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
rcl
rcl
rcr
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
xchg
sarb
ds
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
stos
stos
ja
ja
ja
ja
add
int
int
dec
dec
lods
lods
lods
lods
lods
lods
lods
lods
lods
fscale
std
std
std
std
std
std
std
std
std
std
std
mov
and
mov
adc
mov
xchg
xchg
xchg
xchg
mov
mov
mov
inc
inc
inc
inc
inc
inc
add
leave
add
push
push
add
in
in
in
in
dec
addb
addb
jae
jae
push
push
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loop
add
add
ret
ret
add
add
add
or
or
or
or
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
addb
fistl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
imul
enter
es
addl
jnp
jnp
cmp
cmp
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
add
add
rcl
rcl
rcl
xchg
sbb
sbb
or
or
fs
or
or
xor
xor
xor
lea
lea
out
out
out
out
out
cmpsb
cmpsb
cmpsb
cmpsb
pop
pop
cmp
cmp
cmp
cmp
cmp
cmp
push
push
push
push
push
push
push
push
push
push
ja
ja
ja
jle
jle
jle
jle
jle
jle
jle
jle
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
add
nop
nop
nop
nop
nop
jl
jl
jl
jl
jl
jl
jl
jl
lcall
ljmp
ljmp
rcl
aam
aam
addr16
add
add
cwtl
cwtl
cwtl
cwtl
cwtl
inc
inc
sub
test
adc
cld
cld
cld
cld
scas
scas
scas
scas
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
fstp
fstp
fadd
mov
jmp
jmp
jmp
jmp
add
add
inc
add
add
jno
jno
jno
jno
jno
jno
jno
jno
jno
push
mov
xchg
xchg
xchg
xchg
xchg
sub
sub
sub
sub
sub
sub
xchg
xchg
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
test
inc
inc
inc
inc
sldt
add
add
mov
mov
mov
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xchg
popf
popf
and
and
and
and
and
and
scas
scas
scas
mov
mov
mov
mov
movsl
xor
xor
xor
xor
loope
loope
loope
adc
adc
add
jb
addb
loope
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pushf
pushf
stos
stos
stos
arpl
arpl
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lcall
or
or
add
scas
scas
scas
div
fcomp
and
and
and
inc
xchg
mov
out
out
out
out
out
out
out
out
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lock
lea
xchg
xchg
xchg
xor
xor
xor
add
xchg
xchg
xchg
xchg
scas
scas
scas
scas
in
pusha
or
or
or
ljmp
mov
mov
push
push
push
push
push
adc
adc
adc
push
push
xor
xor
xor
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
data16
jmp
jmp
jmp
mov
xor
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
leave
leave
xchg
xchg
xchg
xchg
cmp
cmp
cmp
cmp
or
or
into
into
test
add
jmp
jmp
popf
jo
inc
inc
inc
inc
inc
gs
adc
adc
adc
adc
adc
adc
adc
jecxz
jecxz
jecxz
jecxz
scas
scas
scas
scas
scas
scas
scas
scas
push
cmc
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
into
into
into
into
into
into
into
into
rcl
shrl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
lahf
jmp
mov
arpl
arpl
jae
jae
jae
jae
jae
data16
test
iret
iret
iret
iret
iret
iret
iret
iret
iret
ja
ja
ja
add
add
jmp
mov
mov
mov
imul
mov
mov
cmp
push
push
push
addb
addb
imul
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
add
fs
js
js
js
js
js
js
js
js
js
js
inc
inc
in
in
in
in
in
test
test
data16
or
or
or
or
or
or
add
or
or
hlt
hlt
hlt
and
and
and
and
and
roll
add
add
add
add
xchg
xchg
xchg
jg
jg
jg
jg
jg
lea
pop
pop
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmc
cmc
and
and
and
and
cmp
cmp
int
int
int
sahf
out
out
out
lea
lea
lea
dec
dec
dec
rcl
repnz
xchg
xchg
xchg
xchg
stos
stos
stos
stos
stos
stos
stos
stos
stos
xor
mov
call
call
mov
jae
jae
jae
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
push
push
or
or
or
or
or
and
and
inc
inc
inc
xor
xor
xor
xor
xor
xor
xor
add
add
add
xchg
push
push
push
push
push
push
push
rcl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
sbb
mov
xor
xor
div
div
div
imull
les
pop
pop
faddl
mov
mov
jb
jb
jb
pop
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
ret
lock
sub
sub
sub
add
nop
nop
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
scas
scas
scas
pop
pop
sahf
sahf
sahf
sahf
sahf
sahf
sahf
loop
loop
loop
loop
loop
loop
loop
dec
dec
dec
mov
mov
push
push
push
push
push
push
push
call
call
aaa
aaa
aaa
aaa
aaa
aaa
fsts
imul
imul
mov
mov
mov
mov
mov
fwait
mov
mov
mov
mov
add
lret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cli
cli
cli
mov
mov
xor
xor
pop
pop
pop
pop
ja
ja
ja
ja
ja
icebp
icebp
icebp
icebp
icebp
sub
sub
scas
scas
scas
scas
cmc
cmc
cmc
cmc
cmc
xor
dec
fcompl
mov
sahf
sahf
sahf
adc
adc
adc
adc
adc
adc
adc
adc
adc
xor
xor
xor
xor
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
out
out
out
out
out
out
fcmovu
fcmovu
fcmovu
fcmove
roll
inc
inc
inc
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
inc
inc
add
add
add
add
add
add
insb
insb
insb
lret
lret
stc
stc
stc
stc
stc
stc
stc
mov
xchg
xchg
xchg
les
jno
in
in
in
in
in
in
mov
mov
and
and
pop
pop
stos
stos
stos
stos
stos
stos
mov
mov
popf
popf
popf
popf
rol
rol
rol
sarl
aaa
aaa
lock
adc
les
cmp
cmp
cmp
add
add
jmp
jmp
jmp
jmp
jmp
hlt
hlt
hlt
hlt
hlt
xchg
xchg
arpl
arpl
test
sbb
sbb
sbb
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
into
into
into
mov
loope
lret
lret
dec
dec
dec
dec
dec
dec
dec
sti
sti
sti
sti
sti
sti
sti
mov
jne
jne
div
test
add
add
lods
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
xor
lret
lret
lret
lret
lret
xlat
xlat
xlat
xlat
xlat
jge
div
div
div
div
div
cmp
adc
adc
adc
adc
adc
lcall
lcall
add
push
push
push
push
push
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
fldcw
insl
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
add
in
in
in
jg
adc
adc
adc
dec
dec
dec
dec
test
test
push
xor
xor
mov
xor
sub
lret
lret
lret
fcmovnu
fcmovnu
call
repz
push
push
inc
push
push
push
push
push
push
push
add
add
ret
ret
ret
ret
mov
add
rcl
rcl
mov
mov
and
test
jbe
add
add
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
pop
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
ja
ja
ja
ja
ja
pop
rcl
rcl
std
std
std
std
std
pop
jnp
jnp
jnp
jnp
mov
lea
lea
add
xchg
xchg
mov
mov
mov
mov
sbb
and
and
std
std
std
mov
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
cmpsb
cmpsb
cmpsb
cmpsb
xor
xor
xor
xor
xor
xor
add
add
add
das
das
das
das
das
mov
stos
stos
stos
stos
stos
orb
jbe
nop
xor
jbe
jbe
jbe
jbe
add
add
add
add
orb
or
or
or
pop
pop
pop
pop
pop
ret
ret
ret
add
add
and
fisubl
add
push
push
push
push
add
pushf
pushf
add
xor
xor
xor
fcmovnu
fcmovnu
push
push
push
push
push
push
push
push
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
lahf
test
sbb
sbb
sbb
jp
add
add
cltd
cltd
cltd
add
rcl
roll
add
add
add
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
push
push
push
push
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sub
pop
pop
pop
inc
inc
inc
add
sbb
mov
mov
dec
dec
dec
test
test
lret
inc
inc
xchg
scas
loopne
add
hlt
lret
and
je
dec
pop
mov
pop
lock
cmp
or
loope
addb
shrl
sahf
pushf
iret
xor
jl
mov
sub
dec
or
jmp
add
mov
mov
cmp
inc
inc
sbb
fisttps
xchg
out
pusha
pusha
pop
jbe
addb
inc
fsubrl
imul
sbb
dec
push
push
add
mov
ret
andb
xchg
sbb
dec
insb
and
or
fisttpll
mov
popl
jecxz
pusha
pusha
leave
ret
inc
fwait
push
lods
mov
pusha
sbb
add
pop
dec
mov
leave
and
pop
cmc
les
push
dec
mov
mov
out
jmp
ja
and
and
add
addb
add
hlt
imul
lcall
scas
fsub
add
pop
nop
jnp
cmpsb
addb
enter
add
stc
rorl
adc
outsl
sbb
and
mov
adcl
inc
inc
imul
pushf
fmull
outsl
adc
or
rolb
in
rclb
int3
pop
mov
test
mov
scas
mov
ret
mov
mov
loopne
addb
ret
lahf
adc
ljmp
rol
lock
js
cmp
mov
mov
and
pop
push
and
fbstp
cmpsb
loopne
int
inc
inc
shll
push
mov
and
mov
mov
enter
mov
mov
mov
out
sbb
mov
mov
rclb
lcall
dec
loopne
inc
dec
add
rorb
mov
rclb
shl
rclb
cmp
pusha
mov
xchg
lahf
aam
fwait
inc
gs
daa
jmp
inc
inc
mov
inc
in
mov
mov
mov
mov
cmp
mov
add
sbb
inc
dec
icebp
cmpsb
add
mov
lret
pop
out
inc
mov
loopne
mov
adc
cmp
cmc
dec
xchg
add
nop
popa
push
inc
xchg
add
dec
repnz
sbb
popf
fmuls
xor
cli
xor
mov
mov
cmpsl
add
pusha
fdivrl
sub
or
insb
fwait
inc
and
mov
adc
xor
adc
lret
cmc
lret
test
pusha
movl
shll
pusha
movsl
scas
inc
inc
out
rol
and
loope
lods
push
mov
loopne
js
inc
inc
add
stos
and
scas
mov
add
mov
pusha
std
push
jo
fimuls
addb
add
and
loopne
inc
push
movsb
and
jl
fstl
and
mov
jl
push
push
jle
mov
pusha
lahf
sbb
jnp
add
icebp
cmpsl
jp
push
ljmp
in
and
pop
mov
rol
add
mov
adc
das
and
loopne
sub
and
enter
shl
inc
inc
fstps
js
hlt
pushf
nop
lock
loopne
cs
or
add
outsb
in
inc
inc
pop
gs
add
cld
shlb
or
enter
mov
in
test
rol
jmp
inc
inc
pop
xchg
push
popf
rorb
xchg
adc
sahf
cmp
add
xchg
pop
inc
xor
cmpsb
mov
js
and
fs
clc
xchg
clc
ds
test
push
pop
sbb
and
fnstsw
shrb
mov
mov
inc
inc
fwait
mov
jae
nop
fwait
cmp
or
movsl
xchg
lcall
push
loopne
imul
mov
mov
loopne
int
pusha
mov
rclb
loopne
xlat
in
mov
or
cli
leave
mov
scas
inc
inc
mov
sub
rolb
shll
sbb
mov
jae
sbb
lods
addb
ljmp
mov
dec
and
or
addb
jp
cmp
mov
rorb
dec
stos
lods
addb
mov
mov
mov
mov
enter
sub
addb
inc
inc
cmp
ret
cmp
inc
scas
mov
mov
shr
mov
cmpsb
add
xchg
lods
and
inc
fldcw
dec
pop
insb
pop
sub
and
or
pop
cmp
pusha
pusha
dec
xchg
jle
mov
daa
mov
stc
mov
testb
adc
movb
mov
insb
inc
shrb
loop
imul
and
sub
dec
xchg
cs
inc
sahf
jle
jmp
inc
inc
mov
and
and
orb
loope
add
mov
and
in
inc
inc
lea
inc
loop
adc
lods
inc
inc
jae
mov
insl
movsb
rol
pusha
pusha
out
jecxz
loope
jp
or
push
lea
mov
fstl
pop
in
pop
mov
pop
shrb
pusha
pusha
popf
les
sub
xor
jecxz
loop
add
push
ds
dec
mov
pop
pop
aas
addb
sub
and
inc
inc
cmpsl
xor
mov
mov
loopne
mulb
and
mov
or
orb
lret
push
push
js
fcmovu
adc
mov
cmp
mov
div
aas
ret
jecxz
or
adc
add
inc
shlb
mov
and
pusha
pusha
mov
shlb
rolb
sbb
and
clc
cmp
repz
hlt
jae
adc
and
add
ja
addb
inc
sub
loopne
std
add
mov
mov
jp
and
and
loopne
data16
lock
iret
push
push
loop
xchg
xor
jbe
mov
and
dec
out
out
mov
mov
and
and
cmp
repz
or
inc
repnz
mov
lds
inc
inc
adc
cs
pusha
jae
addb
andb
xchg
and
mov
pop
jg
movsb
rol
imul
out
push
pop
push
push
inc
and
sbb
pop
sbb
pop
in
mov
loopne
jge
addl
add
movsl
lock
in
cmp
add
pop
outsb
fs
loopne
jp
and
and
insb
adc
cmp
dec
insb
push
sbb
addl
loopne
lds
gs
out
ss
pop
pushf
inc
or
and
and
mov
test
shr
mov
pop
jno
andb
outsb
add
mov
jno
out
xor
dec
xor
dec
pop
iret
add
loopne
xor
out
lret
inc
sub
and
and
lea
cmp
int3
addl
jle
addb
pusha
fwait
push
jle
out
add
addb
adc
nop
lods
loopne
inc
andl
cmp
fnstcw
push
xchg
mov
test
aas
xor
or
loopne
mov
movsl
pop
int
std
shlb
push
bound
sbb
repnz
pop
sbb
movsl
fmul
sub
and
dec
out
enter
rol
xor
or
rol
call
mov
add
cmp
xchg
mov
push
test
mov
addr16
jmp
fidivs
or
inc
inc
jg
fs
pusha
pusha
enter
cli
inc
fnstcw
hlt
stos
cmp
add
and
sbb
inc
out
pushl
pop
int3
imul
jg
xchg
jns
popa
pop
and
mov
inc
std
xlat
pusha
jge
push
insl
adc
inc
inc
mov
aaa
popf
je
ret
or
and
add
sub
and
inc
inc
cmp
add
mov
xchg
xcrypt-cbc
cmpsl
adc
mov
jns
jne
add
shrb
inc
inc
pop
mov
add
cmc
sar
pop
stc
push
add
out
mov
sbb
mov
inc
xlat
cmp
mov
or
shlb
lahf
int3
bound
mov
sub
add
xchg
lods
push
mov
add
ffreep
sbb
rol
cs
pusha
push
jbe
rol
pusha
pusha
xor
addb
cmp
pop
xor
mov
out
fistpll
jb
inc
xlat
dec
jnp
mov
outsl
pop
and
sarb
inc
inc
rsqrtps
jp
cmp
loopne
add
and
mov
ja
out
xor
add
test
in
push
loopne
push
or
pop
pop
aaa
xor
sub
loopne
stc
push
out
negb
dec
push
jp
mov
adc
jbe
adc
jg
fs
push
add
faddl
add
cmp
call
or
sbb
pop
icebp
inc
andb
adc
jne
out
fucomp
insb
mov
hlt
sub
bound
pusha
pusha
mov
shrl
add
clc
push
loopne
xchg
loopne,pn
push
inc
pop
lret
outsb
mov
xor
inc
addr16
jns
dec
test
push
mov
fnsave
cmp
pusha
pusha
mov
cmp
cltd
rcrl
mov
loopne
in
subl
stos
cmp
std
and
jbe
test
loopne
popf
sub
shlb
jb
lret
add
pusha
les
sahf
mov
inc
stc
imul
push
out
and
pop
andb
fmuls
xlat
sbb
insl
inc
shl
fimuls
fidivs
lcall
dec
pop
das
insl
andb
or
add
add
pusha
xor
ret
loopne
add
in
or
jno
push
jge
cmp
sarl
pop
rcrb
rol
cmp
jns
cltd
jbe
loope
pop
pop
mov
fwait
dec
or
and
scas
dec
or
and
and
fisubl
jp
into
pop
xor
mov
xor
xchg
jg
rol
insb
dec
or
out
fnstsw
inc
add
dec
and
and
aam
ficoms
jae
and
pusha
loope
sub
loopne
jo
loope
fldcw
xchg
xchg
mov
andb
daa
test
loopne
push
mov
icebp
pop
push
xchg
xchg
or
push
call
int3
adc
ss
sbb
pop
sbb
push
mov
andb
pushf
adc
stos
rcl
negb
mov
cmp
je
enter
addb
rol
ret
loopne
mov
into
jmp
loopne,pn
popa
mov
jmp
push
addb
pop
mov
loopne
addb
or
sub
test
dec
adc
inc
pop
sbb
cmp
mov
or
loopne
dec
arpl
in
icebp
fdivrl
adc
cltd
inc
aaa
in
and
xlat
sbb
pop
add
loopne
ret
pop
sub
mov
xchg
and
cmpsl
and
roll
rol
adc
add
add
scas
add
mov
lock
sub
add
pop
ss
enter
mov
mov
xchg
ret
jg
js
mov
shlb
jecxz
in
and
shlb
jecxz
repz
andb
or
stos
addb
pop
cmpsl
and
paddq
jmp
cwtl
lret
pop
adc
jnp
dec
pop
mov
scas
inc
dec
out
add
shlb
push
xor
mov
mov
mov
and
fsubrl
cmpsb
pusha
pusha
sub
add
push
and
xchg
icebp
add
inc
fsubrp
xchg
fcmovnbe
cli
jle
stc
pop
and
add
push
loopne
inc
xchg
ja
and
enter
or
pusha
pusha
sbb
ss
aas
jmp
jno
push
shr
popf
fnsave
mov
into
test
add
clc
clc
mov
mov
shlb
add
in
js
popf
mov
sub
xchg
jl
mov
cmp
pushf
fildll
stos
loopne
cwtl
add
jp
popf
addr16
jbe
jp
std
fnstcw
push
rclb
add
push
rol
shrb
rol
xchg
ret
xor
lret
push
sub
add
cmpl
xor
loopne
jge
and
fisubrs
pusha
pusha
pop
pop
nop
gs
cmp
sub
add
test
add
shlb
popa
leave
cmp
call
add
sbb
mov
in
enter
push
add
mov
addb
pop
imull
in
inc
inc
sti
add
andb
inc
add
shr
popa
sahf
popa
mov
sub
and
ss
sbb
hlt
outsl
mov
jnp
icebp
aaa
ljmp
es
hlt
pop
xor
sti
mov
rol
adc
sarl
sub
loopne
sub
add
loopne
loopne
mov
xchg
test
pop
andb
mov
inc
inc
aad
ljmp
xor
and
and
pop
sbb
lods
loopne
pop
into
and
inc
ljmp
sub
cmc
mov
jp
pusha
pusha
sub
addb
fs
jb
pop
push
rol
and
ja
inc
inc
testb
orb
sbb
pop
int3
push
loopne
inc
inc
insb
cmpl
mov
sbb
pusha
pusha
les
add
adc
mov
jns
repz
in
clc
jne
inc
pushf
inc
std
push
mov
movsl
pop
insb
add
pusha
andnps
cmp
sarb
jle
jl
out
jo
ss
push
test
mov
stc
jnp
adc
inc
daa
fidivl
sbb
mov
testl
add
mov
jp
push
jae
das
and
jnp
xlat
mov
pop
clc
sub
ror
mov
and
leave
cwtl
jp
in
int
sbb
xor
jo
pop
cwtl
xchg
out
dec
out
rol
test
mov
jg
add
and
es
inc
mov
pmaddwd
loop
push
pusha
pusha
pop
pop
mov
adc
push
test
push
mov
cli
pusha
inc
push
xor
and
repnz
push
push
cmp
pusha
addb
pusha
cwtl
xor
xchg
xor
sti
adc
test
aaa
mov
ror
dec
lahf
andb
in
mov
rclb
mov
jl
daa
lock
sti
push
cli
out
in
mov
rcrb
loope
jle
sti
xabort
stos
out
adc
pop
inc
adc
dec
lea
jbe
xchg
and
mov
ljmp
pusha
movsl
repnz
and
push
mov
fmull
and
adcb
mov
and
pusha
leave
and
imul
mov
rorb
jnp
pusha
pusha
scas
lods
mov
mov
mov
pop
xchg
xchg
or
mov
mov
inc
xor
std
cwtl
test
loopne
lret
pusha
mov
pop
and
xorb
sbb
pop
sub
adc
mov
xor
adc
stc
inc
push
and
cmpsl
outsl
loopne
xor
fldt
cltd
pushf
roll
aaa
and
xchg
mov
or
dec
addb
in
jl
push
add
add
cmp
sbb
popa
fwait
mov
pop
cmp
pusha
mov
test
test
loopne
pop
pop
xor
daa
cltd
loopne
fucomip
cld
iret
mov
call
or
fisttps
sbb
lcall
sbb
and
ret
notl
mov
inc
test
sbb
aad
add
jp
call
imull
sahf
aas
or
push
xor
and
or
loopne
mov
mov
inc
inc
int
fistpl
shll
pop
jb
inc
inc
repz
shlb
push
mov
loopne
test
mov
rol
and
lcall
mov
adc
jl
pop
or
out
shl
adc
xchg
mov
and
loopne
movsl
imul
call
jne
add
inc
flds
xchg
cmpsb
addb
rorb
lds
xchg
insl
xchg
leave
pop
fcomip
mov
fsts
imul
inc
mov
add
out
dec
aas
jecxz
xor
rol
stc
jne
jecxz
mov
push
addb
rclb
shlb
push
inc
push
call
inc
inc
pop
insl
pusha
push
jno
sub
push
jecxz
int
sbb
jne
and
xor
lds
dec
push
ficomps
mov
cmc
scas
loopne
jmp
mov
addb
rol
lock
pop
int3
add
loop
lock
repz
iret
das
dec
dec
push
push
stc
shlb
leave
xchg
and
cld
sbb
ja
jb
xchg
inc
fists
fidivs
insb
lods
pop
xchg
lock
xorl
adc
out
rorb
lods
insl
xchg
int
xchg
fnstenv
test
push
add
pusha
xchg
cmp
jge
jmp
jg
and
imul
and
in
sub
xchg
enter
cmp
cmp
clc
pop
andb
add
and
or
xor
lcall
jmp
cli
cmp
mov
test
cld
push
out
add
pop
cmpsb
add
mov
mov
rorb
push
fldcw
jmp
jno
xorps
outsb
andb
jno
xor
stos
mov
push
insb
mov
pusha
pusha
add
add
inc
movsl
xchg
lock
inc
and
inc
mov
add
gs
add
adc
pusha
pusha
and
orb
cmc
jle
cmpsb
mov
inc
mov
cwtl
icebp
and
pop
gs
jmp
xchg
xor
inc
add
lods
mov
inc
inc
loope
test
sbb
sub
pop
imul
rol
addb
sbb
sbb
dec
xor
loopne
xor
mov
in
iret
test
add
pusha
mov
mov
and
inc
lea
add
loopne
rorb
pop
scas
pop
mov
dec
fdivp
push
negl
out
pop
cmpsb
addb
or
xor
adc
mov
and
movsl
gs
int
jge
or
add
test
lret
lahf
je
loopne
mov
repnz
enter
add
dec
fidivl
in
addr16
push
mov
cli
mov
mov
imulb
inc
inc
arpl
decb
mov
shlb
and
sub
divl
testl
loopne
scas
mov
add
jecxz
xlat
dec
sub
and
sub
inc
inc
iret
outsb
or
dec
push
mov
outsb
mov
fnstenv
mov
adc
lods
sub
loopne
cmp
mov
loope
cs
pusha
inc
push
pusha
pusha
and
loopne
pop
add
jl
jb
add
sub
push
inc
inc
ret
and
loopne
pusha
fisubs
inc
inc
pop
mov
fmulp
and
ja
jne
push
xchg
lahf
loop
test
inc
test
mov
pop
dec
out
icebp
cld
mov
outsl
jge
push
pop
mov
and
shlb
call
push
fcoms
xor
adc
lock
push
mov
shr
cltd
movsl
cmpsb
addb
arpl
insb
daa
or
int
rolb
and
sar
stc
les
cwtl
push
inc
inc
or
mov
push
lock
ds
mov
pusha
testb
scas
scas
andb
in
adc
push
pop
aam
pop
jmp
shrl
pop
cltd
in
inc
in
hlt
lods
cmp
rol
push
in
mov
cmpsb
and
or
cli
cmpsl
sub
and
daa
or
loopne
pop
jg
mov
and
andb
inc
test
add
jecxz
push
aas
mov
in
jae
add
arpl
rol
xchg
jo
inc
dec
out
jp
cmc
cli
adc
sbb
sbb
jbe
fwait
sbb
mov
dec
rcl
popf
cmp
or
add
fucomi
cmp
lea
and
xchg
jnp
add
addb
loopne
test
loopne
xchg
inc
clc
fwait
lcall
xchg
stos
inc
inc
dec
add
insb
lahf
inc
xchg
loopne
sub
loopne
lea
pusha
out
mov
pop
mov
loopne
fucomp
push
pop
jb
sbb
loope
jae
addb
push
mov
mov
das
sub
or
subb
rol
test
shrb
cs
inc
sbb
mov
add
sbb
loope
pusha
pusha
push
lcall
pop
xor
adc
loopne,pn
testb
dec
inc
ficoms
inc
cmp
or
jge
dec
rol
jmp
daa
and
jns
call
mov
pop
push
popf
addb
loopne
and
ds
mov
fisttpl
rol
dec
sub
xchg
adc
int3
pop
mov
test
mov
sub
xor
xlat
adc
dec
call
sbb
xor
cwtl
arpl
add
addb
int
call
or
loopne
or
loopne
sti
mov
in
mov
sub
mov
ss
repz
dec
xlat
cmp
ret
dec
and
loopne
repnz
xchg
push
iret
mov
inc
int3
into
int
repz
mov
mov
add
push
cmpsl
push
loopne
fdivs
icebp
mov
loopne
and
inc
pop
fdivrl
cwtl
lock
mov
cltd
das
jae
ss
inc
xor
and
loopne
sub
arpl
add
int
mov
mov
bound
in
mov
inc
aaa
test
pop
in
into
inc
dec
jne
pusha
pusha
lret
cwtl
mov
sarb
xor
and
add
roll
cmpsl
pusha
and
mov
leave
dec
push
add
pusha
cmpsb
add
cmpsl
stc
das
xor
adc
add
insl
xchg
mov
lcall
mov
mov
dec
xchg
fldenv
mov
fsts
ljmp
add
in
cmp
popf
dec
mov
cmpb
mov
xor
mov
and
jbe
or
arpl
stc
cmp
xor
and
aaa
stos
push
xor
dec
pop
shrb
mov
mov
inc
inc
lret
aam
call
or
cmp
shlb
bound
ds
mov
cmpsl
mov
push
jmp
push
mov
inc
pop
add
add
push
or
inc
inc
xchg
and
xor
and
sarb
cmp
push
in
pop
sbb
lret
mov
adc
pop
lock
and
and
adc
pop
pop
ret
andl
and
push
fdivrl
sub
out
pusha
mov
outsl
xchg
xchg
add
addb
jb
lock
or
movb
clc
mov
pusha
pusha
ret
and
aas
inc
notb
cmp
outsb
iret
js
mov
mov
sahf
test
loopne
jmp
pusha
pusha
das
lahf
sbb
or
shl
jnp
subl
xchg
add
pusha
jp
sahf
loop
pop
mov
daa
pop
jo
mov
mov
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
mov
push
xor
mov
cmp
je
mov
mov
mov
and
dec
je
dec
je
dec
je
and
test
jne
mov
test
jbe
cmp
ja
cmp
je
mov
and
jne
mov
test
jne
push
pushl
pushl
push
pushl
pushl
push
call
test
jge
push
call
mov
pop
pop
leave
ret
xor
ret
call
test
jne
lea
push
call
test
jl
cmpl
je
jmp
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
lea
push
push
push
call
test
jl
push
lea
push
push
lea
push
push
pushl
call
pushl
mov
call
test
pop
jl
cmpl
je
xor
mov
xor
call
leave
ret
xor
inc
jmp
pushl
call
test
je
jmp
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
mov
push
lea
xor
push
mov
mov
call
mov
mov
mov
push
push
pushl
call
mov
xor
cmp
je
cmp
je
mov
mov
mov
lea
push
push
lea
lea
push
movl
movl
mov
call
test
jl
push
lea
push
call
lea
push
push
push
push
lea
push
pushl
call
test
jge
push
lea
push
call
lea
push
push
push
push
lea
push
pushl
call
test
jl
cmpl
jne
mov
mov
mov
pushl
call
test
je
push
push
push
call
mov
mov
add
push
push
pushl
call
mov
pop
pop
pop
leave
ret
mov
movb
jmp
nop
nop
push
add
push
add
add
inc
add
popa
add
insb
add
add
add
add
jo
jo
inc
add
insl
add
popa
add
add
add
add
imul
jb
jns
pop
add
popa
add
push
add
pop
add
jns
jae
je
add
pop
add
jne
jb
jb
gs
push
push
call
mov
adc
test
je
movzwl
inc
inc
cmp
jne
dec
dec
cmp
jae
mov
shr
xor
mov
mov
shr
pop
pop
pop
leave
ret
test
ja
jmp
push
push
lea
push
add
push
pushl
call
test
jne
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
push
mov
lea
push
xor
push
call
mov
cmp
je
push
push
push
pushl
pushl
call
mov
cmp
jae
lea
push
push
push
pushl
push
pushl
push
push
call
test
je
pushl
call
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
call
xor
mov
mov
call
mov
mov
cmp
je
call
lea
push
lea
push
lea
push
push
call
mov
cmp
jne
pushl
lea
push
call
test
je
addw
mov
test
jne
lea
push
push
call
mov
lea
push
call
mov
mov
call
push
push
call
mov
call
ret
cmp
je
jmp
nop
nop
nop
nop
nop
nop
nop
incl
add
add
incl
add
add
fmulp
data16
int
jne
jne
cmp
jbe
add
cmp
je
lea
xor
test
jne
cmp
jne
mov
lea
push
push
mov
pushl
call
mov
cmp
je
push
pushl
push
call
add
mov
mov
mov
mov
lea
mov
push
push
mov
pushl
call
mov
cmp
je
push
pushl
lea
push
push
push
call
cmp
jl
mov
mov
mov
jmp
pushl
push
mov
mov
pushl
call
jmp
pushl
push
mov
mov
pushl
call
jmp
cmp
jne
jmp
nop
nop
nop
nop
nop
push
push
call
xor
mov
lea
stos
stos
xor
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
je
mov
call
lea
push
lea
push
lea
push
push
call
mov
cmp
jne
rcl
inc
add
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
mov
xor
lea
call
add
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
mov
mov
mov
cmp
jne
mov
push
lea
push
call
xor
mov
mov
mov
lea
push
push
lea
lea
push
movl
movl
mov
call
mov
test
jge
cmp
jne
xor
cmpl
jne
mov
pop
pop
mov
xor
pop
call
leave
ret
je
jmp
mov
jmp
nop
pop
add
add
imul
jb
jns
pop
add
inc
add
dec
add
dec
add
pop
add
outsl
add
je
ja
popa
add
add
add
arpl
jb
outsl
add
outsl
add
je
pop
add
imul
outsl
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
imul
inc
add
push
add
add
add
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
lea
push
lea
push
pushl
call
test
jl
mov
mov
and
cmpl
jne
and
or
test
jne
mov
cmp
jb
cmp
jbe
cmp
je
cmp
je
leave
ret
cmpl
lahf
arpl
popa
and
shl
mov
mov
notb
mov
dec
jge
addb
jb
addb
push
or
and
addb
push
rcll
sbb
mov
subl
jg
mov
gs
aam
pushf
div
pusha
hlt
mov
cmp
imul
mov
mov
jmp
js
ret
aad
ljmp
movl
xor
fsts
push
pushf
scas
loopne
add
pop
repnz
int
jns
xchg
push
loopne
fucompp
inc
pop
cmpsl
adc
or
rcrb
in
mov
mov
pusha
pusha
lahf
cmp
mov
cli
ds
sub
loopne
outsb
mov
mov
outsl
cli
testl
inc
mov
mov
nop
rcrb
imul
dec
inc
or
rol
insb
arpl
testb
les
out
and
fcomi
adc
jns
mov
lahf
jg
adc
fucomip
ja
hlt
mov
sub
cmp
outsl
jge
and
call
test
add
cmpsl
imul
or
pusha
pusha
hlt
and
loopne
pop
das
mov
dec
scas
and
add
xchg
mov
fidivs
push
call
inc
pop
adc
fldcw
sbb
mov
rcr
mov
loopne
sbb
xor
popa
xchg
sbb
out
andb
adc
std
inc
sbb
mov
daa
sahf
push
test
and
mov
cmc
xchg
and
pop
or
mov
loopne
js
sbb
xchg
gs
lret
push
mov
mov
pusha
pusha
xchg
lock
cltd
js
cmp
rol
dec
jno
repz
xchg
and
loopne
clc
out
test
xchg
add
inc
fsubl
addb
xchg
pop
rcrb
inc
je
push
fists
push
dec
xchg
dec
mov
mov
xlat
jbe
fadd
and
in
stos
mov
addr16
leave
movsb
mov
rcrb
and
nop
mov
mov
addr16
leave
test
jmp
ljmp
and
mov
mov
popf
and
ljmp
into
pop
add
dec
xor
pusha
jne
dec
adc
loope
pop
clc
cmp
add
inc
inc
sub
xor
inc
pop
xlat
daa
add
mov
and
add
shl
mov
pusha
cltd
aaa
inc
dec
in
xchg
loop
or
scas
rol
mov
or
jmp
push
iret
or
lea
inc
bound
adc
jno
addr16
sarl
bound
add
adc
rol
ds
daa
cwtl
pop
xchg
scas
adc
or
jp
js
sahf
mov
mov
adc
adc
xor
inc
mov
sbb
addb
inc
jno
fidivrl
and
loopne
cmc
jecxz
fsubl
mov
mov
cmc
fcmove
and
push
bound
in
xor
rclb
mov
inc
dec
cld
test
loopne
pop
dec
cmp
je
popa
jbe
push
addb
inc
inc
jno
pop
leave
pop
imul
rol
addb
lods
inc
inc
dec
sub
adcl
sahf
dec
inc
push
pop
fcomps
aas
or
pusha
lods
shlb
cwtl
jne
xor
iret
fmull
adc
hlt
mov
fisubl
pusha
mov
adc
js
fs
push
dec
inc
inc
shr
fdivrl
out
cltd
add
insl
and
and
popa
jnp
mov
inc
lret
in
jge
sbb
clc
aas
fiaddl
and
push
sar
sbb
insl
mov
dec
sub
mov
ja
out
stos
jmp
repz
fcmovb
mov
loopne
int3
add
mov
push
sub
loopne
mov
sbb
pusha
pusha
pusha
je
testb
and
mov
loopne
push
loopne
scas
mov
cmc
fidivrs
loopne
adc
push
rol
in
jne
addb
sub
and
pop
test
loopne
lock
sub
inc
inc
cmp
cmp
shll
jno
mov
jp
divb
repz
and
dec
pop
pusha
or
loopne
sub
aaa
xor
aad
aam
in
lock
inc
inc
push
xor
fidivs
mov
nop
push
and
aaa
xchg
loopne
sbb
sub
lds
loope
pop
sub
add
cmpsb
addb
jo
add
add
outsl
xchg
xor
lret
inc
shl
and
cmp
mov
ror
das
xchg
sti
dec
mov
into
and
inc
pusha
bound
pushf
add
xorb
mov
loopne
addb
sarb
repz
addb
loopne
or
stos
add
jge
xchg
loopne
add
inc
cld
sar
sbbl
sub
addb
fprem
sbb
jns
iret
add
loopne
loopne
and
pop
xor
inc
inc
rcrb
inc
out
xchg
cld
out
sub
fstl
add
xchg
lea
pushw
lds
mov
add
mov
adc
sbb
lock
clc
push
andb
inc
insb
fadd
sub
add
add
pusha
mov
xchg
aad
loope
pop
dec
jl
lock
shrb
test
rclb
pop
gs
xor
mov
pop
loop
aad
inc
pop
stos
mov
sbb
pop
cmpsl
insb
insb
push
rol
mov
cmp
and
or
aaa
mov
and
mov
pusha
pusha
cmp
gs
into
decb
mov
inc
stc
sbb
cmp
andb
pop
push
pusha
pusha
cwtl
icebp
clc
sub
roll
inc
inc
std
sti
cmp
xor
adc
jns
icebp
pop
mov
push
add
pop
sbb
jecxz
push
jp
inc
dec
ud0
insb
pop
xchg
pop
inc
ss
adc
loopne
sbb
out
push
push
and
clc
out
xor
in
add
adc
insl
repnz
loope
add
ja
aas
add
push
addr16
or
enter
sbb
pop
mov
mov
and
mov
push
push
negb
test
add
loopne
add
sub
addb
test
mov
or
xchg
push
aad
and
inc
pop
cmc
inc
negb
into
cmp
rcrb
outsl
jb
dec
push
pop
or
or
mov
pop
jno
iret
and
out
cmpsb
rol
inc
inc
and
xchg
lods
inc
inc
mov
cmp
pusha
pusha
out
or
fmul
imul
add
push
repnz
ljmp
inc
pop
push
xchg
add
pop
outsb
push
punpckhdq
aaa
leave
cmpsb
rol
cmpsb
loopne
adc
shlb
pop
dec
inc
mov
pushf
mov
pop
popa
jbe
mov
and
and
loopne
xchg
inc
pop
jecxz
mov
loopne
add
movsb
add
pushf
iret
mov
orb
mov
jmp
sub
push
popf
ret
andb
or
stc
inc
xlat
or
loopne
mov
loopne
lcall
repz
jb
sub
push
or
repnz
add
push
sbb
shlb
inc
pop
enter
inc
inc
je
popl
xor
sbb
mov
insb
xchg
adc
addb
test
lret
sub
lea
add
jl
arpl
lahf
xor
add
add
sbb
pushf
add
add
enter
inc
and
std
sti
xchg
inc
lods
add
dec
in
mov
test
loopne
subl
mov
mov
add
arpl
sbb
popf
les
mov
xor
addb
pusha
pusha
int
xchg
lds
jg
enter
pop
shrb
in
cld
mov
and
jae
cmc
xchg
xchg
pop
xor
add
jo
sbb
ret
add
mov
loope
cmp
pop
fcomps
loopne
mov
mov
cld
mov
shrb
int
cmp
pop
mov
fdivrs
xor
push
pop
sbbl
sahf
cmc
inc
sbb
inc
adc
cld
jg
bound
test
inc
sub
rclb
pushf
cld
adc
adcl
idivl
rol
das
fistl
inc
jne
loopne
cmp
adc
outsl
mov
mov
mov
out
inc
push
fnstsw
add
hlt
lods
add
dec
std
cmpsb
addb
rcrl
jg
fsubrl
lods
inc
inc
test
sarb
loopne
mov
inc
hlt
inc
fdivp
leave
pop
out
cltd
or
shlb
dec
xchg
lea
and
or
add
test
ret
in
inc
test
scas
loopne
fiaddl
sbb
add
movsb
mov
imul
mov
cmc
sbb
aam
ja
xchg
and
and
mov
push
inc
inc
cmp
pop
ljmp
sarl
pop
pop
rcrl
mov
xlat
pop
dec
rol
popf
cmp
shlb
fdivrs
xor
ret
int3
test
jns
push
adc
iret
jbe
gs
jg
fld1
or
cmp
das
or
sub
js
jnp
lret
mov
repnz
pusha
pusha
or
nop
lods
popf
mov
cmp
jge
pop
cmc
mov
fnstcw
mov
leave
mov
mov
sub
or
sub
inc
sbb
shrl
fs
jne
jg,pt
icebp
pushf
dec
pushf
aas
or
rcl
add
loopne
cli
aad
cmpsl
jo
cmp
loopne
inc
cmp
inc
inc
cmpsl
jmp
push
push
inc
pop
lods
rol
das
cmc
fisubs
mov
mov
pusha
pusha
push
push
and
add
inc
ficomps
jo
mov
shlb
stos
inc
inc
push
faddl
lods
pusha
pusha
jmp
insl
xchg
into
jne
xchg
xchg
add
loopne
mov
inc
push
or
add
mov
lret
sahf
or
jo
inc
sti
jge
add
ljmp
mov
lods
sahf
sub
movzbl
cltd
loopne
ja
fbstp
loopne
popa
push
leave
in
xor
xlat
rorl
loopne
loopne
fs
imul
and
notl
inc
cmp
pusha
test
and
mov
cli
push
pop
sub
fcmovnb
inc
repnz
loopne
sbb
mov
roll
cltd
mov
inc
stc
insl
mov
add
sahf
adc
add
loopne
pop
cmp
xchg
mov
loopne
pop
or
loopne
pop
sti
jg
xchg
jne
iret
lret
jg
insl
outsl
push
out
xchg
movsb
and
sbb
pushf
dec
pop
lcall
out
sahf
sub
loopne
ja
jmp
loopne
imul
adc
mov
loopne
fmull
dec
inc
jne
mov
jo
lods
pusha
pusha
loopne
and
shl
test
add
pop
in
mov
dec
pop
push
loopne
das
xor
in
sbb
sbb
repz
or
inc
push
xchg
jo
jg
and
jmp
pusha
test
loopne
mov
enter
mov
leave
imul
jmp
fcoms
cmp
mov
inc
inc
loopne
mov
push
add
pop
mov
ja
push
repnz
loopne
inc
and
inc
xor
leave
loop
jno
loop
test
ror
stos
out
inc
xchg
cmc
add
loopne
insb
out
pusha
pusha
pop
lahf
nop
push
mov
std
mov
and
add
cmp
pop
xchg
loopne
in
sbb
rol
les
loopne
xchg
pusha
inc
fwait
in
pop
adc
pop
dec
xchg
aaa
movl
dec
test
and
pop
movsl
and
and
cld
adc
mov
mov
rclb
mov
mov
and
vmread
xchg
add
rol
mov
xchg
in
cltd
push
xor
sub
shll
mov
mov
push
pusha
pusha
aaa
jge
ljmp
and
sub
xor
xchg
or
mov
es
inc
mov
jl
push
mov
out
mov
leave
or
stos
mov
pop
nop
jg
cmp
and
cmp
pusha
jg
jb
and
push
adc
stos
iret
cli
cmc
imul
addb
inc
inc
aaa
pushl
sahf
inc
jb
js
pop
fildll
ljmp
push
and
lea
cmc
js
adc
jnp
div
mov
push
mov
dec
int3
iret
mov
gs
or
shrl
dec
inc
jnp
scas
cmp
inc
lahf
dec
xor
add
lret
ds
jmp
jae
mov
mov
mov
cwtl
das
ss
push
inc
pop
pop
cld
mov
bound
push
adc
mov
dec
out
andb
mov
test
inc
data16
jmp
sub
fcmovb
jb
shlb
ljmp
add
mov
sbb
stos
mov
xchg
sub
and
testl
inc
lea
inc
inc
jno
and
rcl
inc
inc
out
dec
cltd
jnp
add
mov
sbb
movsb
loopne
or
fbld
lahf
jecxz
loope
xor
jmp
test
loopne,pn
fstl
and
std
xchg
incl
orb
fidivrs
inc
test
shlb
add
mov
mov
or
fnstsw
mov
loopne
or
shlb
loopne
push
int3
fisubs
fcoml
ds
or
or
in
movsl
pop
sub
loopne
adc
pop
lods
dec
or
and
push
sbb
inc
inc
push
rol
mov
and
aas
movsl
ds
test
in
mov
test
fwait
test
pusha
mov
push
in
movsb
add
cli
addr16
sti
push
nop
clc
repnz
cld
jae
loop
imul
add
pop
add
push
mov
xchg
ret
add
xchg
add
push
xchg
mov
nop
clc
repnz
cld
jae
xchg
xchg
jb
add
pop
dec
add
nop
clc
repnz
cld
jae
add
add
or
push
mov
nop
clc
repnz
cld
jae
loop
jp
add
add
fwait
pusha
push
mov
xchg
ret
mov
add
add
rol
flds
jne
nop
clc
repnz
cld
jae
inc
add
add
add
shl
nop
push
mov
leave
nop
jmp
add
pusha
xchg
add
dec
hlt
jno
lods
sldt
nop
push
mov
leave
nop
jmp
add
add
nop
clc
repnz
cld
jae
add
add
inc
dec
mov
push
mov
xchg
ret
outsb
mov
push
add
push
jle
inc
mov
nop
push
mov
leave
nop
jmp
arpl
add
xchg
add
inc
inc
lds
push
mov
leave
nop
jmp
add
add
add
in
mov
nop
push
mov
leave
nop
jmp
outsl
pop
mov
arpl
fidivrs
mov
nop
clc
repnz
cld
jae
add
mov
jb
nop
push
mov
leave
nop
jmp
xchg
or
in
fistpl
nop
clc
repnz
cld
jae
add
lret
test
in
xor
push
mov
xchg
ret
push
push
push
add
add
pop
int3
movsb
mov
adc
jae
or
inc
add
mov
adc
clc
repnz
cld
jae
pop
add
xor
push
mov
leave
nop
jmp
add
pop
lahf
add
mov
and
dec
add
nop
clc
repnz
cld
jae
dec
push
mov
mov
pop
addl
jle
mov
mov
nop
clc
repnz
cld
jae
add
push
loop
mov
push
mov
leave
nop
jmp
inc
pusha
jle
pop
inc
add
leave
nop
push
mov
leave
nop
jmp
add
std
lahf
xchg
jle
and
nop
clc
repnz
cld
jae
xor
and
and
nop
clc
repnz
cld
jae
in
add
rep
nop
clc
repnz
cld
jae
add
push
add
les
clc
repnz
cld
jae
xchg
jg
add
jg
pusha
pusha
jp
xchg
add
push
mov
xchg
ret
leave
add
mov
push
mov
nop
clc
repnz
cld
jae
add
add
add
addb
add
test
add
mov
mov
and
rcrb
mov
xchg
ret
add
add
xchg
lcall
fistpl
push
mov
xchg
ret
into
add
loop
lret
add
pusha
nop
clc
repnz
cld
jae
add
xchg
add
dec
into
inc
dec
or
nop
clc
repnz
cld
jae
add
push
jg
push
mov
xchg
ret
add
mov
nop
clc
repnz
cld
jae
add
add
nop
add
pusha
int3
push
cmpsl
xor
nop
clc
repnz
cld
jae
add
jg
pop
nop
clc
repnz
cld
jae
dec
add
add
add
adc
and
mov
nop
push
mov
leave
nop
jmp
add
leave
mov
aad
mov
add
jae
imul
pusha
ret
push
mov
xchg
ret
push
xchg
add
add
in
test
mov
xchg
ret
add
or
add
inc
add
data16
call
nop
clc
repnz
cld
jae
jns
add
inc
fwait
push
nop
clc
repnz
cld
jae
add
into
or
jle
add
nop
clc
repnz
cld
jae
push
add
sahf
cli
stos
pop
nop
clc
repnz
cld
jae
push
add
add
push
mov
leave
nop
jmp
or
xchg
add
repz
nop
clc
repnz
cld
jae
lahf
inc
jb
ret
mov
clc
nop
clc
repnz
cld
jae
jns
outsb
jle
jle
cmp
add
and
fistpl
nop
clc
repnz
cld
jae
test
add
lock
jl
scas
mov
jmp
lcall
add
add
add
add
xchg
push
mov
loopne
add
enter
enter
nop
cld
jae
mov
test
mov
add
nop
clc
repnz
cld
jae
imul
add
push
push
mov
xchg
ret
add
add
add
xor
and
and
repz
and
imul
es
jecxz
clc
repnz
cld
jae
add
add
mov
nop
clc
repnz
cld
jae
jns
add
add
pusha
lret
push
push
mov
xchg
ret
pusha
add
add
std
cmc
jg
push
nop
clc
repnz
cld
jae
mov
add
mov
cmpsl
push
push
mov
xchg
ret
add
xchg
pop
outsl
push
add
lret
je
shr
nop
clc
repnz
cld
jae
add
mov
xchg
inc
add
add
mov
xchg
ror
xor
push
mov
xchg
ret
pop
loop
arpl
add
xor
push
mov
xchg
ret
add
add
and
mov
xchg
ret
add
add
add
clc
repnz
cld
jae
add
sub
add
jae
add
loop
insl
xchg
push
mov
xchg
ret
jp
add
in
mov
push
mov
xchg
ret
xchg
inc
add
add
sti
nop
push
mov
leave
nop
jmp
mov
xor
mov
nop
clc
repnz
cld
jae
push
loop
add
add
push
xchg
fwait
push
mov
xchg
ret
add
add
add
clc
repnz
cld
jae
add
add
rcll
insb
inc
add
cmc
into
push
and
or
nop
cld
jae
imul
dec
xchg
jg
xor
nop
clc
repnz
cld
jae
dec
add
jle
loop
jbe
addb
clc
repnz
cld
jae
add
add
lahf
mov
and
clc
repnz
cld
jae
add
add
add
or
add
jae
arpl
mov
sbb
add
add
imul
jg
add
jo
cs
pusha
cmc
test
nop
push
mov
leave
nop
jmp
outsl
add
adc
clc
repnz
cld
jae
add
dec
lret
outsb
add
add
add
push
mov
xchg
ret
mov
add
pop
sub
inc
test
and
inc
mov
nop
clc
repnz
cld
jae
add
add
fsubr
cmp
nop
push
mov
leave
nop
jmp
dec
pop
add
add
adc
push
mov
xchg
ret
std
leave
add
dec
add
dec
xchg
pop
nop
push
mov
leave
nop
jmp
add
imul
test
clc
repnz
cld
jae
xchg
push
inc
or
rolb
nop
clc
repnz
cld
jae
loop
arpl
nop
in
jb
mov
push
mov
xchg
ret
nop
add
add
push
nop
clc
repnz
cld
jae
mov
mov
pop
pop
nop
clc
repnz
cld
jae
add
add
pop
mov
aas
xor
nop
clc
repnz
cld
jae
sldt
push
into
test
xchg
or
cmp
mov
xchg
ret
add
loop
mov
xchg
add
test
nop
cld
jae
add
or
add
clc
repnz
cld
jae
push
inc
and
jp
add
xchg
imul
nop
push
mov
leave
nop
jmp
add
inc
pop
call
nop
clc
repnz
cld
jae
mov
je
nop
clc
repnz
cld
jae
add
cmc
in
outsb
jmp
loopne
nop
clc
repnz
cld
jae
std
leave
add
add
mov
imul
nop
push
mov
leave
nop
jmp
add
mov
fistpll
nop
clc
repnz
cld
jae
loop
add
push
nop
clc
repnz
cld
jae
add
jg
and
add
inc
or
jae
pop
add
add
mov
push
mov
xchg
ret
add
add
push
stc
mov
nop
push
mov
leave
nop
jmp
in
jg
loop
push
xlat
dec
push
mov
xchg
ret
mov
test
add
lahf
add
jmp
lock
clc
repnz
cld
jae
add
add
add
out
nop
clc
repnz
cld
jae
jp
pop
mov
add
pop
nop
push
mov
leave
nop
jmp
add
add
mov
nop
clc
repnz
cld
jae
add
or
jne
test
add
nop
clc
repnz
cld
jae
add
in
adc
xchg
add
jae
push
add
jmp
nop
clc
repnz
cld
jae
cmc
and
add
nop
cld
jae
push
add
in
nop
add
push
nop
push
mov
leave
nop
jmp
add
push
or
push
mov
nop
clc
repnz
cld
jae
add
mov
nop
clc
repnz
cld
jae
add
add
push
std
fld1
nop
push
mov
leave
nop
jmp
add
add
add
mov
or
clc
repnz
cld
jae
add
push
add
jb
loopne
mov
nop
clc
repnz
cld
jae
inc
outsb
add
add
dec
jecxz
jmp
nop
cld
jae
add
add
in
les
fists
jae
in
setg
inc
nop
jo
xor
nop
clc
repnz
cld
jae
jp
mov
add
nop
clc
repnz
cld
jae
push
add
add
dec
lcall
push
mov
leave
nop
jmp
add
jns
cmc
push
mov
scas
ret
push
mov
xchg
ret
xchg
inc
add
loop
add
push
inc
fistpl
push
mov
xchg
ret
xchg
inc
add
add
lahf
or
mov
xchg
ret
add
jle
add
add
push
dec
mov
test
add
nop
push
mov
leave
nop
jmp
pusha
add
add
clc
repnz
cld
jae
pop
repz
test
add
seto
in
leave
nop
jmp
pusha
cmc
push
add
add
in
or
in
leave
nop
jmp
add
or
pop
fld1
nop
clc
repnz
cld
jae
leave
or
add
and
inc
cli
fdiv
lret
add
push
mov
xchg
ret
mov
add
sbbl
repnz
cld
jae
outsb
xchg
pop
imul
add
fsubl
addb
clc
repnz
cld
jae
push
push
test
add
js
mov
movzwl
nop
push
mov
leave
nop
jmp
add
xor
nop
clc
repnz
cld
jae
or
add
into
add
xor
nop
clc
repnz
cld
jae
add
mov
nop
clc
repnz
cld
jae
pop
inc
pmulhuw
in
adc
mov
xchg
ret
pop
or
add
push
nop
push
mov
leave
nop
jmp
mov
add
arpl
imul
jae
push
xchg
add
add
add
lret
push
nop
clc
repnz
cld
jae
push
push
and
pop
nop
push
mov
leave
nop
jmp
mov
jp
inc
cmp
repnz
cld
jae
push
add
repz
test
cmc
mov
nop
push
mov
leave
nop
jmp
add
repz
add
mov
nop
clc
repnz
cld
jae
dec
pop
inc
xor
xchg
jle
rol
add
nop
clc
repnz
cld
jae
push
add
movsb
pusha
pusha
js
div
nop
push
mov
leave
nop
jmp
add
add
add
add
mov
clc
repnz
cld
jae
push
inc
add
leave
add
negb
fs
clc
repnz
cld
jae
add
mov
stc
mov
nop
clc
repnz
cld
jae
xor
mov
call
nop
clc
repnz
cld
jae
add
add
enter
push
mov
leave
nop
jmp
pop
outsb
add
ljmp
inc
nop
clc
repnz
cld
jae
arpl
inc
add
and
movb
mov
xchg
ret
add
inc
add
add
clc
repnz
cld
jae
pusha
add
add
push
inc
inc
sbb
nop
clc
repnz
cld
jae
add
xchg
xor
repnz
cld
jae
add
xchg
add
arpl
push
mov
xchg
ret
add
xchg
jle
loop
push
nop
clc
repnz
cld
jae
xchg
add
mov
mov
xchg
ret
mov
test
cli
mov
add
nop
push
mov
leave
nop
jmp
add
add
mov
test
call
jae
inc
mov
nop
clc
repnz
cld
jae
add
xor
mov
nop
clc
repnz
cld
jae
pop
add
add
add
lret
inc
add
dec
lahf
push
add
pop
xchg
jp
sahf
jecxz
push
mov
xchg
ret
into
dec
add
or
push
nop
push
mov
leave
nop
jmp
outsb
into
mov
outsb
mov
mov
nop
push
mov
leave
nop
jmp
loop
mov
xor
clc
push
mov
xchg
ret
add
add
inc
add
rep
nop
push
mov
leave
nop
jmp
mov
add
addb
in
leave
nop
jmp
push
xchg
leave
nop
lldt
xor
add
sarb
inc
add
add
in
add
inc
dec
xchg
jae
add
clc
repnz
cld
jae
add
into
loop
lds
nop
clc
repnz
cld
jae
and
mov
adc
xchg
test
xchg
ret
add
add
xchg
inc
add
add
lahf
imul
or
add
nop
clc
repnz
cld
jae
add
mov
and
rorl
repnz
cld
jae
add
jmp
nop
clc
repnz
cld
jae
push
add
add
jg
addb
repnz
cld
jae
movd
int
out
nop
clc
repnz
cld
jae
jp
arpl
add
or
clc
repnz
cld
jae
add
xchg
leave
xor
addb
into
cltd
pop
push
mov
xchg
ret
add
add
add
inc
fwait
nop
clc
repnz
cld
jae
add
cmc
xchg
add
or
mov
push
mov
xchg
ret
xchg
add
pusha
add
pop
mov
clc
repnz
cld
jae
add
outsl
mov
add
add
nop
push
mov
leave
nop
jmp
push
add
push
nop
clc
repnz
cld
jae
add
std
push
push
add
stos
and
aaa
mov
nop
clc
repnz
cld
jae
and
je
push
nop
clc
repnz
cld
jae
add
xor
dec
jle
enter
test
dec
repz
nop
clc
repnz
cld
jae
add
adc
clc
repnz
cld
jae
in
add
pusha
pusha
and
test
clc
repnz
cld
jae
add
inc
add
xchg
xchg
ret
loop
nop
add
repz
clc
repnz
cld
jae
add
xchg
add
into
testl
mov
add
add
clc
nop
clc
repnz
cld
jae
add
pop
add
add
jne
nop
push
mov
leave
nop
jmp
pop
imul
pusha
xchg
pop
nop
clc
repnz
cld
jae
mov
add
stc
mov
push
mov
xchg
ret
add
xchg
pop
str
out
clc
call
nop
jmp
xchg
add
jp
mov
nop
clc
repnz
cld
jae
add
in
dec
push
iret
fistpl
push
mov
xchg
ret
add
xchg
outsb
outsb
jb
xchg
add
dec
jns
nop
clc
repnz
cld
jae
cmc
mov
inc
add
add
add
push
mov
xchg
ret
lret
add
push
nop
clc
repnz
cld
jae
add
outsb
push
add
mov
clc
repnz
cld
jae
add
dec
add
xchg
add
rol
jns
nop
push
mov
leave
nop
jmp
add
leave
and
add
add
jae
add
pop
push
lret
mov
nop
clc
repnz
cld
jae
dec
or
jle
imul
sub
call
jae
loop
dec
loop
mov
push
mov
xchg
ret
mov
outsb
add
mov
mov
nop
clc
repnz
cld
jae
push
or
add
jb
add
push
mov
xchg
ret
add
repz
jp
sbb
push
add
nop
jmp
add
add
nop
clc
repnz
cld
jae
loop
add
push
mov
nop
clc
repnz
cld
jae
add
push
inc
mov
push
mov
xchg
ret
mov
push
jle
outsl
and
icebp
nop
push
mov
leave
nop
jmp
test
add
mov
je
add
nop
clc
repnz
cld
jae
jb
add
xchg
cmp
nop
push
mov
leave
nop
jmp
mov
add
nop
push
mov
leave
nop
jmp
sldt
add
sbb
nop
cld
jae
add
repz
mov
int
pop
jae
clc
repnz
cld
jae
mov
add
ret
test
sbb
add
jae
inc
add
jecxz
test
call
jae
pop
add
lds
clc
repnz
cld
jae
cmc
verr
add
add
call
jae
dec
add
push
je
nop
clc
repnz
cld
jae
add
xor
test
clc
repnz
cld
jae
add
pop
gs
nop
clc
repnz
cld
jae
xchg
add
add
add
cli
or
clc
repnz
cld
jae
xchg
cmc
test
jg
push
dec
test
and
and
add
or
add
repnz
mov
nop
clc
repnz
cld
jae
in
add
loopne
test
shlb
mov
clc
repnz
cld
jae
add
mov
push
imul
andl
add
pop
xchg
add
repnz
cld
jae
outsb
loop
add
int
pop
jae
clc
repnz
cld
jae
add
jle
arpl
enter
in
leave
nop
jmp
mov
add
pop
push
mov
xchg
ret
add
add
mov
testl
xchg
ret
or
xchg
mov
inc
add
mov
nop
clc
repnz
cld
jae
pop
pop
lahf
clts
in
add
sar
test
nop
push
mov
leave
nop
jmp
add
pop
loop
pop
add
and
mov
xchg
ret
add
std
add
add
push
mov
aaa
mov
push
mov
xchg
ret
add
add
add
repnz
cld
jae
lret
pop
repz
add
mov
call
jae
nop
add
jns
loopne
decl
nop
cld
jae
add
mov
std
and
imul
nop
clc
repnz
cld
jae
add
add
xchg
ret
sbb
jae
add
lahf
add
push
push
mov
xchg
ret
pop
xchg
add
pop
jg
loop
out
lret
nop
clc
repnz
cld
jae
outsl
add
add
inc
inc
cmp
inc
adc
mov
nop
clc
repnz
cld
jae
add
inc
add
xchg
pop
nop
clc
repnz
cld
jae
mov
jle
add
mov
in
aam
mov
push
mov
xchg
ret
mov
mov
or
add
inc
inc
pop
add
nop
clc
repnz
cld
jae
add
jg
and
dec
push
mov
push
shrb
mov
mov
out
dec
loopne
mov
nop
push
mov
leave
nop
jmp
xchg
mov
push
mov
xchg
ret
add
loop
repz
push
mov
xchg
ret
add
add
add
push
push
mov
xchg
ret
add
add
add
add
pushf
sbb
repnz
cld
jae
add
or
nop
clc
repnz
cld
jae
loop
add
add
pusha
add
push
nop
clc
repnz
cld
jae
add
add
mov
xchg
std
add
push
mov
xchg
ret
pop
add
dec
inc
or
or
call
jae
loop
add
push
push
mov
xchg
ret
inc
add
test
test
jg
pop
pop
push
mov
xchg
ret
add
outsb
add
add
inc
sub
nop
clc
repnz
cld
jae
mov
add
loop
and
clc
repnz
cld
jae
add
inc
outsl
add
add
nop
clc
repnz
cld
jae
push
nop
add
add
mov
and
sbb
push
mov
xchg
ret
add
push
in
push
mov
nop
push
mov
leave
nop
jmp
add
mov
mov
nop
clc
repnz
cld
jae
add
test
add
mov
push
mov
xchg
ret
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
mov
leave
nop
jmp
add
dec
add
xchg
pusha
test
clc
repnz
cld
jae
add
outsl
add
pusha
nop
xchg
test
add
test
push
jg
xchg
mov
jns
or
clc
repnz
cld
jae
add
lahf
add
mov
sub
add
nop
push
mov
leave
nop
jmp
jle
add
stos
nop
clc
repnz
cld
jae
add
add
push
inc
xchg
clc
repnz
cld
jae
push
add
xchg
add
add
jo
loope
nop
clc
repnz
cld
jae
add
pop
loop
sub
nop
clc
repnz
cld
jae
mov
js
rol
call
push
mov
xchg
ret
jp
outsl
xchg
add
add
clc
repnz
cld
jae
in
add
and
jge
nop
clc
repnz
cld
jae
or
mov
nop
clc
repnz
cld
jae
pop
repz
pop
add
dec
lcall
call
jae
mov
or
call
cld
jae
add
add
push
add
test
add
nop
jmp
add
mov
pusha
push
fistpl
push
mov
xchg
ret
and
add
add
pop
test
push
mov
xchg
ret
add
add
lret
add
lea
push
mov
xchg
ret
or
into
mov
and
mov
lret
mov
leave
nop
jmp
pop
jns
pop
add
inc
ds
call
inc
add
add
push
add
mov
cmp
push
mov
leave
nop
jmp
add
add
push
repz
inc
lret
add
nop
clc
repnz
cld
jae
jg
pop
xchg
or
push
mov
xchg
ret
inc
add
add
test
dec
pusha
scas
mov
nop
clc
repnz
cld
jae
outsb
add
add
cmp
push
pushl
nop
clc
repnz
cld
jae
or
ss
into
mov
push
mov
xchg
ret
nop
mov
into
pop
je
nop
push
mov
leave
nop
jmp
mov
add
mov
nop
clc
repnz
cld
jae
add
leave
fwait
push
push
mov
xchg
ret
add
add
add
and
insb
repz
nop
clc
repnz
cld
jae
add
jg
test
pop
add
nop
clc
repnz
cld
jae
add
or
dec
push
mov
xchg
ret
add
add
inc
sbb
pop
test
jmp
add
add
add
add
add
xor
nop
clc
repnz
cld
jae
add
mov
inc
and
call
inc
add
add
inc
jg
push
dec
je
aam
addb
jg
add
nop
push
mov
leave
nop
jmp
in
pop
orl
stos
out
call
jae
add
scas
mov
nop
clc
repnz
cld
jae
mov
gs
nop
push
mov
leave
nop
jmp
mov
int
lret
nop
clc
repnz
cld
jae
add
jle
loop
push
notb
nop
clc
repnz
cld
jae
pop
add
add
pop
nop
clc
repnz
cld
jae
nop
outsb
loop
push
add
push
stos
pusha
nop
clc
repnz
cld
jae
into
mov
push
add
inc
mov
adc
jae
in
add
or
push
nop
clc
repnz
cld
jae
pop
push
add
pop
add
nop
clc
repnz
cld
jae
add
mov
add
nop
clc
repnz
cld
jae
outsb
add
loop
movsl
add
nop
clc
repnz
cld
jae
arpl
add
mov
and
sbb
push
mov
xchg
ret
add
mov
add
xchg
int
nop
clc
repnz
cld
jae
loop
jg
in
xchg
imul
nop
clc
repnz
cld
jae
into
jg
add
sub
sahf
inc
add
add
mov
inc
and
nop
push
mov
leave
nop
jmp
xor
outsb
add
addb
mov
xchg
ret
add
add
jb
repz
fwait
nop
clc
repnz
cld
jae
xchg
dec
pop
mov
cmp
nop
cld
jae
pusha
inc
outsl
mov
repz
mov
nop
push
mov
leave
nop
jmp
add
repz
xchg
pushf
xor
add
nop
clc
repnz
cld
jae
dec
std
add
repnz
cld
jae
jg
add
test
add
fwait
inc
add
jg
add
add
push
jmp
les
mov
xchg
ret
add
mov
dec
push
nop
clc
repnz
cld
jae
add
leave
std
mov
mov
push
mov
xchg
ret
dec
inc
xchg
add
or
pop
push
nop
clc
repnz
cld
jae
cmc
push
add
sbb
xchg
nop
clc
repnz
cld
jae
mov
jb
push
push
mov
xchg
ret
in
push
add
add
push
add
mov
rclb
inc
add
xor
nop
leave
add
mov
loopne
pop
mov
ret
mov
xchg
ret
add
add
add
ljmp
and
movsl
jg
add
add
add
nop
clc
repnz
cld
jae
add
add
add
mov
fistpl
nop
push
mov
leave
nop
jmp
add
sti
push
nop
clc
repnz
cld
jae
std
jle
xchg
sub
fistl
nop
jmp
mov
add
jb
add
adc
addb
data16
add
push
add
add
test
out
test
nop
push
mov
leave
nop
jmp
add
outsb
addb
mov
mov
xchg
ret
add
pop
pop
in
add
add
loope
outsb
and
mov
xchg
ret
repz
or
add
adc
push
nop
clc
repnz
cld
jae
lahf
mov
add
add
xlat
add
push
mov
xchg
ret
or
add
inc
add
cli
mov
mov
push
push
mov
xchg
ret
lret
mov
pop
or
ret
mov
nop
clc
repnz
cld
jae
or
rep
nop
clc
repnz
cld
jae
inc
add
add
cs
pusha
jns
jb
add
jle
mov
xor
add
jle
mov
inc
outsl
pop
mov
push
mov
leave
nop
jmp
add
psllq
test
push
mov
xchg
ret
add
add
add
jae
add
add
push
inc
inc
out
fwait
push
nop
clc
repnz
cld
jae
inc
add
mov
nop
clc
repnz
cld
jae
xchg
or
xchg
xchg
inc
movzwl
nop
clc
repnz
cld
jae
push
add
push
lret
push
add
add
je
sub
loop
inc
add
test
pop
or
or
push
mov
xchg
ret
jg
add
add
mov
in
subl
nop
clc
repnz
cld
jae
add
mov
add
addb
mov
leave
nop
jmp
add
loop
add
jg
rol
pushl
nop
clc
repnz
cld
jae
jle
add
jb
xchg
rep
nop
clc
repnz
cld
jae
add
repz
inc
inc
in
nop
clc
repnz
cld
jae
add
add
add
jo
nop
push
mov
leave
nop
jmp
add
mov
add
jmp
push
std
mov
add
add
add
jle
nop
into
loop
shl
push
mov
xchg
ret
pop
add
in
lahf
mov
mov
stc
add
nop
jmp
pop
into
xor
add
add
nop
push
mov
leave
nop
jmp
mov
add
or
add
add
add
push
mov
xchg
ret
add
std
jg
lret
add
mov
nop
clc
repnz
cld
jae
or
xchg
rolb
mov
in
pop
push
mov
xchg
ret
leave
inc
jns
add
nop
add
mov
xchg
ret
jp
mov
push
dec
fistpl
push
mov
xchg
ret
add
leave
outsl
add
notb
nop
cld
jae
mov
mov
add
pushl
nop
clc
repnz
cld
jae
or
inc
gs
nop
push
mov
leave
nop
jmp
mov
add
add
push
nop
clc
repnz
cld
jae
mov
add
outsb
in
mov
push
mov
xchg
ret
pop
add
sldt
mov
jl
inc
add
xchg
inc
or
repz
adc
mov
cmp
ret
add
test
arpl
cmc
xchg
je
inc
inc
xor
push
mov
leave
nop
jmp
xor
xchg
add
jne
nop
clc
repnz
cld
jae
mov
loop
mov
nop
push
mov
leave
nop
jmp
in
add
mov
call
jae
loop
jle
and
nop
clc
repnz
cld
jae
add
add
push
nop
push
mov
leave
nop
jmp
xchg
inc
add
mov
nop
clc
repnz
cld
jae
add
inc
push
sbb
add
nop
clc
repnz
cld
jae
add
loope
test
call
jae
xor
test
fwait
nop
clc
repnz
cld
jae
add
or
outsb
add
inc
movzwl
nop
clc
repnz
cld
jae
jg
mov
rclb
sbbl
incl
leave
xchg
in
loop
fmuls
testl
nop
push
mov
leave
nop
jmp
cmc
add
ret
sti
nop
clc
repnz
cld
jae
add
dec
inc
add
call
jae
add
mov
cwtl
out
push
nop
clc
repnz
cld
jae
add
jle
add
insb
ficoml
pause
clc
repnz
cld
jae
add
test
inc
add
in
leave
nop
jmp
xchg
add
in
add
mov
xchg
ret
jb
add
push
pop
mov
mov
push
mov
xchg
ret
outsl
mov
xchg
mov
inc
pop
sbb
push
mov
xchg
ret
loop
inc
jb
leave
add
or
inc
add
add
add
add
or
nop
jmp
loop
add
leave
pop
std
call
nop
push
mov
leave
nop
jmp
mov
mov
jmp
in
add
add
jle
add
or
nop
push
mov
leave
nop
jmp
lret
add
dec
push
push
mov
xchg
ret
mov
add
mov
fwait
nop
push
mov
leave
nop
jmp
or
add
pop
pop
fld1
push
mov
xchg
ret
outsb
in
add
add
jno
movb
clc
repnz
cld
jae
add
add
xor
rol
and
popf
add
nop
clc
repnz
cld
jae
mov
push
inc
push
nop
clc
repnz
cld
jae
xor
nop
pop
verr
repz
push
mov
xchg
ret
inc
repz
in
cmp
nop
push
mov
leave
nop
jmp
push
add
mov
nop
clc
repnz
cld
jae
xor
pop
add
add
loop
push
push
mov
xchg
ret
add
or
outsl
add
call
jae
imul
nop
push
mov
leave
nop
jmp
std
mov
xchg
add
rol
push
and
pushl
push
mov
xchg
ret
jns
mov
jecxz
rclb
loop
inc
add
xchg
inc
mov
repz
nop
clc
repnz
cld
jae
add
jle
push
test
add
adc
push
mov
xchg
ret
jg
nop
pop
pop
add
add
ret
add
nop
push
mov
leave
nop
jmp
or
add
xor
bound
push
nop
push
mov
leave
nop
jmp
add
loop
lds
jmp
decl
lret
add
jns
add
dec
add
loopne
nop
clc
repnz
cld
jae
push
add
clc
repnz
cld
jae
pop
jle
arpl
outsl
arpl
xchg
inc
add
jg
add
jle
push
add
nop
clc
repnz
cld
jae
inc
mov
xorl
nop
clc
repnz
cld
jae
add
xor
push
push
mov
xchg
ret
add
leave
add
add
nop
clc
repnz
cld
jae
jg
add
jb
mov
sub
test
call
jae
jle
jbe
mov
nop
push
mov
leave
nop
jmp
dec
pop
in
mov
and
clc
repnz
cld
jae
add
shr
inc
jne
call
cld
jae
add
xchg
pop
add
add
loop
push
mov
xchg
ret
mov
inc
psrad
add
repnz
pusha
mov
push
nop
clc
repnz
cld
jae
add
into
into
add
jle
lea
nop
clc
repnz
cld
jae
imul
add
add
mov
nop
clc
repnz
cld
jae
xchg
add
xchg
addb
pop
push
xor
push
mov
xchg
ret
add
push
pop
pusha
in
add
icebp
stos
nop
clc
repnz
cld
jae
and
add
add
cld
or
in
leave
nop
jmp
in
mov
js
clc
repnz
cld
jae
add
add
add
nop
push
mov
leave
nop
jmp
pop
add
push
nop
clc
repnz
cld
jae
in
add
jp
outsl
or
mov
add
nop
clc
repnz
cld
jae
pop
xor
add
add
cs
nop
push
mov
leave
nop
jmp
add
mov
add
nop
clc
repnz
cld
jae
or
in
testl
and
lcall
add
or
rorl
mov
xchg
ret
mov
add
arpl
lock
add
nop
clc
repnz
cld
jae
add
pop
add
jle
add
jp
add
jmp
add
test
or
add
jns
add
clc
repnz
cld
jae
add
orl
nop
jmp
xchg
add
pop
outsl
add
in
push
fnstsw
nop
clc
repnz
cld
jae
add
test
sub
shlb
inc
inc
mov
and
cmp
mov
leave
nop
jmp
add
mov
loop
lea
push
mov
xchg
ret
add
add
movsb
inc
inc
fldl
or
and
add
loop
push
nop
push
mov
leave
nop
jmp
arpl
outsl
mov
mov
test
push
mov
leave
nop
jmp
leave
jp
rorb
and
dec
push
nop
push
mov
leave
nop
jmp
add
or
iret
pop
push
mov
xchg
ret
loop
add
add
mov
push
sbb
push
push
mov
xchg
ret
add
add
sbb
repnz
inc
add
add
add
nop
push
mov
leave
nop
jmp
inc
or
add
add
mov
mov
xchg
ret
add
xchg
add
clc
repnz
cld
jae
test
add
nop
clc
repnz
cld
jae
mov
inc
push
add
xor
nop
push
mov
leave
nop
jmp
jle
or
and
jns
call
inc
add
mov
add
orb
roll
mov
xchg
ret
test
add
add
xor
repnz
cld
jae
add
add
add
loope
add
push
add
add
in
add
cmp
jmp
mov
add
add
add
add
test
add
and
pushf
cmp
leave
nop
jmp
add
in
pop
mov
nop
clc
repnz
cld
jae
push
jle
dec
add
out
push
nop
clc
repnz
cld
jae
cmc
and
pusha
pusha
xor
nop
cld
jae
xchg
into
inc
add
add
add
nop
cld
jae
add
jns
add
or
loopne
mov
and
add
nop
clc
repnz
cld
jae
add
add
or
and
loopne
daa
push
nop
clc
repnz
cld
jae
pusha
add
inc
lahf
std
add
add
add
nop
clc
repnz
cld
jae
inc
jg
aaa
push
nop
clc
repnz
cld
jae
add
push
add
add
xor
push
mov
xchg
ret
add
mov
add
loop
loop
rep
nop
clc
repnz
cld
jae
pop
add
xchg
test
xchg
dec
push
nop
clc
repnz
cld
jae
push
add
add
stos
add
xchg
add
nop
clc
repnz
cld
jae
lret
dec
or
pop
add
clc
repnz
cld
jae
pop
add
add
add
jmp
jg
nop
clc
repnz
cld
jae
pop
jns
push
push
mov
addb
nop
cld
jae
add
pop
add
add
add
fwait
mov
nop
clc
repnz
cld
jae
add
add
mov
nop
clc
repnz
cld
jae
add
add
push
push
mov
xchg
ret
add
lahf
arpl
pop
or
nop
push
mov
leave
nop
jmp
add
nop
add
add
inc
mov
add
jb
add
or
push
sbb
int
dec
push
nop
push
mov
leave
nop
jmp
add
add
push
icebp
push
nop
push
mov
leave
nop
jmp
add
inc
and
add
call
sub
mov
leave
nop
jmp
imul
add
leave
jmp
jb
add
add
test
add
jle
mov
nop
clc
repnz
cld
jae
dec
add
add
and
add
jle
nop
clc
repnz
cld
jae
add
mov
add
xchg
nop
clc
repnz
cld
jae
pop
add
add
add
fists
clc
repnz
cld
jae
test
xchg
add
ja
outsl
loopne
mov
xchg
ret
test
cmc
add
pusha
dec
pop
call
nop
clc
repnz
cld
jae
into
add
bound
and
push
mov
leave
nop
jmp
add
fildl
dec
cmp
clc
repnz
cld
jae
lahf
arpl
add
push
mov
dec
sub
repnz
cld
jae
add
jns
jle
add
pop
and
push
mov
leave
nop
jmp
lret
outsb
mov
test
jno
fld1
nop
clc
repnz
cld
jae
add
xor
call
leave
nop
jmp
add
or
jae
orb
repnz
cld
jae
add
pusha
mov
nop
clc
repnz
cld
jae
add
xchg
mov
push
nop
clc
repnz
cld
jae
add
in
dec
add
adc
ret
nop
push
mov
leave
nop
jmp
arpl
add
xor
mov
xchg
ret
add
add
or
ljmp
inc
add
mov
cmc
add
adc
add
inc
into
in
add
loop
add
add
nop
push
mov
leave
nop
jmp
repz
or
js
mov
nop
clc
repnz
cld
jae
lahf
add
pop
dec
mov
and
add
dec
nop
push
mov
leave
nop
jmp
add
xchg
add
insl
pop
push
mov
xchg
ret
add
add
add
repz
mov
mov
clc
repnz
cld
jae
or
add
mov
nop
clc
repnz
cld
jae
xchg
arpl
scas
mov
nop
push
mov
leave
nop
jmp
mov
add
mov
nop
clc
repnz
cld
jae
loop
mov
add
inc
pop
nop
clc
repnz
cld
jae
lret
into
xchg
pop
add
xor
push
push
mov
xchg
ret
mov
add
mov
push
js
clc
repnz
cld
jae
add
add
aam
sbb
repnz
cld
jae
add
test
add
jno
nop
clc
repnz
cld
jae
xchg
xor
mov
mov
mov
xchg
ret
add
inc
add
xor
clc
repnz
cld
jae
in
pop
leave
or
dec
mov
nop
clc
repnz
cld
jae
outsl
xchg
inc
test
add
nop
cld
jae
add
add
adc
in
leave
nop
jmp
add
add
add
jmp
jp
nop
push
mov
leave
nop
jmp
add
inc
or
rclb
adc
add
lahf
add
outsb
mov
mov
push
add
push
mov
xchg
ret
push
add
add
mov
mov
nop
clc
repnz
cld
jae
add
repz
add
push
pop
jl
nop
clc
repnz
cld
jae
add
add
push
nop
push
mov
leave
nop
jmp
add
add
nop
clc
repnz
cld
jae
add
or
rol
xor
nop
clc
repnz
cld
jae
or
jg
add
nop
clc
repnz
cld
jae
lret
xchg
or
pavgusb
mov
cmp
ret
mov
imul
add
mov
nop
clc
repnz
cld
jae
add
test
add
add
std
dec
nop
push
mov
leave
nop
jmp
test
add
xchg
add
inc
jne
nop
clc
repnz
cld
jae
add
push
loop
in
pop
ds
nop
clc
repnz
cld
jae
ltr
add
clc
repnz
cld
jae
std
mov
add
psrad
add
nop
push
mov
leave
nop
jmp
dec
add
jle
inc
jle
add
nop
clc
repnz
cld
jae
add
in
or
cmpsb
loopne
out
nop
clc
repnz
cld
jae
dec
add
add
xchg
add
nop
clc
repnz
cld
jae
add
repz
adc
pop
push
mov
xchg
ret
push
or
add
add
inc
xchg
push
push
push
mov
xchg
ret
add
add
add
inc
xor
clc
repnz
cld
jae
add
dec
add
xchg
add
xchg
nop
out
add
sarb
add
jae
cmc
inc
add
push
mov
leave
nop
jmp
add
pop
inc
mov
xor
clc
repnz
cld
jae
add
xchg
add
and
shl
push
pop
xchg
add
pop
add
add
add
add
ret
nop
clc
repnz
cld
jae
str
mov
nop
push
mov
leave
nop
jmp
xchg
add
add
mov
andb
aas
push
push
mov
xchg
ret
mov
add
add
fld1
push
mov
xchg
ret
push
add
xchg
mov
add
shlb
cwtl
pop
pop
nop
push
mov
leave
nop
jmp
into
add
add
inc
lret
add
loopne
cwtl
sahf
imul
nop
cld
jae
add
std
outsl
xchg
pop
pop
xor
push
mov
xchg
ret
xchg
add
in
add
add
je
nop
clc
repnz
cld
jae
add
addl
jnp
add
std
cmc
inc
mov
nop
clc
repnz
cld
jae
mov
into
or
jne
nop
clc
repnz
cld
jae
dec
jb
dec
daa
add
push
mov
xchg
ret
loop
outsb
add
inc
push
dec
mov
nop
clc
repnz
cld
jae
or
push
out
jne
nop
push
mov
leave
nop
jmp
mov
xorl
nop
push
mov
leave
nop
jmp
add
rorl
addl
cmp
ret
add
push
add
add
call
nop
clc
repnz
cld
jae
xchg
add
add
rclb
jae
push
dec
test
inc
xchg
mov
mov
push
nop
push
mov
leave
nop
jmp
add
inc
add
add
shr
nop
push
mov
leave
nop
jmp
push
inc
leave
mov
add
push
mov
xchg
ret
arpl
mov
inc
mov
pop
roll
pause
clc
repnz
cld
jae
push
sete
shrl
sbbl
add
add
mov
repz
mov
xchg
ret
pop
add
mov
or
nop
clc
repnz
cld
jae
add
test
xchg
int3
cmp
mov
xchg
ret
add
cmc
into
add
test
cld
jae
add
add
add
jnp
inc
in
mov
xchg
ret
add
xchg
mov
in
pop
push
push
mov
xchg
ret
add
add
add
add
push
dec
xor
clc
repnz
cld
jae
add
rep
push
dec
jp
pusha
pusha
sub
shl
ja
push
mov
xchg
ret
xor
into
add
repnz
cld
jae
jp
pusha
add
jns
jp
add
nop
clc
repnz
cld
jae
and
test
pop
add
pusha
push
mov
xchg
ret
add
add
inc
add
mov
nop
clc
repnz
cld
jae
imul
imul
fldt
inc
xor
nop
clc
repnz
cld
jae
add
jle
add
xorb
mov
nop
clc
repnz
cld
jae
jb
add
add
xor
pop
push
mov
xchg
ret
add
push
mov
pop
inc
add
pop
adc
clc
repnz
cld
jae
add
add
and
add
adc
xchg
call
jae
add
into
repnz
cld
jae
mov
xchg
mov
mov
in
call
jae
xchg
add
loopne
cmp
push
mov
leave
nop
jmp
repz
add
mov
nop
push
mov
leave
nop
jmp
pop
add
mov
adc
jmp
cmp
ret
xchg
add
add
add
mov
nop
clc
repnz
cld
jae
pop
add
scas
push
nop
clc
repnz
cld
jae
xor
add
add
nop
clc
repnz
cld
jae
add
jp
pop
add
arpl
fs
data16
mov
inc
sub
sbb
cmp
ret
xor
outsb
add
add
dec
pusha
nop
clc
repnz
cld
jae
outsl
add
add
jecxz
jmp
nop
cld
jae
inc
mov
push
fwait
nop
clc
repnz
cld
jae
add
imul
inc
in
xor
incl
add
add
add
and
outsb
add
xchg
push
rol
inc
push
push
mov
xchg
ret
add
add
popa
cmpl
nop
push
mov
leave
nop
jmp
in
into
add
js
add
nop
push
mov
leave
nop
jmp
add
push
push
jp
sbb
clc
repnz
cld
jae
pusha
jns
add
add
dec
jne
nop
clc
repnz
cld
jae
add
xor
xor
mov
nop
clc
repnz
cld
jae
xor
mov
cmp
cmpsl
cmpsl
add
stc
mov
ret
add
add
repz
movsb
inc
inc
sub
loop
jp
dec
andb
cwtl
inc
sub
imul
dec
test
adc
js
jo
sub
push
push
scas
sbb
add
scas
in
mov
rorb
movsl
imulb
jp
subl
adc
add
mov
inc
dec
mov
dec
ds
sub
shlb
sbb
cmp
pop
cmpl
push
addb
loopne
inc
push
rcll
sub
scas
inc
inc
bound
inc
into
xor
sub
add
pusha
pusha
je
arpl
jmp
daa
adc
push
loopne
sub
shlb
lret
cmp
fwait
insl
xchg
gs
fwait
les
push
inc
inc
out
pop
in
int
add
lods
addb
cwtl
xchg
mov
scas
inc
inc
mov
aas
and
test
loopne
lods
mov
addb
js
ret
xchg
xlat
jbe
mov
cli
mov
pop
loope
dec
and
nop
out
push
xchg
sub
mov
lret
jnp
xchg
cld
xchg
add
out
sbb
jbe
dec
nop
repz
sti
cmp
cmc
in
pmaxsw
and
mov
lock
cmp
and
jbe
inc
pushf
cmp
and
loopne
cld
mov
movsl
dec
push
fs
addb
and
mov
mov
and
xchg
sbb
jb
push
loope
or
loopne
ffreep
cmp
add
jae
xchg
mov
cmp
inc
inc
jo
xchg
cmp
cmp
xchg
cmp
xor
clc
das
cmp
rorb
inc
mov
cmc
cmpsb
add
mov
inc
inc
jmp
shl
rol
addb
ss
lds
push
or
mov
rol
jle
jmp
sub
and
mov
and
out
mov
repz
lret
mov
xchg
jmp
rcrl
jl
xchg
fsub
pusha
cltd
or
mov
mov
repnz
and
std
cltd
fmuls
add
lcall
mov
xor
jnp
mov
test
inc
scas
sbb
loopne
insl
cmc
xor
pusha
cmp
xchg
add
loopne
addb
mov
scas
imul
cli
inc
rol
les
loop
out
dec
mov
dec
icebp
pop
mov
and
inc
inc
mov
pusha
pusha
mov
cmp
and
pop
cmp
inc
jecxz
lcall
mov
dec
addb
std
das
pushf
imul
dec
clc
ljmp
test
adc
push
mov
xchg
shlb
inc
inc
or
mov
inc
inc
pop
repz
cli
jecxz
add
repz
add
loopne
jno
adc
inc
push
mov
ss
rol
int3
cmp
shl
insl
inc
cmpsl
imul
cmp
sbb
dec
test
and
pop
ds
adc
cli
outsb
mov
adc
push
addb
rol
adc
fnstcw
push
popf
lods
pop
inc
pop
push
push
rol
adc
add
test
xchg
jno
cli
cmp
sti
dec
jo
mov
shrl
pusha
push
mov
jo
lods
addb
pusha
shrb
in
inc
sbb
fwait
jge
lds
add
inc
jp
xchg
pop
dec
and
sbbb
popf
dec
xchg
pusha
aas
jg
shrb
addb
mov
sbb
movsl
adc
jns
cmp
jae
and
rol
movsl
cli
into
or
stos
ljmp
cmp
loopne
hlt
aaa
rcl
test
jmp
test
mov
mov
mov
and
add
das
adc
pop
scas
mov
out
xchg
push
aaa
push
pop
adc
mov
loopne
fisttpll
jno
mov
hlt
repz
adc
inc
inc
xchg
adc
addb
lahf
in
fcomip
dec
xor
out
mov
jge
lods
hlt
jnp
loop
insl
inc
repnz
call
js
aad
inc
sbb
pop
push
mov
xchg
jle
outsb
mov
stos
and
popa
add
adc
cld
xchg
bsr
pusha
lcall
mov
inc
lcall
loopne
xor
inc
addr16
inc
inc
into
jae
inc
js
clc
jg
inc
inc
stos
fwait
into
cmp
adc
xor
lods
sub
and
aas
stos
mov
push
cmp
cld
inc
ret
rol
mov
mov
addb
popf
rorb
stos
addb
push
jno
in
inc
xchg
push
rolb
mov
dec
daa
mov
push
sub
sbb
add
lret
cmp
mov
push
cs
pusha
jge
movb
mov
jmp
loopne
xchg
xchg
xchg
pop
and
pusha
xchg
inc
icebp
sub
or
sar
addb
int
jne
xor
push
subl
adcb
imul
push
push
inc
inc
pop
adc
and
adc
call
and
sub
imulb
mov
in
or
mov
int3
shll
lea
ljmp
enter
cmp
adc
fs
scas
and
jl
mull
add
sub
fdiv
repnz
mov
pop
out
inc
pushf
mov
mov
inc
sub
dec
lret
adc
call
inc
jecxz
or
loopne
cld
jns
cmp
dec
jne
xor
and
ss
xor
and
out
mov
mov
rcrb
lret
xchg
adc
das
pop
mov
or
rcll
and
popa
xchg
adc
or
pop
aam
rcr
in
add
jmp
addb
lret
mov
jb
pop
xor
dec
adc
xchg
bts
js
test
iret
add
add
add
mov
lds
mov
sarb
and
add
pusha
xchg
addb
fnsave
lahf
xor
fistps
and
xlat
mov
jne
mov
lods
inc
inc
gs
jae
daa
xor
mov
add
and
sub
xor
shl
test
add
pop
in
stos
loopne
sub
in
mov
gs
hlt
leave
mov
cmp
xor
add
mov
sub
and
test
loopne
test
mov
xchg
sbb
or
and
rclb
rcl
add
pusha
pusha
mov
loopne
cmpsl
add
xor
test
fs
icebp
clc
push
loopne
xchg
aad
ror
or
xor
sahf
push
add
xor
testl
loopne
inc
push
and
ds
aas
mov
rorb
add
and
jmp
inc
xchg
jp
lods
or
and
fnstcw
clc
mov
cltd
repnz
movb
push
mov
pop
repnz
aas
pop
and
add
adc
outsb
js
imul
sarb
dec
cmp
jnp
jge
out
aam
fsubs
jmp
and
and
add
mov
pop
pushf
jne
rol
fidivl
jecxz
out
mov
ljmp
mov
adc
lea
shll
mov
mov
push
sub
mov
out
pop
sti
xor
cmpsl
xchg
incb
sahf
push
push
push
mov
aaa
js
lds
sbb
adc
es
inc
sbb
aad
dec
out
mov
fisttpll
cli
pushl
mov
hlt
add
jecxz
arpl
cltd
lret
inc
inc
inc
dec
popf
testb
ret
xor
mov
xchg
cmp
adc
xchg
in
loopne
inc
inc
fwait
mov
and
add
rol
cwtl
cmpsl
addb
inc
add
and
andb
loopne
push
test
inc
mov
inc
push
and
push
shll
and
mov
pop
xor
jmp
sarb
dec
xchg
stc
inc
xor
and
int
and
fwait
pop
pusha
shlb
and
xor
and
mov
sar
sub
push
sub
push
lds
insl
fimuls
loopne
insl
test
inc
outsb
pop
sbb
test
icebp
push
shlb
pusha
shll
jno
enter
fmuls
loopne
enter
push
sub
add
lock
fidivs
and
inc
xchg
inc
mov
test
or
xchg
jmp
mov
sub
das
xchg
sbb
add
mov
dec
sbb
push
xchg
sti
movsl
pusha
aad
mov
clc
int
dec
rcrl
aaa
and
fdivr
out
jle
data16
mov
inc
inc
xchg
fdivrl
pop
mov
fldt
pop
insl
inc
add
lock
jno
lds
stos
addb
jecxz
fmull
repz
and
pop
insb
push
mov
mov
inc
mov
pusha
pusha
pop
add
jg
loopne
stc
add
mov
and
arpl
mull
sar
scas
pusha
pusha
or
xorb
addb
out
cmp
dec
push
add
cld
cmp
and
mov
leave
gs
push
loopne
andb
fwait
jno
dec
or
pop
sti
bound
pop
xchg
fisttps
cmp
mov
stc
inc
xchg
ljmp
lods
mov
xor
int
sti
xor
addb
aaa
outsl
jns
sub
loopne
inc
inc
mov
pop
sbbl
inc
bound
inc
inc
es
pusha
push
mov
addb
sbb
test
and
push
int3
aad
std
std
arpl
jl
lcall
xchg
jbe
clc
pop
push
mov
pop
pop
imul
shrl
fs
pushf
out
sub
shlb
loopne
jecxz
cmp
add
dec
jae
adc
fwait
stc
jp
fistpll
lret
and
jne
pusha
pusha
adc
lret
jo
adc
addb
mov
mov
test
and
pop
aam
les
pusha
cmp
incl
mov
xor
icebp
add
cmpb
cltd
inc
nop
ljmp
sub
loope
xchg
ret
mov
lahf
or
pop
in
or
add
push
movsl
nop
addb
pop
cmp
mov
scas
push
loopne
adc
fs
pop
cmp
aaa
int3
jno
jp
or
xchg
dec
mov
adc
cmp
push
popa
mov
jp
inc
inc
loopne
std
xor
dec
fists
jbe
in
pop
jne
cwtl
inc
test
xchg
ja
loopne
xchg
mov
and
adc
xor
stc
push
leave
adc
mov
ret
or
push
movl
adc
ret
rol
mov
push
xchg
aam
adc
mov
adc
mov
pusha
enter
out
sbb
in
movsb
rol
dec
and
add
cltd
pushf
icebp
loop
in
jl
sub
fucomi
xor
subl
mov
fwait
cmp
js
sub
iret
jmp
sbb
loopne
push
inc
inc
fldt
pop
pusha
add
sbb
mov
enter
lahf
push
mov
mov
rcr
or
mov
fdivr
sub
xorb
fnsave
das
fiaddl
sub
mov
mov
pusha
js
shr
rol
ficoms
lcall
or
and
xchg
popf
imul
jecxz
cli
jo
out
inc
jle
or
shl
xchg
addb
dec
mov
ja
and
push
fiadds
loopne
rorl
or
xchg
mov
xor
repz
mov
inc
dec
push
rol
insb
inc
xor
sub
pusha
jp
xor
cmp
xchg
repz
addb
movsb
mov
aam
cmp
in
js
shr
fiadds
inc
inc
dec
dec
out
pusha
pusha
and
or
in
movsl
mov
cld
pusha
test
cmp
in
fs
out
lahf
adc
and
arpl
xor
add
mov
addb
dec
fisttps
dec
lods
mov
add
testb
add
loopne
loopne
push
es
aad
fwait
pop
lea
add
je
dec
cmp
clc
xor
out
pop
shll
daa
mov
add
out
ss
fists
cmp
pushf
fisubrl
imul
jbe
loopne
pop
into
cmp
jl
pop
push
push
enter
mov
adcb
fcoms
arpl
mov
xchg
stos
and
push
mov
divb
sbb
mov
mov
inc
scas
jb
push
inc
dec
std
adc
leave
dec
jmp
insl
out
pusha
pusha
xlat
out
xchg
and
cltd
or
pusha
push
adc
mov
fsts
mov
rcrb
iret
call
fmull
mov
js
scas
pop
lret
cwtl
dec
bound
pusha
pusha
or
orb
inc
mov
bound
mov
imul
outsl
dec
jmp
sub
jo
js
call
pop
pushf
test
adc
and
and
pushf
jb
mov
dec
sahf
pushl
dec
cli
pop
sahf
std
nop
inc
xchg
sbb
jbe
inc
inc
sbb
xor
cltd
mov
add
mov
pusha
pusha
cmp
pusha
pusha
js
and
andb
inc
pop
addb
pop
or
xchg
lock
jae
and
mov
mov
sbb
cmpsb
loopne
and
test
rcrb
pop
sahf
orl
arpl
loopne
and
lds
dec
add
or
loopne
cmpl
push
cmpl
sbb
and
mov
or
mov
mov
and
inc
cmpl
addb
xchg
rcll
jp
and
and
xchg
ror
jmp
fsubrl
rol
sub
mov
rcll
orl
pusha
xchg
jne
xor
popf
scas
lea
jo
mov
push
pusha
pusha
mov
out
int3
pop
jne
jne
jbe
mov
loopne
mov
add
mov
rolb
mov
daa
popf
adc
imul
mov
clc
dec
push
inc
cmpsb
pusha
pusha
std
dec
lret
mov
pop
mov
test
pop
sub
mov
loopne
data16
in
mov
out
pop
fldl
mov
xor
add
shll
imul
pushw
loopne
dec
test
inc
ret
mov
mov
vmwrite
cmp
rolb
jg
daa
dec
pop
or
and
aad
lcall
inc
adc
xchg
in
cmpl
xor
out
and
fucom
sub
into
sub
add
push
icebp
adc
xchg
jne
cmp
sub
loopne
mov
inc
mov
lret
inc
repz
fcomp
jle
insl
adc
addb
rol
cmp
sub
int
cmp
inc
lcall
cmp
add
mov
dec
adc
arpl
xchg
aam
out
push
xor
add
lods
pop
mov
mov
add
mov
inc
inc
mov
cwtl
dec
cmp
notl
add
ret
mov
add
cmp
jae
test
and
out
xchg
cmp
dec
xor
mov
mov
fs
lock
das
lcall
lret
ss
mov
jo
jl
outsl
cltd
fistpl
jns
shl
add
rol
sub
inc
xor
lcall
arpl
cmpsb
mov
add
and
or
pusha
pusha
outsb
mov
in
mov
imul
jnp
mov
and
add
not
add
int3
fnstsw
push
push
sub
jns
adc
add
fwait
loopne
insb
out
mov
loopne
mov
shlb
add
test
pop
je
cmc
lret
popf
adc
xchg
loopne
xchg
lods
out
imul
pop
mov
loopne
jae
mov
loop
in
add
pusha
dec
out
jo
lea
mov
das
mov
loopne
jmp
jmp
pushf
stos
loopne
pop
out
inc
push
mov
arpl
sub
and
add
das
jmp
movsl
xor
lock
or
sbb
adc
xor
ror
ja
jo
inc
inc
mov
push
jae
mov
push
loopne
add
shll
sub
cs
pusha
pop
xchg
lds
or
mov
hlt
adc
inc
sbb
insb
loop
and
inc
inc
xchg
mov
mov
aaa
ljmp
or
push
rol
in
notl
mov
jbe
pushf
roll
mov
mov
icebp
sub
inc
cltd
imul
add
cmp
rol
loopne
loop
ficoms
js
mov
mov
lret
sbb
test
push
pusha
pusha
mov
sarb
xchg
fistpl
pop
out
mov
repz
addl
sub
inc
inc
mov
add
inc
mov
js
and
pusha
add
pop
out
mov
xor
or
fbstp
mov
add
adc
pusha
scas
loopne,pn
lea
sub
xor
data16
rclb
inc
jmp
xor
add
sub
orb
cmp
and
and
out
bnd
adc
dec
into
add
push
jne
push
and
repz
push
dec
in
pop
sbb
add
pusha
mov
push
cmp
enter
add
imul
shlb
push
or
adc
or
rclb
add
pusha
icebp
mov
gs
pop
daa
stc
mov
adc
adc
add
addb
add
xchg
shl
push
das
fdivs
and
cmpb
sbb
dec
out
hlt
fsubr
mov
inc
jmp
pop
ret
adc
decl
in
jecxz
sbb
cmpsb
pusha
pusha
outsb
mov
jmp
out
and
mov
add
add
cwtl
inc
dec
inc
imul
movsb
add
repnz
pop
push
pop
or
and
pop
aas
clc
mov
call
std
or
je
loopne
fs
mov
dec
dec
je
mov
loopne
test
add
xchg
pop
add
inc
inc
data16
inc
es
pop
mov
in
xor
fstp
outsb
dec
test
or
push
and
cmc
and
loop
sub
pusha
pusha
pop
and
adc
push
in
or
mov
and
inc
pop
fcoml
jno
adc
xchg
loop
int3
jbe
sbb
pop
ljmp
inc
jmp
shlb
pop
mov
insb
jl
in
jge
stos
jnp
adc
repnz
dec
divb
lea
lds
jp
loop
push
insl
int3
mov
mov
lcall
insl
in
jne
pop
xor
flds
mov
and
rcll
dec
push
arpl
push
enter
inc
andb
stos
and
ds
jg
add
sbb
pop
mov
shr
mov
cmp
add
cmp
xchg
in
test
loopne
pop
fnstenv
inc
push
ret
sti
pop
mov
movsb
and
cmp
mov
orl
arpl
sbb
dec
cmp
pushf
sub
sti
mov
jb
out
xor
and
adc
pop
clc
fwait
andb
jns
dec
cmp
jl
cmp
and
sbb
bnd
fstp
cwtl
adc
cmpb
pusha
mov
lea
lock
fs
icebp
das
mov
js
push
add
and
incb
and
and
adc
add
mov
push
jmp
and
shlb
pusha
pusha
add
mov
pusha
pusha
push
and
cmpb
out
xchg
lcall
cmpl
inc
add
cs
pusha
pop
push
and
das
sti
jns
lret
je
clc
daa
stc
mov
mov
iret
xchg
cmp
aas
cmp
xchg
jg
test
pusha
dec
xchg
sub
loopne
cmp
pusha
pusha
push
cmp
shrb
or
mov
cltd
inc
in
insb
push
jp
addb
pusha
idivb
loopne
sarl
ficomps
popf
cmp
testb
loope
push
in
lcall
mov
inc
mov
xor
leave
out
repz
test
repnz
and
xor
push
dec
inc
out
js
icebp
scas
cmp
inc
sub
inc
mov
ror
insb
loopne
out
jecxz
add
jb
mov
mov
addb
lahf
loope
and
loopne
fildll
ret
mov
push
fildll
pop
enter
movsb
addb
xor
add
sbb
mov
xchg
push
add
sbb
cmp
aas
insl
outsb
sbb
jne
or
stc
cs
inc
inc
js
popf
push
sbb
inc
daa
out
pop
dec
cmp
loopne
jle
sub
mov
jp
dec
in
orl
pusha
mov
out
mov
rol
add
loopne
jl
add
push
pusha
pusha
shr
xchg
loope
jno
test
popf
pop
inc
add
insb
sahf
stos
addb
dec
adc
push
inc
inc
cmp
inc
pop
xchg
xchg
xor
imul
rol
imul
xchg
sbb
cwtl
ljmp
scas
inc
inc
aad
aam
and
sub
ret
inc
fs
cltd
sbb
aas
jg
dec
hlt
jle
dec
je
mov
inc
inc
jne
push
repnz
inc
inc
jb
popf
sub
and
dec
lods
add
add
fdivr
inc
cmp
in
pusha
pusha
out
mov
js
fldt
lds
ss
inc
stos
inc
inc
mov
fisubrl
in
cmp
mov
and
cli
outsl
jp
cmc
test
inc
jmp
ret
outsb
pop
setbe
out
mov
pusha
aas
cmp
jl
out
shrb
loopne
or
out
adc
jle
jnp
push
sbb
pushl
push
popa
inc
fsts
xlat
mov
mov
mov
cmp
pop
xor
pop
pop
xor
pusha
pusha
jnp
xchg
lock
inc
mov
and
daa
jno
mov
xor
sub
popa
movsl
push
pusha
pusha
hlt
ror
cmp
mov
rol
push
mov
add
push
fidivrs
pop
mov
push
scas
jbe
loopne
adc
jae
shr
pop
cltd
sub
and
push
and
mov
sahf
xor
add
jl
std
pop
jp
cbtw
pop
inc
mov
and
add
cli
in
sbb
imul
cmp
pusha
pusha
andl
mov
movsb
and
jo
sbb
cli
adc
push
inc
inc
cs
mov
adc
add
adc
xor
xchg
stos
inc
inc
add
std
pop
bound
dec
loopne
mov
and
dec
test
pusha
pusha
cltd
bound
fidivs
cltd
in
data16
mov
test
add
dec
es
loopne
mulb
inc
or
rcr
xchg
sbb
dec
jnp
inc
inc
lds
inc
inc
int3
ficoms
loopne
sahf
and
cmpb
xchg
mov
adc
mov
loopne
pusha
pusha
in
sub
sbb
sbb
addb
and
jp
xchg
mov
inc
inc
popa
shll
rcll
sub
loopne
ficoms
jno
movsb
mov
sbb
mov
scas
ret
outsb
mov
in
and
imulb
pusha
pusha
imul
sbbl
lock
mov
and
lret
add
mov
fnstcw
sub
aam
dec
ret
rol
xchg
std
fyl2x
stos
push
add
into
mov
loopne
in
jnp
rol
push
xchg
push
or
add
rcrb
stos
rol
ss
mov
mov
notl
mov
mov
pusha
inc
add
and
add
xchg
push
js
xlat
push
push
fwait
repnz
sbb
xlat
and
adc
xlat
mov
mov
xorb
lds
js
mov
pushf
xor
mov
fsubrs
shl
push
test
push
and
aas
imul
pop
daa
mov
sub
and
aad
inc
out
dec
pop
pop
push
xor
ja
ret
jno
dec
sahf
loope
mov
idivl
dec
push
je
fcomp
jp
fmul
js
lret
xchg
shlb
mov
add
push
stos
dec
xor
out
and
pop
inc
das
fcoml
add
lock
inc
mov
lods
addb
fwait
push
mov
or
outsl
test
mov
pusha
pusha
daa
stos
sub
xor
into
in
sub
pushf
mul
mov
mov
andb
loopne
or
dec
adc
jge
nop
xlat
pop
addb
outsb
adc
mov
rclb
rolb
lahf
popa
cmc
pop
adc
add
add
int3
addb
pop
addr16
dec
push
rol
pop
pop
test
and
movsl
sbb
jp
ja
mov
adc
mov
mov
or
pop
add
mov
loop
ret
loop
xchg
add
repz
pop
movsl
or
add
push
repnz
or
rol
ret
and
rolb
and
mov
pop
or
insl
and
xchg
lods
and
nop
faddp
push
push
aad
mov
sbb
test
loopne
aaa
popf
cld
pop
cltd
movsl
push
test
jmp
jecxz
hlt
push
loopne
nop
push
jae
cs
inc
jae
adc
enter
and
inc
xchg
xor
pop
cmc
inc
sub
inc
inc
inc
dec
xchg
xchg
pop
loop
das
and
loopne
xor
inc
push
bound
inc
addl
push
aad
push
lcall
aam
scas
gs
xlat
jecxz
adc
mov
sub
in
xor
pop
push
and
cmc
pushf
and
and
pop
pushf
and
xchg
pop
out
inc
push
jbe
fmul
lea
pop
out
arpl
push
lcall
pop
ljmp
int
ljmp
clc
and
outsb
fwait
mov
inc
lret
fisubl
test
adcb
pop
stos
addb
test
lret
rclb
and
add
outsl
pop
shll
mov
adc
rolb
into
jecxz
shrb
daa
pop
insb
mov
mul
add
test
pusha
lock
add
rcrb
mov
lahf
mov
adc
pop
and
rol
and
inc
sub
mov
and
pop
idivl
aad
dec
inc
dec
xor
test
andb
mov
pusha
ds
dec
xor
xorl
mov
rcrl
xor
les
jns
arpl
pusha
xor
mov
xor
mov
std
sbb
jle
scas
rol
add
cmp
jmp
cltd
mov
dec
sbb
aaa
adc
ja
jmp
cmpsb
pusha
pusha
mov
loopne
loopne
call
loopne
and
outsl
and
rolb
sar
and
loopne
xor
lds
jne
mov
jp
pop
inc
or
add
aas
push
test
inc
and
mov
cmp
rcll
mov
loop
stos
mov
sub
add
cwtl
leave
add
mov
addb
movsl
mov
sbb
fs
jge
insb
push
dec
mov
rcl
mov
les
xor
mov
cmp
cmp
sub
and
mov
out
sub
aad
mov
mov
pusha
out
shl
shll
shlb
sbb
sbb
xor
mov
inc
mov
shlb
pop
adc
dec
cmp
xchg
daa
in
ds
mov
pop
and
insl
sbb
mov
mov
and
cmp
sub
dec
pop
dec
inc
movb
inc
mov
mov
and
add
inc
imul
jns
pusha
pusha
loopne
out
mov
addb
push
loopne
incb
rol
jb
jnp
dec
cmp
cmp
xchg
rcr
add
nop
jno
jecxz
int3
push
lods
lods
cmp
inc
inc
mov
jmp
rol
push
insb
pop
js
or
xor
jbe
adc
mov
or
loopne
and
add
inc
test
shrb
mov
addb
mov
pushf
jle
lcall
in
bound
push
xchg
adc
ds
loopne
add
xchg
or
orb
aas
sub
add
ja
inc
sub
mov
rclb
loopne
fnstsw
sub
and
rolb
pusha
pusha
out
mov
mov
fs
pop
mov
ror
mov
addb
inc
fldenv
pop
jle
cltd
sbb
addb
mov
jle
add
int
mov
insl
aaa
mov
sahf
lock
cmp
dec
mull
out
pop
sub
and
pop
int
dec
repz
mov
mov
mov
xorl
cs
xlat
jnp
mov
or
outsb
stos
mov
add
loopne
int
repnz
push
cmp
sub
dec
and
and
insb
mov
shll
mov
repnz
jg
pusha
pusha
add
cmp
jmp
cwtl
push
outsb
in
sbb
sbb
mov
sti
out
pushf
cmpsl
loope
xor
lods
mov
loop
cmp
lock
loopne
or
pop
cvtpi2ps
mov
cmpl
leave
inc
out
xor
shlb
lods
mov
cmp
add
xchg
adc
dec
aad
mov
pop
aaa
pop
jp
sub
js
inc
inc
lret
les
nop
add
imul
sbb
and
or
inc
inc
mov
enter
cs
cmp
addr16
jne
pop
mov
cld
sahf
jno
ja
jg
jns
shrb
ljmp
pusha
xor
inc
lds
inc
inc
jbe
repz
mov
ret
or
and
mov
cwtl
mov
in
loopne
out
dec
push
mov
xchg
push
movsb
mov
pop
out
fiadds
add
lock
mov
inc
outsb
cmp
rol
mov
inc
mov
loopne
out
ss
stc
pop
rol
leave
mov
and
add
cmpb
and
mov
mov
dec
int3
dec
or
mov
mov
jg
andb
cmp
xor
xor
inc
xchg
and
shr
je
sbb
xchg
jo
and
inc
lahf
adc
addb
roll
jecxz
andb
rol
mov
sti
xchg
or
add
inc
jmp
lods
rol
inc
mov
mov
xlat
xchg
loopne
shl
inc
stc
enter
push
push
sbb
dec
mov
gs
pop
xchg
xchg
hlt
je
mov
leave
into
in
shlb
push
add
pusha
jecxz
inc
add
inc
push
ja
aaa
in
jge
ret
arpl
sbb
jne
jbe
mov
sub
dec
and
add
pusha
pusha
pushf
or
loopne
pusha
pusha
ficomps
ret
lods
and
nop
jle
outsl
loop
stos
add
ret
or
loopne
push
ds
outsb
sbb
push
add
add
and
push
adc
dec
jo
pusha
pusha
out
mov
loopne
cli
add
int3
jle
sbb
loop
je
mov
fldt
inc
dec
popf
hlt
xor
dec
push
rcr
sub
or
add
push
mov
dec
test
and
pop
repnz
cmc
inc
loope
cmp
shlb
fdivl
mov
aas
in
sub
and
loopne
and
mov
sub
xchg
daa
add
dec
gs
rol
pop
fsubr
sar
mov
js
sbb
les
jp
das
mov
or
and
loopne
ljmp
pop
in
insb
aaa
sbb
pop
iret
push
aam
in
lea
pop
stos
cli
rcrl
add
mov
mov
push
rol
cwtl
push
add
mov
shrb
push
adc
add
ljmpw
mov
mov
pop
sbb
pop
cltd
clc
inc
mov
loopne
sub
sti
and
add
xor
mov
push
pop
mov
mov
orl
mov
mov
loope
pop
push
lods
inc
inc
mov
add
std
xchg
mov
jecxz
xor
nop
push
push
data16
jns
xchg
clc
jecxz
add
sbb
mov
xor
dec
lcall
nop
push
ret
call
and
add
add
and
sarb
imulb
xor
inc
inc
inc
fs
in
jbe
mov
jbe
xchg
addb
sub
mov
push
addb
hlt
or
cwtl
mov
and
pusha
pusha
adc
loopne
pop
test
pop
jle
pop
test
push
xchg
icebp
push
pop
and
loopne
xchg
out
mov
jg
mov
mov
push
mov
mov
mov
and
cmc
into
lea
popf
outsb
clc
inc
iret
pop
mov
pusha
pusha
in
lsl
push
pop
jmp
inc
inc
in
stc
shll
fimull
lock
into
fcoml
and
int
push
push
pusha
pusha
clc
jmp
push
loopne
fisubl
and
movsl
jb
mov
out
enter
xor
iret
inc
pop
and
rolb
push
mov
mov
sahf
hlt
call
add
inc
iret
call
add
mov
in
rol
and
in
add
xchg
mov
inc
sbb
arpl
inc
out
enter
arpl
sub
shl
xchg
or
inc
sub
loopne
jne
add
aam
and
loopne
into
sbb
outsb
lods
pusha
pusha
pushf
mov
jle
mov
xchg
and
or
inc
inc
push
cli
sbb
jnp
inc
andb
aam
or
loopne
pop
js
fcomp
add
ret
mov
out
pusha
pusha
xlat
vpminub
push
rol
sub
add
or
pop
negb
daa
call
cwtl
outsb
rcll
ret
add
insl
add
mov
enter
pusha
pusha
xor
mov
pusha
int
aam
stos
sahf
mov
rcr
imul
pusha
pusha
push
mov
shlb
jg
and
and
stc
aaa
stos
and
repz
addb
in
push
pusha
pusha
add
and
mov
addb
loopne
push
add
cmc
xlat
scas
mov
rol
hlt
and
cmc
cmpsb
loopne
cmp
insb
dec
add
sarb
ljmp
jnp
jge
pop
jo
xor
add
and
mov
lea
add
out
dec
jge
push
inc
push
pusha
pusha
sbb
push
push
mov
add
inc
lahf
mov
scas
and
dec
daa
out
cmp
imul
jb
xchg
cmc
xor
add
inc
dec
cli
cli
push
mov
rol
addb
sbb
sbb
loopne
pop
lcall
adc
sbb
xchg
es
aas
int
and
inc
adc
popa
mov
adc
test
xchg
mov
pop
sub
and
lret
fisttpl
add
xor
and
mov
shl
cmp
pop
fdiv
lea
rolb
inc
loope
pusha
pusha
push
pusha
pusha
lcall
and
ret
out
enter
sarb
lods
addb
jle
data16
mov
nop
pop
mov
clc
test
js
add
mov
pusha
inc
add
jp
mov
sbb
dec
xchg
xchg
inc
cmp
jge
sub
fsubs
pusha
pusha
xchg
mov
cmovs
mov
dec
dec
xchg
add
xor
cmp
xor
add
dec
inc
xor
fwait
inc
xchg
test
adcb
popf
sbb
daa
mov
arpl
dec
in
dec
add
push
mov
jmp
inc
inc
mov
pop
pushf
xor
jmp
jg
addb
inc
or
insl
push
add
test
mov
ljmp
mov
sbb
aaa
add
and
or
cmp
lea
adc
inc
jae
sti
xor
rclb
jae
push
and
mov
push
inc
inc
sub
add
mov
rol
adc
adc
adc
mov
loope
push
sub
loopne
push
fwait
sub
mov
int
xchg
push
call
and
sahf
mov
repnz
shrl
cmp
repnz
xchg
je
jle
mov
nop
xchg
lahf
ja
and
jl
add
stos
add
pop
loopne
repnz
cmpsl
dec
call
les
push
sbb
out
add
add
lcall
imul
shll
pusha
lcall
jnp
inc
pop
xchg
int
or
test
rcl
rol
pusha
pusha
mov
sbb
jmp
das
lea
add
pop
sbb
pop
mov
repnz
shl
insb
mov
add
addb
hlt
lcall
sbb
lods
pusha
pusha
sub
fcoms
inc
inc
stos
inc
or
loopne
fcmovne
xchg
xor
mov
mov
shl
sbb
loopne
cmpsb
and
sbb
test
mov
and
jmp
movsl
mov
jne
add
push
and
inc
dec
addr16
mov
sub
insl
add
loopne
leave
fidivs
adc
pop
fnsave
inc
sbb
cmp
cmp
or
shlb
pop
into
xchg
rolb
mov
xlat
adc
jno
xlat
dec
pop
clc
lea
pusha
pusha
cmp
push
inc
outsb
fs
and
and
push
xchg
xor
addb
addb
pop
adc
hlt
aas
mov
loopne
addb
push
aaa
loopne
loop
mov
loopne
test
outsb
mov
inc
pop
sub
loopne
in
in
adc
rol
sub
add
loopne
and
and
jp
dec
imul
or
fcoms
dec
mov
inc
inc
inc
imul
inc
pop
pop
adc
imul
adc
xor
loopne
inc
and
inc
fst
pop
div
jmp
push
mov
lds
inc
and
ljmp
cmpsl
jl
mov
aam
sbb
lcall
loopne
push
cmc
push
jns
xchg
sahf
sbb
cli
out
test
add
inc
inc
mov
add
filds
pop
push
insb
loop
xor
fcomps
sub
shlb
inc
inc
adc
loopne
pop
push
aaa
inc
jle
iret
cmp
lods
loopne
pop
test
mov
push
mov
mov
mov
sbb
rclb
xor
sbb
inc
lret
aaa
ljmp
cmp
jl
imulb
jl
dec
push
mov
dec
jecxz
fstps
mov
inc
inc
rorl
inc
inc
inc
adc
rcrl
jecxz
in
mov
in
icebp
xor
dec
andb
cmp
jle
adc
pusha
pusha
std
stos
addr16
testl
outsl
push
daa
sbb
popa
loop
pop
push
mov
shrl
pusha
fstpt
pop
ljmp
and
int
imul
mov
cltd
addb
pop
add
push
pop
loope
and
testl
pop
or
andl
pusha
pusha
or
loopne
pop
aas
jne
jp
mov
pop
mov
repz
push
mov
shrb
xchg
adc
push
push
rol
pop
out
cld
loope
mulb
loop
inc
mov
test
xor
lret
adc
stc
decl
dec
cmp
pusha
pusha
daa
mov
inc
call
jg
jae
loope
fwait
lea
lret
xchg
push
data16
jns
std
jl
dec
inc
int3
pop
in
cld
call
mov
pop
jb
jl
out
cwtl
xor
outsl
sbbl
loope
push
movsb
rol
xchg
insb
xlat
mov
rol
int3
cli
int3
insl
push
and
dec
and
ja
push
fstp
lock
ja
sarb
xchg
push
pop
incb
jecxz
insl
fisttpll
pop
addb
push
ds
outsb
adc
jnp
loop
lret
scas
addb
jne
mov
mov
jns
js
add
inc
cmpsb
and
aad
mov
pusha
pusha
mov
pop
mov
jno
frstor
lret
mov
pop
lds
imul
inc
inc
sti
lods
inc
inc
mov
addb
cmp
mov
sarb
int
adc
js,pt
jo
addb
loop
addb
loopne
cmc
push
inc
inc
adc
lds
loopne
mov
jg
mov
mov
retw
and
mov
add
and
loopne
xchg
and
xchg
cmp
cltd
jno
and
ret
test
test
notb
inc
imul
add
sbb
and
gs
inc
lock
ja
add
add
cmp
inc
inc
int
or
subb
add
into
jge
jmp
lods
inc
inc
pop
jno
addb
jno
xchg
add
pop
ss
fisubrl
inc
lahf
adc
aaa
lock
test
rol
das
addb
cmc
lcall
and
inc
or
loopne
repnz
aam
in
dec
mov
mov
aas
inc
insl
test
loopne
sub
loopne
mov
loopne
add
mov
xor
mov
fwait
fs
test
mov
xchg
inc
inc
or
rcrl
dec
inc
arpl
mov
mov
stc
dec
xor
or
punpcklbw
adcb
xor
xchg
popf
and
loopne
or
sarb
enter
dec
je
mov
and
cli
jns
in
sbb
inc
lock
mov
and
addb
adc
add
popf
push
pop
sbb
adc
inc
mov
pop
adc
loope
jns
aad
pop
mov
mov
dec
dec
in
xor
xor
subb
sbbb
adc
xor
cmp
mov
and
sahf
fcoml
sar
stos
inc
clc
cltd
pop
addl
cmpsl
or
shlb
or
push
and
pop
xchg
loopne
xchg
pop
repz
mov
fiaddl
rol
adc
addb
push
mov
add
mov
std
mov
imul
addb
aas
arpl
add
cmp
jae
jb
addb
sarl
nop
jo
dec
scas
dec
stc
in
inc
repnz
fsubrl
sub
and
imul
fsubrs
and
jp
outsl
insb
lods
loopne
jo
jno
ret
cld
das
cs
inc
sti
push
dec
pop
xchg
andb
sbb
and
add
add
pusha
data16
jae
addb
dec
inc
jp
out
rol
push
in
subl
inc
mov
add
stos
and
push
and
sub
shrb
lcall
ret
xchg
xchg
movsb
addb
rol
add
fnstcw
sbb
imul
jmp
inc
or
sub
cmp
and
xchg
jecxz
mov
push
call
movsl
xor
pop
ret
dec
and
fsubr
dec
movsb
mov
test
xor
jns
push
loopne
repnz
shl
pop
enter
xchg
xor
sub
inc
add
and
add
out
push
mov
test
loopne
push
push
popf
addr16
and
out
jp
sub
loopne
dec
nop
not
imul
inc
pop
xlat
xor
lock
hlt
popf
jg
add
mov
add
and
push
pop
fisttpl
adc
rol
adc
nop
or
jae
popf
push
push
mov
shr
shrb
push
and
xchg
xchg
iret
inc
mov
pop
lret
notl
add
gs
xchg
icebp
xchg
aam
inc
inc
rol
pop
adc
adc
add
pop
popa
jg
or
rclb
cltd
cmp
inc
add
dec
cmpsl
rorl
pop
and
jne
lock
addb
add
in
cmp
sub
and
add
add
mov
in
repnz
pop
jmp
or
xor
push
pop
imul
and
rorl
orb
sbb
inc
mov
out
pop
sbb
rcrb
stc
mov
pop
adc
jg
mov
pushf
negb
sbb
testb
dec
pusha
js
rcll
rol
std
hlt
adc
ret
je
jo
insb
jns
fcmovne
mov
addb
mov
adc
mov
movsl
or
stos
test
cmp
lret
xor
jl
repz
fmul
js
sub
mov
rcrl
mov
ret
adc
fisttps
out
push
ds
dec
rcrl
pop
or
mov
cmp
int
out
mov
dec
fstpl
ds
inc
jne
cli
mov
jns
mov
fmuls
addb
loopne
daa
dec
pusha
movsl
adc
addr16
mov
jbe
xchg
sar
jo
sub
into
mov
sbb
nop
xchg
push
call
jno
xchg
pop
sub
jle
inc
push
inc
xchg
popa
fwait
mov
and
mov
sti
cmc
fisubl
rol
jp
cmp
mov
jg
push
jnp
rol
pusha
add
add
add
mov
imul
mov
and
xor
rol
cmp
scas
and
jle
pop
adc
push
test
dec
mov
pop
pop
or
mov
xchg
insb
cmc
arpl
hlt
into
dec
ret
and
inc
push
out
jecxz
fwait
jp
movsb
pusha
pusha
daa
mov
data16
movl
clc
movsb
add
iret
inc
cmp
sub
loopne
pop
in
enter
repnz
sbb
sub
jg
daa
pop
pusha
addb
call
mov
rol
sbb
in
jns
shlb
adc
mov
addb
mov
inc
fdivr
push
adc
test
subb
push
dec
fistl
cmpsl
add
ds
sbbb
js
dec
push
cmp
das
test
sub
add
sbb
addb
loopne
inc
add
adc
add
sbb
or
xchg
aaa
sub
sbb
inc
lods
add
and
xor
add
push
popa
mov
call
out
pusha
pusha
push
rol
loopne
sbb
mov
out
sarb
push
and
add
ret
xchg
push
inc
inc
jge
jp
xchg
insl
insb
sbb
out
cmp
sub
pop
inc
xchg
push
pop
fisttpll
mov
mov
loopne
mov
jae
add
cmp
pop
inc
xchg
data16
dec
push
or
mov
lea
lret
sbb
dec
icebp
dec
xchg
push
rol
xchg
sahf
inc
push
dec
dec
mov
sbb
pop
lahf
fs
mov
sbb
leave
mov
pop
xchg
bound
inc
xlat
pop
stc
jns
mov
xchg
jae
mov
movsb
mov
xchg
inc
inc
outsb
pop
dec
push
rclb
popl
add
sbb
jns
mov
jp
xor
stc
jns
adc
int
xor
aaa
xchg
popa
loope
mov
addb
adc
inc
inc
jp
sbb
jmp
or
jno
or
inc
xchg
mov
lods
and
jns
cmp
mov
mov
mov
inc
add
jecxz
arpl
mov
and
and
push
popf
frstor
mov
leave
jae
rol
cmp
sub
lods
movsb
mov
mov
fsts
in
mov
fcompl
jg
loopne
xlat
cwtl
or
rcrb
popf
pusha
dec
je
popl
add
mov
mov
mov
jle
sbb
add
cmpsb
inc
inc
adc
incl
and
push
jno
int
sbb
loopne
cld
movsl
xchg
mull
outsb
xchg
or
shlb
lret
sub
mov
cli
lcall
xor
pusha
cmp
loop
rol
sti
ljmp
pusha
pusha
fisubl
sbb
inc
cld
mov
mov
aaa
mov
sbb
lods
loopne
mov
ror
insl
mov
cmpsb
loopne
int3
dec
leave
add
rcr
out
andb
or
ljmp
shrb
inc
inc
push
xchg
shl
sub
inc
add
fcomps
shl
lock
shrb
loopne
dec
and
push
roll
pusha
pusha
sti
cmp
jp
addb
lcall
pop
fistps
arpl
call
jmp
lods
fwait
movl
push
gs
lods
pusha
pusha
cmp
jecxz
dec
cmp
inc
inc
cmpsl
jnp
sub
add
scas
loopne
mov
loopne
mov
cmpsl
shll
adc
mov
and
add
call
jmp
rol
iret
sub
or
xor
inc
inc
stc
xor
rol
mov
and
orl
jbe
mov
insb
jl
outsl
loopne
clc
add
lret
add
xor
mov
rorl
addb
loop
xchg
and
out
mull
outsl
fcomps
enter
add
mov
mov
sbb
cmp
std
fsts
andb
mov
loopne
cli
adc
jnp
dec
out
inc
inc
mov
adc
cmp
and
pop
lahf
shll
mov
insb
ss
mov
shl
fcmovnb
cmpsb
mov
int
adc
popa
push
push
pmaxub
sbb
push
mov
loopne
leave
mov
loopne
mov
mov
add
roll
movsb
inc
inc
inc
or
add
mov
and
xchg
fwait
into
inc
xchg
jne
xchg
daa
or
add
add
popf
push
shlb
mov
loopne
cmpsl
repnz
test
pusha
push
mov
rol
jecxz
jl
mov
fnstcw
and
rcll
aad
mov
loopne
addb
popa
mov
enter
aam
adcl
bound
mov
pop
xlat
or
pusha
rolw
or
mov
sub
shlb
pop
addb
bound
mov
loopne
lcall
and
jne
mov
addb
adc
jo
add
shrl
shlb
sub
loopne
loopne
cltd
sbb
xchg
mov
loopne
incl
rol
inc
inc
mov
mov
lret
fs
rcr
inc
mov
and
mov
jp
rcrl
push
dec
enter
xchg
imull
pop
dec
or
enter
jge
add
loopne
pop
mov
fidivrl
into
push
mov
mov
push
xor
cld
sbb
ret
push
sbb
dec
in
addb
mov
mov
in
frstor
push
in
shlb
or
sbbb
sahf
sub
push
inc
lret
bound
addl
addb
sub
xchg
dec
mov
push
addb
lcall
aam
es
pusha
jbe
dec
inc
cmc
rclb
mov
cmpsw
push
jle
scas
sbb
pop
dec
mov
and
xchg
mov
pusha
popa
mov
add
and
pop
or
rcr
dec
call
stos
rorb
test
sarl
inc
inc
jb
addb
jns
and
pop
lods
loopne
inc
sbb
and
shrl
add
or
addb
cmp
and
jg
test
add
xor
add
mov
ljmp
sbb
out
aam
test
cmp
push
aaa
test
cwtl
or
and
and
adc
sbb
jno
rcrl
cmp
stos
pusha
pusha
mov
iret
lret
xchg
mov
mov
adc
xchg
cltd
mov
andb
jns
pop
sbb
mov
mov
aad
sti
mov
cmc
inc
mov
orb
sbb
jl
pushf
imul
out
dec
push
fwait
mov
loop
ja
enter
lcall
push
pushl
inc
add
pop
gs
das
sbb
rcrl
xor
fldenv
mov
pop
out
lds
push
or
bound
out
loop
cmp
data16
or
stos
add
dec
loopne
jge
xchg
jbe
dec
xchg
jp
mov
cmc
cltd
lret
or
aas
addr16
mov
lea
je
mov
andl
and
leave
and
add
shrl
inc
lods
mov
add
add
pusha
or
jb
addl
adc
shll
jecxz
lcall
scas
loopne
jns
lret
pop
neg
mov
push
adc
aaa
stc
imul
jno
jge
cmp
cmp
jno
aaa
add
mov
push
sbb
cmp
rclb
xchg
in
cmc
mov
sub
ret
or
prefetchwt1
les
fisttps
pusha
and
fidivrs
jnp
mov
push
addb
xorb
insb
repnz
fwait
or
pop
sbbl
rol
push
in
andb
add
in
inc
movsb
loopne
jmp
pop
xchg
outsl
imul
mov
rorb
sbb
and
pop
icebp
shll
orb
add
movsb
pusha
pusha
repz
sbbl
mov
push
inc
inc
addr16
addb
scas
rol
rol
pop
sub
or
xchg
mov
loopne
ror
adc
rol
lcall
mov
or
and
movsl
mov
mov
push
jle
loope
sub
mov
xorl
mov
pop
std
aad
iret
shl
cld
fisttps
fbstp
int3
pop
pop
dec
cmp
xchg
decl
cmpl
and
fistl
or
sbb
jmp
lcall
or
mov
lods
rol
ja
pusha
pusha
jge
and
mov
ss
push
std
push
dec
ja
test
ret
add
xchg
movsb
and
jg
cltd
or
mov
add
int
or
sahf
lods
inc
inc
jl
stc
nop
lock
lret
sbb
repz
das
jp
fcmovbe
jbe
pop
cmp
cli
cld
sub
xlat
notb
cmp
adc
mov
add
inc
loope
imulb
int3
jl
jge
dec
jno
pop
leave
adc
and
cmp
ds
dec
lds
pusha
pusha
into
adc
lcall
ss
sub
mov
add
je
dec
jle
add
mov
push
jb
popa
sahf
andb
cltd
mov
cld
cli
xchg
and
imul
lods
addb
popf
adc
in
lock
push
push
and
add
pop
insl
lahf
shlb
cmp
mov
loopne
mov
xchg
dec
dec
push
hlt
lret
nop
gs
fldl
les
cmp
lods
sarb
fdivr
fucom
pop
in
dec
or
push
cmp
sub
dec
push
scas
sbb
mov
loop
pushf
fdivrp
cwtl
jecxz
add
pusha
test
loopne
and
jne
scas
add
cmpsb
addb
push
fsubp
das
loopne
nop
dec
popa
pop
pop
xchg
insl
out
popa
push
pop
and
shl
pop
inc
imull
cmp
xchg
bound
sti
inc
pop
lods
shrd
lret
mov
mulb
leave
add
loopne
test
pop
mov
mov
aad
sub
push
mov
mov
rclb
inc
cli
mov
out
pop
fisttpl
jg
fdivs
cmp
dec
lea
jmp
iret
cmp
xor
addb
mov
jle
loopne
mov
fidivs
mov
sub
mov
xor
pop
adc
into
mov
cmp
std
imul
loopne
pusha
pusha
stos
pusha
pusha
jmp
fnstcw
rol
mov
mov
ret
inc
inc
into
adc
cmp
jae
outsl
add
and
jno
fnsave
jg
inc
inc
xchg
fisubs
rol
call
push
lahf
gs
mov
xchg
mov
push
cmpsl
jno
add
loope
addb
cmp
lods
mov
mov
sahf
iret
mov
inc
movsl
cli
adc
lret
or
mov
mov
jae
or
or
xor
adc
inc
bnd
out
mov
idivl
sti
iret
outsl
jno
and
pushf
add
loopne
nop
repnz
or
inc
add
cmp
xchg
jecxz
aam
and
pushf
lea
rol
scas
cmp
sub
jne
pop
fwait
mov
loopne
test
and
mov
repz
pusha
pusha
pop
leave
popf
fisubl
fnstenv
rcrb
addb
add
fists
add
das
sbb
mov
pusha
pusha
pushf
pusha
cmp
and
jle
jae
mov
mov
and
inc
lds
sub
add
add
jno
sub
ja
iret
xchg
cs
inc
ja
cmp
pop
xor
loop
cmc
pushl
cmp
xorb
ss
xchg
call
imul
aaa
gs
and
int
pop
pop
fstpl
add
and
and
and
rorb
jg
addb
addb
es
jae
cmp
xor
lahf
shlb
mov
cmp
imul
dec
leave
push
stos
mov
xchg
and
loopne
out
jo
push
and
sarb
sbb
mov
mov
fidivs
mov
shr
movsb
loopne
vmptrld
add
or
pop
push
pusha
pusha
rolb
add
repz
shll
sahf
sarb
jbe
sahf
aaa
inc
lcall
and
and
mov
cmp
xchg
scas
rol
pop
movsb
loopne
add
mov
push
xchg
aam
pushf
mov
sar
ds
js
push
inc
inc
inc
push
addb
addb
mov
xchg
cmpsl
ja
repnz
popf
jmp
inc
inc
hlt
and
pop
mov
mov
loopne
cmp
mov
jno
or
mov
loopne
jns
outsl
push
and
ss
rcrl
xchg
mov
pusha
pusha
jge
cmpsb
addb
inc
sbb
out
push
and
and
loopne
andb
push
inc
sub
and
loopne
mov
popf
pusha
out
adc
frstor
dec
movl
shrb
aas
mov
jmp
push
inc
push
jne
ljmp
and
loopne
cmp
out
scas
addb
pop
xchg
xchg
shrb
and
inc
push
sub
xor
and
xor
sti
push
pop
aad
je
js
loop
cli
ret
xorl
mov
js
fiadds
mov
cmp
inc
push
and
add
pusha
stos
insb
jb
rol
push
dec
shll
and
xlat
push
ret
and
loopne
pop
scas
std
movsb
pusha
pusha
jae
and
orb
pusha
pusha
lea
stos
rcrl
add
and
mov
push
cwtl
aas
mov
xlat
lods
ret
push
adc
cmp
outsl
mov
loopne
gs
cld
push
jmp
pusha
pusha
inc
std
xor
andb
inc
mov
cld
inc
and
inc
inc
lds
and
mov
add
mov
dec
adc
mov
in
mov
into
aam
test
iret
jle
out
ficomps
inc
xchg
mov
bound
lcall
sub
inc
pop
and
imul
popa
ss
inc
inc
and
lcall
xchg
test
cmpb
pop
or
cli
test
and
inc
inc
psrld
movsl
sbb
mov
dec
lea
mov
aam
lret
cmp
mov
rol
lock
mov
xchg
fs
sbb
lods
and
and
out
stos
outsl
jne
dec
shll
rol
popa
mov
xlat
xlat
aad
dec
pop
popa
cmp
sub
jge
inc
inc
mov
shlb
rolb
mov
add
inc
adc
and
es
pusha
pop
hlt
or
mov
sahf
dec
pop
popa
nop
mov
pop
inc
mov
out
sub
inc
mov
mov
cmpsb
addb
addb
pusha
jl
pop
in
lret
jns
add
iret
ret
test
mov
pusha
mov
xor
adc
rolb
and
inc
jae
jae
pushf
enter
add
push
loope
fs
mov
cmc
sub
pusha
xchg
push
sbbl
jmp
mov
loopne
out
xchg
or
pusha
in
dec
out
add
and
xchg
fcomp
inc
inc
fimuls
out
movsl
pop
sti
xor
xor
pusha
pusha
xchg
out
push
add
sub
loopne
xchg
lock
aad
cmp
push
mov
xor
push
inc
and
xchg
lahf
fst
out
test
sub
imul
ss
lcall
jle
imul
inc
ret
in
pop
mov
and
es
inc
andb
stos
rol
or
add
ljmp
sbbb
inc
fidivl
loopne
push
and
add
xchg
insl
mov
and
popa
add
test
inc
inc
push
and
jecxz
cwtl
xchg
xor
inc
lods
add
std
dec
pop
js
ja
dec
aas
shlb
add
cmc
movsl
int
mov
pop
xor
sub
adc
rol
add
aad
pop
cmpsl
pop
jb
push
pcmpgtw
push
or
pop
push
rol
jbe
les
add
mov
xor
adc
mov
inc
pop
fstl
loopne
inc
leave
mov
mov
lahf
scas
addb
add
cmpsb
and
xchg
dec
push
loopne
add
or
shlb
loopne
icebp
cltd
push
adc
mov
iret
push
popf
add
rol
inc
inc
xor
cli
insb
andb
movb
mov
cmp
stos
rol
ret
pop
dec
addr16
addb
mov
rorl
jecxz
xchg
addb
loopne
aaa
andb
enter
pusha
mov
mov
or
andb
fdiv
fwait
jmp
and
cmc
mov
jns
pop
mov
rol
shrl
shll
in
pop
xor
arpl
adc
ficoms
rol
add
and
adc
sub
js
pusha
pusha
in
push
rol
loopne
mov
push
ds
andb
xor
pop
inc
clc
into
out
mov
mov
mov
inc
push
sbb
addb
das
mov
test
iret
insl
xchg
loopne
add
and
or
shrb
pusha
jbe
inc
push
pop
or
daa
push
stos
loopne
dec
in
adc
inc
push
inc
clc
mulb
inc
dec
js
fsts
jno
cltd
insb
sub
imul
imul
lahf
and
jecxz
iretw
repnz
fcomip
shlb
addb
mov
lahf
outsl
add
mov
jge
add
pusha
and
cmp
cmp
leave
stos
pusha
pusha
push
pop
rcrl
cltd
and
inc
and
test
xor
and
sub
loopne
and
loopne
add
fisttpl
cltd
cmp
and
out
jb
imul
jle
aas
stos
cmp
add
inc
enter
fstl
xchg
outsb
adc
sahf
and
outsl
cmc
shlb
pop
pusha
fiadds
cmpb
add
and
push
loopne
pusha
pusha
bnd
bnd
xchg
aad
stos
add
and
pusha
add
std
psubd
repnz
or
lcall
movsb
and
push
xchg
mov
pusha
pusha
jg
dec
test
repz
lahf
aad
roll
loop
push
repz
in
mov
add
add
dec
mov
xor
pop
test
sbb
mov
sbb
pusha
mov
and
xlat
jae
cmpsl
fs
cmp
xor
dec
mov
addb
add
add
jnp
push
mov
rcrb
ficoml
and
pusha
loope
mov
mov
push
xchg
mov
stos
mov
in
out
inc
push
adc
ds
mov
and
movsl
push
mov
rol
in
std
nop
sub
pop
push
or
adc
mov
mov
int
shlb
add
bound
pusha
pusha
xor
pop
add
sarb
mov
and
adc
pusha
subl
cmp
test
test
and
cmp
inc
add
xchg
sahf
in
and
jno
add
add
add
mov
orb
jbe
inc
inc
jnp
in
mov
js
shl
sub
shlb
push
inc
inc
andb
dec
in
out
or
and
sub
pusha
pusha
pop
pop
cmp
and
cmp
inc
mov
ss
sub
loopne
inc
shlb
pusha
popf
fimuls
jb
pop
cmp
pop
out
in
pop
movsbl
fnstenv
mov
mov
scas
loopne
cmp
cmp
mov
call
rorl
cmp
add
and
hlt
adc
outsl
out
xchg
pop
fldt
xlat
add
loopne
test
or
loopne
sub
add
cli
nop
mov
add
rolb
and
leave
subl
pusha
or
decl
lret
push
loopne
lock
mov
shlb
jno
mov
cli
xor
push
mov
arpl
hlt
push
mov
rcrb
sbb
rol
or
rcl
testb
cmp
and
out
mov
add
cmp
add
addb
and
add
out
mov
mov
inc
test
andb
sub
addb
inc
mov
mov
frstor
test
loopne
out
sbb
into
mov
cmp
pusha
jecxz
mov
daa
adc
inc
jl
inc
jne
mov
and
push
repnz
add
mov
push
xchg
push
cld
mov
ljmp
add
loopne
out
or
std
inc
lret
rol
add
inc
mov
jl
ja
loope
mov
insl
flds
orb
or
jo
xchg
add
inc
dec
cli
mov
dec
jg
jmp
lret
jp
mov
loopne
add
out
scas
mov
cmp
stos
pusha
pusha
je
sbb
cltd
lods
and
ret
scas
std
mov
sbb
outsl
inc
push
push
pop
rorb
dec
push
lcall
mov
sbb
and
loopne
rcr
leave
adc
addb
movsl
pop
and
std
stos
and
mov
je
les
sar
add
cmc
add
and
cli
insb
cmc
in
sti
mov
push
fiaddl
add
cltd
or
and
inc
addr16
sbb
das
repnz
add
mov
xor
mov
mov
sbb
lods
es
mov
scas
mov
or
mov
rorl
je
sbb
mov
rol
in
pop
aad
push
mov
rcrb
filds
std
xor
gs
enter
jmp
sbb
xlat
call
call
and
je
mov
add
pop
cmp
mov
sub
pop
mov
pop
outsl
or
std
jp
das
pop
and
loopne
stc
cwtl
push
testb
add
fimull
insl
inc
ss
int3
mov
push
push
mov
das
mov
jns
loopne
lods
rol
mov
add
jg
scas
mov
push
addb
fs
pop
jp
dec
dec
in
mov
rorb
sub
std
pop
clc
adc
sbb
add
fistps
leave
xor
xor
xchg
popf
xor
add
popa
mov
sahf
push
orl
stos
addb
push
mulb
out
nop
leave
push
mov
jle
popa
ret
cmp
mov
rol
mov
push
sub
loopne
pusha
pusha
test
rol
loopne,pn
jbe
sub
cmpsl
ret
mov
shlb
xlat
cmp
pusha
std
fwait
test
jle
addb
sbbb
loopne
add
and
icebp
loop
mov
push
add
dec
sub
add
inc
pushf
ficoml
lds
pusha
pusha
les
addb
add
push
data16
fnsave
pop
pop
pop
cli
mov
and
and
sbb
inc
pop
shll
sbbl
jg
xor
add
lret
addl
scas
mov
mov
loopne
push
inc
mull
push
jne
out
mov
sub
loopne
test
loopne
pop
mov
cmpsb
mov
xchg
cmp
inc
inc
aas
push
xor
xor
xchg
outsb
xor
pusha
pusha
fstps
fcomps
pusha
pusha
xchg
inc
lret
lret
dec
aaa
mov
dec
cmp
adc
aam
xchg
mov
shrb
add
lahf
lahf
xchg
in
inc
cli
or
pop
jns
mov
outsb
lcall
push
xchg
sti
jb
adc
cmp
stos
daa
mov
inc
inc
add
in
out
pop
pop
outsb
or
and
loopne
stos
bound
jg
mov
mov
movsb
loopne
push
sti
addr16
xchg
push
pop
ss
test
cmpsl
pop
cmp
into
pop
cmc
mov
rol
dec
add
and
and
incb
bnd
mov
loopne
cmp
popa
push
inc
and
inc
sbb
sbb
jl
sub
frstor
add
add
add
mov
test
aaa
sarb
dec
mov
loopne
cmp
xchg
mov
sub
pop
insb
xchg
sbb
addb
rcrl
mov
push
xchg
sbb
in
addb
imul
lcall
rorb
sbbl
and
inc
push
lods
mov
add
push
mov
xchg
mov
mov
adc
das
xchg
xor
jns
mulb
xor
cmp
call
movsb
and
pop
pop
inc
sti
inc
in
sbb
call
loopne
out
pusha
ret
cmp
jbe
xor
xor
pusha
test
rcrb
rcll
mov
lea
cltd
loopne
add
xor
lret
xor
fidivs
lret
adc
data16
pusha
pusha
rcl
sbb
pop
std
int
xor
addl
loopne
rclb
cmpsb
inc
inc
mov
mov
lods
out
cmc
cmp
add
add
push
add
pop
call
subb
and
xchg
mov
int
aam
div
and
popa
sbb
inc
or
sarb
loopne
roll
and
xor
loopne
cmpsb
add
cmp
aad
jg
ret
cmp
sbb
mov
andb
addb
pusha
xor
pop
cld
sbb
cmpsl
ss
add
das
je
inc
inc
cmp
xor
jo
addr16
cmp
sahf
mov
xlat
test
loopne
jo
mov
rcl
push
mov
and
pop
push
fwait
cmp
shl
xor
or
add
jle
inc
mov
aam
add
pop
dec
iret
sbb
in
xlat
pusha
cwtl
pop
mov
dec
xor
repnz
jp
ret
push
xchg
std
and
loopne
mov
rorb
rol
jne
adc
mov
insl
or
rolb
and
pop
xor
in
xchg
xchg
adc
push
jo
add
rcrb
push
xchg
mov
lret
in
sub
mov
lods
and
push
push
addb
inc
inc
or
sbb
push
add
or
mov
xchg
dec
and
adc
jp
aad
ret
inc
mov
mov
add
jns
push
push
pop
cmc
in
inc
sub
pop
data16
ficompl
xor
and
inc
mov
js
jg
mov
ret
inc
mov
jbe
add
or
mov
adc
cmp
pop
xor
jo
jb
je
xor
and
sub
sub
cmp
push
mov
and
loopne
in
data16
sub
loopne
lods
push
imul
pusha
pusha
pop
call
lret
stos
pusha
pusha
push
push
mov
faddp
test
add
cmp
mov
sarl
pop
pusha
pushf
mov
cmp
push
fbld
movsl
in
and
push
jmp
jo
xor
xchg
push
loopne
lods
pusha
pusha
xchg
sbb
fdiv
cmpsl
shlb
or
add
js
rol
mov
xchg
lahf
rcll
fs
nop
pop
test
loopne
sahf
mov
inc
andl
jno
inc
inc
stos
xchg
rclb
test
lea
push
mov
xor
jae
and
lret
xchg
pusha
pusha
out
pusha
lock
mulb
fisttpll
fstps
adc
sarl
inc
inc
pushf
push
lcall
inc
jg
cmp
gs
faddl
loopne
dec
daa
ljmp
loopne
scas
aam
ljmp
jg
rol
dec
or
mov
in
mov
loopne
or
lods
call
int
addb
stos
filds
fcomi
fs
adc
push
add
scas
rol
lret
jle
stc
add
add
mov
addb
dec
inc
inc
int3
in
ret
jl
cmp
loope
push
xchg
lods
inc
inc
push
rorb
jle
sti
dec
stos
pop
loope
cmp
jb
scas
loopne
into
lods
pusha
pusha
xchg
inc
inc
das
ficomps
test
shlb
loopne
scas
pop
aad
xabort
mov
imul
pop
test
loopne
cmpsl
mov
lcall
rorb
add
push
sbb
ss
nopl
out
popf
repz
aad
hlt
add
dec
dec
pop
out
inc
inc
test
pusha
pusha
add
inc
inc
push
out
cli
nop
stos
sbb
sahf
xchg
mov
add
lahf
stc
cmc
in
arpl
cmpsb
pusha
pusha
xchg
loop
test
loopne
lods
out
push
mov
das
add
adc
mov
pop
sar
adc
inc
inc
into
cmpsb
mov
sahf
jne
inc
inc
inc
hlt
addb
dec
imul
jb
jge
push
inc
inc
mov
sbb
rol
add
and
mov
lods
pop
fcmovnb
xor
sbb
shrb
and
add
and
push
loop
inc
jae
loopne
addb
mov
mov
popa
lods
pusha
pusha
movsl
clc
call
pushf
lahf
inc
adc
sub
push
addr16
jb
repnz
mov
sarb
out
ss
clc
shrl
scas
pusha
pusha
movsl
popf
enter
mov
jge
scas
gs
movsl
mov
dec
cmp
inc
inc
or
sub
and
ss
push
aaa
aad
sbb
xor
imul
xor
out
movsl
loope
addb
jb
cmpsb
pusha
pusha
push
dec
pop
push
xchg
mov
add
pop
or
cmp
stc
test
loopne
and
xor
mov
ret
das
imul
or
and
loopne
movsl
mov
mov
pop
cmpsb
rol
mov
xor
subl
dec
mov
mov
mov
sti
ljmp
jnp
lahf
xchg
mov
loopne
adc
scas
stos
push
mov
mov
inc
divb
ss
or
ret
dec
shlb
jno
in
call
inc
mov
and
icebp
subl
mov
adc
orl
sbb
sbb
inc
sub
push
sub
add
jns
shl
pop
mov
jg
testb
scas
icebp
cmp
jae
sub
shlb
rolb
orl
mov
pop
aas
lahf
ds
int
fiaddl
fimuls
outsb
dec
mov
and
shl
and
mov
fcoml
mov
loopne
loope
loop
ljmp
je
mov
add
out
ja
inc
inc
cltd
add
loop
adc
and
pusha
jne
mov
push
add
out
call
mov
shlb
shl
dec
add
rol
loop
fcoms
adc
inc
inc
jae
add
add
pusha
pusha
cmpl
inc
push
adc
add
and
xor
and
inc
inc
pop
sti
andb
cmc
cmp
stc
cmp
js
aam
loopne
xchg
mov
cmpsl
out
jne
pusha
pusha
cmc
fcoml
pop
jg
mov
hlt
sbb
jge
insb
rcr
mov
adc
int
jp
mov
outsl
lods
xor
cmpb
and
jns
cmpsb
mov
pop
sbb
pop
mov
leave
dec
adc
inc
add
dec
and
rcrb
xor
mov
add
xlat
push
dec
sti
daa
rclb
sub
and
cwtl
je
out
repnz
addb
xchg
js
adc
xchg
cli
push
lcall
out
out
ss
inc
sti
fsts
inc
lcall
or
lods
and
adc
mov
jmp
jns
mov
push
pop
mov
or
add
out
call
jns
push
add
mov
xchg
sub
push
loop
repnz
das
imul
in
cmpsl
out
out
adc
jle
arpl
shld
jae
fstp
or
inc
inc
ja
push
and
pushf
mov
or
xor
push
cmp
test
mov
dec
jg
insb
lds
rol
push
lcall
push
loopne
add
adc
pop
scas
rol
mov
xchg
ror
imul
rclb
or
loopne
loopne
push
xor
out
fwait
repnz
insl
testb
jbe
fs
ret
outsl
jne
and
sarb
jg
outsl
sbb
pop
push
xchg
jo
jo
mov
repz
adc
pop
fisubl
pusha
pusha
cmp
pop
inc
and
ljmp
loopne
jb
dec
int
or
sarb
pusha
xlat
lret
test
loopne
mov
dec
pop
inc
sub
add
or
pop
addl
push
inc
inc
mov
and
and
mov
jb
fstps
mov
sub
push
data16
xchg
ds
dec
sahf
into
sub
das
stos
int
mov
dec
xchg
mov
adc
shrb
push
xor
loopne
pop
mov
and
pop
aam
jbe
mov
sub
loopne
loop
testl
loopne
or
inc
jecxz
pusha
pusha
ljmp
fsubr
pop
mov
int
psubusw
and
or
repnz
movsl
or
sub
xchg
pop
or
add
push
test
notb
loopne
movsl
pop
fcoml
and
loopne
lcall
add
mov
into
cmp
sub
dec
adc
and
xchg
sarl
movsl
loope
push
and
loopne
dec
pop
sbb
lahf
test
sbb
dec
stos
add
dec
inc
pop
shl
loop
cmc
sahf
jnp
mov
pusha
cmp
push
or
add
test
mov
js
cmpsb
add
inc
insl
lods
lea
hlt
jmp
inc
inc
mov
push
push
loopne
xchg
stos
leave
stos
inc
pushf
mov
and
mov
in
popa
ds
fsubrl
add
pusha
das
xchg
test
pusha
rcll
shrb
and
ljmp
int3
sub
and
xor
aad
std
aaa
mov
rolb
inc
inc
push
jp
pop
enter
lds
mov
and
and
inc
out
pusha
pusha
sbb
and
jne
and
int
pop
popa
data16
xchg
jb
and
push
notl
add
and
cwtl
loop
loop
cmp
cmpsb
pusha
pusha
mov
nop
jno
jg
mov
pop
daa
aaa
xor
inc
inc
pop
popf
int
jg
stc
nop
mov
shlb
fstpt
cltd
push
mov
sti
sbb
rol
or
and
push
and
repnz
rcrb
aaa
inc
in
cmp
cmp
jno
sbb
inc
xor
push
adc
pusha
rcrl
sti
xchg
and
rclb
clc
mov
loop
and
divl
jmp
rorl
jp
sub
jns
inc
inc
and
mov
out
sub
mov
shrb
pop
add
mov
dec
movsb
add
notl
cli
adc
addb
mov
adc
push
sub
xor
cli
inc
call
or
jns
out
movsb
add
std
push
and
inc
pushf
out
push
popa
cmp
test
push
jle
imul
inc
inc
imul
ss
inc
jns
and
loopne
nop
das
adc
xchg
jno
mov
pop
xor
mov
jns
into
ljmp
mov
sub
sub
jns
inc
fdivrs
add
jne
sbb
adc
cmpl
fbld
loopne
hlt
repnz
loopne
push
imul
cmp
xchg
daa
pop
mov
inc
pop
dec
pop
adcl
mov
inc
push
jmp
shr
cmc
aas
mov
addb
loopne
sub
sbb
loope
mov
push
inc
inc
add
add
ds
scas
test
sub
in
xchg
loopne
add
xor
jo
inc
inc
das
and
xchg
add
cmp
out
rcr
xor
sub
cs
inc
xchg
call
adcb
jl
out
mov
out
xor
cmp
jg
outsl
shlb
and
sbb
mov
push
sbb
sub
test
xor
jae
popa
add
and
test
ds
loopne
jae
and
out
mov
dec
es
imul
gs
sarl
mov
xchg
mov
addb
out
push
mov
adc
xchg
add
and
dec
fstpl
sbb
and
inc
inc
out
test
pusha
jbe
es
sahf
repnz
loop
lahf
jbe
inc
jp
fs
ja
mov
stos
addb
inc
pop
inc
xchg
inc
cmp
jbe
mov
pop
adc
or
add
cmp
aad
xchg
gs
pop
out
not
sbb
enter
loopne
pop
mov
loopne
addb
xchg
and
and
xor
mov
inc
pop
ret
adc
insb
cmp
add
loopne
and
loopne
push
data16
jo
fcmove
cltd
sbb
add
lcall
stos
mov
mov
push
lods
cli
shrb
bswap
and
loopne
mov
loopne
adc
jo
and
sub
inc
call
and
push
fistps
divl
push
pop
cmpsl
subl
aam
popa
cmp
xlat
push
cmpsl
out
mov
mov
cmp
cmc
pop
pop
push
mov
insl
inc
enter
movsl
lea
mov
mov
repz
jae
pusha
pusha
sbb
loopne
in
rol
outsl
mov
jle
inc
shll
cmc
mov
sub
add
fwait
add
repnz
adc
mov
insb
loop
pop
pop
sub
pusha
pusha
ret
cmp
loopne
jge
imul
loopne
jp
dec
scas
addb
loop
or
and
pusha
adc
popa
sbb
sub
and
shl
fwait
sarl
dec
jo
stos
outsb
gs
in
scas
xor
inc
pop
jmp
mov
inc
shr
push
rorb
arpl
mov
pusha
pusha
or
rcrl
fistpl
mov
pop
ss
or
inc
hlt
ja
ficomps
adc
sti
mov
add
pop
pusha
jb
add
addb
bound
sbb
mov
push
out
jo
pusha
pusha
xor
and
push
add
test
add
aas
bnd
fldl
loopne
outsl
lcall
and
and
faddl
loopne
ret
inc
pop
adc
nop
jge
adc
push
mov
cli
push
mov
orb
ja
mov
aam
or
lock
das
or
dec
mov
insb
dec
push
pushf
lret
out
in
adc
inc
outsb
je
jne
cltd
loope
mov
shlb
addb
add
mov
rolb
pop
pusha
popa
scas
mov
jne
add
pop
les
in
and
pusha
adc
mov
jp
cmp
jnp
inc
push
clc
aad
loopne
in
lock
mov
aad
scas
addb
jecxz
xor
and
sti
in
cmp
bound
rclb
push
outsb
xchg
decb
mov
lea
loopne
inc
enter
jl
mov
xchg
sbb
insb
cld
push
jge
stos
loopne
ja
loopne
adc
xchg
jno
add
add
mov
sub
jb
testl
lcall
and
add
fmuls
addb
fsubr
sbb
push
cwtl
mov
and
enter
and
cwtl
inc
mov
sub
shlb
jg
loopne
mov
jg
imul
jle
pusha
pusha
push
mov
outsl
cld
mov
sbb
add
fistpl
add
jl
je
addb
add
insb
xchg
xchg
xor
loopne
mov
addb
pusha
or
pusha
sub
leave
cwtl
cltd
test
push
fstpl
cli
fsubrs
dec
sbb
mov
cwtl
xchg
and
imul
push
mulb
lock
jb
mov
rorb
dec
pop
mov
inc
push
aaa
stos
mov
loopne
addl
rol
enter
xchg
add
fdivl
add
and
pusha
push
test
icebp
cli
add
loope
mov
pusha
pusha
pushf
fscale
fwait
cmpsl
dec
mov
sahf
cmp
ja
and
rclb
mov
xchg
stc
dec
rcrb
call
daa
hlt
dec
adc
mov
jle
sbb
add
mov
sub
inc
xor
pop
cltd
pop
push
in
lret
lock
stc
or
push
and
push
addb
mov
loopne
jmp
int
add
cmp
jmp
popa
mov
pusha
pusha
imul
loope
or
dec
dec
mov
daa
loopne
and
mov
mov
add
stos
addb
mov
mov
inc
push
fstpt
push
push
jmp
add
fs
sub
addb
loopne
and
daa
or
rorb
fs
xor
push
int3
cmc
jge
jae
inc
lret
mov
jmp
mov
aam
jae
loopne
rol
rcll
inc
lahf
mov
push
adc
and
or
or
pop
aaa
lds
rol
adc
test
or
xchg
mov
pop
push
push
cmp
dec
sub
pusha
push
push
pusha
cmpsl
lret
and
adc
inc
inc
push
in
stos
pusha
pusha
cltd
rolb
shll
inc
inc
fwait
add
shl
in
gs
sbb
mov
bound
xor
lahf
xchg
add
and
and
sub
and
xor
stos
addb
inc
pop
sub
and
into
mov
and
loopne
and
xor
xchg
test
pop
sahf
cltd
ret
cmpsb
mov
push
inc
mov
mov
frstor
sahf
rcll
dec
or
inc
inc
mov
push
push
les
in
jne
fsubrs
loopne
pop
jmp
addb
mov
addr16
or
loope
push
sub
loopne
icebp
imull
sbb
jne
test
push
push
and
add
dec
jno
xor
mov
stos
loopne
xor
out
xchg
int3
xor
ret
inc
repz
fstps
rol
das
and
fdiv
jp
inc
push
insb
lret
cli
jge
rol
pusha
pusha
mov
movsb
add
sahf
sbb
andb
push
xchg
pop
sbb
xchg
mov
out
fiadds
rol
dec
push
sub
loopne
scas
inc
inc
in
and
and
mov
pusha
rcrl
and
and
jo
sub
ror
push
inc
inc
enter
pop
push
add
jmp
lret
mov
shll
lcall
std
lods
rol
push
and
mov
and
mov
fiaddl
and
xchg
idiv
adc
or
adc
dec
inc
mov
cltd
xchg
aaa
pushf
stc
pop
xchg
add
and
xor
cmp
mov
and
pop
ds
andb
mov
inc
inc
cwtl
xchg
or
add
fs
jne
insb
scas
add
out
and
and
xchg
pop
call
and
mov
lds
xchg
shl
sbb
mov
sbb
aas
dec
adc
cmp
sbb
inc
mov
icebp
movsl
lods
xchg
in
adc
ss
xor
bound
and
popf
notb
jo
jae
stos
out
cmp
fidivrs
aaa
into
fildl
data16
sbb
sarb
in
push
cmp
push
adc
or
lea
or
in
loop
and
push
loopne
sub
outsl
jo
sub
rclb
out
test
fldcw
jmp
push
js
leave
push
out
sbb
and
mov
inc
and
insb
jle
adc
sbb
xor
cmp
pushf
pop
push
mov
insb
and
mov
sbb
stos
daa
mov
and
xchg
or
loop
dec
mov
xchg
popa
jb
push
mov
popa
adc
stc
repz
je
sbb
mov
mov
mov
mov
xchg
lea
add
jns
adc
jbe
ds
rorl
add
inc
sbb
in
popf
add
inc
sti
pop
clc
aad
pop
jns
lock
rclb
add
cmpsb
and
lock
push
pop
mov
adc
mov
mov
pusha
pusha
addr16
dec
inc
out
add
das
xor
cmp
das
das
jge
push
lahf
mov
xchg
loopne
dec
and
aam
inc
jg
mov
clc
xchg
pop
clc
cmpl
scas
pusha
pusha
sbb
dec
clc
test
pusha
pusha
xor
mov
mov
xor
aas
jbe
das
mov
jno
loopne
and
loopne
lret
nop
into
xchg
cmp
inc
inc
mov
rolb
and
jge
mov
insl
push
dec
cmc
or
bound
clc
jp
push
ret
ja
stos
inc
inc
xor
xor
mov
ja
into
clc
jbe
and
pop
mov
mov
sbb
pusha
pop
int
or
addb
inc
inc
and
inc
inc
mov
pop
adc
push
pop
and
mov
loopne
aas
inc
inc
push
inc
inc
dec
lret
xor
xorl
and
es
inc
ret
xlat
out
and
rol
outsb
inc
fmull
xchg
push
addr16
and
push
adc
shrl
inc
mov
and
mov
add
popf
mov
xchg
sub
and
aaa
dec
ret
jl
push
sbb
xchg
iret
lret
aaa
and
mov
cltd
xor
lds
mov
insb
mov
loopne
out
mov
addb
cltd
adc
add
mov
cmp
jle
push
rcr
inc
inc
jmp
loopne
lds
pop
out
push
add
mov
mov
mov
loopne
or
rol
jle
ds
pusha
pusha
pop
addr16
pop
cld
subl
xor
mov
pop
cmc
lea
addb
lds
lock
or
xchg
out
outsb
insl
sahf
inc
in
jnp
mov
inc
data16
add
inc
sub
add
mov
and
jb
loopne
fiaddl
dec
aas
daa
fstl
popf
insl
xor
sub
lods
lcall
aad
xchg
mov
and
add
loopne
in
fidivl
inc
or
loope
in
sbb
fnstsw
inc
fists
leave
sbb
inc
or
pusha
mov
mov
mov
divb
jle
and
ret
aaa
addb
push
sbb
jns
cmp
movsb
add
insb
pusha
pop
dec
ffreep
daa
sahf
mov
jb
add
jp
xor
pop
jmp
inc
inc
pop
aad
xor
clc
inc
fwait
out
andb
scas
test
pusha
pusha
push
xor
push
outsl
push
and
cmp
repz
jmp
and
inc
mov
inc
lcall
inc
les
in
out
sbb
pushf
filds
pusha
pusha
negb
in
mov
pushf
lods
rcrb
add
sub
mov
push
insl
sbb
insl
in
repnz
rolb
andb
and
rclb
shlb
or
cld
int
nop
clc
rol
aaa
or
loopne
cmp
mov
dec
fcomps
cmp
call
mov
gs
inc
inc
inc
popf
outsb
inc
cli
xchg
xchg
xchg
pop
stos
rol
stc
iret
pop
or
xchg
hlt
scas
addb
addb
push
and
in
and
or
pusha
dec
adc
hlt
cmp
out
ja
psllw
mov
push
es
loop
stc
pop
in
int
or
loopne
add
mov
adc
push
mov
out
fisubs
adc
or
and
sbb
mov
and
mov
les
in
sahf
mov
aas
jl
pusha
mov
fisubrs
pop
fcmovu
shlb
inc
jbe
add
or
int3
test
test
rolb
pop
cmpsb
add
xchg
call
pushf
xchg
outsb
test
add
mov
mov
pop
xchg
xchg
xchg
aaa
test
and
loopne
pushl
outsl
jmp
fmull
pop
and
pop
mov
mov
adc
cmp
pop
mov
shll
jo
lahf
jmp
mov
cmp
mov
xchg
pop
hlt
arpl
mov
push
out
lea
aas
dec
mov
push
lods
inc
inc
push
push
fnsave
outsb
movsl
jg
fcompl
dec
cwtl
adc
aas
fisubl
and
call
cmp
lods
cwtl
dec
jns
mov
push
push
fldl
add
unpcklps
and
inc
adc
adc
aas
mov
mov
in
mov
and
shrb
mov
outsb
mov
inc
jbe
in
in
sarb
sub
in
lock
subl
nop
in
int
sbb
fnstsw
mov
dec
loopne
rolb
inc
xlat
cmp
addb
xor
outsb
or
and
inc
outsl
add
mov
and
rorl
loopne
jmp
fxch
jo
subl
sbb
mov
mov
inc
imull
add
fcomps
enter
test
fldt
add
ficoml
hlt
pop
push
jmp
pop
inc
aaa
xor
addb
push
or
sub
add
loopne
es
push
popa
mov
jae
dec
int3
lods
mov
mov
mov
xor
dec
fsts
and
int
fcomps
sbb
xor
mov
xor
insb
adc
mov
inc
mov
cmp
jg
cli
or
sbb
test
repz
addb
rcll
xor
pop
or
add
or
std
sbbl
xor
ret
shrl
dec
outsb
divb
mov
fs
cmp
xchg
cmpsw
je
or
mov
push
mov
mov
and
sbb
rorb
rorl
ror
cmpl
scas
cmc
push
mov
pop
ljmp
movsl
sbb
mov
xchg
push
xchg
pop
inc
adc
inc
jmp
inc
sub
or
nop
popl
xchg
stos
rol
jo
jge
clc
mov
loopne
xchg
jnp
and
push
andb
lcall
rcrb
push
outsl
bnd
jmp
insl
mov
pop
pop
mov
xchg
jp
rol
lods
addb
jg
or
cltd
cmp
imul
cmpsb
add
xor
pusha
dec
mov
shrb
or
mov
insl
or
out
sub
inc
mov
dec
sub
inc
leave
ret
into
lret
pusha
pusha
adc
mov
mov
loopne
cmp
mov
loopne
or
and
ss
addl
inc
frstor
dec
filds
mov
out
hlt
jg
dec
or
or
add
or
aam
int3
call
fidivl
xchg
cmp
mulb
or
out
and
addb
nop
cli
push
in
mov
inc
out
mov
mov
movsl
test
cmp
sub
loopne
dec
lods
nop
jb
addl
pusha
pusha
imul
jae
scas
fdiv
pop
scas
inc
pop
stos
mov
mov
and
rcr
out
jb
mov
cli
lock
sbb
lret
cli
ja
xor
jbe
or
mov
leave
xchg
push
inc
inc
cmpsl
adc
insl
mov
in
pop
repnz
and
popa
inc
test
popf
mov
sbb
pop
movsb
addb
add
mov
and
add
aas
cld
or
pusha
aaa
rcrl
and
js
mov
daa
jp
les
inc
inc
adc
roll
pushf
fildl
loopne
cmp
xlat
xchg
add
rolb
mov
sub
inc
sbb
into
cs
pusha
push
aad
mov
imul
nop
adc
int3
mov
shlb
jne
jnp
in
stos
pusha
pusha
inc
jnp
mov
sub
loope
inc
shrl
rcrb
push
pop
adc
fldt
dec
or
and
addb
adc
xor
into
sub
lret
dec
inc
out
jge
rol
inc
inc
add
add
rol
jg
mov
loopne
dec
inc
xor
icebp
je
or
and
adc
movsl
in
jnp
inc
icebp
insb
or
lahf
mov
shlb
pusha
pusha
pop
adc
mov
mov
mov
in
mov
cmc
and
repz
inc
aam
sub
push
and
imul
test
or
add
and
sub
push
cmp
mov
pop
xor
inc
inc
incl
mov
cmp
js
inc
mov
lcall
sbb
stos
inc
inc
into
sbb
jae
and
pop
fisttps
aam
sbb
mov
addb
loopne
and
ret
arpl
jl
mov
sbb
add
sbb
cwtl
jmp
lcall
mov
je
jne
and
into
push
cmp
sub
hlt
or
popf
in
movsl
push
inc
aam
jl
sbb
lds
xchg
and
bnd
xchg
mov
jo
cmp
mov
inc
inc
cmp
faddl
or
jg
inc
inc
and
mov
iret
fs
addb
and
cmpsl
div
outsb
ficoml
loopne
idivb
inc
je
inc
add
cmc
sbb
inc
inc
loope
push
or
and
xchg
rol
add
jg
lcall
sub
adc
repnz
pusha
inc
aaa
sbbl
sub
shr
inc
or
and
xor
jns
in
cwtl
sbb
stos
pusha
pusha
movsl
ret
stos
movsl
mov
clc
lods
loopne
lcall
sahf
aas
mov
fwait
ds
mov
jb
push
loopne
cmp
pushf
pop
test
scas
addb
sub
shrb
imul
or
mov
lahf
in
andb
mov
mov
add
arpl
xchg
mov
pop
xchg
es
push
rol
jb
fidivl
test
loopne
and
pusha
fcomip
outsl
pushf
adcl
cld
jmp
push
hlt
dec
push
sub
add
addb
in
int
testl
add
addb
mov
pop
jmp
push
push
movsb
and
mov
scas
insl
adc
roll
inc
inc
xchg
ds
testl
pop
jns
jbe
mov
loopne
rol
fnstenv
rol
push
sbb
sub
sub
or
roll
inc
idivb
add
enter
and
pop
sahf
lret
pop
add
sarb
inc
cmp
pop
fisttpll
adcb
sub
mov
xlat
jo
outsl
mov
pusha
pusha
or
int
mov
or
add
add
adc
dec
mov
cmp
stos
mov
inc
inc
jns
and
jecxz
pusha
pusha
daa
adc
mov
cmpsl
adc
xorl
xor
mov
inc
dec
cwtl
xchg
jmp
and
push
push
mov
xor
sahf
pop
pop
mov
stc
int3
leave
std
and
add
fstl
mov
push
xor
outsl
cmc
cmp
and
imull
pushf
into
test
mov
fidivs
cmp
pop
jge
imul
clc
cmp
outsb
incb
aam
xchg
in
inc
inc
call
loopne
mov
jmp
fwait
shlb
sar
leave
sti
notl
fsubrp
cmp
pop
lods
xor
dec
ret
mov
mov
loopne
insb
push
mov
loopne
loope
insl
sarb
sbb
lods
cs
pusha
xor
jp
mov
cmp
ja
insl
xchg
sub
add
add
stos
pusha
pusha
mov
xchg
push
mov
add
and
pop
inc
mov
pop
mov
sub
scas
inc
inc
cmpsb
pusha
pusha
jl
or
rolb
add
push
aam
nop
imul
in
test
cmp
push
out
push
jl
push
mov
dec
add
addb
add
mov
movsb
pusha
pusha
sbb
out
push
in
out
mov
test
mov
imul
rol
jno
cld
call
sub
lea
andb
repz
and
subb
inc
or
cmp
loopne
rol
mov
push
out
push
mov
and
and
and
shll
rol
lea
push
inc
or
dec
cmp
lret
xor
push
ljmp
inc
ss
enter
dec
fsubrl
add
shlb
aad
jle
mov
xor
dec
rcrb
and
inc
cmp
mov
loopne
vpsrlq
mov
push
mov
push
lahf
pop
out
addb
and
pop
imul
and
mov
jno
or
and
insb
rorl
call
adc
andl
push
jne
dec
cmpsl
fmull
add
jmp
xor
loopne
sub
jle
fimull
xchg
mov
add
add
loopne
adc
pop
rorb
addb
push
addb
mov
dec
arpl
mov
pop
in
inc
push
pop
testb
je
sub
loopne
decb
mov
loope
jb
cmp
scas
jo
mov
mov
data16
cmpsb
add
ja
movsl
add
popl
xor
sarb
loopne
int3
movsl
or
and
lods
in
inc
inc
cmpsl
stos
rol
adc
pop
xor
pop
xchg
mov
pop
and
out
push
shrl
pusha
fst
pusha
mov
mov
mov
pusha
pusha
pcmpeqb
jmp
mov
mov
cld
pop
call
mov
add
mov
fcompl
push
add
cli
jae
cld
je
fmulp
cmp
cmp
and
push
xor
arpl
imul
dec
adc
adc
add
xor
call
mov
test
xchg
enter
dec
push
ja
pop
mov
loopne
and
addb
push
mov
jns
test
sub
xor
cmc
push
sahf
pop
pop
lea
lcall
ret
mov
mov
xchg
shrb
jno
addb
pop
fxch
jnp
fadd
lods
push
mov
stos
pusha
pop
lcall
mov
xchg
jmp
loope
fldl
lcall
dec
sub
and
mov
sub
pusha
jnp
mov
les
int
fimull
or
sbb
or
inc
loope
xlat
insb
jle
dec
rcll
jb
mov
and
pop
inc
fldt
arpl
andb
mov
cmp
sbb
xor
repnz
pusha
pusha
xchg
repnz
loop
mov
mov
sub
xchg
cmp
cwtl
and
xchg
push
aad
push
and
cmc
imul
rol
xchg
popa
pop
xchg
xchg
mov
add
loop
loopne
pusha
in
repz
xchg
adc
outsl
push
dec
cld
lock
xor
bound
add
mov
cmp
sub
mov
lds
jae
and
jle
jnp
pop
jge
nop
adc
push
adc
in
push
jnp
adc
adc
pusha
faddp
call
push
sub
in
xchg
mov
cmp
xor
das
or
and
rolb
loop
popf
lahf
mov
cmp
rol
arpl
add
lods
lcall
loope
fisttpll
je
pop
fsubl
jge
call
sbb
gs
and
sub
sbb
inc
cli
arpl
add
lcall
sarl
imul
adc
inc
imul
loope
mov
sti
xor
jl
push
pusha
pusha
add
lret
sbb
dec
gs
xor
mov
push
xchg
ljmp
repz
hlt
jae
dec
add
xchg
ja
pop
pop
gs
push
pushf
mov
pop
insb
test
xor
incb
nop
cmp
xor
aam
inc
stos
mov
push
and
loopne
inc
inc
add
sbb
addb
jo
and
add
repnz
js
jbe
adc
adc
imull
jnp
movsb
mov
loopne
inc
popf
push
les
sub
pusha
stos
add
sub
sub
aas
push
imul
dec
jns
outsb
outsl
or
lea
pusha
push
pop
fists
xor
divl
lahf
jae
in
jge
or
mov
loopne
adc
pusha
pusha
and
pusha
pusha
mov
imul
andb
pop
sbb
mov
loopne
repnz
or
pop
jae
push
aaa
in
into
and
xor
popf
or
repnz
mov
xor
inc
imul
pop
cmpsb
inc
inc
loopne
xchg
cmp
xor
sub
pusha
push
rol
cmpl
adc
das
mov
arpl
cld
ret
lock
jo
adcl
add
jns
mov
inc
push
add
adc
insl
adc
cmp
mov
mov
hlt
add
inc
js
sbb
inc
out
mov
and
inc
inc
fistpll
das
push
xchg
andb
inc
push
push
xor
adcl
and
call
andb
insl
pop
aas
loope
clc
pop
mov
mov
rol
mov
psllq
lea
addb
test
mov
inc
fidivl
repnz
es
and
mov
in
mov
mov
mov
adc
in
in
mov
inc
das
fisubs
call
xchg
insl
scas
pusha
pusha
scas
pusha
pusha
jnp
std
sbbl
or
loopne
inc
adc
adc
inc
mov
mov
and
inc
data16
rolb
rorb
addb
mov
dec
in
add
in
inc
shl
andb
dec
dec
cmp
mov
add
cmc
out
lock
jge
rol
jl
xchg
lds
mov
pop
enter
xor
pop
mov
and
mov
dec
jecxz
xchg
movsb
and
pop
add
or
xor
cmpsl
xor
jg
push
add
shlb
xor
fcoml
or
jp
and
fisubrs
sbb
test
loopne
loopne
stc
test
add
shrl
sbbl
pusha
pusha
lret
inc
fcmove
jnp
pop
and
fnstsw
push
mov
mov
fnstcw
inc
imul
roll
icebp
cmp
jnp
sti
cwtl
mov
je
pop
inc
push
call
and
stc
imul
push
jge
imul
or
xlat
pop
loopne
loopne
sbb
add
and
pop
sub
mov
movsl
out
ljmp
data16
mov
mov
fwait
lret
pop
std
andl
addb
pusha
pusha
loope
cmpsl
add
inc
mov
inc
outsl
leave
mov
push
mov
xchg
arpl
push
jbe
cmp
fnstenv
outsl
fistl
inc
dec
shll
loopne
jne
jl
dec
add
push
mov
insl
into
aad
in
sbb
leave
and
shlb
mov
inc
inc
mov
inc
adc
aam
jno
out
test
sub
add
mov
pop
jp
and
mov
test
adc
jb
loopne
sub
and
push
add
sub
xchg
lahf
xchg
add
add
loopne
loope
call
loopne
mov
fucomp
ret
scas
pusha
pusha
sbb
ja
addb
insb
seto
and
pop
iret
loope
pop
popa
aad
aad
sbb
pushf
cmc
pusha
adc
adc
cmpsl
sbb
add
push
or
jp
mov
inc
push
jecxz
add
lcall
mov
push
push
jmp
loopne,pn
mov
add
pushf
or
add
add
adc
cmpsb
pusha
pusha
mov
lret
pusha
pop
sub
and
nop
add
shrb
sub
jge
or
fmull
add
ljmp
inc
dec
arpl
daa
sub
shl
pop
dec
adc
out
gs
xchg
in
jle
push
dec
mov
add
seta
andb
xchg
pop
ja
inc
push
rol
incl
inc
inc
add
inc
inc
mov
jmp
inc
or
pop
shrb
mov
add
adc
inc
shrb
inc
mov
icebp
out
jne
lahf
outsb
cmp
aas
cld
mov
cmp
sar
out
fistpl
dec
xchg
pop
out
fld
sarl
inc
inc
xchg
rorb
pop
loopne
jb
or
cltd
add
push
test
rol
loope
add
stos
inc
inc
insl
jns
pop
fdivl
pop
bnd
fwait
lret
or
adcl
dec
repz
mov
andb
iret
add
fisubrl
inc
std
iret
jmp
pop
mov
push
clc
stos
rol
and
mov
sti
ds
jo
popf
lret
fcmovb
rcrb
cmpsl
or
pop
xchg
or
fwait
jmp
inc
inc
js
lret
mov
loop
xor
adc
sbb
and
andl
dec
jp
ljmp
or
and
imul
pop
stos
inc
inc
add
and
adc
fimuls
xor
in
mov
add
ja
and
loopne
and
cli
dec
shrl
scas
es
sub
pop
stos
popl
and
xchg
imul
imul
add
rcrb
dec
out
xchg
mov
xchg
nop
dec
cmp
mov
jnp,pt
pop
test
add
std
cmp
in
in
pushf
adc
cmpsb
add
test
and
jb
adc
hlt
inc
mov
fwait
dec
xchg
pop
xchg
jmp
aam
add
loopne
mov
cmp
jl
out
push
jg
dec
mov
rol
and
ss
mov
out
rol
outsb
ljmp
mov
imul
add
add
cmp
push
int
arpl
jo
inc
mov
mov
and
or
inc
call
xor
add
sub
dec
dec
jp
mov
and
add
ror
add
shlb
incl
mov
add
dec
popa
int
inc
sbb
mov
mov
mov
mov
mov
fpatan
pop
sub
pusha
pusha
fimull
cmp
and
mov
add
or
mov
mov
loope
pusha
pusha
mov
out
or
fldl
cs
scas
out
je
push
pop
dec
out
push
shll
and
pop
ret
out
sbb
mov
addb
mov
mov
mov
pop
loop
push
push
add
aas
enter
loope
push
in
ds
sbb
xor
jp
adc
cli
and
lea
sbbb
cmpsl
lock
shlb
pop
and
inc
js
sub
orb
movsl
mov
push
fldt
rol
and
jbe
vandps
fldt
pusha
pusha
imul
push
stc
xlat
jg
les
mov
lods
loopne
jns
add
dec
sbb
mov
cmp
sbb
and
sahf
xchg
add
and
sub
pusha
pusha
lret
inc
arpl
nop
cmp
addb
add
pusha
sbb
imul
xor
mov
pop
or
and
xor
loopne
add
cmp
jae
xchg
subl
add
andb
push
fs
pusha
pusha
xor
insl
sar
mov
out
rol
loopne
arpl
sarb
sub
and
mov
add
add
lret
sarl
inc
adc
fcompl
mov
loopne
jns
xchg
xor
fstps
sub
xchg
or
sbb
mov
dec
test
std
dec
mov
nop
in
cmpsl
lahf
test
movsl
rorb
hlt
push
out
jb
orl
push
cmpsl
mov
es
pusha
in
loope
addb
rcl
dec
mov
add
ret
movsl
cmp
or
in
fildl
loopne
outsl
cmp
mov
xchg
mov
aas
mov
xchg
rol
ret
imul
daa
sarl
xor
add
shlb
popa
cwtl
popf
sahf
cmp
leave
hlt
stos
fadd
int
push
sbb
loop
dec
mov
cwtl
add
xchg
jno
das
or
adc
inc
stos
sub
hlt
dec
mov
ret
mov
cwtl
push
adc
push
push
mov
push
fidivl
sahf
inc
mov
hlt
mov
sub
loopne
fnstsw
inc
std
or
mov
ret
fsub
aad
xchg
aam
add
add
sub
mov
and
push
push
mov
adc
fnsave
imul
add
add
add
or
inc
pusha
sbb
add
cmp
mov
outsb
mov
pop
mov
rol
inc
inc
scas
inc
mov
loopne
mov
push
mov
fisttps
jge
jp
cmp
and
and
push
loopne
fnstcw
icebp
movsb
add
inc
mov
outsb
or
mov
mov
jg
inc
shll
in
sub
mov
dec
movsl
stos
scas
mov
inc
aas
mov
inc
inc
sbb
mov
rolb
scas
mov
addb
inc
inc
cmp
ficompl
adc
cld
push
aas
int3
xchg
add
pushf
or
push
mov
loopne
neg
inc
sahf
ds
sub
shlb
pusha
pusha
out
add
out
sbb
jle
fcmovu
gs
rorb
add
cli
push
mov
loopne
jle
or
rorb
repz
inc
syscall
aas
add
mov
pusha
sbb
loopne
add
inc
add
cmp
outsl
mov
xchg
stc
int
mov
xchg
sbb
rol
mov
and
inc
inc
sub
mov
out
and
shlb
push
xchg
in
add
icebp
mov
movaps
mov
jae
iret
lds
mov
fildll
es
pusha
inc
ret
rol
insb
cmp
and
pop
inc
daa
lcall
adc
cmc
add
and
jle
addb
xlat
movsb
rol
in
bound
cmc
movsb
rol
aad
push
insb
movsl
lret
dec
and
loopne
inc
inc
ja
mov
jle
mov
sub
loopne
or
mov
cmp
inc
inc
gs
pop
stos
add
jbe
mov
decb
mov
or
shl
add
push
inc
movb
inc
inc
sbb
and
inc
prefetch
pusha
movl
adcb
outsb
int3
mov
add
and
cmpsb
and
roll
test
add
dec
jg
mov
add
and
and
inc
addl
leave
sub
jno
inc
inc
pop
roll
lcall
add
imul
mov
andb
adc
int
inc
mov
ds
stos
push
stos
rol
dec
sub
add
loop
adc
aad
add
rol
nop
clc
fisttpll
and
inc
fdivl
mov
add
jg
mov
or
loopne
adc
jge
movsb
loopne
into
rclb
mov
lods
rol
xchg
shlb
inc
and
loope
test
mov
add
js
mov
das
test
inc
daa
outsl
aaa
inc
jge
loopne
jmp
lret
and
shrb
dec
test
and
loopne
imul
pop
add
or
and
add
sbb
repz
xchg
idiv
addr16
scas
ljmp
adc
stos
loope
sub
incl
mov
jo
out
xchg
scas
xor
add
mov
subb
xor
nop
mov
mov
cltd
push
loopne
mov
adc
mov
sqrtps
sti
xor
pop
test
addb
push
ret
jae
jge
sbb
bound
lret
fwait
lods
fstpl
or
jns
and
shlb
sbb
addb
setle
movsl
mov
or
shll
ret
jle
fs
loopne
in
outsl
jp
js
lcall
cld
cmc
cmp
sahf
into
xchg
jno
mov
add
imulb
add
dec
sub
inc
pusha
jnp
sbb
jmp
shrl
push
dec
jp
mov
movl
clc
mov
mov
mov
and
inc
jbe
call
scas
int
popa
scas
push
gs
stos
int
faddl
repnz
cmpsl
push
mov
pop
sbb
scas
out
mov
and
add
adc
gs
mov
mov
mov
add
ret
adc
addb
fs
xchg
jns
xchg
adc
pop
sbb
add
fildl
iret
inc
xchg
add
push
sub
sbb
pusha
pusha
push
je
jge
cld
mov
decl
mov
mov
xor
and
loopne
push
mov
inc
daa
test
add
cmpl
xchg
leave
xchg
fwait
lahf
and
add
adc
pop
or
clc
dec
inc
xchg
fsubl
and
pop
mov
sbb
xor
add
mov
mov
cmp
sbb
das
ret
clc
loopne
loope
push
pusha
pusha
pop
test
cmp
mov
lods
add
stc
dec
popf
push
pushf
jbe
push
lock
cmp
pusha
pusha
add
pusha
push
xor
out
setle
mov
or
int3
pop
mov
loopne
popf
and
mov
jecxz
mov
jmp
repnz
xlat
andl
sar
add
jl
ja
push
es
inc
rcr
shrb
mov
and
in
jb
popl
test
rolb
pushf
popa
sub
loopne
push
or
pop
dec
ficoml
dec
rorb
xchg
and
loopne
inc
or
add
xor
and
and
xchg
xor
push
inc
ret
sbb
mov
pop
mov
iret
inc
enter
sarl
xchg
in
repz
add
push
inc
add
call
ret
addb
and
cmp
or
mov
mov
imul
adc
and
xchg
dec
dec
jns
in
mov
pop
movsb
loopne
movsl
das
rcrb
cwtl
sti
xchg
sti
cld
pop
sbbl
mov
xchg
cmp
pop
inc
and
push
addb
insb
cmpsb
add
out
dec
call
loopne
xchg
rolb
xor
or
add
dec
add
mov
out
dec
add
add
dec
xor
in
shll
loopne
add
mov
adcb
ret
into
iret
add
inc
movsb
mov
pop
aas
mov
or
cmp
mov
loopne
rol
mov
mov
aad
and
aaa
sahf
pushf
outsl
outsl
or
mov
and
jb
fnstcw
pusha
pusha
dec
fcmovu
and
lds
loopne
iret
jbe
jns
mov
icebp
mov
and
sub
repnz
pop
pusha
shl
aaa
movsb
add
cwtl
sbb
xor
fbstp
xlat
mov
push
dec
cltd
or
add
mov
aaa
pop
in
add
jecxz
adc
lcall
adc
dec
hlt
pop
std
mov
aaa
cmp
pop
leave
das
add
fucomi
or
pusha
or
mov
rorb
xlat
shrl
addb
push
sub
inc
jbe
adc
mov
mov
loopne
jp
mov
xchg
faddp
rorl
fmuls
xchg
cmp
inc
sbb
push
jge
mov
and
jg
notl
fnstsw
mov
sub
and
inc
pop
mov
jnp
pushf
cs
inc
fmull
js
pop
mov
out
or
adc
mov
das
xor
push
add
stos
mov
aas
idivb
repnz
loopne
mov
jns
pusha
pusha
repz
add
aad
mov
add
dec
das
and
cli
mov
jecxz
or
and
dec
xchg
and
shl
dec
in
jno
insl
push
les
jnp
pop
or
add
add
xchg
xchg
out
xorl
pop
cmp
push
add
xor
jmp
jno
fisubrl
data16
mov
add
loope
pop
inc
xchg
rcll
cmpsl
outsl
sbb
ljmp
rclb
addb
lods
loopne
popf
lahf
or
add
and
xchg
and
mov
adc
into
xchg
cltd
inc
xchg
or
test
add
jo
cmp
es
inc
jb
fstpt
mov
sub
mov
jae
data16
pusha
pusha
xchg
iret
lods
jo
ljmp
inc
sbb
inc
inc
or
rolb
mov
pop
jne
and
bound
jg
push
into
jmp
mov
and
jge
ret
jae
add
pop
clc
js
or
adc
jns
and
orb
rol
xchg
rol
jae
shl
addr16
mov
mov
mov
loopne
andl
xchg
jecxz
push
dec
mov
adc
adc
xchg
mov
jb
loope
cwtl
jge
leave
sub
leave
jbe
std
aas
xor
addb
testb
mov
rcrl
jnp
add
clc
xor
mov
and
adc
int3
sub
cli
pop
push
ret
aad
push
movsl
lcall
sub
test
and
push
sub
shl
mov
addl
fidivl
pop
add
flds
sarl
addb
push
pusha
pusha
xchg
xchg
lods
push
pusha
pusha
jle
mov
jg
mov
insb
outsl
add
xchg
pop
mov
mov
nop
push
pusha
pusha
aas
mov
lret
ja
pop
push
aas
mov
mov
lock
imul
jo
sub
sbb
into
mov
loopne
movsl
cmpsl
int
dec
xchg
cli
and
and
xchg
xor
test
mov
inc
addb
pop
mov
lret
out
and
ljmp
fmuls
push
mov
pop
add
inc
into
out
dec
or
lret
or
and
mov
rol
mov
addb
sbbb
cmp
dec
stos
add
jno
pop
adc
cwtl
fs
in
mov
jg
cs
pusha
aas
adc
xchg
dec
mov
inc
dec
or
pop
out
or
rclb
inc
ljmp
test
adc
mov
add
xchg
loopne
fdivs
xchg
call
add
mov
push
rol
loope
dec
cmpsl
pop
mov
js
sbb
inc
pop
cmp
ror
add
rclb
lea
pusha
je
repz
xchg
mov
and
or
and
inc
inc
in
mov
adc
jnp
push
loopne
icebp
pop
sub
rolb
rol
cs
pusha
aad
inc
inc
imul
add
sti
dec
imul
xchg
lds
dec
insb
pop
icebp
in
push
lcall
add
mov
sbb
jne
movsl
inc
popf
pop
mov
inc
pop
pop
lock
divps
out
aam
ljmp
addb
push
mov
repz
pop
dec
xchg
jmp
ss
clc
xchg
shr
jo
sub
push
jne
lahf
mov
push
aas
addb
rol
mov
push
mov
add
jle
out
movsb
mov
mov
lods
add
scas
mov
rolb
mov
add
ret
mov
enter
lcall
mov
jmp
or
loope
xchg
sub
loopne
mov
hlt
fwait
mov
xchg
test
cmp
cltd
xchg
imul
jae
repnz
push
add
rcrl
loopne
sub
loopne
outsb
sub
mov
sbb
add
sub
jmp
adc
loopne
hlt
iret
mov
test
sbbb
nop
test
and
aas
cli
and
dec
mov
aaa
cmpsl
push
test
jl
out
inc
shl
mov
ret
add
repnz
repnz
pop
add
pop
cmp
fsub
daa
movl
sub
mov
pusha
pusha
jo
nop
inc
xlat
and
and
sub
inc
fs
out
sub
inc
testb
shlb
lods
jg
pusha
pusha
stc
sub
and
fdivl
xchg
pop
adc
lcall
sbb
jmp
lahf
sub
and
rolb
add
lret
les
sub
out
lea
pop
das
inc
cltd
ds
dec
data16
cmpsb
loopne
in
pop
pop
bound
cmp
sar
jne
rorb
das
xor
roll
pop
int
addl
mov
and
lret
pusha
cwtl
sbb
pop
ja
pop
movsl
mov
mov
in
clc
cmp
jle
rol
jbe
rol
cmp
and
push
mov
add
pop
nop
lcall
mov
shlb
enter
inc
incb
adc
xchg
addb
xchg
push
jp
mov
test
sarb
lcall
xchg
fnstsw
int3
daa
pop
data16
mov
and
mov
sbb
or
mov
cmp
fisubrs
addb
or
mov
jmp
pop
pop
loop
add
pop
sub
hlt
shlb
addb
jnp
ss
dec
call
fs
mov
and
jns
xchg
lods
aas
xchg
cmpsl
sub
loopne
add
push
jp
shll
js
jnp
or
and
andl
jecxz
arpl
stos
mov
add
loopne
cld
mov
loop
lods
addb
clc
inc
dec
and
rcr
and
loopne
mov
movl
add
mov
mov
and
xor
addb
lock
mov
fildll
loopne
pusha
pusha
inc
insl
adc
jg
and
mov
lods
mov
pusha
out
push
cld
sti
pop
mov
inc
inc
mov
addb
mov
inc
and
rcll
mov
sub
andb
and
sarb
addb
rol
jnp
add
test
inc
mov
xchg
jmp
mov
bound
test
std
mov
ljmp
inc
idivl
inc
inc
movsl
dec
mov
out
inc
mov
mov
add
inc
outsb
push
jge
jmp
ror
adc
rol
sbb
int
clc
mov
addb
mov
and
mov
pop
sub
loopne
imul
xchg
dec
mov
and
pop
mov
pusha
pusha
xlat
repz
cmp
pushf
aam
popa
xor
out
movsl
test
sarb
and
xchg
or
add
loopne
ljmp
mov
inc
ror
push
mov
test
shlb
and
fs
shl
rol
inc
pop
inc
int
sub
pusha
js
notb
xchg
je
lcall
ret
icebp
sub
pop
rcll
and
mov
mov
out
outsb
push
nop
test
mov
loopne
ss
cmp
mov
or
loopne
lds
cwtl
mov
push
xchg
pop
mov
jb
ficoms
inc
inc
add
lds
mov
mov
push
iret
in
push
adc
stos
mov
jns
lcall
pop
sahf
bound
add
mov
in
daa
xor
mov
popa
fdivrs
mov
shlb
sbb
and
dec
ja
das
test
loopne
cmpsb
pusha
pusha
add
add
mov
mov
adc
enter
add
adc
sub
sub
and
push
add
mov
push
cmp
and
xchg
dec
sbb
lock
push
xor
or
and
cli
cmpsb
inc
inc
pushf
mov
dec
loop
add
cwtl
cmp
repz
inc
xchg
push
jmp
sub
int
add
rorb
mov
and
ss
adc
push
popf
mov
pusha
pusha
mov
lock
cltd
dec
xchg
mov
mov
push
mov
push
sarb
or
and
cwtl
pop
sbb
and
stc
mov
out
sbb
shll
xchg
dec
mov
clc
scas
mov
and
loopne
ss
jnp
call
rorl
lret
loope
mov
mov
mov
shrb
addb
push
imul
rol
or
addb
fnop
leave
mov
cmc
xchg
test
inc
sbb
pop
out
cmp
lcall
sbb
xor
mov
stos
arpl
and
in
pusha
pusha
push
inc
inc
fs
push
int
cli
cs
pusha
aad
push
divl
popa
ret
icebp
enter
cmp
sbb
rcrb
shr
and
and
or
cmc
std
lods
mov
movsl
pushf
mov
sub
rolb
flds
icebp
aam
push
into
bound
jb
roll
jl
jl
mov
sarb
mov
enter
xchg
pop
imul
and
xchg
dec
scas
inc
inc
xlat
mov
mov
cs
divl
cli
fisttps
rol
add
aam
out
sub
xchg
std
fcmovnb
pop
fwait
test
inc
dec
mov
add
add
fs
addb
loopne
fidivrs
mov
les
and
inc
jmp
lcall
cmp
aad
xchg
sbb
adc
xchg
lock
pop
ja
in
iret
call
push
lret
mov
fildll
loopne
push
jnp
stos
pop
push
mov
loope
addb
mov
mov
jnp
lock
jg
fbld
pusha
pusha
enter
add
fldl
mov
jg
ljmp
add
andb
inc
inc
mov
mov
and
mov
mov
fcmovb
push
dec
sbb
ljmp
mov
lea
add
sbb
aas
andb
hlt
cmp
bound
sub
stos
add
rcrl
nop
sbb
outsl
and
inc
xor
jge
nop
jge
enter
xchg
xchg
xor
fs
in
or
pusha
pop
fwait
lods
mov
shlb
lods
pusha
pusha
sahf
call
pop
inc
push
cmc
push
out
dec
mov
leave
fcmovne
inc
gs
cmpsl
call
cmpl
lods
ljmp
cli
add
mov
sub
adc
loope
pusha
pusha
xchg
repnz
jne
jb
adc
or
mov
xchg
dec
adc
ds
hlt
aas
into
add
movsl
andb
les
add
in
fiadds
and
scas
clc
add
pusha
inc
cmp
shl
xor
xchg
mov
mov
adc
and
addb
pop
nop
pop
mov
inc
xchg
imul
repnz
adc
jae
and
int3
add
subb
addb
outsl
pop
mov
into
jo
fstpl
inc
and
mov
adc
repz
pusha
inc
xchg
inc
mov
pop
pop
lods
jne
loope
shlb
icebp
mov
sarl
inc
add
sbb
or
into
lock
or
add
addb
scas
loopne
repnz
add
pop
push
xchg
cld
test
and
mov
add
mov
in
lds
lock
addb
pusha
pusha
test
mov
movsb
pusha
pusha
insl
ret
in
adc
pusha
pusha
pop
mov
add
add
ret
inc
push
int3
sub
mov
mov
cmp
out
push
cli
lret
mov
add
stc
arpl
pop
or
and
add
and
daa
mov
nop/reserved
iret
push
shl
push
or
add
pop
adc
mov
sub
push
int
mov
and
out
pusha
pusha
or
mov
add
jl
addb
fldenv
rcrl
sbb
je
dec
iret
add
loopne
inc
out
mov
dec
push
clc
int3
and
sub
mov
mov
loopne
rol
int
movsl
xor
int3
cmp
mov
xor
sbb
adc
mov
inc
inc
cmp
jne
loopne
das
push
add
mov
mov
ret
dec
cmp
add
call
bound
mov
lds
popf
lret
or
loopne
pop
mov
xlat
xor
jne
pusha
pusha
fstl
mov
xor
addb
hlt
add
movsb
pusha
pusha
mov
nop
mov
xor
mulb
ds
daa
jg
mov
and
out
mov
lret
pop
pop
lea
loopne
jbe
fwait
fs
lods
mov
popa
mov
rcr
fstl
hlt
sbb
insl
test
loopne
or
loop
loopne
cmp
or
add
sbb
std
jl
mov
add
dec
adc
lea
sub
add
dec
daa
push
add
ja
arpl
decb
sub
loopne
repnz
loopne
popf
imul
cwtl
loop
or
movsb
inc
inc
shlb
movsb
rol
movsl
ds
pusha
les
pushf
xlat
add
inc
loope
rcl
xlat
mov
fwait
or
jne
xchg
outsb
popa
aaa
rorb
pusha
pusha
pop
cmp
fstps
fisubrs
cld
jge
mov
add
xchg
in
das
inc
mov
addr16
jo
loopne
adc
addb
xor
out
scas
jb
mov
rol
outsl
push
mov
xchg
and
mov
mov
ret
inc
inc
ret
movsl
mov
out
cmp
dec
mov
hlt
in
lods
inc
inc
push
cmp
mov
pusha
pusha
or
loopne
stos
and
ret
push
rol
xchg
jmp
cmp
or
mov
xchg
rorl
and
popf
lea
ret
and
mov
push
dec
testl
mov
xchg
cld
jno
out
mov
inc
dec
mov
jbe
dec
sbb
arpl
add
arpl
jg
lcall
loope
ja
loopne
scas
add
lcall
cmpsl
stos
mov
loopne
add
add
push
lock
adc
mov
add
sti
iret
cmp
mov
push
call
push
pusha
pusha
mov
push
bound
inc
fists
rol
loope
ret
outsl
inc
xor
insl
stos
add
push
sub
lods
dec
xchg
xor
mov
xlat
inc
aas
jnp
lret
add
and
iret
inc
js
mov
dec
adcl
inc
inc
data16
sub
and
aas
mov
rorb
and
test
inc
clc
jl
and
push
add
inc
imul
adc
push
mov
sarb
sbb
jmp
push
insl
cmpsb
inc
inc
inc
sbb
and
enter
lcall
js
sbb
mov
inc
cmp
inc
xor
loope
sub
repnz
and
mov
mov
xor
and
mov
inc
adc
or
xchg
loopne
mov
loop
push
inc
imul
xor
test
pop
andb
outsl
addb
cmp
divb
int3
add
loopne
addb
cmp
mov
add
and
shl
xchg
sbb
imull
loopne
dec
ret
sub
and
insb
adc
mov
adcb
dec
mov
mov
data16
mov
dec
std
mov
pop
popf
mov
add
sub
jns
leave
jae
sti
outsb
inc
cmp
rol
push
push
lret
jle
push
mov
cltd
xchg
pusha
xor
mov
add
pusha
repz
shl
jnp
cli
mov
shr
or
add
loopne
mov
mov
fstpl
sub
jmp
jge
outsb
dec
icebp
lods
addb
add
loopne
jmp
cmp
rep
loop
addb
and
mov
loopne
push
scas
lret
mov
lods
loopne
push
and
jo
pusha
pusha
cmp
mov
xchg
jge
loopne
pushf
jge
sti
jl
jb
pop
and
jno
sub
loopne
mov
loopne
adc
inc
push
adc
mov
rcl
inc
addl
mov
push
cmp
inc
int3
mov
outsl
sbb
shll
push
xchg
fisttpl
adc
testl
clc
and
inc
mov
push
jl
rorl
sbb
mov
push
push
stos
loopne
xor
xchg
or
and
sub
mov
movb
inc
aas
clc
int
cmpsl
adc
and
out
xchg
xchg
xchg
mov
stos
and
fists
cltd
jne
xor
add
jb
xor
pop
pop
outsb
pop
faddl
mov
les
cmp
arpl
popa
fs
scas
std
repnz
sub
sbb
shl
pop
fs
mov
sbb
lret
loope
rorb
imul
and
cpuid
and
dec
or
pusha
pusha
in
lea
jne
lret
jl
in
sti
cmp
mov
pop
mov
dec
adcl
add
sti
ljmp
sbb
adc
jno
lods
addb
daa
or
cmp
sbb
and
leave
mov
fdivs
mov
inc
xlat
xor
cmp
mov
pusha
pusha
ljmp
mov
or
adc
int
cmp
add
mov
lods
rol
lock
sbb
mov
insb
pop
addr16
mov
and
jmp
mov
xor
cmp
mov
mov
jge
loopne
lds
loopne
mov
loopne
inc
inc
js
aaa
stos
popf
pop
xchg
push
or
cmpb
sbb
mov
ret
nop
mov
mov
mov
add
dec
popf
inc
inc
jmp
add
lret
loopne
dec
push
inc
inc
loope
mov
xor
enter
adc
mulb
adc
jnp
in
pusha
mov
cmp
imul
and
jg
sub
and
rol
addb
fstpt
out
stos
mov
push
jo
pop
push
iret
inc
imul
cmpsl
les
add
cmpl
fsubrs
addb
fidivrl
mov
fisttps
and
pop
int3
lahf
rolb
lcall
mov
test
in
push
aad
out
add
rcll
push
inc
inc
lahf
inc
pusha
sub
icebp
sub
shlb
scas
rol
fstps
lahf
daa
push
inc
inc
test
and
das
popf
lea
mov
inc
popl
loopne
cmp
mov
out
fmull
inc
inc
add
pusha
loop
and
mov
in
ret
or
add
lods
dec
int3
adc
cmpsb
and
mov
lods
leave
or
cwtl
push
xchg
mov
sbb
pop
cmp
aaa
and
js
mov
ja
add
add
int3
stos
inc
lret
bound
and
nop
mov
adc
inc
jp
hlt
xor
mov
int3
sti
movl
jae
test
mov
stc
mov
or
adcb
popa
out
ljmp
pusha
pusha
mov
les
and
inc
and
shl
fisttps
mov
addb
and
and
add
out
jnp
lret
setne
testl
sbb
dec
xlat
daa
mov
ljmp
mov
imul
outsl
xor
loopne
notl
shrb
mov
loop
cmp
sahf
out
jb
sarl
addb
rcrb
lret
adc
pushf
inc
aam
or
stc
daa
jmp
cli
and
sbb
mov
notl
cmpsl
xor
mov
push
lcall
mov
loopne
mov
iret
gs
lret
mov
add
popf
or
loopne
fidivl
sub
sarb
sub
gs
loopne
shrb
cmc
test
inc
scas
pushf
fwait
in
inc
add
mov
or
ror
mov
nop
sbb
test
dec
sbb
into
sub
add
aas
jbe
pop
sahf
add
mov
mov
rol
pop
xchg
es
jecxz
std
mov
inc
inc
mov
loopne
mov
loopne
and
and
inc
movsb
inc
inc
xchg
movsl
mov
mov
and
cmc
xor
mov
inc
sub
repnz
mov
dec
cwtl
fidivs
adc
cmp
add
and
into
shl
test
loopne
add
sub
sbb
cmp
or
imul
push
add
mov
or
fwait
adc
and
and
mov
xchg
xchg
jmp
adc
or
sti
sub
pop
jae
add
add
aam
loopne
and
loopne
addb
and
rcl
ret
jbe
test
ficoms
aad
mov
andb
pusha
lock
cld
and
add
push
cmpsb
loopne
inc
shlb
pop
dec
inc
fs
pop
mov
sbb
or
popf
outsb
addb
and
add
jb
enter
rclb
xchg
add
and
cwtl
push
loope
mov
add
test
or
jbe
ja
pop
addr16
int
mov
mov
leave
or
sub
xchg
lret
pusha
pusha
in
cmp
addb
pusha
push
dec
mov
addb
sbb
pop
sub
pusha
adc
cmp
xchg
es
pusha
iret
scas
and
and
mov
sbb
rclb
pop
out
addr16
xlat
sbb
and
rcl
jp
fidivl
pop
or
ljmp
aaa
outsb
and
and
cmpsl
dec
addr16
stc
pop
push
sbb
cmp
in
in
movsl
insb
and
xchg
add
std
and
and
sbb
das
jae
int3
mov
scas
addb
jbe
and
add
loopne
ja
jp
sbb
push
xor
lret
adc
fwait
lcall
lahf
lock
hlt
inc
shlb
loopne
sub
repz
xor
rcrb
aad
dec
cmp
mov
loopne
lret
pop
dec
hlt
lds
ret
loopne
daa
jne
xor
fbstp
test
add
inc
mov
or
mov
inc
mov
pusha
jge
repnz
dec
mov
dec
popf
push
or
mov
and
lock
mov
js
int3
push
cltd
jno
imul
mov
rol
aaa
cwtl
or
dec
sarb
sub
pop
adc
je
sbb
rol
add
sarb
add
in
mov
add
mov
test
test
push
sti
adc
and
dec
dec
push
jmp
test
aam
mov
add
xchg
mov
pusha
mov
jmp
inc
inc
shl
lods
pusha
pusha
and
das
andb
add
rcrl
add
pusha
in
mov
cmp
inc
lods
and
add
ds
mov
inc
inc
inc
xchg
test
mov
pusha
cmp
xor
pop
lods
pusha
pusha
sarl
faddl
clc
mov
nop
sbb
sbb
nop
jecxz
and
and
adcb
lcall
loopne
xchg
push
loopne
mov
rcrb
inc
xor
xor
and
mov
add
mov
loopne
xchg
nop
daa
pop
fwait
jno
cwtl
sub
shlb
arpl
bound
std
or
daa
cmp
add
test
xor
mov
mov
scas
loopne
popf
cwtl
inc
xor
in
mov
loopne
dec
mov
and
xor
mov
lock
andb
int
sti
cltd
ret
mov
jno
and
xor
loopne
insb
sbb
add
shr
popa
cltd
push
aaa
les
imul
sub
ror
stos
mov
mov
add
pop
in
sbb
clc
pop
xor
inc
lods
add
cli
add
or
xchg
dec
enter
mov
pop
pop
xor
lea
outsb
sub
cmp
mov
inc
inc
mov
shlb
push
roll
pop
and
rol
push
lea
loopne
adc
mov
adcb
sub
inc
inc
sub
addb
pop
or
jmp
jns
loop
xchg
jge
addb
mov
sub
dec
adc
orb
push
push
mov
sarl
pop
into
fsubrl
mov
mov
pop
shll
or
loopne
mov
jecxz
jbe
ljmp
or
add
imul
inc
inc
pop
dec
sbb
add
sub
add
push
sahf
and
sarb
loopne
xchg
dec
ja
pop
sar
mov
je
cmp
pusha
not
jns
addb
mov
cli
movsb
pusha
pusha
out
xor
pop
mov
fnstsw
cld
push
cmc
iret
dec
addr16
jb
scas
inc
xor
sti
sub
loope
imul
xchg
xchg
push
fwait
andb
jle
rol
sbb
or
dec
mov
mov
rol
fnstsw
mov
rcll
bound
pusha
pusha
std
loopne
rol
aad
sub
add
aam
in
add
add
divb
jbe
cltd
test
push
push
aas
lea
jns
mov
add
pop
jp
mov
lock
and
mov
and
adc
or
popa
jno
xchg
and
mov
addb
adc
and
add
inc
fiadds
scas
addb
loopne
test
loopne
cmc
popa
test
sub
and
add
pop
ret
pop
mov
cwtl
xor
pushf
push
xchg
sub
rcll
sbb
repnz
add
jae
lret
lods
and
in
or
dec
not
xchg
lret
cmpsl
xor
push
int
addb
in
push
push
aaa
insb
xchg
in
stc
cmovp
pop
pop
orl
orl
pop
pop
mov
andl
jnp
mov
popf
cli
mov
add
js
fisubl
insl
mov
and
arpl
ret
iret
cmp
imul
add
loopne
lret
loopne,pn
dec
and
loopne
xor
and
lods
pusha
pusha
inc
icebp
pop
ds
push
ljmp
rcrb
addr16
aaa
mov
inc
push
add
pop
cmp
call
sbb
push
rol
add
pop
mov
rol
adc
cmp
inc
mov
inc
lods
stos
out
mov
add
adc
addb
inc
inc
lahf
pop
fstl
test
add
or
add
ret
xchg
xor
loopne
xor
fwait
iret
test
addb
bound
int3
scas
pop
lcall
jecxz
push
inc
mov
xchg
sub
mov
fildll
and
notb
inc
jo
add
sub
and
mov
sbb
aaa
jle
and
gs
push
bound
outsb
push
outsb
lods
popf
adc
ja
push
fsubrl
loopne
pop
cmpsl
arpl
and
mov
rorl
lods
fdivs
dec
push
incl
sub
jne
or
xchg
mov
push
cmp
push
cltd
scas
pusha
pusha
sbb
rol
stc
jp
inc
sub
mov
add
loope
xchg
adc
pusha
inc
int
rorb
xor
push
cli
dec
in
and
in
xchg
aad
mov
cmp
sarl
aam
mov
mov
stos
pusha
pusha
fwait
cmp
addb
sti
test
dec
cltd
push
icebp
jg
xchg
xchg
jbe
insl
or
fcmovu
les
rorb
test
add
movsb
addb
and
add
nop
add
adcb
sbb
loop
sbb
loopne
and
andb
loopne
ret
outsl
jl
xor
aad
pop
cld
sub
and
adc
xchg
lret
loopne
mov
ljmp
pop
cmc
stos
out
addb
inc
mov
add
mov
mov
adc
mov
ss
shrb
mov
loopne
arpl
add
nop
sbb
movsb
mov
mov
jecxz
and
and
cli
jno
gs
outsl
imul
add
cmp
loopne
pop
dec
aas
outsb
xchg
test
loopne
rorl
add
cli
enter
cmp
add
jp
ja
mov
stos
loopne
jae
pop
daa
add
push
xchg
shlb
lret
andb
das
mov
std
shl
adc
aam
mov
bound
mov
rol
outsl
inc
cli
jnp
pusha
pusha
jp
xor
lcall
jnp
inc
in
mov
loopne
dec
pop
roll
loopne
insl
push
pop
das
or
and
xchg
jl
daa
xchg
das
cmp
or
and
cmp
pop
xchg
push
loopne
push
push
inc
inc
out
fsubl
xchg
jns
push
adc
pushf
jnp
lds
cmp
pushf
mov
jle
ret
inc
cmc
arpl
addb
push
lock
push
icebp
jnp
inc
lcall
rol
inc
add
loopne
sub
fstl
mov
pop
xchg
fistpll
add
push
mov
xor
mov
sarb
mov
out
xchg
xor
cmp
sbb
mov
and
ret
mov
leave
sbb
aam
addb
leave
adc
pusha
pusha
pop
pop
sub
loopne
clc
je
dec
aam
and
dec
sahf
clc
jne
mov
rolb
into
mov
and
add
xorb
mov
in
movsl
and
dec
mov
outsl
stos
addb
xor
inc
sbb
in
mov
mov
push
insl
addr16
mov
push
jbe
aam
cmpsb
inc
inc
jnp
fstps
enter
scas
loopne
jno
pusha
bound
pusha
pusha
test
add
jl
fmul
cld
idivl
sub
and
scas
rol
mov
mov
mov
aas
jns
jnp
je
inc
ret
cmp
or
mov
lods
inc
inc
sbb
arpl
das
lock
icebp
xchg
xchg
add
shlb
ljmp
push
insb
enter
and
and
negl
cmpsb
pusha
pusha
mov
test
fwait
push
and
jp
and
add
aam
and
out
imul
mov
repz
loopne
std
mov
stos
sbb
lret
icebp
dec
adc
imul
inc
inc
out
lods
rol
fsubl
push
pop
dec
xchg
loopne
mov
push
add
ds
add
fcmovnbe
mov
sarb
shlb
jecxz
inc
inc
dec
and
add
mov
push
mov
pusha
mov
out
dec
mov
xor
pushf
pop
xor
insl
loopne,pn
into
or
fwait
xor
cwtl
fdivl
pop
cmpsb
rol
mov
inc
fildl
addb
and
mov
int3
sub
in
aad
das
adc
pop
aad
xchg
mov
add
lds
push
cli
fwait
push
lock
fisttpl
pushf
inc
push
jl
lcall
repnz
loopne
mov
loopne
andb
out
fs
mov
dec
inc
jb
pusha
cli
or
and
dec
sbb
imulb
mov
and
and
ljmp
cmpsl
adc
divb
and
and
or
fwait
dec
xor
hlt
pop
adc
mov
in
fs
pop
mov
pop
pop
out
push
ds
adc
ds
jno
leave
addb
xchg
adc
mov
shr
or
stos
xor
addr16
enter
mov
addb
xor
xchg
aas
loopne
push
repnz
xchg
iret
fnstsw
xor
inc
leave
loopne
inc
inc
xor
popa
in
pusha
pusha
test
pusha
in
scas
loopne
movsl
lahf
inc
sub
pop
sbb
mov
cli
or
shr
cmpsl
shrb
rol
faddl
int
ror
in
mov
pop
sub
fadds
negl
add
movsl
inc
dec
mov
adc
cli
xor
test
inc
daa
mov
inc
inc
and
stos
clc
jo
ret
fwait
insb
adc
jle
and
pop
imul
fdivrs
adc
and
push
jmp
je
loopne
cmp
ret
inc
sti
adc
pop
mov
push
addb
mov
pusha
pusha
pop
aad
xchg
dec
xor
nop
mov
adcb
in
cmp
pusha
pusha
add
push
pusha
pusha
cmp
push
clc
and
adcb
scas
add
dec
xor
out
lock
xor
add
add
jg
sahf
inc
push
pop
mov
fsub
insb
and
rcr
push
gs
lods
and
movsb
pusha
pusha
push
inc
inc
mov
pop
iret
ja
cmp
xchg
ret
pop
aad
pop
ja
push
pusha
pusha
test
sar
mov
mov
mov
lret
mov
pop
mov
and
loopne
and
mov
mov
add
jo
xchg
loopne
inc
inc
push
mov
pcmpgtw
addb
loopne
in
rolb
add
in
add
mov
sbb
pop
int
addb
out
inc
inc
cmp
je
jmp
insl
ret
imul
repnz
jae
mov
loopne
jbe
enter
outsl
jnp
mov
pusha
pusha
dec
loopne,pn
clc
insl
dec
jne
ret
fdivrl
out
in
jle
test
lcall
pusha
pusha
xchg
movsb
rol
scas
arpl
xor
int
mov
ret
fs
lods
pcmpeqw
je
add
push
addb
pop
xor
push
out
bound
and
push
and
ss
cmc
out
repnz
pusha
repz
mov
xchg
js
addb
test
imul
lods
push
pop
lcall
xchg
imul
cwtl
mov
and
fwait
mov
dec
popf
xlat
cmp
das
or
in
mov
pusha
pusha
and
and
lahf
dec
push
pusha
mov
pusha
pusha
add
insb
xor
out
es
pusha
test
sti
cmp
sbb
mov
push
xor
insl
xlat
lret
cmp
int3
rcl
loopne
cmpsl
dec
mov
adc
mov
sub
imul
pop
add
dec
add
mov
mov
xchg
xor
cmpsl
lea
mov
int3
mov
mov
add
add
dec
push
cmp
mov
cmpsl
mov
mov
shll
test
and
popf
xor
sbb
in
mov
pop
popa
sub
jo
pusha
pusha
pop
out
mov
xchg
sbb
push
insl
xchg
cmovo
popf
xchg
dec
inc
fdivl
inc
test
sbb
push
shl
push
jmp
add
xchg
in
loope
loopne
daa
and
mov
sub
loopne
stos
mov
sub
loopne
inc
xor
loopne
push
ret
sbb
jne
push
addb
push
push
xchg
dec
test
pusha
mov
into
out
xor
aas
testl
rol
andb
imul
push
je
and
and
sbb
loopne
jp
or
and
mov
popa
xor
push
pop
loop
insl
jae
mov
insb
sub
out
cmp
negb
mov
or
add
add
dec
mov
push
lea
ret
pusha
or
pop
lcall
daa
int3
pusha
in
loopne,pn
movsl
adc
add
je
push
mov
lods
add
std
add
notb
jae
lock
mov
addb
xor
loopne
inc
lods
and
idivl
xor
jne
in
and
in
and
frstor
adc
inc
jb
push
addr16
mov
pop
mov
je
ret
fistl
mov
cmpsb
mov
loopne
fiaddl
sbb
sarb
sub
loopne
cli
icebp
jns
and
je
pusha
xor
dec
xlat
push
arpl
xor
es
inc
incl
inc
mov
add
lret
mov
loope
cmc
pusha
add
xor
hlt
mov
mov
loopne
dec
or
inc
mov
mov
and
and
pop
sub
push
jns
mov
movl
shrb
cmpsb
mov
shlb
daa
lds
ret
mov
add
pusha
pusha
fcompl
lret
fcomps
pop
pop
aaa
and
inc
inc
cmp
jb
test
sbbb
movsl
fnsave
cmp
into
lret
pusha
pusha
dec
push
movsb
pusha
pusha
xor
cmp
test
and
mov
mov
jne
in
lret
rol
pop
mov
shlb
pop
enter
scas
and
insl
clc
add
or
das
test
pusha
dec
or
and
add
fsubs
add
jne
push
aaa
pop
in
push
fsubs
shll
add
int3
fiaddl
add
int3
lcall
jge
ret
or
adc
push
les
xorb
ret
cmp
aam
stos
mov
mov
add
shlb
pop
push
add
in
push
loope
cld
shlb
pusha
pusha
adc
and
jp
and
jge
mov
mov
mov
pusha
test
sub
loopne
imul
xor
dec
cmp
add
mov
loopne
out
test
mov
inc
inc
cmp
sarb
imul
jae
pop
dec
mov
and
inc
or
dec
or
fsub
sbb
add
add
and
sbb
fwait
jno
pusha
pusha
mov
jp
pushf
adc
sbb
xor
inc
out
mov
and
ss
dec
nop
jge
add
jbe
mov
dec
rorl
inc
ss
lret
xlat
retw
rorl
addb
in
sbb
sub
loopne
xlat
adc
rcll
arpl
inc
jne
push
mov
fidivs
sub
or
loopne
push
pusha
pusha
sbb
push
pop
into
sti
ficoms
lea
xlat
pop
xchg
add
loopne
leave
or
mov
xchg
cld
jecxz
xchg
mov
add
mov
das
push
andb
ss
xchg
mov
ljmp
pop
mov
mov
insl
aam
test
loop
pop
push
xlat
adc
mov
popf
xor
dec
dec
lods
add
cmp
mov
jp
pop
mov
or
loopne
loopne
incl
push
cmovg
pusha
pusha
ror
sub
and
aas
dec
clc
icebp
add
enter
add
jb
xchg
mov
dec
cmp
xor
sub
add
scas
addb
loopne
and
dec
popf
or
mov
stos
rol
test
loopne
cmp
int
add
mov
xchg
push
jns
push
and
xchg
cld
adc
jge
dec
add
pusha
pusha
pop
popf
dec
sbb
push
mov
dec
cmpsl
testb
adc
icebp
loope
movsb
mov
outsl
sahf
mov
inc
fwait
cld
and
fldl
add
jns
inc
fnstenv
push
xchg
mov
and
fucomp
add
push
int3
cmp
jb
loopne
add
loopne
xchg
mov
add
jnp
mov
adcb
jg
mov
aas
sarb
cwtl
shld
push
pop
stc
incb
cs
mov
clc
mov
sub
jns
in
fildll
jle
loopne
in
cmp
cmp
je
sub
jnp
addr16
or
shrb
bound
mov
insb
mov
xlat
sbb
out
pushf
or
mov
pop
into
nop
dec
add
das
data16
fnstcw
pop
mov
cmp
jge
rol
inc
scas
mov
add
push
mov
dec
inc
mov
and
add
lret
sub
add
lods
pop
or
push
loop
cltd
push
les
test
enter
dec
and
shlb
add
sub
fnsave
loopne
push
into
repnz
dec
stos
add
jecxz
xchg
loopne
inc
movl
ljmp
cwtl
add
cmpsb
add
imul
push
dec
repz
mov
xchg
and
stos
sbb
in
int3
shll
mov
and
fwait
inc
idivb
gs
js
mov
sub
xorb
mov
and
pusha
xor
lahf
xorl
xor
icebp
mov
lods
jg
dec
mull
stc
sbb
aad
or
add
inc
lahf
xchg
fxtract
lods
loopne
in
imulb
fsub
pop
dec
mov
addb
cmp
lds
pusha
inc
mov
or
cwtl
fadds
scas
inc
inc
std
addr16
repz
push
das
fistpl
rcl
das
jb
test
stc
and
out
loopne
popa
sub
pop
je
inc
pop
add
and
daa
mov
and
mov
pop
jb
xor
sub
loopne
loopne
jns
dec
sbb
pop
jae
or
shl
mov
pop
and
repz
mov
xchg
push
mov
inc
fwait
add
and
inc
cmp
ds
add
cwtl
sbb
mov
addb
dec
mov
rol
mov
jb
cmpsb
and
mov
mov
mov
aas
jns
test
loopne
lods
push
mov
cltd
pop
cmpsl
mov
daa
out
pop
push
mov
lock
pop
add
pop
repz
xchg
leave
dec
mov
sub
mov
lods
mov
rorb
sbb
sub
leave
test
cmpl
mov
aaa
jle
pusha
pusha
aas
movsb
and
fcomip
push
rcrb
push
mov
rol
pop
mov
and
and
add
xchg
loopne
jbe
les
push
push
pusha
data16
addb
scas
and
cld
out
or
pop
fdivrs
mov
push
fstl
pusha
pusha
rorb
rcr
add
out
xor
and
sub
loopne
and
les
xor
mov
sti
xor
mov
inc
jno
out
lock
out
out
mov
aam
push
inc
inc
sahf
sub
and
inc
cmc
insb
push
sub
out
fdivrl
rol
add
adc
sbb
xor
mov
loopne
fsubl
lcall
ds
movsb
mov
mov
addb
mov
rol
imul
dec
mov
add
cltd
mov
pop
mov
loop
pop
jne
sarl
pusha
sbb
add
mov
xor
pusha
pusha
xchg
int3
dec
cmp
cmpsb
and
push
pusha
pusha
iret
and
shlb
push
and
mov
pusha
or
insl
dec
int3
lods
and
mov
stos
jns
pop
cld
cmp
jae
addr16
pop
and
mov
addb
addr16
xor
mov
ret
in
pop
sub
push
fiadds
sub
mov
jne
outsb
ljmp
mov
pop
les
pop
jo
or
stc
cmpsl
leave
data16
fstl
loope
pusha
pusha
or
shlb
or
xchg
in
push
pop
leave
add
add
int3
imul
add
std
into
shr
add
test
or
inc
mov
in
lods
mov
sub
pop
mov
jle
push
call
test
shlb
inc
inc
jge
jle
pusha
pusha
lds
loopne
mov
mov
jae
fistps
adc
scas
loopne
push
sbb
pop
adc
pusha
pusha
or
and
adc
insl
icebp
or
mov
and
mov
add
mov
pushf
cmp
and
shlb
jecxz
sbb
and
inc
inc
lds
fcmovne
repnz
sub
imul
dec
sbb
lds
fsubr
loopne
jnp
mov
add
cmp
add
xor
dec
and
or
and
outsl
cmp
je
loopne
fwait
xchg
sbb
dec
push
lods
and
data16
cmp
ret
xchg
xchg
in
ljmp
int3
adc
ds
clc
mov
rcl
xchg
jae
ret
pop
adc
pop
sti
push
int3
cli
push
out
ja
test
pop
aas
mov
adc
inc
xor
popa
rorb
lret
jge
aas
adc
rep
add
sbb
mov
mulb
rol
push
xor
stos
addb
mov
cmp
jo
addr16
adc
xlat
xacquire
xorl
int
pop
repz
xor
add
addr16
push
outsl
cmpsb
and
xor
sbb
add
inc
fbld
fstps
and
and
adc
daa
in
les
loopne
loop
mov
cmp
push
and
and
loopne
add
out
lret
jb
mov
push
inc
inc
jns
enter
sbb
orl
pop
movsb
loopne
pushf
int3
jne
mov
out
daa
stos
and
orl
jns
dec
dec
mov
cmc
mov
popf
mov
mov
xchg
cmp
rorb
in
cmp
nop
pop
or
mov
rol
cmp
negb
icebp
daa
mov
add
add
addr16
into
sbb
jnp
sbb
mov
push
divl
xor
scas
arpl
pop
repz
mov
in
cmpsb
add
jle
cli
cmc
in
dec
mov
loopne
scas
mov
mov
xor
xchg
loopne
lret
and
pusha
adc
adc
loopne,pn
cli
int
mov
xchg
sarb
addb
iret
dec
jnp
add
pusha
pop
xor
and
rcrb
jne
bound
mov
sahf
call
lcall
xchg
jle
aaa
or
ja
jne
pushl
lcall
ds
out
mov
cmp
adc
repnz
add
stos
pusha
pusha
xchg
into
bound
loope
sub
mov
cwtl
daa
out
jp
cmpsl
popf
xor
out
test
add
xchg
push
mov
fwait
aam
jns
mov
lret
mov
push
loopne
or
pusha
jns
push
mov
pusha
cltd
mov
and
jecxz
arpl
pop
push
arpl
add
loopne
mov
xchg
in
push
push
iret
jle
inc
inc
xor
pop
jns
sti
enter
rol
fldcw
pop
and
push
jbe
mov
stos
jmp
inc
inc
add
shrb
inc
mov
lods
and
loopne
out
push
xor
jmp
nop
das
inc
xor
addr16
in
test
rolb
imul
mov
daa
lea
rclb
dec
sbb
and
imull
xchg
rcrb
inc
mov
pop
pop
sub
loopne
mov
dec
xor
hlt
jp
pusha
sbb
cs
inc
or
cld
mov
mov
inc
xor
sarb
cmpsb
loopne
xchg
ss
addb
jle
std
fistpl
rol
xchg
xor
orl
pusha
ja
adc
mov
test
int
fldl
in
sub
pusha
mov
rol
rcrb
push
in
add
xchg
nopl
xchg
rol
js
mov
jb
and
hlt
in
pusha
pusha
fisubl
add
and
mov
subl
push
jge
mov
or
sarb
push
rol
popf
cwtl
lcall
leave
xor
push
pusha
pusha
mov
fcompl
mov
dec
mov
and
mov
in
inc
inc
lret
xor
lock
addl
adcl
and
inc
mov
rol
movsl
popa
lock
loopne
inc
jnp
cli
movsb
add
adc
fincstp
cmc
adc
mov
mov
jno
ljmp
mov
notb
push
pusha
pusha
sbb
test
add
sbb
inc
lea
inc
sbb
push
mov
loopne
and
shlb
jp
fsub
movl
cmp
sub
jmp
lea
xorb
insb
jne
mov
loopne
mov
cmp
jo
push
pop
push
stos
in
push
out
mov
push
xchg
dec
sub
mov
ljmp
add
jle
clc
dec
test
and
mov
stos
rol
and
push
jmp
sahf
adc
fstpl
loopne
dec
andb
pop
sbb
scas
loopne
xlat
int
jp
je
mov
and
inc
inc
mov
mov
icebp
pop
and
adc
rolb
inc
inc
stc
enter
les
call
addb
jb
jmp
cld
ljmp
les
cmpsl
cmpsb
rol
mov
and
popf
in
sbb
loop
inc
inc
jne
add
rolb
sti
add
shl
aaa
imulb
lahf
mov
movsb
and
sbb
mov
test
add
xor
add
shrb
outsl
xchg
cwtl
shlb
mov
sarb
mov
xchg
cmc
insl
pushf
cmpsb
rol
push
push
pop
out
inc
lcall
and
popa
push
mov
int3
xor
add
lock
jnp
cmc
shll
fsts
addb
movsl
cmp
xor
mov
mov
das
fldenv
sbb
adc
lcall
mov
jp
xchg
mov
inc
sbb
pusha
and
rcr
jne
add
lret
push
int3
mov
mov
lds
addb
add
cmpsb
inc
inc
es
inc
cmp
cld
sbb
jno
add
or
sbb
outsl
xchg
shlb
jns
cwtl
xor
push
stos
pop
adc
ja
dec
bound
in
sub
add
and
insb
cmp
sbb
lret
repz
jbe
push
rol
repnz
mov
insb
jge
mov
imul
cmp
dec
sub
and
or
shl
repz
test
mov
and
test
loopne
arpl
xchg
lods
addb
addb
cmp
ds
fwait
push
inc
inc
adc
xchg
dec
mov
mov
and
loopne
jb
lea
or
dec
push
adc
daa
int
mov
inc
cmp
sahf
xchg
fldt
jne
lret
sbb
lods
aad
jb
les
mov
mov
adcl
add
les
pop
push
and
mov
inc
inc
mov
xor
cmp
scas
in
inc
dec
mov
adc
xchg
mov
pop
inc
insl
adc
mov
cmp
xor
inc
inc
jne
dec
and
in
push
push
sbb
push
inc
xchg
sub
rolb
add
add
pusha
pusha
fidivrs
adc
mov
or
adc
or
addb
push
cmpsb
and
addb
aaa
push
les
arpl
or
pop
jae
mov
icebp
xor
sub
iret
cmp
fimull
loopne
mov
and
arpl
clc
aas
cmp
rcl
pop
pop
insl
mov
xor
mov
cld
jns
stos
mov
pushf
fstpt
stc
pop
aas
cli
push
xor
adc
addb
and
les
leave
dec
aaa
pop
xchg
or
and
mov
sub
arpl
add
pusha
pusha
test
loopne
xchg
test
addb
clc
jmp
cld
dec
and
movsb
addb
add
out
rcll
fs
rcrb
rcrb
mov
aad
xor
nop
xor
pop
lahf
jl
ficompl
xor
sub
shlb
or
fldz
add
fs
or
scas
jle
or
sub
mov
mov
mov
mov
and
insb
xchg
adc
or
addb
arpl
adc
inc
cmp
scas
inc
inc
das
outsb
dec
and
loopne
add
mov
andb
xorb
dec
sbbl
rol
pusha
pusha
lahf
pop
cmc
shrl
sets
xor
adc
dec
popf
loop
push
gs
mov
sbbb
jae
adc
sbb
inc
repz
mov
rol
jg
das
test
inc
fs
rol
inc
je
iret
mov
test
push
std
test
mov
ror
mov
mov
ret
push
add
loopne
lea
loopne
cmp
lahf
out
xor
jmp
daa
adc
and
add
inc
jae
mov
test
bound
cltd
sti
pop
arpl
pusha
pusha
adc
lret
jecxz
mov
je
je
mov
xor
and
and
inc
jge
pushf
or
add
loope
or
mov
inc
popf
mov
fwait
dec
pusha
sub
mov
jbe
add
sub
call
sbb
sbb
rclb
repz
jle
mov
or
and
aas
int3
out
clc
sub
stos
mov
loope
imull
mov
les
loope
shlb
cmp
ret
out
push
mov
add
add
out
lea
mov
or
xlat
das
xchg
and
aas
push
mov
cli
and
inc
jno
push
loop
mov
rol
rolb
pusha
pusha
int3
push
inc
mov
add
cli
test
mov
inc
popa
aas
adc
add
out
int3
addps
addb
sti
ljmp
xchg
adc
imulb
add
add
add
stos
pusha
pusha
je
adcl
mov
inc
sbb
mov
jl
xchg
fsts
cmp
jmp
xchg
fidivs
in
or
dec
xchg
lahf
xor
push
inc
mov
lock
aam
dec
int3
pop
lock
addb
loope
inc
inc
loope
roll
movsb
loopne
push
je
push
stc
pushf
aam
add
push
scas
rol
addb
out
mov
negl
je
mov
pusha
pusha
roll
mov
inc
xlat
pop
mov
pusha
mov
mov
lahf
fs
dec
out
mov
sbb
scas
and
loopne
jno
arpl
mov
or
cs
or
addb
mov
jno
sbb
and
push
add
pop
repnz
aam
ret
test
pusha
pusha
out
or
xor
int
pusha
pusha
iret
movsb
pusha
pusha
mov
or
mov
push
jge
leave
push
xchg
cmp
outsl
cwtl
dec
xlat
testl
add
inc
inc
lahf
imul
mov
in
push
enter
cmc
and
rolb
inc
jecxz
addb
inc
packsswb
xor
inc
push
jne
adc
inc
sti
enter
loopne
in
loope
jne
pop
dec
mov
and
and
pop
push
push
mov
and
sub
lcall
mov
sti
sub
sub
loopne
sbb
sub
mov
fs
or
cmp
adc
xchg
and
add
inc
mov
addb
fmull
lcall
mov
ds
sbb
pusha
fldt
or
cld
sub
es
xor
and
fbld
adc
mov
js
sub
movsl
xchg
dec
ds
in
cmp
jge
pusha
pusha
cmp
pop
dec
mov
or
shlb
xchg
rcr
mov
dec
push
push
add
into
lds
lret
jmp
jl
lods
mov
jl
cmp
sub
pop
gs
addb
inc
jb
jecxz
pusha
pusha
js
mov
addr16
fstl
or
sbb
push
loopne
repnz
sbb
pop
popa
loop
rol
lods
dec
inc
mov
dec
and
and
pop
sbb
add
and
add
add
jno
mov
cmpsb
rol
lods
mov
xor
daa
adc
pop
push
inc
les
mov
orb
xor
lahf
inc
pop
sub
pusha
fiaddl
fwait
loopne
mov
rolb
sbb
pop
mov
pop
xchg
cmpsl
mov
ds
aas
loope
pusha
dec
in
test
loopne
movsl
movsb
addb
loope
js
cmpsb
add
adc
and
pushf
xlat
jecxz
jg
dec
sbb
hlt
lret
sub
fucomip
int
inc
pop
addr16
cli
test
pusha
push
loopne
push
imul
mov
mov
pusha
pusha
movsl
in
mov
mov
aaa
mov
fisubrl
loopne
xchg
lret
and
lcall
lret
dec
inc
sbb
lods
sahf
fdivrs
and
and
loopne
adc
fistpl
mov
shll
cwtl
xor
mov
rolb
pusha
push
add
push
fildll
push
mov
mov
lcall
test
mov
scas
rol
pop
pop
aad
xchg
arpl
repz
mov
inc
jnp
imul
pusha
pusha
nop
push
dec
add
add
rol
or
inc
and
in
addb
sub
pusha
pushf
enter
mov
dec
sub
int
imul
int3
mov
mov
mov
and
push
fmul
je
cmp
stos
and
sub
add
mov
shl
sbb
push
fsub
mov
and
add
adc
jne
fsubl
shll
les
sub
pusha
fadd
and
inc
repz
inc
inc
jns
notl
mov
addb
push
add
jge
addb
addb
mov
decb
push
mov
loopne
mov
rorl
mov
inc
fimull
mov
movb
xor
pop
cmp
or
add
mov
xchg
andb
cli
jne
dec
hlt
jne
outsb
push
cmp
lret
sub
rcrb
enter
fdivp
jo
notb
pusha
pusha
mov
fstps
pop
imul
addb
jp
mov
pop
test
and
loopne
push
cmc
loope
pusha
pusha
xor
mov
mov
cmp
add
loopne
mov
scas
mov
andb
shll
mov
xchg
push
or
rcl
jecxz
and
loopne
inc
imul
inc
inc
in
pop
xchg
aad
add
sub
nop
bound
sbb
ljmp
pop
ds
addb
mov
stos
loopne
cmp
icebp
inc
loopne,pn
dec
test
rorb
imul
repnz
pop
adc
shr
movsb
pusha
pusha
mov
push
stc
jbe
or
pop
ret
xor
add
adc
jecxz,pt
mov
stc
aad
loopne
imul
adc
imul
mov
vxorps
jg
cmpsl
inc
daa
sbb
mov
or
loopne
jb
pop
lods
out
xor
add
and
cli
inc
cmp
sbb
jg
add
sahf
xor
lcall
fildll
fstpl
dec
icebp
push
mov
add
fwait
dec
xor
and
cmp
addb
push
rol
mov
add
in
xchg
xchg
rcrb
ja
push
inc
lea
jae
jg
pop
jmp
xor
or
rol
and
add
in
cmp
pusha
or
outsb
mov
negl
mov
std
int3
push
hlt
xor
mov
loopne
rol
mov
into
and
dec
push
rol
gs
fld
mov
push
jp
mov
add
cmpb
cmc
roll
or
in
insb
out
stos
add
loopne
jge
jnp
dec
out
fiadds
andb
loopne
ds
icebp
movsb
add
hlt
sbb
or
sarb
mov
pushl
nop
mov
xor
loope
pushf
daa
enter
mov
inc
mov
ficomps
cltd
paddd
lock
sub
loopne
cmc
cmp
pop
jno
push
pop
or
mov
mov
call
push
and
pusha
pusha
int3
fcompp
push
mov
mov
inc
inc
aam
pop
aam
mov
push
pop
int
pop
stc
mov
adc
nop
in
inc
int
ret
lds
adcb
clc
pop
rcrl
shlb
vminss
sarb
mov
mov
adc
ret
mov
add
andb
jns
fcmovb
test
and
lcall
sbb
pop
cmp
mov
cmp
cmc
and
inc
push
add
cmp
mov
add
and
loopne
or
insb
push
add
xlat
daa
sbb
jl
lds
inc
inc
pusha
mov
das
in
xchg
imul
xor
aas
into
jns
push
add
add
rorb
mov
xchg
shrb
inc
mov
pop
xchg
push
pushf
fnsave
in
int3
ret
jne
mov
outsl
cwtl
fisubrs
loopne
mov
and
bound
sbb
jecxz
push
gs
jle
adc
push
mov
cli
mov
rol
pop
ds
sub
mov
add
pop
jle
rcrl
into
inc
repnz
inc
or
icebp
xor
jno
scas
movl
aam
mov
pop
movsb
add
jmp
imul
imull
sbb
or
arpl
and
shlb
pop
push
sub
and
adc
addb
popa
data16
out
fucomi
fdivl
pusha
pusha
js
inc
out
jbe
sahf
sbb
pop
lds
leave
call
and
add
aas
test
loopne
addb
mov
mov
test
inc
inc
inc
xorl
mov
dec
sbb
insb
shll
add
sbb
pop
dec
cmp
stos
mov
out
adc
std
inc
jno
adc
out
add
leave
inc
sarl
rol
cli
jecxz
out
scas
xor
fcom
js
jge
loope
dec
test
or
and
negb
test
mov
xchg
add
pusha
xchg
test
loopne
inc
mov
repz
int3
pop
jae
in
inc
std
sub
cmp
and
insb
cmp
mov
mov
cmpb
ret
cmc
lods
ja
mov
out
dec
lahf
adc
add
pop
mov
in
sbb
pop
inc
out
jae
cmc
test
mov
mov
push
je
rorl
add
aas
ja
addb
out
gs
rorb
stos
and
std
jle
or
mov
and
shlb
addb
sbb
adc
loopne
xchg
imul
cmpsb
pusha
pusha
xor
pop
fwait
mov
mov
loopne
or
pop
jae
test
aad
or
imul
sbb
and
stc
fidivrs
push
add
push
add
les
addb
inc
push
cmp
xchg
inc
int3
test
loopne
or
pusha
pop
and
push
pop
rcll
and
pop
xchg
xor
cwtl
cwtl
jbe
adc
stos
adc
cmpl
sbb
cmp
cld
adc
test
xchg
jne
sbb
xor
pop
insb
jmp
and
adc
or
rcrb
jmp
fisubrl
mov
rol
and
rol
lock
sahf
sub
ret
pop
xor
clc
loop
andb
loopne
sbb
out
loopne
push
sbb
or
cwtl
adc
add
and
adc
xor
cmpsb
inc
inc
nopl
lcall
jo
std
icebp
xor
add
gs
cli
data16
mov
mov
daa
leave
adc
adc
aas
push
adc
sub
mov
adc
inc
inc
xorl
shr
getsec
jnp
xchg
ljmp
addb
add
mov
loopne
mov
sbb
mov
and
outsb
xor
aam
adc
jle
sub
mov
add
shr
out
lahf
and
shll
and
push
jg
jg
mov
and
dec
xchg
into
xlat
mov
add
add
pop
mov
addr16
inc
jnp
xchg
jo
loopne
cwtl
stos
xchg
call
mov
push
bnd
mov
test
loop
pop
add
mov
xchg
or
movsl
jnp
loopne
sbb
pop
mov
cmp
push
push
insb
inc
test
add
add
pusha
cmp
inc
andb
call
and
clc
jno
test
pop
lods
rol
pop
add
loopne
mov
fs
or
inc
mov
out
into
cli
pop
in
xor
push
jne
cmp
sarb
pop
lahf
test
out
aas
xchg
mov
dec
popa
stc
and
aas
mov
sarb
leave
into
loopne
cli
rcrb
push
xor
inc
inc
add
loopne
repnz
push
xchg
nop
add
pop
and
lods
inc
inc
jecxz
mov
int
jne
popf
ret
or
lcall
and
loopne
cli
into
mov
cli
addb
leave
lcall
xchg
pop
mov
inc
andl
stos
cld
mov
lods
loopne
xor
femms
mov
cmp
jle
xor
xchg
lcall
push
cmp
mov
subl
add
sub
mov
mov
mov
sub
xor
push
ljmp
negb
movsl
jmp
mov
lods
mov
pop
int3
pop
lods
adc
mov
cmp
outsb
jnp
jp
and
cmp
inc
cltd
adc
cmc
cmp
add
loopne
lods
push
fmuls
add
iret
pop
pusha
lea
jp
addr16
rorl
mov
adc
lret
imul
xor
and
ret
and
adc
or
testb
inc
or
into
pop
std
stc
sbb
sub
sbb
shlb
pop
or
add
inc
adc
dec
jno
xor
loop
or
xorl
mov
jl
cwtl
lcall
pop
imul
loopne
pop
test
pusha
pop
xchg
test
add
pusha
pusha
xchg
inc
add
cmp
xor
and
sub
push
rcrb
mov
and
and
mov
or
mov
mov
popa
jne
mov
sbb
jge
mov
cwtl
xor
cmp
ds
jl
pop
into
out
outsl
ja
movsb
and
addb
insl
dec
jecxz
rol
xchg
pop
mov
mov
and
pusha
pusha
and
mov
inc
and
nop
mov
and
jge
bound
jne
and
inc
inc
mov
add
dec
sbb
ljmp
mov
loopne
popf
fcmovne
mov
psrld
or
test
add
and
sub
andb
and
andb
sbb
mov
mov
mov
and
ds
add
pop
mov
or
jg
rcrl
out
movsb
pusha
pusha
xor
insb
fwait
aas
dec
arpl
daa
or
pusha
nop
imul
cmp
mov
loopne
das
xchg
push
xchg
jns
pop
dec
into
jl
inc
mov
enter
dec
pop
mov
addb
fldl
jecxz
xor
loopne
jmp
out
shl
lds
insl
sar
aad
aam
add
loopne
dec
add
loopne
jg
sub
scas
loopne
add
add
push
dec
push
movsb
loopne
sub
jno
dec
mov
and
fsubrs
push
mov
test
loopne
cmp
scas
add
jp
mov
test
shlb
fsubrl
in
xchg
mov
push
mov
pusha
pusha
sub
inc
sub
in
cmpsl
scas
mov
rcrb
lcall
and
pusha
repz
add
mov
in
aad
jg
loopne
dec
xlat
in
pop
sbb
test
adcl
pusha
pusha
pushl
xchg
loopne
add
and
fstl
add
loopne
lret
mov
cltd
and
frstor
sti
dec
ja
dec
mov
mov
add
testb
rorb
push
jecxz
lock
adc
mov
test
inc
push
xchg
sub
and
pusha
pusha
lcall
gs
add
test
leave
lret
fists
lret
mov
pop
jno
rol
xlat
sbb
and
dec
andb
adc
hlt
inc
mov
add
loopne
push
in
insl
jns
clc
jb
sahf
push
cmp
dec
addl
imul
add
mov
pop
cld
ret
addb
sbb
inc
inc
mov
xor
and
addb
jmp
ljmp
jge
int
sbb
pop
inc
or
jae
mov
pusha
les
cmp
or
sbb
scas
fbld
rol
mov
jno
mov
repnz
push
or
adc
jo
pushf
mov
shl
inc
mov
lods
mov
mov
cmpsl
inc
push
mov
call
push
mov
addb
ret
and
jns
shll
popa
sbb
bound
arpl
test
and
sbb
pop
loopne
or
and
lahf
cmp
rolb
inc
dec
bound
mov
lret
mov
loopne
addb
cmpsb
rol
stos
cwtl
or
mov
cmp
push
cmp
into
cld
out
test
out
push
in
out
and
add
mov
call
addb
lock
or
cmp
mov
jg
mov
loopne
and
cmp
ror
xor
adc
lds
add
std
pop
pop
mov
or
iret
rorb
or
rcrb
add
add
mov
inc
mov
rcrb
subb
out
popf
mov
negb
fistpl
mov
xorb
call
loopne
cmpsb
and
sti
loopne
add
ljmp
mov
loopne
test
add
inc
inc
jbe
sub
mov
pop
pop
xchg
popa
sbb
or
inc
mov
aas
insb
cmp
addb
in
addb
push
ficoml
mov
mov
js
repnz
insl
inc
jecxz
dec
mov
mov
ja
loopne
mov
mov
pop
pushf
push
sbb
xchg
cmc
dec
mov
aaa
sub
mov
dec
daa
nop
mov
mov
scas
rol
jns
mov
js
lds
push
push
or
and
loopne
fisubrs
pusha
or
addb
hlt
xchg
into
cmp
cmp
inc
ss
in
out
es
lahf
popa
mov
icebp
xchg
cwtl
inc
testl
pop
add
adc
and
fbstp
pop
js
jns
gs
jg
test
add
rol
jbe
dec
ss
rcrb
loopne,pn
mov
inc
lods
mov
xor
adc
and
aam
jmp
imul
fwait
pop
les
dec
and
or
inc
negb
add
loopne
stos
mov
stc
das
mov
mov
ja
mov
sar
pop
mov
cmpsb
addb
or
sarb
push
inc
inc
daa
inc
push
out
lcall
addb
pop
mov
jmp
add
icebp
pop
pop
mov
pusha
pop
ud2
xchg
les
dec
enter
push
loopne
int
inc
sahf
outsb
jmp
add
loopne
sahf
push
cs
pusha
mov
dec
repnz
je
andb
adc
push
sbb
or
sahf
fwait
aas
pusha
test
ret
fisubs
test
loopne
or
sbb
mov
add
add
jne
in
jne,pt
adc
sub
shl
and
in
pop
lock
addb
sub
and
cmpsb
pusha
pusha
das
daa
push
stos
adc
in
dec
mov
scas
mov
add
stc
jg
loopne
test
pusha
or
iret
cltd
mov
sub
loopne
loopne
jne
xchg
sub
andb
ss
andb
xchg
or
and
jmp
test
lock
insb
and
loopne
loopne
loop
jle
jbe
rol
and
mov
in
iret
enterw
xchg
loopne
rorb
pop
ljmp
cmp
rcrb
mov
mov
mov
rol
adc
sbb
pusha
std
xchg
jae
pusha
pusha
enter
mov
daa
jne
inc
inc
incl
add
jns
mov
test
xor
jno
mov
add
outsb
and
inc
and
sub
push
in
xchg
dec
lahf
iret
jge
cmp
fiaddl
stc
add
add
mov
mov
mov
add
add
mov
loopne
pop
add
fiaddl
xor
scas
pusha
pusha
jbe
lahf
xchg
faddl
add
xor
fwait
andb
pusha
pusha
pop
shr
lret
jle
clc
pop
popa
push
xor
dec
add
test
xchg
mov
add
ret
cltd
lock
rol
xchg
cmpsb
pusha
pusha
lods
mov
jb
inc
inc
mov
les
and
ja
scas
pusha
pusha
dec
push
inc
inc
cli
ret
pushf
ss
push
ss
inc
les
cli
es
pusha
sbb
lea
cli
cmp
xchg
mov
rcrl
sbb
jl
addb
int
and
pusha
call
rol
mov
add
mov
iret
adc
mov
mov
loopne
jge
push
stos
mov
or
inc
jge
cld
cwtl
mov
and
iret
andl
addb
popf
push
jnp
fwait
pop
sbb
gs
iret
movsl
lcall
loopne
pop
xchg
pop
in
pop
int3
lods
cmpl
fs
or
xchg
adc
add
adc
les
mov
mov
mov
mov
mov
loopne
test
xchg
cmp
pop
push
test
add
inc
inc
mov
ror
dec
dec
jl
jecxz
insb
xchg
loopne
xor
shll
subb
outsb
mov
loopne
in
mov
inc
inc
mov
mov
pop
ret
or
andb
mov
lahf
out
out
add
sbb
inc
lea
jmp
in
lds
std
call
movsl
mov
xchg
lret
jl
rol
inc
sub
or
imul
addb
bound
add
or
cwtl
sti
push
fs
push
loopne
out
pop
push
je
push
jo
xor
jecxz
mov
es
inc
movsl
xor
dec
or
add
pop
nop
ss
loopne
ret
mov
mov
jl
mov
jo
subl
loopne
andb
sbbb
cmpsb
rol
adc
xchg
adc
xchg
lret
loopne
pusha
pusha
mov
xor
inc
add
push
mov
clc
mov
mov
mov
lretw
jle
mov
add
stos
mov
loopne
out
imulb
and
mov
mov
ds
divl
sub
xchg
sar
jnp
repnz
jmp
jb
andb
adc
cmpl
pop
cmp
mov
and
inc
inc
mov
inc
inc
loopne,pn
jle
lock
or
dec
in
jne
mov
insb
ja
out
push
dec
push
loopne
jae
pusha
pusha
jae
and
sub
and
jecxz
or
adc
leave
jne
and
loopne
inc
outsl
cmp
add
jns
pop
andb
inc
jnp
mov
lea
scas
and
jne
sahf
sub
iret
xor
mov
movsl
xchg
cmp
scas
inc
inc
push
cmpsl
push
ss
jb
data16
rcrl
xchg
ds
fdivrl
mov
lahf
les
add
fldpi
inc
addb
pusha
pusha
pop
mov
add
loope
inc
andb
imul
pusha
sub
xor
jo
pop
jo
xchg
mov
mov
and
leave
cmc
pop
das
out
xor
mov
mov
jl
fwait
jbe
xchg
and
shlb
mov
loopne
jns
fldl
cmc
inc
int3
shll
push
mov
shrb
cltd
pop
out
inc
jmp
cltd
cmp
push
movl
sbb
mov
adc
call
sbb
or
loopne
pop
inc
adc
sbb
jne
mov
mov
out
pusha
pusha
jle
and
xorw
sub
inc
inc
xchg
inc
add
sub
clc
js
arpl
aas
sub
loopne
addl
pop
ja
cli
das
nop
flds
jno
fsub
movsl
xchg
int
rclb
loop
test
loopne
pusha
pusha
shlb
int3
scas
jns
cmp
rorb
stos
sahf
pop
lea
mov
inc
cmp
mov
iret
jb
and
loopne
inc
jns
rolb
fdivl
jmp
mov
and
mov
add
fisttpll
push
mov
xchg
add
push
adc
loopne
lea
int
cltd
push
pusha
pusha
inc
xchg
sub
and
push
jecxz
test
rol
adc
adc
sbb
scas
insl
sti
adc
nop
mov
dec
xor
test
loopne
loop
and
rol
xchg
ss
or
cli
jmp
mov
push
and
cmp
xchg
int3
pop
imul
mov
xor
test
inc
pushf
jle
add
mov
cmp
mov
fldl
inc
ret
pusha
pusha
or
add
sub
rclb
push
pushl
pop
js
bound
mov
in
jge
test
sub
stc
xor
rclb
iret
shr
dec
andb
lods
xchg
clc
dec
sub
mov
repnz
pop
add
addb
push
test
sarb
loopne
mov
jecxz
inc
inc
pop
mov
icebp
mov
fbstp
jle
ja
inc
out
in
mov
and
add
push
inc
inc
movsb
loopne
jb
addr16
mov
loopne
pop
rorl
mov
addb
mov
js
dec
into
bound
pusha
ss
clc
sub
add
fs
js
xlat
xor
popa
movsl
call
push
addr16
add
push
xor
loopne
mov
pusha
pusha
lds
fisubl
and
frstor
pusha
pusha
pop
pop
sbb
jl
pop
imul
cmp
lcall
adc
ja
mov
dec
bound
rclb
subb
pop
js
push
add
mov
and
mov
loopne
push
movsl
outsb
push
and
xchg
mov
and
pusha
pusha
test
inc
mov
and
mov
pusha
pusha
cmc
out
sahf
sbb
dec
sbb
pusha
push
test
loopne
cmc
std
pop
into
daa
out
fists
or
xchg
dec
cwtl
cld
stos
inc
inc
fstps
and
inc
jne
or
add
and
or
addb
into
divb
inc
jg
out
mov
pop
cld
sub
xor
jo
sub
and
enter
add
mov
inc
aas
iret
xchg
and
mov
faddl
sti
or
inc
clc
test
or
data16
add
sbb
pusha
mov
loopne
fcoml
sarl
push
loop
loopne
add
mov
add
icebp
loope
and
lahf
xor
dec
mov
addb
pusha
pusha
dec
movsl
clc
push
out
jge
rol
mov
mov
lahf
sahf
and
loopne
add
and
push
pop
jmp
pop
les
add
popl
push
pop
scas
add
xchg
loopne
fstl
aad
adcl
js
cmp
jb
and
shlb
jg
pop
mov
loopne
xor
fsubr
mov
scas
ja
pop
ficomps
cmp
lahf
stos
add
jne
pushf
scas
mov
das
mov
mov
add
cmp
or
addb
mov
loope
add
lahf
leave
and
jbe
push
loopne
in
sete
jne
xor
addb
push
and
imul
inc
cmpsl
sbb
and
lea
fildl
inc
mov
in
lcall
ss
bound
out
inc
data16
rol
mov
rcrl
jb
dec
adc
sub
pusha
jp
lcall
lea
sar
ja
addb
test
sar
jae
add
xor
outsb
or
rcr
xor
mov
sbb
addb
sahf
pop
dec
jecxz
jg
xchg
mov
sub
loopne
in
addb
ja
outsl
pusha
or
jge
inc
inc
mov
adc
inc
xchg
mov
gs
ret
xchg
or
add
mov
loopne
add
add
and
xor
pop
mov
mov
les
adc
rorl
and
jne
push
push
dec
sub
loopne
xchg
mov
loopne
mov
dec
xor
fcompl
sub
gs
add
movsb
mov
rol
jno
jae
jbe
jno
and
sub
mov
mov
nop
pop
hlt
iret
inc
into
stos
addb
dec
dec
cs
mov
mov
xlat
mov
in
mov
loopne
popa
xlat
cli
pop
push
or
loopne
div
inc
mov
loopne
pop
insb
xchg
push
mov
fadds
sbb
mov
adc
or
add
push
stc
dec
mov
fs
mov
dec
loop
sub
fwait
dec
adc
mov
jne
inc
sub
in
lahf
xchg
inc
jne
sbb
push
xor
xor
loop
rol
cltd
popa
divb
xchg
sbb
scas
sbb
out
data16
lds
xor
pusha
pusha
xor
jnp
gs
out
inc
sub
sub
fdivl
mov
sbb
push
jnp
inc
cmp
leave
hlt
ss
push
and
add
lret
inc
inc
adc
sbb
lahf
aam
mov
fcomps
dec
xchg
add
inc
jg
dec
sarb
dec
jg
xlat
stos
std
fdivl
push
and
jge
int3
popf
inc
stos
inc
inc
inc
jno
adc
in
dec
mov
and
test
and
cmp
iret
mov
pop
inc
jge
sahf
sub
and
jge
pushf
or
pusha
add
fidivl
inc
inc
leave
sub
inc
and
pusha
mov
mov
pop
add
sti
pop
inc
movsb
loopne
lahf
mov
mov
sti
test
imul
cmp
and
inc
rolb
cmpsb
mov
mov
mov
pop
xchg
ret
movsl
fisubrl
and
inc
cs
pusha
dec
stc
add
jecxz
cmp
mov
stos
loopne
call
mov
and
outsb
aad
lods
mov
loop
inc
mov
or
orb
xor
pop
lds
dec
push
arpl
cltd
cmp
loope
fnstenv
xchg
xchg
sbb
jo
mov
cli
cmpsl
mov
cmp
xchg
add
rol
lret
push
mov
test
arpl
and
mov
gs
gs
adc
popa
idivb
shl
hlt
cmp
cwtl
ljmp
xchg
xchg
xor
loopne
out
les
aam
rol
xor
mov
mov
add
jo
leave
dec
pop
cmp
cmpsl
push
push
add
pusha
pcmpeqd
sbb
add
loopne
pop
mov
hlt
or
add
add
lock
pushf
sub
call
in
addb
mov
mov
push
addb
test
shll
daa
mov
jmp
out
cmpsl
add
into
ds
cmpsl
aad
test
loopne
das
stc
fsubrl
push
aam
outsb
dec
iret
roll
jns
adc
jns
jle
lods
lds
add
popf
push
loopne
icebp
aaa
iret
mov
jno
xor
mov
test
add
out
movb
and
mov
pop
lret
dec
mov
add
push
jecxz
inc
jae
loope
mov
add
rol
push
cmp
fidivrs
and
adc
pusha
add
mov
mov
int
inc
mov
push
fisubs
jl
je
mov
gs
rorb
loope
sbb
cmp
jbe
std
int
fcomip
inc
mov
loopne
and
and
loopne
sub
add
loopne
outsb
mov
mov
add
call
mov
leave
cli
pop
push
sahf
movsb
inc
inc
stos
sbb
in
gs
mov
jecxz
es
xor
lret
xor
ret
rcrb
adc
mov
xchg
cmp
arpl
cmpsl
xchg
add
push
scas
and
pop
addr16
nop
daa
xor
fbld
popf
insb
sti
gs
and
mov
iret
punpcklwd
out
jbe
jnp
and
cwtl
or
dec
arpl
mov
mov
pusha
push
stc
push
sub
js
jg
addb
pop
aad
dec
cmp
dec
cmpsb
add
rolb
inc
inc
jne
cmp
aaa
scas
mov
shrb
hlt
add
add
stos
lcall
push
and
lods
loopne
and
loopne
addb
sub
out
sbb
lcall
cld
inc
test
iret
iret
adc
add
ss
in
pop
aaa
dec
test
and
and
loopne
enter
ja
xchg
loopne
add
jp
mov
cld
inc
jns
in
adc
ds
shll
and
inc
pop
jl
loopne
outsb
or
jp
inc
mov
mov
pop
ljmp
test
push
mov
ja
xor
inc
dec
mov
pop
mov
es
mov
pop
sbb
mov
nop
jne
adc
mov
add
cmc
ret
loopne
add
enter
inc
jge
jle
call
xchg
out
fiaddl
cld
pop
inc
ds
test
sar
pop
push
mov
push
add
mov
jae
mov
inc
or
pusha
pusha
ss
arpl
cwtl
add
mov
stos
pusha
pusha
xchg
and
push
fisubl
mov
outsl
cmp
fwait
xor
xor
and
dec
addb
dec
add
stos
addb
add
or
pusha
push
in
testb
dec
sbb
lods
pusha
pusha
rorl
dec
and
xor
inc
inc
stos
adc
stos
mov
shlb
xchg
cmpsb
rol
pusha
xchg
adc
popa
les
add
xchg
adc
push
call
mov
inc
adc
and
sub
arpl
inc
pop
jg
mov
pusha
std
cmp
aad
imulb
std
pop
lea
mov
das
add
rol
rol
inc
enter
lock
mov
cwtl
pop
clc
lock
outsl
je
andb
in
pusha
mov
pop
sub
and
clc
rcl
push
nop
imul
subl
dec
int3
cli
cmp
pusha
pusha
call
pop
xor
divb
mov
adc
inc
cmp
lret
addb
cmp
mov
cmp
mov
push
inc
aam
jb
dec
inc
dec
sub
add
sbb
jge
dec
sbb
inc
and
loopne
inc
inc
adc
adc
sarb
sub
and
pop
hlt
fnsave
push
cmpsb
inc
inc
adc
call
pusha
outsl
mov
pop
pop
rcrb
jb
iret
inc
jmp
pushf
inc
enter
dec
inc
ds
add
rclb
in
aam
fsts
xor
lods
inc
inc
dec
int3
mov
shlb
adc
push
jl
outsb
jnp
add
and
cmp
or
loopne
rol
inc
arpl
inc
inc
loope
sub
and
jl
frstor
inc
cmp
add
adc
insl
frstor
and
sub
jle
xor
pop
addb
or
pop
cmp
mov
xchg
pop
mov
dec
fimull
jne
rol
jnp
mov
or
sub
mov
jecxz,pt
and
cmpsl
xchg
mov
addb
push
dec
sahf
xor
inc
inc
dec
or
dec
in
popa
fcos
add
lret
inc
fdivrp
add
lods
and
add
mov
mov
mov
inc
or
add
inc
jo
lods
rol
or
and
fstpl
aad
iret
jo
iret
test
sbb
in
jmp
pusha
inc
and
pusha
push
cs
inc
scas
rol
iret
mov
outsb
xor
test
loopne
lock
xor
pop
in
lahf
lcall
cmp
or
loopne
test
add
mov
int3
movsb
rol
ja
pop
aam
aas
stos
sub
and
rol
rol
and
xor
outsl
mov
sub
fcoml
stos
addb
shll
rcrb
loopne
outsl
mov
mov
call
gs
loopne
or
inc
inc
mov
pop
hlt
inc
mov
rorb
enter
repnz
clc
loopne
fs
and
mov
shlb
or
dec
xchg
adcl
sbb
or
enter
adc
mov
iret
mov
xchg
cmp
icebp
sub
and
add
adc
jne
xor
mov
in
pusha
pusha
rcrb
mov
aad
mov
daa
mov
shl
xlat
pop
nop
mov
jb
rol
daa
or
inc
mov
negl
cmp
in
cmp
inc
pop
and
or
aad
daa
mov
and
loopne
and
push
pop
xchg
mov
inc
adc
fstpt
std
pusha
stos
and
inc
ret
xchg
loopne
aad
imul
testb
xor
dec
das
ret
into
jne
ja
pusha
cmpsb
pusha
pusha
mov
mull
or
shrb
pop
popa
push
bound
ror
mov
rcr
addb
mov
pop
mov
dec
push
dec
jo
sahf
mov
and
out
shlb
addb
loopne
scas
mov
add
imul
push
fucomp
lahf
mov
aaa
scas
rol
subl
mov
pusha
pop
mov
hlt
je
push
outsb
xchg
xchg
pop
add
ret
addl
inc
push
adc
cld
sahf
inc
dec
cmc
xchg
and
and
out
movsl
jne
cmc
fs
loopne
mov
xchg
add
addr16
sub
aas
lahf
or
and
stc
pushf
movsb
rol
pop
bound
cli
mov
mov
cld
mov
and
and
lods
movsl
lds
adc
in
inc
pop
leave
push
jp
jmp
rorl
cltd
dec
lock
and
loopne
cmp
push
push
cmpsb
addb
add
jge
mov
loop
sub
xchg
mov
sub
subb
dec
cltd
test
movsb
add
lahf
xchg
inc
xor
jno
dec
xor
or
rol
int3
pop
mov
xchg
mov
and
and
pop
mov
add
cmc
or
inc
inc
lds
sahf
lods
icebp
push
addb
lds
xchg
mov
imul
lret
push
pop
jnp
les
out
not
mov
pop
es
pusha
and
dec
jb
or
data16
mov
inc
aaa
add
inc
mov
dec
or
add
enter
dec
xchg
pop
movsb
mov
js
mov
cmp
xchg
loopne
test
mov
loopne
lods
addb
inc
jne
mov
and
lret
sub
pop
and
cmp
mov
fistpll
rol
in
dec
loope
aas
lock
iret
cmp
mov
ja
push
inc
inc
repz
loopne
aam
mov
add
add
stos
add
jmp
in
lea
adc
pusha
int3
push
mov
mov
inc
dec
sbb
or
shl
nop
inc
xchg
mov
nop
xchg
stc
in
ficomps
inc
popa
ror
xchg
mov
shrb
dec
pop
bnd
daa
mov
jmp
outsb
xchg
adc
andl
dec
mov
sbb
jge
push
pusha
das
loopne
push
adc
in
in
ja
into
sbb
push
mov
loopne
jecxz
rolb
addb
add
ss
mov
dec
in
adc
iret
incl
rorb
loopne
inc
inc
inc
inc
stos
addb
or
loopne
xor
push
sti
dec
test
jae
movsl
mov
xchg
push
and
pop
call
js
and
or
test
lock
outsl
outsl
inc
ss
xchg
inc
cmpsl
jle
sub
mov
or
cmp
in
cli
sahf
or
mov
mov
loopne
push
mov
pusha
pusha
sbb
arpl
cmp
pop
scas
into
mov
cmp
mov
ficomps
or
loopne
fstp
fwait
leave
mov
testl
and
jecxz
mov
adcl
jb
ja
xchg
cwtl
pop
rcll
inc
inc
test
add
mov
inc
sbb
mov
pop
xchg
das
les
and
addl
sbb
xor
xor
xabort
loopne
xor
sub
jp
xchg
insl
xchg
and
loopne
dec
gs
ja
dec
cmp
push
sbb
jbe
rol
ds
aam
addb
and
adc
push
mov
xor
mov
mov
lahf
adc
pop
jg
mov
imul
in
into
jns
pushf
pushf
mov
adc
xchg
jmp
pusha
pusha
fstps
ja
mov
loopne
rolb
clc
or
shlb
xchg
or
xchg
mov
jnp
repz
sbb
cmp
es
pusha
jle
iret
push
popa
mov
fmull
roll
addb
jl
aaa
out
jle
pop
jg
addb
out
cmp
lock
jmp
in
jmp
mov
add
cmp
jg
fldt
call
lods
iret
adc
add
mov
and
sahf
mov
js
xor
movsb
add
pop
imul
mov
inc
hlt
clts
pusha
pusha
lcall
mov
roll
mov
inc
inc
inc
pop
out
loopne
popf
stc
mov
test
dec
add
add
push
lea
out
pop
movsl
xor
sub
clc
jmp
loopne
enter
in
and
or
jle
push
sub
cmp
mov
addb
loopne
mov
enter
and
and
or
pop
sub
mov
aam
mov
pusha
pusha
pop
popf
xchg
add
pop
shrb
pushf
and
ja
out
lret
jg
dec
scas
loopne
pop
or
in
nop
lds
inc
inc
loope
mov
mov
or
popf
dec
sub
outsb
cmp
test
out
into
int
rclb
loope
dec
ds
inc
push
iret
cmp
sub
aam
dec
nop
andb
mov
rclb
mov
cmp
inc
test
and
or
pusha
ret
cmpsb
addb
lret
push
out
cltd
rorb
mov
loopne
mov
pop
xchg
or
in
xchg
mov
lret
jl
jp
push
mov
xor
loopne
xchg
repnz
jle
pusha
pusha
movsb
and
jl
adc
add
push
or
repz
in
pop
lcall
shlb
xor
or
dec
push
inc
hlt
and
rcl
jno
call
addb
rol
lret
cmpsb
rol
cmp
cld
fisubrl
fcomi
mov
mov
inc
xlat
test
or
pop
and
rcrb
mov
or
addb
add
adc
jne
pop
xchg
mov
mov
xor
out
push
xchg
sbb
in
fbstp
pop
shl
mov
loopne
jb
cwtl
lret
push
icebp
out
jb
add
fistpll
addb
mov
loopne
xchg
aas
in
sbb
mov
test
inc
imul
addb
mov
fsubl
fcompl
loopne,pn
addr16
cli
leave
rcr
mov
aam
pusha
mov
loopne
lea
popf
mov
push
and
and
mov
inc
repnz
inc
fisttpl
sbb
xchg
push
inc
inc
out
pop
mov
fsubrs
sbb
imul
lahf
lret
inc
cld
pop
je
push
inc
inc
dec
shlb
loopne
out
add
cmpsb
loopne
mov
shl
mov
jle
ljmp
cmc
rep
adc
cmp
xchg
push
rol
stc
sbb
cwtl
lahf
ljmp
ret
jns
shrb
je
and
push
inc
inc
repz
fbstp
cmc
fxtract
mov
add
stc
rcrl
cmp
mov
cltd
mov
addb
scas
addb
outsb
xor
jb
pop
nop
stc
mov
insb
pop
mov
imul
pusha
jl
int3
mov
stos
pusha
pusha
push
mov
adc
and
and
jbe
xchg
pop
push
mull
inc
jns
or
mov
mov
popf
add
and
inc
mov
out
jbe
inc
adc
shlb
and
sarl
jne
sbb
and
rcrl
inc
push
or
jno
idivb
in
or
jne
and
pusha
add
and
sub
xchg
cmp
cmpsl
inc
cld
mov
mov
jmp
pop
sub
xchg
xlat
mov
or
loopne
sbb
clc
pushf
arpl
je
jmp
fnstsw
ss
adc
inc
inc
mov
mov
dec
call
loopne
dec
orl
and
cs
inc
sbb
cmp
rol
shlb
cmp
clc
mov
inc
es
imul
loopne
inc
sbb
pusha
pusha
adc
flds
and
push
lods
and
sub
dec
bound
and
outsl
push
enter
push
mov
les
mov
and
hlt
jnp
sbb
jb
lods
mov
popf
arpl
cmc
add
lds
adc
loopne
sub
jo
pop
jne
add
jg
ds
jb
ror
inc
pop
xchg
adc
and
adcl
jns
cmp
or
loopne
mov
cmp
ss
mov
inc
inc
adc
xchg
mov
lahf
stos
mov
rol
repnz
in
jg
dec
movsl
cmp
mov
mov
and
dec
push
outsl
in
dec
js
scas
inc
popa
out
or
xor
mov
and
nop
add
or
loopne
inc
dec
xlat
rcrb
cmp
sub
pusha
scas
and
int3
fwait
mov
and
sub
add
rolb
jle
mov
sti
fwait
xchg
fldcw
cmpsb
pusha
pusha
es
inc
leave
jns
lds
add
loope
fsubl
roll
out
sti
cmpsl
clc
dec
mov
movsb
inc
inc
not
inc
add
push
jbe
mov
shrb
rcrb
clc
andl
cmp
xor
mov
shlb
addb
mov
jnp
xlat
lods
push
xchg
pop
inc
jge
in
mov
xchg
mov
rolb
js
inc
inc
sub
push
rol
loopne
out
add
adc
imul
ljmp
and
and
add
mov
add
pusha
sub
loop
adc
pop
sub
in
sbb
arpl
inc
mov
push
xlat
mov
add
xchg
outsl
push
sbb
ljmp
sahf
fsubrs
outsb
push
pop
fsts
or
jnp
andb
jae
sub
sub
mov
push
adc
stos
loopne
ret
cli
mov
inc
repz
aam
xor
andb
loopne
idiv
std
adc
mov
pusha
sub
aaa
lcall
rol
mov
jle
dec
movsb
and
cmp
jl
dec
or
cmpsb
pusha
pusha
lcall
loopne,pn
push
jnp
pop
mov
scas
and
stos
add
push
out
jno
push
jae
inc
iret
xor
iret
adc
adc
dec
push
addr16
pusha
pusha
xor
adc
dec
lahf
xchg
ljmp
sbb
out
imul
add
in
or
add
in
adc
xor
add
xchg
fldenv
mov
cmp
enter
inc
inc
cmpsl
mov
loopne
mov
push
pusha
pusha
imul
and
add
leave
js
js
mov
loopne
sbb
fisubs
rclb
adc
jp
sub
or
rorb
mov
das
cmp
in
and
mov
dec
mov
mov
adc
loopne
in
inc
sub
mov
rol
or
push
shrl
mov
xchg
rclb
adc
jge
hlt
xor
lahf
push
scas
fwait
test
mov
add
je
rol
les
dec
lret
popa
xor
fdivrl
fldt
rol
xor
mov
jle
jecxz
xor
rol
outsb
cs
mov
cmp
pop
xchg
push
stos
inc
inc
fstp
pop
sbb
rcr
pop
sub
pusha
pusha
loop
aad
push
inc
lds
pop
andb
fs
adc
cli
daa
add
cmpsl
xchg
mov
rol
xchg
mov
stos
or
cli
imul
or
aaa
dec
sub
inc
pop
mov
pop
ds
cmp
popa
pushf
xchg
mov
addb
pop
push
fildl
mov
pop
mov
and
out
pop
repz
loopne
mov
add
vmwrite
or
call
js
loope
pushf
fisttpll
pusha
pusha
xchg
stos
adc
xchg
loopne
mov
inc
inc
nop
xchg
mov
pusha
pusha
fisttpl
mov
ds
cmp
inc
inc
ss
cmp
jmp
rorb
mov
dec
jle
and
add
fists
push
movsl
mov
rorb
in
mov
mov
or
inc
mov
fisubl
xor
rcrb
add
and
pop
in
xor
mov
outsb
push
mov
int
pop
mov
cmpsl
add
mov
subl
sbb
push
and
xlat
push
cwtl
inc
hlt
clc
cmpsb
addb
push
mov
xchg
mov
mov
loop
sarl
mov
push
rol
add
inc
fsubs
cmp
aad
mov
mov
repz
sub
shlb
ret
adc
jne
loopne
repz
jp
dec
push
scas
arpl
add
js
aam
mov
jp
sar
es
inc
add
xchg
clc
movsb
add
in
dec
cmpsl
mov
ds
pop
sbb
dec
or
pop
stc
xchg
xchg
fnsave
pop
jp
test
fisubrl
mov
or
jg
push
lods
rol
insl
into
inc
cmpsb
add
mov
jp
xacquire
in
test
or
andb
rol
dec
mov
insb
outsb
dec
insb
lcall
sti
mov
je
mov
cltd
sub
loopne
inc
and
inc
cmc
mov
jo
or
add
inc
mov
arpl
addb
sahf
push
daa
test
mov
mov
mov
xor
mov
shll
pusha
sub
dec
adc
cmp
in
mov
ljmp
out
push
mov
addb
and
cmp
loopne
jo
xchg
pushf
xchg
pop
add
and
mov
loopne
dec
or
mov
pusha
or
shlb
fsubrs
clc
push
ror
fimull
mov
mov
loopne
push
les
sbb
xor
mov
add
and
mov
dec
dec
test
shr
dec
jb
or
mov
loopne
push
xchg
loopne
mov
popa
mov
add
mov
sarl
mov
pop
rolb
and
mov
inc
inc
les
or
add
mov
inc
mov
rol
xchg
mov
push
rcl
lret
call
jge
mov
das
add
arpl
xor
loopne
push
out
add
out
push
popl
mov
mov
jp
es
nop
xchg
push
loopne
lret
and
loopne
pusha
pusha
pop
repz
rol
leave
fimull
mov
gs
cli
add
rorb
outsb
scas
adc
mov
and
shlb
inc
popa
outsl
popf
xor
mov
dec
lret
test
xor
mov
shlb
enter
add
and
rol
andb
or
loopne
dec
and
and
loopne
enter
xchg
mov
aaa
ret
dec
adc
or
and
aad
loopne
cld
push
sbb
sub
add
mov
sub
jl
mov
loopne
mov
and
cmp
cld
enter
cmp
loopne
and
pusha
js
push
sub
sub
mov
rorb
loopne
jb
addb
add
loope
xchg
shl
and
add
addb
add
repnz
popa
adc
aaa
mov
jb
mov
loopne
push
mov
addl
dec
test
mull
and
scas
cmp
mov
lea
mov
and
or
imul
loopne
or
shrb
xchg
and
out
mov
mov
jl
jp
imul
dec
dec
out
adc
int
addr16
sub
pusha
pusha
movl
aas
out
rorl
subb
andb
in
sub
adc
fstps
bound
mov
arpl
pusha
pusha
dec
stc
outsb
xchg
imul
xchg
push
mov
ficoms
push
cmp
jecxz
movsl
ljmp
out
lcall
dec
push
jle
lret
jns
int3
jo
jae
fiaddl
loopne
mov
ja
icebp
sar
movsl
pop
jecxz
test
rol
xchg
stos
addb
out
in
aaa
pop
inc
cmp
loopne
fcomp
mov
nop
add
pop
xor
fisttps
and
sbbl
cmp
xchg
repz
cmp
add
loopne
loopne
ret
push
adc
sbb
cwtl
ljmp
popf
sbb
cmp
dec
push
xchg
sbb
inc
add
jae
outsl
imul
mulb
fcoml
mov
mov
fisttpll
mov
add
xchg
jo
aad
outsb
or
add
aas
push
stos
jp
or
cmc
xor
sbb
aaa
test
and
inc
and
test
ror
pusha
pusha
dec
and
add
push
loopne
sbb
mov
and
lcall
cmpsl
xchg
cmpsl
mov
mov
stos
pusha
pusha
mov
outsl
clc
mov
add
hlt
aas
icebp
xchg
loopne
push
out
leave
sbb
fucom
jae
cmc
loop
jo
stos
pusha
pusha
stos
rol
rol
jb
mov
xchg
test
add
cmp
jg
fldenv
loopne
jmp
and
shrb
inc
sbb
and
fidivl
inc
add
mov
adc
xor
adc
add
sbbb
arpl
in
dec
in
adcl
stos
pusha
pusha
inc
es
xor
mov
addb
je
lcall
shr
cmp
shrb
sbb
mov
mov
mov
sub
loopne
jle
data16
imul
pop
jnp
cmp
addr16
movsb
inc
inc
ss
add
sub
loopne
push
or
inc
push
addr16
call
ret
or
jno
sub
cmp
loopne
and
cs
pusha
jbe
pushf
xor
mov
cmp
pop
icebp
ss
xor
lods
pusha
pusha
or
add
stos
fwait
pop
xchg
or
cld
andl
bound
lret
fdivp
xor
repz
clc
cmpsl
adc
mov
sarb
loop
in
testb
shl
mov
mov
mov
ja
pusha
pusha
repnz
dec
jge
pusha
pusha
fwait
or
outsl
push
inc
daa
jg
lret
les
push
xchg
lods
pusha
pusha
mov
enter
call
imul
jge
and
into
push
ficomps
push
in
lret
sub
and
or
loopne
cmp
lods
add
iret
fisubrl
push
clc
adc
sub
mov
pop
ljmp
and
xor
adcl
mov
push
std
adc
out
rol
mov
cltd
jmp
push
rol
jle
and
pop
jp
sbb
jg
int3
bound
clc
popf
xchg
rcr
sub
and
and
aam
subl
aaa
xchg
fs
rcrl
es
mov
rolb
mov
loopne
push
inc
cmp
pop
inc
stos
add
and
sahf
sub
loopne
lret
mov
or
shlb
mov
gs
sarl
iret
mov
js
andb
pop
in
das
popa
mov
add
adcb
adc
inc
inc
xor
das
stos
loopne
jp
leave
outsl
inc
and
mov
adc
cmp
mov
dec
mov
sub
cltd
imul
mov
lods
inc
adc
jb
rol
jg
scas
loopne
push
pusha
pusha
js
addr16
cmpl
xor
sub
fwait
mov
imul
aas
xchg
sbb
lea
rol
data16
inc
inc
push
out
push
in
adc
repnz
jl
jb
add
out
leave
outsb
in
inc
gs
xor
push
addr16
addb
repz
shlb
push
add
cmc
int
xor
mov
push
mov
push
pop
orl
aad
jb
or
andb
outsb
cltd
subl
mov
sub
fsubrl
outsl
add
xchg
es
into
jle
stos
add
icebp
das
inc
mov
rorb
inc
mov
xchg
shll
dec
fcomp
sub
icebp
pop
jbe
add
and
rorb
pusha
pusha
ret
xchg
jecxz
rcl
push
lret
int3
add
inc
cmp
leave
ret
int3
push
inc
cli
rclb
dec
les
movsb
rol
pusha
pusha
out
int
adc
jnp
stos
add
xor
pushf
mov
add
aad
xchg
adc
cmpsb
loopne
int
mov
ret
or
loopne
jbe
jae
jbe
xor
leave
pop
dec
inc
mov
sub
mov
addr16
std
push
jle
roll
inc
sub
rclb
inc
arpl
dec
out
push
inc
gs
pop
lods
mov
cmp
sbb
sti
stc
adc
cmp
and
pusha
pusha
jmp
cwtl
pop
adc
adc
fimull
loopne
dec
xor
inc
fisttpll
inc
add
add
mov
rcr
sarb
mov
enter
out
idivl
rol
xor
movsl
xchg
sub
loopne
test
into
pop
mov
insb
addb
decl
xchg
shr
mov
ja
cmp
sbb
jno
mov
dec
addb
rcrb
pop
pop
mov
inc
inc
pop
lret
sub
cwtl
mov
fadds
adc
test
jnp
pushf
or
in
rol
test
xor
stc
addr16
in
add
loopne
mov
js
daa
mov
xchg
sbb
int
inc
inc
jg
jns
mov
push
mov
fwait
sarl
lcall
jge
mov
sbb
imul
push
jecxz
sbb
push
adc
pop
mov
xor
push
jae
push
lahf
out
sub
sahf
fstpt
add
lret
mov
pushf
les
out
ret
pop
test
add
push
pop
scas
add
add
mov
inc
cmp
cltd
arpl
and
repnz
rorb
loop
jl
fiadds
aaa
sub
mov
cld
bnd
and
cli
mov
addb
fdivrs
jnp
loopne
std
xor
and
mov
decl
add
mov
fcoms
out
andb
mov
add
cmpsb
add
and
sti
repz
cmp
adc
xor
shll
add
and
jecxz
cld
mov
pop
bnd
addb
stos
mov
loopne
and
and
rolb
arpl
andb
jge
mov
out
jecxz
xchg
popa
push
cltd
push
mov
dec
jne
or
xchg
sbbl
pusha
lret
jl
insb
pop
aad
inc
inc
jo
xchg
and
inc
inc
add
outsb
mov
pop
lds
pushf
pop
inc
push
lcall
pop
pop
dec
rolb
dec
or
imul
test
inc
ret
rol
add
cld
out
insb
inc
pushf
cmp
jge
push
out
add
scas
mov
scas
cmp
adc
icebp
stos
fmul
jg
pusha
adc
cmp
bound
shrb
and
rol
inc
inc
jnp
pop
xor
sbb
out
stc
sbb
push
addb
sub
loopne
addb
dec
pop
ret
push
sub
mov
gs
mov
inc
dec
repz
mov
xor
inc
nop
in
pop
insb
loop
lahf
xchg
mov
mov
cltd
insl
fldcw
add
rcrb
mov
loopne
sti
pop
mov
xchg
add
mov
inc
pop
cltd
xchg
aaa
lock
pusha
sbb
pop
pop
mov
pop
rolb
mov
orl
sbb
andb
mov
out
cmpsb
addb
and
sahf
insl
adc
fcmovne
mov
push
pop
sub
enter
lods
and
sub
push
add
jmp
push
addl
addb
mov
push
or
loopne
addb
sub
mov
inc
add
addb
or
bound
inc
std
adc
mov
das
rcrb
shll
pusha
pusha
test
dec
mov
std
mov
and
dec
cmp
pop
arpl
sub
dec
or
pop
xchg
mov
rcrb
inc
movsl
adc
loopne
adc
fisttpll
rol
add
add
jle
mov
loopne
add
fmul
fistl
pusha
pusha
xor
popf
icebp
adc
clc
add
xchg
loope
ss
sbb
jne
dec
jle
xchg
imul
or
pusha
leave
jge
pop
popf
inc
ljmp
bound
adc
jae
xchg
inc
bswap
lods
push
fsubrl
adc
rorl
iret
cmpl
cmp
in
hlt
xor
int3
cmp
fstpl
imul
mov
pop
shll
mov
jecxz
cmp
xchg
stos
or
ja
movsl
mov
add
pusha
repnz
loop
cmp
in
xorl
ror
hlt
das
xor
cld
insl
pushf
dec
mov
loopne
mov
int3
mov
loop
imul
dec
push
adc
cs
sub
and
mov
xlat
ret
and
shrb
mov
and
data16
pop
dec
cmp
rorb
into
faddl
aam
in
xor
insl
rcrb
xchg
out
jmp
jb
mov
addb
mov
mov
cmpb
aas
push
xchg
or
mov
mov
push
push
das
xor
je
sub
add
and
aaa
std
push
icebp
jb
roll
xorb
pusha
aaa
cmp
pop
lds
cmpsb
pusha
pusha
xchg
sar
insl
aas
and
and
adc
mov
icebp
cmpl
lret
lods
add
js
mov
ret
jle
orl
sbb
xor
addb
inc
movsb
and
movsb
mov
mov
cmp
jo
into
lods
loopne
int
les
orl
mov
sti
rcrl
dec
and
pusha
and
sti
addb
std
xchg
je
shl
sarl
pop
cmp
pop
subl
mov
cmp
inc
inc
emms
into
adc
hlt
loopne
out
test
and
jne
movsb
and
call
pusha
pusha
mov
mov
xchg
movl
popa
insb
iret
pop
stos
and
adc
sbb
lods
and
mov
push
and
jns
mov
add
repz
shl
in
push
into
sub
fimull
mov
mov
add
push
js
ss
pusha
pusha
push
mov
and
test
add
sub
loopne
inc
inc
cli
das
sbb
sub
imul
in
arpl
repnz
push
lret
repnz
jmp
rol
andb
add
xor
loopne
inc
inc
xor
push
pop
mov
sub
mov
xchg
pop
and
inc
inc
stos
pusha
pusha
sub
cmp
hlt
pop
sbb
inc
inc
aad
xor
mov
insl
enter
xlat
push
jge
add
insl
mov
pusha
ret
lret
gs
xchg
rcl
push
iret
in
jb
or
loopne
fs
fists
addb
mov
shl
mov
imul
into
icebp
pop
pop
cltd
ja
pop
pushf
leave
sub
orb
popa
cli
fcomps
and
add
inc
xor
addb
andb
and
les
mov
mov
inc
jge
aaa
decl
inc
inc
xor
addb
or
add
inc
repnz
push
cmp
xor
and
pop
ja
sti
xchg
iret
out
clc
out
cmp
jecxz
dec
ret
mov
sbb
mov
rcrl
mov
cli
push
addb
mov
rcrb
jbe
test
add
xor
nop
fnstcw
in
aad
jge
pop
test
and
adc
pusha
pusha
or
pop
push
popf
xlat
mov
xor
lock
fmull
mov
popa
mov
and
mov
pop
inc
pop
cmp
loopne
loope
shll
mov
shrb
pusha
xchg
addr16
inc
fsubr
fidivrl
pusha
cmp
loopne
dec
into
push
mov
mov
int
push
cmp
mov
or
rorb
sbb
rol
loopne
inc
sub
mov
loopne
lahf
jg
and
xorb
popf
mov
inc
repz
add
sahf
xchg
andb
sub
arpl
inc
sbb
call
arpl
add
je
rcr
inc
pusha
adc
mov
mov
aam
lods
rol
int3
mov
popa
add
cmpb
loopne
push
push
dec
jl
ret
inc
lret
repnz
shlb
das
in
xor
jns
mov
and
add
shlb
loop
and
pushf
push
jl
pusha
pusha
xor
pusha
jmp
test
cmc
jg
rol
sti
les
push
inc
nop
cmp
outsb
and
add
inc
inc
mov
loopne
sbb
mov
push
mov
repz
pusha
pusha
pop
xor
addb
rorb
add
popa
and
add
xor
xchg
cld
push
ficomps
cmp
in
jp
das
cs
mov
loopne
cmovnp
sti
and
mov
in
pop
outsl
outsb
test
sub
xchg
xchg
addb
and
or
add
fcmove
add
add
adc
inc
xchg
les
pop
ret
xor
mov
push
jecxz
add
jg
addb
jecxz
mov
mov
dec
ret
sbb
rcrb
cmp
mov
sbb
in
dec
fs
adc
test
popa
lret
pusha
pusha
xchg
int3
dec
mov
js
cmc
mov
push
inc
or
into
loope
xchg
imul
cmpsl
mov
mov
and
jg
out
shll
xchg
lea
and
adc
fxch
out
outsl
push
es
pusha
repz
stos
inc
inc
mov
mov
inc
hlt
shl
cmpsb
loopne
inc
pop
fs
imul
jp
sub
inc
mov
cmp
cs
inc
rcll
xchg
cmp
push
and
addb
or
and
jae
mov
out
xchg
push
popf
xchg
ror
adc
addb
stos
jnp
clc
js
clc
test
loopne
fwait
push
inc
jbe
rol
call
adc
inc
gs
in
cltd
jne
insl
dec
gs
addb
inc
inc
xchg
xlat
dec
arpl
add
scas
sub
in
movsl
cmp
jae
sub
inc
add
mov
repz
loop
pushf
ffreep
sub
popf
jge
sub
aam
pop
mov
loopne
xor
sbb
inc
arpl
push
sbb
cltd
xor
mov
loopne
mov
addb
ss
jl
jnp
ret
sbb
lahf
lret
ret
pushf
aad
addb
loopne
dec
in
cmpsl
push
test
add
repz
and
sbb
sbb
inc
push
sub
js
pusha
popa
arpl
pushf
scas
loopne
imul
jns
dec
pop
int
iret
aam
dec
dec
jno
pop
sub
rolb
pusha
jo
mov
or
rol
mov
mov
cs
pusha
dec
cmpsb
loopne
cmp
rol
push
addb
rcr
dec
pop
sbb
mov
xchg
lahf
ljmp
add
xchg
out
lds
mov
insl
fiaddl
dec
dec
xor
shlb
push
jns
rol
inc
inc
xchg
push
rol
ja
test
jg
stos
in
dec
mov
jge
loopne
fwait
pushf
push
xor
push
addb
add
mov
cld
or
sub
and
std
xchg
inc
sub
add
sbb
ret
sbb
jle
out
data16
popf
jmp
pop
jge
ja
mov
add
xchg
test
add
xlat
ja
enter
dec
xchg
pusha
lds
rol
int
or
dec
sbb
jmp
mov
cmpsb
addb
inc
ss
fisttpll
addb
cwtl
mov
addb
mov
jl
sub
loopne
jg
xchg
push
mov
andb
rol
rol
out
data16
adc
cmc
cmpsl
test
loopne
pushf
aaa
imul
jg
add
pusha
js
xchg
cli
mov
mov
mov
in
add
mov
mov
pop
or
lods
loopne
pop
sti
jl
pop
pop
sahf
aad
jecxz
das
mov
mov
xor
ret
adc
out
test
loopne
out
sub
ds
inc
repnz
xor
pushf
and
outsb
dec
sti
rorl
pop
das
inc
data16
in
lahf
mov
xchg
cmp
add
or
andb
mov
in
ja
cmp
push
cmp
add
out
jecxz
pop
loop
js
inc
inc
sub
and
addb
and
mov
and
inc
rcll
mov
rorb
jecxz
xchg
inc
hlt
sub
mov
sub
sbb
mov
popf
and
lcall
xor
adc
mov
hlt
dec
dec
iret
out
add
loopne
pop
mov
mov
rolb
addb
cmp
pusha
pusha
stos
out
in
cmp
bound
and
push
add
loopne
push
xor
jbe
xchg
jbe
out
sbb
shrb
fisttps
rcrb
mov
rolb
or
jne
inc
inc
shll
sub
and
or
sar
mov
push
ljmp
call
dec
repz
dec
repnz
mov
lahf
lods
inc
inc
adc
jl
and
xorb
and
andb
aad
popa
push
add
dec
pop
push
rol
scas
sbb
mov
mov
nop
int3
inc
pop
loop
flds
les
dec
xchg
mov
xorb
dec
test
sbbb
mov
mov
pop
mov
xchg
ss
inc
fists
push
pop
push
pop
test
fnsave
xor
je
rcrb
sbb
or
nop
xor
mov
and
inc
mov
lods
nop
xor
mov
mov
fstps
mov
inc
inc
lahf
add
pop
sbb
dec
mov
pop
dec
cmp
mov
and
pop
jno
and
loope
rol
push
popf
and
dec
decb
movsl
mov
xorb
dec
bound
rol
add
mov
pop
inc
inc
popa
jae
loopne
inc
loop
inc
bound
mov
pusha
cmp
addb
mov
and
push
sub
inc
push
mov
fs
inc
xchg
xchg
pop
hlt
loope
pop
xor
or
inc
idivb
inc
inc
jl
loopne
jge
dec
test
rorb
pusha
aas
push
cmp
out
mov
loopne
pusha
pusha
push
outsl
rol
pop
sbb
jb
jns
inc
ss
mov
and
xor
add
inc
jns
sub
clc
ss
ss
cmp
and
sub
fcoml
mov
rol
out
movsb
rol
mov
scas
loopne
test
cmp
stos
mov
movb
sbb
and
daa
mov
and
xor
fdivrl
xlat
sbb
pcmpgtb
cld
jge
repnz
std
mov
jmp
mov
ja
and
push
jmp
add
das
aad
rol
fmull
scas
mov
sarb
rorb
cwtl
xor
aaa
mov
addb
push
push
outsb
scas
loopne
out
pop
and
cmp
rol
std
pop
fs
rol
rcrb
mov
sub
shlb
pop
andb
adc
mov
pusha
lds
pusha
pusha
xchg
pop
pop
out
dec
xchg
in
scas
addb
inc
inc
enter
mov
sbb
push
ja
imul
add
pushf
or
cmc
and
pusha
pusha
insb
inc
cmp
sbb
mov
pop
adc
int
mov
rcll
pusha
pusha
scas
add
fsub
cli
leave
xchg
arpl
ret
lcall
fwait
add
addr16
or
inc
fisubrs
mov
loopne
icebp
cmpsl
sbb
test
mov
xchg
sbb
decb
dec
das
adc
rcrb
adc
xor
loopne
and
push
pop
inc
js
into
or
stos
push
repz
jns
inc
pop
xor
pop
mov
mull
scas
addb
xchg
mov
pusha
loopne
mov
jbe
lcall
rorb
rol
addb
add
sbbb
add
dec
fwait
adc
xor
aas
jg
mov
repz
xchg
pop
int
aad
and
and
aas
fsubl
adc
lcall
out
add
dec
aas
loop
lahf
dec
test
mov
sbb
std
stos
sbb
imul
and
add
repz
cmpsb
rol
and
cmpb
inc
inc
dec
xor
pop
lret
xchg
test
in
fldl
and
inc
outsb
cmpsb
inc
inc
xchg
out
or
xchg
and
push
push
rol
repz
add
addb
jg
lea
loopne
inc
lods
cmp
sub
and
cmp
mov
addr16
ret
add
in
xlat
fucomip
cmpsl
xor
push
push
and
xchg
xor
mov
adc
call
rcrl
or
fwait
addb
dec
filds
mov
add
push
lock
jmp
dec
addr16
mov
inc
jns
add
in
nop
sbb
mov
mov
mov
xchg
or
ss
dec
xchg
rorl
rol
xor
pop
pop
xchg
dec
in
mov
xorb
sub
es
addb
mov
add
cmp
inc
inc
mov
sbb
and
xorl
pop
pop
xlat
outsb
mov
and
inc
mov
add
rol
icebp
ucomiss
loopne
inc
cmp
fs
loopne
movsb
mov
xor
daa
inc
dec
jnp
pop
nop
test
add
loop
inc
dec
jg
call
push
inc
mov
scas
sbb
xor
mov
and
inc
outsl
dec
dec
xchg
cltd
daa
push
sbb
pusha
push
pusha
pusha
cmp
mov
rclb
out
je
xor
add
fldenv
loopne
mov
addb
aas
cmc
rcrl
int
mov
mov
into
loop
nop
dec
test
pusha
dec
inc
pop
mov
sub
inc
inc
lahf
aam
mov
das
jne
jg
inc
jne
push
inc
push
addb
inc
dec
push
jnp
or
and
pusha
pusha
out
mov
mov
and
mov
dec
and
add
sub
shl
sbb
pusha
pusha
adc
dec
inc
outsl
pop
jnp
push
loopne
mov
or
loopne
and
loopne
inc
out
sub
lahf
mov
and
sbbb
xor
push
pop
xor
add
pop
lret
mov
mov
pushf
leave
pop
mov
push
arpl
xor
addb
add
add
lret
xor
xchg
xchg
mov
inc
ja
cmpsb
add
lcall
loope
lahf
inc
mov
jae
clc
mov
fisttps
sub
shl
and
jb
ljmp
and
loopne
lcall
mov
add
or
add
loopne,pn
push
and
fs
and
sbb
sbb
jecxz
push
xchg
movsl
jmp
add
je
out
sub
subl
loopne
and
loopne
fidivl
fsubl
mov
mov
pop
cltd
repz
jne
jae
mov
mov
rcl
add
aas
lret
mov
lcall
mov
and
loopne
int
cltd
pusha
mov
addb
imul
rorb
inc
inc
mov
stc
imul
and
out
ffreep
mov
pop
adc
mov
data16
sarb
inc
inc
ret
push
mov
add
sti
les
lahf
sbb
insl
fcomps
jmp
test
and
mov
inc
mov
les
add
sub
inc
lock
xchg
daa
xor
shl
addb
ss
inc
shl
cmp
addb
adc
add
stc
negl
xchg
loope
sub
shlb
andl
xchg
into
jmp
lret
sub
scas
xorl
push
addb
pop
enter
xor
sbb
jne
fs
aam
cmp
insb
dec
pop
or
loopne
sbb
push
xor
sub
push
mov
jecxz
and
sar
fnstsw
jge
fidivrs
aaa
sbb
loopne
inc
dec
jo
sub
and
pop
xor
xor
adc
xor
mov
adc
dec
rorl
push
dec
leave
cmp
mov
daa
mov
push
adc
in
scas
add
ret
inc
iret
push
test
shl
inc
or
rolb
and
loopne
mov
scas
push
jg
rclb
dec
shl
jecxz
in
jns
mov
push
and
fcmovnb
scas
aad
dec
repz
cmp
cmp
mov
imul
jo
jge
les
mov
test
and
inc
stc
lods
and
push
add
pop
mov
cmp
iret
push
pusha
stc
int3
repnz
out
dec
mov
add
jo
jo
xchg
add
cmpsl
add
and
add
mov
jg
adc
fwait
or
or
add
int
mov
and
pop
sbbl
inc
inc
ds
cmpsl
pslld
cld
out
movsl
arpl
fwait
sub
aam
mov
sub
shlb
and
xchg
pop
jge
movl
mov
cs
inc
jbe
daa
pop
mov
and
lds
cmp
sbb
add
inc
xchg
mov
and
and
and
adc
pushf
jo
cmpsl
out
insl
insl
sbbl
jns
push
push
addb
ja
cmpsb
rol
cmp
pop
insb
fmull
inc
les
repnz
stos
int
in
addb
mov
popf
out
movsb
mov
mov
inc
shlb
add
add
mov
cld
loope
into
inc
push
psubusw
inc
inc
in
and
loopne
jge
and
pusha
pusha
fsubrp
data16
das
imul
xchg
cmp
mov
push
stos
pusha
pusha
dec
add
add
not
pop
and
sub
or
movsl
mov
sbb
push
arpl
aam
fcoms
shlb
push
add
inc
inc
ds
xlat
jp
mov
rol
xchg
fld1
lahf
gs
sub
and
outsl
addr16
aad
xchg
aad
inc
and
loopne
or
cs
or
push
push
rcrb
shll
sbb
rol
dec
in
jmp
scas
push
pop
shl
and
out
mov
adcl
test
ret
insb
repnz
mov
lret
ret
jns
inc
cmp
xor
fiaddl
in
mov
aad
popfw
cli
jbe
and
arpl
in
push
repnz
lret
imul
push
loop
outsl
inc
jo
sbb
push
or
inc
push
addb
sbb
or
addb
bound
je
inc
inc
pop
andb
rol
and
pop
repnz
shll
jo
push
loopne
pop
insl
pop
lea
scas
movsb
rol
shl
or
loop
and
mov
push
stos
mov
shl
outsl
and
in
mov
dec
adc
cmp
lods
outsl
mov
out
or
or
out
cli
sarb
mov
add
push
push
loopne
jmp
dec
clc
cmp
add
or
and
fisubs
xor
pop
jl
bound
cltd
rcrb
bound
ja,pt
mov
lods
loopne
add
add
jle
fwait
mov
sbb
add
insb
gs
add
sti
mulb
push
lahf
insb
push
call
add
jb
mov
dec
aaa
push
adc
add
cmp
and
shrb
sub
inc
in
leave
dec
xchg
jno
xchg
icebp
mov
dec
popf
filds
daa
adc
adc
mov
mov
nop
leave
movsl
fisttpll
xchg
cli
aas
or
hlt
add
mov
addb
loopne
mov
out
sbb
inc
inc
push
pusha
pusha
lods
addb
and
add
add
shrb
ds
rolb
pusha
xchg
je
repnz
ss
movsb
addb
call
lea
mov
or
test
loopne
jb
aas
sub
push
loopne
das
xchg
inc
adc
mov
xor
mov
push
jge
rol
pusha
add
pusha
push
jl
mov
add
add
fldl
cltd
inc
or
ds
fldcw
xchg
out
mov
sub
stos
addb
and
rorb
arpl
pop
loop
inc
inc
leave
inc
xchg
mov
ds
jno
loopne
inc
adc
orl
rol
ret
sub
push
add
mov
gs
xor
xor
sbb
mov
and
inc
add
mov
xchg
cmpsb
inc
inc
sub
mov
aas
pop
fsub
or
add
mov
mov
pop
xor
leave
clc
xor
push
mov
or
int3
test
mov
bound
inc
inc
cmp
sub
js,pt
cmpl
sub
int3
cwtl
fistps
test
mov
pusha
pusha
imul
pop
out
xor
add
cmpb
pop
xor
andb
pusha
jae
shl
lea
and
adc
bound
add
fisttpl
rol
loop
pushf
xor
loopne
push
jmp
pop
sub
pusha
and
mov
repnz
loopne
icebp
movsl
gs
loopne
and
imul
xorb
jecxz
rol
stos
and
push
out
xchg
pop
cmpsl
bound
or
and
mov
lret
test
subb
imul
aas
loop
stos
push
sarb
cmpsb
rol
and
add
gs
shlb
fimull
cmp
lret
jns
mov
rol
adc
xlat
mov
in
fs
roll
inc
inc
ljmp
in
cwtl
push
or
xchg
cmp
add
or
xor
jbe
or
ss
mov
pop
call
jbe
int3
push
xchg
ret
aam
pop
or
faddp
and
out
cmp
mov
mov
orl
inc
int3
or
icebp
mov
leave
std
dec
push
and
mov
lcall
loopne
dec
dec
mov
aam
hlt
outsl
jge
sarb
xor
xchg
out
test
mov
add
cltd
out
andb
push
xchg
xor
test
rolb
dec
jo
mov
out
pop
xchg
ficoml
aad
cwtl
xchg
push
inc
pop
punpckhbw
cmp
mov
cli
mov
divb
mov
push
pop
adc
pop
mov
push
push
cmp
xorb
pop
inc
adc
inc
inc
xor
or
in
push
sub
shlb
sbb
mov
mov
addb
jnp
fldenv
push
mov
imulb
mov
cltd
icebp
cmp
or
inc
leave
stos
les
xor
mov
fmulp
and
sti
dec
stos
loopne
lods
rol
stos
inc
inc
xor
lahf
xchg
fmull
cmp
inc
imul
dec
jo
or
mov
dec
pop
push
sub
loopne
inc
inc
push
xor
add
out
scas
in
mov
in
xchg
and
mov
js
int3
push
insl
mov
mov
jno
sahf
in
sbb
std
iret
push
fsubs
jnp
pusha
pusha
xchg
mov
cwtl
outsl
daa
repz
fstpl
sub
mov
inc
out
dec
cmp
loop
out
repnz
pop
jmp
sbb
mov
out
xchg
jns
idivb
sbb
xchg
and
xor
popa
cmpsb
loopne
sub
shlb
adc
or
and
stc
call
xchg
sbb
adc
and
inc
cmpsb
rol
inc
lods
and
pop
and
mov
jecxz
addb
and
cli
cmp
inc
ja
sub
je
and
rorb
pop
sub
and
push
xor
popf
aam
jge
mov
and
add
lods
and
jl
add
mov
lret
mov
push
out
fsubr
and
pusha
stos
push
test
pusha
mov
pop
out
push
cmp
xchg
movlhps
mov
arpl
incl
and
add
loop
mov
aam
fstl
pop
sub
test
loopne
inc
gs
scas
pusha
dec
fsubl
or
les
pop
xor
jp
out
adc
adc
mov
inc
pop
addb
rcr
jns
fld
dec
cmp
ret
sar
dec
xor
mov
inc
inc
lea
sub
shlb
mov
push
xchg
dec
aas
or
and
fnsave
inc
and
shr
push
lret
xchg
popa
jnp
xchg
aam
push
loopne
aam
rol
mov
addb
rolb
les
jno
mov
mov
enter
and
adc
cld
jge
cmp
dec
fs
gs
out
cmpl
shrl
pop
mov
xchg
mov
mov
aad
mov
addb
movsl
addb
test
loopne
adc
jo
mov
push
add
rclb
adc
xchg
add
adc
adc
dec
xor
mov
testl
xchg
lods
add
fbld
out
fldt
outsl
and
ja
sbb
mov
mov
into
into
xchg
bound
pop
mov
xchg
add
add
