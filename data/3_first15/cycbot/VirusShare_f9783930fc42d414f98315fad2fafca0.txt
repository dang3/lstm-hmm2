int3
sbb
dec
mov
pusha
add
xor
out
lahf
add
mov
add
mov
add
push
sub
pop
jae
add
add
insb
xor
aas
mov
xor
insb
fsubs
mov
mov
repnz
rolb
mov
repz
addb
mov
mov
mov
add
das
xor
mov
shrl
roll
aam
mov
add
mov
add
dec
adc
std
or
ljmp
add
mov
sbb
outsl
push
add
add
ficomps
push
add
rolb
mov
cmp
add
mov
pop
mov
enter
repnz
mov
mov
addb
out
stos
insl
xchg
hlt
push
add
ror
xor
add
mov
iret
mov
mov
adc
inc
rolb
out
jmp
jno
repnz
adc
jecxz
or
mov
add
push
and
outsb
aad
clc
inc
jp
leave
dec
sbb
mov
enter
mov
add
movsb
mov
mov
add
pop
cltd
sub
xchg
gs
push
loop
mov
mov
jns
movsl
dec
push
push
xchg
dec
push
iret
sbb
xor
mov
inc
iret
push
add
add
xor
arpl
inc
add
mov
mov
add
mov
ret
test
dec
pop
rep
fsubs
clc
pusha
add
add
shll
add
iret
lods
in
aam
push
add
add
mov
rolb
adc
mov
sbb
mov
push
push
add
add
mov
popa
or
ja
add
and
mov
dec
lods
in
daa
jle
sbb
xor
mov
add
jecxz
adc
mov
add
dec
cmc
addb
xor
mov
add
add
mov
fdivr
aam
insb
je
inc
cmp
rolb
mov
inc
cmp
or
in
mov
add
pushf
mov
jbe
add
dec
aas
push
mov
mov
cwtl
mov
xchg
inc
add
add
in
mov
add
add
aam
pop
mov
add
add
add
push
mov
jmp
addb
dec
lock
add
mov
pop
cmpsl
mov
add
sbb
mov
inc
mov
add
mov
inc
lahf
sub
add
push
add
sub
push
add
test
dec
cmp
mov
fs
mov
in
add
pop
mov
aam
adc
nop
add
pushf
push
add
mov
cmp
cmpsb
add
push
mov
add
add
add
xchg
mov
andl
loop
mov
push
add
mov
add
xchg
mov
xorl
hlt
mov
cwtl
addb
test
enter
test
and
dec
jl
movsl
and
push
add
or
adc
mov
adc
andl
mov
mov
mov
ret
mov
ret
cmp
xchg
in
cmp
pushf
movsb
push
mov
dec
cmpsb
movsb
rolb
xchg
add
mov
mov
mov
addb
jge
sbb
mov
add
aaa
stos
adc
ret
lahf
pop
test
xorl
mov
add
iret
cmpsb
les
dec
inc
add
xchg
mov
add
in
add
add
and
add
mov
mov
pushf
adc
mov
mov
mov
cmpl
add
xchg
mov
adc
mov
mov
mov
jge
int3
mov
fdivrs
mov
add
add
add
mov
ret
mov
mov
mov
add
bound
mov
mov
add
pushf
mov
xchg
jae
add
cmpsb
stc
outsb
cmpsb
rolb
xchg
add
cmc
dec
add
mov
lock
mov
sbb
mov
je
push
div
js
pop
dec
loope
jnp
pop
push
scas
insb
ja
ja
adc
repz
add
mov
mov
sbb
sub
daa
lods
jle
daa
jge
mov
mov
sbb
dec
hlt
xor
jae
test
ss
or
loopne
mov
add
mov
dec
rolb
mov
test
mov
rolb
call
mov
loopne
mov
andl
mov
add
mov
repz
adc
cwtl
aam
repz
addb
and
inc
add
or
fstps
add
mov
mov
dec
cld
movsl
push
mov
xlat
xchg
pop
lahf
lds
test
insl
lahf
and
add
notb
push
or
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
cmpsl
dec
cltd
cwtl
pop
hlt
xor
mov
dec
fsubl
movsl
ss
movb
push
dec
lods
loopne
mov
add
rcrl
and
cltd
xor
mov
lods
sub
push
mov
stos
fisubrl
cmp
mov
jl
add
popf
sbb
add
add
xor
mov
lock
add
sub
mov
in
stos
jmp
sbb
xchg
dec
cltd
jecxz
or
ret
sub
cmp
ja
rolb
mov
out
sub
mov
in
stos
call
add
sbb
fs
mov
add
adc
pop
ret
call
mov
and
jecxz
in
add
or
add
and
icebp
fwait
vmaxsd
rcll
mov
dec
bound
mov
or
aad
mov
stos
mov
test
dec
cmc
addb
pop
pop
jne
add
mov
add
dec
out
sbb
mov
data16
mov
add
pushf
adc
add
add
add
mov
adc
packsswb
mov
test
repnz
mov
je
add
into
mov
or
jecxz
mov
call
push
lods
clc
adc
pop
mov
add
sub
test
in
movsl
sub
ficoml
dec
inc
add
sbb
xchg
sub
mov
add
xor
cmpsb
mov
add
aas
fistps
adc
mov
aam
adc
jmp
mov
add
in
mov
dec
cmp
sbb
dec
imul
mov
fwait
and
add
jmp
jnp,pn
or
add
sbb
daa
repnz
mov
test
stc
dec
or
adc
mov
dec
bound
mov
mov
rcrl
repz
mov
add
cwtl
lds
pop
out
xor
add
mov
jo
mov
mov
scas
int3
mov
sti
jge
leave
in
movsl
dec
push
add
test
arpl
repz
push
adc
mov
cmp
xchg
lcall
xchg
test
mov
add
mov
mov
add
sub
das
and
mov
dec
dec
add
mov
ret
xchg
xor
int
xchg
add
cmp
lods
jle
mov
pop
loopne
mov
sbb
pop
shl
adc
addb
bound
mov
add
int
in
mov
add
adc
sub
mov
mov
mov
mov
adc
mov
cvtps2pi
push
mov
jo
mov
out
jae
stos
jnp
mov
sbb
push
lahf
in
add
cmp
shll
xchg
rcrl
add
mov
aam
or
mov
cmpsl
lret
mov
lods
shll
mov
xor
jle
and
out
es
mov
add
je
add
add
sbb
sbb
aas
mov
sbb
out
sub
call
stos
xlat
xchg
lahf
jle
testl
sbb
mov
add
jge
add
sbb
mov
mov
repz
xabort
daa
mov
ret
push
inc
add
cmpsb
lods
scas
dec
shld
push
and
int3
cli
outsb
lods
repz
outsl
fsubr
xor
dec
sti
or
mov
mov
dec
pop
mov
pop
xor
mov
jne
or
mov
enter
cltd
clc
push
lods
mov
mov
rolb
mov
nop
add
and
add
sbb
mov
adc
cmc
incl
arpl
or
add
xchg
xchg
push
sub
rcl
add
hlt
or
mov
dec
xchg
pop
lods
adc
push
add
add
add
mov
mov
dec
filds
add
jecxz
rcll
push
cli
fwait
adc
mov
mov
jbe
pop
hlt
fistpll
iret
lcall
insl
and
loope
arpl
das
pop
lds
adc
or
pusha
add
and
es
out
cmp
sbb
aam
fs
test
xor
sbb
cmp
pop
scas
and
leave
jl
ljmp
add
lods
xchg
es
mov
or
push
cmp
mov
rolb
mov
adc
mov
mov
or
lods
add
pop
aaa
test
add
mov
xchg
bound
mov
add
outsl
xchg
add
mov
add
mov
cli
lret
fdivl
add
cmp
aad
add
add
jne
pop
daa
fwait
imul
out
dec
pusha
add
mov
fwait
int3
lods
cmpsb
push
sbbl
lock
pushf
mov
add
push
int
mov
cli
inc
xlat
and
mov
ja
ljmp
and
mov
and
or
stos
xchg
aas
mov
add
int3
outsl
jmp
and
sti
loope
add
push
add
mov
mov
add
add
xor
mov
add
mov
mov
mov
add
sbb
scas
pop
lahf
addb
pop
push
add
cmpsl
test
jno
inc
push
enter
clc
add
add
mov
push
jl
jecxz
fcoms
and
mov
je
fistl
xor
fs
outsl
icebp
cwtl
ds
repz
mov
in
add
bound
mov
dec
imul
addb
or
out
clc
mov
mov
aad
mov
mov
add
adc
rolb
mov
push
cmp
add
push
in
sti
pusha
add
mov
push
addb
mov
pop
dec
shrl
sbb
rolb
mov
gs
adc
mov
mov
mov
lahf
sub
inc
cmc
lds
mov
in
adc
scas
repz
mov
mov
pop
pop
loopne
mov
add
adc
mov
add
mov
push
ss
out
stos
mov
mov
sbb
pusha
add
add
mov
add
add
scas
das
mov
mov
es
push
xor
mov
dec
aaa
push
add
mov
cmp
cmc
sbb
out
sahf
inc
inc
fldl
cli
mov
and
gs
pop
add
and
and
gs
inc
push
aaa
adc
xor
mov
sub
fdivp
mov
add
lret
dec
jg
xchg
add
add
push
or
sub
xchg
subl
setno
in
fstps
mov
mov
cld
fldcw
dec
adcl
mov
cmp
mov
mov
mov
inc
inc
add
push
insb
dec
fcoml
pop
popa
pop
xchg
sub
dec
lods
sub
inc
test
gs
mov
int
xor
mov
xchg
cmp
xor
mov
dec
fisubrs
test
out
push
sahf
and
push
dec
mov
xchg
xor
or
test
cmp
jge
mov
or
add
scas
mov
lods
int
add
lret
mov
mov
pop
or
aad
and
pop
loop
mov
add
mov
mov
out
xchg
add
add
mov
and
mov
leave
or
movsb
cmpsl
in
mov
and
mov
xchg
push
cld
inc
mov
into
aad
add
push
ret
pop
leave
repz
rolb
mov
cld
fsubl
daa
or
dec
push
in
out
out
mov
aaa
sub
mov
mov
mov
cmp
add
pop
sbb
andl
sbb
stos
xor
add
pop
jno
add
int3
dec
or
cli
orl
mov
int3
das
outsb
mov
xchg
out
loopne
mov
add
cld
add
popa
cmp
shll
mov
mov
mov
jno
icebp
dec
out
or
add
aaa
imul
xchg
inc
add
mov
aaa
cwtl
fsub
jns
xor
add
fadd
xlat
aas
scas
add
mov
sub
into
xchg
add
adc
push
insl
aad
adc
mov
or
insl
mov
add
and
push
std
loope,pn
push
pop
movsl
fbld
cmp
mov
mov
cltd
push
ljmp
inc
add
mov
addb
stc
outsw
fldl
fwait
dec
data16
jmp
mov
add
mov
stos
jp
add
jl
lahf
jbe
pushl
imul
jae
add
mov
mov
movsl
test
inc
add
lds
add
inc
or
or
mov
lahf
es
and
cmpsl
enter
xchg
pushf
push
adc
and
lods
cmpsb
stc
add
mov
movsb
mov
cmp
out
les
mov
mov
cmp
pusha
add
add
es
mov
test
fs
jbe
add
pop
mov
xchg
push
inc
mov
popa
and
add
add
mov
add
mov
mov
add
addb
or
mov
xchg
outsb
jnp
add
movsb
sti
sbb
cmp
add
sub
add
mov
mov
mov
pop
mov
lret
dec
push
add
sub
dec
add
and
mov
iret
dec
stos
hlt
push
je
push
lcall
loopne
mov
mov
mov
add
mov
dec
je
push
add
jl
xchg
inc
add
or
mov
pop
jns
push
jg
xchg
xchg
mov
inc
pushf
sahf
into
and
dec
mov
mov
ja
mov
ja
std
daa
loope
mov
mov
push
inc
add
add
icebp
gs
cmp
mov
mov
mov
adc
lods
push
push
add
adc
mov
in
mov
lret
add
rolb
mov
xor
push
ja
loope
or
add
gs
pop
movsl
lret
in
mov
add
xlat
loopne
mov
add
enter
and
mov
dec
cltd
in
jle
cmp
mov
mov
in
pop
adc
mov
add
je
fisubrl
add
lock
ds
scas
stos
or
jle
mov
mov
mov
int3
and
mov
testl
mov
cld
in
xchg
stos
or
inc
add
stc
test
lods
cmp
add
movsl
sub
into
cmp
adc
pop
xor
mov
and
cs
sub
leave
xchg
sbb
imul
and
mov
and
mov
xor
mov
add
adc
jno
inc
popa
adc
mov
add
mov
mov
or
xchg
pop
in
inc
clc
push
mov
and
mov
loopne
mov
add
add
dec
mov
add
add
add
mov
dec
stos
adc
mov
je
xchg
movsb
aas
xchg
mov
in
pop
pop
and
add
add
arpl
add
xchg
push
mov
roll
mov
or
fcomp
push
add
fs
test
insb
sbb
push
mov
es
mov
add
sub
mov
fwait
or
js
adc
inc
add
aaa
add
sbb
xor
jb
mov
daa
adc
sbb
faddl
and
mov
test
mov
mov
popf
out
jge
nop
add
in
adc
lds
add
jno
sbb
pop
cld
sbb
add
rolb
mov
add
jle
lahf
xchg
add
add
mov
push
dec
mov
addr16
cmc
sti
test
daa
xor
mov
test
jl
jnp
add
stos
fsubrs
add
cmp
loopne
mov
mov
cmpsb
ja
das
pop
test
add
fiaddl
push
xor
inc
addl
mov
sub
cmc
pop
push
mov
pusha
add
push
scas
in
push
mov
adc
mov
add
into
dec
push
fs
sub
inc
and
rcll
mov
aas
into
popf
lret
sub
mul
and
mov
add
mov
or
xchg
rcll
mov
xchg
iret
popf
jg
pop
in
pop
into
ja
orl
jne
add
cwtl
push
aam
xchg
mov
in
popa
lds
push
and
jmp
repz
xchg
cld
cltd
and
mov
xchg
add
xor
ret
cmp
lea
mov
sub
test
stc
and
aam
pusha
add
add
mov
jge
add
aas
cmp
add
mov
lcall
test
mov
add
pop
addb
mov
cmp
rcrl
mov
mov
add
xor
mov
xchg
mov
add
mov
stos
and
fcoml
repz
mov
dec
dec
mov
add
push
mov
add
push
add
es
in
dec
mov
rdpmc
sahf
adc
add
hlt
mov
mov
push
pop
adc
pop
or
inc
sarl
mov
leave
xchg
pop
lds
and
mov
push
pop
mov
bound
mov
jle
mov
mov
add
in
mov
outsl
jge
sbb
insl
sub
fldt
add
repnz
loopne
mov
add
mov
jb
mov
out
enter
call
xor
clc
push
dec
gs
inc
add
add
inc
aam
out
insb
jmp
insb
xchg
fcomps
movsb
inc
add
add
inc
mov
gs
test
call
jecxz
cmp
add
add
add
mov
mov
add
add
mov
sub
bound
mov
pop
data16
into
and
dec
and
mov
frstor
inc
add
xor
mov
and
je
movsl
and
add
loop
mov
gs
push
insw
pop
int3
or
lahf
add
add
mov
enter
sbb
popf
mov
data16
add
stc
push
fucomi
add
and
mov
add
mov
sub
jnp
pop
push
push
sub
cmp
fidivs
add
mov
mov
test
mov
mov
push
stos
or
adc
mov
pushf
mov
int
sbb
xchg
mov
add
cmp
xor
mov
mov
xchg
xchg
add
add
add
dec
pusha
add
sub
sub
add
add
cwtl
jae
sub
push
repz
push
push
add
sub
jle
xlat
aad
imul
sub
push
mull
and
mov
xchg
add
mov
add
jnp
ret
mov
dec
outsl
sbb
inc
add
adc
mov
mov
jno
enter
pop
or
call
mov
mov
add
or
mov
mov
add
mov
mov
sbb
inc
mov
or
sub
ret
push
add
lock
dec
in
lret
add
pop
pop
movsl
jbe
arpl
sub
and
xchg
add
stos
or
mov
jo
mov
add
push
fidivl
fidivl
add
scas
and
mov
movsl
xor
mov
inc
mov
add
and
mov
fstpt
xchg
add
call
cltd
cmp
add
mov
mov
insl
add
fnstsw
outsb
ret
jae
insl
scas
test
nop
add
jns
sub
imul
jo
mov
pop
push
test
add
push
mov
cmp
xor
add
mov
loop
mov
cmp
iret
ljmp
pop
mov
int3
sbb
mov
call
arpl
int
add
dec
mov
imul
xchg
and
mov
or
outsb
out
data16
in
dec
addl
pop
imul
lea
js
pushw
add
mov
add
mov
push
and
mov
push
or
ret
jo
mov
mov
mov
push
jecxz
mov
mov
hlt
mov
adc
mov
in
add
dec
sti
cmp
cmpsb
out
mov
into
nop
add
xchg
add
add
add
jl
inc
bound
mov
and
dec
stos
jmp
pop
ret
mov
push
cmp
call
aad
mov
mov
call
mov
mov
push
mov
les
arpl
mov
mov
mov
xchg
add
rolb
mov
push
cmp
repz
les
xlat
mov
sub
mov
push
sub
fidivl
pop
xchg
arpl
dec
lret
mov
add
and
aam
gs
add
dec
mov
int3
addb
and
mov
sbb
addb
rolb
adc
or
cmc
push
cld
sub
mov
fcmovne
xchg
sub
pop
int
mov
adc
ljmp
mov
mov
jae
jmp
inc
imul
jl
sub
jno
add
and
ficompl
and
cli
call
mov
jns
adc
pop
cltd
pusha
add
add
mov
push
xchg
daa
inc
add
lds
lcall
mov
in
fldln2
ja
add
mov
xchg
add
out
add
lds
sub
add
cmc
or
add
jbe
int
xchg
or
lock
add
pushf
pop
mov
xchg
out
notb
aaa
lods
jb
mov
mov
lods
cmp
push
or
jmp
pop
es
nop
add
push
rcr
xor
mov
jno
push
jg
cmpsb
lods
pop
addb
les
and
add
add
xor
sbb
fcompl
je
add
push
ret
mov
arpl
push
cmp
add
add
push
iret
inc
xchg
mov
out
mov
mov
mov
gs
push
insb
and
std
inc
int
add
xchg
add
jmp
dec
cmp
pop
jl
cmp
jo
mov
pop
fbld
mov
ds
inc
sbb
lock
cmp
mov
mov
test
js
mov
lods
incl
inc
fwait
imul
sub
adc
jecxz
mov
std
jno
dec
pop
scas
add
in
ss
lock
repnz
and
mov
inc
add
mov
movsl
jmp
jg
cwtl
sbb
sbb
rorl
push
add
mov
int
add
pop
jmp
add
out
xor
pop
or
out
arpl
push
pop
lods
rolb
enter
pop
addb
mov
je
dec
sbb
in
mov
bound
mov
sbb
add
add
cmpsb
sbb
add
jne
mov
add
mov
addl
cmp
add
add
hlt
lcall
leave
mov
or
ret
xchg
push
aas
ja
xchg
cmpsb
movsb
xchg
add
push
lods
mov
jg
call
and
add
mov
insl
arpl
ret
inc
add
mov
mov
out
pop
sub
hlt
push
dec
push
inc
addl
stos
aam
add
add
shr
jmp
lds
test
add
mov
sub
or
xor
fistps
insl
cs
in
adc
xchg
mov
fadds
add
rolb
pop
adc
dec
fistl
add
mov
cltd
add
ret
mov
xchg
fdivl
pop
push
adc
mov
fnstcw
int
arpl
addr16
dec
or
sub
inc
push
cwtl
mov
xor
mov
cmp
or
rolb
mov
sbb
je
dec
xorl
add
jle
invd
outsl
lea
xor
jno
pop
cld
repz
add
jp
push
cmp
add
mov
xchg
lret
fs
cmpsl
outsb
aad
das
cmp
outsb
mov
push
movsl
rcrl
les
and
or
add
das
jp
adc
mov
pop
sub
ss
and
add
fldlg2
test
jge
cli
jmp
push
shll
cltd
inc
out
arpl
push
jl
repnz
inc
fsubs
sbb
aam
stos
rolb
mov
mov
dec
bound
mov
ret
aas
jne
xlat
or
insb
jmp
pop
pop
outsb
mov
jo
mov
fisttpl
clc
mov
inc
fcmovnb
xor
mov
inc
fsubrs
sti
xchg
lahf
sub
xchg
xlat
out
dec
negb
mov
push
push
add
push
lahf
jge
fistpll
js
fnstsw
cmpsl
pop
or
mov
shr
add
dec
push
sub
addb
jbe
popa
in
rolb
mov
add
inc
icebp
cwtl
in
pop
xchg
xchg
add
daa
or
xchg
lahf
or
mov
mov
add
bound
mov
xor
mov
xchg
add
add
sahf
test
mov
mov
sbb
in
les
and
adc
mov
loope
sub
popa
inc
imul
xchg
add
xchg
add
add
enter
add
mov
mov
xchg
fstl
add
notl
mov
rolb
rolb
mov
lods
jle
out
mov
dec
and
pop
mov
test
add
mov
jp
lret
pop
jno
mov
xchg
testb
sbb
sti
loop
mov
pop
les
push
pop
jg
sbb
dec
rcrl
clc
movsb
cli
ret
xlat
mov
jmp
or
cwtl
cmp
out
daa
fldcw
add
lret
mov
add
ficomps
idivb
fisttpll
test
mov
add
push
pop
ljmp
out
add
cmp
cmp
outsl
add
mov
sar
inc
loope
mov
loopne
mov
add
mov
mov
add
add
add
add
mov
mov
loopne
mov
pusha
add
mov
xchg
mov
add
inc
ljmp
add
adc
lock
movsb
jo
mov
lret
loop
mov
lods
jp
mov
inc
stos
push
add
mov
popf
mov
mov
into
lock
rolb
push
add
mov
imulb
push
adc
mov
mov
lods
lods
push
in
ret
out
scas
mov
aas
aas
and
mov
sbb
xchg
mov
mov
inc
fisttpll
jo
mov
pop
ret
jbe
out
add
add
xlat
aaa
cmp
mov
lds
nop
add
pop
jp
idiv
xchg
les
add
icebp
add
mov
adc
adc
mov
pushf
add
test
jmp
add
inc
add
add
add
nop
add
add
loop
mov
stc
sub
pop
arpl
add
dec
fmulp
daa
iret
sub
lcall
out
jmp
mov
fucom
mov
dec
jg
add
aas
inc
add
pop
mov
add
mov
mov
xlat
cmp
and
mov
dec
fs
repnz
test
push
aad
xor
xchg
test
mov
mov
mov
cmp
add
mov
addb
je
pop
mov
aad
loope
add
das
addr16
xchg
pop
jb
mov
add
rolb
pop
loope
xchg
dec
lahf
dec
sbb
fists
add
adc
mov
mov
daa
pop
fdivs
dec
adc
add
pop
iret
jb
mov
and
mov
add
add
mov
andl
inc
add
out
jno
pop
pop
jmp
add
jae
lods
popf
lds
mov
adc
mov
scas
lret
fisubl
add
inc
repz
mov
pusha
add
mov
nop
add
jae
enter
je
ja
rolb
push
add
lock
sbb
insl
call
cs
mov
mov
add
rolb
mov
mov
int3
pop
sub
ljmp
lret
xor
jno
test
imul
cld
es
js
xor
mov
fs
mov
xor
mov
lods
xor
or
cmp
jge
scas
fidivl
outsb
pop
push
out
jb
mov
rolb
mov
cmp
cli
insb
test
in
mov
mov
mov
mov
stos
adc
mov
mov
pop
and
mov
mov
mov
pop
sub
mov
add
and
add
mov
nop
add
mov
push
mov
jl
xlat
mov
mov
cltd
movsb
and
xor
mov
ret
stos
movsl
jno
leave
ss
fisubs
add
imul
pop
loope
and
mov
mov
in
xor
or
dec
int3
ficomps
cltd
fs
mov
aad
add
cmp
mov
imul
or
imul
xchg
push
bound
mov
jp
frstor
mov
push
nop
add
pop
mov
mov
lret
rolb
rcrl
mov
fcmovnu
push
add
or
and
mov
pop
mov
fdivr
test
push
xchg
cmp
test
loopne
mov
or
jmp
jnp
and
pop
jg
jno
aaa
adc
and
mov
je
push
mov
push
movl
add
xor
add
add
aam
pop
cs
inc
add
loope
xchg
hlt
xor
mov
repz
pop
jno
add
jbe
add
or
pop
fists
add
mov
mov
addb
outsb
lahf
arpl
lret
xchg
out
lea
lds
imul
xchg
mov
add
or
cmpsb
inc
leave
lds
xchg
or
sbb
and
push
sub
pop
data16
push
jbe
scas
aaa
outsb
jle
jnp
xchg
add
add
mov
jp
clc
push
sub
movsb
aam
xor
cmpsl
xor
inc
add
pop
arpl
push
leave
mov
or
testb
lahf
jnp
hlt
icebp
sub
and
push
inc
jbe
add
xchg
mov
sub
add
push
iret
mov
inc
add
xor
xor
mov
add
sahf
pop
mov
add
nop
add
fisubl
mov
clc
aaa
jnp
add
xor
sahf
cwtl
lret
pop
popf
xchg
pushw
inc
mull
stos
cwtl
leave
cmp
and
aas
sub
iret
sub
pop
outsb
and
and
sbb
mov
mov
jl
xlat
repnz
add
fimull
add
lds
push
push
jo
mov
fiadds
add
roll
jg
mov
test
fsubl
cmp
test
sbb
add
mov
add
daa
leave
xor
mov
inc
pop
xchg
pop
int3
adc
arpl
pop
inc
push
add
push
add
das
lock
add
jl
rolb
mov
mov
push
scas
cltd
fwait
mov
dec
test
mov
lods
cmc
iret
or
dec
cmp
add
repz
cmp
add
mov
dec
stos
dec
add
aam
hlt
rolb
mov
dec
out
and
pop
and
mov
orl
sub
mov
cmp
and
addb
jp
add
dec
je
loop
mov
add
cld
xchg
loop
mov
add
add
addl
mov
push
and
mov
cltd
fimull
pop
out
shll
idiv
jnp
in
mov
add
and
mov
addb
push
jne
ja
addb
sub
inc
mov
mov
scas
and
add
mov
jmp
xchg
inc
aam
push
mov
ficoms
pop
xor
mov
jns
sub
mov
xor
add
mov
adc
fildll
adc
out
or
add
out
std
repnz
add
aas
sbb
mov
push
push
outsb
lds
imul
lock
mov
jbe
lret
insl
push
pop
faddl
add
sub
sub
cmpsl
pop
sbb
movsb
inc
add
mov
add
mov
repz
jmp
xlat
inc
push
test
rolb
mov
add
pop
sti
adc
mov
pushf
mov
cmp
sbb
lcall
or
not
fnsave
xchg
push
add
insb
arpl
out
mov
sbb
rol
add
xchg
mov
mov
leave
stos
or
jmp
mov
cmp
push
int3
sahf
push
xorps
add
lcall
je
and
roll
add
imul
adc
mov
and
mov
mov
inc
mov
fwait
jae
add
dec
or
jle
cmp
jecxz
mov
xor
mov
ret
sbb
mov
jns
pop
sub
iret
sahf
mov
dec
inc
enter
lods
mov
mov
push
add
and
mov
mov
xchg
arpl
add
mov
mov
rcll
mov
mov
or
imul
stc
push
pop
jl
pushf
jle
add
adc
mov
mov
jnp
and
dec
iret
sbb
jecxz
sub
add
adc
mov
add
mov
inc
dec
dec
xchg
sbb
inc
add
ljmp
fwait
ja
add
repnz
jge
jne
mov
idivl
add
popa
adc
add
mov
mov
add
fstl
add
dec
arpl
cmpsb
addb
adc
mov
sub
mov
fs
jmp
add
push
aam
rolb
mov
cltd
fsubp
insb
sbb
imul
insb
inc
sbb
mov
add
mov
subl
add
add
add
jmp
movl
clc
dec
test
insb
add
mov
daa
ret
xchg
pushl
cmpsb
add
add
and
add
add
add
iret
mov
aam
sub
mov
add
mov
jbe
add
movsb
adc
mov
add
mov
jae
fwait
dec
jae
shrl
stos
ret
jl
adc
fxch
jo
mov
mov
sbb
ljmp
lahf
pop
outsl
xchg
mov
jbe
xchg
call
ljmp
add
fs
lea
mov
xchg
sub
mov
sbb
xor
adc
mov
mov
jmp
mov
pop
jbe
dec
and
aam
les
push
outsl
sbb
cli
mov
mov
jae
dec
mov
int
movsb
xchg
sbb
sbb
jnp
jb
mov
sti
xchg
je
adc
xchg
mov
inc
lock
cltd
mov
pop
rolb
inc
add
insb
sbb
xchg
push
jae
push
add
add
push
mov
repnz
mov
mov
sbb
add
mov
imul
lock
test
in
push
add
push
jmp
push
jl
repz
mov
mov
rolb
mov
cmp
cmp
add
pop
cltd
dec
or
movsl
outsb
aad
mov
out
dec
loop
mov
jmp
xchg
add
push
add
mov
push
enter
sbb
scas
xchg
cld
add
fwait
mov
test
pop
lea
push
cli
cmc
cmp
xchg
test
mov
mov
add
leave
in
xchg
mov
push
mov
mov
addb
imul
lret
xlat
push
add
xchg
lock
bound
mov
add
fucom
mov
mov
cmp
xchg
mov
mov
lret
iret
jbe
popf
pop
clc
push
pop
dec
lods
pop
or
int3
sbb
add
mov
add
mov
stc
rolb
mov
add
xchg
mov
mov
sbb
inc
add
jb
mov
mov
jmp
push
lods
call
or
ds
add
ss
subl
sub
add
sbb
jmp
test
sub
xor
mov
je
push
out
cmp
mov
push
add
nop
add
es
mov
jbe
sub
mov
fiaddl
jle
inc
lea
pop
sbb
lcall
mov
scas
xor
and
cmc
mov
add
dec
cmpsb
cld
dec
pusha
add
jl
mov
das
lret
mov
add
sbb
push
add
push
xchg
fisttpl
fidivrl
pop
in
add
jo
mov
cmp
add
push
cmp
stc
lret
jle
add
add
add
sbb
inc
add
sub
lahf
xor
add
addb
movsb
sbb
mov
dec
lahf
popl
mov
dec
push
shll
test
inc
or
ljmp
call
add
mov
add
test
inc
stos
cmp
out
fisubs
add
push
inc
xor
dec
dec
mov
sub
jns
jo
mov
enter
add
test
pop
jae
add
mov
push
hlt
xchg
add
mov
lea
add
out
les
xchg
gs
pop
lods
push
in
xor
mov
in
es
repnz
inc
in
loop
mov
add
faddl
or
mov
int3
adc
mov
push
lret
lret
add
pushf
ja
pop
inc
add
inc
sti
jnp
mov
adc
mov
in
addl
mov
stc
pop
push
add
cmpsl
sahf
pop
mov
cmp
pop
jbe
add
cmpsb
push
inc
jbe
push
pushf
inc
inc
popf
test
add
addb
outsl
ret
loopne
mov
pop
jl
jle
lods
addb
add
mov
add
mov
clc
xchg
add
mov
adc
jns
outsb
lods
pop
jno
outsb
out
enter
lods
sub
in
mov
hlt
or
pop
mov
or
adc
sbb
pop
xchg
icebp
push
add
push
cmpsb
aas
push
add
pop
push
add
push
sbb
and
mov
loop
mov
js
mov
in
fmull
ret
and
mov
mov
lret
adc
mov
adc
jge
push
fsubl
lds
add
lds
push
ficoms
data16
cld
test
into
bound
mov
mov
cli
pop
mov
mov
test
inc
pop
pop
dec
xor
lahf
stos
mov
inc
dec
dec
sbb
and
fwait
ret
jmp
inc
add
das
stc
inc
mov
lcall
inc
add
sahf
lret
mov
in
out
sub
lods
mov
add
cmp
mov
jp
mov
mov
add
xchg
inc
outsb
rolb
mov
or
test
pop
sub
adc
mov
jno
add
cmp
add
int3
sbb
fists
sub
mov
xchg
add
mov
repz
fstl
sahf
xchg
adc
std
push
fistpll
push
ret
mov
xchg
aam
xlat
in
mov
sub
mov
enter
mov
push
lods
stc
jb
mov
add
jg
mov
add
cmpsl
dec
bound
mov
popf
adc
mov
test
push
mov
mov
xchg
lret
adc
mov
pop
mov
or
mov
incb
mov
mov
mov
push
pop
xor
lcall
das
jb
mov
add
add
add
aaa
jmp
xchg
push
lret
daa
mov
stos
cmc
mov
pop
jg
out
out
loopne
mov
in
lcall
mov
cmc
repnz
rolb
mov
jle
add
repnz
fimull
out
pop
mov
cmp
addb
outsl
xchg
inc
sarl
pop
lea
add
push
jbe
add
test
clc
dec
clc
mov
clc
mov
adc
mov
and
mov
add
cmp
pop
mov
add
mov
add
stc
in
or
add
fldl
adc
mov
xor
in
mov
aad
jl
add
fucomip
loop
mov
add
pop
dec
fldcw
addb
cmp
mov
xchg
cmp
xchg
cmpsb
sbb
cmp
add
lods
into
inc
jnp
mov
add
pop
pushf
mov
mov
inc
add
fbld
mov
add
fs
daa
es
sbb
cmp
call
add
pop
cmp
add
inc
sbb
xchg
push
hlt
stos
mov
push
jp
sbb
adc
arpl
push
mov
pop
outsl
jg
movsl
sbb
aam
rolb
cmpsb
sbb
add
aad
jae
shld
add
pop
cmp
testb
add
out
sbb
inc
mov
cs
dec
inc
icebp
and
push
mov
or
mov
pop
adc
es
xchg
add
daa
leave
mov
pop
and
js
adc
mov
arpl
addb
and
mov
or
xchg
in
push
insl
iret
dec
xchg
adc
mov
loope
xchg
add
aas
adc
add
rolb
mov
mov
mov
add
mov
icebp
pop
xchg
iret
ret
pop
pop
dec
pusha
add
add
add
outsl
pop
shrl
loop
mov
and
notl
mov
mov
stc
addb
and
mov
icebp
dec
and
sub
mov
add
pop
jbe
jne
push
add
and
push
ret
add
mov
jbe
ret
pop
stc
jp
cmp
icebp
cmp
in
push
push
push
pusha
add
push
cmpsb
lods
push
in
xchg
add
mov
ftst
mov
mov
clc
jbe
mov
mov
add
xchg
add
mov
mov
xchg
mov
test
mov
push
jge
dec
nop
add
add
xchg
push
add
cltd
and
jo
mov
mov
repnz
mov
and
mov
mov
sti
add
sub
or
adc
mov
js
and
mov
cmp
xchg
repnz
gs
daa
fnstenv
addb
xchg
icebp
cmovb
mov
aas
jmp
push
fdiv
filds
iret
sbb
js
mov
bound
mov
xorl
mov
or
add
clc
push
cmpsl
loope
mov
add
ret
in
add
mov
lock
mov
inc
int3
mov
inc
add
xor
mov
pop
mov
lret
int3
int3
inc
add
jle
stos
ds
add
pop
mov
nop
add
add
push
inc
sbb
lret
test
stos
adc
out
xlat
and
mov
mov
jmp
push
xor
mov
mov
cmp
fistpl
and
add
push
mov
xchg
mov
add
mov
movsl
cmpsl
push
add
addb
and
and
mov
jg
add
ret
xor
mov
mov
push
lods
popa
lcall
repnz
ret
adc
repz
inc
aam
add
sbb
cmc
fldl
mov
dec
mov
test
loopne
mov
mov
push
test
mov
cwtl
or
aam
add
xor
mov
adc
pop
or
stos
pushf
push
mov
sub
sbb
in
xor
in
xchg
rolb
mov
cmp
mov
iret
in
dec
add
mov
das
pop
pop
addb
cmp
add
mov
hlt
into
in
or
dec
cmpsl
cmp
add
push
push
insb
cmc
inc
out
scas
sbb
xor
mov
inc
add
mov
push
fcompl
mov
mov
hlt
imul
push
insb
adc
leave
or
cmp
push
ret
test
inc
insb
dec
movsl
lods
mov
orl
xor
or
add
sbb
mov
push
in
sti
mov
mov
popf
xchg
xor
mov
pop
adcl
mov
lock
cmpl
cmp
add
fsubrl
mov
int
dec
rolb
mov
mov
add
in
sub
sub
xchg
fdivs
mov
mov
jae
sub
dec
aas
insl
add
mov
xor
mov
pop
aas
sbb
pop
xor
jno
loop
mov
mov
mov
adc
data16
cmp
mov
push
clc
xchg
les
pop
int
add
pop
mov
dec
mov
mov
push
add
add
sub
jge
ror
stos
rolb
mov
movsl
insl
repz
add
ljmp
push
jbe
add
mov
add
leave
hlt
lods
lret
mov
cmp
lock
outsl
lcall
mov
mov
jecxz
add
imul
stc
cltd
inc
add
arpl
dec
je
ljmp
push
add
or
fmul
and
mov
xor
cmp
add
rolb
mov
add
mov
inc
inc
mov
push
push
push
test
jl
sbb
add
sbb
xchg
mov
pop
jns
push
js
add
add
add
inc
add
outsl
test
push
ja
mov
popf
inc
add
push
add
mov
imul
add
mov
and
mov
cwtl
adc
mov
lret
pop
sbb
adc
mov
dec
lea
addb
std
bound
mov
xchg
add
add
add
pop
movsl
xchg
add
lods
ljmp
sbb
pop
cwtl
rolb
mov
fdivrp
fsubl
push
jl
out
add
mov
mov
jg
xor
jbe
add
mov
aaa
nop
add
out
push
cmp
insl
popf
xchg
cmc
test
mov
aam
out
or
out
fstpt
mov
aas
shll
je
jecxz
mov
sbb
xor
mov
add
addb
push
arpl
movsl
into
jle
lods
xor
mov
cmpsb
push
add
mov
adc
lcall
mov
imul
add
add
or
sbb
pop
and
mov
add
add
or
jbe
out
mov
mov
arpl
mov
add
mov
pop
jecxz
inc
sub
fwait
push
lods
cmp
idiv
rolb
mov
add
outsl
push
lods
pushf
iret
xchg
fwait
loope
nop
add
add
lock
xor
mov
js
inc
xor
mov
dec
xchg
cmpsb
xlat
sbb
aam
inc
in
inc
pop
in
xchg
rolb
push
fistps
jp
pop
sbb
aaa
xlat
sti
repz
push
stc
and
xor
adc
mov
pop
les
addb
jmp
and
push
add
stc
or
popf
out
dec
rolb
mov
jns
std
int
lods
mov
jb
mov
sbb
imul
sbb
adc
inc
add
sub
rolb
mov
mov
add
xchg
into
dec
pusha
add
add
jl
xor
mov
mov
repz
and
and
xchg
push
xchg
cmp
addr16
push
cmc
movsb
outsl
add
cmp
add
mov
mov
addb
dec
icebp
xor
mov
rolb
mov
push
dec
sub
fucomp
fwait
stos
lock
fucomip
ss
test
lahf
adc
xchg
mov
mov
mov
mov
cmpsl
lea
add
mov
std
and
mov
xchg
mov
mov
sbb
mov
mov
outsb
lods
sub
mov
sbb
sahf
ret
jge
fdivrl
rolb
mov
mov
add
stos
movsl
test
push
mov
add
mov
mov
jo
mov
and
mov
sbb
pop
insb
lods
or
push
mov
mov
pop
sbb
mov
lock
xor
mov
add
mov
dec
xor
addb
movsl
pop
mov
addb
mov
or
rolb
aam
pop
inc
add
xchg
shll
addb
xchg
dec
xor
add
fidivs
pop
push
pop
cmp
mov
mov
add
mov
dec
test
fisttpl
push
loope
lea
nop
add
and
mov
sbb
mov
addb
ret
in
jg
fidivs
add
add
rolb
mov
pop
sbb
or
cmp
outsl
iret
sbb
cmp
mov
cs
jg
fldcw
test
cmp
nop
add
mov
mov
stos
test
sbb
clc
mov
js
cmpsl
outsl
mov
stos
rolb
add
mov
and
mov
add
ja
pop
push
gs
add
jnp
cld
addr16
add
and
push
mov
add
add
mov
jbe
cmp
push
xchg
test
ds
xor
ret
jnp
cmp
mov
fimull
stos
arpl
add
xor
mov
cmp
lcall
sbbl
lahf
mov
stos
inc
add
cld
lods
cmp
int
outsl
sbb
sbb
pop
push
and
popa
lret
pusha
add
push
add
mov
outsb
aad
addb
jl
add
mov
ret
lock
divb
push
xor
inc
add
push
sarl
jle
cmp
jns
inc
xchg
mov
cli
rorl
add
scas
mov
outsl
decb
rolb
adc
mov
push
test
movsl
push
push
lahf
cmp
imulb
cmp
push
outsb
cmc
addr16
add
or
outsb
les
repz
push
jae
push
add
jecxz
xorl
ss
mov
jno
mov
add
adc
mov
cmp
xchg
add
xchg
stc
lret
arpl
scas
mov
cld
add
pop
sub
cmp
clc
mov
mov
add
mov
xchg
addr16
in
add
and
mov
mov
push
dec
fstps
lcall
add
cmp
in
adc
rdmsr
add
add
call
enter
push
cwtl
cmp
in
stos
adc
mov
pop
adc
mov
mov
lret
adc
mov
rolb
cwtl
cmc
mulb
mov
add
pop
xchg
add
ss
popf
rolb
mov
mov
xchg
push
pop
push
xchg
rsqrtps
mov
push
and
add
jnp
add
mov
add
xchg
loope
sub
adc
sbb
out
aas
nop
add
or
pushf
pop
or
or
xlat
push
call
add
or
add
adc
cltd
push
xor
mov
mov
mov
mov
movb
add
loopne
mov
pop
incl
add
std
inc
add
add
xor
mov
rorl
xchg
stos
push
pop
pop
cmp
pop
sbb
mov
shll
add
pop
xor
jmp
out
mov
dec
and
mov
mov
push
add
mov
mov
xchg
add
mov
jecxz
and
mov
add
add
cmpsl
rorl
push
add
out
movsl
ljmp
mov
add
add
add
loope
push
lods
push
movl
inc
add
sbb
dec
lods
out
les
mov
or
outsb
repz
xlat
pop
dec
fwait
jbe
lret
add
mov
push
push
add
mov
test
add
mov
clc
sbb
xlat
int3
inc
imul
or
mov
sbb
add
mov
add
adc
mov
push
imul
aas
lret
and
mov
mov
lods
pusha
add
add
into
sub
js
js
sahf
xchg
or
add
mov
sti
jge
cmp
push
sbb
add
mov
or
cmp
cmp
jp
mov
mov
dec
insl
fwait
and
mov
mov
aam
out
sub
and
inc
loope
aaa
rolb
mov
add
mov
arpl
mov
jl
pop
fiadds
add
add
ss
sbb
lahf
loopne
mov
addb
insl
gs
fwait
enter
and
rolb
faddp
testl
jbe
pop
mov
add
pop
jl
add
outsl
and
in
mov
add
inc
mulb
jno
add
xor
push
imul
gs
inc
leave
cmp
add
pop
fdivs
add
arpl
add
jbe
inc
test
jns
add
inc
movsb
nop
add
or
and
sbb
inc
mov
mov
pop
fldl
mov
sbb
cli
mov
sbb
cmc
out
sub
loop
mov
in
adc
fsubrl
cmp
loope
fidivrl
pop
mov
push
in
jecxz
xchg
jae
fcmovnu
jl
lea
jb
mov
adc
mov
stc
cmp
or
jp
movsl
push
xchg
lds
pop
or
popa
push
add
je
rolb
mov
pop
sbb
sub
mov
sub
ret
out
movq
jge
pop
int3
add
jae
cwtl
pop
push
sbb
inc
or
add
stos
add
lea
sub
xor
mov
or
jge
pusha
add
sbb
test
mov
mov
xor
push
arpl
mov
pop
adc
mov
testb
or
push
pop
or
add
push
sbb
adc
mov
es
xchg
cmp
fdivrl
and
pop
pop
mov
adc
mov
std
sub
mov
test
dec
mov
add
mov
adc
mov
dec
mov
and
pop
test
outsl
adc
frstor
filds
push
dec
inc
add
pushf
lock
mov
xor
mov
mov
add
daa
sbb
test
enter
jl
mov
mov
rolb
mov
xor
add
clc
aad
jle
mov
or
imul
and
mov
mov
cmc
and
jne
add
mov
inc
test
hlt
sbb
mov
xchg
gs
daa
loop
mov
add
mov
stc
dec
xchg
sbb
ret
push
add
fstpt
ja
add
add
in
pop
jge
jo
mov
inc
cmp
addb
cld
in
mov
add
pop
out
add
mov
cwtl
xlat
add
add
shrl
mov
jbe
roll
mov
jmp
push
push
or
xchg
add
add
cmp
add
cs
popa
inc
add
pop
adc
cmp
fnsave
or
out
enter
popf
mov
push
pop
cmpsb
jns
add
lret
push
stos
mov
icebp
rcrl
imul
push
dec
pop
mov
mov
lahf
ja
rolb
repnz
fcomip
sahf
stos
mov
cmp
into
cmp
cmp
xlat
lods
nop
add
jb
mov
add
xor
lcall
cld
ds
mov
aas
popf
bound
mov
xchg
add
pusha
add
addb
sbb
mov
jp
shll
jg
add
jae
xchg
enter
mov
rorl
add
jle
sbb
or
jae
sub
cmp
sbb
incb
mov
xor
lods
lahf
push
cld
mov
ret
mov
add
add
add
pop
lds
xchg
rolb
mov
add
add
adc
mov
add
mov
test
aas
jne
bound
mov
pop
jmp
addb
loopne
mov
imul
add
loop
mov
jmp
cmp
push
enter
xchg
xor
lds
mov
jl
and
loope
and
mov
stc
int
rolb
add
mov
mov
sahf
inc
sub
popl
dec
sbb
sahf
fsubrs
add
bound
mov
test
push
mov
push
adc
mov
add
mov
push
addb
testb
loop
mov
cld
cmp
add
js
jle
pop
sbb
mov
mov
pop
fwait
mov
push
sbb
mov
lods
ja
in
dec
pop
and
jl
and
mov
rolb
mov
in
or
mov
pop
mov
cmp
addb
jnp
push
ret
sub
mov
dec
or
xchg
jl
xlat
in
or
cld
ficompl
loop
mov
mov
ds
pop
lock
in
repnz
into
push
sub
aaa
xor
mov
inc
insb
and
mov
dec
xor
bswap
mov
mov
mov
jo
mov
mov
add
add
test
jge
test
aad
sub
add
push
or
pop
sub
sarl
lahf
addr16
fidivs
out
or
mov
dec
push
mov
aas
xor
rolb
mov
xor
mov
mov
push
mov
mov
cmpsl
es
jno
push
pop
lods
sub
or
add
mov
mov
bound
mov
repz
pop
cwtl
test
pop
or
xchg
je
add
add
xchg
xor
negb
jecxz
sub
mov
add
mov
lock
mov
sub
addb
adc
and
mov
add
cmp
mov
nop
add
dec
mov
mov
push
imul
sub
ljmp
ret
inc
push
lea
add
add
call
push
jae
jo
mov
sub
push
add
add
adc
mov
sub
je
scas
mov
shll
mov
addb
mov
adc
mov
xlat
into
ffreep
int3
jecxz,pn
cmp
dec
testl
jge
lea
and
mov
add
add
imul
mov
outsl
mov
add
xchg
int3
add
add
jl
adc
scas
adc
xchg
xchg
out
jnp
mov
insb
je
adc
cmc
xor
notb
daa
jb
mov
aam
mov
push
lret
xor
mov
cltd
addb
mov
mov
add
add
cmp
mov
jp
rcl
add
dec
or
and
mov
add
mov
xchg
stos
xchg
jo
mov
xchg
inc
jo
mov
jb
mov
mov
add
pop
mov
outsl
idivb
add
sub
add
in
add
pop
ret
push
add
fwait
bound
mov
lahf
into
jne
add
imul
xlat
mov
add
sub
mov
pop
xor
mov
das
pop
push
push
sbb
or
mov
jb
mov
add
push
add
mov
and
add
pusha
add
mov
mov
push
stos
sbb
loope
les
jns
jne
rcll
insl
pop
add
add
pop
sti
sbb
mov
push
loopne
mov
dec
add
mov
mov
push
mov
mov
rorl
jmp
and
mov
mov
mov
add
repnz
push
jo
mov
mov
cmpsb
cld
xchg
add
dec
pop
and
and
fistl
mov
fsubrs
add
fwait
mov
mov
adc
mov
push
out
lahf
jbe
addb
and
aas
xchg
std
insl
push
mov
das
addr16
and
insl
es
add
addb
mov
ja
push
mov
push
add
add
mov
mov
movsl
fbld
sub
pop
filds
andl
or
and
mov
add
inc
cmpsl
mov
add
mov
push
dec
arpl
popa
repnz
pop
dec
out
jge
jecxz
xchg
outsl
hlt
xor
leave
into
dec
shrl
sub
jnp
xchg
sub
mov
mov
add
nop
add
dec
or
int
cltd
das
fisttpl
cmp
mov
add
fsubr
aaa
sbb
or
enter
dec
into
call
addr16
arpl
loop
mov
add
mov
add
pusha
add
mov
add
scas
nop
add
add
icebp
push
pop
mov
mov
add
popf
or
inc
or
mov
add
xchg
addr16
mov
add
addr16
mov
add
lods
icebp
cmp
stc
jbe
add
mov
pop
lcall
ja
dec
dec
xchg
pop
das
insb
addr16
jo
mov
imul
mov
test
pop
add
mov
cs
xor
ds
cld
jle
or
add
loopne
mov
and
mov
cmp
adc
mov
mov
add
test
pop
mov
pop
gs
push
rolb
mov
add
mov
mov
dec
add
mov
pop
cmp
data16
add
mov
mov
mov
mov
leave
push
adc
mov
sbb
clc
mov
mov
mov
add
pop
add
add
mov
add
andl
rolb
mov
adc
mov
dec
lock
mov
sbb
mov
add
add
add
rolb
mov
add
cmp
inc
pop
and
and
mov
fwait
pop
sbb
pop
push
aam
sub
loope
mov
dec
dec
mov
dec
sub
cs
mov
xor
mov
test
std
js
int3
xor
mov
stos
in
ss
lcall
and
dec
or
mov
add
test
addr16
xor
mov
xchg
add
add
lock
lahf
mov
out
or
lret
add
xor
icebp
outsl
or
sub
add
leave
and
aad
enter
mov
jl
xor
add
pop
fsts
add
mov
loopne
mov
cmp
lock
inc
addb
pop
sub
mov
insl
lea
jb
mov
insl
lret
jns
test
mov
mov
in
popf
pop
mov
or
mov
imul
mov
add
mov
pop
mov
and
jns
push
push
std
popf
adc
pushf
xchg
push
add
mov
push
push
sbb
test
addb
add
push
xchg
rolb
mov
xchg
rolb
mov
fdivs
sub
add
mov
inc
inc
or
fwait
int3
sub
jg
fs
add
pop
mov
lods
fsqrt
cmp
imul
mov
add
or
arpl
imul
int
lahf
pop
iret
xor
ficoml
lcall
rolb
fcmovnb
fldl
add
jecxz
jae
add
add
inc
add
lods
and
aad
sbb
jge
jp
add
push
lods
sbb
pop
data16
mov
add
lock
mov
mov
push
dec
stos
inc
add
mov
mov
adc
mov
mov
mov
push
add
add
mov
pop
pop
adc
mov
rolb
mov
and
stos
dec
or
mov
ja
stos
mov
push
lods
into
xor
mov
arpl
rolb
mov
mov
sub
lea
and
enter
add
jbe
dec
clc
cwtl
mov
call
mov
cltd
inc
add
push
push
add
insl
pop
aam
or
add
dec
rcl
adc
adc
mov
add
sbb
sbb
jbe
cmp
mov
rolb
lret
pop
cmp
jne
mov
stc
mov
test
mov
pop
fimuls
cmp
test
add
mov
add
test
add
and
mov
mov
or
pop
xor
cwtl
movl
fstpl
add
in
stos
insl
sub
inc
test
int3
push
pop
mov
add
xchg
adc
repnz
lret
inc
sub
js
add
push
mov
pop
mov
push
jnp
aad
scas
rolb
mov
jae
mov
lods
push
es
testl
push
adc
mov
jbe
fidivs
mov
sbb
cmp
mov
mov
repz
adc
mov
nop
add
mov
jns
hlt
inc
add
add
mov
nop
add
mov
rolb
mov
sub
cwtl
out
pusha
add
push
sbb
adc
mov
and
repnz
loop
mov
decb
adc
xchg
cmp
jecxz
lods
dec
stc
inc
rolb
les
jo
mov
mov
mov
mov
cmp
pop
xchg
int
add
dec
out
lea
or
in
push
pop
and
mov
mov
pop
sbb
test
int
into
xor
or
int3
ss
push
leave
push
ljmp
xor
xchg
mov
sbb
cmp
mov
incl
loopne
mov
insl
adc
mov
cmp
add
add
mov
mov
add
dec
sbb
or
lods
add
pop
fnstenv
add
add
les
insb
dec
add
push
cmp
mov
test
pop
dec
cmp
sub
lahf
mov
int
out
into
mov
cwtl
xchg
adc
mov
sub
js
add
inc
imul
out
pop
lea
dec
and
mov
xor
adc
mov
repz
add
cmp
mov
push
lock
mov
and
jmp
add
mov
imul
add
add
xlat
cmp
push
stc
xchg
ror
movsl
push
push
lods
mov
mov
dec
ljmp
sarl
pop
mov
addb
idiv
rolb
mov
mov
mov
jge
add
adc
sbb
stos
daa
out
mov
add
outsl
pop
arpl
movsb
adc
mov
pop
dec
insl
jp
mov
mov
bndldx
mov
aam
add
nop
add
dec
jmp
sub
iret
das
ret
jmp
pop
repnz
add
aas
push
jg
sub
cmp
xchg
add
mov
cld
fwait
loope
xchg
cli
jns
fistpll
or
mov
mov
add
leave
rolb
mov
bound
mov
or
xlat
imul
or
xorl
mov
pusha
add
add
add
mov
dec
nop
add
dec
in
xchg
sub
dec
in
stc
cmpsl
arpl
lock
jmp
mov
add
push
ljmp
sbb
push
push
push
add
dec
cwtl
or
add
xchg
xchg
stos
mov
ret
mov
loop
mov
fcmovnu
mov
adc
mov
add
add
ret
cmp
or
push
addb
push
das
mov
add
push
roll
mov
mov
add
mov
dec
ret
addl
add
mov
jnp
add
pop
mov
rolb
mov
lds
mov
inc
lcall
clc
aam
or
arpl
cmp
pop
jp
xor
mov
jmp
dec
jmp
sbbl
in
pop
shll
std
call
or
int
les
lret
ret
and
mov
add
mov
and
mov
movsl
jmp
xchg
add
add
lcall
add
mov
arpl
push
or
insb
leave
or
or
add
jne
mov
mov
add
es
jp
arpl
mov
add
aad
sbb
add
cmp
rolb
rolb
mov
add
inc
mov
add
add
in
fisttpll
push
and
mov
inc
adc
scas
push
mov
cmpsb
sahf
cmpsl
popa
push
adc
add
hlt
ret
sub
mov
or
pop
imul
mov
mov
add
aaa
sbb
pusha
add
adc
add
mov
stc
xor
push
aas
pop
jb
mov
jg
fistpll
test
add
xchg
add
rolb
mov
mov
mov
pop
addb
xchg
into
adc
rcll
push
xchg
mov
or
add
cmpsl
jno
adc
ja
add
add
mov
add
sti
ret
xor
cmp
inc
mov
addb
add
mov
out
jecxz
jge
lcall
and
add
jmp
pop
pop
int
test
inc
insb
lds
inc
sub
add
mov
xlat
std
dec
in
std
adc
pop
clc
dec
mov
push
jg
or
stos
jae
xchg
mov
test
into
or
loop
mov
push
and
mov
sub
rolb
mov
fists
mov
adc
add
push
out
mov
mov
mov
adc
xchg
lret
mov
add
mov
fsubrs
mov
inc
add
add
mov
mov
cwtl
popf
pop
jmp
subl
or
adc
inc
rolb
lods
inc
pop
aad
mov
loopne
mov
or
ficoms
add
add
mov
out
add
add
clc
xchg
int3
xlat
rorl
add
adc
inc
lock
or
cmp
cmp
sbb
add
or
push
lods
mov
add
test
lret
or
sbb
es
dec
test
pop
sti
mov
lods
dec
in
out
daa
jns
nop
add
add
push
lret
fsubl
loopne
mov
mov
cmp
sbb
mov
mov
adc
mov
mov
inc
addb
inc
imul
cld
lock
lahf
adc
mov
xchg
jp
add
iret
or
mov
and
mov
add
lock
mov
pop
mov
dec
pusha
add
add
mov
popf
and
mov
cmpl
clc
push
add
lock
int3
lds
add
mov
add
add
cmp
add
rolb
sbb
add
add
add
mov
btr
jb
mov
push
push
lods
clc
addb
jge
test
and
mov
xor
add
pushf
push
es
mov
mov
cwtl
das
inc
cmc
dec
xchg
rolb
mov
test
add
cmp
add
mov
mov
sbb
std
cli
dec
adc
cmp
add
mov
and
mov
out
cld
jbe
lods
mov
add
loop
mov
cs
mov
add
iret
mov
mov
jne
push
ds
mov
mov
push
sahf
testb
add
cli
xlat
inc
lock
pushf
int3
scas
mov
roll
jno
insb
popa
mov
mov
cmp
mov
xchg
add
mov
add
cltd
fs
clc
shr
adc
mov
or
lcall
addb
cmpsb
sub
mov
inc
insb
xor
mov
add
adc
test
out
mov
cmp
add
xor
jne
add
dec
pop
rolb
add
add
xchg
jp
push
jne
mov
add
adc
mov
add
pop
aam
cmp
push
outsl
addb
loope
add
mov
pop
arpl
cmp
mov
add
adc
bound
mov
mov
jns
add
pop
pushf
add
mov
mov
mov
adc
inc
add
add
out
xchg
mov
mov
pop
or
out
stos
loop
mov
add
add
mov
fs
in
jbe
add
sub
add
stos
rorl
add
add
add
std
shrl
cmpsb
ja
int
or
pop
push
ss
jno
add
sbb
shll
mov
fst
pop
repnz
xchg
adc
mov
hlt
into
jno
mov
mov
xor
aaa
ss
sub
cs
add
in
add
mov
icebp
dec
mov
das
xchg
add
jg
add
cmp
push
and
and
ds
pop
je
jecxz
inc
add
loope
mov
add
add
mov
mov
add
mov
jb
mov
add
lret
sbb
hlt
dec
nop
add
enter
push
pop
inc
in
and
sbb
in
arpl
in
cmpsl
sub
dec
jmp
add
mov
jecxz
rcr
dec
les
arpl
inc
rolb
mov
imul
adc
mov
add
add
adc
and
sbbl
lods
add
mov
xor
mov
mov
mov
outsl
hlt
insb
mov
xchg
fcompl
add
test
das
mov
mov
add
sbb
call
popa
movsl
ss
lcall
add
add
mov
aas
pusha
add
cld
and
lods
push
add
out
clc
setge
mov
mov
mov
mov
add
add
pop
xchg
das
in
or
add
jbe
js
sbb
subl
push
mov
xchg
add
add
push
add
mov
sub
and
adc
push
jecxz
jp
outsb
dec
leave
test
add
add
mov
add
xchg
sbb
ljmp
test
xchg
add
ret
lret
mov
addb
jno
xchg
or
push
add
add
ror
and
movsb
out
sahf
push
stos
inc
push
out
cs
add
add
je
movb
loope
mov
pop
cs
mov
dec
cmp
imul
out
jp
stos
mov
push
add
ds
icebp
inc
add
ret
pop
stos
out
mov
xlat
imul
cmp
xchg
fnsave
mov
je
inc
add
xor
mov
in
in
add
jecxz
add
xchg
pop
adc
scas
imul
and
lcall
mov
stos
mov
sub
fdivl
add
mov
add
mov
xchg
ljmp
enter
inc
test
jnp
adc
fdivr
mov
bound
mov
out
mov
sub
jge
xor
mov
jge
add
sarl
aas
repz
mov
add
add
pop
or
pushl
fs
cmp
stos
xchg
add
test
inc
add
jp
mov
sti
es
xchg
cmp
lds
jns
fmuls
out
push
mov
fstl
add
mov
mov
add
mov
jp
add
xbegin
push
xchg
rolb
mov
rolb
mov
cmp
sub
lcall
add
mov
xor
add
mov
cmp
adc
jae
sub
add
rolb
mov
movsl
test
xchg
jmp
negb
adc
mov
sub
or
mov
rolb
mov
icebp
pushf
insl
nop
add
loopne
mov
push
and
xor
mov
test
sub
mov
cld
mov
rorl
add
sbb
mov
sub
mov
data16
sbb
add
add
sbb
pop
test
push
or
fsubr
adc
jne
jl
adc
loope
clc
and
mov
add
mov
pop
cmc
lods
scas
cwtl
fstpl
push
inc
jp
dec
mov
add
jl
sarl
cmp
pop
jge
add
xor
mov
mov
add
mov
push
add
inc
fdivp
rolb
mov
add
ret
adc
xchg
add
rolb
cmp
or
add
mov
add
and
mov
pop
mov
mov
sbb
add
push
add
arpl
pop
movsb
xchg
test
xchg
inc
inc
inc
repz
mov
add
add
in
jmp
add
bound
mov
adc
sahf
mov
mov
into
and
aas
mov
pop
push
mov
mov
je
rolb
xor
mov
movb
add
daa
jbe
add
mov
add
inc
or
add
push
enter
add
leave
push
pop
cwtl
lret
jo
mov
shll
mov
dec
lret
in
xchg
add
outsl
cwtl
repnz
push
add
mov
mov
fstl
inc
mov
add
push
mov
inc
or
jmp
add
pop
adc
mov
push
inc
add
add
add
pop
fcoml
add
adc
mov
add
nopl
lds
add
mov
data16
mov
add
mov
mov
mov
out
les
and
mov
int
push
das
clc
arpl
add
add
mov
xor
fdiv
add
push
mov
add
mov
sti
mov
xlat
test
mov
test
add
sti
addb
aaa
aad
fsubrp
inc
adc
jp
sub
inc
add
das
jb
mov
jge
jg
xor
popa
ljmp
dec
sbb
adc
imul
sahf
or
lds
pop
lock
aaa
cltd
clc
mov
lock
push
pop
adc
add
jg
mov
jae
jno
sahf
imul
inc
dec
aad
lcall
mov
jle
cli
ja
insb
fcompl
mov
add
add
or
mov
mov
pop
adc
mulps
add
xchg
test
ret
decb
jb
mov
mov
dec
jae
testl
jp
test
dec
adc
mov
or
add
mov
clc
repnz
nop
cld
jae
or
imul
clc
repnz
nop
cld
jae
add
or
dec
push
mov
xchg
ret
pop
call
inc
add
jb
mov
push
mov
nop
leave
jmp
add
xor
add
adc
push
mov
xchg
ret
dec
or
add
add
shr
clc
repnz
nop
cld
jae
rolb
adc
add
mov
mov
clc
repnz
nop
cld
jae
add
cli
add
ret
clc
repnz
nop
cld
jae
add
add
sahf
pop
push
mov
xchg
ret
add
shrb
sar
nop
nop
cld
jae
int3
popf
cs
lods
add
jecxz
rol
clc
repnz
nop
cld
jae
mov
add
add
push
mov
xchg
ret
rcll
bound
add
add
les
repnz
nop
cld
jae
bound
lods
pop
adc
push
clc
repnz
nop
cld
jae
add
bound
inc
adc
repnz
nop
cld
jae
add
add
test
push
mov
nop
leave
jmp
add
add
sahf
add
add
mov
repnz
nop
cld
jae
add
push
shll
sbb
nop
leave
jmp
sbb
clc
or
rolb
mov
in
inc
add
add
sbb
sub
inc
in
push
mov
xchg
ret
add
fsubrs
test
add
clc
repnz
nop
cld
jae
bound
add
mov
add
push
mov
xchg
ret
xchg
or
add
push
in
mov
clc
repnz
nop
cld
jae
add
inc
xor
push
mov
nop
leave
jmp
addb
add
clc
repnz
nop
cld
jae
int3
int3
dec
inc
mov
mov
clc
repnz
nop
cld
jae
dec
psrld
movsb
push
mov
nop
leave
jmp
add
incl
add
add
mov
clc
repnz
nop
cld
jae
add
add
sbbl
push
mov
nop
leave
jmp
or
lahf
mov
clc
repnz
nop
cld
jae
sarb
jns
add
jge
clc
repnz
nop
cld
jae
pop
popf
int3
bound
adc
mov
enter
nop
leave
jmp
add
add
movsb
fadds
mov
clc
repnz
nop
cld
jae
add
add
sub
push
mov
nop
leave
jmp
jl
add
add
push
xorl
nop
cld
jae
filds
repz
sub
in
or
add
sub
sbb
inc
lret
or
push
mov
xchg
ret
stc
or
add
bswap
dec
push
mov
nop
leave
jmp
inc
mov
add
mov
jl
ret
test
mov
push
mov
nop
leave
jmp
sahf
incb
arpl
pop
push
mov
xchg
ret
add
add
pop
add
loop
je
clc
repnz
nop
cld
jae
and
push
mov
xchg
ret
lcall
add
sub
test
add
clc
repnz
nop
cld
jae
pop
add
jg
push
mov
nop
leave
jmp
les
jns
call
mov
jl
clc
repnz
nop
cld
jae
add
fldl
int
loop
jmp
add
clc
repnz
nop
cld
jae
add
loop
testb
pushf
ret
clc
repnz
nop
cld
jae
xchg
movsl
and
les
and
nop
nop
cld
jae
adc
add
mov
mov
xchg
ret
add
lcall
mov
nop
nop
cld
jae
rcrb
call
gs
hlt
mov
mov
nop
leave
jmp
int3
mov
adc
les
add
adc
mov
nop
leave
jmp
sbb
shlb
push
push
mov
xchg
ret
add
sahf
gs
repnz
nop
cld
jae
add
rolb
or
xor
add
clc
repnz
nop
cld
jae
add
bound
les
clc
repnz
nop
cld
jae
push
pop
add
in
addb
pop
add
mov
add
rolb
mov
clc
repnz
nop
cld
jae
pop
dec
cs
add
cmpw
push
mov
nop
leave
jmp
rolb
add
popf
insb
pop
push
mov
nop
leave
jmp
or
xor
add
mov
add
add
push
mov
xchg
ret
fadds
add
cli
fsubs
clc
repnz
nop
cld
jae
sar
roll
xchg
jl
push
clc
repnz
nop
cld
jae
stc
add
add
scas
jne
clc
repnz
nop
cld
jae
loop
add
push
clc
repnz
nop
cld
jae
add
add
add
inc
stos
push
clc
repnz
nop
cld
jae
popf
mov
add
repnz
nop
cld
jae
add
pop
add
pop
push
mov
jb
push
pop
add
inc
xchg
aam
jmp
add
jne
clc
repnz
nop
cld
jae
add
les
fdivrp
repnz
nop
cld
jae
rolb
or
out
add
push
mov
nop
leave
jmp
add
add
mov
xchg
ret
add
or
rolb
daa
jle
aad
add
add
add
mov
shlb
arpl
adc
addr16
add
shll
add
jb
clc
repnz
nop
cld
jae
add
jns
add
xor
add
clc
repnz
nop
cld
jae
rolb
adc
mov
push
movswl
clc
repnz
nop
cld
jae
add
add
sahf
mov
ret
push
mov
nop
leave
jmp
les
popa
pop
iret
xor
push
mov
xchg
ret
pop
mov
cli
sbb
add
cld
clc
repnz
nop
cld
jae
les
add
add
add
pop
add
push
mov
nop
leave
jmp
add
cmpsb
nop
cld
jae
pop
adc
push
add
and
push
mov
xchg
ret
add
hlt
fbld
shrb
add
in
nop
leave
jmp
ljmp
mov
mov
mov
clc
repnz
nop
cld
jae
pop
add
lods
xchg
and
mov
cmpw
push
mov
nop
leave
jmp
add
adc
movsb
out
add
clc
repnz
nop
cld
jae
les
add
jns
rolb
mov
and
push
mov
xchg
ret
dec
in
sbbl
dec
or
add
in
nop
leave
jmp
movsb
or
repz
add
clc
repnz
nop
cld
jae
add
add
mov
mov
cmp
sti
add
add
in
nop
leave
jmp
rolb
dec
dec
and
mov
push
clc
repnz
nop
cld
jae
xchg
add
add
push
mov
clc
repnz
nop
cld
jae
sahf
int3
add
leave
push
mov
xchg
ret
mov
and
add
and
das
imul
clc
repnz
nop
cld
jae
add
cmp
sti
clc
repnz
nop
cld
jae
add
add
mov
add
dec
or
repnz
nop
cld
jae
add
cs
push
mov
xchg
ret
add
add
add
add
push
push
mov
xchg
ret
xchg
pop
add
add
or
push
xor
nop
nop
cld
jae
add
add
rcrb
mov
xchg
ret
hlt
cli
mov
lods
add
mov
clc
repnz
nop
cld
jae
add
adc
mov
inc
cmp
mov
xchg
ret
int
add
clc
and
je,pn
clc
repnz
nop
cld
jae
and
add
rolb
repnz
nop
cld
jae
add
bound
fistl
in
add
and
les
lret
mov
jns
decl
in
nop
leave
jmp
add
add
add
and
push
mov
xchg
ret
add
add
mov
rolb
mov
add
push
mov
nop
leave
jmp
fldl
xchg
shrb
mov
clc
repnz
nop
cld
jae
stc
pop
add
bound
mov
clc
repnz
nop
cld
jae
add
jns
icebp
ljmp
popa
clc
repnz
nop
cld
jae
call
mov
push
add
clc
repnz
nop
cld
jae
adc
jne
clc
repnz
nop
cld
jae
add
add
shll
add
clc
repnz
nop
cld
jae
pop
add
xor
mov
push
mov
xchg
ret
add
fcom
add
add
bound
mov
or
nop
nop
cld
jae
add
lods
mov
enter
clc
repnz
nop
cld
jae
lods
hlt
sbb
push
clc
repnz
nop
cld
jae
fstp
add
add
sbb
mov
xchg
ret
and
subl
mov
mov
push
mov
xchg
ret
sbb
add
loop
movswl
clc
repnz
nop
cld
jae
sar
fisttpll
add
add
nop
nop
cld
jae
mov
int3
pop
inc
inc
gs
mov
nop
leave
jmp
add
add
pop
add
nop
add
mov
xchg
ret
pop
add
int3
add
stc
jb
mov
je
clc
repnz
nop
cld
jae
add
hlt
in
push
addb
push
mov
add
add
or
and
pop
test
push
mov
xchg
ret
add
xor
add
movb
repnz
nop
cld
jae
add
dec
add
adc
in
nop
leave
jmp
adcl
loop
mov
nop
leave
jmp
xor
add
mov
mov
xor
clc
repnz
nop
cld
jae
adc
add
repnz
nop
cld
jae
or
int
mov
adc
and
nop
nop
cld
jae
in
frstor
jecxz
cmp
push
mov
nop
leave
jmp
lods
stc
hlt
shl
or
pusha
clc
repnz
nop
cld
jae
lcall
mov
push
mov
nop
leave
jmp
add
add
add
push
mov
xchg
ret
mov
and
loopne
mov
add
mov
xchg
ret
add
add
add
and
mov
nop
leave
jmp
add
clc
push
push
mov
nop
leave
jmp
add
mov
push
mov
xchg
ret
addl
add
or
in
dec
push
push
mov
xchg
ret
mov
movsb
dec
or
push
clc
repnz
nop
cld
jae
les
movsb
add
mov
mov
nop
leave
jmp
add
add
add
call
add
mov
xchg
ret
add
xor
mov
pop
add
add
in
nop
leave
jmp
add
add
add
add
inc
jl
add
and
add
push
mov
xchg
ret
dec
add
add
sbb
mov
xchg
ret
gs
add
add
mov
pcmpgtb
xchg
add
pop
cli
rolb
repz
add
dec
pop
inc
lret
push
mov
nop
leave
jmp
add
add
add
rcrb
mov
dec
push
mov
nop
leave
jmp
add
rolb
add
mov
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
add
add
sar
nop
nop
cld
jae
add
lcall
nop
nop
cld
jae
or
lods
add
loop
push
clc
repnz
nop
cld
jae
add
add
add
sbb
add
clc
repnz
nop
cld
jae
incl
add
ret
mov
xchg
ret
mov
popf
pop
cmpsl
dec
mov
clc
repnz
nop
cld
jae
dec
loop
out
cmpl
push
mov
nop
leave
jmp
shrl
add
add
push
mov
xchg
ret
rolb
or
cli
add
sahf
int
clc
repnz
nop
cld
jae
addl
xchg
and
xor
add
clc
repnz
nop
cld
jae
or
add
in
sub
leave
jg
faddl
add
scas
push
int
add
add
clc
repnz
nop
cld
jae
add
les
sbb
inc
je
push
push
mov
nop
leave
jmp
stc
add
add
ror
push
xor
mov
pushf
movzwl
push
mov
xchg
ret
add
add
and
add
clc
repnz
nop
cld
jae
sbb
adc
jne
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
xor
and
mov
mov
push
mov
xchg
ret
lods
add
add
add
xor
mov
add
xchg
clc
add
clc
repnz
nop
cld
jae
add
fmuls
ja
clc
repnz
nop
cld
jae
les
add
inc
inc
add
repnz
nop
cld
jae
movsl
add
lods
add
nop
cld
jae
lods
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
cli
int3
xchg
addl
add
or
inc
add
jns
mov
mov
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
movsb
add
hlt
add
decl
test
repnz
nop
cld
jae
incl
lods
mov
incb
add
clc
repnz
nop
cld
jae
add
mov
rclb
testb
cmp
ret
clc
movsb
add
jns
add
add
mov
push
xchg
add
popa
add
mov
xchg
ret
lods
rolb
rolb
add
xchg
add
repnz
nop
cld
jae
pop
pop
add
stc
stc
stos
popa
clc
repnz
nop
cld
jae
cli
dec
jns
sbb
lods
add
add
add
push
mov
nop
leave
jmp
jl
add
repnz
nop
cld
jae
gs
add
add
and
mov
mov
and
clc
repnz
nop
cld
jae
add
les
add
adc
mov
add
clc
repnz
nop
cld
jae
add
and
add
rolb
lcall
out
incl
inc
add
xchg
addl
jg
sub
jne
push
mov
nop
leave
jmp
add
add
sub
clc
repnz
nop
cld
jae
inc
add
add
cld
dec
push
mov
xchg
ret
adc
mov
xchg
add
xor
mov
push
mov
nop
leave
jmp
add
add
adc
mov
in
nop
leave
jmp
jns
add
ficoms
mov
nop
leave
jmp
add
add
add
mov
cmp
repnz
nop
cld
jae
fistps
push
xor
push
mov
xchg
ret
cs
add
add
movsb
in
mov
push
mov
nop
leave
jmp
push
call
mov
mov
adc
mov
nop
leave
jmp
add
dec
loop
int
xor
clc
repnz
nop
cld
jae
hlt
add
pop
mov
mov
clc
repnz
nop
cld
jae
loop
clc
mov
or
in
nop
leave
jmp
bound
add
add
cli
lea
repnz
nop
cld
jae
pop
add
fldl
les
mov
push
mov
xchg
ret
add
lcall
xchg
add
add
repnz
nop
cld
jae
adc
int
inc
or
repnz
nop
cld
jae
les
mov
mov
repnz
nop
cld
jae
and
int
cli
incb
add
pop
cmpsb
push
dec
mov
clc
repnz
nop
cld
jae
add
mov
mov
mov
nop
leave
jmp
sbb
add
push
push
mov
xchg
ret
les
add
hlt
repz
stc
push
inc
mov
nop
nop
cld
jae
add
add
movsb
mov
add
clc
repnz
nop
cld
jae
add
xor
jmp
add
add
and
xor
bound
sbb
jle
push
sub
in
nop
leave
jmp
rolb
add
add
add
mov
push
mov
add
out
rcrl
dec
pop
adc
cmc
add
add
push
mov
xchg
ret
add
incb
lods
add
mov
jle
icebp
push
mov
nop
leave
jmp
add
add
or
clc
repnz
nop
cld
jae
lods
add
add
nop
nop
cld
jae
movsl
add
add
sbb
outsl
arpl
add
in
nop
leave
jmp
mov
imul
clc
repnz
nop
cld
jae
add
push
add
adc
loopne
mov
xchg
ret
lods
movsb
add
pop
add
mov
add
loop
cli
add
pop
add
inc
add
clc
repnz
nop
cld
jae
mov
add
pop
push
mov
xchg
ret
pop
xor
add
std
push
clc
repnz
nop
cld
jae
lcall
add
lea
clc
repnz
nop
cld
jae
add
lods
sbbl
repnz
nop
cld
jae
add
add
jl
sahf
push
push
mov
xchg
ret
and
add
bound
decl
push
mov
xchg
ret
add
movsb
sar
dec
fnstsw
inc
clc
repnz
nop
cld
jae
sbb
mov
cmp
push
mov
nop
leave
jmp
in
mov
sub
push
mov
nop
leave
jmp
movsb
inc
fnstsw
mov
add
repnz
nop
nop
cld
jae
sbb
jl
adc
repnz
nop
cld
jae
mov
add
add
mov
clc
repnz
nop
cld
jae
mov
sub
clc
repnz
nop
cld
jae
pop
int
add
mov
add
repnz
nop
cld
jae
add
sbb
add
add
push
mov
xchg
ret
add
add
popf
add
fsubrs
rolb
xchg
ret
mov
les
add
mov
add
clc
repnz
nop
cld
jae
add
adc
clc
repnz
nop
cld
jae
lcall
repnz
nop
cld
jae
add
ror
pop
pop
push
mov
xchg
ret
add
sldt
int3
pushl
clc
repnz
nop
cld
jae
add
test
repz
repnz
nop
cld
jae
add
add
add
adc
clc
repnz
nop
cld
jae
add
add
add
add
repnz
nop
cld
jae
int3
hlt
dec
add
lods
clc
repnz
nop
cld
jae
add
xor
inc
cli
xchg
mov
push
mov
nop
leave
jmp
cli
xchg
movsb
add
out
clc
repnz
nop
cld
jae
add
add
mov
add
repnz
nop
cld
jae
ljmp
xchg
clc
repnz
nop
cld
jae
sbb
adc
jmp
dec
add
mov
nop
leave
jmp
jns
add
add
mov
add
ror
clc
repnz
nop
cld
jae
add
add
pop
fucomip
ret
incl
add
jl
incb
addl
push
mov
xchg
ret
add
loop
fsubs
popf
mov
ss
mov
add
repnz
nop
cld
jae
add
add
jmp
mov
xchg
ret
fadds
sbb
push
mov
nop
leave
jmp
shrb
add
mov
rolb
lea
in
add
leave
add
add
mov
in
add
popf
mov
call
clc
repnz
nop
cld
jae
dec
les
add
dec
push
clc
repnz
nop
cld
jae
add
and
add
repnz
nop
cld
jae
mov
add
inc
add
adc
push
mov
nop
leave
jmp
loop
add
loop
sub
nop
nop
cld
jae
orb
add
fimull
in
nop
leave
jmp
mov
add
cltd
inc
clc
repnz
nop
cld
jae
add
mov
ljmp
nop
nop
cld
jae
add
orl
mov
nop
leave
jmp
add
in
stc
add
add
clc
repnz
nop
cld
jae
fildll
hlt
add
test
nop
nop
cld
jae
add
add
add
ss
mov
clc
repnz
nop
cld
jae
movsl
add
add
mov
xchg
ret
add
bound
repnz
repnz
nop
cld
jae
add
roll
add
rolb
fsts
mov
xchg
ret
repz
dec
add
lods
jl
cld
push
clc
repnz
nop
cld
jae
popf
mov
lods
dec
cmp
nop
cld
jae
add
rcl
add
arpl
mov
clc
repnz
nop
cld
jae
lods
lods
add
fiadds
clc
repnz
nop
cld
jae
pop
add
xchg
dec
push
clc
repnz
nop
cld
jae
lods
fisttps
add
gs
inc
add
jmp
add
popf
add
sysret
add
add
adc
repnz
nop
cld
jae
push
jl
add
mov
push
mov
xchg
ret
mov
add
daa
mov
add
repnz
nop
cld
jae
mov
mov
clc
repnz
nop
cld
jae
hlt
xchg
mov
ja
fs
mov
nop
leave
jmp
add
rcl
add
idivb
nop
nop
cld
jae
add
add
int3
pusha
push
mov
nop
leave
jmp
fadd
add
lcall
pop
add
clc
repnz
nop
cld
jae
xchg
add
xlat
mov
dec
mov
clc
repnz
nop
cld
jae
popf
hlt
add
add
int3
push
rep
push
mov
xchg
ret
lods
mov
add
mov
pop
call
in
nop
leave
jmp
sbb
add
clc
repnz
nop
cld
jae
add
lods
add
iret
push
push
mov
xchg
ret
add
sahf
addb
xor
mov
mov
nop
leave
jmp
and
and
lods
pop
adc
mov
xchg
jmp
push
xchg
mov
add
fistpll
add
adc
mov
push
mov
nop
leave
jmp
lods
add
add
add
sub
add
repnz
nop
cld
jae
jl
clc
add
mov
clc
repnz
nop
cld
jae
bound
add
adc
adc
jne
push
clc
repnz
nop
cld
jae
stc
or
decb
das
filds
xchg
ret
mov
add
pop
dec
rep
clc
repnz
nop
cld
jae
add
frstor
hlt
repz
mov
push
clc
repnz
nop
cld
jae
movsb
push
les
cmpb
or
inc
add
push
add
mov
clc
repnz
nop
cld
jae
add
jmp
push
mov
nop
leave
jmp
movsl
in
xor
add
xchg
add
lods
push
mov
xchg
ret
call
xor
add
mov
clc
repnz
nop
cld
jae
popf
loop
add
add
nop
nop
cld
jae
add
add
lea
mov
xchg
ret
add
pop
movsb
bound
pusha
add
dec
mov
push
mov
nop
leave
jmp
and
mov
jnp
sbb
in
nop
leave
jmp
add
and
addb
pop
mov
clc
repnz
nop
cld
jae
add
sarb
xor
mov
mov
popa
add
mov
xchg
ret
rolb
add
in
xor
pop
push
mov
xchg
ret
or
add
or
clc
repnz
nop
cld
jae
sbb
sbb
int
xor
add
add
nop
nop
cld
jae
sarl
call
push
add
add
pop
or
push
xchg
call
push
gs
mov
mov
inc
add
push
mov
nop
leave
jmp
add
add
lods
add
in
inc
add
add
add
add
addl
sti
clc
repnz
nop
cld
jae
cli
rolb
sarb
inc
jp
push
mov
nop
leave
jmp
add
inc
call
call
aas
dec
in
jge
add
jmp
sbb
rolb
rorb
add
fcomp
fsubrs
dec
fldl
xchg
ret
int
les
xor
xor
cmpsl
push
add
push
loope
add
add
int3
pop
sahf
add
sahf
push
or
sar
nop
nop
cld
jae
or
add
aas
cmp
push
mov
nop
leave
jmp
in
rorb
add
les
out
mov
xor
add
clc
repnz
nop
cld
jae
addb
add
push
mov
nop
leave
jmp
lods
add
add
add
test
push
mov
nop
leave
jmp
rcrb
loop
pop
clc
shrl
pop
clc
repnz
nop
cld
jae
add
add
incb
and
mov
clc
repnz
nop
cld
jae
rorb
jo
mov
mov
xchg
ret
add
sbb
add
or
clc
repnz
nop
cld
jae
add
adc
mov
nop
nop
cld
jae
add
rcl
pop
inc
add
nop
clc
repnz
nop
cld
jae
mov
cli
add
push
push
out
inc
add
dec
rolb
jl
je
clc
repnz
nop
cld
jae
bound
pop
push
mov
xchg
ret
in
stc
int3
add
add
lcall
push
mov
nop
leave
jmp
lods
rolb
xor
sbb
nop
nop
cld
jae
lods
add
jl
rolb
mov
nop
cld
jae
add
xchg
mov
push
push
mov
nop
leave
jmp
add
pop
add
push
add
cmp
push
mov
xchg
ret
pop
fadds
sbb
js
mov
clc
repnz
nop
cld
jae
add
rolb
mov
push
mov
nop
leave
jmp
lcall
add
mov
repnz
mov
xchg
ret
add
push
add
push
mov
nop
leave
jmp
dec
add
add
sub
mov
nop
leave
jmp
add
les
and
mov
add
rcr
inc
add
hlt
add
add
xchg
add
pop
add
clc
repnz
nop
cld
jae
in
add
adc
sbbb
clc
repnz
nop
cld
jae
lcall
add
mov
cmp
ret
rolb
xor
in
add
clc
repnz
nop
cld
jae
push
lods
sarb
stc
jmp
add
mov
and
and
jmp
nop
cld
jae
and
add
push
clc
repnz
nop
cld
jae
add
loop
gs
add
loope
jmp
add
lcall
fmull
in
nop
leave
jmp
add
int
pop
add
lret
idiv
call
in
nop
leave
jmp
or
movsl
add
sbb
repnz
nop
cld
jae
pop
les
mov
push
mov
xchg
ret
rcl
rolb
mov
test
repnz
nop
cld
jae
pop
hlt
movsb
and
iret
jl
clc
repnz
nop
cld
jae
and
movsb
sbb
test
add
clc
repnz
nop
cld
jae
and
and
pop
inc
push
mov
xchg
ret
add
add
add
jnp
jo
push
mov
nop
leave
jmp
lcall
mov
mov
push
mov
nop
leave
jmp
and
add
xor
push
mov
nop
leave
jmp
in
stc
add
popa
int3
add
clc
repnz
nop
cld
jae
add
xchg
add
test
push
mov
nop
leave
jmp
sar
push
sbb
in
je
clc
repnz
nop
cld
jae
add
add
div
push
mov
nop
leave
jmp
lcall
popf
adc
mov
add
clc
repnz
nop
cld
jae
mov
or
loope
push
fs
cmpsl
add
mov
add
rorb
int3
decb
jg
scas
call
repnz
nop
cld
jae
shll
pop
or
clc
repnz
nop
cld
jae
add
xor
pop
clc
repnz
nop
cld
jae
add
push
jge
inc
call
inc
add
add
stc
add
add
jl
xor
repnz
nop
cld
jae
bound
pop
inc
clc
repnz
nop
cld
jae
pop
add
hlt
incl
in
fidivs
sar
nop
nop
cld
jae
and
fcoms
loop
sbb
push
mov
xchg
ret
jl
dec
and
int
loop
pop
mov
jmp
incl
popf
add
add
add
add
pop
xor
push
mov
nop
leave
jmp
adc
sbbl
jno
inc
add
rcl
incb
xor
sahf
lea
push
mov
nop
leave
jmp
xchg
adc
pop
jne
clc
repnz
nop
cld
jae
lods
add
mov
xchg
ret
mov
add
hlt
dec
aas
pop
clc
repnz
nop
cld
jae
add
call
int
cmpsl
daa
cmp
rclb
int
inc
add
sub
cs
add
pop
adc
pop
sti
in
add
daa
jecxz
jge
popa
add
repnz
nop
cld
jae
call
or
clc
repnz
nop
cld
jae
cli
add
sahf
xchg
or
adc
xchg
int
add
stc
add
dec
loop
sbb
add
clc
repnz
nop
cld
jae
lods
or
add
and
xchg
clc
repnz
nop
cld
jae
incb
add
cmpb
or
repnz
nop
cld
jae
add
add
add
sbb
aas
clc
repnz
nop
cld
jae
add
add
fdivr
repnz
nop
cld
jae
jns
cli
bound
push
mov
xchg
ret
add
clc
call
or
push
cmpl
repnz
nop
cld
jae
add
les
ja
add
clc
repnz
nop
cld
jae
sbb
sbb
xor
push
clc
repnz
nop
cld
jae
add
push
add
mov
mov
add
add
repnz
nop
cld
jae
push
fsubrs
add
clc
repnz
nop
cld
jae
stc
add
adc
call
repnz
nop
cld
jae
sbb
add
stc
stc
add
repz
sub
clc
repnz
nop
cld
jae
mov
add
pop
pop
mov
clc
repnz
nop
cld
jae
add
popf
stc
jmp
repnz
nop
cld
jae
ltr
dec
call
adc
repnz
nop
cld
jae
roll
repz
add
push
clc
repnz
nop
cld
jae
rolb
add
add
lcall
mov
xchg
ret
or
lods
add
add
in
pusha
push
mov
xchg
ret
add
int3
add
jg
jg
clc
repnz
nop
cld
jae
xchg
filds
add
and
mov
nop
leave
jmp
call
add
sbb
nop
nop
cld
jae
add
dec
clc
add
mov
nop
leave
jmp
add
mov
inc
add
add
div
inc
add
stc
popf
les
add
add
in
nop
leave
jmp
add
add
add
add
clc
repnz
nop
cld
jae
pop
add
jns
add
mov
stos
pushf
cmp
nop
cld
jae
add
pop
pop
or
clc
repnz
nop
cld
jae
add
stc
or
and
repnz
nop
cld
jae
add
and
rcr
push
push
mov
xchg
ret
add
loop
add
add
dec
lea
clc
repnz
nop
cld
jae
add
enter
nop
nop
cld
jae
incl
push
add
push
ss
jne
push
mov
nop
leave
jmp
push
add
popf
sub
sub
cmp
ret
add
add
add
nop
nop
cld
jae
add
add
adc
mov
add
clc
repnz
nop
cld
jae
add
add
in
nop
leave
jmp
and
inc
clc
add
add
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
rclb
movsl
adc
mov
cmpl
cmp
add
jae
add
add
clc
repnz
nop
cld
jae
add
add
or
in
cmpsl
or
inc
stos
in
rolb
loop
cmc
mov
stc
mov
clc
repnz
nop
cld
jae
jns
add
add
add
mov
mov
add
lea
clc
repnz
nop
cld
jae
pop
add
incb
jns
call
push
mov
nop
leave
jmp
int3
les
les
xchg
push
stc
clc
repnz
nop
cld
jae
jns
bound
add
rorl
clc
clc
repnz
nop
cld
jae
add
add
add
cmpb
adc
repnz
nop
cld
jae
and
add
add
adc
mov
sub
adc
mov
nop
leave
jmp
add
add
inc
xor
subl
jmp
add
and
ja
push
push
mov
xchg
ret
add
add
add
lods
iret
mov
clc
repnz
nop
cld
jae
sahf
add
inc
and
clc
repnz
nop
cld
jae
add
popl
dec
cmp
mov
nop
leave
jmp
add
and
and
mov
icebp
add
add
clc
repnz
nop
cld
jae
add
jl
sbb
xor
add
clc
repnz
nop
cld
jae
int
ljmp
nop
nop
cld
jae
popf
int3
add
lods
movsl
addb
ret
pop
add
push
mov
nop
leave
jmp
add
les
add
mov
adc
repnz
nop
cld
jae
and
pop
int
mov
insl
add
push
mov
nop
leave
jmp
stc
add
sub
add
clc
add
dec
add
hlt
add
pop
mov
repnz
pop
push
mov
nop
leave
jmp
filds
or
adc
js
push
mov
xchg
ret
sbb
int
loop
mov
loope
xor
push
mov
xchg
ret
add
add
icebp
clc
push
clc
repnz
nop
cld
jae
add
popf
mov
clc
clc
repnz
nop
cld
jae
add
fdivr
sbb
add
fwait
rep
push
mov
nop
leave
jmp
lods
bound
add
and
bound
mov
ret
clc
repnz
nop
cld
jae
add
add
add
les
sub
jb
clc
repnz
nop
cld
jae
pop
add
mov
push
mov
xchg
ret
add
jns
clc
rolb
dec
in
mov
push
mov
xchg
ret
fdivs
push
or
add
push
mov
xchg
ret
add
mov
or
nop
nop
cld
jae
add
pop
mov
jge
clc
repnz
nop
cld
jae
les
push
les
add
in
nop
leave
jmp
inc
add
add
mov
xor
clc
repnz
nop
cld
jae
movsb
or
and
jne
clc
repnz
nop
cld
jae
les
lods
mov
inc
push
adc
clc
repnz
nop
cld
jae
pop
fcomp
cli
pusha
add
mov
xchg
ret
add
add
add
mov
inc
jb
clc
repnz
nop
cld
jae
add
add
mov
push
mov
nop
leave
jmp
add
call
ja
outsb
je
repnz
nop
cld
jae
and
pop
add
mov
cwtl
add
or
lahf
add
add
add
dec
clc
repnz
nop
cld
jae
add
add
jns
add
mov
nop
leave
jmp
sbb
sbb
mov
add
popa
fs
repnz
nop
cld
jae
pop
movsb
add
cmpl
push
mov
nop
leave
jmp
add
and
xchg
jbe
inc
add
and
dec
add
fdivrs
repnz
nop
cld
jae
popf
or
lods
add
and
clc
repnz
nop
cld
jae
lcall
imul
inc
add
push
dec
add
popf
and
add
push
mov
nop
leave
jmp
add
and
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
rcrb
mov
clc
repnz
nop
cld
jae
add
loop
and
pop
add
clc
repnz
nop
cld
jae
cli
sbb
add
add
xchg
clc
repnz
nop
cld
jae
add
addl
mov
xchg
ret
add
add
add
lds
pop
in
call
in
nop
leave
jmp
add
add
jns
jp
jb
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
add
pop
add
add
push
mov
nop
leave
jmp
add
and
sahf
add
jmp
clc
repnz
nop
cld
jae
xchg
adc
repnz
nop
cld
jae
and
shlb
push
add
mov
xchg
ret
add
add
gs
add
clc
repnz
nop
cld
jae
and
mov
and
mov
xchg
ret
mov
int
add
jno
pop
sti
rep
clc
repnz
nop
cld
jae
stc
add
add
repnz
nop
cld
jae
mov
popf
rcrb
inc
clc
repnz
nop
cld
jae
dec
add
add
call
mov
clc
repnz
nop
cld
jae
add
lea
push
mov
xchg
ret
add
add
stc
or
xor
add
add
add
les
movsl
inc
add
and
clc
repnz
nop
cld
jae
addb
add
and
clc
repnz
nop
cld
jae
fstl
add
add
sbb
dec
adc
mov
xchg
ret
pmuludq
fstpl
add
mov
clc
repnz
nop
cld
jae
adc
add
add
inc
lock
repnz
nop
cld
jae
add
mov
sub
push
mov
xchg
ret
add
add
movsb
add
ja
jne
clc
repnz
nop
cld
jae
add
xchg
adc
pop
int3
inc
add
add
stc
and
leave
mov
clc
repnz
nop
cld
jae
sbbb
mov
push
mov
xchg
ret
add
repz
and
repnz
nop
cld
jae
add
mov
cmp
repnz
nop
cld
jae
add
stc
pop
mov
add
add
add
repnz
nop
cld
jae
add
cmpb
inc
add
in
les
dec
gs
add
clc
repnz
nop
cld
jae
int
and
bound
mov
nop
cld
jae
movsb
add
add
or
clc
repnz
nop
cld
jae
add
fadds
add
add
rclb
and
inc
add
mov
fsubs
mov
push
mov
nop
leave
jmp
hlt
bound
clc
repnz
nop
cld
jae
add
in
je
clc
repnz
nop
cld
jae
repz
add
mov
xchg
ret
or
add
loope
add
loopne
inc
add
add
xchg
movsb
popf
add
and
push
mov
nop
leave
jmp
lods
add
add
add
pop
push
mov
xchg
ret
add
in
or
outsl
je
clc
repnz
nop
cld
jae
add
int
mov
push
mov
nop
leave
jmp
popf
add
add
add
mov
nop
cld
jae
add
adc
mov
clc
repnz
nop
cld
jae
int
and
or
add
push
mov
xchg
ret
add
call
in
pop
dec
shr
clc
repnz
nop
cld
jae
jl
and
mov
push
mov
xchg
ret
add
clc
call
out
add
clc
repnz
nop
cld
jae
add
add
add
fsub
clc
repnz
nop
cld
jae
jns
lods
add
push
add
mov
nop
repz
add
cs
cli
adc
jns
je
push
mov
nop
leave
jmp
mov
add
shll
mov
clc
repnz
nop
cld
jae
and
add
add
nop
nop
cld
jae
incl
add
add
nop
nop
cld
jae
popf
add
inc
sub
shrb
mov
xchg
ret
add
add
add
out
jmp
add
filds
mov
add
mov
repnz
nop
cld
jae
add
jg
sar
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
frstor
mov
add
add
add
clc
repnz
nop
cld
jae
pop
fcomps
push
dec
jmp
add
add
add
xchg
add
add
add
add
mov
push
mov
nop
leave
jmp
add
inc
sbb
push
clc
repnz
nop
cld
jae
and
add
add
dec
add
mov
clc
repnz
nop
cld
jae
add
add
add
fisttps
nop
cld
jae
and
jl
or
lea
clc
repnz
nop
cld
jae
mov
add
inc
clc
repnz
nop
cld
jae
add
repz
add
mov
clc
repnz
nop
cld
jae
pop
mov
fadds
jne
clc
repnz
nop
cld
jae
jns
add
movsb
add
add
clc
repnz
nop
cld
jae
dec
add
add
mov
mov
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
add
paddusb
mov
xchg
ret
call
cli
gs
add
call
clc
repnz
nop
cld
jae
add
hlt
mov
fists
mov
xchg
ret
add
add
cs
jnp
add
repnz
nop
cld
jae
add
pop
pushf
add
push
mov
nop
leave
jmp
pop
dec
add
adc
jns
nop
leave
jmp
add
pop
clc
add
stc
jno
push
clc
repnz
nop
cld
jae
rolb
incl
add
add
add
mov
add
fisttpll
nop
nop
cld
jae
stc
or
stos
push
mov
add
add
cld
add
add
mov
clc
repnz
nop
cld
jae
les
incb
mov
clc
repnz
nop
cld
jae
popf
add
orl
pop
push
mov
nop
leave
jmp
call
bound
incl
add
movsl
jns
add
add
pop
inc
mov
ljmp
add
stc
fucom
and
jle
incl
add
filds
movsl
popf
add
stos
push
mov
nop
leave
jmp
add
add
add
cmp
fistl
add
inc
add
bound
add
mov
movzwl
push
mov
nop
leave
jmp
loop
push
hlt
in
add
add
add
cld
jae
rolb
fnstsw
push
mov
nop
leave
jmp
inc
pop
sbb
and
cmpsl
inc
ret
adc
mov
clc
repnz
nop
cld
jae
int3
fcom
push
pop
add
push
mov
nop
leave
jmp
add
add
les
rorl
mov
clc
repnz
nop
cld
jae
add
add
nop
add
in
nop
leave
jmp
add
push
add
clc
repnz
nop
cld
jae
cli
andl
jns
popa
add
mov
xchg
ret
jl
fldl
add
and
repnz
nop
cld
jae
pop
add
cs
pop
xchg
clc
repnz
nop
cld
jae
add
pop
loop
push
mov
add
push
push
add
hlt
loopne
add
das
cmp
das
jno
cltd
or
push
out
sub
test
movsl
adc
push
jg
cmpsl
adc
mov
jmp
sbb
mov
adc
push
add
fistpl
iret
inc
cs
stos
lods
xchg
and
inc
inc
add
xchg
inc
sub
add
lds
push
add
pushf
clc
adc
mov
mov
mov
lcall
pop
pusha
add
imul
int
mov
jl
test
add
addr16
call
pop
push
fdivl
add
add
lds
aam
mov
add
sub
push
aas
and
mov
rorl
mov
push
pop
jmp
mov
add
imul
cmp
add
outsb
jecxz
jns
xchg
rcrl
pop
mov
aad
inc
xchg
add
std
xchg
ljmp
add
loopne
mov
hlt
mov
and
mov
sti
cmp
add
inc
add
mov
cmp
add
xchg
dec
jmp
bound
mov
pop
adc
mov
add
cmpsb
push
xchg
aaa
xor
mov
aaa
fidivrs
xchg
add
mov
add
lods
jnp
push
mov
lret
in
test
mov
inc
fnstsw
js
jb
mov
daa
adc
in
xchg
xchg
dec
or
add
mov
mov
add
test
sbb
or
sbb
add
push
add
sbb
xor
sbb
inc
pusha
add
lock
mov
dec
or
add
add
mov
out
daa
or
or
js
aam
xor
cmp
enter
clc
enter
cmp
and
mov
sub
stos
faddl
add
cwtl
pop
clc
lcall
add
cmpsb
sub
sti
mov
jle
cmp
add
popl
mov
les
mov
mov
test
sbb
dec
xor
mov
in
lret
mov
add
mov
add
rolb
imul
mov
mov
cmpsl
rolb
mov
addr16
and
fwait
inc
add
inc
pop
jbe
push
jmp
add
lods
in
out
shr
addb
dec
in
mov
push
inc
add
aam
add
ret
inc
add
add
adc
mov
test
in
subl
int
add
test
je
mov
mov
push
xor
add
inc
add
mov
sub
ret
sbb
jns
mov
idivb
lea
add
std
xchg
lcall
add
add
xchg
mov
pop
pop
outsb
mov
adc
mov
pop
rolb
mov
mov
mov
in
lods
nop
add
mov
mov
add
push
mov
and
mov
ds
add
mov
add
add
mov
mov
push
pop
pushf
in
dec
test
mov
cmpsl
ljmp
es
jg
mov
mov
lods
xor
mov
add
stos
push
sbb
cwtl
add
mov
xchg
clc
clc
jmp
insl
into
aas
mov
int3
pop
mov
ret
xchg
jg
add
xor
mov
imul
mov
jp
add
cld
mov
rolb
mov
cmp
pop
or
addb
push
push
add
add
imul
mov
mov
jp
jle
push
mov
outsb
cwtl
sbb
add
mov
add
sub
pop
js
pop
adcl
jp
fwait
xchg
mov
ljmp
adc
and
mov
imul
add
mov
fcmovnb
xchg
enter
inc
add
mov
add
mov
push
pop
cs
imul
sub
mov
add
mov
add
add
sti
in
adc
call
mov
mov
or
sbb
mov
sti
lcall
xor
ficomps
xor
mov
sbb
jge
adc
mov
push
mov
adc
xor
clc
mov
rcll
pop
es
dec
sub
stos
push
add
movsl
mov
cmpsl
add
in
and
add
aaa
adc
mov
add
insl
jnp
add
mov
xor
push
mov
add
inc
fimuls
aas
mov
cmp
inc
pop
pushf
push
test
pusha
add
xchg
sub
mov
popa
jl
mov
test
les
lahf
imul
mov
cltd
pop
dec
cmp
mov
add
cmp
leave
lods
notl
xchg
jmp
add
mov
sti
and
jle
mov
cmp
jns
pop
and
sub
or
push
or
cmp
lock
mov
adc
fwait
gs
adc
add
mov
daa
mov
mov
test
inc
sahf
push
call
add
mov
into
das
rcrl
imul
add
dec
jb
mov
add
dec
mov
out
lods
loopne
mov
mov
cmp
sub
jge
cmp
inc
pop
icebp
cmp
mov
lods
sub
sub
push
add
mov
mov
xchg
faddp
movb
ja
insl
je
mov
pop
loopne
mov
mov
movsl
movsb
nop
add
imul
dec
daa
ss
dec
mov
insb
ret
inc
testl
es
mov
jns
rolb
mov
fisttpll
pop
iret
dec
sub
pop
imul
test
or
xchg
or
rolb
mov
ljmp
les
or
mov
fmul
or
adc
sub
add
dec
push
movsl
out
test
push
ffree
add
pushf
push
cmpsb
adc
mov
inc
add
std
adc
mov
lock
not
mov
adc
mov
xchg
in
pusha
add
int
push
ds
je,pn
leave
stos
nop
add
jne
mov
iret
addr16
pusha
add
mov
scas
inc
add
cmp
aaa
pop
mov
add
out
rolb
mov
add
insb
addr16
arpl
testl
std
xor
pop
adc
add
mov
icebp
adc
mov
jmp
addb
push
mov
insl
xchg
push
lea
mov
xchg
aas
xchg
pop
pop
adc
add
pop
cmc
pushf
mov
push
dec
imul
mov
add
mov
test
adc
and
xchg
into
pop
adc
test
jle
sub
mov
inc
hlt
push
and
mov
add
fdivl
loopne
mov
adc
mov
add
jnp
lea
xchg
divl
mov
jl
adc
mov
add
add
ret
pop
xchg
xor
mov
vxorpd
stos
sbb
fnstcw
xchg
into
xchg
pop
leave
push
rolb
mov
add
aas
xor
test
notl
in
not
add
cld
mov
rolb
mov
cmp
test
add
or
and
mov
jb
mov
mov
push
insl
xchg
xor
mov
iret
outsb
jl
jge
mov
adc
dec
inc
pop
std
fwait
int
mov
mov
cmp
xor
mov
jg
and
add
mov
add
insb
or
and
mov
and
mov
dec
mov
mov
in
lret
jbe
adc
and
out
lcall
cltd
mov
rolb
mov
sbb
push
rolb
push
call
mov
mov
mov
mov
add
outsb
push
xlat
xchg
add
jmp
add
xchg
fmuls
aas
sub
mov
push
jbe
call
inc
fwait
push
add
adc
ret
sti
adc
add
pop
leave
pop
push
jb
mov
fdivrs
push
test
or
xor
jle
pushf
cmp
popa
das
das
enter
jo
mov
scas
pushf
mov
adc
aam
sub
adc
xchg
or
cs
sbb
add
arpl
pop
iret
push
leave
cltd
and
add
mov
or
in
mov
mov
add
mov
frstor
addb
mov
mov
or
test
inc
add
mov
fld
add
jno
or
ds
aad
pushw
and
mov
lods
jno
or
mov
mov
add
push
dec
int3
addr16
adcl
imul
mov
mov
jno
dec
lds
out
lea
mov
gs
adc
pop
push
add
adcl
pop
je
pop
jp
test
add
mov
mov
mov
pop
packssdw
bswap
loop
mov
add
or
in
add
or
push
dec
gs
add
jmp
add
xchg
and
mov
mov
loop
mov
rolb
push
enter
stos
test
test
lods
push
mov
int3
popf
jb
mov
aad
fimull
push
mov
pop
jne
push
add
test
sbb
push
enter
je
jle
lds
enter
jne
add
cmpsb
in
jnp
add
ja
inc
sti
gs
pushf
jo
mov
ja
dec
or
push
inc
add
mov
add
and
in
jle
test
add
rolb
mov
dec
ja
lahf
adc
dec
and
cli
bound
mov
add
mov
jo
mov
add
out
push
mov
in
out
test
xor
mov
pop
dec
or
jp
push
rolb
mov
xchg
ss
sbb
fmuls
jb
mov
call
mov
mov
cmp
cmp
addb
mov
inc
add
pop
adc
in
push
dec
inc
and
mov
pop
xchg
fsubrp
cs
outsb
add
mov
out
push
pop
inc
rolb
je
add
daa
jge
and
push
lods
repz
add
ror
cmc
cmp
ja
add
push
add
daa
popf
movsb
int3
dec
scas
ja
cmp
and
mov
inc
mov
inc
in
add
pop
ss
imul
mov
add
add
add
adc
and
xchg
add
jmp
inc
repz
xchg
add
mov
mov
lcall
jg
add
xchg
pop
divb
adcl
add
dec
test
ret
push
inc
enter
push
add
xchg
lcall
sar
xchg
mov
dec
add
add
mov
mov
mov
lcall
cs
out
hlt
enter
imul
sti
icebp
xchg
mov
fiaddl
mov
xchg
inc
add
loope
xchg
and
jecxz
sbb
or
add
sbb
lret
mov
inc
sub
or
add
xlat
enter
sarl
dec
cs
andl
add
mov
scas
mov
cmp
sub
mov
adc
mov
out
xchg
add
and
mov
inc
xchg
pop
aam
or
push
jo
mov
push
cli
cmp
mov
imull
mov
pop
call
or
add
mov
sbb
cmp
sub
loopne
mov
jno
es
xchg
inc
daa
jp
add
shr
mov
std
lock
add
sub
cs
scas
cltd
test
or
add
jne
add
mov
add
add
es
shr
push
push
movsb
bound
mov
mov
pop
dec
sbb
repz
mov
pop
push
imul
outsb
pop
out
loopne
mov
les
insb
mov
mov
add
mov
mov
fnstcw
mov
fs
imul
ja
xlat
lods
lds
pop
mov
pop
dec
repnz
repnz
outsb
inc
out
add
mov
movsl
out
pop
push
mov
jnp
adc
fcoms
das
xor
pusha
add
aaa
or
flds
daa
xor
sbb
pop
pusha
add
add
pop
mov
mov
add
mov
rolb
mov
mov
out
ret
test
bound
mov
adc
mov
xor
sub
add
pusha
add
cmp
jge
sub
mov
add
fwait
inc
aam
add
movsb
pop
jnp
arpl
das
fcomi
add
push
inc
outsl
pop
pop
cmpsb
jb
mov
push
or
adc
mov
ret
daa
imul
push
or
mov
mov
das
cmpsb
pop
insl
cli
xor
scas
or
icebp
pop
pop
push
jbe
fptan
add
adc
add
dec
lods
xchg
cli
cmp
add
add
test
add
pop
xorl
cltd
inc
addb
xor
inc
pop
push
add
lahf
inc
add
mov
mov
xchg
test
sbb
shrd
mov
adc
fsub
jno
dec
repnz
jp
xor
out
hlt
js
call
test
push
dec
jmp
outsl
push
sbb
add
es
jnp
pop
mov
repnz
sbb
mov
add
add
ret
nop
add
add
inc
add
mov
jl
pusha
add
in
call
icebp
cmp
mov
data16
mov
sub
jle
add
jns
fsubr
std
sbb
mov
insl
jge
push
or
xor
add
dec
jmp
lret
push
push
test
mov
js
dec
testb
ss
push
and
enter
add
add
sbb
sbb
aas
sti
movsb
cld
sbb
mov
mov
or
add
or
cmp
and
inc
add
lea
outsl
pop
add
push
mov
jle
fisttpl
aam
jl
mov
mov
jg
aas
loop
mov
add
jbe
dec
pop
push
add
popf
adc
xchg
cmp
sbb
das
mov
mov
inc
xchg
int3
jbe
fcoms
push
insl
push
pop
push
mov
in
add
mov
add
mov
stos
cmc
int
aas
add
or
jmp
call
sub
in
movsl
loope
fstpl
scas
daa
pop
fcompl
jo
mov
pop
repnz
add
cmp
test
add
add
mov
lock
mov
aaa
adc
mov
aas
int3
adc
icebp
lds
xchg
cmp
mov
add
mov
sub
or
mov
add
push
fisubrs
mov
mov
add
movsl
mov
xor
mov
lods
adc
push
addb
cmc
test
sbb
add
mov
iret
call
pusha
add
jle
add
leave
pop
fsubrp
sarl
lea
lds
rolb
mov
sbb
push
add
add
pop
cwtl
jle
push
enter
and
add
mov
popa
push
add
add
push
pop
xchg
push
push
xor
sub
xor
mov
dec
mov
dec
divb
scas
jge
scas
das
lret
mov
mov
mov
mov
xchg
pop
in
add
mov
insb
imul
mov
mov
enter
pop
lock
add
add
mov
inc
pop
push
pop
aaa
imul
sti
sbb
mov
add
pop
xor
add
push
mov
push
pushf
dec
jo
mov
mov
mov
outsl
pop
sbb
rolb
lret
push
add
sub
dec
icebp
pop
inc
daa
fists
add
cwtl
or
add
xor
into
push
add
add
cmp
cmpsl
imul
add
fwait
jl
push
sub
mov
add
add
out
dec
int
out
daa
scas
xchg
inc
mov
mov
pushf
ret
xchg
out
sbb
mov
add
pop
outsl
mov
cmpps
clc
outsb
pcmpgtb
divb
add
out
popf
sub
pop
or
add
add
add
adcl
popf
icebp
es
xor
cmc
xchg
int
adcl
mov
push
pushf
sub
rorl
sub
xor
mov
out
imul
mov
jp
shr
sbb
fdivrl
in
bound
mov
ja
les
jno
mov
adc
push
mov
movsb
out
inc
addb
xchg
inc
xor
mov
jnp
add
pop
mov
fcompl
xchg
push
js
fiadds
inc
add
xchg
ret
orl
jge
jl
mov
mov
push
or
cmp
lds
xchg
test
mov
pop
movsb
xor
lret
or
scas
xor
aaa
iret
xor
popa
dec
jmp
add
mov
pushf
inc
add
and
mov
xor
mov
xlat
add
add
adc
push
push
sbb
add
popa
jge
add
out
xchg
push
add
lods
data16
scas
dec
pusha
add
daa
xor
jle
add
test
ds
mov
add
bound
mov
jmp
testl
inc
add
and
sarl
mov
or
and
inc
and
mov
fnstcw
add
andl
add
push
add
add
gs
cwtl
jmp
jp
mov
jp
rorw
outsb
xor
hlt
dec
aaa
data16
push
add
mov
and
mov
sub
mov
cltd
cmp
cmc
sub
add
add
lods
testb
shl
push
jl
pop
addr16
push
and
les
js
mov
and
mov
fstpl
push
shl
add
xor
xchg
jo
mov
xor
mov
sbb
mov
pushf
insb
hlt
std
aaa
pop
in
clc
sahf
cmpl
sub
dec
into
dec
outsl
pop
inc
add
cmp
jbe
enter
scas
daa
hlt
and
fldenv
addb
std
push
lea
leave
pop
lea
jmp
add
mov
insl
fiadds
add
enter
and
clc
aam
mov
addb
rorl
icebp
lods
and
enter
enter
jge
aad
mov
in
rolb
mov
pop
idivb
into
jge
dec
adc
fldt
fcoml
bound
mov
cs
push
sub
mov
loopne
mov
fildl
pushf
fld
and
and
mov
cmp
mov
mov
mov
adc
add
movsl
and
mov
fidivs
rep
dec
in
mov
add
mov
add
inc
das
out
cmp
push
jo
mov
rolb
mov
pushf
pop
lahf
imul
inc
xchg
adc
mov
add
inc
inc
fimuls
inc
add
xchg
xlat
in
or
dec
xchg
mov
sbb
mov
mov
mov
popf
jecxz
loopne
mov
inc
add
mov
ret
jmp
pop
pop
and
mov
mov
or
adc
mov
sub
push
aas
pop
rdpmc
sbb
mov
and
add
addb
add
mov
lock
sbb
adc
mov
rolb
mov
xchg
fs
mov
testl
inc
add
popa
sbb
push
int3
pusha
add
xchg
and
inc
add
lds
mov
mov
jb
mov
add
jp
xchg
ret
cmovnp
add
ret
addb
push
xor
add
add
xchg
fnstsw
lret
mov
mov
addb
loopne
mov
daa
test
mov
js
addb
dec
pop
mov
hlt
insb
jbe
add
in
sub
and
test
lea
insb
xor
mov
push
jle
adc
and
mov
cmpsl
jo
mov
mov
sub
mov
aam
mov
mov
in
pushf
gs
mov
mov
fwait
loop
mov
imul
add
add
notl
sub
mov
mov
in
xor
cmp
addb
sub
xchg
pop
xchg
outsl
lret
mov
adc
ljmp
rolb
mov
filds
add
or
add
or
add
out
fsubrs
adc
pop
jnp
lock
out
push
add
cwtl
add
inc
add
mov
add
cmp
push
adc
daa
movsl
xchg
adc
add
aam
add
sub
rolb
mov
mov
clc
mov
add
add
sub
push
pop
imul
and
loopne
mov
mov
mov
xchg
add
test
xor
mov
addr16
fdivrs
mov
rcll
mov
pop
mov
add
cmpsb
cwtl
adc
out
add
add
ret
in
jne
loope
stos
addb
add
mov
stos
mov
adc
push
movsb
addr16
xor
mov
fnstenv
push
add
mov
inc
fcmovnb
add
xlat
rolb
add
test
mov
add
push
push
ja
sti
cld
mov
imul
sbb
adc
inc
jno
in
inc
aaa
lcall
in
cwtl
outsl
fs
adc
pop
sub
ss
lret
inc
jno
fwait
repnz
mov
ss
mov
mov
outsb
jnp,pt
inc
cmp
fildl
add
add
add
mov
and
subl
add
add
mov
jbe
xchg
push
inc
mov
mov
test
sbb
sub
mov
sub
add
fsubrs
sbb
sub
test
fwait
inc
cmp
mov
mov
add
ret
js
xchg
add
out
sti
iret
addl
adc
push
mov
mov
and
add
addl
mov
sub
mov
jp
push
mov
cmpsb
mov
cli
sub
mov
push
adc
es
push
sub
shll
icebp
sbb
je
or
iret
inc
add
or
scas
and
mov
decl
fnstcw
mov
mov
gs
mov
mov
push
add
mov
xchg
xchg
xchg
movsl
pop
mov
popf
loopne
mov
inc
add
add
push
push
sub
mov
jo
mov
mov
xor
addb
cmc
mov
lea
sbb
dec
sub
and
mov
mov
repnz
add
jg
out
leave
je
pop
cmpl
stos
mov
mov
mov
je
jp
rolb
mov
add
xchg
mov
ret
jb
mov
and
mov
lret
sahf
fistpl
mov
imulb
jne
push
idivl
sub
dec
jmp
sbb
add
jns
je
xor
mov
add
int3
testl
dec
mov
aas
adc
jb
mov
jb
mov
add
rolb
mov
aas
aad
sahf
movsb
cmp
out
sti
mov
add
push
add
or
add
xchg
mulb
push
call
test
push
mov
jns
adc
add
xlat
test
sbb
xor
add
sahf
mov
mov
clc
in
push
loopne
mov
inc
dec
fists
addb
ret
sub
rcll
mov
fs
imul
popa
and
mov
jne
addb
or
jae
mov
fs
pop
sbb
jae
rolb
mov
mov
mov
gs
and
inc
ja
ror
ret
push
or
xchg
add
les
mov
push
or
cltd
adc
fld
in
in
add
xchg
repnz
mov
add
sub
pop
push
rolb
mov
popa
jmp
arpl
dec
mov
add
dec
int3
call
leave
shll
rolb
mov
mov
xor
leave
cltd
arpl
pop
js
pop
fwait
jno
in
mov
add
xchg
push
jae
add
pop
shr
insb
pop
repnz
out
fisubrl
add
sub
add
sub
repnz
mov
add
int3
cltd
ds
sti
mov
mov
add
mov
push
daa
sbb
add
repnz
rolb
mov
add
mov
jns
js
iret
mov
fisubl
pusha
add
aam
jp
dec
sbb
cmpsl
add
add
arpl
mov
or
add
std
out
xor
int3
xchg
mov
mov
test
out
fwait
jl
mov
clc
push
nop
add
mov
add
add
jl
add
pop
mov
xchg
sbb
mov
addr16
adcl
testb
roll
add
adc
mov
test
xor
mov
add
inc
jno
hlt
jl
mov
add
mov
sub
rolb
std
mov
add
clc
cmp
aam
mov
mov
mov
repz
iret
loop
mov
aam
ret
and
mov
mov
mov
jo
mov
add
add
mov
adc
and
mov
scas
mov
xor
inc
jns
pop
mov
cltd
out
ret
bound
mov
push
mov
mov
rcrl
lcall
and
je
add
dec
lock
jbe
imul
adc
mov
dec
lods
aas
cltd
roll
sub
push
insl
mov
cmpsl
cmp
add
imul
push
fcompl
or
add
adc
mov
xchg
sti
les
add
add
cld
jns
add
mov
mov
notb
adc
mov
pusha
add
clc
cltd
add
mov
adc
dec
es
xor
mov
nop
add
rolb
mov
sub
pop
test
outsl
mov
push
nop
add
or
adc
mov
cmp
mov
add
push
add
into
fsubrl
jg
out
or
add
add
add
mov
pop
out
push
inc
or
jns
pop
xor
int3
gs
sub
inc
add
adc
jbe
xchg
fnstcw
movsl
pop
pusha
add
mov
addr16
add
mov
mov
add
push
jne
rcll
aas
pusha
add
enter
push
mov
adc
sbb
add
mov
add
cwtl
movd
in
pop
push
add
mov
roll
dec
repz
sbb
and
dec
cmpsb
cmpsl
fwait
dec
int3
ss
add
xchg
fbstp
mov
add
mov
xlat
scas
out
je
jo
mov
push
xor
push
add
push
inc
pushf
mov
clc
outsl
outsb
jp
loope
mov
xchg
xor
mov
mov
add
sbb
push
add
sub
cwtl
jge
adc
mov
lock
ret
fnsave
jo
mov
push
pop
outsb
jo
mov
dec
sbb
jo
mov
dec
ret
pop
repz
mov
mov
pop
sub
add
setl
cmp
aas
xor
mov
rolb
mov
add
test
pop
bound
mov
dec
adc
push
jnp
das
fs
sub
insb
js
scas
pop
mov
jne
jns
sub
test
fxch
jnp
out
fmuls
add
and
add
fidivl
add
jns
aas
dec
rolb
mov
sbb
roll
mov
sbb
sbb
sub
push
leave
and
imul
jno
les
jle
cmp
cmp
mov
mov
xor
mov
push
add
jl
mov
cmpsl
rolb
mov
mov
mov
inc
push
jle
aam
add
cs
push
lahf
sbb
rolb
xor
mov
add
pop
aam
inc
repnz
lock
cltd
add
jmp
mov
xor
mov
add
mov
push
outsb
je
addb
gs
xchg
xor
mov
push
jl
add
mov
cli
mov
mov
sub
mov
xchg
and
adc
mov
mov
mov
int
sahf
xchg
bound
mov
add
and
push
loopne
mov
std
iret
push
add
mov
or
lods
arpl
mov
add
adc
inc
jno
pop
pop
pushf
dec
in
dec
dec
cmpl
mov
cltd
lret
cmpl
sbb
mov
imul
fisttpl
aam
jle
cwtl
mov
cmp
add
sub
es
imul
sub
or
mov
addb
jbe
pop
adc
mov
jb
mov
jp
add
out
ret
xchg
out
xor
mov
clc
ret
mov
mov
aas
or
mov
mov
shll
mov
jmp
xor
xchg
dec
dec
ss
das
adc
add
repnz
pusha
add
add
cmp
popa
test
mov
fdivs
add
or
add
outsl
nop
add
lcall
adc
pushl
cmp
es
sbb
je
stc
inc
add
add
sub
in
in
mov
iret
into
pushf
es
nop
add
adc
xchg
je
aam
rolb
mov
fistps
fdivrs
incb
into
imul
jae
pushf
pop
adc
inc
jg
testb
enter
lock
xchg
add
mov
add
add
sub
dec
cmp
pop
pop
aam
jb
mov
in
mov
lock
add
popf
pop
pop
stos
push
loope
pop
mov
adc
mov
inc
testb
mov
ret
dec
filds
add
add
mov
add
sub
mov
js
test
repz
jecxz
rolb
mov
aam
mov
push
rorl
sub
xchg
inc
pop
mov
inc
es
inc
shll
and
test
iret
sub
add
hlt
ret
and
inc
add
scas
jb
mov
mov
push
xor
stos
or
rcrl
addb
mov
mov
jl
add
inc
push
scas
mov
mov
jb
mov
mov
mov
imul
mov
adc
jecxz
repnz
jae
call
aam
push
xlat
movsb
arpl
insl
mov
pop
cmp
adc
xchg
addl
cmp
ljmp
and
repz
dec
stos
js
cltd
xor
out
sub
jnp
inc
add
shrl
lock
xlat
mov
add
mov
fsubr
sti
mov
inc
les
and
mov
lds
fmull
imul
dec
adc
mov
pusha
add
jne
push
pop
std
lret
push
pop
setno
xor
pusha
add
test
xlat
js
data16
sbb
xchg
iret
jae
mov
add
fidivrl
add
sbb
pop
movsl
pop
arpl
add
mov
add
sub
mov
shll
xchg
lods
dec
and
mov
mov
or
fptan
add
add
stc
xor
icebp
and
mov
aad
repz
arpl
mov
mov
mov
sub
pop
mov
sub
mov
add
dec
xor
out
iret
dec
fs
daa
outsb
mov
dec
mov
or
xor
mov
fstl
push
sub
add
mov
or
jmp
mov
int3
mov
mov
fidivrl
rolb
mov
mov
add
push
add
add
jae
in
out
xor
mov
xor
mov
add
movsl
cmp
pop
mov
push
out
or
xchg
inc
addr16
pop
inc
add
mov
adc
jno
jno
push
cmp
mov
cltd
adc
push
sub
fisttps
lahf
mov
jle
xor
mov
fcompl
jge
mov
push
and
mov
popa
dec
pop
push
scas
test
cmpsl
inc
add
add
jmp
pushf
jle
std
pop
pop
out
mov
stos
push
mov
movsb
icebp
lods
repnz
lods
push
push
sti
sbb
dec
sub
sub
and
mov
pop
jecxz
inc
or
fwait
mov
fnstsw
jmp
pop
out
je
js
test
mov
rolb
mov
add
mov
jmp
mov
add
mov
add
popf
hlt
fs
add
stc
repnz
movsl
ret
fldenv
imul
jmp
lret
cmpl
call
adc
jle
gs
mov
daa
cmp
mov
dec
dec
out
incl
add
jae
mov
scas
nop
add
jns
push
xchg
mov
mov
add
mov
sbb
clc
mov
cli
push
cmpsb
aam
fsubrs
cmp
jp
jnp
in
inc
jns
cmp
cli
cmpsb
jb
mov
xchg
rcll
and
and
mov
or
dec
cmpsl
cmc
lods
fidivl
out
add
fadds
push
punpckldq
mov
or
cmp
mov
mov
or
add
add
lret
sbb
add
mov
xlat
pop
lods
pop
inc
add
adc
mov
leave
sahf
jecxz
pusha
add
mov
add
mov
inc
add
jecxz
xlat
push
loopne
mov
add
scas
or
repnz
sbb
sbb
adc
idiv
rcll
lahf
ret
mov
pmaxsw
insb
rol
dec
xchg
je
xchg
xorl
scas
dec
adc
mov
pop
popa
inc
pop
out
mov
mov
adc
mov
jae
out
lcall
daa
fcompl
sbb
push
addb
mov
or
jb
mov
cmp
add
push
imul
mov
or
adc
mov
inc
add
lahf
ljmp
notl
jno
add
dec
adc
mov
lods
pop
push
add
cmp
add
push
dec
push
notl
insb
add
mov
add
test
adc
xlat
mov
ja
add
sub
ja
movsl
mov
imul
cmp
popf
addb
dec
enter
mov
add
movb
aaa
leave
enter
add
mov
fbld
into
mov
mov
cltd
sub
stos
cmpsl
into
pop
mov
jns
mov
mov
test
xchg
add
xchg
xorl
loope
jle
das
pop
cwtl
lds
xorl
mov
push
sub
mov
add
xchg
mul
jmp
cli
and
sbb
jmp
andl
xchg
add
adc
adc
mov
js
addb
adc
mov
into
fs
cltd
mov
fimuls
dec
out
lret
mov
add
lods
push
and
mov
lods
jnp
add
add
sarl
int3
jmp
adc
mov
mov
mov
add
mov
mov
mov
jo
mov
add
adc
mov
mov
or
nop
add
mov
add
pop
mov
mov
sbb
add
insl
adc
lea
sti
mov
jbe
add
mov
mov
dec
mov
int3
popf
out
out
fistps
je
sbb
sbb
mov
add
add
cmp
mov
insl
scas
mov
add
mov
mov
lret
push
scas
mov
mov
sub
adc
mov
push
mov
add
cmp
add
scas
js
loope
pop
mov
push
jmp
pop
pop
inc
adc
mov
inc
add
and
mov
push
mov
insb
es
icebp
fisubl
add
cli
repnz
dec
in
jecxz
int3
orl
mov
inc
rolb
je
pop
push
call
pop
pop
and
add
mov
add
ret
out
leave
jae
inc
ss
outsb
or
mov
xor
mov
sti
jecxz
idiv
aaa
mov
sub
rolb
inc
cmp
cmp
pop
and
mov
add
testb
xchg
add
xchg
sub
adc
outsl
sub
aam
adc
insb
jp
mov
iret
je
push
add
hlt
rolb
mov
sbb
pop
movaps
jo
mov
mov
je
pop
pusha
add
pop
rol
add
mov
and
add
add
add
cmp
add
xchg
loope
mov
add
hlt
or
add
in
in
mov
jne
testl
mov
fs
or
adc
xchg
aam
pop
fnstenv
push
imul
clc
mov
xbegin
insl
dec
fstl
lcall
inc
add
cltd
repnz
mov
in
hlt
popf
fsubl
mov
add
pushf
cmp
mov
mov
cli
fistpl
and
leave
ret
or
sbb
jge
sbb
fisubs
rolb
enter
inc
push
mov
fidivrs
pop
aad
add
xor
mov
sbb
push
adc
mov
cmpsl
or
xlat
or
sahf
imul
mov
pop
push
push
add
and
mov
add
out
ss
dec
out
mov
fldcw
sarl
add
add
jecxz
jle
imul
shll
mov
js
int3
adc
mov
sbb
xchg
bound
mov
add
sbb
and
mov
mov
push
add
pop
xchg
lahf
adc
mov
xorl
nop
add
add
mov
fidivs
or
xchg
sub
les
in
add
mov
dec
cmp
jecxz
mov
add
push
inc
add
add
hlt
sahf
mov
mov
add
popa
fs
nop
add
icebp
fldenv
and
sbb
cmp
daa
mov
adc
ja
mov
pop
mov
sti
pop
pop
scas
or
mov
dec
and
add
icebp
insl
dec
adc
mov
stc
les
mov
bound
mov
and
jns
lea
add
popa
adc
add
push
lret
mov
jecxz
add
add
pop
fiadds
iret
or
je
std
lock
mov
jp
add
stos
test
rcll
mov
imul
test
movsl
add
mov
add
lods
and
add
jecxz
add
mov
sbb
cmp
imul
roll
mov
lea
daa
jmp
mov
jg
gs
popa
movntq
add
and
out
and
jne
add
add
iret
outsb
sbb
into
fistpll
and
or
add
cmp
jecxz
sahf
jne
inc
add
add
lock
fstl
pop
jmp
les
and
mov
mov
rolb
mov
ret
dec
fdivl
xlat
or
add
lods
je
lcall
xchg
ljmp
jecxz
ficoms
in
mov
rolb
mov
and
loopne
mov
stos
insb
out
ljmp
test
xlat
fwait
adc
mov
push
mov
add
cmpsl
add
mov
aad
add
or
test
insb
push
jl
sub
mov
push
hlt
add
mov
test
cmp
mov
movsb
out
push
add
jp
stos
xor
fnsave
bound
mov
ljmp
mov
mov
mov
mov
jle
fadd
add
push
imul
lock
scas
mov
int
push
addr16
sahf
divl
adc
in
fbstp
mov
adc
scas
cltd
adc
mov
lret
stc
lret
iret
loop
mov
mov
mov
jmp
push
pop
rolb
mov
sub
jnp
enter
xchg
mov
mov
push
out
sbb
xchg
add
ja
jmp
inc
inc
pop
stos
mov
icebp
lahf
and
add
jle
add
mov
fwait
mov
pop
jmp
lea
cmp
mov
add
dec
mov
fidivs
cs
mov
mov
mov
test
mov
out
cltd
inc
jle
out
nop
add
mov
mov
mov
mov
jmp
aas
insb
and
insl
push
mov
loop
mov
lock
fnsetpm(287
push
add
test
mov
push
add
inc
mov
loopnew
mov
mov
mov
les
rcll
les
je
daa
dec
into
or
mov
inc
xchg
addb
dec
xchg
out
outsl
mov
sbb
inc
add
lret
es
fsubrs
enter
and
add
add
out
jo
mov
add
add
jns
fwait
jge
sahf
cmpsl
pop
cmp
add
mov
push
aam
xchg
ret
in
aas
xor
add
cld
loop
mov
push
daa
inc
add
mov
in
and
mov
adc
mov
pop
scas
test
add
mov
mov
xor
mov
std
leave
mov
mov
pushf
adc
mov
xchg
ljmp
push
add
rol
mov
decb
add
mov
dec
test
in
or
shrl
adc
mov
add
jae
xchg
add
ss
arpl
push
lods
dec
cmp
in
or
mov
fadds
mov
fs
mov
je
imul
mov
icebp
rcll
repnz
addr16
xchg
mov
push
das
aas
jnp
mov
or
pop
lods
jmp
mov
mov
aas
cmpsl
aam
ja
jae
imul
mov
cmp
push
push
xchg
dec
in
add
xchg
insl
dec
mov
sub
mov
dec
sbb
test
pop
dec
test
in
or
scas
inc
cmc
cmp
inc
dec
mov
sub
mov
mov
pop
mov
cld
pop
xchg
dec
inc
mov
mov
mov
push
jp
xor
add
punpcklwd
mov
add
mov
sbb
mov
mov
add
add
mov
pop
cmp
add
ja
in
sub
adc
cmp
jecxz
add
stc
fistpl
jae
test
pop
push
jbe
jbe
sub
add
add
push
mov
cmp
cwtl
cwtl
loopne
mov
mov
add
add
mov
aaa
pop
lock
sbb
mov
adc
cs
cmp
add
dec
mov
jecxz
js
mov
adc
mov
cli
aam
imul
addb
lahf
adc
mov
add
xor
sub
das
mov
mov
add
decl
ja
inc
mov
cwtl
into
inc
add
xchg
adc
add
mov
notb
cmc
jmp
fimuls
jb
mov
mov
imul
add
mov
loope
inc
sub
movsb
mov
jmp
add
dec
into
ret
xchg
add
add
jnp
in
pop
xchg
mov
aam
sub
enter
imul
mov
add
push
add
jae
add
daa
mov
inc
add
pop
pop
or
pop
repnz
or
out
mov
clc
jecxz
addr16
add
mov
fucomip
sti
mov
or
sub
push
cmp
cmp
lahf
ljmp
mov
es
or
add
test
add
add
mov
fs
rolb
mov
mov
add
dec
cld
out
and
push
fdivrp
loop
mov
dec
inc
jns
push
clc
dec
mov
mov
push
lock
imul
add
push
stos
es
and
mov
or
and
mov
lret
mov
popf
and
push
insl
pop
mov
mov
xchg
jmp
les
int
popf
fdivrp
ja
jp
ljmp
jb
mov
clc
adc
mov
mov
add
mov
add
sbb
adc
mov
mov
call
aam
add
xor
mov
push
aam
pop
xor
or
add
mov
xchg
icebp
cli
xchg
and
sahf
insb
nop
add
ficoms
xor
mov
add
repnz
push
cmp
mov
cmpsb
hlt
cmpsl
int
leave
jb
mov
fnsave
xor
mov
or
push
imul
mov
sbb
add
add
enter
push
rolb
xor
mov
mov
sbb
imul
sub
test
jo
mov
xchg
mov
test
jae
add
addb
lock
subl
bound
mov
mov
lods
clc
popf
call
mov
add
xchg
add
push
je
mulb
sub
jo
mov
inc
bound
mov
pop
aam
gs
fistpll
xchg
sti
stc
mov
mov
jne
sahf
sbb
jae
mov
dec
cmp
inc
and
pusha
add
mov
add
mov
rolb
mov
lods
nop
add
mov
add
pop
hlt
outsl
or
or
add
mov
pop
lret
js
jp
add
xchg
int
or
arpl
dec
push
xchg
mov
lahf
mov
lds
gs
pusha
add
bound
mov
mov
jmp
pop
test
mov
dec
test
mov
add
push
in
imul
rolb
mov
out
loop
mov
jmp
jo
mov
add
dec
jnp
fstl
mov
sbb
inc
xor
add
inc
add
dec
inc
cmp
add
mov
stc
in
add
mov
jns
and
loope
arpl
sub
xor
cmp
mov
jl
popa
dec
sbb
out
loop
mov
clc
jl
fistpl
mov
adcl
add
add
dec
ja
popa
je
sub
movsl
rcrl
mov
mov
xchg
outsb
es
mov
stc
mov
arpl
pop
inc
jp
rolb
mov
jecxz
push
or
in
xor
mov
clc
addb
fadd
and
mov
push
add
xor
mov
in
add
in
and
cmpsb
movsl
inc
mov
add
icebp
daa
insl
test
sahf
jmp
pushf
xor
xchg
imul
rolb
mov
add
adc
mov
add
into
xchg
es
addl
add
sbb
or
mov
add
mov
in
js
cmp
add
filds
mov
xchg
pop
iret
in
jne
add
std
push
add
popf
stos
jp
addb
pop
dec
flds
add
arpl
add
jns
xlat
mov
push
idivl
jns
repnz
in
out
sub
mov
add
add
or
mov
pusha
add
test
ds
mov
gs
call
aad
addb
fidivrs
or
sti
mov
lcall
popf
repz
mov
mov
add
pop
or
nop
add
scas
sub
mov
test
js
aas
adc
mov
add
mov
out
cltd
xor
xchg
mov
sbb
hlt
dec
cli
push
xor
aam
hlt
jl
popf
cltd
out
jbe
mov
popf
stos
jb
mov
mov
mov
ss
repnz
push
loope
push
ret
and
mov
add
mov
mov
add
mov
and
push
xchg
adc
mov
and
cwtl
mov
jle
aaa
rcll
lods
daa
push
jp
js
push
mov
pop
out
add
in
push
lods
rolb
mov
mov
add
sbb
cmp
test
lret
in
and
adc
add
mov
addr16
add
xchg
fld
add
mov
mov
in
enter
add
mov
leave
rolb
mov
sbb
out
add
push
pop
daa
test
mov
in
and
mov
dec
fildll
mov
add
out
jo
mov
out
lret
push
in
mov
pusha
add
mov
mov
das
rolb
insb
outsl
js
aaa
rorl
add
xor
mov
mov
pop
sbb
ret
lret
int
add
mov
mov
xchg
mov
add
jno
mov
mov
lahf
mov
loop
mov
mov
mov
call
mov
out
cmp
mov
out
add
cmp
cmc
iret
jecxz
pop
sbb
rcll
sbb
push
add
adc
mov
sarl
inc
add
add
jbe
sahf
subl
mov
ljmp
jg
sbb
push
mov
das
sbb
add
inc
jns
or
sbb
push
int3
addl
adc
mov
add
add
imul
in
das
sbb
arpl
sbb
push
mov
pusha
add
push
test
push
ffree
or
add
roll
insb
pop
nop
add
xchg
add
mov
stos
jns
fs
cmp
sub
add
jnp
mov
cmp
add
jne
push
in
sub
fcompl
sub
outsl
mov
daa
ret
and
add
mov
inc
mov
xorl
pop
repnz
add
mov
imul
iret
fidivl
add
inc
add
mov
add
test
inc
add
or
mov
add
mov
mov
or
mov
add
mov
sbb
add
push
add
mov
or
sbb
mov
test
adc
mov
mov
add
mov
sub
in
xchg
add
imull
mov
add
cmp
inc
outsl
mov
call
lock
outsb
shll
mov
mov
les
push
add
or
push
fstpt
mov
cmpsb
cld
inc
push
in
std
cltd
cmp
add
pop
dec
sub
test
jns
dec
arpl
add
mov
push
and
cmp
jne
jecxz
and
mov
add
push
xchg
inc
add
or
fwait
adc
mov
cld
pushf
enter
push
add
add
rcrl
scas
in
sbb
repz
jbe
out
xor
cltd
fsubrp
in
nop
add
daa
popa
lds
addb
fnstenv
push
add
push
cltd
jae
pop
cmpsb
shll
lds
adc
push
dec
movsb
js
fidivs
add
xor
add
sahf
xchg
fldt
pop
xchg
push
mov
add
mov
mov
push
add
mov
mov
fstpt
mov
in
jp
add
pop
and
inc
rolb
mov
dec
or
jb
mov
lods
mov
cmp
xchg
nop
add
pop
adc
push
ror
add
add
nop
add
ret
jp
add
fwait
jecxz
lret
mov
addb
inc
add
rep
mov
mov
xor
add
stc
push
add
in
jne
add
scas
je
icebp
popa
lea
dec
movsl
jae
ljmp
out
add
mov
mov
or
or
add
cs
loope
inc
adc
frstor
adc
cli
loop
mov
sbb
and
mov
xchg
adc
mov
dec
pop
cmp
fldl
add
mov
adc
jae
add
mov
popf
xor
mov
adc
mov
cmpl
mov
int3
jb
mov
and
mov
test
pop
cwtl
fs
add
pop
jl
lods
mov
outsl
adc
add
fisttpl
mov
add
in
dec
js
add
add
add
push
fbld
outsl
sub
add
mov
add
loopne
mov
addr16
aad
mov
push
out
push
rolb
mov
mov
xor
mov
add
pop
and
repnz
add
repz
add
popa
adc
popf
mov
pop
scas
fistpl
scas
popf
jo
mov
mov
fimuls
mov
mov
outsl
ret
loop
mov
aam
inc
add
xchg
test
jg
test
lods
loop
mov
ret
push
and
and
mov
in
cltd
les
in
outsl
ficomps
push
icebp
xchg
addb
push
mov
or
jg
pusha
add
cmpsb
jno,pt
sub
mov
adc
repnz
lcall
loop
mov
sbbl
jnp
push
add
xor
mov
lret
pushf
lea
add
pusha
add
mov
add
out
je
test
mov
push
add
mov
mov
xor
mov
jns
xchg
rol
mov
mov
add
hlt
xor
mov
or
gs
add
jne
add
add
mov
push
fidivl
jns
enter
add
add
arpl
mov
push
push
add
mov
loop
mov
jp
cmc
loop
mov
std
ss
jmp
sbb
sbb
xchg
add
fs
or
pop
add
mov
push
mov
sub
or
xor
mov
in
pushf
dec
jo
mov
pop
cld
mov
pop
in
dec
or
stc
leave
add
mov
aam
sub
xchg
add
dec
je
addb
int3
jne
jb
mov
in
pop
cs
push
sbb
decb
jmp
fisubl
adc
fs
add
fnsave
inc
add
bound
mov
mov
insb
mov
je
push
js
jbe
mov
mov
push
test
mov
notl
sbb
daa
and
mov
xor
add
test
add
jns
out
xchg
mov
sub
fninit
cmp
xlat
mov
add
test
fstl
call
push
aad
xchg
in
xlat
mov
test
js
outsl
and
mov
rolb
mov
js
es
add
rolb
mov
jecxz
fdivs
mov
arpl
jnp
add
add
add
jae
sub
outsb
dec
int3
cmp
int
or
pop
adc
mov
mov
mov
int3
mov
mov
and
in
lahf
push
scas
pusha
add
loopne
mov
xchg
add
xor
cmp
bound
mov
sub
xchg
jmp
xlat
sub
loop
mov
mov
cli
pop
daa
xlat
stos
lods
rolb
mov
xor
inc
out
jo
mov
add
cmp
lea
jge
lds
inc
sub
cmpsl
xchg
clc
pop
xchg
mov
mov
xchg
decl
sbb
movsb
roll
sarl
jb
mov
add
cmpsl
stc
lret
add
and
mov
add
pop
daa
cs
sub
ljmp
pushf
rolb
mov
ja
fisubs
add
in
loope
adc
mov
mov
scas
ljmp
aas
sbb
nop
add
pushf
ljmp
xchg
inc
in
loop
mov
jne
repz
and
int3
std
inc
add
add
fisubrs
add
dec
lock
jle
jbe
inc
lds
leave
aaa
incb
dec
xchg
jecxz
jecxz
aas
push
mov
pop
sbb
add
mov
repnz
mov
mov
mov
subl
pop
xchg
jb
mov
inc
daa
and
in
pop
pusha
add
int
jmp
sub
jmp
add
mov
out
add
scas
jl
pushf
mulb
add
je
insb
jns
add
mov
or
adc
hlt
loope
or
mov
pop
insl
add
xchg
xchg
pop
mov
cmp
cmpsl
or
mov
add
sub
rolb
mov
add
sahf
mov
push
xor
jecxz
pop
jp
cmp
add
jecxz
add
int
xor
adc
xchg
add
jmp
sbb
rorl
mov
mov
add
mov
rolb
rolb
mov
lods
jge
ret
cmp
or
add
mov
test
add
xchg
add
pusha
add
iret
fwait
xor
mov
adc
jl
add
outsl
ret
cmpsb
xor
and
inc
add
or
rolb
mov
add
repnz
jno
push
lods
add
push
mov
add
xchg
addb
fwait
sbb
mov
std
out
inc
ljmp
rol
int
mov
mov
add
mov
mov
add
push
sub
sbb
das
jle
mov
or
jp
imul
mov
add
cmpsl
test
lret
out
pop
outsb
lds
jno
fwait
xchg
bound
mov
fstpt
das
dec
ljmp
add
mov
addl
jecxz
out
out
mov
pop
rolb
mov
mov
insl
ret
gs
mov
dec
sub
pop
or
or
in
lds
add
add
cmp
mov
mov
test
jns
cmpsb
imul
mov
mov
mov
dec
dec
cs
xchg
pop
and
inc
sub
add
jb
mov
xor
push
addb
add
mov
stc
aad
add
aaa
adc
mov
jg
rolb
mov
sti
pop
fisubl
pop
push
stos
cmp
add
mov
push
filds
add
mov
push
sub
add
mov
addr16
add
mov
lea
mov
mov
lret
leave
inc
dec
loop
mov
loop
mov
add
adc
xchg
xchg
les
xchg
sub
enter
pop
mov
add
addr16
pushf
test
jae
fdivs
out
arpl
je
and
scas
in
mov
jb
mov
int3
imul
mov
mov
mov
rolb
cld
cs
push
mov
pop
cwtl
dec
test
stc
leave
inc
xlat
jg
mov
jns
mov
je
je
std
push
mov
fldt
add
sbb
xor
jns
lods
xchg
jns
addb
imul
add
popf
xchg
add
loope
or
add
push
sub
fistps
rolb
mov
aad
add
pop
dec
lock
cmp
xchg
xor
sar
arpl
add
push
insl
test
lret
push
xor
mov
xchg
mov
mov
mov
push
sub
add
rorl
add
add
cs
xor
in
inc
cmp
pop
jno
jb
mov
shll
insb
aaa
sti
dec
lods
aas
jg
sub
inc
test
leave
cmp
inc
popf
addb
xchg
add
xchg
and
jns
fildl
add
insb
xor
cmp
lds
xor
add
mov
pop
mov
mov
out
lds
lds
add
es
xor
ljmp
mov
add
mov
jne
enter
lock
clc
popa
mov
jecxz
test
in
movsb
and
mov
add
mov
add
mov
add
mov
sbb
jne
ret
cmpsl
mov
add
out
movaps
xlat
out
push
xchg
sysexit
dec
cmc
mov
mov
pop
mov
ficoml
and
rorl
lods
jmp
cmp
add
aad
stos
xor
mov
mov
pop
add
mov
add
add
int
call
mov
add
inc
push
push
adc
xchg
test
jbe
jnp
sub
lods
rolb
cld
cltd
jge
fbld
xor
std
imul
push
or
jmp
add
fwait
push
jne
das
mov
xor
mov
add
test
ficomps
ss
loop
mov
cmp
sbb
addb
sbb
mov
aad
int3
bound
mov
lret
aaa
stos
sbb
mov
add
add
add
mov
out
jl
sbbl
sbb
add
xchg
jo
mov
mov
add
popf
xchg
fistps
sbb
out
add
or
push
insl
sub
outsl
andl
sbb
les
add
mov
add
mov
jmp
push
sti
in
add
imul
out
and
mov
and
jle
jle
lods
jg
xor
pop
pop
in
aas
sbb
cld
rol
and
or
sbb
mov
pop
and
sbb
aam
pop
dec
xor
sbb
jno
jae
jle
out
dec
xchg
mov
cmp
cmp
jne
and
push
jl
sub
mov
add
add
or
sub
or
add
or
mov
mov
mov
adc
in
sti
xchg
rolb
mov
add
mov
add
jge
dec
jbe
mov
mov
cld
adc
mov
dec
sahf
enter
jne
add
es
add
and
mov
add
out
cmp
scas
inc
add
mov
in
pop
jmp
mov
enter
add
push
std
pop
iret
cs
dec
scas
xchg
int
es
out
std
rcrl
lret
inc
add
add
mov
sbb
mov
call
fdivs
or
add
jo
mov
in
mov
loop
mov
mov
mov
inc
in
out
les
inc
or
xchg
addps
mov
fnsave
cs
iret
stc
xor
push
add
mov
add
imul
pop
bound
mov
mov
add
xor
dec
cwtl
sahf
dec
pop
addl
mov
xor
mov
lea
mov
xor
mov
scas
dec
jno
add
mov
cmc
jb
mov
jge
adc
cwtl
dec
int
sbb
xchg
push
add
adc
lret
mov
clc
push
pusha
add
scas
mov
mov
pop
dec
push
popa
cltd
imull
mov
dec
or
les
mov
add
jge
add
mov
adc
xor
xchg
mov
icebp
adc
mov
jae
or
iret
adc
add
push
insl
mov
mov
push
pop
movsb
clc
fwait
aas
sahf
jmp
fstp
dec
aam
repnz
dec
sub
xorl
ds
add
rolb
mov
mov
test
sti
xor
sub
fadds
fiadds
mov
mov
push
ds
or
xor
mov
fimull
add
mov
ja
add
sbb
les
mov
dec
and
lock
inc
sarl
add
xor
mov
mov
sbb
add
int
sub
rolb
mov
adc
mov
mov
fsubrs
insb
xor
push
inc
jns
push
pop
and
imul
add
mov
jmp
pop
sub
ficoml
add
add
out
xchg
mov
fists
mov
iret
aam
add
sub
in
mov
fcmovnb
add
jne,pn
inc
push
mov
addb
mov
rolb
mov
mov
pop
fiaddl
mov
in
je
mov
xchg
out
sbb
dec
cmp
pop
scas
inc
iret
dec
cmp
add
fwait
xchg
mov
fcmovu
mov
das
dec
push
addb
dec
rolb
mov
jne
add
int3
inc
outsb
mov
repnz
xlat
test
add
hlt
test
xchg
pop
xchg
adc
mov
jecxz
add
mov
outsl
es
mov
mov
ret
loopne
mov
jb
mov
scas
cmp
int
bound
mov
jns
add
mov
xor
mov
xchg
xor
pushf
mov
mov
push
cwtl
and
mov
add
jb
mov
add
mov
loop
mov
mov
pop
mov
mov
in
shrl
jns
lock
push
dec
ds
inc
data16
imul
add
cwtl
jnp
sbb
subl
stc
cmc
es
jmp
xchg
xor
mov
add
pop
inc
cmp
add
sub
sbbl
mulb
mov
insb
adc
notb
push
push
fbstp
mov
cmp
inc
je
add
and
imul
mov
js
out
rorl
pop
icebp
movsb
lods
bound
mov
lock
add
mov
pop
mulb
and
mov
ja
and
mov
pusha
add
mov
sub
add
inc
add
fisubl
dec
hlt
cltd
scas
addb
push
or
add
sub
add
cld
jg
fadds
add
inc
add
loope
add
or
mov
mov
or
push
add
add
xor
mov
push
mov
lock
mov
pusha
add
cmp
push
popa
into
lock
pop
pusha
add
pop
cmpsl
cmp
cmp
outsb
inc
int3
enter
xchg
push
mov
mov
jp
iret
loope
lock
or
divl
add
mov
mov
mov
popa
aam
scas
addb
dec
rolb
mov
xchg
push
sti
in
loopne
mov
addl
add
enter
add
push
stc
xchg
pop
lret
push
add
jmp
stos
sub
and
xchg
add
lea
bound
mov
pop
xchg
pop
in
cmp
jae
out
test
mov
pop
add
jo
mov
jecxz
ja
push
adc
outsl
lret
and
adc
add
dec
imul
add
ss
add
mov
cmp
lods
jmp
outsl
sbb
push
loopne
mov
aas
out
or
test
mov
jp
stc
push
add
xor
inc
add
or
dec
push
add
or
jmp
adc
mov
add
pop
pop
and
add
add
lock
cmpsl
dec
clc
or
addb
addb
dec
arpl
add
out
xor
mov
add
inc
dec
mov
dec
xchg
fcmovnb
inc
pop
jbe
lods
inc
add
dec
inc
add
mov
mov
pop
pop
lahf
stos
push
clc
imul
repnz
jns
jmp
fstpt
bound
mov
mov
das
mov
mov
jecxz
pop
jbe
nopl
cmp
mov
sbb
add
xchg
add
adc
cmp
pop
sbb
cmp
hlt
fnsave
cmp
mov
xchg
in
jae
filds
add
pop
jmp
out
int
ret
jne
push
scas
cmp
loopne
mov
lret
dec
mov
mov
push
pop
and
dec
and
add
addl
in
mov
stc
cmp
test
pop
xor
rolb
mov
imull
add
cli
rolb
mov
insb
movsb
mov
jp
mov
add
add
cmp
movsl
cli
push
add
mov
inc
arpl
mov
scas
aaa
or
add
or
jae
add
sbb
mov
add
adc
fs
sbb
mov
js
loop
mov
mov
imul
sbb
add
dec
mov
and
mov
xchg
add
mov
dec
xchg
test
add
sub
das
cld
fwait
shrl
and
cld
cmp
pop
shll
jnp
mov
or
ss
lds
stos
adc
cmp
ja
mov
sarl
dec
fstpt
scas
pop
jecxz
das
push
push
fsub
xlat
adc
mov
sub
mov
lock
pop
adc
mov
push
jbe
fidivs
push
jmp
arpl
mov
mov
pop
xchg
add
loope
dec
mov
adc
add
xchg
add
sub
xor
xor
add
sbb
mov
pop
adc
in
sbb
mov
pusha
add
mov
insb
stos
insl
aad
adc
mov
push
inc
add
jo
mov
es
jbe
test
add
mov
dec
mov
mov
mov
outsb
bound
mov
stc
lahf
and
mov
push
test
add
imul
lods
add
sbb
test
into
lret
sahf
adc
in
adc
xchg
mov
and
mov
add
mov
add
cmc
aad
push
scas
push
mov
add
add
add
mov
add
mov
scas
xchg
pop
leave
and
mov
rolb
jmp
add
call
pop
mov
test
das
outsl
fistl
movntps
add
jns
pop
aam
sbb
push
adc
addb
dec
sqrtps
pushf
mov
imul
or
in
push
cmp
push
adc
addb
insb
jno
out
sub
adc
mov
adc
xchg
pop
mov
shr
jecxz
mov
add
push
sahf
xor
mov
inc
hlt
scas
pop
fwait
nop
add
add
shrl
add
mov
movsb
push
dec
sub
movl
es
jae
arpl
sbb
mov
add
add
lods
and
dec
sub
add
mov
mov
push
in
pop
jge
jg
shll
stos
pusha
add
adc
mov
ret
and
mov
aaa
jo
mov
in
jbe
addr16
icebp
in
bound
mov
int
subl
es
stos
xor
ficompl
pop
dec
jmp
xchg
sub
imul
mov
jno
add
addb
dec
adc
mov
mov
jge
stc
cmp
leave
add
mov
jle
aam
mov
shll
lods
pushf
aas
or
sbb
pop
test
es
xchg
cmp
dec
decb
cs
dec
aad
testl
dec
jecxz
or
jl
arpl
push
outsl
pop
mov
movsl
add
ja
rolb
sub
call
add
add
je
adc
dec
xchg
das
jp
add
push
cmp
add
pusha
add
sub
inc
add
in
fistps
dec
enter
aas
push
clc
idiv
inc
bound
mov
es
add
repz
pop
adc
stos
cmp
lds
and
mov
fwait
aad
pop
sub
mov
jl
or
xor
leave
push
xchg
data16
mov
and
mov
pop
mov
add
insl
rolb
cmp
sbb
add
jbe
or
push
mov
stc
lret
ja
cwtl
std
popf
icebp
sub
mov
mov
lcall
add
push
cmp
cmp
in
iret
fs
cld
pusha
add
pop
ret
roll
mov
and
mov
hlt
add
add
lret
mov
inc
pop
imul
mov
out
addl
add
outsl
jecxz
sbb
and
cmpsl
aam
push
xchg
shl
add
jns
add
add
and
xchg
push
add
mov
xor
inc
inc
or
popa
mov
add
insl
pop
push
dec
or
jle
sti
fcom
das
aaa
cmp
lret
mov
xor
adc
mov
add
jno
sti
lret
mov
aaa
cmp
add
aad
push
fildl
cmp
add
and
mov
fimuls
and
cmp
idiv
dec
xchg
imul
or
insb
outsb
push
movsl
icebp
lock
adc
jns
test
xor
and
mov
mov
jb
mov
into
repnz
mov
test
repz
cltd
mov
inc
sub
insl
addb
scas
push
add
leave
push
outsb
leave
and
repnz
dec
pop
sub
lret
xchg
ljmp
andl
cltd
or
mov
sbbl
dec
push
and
stc
fmull
dec
orl
add
cli
add
mov
sub
mov
movsb
inc
dec
das
cmp
lds
lods
ljmp
inc
add
xor
in
movsl
mov
add
int
sub
mov
pop
imul
rolb
mov
mov
jo
mov
stos
or
add
mov
cmc
mov
pop
adc
mov
xchg
cld
int
or
add
stos
stc
or
xchg
adc
mov
scas
dec
stc
mov
pop
and
cltd
in
add
mov
dec
lea
mov
and
sahf
outsl
fisubs
out
test
add
push
mov
leave
add
mov
sbb
cmc
mov
and
or
add
sbb
test
inc
clc
pop
xchg
add
les
and
or
into
cmc
out
daa
aas
leave
xlat
outsl
cs
mov
mov
test
imul
adc
pop
and
mov
cltd
sub
mov
iret
loope
iret
sahf
or
jne
add
repnz
and
mov
fimull
pusha
add
out
cmpsl
add
dec
add
imul
lods
test
add
stos
stc
pop
rolb
mov
fisttps
fcompl
add
out
lret
add
add
ss
out
out
bound
mov
pop
fiadds
repz
dec
push
imul
xchg
scas
and
mov
adc
mov
jmp
jp
fdivr
xchg
and
adc
mov
xor
mov
xor
mov
dec
pop
cmp
movsl
sub
add
xor
clc
iret
call
add
stos
repz
jb
mov
addb
xor
mov
fldenv
mov
insl
pop
jecxz
adc
xchg
cld
es
scas
lret
mov
mov
mov
pop
jecxz
mov
ret
sbb
ds
pusha
add
out
rolb
mov
add
jg
and
mov
nop
fistpll
add
mov
sub
rolb
mov
add
mov
aaa
jmp
mov
add
sbb
lock
mov
add
adc
out
mov
xor
add
in
pop
and
outsl
jle
add
jo
mov
add
push
stc
jecxz
add
cld
pop
mov
push
jmp
push
cmpl
add
out
jns
mov
addr16
fstl
loope
adc
mov
fiaddl
inc
push
xor
std
jl
dec
ja
push
mov
fidivrl
pop
xchg
mov
das
stc
jne
aaa
mov
cli
sub
jno
add
mov
mov
cwtl
andl
mov
add
mov
pop
in
pop
and
das
push
mov
rolb
int
fists
add
add
rolb
mov
inc
daa
enter
mov
clc
push
adc
cmp
or
push
mov
or
inc
mov
add
add
mov
add
mov
lock
sub
fwait
inc
mov
mov
pushf
cmpsl
jp
pushf
std
ds
aad
push
in
les
add
xor
mov
add
fwait
sub
add
inc
push
clc
sub
add
dec
loope
jmp
repnz
add
adc
adc
lret
add
arpl
adc
mov
jge
rolb
adc
mov
adc
mov
sub
ret
lcall
sti
cs
cwtl
daa
mov
push
add
mov
mov
testb
pop
scas
pop
sti
aam
rolb
mov
nop
add
icebp
nop
add
popa
mov
out
xor
mov
pop
clc
push
sub
loope
iret
imul
int3
sub
mov
add
mov
mov
add
imul
mov
daa
iret
jne,pt
inc
add
popa
mov
mov
xchg
add
dec
push
insl
push
add
push
add
add
add
add
leave
push
inc
lret
aam
jp
add
mov
jno
rolb
sbb
es
sahf
mov
loope
daa
jg
add
jg
and
add
jmp
aas
fadd
js
add
int
add
stos
aas
inc
mov
push
sbb
add
fiadds
mov
mov
adc
mov
xchg
jl
add
lods
adc
mov
add
gs
incl
aad
xor
rolb
push
add
add
or
mov
cmp
popf
iret
pop
addb
cltd
adc
std
mov
fsubp
loopne
mov
xchg
add
or
inc
add
xor
mov
add
add
mov
outsb
ja
jg
loope
cmp
sub
cmp
icebp
adc
mov
add
lret
mov
cwtl
fcoms
popa
bound
mov
adc
push
mov
lret
mov
jne
fldt
daa
push
int3
mov
mov
add
cs
ja
stc
or
movsl
roll
data16
insb
aaa
orl
push
jae
sti
adc
mov
movsb
mov
or
loopne
mov
clc
mov
mov
fs
je
mov
push
sub
test
das
test
add
insb
mov
arpl
mov
sbb
and
jno
pop
jns
mov
inc
mov
and
xor
lods
mov
mov
rolb
addb
in
add
popa
les
mov
mov
jnp
push
loope
ljmp
mov
add
mov
pop
sub
push
clc
lret
dec
lock
add
dec
push
lock
push
jne
xchg
fldenv
push
jmp
xor
mov
mov
add
mov
mov
mov
lods
sbb
add
leave
lret
sbb
inc
add
scas
mov
mov
into
xor
add
mov
icebp
mov
add
dec
push
inc
add
pop
aam
mov
add
das
iret
xor
pop
fiadds
cmpsb
jbe
pop
aas
mov
add
mov
imul
mov
push
dec
bound
mov
push
mov
inc
add
pop
ja
jle
sub
bound
mov
testb
lds
add
mov
frstor
rolb
mov
jo
mov
push
xchg
sub
xchg
addb
outsl
pop
sub
add
addb
popf
dec
inc
scas
add
mov
push
add
mov
mov
fmulp
jbe
xchg
adc
mov
sub
js
movsl
lret
mov
imul
xchg
add
mov
and
add
jecxz
add
andl
add
mov
inc
add
aas
and
add
cmc
out
sbb
arpl
inc
xor
mov
loopne
mov
icebp
pop
mov
adc
mov
jle
sbb
xor
adc
mov
addb
and
fdivl
sbb
lahf
outsb
cmp
sbb
sub
mov
xchg
addr16
xchg
loope
pusha
add
mov
cmp
dec
mov
stos
mov
or
pop
rolb
leave
cmp
or
mulb
add
idivb
popa
mov
push
in
and
mov
xchg
xchg
mov
jp
outsl
call
and
mov
cld
xor
pop
dec
repz
scas
xor
iret
testl
mov
xchg
sbb
lock
mov
adc
inc
inc
outsl
jl
das
fdivrl
xchg
dec
inc
inc
add
in
add
mov
sub
add
mov
add
or
sti
pop
movsl
test
fidivl
xchg
mov
ret
ret
xchg
sub
and
lds
testl
jle
add
inc
xchg
int
add
mov
add
and
or
add
es
jb
mov
gs
jle
fadds
xchg
xchg
popf
scas
xchg
outsl
rolb
daa
aam
push
mov
push
cmp
inc
adc
mov
loop
mov
xor
pop
xor
mov
xor
mov
sub
jmp
add
adc
add
dec
addr16
mov
cmp
adc
mov
add
mov
aaa
jae
add
adc
fdivrl
sbb
push
add
mov
cmp
pop
adc
add
ja
pop
jno
cmp
or
sbbl
mov
mov
xor
je
insb
int
add
loopne
mov
enter
cmp
mov
mov
mov
add
inc
iret
jnp
inc
push
jecxz
inc
add
sahf
dec
idiv
dec
out
leave
ja
aad
cli
cmp
out
iret
xlat
jbe
pop
xor
and
mov
lock
jl
addb
mov
or
push
jmp
add
jnp
mov
dec
scas
mov
cmpsl
adc
mov
leave
imul
mov
xchg
insb
sub
out
icebp
loope
push
in
inc
add
repz
idiv
out
inc
mov
jo
mov
add
movsb
cmp
add
lds
addr16
xorl
cltd
xchg
add
add
mov
sbb
mov
push
inc
add
fldcw
adc
enter
fwait
in
xor
xchg
inc
cmp
push
imul
mov
add
pop
pushf
cmp
nop
add
push
ja
add
repnz
dec
pop
popa
xchg
mov
mov
clc
push
out
mov
leave
mov
jae
add
dec
jns
cmp
loope
les
push
and
adc
push
js
addb
xor
add
data16
addr16
add
mov
pop
mov
data16
popa
scas
lods
daa
inc
push
add
jb
mov
lsl
jb
mov
mov
mov
pop
jno
fnstsw
ss
cmp
and
add
into
rolb
mov
cltd
clc
cmc
mov
enter
add
or
adc
add
mov
dec
leave
leave
loope
xchg
sub
bound
mov
mov
push
add
jp
adc
mov
dec
jnp
movsb
out
pop
arpl
add
cmpsl
movsb
int3
or
xchg
add
cltd
fnstenv
add
jg
and
mov
sub
stos
jnp
sub
roll
mov
add
mov
mov
xchg
test
push
add
and
rolb
mov
cmp
add
xstore-rng
cmpsl
and
mov
add
add
call
add
mov
cmp
jno
add
out
mov
add
mov
mov
inc
jp
xchg
add
out
mov
pop
jbe
fidivrs
in
out
xor
push
add
rcll
aam
cs
fmull
jle
xor
aaa
cmpsb
rolb
mov
cmp
jo
mov
mov
movsb
imul
movsb
scas
mov
loope
addb
push
add
xor
dec
push
out
loop
mov
xchg
ret
stos
inc
movsb
pop
test
add
add
mov
shll
mov
adcl
mov
mov
rolb
mov
sub
mov
mov
out
or
add
mov
add
add
mov
mov
test
outsl
int
nop
add
mov
sbb
mov
or
into
add
popf
aam
leave
cmp
nop
add
mov
push
shll
jecxz
cs
sub
insl
mov
lahf
sar
sti
dec
mov
add
dec
dec
arpl
aaa
lret
add
mov
daa
clc
dec
arpl
xor
les
add
jns
scas
mov
popa
jecxz
cltd
mov
mov
add
mov
mov
lods
gs
dec
sub
add
and
mov
mov
iret
xchg
out
xor
mov
pop
idivl
rolb
push
arpl
add
sbb
test
imull
add
and
std
sub
jmp
imul
leave
dec
jae
dec
pop
mov
or
add
loope
adc
mov
pop
and
inc
mov
stos
cli
jmp
push
push
popf
push
imul
jnp
ret
ljmp
lds
es
cmp
push
mov
add
int3
sub
repnz
mov
sbb
sbb
aaa
sub
jae
inc
mov
xlat
negb
ljmp
in
mov
mov
mov
popf
scas
jle
lret
fildl
push
clc
mov
fwait
jnp
jae
pop
pop
fsubr
xchg
inc
or
add
add
mov
sbb
jmp
fisttpl
push
lcall
out
test
mov
push
add
add
add
mov
les
mov
add
add
mov
out
jl
or
and
in
sub
mov
mov
jno
cmp
add
shrl
add
bound
mov
data16
arpl
xor
mov
cltd
and
and
add
mov
push
xchg
pushf
inc
add
add
sbb
jno
inc
adc
stc
out
loope
jp
pop
bound
mov
adc
add
add
mov
or
out
ja
mov
jg
add
mov
inc
dec
arpl
mov
mov
push
add
sub
mov
sub
add
add
mov
mov
movb
adc
mov
divb
dec
lods
insb
addb
rcll
mov
int3
mov
dec
cmp
add
jg
push
iret
jb
mov
mov
xlat
aas
into
jl
mov
mov
add
and
add
sub
add
lods
pop
push
shrl
fcomp
movsl
xchg
and
mov
insl
push
xchg
add
subl
inc
pop
xor
testl
add
mov
add
add
add
call
mov
add
mov
les
mov
inc
xor
lods
dec
sbb
es
repz
std
cmpl
add
addr16
lret
es
je
fcomps
leave
lds
int
or
xchg
movsb
lods
pop
pop
stos
testl
add
mov
aad
rcr
push
call
lret
inc
lock
pop
push
push
jo
mov
je
jp
enter
xchg
clc
mov
add
push
cmovns
add
mov
dec
lods
sub
inc
add
mov
nop
add
shll
xchg
fs
loopne
mov
lods
mov
mov
hlt
adc
call
push
push
adc
cs
mov
mov
cwtl
outsb
imulb
mov
dec
xchg
ja
js
aas
fs
sub
in
or
sti
test
mov
inc
xchg
lret
jne
sbbl
or
cmpsb
mov
pop
addb
test
push
testb
mov
or
add
xchg
xor
mov
nop
add
lcall
inc
pop
xchg
xorl
mov
inc
ret
mov
add
je
sbb
dec
jo
mov
mov
or
incb
add
add
lahf
rolb
ficoms
test
add
or
mov
or
push
jge
imul
push
cmp
adc
xor
push
data16
addb
add
mov
inc
add
adc
cmpsb
lods
sarl
sbb
movsb
fistps
add
add
test
push
movsb
adc
mov
mov
imul
ja
pushw
add
test
sti
pop
fdivrs
test
add
int3
add
mov
mov
mov
add
mov
jle
sub
push
mov
idivb
nop
add
add
mov
add
jae
xor
xor
mov
add
mov
add
mov
mov
push
pop
mov
dec
push
xchg
pop
cmpsl
sub
rolb
mov
dec
xchg
imul
mov
repnz
stos
int3
cltd
sub
mov
add
dec
insb
mov
es
xor
mov
mov
add
dec
inc
add
test
ret
inc
jp
subl
sbb
test
ss
aad
and
loop
mov
adc
mov
add
bound
mov
add
into
pop
stc
aad
dec
mov
test
jnp
mov
mov
and
add
mov
aaa
loopne
mov
add
jmp
jae
pusha
add
dec
outsl
push
dec
sub
jae
mov
add
mov
lret
mov
add
xor
aam
fld
add
push
repz
push
js
jmp
rolb
mov
add
jmp
shll
add
imulb
cmpsl
subl
lahf
dec
imul
jmp
add
cmp
lret
xor
pushf
push
lods
loop
mov
xchg
sbb
inc
test
leave
clc
sub
mov
decl
and
mov
and
repz
in
pushf
ja
and
fisttps
loope
fs
nop
add
cltd
push
and
fcoms
and
or
orl
pop
bound
mov
hlt
inc
fs
les
add
pop
test
add
mov
imul
add
mov
mov
sbb
add
pop
mov
mov
add
repnz
sahf
inc
jne
cmc
xchg
inc
mov
dec
mov
mov
add
lret
add
mov
aaa
xchg
adc
mov
mov
leave
jb
mov
in
pop
mov
loope
out
ds
add
pop
xchg
add
loope
cmp
mov
loope
push
rolb
scas
daa
xchg
sbb
dec
addr16
adc
mov
addb
cwtd
push
lahf
rolb
mov
jb
mov
jae
push
cld
mov
cltd
mov
add
xchg
and
mov
mov
xchg
fsubrs
movsl
aad
add
or
sbb
cli
adc
rolb
mov
add
and
mov
mov
jbe
push
and
lods
rolb
mov
and
jmp
add
push
loope
inc
lret
pop
or
mov
add
jge
jl
pop
lea
mov
call
hlt
imul
mov
mov
cld
pushf
sub
loope
push
push
add
rcrl
int3
jo
mov
pop
xor
addb
stos
test
imul
popa
fildll
test
nop
add
mov
mov
mov
repz
rolb
fldenv
add
cmp
add
in
xchg
movsb
mov
mov
fcompl
sub
dec
jnp
add
lret
lock
xchg
and
in
xchg
sub
add
mov
xor
mov
daa
aas
les
dec
or
ljmp
mov
lds
add
movb
fiaddl
and
mov
pop
fisubrl
inc
enter
add
add
add
mov
xchg
xchg
adc
ds
or
inc
add
imul
imul
addb
and
mov
push
lea
mov
add
dec
out
jg
cmpsl
test
push
add
add
aaa
inc
add
rolb
sbb
iret
sbb
mov
or
mov
jmp
adc
mov
subl
loope
pusha
add
mov
decl
push
fcoms
mov
fcomps
dec
xor
mov
sub
sub
mov
mov
add
dec
cmp
fs
mov
mov
popa
repnz
sub
push
fdivl
int3
lea
mov
dec
nop
add
insl
ficoms
push
into
inc
add
inc
sbb
jo
mov
mov
mov
add
data16
jge
add
aad
add
out
add
add
roll
mov
loopne
mov
jo
mov
add
sbb
das
sbb
std
outsl
pop
cmp
xor
inc
pop
insb
mov
aam
dec
sub
sbb
jae
add
mov
cmp
add
mov
mov
cmp
xor
mov
addb
divl
imulb
cmp
mov
add
add
sbb
sub
add
xchg
jae
stos
dec
and
mov
lret
dec
popa
fneni(8087
add
mov
inc
sub
adc
hlt
rcrl
adc
mov
repnz
xor
mov
sub
cmp
mov
sbb
mov
xchg
push
nop
add
scas
fld
scas
or
mov
popf
por
mov
flds
mov
inc
mov
add
add
jo
mov
addb
or
add
cmp
enter
push
or
or
mov
addr16
in
pusha
add
add
mov
add
inc
xchg
std
cld
jmp
mov
iret
out
add
es
mov
out
sbb
mov
jbe
cmp
jecxz
pop
loopne
mov
jg
int3
dec
lock
mov
jecxz
pmullw
in
fsubrl
sbb
dec
ljmp
xor
addb
flds
mov
sti
ret
mov
add
scas
mov
add
mov
jl
xlat
dec
lahf
mov
mov
lock
mov
call
cmp
jl
or
gs
lea
cwtl
push
sub
mov
js
fsubr
or
add
fdivrs
or
and
add
sbb
mov
jno
imulb
add
mov
sbb
in
fcoml
add
mov
ret
and
mov
mov
notb
mov
add
mov
push
jb
mov
test
rolb
mov
sti
lret
sbb
mov
pop
frstor
in
pushf
fwait
cmp
dec
xor
adc
mov
xchg
in
mov
push
fsts
scas
rolb
lret
adc
iret
aas
push
stos
js
insl
inc
add
div
add
movsl
test
jns
jae
add
gs
lods
push
jns
add
or
popf
sub
ljmp
and
pop
jl
push
sahf
nop
add
mov
add
xlat
test
ja
xor
jl
xor
mov
add
mov
mov
pop
sub
dec
jg
out
lods
sti
inc
sub
add
add
add
and
test
inc
popf
add
mov
iret
dec
and
add
repnz
mov
pop
imul
lret
jge
mov
es
fists
inc
cmp
add
add
enter
imul
outsl
mov
cmc
inc
pusha
add
add
mov
dec
in
push
cwtl
outsl
xchg
lcall
mov
xchg
rorl
push
adc
cli
and
aad
jp
iret
or
mov
add
ret
cwtl
dec
mov
pop
xor
add
sbb
fldenv
mov
dec
lock
add
inc
bound
mov
cli
mov
mov
add
inc
out
fstps
add
xchg
sbb
add
mov
cs
addl
hlt
stos
test
jl
adcl
adc
mov
cltd
mov
rcrl
cmp
stc
jns
and
mov
cli
imul
mov
jae
add
push
add
addb
das
jbe
add
push
sub
sbb
adc
push
cmp
int
sbb
mov
outsl
inc
add
call
pop
cmp
push
mov
jns
add
addb
sub
fildll
scas
pop
and
cmpsb
aaa
pop
push
int3
push
cmp
fbstp
cmpsl
loopne
mov
fwait
stos
repnz
and
mov
and
dec
xchg
sub
outsb
pop
sub
push
sub
imul
mov
add
mov
popf
test
ja
loop
mov
cmp
adc
inc
inc
rcr
imul
add
dec
bound
mov
add
mov
sub
int3
push
out
xor
add
xlat
and
popf
pop
rcll
cmp
pop
adc
mov
addb
iret
std
jno
sub
loope
loope
dec
and
mov
leave
cmc
ret
sub
sub
lahf
rorl
jmp
imul
jmp
dec
pop
aaa
mov
cmp
sahf
add
push
and
mov
mov
enter
sub
xor
mov
add
add
cmc
nop
add
sbb
or
lret
mov
iret
push
xchg
adc
rolb
push
pop
outsb
test
rolb
mov
pop
gs
xchg
js
xor
mov
hlt
scas
outsb
insb
adc
adc
mov
sub
icebp
mov
push
movsl
insl
in
aas
inc
add
xchg
jle
add
pushf
out
add
mov
adc
mov
push
xor
lds
out
push
fwait
in
add
mov
push
add
pop
sub
jbe
dec
rcll
mov
xchg
xchg
xchg
inc
cmp
xchg
xchg
adc
mov
imul
stos
lds
inc
add
add
mov
push
mov
pop
xchg
mov
mov
push
mov
stos
sti
sub
outsb
inc
adc
fnsave
call
add
push
adc
pushf
jbe
pop
jp
add
outsl
shl
cli
jecxz
or
hlt
rolb
mov
add
mov
fistpl
jbe
imul
mov
mov
cmp
cmp
std
call
add
add
ljmp
ja
rol
adc
mov
std
adc
push
xchg
add
add
add
sub
pop
mov
lret
rolb
mov
mov
push
mov
or
out
or
xor
mov
loope
add
addb
mov
mov
jno
jge
aas
je
enter
adc
mov
xchg
jle,pt
dec
push
mov
cmp
imul
ss
and
jl
cwtl
insb
roll
bound
mov
out
push
xor
mov
scas
test
mov
jbe
int
outsl
faddl
mov
rolb
mov
fsubr
pop
daa
sbb
dec
push
mov
ss
rolb
pop
mov
push
jge
add
call
call
pop
or
jbe
sub
movsl
testb
test
add
dec
dec
pop
test
addb
test
xor
stos
or
jbe
pop
push
sub
mov
sti
addb
lods
clc
push
add
add
push
dec
iret
sahf
and
mov
mov
loope
push
or
add
or
cmpsl
xor
orl
cmp
les
add
cmp
mov
pusha
add
jns
add
xchg
test
jp
push
jns
leave
and
adc
add
or
add
add
mov
and
push
test
mov
cmp
std
addr16
cmp
push
jo
mov
mov
mov
lcall
sub
and
lret
loope
mov
cltd
cltd
fistps
jmp
jae
or
jo
mov
mov
push
addb
xchg
or
lret
aaa
outsl
xchg
ret
sbb
icebp
ja
sub
push
mov
lods
jb
mov
mov
es
lret
jle
adc
scas
jne
add
adc
lret
out
mov
add
mov
xchg
leave
lea
loopne
mov
mov
mov
rcll
fcmovne
stc
inc
add
add
mov
out
mov
xor
aam
xor
add
cmc
bound
mov
add
push
add
test
push
into
dec
aaa
fisubs
in
add
mov
sub
bound
mov
push
xor
mov
pop
inc
mov
adc
push
lds
stos
dec
call
mov
add
jnp
ret
stos
addb
mov
mov
lds
jno
rol
sub
jb
mov
add
pop
inc
add
and
mov
jnp
addb
add
mov
cmp
mov
aad
sub
add
mov
xor
mov
sbb
pop
jmp
sub
add
repz
add
inc
xchg
add
add
push
in
sbb
fstpt
das
mov
pop
inc
add
inc
mov
mov
xlat
mov
mov
in
jmp
test
lock
mov
das
inc
cltd
xchg
outsl
pop
cld
dec
mov
mov
ret
pop
shl
jne
std
add
pop
sub
xchg
ljmp
or
mov
cmp
mov
in
loope
add
ss
mov
mov
das
mov
add
cmp
add
cmp
ficompl
dec
adc
int
fisttpll
aaa
sarl
add
mov
jl
lret
bound
mov
sarl
into
dec
push
sub
imul
add
sub
sbb
jle
or
pop
add
xchg
inc
add
add
fsubs
pushf
sbb
aas
mov
sub
xor
sub
mov
add
xchg
js
lret
sub
add
push
adc
mov
fidivrs
out
mov
gs
and
pop
inc
add
int
lret
inc
add
ffree
mov
mov
pop
cmp
and
mov
lock
loop
mov
in
icebp
pop
icebp
sbb
add
rorl
jb
mov
nop
add
xor
mov
incl
and
mov
add
and
adc
mov
mov
add
aad
mov
add
lods
pop
outsl
fisubs
push
dec
movsl
mov
lret
test
adc
add
lret
leave
xchg
jp
mov
mov
test
stc
addb
add
roll
test
mov
iret
sahf
lods
lods
out
fisubs
add
pop
push
sbb
push
pop
ffree
int3
je
cwtl
fnstenv
in
gs
sbb
mov
loope
dec
test
xor
cs
fsqrt
aam
adc
inc
out
add
popa
xchg
sub
cmp
sahf
cwtl
mov
pop
shl
add
add
mov
xchg
jo
mov
add
aam
add
movsb
jns
xchg
test
int3
xor
pop
lea
push
repnz
xchg
xchg
aad
mov
std
dec
cli
xor
stos
or
clc
push
inc
aam
mov
in
mov
pop
adc
push
inc
add
bound
mov
mov
sub
adc
inc
inc
je
adc
dec
cmp
push
aam
outsb
mov
mov
rolb
mov
push
adc
out
push
push
hlt
adc
mov
lock
sub
add
test
add
mov
jo
mov
insb
and
sbb
inc
fadd
popa
sub
sub
jmp
pop
inc
lahf
lahf
cld
inc
inc
imul
add
ljmp
jno
mov
into
mov
loop
mov
sahf
idivl
xchg
ret
sbb
add
or
in
data16
mov
cmp
mov
fsts
pushfw
xor
add
sbb
mov
push
aad
cltd
inc
mov
mov
loope
pop
xchg
call
add
loopne
mov
test
add
add
dec
and
xor
daa
or
add
imul
mov
xchg
jp
add
pop
or
mov
sbb
add
add
add
bound
mov
iret
insl
rolb
mov
cmp
sub
xor
add
nop
add
aas
jo
mov
or
mov
test
loop
mov
mov
push
and
add
inc
fdivrl
in
cmp
popf
add
cmp
jecxz
in
sbb
aam
cmp
cmp
int3
imul
repz
mov
repnz
sub
aad
out
mov
adc
mov
clc
arpl
fbld
nop
add
nop
add
mov
sub
ss
aad
add
test
sub
inc
sti
repz
mov
add
insl
rcpps
outsb
sbb
mov
push
cltd
sbb
nop
add
enter
or
add
sbb
sub
les
xchg
mov
fs
add
rolb
mov
mov
add
mov
add
push
add
out
dec
cmp
pusha
add
lods
testl
add
cmp
mov
inc
add
add
mov
mov
inc
push
adc
aas
ja
mov
mov
mov
jo
mov
daa
jnp
lds
add
mov
pop
loope
fs
lret
add
dec
mov
inc
inc
push
dec
push
add
push
push
sub
ds
jl
cmp
into
inc
push
jnp
jp
and
mov
adc
mov
lret
add
in
fsts
arpl
or
test
mov
sti
out
ffree
int3
inc
jbe
add
add
jle
cmpsb
rolb
mov
inc
scas
mov
test
mov
push
ds
andnps
add
add
pop
pop
ficomps
leave
inc
out
or
xor
cmp
dec
mulb
add
mov
repnz
cmc
sbb
pop
fimull
xor
mov
outsb
mov
and
mov
fsubl
mov
mov
mov
xor
mov
sub
xchg
add
adc
mov
fildl
outsl
dec
dec
out
jno
pusha
add
aas
jp
cmp
loope
jg
add
xchg
lcall
cmp
push
xchg
lds
mov
cmp
in
iret
inc
xchg
rolb
push
enter
cmpsb
pop
addb
dec
sub
test
xor
pop
add
add
inc
mov
add
pop
push
pusha
add
pusha
add
mov
aam
mov
ss
shll
mov
fwait
push
iret
test
imulb
je
gs
std
stos
lahf
out
popf
sub
add
mov
add
cld
jne
lcall
adc
mov
xchg
add
mov
mov
insb
mov
add
mov
push
pop
adc
push
xchg
add
les
add
sub
mov
inc
xchg
mov
or
nop
add
mov
push
add
lods
imul
push
jno
sbb
push
sub
insb
xor
mov
add
cwtl
pop
mov
ljmp
insl
sub
dec
jge
mov
insb
jg,pn
flds
mov
sub
daa
pushf
enter
nop
add
xchg
lea
xchg
sbb
bound
mov
jae
ror
and
xor
test
jbe
aam
jnp
cmp
pop
jle
adc
in
or
add
add
xchg
cmp
addb
dec
test
add
mov
sub
adc
mov
jle
in
out
mov
add
clc
push
ret
loopne
mov
fsubl
adc
add
fdivrl
or
int3
mull
mov
cmp
pusha
add
bound
mov
and
push
inc
add
add
and
add
mov
sbb
add
add
mov
dec
imul
mov
leave
sub
and
mov
add
xchg
add
inc
inc
add
rolb
cmpsb
jmp
cmpsb
enter
lods
movsb
sbb
xchg
stos
and
mov
xor
mov
add
daa
xor
out
in
pop
xchg
add
sar
mov
sub
add
add
mov
jns
mov
mov
mov
push
push
nop
add
inc
pop
or
add
mov
outsb
enter
sbb
rolb
add
out
inc
inc
and
mov
jle
arpl
mov
ja
adc
mov
sahf
sub
jno
sub
cwtl
enter
mov
lahf
popf
inc
popf
fldl
pop
inc
add
add
add
imul
add
cmpl
aad
adc
mov
inc
jmp
mov
mov
mov
pop
mov
mov
sti
cltd
xchg
stos
push
mov
mov
inc
test
add
jmp
sub
xor
mov
and
loopne
mov
add
sub
mov
xchg
jp
add
dec
jle
insb
mov
loop
mov
push
hlt
pop
ret
pmaddwd
or
sbb
iret
mov
mov
pop
and
mov
xchg
jecxz
nop
add
inc
mov
cld
dec
cmc
cs
faddl
sbb
xlat
adcl
mov
mov
mov
mov
leave
addb
mov
das
dec
out
push
add
add
loop
mov
add
sub
add
das
cmpsl
push
das
rorl
and
mov
lret
mov
mov
rcll
ffreep
mov
lret
mov
mov
addb
jns
lds
dec
inc
movb
and
mov
mov
ss
pop
jno
jg
lcall
jae
outsb
mov
add
mov
add
mov
cwtl
orl
cmc
cmp
or
hlt
or
iret
outsb
jg
jp
add
enter
fmull
push
mov
jne
je
mov
push
add
fmulp
mov
lret
pusha
add
hlt
jne
repz
add
mov
ds
pushf
xlat
insb
sub
add
sub
add
mov
pop
mov
jb
mov
cld
repz
in
pop
mov
int3
imul
test
mov
add
mov
add
sub
add
rcrl
and
jl
mov
repnz
ss
lds
imul
jge
arpl
ret
jl
stos
cmc
arpl
dec
and
push
mov
add
add
hlt
test
pop
pop
mov
push
aas
cmp
jae
mov
push
add
adc
sbb
movsb
sbb
sbbl
jae
cmpsb
fnstenv
sbb
jg
add
add
or
mov
jns
icebp
or
idivb
cmp
sbb
es
int3
iret
lock
aaa
pop
fldcw
sub
or
add
div
ja
scas
xchg
mov
out
xchg
and
add
mov
pop
add
mov
and
orl
mov
pusha
add
stos
inc
in
and
out
push
aam
xchg
inc
je
xchg
loopne
mov
jne
into
mov
sbb
dec
jle
add
adc
mov
pop
sub
test
add
in
or
add
adc
add
push
add
xor
dec
inc
push
add
push
add
addb
cmpsl
xchg
add
mov
add
mov
and
or
pop
and
rolb
mov
add
mov
pop
js
add
mov
add
and
add
divb
mov
imul
xchg
mov
pushf
mov
fcmovnbe
insb
ds
pop
fistpll
xor
arpl
addb
push
ljmp
pop
movsb
rcr
iret
inc
das
mov
loopne
mov
xorl
pop
sub
popa
dec
push
sub
add
mov
mov
mov
mov
push
cmpsb
and
push
stos
mov
xor
fidivrs
ret
popa
or
pusha
add
fisubrl
jne
xor
mov
in
sub
add
ss
shr
jmp
add
mov
cmp
pop
test
out
inc
add
and
mov
add
xor
mov
scas
push
cmpsb
xchg
mov
xchg
add
scas
sub
add
dec
push
into
mov
add
cmp
cmp
movsl
jge
inc
lock
mov
pop
call
or
loopne
mov
add
mov
xchg
and
mov
inc
add
mov
xchg
dec
and
mov
inc
add
xchg
lods
dec
adc
mov
pop
stos
cltd
test
xchg
xor
cmpsl
jae
rcrl
sub
jno
pop
push
imul
cmpl
arpl
test
jae
mov
add
mov
push
add
rcrl
xchg
add
and
or
sahf
xor
add
lea
add
notrack
and
jecxz
and
mov
add
push
shl
data16
stc
fstl
int3
xchg
xchg
lods
mov
movb
mov
push
add
mov
imul
add
in
sbb
fs
add
fldt
push
add
add
mov
int3
pop
sub
aas
orl
sub
xchg
fstl
pop
mov
mov
add
ret
sti
divb
add
jle
call
neg
imul
add
add
outsb
inc
add
cwtl
xor
addb
lahf
mov
imul
jmp
enter
addb
dec
jnp
push
addl
and
add
pop
out
in
xchg
mov
mov
add
mov
add
push
setl
outsb
mov
xlat
stc
movsl
enter
lret
dec
xor
mov
mov
add
incl
sahf
or
mov
loope
int3
fistpll
vmulss
mov
popa
mov
ret
dec
fsts
fs
push
cmp
mov
int3
inc
dec
add
incl
add
mov
adc
lock
aas
sbb
mov
mov
mov
dec
test
mov
mov
call
fists
xlat
int
add
int3
jne
push
out
pushf
pop
pop
stos
cmp
cmp
or
test
scas
popf
pop
rolb
mov
add
mov
mov
scas
pop
into
jae
add
xchg
pushf
xor
mov
dec
sarl
add
sbb
mov
or
add
jecxz
jg
mul
jg
ja
in
mov
addb
mov
loope
fld
add
jo
mov
add
add
arpl
inc
jp
fcmovnu
lret
jle
add
cmp
xchg
lret
or
mov
enter
mov
add
add
mov
mov
xchg
dec
decb
mov
inc
add
sub
cmp
test
test
dec
mov
shr
test
adc
mov
and
mov
dec
fcoms
add
in
lcall
mov
or
xchg
xchg
add
sbb
mov
xchg
add
add
add
add
add
mov
xchg
add
jnp
mov
jbe
push
pop
sahf
std
dec
adc
add
nop
add
inc
add
inc
add
lret
add
hlt
add
add
xchg
add
ret
and
jnp
rolb
adc
dec
mov
push
mov
mov
add
or
call
push
xchg
mov
add
repz
es
sbb
in
icebp
cmc
add
push
rolb
mov
fwait
jmp
movsb
xor
xor
mov
sahf
int
scas
pushf
push
dec
addr16
sub
jp
fisubl
jle
and
add
or
jge
add
or
test
js
add
in
jne
jo
mov
mov
mov
sub
das
inc
add
mov
add
movsl
and
mov
or
ret
push
std
dec
cmpsl
enter
mov
test
add
mov
lods
popa
stc
inc
add
das
les
xchg
sbb
pop
or
add
push
xor
xchg
rcrl
dec
addb
push
jbe
scas
das
popf
hlt
outsl
fidivrs
push
ss
fs
and
mov
popa
cli
xchg
cmpsb
inc
stc
fst
inc
and
mov
mov
mov
pop
arpl
lcall
addb
wbinvd
or
and
jo
mov
loopne
mov
rolb
inc
add
mov
test
xchg
sti
roll
mov
movsb
mov
aaa
stc
stc
loopne
mov
xchg
add
dec
mov
sahf
arpl
das
mov
jle
and
and
mov
xlat
ficomps
push
rolb
mov
sbb
jl
fld
adcl
push
jg
pop
mov
std
ret
xchg
lea
shll
inc
add
add
rcl
int3
bound
mov
add
add
inc
fisubl
dec
in
or
push
xchg
mov
mov
add
xchg
test
add
inc
add
je
lcall
roll
mov
fstps
adc
push
xlat
jno
gs
scas
jecxz
scas
mov
mov
insb
push
or
or
add
inc
fildll
jae
lods
sub
inc
add
mov
mov
jae
arpl
mov
lods
xor
mov
inc
arpl
add
loop
mov
add
insb
sub
mov
mov
pop
ret
jb
mov
mov
push
xor
xorl
or
jo
mov
add
add
add
shl
leave
and
dec
cmp
je
add
add
mov
add
sbb
scas
jp
pop
mov
sbb
inc
pop
push
les
sbb
dec
ret
jno
out
and
je
lds
rcl
or
sbb
icebp
jl
cmpsb
pop
data16
mov
cmc
pushw
or
push
cmp
xor
stos
jmp
das
cmpsl
adc
mov
push
add
adc
add
jg
pop
dec
mov
out
dec
in
mov
dec
push
add
jge
repz
cmpsl
jecxz
mov
jb
mov
lret
addb
inc
xor
sbb
pop
cmp
xlat
mov
aam
stos
xlat
mov
rolb
pop
loope
imul
xlat
push
sbb
mov
inc
bound
mov
cli
push
fisubrl
cmp
push
add
movsl
push
sbb
incl
lret
addb
xor
mov
add
aad
imul
mov
popa
push
add
adc
adc
mov
jae
mov
scas
mov
in
aad
add
std
inc
add
loopne
mov
ds
js
inc
jl
cmp
xlat
jnp
inc
add
adc
mov
popf
fistl
xlat
sbb
loope
in
aam
dec
mov
sub
fwait
xor
mov
cmp
lods
adc
mov
mov
mov
in
mov
mov
mov
neg
add
mov
push
scas
push
mov
imul
add
js
pop
sub
imul
cmpsl
pop
lahf
rcrl
mov
inc
rolb
mov
pop
inc
mov
lahf
outsl
push
dec
scas
fstpt
movsb
test
divb
in
mov
mov
sbb
sub
xchg
add
xchg
add
adc
dec
iret
inc
scas
push
add
inc
xchg
pop
es
std
and
xchg
je
mov
cmpsl
stos
ret
loope
inc
add
add
enter
mov
mov
xor
mov
cmp
add
jno
add
int
insl
punpckhdq
mov
pop
loopw
mov
jne
in
lea
test
cmc
outsb
and
test
inc
addb
push
cmp
sbb
sti
test
punpckldq
mov
xchg
add
add
fwait
pop
mov
push
adc
jns
adc
sahf
xor
add
addr16
xchg
inc
roll
mov
mov
out
jmp
ja
add
loopne
mov
mov
notb
out
add
data16
pop
mov
mov
adcl
fbld
rolb
mov
mov
push
notl
mov
dec
add
pusha
add
sbb
out
hlt
in
jge
pushf
cmpsl
dec
xor
jo
mov
and
push
add
stos
test
and
icebp
fdivs
mov
lret
push
adc
mov
sti
dec
ret
jno
mov
call
mov
jb
mov
add
mov
add
adc
mov
dec
sub
addb
insb
and
mov
fsubp
or
scas
fcoms
popf
insb
stc
lret
xchg
push
jb
mov
adc
mov
fcoml
movsl
jecxz
mov
mov
add
sub
cmp
in
test
inc
add
out
cld
rolb
mov
outsl
cmpsl
mov
push
or
bound
mov
mov
add
cmp
mov
and
mov
mov
jecxz
out
inc
fnstsw
adc
test
xchg
addb
jb
mov
jne
jns
mov
add
pop
repz
mov
mov
push
jmp
mov
fsub
dec
jmp
cmp
insb
dec
jle
lods
aas
rolb
jns
add
add
jge
sub
push
mov
fs
aaa
push
stos
mov
add
mov
mov
xlat
mov
add
jge
pop
hlt
adc
mov
ret
xor
mov
shrl
lcall
je
daa
sub
popf
repnz
mov
inc
lahf
movsb
mov
xor
push
sahf
out
stos
dec
sbb
add
mov
loopne
mov
or
fcmovne
pop
cmp
sbb
lds
pop
cmp
shr
add
jnp
cmp
mov
xchg
rcll
add
mov
dec
int3
pop
clc
pop
adc
in
cld
push
add
je
fcmovnb
inc
in
pop
lea
clc
in
lods
lds
pop
dec
test
stos
enter
addb
cmp
xchg
pop
adc
mov
inc
add
cmp
cmpsl
out
popa
loope
out
sbb
aam
insb
pop
insb
cmpsl
jle
xlat
dec
out
mov
test
mov
xlat
fidivrl
ss
test
arpl
xchg
out
sbb
mov
loope
mov
add
lods
mov
xchg
adc
mov
dec
sub
repz
sub
mov
xor
mov
outsl
in
jns
sbb
mov
idiv
ds
popa
add
mov
test
cmp
out
and
mov
fnstenv
iret
test
jg
jns
mov
dec
cli
sub
or
and
mov
mov
je
icebp
gs
sub
push
pop
mov
callw
jns
xor
jp
ljmp
test
cmp
fisttps
mov
or
add
mov
ret
cli
popf
sbb
add
inc
add
fcmove
sub
add
popa
inc
lock
sbb
jmp
ret
jecxz
pop
les
xchg
out
sahf
cmp
mov
out
inc
negb
cmpsl
rcr
xor
mov
stos
ljmp
push
xor
push
mov
ss
mov
imull
mov
fst
ljmp
in
lret
dec
std
mov
negb
mov
or
mov
jnp
fcmovnbe
enter
add
jmp
test
test
cmpsl
sub
xchg
test
adc
mov
xchg
icebp
jge
push
pop
fmul
xor
addb
jmp
in
fidivrs
lcall
scas
push
xlat
mov
sub
and
mov
lcall
xchg
js
js
adc
mov
add
mov
lea
inc
push
notb
mov
insl
pop
inc
test
adc
dec
mov
test
adc
or
iret
sbb
dec
mov
mov
movsb
mov
xchg
sub
xchg
inc
add
or
add
cmpsb
mov
outsb
jp
rcr
mov
arpl
mov
decb
ret
pop
pop
dec
jp
test
pop
imul
stc
or
jns
daa
fsubl
test
mov
dec
pop
mov
push
data16
pop
data16
addb
fwait
stc
xchg
mov
mov
add
roll
rorl
push
out
js
xchg
push
aas
cs
scas
addl
push
add
add
fdivr
in
into
hlt
call
sub
mov
mov
add
notb
aad
mov
loope
inc
lret
pusha
add
sbb
mov
jns
add
cmp
and
push
and
or
ret
lds
push
mov
cs
les
xchg
add
or
add
push
rcl
lods
xchg
lods
push
pop
lds
popa
in
aam
inc
test
sti
sbb
sti
dec
movsb
cmp
xor
mov
ret
jns
adc
dec
push
cmp
pop
movsl
inc
hlt
jo
mov
mov
add
mov
pop
xor
adc
inc
xchg
xor
mov
divb
sub
shll
outsb
mov
insb
mov
std
push
sbb
cmpsl
inc
cltd
mov
mov
sub
rolb
loopne
mov
imul
lds
push
gs
jl
push
and
lods
mov
add
push
add
fimull
pop
push
pop
lods
seto
mov
sbb
push
inc
and
mov
push
add
cwtl
mov
jmp
xchg
add
jno
pop
xchg
mov
fsubrs
mov
jp
fbld
add
add
add
add
fcmovbe
mov
roll
sbbl
das
mov
mov
out
mov
lret
ret
dec
mov
inc
fstps
or
sub
fwait
jbe
leave
lds
add
subl
inc
xchg
dec
adc
mov
mov
test
jl
xor
insb
call
cmp
iret
pop
lret
xchg
add
xor
mov
dec
cmc
int
test
push
sbb
dec
js
jle
into
ds
out
cmp
inc
add
das
cwtl
xchg
ret
scas
mov
add
add
add
roll
adcl
adc
mov
cmp
outsb
roll
mov
icebp
addb
testl
and
mov
mov
mov
add
inc
cmp
mov
addr16
dec
cmc
push
bound
mov
jmp
addb
add
lock
mov
add
mov
push
add
mov
add
jns
add
add
clc
cmp
inc
add
div
lret
xor
mov
adc
ss
and
mov
mov
int
lods
hlt
adc
mov
jg
mov
cmp
nop
add
pushfw
cmp
add
dec
xor
add
push
leave
fldln2
js
add
add
mov
jge
add
and
add
movsl
cltd
addb
adc
and
mov
icebp
lock
repnz
mov
jo
mov
and
out
adc
or
movsl
rolb
mov
data16
cmp
lods
jb
mov
pop
inc
sti
mov
push
add
lcall
mov
inc
cmpsb
and
xchg
ljmp
mov
sub
lods
insb
inc
enter
cmp
pop
pop
mov
adc
mov
add
jmp
imul
mov
fldt
cmpsl
sbb
aas
stc
xor
mov
rolb
shll
dec
pop
xor
mov
jnp
sahf
jp
sbb
add
data16
icebp
loopne
mov
sti
pusha
add
lret
imul
sahf
hlt
dec
ljmp
std
repz
int
std
aaa
fistpl
xor
mov
sub
add
adc
mov
mov
add
xor
lods
test
mov
mov
pop
cwtl
lds
mov
mov
stc
jecxz
adc
mov
aaa
pop
mov
add
mov
call
sub
mov
add
test
or
push
sub
push
sti
jae
jne
add
in
repz
int
pop
push
jmp
jne
roll
leave
les
sub
pop
pusha
add
mov
mov
push
adc
mov
add
xchg
sub
or
loop
mov
jne
xlat
lods
int
mov
add
cwtl
aam
imul
btr
insl
repz
add
mov
add
into
mov
inc
inc
loopne
mov
dec
cmp
mov
fcomp
dec
mov
jp
pusha
add
xor
mov
mov
lahf
in
scas
add
mov
out
ret
mov
or
cmp
adc
mov
js
adc
mov
push
add
jns
inc
jge
pop
rolb
mov
jmp
add
mov
mov
or
decl
repnz
pusha
add
xor
mov
xor
stos
dec
aad
add
call
add
loop
mov
mov
cmp
sub
mov
mov
dec
hlt
imull
inc
add
mov
add
les
mov
subl
decl
xlat
add
mov
in
das
leave
cltd
sub
xor
mov
or
and
xchg
add
lahf
add
xlat
pusha
add
inc
and
fwait
call
add
dec
mov
enter
add
push
mov
add
sbbl
sbb
stos
sahf
fs
das
xor
push
add
fadd
rolb
mov
roll
pop
or
shrl
aas
nop
add
and
jne
jg
mov
cmp
add
push
lea
lret
mov
add
add
or
out
mov
addr16
xor
mov
adc
mov
cwtl
rolb
mov
fisubrs
jb
mov
mov
ljmp
adc
mov
push
cltd
jb
mov
add
cs
sub
addb
adc
sub
stc
insl
jecxz
xor
add
outsl
scas
leave
inc
inc
add
xor
inc
xchg
xor
jne
add
out
mov
daa
es
pop
pop
das
inc
and
adc
mov
loopne
mov
add
push
mov
xchg
jge
mov
mov
mov
mov
outsl
adc
ljmp
popa
sub
mov
push
adc
xor
inc
in
idivb
mov
add
add
adc
mov
jb
mov
aaa
ljmp
mov
mov
pop
adc
add
inc
arpl
add
push
jle
add
mov
cmpsb
sbb
out
nop
add
adc
push
sub
iret
jg
add
aad
inc
add
ret
aaa
je
pop
call
and
das
test
add
cld
dec
in
stc
adc
mov
shl
add
mov
mov
enter
loope
mov
lock
popf
xchg
add
xor
mov
mov
mov
mov
mov
mov
mov
add
data16
lock
dec
sub
int3
arpl
xchg
add
nop
add
ja
sub
push
fwait
mov
jge
loopne
mov
jle
mov
mov
mov
jmp
mov
add
leave
or
nop
add
jle
dec
movsl
ss
add
dec
inc
add
ja
add
popf
or
push
add
mov
mov
mov
push
add
push
add
sbb
add
das
sub
cmc
mov
add
dec
movsb
xchg
popa
jmp
xor
into
mov
add
es
in
add
and
xlat
cmpsl
cld
rolb
pop
dec
loopne
mov
sbb
cld
pop
and
aaa
pop
aad
cmpsb
pushf
fdivrl
in
inc
out
ds
loopne
mov
pop
into
clc
mov
in
jecxz
sarl
pop
mov
mov
adc
out
xchg
mov
adc
iret
das
xor
mov
cs
cmp
adc
jae
ljmp
imul
mov
xchg
mov
gs
pop
pushf
sbb
mov
add
adc
cmpsl
lods
out
sahf
inc
add
or
or
add
add
mov
sbbl
ss
add
out
add
add
mov
jl
xchg
aam
dec
mov
mov
inc
stc
mov
add
int3
add
mov
test
mov
movsb
push
add
mov
iret
or
call
dec
lea
mov
sub
add
pop
ds
sub
mov
xor
out
fldenv
aaa
mov
xchg
inc
add
lock
dec
cmp
adc
push
add
add
add
pushf
xor
cmpsl
das
lcall
add
push
mov
stos
dec
fldenv
mov
addb
mov
add
fsubp
add
xor
add
sub
rolb
mov
je
and
xor
pop
inc
adc
mov
add
lret
add
mov
xor
mov
mov
add
das
vmread
xchg
aad
add
add
lock
daa
popa
xlat
std
out
or
imul
mov
add
jge
pop
ja
add
out
stc
mov
sbb
sub
rolb
mov
jne
sarl
add
mov
sub
add
mov
mov
mov
pcmpgtw
dec
pop
fs
fwait
adcl
lea
fstl
xchg
out
push
lods
lods
aaa
jg
hlt
les
pop
mov
pop
mov
mov
pop
ja
loop
mov
xchg
mov
ret
hlt
sub
mov
xor
pushw
mov
test
mov
ret
cmp
add
mov
mov
sub
pop
insl
xchg
mov
jne
mov
xchg
inc
jg
idivl
push
aad
rolb
mov
insb
outsb
mov
sbb
xchg
popf
cs
mov
xor
lods
xorl
add
sub
mov
sbb
jae
xor
stos
js
mov
mov
data16
add
cmp
add
jne
inc
xchg
cmpsb
push
hlt
out
and
mov
mov
inc
es
pushf
test
jns
mov
mov
pop
and
push
inc
dec
fidivs
add
test
pop
push
rolb
mov
insb
mov
movsb
out
mov
cwtl
push
inc
pop
sub
mov
xchg
inc
add
mov
or
aas
addl
mov
add
out
add
add
aam
sbb
into
icebp
add
scas
popa
push
adc
mov
lcall
add
lcall
mov
sub
xchg
push
sbb
fdiv
sbb
xor
jnp
call
aas
repz
mov
and
mov
je
rcrl
add
jecxz
add
in
inc
add
pop
adc
add
jo
mov
cwtl
inc
movsl
sub
mov
add
add
or
pop
pop
cltd
inc
add
sbb
pop
adc
xchg
inc
adc
mov
pop
pop
jecxz
dec
sub
in
add
rolb
mov
pusha
add
rolb
mov
mov
adc
dec
out
dec
mov
rolb
mov
add
mov
lret
jle
dec
cld
inc
jns
xchg
pop
lret
addb
repnz
inc
jne
test
push
add
mov
sub
add
lods
inc
dec
xchg
push
pop
repz
pop
pop
xor
jns
add
cmp
xor
mov
sub
mov
inc
ret
mov
inc
add
popa
lods
mov
imul
dec
dec
and
mov
dec
ret
dec
stos
les
mov
mov
lret
icebp
jg
mov
ret
mov
mov
shll
mov
repnz
mov
dec
cmp
jg
pop
xor
repnz
mov
cltd
inc
jp
out
popf
mov
lods
sahf
and
add
add
loopne
mov
stos
inc
mov
mov
add
scas
and
mov
mov
and
pop
shll
out
xchg
mov
shrl
stos
mov
in
das
cmp
mov
mov
ret
xchg
rcr
gs
mov
leave
and
add
fstl
mov
sti
std
outsb
or
cmpsb
xchg
push
mov
mov
gs
aaa
out
cmpsl
dec
sti
dec
dec
dec
push
mov
mov
xor
add
nop
add
fstp
fsubrp
fildll
jecxz
pop
xchg
add
push
fucom
loop
mov
jl
jo
mov
cmp
add
notb
add
loop
mov
inc
add
sbb
cmp
mov
pop
push
addr16
xchg
ljmp
aas
ret
jns
in
rolb
pop
mov
pop
push
mov
inc
ja
jb
mov
push
add
icebp
inc
ja
mov
iret
mov
jge
repz
lret
cmpsb
aas
mov
jge
mov
cwtl
cld
nop
add
sbb
sub
in
sbb
jp
xlat
test
add
add
mov
mov
dec
popa
mov
ret
lahf
movsl
pop
jo
mov
mov
inc
add
mov
mov
call
xadd
xchg
sbb
add
mov
imul
mov
lahf
mov
pushw
lds
mov
std
out
cltd
mov
add
stos
bound
mov
aas
scas
lds
add
mov
cmp
cwtl
mov
mov
mov
out
aaa
push
xchg
and
add
mov
cmp
ds
inc
scas
add
test
push
add
mov
mov
mov
sbb
push
jecxz
imul
rolb
mov
mov
xor
idivb
sub
mov
enter
adc
mov
push
popf
sbb
sbb
adc
mov
cmp
dec
or
add
test
adc
mov
add
jae
sti
cli
mov
inc
ds
or
mov
push
add
lahf
mov
mov
sub
mov
or
jge
add
mov
stc
or
adc
mov
add
jno
xchg
xlat
movsl
xchg
add
mov
add
loop
mov
fdivs
out
clc
pop
xchg
std
mov
stos
and
pop
add
mov
add
mov
mov
pop
mov
pop
inc
dec
inc
add
jmp
cmp
popf
mov
mov
mov
mov
loop
mov
cs
ret
arpl
add
mov
mov
adc
inc
add
roll
xor
mov
push
int3
lret
sub
insl
sub
outsb
xor
or
fnstenv
push
add
test
icebp
and
xchg
cs
mov
pop
mov
add
push
add
mov
mov
pop
addb
sub
inc
loope
std
movsb
lds
ret
ficomps
mov
stc
and
mov
mov
xchg
cmp
or
add
fsubrl
dec
lock
rolb
mov
outsb
add
mov
leave
lret
mov
mov
arpl
rolb
mov
pop
pushf
inc
fnstenv
aas
stos
mov
add
loop
mov
pop
std
fs
mov
inc
mov
cmp
add
inc
test
ds
add
adc
mov
add
icebp
aaa
inc
addb
cmp
add
mov
jmp
mov
add
push
push
imul
fnstenv
roll
and
pop
lds
mov
sub
mov
popa
jle
inc
addb
jg
hlt
add
mov
add
jmp
cmp
aam
inc
rolb
mov
add
jmp
dec
cmp
adc
push
fisubrl
mov
mov
lock
shll
orl
rolb
mov
js
inc
cmpsl
sbb
add
fs
add
mov
cmp
add
aas
outsb
sbb
jl
push
inc
cmpsb
in
add
xchg
mov
jl
imulb
add
mov
jg
add
cmpsl
popf
mov
imul
add
in
jle
mov
lcall
push
mov
jg
xchg
push
in
sub
add
dec
fisubrs
or
xor
jle
movsb
cmpsl
inc
mov
sti
inc
xchg
add
rolb
mov
add
add
xchg
adc
subl
dec
aad
lods
ljmp
stos
xor
mov
scas
push
add
out
pop
je
cmp
push
std
jecxz
jmp
sub
pop
pusha
add
mov
sbb
out
add
addl
ret
adc
mov
add
sti
sub
das
xchg
pop
sahf
jge
test
push
xor
mov
sbb
pop
pop
int
mov
movsb
push
add
mov
scas
push
sub
sub
test
imul
mov
mov
pushf
add
mov
test
mov
sub
add
lods
cmc
popf
cmpsl
fistl
rolb
xchg
mov
lods
adc
mov
mov
enter
add
icebp
pop
int3
ret
sahf
addb
inc
ss
add
fcompl
nop
add
out
mov
adc
lods
adc
push
outsb
inc
add
pop
lcall
jnp
test
mov
mov
ljmp
cmpsb
dec
fistpl
insl
fldcw
xor
or
cli
jns
and
mov
add
pop
dec
push
imul
repz
cmp
mov
aam
sub
lds
add
inc
add
fmull
test
mov
dec
rolb
outsl
adc
add
mov
test
pop
mov
or
add
jns
add
insb
dec
js
les
insl
xchg
test
movsb
mov
ret
pushw
in
xchg
add
mov
add
mov
adc
mov
jp
lock
dec
lcall
dec
into
inc
orl
adc
mov
out
sbb
mov
mov
in
shr
and
mov
ds
repnz
xchg
push
aas
xchg
out
rolb
mov
push
mov
pop
push
ljmp
roll
ds
leave
stos
aad
mov
and
push
pop
add
mov
push
add
jl
mov
add
cmpsl
cmpsl
cmp
jbe
rolb
mov
addl
jne
xchg
xor
mov
add
mov
adc
mov
push
push
and
je
push
mov
mov
les
add
and
sub
add
insl
jmp
out
in
je
mov
xor
mov
add
mov
add
cmc
scas
add
mov
into
mov
dec
pop
push
add
pop
aas
loopne
mov
push
jo
mov
pop
jns
or
js
mov
rolb
mov
or
mov
rolb
pushf
cld
movsb
pop
jl
add
push
jns
mov
lret
icebp
addb
mov
sti
js
test
xchg
add
test
push
xchg
inc
mov
fsubl
add
mov
add
add
pop
jnp
add
add
sbb
mov
add
cmp
push
pop
jb
mov
decl
fdivr
cmp
lcall
dec
xor
mov
dec
sub
add
pusha
add
ljmp
xchg
imul
push
fldcw
mov
jae
xchg
out
cli
pop
adc
mov
sti
rcl
or
adc
scas
insl
xor
sahf
push
dec
push
aad
stos
into
fldl
add
mov
add
test
std
mov
mov
xchg
jo
mov
lods
lret
inc
adc
mov
add
test
aas
rolb
mov
cwtl
dec
xchg
jb
mov
clc
xchg
push
rolb
mov
cmc
push
add
imul
and
mov
out
pop
add
pop
pop
ljmp
jo
mov
add
cmp
je
fs
rcll
add
iret
pop
lcall
mov
fisubrl
mov
add
cs
push
or
mov
push
add
mov
add
fnstsw
ja
mov
add
mov
outsl
scas
dec
sbb
stos
movsl
test
in
sti
popa
js
pop
pop
add
mov
mov
fmuls
lds
ljmp
negl
mov
jp
add
mov
popf
sbb
test
scas
sbb
add
add
mov
add
mov
aas
in
mov
addb
in
push
fwait
sti
fiaddl
ljmp
les
xchg
add
loope
jbe
dec
push
xchg
imulb
adc
pop
or
inc
add
dec
int
add
out
cmpsl
stos
test
push
add
xchg
ljmp
mov
xchg
mov
cmp
add
insl
jmp
fs
adc
inc
pop
adc
clc
xchg
fiaddl
dec
icebp
inc
ret
xor
mov
lds
sub
into
add
push
mov
xchg
pop
sbb
mov
in
mov
cs
cmp
sbb
mov
cmp
aas
xchg
mov
sub
int
clc
dec
lock
add
data16
mov
into
lcall
insb
mov
mov
push
add
lret
out
xor
mov
fcomps
mov
pusha
add
fst
cltd
mov
mov
in
push
cmp
add
cmp
out
push
add
repnz
movsl
mov
add
loop
mov
pop
add
dec
push
add
insb
ljmp
add
mov
cmp
mov
mov
xchg
xchg
and
sub
cmpsl
movsb
xor
hlt
daa
sbb
pop
out
iret
daa
nop
add
and
addr16
add
mov
outsb
cmpsl
xchg
in
rolb
mov
mov
mov
add
mov
xchg
lods
xchg
jo
mov
pop
aam
add
adc
jmp
jae
mov
pushf
ss
push
movsb
hlt
cmp
mov
mov
scas
push
add
push
bound
mov
or
add
pop
aas
filds
mov
mov
mov
flds
add
add
ret
arpl
add
push
mov
repnz
add
outsl
jmp
pop
lret
sti
jl
inc
add
sbb
call
pop
xchg
jo
mov
dec
popf
sub
add
add
jne
scas
mov
pusha
add
pop
sub
test
fsubl
mov
repz
mov
and
mov
mov
mov
outsl
cmp
ja
test
add
push
xor
into
je
test
push
add
fxch
rcll
add
mov
pusha
add
add
sub
into
iret
inc
xorl
lock
imul
mov
iret
popa
push
mov
mov
es
inc
add
push
mov
add
mov
fiadds
add
add
outsl
mov
jmp
xor
mov
icebp
lea
popf
into
xor
mov
mov
sti
pop
pop
pop
ss
mov
add
push
add
lea
xchg
idivb
scas
fldenv
pop
in
aam
cmp
push
shll
lahf
in
xchg
add
add
jecxz
pusha
add
es
cmp
aad
idivl
push
stos
pop
hlt
jge
loop
mov
insl
scas
lret
mov
movsl
in
jno
add
mov
add
jp
xlat
inc
fstl
adc
ret
dec
xor
adc
mov
mov
test
mov
xchg
jno
add
adc
test
inc
outsl
cld
and
mov
pushf
jns
mov
cmp
stc
mov
cld
fcoms
and
mov
or
cwtl
or
cmp
xchg
pop
mull
push
ds
add
cmp
pop
aas
cmp
push
sbb
add
mov
jg
mov
mov
setp
push
cmp
loopne
mov
sti
mov
or
mov
xlat
sarl
inc
loope
add
add
and
mov
xor
mov
add
mov
fst
sbb
ljmp
pop
adc
mov
sub
popa
fs
add
mov
add
add
mov
and
iret
pusha
add
negl
cltd
sahf
std
jp
call
add
cmp
mov
dec
out
stc
iret
cmp
sbb
sbb
in
inc
fxch
shl
int
add
stc
xor
add
mov
je
loopne
mov
or
fstps
dec
sub
arpl
mov
in
das
push
orl
addb
xchg
add
aad
scas
push
pop
and
pushf
loope
sbb
cli
inc
inc
scas
dec
ret
cmp
mov
push
mov
inc
pushf
xor
mov
or
add
mov
mov
xor
mov
or
fs
mov
mov
mov
xlat
mov
add
cli
ret
sbb
add
mov
mov
dec
jne
shrl
and
fwait
cmp
adc
dec
ja
ja
insl
push
imul
mov
mov
mov
inc
inc
sahf
outsb
or
cwtl
xlat
cmpsb
ja
or
lea
in
add
or
aaa
adc
in
push
rcrl
scas
cmp
mov
sub
aad
jge
mov
mov
mov
push
xchg
add
xlat
or
mov
sbb
adc
mov
add
dec
lcall
or
cmp
ret
frstor
out
jmp
je
add
ja
aam
addr16
cmp
add
popa
testl
cltd
push
insl
cmpsl
dec
lds
repnz
cmp
pop
das
sub
push
add
mov
xor
mov
add
lea
push
and
jecxz
popa
cwtl
push
loopne
mov
pop
inc
or
mov
inc
add
test
add
add
les
popa
or
pop
xchg
cmp
pusha
add
and
sub
cmc
insl
inc
push
push
mov
insl
pop
sti
and
mov
inc
aas
mov
add
dec
mov
pop
shl
jle
inc
add
add
rcll
cmp
add
mov
or
pop
adc
mov
mov
insl
push
jl
jecxz
add
mov
pop
ret
push
sti
lret
add
adc
mov
jae
add
repnz
mov
add
call
mov
push
test
rolb
mov
cmp
int3
cs
imul
add
in
out
imul
add
pop
inc
gs
jg
iret
or
add
scas
inc
jmp
out
dec
or
add
mov
add
dec
cbtw
addb
xchg
scas
fst
add
repnz
dec
in
pop
dec
xchg
fcoml
mov
add
add
mov
xor
addb
and
mov
add
loop
mov
jne
dec
pop
mov
cs
mov
test
dec
ret
test
sub
push
xchg
pop
lsl
sub
push
jne
sbb
mov
int
sbb
adc
add
add
and
add
add
jnp
xor
mov
add
add
mov
cld
mov
xchg
add
mov
stc
xchg
in
movsb
dec
mov
mov
or
in
cmp
cmpsb
dec
aam
add
je
xchg
int
add
jg
ret
out
jae
sub
mov
mov
push
pop
bound
mov
stos
insl
adc
add
inc
add
add
ds
mov
rolb
mov
pmaxub
mov
std
push
mov
fiaddl
mov
add
mov
fs
mov
add
and
mov
push
cmp
xchg
jne
mov
js
jp
and
mov
mov
or
sbb
sub
mov
stos
xor
sub
stc
movsb
add
fcomp
dec
in
jns
repnz
add
lret
cltd
std
shll
add
into
aas
cmpsl
push
mov
mov
addb
jb
mov
dec
out
pop
mov
daa
add
mov
add
mov
or
adc
leave
lcall
mov
add
lcall
xor
sbb
or
fwait
add
mov
pop
mov
stos
xchg
xor
pop
sbb
add
out
repz
xchg
mov
out
movsl
test
add
push
pushf
push
jo
mov
and
iret
inc
movsl
lock
mulb
mov
mov
add
icebp
push
jns
xchg
add
lea
push
subl
add
jae
pop
cmp
add
add
xchg
lock
mov
repnz
mov
iret
ret
sahf
in
or
mov
mov
cltd
xor
lret
rolb
xor
add
sti
push
mov
and
mulb
ficoml
shrl
enter
mov
and
les
mov
jb
mov
enter
xchg
add
lret
mov
xchg
add
sbb
mov
add
mov
mov
mov
push
push
lds
loop
mov
mov
lcall
xor
mov
add
add
xor
mov
cmc
and
cmc
xchg
adc
jle
sub
xor
mov
mov
jg
or
loop
mov
xor
xchg
dec
pop
xor
mov
ds
sahf
hlt
inc
push
sahf
and
and
into
mov
xchg
cmpsl
add
add
push
aaa
sub
add
mov
or
mov
xchg
dec
adc
je
pop
fcoms
jne
add
or
add
mov
cld
aam
xchg
pop
mov
and
pusha
add
ljmp
mov
dec
jnp
aam
sub
hlt
lods
lods
sub
sti
gs
push
add
cmp
fisubl
xor
mov
add
outsb
xchg
add
imul
cmp
xor
add
add
and
cmp
jecxz
add
lods
rolb
mov
dec
ds
and
mov
mov
fstl
fdivrl
lahf
inc
icebp
and
sbb
cvttps2pi
pop
testb
jne
add
pushf
clc
jg
add
pop
sub
push
add
clc
fists
mov
mov
scas
movsb
fdivl
sbb
jmp
add
inc
fcmovnu
jae
test
lock
jmp
xchg
std
fucomip
inc
add
popa
stos
cli
stos
sbb
test
mov
int3
pushf
xchg
neg
xor
adc
mov
add
mov
scas
jmp
mov
push
mov
mov
dec
push
add
add
push
jg
repnz
pop
arpl
testb
lods
std
daa
addb
mov
mov
sub
rolb
mov
add
mulb
mov
cmc
aam
add
les
adcl
in
jnp
push
and
repnz
cmp
arpl
rolb
mov
pop
jle
add
dec
push
addb
shl
fnsave
imul
add
sbb
jno
dec
or
add
icebp
jns
fs
mov
cltd
fs
add
pushf
loopne
mov
mov
out
es
xor
xchg
iret
xchg
and
add
sub
je
inc
add
mov
mov
mov
int
jmp
aaa
mov
das
or
dec
push
add
push
add
add
mov
mov
add
mov
or
add
mov
add
mov
rolb
mov
mov
lods
fbstp
inc
mov
sbb
and
mov
cmp
outsl
add
mov
or
insl
bound
mov
jae
loopne
mov
sahf
addb
sbb
lret
rolb
bound
mov
or
or
call
loopne
mov
addr16
push
loopne
mov
outsl
xor
jbe
in
loope
inc
fisttpl
mov
add
sub
shrl
mov
out
roll
cmp
mov
push
add
rolb
mov
mov
cltd
mov
rolb
mov
pop
push
lea
and
jp
jg
lret
mov
mov
outsl
sub
mov
iret
mov
decl
adc
mov
add
adc
stos
rolb
pusha
add
lods
out
and
mov
add
mov
ficoml
and
mov
mov
mov
jl
sub
xchg
movsl
in
mov
pop
test
add
mov
lods
dec
xchg
add
mov
enter
in
cmpsl
xchg
add
pop
lds
or
add
scas
inc
add
rolb
mov
adc
dec
push
add
pop
or
shrl
std
hlt
stc
inc
and
das
out
push
fcomi
cmp
add
mov
mov
addb
insl
mov
and
mov
addr16
xor
mov
add
xchg
mov
mov
rolb
mov
mov
and
xchg
cmp
outsb
jl
int3
inc
stos
sub
aam
out
loope
pop
mov
jle
lahf
gs
jg
xchg
add
push
xchg
mov
ret
pop
cmp
mov
fwait
or
cmpsb
pushf
xor
mov
cmpsb
jne
jns
xchg
mov
mov
fcomi
add
mov
mov
sti
adc
mov
add
adc
mov
shll
clc
ret
xchg
sti
mov
addb
dec
lock
add
mov
lea
pop
test
mov
dec
in
pop
aam
jge
movsl
cltd
pop
pop
lds
imul
idivl
test
fcoms
xchg
mov
mov
cmpsb
mov
add
xor
mov
out
lds
add
rolb
mov
addr16
fcomps
sub
add
and
pop
insl
sbb
in
mov
mov
mov
xchg
mov
mov
inc
mov
push
dec
push
mov
add
dec
out
add
mov
push
test
add
jg
mov
mov
sub
std
mov
pop
cmc
repz
bound
mov
add
pop
mov
mov
mov
mov
add
mov
pop
cmpsl
shrl
inc
add
pusha
add
mov
xchg
pushf
outsl
pop
inc
add
push
iret
leave
cmpsl
aas
and
push
jnp
add
mov
out
bound
mov
sub
lods
loop
mov
call
mov
dec
test
mov
frstor
ds
add
push
xchg
jmp
mov
mov
dec
lea
mov
movsb
mov
or
add
sti
mov
loope
in
das
iret
loop
mov
add
sahf
mov
cs
xchg
add
andl
pop
cmpsb
insl
insl
dec
int
jb
mov
rcll
fsts
sub
lea
repz
adc
add
in
addb
xchg
add
dec
jnp
adc
mov
mulb
add
mov
lret
fldenv
dec
iret
ljmp
mov
mov
mov
mov
pop
iret
es
ja
add
fstps
test
daa
jns
mov
adc
mov
jns
in
test
mov
ret
mov
outsb
cmp
mov
mov
add
xchg
pop
sub
daa
sti
es
jl
call
mov
movsl
insb
inc
inc
xor
roll
mov
xor
mov
shll
insb
pop
fistl
pop
rorl
aas
notb
ret
lds
xor
mov
dec
stos
fnstcw
std
mov
cmp
add
pop
lcall
or
mov
xchg
cld
cmpsl
sahf
cmp
inc
cmp
push
push
pop
rolb
mov
mov
sbb
in
or
add
test
pop
nopl
ret
inc
inc
mov
icebp
and
mov
cli
jp
add
insl
cld
push
stc
sbb
or
pop
pop
pushfw
loop
mov
add
add
add
iret
mov
aas
push
jns
in
xchg
mov
mov
mov
add
xchg
dec
mov
insb
push
add
inc
add
sub
mov
pop
jne
sbb
or
add
fdivrp
pop
mov
icebp
mov
dec
pop
push
mov
dec
mov
imul
inc
add
sub
cmp
sti
mov
add
inc
repz
push
sub
fmuls
sub
xchg
and
add
addb
add
bound
mov
lea
xorl
pop
movsb
mov
jg
cmp
inc
add
and
mov
mov
mov
out
sbb
add
lahf
inc
mov
push
lock
or
mov
insb
push
add
add
loope
in
fdivs
adc
mov
aam
mov
or
hlt
pop
std
dec
cmpsl
ret
mov
repz
sbb
xor
mov
mov
push
out
push
xchg
jmp
sti
rolb
add
mov
pop
inc
add
push
repz
mov
sbb
scas
addb
iret
cmpsb
and
lret
addb
and
or
pop
push
pop
rolb
mov
insb
out
add
mov
fisttpll
mov
mov
in
lock
mov
xor
mov
aam
adc
mov
lahf
fildl
xlat
lahf
or
pusha
add
xor
inc
loop
mov
hlt
out
fisubrl
add
mov
cmp
mov
aad
or
add
lret
push
add
push
add
mov
add
add
mov
es
in
aad
sbb
dec
stos
inc
add
or
pop
in
mov
mov
xchg
lods
jle
and
or
or
dec
es
add
lea
jo
mov
xor
sarl
add
mov
ret
add
cld
inc
add
xchg
daa
and
add
xchg
loopne
mov
rolb
mov
xor
lret
xor
mov
or
push
add
mov
pop
cld
jmp
lods
cmc
dec
add
or
ret
in
add
mov
adc
mov
add
adc
fsubr
loope
add
mov
add
out
and
dec
scas
and
mov
rolb
mov
lods
aam
daa
or
imul
add
js
movsb
sub
mov
mov
jge
jmp
sub
mov
push
lret
cli
movsb
xor
add
xchg
fmuls
jb,pn
mov
movsb
movsb
push
sub
pop
xchg
add
test
negb
cmp
stos
mov
sbb
addl
dec
jge
add
add
jecxz
dec
pop
or
in
aas
aas
and
mov
add
std
es
test
aad
hlt
test
cli
lods
stos
push
inc
inc
and
or
icebp
sahf
or
insl
cmp
mov
fcos
scas
or
inc
xor
mov
push
add
fisttpll
pop
fnstenv
mov
rolb
mov
push
popf
mov
je
lods
dec
out
and
lods
pop
push
jne
xor
call
aas
adc
call
cmp
add
pop
mov
push
jae
sub
add
je
xchg
jnp
imul
lock
fbld
xchg
add
mov
out
outsb
lock
arpl
dec
cmc
xor
mov
inc
add
mov
icebp
rolb
mov
repz
je
mov
dec
adc
mov
js
mov
or
xchg
xor
mov
add
rolb
mov
or
in
mov
add
insb
pusha
add
mov
rolb
mov
jae
mov
out
jnp
sub
jl
in
pushf
loop
mov
xor
add
call
addb
or
xor
add
pop
xchg
add
dec
cs
cwtl
or
xor
sub
sbb
repnz
scas
mov
mov
mov
or
xor
mov
cmp
mov
push
xor
add
outsl
lods
jbe
xchg
mov
cmp
data16
cmp
mov
mov
enter
add
dec
dec
adc
mov
mov
cmpsb
addb
daa
push
add
repnz
icebp
lea
psadbw
popf
lds
mov
mov
test
add
cld
push
cltd
jo
mov
mov
push
mov
in
pop
cmc
cmpsl
and
push
mov
mov
or
ret
inc
lds
pop
xchg
popf
scas
add
add
rolb
mov
adc
mov
rcrl
xor
mov
push
lods
sub
lret
mov
xchg
add
jne
mov
outsb
je
pop
fisttpll
add
inc
xor
pop
fwait
add
mov
push
in
xchg
aad
scas
mov
enter
stc
jmp
pop
repnz
mov
and
mov
push
dec
repz
pop
fisubrs
mov
sub
and
add
mov
pop
into
aaa
mov
jo
mov
pushf
add
mov
out
mov
dec
or
add
sbb
xchg
mov
addb
scas
insb
adc
mov
xchg
pop
pop
je
mov
cmp
push
xchg
xchg
aad
add
xor
mov
xlat
mov
dec
lock
add
cmp
gs
mov
cs
add
cwtl
mov
xor
sub
jl
pushf
mov
js
or
inc
add
gs
lods
dec
push
jb
mov
mov
shll
dec
and
add
cmpsb
mov
std
mov
in
jbe
or
pop
fldenv
fldl
xchg
lcall
cmpsb
xchg
push
dec
pcmpgtb
cmp
push
mov
xor
aam
add
add
cmp
xchg
push
movsl
or
add
sub
cmp
sub
pop
imul
mov
or
jle
cltd
mov
jnp
and
push
popa
fs
leave
xchg
out
add
dec
repz
jbe
sbb
mov
rep
or
sub
fnstenv
pop
lret
in
inc
rolb
xchg
lds
int3
jns
rol
push
jnp
mov
add
rolb
jg
cmp
jnp
xor
add
sub
mov
jne
lods
or
mov
pop
push
out
movsl
inc
sub
decb
inc
cmpsb
cmp
add
test
fsub
add
imul
mov
pop
cli
mov
add
mov
xchg
loope
or
mov
ret
and
or
push
push
out
inc
add
popa
push
add
mov
push
add
mov
jp
mov
or
mov
jp
stc
enter
mov
add
decb
or
lret
xchg
add
cli
in
movsl
sub
pop
ficoml
and
aam
sub
lret
and
dec
dec
sub
add
xor
mov
add
loopne
mov
imull
jmp
call
int3
imul
add
mov
mov
test
addb
push
int3
pop
inc
aas
rorl
insb
out
popf
je
mov
cmp
lret
cmp
add
mov
mov
sub
psrlw
jle
add
add
ret
and
mov
leave
mov
dec
int3
sbb
cs
mov
xor
jle
push
xlat
xor
push
decb
mov
mov
or
fsubrs
mov
mov
in
sbb
mov
add
add
cmpsb
ja
sub
xchg
arpl
stos
jbe
pop
mov
fcmove
jge
sti
wbinvd
push
mov
mov
addb
and
nop
add
dec
mov
pop
mov
lea
add
add
xchg
addb
or
leave
cmc
js
add
stos
std
and
mov
add
ja
xchg
xchg
xchg
add
je
lods
sub
fwait
repz
cmp
mov
mov
mov
cmc
adc
add
movsl
pop
adc
mov
lods
sub
pop
jmp
mov
and
mov
movsl
movsl
inc
decb
fwait
cld
scas
cltd
das
jae
mov
add
xchg
test
int
add
mov
mov
mov
or
outsl
mov
add
rolb
js
jmp
push
mov
xchg
and
movsl
pop
mov
xor
mov
and
mov
in
mov
icebp
adc
or
cmc
sbb
pop
xlat
mov
mov
jbe
cmc
pop
push
add
inc
xlat
cld
sub
fcoms
scas
fistpl
mov
mov
loopne
mov
add
jno
fldenv
mov
cmp
add
xchg
mov
daa
cmpsb
adc
mov
sub
jb
mov
jp
add
inc
add
pop
dec
or
ret
add
mov
mov
cwtl
adc
rcl
fs
movsb
add
mov
lret
daa
lcall
or
stos
test
movnti
add
into
js
mov
mov
mov
popa
jge
push
mov
ljmp
cmp
lea
xor
and
mov
cmpsl
inc
mov
jne
inc
and
mov
in
ja
jp
xchg
aas
adc
fldt
orl
mov
leave
xchg
mov
mov
add
add
