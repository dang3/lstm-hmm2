xchg
cmpsb
loopne
push
add
cmp
mov
les
add
lret
stos
lret
or
sub
stos
int
add
es
xor
lds
mov
lret
incl
mov
mov
push
mov
dec
or
out
sbb
iret
icebp
xchg
add
jns
mov
add
add
mov
insb
mov
stos
push
jle
add
sbb
xchg
add
add
add
js
dec
je
aaa
dec
dec
mov
into
xor
jp
adc
add
jnp
add
out
dec
popf
clc
pusha
add
add
icebp
add
mov
mov
push
add
pop
mov
add
and
adc
push
adc
mov
test
stc
pop
rolb
shll
pop
ds
aaa
push
push
add
das
jns
add
ret
add
movsl
in
push
add
insl
sbb
or
ret
dec
jmp
mov
adc
xor
xor
aam
jns
jae
repz
mov
fcoml
ficomps
loope
add
add
lret
sub
add
pop
add
mov
sbb
ja
add
push
add
cmp
add
sbb
mov
xchg
and
lods
cmc
hlt
add
mov
add
add
sahf
movb
jno
dec
xchg
add
mov
or
add
jae
xchg
mov
sub
rolb
xchg
call
mov
leave
das
mov
add
test
popa
xchg
add
add
mov
sub
add
aaa
movb
add
add
lahf
jp
repnz
add
add
sbb
mov
add
add
pushf
mov
and
jle
jcxz
or
sbb
aas
pop
insb
sub
out
inc
testb
adc
lods
arpl
cmp
jg
mov
jae
icebp
pop
push
add
add
mov
add
in
mov
push
add
test
mov
out
inc
add
add
dec
and
sbb
jl
inc
lcall
jmp
sbb
add
mov
add
cmp
pusha
add
add
push
add
fsubrl
mov
adc
jno
jnp
inc
rolb
fwait
mov
mov
jge
push
add
aaa
mov
sub
out
adc
mov
fimull
push
add
dec
and
enter
add
ds
cmp
jge
stos
testb
adc
jae
push
fucomi
cmp
int3
lahf
pusha
add
push
test
xchg
sub
cmp
mov
pusha
add
out
and
mov
mov
pop
xor
adc
jae
test
mov
stos
mov
add
pusha
add
xchg
incb
addr16
inc
add
jb
ret
add
repnz
dec
mov
cmpsb
add
add
inc
test
imul
jns
addb
push
jle
outsb
xor
cmp
mov
sub
pop
loop
cmp
mov
mov
lea
add
cli
add
test
add
xor
lds
jle
add
add
and
mov
scas
pop
mov
inc
insl
jecxz
mov
testb
cmp
add
movsl
movb
add
add
adc
sahf
cmp
dec
hlt
add
cmp
add
sub
push
orl
push
jae
add
xchg
inc
aas
xchg
xor
xchg
add
ds
pop
cltd
out
mov
cmp
add
xor
xchg
mov
cmp
add
addb
pop
ret
add
cld
iret
aad
add
lods
jo
xor
add
testb
add
cmp
add
and
inc
add
in
aaa
dec
aad
sub
add
mov
cmp
mov
or
add
and
add
and
mov
add
cmp
das
adc
push
mov
arpl
mov
push
scas
inc
xchg
fnstcw
repnz
push
add
les
or
lret
movsl
mov
jae
inc
add
mov
gs
add
push
add
dec
mov
pop
jmp
add
pop
pop
xor
dec
icebp
popf
sbb
add
lret
lods
add
add
out
inc
or
add
add
test
mov
xor
xchg
push
mov
add
add
add
mov
scas
nop
add
sub
mov
imul
les
inc
add
and
xlat
add
outsl
xchg
lds
aas
repnz
push
add
icebp
inc
add
add
lea
repnz
data16
add
les
pop
lds
sub
inc
add
add
mov
js
popf
pop
inc
shll
das
inc
add
jne
pop
sbb
test
je
push
das
std
repnz
sbb
sbb
addb
add
add
popf
std
add
negl
sbb
mov
leave
jge
fcomps
add
iret
pop
roll
jmp
mov
push
jns
adc
push
add
add
cmp
inc
fbstp
rolb
xor
cmp
bound
mov
cmpsl
push
add
add
cmpsb
add
or
mov
fdivs
inc
add
push
or
add
int
add
add
fidivrs
mov
dec
pusha
add
add
or
push
mov
add
mov
add
add
jp
add
loopne
jo
cmp
sbb
add
dec
cmpsb
add
mov
mov
pop
stos
test
add
xchg
mov
cmpsb
add
mov
sub
cmpps
add
pop
mov
dec
stos
js
adc
xor
scas
add
mov
decb
inc
lods
loop
jecxz
leave
call
jle
jmp
sub
dec
xchg
add
mov
mov
mov
mov
xor
and
sbb
enter
shll
xlat
xlat
bound
mov
xor
imul
xor
or
pop
dec
ja
push
movsb
add
add
xchg
pusha
add
cmpsl
jb
in
andl
or
les
addr16
repnz
xor
js
add
xchg
das
lahf
cli
enter
cli
pop
addb
add
xor
sarl
lock
add
sbb
rcl
xor
and
mov
jp
jno
or
and
add
iret
inc
clc
jne
rcll
call
cmp
cmp
jae
mov
and
sbb
xlat
in
arpl
outsb
xor
dec
cld
jb
pushf
hlt
add
sub
add
jns
ds
jp
push
or
aam
and
add
mov
fidivl
sbb
in
cltd
movsl
fistpl
cltd
clc
jecxz
sbb
cltd
inc
add
mov
add
push
fdiv
lods
mov
into
std
testb
fistpl
nop
add
pop
sbb
das
mov
fildl
add
mov
out
mov
aaa
js
bound
mov
mov
jmp
outsb
jne
sbb
jo
insb
fildll
rolb
mov
mov
add
mov
adc
mov
add
mov
mov
mov
add
add
gs
add
test
add
add
mov
add
fdivl
mov
inc
mov
mov
add
add
mov
arpl
test
xor
push
add
fnstenv
add
ret
cmp
add
sub
cmc
lcall
rolb
repnz
dec
mov
nop
add
data16
mov
add
add
add
pop
push
into
movb
add
fwait
mov
ret
xchg
or
imull
cmp
in
xor
adc
add
dec
addb
inc
jmp
pop
xchg
add
les
mov
scas
imul
int3
mov
sti
imul
add
mov
add
mov
mov
add
mov
sahf
inc
add
add
adc
repz
mov
add
and
outsl
out
add
add
add
or
add
add
mov
arpl
cwtl
movb
mov
inc
dec
mov
mov
adc
jae
mov
sbb
add
lcall
add
sbb
mov
rolb
pop
outsl
movsl
push
add
test
repnz
sbb
add
xlat
sbb
loope
lods
add
add
add
push
add
rolb
lods
popa
xchg
rolb
aad
jmp
xchg
repz
add
add
mov
add
popa
mov
cmp
adc
lods
clc
mov
lret
outsb
gs
pop
pop
cs
add
add
sub
add
mov
mov
pop
addb
je
dec
inc
add
push
adc
jne
jecxz
mov
mov
xchg
add
jge
mov
fyl2x
dec
out
ret
mov
mov
into
and
push
add
add
inc
lods
push
add
add
push
addb
out
lret
rolb
xor
add
add
add
aaa
jle
out
fisttpll
mov
or
add
add
add
mov
jg
daa
jb
movsl
dec
js
repz
add
outsl
sub
test
mov
mov
cwtl
dec
and
or
cmpsl
pushf
iret
out
adc
sub
add
push
jb
lahf
xchg
xchg
push
add
mov
add
add
xchg
add
add
hlt
add
add
add
lret
or
add
add
add
imul
add
xor
les
arpl
add
xchg
call
icebp
xchg
pop
dec
xor
das
jae
push
stos
jnp
fisubrl
repnz
add
add
jnp
test
add
jmp
add
pop
mov
add
cmpsl
jg
add
sbb
mov
fmuls
stos
out
out
pushf
and
mov
add
add
add
add
push
bound
mov
mov
add
popa
pop
or
int3
xor
or
es
add
mov
add
sub
addb
sbb
jne
jae
daa
ret
addb
adc
mov
iret
inc
add
cwtl
xchg
add
mov
and
mov
insb
mov
add
mov
popa
mov
add
jmp
add
cmp
inc
add
add
jnp
sbb
out
in
movsb
add
das
jne
add
lods
xchg
pop
pop
xchg
add
outsl
push
add
add
loopne
pushf
mov
dec
inc
add
or
push
imul
mov
add
push
add
add
xlat
xor
xchg
mov
or
add
add
or
add
data16
fwait
or
push
pop
jmp
sti
and
test
repnz
sbb
xchg
xor
addb
add
add
add
mov
add
js
add
jbe
testl
lret
icebp
adc
sub
add
cmp
mov
mov
pop
int3
xchg
mov
jp
lcall
add
rolb
sbb
mov
repnz
rolb
pusha
add
xor
mov
mov
clc
je
pop
loop
fistpl
mov
pop
rolb
add
push
jbe
xchg
cmp
mov
sbb
adc
pop
das
sub
pop
push
add
and
mov
mov
add
add
dec
inc
add
mov
das
dec
sub
stos
ret
andps
sahf
mov
add
fcoms
add
add
cmp
nop
add
mov
insl
adc
pop
sbb
add
add
sbbl
inc
add
xchg
mov
fndisi(8087
add
cmpsb
add
mov
add
add
jns
add
add
jl
jle
sbb
sub
jns
enter
add
scas
mov
mov
pop
push
or
popa
jno
or
xor
cli
rolb
popa
bound
mov
add
inc
add
push
mov
push
movb
fimuls
rcll
add
add
dec
inc
add
das
addb
pop
adc
inc
add
stos
mov
add
imul
daa
sub
add
jle
dec
mov
movb
xchg
add
add
imul
mov
push
add
add
xchg
adc
ljmp
pop
xchg
add
inc
scas
in
sub
add
jbe
stos
push
add
lock
mov
sub
cli
arpl
add
cmp
and
adc
out
or
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
push
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
enter
add
push
sahf
add
jno
test
outsl
decl
sub
sbb
mov
aaa
adc
push
add
add
adc
scas
cld
cltd
les
sahf
push
add
add
cwtl
repz
dec
in
testb
mov
bound
mov
add
xchg
add
lods
into
adc
cmc
stos
sahf
test
sti
adc
add
mov
insb
ja
add
pop
rolb
mov
add
and
pop
lods
mov
add
mov
or
test
mov
xchg
add
mov
xchg
sbb
pop
les
stos
lods
or
add
mov
mov
loop
dec
push
add
loope
add
add
rolb
sbb
mov
mov
add
xor
std
inc
add
add
add
jle
jle
add
jl
add
add
xchg
add
add
lea
js
mov
add
mov
imul
in
cmpsb
add
pop
xor
mov
loopne
les
out
out
ljmp
movsl
and
mov
adc
cmp
inc
repnz
cmc
pop
incb
add
mov
cmc
cmp
add
xchg
add
movb
test
add
and
xor
jb
lcall
add
das
mov
dec
jl
stc
inc
dec
loope
add
xchg
and
mov
cmp
add
mov
inc
stos
mov
pop
outsb
movsl
xchg
xor
scas
incl
add
add
or
iret
test
addb
mov
mov
mov
add
insl
pop
iret
inc
addb
pop
lahf
cmp
and
lahf
aaa
rorl
add
cmp
add
pusha
add
fisttpl
ds
add
mov
ficomps
loop
adc
jp
cmpl
in
stc
mov
adc
dec
pop
inc
add
pop
fmulp
or
cmp
add
add
popa
cmp
push
jmp
push
inc
add
mov
add
fdivr
jae
ja
aad
lahf
mov
and
enter
cwtl
pop
mov
mov
test
xchg
cmpsb
add
jo
inc
loope
fwait
add
cli
pop
mov
testb
das
push
das
adc
jl
add
add
outsl
or
arpl
mov
in
rep
mov
dec
xchg
mov
and
push
popf
and
mov
insb
jns
lock
pop
stos
push
add
add
add
aad
movsl
and
mov
xlat
mov
mov
add
ja
add
nop
add
mov
cmp
jae
daa
sub
pop
cmp
addb
xchg
aaa
mov
lea
mov
lock
dec
mov
sub
in
adc
add
mov
xor
lea
dec
mov
and
fidivl
push
add
fdiv
add
pop
ret
fwait
xchg
add
stos
sbbl
sbb
sbb
mov
cmp
jo
clc
data16
adc
mov
dec
add
mov
shll
aad
movsb
add
test
movsl
pop
adc
add
addr16
enter
lret
test
jge
pop
int
inc
subl
add
add
lret
adc
inc
sub
add
add
shrl
jno
add
mov
cld
test
mov
add
push
add
mov
lock
fildll
jl
or
push
add
add
add
push
push
add
add
jg
mov
aad
cs
sub
add
xor
inc
add
add
add
add
arpl
add
add
xchg
inc
mov
jbe
push
add
add
addb
testb
dec
pop
pop
outsl
jae
add
add
mov
cmp
testb
add
add
jo
push
add
ret
xor
daa
or
mov
sub
add
sahf
ja
ss
dec
push
add
scas
cld
test
dec
jo
xor
in
rolb
add
cmp
inc
jmp
inc
and
add
je
int3
mov
xor
add
add
jl
pop
pop
inc
call
pop
jle
sub
cmp
add
add
mov
or
mov
pop
sub
push
add
daa
xor
and
mov
mov
add
pop
mov
arpl
rolb
dec
push
je
adc
xlat
repnz
jp
movb
test
jmp
iret
sub
mov
cmp
mov
ss
out
cmpsb
add
xor
and
push
mov
jmp
scas
or
into
add
add
movsb
add
push
add
xchg
fdivrs
mov
cmp
xor
ss
dec
add
mov
pop
movsb
add
sub
testb
add
mov
inc
add
dec
or
data16
add
js
add
add
add
aad
xchg
mov
shrl
add
inc
data16
add
add
aaa
sbb
scas
ljmp
jl
clc
pop
xor
jo
mov
les
sub
test
sbb
mov
mov
add
ja
jmp
xchg
and
mov
enter
popf
cltd
adc
pop
out
mov
add
xchg
xchg
int3
mov
shrl
cmp
pop
cltd
sub
add
add
add
adc
push
add
pop
fstp
cwtl
mov
push
add
mov
add
andl
movsl
add
dec
outsl
dec
testb
add
nop
add
add
sahf
decl
adc
outsb
int
mov
setge
out
cli
sub
add
mov
pop
adc
jae
jno
add
add
pop
lea
les
addr16
insb
push
add
aas
cs
add
movsb
add
repnz
repnz
bound
mov
add
add
imul
adc
push
add
xchg
add
mov
add
add
loope
mov
xchg
add
add
mov
ret
hlt
add
out
add
sbb
add
add
sbb
xchg
add
add
and
adc
dec
xchg
xor
mov
xor
cmp
push
mov
pop
into
add
movaps
add
add
mov
mov
scas
ja
aaa
xchg
popf
or
and
mov
addr16
roll
addr16
add
enter
cmp
mov
int
push
mov
pop
inc
sbb
jmp
mov
aaa
pusha
add
add
in
lret
mov
clc
movb
rolb
push
push
xchg
mov
bound
mov
add
mov
pop
or
cmp
rolb
mov
ret
cmp
cmpsl
cmp
inc
add
lock
add
add
inc
and
mov
add
add
shll
gs
push
rolb
push
and
out
and
loope
decl
mov
mov
push
add
add
or
insl
mov
add
jmp
lcall
or
jl
dec
jb
or
adc
add
mov
lods
test
movsb
add
scas
hlt
add
add
jecxz
push
add
int
mov
sti
jae
dec
in
in
loopne
push
mov
add
mov
xchg
add
dec
js
jl
aam
movb
daa
fiaddl
dec
sub
add
lret
xor
in
pop
lock
pop
in
rolb
add
jp
out
mov
add
icebp
roll
cmp
sub
into
jmp
add
add
shll
ljmp
mov
fisubs
incl
out
cmpsl
sbb
daa
inc
cmp
push
add
jne
std
and
mov
mov
mov
add
add
addb
int3
stc
add
in
push
pop
adc
add
adc
lea
mov
jnp
sbb
cld
pop
out
arpl
sbb
adc
adc
ljmp
push
js
in
les
data16
add
xor
push
les
scas
xchg
add
clc
stc
fstpt
test
add
add
das
lods
mov
scas
cwtl
dec
inc
add
and
mov
addb
add
sbb
mov
lahf
lods
loope
into
movb
mov
add
pop
ret
mov
sub
cmc
cmp
lock
mov
jecxz
jp
push
add
or
mov
popf
jle
clc
sbb
add
lods
dec
cmp
les
jnp
jnp
add
add
add
icebp
mov
add
mov
fwait
mov
cltd
jbe
push
add
repz
std
icebp
cwtl
movsl
test
sub
jbe
xchg
repnz
pushf
mov
xchg
add
sub
pop
mov
jnp
js
add
adc
and
add
add
mov
and
push
iret
xchg
adc
adc
xchg
mov
clc
jge
sti
movsl
insb
int3
cmp
mov
out
inc
arpl
sbb
add
xchg
add
xor
rdmsr
add
data16
add
or
mov
add
repnz
mov
nop
add
jbe
jl
sahf
aas
mov
xchg
add
icebp
inc
add
add
xor
xchg
add
mov
rolb
cmp
out
rolb
fcompl
leave
scas
add
lods
mov
pop
lea
push
add
mov
out
ds
mov
push
dec
add
mov
add
or
pop
int
mov
pusha
add
add
dec
mov
dec
insl
inc
add
add
cmc
js
add
mov
fsub
add
in
adc
add
ljmp
adc
and
mov
add
les
add
fcoms
push
xchg
in
add
xchg
pushf
jg
mov
jmp
lret
popa
lods
cmp
add
add
addr16
add
add
aas
jg
add
pushf
cmpsb
add
xor
add
inc
add
mov
mov
jle
lea
pusha
add
dec
or
add
add
pop
iret
push
outsb
repz
add
mov
mov
jg
add
jp
xor
dec
shl
add
stos
or
inc
add
xchg
and
mov
sub
sahf
xchg
add
lods
out
in
testb
add
add
jo
aam
ret
movb
jno
push
inc
mov
xor
jno
add
les
lds
addb
add
das
adc
out
cmp
pop
addb
add
nop
add
dec
lods
mov
test
int3
jle
int3
addb
cmpsl
cmp
push
add
mov
sahf
dec
insl
xchg
faddp
add
xor
inc
cmp
insl
dec
cs
pop
popa
jle
int3
mov
adc
sub
mov
add
add
or
dec
hlt
add
popa
jmp
cmpsb
add
mov
mov
dec
dec
repnz
test
mov
adc
gs
inc
add
sub
push
fisubs
push
pop
add
jg
add
dec
ret
notl
add
add
popa
jne
add
push
cmc
fwait
push
lock
dec
sub
mov
or
pop
mov
fisubrl
mov
repnz
xcrypt-ecb
cmpsl
lret
cmp
add
insb
mov
pop
mov
lcall
inc
loopne
xor
push
inc
sbb
movb
stc
push
add
in
add
add
add
loopne,pn
push
jne
sbb
sbb
jns
add
outsb
sub
pop
sub
ja
add
outsl
pop
lret
cmc
mov
add
mov
mov
mov
mov
pushf
push
add
inc
scas
aad
or
dec
daa
mov
inc
add
lret
xchg
mov
sub
jne
jnp
into
pop
xor
sahf
add
add
mov
add
add
mov
add
pop
sbb
lret
mov
xchg
addb
adc
sbb
add
js
add
cld
pop
repz
or
add
mov
adc
test
mov
pop
dec
dec
mov
cmp
rcll
cmpsb
add
subl
iret
fucom
lods
dec
sub
mov
mov
add
add
lcall
cmp
add
sub
fidivrs
addb
mov
add
testb
mov
add
ljmp
push
add
push
add
add
add
cltd
fmuls
add
add
mov
add
int
add
shrl
add
add
mov
sub
sbb
add
add
sahf
jp
add
fwait
scas
mov
aad
insl
push
add
add
sbb
mov
inc
add
add
lahf
pop
mov
movb
aaa
repz
add
call
add
popa
mov
jae
fwait
mov
push
xchg
push
add
loopne
fldenv
add
mov
mov
mov
cmp
icebp
sahf
inc
fdiv
add
pop
xchg
gs
jg
cwtl
adc
test
push
xchg
mov
cltd
xor
sub
adc
arpl
add
sbb
cmp
bswap
in
pop
notl
xor
test
add
add
add
mov
add
add
add
mov
or
idivl
cmpl
add
daa
fwait
inc
jl
push
rolb
sbb
decl
and
mov
add
or
lock
pop
adc
addb
add
repz
add
icebp
out
daa
in
adc
lret
mov
dec
mov
cmp
mov
mov
aad
call
popl
adc
ljmp
add
out
les
rolb
mov
in
dec
int
scas
add
jnp
dec
push
add
pop
cmp
loopne
mov
add
sahf
fidivrl
addb
lcall
nop
add
or
adc
cmpsl
pushf
stos
popf
and
stos
mov
frstor
test
add
mov
lods
pop
jne
add
add
dec
lret
xchg
rolb
sub
add
add
mov
pop
or
add
mov
add
mov
iret
fdivrl
adc
lods
out
mov
add
add
pop
int
adc
push
cmc
out
or
add
adc
xor
arpl
test
add
cmp
jno
add
inc
add
jle
xchg
hlt
add
fisubs
sbb
add
pop
icebp
mov
enter
fbld
add
mov
dec
push
mov
sub
negl
iret
out
or
cwtl
xchg
jae
jmp
scas
pushf
add
add
add
into
dec
sti
test
stos
into
ss
cmp
jo
push
add
mov
mov
xchg
fdivrs
lahf
lahf
and
xchg
add
inc
add
cmpsl
and
mov
add
sbb
fstpl
adc
cmpsl
pop
test
add
popa
add
lds
add
mov
or
outsb
lret
aad
mov
cmp
and
dec
cmpsb
add
insb
gs
arpl
testb
sti
adc
add
add
pop
test
sub
sbbl
add
adc
in
pop
lds
and
jne
mov
leave
cmp
jmp
dec
cmpsl
dec
push
add
add
psadbw
out
adc
add
add
and
mov
cmp
push
add
sub
push
sub
pop
push
add
dec
stos
loop
and
mov
add
add
ret
push
jmp
sub
add
fnsave
mov
pop
call
fwait
add
testb
cmp
pop
lahf
rolb
mov
sbb
add
outsb
mov
inc
add
lahf
cmpsb
add
xor
xchg
add
pop
addb
jbe
int
add
sbb
mov
dec
or
add
push
add
je
or
insl
sbb
pop
pop
out
add
push
ja
mov
lock
sarl
sti
fwait
or
sub
repz
jl
jle
fdiv
add
js
and
lcall
mov
in
leave
pusha
add
add
push
cltd
out
aam
aas
mov
dec
in
add
add
sub
push
sub
mov
sub
pop
and
inc
add
repnz
add
lea
ljmp
xchg
jl
les
ret
cltd
iret
movb
dec
mov
sti
mov
adc
mov
int3
fidivrl
jae
add
add
add
add
add
add
adc
in
push
jecxz
pop
push
data16
shr
cwtl
leave
mov
sbb
add
ds
or
stos
stos
rolb
inc
add
ud1
dec
push
add
popf
ret
xor
and
mov
xlat
sbb
mov
add
sub
or
mov
add
cmp
xchg
add
jl
stc
sub
dec
movsb
add
js
das
xchg
add
add
movsb
add
adc
int3
dec
add
imul
data16
std
dec
stos
ret
add
add
add
cltd
and
enter
mov
lds
sbb
xchg
js
add
dec
sub
mov
push
rolb
xchg
add
add
add
adc
icebp
adc
pusha
add
mov
ss
gs
push
inc
add
cmp
dec
inc
add
daa
sahf
mov
loope
aas
mov
popf
in
mov
cmp
cld
scas
bound
mov
sbb
add
jmp
cld
loopne
call
add
mov
jmp
add
in
outsl
adc
add
loope
and
and
push
pop
arpl
add
add
xchg
in
mov
lods
cwtl
insb
data16
and
lods
dec
adcl
rolb
test
cltd
cmc
sub
cmpsb
add
addb
jmp
aaa
data16
adc
icebp
sbb
add
bound
mov
ja
test
cmp
add
pop
test
pop
mov
cmp
push
inc
add
mov
cmp
pop
out
dec
pusha
add
push
test
cmpsl
daa
adc
fidivrl
xchg
add
sysret
jne
add
add
rolb
cmpsl
fwait
jae
mov
push
add
shr
fdivr
pop
sbb
xor
xchg
ret
fldt
add
adc
mov
div
and
and
xchg
aaa
push
or
mov
outsb
dec
outsb
mov
mov
out
inc
stos
pop
pop
sub
push
lods
push
add
addb
insb
sbb
jae
mov
insb
push
mov
out
push
popf
pushf
push
jno
xchg
jp
add
sub
loopne
cmc
bound
mov
jg
faddl
dec
aad
push
stc
nop
add
add
mov
aam
lcall
data16
dec
jg
gs
arpl
mov
mov
or
mov
adc
push
add
add
lret
loopne
popa
xchg
out
xchg
cmpsb
add
add
add
jno
rolb
add
inc
add
lea
in
scas
pusha
add
mov
cli
xor
lock
add
add
scas
pop
addb
add
ret
scas
cltd
out
push
add
add
fwait
movb
add
or
clc
lods
pop
cwtl
push
add
jbe
sub
sbb
cs
add
add
add
add
add
cmp
sub
cltd
imul
cmpsb
add
add
add
add
push
add
mov
lods
jmp
fidivrs
mov
lahf
addb
add
mov
or
jmp
pop
mov
add
mov
add
xchg
iret
loope
imul
test
ret
add
data16
add
or
add
jg
stos
inc
mov
scas
inc
mov
add
add
aaa
outsl
adc
add
dec
repnz
das
ds
pop
mov
inc
add
and
cmp
and
inc
add
add
xchg
test
stc
insb
cli
inc
cltd
movsl
push
data16
xchg
add
gs
outsb
fisubrl
rorl
jp
add
add
pop
ret
add
scas
jb
fwait
add
mov
fmuls
pop
test
push
sahf
pop
pushf
lods
call
add
jmp
add
pop
ds
fldcw
mov
mov
add
push
cmp
idiv
popa
int3
mov
insb
mov
mov
mov
add
add
test
gs
adc
dec
xchg
cmp
add
adc
fildll
in
and
sub
jmp
mov
ja
cmpsb
add
add
mov
add
enter
in
add
popf
mov
sbb
add
add
int
bound
mov
in
dec
jp
mov
insl
imul
mov
xchg
add
jl
jecxz
add
adc
incb
push
fwait
pop
mov
cmp
inc
add
add
imul
add
hlt
add
adc
sub
add
push
mov
fidivrs
add
dec
add
pop
jne
loope
popf
adc
or
call
outsb
lods
in
xor
inc
ljmp
cmp
gs
add
inc
repz
int
popa
add
jo
nop
add
jmp
xchg
add
shll
add
shll
add
js
pop
pop
sbb
add
add
add
mov
mov
sahf
aaa
or
add
inc
add
fdivrl
cld
ret
pop
insb
push
cwtl
jmp
popf
jl
push
in
sahf
jbe
or
lods
add
jge
cmpsl
ret
and
mov
dec
fstl
add
add
add
add
add
std
sbb
add
pushf
sbb
call
ds
js
cmp
addb
mov
add
out
jge
mov
bound
mov
sub
add
add
jnp
popf
and
cmc
jle
pusha
add
add
cltd
xchg
out
popa
jae
xlat
idivl
inc
movsb
add
add
out
decl
push
sbb
mov
xor
add
lea
add
and
mov
sbb
sbb
pop
popf
mov
dec
push
mov
push
aam
movsb
add
cmp
add
jae
sub
idivl
fwait
dec
mov
dec
in
or
in
inc
in
inc
add
jne
add
into
jecxz
add
scas
push
cli
adc
movsl
shl
add
loop
xor
mov
ret
adc
aad
push
add
or
gs
mov
dec
cli
mov
push
add
dec
pop
cmp
subl
push
add
scas
pop
push
add
scas
imul
mov
add
cmpsl
push
pop
daa
push
stc
ret
dec
jg
sub
xchg
add
add
sbb
add
mov
ret
dec
and
mov
xchg
add
mov
movsb
add
nop
add
in
mov
jg
test
dec
add
scas
add
sub
xchg
add
imul
or
icebp
or
add
add
mov
pop
popf
lcall
add
lret
jb
push
add
mov
add
add
movsb
add
inc
pop
shll
push
add
in
add
add
mov
xor
xchg
sub
insb
mov
add
and
xor
mov
jae
xchg
clc
and
mov
jg
add
ret
xchg
mov
add
testb
add
mov
pop
pop
addb
add
pop
lods
aad
add
repz
add
mov
xchg
adc
popa
pop
in
xchg
add
add
rolb
lahf
sti
xchg
pop
lret
movsl
jo
loop
fs
push
insl
mov
inc
sbb
je
sub
aad
dec
mov
movsb
add
add
icebp
mov
add
adc
mov
leave
adc
jmp
add
dec
pop
inc
jnp
adc
jp
pushf
xchg
repnz
test
add
out
ljmp
adc
lret
dec
in
push
cmp
xlat
pop
jl
fcomps
cmp
les
movb
add
sub
mov
cwtl
and
mov
add
inc
add
jnp
add
add
xchg
std
and
mov
fsubrs
dec
cli
aas
push
mov
add
push
add
pop
jne
add
fnstsw
lahf
add
mov
testb
je
and
mov
gs
mov
and
int3
and
test
xchg
add
mov
mov
jb
inc
push
add
add
test
test
pop
shll
add
add
fwait
mov
dec
sub
mov
ds
add
out
in
cmp
push
add
push
sub
inc
push
dec
sub
mov
jle
fldt
xchg
je
dec
add
mov
cwtl
je
test
jge
xchg
adc
adc
dec
sti
movsl
enter
arpl
jne
cmp
insl
pusha
add
jmp
testl
add
pop
adc
push
add
xchg
add
add
pop
data16
xor
lods
out
popa
movsl
xchg
xchg
leave
or
jle
inc
add
xchg
fsubs
mov
sbb
pop
fidivrs
adc
inc
add
and
jne
add
pop
cs
ljmp
cmp
scas
inc
add
add
pop
dec
addb
inc
inc
int
lret
xchg
add
test
inc
add
add
rolb
mov
cld
iret
dec
fwait
pop
out
cmpsb
add
inc
add
mov
cmp
outsb
inc
add
xchg
add
inc
add
jb
adc
addr16
addb
fmul
dec
push
cld
sbb
mov
imul
xchg
add
fidivl
sub
add
mov
aaa
out
testb
jge
or
xchg
push
rolb
xlat
mov
mov
cli
cmp
ret
mov
xchg
ficoms
jmp
subl
lds
add
cmp
mov
lea
stos
or
fcomps
jl
add
add
dec
loop
xlat
add
mov
shl
add
rolb
test
and
inc
jae
jmp
mov
mov
in
pop
jae
add
mov
or
stc
cmpsb
add
mov
add
gs
add
jne
add
sbb
sub
cmp
sbb
add
add
hlt
add
add
pushf
cltd
je
fsubrl
loop
sbb
add
mov
imul
cmp
dec
push
add
mov
mov
movsb
add
adc
add
add
xchg
add
inc
add
outsb
jg
add
jge
add
mov
add
call
add
addb
out
add
jno
lret
push
rol
adc
into
ja
in
aam
mov
add
sbb
mov
sbb
or
add
add
outsl
mov
add
lock
aam
pop
mov
add
add
sub
add
mov
xchg
cld
addr16
add
add
add
add
add
popa
rolb
mov
mov
addr16
cs
or
addb
add
gs
add
jns
add
testb
add
mov
sub
add
mov
add
inc
add
rorl
dec
loope
push
repnz
mov
lea
in
adc
inc
add
add
pop
mov
add
das
push
add
mov
jge
enter
data16
xchg
add
sub
into
push
add
push
add
and
mov
add
out
add
call
jp
add
jns
sbb
add
xchg
add
sbb
negl
or
pop
pop
cld
and
fcmovbe
add
inc
outsl
pop
shrl
add
arpl
mov
add
fcomip
add
or
addb
add
gs
xchg
add
push
dec
stc
test
inc
insb
arpl
pop
nop
add
add
pop
rolb
add
popa
xchg
add
add
rolb
add
outsl
mov
fsubr
push
pushf
mov
add
add
or
xchg
add
cmp
mov
pop
popa
in
roll
mov
rcll
lahf
into
scas
loopne
imul
jae
add
jle
adc
lret
frstor
fstl
mov
add
clc
bound
mov
stc
or
mov
inc
add
lret
add
add
push
mov
add
add
fdivrp
inc
jmp
adc
inc
add
cmp
inc
push
cmp
add
jb
cmp
push
lock
sti
or
dec
out
adc
xchg
add
jmp
add
pusha
add
sahf
lret
popa
xchg
daa
popa
inc
add
add
xchg
xchg
add
mov
mov
lret
pop
xchg
add
in
xchg
add
scas
clc
mov
push
add
push
add
cld
jecxz
add
push
xchg
jle
and
mov
push
add
and
mov
jge
sbb
lock
in
shr
data16
add
add
ja
mov
dec
outsb
pop
pushf
jno
imul
gs
inc
add
pop
lds
mov
add
test
mov
mov
or
les
out
sti
xchg
add
insb
inc
add
jl
cmpsl
das
fs
icebp
xchg
insb
dec
cmp
add
add
addb
add
je
sub
add
popf
hlt
add
test
inc
add
add
nop
add
stos
inc
add
fadds
xchg
fsubr
xchg
ret
sbb
and
std
xor
mov
and
mov
add
gs
xor
mov
les
repnz
add
aaa
inc
add
pop
test
adc
add
int
mov
out
cli
mov
inc
lock
mov
sbb
fisubrs
dec
loopne
mov
orl
adc
inc
sbb
add
add
add
xor
movsb
add
fldl
inc
add
xchg
add
cmc
fimull
out
test
out
add
jno
mov
lret
in
add
add
mov
fnstsw
mov
lock
dec
xor
scas
test
add
push
add
jb
test
push
xor
add
mov
lahf
mov
add
add
jnp
adc
ret
add
lea
jp
mov
fwait
and
mov
out
pop
insl
mov
xchg
mov
fdivrs
sub
sahf
jecxz
add
add
xor
add
mov
add
dec
mov
xor
fcompl
outsb
mov
sub
add
ret
sub
mov
lret
dec
cs
and
mov
imul
outsb
pop
jbe
es
pop
insl
imul
or
ds
push
adc
int3
addb
ljmp
iret
jno
sub
jno
push
add
add
into
imul
jbe
or
add
std
push
inc
add
pop
push
xorl
push
lret
mov
cltd
movsb
add
add
dec
pop
xchg
mov
mov
add
add
add
insl
cmp
sub
loopne
iret
xor
add
pop
sbbl
scas
or
xchg
out
add
adc
pop
lods
cmp
inc
rolb
sub
int
cmp
pop
sbb
ret
jg
addb
cmp
decl
add
mov
add
dec
push
add
das
xchg
add
sqrtps
add
in
cli
mov
mov
xlat
push
add
jbe
jg
mov
add
cwtl
cmp
add
mov
out
stc
popf
nop
add
inc
adc
cmp
dec
testb
mov
ds
rolb
or
xchg
add
rol
popf
inc
push
xchg
add
xor
pinsrw
js
ror
push
jge
dec
cwtl
int3
pop
cld
mov
lea
test
rcll
lea
insb
cmc
mov
sub
daa
add
mov
add
pop
mov
add
out
cwtl
cmp
cmpsl
xchg
fstl
jle
scas
mov
mov
lea
and
mov
push
dec
mov
xchg
add
add
lret
sbb
clc
test
test
add
sbb
push
adc
mov
mov
lods
fidivs
add
dec
cmp
rolb
add
add
mov
cmp
push
cmc
insb
mov
add
add
inc
add
add
xor
movb
ret
sub
add
mov
mov
cmpsl
adc
fistpll
lret
cmp
mov
add
imul
loop
loope
pop
xchg
adc
add
add
add
dec
daa
out
scas
pop
out
adc
pop
mov
daa
iret
cld
add
push
fistpll
mov
loope
push
push
dec
fists
add
pop
xchg
add
xchg
add
stos
xor
mov
fnstenv
out
mov
add
testl
stos
mov
sbb
jecxz
add
testb
or
repnz
repnz
call
cmp
andl
mov
sub
pop
jl,pn
add
sti
ja
add
add
mov
add
add
sbb
cmpsl
rolb
xor
add
inc
add
stos
jg
mov
popf
jae
add
add
cmpsb
add
out
xor
inc
add
add
add
outsl
gs
add
add
add
into
outsb
jne
mov
add
in
or
les
push
add
add
divl
add
rolb
push
add
push
nop
add
mov
add
mov
lea
lcall
xorl
aam
lret
dec
push
add
pop
enter
and
test
mov
dec
int
clc
pop
add
and
jmp
add
mov
aad
popa
dec
pusha
add
out
xlat
mov
dec
inc
add
nop
add
into
push
xor
mov
pushf
xorl
add
add
or
data16
movsb
add
add
test
arpl
outsb
mov
ret
pop
addb
rolb
std
mov
add
sub
add
mov
jmp
add
add
inc
xchg
aam
fmull
xchg
cmp
add
dec
inc
add
push
add
addb
imul
hlt
add
add
mov
rolb
in
aas
leave
insb
std
lock
add
in
incb
loopne
ljmp
cld
scas
sti
xlat
xchg
add
mov
insb
push
add
xchg
add
mov
loopne
cwtl
sub
adc
mov
bound
mov
and
mov
add
loop
test
aam
sub
cli
dec
ljmp
mov
sub
outsb
mov
ds
testb
les
test
inc
add
xor
xor
jmp
stos
sbb
add
dec
push
or
je
push
pop
xor
out
enter
pushf
xchg
je
loop
ret
lahf
mov
add
mov
bound
mov
add
and
mov
out
jmp
mov
xchg
add
sub
add
adc
test
dec
test
int3
imul
sub
sub
loope
push
inc
push
add
test
les
test
and
xchg
push
and
fdivrp
add
pop
cwtl
pop
xor
and
daa
addb
cmpsl
inc
imul
add
in
out
movb
inc
flds
sub
ret
sbb
mov
ss
add
leave
pop
cmp
dec
out
mov
add
push
add
or
add
mov
add
jae
out
aad
out
add
pop
movd
mov
cld
inc
adc
scas
fbld
jmp
dec
rolb
pop
fdivs
add
lods
mov
push
add
jae
mov
add
mov
rolb
cwtl
pop
or
or
sbb
mov
jmp
lds
add
sahf
stos
in
mov
sub
inc
add
add
xlat
dec
out
rolb
mov
loopne
cmp
lahf
addb
xchg
add
js
inc
push
add
cmp
mov
lock
mov
add
add
adc
dec
cli
cmp
pop
sti
insl
lret
mov
test
add
in
sub
add
mov
sub
mov
jae
add
add
bt
jmp
mov
cmp
add
mov
add
mov
aam
mov
jecxz
add
add
outsl
push
orl
cmp
inc
aas
lock
and
mov
mov
pop
lret
sub
mov
mov
adc
and
sti
idivl
std
jg
ret
mov
dec
push
add
lock
jno
add
add
add
cmp
add
fst
add
in
les
jp
lea
cmp
pop
mov
add
add
xchg
add
mov
and
add
add
xchg
stc
fisubl
inc
aad
enter
xor
test
dec
rolb
mov
add
sbb
add
push
add
add
or
add
aad
pop
inc
rolb
jp
add
xor
dec
mov
xor
add
rolb
fwait
in
add
add
movsl
cmp
add
inc
add
xor
or
movb
jle
jns
enter
ja
add
and
mov
mov
cmc
fdivrl
fwait
sbb
or
outsl
jmp
sbb
add
mov
mov
jmp
ret
popa
mov
mov
std
add
mov
mov
cmpsl
dec
jg
mov
sbb
sar
icebp
filds
add
arpl
add
out
outsb
mov
cltd
shll
mov
xor
ja
sarl
imul
int3
jae
cs
jg
xchg
pusha
add
jno
push
add
mov
mov
add
popa
into
shll
cltd
in
rolb
dec
pushf
mov
adc
movb
add
leave
mov
out
dec
mov
jmp
scas
or
clc
int3
jo
push
and
mov
add
xor
add
cmove
loopne
les
mov
add
add
add
decb
fxch
xchg
stc
lahf
xlat
lock
add
add
push
add
inc
add
mov
mov
add
pop
add
dec
in
jbe
cmc
pushf
xchg
mov
aas
bound
mov
mov
jb
push
add
cmp
sub
push
add
add
iret
ret
xorl
mov
pusha
add
add
add
pop
fs
dec
mov
insb
loop
sarl
add
test
add
sbb
add
imul
add
lahf
ljmp
add
cmp
les
repnz
aad
inc
and
mov
jns
cmp
jnp
xchg
add
lods
icebp
enter
cmpsl
add
pop
mov
lods
inc
addb
popa
addb
mov
outsb
and
adc
fwait
mov
add
mov
ret
jmp
add
js
in
stos
cltd
and
push
pusha
add
dec
jge
data16
add
addb
lret
push
add
add
add
outsb
sub
mov
in
mov
mov
add
mov
mov
loopne
xor
clc
lock
clc
xor
loop
xchg
sub
add
or
add
mov
adc
push
int
sbb
mov
cmpsb
add
mov
push
add
xchg
divl
xchg
not
sahf
mov
xlat
xchg
or
add
add
add
add
in
fwait
mov
in
ret
out
adc
js
add
mov
or
add
mov
dec
lea
pop
test
dec
xchg
add
add
add
and
sub
jmp
add
frstor
aas
test
xor
add
add
add
ja
sub
data16
add
cld
push
add
mov
mov
mov
add
in
cmpsb
add
add
addb
addb
das
push
fmulp
jno
pop
shll
inc
jae
xchg
data16
add
sub
cltd
mov
in
imul
add
mov
call
mov
xchg
add
mov
mov
cmc
rolb
add
fsub
dec
movsb
add
test
add
mov
cmp
mov
or
add
ljmp
mov
repz
jmp
add
pop
mov
test
dec
pop
lock
int3
rolb
jnp
add
psubb
or
add
xor
repz
xchg
mov
add
mov
cmp
addb
add
xor
jb
add
ret
and
add
or
add
in
inc
sbb
test
inc
test
mov
add
add
cmp
mov
add
ljmp
add
enter
cld
orl
add
add
test
push
fisubl
add
add
dec
jge
add
mov
testb
add
add
add
add
add
add
xchg
addb
stos
iret
imul
dec
fldt
and
xor
imul
add
scas
jp,pt
loope
cltd
stos
rolb
jecxz
sub
push
fsts
add
add
xchg
std
mov
repnz
aas
mov
or
ds
ja
sub
fnsave
cltd
out
lds
icebp
adc
push
add
pop
xchg
cwtl
adc
stos
add
aaa
dec
push
and
iret
jge
js
add
sub
xor
jl
add
add
jmp
loop
jl
mov
push
mov
sub
mov
cmp
stos
xchg
dec
imul
test
gs
xorl
imul
jle
jo
cmp
jl
add
adc
jbe
and
test
popa
inc
add
push
add
addb
or
cltd
fstpt
fisubs
add
xchg
add
test
dec
push
xor
scas
sub
add
mov
js
sbb
push
add
bound
mov
add
add
mov
bswap
movb
push
popa
cmp
xor
in
call
add
mov
add
jg
add
xchg
push
add
inc
add
sarl
xchg
stc
rol
add
push
mov
sub
ljmp
jb
xor
data16
add
sub
push
add
cwtl
int3
cld
les
loopne
sti
sub
bound
mov
mov
add
push
add
add
pop
add
jle
sub
xchg
xchg
add
dec
repnz
push
add
ret
mov
arpl
add
testb
sub
repz
jle
add
add
push
add
clc
dec
cltd
add
sub
lahf
dec
mov
cmp
push
mov
push
pop
repnz
inc
add
fucomp
xchg
add
dec
sbb
fwait
mov
pop
sub
hlt
add
add
sbb
xor
lock
jge
add
add
dec
sti
scas
pushf
push
adc
pop
ja
inc
add
rolb
or
add
add
fistpl
outsb
jnp
int3
xchg
rolb
mov
jno
add
add
loope
sub
add
daa
push
jne
xor
jne
cwtl
in
jae
pushf
aas
jp
add
hlt
add
add
sbb
sub
test
andl
mov
jmp
adc
out
repnz
hlt
add
sub
jl
movsb
add
add
adc
cs
and
fiaddl
add
ret
out
lods
icebp
rolb
lods
and
xor
jmp
incl
lcall
les
sbb
pop
lret
scas
adc
inc
add
add
je
and
mov
push
add
adc
add
stc
sahf
fadds
sbb
add
adc
add
pop
ret
scas
mov
cmp
sbb
pop
popf
lock
fidivrs
les
fildl
mov
mov
push
int3
adc
push
jp
mov
add
add
mov
sub
ljmp
or
in
int3
mov
pop
add
sarl
inc
dec
test
jmp
xchg
add
add
testb
add
or
xchg
pop
dec
mov
arpl
add
cwtl
in
mov
add
jne
insb
cli
loope
ficoml
cmp
andl
add
dec
or
fsubrl
mov
mov
arpl
add
popa
pop
cld
cmp
add
sub
inc
add
jle
outsb
sbb
jne
and
mov
xor
mov
stos
xchg
add
add
aam
imul
pop
arpl
popf
xor
cmp
cmc
and
add
sti
add
xor
repz
lods
lock
add
add
adc
pop
inc
add
aad
rorl
add
jno
add
dec
dec
or
add
push
add
inc
add
inc
fstpl
add
push
add
and
mov
negl
lcall
mov
leave
dec
mov
mov
in
cld
cmp
add
add
mov
add
adc
xor
mov
scas
push
loope
xchg
shl
jnp
xor
add
rcll
push
add
mov
xorl
int3
and
add
push
add
xchg
add
inc
sti
out
push
das
mov
cltd
mov
call
jge
add
inc
add
cmp
add
add
cltd
sub
dec
adc
push
add
dec
add
fwait
push
or
add
add
add
iret
mov
lods
test
push
call
bound
mov
mov
add
call
imul
lcall
dec
fisttpl
add
add
add
lods
cmc
sub
jb
aam
pop
mov
lcall
mov
test
jecxz
mov
repz
mov
icebp
mov
mov
mov
jp
mov
add
outsb
je
movsl
ds
xchg
mov
and
arpl
lds
pop
jo
mov
aaa
fidivrs
add
add
pop
enter
mov
mov
mov
add
xor
leave
jne
add
xlat
add
mov
imul
scas
pop
fcmovnu
mov
pop
mov
add
mov
xor
add
mov
mov
mov
add
test
add
jb
and
mov
jg
movb
ds
mov
xor
add
enter
lret
add
jp
adc
pop
push
and
lock
movsb
add
addr16
add
mov
add
mov
or
ljmp
add
lods
imul
sub
popa
or
in
add
fcomi
loopne
or
lds
js
add
sub
or
loopne
add
adc
loopne
rolb
add
dec
push
imull
test
add
and
mov
add
xor
add
pop
testb
imul
std
in
cs
add
cmp
add
add
and
mov
jl
add
adc
and
mov
mov
add
add
fistpll
add
adc
pop
scas
call
add
inc
add
add
adc
popa
jle
add
mov
mov
inc
add
les
iret
imul
add
jbe
loop
jl
stos
mov
les
jno
xchg
pushl
int3
popf
cli
nop
add
decb
hlt
add
test
mov
mov
aad
pop
imul
xor
inc
in
stos
jmp
xor
xor
and
mov
add
lock
rolb
add
push
add
fldcw
call
rolb
mov
popa
dec
in
sbb
add
addr16
and
inc
add
popa
leave
cmp
sbb
inc
add
add
add
out
sbb
mov
add
adc
popf
dec
or
add
daa
mov
sahf
mov
ret
mov
in
mov
add
jp
adc
sahf
mov
jmp
cwtl
mov
dec
jg
ja
add
add
stos
add
ljmp
lret
lods
inc
fildl
repnz
fwait
push
add
add
xor
push
and
add
mov
aas
cmp
push
adc
pop
stos
stos
dec
push
in
sbb
add
testb
rdmsr
add
add
in
sub
call
mov
xchg
add
insb
data16
std
cli
jno
enter
ret
aaa
dec
sbb
push
add
outsb
imul
rolb
mov
add
push
add
add
jl
adc
jle
add
test
movsl
cmpsb
add
jecxz
or
cmp
daa
sti
ja
inc
fdivrl
add
daa
cmp
adc
add
add
or
add
pop
push
adc
data16
test
daa
cmp
outsb
scas
or
add
push
push
jbe
gs
sub
adc
adc
sbb
xlat
mov
insl
mov
repnz
push
add
add
add
fmulp
pop
aas
mov
add
push
add
adc
mov
mov
mov
add
test
imull
add
pop
inc
in
mov
pop
or
cmp
and
out
test
addb
clc
sub
addb
add
jno
sbb
or
loope
add
pushf
addb
loopne
clc
in
push
add
add
test
fidivl
dec
scas
mov
push
pop
pop
dec
xor
mov
movsl
loope
int3
dec
lds
lods
push
add
add
add
xchg
pop
pushf
pop
and
mov
rol
add
sbb
rolb
push
add
add
mov
add
add
add
pop
out
dec
mov
movsb
add
xor
add
outsl
lods
sub
and
mov
enter
add
push
add
leave
mov
daa
xchg
add
add
sub
lods
repnz
add
add
mov
inc
dec
xlat
cmp
mov
mov
movsl
add
mov
ljmp
and
xor
ret
daa
test
repnz
add
inc
add
add
aas
ljmp
mov
sbb
xchg
add
mov
add
icebp
sub
add
adc
inc
add
push
mov
cmpsl
test
mov
enter
in
pop
sti
add
dec
mov
add
sub
push
add
insl
stos
xchg
into
bound
mov
add
call
lock
jo
loopne
mov
add
fstps
pop
adc
dec
lock
mov
add
jns
inc
and
and
mov
mov
int
add
mov
test
add
push
pop
add
pop
aas
cmp
insb
lret
add
add
add
jecxz
add
xor
in
jo
icebp
jp
add
enter
add
dec
dec
les
iret
test
addr16
add
xor
cltd
and
aad
and
mov
add
mov
in
adc
mov
mov
das
les
fnstsw
mov
inc
add
push
add
add
mov
add
cmp
push
insl
push
les
adc
add
jmp
fadds
dec
stc
push
add
add
and
add
mov
test
add
ds
frndint
lret
add
mov
shll
iret
gs
jge
add
add
sti
js
add
add
decl
sub
add
mov
adc
stc
or
add
sahf
mov
pop
js
mov
jmp
add
rcll
xchg
rol
add
mov
mov
mov
xchg
add
or
add
mov
mov
insb
pop
adcl
addb
add
xlat
push
add
call
mov
and
ficoml
add
add
mov
out
mov
jb
out
add
mov
imul
xchg
xchg
add
scas
lea
xor
fdiv
add
cmp
add
jl
mov
add
jns
gs
in
mov
add
add
cli
jecxz
sub
jbe
cmpsl
testb
add
add
pop
out
fnstcw
in
movsb
add
mov
add
imul
add
lahf
inc
add
add
mov
sub
pop
dec
inc
add
add
add
xor
movsl
addb
pop
sub
into
cmpsl
fyl2xp1
subl
fdivrl
push
add
popa
sbb
pusha
add
fucomp
add
fistps
push
jge
aas
adc
add
mov
leave
push
pop
es
add
imul
daa
test
rolb
data16
add
add
jns
add
add
rolb
and
nop
add
mov
add
je
mov
in
add
add
cld
scas
jo
dec
hlt
add
sbb
or
dec
add
mov
nop
add
mov
add
pop
test
lock
outsb
mov
add
scas
leave
push
inc
test
jbe
hlt
add
andl
les
mov
and
mov
dec
or
daa
ret
fstpt
fildll
pop
cli
fldenv
in
add
jno
push
dec
sub
in
das
mov
dec
cli
add
xor
jmp
das
pop
inc
inc
add
icebp
scas
and
xor
dec
mov
mov
scas
xor
xchg
aam
insl
data16
mov
lds
adc
add
add
push
add
enter
test
jb
cmpsl
sub
mov
mov
dec
movsb
add
add
sub
sbb
cli
adc
loop
data16
adc
aad
or
pop
pushf
movb
add
push
add
add
bound
mov
aad
push
add
add
add
push
add
mov
movsl
push
add
add
shll
cmp
dec
jno
add
or
pop
insl
fsts
pop
bound
mov
mov
cmp
imul
cmpsb
add
push
add
ds
add
add
mov
add
add
in
jg
fists
push
add
insb
ja
fildl
icebp
lds
pusha
add
adc
sets
pop
sti
mov
add
fsts
add
fistps
js
jns
in
cwtl
pop
dec
sahf
js
add
or
add
mov
test
sbb
add
add
cld
out
stc
fcmovnbe
xor
int3
dec
mov
add
out
fsts
pop
mov
jne
add
jae
mov
inc
pop
add
dec
es
out
bound
mov
pop
xchg
adc
cld
push
add
xor
pop
bound
mov
add
fisttpll
adc
pop
sti
lock
fidivrl
xchg
popa
lods
push
add
mov
add
pop
xor
xchg
mov
add
add
mov
aad
add
gs
and
add
test
add
add
mov
sub
xchg
movb
xchg
nop
add
add
add
add
add
jg
add
add
add
jg
movsl
inc
aas
mov
add
mov
ljmp
jmp
push
add
in
add
add
sub
fidivrs
add
add
mov
and
mov
xor
cmp
push
mov
inc
inc
add
dec
pop
repnz
lock
test
ja
xchg
pop
mov
adc
cmpsl
addr16
mov
add
data16
add
jbe
push
sbb
add
movsb
add
push
inc
add
mov
lcall
or
add
mov
cmc
mov
jne
pop
and
mov
and
mov
rolb
sbb
ljmp
push
push
add
add
mov
lods
pop
push
add
add
add
or
jg
or
out
pusha
add
cmp
add
out
push
test
adc
add
pusha
add
pop
rorl
sub
mov
daa
inc
push
testb
ret
mov
add
mov
or
add
arpl
jmp
add
or
xchg
dec
in
faddl
mov
xchg
add
mov
push
push
int3
pop
sub
add
add
mov
add
rolb
and
mov
or
add
add
lsl
add
stos
pop
pop
sbb
inc
xchg
mov
xchg
add
out
dec
ss
mov
insb
pop
popa
dec
xchg
add
sub
mov
dec
mov
daa
cmpsl
jle
or
mov
mov
pop
and
xor
fmul
xorl
and
popl
enter
rolb
cmp
inc
add
ljmp
and
mov
fbstp
mov
aad
xchg
test
jg
in
mov
hlt
add
outsl
inc
add
je
insl
push
mov
add
add
or
push
add
clc
cmp
cmp
testb
inc
outsb
aaa
aad
cs
in
pop
nop
add
lahf
jo
std
push
add
aad
push
dec
cli
xor
sbb
add
add
add
test
lret
jbe
jne
add
lds
out
jge
add
stos
out
lock
fstpt
lret
add
adc
ret
xchg
test
push
lods
xchg
add
jp
add
mov
hlt
add
sub
stc
jbe
insl
mov
std
adcl
or
pop
clc
xlat
jo
mov
enter
push
add
sahf
adc
ljmp
outsl
mov
jecxz
test
add
mov
mov
add
and
mov
dec
push
pop
aas
and
add
add
or
or
sub
add
add
pop
mov
loopne
dec
lock
sub
jmp
cmpsl
call
test
mov
lock
shll
rcrl
cmp
mov
mov
xor
lcall
imul
sub
add
add
pushf
js
add
add
test
scas
push
imul
pop
push
adc
add
xchg
aas
cwtl
dec
cmp
sbb
add
out
adc
inc
add
mov
icebp
ss
add
ja
mov
push
sub
mov
movb
mov
add
add
add
add
add
test
into
popf
fwait
sbb
push
add
add
add
push
sahf
mov
add
push
add
mov
int
mov
add
sub
adc
out
es
add
sub
mov
mov
pop
jo
imul
cltd
fistps
imul
insl
cld
xor
js
mov
sahf
push
rol
arpl
add
jmp
out
cwtl
loopne,pn
popl
add
mov
mov
add
mov
mov
out
stos
jno
mov
add
xor
xor
pop
cmc
iret
mov
add
add
add
adc
movb
jne
or
call
mov
add
inc
jno
sub
add
push
add
scas
dec
xor
call
add
add
add
sub
add
add
mov
add
add
add
add
mov
mov
shr
sub
add
nop
add
std
and
mov
add
add
inc
add
out
lahf
aas
add
mov
ljmp
add
add
loop
mov
movb
add
inc
sub
and
pop
sbb
mov
ds
mov
mov
subl
test
mov
repz
add
xchg
push
fistpll
xchg
rolb
xchg
add
xchg
bound
mov
add
add
cmp
mov
cli
mov
and
mov
add
lds
jl
sahf
dec
call
cmp
xchg
add
loopne
out
gs
aad
jnp
add
and
addb
add
add
jmp
repnz
xlat
dec
xor
mov
inc
add
mov
icebp
daa
sbb
add
nopl
and
sbb
jns
add
add
rolb
inc
mov
sbb
inc
add
and
push
mov
js
in
add
sbb
in
add
mov
add
lock
push
sbb
xor
rcrl
pushf
sub
aad
add
mov
mov
add
mov
or
cmp
mov
add
push
add
add
cli
xchg
sti
jg
in
and
push
jns
shll
mov
pop
test
shrl
and
mov
stos
stos
cmp
and
stos
sahf
jecxz
and
mov
add
mov
mov
sbb
add
add
add
out
outsb
inc
lret
add
add
mov
fistpll
fcmovnbe
mov
add
and
loope
idivl
add
xchg
and
add
ud1
cli
jmp
int
sbb
arpl
ljmp
adc
inc
jp
mov
mov
pop
cli
inc
add
leave
mov
and
mov
add
nop
add
add
mov
add
pop
adc
clc
pop
in
fwait
adcl
xor
push
add
cmp
dec
fisubs
add
add
push
mov
pop
push
add
add
and
xchg
add
add
xor
add
add
xchg
add
dec
fmulp
jb
in
mov
cltd
loope
add
popf
rolb
imul
repnz
add
mov
mov
mov
inc
sahf
dec
in
jb
mov
add
sbb
xchg
je,pn
pusha
add
mov
add
jle
add
add
lea
add
pusha
add
xchg
sbb
push
xchg
add
shll
mov
add
sbb
pop
mov
fdivl
lret
pop
and
adc
movb
jle
sbb
fstl
lods
jno
and
add
ret
test
pop
mov
cs
lahf
and
mov
dec
lock
add
mov
ds
into
mov
lret
jmp
add
xor
daa
xchg
dec
jno
add
push
add
mov
jp
xchg
add
lret
add
add
push
xor
mov
and
cli
pop
and
test
jbe
scas
mov
ret
sahf
push
leave
xor
loope,pn
sub
mov
das
lods
testl
jo
testb
movb
imul
lret
add
xchg
bound
mov
mov
push
push
clc
adc
aaa
in
cmp
xor
inc
dec
pop
pop
jle
jp
lcall
inc
sbb
cmpsb
add
add
dec
shll
cs
push
jo
add
fwait
pop
push
in
dec
daa
mov
sahf
out
lods
adc
jg
in
stos
lahf
pop
jl
out
mov
dec
push
cmpsb
add
fwait
js
sbb
aas
fdivs
shll
lods
addb
add
add
add
mov
jmp
out
cli
clc
mov
add
addl
outsb
test
add
clc
add
sbb
addb
add
pushf
outsb
mov
jmp
jecxz
sub
mov
insl
je
and
mov
in
inc
adc
loope
add
mov
add
pop
popf
pop
rcll
data16
loopne
ja
add
icebp
fs
clc
scas
cmc
lea
sbbl
xor
mov
and
add
les
dec
fwait
push
add
add
add
add
mov
add
add
mov
rorl
add
mov
mov
ds
xchg
xchg
icebp
or
int3
adc
add
xor
add
mov
add
in
pop
mov
imul
add
dec
jge
movb
out
call
push
sub
add
jnp
and
mov
add
jns
mov
mov
shll
mov
sete
sbb
add
in
pop
aad
mov
cli
into
inc
add
pop
rolb
mov
jbe
add
jne
jmp
xchg
mov
adc
insb
frstpm(287
out
aas
out
test
push
pop
loopne
cmpsl
ret
cltd
cmpl
mov
or
xchg
add
into
daa
out
fcmovne
lock
scas
dec
cmp
rcl
add
lock
add
dec
pop
les
mov
mov
adc
add
mov
stos
nop
add
add
mov
add
ljmp
pop
les
push
add
mov
dec
outsb
mov
add
sbb
mov
cs
xor
sub
jle
xchg
loopne
dec
inc
pop
stos
push
cmp
xchg
add
add
and
xor
fnsave
add
add
pop
je
mov
mov
jl
or
and
in
xchg
add
mov
xchg
nop
add
add
jne
add
in
stos
inc
add
sbb
xor
sti
mov
push
add
push
arpl
add
out
rolb
jae
add
add
mov
sbb
add
add
fmuls
xchg
add
cld
pushf
stos
xor
daa
popa
ret
mov
add
mov
rolb
pop
mov
fstl
sub
push
and
repz
test
stos
lret
dec
push
dec
and
xor
outsl
jae
test
cli
and
mov
ja
push
add
dec
mov
mov
inc
add
call
add
add
pop
sub
insb
loope
push
daa
adc
mov
mov
fnsave
dec
sub
mov
push
add
sbb
jecxz
addl
add
add
lret
add
ss
sbb
push
add
cmp
aas
imul
stos
pop
or
inc
add
mov
xchg
add
add
popa
or
enter
mov
jne
pop
mov
and
fwait
add
add
add
mov
or
fidivs
test
mov
test
add
add
xor
icebp
lods
add
rolb
pop
testl
inc
add
out
aas
or
add
mov
push
add
dec
bound
mov
mov
cmp
xlat
adc
xchg
stos
xchg
and
mov
inc
add
les
add
and
mov
sbb
xor
ret
aaa
ljmp
lss
mov
add
mov
scas
push
pop
hlt
add
xor
int
add
test
adc
dec
arpl
adc
mov
add
daa
push
add
and
cs
daa
loopne
pop
outsl
add
repnz
xor
dec
and
mov
hlt
add
add
cmp
outsl
scas
add
mov
fwait
inc
add
adc
mov
jl
rolb
sub
xchg
add
addb
add
add
xchg
ja
add
jno
add
inc
add
add
adc
outsb
inc
dec
xchg
leave
test
gs
push
push
and
aad
sub
xchg
cmp
test
sub
sub
mov
mov
cmp
bswap
adc
aad
out
jns
add
mov
mov
xchg
mov
rolb
repnz
sti
add
mov
dec
pop
mov
dec
loop
sbb
mov
mov
inc
out
outsb
inc
add
add
jb
movb
cmp
add
orl
dec
data16
imul
add
lods
push
dec
or
mov
xchg
add
addb
add
loopne
sbb
test
sub
add
mov
mov
sub
jp
add
add
inc
add
xchg
add
cmp
add
addb
add
cltd
sbb
cli
add
mov
add
mov
cmp
add
xor
mov
add
mov
iret
xor
lret
mov
int
or
jne
pcmpgtw
add
add
adc
aaa
mov
repz
jge
add
jl
pop
roll
addb
or
daa
in
sbb
cmp
mov
pop
add
add
test
add
mov
add
lds
add
arpl
add
fcompl
mov
or
mov
add
jo
cmpsl
mov
loope
movb
inc
ret
dec
mov
add
dec
dec
stos
lds
add
inc
enter
add
xor
stos
aas
cmp
add
data16
add
jge
rolb
out
cld
dec
outsl
xlat
data16
jge
clc
movb
addb
add
mov
dec
pop
popa
cmp
add
fstps
add
gs
out
add
lahf
dec
mov
mov
sbb
test
into
jns
dec
or
add
add
xchg
xchg
add
arpl
mov
aaa
and
dec
pusha
add
or
sbb
push
je
xchg
das
stos
fcomps
dec
mov
cld
dec
rorl
sub
add
add
mov
add
jmp
mov
rolb
jle
add
inc
push
sub
xchg
add
mov
add
add
add
ljmp
dec
bound
mov
mov
cs
cld
movsl
mov
push
add
arpl
imul
push
push
add
imul
inc
add
add
cmp
add
nop
add
sub
add
ret
add
jnp
add
or
add
test
decb
add
mov
std
into
push
fisubs
add
mov
in
add
mov
mov
roll
mov
cltd
inc
in
jbe
mov
lret
sbb
add
repnz
add
cmp
mov
popf
sbb
add
stos
pusha
add
add
ret
mov
mov
repnz
cmp
add
leave
or
add
add
cmpsl
ds
add
inc
add
lret
inc
push
sub
pop
lock
add
dec
pop
jmp
add
jo
test
add
inc
out
cmp
add
add
addb
fisubs
add
nop
add
in
mov
jbe
mov
mov
jbe
push
add
add
or
test
add
sbb
add
out
pop
bound
mov
add
stc
mov
push
mov
jno
mov
add
lcall
jge
dec
cmp
xchg
add
mov
jle
ja
add
add
cmp
mov
inc
add
pop
roll
cld
loope
ret
push
add
cmp
add
mov
inc
add
add
add
sub
js
add
or
addb
xor
add
gs
mov
addb
mov
test
rolb
cltd
loop
clc
int3
loope
ljmp
add
aas
rolb
popf
imul
movsb
add
or
cmpsb
add
repz
dec
pop
loope
xchg
in
push
in
sub
add
add
add
pop
add
mov
inc
push
add
push
add
shll
aaa
into
cld
hlt
add
add
sub
popf
mov
xchg
sub
fistps
testb
nop
add
jecxz
jno
ds
arpl
aam
dec
rolb
push
add
inc
add
add
xor
mov
xchg
and
or
add
pop
sbb
xlat
mov
or
dec
pop
mov
or
addb
add
jp
add
sbbl
push
add
fadd
mov
in
loop
imul
push
add
mov
mov
mov
xor
movsl
xchg
add
add
add
mov
add
add
add
jne,pt
jg
aaa
lcall
clc
cltd
outsb
aad
add
icebp
in
push
pop
pushf
rcll
jmp
jecxz
add
call
inc
add
sbb
add
in
add
out
pop
dec
sub
add
mov
add
lods
jge
fnstcw
pop
xchg
xlat
scas
add
xchg
cmpsb
add
ja
mov
out
xchg
inc
add
ds
cltd
sbb
mov
add
dec
movsb
add
rolb
push
data16
sti
push
add
xchg
add
add
add
xchg
inc
aam
add
sbb
add
mov
jle
push
add
out
adc
add
jecxz
add
add
mov
mov
and
jns
add
mov
mov
push
add
inc
add
and
mov
add
add
sub
mov
add
mulps
and
mov
add
fld1
mov
add
add
dec
push
das
jl
add
or
push
add
add
add
add
movsb
add
stc
sub
int
add
cmp
add
add
enter
xchg
add
push
aad
sbb
ret
xor
cmp
xor
aad
addr16
adc
outsb
fnstsw
add
add
dec
dec
mov
mov
mov
test
add
add
sub
mov
outsb
bound
mov
lods
dec
sbb
movsb
add
push
and
add
adc
mov
mov
mov
pop
cltd
mov
add
daa
ret
add
add
add
daa
loopne
cmp
mov
inc
add
call
add
mov
shl
add
cwtl
sbb
add
movsl
lret
fisttps
add
adc
clc
push
add
ja
adc
add
add
mov
cwtl
test
test
mov
fistpll
addb
cmpsl
xchg
add
add
add
jg
adc
lock
xlat
add
mov
clc
pusha
add
push
cli
sbb
shl
add
jns
add
test
inc
mov
mov
inc
and
jns
and
scas
or
sbb
push
add
ret
out
insl
fdivs
jecxz
sbb
cmp
add
mov
arpl
bound
mov
adc
loopne
out
inc
std
adc
mov
pop
popa
add
mov
or
movntps
push
add
mov
add
hlt
add
push
stos
dec
and
mov
add
add
jp
add
das
push
add
rolb
cli
pop
mov
pop
and
mov
add
test
call
push
mov
add
lods
fcomps
add
inc
add
add
dec
movsl
sbb
add
bound
mov
rcrl
gs
jb
jne
int3
aad
dec
addb
add
sub
add
idiv
sbb
add
xchg
lcall
push
cmp
outsb
add
movsl
pop
add
mov
mov
add
pop
movb
add
aaa
int
add
das
push
popf
stos
ds
stc
lods
nop
add
add
xchg
nop
add
std
mov
add
add
cmp
cmp
push
add
pop
aaa
ss
pop
push
add
fwait
xchg
shrl
add
nop
add
mov
add
add
add
fsubr
stc
adc
jns
push
add
pop
add
mov
fadds
push
shrl
mov
add
jp
add
add
mov
sahf
test
stc
divl
push
add
int3
aaa
mov
add
dec
aad
add
mov
jns
notl
mov
pop
inc
add
mov
xchg
into
add
add
mov
add
out
fwait
adc
out
insl
dec
cmpsl
scas
fsts
add
movlps
push
mov
add
mov
mov
mov
sbb
mov
movb
jno
add
mov
addb
ss
lods
rolb
pushf
icebp
out
je
pavgb
pop
add
dec
adc
pop
aas
out
fadd
adc
cwtl
jge
addb
in
pop
ljmp
mov
cmp
add
cmpsl
cmp
frstor
pop
mov
add
xchg
and
mov
pop
sub
dec
mov
push
add
add
add
addb
fdivrl
add
push
sahf
jns
addr16
cmp
push
cmp
pop
adc
add
push
add
sub
movb
add
test
clc
pop
xor
jne
mov
int
add
push
mov
or
pop
movsb
add
cmc
iret
mov
into
xor
mov
add
add
das
aas
paddq
sub
fwait
rolb
add
add
mov
cmp
jae
cmpsb
add
cmpsb
add
fwait
stos
xchg
cld
push
aas
cmp
fwait
xchg
lods
inc
add
sub
add
stos
mov
inc
add
mov
lods
dec
or
cmpsb
add
add
add
mov
imul
in
push
add
add
xchg
push
add
mov
mov
add
leave
and
push
add
add
add
add
add
and
mov
push
xor
call
insb
pop
mov
sub
pop
xor
scas
jp
jge
add
inc
add
mov
mov
xchg
add
out
xchg
add
jb
icebp
in
xchg
flds
add
add
jnp
outsb
xor
negl
jl
inc
add
clc
pop
cmp
fistpl
add
add
loopne
inc
add
ja
mov
sub
in
add
in
insl
push
lret
push
jbe
imul
add
push
add
ja
or
je
adc
addb
mov
or
add
mov
mov
add
cmpsb
add
jnp
jns
inc
add
xchg
mov
jb
sub
aas
mov
ret
pushf
movsl
test
xlat
sbb
js
add
pop
and
mov
add
jle
add
mov
add
jp
cmpsb
add
rcrl
int
add
add
movsb
add
in
add
or
rolb
ret
lock
add
add
add
add
ret
sti
jl
ficompl
or
add
movsl
int3
rolb
push
cmp
insl
pop
loopne
hlt
add
mov
xchg
sbb
das
ss
pop
out
add
inc
add
add
in
lret
add
enter
add
push
xlat
cmpsb
add
mov
popf
mov
sbb
sarl
add
add
popl
add
add
dec
jl
xchg
add
cli
dec
out
cmp
loope
xor
stos
jecxz
add
flds
jns
inc
add
ss
popa
mov
sti
push
add
scas
fcomp
sub
mov
push
add
lds
pop
psubusw
in
inc
addb
add
jge
xchg
dec
xchg
add
jnp
jg
faddp
cmp
add
pop
lcall
shr
add
movb
pop
sets
rolb
inc
add
ja
add
add
data16
out
into
mov
add
stos
pop
sub
add
add
or
add
inc
add
push
add
add
or
repnz
jae
sldt
add
add
add
inc
stos
mov
push
mov
xchg
ret
jl
mov
add
pop
add
clc
repnz
jae
mov
add
mov
clc
repnz
jae
add
jns
mov
add
clc
repnz
jae
add
add
push
or
repnz
jae
add
push
jmp
outsb
and
repnz
jae
add
push
jne
xor
add
fwait
cld
nop
jmp
push
pusha
add
pop
fwait
cld
nop
jmp
add
add
or
add
add
cld
nop
jmp
or
add
pop
add
add
add
mov
clc
repnz
jae
add
add
jne
pop
add
repz
ret
clc
repnz
jae
add
push
add
add
cmp
cld
nop
jmp
or
leave
dec
add
shll
jb
add
sahf
jmp
bsf
add
add
sbb
add
mov
clc
repnz
jae
add
jbe
mov
mov
fwait
cld
nop
jmp
add
add
clc
repnz
jae
push
add
add
add
pop
mov
clc
repnz
jae
pop
add
mov
clc
repnz
jae
testl
add
mov
xchg
ret
add
mov
mov
push
push
mov
xchg
ret
add
add
mov
and
mov
xchg
ret
add
stos
jmp
mov
add
sub
fildl
leave
pop
movsl
jl
push
and
clc
repnz
jae
movsl
jnp
add
add
incl
imul
and
mov
add
testl
dec
add
fwait
cld
nop
jmp
pop
lahf
jns
pop
xchg
add
add
clc
repnz
jae
add
in
mov
push
mov
xchg
ret
add
jmp
xchg
clc
repnz
jae
add
add
mov
add
in
mov
clc
repnz
jae
fwait
sbb
add
popa
or
jg
fwait
cld
nop
jmp
aad
add
add
repnz
jae
add
movsl
jl
add
push
push
add
push
mov
xchg
ret
mov
add
pop
push
mov
xchg
ret
and
add
add
add
jmp
incl
dec
add
cmp
jl
mov
sbb
add
or
test
repnz
jae
push
add
adc
mov
repnz
jae
add
mov
cmp
repnz
jae
incl
xor
or
xor
mov
cld
push
mov
xchg
ret
add
jns
add
pop
or
cld
nop
jmp
push
movsl
add
add
add
add
push
mov
xchg
ret
mov
add
cld
nop
jmp
push
mov
add
jmp
sbb
nop
jae
add
dec
sub
repnz
jae
jne
cmp
es
add
or
repnz
jae
add
push
add
add
push
mov
mov
je
mov
mov
ljmp
nop
jae
sbb
fisttpl
fs
pop
lock
ljmp
pop
push
add
pusha
mov
cmp
fwait
insl
or
clc
repnz
jae
add
mov
lahf
sbb
je
clc
repnz
jae
jbe
leave
xor
cld
nop
jmp
add
add
push
pop
jne
cs
clc
repnz
jae
mov
loope
jmp
fimuls
mov
xchg
ret
pop
add
add
add
add
add
clc
repnz
jae
add
ss
jne
clc
repnz
jae
dec
add
add
addb
add
repnz
jae
add
call
add
clc
repnz
jae
add
lahf
sbb
mov
xchg
ret
or
or
jl
jmp
add
notl
add
add
add
xchg
add
outsl
push
push
mov
xchg
ret
mov
cmp
je
clc
repnz
jae
add
rcrl
and
jmp
pushl
add
xor
cs
add
add
and
jl
jne
push
pop
leave
add
add
nop
jae
cmp
push
aad
loope
daa
fsubr
out
add
clc
repnz
jae
add
add
jmp
add
add
fwait
leave
add
add
ds
clc
repnz
jae
jmp
push
fwait
add
mov
jae
xor
mov
xchg
add
nop
jmp
incb
mov
cmp
add
clc
repnz
jae
pop
add
mov
shll
fwait
cld
nop
jmp
movsl
jmp
aad
add
clc
repnz
jae
lahf
push
add
add
push
clc
repnz
jae
mov
dec
add
cmp
mov
ror
push
mov
xchg
ret
add
rolb
fadds
sar
repnz
jae
add
add
mov
add
or
add
clc
repnz
jae
pop
add
or
in
mov
fwait
cld
nop
jmp
add
add
jbe
into
mov
clc
repnz
jae
sbb
mov
jo
sbb
cs
add
or
mov
movsl
mov
add
dec
adc
repnz
jae
add
sub
sti
aam
add
cmp
add
call
clc
repnz
jae
add
adc
dec
and
fwait
cld
nop
jmp
add
leave
dec
add
les
fimull
pop
cli
inc
add
add
clc
repnz
jae
add
add
xor
hlt
add
sub
nop
jae
add
push
clc
pusha
push
mov
xchg
ret
add
lahf
je
cltd
pop
clc
repnz
jae
add
add
add
jl
jmp
add
add
cmp
xor
test
dec
push
push
mov
xchg
ret
and
mov
jae
mov
pop
add
push
add
repnz
jae
adc
add
ret
sbb
adcl
add
push
clc
repnz
jae
add
leave
jo
sub
shlb
sahf
sti
inc
add
add
add
mov
clc
repnz
jae
add
fwait
cld
nop
jmp
cmp
jl
mov
pop
je
clc
repnz
jae
mov
aad
leave
mov
clc
repnz
jae
add
or
mov
rolb
xchg
ret
fwait
fwait
mov
add
pop
add
mov
clc
repnz
jae
roll
leave
pop
pusha
push
mov
xchg
ret
jnp
add
add
or
jle
push
mov
xchg
ret
leave
mov
push
add
sbb
nop
jmp
add
add
add
pusha
fwait
cld
nop
jmp
xor
notl
push
icebp
mov
sub
mov
clc
repnz
jae
sbb
sub
repz
repnz
jae
xor
add
sbb
jae
add
pop
xor
sub
add
fwait
cld
nop
jmp
add
or
fwait
cld
nop
jmp
jmp
add
ret
add
add
add
clc
repnz
jae
push
es
pop
add
add
jne
add
push
mov
xchg
ret
push
add
xor
fwait
cld
nop
jmp
decb
add
sub
in
push
push
mov
xchg
ret
dec
xor
dec
shll
mov
clc
repnz
jae
sbb
push
rep
clc
repnz
jae
jmp
fcomi
jnp
clc
repnz
jae
fs
jne
add
add
mov
cmp
sbb
inc
add
fs
xor
push
clc
repnz
jae
add
add
add
stos
clc
repnz
jae
cmp
jns
add
add
jg
clc
repnz
jae
add
jmp
add
call
out
add
add
leave
xor
ret
xor
or
add
add
add
dec
push
mov
jmp
add
lcall
jl
add
jb
fwait
cld
nop
jmp
add
add
nop
jae
jne
push
pop
lahf
aad
xor
add
aam
inc
add
add
mov
jne
and
clc
repnz
jae
jo
add
add
add
sldt
or
jbe
add
mov
xchg
ret
add
add
inc
add
xchg
or
add
repnz
jae
mov
add
add
adc
lahf
add
add
test
push
add
clc
repnz
jae
add
mov
clc
repnz
jae
mov
add
ljmp
mov
add
add
push
add
xchg
jmp
cld
nop
jmp
test
dec
popf
sub
clc
repnz
jae
mov
icebp
mov
add
push
push
mov
xchg
ret
add
mov
cmpl
mov
xchg
ret
add
mov
add
fimull
mov
inc
add
pop
add
add
add
mov
clc
repnz
jae
jnp
add
fwait
cld
nop
jmp
mov
push
add
fisttps
add
jo
push
repnz
jae
fwait
es
divl
fwait
cld
nop
jmp
add
add
push
clc
repnz
jae
cmp
jnp
jecxz
test
fwait
cld
nop
jmp
add
add
dec
add
add
push
mov
xchg
ret
add
pop
add
pusha
clc
repnz
jae
add
add
jmp
push
fwait
cld
nop
jmp
pop
testl
add
nop
jae
add
add
add
or
fisttpll
test
add
clc
repnz
jae
fs
sub
repnz
jae
dec
mov
push
es
and
repnz
jae
add
dec
ss
jne
addr16
leave
fwait
cld
nop
jmp
push
add
add
add
mov
cld
nop
jmp
add
dec
stos
add
clc
repnz
jae
mov
add
inc
push
mov
xchg
ret
add
dec
or
or
mov
rolb
xchg
ret
or
push
jmp
mov
clc
repnz
jae
add
or
out
add
add
or
add
mov
ja
shl
clc
repnz
jae
add
mov
push
add
add
in
push
mov
xchg
ret
add
add
add
lea
clc
repnz
jae
icebp
add
test
mov
xchg
ret
or
mov
les
repnz
jae
fs
xor
aam
mov
fwait
cld
nop
jmp
fs
sub
clc
repnz
jae
leave
ss
incb
jl
and
add
add
movsb
add
pusha
clc
repnz
jae
add
add
add
pop
and
repnz
jae
push
add
add
and
push
mov
xchg
ret
add
mov
mov
fwait
cld
nop
jmp
testl
cmp
cld
nop
jmp
call
mov
pusha
add
nop
jae
fstpt
add
add
movb
add
add
repz
movzwl
clc
repnz
jae
add
testl
repnz
jae
fs
add
clc
repnz
jae
add
add
and
jo
push
push
mov
xchg
ret
add
add
mov
push
clc
repnz
jae
add
daa
fiaddl
jge
clc
repnz
jae
loope
add
mov
mov
mov
clc
repnz
jae
mov
mov
nop
jae
pop
add
add
adc
repnz
jae
add
add
mov
mov
xchg
ret
xor
mov
aam
adc
fwait
cld
nop
jmp
pusha
push
jbe
mov
xor
clc
repnz
jae
pop
cmp
add
add
mov
imul
sub
and
add
jmp
ja
mov
clc
repnz
jae
push
add
push
jl
add
add
outsb
push
push
mov
xchg
ret
and
add
mov
out
lahf
enter
add
add
push
push
add
stos
rep
clc
repnz
jae
call
icebp
jl
add
add
aaa
orl
nop
jae
add
mov
xor
sub
repnz
jae
fwait
icebp
add
adc
clc
repnz
jae
push
add
push
jne
or
lods
adc
add
repnz
jae
jnp
rcr
push
mov
sub
add
adc
add
push
mov
xchg
ret
add
loope
add
cmp
andl
incb
punpcklbw
add
loope
add
clc
repnz
jae
add
in
test
inc
rolb
jecxz
add
jne
push
mov
xchg
ret
add
add
clc
repnz
jae
add
movsl
sbb
add
clc
repnz
jae
mov
fwait
add
clc
repnz
jae
pusha
or
jl
idivl
mov
clc
repnz
jae
add
add
decl
cld
nop
jmp
mov
dec
push
cmp
and
mov
sub
repnz
jae
and
add
nop
add
lods
push
push
mov
xchg
ret
add
testl
pop
cli
push
push
mov
xchg
ret
mov
add
add
mov
imul
fildl
add
sldt
add
jg
jmp
jae
ss
add
lahf
testb
add
pop
push
mov
xchg
ret
cmp
add
add
cld
push
fwait
cld
nop
jmp
add
pop
add
push
add
or
mov
xchg
ret
loope
fcomi
fwait
aad
sub
jae
testl
movsl
mov
mov
clc
repnz
jae
test
jecxz
add
repnz
add
jne
clc
repnz
jae
mov
call
cld
nop
jmp
dec
add
add
add
add
jne
add
add
cld
nop
jmp
fs
xor
fcoml
cld
nop
jmp
adc
dec
add
jns
repnz
add
test
or
add
repnz
jae
add
add
dec
outsl
popa
fs
repnz
jae
mov
add
cmp
repnz
jae
add
or
add
test
add
fwait
cld
nop
jmp
add
sbb
add
cmpsb
add
inc
xor
clc
repnz
jae
leave
icebp
add
add
and
push
mov
xchg
ret
add
fwait
mov
or
clc
repnz
jae
add
add
add
mov
add
add
je
clc
repnz
jae
rcrl
add
jae
mov
mov
xor
mov
repnz
add
push
pop
testl
call
outsb
cld
inc
add
add
sti
add
clc
repnz
jae
mov
sbb
xor
je
or
nop
jae
add
add
add
addr16
add
clc
repnz
jae
jbe
add
divl
pop
ror
add
clc
repnz
jae
xor
jne
push
jmp
add
pop
add
add
mov
cmp
jge
clc
repnz
jae
add
jmp
jmp
xlat
inc
add
add
icebp
jb
inc
lock
pop
push
clc
repnz
jae
or
add
add
add
movzwl
clc
repnz
jae
sbb
pusha
mov
call
fadds
xchg
ret
jmp
add
roll
in
add
jae
xchg
jmp
add
push
mov
clc
repnz
jae
fwait
jnp
add
fwait
add
push
add
mov
clc
repnz
jae
add
fisttps
jo
xor
fwait
cld
nop
jmp
add
mov
pop
sbb
mov
clc
repnz
jae
jmp
mov
clc
repnz
jae
mov
fwait
push
push
mov
xchg
ret
add
sarl
clc
repnz
jae
add
add
add
test
insb
clc
repnz
jae
xor
add
rclb
loope
add
mov
fisttpl
push
mov
xchg
ret
add
sbb
add
push
push
mov
xchg
ret
add
pop
add
mov
add
repnz
jae
loope
mov
testl
std
incl
add
add
mov
add
mov
test
out
clc
repnz
jae
add
sbb
sub
clc
repnz
jae
add
aad
mov
fwait
cld
nop
jmp
pop
add
add
inc
mov
mov
clc
repnz
jae
add
filds
pop
pop
add
jbe
dec
push
mov
rolb
orl
xchg
addb
xor
sbb
cmp
repnz
jae
push
pop
push
sbb
sldt
clc
repnz
jae
add
sbb
sbb
repnz
jae
push
mov
add
add
jbe
add
clc
repnz
jae
ss
xchg
add
mov
clc
repnz
jae
push
add
and
clc
repnz
jae
jmp
add
mov
cld
nop
jmp
add
jmp
add
nop
jae
sbb
decb
mov
ds
push
mov
xchg
ret
add
leave
add
xchg
clc
push
mov
xchg
ret
add
notl
divps
repnz
jae
jns
add
add
mov
sbb
nop
jmp
push
push
mov
mov
loop
push
mov
xchg
ret
add
mov
sub
add
add
push
push
mov
xchg
ret
sub
add
add
or
add
mov
clc
repnz
jae
movsl
add
dec
mov
clc
repnz
jae
aad
xor
mov
push
mov
xchg
ret
xor
cmp
add
add
mov
xchg
ret
add
cmp
incl
dec
sub
clc
clc
repnz
jae
jo
pop
xchg
add
add
sub
clc
repnz
jae
mov
add
add
lea
clc
repnz
jae
call
mov
add
add
clc
repnz
jae
jns
es
roll
mov
nop
jmp
movsl
mov
add
add
mov
clc
repnz
jae
jne
pop
jo
mov
fwait
cld
nop
jmp
mov
push
add
pushl
clc
repnz
jae
add
clc
pop
push
mov
xchg
ret
pop
sub
lahf
mov
add
mov
clc
repnz
jae
lahf
add
pushf
push
push
mov
xchg
ret
add
add
pop
add
add
repnz
jae
add
jmp
mov
xchg
ret
push
leave
testl
clc
repnz
jae
add
add
add
adc
push
mov
xchg
ret
add
push
pop
mov
or
mov
xchg
ret
leave
fstpt
sbb
mov
clc
repnz
jae
add
add
div
fwait
cld
nop
jmp
add
add
push
add
clc
repnz
jae
push
cmp
xor
add
repnz
jae
lcall
add
dec
or
add
repnz
jae
pusha
add
add
jae
add
aad
add
sbb
ds
fwait
cld
nop
jmp
fwait
add
cmp
add
mov
clc
repnz
jae
mov
pop
mov
pushl
mov
xchg
ret
add
add
jns
xchg
add
dec
add
cltd
incb
xchg
ret
cmp
dec
mov
xor
inc
add
icebp
push
cmp
jo
hlt
add
jbe
aaa
or
popa
add
mov
xchg
ret
pop
aad
pop
adc
clc
repnz
jae
lahf
push
xor
jne
add
add
mov
jae
add
add
fs
add
mov
jae
movsl
jns
jl
mov
and
add
fwait
cld
nop
jmp
es
push
add
ss
rolb
stos
jne
clc
repnz
jae
aad
mov
je
xchg
test
inc
add
and
fwait
cld
nop
jmp
add
add
add
nop
jae
xor
add
add
or
repnz
jae
add
pop
jmp
jl
and
repnz
jae
add
loope
add
mov
fwait
cld
nop
jmp
add
add
addb
rolb
mov
call
test
inc
add
add
add
testl
fwait
cld
nop
jmp
xor
push
mov
clc
repnz
jae
icebp
add
leave
fs
inc
pop
mov
fwait
cld
nop
jmp
jmp
repnz
add
clc
repnz
jae
jnp
fs
jns
pusha
add
add
add
clc
repnz
jae
add
add
add
xchg
sub
nop
jae
add
add
mov
fwait
cld
nop
jmp
mov
sub
push
clc
repnz
jae
fstpt
push
cmpsb
roll
xchg
ret
add
or
clc
repnz
jae
and
push
fwait
cld
nop
jmp
add
fildl
add
push
jl
movb
testb
add
inc
sbb
decl
pop
leave
add
push
out
rcrl
add
repnz
jae
icebp
add
movzwl
fwait
cld
nop
jmp
sub
dec
add
jmp
add
xor
add
add
push
or
jbe
add
mov
push
mov
xchg
ret
mov
push
add
mov
fwait
push
sahf
mov
add
xchg
hlt
add
fwait
cld
nop
jmp
add
add
add
mov
add
jae
add
add
add
add
ret
or
repnz
jae
adc
sbb
adc
test
add
clc
repnz
jae
add
imull
push
mov
pop
rolb
add
mov
add
test
in
xchg
hlt
add
jle
inc
loopne
mov
xchg
ret
sbb
push
mov
xchg
ret
add
mov
cld
nop
jmp
add
add
add
pop
mov
movsl
add
nop
jmp
add
sbb
sar
nop
jae
add
leave
pop
lahf
add
push
push
clc
repnz
jae
add
add
add
jae
ss
or
add
add
add
repnz
jae
or
pop
add
add
jbe
clc
repnz
jae
add
add
push
fdivr
repnz
jae
add
add
xor
mov
mov
xchg
ret
aad
add
lret
and
fwait
cld
nop
jmp
sub
or
idivl
mov
mov
clc
repnz
jae
add
add
cmp
cld
nop
jmp
push
fildl
mov
mov
out
sbb
add
push
mov
xchg
ret
add
filds
mov
mov
clc
repnz
jae
add
add
clc
repnz
jae
add
add
add
imul
fwait
cld
nop
jmp
xor
add
add
push
popa
add
repnz
jae
push
add
leave
movsl
scas
mov
clc
repnz
jae
mov
add
add
add
push
clc
repnz
jae
add
mov
add
clc
repnz
jae
cmp
mov
xor
fwait
cld
nop
jmp
xchg
or
jne
testl
data16
cmp
xor
add
clc
repnz
jae
jo
fldt
lcall
add
add
idivl
jbe
clc
repnz
jae
add
negl
mov
clc
repnz
jae
sbb
fimull
nop
jae
pop
aad
add
in
add
cmpsb
add
imulb
mov
repnz
inc
cltd
mov
adc
jae
add
mov
cmp
fildl
xchg
ret
sub
xor
movsl
add
mov
cld
nop
jmp
add
xor
sbb
jne
je
repnz
jae
fs
mov
add
stos
testb
cmp
ret
add
adc
sar
nop
jae
push
add
fwait
add
add
push
clc
repnz
jae
aad
mov
leave
outsb
rep
push
mov
xchg
ret
mov
pop
add
or
fwait
cld
nop
jmp
jo
pop
idiv
mov
clc
repnz
jae
add
fistpl
push
out
adc
clc
repnz
jae
cmp
add
xor
cli
jne
clc
repnz
jae
add
push
adc
clc
repnz
jae
add
fwait
jbe
add
cmpl
fwait
cld
nop
jmp
adc
add
pop
jl
repnz
add
fwait
cld
nop
jmp
add
add
mov
fwait
add
fwait
cld
nop
jmp
icebp
cmp
add
pusha
add
xor
clc
repnz
jae
mov
or
divl
pop
mov
mov
xchg
ret
add
mov
clc
repnz
jae
push
xor
rorl
repnz
jae
mov
mov
add
dec
ficompl
repnz
jae
shl
add
add
mov
add
clc
repnz
jae
add
clc
repnz
jae
add
jo
divl
mov
je
cmpsl
loopne
test
int
add
clc
repnz
jae
xchg
movsl
jl
xor
mov
clc
repnz
jae
mov
sbb
mov
add
mov
add
inc
adc
repnz
jae
add
add
incl
mov
push
roll
xchg
ret
add
sbb
push
clc
repnz
jae
push
add
jnp
fwait
cld
nop
jmp
pop
add
mov
cmp
jae
cld
nop
jmp
jmp
mov
jmp
mov
sbb
pop
fisttpll
add
repnz
jae
add
jne
push
push
mov
xchg
ret
add
xor
movb
jne
clc
repnz
jae
add
inc
ja
push
jmp
add
jl
add
add
and
je
clc
repnz
jae
add
jo
popa
fwait
cld
nop
jmp
sbb
add
les
mov
xchg
ret
or
adc
pop
lods
clc
repnz
jae
add
add
jae
repnz
jae
add
add
pop
clc
repnz
jae
icebp
add
xor
add
jo
adc
pushf
es
clc
repnz
jae
push
mov
clc
repnz
jae
add
push
fwait
cld
nop
jmp
roll
movsl
jnp
and
xor
fldpi
inc
add
mov
add
mov
mov
add
clc
repnz
jae
fcmovnb
pop
add
add
mov
loope
repnz
jae
xor
cmp
jne
clc
repnz
jae
add
jmp
fwait
cld
nop
jmp
add
fbstp
aaa
push
fwait
cld
nop
jmp
add
loope
fcomip
mov
loop
add
pop
clc
repnz
jae
sarl
pusha
add
in
push
add
dec
add
add
add
or
xor
clc
repnz
jae
pop
xchg
pusha
add
add
push
mov
xchg
ret
sbb
movsl
add
xor
push
imul
nop
jae
add
add
add
inc
and
clc
repnz
jae
push
add
idivl
mov
xor
add
add
clc
repnz
jae
fs
add
add
mov
clc
repnz
jae
add
sysenter
pop
xorl
clc
repnz
jae
add
addb
lret
push
clc
repnz
jae
or
add
filds
add
push
pop
mov
add
add
add
jne
fwait
cld
nop
jmp
xor
add
jmp
add
xor
add
jl
pop
push
lcall
roll
xchg
ret
add
add
add
mov
clc
repnz
jae
notl
add
push
cmp
call
push
mov
xchg
ret
call
add
jne
mov
clc
repnz
jae
icebp
sub
incb
add
mov
clc
repnz
jae
mov
sbb
movb
test
fwait
cld
nop
jmp
dec
sub
pusha
add
add
add
mov
cmp
ret
add
xchg
add
push
mov
xchg
ret
add
add
sldt
testb
xor
cmpl
repnz
cmp
adc
outsl
arpl
add
repnz
jae
pop
add
add
add
clc
repnz
jae
add
add
test
add
nop
jae
push
mov
popa
inc
add
xchg
repnz
jae
pusha
fs
jns
out
addb
xchg
jg
dec
and
clc
repnz
jae
movsl
dec
leave
loope
cltd
mov
fwait
cld
nop
jmp
add
mov
cmp
clc
repnz
jae
add
add
clc
repnz
jae
add
pop
add
add
cld
nop
jmp
and
mull
add
add
push
add
xchg
clc
repnz
jae
add
add
dec
mov
inc
add
sub
fcmovbe
inc
add
add
mov
add
mov
xchg
ret
add
add
les
cmp
repnz
jae
jmp
leave
add
clc
add
push
mov
xchg
ret
xor
mov
jmp
repnz
jae
testl
movsb
add
test
jae
add
mov
add
mov
pusha
clc
repnz
jae
cmp
add
xor
add
sub
clc
repnz
jae
push
mov
add
add
clc
repnz
jae
jnp
sub
add
add
push
push
mov
xchg
ret
mov
add
add
add
clc
repnz
jae
jl
dec
nop
add
incl
dec
add
add
add
testl
push
clc
repnz
jae
add
mov
pop
cmp
fwait
cld
nop
jmp
mov
mov
xor
xlat
test
mov
nop
jae
lahf
sbb
es
add
jnp
add
cld
nop
jmp
xor
mov
mov
call
repnz
jae
mov
jns
cmp
add
inc
add
push
mov
xchg
ret
push
jnp
add
decb
nop
jmp
add
mov
add
cld
cmpw
fwait
cld
nop
jmp
add
and
clc
repnz
jae
jmp
mov
sub
clc
repnz
jae
jbe
mov
or
repnz
jae
dec
add
les
clc
repnz
jae
mov
or
sahf
mov
clc
repnz
jae
adc
add
push
mov
xchg
ret
pusha
add
pushl
outsb
je
repnz
jae
add
inc
jge
out
out
clc
clc
repnz
jae
add
add
imul
jae
add
jl
add
and
mov
xchg
ret
fistl
add
ss
repnz
jae
add
pop
mov
nop
jmp
roll
or
add
je
cld
call
clc
repnz
jae
add
sarl
enter
jae
ss
add
jl
add
ret
clc
repnz
jae
xor
push
push
add
push
pop
pusha
push
mov
xchg
ret
xor
add
sub
adcb
clc
repnz
jae
add
add
push
add
sbb
jo
add
sbb
add
mov
fwait
cld
nop
jmp
xchg
leave
pop
xorl
roll
xchg
ret
add
add
add
add
add
clc
repnz
jae
fildl
jmp
popa
add
mov
pop
push
mov
xchg
ret
pop
dec
add
add
add
ljmp
add
or
jmp
sti
clc
repnz
jae
pop
sarl
add
rolb
sahf
add
clc
repnz
jae
add
pop
testl
popa
fwait
cld
nop
jmp
pop
add
jne
scas
xor
clc
repnz
jae
dec
fcmovnu
add
cld
nop
jmp
pusha
add
xchg
icebp
decb
fcoms
mov
xchg
ret
mov
roll
dec
pop
sub
nop
jmp
sbb
lahf
xor
sbb
pushl
clc
repnz
jae
mov
dec
aaa
cmp
test
clc
repnz
jae
jns
mov
mov
mov
call
fwait
cld
nop
jmp
movsl
or
jnp
add
mov
repnz
jae
mov
add
lock
nop
jae
pusha
adc
cmpsl
fmuls
filds
xchg
ret
decb
and
jmp
jmp
add
add
shll
add
clc
repnz
jae
mov
add
insb
inc
jb
clc
repnz
jae
add
loope
jne
clc
repnz
jae
add
add
add
sbbb
pushl
insb
and
fwait
cld
nop
jmp
add
pushl
clc
repnz
jae
mov
filds
aad
dec
xor
clc
repnz
jae
mov
jnp
add
fwait
cld
nop
jmp
loope
add
cmp
jg
clc
repnz
jae
xor
testl
add
add
fwait
cld
nop
jmp
jbe
sldt
inc
movb
dec
clc
repnz
jae
dec
mov
add
mov
xor
sbb
ss
add
mov
cmp
xor
mov
jmp
and
jo
add
push
clc
repnz
jae
add
add
jmp
dec
fwait
cld
nop
jmp
sbb
or
add
inc
add
mov
clc
repnz
jae
jnp
or
mov
sub
repnz
jae
leave
mov
push
add
clc
repnz
jae
lahf
mov
lahf
add
xchg
enter
push
mov
xchg
ret
push
add
movsl
leave
mov
mov
xchg
ret
add
xor
add
outsb
push
push
mov
xchg
ret
add
add
mov
cmp
repnz
jae
mov
jmp
divps
test
repnz
jae
mov
add
clc
repnz
jae
mov
incb
add
push
mov
xchg
ret
sbb
add
add
call
clc
repnz
jae
jl
mov
fwait
add
fwait
cld
nop
jmp
dec
mov
jl
add
add
aad
movzwl
push
mov
xchg
ret
add
test
aad
add
repnz
jae
add
repz
repnz
jae
sub
add
add
add
dec
lea
fwait
cld
nop
jmp
mov
add
mov
jnp
xchg
jl
add
clc
repnz
jae
push
add
add
jl
sbb
cld
nop
jmp
testl
clc
repnz
jae
add
xchg
push
add
add
mov
push
mov
xchg
ret
add
jae
and
push
mov
xchg
ret
sbb
jne
add
shr
clc
repnz
jae
mov
add
subl
clc
repnz
jae
add
add
sub
inc
add
cmp
fs
add
clc
repnz
jae
add
insb
push
clc
repnz
jae
add
add
fwait
add
add
jno
mov
push
mov
xchg
ret
add
add
add
adc
pop
pop
clc
repnz
jae
testl
add
xor
enter
adc
repnz
jae
pusha
pusha
xor
mov
pop
pusha
add
push
mov
xchg
ret
add
add
xchg
add
add
push
mov
xchg
ret
add
add
add
mov
push
mov
xchg
ret
add
cmp
sub
sub
clc
repnz
jae
pop
add
add
add
clc
repnz
jae
filds
jmp
dec
add
push
mov
xchg
ret
push
mov
push
mov
clc
repnz
jae
push
leave
add
push
clc
add
fiaddl
xchg
ret
lldt
mull
mov
dec
adc
repnz
jae
add
cwtl
mov
clc
repnz
jae
adc
jmp
loopne
cmc
inc
add
repnz
jae
add
add
mov
add
fwait
cld
nop
jmp
dec
mov
add
cmp
sti
clc
repnz
jae
add
add
add
add
div
fwait
cld
nop
jmp
testl
mov
repnz
jae
mov
add
mov
jae
repnz
jae
add
pop
jns
add
test
cmpsl
or
nop
jae
movsl
sub
aam
shrl
loop
clc
repnz
jae
add
add
add
add
cmp
repnz
jae
add
or
push
add
add
xchg
fsts
repnz
jae
mov
mov
add
fwait
cld
nop
jmp
add
aad
add
pusha
pop
or
xor
add
clc
repnz
jae
jo
jg
clc
push
mov
xchg
ret
add
add
mov
add
leave
clc
repnz
jae
add
push
mov
jl
add
repnz
jae
add
lahf
add
outsb
mov
clc
repnz
jae
jmp
xchg
mov
xor
test
fwait
cld
nop
jmp
jne
push
add
adcl
sbb
clc
repnz
jae
loope
add
mov
xchg
add
or
or
decl
pop
dec
add
add
add
mov
inc
and
repnz
jae
push
pop
jo
add
jo
rolb
mov
cld
nop
jmp
mov
mov
jg
dec
or
repnz
jae
add
add
testl
stos
push
mov
xchg
ret
add
xor
add
jns
movsb
push
mov
xchg
ret
or
add
cmp
test
clc
repnz
jae
jo
icebp
mov
or
repnz
jae
xor
dec
cmp
pushf
call
fwait
cld
nop
jmp
sbb
pop
jne
clc
repnz
jae
push
adc
or
nop
jae
dec
add
add
inc
sahf
pop
clc
repnz
jae
mov
push
mov
rolb
test
dec
or
repnz
jae
jns
add
mov
fwait
cld
nop
jmp
xor
jl
add
push
add
cmpl
fwait
cld
nop
jmp
loope
add
jne
clc
repnz
jae
incl
scas
je
fwait
cld
nop
jmp
add
jbe
jns
movsl
clc
repnz
jae
add
mov
add
add
clc
repnz
jae
incb
mov
adc
out
lcall
mov
stos
mov
push
mov
xchg
ret
add
add
add
in
aas
add
jne
add
xchg
testb
add
add
push
add
cmp
pop
push
add
sub
add
test
lods
cld
fcompl
enter
in
iret
bound
mov
sbb
xchg
add
adc
add
fmull
in
sbb
jb
and
jno
add
test
mov
sub
movsb
add
jb
adc
lret
push
push
out
into
dec
add
jnp
mov
int
push
sub
pop
dec
je
lcall
add
push
mov
jmp
stos
mov
fidivl
add
cmp
add
push
add
mov
test
add
imul
test
clc
test
dec
mov
pop
aad
add
xchg
dec
mov
mov
add
andl
imul
mov
add
add
mov
clc
or
pop
ja
or
add
cld
adc
add
pop
loope
movsl
loop
sbb
mov
jle
in
ljmp
cmc
adc
add
std
std
lahf
in
test
inc
add
mov
fidivs
mov
enter
fisubs
xchg
add
in
lea
add
add
mov
repnz
mov
sub
adc
mov
data16
pop
jmp
add
or
popf
push
add
xchg
add
add
mov
mov
cwtl
clc
sahf
mov
push
add
mov
mov
or
cmp
cmp
add
push
add
xchg
fsubl
ret
add
stc
stos
loopne
incl
push
dec
fdivl
mov
cmp
sbb
mov
or
aam
imul
ja
mov
loopne
iret
int3
fidivrl
rolb
in
or
pop
mov
iret
adc
add
loopne
cmp
add
add
addb
cmp
mov
add
fcmovne
gs
add
cmp
and
mov
pusha
add
add
adc
lea
adc
jbe
add
or
std
mov
fbld
add
ret
sbb
sbb
dec
sbb
add
insb
pop
push
add
or
pop
repz
into
int
stos
push
aam
xor
add
add
add
dec
jge
add
movsb
add
add
stos
cltd
add
frstor
cmc
icebp
out
cmpsl
xchg
in
sbb
mov
aam
lret
dec
das
pop
dec
idivl
outsl
stos
cmpsl
bound
mov
hlt
add
jg
fwait
repnz
cmp
mov
das
stos
pop
pushf
cli
clc
pop
push
add
xor
in
mov
imul
mov
loopne
outsb
arpl
sub
mov
add
into
enter
mov
adc
pop
adc
add
add
or
movb
add
out
xchg
add
loope
arpl
add
add
mov
xchg
iret
sbb
add
je
jg
add
stos
pop
jmp
add
jmp
mov
data16
mov
mov
add
cli
xchg
push
add
jmp
sub
daa
ja
add
add
cwtl
mov
add
add
iret
add
add
dec
push
mov
pop
adc
sbb
cwtl
sbb
xor
xchg
add
and
pop
jne
cltd
loopne
addb
jle
das
jo
sahf
ficoml
fstp
push
add
dec
xor
add
or
and
jb
ljmp
repz
add
clc
inc
add
xor
jo
and
mov
pop
dec
addb
out
sbb
data16
mov
dec
out
xchg
bound
mov
data16
add
std
loop
ds
xor
xchg
add
pop
xchg
std
mov
add
mov
les
mov
adc
movl
in
add
mov
mov
add
add
add
rcrl
push
add
mov
and
add
addb
sub
mov
lods
loopne
xchg
add
add
pop
sbb
add
add
les
std
pop
jle
test
jp
dec
push
add
add
les
push
add
pop
fisttpl
mov
add
mov
testb
mov
xchg
xchg
add
mov
popf
mov
mov
dec
push
add
jbe
jl
mov
and
jae
lds
add
shrl
jb
ljmp
mov
add
xor
fsubrl
push
addb
xor
scas
loop
dec
mov
lods
push
jge
inc
add
add
push
adcl
mov
add
add
shll
mov
add
add
jb
rcll
add
pop
stos
ljmp
and
mov
fwait
xchg
pop
sub
mov
ret
inc
dec
mov
add
mov
add
and
ret
testl
push
add
lods
loop
addb
add
add
add
push
add
push
mov
cld
outsb
inc
add
lock
xchg
xor
lahf
jo
xor
dec
aad
repnz
or
add
add
mov
and
cmc
pop
xor
cli
add
add
cmp
add
mov
add
dec
stos
xchg
mov
push
add
lret
add
add
add
add
xlat
mov
cs
inc
add
in
add
pusha
add
jle
push
mov
pop
add
push
push
add
xlat
add
mov
add
dec
push
add
push
or
add
clc
std
js
pop
adc
js
add
out
stos
rolb
sbb
mov
xor
add
addb
add
add
jg
loopne
jp
add
push
add
testb
add
insb
pusha
add
or
push
movb
add
add
popf
jne
add
inc
mov
mov
mov
mov
xchg
xchg
addb
dec
push
or
add
mov
add
xor
fisttpl
dec
and
mov
add
iret
pop
and
mov
jo
sbbl
icebp
enter
add
ljmp
jmp
xor
and
add
ficomps
pop
inc
add
fdivl
sub
out
loope
mov
fcompl
int
add
add
add
lret
push
push
add
repnz
push
add
data16
add
inc
adc
inc
add
dec
out
pop
xchg
push
add
js
adc
inc
add
add
mov
mov
xor
cmc
loope
xor
fisubl
add
mov
lods
xor
inc
add
aaa
stc
pop
in
lcall
sbb
mov
and
mov
and
aas
lock
ficompl
pop
push
fsubrp
adc
add
lea
adc
add
cmp
gs
sbb
shll
add
push
add
add
add
add
add
lods
icebp
jbe
xchg
add
add
push
add
pop
in
mov
pop
rolb
sbb
out
in
xor
popf
mov
or
inc
add
popa
mov
push
add
lock
jo
pop
js
dec
lock
stos
out
sbb
add
xor
jb
aam
dec
mov
pop
pop
lret
icebp
dec
cmp
fiadds
mov
add
loop
inc
add
movsb
add
dec
cmp
cld
xchg
leave
cmp
add
jl
jae
stc
mov
movsb
add
rolb
push
add
mull
or
repnz
insb
xchg
and
mov
xchg
adc
les
cltd
xchg
add
bound
mov
imul
or
data16
das
cli
test
xor
mov
sub
add
daa
xor
lock
lods
xchg
add
add
js
add
mov
subps
inc
add
lods
scas
enter
add
out
mov
fisttpll
int
add
lret
js
pop
ja
hlt
add
fiadds
add
mov
aam
in
pop
cld
xor
push
or
mov
add
jbe
cmpsl
xchg
xchg
sbb
mov
mov
rolb
inc
gs
add
mov
mov
ljmp
add
and
add
pop
mov
adc
add
pop
sarl
add
pop
mov
jp
sarl
add
in
mov
push
add
fidivs
add
dec
sub
mov
pop
testb
nop
add
imul
mov
or
sub
lahf
jecxz
rolb
addb
xchg
test
fidivs
insb
sub
dec
jle
jne
pop
dec
loopne
and
popf
push
mov
bound
mov
fadds
add
pop
rolb
add
mov
stc
mov
adc
shrl
add
lock
push
add
das
int3
push
add
test
inc
or
add
push
adc
or
add
add
jp
add
jl
push
add
jge
pop
pop
lods
hlt
add
cmp
sub
add
add
mov
cwtl
or
rsm
fs
rolb
testb
add
sbb
sub
filds
mov
ljmp
add
lods
push
add
movsl
xchg
add
aam
hlt
add
mov
and
call
add
inc
add
add
mov
push
js
push
pop
testb
fsub
add
loop
aas
xchg
add
or
inc
add
add
add
sbb
inc
lods
int
mov
cmp
stos
cmp
add
add
shll
pop
gs
sbb
out
xchg
add
mov
mov
fld
outsl
fucom
add
mov
pusha
add
pop
cmpsl
cmp
mov
imul
add
jns
mov
add
xor
mov
add
addb
cmpsb
add
or
fnsave
arpl
jge
add
ret
dec
add
mov
sub
add
add
test
push
add
add
mov
sub
or
add
cmp
inc
add
add
les
mov
lds
fwait
adc
iret
sub
add
mov
add
rolb
test
imul
ret
mov
mov
lds
xchg
loop
pop
adc
add
add
push
add
cmp
aas
outsl
mov
popa
adc
add
out
mov
mov
jb
cltd
iret
out
in
clc
and
mov
data16
xor
ljmp
add
dec
xor
sub
dec
mov
add
push
add
daa
or
hlt
add
repnz
les
xchg
add
rcr
ficomps
scas
fcmove
pop
mov
js
add
add
out
shll
loope
add
add
xor
jp
dec
inc
adc
test
ja
movb
add
test
add
rorl
stos
leave
push
sbb
add
jne
sbb
push
add
jg
popf
mov
jge
lods
mov
imul
add
orl
add
add
insb
add
pusha
add
add
aad
lds
push
add
lock
movsb
add
mov
test
sar
or
les
or
pop
or
push
add
jg
pop
addb
out
sbb
xchg
fmul
add
mov
scas
add
mov
add
test
pop
outsl
xchg
add
mov
sbb
or
out
and
mov
mov
test
movsb
add
mov
pop
aam
xchg
add
add
add
or
add
xchg
add
add
rcll
aam
mov
push
in
and
mov
add
test
pop
ret
testb
aaa
add
iret
pop
je
push
add
mov
lret
jbe
aam
push
add
lret
addb
or
mov
rolb
jnp
popa
dec
inc
add
add
adc
mov
insb
cmp
add
add
mov
add
add
mov
or
or
add
jle
cmpsb
add
sarl
imul
mov
jno
xor
in
sti
das
aad
dec
cmpsb
add
push
add
mov
cmp
in
jmp
add
ds
adc
testb
cli
jecxz
lods
mov
faddl
mov
aaa
std
push
add
add
add
or
sub
mov
mov
dec
int3
jp
lock
cmc
cli
sub
xchg
push
mov
xchg
adc
hlt
add
xor
jns
mov
negl
add
push
add
inc
sbb
add
jl
add
add
add
inc
add
push
add
jecxz
pop
adc
jo
cmp
add
nop
add
ljmp
in
sbb
add
push
add
mov
stc
pop
mov
loope
rolb
adc
mov
jmp
push
add
fst
add
or
lods
add
add
add
add
pop
mov
add
lret
cmc
jg
mov
pop
data16
and
mov
stos
loope
mov
fucom
bound
mov
cli
inc
add
incl
xchg
push
int
data16
arpl
cmp
mov
aaa
and
test
icebp
insb
sti
add
add
add
scas
fcmove
push
cld
fsubrl
stc
inc
add
lds
in
xor
rolb
lret
int
add
das
inc
repz
adc
sbb
repz
and
push
add
add
xor
repnz
in
add
add
add
add
push
add
inc
add
fs
and
in
test
mov
inc
jne
jbe
sbb
cld
das
and
mov
or
inc
add
mov
out
xchg
stos
enter
sti
ds
mov
loope
mov
mov
outsb
sbb
add
add
or
adc
mov
cmp
inc
ret
leave
adc
cs
addb
sub
xchg
add
sub
add
or
sub
jmp
mov
add
lahf
pop
pop
scas
repz
add
add
jb
sbb
add
push
add
cmp
add
mov
add
xchg
add
fadds
mov
pop
push
add
aaa
daa
inc
adc
sub
bound
mov
mov
add
add
inc
add
mov
int
adc
test
xor
shl
xor
xchg
add
mov
add
mov
jo
push
into
mov
insl
insl
pop
adc
icebp
pop
imul
dec
movb
std
mov
jecxz
add
leave
xchg
add
add
imul
ja
pop
mov
daa
cli
push
add
add
add
in
lret
fwait
mov
js
mov
sub
add
mov
mov
mov
scas
and
mov
add
mov
mov
outsl
mov
xchg
add
add
cmp
xchg
add
shr
add
nop
add
fdivs
add
add
mov
adc
insl
and
mov
xchg
adc
icebp
pop
repnz
sub
adc
add
add
out
push
add
add
push
add
mov
xchg
fnstenv
push
add
mov
stc
mov
cmpsb
add
add
into
add
add
clc
or
and
add
add
add
add
mov
dec
int
add
add
and
ret
sub
add
or
scas
aam
outsl
mov
jp
nop
add
enter
ficomps
icebp
loope
popa
out
aaa
mov
rolb
inc
add
jbe
in
push
add
test
dec
push
add
addr16
add
add
mov
add
popf
jg
add
imul
jecxz
pop
pop
push
ret
add
out
xchg
xchg
add
add
push
add
scas
scas
pop
das
imul
ljmp
ret
sbb
add
pop
jbe
ds
popf
pop
jno
jecxz
add
add
add
add
pop
mov
add
mov
jmp
testb
push
jo
push
add
add
add
add
and
mov
push
add
add
add
cmc
push
sub
add
std
in
scas
lret
jmp
lds
add
lock
fcomps
dec
das
mov
add
pop
popa
jecxz
fsubs
add
iret
pop
mov
dec
ds
add
cmp
mov
lods
dec
sbb
xchg
inc
add
outsb
flds
add
or
add
rcr
inc
out
xor
push
add
jge
add
add
fdivs
fisttpll
add
loopne
or
sbb
dec
push
add
pusha
add
add
or
loopne,pn
ret
loop
outsl
mov
mov
mov
add
add
add
mov
sbb
mov
ljmp
jbe
cs
stc
sub
pop
mov
addb
shl
das
mov
add
add
sub
add
add
adc
xchg
rolb
sub
mov
or
sbb
sbb
xchg
add
stos
sub
sbb
ds
and
or
add
in
mov
add
stos
sub
mov
gs
add
fsubl
mov
cmp
sbb
or
push
add
dec
outsb
jnp
adc
andl
xchg
add
js
add
xchg
xchg
jae
add
add
push
add
inc
add
or
daa
jnp
pop
pop
mov
add
add
sahf
scas
roll
push
add
lret
add
jb
cmp
jmp
adc
leave
add
outsb
testl
mov
mov
add
dec
gs
les
xchg
dec
push
add
mov
add
pop
jg
test
sahf
ss
aaa
outsl
dec
outsl
pushf
xor
ljmp
mov
insb
dec
xor
addb
enter
cmpl
add
imul
sbb
test
mov
scas
sahf
mov
addr16
outsb
aam
jl
imul
add
addb
cmp
iret
push
add
mov
add
and
xchg
add
add
outsb
popa
fsubrl
xor
or
jnp
add
add
in
or
les
in
mov
add
mov
jge
cli
mov
pop
add
insb
mov
fnstenv
add
xchg
xchg
add
adc
mov
add
adc
cmp
lea
iret
pop
imull
mov
mov
pusha
add
pop
lahf
mov
add
or
add
add
inc
popa
dec
xchg
lret
dec
dec
mov
rolb
roll
adc
or
in
sbb
pushf
cmpsb
add
add
mov
add
sub
mov
das
mov
add
das
sbb
fsubrl
negl
stos
sbb
fcomps
outsb
and
jp
sub
mov
cltd
mov
inc
bound
mov
add
cmp
dec
cmp
mov
add
mov
adc
cmp
add
or
push
add
and
vmulpd
mov
insb
add
xor
addb
xlat
loop
adc
add
sub
fwait
out
sbb
add
inc
add
into
mov
add
add
add
add
adc
add
xchg
add
mov
addr16
xor
out
or
add
add
jne
addr16
in
mov
add
add
lods
sbb
cmp
stos
pandn
cli
adc
jg
mov
push
add
add
add
push
sub
and
mov
jnp
hlt
add
dec
call
add
scas
pop
push
stos
add
aam
aam
or
add
add
fdivl
ja
add
mov
add
sti
xorl
test
push
add
lahf
and
mov
stc
fiadds
add
sub
mov
fucom
sti
cmpsl
repnz
popa
icebp
rolb
inc
and
testl
jl
lock
mov
add
jp
outsb
gs
xchg
testb
push
addb
negl
jne
dec
int
push
gs
sti
sbb
mov
fcom
add
adc
add
xchg
add
add
dec
or
mov
add
pop
mov
xlat
fidivrs
adc
add
repnz
loope
in
out
mov
add
jae
imul
xchg
add
fwait
in
rolb
and
mov
scas
mov
or
xchg
add
push
je
loopne
iret
out
cvtpi2ps
pop
gs
cli
lea
add
outsl
mov
test
or
mov
lret
data16
adc
lods
aam
or
popf
mov
xor
push
jle
and
pushf
cmp
xor
adc
add
pop
pop
insb
or
add
add
sub
dec
lahf
sub
xchg
ret
mov
daa
test
out
pop
ja
dec
push
cmpsl
je
xor
fwait
adc
testb
push
sub
add
popf
inc
add
xor
adc
cmpsl
add
mov
cmp
push
cmpsb
add
xchg
add
pop
xchg
mov
mov
lret
dec
mov
jecxz
add
add
push
push
add
enter
add
xchg
inc
push
mov
insb
and
mov
dec
psrlw
jbe
push
sbb
adc
iret
dec
and
mov
add
lret
insl
rorl
int3
mov
cwtl
cmp
add
push
add
out
inc
in
mov
add
sbb
add
ret
lret
imul
mov
add
cmpsl
icebp
les
sub
xchg
jmp
pop
js
daa
xor
add
rolb
add
mov
dec
lock
xchg
add
add
insl
add
mov
or
add
in
add
mov
addb
mov
fstl
add
push
add
push
add
data16
sbb
add
add
add
mov
add
mov
fisubs
fistpl
add
arpl
or
or
push
add
adc
jge
add
push
lods
addb
or
pushf
sbb
fwait
inc
xchg
in
add
xchg
lret
insb
add
mov
je
aas
test
add
std
stos
popa
loop
jne
push
add
mov
mov
jb
call
add
add
xchg
xor
cmpsb
add
cld
inc
add
test
add
add
cmp
mov
movb
jmp
js
inc
inc
xor
int3
xlat
xchg
add
mov
or
xchg
aaa
addb
stos
pop
xor
cmp
add
mov
push
add
add
lahf
push
rolb
mov
add
out
fidivl
push
insl
ret
push
add
push
mov
sbb
mov
aaa
test
pop
in
push
sub
add
xor
add
sbb
hlt
add
add
xor
fisubl
sti
cmc
adc
xchg
or
adc
jae
adc
popf
mov
repnz
dec
subl
repnz
sub
lret
int
add
out
or
insl
lds
or
test
add
out
or
jo
jp
data16
and
dec
and
add
add
add
add
test
lods
mov
iret
mov
add
mov
push
jl
mov
or
lea
add
sub
rolb
out
jl
cmpsb
add
clc
dec
movsl
imul
pop
lcall
add
push
or
add
add
mov
add
mov
clc
stc
aas
popa
mov
add
or
mov
mov
int
inc
add
call
xchg
add
loope
out
outsb
test
add
pushf
daa
dec
jo
xchg
sub
jge
cmc
push
inc
add
add
imul
cmp
scas
push
sarl
mov
bound
mov
add
sbb
gs
mov
das
popf
clc
ljmp
and
mov
lds
fildl
add
sub
push
data16
movsl
sub
into
mov
add
sbb
jge
mov
dec
mov
mov
repnz
add
cwtl
xchg
add
loope
fbstp
xchg
add
add
add
add
mov
xchg
add
aas
jg
mov
das
pop
inc
add
popa
or
xchg
add
jne
ljmp
cltd
std
frstor
xchg
add
mov
add
sbb
mov
add
cmp
jge
rolb
sub
mov
inc
in
push
add
mov
add
cmp
dec
shrl
cmp
into
mov
loopne
jmp
dec
lods
popa
push
add
mov
repz
cmpsl
pop
sti
lret
je
inc
add
lea
jo
loop
jg
in
mov
push
add
push
jns
inc
add
xor
fisttps
dec
outsb
repnz
popf
hlt
add
mov
xlat
xor
add
mov
mov
outsb
sub
sub
pop
fdivs
pop
xor
and
icebp
shr
cmc
jge
xchg
add
stos
lock
add
addb
add
lds
jg
addb
rolb
pusha
add
sbbl
aas
int
and
mov
or
add
arpl
ljmp
mov
add
pop
pop
mov
cmp
into
dec
mov
mov
add
sub
scas
push
mov
fiadds
mov
add
add
stc
repz
mov
rolb
mov
xlat
cltd
mov
outsl
xchg
add
popa
push
add
add
aaa
or
xchg
add
pop
xor
push
add
sub
lock
push
sbb
lods
pop
cmp
or
call
roll
mov
or
add
cmc
ret
popf
add
mov
test
mov
add
xlat
movsl
push
xchg
int3
mov
add
add
dec
mov
mov
mov
add
sbb
ret
cs
add
mov
add
mov
add
add
add
mov
gs
addb
add
inc
fnsave
pushf
xchg
sbb
add
mov
lods
lea
in
cmc
bound
mov
add
aam
or
add
add
popf
jmp
bound
mov
add
loope
mov
les
cmp
sbb
xchg
daa
dec
push
add
mov
mov
and
mov
add
outsl
mov
add
shrl
mov
add
rolb
or
add
xchg
sub
mov
push
pop
cwtl
roll
add
add
mov
pusha
add
addb
add
mov
or
add
jbe
pop
les
sbb
add
sbb
ljmp
mov
add
fadd
xchg
add
outsb
inc
add
jb
and
cmp
dec
jae
or
dec
mov
adc
std
out
dec
std
mov
add
pop
sub
into
mov
add
sbb
mov
outsl
jno
sub
and
in
push
add
cmp
cltd
jb
xor
jns
add
mov
jg
xchg
add
dec
clc
aas
lods
fadd
add
xchg
aad
inc
add
add
scas
sub
addb
add
cmp
popf
dec
mov
pop
pop
sbb
bswap
or
add
mov
mov
mov
push
add
test
xor
jno
xchg
addb
add
add
xchg
add
mov
add
push
sbb
sahf
sbb
inc
outsl
cmc
sub
clc
or
mov
inc
add
add
mov
inc
mov
and
push
add
lods
jne
and
mov
add
cmp
or
addb
clc
jnp
out
nop
add
imul
imul
add
add
or
add
jae
dec
jmp
scas
movb
out
rolb
mov
pop
push
movq
cmp
mov
lds
cmc
inc
add
xchg
repz
mov
mov
scas
in
sub
loope
lds
jbe
mov
and
mov
and
add
ret
add
sti
sbb
loopne
in
in
rolb
cmp
pop
dec
pop
mov
addr16
inc
add
inc
sbb
popa
ror
mov
add
pusha
add
add
push
mov
add
add
adc
clc
lcall
push
add
xor
lea
jge
mov
cmp
add
pop
loopne
call
push
add
push
add
lret
cltd
jno
add
inc
add
add
cld
int
mov
xchg
and
mull
pop
mov
cmp
inc
add
movb
sub
mov
fnstsw
push
test
dec
notl
xor
sahf
cltd
das
and
add
arpl
addb
adc
addb
inc
add
add
enter
adc
adc
popf
push
inc
add
pop
xlat
pop
adc
push
ja
add
xchg
bound
mov
mov
add
add
test
mov
add
push
cmpsb
add
rolb
lret
pop
testb
add
add
lret
popa
mov
hlt
add
and
mov
add
mov
mov
imul
add
shl
in
or
add
mov
mov
test
jg
add
mov
or
or
add
mov
orl
rolb
add
hlt
add
js
divl
scas
push
add
add
fldt
repnz
add
dec
in
xchg
add
xor
das
cmpsl
fnstsw
mov
in
adc
scas
sub
pop
adc
push
pop
sarl
out
lret
ljmp
pop
mov
xchg
sbb
push
add
or
cltd
mov
gs
add
add
cld
mov
les
adc
jno
fstps
loopne
pop
push
cltd
scas
inc
pop
movsb
add
xchg
add
jecxz
add
xchg
add
outsb
mov
imul
cmpsl
outsb
or
add
ret
pop
mov
cmp
add
pop
andl
mov
jmp
ud2
loop
jns
jecxz
inc
add
stos
ds
lret
add
cmp
add
nop
add
push
add
setns
add
add
jecxz
add
sahf
lds
sar
out
add
xor
pusha
add
add
outsb
pushf
cmc
cmp
add
or
xor
stc
js
push
in
adc
add
cmp
sub
test
push
push
add
ret
add
mov
int3
iret
lea
out
push
leave
lods
dec
fcomps
inc
add
dec
pop
shll
xor
push
add
repnz
pop
test
push
add
addb
cmp
mov
push
add
mov
add
jnp
add
add
add
test
xchg
add
scas
inc
and
sbb
bound
mov
pop
nop
add
push
mov
push
add
add
add
sub
add
cmp
add
icebp
sbb
xchg
add
incl
adc
repz
fistps
xchg
add
addb
mov
push
push
add
add
popa
ffreep
add
add
pop
notl
cmpsb
add
stos
rcrl
jle
add
clc
dec
mov
push
add
add
insl
cmc
inc
add
insb
xchg
or
xor
lret
ljmp
push
add
fldt
dec
jge
mov
mov
add
add
add
out
popf
adc
data16
leave
lock
mov
leave
jmp
ja
in
sbb
stos
xchg
jp
add
add
mov
aas
and
pushf
mov
cmp
stos
std
push
add
insb
xchg
add
shl
rolb
je
adc
inc
add
fbstp
add
jbe
dec
out
jne
xor
ds
insl
mov
dec
fsubl
add
fistl
add
loop
pop
fstl
les
hlt
add
add
add
and
add
mov
cmp
add
mov
pop
out
icebp
test
into
je
clc
iret
lahf
mov
add
pop
stos
lcall
xor
jle
add
rolb
cltd
pop
mov
out
insl
inc
mov
jge
cmp
out
xor
jne
popa
adc
inc
add
pop
xchg
add
xor
pushf
rcrl
outsb
jp
inc
fwait
movsl
push
dec
stc
sub
add
in
dec
pusha
add
jle
add
add
jno
add
lret
xchg
add
add
push
add
add
add
pop
xchg
xlat
mov
mov
add
add
addb
add
in
rcrl
xchg
sub
add
add
mov
add
and
out
fsubrl
rolb
jns
add
mov
inc
add
rorl
jl
addb
outsl
push
scas
mov
mov
cmpsl
add
jns
gs
int
out
adc
add
add
push
add
xor
jge
xchg
add
add
pop
mov
add
add
dec
mov
add
push
add
add
add
add
in
add
add
adc
xchg
add
add
add
inc
add
add
jb
mov
fnstsw
mov
jae
pop
sub
add
add
sti
sbb
fists
addb
xchg
add
imul
push
add
jp
or
addb
xchg
add
xlat
mov
dec
mov
lea
push
mov
cmp
inc
mov
push
aam
iret
and
xchg
add
or
add
dec
sbb
add
repz
ret
or
mov
or
inc
add
dec
xchg
add
gs
fstl
mov
xchg
jno
and
mov
add
xchg
add
add
add
loopew
addb
imul
sub
add
or
and
mov
iret
xchg
add
movsl
idivl
mov
xor
fcmovnbe
add
cmp
ja
cmpsl
mov
add
mov
pop
adc
ljmp
js
fstpl
pop
push
add
inc
dec
pusha
add
sbb
lea
mov
cltd
int3
in
cltd
daa
or
sbb
adc
test
sbb
mov
daa
les
mov
adc
xor
xchg
add
add
imul
mov
add
add
and
scas
add
mov
dec
add
in
add
push
lock
add
xlat
cmpsb
add
inc
add
in
lods
xor
aas
popf
mov
ret
inc
jge
cmp
add
add
test
add
out
add
sbb
pushf
push
add
mov
add
xchg
add
sahf
test
xor
mov
mov
jnp
xchg
mov
std
dec
lds
flds
mov
mov
pop
mov
xchg
pop
push
cmp
dec
jne
push
es
push
add
stos
fdivrs
lods
pop
out
in
int
add
add
add
xchg
add
add
nop
add
add
imul
scas
cmp
testb
imul
scas
adc
daa
dec
mov
xchg
add
arpl
jmp
mov
test
add
push
paddb
data16
movb
lods
jo
in
mov
mov
lcall
add
mov
inc
add
mov
inc
add
lret
push
add
add
aad
add
nop
add
ja
addr16
hlt
add
xchg
push
fadds
or
enter
jae
loope
add
jbe
xor
fcompl
arpl
push
add
mov
pop
pop
xor
add
xchg
mov
add
inc
add
add
add
dec
pop
inc
or
les
aad
pop
cltd
outsb
iret
dec
lds
andl
pop
inc
mov
std
roll
dec
xchg
dec
push
pop
add
add
sbb
cld
pop
data16
imul
or
add
push
add
mov
je
xchg
cwtl
mov
mov
add
and
add
addr16
rcl
jne
mov
add
xor
add
add
push
add
and
jmp
add
sub
sbbl
add
push
add
add
add
add
cld
jle
data16
add
jge
xchg
add
mov
add
add
addb
aas
adc
add
or
scas
mov
lods
sti
sub
popf
mov
stc
mov
mov
jae
push
mov
repnz
push
adc
xor
lods
pop
push
testb
cmp
adcl
cs
xchg
add
add
xchg
and
sub
xor
add
sbb
lods
inc
add
hlt
add
mov
inc
add
out
jno
std
adc
mov
push
add
add
int
inc
pop
mov
pop
cs
stc
mov
data16
add
dec
aad
ds
push
add
add
hlt
add
add
push
add
jbe
jnp
loope
add
les
mov
lret
and
dec
cltd
sbb
addb
mov
inc
add
fwait
adc
add
mov
xorps
inc
add
add
aas
push
push
add
add
or
or
xchg
add
sbb
or
std
mov
movsb
add
inc
add
add
iret
bound
mov
lahf
add
iret
add
add
cld
add
mov
cmc
sti
nopl
mov
mov
add
add
outsb
or
jb
js
repz
push
add
pop
sub
cld
repnz
add
dec
push
add
mov
add
lods
mov
rolb
and
cmp
add
popf
cmpsb
add
add
add
cwtl
fcomp
fsubrs
mov
mov
add
insb
and
inc
add
test
out
rolb
mov
jbe
fldl
add
les
movsl
lret
fdivs
fisttpll
leave
mov
int3
jmp
fistpl
xlat
mov
int
outsb
mov
int
or
adc
nop
add
into
mov
cmp
sbb
add
shll
icebp
fcmovb
cmp
xchg
add
add
add
xchg
jg
add
mov
cld
push
add
add
add
gs
add
add
mov
and
std
outsl
sahf
movsl
cli
into
add
mov
inc
add
add
mov
add
add
dec
xor
fisubl
mov
pop
jge
repz
inc
testb
nop
add
add
adc
std
lods
enter
fildl
cmp
pop
mov
add
lea
add
jp
dec
and
mov
add
add
add
pop
scas
xor
add
mov
les
sub
gs
insb
sbb
add
push
adc
or
out
in
ljmp
int3
add
add
popa
cs
in
mov
repz
add
mov
leave
sub
ret
xchg
add
xor
add
insl
pop
xchg
xchg
add
loope
xor
and
xchg
add
mov
lods
mov
addb
add
sub
add
rolb
dec
fsubs
mov
mov
repnz
push
addr16
or
add
mov
add
int3
ljmp
add
push
add
test
xchg
pop
dec
cmp
jmp
jb
jbe
call
mov
dec
test
lahf
insb
das
push
xchg
mov
add
jns
je
xor
sub
ret
push
add
xchg
add
mov
je
jns
add
jl
test
add
push
in
popa
jne
add
fistl
inc
mov
add
add
ret
add
das
repz
and
sub
leave
repz
add
adc
aad
add
fdivr
repnz
insl
add
test
lods
iret
push
push
ds
add
add
add
add
jne
add
mov
adc
test
add
sar
cltd
mov
testl
testb
in
inc
add
add
push
add
repnz
dec
and
mov
add
jmp
inc
add
out
jnp
mov
rolb
jmp
add
mov
lods
fmull
xchg
add
xor
push
sub
and
mov
and
mov
cmp
fldenv
add
add
out
add
jmp
shr
pop
add
inc
cwtl
stc
bound
mov
xlat
sub
add
push
add
testb
inc
mov
or
dec
xchg
add
xchg
jg
cwtl
fadds
add
add
stos
pop
jne
push
add
jp
mov
imul
repz
xchg
sbb
add
add
adc
lods
addr16
hlt
add
cwtl
cmpsl
dec
dec
pop
or
fsubrp
mov
add
add
pop
pushf
inc
mov
jnp
add
ret
pop
hlt
add
adc
add
dec
sub
add
mov
add
sbb
push
add
add
mov
push
mov
test
adc
in
stos
and
mov
daa
fwait
dec
jae
and
arpl
nop
add
or
cmp
add
jb
push
add
insl
cmp
adc
fmull
cmpsb
add
push
xor
jae
sti
aad
add
xchg
push
cmpsb
add
jnp
inc
mov
add
add
sbb
xchg
fldt
xor
mov
push
add
inc
lahf
or
testb
sub
add
jbe
addr16
cltd
adc
and
sub
shll
sub
push
or
mov
add
iret
in
jno
push
add
add
mov
sub
movsl
fmul
leave
adc
xor
inc
stos
das
cli
mov
xor
movsb
add
movsb
add
outsl
test
mov
add
mov
ds
lds
cmpsb
add
loopne
sbb
add
jl
add
add
scas
pop
scas
rolb
arpl
enter
inc
mov
test
bound
mov
push
pop
ret
add
ja
sub
add
push
cld
int
test
adc
inc
clc
lods
data16
lds
mov
xchg
add
push
add
add
mov
and
sar
out
leave
xchg
lahf
aas
loop
fs
cld
or
and
xor
mov
add
add
rcrl
scas
pop
jnp
xchg
cmp
loope
add
fisubs
mov
add
add
dec
adc
sti
inc
add
push
adc
lea
fsubr
inc
rolb
jl
add
mov
add
pop
stc
and
mov
subl
add
jb
xchg
out
fisubrs
adc
mov
and
add
add
fmuls
add
sub
add
inc
add
add
mov
xchg
movsb
add
lret
or
inc
add
clc
fwait
inc
sbb
xor
mov
out
pop
and
stos
add
push
add
das
or
add
add
add
in
mov
add
lock
add
add
subl
stc
jle
push
add
mov
mov
push
mov
lods
aaa
lock
xchg
call
add
add
add
dec
xchg
add
add
out
enter
push
add
add
add
push
sahf
imul
cli
or
add
subl
mov
add
mov
add
sub
ror
fwait
dec
mov
pop
add
dec
popa
dec
jns
pop
das
aas
push
add
pop
ficoms
mov
rcr
pop
loope
cmpsb
add
inc
add
add
add
out
push
add
adc
cmc
adc
sbb
lcall
into
enter
pop
adc
test
pop
mov
loope
cld
dec
pop
cs
jl
out
or
add
loope
sub
add
testl
cmp
jbe
xor
sub
add
nop
add
add
sub
jg
pop
data16
cmp
in
add
add
push
pushf
sub
outsl
insl
mov
andl
add
add
aam
push
add
xor
mov
add
rcrl
push
add
xchg
outsb
fnsave
jns
add
rolb
je
add
add
test
cmp
add
test
push
mov
add
xchg
add
addb
inc
xchg
jl
rolb
and
xor
sbb
add
add
lret
test
or
xor
inc
cmc
push
fidivrs
sbb
push
add
adc
push
and
int3
sub
add
rcll
aaa
push
push
fstpt
sub
push
add
mov
mov
jo
das
xchg
add
and
sub
add
add
add
jns
xor
jl
ss
leave
movsl
leave
cmpsl
cmp
adc
mov
add
fildll
enter
add
mov
in
mov
scas
int
jae
add
cltd
clc
xor
cmp
scas
daa
les
das
dec
and
mov
add
or
shl
add
bound
mov
enter
movb
lods
scas
adc
addr16
arpl
add
adc
add
mov
add
sbb
into
push
dec
not
inc
add
out
add
outsl
lcall
jns
mov
adc
lods
cmp
mov
add
nop
add
add
sub
jmp
add
mov
sbb
inc
add
mov
scas
jb
xorl
hlt
add
ficoms
in
add
call
add
add
sbb
add
mov
lret
in
add
aad
inc
or
mov
xor
inc
ljmp
add
add
std
sub
push
add
mov
add
mov
xor
scas
loop
pop
pop
jno
add
add
xchg
add
add
lret
rolb
les
adc
cmpl
pusha
add
add
add
out
loop
pop
dec
lods
dec
loopne
mov
add
xchg
add
mov
add
mov
das
mov
xchg
add
rcll
ret
mov
add
outsl
movsl
sub
mov
add
nop
add
js
add
push
add
or
cmp
add
adc
xchg
ret
mov
add
add
mov
sub
fadds
cmpsb
add
xlat
fcmovnb
sub
and
bound
mov
testb
or
clc
cmp
pop
xchg
addb
add
add
out
testl
ror
push
aas
les
mov
testb
add
mov
add
in
and
mov
xchg
xor
sbbl
add
mov
sbb
cmp
mov
fcomp
adc
jmp
adc
inc
js
jmp
add
add
imul
add
popf
cmp
addr16
add
lret
in
inc
lds
push
es
std
or
cmp
daa
push
js
imull
push
jbe
fwait
lods
mov
add
xchg
lret
add
fildll
add
lock
in
sbb
add
add
pop
push
push
add
add
jmp
bswap
inc
add
mov
and
add
pop
mov
lahf
insb
cmpsl
mov
add
add
xor
dec
popf
or
jne
add
mov
jae
push
push
add
repnz
push
add
inc
out
push
add
pop
sbb
push
add
lcall
nop
add
xchg
add
mov
cs
movsb
add
add
add
add
fists
and
xchg
pop
jmp
cli
push
sahf
icebp
pushf
repnz
stos
addb
stc
and
jo
adc
sqrtps
add
cmp
pop
jmp
dec
cmpsl
out
add
push
add
gs
push
add
sub
mov
push
xchg
and
add
sub
sub
leave
mov
mov
push
pop
rolb
scas
insb
pop
and
mov
sahf
pushf
test
testb
xchg
mov
mov
cli
xchg
icebp
cmpsb
add
sbb
mov
sub
ss
add
mov
pop
add
and
mov
jnp
mov
xor
les
pop
mov
push
add
xor
aam
pop
xchg
lcall
les
int
adc
outsl
mov
add
stos
sbb
daa
mov
dec
mov
pop
shl
mov
add
push
adc
pop
jl
jae
push
add
add
add
dec
pop
pop
pushf
rolb
add
hlt
add
add
and
hlt
add
mov
outsb
or
add
adc
jp
xlat
add
rolb
add
insl
jecxz
xor
add
mov
add
cwtl
jmp
xchg
fists
xlat
add
data16
int3
inc
pop
xor
add
cmp
push
xchg
je
xchg
add
push
add
mov
or
add
add
pop
push
rolb
dec
mov
addb
add
jnp
rolb
xchg
add
dec
imul
mov
lret
xchg
add
add
add
pop
fldpi
and
jb
lea
add
mov
pop
mov
and
mov
popf
add
fcmovnbe
sbb
mov
int
mov
out
jge
add
lods
push
ljmp
add
mov
add
or
and
cs
add
lock
js
dec
mov
out
rolb
xor
mul
mov
pusha
add
add
add
sbb
cmp
push
add
mov
inc
add
inc
add
add
fmull
test
add
in
xchg
fnstenv
add
add
add
aam
loopne
int3
xor
add
int3
mov
mov
mov
push
jp
loope
xchg
mov
pop
lahf
test
jmp
add
add
inc
add
xchg
add
add
mov
add
jb
sbb
add
mov
cmp
add
jle
sbb
jne
add
je
push
add
ljmp
add
mov
add
push
mov
aas
rolb
add
jb
sahf
push
rolb
pop
mov
mov
add
clc
pusha
add
shrl
ja
and
lret
les
pop
dec
inc
add
inc
add
add
adc
dec
rolb
data16
mov
add
add
lahf
adc
popa
inc
add
cs
add
fmull
psllq
dec
pop
adc
fwait
popa
adc
mov
test
jp
mov
or
jmp
nop
add
addb
xchg
jnp
sbb
test
pop
ret
stc
and
sbb
add
mov
addb
mov
dec
sub
add
mov
sahf
rolb
arpl
add
add
mov
add
stos
in
inc
add
and
mov
repz
cs
push
xlat
push
add
mov
add
scas
push
jae
add
jecxz
mov
sti
xchg
enter
loop
xchg
push
dec
add
push
xor
addb
sub
mov
gs
aad
sbb
add
add
add
xor
fwait
ljmp
add
add
jo
cmpsb
add
addb
add
add
jmp
fs
cmp
sbb
mov
push
add
push
add
jge
add
add
add
sub
repnz
in
loope
lret
ret
shll
pop
add
cs
movb
pop
cs
scas
mov
add
mov
jbe
cmp
add
dec
aaa
addr16
and
imul
pop
outsl
jg
bound
mov
mov
add
add
add
in
fisttpl
cmp
xor
loope
add
cmp
add
add
ret
xchg
pop
js
aas
testb
mov
mov
mov
testb
xchg
call
mov
and
push
add
movb
sub
mov
jmp
xchg
add
add
pusha
add
lock
rcrl
shrl
out
cltd
loop
push
iret
jp
lret
jle
or
pop
movsb
add
xorl
bound
mov
xor
add
mov
push
lods
sti
int
pop
jl
add
inc
add
enter
add
mov
sbb
add
add
add
xchg
add
mov
xchg
pusha
add
in
mov
jno
push
shl
add
add
sti
data16
sarl
daa
mov
dec
cmp
popf
out
jg
xor
nop
add
dec
test
outsl
mov
cmp
pushf
mov
out
sbb
cmp
add
test
mov
daa
cmp
add
inc
add
add
push
add
fidivrl
mov
out
test
nop
add
push
jge
xor
gs
adc
mov
lods
dec
or
or
ja
loope
pop
outsb
cmp
add
add
int
fadd
add
add
cmp
test
loope
add
sbb
jg
dec
adc
add
addb
dec
pop
stos
out
jl
add
shrl
add
mov
rolb
outsb
inc
add
rolb
adc
cmp
jno
cmp
in
mov
inc
add
cmp
pop
mov
dec
movsl
rolb
in
incb
test
push
je
push
fadds
cmp
add
inc
fidivrl
mov
mov
xor
mov
sbb
add
mov
jecxz
jnp
cwtl
sbb
gs
add
add
add
mov
cmp
fsubrl
pop
or
outsl
std
adc
xchg
add
jo
test
or
push
xchg
inc
pop
gs
jle
add
fcompl
add
ret
sbb
add
inc
add
fimuls
mov
lods
sbb
cld
fimull
push
add
lcall
movsl
mov
adc
and
mov
test
xor
adc
addb
adc
add
mov
sti
lcall
inc
leave
aaa
cmp
sub
mov
imul
rorl
mov
add
xor
scas
cmc
push
mov
add
cmpsl
imull
add
add
push
jp
psrlw
lds
lahf
add
mov
adc
or
fwait
data16
add
sbb
loopne
aam
mov
repz
add
add
mov
dec
jo
add
mov
cmc
dec
in
imull
movb
add
ret
roll
ret
clc
lret
add
jmp
bound
mov
ret
xchg
push
add
mov
shr
inc
add
add
aam
adcl
scas
inc
add
mov
add
cmc
dec
stos
mov
xchg
add
ljmp
repnz
dec
dec
jle
add
add
aas
scas
lods
adcl
add
add
xchg
add
std
dec
fisubrs
movsb
add
lcall
add
testb
add
outsb
in
dec
pop
mov
mov
or
aad
fcmove
ret
mov
sub
adc
test
movsb
add
cwtl
insl
fisttpl
into
shl
xchg
mov
xchg
xor
mov
inc
mov
sub
in
test
in
add
mov
subl
add
sub
add
lea
jge
psubd
add
repnz
add
add
outsl
xor
mov
mov
add
int
je
push
jno
bound
mov
leave
pop
sub
mov
out
xor
out
mov
dec
push
add
data16
sahf
xor
in
shll
add
mov
sbbl
out
outsb
lret
mov
mov
popa
cmpsb
add
jo
mov
sbb
sub
ror
negl
xchg
movsb
add
mov
add
add
adc
outsb
cmp
and
sbb
xor
add
nop
add
or
add
hlt
add
xchg
add
mov
arpl
dec
add
sbb
rolb
add
jns
mov
lds
add
adc
or
add
add
roll
add
pop
xchg
add
add
sub
dec
adc
outsl
inc
add
push
add
add
and
popa
adc
add
xlat
pop
jbe
cld
inc
das
cmp
push
add
sti
adc
mov
nop
add
adc
addr16
xor
xchg
out
test
push
call
add
mov
add
mov
pop
sub
jle
enter
xchg
and
testb
ja
in
repnz
fst
add
data16
daa
jns
or
inc
dec
inc
add
call
cmpsb
add
leave
xor
mov
shrl
add
std
sti
dec
xchg
add
add
dec
jb
jnp
add
add
mov
mov
mov
lods
loop
xchg
sbb
and
mov
add
ret
hlt
add
mov
and
jae
add
and
cmp
add
loopne
dec
dec
fisttps
mov
add
sub
and
add
cmc
lods
add
rolb
add
add
pop
mov
inc
aam
mov
andl
add
sbb
rolb
and
xor
inc
popf
or
xchg
push
aad
push
lock
add
dec
mov
inc
push
jae
test
int
ret
xor
sahf
sub
add
jmp
xor
or
add
scas
mov
packssdw
add
and
pop
push
add
sbb
xor
push
add
jb
adc
aas
in
mov
gs
jne
cwtl
in
pop
cmp
sbb
add
pusha
add
stos
rolb
mov
pop
mov
add
or
sti
enter
add
add
and
mov
add
sub
repnz
xchg
mov
xor
mov
popl
jmp
dec
scas
pop
xlat
aad
cmpsl
shll
outsl
sub
or
add
inc
lret
pop
add
addb
sub
push
add
sbb
pop
out
add
fwait
and
mov
jbe
xchg
xchg
or
roll
mov
mov
int3
jb
pushf
orl
in
addb
add
mov
add
inc
mov
add
jmp
addb
popa
cmp
add
leave
gs
and
mov
adc
inc
add
addr16
pop
mov
or
add
add
lea
pop
mov
lahf
mov
das
mov
mov
add
aas
push
add
mov
in
adc
xchg
pop
jae
cmpsb
add
imul
sbb
pop
loope
add
jg
mov
add
clc
out
nop
add
gs
adc
add
repnz
das
out
xor
add
jns
aam
push
dec
shrl
jl
mov
mov
sbb
rolb
mov
add
sub
add
adc
jbe
jb
mov
ja
cmp
add
add
jae
push
jmp
add
mov
lcall
popa
loopne
jl
movsl
push
jg
add
imul
imul
jo
sti
cli
push
add
xchg
inc
lods
push
jns
add
mov
pop
and
into
xchg
sub
add
hlt
add
lods
sbb
lods
insb
or
jmp
xchg
in
jp
mov
fldl
xchg
inc
popf
adc
hlt
add
mov
add
add
mov
add
add
push
sbb
ret
jne
push
loop
int
add
add
add
ds
inc
xor
inc
add
cltd
mov
fsts
mov
add
jp
xchg
add
pusha
add
jl
mov
jg
mov
add
pop
test
inc
add
out
pop
testb
add
fsts
mov
xchg
add
call
mov
cmc
xchg
add
fadd
ficoms
loope
stos
pushf
push
int3
xchg
add
fabs
push
testb
jmp
xor
add
shll
mov
pushf
xchg
xor
mov
iret
xlat
test
push
add
cmp
mov
jg
mov
lret
jecxz
dec
pop
add
lcall
and
fsubrs
jo
imul
dec
mov
jo
xlat
pop
loop
jns
add
add
insb
ret
add
xor
pop
or
insl
aam
divl
sbb
add
loopne
incb
dec
aaa
test
sub
rolb
push
rolb
mov
mov
xchg
add
enter
lret
add
xor
pop
mov
add
inc
adc
loop
in
add
add
ret
mov
add
cmpsl
inc
insb
or
add
out
or
sbb
and
add
add
add
aaa
mov
lret
fsub
xor
or
add
cmpsl
push
lock
jns
fnstsw
add
test
mov
fsub
or
mov
push
add
add
mov
add
daa
rolb
and
mov
pop
jg
rolb
ret
and
mov
lock
popa
in
mov
add
enter
cmp
movsb
add
iret
cmp
iret
movsl
lds
push
lret
popl
dec
stos
dec
inc
add
add
add
add
pop
add
sahf
mov
push
add
or
add
mov
das
xor
adc
pop
lds
add
jecxz
movsb
add
repnz
ret
rorl
add
add
leave
orl
sub
cld
mov
pop
add
mov
xor
pusha
add
into
jle
adc
fwait
sbb
mov
sbb
push
add
rolb
pop
lods
jne
pop
dec
lret
leave
idivl
pop
popa
ja
mov
enter
jmp
stc
fnstenv
dec
and
mov
xchg
cmp
imul
add
dec
gs
fsubr
lret
pop
xor
into
jp
sbb
push
add
movsb
add
lahf
cmp
add
sar
add
push
add
cmp
push
cmp
cmpsl
pushf
push
add
xchg
add
mov
pusha
add
loope
inc
in
ja,pt
cwtl
popf
pop
dec
fsubr
sub
xor
pusha
add
into
addb
add
jmp
in
xchg
add
add
inc
mov
add
addr16
jne
xor
stos
push
mov
add
js
out
lock
mov
pop
jmp
pushf
ds
push
in
jl
call
lret
mov
mov
add
mov
jae
call
and
sbb
into
lahf
xor
ja
add
mov
mov
adc
lcall
add
cmp
dec
push
and
jno
pop
jge
add
add
mov
fcoms
add
pop
xchg
or
add
call
sahf
fldt
cmp
sti
frstor
cmc
jmp
lret
rolb
mov
daa
cwtl
pushf
and
and
add
fadds
add
cmpsl
add
mov
mov
mov
add
mov
outsl
aaa
pop
dec
add
mov
out
xor
std
jne
mov
pop
mov
fcompl
add
add
xchg
test
add
and
jg
fcmovb
add
add
mov
jno
loopne
or
repz
fst
add
cwtl
lret
mov
cwtl
fcomip
add
add
push
sti
hlt
add
add
mov
pop
pop
js
push
inc
add
push
add
add
cltd
hlt
add
add
sub
cmp
lea
add
add
aas
bound
mov
popf
cmp
add
addb
sub
add
add
add
test
lret
lods
mov
ja
fistps
pop
jb
cmp
add
or
add
add
dec
frstor
add
add
fldenv
xor
or
push
mov
scas
insl
mov
inc
add
call
mov
and
mov
mov
aaa
outsb
rolb
cmc
stos
lods
jle
outsl
int
jae
add
jno
movb
faddl
add
cmpl
imul
mov
inc
or
ret
gs
jbe
movb
push
imul
out
cmpsl
call
xchg
add
jb
inc
rolb
popf
xchg
mov
mov
add
xor
sub
add
mov
mov
mov
shr
add
bound
mov
adc
shll
call
aaa
inc
xor
or
mov
mov
sub
mov
in
xchg
xchg
or
cld
fimull
cmp
out
inc
or
xchg
push
add
fsubp
add
in
dec
mov
sbb
enter
addb
add
fcomp
popf
push
push
xor
mov
clc
imul
xor
add
add
inc
inc
add
jb
daa
sbb
inc
mov
adc
in
xor
mov
test
cmp
add
add
negl
add
mov
add
mov
ret
push
and
adc
loopne
push
loopne
jl
stos
and
setno
fstpl
out
xchg
sub
lock
mov
test
pop
mov
add
inc
add
imul
mov
rcrl
add
add
shll
jne
push
xor
mov
add
sbb
inc
add
push
add
add
mov
call
push
mov
imul
loop
repnz
push
add
add
add
sub
sub
add
pop
adc
push
add
mov
imul
add
mov
sbb
inc
mov
add
add
dec
shll
add
adc
scas
push
fucomp
adc
jae
or
mov
adc
loope
xor
inc
sub
and
stos
ja
add
add
test
add
iret
leave
push
std
push
add
mov
add
add
movb
pop
mov
fwait
or
jnp
add
push
ret
mov
push
add
cltd
addb
add
mov
cs
repnz
addb
int
add
adc
mov
inc
inc
sbb
adc
add
negl
add
mov
movb
add
add
dec
adc
jbe
mov
movsl
inc
add
and
add
push
in
jg
and
add
mov
test
xor
movsl
push
leave
lods
xchg
add
add
inc
daa
dec
aaa
or
add
adc
mov
dec
mov
aaa
mov
push
cwtl
mov
pop
cmc
repz
add
jbe
pusha
add
sahf
inc
xchg
add
mov
push
addr16
scas
leave
repnz
mov
mov
and
loop
hlt
add
addb
inc
add
pop
in
sti
mov
add
add
insb
scas
mov
in
push
or
or
popa
rolb
jns
add
add
movsl
jge
add
mov
scas
popa
test
jns
add
clc
cmp
sbb
xchg
inc
add
add
lahf
add
mov
dec
jge
dec
cmpsl
mov
jg
adc
sti
cwtl
sub
mov
add
testb
push
add
add
add
mov
mov
test
mov
add
xchg
test
add
xor
out
mov
add
pop
mov
clc
adc
add
xchg
add
push
add
mov
fsubrs
add
mov
add
mov
add
adc
movb
mov
scas
sub
mov
and
mov
out
push
add
jge
ret
or
pop
repnz
xchg
add
add
push
jb
dec
mov
lds
addr16
cmpsb
add
out
jns
loopne
ret
xchg
xor
add
dec
ljmp
push
mov
data16
cwtl
rcll
fcmovb
cld
inc
xlat
jg
add
add
ret
movsl
add
dec
xchg
sbb
test
js
lret
add
and
loopne
pop
scas
push
pop
cmp
add
pushf
or
jg
jmp
scas
xor
or
mov
add
mov
xor
adc
add
add
add
adc
jg
adc
cs
sub
daa
or
mull
add
fcomp
cld
addb
add
add
shrl
arpl
add
push
xorl
push
add
cmp
mov
xorl
or
push
xchg
add
cmp
lgs
add
call
das
mov
xchg
aas
or
add
jl
add
imul
loopne
add
mov
gs
xor
jbe
and
test
dec
xchg
lret
decb
mov
inc
jl
movsb
add
icebp
clc
arpl
adc
add
scas
insl
jecxz
add
push
mov
nop
add
add
sbb
and
xchg
pminsw
add
pushf
add
mov
add
hlt
add
out
push
add
add
add
fnstcw
and
pop
jbe
scas
movsb
add
pop
pop
popf
mov
mov
xchg
xchg
push
add
in
push
add
xchg
add
cli
mov
add
adc
imul
fsts
add
cmp
add
dec
pop
sub
add
cmp
test
arpl
jne
fsts
jnp
add
dec
xor
adc
clc
lret
mov
add
mov
xlat
dec
test
add
std
out
sar
roll
out
in
ficomps
xchg
cmp
sbb
add
push
add
dec
lods
imul
mov
idivl
xor
jecxz
add
insl
pop
add
add
sbb
add
cli
in
je
adc
mov
gs
mov
loop
adc
stos
gs
daa
inc
xlat
mov
add
or
add
add
jge
add
add
add
rolb
sahf
test
add
loop
mov
xchg
pop
lods
mull
jmp
ja
cld
testb
add
push
stc
mov
jns
and
sub
add
adc
or
testl
add
dec
bound
mov
jge
sub
xor
repnz
repz
test
mov
inc
add
add
pushf
test
add
fwait
mov
movsl
add
out
jg
fcoms
add
sub
out
cmp
add
add
jo
mov
add
fwait
xchg
into
cmp
bndstx
das
in
mov
test
add
jp
add
fsubr
push
ficompl
push
add
add
inc
adc
add
testb
aaa
adc
add
add
mov
stc
xor
add
mov
add
bound
mov
rcrl
out
out
clc
add
cmp
jno
add
lods
adcl
mov
mov
add
adc
xor
add
lret
ss
popf
jnp
pop
icebp
cmp
add
mov
mov
jbe
pop
mov
inc
add
mov
mov
xor
add
add
add
sti
pop
mov
aam
out
push
add
mov
add
lret
sti
into
lods
mov
roll
cmp
fimull
repnz
ret
jnp
add
roll
and
in
fmuls
cmpsl
imul
cmpsl
xchg
add
jnp
push
inc
adc
dec
mov
add
mov
clc
adc
outsl
daa
adc
mov
mov
dec
hlt
add
add
aad
lea
mov
add
mov
addr16
push
mov
mov
aam
xchg
add
inc
rcrl
xchg
xchg
add
mov
outsl
jle
add
int3
imul
add
insb
add
add
add
jns
add
add
add
mov
ret
out
xchg
jmp
add
inc
add
add
add
mov
in
sahf
fwait
pop
xor
into
push
sbb
jmp
add
rolb
xorl
xchg
notl
add
cmp
push
fwait
sub
inc
mov
and
mov
dec
cmp
add
xchg
add
xor
pop
out
jmp
add
add
and
add
add
daa
and
pop
add
lret
add
mov
sub
lcall
add
add
push
addb
xchg
pop
ljmp
add
add
data16
add
scas
mov
test
sub
jecxz
add
jns
jnp
cltd
and
add
ret
ds
daa
jo
std
lahf
xchg
repnz
movsl
int
push
iret
mov
xchg
add
ret
ds
add
and
mov
add
mov
mov
lcall
or
push
xchg
xchg
cmp
jne
fmul
xor
jmp
mov
add
ds
add
repz
int
jl
and
and
mov
sti
dec
data16
add
push
add
addb
or
add
mov
dec
mov
dec
mov
mov
stos
mov
add
subl
pop
mov
add
add
or
add
test
push
add
cmpsb
add
ja
add
add
lods
add
adc
adc
lahf
dec
jp
add
push
add
sub
sub
in
inc
inc
add
mov
mov
jne
add
ljmp
popa
setns
add
add
clc
cmpsl
outsl
imul
mov
add
lcall
add
add
sbb
mov
popa
dec
jle
stos
mov
insl
xchg
add
fwait
push
pop
jb
insl
pop
xor
add
mov
out
add
add
add
decl
or
scas
pop
jle
add
mov
lret
stc
inc
add
or
pop
insl
adc
call
outsl
adc
push
mov
stc
push
iret
cmp
push
add
call
jne
add
mov
jl
add
fdiv
in
in
inc
in
xchg
pusha
add
add
lret
add
cmpsl
int
add
add
test
aad
xchg
popa
std
mov
into
pop
insl
add
add
mov
add
mov
lock
aaa
aas
mov
push
cmc
fwait
pop
mov
add
add
mov
xlat
push
add
xchg
add
lods
clc
add
xchg
mov
inc
add
and
sub
inc
jb
andl
sub
lock
ret
daa
and
add
add
add
add
mov
mov
int3
mov
jl
add
lcall
rolb
pop
inc
testb
cmpsb
add
add
add
imul
jno
inc
add
in
or
sub
pop
inc
add
mov
ficoms
outsb
test
cmp
or
std
popa
inc
and
add
add
add
add
lret
mov
lods
in
dec
negl
dec
inc
add
and
jno
push
add
int
cmp
mov
dec
in
push
add
out
push
add
add
pop
sahf
jecxz
decb
sbb
das
pop
xor
adc
add
mov
and
addb
add
pop
mov
jae
movb
push
fs
sub
add
add
push
push
add
loopne
cmp
jne
add
add
ljmp
jae
jmp
ja
mov
jp
mov
test
sub
std
lret
stc
lret
sub
add
mov
rolb
rorl
in
xor
cs
add
sub
add
add
add
arpl
jae
push
add
imul
add
scas
or
xor
add
mov
mov
jg
dec
or
fdecstp
add
pushf
movsb
add
add
mov
lds
out
addb
shll
add
add
aad
add
cmpsl
and
pop
mov
nop
add
add
mov
add
mov
add
add
add
pusha
add
pop
push
insb
mov
pusha
add
shll
out
add
out
cwtl
and
mov
out
add
scas
enter
ret
jno
fs
xor
jp
add
add
xchg
add
pop
out
add
sub
mov
clc
jae
jmp
cld
pop
fcmovnbe
add
add
shll
add
sbb
inc
add
sub
imul
fcoms
sub
divl
movb
rolb
fwait
jp
add
xor
mov
loopne
loope
add
rorl
push
push
add
push
add
sbbl
clc
and
cltd
clc
sub
jmp
das
cmp
mov
add
sbb
dec
xor
lahf
les
cltd
add
push
add
inc
out
xchg
add
fs
loope
lcall
dec
mov
inc
add
in
sub
add
es
add
add
jl
cmc
aaa
and
mov
sub
xchg
dec
ja
cmp
or
add
and
icebp
inc
lcall
add
jo
xor
or
add
mov
pop
adc
push
add
stc
cs
inc
pop
xchg
add
jae
aas
add
add
rolb
mov
cmp
add
add
add
out
movsb
add
imul
std
mov
add
data16
pushf
insb
mov
bound
mov
out
inc
add
add
mov
fnstsw
hlt
add
add
add
fwait
jno
xchg
add
jle
mov
pop
pop
iret
sub
add
add
mov
add
jmp
mov
cmp
mov
jae
add
cmp
loopne
les
mov
out
fldl
xor
mov
mov
fcompl
test
sub
out
add
jle
addr16
cltd
cs
shr
ret
dec
add
sbb
nop
add
add
add
faddp
test
test
sbb
add
mov
iret
pop
lahf
outsb
mov
xchg
add
flds
cmc
and
mov
xchg
fcompl
push
das
inc
add
mov
rolb
popf
data16
sub
pop
adc
jno
xor
test
pop
push
mov
movl
bound
mov
in
cmp
add
dec
sbb
mov
bsr
fildll
rolb
mov
je
xor
xlat
pop
femms
push
add
mov
sub
aaa
jle
add
aad
add
stos
je
inc
add
addr16
scas
or
pop
jne
movsl
out
and
orl
xchg
test
stos
xlat
movsb
add
add
outsb
lods
mov
dec
lahf
lcall
add
jl
add
rcll
dec
cmp
dec
stos
repz
movb
add
add
mov
dec
xor
pop
out
cmp
add
mov
add
or
pop
xchg
dec
out
mov
xor
subl
mov
dec
leave
cli
mov
mov
mov
orl
cmp
das
mov
and
mov
add
adc
aad
add
add
sub
inc
push
xor
cmp
xor
add
inc
ljmp
mov
outsl
sub
or
mov
push
mov
mov
mov
add
ljmp
xor
sbb
sub
out
cli
cmp
cmpsb
add
rolb
scas
shrl
and
in
add
addb
cmp
add
hlt
add
scas
sbb
add
push
add
sub
adc
jmp
cs
push
cmp
mov
add
mov
scas
jns
add
add
addb
add
add
icebp
add
addb
sbb
xchg
push
ficompl
xor
lret
and
mov
cmp
pop
add
mov
sahf
bound
mov
cmc
cld
es
add
stos
add
mov
fisubrs
mov
add
inc
lods
add
addb
add
push
pusha
add
mov
jge
mov
lahf
mov
mov
mov
add
adc
push
add
xor
add
cmp
mov
fdivrl
add
jno
add
mov
jmp
add
fucom
rolb
and
mov
add
xor
add
add
out
add
pop
outsb
divl
add
in
add
add
lock
mov
jne
sbb
pusha
add
pusha
add
outsb
cltd
mov
or
add
add
add
fwait
cmp
out
dec
push
psubsb
sbb
xor
mov
cs
pop
add
sahf
cmpsl
lock
add
addb
sub
xchg
add
add
ja
mov
das
xor
xor
add
dec
mov
inc
ret
jo
fmull
mov
mov
add
add
or
cltd
lods
inc
add
add
add
addb
data16
lcall
add
enter
add
jb
sbb
outsl
jg
add
add
nop
add
mov
add
in
xor
jo
mov
mov
add
sbb
add
test
add
movsb
add
xor
lea
dec
adc
mov
xchg
pop
test
jg
rolb
mov
fadds
add
mov
push
add
push
ret
enter
push
add
fisubrl
mov
mov
pop
inc
dec
push
add
add
add
add
rolb
add
pop
hlt
add
cmp
inc
and
rolb
sti
sub
add
adc
add
out
and
and
sbb
dec
push
mov
stos
out
pop
std
data16
add
add
je
cld
test
adc
add
stc
dec
stos
mov
scas
mov
xor
add
jmp
test
add
xchg
add
in
cs
push
fimull
pop
add
sub
xchg
or
lcall
add
mov
add
mov
add
fldenv
addb
add
inc
add
test
cmp
arpl
jns
push
sub
subl
mov
xor
add
in
cli
add
sbb
loopne
lahf
or
add
int3
mov
mov
sub
loope
jg
jno
repz
add
dec
sub
add
cmp
outsl
and
mov
das
out
std
or
inc
jbe
cmpsl
repnz
sbb
ret
add
inc
std
push
add
shr
mov
mov
cmp
xchg
addr16
rcll
dec
lea
push
push
stos
xor
into
daa
cmp
je
push
add
pop
pop
sbb
add
xchg
xchg
inc
ja
xchg
add
jnp
out
jae
lcall
leave
mov
mov
cmpsl
mov
mov
icebp
jne
sub
repz
mov
cmp
popa
pop
scas
sub
add
loop
xchg
adcl
jno
xor
repz
add
lock
inc
dec
mov
mov
lcall
cmp
std
and
mov
jmp
mov
aad
dec
sub
and
mov
dec
addb
dec
test
pop
lret
mov
jns
sub
jo
cmpsl
pop
push
xor
mov
negl
mov
add
mov
lahf
imul
mov
mov
jge
dec
loopne
pop
add
mov
aad
les
mov
add
loop
dec
cmp
push
add
dec
add
push
ret
cmpsb
add
addr16
addr16
add
mov
lods
jne
lods
lret
cmp
stos
xchg
test
ret
or
xchg
jne
cmp
inc
add
mov
dec
xor
lock
inc
add
movsb
add
push
repnz
dec
arpl
cld
jge
sbb
add
add
add
jb
adc
repnz
dec
out
mov
pushf
data16
push
sub
inc
add
mov
cmpsl
mov
call
mov
test
add
dec
add
pop
loopne
cld
testl
and
mov
and
add
in
push
add
add
add
adc
pop
mov
add
cmp
and
dec
xchg
lods
int3
mov
inc
inc
stos
sbb
imul
movsl
int
add
in
daa
sbb
add
cmpsl
add
mov
add
pop
xchg
ds
outsb
call
lret
repz
add
add
cmc
pusha
add
adc
sbb
inc
test
add
movb
add
mov
dec
jne
fwait
inc
inc
add
mov
jnp
push
add
add
lret
add
inc
add
cli
dec
int
fcoml
jno
mov
push
add
hlt
add
dec
stos
jmp
add
rolb
dec
push
add
dec
out
add
mov
out
mov
add
inc
add
or
sbb
add
fsubrl
add
mov
xchg
add
sub
add
add
cmp
add
mov
add
xchg
add
out
in
pop
sub
or
mov
out
mov
pop
decl
repnz
test
mov
xor
jbe
pop
push
test
xlat
mov
mov
or
sbb
ficoml
add
add
mov
data16
add
add
add
add
add
loope
fwait
hlt
add
add
adc
dec
rolb
addb
aam
inc
add
mov
xor
xchg
imul
je
mov
in
movhps
imul
sub
in
addb
push
test
mov
test
lcall
loopne
push
add
add
add
adc
add
psadbw
mov
add
jb
lds
xor
hlt
add
or
cmp
jmp
in
decl
mov
add
jno
ja
cwtl
mov
test
add
add
outsb
das
or
add
push
mov
movb
add
testl
add
add
out
stos
int
add
sub
dec
push
jmp
int3
lahf
add
mov
mov
add
push
addb
add
pop
inc
add
nop
add
in
lahf
aas
xor
adc
pop
and
add
add
fwait
and
ds
add
and
push
add
rcr
enter
add
stc
clc
testb
sti
sbb
add
aad
adc
pop
outsl
test
sub
cltd
push
add
cwtl
mov
ja
stos
mov
icebp
jbe
call
les
dec
pop
daa
aad
aas
add
mov
repnz
pop
add
mov
rolb
mov
movsb
add
add
add
mov
add
add
jae
jnp
add
mov
cmp
add
outsb
in
mov
add
jae
pushf
rolb
mov
add
lret
and
mov
lret
loop
icebp
movsb
add
sbb
add
xchg
cli
cmp
add
add
add
add
add
insl
dec
push
xchg
push
add
mov
jnp
add
test
inc
add
data16
add
mov
sub
lods
movl
add
sbb
int
add
nop
add
push
fisubl
add
or
add
adc
out
sub
mov
xor
gs
xchg
outsl
push
pop
mov
mov
push
inc
fldl
add
add
add
xchg
fstl
jge
dec
fcomip
pusha
add
jb
repnz
push
add
xchg
popf
hlt
add
add
jns
popa
xchg
add
add
push
mov
loop
pop
mov
jne
add
in
pause
add
cmp
mov
fadds
cld
leave
sbb
add
lea
inc
add
insb
jl
add
outsb
loopne
mov
das
cmp
xor
sub
and
mov
push
add
inc
add
jo
lock
stc
push
xchg
jns
pop
and
mov
add
lret
leave
jmp
mov
add
gs
rolb
std
pop
pusha
add
jl
add
xcrypt-cfb
cmpsl
and
dec
dec
jo
insl
cltd
call
test
mov
insb
mov
aas
js
mov
jge
add
or
cmp
push
mov
push
jbe
icebp
imul
add
mov
and
mov
add
add
mov
scas
cmp
je
sti
and
inc
aam
movb
add
add
add
js
adc
sub
shll
add
movb
add
add
pop
add
add
ret
add
sub
add
dec
mov
add
addb
pop
fiaddl
add
cltd
xchg
jg
sbb
add
add
data16
add
add
pop
adc
pop
push
js
add
push
jae
fisubrs
jecxz
aaa
addb
mov
cmp
lret
inc
add
add
jp
jo
cmp
outsl
sub
and
mov
mov
dec
cmpsb
add
add
or
jo
syscall
addb
add
add
sub
and
adc
mov
insl
ljmp
pushl
nop
add
mov
lahf
lea
add
push
add
ds
in
testb
mov
test
jo
pop
jmp
add
mov
inc
lods
push
add
add
scas
pop
cwtl
mov
inc
add
pop
mov
mov
inc
add
ret
mov
in
imul
in
lods
add
add
lahf
adc
arpl
add
insb
into
mov
lret
mov
insl
inc
add
insl
cmp
inc
add
inc
add
mov
jg
repnz
cs
lods
or
add
add
and
mov
add
ret
add
sbb
mov
add
movsb
add
rolb
jp
add
mov
stos
dec
repnz
cwtl
inc
mov
lcall
testb
outsb
repz
in
ficomps
xchg
sbb
ds
insb
repnz
push
mov
add
leave
mov
xchg
repz
loopne
int3
push
add
mov
mov
vpsubsb
add
pop
inc
pop
xor
add
mov
sbb
movb
mov
rolb
inc
add
add
out
add
pop
loopne
cld
mov
add
add
add
mov
outsb
movsl
cltd
dec
sbb
shrl
add
xor
testb
je
rolb
add
add
add
add
or
and
add
mov
lds
jnp
adcl
mov
sub
pop
sbb
add
cmpsl
or
pop
movsl
cmp
movb
out
test
mov
pushf
cltd
ret
push
das
pop
sbb
dec
mov
pushf
nop
add
out
scas
mov
and
mov
add
ret
lahf
mov
mov
add
add
add
rolb
inc
add
and
jg
or
push
add
add
add
ja
out
les
push
scas
lret
dec
mov
and
testl
add
mov
mov
adc
mov
add
aam
jnp
dec
jo
and
popa
xchg
adc
xor
add
xor
scas
pop
push
add
mov
add
ret
xor
jnp
add
jnp
cmc
aaa
aam
jae
or
cld
mov
add
fucomip
cmp
cmp
add
add
imul
ss
cmp
je
adc
add
jne
jo
fcmovbe
in
int3
pusha
add
add
in
xor
push
cmp
ror
enter
add
xchg
rolb
add
add
fidivl
and
faddl
pop
leave
dec
rcr
iret
jbe
rolb
add
lods
xchg
add
add
push
add
mov
xor
push
add
mov
add
dec
sbb
call
cmpsl
popa
jmp
fisttpll
xchg
outsl
mov
pop
sub
add
add
les
inc
add
test
cmpsb
add
dec
cmp
add
xchg
lods
push
add
jmp
lcall
pop
inc
add
mull
mov
ret
add
icebp
mov
stc
jle
add
pop
lcall
clc
ret
xor
inc
add
xlat
cmp
cmp
addb
lret
add
mov
xchg
jp
fcmovne
xor
ret
add
add
pop
push
push
mov
inc
add
sti
cmp
xchg
stos
pop
push
jno
or
add
out
daa
pop
addb
add
rcll
sbb
movsl
addr16
sub
push
add
fldl
mov
gs
add
inc
push
add
imul
add
add
mov
mov
add
nop
add
ljmp
popa
loope
add
jno
inc
add
xchg
add
add
out
fld
add
push
pop
pop
sarl
cmpsl
jo
or
orl
leave
inc
add
add
data16
add
mov
lea
xchg
add
add
xor
push
pop
rolb
mov
addb
and
mov
add
add
cmpsb
add
xor
add
ret
push
cmpsb
add
icebp
and
mov
cmp
jg
mov
jl
jle
and
addb
add
add
rolb
inc
cmpsb
add
add
mov
jle
aad
add
push
add
add
imul
jmp
add
pop
addr16
and
mov
add
add
add
mov
rolb
cmc
and
mov
cwtl
rolb
sub
hlt
add
add
jae
jae
add
add
stc
xchg
mov
push
add
add
fmull
or
popa
lods
ret
movsl
dec
mov
mov
fisttpl
hlt
add
addl
add
fbstp
in
add
mov
out
add
lret
adc
ja
add
es
into
mov
test
add
leave
gs
add
incb
sub
mov
dec
cmpsl
fcmove
or
add
xor
push
stos
repnz
add
jecxz
fidivl
imul
nop
add
jle
add
stc
push
repnz
add
sub
lret
rolb
pop
xchg
add
fnstsw
pop
les
lods
hlt
add
add
add
lcall
add
push
add
test
cmp
add
cli
imul
add
jne
sub
ja
sbb
mov
data16
jmp
and
mov
add
and
push
add
add
add
cmpl
out
in
pop
cmpsb
add
xor
lea
fidivrl
out
lea
add
testl
addb
hlt
add
test
push
add
add
adc
mov
add
mov
add
insl
lcall
push
lock
test
or
inc
add
add
jae
mov
mov
jge
push
add
add
mov
mov
cmp
jle
pusha
add
add
add
fdivl
add
repnz
addb
stos
lods
les
sti
or
jmp
lcall
or
in
popa
inc
xor
js
xchg
addl
add
fcmovnb
add
xor
fistpl
mov
jl
or
add
add
push
add
add
add
xorl
cmpsb
add
stos
fcoml
pop
mov
add
sub
add
jmp
mov
add
repz
pushf
jnp
adc
fisubrs
push
add
imul
and
cltd
sub
add
out
add
loop
mov
xchg
addb
pusha
add
loopne
movsl
push
cmp
addb
add
xchg
jmp
xchg
add
lret
add
pusha
add
loopne
rolb
pop
aad
cmp
add
mov
inc
pushf
pusha
add
mov
dec
mov
adc
sub
loope
loop
loop
xchg
add
mov
xchg
fstl
andl
cwtl
call
sbb
fcoml
push
add
sub
rolb
addr16
ror
cld
jl
pop
addb
push
add
xor
pop
stos
cli
push
jbe
mov
mov
xorl
push
iret
call
xor
xchg
jge
jmp
mov
addb
mov
add
data16
add
xor
pop
mov
jns
jo
sub
add
dec
sub
add
add
setge
push
mov
add
add
cmc
push
add
push
add
and
push
je
repnz
add
dec
dec
add
mov
add
adc
or
sti
cld
daa
cmp
add
in
jnp
add
mov
icebp
cmp
add
push
and
push
dec
push
add
add
push
cmp
xchg
scas
in
jno
add
jbe
cwtl
jmp
jo
jne
add
and
add
addr16
in
push
scas
jle
lret
int3
ret
add
or
mov
add
mov
add
add
dec
hlt
add
xor
lods
cmp
jl
outsl
in
add
ds
add
dec
dec
xchg
adc
pop
mov
add
mov
gs
dec
in
mov
cmp
cwtl
jne
xchg
add
pop
mov
add
pop
mull
int3
fnstenv
addb
sti
mov
sub
cmp
jbe
mov
shll
stos
test
xchg
add
pop
sub
add
fcoms
add
add
sarl
add
mov
cmp
sub
add
das
lock
ja
or
add
jne
repz
ljmp
mov
insb
or
imul
rcrl
iret
push
adc
jmp
add
adc
andl
call
add
sbb
add
dec
dec
test
xchg
rcll
sub
push
stos
push
add
out
dec
lret
clc
imul
jecxz
xor
aaa
mov
cmp
pop
add
pop
xor
push
add
mov
add
enter
mov
mov
adc
cli
sub
addr16
mov
add
mov
push
loopne
sti
sub
dec
enter
lock
jle
call
test
adc
sub
mov
test
add
cmpsl
adc
jo
cld
sub
std
push
jge
add
and
jno
cmc
testb
jge
dec
or
or
add
mov
adc
add
xor
pop
rolb
movsb
add
lcall
lds
add
cmp
movb
pop
in
adc
jl
aam
mov
out
xlat
scas
dec
and
sub
test
cli
adc
sbb
or
stc
pop
cmp
add
cmp
jnp,pt
dec
sti
mov
push
pop
cmpsl
add
mov
or
add
lods
out
or
adc
addr16
jno
add
loop
jmp
in
inc
movsb
add
add
cli
push
mov
mov
mov
mov
insl
fcoms
add
pop
sbb
or
jae
jae
add
add
add
fadds
lret
and
lods
inc
add
jo
lret
int
add
repz
pusha
add
add
add
dec
mov
outsl
lods
insb
adc
movb
add
or
add
add
add
mov
add
mov
pop
mov
cli
sbb
testb
pop
stos
sub
movsb
add
rolb
sbb
add
dec
rolb
sub
push
add
add
sub
nop
add
push
mov
test
push
push
add
add
mov
add
adc
cmp
adc
cmp
add
and
mov
sub
xchg
add
andl
pop
add
mov
add
add
or
add
dec
and
rolb
adc
push
add
add
and
movsb
add
jl
hlt
add
push
das
dec
mov
add
add
mov
add
insl
push
jg
add
sub
add
add
add
addr16
cmp
int
add
dec
inc
add
add
cmp
inc
add
mov
test
in
inc
gs
mov
out
push
xchg
xor
add
dec
pop
out
dec
xor
subps
hlt
add
add
add
add
sbb
push
pop
hlt
add
cmp
adc
jb
dec
lahf
mov
pusha
add
mov
rolb
in
repnz
add
nop
add
add
mov
roll
mov
add
xchg
add
add
cli
ficoml
out
pop
nop
add
fildll
add
add
aad
sti
repz
mov
fucomp
hlt
add
daa
or
jae
fdiv
cmp
and
mov
add
insb
add
xchg
add
add
jp
movsb
add
scas
ljmp
cli
iret
stc
jnp
sub
movb
sahf
arpl
add
out
add
xlat
mull
mov
int
insb
fxch
cs
mov
repz
loop
test
add
or
add
sub
push
or
pop
cs
add
add
add
cmp
mov
add
pop
xor
flds
sbb
dec
aas
or
push
add
jmp
add
test
sub
mov
out
mov
or
les
loop
in
mov
aaa
test
add
lods
sbb
cmp
fimuls
mov
fcom
add
stos
xchg
xor
jne
add
mov
dec
add
mov
add
add
cmpsl
outsl
or
dec
imul
add
add
mov
xchg
add
scas
ret
test
jnp
or
add
add
cmp
jge
xchg
and
mov
mov
and
mov
add
inc
add
nop
add
fnstenv
xor
pop
insl
jnp
add
cmp
add
andl
arpl
fcomps
mov
test
and
add
jmp
push
add
dec
lret
add
sub
cmp
push
push
add
cltd
jbe
push
ss
ret
mov
insb
loope
ret
jg
dec
ret
pop
sbb
xchg
add
add
dec
xchg
lcall
ret
jnp
mov
fsub
xchg
add
add
add
pop
pop
xor
aas
lock
dec
push
add
inc
in
and
adc
adc
into
stc
addr16
stos
mov
add
ret
outsb
inc
insl
loopne
loopne
pop
ret
mov
add
mov
dec
push
add
icebp
xor
or
add
push
add
add
add
cwtl
add
mov
mov
add
add
xchg
fistpll
mov
xor
jl
dec
fbld
aad
aam
fbstp
lock
pop
xchg
and
loopne
js
adc
inc
add
scas
mov
xchg
mov
std
mov
add
add
cmpsb
add
add
xchg
add
addb
inc
add
add
shrl
rcll
add
adc
pop
call
cwtl
rcll
movb
scas
jno
call
mov
and
mov
ja
dec
add
out
insl
cld
sub
mov
jno
mov
aas
in
mov
push
add
ret
mov
stc
and
mov
add
mov
rolb
stc
inc
add
add
add
and
mov
cli
cmp
std
fmull
ds
add
out
ja
popa
xchg
xor
add
dec
test
inc
add
or
add
icebp
pop
add
mov
outsb
sbb
cmp
sti
and
sarl
cmp
out
les
cmp
addb
push
add
add
mov
add
push
add
add
mov
fnstcw
cltd
test
mov
jle
aam
jmp
add
mov
sarl
add
loope
inc
divl
or
dec
xchg
add
sub
lds
add
movb
push
add
add
pop
jnp
popa
xor
mov
addb
add
pushf
aas
sahf
movb
cmp
or
xchg
add
xchg
add
mov
xrelease
add
xor
jnp
negl
add
sub
test
jo
lret
aas
and
stc
xchg
add
add
mov
fst
add
mov
mov
dec
lret
inc
add
pop
stos
or
add
clc
inc
hlt
add
stc
pop
lods
in
pop
adc
add
xchg
add
sub
push
add
add
sti
mov
and
mov
or
add
das
cmpsl
stc
gs
add
mov
add
subl
push
add
add
add
add
push
add
ja
add
add
mov
out
out
push
psrlq
pop
push
sub
add
add
and
jno
and
pop
adc
call
sub
xchg
inc
add
inc
add
add
testb
repnz
nop
add
cmpsl
pop
mov
insb
push
jnp
add
lods
sbb
mov
rolb
push
cli
ret
jb
leave
jo
sub
movsb
add
jb
dec
push
mov
lds
fists
fdivrs
jae
pop
sub
in
incb
imul
pop
les
out
mov
xchg
add
add
xor
addb
push
add
inc
add
add
repnz
and
add
pop
push
add
add
and
push
xchg
sbb
lret
add
arpl
lods
fsubrl
out
ss
xchg
cmp
mov
add
je
jne
add
add
icebp
xchg
add
add
movb
add
addr16
jne
jbe
sbb
fmuls
js
pop
add
mov
bound
mov
add
push
add
add
mov
add
and
fisubs
add
cmp
add
pop
adc
lret
push
add
mov
mov
cmp
mov
cwtl
xchg
add
add
into
jnp
lret
jmp
add
dec
cld
ja
mov
add
sub
lahf
out
dec
adc
sahf
add
mov
scas
xor
mov
dec
fidivl
aad
rolb
xlat
adc
outsb
aas
addb
add
repz
and
mov
and
adc
add
push
test
add
add
xchg
add
inc
xchg
nop
add
inc
add
bound
mov
out
sbb
dec
outsb
out
aas
addb
mov
fiaddl
add
add
or
pop
aam
int3
xor
movsb
add
or
pop
xchg
jmp
sti
xor
mov
popa
mov
cmp
add
add
sub
mov
addb
pop
jmp
fcomi
add
mov
sub
mov
add
in
push
out
push
add
lahf
push
sub
add
cwtl
hlt
add
scas
fldt
aam
jo
jne
add
lcall
pop
push
mov
push
sub
add
and
add
mov
test
popa
fsubrp
pop
outsb
xlat
sti
out
mov
mov
in
pop
mov
stos
adc
shll
push
add
rolb
push
add
les
mov
add
ret
pop
clc
aas
push
mull
push
add
dec
popa
fldl
sbb
imul
mov
leave
xor
xor
fadd
test
ret
push
add
movsb
add
add
stos
test
add
movb
lahf
mov
adc
ret
fsubrs
add
in
cli
adc
add
sbbl
sub
lret
or
hlt
add
lods
mov
add
push
add
adc
inc
add
je
sahf
popa
lock
pusha
add
add
add
push
jle
add
cmp
add
mov
mov
outsl
mov
insl
lret
ret
stos
inc
add
pop
data16
mov
sbb
stos
sub
lods
add
adcl
mov
xor
jp
shll
in
mov
fiadds
add
push
mov
add
push
add
js
add
sub
mov
ficompl
test
fstpt
push
lock
pop
popf
ficomps
push
add
xchg
add
comiss
int3
out
add
vfrczss
push
add
add
stos
rcll
or
lds
addb
add
mull
mov
add
mov
mov
sbb
fimull
out
fcom
add
movsb
add
aam
mov
or
stos
pop
or
sub
lcall
add
add
jo
mov
add
mov
sbbl
xlat
out
and
mov
das
fwait
pop
fwait
lahf
add
mov
loopne
ja
movsb
add
xor
mov
add
ret
mov
add
mov
das
mov
cmp
dec
pop
sbb
sub
add
mov
add
add
imul
neg
inc
add
add
add
imul
mov
and
fwait
testb
roll
cli
add
mov
imul
test
pop
adc
sub
inc
push
xrelease
add
leave
add
lds
scas
inc
add
adc
add
mov
add
or
pushf
push
rorl
mov
or
cmp
ret
inc
fimuls
jmp
sbb
cli
xor
xor
ljmp
add
enter
repnz
movsb
add
roll
add
in
add
mov
sti
rolb
mov
iret
and
mov
adcl
add
dec
data16
popl
outsl
das
or
or
test
push
ljmp
mov
mov
fsubrs
pop
in
push
add
out
xlat
icebp
pop
lahf
push
add
mov
js
ljmp
adc
adc
mov
insb
or
add
dec
js
jl
xchg
sub
dec
cwtl
daa
cld
xor
mov
mov
sub
sub
add
add
sbb
outsl
addb
push
add
xor
dec
push
add
icebp
mov
xor
dec
add
add
loop
xchg
add
loopne
xchg
jp
cmp
mov
cltd
out
add
cltd
cwtl
push
xor
mov
out
test
sub
imul
into
fnsave
add
dec
push
stos
or
add
add
mov
add
add
add
xor
add
add
popf
xchg
pushf
je
imul
add
sarl
mov
xchg
mov
stos
rolb
or
frstor
cmp
or
pop
adc
inc
add
ss
add
xchg
add
jle
ret
adc
insb
js
pop
mov
inc
add
push
add
add
adc
cli
inc
add
les
xchg
add
ja
mov
cmpsb
add
mov
xlat
ss
test
dec
mov
sbb
add
adc
add
std
mov
add
lahf
pop
adc
in
add
dec
movsl
add
add
mov
add
loop
pop
daa
jmp
arpl
dec
fcmovb
push
lods
adc
cld
adc
lcall
mov
sbb
and
push
xchg
add
add
data16
lret
mov
xor
rolb
out
sbb
push
xor
mov
jae
add
in
sbb
daa
int3
pop
loopne
push
sub
jb
mov
add
add
add
add
jns
sbb
cld
ret
and
mov
add
pop
bound
mov
add
and
addr16
add
and
mov
js
mov
push
push
add
fldenv
imul
add
mov
iret
testb
jl
jne
add
and
xchg
clc
push
add
dec
arpl
out
lcall
std
mov
and
aas
dec
push
testb
add
pop
inc
test
pop
fistl
sub
inc
add
into
cmp
dec
adc
ret
stc
sbb
adc
adc
ret
push
mov
push
cli
mov
sbb
add
lahf
test
int3
jg
mov
add
mov
shrl
add
imul
cmc
mov
xlat
in
pop
cmp
cwtl
push
add
test
mov
add
mov
fsubr
cmp
cmpsl
or
fnstcw
push
push
add
mov
adc
pop
nop
add
sbb
mov
inc
add
add
testb
add
add
mov
in
lret
add
scas
mov
dec
mov
iret
hlt
add
cmpsl
popf
data16
adc
test
rorl
add
sub
in
je
rcll
mov
jge
add
aam
fsubrs
add
icebp
or
xor
push
mov
add
dec
mov
movsl
xchg
pop
in
pop
movsb
add
add
dec
pop
mov
adc
and
mov
rolb
dec
stos
loopne
outsl
out
stc
or
add
out
rolb
test
mov
sub
cwtl
mov
push
add
and
mov
movups
xor
add
inc
add
or
out
fs
add
iret
jbe
stos
fadd
jb
push
nop
add
arpl
icebp
loope
xchg
cmp
pop
mov
lahf
xor
fiaddl
add
push
add
jg
lahf
cs
call
sub
rolb
sbb
cli
mov
push
jae
nop
add
popf
mov
cmpsl
js
add
add
mov
in
add
jo
push
dec
ret
add
mov
cmc
jg
mov
pop
sti
mov
cmp
out
loope
rolb
add
mov
in
inc
push
and
enter
imul
add
dec
xor
aaa
lcall
and
or
subl
push
push
addb
add
add
sbb
fnstsw
push
push
add
loop
in
insb
cmp
add
add
rcrl
lods
xor
lret
xor
sub
pop
imull
mov
fdivrl
adc
sahf
push
pop
subl
loope
adc
movsl
adc
loopne
cmc
decb
push
jge
add
add
adc
push
cli
mov
addb
add
adc
push
mov
das
rolb
or
dec
fistpl
cmp
xchg
push
add
pop
jns
imul
bound
mov
lods
scas
addr16
icebp
inc
pop
push
bound
mov
cwtl
bound
mov
mov
sahf
push
add
cmc
loop
clc
mov
xchg
fstpt
add
sbb
bound
mov
pop
ret
cltd
scas
push
cmp
add
adc
and
lret
mov
add
dec
ljmp
sub
sbb
ret
lock
iret
mov
ljmp
mov
mov
add
testb
pop
insb
es
inc
add
dec
xor
add
mov
int3
or
lcall
jbe
sub
adc
dec
clc
mov
fstl
add
dec
push
adc
mov
and
mov
cmpsb
add
add
push
pop
lahf
xchg
add
cmc
pushf
sti
jae
add
aam
mov
xor
add
popa
add
mov
fidivs
sbb
or
pusha
add
pushf
repz
pop
jbe
sub
add
cmpsl
lds
add
outsl
push
pop
dec
xchg
jge
adc
sub
testb
mov
inc
add
add
in
push
add
divl
arpl
mov
add
adc
data16
add
sub
mov
sbb
in
push
pop
add
add
mov
mov
mov
test
xchg
sub
cmp
ds
mov
inc
add
add
fwait
add
mov
lahf
xchg
mov
int
pop
push
mov
add
add
add
adc
mov
int
add
add
add
movb
push
add
mov
add
leave
mov
mov
aad
bound
mov
mov
add
add
adc
icebp
dec
adc
test
mov
pop
lret
add
rolb
cmp
das
add
xor
xor
mov
mov
xor
and
mov
ja
mov
push
add
add
data16
adc
rolb
sub
add
add
or
sahf
adcl
gs
sbb
add
mov
mov
add
ds
jg
add
add
add
add
push
add
push
mov
fwait
push
xor
mov
add
mov
add
add
add
mov
mov
push
add
inc
adc
mov
or
out
xlat
int
push
add
dec
pop
mov
mov
mov
insb
jle
push
push
das
mov
add
dec
sub
pop
gs
dec
lahf
movsl
addb
pop
sbb
fsubr
test
cmp
rolb
add
fdivs
sti
mov
mov
mov
mov
add
add
data16
cmc
adc
adc
in
add
mov
sbb
adc
xchg
loopne
data16
lret
pop
loope
add
scas
arpl
imul
and
out
pop
sahf
xor
icebp
fs
add
add
mov
xchg
add
int3
fisubs
add
add
outsl
pop
arpl
daa
mov
add
je
fnstsw
sbb
dec
mov
sbb
add
add
imul
add
add
fwait
mov
lea
push
add
in
mov
add
pop
das
push
add
mov
add
inc
into
mov
inc
mov
lcall
add
aam
aas
testl
addb
and
mov
add
das
aam
movb
shll
sbb
xchg
ret
dec
inc
add
rolb
and
mov
dec
and
mov
loopne
or
dec
mov
push
add
sub
push
add
dec
sbb
add
fyl2x
jge
aas
fsubs
fldenv
add
mov
mov
add
sub
inc
add
fistps
scas
int
add
adc
mov
push
add
daa
and
mov
add
add
hlt
add
int3
mov
es
mov
mov
lea
je
lahf
or
add
inc
add
jb
mov
add
or
je
pop
fwait
pop
lahf
sub
or
add
rolb
movsl
dec
mov
dec
int3
scas
pop
xor
mov
add
adc
add
sub
mov
dec
pop
dec
add
add
add
nop
add
push
leave
enter
movsl
jmp
fisubrs
pushf
mov
into
dec
nop
add
repnz
add
stc
sti
pop
jle
outsb
and
mov
add
cmp
add
add
and
in
mov
pop
mov
ljmp
xchg
add
mov
sub
call
xchg
test
fxch
jle
xchg
lret
add
addb
test
cltd
push
add
add
loopne
sub
xor
pop
cmc
mov
std
fnstsw
mov
adc
aam
push
jno
pop
dec
scas
push
mov
dec
or
inc
fbld
or
pop
les
xchg
add
push
add
jbe
mov
add
lret
loopne
jb
insb
xchg
add
push
add
add
push
adc
push
add
adc
add
add
add
rcll
gs
add
xor
out
dec
jns
fisubrl
repz
mov
cmpsb
add
mov
add
mov
pop
rol
mov
jns
mov
add
scas
aam
insb
icebp
cli
dec
rolb
add
mov
sub
jge
lcall
mov
aam
inc
rolb
mov
scas
jbe
mov
mull
add
push
add
mov
icebp
pop
sub
mov
sbb
or
les
addb
mov
sub
insl
add
sub
adc
pusha
add
cmpsb
add
nop
add
xchg
add
dec
nop
add
add
in
test
addr16
adc
mov
loop
jnp
add
or
add
arpl
or
cltd
xor
or
lods
and
pop
fisttps
mov
popa
and
es
data16
lock
xor
arpl
add
int
mov
inc
add
mov
fidivrs
aas
xchg
dec
mov
add
and
mov
movb
jl
inc
cmp
mull
into
js
add
std
testb
xchg
add
add
add
repz
imul
in
push
add
xchg
or
adc
add
jno
add
dec
sbb
jnp
repz
popa
data16
add
jbe
aad
add
mov
xchg
push
sbb
mov
add
add
hlt
add
cld
jne
add
insl
sub
add
add
add
std
mov
inc
call
add
dec
jg
imul
lcall
mov
arpl
add
add
add
add
out
test
loop
ret
lret
icebp
sub
add
cmp
mov
jnp
add
pop
test
in
incl
sahf
mov
in
adc
ret
or
add
add
dec
mov
push
ljmp
xor
mov
fwait
cmpsl
cltd
lods
sbb
add
mov
mov
mov
add
add
cmp
cmc
inc
add
and
mov
pop
out
out
repnz
sbb
add
dec
mov
xchg
dec
dec
sahf
mov
fisubrs
lods
push
add
adc
pop
mov
outsl
in
gs
movsl
mov
bound
mov
add
push
add
in
add
enter
add
lcall
ficomps
mov
aas
adc
in
xor
stc
cmpl
pop
lret
dec
push
cmp
jo
mov
mov
xchg
daa
sub
add
into
test
addr16
xchg
pop
jb
lret
xor
add
add
mov
sbb
jle
add
pop
add
sti
sti
add
call
loop
dec
jg
clc
aad
pop
data16
in
lods
sarl
or
dec
jg
adcl
lret
lods
or
das
ss
or
movsb
add
cmp
addr16
addb
dec
pop
and
add
sarl
popa
ds
add
xchg
push
add
mov
add
sbb
or
out
stc
addb
add
pop
push
add
mov
cmp
out
loopne
add
mov
add
add
inc
xchg
fisttps
push
add
addl
sahf
stos
sub
mov
or
jne
or
fmul
cmp
addb
pushf
mov
dec
hlt
add
mov
and
jl
add
lods
pop
insl
cmp
dec
mov
outsl
pop
xor
arpl
add
push
mov
movsl
add
insb
add
call
add
jns
movb
add
or
in
push
add
ja
sbb
add
ja
and
mov
mov
add
data16
xchg
dec
xchg
add
cmp
add
cs
push
aas
sub
xor
adc
nop
add
add
addb
or
shll
add
sbb
outsb
cld
push
scas
fdivrs
lea
cwtl
movaps
xchg
add
mov
ljmp
pop
sbb
sbb
push
add
xchg
add
or
popl
add
test
mov
lods
stos
xor
or
cmp
add
mov
add
loopne
pop
test
add
add
sub
jmp
mov
jnp
movsb
add
repnz
xchg
add
int
fcmove
inc
mov
test
add
js
xor
aas
xor
mov
xchg
adc
add
adc
xlat
addr16
inc
add
mov
popa
popf
xchg
sbbl
cmpl
add
add
add
pop
lret
xor
mov
jne
std
dec
ljmp
mov
add
nop
add
sub
cmp
scas
push
add
xchg
lahf
lods
sub
add
sub
dec
out
mov
push
add
mov
pop
push
add
aad
add
xchg
add
add
in
lods
movl
add
fwait
sahf
xchg
insb
imul
lds
pop
addb
add
or
add
cmp
mov
cmp
add
adc
dec
jmp
add
mov
jge
out
inc
add
add
add
sub
rolb
mov
rolb
or
mov
aam
cmc
cmp
jle
add
imul
add
dec
inc
add
punpckhwd
imul
pop
add
mov
mov
inc
add
add
mov
add
popa
dec
imul
movb
add
mov
push
add
insl
push
sbb
jg
mov
push
add
add
mov
mov
sahf
mov
mov
test
xor
das
filds
aaa
mov
or
mov
inc
mov
pusha
add
mov
xor
adc
adc
dec
cld
and
or
pop
rcr
cwtl
adc
clc
fcmovnbe
add
test
adc
das
inc
add
add
mov
test
mov
add
add
jmp
add
sub
add
add
outsb
push
dec
jge
add
mov
add
pop
or
jnp
popf
lcall
push
jne
jbe
xor
add
xor
mov
stos
leave
cld
int
clc
shrl
fistpll
data16
add
pop
inc
add
testl
add
jno
sbb
push
sbb
aad
add
mov
cwtl
ds
add
sbb
cmp
xor
jg
add
jae
mov
add
add
jmp
add
jnp
xchg
mov
repnz
ret
sti
mov
add
add
pop
xchg
call
in
cmpsb
add
mov
sarl
out
jecxz
add
add
arpl
sbb
dec
test
add
repz
push
and
mov
stc
sub
ds
add
fst
add
add
inc
add
jbe
xchg
call
sbb
add
inc
add
jge
gs
jmp
add
add
add
mov
rolb
int
add
mov
xchg
dec
inc
add
bound
mov
inc
add
std
add
mov
mov
add
and
mov
in
or
or
into
sbb
fisubl
mov
mov
xchg
add
add
mov
lods
mov
jb
je
les
data16
add
adc
sbb
mov
dec
int
icebp
loopne
movb
adc
icebp
sbb
sub
out
add
aaa
ret
popf
cmp
mov
adc
sahf
mov
push
add
mov
stc
push
les
out
xchg
add
jbe
std
data16
js
enter
xor
test
mov
cmpl
lods
ret
jmp
inc
add
add
int
add
mov
pop
jmp
add
cli
lds
sub
ja
add
add
mov
add
cmp
add
rolb
xor
add
lcall
add
pop
fmull
add
out
shld
or
add
cltd
ret
dec
dec
pop
movsb
add
add
mov
xorl
insb
scas
int
add
xchg
add
add
shrl
out
adc
pop
push
add
add
lret
push
add
push
add
xor
pop
and
int
add
hlt
add
mov
add
loopne,pn
aas
push
mov
cmp
xchg
xor
jp
add
daa
inc
mov
clc
mov
jae
cwtl
mov
ret
add
mov
push
das
loop
out
mov
adc
sti
xor
cwtl
mov
add
xchg
add
add
sub
ds
add
inc
hlt
add
int
mov
push
js
add
negl
loop
inc
add
sub
addb
add
push
add
and
add
and
mov
add
rcl
fiaddl
jae
add
or
dec
popf
or
adc
rolb
push
insb
cmp
lea
inc
cmp
add
add
push
add
xor
xchg
xchg
rolb
nop
add
mov
out
out
mov
pusha
add
dec
xlat
out
add
testb
leave
repnz
dec
xor
mov
je
in
inc
roll
add
add
cwtl
lock
add
das
addr16
inc
add
hlt
add
idivl
cmp
lcall
xlat
and
mov
pop
inc
cmpsl
repz
mov
popf
cs
or
add
add
add
imul
xchg
scas
sub
sub
add
add
in
add
mov
xor
jno
mov
cmp
inc
add
iret
incb
lods
adc
add
mov
add
sub
sub
dec
fimull
movsl
push
loope
addb
sahf
pop
fsubrl
bound
mov
add
fbstp
pop
test
sub
sub
add
add
out
into
push
aaa
add
mov
or
xchg
add
push
add
add
add
mov
dec
mov
ja
or
xor
add
xchg
add
adc
add
xor
loope
inc
sub
mov
add
add
push
add
jo
cmp
sti
jo
lock
mov
je
outsl
pop
scas
dec
add
cltd
pusha
add
sub
add
xchg
lahf
cmp
sar
jno
mov
movsl
add
add
lcall
cld
out
aad
add
pop
jp
adc
mov
movsl
fldcw
das
jb
iret
daa
xchg
add
add
rolb
inc
xchg
dec
push
fwait
addb
add
and
mov
lock
add
mov
stc
dec
mov
add
pop
mov
add
add
add
mov
add
mov
pop
adc
dec
mov
sub
add
push
add
xadd
mull
ss
movsb
add
push
add
xchg
out
mov
add
add
mov
add
add
testb
add
push
add
out
pop
rolb
dec
scas
divl
pop
cs
dec
test
add
add
add
mov
addb
movsb
add
add
push
add
add
mov
mov
sbb
gs
inc
add
jno
add
mov
add
add
xchg
rolb
mov
mov
xlat
fwait
add
dec
push
add
add
rolb
and
aad
add
add
fnstsw
leave
aad
add
push
add
pop
cs
dec
int
mov
push
add
add
mov
add
add
add
faddp
sub
xchg
add
fwait
push
add
lds
add
add
insb
xor
or
pop
addb
pop
xchg
push
lret
add
ret
std
movsb
add
jmp
cmp
pop
jbe
add
add
add
rolb
dec
ljmp
in
mov
xor
push
add
loope
mov
mov
aad
add
dec
call
add
add
add
loopne
sbb
add
inc
add
out
aam
inc
add
insl
sub
and
mov
inc
movsl
jbe
cmpl
and
mov
mov
add
aam
push
add
ja
movb
add
xor
pop
lods
push
jg
pop
scas
lds
cmp
ret
jge
fildl
xor
clc
in
push
add
add
inc
test
inc
je
daa
sbb
adc
call
dec
addb
nop
add
cwtl
inc
add
add
loop
push
lock
lds
fildll
pop
inc
add
ljmp
pop
std
inc
inc
rolb
add
mov
push
enter
add
push
add
add
add
add
add
stc
mov
push
cmpsb
add
add
pop
jmp
mov
add
and
std
adc
lahf
lret
sub
out
xchg
daa
testb
test
add
insl
xor
aas
fisttpll
add
loop
clc
fnstcw
das
pushf
clc
addr16
sub
out
mov
data16
jge
add
push
add
add
pushf
mov
xchg
or
rolb
xchg
add
mov
add
pushf
scas
jmp
mov
add
mov
push
add
sbb
adc
dec
lods
and
popf
jbe
lock
adc
les
scas
cmp
sbb
add
add
sub
add
jmp
or
daa
add
cld
mov
div
movsb
add
addb
test
cmp
add
mov
mov
inc
add
mov
and
lock
sbb
pop
push
add
add
inc
add
push
and
out
popf
les
mov
cmpsl
testb
push
dec
les
jns
xchg
jo
dec
adcl
sbb
add
xchg
push
add
adc
mov
fisubrs
add
data16
stos
jmp
push
add
jns
add
add
aas
jne
add
add
add
int
inc
mov
lahf
fdivl
jmp
int
jae
push
rolb
rolb
add
cltd
lods
mov
in
in
idivl
neg
xchg
cld
xchg
add
add
divl
testb
iret
inc
jp
jl
sub
mov
icebp
iret
lds
dec
cmp
mov
xor
lret
push
add
test
push
add
add
mov
mov
add
fistpl
or
add
in
addl
sub
lea
push
dec
out
inc
add
movsl
mov
test
pushf
mov
add
mov
sbb
fwait
repnz
int
add
in
dec
add
repnz
aas
ja
scas
mov
cld
jnp
add
xchg
cmpsb
add
fldcw
stc
mov
push
mov
push
add
mov
scas
xor
cmp
push
push
add
fadds
pusha
add
ffree
add
add
scas
or
mov
js
add
mov
int3
addb
fwait
cmpsl
push
pop
shll
jle
add
add
mov
and
fcomps
mov
add
mov
add
sahf
sub
add
bound
mov
in
lock
add
jns
add
data16
add
jmp
cmp
sub
push
inc
add
add
xchg
fmull
pop
mov
repz
dec
addb
add
mov
add
push
add
mov
mov
fcomps
outsb
pop
arpl
mov
add
sbb
add
sub
dec
dec
arpl
stos
xor
adc
xchg
dec
add
add
cmp
les
stc
push
lret
inc
add
mov
movb
add
jg
nop
add
ds
mov
sahf
lcall
test
or
cmp
out
ss
xor
sub
xchg
add
mov
pop
xor
fistpll
pop
jmp
add
cmpl
and
sbb
out
lret
add
movaps
imul
pop
cs
aaa
sub
xchg
push
add
mov
lds
ljmp
mov
cmp
jo
sbb
add
mov
stos
mov
nop
add
add
insb
mov
ficomps
add
add
mov
add
mov
in
push
add
stos
imul
in
cs
xor
ljmp
mov
add
insl
mov
out
outsb
push
add
mov
out
fisubrs
lds
add
add
add
in
cltd
bound
mov
add
push
outsb
mov
add
add
add
dec
lret
add
add
loop
adc
inc
add
mov
add
out
test
mov
xor
pop
shll
xlat
pop
sbb
inc
add
out
daa
mov
repz
add
gs
push
add
add
add
pushf
into
addb
enter
out
mov
and
mov
pop
lret
ret
push
cli
and
xchg
fldenv
aad
mov
popa
push
aad
add
pop
jae
fistpl
sbb
adc
inc
fildl
lret
in
add
into
adc
hlt
add
xor
dec
out
insb
xor
movb
jecxz
add
add
out
add
notl
popa
orl
add
mov
add
sbb
jnp
xor
fidivrl
mov
loope
add
les
add
sbb
pop
out
mov
add
xor
xchg
or
lret
mov
mov
push
add
add
mov
cmp
xorl
push
jns
xlat
dec
add
int
add
movb
add
lock
pop
insl
add
mov
cwtl
stos
adc
xor
ret
lret
int
add
add
lahf
add
fistpl
jne
add
dec
and
add
add
add
dec
xrelease
inc
push
jns
daa
in
stc
adc
inc
xchg
ret
jge
mov
dec
fwait
rolb
push
add
push
add
add
add
fisttpl
add
jnp
sub
adc
stos
pop
xchg
mov
add
mov
add
xchg
xchg
and
dec
ja
testb
add
mov
jl
add
rcll
add
cmpsl
push
lea
adc
ret
xor
mov
in
rolb
js
lcall
add
push
sbb
add
inc
adc
faddl
mov
mov
add
xchg
lcall
sbb
aam
repz
add
sbb
ret
enter
data16
mov
cmp
in
pop
mov
sti
dec
lds
pushf
sbb
jg
xor
repnz
lret
sub
add
pop
inc
add
mov
dec
test
add
mov
pop
add
stos
push
add
mov
inc
sub
mov
mov
insl
nop
add
add
add
jae
inc
add
pop
ret
add
fs
mov
aam
inc
mov
add
add
add
sub
push
add
dec
or
mov
fs
ja
inc
add
xor
rolb
add
add
add
adc
test
mov
add
jecxz
or
cmpsb
add
push
and
dec
mov
mov
and
mov
or
add
sub
xchg
add
add
adc
fwait
xchg
stos
sub
leave
sub
add
add
mov
loope
jge
rolb
je
xor
pop
gs
xchg
fstpt
mov
js
pop
adc
inc
add
hlt
add
and
mov
add
or
cmpsb
add
add
mov
add
add
mov
jecxz
jmp
inc
out
stos
inc
test
cmp
add
cmp
hlt
add
adc
and
mov
mov
add
pusha
add
jl
mov
scas
mov
add
ret
add
inc
jge
adc
push
add
jo
push
add
mov
push
add
jecxz
movsb
add
nop
add
push
add
xchg
adc
pop
add
outsl
ljmp
jp
rolb
sti
imul
addb
arpl
std
add
mov
lea
mov
jle
add
adc
loope
mov
lods
cmc
fld
imul
add
in
mov
and
add
xchg
lock
out
add
pop
dec
push
mov
loopne
add
mov
add
mov
add
xchg
add
add
add
into
mov
add
xor
lods
pop
leave
xor
pop
add
push
add
add
jecxz
pop
loop
hlt
add
in
rolb
add
push
add
mov
into
les
inc
add
mov
pop
pop
lea
add
stos
mov
jnp
jg
test
add
add
add
mov
fnsave
ja
add
add
sbb
sub
cld
inc
xlat
inc
mov
add
roll
dec
mov
lret
inc
add
out
xchg
je
loope
add
out
out
add
add
pop
xchg
dec
ds
aam
int
mov
lods
popf
iret
nop
add
ljmp
lret
xchg
fwait
ja
stc
pop
push
mov
add
add
add
addb
lock
inc
das
or
and
mov
jecxz
add
adcl
add
outsl
pop
rolb
insl
xor
rcr
stc
cmc
push
push
add
mov
mov
jmp
add
add
cmpsb
add
lret
jge
add
shll
or
xchg
add
lahf
jb
sbb
data16
jge
add
xchg
add
mov
or
loopne
pop
call
add
mov
negl
mov
add
imul
mov
cmpsb
add
cmp
add
add
jnp
loop
jge
add
lea
mov
add
jns
sti
stos
int3
fdivr
rolb
fildl
cli
xchg
add
lahf
jbe
les
cmp
and
mov
arpl
sbb
cmp
imul
mov
add
add
dec
pop
sahf
add
push
cmp
add
fidivrs
push
add
add
sub
mov
dec
and
add
add
or
add
add
dec
orl
insb
jmp
adc
jmp
mov
in
sub
jge
push
setp
mov
into
lret
repnz
clc
mov
add
add
add
add
jnp
in
mov
add
loop
lret
pop
push
add
mov
dec
sub
sti
cmp
aad
cwtl
scas
cmp
pushf
xorl
stc
push
push
sub
jl
jb
jmp
add
add
add
mov
hlt
add
or
lret
xchg
fsubs
inc
add
mov
add
roll
nop
add
jb
lock
add
inc
add
pusha
add
pop
jns
imul
inc
in
xor
dec
pop
int
add
fisttps
add
jnp
addb
sub
sbb
sbb
enter
repz
add
mov
xchg
add
repnz
popa
inc
add
xchg
lcall
add
add
out
and
mov
or
and
mov
add
jb
xor
mov
fbstp
bswap
addr16
ds
jo
jae
mov
add
les
jecxz
xchg
cmp
int3
push
push
add
inc
lret
dec
fisubl
insl
inc
addb
dec
cmp
pop
pop
push
add
and
push
imul
call
add
mov
sti
dec
lret
mov
add
add
ffreep
add
jne
add
mov
mov
cmp
add
mov
add
mov
lret
les
xor
add
add
cmpsl
pop
addb
add
add
add
sbbl
js
add
rolb
jg
add
arpl
or
sub
aad
add
add
pusha
add
mov
add
sahf
jb
add
mov
add
add
adc
cmc
out
jge
in
aam
lret
mov
dec
jns
dec
xchg
call
add
sub
adc
cmp
add
mov
pop
add
mov
addr16
add
add
or
jns
jmp
jno
dec
adc
cltd
jp
dec
test
jl
fildl
inc
add
out
pmulhw
mov
adc
dec
xorl
je
or
jmp
test
pop
popa
jmp
icebp
fcoml
add
add
test
mov
mov
popf
or
add
sti
mov
shrl
daa
push
add
cmp
sbb
add
add
pop
aaa
xchg
xchg
add
mov
mov
add
add
cli
test
notl
add
mov
xor
sahf
iret
inc
add
fwait
mov
add
scas
lret
cli
sbb
or
rolb
push
add
add
inc
add
popf
ljmp
das
filds
sub
bound
mov
mov
push
add
outsb
add
sub
mov
inc
mov
stos
in
jl
sahf
mov
add
inc
add
mov
push
dec
lds
mov
xchg
add
inc
sbb
test
add
setg
add
xor
and
and
mov
push
popf
movb
add
add
mov
ficomps
les
xchg
jge
add
in
or
add
add
sbb
xor
bound
mov
cmp
add
aas
xchg
add
cmp
add
dec
sbb
mov
add
adc
jmp
loope
test
add
inc
stc
jge
add
enter
aas
mov
push
data16
fldenv
mov
orl
rolb
or
add
add
inc
add
notl
pop
jmp
add
addr16
add
add
shll
mov
mov
add
loopne
popf
sbb
mov
add
add
mov
pop
cld
and
rcrl
add
xchg
inc
add
add
pop
inc
add
adc
jne
idivl
jmp
enter
sub
sub
add
xchg
leave
pusha
add
mov
ret
lret
add
in
add
mov
add
push
add
add
xor
dec
sbb
xchg
ljmp
cld
cltd
or
mov
add
cmp
dec
jg
in
xchg
push
add
or
mov
mov
idivl
mov
mov
cmp
pop
movsl
push
add
jl
cmp
push
xor
bound
mov
jnp
push
jmp
mov
sub
add
add
add
adc
ret
popa
pop
push
add
xchg
add
add
out
imull
add
dec
test
xchg
addb
add
add
sub
push
popl
mov
loope
dec
sti
outsb
hlt
add
add
add
inc
repnz
add
jb
movsb
add
add
inc
int3
and
mov
mov
add
and
mov
test
in
in
or
cli
addb
xchg
add
bound
mov
loope
lods
lods
and
add
stc
popf
pop
fimuls
inc
add
add
sub
gs
jnp
mov
repz
imul
add
ja
loope
loop
mov
add
and
add
mov
fcmovne
xor
jnp
xchg
cltd
sub
sub
popf
mov
pop
inc
stc
cs
inc
push
in
sbb
clc
and
push
add
mov
les
insl
aaa
test
jp
std
addl
mov
test
push
add
popa
sbb
xorl
push
add
out
mov
sbb
add
add
add
sub
jge
push
add
add
or
adc
jmp
mov
add
aaa
xor
movb
sub
add
mov
add
scas
ficoml
xor
aaa
fiaddl
inc
mov
lcall
add
push
cmp
inc
ja
into
or
imul
add
and
aaa
sbb
mov
xchg
add
dec
xchg
jl
add
ret
rcr
add
cmp
add
gs
add
xor
cmpsl
inc
sub
fwait
xor
lret
push
cld
rolb
pop
and
cmp
mov
and
mov
add
inc
dec
ds
stos
adc
lcall
xor
fcmovu
popa
mov
movb
pop
xor
movsb
add
add
sbb
add
in
int3
dec
out
mov
mov
add
add
mov
sub
add
push
es
xor
mov
jo
test
lar
mov
inc
add
sbb
xor
mov
movsl
sbb
mov
repnz
add
mov
mov
adc
js
mov
outsb
xchg
add
sub
add
add
inc
add
adc
out
test
add
mov
xchg
add
add
xchg
add
push
icebp
nop
add
pop
mov
loopne
out
stc
xchg
cmpsb
add
add
adc
mov
add
rolb
xchg
shrl
mov
test
test
add
add
add
adc
cmc
or
iret
push
cltd
movb
xchg
sbb
or
add
add
mov
test
sub
jno
add
jl
add
pusha
add
inc
std
mov
cs
sbb
cmpsb
add
int3
dec
out
add
inc
add
ret
stos
jecxz
mov
add
mov
pop
sub
add
sub
enter
sti
cmp
std
add
iret
add
pop
sub
pop
es
xchg
add
mov
ret
data16
inc
add
add
loop
je
into
sbb
add
mov
add
and
mov
add
pop
cmp
addb
add
add
jne
mov
js
sbb
loop
mov
call
shll
mov
add
add
mov
push
stos
mov
add
adc
inc
add
mov
add
add
xchg
pop
rolb
popl
mov
gs
add
add
pop
call
ljmp
in
or
xchg
add
add
add
jge
fadds
add
pop
and
mov
pop
cmpsb
add
mov
add
les
lcall
mov
sbb
movsl
pop
sahf
adc
pop
test
adc
adc
lds
cmp
pop
pop
inc
add
pushf
jmp
add
sbb
fistpll
xchg
nop
add
sbb
cmp
pop
xchg
mov
in
sbb
add
add
mov
add
add
mov
xchg
add
shll
add
sub
or
add
add
push
add
pop
xchg
mov
popa
movb
shll
inc
insb
push
add
inc
lret
add
inc
add
leave
lods
pop
xor
push
add
add
sti
cmpsb
add
pop
xchg
addb
rolb
or
dec
jmp
cld
adc
dec
dec
xchg
add
aad
pusha
add
inc
loopne
xor
dec
decb
gs
sbb
out
shll
fistpll
ss
cmpsb
add
insb
in
repz
add
dec
clc
sub
add
pushf
adc
enter
or
insb
inc
add
mov
and
or
mov
add
dec
pusha
add
add
pop
push
add
popa
nop
add
mov
add
sub
sar
xchg
sub
jno
fcoml
add
adc
in
pop
xor
dec
xchg
iret
cmp
in
js
push
add
pop
sub
int
call
add
out
mov
pop
and
mov
add
ss
add
adc
call
add
adcl
mov
jp
sti
and
adc
test
add
push
leave
lods
fadd
pushf
sahf
or
mov
mov
add
insl
inc
add
nop
add
add
call
mov
jg
add
in
mov
imul
add
add
push
add
jp
add
add
add
xchg
add
adc
add
pop
push
xchg
aas
add
mov
das
pop
fsubr
ret
add
add
fbstp
int3
inc
add
jge
pop
repz
jnp
push
mov
mov
pusha
add
adc
arpl
push
push
add
sub
add
mov
push
mov
inc
add
add
scas
jp
in
push
add
fs
jg
ftst
add
add
testb
add
sub
fadd
add
pop
jo
in
punpckldq
mov
jge
adc
pop
sbb
outsl
jp
aaa
addb
repz
stos
ljmp
leave
dec
std
stos
cli
into
add
mov
jecxz
aam
pop
addb
out
pushf
jge
cmp
pushf
pop
das
cwtl
repz
push
add
jno
cltd
popa
fwait
jle
sub
adc
imul
add
dec
push
push
add
jb
dec
adc
lock
cmp
add
add
mov
jg
cld
testb
loop
fbstp
ja
mov
add
sub
add
add
add
rolb
pop
inc
addr16
add
sti
mov
xchg
jecxz
insl
test
cmp
lods
xchg
add
in
das
pop
push
xor
mov
and
jbe
or
arpl
mov
int
cmp
add
addb
inc
insb
cmp
jbe
data16
dec
adc
xchg
add
add
lea
imul
lods
fdiv
add
push
add
add
fsubr
sti
cmp
mov
jns
sub
cmpsb
add
sbb
data16
cmp
les
mov
xchg
add
add
shll
push
sub
jae
popf
jae,pn
fdivs
lods
push
add
add
dec
mov
add
in
add
add
cmc
into
gs
add
add
lock
insb
aam
sbb
movsb
add
mov
aaa
call
mov
mov
or
add
fstl
sub
nop
add
movsl
xlat
rolb
aaa
xor
lret
xor
push
add
add
add
aad
mov
cmp
cmp
dec
out
movsb
add
add
xchg
add
pop
aas
mov
or
jo
clc
iret
adc
lds
and
mov
inc
add
in
xor
cs
xchg
inc
add
les
enter
add
mov
mov
add
add
mov
movsl
test
sti
sub
xor
fbstp
sbb
sti
testb
add
jne
or
out
dec
adc
mov
cmp
inc
push
add
add
add
xorl
jmp
add
add
lea
cmp
popa
stc
in
stc
hlt
add
add
add
add
lods
lcall
ljmp
inc
aas
mov
xchg
jnp
jbe
inc
jge
or
add
push
add
push
add
add
lods
popf
stos
sub
jecxz
les
jno
sbb
movsl
mov
ja
add
add
ljmp
mov
cli
jns
add
mov
test
mov
jg
fwait
movb
add
mov
lock
cmc
int
imul
lds
xchg
mov
add
push
rolb
adc
movsb
add
int
add
enter
aaa
pusha
add
in
add
mov
mov
cltd
daa
jg
add
dec
loopne
inc
add
insb
pop
fwait
int
add
lcall
and
mov
mov
jbe
xor
fildl
mov
mov
inc
xor
mov
cld
hlt
add
cmpsl
dec
adc
add
mov
dec
fsubrl
jmp
add
cmc
xchg
cmp
and
mov
xchg
rcrl
add
mov
int
mov
sarl
scas
ror
int3
cmp
mov
inc
add
add
sub
imull
or
add
add
js
insl
test
ljmp
icebp
pop
mov
data16
add
mov
mov
mov
push
add
xor
mov
enter
add
sbb
add
add
fwait
cmpsb
add
cld
mov
add
add
sub
mov
mov
add
push
sub
test
mov
mov
aam
stc
popf
xchg
cmp
imul
mov
inc
add
jbe
ja
adcl
add
add
fmull
cwtl
movsb
add
jbe
push
add
data16
in
mov
outsl
movb
cmpsl
in
cmp
add
adc
outsb
mov
xor
in
jge
mov
fdivs
add
or
mov
sub
cld
insl
test
and
jl
rolb
and
mov
add
xchg
mov
fists
xchg
bound
mov
push
add
add
sbb
inc
inc
rorl
loop
inc
add
ret
jg
addb
add
call
mov
clc
lods
sub
mov
add
mov
test
data16
data16
mov
outsb
adc
popf
in
mov
dec
cli
xchg
or
xor
add
mov
jo
add
in
xor
pop
data16
test
shrl
and
add
mov
pop
sub
pushf
mov
adcl
cmp
int3
add
inc
pop
push
mov
pop
jge
cmp
mov
mov
daa
cs
into
push
add
in
stos
call
sub
add
inc
mov
dec
fimuls
jmp
rolb
ret
add
mov
mov
mov
mov
xlat
in
push
int
add
in
and
mov
stos
mov
pop
jp
add
or
add
sub
in
sbb
mov
lcall
je
out
mov
mov
push
add
movntps
addb
xor
mov
cli
push
into
sub
cmp
inc
cmp
jg
fcoml
add
add
into
xchg
and
add
aad
inc
add
add
out
loop
dec
insb
mov
inc
xor
addb
fcoms
add
add
add
mov
mov
xchg
sub
mov
pop
add
push
add
xchg
add
ficompl
and
or
pusha
add
mov
add
mov
pop
xor
fcompl
pop
pop
cmp
xor
push
stos
mov
sbb
lock
clc
xchg
cmpsb
add
xor
rolb
jnp
adc
sbb
adc
inc
add
add
add
adc
jecxz
add
lcall
pop
jp
dec
out
inc
out
out
mov
mov
icebp
xchg
xchg
ret
insb
dec
push
lods
inc
add
add
add
xor
dec
xor
sbb
mov
sbb
pop
incb
add
cmc
cmp
add
bound
mov
add
aaa
aam
mov
lea
xor
fdivr
jbe
mov
ret
gs
add
incb
rolb
sub
add
jbe
mov
scas
pop
adc
dec
inc
add
cld
popa
inc
sti
iret
movb
adc
stos
call
les
pusha
add
mov
aam
fs
mov
pop
mov
add
mov
jbe
mov
cmp
cmpsb
add
xor
outsb
mov
add
add
xor
sbb
mov
mov
inc
add
add
add
cmpsb
add
mov
mov
pop
adc
cmp
lcall
aas
pop
bound
mov
add
rolb
add
outsb
inc
xchg
addb
push
add
add
add
jle
pop
or
cmp
addb
mov
sbb
test
lods
roll
mov
mov
push
add
pop
cwtl
cmp
push
add
cmp
push
xchg
add
add
inc
add
adc
adc
in
add
jo
push
loop
ret
xlat
and
mov
call
xchg
aaa
mov
add
adc
push
add
pop
test
add
add
add
and
mov
xor
xor
inc
add
jae
and
mov
movsl
addr16
pop
pop
jp
sub
sub
pop
lcall
push
add
outsb
cwtl
sbb
add
inc
add
insb
test
aas
add
add
add
lods
fidivrs
cmp
push
add
test
rolb
lret
mov
mov
pop
xchg
add
add
lret
inc
arpl
loopne
icebp
inc
add
mov
cwtl
jecxz
and
and
mov
mov
testb
add
inc
add
insb
jbe
or
push
add
fwait
test
jnp
add
xchg
add
adc
rcll
loopne
or
mov
rorl
sbb
jb
out
sbb
frstor
mov
movsb
add
xchg
adc
push
out
stos
sub
cli
push
push
add
add
dec
scas
aam
jg
call
or
sbb
addb
add
mov
data16
jno
call
add
add
sub
mov
add
fsubrs
mov
jmp
pop
inc
cmpsb
add
push
add
mov
cli
movb
add
fsub
add
add
ret
sahf
fistl
into
cmp
add
mov
add
jecxz
or
add
std
repz
add
jle
cwtl
inc
add
mov
add
mov
pop
aam
xchg
hlt
add
fsubl
leave
into
jp
and
pop
and
mov
lahf
gs
pop
cmpsb
add
mov
fcmove
ja
xchg
add
inc
add
popa
fld
ret
add
sub
push
add
pop
cmc
data16
pop
inc
add
add
add
mov
add
add
js
or
add
jo
test
in
fdivrs
mov
pusha
add
mov
mov
inc
and
mov
mov
enter
rolb
ret
jnp
add
mov
dec
mov
push
sahf
movsl
mov
fstp
fdivrp
push
add
add
int
add
test
add
mov
xor
jecxz
mov
pop
cmp
ljmp
push
add
add
mov
lock
xor
insb
mov
sbb
addl
push
in
dec
jb
data16
sub
mov
jmp
add
mov
mov
adc
add
movsb
add
mov
lcall
mov
shl
add
xor
sbb
cs
add
das
add
mov
daa
int
pop
aam
scas
inc
fstpl
icebp
frstor
lds
imul
xor
jne
add
add
sbb
jge
jmp
clc
divl
add
or
inc
add
dec
scas
lahf
sbb
and
mov
add
in
les
out
jne
adc
icebp
xor
inc
mov
mov
frstor
lcall
sub
add
lock
loopne
and
push
inc
add
add
dec
add
cmp
inc
sub
add
jo
xor
addb
xchg
add
push
add
loope
sub
xchg
and
mov
add
mov
repz
test
mov
add
dec
loop
loop
mov
inc
add
mov
cmpsb
add
and
mov
add
mov
out
cmc
jno
add
xchg
add
imul
dec
xchg
mov
adc
aad
imul
pusha
add
add
mov
movsl
in
xor
jmp
push
add
add
add
mov
ljmp
add
and
lea
movb
and
iret
in
cmp
mov
cmp
pop
xor
cmp
mov
inc
add
mov
add
fidivl
xchg
add
add
cmp
mov
test
add
outsb
add
dec
imull
add
sub
sbb
add
cmp
sahf
scas
lcall
add
push
imul
inc
pop
loopne
pop
in
leave
sub
rcll
cmp
add
sub
mov
push
mov
mov
add
mov
cwtl
xor
cs
add
cmpsl
xchg
mov
pushl
mov
dec
lcall
pop
lcall
add
add
mov
lret
pop
mov
pop
and
mov
leave
xor
inc
add
lret
adc
sbb
scas
loope,pn
imul
add
add
jmp
cmc
adc
rolb
shll
xchg
inc
add
stos
pop
out
add
mov
stos
and
mov
jnp
add
inc
mov
push
add
add
test
sub
push
daa
sub
add
push
jecxz
dec
inc
or
mov
and
int3
icebp
fwait
punpckldq
mov
jmp
pop
sub
add
add
aad
bound
mov
or
xchg
add
and
mov
dec
cli
data16
jmp
xor
add
dec
pop
push
fbstp
lret
cmp
dec
dec
aad
in
mov
add
in
jb
ljmp
add
xor
pop
cltd
pop
dec
dec
out
sub
popa
jmp
rolb
push
addb
xor
push
xchg
dec
add
fnsave
add
fnsave
cmc
std
sahf
lds
inc
add
loopne
lods
pop
in
rcr
outsb
add
jp
pop
repz
adc
sub
add
ror
add
mov
pop
push
add
aaa
push
jnp
mov
addb
add
in
lds
add
outsl
fstp
mov
fsubs
add
arpl
inc
insl
lods
xchg
add
imul
loop
jmp
repnz
fs
fdivr
push
add
sbb
and
sahf
dec
adc
ljmp
lds
mov
jg
add
fcmovne
sti
adc
mov
sbb
add
rcll
test
inc
push
add
data16
add
fildll
add
add
add
add
in
mov
mov
fidivrs
add
xchg
and
mov
mov
imul
add
out
jl
adc
add
push
inc
add
mov
repnz
mov
add
pop
xchg
out
mov
sbb
push
das
addb
sti
dec
fstl
pop
cmp
add
add
add
cli
pop
mov
jge
fisttps
pusha
add
add
add
sub
add
rolb
mov
add
dec
fidivrs
mov
movsl
jmp
sahf
movsl
push
add
add
rcll
mov
jns
inc
test
rolb
add
add
stc
inc
dec
dec
add
iret
loopne
dec
mov
mov
rolb
push
add
mov
mov
adc
mov
inc
add
add
mov
add
add
sub
add
addb
fildll
cmc
adc
addb
add
cmp
add
inc
movb
sub
add
add
fnop
add
sub
mov
roll
add
ret
add
mov
fwait
mov
sub
and
mov
popf
adc
scas
dec
add
inc
add
add
imul
add
xchg
add
xchg
add
out
mov
dec
ds
test
jmp
add
mov
loopne
in
cltd
push
add
push
add
add
fucom
mov
add
cmpsb
add
add
add
cmp
fldl
popa
movsb
add
adc
xor
fwait
das
and
mov
lods
xchg
jno
xor
gs
pop
inc
stos
testb
pusha
add
imul
add
lahf
stc
dec
dec
push
pop
arpl
cmp
insl
ja
sar
insb
sbb
add
test
add
or
sbb
mov
sar
ffreep
add
push
inc
jns
jb
aad
stos
mov
dec
mov
sbb
mov
addb
addb
hlt
add
add
xorl
int
popf
push
add
jg
add
popf
jle
cmpl
add
cmp
lcall
pop
inc
adc
ficoms
and
les
mov
adcl
inc
add
loopne
adc
lods
push
mov
fimull
xor
mov
into
dec
stos
int
faddp
add
inc
out
rolb
push
add
into
mov
push
add
repz
adc
lcall
icebp
mov
xor
sbb
add
mov
add
mov
add
pusha
add
jne
push
add
adc
sbb
add
and
mov
pop
or
lahf
rcll
add
outsb
sarl
dec
sahf
sub
mov
jecxz
jnp
cwtl
rolb
insb
cmp
fdivrp
imul
stos
ljmp
add
int3
adc
pop
add
fisubl
and
mov
rcl
add
js
add
add
addr16
push
add
pop
fsub
add
fnstsw
test
aas
test
jge
inc
add
mov
cs
add
repz
rolb
outsb
cwtl
cmp
pushf
fistpll
add
mov
add
fyl2xp1
imul
push
mov
mov
dec
out
cli
testb
add
xchg
and
fcom
in
fists
scas
pop
shll
dec
int3
push
ds
outsl
xlat
arpl
daa
push
add
push
add
pusha
add
movsb
add
add
dec
lea
test
cli
xor
rolb
add
test
xchg
jae
xchg
add
adc
cs
push
adc
aam
sub
add
pop
inc
add
ret
popa
jno
jnp
jp
movsb
add
add
add
incb
add
cmp
push
add
add
xor
add
dec
jp
inc
add
add
cmpsb
add
add
ja
iret
aaa
js
lea
loopne
test
add
cltd
cltd
add
pushf
fsubrs
inc
add
add
push
add
dec
jno
add
jno
xchg
out
test
adc
lcall
and
mov
loopne
pop
fdivrl
dec
fxch
sbb
mov
testb
dec
push
add
and
mov
or
lret
ja
add
sti
test
out
clc
out
test
push
add
add
lahf
push
add
xor
leave
or
insb
add
xchg
add
add
add
mov
jns
add
neg
imul
addr16
jp
push
aad
add
mov
sar
sahf
sbb
inc
adc
dec
movsl
rolb
stos
mov
add
loope
add
and
mov
add
cli
fstl
dec
aaa
adc
lret
sahf
mov
ds
add
rolb
insl
pop
insl
in
jecxz
add
add
adc
std
add
add
movb
add
mov
fadds
or
inc
addr16
fsub
and
popa
sub
addb
pop
fwait
xor
jecxz
insb
jnp
add
bound
mov
dec
jno
add
daa
and
add
push
add
mov
add
pop
lock
dec
or
imul
or
add
leave
dec
shll
add
negl
xchg
add
pop
add
fildl
mov
repz
jmp
inc
add
mov
dec
rolb
push
or
sbb
hlt
add
mov
loope
outsb
mov
add
add
xchg
jnp
add
addb
lret
add
mov
mov
add
add
jmp
pop
xchg
clc
mov
leave
mov
lea
int
repnz
mov
add
add
add
dec
dec
xchg
add
add
add
cmp
add
fmul
lret
popa
in
or
jno
std
inc
test
aaa
adc
or
jbe
or
loope
data16
notl
add
add
jp
add
jne
and
add
add
aas
pop
dec
test
inc
sbb
mov
add
popf
dec
in
sbb
mov
cmc
and
dec
movsl
adc
dec
popa
cltd
flds
add
fwait
mov
add
sub
and
mov
add
add
add
dec
jno
add
mov
inc
add
mov
rolb
std
js
js
add
repz
xchg
in
insl
pop
insl
inc
add
ljmp
add
push
sbb
mov
or
add
add
stos
mov
addb
push
add
pushf
pusha
add
add
mov
jnp
add
incl
test
ret
xchg
push
add
inc
jno
neg
cmp
push
add
mov
jno
xor
add
aad
add
inc
psadbw
add
sub
add
mov
stos
xchg
jns
jg
adc
fbld
dec
sub
arpl
mov
insl
jl
out
sub
xchg
insl
push
aaa
popa
cmp
mov
lea
add
add
add
add
fidivs
mov
mov
cs
mov
cltd
cmp
clc
test
inc
push
add
add
mov
pop
mov
pop
pop
pop
cs
sahf
scas
pop
pop
lea
add
jle
add
jp
mov
dec
popf
into
mov
and
int
xor
adc
cs
lea
add
fwait
jb
stos
mov
add
pop
inc
xchg
sub
addb
add
sti
inc
add
push
cld
or
add
mov
outsl
xor
mov
lock
push
mov
icebp
lods
std
popa
std
hlt
add
add
mov
iret
inc
dec
xchg
add
mov
add
fistl
mov
mov
aad
add
mov
add
jmp
xor
mov
xchg
xchg
jmp
and
sub
add
gs
out
lods
fwait
das
jmp
add
add
hlt
add
in
shrl
and
pusha
add
mov
pop
mov
add
add
and
sub
aas
rolb
and
daa
or
rolb
pop
mov
cmpsl
cmp
sub
sbbl
mov
and
out
mov
and
cwtl
rcrl
mov
cld
mov
push
add
mov
add
mov
ret
xchg
add
adc
and
mov
sub
xor
mov
pop
sub
add
sbb
mov
push
pusha
add
jg
push
in
dec
sub
fcom
add
add
adc
iret
ret
push
add
push
out
fildl
add
sti
sub
mov
test
cmp
test
and
xchg
addb
add
add
lds
add
pushf
daa
stc
insb
incl
xchg
xchg
fcmovnu
push
add
add
xor
and
push
add
out
pop
ret
lahf
cltd
adc
add
add
or
add
pushf
in
outsb
add
mov
push
repnz
test
leave
sarl
pop
pusha
add
push
pop
dec
and
ljmp
mov
add
mov
and
mov
in
movsl
lock
adc
js
jmp
push
jmp
dec
ds
cli
ret
test
fcomps
dec
adc
scas
iret
int3
ljmp
rolb
bound
mov
mov
add
xor
xor
testb
cmp
aas
data16
add
mov
add
pop
add
aaa
repnz
add
mov
mov
push
addb
pop
jae
stc
sub
push
loop
les
add
add
mov
pop
mov
or
bound
mov
dec
sbb
pop
push
add
fcmovu
or
mov
or
add
add
in
sub
jmp
cltd
push
jns
popa
arpl
add
mov
into
fiaddl
add
add
mov
inc
mov
cmp
sub
pop
in
les
into
dec
adc
mov
mov
jge
add
mov
mov
cld
jle
icebp
gs
mov
add
add
aaa
test
sbb
cmp
dec
ret
cld
jne
add
sti
mov
cmp
or
scas
add
jo
and
xchg
sar
adc
into
jl
xor
rolb
stos
movzwl
push
add
sahf
loop
mov
mov
sub
mov
jae
add
inc
mov
mov
cmpsl
inc
inc
push
movsb
add
sub
add
imul
or
rolb
xor
mov
jae
mov
dec
pop
sbb
adc
in
push
add
sti
lods
push
xor
in
push
inc
sbb
dec
imul
movb
cli
xor
inc
add
sub
push
xor
add
push
lds
add
mov
iret
int
mov
add
or
cmpsb
add
clc
movsl
outsb
in
inc
add
aas
test
dec
add
imul
cld
or
mov
stc
int
inc
add
and
shll
add
add
int3
repz
gs
pop
loope
pop
xlat
inc
add
sbb
xchg
cmp
icebp
jmp
add
addr16
fdivl
lahf
aaa
int3
xchg
popf
jnp
lret
sub
add
add
mov
push
repnz
out
mov
xchg
adc
movsl
scas
mov
cmp
add
sbb
add
mov
dec
and
mov
mov
add
add
mov
lahf
push
fisubrl
daa
dec
ret
jp
xchg
add
add
add
sbb
add
repnz
add
add
