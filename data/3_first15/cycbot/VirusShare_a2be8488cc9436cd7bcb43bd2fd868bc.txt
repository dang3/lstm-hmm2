add
xor
xor
add
push
push
inc
adc
push
push
push
add
xor
push
add
jo
jo
add
bound
xor
add
inc
and
add
add
push
jo
and
add
and
xor
push
pusha
add
jo
and
add
add
adc
add
push
inc
jb
inc
inc
push
add
pusha
inc
xor
adc
adc
adc
adc
inc
inc
inc
and
add
and
push
add
jo
inc
xor
xor
jo
add
inc
inc
add
inc
adc
inc
jo
pusha
add
and
adc
add
adc
and
push
and
push
and
add
inc
inc
push
add
add
xor
add
add
jo
inc
jb
add
inc
adc
and
adc
jo
add
add
add
xor
push
add
push
jo
pusha
push
bound
adc
jb
inc
push
xor
adc
add
xor
jo
add
inc
adc
and
add
inc
add
jo
adc
jb
adc
pusha
jo
push
jo
push
inc
xor
push
inc
adc
xor
inc
pusha
pusha
add
inc
and
pusha
jo
push
push
adc
inc
xor
xor
push
add
and
jo
inc
inc
jo
pusha
xor
add
push
xor
inc
inc
inc
jo
add
xor
adc
inc
inc
xor
jb
xor
adc
add
adc
inc
push
inc
adc
add
pusha
xor
add
inc
add
inc
add
inc
push
and
push
xor
push
adc
push
add
and
xor
xor
adc
adc
push
add
xor
pusha
inc
xor
jo
add
xor
push
xor
add
xor
pusha
and
push
inc
bound
jo
inc
adc
inc
pusha
add
and
adc
push
add
inc
and
adc
inc
add
xor
push
adc
add
xor
jo
inc
add
jo
adc
jb
jo
xor
inc
add
push
adc
push
add
push
xor
add
and
xor
xor
and
xor
inc
and
push
pusha
adc
and
xor
jo
adc
add
inc
adc
inc
xor
jb
and
add
inc
inc
xor
and
jo
add
inc
jb
jb
and
adc
add
adc
xor
xor
push
inc
jo
adc
and
add
inc
pusha
adc
push
and
push
jo
add
add
xor
add
add
inc
add
inc
adc
add
adc
inc
and
xor
inc
push
adc
and
xor
pusha
xor
inc
pusha
adc
and
add
bound
inc
jo
xor
adc
xor
jo
push
add
add
push
inc
add
add
and
adc
jb
adc
adc
inc
xor
adc
jo
inc
xor
add
and
inc
inc
adc
inc
xor
jo
inc
xor
add
push
jb
and
and
inc
xor
add
add
and
xor
adc
pusha
xor
xor
add
pusha
and
adc
and
add
jo
jo
pusha
inc
inc
and
adc
bound
pusha
add
jb
and
add
and
pusha
adc
push
push
jo
jb
adc
inc
jo
add
push
bound
add
inc
add
jo
pusha
push
jb
adc
add
inc
inc
jb
bound
push
xor
jb
xor
and
xor
push
inc
push
xor
inc
and
and
pusha
inc
pusha
inc
xor
inc
inc
adc
push
xor
add
add
inc
jo
add
jo
adc
inc
add
inc
pusha
pusha
bound
inc
add
and
add
xor
pusha
push
inc
pusha
pusha
push
push
add
jb
and
add
pusha
jb
xor
add
adc
push
jo
add
and
inc
pusha
jo
add
pusha
jb
jo
adc
xor
adc
add
and
jo
add
and
adc
add
adc
inc
pusha
adc
add
push
jb
add
inc
push
adc
xor
push
adc
adc
adc
adc
and
add
pusha
adc
add
adc
add
inc
add
pusha
xor
jb
pusha
xor
add
add
and
adc
inc
push
inc
push
jo
adc
add
xor
jo
and
pusha
bound
adc
inc
pusha
jo
push
and
adc
adc
xor
xor
inc
push
pusha
and
adc
adc
xor
adc
push
jo
add
inc
jo
adc
xor
xor
pusha
adc
add
inc
adc
adc
inc
adc
inc
add
jo
and
pusha
push
add
pusha
and
add
and
pusha
xor
push
add
adc
pusha
jo
adc
add
push
xor
inc
add
jo
push
jo
inc
xor
xor
xor
bound
push
jo
push
add
xor
push
inc
adc
and
and
inc
adc
and
jo
jo
add
and
adc
add
push
jo
pusha
add
push
push
add
adc
inc
add
push
adc
inc
add
adc
pusha
jo
add
inc
jo
add
add
add
inc
inc
inc
inc
push
adc
bound
and
push
adc
xor
xor
add
xor
push
adc
add
inc
inc
add
add
adc
pusha
push
and
inc
push
bound
xor
inc
bound
jo
bound
add
push
adc
jb
add
add
push
xor
jb
jo
xor
inc
jb
inc
and
and
jo
and
add
jo
add
adc
inc
inc
pusha
and
bound
adc
xor
add
add
add
pusha
add
push
inc
and
bound
jb
bound
inc
adc
xor
xor
xor
bound
jo
adc
add
pusha
add
push
inc
jb
add
pusha
adc
add
push
inc
and
inc
inc
and
bound
add
push
xor
adc
add
push
push
add
add
push
and
jo
add
add
adc
jo
inc
add
and
jb
adc
and
inc
add
and
add
pusha
and
add
and
inc
push
jo
xor
jo
push
inc
add
jo
adc
bound
adc
add
jo
add
and
add
jo
add
push
pusha
jo
add
inc
bound
and
inc
jo
and
and
adc
xor
inc
add
add
adc
inc
xor
add
and
xor
add
push
jo
bound
add
pusha
xor
add
add
adc
inc
xor
bound
push
add
jb
bound
pusha
and
and
push
xor
push
and
xor
inc
add
inc
and
pusha
inc
adc
inc
add
adc
xor
xor
pusha
adc
add
push
add
adc
bound
add
push
add
push
inc
add
bound
inc
jo
add
jo
adc
pusha
inc
add
jo
jo
xor
add
push
inc
xor
add
pusha
add
bound
add
inc
inc
jb
push
add
adc
and
inc
and
add
push
push
xor
add
jo
jo
push
add
and
push
xor
add
add
inc
inc
and
add
push
and
adc
push
push
jo
push
adc
add
push
xor
jb
and
and
adc
xor
push
inc
push
push
adc
xor
inc
push
push
and
jo
inc
bound
adc
and
add
and
xor
inc
and
xor
add
pusha
add
pusha
push
adc
inc
and
bound
and
add
adc
inc
and
push
inc
push
inc
pusha
push
push
add
add
jb
adc
add
and
add
bound
push
and
and
and
inc
inc
pusha
xor
adc
inc
pusha
pusha
xor
push
inc
jo
and
add
xor
add
push
add
adc
and
jo
add
pusha
bound
bound
add
xor
and
xor
push
adc
add
xor
inc
jo
adc
push
add
and
and
inc
add
inc
inc
xor
and
add
add
add
inc
xor
xor
jo
add
jo
jb
pusha
inc
push
jo
pusha
inc
adc
add
and
inc
pusha
inc
adc
jo
add
push
push
add
adc
and
jo
jo
add
and
inc
add
add
add
and
add
and
xor
jo
and
add
jb
push
add
and
adc
and
pusha
push
pusha
adc
add
add
xor
add
adc
jo
add
jb
xor
pusha
jb
inc
jo
pusha
jo
add
jo
adc
jb
and
inc
pusha
push
inc
and
add
add
pusha
inc
and
and
push
and
add
pusha
jb
adc
inc
inc
and
push
inc
xor
adc
inc
add
adc
push
and
adc
and
push
add
pusha
adc
jo
inc
add
pusha
and
add
jb
push
xor
adc
inc
xor
adc
bound
jo
xor
add
adc
xor
inc
add
add
and
push
push
push
inc
inc
xor
add
add
inc
push
and
pusha
inc
and
jo
xor
add
pusha
push
add
xor
add
adc
jb
add
push
adc
jo
inc
inc
inc
xor
jo
pusha
xor
bound
pusha
push
xor
jb
inc
inc
jo
xor
jb
add
xor
inc
jo
bound
inc
xor
adc
add
push
adc
adc
pusha
adc
inc
add
adc
push
push
xor
inc
jo
and
adc
xor
push
pusha
add
add
inc
add
xor
jb
adc
adc
add
adc
inc
adc
and
adc
push
jo
pusha
push
add
jo
and
and
inc
pusha
add
and
adc
jo
add
add
xor
push
jb
jo
add
inc
jb
push
add
xor
add
add
xor
and
and
add
adc
push
and
jo
add
bound
adc
xor
pusha
adc
xor
add
xor
inc
add
add
add
pusha
inc
add
add
and
inc
inc
adc
and
jo
add
add
xor
pusha
jo
adc
and
inc
adc
and
push
add
pusha
and
add
and
add
add
add
push
inc
add
inc
add
pusha
pusha
pusha
bound
and
and
adc
inc
add
jo
and
add
xor
and
inc
inc
xor
push
adc
push
add
adc
bound
xor
push
xor
adc
inc
adc
push
push
pusha
inc
inc
push
inc
and
add
add
xor
and
inc
pusha
xor
add
push
add
inc
and
and
and
xor
add
xor
inc
add
pusha
add
push
add
add
add
jo
add
pusha
add
adc
push
inc
inc
pusha
add
pusha
push
jo
push
and
inc
add
xor
jb
push
push
jo
inc
add
jo
add
xor
add
xor
inc
push
add
push
and
xor
adc
inc
jo
inc
adc
push
inc
add
and
xor
add
adc
jo
add
inc
bound
inc
jo
pusha
and
push
xor
and
adc
adc
pusha
adc
push
add
adc
push
add
jb
jo
xor
add
push
pusha
adc
bound
inc
xor
add
add
add
adc
inc
inc
and
add
and
push
jo
jo
pusha
bound
xor
pusha
inc
inc
and
jo
adc
jo
inc
add
add
pusha
jo
add
add
push
pusha
jb
adc
push
adc
jo
add
pusha
push
push
pusha
push
add
pusha
add
and
add
adc
xor
jo
inc
adc
jo
adc
add
adc
add
add
xor
and
add
and
add
and
xor
pusha
inc
adc
xor
and
xor
inc
jo
inc
adc
adc
add
add
inc
add
push
push
add
add
adc
and
adc
inc
add
jo
xor
add
add
inc
pusha
push
add
push
and
adc
adc
and
jo
inc
bound
inc
adc
add
and
inc
inc
and
adc
inc
xor
jo
xor
inc
pusha
xor
add
adc
adc
and
adc
jo
xor
add
push
and
add
inc
add
and
inc
push
pusha
and
add
add
jo
and
pusha
and
xor
inc
push
jo
add
inc
jo
jo
xor
and
xor
inc
add
adc
and
inc
adc
and
xor
push
add
xor
xor
xor
inc
adc
inc
add
jb
pusha
push
bound
jb
jo
push
adc
inc
add
jb
bound
add
adc
inc
push
push
and
inc
add
jb
push
adc
inc
xor
pusha
inc
push
add
pusha
pusha
inc
add
inc
inc
inc
jb
add
add
and
push
add
add
pusha
jb
bound
jb
bound
and
add
inc
inc
adc
bound
xor
add
bound
add
add
jb
pusha
inc
inc
add
and
xor
inc
xor
add
jb
xor
jo
and
xor
inc
jo
push
inc
push
and
adc
xor
adc
add
and
add
add
pusha
pusha
xor
bound
xor
add
xor
add
jo
xor
add
inc
xor
jo
jo
bound
pusha
inc
adc
jo
add
inc
xor
add
push
pusha
and
adc
adc
add
adc
and
and
inc
push
push
and
and
bound
xor
add
push
xor
inc
jo
inc
and
xor
jb
adc
and
adc
jo
add
and
pusha
push
inc
and
add
add
inc
bound
xor
and
jo
adc
and
xor
inc
xor
xor
add
push
adc
adc
inc
pusha
and
jo
push
add
xor
and
and
inc
pusha
add
inc
add
adc
pusha
and
inc
xor
adc
add
add
xor
xor
and
add
add
xor
add
bound
xor
bound
inc
and
add
and
add
jo
add
and
pusha
add
xor
add
adc
jb
inc
inc
and
push
and
pusha
add
xor
and
inc
push
jo
xor
jo
add
inc
and
push
jo
inc
adc
push
push
add
add
add
pusha
pusha
add
and
and
xor
jo
jb
xor
add
xor
adc
xor
inc
pusha
xor
xor
add
push
and
bound
push
adc
push
and
jb
inc
pusha
push
and
add
jo
and
push
add
jb
and
push
add
xor
xor
adc
push
adc
inc
adc
xor
inc
pusha
adc
inc
xor
xor
adc
add
add
and
add
and
adc
add
inc
bound
adc
bound
push
inc
xor
add
and
xor
jo
add
adc
jo
xor
bound
xor
adc
pusha
add
xor
adc
inc
add
jb
and
jb
bound
add
adc
and
push
and
pusha
add
add
inc
pusha
inc
add
push
bound
inc
push
pusha
inc
inc
adc
push
xor
add
bound
bound
inc
inc
add
pusha
push
inc
bound
inc
push
xor
adc
inc
and
and
add
and
xor
pusha
push
xor
pusha
xor
add
inc
add
jb
bound
inc
inc
push
pusha
jo
adc
add
adc
xor
add
xor
push
push
jo
push
push
xor
and
add
push
adc
adc
bound
jb
push
add
and
and
xor
add
inc
inc
adc
xor
inc
add
add
jo
add
adc
adc
xor
adc
jo
adc
xor
add
push
inc
add
inc
adc
xor
and
add
jo
inc
bound
inc
add
add
add
add
add
and
xor
pusha
adc
xor
add
jo
adc
inc
xor
bound
xor
adc
xor
inc
inc
jo
xor
xor
add
add
bound
inc
adc
jb
push
add
add
inc
adc
adc
inc
xor
inc
push
inc
add
add
and
and
add
pusha
bound
add
add
pusha
xor
jo
add
xor
jo
and
add
bound
xor
add
xor
jo
adc
xor
add
and
add
jo
jo
pusha
and
push
adc
add
add
xor
add
add
inc
xor
inc
adc
add
pusha
push
adc
xor
push
xor
xor
add
and
inc
adc
adc
inc
inc
bound
pusha
add
jo
pusha
push
jo
add
push
adc
xor
xor
jo
and
add
pusha
jb
add
add
pusha
pusha
adc
add
jo
add
adc
adc
and
add
jo
bound
adc
add
bound
xor
xor
and
inc
xor
add
inc
add
add
inc
inc
push
inc
jo
xor
jb
jo
jo
bound
and
and
inc
adc
xor
jo
xor
push
push
push
and
pusha
jb
add
xor
and
add
inc
xor
inc
xor
inc
push
add
pusha
add
inc
adc
xor
inc
inc
push
adc
adc
add
adc
jo
xor
push
xor
pusha
push
jo
add
pusha
inc
and
inc
inc
inc
adc
inc
inc
pusha
and
add
jo
inc
jo
add
push
push
inc
push
xor
bound
xor
adc
xor
add
push
xor
and
xor
add
and
push
adc
inc
add
inc
add
add
and
push
push
inc
add
jo
jb
adc
bound
inc
and
jb
add
bound
and
and
inc
add
bound
and
add
pusha
adc
inc
xor
pusha
add
pusha
add
xor
add
adc
and
inc
and
jb
push
pusha
push
add
jo
jo
push
inc
inc
pusha
adc
add
inc
add
pusha
jo
push
and
add
and
xor
xor
push
jo
add
adc
and
jo
pusha
inc
push
adc
xor
adc
pusha
adc
add
pusha
adc
add
and
pusha
pusha
adc
add
add
adc
xor
add
xor
and
add
xor
jo
jb
push
and
pusha
inc
inc
push
add
add
inc
inc
pusha
pusha
inc
inc
xor
push
and
inc
add
adc
adc
inc
xor
and
add
push
push
xor
add
pusha
push
push
inc
add
xor
xor
add
inc
jb
jo
jo
jo
adc
jo
inc
adc
and
adc
jb
push
inc
adc
inc
xor
xor
push
add
push
jo
push
bound
jo
add
add
inc
and
jo
xor
inc
and
add
inc
adc
bound
adc
inc
add
add
inc
push
adc
add
inc
bound
add
jo
add
pusha
adc
inc
jo
and
inc
add
pusha
add
inc
pusha
pusha
add
add
push
add
add
pusha
adc
jo
add
xor
inc
add
xor
inc
pusha
pusha
adc
xor
jb
adc
add
jo
jo
adc
pusha
push
adc
adc
add
adc
pusha
inc
jb
xor
xor
xor
xor
jb
push
add
inc
inc
adc
adc
add
push
bound
push
add
push
pusha
add
inc
push
add
inc
pusha
add
add
and
adc
add
adc
xor
add
jb
jo
jb
and
push
jo
add
push
jo
add
and
push
push
adc
inc
xor
jo
add
add
jb
inc
inc
adc
push
and
add
and
add
jo
pusha
add
inc
xor
add
add
jo
xor
jb
push
add
pusha
bound
add
push
add
inc
inc
inc
bound
add
pusha
xor
pusha
inc
add
push
xor
inc
add
add
adc
add
add
and
inc
inc
xor
adc
add
add
jo
push
pusha
adc
inc
xor
adc
pusha
jo
add
and
adc
add
jo
add
and
pusha
add
jo
adc
and
add
and
and
push
add
inc
inc
jo
add
add
push
inc
xor
bound
pusha
push
jo
add
inc
push
xor
add
pusha
inc
pusha
pusha
push
jo
and
jb
push
inc
and
and
adc
and
add
inc
push
xor
push
inc
push
and
xor
adc
and
push
jo
and
jo
jb
push
add
add
xor
push
push
add
pusha
inc
inc
and
and
add
adc
pusha
adc
push
inc
adc
inc
push
xor
bound
inc
add
pusha
and
xor
inc
pusha
add
add
xor
bound
inc
and
adc
and
xor
adc
push
add
add
and
add
adc
inc
add
inc
xor
add
inc
add
add
adc
pusha
adc
add
bound
add
adc
and
push
add
adc
push
adc
add
bound
jo
jb
pusha
inc
jb
pusha
and
bound
add
jo
push
jo
inc
inc
add
inc
and
adc
pusha
and
and
add
and
and
add
add
xor
jo
jb
xor
push
add
and
xor
jo
xor
pusha
inc
inc
add
add
pusha
jb
xor
add
and
push
pusha
add
jo
and
jo
inc
pusha
adc
and
add
and
bound
pusha
add
xor
push
inc
adc
inc
jo
inc
pusha
jo
inc
jb
xor
push
pusha
push
add
adc
and
inc
xor
pusha
adc
xor
add
inc
and
jo
push
push
inc
xor
adc
push
xor
add
add
add
adc
push
jo
add
push
jo
and
inc
and
pusha
xor
add
xor
adc
pusha
inc
bound
and
and
and
jo
add
and
inc
jb
and
xor
add
jo
jo
pusha
add
and
pusha
adc
and
xor
push
add
pusha
inc
xor
inc
and
add
and
inc
xor
adc
push
xor
add
jo
push
push
add
add
adc
pusha
add
adc
jo
add
xor
xor
jb
bound
add
inc
xor
jo
inc
and
adc
bound
jo
push
add
inc
and
jo
push
bound
inc
adc
add
adc
and
add
add
add
add
and
and
inc
add
adc
adc
inc
pusha
xor
add
pusha
and
pusha
jo
pusha
and
bound
and
jo
xor
xor
push
adc
adc
adc
push
inc
inc
push
adc
add
xor
xor
add
jo
bound
and
and
pusha
push
add
inc
pusha
add
and
pusha
xor
add
xor
xor
add
and
xor
pusha
jb
inc
jo
xor
push
xor
and
xor
and
add
jo
adc
jo
xor
inc
jo
jo
add
push
add
add
push
and
jb
and
add
push
jo
adc
and
and
and
add
and
jo
adc
add
inc
adc
add
xor
xor
and
inc
jb
xor
adc
and
jb
and
and
and
pusha
jo
inc
add
xor
pusha
jo
add
and
push
bound
push
push
inc
add
pusha
xor
pusha
inc
xor
and
inc
pusha
jo
add
add
xor
xor
adc
xor
push
pusha
adc
and
pusha
pusha
jb
and
adc
adc
adc
push
jo
add
xor
xor
pusha
push
add
adc
pusha
adc
inc
adc
adc
inc
pusha
inc
jb
add
add
adc
add
jo
add
inc
adc
and
adc
adc
jo
push
xor
bound
and
pusha
inc
inc
jo
inc
push
add
jo
pusha
jo
jb
pusha
and
bound
jb
inc
push
pusha
and
add
add
jo
add
adc
add
inc
add
xor
add
bound
adc
and
and
or
inc
push
rclb
jp
jae
adcl
lock
add
lret
cltd
jp
stos
shrl
ret
jbe
fcmovb
mov
cld
pop
imul
add
mov
or
fnstcw
add
rcr
xchg
clc
jns
in
mov
mov
or
pop
dec
and
int3
mov
xchg
xor
leave
mov
out
inc
push
stos
xchg
lock
mov
sub
mov
mov
sub
ret
mov
jbe
outsb
leave
mov
gs
ret
mov
stos
jns
and
mov
cmc
xchg
rol
push
mov
add
mov
sbb
das
popf
rorl
cmpsl
mov
repz
jnp
push
push
xor
jo
in
test
das
mov
sub
sub
push
xor
iret
cmp
mov
stos
xor
into
cld
jbe
and
mov
jo
and
ljmp
xchg
popf
xchg
sti
add
add
pop
repz
pop
jbe
in
addr16
mov
int
imul
dec
in
push
push
ss
mov
mov
push
mov
mov
mov
sbb
in
xchg
mov
push
xchg
pusha
add
add
add
sub
jp
into
daa
mov
xor
add
add
mov
lret
ss
push
lahf
mov
add
mov
sub
add
add
dec
mov
sub
add
add
add
fidivl
jo
stos
lahf
dec
add
aaa
fsubs
add
pop
dec
add
add
xor
sti
dec
out
cmpl
push
xchg
in
pusha
add
jae
movsl
adc
pusha
add
testb
push
adc
push
loope
out
std
popa
pop
adc
add
call
add
shlb
add
push
aad
aaa
xor
arpl
mov
add
add
ja
adc
inc
bound
sub
add
add
out
pushl
shll
lcall
add
add
add
add
add
add
sbb
or
add
add
and
add
add
fdivrp
cmpsl
insl
and
les
sub
add
add
ljmp
out
dec
add
add
shrl
add
mov
add
add
jl,pt
jno
ds
into
ds
shlb
or
mov
pop
pop
insb
add
add
xor
dec
inc
in
mov
add
out
mov
mov
dec
mov
mov
add
or
daa
dec
add
add
test
add
mov
cwtl
out
dec
pop
mov
add
mov
lods
and
cmp
or
inc
push
dec
jb
gs
mov
adc
add
cmpsb
sub
add
aad
add
ds
repz
mov
movsb
mov
loopne
jl
addl
inc
mov
xor
bound
xorl
lea
sbb
sub
or
mov
mov
sbb
sbb
cmpb
push
xchg
jb
mov
dec
mov
jb
insl
sub
movsl
lea
lds
loop
out
pushf
xor
cmpsb
cmp
insl
inc
rcr
loop
sti
mov
rorl
inc
pop
test
inc
sbbl
mov
pop
cmc
arpl
loopne
sti
stos
push
pushf
adc
mov
dec
jecxz
xlat
repz
jbe
repnz
add
add
imul
add
add
add
mov
add
add
sbb
mov
jmp
scas
sub
mov
popa
push
out
aam
add
add
xchg
jo
lods
cmp
jmp
nop
lahf
call
add
add
add
loop
add
xor
sbb
pop
js
mov
popf
rcr
mov
mov
jne
or
add
add
inc
rorl
sub
fbstp
arpl
sub
add
add
adc
mov
cmp
mov
or
shlb
add
and
mov
mov
mov
aaa
fcompl
sbb
ss
lea
add
push
faddl
mov
int3
xchg
inc
add
add
shll
cmp
mov
aad
icebp
pop
stos
lea
pushl
sti
xchg
or
mov
xor
adc
or
mov
push
push
leave
push
repz
push
dec
add
add
add
es
push
mov
mov
add
add
mov
out
or
add
add
mov
add
pop
cmpsb
cmp
pop
sub
sbb
dec
incl
imul
sar
in
daa
testb
lock
inc
jge
lret
jecxz
ja
xchg
push
push
pusha
add
outsb
push
mov
stos
pop
fistps
rorl
pop
divl
add
cmp
rcrl
push
iret
cmpsl
mov
pop
mov
fisubl
add
add
jo
and
pop
scas
inc
xorl
jp
fadds
loop
jo
outsb
pop
insb
add
jne
mov
fildll
jge
jecxz
or
nop
jmp
inc
add
jo
add
add
jo
int3
and
xor
add
cmp
adc
mov
add
add
push
lret
out
aas
xchg
sbb
jae
and
pushf
enter
add
sub
pop
pop
syscall
inc
lret
xchg
pop
lcall
cmc
push
jmp
or
add
pusha
add
add
repnz
pop
fcompl
jge
mov
pop
jp
adc
lcall
mov
add
pop
xchg
fdivr
movsl
lcall
movsb
xor
adc
xchg
adc
add
add
enter
push
lods
insl
ret
dec
inc
out
shll
add
inc
or
sub
cmp
popa
in
aam
add
mov
jmp
add
fwait
jge
cwtl
stos
stos
push
scas
mov
fsubr
push
loope
aam
or
add
sbb
add
add
sha256rnds2
sbb
adc
mov
jecxz
sahf
sub
adc
cwtl
lret
sub
add
add
mov
xor
insb
add
add
mov
add
mov
pop
mov
insl
test
add
xor
pop
stos
out
and
mov
push
mov
add
xchg
fidivrl
pop
cwtl
dec
mov
add
jae
adc
dec
inc
jg
outsb
rol
je
dec
divl
push
ja
inc
lock
scas
lret
cmp
xlat
xchg
scas
jge
jnp
rol
das
push
testb
jmp
sahf
jns
scas
sbb
dec
into
jg
loope
sbb
fstp
iret
cmpsb
mov
shrl
fwait
inc
mov
push
xor
pop
popa
adc
sub
mov
cmp
sbb
mov
inc
xchg
sub
mov
imul
je
movsl
cmp
add
add
adc
dec
push
cmc
pop
mov
add
mov
mov
test
pop
push
jg
sti
lahf
jb
add
adc
add
add
sbb
jnp
insb
add
add
add
jg
push
mov
or
mov
aam
adc
xchg
outsb
stc
and
add
add
add
and
ljmp
add
add
sub
add
or
add
add
inc
pop
xchg
mov
inc
fucomip
xlat
test
fdivrp
pop
inc
cmp
sahf
inc
sub
je
ss
and
add
add
push
or
mov
inc
add
stos
repnz
push
cmpl
and
jp
push
mov
dec
aad
jmp
xor
inc
daa
adcl
cmpsl
adc
pop
outsl
inc
add
repnz
ret
pop
rcr
mov
mov
das
dec
pop
adc
jns
out
jge
sub
add
add
lret
cld
test
mov
or
ss
scas
ficomps
add
inc
mov
add
pop
mov
push
mov
add
divl
pop
xchg
add
jns
cmpsb
mov
nop
jp
mov
add
add
mov
ss
pop
outsl
clc
xor
aas
dec
int
insb
add
add
mov
repz
push
sahf
mov
add
mov
mov
push
xor
dec
les
adc
xchg
fdivp
test
dec
cmp
call
iret
aad
test
mov
xorl
add
stos
mov
sbb
inc
or
add
or
iret
and
mov
xchg
cmp
mov
std
es
jp
pop
mov
into
adc
movsl
test
jne
cmp
bound
loope
xlat
ljmp
add
inc
xchg
clc
and
add
add
jnp
jmp
pop
jl
pop
push
shl
sbb
add
xor
xor
mov
int
ret
mov
in
loop,pt
pop
out
cld
adc
pop
in
inc
and
pop
js
sub
add
add
pop
stos
lahf
pop
rcrl
nop
loop
inc
dec
push
push
fcoms
mov
cld
scas
ss
insl
test
jmp
imul
jmp
push
add
ds
push
flds
mov
ret
add
mov
idiv
dec
cmp
and
xchg
sbb
add
enter
fwait
cmpsb
mov
loop
in
int3
mov
nop
push
cmp
movb
fnsave
testb
add
movsbl
into
mov
or
mov
ret
mov
mov
lock
inc
jmp
addl
add
sub
add
add
or
adc
movsb
or
mov
pop
lds
jge,pn
lea
adc
pop
inc
dec
lret
fwait
mov
pusha
add
add
xlat
mov
aad
js
push
addl
cs
or
mov
sti
add
adc
mov
mov
cmp
test
mov
or
mov
hlt
std
xchg
cmc
ret
xor
ss
and
sarb
scas
lds
leave
cmp
xchg
dec
jnp
add
pop
js
xor
enter
add
add
pop
mov
sarl
jnp
test
repz
out
jge
popa
xchg
sarl
fwait
xchg
push
jmp
pushf
xchg
lock
pop
test
cmpsl
fldt
lcall
aam
sub
add
add
add
add
mov
xchg
mov
add
jecxz
pop
add
cs
loopne
lods
stc
hlt
iret
pusha
add
add
push
push
sar
or
rcrl
in
ja
stc
jbe
or
mov
pop
inc
mov
ds
add
mov
mov
andl
mov
push
loopne
stc
je
xchg
lods
psubsb
es
add
add
repz
push
mov
bound
jg
das
stos
adc
fbld
add
add
sub
mov
jge
cltd
stos
pop
or
pusha
add
add
cmp
call
add
mov
sbb
jge
cs
xlat
xorl
fistpll
mov
mov
jnp
cmpsb
mov
dec
xor
out
scas
in
jbe
pop
dec
mov
shrb
mov
add
add
xor
mov
jg
sahf
aam
es
add
cmpsl
out
and
mov
test
clc
loopne
dec
push
js
negl
das
fcompp
xor
jb
jbe
xor
in
pop
in
xchg
push
sub
add
add
mov
xchg
icebp
sub
xor
xlat
clc
data16
adc
hlt
daa
cli
clc
repnz
cmp
add
mov
es
mov
out
lods
adc
cltd
sub
add
add
add
and
mov
sbb
es
xchg
dec
gs
scas
sbb
lds
test
cmp
add
sub
xchg
pushf
clc
pop
call
imul
xchg
sub
adcb
ror
mov
dec
add
add
push
test
roll
lret
inc
cmovl
add
add
and
add
push
imul
mov
imul
add
inc
add
add
stos
and
pop
ljmp
mov
out
ss
or
add
add
imul
psrad
push
add
add
add
jne
cwtl
and
inc
add
mov
lcall
push
mov
mov
add
add
mov
inc
jp
lret
dec
pop
dec
push
fildl
rcrb
mov
or
cmpl
jbe
clc
add
and
add
add
jns
add
add
cs
xor
hlt
imul
shlb
repz
pusha
add
xchg
sbb
dec
add
add
pop
ret
xor
cwtl
lret
lahf
jae
cmp
lods
jmp
call
lret
mov
jmp
mov
mov
add
add
add
add
inc
add
push
and
add
add
iret
cmpsb
inc
cmc
xchg
je
inc
xchg
add
add
rcr
and
add
rcll
ret
test
add
add
jp
fdivrs
add
sub
mov
dec
dec
decb
pusha
add
add
add
dec
in
jno
pop
mov
add
arpl
mov
mov
jge
and
and
mov
lahf
xchg
jb
insl
scas
jbe
pusha
add
adc
hlt
mov
add
add
pop
jmp
sti
pop
cmpsb
mov
and
pop
ficomps
add
fmull
add
mov
jmp
add
add
inc
xor
or
test
or
lret
dec
lea
add
add
push
mov
xchg
imul
out
xchg
adc
fnstenv
add
mov
mov
in
cmp
xor
add
add
add
xchg
imul
pop
xchg
dec
adc
inc
mov
loop
mov
inc
xchg
sbb
add
sbb
cmp
xchg
lds
push
cmp
pusha
add
add
jae
and
cmp
cmp
movsb
sub
lods
or
rcrb
rcll
mov
cltd
lahf
imul
add
sub
mov
and
mov
push
mov
dec
popf
mov
inc
je
sbb
mov
and
ss
test
shr
outsl
test
jle
mov
add
add
pop
sbb
add
rorl
imul
sbb
add
add
pop
push
adc
add
out
dec
jle
inc
or
mov
fstpt
test
int
inc
and
add
add
mov
push
lea
lret
out
push
rol
inc
push
cld
xchg
add
roll
and
mov
or
mov
or
jge
inc
and
add
add
andnps
cmp
add
mov
jecxz
movsb
sub
mov
or
add
add
lret
icebp
jno
cmc
dec
add
mov
xorl
add
add
push
inc
ds
loop
jne
add
mov
jns
ja
cmp
push
imul
add
pop
adc
sarb
add
add
sub
mov
mov
xchg
inc
xorb
mov
adc
js
mov
sub
add
std
sti
cmpb
adc
add
mov
cmp
add
add
arpl
jl
cmpsb
adc
imul
inc
or
add
add
jl
dec
mov
add
test
int3
sub
xor
fimull
aad
in
sub
push
dec
add
add
ljmp
add
add
add
add
cwtl
outsb
out
int
les
jb
lods
dec
pop
jl
xor
xchg
inc
add
add
and
add
add
incl
add
jno
std
in
fnstcw
push
push
cli
push
hlt
sbb
fmulp
push
adc
jp
aad
add
cmp
add
xor
scas
sub
test
lock
out
add
add
push
shll
cmc
loop
sar
push
call
add
sub
mov
imul
mov
rcl
mov
add
add
dec
add
ljmp
loop
hlt
gs
inc
add
xlat
push
mov
pop
jle
adc
xor
push
adc
adc
inc
ss
add
scas
inc
add
add
mov
add
add
test
push
out
int
andb
repz
cli
fwait
inc
add
test
mov
push
div
and
lcall
pop
insb
add
add
int
xchg
pop
jno
dec
rolb
lods
mov
jle
fnsave
cmp
outsl
daa
ret
fimuls
mov
je
sahf
cmp
add
lods
repnz
add
add
xchg
add
inc
add
sub
add
add
in
jge
inc
add
add
pop
int3
sarb
imul
ficomps
dec
dec
add
add
std
inc
add
mov
and
dec
add
ljmp
add
add
and
add
jle
xor
and
mov
sub
insb
add
add
mov
loop
mov
aas
stc
mov
xchg
add
pop
xchg
pop
push
ficomps
shlb
xor
icebp
sub
add
add
cltd
jle
scas
into
cli
out
and
add
add
mov
outsl
pop
xchg
fwait
movsl
mov
hlt
dec
sbb
mov
fistpl
add
add
cmc
daa
ds
add
mov
adcl
movsb
fisubrs
jae
mov
out
cmc
jmp
add
cwtl
xlat
std
push
test
sub
add
add
ds
aas
fdivrs
add
pop
and
dec
in
repz
add
testb
icebp
mov
push
subb
add
add
scas
xor
ret
clc
mov
popf
mov
push
enter
and
lahf
inc
push
and
pop
stos
les
cmp
lcall
movsb
mov
movsb
push
mov
dec
je
inc
addl
pop
icebp
mov
div
or
movsl
cltd
cmp
sbb
sub
mov
in
divl
xor
push
jb
mov
push
aas
in
add
add
add
bound
shl
repz
push
jo
mov
mov
ret
jns
add
es
std
or
mov
add
fimuls
cwtl
ret
cbtw
push
je
daa
in
icebp
sar
ficoml
add
add
xor
xchg
shll
test
add
bnd
mov
sub
add
add
mov
jnp
das
xchg
cwtl
mov
jp
add
push
add
add
add
add
add
or
and
add
mov
add
jge
scas
mov
cmpsb
mov
jle
xchg
sbb
inc
mov
je
sti
push
ljmp
jge
call
mov
jg
lahf
inc
out
sahf
inc
cmpb
subl
xchg
mov
mov
add
add
clc
jge
xchg
mov
cld
lods
push
test
add
xor
add
add
dec
mov
adc
in
pop
stos
insl
push
jae
call
pop
data16
adc
add
cmc
hlt
movl
add
add
jp
mov
add
add
imul
popa
fsubr
cmp
inc
bound
and
pop
cmp
dec
add
fdivrl
out
addr16
lcall
adc
add
add
cmp
mov
add
add
addr16
fdiv
test
mov
in
pop
cmp
or
loope
sub
orb
mov
mov
mov
fnsave
mov
add
add
cmpsb
or
add
add
test
cs
loop
add
add
add
sbb
pop
inc
mov
pop
pop
in
ret
and
mov
add
cmc
out
mov
inc
fbstp
rolb
std
outsl
sbb
pop
lret
sbb
int
scas
jb
jo
xchg
and
imul
mov
add
add
cli
aam
xchg
add
add
cs
mov
add
add
xor
lahf
pop
insb
add
add
mov
std
ss
mov
ds
add
add
mov
mov
icebp
dec
inc
jns
imul
dec
hlt
out
or
mov
jg
xlat
xchg
gs
test
xor
sahf
in
mov
mov
mov
lcall
test
add
pop
js
aas
xchg
test
add
add
aas
pop
jo
fnstcw
jl
add
adc
add
add
arpl
out
stos
aam
xchg
rclb
push
pop
pop
inc
stos
movsl
aaa
mov
xchg
add
insb
add
add
or
add
add
out
and
adcl
stos
aaa
cwtl
jmp
xchg
ja
das
sub
mov
aaa
daa
imul
mov
das
add
pop
pop
xor
jp
popf
and
add
add
in
xchg
xor
out
rorb
add
add
lods
pop
dec
push
mov
fildll
rcrl
movsl
cmpsl
rolb
xchg
xchg
sti
pop
movsl
imul
xchg
rcll
lret
add
hlt
icebp
push
imul
push
shll
add
mov
push
add
mov
std
or
sub
es
addr16
jp
jmp
add
add
add
add
rcll
or
mov
clc
mov
mov
inc
sbbl
iret
add
adc
imul
mov
stos
pusha
add
add
rcl
test
jmp
mov
add
add
shl
fisttpl
jno
out
add
jo
jmp
add
pushf
and
aaa
out
cmpsl
imul
mov
stc
sub
movsb
mov
push
cmp
jmp
mov
js
outsb
pop
in
mov
leave
js
push
mov
xor
push
pop
testl
dec
xchg
ljmp
push
dec
add
add
xor
cld
pop
sub
push
pop
shrl
stos
jecxz
dec
dec
add
mov
in
adc
test
mov
hlt
sub
add
add
mov
push
rcrl
mov
mov
adc
and
daa
dec
dec
mov
dec
fcompl
add
xlat
out
outsb
shl
jno
add
pop
std
dec
pop
push
roll
pop
jbe
cltd
xchg
cmp
add
stos
out
pop
shlb
repnz
adcl
adc
fmul
leave
shlb
mov
ja
imul
xor
aaa
shr
push
ljmp
add
pop
inc
in
xchg
dec
pop
ds
add
add
cmpsb
lahf
mov
add
mov
jne
lret
add
sbb
sub
mov
adc
xor
arpl
adc
enter
add
add
add
test
mov
mov
stc
mov
insl
lods
fldcw
cli
scas
packuswb
mov
mov
movsl
cld
lcall
push
or
dec
add
add
subb
negl
xor
repz
jno
notb
jmp
in
and
mov
popf
inc
add
add
add
add
subl
lds
push
xchg
out
add
mov
mov
sub
mov
je
lcall
ficoml
mov
sbb
out
rclb
inc
add
icebp
ret
jns
movl
add
jecxz
push
push
mov
clc
pop
repnz
dec
add
add
rclb
jp
ja
jle
inc
push
and
xchg
sbb
add
add
add
add
ret
pop
jp
fimull
push
sub
mov
stos
jmp
fcomps
bnd
sbbl
adc
dec
stos
and
mov
mov
fstps
popa
mov
scas
mov
cld
int
test
sub
add
add
jne
ret
subb
xorb
or
add
in
add
add
mov
and
jnp
dec
es
add
fsts
or
mov
stos
cli
sbb
fidivl
fwait
cmp
mov
pop
les
sub
mov
inc
add
add
add
mov
and
mov
movsl
nop
add
add
add
cmc
mov
popf
adc
add
dec
add
xor
mov
cmp
ja
fisubl
add
fld
orb
adc
out
inc
imul
aaa
push
gs
lea
push
jnp
adc
into
int3
adcl
pop
jl
nop
jns
xchg
adc
push
xchg
pop
outsb
cli
es
adc
fisubrs
mov
imul
add
mov
mov
cwtl
sbbl
in
add
xchg
cmp
ret
mov
lock
push
std
xor
mov
cli
sbb
sbb
cmp
idivl
xor
cli
shlb
nop
data16
mov
add
add
adc
sti
xor
xor
mov
mov
add
lret
push
pop
push
sub
add
movsb
lods
icebp
cwtl
shl
xor
add
add
cmp
jge
cs
push
pop
int3
fnsave
pusha
add
add
push
jge
nop
xchg
push
outsl
sbb
cmp
ds
call
and
push
mov
add
cmp
jne
lea
push
push
mov
push
call
cld
or
mov
shr
shr
mov
add
push
push
push
push
call
leave
ret
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
not
inc
sub
mov
clc
je
push
pop
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
push
cld
call
test
je
jmp
add
adc
es
jge
stos
mov
fsubrp
pop
imul
jg
push
int
add
ret
aad
add
xor
jb
ljmp
sahf
test
add
xchg
cmc
int
orl
adc
aad
add
push
out
call
cltd
lcall
add
add
adc
sahf
jmp
cmpxchg
add
cmc
mov
mov
jp
add
mov
cmp
gs
inc
add
add
sub
cs
cmp
iret
je
aas
cmp
mov
icebp
fmul
or
mov
mov
test
stc
std
mov
push
fwait
lock
add
add
clc
andl
ds
add
add
add
add
cmc
cmc
inc
loopne
cmpsb
std
mov
dec
add
add
sahf
push
lds
lds
cmpsb
dec
add
push
xchg
add
add
in
mov
add
sahf
sbb
leave
mov
add
add
adc
xor
outsl
push
add
sbb
aaa
sub
flds
sbb
push
aas
cmp
adc
add
cld
and
add
mov
lret
push
loopne
das
test
test
shl
or
adcl
dec
jg
mov
add
add
stc
addr16
mov
insb
add
mov
jb
add
dec
test
jecxz
leave
or
add
add
daa
lods
test
xchg
jb
inc
aas
pusha
add
add
jns
or
mov
adc
pop
mov
xorb
add
add
push
add
mov
add
add
sub
rorl
sub
mov
mov
sahf
rcrb
lods
addr16
cltd
insb
add
add
in
add
je
jp
pop
dec
add
cmp
gs
div
divb
mov
xchg
add
or
xchg
rorl
adc
out
lahf
jge
ljmp
cmpsl
add
movb
and
fwait
out
mov
add
xor
add
mov
and
add
add
add
add
inc
clc
cmp
dec
test
in
pop
inc
add
mov
mov
sbb
cmpsl
cmc
pop
adc
adc
movsb
adc
cmpsb
aaa
icebp
push
and
add
add
sbb
sub
add
loop
and
sbb
dec
leave
into
adc
in
adc
stos
fistpll
mov
shlb
add
icebp
jne
out
cmp
jne
insl
stos
push
outsb
movl
pushf
add
add
jg
sbb
lret
dec
repnz
add
add
adc
add
cli
jmp
movb
add
jo
ror
rorl
pop
cmp
push
mov
sub
cmp
pop
push
imul
pop
xchg
idivl
in
lahf
popf
xchg
cmp
add
lea
or
cmc
jno
sub
into
push
cmp
add
lahf
mov
pop
mov
mov
sub
add
pop
addr16
add
test
jle
shl
pop
test
inc
stos
sarb
notl
or
cmpsb
sub
lea
int3
movsl
es
icebp
pop
mov
in
jne
xor
fisttpll
xchg
lahf
jl
jmp
sbb
icebp
pop
cwtl
cld
add
add
add
add
mov
cli
les
icebp
mov
add
mov
and
repnz
add
add
test
std
and
mov
les
cmc
ficompl
mov
push
mov
into
mov
popf
mov
jns
add
mov
xchg
je
pop
and
lods
cmp
jno
test
rolb
bound
movsl
ja,pt
or
mov
push
aam
add
add
cmc
imul
sbb
add
add
lods
mov
inc
adc
mov
add
mov
sbb
add
lret
xor
pop
dec
leave
and
adc
sarl
int3
mov
add
arpl
mov
mov
add
add
cmpb
jnp
or
mov
mov
cmpsb
test
ja
mov
js
and
mov
int
jmp
out
adc
icebp
mov
add
lods
push
bound
add
add
loopne
add
add
add
sub
add
movsb
test
add
add
jecxz
pop
sbbl
cmp
pop
push
pop
data16
repz
lcall
ficoml
shl
in
inc
add
add
pop
push
cmpsb
outsl
repnz
mov
and
add
pop
or
mov
pop
pop
lock
insb
add
add
push
xor
add
add
jb
test
test
inc
pushf
insl
or
jp
add
add
jmp
fimuls
mov
ss
or
imulb
lock
fwait
cltd
sarb
jbe
inc
popl
add
imul
and
mov
ds
jae
mov
push
mov
xchg
mov
fsubrs
pop
outsl
pushf
mov
mov
test
scas
out
sbb
add
in
push
sbb
mov
lock
jns
adc
sbb
in
scas
adc
dec
add
push
push
xor
fstpl
push
cmp
movsb
insl
lret
xor
inc
lods
push
sbb
arpl
ljmp
hlt
mov
cs
add
jp
cmpsb
cmp
add
mov
roll
add
add
add
je
mov
out
movsl
shlb
add
add
pop
xchg
push
fsubs
and
xlat
lea
cmpsl
fwait
sti
pop
pusha
add
add
test
stos
je
sbb
and
add
add
pop
lds
pop
inc
add
js
jbe
insl
push
ss
stc
or
add
add
lret
inc
push
daa
mov
lret
dec
add
movsl
xlat
test
enter
add
add
adc
push
sahf
das
ret
lock
rclb
add
add
jecxz
inc
push
test
lods
sbb
jnp
test
imul
mov
add
lret
in
or
xor
add
add
add
add
adc
stos
ret
pop
bnd
jg
pop
xorb
aad
and
insl
sbb
or
mov
add
add
mov
loop
add
add
inc
and
mov
sbb
add
and
cmp
jp
icebp
roll
push
adc
imul
xor
js
cwtl
call
xor
hlt
mov
add
adc
idivl
push
adc
std
mov
call
ds
mov
jge
into
cli
insl
cwtl
popa
shlb
add
add
aaa
jp
les
test
cld
inc
test
jmp
outsl
xchg
lcall
loop
out
jl
inc
add
add
push
sbb
add
int
add
add
rclb
cwtl
imul
pop
jmp
pop
push
subb
push
insl
or
loopne
ja
insl
jle
add
add
xor
pop
shl
vpsravd
mov
sbb
mov
jp
nop
mov
dec
imul
inc
xchg
es
out
inc
aad
dec
pop
sti
insb
add
push
fnstsw
add
add
inc
push
jnp
add
xor
add
add
mov
pusha
add
add
xor
add
add
pushl
out
cmp
cmp
popa
jo
dec
inc
xor
std
bound
mov
add
add
xchg
ds
mov
jne
add
js
lret
sub
cmp
add
add
push
pop
loopne
aam
lds
add
add
bnd
cli
ficompl
ljmp
add
mov
pop
into
mov
icebp
bound
add
add
inc
mov
sub
add
add
in
dec
cmpsb
ds
sbb
cmp
sub
mov
push
mov
ss
xchg
pop
movsb
mov
int
in
cmp
mov
stos
jnp
lock
repz
add
xchg
scas
cmp
sahf
subb
xor
imul
sahf
mov
lret
test
aas
adc
pop
shl
fwait
cmp
cmp
add
add
jmp
lds
jecxz
inc
stos
cmp
jns
add
sbb
test
in
adc
mov
adc
add
dec
pop
pushw
icebp
lcall
and
add
add
mov
cli
scas
data16
pop
out
cmpsl
inc
add
add
test
add
lods
xor
orl
add
add
adc
jb
inc
stos
inc
mov
push
ljmp
push
and
add
add
and
mov
xor
popf
lds
adc
adc
add
add
inc
je
cmp
inc
add
int3
popf
sbb
stos
cs
push
adcl
add
ljmp
add
adc
push
adc
add
jbe
cmp
push
stos
push
rcr
and
cli
ret
lahf
bound
add
add
pop
fnstcw
or
cwtl
jno
jae
jmp
lds
insb
add
add
jg
shrl
mov
jne
leave
icebp
stos
adc
sbb
mov
mov
rorb
add
add
fbstp
test
add
enter
mov
inc
loopne
stos
cmc
pop
xlat
movsl
in
cld
and
mov
add
add
cltd
inc
push
enter
into
clc
shr
mov
push
out
lea
fwait
mov
push
mov
into
mov
add
add
sub
add
add
add
int3
shll
or
ficoms
or
add
add
loope
outsb
xor
mov
fdivrs
cmp
sub
add
mov
xor
add
add
enter
add
add
mov
xchg
lods
sub
add
add
dec
pushf
outsb
jl
push
add
incl
into
je
shll
sbb
hlt
mov
add
pop
mov
sbb
sbb
fwait
loopne
cltd
jns
fsubrp
fcmovu
repz
jmp
in
pop
lret
sub
mov
pop
in
sbb
mov
dec
add
add
adcb
add
aad
pop
pop
xchg
jl
xor
xchg
mov
xor
fnsave
cmp
jle
lcall
push
add
ds
inc
sbb
out
jge
xchg
rcrl
add
ret
lods
lds
stc
xor
add
jp
inc
inc
add
sub
add
add
cmp
clc
jp
jp
andl
scas
aaa
pop
mov
add
or
mov
add
or
sub
inc
or
mov
fstpl
lret
or
cltd
lret
xchg
dec
lret
popf
daa
test
push
dec
mov
mov
dec
pusha
add
add
inc
stos
out
pop
rcl
andb
jne
hlt
and
mov
shrb
mov
mov
cltd
sbb
add
test
add
aas
xlat
mov
mov
es
out
jbe
and
std
lret
out
lret
mov
mulps
int3
add
sbb
mov
bound
xor
push
mov
ror
adc
mov
add
aam
xlat
adc
add
add
push
inc
add
add
cld
sub
add
add
push
jge
add
push
xchg
cmp
es
dec
add
add
pop
fsubrl
outsl
sti
mov
cwtl
je
sbb
add
add
inc
add
push
bound
loop
xchg
cmp
inc
ljmp
inc
fnstcw
fstl
stos
fwait
xor
mov
cli
cmp
dec
adc
xlat
mov
add
add
add
in
test
popa
enter
jge
jmp
xchg
xor
shr
or
pop
loope,pt
mov
jecxz
mov
jg
jne
xchg
and
add
sbb
js
into
mov
andb
bound
aad
adc
fcmovu
cmp
leave
xchg
dec
add
add
adc
fmul
sub
add
and
and
scas
inc
add
js
add
pop
and
mov
push
ja
mov
sbb
in
adc
push
stos
data16
out
and
jl
sbbb
and
mov
jmp
in
mov
mov
push
rorb
add
pop
dec
add
add
or
mov
add
add
pop
cltd
inc
iret
pop
test
add
sub
dec
or
add
add
add
mov
add
inc
add
add
es
leave
test
add
add
or
add
add
sub
mov
inc
jp
fucom
jmp
pop
dec
dec
xchg
popf
or
sbb
mov
add
inc
popf
pop
pop
push
cmpsb
cld
int3
mov
pop
dec
xchg
pop
dec
add
add
sbb
mov
mov
leave
bound
add
jmp
mov
mov
daa
adc
xchg
add
cmpsl
arpl
or
in
in
add
push
mov
xor
adc
bound
add
push
cmp
dec
add
mov
add
pop
ficomps
sub
sahf
inc
fdiv
out
jle
cs
push
push
mov
stc
xchg
lods
jbe
lds
dec
sbb
pop
les
test
mov
mov
add
lock
pop
pusha
add
add
aaa
lods
stc
into
lea
add
pop
lds
or
shl
shll
push
call
nop
jmp
add
sbb
pop
xchg
xchg
push
movsl
push
clc
repnz
jmp
jae
or
add
jae
lret
add
fsubrp
pop
jne
nop
push
mov
leave
nop
jmp
fwait
lcall
push
clc
repnz
jmp
jae
inc
inc
xchg
filds
jae
ljmp
pop
inc
add
mov
add
aad
mov
clc
repnz
jmp
jae
int3
jmp
push
add
inc
pop
add
add
mov
sbb
push
mov
leave
nop
jmp
add
imul
mov
pop
clc
repnz
jmp
jae
add
add
mov
add
test
mov
xchg
ret
add
jmp
add
fs
add
lods
pop
fwait
clc
repnz
jmp
jae
inc
add
int3
cld
add
sbb
push
clc
repnz
jmp
jae
mov
add
sbb
sbb
mov
add
repnz
jmp
jae
add
jmp
add
js
je
test
nop
push
mov
leave
nop
jmp
add
push
lods
sub
loop
mov
cld
jmp
jae
add
mov
add
add
repnz
jmp
jae
jae
sub
add
es
cs
ljmp
nop
push
mov
leave
nop
jmp
fwait
sub
add
add
cld
jae
out
inc
add
add
add
fistpl
xor
dec
popa
inc
add
addl
add
pop
mov
aad
jle
add
nop
jmp
xchg
add
or
popf
dec
clc
repnz
jmp
jae
scas
es
les
call
nop
push
mov
leave
nop
jmp
pop
add
or
data16
add
push
mov
xchg
ret
add
sub
jmp
add
sar
cld
jmp
jae
add
xchg
out
add
add
push
clc
repnz
jmp
jae
add
add
iret
fildl
add
popa
xor
jmp
incl
add
pop
add
inc
ljmp
pop
cs
xchg
fld1
push
mov
xchg
ret
fs
inc
add
add
jmp
jae
or
add
les
sbb
add
clc
repnz
jmp
jae
mov
add
add
repnz
jmp
jae
add
addl
xchg
add
imul
clc
repnz
jmp
jae
sub
sbb
add
clc
repnz
jmp
jae
mov
mov
pop
mov
nop
push
mov
leave
nop
jmp
or
add
xchg
outsl
add
jge
clc
repnz
jmp
jae
inc
add
lods
imul
push
ret
cmc
fwait
push
mov
xchg
ret
cld
es
fwait
add
add
add
add
fisubrs
add
add
jecxz
clc
repnz
jmp
jae
inc
add
add
xchg
aad
sbb
pop
nop
push
mov
leave
nop
jmp
or
js
stos
mov
fildl
xchg
push
clc
repnz
jmp
jae
add
or
loop
outsl
add
sbb
mov
sub
cmp
ret
add
add
int3
pop
add
jae
fadds
stos
inc
add
add
or
add
fsubrs
cs
or
inc
add
inc
sahf
add
sbb
add
repnz
jmp
jae
lcall
sub
cld
jmp
jae
fistps
add
inc
mov
xchg
add
add
add
out
sub
nop
push
mov
leave
nop
jmp
add
add
add
add
add
inc
orl
clc
repnz
jmp
jae
add
mov
notl
push
mov
leave
nop
jmp
lods
jae
xchg
add
add
lods
push
mov
xchg
ret
mov
inc
add
sbb
stos
inc
iret
inc
sbb
add
repnz
jmp
jae
pop
push
add
sahf
add
xchg
rep
nop
push
mov
leave
nop
jmp
add
imul
ljmp
add
clc
repnz
jmp
jae
xchg
inc
add
add
data16
jmp
jae
les
inc
mov
add
sbb
icebp
fwait
push
mov
xchg
ret
sbb
add
add
loop
add
add
add
clc
repnz
jmp
jae
imul
add
mov
nop
push
mov
leave
nop
jmp
fadds
add
add
inc
and
adc
repnz
jmp
jae
xor
outsl
add
add
add
add
mov
clc
repnz
jmp
jae
inc
inc
add
testl
nop
push
mov
leave
nop
jmp
inc
sbb
add
lods
or
add
nop
push
mov
leave
nop
jmp
add
fs
add
add
cld
jmp
jae
add
xchg
add
mov
sahf
std
clc
nop
push
mov
leave
nop
jmp
clc
add
mov
pop
sbb
fcmovnu
sbb
add
clc
repnz
jmp
jae
add
add
mov
fcomip
xor
nop
push
mov
leave
nop
jmp
pop
add
add
sbb
jmp
add
add
mov
mov
outsl
add
add
add
jne
clc
repnz
jmp
jae
add
sbb
push
mov
cltd
and
and
push
ds
jmp
add
inc
inc
mov
popa
sub
loopne
sbb
clc
repnz
jmp
jae
add
lretw
pop
lods
inc
lods
and
mov
clc
repnz
jmp
jae
add
data16
add
sbb
mov
xchg
ret
add
add
add
les
add
add
lea
mov
xchg
ret
ljmp
add
repnz
jmp
jae
add
js
add
out
sbb
test
and
cld
jmp
jae
pop
add
jmp
or
add
nop
jmp
sbb
lcall
clc
repnz
jmp
jae
les
add
hlt
add
add
out
sbb
add
add
repnz
jmp
jae
loop
stos
add
hlt
or
mov
clc
repnz
jmp
jae
sahf
push
add
cld
imul
add
push
mov
xchg
ret
add
add
add
fldt
repnz
jmp
jae
add
add
or
add
xchg
add
clc
repnz
jmp
jae
ljmp
add
and
add
add
add
add
scas
pop
clc
repnz
jmp
jae
or
stos
add
scas
js
pop
add
push
mov
xchg
ret
loop
add
add
data16
add
xor
clc
repnz
jmp
jae
add
js
add
sahf
lcall
leave
nop
jmp
add
les
add
mov
add
clc
repnz
jmp
jae
ljmp
add
add
add
repnz
jmp
jae
or
add
hlt
inc
imul
repnz
jmp
jae
add
add
xchg
add
mov
inc
and
clc
repnz
jmp
jae
add
add
sahf
les
and
push
push
mov
xchg
ret
lret
clc
add
add
lcall
push
sub
ret
repnz
jmp
jae
add
push
add
fs
pop
js
jmp
push
mov
leave
nop
jmp
clc
mov
add
mov
mov
fistpl
nop
push
mov
leave
nop
jmp
or
hlt
data16
jmp
add
add
cld
jmp
jae
add
add
add
jae
mov
add
add
shr
nop
push
mov
leave
nop
jmp
add
jmp
add
ljmp
in
add
mov
add
outsb
xor
add
rcr
push
add
add
add
repnz
jmp
jae
iret
int3
add
add
repnz
jmp
jae
add
add
add
pop
add
jmp
add
push
push
mov
xchg
ret
add
xchg
pop
add
add
add
sbb
jmp
jae
inc
add
outsl
clc
xor
add
mov
repnz
jmp
jae
add
add
add
add
lock
pop
cmp
nop
push
mov
leave
nop
jmp
add
add
dec
push
clc
repnz
jmp
jae
push
add
add
add
mov
pusha
add
fistl
outsb
popl
xchg
ret
add
clc
js
add
jae
fildl
xchg
cmp
push
mov
leave
nop
jmp
add
add
add
lods
mov
xchg
jmp
orl
cld
jmp
jae
cs
sahf
add
mov
clc
repnz
jmp
jae
push
hlt
add
lcall
and
repnz
jmp
jae
mov
xchg
add
jmp
xchg
push
sub
push
push
mov
xchg
ret
add
mov
add
fwait
add
push
or
and
repnz
jmp
jae
imul
add
lods
or
add
push
nop
push
mov
leave
nop
jmp
add
add
add
add
lret
add
push
push
mov
xchg
ret
mov
aad
sbb
add
add
leave
nop
push
mov
leave
nop
jmp
hlt
lret
add
js
add
add
clc
mov
repnz
jmp
jae
fs
push
aad
sbb
repz
clc
repnz
jmp
jae
xor
xchg
lods
add
out
add
in
add
add
int3
cmpsb
add
call
push
fdivp
fwait
xchg
clc
repnz
jmp
jae
inc
cs
sub
add
hlt
xchg
xor
cld
jmp
jae
add
add
add
add
xchg
add
add
add
clc
repnz
jmp
jae
inc
add
notl
in
or
into
out
pop
mov
aad
adc
lock
mov
add
cmpsb
aad
roll
repnz
jmp
jae
cs
add
add
lcall
nop
push
mov
leave
nop
jmp
or
add
sahf
js
add
loop
xor
repnz
jmp
jae
fwait
add
mov
ret
pop
push
mov
xchg
ret
push
add
fldt
add
or
mov
add
add
add
fistpl
nop
push
mov
leave
nop
jmp
add
out
out
int3
xchg
inc
push
ret
rcrb
repnz
jmp
jae
xchg
lcall
mov
lds
jmp
jae
inc
add
mov
js
or
inc
in
mov
xchg
ret
add
es
inc
mov
mov
clc
repnz
jmp
jae
add
add
xchg
aad
arpl
stos
clc
repnz
jmp
jae
int3
xchg
add
inc
add
fistpll
clc
repnz
jmp
jae
fildl
add
fistps
mov
add
cmp
add
mov
jmp
jae
inc
sbb
iret
add
pop
add
dec
cmp
push
mov
leave
nop
jmp
add
xchg
jmp
xchg
out
les
repnz
jmp
jae
add
inc
xchg
xchg
xchg
mov
mov
mov
xchg
ret
fcomp
add
sbb
add
add
or
jne
clc
repnz
jmp
jae
outsl
hlt
add
es
jecxz
repnz
jmp
jae
loop
add
or
inc
jmp
hlt
pop
imul
mov
add
int3
sbb
inc
loopne
mov
xchg
ret
add
sbb
add
inc
mov
or
js
add
add
add
js
add
xchg
out
scas
fistpl
clc
repnz
jmp
jae
jae
add
clc
add
add
loop
shr
clc
repnz
jmp
jae
add
fs
in
mov
cld
jmp
jae
clc
add
sbb
xchg
or
repnz
jmp
jae
xchg
push
add
add
sbb
push
push
mov
xchg
ret
add
ffreep
add
push
xchg
add
push
mov
xchg
ret
xchg
xor
add
sbb
add
push
clc
repnz
jmp
jae
fsubs
iret
xchg
clc
xchg
add
xchg
add
es
movzwl
clc
repnz
jmp
jae
fistps
lods
add
mov
mov
xchg
ret
fwait
add
xchg
sbb
lret
sbb
sbb
jbe
xchg
pop
clc
repnz
jmp
jae
add
pop
sahf
add
lcall
repnz
jmp
jae
lods
add
push
add
cld
add
add
mov
clc
repnz
jmp
jae
sbb
add
add
add
fwait
fwait
adc
add
clc
repnz
jmp
jae
pop
add
add
add
add
sub
adc
add
add
add
sbb
sbb
pop
add
out
add
add
jge
nop
push
mov
leave
nop
jmp
add
fistps
inc
sbb
add
mulb
repnz
jmp
jae
xor
add
add
mov
leave
nop
jmp
jmp
out
jae
mov
inc
jae
orl
lret
mov
mov
clc
repnz
jmp
jae
stos
add
mov
stos
mov
mov
xchg
ret
push
add
sbb
add
stos
add
add
add
aad
clc
add
and
cmp
ret
lcall
add
add
sar
repnz
jmp
jae
add
sbb
add
mov
hlt
xor
jne
clc
repnz
jmp
jae
inc
add
lcall
je
clc
repnz
jmp
jae
mov
add
add
lss
clc
repnz
jmp
jae
loop
out
inc
add
add
add
sub
jmp
jae
add
or
imul
mov
sub
clc
repnz
jmp
jae
mov
or
add
add
pop
or
repnz
jmp
jae
add
xchg
add
add
in
push
mov
fiadds
enter
loope
fs
add
mov
dec
inc
scas
in
push
sub
repnz
jmp
jae
add
push
push
add
sbb
and
sti
push
mov
xor
filds
cltd
add
out
adc
add
cs
call
jmp
jae
or
mov
add
jl
add
int3
scas
add
filds
les
add
add
cld
jmp
jae
pop
sahf
add
xor
mov
pop
push
mov
xchg
ret
add
inc
jmp
add
inc
nop
mov
clc
repnz
jmp
jae
scas
add
add
add
ret
clc
repnz
jmp
jae
fdiv
out
push
out
jmp
add
hlt
add
shr
clc
repnz
jmp
jae
add
push
imul
nop
push
mov
leave
nop
jmp
add
add
fwait
mov
inc
out
dec
mov
push
mov
xchg
ret
add
int3
push
int3
add
add
mov
add
lahf
xchg
xchg
ret
add
fistps
imul
add
ret
push
mov
xchg
ret
add
add
iret
hlt
add
clc
loop
add
mov
clc
repnz
jmp
jae
or
sub
jmp
fwait
add
int3
jnp
push
mov
xchg
ret
sahf
add
hlt
cld
add
mov
add
fadds
jbe
mov
clc
repnz
jmp
jae
add
add
add
add
or
jno
add
or
addl
js
mov
iret
or
cmpsb
adc
push
mov
leave
nop
jmp
add
push
or
jmp
add
repnz
jmp
jae
inc
push
add
add
mov
add
repnz
jmp
jae
add
sbb
mov
add
jmp
pop
je
nop
push
mov
leave
nop
jmp
xchg
lods
hlt
fadds
add
mov
inc
add
fwait
ljmp
add
sbb
ljmp
cld
jmp
jae
sbb
add
sbb
nop
push
mov
leave
nop
jmp
les
add
aad
add
add
clc
repnz
jmp
jae
inc
imul
je
clc
repnz
jmp
jae
or
mov
stos
clc
repnz
jmp
jae
add
sbb
add
mov
or
iret
mov
clc
repnz
jmp
jae
data16
add
add
add
mov
leave
nop
jmp
add
fstpt
inc
orl
test
mov
fadds
or
sbb
repnz
jmp
jae
pop
outsl
js
add
outsb
cmpsb
test
je
js
repnz
jmp
jae
out
mov
add
sbb
clc
repnz
jmp
jae
int3
add
add
js
stos
sahf
push
xor
clc
repnz
jmp
jae
add
outsl
lcall
xchg
mov
clc
repnz
jmp
jae
out
sbb
add
sahf
mov
add
leave
nop
jmp
inc
add
sahf
hlt
les
sbb
mov
push
mov
xchg
ret
add
pop
add
add
inc
cld
les
xchg
inc
add
scas
iret
add
or
push
lods
fisttps
test
clc
repnz
jmp
jae
scas
add
cmp
test
add
clc
repnz
jmp
jae
ljmp
xchg
and
clc
repnz
jmp
jae
add
add
fs
jne
clc
repnz
jmp
jae
les
sahf
add
inc
rcrb
push
mov
leave
nop
jmp
cs
es
es
jmp
xchg
inc
add
sub
outsl
hlt
add
scas
sub
push
mov
add
add
add
js
add
add
adc
call
test
nop
push
mov
leave
nop
jmp
add
mov
out
add
stos
add
clc
repnz
jmp
jae
add
sbb
stos
rorl
test
cld
jmp
jae
fadd
sbb
add
add
repz
mov
xchg
ret
jmp
sbb
inc
push
xchg
inc
add
jb
gs
clc
repnz
jmp
jae
add
sbb
add
clc
repnz
jmp
jae
mov
sahf
or
movb
add
repnz
jmp
jae
mov
iret
add
inc
clc
repnz
jmp
jae
aad
add
add
add
mov
add
xchg
add
repnz
jmp
jae
add
out
iret
sbb
xchg
pop
clc
repnz
jmp
jae
pop
add
add
or
outsb
dec
or
mov
xchg
ret
add
imul
add
fld1
clc
repnz
jmp
jae
add
add
add
add
push
add
jmp
imul
or
lcall
jnp
add
push
mov
xchg
ret
add
add
ljmp
ss
xchg
clc
repnz
jmp
jae
add
les
fld1
push
mov
xchg
ret
add
loop
mov
clc
add
nop
push
mov
leave
nop
jmp
add
pop
add
add
mov
sar
push
mov
leave
nop
jmp
stos
push
out
mov
add
icebp
add
nop
push
mov
leave
nop
jmp
mov
add
add
loope
nop
push
mov
leave
nop
jmp
mov
add
add
push
add
out
mov
clc
repnz
jmp
jae
add
add
or
xchg
add
inc
in
fisubrl
call
nop
push
mov
leave
nop
jmp
out
add
or
out
mov
push
mov
leave
nop
jmp
mov
ljmp
xor
call
nop
jmp
sbb
xor
imul
clc
repnz
jmp
jae
or
add
add
rorl
in
leave
nop
jmp
add
jae
xchg
add
scas
es
xchg
jl
xor
inc
xchg
inc
add
add
add
jmp
fcmovnu
sbb
clc
repnz
jmp
jae
add
sbb
pop
scas
aad
lods
sti
fld1
clc
repnz
jmp
jae
add
fadd
sahf
add
add
lcall
lock
add
add
cld
mov
repnz
jmp
jae
add
add
iret
fcmovne
data16
clc
repnz
jmp
jae
outsl
fadds
add
add
add
fsubs
incl
data16
add
add
mov
adcl
add
in
leave
nop
jmp
hlt
fildll
add
add
add
scas
out
pushl
push
mov
xchg
ret
fs
mov
add
mov
cld
jmp
jae
inc
sbb
add
inc
sbb
shrl
insb
gs
repnz
jmp
jae
add
fistpl
or
nop
push
mov
leave
nop
jmp
push
add
cmpl
push
mov
xchg
ret
xor
add
scas
xchg
adc
push
inc
sbb
repnz
jmp
jae
add
add
iret
mov
clc
repnz
jmp
jae
add
add
cld
fsubrs
xchg
push
mov
xchg
ret
stos
add
aad
add
loop
outsl
int3
add
mov
mov
xchg
ret
stos
fildl
pop
mov
add
add
inc
xor
nop
push
mov
leave
nop
jmp
add
lcall
add
mov
mov
leave
nop
jmp
mov
sbb
data16
jmp
sti
popa
clc
repnz
jmp
jae
les
sbb
mov
add
mov
pusha
clc
repnz
jmp
jae
add
mov
jae
add
inc
add
clc
repnz
jmp
jae
sbb
add
xchg
hlt
add
add
add
incl
nop
push
mov
leave
nop
jmp
add
iret
ficomps
iret
fwait
clc
repnz
jmp
jae
sbb
add
add
add
icebp
nop
push
mov
leave
nop
jmp
xor
iret
push
inc
mov
push
sti
push
push
mov
xchg
ret
scas
add
add
add
add
cld
outsb
inc
add
sbb
add
add
add
push
clc
repnz
jmp
jae
add
add
add
add
inc
add
mov
repz
mov
xchg
ret
mov
add
add
int3
js
add
loop
fld1
clc
repnz
jmp
jae
mov
add
aaa
mov
nop
push
mov
leave
nop
jmp
mov
or
int3
addl
hlt
sbb
or
clc
repnz
jmp
jae
sub
add
lods
add
xchg
pop
mov
push
mov
xchg
ret
add
mov
xor
ret
clc
repnz
jmp
jae
add
lcall
add
mov
jmp
jae
add
add
xchg
sbb
lret
add
loop
fistpl
clc
repnz
jmp
jae
int3
jae
fildl
inc
add
mov
movsb
shr
ds
clc
repnz
jmp
jae
sbb
add
hlt
mov
sbb
push
mov
xchg
ret
mov
pop
pop
add
mov
push
push
lock
mov
cmc
arpl
xchg
ret
pop
ljmp
xchg
add
test
add
repnz
jmp
jae
int3
add
es
data16
push
push
mov
xchg
ret
add
inc
clc
or
adc
mov
xchg
ret
pop
mov
add
sbb
push
mov
xchg
ret
andl
mov
mov
jecxz
movb
mov
xchg
ret
add
mov
mov
loopne
nop
push
mov
leave
nop
jmp
fs
js
add
add
sahf
add
jmp
jae
inc
pop
mov
sbb
sub
aaa
push
push
mov
xchg
ret
or
data16
add
loop
add
push
loop
mov
clc
repnz
jmp
jae
mov
add
add
sbb
add
repnz
jmp
jae
xchg
inc
or
add
pop
or
fadd
pop
sub
add
mov
cld
jmp
jae
add
imul
push
pop
fisubrl
repnz
jmp
jae
or
out
mov
mov
cmpsl
add
clc
repnz
jmp
jae
stos
add
add
add
jmp
add
jmp
jae
inc
outsl
imul
imul
nop
push
mov
leave
nop
jmp
xor
fwait
or
outsl
add
add
aad
add
push
mov
xchg
ret
out
pop
add
out
loop
and
add
add
push
clc
repnz
jmp
jae
loop
mov
fwait
mov
push
nop
push
mov
leave
nop
jmp
add
sahf
add
sahf
add
xchg
jae
lcall
add
adc
add
sbb
add
xor
out
mov
repnz
jmp
jae
add
add
add
add
lret
je
clc
repnz
jmp
jae
int3
sbb
sbb
mov
repnz
jmp
jae
add
fists
iret
lcall
cld
jmp
jae
ljmp
add
or
repnz
jmp
jae
ljmp
les
add
add
nop
push
mov
leave
nop
jmp
add
mov
mov
xchg
ret
add
sbb
mov
sbb
dec
pop
clc
repnz
jmp
jae
hlt
lret
cld
add
xor
and
clc
repnz
jmp
jae
add
add
add
add
clc
repnz
jmp
jae
add
lret
add
lret
add
mov
out
and
repnz
jmp
jae
jmp
outsl
add
add
mov
push
mov
repnz
jmp
jae
add
add
add
add
movsl
mov
nop
push
mov
leave
nop
jmp
data16
add
or
sbb
clc
repnz
jmp
jae
fistl
lret
add
iret
add
scas
jne
nop
push
mov
leave
nop
jmp
sbb
add
js
sar
jecxz
or
push
mov
leave
nop
jmp
or
hlt
add
cld
jmp
jae
add
mov
add
add
mov
xor
repnz
jmp
jae
add
add
clc
repnz
jmp
jae
fdiv
add
add
fs
push
mov
push
mov
leave
nop
jmp
fwait
add
fs
sbb
add
add
xor
in
leave
nop
jmp
addl
add
add
loop
filds
icebp
stos
clc
repnz
jmp
jae
add
add
push
mov
clc
repnz
jmp
jae
mov
out
add
jae
mov
sbb
clc
repnz
jmp
jae
hlt
imul
fildll
add
add
repnz
jmp
jae
jmp
add
fwait
cs
lsl
nop
push
mov
leave
nop
jmp
mov
andl
out
je
push
clc
repnz
jmp
jae
iret
add
add
push
sbb
add
out
nop
push
mov
leave
nop
jmp
imul
cs
sbb
inc
jmp
push
push
mov
xchg
ret
int3
sbb
les
hlt
add
jmp
es
add
cld
jmp
jae
stos
add
out
out
xchg
add
lret
push
clc
repnz
jmp
jae
int3
or
add
add
add
push
nop
push
mov
leave
nop
jmp
jmp
add
add
outsl
add
add
inc
loopne
int
nop
push
mov
leave
nop
jmp
iret
xchg
add
mov
jae
mov
add
push
mov
xchg
ret
add
stos
push
add
add
add
pop
mov
nop
push
mov
leave
nop
jmp
add
add
out
add
shr
clc
repnz
jmp
jae
cld
push
add
add
aam
cmpl
nop
push
mov
leave
nop
jmp
sbb
xchg
mov
inc
sub
repnz
jmp
jae
out
add
or
add
add
cmp
mov
xchg
ret
hlt
hlt
or
addl
add
imul
imul
add
cmpl
add
lods
add
or
mov
xchg
ret
ljmp
add
add
add
add
mov
push
mov
xchg
ret
sbb
int3
stos
ljmp
cmp
mov
xchg
ret
or
int3
xchg
add
lret
add
mov
mov
clc
repnz
jmp
jae
xor
push
add
fs
add
add
outsl
nop
push
mov
leave
nop
jmp
lods
les
hlt
js
sahf
mov
mov
xchg
ret
jmp
add
add
ljmp
jmp
test
repnz
jmp
jae
add
or
add
dec
or
in
leave
nop
jmp
mov
add
mov
mov
jg
clc
repnz
jmp
jae
add
add
add
movswl
nop
push
mov
leave
nop
jmp
add
add
hlt
sbb
dec
sub
in
inc
add
int3
add
lret
imul
add
add
cld
pushf
pusha
add
add
mov
jge
nop
push
mov
leave
nop
jmp
push
add
mov
add
cld
jmp
jae
add
add
lcall
repnz
jmp
jae
cs
add
hlt
cld
sbb
ljmp
mov
roll
mov
xchg
ret
add
add
out
xchg
add
push
mov
add
add
add
add
enter
es
pop
push
mov
xchg
ret
add
add
or
ljmp
push
push
mov
xchg
ret
mov
add
xchg
inc
xchg
add
pop
push
cli
mov
mov
nop
push
mov
leave
nop
jmp
scas
sbb
cld
sbb
xchg
add
add
clc
repnz
jmp
jae
cld
xchg
aad
data16
sbb
jno
jmp
jp
nop
push
mov
leave
nop
jmp
sbb
push
push
add
add
push
mov
add
outsb
add
lock
add
add
add
push
addl
add
add
add
mov
clc
repnz
jmp
jae
add
add
loop
add
or
add
repnz
jmp
jae
outsl
add
add
xchg
add
repnz
jmp
jae
add
add
loop
xchg
sbb
add
pop
mov
sub
test
pop
add
clc
repnz
jmp
jae
add
inc
fildl
or
rep
clc
repnz
jmp
jae
add
add
xor
push
lret
add
nop
push
mov
leave
nop
jmp
xor
push
xchg
add
clc
repnz
jmp
jae
ljmp
push
add
or
dec
and
push
loopne
repnz
jmp
jae
push
lcall
add
repnz
jmp
jae
add
stos
add
iret
add
xchg
push
push
mov
xchg
ret
xchg
add
imul
clc
repnz
jmp
jae
add
add
add
cs
or
dec
clc
repnz
jmp
jae
add
ljmp
add
int3
jge
subl
add
nop
push
mov
leave
nop
jmp
pop
sahf
or
jmp
mov
mov
push
mov
leave
nop
jmp
jmp
scas
add
push
fucomip
and
repnz
jmp
jae
sbbl
fs
mov
clc
repnz
jmp
jae
mov
xchg
or
mov
push
mov
xchg
ret
sbb
inc
inc
inc
lcall
sub
push
mov
xchg
ret
xchg
inc
fadds
xchg
or
add
add
push
mov
leave
nop
jmp
out
inc
add
add
pop
aad
mulb
es
clc
repnz
jmp
jae
mov
jae
out
add
xchg
jne
loop
nop
push
mov
leave
nop
jmp
add
add
add
add
imul
jmp
jae
add
add
imul
push
mov
xchg
ret
add
inc
add
imul
pop
clc
repnz
jmp
jae
or
inc
xor
shl
push
mov
xchg
ret
js
or
add
xchg
add
inc
xor
clc
repnz
jmp
jae
add
outsl
xchg
xchg
sbb
pop
ret
clc
repnz
jmp
jae
mov
add
hlt
xchg
mov
test
clc
repnz
jmp
jae
add
add
xchg
mov
cwtl
inc
add
add
cld
xchg
fistpl
nop
push
mov
leave
nop
jmp
mov
add
hlt
add
call
nop
push
mov
leave
nop
jmp
outsl
out
data16
add
nop
push
mov
leave
nop
jmp
imul
add
cmp
add
add
cmp
nop
push
mov
leave
nop
jmp
mov
loop
jp
call
clc
repnz
jmp
jae
add
pop
mov
nop
inc
cld
out
addr16
push
mov
xchg
ret
xchg
push
addl
stos
add
mov
cs
mov
clc
repnz
jmp
jae
add
add
add
lret
add
add
imul
add
sbb
add
pause
push
mov
leave
nop
jmp
lret
add
sbb
sbb
psubsw
fldt
fs
add
add
sbb
mov
sahf
xor
repnz
jmp
jae
add
fs
mov
add
push
push
mov
xchg
ret
add
add
fists
repz
clc
repnz
jmp
jae
fwait
lcall
add
rolb
cld
jmp
jae
inc
inc
add
add
add
add
in
fld1
nop
push
mov
leave
nop
jmp
andl
add
inc
add
cld
sbb
mov
xchg
ret
cld
add
add
pop
sbbl
add
rol
push
mov
xchg
ret
cld
add
sbb
mov
clc
repnz
jmp
jae
int3
add
cld
add
add
add
push
clc
repnz
jmp
jae
add
add
xchg
sbb
aad
mov
clc
repnz
jmp
jae
or
jae
xor
cld
shrl
mov
xchg
ret
mov
sbb
add
add
lret
ljmp
cld
jmp
jae
add
out
inc
add
add
inc
add
mov
cld
jmp
jae
scas
add
add
push
mov
mov
push
clc
repnz
jmp
jae
push
add
fstpt
add
cmc
mov
push
mov
xchg
ret
data16
add
add
add
shl
push
mov
xchg
ret
lret
pop
hlt
jae
add
js
fucomi
orl
add
mov
hlt
or
xchg
jnp
outsb
and
repnz
jmp
jae
add
fcomps
add
fdivrs
enter
cld
jmp
jae
add
add
add
hlt
sbb
mov
mov
xchg
ret
add
add
add
faddl
mov
leave
nop
jmp
add
or
lcall
mov
clc
repnz
jmp
jae
xchg
les
xchg
filds
mov
add
mov
repnz
jmp
jae
add
outsl
mov
add
fld1
push
mov
xchg
ret
hlt
pop
or
add
iret
add
rorl
add
orl
incl
cld
jae
add
add
xchg
pushl
clc
repnz
jmp
jae
sahf
push
es
mov
inc
add
jbe
out
add
mov
mov
add
lret
add
add
add
add
test
add
imul
clc
repnz
jmp
jae
add
out
fildl
add
or
push
pop
push
mov
xchg
ret
les
lods
add
sbb
sbb
clc
repnz
jmp
jae
mov
lcall
mov
add
clc
repnz
jmp
jae
mov
xor
add
nop
push
mov
leave
nop
jmp
inc
sbb
mov
xchg
orl
jg
clc
repnz
jmp
jae
fadds
sub
fs
add
push
ljmp
add
nop
push
mov
leave
nop
jmp
or
add
es
fsubl
add
add
add
add
push
int3
imul
cmpl
nop
push
mov
leave
nop
jmp
sub
fildl
ljmp
clc
repnz
jmp
jae
or
add
mov
test
sti
clc
repnz
jmp
jae
mov
add
pop
push
clc
repnz
jmp
jae
add
sahf
sahf
mov
add
rclb
mov
cmp
ret
add
hlt
add
data16
lea
push
mov
leave
nop
jmp
fildl
mov
lods
fwait
pop
add
add
nop
push
mov
leave
nop
jmp
add
ljmp
clc
repnz
jmp
jae
scas
sub
add
add
xor
stos
push
mov
xchg
ret
add
sbb
ljmp
jp
inc
orl
and
clc
repnz
jmp
jae
mov
stos
add
leave
push
clc
repnz
jmp
jae
sahf
aad
fwait
iret
add
inc
add
add
iret
dec
push
mov
xchg
ret
push
or
xchg
push
add
hlt
and
add
add
push
push
mov
xchg
ret
add
sbb
int3
add
out
add
sbb
push
and
add
add
or
sbbl
ret
clc
repnz
jmp
jae
add
xor
xchg
add
lea
nop
push
mov
leave
nop
jmp
add
add
add
mov
outsl
push
clc
repnz
jmp
jae
or
add
sbb
push
add
jo
pushl
clc
repnz
jmp
jae
data16
sbb
xor
add
movl
test
add
inc
jne
pop
call
clc
repnz
jmp
jae
lcall
lcall
mov
nop
push
mov
leave
nop
jmp
addl
add
add
mov
add
add
out
jg
nop
push
mov
leave
nop
jmp
lret
sbb
add
cs
xchg
add
fwait
testb
clc
repnz
jmp
jae
add
mov
add
add
nop
push
mov
leave
nop
jmp
add
add
mov
stos
iret
jo
call
clc
repnz
jmp
jae
js
addl
lcall
push
mov
leave
nop
jmp
add
add
inc
sbb
sbb
stos
or
xchg
jmp
jae
hlt
add
sbb
add
or
jmp
jae
add
fildl
push
sub
out
push
add
pop
push
add
add
add
or
outsl
add
add
add
pop
out
insb
add
fstpl
repnz
jmp
jae
inc
add
add
add
mov
dec
jo
orl
addl
out
lcall
lods
aad
outsb
jb
fwait
clc
repnz
jmp
jae
push
clc
sub
add
sbb
int3
push
pop
xorl
clc
repnz
jmp
jae
add
aad
inc
inc
pop
mov
push
mov
leave
nop
jmp
inc
add
xchg
hlt
add
mov
pop
add
stos
clc
repnz
jmp
jae
add
add
fbld
add
sbb
add
push
clc
repnz
jmp
jae
sbb
add
pop
add
inc
xlat
add
push
mov
xchg
ret
add
or
mov
inc
and
nop
push
mov
leave
nop
jmp
jmp
clc
add
or
subl
mov
push
mov
xchg
ret
xchg
fildl
mov
add
add
sbb
add
inc
clc
repnz
jmp
jae
add
mov
push
daa
je
clc
repnz
jmp
jae
add
add
add
roll
repnz
jmp
jae
filds
iret
sbb
add
add
loop
nop
push
mov
leave
nop
jmp
jmp
hlt
lcall
testb
clc
repnz
jmp
jae
add
add
fwait
add
out
add
lea
repnz
jmp
jae
add
adcw
add
add
add
add
add
repnz
jmp
jae
sahf
imul
add
jmp
jae
add
inc
add
hlt
ljmp
xchg
xchg
clc
repnz
jmp
jae
inc
mov
lcall
push
mov
leave
nop
jmp
add
es
inc
add
add
sarl
push
sub
nop
jmp
sbb
ljmp
add
repnz
jmp
jae
add
add
push
add
aas
push
clc
repnz
jmp
jae
push
add
mov
jae
add
fcompl
jae
repnz
jmp
jae
hlt
or
add
add
clc
repnz
jmp
jae
xchg
xchg
add
push
or
sbb
pop
clc
repnz
jmp
jae
inc
ljmp
add
outsl
push
mov
xor
clc
repnz
jmp
jae
push
sub
imul
jne
nop
push
mov
leave
nop
jmp
or
add
add
pop
inc
add
add
add
add
cs
cmpl
jae
mov
add
jmp
sar
cld
jmp
jae
inc
add
xchg
clc
sbb
or
mov
insb
add
add
xchg
hlt
push
loopne
je
clc
repnz
jmp
jae
mov
xchg
int3
mov
jmp
lods
add
add
add
out
stos
cld
fsubrs
inc
cmpw
nop
push
mov
leave
nop
jmp
add
add
add
stos
rorl
test
clc
repnz
jmp
jae
add
add
les
pop
ljmp
add
sbbl
incl
sbb
add
xchg
sbb
and
clc
repnz
jmp
jae
xchg
add
mov
push
fidivs
mov
push
mov
xchg
ret
add
sbb
sbb
mov
clc
repnz
jmp
jae
add
add
inc
shr
add
jmp
aad
add
pop
lods
add
es
iret
aad
xchg
outsl
jge
sar
cld
jmp
jae
sbb
out
add
adcl
fs
add
scas
ljmp
add
and
mov
clc
repnz
jmp
jae
ljmp
stos
mov
repnz
push
mov
xchg
ret
xor
add
sbb
mov
cmp
mov
xchg
ret
inc
xchg
add
js
add
xor
nop
push
mov
leave
nop
jmp
push
add
outsl
pop
add
inc
mov
nop
push
mov
leave
nop
jmp
add
add
mov
jbe
lret
clc
repnz
jmp
jae
js
lret
mov
add
shrb
repnz
jmp
jae
add
imul
push
push
mov
xchg
ret
add
add
add
lret
mov
push
mov
xchg
ret
add
js
mov
sbb
call
clc
repnz
jmp
jae
hlt
cld
add
ljmp
imull
add
xorl
incl
data16
add
inc
add
les
push
mov
leave
nop
jmp
add
out
add
fcomp
data16
push
mov
clc
repnz
jmp
jae
add
mov
sbb
jae
add
lret
add
push
clc
repnz
jmp
jae
xchg
outsl
add
add
mov
data16
sbb
and
add
add
push
mov
xchg
ret
add
cld
mov
or
sub
out
test
repnz
jmp
jae
pop
stos
or
xchg
add
pusha
add
cli
hlt
orl
xchg
ret
xchg
cld
add
add
xchg
add
roll
push
mov
leave
nop
jmp
mov
add
add
add
sbb
clc
repnz
jmp
jae
scas
lret
add
jae
mov
rol
loope
clc
repnz
jmp
jae
add
les
push
add
fs
lret
clc
repnz
jmp
jae
add
add
add
xchg
scas
add
mov
add
repnz
jmp
jae
add
lret
add
add
cld
testb
mov
xchg
ret
add
lret
aad
lods
add
jae
sbb
push
aaa
shr
push
mov
xchg
ret
add
mov
mov
sbb
fadds
add
pop
inc
add
out
mov
add
es
mov
push
mov
leave
nop
jmp
imul
add
push
clc
repnz
jmp
jae
cld
jae
js
add
fistps
add
fildl
clc
repnz
jmp
jae
add
js
add
and
js
repnz
jmp
jae
push
add
xor
sbb
and
repnz
jmp
jae
add
add
js
aam
movsb
test
repnz
jmp
jae
add
out
add
add
add
inc
leave
clc
repnz
jmp
jae
add
lret
jmp
add
add
sahf
sbb
repnz
jmp
jae
mov
add
jo
sub
sbb
nop
push
mov
leave
nop
jmp
hlt
lods
sbb
mov
mov
clc
repnz
jmp
jae
sahf
sbb
mov
add
int
sar
repnz
jmp
jae
out
add
clc
add
loop
or
push
mov
xchg
ret
clc
fldt
es
cs
in
sub
inc
pusha
clc
repnz
jmp
jae
add
lret
lret
add
mov
lret
hlt
add
push
xchg
rol
xor
jne
clc
repnz
jmp
jae
add
js
add
mov
clc
repnz
jmp
jae
inc
add
add
inc
add
xor
repnz
jmp
jae
add
sbb
add
add
push
push
loop
add
add
nop
push
mov
leave
nop
jmp
mov
sub
inc
pushl
push
mov
xchg
ret
or
add
js
hlt
inc
push
sbb
jmp
jae
lret
add
xchg
add
add
lcall
xlat
movsb
sub
mov
xchg
xchg
xchg
int
in
add
add
add
sub
pop
inc
add
hlt
add
add
sbb
fildl
or
or
mov
push
mov
xchg
ret
add
add
add
sbb
gs
push
mov
xchg
ret
outsl
add
sahf
add
fildl
add
add
push
clc
repnz
jmp
jae
add
add
xchg
outsl
add
jmp
jae
add
sbb
add
add
fsubrs
ret
dec
push
mov
xchg
ret
js
or
add
add
add
clc
repnz
jmp
jae
push
add
add
push
clc
repnz
jmp
jae
cld
iret
add
xor
inc
sbb
add
repnz
jmp
jae
fwait
add
xchg
mov
pop
mov
clc
repnz
jmp
jae
add
clc
add
nop
push
mov
leave
nop
jmp
sbb
or
push
pop
add
cld
jmp
jae
mov
stos
mov
xchg
add
or
test
add
lahf
imul
clc
repnz
jmp
jae
add
inc
add
clc
repnz
jmp
jae
add
add
push
scas
fs
add
gs
clc
repnz
jmp
jae
cld
add
add
add
jmp
jae
out
add
mov
cld
loop
addr16
nop
push
mov
leave
nop
jmp
add
add
push
add
js
inc
add
shll
repnz
jmp
jae
sub
or
inc
scas
add
clc
repnz
jmp
jae
es
mov
add
add
dec
add
clc
repnz
jmp
jae
push
or
les
add
add
mov
fists
or
and
or
pop
pop
es
xorl
sub
repnz
jmp
jae
outsl
add
add
pop
add
inc
inc
fiadds
leave
cmpl
nop
push
mov
leave
nop
jmp
push
add
mov
aad
mov
clc
repnz
jmp
jae
sbb
sbb
filds
add
hlt
xchg
insb
add
push
clc
repnz
jmp
jae
add
push
add
sbb
add
sbb
push
mov
xchg
ret
xchg
add
inc
add
mov
mov
xchg
ret
sbb
xchg
add
fwait
xchg
imul
mov
clc
repnz
jmp
jae
inc
add
lcall
loop
fwait
call
nop
push
mov
leave
nop
jmp
add
out
add
inc
fwait
aas
fld1
clc
repnz
jmp
jae
jmp
lcall
add
cmp
repnz
jmp
jae
cld
xor
add
cmovb
repnz
jmp
jae
add
subl
mov
ljmp
pop
test
nop
push
mov
leave
nop
jmp
mov
add
sbb
jmp
jae
mov
hlt
add
jmp
add
cmpsb
leave
jne
clc
repnz
jmp
jae
add
bound
add
nop
push
mov
leave
nop
jmp
push
andl
add
push
add
dec
cmp
repnz
jmp
jae
fildll
mov
xchg
mov
clc
repnz
jmp
jae
add
sub
clc
push
xchg
add
add
loopne
and
nop
push
mov
leave
nop
jmp
sbb
pop
inc
lret
xchg
add
jae
push
add
push
mov
xchg
ret
pop
mov
sbb
subl
xor
clc
repnz
jmp
jae
ljmp
lret
ja
test
repnz
jmp
jae
add
add
hlt
jge
ret
push
mov
xchg
ret
sbb
add
sbb
lea
clc
repnz
jmp
jae
cld
lcall
or
add
jmp
jae
loop
or
mov
add
add
pop
inc
push
clc
repnz
jmp
jae
addl
lods
add
add
lret
pop
or
sbb
ljmp
and
mov
xchg
ret
fwait
add
aad
lcall
jne
call
add
xorl
incl
iret
push
add
xorl
clc
repnz
jmp
jae
add
add
or
nop
jmp
add
lods
addl
pop
add
pop
je
clc
repnz
jmp
jae
out
add
sub
rcll
repnz
jmp
jae
add
mov
out
loopne
mov
jmp
jae
add
add
add
add
mov
clc
repnz
jmp
jae
stos
loop
xor
or
push
loopne
add
clc
repnz
jmp
jae
loop
addl
add
pop
clc
repnz
jmp
jae
mov
add
add
fwait
jae
jnp
clc
repnz
jmp
jae
add
stos
add
mov
add
nop
push
mov
leave
nop
jmp
int3
add
inc
fbld
stos
stos
sbb
insl
pop
push
mov
xchg
ret
or
add
add
add
scas
add
add
nop
push
mov
leave
nop
jmp
add
pop
add
lret
add
sbb
xor
rcll
repnz
jmp
jae
add
add
add
fwait
clc
repnz
jmp
jae
mov
inc
add
add
hlt
sbb
push
mov
leave
nop
jmp
stos
xchg
aad
add
add
pop
clc
repnz
jmp
jae
push
add
pop
sbb
xchg
push
scas
data16
push
push
mov
xchg
ret
add
xchg
jae
inc
add
or
test
in
clc
repnz
jmp
jae
add
add
xabort
cld
jmp
jae
add
pop
scas
jae
addl
sbb
push
clc
repnz
jmp
jae
hlt
add
add
push
clc
repnz
jmp
jae
add
inc
add
add
nop
push
mov
leave
nop
jmp
mov
add
push
int3
les
add
nop
push
mov
leave
nop
jmp
add
add
add
jmp
int3
xchg
sbb
cld
jmp
jae
or
add
inc
xor
aad
add
mov
clc
repnz
jmp
jae
es
add
out
lods
sub
in
leave
nop
jmp
pop
clc
sbb
add
mov
cmc
lea
push
mov
xchg
ret
add
add
ljmp
push
mov
xchg
ret
jae
inc
add
mov
clc
repnz
jmp
jae
add
add
xchg
mov
mov
xchg
ret
add
add
iret
xchg
add
or
add
add
out
nop
fists
repnz
jmp
jae
add
out
add
clc
add
xor
add
adc
repnz
jmp
jae
add
add
add
clc
add
repnz
jmp
jae
add
jae
add
add
inc
test
clc
repnz
jmp
jae
or
scas
mov
add
imul
jmp
scas
add
or
hlt
inc
add
insl
xor
clc
repnz
jmp
jae
add
loop
inc
push
mov
sbb
clc
repnz
jmp
jae
add
add
add
test
repnz
jmp
jae
mov
hlt
add
add
add
test
cld
jmp
jae
or
out
add
add
add
mov
leave
nop
jmp
add
jmp
add
cld
jmp
jae
fildl
add
add
pop
call
clc
repnz
jmp
jae
fadds
push
add
int3
add
mov
mov
jae
push
mov
leave
nop
jmp
add
aad
call
push
mov
xchg
ret
add
add
lods
fistpl
add
add
mov
negb
repnz
jmp
jae
add
add
add
int
push
mov
xchg
ret
add
add
lcall
inc
adc
push
mov
leave
nop
jmp
scas
or
or
int3
add
add
loopne,pn
add
clc
repnz
jmp
jae
fs
clc
add
add
add
jmp
jae
fildl
add
lcall
mov
xor
clc
repnz
jmp
jae
scas
cld
add
inc
add
add
clc
repnz
jmp
jae
xor
add
add
les
inc
add
mov
add
mov
in
or
add
add
sbb
dec
add
lcall
test
nop
push
mov
leave
nop
jmp
add
add
inc
inc
pop
jmp
inc
add
add
add
mov
cs
add
jmp
jae
add
add
mov
mov
movsl
clc
repnz
jmp
jae
mov
add
jae
add
jae
clc
repnz
jmp
jae
aad
out
int3
inc
lods
add
add
dec
push
mov
fiaddl
sub
add
pop
pop
incb
clc
add
inc
add
pop
add
push
mov
xchg
ret
add
mov
add
cld
movsb
scas
in
mov
clc
repnz
jmp
jae
loop
inc
outsl
add
lcall
push
mov
xchg
ret
add
mov
fstpt
adcl
fwait
inc
add
fistpl
add
add
lret
add
push
mov
xchg
ret
xchg
add
add
pop
add
add
and
inc
clc
repnz
jmp
jae
sbb
inc
mov
jmp
add
js
sbb
mov
sub
add
add
repnz
jmp
jae
addl
fwait
xchg
add
add
mov
or
pop
jbe
cmpsb
add
add
sbb
push
mov
xchg
ret
filds
fs
add
fldt
sbb
add
jecxz
clc
repnz
jmp
jae
add
loop
add
add
mov
cld
jmp
jae
jae
add
add
add
mov
push
mov
xchg
ret
cld
add
add
add
add
lret
sub
add
mov
xchg
ret
add
add
add
stos
add
call
clc
repnz
jmp
jae
add
es
add
lret
nop
push
mov
leave
nop
jmp
add
sbb
add
adc
repnz
jmp
jae
add
addl
mov
push
mov
xchg
ret
inc
jmp
mov
add
sbb
mov
fwait
clc
repnz
jmp
jae
add
out
add
out
add
add
add
popf
push
push
mov
xchg
ret
xor
jae
mov
add
add
cmpsb
aam
stos
push
mov
and
add
iret
add
cmp
add
sbb
jmp
adc
and
xchg
push
cmp
sub
jno
and
sub
mov
es
jle
dec
idivb
mov
movsl
jg
sub
rol
xor
jne
insb
add
add
jns
adc
sbb
cmp
push
popa
and
cmp
les
jl
bnd
int
mov
push
pusha
add
add
mov
mov
add
add
jno
cmpsl
push
push
mov
into
in
and
mov
addr16
insb
add
pop
ja
xchg
jnp
add
add
mov
cmpsb
sbb
in
xor
and
jne
lods
das
shrl
add
jl
stc
sbb
gs
adc
inc
in
das
push
sbb
adc
pop
pop
jl
add
mov
xchg
and
adc
imul
dec
inc
dec
test
cwtl
in
jno
mov
test
mov
push
mov
jo
bound
add
loopne
add
add
mov
js
iret
jg
lret
inc
lcall
dec
mov
add
int
ficomps
mov
lods
clc
jmp
rclb
ret
adc
jp,pn
dec
fdivrp
add
add
xchg
add
add
fisubrs
add
add
repnz
pop
adc
pop
mov
add
add
and
cmp
add
add
jmp
add
add
imul
sub
mov
inc
jmp
rcl
pusha
add
mov
sahf
lea
adc
rcl
das
std
mov
repnz
inc
inc
push
das
movsl
lock
addr16
mov
fwait
in
mov
or
inc
xchg
cmp
inc
sub
lahf
dec
loopne
ret
inc
dec
add
bound
test
mov
aas
lret
mov
xchg
or
subl
add
insb
add
add
xchg
repz
pop
xor
add
add
add
lcall
add
add
repz
repz
xchg
and
leave
xchg
sub
in
cmpsl
into
sub
add
add
add
add
pop
fsubrs
add
add
add
pop
dec
fwait
push
out
cmp
add
add
jb
push
movsl
mov
pop
outsl
xchg
mov
std
or
xor
nop
pusha
add
add
push
pusha
add
add
cli
insb
add
mov
ja
mov
scas
shll
mov
mov
add
add
cwtl
aam
andps
add
xor
xor
mov
xor
fcomps
inc
ret
xorl
or
xchg
ja
stos
test
add
fsubr
push
loope
push
cmp
add
add
add
ss
dec
lods
xchg
mulb
mov
mov
sbb
push
push
clc
sbb
mov
jmp
or
add
add
push
pop
lcall
mov
push
jmp
inc
lret
lods
and
add
add
stos
mov
gs
xchg
xor
add
mov
mov
sub
push
xor
push
test
add
push
push
inc
shl
enter
cmp
iret
ljmp
mov
mov
jl
push
add
pop
pop
call
pop
adc
mov
push
cltd
xor
iret
and
inc
or
sub
mov
and
add
add
pusha
add
add
rolb
and
add
add
out
cmc
jg
xchg
xchg
push
lcall
dec
sahf
xchg
or
add
add
mov
dec
dec
and
jmp
push
pushf
sub
add
jp
add
add
add
add
add
into
inc
mov
sbb
pop
lret
shrl
mov
gs
mov
adc
push
imul
add
popf
pop
dec
mov
mov
ret
cmpsl
mov
pop
or
loopne
aad
lods
int3
xchg
push
fyl2xp1
cld
popa
cmp
rcrb
nop
sub
add
mov
popf
inc
add
rcrl
dec
ds
and
jl
pop
push
bound
push
inc
cmp
adc
mov
into
faddl
add
insb
add
sub
add
stos
sbb
ja
and
ss
sub
aad
leave
mov
xor
xor
jb
int3
add
add
add
mov
push
sbb
ja
lret
push
jmp
sbb
dec
xor
fisttpll
push
jb
or
setp
lds
fucom
popa
mov
es
inc
fsubs
je
mov
data16
add
or
in
jbe
sbb
adc
cli
das
aaa
cmp
ss
std
jb
popf
scas
xchg
push
inc
add
add
pushf
dec
add
cmpsl
lea
fst
cmp
add
jo
cmp
adcb
mov
nop
sub
add
and
test
add
add
jbe
mov
add
jne
andb
add
add
andl
add
dec
add
nop
push
dec
mov
addr16
incb
dec
add
add
mov
mov
fistps
gs
idiv
sbb
test
xor
popa
scas
or
pop
arpl
xchg
out
js
and
mov
into
add
add
pushf
mov
sbb
cmp
outsl
out
mov
add
popa
out
mov
xor
mov
sub
mov
popf
pushf
lds
add
push
pop
cmp
cli
jle
out
lock
jle
fisubl
xchg
add
sub
add
add
jno
cli
dec
add
mov
pop
xor
add
add
add
add
add
inc
xor
xchg
adc
dec
es
xchg
hlt
test
lock
pop
loopne
ds
cmp
lahf
out
adc
add
std
sub
inc
mov
sbb
add
xor
mov
icebp
mov
add
jo
loop
stos
test
mov
imul
and
sub
push
jl
pusha
add
add
add
mov
sub
out
add
add
add
or
cli
xor
pop
sbb
xor
dec
ljmp
into
pop
mov
add
add
push
inc
add
add
sub
xchg
xchg
out
push
es
cmc
mov
add
cwtl
shl
shl
jecxz
mov
dec
add
mov
ret
addr16
add
mov
bound
add
add
lahf
shrl
scas
add
dec
xchg
add
sbb
repz
les
mov
data16
add
add
add
add
adc
jno
aas
mov
jb
inc
aas
cmpsb
jnp
movsl
cmpsb
outsb
cmpsl
std
jmp
es
fwait
das
cmp
jb
pop
mov
mov
mov
inc
add
add
jmp
add
ja
scas
mov
js
xchg
incl
test
fdivrl
mov
add
loop
ret
mov
mov
scas
sub
or
mov
xor
jg
push
ret
lock
push
push
cli
aaa
jae
sub
add
add
enter
add
add
adc
inc
lods
ja
adc
test
fisubrl
add
cmp
add
pop
xlat
int3
and
add
add
mov
mov
push
inc
ss
in
test
add
add
mov
cmp
insl
sbb
inc
mov
mov
xchg
push
and
mov
dec
sbb
add
add
inc
in
jecxz
test
add
mov
icebp
cmpb
pminsw
sti
dec
xor
inc
or
je
pop
mov
incl
mov
add
add
inc
jle
or
add
add
xor
inc
les
xor
add
sub
add
in
add
add
pop
or
mov
inc
rcr
mov
add
das
jo
jge
xor
gs
es
inc
add
sbb
add
or
push
inc
out
xchg
sahf
xchg
pusha
add
add
fistpl
adc
fwait
popa
xor
jmp
adc
add
push
hlt
mov
xchg
lahf
lock
int
add
add
movsb
pop
mov
leave
stos
and
pop
or
in
jle
dec
test
out
push
je
out
into
xor
repnz
add
adc
iret
xchg
loope
cmp
cwtl
test
xor
scas
dec
xor
scas
jecxz
xchg
pop
sub
mov
shlb
call
nop
pop
push
call
repz
adc
add
mov
or
mov
in
loopne
jmp
ja
loope
jle
xlat
add
add
int3
das
addr16
add
add
adc
pop
mov
xchg
cltd
add
add
add
test
sub
mov
push
iret
xchg
add
nop
mul
dec
add
add
inc
add
add
jno
or
mov
repnz
pop
mov
mov
add
lods
popf
sub
inc
xchg
sub
rorb
mov
xor
inc
cmp
js
add
cmp
pop
outsb
mov
jecxz
and
and
pop
imul
add
inc
dec
add
add
nop
idivl
cmp
mov
or
pushf
add
add
push
jle
scas
inc
add
add
add
add
and
xor
add
add
out
sub
jmp
addl
repz
sub
mov
and
add
add
icebp
lods
pop
add
add
add
push
mov
popf
test
xor
insb
add
add
xor
add
pop
inc
out
arpl
cmpsb
push
mov
stos
dec
icebp
mov
dec
inc
mov
fildll
outsl
aad
add
add
stos
cs
fdivl
push
fsubr
and
mov
int
test
dec
mov
mov
push
and
add
push
push
loop
mov
mov
xchg
dec
add
cmp
mov
ss
sub
add
add
andb
add
add
sub
cli
dec
add
mov
xor
dec
mov
add
mov
xchg
jb
scas
mov
aas
dec
mov
jno
mov
mov
inc
insb
add
add
psrlw
stc
aaa
mov
add
inc
into
leave
mov
mov
adc
insl
rcrl
pop
jb
mov
add
add
add
add
cmp
ds
mov
add
add
or
mov
add
add
es
push
ljmp
add
add
add
es
add
outsl
mov
jp
lret
add
loope
add
add
bound
das
orb
add
push
sub
cs
xor
xor
popa
mov
bound
sbb
add
shrb
xchg
lret
aam
jp
xchg
xor
xor
loop
hlt
shrb
pusha
add
add
add
jbe
pop
jne
insl
notb
mov
add
cltd
dec
mov
add
cmc
lea
popf
leave
mov
aam
sub
mov
xor
mov
jae
jno
or
mov
xchg
push
data16
sahf
cli
fbstp
sarb
mov
movsl
in
ror
popa
xchg
bnd
add
add
mov
sub
add
add
fmul
add
add
add
add
push
jg
push
sbbl
pop
outsl
and
mov
add
ret
cld
mov
in
jp
shlb
mov
mov
mov
imul
sub
add
add
popa
inc
pop
jmp
jl
stos
test
out
adc
clc
pop
fsub
fidivs
sbb
sbb
out
xlat
ja
sbb
mov
or
movsl
aad
in
or
mov
inc
add
add
iret
or
add
add
into
pop
dec
add
add
push
push
cmp
add
add
mov
paddsw
mov
fadds
sub
add
psllq
add
xchg
or
shrb
out
xor
stc
sub
push
call
pop
mov
mov
dec
push
mov
add
xchg
out
cmp
cmp
lods
cmpsl
adc
jecxz
loopne
adc
cwtl
pop
adc
cmp
dec
jb
pop
shl
cs
lahf
test
add
out
mul
xor
push
fidivs
mov
sub
in
mov
add
add
push
sub
std
fmuls
lds
mov
or
xor
cmp
dec
pop
pop
xchg
iret
push
stc
imul
aaa
inc
lea
mov
ret
and
push
pop
mov
ljmp
push
jns
cmpsl
inc
push
push
out
mov
add
add
jg
xor
test
xchg
enter
arpl
adc
push
pop
rolb
add
pop
sbb
mov
mov
sub
dec
jo
pop
xchg
mov
adc
lret
mov
mov
push
popf
sbb
repnz
pop
or
mov
dec
add
test
pop
loope
sbb
jge
xlat
das
jmp
sbb
xor
scas
pop
inc
add
popf
scas
jb
jmp
pop
sti
xor
jmp
aas
data16
add
add
add
add
jae
add
lods
icebp
test
add
xchg
out
rcl
gs
mov
or
jae
pusha
add
adc
add
xchg
inc
cld
cmp
insb
add
add
fbstp
mov
add
and
mov
mov
adc
cmp
mov
scas
adc
add
push
fidivrl
pushf
mov
push
cld
xchg
repz
ret
ljmp
mov
rcl
fsts
dec
add
add
scas
insb
add
add
or
xor
mov
add
scas
imul
add
add
and
mov
push
cs
jp
or
hlt
mov
jbe
add
dec
jbe
andl
jnp
mov
loope
adc
add
add
test
add
add
movsl
aad
xor
rol
imul
add
mov
dec
mov
pop
ja
out
fwait
call
pop
nop
adc
and
add
mov
add
dec
cmp
jns
mov
inc
cmp
adc
cmp
pop
add
add
sbb
rcrb
fisttps
stos
mov
mov
cmp
pop
dec
mov
int3
xchg
je
gs
ret
stos
cmpsb
jae
scas
loop
jp
pushf
pop
cli
xchg
pushl
jb
add
add
icebp
pop
sub
add
in
jnp
je
sbb
mov
fwait
outsb
stos
xor
sahf
roll
insb
add
pop
mov
or
jle
andl
cmp
divl
fnstenv
xchg
dec
sbb
sub
out
mov
adc
or
add
add
mov
je
icebp
call
imul
ljmp
add
xlat
fistpl
sbb
inc
hlt
gs
sub
pop
rcrb
sbb
out
push
jle
sub
add
add
insb
add
push
rcrb
das
mov
dec
push
call
push
jo
outsb
or
mov
imul
mov
inc
and
movsl
inc
jmp
jp
aam
or
mov
add
add
ficompl
xchg
or
jg
sbb
add
add
add
repz
mov
shrl
and
add
add
adc
cmp
mov
ds
push
fcomip
add
adc
scas
js
jno
fldl
or
add
add
push
xchg
ss
mov
cmc
test
arpl
mov
push
cmp
inc
cmc
mov
pop
cmp
daa
ja
cwtl
lds
inc
jg
and
mov
add
je
popf
sub
add
add
mov
cmp
add
add
add
push
pop
frstor
mov
push
jle
jecxz
aaa
cld
ljmp
in
xchg
clc
icebp
or
add
add
add
pop
add
inc
jp
cmp
mov
outsb
mov
dec
add
add
or
mov
pop
insl
lahf
pop
sbb
rcrl
pop
stos
jnp
mov
xlat
pop
imul
cwtl
mov
jno
cs
xchg
and
sub
mov
mov
inc
add
add
call
cmp
outsl
pusha
add
jbe
pop
pop
aaa
cmc
dec
test
and
push
fwait
addr16
cmc
or
add
add
sbb
pop
aad
aas
dec
adc
or
add
add
call
push
cmpb
popa
addl
add
fisttpll
pop
lds
sub
xchg
pop
pop
push
pop
mul
jle
add
add
xor
add
lea
jo
loope
jnp
call
iret
int
in
push
jae
dec
add
inc
sub
es
repnz
add
add
mov
push
sub
fwait
mov
dec
add
pop
add
bound
enter
add
sbb
jl
bound
sub
mov
insl
int
fcmovb
and
add
add
sub
outsb
pop
cmp
add
mov
add
add
popa
xchg
loopne
in
adc
mov
xchg
dec
add
sbbl
mov
aad
imulb
add
jb
sub
mov
adc
inc
xchg
lahf
repnz
fstpt
add
jno
xor
add
add
jmp
pop
leave
fisubrs
jo
int3
leave
and
add
add
mov
and
add
sub
add
add
mov
mov
mov
aaa
stos
shrb
add
push
pop
xchg
xchg
movl
clc
int
icebp
push
ret
xor
jo
push
xchg
ficomps
add
mov
movsl
pop
sbb
add
add
add
lock
outsl
xchg
dec
add
add
fstpl
adc
dec
add
sub
add
add
push
shr
xchg
loop
push
sti
cltd
mov
lock
mov
scas
xor
add
xchg
iret
out
popf
or
rcll
rcrb
cmpsb
inc
add
enter
jecxz
jg
xor
mov
cs
outsb
or
iret
shrl
add
jae
pop
dec
leave
enter
cmpsl
leave
mov
adc
pop
jo
ret
insb
add
rcll
icebp
sub
clc
adc
cmpb
mov
push
je
add
add
push
je
cld
add
add
add
leave
out
sbb
add
mov
adc
clc
fstpt
add
shlb
sub
mov
pop
jae
les
repz
push
mov
les
mov
mov
cmp
or
add
add
shlb
and
mov
dec
icebp
data16
jb
enter
stos
popf
das
loope
pop
mov
lcall
int
fidivl
add
add
adc
xchg
out
pop
ret
call
fldcw
xor
cmp
inc
xchg
xor
adc
xchg
pop
stc
add
imul
aam
push
nop
jl
movsl
sub
test
sbb
insb
add
add
in
lret
cmp
xchg
cmp
daa
mov
ja
xchg
xor
add
mov
mov
add
add
add
sub
rorb
xchg
pop
sbb
cmp
lcall
notl
mov
lcall
and
mov
mov
jmp
scas
adc
add
jecxz
js
mov
sub
add
add
adc
inc
popf
out
xor
mov
fisttpl
pop
mov
and
add
add
xchg
out
fcompl
cmp
sub
pop
andl
add
xlat
push
jge
xchg
leave
lret
jg
pop
sbb
mov
and
mov
clc
push
adc
ljmp
pop
inc
add
lahf
lcall
nop
push
scas
lods
mov
add
add
das
leave
mov
sub
push
sti
sbb
sahf
idivb
pop
imul
dec
add
repz
or
add
add
cwtl
cmp
pop
stos
mov
push
popf
sarl
inc
add
clc
mov
mov
movsl
aas
add
mov
add
clc
mov
mov
jge
pushf
pop
xor
insb
add
in
jbe
lods
jnp
js
mov
add
lock
icebp
push
gs
mov
dec
aam
sub
repnz
rolb
enter
les
adc
jg
dec
add
addl
popf
xchg
mov
outsb
push
and
mov
xchg
insb
add
add
jge,pt
xchg
call
inc
cmp
pop
insb
add
cmp
jno
loopne
add
or
cmpsb
inc
add
jae
arpl
gs
mov
mov
loope
dec
pop
in
mov
add
std
decl
pushf
aam
and
jns
test
add
add
xor
neg
nop
jno
inc
add
add
mov
jne
cmpsb
push
ljmp
add
das
push
push
add
dec
and
add
add
add
and
fdivs
outsl
out
imul
nop
xor
rorb
lock
jb
imul
add
ret
mov
add
add
mov
add
pop
outsl
inc
mov
pop
sahf
imul
pop
add
add
mov
add
add
jo
and
sub
rcrb
sbb
and
out
mov
js
pop
xor
mov
fadd
sbb
mov
insl
fildll
lret
mov
addr16
or
add
add
loop
loope
jb
add
add
inc
inc
add
add
add
addr16
sbb
mov
jno
cmp
xchg
cmp
push
pop
in
iret
pushf
pushf
mov
mov
imul
addr16
mov
add
movsb
lds
sub
stos
sub
jae
ret
and
add
add
js
mov
mov
das
push
push
pop
cli
add
mov
sub
hlt
mov
sbb
ret
pop
pop
fidivrl
imul
aad
les
das
das
lret
add
stos
icebp
mov
sti
lods
add
add
add
add
add
mull
inc
cli
ret
xor
pop
rcll
pop
and
mov
jne
add
fwait
mov
fnstenv
inc
int
xchg
inc
add
add
enter
jnp
jmp
or
add
add
jae
mov
sti
sbb
lcall
shrl
fldlg2
test
scas
cmp
pop
out
mov
aas
test
add
add
lods
and
mov
outsb
gs
fisttps
jae
cmpsl
sbb
push
xor
insb
add
addr16
dec
test
addl
mov
sub
add
fdiv
pop
aad
inc
mov
push
xor
jns
add
out
rcrl
cwtl
push
jmp
outsb
adcb
add
mov
push
xchg
aam
fistpl
xchg
or
push
imul
mov
push
xor
inc
add
add
mov
and
mov
or
add
add
xor
add
inc
xor
mov
sbb
push
push
test
add
add
es
cmpsl
out
aas
and
add
add
je
pop
or
mov
add
add
mov
sub
mov
addr16
sbb
add
add
add
dec
pushf
repnz
cli
or
xor
stos
mov
cld
cmp
jg
js
add
mov
mov
jmp
int3
dec
addr16
xchg
scas
dec
pushf
jns
in
mov
xchg
push
clc
inc
int
ret
mov
add
add
fcoml
push
mov
out
hlt
mov
pop
dec
arpl
inc
add
add
add
add
sub
cltd
jnp
sar
popf
pop
xor
pop
test
pop
push
lea
arpl
dec
adc
jp
outsl
and
test
add
add
add
xor
sti
fisubs
add
lret
lahf
out
in
mov
xchg
or
add
or
mov
push
mov
dec
add
jne
add
movsb
xor
outsb
dec
mov
test
sti
pop
jns
lahf
dec
cmovge
mov
cmpsb
mov
mov
jmp
ss
mov
inc
ds
add
mov
add
inc
incl
sbb
pop
mov
jno
inc
xchg
xor
mov
int3
xor
call
xchg
pop
popa
aam
dec
cmp
leave
mov
nop
shll
out
out
xchg
stos
xchg
cli
xchg
lea
mov
pop
or
rcll
sbb
adc
cmpsl
and
mov
pop
vmovhps
add
add
fwait
rorb
add
jmp
add
insb
add
mov
add
pop
icebp
fsts
addb
mov
cmp
add
stc
sub
pop
fimull
mov
push
sub
push
aam
mov
add
test
push
sbb
jo
es
dec
add
adc
add
in
pop
mov
in
add
add
inc
inc
jae
add
add
negl
jl
aaa
cmp
push
rcll
xor
jno
fst
data16
sub
pop
inc
fwait
hlt
ja
add
add
push
or
mov
xor
sub
mov
rcll
clc
test
mov
les
add
xchg
mov
mov
ret
adc
cmc
loop
xor
shll
mov
aad
imul
xlat
cltd
sbb
lret
mov
movsl
mov
lds
mov
add
add
mov
lahf
out
fcoms
lcall
fiaddl
push
sbb
add
add
insl
gs
add
add
cmp
jl
movsb
adc
add
lock
dec
roll
push
xor
pop
iret
adc
fistps
repz
mov
test
xchg
stos
push
cmp
sub
js
movsb
pop
pushf
sbb
cmp
add
das
fwait
arpl
call
mov
loope
jmp
jmp
popa
je
daa
add
fistps
shrl
mov
add
mov
cmp
ret
or
cld
pop
cld
push
mov
add
add
adc
or
add
add
lods
cld
daa
enter
aas
sbb
rcll
aam
adc
loop
repnz
jmp
add
jno
test
mov
xor
xchg
xchg
js
or
add
add
stos
adc
add
add
add
or
mov
icebp
jp
add
add
inc
outsl
incw
andb
mov
popf
mov
add
add
mov
cwtl
mov
jb
pop
and
mov
add
add
push
pushf
xchg
push
adc
jae
sub
enter
add
lahf
mov
xchg
mov
cmp
hlt
mov
add
mov
dec
fstps
arpl
xchg
add
add
add
aas
loope
add
add
shll
mov
mov
cwtl
xor
sub
jmp
cltd
imul
sub
add
negl
mov
and
mov
inc
jg
mov
ret
xchg
adc
ds
jmp
test
add
mov
ljmp
jae
ds
xlat
add
add
add
mov
cli
popf
popa
stos
fisubs
mov
jp
xchg
call
add
inc
push
pop
ljmp
sbb
lock
ficoml
lock
add
add
int
lods
pop
push
bound
and
dec
mov
ja
rorb
ret
sbb
add
add
lahf
test
inc
dec
cmc
xchg
movsl
add
push
rclb
pop
mov
dec
mov
dec
pushf
jbe
cmp
adc
add
xor
fwait
jmp
push
and
mov
out
add
mov
loop
add
jb
roll
cmpsb
ss
jecxz
aam
and
shrb
mov
inc
imull
add
jmp
add
xchg
mov
sahf
push
enter
stc
adc
inc
add
add
mov
inc
insl
mov
jbe
ds
cwtl
lea
add
nop
push
std
aaa
shl
cmp
fnsave
push
movsl
repnz
mov
add
mov
sub
add
add
shlb
add
incb
das
mov
jo
push
dec
sbb
add
add
pop
mov
add
add
or
mov
lret
pop
mov
add
add
pop
and
mov
add
cmp
cltd
cltd
or
mov
mov
add
or
add
add
pushf
sahf
movsl
adc
cmp
xor
jp
add
and
mov
jl
shlb
les
pop
loop
push
ljmp
sbb
ja
sub
add
xchg
jge
and
add
mov
or
xchg
pop
adc
xchg
dec
negl
cmpl
add
add
mov
fidivrs
bound
mul
pop
sub
xor
jl
mov
repz
inc
xor
rcr
cld
and
mov
and
mul
dec
mov
xchg
pop
rcrl
outsb
add
add
add
gs
sub
push
jmp
ret
mov
pop
jns
xchg
mov
scas
cs
sar
sti
sub
add
add
add
add
dec
adc
push
imul
mov
add
cmp
daa
add
add
or
mov
add
add
nopl
mov
cmp
pop
pop
jg
sub
fistl
xchg
cltd
mov
xor
mov
ret
cwtl
cmpsl
inc
add
add
out
test
add
test
push
into
mov
pop
jp
mov
or
add
cltd
std
aas
pop
scas
cmp
pop
mov
test
das
sbb
stos
jl
lods
je
inc
xchg
xchg
sbb
pop
aaa
or
add
add
mov
sbb
popf
lcall
and
mov
fisubl
mov
vmread
push
in
jb
insb
add
insl
ja
mov
cmp
or
add
add
jnp
dec
testl
add
cld
mov
add
add
add
add
and
add
add
fsubrs
add
call
mov
add
imul
mull
jp
je
cmpsl
sub
add
add
ljmp
enter
push
mov
dec
add
lahf
jns
lock
push
or
add
add
add
add
movsb
pushf
or
inc
pop
mov
jno
and
add
mov
jge
mov
leave
outsb
dec
push
push
add
ret
and
or
add
and
icebp
adc
add
loop
inc
ficoml
in
pop
js
jg
bound
jo
test
mov
scas
mov
cmp
cmp
add
lret
add
add
fchs
xchg
inc
push
in
int
add
pop
xor
sbb
cmc
out
pop
lret
push
outsl
insb
add
lahf
mulb
xlat
pop
inc
push
sub
lods
ret
es
sbb
pop
or
add
add
add
dec
sbb
mov
mov
test
dec
sarl
mov
das
inc
add
add
adc
inc
xor
add
mov
jno,pn
rcll
mov
lods
xor
mov
jge
cmp
add
add
mov
bound
pop
repz
mov
shrl
add
aam
mov
mov
add
push
fdivl
add
add
adc
mov
vorps
add
std
rcrl
jno
fxch
call
mov
add
jae
call
mov
fwait
and
iret
dec
add
add
adc
jnp
add
add
aam
fst
and
mov
add
add
scas
xor
sbb
das
lret
test
and
cli
push
pop
loop
std
pop
jns
push
mov
cmp
adc
sub
mov
add
add
push
cmpsb
xchg
add
orl
cmpsb
push
sbb
pop
or
mov
mov
fmull
push
inc
fscale
push
out
and
mov
ret
xchg
or
xor
adc
insb
add
add
inc
push
mov
orl
das
sbb
xchg
stos
test
jne
sar
in
jle
or
add
add
cs
mov
dec
lret
movsb
cs
lods
jae
xchg
mov
int3
xor
clc
pop
sbb
add
add
cmp
sar
mov
sar
add
add
mov
ss
push
pop
pop
mov
sub
mov
mov
or
mov
xchg
mov
stos
ds
jg
pusha
add
add
clc
insl
sub
test
movsb
jae
inc
push
mov
dec
add
add
flds
stos
fisubl
test
imul
add
and
add
add
movsb
out
or
call
add
dec
aad
add
add
out
sbb
xchg
push
pop
sti
sub
mov
add
add
pop
lods
fidivl
sub
dec
add
add
in
popa
pop
pop
add
add
mov
mull
dec
mov
add
icebp
aas
out
mov
mov
addr16
push
gs
mov
gs
movsb
aas
sahf
push
sbb
sbb
inc
js
cmp
popl
jmp
loope
xor
sub
mov
mov
add
jb
dec
pushf
push
frstor
and
add
mov
add
into
mov
rcll
push
pop
mov
cmp
sbbl
lahf
and
add
add
add
mov
mov
pop
adc
jnp
in
movsl
cmpsl
int
lds
cltd
mull
add
add
mov
in
dec
add
xor
jae
mov
outsb
cltd
cwtl
aam
testl
xchg
cmc
les
mov
int
add
add
add
add
add
sbb
in
movsb
nop
aas
movsb
mov
arpl
test
inc
in
les
add
movsb
sub
sbb
daa
in
and
mov
or
ficoms
push
cmp
hlt
cmc
inc
popa
dec
inc
lret
jle
and
lahf
inc
stos
outsb
fcompl
xchg
iret
push
push
fiadds
lods
aas
inc
mov
insb
add
cld
inc
pop
xor
mov
pop
push
sbb
mov
adc
lcall
add
mov
mov
jbe
cmpb
cmpsb
mov
mov
add
aad
pop
icebp
xchg
sub
hlt
shlb
stos
mov
cmp
xor
sbbb
add
insl
sbb
add
add
mov
pop
cmp
mov
add
and
cld
popf
mov
mov
lods
push
inc
xchg
sub
mov
xor
pop
mov
cli
rcr
mov
call
aas
add
add
add
ss
jne
sub
mov
lds
clc
cwtl
push
jnp
js
xor
add
dec
xchg
pusha
add
add
mov
sti
cs
pop
xor
imul
mov
ror
stos
ret
jae
repz
sub
cwtl
add
cmpsb
push
pop
or
mov
xor
fiadds
mov
sub
ret
repnz
adc
and
jmp
fdivrs
cwtl
xor
inc
push
jg
insl
cli
fimull
add
xchg
pop
dec
jns
je
dec
add
add
or
repz
xor
add
cmp
mov
sbbb
push
sub
add
add
addl
jae
mov
andl
pop
or
add
adc
add
add
mov
add
add
mov
daa
andl
lcall
inc
pop
cmp
jmp
and
movsl
cmp
cmc
xor
daa
jecxz
inc
cmp
jbe
dec
lahf
or
mov
call
shlb
in
and
lea
popf
dec
add
mov
data16
mov
insb
add
add
sub
add
dec
pop
and
add
add
xchg
push
dec
add
jp
add
fcoml
add
cmp
std
pop
cmc
mov
out
fcmove
or
push
cmc
ret
rolb
add
stc
sub
xchg
popa
or
add
add
out
jae
mul
pop
mov
sbbb
je
addb
add
scas
negl
cmp
add
add
or
movsl
out
xchg
add
mov
add
add
jae
iret
rolb
jp
push
adc
hlt
mov
movsb
fcmove
div
out
jae
cwtl
inc
jne
mov
dec
div
dec
mov
cmp
push
mov
shll
and
xchg
push
or
mov
lods
icebp
xchg
add
stos
pop
call
mov
arpl
add
add
or
mov
or
mov
andl
push
or
jno
push
popf
push
shrl
sti
in
out
or
js
add
mov
inc
sbb
inc
or
xchg
and
mov
mov
adc
mov
lahf
mov
xchg
jmp
fidivrs
lcall
dec
add
add
mov
adc
lock
fcomps
xor
mov
xor
bound
popa
mov
out
inc
add
imul
mov
add
add
add
add
add
or
std
psrad
xor
and
inc
adc
ljmp
jns
xchg
push
jmp
nop
rcll
dec
jmp
jno
data16
add
add
sub
add
add
aad
dec
cli
cmc
ffree
sbb
mov
lret
mov
xor
lret
cmpsl
in
mov
test
xor
icebp
dec
add
add
sarb
xchg
mov
and
ret
subb
jmp
dec
mov
mov
mov
add
jne
sbb
lahf
pop
nop
stos
scas
cltd
into
adc
cs
fcmovbe
outsl
pop
pop
rorb
lds
jg
int
inc
in
mov
ds
rcl
mov
lcall
mul
lock
jle
adc
push
dec
add
mov
pusha
add
outsb
notb
loope
add
add
xorb
or
xor
jns
jne
inc
stos
sti
div
bound
lds
mov
add
add
add
popl
add
add
jmp
dec
add
sahf
mov
pop
mov
filds
loop
add
add
dec
and
mov
xchg
ret
in
push
subl
add
call
leave
xlat
mov
cmp
dec
add
test
inc
fidivrl
imul
outsb
test
push
and
jecxz
imul
mov
add
add
push
je
add
adc
add
ret
xchg
clc
jo
sahf
xlat
add
add
cmpsl
add
add
add
dec
jmp
test
lret
aaa
pop
fwait
lcall
and
cmc
test
in
decl
add
add
add
mov
add
jecxz
add
add
lcall
add
cmpsl
mov
leave
sbb
sbb
imul
add
mov
add
scas
push
hlt
or
jp
cmc
add
mov
lods
adc
pop
jne
lods
ret
push
and
or
add
add
dec
nop
adc
pop
dec
imul
mov
dec
sub
add
add
jmp
mov
mov
xlat
jo
cli
mov
dec
cmp
dec
pop
aas
nop
jp
outsl
xor
jmp
add
mov
lods
fwait
sub
mov
add
add
add
lea
add
cmp
aaa
inc
cmp
inc
dec
cmp
jl
and
fsubs
sbb
cmp
lret
sub
mov
add
dec
mov
jo
xchg
lea
lds
jg
jb
push
dec
loope
xor
test
mov
add
pusha
add
push
mov
add
sub
icebp
rcrb
mov
add
add
jmp
fidivl
or
xor
add
add
sub
add
mov
sub
add
add
and
mov
lods
push
pop
cmovne
adc
sbb
rclb
add
add
loopne
test
add
fwait
sub
mov
xchg
mov
test
shll
add
add
out
mov
mov
lahf
aad
add
sti
mov
aam
inc
jg
das
adc
pushl
scas
aas
mov
loopne
mov
xchg
mov
cmp
jge
popa
enter
or
add
add
add
or
out
add
add
hlt
negl
pop
cmp
or
mov
mov
push
hlt
cmp
jmp
movsb
mov
rorl
mov
cmp
mov
cmc
cmp
mov
pop
inc
call
push
push
fmuls
add
add
mov
cmc
in
sub
ftst
je
lods
ja
pop
lcall
lea
aam
js
jnp
stos
jno
dec
adc
add
push
adc
push
and
add
add
add
jae
adc
add
mov
push
cmc
outsb
insl
mov
mov
out
xor
jmp
add
lret
imul
aas
adc
lods
sbb
add
movsl
adc
add
mov
add
add
scas
lods
pop
push
jg
adc
pop
sbb
add
sbb
add
mov
jne
lods
addr16
xchg
or
add
add
pop
cmp
push
push
xor
dec
mov
loop
lahf
jb
jle
cld
insb
add
add
pop
inc
add
add
add
js
int
and
mov
lret
jnp
add
xlat
ss
scas
mov
mov
xchg
lea
ljmp
add
daa
lret
cltd
push
mov
jecxz
mov
push
rcr
cmp
and
add
add
mov
jo
scas
leave
out
pop
mov
add
or
fstpt
ljmp
lret
ss
mov
xchg
shll
and
popa
inc
add
imul
test
in
pop
dec
lcall
adc
and
mov
mov
add
add
notl
jl
mov
xchg
hlt
or
cmp
mov
bound
mov
xor
mov
and
test
add
add
jge
add
shlb
or
insl
xor
iret
dec
lahf
repz
add
or
or
add
add
and
mov
int
inc
insl
sub
xchg
jmp
psadbw
jbe
dec
mov
fistpll
mov
mov
inc
jnp
loopne
add
data16
movsl
inc
addr16
adc
imulb
push
mov
pop
aad
imul
mov
jl
mov
pushf
into
les
mov
add
add
test
movsl
nop
mov
xchg
cmp
rorl
imul
mov
add
add
mov
shrb
adc
push
cwtl
mov
lods
cwtl
mov
daa
push
clc
pop
and
mov
mov
mov
stos
and
jns
dec
add
add
scas
adc
notb
xchg
dec
outsb
ljmp
imul
inc
cmp
cmp
add
mov
xor
add
inc
sub
movsl
adc
test
add
mov
and
add
add
dec
aas
js
inc
ss
inc
ret
repnz
add
add
add
stos
fcmovu
in
rcll
ja
mov
mov
dec
add
add
leave
hlt
pushl
add
add
daa
sahf
lea
sub
mov
inc
divb
xor
int
rcll
add
sti
movsl
fwait
adc
sbb
xor
add
push
cs
add
add
bound
mov
lahf
shll
add
sub
aas
mov
add
pop
in
pop
shrl
jp
adc
adc
add
add
add
add
add
pop
shrb
xor
lahf
mov
add
add
add
in
aam
in
dec
js
rsqrtps
cmpsb
dec
cli
out
int3
sub
mov
lods
inc
pop
push
pop
xor
jnp
jo
xchg
and
rcr
testb
add
mov
dec
add
add
xchg
leave
arpl
xchg
add
lock
enter
cmp
sbb
mov
add
add
pop
mov
pop
push
inc
sbb
add
add
mov
or
push
outsl
pop
jbe
dec
insl
pop
loope
imul
add
add
jbe
lock
scas
xor
push
pop
out
dec
jecxz
lock
pop
outsl
mov
mov
or
add
add
add
add
add
cli
adcb
cli
ljmp
add
add
test
mov
jge
sbb
add
add
lahf
push
iret
xchg
popa
outsb
or
into
push
lock
pop
pop
add
add
add
loopne
add
gs
dec
out
aam
mov
in
rcl
int
aad
push
test
jns
inc
jle
into
mov
dec
lret
mov
pop
inc
icebp
movsl
mov
gs
in
mov
mov
jne
pop
xchg
add
or
mov
xchg
pusha
add
test
lret
inc
add
add
inc
pop
fimuls
outsb
jle
pop
or
add
add
stos
and
mov
xor
add
add
push
or
roll
subl
add
add
jbe
push
mov
jnp
jns
mov
mov
sub
sbb
jmp
pop
in
cmpsl
sub
add
add
add
ret
cmp
xlat
push
loopne
cmpsl
xchg
out
nop
jmp
sbb
push
xchg
ljmp
inc
add
test
movsl
movsl
cmpsb
loope
push
add
add
add
cmpsl
ret
out
xor
sbb
add
loop
push
idivl
mov
lock
mov
imul
fnstcw
lods
adc
add
add
mov
mov
pop
imul
cmp
add
sub
add
add
mov
popl
add
add
scas
cwtl
pop
std
into
jo
cmpsb
pop
xor
repnz
xchg
mov
aas
xchg
push
inc
addr16
xchg
lock
ljmp
inc
jge
ret
mov
mov
mov
pop
je
or
jl
outsb
jno
ret
sbb
cmpsb
inc
xchg
xchg
scas
sbb
cs
xor
jns
add
add
add
jmp
sub
icebp
push
int
ss
andl
es
mov
insl
xchg
and
mov
xor
sbb
inc
xlat
mov
lea
bound
add
jno
pusha
add
add
stos
ret
add
add
pop
popf
movsb
in
sahf
inc
sar
xor
mov
add
rorl
add
pop
imul
jne
jb
rorl
test
xor
jnp
ja
sub
jns
adc
mov
push
test
mov
add
sarb
cli
stos
in
mov
dec
shlb
mov
add
add
lods
jp
cmpsl
xor
cmp
sub
mov
sub
or
add
add
push
mov
test
jne
dec
add
cmp
lret
add
ds
mov
mov
add
jae
bound
fstps
sub
aam
and
push
add
add
bound
orl
out
pop
aaa
lret
pop
mov
xor
leave
call
push
mov
aam
sub
add
add
aas
fcoms
add
add
add
or
gs
add
add
and
std
xlat
subb
mov
push
or
jmp
stos
loop
aad
xchg
mov
mov
cmp
inc
inc
add
add
shrl
add
add
xchg
jmp
push
into
sahf
cs
mov
ja
jae
cmp
ret
sahf
stc
mov
mov
dec
add
add
adc
pop
xor
or
mov
cld
rcrb
stos
and
add
add
xor
mov
cmp
sub
pop
mov
xor
xchg
and
mov
lahf
pop
int
push
ret
fldl2e
fiadds
and
faddl
add
add
mov
hlt
ja
push
imul
mov
addb
mov
mov
out
into
int
and
add
add
mov
adc
add
add
scas
scas
daa
scas
fldpi
adc
repnz
mov
jns
aaa
inc
lods
xchg
xlat
adc
add
xor
stos
add
add
add
leave
push
clc
pushf
test
sarl
scas
ds
cli
pusha
add
add
sbb
sub
add
hlt
outsl
sub
jl
add
sti
jno
dec
fwait
jmp
xor
push
add
add
xlat
int
push
adc
pop
fsub
out
mov
mov
xor
stc
or
jecxz
test
add
inc
push
les
push
push
inc
pop
rcll
sub
add
add
sub
add
add
outsb
mov
jl
mov
add
cmpsl
enter
add
sub
mov
adc
fsts
mov
dec
add
add
add
rorl
pop
repnz
outsl
push
cmp
daa
addl
gs
daa
or
push
mov
add
add
movsb
sbb
lahf
inc
test
and
mov
in
fwait
out
test
add
adc
incb
add
xchg
sti
adc
sbb
mov
xor
cmp
arpl
or
aad
popf
dec
add
add
es
out
dec
add
add
insb
add
add
enter
add
add
outsb
and
gs
jle
add
add
aam
outsl
pusha
add
add
mov
add
sar
arpl
or
mov
adcb
sbb
fimull
dec
mov
xchg
push
ja
add
add
lahf
mov
jb
cld
jp
ljmp
push
in
lret
aas
pusha
add
add
insb
add
je
add
popf
jbe
sbb
or
scas
push
mov
push
fildl
inc
imul
test
xchg
loopne
out
sub
out
mov
push
arpl
cmc
mov
outsl
js
jmp
jnp
gs
or
mov
adc
out
cld
mov
insl
sahf
push
add
push
and
add
add
dec
add
add
aad
outsb
ret
sub
add
add
add
sub
mov
xchg
sarl
push
outsb
into
sahf
negb
imul
add
add
xchg
adc
add
add
xlat
jp
std
cltd
popf
imul
add
mov
cmpsl
mov
in
dec
cmp
mov
dec
xor
add
add
inc
add
add
jae
ret
aam
mov
adc
inc
int
or
jle
fcomps
push
shlb
push
dec
and
insb
add
add
jne
add
xchg
cmp
sub
push
jge
cmp
pop
dec
sub
mov
mov
pop
cmc
push
adc
xor
xchg
push
daa
pop
cmp
fwait
pop
pop
testl
xchg
movsb
mov
pop
iret
push
sub
add
jg
inc
or
mov
outsb
pop
or
add
add
and
stos
and
mov
pop
sbb
dec
mov
icebp
cwtl
inc
shlb
stc
sbb
push
imul
push
pop
xchg
pop
icebp
jg
in
int
scas
cs
clc
xor
lods
push
jge
stos
push
test
add
add
test
pop
and
ret
ss
pop
int
add
sbb
outsl
testl
pop
dec
sti
push
je
insb
add
add
mov
lea
sub
mov
xor
xor
jecxz
xchg
idivb
xchg
iret
mov
pop
cmpsb
or
adc
lahf
lock
xchg
lods
xor
ret
push
pop
sub
test
mov
out
cwtl
pushf
xchg
add
add
js
mov
add
add
rcrl
stos
pop
push
cs
inc
shl
roll
mov
mov
inc
mov
xchg
lds
xchg
loope
adc
aas
int3
jp
cmc
movsb
ror
fisubrs
adc
mov
jge
cs
out
faddl
add
add
aas
aad
dec
lcall
test
enter
add
add
jmp
arpl
mov
paddsw
add
add
add
mov
add
push
mov
sahf
sbb
sub
add
lods
jmp
test
inc
sbb
mov
mov
addr16
or
hlt
inc
xchg
inc
add
add
jmp
cmp
add
add
loop
push
push
jns
mov
lock
xchg
ja
push
gs
xorl
imul
mov
add
add
push
shlb
push
push
inc
add
add
sub
jnp
add
add
add
sbb
les
inc
xchg
int3
out
sahf
add
ss
mov
loopne
mov
lea
jle
mov
mov
insl
pop
test
add
add
addb
lea
jb
sub
mov
fisubrs
dec
je
mov
loope
or
pop
xchg
xchg
pop
xchg
aaa
add
sub
mov
rcl
push
or
test
add
mov
add
cmp
add
add
jg
arpl
push
aaa
inc
shl
adc
add
add
call
jmp
mov
xor
call
add
mov
pop
aam
outsl
cld
xchg
in
enter
add
mov
mov
in
jecxz
cmp
jmp
fucomp
mov
lret
out
dec
add
mov
add
add
add
add
add
add
mov
pop
dec
outsl
pop
test
int
ss
add
add
mov
int3
mov
mov
jne
sbb
sub
push
mov
mov
pop
clc
push
push
mov
jge
inc
add
add
xchg
sub
mov
movsl
enter
lock
jecxz
scas
addr16
mov
jl
add
xchg
lods
and
xchg
mov
ja
push
or
mov
cmp
cmp
adc
mov
fdivrl
out
loope
fwait
push
mov
pop
or
xorl
pop
pop
lcall
mov
cmp
scas
cmp
aad
mov
jg
aas
insb
add
push
je
push
das
push
or
arpl
and
mov
ljmp
inc
add
imul
pop
hlt
add
out
lret
push
pop
dec
call
cmp
daa
cmc
and
mov
add
add
push
int3
int
scas
insb
add
add
add
mov
mov
add
add
mov
xor
es
out
push
inc
push
mov
jmp
add
jge
mov
add
dec
sub
add
mov
imul
add
shll
add
add
cmp
mov
test
add
add
mov
add
mov
and
add
add
push
jne
je
insb
add
add
mov
add
add
ss
add
lret
loopne
mov
add
push
loopne
mov
mov
mov
ljmp
add
push
push
lcall
push
out
push
cmp
cltd
stos
les
add
add
and
mov
sbb
xchg
push
outsl
mov
pop
and
add
icebp
and
push
and
mov
pop
mov
inc
out
insb
add
add
call
cwtl
sbb
test
stc
cmp
ds
addb
xor
out
das
shl
shrl
in
add
add
add
jle
cmpl
call
ja
mov
xchg
fnstenv
cmp
pushl
iret
adc
and
add
add
mov
cwtl
sbb
add
add
nopl
push
pop
mov
loopne
add
mov
add
fcomi
leave
daa
jnp
outsl
push
into
pop
sub
add
roll
sbb
lods
lds
fistpl
fisubrl
test
sub
add
add
mov
pop
push
mov
push
sub
add
add
mov
sub
js
mov
adc
add
and
pop
jg
mov
adc
push
iret
div
outsl
fstl
push
jmp
dec
sahf
sub
call
add
xor
add
and
add
add
test
adc
push
xor
adc
xor
lahf
mov
inc
or
add
cs
push
aam
es
add
add
add
mov
or
bt
xorl
outsl
mov
in
jge
into
es
push
xor
dec
sbb
push
sarb
and
mov
mov
or
lea
mov
cmp
sub
out
outsl
pusha
add
cld
rolb
inc
daa
rorl
test
sbb
out
std
dec
and
fnstcw
xor
movsl
dec
cld
mov
loope
cwtl
fwait
pop
add
mov
out
aas
mov
xlat
sahf
cmp
add
or
cltd
pusha
add
add
cmpsl
ficoml
add
xchg
stos
cs
not
js
mov
cmp
fadd
pop
xlat
cs
scas
jno
mov
and
add
add
add
outsl
rol
loopne
lea
xchg
inc
add
mov
add
jge
xor
mov
and
loope
dec
sbb
les
ljmp
add
or
maxps
fstps
lea
inc
add
sti
mov
cmp
js
xchg
out
xor
int
mov
xchg
push
xchg
loop
subb
pop
std
mov
push
dec
ss
add
mov
cwtl
add
lret
pop
push
sub
add
add
add
add
mov
jbe
xchg
push
loopne
add
sub
mov
sbb
mov
push
inc
insb
add
add
xchg
push
add
cmp
imul
pop
mov
mov
bound
add
add
lret
push
gs
popa
addr16
mov
or
add
add
mov
xchg
cli
adc
add
add
cmp
addr16
cs
adc
filds
dec
add
add
lahf
inc
jle
mov
jnp
dec
int
js
aad
leave
ja
jle
int
out
xchg
add
cmp
add
jg
mov
jae
imul
aas
push
imul
popw
add
test
mov
sbb
sbb
mov
add
lahf
mov
mov
add
add
pop
shll
insl
in
mov
cwtl
dec
mov
push
xor
scas
popa
dec
repz
jecxz
ret
sbb
add
mov
or
pop
push
jmp
movsb
cltd
insb
add
mov
xchg
test
sbbl
clc
jno
cmpsl
jbe
mov
cmpsb
lods
rcll
sub
mov
pop
outsl
lods
and
mov
cmp
mov
add
mov
rclb
stc
test
js
adc
icebp
adc
cmpb
add
sub
mov
call
add
sti
pop
int3
sti
lret
cmp
dec
or
mov
xor
push
xchg
jle
adc
loope
in
pop
outsl
int3
mov
add
lret
in
xchg
cmc
clc
insb
add
add
or
add
or
mov
mov
jb
jl
jno
and
andl
stos
cmp
sti
nop
adc
lds
mov
xor
cwtl
xchg
mov
test
lcall
shl
cmp
gs
clc
xchg
add
add
add
outsb
iret
cmp
rclb
dec
mov
add
add
add
lods
pop
stc
fcompp
inc
dec
mul
or
mov
xchg
scas
test
cs
pushf
insb
add
iret
or
add
ret
call
mov
out
mov
cmp
or
pop
test
call
lods
mov
mov
jp
jmp
out
out
sti
loopne
adc
xchg
push
xchg
add
fistps
mov
mov
fcmovne
divl
aaa
repz
test
dec
test
pop
jnp
add
stos
jne
int3
mov
add
jle
jns
jg
movsl
push
out
adc
add
add
leave
adc
xorb
insb
add
add
push
jmp
jecxz
xchg
fsincos
cmp
mov
dec
add
add
sbb
mov
xchg
in
shrl
add
mov
xchg
ljmp
mov
test
mov
push
cmpb
cmp
and
xchg
int
lret
mov
out
mov
add
xchg
mov
or
mov
xchg
add
aas
jno
mov
xchg
xor
adc
and
mov
jbe
or
in
imul
mov
out
out
add
mov
andl
sbb
jo
pushl
movsl
into
daa
js
daa
jmp
mov
add
mov
jae
mov
fwait
stos
call
imul
sbb
cmp
out
out
mov
cld
in
cmp
xor
add
add
rclb
mov
xchg
inc
add
add
mov
imul
push
dec
add
add
ja
scas
loop
hlt
lret
jo
sub
addl
xchg
mov
shlb
adcl
add
xchg
add
mov
mov
outsb
std
xchg
test
and
inc
sub
mov
sbb
or
xchg
pop
jge
add
test
pop
ja
push
fldcw
add
add
arpl
pop
rclb
in
cld
and
mov
aam
jg
insl
fstpl
cmpsb
sbb
sbb
aas
cmp
lock
mov
cwtl
movsb
scas
ja
ss
ret
sub
inc
cmp
add
add
add
inc
in
test
add
dec
inc
mov
les
mov
cld
out
jns
or
mov
push
ret
and
mov
mov
mov
xor
add
lahf
stos
cmp
add
dec
add
add
out
mov
mov
aam
xchg
dec
fidivrs
addb
inc
add
in
orb
jmp
add
mov
mov
jmp
adc
stos
pop
pop
lea
jbe
xor
cmpsl
jmp
jb
sbb
out
and
arpl
push
jnp
add
xor
or
cs
cmp
add
ja
mov
add
mov
cmp
dec
addr16
call
push
mov
ss
dec
inc
mov
hlt
int3
jno
pop
or
mov
cltd
je
add
sbb
test
jl
sbb
xchg
or
add
jo
add
add
outsl
iret
gs
xchg
cmp
add
mov
in
dec
push
roll
mulb
rep
adc
or
lahf
jmp
and
popa
mov
add
jb
mov
test
in
scas
in
pop
dec
jp
cmp
add
mov
jl
inc
xor
push
inc
scas
mov
push
fnstsw
xchg
cmpsb
push
loope
leave
imul
adc
jbe
adc
add
add
and
cmp
add
add
mov
mov
cli
fstpl
dec
add
mov
loop
push
lea
sub
dec
icebp
mov
cmp
add
outsl
mov
add
fdivrl
ss
add
add
pop
shl
nop
nop
dec
andb
add
insl
add
add
cmpl
add
add
or
mov
mov
add
add
fdivrs
outsb
fcmovu
das
jp,pn
punpckhdq
into
popf
jnp
xchg
add
add
add
pop
call
cli
inc
fdivrl
sbb
mov
add
idivl
mov
in
xorb
push
ja
in
enter
aas
xchg
or
mov
add
stos
adc
xor
mov
into
cmp
add
inc
push
xor
xlat
notl
add
xchg
adc
or
loopne
dec
and
pop
mov
test
pop
call
jl
mov
cmpsb
xchg
cmpsb
dec
mov
xchg
iret
cs
pop
inc
cmpsb
inc
mov
add
pop
lea
in
sbb
outsb
jo
and
xor
btr
add
fidivrl
jle
adc
sub
mov
lea
daa
add
into
int
xor
pusha
add
stos
sahf
lock
add
add
xor
push
push
shll
fldl
add
add
shr
xlat
jns
adc
mov
add
add
mov
popf
fnstenv
add
xchg
add
add
add
adc
mov
xchg
std
sbb
add
lret
inc
inc
loope
or
push
shlb
add
add
sbb
test
cmpb
mov
adc
nop
xor
cwtl
push
aas
std
int
jge
or
loopne
es
fsubl
out
out
dec
mov
roll
add
add
mov
pusha
add
add
push
out
add
jne
or
add
scas
imul
push
loop
lcall
int
mov
add
outsl
and
sti
xchg
cs
sbb
imulb
icebp
cli
enter
leave
add
mov
add
mov
inc
add
cmpsb
in
xchg
aad
rcl
ss
mov
cs
movsl
mov
call
inc
rcl
ljmp
pop
inc
add
adc
addr16
es
popf
stos
jp
ret
outsb
add
add
add
pop
int3
jge
call
add
add
dec
add
mov
cwtl
adc
push
sbb
hlt
jle
movsb
std
push
mov
jne
push
aam
mov
add
add
aaa
adc
or
adc
sbb
push
push
cli
cmpsl
sub
int3
cltd
dec
loopne
and
in
and
or
mov
and
mov
xorb
pop
gs
inc
mov
add
sti
fldenv
loope
outsl
sbb
push
xchg
hlt
mov
mov
add
psraw
add
add
sti
fsub
mov
add
add
add
popf
xchg
mull
add
pushf
push
insb
add
test
mov
in
inc
add
add
sbb
leave
jle
pop
je
mov
push
or
add
add
mov
or
add
add
cmpsl
xchg
jg
dec
mov
or
je
or
mov
add
add
adc
push
in
or
add
add
pinsrw
out
xchg
push
js
outsl
fbld
push
in
push
fstps
iret
inc
push
test
add
repz
cmp
add
add
add
sbbl
xlat
jb
mov
jg
xchg
pop
movsl
or
mov
loopnew,pt
pop
in
mov
mov
push
cbtw
into
or
add
sarl
repz
cmpsl
cmp
jl
add
inc
add
add
xchg
sbb
xor
fstps
jnp
dec
xchg
mov
pop
packssdw
pop
js
cmp
and
aas
stos
xor
fwait
pop
les
add
sub
add
add
es
scas
repz
aam
push
sbb
fnstenv
xchg
arpl
and
popa
and
add
add
sbb
and
add
add
cmp
xchg
sbb
test
fwait
push
out
loop
add
or
add
add
pop
test
and
add
add
test
les
mov
add
andl
push
aaa
jbe
pop
fdivl
pusha
add
add
sarb
hlt
push
dec
push
rorl
leave
mov
add
hlt
and
push
lret
or
mov
mov
dec
movsb
fwait
andl
mov
jo
cmp
in
mov
test
repnz
gs
and
loop
push
aas
shr
ret
mov
add
jle
pop
and
or
cltd
aam
push
sub
mov
mov
mov
cmp
dec
add
pusha
add
add
mov
push
jne
jle
ds
push
or
add
lds
sub
add
add
scas
inc
dec
add
pop
sub
jle
nop
rcl
lods
dec
mov
jno
fstl
cltd
adc
cmp
pop
adc
loop
adc
add
add
cmc
mov
stc
mov
in
inc
push
hlt
popf
pop
add
add
add
xchg
push
arpl
sbbl
mov
mov
pop
pop
cli
mov
add
dec
shl
fsub
inc
add
add
add
cld
in
jmp
int
loope
scas
jnp
add
add
mov
sahf
mov
hlt
jns
push
shrl
int
iret
fistps
jp
xor
jmp
add
xchg
sbb
jbe
nop
cmc
fnsave
cmpsb
jbe
add
mov
rcl
dec
ds
incb
add
add
call
loop
rcr
dec
bound
add
pop
pop
aad
rclb
dec
cmp
add
add
add
iret
sbb
sbb
add
shrb
add
add
add
add
pop
inc
mov
insb
add
lock
push
push
lret
push
xchg
aad
mov
add
add
daa
adc
pop
adc
pushf
mov
add
add
add
or
add
add
adc
cmp
negb
mov
es
fmuls
mov
xor
push
jne
mov
sbb
sbb
or
dec
add
add
push
inc
or
mov
lock
xlat
mov
jb
mov
rcr
or
add
add
sti
or
add
add
mov
sti
sbbb
mov
outsl
insl
cld
cltd
outsl
lods
insl
jg
sbb
cmp
add
add
test
paddusw
dec
add
add
add
scas
movsb
push
xorl
xchg
sarl
mov
add
add
in
rsqrtps
mov
les
add
mov
or
test
stos
ret
sbb
cmp
add
clc
jg
and
add
lea
cltd
mov
xchg
repz
fptan
mov
lds
push
xchg
andb
xor
lret
insb
add
cmpsb
test
incb
add
add
add
jle
cltd
and
jns
add
add
mov
add
add
js
in
pop
cmp
xchg
xor
lods
jecxz
aam
aam
lret
dec
loop
cmp
mov
add
add
mov
add
mov
jne
dec
sbb
movsb
xor
add
imul
repnz
pop
push
pop
sbb
adc
push
aad
push
inc
inc
inc
mov
sub
add
add
insl
sbb
inc
xchg
mov
pop
mov
xor
xchg
cmp
daa
sub
add
add
xor
lret
xchg
out
or
mov
pusha
add
add
sbb
repnz
mov
inc
add
add
push
xor
add
pop
mov
test
inc
ja
add
xchg
leave
jl
out
inc
inc
add
add
xor
inc
pusha
add
add
adc
aad
dec
add
add
lea
movsb
nop
andb
add
gs
pusha
add
add
add
lods
push
sahf
mov
pop
push
xor
jg
push
jae
dec
and
add
add
stos
xlat
and
mov
mov
mov
aam
je
je
lods
insb
add
add
cmp
testb
cmp
int
add
inc
adc
dec
mov
add
add
or
add
add
ljmp
add
add
mov
std
loop
sbb
ljmp
dec
push
call
add
mov
xchg
insl
jl
push
inc
nop
mov
std
xchg
mov
fsts
mov
dec
pop
out
sbb
add
add
xchg
insl
fmull
in
add
ja
pop
dec
jns
add
add
add
andl
add
add
add
scas
rcrb
mov
add
aaa
cmp
add
add
adc
fnstcw
xor
stos
shl
sahf
sbb
mov
pop
notl
dec
aam
outsb
jns
cmp
mov
iret
insb
add
ja
xor
mov
mov
add
add
add
inc
add
add
out
add
or
xchg
scas
std
lock
rorb
loope
call
cmp
push
sar
sbb
jne
into
push
ss
out
inc
dec
add
add
adc
lahf
loopne
in
dec
incl
add
xor
out
inc
add
imul
pop
mov
cmpsb
xchg
dec
add
add
add
inc
mov
sti
in
movsb
mov
out
in
aam
rclb
stos
imull
cltd
popf
roll
shll
add
sbb
jp
mov
add
scas
or
add
add
push
and
cmp
xchg
lret
or
stos
fisttps
loopne
mov
jecxz
push
xchg
mov
and
and
push
ret
adc
mov
add
inc
add
mov
cmpsb
data16
adc
sub
stos
shll
nop
out
push
add
mov
sti
lret
add
add
add
scas
or
jmp
lea
sub
pop
jae
xchg
cli
and
add
add
add
add
lods
pop
sub
add
add
mov
adc
fcomps
sub
add
loope
push
shrb
into
movsl
bound
fbld
dec
rorl
jmp
add
or
rcrl
dec
int
add
pop
pop
push
cwtl
xor
or
add
add
in
mov
xchg
jge
or
add
add
in
xor
pop
stos
int
aam
test
jle
dec
add
in
popa
xchg
icebp
rcl
mov
out
inc
dec
jb
mov
add
out
int
add
adc
stos
in
mov
out
ljmp
and
mov
pusha
add
add
test
hlt
call
add
add
lods
xor
add
mov
pushf
sub
mov
dec
fldl
stos
jb
sarb
add
out
adc
mov
add
add
outsl
loopne
pop
imul
add
lcall
add
add
mov
test
je
xor
pop
or
insb
add
loop
jge
lcall
aad
dec
add
dec
add
add
mov
push
rep
xchg
pop
push
sahf
push
adc
in
sub
mov
cmc
aam
adcb
lock
add
mov
sub
or
add
add
out
sbb
add
add
push
mov
mov
xor
into
aad
dec
and
negb
cmp
add
add
nop
lahf
fwait
cmc
jmp
and
add
add
add
inc
fimull
addr16
insb
add
sub
addl
add
out
sbb
add
adc
dec
push
popa
shlb
add
add
inc
jae
lods
data16
pop
ret
mov
add
mov
inc
arpl
pop
lods
ja
inc
add
dec
add
add
lahf
mull
pop
push
cltd
imul
jnp
mov
je
add
add
aaa
ss
lahf
shrb
mov
xor
faddp
pop
je
pop
ret
nop
inc
call
ss
mov
sub
mov
movsb
and
dec
fisubrl
add
mov
xchg
add
mov
fwait
negb
jg
addr16
mov
add
add
fcmovne
push
sub
sbbb
jns
push
inc
ret
add
add
push
cmpl
mov
add
add
fwait
sti
mov
dec
push
loope
fwait
and
mov
add
hlt
nop
outsb
push
jnp
push
pop
xor
leave
mov
add
mov
xchg
adc
cltd
loope
movsl
xlat
rcll
xor
loope
jb
mov
movsl
jp
les
out
cmpsl
adc
cmp
fistl
xor
jb
sub
add
add
out
jle
push
mov
mov
push
xor
fnstenv
push
push
fdivrs
cmp
lret
xchg
mov
rcrl
movsb
jecxz
int
cmp
jbe
mov
xchg
std
ret
in
fdivl
mov
cld
jmp
in
es
outsl
pusha
add
add
cli
mov
lock
repnz
stos
sti
scas
loop
add
add
leave
insb
add
add
push
sbb
add
add
add
cmp
sahf
or
add
sbb
lret
stos
mov
cwtl
xchg
popa
xchg
inc
add
mov
add
add
je
xchg
mov
add
popa
sub
fstpl
pop
aaa
and
push
pop
movsl
popf
sbb
and
aas
sti
and
sbb
call
insl
movsl
movsb
mov
push
mov
xchg
sub
xchg
push
fadd
push
shll
pop
or
jno
add
add
add
or
add
add
add
add
add
in
adc
push
add
inc
add
add
jg
adc
std
faddl
xor
add
fdivl
add
fsubrs
jb
nop
xchg
test
movb
jp
stos
pushf
and
mov
iret
pop
inc
add
add
sbb
dec
add
les
add
add
add
add
adc
cmp
popf
loope
imul
mov
pop
imul
jle
add
int3
test
mov
add
add
jns
lret
dec
idivb
add
sarb
mov
adc
add
pop
dec
in
sub
mov
sbb
add
add
fcmovnu
test
outsl
mov
mov
add
mov
adc
add
stos
fstpl
mov
pop
jecxz
inc
push
orl
inc
fisttpll
mov
add
add
add
movsb
lret
fsubs
mov
inc
inc
jbe
and
adc
add
sbb
push
push
sbb
add
or
push
push
push
loopne
add
push
insb
add
add
aam
daa
inc
adc
ret
mov
add
add
repnz
test
hlt
outsb
lcall
in
gs
add
mov
cmc
fsubp
sub
mov
sbb
daa
adc
add
add
sbb
pop
lcall
cmpl
bound
dec
inc
sub
ja
add
imul
sbb
jo
xorl
inc
outsl
sbb
inc
das
ja
test
mov
sbb
mov
add
aaa
xchg
cmp
sti
jp
jg
dec
push
xchg
js
pusha
add
roll
mov
add
add
add
add
inc
add
cmp
add
add
aam
jmp
add
push
fistps
mov
fidivrl
sbb
in
in
push
icebp
loope
push
add
js
cltd
rep
add
xor
pop
scas
roll
add
add
add
inc
bound
enter
ja
mov
jbe
inc
pop
cmp
add
jne
aad
fyl2x
fisttpl
aas
mov
pop
gs
cmc
jmp
mov
jmp
push
mov
add
add
popa
dec
push
jae
dec
pushf
xchg
icebp
andb
mov
add
sbb
adc
pop
mov
add
xor
stos
aas
loopnew
pop
notl
out
in
jl
fmull
mov
add
addr16
add
add
mov
popf
xchg
adc
mov
adc
test
hlt
ljmp
jp
cmp
fldt
xchg
mov
pop
pop
aad
jb
rcrb
jg
add
add
loope
inc
add
add
add
mov
cld
cmpsl
sahf
enter
loop
fadd
call
add
sbb
add
pop
fnstenv
cmpsb
jle
test
andl
out
sub
mov
push
mov
inc
add
add
rorl
jmp
xchg
xorl
inc
lods
cmp
sahf
add
jne
jg
lock
sub
out
xlat
shlb
sub
sub
mov
jo
add
add
and
add
add
jle
ret
xchg
stos
sbb
adcl
push
sbb
push
adc
xchg
xchg
inc
mov
mov
mov
jmp
add
popf
aaa
mov
sahf
lods
sub
cmpsl
test
sbb
jmp
inc
xchg
dec
enter
mov
mov
xchg
sbb
adc
or
sub
add
add
add
push
jmp
add
add
add
dec
push
lcall
add
dec
mov
rolb
aas
mov
in
add
add
xchg
jecxz
dec
cmp
adc
hlt
push
and
add
add
aas
shll
sbb
rolb
sbb
sub
push
push
cli
sub
mov
jmp
pop
push
add
add
mov
data16
je
inc
cmpsb
fisubrl
add
cltd
pop
mov
push
jb
add
add
decl
inc
pop
in
jl
fcmove
push
add
mov
xor
jbe
jmp
data16
and
mov
decl
mov
rcll
or
inc
add
mov
je
aas
repnz
add
add
dec
sahf
mov
jmp
add
mov
mov
bswap
cli
iret
fidivl
add
add
add
add
adc
dec
jg
xchg
mov
shll
add
int3
dec
add
add
cmp
stos
dec
sbb
sbb
xlat
js
addl
add
mov
push
lret
push
in
add
add
stc
nop
pop
jmp
jg
mov
adc
iret
mov
and
movb
add
dec
ror
int3
aam
mov
add
in
dec
int
fwait
in
xlat
push
and
cmp
fldl
and
leave
cmp
xchg
bound
cmp
add
inc
adc
repz
aam
sbb
fldcw
cli
ss
pop
mov
mov
add
mov
je
and
mov
das
push
fildl
push
fwait
xor
cmp
shrb
jns
push
mov
push
xor
add
xchg
js
and
add
add
mov
sahf
xor
jecxz
dec
add
out
ds
cmp
rcrb
or
addb
add
pushl
sahf
je
out
fnstcw
adc
scas
into
inc
jbe
add
add
out
xor
sbb
push
cmp
jg
mov
dec
add
cs
movsl
or
sub
add
add
xchg
pop
mov
daa
fadds
test
mov
add
mov
and
mov
aam
mov
in
xchg
jg
push
int3
gs
push
sbb
sub
mov
scas
les
sub
test
lds
xor
xchg
lods
push
fbld
lret
add
sub
add
add
jo
add
add
xor
cmp
arpl
mov
ret
shlb
stos
mov
jne
and
out
arpl
adc
add
add
push
aas
fwait
in
push
inc
je
pop
lds
add
stos
pop
aas
repnz
aam
push
push
jno
clc
inc
push
jge
jno
or
add
add
cmpsb
sarb
jmp
fmulp
mov
add
inc
add
jno
adc
dec
orb
jge
mov
mov
mov
addl
add
add
cltd
push
pusha
add
add
jno
mov
inc
add
dec
fcoms
mov
js
inc
add
add
dec
mov
mov
nop
add
sbbl
cmpsl
mov
cmp
cli
scas
repnz
negl
lea
sbb
jg,pt
fmuls
dec
sub
add
mov
rorl
cwtl
jne
inc
lret
pop
repnz
add
movsb
scas
and
inc
in
add
add
add
sub
mov
inc
adc
addr16
xor
mov
mov
add
jns
inc
add
hlt
aad
in
mov
call
dec
cmp
mov
stos
popa
xor
adc
sub
sbb
mov
adc
fiaddl
push
jo
fidivrs
cmp
mov
jno
ret
clc
cwtl
xlat
lods
aaa
aad
push
test
add
and
mov
and
xchg
inc
mov
adc
xchg
push
repnz
aad
shl
ret
xor
add
add
jg
mov
inc
add
add
nop
scas
ffreep
xor
stc
aaa
jb
cmc
imul
mov
add
add
sbb
push
sub
imul
movsb
stc
insb
add
add
lcall
cwtl
dec
or
add
adc
outsl
inc
mov
add
add
xor
add
add
sahf
imul
or
jb
rcl
shlb
add
add
add
jb
scas
insb
add
xchg
jmp
xchg
add
fidivrs
cmp
push
sub
add
add
movsl
gs
out
shr
stos
iret
ljmp
test
mov
jnp
pop
cmp
pop
sub
push
into
lahf
xor
mov
scas
mov
xor
and
mov
imul
icebp
cmp
rcll
add
push
jbe
jno
mov
add
add
add
call
sub
out
push
test
leave
ljmp
pop
jp
in
mov
ja
cmpsb
rorl
jmp
loopne
xlat
jno
je
sub
mov
xchg
pop
mov
xor
sub
adc
mov
jmp
mov
test
pop
sahf
add
inc
aaa
cmc
lcall
fsubl
or
or
and
gs
aaa
aam
inc
xchg
pushf
and
add
mov
mov
add
aaa
push
les
add
imul
mov
xor
fnstsw
mov
add
mov
cmp
clc
adc
fstps
ss
inc
adc
sahf
aaa
pop
mov
jecxz
sbb
adc
mov
add
mov
cmpsl
or
add
cmpsb
in
adc
pop
pop
idivb
or
add
add
movsb
test
add
adc
xchg
push
xchg
stos
rcl
test
add
add
xor
bound
popa
dec
sar
mov
mov
ret
icebp
dec
sbb
fnsave
movsl
sbb
mov
out
mov
mov
mov
arpl
jmp
lret
in
sbb
andb
inc
jp
push
fists
add
xor
add
pop
pop
jge
add
mov
add
add
jb
fmulp
pop
add
mov
jge
xchg
insl
add
jge
pop
fmuls
add
jb
arpl
aaa
enter
andb
xchg
insb
add
in
jmp
stc
sbb
xchg
pop
popf
movsl
jbe
and
add
add
pop
mov
mov
dec
fidivrs
mov
jge
push
aaa
pusha
add
add
inc
xchg
cmp
imul
fsubrs
add
fisttpl
push
iret
sbb
add
sub
add
add
push
sarb
sbb
and
add
cmp
adc
mov
cmp
cmpsb
and
cwtl
add
or
lea
lock
sub
add
ret
scas
inc
add
das
into
out
mov
ljmp
jecxz
cmp
add
inc
add
push
in
add
lods
xchg
add
hlt
fwait
or
cmp
and
mov
pop
push
lea
mov
mov
aam
xchg
cmp
xor
cmp
jo
cs
jl
int3
xchg
sti
and
std
popa
cmp
adc
add
or
add
mov
dec
adc
mov
lret
repnz
pusha
add
add
enter
push
frstpm(287
add
mov
mov
add
add
stos
aaa
stos
sub
mov
add
add
mov
mov
inc
sbbb
shrb
add
add
mov
lahf
mov
and
mov
movsb
lock
test
out
das
mov
add
add
xchg
popf
in
call
stos
push
aaa
test
imul
lods
repnz
add
pop
imul
push
and
dec
xor
mov
imul
aam
adc
push
xor
imul
lahf
sbb
insb
add
adc
jne
mov
sahf
les
ja
cld
movl
or
sub
push
jg
in
shl
push
dec
hlt
mov
lods
sub
mov
inc
in
aaa
sub
add
mov
add
in
repz
add
xor
ret
push
fcomps
rclb
cli
aam
jns
ret
jle
jb
push
and
add
xchg
jo
shll
inc
outsl
ret
xlat
jne
xchg
mov
cmp
int3
loopne
cmp
cli
sti
outsb
lds
or
add
add
aas
push
sub
add
daa
daa
cmp
xchg
shr
jo
add
mull
out
aad
mov
sub
xor
test
cltd
xor
shll
shld
and
add
add
rolb
gs
inc
cmc
xchg
iret
test
mov
add
add
loop
sub
mov
push
add
or
add
add
mov
notb
lods
cmp
lcall
iret
mov
gs
movsb
cli
fisubrs
add
and
mov
adc
outsb
lock
dec
cwtl
sbb
mov
mov
inc
add
add
mov
ret
lret
lahf
mov
movsl
out
push
sub
mov
xor
mov
add
adc
push
or
fcoms
ficoml
fmuls
incl
inc
add
out
clc
cmp
or
cmp
sbb
clc
xlat
dec
add
sarl
cld
ret
fists
ret
mov
and
cmp
push
popa
out
add
mov
sarl
push
aaa
shl
ret
dec
ljmp
cli
xchg
lods
pop
into
push
out
lods
arpl
push
sbb
ficompl
movsl
jne
popf
movsl
addr16
or
mov
add
add
dec
add
mov
adcl
out
mov
add
add
add
push
inc
jbe
stos
loopne
mov
loope
ds
je
shl
mov
mov
mov
adc
add
xchg
and
int
lds
sahf
push
out
xchg
pop
mov
xchg
or
add
adc
int3
das
mov
js
testl
lock
or
fwait
jg
add
add
call
jg
sahf
mov
cmp
dec
ljmp
aas
or
add
add
aaa
in
popa
addr16
add
fisttpl
cmp
add
scas
pop
dec
jmp
lock
nop
enter
cld
mov
clc
sub
mov
inc
add
push
sub
jg
pop
sbb
imul
add
mov
cld
pop
ror
or
insl
lods
dec
outsb
daa
ss
imul
pop
loopne
add
add
out
es
aas
inc
push
add
inc
xchg
push
xorl
jl
pop
out
stc
sbbl
add
mov
mov
movsl
aad
fwait
arpl
xor
or
add
add
jle
test
in
and
add
xorl
adc
test
xchg
jb
mov
mov
add
sbb
filds
test
cwtl
in
test
mov
mov
aaa
pop
iret
sub
or
adc
or
cli
mov
add
add
mov
mov
cmp
or
add
add
rol
inc
dec
add
add
cmp
fldcw
adc
add
add
cmp
add
mov
ss
sbb
lods
xchg
xchg
xchg
out
xchg
scas
jecxz
iret
sbb
add
add
lods
xor
lods
dec
or
mov
test
cli
shll
add
fmull
add
add
mov
add
add
xor
pop
jge
dec
mov
pop
mov
sahf
pop
mov
popa
andl
mov
lds
inc
es
adcb
add
shl
mov
mov
xor
push
lea
push
sub
mov
std
adc
add
mov
jns
xlat
mov
adc
ds
leave
xor
fcmovne
pusha
add
add
or
cld
scas
push
stos
mov
mov
and
add
add
jnp
mov
call
or
sbb
lea
mov
dec
data16
add
add
jo
add
and
add
add
rcrl
push
stos
enter
fisubrs
add
popw
cmpl
ja
lock
scas
pop
push
and
or
mov
jg
xlat
shrb
add
mov
das
lds
add
mov
add
add
into
loop
out
rolb
add
add
mov
shr
adc
inc
add
add
cmpsl
fildl
outsb
mov
mov
add
dec
les
add
sub
add
add
test
xchg
jbe
test
testl
pop
sahf
cltd
mull
dec
pop
adc
inc
imul
fwait
leave
scas
or
mov
inc
or
pop
pushf
mov
add
add
sahf
lock
mov
ret
push
mov
iret
daa
and
jb
out
hlt
mov
ja
stc
adc
jbe
push
and
push
pop
stos
test
add
sbb
les
sahf
jge
in
sbb
xchg
lds
inc
popa
and
pop
in
jecxz
bound
jnp
jbe
es
mov
daa
jl
pop
sbb
add
add
iret
mov
jp
jle
daa
xchg
imul
lret
aas
and
mov
add
cmp
push
mov
or
mov
jge
mov
jl
add
add
xchg
and
cwtl
pop
jecxz
sub
mov
dec
cmp
into
mov
jnp
lcall
test
fsubr
repz
aaa
xchg
jns
push
loopne
in
mov
add
xchg
mov
aaa
movsl
mov
clc
jns
xor
add
lea
test
jg
add
add
je
inc
add
add
pop
icebp
movsb
sub
add
add
add
add
add
jb
test
sbb
add
mov
add
dec
mov
jae
push
mov
pop
loop
mov
aaa
xchg
dec
int3
or
mov
aad
pop
pop
cmp
loop
mov
mov
or
add
add
or
and
jnp
add
mov
push
fisubrl
sub
sub
mov
sub
add
add
outsl
aaa
and
mov
add
mov
mov
add
add
jne
std
out
fcmovnbe
arpl
adc
pop
cwtl
mov
enter
xlat
mov
cmp
inc
add
add
add
lret
pop
negl
int
aaa
or
aaa
adc
call
add
and
scas
pusha
add
jmp
add
mov
add
add
push
cs
out
repz
in
or
jl
shl
sub
add
add
in
or
ss
sub
mov
imul
lds
adc
int3
ss
aas
mov
stos
test
cmp
hlt
lea
into
pushf
iret
pop
adc
and
add
add
add
add
add
clc
aad
add
add
dec
lret
pushf
xchg
inc
add
add
pop
adc
xor
xor
add
add
add
fldl
cld
fidivrs
lea
addr16
sbb
in
jp
popa
std
pop
inc
jo
cmp
and
mov
and
or
jp
loopne
jno
mov
cmp
mov
pop
imul
jbe
lock
cmp
dec
sti
loop
leave
xchg
xchg
mov
xor
add
xchg
and
sbb
jge
ds
cmc
adc
rorl
das
jnp
jae
jo
mov
and
mov
mov
sbb
add
add
add
add
js
pop
xchg
jmp
add
push
ja
call
add
subl
jge
push
sti
mov
add
mov
xor
jnp
outsl
out
add
mov
or
and
aaa
inc
add
add
inc
cmc
ror
cmpsl
xor
int
inc
inc
jmp
jbe
popf
adc
push
insb
add
xchg
and
mov
outsb
dec
push
push
xor
mov
cs
imul
sahf
popf
hlt
and
pusha
add
add
and
xchg
and
add
add
add
out
into
inc
or
mov
mov
add
sub
add
add
je
inc
outsl
mov
add
add
mov
dec
pusha
add
add
cmpsb
lock
sub
add
adc
add
jne
popa
movsb
adc
jle
push
jg
jne
dec
testl
mov
add
add
stc
sub
add
add
xchg
fwait
cmp
pop
push
dec
mov
mov
xor
daa
cwtl
fcmovnu
mov
cmp
js
add
adc
or
add
add
nop
sub
mov
and
push
or
mov
outsl
xchg
xchg
sarl
mov
rcr
inc
das
jecxz
pop
cmp
lea
add
mov
aam
add
add
push
sbb
rep
popf
and
cld
mov
and
push
or
outsl
mov
repnz
or
mov
jecxz
sub
add
add
mov
or
icebp
or
add
jg
pop
enter
add
add
dec
popf
mov
fwait
mov
sub
jnp
xor
add
xchg
rol
outsb
mov
data16
cwtl
dec
inc
ss
shr
es
push
mov
add
cmp
and
add
mov
out
push
dec
or
add
rcl
add
fst
int3
ret
popa
ret
popf
push
ja
outsl
cld
pop
andb
mov
push
sti
ret
mov
hlt
sub
ss
js
xlat
xor
std
push
cmp
jns
mov
lods
aam
bound
and
add
add
fcoms
clc
adc
imul
inc
pop
rcrb
aam
dec
add
test
add
add
mov
negl
mov
popf
xchg
imul
repz
das
mov
and
add
add
jmp
mov
ret
fwait
xchg
add
add
mov
jae
push
adc
js
mov
imul
add
mov
add
testl
mov
sbbb
add
pushf
orl
jae
into
jl
xchg
data16
div
lds
push
pop
and
add
add
push
push
xorb
add
dec
add
jnp
lcall
pop
xchg
fisubl
add
mov
gs
xchg
mov
add
in
ret
popa
sbb
mov
xor
stos
dec
bound
push
jne
pop
sbb
out
mov
sbb
out
cld
int3
sti
mov
add
add
mov
in
ret
ljmp
ret
sbb
cltd
push
je
xchg
inc
add
add
cmp
xor
rorl
movb
mov
test
add
add
dec
jnp
cmc
xlat
adc
push
adcl
or
add
add
movsb
add
gs
std
cmp
test
xor
mov
mov
mov
shrl
cmc
fucomp
cld
std
lcall
addr16
push
lods
dec
and
mov
add
sbbb
and
insl
repz
add
cmp
cltd
mov
cli
sbb
lret
ds
ret
push
adc
mov
add
add
cmpsb
sahf
add
int3
popf
jno
mov
push
push
cmp
add
push
mov
add
add
mov
or
loope
cwtl
xor
add
add
add
lahf
sub
sbb
lock
xchg
pop
add
add
fistl
sbb
fwait
aad
push
mov
push
pop
dec
dec
pop
lahf
mov
sub
add
adc
xchg
lock
mov
push
jns
push
loopne
push
jnp
in
lcall
xchg
xchg
sbb
cmp
push
inc
aad
xchg
iret
xchg
sub
add
add
data16
mov
jns
add
test
mov
lds
add
add
jae
loope
xor
xlat
loope
add
jns
addr16
add
add
jg
rcll
cwtl
adc
mov
out
pop
movsl
sbb
out
movsl
sbb
popfw
xchg
das
xor
inc
scas
outsl
xchg
fwait
xchg
add
sbb
je
mul
pop
rcl
mov
int3
repz
sbb
enter
dec
inc
add
add
in
pop
sti
arpl
mov
aaa
mov
insl
aam
lods
adc
in
out
cli
fcmovbe
movsl
xor
add
add
add
rcll
add
jmp
add
xchg
inc
xchg
add
mov
pop
lods
pop
loop
push
dec
mov
add
add
addb
cltd
jecxz
rolb
jne
add
inc
add
add
push
inc
add
add
jp
mov
add
add
std
pop
repnz
push
pop
or
mov
jge
push
inc
push
push
es
aad
out
sub
add
add
push
shlb
sahf
and
add
add
aaa
aad
push
dec
aad
mov
clc
xchg
mov
add
add
push
outsl
lock
sbb
stos
push
pushl
jne
js
insl
loopne
cmpsl
mov
outsb
mov
mov
add
jg
les
sbb
mov
insl
mov
mov
add
add
dec
loope
lahf
icebp
cmp
adc
loop
call
ja
popf
es
out
xchg
popa
cmp
stos
lahf
pop
sub
add
xor
add
add
std
jno
popf
sub
add
add
mov
jnp
inc
push
mov
stc
je
movsb
imul
lret
pop
dec
fstps
xchg
jne
int3
call
sahf
clc
adc
shlb
cmp
cmp
or
add
add
sbb
dec
pop
sub
cltd
dec
pop
dec
iret
sarl
mov
pop
add
add
in
xchg
push
mov
daa
cwtl
pop
loop
outsl
clc
data16
add
xchg
imul
mov
addr16
out
ret
in
ja
sub
add
add
pusha
add
nop
xchg
mov
shll
inc
iret
fchs
fmull
mov
xorb
daa
out
fadds
sub
cli
xlat
movsl
enter
insl
outsl
and
add
add
pop
mov
xchg
cmp
jae
dec
add
std
pushf
xorb
lock
jnp
test
loope
add
sbb
add
xchg
pushf
or
dec
out
xchg
mov
add
lret
inc
push
mov
add
fcmovne
xchg
shl
adc
mov
mov
sub
jns,pn
sbb
mov
push
xchg
cmc
pop
mov
aad
stos
mov
outsl
ljmp
sub
mov
sbb
xchg
loopne
cmp
dec
add
popa
hlt
lcall
mov
insl
xchg
subl
sub
or
mov
xor
lret
jge
push
sub
and
ss
push
mov
rorb
sbb
adc
mov
push
mov
mov
cmp
pop
ja
mov
inc
pop
dec
xchg
adc
jecxz
xor
pop
hlt
leave
xor
xchg
push
xchg
test
push
insl
out
adc
sbb
fcomip
mov
ja
cmp
pop
add
dec
xor
call
jne
adc
pop
mov
lods
pop
push
cmp
nop
inc
scas
repz
mov
out
sub
add
add
into
jae
push
add
divb
lock
mov
add
iret
fucompp
or
add
add
mov
add
add
push
xchg
mov
pop
mov
icebp
hlt
gs
ret
cwtl
cmp
cmp
rorb
mov
jmp
or
push
pop
out
inc
int
mov
mov
std
mov
enter
add
adc
add
ret
scas
in
xor
add
pop
les
pop
and
sub
adc
jg
pop
outsb
js
or
add
add
out
xorb
xor
and
add
add
add
add
fimull
add
lods
bound
ret
outsl
pop
jo
stos
push
out
out
data16
add
push
fwait
aad
push
push
mov
popa
out
jne
mov
insl
nop
loope
mov
in
loop
test
sub
pop
jle
mov
test
add
daa
pop
movsb
mov
or
call
push
aad
pop
mov
jmp
add
add
add
jmp
xchg
xor
cmp
pop
adc
mov
aas
and
mov
mov
int3
mov
mov
xchg
dec
pop
div
add
xor
sub
cwtl
mov
stos
jns
pop
xor
cmp
xor
std
and
mov
add
test
mov
decl
adc
ds
in
fcmove
or
mov
sbb
fists
sub
mov
mov
xchg
dec
add
add
xlat
sbb
lods
xorb
mov
cmp
inc
icebp
cltd
aas
repz
xchg
mov
add
add
lahf
mov
mov
out
mov
add
shll
and
dec
int3
jo
mov
jl
lcall
sub
add
xlat
mov
gs
xor
add
lds
sub
inc
call
add
dec
imul
mov
pop
adc
imul
inc
rorb
das
rol
mov
outsl
xchg
dec
add
add
add
lret
inc
jp
imul
leave
hlt
and
add
test
out
call
ds
add
sbb
repnz
rcrl
add
test
shlb
int
mov
pushf
shlb
lret
leave
and
add
add
nop
dec
add
add
add
jns
mov
mov
push
lock
lea
sub
add
cmc
sub
mov
xlat
mov
mov
dec
push
sub
mov
mov
add
add
add
mov
add
add
lret
mov
xchg
movsb
dec
enter
add
cli
jno
fsubrl
ret
inc
lret
es
add
add
jno
jo
getsec
jbe
adc
and
jb
add
mov
xchg
pop
cmp
test
sub
add
add
dec
mov
xchg
jne
pop
fisubs
clc
or
push
lret
add
add
add
sub
push
lds
enter
jmp
add
add
xchg
sarb
repz
jp
mov
xchg
xchg
aaa
inc
lods
pop
loop
mov
add
jge
xchg
jnp
adc
push
lret
dec
scas
mov
gs
pop
add
mov
stos
inc
fdivl
mov
add
add
sbb
sti
imul
jae
push
jge
adc
mov
add
push
sub
pop
cmp
cltd
shl
iret
sub
push
add
mov
jne
mov
push
xor
add
add
lods
negl
decl
push
push
adc
push
fdivs
xchg
adc
xchg
inc
mov
es
mov
mov
add
add
cmpb
jb
out
xor
mov
imul
mov
cmc
pop
icebp
pop
fsubs
xor
xchg
sub
inc
add
add
out
xchg
mov
xchg
push
push
jo
push
adc
add
lret
clc
icebp
jb
bound
ss
jb
jp
push
insb
add
lods
lcall
mov
inc
sub
inc
in
das
into
loope
add
add
pop
mov
cwtl
jae
stos
or
mov
mov
decl
mov
cmp
add
add
or
mov
add
add
jle
push
fildll
push
lds
es
mov
add
test
arpl
xchg
add
adcw
add
mov
sub
add
add
fcomps
mov
movsb
mov
or
cli
jg
adc
cmp
push
and
add
jl
mov
call
pop
jae
mov
mov
jle
fsubr
cmc
imul
icebp
pusha
add
add
jg
in
xchg
xchg
outsb
push
jl
cmp
add
add
add
dec
add
add
pop
shll
mov
add
add
test
pop
add
stc
or
sbb
loopne
add
ret
mov
push
mull
cmpsl
call
add
arpl
add
add
insl
sbb
jl
lcall
in
adc
mov
cmp
jge
jbe
xchg
sub
stc
jle
loope
sbb
subb
sub
add
add
cli
mov
fwait
lret
dec
rclb
bound
jg
push
xchg
stos
out
stc
sahf
loop,pn
pusha
add
mov
add
jp
pop
pop
add
loope
test
inc
aam
dec
bsf
add
pop
push
rorl
push
in
jmp
jns
jge
lret
push
faddp
inc
insb
add
add
icebp
mull
jge
loope
iret
cmp
add
mov
and
lret
test
add
add
jae
enter
lds
pop
out
sbb
cmc
and
mov
mov
mov
lret
jg
sti
dec
cld
pop
nop
mov
popl
or
mov
stos
add
call
add
add
add
imul
add
in
jae
int
rcll
mov
std
dec
loope
int
inc
add
flds
xchg
add
add
fildll
add
mov
xchg
clc
cmpsb
adc
push
xchg
icebp
sub
add
add
outsl
and
mov
jp
inc
push
xchg
jo
cmpl
popf
shll
sahf
and
out
pop
pop
push
mov
aaa
pop
leave
stc
sub
pop
popf
imul
fdivs
jno
mov
add
xor
push
scas
jle
out
shlb
add
inc
mov
je
fwait
add
add
sbb
lret
inc
in
or
cmp
mov
jecxz
push
add
mov
xchg
fldcw
cmp
adc
pop
es
mov
cmp
add
test
ljmp
aas
je
stc
out
movq
loop
inc
sti
test
push
lea
mov
dec
add
shl
mov
push
ret
leave
or
add
add
inc
add
popf
xchg
sbb
dec
add
dec
inc
sar
add
mov
mov
add
push
adc
mov
sub
mov
mov
shll
call
mov
pop
jne
out
int
sarb
inc
loop
pushf
rolb
inc
add
add
push
js
inc
clc
shrb
add
xchg
pop
ljmp
inc
repz
sub
cmpl
inc
sub
out
cmc
movsb
cmpsl
data16
mov
popf
rcll
pop
dec
jp
xchg
and
mov
add
xchg
mov
jle
mov
xor
jp
inc
cmp
or
adc
or
mov
cli
outsl
ret
incl
push
and
das
ret
push
pop
mov
add
add
add
add
loopne
ja
add
dec
orb
aam
or
mov
jae
neg
or
add
add
jb
xor
adc
push
bound
xchg
sarl
jno
movl
out
mov
lods
dec
out
or
mov
arpl
call
in
add
imul
fcomip
jg
addl
xchg
test
sub
shl
out
nop
add
sbb
in
sub
jo
cmp
mov
movl
add
add
push
xor
and
add
add
add
and
cwtl
jb
pushf
cld
add
mov
cltd
dec
add
cli
dec
or
lods
inc
lds
jbe
cmp
push
sbb
or
jg
gs
es
pusha
add
hlt
push
rcl
push
xchg
inc
add
add
sub
scas
push
mov
dec
add
add
gs
and
inc
add
add
cmc
pop
add
add
loop
ja
or
add
pop
pop
fiadds
add
ss
add
mov
mov
add
lret
shlb
or
add
add
lret
add
add
pop
pop
jmp
sbb
mov
sub
add
jns
xchg
test
cmp
inc
lahf
cltd
test
fiaddl
out
mov
arpl
das
arpl
xchg
xchg
loope
inc
add
add
orl
in
add
add
add
pushf
jne
dec
fadd
subb
mov
jo
ds
add
xor
insb
add
add
mov
pushw
and
sarl
mov
cmpl
add
sub
repz
push
lret
xchg
and
mov
imul
add
mov
xlat
aaa
test
pop
mov
add
add
loope
lods
xchg
mov
hlt
jp
push
adc
popa
inc
mov
jmp
vpslld
add
add
add
xchg
es
adcb
repz
fisubs
cltd
out
and
jge
jp
in
repnz
das
add
add
add
adc
insb
add
add
pavgw
not
push
cmp
sub
jl
add
mov
add
add
pop
cwtl
std
stos
sbb
add
add
xlat
inc
xchg
into
fnstcw
add
add
lcall
pop
xchg
mov
ret
mov
mov
push
sbb
push
jb
sbb
inc
add
inc
add
add
fistpl
sahf
mov
pop
push
xchg
iret
repz
push
xchg
jae
enter
cli
loop
add
mov
scas
push
mov
xlat
jmp
pop
loop
sub
add
les
inc
xchg
mov
addr16
add
add
xchg
xor
add
add
add
jns
fisttps
lea
xor
pop
pop
inc
das
inc
add
add
lcall
stc
push
in
out
out
ffreep
aad
pop
xor
add
mov
std
or
push
popf
mov
cmc
cmp
jb
xchg
dec
inc
add
add
lret
add
add
lock
add
add
sub
mov
stc
mov
and
mov
mul
loop
aad
lahf
andb
mov
mov
mov
test
lret
stos
xlat
cmc
jge
rcrl
rorl
sub
subb
sub
add
add
mov
js
sbbl
lret
or
xchg
dec
jo
sbb
add
jbe
test
xchg
addr16
jb
outsb
xor
dec
data16
rcll
ret
jae
push
pop
xor
xchg
mov
popf
subb
add
sarb
hlt
ds
imul
pop
iret
bound
push
scas
jno
fldl
std
lea
out
lods
cli
enter
sarb
sub
add
gs
ret
addr16
inc
add
add
cmpsb
add
mov
popf
fcmovu
scas
stc
lods
out
jle
enter
or
pop
pop
fsubrp
jge
sbb
add
mov
inc
or
mov
arpl
sbbb
push
mov
pop
lods
push
movsb
sbb
add
bound
mov
das
dec
add
add
iret
in
insb
add
add
push
xchg
ja
das
add
push
rorb
in
cwtl
pop
jae
shl
cmp
push
popf
xlat
addr16
stc
or
sarb
outsl
js
mov
test
mov
bnd
cmp
lcall
jmp
mov
add
mov
mov
xchg
mov
enter
add
add
add
gs
push
push
inc
stos
xchg
mov
cwtl
fldl
out
std
test
lret
mov
scas
not
inc
scas
jns
jne
repz
cltd
dec
fstpl
mov
cltd
fnstcw
mov
cmp
pusha
add
add
shll
pusha
add
add
daa
dec
add
add
or
add
add
cltd
sbb
ror
sub
dec
jmp
add
bound
xchg
dec
popa
push
and
add
add
cmc
push
int
repnz
jne
jno
in
cltd
fwait
cmp
negl
popf
and
in
adc
icebp
pop
jmpw
scas
xor
add
subl
cmpsl
icebp
or
add
add
adc
pushf
mov
fimuls
mov
test
add
int
aaa
les
push
sbb
pop
pop
mov
add
lock
mov
int
mov
int3
cmp
cmpsb
cmp
add
add
movsb
adc
add
jmp
cwtl
inc
movsl
stos
pop
xor
pop
test
insb
add
add
out
test
add
dec
add
cmp
sbb
fwait
scas
inc
addl
sti
imul
sbb
add
pusha
add
add
lcall
mov
mov
sub
jecxz
add
add
push
add
mov
sub
out
push
push
adcb
popf
xchg
ret
xor
sub
mov
rolb
xor
icebp
shll
mov
jecxz
clc
push
or
dec
orb
cwtl
mov
add
add
mov
out
sbb
leave
and
add
add
sub
xchg
sub
mov
mov
pop
or
add
add
psubsw
add
jnp
add
cs
sti
out
and
les
push
in
cmpsb
dec
imul
mov
movsl
pusha
add
sub
push
inc
cmp
xchg
push
nop
xchg
cld
shr
inc
pop
pop
add
add
add
mov
mov
adc
lret
insb
add
add
or
mov
add
add
in
hlt
add
add
insb
add
add
mov
pop
sahf
test
add
add
aad
in
pop
xor
lock
add
add
add
shll
add
xchg
sub
mov
add
mov
add
add
inc
mov
shrl
jg
pop
stos
or
mov
jbe
push
cmc
fbstp
mov
stos
negl
add
test
inc
dec
fucomip
push
mov
mov
jg
jge
imul
inc
add
mov
mov
jmp
and
add
add
nop
add
mov
jo
fwait
stos
dec
mov
inc
add
and
int
xchg
repnz
lods
and
mov
mov
jbe
xlat
cmc
icebp
or
add
add
imul
push
pop
das
push
mov
imul
roll
add
sahf
mov
sarb
sahf
cmpsb
movsl
add
add
add
add
add
mov
sarb
mov
cld
mov
rcrl
iret
xlat
mov
insl
adc
dec
jge
rcrb
pop
dec
inc
inc
add
add
sub
xchg
in
mov
add
mov
les
mov
xchg
xor
add
add
sbb
push
inc
outsl
inc
add
sub
bound
mov
out
xor
inc
mov
mov
xchg
out
adc
aad
sub
jp
bound
popf
jbe
mov
std
scas
push
leave
sbb
cmpsl
cmp
cmpsl
dec
add
add
xorl
inc
add
add
rorl
push
push
or
add
add
mov
jle
pop
fidivrs
mov
pop
adc
ja
xor
and
add
pop
mov
mov
sub
add
add
mov
add
mov
ret
xchg
jns
idivl
out
fdiv
mov
or
add
add
ret
mov
pop
add
mov
leave
stc
divl
xchg
fstpt
add
add
adc
xor
add
add
loope
pop
gs
add
fldl
add
lahf
stos
idiv
mov
and
movsb
in
jg
mov
sub
add
add
and
mov
jne
lret
scas
xor
cmp
add
je
mov
loopne
mov
add
add
mov
popf
cmp
push
mov
push
mov
add
add
aaa
and
add
add
movsb
sbb
out
jl
fxch
mov
add
add
xor
into
jne
in
cmp
das
shrl
push
xchg
roll
add
add
add
test
call
push
sbb
and
mov
mov
jl
mov
dec
inc
jnp
imull
add
add
xor
pop
stos
nop
dec
cmc
mov
push
inc
xchg
add
mov
dec
add
mov
add
xchg
mov
or
mov
add
add
les
adc
add
add
into
mov
lcall
cmp
aas
or
pushf
mov
loope
enter
adc
out
mov
pop
mov
movsb
dec
pusha
add
cmp
add
or
or
pop
xor
mov
inc
jge
push
inc
add
add
xor
into
mov
mov
or
and
cli
hlt
mov
stc
sbb
cs
jg
mov
scas
lahf
xor
adc
xor
sbb
popa
fldenv
add
jecxz
aam
push
jmp
or
or
add
add
test
and
mov
sub
pop
daa
lret
push
add
mov
stc
sub
add
add
dec
sub
inc
fcmovnbe
mov
add
add
and
cld
mov
xchg
or
mov
mov
pop
roll
xlat
inc
pop
mov
adc
and
add
js
jmp
shll
and
and
add
add
and
insb
add
pop
sub
iret
cmpb
push
sbb
add
stos
sub
mov
dec
mov
pop
lods
cltd
fidivs
add
add
add
add
sbb
arpl
int3
stos
adc
push
test
mov
lahf
ret
dec
add
add
pushf
cmpsb
push
enter
jge,pn
xor
push
add
add
dec
cld
add
mov
xor
cmp
jb
adc
sub
jb
sbb
stc
inc
shr
arpl
shrl
add
mov
mov
jl
xorb
outsb
cmp
enter
cs
add
xchg
sti
cmp
xchg
popa
pop
mov
sbb
xor
stos
das
test
hlt
jae
fsubp
shl
push
test
enter
imul
sahf
xor
xor
divb
mov
das
pop
ffree
and
mov
sub
call
jno
fnstenv
fiaddl
cli
adc
mov
sbb
inc
movsl
cmpsb
sbb
add
mov
add
add
xor
pop
lahf
push
fsubp
lahf
jae
lcall
dec
add
add
mov
lea
dec
enter
lods
push
adc
gs
cli
pop
sahf
and
shll
inc
mov
mov
inc
add
out
or
jbe
xor
cmp
shrl
das
and
add
xor
jle
xchg
mov
adc
fstps
popa
jmp
jbe
mov
pop
cwtl
js
pop
insl
nop
pop
xchg
mov
pushfw
adc
addl
add
xor
add
pop
xchg
add
add
add
loope
sbb
cmp
inc
adc
mov
fwait
in
loopne
shll
inc
jno
fldt
addr16
mov
add
and
add
add
add
jns
dec
mov
xchg
subb
add
sti
and
add
call
mov
das
outsl
mov
pop
imul
mov
mov
cli
cmp
xchg
idiv
and
jp
testb
mov
mov
mov
add
cmpb
cmc
xor
fcmovbe
shlb
add
divb
push
xchg
push
xchg
out
sbb
pop
xor
pop
jno
insb
add
repnz
mov
add
add
lret
das
lret
xor
and
add
add
add
sub
add
add
mov
add
mov
or
mov
add
add
sti
orl
test
mov
stos
loope
mov
add
add
ret
shrl
add
add
add
pop
mov
divb
adc
dec
inc
rcll
add
add
add
or
add
jno
das
test
mov
negb
fwait
or
test
es
negb
xchg
daa
jmp
add
jge
lods
dec
test
fwait
rcr
dec
add
std
sub
in
push
jl
mov
sub
xor
mov
lock
test
jmp
add
test
or
cmp
movl
movsl
add
lds
mov
push
insl
xchg
mov
xchg
pop
dec
cltd
cmp
or
mov
jecxz
xchg
iret
mov
dec
jbe
mov
mov
negl
inc
xor
test
dec
jbe
sbb
lret
mov
add
add
jo
mov
roll
jne
xorl
adc
xlat
sarl
gs
xor
stos
jecxz
stos
lods
lock
or
push
ja
xchg
adc
pop
xchg
ret
add
push
xchg
push
adc
mov
bound
faddl
add
loope
sbbb
dec
or
xchg
mov
mov
scas
cmp
in
mov
add
std
cwtl
inc
add
dec
fisttps
add
stos
in
push
lret
lahf
ret
test
mov
cwtl
cmp
aad
push
cwtl
test
fdivp
test
jge
idivl
insl
orb
std
fidivrs
xchg
popa
icebp
out
adc
add
xchg
jge
push
sahf
mov
mov
ret
std
fdivp
in
das
ljmp
lcall
push
test
or
add
add
repz
out
imul
add
add
cmp
sti
jmp
mov
movsl
or
mov
xor
adc
dec
dec
leave
int
leave
sub
add
add
adc
xchg
jge
iret
jnp
jo
out
push
mov
add
add
add
lock
mov
add
xor
sti
jle
sub
push
pop
cmp
mov
or
pop
rcl
jno
jne
dec
push
ret
adc
add
pop
shl
mov
out
outsb
scas
fnstcw
add
inc
adc
and
cmpsl
cmp
mov
stos
ret
sbb
jne
cwtl
cmp
outsb
out
xor
enter
add
mov
add
add
pop
mov
movsl
mov
add
lcall
and
add
cmp
add
repz
out
cmp
add
dec
jbe
or
lahf
xchg
push
push
dec
idivl
jle
sub
cs
out
ljmp
add
test
popa
enter
add
test
jge
xor
push
mov
aad
stos
dec
loopne
lea
cli
xorb
add
add
add
add
xchg
icebp
arpl
lret
add
xor
setns
das
pop
aas
js
or
add
add
daa
adc
or
mov
xchg
js
inc
add
add
mov
movsb
lods
pushf
add
add
add
add
je
push
inc
inc
and
mov
jge
cmp
push
lahf
loop
leave
cmp
sub
and
add
add
add
add
or
cli
sarb
data16
mov
add
cltd
cld
repz
lcall
or
loopne
int3
sub
icebp
xor
adc
adc
add
insb
add
fsubrl
jge
cld
fldt
mov
pushf
pop
xchg
lods
rorb
addr16
pusha
add
add
lret
push
test
mov
add
add
fdivr
out
push
into
aad
mov
push
cmp
add
cmp
pushf
inc
xchg
call
xchg
rcrl
sbb
xchg
popa
scas
out
repz
sbb
inc
out
stc
add
add
add
mov
fwait
enter
mov
sub
fmul
int
jbe
sahf
jp
sub
add
mov
adc
xchg
repz
mov
dec
rorb
int
cmpsb
mov
sub
add
add
cs
push
sub
xchg
or
jl
rcrb
fbld
ss
mov
decl
add
pushf
int
adc
add
mov
sbb
xor
inc
add
xor
add
out
pop
and
pushf
pushf
push
push
push
add
add
add
out
pop
mov
jge
jnp
lcall
out
mov
add
dec
add
add
mov
dec
test
xor
in
pop
test
mov
ss
bound
add
add
push
in
pop
dec
jmp
push
addr16
lcall
popa
cmp
add
sub
add
add
aam
dec
outsl
push
pop
data16
push
xchg
mov
sbb
das
jb
stos
mov
add
in
mov
and
mov
and
mov
add
jmp
add
test
aad
add
add
add
cmpsb
dec
pop
cmp
push
psrlq
popa
das
push
out
std
sub
mov
cmp
mov
add
xor
sub
int3
out
xchg
test
dec
dec
in
int3
cmp
add
icebp
jne
sub
int
pop
sub
mov
add
add
or
mov
lret
outsb
adc
add
shrl
rcpps
data16
mov
sahf
mov
lods
mov
frstor
lea
addb
call
mov
mov
call
and
mov
pop
dec
add
add
xor
mov
add
mov
jle
mov
add
add
add
add
outsl
xchg
inc
add
add
lods
mov
add
add
jg
mov
mov
daa
and
add
add
and
mov
add
inc
add
add
test
cs
addr16
push
xor
mov
lcall
add
jnp
dec
sub
mov
mov
add
push
shll
jmp
rol
mov
orl
add
push
or
mov
and
add
add
push
rcll
je
pop
adc
push
outsl
xor
push
add
mov
sbb
jne
addr16
insl
pop
pop
mov
mov
add
ljmp
sahf
push
cmpsb
cmp
shr
imul
mov
jg
cmpsl
xchg
jno
dec
aam
or
add
add
dec
add
test
push
rorl
insl
cmp
push
sahf
mov
mov
outsb
gs
add
or
adc
add
add
aam
or
xchg
insb
add
add
pop
inc
jno
shrl
pop
ss
js
or
stc
ja
add
add
addr16
jle
idivl
sbbb
jge
dec
push
inc
jo
dec
add
push
mov
lock
add
add
jp
mov
repnz
aad
xor
clc
out
push
icebp
add
add
inc
push
cs
clc
imul
pop
or
add
fstpl
cmp
or
mov
add
add
sti
repz
jle
sbb
pop
push
mov
xor
inc
loope
add
add
std
mov
inc
add
sahf
push
push
jae
push
aad
jns
jnp
mov
inc
add
mov
dec
leave
xchg
lcall
sbb
add
xor
lods
push
xor
dec
jnp
add
add
jmp
add
add
mov
jnp
cwtl
movsl
movsb
int3
sub
lahf
movsb
jl
in
jnp
xchg
add
sbb
add
in
pop
push
roll
add
ljmp
cmpb
cmp
add
add
add
cmp
pushf
jmp
jbe
je
ds
scas
data16
mov
in
les
mov
pop
cmp
ss
incb
push
jmp
daa
xchg
push
xor
aad
sub
addr16
dec
out
jle
xor
mov
add
add
sub
je
test
add
add
notl
add
fbstp
imul
pop
adc
inc
cmpsb
or
add
jns
repnz
add
xchg
jne
ss
stos
mov
add
add
or
mov
mov
xchg
outsl
jmp
push
mov
mov
fistl
aad
push
lods
add
add
flds
lods
add
add
pop
rcll
inc
add
add
add
cmpsb
dec
add
add
add
sub
push
fiaddl
imul
add
es
cmpl
pop
je
fistpl
das
dec
add
add
mov
push
adc
add
jle
scas
pop
in
xchg
ja
mov
pop
icebp
loope
mov
gs
xchg
dec
add
stos
out
js
stc
call
sub
sbb
add
mov
mov
mov
pop
cmp
sub
fistpl
sbb
sbb
loopne
lea
jo
xchg
rclb
repz
cmp
dec
add
loopne
jl
call
add
mov
mov
pop
cld
sub
add
add
mov
mov
add
cld
subl
xor
push
and
int3
aaa
ret
add
in
loop
inc
dec
inc
loop
add
adc
faddl
and
les
add
add
add
add
and
and
mov
inc
lret
jecxz
xchg
aas
xor
mov
mov
leave
pushf
aam
add
mov
fwait
and
cmp
lock
mov
add
add
mov
out
fcomip
add
add
arpl
add
clc
sbb
outsb
pop
lret
xor
add
cmp
add
sub
add
add
orl
in
mov
pop
notl
out
stc
in
leave
push
out
adc
cli
clc
sbbl
ret
inc
pop
loopne
addb
add
mov
add
xlat
repz
inc
add
cwtl
add
mov
add
dec
mov
add
add
lods
lds
inc
xor
ret
hlt
add
mov
push
inc
sarb
cmp
ss
xor
test
leave
pusha
add
add
add
mov
enter
filds
add
add
out
and
std
out
add
fmuls
mov
add
jno
add
xor
mov
inc
push
mov
sbb
xchg
nop
xor
pop
push
adc
neg
in
pop
push
push
aaa
lret
dec
add
add
popf
sub
in
jg
xchg
sti
or
mov
adc
clc
cld
imul
push
adc
mov
mov
xorl
add
add
rcrb
mov
add
add
add
test
cld
or
mov
add
add
mov
or
insl
xchg
xchg
cmpsb
pop
cmpsl
in
adc
enter
aaa
aas
inc
jb
rcll
xchg
lret
mov
and
fwait
sbb
mov
sub
add
add
out
xor
mov
ret
dec
filds
add
add
add
add
inc
sbb
jne
nop
inc
jne
or
push
stc
aam
pop
pop
pushf
jle
cwtl
sub
add
add
cmp
pop
in
mov
ret
jmp
push
xor
xchg
popf
mov
add
add
repz
add
add
add
fistl
xchg
das
faddl
inc
add
add
out
cmp
jle
add
aas
cmp
lret
fisttps
fimull
xor
aam
adc
daa
mov
jecxz
add
roll
outsl
inc
cmp
push
mov
scas
xorl
cli
pop
sub
mov
pop
and
add
add
mov
movsl
jnp
jne
loope
roll
jnp
fsubrs
sub
jmp
call
sbbb
xchg
cmp
push
cltd
xchg
add
int3
fists
lods
stos
cmp
stos
lahf
mov
out
add
xor
add
mov
sbb
mov
lods
jle
push
inc
sub
mov
inc
loop
add
add
add
out
sahf
cmpsb
jecxz
push
pop
adc
iret
push
ror
and
mov
cmpsl
insl
cmpsb
int3
cmp
add
inc
leave
xor
fistl
push
lds
shrb
mov
aam
push
shl
sbb
popf
jae
sbb
and
mov
or
jmp
push
xchg
gs
add
sub
leave
adc
or
add
add
fcomps
mov
inc
lock
std
es
add
sub
add
add
cwtl
dec
std
shrb
inc
add
test
add
add
mov
xchg
mov
mov
mul
test
pop
jmp
add
mov
add
movb
out
fnstsw
push
inc
add
in
mov
xor
fstl
add
test
adc
and
sub
mull
push
jae
mov
imul
mov
cltd
push
jl
sbb
sbb
cmp
add
add
mov
or
xlat
aad
inc
add
or
mov
or
and
loope
cli
adc
ss
push
in
sub
add
add
inc
add
mov
outsl
inc
add
add
cmpsb
push
cmp
pop
jnp
repz
mov
leave
cmp
add
add
sahf
or
mov
int3
dec
push
push
mov
jo
jmp
adc
or
xor
clc
dec
loopne
dec
cmpsb
hlt
and
add
sub
add
add
add
add
cmp
adc
add
add
lods
and
add
add
pop
out
mov
subl
mov
add
aad
sbb
in
pusha
add
add
test
bound
push
popf
and
add
add
or
add
add
cmp
adc
jmp
jne
xchg
test
stc
xchg
aad
and
inc
mov
push
and
cmp
xor
icebp
or
inc
pusha
add
cmp
pop
xchg
dec
add
add
mov
rcr
je
add
inc
add
add
jl
into
lret
popa
movsl
fisttps
add
add
lods
movsb
sub
mov
push
xchg
lret
add
xchg
and
add
add
out
sahf
test
cmp
xchg
mov
add
popf
add
jp
js
or
add
add
data16
inc
sub
mov
out
out
mov
sbb
and
push
in
sub
cld
hlt
xchg
adc
add
shlb
mov
pusha
add
xor
hlt
test
clc
xchg
lock
add
les
add
sahf
push
cmp
mov
test
adc
add
add
jecxz
xchg
push
icebp
lock
cltd
out
xchg
cltd
sub
in
sub
cmp
add
lock
add
xchg
xchg
ds
add
add
cmp
mov
leave
xor
mov
mov
xor
sbb
adc
sti
and
add
add
iret
mov
mov
insl
add
pop
sub
mov
mov
adc
add
add
popf
arpl
enter
or
and
add
add
stc
imul
sbb
mov
fwait
adcl
mov
push
les
pushf
or
outsb
mov
add
outsl
sub
pop
and
jae
dec
and
add
add
mov
pop
in
sbb
add
subl
or
repz
ror
and
add
add
push
push
lret
push
cli
fdivrp
in
jne
mov
push
loopne
dec
inc
jae,pt
sub
pop
xchg
decl
mov
daa
mov
lcall
movsb
adc
mov
ds
jns
add
cmpb
push
mov
sub
addr16
xor
int3
push
mov
sbb
add
js
mov
nop
pop
lahf
out
jae
rolb
add
add
repnz
sub
mov
and
in
inc
add
inc
add
inc
rcr
inc
add
dec
add
add
cwtl
inc
test
add
rol
and
loope
dec
xchg
lods
jmp
aam
test
and
add
add
jmp
insl
sbb
dec
arpl
mov
push
mov
add
add
enter
add
std
lods
in
cmp
dec
add
add
outsb
arpl
cmp
cmp
int3
lea
adc
pop
xor
mov
or
add
add
roll
add
add
add
bound
add
mov
sbb
add
add
xor
push
sub
add
inc
add
outsb
in
mov
popa
cli
mov
pop
loop
repz
add
add
mov
xor
xor
aam
mov
add
mov
pop
push
int3
mov
pop
sbb
add
in
fiaddl
dec
lret
push
sub
mov
fsubrl
scas
pusha
add
fscale
pop
cmpsl
xlat
into
and
adc
out
dec
mov
add
sbbl
inc
add
fimull
add
add
add
add
add
add
repz
add
punpckhbw
add
add
adc
or
xor
rorb
add
cli
ja
pop
call
xlat
ds
les
add
les
fstl
dec
add
rorl
lock
dec
xchg
jne
add
mov
or
mov
adc
insb
add
imul
pusha
add
add
repnz
or
lods
rorb
xchg
sub
and
mov
pop
gs
mov
movsb
shll
cmpsl
mov
pop
inc
mov
add
in
les
and
add
add
mov
mov
add
add
sbb
add
add
shll
hlt
test
xchg
lret
or
adc
cwtl
incb
std
in
cmp
insl
std
lods
shrl
xchg
mov
jp
jbe
je
lret
pop
adc
pop
cmp
add
dec
add
mov
bound
test
dec
cs
cmp
jo
jmp
add
cmp
jns
mov
cmp
add
or
add
add
inc
jbe
mov
shll
mov
imulb
adc
lods
mov
lret
lock
add
add
bnd
cmpsb
movsl
fmuls
and
mov
sbb
add
cmpsl
adcl
xor
jg
inc
add
add
add
pop
sub
or
add
mov
unpckhps
jae
sub
in
jp
and
mov
data16
xchg
pusha
add
mov
int
out
xchg
adc
xor
add
hlt
ret
int3
loopne
xor
mov
and
mov
movups
imul
mov
bound
std
cmp
add
add
mov
stos
das
lcall
push
pop
icebp
pusha
add
add
mov
stos
sub
mov
add
daa
gs
add
add
mov
add
add
sbb
add
add
add
pop
ret
cmp
mov
push
mov
xlat
in
sahf
or
add
add
js
add
shl
rclb
cltd
shlb
inc
sti
imul
add
ss
mov
fdivr
popl
sbb
and
add
add
add
in
cmc
mov
test
mov
add
add
dec
sbb
xor
cmp
inc
icebp
push
loopne
cmp
adc
mov
ret
pop
mov
aaa
xor
jl
cmpsl
into
and
mov
add
add
push
lcall
jmp
hlt
dec
add
add
dec
scas
jns
jl
pop
dec
imul
add
xchg
push
push
cs
pop
cmp
inc
push
ss
popf
dec
inc
enter
loopne
sub
add
mov
and
sbb
lock
sub
add
inc
push
in
xor
data16
ds
repz
mov
movsl
rcl
test
mov
sub
add
add
cwtl
add
jnp
in
sub
add
add
inc
push
xor
stos
sub
sbb
inc
aad
sahf
mov
jae
push
test
cmpsl
jno
add
sub
popl
add
add
add
clc
fisubrs
add
shlb
orb
cli
hlt
jmp
imul
push
push
pop
mov
mov
test
adc
popf
fdivl
mov
cmp
add
in
sbb
leave
lds
mov
add
int3
sbb
jmp
jle
adc
sahf
test
aad
mov
mov
and
mov
sbb
sbb
mov
sbb
popf
push
adc
enter
push
mov
inc
add
add
xor
jle
jmp
les
and
add
add
out
dec
adc
adc
shlb
add
jbe
fwait
dec
push
aas
mov
lret
lds
add
add
popa
cmp
pop
push
dec
fmull
add
cmp
fcoms
into
adc
push
jmp
adcb
sbb
jo
loopne
call
lea
lret
scas
inc
add
add
call
pop
jp
mov
lret
pop
ret
pusha
add
add
fistpll
mov
mov
rorl
jo
lret
js
jo
inc
jbe
aad
jo
jmp
adc
mov
fwait
pop
fstp
mov
add
add
and
mov
or
int
loop
xor
imulb
xchg
popa
mov
out
push
xor
mov
add
cmp
add
decl
add
sahf
cmp
adc
jg
scas
jle
cmp
add
pop
xchg
inc
mov
xchg
adc
repz
lret
push
sub
mov
scas
dec
adc
add
add
std
repnz
cbtw
sbb
push
mov
cmp
jns
std
shrl
xor
insl
rclb
push
sbb
pop
push
and
xor
mov
call
enter
pmaxsw
outsl
repz
sbb
adc
gs
jmp
push
call
add
and
mov
mov
daa
mov
mov
movsl
xchg
cmp
mov
add
add
enter
paddd
mov
add
add
dec
add
xchg
sbb
jns
pop
jb
add
xor
out
xchg
add
dec
xor
sub
popf
mov
iret
and
sar
lahf
dec
hlt
cmc
mov
aaa
mov
outsb
cmp
jo
sub
inc
jb
ffree
mov
ret
mov
xor
stc
or
mov
das
pop
rorb
stc
cld
jno
out
adc
and
add
add
aas
fcomps
loope
pop
jne
in
pop
mov
push
sbb
rep
aas
xchg
aas
shll
jb
add
add
add
adc
cmp
pop
push
xchg
mov
sub
inc
add
add
xchg
negl
add
pusha
add
mov
scas
pop
cmp
cwtl
pop
dec
add
add
xlat
cmp
pop
add
mov
cwtl
jg
jp
mov
into
fstp
bound
ljmp
popa
sbb
jmp
xchg
xor
add
testb
add
mov
add
add
sbb
ss
adc
xchg
rorb
jbe
mov
jl
fxch
xor
sbb
cmpsb
loopne
add
add
scas
cmpb
mov
xor
add
repz
cmp
arpl
xor
stos
jb
fldcw
ret
stos
jle
jno
mov
dec
cmp
out
fucomp
in
shrb
push
or
inc
scas
jle
mov
mov
add
add
mov
daa
outsb
sub
add
xchg
add
add
imul
lahf
sbb
add
mov
sub
and
mov
fisttps
add
neg
stos
pop
pop
stc
ss
int3
sub
mov
in
and
jns
inc
add
sub
add
add
mov
push
enter
cmp
and
fwait
inc
add
add
hlt
ds
mov
mov
sti
pop
std
adc
add
add
add
and
mov
xor
jmp
fdivrs
ret
adc
insl
rolb
xchg
jbe
loopne
or
cmp
daa
add
jbe
cmc
pop
rcll
sbb
adc
cld
loope
rorb
adc
mov
add
sti
inc
popf
sti
cmp
sbb
mov
add
loope
sub
mov
adcl
mov
lret
xor
cli
push
xchg
add
notl
adc
mov
sarl
dec
int3
gs
cli
fdivrs
cld
jg
or
add
add
or
daa
xor
mov
add
add
mov
add
add
or
std
shrl
mov
mov
pop
fbld
rcrb
pop
hlt
mov
add
repz
or
mov
mov
out
or
add
add
in
cmp
popa
lahf
outsb
or
mov
mov
jno
jns
inc
shrl
add
lea
mov
mov
sub
in
push
shlb
add
add
ret
out
testl
scas
in
and
lds
inc
imul
movsb
push
lods
mov
insl
xor
adcl
xchg
shll
aas
xchg
cld
pop
push
lahf
outsl
xchg
cld
jl
shlb
dec
add
add
lea
movsl
sbb
imul
mov
in
inc
mov
idivb
add
xor
xchg
popf
mov
adc
add
xor
mov
mov
std
loope
push
stos
xchg
push
loop
add
add
pusha
add
add
mov
cmp
pop
xlat
xchg
sub
mov
and
sarb
pop
mov
add
add
jp
xor
mov
in
jo
dec
add
add
mov
mov
add
add
add
xchg
mov
mov
imul
arpl
shrl
add
add
add
add
cmp
icebp
jae
test
pop
lea
add
add
mov
sahf
mov
out
add
dec
roll
or
test
adc
call
loopne
aaa
aas
mov
roll
fucomp
jbe
xor
add
cmpsl
mov
icebp
cmp
push
aam
jo
inc
inc
adc
jns
gs
mov
inc
mov
pop
mov
xchg
or
mov
mov
aam
sti
out
mov
sub
xchg
and
jp
mov
xchg
jg
mov
in
mov
mov
add
push
pop
cmc
dec
scas
mov
leave
in
in
add
mov
jmp
or
pop
insl
sbb
dec
or
loope
in
ret
add
add
aaa
icebp
xchg
xchg
xor
inc
add
add
movsl
pushf
insb
add
lock
sub
add
add
xchg
jle
xchg
int
and
pop
pusha
add
add
add
mov
int3
dec
add
inc
popa
or
loope
pop
aaa
sarb
cmp
gs
pop
test
cli
scas
add
add
fnstcw
and
add
add
std
stc
sub
add
add
jle
xor
push
or
add
add
gs
pushf
aas
aas
sub
add
mov
fistpll
add
xchg
insl
rolb
mov
add
lcall
ret
mov
mov
cmp
push
sti
push
mov
scas
loope
jge
xor
scas
insb
add
jo
movsb
flds
daa
mov
pushl
add
dec
cmp
leave
and
mov
sub
mov
sub
dec
div
jp
je
pop
jne
aaa
xchg
adc
dec
lret
pop
out
movsl
push
in
inc
sar
popf
shrl
add
out
mov
out
mov
push
cmpsb
inc
mov
dec
mov
scas
cs
int
enter
insl
xchg
cmp
loope
lock
adc
pop
inc
or
pop
jae
inc
jne
mov
add
add
or
add
add
aas
xchg
js
js
sub
dec
add
add
pushf
shll
sbb
mov
sbb
pop
arpl
add
ret
mov
jb
mov
dec
jns
loope
ljmp
add
sbb
cmp
mov
add
aas
push
ficompl
adc
pop
gs
adc
add
ds
xchg
and
mov
push
or
add
add
add
aam
subl
sbb
push
sbb
mov
add
add
in
pop
int
or
mov
ja
sahf
or
data16
dec
mov
mov
ds
stos
pop
inc
xchg
add
add
cmp
add
add
and
mov
imul
call
cmp
dec
ja
cmp
iret
dec
add
or
mov
sti
push
jmp
mov
lods
mov
mov
out
dec
sub
punpckldq
push
xor
xchg
cli
movsl
push
loop
jmp
in
jnp
out
jl
loopne
inc
add
add
cmp
sbb
jle
pop
stos
and
mov
add
inc
add
add
cmp
stc
outsl
test
sub
xchg
mov
iret
outsb
mov
mov
xlat
or
mov
scas
dec
ffreep
jmp
add
add
movsl
fistl
test
push
decl
mov
mov
xor
sbb
cs
lds
add
mov
mov
mov
add
push
inc
add
pop
loope
cmp
xchg
mov
push
popf
movsb
fisubs
push
movsl
ds
inc
je
movsl
jge
xor
or
add
add
jns
ja
push
push
lcall
xchg
add
pop
and
out
pushf
jns
cld
test
es
add
add
adc
loop
jne
dec
add
add
mov
add
jnp
add
add
ljmp
orl
mov
inc
xchg
mov
mov
push
sbb
dec
add
add
add
jo
lret
dec
or
inc
out
pop
and
ds
sub
sbb
insb
add
add
lods
outsl
out
xchg
test
add
add
push
jmp
add
add
icebp
mov
adc
pushf
push
movsb
int3
sahf
leave
dec
adc
ret
push
das
mov
sbbb
imull
cmc
sub
mov
lods
and
add
cmp
add
add
add
add
add
jo
mov
or
mov
mov
add
add
fmuls
add
add
dec
sar
cmp
jle
mov
mov
and
call
shrb
mov
sub
xchg
pop
cli
mov
inc
mov
add
add
mov
orb
push
mov
insb
add
xchg
and
roll
daa
aad
add
add
adc
add
xor
add
neg
in
xchg
sbb
jmp
jg
jp
aas
sub
js
mov
inc
mov
add
pop
push
mov
cld
mov
stc
test
push
sub
add
add
push
aam
xchg
add
add
idiv
in
scas
cs
out
mov
aam
xchg
push
add
add
repnz
std
pusha
add
add
jp
push
inc
xchg
sub
mov
int3
mov
lcall
stos
out
push
imul
cli
jg
add
add
jp
sub
mov
test
add
add
mov
add
std
xlat
loop
lock
add
add
add
add
add
add
add
popa
dec
or
cmpsl
mov
and
mov
mov
pop
cmp
push
sbb
cmp
or
movsl
icebp
pushw
ftst
leave
into
into
mov
imull
pop
or
test
add
arpl
jbe
adc
sar
cmpsl
call
inc
add
add
mov
outsb
daa
adc
mov
add
add
jo
in
jns
add
cmpsl
push
aad
sti
pop
mov
add
int3
iret
or
ret
in
pop
addr16
fldenv
xchg
push
out
mov
mov
into
insl
sbb
add
jl
ret
sbb
test
pushf
and
idivb
pushf
lds
fldt
fstpl
or
add
mov
or
mov
loop
mov
cmp
mov
mov
mov
roll
dec
rolb
cmc
jae
adc
sub
fnsave
add
add
lret
jle
jnp
out
es
and
mov
outsb
sub
loope
sbb
add
add
fcomi
mov
sti
andl
mov
mov
fwait
push
cmp
aaa
mov
dec
and
mov
sub
addr16
fisubrl
imul
add
test
aam
out
ret
adc
cli
sub
add
add
repnz
push
cs
lcall
orl
aam
mov
loopne
pop
and
add
test
popa
repz
aad
dec
int
popl
and
divps
lods
inc
sub
add
add
rcll
add
sahf
xor
pushf
push
cmpl
and
add
add
mov
lods
movsb
leave
js
popa
das
lds
les
and
mov
sbb
lret
inc
push
mov
add
and
jmp
and
mov
addr16
mov
ret
jp
fnstsw
mov
add
jg
in
xchg
and
mov
sbb
add
or
mov
jnp
xor
dec
subps
in
pusha
add
add
dec
lret
daa
bound
lods
ret
push
cmp
cmp
or
add
xchg
repnz
enter
add
sub
add
add
data16
pushl
inc
fxch
decl
add
add
mov
stc
mov
fistpl
mov
lret
and
rorb
insb
add
add
sbb
xor
xchg
adc
adc
or
mov
gs
and
adc
push
add
add
xchg
lock
dec
add
pop
nop
mov
insb
add
adc
add
lahf
lods
scas
adc
mov
icebp
dec
add
out
pop
mov
mov
adc
mov
mov
dec
add
adcb
push
push
mov
icebp
pop
loope
jo
push
pop
xchg
fnstcw
loopne
add
add
mov
cld
cmpsb
repz
repnz
dec
leave
jge
mov
jp
push
ficompl
nop
xchg
jne
out
pop
pop
stc
jl
test
imul
sbb
in
cmp
xchg
jo
out
sbb
add
mov
mov
dec
fmul
push
pop
pusha
add
test
xchg
cmp
sub
pop
jecxz
xchg
loope
call
push
and
mov
xchg
inc
add
aas
fucom
enter
dec
je
bnd
iret
out
insl
inc
sub
xchg
arpl
add
add
bound
jns
dec
ficoms
push
cmp
xchg
cmp
lea
mov
mov
sbb
add
jg
or
sbb
and
cmp
lds
add
add
fbstp
adc
mov
loop
sub
mov
rorb
mov
cmp
mov
rcrb
add
add
xor
mov
cltd
fsubl
add
stos
lahf
leave
or
loope
add
mov
not
pop
inc
xchg
clc
movsb
repz
shrb
add
loope
leave
mov
push
mov
mov
mov
push
cld
add
mov
add
add
xchg
xchg
aaa
mov
xor
cs
add
repnz
push
outsb
adc
ja
mov
sbb
inc
add
gs
ja
mov
add
in
test
push
mov
xchg
testb
sahf
sahf
inc
mov
mov
xlat
ss
and
mov
add
add
lret
aad
insb
add
mov
xor
pop
popa
bound
cmp
cmp
cmpsb
aad
pop
cmp
pop
mov
add
add
and
xchg
push
push
das
adc
add
add
add
add
add
jns
mov
add
add
add
add
inc
add
inc
test
add
mov
inc
mov
testb
cmp
inc
out
mov
pop
xor
add
testl
mov
jge
test
add
add
rcrb
inc
scas
xchg
js
sbb
jns
iret
call
add
add
mov
scas
in
cli
or
insb
add
adc
aad
add
pop
sub
sbbl
add
push
pop
mov
add
add
xchg
mov
mov
add
add
cmp
jbe
paddd
add
jne
jp
mov
rol
lret
cmp
scas
jmp
and
add
sti
add
add
xchg
pop
xor
add
add
add
add
ss
sub
out
inc
add
add
adcb
aaa
mov
add
lds
push
popf
arpl
hlt
jl
add
notb
addr16
nop
lock
out
or
add
and
fcomi
mov
pop
addr16
clc
jp
fisubrl
jb
add
add
add
out
nop
xor
add
fidivs
inc
adcl
mov
out
sbb
sarb
xor
push
lods
xor
ror
mov
sub
lret
inc
enter
mov
jmp
xor
pop
pop
add
fstpt
imulb
les
adc
inc
jp
pop
mov
dec
jle
sti
or
add
or
mov
or
mov
mov
je
in
adc
les
add
add
xchg
inc
mov
inc
add
mov
stc
inc
shl
icebp
push
stc
cli
mov
mov
add
add
fwait
scas
push
mov
inc
ja
push
inc
add
cwtl
dec
pop
lods
dec
push
pop
ljmp
in
and
add
add
inc
add
xchg
adc
add
add
mov
xchg
shl
add
add
xchg
cmp
jmp
loope
adc
rorl
in
das
arpl
cmp
ja
dec
or
add
add
sbb
push
mov
pop
jecxz
stos
xor
xchg
sahf
mov
mov
mov
xor
lds
pop
dec
jbe
fiaddl
push
and
mov
inc
jbe
push
adc
ljmp
add
add
loop
je
dec
adcl
push
cmp
dec
add
add
scas
and
add
add
add
sub
mov
sub
daa
and
mov
xlat
mov
add
add
adc
add
mov
das
xchg
xchg
in
xchg
xor
mov
add
add
add
add
add
mov
rolb
negb
and
ret
aaa
in
out
xchg
idivl
mov
xor
fcmovnb
insl
mov
shlb
pop
push
inc
add
mov
lds
add
je
adc
ljmp
jae
sub
add
add
sub
mov
sbb
mov
pop
inc
add
add
test
mov
out
ja
lret
aad
cs
add
add
test
out
cmp
cmp
cmpl
xor
aaa
or
in
jl
insl
adc
rolb
push
loope
movsb
xchg
movl
mov
add
add
pop
shrl
rol
fisubs
add
add
push
icebp
mov
call
gs
test
pop
ret
sar
xchg
leave
cmp
add
push
xor
add
add
add
insl
mov
dec
aaa
in
fstpt
cmp
sub
mov
or
add
add
aad
mov
cmp
cmp
mov
add
add
mov
cwtl
xlat
mov
xchg
fdivl
add
xlat
xchg
xor
ss
mov
lret
xor
sbb
jg
xlat
pop
sub
nop
cmp
test
push
mov
add
add
insb
add
jle
add
outsb
xchg
adc
cmp
dec
jp
sbb
mov
stos
loope
enter
mov
out
sbb
lea
lods
das
test
jns
cli
mov
inc
mov
add
add
adc
push
and
mov
lds
aas
xor
and
push
shl
lock
inc
or
mov
push
xor
jae
inc
pushf
inc
add
add
inc
sub
add
add
and
loope
cmp
push
and
add
add
fmull
sbb
cmp
pop
sarl
pop
int
jne
pop
pop
lea
push
std
popa
hlt
push
cmp
mov
add
aad
loope
sub
mov
inc
sbb
push
mov
in
mov
scas
popf
ja
js
adc
inc
add
add
push
mov
or
inc
out
or
mov
aad
fbstp
movsl
mov
popf
dec
lds
mov
mov
add
faddp
jb
mov
repz
mov
mov
and
mov
cmp
jne
cld
les
push
mov
jp
xor
scas
inc
jmp
adc
adc
ds
shl
stos
enter
xchg
mov
pop
stos
mov
stos
mov
outsl
int
mov
cmp
lea
pusha
add
add
dec
cmpl
cmp
cltd
in
add
mov
nop
mov
add
icebp
mov
lods
imul
orb
lock
std
mov
repnz
cmp
das
push
daa
or
mov
add
add
add
dec
add
add
cli
sub
add
add
sahf
cmp
icebp
test
mov
add
add
inc
shrb
cwtl
dec
add
es
idiv
lods
bswap
daa
jmp
push
xchg
fdivp
add
repz
mov
loopne
xor
push
idiv
imul
mov
adc
push
cmp
ds
inc
inc
pop
jmp
jg
cli
or
mov
shlb
cmp
adc
add
add
cmc
mov
enter
mov
fistps
out
es
adc
inc
sbb
pop
dec
mov
sbb
dec
add
cmp
add
add
mov
xor
add
push
pop
mov
stc
and
les
cmp
pushf
mov
dec
add
xor
fbld
mov
stc
xchg
sahf
jmp
add
sbb
and
add
add
jp
mov
ficoml
shrl
adc
xchg
sbb
add
pushf
push
dec
dec
imul
repnz
jo
jno
ljmp
mov
sbb
mov
adc
mov
ja
dec
hlt
cs
out
mov
cmp
clc
pusha
add
bound
add
jle
add
mov
cmpsb
js
orl
mov
cwtl
cwtl
clc
ss
xchg
mov
popa
push
int3
gs
dec
xchg
fsts
pop
loopne
outsb
dec
stos
lea
jl
test
es
cwtl
mov
add
add
daa
pushf
add
mov
adc
pop
stos
icebp
ficoml
rcr
popa
cmpl
jae
mov
jp
mov
popf
das
sub
add
push
adc
outsb
fucomp
cld
mov
decb
add
js
and
shl
inc
ret
rorb
sbb
scas
sbb
mov
mov
fimull
add
add
adc
sbb
xchg
mov
xchg
jge
test
add
add
or
add
add
movsl
cmpsb
jmp
or
mov
xchg
adc
cltd
jmp
add
sahf
pop
or
dec
pop
push
mov
add
xchg
xchg
cli
shlb
add
xor
xchg
pop
sbb
adc
xchg
dec
imul
add
cmp
pop
lcall
mov
jae
imul
aad
jecxz
mov
insb
add
add
gs
or
ficoms
jno
add
add
mov
jb
mov
out
sub
fists
add
add
outsl
jecxz
enter
mov
movsl
push
mov
add
mov
and
mov
mov
add
xchg
mov
mov
inc
shlb
pop
inc
pop
adc
adc
ret
loope
stc
mov
adc
std
dec
add
es
jne
mov
add
add
adc
xchg
es
pop
sarb
add
out
add
sub
mov
hlt
pop
jbe
pop
add
inc
fidivl
cmpsl
cmp
cmc
stos
inc
xlat
lock
nop
scas
dec
add
mov
add
test
aam
clc
and
add
mov
and
lret
les
add
add
push
dec
push
sbb
and
mov
dec
fisttps
ret
rcr
inc
cmc
mov
popf
lahf
add
test
or
add
xchg
inc
add
inc
mov
sbb
or
mov
xchg
xor
mov
movsl
pop
pop
xor
popl
add
rcrb
adc
push
jp
cli
movsl
or
push
dec
imul
pop
or
and
mov
xchg
push
not
dec
add
xor
xchg
add
add
add
add
mov
jo
out
orb
pop
cmc
jecxz
jecxz
mov
xor
dec
add
add
std
and
enter
add
cmp
add
add
jns
xchg
sbb
inc
add
add
sub
mov
jae
or
add
add
add
add
std
inc
add
jle
xchg
xchg
sub
add
add
and
mov
in
stos
and
mov
stos
in
pop
xchg
push
or
mov
lods
jl
fldl
cwtl
divl
push
and
and
mov
add
add
dec
sub
add
add
sbb
add
add
jmp
add
add
in
xor
mov
sti
scas
dec
into
ljmp
add
add
mov
mov
add
mov
add
add
mov
jmp
sub
add
add
sbb
lock
add
add
or
idivl
imul
imul
outsl
inc
inc
jns
add
add
stc
adc
add
add
jb
add
mov
in
push
xchg
scas
push
push
adc
daa
in
push
inc
sub
out
lods
daa
xchg
mov
aas
dec
add
add
xor
add
add
roll
pop
out
pop
push
sbb
add
cwtl
int3
dec
ljmp
mov
mov
test
adc
xchg
and
mov
xor
xor
mov
mov
push
pop
or
mov
add
add
mov
add
dec
aas
xlat
jg
push
bound
sbb
aam
test
add
xchg
loope
cmpsl
add
push
loopne
mov
mov
mov
add
aaa
rcr
mov
add
add
xlat
in
and
add
add
mov
xchg
mov
mov
xor
xchg
and
add
mov
je
xchg
add
aas
or
mov
xor
jge,pn
adc
add
jg
push
addl
mov
loopne
mov
xor
rclb
fildl
mov
push
mov
push
pop
jmp
cs
or
mov
sahf
arpl
sbb
iret
and
add
add
inc
xchg
cmp
mov
mov
pop
push
fwait
sbbl
inc
add
add
mov
dec
add
add
add
out
dec
push
cltd
leave
xchg
cmpsl
movsb
jp
das
icebp
orps
addr16
xchg
mov
add
add
push
adc
xchg
cmp
xchg
push
xchg
xor
insb
add
xlat
push
and
add
add
ss
leave
int
bound
add
ss
mov
stos
add
inc
jmp
ret
inc
jbe
jae
xor
out
jno
add
add
sub
add
add
lahf
mov
add
lcall
cli
mov
mov
add
adc
fwait
lods
xor
loope
fstpl
mov
xchg
mov
mov
repnz
mov
adc
xor
push
mov
cmp
loop
divb
add
add
ficomps
js
stc
jp
push
fnsave
xor
inc
mov
push
mov
out
jp
es
jp
xorb
ret
enter
clc
leave
aam
stos
dec
add
add
xchg
ret
mov
stc
push
push
and
mov
mov
mulb
push
adc
add
scas
sbb
inc
add
les
add
add
or
pop
cmp
push
out
iret
nop
icebp
push
fwait
arpl
les
xchg
and
add
sar
cmp
inc
add
add
cmp
pushf
push
add
jg
iret
sldt
mov
leave
lea
pop
pop
push
leave
pop
loop
xor
fsubs
push
lock
adc
jg
mov
imulb
cmp
in
pop
adc
lret
jo
add
mov
xor
imul
dec
test
push
xlat
mov
mov
lahf
and
ret
ss
adc
loope
pushf
ret
test
dec
add
test
ds
and
cmpl
in
std
icebp
test
pop
shll
add
mov
mov
mov
sbb
cmp
lcall
rcll
or
add
loope
or
mov
dec
test
mov
aas
cmp
add
push
cmpsl
aas
cli
xor
xchg
fsub
sub
mov
sbb
test
lds
addb
add
or
add
add
cmc
jmp
pop
add
mov
sub
add
add
scas
push
dec
popa
dec
xor
fiadds
sahf
in
pop
sub
add
add
push
mov
add
add
jg
jns
add
add
imul
add
push
lret
inc
pop
and
add
add
fwait
or
add
add
jecxz
add
adc
mov
std
fwait
add
add
inc
add
add
testl
into
cmp
ret
cltd
mov
add
ljmp
xlat
jle
mov
pop
dec
add
add
aad
mov
ljmp
add
add
mov
add
add
sti
mov
add
add
cmp
mov
mov
cltd
jo
push
jp
xchg
add
xchg
aas
sbb
stos
cwtl
mov
or
add
rorb
in
add
add
xor
push
or
add
add
sbb
dec
in
push
jbe
rcll
xchg
test
mov
adc
stos
arpl
bound
add
add
add
and
lahf
fmul
lea
pop
push
stc
lret
or
add
fwait
scas
cmp
imul
imul
dec
add
add
dec
out
or
adc
push
jecxz
add
add
scas
mov
in
add
xor
stos
cmp
xchg
dec
add
lcall
rolb
jmp
popf
mov
sub
mov
xor
add
add
xor
jo
sbb
rolb
add
sub
mov
inc
stc
sub
inc
add
add
lods
xor
inc
add
add
ret
dec
jae
mov
inc
add
add
stos
ret
dec
add
add
adc
add
add
sbb
aaa
das
in
mov
add
repnz
mov
test
fldl
mov
insl
dec
sub
movsl
pop
daa
pop
add
mov
scas
adc
jl
jg
xor
mov
xlat
dec
xchg
inc
add
add
cs
xor
jae
add
add
lods
cli
movsl
jp
add
add
nop
lea
pop
cmpb
inc
add
add
movsl
out
sbb
push
inc
stos
fldl
mov
jbe
aad
repnz
cmpsb
adc
mov
pop
fld
cltd
rcr
xor
sbb
add
shl
xor
add
jb
mov
sub
add
add
das
jae
lcall
insl
xlat
mov
mov
add
lds
add
mov
add
cltd
loop
faddl
mov
clc
xchg
xor
lret
dec
mov
add
stos
ljmp
add
add
mov
and
and
add
add
pusha
add
add
mov
mov
pop
pushf
add
add
add
add
ds
add
pop
addr16
lcall
aas
dec
into
cmp
aad
out
mov
sub
cwtl
orl
lahf
addr16
and
fnsave
popf
lods
cmpsl
punpckldq
mov
fisubrl
add
xor
add
mov
mov
jle
int
popa
fnsave
dec
add
add
sahf
mov
add
ljmp
mov
push
add
mov
add
add
mov
and
xchg
addr16
lea
or
outsb
inc
mov
sahf
cwtl
or
mov
push
dec
add
out
push
add
add
inc
add
add
mov
xchg
xchg
xor
sarb
mov
pop
nop
push
pop
adc
or
add
add
fsubs
add
add
or
add
add
xor
or
xchg
cld
sbb
out
pop
mov
add
add
rorb
shl
int3
add
int
inc
shr
inc
add
add
push
imull
cmc
stos
sub
std
adc
out
add
xchg
lret
cmp
sti
sbb
and
xchg
enter
mov
cmpsb
lret
inc
add
pop
dec
loope,pn
sarb
imul
lods
adc
pop
loop
lcall
mov
jnp
pop
mov
cmp
add
xchg
push
aaa
xor
cmpsb
xor
es
stos
divl
mov
add
jl
addl
push
stos
ds
hlt
push
sbb
mov
movsb
mov
mov
add
add
lods
jb
xor
and
add
add
dec
dec
sbb
out
enter
out
rclb
add
mov
leave
cmp
add
add
sbb
hlt
dec
add
add
push
inc
add
cltd
jo
push
fiadds
add
add
pop
int3
arpl
mov
aaa
imul
ds
xorl
imull
in
lock
orl
cmp
mov
xlat
test
pushf
rcrb
call
mov
sub
add
add
xchg
loopne
addr16
icebp
popa
shl
orb
pop
mov
lret
pop
add
add
adc
push
mul
popl
sub
ljmp
cmp
sti
sub
or
push
mov
jbe
cltd
sub
gs
cmp
sbb
xchg
hlt
sti
dec
mov
sub
dec
or
dec
lds
lret
mov
add
add
add
gs
mov
fsub
mov
adc
or
xlat
and
mov
out
jnp
fdivrp
int
cmp
mov
push
mov
add
lahf
daa
scas
jecxz
in
cltd
in
sub
shlb
fucomip
xchg
enter
int
clc
add
add
add
sar
pop
pop
jbe
popf
jmp
mov
adc
out
je
sub
add
sub
movntq
out
and
sarb
js
nop
aaa
cltd
sub
ja
pop
pop
int
shl
ret
ss
add
dec
orb
in
insl
mov
sub
js
sub
add
add
add
jp
mov
ja
ds
or
add
xlat
xor
jecxz
in
mov
jae
xchg
enter
push
sbb
jp
pop
and
popa
les
push
mov
inc
add
add
xchg
jge
sbbb
xchg
mov
ds
aas
cld
sub
mov
cs
push
cmp
lret
stos
pop
push
dec
fsubrs
inc
fcmovu
adc
pop
ss
addr16
jae
sbb
inc
repnz
pop
inc
mov
icebp
mov
or
arpl
aaa
into
add
test
xor
jecxz
adc
cmp
fucom
xor
or
sarb
add
add
mov
add
push
repz
icebp
sub
and
mov
rcl
addb
add
add
outsb
es
or
add
add
fistpl
test
mov
orb
xor
pop
dec
push
out
xor
lea
call
dec
mov
add
nop
push
mov
cmc
mov
pop
inc
xchg
dec
add
push
xor
imulb
inc
outsb
mov
sbb
fstps
push
sub
mov
add
add
cmpsb
sub
add
add
add
pop
arpl
hlt
aaa
mov
sub
in
xchg
popf
mov
mov
mov
inc
add
xchg
pop
mov
rcrb
and
hlt
arpl
das
lcall
subb
ss
outsl
add
mov
dec
mov
add
lcall
loopne
lret
lahf
hlt
pushw
adc
lock
xor
cmp
out
mov
and
daa
cmp
jge
mov
cs
sbb
xor
sub
dec
add
xor
shlb
stos
or
lcall
add
add
jge
popf
add
mov
xor
icebp
mov
cmp
jno
add
shlb
xchg
mov
sub
mov
jae
lods
notb
mov
fnsave
add
add
sub
dec
pop
mov
orb
add
add
sbb
mov
movsb
fsts
pop
cmp
je,pn
mov
add
add
jg
fidivrs
mov
add
inc
add
add
jp
lock
push
clc
adc
testl
stc
popf
xchg
pop
rcll
push
xchg
mov
and
sti
test
add
loope
add
jno
sahf
adc
mov
fisubl
lods
add
add
rorl
and
mov
push
scas
lret
fistpl
sub
push
push
push
adc
push
fnsave
in
aaa
mov
inc
test
mov
add
popf
pop
iret
sbb
mov
push
loop
cmp
mov
cmp
add
mov
add
add
dec
shl
xchg
aas
mov
fnstsw
aaa
push
cltd
push
pop
or
ret
pop
lods
in
xchg
in
jne
inc
adc
or
imul
mov
pushl
push
dec
inc
add
subl
scas
repnz
adc
xchg
push
outsl
idivl
add
push
xchg
or
adc
xchg
pushf
mov
add
in
out
xor
pop
pop
cmp
jbe
add
add
pop
cmp
repz
adc
add
mov
mov
outsl
icebp
dec
push
cmp
adcb
xlat
xchg
xor
push
and
lret
or
sub
daa
enter
add
inc
arpl
inc
pushf
adc
stc
repz
add
lea
push
sbb
xchg
shll
add
mov
leave
shlb
mov
pop
xchg
jb
jmp
xchg
jg
pusha
add
add
cmp
add
mov
pop
cmp
insb
add
sbb
mov
leave
jle
pop
cmpsl
test
cmpb
mov
inc
add
add
data16
cmp
push
xchg
cli
outsb
jle
loope
add
add
hlt
fdivrl
add
add
mov
or
mov
jnp
and
add
test
xchg
pop
mov
xchg
lahf
sbb
popf
pop
sbb
xor
ljmp
add
mov
or
pop
push
call
push
into
cmp
push
sub
add
add
ljmp
mov
mov
xchg
xchg
sub
sbb
mov
xchg
xchg
mov
add
pop
arpl
xor
mov
mov
ret
mov
push
pop
ret
inc
mov
inc
lret
cwtl
push
lock
arpl
js
jl
push
mov
pop
cmpsl
lahf
mov
leave
xor
or
jmp
cs
add
sbb
adc
mov
orb
pusha
add
push
sbb
or
ret
add
add
mov
outsb
jbe
mov
xchg
inc
jle
mov
jge
sbb
dec
add
loope,pt
inc
mov
dec
add
add
test
dec
push
jmp
mov
cltd
aad
pop
cmpsb
push
subl
ret
mov
scas
inc
dec
xor
mov
out
cld
jle
pop
xor
add
cld
cmp
add
add
stos
jne
rcrb
jo
sahf
shr
mov
mov
add
fwait
test
mov
sub
sbb
mov
cmp
stc
pop
imul
adc
cmp
cmp
lmsw
fcomps
dec
add
add
dec
xchg
sahf
pop
xor
or
add
push
stos
jnp
lods
outsb
jle
xchg
xor
shlb
mov
push
push
xchg
dec
xor
add
pop
pop
lock
adc
push
add
add
pop
ficomps
cmp
pop
jg
push
mov
add
add
add
add
push
test
jge
mov
sahf
or
jp
add
pop
and
xor
fwait
jne
push
enter
add
add
xchg
movsb
push
cmpl
enter
and
mov
cmp
int3
hlt
insl
cmp
sub
mulb
jl
sbb
lcall
add
sub
mov
add
add
xchg
add
jle
add
jbe
xchg
cwtl
in
cmp
xchg
imul
stos
xchg
lods
pop
jnp
add
adc
sbb
imul
or
add
add
dec
sbb
scas
insl
jge
loop
int3
hlt
stos
sti
mov
and
mov
mov
push
push
lret
mov
and
or
pop
lea
lret
mov
shll
lds
inc
pop
and
mov
fcomp
push
inc
xor
pusha
add
xchg
and
mov
js
add
add
xor
add
imul
add
jmp
mov
daa
mov
or
add
aam
loopne
imul
fbstp
ss
lret
loop
mov
or
add
add
sahf
pop
mov
aas
call
mov
mov
add
add
add
pusha
add
add
add
rcrb
inc
add
add
sub
and
add
add
and
add
std
sbb
add
add
and
add
add
mov
or
add
movsb
jne
fisttps
ljmp
hlt
sbb
sub
push
mov
jo
in
dec
jle
notl
fnstcw
jp
jg
jne
mov
mov
dec
mov
add
mov
cmp
pop
or
out
loop
add
add
jae
or
mov
pop
adc
daa
sub
mov
adcb
orl
xchg
push
pop
cwtl
push
xchg
es
adc
nop
sub
sub
jp
mov
ret
sub
mov
mov
mov
andb
les
cld
mov
fadd
fildl
stc
dec
rclb
xor
lock
stos
cmp
fwait
mov
push
fdiv
cmpsb
icebp
outsb
fcmovne
mov
add
test
std
mov
adc
outsb
sbbb
stos
pop
mov
mov
add
rolb
jp
rcrb
sbb
out
fcoms
lds
xlat
adc
imul
pop
inc
out
int3
xor
aaa
shr
sbb
imul
pop
test
ret
or
mov
ss
pop
sahf
lock
add
push
pusha
add
add
or
mov
xchg
mov
add
repz
add
add
insl
fdivs
or
add
adc
mov
movsb
mov
sbb
les
sbb
jecxz
add
pop
inc
push
faddl
cmp
imul
dec
bt
dec
cmp
es
jo
sub
add
add
das
daa
jne
hlt
lahf
mov
xchg
and
mov
add
add
fsubs
push
inc
add
add
jmp
mov
jg
sub
add
add
cld
or
add
add
aaa
enter
fsubr
lcall
popf
or
push
lods
add
add
fistpl
jae
add
outsl
mov
rclb
pop
mov
test
adc
push
or
cmpsl
cmpsl
add
add
add
add
push
test
jmp
xor
add
mov
stos
lea
add
add
aam
push
icebp
loope
int
jecxz
lahf
push
enter
push
ds
sub
mov
sub
push
mov
xchg
xchg
sub
add
add
je
outsl
ljmp
cli
insl
leave
push
js
stc
movsb
and
mov
add
add
popf
and
or
adc
push
mov
out
mov
ljmp
stos
js
int3
aas
mov
daa
mul
sbb
aad
add
popa
fsts
insb
add
ret
add
pop
or
add
add
ds
sub
add
jbe
adc
movsl
das
out
repnz
out
add
add
leave
ud2
jne
fmuls
ret
cld
xchg
mov
jp
std
sbb
lea
xchg
fwait
mov
xor
xchg
dec
push
lea
test
add
add
clc
pop
push
mov
mov
add
add
add
add
or
add
add
mov
inc
sbb
sub
mov
add
xor
add
mov
add
add
pop
f2xm1
lahf
or
push
icebp
or
mov
aam
aas
inc
add
mov
mov
repz
xchg
jmp
std
addr16
mov
cmp
cmp
cmp
cwtl
jp
add
add
cmpsl
out
stos
xor
in
enter
add
add
stc
push
pop
rol
fistl
dec
add
add
mov
out
jns
inc
mov
mov
fnstsw
add
add
mov
int
adc
push
dec
mov
rcr
inc
add
add
and
outsb
scas
inc
mov
icebp
sarl
or
unpckhps
jmp
dec
add
add
sti
bound
mov
mov
adc
add
out
add
leave
addr16
mov
add
loopne
idivl
cs
dec
add
popf
les
mov
loop
in
mov
es
add
add
std
inc
add
int3
cs
mov
out
mov
add
add
add
cmp
pushf
repz
jle
jnp
sub
jo
lods
add
add
pop
dec
add
mov
pushf
inc
xchg
outsb
mov
add
add
mov
pop
mov
in
and
add
mov
addr16
lret
lods
gs
mov
insl
push
pop
test
xor
ja,pn
xlat
enter
sub
dec
add
add
pop
int3
out
adc
imull
add
add
push
push
mov
iret
mov
push
add
cs
std
mov
adc
fldenv
cmpsl
data16
fistpl
mov
aam
aad
shrl
add
xor
loope
enter
sbb
add
stos
pop
pop
push
imul
add
cli
xlat
inc
add
add
clc
dec
out
add
add
lret
push
sbb
jns
inc
faddp
mov
movl
and
add
add
pop
popf
lahf
xor
mov
popa
stos
imul
add
cmpsb
outsl
sti
aad
mov
lock
pop
fldt
mov
xor
dec
sbb
xchg
cmp
cmp
add
add
add
sub
jo
pop
pop
inc
xchg
mov
mov
daa
xlat
and
push
inc
jno
pusha
add
cmc
rclb
mov
pop
and
add
popa
dec
add
add
mov
xor
fldcw
add
mov
sbb
xchg
sbb
mov
push
cli
mov
mov
stos
stos
adc
add
add
cmc
stos
in
dec
pushf
lods
dec
xchg
int3
jmp
jl
aaa
cmp
push
std
xor
fistps
icebp
inc
xorl
mov
add
cmpsl
push
adc
xor
add
sbb
aas
pop
sbb
add
add
mov
mov
or
cli
push
sarl
int3
or
cltd
mov
sti
jbe
mov
push
cs
jns
insb
add
add
push
dec
push
testl
mov
mov
das
mov
add
pusha
add
add
sbb
mov
lcall
outsl
push
stc
fwait
int3
cmp
andb
add
dec
sbb
andl
ficompl
movsw
sub
mov
mov
ret
shrb
mov
mov
add
lods
jmp
adc
iret
and
cmp
xor
jb
sub
mov
imul
add
mov
nop
mov
stos
mov
clc
push
addl
inc
movsl
push
aad
aas
cmpl
cli
pop
mov
mov
inc
add
fwait
push
mov
aaa
lret
pushf
lods
leave
hlt
adc
in
add
add
mov
pop
adc
fimull
jg
shrl
add
vpavgw
add
ljmp
xchg
mov
in
add
sbb
push
xor
add
xchg
shlb
pop
lock
sub
mov
add
add
add
int
push
cwtl
clc
fwait
or
test
dec
jp
iret
inc
and
out
shll
add
rcll
add
out
mov
ret
out
nop
lock
mov
ret
mov
mov
xlat
ja
ret
lds
sbb
sahf
jmp
xor
fsubrs
add
inc
add
stos
mov
inc
orl
add
add
arpl
add
mov
sbb
cmp
iret
xchg
ljmp
pop
xor
mov
jmp
rolb
mov
and
cmp
mov
mov
xlat
mov
es
test
mov
cmpsb
adc
and
mov
sub
inc
push
jae
push
stos
sti
pop
and
pop
jecxz
jo
xchg
mov
add
add
jge
mull
and
ret
xchg
mov
xor
add
add
push
imul
add
or
sub
mov
and
ret
and
jae
inc
add
pop
stc
dec
jo
sbb
add
xchg
mov
cli
add
cmpsl
mov
sbb
sub
rcrl
xchg
ds
add
add
add
js
mov
insb
add
jecxz
jo
push
outsb
xlat
outsl
popa
inc
push
jns
cmp
or
mov
addr16
or
mov
sbb
js
test
ds
setl
test
mov
jb
mov
shll
dec
mov
mov
lds
and
mov
mov
mov
mov
aas
and
lods
aad
mov
add
add
out
hlt
into
cmp
mov
inc
js
mov
mov
inc
xchg
stc
out
mov
js
lcall
push
or
add
add
pop
push
cwtl
repz
fcom
mov
push
xorb
enter
mov
push
pshufw
icebp
enter
stos
mov
push
or
mov
pusha
add
add
add
pop
mov
add
mov
mov
adc
add
mov
adcb
popa
xchg
aas
aaa
fwait
stc
repz
add
add
jecxz
adc
sub
pop
cs
add
add
arpl
sbb
stc
push
inc
add
add
mov
adc
stos
xchg
movsl
shlb
add
xor
push
mov
test
add
add
add
sub
add
add
js
xchg
lahf
xor
int
jp
data16
pop
pop
aam
lahf
in
pop
adc
stos
push
sbb
repz
add
add
pop
in
mov
dec
add
add
mov
add
xchg
mov
popf
dec
sub
stc
mov
adc
jecxz
ret
jle
imul
fwait
lods
in
add
mov
dec
in
add
popa
sbb
fisubl
lret
pop
out
scas
sbb
je
mov
ret
and
add
xchg
dec
add
pop
sub
mov
addr16
xchg
aad
or
clc
aam
out
add
add
jl
loop
dec
inc
or
mov
add
add
or
add
add
push
sub
push
xor
adc
add
add
inc
cmp
and
add
add
mov
repz
jmp
cwtl
push
scas
cli
mov
push
mov
insb
add
push
test
add
pop
jae
aas
negl
dec
jle
inc
add
mov
mov
mov
add
add
and
add
add
cs
jbe
add
add
test
fstl
lock
xchg
or
out
push
dec
pop
lods
das
icebp
jmp
and
pop
xorl
add
add
add
inc
js
ja
pop
ret
or
daa
dec
in
inc
xor
pop
fcmovb
arpl
int3
sub
mov
in
mov
push
mov
xchg
insb
add
add
pop
push
in
loop
push
loop
pop
cwtl
xchg
ja
loop
or
jae
push
sbb
mov
push
js
mov
xor
push
push
or
add
add
in
sub
stos
insb
add
lds
push
xchg
das
sub
mov
push
mov
ds
outsl
bound
mov
mov
loop
or
xlat
xchg
or
mov
sub
sbb
mov
imul
or
add
add
jl
scas
lea
bound
jge
xor
mov
mov
pop
data16
movsl
sub
add
add
or
adc
xor
insl
fwait
dec
movsb
fsubr
call
inc
xchg
sti
xchg
stos
in
mov
dec
lahf
mov
sbb
dec
test
mov
dec
roll
mov
mov
push
rclb
sarl
add
mov
add
jb
addb
xchg
in
dec
and
add
xlat
adc
sub
mov
push
subl
sbb
push
sahf
outsl
push
test
xchg
inc
gs
xlat
or
dec
es
imul
or
add
add
fidivl
call
pushl
nop
aad
push
mov
xchg
push
mov
ficoms
xchg
pushw
mov
call
add
inc
data16
fdivl
mov
jp
add
sbb
adc
adc
mov
and
jne
rcr
in
lock
not
mov
mov
mov
aad
andb
add
data16
mov
push
ss
aas
es
add
mulb
mov
std
mov
sti
pop
mov
jl
inc
xchg
mov
sbb
mov
add
add
ljmp
or
add
add
pop
cmpsb
cmpsb
scas
es
int3
mov
dec
add
add
inc
add
add
sti
dec
insl
pop
loop
or
addb
or
dec
add
add
jmp
push
outsb
mov
mov
in
data16
add
add
icebp
int3
cwtl
inc
in
inc
sbb
in
xchg
test
hlt
xor
add
test
add
add
fnsave
add
push
mov
sub
mov
dec
jns
push
mov
cmp
lods
add
pop
in
xchg
xchg
cmp
jb
cli
hlt
adc
scas
xor
out
ret
and
push
xor
or
add
lahf
sbb
xchg
cmp
push
sub
sbb
or
add
add
aaa
mov
int
mov
add
add
add
inc
add
out
jmp
dec
add
add
mov
je
jmp
add
in
jo
push
sbb
add
add
stos
ja
into
cs
pop
pop
jno
shll
adc
or
or
add
inc
add
add
mov
mov
mov
add
add
cmpsb
pop
cmp
sub
mov
mov
fcomip
add
mov
push
in
add
add
add
cs
ret
xchg
pop
fdiv
fnstcw
es
mov
add
jle
pushf
pushf
popa
int3
mov
add
shrb
mov
data16
sbb
adc
scas
sub
scas
sub
inc
add
add
add
inc
add
add
add
jnp
mov
leave
mov
ss
es
aaa
bts
adc
add
add
push
sti
lcall
or
xlat
ds
inc
sub
mov
mov
out
ljmp
sub
xor
add
aam
and
mov
add
xor
and
mov
jecxz
mov
mov
pop
and
add
add
sbb
sub
add
call
dec
add
add
mov
mov
sbbb
add
add
test
push
sub
add
add
ret
inc
into
ret
sbb
lods
xchg
xchg
jmp
pop
in
cmp
push
aam
add
add
pop
imul
out
stos
dec
cmp
rclb
jne
jne
sbb
add
push
lahf
hlt
loopne
or
add
out
scas
popf
xor
add
xchg
rolb
cli
mov
pop
cmpsl
arpl
ljmp
mov
add
mov
add
add
ljmp
roll
mov
xchg
stos
add
sub
mov
fstps
sub
lock
mov
mov
lret
cli
rcrl
test
mov
repnz
cmp
cmpsb
push
dec
pop
inc
add
add
add
iret
or
mov
cld
push
or
shll
sti
or
add
add
fnstcw
mov
xchg
mov
add
ljmp
das
pcmpgtd
dec
sar
xchg
std
cmp
or
sbb
inc
sub
push
or
add
mov
mov
add
aam
mov
lods
and
mov
mov
add
test
add
add
mov
and
jmp
add
cltd
inc
mov
mov
ja
add
mov
xchg
mov
test
adc
std
insb
add
add
or
bound
pop
pop
jo
pushf
cmp
and
inc
popa
arpl
mov
xor
add
add
xchg
xchg
fwait
and
sub
add
add
push
jns
xchg
sahf
sub
dec
mov
in
add
add
add
or
add
add
jp
dec
mov
mov
xchg
pop
popa
pop
stc
fistpl
adc
mov
mov
inc
dec
xor
dec
inc
xor
popa
inc
cmpb
cmc
adc
mov
data16
ror
lret
add
add
jae
lret
mov
adc
shl
cmp
cmp
mov
add
add
popf
adc
push
stos
push
fstpt
and
add
mov
stc
cmp
and
add
add
mov
xor
sub
push
mov
pop
data16
add
add
lcall
mov
mov
mov
and
add
add
sahf
sbb
push
mov
jne
sbb
and
cmpsb
dec
add
stos
stos
out
imul
push
xchg
add
mov
ret
in
and
jp
xchg
add
add
add
lret
sub
mov
andb
jmp
inc
push
jge
cmp
mov
jecxz
test
xchg
xchg
add
leave
push
jbe
add
in
insb
add
add
jne
pop
outsb
mov
dec
in
lods
adc
ret
lods
mov
jl
push
fcoml
xor
pop
outsl
add
in
fiaddl
add
loopne
nop
mov
adc
fildll
push
cmp
pop
out
dec
subb
xchg
fdivs
roll
xsha256
cmpsb
pop
xor
add
add
dec
adc
rclb
pop
clc
cmp
imul
ss
dec
js
or
lahf
and
mov
int3
or
add
stos
mov
push
inc
add
add
rol
dec
loopne
imul
orb
cmp
in
aas
push
add
pop
sub
mov
xchg
lods
hlt
mov
in
nop
loop
clc
nop
and
add
pop
in
scas
jp
mov
or
xor
xor
add
add
inc
add
add
add
test
pop
push
jmp
add
add
push
pushf
popf
inc
cmp
push
stos
mov
repz
pop
push
mov
lods
movl
movsl
dec
add
add
lcall
pop
push
add
mov
jmp
js
popf
push
sbb
stc
sbb
inc
or
hlt
dec
int
push
adc
data16
into
lds
notb
lret
push
sbb
notb
mov
jmp
cmpsl
scas
pop
lds
mov
ljmp
jb
inc
add
jle
test
add
add
jp
repnz
movsb
mov
fwait
pop
sbb
cmc
mov
pop
dec
test
jnp
test
or
add
sbb
jbe
repz
xchg
push
push
pop
push
dec
xchg
mov
hlt
rcrb
dec
add
add
add
add
add
xchg
jbe
andb
add
insb
add
out
mov
sbb
test
in
sub
dec
add
xchg
test
dec
stos
pop
sbb
clc
dec
mov
xor
mov
push
cmp
jo
xor
jg
cmp
ja
loop
out
and
rorl
push
and
mov
and
mov
popf
mov
bound
sti
scas
shll
push
shll
adc
nop
dec
cmp
push
xor
pop
inc
jbe
iret
mov
clc
add
mov
fidivrs
int
add
mov
or
add
add
sub
in
cmp
push
into
pop
sti
pop
arpl
cmpsl
xor
cld
in
add
nop
fwait
js
cmp
add
mov
add
mov
adc
enter
imul
xor
fnsave
add
push
cmp
and
cmc
jne
push
popa
pusha
add
add
jle
push
lods
outsl
xor
mov
movsl
int3
dec
add
add
ret
add
add
add
add
add
int
push
fnop
jp
sbb
enter
cmp
xchg
jp
cli
scas
xor
push
scas
or
pop
jmp
mov
mov
out
jbe
data16
mov
dec
dec
test
add
add
add
divb
hlt
mov
add
iret
and
add
add
or
test
lods
xor
push
mov
ja
xor
loop
jg
insl
dec
or
test
fisttpl
add
add
daa
and
jnp
mov
ja
ja
sbb
aas
mov
add
add
adc
shll
add
add
arpl
ss
imul
and
js
jecxz
out
dec
shll
std
adcb
add
sub
mov
mov
add
xchg
sub
out
jle
notb
pop
push
and
inc
ret
sub
mov
mov
inc
mov
rorl
dec
pop
mov
daa
xor
hlt
nop
ja
jae
fisttpl
add
add
shlb
xchg
gs
int
test
mov
fildll
icebp
jge
add
add
mov
shll
push
sub
add
add
sub
add
add
add
add
add
insb
add
faddl
scas
mov
popf
or
add
add
adc
lea
jo
dec
push
ficoms
jl
mov
mov
fsubrp
cmp
jl
int
push
loopne
xor
add
and
pop
and
adc
daa
adc
jb
add
push
jp
add
add
adc
pop
mov
xor
add
xchg
sahf
je
sbb
or
dec
adc
nop
in
mov
ss
jbe
cltd
pop
inc
jne
popa
pop
mov
cvtps2pd
sbb
mov
sub
or
mov
jae
shlb
inc
or
add
add
add
sidtl
outsb
int3
int
rcrl
add
add
mov
dec
add
add
addr16
iret
sbb
jle
jge
idivb
fisubrl
add
popa
push
push
stc
mov
mov
or
add
add
mov
cwtl
xor
fdivrl
ret
cmpsb
sub
mov
rolb
jecxz
xchg
icebp
cmpsl
pop
mov
gs
add
add
in
cmpsb
cmpsl
bound
xchg
pop
data16
movsl
xchg
cmpsl
rolb
lea
out
mov
jle
mov
dec
in
cmp
xorl
subb
into
lret
jmp
cli
dec
fimull
lcall
cmp
lcall
mov
int3
cmc
cmp
push
ja
movsb
enter
add
and
insb
add
mov
lahf
mov
inc
cld
or
mov
pop
repz
mov
fwait
add
add
add
test
add
mov
mov
add
int3
dec
stc
clc
adc
or
add
arpl
in
pop
adc
mov
xchg
lock
dec
dec
add
and
ja
lret
add
stos
cltd
rclb
push
xor
or
push
test
add
add
mov
jecxz
mov
dec
add
add
ljmp
add
add
sub
add
add
adc
pusha
add
add
aam
out
arpl
xchg
xchg
mov
loop
pop
or
data16
dec
cmp
fsubp
mov
mov
addr16
sbb
xor
aaa
imul
clc
stc
imul
mov
stc
je
push
sub
mov
mov
jmp
or
mov
mov
imul
xor
add
add
fsubl
repnz
bound
push
push
add
mov
scas
xor
jge
gs
ret
push
lods
cmp
mov
jg
jnp
insb
add
add
pop
out
outsl
imulb
add
add
sub
mov
in
mov
in
int
jp
jne
aas
es
add
add
loopne
sbbl
fld
sub
cmp
add
push
add
cmpsb
shl
inc
add
add
xchg
fistpll
xor
cltd
aad
pop
pop
sbb
add
add
add
fsub
jmp
cltd
sbb
loop
add
or
add
add
ds
leave
jecxz
add
sbb
loop
fisttps
add
add
add
imul
pop
adc
test
insb
add
mov
inc
jmp
ret
orl
inc
cmp
loopne
aas
and
mov
push
pop
inc
rclb
mov
sbb
xchg
dec
mov
xchg
fiadds
jae
inc
lea
and
sbb
leave
lea
ds
and
add
add
leave
insb
add
add
push
cmp
jmp
cli
test
xchg
inc
add
cs
lds
popl
mov
push
or
jmp
pop
dec
movsl
sbb
cmpsl
mov
pop
icebp
and
add
add
xorb
roll
insb
add
and
jge
movsb
ror
sub
xor
daa
xor
cmpsl
scas
jmp
pusha
add
add
add
lods
insb
add
add
or
je
mov
shrl
add
mov
add
add
subb
pop
pusha
add
sahf
xor
sub
add
add
push
mov
mov
add
add
pop
sti
sub
mov
and
push
xchg
in
mov
inc
add
add
mov
adc
pushf
or
add
add
daa
mul
test
or
push
mov
sub
ret
mov
jae
lcall
pop
into
push
and
mov
xchg
mov
rcll
push
das
add
cmp
or
fcomps
add
add
mov
add
or
mov
mov
jo
jecxz
mov
add
ds
insl
jp
cmp
xlat
lcall
cmp
mov
mov
jns
xor
push
and
test
cmp
test
imul
add
inc
add
cld
std
ficoml
add
inc
add
add
add
sbb
stos
jle
push
mov
in
pop
imul
add
add
inc
pushf
sub
mov
dec
imul
add
add
add
inc
neg
mov
test
pushf
call
xorb
add
push
andl
add
or
out
mov
rorl
rcll
ret
movsl
lds
xchg
ljmp
push
cmpsb
adc
push
imul
add
cmp
push
mov
test
frstor
add
adcl
pushf
ja
dec
add
add
sub
hlt
ret
lods
pop
mov
mov
das
lcall
push
and
repnz
mov
fdivs
mov
sbb
add
cmp
sub
or
and
and
mov
add
add
add
add
mov
cmpb
sub
add
add
mov
jae
in
lret
test
mov
pop
dec
dec
pop
bnd
test
add
clc
pop
cmp
mov
add
add
ror
loope
lods
jnp
and
mov
mov
add
aam
cmp
push
rorl
sub
add
add
push
lds
add
mov
pop
loope
cmp
add
add
ja
and
add
fsubl
orl
sahf
sbb
mov
cwtl
jns
mov
xchg
adc
fcoml
jnp
and
mov
scas
mov
lahf
cmp
out
sub
loope
out
cmp
fistpll
das
lods
or
outsb
jnp
jae
jp
lock
add
add
add
adc
add
add
add
pusha
add
xchg
add
mov
cld
cmovnp
add
bound
sahf
mov
inc
add
insb
add
add
dec
adc
and
push
pop
add
mov
mov
or
int3
mov
in
sub
dec
ret
inc
add
add
add
addr16
add
xor
pop
in
xchg
mov
dec
sbb
push
push
in
icebp
ret
fadd
loopne
add
imul
daa
loop
mov
add
add
ds
sti
sub
add
add
mov
fwait
sub
mov
mov
push
stos
aaa
movsl
cmp
add
loope
and
push
mov
add
insb
add
add
lods
scas
mov
arpl
xchg
lahf
sbb
gs
jl
fisttpl
push
in
jg
inc
mov
dec
add
add
cli
std
imul
add
arpl
ret
mov
js
jbe
xlat
out
mov
nop
fsub
nop
jmp
xchg
sub
movsl
mov
addr16
sub
mov
add
add
add
push
jne
xor
cltd
xchg
insl
imul
add
out
inc
add
mov
add
add
adc
push
lahf
ja
xchg
inc
xchg
xor
iret
pop
cld
std
dec
aas
cs
sub
sar
sub
rclb
jge
gs
idivb
sbb
sbb
int3
repnz
pop
xor
scas
jae
add
test
add
add
mov
dec
add
add
xchg
out
out
dec
add
insb
add
mov
sub
mov
add
mov
dec
dec
ss
dec
add
xor
mov
lret
out
xor
lcall
add
add
dec
pop
rorb
popa
popf
scas
mov
or
ds
outsl
or
pop
mov
cmp
test
movsb
pushf
lea
pop
es
cmp
in
and
mov
add
add
mov
dec
arpl
xor
insl
add
insb
add
add
imul
ljmp
scas
push
cmp
mov
mov
jmp
cmp
icebp
mov
xlat
push
mov
js
js
imul
xchg
mov
in
inc
add
scas
icebp
sbb
notl
fisttpll
adc
cmpb
mov
dec
add
add
or
mov
jp
popa
cmpsb
mov
xor
push
xchg
inc
movsl
icebp
add
mov
and
outsb
addr16
add
add
jnp
xchg
push
and
mov
xchg
nop
and
cmp
cmp
dec
fnsave
mov
cltd
aaa
sahf
add
js
add
repz
outsl
pop
loop
dec
call
add
pop
cmp
mov
dec
add
push
lods
mov
stc
out
mov
push
notb
cmp
fistpll
movsb
jmp
dec
add
inc
outsl
add
mov
xchg
add
dec
add
add
nop
daa
cmp
je
jmp
icebp
mov
je
mov
lahf
xchg
xor
push
or
inc
aaa
jo
jle
xchg
pusha
add
mov
xchg
sub
jmp
bound
or
add
add
aad
divl
xchg
add
adc
mov
enter
pop
sub
mov
mov
xlat
sub
mov
cmp
in
shll
stos
sub
jns
out
xchg
xor
das
gs
inc
add
add
xchg
dec
inc
or
add
add
mov
adcb
pop
and
add
sub
fbstp
xchg
add
mov
ja
xchg
xchg
lock
repnz
mov
dec
adc
adc
mov
stos
adc
add
add
lahf
out
lock
and
outsb
jle
push
jl
pop
sbb
inc
add
mov
mov
add
add
clc
push
pop
xchg
ljmp
ljmp
jecxz
add
inc
das
adc
mov
jbe
jg
lret
add
movsb
and
inc
orl
xchg
out
xlat
and
outsb
cmc
cmpsb
mov
std
icebp
mov
or
mov
push
push
or
mov
add
dec
dec
add
xlat
out
jns
jo
mov
gs
inc
add
add
add
sbb
xlat
jb
loope
jl
adc
mov
jnp
cld
retw
add
add
add
jb
hlt
sahf
jns
sub
andl
add
dec
jnp
call
je
sub
xchg
arpl
fcmovu
push
movsl
adc
dec
bnd
add
not
jge
icebp
mov
lfs
xchg
imul
popf
xor
push
jnp
push
mov
shrb
psubsw
movsb
jo
lea
in
cld
pushf
or
mov
or
loope
xor
mov
fcmovu
out
in
mov
cmc
jns
dec
dec
add
add
push
out
in
push
shll
cs
add
adc
js
add
add
lea
test
add
jle
push
dec
jl
ss
cmpl
mov
outsb
jg
xor
movsl
mov
lods
das
mov
add
int
out
or
add
into
mov
inc
add
add
xor
pusha
add
add
cmp
jge
paddw
pop
rcrb
dec
nop
jmp
inc
add
add
jecxz
cmp
bound
mov
sbb
add
pop
push
xor
sarl
dec
or
add
add
sub
movsb
sbb
call
add
ret
ds
jae
out
inc
and
add
add
ret
bound
add
add
jg
sbb
or
add
cmp
pop
scas
loop
and
and
jnp
mov
je
push
adc
add
add
inc
cmpsb
repz
popf
loope
add
add
or
hlt
fwait
nop
or
add
add
pop
inc
repnz
and
add
push
enter
mov
push
lret
enter
mov
add
and
add
add
int3
pop
pushl
sub
mov
inc
mov
rclb
aas
cmp
mov
add
sti
ret
into
push
sub
add
add
add
jecxz
add
add
adc
mov
push
push
loope
pop
jl
xor
add
testb
and
add
sub
sbb
stos
test
add
add
add
adc
inc
and
xchg
push
dec
movb
ret
cmp
add
icebp
or
mov
mov
add
add
shll
adc
hlt
mov
int3
mov
shrl
add
aaa
inc
xor
mov
sbb
jae
push
or
add
add
pushf
mov
pop
pop
std
subb
movsl
xchg
subb
add
add
aam
dec
add
ficoml
add
add
cs
lahf
pop
mov
add
add
sbb
cmp
mov
cmp
mov
dec
popa
fdivr
ret
mov
xlat
fisubrs
shll
aam
jmp
dec
bound
sbb
rcrb
rclb
mov
jo
cltd
rcl
inc
add
add
pop
in
adc
and
mov
sbb
lods
pop
xor
pop
sbb
sbb
ss
add
add
orb
dec
imul
pop
adc
mov
push
aaa
xor
xchg
xchg
mov
pop
ret
sti
pop
xor
cmp
dec
or
add
out
push
lcall
add
mov
inc
rclb
ret
sahf
mov
int
mov
cmpsb
push
dec
add
add
add
push
sbb
pop
jnp
pop
or
imul
mov
xor
or
push
test
add
xor
jecxz
rorb
add
add
fstpt
data16
xor
test
adc
adc
adc
jmp
std
lret
pop
add
add
add
add
clc
clc
daa
movsl
dec
add
add
jecxz
pop
loope
arpl
stc
lahf
jge
or
mov
jbe
sub
add
cmp
jb
sarb
cmpsb
push
lock
loope
push
add
mov
add
std
jo
pop
adc
orb
fcomi
cltd
cwtl
enter
add
ss
add
sbb
sub
add
es
sub
add
add
mov
dec
lahf
inc
xor
movsl
pop
xchg
jecxz
out
js
add
add
xlat
cld
and
mov
add
cmp
jne
ss
xchg
mov
add
add
mov
add
add
gs
cltd
xchg
xchg
pop
out
mov
mov
xchg
mov
adc
icebp
mov
xchg
rcll
add
cs
mov
add
add
sub
iret
mov
mul
outsl
clc
jecxz
pop
lret
dec
add
add
push
jae
ljmp
fiadds
add
ret
fiadds
inc
bound
or
add
out
jns
sub
mov
inc
in
push
mov
js
dec
or
mov
xor
rolb
pusha
add
add
addr16
lock
sub
add
add
pop
mov
mov
add
add
fwait
cmpsl
fwait
enter
rorl
stos
es
inc
inc
sbb
add
mov
dec
add
into
push
hlt
or
sbb
add
sbb
mov
addr16
je
cmp
fidivs
lods
insb
add
add
das
dec
add
in
outsl
jmp
dec
in
imul
add
add
add
test
push
cltd
gs
mov
add
mov
sub
add
xchg
mov
je
add
scas
mov
push
push
add
loop
add
mov
push
cmp
sbb
jmp
pop
enter
add
mov
cwtl
es
xchg
movsl
push
add
mov
addr16
add
pop
and
xor
leave
cmp
cmp
icebp
jnp
push
mov
mov
sub
add
dec
dec
cmp
jno
add
add
mov
cmp
jno
mov
add
jo
daa
jg
add
add
add
subl
adc
es
insl
jo
loope
pop
xchg
call
js
xor
mov
lock
xchg
pop
or
cmpsb
mov
cld
mov
lds
mov
cmp
loope
pop
dec
mov
mov
out
xchg
xchg
loop
and
mov
adc
mov
shl
addr16
sub
mov
jp
xor
jmp
add
add
jae
pushf
jo
mov
jb
cmp
adc
sbb
cmp
mov
loopne
add
add
pop
sub
sbb
rcll
add
jp
adc
clc
clc
mov
add
mov
call
js
cmp
bound
dec
add
add
mov
add
xor
cld
mov
in
popf
push
jne
or
add
add
xor
add
jle
shrb
mov
mov
adc
inc
jmp
test
add
jns
stc
pushf
inc
rol
shrb
iret
xor
mov
jecxz
push
sbb
mov
xor
jmp
lret
xlat
aas
push
es
mov
fimull
lret
jo
test
lahf
cwtl
xor
or
jnp
jne
add
add
loope
in
xor
xor
add
inc
aaa
daa
xchg
inc
div
jnp
addr16
iret
sbb
and
mov
sbb
test
mov
mov
pushf
xchg
mov
add
sub
aam
int
xchg
adc
cmpsb
neg
jo
fwait
inc
test
add
leave
outsb
and
add
add
stc
shr
outsb
add
mov
push
cmc
test
push
lds
push
enter
pop
xorl
jmp
out
add
mov
lea
mov
add
add
ficoms
xchg
mov
and
add
inc
add
negl
add
push
test
cltd
inc
add
and
mov
int
push
bound
or
mov
push
push
xchg
enter
pushf
iret
iret
jns
dec
add
add
dec
add
mov
push
das
aad
jl
push
xor
add
add
or
add
add
inc
add
and
mov
sbb
add
mov
jo
add
adc
lahf
sbb
das
pop
lret
test
or
mov
or
add
add
iret
test
dec
dec
subl
push
es
inc
jl
pop
enter
xor
add
dec
xchg
add
shll
testb
or
cld
dec
add
add
or
loop
mov
jnp
cmpsb
loope
mov
sbb
loop
int
adc
add
add
add
jle
cmp
bound
addr16
incb
add
add
fbld
jb
xor
add
xchg
out
lcall
nop
jmp
lds
cmp
pop
loopne
jecxz
sub
mov
rorl
out
add
and
rcrb
mov
push
push
adc
add
add
js
ror
mov
ret
sub
pop
inc
lret
pop
lock
add
or
je
into
movsl
loopne
notb
add
je
sti
testb
pop
or
mov
jae
mul
popf
dec
push
push
test
add
mov
fistpll
jl
fsubrl
mov
push
test
sub
clc
push
daa
test
cmc
pop
std
aas
ljmp
add
cld
sbb
add
add
mov
jns
jbe
add
add
aam
add
add
sti
cs
push
jns
cmpsl
icebp
es
xor
clc
lcall
mov
inc
mov
sbb
pop
xor
and
add
fmuls
insl
stos
cmp
rcrl
pop
mov
add
add
int
das
xor
bound
imul
add
jmp
clc
sbbl
mov
int
jno
mov
in
jmp
pusha
add
add
fcmovbe
insb
add
add
adc
and
add
add
arpl
icebp
addr16
adc
sbb
add
add
fisttpll
mov
add
mov
and
mov
dec
add
jo,pt
xlat
lea
mov
aaa
adc
jle
mov
icebp
test
pop
or
add
popf
shll
bound
repz
ret
js
jb
add
add
divb
shlb
mov
outsb
lcall
movsl
stc
dec
add
repz
xchg
add
xchg
shrb
sub
shl
cld
xchg
sbb
add
add
outsl
lock
call
dec
bound
ret
iret
repz
add
outsl
leave
mov
pop
pop
inc
ja
mov
cmpsb
jb
inc
sbb
cmpsb
pop
loop
fsubs
add
add
stc
clc
inc
stc
outsb
cmp
mov
mov
xchg
inc
xchg
pop
cmp
fildl
add
and
mov
daa
into
dec
add
push
mov
nop
int3
stos
sbb
push
sbb
shlb
loopne
in
call
push
push
dec
test
cmp
pop
dec
shll
roll
jle
push
add
pop
popf
fdivp
fdiv
fsubs
aad
inc
jp
add
add
add
mov
pop
shlb
cmpsb
adc
add
push
mov
mov
sub
add
add
cmp
mov
mov
stos
out
mov
push
icebp
and
add
add
add
add
inc
add
add
ljmp
hlt
xor
xor
dec
push
addr16
inc
add
add
lret
and
add
add
mov
mov
lcall
cwtl
test
pop
cltd
es
add
add
pusha
add
add
xchg
lret
addb
test
add
inc
add
add
sbb
rolb
stos
addr16
mov
sub
mov
mov
fdivr
inc
dec
shl
iret
xor
xor
add
add
add
add
aam
xchg
mov
add
add
jnp
xchg
jmp
cwtl
xor
mov
add
mov
shll
clc
insl
or
sub
mov
subb
jp
add
add
xor
movsl
cmp
stc
lods
pop
dec
xor
into
stc
xchg
stc
popa
insb
add
sub
mov
mulb
xchg
mov
or
mov
adc
add
add
addr16
shll
jo
jmp
add
xor
loope
rep
jmp
xor
add
add
addr16
mov
cmp
daa
je
ret
xor
shr
inc
add
daa
fsubrs
mov
xor
sti
jp
xor
sbb
push
andl
add
dec
mov
lahf
jns
cmpsb
sahf
aaa
sub
sahf
jo
inc
push
cmp
in
push
mov
neg
cs
mov
push
mov
stc
ja
mov
push
icebp
push
outsl
mov
adcb
sahf
mov
inc
fsubrl
in
inc
push
jo
mov
gs
movsl
xchg
cld
stos
cmpsl
adc
hlt
fisubl
xchg
mov
mov
add
add
sar
pop
jmp
cmpsl
xchg
mov
add
popf
ret
dec
jnp
dec
add
mov
ss
mov
mov
enter
enter
lcall
mov
loopne
sti
and
xchg
mov
fldt
mov
jb
pop
sbb
test
sub
add
add
push
jecxz
push
jmp
aaa
lahf
fiaddl
sti
push
cli
ja
movl
add
jbe
idiv
pop
xchg
lods
dec
int
sbb
lahf
push
je
stc
adc
add
inc
cli
mov
outsb
movsb
je
push
jmp
das
and
out
jno
aaa
adc
add
cmpsl
roll
ljmp
ds
ret
and
cld
jbe
and
add
add
pop
dec
dec
je
dec
bound
iret
sbb
add
add
les
stos
mov
push
xlat
xor
pushf
xchg
add
add
xor
mov
or
jp
jmp
in
sahf
mov
repnz
mov
sbb
mov
shlb
fcmovnu
mov
add
add
add
add
movq
lahf
mov
scas
and
test
adc
sbb
add
pop
push
int3
push
xor
pop
out
mov
movsl
mov
add
sub
push
cmp
mov
add
sub
cmp
test
je
jno
stc
mov
mov
js
mov
add
ror
xor
cli
xor
adc
and
push
and
add
add
mov
mov
add
sub
or
enter
mov
movsl
ret
mov
mov
repnz
mov
fildll
mov
mov
cli
out
cmp
int
sub
add
lds
push
popf
and
and
fsubrs
add
add
ja
mov
mov
mov
add
or
add
add
dec
cmp
push
dec
add
aad
pop
xchg
sbb
data16
push
mov
sbb
sub
inc
add
push
sbb
mov
mov
fbstp
movsb
mov
mov
push
add
popw
enter
add
add
mov
add
add
aam
sti
push
outsl
cmpsb
testb
add
popf
sarl
add
add
sub
cmpl
stc
jns
mov
add
mov
sbb
cmp
into
addb
mov
mov
jmp
shl
call
lds
insl
aas
pop
mov
mov
rep
add
stos
mov
frstor
jmp
mov
aam
lcall
cmp
cmpsb
cmp
cmpsl
pop
push
das
adcb
mov
add
push
test
in
imul
dec
cli
sbb
add
add
add
addr16
lock
loop
adc
mov
sti
cwtl
dec
add
test
or
negb
out
out
dec
add
add
imul
push
int3
ret
shrl
mov
add
add
add
cmp
es
xorl
cmpsb
movsb
inc
add
call
add
add
xor
cld
sub
mov
imul
outsb
ret
add
add
mov
pop
into
lds
jno
sbb
dec
pop
push
sbb
add
add
mov
mov
jmp
fnstcw
dec
add
add
mov
cld
dec
sub
sub
xor
add
fisttps
adc
andl
add
sbbb
addr16
mov
xor
mov
jmp
in
cmp
xor
dec
dec
jae
add
mov
xor
sbb
add
jae
stos
jmp
or
add
mov
mov
sti
sub
lock
mov
add
add
xlat
in
dec
mov
ret
pop
fmuls
add
add
inc
les
sahf
sub
add
add
mov
int3
aam
adc
or
add
add
dec
add
mov
in
je
jns
pushf
das
movsb
stos
shl
loop
add
add
lahf
adc
add
add
pop
ret
fwait
pop
adc
ljmp
adc
jle
add
int
sti
push
imul
xchg
clc
sbb
repnz
add
add
es
scas
pop
daa
popf
in
sbb
add
orps
or
data16
orl
add
inc
sbb
stc
mov
pop
cmp
adc
cli
pop
xchg
in
adc
push
pop
xor
add
mov
xor
mov
add
mov
inc
xor
adc
int3
orl
sbb
mov
mov
add
inc
add
inc
add
add
cld
iret
faddl
add
add
dec
add
add
dec
mov
mov
xor
jl
pop
mov
add
test
push
lea
add
add
cwtl
mov
inc
add
add
js
das
or
add
add
add
out
stos
lock
mov
inc
divb
jns
xchg
mov
in
cmpsl
clc
adc
fcoml
ljmp
add
push
sbb
aaa
lahf
inc
dec
add
push
hlt
cmpsl
addr16
outsl
push
outsl
mov
add
add
dec
arpl
cwtl
push
arpl
mov
mov
pop
xchg
push
jo
xchg
lea
bound
push
pop
mov
add
add
add
outsl
mov
movsb
lcall
loop
inc
add
sub
stos
ljmp
mov
add
jno
aaa
mov
adc
call
adc
popa
adc
add
nop
jb
adc
xor
movsl
xor
cmpsl
fldcw
add
push
test
jne
movsl
fisubrs
cmpsl
ljmp
add
mov
add
add
xchg
cmpsl
lea
fwait
lcall
mov
mov
push
decb
stos
stos
or
add
add
jg
adc
aas
popa
push
push
loop
add
add
jae
lret
rcrb
pop
mov
test
add
push
mov
fwait
mov
mov
mov
mov
iret
adcl
insl
mov
push
push
jb
bswap
xor
aaa
or
add
add
add
add
out
sbb
xchg
jae
imul
push
ds
or
shrb
add
in
call
push
cli
ds
push
insb
add
add
xchg
int3
lret
loop
out
sub
mov
xchg
std
ss
inc
add
add
hlt
sbb
lods
sbb
push
pop
cmpl
leave
test
xchg
shrl
mov
aas
mov
lods
hlt
scas
out
movsb
loopne
cmpsl
and
insl
mov
sub
sbb
mov
sub
pop
xor
or
in
test
and
loope
fstpt
add
push
sbb
xchg
cmp
or
add
add
sahf
xor
add
add
add
or
mov
inc
add
add
mov
mov
mov
lock
add
mull
sti
pushf
push
mov
or
jns
xchg
push
jmp
jbe
or
mov
add
cmp
loope
xchg
idivb
je
aaa
andl
and
add
add
cmpsl
fbstp
andb
mov
idiv
or
add
sbb
ret
add
insl
inc
cld
addr16
mov
add
add
sub
mov
push
or
roll
test
add
sub
stos
add
cli
cld
mov
leave
in
addr16
push
xchg
mov
divl
add
mov
inc
inc
add
add
cmpb
mov
pushf
imul
ja
push
out
iret
adc
add
push
insl
push
push
and
jmp
ljmp
stos
repnz
push
push
lds
mov
xchg
add
or
sub
and
add
jb
sarl
xchg
adc
push
lret
das
jg
push
cwtl
xor
aas
inc
add
out
cmp
cltd
push
adc
jle
pop
adc
lahf
iret
loope
shrl
es
push
cld
pushf
xor
aad
inc
popa
dec
aam
push
enter
out
loope
xlat
xor
dec
pushl
repnz
fwait
jmp
add
add
and
sub
add
add
mov
flds
fisttpll
mov
or
mov
sub
fidivl
movsl
push
and
mov
or
lock
mov
out
pop
xchg
and
jge
lahf
jno
add
add
aaa
xchg
xor
pop
xor
or
cli
lcall
mov
inc
repnz
sti
inc
fcomp
adc
mov
inc
cmp
bound
add
add
stos
mov
jl
lock
mov
push
ret
insb
add
add
jns
fcoml
dec
test
inc
xchg
popf
aam
gs
stc
jo
push
inc
add
lods
adc
inc
shll
imul
push
inc
mov
add
ds
stc
loopne
xor
enter
std
mov
enter
iret
outsb
shll
out
pop
xchg
push
cmpb
iret
fst
ds
int
les
pushf
es
sarl
mov
mov
into
es
fidivrl
add
add
loopne
int
add
add
add
add
add
add
cmp
mov
add
sub
add
add
test
out
mov
pop
push
pop
dec
xchg
sub
mov
gs
sarb
movsb
cmp
mov
mov
iret
cmp
loopne
daa
stos
in
pop
adc
xchg
or
xchg
icebp
mov
test
mov
add
add
pop
lcall
xchg
mov
or
xchg
mov
jae
arpl
mov
add
add
lds
fwait
adc
cmc
arpl
scas
xor
arpl
sbb
add
add
adc
xlat
mov
cmpb
movsb
push
or
add
add
add
add
jl
and
sub
sbb
mov
add
add
push
mov
mov
int3
jmp
jb
adc
add
add
ret
mov
push
inc
jae
rcll
mov
mov
add
mov
add
add
push
out
jno
divb
jb
cmc
cmc
mov
add
add
dec
add
gs
mov
cmp
pushf
mov
and
add
add
lcall
aad
mov
xchg
xchg
push
jns
xchg
insl
fcoml
add
jno
test
outsl
ret
pop
out
data16
mov
mov
sbbl
aad
into
pop
inc
bound
fmuls
outsl
mov
jbe
fwait
add
xchg
fwait
lahf
push
test
xor
xor
add
add
mov
fsubrp
cmc
sahf
xor
fnsave
add
out
pusha
add
add
lea
lret
out
adc
in
popa
jle
adc
aas
adc
into
mov
xor
add
add
adc
mov
stos
mov
adc
pop
pop
out
jg
xchg
mov
inc
xor
mov
ret
outsl
xor
mov
inc
sbb
cs
dec
out
imul
add
aaa
inc
loopne
stos
fwait
test
mov
push
je
xor
cltd
pop
and
add
add
push
aam
sbb
sbb
mov
xchg
notb
mov
mov
loop
les
push
adc
add
jmp
add
add
mulb
sub
notl
iret
mov
jp
add
add
add
or
mov
push
ret
xchg
loope
jge
jno
jnp
xchg
ss
js
mull
inc
iret
mov
adc
add
mov
adc
cli
sbb
sbb
or
add
movsb
je
inc
out
and
add
add
outsb
clc
shrb
cmp
push
cwtl
ljmp
insl
dec
and
jge
lds
aam
add
add
mov
push
push
cld
cmp
add
add
pushf
ja
jae
mov
cs
lret
std
mov
mov
adc
out
adc
jb
dec
add
push
pop
xchg
test
das
xchg
jge
add
add
add
mov
xor
jg
les
mov
sub
inc
lret
mov
repnz
jne
movsl
pop
cmp
xor
pusha
add
add
neg
xchg
add
hlt
cmpsl
scas
lret
push
in
filds
and
push
sub
sbb
out
clc
jmp
push
pop
into
stos
adc
add
test
add
mov
add
add
out
data16
mov
scas
addr16
jo
jg
xor
out
cmp
pop
push
jecxz
sti
mov
enter
call
sahf
leave
cltd
les
movsl
repz
hlt
dec
sub
add
add
js
fcmovb
or
jbe
add
add
dec
adc
inc
add
inc
add
add
cmp
mov
add
mov
push
push
dec
xor
add
movsl
push
enter
mov
and
push
jno
jno
insb
add
add
pop
sub
cmp
das
popa
mov
loop
je
outsb
int3
mov
std
es
add
add
aas
or
js
sub
mov
push
daa
cmpl
out
mov
ret
insl
pop
and
cli
sub
mov
lahf
push
sub
cltd
xchg
imul
push
call
outsl
pop
inc
js
into
lret
div
movsl
out
push
xchg
jg
jb
mov
stos
cld
sahf
js
leave
cmpsl
aad
xchg
dec
test
push
push
test
xchg
push
in
cmp
xchg
lret
push
push
mov
inc
add
mov
add
add
mov
add
mov
add
mov
negb
aad
cmp
xlat
repz
sarb
fisubrl
add
aas
lahf
mov
cmc
scas
xchg
into
cwtl
sbb
jb
stos
pop
jle
inc
push
adc
imul
inc
popf
mov
add
testl
mov
add
add
add
out
mov
shlb
add
mov
pop
xchg
imul
mov
dec
aam
fsubl
cmp
mov
sarl
cmp
pop
and
dec
push
out
leave
test
or
neg
mov
push
mov
add
add
dec
lret
inc
mov
xorb
rcll
jle
std
cmp
adc
movsl
clc
push
dec
ds
add
arpl
aas
mov
imul
add
or
mov
sti
data16
fabs
das
jns
sub
mov
mov
cmpsb
cmp
xor
add
add
add
jl
orl
fisubrl
pop
dec
int3
lea
dec
or
add
add
mov
cmp
and
push
jnp
cmpsb
push
add
mov
sub
mov
mov
mov
add
cmc
jb
pusha
add
add
sbb
imul
mov
or
add
jl
xor
adc
test
jo
nop
leave
push
lcall
sti
xor
ss
jl
fyl2xp1
inc
xchg
pop
rolb
mov
xchg
inc
pop
sbb
int3
inc
mov
pop
popa
sbb
cli
push
mov
fidivl
add
jae
fwait
pop
data16
mov
js
in
cmp
inc
adc
lods
mov
add
loopne
stos
ficoml
xchg
fisubl
rcrb
shl
fwait
cli
mov
add
and
add
add
xor
lcall
dec
add
add
mov
add
jmp
icebp
jo
js
and
arpl
test
sbb
add
mov
add
dec
push
add
add
or
add
add
jne
cmp
xor
imul
jo
xor
in
imul
pop
and
adc
sti
out
jo
aam
mov
mov
and
add
add
jg
and
add
add
leave
push
gs
mov
xor
mov
xchg
cmp
push
mov
leave
or
add
add
shlb
xchg
pop
jno
into
and
dec
push
xlat
icebp
add
or
mov
and
jg
pop
loopne
sti
fdivs
mov
gs
cmpsb
test
pop
dec
add
add
mov
int
cmpb
adc
xchg
mov
add
js
pusha
add
add
mov
mov
fsts
clc
js
mov
add
sbb
aad
cs
mov
dec
push
imul
add
add
daa
aad
xor
test
scas
xchg
dec
or
push
ror
popl
push
rolb
add
ja
add
add
imul
int
add
cs
pusha
add
add
push
push
mov
movsl
enter
icebp
movsb
xor
xor
add
add
adc
ficoml
mov
jno
addr16
add
push
add
ljmp
ss
jbe
in
jg
jge
pop
cmp
cwtl
jg,pt
push
mov
test
xor
sub
mov
lods
dec
cmp
outsl
cmp
hlt
repz
mov
lret
fwait
test
pusha
add
add
add
ja
push
sub
in
sahf
jae
lret
inc
add
subl
add
xor
mov
lods
dec
inc
aad
gs
cmc
push
test
sbbb
add
add
add
cwtl
cld
cltd
push
add
xchg
dec
mov
add
test
repnz
shll
add
je
rol
add
add
inc
xchg
jmp
and
add
andl
add
push
or
cmpsl
out
dec
pop
into
sbb
adcl
insl
dec
aaa
pop
in
sbb
mov
add
dec
jb
pop
lods
addl
test
hlt
mov
add
mov
lret
mov
add
in
vorps
sub
add
add
cmc
enter
push
pop
std
cmp
mov
xchg
fst
rcrl
das
pop
stos
fadd
cmpsl
out
ja
push
push
mov
push
sub
int
cmpsl
or
add
add
sbb
add
add
add
and
add
add
jns
lods
adc
and
pop
mov
adc
std
mov
add
mov
mov
inc
test
cmp
ss
loope
out
cld
andl
adc
push
into
dec
add
shrb
jle,pt
test
add
add
aad
int
repz
push
ja
sub
add
add
fcomps
ret
add
xor
es
mov
aad
psrad
loopne
pop
and
mov
stos
cmpsb
cmp
insl
mov
je
cmpsb
fwait
pop
inc
cltd
xor
push
push
cltd
sti
fnstcw
arpl
add
test
and
loopne
add
add
movsb
jnp
mov
add
push
add
add
add
mov
add
add
push
aam
cmpsl
inc
pop
fdecstp
adc
add
imul
xchg
add
add
aas
test
lea
out
bound
add
scas
xlat
inc
daa
cmp
add
out
xchg
adc
xchg
inc
inc
loope
mov
pop
neg
sub
aad
add
add
add
fnsave
push
xchg
ret
add
add
mov
dec
dec
hlt
addr16
stos
ljmp
jecxz
lahf
jbe
test
test
mov
pop
dec
mov
jmp
pop
push
pop
jecxz
dec
and
scas
inc
adc
push
fcoml
adc
int
cmpl
mov
add
add
add
rcr
test
pop
sarl
xchg
in
mov
dec
addl
add
test
add
xor
mov
sbb
cmp
jecxz
out
adc
jns
ror
mov
add
mov
mov
mov
pop
cmp
mov
jmp
rclb
add
add
inc
xor
xor
ret
das
add
icebp
fldenv
xor
lcall
push
xorl
and
sbb
mov
add
loop
and
mov
ret
ror
cmpsl
jne
es
aam
push
and
add
pusha
add
icebp
jl
push
jle
test
outsb
mov
inc
mov
sti
xor
mov
jmp
push
sub
sbb
je
cmp
mov
dec
fisubs
add
in
js
cmp
adc
add
outsb
mov
adc
mov
or
add
jle
nop
hlt
add
pop
cmp
inc
stos
sub
add
add
add
push
imul
pop
sahf
lret
mov
daa
and
add
sbbb
ja
and
and
add
add
add
bound
add
add
add
add
add
dec
lcall
cli
addb
add
dec
pop
cmp
js
nop
mov
aaa
lods
es
popf
adc
pop
cmp
jns
and
mov
cli
cld
dec
notl
lcall
push
fisttpll
js
jg
sbb
mov
sub
push
addr16
frndint
in
out
out
sub
add
pushf
int
push
loope
pop
xchg
insb
add
out
mov
inc
add
test
test
cs
push
and
mov
fists
add
sbb
add
jne
jno
inc
or
add
add
pop
and
stos
daa
das
arpl
stc
and
mov
or
add
pop
pop
push
dec
or
pushf
iret
aaa
repnz
or
add
push
and
mov
out
insl
test
xlat
cs
jno
idivl
cltd
gs
or
push
inc
mov
adc
sub
pop
or
clc
jge
rcrb
jp
xor
xor
pop
fcomip
push
inc
add
add
int3
and
add
add
add
inc
roll
and
in
push
cmp
jne
fwait
aaa
sarb
mov
popa
enter
les
sub
add
add
cmp
xor
adc
push
inc
dec
mov
imul
add
mov
cmp
add
jmp
add
add
popf
stos
rolb
mov
jnp
mov
out
lcall
and
add
ss
dec
push
jp
ja
jae
add
mov
mov
cmp
pusha
add
add
jb
mov
mov
jecxz
push
ret
sbb
jb
sub
add
add
bound
bound
dec
mov
inc
xchg
scas
pop
lea
das
mov
xor
sbb
adc
or
xlat
dec
por
aam
sbb
sbb
mov
mov
jg
add
adc
and
mov
stos
or
dec
add
add
sysenter
popf
pop
dec
ret
add
add
arpl
push
fstl
das
dec
jo
xchg
sbb
leave
mov
pop
dec
add
and
xchg
arpl
xor
inc
add
add
movsl
add
add
add
pushf
out
fwait
or
fcomps
dec
add
add
dec
jmp
jl
clc
cmp
mov
jle
nop
xchg
sbb
add
add
add
add
inc
jo
notl
sahf
dec
add
mov
add
mov
push
cmpsl
xor
stc
lret
scas
mov
ja
push
hlt
cld
adc
add
add
nop
fdiv
lods
jl
enter
cltd
xor
add
add
add
fisubl
out
inc
jbe
inc
es
mov
mov
cltd
jo
ffree
cld
sub
pop
xor
mov
test
sub
add
add
lahf
daa
lods
sti
cwtl
bswap
add
add
push
loop
pushf
movsl
mov
or
add
add
push
pop
xor
xor
sbb
inc
data16
rcrb
or
dec
mov
mov
pop
jo
jne
repnz
test
pop
jnp
fnstsw
lret
mov
and
add
add
scas
inc
mov
add
pop
iret
push
jl
popf
je
push
addr16
jns
sbb
lds
add
jnp
fwait
push
stos
cmp
add
add
or
and
pop
fistpll
jb
adc
add
add
outsl
mov
clc
inc
repz
mov
inc
movsl
jge
add
inc
add
add
mov
ljmp
jbe
push
xlat
mov
mov
ret
mov
gs
pop
or
jecxz
jbe
pop
loope
icebp
aas
out
not
out
ds
mov
sti
inc
mov
xchg
sbb
mov
xchg
sbb
mov
add
jne
shr
imul
sub
mov
mov
aad
sbb
and
add
add
add
add
add
popf
stc
jg
cmp
cmp
mov
lods
addr16
push
sbb
push
lcall
add
add
adcb
add
enter
adc
jno
js
loopne
test
jno
push
or
adc
sub
add
aaa
aad
dec
js
popa
add
add
dec
test
add
int3
jg
add
mov
divb
dec
sub
or
add
add
mov
add
add
mov
int3
mov
add
jle
ja
pop
mov
test
bnd
mov
push
test
xor
loopne,pt
xchg
fcomip
add
add
add
push
xor
xchg
xor
adc
out
add
add
pop
call
mov
rcr
push
mov
cld
jae,pn
and
cld
ret
fwait
mov
push
cltd
sbb
and
inc
add
sub
add
data16
mov
add
add
fstps
paddd
sbb
add
fadd
dec
outsl
lcall
add
into
ja
cmpb
mov
sbb
lret
sub
add
add
movsl
or
stos
dec
sbb
scas
pop
adc
sub
mov
fsubrs
mov
mov
cmpsl
sbb
add
add
call
add
test
cmpsl
pushl
add
loopne
add
aad
nop
add
or
loope
add
add
psadbw
fists
mov
cwtl
out
lock
lret
hlt
ds
and
add
in
es
add
add
fisttps
add
add
or
add
add
add
rolb
dec
mov
jle
outsl
aad
add
ss
popa
push
jns
jmp
repz
mov
movsb
or
mov
cmpsb
or
mov
add
add
jl
ror
mov
add
add
add
mov
add
inc
add
fcmovnb
dec
test
pop
aam
push
imulb
out
clc
aas
sub
mov
jne
hlt
mov
pop
xchg
enter
push
adc
filds
cmp
shl
sub
or
add
add
add
add
mov
and
add
add
loop
lea
js
mov
test
cwtl
call
mov
test
mul
repz
imul
ss
inc
add
add
add
pop
cmp
lock
push
mov
add
add
test
imul
fnsave
sbb
mov
mov
mov
xor
cmp
enter
pop
lods
nop
les
dec
add
mov
add
add
add
je
pop
or
add
add
add
xchg
add
loop
mov
add
cli
cmp
lret
add
add
jecxz
leave
subb
bound
in
mov
or
xchg
lret
xor
push
mov
pop
in
insl
push
mov
roll
test
inc
add
div
add
js
mov
fldenv
add
add
add
push
jne
mov
movsl
std
push
movaps
pop
and
icebp
fsub
cmpl
xchg
mov
pop
movsl
dec
push
push
jnp
xor
cwtl
adc
lods
cmp
inc
imul
imul
pop
enter
mov
add
rcpps
mov
mov
mov
movsl
or
add
add
ds
jmp
lds
in
push
mov
in
flds
jbe
push
pop
pop
movsl
int3
lods
mov
dec
repz
movsb
dec
xor
test
ss
jmp
aad
insl
rcl
dec
add
and
shr
jae
add
push
shll
daa
stc
cmp
push
loop
add
aas
scas
xlat
dec
push
cmp
mov
lcall
mov
mov
add
add
in
mov
aam
jg
xchg
lahf
mov
jbe
ret
add
mov
pusha
add
add
dec
cmp
pop
cli
imul
mov
mov
fsubrl
pop
push
fucomip
inc
ds
add
add
cmc
fdivl
add
jb
add
mov
push
push
fbld
jle
mov
jo
or
mov
outsl
test
add
call
dec
adc
imul
aaa
inc
mov
add
ss
pop
movb
pop
adc
jns
add
lods
jmp
add
add
add
inc
add
mov
and
add
add
clc
inc
dec
inc
add
add
xor
les
bound
out
add
add
fwait
mov
lea
hlt
pushf
cmp
dec
mov
data16
xchg
mov
arpl
mov
or
xchg
lods
pop
sub
jg
pushf
test
aad
inc
add
rclb
insb
add
repnz
out
push
cli
adc
pop
cli
jbe
lcall
add
add
lock
jb
adc
addr16
pop
ret
lods
rolb
add
imul
push
and
and
add
add
add
test
mov
movsb
jecxz
and
mov
ret
aam
test
sbbl
or
arpl
cmp
push
insb
add
test
add
and
mov
in
push
fcmovbe
incb
add
add
add
sub
add
add
in
push
xor
cmpb
cld
scas
inc
mov
arpl
fstl
cld
testl
inc
repnz
mov
jns
sbb
cs
ret
dec
mov
aaa
sub
mov
int
cmp
scas
test
add
shr
jae
add
add
mov
inc
aam
aam
sar
cmp
add
add
dec
jae
mov
xor
add
dec
lods
push
sbb
mov
add
add
iret
filds
add
add
mov
in
cltd
mulb
add
mov
arpl
dec
add
add
in
orb
pop
shlb
test
insb
add
add
int
mov
and
pusha
add
cmpsl
je
es
les
add
add
shlb
add
in
push
mov
les
add
add
test
push
fsts
jp
add
add
cmp
iret
shrb
inc
add
add
pop
in
add
icebp
mov
add
pop
std
mov
add
ss
movsl
in
fdivr
cmpsl
cmc
cmp
int3
or
clc
mov
aaa
xchg
in
lahf
jno,pn
loop
push
adc
movsb
outsb
xchg
xchg
leave
xchg
jbe
xchg
xor
jno
sub
mov
add
add
jl
jne
and
or
pushf
add
add
add
gs
add
add
inc
insl
mov
add
add
les
mov
into
in
xchg
mov
dec
add
call
or
mov
mov
add
enterw
into
in
mulps
test
dec
insb
add
repnz
rcrb
rcrl
inc
dec
add
add
rclb
dec
add
add
shlb
dec
add
mov
and
add
add
add
push
les
aad
adc
push
cmpsl
mov
sbb
xlat
xchg
xchg
iret
scas
mov
int3
out
add
test
out
mov
add
add
jbe
aas
call
femms
mov
test
sbb
aam
jb
test
dec
je
pop
jg
out
lods
insb
add
mov
andl
nop
or
mov
rolb
adc
and
mov
cmpsl
pop
or
mov
cld
mov
adc
cli
jmp
push
les
ret
push
or
adc
subl
dec
add
add
inc
add
xadd
xchg
lcall
ss
fisubs
add
flds
mov
adc
push
adc
sub
mov
sarl
fdivrs
add
aas
add
add
or
std
int
inc
imul
jp
mov
adc
add
add
push
addr16
addr16
jmp
add
stos
clc
inc
xchg
roll
add
add
add
mov
cmp
lds
mov
inc
das
insb
add
add
lret
scas
cmc
aam
sti
ret
add
add
cmpsb
push
ret
push
insb
add
add
div
or
sbb
mov
push
mov
add
mov
out
ret
movsb
xor
sub
mov
mov
xchg
xchg
jmp
cmpsl
lret
mov
jne
mov
push
inc
xlat
aaa
lds
inc
xor
add
add
orb
int3
jae
inc
add
add
sbb
adc
adc
add
ds
push
inc
in
mov
sete
int3
add
popa
into
in
push
xor
outsb
jns
data16
or
inc
dec
es
popf
xchg
dec
sub
add
add
dec
lods
jo
and
mov
inc
lret
cltd
inc
push
divl
sub
pop
xchg
push
add
add
testl
aaa
stos
or
add
sbb
jecxz
inc
push
adc
sub
mov
mull
mov
and
insb
add
add
setg
clc
or
mov
bound
pop
movsb
mov
jmp
enter
sbb
sbb
sbb
add
add
pop
dec
les
lods
jbe
add
mov
addr16
and
jmp
add
aam
insl
and
mov
push
cld
xchg
stc
adc
add
add
in
mov
and
mov
pop
hlt
jmp
mov
xchg
mov
or
fdivs
pop
xor
fists
mov
popf
cmp
in
jb
ret
out
loope
stos
je
mov
cltd
dec
add
add
jge
scas
shr
cmpsl
or
in
push
adc
adc
jle
add
and
add
push
jle,pn
imul
jmp
mov
loopne
sahf
js
cmpsb
outsb
imul
lods
inc
add
add
push
int
mov
jl
fwait
push
jmp
and
mov
pop
pop
cmc
cmp
fisubrs
fidivrs
out
xor
inc
call
stos
push
lahf
icebp
push
std
cmp
sti
in
or
mov
add
adc
jnp
mov
push
adc
shlb
repz
mov
add
or
icebp
pop
jmp
add
add
sub
mov
add
bound
add
pushf
dec
outsl
cld
cwtl
shrl
or
mov
mov
movsb
mov
xchg
jno
imul
jae
clc
cmc
std
mov
and
add
cli
mov
seto
mov
int
test
lcall
add
xchg
add
add
jmp
loop
in
cmp
lcall
jo
pop
hlt
mov
mov
inc
stc
ds
out
ffreep
popf
enter
add
nop
insl
arpl
xchg
mov
out
xor
xor
fdivrp
fildll
or
test
out
out
cwtl
test
dec
dec
push
adc
pop
xor
add
popf
mov
mov
add
outsb
mov
push
ror
cmp
inc
dec
pop
les
cld
ljmp
mov
cld
es
sbb
inc
add
add
in
push
fcmovbe
jb
fcmovnbe
fisttpl
dec
lods
sar
mov
sbb
jecxz
add
mov
mov
loop
ficoms
imul
pop
mov
add
or
add
add
aad
pop
mov
or
add
add
fistpll
add
add
test
sbb
std
stc
sbb
jb
or
pop
repnz
jecxz
and
pop
xchg
lods
cmp
fistpll
sub
mov
add
add
mull
scas
mov
outsb
into
in
cmc
sbb
xlat
push
jns
into
pushf
inc
mov
cmp
movups
add
add
push
imul
ret
push
mov
pushf
inc
imul
add
stos
push
dec
cld
jmp
push
neg
dec
add
jo
insb
add
add
dec
add
add
js
mov
jbe
int3
repz
clc
mov
and
add
xor
pop
add
add
rorb
jp
shl
dec
aad
adc
shlb
add
add
add
jbe
lds
inc
idivb
es
in
jno
adc
test
push
xchg
adc
mov
xor
add
add
sub
add
add
out
add
add
pop
and
mov
add
sarb
or
dec
movsb
pop
xchg
pop
xchg
sub
fistl
jge
add
lahf
mov
movb
sub
mov
scas
or
cmp
adc
sahf
outsb
jbe
push
or
popf
cltd
pushf
inc
add
cmp
mov
in
sbb
lock
and
add
add
mov
iret
xlat
das
sub
mov
xor
mov
lock
imul
aad
lret
aad
pop
mov
cld
movsb
scas
inc
cmp
xchg
and
mov
arpl
dec
pop
shr
push
imul
mov
xchg
sub
add
je
leave
lods
incl
or
add
cmp
bound
push
insl
sbb
mov
or
add
inc
sub
mov
in
mov
add
mov
add
sbb
mov
adc
mov
xor
ljmp
das
aaa
insb
add
shl
lahf
or
add
add
pop
cmc
iret
cwtl
lods
outsb
fldcw
pop
mov
xchg
dec
add
clc
addr16
cmc
faddl
mov
das
ret
pushf
mov
adcb
mov
push
inc
add
ret
outsl
les
cmp
std
in
inc
aad
adc
mov
mov
popf
fwait
out
or
add
popa
inc
or
mov
and
mov
jle
inc
xor
pushf
xchg
outsb
pop
fdiv
jle
xor
add
add
push
pop
cmc
mov
aam
mov
cltd
pop
fistps
sbb
mov
test
mov
mov
mov
or
push
jno
divb
in
lock
add
add
add
add
lahf
enter
sti
mov
add
imul
fmull
mov
or
je
push
dec
adc
andl
iret
add
add
imul
sub
add
add
in
shrb
push
rcll
out
dec
mov
or
adc
cmp
xor
jg
mov
andl
mov
xor
cwtl
aas
jb
or
cwtl
ljmp
add
add
and
mov
test
push
inc
setbe
push
insl
ss
test
sbb
add
pop
xchg
nop
push
sub
add
add
jge
xchg
adc
add
jmp
cmp
xchg
adc
mov
out
inc
popf
fisubrs
push
jnp
ficompl
add
add
push
xchg
data16
add
add
sub
iret
lahf
leave
out
je
jle
mov
mov
jecxz
cmpsl
jge
shr
inc
stc
in
lret
dec
aad
cwtl
mov
lret
test
dec
mov
add
imul
into
imul
push
fadd
mov
push
push
insb
add
add
loope
ss
add
in
sbbl
addr16
mov
jno
cmp
pusha
add
cmpsb
fisubs
pushf
pop
mov
add
movsb
or
fdivs
stc
add
dec
push
push
cli
movsl
adc
xor
popa
cmp
push
lahf
jecxz
xchg
or
mov
loope
insb
add
dec
icebp
xchg
fistps
popa
or
add
mov
and
mov
ljmp
add
sbb
xchg
les
icebp
test
movsl
mov
sub
add
or
xlat
inc
cmp
inc
aam
fldenv
cltd
jb
add
add
cmp
pop
and
fdivp
lds
xchg
lods
pop
sahf
arpl
out
sub
add
mov
push
aas
xor
cli
mov
jns
mov
xchg
push
cmp
push
mov
int3
xchg
mov
and
mov
aad
loop
add
add
idivl
dec
lahf
dec
jnp
cmp
jno
cmc
rorl
pushf
mov
sti
pop
xchg
sti
ret
in
hlt
arpl
xchg
mov
cmp
lods
sahf
ja
js
movsl
adc
pop
stos
sti
into
push
or
add
add
insl
or
shl
cmp
mov
dec
add
xorb
mov
add
add
fcmovbe
lods
mov
das
adcb
mov
icebp
call
test
xor
xchg
scas
dec
dec
xor
cmp
add
add
dec
inc
add
fnstcw
mov
pop
mov
repz
cmp
jmp
lods
adc
loop
arpl
mov
inc
jb
jl
push
sahf
lock
movsl
inc
dec
lds
sti
pop
jno
sti
and
ja
insb
add
add
popf
lods
bound
pop
sarb
ja
push
mov
addb
stos
out
mov
add
add
add
cmp
mov
dec
inc
fcmovb
pop
adc
pusha
add
std
imul
lcall
js
jl
jb
out
mov
mov
out
insl
cwtl
sub
or
add
test
repnz
add
ret
leave
mov
in
rorb
push
stos
jle
sbb
mov
jl
pusha
add
add
dec
add
add
add
jne
leave
xor
dec
add
add
repz
xchg
push
jmp
cmp
les
add
mov
jmp
add
cmp
ss
inc
cmp
cli
adc
mov
add
add
gs
sub
add
add
dec
xor
repz
xchg
into
sbb
add
in
adc
leave
jb
sub
add
data16
or
mov
and
rcrb
mov
icebp
jne
fisttpll
lea
inc
popa
mov
push
cmp
loopne
add
add
add
icebp
arpl
push
loope
cmp
pop
scas
fcomp
stos
orl
sub
enter
mov
je
pop
inc
lret
stc
or
mov
call
clc
inc
in
std
sbb
push
cmc
xor
xchg
xchg
dec
mov
mov
out
je
sbb
cmpsl
mov
add
mov
leave
cmp
add
cld
or
add
add
inc
add
add
int
ja
sbb
mov
add
sub
push
pop
jmp
xor
mov
test
stos
or
add
fwait
mov
sub
js
dec
stos
dec
add
add
pop
sub
call
push
out
push
out
push
popf
popl
sbb
loop
pop
leave
stos
shll
add
add
aam
daa
mov
clc
pop
cltd
hlt
shrb
add
inc
mov
mov
repz
out
add
add
test
lret
cltd
push
pop
into
jl
rcll
movl
into
mov
sub
sub
push
int
pushf
imul
mov
add
add
dec
fcompl
push
dec
add
jbe
xchg
sub
mov
mov
ret
fsubrs
mov
movsl
jb
jbe
loop
cmpsb
sbb
dec
add
xor
and
jmp
add
jge
ror
pop
xor
sub
add
add
adc
imul
adc
xchg
cmp
or
add
add
push
rol
sub
add
add
ds
lahf
mov
in
inc
mov
dec
push
sub
in
test
push
and
lds
ror
inc
mulb
daa
in
jg
cli
cltd
jge
pop
in
sbbb
aaa
pusha
add
add
insl
or
mov
les
add
and
jp
add
push
push
xchg
dec
sub
jl
mov
ljmp
js
pop
repz
int
rclb
cld
outsb
call
clc
ja
or
add
add
add
xlat
data16
push
xor
mov
xchg
insb
add
cmp
push
out
aam
jl
int3
jno
ds
add
pop
rcrb
or
sub
call
insl
sbb
mov
pop
sbb
push
sahf
push
cmp
ds
jns
out
mov
add
xchg
pop
insb
add
mov
add
pop
ljmp
in
jbe
jnp
mov
mov
sbb
dec
lret
cmp
out
add
cmpsb
lret
or
mov
adc
xlat
loop
lea
std
xor
add
add
fdivrl
popa
sti
xchg
mov
rcrb
pop
div
imul
adc
lret
sbb
leave
in
cmp
int3
lds
cli
dec
add
mov
xchg
cmpsb
add
rolb
shrl
add
add
push
add
add
orl
jge
into
testb
or
add
add
in
cmp
data16
incb
mov
sub
gs
test
and
add
add
popf
xor
add
pop
cmp
jmp
mov
movsb
test
jo
inc
add
xchg
inc
sbb
clc
and
adc
int
xchg
int
icebp
or
inc
dec
mov
add
sbb
dec
jmp
inc
mov
jle
xchg
out
cmpsb
pop
repz
xlat
or
add
add
mov
inc
orb
pop
lret
sahf
loop
cltd
mov
lret
push
add
les
addr16
add
push
mov
add
add
inc
aas
ret
dec
pop
mov
dec
add
rcrb
and
mov
jae
dec
clc
outsl
stos
pop
sub
xchg
push
testl
and
add
add
push
fcmovb
outsl
cmc
out
fildl
addr16
insl
xor
xchg
sub
orl
mov
mov
add
add
pop
pop
cld
rorl
add
scas
das
std
lods
ds
clc
aad
mov
add
push
aam
mov
jmp
jg
mov
add
insl
iret
sub
add
add
pushf
jmp
sar
mov
mov
push
loopne
cmp
sbb
xlat
or
or
mov
add
loopne
jo
and
imul
data16
add
xor
jns
scas
adc
popf
out
cmp
add
adc
mov
imulb
mov
push
cli
jns
pop
inc
ret
inc
mov
push
sbb
xchg
int3
jp
lret
mov
or
cmp
push
lret
lods
jnp
add
mov
xor
repz
aam
aad
add
and
push
aad
cmp
roll
in
mov
mov
mov
mov
mov
cltd
jae
add
add
inc
add
xor
fnstsw
sbb
or
mov
rol
push
dec
add
int
mov
test
push
sub
cmp
int3
shlb
je
fwait
lcall
mov
or
inc
dec
add
ss
imul
add
mov
add
enter
xor
dec
in
cmp
and
mov
les
sti
and
add
add
add
sbb
add
std
xchg
add
mov
into
lock
dec
out
fucomi
mov
xchg
push
mov
lret
sbb
mov
and
xchg
xlat
xor
add
add
scas
out
jmp
jno
std
sarb
add
jg
jle
dec
add
add
add
mov
mov
int
pop
aad
add
pop
lcall
add
add
xchg
fldenv
shlb
add
add
push
jns
mov
jge
mov
insl
aas
fsubrl
scas
jae
xchg
js
mov
inc
outsl
insb
add
add
stos
mov
fnstcw
mov
add
mov
add
add
ds
and
popa
rclb
call
sti
mov
add
mov
ret
fisubrs
add
stos
mov
inc
adc
adc
or
pop
lret
or
mov
fnstenv
cld
inc
add
add
rorl
pop
jnp
sti
add
syscall
mov
xchg
cmpsb
mov
mov
ljmp
mov
add
add
add
adcl
repnz
insl
ret
repz
ficoms
xchg
mov
data16
into
les
push
and
jge
sub
test
cs
mov
popa
cld
push
insb
add
popa
sub
add
add
add
aam
and
int3
pushf
fidivs
xchg
test
push
leave
cmpsb
andl
xchg
sbb
shrb
add
repz
fisubrs
rcl
sub
bound
in
call
push
loope
sbb
sbb
xlat
xor
dec
test
mov
push
or
mov
mov
dec
data16
mov
jl
mov
inc
add
in
cmp
or
out
negl
out
sar
fsubrs
pop
push
aaa
push
lock
sarb
mov
add
add
lods
dec
add
adc
add
pop
jecxz
add
add
clc
push
test
add
add
add
aad
push
mov
sub
iret
ljmp
cltd
jae
in
out
cmp
pop
mov
sar
sbb
pop
aaa
nop
mov
add
push
jno
push
jl
ss
or
lret
sahf
mov
cmp
inc
jae
outsb
fwait
xchg
mov
fcmove
pushf
push
cmpsl
mov
and
jge
int
pop
loop
or
out
mov
push
in
inc
dec
lret
jb,pt
adc
cmp
pushf
xor
add
mov
sbb
xor
cmp
sbb
stc
lahf
inc
hlt
insl
push
mov
jb,pt
iret
into
pop
or
add
add
dec
dec
and
jae
add
jne
or
pop
pop
fildl
in
ret
out
mov
jns
out
test
test
jg
daa
inc
add
add
mov
outsl
inc
add
add
dec
add
add
inc
add
add
mov
mov
mov
inc
add
add
jecxz
nop
int
mov
xor
pop
dec
sbb
push
mov
in
call
add
mov
arpl
add
add
xchg
idivl
repnz
add
or
add
add
mov
mov
add
adc
inc
dec
add
dec
and
mov
repz
test
addl
dec
add
add
and
and
add
insl
add
add
add
add
jno
mov
mov
pop
cmp
jge
lods
push
cmpsl
cmpsl
lods
stc
jae
outsl
rcrb
add
std
xlat
les
push
adcb
pop
jo
adc
int
sub
mov
stos
sbbb
pop
xor
mov
pop
xlat
mov
movsl
xchg
mov
jbe
out
mov
mov
add
hlt
add
pop
add
sbb
in
adc
stos
rcrb
add
in
xchg
pop
dec
jp
in
inc
test
mov
add
orl
add
mov
cmpsl
push
in
rorl
add
add
add
nop
adc
out
fisttpl
pop
push
loop
sub
mov
lock
add
ror
rolb
dec
add
add
add
add
test
lret
in
stos
xor
js
or
in
ss
mov
or
add
add
mov
das
pop
or
push
jecxz
add
add
add
lahf
fwait
arpl
sarb
add
mov
iret
std
jns
pop
sbb
mov
cmp
out
inc
les
ss
dec
loopne
sbb
dec
into
cmpsl
test
dec
add
push
add
aad
and
lock
add
mov
inc
sbb
test
in
add
mov
nop
sbb
mov
lret
sbb
enter
imul
mov
xlat
nop
shrb
leave
and
add
add
mov
nop
cld
fisttpll
mov
xchg
adc
inc
xchg
cmp
or
dec
adc
add
add
std
and
and
add
add
shrl
mov
dec
add
add
in
adc
sbb
add
inc
push
nop
ficompl
inc
jo
ljmp
inc
dec
adc
test
mov
and
mov
dec
add
add
add
adc
icebp
in
test
adc
mov
mov
xchg
adc
mov
push
loopne
jl
sahf
pop
repnz
jmp
sbb
pop
fistpll
adc
enter
ret
jecxz
rcrb
mov
mov
push
out
jp
std
mov
pop
enter
mov
adc
outsb
jae
cmp
stos
cmpsb
xor
insl
aad
push
sub
add
add
mov
mov
arpl
push
cmp
shr
ret
pop
test
xchg
lock
mov
in
es
insl
sub
add
add
loop
insb
add
idivl
call
mov
les
adc
inc
mov
mov
aas
dec
call
mov
out
mov
jns
sbb
mov
sbb
hlt
mov
add
add
dec
add
add
pop
add
mov
and
add
add
pusha
add
add
add
push
aad
shll
test
adc
lret
jno
mov
mov
test
mov
fmuls
mov
clc
or
mov
jne
mov
push
mov
add
cmp
inc
popf
repz
test
das
dec
add
and
mov
iret
insb
add
mov
mov
sub
hlt
jae
mov
mov
push
ds
enter
add
lcall
mov
js
fstpl
adc
lods
gs
fldcw
inc
xchg
lods
jmp
push
jmp
inc
add
test
push
rcll
push
and
add
add
xor
fsubs
push
mov
mov
jno
sbb
iret
fldenv
xchg
fwait
push
push
mov
test
and
dec
repz
mov
cmp
mov
test
push
mov
fwait
mov
xchg
mov
dec
xor
decl
xor
pop
das
popa
rcrl
push
mov
add
add
pop
pushf
push
cwtl
sbb
lcall
lods
les
adc
inc
jecxz
sub
mov
sub
es
mov
sbb
pushf
mov
add
imul
push
das
cmp
dec
mov
add
stos
in
mov
add
add
or
int3
cmpsb
into
out
add
iret
cmpsl
je
sub
jecxz
aas
mov
pushf
adc
stos
rclb
xor
add
add
mov
fimull
movsl
mov
dec
clc
inc
hlt
leave
or
mov
pop
stc
mov
sub
cwtl
sar
mov
push
inc
into
orl
add
add
sbb
dec
push
bnd
xchg
daa
push
cmpb
rcr
jl
scas
cwtl
push
or
add
add
push
in
mov
dec
jge
shll
repz
pop
arpl
xor
ficomps
add
add
sub
mov
aam
in
add
add
lahf
aas
clc
fidivrl
pop
je
mov
push
scas
insl
pop
or
mov
jle
cwtl
dec
in
mov
fcomi
sub
pop
inc
pop
fbstp
add
dec
add
add
movsl
and
mov
mov
aas
into
addr16
push
adc
leave
or
mov
je
add
pusha
add
cmc
lcall
adc
and
add
or
add
push
inc
add
mov
cmp
add
popa
push
sahf
add
xor
orl
add
push
sbb
faddl
gs
shrl
mov
mov
cmc
aam
loop
ds
dec
mov
fcmovnbe
mov
sub
scas
cs
icebp
add
fisttps
mov
push
jecxz
mov
cld
pop
mov
mov
mov
pop
shrl
popa
xchg
lcall
fisttps
add
adc
inc
inc
ret
mov
test
mov
mov
add
push
data16
inc
aaa
mov
mov
test
jae
ret
inc
add
fstl
lds
shlb
aam
sahf
hlt
pop
and
mov
sub
mov
sbb
adc
cmp
div
jecxz
or
add
add
or
into
ljmp
lea
fsubrs
jl
cmp
pushf
ss
xchg
cmp
pop
dec
add
add
cmc
adc
cmp
push
jl
adc
push
push
icebp
add
mov
imul
sub
aam
or
add
add
xchg
mov
cmp
mov
adc
add
pop
add
popa
shl
popa
loop
movsl
sbb
xchg
or
fdivrs
jo
imul
rep
pop
jecxz
test
sbb
push
mov
sub
es
mov
pop
scas
add
pop
pop
movsl
xchg
push
aas
adc
pop
into
pop
inc
add
add
cmc
fsubr
cmpsl
gs
pop
cmovne
dec
jnp
xchg
pop
sub
add
xchg
pusha
add
add
loop
jo
mov
mov
jb
add
add
add
leave
mov
jle
xor
pop
pop
cmp
ss
cmp
add
add
fmull
fisttpll
add
outsl
adc
lock
sbb
sbb
add
add
aaa
out
mov
in
shl
mov
pop
nop
pop
pop
jnp
dec
mov
add
lods
les
add
bound
cli
in
sbb
cmp
inc
dec
add
dec
or
mov
fcomps
jbe
ret
lds
xchg
cltd
jp
xor
insb
add
add
jae
es
fisubs
or
add
pop
inc
lds
add
add
add
fcmove
sti
push
je
jle
outsl
nop
or
add
add
add
add
aam
pop
inc
mov
adc
stc
or
mov
mov
inc
cli
jle
mov
pop
mov
fidivs
rolb
mov
adc
inc
fcompl
mov
dec
add
mov
xlat
sub
mov
and
push
pop
cmp
or
mov
mov
cld
roll
add
pop
fcompl
push
xor
leave
out
xor
mov
dec
fistl
push
test
jnp
ja
cmp
jle
jns
sbb
scas
mov
mov
and
xchg
test
dec
push
lcall
insb
add
add
clc
and
cmp
add
push
xlat
cmp
xchg
pop
movsl
jo
xlat
iret
mov
mov
mov
add
and
mov
pop
test
mov
mov
loopne
pop
jmp
dec
inc
cmp
insl
mov
dec
nop
outsl
insb
add
add
movsl
outsb
insl
cwtl
inc
adc
pop
sbb
shl
dec
stos
dec
push
sub
add
add
dec
cmc
mov
mov
sbb
add
add
add
mov
call
jmp
add
subl
pop
lcall
mov
js
mov
data16
pushf
pushf
in
mov
sbb
add
add
xor
add
add
add
add
xchg
or
iret
insl
popa
mov
out
rorb
repnz
lods
jecxz
add
cmpsb
add
add
aas
push
add
sbb
sub
inc
add
add
inc
add
mov
push
mov
push
sbb
push
sar
xor
add
add
mov
xchg
xchg
in
dec
add
add
sbb
bound
add
add
xor
add
or
fucomp
cmpsb
sbb
inc
sub
out
in
dec
inc
add
add
cmp
es
sbb
jmp
push
sti
hlt
jnp
jo
and
pop
push
xor
add
add
adc
pop
js
add
add
in
out
mov
add
add
mov
scas
es
fcmove
sbb
mov
stos
lcall
mov
cmp
dec
add
cmp
in
xor
enter
repz
xchg
push
push
loop
and
mov
lahf
cmpsb
mov
push
push
gs
test
mov
xor
iret
adc
add
add
or
xchg
or
xor
add
add
mov
xor
mov
out
push
and
mov
xchg
int
mov
clc
in
jge
icebp
jns
jmp
add
mov
add
add
fdivrl
movsb
orl
movl
dec
add
add
fstl
xchg
pop
mov
inc
add
add
push
pop
divb
out
inc
add
add
add
mov
add
icebp
addb
add
mov
xchg
into
iret
cmpsb
data16
adc
add
or
push
and
inc
sbb
or
add
add
enter
sub
in
xchg
inc
add
xlat
sahf
leave
mov
push
arpl
or
and
or
mov
push
enter
add
add
mov
sbb
cld
sbb
add
ljmp
sub
pop
test
jno
test
pop
in
push
iret
and
add
add
sbb
jg
sar
loope
pop
add
sub
mov
mov
test
mov
cltd
sub
jns
mov
add
or
add
add
lods
inc
dec
out
pop
mov
sub
add
add
jle
add
mov
stos
mov
mov
out
cmc
scas
pop
pop
mov
push
ret
ret
lock
mov
mov
fimull
add
add
mov
add
mov
dec
pop
movsb
add
pop
call
add
and
add
add
add
add
out
xchg
jo
pop
ljmp
add
dec
out
dec
lods
sbb
mov
shll
call
cld
clc
scas
mov
xchg
mov
pop
mov
es
add
mov
mov
sub
add
mov
jo
bound
mov
cmp
js
cmpsl
repz
scas
dec
mov
add
add
out
jne
fsts
sbbl
shrb
push
xor
outsb
scas
pop
mov
inc
notb
add
add
lea
lock
in
jg
and
test
lret
xor
dec
fsubrs
push
popa
movsl
lock
mov
bnd
xchg
sbb
lahf
sub
cld
jns
imul
jge
pop
fisttpl
ficomps
add
add
lret
push
xchg
stc
mov
add
mov
test
cmc
mov
push
icebp
addr16
add
add
std
loope
cld
xlat
cli
and
add
add
add
aad
adc
pop
cld
xchg
add
loope
popa
ret
adcb
or
or
aaa
xchg
dec
add
add
inc
das
in
push
dec
sub
mov
mov
xor
sbb
jmp
jno
push
xor
pop
jo
cmpsl
jmp
add
xor
inc
repnz
add
add
sub
mov
mov
adc
aaa
sbb
add
shlb
repz
mov
push
data16
andl
add
add
xchg
mov
xor
sbbb
add
add
xchg
adc
jae
sti
je
fimull
imul
xchg
fiadds
sbb
add
jne
jle
xchg
pop
cmp
add
add
bswap
cmp
daa
aam
cmp
cs
xor
add
dec
add
inc
push
sub
mov
adcb
xchg
push
inc
push
out
xchg
adc
dec
add
add
cmp
add
mov
popa
in
fsubs
dec
int3
push
mov
fdivrs
push
mov
pop
out
xchg
mov
add
hlt
rorb
cmp
fwait
in
jb
sbb
pop
je
imull
jmp
lcall
outsb
sub
inc
add
add
mov
scas
mov
add
pop
mov
gs
and
mov
andb
add
sub
mov
mov
add
popf
xchg
je
out
mov
andb
xchg
add
add
icebp
insl
shr
adc
jmp
fidivs
lock
insb
add
add
sub
repz
adc
dec
add
imul
cmp
mov
jnp
ret
test
add
ds
ja
mov
add
push
insb
add
mov
sbb
xchg
xor
inc
xchg
sbb
xor
jg
add
std
jge
lahf
push
pop
mov
jae
cmp
cmp
add
jle
add
add
es
test
pop
pop
je
lock
add
mov
mov
add
add
adc
negb
lock
popa
mov
ljmp
jmp
or
fidivrs
flds
lods
ja
and
gs
test
sbb
aas
bound
clc
in
bound
rorl
add
dec
fwait
and
pop
adc
sahf
es
sti
and
xchg
adc
mov
xor
mov
mov
add
stos
push
mov
ret
rcrl
jae
jo
pusha
add
add
mov
in
sarb
dec
pusha
add
push
repz
add
sti
imul
jae
in
add
aam
push
pop
push
inc
out
outsl
mov
pushw
jmp
lods
push
push
adc
cld
pop
and
add
add
add
fsubrl
jl
add
add
add
insb
add
add
repz
mov
mov
add
add
cmp
push
jp
sub
mov
xchg
bnd
in
das
sarl
test
nop
pop
enter
mov
and
fnstcw
add
xlat
inc
mov
xchg
lret
pusha
add
add
add
xchg
sub
add
add
stos
test
mov
mov
cmp
xchg
push
fistps
aad
aad
add
add
fisubl
add
cmp
add
xchg
or
add
add
add
in
pusha
add
add
xchg
jecxz
xlat
sbb
shlb
cwtl
imulb
es
outsl
mov
add
add
add
add
pop
mov
aam
sbb
push
test
leave
pop
dec
outsl
popf
mov
mov
outsb
mov
in
inc
fisubrl
test
or
add
add
mov
scas
aam
fstpl
add
add
aad
rorl
and
xor
xchg
out
jmp
xchg
mov
int3
insb
add
mov
test
push
adc
jno
jae
jnp
and
jmp
add
adc
fsubr
sahf
dec
inc
mov
mov
add
jmp
cmp
add
add
xchg
cmpsl
repnz
jmp
add
add
rcr
or
stos
addr16
adc
add
push
aaa
sbb
inc
add
movsb
nop
dec
add
mov
shll
mov
or
mov
or
add
add
icebp
mov
inc
and
fistl
lret
aas
rorl
pop
sti
pop
pop
sbb
das
out
lods
inc
cmp
lret
jno
and
test
add
add
add
bound
iret
repz
scas
jne
fistpl
push
aad
ficomps
add
add
dec
lods
mov
jns
xor
arpl
mov
inc
test
cmp
mov
add
stc
rcr
pop
mov
das
je
sub
add
add
dec
js
mov
pop
fnstsw
jnp
add
xor
clc
and
shlb
stos
dec
repnz
stc
cmp
cmp
fcmovu
jbe
out
pop
cmpsb
pop
mov
fwait
xchg
push
ds
add
add
mov
xchg
or
add
fidivrs
cmp
int3
mov
xchg
pop
xor
mov
scas
imul
xor
pop
cmpsl
jmp
ljmp
add
out
mov
mov
aaa
in
pushf
dec
lret
sbb
out
dec
lret
outsb
shrb
add
int
iret
in
out
add
or
insl
xor
and
add
add
cmpsb
and
mov
mov
pop
push
mov
add
add
push
sub
scas
xlat
lret
mov
mov
jmp
shll
add
imul
mov
psubusw
mov
xchg
or
mov
mov
add
aam
cwtl
in
xchg
mov
loope
and
add
mov
add
add
or
and
mov
add
xchg
or
add
add
jbe
mov
add
add
lods
rcrl
xchg
lea
imul
aas
mov
dec
push
mov
popa
jb
add
or
mov
lret
dec
add
adc
add
add
add
inc
lret
jne
add
or
mov
dec
mov
mov
xor
add
and
mov
data16
add
mov
add
mov
lods
and
add
add
xchg
and
add
add
jb
lds
jne
add
add
add
sbb
xor
and
inc
mov
adc
add
mov
fisubl
add
and
daa
sbb
lods
sub
insl
xor
outsl
xchg
push
arpl
decb
in
je
inc
int
mov
sub
add
add
jecxz
push
xchg
add
add
bound
pop
xor
sbb
mov
cmp
inc
mov
add
add
imulb
sarl
ljmp
movsb
sbb
enter
lea
test
cmp
xor
add
dec
push
and
push
sub
setb
mov
pop
cld
cwtl
jo
lret
jge
mov
adc
repz
mov
pop
or
aam
lods
sub
add
add
inc
mov
outsl
xlat
sbb
add
insl
test
sub
mov
inc
jae
stos
mov
add
pop
inc
xlat
insb
add
cs
cmp
pusha
add
lahf
cmp
xchg
xor
mov
cmpsb
cmp
mov
xchg
adc
push
mov
push
xchg
pushf
cmp
add
add
test
xor
cltd
sub
mov
add
add
daa
call
pushf
sbb
add
cmp
addr16
dec
mov
imul
xorb
aas
cmp
mov
mov
add
add
pop
push
popa
fcompl
xor
inc
sub
sbb
addr16
arpl
ret
jecxz
inc
or
mov
jne
dec
add
add
add
sub
push
push
icebp
xchg
movsb
add
push
lret
pushl
fldcw
shlb
add
mov
add
add
stos
mov
adc
pusha
add
add
mov
inc
add
add
scas
xor
inc
add
add
push
jge
repz
pop
fistl
shrb
test
or
add
add
popa
pop
in
fwait
sbb
pop
push
sub
mov
cmc
inc
push
mov
adc
lret
xchg
adc
or
mov
cmp
xchg
lret
adc
pop
jle
mov
dec
add
add
jo
xor
and
ds
insb
add
ffreep
mov
mov
lahf
mov
mov
stos
rcl
repz
add
add
push
push
int
imul
push
in
jno
mov
lret
push
filds
jecxz
or
pushf
addr16
add
add
add
mov
fidivs
rorl
add
xchg
sub
add
jne
ds
mov
repz
aas
mov
sub
add
add
mov
xor
inc
and
mov
in
stos
stos
int
fdivs
std
repz
add
sbb
popf
das
ret
jnp
jl
imul
fnsave
add
add
push
in
ljmp
stos
rol
mov
add
loop
mov
add
add
push
xor
sarb
les
sti
push
cmpsb
adc
cmpsl
dec
setge
cmc
hlt
xor
mov
das
gs
leave
call
jne
mov
js
std
dec
add
inc
lock
add
sbb
cmc
mov
push
out
inc
pcmpgtw
cmpsb
push
add
add
mov
add
add
fucomi
lea
inc
cmpsb
adc
aas
clc
cmp
aaa
shlb
in
sbb
add
add
xor
push
test
popa
rcl
xor
add
add
add
push
dec
aam
stos
mov
pop
out
inc
dec
add
add
in
pop
out
stc
aad
enter
cmp
add
pop
mov
cmp
stc
xchg
daa
sbb
add
mov
pop
cltd
dec
mov
mov
mov
adc
jge,pn
int
mov
jmp
lds
xchg
and
push
sbb
or
imul
and
add
add
imul
dec
jne
inc
add
call
sbb
push
dec
push
pop
mov
add
jmp
inc
inc
add
add
in
loopne
jb
push
cmp
mov
inc
add
push
xchg
xor
pop
mov
sub
fstpl
sahf
lcall
icebp
xor
xor
in
out
lods
loop
mov
pop
pop
adc
subb
and
adc
add
lahf
xor
inc
mov
ja
add
sbb
mov
and
inc
dec
xchg
add
jae
call
mov
pop
enter
xchg
daa
stos
lea
xchg
int
lods
adc
pop
jecxz
aaa
notl
ror
stc
xchg
mov
xchg
cmp
inc
dec
push
icebp
jecxz
jb
add
add
leave
jle
and
mov
push
in
adc
jb
aam
add
add
add
cs
add
lds
fistpl
add
add
fbstp
lods
xor
es
cs
inc
js
scas
stc
mov
mov
jl
stos
mov
into
sub
mov
mov
scas
push
add
add
add
push
into
push
sbb
add
mov
sbb
ret
scas
scas
push
inc
add
inc
add
call
cwtl
int
stos
or
xchg
add
fisubl
ret
inc
add
add
outsl
sahf
jp
insb
add
add
ret
inc
add
add
mov
add
add
push
std
test
add
add
or
repz
push
std
div
inc
jecxz
push
cmp
hlt
inc
lret
and
mov
popf
daa
in
jl
mov
fcompl
fisttpll
adc
stos
loopne
adc
add
add
and
pusha
add
mov
adc
or
stc
cmp
mov
xchg
inc
add
js
call
push
mov
enter
movsl
add
std
cmp
sbb
notl
fiaddl
pop
shlb
ficoms
mov
cltd
fstpl
ror
adc
mov
scas
pop
jle
std
lret
mov
dec
adc
aaa
sub
and
or
outsl
mov
cmp
cld
lcall
cltd
pop
pop
scas
jae
movl
sub
ret
add
add
popf
add
add
add
js
and
mov
dec
popa
cmp
add
mov
jle
xchg
sbb
loop
mov
cld
jecxz
scas
gs
test
sbb
jg
nop
adc
dec
pusha
add
add
add
mov
mov
adc
rorb
das
sub
or
lcall
popf
fdiv
pop
xchg
lahf
dec
add
pop
repz
mov
sbb
inc
and
inc
add
add
mov
add
mov
dec
or
cmp
mov
outsb
xlat
mov
jp
add
ja
add
add
dec
pop
push
jp
cs
sub
and
cmpsb
nop
out
lods
add
add
imull
bound
add
add
enter
aam
pop
and
stos
dec
xor
add
lods
aad
cmp
push
or
movsl
and
stos
xor
lret
pop
mov
mov
xchg
cmp
add
add
cmc
cmp
lcall
rcrb
ljmp
out
shrl
add
sub
ds
mov
jl
je
push
inc
add
add
add
push
cmp
insb
add
add
add
inc
lods
push
and
insl
js
test
mov
cmp
add
jno
insl
xchg
stos
leave
lret
jle
xchg
adc
xor
inc
add
add
mov
pop
outsb
push
push
sahf
mov
add
add
and
add
ja
add
add
add
jmp
ret
jnp
pop
mov
add
add
aaa
lock
ss
mov
adc
gs
ret
pop
mov
add
add
test
mov
mov
nop
stos
sub
fadd
pushf
shlb
add
pushf
cltd
scas
insb
add
add
out
lahf
push
movsb
inc
add
mov
ret
or
add
add
roll
mov
xchg
pop
es
das
fisubs
fildl
jmp
out
popa
rcrb
inc
mov
std
mov
ja
xor
into
scas
test
lods
pusha
add
add
mov
add
add
negl
or
cltd
lods
leave
pop
call
mov
iret
mov
mov
add
dec
insb
add
dec
add
movsb
movsl
sbb
cmc
shlb
stc
in
test
call
inc
add
mov
mov
mov
mov
pop
add
push
inc
add
mov
pop
pop
std
cmpsb
lahf
std
inc
add
xchg
sti
sahf
cwtl
mov
sbb
xor
flds
aaa
arpl
inc
movsb
jecxz
cmp
push
cmpsl
shll
rorl
xor
push
xchg
mov
xchg
cmp
shrb
jb
jl
cmp
lcall
pop
cmp
xor
add
add
inc
mov
or
add
clc
lcall
dec
xorl
cs
pop
pop
ror
adc
dec
je
push
aas
movsl
jo
mov
in
xor
popa
repz
fldt
daa
scas
and
mov
add
add
imul
and
aad
pop
out
mov
and
add
add
dec
into
lds
add
lea
popa
mov
jle
sub
add
add
add
dec
daa
inc
inc
out
adc
push
xor
pop
adc
imul
xor
fstl
cmp
int
js
jecxz
mov
sbb
mov
js
jp
add
mov
pusha
add
jle
fsts
test
cmp
enter
icebp
inc
mov
add
add
pop
adc
add
add
mov
out
add
add
nop
test
adc
and
adc
cmpsl
inc
add
xchg
dec
test
mov
test
add
add
mov
movsb
push
enter
add
add
xchg
mov
shl
and
jns
popf
pop
add
pop
mov
xor
insl
out
sub
push
add
add
arpl
jp
outsl
sahf
scas
fldt
xchg
cwtl
or
add
add
dec
add
add
xchg
int
rep
adc
nop
pop
sub
dec
add
add
push
mov
add
mov
sahf
pop
stos
fadds
xor
and
mov
adc
es
lods
xor
cwtl
lret
add
mov
movsl
add
sub
mov
arpl
adc
add
mov
add
pop
adc
add
mov
shlb
add
outsl
vmovsd
mov
pop
or
add
add
mov
mov
push
lcall
adc
add
add
lds
inc
add
add
gs
add
add
add
dec
add
add
jge
or
add
add
out
cmp
mov
sbb
fsubl
add
add
in
pop
xchg
mov
add
ficoml
pop
jmp
in
pop
leave
rclb
les
sub
jge
mov
add
pop
adc
sbb
je
loope
mov
sub
add
add
add
add
mov
pop
pop
mov
xchg
test
in
dec
pop
xchg
out
jmp
test
adc
fdivrs
test
fnstenv
inc
add
add
lea
test
aad
popf
inc
sarb
push
xchg
mov
or
repz
lods
mov
add
add
int
inc
add
add
jmp
add
add
mov
add
fbstp
das
popa
dec
popf
inc
scas
sub
push
pop
nop
fld
hlt
adc
xchg
fwait
imul
sub
aad
clc
mov
dec
add
add
loope
test
fcmove
test
add
stos
push
cmp
xchg
aaa
int3
ds
add
add
pop
int3
add
mov
cmp
out
cld
or
add
add
fsubrl
push
cmp
mov
cmp
xchg
mov
imul
and
imul
lods
ja
js
push
xor
cmpsl
out
add
adc
and
add
add
add
pop
or
adc
stos
xchg
sub
pop
sbb
sub
jne
adc
ljmp
adc
inc
mov
add
add
insb
add
jmp
add
in
fldl
fildll
ret
mov
out
cwtl
in
mov
add
mov
jbe
add
mov
push
dec
add
add
xchg
das
imul
inc
jmp
insb
add
add
jmp
aaa
ss
sbb
push
ds
cmp
or
mov
add
sbbl
hlt
mov
mov
stos
and
mov
aad
cmpsb
imul
aaa
lods
xchg
inc
add
add
pop
std
and
icebp
arpl
add
add
repz
mov
dec
add
and
add
add
dec
xchg
jmp
dec
add
add
dec
loope
mov
subb
ja
cmp
mov
fwait
jmp
mov
add
pop
in
out
shll
mov
inc
add
add
ret
xorb
fadds
sbb
dec
add
jnp
sahf
mov
add
add
mov
lahf
or
mov
cmc
cltd
fldcw
ja
dec
jle
lret
lahf
mov
ds
xchg
dec
cmp
dec
jb
inc
xchg
test
jg
push
clc
mov
cmp
add
outsb
mov
add
add
cmpsl
pop
sahf
icebp
mov
insb
add
add
jns
fsubrp
cmp
adcb
jecxz
pop
cmp
ss
fwait
push
or
jno
andb
lods
nop
stos
mov
or
lahf
dec
dec
pop
jecxz
stos
mov
add
je
lods
repz
das
cmpsl
mov
lret
jecxz
aaa
adc
test
xor
subl
hlt
in
inc
add
add
stc
xchg
and
mov
fcmovne
or
xor
add
or
push
cwtl
mov
mov
push
data16
es
out
js
sar
mov
and
xchg
out
es
add
add
add
add
add
mov
data16
add
dec
outsb
dec
movsl
lret
lret
aad
stos
push
lcall
add
add
add
add
add
adc
add
mov
add
add
xchg
lods
out
and
mov
jno
jno
and
pop
das
aas
mov
mov
add
add
mov
add
mov
scas
imul
mov
add
sub
mov
jns
adc
loop
push
or
add
add
mov
add
add
add
add
insl
out
and
pop
sub
push
push
jno
sub
xchg
out
repz
xchg
push
rorl
add
add
add
mov
ss
enter
sbb
cmp
dec
jns
sub
test
add
mov
add
jae
loop
clc
jecxz
loope
std
inc
add
jg
sbb
dec
add
pop
add
xlat
inc
dec
loop
add
add
es
pop
cmpl
add
push
fimuls
add
lods
mov
lret
scas
mov
imul
rorl
das
jbe
add
add
xchg
jo
pop
lds
scas
hlt
test
and
add
add
data16
mov
dec
add
aad
xor
js
lods
mov
add
aam
loopne
int
add
gs
lods
sub
sbb
andb
imull
mov
mov
adc
popf
lret
xor
adc
add
aas
pop
pop
popa
stos
fnstenv
pop
sub
add
add
jae
jge
mov
sbb
fcoml
cli
arpl
ljmp
sti
popa
cs
fadds
outsl
mov
pop
lods
mov
dec
pop
xchg
add
scas
in
pop
rolb
leave
mov
dec
xchg
xchg
push
fimull
icebp
mov
orl
adc
mov
inc
popf
rcl
movl
rcrb
daa
pushf
mov
add
add
jo
imul
pop
add
mov
add
and
mov
mov
add
add
shll
shll
fnstsw
imul
cmc
dec
xchg
nop
and
ror
mov
push
inc
add
add
aaa
mov
out
add
stos
stc
or
or
add
addr16
test
call
cmpsb
inc
add
mov
mov
jo
add
add
in
jne
dec
cld
rcl
xchg
mov
aas
mov
leave
jg
push
add
add
in
mov
xorb
mov
and
add
add
in
je
pop
adc
sahf
or
ret
dec
pop
mov
inc
add
add
cwtl
gs
sbb
mov
add
add
dec
add
dec
add
add
in
aaa
fisttpl
int3
iret
notb
sbb
add
insb
add
jnp
in
sub
in
sub
add
add
mov
jbe
push
sbb
sbb
mov
add
add
fcmovu
cmp
add
fnsave
add
mov
pop
xchg
push
mov
mov
icebp
or
add
mov
aad
add
add
jg
and
call
shrb
add
sub
dec
std
cli
enter
fldt
outsb
mov
cmpsb
jp
push
inc
or
xor
arpl
cmpsb
addr16
popf
xchg
xorb
mov
mov
in
shll
add
add
sbb
inc
out
jbe
cld
add
ret
sbb
add
pop
outsl
sub
lahf
and
add
add
add
mov
push
cmp
pop
adc
xor
dec
push
into
xchg
jns
movsb
xchg
sub
xchg
add
add
fdivr
sbb
push
call
fcoml
and
loope
shll
add
mov
dec
mov
fmuls
sbb
cmp
add
add
stos
push
mov
enter
xor
add
add
add
jno
pop
hlt
push
in
mov
es
lds
jo
adc
enter
int
push
xchg
cmp
push
imul
xchg
in
orl
insb
add
add
lea
rolb
add
add
stos
sbb
adc
push
xor
aam
out
jp
std
movsl
jo
in
rep
ss
add
add
mov
sub
and
mov
add
sarb
loope
add
add
int3
lock
cmp
cld
roll
add
add
dec
add
add
add
add
add
into
or
add
cmp
xor
push
mov
pop
add
add
enter
jb
stc
repz
aam
or
cmp
xchg
dec
pminub
ljmp
add
add
mov
dec
enter
add
push
cmpb
jae
pop
aas
cld
dec
dec
mov
outsl
add
jae
mov
sub
mov
fwait
add
mov
jmp
add
add
mov
sahf
decl
adc
pop
inc
add
add
xorl
pop
icebp
pop
leave
daa
xchg
mov
rclb
out
add
mov
popa
lock
out
add
add
iret
inc
test
or
add
add
out
fsubrp
jg
ja
mov
inc
push
xchg
iret
xchg
dec
rclb
je
add
fsubrl
mov
pop
jns
sbb
std
inc
add
add
lahf
stc
adc
add
push
xchg
les
pushf
sti
mov
aam
add
adc
mov
mov
add
add
add
stos
dec
mov
jno
add
push
jp
jb
repz
add
add
das
dec
call
aam
loopne
push
scas
mov
add
pop
jmp
pop
in
mov
imul
lods
cwtl
frstor
fnstsw
out
add
ret
xchg
push
pop
or
add
add
lock
pmuludq
fildl
out
or
push
and
or
lods
sbb
aad
cltd
fldcw
and
mov
clc
jle
fdivs
loop
iret
cmp
ss
jo
add
add
add
data16
mov
add
mov
shl
jmp
rcr
mov
jno
cmpsb
add
jb
rcr
xor
scas
jne
add
ror
gs
shl
filds
mov
ljmp
stos
dec
add
into
int3
adc
jge
mov
or
mov
lds
xchg
pop
sbb
push
repnz
add
add
sub
mov
add
add
xchg
sub
add
arpl
xchg
insl
stos
stos
loopne
mov
push
add
cmpsl
sbb
sbb
lret
das
adc
add
add
lds
ja
jne
scas
fwait
mov
test
jo
mov
push
dec
std
shlb
add
add
shll
xchg
dec
add
add
pushf
jmp
cmp
jge
xchg
push
pop
mov
shrl
inc
roll
adc
adc
leave
sub
sub
dec
add
dec
add
add
jp
fcomps
push
fcompl
xchg
add
add
add
mov
out
xlat
and
mov
xchg
int
pop
outsb
cmp
add
enter
fcoms
mov
add
add
subl
add
call
rorl
pop
jnp
cmp
movb
rcll
add
lea
mov
cld
test
push
filds
mov
mov
aaa
fistpl
in
inc
outsb
dec
add
add
push
mov
add
loop
jg
jnp
movsl
out
ja
vpsubusb
pop
push
inc
add
mov
add
push
dec
add
mov
dec
mov
add
push
scas
jp
jp
add
add
push
test
test
sub
mov
lret
mov
nop
xor
jne
add
ja
inc
add
add
add
add
movaps
add
add
xor
add
leave
test
je
je
mov
shl
loop
push
mov
add
ret
repnz
outsl
fwait
jo
shl
pop
inc
lock
outsb
push
shll
adc
adc
test
scas
xlat
ds
shlb
add
jmp
imul
cld
push
leave
mov
movb
dec
add
adc
adc
mov
mov
xor
mov
pop
or
xor
mov
sub
add
inc
add
mov
sarl
ss
mov
jg
shl
out
popf
hlt
sub
cmp
les
ret
scas
scas
mov
add
add
add
add
add
fnstcw
dec
add
add
mov
add
mov
fcmovb
push
xchg
mov
pop
cs
pop
xchg
push
pop
cwtd
add
jne
scas
sbb
sub
mov
fnstsw
xor
cmpsb
fidivrs
incl
xchg
ljmp
add
shrl
out
cmp
fstl
jb
rcll
adcl
jl
enter
sub
add
add
xchg
ret
push
cmpl
es
call
mov
push
xchg
mov
aam
test
pop
pop
rorb
add
add
pop
adc
cltd
arpl
cmp
andb
sbb
lods
imul
jns
add
add
mov
inc
sahf
ret
enter
dec
mov
add
out
inc
je
repnz
xor
add
cmp
testb
add
sub
pop
pop
jnp
jle
adc
addb
add
pop
lods
insl
jle
jne
lcall
push
out
sub
add
add
jl
fwait
push
mov
add
int3
out
mov
std
pop
icebp
in
loopne
mov
iret
popa
mov
add
mov
sti
test
jge
cmp
bound
ficoml
add
mov
add
add
add
and
insb
add
pop
bound
ljmp
add
add
pop
imul
gs
cmp
push
pop
jnp
das
mov
cmc
sub
mov
jnp
xchg
adc
movsl
sub
add
add
add
xor
or
add
add
gs
and
mov
repnz
and
xor
add
add
fistpll
test
add
add
jecxz
add
add
push
test
fcomps
xchg
lea
pop
add
mov
pushl
add
mov
shl
and
add
add
popf
push
movsl
jmp
cmc
cmpsl
out
or
add
rorb
mov
pushf
mov
add
pop
push
fsubl
push
sub
mov
fstl
pop
out
adc
in
adc
popf
rcrl
sbb
sbb
xor
add
add
add
jo
xchg
rcrb
pop
xchg
push
xchg
mov
scas
lods
and
add
add
cmpsl
xor
xchg
cltd
mov
or
jo
imul
lret
in
adc
sub
mov
mov
mov
add
movsb
jno
fwait
dec
mov
pop
lods
inc
xor
nop
mov
adcl
scas
sbb
mov
rcrb
stc
adc
sbb
xchg
add
decb
call
jecxz
pop
jns
mov
lahf
fwait
cltd
repz
into
inc
aad
mov
dec
pop
xor
inc
imul
sbb
stos
test
mov
mov
and
and
add
add
dec
rcrl
sbb
add
hlt
sbbw
pop
sbb
out
and
mov
sub
mov
cmp
add
stos
inc
add
add
mov
xchg
sti
cmp
or
stos
push
popa
and
mov
test
and
and
add
add
in
add
mov
movsb
cmc
aaa
nop
std
ret
mov
dec
scas
mov
outsl
push
fsubr
aaa
pop
jecxz
scas
jae
inc
test
das
jno
lret
push
add
ret
test
add
add
add
insb
add
add
push
lds
jnp
and
aam
stos
out
in
scas
pop
xorb
add
ffree
cmp
scas
stc
mov
cmpsb
xchg
add
add
and
or
add
add
rcl
out
fwait
les
out
addb
mov
push
in
out
cld
jns
jle
add
jecxz
pop
sti
lds
dec
lcall
cmpsb
sbb
add
popf
mov
test
mov
add
fcompl
xlat
mov
in
icebp
jmp
sbb
ret
std
add
mov
out
mov
xchg
ja
add
mov
push
xor
jle
add
mov
or
es
dec
cmp
push
iret
repnz
mov
sbb
cltd
hlt
mov
cmp
insb
add
mov
test
xor
insb
add
add
mov
xor
jl
data16
add
add
add
fwait
cmp
out
mov
jbe
jns
shll
pop
test
sub
push
jnp
inc
add
mov
cmpsb
or
adc
inc
pop
fnstcw
sahf
push
lea
jne
and
mov
lret
test
lods
or
add
add
mov
mov
pop
jo
leave
repz
daa
cmp
ja
add
jae
jae
pop
rcrb
jns
jecxz
icebp
pop
push
movsb
sahf
rcll
mov
pop
sub
jo
pop
add
mov
std
hlt
leave
sbb
cmp
jae
int3
mov
dec
pop
into
ret
btc
adc
add
aam
es
cmp
mov
in
test
push
dec
or
cmp
dec
add
add
add
cmp
sti
ss
test
inc
sti
cltd
jno
fbstp
int3
adc
mov
add
add
test
dec
add
add
jle
pop
jecxz
push
sub
add
add
fldenv
and
add
leave
jmp
sbb
lret
xor
add
add
jg
add
mov
push
lds
jmp
add
xchg
xchg
imul
cli
xor
mov
adc
fdivs
xchg
int
cmp
add
jmp
cmp
push
shr
jno
fistpll
out
sub
add
add
dec
lahf
sti
pop
mov
dec
lahf
mov
add
sub
add
add
add
daa
mov
jg
sbb
mov
xchg
mov
push
pusha
add
add
mov
jae
dec
cmp
add
mov
cltd
out
cli
jmp
test
push
pop
out
xor
add
cmp
adcl
imul
add
add
out
int3
sbb
mov
jnp
sub
add
add
or
sub
add
add
sub
lahf
mov
cmp
ja
es
mov
aaa
mov
lcall
or
outsl
pop
or
add
add
rolb
shl
aam
mov
add
imul
mov
mov
dec
add
subl
or
add
lcall
jnp
testl
add
add
test
vzeroall
scas
xor
mov
add
scas
testb
add
cmpsl
dec
add
push
dec
lcall
sbb
push
hlt
cld
aam
inc
add
xlat
jmp
jge
inc
into
cmpsl
test
leave
inc
mov
add
jl
pop
gs
mov
jo
and
jl
xchg
cmc
cmp
adc
jg
fwait
sub
add
add
lods
or
mov
insb
add
add
fiadds
shrb
stos
cwtl
xor
push
push
data16
mov
js
mov
add
add
mov
push
add
jle
cli
push
outsl
xor
sbb
sub
xchg
outsb
add
add
test
js
lahf
jno
in
fidivrl
and
add
add
sub
jns
aas
imul
add
je
out
add
add
add
add
add
adc
mov
pop
insl
cld
add
push
mov
pop
xor
adc
popa
clc
arpl
mov
xor
xor
add
cld
test
int
add
test
add
cmc
mov
push
mov
push
mov
ljmp
cmpb
rcr
add
or
adcl
mov
rorb
pushf
add
cmp
bound
add
add
inc
dec
test
jae
xchg
add
ficoml
jmp
dec
add
add
insb
add
add
mov
jp
mov
xchg
xchg
xor
add
mov
iret
sub
mov
cli
xchg
cmp
je
aas
cmp
or
inc
je
mov
in
inc
pusha
add
add
lret
jle
pop
cmp
das
mov
insb
add
add
lods
inc
cltd
pop
push
out
mov
lods
and
jo
push
call
add
sbb
in
into
pusha
add
add
jmp
add
jo
xchg
jmp
pop
add
mov
or
add
add
sbb
movsb
repnz
inc
ret
call
add
js
mov
add
add
movsl
pop
mov
insb
add
jmp
xlat
std
shl
pop
test
ja
push
add
add
push
cmp
jne
xchg
mov
fldenv
fmul
xchg
aas
xchg
into
and
iret
not
popf
dec
jns
pop
cmp
repz
or
out
cs
jge
notl
push
rclb
shll
xor
and
add
add
loop
inc
adc
arpl
out
lcall
mov
adc
add
movsl
inc
mov
add
loop
lods
or
mov
lods
icebp
sti
push
repz
xor
sub
and
cmp
mov
frstor
mov
pop
inc
mov
xlat
push
mov
mov
add
add
cwtl
sub
ds
divb
test
sub
rcr
or
pop
leave
jns
add
mov
test
testb
pop
sahf
pop
pop
jns
dec
mov
mov
xchg
jne
dec
out
sbb
push
int3
sub
mov
js
mov
popf
dec
add
add
adc
lret
sbb
popf
xchg
mov
jg
les
cmp
imul
mov
xchg
and
das
sub
mov
add
aam
xchg
dec
inc
aaa
inc
pop
stc
xchg
jge
mov
add
add
adc
and
push
push
loopne
or
jno
mov
pop
sarl
loop
sub
push
inc
sub
mov
scas
adc
sti
mov
jns
aaa
loop
and
add
add
out
fbld
push
add
add
shlb
dec
mov
cmpl
test
lret
cmp
push
lods
lret
push
xor
mov
inc
add
sbb
dec
xchg
xchg
cmp
jmp
jnp
xchg
xchg
cmc
inc
into
cmpsl
jb
adc
fsubp
sar
xchg
outsb
pop
imul
cmp
stos
cli
call
add
or
add
add
repnz
adc
xchg
pop
jns
out
fucom
jmp
push
daa
imul
pop
scas
mov
add
add
add
sub
fdiv
inc
add
add
add
adc
sbb
loop
adc
adc
push
push
add
mov
cmp
mov
andl
push
outsb
lds
daa
or
add
add
sbb
inc
inc
ret
jb
ja
sbb
aas
ret
sbb
add
add
sti
xor
cli
ficompl
cld
movsl
rorl
loopne
mov
cmp
int
xlat
imul
mov
xor
xor
cld
or
mov
addr16
dec
add
aad
test
nop
sub
jg
sbb
sub
add
add
add
mov
xor
sbb
push
std
outsb
xchg
mov
flds
fisubrs
inc
add
add
es
cmp
and
add
add
fmull
faddl
add
add
ficoms
in
pop
sub
dec
add
ja
adc
lea
add
repnz
jge
push
aas
loopne
sbb
sub
jnp
xchg
mov
mov
add
add
mov
cmp
mov
cmpl
jle
fistpl
push
jle
scas
mov
xchg
adc
mul
loopne
or
add
add
fidivrl
loope
jns
mov
adc
mov
adc
add
add
sbb
fsubp
dec
adc
dec
rcr
inc
add
insl
sbb
push
popa
inc
ss
jle
adc
daa
xchg
xor
jbe
jne
dec
add
add
testl
mov
arpl
iret
ljmp
sub
jl
add
push
pop
jo
add
add
mov
movsl
imul
jns
sub
add
add
fsubrp
xchg
sarl
add
add
test
das
and
add
add
repnz
jae
jns
and
xchg
bound
add
fadds
pop
test
add
push
xchg
mov
xchg
nop
loopne
add
add
jg
lock
sbb
add
add
stos
outsl
and
jmp
dec
xchg
movsb
es
sbb
push
das
and
sahf
mov
jecxz
mov
pop
outsl
les
mov
cwtl
mov
jge
cmp
imul
add
add
in
dec
mov
adc
add
add
xchg
dec
add
add
add
push
mov
add
adc
xor
jne
dec
pop
loop
jno
fsubrl
add
cld
and
hlt
pop
fisubl
add
and
mov
adc
not
sbb
mov
xor
lods
movsb
jl
repz
push
test
and
add
add
jns
scas
push
std
cwtl
mov
or
roll
les
and
mov
fcmove
cs
add
add
add
add
and
add
aam
popa
test
jae
xchg
jb
mov
push
mov
outsl
mov
mov
jnp
shlb
adc
lods
pop
mov
mov
xchg
adc
nop
and
insl
xchg
push
cs
in
ljmp
pop
std
dec
add
add
mov
and
inc
cmp
clc
push
je
loop
aas
xor
je
inc
xchg
call
or
mov
arpl
mov
lcall
ficoml
movsb
xor
inc
imul
out
sub
shl
imul
addr16
add
subb
imul
int
mov
mov
in
dec
add
add
cltd
pop
mull
xchg
enter
arpl
add
int
dec
dec
add
add
xor
movsl
jae
loopne
and
add
add
add
add
int
das
pop
jae
sbb
clc
outsb
in
add
add
add
adc
xor
xchg
call
int3
dec
sub
jg
mov
dec
add
add
add
and
add
add
leave
sbb
or
mov
call
mov
mov
jo
xor
dec
add
add
stos
das
dec
jns
jns
sbb
fistpl
add
add
pop
pop
adc
ret
cmc
daa
lret
or
mov
and
mov
jbe
fdivrp
test
inc
sub
add
add
xchg
cltd
or
add
sbb
adc
cmpsb
sbb
adc
cmpsl
mov
cmp
or
pop
stos
into
out
mov
add
add
push
stc
iret
inc
pop
rolb
add
imul
push
sub
scas
adc
jo
mov
xchg
inc
adc
mov
mov
sbb
mov
pusha
add
add
and
add
add
int3
int
lahf
mov
hlt
lods
mov
jl
mov
mov
popa
add
imulb
imul
fisttps
add
add
push
cwtl
add
cmp
lcall
in
mov
add
add
movsb
aad
arpl
fdivl
pop
jno
push
imul
add
or
add
add
stos
and
push
setne
ret
xchg
adc
fdivs
inc
bound
add
push
jl
or
mov
cmp
jmp
inc
sbb
sub
dec
pop
push
lock
inc
pop
mov
lea
sti
js
mov
lret
jno
int
incl
xor
add
jne
and
add
add
sbb
and
add
add
add
mov
fcompl
mov
mov
add
insl
inc
add
add
addl
sbb
nopl
push
cmc
mov
lds
dec
mov
add
in
add
adc
adc
hlt
mov
pop
add
xchg
dec
jno
jl
cltd
clc
mov
mov
ret
scas
test
bound
lods
jnp
inc
cltd
mov
sub
add
add
add
add
das
jns
enter
movsb
aam
cmp
mov
data16
sbb
or
add
add
sbb
mov
sarb
add
add
adc
sbb
add
xchg
iret
xor
add
add
flds
add
add
pop
xchg
mov
or
adc
add
xchg
cli
mov
nop
jnp
sbb
add
out
lahf
mov
vcvttps2dq
add
popf
add
xchg
mov
mov
in
ss
lea
add
adcb
pop
das
loope
jl
test
icebp
pop
and
movsl
loop
pop
adc
push
and
add
lcall
add
out
test
pushf
test
clc
sub
lock
arpl
dec
es
xlat
divl
sbb
xchg
cld
icebp
pop
jle
push
ret
and
dec
sbb
dec
mov
pop
mov
shr
push
fnstsw
lods
popf
xor
mov
in
add
add
push
sub
add
add
push
jmp
sub
mov
sub
cmp
add
inc
add
add
pop
push
sahf
neg
lea
add
jg
mov
hlt
sub
leave
mov
pop
stos
fnstsw
stc
mov
sbb
leave
fiadds
test
cmp
jnp
cmp
add
push
xor
add
inc
gs
test
icebp
in
jne
dec
add
add
cwtl
and
xor
sub
inc
scas
mov
inc
dec
add
in
push
movsl
pushf
xchg
mov
pop
out
loop
call
stos
push
rcrb
inc
add
add
mov
mov
je
dec
adc
inc
cmc
test
sarb
push
or
add
add
jle
mov
jge
jbe
sbb
mov
pusha
add
add
gs
rolb
push
add
mov
adc
mov
push
mov
and
pop
arpl
sub
mov
cltd
shrb
outsb
jbe
jge
inc
xchg
mov
mov
mov
out
cmp
mov
cwtl
dec
pop
adc
mov
jmp
xchg
or
jmp
outsb
pop
ds
dec
sub
mov
es
push
rcl
mov
ja
sbb
add
dec
inc
pop
sub
add
add
in
add
add
add
push
out
data16
pop
call
cltd
mov
add
xchg
out
stos
xor
adc
shrb
pop
inc
add
add
lcall
jbe
mov
mov
push
sub
lret
je
pop
mov
or
sbb
jl
in
mov
mov
add
sbb
sub
mov
add
add
add
mov
add
add
add
push
sub
jmp
jl
test
add
add
jp
cld
ja
add
add
and
add
loop
out
stos
ficoms
mov
repz
idiv
lcall
cmp
mov
push
pusha
add
add
jb
pop
testb
outsl
dec
out
insb
add
add
mov
add
mov
add
int
inc
out
cwtl
shl
popa
std
mov
sbbb
orl
add
add
int
jg
movsl
icebp
dec
add
out
dec
aas
push
adc
dec
add
cltd
cltd
mov
out
out
pop
dec
add
dec
clc
mov
scas
xchg
add
data16
push
mov
mov
or
add
add
jb
lods
xchg
sarb
ds
mov
or
add
add
fldt
ljmp
jecxz
inc
dec
iret
cmp
and
mov
cmc
mov
insb
add
add
popa
ljmp
push
xor
sub
ds
add
leave
mov
fcompl
je
test
in
push
call
cs
push
mov
add
add
je
pop
sbb
xor
rorb
dec
add
addl
add
int
adc
and
mov
xchg
push
xchg
frstor
and
add
add
xchg
xor
add
push
pop
js
adc
add
jg
mov
aas
rep
movsb
fcomps
outsb
mov
add
add
lret
cs
sub
mov
std
dec
add
sahf
push
in
leave
je
add
add
add
jg
loopne
mov
xchg
fidivl
clc
cmc
sbb
add
add
in
add
and
mov
add
sbb
out
das
gs
out
jb
adc
dec
add
push
dec
xchg
fimuls
add
add
lods
cmp
add
sti
loop
int3
aam
inc
push
bt
add
add
mov
nop
adc
mov
add
ja
ljmp
add
mov
out
pop
aas
ds
js
addr16
add
adc
mov
add
xchg
mov
sahf
rol
and
cmp
push
shrl
inc
or
mov
jmp
and
lret
push
aam
div
mov
movsl
stos
mov
xor
sarl
and
push
cmpsl
adc
push
cltd
mov
into
inc
cmp
cmc
fsubrs
dec
sarb
scas
outsb
mov
pop
add
dec
mov
arpl
jo
movsb
xor
mov
pushf
pop
je
sbb
data16
push
add
adc
cmpsb
push
lds
cmp
add
repnz
mov
in
mov
add
add
or
and
leave
cmp
stos
xchg
int3
fmuls
lret
mov
test
add
jp
inc
mov
ljmp
cmpsb
scas
fnstcw
add
add
sub
addb
in
cli
imul
add
xor
add
add
repnz
add
int3
dec
imul
outsl
inc
pusha
add
dec
add
int3
into
mov
jl
mov
add
mov
lds
sar
xchg
loop
ficomps
adc
mov
lock
stos
xchg
icebp
pop
cld
daa
mov
dec
add
add
add
add
add
add
setb
ret
mov
insb
add
add
fcoms
mov
dec
add
nop
dec
stc
mov
mov
add
sti
cmpb
push
mov
add
andb
add
jbe
add
mov
popa
push
addr16
or
clc
add
xchg
in
sub
add
add
xchg
cmp
add
add
xchg
push
int3
mov
sub
mov
push
xchg
push
dec
fstps
add
and
add
incl
inc
xchg
stc
addl
mov
sbb
gs
lea
xor
and
mov
mov
lea
jbe
jb
testb
pop
inc
add
add
or
add
add
mov
and
mov
ljmp
fwait
pop
fcmovne
mov
mov
in
imulb
add
icebp
andb
jnp
iret
or
add
add
orl
ficomps
les
inc
add
add
std
sub
mov
adc
push
fldt
cwtl
cld
movsb
push
adc
push
repnz
jo
mov
xchg
and
add
in
sub
add
add
in
or
std
lods
addb
sti
repnz
das
pop
mov
mov
clc
out
and
js
xor
add
and
mov
add
add
in
int3
iret
push
adc
outsb
xchg
ja
cld
adc
xchg
pop
xlat
xbegin
adc
inc
data16
add
add
pop
test
lahf
add
ret
pop
sub
outsb
lret
mov
and
add
add
jns
add
mov
cld
xor
mov
sub
fmull
add
jl
shrb
pop
mov
sbb
inc
mov
xchg
mov
add
mov
jo
call
sbb
add
add
lods
cli
mov
pop
test
push
int3
jnp
loope
std
or
add
add
push
stos
fadd
sbbl
je
test
in
neg
addr16
ret
mov
mov
cmp
iret
add
in
push
stc
fwait
and
add
add
add
add
and
add
add
push
push
sbb
push
mov
cwtl
aas
ds
xchg
bnd
ja
mov
iret
sub
imul
lcall
mov
andb
add
xlat
ret
adc
bound
loop
out
cmc
arpl
out
adc
add
xor
aam
add
or
add
add
pop
sbb
adc
sbb
mov
movsl
rcrl
push
mov
sbb
lds
mov
insb
add
add
adcl
test
or
adc
add
dec
rolb
cltd
pop
adc
or
cmpsl
or
sbb
inc
add
add
xor
adc
out
sbb
pop
pop
inc
add
add
mov
push
push
pop
js
pop
dec
add
add
xor
adc
jl,pt
out
add
sub
sarl
insl
dec
add
pop
inc
movsl
xor
mov
pop
test
add
add
repnz
jbe
jle
ror
xor
mov
gs
fcompl
mov
add
mov
mov
das
pop
out
stos
rolb
pop
fcompl
add
add
push
xor
scas
or
add
lock
fmulp
inc
and
mov
loop
adc
add
add
sbb
mov
jmp
inc
imulb
cltd
gs
sub
mov
test
pusha
add
add
dec
push
fdiv
lea
add
push
in
cmp
inc
xchg
sub
sub
mov
jns
sbb
lret
push
sub
mov
mov
idivl
clc
scas
xchg
leave
mov
add
sti
sbb
dec
add
add
and
or
mov
fisttps
aas
xor
xor
mov
add
hlt
fistpll
icebp
push
insb
add
mov
pushf
shll
dec
bound
add
scas
and
mov
or
lahf
lods
loope
cmpl
mov
andb
mov
or
add
inc
inc
scas
cmp
filds
add
out
cltd
repnz
add
add
mov
add
add
add
pop
pushf
xchg
or
pop
xchg
cli
ret
repnz
mov
or
iret
inc
lea
xchg
xchg
cmp
and
arpl
mov
xchg
xchg
int3
fildl
adc
mov
imul
adc
add
add
add
xchg
shr
pop
fdivs
ljmp
hlt
xchg
test
adc
in
cmc
mov
dec
mov
cmp
or
dec
lods
sub
push
adc
jne
scas
cmp
cld
mov
mov
lock
and
out
lods
cmp
mov
mov
loope
sbb
push
dec
loop
incb
gs
mov
xor
sbb
xchg
inc
fdivl
dec
inc
add
add
xlat
enter
js
add
add
mov
mov
in
xor
or
add
jae
xchg
xor
pop
orb
add
cld
xchg
pop
insb
add
add
movsb
cmpl
or
mov
repz
adc
mov
lahf
mov
icebp
jbe
jno
test
add
push
dec
push
fcmovnbe
loope
add
sbb
xchg
lcall
mov
sarb
jae
adc
mov
movsl
mov
add
add
add
jne
dec
add
add
push
sub
add
add
addb
mov
lods
or
mov
add
add
xor
test
mov
jp
and
or
int3
or
add
add
and
mov
add
add
add
add
cmp
or
add
arpl
or
mov
add
inc
add
add
sbb
add
add
add
add
mov
fisubrs
subb
cmp
pop
nop
push
repnz
xchg
cmp
movsl
lds
add
add
mov
stc
lds
mov
lcall
and
add
add
push
push
add
mov
add
jo
xchg
popf
into
lods
lahf
push
mov
sbb
mov
push
inc
jae
push
shll
movsl
imul
ror
stos
mov
mov
add
fnstsw
movb
out
jmp
jbe
dec
xor
push
sub
mov
je
outsb
jmp
jb
xchg
inc
push
sti
cmp
adc
add
nop
dec
add
xchg
xor
inc
sub
mov
cs
add
xlat
loop
push
sahf
push
sbb
adc
or
jne
cmp
push
sahf
push
sahf
in
stos
sub
sub
add
mov
roll
xchg
adc
xchg
jp
enter
add
orl
std
mov
sbb
aas
sub
mov
push
pop
rorl
add
add
add
das
push
push
popa
dec
pop
jl
pop
pusha
add
jo
add
add
sti
ds
add
dec
add
cmp
inc
add
add
sub
add
add
shl
mov
add
cmp
mov
adc
aam
addr16
push
loope
fwait
cmp
pop
and
pop
lahf
stos
incb
dec
daa
sub
dec
add
add
pop
mov
outsb
je
lea
sub
pusha
add
xor
pop
jnp
push
aam
in
mov
jge
popa
mov
or
add
add
nop
add
cltd
test
add
add
lret
jb
push
fsts
or
dec
mov
push
mov
and
sub
add
lds
mov
dec
sub
test
mov
or
add
sbb
shll
lock
add
add
sub
add
add
mov
and
xor
add
mov
add
add
lea
sbb
sti
jo
pushf
daa
or
pop
imul
mov
xchg
mov
add
xchg
jb
sub
add
add
hlt
mov
lcall
mov
xchg
icebp
push
sub
mov
jg
test
mov
inc
push
or
add
add
out
iret
cmp
cld
stos
and
mov
jle
aas
test
fildl
clc
addr16
add
adc
add
add
stc
scas
xor
add
push
jge
repnz
fdivrl
cs
jae
mov
ret
xor
xchg
mov
add
aaa
cmp
js
mov
mov
sub
add
add
and
jmp
aas
jbe
sub
mov
add
mov
jne
adc
add
repnz
mov
push
push
loope
jo
lahf
es
arpl
add
insb
add
mov
cmpsb
or
inc
push
imul
cmp
pop
mov
add
xor
mov
add
add
inc
push
add
sbb
lcall
not
mov
aas
and
call
cmp
sahf
les
dec
sub
xchg
fisubs
add
flds
add
test
sbb
fdivrl
loope
mov
mov
xchg
add
add
add
mov
cltd
ret
mov
add
lret
lock
sbb
cmpsb
add
add
add
xchg
add
add
add
jl
jbe
cmp
adcl
jo
dec
dec
shlb
inc
fcomp
mov
dec
add
shl
std
out
es
cmpsb
mov
add
add
or
adc
dec
add
mov
call
add
add
leave
mov
inc
movsb
out
mov
out
rorb
inc
mov
xchg
pop
mov
cmp
jg
jns
add
mov
int3
ja
sub
fsts
sub
add
lahf
sub
add
add
cmpsb
gs
and
mov
cmpsb
xchg
xor
mov
pop
xchg
lret
xchg
cs
add
add
es
mov
adc
jmp
int
bound
fsubrs
push
xchg
cmovge
mov
and
mov
loope
ret
jo
or
or
xchg
repz
fsub
negb
into
mov
jl
enter
ljmp
cmpsb
mov
xor
cli
sbb
jmp
js
jmp
add
add
daa
sbb
mov
add
add
ret
aaa
imul
cmp
stos
add
add
adc
jge
in
or
push
loop
data16
jle
fmuls
push
xlat
iret
cmp
sar
add
mov
xor
xchg
pop
lcall
add
add
out
sub
add
add
and
add
inc
shll
mov
add
add
sub
sub
lods
out
jmp
enter
in
fidivl
sbb
cmpb
outsb
in
fmuls
jge
movsb
repz
add
and
xchg
xchg
aam
ljmp
jne
fistl
lcall
inc
mov
and
mov
add
add
fstps
lds
nop
jge
cmc
repnz
aas
sahf
gs
add
add
add
dec
add
pop
dec
loopne
mov
pop
sti
jne
fwait
lds
jnp
add
add
in
lods
loop
imul
pop
mov
inc
mov
insb
add
add
mov
dec
push
stc
add
add
add
inc
add
add
cwtl
sub
inc
push
jne
jg
icebp
pop
mov
std
inc
add
add
add
rorb
es
mov
add
test
fdiv
lds
pusha
add
in
insl
mov
mov
inc
mov
divb
xchg
ret
out
idivl
rclb
lret
or
jg
push
gs
ret
in
js
iret
adc
test
jmp
jnp
stc
inc
sub
and
addr16
inc
add
add
push
test
ja
roll
sub
add
add
xchg
in
inc
gs
aaa
pop
aam
arpl
fstpl
mov
cmp
fists
or
add
add
data16
std
into
jnp
lret
cmp
push
dec
lret
rorb
loopne
cvtdq2ps
in
leave
jns
cmp
xchg
arpl
sarl
cmpsb
adc
loop
xchg
jo
std
and
mov
or
add
add
pop
mov
adc
testl
add
add
pop
test
push
jp
imul
loop
cmp
push
leave
add
adc
mov
inc
aaa
inc
or
add
roll
pop
rorb
pop
inc
add
push
sub
add
outsb
add
adc
inc
mov
fwait
loopne
jne
or
add
lahf
call
xchg
call
inc
xor
jae
ja
xchg
add
xchg
shr
gs
and
add
add
xchg
dec
pushf
lea
add
rorl
inc
xor
add
add
add
add
add
mov
push
sbb
add
add
fldt
aaa
cld
xchg
cmovne
mov
add
add
int
mov
mov
jb
xor
add
jno
cmp
addr16
out
or
mov
inc
adc
into
loop
popa
inc
sub
mov
inc
add
add
add
mov
aam
jge
sbbl
shr
xorl
push
data16
add
add
inc
mov
jne
adc
add
add
dec
rcrb
mov
lret
adc
add
push
xchg
sub
jecxz
dec
xchg
call
inc
add
or
add
add
pop
leave
xchg
sub
fstpl
mov
sub
add
add
fnsave
dec
jbe
add
add
add
fwait
xor
xor
add
fnstenv
sbbb
add
jg
add
add
xor
add
enter
sbb
rolb
mov
jae,pt
inc
inc
jp
push
hlt
inc
mov
ja
popf
jmp
jmp
adc
ja
xchg
push
and
or
lods
into
das
jecxz
mov
mov
add
fpatan
xor
add
mov
std
dec
and
cmp
cmpsl
fwait
push
dec
sub
mov
mov
sub
nop
inc
mov
xchg
sub
push
adc
sbb
pop
lahf
mov
fldt
sarb
push
xor
test
pop
xor
jl
and
or
clc
dec
movsl
add
les
push
fldt
add
and
je
push
xchg
pop
je
sub
push
and
add
add
stos
daa
dec
add
add
lock
xor
push
sti
mov
jl
sahf
bound
mov
es
jno
test
mov
out
rcrl
andl
add
xchg
ja
iret
push
jne
xlat
push
orb
shrb
fildl
push
mov
imul
add
outsb
inc
or
dec
pop
lret
mov
data16
sbb
jo
jp
xor
inc
xorl
ret
insl
mov
out
imul
fadd
and
cmp
loope
add
imul
add
add
fidivrs
notb
add
mov
test
xor
mov
add
add
cmpsl
inc
fildll
sbb
dec
arpl
jb
mov
add
bound
add
add
add
xor
sub
mov
into
jg
or
add
add
jge
sub
incb
add
adc
mov
xchg
scas
sbb
repz
cmp
mov
popa
ret
pop
pop
inc
or
mov
jl
test
