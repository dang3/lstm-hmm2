jo
add
stos
aaa
clc
jge
mov
add
and
dec
loop
popf
loope
add
mov
inc
add
jp
xor
add
push
pop
jno
add
add
aam
sub
aas
dec
cwtl
adc
add
or
mov
daa
pop
sbbb
jns
add
daa
pop
lahf
inc
add
daa
pop
dec
jno
add
inc
add
jge
fiadds
lcall
scas
mov
pop
icebp
push
into
add
outsb
rcrl
add
jecxz
adc
add
or
rcrb
cli
pop
adc
cld
js
test
inc
add
out
cmp
add
pop
inc
add
out
shl
pop
adc
jns
lock
mov
dec
xchg
rcrb
into
es
pop
dec
sbbb
aam
sub
addr16
jmp
mov
pop
mov
add
scas
xor
add
jmp
out
gs
mov
stc
pop
gs
mov
xor
sub
pop
mov
xor
add
fcmovb
pop
dec
out
bound
add
das
push
shlb
sbbb
jl
pop
push
out
inc
add
mov
push
imul
leave
ds
aas
or
add
arpl
add
pop
popf
push
sbbl
insb
xchg
or
pop
push
cmp
pop
das
sbb
pop
sub
lock
add
stc
jecxz
jne
dec
pop
and
sbbl
sbbl
add
sub
ret
pop
fistpll
iret
leave
jp
add
loope
push
add
icebp
lock
push
leave
adc
add
sarl
stc
inc
pop
fidivs
add
mov
add
aam
pop
push
add
hlt
sahf
ret
push
add
out
lods
cmp
xor
add
push
lret
adc
push
scas
lahf
pop
insl
jb
add
add
mov
add
add
jno
add
pop
or
pop
add
add
xor
add
push
push
ret
pop
adc
add
sbb
xor
add
scas
jge
push
ret
pop
fldl
add
stc
sbb
nop
mov
pop
test
inc
pop
push
pop
nop
cmpsl
pop
or
pop
mov
pop
mov
cmovns
test
inc
add
push
mov
adc
add
loop
dec
sahf
repz
xchg
sbbl
outsb
imul
sbb
add
addr16
imul
aad
sbb
out
jg
cli
in
mov
add
test
add
mov
mov
or
xor
add
add
add
pop
pop
mov
pop
or
push
pop
xchg
jge
pop
xor
add
pop
mov
pop
sub
arpl
add
add
fwait
mov
iret
add
or
out
mov
jb
add
cltd
add
xchg
lret
dec
sbbb
jmp
jle
add
add
add
add
mov
inc
add
pop
pop
adc
inc
pop
iret
lahf
inc
add
lret
imul
pop
pop
pop
jecxz
adc
add
add
or
popf
inc
pop
mov
add
mov
add
add
jge
pop
jnp
imul
pop
insl
shl
pop
les
lock
outsl
sbb
pop
popl
cmp
sbb
add
add
add
aaa
arpl
add
add
and
cltd
xor
add
pop
dec
nop
out
mov
sub
pop
ss
or
in
popa
add
dec
insb
fsubrl
add
adc
add
mov
xchg
adc
add
stos
imul
pop
mov
pop
out
adc
add
add
dec
ret
fildl
lods
mov
pop
fldenv
pop
mov
icebp
pop
jmp
pop
inc
add
test
insb
jne
pop
lcall
inc
add
dec
jle
js
add
inc
pop
xor
add
int3
pushf
xor
add
pop
lods
rclb
xchg
lods
or
insb
ljmp
sub
pop
fildl
ja
mov
jle
pop
call
test
jbe
add
inc
pop
sbb
pushf
and
add
xchg
xor
add
fs
jb
add
sti
cltd
dec
ficompl
pop
xchg
je
sub
pop
mov
cli
cmp
pushf
ret
pop
dec
mov
pop
inc
add
push
lcall
add
inc
add
push
add
sbbl
add
int3
outsl
sbb
inc
pop
cmp
add
popa
add
jp
push
dec
mov
xchg
sub
dec
jg
loop
mov
xchg
leave
shll
add
aad
pop
cmp
add
push
loop
add
add
sbbl
push
add
adc
add
pop
sub
xchg
pop
pop
fs
out
push
pop
gs
push
in
fcomps
or
dec
pop
inc
add
pop
mov
pop
adc
add
pop
mov
jmp
int
adc
jnp
stc
sbbl
add
cs
insb
mov
insl
mov
pop
and
push
hlt
mov
add
pop
mov
in
out
inc
pop
shlb
add
clc
xor
add
int3
mov
cmp
add
stos
push
add
xor
add
cld
adc
add
pop
fstp
int3
mov
add
enter
and
hlt
sbbl
and
add
add
ret
add
rcrb
pop
push
push
cmc
or
cmp
push
jb
add
mov
mov
add
mov
clc
mov
add
sbb
add
xchg
jo
add
into
push
add
arpl
add
pop
movsb
pop
sbbb
mov
cmc
sbbb
push
pop
pop
sbbl
flds
add
mov
shrb
cltd
es
inc
add
fists
pop
popa
add
cli
mov
rclb
pop
lret
add
daa
pop
fidivl
sahf
test
pop
lcall
sbb
add
aad
rcrb
pop
rcrb
pop
int
mov
add
pop
push
pop
xchg
jp
add
push
xor
bound
add
mov
xlat
dec
pop
les
jp
add
shl
push
sbbl
jp
jns
aad
pop
xchg
pop
lret
mov
cmp
ret
pop
icebp
adc
in
pop
push
mov
mov
add
add
pop
lock
mov
and
add
sub
xchg
pop
push
dec
and
add
cmp
call
pop
push
mov
add
gs
lods
leave
xchg
jg
nop
pop
add
add
pushf
mul
pop
or
fwait
sbb
push
das
out
cwtl
inc
add
test
xchg
lds
mov
lahf
push
jno
add
and
pop
push
add
cmpsb
pop
cmp
pop
sbb
pop
xchg
in
dec
in
cmp
int
push
add
fs
test
xor
or
sbbl
movsl
pop
stos
sti
out
or
pop
sbb
pusha
add
into
mov
pop
sti
bound
add
add
in
or
or
mov
mov
pop
pop
sbb
aaa
fisubl
pop
nop
sbbb
mov
jl
ja
inc
add
sbbl
add
mov
push
cmp
sbb
pushf
jns
rcrl
mov
add
mov
pop
mov
xchg
sbbb
test
sbbl
add
add
fcmove
loop
movups
add
add
loop
pop
lds
lock
pop
and
add
dec
movsb
pop
test
or
mov
ljmp
adc
inc
pop
sub
aam
add
push
add
aaa
mov
aad
test
dec
fs
dec
push
pop
scas
lds
mov
dec
ficomps
lods
jg
test
pop
ss
aaa
movsl
pop
jbe
add
pop
mov
add
test
jge
pop
cmp
mov
inc
add
xchg
pop
adc
inc
add
mov
xchg
inc
pop
es
and
add
add
cmp
pop
lret
pop
xchg
xor
std
jl
add
gs
js
jmp
adc
add
push
add
pop
outsl
les
add
add
sub
je
pop
add
adc
pop
iret
sub
pop
mov
jae
add
push
mov
add
sub
loopne
pop
rcrl
xor
add
jge
pop
sbb
outsl
pop
dec
pop
xor
add
into
inc
pop
push
add
pop
es
iret
cmp
out
aam
lret
ficoml
mov
fsubrs
or
pop
add
insb
mov
and
add
xchg
pop
lods
cmp
jb
add
add
mov
add
or
pop
fwait
xchg
xor
add
pop
xor
add
adc
add
mov
and
pop
hlt
xor
add
push
add
popf
cmp
pushf
mov
xchg
or
adc
add
add
lea
sub
push
add
cwtl
jge
arpl
add
dec
mov
int3
ret
jmp
jmp
dec
or
add
jg
pusha
add
into
push
loope
xor
add
sbbl
push
inc
pop
fsts
fldl
repnz
add
ret
pop
adc
lds
mov
cmc
dec
adc
add
ss
add
sbb
mov
xchg
incb
pop
lds
jb
add
mov
add
leave
lret
sahf
outsb
xchg
aam
add
jbe
inc
pop
xchg
imul
stc
mov
add
sbbb
push
out
inc
pop
jmp
pop
xlat
es
adc
add
pop
sub
fs
jmp
xlat
fs
test
dec
mov
arpl
add
addr16
test
add
popf
inc
pop
sbbb
pop
out
out
cmpsl
pop
stc
and
add
push
jmp
pop
cmpsb
pop
lahf
adc
add
cmp
pop
mov
rcll
insb
mov
pop
int
sbb
fisubrl
add
mov
add
add
jmp
pop
hlt
push
add
xor
inc
add
js
pop
ret
pop
pusha
add
cmp
stc
xchg
aaa
ja
cmp
jae
add
icebp
push
pop
jmp
test
xchg
lret
popl
add
cld
mov
pop
pusha
add
icebp
dec
add
out
push
sti
push
jmp
es
jge
aaa
xor
add
add
xchg
and
add
pop
jbe
pop
dec
pusha
add
icebp
dec
bnd
push
inc
pop
pop
aad
sbb
jno
add
pop
lea
add
rcrb
pop
push
mov
add
jae
add
add
ja
loope
addr16
push
loope
sbb
test
sahf
dec
pop
pushf
dec
sub
add
repz
add
adc
add
inc
add
sub
jb
add
sbbl
loopne
adc
add
sbbb
stc
adc
es
sub
add
sbb
sbbl
push
pop
jns
pop
push
stos
sub
xchg
add
mov
add
add
pop
mov
jnp
push
scas
xor
add
rclb
pop
enter
in
pop
pop
sbb
pop
xor
cs
in
pop
aad
mov
jo
add
mov
pop
xlat
cmp
add
popa
add
mov
or
mov
pop
pop
das
xchg
dec
and
add
ja
pop
push
add
sbb
pop
scas
pusha
add
jge
outsl
xchg
mov
pop
and
add
sbb
add
inc
pop
negb
mov
stos
mov
mov
pop
mov
lock
add
pop
jle
gs
pushf
repnz
dec
add
lcall
add
mov
pop
sbbb
cmp
pop
xor
add
cmp
mov
xor
add
lret
or
pop
jns
xchg
push
aaa
adc
into
lds
pop
jbe
pop
jo
add
jno
add
pop
testb
paddusw
adc
add
inc
pop
outsb
sbb
call
add
ds
sub
out
push
test
arpl
add
jp
add
call
add
ret
pop
jl
add
icebp
xor
add
add
inc
pop
pushf
dec
fs
imul
add
ljmp
add
fadds
add
mov
add
pop
fcompl
arpl
add
add
dec
xchg
dec
pop
stc
cmp
add
mov
xchg
sbb
pop
jne
pop
les
pop
xlat
popf
inc
pop
ret
push
jp
push
pop
or
pop
ljmp
pop
pop
rcrb
inc
add
inc
pop
or
add
pop
pop
mov
jecxz
shlb
jno
add
add
pop
stos
mov
pop
adc
add
sub
pop
pop
movsl
pop
test
je
add
or
sub
dec
fwait
or
add
stos
lahf
fs
xchg
mov
cld
adc
add
add
mov
push
fwait
cli
ficoms
fadd
pop
fs
fwait
push
inc
pop
push
xor
add
push
lcall
out
mov
inc
add
inc
add
push
pop
daa
pop
sbbb
add
pop
cwtl
mov
add
pop
cmp
call
adc
add
add
in
fdivl
add
adc
add
pop
dec
push
add
and
add
jg
pop
sbb
mov
loop
lods
mov
pop
iret
lahf
pop
jbe
jecxz
inc
add
jae
add
movsb
pop
dec
pop
cmp
ss
add
aaa
int
pop
inc
add
cmp
stos
push
add
popa
add
cwtl
push
push
xchg
test
pop
inc
pop
nop
ss
mov
in
pop
xor
add
call
sbb
arpl
add
add
insb
mov
jns
ljmp
popa
add
pop
mov
ficoml
add
pop
or
add
gs
or
pop
cmp
fidivs
add
ret
pop
or
pop
sbbb
dec
js
sbb
sub
add
pushf
lds
sub
or
pop
lahf
cmpsl
pop
arpl
add
add
and
add
xor
add
add
jecxz
sbb
inc
pop
sti
dec
movsl
pop
jb
add
mov
inc
pop
out
sub
outsl
sub
inc
pop
movsl
pop
add
add
popf
stos
xchg
dec
lcall
pop
in
rcrb
mov
scas
fs
pop
pop
or
popf
or
pop
jmp
aam
mov
add
xchg
aam
pop
push
pop
cli
jae
add
jb
add
add
pop
and
xor
add
and
mov
je
mov
pop
sbbb
pusha
add
ret
gs
shrb
leave
movsb
pop
rcrl
hlt
dec
dec
int3
cld
xlat
lds
sub
mov
adc
add
xchg
fcomps
mov
add
push
pop
adc
add
pop
xlat
mov
cli
fisubrs
xor
imul
popf
adc
add
add
add
push
mov
pop
add
add
pop
les
test
pop
aam
insl
push
adc
add
loope
jae
add
jnp
pop
std
mov
pop
cmp
pop
cmp
pop
mov
dec
sub
add
xchg
imul
mov
dec
enter
nop
xchg
pop
sbb
pop
ret
pop
xor
inc
pop
rcrb
dec
fadds
sbb
add
xchg
jge
inc
add
idivl
mov
clc
and
add
fcmovnu
das
sub
xchg
idiv
in
dec
iret
sbb
pop
adc
add
outsb
sub
cmpsb
pop
sub
push
into
sbbl
push
inc
add
ss
mov
add
testl
xchg
ljmp
push
add
insl
fwait
push
add
or
cmc
cmp
mov
adc
add
icebp
cwtl
enter
pop
mov
cmpsb
pop
push
pop
js
cld
xor
add
pop
lcall
xchg
loopne
mov
inc
add
inc
pop
inc
pop
mov
test
sub
xchg
lret
nop
sbbl
pop
out
aad
pop
pop
jae
add
push
mov
mov
out
pop
pop
and
add
mov
out
loopne
xor
add
das
jmp
pop
daa
pop
xchg
jb
add
xchg
add
add
add
add
jmp
dec
lret
push
pop
or
inc
pop
push
and
add
repnz
pop
inc
pop
paddsb
pop
fwait
cltd
mov
xchg
lods
inc
pop
add
add
xor
add
pop
mov
outsl
lahf
fisubrs
lret
das
xor
add
xchg
mov
test
add
test
add
dec
xor
add
cmp
dec
inc
pop
rol
pop
arpl
add
mov
xchg
loope
jmp
gs
es
out
push
add
mov
add
cs
inc
add
cmp
push
add
jge
test
add
jns
pop
out
push
sub
jge
pop
movsb
pop
cmpsl
pop
jbe
in
into
cmpsb
pop
test
pop
stos
cmp
rcrb
pop
sub
pop
cmpsb
pop
fistl
cli
and
add
in
loop
fstl
add
mov
lea
add
add
push
or
ds
add
mov
and
add
pop
hlt
cli
movsb
pop
pop
cmp
add
push
pop
nop
cmp
push
add
mov
stos
aam
add
xchg
xor
add
fs
push
lods
push
cli
add
add
pop
outsb
pusha
add
xrelease
or
push
jno
add
xchg
jle
pop
xchg
call
xchg
sti
hlt
jp
dec
mov
das
xchg
or
push
add
pop
jge
add
jne
cli
pop
fdivrs
jns
jge
jmp
pop
pop
push
add
fsubs
pop
out
sbb
add
mov
stc
push
sahf
iret
jne
sbb
add
lea
pop
inc
pop
add
add
pop
les
pop
outsl
call
jecxz
rcrl
add
sub
pop
cmp
mov
mov
add
sub
add
pop
push
mov
add
add
mov
lcall
add
jns
or
add
jge
mov
lret
std
cmpsl
pop
mov
pop
cmp
jmp
xchg
addr16
xchg
add
add
adc
pop
pop
and
add
pop
cmp
out
or
pop
cld
shrl
sbb
ljmp
pop
insl
movsl
pop
aas
adc
add
pop
sbbl
nop
inc
pop
jle
fisttpll
addr16
mov
add
cmp
jb
add
adc
pop
loope
test
dec
sub
pop
cmp
insb
in
test
lret
cmp
pop
or
inc
pop
loopne
sbbl
xlat
or
pop
dec
test
out
xor
fcomi
cmp
add
in
lcall
mov
add
inc
pop
rcrl
pop
and
add
int
pop
das
adc
add
pop
into
inc
pop
mov
sbb
cmp
loopne
mulb
add
leave
mov
or
sbbb
nop
push
cmp
push
dec
scas
addr16
leave
pop
pop
add
add
add
cmp
push
mov
mov
in
add
add
mov
add
or
add
pop
stos
lahf
add
add
push
add
jnp
ja
call
outsl
push
xor
add
add
add
pop
add
cltd
sub
fwait
enter
and
add
pop
xchg
imul
ljmp
sbb
dec
push
add
sbb
xchg
push
add
sub
add
pop
xchg
or
dec
test
out
jl
dec
out
mov
aad
pop
aas
imulb
cmpsb
pop
dec
dec
add
add
pop
lret
pop
sbb
mov
add
and
add
cmpsl
pop
jne
adc
add
stos
cli
leave
stc
rcrl
nop
shl
or
sub
and
add
or
rorb
push
dec
imul
mov
add
cld
decb
fimuls
pop
push
xchg
into
pop
inc
pop
or
add
in
flds
popa
add
fimuls
in
rcrb
jno
add
add
clc
addr16
enter
pop
sbb
pop
test
mov
jae
add
jno
add
pop
mov
pop
shl
mov
add
adc
add
mov
add
in
dec
icebp
inc
pop
stos
aas
push
das
pushf
jb
add
cmp
pop
negb
pop
and
add
jne
push
and
add
rcrb
test
pop
jecxz
adc
bound
add
add
pop
mov
int3
stc
push
add
rol
pop
push
pop
xchg
aaa
xchg
out
inc
pop
fisttpll
push
mov
add
dec
or
ljmp
dec
in
dec
divl
add
gs
stc
pushf
sbbb
add
pop
xor
pop
adc
add
mov
add
add
out
add
add
sbbb
add
xor
add
out
sbb
jge
pop
jb
add
add
xor
add
mov
add
nop
xor
add
pop
and
add
xchg
lods
mov
xlat
mov
movsb
pop
ljmp
add
int
pop
sbbl
pop
das
inc
add
mov
ret
pop
pop
push
xor
mov
aaa
inc
pop
bound
add
sti
or
adc
inc
add
mov
adc
dec
push
xchg
leave
sbbl
jae
add
pop
imul
add
hlt
or
xlat
int3
testl
pop
rcl
das
dec
pop
icebp
pop
mov
in
in
xchg
jle
dec
test
sub
adc
add
sahf
jge
mov
add
std
popa
add
pop
cmp
mov
lret
add
cmp
rolb
jmp
sahf
and
add
pop
in
add
add
loopne
xor
mov
pop
and
add
pop
add
add
add
add
movsl
pop
pop
mov
pop
mov
add
mov
pop
fs
mov
je
jae
add
add
pop
jl
mov
cmp
adc
add
call
into
xchg
xor
add
stos
mov
sub
add
dec
push
add
push
add
xchg
pop
in
dec
insb
mov
push
xchg
popa
add
imul
mov
test
add
pop
adc
add
add
scas
adc
add
out
cli
lea
add
cli
pop
rcrl
pop
and
pop
int
pop
mov
fs
sbb
jecxz
pop
mov
cli
push
out
das
test
mov
pop
mov
pop
fcmovu
scas
rcrb
das
out
pop
lods
xlat
fists
adc
add
popa
add
aam
popf
jl
scas
dec
mov
add
add
das
icebp
mov
pop
push
lcall
add
dec
sbbl
pop
dec
sub
pop
mov
xchg
mov
mov
pop
sar
xchg
pop
sub
add
jl
rol
pop
and
add
pop
cmp
icebp
cmp
pop
jbe
sub
xor
add
cwtl
jne
add
cmp
add
std
adc
add
add
pop
xlat
sbb
in
push
fstl
dec
aaa
dec
xor
add
out
call
add
pop
mov
add
repnz
or
fsubrl
pop
xchg
add
pop
mov
push
scas
ss
pop
mov
rcll
push
mov
add
daa
pop
add
add
pop
xor
add
nop
in
fstps
repz
je
add
pop
push
add
add
add
adc
pop
insb
sahf
inc
add
and
add
test
push
mov
ljmp
dec
pop
cmp
xchg
fwait
jp
add
fcmovnb
pop
lds
mov
icebp
enter
mov
mov
pop
movsl
pop
push
aaa
cltd
dec
cld
arpl
add
add
icebp
cs
lcall
out
int
jp
push
add
push
adc
add
add
adc
jno
add
pop
xlat
sub
pop
sbb
pop
sbbl
add
cli
and
mov
pop
dec
and
xchg
and
int3
outsb
mov
pop
xchg
clc
push
into
xor
aaa
ret
pop
sti
je
fiadds
add
lret
dec
pusha
add
mov
and
add
loope
xchg
rcrl
sarl
test
or
add
sbb
mov
jl
mov
add
pop
std
xchg
popa
add
fbstp
add
stos
and
add
add
imul
mov
sub
pop
fsubs
aad
add
gs
lret
sub
es
in
cli
lds
add
add
rep
pop
push
add
jne
stos
mov
pushf
jns
add
pop
mov
add
dec
jo
add
mov
add
loopne
jnp
bound
add
add
dec
cli
inc
pop
aad
pop
fbld
add
sar
insb
mov
pop
notb
push
push
ret
pop
sbbl
or
or
xchg
dec
jp
in
xchg
pop
xor
add
pop
push
add
dec
cmp
pop
sub
inc
pop
bound
add
jg
dec
adc
push
add
dec
inc
add
xchg
repz
xor
add
sub
jp
icebp
push
pop
pop
push
test
push
scas
add
mov
add
and
test
pop
icebp
mov
pop
inc
pop
xchg
sub
add
lods
je
popf
testb
add
into
pop
xchg
inc
pop
pop
jecxz
nop
je
adc
add
into
fcoms
pop
flds
int3
jge
cld
dec
js
mov
inc
add
fs
scas
pop
rcrl
add
pop
jnp
pushf
push
loopne
sbb
add
cmpsb
pop
sbbl
or
cld
loope
into
mov
pop
push
rcll
pop
rcrb
add
out
enter
pop
mov
adc
lea
add
add
fwait
sahf
out
mov
inc
pop
mov
pop
mov
xchg
xchg
and
add
xor
add
sub
std
ret
add
pop
inc
add
add
add
add
sub
and
add
std
cwtl
xchg
sub
push
lock
fildll
add
add
out
cmp
pop
jb
add
add
mov
lock
mov
pop
mov
pop
shll
in
fsubrl
pop
into
lret
fnstenv
add
xchg
or
outsb
mov
pop
xor
add
mov
clc
pop
cmpsb
pop
add
mov
xchg
pop
icebp
push
pop
add
sub
add
dec
and
pop
sbb
lret
add
add
pop
stos
dec
rcrl
add
pop
inc
add
mov
add
loop
fs
addr16
test
pop
pop
xor
add
fstl
sarl
psllw
add
add
aad
aad
lods
repz
or
sbbb
pop
aaa
es
in
sub
add
mov
cltd
in
popf
jg
add
sbb
push
int3
dec
fs
jo
add
add
mov
out
cmp
and
add
pop
push
add
xchg
pop
ret
pop
pop
mov
add
mov
add
cmp
shr
lods
ds
push
pushf
lock
pop
adc
add
pop
sub
sbb
add
add
sbbl
out
cli
je
cmpsl
pop
push
add
jb
add
lret
xchg
pop
insb
cwtl
outsl
mov
push
add
test
out
mov
xor
add
inc
add
mov
enter
add
repz
jecxz
and
add
add
mov
pop
cmp
pop
pop
and
add
adc
add
pop
into
xor
add
pop
lahf
gs
in
popf
aaa
or
cmp
cs
sub
adc
add
stc
inc
pop
pop
int
dec
sahf
repnz
hlt
dec
adc
push
add
lahf
pusha
add
jg
xor
xchg
xchg
das
insl
lds
fisubl
add
arpl
add
pop
sbbl
insb
movsl
pop
dec
lcall
pop
mov
pop
inc
add
mov
testb
loop
lret
mov
add
movsl
pop
mov
jp
add
test
ss
xor
add
loope
dec
popa
add
ret
pop
jne
fiaddl
add
jmp
pop
ret
cmp
rcrl
push
sahf
bound
add
pop
mov
pop
push
add
mov
pop
sub
pop
sbb
xchg
jp
scas
fwait
cmpsb
pop
mov
sbbl
js
adc
pop
sub
pop
pop
pop
test
add
and
add
add
inc
add
mov
sub
ds
push
cltd
and
add
push
leave
sub
pop
lods
jbe
fwait
stos
pop
mov
icebp
push
inc
pop
lock
pusha
add
test
push
add
ss
pop
out
dec
addr16
xchg
mov
xor
add
ret
add
mov
add
add
add
dec
popf
add
add
das
xchg
lods
cmp
pop
cmp
add
roll
pop
cmpsb
pop
mov
movsb
pop
push
or
pop
loop
je
pop
xchg
daa
pop
or
pop
or
inc
add
test
aad
add
pop
push
jns
sbb
add
aaa
push
pop
cwtl
fbld
push
add
pop
adc
add
or
pop
dec
pop
gs
ret
pop
popa
add
outsb
inc
add
into
cmp
cli
lock
jo
add
mov
fiadds
pop
sbbl
sbb
mov
xchg
dec
mov
xchg
rolb
add
rcrb
adc
add
lcall
add
sbbl
dec
pop
ss
sub
notl
push
pop
sbb
pop
ret
pop
mov
pop
in
in
sti
mov
aaa
jo
add
ficompl
pop
ja
test
pop
and
add
add
sub
add
push
popa
add
jo
add
cmp
mov
push
sbb
add
shlb
add
cli
xor
add
inc
pop
and
pop
ljmp
pop
sbbb
jmp
pop
inc
pop
jb
add
add
cmp
pop
adc
add
out
cmpsb
pop
ljmp
in
loop
cmpsl
pop
lods
xchg
add
fmulp
mov
les
lds
dec
mov
pop
gs
jge
pop
mov
test
add
loope
jge
lret
lret
ja
pop
test
mov
cs
dec
mov
aam
in
adc
add
out
ret
adc
mov
mov
add
pop
rorl
push
or
ja
add
pop
lret
pop
test
add
lcall
dec
jp
fmull
lret
push
pushf
jl
ljmp
add
mov
add
push
add
sbb
xchg
bound
add
add
pop
pop
add
add
xor
add
sbb
movsl
pop
xchg
xor
add
pop
xchg
call
iret
out
push
add
mov
jecxz
sahf
cli
inc
pop
into
xor
add
add
pop
dec
sub
popf
ljmp
pop
pop
enter
adc
add
pop
push
add
iret
mov
pop
inc
pop
push
pop
cmp
mov
push
add
addr16
xlat
mov
mov
add
mov
pop
mov
xor
add
bound
add
test
add
cmp
add
add
pop
jne
add
jnp
push
jnp
adc
add
ficompl
dec
sub
pop
shll
das
cmp
pop
shll
add
pop
jge
lods
sbb
xchg
insl
and
rcrb
add
mov
and
pop
add
add
xchg
add
jle
cwtl
and
cs
pop
xor
add
pop
pop
cmpsb
pop
fbld
add
sub
add
push
jge
add
pop
or
mul
pop
out
jmp
mov
add
arpl
add
outsl
mov
and
add
add
add
adc
add
jne
pop
test
bound
add
sbb
pop
xor
add
push
add
loope
adc
add
or
add
jne
pop
sbbb
inc
pop
xlat
mov
xor
insl
lock
adc
add
pop
lods
not
inc
pop
imul
jge
mov
add
mov
add
mov
iret
dec
sbb
add
mov
out
pop
pop
jmp
cmp
incl
xor
add
add
add
add
jg
add
in
adc
add
xchg
out
and
add
pop
sub
xor
add
pop
pop
mov
pop
cmpsl
pop
jge
jge
dec
mov
adc
mov
arpl
add
pop
pop
xor
add
jmp
push
add
xchg
aad
add
push
add
popf
sahf
inc
pop
dec
movsb
pop
pop
popa
add
incl
pop
pop
xor
add
outsl
stc
lods
sbbb
add
xchg
pop
pop
pop
aaa
into
jns
mov
incl
pop
pop
jg
pop
mov
pop
push
add
push
fdivrl
arpl
add
gs
scas
pop
lcall
cmp
popa
add
push
mov
pop
mov
pop
fisttpl
ss
add
cmpsb
pop
negb
cwtl
sarb
int3
xor
add
adc
add
call
add
add
pop
movsb
pop
inc
pop
rcrb
pop
insl
mov
pop
addr16
xchg
std
mov
pop
insb
cmp
cmpsl
pop
and
add
add
loop
stos
popf
pop
aad
inc
pop
nop
popa
add
sub
iret
popa
add
push
add
loopne
pop
test
mov
std
cmp
add
sub
add
insb
pop
jbe
sbb
add
pop
pop
dec
jo
add
inc
add
pop
aam
pop
push
cwtl
out
mov
add
scas
loopne
pop
inc
pop
insl
xchg
repz
add
pop
xchg
pop
mov
dec
cwtl
mov
pop
sbb
pop
stos
fnstenv
add
test
dec
sbb
inc
add
movsl
pop
cmp
jg
add
cmc
adc
add
aam
pop
lock
test
jae
add
lret
pop
add
jmp
pop
ror
pop
aad
mov
xor
add
lods
xchg
pop
ret
pop
or
mov
dec
test
add
jecxz
repnz
pop
icebp
xor
add
scas
mov
std
bound
add
sbb
pop
jbe
std
pop
ret
pop
leave
pop
or
mov
leave
sbbl
add
add
int
mov
lret
jmp
add
add
add
mov
push
cmp
add
mov
dec
adc
add
cmpsb
pop
xchg
adc
add
jmp
mov
pop
call
add
inc
add
lret
scas
pop
mov
out
mov
add
insl
pop
les
or
xchg
pop
cmp
inc
add
aas
xchg
add
or
push
add
ja
pop
ret
cmp
add
add
add
inc
pop
add
add
add
pop
pop
jge
pop
lock
popa
add
lret
pop
out
lods
xor
add
add
push
pop
ret
pop
lret
test
scas
inc
pop
cmp
jge
bound
add
call
in
mov
mov
mov
add
add
add
pop
xor
sarl
movsl
pop
xchg
ja
pop
pop
pop
test
mov
add
arpl
add
add
cwtl
and
add
pop
popf
mov
jp
adc
push
add
inc
add
add
mov
pop
and
push
sahf
cmp
mov
pop
cmp
add
and
add
add
add
xor
add
inc
add
jg
cmc
shl
mov
out
and
add
outsl
add
adc
add
rcrb
cmp
test
fstl
add
fcomps
pop
jns
pop
inc
pop
mov
cmpsb
pop
mov
add
mov
sysenter
dec
int3
cmc
sbb
fidivrs
pop
fwait
sub
add
lret
hlt
dec
pop
jecxz
adc
add
repnz
pop
sbbb
fdiv
cmpsl
pop
addr16
sbb
cmc
cwtl
pop
movsl
pop
cmp
test
sbbl
pop
lahf
hlt
int3
mov
cmc
ljmp
test
add
add
add
xchg
add
push
add
push
pop
xor
mov
aad
pop
inc
add
das
push
xor
add
add
cmc
iret
and
add
pop
sbb
mov
flds
add
clc
mov
mov
mov
adc
and
add
jmp
lret
add
pop
xor
add
int
add
cld
imulb
mov
ljmp
sub
fisubrs
inc
add
xor
add
add
shll
add
es
js
imull
pop
hlt
lock
dec
arpl
add
cltd
sahf
clc
add
add
add
lods
xchg
xchg
pusha
add
aas
inc
pop
movsb
pop
jl
pop
insb
call
jae
add
clc
and
loopne
dec
jbe
int3
sbb
pop
shlb
pop
out
fildl
dec
sbbl
testl
dec
pop
shll
add
pop
and
add
pop
loop
sbbl
rcrb
jno
add
xor
popl
pop
mov
add
add
into
bound
add
sbb
pop
scas
cmpsl
pop
notl
add
mov
pop
jmp
add
pop
cmp
cmp
lret
add
add
add
add
add
loop
inc
pop
jo
add
lock
cwtl
mov
add
xchg
push
add
add
add
and
add
add
jmp
imul
std
xor
sbb
and
add
mov
pop
xchg
add
movsl
pop
sti
je
xchg
scas
je
pop
push
add
add
cld
or
call
movsb
pop
push
pop
leave
add
add
pop
fmulp
adc
add
add
std
mov
add
imul
pop
push
popf
jecxz
mov
sbbb
imul
rcrb
sbb
adc
jl
pop
ss
pop
pop
xor
add
pop
and
add
xor
add
add
add
jbe
std
add
mov
pop
xor
add
popa
add
add
add
add
push
pop
jl
fcmovbe
popf
jb
add
pop
std
int
pop
inc
pop
das
jno
add
pop
sub
add
in
js
pop
push
add
pop
inc
pop
pop
pop
loop
lods
aaa
and
dec
mov
xchg
mov
mov
pop
jae
add
xchg
cmp
bnd
add
sbb
pop
imul
scas
in
mov
pop
mov
add
add
add
lcall
pop
enter
mov
enter
ret
pop
out
push
or
aad
pop
mov
pop
jae
add
fsubs
loope
or
add
add
insb
shll
sahf
nop
xchg
fildll
push
cmpsb
pop
jge
cmpsl
pop
jbe
add
loop
lods
mov
pop
mov
pushf
rclb
ja
je
gs
sbbb
pop
mov
pop
pop
mov
add
push
or
pop
sbb
jmp
add
sbb
jmp
pusha
add
adc
add
add
inc
pop
dec
mulb
add
decl
cltd
cmpsb
pop
jp
mov
pop
iret
jb
add
add
ret
pop
arpl
add
jmp
add
hlt
jg
pop
push
pop
cwtl
jb
add
loopne
sbbb
jle
mov
sub
stos
mov
movsb
pop
jo
add
cmp
cmpsb
pop
or
sub
add
test
xchg
pop
pop
gs
cwtl
rcrb
rcrl
lds
pop
sbb
pusha
add
inc
add
xchg
mov
add
fcomps
popf
push
pop
fcomip
adc
push
xor
add
add
xchg
push
xchg
imul
mov
add
in
push
into
xchg
sahf
enter
and
add
add
push
add
leave
sar
cmp
add
cmp
pop
pop
pop
dec
dec
xchg
js
sahf
mov
or
jl
pop
cmp
add
and
add
nop
test
popa
add
sbbb
pop
aaa
test
add
repnz
sbb
cmp
rcrl
add
pop
inc
add
cmpsb
pop
aas
xor
pop
lcall
rcl
and
add
pop
pushf
mov
mov
sbb
xor
add
add
mov
add
jno
add
jp
jmp
add
sub
sti
icebp
or
add
cmp
fstps
add
add
mov
pop
xor
add
ss
insb
imul
add
add
sbb
xchg
bound
add
add
xor
add
add
mov
pop
fwait
jecxz
mov
add
add
pop
pop
mov
sbbl
pop
lahf
adc
fdivrs
add
imul
pop
mov
add
and
add
add
je
and
add
add
dec
rorb
fsubrl
fnstsw
mov
ds
pop
dec
add
add
sub
pop
fwait
enter
cmc
inc
add
clc
jnp
push
jp
pop
add
pop
add
add
add
pusha
add
cmpsb
pop
les
cmp
add
jmp
lods
stos
stos
nop
pop
push
or
pop
jle
pop
and
add
add
xchg
popf
imul
aam
movsb
pop
pop
rolb
aam
jge
add
sbb
dec
jno
add
mov
pop
add
add
pop
mov
rcrb
and
out
or
inc
add
cmp
pop
stos
push
sub
add
frstor
mov
hlt
sbbl
fdivl
jae
add
lret
pop
xchg
xchg
push
dec
xchg
cwtl
lcall
xchg
scas
mov
cmp
cs
cld
test
dec
xchg
in
int
popf
sbb
add
adc
add
add
add
add
call
lea
mov
pop
pop
jecxz
pop
pusha
add
in
add
add
std
pop
cld
push
add
jne
push
adc
aad
cmpsb
pop
movsb
pop
sbb
push
jbe
add
mov
test
add
clc
out
fs
bound
add
push
scas
xchg
pop
into
sub
add
add
inc
pop
inc
pop
jp
mov
mov
test
mov
xlat
pushf
imul
adc
mov
xchg
gs
clc
push
pop
rcrb
add
xchg
aad
adc
inc
pop
cmpsb
pop
jne
pop
inc
add
sub
testl
inc
add
inc
pop
ljmp
or
xchg
or
fisttpll
inc
pop
dec
push
pop
iret
push
cld
inc
pop
leave
cmpsl
pop
and
add
add
add
add
push
xor
add
add
pop
mov
sbbb
in
imul
int3
daa
pop
mov
pop
and
mov
test
pop
scas
jb
add
sbbl
inc
pop
idiv
jb
add
outsb
mov
add
pop
sbb
add
push
and
add
add
pop
es
in
out
dec
push
int
mov
std
fistpl
addr16
dec
jle
jae
add
sbb
loopne
xchg
jb
add
out
pop
pop
stc
ret
pop
movsl
pop
xor
lcall
xchg
xchg
pop
jg
imul
fisttpll
lahf
pop
popf
inc
add
in
pop
jne
mov
jle
sbb
enter
sub
aaa
icebp
push
add
mov
add
in
insb
repz
add
mov
push
add
jb
add
pop
movsb
pop
movsb
pop
xor
add
push
add
mov
fsubp
pop
insb
frstor
add
push
add
xlat
ljmp
pop
mov
pop
ds
push
jbe
add
dec
dec
lcall
jp
in
inc
pop
pop
sbb
daa
pop
cmp
adc
add
mov
push
lahf
xchg
cwtl
mov
and
add
jg
mov
aaa
mov
and
lods
sbb
add
add
pop
mov
add
fwait
xor
add
mov
jbe
pusha
add
add
add
add
add
repz
cmp
push
pop
outsb
push
and
add
cmovl
pop
pop
push
mov
call
in
fmulp
jmp
add
div
fwait
mov
and
int
pop
and
pop
into
arpl
add
ret
pop
sbb
pop
xlat
mov
add
dec
mov
push
mov
insl
xchg
scas
push
cmp
sbb
mov
pop
iret
xchg
out
cmp
add
xchg
test
sbb
mov
pop
mov
add
add
sub
add
stos
push
push
add
add
push
add
je
pop
mov
pop
int3
mov
pop
decb
aam
insl
scas
mov
dec
loope
sti
dec
adc
mov
jle
das
cltd
mov
and
add
pop
fisubrs
rcrb
add
add
lahf
bound
add
add
mov
les
pop
pop
es
enter
mov
gs
pcmpgtb
jb
add
add
in
adc
add
loopne
cmp
outsl
pop
ljmp
pop
sarl
repz
lock
add
repnz
int3
sub
cmpsb
pop
jg
int
add
mov
rcrl
add
shlb
or
add
cmp
stc
shll
add
pop
mov
das
jns
sub
aad
add
dec
test
add
add
dec
pop
cmpsb
pop
cmpsl
pop
daa
pop
dec
ljmp
mov
pop
pop
in
mov
pop
pop
pusha
add
imul
pop
pop
cmp
add
sub
das
dec
pop
pop
push
popa
add
dec
nop
insb
daa
pop
push
fs
test
cmpsl
pop
cmp
pop
adc
fwait
in
xlat
mov
add
jp
inc
add
fwait
dec
lret
lock
pop
rcrl
xchg
test
fisubs
add
mov
mov
dec
jns,pt
pop
jg
sbb
add
sub
movsl
pop
sbb
cmp
push
sti
jbe
shr
mov
add
push
add
cmp
pop
xchg
lock
add
add
sbb
pop
nop
sbb
add
push
sbb
mov
lds
leave
test
push
add
and
add
add
dec
lods
xor
add
mov
add
add
push
sub
pop
jmp
add
dec
jbe
negb
add
fistl
add
add
in
insl
scas
push
rcrl
add
jp
add
mov
filds
add
ror
gs
outsb
mov
pop
aas
add
add
add
add
add
inc
add
cmp
lods
adc
add
add
lret
add
pop
dec
push
add
fildl
add
jecxz
gs
sbb
lock
hlt
xor
add
repnz
lea
add
mov
stos
outsl
cmp
rcrb
push
add
add
pop
and
scas
xchg
scas
iret
sar
sub
mov
add
call
pop
xor
pop
mov
dec
add
js
jbe
sub
add
push
xchg
das
push
add
imul
adc
add
lea
or
pop
push
add
and
add
pop
mov
lcall
repz
pop
repz
scas
cltd
ljmp
pop
ud2
mov
pop
aas
xchg
jle
push
pop
xchg
int
add
dec
and
add
mov
call
add
and
add
xchg
out
ja
sub
pop
lock
clc
or
push
dec
jecxz
jb
add
insl
mov
mov
pop
push
movsb
pop
ss
mov
in
inc
pop
sbbl
add
out
loop
pop
xchg
scas
aaa
enter
adc
add
mov
pop
out
mov
add
add
adc
dec
dec
test
cld
aad
lcall
add
add
in
dec
cld
xchg
add
adc
mov
sub
inc
add
inc
add
mov
jecxz
jg
jbe
adc
add
es
test
pop
mov
mov
pop
xor
into
mov
out
jb
add
mov
incb
pop
cmc
out
xor
add
loopne
mov
popf
mov
add
pop
and
scas
mov
psubq
sub
sbbb
add
xlat
cli
mov
xor
pop
jne
add
lcall
add
mov
pop
cmp
repz
xchg
div
lods
les
pop
loopne
pop
xor
add
add
lahf
and
add
adc
add
add
inc
add
pop
into
or
or
add
cwtl
xor
add
add
xchg
pop
pop
rcrl
sbb
adc
jae
add
pop
fwait
imul
mov
add
aad
and
add
dec
in
sbb
xor
add
add
es
mov
mov
pop
mov
add
add
fcoms
xchg
and
add
pop
into
fwait
push
addr16
pop
fwait
or
std
fcmove
pop
popf
mov
or
add
pop
std
push
cmp
pop
sbb
out
cwtl
outsl
sub
xchg
sub
xor
add
pop
pop
mov
fidivs
add
push
jae
add
pop
push
push
pop
pop
dec
mov
sbbl
pop
sbb
movsb
pop
pop
mov
std
cmp
xchg
sbbb
mov
ret
sahf
dec
xchg
xlat
fstl
sbb
cmp
push
push
pop
add
add
mov
add
xor
pop
cmp
cld
sbbb
pop
jmp
imul
xchg
xor
add
adc
add
pop
cmpsb
pop
mov
jle
stos
pushf
pop
pusha
add
test
nop
mov
add
jne
add
jo
add
pop
sub
cltd
stos
dec
cmovbe
cli
adc
add
and
lock
add
add
out
sub
add
mov
dec
call
pusha
add
pop
stos
out
mov
mov
and
add
and
add
add
and
sbb
mov
jl
xchg
sub
push
ja
xor
add
dec
cwtl
and
add
add
cli
stc
xor
into
lret
ret
fisubrs
out
dec
aad
pop
pushf
mov
fdivs
add
mov
mov
rcrl
xor
add
inc
pop
icebp
jb
add
notl
in
sbb
inc
add
test
stc
rcrl
cmp
repz
out
fcoms
pop
cwtl
cmp
add
add
pop
arpl
add
xor
add
push
std
pop
jle
pop
lahf
sbbb
imul
test
and
xchg
sbb
pop
and
add
das
mov
adc
add
add
mov
push
xor
add
pop
bound
add
add
adc
add
push
add
xchg
in
cltd
ja
pop
rcrl
loop
push
add
mov
pop
pop
cmpsl
pop
lahf
dec
xchg
push
mov
add
xchg
pop
dec
in
leave
imul
sbbb
pop
xchg
dec
mov
add
ljmp
pop
inc
add
push
mov
xor
add
xchg
inc
add
xor
lret
add
or
lahf
iret
push
in
fadd
pop
pop
push
inc
pop
gs
aas
int3
icebp
pop
fidivrl
sbb
add
enter
inc
pop
or
js
xchg
rcrl
sbb
pop
jp
rcrl
mov
fsub
pop
std
inc
add
out
insb
sbbl
add
xchg
mov
loop
pusha
add
in
jae
add
add
sub
shrb
fmull
es
ljmp
lcall
add
pop
fs
mov
cmp
add
out
psadbw
add
push
rcrl
add
daa
pop
jbe
sub
xchg
in
xor
dec
cmp
add
outsb
mov
pop
push
lods
imul
sarb
add
std
mov
loope
and
rcrl
int3
aas
ret
movsb
pop
pop
lret
pop
dec
in
cmc
or
add
lahf
add
add
mov
or
xchg
or
jo
add
movsl
pop
mov
bound
add
out
addr16
pop
mov
lcall
arpl
add
pop
rcrl
mov
add
lcall
and
mov
lcall
int3
push
loopne
inc
add
push
pop
cmp
pop
adc
add
cmpsl
pop
xchg
sbb
or
pop
cld
jge
inc
pop
push
scas
sub
add
int
pop
test
sarb
pusha
add
pop
jmp
repz
xchg
pop
repz
adc
add
js
jnp
sbb
mov
mov
fwait
dec
in
push
ss
and
push
or
mov
es
sbb
pop
jmp
outsl
cmp
jnp
push
add
cmc
and
add
add
pop
push
out
cs
and
add
xchg
cmp
add
pusha
add
nop
aam
insb
in
lahf
pushf
dec
insb
insb
movsb
pop
insb
xchg
ljmp
add
add
pop
clc
inc
pop
xchg
and
add
add
lcall
les
stos
imul
outsb
mov
push
mov
add
push
call
add
push
call
mov
add
test
je
xor
xor
movzbl
shr
push
mov
add
push
mov
push
push
call
push
call
leave
ret
xchg
mov
sub
add
ret
nop
jmp
jmp
shr
add
jmp
cmp
pop
lea
add
ja
pop
insb
ret
fcoms
imul
int
add
popf
rcrl
ds
loope
inc
pop
pop
jns
pop
jge
add
ja
xchg
leave
or
push
add
ja
or
add
xchg
repz
fwait
dec
jle
sarl
add
pop
inc
add
dec
daa
xchg
out
out
fldt
add
push
call
in
shll
in
mov
dec
sub
pop
inc
add
push
rclb
add
dec
rclb
rol
pop
add
add
adc
add
ja
fidivrl
stos
in
push
jmp
aad
push
mov
outsl
insl
test
popf
fadds
add
add
xchg
mov
add
add
fs
or
add
pop
cld
fsubl
ja
mov
fcompl
iret
jbe
daa
pop
mov
add
lcall
add
add
pop
jle
mov
mov
jmp
jmp
ljmp
sbbb
mov
add
loop
loopne
dec
xor
inc
add
inc
pop
fidivrs
add
das
iret
imul
dec
push
jmp
push
arpl
dec
pop
pop
out
icebp
adc
add
mov
and
add
xchg
pop
shl
aam
push
aaa
push
cltd
mov
fs
ret
push
sub
pop
push
add
push
gs
aam
add
imul
add
jmp
jns
pop
in
ret
lea
xchg
dec
pop
cmp
sub
or
add
mov
pop
adc
add
add
pop
std
or
lret
sbbb
add
and
add
adc
lods
push
pop
mov
mov
imul
je
stos
imul
sbb
push
mov
cmp
cltd
dec
add
arpl
cmc
xchg
in
jb
add
inc
add
inc
add
hlt
cltd
cmp
add
lds
add
jp
add
adc
sbb
add
and
mov
add
sbb
lret
lcall
mov
push
pop
rcrb
add
or
mov
out
fdivrs
movsl
pop
push
add
mov
xchg
jmp
add
mov
jno
add
dec
push
add
inc
pop
add
icebp
imul
loop
add
add
add
or
pop
sub
jmp
sub
pop
es
jge
pop
jle
pop
jbe
pop
jmp
and
adc
adc
pop
mov
add
fcomi
out
jecxz
fbld
add
pop
xor
add
loope
push
nop
cmpsb
pop
and
add
pop
inc
pop
xor
add
pop
sbb
push
pop
arpl
lcall
pop
or
pop
mov
add
popa
add
mov
pop
lahf
aad
jo
add
test
xor
add
jmp
nop
popf
cmp
pop
push
test
lock
add
in
in
fucomip
push
add
jmp
push
jp
or
ljmp
pop
dec
cltd
lds
je
mov
pop
dec
xor
add
imul
movsl
pop
or
inc
pop
and
rcrb
add
push
mov
add
add
fs
shrb
mov
js
test
add
jecxz
pop
ret
pop
aaa
cmp
pop
test
push
add
mov
cmpl
loopne
add
push
add
add
jae
add
in
cmp
add
push
push
xchg
push
push
mov
or
in
push
add
jle
sub
ret
pop
sbb
add
les
pop
cwtl
mov
repnz
mov
pop
insb
aas
pop
ljmp
add
sbbl
pushf
push
mov
pop
jb
add
adc
add
cmpsb
pop
lods
test
add
xchg
jp
pop
jmp
add
add
xchg
pop
rcrl
add
pop
cltd
arpl
add
pop
jne
pop
adc
add
or
dec
inc
add
mov
fcomip
adc
add
pop
enter
pop
pop
push
add
out
adc
add
add
pop
mov
pop
jmp
out
push
pop
dec
daa
mov
bound
add
ret
pop
mov
shrl
lock
jg
pop
cld
mov
pop
adc
add
pop
sub
push
and
pop
dec
dec
mov
pop
inc
add
fwait
mov
push
add
pop
jnp
pop
pop
inc
pop
mov
jl
add
arpl
pop
add
jecxz
les
arpl
add
es
sub
add
arpl
add
jecxz
into
fdivl
cmp
add
jmp
arpl
test
pop
pop
pop
push
mov
pop
cmpsb
pop
cmp
pop
shr
jae
add
jbe
pop
es
push
pushf
inc
pop
insb
insl
imul
mov
bound
add
add
sbbl
and
in
sub
adc
pop
icebp
aaa
pop
adc
add
cmp
add
pop
mov
stos
mov
add
je
and
out
test
and
xchg
inc
pop
cs
jle
pop
lock
rcrb
in
sbb
dec
fxch
push
add
lods
out
inc
pop
mov
rorl
pop
sub
add
mov
je
add
aas
pop
add
and
sbb
sub
subb
fisttps
ret
movsb
pop
movsb
pop
gs
ja
push
push
pop
shrl
in
out
add
pop
fildl
pop
jne
mov
add
jo
add
arpl
add
aaa
xchg
and
pop
bound
add
pop
test
sbb
cmpsl
pop
and
dec
testl
pop
xor
add
lods
xchg
xlat
loopne
sub
cwtl
dec
hlt
push
pop
fists
insb
jbe
pop
pop
xor
add
mov
pop
cld
push
mov
fistps
pop
js
pop
movsb
pop
mov
clc
ja
sbbl
pop
aam
jne
jmp
push
xlat
stos
push
test
xchg
or
inc
add
pop
das
out
jp
add
je
pop
sbb
jne
popa
add
mov
icebp
jbe
sub
test
pop
pop
pop
pop
mov
das
pop
rclb
add
movsb
pop
sbb
sbb
and
cltd
das
js
or
pop
jo
add
mov
pop
xor
add
fnstenv
push
add
fdivrs
mov
sub
jmp
mov
loope
aad
add
add
pop
test
pop
mov
pop
add
add
pop
loope
xlat
imul
pop
inc
add
testl
mov
outsl
test
add
and
add
add
loopne
dec
movsb
pop
cli
arpl
add
add
dec
lds
movsl
pop
fmull
pop
scas
jae
add
add
lcall
add
ja
mov
gs
sub
mov
inc
pop
dec
xor
add
repz
mov
sbb
scas
lret
lods
or
test
rol
pop
shr
dec
pop
dec
rcrb
sub
daa
pop
stc
jnp
pop
dec
jg
popa
add
ss
fnstenv
add
push
inc
add
arpl
arpl
adc
add
setnp
sbb
add
sub
add
scas
push
dec
sahf
lcall
outsb
rclb
add
pop
lcall
cmp
push
jo
add
loop
xchg
outsb
sarl
in
jae
add
push
add
adc
add
cld
rcrl
pop
ljmp
pop
mul
pop
rcrl
add
add
pop
dec
shr
push
pop
jmp
pop
arpl
frstor
add
dec
sahf
push
add
xchg
rol
pop
cmp
add
add
cld
imul
push
add
jne
sub
pop
mov
fcomps
add
in
arpl
iret
and
xchg
sbb
cwtl
jge
sbb
pop
adc
fldl
add
add
in
scas
xchg
mov
dec
pop
enter
dec
cld
stos
adc
add
outsb
inc
add
in
daa
add
push
add
mov
lock
loopne
int3
arpl
add
jne
push
ret
sti
aam
ljmp
add
add
add
test
or
pop
rclb
add
jo
add
fidivs
sub
mov
mov
push
lds
or
jno
dec
bound
add
add
cmp
add
and
add
mov
cwtl
pop
frstor
or
add
dec
mov
inc
add
and
add
add
ficompl
add
lea
add
and
add
pop
add
mov
pop
inc
add
fcoms
or
outsl
sub
add
jmp
add
inc
pop
outsl
ds
pop
popf
insb
fincstp
fsubl
ljmp
push
fisttps
pop
cs
lods
mov
sbbl
add
dec
xor
mov
mov
xchg
xchg
add
lds
fisubrs
lret
sti
dec
ret
int3
mov
das
push
stos
or
enter
mov
pop
xor
add
add
into
sbbb
add
call
add
pop
pop
push
add
inc
add
cld
rcrl
pop
movsb
pop
cmc
fwait
stos
insl
mov
pop
pop
sbbb
push
lea
add
add
pop
out
inc
pop
jp
xlat
cmp
add
push
arpl
add
dec
adc
nop
jl
lods
pop
sbbb
out
pop
in
stc
jb
add
pop
add
add
fists
in
and
add
add
incl
jmp
outsl
into
push
ds
sub
sbb
pop
add
add
into
mov
pop
sarl
bound
add
add
add
add
stc
hlt
sub
pop
mov
xchg
cmp
add
clc
nop
or
pop
ffree
pop
addr16
enter
pop
decl
inc
add
ljmp
jp
ret
add
mov
jb
add
stos
cmp
jns
add
xchg
pop
clc
shrl
pop
xchg
ret
pop
sbb
je
and
add
mov
les
ret
aaa
arpl
aaa
repz
add
push
adc
add
fnstcw
aas
adc
add
and
add
mov
mov
push
add
jle
pop
into
std
cmpsb
pop
cmp
sti
loope
pop
inc
pop
inc
add
cs
dec
imul
jg
or
inc
add
mov
xor
add
add
and
add
add
sub
enter
add
pop
push
pop
cmp
das
pop
xor
pop
adc
add
push
add
inc
pop
add
add
pop
mov
and
hlt
ds
sbb
push
mov
jne
add
adc
cmp
ret
pop
insb
bound
add
jo
add
scas
or
in
popa
add
mov
pop
lea
xlat
jg
pop
roll
add
inc
add
xchg
xor
add
dec
in
adc
add
mov
push
pop
inc
push
add
sbb
push
or
mov
je
out
movsl
pop
mov
pop
aad
aaa
push
push
mov
add
add
das
push
popl
jmp
push
daa
jp
scas
fwait
out
or
pop
cmp
insb
sub
pop
popa
add
hlt
rcr
repnz
jno
add
sub
jbe
test
add
jne
out
xchg
aas
aad
aam
imulb
inc
add
jnp
nop
cwtl
insb
out
dec
push
pop
and
xchg
loope
push
add
stos
repnz
cmp
pop
aas
ja
in
sbbl
sub
add
push
enter
add
sub
jecxz
mov
popf
shrb
jb
add
gs
rcrl
ret
pop
mov
fcomps
sub
ds
add
fsts
pop
adc
add
ja
mov
mov
jns
xor
add
add
outsb
adc
pop
add
add
push
add
fwait
lods
into
js
mov
pop
call
cmpsb
pop
push
jbe
mov
pushl
jmp
and
xorb
jns
mov
sub
sbbb
add
cmp
add
mov
cmp
inc
jmp
in
add
iret
xchg
std
or
rclb
push
jp
jle
fiaddl
aaa
pusha
add
pop
add
add
popa
add
inc
add
cmp
pop
xchg
adc
add
scas
and
add
add
cmpsl
pop
mulb
in
pop
xor
add
jmp
push
aas
add
and
lret
ret
pop
push
mov
pop
jl
pop
pop
fs
mov
sub
pop
or
add
add
mov
jmp
pop
mov
xchg
in
test
inc
add
xchg
movsl
pop
out
rcrb
add
cmc
mov
xchg
call
add
jno
add
mov
pop
gs
das
sub
pop
mov
popf
shrb
pop
sub
add
add
decl
test
ja
add
scas
and
add
mov
aam
cwtl
jmp
in
jbe
xor
fidivrs
insl
sbb
pop
mov
imul
add
test
ds
sbb
sarb
add
add
or
pop
push
pop
jmp
pop
xor
pushf
and
xor
imul
sub
daa
dec
inc
pop
pushf
aas
xchg
incl
shr
or
add
or
mov
mov
add
mov
pop
shr
stos
pop
xor
test
pop
repnz
add
add
lock
push
mov
add
enter
add
cmp
sub
add
jo
add
pop
mov
cmp
jmp
ret
sub
jb
add
les
lock
hlt
lea
add
popa
add
ret
pop
cltd
inc
pop
cmp
pop
iret
aad
inc
add
add
add
adc
add
jmp
lret
xchg
add
add
into
in
sbb
add
push
and
inc
jne
push
pop
adc
add
fwait
icebp
push
out
pop
adc
add
mov
add
mov
add
add
sahf
enter
cmp
stos
icebp
or
pop
repz
inc
add
rcrb
js
mov
sub
pop
add
lahf
les
loop
push
add
adc
add
cmc
mov
mov
add
xchg
push
scas
add
sub
push
enter
int
test
mov
outsb
sub
lret
pop
jp
pop
repnz
add
xchg
mov
dec
iret
jb
add
pop
cmp
fdivp
cmp
dec
repz
fidivl
je
inc
add
aam
mov
ljmp
add
lret
nop
mov
jge
lret
push
lds
pop
add
add
outsb
ficompl
adc
add
cmp
stc
jmp
adc
add
add
bound
add
add
jmp
add
pop
outsb
mov
pop
fists
jnp
jb
add
pop
mov
inc
add
ficompl
dec
cld
cmp
sub
mov
push
mov
fucom
flds
sbbl
add
icebp
enter
outsl
xchg
xchg
in
push
cld
jns
adc
add
add
test
sub
jo
add
pop
loope
xor
sbb
cli
call
adc
out
dec
pusha
add
xchg
int3
mov
add
add
aas
rcrl
fisttps
mov
insb
scas
add
add
arpl
add
cmp
fs
pop
sbbb
mov
add
adc
add
pop
test
push
loope
lcall
jnp
lret
iret
dec
xchg
add
rcl
loope
sub
stos
inc
add
cli
inc
pop
mov
iret
xchg
lcall
pop
mov
sti
xor
add
pop
push
movsl
pop
cmpsl
pop
stos
jbe
xor
add
arpl
add
sub
pop
mov
lret
add
add
or
into
mov
mov
aam
add
test
repz
add
add
test
pop
outsl
ret
pop
ds
inc
pop
sbb
push
add
pop
out
and
add
pop
jge
add
sbb
add
pop
mov
sub
mov
add
sbb
add
xor
imul
pop
gs
fs
push
pop
jbe
push
jl
jmp
dec
xchg
pop
sbb
test
add
add
pop
xchg
add
dec
jb
add
pop
pop
scas
addr16
xchg
int
test
insb
out
fistl
pop
add
add
xchg
enter
add
or
pop
mov
pop
pop
imul
jmp
jp,pt
sbb
dec
push
add
fdivl
add
cmp
sti
mov
pop
loopne
nop
xor
add
ds
add
inc
add
rorl
das
lahf
add
add
mov
cmpsl
pop
test
inc
pop
jno
add
push
add
fnstenv
push
push
cmc
shll
add
or
mov
pop
add
fstpl
roll
add
testl
gs
jns
pop
push
mov
push
pop
mov
movsl
pop
lock
or
dec
pavgw
xchg
adc
add
add
inc
pop
sub
add
xor
add
lret
ret
xchg
out
dec
decl
test
insb
add
jmp
arpl
add
nop
in
pushf
mov
popa
add
jae
and
cltd
pop
out
mov
pop
sbb
cmp
add
push
dec
pop
aaa
inc
mov
test
add
out
out
scas
decb
shrb
xor
jmp
daa
filds
push
add
mov
add
lods
sub
inc
pop
xchg
jmp
decl
jmp
sub
enter
jae
add
movb
lock
jmp
inc
dec
cwtl
loope
xor
add
mov
add
shll
add
push
add
movsl
pop
fisttpll
rep
jmp
inc
pop
arpl
mov
loopne
icebp
rol
pop
in
mov
lcall
dec
push
leave
lret
ret
cmc
js
xchg
xchg
cmc
dec
and
add
pop
icebp
test
mov
cld
sub
pop
outsb
lahf
rcll
repz
aas
imul
add
jnp
negb
inc
pop
imul
imulb
shlb
add
add
addr16
cld
imul
fists
pop
mov
pop
adc
add
int
pop
pop
xor
add
dec
adc
add
mov
and
add
add
jl
cltd
push
xchg
cli
adc
add
jl
bndstx
scas
ret
pop
mov
add
xchg
pop
stos
pop
mov
sbbb
pop
lds
push
das
xor
add
cli
add
and
add
mov
xor
add
int3
xchg
icebp
and
add
push
jge
pop
sbb
mov
fisttps
sbb
aas
add
add
push
or
add
in
pop
dec
test
mov
adc
pop
mov
pop
mov
into
and
add
add
add
dec
fmuls
cmp
add
xchg
aas
rcrl
fwait
or
ljmp
rcrb
jns
push
negl
add
push
push
push
ljmp
push
cmp
mov
push
xchg
loop
xlat
mov
pop
mov
mov
jo
add
sbb
add
lods
dec
scas
enter
push
add
daa
pop
ret
pop
fs
ss
cltd
push
add
pop
insb
pop
lds
jmp
imul
in
inc
add
idiv
imul
and
add
pop
movsl
pop
loope
pop
sbb
adc
add
jp
xor
arpl
add
cmp
add
sbbl
mov
pop
or
pop
stc
cmp
imul
sbb
movzwl
jmp
fnstcw
push
add
xchg
or
mov
rolb
ret
xor
dec
test
add
pop
pop
incl
add
xor
push
add
arpl
add
pop
scas
sbb
sbb
add
cmpsb
pop
dec
arpl
add
popf
stos
pop
xchg
add
call
in
add
add
fwait
imul
sbb
aad
inc
add
sub
add
jnp
and
int3
cwtl
push
divl
outsl
bound
add
add
aaa
test
add
jae
add
dec
xchg
jno
add
add
pop
clc
adc
add
mov
in
push
dec
rcl
and
add
int
pop
add
add
mov
push
add
mov
add
pushf
pop
add
add
ss
test
pusha
add
out
dec
arpl
jp
cmpsl
pop
cli
pop
mov
add
add
sbbl
pop
or
pop
mov
pop
pop
xor
pop
xlat
fwait
sbb
add
rcrl
lods
dec
add
pop
pop
out
push
or
add
jb
add
jns
pop
mov
add
pop
mov
pop
int
addr16
pop
xor
add
pop
test
dec
pop
pop
pop
cmpsl
pop
mov
mov
fcmove
outsb
enter
inc
pop
rol
pop
inc
pop
jmp
fildll
int3
aas
in
mov
mov
sti
inc
pop
sub
popl
out
das
xor
add
mov
add
add
dec
ja
inc
pop
cmp
add
fs
hlt
rcr
int
pop
jecxz
adc
add
add
ret
pop
jnp
dec
in
leave
cmpsb
pop
les
mov
jmp
in
sbb
mov
arpl
add
out
mov
pop
test
pop
fidivrl
inc
add
gs
rcrb
add
jmp
mov
add
or
sbbl
add
ficompl
pop
fistps
aad
and
add
cmpsl
pop
mov
pop
int3
jb
add
inc
pop
xchg
neg
adc
add
pop
sahf
rclb
mov
cmp
add
mov
add
inc
pop
aas
push
add
and
add
aaa
xor
add
loopne
mov
mov
add
cld
dec
sub
add
idiv
ror
into
inc
pop
sbbl
inc
add
lret
pop
rcrb
clc
rolb
pop
ficomps
ja
dec
and
add
add
xor
inc
pop
pop
fcomps
hlt
jnp
or
jo
add
and
sub
inc
pop
sbb
loop
jmp
arpl
arpl
dec
aas
xor
inc
add
testl
add
inc
pop
clc
std
and
add
mov
test
fs
test
adc
add
xchg
pop
ss
pop
jle
add
dec
xchg
pop
mov
adc
add
sbbl
add
add
add
add
add
jmp
sub
add
and
add
sub
aam
add
ds
daa
mov
push
pop
jb
add
test
cmp
in
cmp
pop
push
je
jmp
inc
int
pop
pop
into
scas
aas
xchg
jmp
sbb
cmp
xor
add
add
xor
add
pop
ljmp
stos
repnz
pop
stos
mov
rcrb
stc
cltd
inc
pop
cwtl
mov
add
call
pop
scas
and
add
pop
daa
pop
fs
call
mov
pop
call
out
sub
sub
js,pt
lods
dec
fwait
xchg
add
outsb
jge
pop
das
es
mov
sbb
fimull
push
add
out
mov
add
jmp
inc
dec
pop
lock
xlat
pusha
add
mov
out
cmp
cmp
lods
sub
add
decl
cmp
add
out
push
and
add
add
pop
lods
lods
in
cmpsl
pop
mov
add
add
inc
add
push
pop
push
add
mov
jl
into
pop
xlat
xchg
jns
pop
push
aam
push
les
add
jg
push
add
imul
pop
sub
pop
cs
lods
mov
inc
add
mov
or
add
outsb
add
add
pop
insl
jle
addr16
popa
add
fidivl
add
pop
xor
add
inc
pop
ftst
pop
jle
push
add
push
push
into
mov
ds
add
sbb
add
or
jns
jecxz
push
add
nop
sub
add
inc
add
dec
add
add
call
add
mov
nop
lahf
mov
pop
ljmp
lods
sbb
fcmovne
in
ret
add
pop
into
hlt
jne
loope
push
pop
pop
inc
add
sbbl
call
push
add
scas
pop
ret
pop
add
add
push
mov
adc
add
lret
lods
mov
add
cmp
add
add
pop
cmp
loopne
mov
popa
add
frstor
insb
lea
add
mov
push
inc
pop
add
add
add
add
sbb
icebp
inc
add
in
lods
inc
pop
jnp
add
dec
lcall
test
cmp
iret
mov
add
add
je
add
sbb
call
pop
push
aas
lret
bnd
mov
xchg
mov
jmp
add
cmc
mov
add
enter
pop
pop
sub
add
pop
adc
add
mov
add
mov
pop
push
add
jecxz
add
add
dec
xor
add
loopne
pop
imul
jle
test
pop
repnz
loope
jge
dec
push
add
iret
jp
and
add
add
pop
inc
add
aaa
cmp
and
xor
add
jmp
cli
in
mulb
pop
xor
loopne
pop
lret
add
add
mov
pop
pop
insb
rcrb
fisttpl
add
cld
xor
add
dec
in
add
xor
add
add
or
pop
mov
rcrb
negb
pop
decl
add
ret
arpl
ret
add
sub
add
mov
push
add
push
add
sahf
test
cmp
mov
mov
add
mov
push
and
pop
add
add
jne
jmp
xor
add
loope
pop
mov
ss
add
loope
push
add
dec
in
sahf
jns
jmp
in
jns
or
adc
iret
jmp
pop
sbb
mov
inc
add
into
or
mov
rep
jmp
cmp
test
pop
shrb
inc
pop
call
add
jnp
cmpsb
pop
cld
adc
inc
add
jge
dec
inc
pop
xor
pop
mov
pop
xor
add
mov
pop
mov
mov
add
and
add
jge
and
add
movsl
pop
adc
add
inc
add
mov
loope
jg
pop
in
cs
loope
sub
dec
jnp
xor
pop
aam
pop
xchg
scas
shlb
sbb
add
loop
and
add
frstor
nop
repz
push
test
popa
add
shrl
aad
xor
add
add
pop
divb
fldt
insb
mov
push
inc
add
pop
pop
xchg
fadds
xchg
sbb
add
lcall
mov
dec
or
jb
add
add
divb
adc
mov
pop
lret
xchg
lds
pop
push
jb
add
add
add
adc
les
jbe
lahf
lcall
add
xchg
push
add
and
mov
mov
jmp
fisttps
cmc
sbb
push
mov
inc
pop
lods
iret
jecxz
pop
nop
push
loopne
sti
es
sub
pop
sbb
out
in
call
mov
arpl
pop
sbbl
in
mov
popf
addr16
not
fcomp
sbbl
xchg
fildl
jbe
mov
les
mov
xchg
insl
xchg
cmp
add
fs
push
in
icebp
sahf
mov
add
fiadds
add
arpl
add
add
fs
lea
add
mov
xchg
repz
mov
xchg
adc
add
add
jp
or
fsubs
add
pop
les
mov
add
ret
xchg
push
mov
add
lcall
mov
push
mov
pop
add
add
arpl
add
push
ljmp
fldcw
and
mov
add
out
push
add
cmc
jno
add
add
mov
add
icebp
pop
cmpsl
pop
lahf
dec
jns
lahf
jnp
add
in
fs
jp
stos
xchg
mov
sub
lret
imul
add
add
add
jbe
add
sbb
adc
add
add
add
add
stos
into
pop
pop
jge
pop
or
or
pop
jmp
add
cmpsl
pop
das
mov
pop
shll
cltd
sub
call
jmp
add
pop
mov
sbbb
rcrl
add
mov
mov
mov
pop
int
cli
stos
jno
add
mov
pop
push
jne
pop
inc
add
ss
pop
mov
pop
cmp
cltd
mov
add
mov
pop
xchg
test
pop
jo
add
ret
pop
std
dec
lahf
out
arpl
add
or
add
jbe
pop
push
pop
jmp
arpl
fs
lods
js
add
sbb
and
add
gs
xlat
fidivs
add
mov
fsts
sbb
pop
shlb
add
pop
ds
jne
mov
sbbl
pop
ljmp
ret
pop
lods
pop
iret
xchg
xchg
pushf
jno
add
lret
mov
pop
sub
add
sahf
scas
sbb
rcrl
ljmp
cmp
mov
push
mov
jmp
mov
or
ja
dec
call
add
add
push
push
push
ret
ljmp
sub
jecxz
xchg
sub
pop
jl
and
add
add
mov
lret
pop
sahf
mov
jne
pop
das
outsb
and
dec
rcll
add
add
insb
cld
stos
mov
add
mov
dec
xor
test
add
movsl
pop
xchg
xchg
mov
sbb
rcrl
shlb
add
ja
dec
jmp
sti
enter
pushf
fscale
and
cvtdq2ps
test
outsl
pop
test
jecxz
cmp
add
sbbb
add
scas
add
add
add
pop
pop
and
add
push
mov
pop
jmp
sub
cmp
pop
popa
add
inc
pop
imul
add
dec
fcoml
dec
mov
outsb
ja
lds
pop
in
je
int3
pop
inc
pop
xchg
jns
add
pop
add
add
jle
push
ss
inc
add
pop
push
add
and
add
pop
xchg
jno
add
test
fisubs
add
repz
sti
sbb
add
in
rorl
nop
scas
pop
adc
add
pop
insl
push
pop
jae
add
addr16
ret
pop
cmpsb
pop
fmuls
in
pop
pop
add
aad
mov
pop
cmp
rol
pop
fcmovne
cli
outsb
fidivs
add
sub
jmp
stos
cltd
sub
pop
push
add
cltd
xor
add
xor
add
add
add
push
add
mov
push
iret
cmp
add
iret
ds
and
mov
pop
or
mov
lea
out
aas
into
popf
jge
xchg
dec
inc
pop
dec
jb
add
pop
in
notb
pop
ss
mov
sub
pop
push
mov
sub
add
mov
xchg
les
pop
pop
pop
sar
int3
adc
test
pop
lret
mov
pop
pop
shlb
outsb
push
add
and
add
add
pop
push
xchg
ja
cmc
aaa
sub
jno
add
and
add
cmp
add
mov
add
test
fcomi
mov
pop
lahf
pop
or
sahf
mov
testb
xchg
arpl
aad
inc
add
mov
pop
cs
xor
add
add
out
sahf
test
add
pop
add
add
push
add
jns
imul
add
add
int3
xchg
jae
add
xchg
pop
fldcw
push
add
stc
sbb
pop
leave
fstpt
and
js,pt
pop
xchg
push
add
clc
jmp
fildl
in
adc
add
jne
add
inc
pop
sub
pop
js
mov
xor
add
mov
sbb
int3
movsb
pop
sub
adc
rorb
ja
adc
add
js
pop
ror
mov
dec
add
cmp
stc
jnp
adc
pop
xor
out
jmp
rcll
pop
push
pop
push
adc
ja
pop
push
call
jmp
dec
pop
arpl
aas
adc
mov
push
arpl
add
fisubl
add
aam
pop
int
popf
sub
pop
fdivr
mov
jecxz
adc
add
out
mov
repz
fsubrl
arpl
add
fs
inc
add
xor
add
xor
add
inc
add
cmp
add
mov
add
jne
pop
sbb
outsl
arpl
sub
lcall
fcomip
shlb
dec
jo
add
lods
sub
ret
pop
pop
xor
add
int
pop
je
add
mov
jno
add
add
push
sub
pop
pop
push
adc
add
sub
ret
pop
pop
popf
jge
add
pop
je
mov
add
aas
aas
jmp
lock
add
ljmp
pop
push
add
mov
add
flds
pop
insb
jg
adc
add
jo
add
pop
mov
add
push
in
les
aam
pop
fcmovu
lret
sti
sbb
lds
test
add
mov
add
pop
in
movsb
pop
mov
add
fwait
mov
pop
mov
cmp
add
mov
mov
fcomip
aaa
aam
mov
pop
jmp
or
add
adc
pop
jge
es
mov
add
xor
add
inc
pop
insb
iret
dec
add
sub
js
into
out
xchg
dec
adc
add
jp
add
xchg
fs
adc
add
pop
pop
rclb
mov
aad
mov
pop
je
pop
daa
pop
test
test
lret
push
adc
add
repz
mov
enter
mov
jmp
mov
or
pop
ret
pop
fnstsw
daa
pop
mov
sahf
test
nop
inc
add
pop
sub
add
mov
stc
inc
pop
sub
pop
pop
and
add
pop
xchg
sbbb
cmp
mov
pop
mov
pop
mov
pop
fsubrp
push
add
or
lahf
loop
cmp
les
leave
sbb
sbb
in
mov
dec
dec
ret
pop
mov
add
pop
dec
pop
jg
xchg
popf
fdivr
push
jmp
or
arpl
jmp
dec
dec
inc
arpl
adc
add
add
ljmp
les
jmp
aaa
mov
and
add
pop
in
dec
popf
dec
xchg
cltd
pop
push
add
insb
popf
out
sbbb
add
push
sbbl
sub
add
pop
cmp
into
mov
ret
add
add
inc
pop
or
inc
add
sbb
clc
and
add
mov
xchg
arpl
add
pop
push
add
xor
add
xor
adc
add
stos
ja
pop
mov
insl
sbbb
outsb
out
outsl
mov
hlt
cmc
ljmp
pop
inc
add
mov
loop
scas
lcall
cmp
pop
lock
daa
pop
out
adc
add
pop
mov
push
cmc
incl
add
pop
mov
add
sbb
add
pop
push
cmp
jle
add
push
add
mov
add
dec
add
add
mov
mov
leave
stos
xor
add
test
sbb
mov
jmp
pop
pop
add
push
add
cld
push
adc
add
or
add
outsb
sub
push
imul
xor
add
imul
insb
inc
add
mov
inc
add
mov
add
pushf
incl
add
in
sbb
pop
mov
fisttpl
add
or
mov
aas
mov
sbbb
iret
jae
add
jo
add
add
xchg
mov
jge
add
outsl
xchg
or
cmpsl
pop
sbbb
inc
add
mov
push
pushf
scas
fisubl
add
pop
push
or
add
sub
cli
pop
call
mov
mov
add
xchg
popa
add
cmpsb
pop
jecxz
xor
add
adc
add
pop
call
add
inc
add
cld
push
pop
fidivs
adc
add
add
movsb
pop
mov
xor
bound
add
pop
mov
jno
add
mov
test
pop
hlt
cwtl
je
sub
xchg
push
insl
adc
add
dec
pop
rcrl
fstps
pop
or
xchg
in
out
mov
xchg
sbb
add
cmc
out
adc
add
das
test
pop
cmc
lret
je
push
iret
std
enter
add
add
xor
add
popa
add
daa
pop
push
test
sub
push
ret
into
push
add
add
pop
pop
xor
add
cld
mov
add
fcmovnbe
bound
add
pop
scas
and
add
scas
mov
in
inc
pop
fs
pop
or
pop
js
out
lock
pop
jno
add
add
cwtl
popa
add
sbb
flds
pop
add
add
adc
je
add
push
out
lods
mov
pop
jmp
jae
add
cmp
cmc
bound
add
lahf
addr16
pop
mov
dec
aaa
adc
ret
add
fmul
mov
add
inc
pop
sbb
jmp
aam
scas
or
pop
imul
ds
add
std
stos
test
and
sbbl
mov
dec
inc
pop
push
inc
add
fstps
or
add
test
pop
ds
iret
pop
xor
inc
add
aam
xchg
je
adc
add
cmp
jbe
add
jne
aaa
arpl
pop
addr16
clc
cld
lods
adc
add
add
sbb
addr16
push
mov
mov
add
dec
mov
pop
push
add
lret
into
dec
lods
mov
lcall
sbb
add
arpl
arpl
inc
add
stc
push
pop
mov
sbb
xchg
pop
pushf
mov
jle
loopne
push
mov
rcrl
pop
add
add
mov
into
in
mov
mov
jmp
cmpsl
pop
mov
add
pop
mov
mov
mov
adc
add
icebp
jge
pop
mov
cmp
dec
sbbl
add
cli
mov
add
xchg
adc
add
sub
jecxz
incl
pop
sub
add
bound
add
pop
dec
sbbl
out
push
pop
mov
adc
add
shll
xor
add
add
shrl
add
cli
repnz
pop
mov
fimuls
add
fcoms
xor
jo
add
and
add
lds
mov
jmp
add
aad
add
inc
add
sbbl
shll
add
sub
repnz
add
push
dec
push
add
dec
pop
ficomps
sbbb
or
add
sub
aad
xchg
fsubr
std
std
sbb
pop
sbb
jb
add
pop
das
mov
cmp
add
pop
inc
jmp
lods
sbb
push
arpl
pop
or
clc
adc
add
addr16
lds
add
sbb
or
pop
mov
pop
lret
push
jb
add
jbe
push
jmp
adc
into
ret
or
pop
and
add
pop
dec
pop
inc
add
shlb
add
add
add
add
push
add
popa
add
sbbl
pop
sbb
mov
xchg
in
mov
mov
leave
movsl
pop
dec
mov
jmp
xor
add
add
ret
pop
adc
add
add
add
add
cmp
fdivl
int3
pop
fimull
call
push
add
addr16
stc
ret
pop
add
add
add
jge
jle
stos
push
add
mov
lahf
or
inc
pop
inc
add
sbb
imul
add
add
pop
aam
add
add
mov
add
mov
add
cmpsl
pop
mov
pop
in
push
fucomi
mov
in
xchg
rcrb
or
fsubrl
cmpsb
pop
xchg
rcrl
bound
add
loope
sub
mov
jmp
arpl
cmc
add
jge
pop
int
add
add
movsb
pop
xchg
pop
pop
fwait
test
mov
add
mov
lea
ret
pop
xchg
fsubl
int3
lret
xchg
add
imul
cmp
pop
sbbb
pop
mov
frstor
add
scas
sbbb
and
bound
add
pop
in
push
jns
mov
shl
pop
pop
jns
pop
dec
adc
add
add
bound
add
add
popa
add
sbb
jbe
xlat
leave
shrb
pop
or
cmp
fcompl
frstor
repz
or
outsl
arpl
add
sti
jmp
dec
adc
add
pop
jb
add
pop
pop
insl
aas
sti
rcrl
xchg
add
inc
pop
dec
push
add
mov
out
out
rcrb
add
pop
or
push
mov
push
bound
and
call
add
int3
nop
test
jne
fidivrl
or
add
arpl
add
repnz
mov
add
add
sbbb
or
adc
pop
jecxz
idivl
cmpsb
pop
cmp
shll
add
das
jnp
adc
add
pop
stc
mov
sti
loop
mov
xor
add
add
add
addr16
xor
pop
ret
sbbl
outsl
mov
pop
or
daa
pop
int3
adc
add
pop
int
xchg
push
jmp
arpl
pop
arpl
loope
rcrl
add
pop
jbe
pop
rcrb
adc
mov
or
jge
or
xchg
sbb
dec
sbbl
lock
pop
push
call
insl
dec
out
or
add
mull
add
scas
pop
adc
add
sub
or
js
lea
loopne
xlat
mov
add
cmpsb
pop
sbbb
clc
or
mov
rcrb
add
push
add
inc
pop
add
add
pop
jns
pop
and
add
fptan
or
add
add
add
movsl
pop
jne
rcrb
call
faddl
add
add
std
cmp
jmp
cmp
push
add
cwtl
pushf
fstpl
mov
add
ds
mov
inc
pop
jg
add
cltd
mov
and
add
adc
add
jle
pop
fldenv
imul
push
mov
add
ret
addr16
movsl
pop
decl
jmp
and
fisttps
sbbb
loope
inc
add
mov
dec
cmp
jecxz
mov
inc
add
mov
repz
and
add
ljmp
pop
pop
mov
pop
ljmp
add
js
add
inc
arpl
arpl
xchg
pop
pop
mov
add
cmp
sbbl
std
imul
jbe
add
jb
add
pop
cmp
call
jmp
pop
arpl
push
pop
jge
pop
pop
js
add
movd
add
pop
psrld
add
adc
add
jnp
and
add
bound
add
add
add
test
jle
lods
insl
sbb
add
add
clc
pop
sbb
pusha
add
pop
mov
add
test
push
add
rcrl
mov
pop
stc
int
xor
dec
je
pop
lea
mov
and
add
add
or
pop
and
imul
jmp
into
pop
frstor
lods
adc
add
and
add
rcrl
sbbl
ret
pop
shlb
add
or
aam
mov
fs
jbe
mov
and
frstor
mov
add
add
icebp
call
pushf
ljmp
std
pop
dec
rcll
xchg
ret
pop
push
xor
jmp
aaa
dec
mov
add
pop
cmc
adc
add
inc
and
jmp
xor
outsl
aad
pop
es
lret
rcll
lret
ficoms
jp
adc
add
pop
call
hlt
sbb
jbe
jmp
dec
or
sub
outsl
mov
mov
add
leave
push
pop
add
add
pushf
mov
shrl
les
pop
clc
mov
enter
add
sbbl
mov
jl
add
mov
pop
out
sub
add
pop
push
add
out
or
pop
ret
pop
push
mov
push
ret
arpl
enter
sbb
cld
push
pop
imulb
inc
add
jno
add
cs
pop
mov
add
add
fwait
push
add
iret
clc
es
pop
iret
loope
lock
pop
cwtl
mov
inc
pop
adc
add
add
xor
add
adc
add
inc
add
fildll
sbb
addr16
mov
xor
add
add
addr16
inc
add
sbbl
add
out
or
lret
gs
movsl
pop
add
add
out
insb
in
pop
nop
jno
add
add
test
pop
jl
pop
sbb
add
jno
add
mov
cmpsb
pop
xor
add
sbb
sti
jmp
pop
add
and
add
add
xchg
sbbl
pop
sbb
push
loopne
fcom
pop
test
pop
aad
push
and
add
sbb
mov
or
add
iret
xor
add
jmp
cmc
mov
add
cmp
mov
add
add
mov
or
lock
lds
add
icebp
ret
pop
fs
push
rcl
leave
lahf
sub
int3
in
arpl
add
pop
pop
inc
add
mov
decl
add
or
mov
jmp
inc
inc
daa
daa
or
add
push
push
ret
pop
mov
add
jmp
andb
daa
push
add
popf
cmp
xchg
pop
mov
xchg
ficompl
loopne
fs
out
push
add
sub
add
js
mov
ret
pop
push
add
jmp
daa
pop
push
add
cs
pop
ss
pop
cwtl
jle
xchg
call
int
std
aas
pop
aam
pop
in
mov
inc
pop
push
add
push
mov
ds
jl
out
stos
lock
push
add
movsl
pop
bound
add
pop
xchg
or
imul
cli
js
pop
dec
std
lahf
mov
stos
pusha
add
sub
add
mov
sar
test
pop
adc
add
xchg
mov
pop
mov
in
mov
pop
jne
push
pop
test
hlt
xor
add
bound
add
dec
jnp
jo
add
add
pop
xor
std
std
xor
add
div
jmp
dec
enter
lods
and
add
add
out
sub
sbbl
pop
icebp
gs
rcr
fcomi
jne
sbbb
add
jmp
mov
lret
and
movsl
pop
sarb
add
pop
pusha
add
xchg
jnp
push
add
mov
add
adc
add
add
clc
nop
rcrl
sar
jge
stos
scas
pop
sub
adc
add
imul
std
out
ljmp
pop
rcrl
push
add
sub
pop
popf
rcl
xchg
or
pop
cmp
add
pop
sbbb
pop
push
fnsave
insl
aaa
fists
inc
add
aas
mov
out
fdivl
pop
sbbb
dec
fnsave
pop
inc
add
scas
repnz
mov
fdivrl
add
push
add
in
loopne
push
dec
in
and
add
pop
mov
mov
add
add
jne
je
je
ret
jmp
sbbl
fisttpll
pop
add
dec
sbb
icebp
jmp
sti
arpl
jne
cmpsl
pop
gs
pop
pop
js
and
add
add
fstpl
ljmp
shr
add
add
pop
arpl
xor
add
xlat
fsubrs
pusha
add
std
test
pop
mov
mov
decl
add
adc
dec
mov
pop
inc
add
xchg
push
pop
jmp
push
cmpsl
pop
push
out
cmp
pop
add
cltd
pop
pop
push
addr16
das
movsl
pop
push
in
out
cmp
xor
mov
add
cmp
add
xor
jecxz
push
repz
fdivrs
pop
adc
add
test
or
pop
pop
push
add
jns
pop
bound
add
add
xchg
cmp
mov
inc
push
add
pop
arpl
imul
test
call
mov
xchg
push
loopne
outsl
sub
rcrl
pop
pop
rolb
pop
pop
imul
loope
arpl
add
cmp
mov
pop
ret
pop
fdivl
ficoms
add
les
jnp
test
add
popa
jmp
into
push
pop
sub
iret
cld
test
jmp
xchg
inc
add
inc
add
push
pop
mov
and
jns
fwait
push
sbbb
push
pop
add
adc
and
add
dec
push
dec
outsl
pop
push
mov
pop
jp
add
das
shll
fistps
pop
add
jb
add
pop
mov
pop
add
js
and
add
xor
add
out
gs
aam
mov
fcmovbe
incl
leave
inc
add
je,pt
pop
fwait
jmp
pop
add
add
stc
push
std
fwait
jns
ljmp
pop
mov
add
pop
lahf
push
popf
pop
pop
or
sbb
add
add
es
inc
add
xor
add
pop
pop
push
add
add
jns
int
pop
mov
add
sub
add
es
mov
out
or
pop
and
insl
xor
mov
pop
inc
add
pop
scas
sub
cmc
mov
dec
add
add
xor
add
pop
fisttpll
scas
lds
push
pop
popf
push
inc
add
cs
xchg
pop
jle
mov
push
add
mov
in
incb
add
loop
daa
pop
xor
add
add
imul
mov
pop
fmull
add
add
add
sahf
incb
add
sub
int
nop
cmp
pop
dec
gs
push
add
pop
ret
pop
stos
popf
jo
add
pop
cmpsb
pop
mov
add
xchg
rcrb
pusha
add
mov
adc
rep
jmp
add
iret
add
add
mov
add
fimull
inc
pop
inc
add
test
pop
mov
pop
jmp
daa
andb
sbb
pop
jp
test
jp
decl
push
ret
dec
mov
push
mov
inc
arpl
mov
xor
add
jmp
in
push
push
jmp
push
pop
sti
and
pop
nop
jns
rcrb
int
js
lds
loope
inc
add
popa
add
mov
pop
cmp
sbb
test
jmp
add
jp
add
add
pop
iret
push
add
sbbl
insl
mov
add
mov
pop
adc
add
cli
pop
pop
mov
test
pop
dec
mov
cmp
addr16
sbb
gs
pop
adc
push
add
xor
add
jnp
add
sub
movsb
pop
xchg
mov
nop
inc
add
inc
pop
jb
add
xchg
xor
add
sbb
rcrl
dec
test
push
popl
add
push
add
je
push
add
pushf
rcrb
sub
sbb
mov
cmp
loop
or
std
cmc
inc
add
add
lods
cmp
add
add
adc
add
push
add
mov
pop
mov
lcall
imul
mov
push
lock
cwtl
push
xor
add
pop
xchg
das
xor
xlat
je
pop
test
mov
stos
sbbl
or
pop
xchg
dec
jmp
mov
enter
add
add
add
pop
and
add
or
mov
add
out
pop
mov
mov
gs
test
clc
ljmp
inc
pop
inc
add
and
add
pop
decl
jmp
in
mov
clc
sub
cltd
loope
jmp
and
add
mov
inc
add
pop
cmp
sbbl
add
rcrb
test
dec
or
jmp
pop
fadd
pop
sbbb
jno
add
pop
mov
movswl
jmp
inc
ljmp
add
mov
xchg
les
or
pop
fdivl
sbbb
add
ljmp
add
les
pop
pop
lds
add
inc
pop
push
pop
jg
in
mov
pop
xor
pop
sbbb
loopne
test
loopne
lds
xchg
pop
jmp
add
add
mov
add
sub
add
mov
pop
fdivr
jge
and
add
add
add
pop
jp
dec
rcrb
lcall
pop
loope
lea
add
pop
mov
clc
jbe
pop
mov
pop
mov
enter
mov
push
jb
add
pop
xor
fcompl
pop
push
add
int
icebp
les
pop
dec
inc
pop
jmp
pop
out
adc
gs
mull
adc
add
add
adc
add
pop
in
imul
lea
sbb
call
jmp
push
fs
lahf
cmp
add
xchg
and
es
or
add
jl
sub
ficompl
jns
add
sti
sub
xchg
xchg
mov
cmc
sub
sub
pop
or
add
mov
add
jmp
aaa
dec
mov
js
pop
add
add
sbb
add
inc
push
mov
daa
jne
add
lahf
ret
xchg
cmp
jno
add
pop
push
add
rcrb
nop
fidivrl
int3
fiaddl
add
pop
jns
icebp
dec
sbb
add
pop
cld
xor
add
js
add
insl
out
fxch
repz
pop
fidivrs
jmp
into
test
sbb
cmp
add
notb
mov
push
cld
fwait
xor
add
pop
nop
in
push
pop
popa
add
jo
add
pop
xchg
or
test
pop
int3
je
add
inc
add
ja
xchg
xor
dec
in
decb
bound
add
pop
fcmovbe
std
pop
sbb
sbb
pop
arpl
add
adc
add
pop
jbe
add
mov
fstpt
pop
hlt
mov
add
pop
mov
pop
rcrl
jb
add
push
push
add
mov
cmp
stos
cmp
sahf
mov
call
dec
inc
mov
mov
add
sbb
mov
add
lods
lret
mov
pop
push
add
jmp
outsl
pop
inc
xor
add
jge
push
mov
add
dec
jnp
aaa
fdivrs
push
pop
push
cmp
pop
shrb
pop
lcall
jmp
add
or
sub
or
jg
add
inc
pop
in
sub
pop
mov
sbb
jb
add
fs
pop
xor
sbbb
pop
push
pop
or
ficompl
cli
into
xor
xchg
ss
dec
fisttpll
push
add
push
hlt
cmp
add
push
push
ret
mov
jl
pop
repz
loope
cwtl
popa
add
stc
les
cmp
and
add
imul
or
mov
jle
or
adc
add
cmp
roll
sbb
fwait
hlt
xchg
lcall
lods
xchg
pop
rcrl
mov
pop
dec
xchg
push
xor
add
mov
sbb
push
push
mov
jmp
xchg
mov
add
pushf
test
sub
xchg
iret
call
push
ret
push
push
arpl
pop
addr16
scas
adc
add
mov
and
add
push
add
sub
test
js
pop
lods
leave
xlat
add
add
clc
jno
add
add
push
mov
pop
push
add
pop
lahf
inc
add
inc
jmp
lods
push
ret
push
arpl
or
pop
sub
fucomi
sbbl
pop
fistl
pop
push
mov
dec
inc
add
stc
in
lcall
add
add
add
dec
inc
add
xchg
sub
mov
jmp
sub
mov
cmp
pop
add
add
add
add
in
jmp
pop
scas
mov
into
js
out
xor
add
pop
push
pop
push
ret
ds
pop
sbb
mov
add
mov
jmp
aam
sti
push
test
nop
sbbl
jbe
push
and
sub
jno
add
add
adc
in
add
adc
cmp
mov
push
ret
adc
add
fcompl
fwait
lret
aad
jns
fs
aaa
xor
add
in
dec
sbb
sti
in
in
scas
fwait
pop
and
cmpsl
pop
incl
push
add
daa
dec
cmp
pop
aad
push
imul
jmp
arpl
sbb
arpl
cwtl
mov
in
call
add
add
arpl
add
sbbl
mov
js
pop
nop
jbe
jbe
pop
inc
pop
ljmp
pop
pushf
aaa
dec
dec
push
ljmp
pop
push
add
and
add
mov
ret
inc
add
mov
and
add
xchg
inc
add
shrb
roll
add
or
rcrl
xchg
pop
xchg
loopne
ljmp
push
ret
enter
in
mov
add
out
pop
pop
call
decb
xchg
aam
iret
xchg
pop
inc
add
pop
aaa
jns
in
iret
mov
pop
xor
add
pop
arpl
add
out
std
ret
pop
mov
mov
add
dec
in
mov
pop
daa
pop
call
sti
in
pop
cmp
rcrb
in
or
stc
and
add
jp
loope
dec
les
push
add
jmp
test
and
pop
add
add
adc
add
push
lahf
rcrl
add
jle
jmp
push
push
add
push
add
imul
stos
cmp
sbb
sbbl
pop
rorl
pop
jle
hlt
pop
inc
pop
scas
mov
fmuls
pop
popa
add
fs
add
add
pusha
add
jb
add
add
xchg
stos
cmpsb
pop
xor
or
lds
inc
add
jg
add
pop
or
pop
dec
sub
pop
and
sbbl
mov
lret
ljmp
pop
fcmovnbe
rcrl
add
jp
add
jecxz
dec
jae
add
sub
int3
and
add
rcl
mov
add
das
icebp
mov
cmp
add
aad
sub
lahf
sbbb
mov
add
pushf
cmp
shrl
or
adc
adc
lea
lret
ss
sbb
lcall
lods
daa
sbbb
and
sbb
mov
inc
pop
mov
pop
inc
add
enter
std
test
xchg
sbbb
pop
add
inc
pop
imul
pop
add
add
pop
or
add
add
sbb
add
stc
addr16
mov
arpl
add
mov
cli
scas
mov
pop
mov
incl
push
outsl
jl
stc
mov
add
add
nop
xor
or
mov
push
add
adc
add
add
stos
insl
xchg
mov
les
pop
push
dec
test
push
add
cmpsb
pop
aad
mov
pop
ret
pop
in
sbbb
pop
mov
add
lods
fistpll
test
pop
pop
inc
pop
jge
xor
cmp
gs
insl
lods
clc
popf
leave
das
push
jecxz
add
add
sub
cwtl
pop
add
arpl
arpl
and
add
mov
jnp
aad
add
add
sbbl
add
iret
dec
mov
adc
cmp
sbb
xchg
icebp
inc
add
aam
adcb
movsl
pop
test
add
jmp
pop
testb
add
rcrb
int3
adc
add
test
push
mov
jmp
arpl
push
or
pop
lds
add
fwait
inc
pop
mov
add
pop
xor
add
add
xor
add
stos
mov
inc
add
mov
mov
call
add
icebp
jnp
pop
xor
add
pop
jno
add
jbe
pop
fmuls
mov
add
xchg
idivb
mov
pop
and
add
add
add
pop
rcll
add
xchg
aas
movsl
pop
dec
sub
pop
aam
add
cltd
dec
mov
and
add
mov
pop
mov
test
pusha
add
mov
loop
mov
add
pop
ljmp
add
dec
adc
add
adc
pop
push
xor
xor
add
pop
ja
icebp
pop
sbb
lods
ja
add
or
mov
add
jmp
lods
xor
add
addr16
sbbl
add
jmp
mov
dec
xchg
xlat
scas
int
ud0
in
mov
add
add
ss
inc
add
ficomps
pop
shrl
mov
sbb
add
int3
stos
push
add
jo
add
pop
fstpt
add
test
lahf
loop
mov
enter
add
jmp
pop
sub
pusha
add
cli
jl
add
sbbb
out
aam
add
push
pop
mov
pop
or
lods
add
add
pop
inc
add
in
sbb
add
pop
mov
add
popf
push
dec
iret
daa
pop
mov
add
fs
pop
add
pop
pusha
add
dec
inc
add
pop
aas
sahf
fmull
in
inc
add
sbbb
pop
sbbl
mov
add
cmp
mov
pop
out
clc
loope
push
add
ror
dec
jecxz
adc
add
inc
add
imul
cs
pushf
repnz
int
pop
ds
adc
add
lds
xchg
adc
and
test
push
pop
push
add
mov
cmp
clc
adc
add
pop
and
add
in
push
dec
cmp
add
insb
pop
push
call
jmp
xor
pop
push
pop
call
test
add
add
add
arpl
add
decl
cmpsl
ljmp
xor
leave
mov
push
pop
mov
add
dec
pop
stos
sbbb
xchg
popa
add
cs
outsb
gs
mov
shll
add
mov
cmpsb
xlat
lcall
or
pop
testl
xor
add
out
lea
movsb
pop
fwait
popa
add
loope
jg
lret
jbe
sbbb
xchg
or
mov
shl
sbbb
pop
rcrl
fnstcw
jmp
repz
subl
ret
fsubrs
mov
jne
pop
jmp
rcrl
pop
dec
add
push
fs
fs
insl
les
pop
xchg
fiaddl
add
add
adc
add
add
pop
xor
add
push
pop
stos
pop
insl
rolb
add
aam
fldl
add
sbbb
pop
fs
sbb
pop
cmpsb
pop
shlb
add
rcr
sbb
adc
add
pop
int
inc
pop
call
bound
add
jle
add
ds
pop
mov
and
add
pop
or
cli
rcr
dec
imul
add
add
movsb
pop
mov
push
add
sub
mov
fidivrs
lret
sbbl
ss
pop
in
stos
fwait
xor
add
mov
dec
cmc
dec
out
mov
add
mov
add
and
add
pop
cmp
pop
mov
add
mov
pushl
push
ret
cmc
inc
jp
mov
add
pop
sub
add
sub
lock
add
pop
mov
adc
add
lahf
push
add
ret
pop
cmpsl
pop
mov
add
in
adc
add
sub
pop
in
xchg
adc
add
and
add
mov
jge
fadds
test
add
xchg
jmp
jp
arpl
cmp
add
mov
into
push
pop
in
xchg
int
push
add
ret
pop
lods
mov
cwtl
jecxz
repnz
sub
add
std
scas
cmpsl
pop
mov
ds
mov
push
add
clc
aas
and
add
mov
inc
add
dec
add
add
pop
xchg
push
int
xor
add
add
dec
in
idivl
pop
gs
shlb
pop
mov
lret
pop
xchg
add
in
aaa
sbbb
inc
add
xchg
dec
sub
add
xchg
add
add
add
lea
jmp
fistps
pop
jmp
and
add
add
dec
pop
adc
add
stos
in
sbbl
pop
lods
jge
rcrl
out
mov
add
pop
sbb
test
arpl
sbb
rcrb
xchg
test
imull
add
add
jno
add
add
mov
push
jmp
sub
arpl
daa
jle
push
pop
add
add
adc
add
pop
cwtl
mov
pop
js
dec
movsl
pop
sbbb
in
das
xor
add
add
jge
dec
xchg
mov
pusha
add
mov
repz
ljmp
daa
xor
jecxz
xchg
les
pop
pop
cmp
loop
xchg
sub
and
add
pop
lods
lea
add
pop
dec
mov
add
adc
push
xchg
inc
pop
enter
mov
pop
mov
sub
jecxz
add
arpl
add
pop
cmp
mov
xchg
enter
gs
dec
or
insl
outsb
mov
cmc
rcrl
cli
aad
pusha
add
sbbb
pop
fnstenv
pop
inc
pop
cmp
pop
cltd
arpl
add
or
in
dec
sbb
jl
mov
sub
add
adc
std
mov
pop
in
mov
pop
xor
add
pop
test
sahf
mov
mov
mov
add
sub
arpl
test
pop
mov
add
leave
repnz
icebp
rep
cmpsb
pop
mov
aad
std
push
movsb
pop
jg
out
mov
scas
js
js
pop
cmpsl
pop
xchg
lcall
pop
push
sti
dec
and
test
std
cmp
pop
mov
pop
jge
nopl
add
sbbb
in
inc
add
outsb
lock
pop
popa
add
jnp
popf
lahf
xchg
push
cmp
pop
int
repz
pop
sarb
lock
add
lods
inc
add
ffreep
pop
sbb
imul
add
mov
add
pop
imul
pop
and
add
add
add
jnp
fsub
pop
mov
jno
add
les
mov
add
loope
mov
jno
add
pop
mov
jb
add
adc
add
out
cs
and
add
insb
imul
mov
clc
fsub
pop
les
pop
sbb
add
add
insb
mov
pop
or
jnp
ljmp
add
add
ljmp
add
incl
or
add
jp
insb
or
sub
pop
add
xor
add
add
push
clc
outsb
pop
pop
loopne
adc
add
dec
ja
shl
pop
daa
pop
push
add
fisttpll
dec
xchg
negl
add
rcrb
add
test
and
push
or
pop
pop
outsb
in
mov
jecxz
mov
inc
pop
sbbl
ljmp
add
roll
outsb
aad
and
add
js
icebp
popf
fbstp
add
dec
sar
mov
divl
out
repnz
cltd
gs
adc
add
pop
decl
add
xchg
sub
push
arpl
add
cmp
pop
aad
decl
mov
mov
or
add
add
add
pop
fsubp
pop
dec
enter
pop
mov
sub
sub
pop
xchg
das
xchg
rclb
add
dec
fcoms
and
add
nop
lret
add
fs
std
mov
pop
dec
pop
mov
add
add
cmpsl
pop
jle
push
push
inc
add
lods
pop
into
adc
pusha
add
mov
sub
pop
push
aam
add
mov
add
je
pop
fisubrl
add
adc
add
sbbb
push
add
pop
lcall
pop
js
add
sbb
les
daa
arpl
push
xor
int
mov
pop
cmp
pop
in
leave
jne
sahf
pop
insb
fstl
addb
add
pop
mov
dec
mov
in
pop
add
add
push
add
xor
add
cmp
jmp
inc
pop
inc
add
iret
jbe
mov
add
add
add
icebp
cmpsb
pop
xchg
ljmp
cli
dec
in
inc
pop
movsl
pop
push
add
ret
pop
mov
pop
push
pop
fs
pop
notb
call
pop
divb
mulb
add
imul
add
int3
pop
mov
add
fcoms
out
hlt
mov
pop
adc
sbb
pop
xor
add
mov
jmp
fs
fs
aas
push
fstpt
lock
or
add
outsb
test
nop
jno
add
out
xchg
xor
insl
pop
and
add
add
push
add
jp
aad
pop
jge
push
pop
sbb
jmp
add
jl
add
xchg
jae
add
ja
mov
pop
sub
add
add
lds
in
hlt
jae
add
push
add
mov
sbb
jmp
jne
arpl
cmpsl
sub
jp
add
add
xchg
out
stos
sbb
jno
add
add
dec
test
mov
adc
add
xchg
pop
mov
cmp
add
push
add
dec
xor
add
pop
dec
mov
dec
mov
cmp
pop
or
add
add
fwait
lret
or
dec
cmp
or
mov
xor
add
pop
outsl
sbb
pop
test
repz
enter
pop
dec
pop
pop
hlt
or
add
cmp
mov
scas
and
add
mov
mov
add
and
add
sub
mov
add
ret
test
jmp
dec
push
arpl
dec
jnp
inc
pop
xor
pop
inc
pop
mov
add
movsb
pop
push
fmuls
pop
rcrl
add
add
icebp
push
add
movsb
pop
pushf
mov
clc
jle
iret
inc
add
icebp
icebp
and
add
ja
pop
jg
jnp
sbbb
push
scas
cmovs
push
in
ds
add
add
iret
fs
movsl
pop
xlat
mov
pop
std
adc
add
dec
cmp
clc
xor
add
pop
hlt
cwtl
or
add
dec
ja
add
cmp
pop
pop
pop
fisubl
add
ret
pop
daa
pop
in
and
add
pop
ret
imul
push
jmp
arpl
xor
push
cmp
pop
mov
sub
lds
add
add
mov
jbe
cmp
rorl
xlat
lods
xchg
out
xchg
lret
ret
add
icebp
int
sub
push
add
pop
in
pop
cmpsl
pop
push
out
sbbb
add
inc
pop
inc
pop
mov
add
xor
add
cmp
das
test
sub
xchg
and
add
sbb
je
outsl
jg
push
add
fdiv
mov
fimuls
inc
add
add
add
mov
shr
call
sbb
sbb
movsb
pop
ja
out
ja
jne
pop
pushf
jp
push
add
leave
adc
scas
xchg
dec
jp
push
add
sub
inc
pop
push
dec
jmp
ret
test
arpl
or
and
pop
xchg
pop
ss
adc
add
pop
out
les
int3
lret
std
xor
add
pop
scas
mov
pop
inc
add
repnz
add
inc
add
repz
and
add
add
jge
jg
pop
ficoml
adc
add
add
mov
decl
dec
xchg
ret
arpl
enter
mov
dec
dec
push
pop
ja
add
lret
mov
inc
pop
and
add
add
push
add
pop
pop
jmp
sbb
inc
add
pop
xchg
arpl
insb
dec
add
add
dec
and
add
jl
add
and
pop
add
add
adc
pop
jle
pop
adc
add
sbb
pop
fcoms
pop
mov
cmpsb
pop
rorl
pop
aaa
pop
push
add
jecxz
add
add
mov
add
loope
xchg
adc
add
add
dec
add
add
pop
mov
pop
outsl
gs
jns
pop
cwtl
fsts
add
xchg
inc
add
mov
cmp
pop
ljmp
filds
fs
add
add
lods
daa
pop
stos
jb
add
out
jp
pop
imul
fsts
icebp
imul
add
hlt
shll
adc
add
and
add
mov
rcrl
ds
push
mov
ja
push
pop
gs
and
mov
call
dec
push
iret
fisttps
rorl
cli
out
mov
fsubl
add
pop
mov
es
fdivrs
cmp
imul
pop
xchg
fstpl
add
xchg
sbb
inc
insb
insb
jmp
arpl
ljmp
add
sbb
mov
pushf
sub
out
les
sbb
shrl
add
ljmp
pop
and
add
out
cltd
clc
jmp
add
mov
mov
pop
sbb
and
add
sbb
clc
mov
pop
jnp
push
mov
pop
es
add
add
sbbb
add
mov
add
outsl
inc
outsl
out
pop
jne
mov
mov
mov
add
pop
push
pop
call
loopne
mov
addr16
mov
add
sbb
stos
popa
add
mov
idivl
and
pop
idivl
or
sbbb
pop
stos
ret
pop
mov
push
dec
add
add
add
add
add
jl
push
mov
push
ret
mov
sbb
pop
aaa
cmp
rcl
push
sbb
call
bound
add
xor
add
sbbb
mov
jmp
xlat
repz
xchg
fstpt
daa
pop
add
add
daa
pop
repnz
call
mov
add
mov
arpl
push
add
outsl
das
int3
pop
dec
rcrl
sbb
pop
inc
add
jp
pop
hlt
test
add
add
add
scas
sahf
rorl
pop
dec
push
dec
loop
rcrl
xchg
enter
or
cmpsb
pop
ljmp
or
add
lea
add
pop
or
pop
dec
dec
jbe
add
mov
add
and
out
ficoml
add
mov
mov
xor
add
rorl
mov
pop
or
fistpll
push
add
add
iret
scas
incl
add
and
sub
mov
nop
dec
sbb
mov
pop
pushf
pop
inc
pop
pop
test
mov
int
pop
sbbl
jmp
push
xchg
push
cmpsl
or
adc
mov
rcrl
fwait
lahf
sbb
xchg
or
cld
add
add
adc
sub
adc
and
jmp
sti
push
fildll
add
sahf
inc
pop
in
xor
pop
movsb
pop
pop
mov
inc
add
xchg
stc
mov
fstpt
add
test
cld
mov
add
in
xchg
xor
xchg
test
sbb
call
jmp
dec
push
push
stc
enter
add
add
add
sbb
pop
fsubs
add
arpl
add
add
adc
add
insb
xlat
mov
arpl
add
jge
pop
xchg
and
adc
add
insb
pop
out
ret
pop
mov
sub
out
imul
jmp
xor
push
loope
insl
in
inc
pop
ja
sahf
cmp
jnp
mov
lds
nop
xchg
addr16
jle
pop
outsl
je
add
xchg
arpl
add
es
adc
mov
add
outsl
jno
add
add
cmp
add
add
mov
test
dec
jmp
add
ret
pop
push
push
jmp
fs
sub
lods
mov
bound
add
in
mov
or
enter
ret
add
jb
add
les
mov
repnz
pop
cld
and
add
shl
pop
push
add
rolb
pop
xlat
out
xchg
je
mov
push
add
or
sub
jg
pop
cltd
cmpsb
pop
sub
xchg
mov
jle
movl
xchg
outsb
in
mov
sub
jmp
arpl
cmp
add
mov
sbb
out
insl
jmp
inc
dec
xchg
rcrl
jmp
mov
pop
lds
add
sbbb
imul
add
ret
add
faddp
pop
rcrb
push
add
cmc
adc
add
loope
jmp
arpl
arpl
pop
stos
adc
add
pop
gs
stos
jb
add
add
mov
jmp
arpl
inc
add
insb
jmp
in
fcomps
and
add
shlb
clc
fsubrp
push
icebp
aam
sub
out
cli
outsb
mov
dec
iret
hlt
hlt
insl
jb
add
pop
push
pop
jmp
ret
arpl
xor
push
int
das
jmp
insl
dec
dec
cmp
pop
jmp
pusha
add
lret
ret
adc
gs
xchg
rorb
ficoml
add
scas
mov
mov
xchg
mov
pop
sbbb
cmp
add
mov
fldt
xor
jmp
outsl
test
fs
inc
pop
adc
add
ss
add
xchg
lahf
shlb
add
sbb
push
ret
push
dec
loopne
mov
dec
mov
sbbl
sub
sbb
mov
pop
xor
add
jmp
mov
pop
pop
dec
pop
loop
mov
adc
add
add
pop
fcoms
pop
xchg
pop
sbb
fbld
test
imul
pop
cmp
lcall
pop
push
xchg
pop
push
add
in
push
jle
add
pop
push
pop
divb
pop
sti
lock
dec
gs
fs
xchg
in
inc
pop
sbb
lret
jmp
dec
gs
lods
insl
mov
in
mov
dec
outsl
in
mov
dec
dec
mov
lahf
mov
dec
cmp
test
pop
mov
repz
add
sub
add
add
xlat
std
test
xchg
jne
cltd
lods
cs
add
mov
es
fnsave
loope
adc
add
js
int3
lret
rcll
add
test
add
fiadds
movntq
les
mov
pop
cltd
sub
sbb
dec
pop
add
pop
out
mov
cwtl
sbb
fnsave
add
pop
mov
add
add
add
vmwrite
push
add
inc
add
mov
lods
sbb
jmp
add
rolb
add
fs
lods
mov
hlt
or
lock
mov
inc
add
std
jl
int3
xchg
cmp
cmp
test
rcrl
pop
pop
leave
xor
add
and
add
out
inc
add
shr
cmpsl
pop
sti
jp
add
out
sbb
or
add
lods
dec
pop
stos
add
add
sbbb
add
lcall
sti
into
ds
adc
xchg
mov
mov
rcrl
pushf
sbbb
add
mov
add
rcll
add
pop
sbbb
popf
ret
in
inc
pop
lods
decl
test
jmp
fs
mov
add
add
and
add
imul
add
ror
dec
adc
stos
rcrl
xor
add
shll
mov
push
cs
xor
add
sbb
jmp
in
ss
dec
out
sub
mov
lcall
pop
dec
inc
add
fsubs
adc
add
fxtract
cmp
add
pop
push
add
call
insb
or
icebp
add
add
add
mov
add
jno
add
add
decl
cmp
add
and
pop
xor
add
jg
pop
test
pop
out
add
add
cs
jecxz
pop
cmp
add
pusha
add
mov
stc
in
addr16
sahf
and
add
dec
cmpsb
pop
call
pop
in
push
dec
pop
cltd
add
add
fs
mov
cmp
and
add
lret
xchg
pushf
ret
pop
dec
insl
dec
add
add
push
pop
int
pushl
xchg
cmp
std
xchg
mov
sub
mov
leave
push
ret
dec
or
fildll
sbb
daa
pop
rcrb
mov
pop
sub
pushf
jecxz
int
add
xlat
aad
rcrb
add
jo
add
add
inc
pop
insb
sub
rcr
scas
fldenv
sbb
mov
push
jmp
arpl
pop
xchg
cmpsl
pop
sarl
cmp
nop
mov
pop
mov
push
insl
call
fcmovnbe
sbbb
adc
jl
add
into
add
sbb
add
addr16
imul
add
add
jne
xor
call
in
cmp
add
aad
add
cmpsl
pop
sahf
xchg
outsl
adc
fwait
lock
add
pop
adc
add
cld
aaa
iret
sbbl
add
sub
cmovb
add
pop
loope
fwait
popa
add
push
jl
and
cmpsb
pop
inc
pop
je
insl
xchg
jo
add
mov
fs
cmp
add
cmpsl
pop
and
add
add
dec
xchg
sbb
inc
pop
xchg
inc
pop
jg
mov
xor
pop
ret
pop
pop
inc
add
mov
xor
add
add
in
jno
add
inc
add
aad
sub
add
add
and
add
pop
fnstsw
es
iret
jo
add
imul
lcall
pop
jbe
das
ffree
pop
insl
lea
adc
sbb
push
sub
add
mov
mov
cmp
pop
mov
pop
sub
dec
or
pop
outsb
addr16
aam
jecxz
pop
or
ret
add
pop
cmc
mov
testb
jno
add
pop
pop
dec
mov
pop
inc
pop
out
les
push
and
add
adc
hlt
fists
jg
sub
ret
loope
push
and
mov
cmp
cltd
sub
mov
inc
inc
add
cs
jmp
enter
mov
add
push
add
adc
add
add
add
pop
xchg
icebp
mov
daa
pop
pop
mov
jmp
add
and
add
pop
dec
inc
pop
je
pop
mov
add
add
mov
or
xchg
push
clc
mov
inc
add
faddl
mov
lret
mov
lcall
in
pop
lahf
xchg
sarb
ds
add
xor
add
outsb
jae
add
shlb
pop
and
sub
mov
pop
xor
add
add
jecxz
scas
push
mov
test
jle
pop
cvttps2pi
pop
in
jecxz
xchg
out
ret
pop
add
add
aaa
sbb
mov
add
xchg
iret
repz
add
inc
pop
loope
sbb
sub
sbb
shl
lea
notl
add
xchg
call
jb
add
jbe
negb
stos
and
add
mov
add
cwtl
push
in
test
and
push
dec
outsl
inc
pop
push
pop
jmp
add
pop
push
add
and
add
jno
add
pop
mov
pop
or
popa
add
sub
rcr
add
add
sbb
jb
incl
arpl
pop
push
add
cmc
jne
stos
insl
and
add
incb
add
aaa
xor
add
mov
pop
pop
and
add
jno
add
add
pop
pop
lock
add
add
sbbl
add
lcall
xor
mov
push
mov
nop
aam
add
and
int3
pop
sbb
mov
jmp
jmp
add
mov
push
idiv
push
jmp
sub
or
sub
jmp
add
add
pop
ja
xchg
sub
push
add
mov
inc
add
jne
jo
add
addr16
xchg
and
add
add
mov
call
sbb
das
cmc
jne
fnstenv
and
add
cmpsb
pop
fs
lea
mov
push
mov
sub
xchg
sbb
aad
mov
push
add
pop
adc
add
add
roll
add
jecxz
xor
add
mov
push
outsl
mov
pop
xor
add
adc
add
add
repz
mov
or
add
out
aam
jne
js
add
jp
add
lret
fdivrl
cld
cmpsb
pop
insb
out
movsl
pop
lea
add
dec
cmp
sbb
add
xor
push
xchg
scas
push
scas
out
inc
add
lret
inc
pop
adc
add
jle
dec
mov
xchg
mov
add
add
je
jmp
add
mov
into
aaa
in
push
add
je
pop
add
add
rcrl
cmp
test
lds
or
scas
sub
imul
mov
xchg
dec
mov
xchg
ret
pop
loop
mov
add
and
add
cmp
cmc
fwait
xchg
push
add
dec
fcmovu
pop
outsl
pop
movsl
pop
mov
pop
loope
test
stos
jmp
push
test
and
mov
or
jmp
push
sbb
push
testb
inc
add
or
repz
hlt
sbbl
pop
addr16
gs
pop
or
mov
add
jg
cmpsl
pop
test
add
cmp
push
mov
add
inc
pop
nop
add
add
cld
js
into
es
mov
ret
pop
js
pop
mov
or
add
je
add
dec
add
add
jb
mov
inc
add
push
outsb
pop
and
aaa
idivl
movsl
pop
sub
test
xor
add
movsl
pop
leave
iret
nop
pop
sub
stos
ss
rcrb
sbb
jmp
inc
arpl
add
loop
and
add
fimull
dec
fwait
or
mov
xchg
jl
rcrb
arpl
add
xchg
repnz
popf
xchg
cmp
jne
jmp
fs
add
push
mov
lcall
arpl
add
sbb
add
jp
movsl
pop
mov
sub
pop
push
push
add
dec
stc
testb
or
lds
enter
xchg
mov
add
xor
add
pop
aaa
test
add
aaa
mov
ret
xor
jmp
loop
daa
pop
ss
mov
pop
inc
pop
mov
pop
jne
nop
adc
pop
mov
mov
je
add
sbb
add
xchg
loopne
mov
pushf
mov
sub
push
push
in
sahf
daa
pop
gs
in
push
add
mov
mov
int3
cltd
outsl
pop
add
xor
or
push
and
add
or
pop
jl
out
gs
sub
mov
add
add
add
mov
sub
xor
add
jno
add
clc
mov
pop
int3
mov
pop
mov
add
pusha
add
or
mov
dec
ret
xchg
and
add
pop
add
imul
dec
inc
add
mov
out
shr
testb
jno
add
cld
or
push
add
add
insl
or
clc
adc
add
imul
lret
jge
stos
and
push
pusha
add
xchg
pop
push
mov
lock
mov
dec
stos
lcall
add
add
add
pop
inc
pop
xor
mov
jl
pushf
sub
jo
add
push
jmp
arpl
xchg
add
mov
cmp
cli
lds
push
lods
pop
or
add
add
push
add
das
testb
lahf
sbbb
hlt
loop
dec
adc
add
push
add
jmp
cmc
sbbb
and
add
pop
push
add
sbb
iret
or
call
cmp
add
out
jns
cs
xlat
jae
add
add
arpl
add
sbb
fwait
icebp
sub
sbb
inc
add
inc
arpl
mov
fcoms
pop
push
int3
ja
add
or
add
mov
or
loopne
cmc
add
add
mov
ret
pop
jle
fucomip
and
add
mov
sbbb
add
idivb
out
out
pusha
add
dec
or
jbe
cmc
call
add
add
lcall
dec
xchg
lock
add
pop
in
mov
add
insb
lods
aam
lds
add
push
pop
jl
pop
repz
xchg
xchg
xor
add
mov
mov
add
jmp
dec
mov
test
pop
jbe
adc
add
mov
pop
pop
sahf
ret
lret
add
pop
mov
push
movsl
pop
mov
inc
add
or
aam
movsl
pop
adc
add
add
sbb
dec
mov
add
stos
dec
fldt
pop
pop
les
fidivl
xor
pop
and
add
add
sbb
pop
ret
sbbb
jle
testl
jmp
fbld
push
in
xor
add
add
mov
push
add
sub
popa
add
pop
sub
add
add
add
lea
add
adc
add
add
clc
sbb
shl
jmp
pop
add
add
and
test
leave
test
add
test
xor
cld
xchg
lds
into
iret
cmpsl
pop
lods
xchg
inc
add
cld
fs
mov
add
out
pop
loopne
xchg
pop
aaa
decl
call
flds
je
es
aad
cmpsb
pop
jmp
mov
pop
mov
scas
fcomi
adc
add
mov
jmp
arpl
pop
xchg
jl
push
sbbl
sub
add
dec
sub
pop
push
call
in
lds
dec
xchg
cmpsl
pop
sbb
pop
loop
pop
pop
inc
pop
stos
or
add
dec
testb
adc
add
sub
mov
pop
loope
mov
add
pop
jno
add
in
mov
mov
add
add
fsts
add
gs
mov
shrb
add
lock
mov
add
fsubr
cmp
pop
sbb
rclb
add
pop
shl
loopne
popa
add
stos
ret
pop
xor
add
inc
pop
rcrb
xchg
ljmp
shll
add
xchg
popa
add
decb
jecxz
in
pop
loope
mov
add
add
add
and
add
mov
pop
fnstenv
push
add
jmp
loop
pop
pop
sbb
sbbb
xchg
addr16
sbb
cmpsl
pop
inc
add
mov
sub
pop
cmpsl
pop
and
add
int
aam
cmp
cltd
icebp
sbbb
sub
add
xchg
cmc
adc
pop
pop
mov
mov
mov
dec
xor
add
add
xor
xchg
neg
enter
and
add
pop
inc
add
xchg
icebp
jmp
not
jmp
arpl
pop
rcrl
push
jmp
jp
arpl
arpl
cli
mov
pushf
mov
movsb
jmp
mov
aas
xchg
add
sub
add
jmp
movsl
pop
inc
add
mov
or
lret
jo
add
enter
test
pop
jb
add
pop
or
pop
sbb
rcr
pop
mov
add
sbbb
movsb
pop
xchg
loopne
add
add
add
xor
add
dec
inc
add
jmp
pop
jl
add
clc
xor
xchg
and
js
cltd
jns
pop
jo
add
loope
inc
add
mov
add
cmp
pop
loop
xor
xor
add
pushl
shr
sub
add
xor
arpl
xchg
mov
pop
push
inc
add
inc
push
jne
jp
mov
testb
xor
add
pop
jb
add
adc
mov
add
js
pop
sbbb
push
jmp
arpl
arpl
xchg
sarb
add
push
add
add
pop
lods
pop
inc
add
les
xchg
pop
cwtl
push
add
jmp
arpl
add
test
xor
sub
fs
enter
add
add
sbb
call
add
je
sub
pop
shll
add
push
outsb
decl
repnz
lcall
dec
arpl
sub
add
nop
mov
cmp
arpl
popf
lret
sbb
dec
pop
sbb
pop
cltd
idivb
add
add
les
cmp
repnz
lcall
shl
sub
pop
stc
sub
cmp
pop
sub
movsb
pop
mov
pop
test
adc
add
pop
into
fs
jp
adc
popf
or
inc
pop
cltd
jae
add
mov
add
jmp
daa
dec
pop
arpl
pop
fs
mov
shl
cmp
pop
pop
jb
add
add
dec
leave
sub
pushf
ss
sub
add
fsts
cmpsb
pop
leave
mov
pop
push
push
mov
inc
data16
fbld
add
and
add
add
pusha
add
imul
fiadds
dec
mov
pop
into
cmp
jne
add
xor
pop
fs
sbbl
je
fstpt
cmc
pop
mov
mov
mov
jmp
xchg
into
add
fs
fwait
aas
in
cmp
stc
mov
stc
adc
add
add
imul
pop
inc
pop
je
pop
ljmp
add
repnz
push
add
lahf
fwait
pushf
jmp
jl
outsl
pop
pop
hlt
jb
add
pop
rcrb
xor
add
hlt
pop
movsb
pop
mov
pop
movsb
pop
shlb
add
js
std
mov
fildll
adc
add
add
mov
in
mov
jnp
jb
add
add
sub
sbb
pop
dec
push
add
insl
pushf
adc
enter
pop
pop
shlb
aaa
inc
add
daa
pop
mov
decl
mov
adc
inc
lret
mov
rcl
dec
add
add
fcmovnb
pop
xlat
jo
add
add
mov
int
jno
add
sti
fs
es
int
das
rcrl
or
cwtl
leave
hlt
ljmp
popa
add
mov
jns
push
add
es
das
jbe
pop
mov
push
out
fcomps
xlat
int3
outsl
push
add
dec
aam
dec
in
dec
xor
add
push
ret
ret
addb
loope
enter
pop
movsl
pop
lock
pop
inc
add
jb
add
mov
xchg
hlt
loop
icebp
and
add
lds
add
in
lret
pusha
add
movsb
pop
hlt
aad
lcall
rcrl
pop
in
xchg
lret
das
pop
push
or
aad
cltd
das
sbbb
sbb
xor
add
int
sbb
adc
add
xor
add
cmc
fwait
dec
fs
mov
rolb
add
jmp
dec
out
push
sahf
fmulp
cltd
jle
push
pop
add
add
sbbb
movzwl
jmp
push
mov
dec
dec
jg
loopne
mov
add
xlat
lods
inc
add
push
pop
lahf
or
pop
xchg
add
lods
xor
pop
pop
and
add
xchg
mov
pop
les
sbb
aaa
dec
fwait
stos
sbbb
pop
inc
add
and
add
mov
mov
pop
xchg
or
out
mov
push
mov
repz
into
add
movsb
pop
dec
es
sbbb
leave
fsubrl
add
add
mov
test
xchg
dec
lock
or
add
ffree
pop
push
add
jge
pop
pop
inc
pop
les
add
ja
test
scas
push
xor
add
push
add
xlat
xchg
lods
or
pop
and
add
repz
ror
sbb
inc
add
call
bound
add
mov
arpl
add
mov
call
add
mov
or
push
mov
pop
sbb
xlat
xchg
jae,pt
add
pop
sub
xchg
fs
mov
fcompl
pop
xor
lods
sub
pop
xchg
in
or
outsb
push
inc
add
and
add
add
sbb
cmp
xchg
idivl
push
jno
add
jo
add
insl
cld
lahf
lea
clc
cmpsl
pop
mov
pop
mov
dec
xchg
add
mov
pop
jp
int
mov
or
imul
dec
add
pop
push
pop
mov
icebp
bound
add
add
mov
mov
add
add
pushf
or
roll
add
xor
lock
into
or
add
sub
ret
add
in
and
add
pop
mov
dec
add
add
pop
mov
pop
inc
add
xchg
fisubrs
pop
loopne
fcmovb
pop
inc
pop
in
pop
pop
mov
hlt
lds
add
inc
add
sbb
pop
mov
jo
add
mov
test
pop
xor
add
insl
add
add
pop
std
movsb
pop
icebp
lods
shll
add
mov
pusha
add
lods
lcall
add
push
gs
adc
add
add
mov
jns
push
push
jmp
out
pop
test
push
add
pop
popa
add
dec
inc
pop
iret
dec
out
mov
adc
ror
mov
jno
add
repnz
mov
add
sbbl
add
add
cmpsl
pop
dec
movsl
pop
add
loope
outsb
jge
pop
lahf
mov
mov
add
fsub
pop
cmpsl
pop
js
add
jmp
xor
sub
pop
inc
add
jb
add
add
inc
pop
arpl
add
sarb
add
xor
add
adc
jnp
pop
push
dec
insb
std
lds
dec
mov
jg
pop
pushf
ljmp
dec
cmc
int3
ja
in
cli
cmp
pop
out
inc
add
mov
pop
rorb
mov
cmpsb
pop
mov
dec
sbb
mov
push
add
adc
pop
fdivp
mov
and
add
push
mov
out
add
mov
jecxz
add
dec
cmp
add
jmp
xor
and
add
add
pop
js
pop
mulb
nop
scas
push
add
clc
jne
test
mov
sub
add
ja
add
mov
pop
loop
adc
sar
clc
mov
push
cmovae
add
lret
shl
or
dec
aam
xchg
in
push
icebp
add
add
lods
loope
lods
add
add
jge
cmp
sub
add
mov
popa
add
sahf
daa
pop
cmpsb
pop
mov
imul
adc
add
pop
outsl
mov
push
cmp
insb
xor
add
dec
aad
pop
sub
rorb
mov
push
add
pop
adc
add
and
add
adc
add
int
and
test
cwtl
fwait
push
add
ret
pop
add
add
lret
hlt
sti
out
repz
std
jge
mov
jmp
dec
add
xchg
sti
cmp
add
push
add
aaa
movsl
pop
enter
jns
cmp
pop
je
lahf
push
add
add
jmp
add
jbe
mov
shr
jmp
push
mov
outsl
mov
mov
popa
add
rolb
aas
ljmp
and
add
pop
in
sbbb
pop
and
add
dec
mov
mov
push
mov
incl
jo
jmp
arpl
add
in
arpl
add
pop
and
add
pop
jae
add
jbe
or
push
add
les
inc
add
int
mov
cmc
jmp
sbb
pop
cmp
pop
xor
add
xor
add
pop
fldl
cs
sbb
inc
pop
lahf
iret
dec
xor
add
push
les
mov
sub
pop
popf
pop
call
jle
rcr
push
inc
add
jp
lods
arpl
add
sarl
add
pop
push
sbbb
pop
pop
es
sub
mov
pop
pop
xchg
aas
jecxz
mov
pop
inc
add
int3
stos
imul
dec
jmp
dec
jl
xchg
jmp
sbb
jp
and
push
add
fld
sbb
pop
mov
add
add
add
pop
mov
cltd
mov
pop
lcall
or
mov
ds
fs
add
xor
pop
add
add
push
add
mov
push
icebp
jle
into
push
popa
add
xchg
push
add
incb
add
and
add
add
and
add
mov
pop
in
sbb
rcrb
add
or
sbb
or
jmp
pop
or
or
arpl
add
xor
sbb
add
pop
xchg
in
loopne
pop
mov
add
mov
pop
lods
negl
out
xlat
nop
mov
cwtl
sbb
jg
jmp
pushf
inc
outsl
xchg
fists
add
insl
sti
out
mov
lods
jmp
arpl
insb
fcomps
add
pop
dec
inc
pop
repz
pushf
push
imul
cmpsb
pop
rcrb
insb
xor
add
nop
stos
popf
nop
int
pop
mov
pop
xchg
push
pop
aad
mov
add
out
call
mov
test
xchg
cmp
pop
push
pop
xchg
sbbl
rcl
pop
dec
fidivrs
jno
add
movsb
pop
push
pop
into
inc
pop
ljmp
loope
pop
nop
xchg
lcall
mov
add
stos
int
pop
push
add
mov
dec
mov
addr16
sub
add
in
ja
test
add
je
pop
rol
pop
bound
add
add
cmp
add
pop
daa
pop
xchg
mov
sub
push
add
rcrl
xor
jmp
push
mov
add
popf
mov
pop
call
sub
jmp
push
push
or
sbb
pop
insl
sahf
pop
adc
add
cli
fcomi
sbb
mov
jne
sbbb
add
aam
arpl
add
add
pop
jge
pop
cmp
add
add
push
jmp
dec
push
cmc
arpl
mov
pop
sbbl
cmp
dec
sbb
shll
add
mov
test
add
add
jno
add
pop
inc
add
xor
leave
mov
push
icebp
jo
add
lcall
pop
pop
imul
pop
mov
lods
adc
add
xchg
pop
mov
add
add
jge
gs
sub
aas
scas
and
add
fs
ljmp
add
mov
test
jnp
mov
add
or
jb
add
jns
xchg
arpl
add
push
dec
bound
add
pop
jmp
in
pop
dec
stos
mov
test
in
cmp
add
add
cmp
pop
lock
pop
rcrl
mov
add
test
push
add
add
add
or
sbb
dec
dec
and
pop
or
or
enter
insl
push
pop
mov
jbe
pop
outsb
push
add
mov
pop
cmp
add
imull
jl
cmp
xor
add
sahf
std
dec
aad
pop
and
add
push
dec
mov
call
jp
pop
xor
les
pop
jmp
pop
into
push
sahf
dec
adc
add
pop
iret
xchg
ret
add
xor
mov
outsl
inc
add
cwtl
push
add
xor
add
out
cmp
add
lahf
ss
push
sbb
adc
add
pop
jno
add
pop
pop
ja
xor
add
pop
mov
and
add
add
popa
add
pop
pop
xor
add
push
mov
pop
mov
mov
add
pop
in
lret
pop
xchg
std
shll
rcrb
fstp
lods
imul
mov
push
add
sbb
sbb
out
inc
pop
sti
dec
cwtl
jnp
jmp
sbbb
pop
mov
pop
mov
or
adc
dec
push
sub
pop
lahf
addr16
hlt
popa
add
pop
mov
nop
jno
add
std
xchg
popa
add
lds
lods
mov
mov
ja
test
aad
test
in
xchg
add
lcall
fisttps
clc
rolb
add
add
and
add
pop
or
inc
add
mov
and
add
cwtl
add
add
pop
push
fidivs
add
add
ret
pop
pop
xchg
pop
and
add
jne
sahf
lods
and
sub
jmp
out
arpl
xor
add
lds
pushl
shr
jmp
out
mov
ljmp
ja
std
add
sub
fwait
das
notb
pop
adc
inc
add
jmp
fsubr
push
add
call
pop
les
mov
sbbl
pop
es
inc
pop
push
mov
insb
push
pop
es
mov
add
lret
outsb
cwtl
and
mov
xchg
push
add
mov
add
in
out
xchg
test
inc
add
xchg
inc
pop
mov
dec
and
add
insl
jge
jg
das
jp
adc
loope
mov
sbbb
add
sbb
cld
aas
add
daa
test
jne
add
add
outsb
xchg
push
add
fsts
add
mov
or
cmp
inc
add
pop
fcmovne
jge
jae
add
add
add
add
frstor
add
or
pop
dec
jnp
ret
pop
push
xor
add
add
fwait
sbb
shr
in
incl
xchg
mov
pop
and
movsb
pop
mov
sbb
pop
out
cmc
xchg
sbb
stc
mov
ret
fisttps
arpl
fwait
mov
cwtl
call
push
jmp
outsl
or
jl
dec
jl
pop
outsl
test
fstpt
insb
sbbb
add
pop
enter
outsl
and
add
mov
aam
xor
jmp
pop
add
add
pop
pop
stc
movsb
pop
xor
add
add
call
add
std
push
call
and
sbb
mov
pop
push
add
pop
adc
add
aaa
lret
sbb
mov
scas
mov
iret
cmp
add
stos
out
mov
add
push
ret
xor
jge
pop
jns
pop
push
add
add
add
xor
enter
sbbl
pop
dec
adc
add
stos
fdivrs
sarl
xchg
mov
enter
add
pop
mov
pop
sahf
push
inc
jmp
arpl
or
mov
test
mov
jmp
xor
dec
outsb
rcrl
fwait
xchg
pop
pop
add
pop
cmpsb
pop
sbb
aas
pop
aas
jno
add
jge
pop
adc
cltd
sub
inc
add
cwtl
mull
add
leave
cmp
insb
sbbl
sbb
repz
sbb
pushf
adc
popf
add
mov
xchg
add
add
add
mov
leave
add
ret
adc
add
mov
mov
pavgb
enter
xor
pop
and
add
cltd
mov
add
xor
add
inc
pop
jo
add
sub
xor
add
pop
int3
imul
sbb
cld
test
ret
add
sub
aam
es
lods
negl
call
pushf
fcmovnb
pop
outsb
sub
add
pop
xor
add
add
inc
add
dec
fucomip
lret
add
add
push
add
pop
sbb
jmp
out
sub
dec
or
pop
cltd
cwtl
sbb
daa
pop
dec
out
and
add
push
inc
pop
inc
pop
jo
add
lds
addr16
mov
aad
xor
pop
popa
add
loopne
mov
test
imul
push
in
sbbl
out
dec
adc
add
push
add
fsubrs
pop
xor
add
pop
jno
add
pop
jne
push
jmp
sti
aam
add
pop
sbbl
pop
jmp
sub
cmp
pop
pushf
imul
jo
add
sub
stos
loop
stos
adc
add
adc
jnp
outsl
or
jne
scas
inc
pop
push
fwait
lock
push
pop
mulb
rorb
add
mov
scas
dec
fdecstp
mov
pop
fisubrl
pop
adc
add
aad
add
lahf
lcall
mov
add
bound
add
pop
cmp
sbbl
add
add
or
xor
push
sbb
add
inc
pop
sub
cltd
fldl
add
pop
inc
pop
sub
jns
jb
add
add
sbb
inc
pop
aas
repz
add
les
mov
std
test
dec
jne
add
mov
leave
mov
gs
sbbl
adc
inc
pop
not
push
mov
jmp
daa
daa
cmpsl
enter
pop
fisttpll
imul
mov
mov
ljmp
jbe
add
das
pop
mov
and
add
fwait
cmp
pop
mov
or
pop
xchg
mov
pop
pop
xchg
inc
pop
dec
aas
jg
xchg
and
push
xchg
push
push
xchg
add
pop
iret
not
cwtl
sbbb
ficomps
pop
sahf
cmpsl
pop
xchg
pop
cwtl
pop
pop
aaa
jns
pop
lods
aaa
cli
les
mov
pop
pop
pop
aam
mov
xchg
cmp
add
sub
add
in
fnclex
pop
add
add
add
cmp
jp
pop
sbb
xor
pushf
rcrl
jl
push
add
pop
jns
pop
daa
pop
cwtl
fwait
mov
iret
jl
pop
mov
add
bound
add
mov
mov
lret
jmp
aaa
repz
int3
das
mov
add
xchg
pop
iret
lahf
push
call
loop
stc
scas
pop
movsl
pop
xchg
in
mov
cmp
lret
sub
add
add
add
add
pop
xor
add
aam
sbbl
sub
movsb
jmp
inc
push
fs
insb
cmc
clc
std
sub
push
xchg
push
inc
add
sub
cmp
iret
into
dec
into
fisubrs
jmp
aaa
arpl
add
mov
insb
sbb
add
into
jl
pop
sbbl
mov
push
jmp
mov
pushf
mov
add
lret
mov
arpl
add
add
loope
cmp
test
into
adc
lods
shlb
add
pop
mov
mov
pop
add
add
jge
pop
sbb
imul
push
pop
cwtl
cmp
pusha
add
sbb
pop
leave
push
mov
jmp
cmpsl
xchg
add
mov
cwtl
xchg
sbbl
nop
push
add
stos
sub
pop
pop
or
xchg
xlat
rcll
adc
jmp
pop
pop
pop
adc
leave
jo
add
pop
pop
and
mov
lock
pop
push
add
cmp
insb
inc
pop
out
daa
pop
sbbb
xlat
lock
adc
sti
push
fnstcw
mov
mov
cs
mov
fs
in
or
cld
rcrl
add
repz
pop
fstpt
pop
xchg
xor
add
inc
add
sti
mov
pop
adc
mov
pop
add
add
add
pop
sbbb
in
sbbb
jns
pop
cmp
in
scas
add
add
mov
mov
xchg
lods
icebp
outsl
popa
add
test
ss
rcrl
add
ficoml
add
jns
insl
xchg
hlt
in
scas
jno
add
add
call
pop
add
add
dec
xchg
mov
sbb
add
ja
mov
inc
add
pop
cmp
pop
movsl
pop
push
or
add
add
add
pop
outsb
inc
pop
pop
js
sahf
jecxz
in
mov
jo
add
add
mov
test
lods
dec
cmp
jl
mov
pop
dec
mov
iret
mov
bswap
pop
lds
pop
mov
add
cmp
cmp
add
fwait
lods
push
inc
pop
stc
inc
add
scas
or
pop
xchg
xor
add
add
pop
mov
pop
mov
add
clc
mov
add
popa
add
push
cltd
jbe
and
add
pop
in
or
add
ret
or
imul
mov
xchg
add
add
ret
sub
and
xchg
sbbb
loope
shl
sbbl
cmp
lds
sbbl
gs
push
fsubrs
xchg
fimull
adc
add
sbb
add
add
mov
jmp
push
add
test
sbbb
add
pop
add
sbbb
cmpl
ret
xchg
pop
inc
pop
movsb
pop
ror
outsl
inc
add
add
add
call
sub
pop
inc
pop
nop
push
add
call
loop
pop
aam
add
pop
cmc
cmc
inc
pop
xor
add
cltd
loope
xor
add
mov
rcrb
add
clc
popa
add
cltd
xchg
aas
jns
pop
pop
pop
sbbl
push
cmpsl
pop
mov
cmp
jno
add
outsl
sti
xor
pop
movsl
pop
ja
pop
add
add
xchg
scas
push
xchg
shlb
outsb
xchg
in
lahf
mov
xchg
lret
add
add
add
xchg
cmpsb
pop
push
pop
inc
add
cmp
cmp
add
jb
add
pop
bound
add
xor
add
mov
add
lcall
add
pop
and
add
daa
pop
testb
add
outsb
scas
inc
pop
mov
pop
pop
fisttpll
mov
jmp
mov
rcrb
add
jbe
adc
add
sub
pusha
add
movsl
pop
xchg
inc
add
into
rcrl
sbb
nop
push
xor
ljmp
mov
pop
scas
sbbl
xchg
fucomp
push
inc
add
mov
add
cmp
hlt
sbbb
lahf
outsb
imul
add
arpl
add
add
pop
push
dec
ss
pop
repz
pop
popa
add
sub
int
mov
add
arpl
add
das
std
mov
jo
add
mov
arpl
add
mov
test
cmp
gs
sub
add
jb
add
jns
sbb
lods
xchg
sbb
add
inc
jmp
add
arpl
aad
rcrl
xor
jmp
or
aaa
aam
cmp
incb
add
jp
nop
leave
push
pop
mov
call
in
pushf
dec
xchg
add
into
imull
dec
push
xchg
lahf
cmp
jbe
add
test
adc
add
pop
adc
pop
mov
pop
push
pop
and
add
scas
jmp
pop
in
cltd
and
div
cmp
fnstsw
add
add
scas
inc
pop
insb
sbb
pop
sbb
addr16
or
out
out
pop
cmpsl
pop
push
add
xchg
add
xor
add
add
pop
insb
sarl
jae
add
int3
fbld
add
mov
xchg
mov
test
pop
push
mov
cli
cmpsb
pop
jae
add
pop
fists
pop
inc
add
push
rorb
pop
repnz
pop
jno
add
add
jo
add
pop
add
jge
jne
leave
inc
pop
popf
mov
add
add
rcrl
shl
or
add
xlat
daa
pop
loop
arpl
add
pop
jmp
add
adc
add
or
cmp
mov
add
test
cmp
adc
pop
sahf
lcall
dec
cmp
mov
mov
pop
pop
outsb
mov
pop
mov
pop
lods
xchg
pop
imul
pop
push
add
pop
sbb
add
add
es
fcmovne
inc
pop
mov
pop
add
add
add
adc
add
add
je
add
add
inc
pop
inc
add
out
mov
mov
dec
mov
pop
mov
pop
sbb
loope
sbbl
push
add
lret
js
stos
mov
mov
add
add
pop
inc
add
xchg
in
jo
add
cld
popa
add
or
add
outsl
pop
pushf
mov
add
cmp
pop
jmp
push
add
mov
scas
dec
cmp
out
ss
jmp
out
dec
arpl
add
add
jge
sbb
mov
and
lahf
and
add
pop
addr16
pop
cld
cmp
inc
pop
adc
aas
add
add
add
pop
dec
mov
cwtl
adc
pop
test
add
xchg
test
adc
add
mov
or
arpl
add
ds
push
jmp
outsl
out
add
mov
pop
xor
add
fwait
mov
cmp
mov
pop
jmp
lods
dec
adc
pop
repnz
add
outsl
call
mov
jmp
arpl
cmp
adc
add
loop
mov
jmp
adc
pop
and
jp
pop
in
push
pop
les
pop
jb
add
add
scas
inc
pop
mov
dec
std
xchg
xchg
out
lret
xchg
jns
pop
mov
sbbb
dec
insl
push
add
lods
scas
fcompp
out
sbb
xchg
push
pop
xor
add
movsb
pop
xchg
lods
mov
jmp
push
mov
pop
or
pop
dec
dec
push
add
or
inc
pop
mov
push
add
pop
rep
inc
pop
jb
add
inc
pop
and
add
fsubrs
insl
push
pop
or
cld
pushl
in
inc
add
pop
test
lods
rcrl
das
mov
mov
pop
add
add
xor
add
lods
mov
mov
mov
inc
add
cmc
xor
or
popf
mov
cmp
pop
lods
jne
dec
icebp
mov
pop
pop
pusha
add
xchg
inc
add
sub
and
add
and
add
pop
dec
jmp
lods
rclb
add
add
mov
lock
jecxz
sub
pop
fmulp
xor
mov
cmp
jmp
adc
xor
sub
popa
add
pop
ret
inc
add
mov
pop
jnp
add
mov
test
fists
pop
sub
imul
add
add
fnstcw
pop
cmpsl
pop
icebp
dec
gs
dec
pop
ficomps
cmpsl
pop
push
add
pop
xchg
push
push
dec
pop
pop
mov
mov
jmp
dec
arpl
sbb
stos
sahf
std
stos
das
xor
incl
aaa
ffree
pop
inc
add
sbb
add
ds
sbbb
add
in
nop
xchg
stc
outsb
mov
add
loop
mov
out
adc
add
add
loope
loop
cmp
sbbl
test
lcall
js
pop
pop
lea
out
xor
add
pop
daa
pop
ret
cmp
in
and
add
add
ss
add
lret
mov
pop
sbb
inc
add
pushf
fistpl
pop
gs
push
fdivrs
lods
rcrb
pop
rclb
mov
jle
hlt
mov
mov
call
arpl
add
flds
add
mov
rcll
add
fldcw
cmp
pop
xor
loope
icebp
push
add
movsb
pop
out
mov
add
pop
ja
dec
mov
xor
add
and
add
mov
pop
sbb
mov
add
add
sbb
pop
cwtl
cmpsl
pop
rcrb
out
xor
add
jae
add
outsl
arpl
xor
add
add
dec
push
pop
mov
sbb
outsl
arpl
xorb
add
into
add
cmp
in
shlb
js
jmp
scas
mov
add
mov
fldt
mov
mov
add
jmp
push
mov
dec
in
aam
sbbl
xchg
popf
mov
negl
pop
add
fwait
xchg
xlat
pop
pop
push
jmp
mov
out
inc
pop
aad
lea
pop
xor
add
stos
outsl
sbb
fmuls
insb
xchg
lea
mov
pop
outsl
cltd
pushf
test
xchg
fldl
pop
cwtl
push
add
sub
push
add
mov
pop
pop
shll
jg
call
mov
mov
push
mov
pop
mov
lret
call
pop
inc
pop
mov
cmp
add
enter
add
add
lret
movsl
pop
push
add
sub
jge
adc
add
mov
pop
dec
call
cmp
icebp
xor
xchg
stos
dec
incb
add
xor
add
xchg
imul
add
push
dec
insb
sbb
cmp
jmp
pushf
daa
mov
jmp
mov
or
cwtl
sar
insb
adc
je
cmp
inc
pop
add
add
nop
push
adc
add
pop
arpl
add
add
xchg
add
xor
jmp
jmp
adc
clc
push
imul
stc
arpl
add
jb
add
sub
jmp
xor
add
ficoml
add
int3
sbb
in
add
lock
add
add
outsb
jmp
pop
xor
add
sbb
add
sub
sbb
push
xchg
inc
pop
and
add
pop
nop
ja
rolb
pop
pop
loope
std
push
les
jno
add
add
lcall
adc
add
add
add
mov
push
pop
xor
loopne
ja
add
add
mov
jns
outsl
cld
jo
add
lret
adc
or
pop
scas
cmp
add
pop
mov
sub
pop
push
ret
arpl
mov
dec
sarb
jne
add
sub
pop
mov
cmp
and
add
pushf
aam
pop
push
xlat
das
xchg
push
pop
sbb
dec
and
add
add
shll
add
cmp
add
and
pop
or
mov
push
add
mov
add
out
xchg
pop
test
adc
add
add
loop
sbb
adc
sub
mov
push
in
addr16
push
and
add
add
dec
scas
push
lods
jmp
arpl
mov
mov
sub
jle
dec
ficompl
pop
xor
add
mov
jmp
adc
daa
push
shrl
icebp
out
imul
out
nop
and
dec
cmc
shll
mov
xor
and
add
ja
jo
add
push
mov
jmp
dec
or
add
add
pop
xchg
xchg
cli
repnz
cmc
lods
xor
add
mov
pop
and
add
jbe
pop
dec
enter
add
cmpsb
pop
std
or
mov
aam
xchg
aas
push
loope
push
and
add
mov
inc
pop
or
xchg
and
add
add
sbbb
adc
add
fbld
ret
jp
arpl
push
out
jb
add
lds
add
leave
mov
outsb
ds
mov
cmp
std
pop
popf
stos
les
push
pop
sbb
add
jmp
pop
dec
loope
sub
jns
pop
jmp
cmp
jle
or
ret
pop
js
dec
sbbb
je
sub
mov
add
mov
pop
ljmp
pop
inc
pop
mov
je
pop
add
add
push
add
shrb
in
xchg
xlat
push
pop
int
cmpsl
pop
mov
flds
add
mov
clc
jecxz
into
dec
or
pop
pop
mov
dec
jmp
in
and
xor
add
pop
rcl
adc
add
add
add
sbb
pop
or
add
out
dec
jmp
pop
pop
addr16
insl
and
add
mov
in
scas
jmp
pop
stc
fists
add
repnz
add
dec
mov
stos
inc
pop
testl
jmp
das
push
call
jmp
xchg
arpl
rcrl
jmp
add
push
add
movq
pop
rcll
add
mov
gs
push
add
fwait
lds
pop
stos
push
inc
add
push
pop
aad
insl
insl
mov
and
dec
sbb
add
mov
add
add
adc
sti
add
add
add
add
fldcw
rcrl
lds
pop
dec
in
in
sub
mov
pop
jge
pop
rcrl
jmp
mov
xchg
sbbb
enter
sar
lcall
mov
mov
nop
mov
lcall
and
add
lods
lahf
pop
inc
add
xchg
pop
test
jp
pop
sbb
lea
aaa
pop
ljmp
rcrb
aad
add
add
add
sbbl
xchg
repz
frstor
jge
add
add
es
pop
fs
fwait
inc
add
rcrb
jp
add
mov
mov
pop
pusha
add
add
add
add
repz
add
fistpll
mov
aad
push
mov
add
add
ret
and
add
add
rcrb
rcrb
fcmovnb
pop
lods
jae
add
imulb
pop
sbb
jmp
daa
sbb
xlat
sub
adc
dec
mov
mov
pop
notl
sub
in
and
dec
dec
push
pop
mov
test
pop
push
push
add
enter
sub
pop
je
push
sahf
dec
div
inc
add
sbb
je
add
jae
add
and
pop
sub
jbe
pop
cmp
add
adc
add
xchg
or
xor
add
add
sub
jnp
ljmp
rcrb
add
outsb
and
add
hlt
rcrb
sbbb
jle
sahf
jmp
push
pop
pop
mov
inc
pop
pop
jns
pop
inc
add
hlt
pop
push
add
pop
pop
mov
fstpl
cmpsl
pop
jecxz
lods
sbb
gs
push
pop
adc
add
add
lods
leave
adc
add
fiadds
add
scas
leave
addr16
mov
mull
add
scas
lods
mov
js
nop
sbb
push
fsub
pop
jnp
out
or
pop
jg
btr
mov
add
adc
add
or
add
add
sbb
pop
push
push
push
ret
cmpsl
push
dec
arpl
or
pop
sub
add
cmpl
ret
inc
add
jmp
in
pop
jl
shlb
pop
sbbl
pop
in
test
pop
push
pop
add
rcrb
dec
pop
pop
pop
or
inc
add
dec
jmp
in
xchg
out
pop
push
arpl
sbb
test
popf
jmp
aaa
inc
add
imul
push
ret
add
cmpsb
pop
pusha
add
xchg
pop
aas
and
add
pop
decl
fdivr
jmp
dec
imull
cmp
pop
shl
iret
jecxz
pop
sub
add
frstor
add
pop
mov
imul
sbb
or
test
mov
rcll
add
add
stos
fcom
sbbb
dec
and
add
jbe
movsl
pop
push
pop
int
sbb
popf
scas
clc
sbb
in
ljmp
mov
lret
lahf
pop
mov
and
add
add
dec
push
pop
cli
lcall
jle
inc
pop
outsb
fisubs
add
xor
add
pop
and
add
add
xlat
outsl
jbe
dec
and
add
add
pop
push
cmp
push
mov
pop
pop
inc
add
daa
pop
and
add
ljmp
dec
scas
add
pop
mov
add
fisubrs
push
mov
jmp
dec
add
inc
pop
jnp
pop
or
add
testb
sbb
add
add
movsb
pop
test
mov
jnp
add
sbb
add
add
nop
mov
add
xor
leave
pop
xor
dec
dec
icebp
push
fimuls
adc
mov
or
push
mov
jo
add
add
test
sarl
sbb
jmp
inc
arpl
inc
pop
and
add
sahf
mov
pop
xchg
inc
pop
push
pop
nop
mov
lahf
outsl
popa
add
mov
cmp
add
sub
push
leave
pop
incl
mov
xor
fcomip
pop
sahf
stc
scas
mov
jb
add
lods
movsl
pop
cmp
pop
stc
mov
mov
pop
push
mov
popf
mov
xlat
push
dec
testl
add
ficoml
sbbl
add
mov
add
xchg
or
pop
jbe
pop
cwtl
test
pop
pop
sub
insl
test
cmp
es
in
cmp
and
add
xchg
out
xchg
imul
or
aaa
add
lods
pop
pop
xchg
mov
jmp
push
inc
sbbl
xchg
leave
pop
jg
add
jp
xor
jne
pop
mov
pop
comiss
add
es
in
mov
add
nop
mov
sbb
add
jmp
xchg
fsts
fistps
add
cld
sar
add
add
lret
push
add
mov
adc
add
stos
arpl
add
pop
or
dec
jecxz
jmp
pop
hlt
mov
lds
mov
xlat
ret
pop
cmpsb
pop
ror
insl
ret
add
test
lcall
movsl
pop
xchg
inc
pop
bound
add
mov
movswl
mov
add
mov
add
mov
add
scas
dec
call
fmull
pop
insb
arpl
add
inc
add
inc
add
loopne
clc
cmp
scas
rcrb
add
inc
add
mov
or
sbbl
xchg
jg
nop
sar
cmp
pop
cld
ja
add
idivl
dec
cltd
test
idiv
push
jmp
daa
outsl
push
sti
mov
jmp
aam
or
loop
movhps
incl
clc
jmp
cmp
sbb
sub
pop
or
pop
lds
dec
jo
add
add
add
dec
repnz
rcl
leave
sub
pop
add
add
imul
push
ret
adc
dec
cmp
pop
lret
shrb
mov
mov
xchg
sbb
inc
cmp
cmp
mov
sbb
outsl
mov
scas
testl
pop
sbb
mov
pop
aam
jmp
pop
jecxz
push
fs
test
cwtl
add
pop
call
jecxz
fidivrl
pop
aad
pop
pop
enter
add
pop
inc
add
lods
mov
gs
arpl
add
or
xchg
xor
add
add
add
sbbb
cmp
gs
ret
dec
and
add
add
add
pop
pop
fxam
pop
xchg
popa
add
push
add
add
xchg
inc
add
arpl
cmpb
outsl
and
add
mov
add
lret
rcrb
add
or
jnp
out
cmp
pop
jns
mov
add
jl
pop
xchg
fsub
pop
jno
add
jno
add
iret
jmp
cld
sub
jp
xlat
sub
and
add
call
jmp
add
loop
xchg
lock
ljmp
repz
ja
jmp
clc
lret
jp
arpl
dec
or
or
fsts
pop
pop
mov
jmp
ss
hlt
jae
add
add
inc
pop
xor
add
add
inc
add
sub
push
push
ret
ljmp
stc
movsl
pop
arpl
add
add
iret
xchg
or
pop
aad
aad
push
add
sub
add
jae
add
scas
push
sub
add
sub
mov
add
ss
xchg
xchg
daa
pop
shl
psubusb
hlt
loop
dec
mov
jns
pop
punpckhbw
jmp
jne
and
add
stos
and
push
xor
add
pop
push
or
pop
leave
pusha
add
or
add
add
push
pop
xchg
cs
xchg
push
loopne
mov
sar
push
pop
sbb
sbb
adc
add
lods
enter
mov
sub
add
jecxz
dec
add
add
add
xor
add
add
daa
pop
daa
pop
inc
pop
icebp
push
psadbw
pop
jle
pop
and
add
pop
stc
mov
pop
shll
inc
pop
pop
adc
add
add
and
ljmp
icebp
fists
add
sub
add
mov
pop
adc
mov
pop
or
aad
pop
xchg
in
or
cmp
ljmp
cmp
jmp
arpl
sti
arpl
add
push
clc
jmp
loop
mov
add
movsl
pop
fimull
xor
add
test
jmp
pop
push
add
pop
jnp
adc
add
jmp
mov
inc
cs
mov
cmp
xchg
loopne
xor
add
sbb
out
add
push
ret
or
and
mov
enter
jae
add
pop
fsubrl
out
testl
add
add
mov
jmp
pop
sbbl
xchg
and
add
push
mov
xor
add
add
add
sti
xor
add
mov
jge
cmp
pop
ss
cld
pushf
and
add
jge
dec
push
add
push
mov
daa
pop
mov
pop
cli
push
jno
add
add
cmpsl
pop
out
mov
mov
and
add
je
mov
add
jne
pop
push
lahf
addr16
leave
insb
sbbb
lock
and
add
call
lcall
jns
mov
mov
mov
push
pushf
ret
mov
outsb
outsb
shl
pop
shl
push
mov
in
add
or
xor
or
pop
insl
fdivs
add
add
jns
xor
add
pop
jnp
ljmp
push
ret
add
sbbb
sbb
mov
add
stos
lret
cwtl
or
cmp
add
mov
icebp
into
and
add
pop
dec
sub
and
add
aas
bsf
inc
jmp
push
dec
ljmp
or
adc
testl
pop
in
lret
cld
inc
pop
in
cmpsl
pop
into
xchg
push
add
mov
pop
and
add
or
stc
sub
pop
das
pop
xor
dec
decl
fwait
pushl
push
aad
stos
lahf
sbb
scas
or
es
repz
add
push
jecxz
add
add
add
inc
pop
sbb
pop
jae
add
movsl
pop
xchg
inc
pop
xchg
pop
loopne
cmp
ljmp
pop
pushf
jmp
mov
daa
pop
mulb
pop
in
loopne
pop
pop
negl
leave
adc
aaa
xor
add
add
add
xor
add
add
xchg
sti
mov
or
sbbb
cmp
add
lods
xor
add
mov
lahf
in
out
movsl
pop
sbbb
daa
pop
mov
jns
inc
pop
push
pop
sub
jo
add
add
pop
enter
add
cmpsb
pop
fxch
jb
add
add
imul
pop
jp
sarb
dec
dec
out
cltd
xchg
enter
pop
mov
fistl
add
lods
repz
popf
or
loopne
sbb
jge
jecxz
aas
mov
push
add
lods
push
out
mov
add
cmpsb
pop
add
add
pushf
sbb
push
add
pusha
add
notl
add
pop
insl
bound
add
pop
mov
ficoms
pop
mov
sti
lock
test
sti
int3
jbe
xor
add
pop
push
ret
sbb
pop
rcrb
mov
push
jmp
lods
and
arpl
add
mov
ficompl
nop
loopne
test
fld
pop
cli
inc
add
mov
mov
idivl
add
add
es
and
sbb
cmp
sbb
pop
lret
fs
pusha
add
mov
insl
xlat
lcall
xor
dec
push
add
sub
pop
or
nop
shrl
add
jecxz
push
add
push
je
jmp
arpl
add
div
popf
adc
add
jle
add
add
add
and
add
add
add
pop
mov
add
dec
out
stc
test
and
pop
or
loopne
or
jne
add
pop
out
mov
int3
movsb
pop
aas
fcomp
mov
sbb
lcall
pop
in
inc
pop
in
jbe
cmp
sbb
test
jl
jmp
dec
mov
mov
fimull
add
shlb
pop
loop
lret
pop
push
pop
dec
iret
sbb
mov
pop
cwtl
mov
cld
push
pop
mov
add
fcoms
repnz
pop
or
pop
hlt
mov
ret
pop
loop
ret
jne
push
ret
xchg
cmp
mov
jo
add
add
xor
add
mov
and
xchg
out
mov
jmp
fs
push
sti
ret
pop
out
enter
lcall
pop
enter
loope
lahf
fldl
pop
das
mov
jmp
mov
insb
xchg
dec
cmp
add
or
jne
pop
fcomp
mov
movsl
pop
and
add
pushf
mul
pop
pop
sbbl
pop
movsb
pop
add
gs
xchg
xchg
mov
aaa
lret
dec
divb
add
add
or
sbbb
add
daa
pop
int
pop
push
jge
adc
add
addr16
sbb
jle
add
aaa
outsl
xchg
fildll
jne
jmp
or
pop
movsb
pop
adc
jl
fcompl
push
ret
add
jno
add
clc
imul
fldt
adc
cmp
add
add
inc
add
pop
mov
cmpsl
pop
inc
pop
add
dec
jns
inc
pop
loope
cmp
jne
pop
inc
pop
aas
les
test
xor
add
movsb
pop
and
dec
hlt
pop
cmpsb
pop
clc
or
jge
xor
add
dec
inc
pop
xchg
pop
pop
sbb
jo
add
add
mov
add
arpl
add
pop
hlt
cmp
call
jmp
ds
enter
jnp
sti
cmc
sbbl
mov
pop
and
jmp
outsl
add
arpl
sbb
outsb
call
sbb
daa
aaa
mov
xlat
rcr
lods
jnp
mov
pop
push
add
incl
pop
cmp
sbb
out
arpl
jmp
jns
lcall
or
popa
add
cltd
pop
sbbb
add
pop
push
add
push
ret
sub
cltd
xchg
in
sbbl
daa
pop
inc
add
in
push
add
and
add
add
add
pusha
add
jle
mov
add
add
add
int3
and
add
add
jp
or
add
dec
pushf
jnp
add
jno
add
sbb
pop
or
and
add
and
add
test
jnp
fnsave
or
sbbl
pop
mov
or
imul
loop
mov
jge
mov
pop
fistl
add
mov
cmpsl
pop
xchg
scas
jno
add
add
sbbl
daa
pop
add
add
pop
aad
js
out
or
sbb
shlb
cmp
push
das
inc
add
cmp
add
add
rolb
pop
inc
pop
cmp
pop
dec
or
dec
sbb
test
pushf
jmp
dec
aaa
lcall
add
add
jae
add
add
or
pop
mov
add
int
pop
imul
cs
pop
sbbl
xor
add
fldcw
fstpt
aad
popa
add
add
aad
lcall
pop
pop
xchg
pop
jecxz
outsb
imul
sbb
dec
btc
push
add
int
into
ljmp
mov
mov
push
or
mov
cltd
aad
pop
pop
rolb
add
inc
pop
out
fisubrs
pop
and
add
add
add
jle
rorl
sbb
push
lea
jl
pop
insl
scas
adc
add
pop
pop
in
incl
add
add
cmp
push
add
enter
jge
and
and
add
sbb
add
ret
pop
jecxz
mov
loop
xchg
aam
add
sbb
pop
movd
mov
repnz
and
push
ret
cmp
cmp
add
mov
add
mov
dec
add
add
pop
cli
dec
f2xm1
adc
add
test
jmp
push
xor
sub
adc
add
add
add
add
mov
add
pop
mov
fisubrl
jmp
xchg
test
mov
mov
add
lods
in
mov
mov
outsl
lcall
cmp
add
es
xchg
loope
jmp
sbb
xor
add
jl
outsb
leave
adc
add
sbb
in
dec
mov
add
popl
mov
add
pop
xchg
rcrl
sub
dec
jmp
mov
pop
jno
add
sub
add
push
add
popa
add
ret
xor
ret
pop
pop
fst
xchg
xor
add
outsl
icebp
add
add
pop
mov
rcrl
pop
mov
repnz
out
inc
pop
sbb
add
push
nop
call
sti
cmp
je
scas
mov
data16
mov
imul
add
add
jne
push
add
repz
mov
scas
cltd
jmp
pop
mov
add
push
out
fistps
and
fwait
ljmp
out
sub
xchg
in
xchg
or
push
mov
add
pop
ljmp
add
add
arpl
add
scas
mov
pop
push
add
pop
dec
mov
pop
leave
adc
add
sbb
popa
jmp
or
arpl
iret
movsb
pop
mov
out
repnz
js
add
pop
xor
shrb
inc
add
ret
mov
jmp
pop
add
pop
mov
lods
gs
xchg
shl
pop
adc
lock
pmovmskb
jne
pop
mov
add
add
rcrl
in
es
jae
add
add
jg
add
stos
dec
fistps
mov
test
call
mov
add
insb
jg
inc
add
clc
or
ret
add
cmp
sub
rep
hlt
mov
jp
pop
loop
jl
mov
add
popa
add
jl
rcrl
add
clc
and
add
pop
cmp
pop
mov
pop
adc
add
pop
int3
xchg
dec
lods
rcrb
add
jmp
add
mov
or
add
pop
movsl
pop
inc
add
test
fxch
pop
pusha
add
jl
dec
jb
add
dec
enter
xchg
into
idiv
cld
cmp
dec
shll
iret
lock
dec
rcrb
rclb
add
int3
jb
add
push
mov
mov
std
adc
add
add
bswap
outsl
xlat
lcall
add
add
add
mov
les
pop
outsb
movsb
pop
mov
jge
in
ret
pop
xchg
jne
pop
loope
dec
adc
lret
add
dec
pop
sbbb
ljmp
out
pop
bound
add
jecxz
pop
pop
jmp
pop
cltd
fs
jnp
fucom
pop
push
pop
lods
pusha
add
pop
dec
fsubrl
movsl
pop
mov
pop
popf
lret
clc
int
sub
add
add
fcmovbe
cli
lods
mov
mov
jmp
arpl
jbe
add
add
call
pusha
add
and
fs
push
js
rcr
sub
pop
push
jmp
cmp
cmc
sbb
out
repnz
sbb
cmp
addr16
lcall
pushf
mov
in
ljmp
jmp
add
add
add
outsl
push
add
xor
add
and
add
add
aam
idiv
jne
jmp
mov
pop
fdivrl
jmp
cmc
enter
stos
add
add
add
adc
ret
jbe
nop
scas
in
pusha
add
je
mov
ror
push
scas
hlt
fs
pop
push
add
mov
dec
or
lds
pop
lods
repnz
mov
cmp
sbbl
sbbl
mov
push
pop
pop
test
add
rcrl
mov
cmp
push
ret
arpl
cmp
scas
cmpsb
pop
add
call
sub
call
xchg
int3
sbb
pop
stos
test
fidivrl
and
outsb
pusha
add
inc
pop
pop
pop
js
pop
loopne
sub
pop
xchg
or
inc
pop
mov
add
or
ret
pop
mov
pop
hlt
jae
add
mul
pop
mov
dec
iret
pop
jmp
push
ret
pop
pop
dec
jge
gs
les
xor
add
or
add
sbb
in
push
xchg
pop
add
add
add
pop
faddl
add
jp
insl
jmp
pop
hlt
mov
mov
mov
inc
add
testb
out
je
je
add
add
add
lahf
xchg
std
push
sub
jp
dec
arpl
add
add
call
lret
add
pop
push
pop
sub
fbld
push
mov
fmul
popf
jle
hlt
mov
pop
popa
add
int3
stos
or
pop
mov
add
add
arpl
add
jecxz
mov
mov
add
int3
cmpsl
pop
xor
add
push
add
fsubl
lret
jge
bound
add
xor
add
pop
ret
push
jmp
arpl
add
cmp
mov
sub
mul
pop
pop
pop
pop
xor
lret
sbbl
pop
sub
sbbl
sbbb
sbb
ret
xchg
incl
pushf
mov
and
add
pop
dec
pop
sub
popf
movsb
pop
mov
add
aaa
jo
add
jmp
mov
ret
pop
add
sbb
jns
bound
add
loop
pushf
out
test
adc
add
pop
mov
add
jnp
jne
sbb
add
add
hlt
test
sbbl
add
add
add
add
add
add
mov
add
push
add
es
cmc
aad
add
jle
and
add
repz
add
jg
pop
pop
mov
pop
cmpsl
pop
fcomi
sbbb
out
sbb
inc
pop
mov
or
loopne
xchg
ret
pop
sbb
mov
adc
outsl
decl
mov
cmp
pop
outsb
push
sbbl
lret
pusha
add
clc
mov
mov
push
stc
xor
pop
sub
add
sub
pop
mov
jbe
add
jmp
pushf
arpl
fwait
xchg
ljmp
xchg
mov
mov
pop
mov
dec
push
jl
cli
in
loope
imul
add
xchg
loope
add
add
add
add
push
add
adc
add
inc
jmp
cmpsl
push
arpl
mov
pop
and
add
add
das
push
add
es
and
add
insl
jmp
pop
xchg
add
in
and
pop
fcoml
add
mov
bound
add
lods
out
sbbl
add
jp
or
add
jmp
shll
add
inc
add
or
or
pop
test
imul
dec
sub
add
cld
mov
pop
push
pushf
push
insl
imul
das
push
out
pop
ljmp
push
cmpw
push
ret
arpl
adc
test
test
pop
lock
add
pusha
add
enter
stos
adc
int
stos
stc
inc
add
aaa
cmc
sti
or
pop
jne
pop
mov
pop
bound
add
or
pop
adc
add
inc
pop
ret
add
add
aad
pop
stos
sarl
fcomps
ret
jmp
andb
pop
daa
cmpsb
pop
gs
sub
pop
xor
add
loope
filds
mov
jae
add
es
test
pop
xchg
cmc
dec
dec
or
test
movsl
pop
sbbl
add
push
ret
cmpsl
movaps
pop
adc
add
adc
add
stos
std
cmpsb
pop
jge
pop
xor
test
add
ljmp
add
test
add
sub
or
loope
loope
insb
std
pop
and
add
and
add
jmp
and
add
pop
add
nop
inc
add
ss
mov
jnp
add
test
lods
fcomps
inc
pop
jne
fwait
sub
rorl
imul
int3
in
or
pop
cmp
aad
movsl
pop
jp
push
imul
pop
pusha
add
aas
jmp
pop
pop
sub
loopne
fistps
add
sbbb
ficompl
dec
mov
pop
fldt
jo
add
pop
gs
je
pop
popa
add
xchg
add
add
inc
pop
icebp
aaa
sbb
in
nop
or
pop
add
add
pop
inc
add
dec
subps
add
scas
ret
pop
adc
add
add
lcall
fidivrs
pop
mov
push
jmp
sti
sbb
adc
add
fs
fidivrl
cmpsl
pop
scas
jp
pop
repz
jne
push
add
in
imul
outsb
jmp
pop
add
add
lret
int
dec
pop
mov
pop
pop
inc
pop
dec
mov
add
push
jecxz
ljmp
dec
cmc
jmp
push
andl
xor
inc
add
inc
add
jg
and
add
xor
lods
imul
xor
lahf
aad
pop
je
imul
pop
push
or
pop
aam
int3
xchg
ljmp
es
pop
fs
or
add
xchg
leave
aaa
mov
vmread
xor
add
add
fdiv
sub
sbb
pop
dec
sbb
pop
jecxz
push
in
arpl
add
add
add
repnz
lret
incb
jmp
push
add
imul
bound
add
std
rclb
movsb
pop
mov
popf
imulb
pop
sti
rorb
pop
push
adc
add
add
add
mov
add
or
or
push
push
ret
addb
dec
xchg
adc
stos
es
mov
jmp
test
adc
add
inc
add
sbbl
add
jl
mov
jae,pt
add
add
fnstenv
mov
jae
add
call
jmp
mov
std
mov
add
cmp
sbb
inc
add
cmp
cs
jecxz
stos
negl
pop
and
add
outsb
push
fstpl
and
jmp
add
and
rcrb
add
xchg
jnp
or
mov
mov
insb
sbb
pop
mov
pop
pop
pop
mov
pop
les
pop
and
add
ret
add
mov
inc
pop
pop
je
add
testb
pop
leave
or
pop
jle
pop
pop
push
add
or
mov
add
lea
add
add
in
int
into
imul
cmp
jne
jmp
mov
add
pop
sbb
mov
sub
pop
dec
inc
pop
sbb
sti
jmp
arpl
cmp
stos
jb
add
pop
aaa
xchg
lcall
sbbl
jecxz
xchg
fisubl
add
jbe
out
rcrl
div
jmp
adc
dec
sbb
mov
xchg
mov
mov
cmc
lcall
pop
mov
filds
pop
and
add
jmp
dec
lods
push
push
cmp
add
cmp
push
ret
dec
pop
daa
sti
ds
add
iret
pop
cmp
add
les
lret
pop
sbbl
add
daa
pop
lock
stos
or
pop
rcrl
xor
insl
mov
popf
jp
fstl
add
ret
pop
mov
jmp
pop
repz
add
bswap
inc
add
arpl
lods
mov
jle
lods
clc
jp
mov
xchg
dec
out
imul
cltd
inc
pop
dec
les
int3
stc
mov
clc
xchg
arpl
add
push
mov
xchg
dec
sbbb
push
and
add
adc
add
movsl
pop
loopne
jle
pop
sti
sub
mov
pop
ret
pop
icebp
ja
pop
sub
add
cs
jmp
add
mov
pop
or
pop
add
add
xchg
popf
pop
xchg
das
insl
lret
add
pop
cwtl
rol
pop
imul
sbb
pop
sbbb
mov
mov
or
pop
mov
jl
or
add
pop
dec
out
popa
add
mov
punpckldq
call
arpl
sub
add
in
mov
pop
int3
popl
and
add
add
push
ret
add
test
jp
xchg
lret
movsb
pop
test
jecxz
jb
add
pop
lds
pop
and
add
pop
sbb
add
int3
or
adc
add
sbb
add
add
xor
add
pop
stos
out
or
add
adc
add
inc
add
or
jmp
push
inc
xchg
decl
sub
jge
add
mov
movsl
pop
pop
sub
add
lret
ljmp
test
ret
cmpsb
pop
ljmp
or
jae
add
add
lea
ljmp
pop
xor
add
mov
xor
add
mov
add
pop
aad
mov
jmp
sbb
mov
scas
sbb
rcll
jmp
dec
cmp
aaa
dec
sbbb
mov
add
fldt
inc
add
xor
add
div
add
es
mov
add
add
xchg
fwait
ja
xor
add
add
fwait
sbbb
add
lret
lock
pop
pop
fstl
add
fstpt
stos
mov
pop
lahf
ret
pop
dec
movsl
pop
lods
mov
xchg
fstpt
inc
pop
out
dec
cli
aas
push
mov
push
ret
pop
jp
movsb
pop
fsub
pop
sub
pop
dec
mov
mov
mov
dec
aad
jle
inc
pop
enter
je
lret
pop
push
add
sahf
rcrb
pop
xchg
mov
mov
incl
cmc
push
aaa
into
or
add
fistpl
mov
cmp
lret
pop
xlat
test
add
adc
add
vmread
pop
cld
fists
jmp
push
push
daa
daa
arpl
add
movsb
pop
mov
pop
lods
icebp
rclb
lea
decl
cmp
add
mov
sub
add
jle
xchg
mov
sbb
add
shll
add
push
jbe
sbb
pop
jle
add
decl
jmp
inc
inc
and
pop
dec
lret
sbb
pop
cld
mov
leave
add
add
pop
mov
mov
mov
ja
cmp
add
pop
mov
loopne
add
movsb
jmp
arpl
sub
pop
sbb
lahf
xchg
mov
pop
jae
add
test
aad
add
lret
pop
xchg
dec
pop
pop
pushf
loop
mov
mov
pop
cs
mov
ret
jbe
pop
push
loope
xor
add
pop
mov
out
pop
push
add
xchg
js
test
pop
mov
and
lret
sub
add
leave
push
jmp
push
arpl
dec
pop
push
push
fdivrp
incl
xchg
lods
arpl
jo
add
dec
or
pop
lret
add
add
dec
inc
add
jecxz
pop
mov
mov
and
add
pop
nop
pop
shlb
add
out
push
cmp
push
ret
lods
add
add
in
pop
lret
xlat
cmp
pop
mulb
add
add
inc
add
and
add
pop
adc
cmpsl
pop
outsl
sub
hlt
sbb
pop
mov
pop
dec
jl
xrstor
xchg
into
out
call
add
je
push
ret
inc
add
fcmovnu
mov
mov
outsl
mov
sarl
add
aas
test
add
pop
sub
push
add
aam
jmp
jmp
arpl
pusha
add
hlt
lcall
pop
fisubrs
leave
pop
push
push
pop
dec
sbb
jno
add
pop
push
in
leave
mov
daa
pop
arpl
add
pop
pop
imul
adc
add
add
add
cmp
dec
push
pushf
xchg
jae
add
nop
loop
mov
add
pop
pushf
jae
add
lods
movsb
pop
fidivrl
add
fnstenv
int3
and
add
add
add
rolb
jl
jbe
mov
add
add
jnp
int3
je
out
and
add
or
pop
sub
jmp
mov
ftst
mov
jnp
add
add
add
cwtl
sahf
ret
pop
and
add
add
pop
and
add
mov
add
rcrl
adc
add
pop
ret
hlt
lods
daa
pop
jnp
iret
cwtl
je
xchg
gs
mov
jp
incl
in
outsl
push
add
xchg
pop
fcomi
pop
loope
jne
push
shr
push
ret
arpl
cmpsl
xchg
les
pop
imul
dec
fwait
jns
add
pop
daa
pop
outsb
loop
fsubs
add
in
add
add
push
jp
add
ja
popf
rcrb
sbb
enter
pop
xchg
pushf
repnz
pop
scas
mov
aas
ss
xor
add
fcomps
push
add
imul
sahf
jo
add
inc
pop
mov
add
testb
cmp
dec
out
es
lea
in
aaa
stc
adc
add
out
inc
pop
out
cmp
pop
lea
pop
xchg
or
sti
add
add
fsts
jl
addr16
cmp
dec
bound
add
pop
cltd
adc
add
add
out
pop
and
add
in
loope
stos
lods
fiadds
loope
and
add
add
test
pop
xor
add
add
xor
add
add
push
shrl
add
push
mov
push
add
loope
rcrl
add
aad
rcrb
dec
js
sub
icebp
out
es
sub
add
pop
aas
mov
mov
ja
pop
lret
popf
sbbl
add
mov
ljmp
xor
sub
mov
add
pop
jbe
mov
pop
outsl
into
lea
clc
add
shll
fiadds
rclb
add
sub
add
jecxz
mov
add
outsb
sbb
cmp
add
mov
add
add
cwtl
lea
pop
mov
pop
out
adc
add
xor
jmp
pop
sti
pop
cmp
dec
cmp
mov
add
jecxz
cmp
xchg
aas
ret
mov
dec
jns
daa
pop
xor
add
mov
pop
pop
pop
cwtl
and
add
pop
pusha
add
and
add
add
add
push
inc
add
push
push
arpl
mov
add
dec
xor
add
stos
jge
cs
bound
add
pop
pop
add
add
inc
and
jmp
dec
or
fsubs
pop
lods
mov
pop
sbb
mov
add
or
add
push
add
pop
pop
ret
je
xchg
cmp
imul
add
add
incl
adc
pop
out
cs
mov
pop
or
stc
cmp
or
mov
add
rcrb
mov
pop
add
repz
sbbb
std
push
jmp
aaa
push
cmpsl
decb
cmp
jno
add
fdivr
mov
pop
pop
pushf
sbb
shll
xor
mov
pop
or
mov
add
add
mov
add
pop
cmp
sbbb
jg
lret
ret
add
jmp
arpl
mov
pop
divb
add
sub
push
jmp
push
enter
sub
pop
sub
call
mov
jmp
arpl
inc
pop
push
mov
cmp
test
jg
loop
sub
mov
pop
jbe
repnz
add
add
jb
add
inc
pop
fidivs
inc
pop
ja
into
insb
test
pop
push
pop
into
movsb
pop
mov
nop
lea
push
mov
jb
add
pushf
adc
add
add
add
ljmp
mov
jmp
sbb
sbb
adc
add
push
test
cld
stos
into
dec
adc
add
and
add
lds
addr16
sbbb
add
or
add
popa
add
inc
pop
dec
or
add
fisubl
scas
cmpsl
pop
loop
xchg
cmp
mov
add
pop
nop
cmpsl
pop
shl
mov
out
fldz
es
test
les
and
add
pop
rcrb
push
mov
xchg
dec
mov
ss
lods
mov
pop
decl
fldl
ret
and
or
fucomp
jp
pop
pop
bound
add
test
pop
cmc
and
add
add
xor
add
add
sub
add
adc
test
dec
sub
ret
pop
push
add
sbbl
inc
add
cmc
xchg
sbb
daa
pop
xchg
dec
inc
add
lret
scas
outsl
nop
xchg
and
add
std
shlb
pop
out
push
pop
nop
pop
hlt
loop
sti
sbbb
jge
shl
mov
add
add
add
adc
add
push
sbb
sub
imul
add
push
add
mov
dec
sbb
pop
fnstsw
and
add
pop
pop
jbe
pop
dec
sbb
pop
shr
jno
add
add
add
int
pop
es
pushf
pushf
cld
mov
pop
ja
cmc
pop
push
add
in
xchg
stos
and
outsl
and
add
add
add
out
lahf
sbbl
lcall
mov
xchg
add
add
xchg
fs
in
xlat
dec
sbb
mov
add
pusha
add
pop
pop
fisttpl
cli
push
sbbl
ja
or
pop
cmp
add
ljmp
call
ds
pop
loop
aam
lret
xchg
test
push
add
lds
pop
adc
add
add
push
pop
sub
push
add
and
jecxz
xchg
movsb
pop
jmp
jg
pop
xchg
rcrb
mov
mov
push
xchg
pop
sbb
add
jnp
pop
push
pop
mov
mov
ja
sarl
mov
ja
pop
les
and
imul
pop
lret
shlb
pop
inc
add
push
and
add
in
mov
pop
pop
int
std
loop
mov
ds
daa
pop
push
add
sarb
cmp
jg
add
mov
popf
decl
jmp
enter
js
gs
lcall
loope
pop
jae
add
rcrl
dec
mov
pop
into
movnti
add
push
jo
add
add
fidivrs
mov
enter
fnstsw
pop
decl
out
add
xor
in
aam
mov
jmp
mov
insl
or
dec
adc
add
shlb
add
mov
dec
jmp
pop
sub
mov
add
cmpsb
pop
fsubrs
jmp
sub
pop
push
aam
pop
int3
add
cmp
sbbl
add
pop
mov
add
add
stos
shlb
and
add
test
ss
or
pop
scas
fnstsw
add
and
add
add
xchg
xlat
pop
pop
in
leave
lock
pop
pop
jnp
cld
jge
jno
add
sbb
lcall
adc
add
dec
sbb
jbe
inc
add
and
arpl
arpl
add
push
add
sbb
add
mov
jp
sti
xchg
pop
inc
add
iret
gs
mov
pop
adc
add
dec
in
sbbl
insl
push
add
out
mov
shll
pop
out
and
add
sub
mov
inc
pop
adc
add
es
or
add
sti
or
add
xchg
aam
mov
add
mov
dec
ret
pop
add
add
push
inc
add
in
pop
or
jns
inc
push
ret
pop
add
mov
pop
ds
stos
and
add
cmp
popa
add
sarb
pop
inc
pop
daa
pop
outsb
push
pop
mov
in
and
sbbb
mov
add
push
pop
movsl
pop
pop
in
icebp
lock
add
sahf
js
inc
pop
movsl
pop
xchg
pop
pop
push
cwtl
call
mov
lcall
aam
arpl
ljmp
cli
pop
and
add
shrb
rcrb
aaa
inc
add
outsl
pop
aaa
pop
xor
add
pop
sbbb
movsl
pop
nop
movsl
pop
sbb
mov
add
xor
add
roll
pop
cli
cwtl
dec
or
test
ja
inc
add
add
mov
add
out
lcall
cwtl
rol
pop
aam
pop
loopne
sbbb
add
pop
xchg
cs
test
cs
add
sub
pop
xor
out
lock
push
sbb
push
mov
dec
pop
dec
jb
add
flds
add
mov
sbb
ret
pop
out
fcmovne
testl
fnstenv
arpl
add
pop
ja
mov
pop
pop
jns
test
pop
jbe
add
loope
enter
aad
pop
bound
add
pop
pop
imul
ss
add
idivb
inc
pop
fcmovne
flds
add
pop
or
pop
pop
je
std
inc
pop
mov
inc
add
sbb
or
add
adc
add
pop
pop
mov
fdivrs
stc
xor
add
add
testb
out
mov
in
xlat
in
jp
add
out
lock
sbb
push
add
push
cmp
add
ja
pushf
jp
xchg
sub
pop
xchg
mov
fidivrs
mov
fcoms
add
sub
add
pop
sbb
adc
add
add
and
push
add
dec
sbbl
add
inc
pop
xor
add
sub
jmp
ret
pop
jb
add
add
jnp
rcrl
mov
xor
add
fstl
pop
pop
pop
in
outsl
jne
add
pop
push
add
xor
add
mov
out
mull
popf
add
cmpsl
pop
test
repz
mov
add
cli
sub
xchg
fmull
lods
cmp
sbb
arpl
add
sti
sbb
add
test
or
add
add
sub
jne
sbbb
sbb
repz
add
cmp
pop
xchg
jl
insl
rcrb
sbbl
add
add
pop
ret
pop
mov
loop
scas
cli
imul
nop
mov
dec
jae
add
neg
dec
push
in
push
imul
les
and
add
jmp
xlat
adc
es
jae
add
cmc
scas
int
roll
add
pop
jb
adc
add
test
pop
pop
add
pop
es
out
dec
mov
xor
add
add
loop
rclb
mov
pop
jmp
and
add
lods
dec
nop
push
add
dec
push
cli
cmp
pop
fwait
mov
dec
test
add
add
rorl
dec
test
fimull
pop
repnz
sub
ficompl
push
add
sbbb
cmp
add
add
in
mov
sbbb
mov
loopne
inc
pop
mov
dec
xchg
test
pop
leave
nop
pushf
sbb
add
jbe
adc
add
in
in
leave
popf
jb
add
cmpsl
pop
fbld
jle
pop
or
testl
pop
push
pop
jge
pop
shrb
sub
fsub
pop
dec
jecxz
imul
dec
jmp
loope
adc
cmc
push
movsb
pop
mov
push
add
ss
outsb
adc
add
pop
cmp
add
mov
ret
dec
das
cld
sbb
pop
push
add
or
pop
mov
mov
add
xchg
ss
add
push
add
in
imul
inc
add
test
pop
imul
mov
pop
adc
add
pop
push
pop
outsb
js
insb
jb
add
mov
jo
add
add
cmc
jbe
pop
repnz
xor
add
ja
xchg
fisttps
pop
repz
mov
pop
fdivrs
aaa
push
pop
or
sub
out
push
pop
push
mov
add
daa
pop
sub
aad
jnp
mov
les
lods
push
incb
xchg
jg
and
add
xor
mov
add
xor
imul
cli
and
add
pop
jbe
pop
fsubs
add
pop
pop
dec
scas
lcall
inc
pop
xor
push
add
lods
insl
cwtl
ret
push
ja
add
in
mov
mov
pop
iret
lods
cmp
in
in
and
add
jo
add
add
shlb
pop
imul
mov
add
cmp
add
nop
adc
add
xor
add
out
addr16
add
add
into
cli
add
xor
pop
cwtl
adc
add
jge
pop
outsl
push
lret
mov
ss
aad
loop
push
pop
pop
mov
cmp
pop
pop
push
sti
jle
loopne
loope
in
leave
xor
add
scas
sub
dec
int
test
push
add
lret
ljmp
jns
pop
and
add
pop
push
add
cmp
pop
insl
rorl
sbbb
in
jecxz
lods
xchg
fsubrs
push
add
fs
sbb
es
cmpsl
pop
ss
xchg
mov
jg
xchg
and
add
adc
push
add
pop
pop
decb
xchg
cmp
mov
push
mov
mov
in
jg
pusha
add
mov
xchg
xor
mov
pop
and
add
sbbb
add
call
pop
adc
mov
add
sbb
pop
jge
pop
in
mov
movsl
pop
and
add
sahf
test
loopne
ret
pop
imul
sbbl
add
insb
rorb
int
sub
adc
jg
pop
int3
jl
pop
push
sbb
cli
bound
add
lods
inc
add
int
and
add
fucompp
jbe
mov
stos
and
pop
pop
pop
push
pop
imul
dec
xlat
outsl
addr16
push
pop
std
ljmp
pop
add
gs
pop
adc
add
or
add
mov
daa
pop
scas
add
add
loope
pop
mov
sbb
cmc
hlt
aam
rolb
movsl
pop
das
ljmp
cmp
fsubs
add
jno
add
add
sbbb
pop
test
pop
pop
cmp
push
add
jno
add
stos
inc
pop
mov
in
add
add
jnp
mov
add
sbb
pushf
loope
and
test
and
add
add
cmp
pop
mov
out
jnp
hlt
adc
add
mov
fdivrs
adc
lret
push
add
and
add
out
mov
call
xchg
imul
repz
push
add
roll
pop
dec
test
inc
pop
push
leave
cmp
sbbb
add
fwait
jp
pop
mov
dec
jne
cmc
in
sbbl
mov
and
add
pop
int3
jmp
sbbl
pop
adc
add
repz
in
fbld
fdiv
and
add
push
inc
pop
pop
nop
ror
xchg
idivl
movsb
pop
std
push
movsl
pop
and
add
stos
loope
lret
jns
pop
mov
sub
into
bound
add
pop
jns
add
mov
pop
xor
add
out
movsl
pop
xchg
jns
pop
xor
pop
jno
add
add
pop
sti
or
xchg
sahf
repnz
leave
fcomip
xor
add
or
push
insb
and
sbbb
dec
ret
lret
pop
mov
pop
pop
adc
add
add
sbb
or
mov
les
pop
nop
out
cmp
int
rcrb
fsubs
mov
mov
pop
push
add
movsb
pop
ret
pop
lcall
jl
add
or
mov
std
push
pop
not
cmpsb
pop
sub
movsb
pop
cmp
iret
enter
ljmp
xor
add
pop
fisubs
lods
and
add
add
push
mov
add
cltd
and
add
pop
adc
add
insb
push
fs
pop
push
adc
add
pop
jecxz
xchg
adc
add
push
fimull
sbbl
add
add
add
stos
adc
add
fld
pop
mov
lret
adc
outsl
dec
xchg
xor
add
iret
add
add
add
in
dec
add
leave
bound
add
pop
sub
pop
cmc
out
push
add
test
loop
loop
pop
out
and
add
ret
pop
xlat
repnz
mov
push
mov
add
sub
js
add
in
mov
lock
arpl
add
test
add
add
pop
imul
idivl
sbb
add
inc
add
sub
pop
jmp
fisubrl
xor
testb
jno
add
pop
add
pop
dec
test
add
adc
cs
mov
cmp
pop
pop
xchg
push
add
js
push
pop
pusha
add
jns
xor
add
adc
add
aas
out
pop
push
add
mov
push
inc
pop
inc
pop
out
jp
mov
jbe
pop
dec
xchg
sbb
lret
sbbl
neg
les
xchg
cmpsb
pop
int3
pop
dec
sahf
mov
pop
inc
pop
xlat
pop
rcrl
pop
icebp
mov
and
add
pop
mov
add
int3
repz
aad
push
or
push
aad
push
dec
into
mov
mov
add
popf
movsb
pop
das
popa
add
xchg
sub
pop
push
add
xor
add
dec
push
add
add
add
jo
add
add
adc
or
pop
cmc
lea
pop
xchg
mov
test
add
into
scas
rcrb
inc
add
cmp
pop
xchg
add
out
mov
add
dec
sub
lcall
xor
add
pop
mov
sbbl
pop
or
add
add
rcrb
add
xchg
jecxz
dec
fldcw
sarb
cmp
pop
mov
add
rolb
pop
out
pop
or
add
jge
pop
fsubrl
jge
jge
insb
and
add
pop
lds
add
jb
add
jg
push
and
add
pop
pop
push
xor
add
add
sbbl
pop
lcall
add
sbb
or
leave
daa
pop
jg
add
fstps
add
shrl
xchg
mov
je
lods
int
pop
push
push
cmp
sbb
test
std
jae
add
lea
movsl
pop
popa
add
mov
pop
leave
mov
add
int3
jbe
lret
ja
pop
fisubs
add
sarb
pop
mov
test
jg
cli
mov
pop
ja
add
add
add
stos
push
add
notl
add
je
scas
gs
mov
out
je
movsl
pop
repz
inc
pop
lods
push
inc
add
jge
or
ljmp
std
lahf
je
sbbl
out
adc
add
pop
push
aas
or
outsb
mov
cmp
xor
add
add
add
add
sti
pop
or
out
scas
jnp
pop
pop
stc
movsb
pop
mov
pop
sbb
add
add
popa
add
aaa
cmp
std
imul
add
inc
add
dec
int
pop
out
cs
pop
pop
sub
add
mov
gs
xchg
push
dec
lds
pop
push
xor
add
add
xlat
cmp
pop
pop
cld
das
ds
sbb
pop
shlb
add
jge
sub
ss
jp
fsubl
in
push
stos
pusha
add
sub
mov
pop
xchg
sbb
add
ljmp
or
mov
sub
add
sub
pop
in
sub
inc
add
or
je
pop
push
sbbl
lcall
pop
dec
in
xchg
cmp
pop
sahf
adc
add
pop
fcomps
pop
clc
inc
pop
pusha
add
das
pusha
add
fwait
dec
push
add
cmp
stos
or
sbbl
jg
je
pop
jo
add
sub
inc
pop
push
add
or
aaa
lock
jp
mov
add
dec
or
test
in
sbb
dec
loop
daa
pop
daa
pop
sub
cmp
sbbl
incl
out
cli
xchg
adc
add
add
out
outsl
sarl
aaa
repnz
jle
pop
pop
dec
adc
sbbb
xchg
pop
aam
push
add
popa
add
mov
pop
and
add
pop
jno
add
pop
push
or
dec
xor
jmp
pop
jne
pop
xchg
cmpsb
pop
test
add
int3
dec
gs
ss
or
pop
cld
or
sti
sbbl
pop
push
add
js
pop
mov
dec
cld
sub
pop
and
sbb
fadd
pop
mov
push
add
sbb
mov
add
pusha
add
das
cmp
adc
add
add
pushf
jne
add
add
inc
add
mov
pop
lahf
xchg
mov
add
xchg
daa
pop
insb
cltd
sbb
pop
pop
xchg
enter
sub
mov
pop
repnz
add
rorl
fisubrs
rcrb
add
add
pushf
pop
push
mov
adc
add
pop
imull
pop
xchg
pop
pop
mov
pop
into
sbbb
jg
js
pop
call
add
aam
mov
pop
lahf
loop
jo
add
sub
clc
rcrl
pop
sub
cmc
xchg
imul
add
add
lea
pop
jbe
and
add
pop
jnp
lock
xchg
aas
mov
add
add
jecxz
pop
js
pop
pushf
ret
add
jae
add
pop
xchg
push
add
lock
mov
pop
dec
add
pop
mov
jbe
sbb
aad
xchg
pop
mov
add
sub
scas
mov
pop
insb
cmpsl
pop
mov
addr16
hlt
adc
fmull
adc
add
shlb
sbb
std
fdivr
cmp
mov
xchg
and
sub
pop
sub
lock
add
or
push
pop
sbb
negl
pop
jbe
jmp
pop
dec
jns
pop
mov
pop
mov
pop
jbe
mov
xor
add
pop
or
sbbb
add
sub
inc
pop
out
sub
jb
add
add
cmp
es
je
pop
rcl
pop
cmpsb
pop
push
add
pop
pop
sub
add
mov
jae
add
add
addr16
cld
mov
pop
cmp
mov
cmc
push
add
loope
cmpsl
pop
inc
add
popf
aas
and
insl
scas
out
push
add
pop
call
dec
mov
push
cld
xor
add
mov
cmp
pushf
cli
pop
mov
insl
jo
add
pop
jge
add
in
or
adc
add
add
jl
add
jmp
pop
mov
pop
gs
sbb
jae
add
lcall
inc
add
mov
pop
hlt
loopne
cmpsb
pop
ds
lds
mov
inc
pop
negl
and
add
loope
daa
pop
cs
pop
sbbb
pop
sub
xlat
add
add
lret
xchg
mov
pop
xchg
sar
or
add
mov
push
add
std
cmp
add
push
jle
jge
mov
dec
test
or
pop
sbb
sbb
pop
fs
mov
add
add
leave
icebp
inc
pop
dec
jae
add
add
nop
pop
pop
sbb
push
xchg
sbb
mov
sbb
push
add
mov
call
cmc
mov
pop
inc
pop
push
fwait
ret
mov
pop
es
in
pop
adc
add
sub
pop
dec
inc
add
lods
mov
pop
and
fs
cwtl
in
push
add
push
add
xlat
mov
stc
sub
pop
jne
cmpsb
pop
mov
and
add
cmp
pop
inc
pop
dec
lret
sub
int3
jnp
pop
fbstp
jae
add
xlat
movsb
pop
dec
add
add
popa
add
hlt
inc
pop
stc
shrl
cmp
add
ss
lock
add
pop
xchg
sbbl
mov
test
pop
sbb
add
pop
push
add
sub
gs
std
ret
imul
dec
pop
xor
add
add
add
mov
pop
cmc
iret
mov
int3
ss
hlt
scas
outsb
enter
sbb
outsb
add
push
pop
fmuls
add
pop
imul
add
xor
add
sub
stos
and
dec
lret
iret
lods
fldcw
cli
add
lret
pop
cmp
and
add
add
pop
xchg
mov
add
test
inc
pop
cmp
cld
shl
jle
pop
pop
mov
ficoml
add
jbe
pop
pop
das
addr16
lea
add
or
pop
pop
inc
add
lret
jnp
add
sbbb
les
pop
mov
add
sbb
les
pop
push
add
sbb
add
rcrb
add
mov
pop
insb
cwtl
xchg
loopne
sbb
jge
add
pop
cmc
stos
aas
sub
add
mov
dec
ja
sub
add
add
mov
pop
add
add
add
xchg
pop
inc
pop
ljmp
add
sbb
add
add
fsubr
inc
pop
cli
fists
pop
jo
add
sbbb
inc
pop
pusha
add
ds
js
add
sbbl
xor
add
add
lcall
leave
pop
sbb
adc
jl
outsl
or
add
fldenv
rcrb
adc
add
pop
sbb
pop
sub
push
cmpsb
pop
outsl
jecxz
and
fstps
pop
pop
adc
pop
cmp
and
add
add
loopne
aad
loopne
test
pop
out
add
add
pop
fsubp
pop
cmp
add
cs
pop
sbb
pop
mov
add
push
add
mov
dec
or
stos
sbb
int3
inc
add
sbbb
jne
cmpsl
pop
pop
cmp
add
loopne
lods
xor
add
pop
or
pop
xor
add
dec
adc
lahf
adc
add
pop
and
add
xchg
pop
sub
add
das
out
sbb
test
sbbl
cmc
add
add
add
push
pushf
ss
gs
jbe
mov
adc
add
and
add
xor
add
cmp
fsubs
add
call
sub
sbbl
xchg
mov
pop
sbb
push
sbb
inc
add
xor
add
cwtl
jp
push
add
test
pop
imul
loop
out
sbbl
add
ret
pop
xchg
mov
pop
sbb
xchg
add
outsl
mov
pop
jg
in
lods
adc
add
jae
add
xchg
push
icebp
enter
push
pop
rcrl
fwait
pop
outsb
xchg
movsb
pop
and
add
pop
ret
pop
sbb
scas
mov
hlt
test
fadd
pop
fwait
in
pop
jmp
sbb
add
in
or
sahf
jb
add
jo
add
push
lods
mov
and
add
pop
mov
add
add
add
add
les
mov
add
mov
add
add
add
test
loop
dec
inc
add
jo
add
pop
int
add
push
stos
xor
pop
inc
pop
pop
sub
or
add
ja
pop
mov
inc
pop
out
das
pop
cmp
add
push
pop
push
cmp
popf
or
pop
popa
add
pop
sbbl
shl
pop
pop
daa
pop
sbb
jns
pop
enter
adc
loopne
and
jg
testl
mov
add
add
pop
in
popa
add
les
dec
pop
in
xor
add
pop
inc
add
jns
mov
ret
pop
test
adc
add
pop
outsb
gs
scas
movsb
pop
repnz
add
es
aas
lahf
or
mov
mov
pop
test
sbb
mov
cli
fisubs
add
mov
mov
aam
fdivp
or
pop
adc
add
pop
aad
clc
insb
adc
add
lret
call
pop
rcrl
sahf
sbb
and
add
inc
pop
aad
in
test
or
ret
pop
fsubrl
lods
out
scas
cmpsb
pop
sbb
add
ja
pop
fbstp
add
and
cmovns
stc
sbb
pop
push
out
fwait
sbb
sbb
mov
add
icebp
jne
pop
in
cltd
pop
sub
cs
pop
xchg
cld
xchg
movsl
pop
cltd
mov
and
add
pop
xor
jae
add
pop
lods
xor
add
pusha
add
push
pop
mov
fisttpl
push
imul
pop
imul
or
cli
leave
insl
repnz
mov
les
adc
add
pop
jg
mov
fdivr
adc
add
sbbb
add
pop
test
pop
stos
imul
add
add
pop
cmp
cmp
dec
out
xchg
mov
add
sbbb
in
adc
add
test
mov
xchg
dec
repnz
add
mov
mov
scas
or
es
or
pop
aad
pop
mov
add
testb
push
cltd
adc
add
xchg
jl
add
pop
nop
movsb
pop
popf
aaa
sbbb
add
add
cmp
add
cmpsb
pop
leave
dec
jnp
pop
test
inc
add
out
cmp
xlat
ds
pop
or
ret
pop
push
jecxz
scas
xor
sbbb
add
enter
mov
xor
jge
add
or
out
sbbb
add
xchg
clc
xor
add
add
ret
add
int3
int3
and
add
add
cmp
add
in
stc
fcoml
add
jae
add
mov
scas
xor
add
and
add
pop
sub
cltd
sbbl
pop
pop
pop
in
cmp
enter
mov
pop
inc
add
mov
scas
dec
and
add
adc
add
stos
xchg
pop
mov
lds
pop
mov
xchg
sbb
mov
test
add
pop
std
pusha
add
leave
bound
add
xchg
or
add
test
pop
and
add
pop
jae
add
xor
add
mov
pop
pop
pop
pop
or
add
add
add
in
inc
add
push
fldcw
je
inc
pop
pop
pop
hlt
dec
or
inc
add
movsl
pop
out
xchg
mov
push
outsb
flds
add
jae
add
or
add
mov
sub
add
into
jge
pop
jnp
ja
or
add
and
add
aaa
jge
pop
in
js
mov
xor
add
pop
ja
pop
fdivrs
pop
lds
repnz
add
gs
inc
add
xor
add
add
insb
jl
add
sbb
add
gs
sbbb
add
inc
add
pop
es
dec
cmp
sarl
cmp
int
jb
add
cmp
ret
mov
jne
sbb
stos
cmpsb
pop
fisubrs
out
stos
bound
add
dec
sbb
fwait
or
adc
repz
add
xor
add
adc
add
push
dec
and
add
add
or
add
pop
cwtl
sar
cmc
pop
mov
out
sbb
push
icebp
dec
popf
add
add
scas
in
dec
inc
add
dec
push
dec
bound
add
popf
pop
fists
add
pop
or
mov
call
adc
add
xchg
lea
add
mov
add
jnp
mov
pop
mov
add
ja
pop
xchg
cwtl
inc
add
and
add
aam
xchg
inc
pop
or
fnstenv
add
push
xor
add
and
inc
add
int
fsubs
push
add
lods
jbe
add
dec
and
add
aad
pop
stos
jp
add
loop
test
add
cltd
jnp
pop
adc
add
negl
es
lcall
pop
inc
add
repnz
sub
jge
pop
xchg
aas
rclb
xchg
pop
lds
pop
or
pop
inc
add
mov
inc
add
mov
add
inc
pop
or
pop
mov
add
dec
inc
add
test
push
mov
jg
cmpsl
pop
test
mov
loope
push
add
pop
jecxz
mov
add
add
or
out
ret
pop
lcall
mov
xchg
inc
pop
rolb
add
jne
mov
lods
inc
add
bound
add
push
jo
add
xor
add
add
mov
push
pop
jecxz
jl
pop
push
pop
or
mov
mov
mov
stc
in
stos
jnp
mov
push
pop
jmp
xchg
movsb
pop
xchg
jo
add
add
sbb
add
test
add
pop
es
and
add
cltd
add
inc
add
nop
xchg
ret
pop
ja
pop
push
add
xor
int
mov
out
xchg
xchg
popa
add
popf
xor
add
sub
pop
sub
push
add
enter
outsb
filds
sub
add
sbbb
loopne
dec
xor
add
and
add
mov
adc
add
sahf
xor
nop
xor
pop
das
cltd
or
mov
xor
mov
pop
sbbb
pop
mov
lahf
push
inc
add
sbb
mov
push
add
aad
cmc
sbb
pop
push
dec
add
add
ffree
pop
fdivrl
sbb
xchg
shll
pop
jae
add
pop
xchg
in
mov
add
add
out
fdivrl
call
pop
xchg
mov
push
addr16
scas
daa
pop
cmp
add
pop
incb
stc
arpl
add
pop
rcll
add
ja
pop
shll
lods
pusha
add
xor
int3
sbb
add
add
pop
adc
pop
pop
in
mov
pop
outsl
mov
add
outsb
pop
cmp
jns
sbbb
jg
dec
sub
pop
dec
jns
lods
inc
pop
addr16
rcrl
add
in
jp
frstor
je
nop
rcrl
cmp
fs
fdiv
sbbb
mov
call
add
ret
add
mov
gs
cmp
sub
pop
fsts
xchg
les
aad
repz
add
cltd
xlat
jns
sbbb
pop
pop
pop
inc
pop
divb
add
pop
xchg
mov
popf
stos
mov
sub
int
test
pop
popf
inc
pop
xlat
loop
scas
int3
mov
inc
pop
push
sbb
wbinvd
ds
lock
push
dec
jp
in
mov
ss
pop
lds
pushf
fwait
addr16
dec
in
sub
pop
popa
add
stc
jbe,pn
dec
mov
addr16
es
push
add
dec
or
pop
movsl
pop
dec
and
add
and
add
add
add
push
mov
add
sbbl
stos
mov
fcompl
pop
push
add
add
add
loopne
push
xchg
jmp
mov
aad
inc
pop
cmp
pop
dec
jno
add
add
pop
jp
clc
add
add
add
add
mov
cmpsl
pop
mov
sbbl
push
pop
add
dec
pop
out
and
add
fidivrl
add
in
call
fcompl
sub
pop
sub
nop
ja
pop
decb
mov
sbbb
mov
pop
or
arpl
add
add
test
push
test
jg
out
jecxz
mov
inc
add
popl
nop
into
stos
lods
and
leave
test
sbb
xchg
sbbb
mov
mov
hlt
sahf
out
clc
icebp
pusha
add
loop
cwtl
or
call
sbb
add
add
cmp
or
insb
sub
push
add
imul
loope
push
pop
dec
popf
inc
pop
aad
pop
scas
add
sbb
push
pop
outsl
push
add
sub
nop
pushf
notb
mov
sbb
pop
add
add
and
adc
pop
jb
add
pop
mov
pop
pusha
add
lods
xchg
lcall
out
addr16
inc
add
adc
and
add
scas
jg
add
fistpll
cli
rclb
jns
icebp
out
cmp
add
inc
add
or
ja
adc
push
add
jl
add
xchg
and
add
add
add
repz
add
sbb
les
xor
ss
inc
pop
les
add
add
out
out
iret
cmp
pop
jne
cwtl
sub
bound
add
pop
sti
jp
ljmp
or
lahf
and
add
dec
jae
add
add
add
pop
pushf
jmp
pop
gs
les
mov
pop
push
pop
imul
in
pop
mov
add
jbe
mov
sub
iret
sub
std
movsb
pop
das
lds
add
mov
leave
outsl
or
pop
sbb
add
sbbl
add
or
outsl
scas
inc
add
aaa
fistps
ret
ret
movntq
add
iret
inc
pop
xchg
rcrl
mov
ficoml
add
fucomp
movsl
pop
jp
pop
out
incl
add
stos
jmp
add
xor
add
lret
add
pop
xlat
xchg
or
add
sbb
add
add
add
and
pop
idivl
stc
ss
xchg
push
sbb
add
jecxz
pop
sbbb
in
dec
mov
adc
add
outsl
adc
add
jmp
push
pop
mov
push
in
sub
ljmp
pop
mov
add
lock
pop
cmp
add
xor
add
into
ret
cmp
in
cmp
or
pop
push
mov
pop
adc
add
pop
jmp
add
neg
imul
xchg
xchg
in
test
push
sbbl
add
mov
sarb
imul
cmc
xor
add
pop
pop
bound
add
sbb
stc
lahf
les
stos
mov
mov
mov
pop
scas
dec
add
pop
ret
pop
pusha
add
push
stos
and
add
pop
movsb
pop
ret
add
jge
out
addr16
cmp
leave
or
call
add
mov
xor
add
inc
add
inc
add
jnp
arpl
add
in
inc
pop
sbb
inc
pop
std
pop
mov
sub
test
pop
jp
and
add
inc
pop
ret
add
test
pop
aad
mov
add
flds
ss
arpl
add
pushf
inc
add
mov
sarb
inc
pop
mov
pusha
add
pop
pop
cmp
pop
push
call
add
adc
add
and
add
pop
rcrb
add
lea
adc
add
add
dec
cltd
cmp
call
pop
mov
test
pop
add
add
pop
test
push
add
lret
pop
fstl
pop
out
jge
fisubl
pop
xchg
roll
add
push
jne
pop
xchg
push
pop
into
movsb
pop
out
xchg
pop
xchg
mov
pop
and
add
pop
cwtl
lods
push
add
icebp
std
stc
cs
iret
jg
pop
out
movsl
pop
dec
or
mov
popf
int3
insb
inc
add
push
scas
pop
sbbl
add
mov
add
dec
mov
xor
add
hlt
inc
pop
dec
loop
rorb
cmpsb
pop
mov
add
sbbl
jecxz
cmc
pop
out
adc
add
add
pop
insl
push
add
dec
rcrl
pop
cmpsb
pop
cmpsl
pop
sbb
or
add
xchg
xor
add
push
push
add
sbb
dec
jo
add
add
xchg
mov
out
into
cmpsl
pop
pop
std
mov
or
pop
sbb
cmpsl
pop
add
sub
pop
addr16
mov
xchg
or
sbb
mov
pop
dec
scas
adc
add
mov
pop
xchg
xor
add
pop
sbb
mov
xchg
and
add
add
xor
add
pop
loopne
jns
add
clc
out
movsb
pop
insl
pop
pushl
add
pop
mov
mov
pop
pop
loope
in
aad
pop
rolb
in
push
add
cmc
iret
ret
add
cld
dec
popf
jns
mov
pop
rcrb
adc
mov
in
push
add
jecxz
icebp
fiadds
add
fcoml
add
ret
mov
sub
pop
rolb
add
add
test
les
mov
add
sahf
add
add
add
cmc
jle
pop
fsubrp
rcrl
or
call
xchg
add
mov
pop
sahf
jmp
add
lret
fs
mov
cmp
clc
daa
pop
push
inc
pop
pop
push
pop
add
add
pop
or
add
dec
push
add
outsb
iret
push
xchg
push
mov
add
or
and
add
test
pop
nop
push
add
call
lahf
int3
mov
push
add
pop
pop
mov
add
iret
xchg
pushf
lds
sbb
mov
add
sti
add
add
imul
xchg
scas
testl
ja
pop
fcomip
add
add
xchg
pop
pop
dec
inc
add
mov
push
xor
add
ja
aas
outsl
mov
adc
jge
xchg
ja
add
std
cltd
das
mov
loopne
stc
and
add
pop
int3
mov
scas
add
add
add
add
cmp
add
pop
mov
nop
add
test
pop
sbb
add
add
mov
jecxz
dec
rcrb
add
xlat
cmp
add
pop
cmpsb
pop
add
add
testb
add
xor
add
cmp
add
add
add
mov
pop
push
mov
pop
stc
jmp
in
nop
sbbl
pop
add
das
pop
dec
repnz
pop
xor
add
pop
xor
add
pop
test
pop
push
xchg
dec
jle
mov
pop
shrb
test
cmp
idivb
add
dec
in
insl
xchg
push
pop
jmp
sub
add
call
pop
sbb
mov
out
sbbl
pop
push
scas
xor
pop
xor
add
fildll
or
cli
fs
cmp
pop
xor
cmpsl
pop
sub
inc
add
lret
lods
mov
xchg
sub
ret
pop
adc
add
pop
adc
add
pop
dec
jg
cmpsb
pop
lods
pop
pop
and
add
push
add
and
add
je
xchg
sbb
inc
pop
mov
push
xchg
jno
add
movsbl
pop
sub
adc
add
pop
cli
pop
or
jne
push
fisttps
js
add
push
add
mov
pop
jg
mov
pop
stos
test
stos
and
add
movsb
pop
mov
imul
mov
movsl
pop
lea
inc
add
and
add
add
add
js,pn
lock
cmp
out
add
add
in
jo
add
pop
mov
cmp
xchg
mov
add
adc
mov
pop
mov
pop
mov
mov
stos
stos
fcmovnbe
std
std
mov
cmp
and
mov
sbbl
sub
ret
pop
pop
push
add
push
ds
push
push
les
cmpsl
pop
les
fnsave
add
lea
or
and
mov
add
add
xor
add
pop
lods
or
dec
mov
and
add
add
popl
push
add
rcrb
bsr
cmp
pop
pop
sbb
fistpll
jge
push
lds
mov
cmp
add
xor
pop
ret
pop
stc
jne
add
sub
add
mov
jne
pop
push
popf
mov
scas
or
rcll
add
add
add
pop
inc
pop
xchg
xchg
pop
adc
stos
dec
addr16
jecxz
loopne
or
outsl
mov
ds
pop
int
push
fdivrs
add
jp
ljmp
lods
jbe
add
es
addr16
out
lock
xor
add
mov
mov
add
sbbl
movsl
pop
inc
add
adc
add
fldl
not
jle
daa
pop
mov
inc
add
es
mov
add
jo
add
pop
pop
sbbl
sbb
in
fs
aaa
pop
push
sub
hlt
sahf
rorl
rcrb
and
add
adc
pop
mov
add
jns
addr16
cltd
iret
shll
sbb
xor
add
pop
sub
pop
adc
add
pop
xchg
sub
mov
pop
jae
add
je
xor
add
add
je
xchg
popa
add
pop
xor
add
add
add
add
pop
mov
add
je
inc
pop
sbbl
je
jnp
and
or
add
imulb
add
add
cs
pop
inc
add
add
add
hlt
and
add
jbe
sbb
add
mov
mov
mov
clc
push
in
cld
scas
movsl
pop
jle
jno
add
pop
test
pop
mov
bnd
or
add
add
add
cmp
pop
daa
pop
aas
rcrb
lods
das
sbb
in
add
xchg
inc
add
xor
add
jl
pop
cmp
mov
leave
jle
cwtl
or
pop
stos
sbbl
sub
in
mov
xchg
jne
aaa
aaa
insl
cmp
jno
add
bound
add
sbbb
pop
adc
add
push
adc
sub
pop
sahf
xor
add
push
add
add
xchg
sub
xchg
push
fs
das
icebp
mov
negl
mov
add
push
shrb
mov
sub
pop
mov
add
sbb
add
stos
mov
cs
pop
loop
aaa
test
js
and
add
pusha
add
cmp
add
add
add
mov
pop
sub
add
xchg
jno
add
pop
push
sub
ds
sbb
pop
clc
sbb
fs
lea
add
faddl
pop
add
add
pop
mov
pop
psllw
js
pop
lds
add
xchg
cmp
loopne
sub
sbb
shl
cmc
dec
out
and
add
inc
add
stos
leave
or
pop
push
add
mov
add
mov
mov
pop
fidivrs
add
xor
add
add
test
into
push
or
sub
pop
xchg
cmc
jb
add
sub
inc
add
cmc
loop
cmp
mov
adc
add
pop
and
add
mov
filds
adc
add
pop
jno
add
pop
es
add
add
popf
xchg
ds
pop
insb
or
jp
add
lods
frstor
dec
sbb
sti
jne
mov
add
and
add
pop
pop
in
pop
push
add
lret
jb
add
pop
mov
add
scas
addr16
sti
lds
sbbb
das
movsl
pop
xlat
dec
pop
dec
mov
jae
add
add
add
sbb
dec
sbbl
sahf
inc
add
adc
push
pop
cltd
xor
sub
add
jg
mov
fcoms
pop
or
daa
pop
jae
add
push
xor
add
add
inc
add
cltd
loopne
push
add
adc
add
sub
add
add
add
push
sbb
sti
lret
push
stos
mov
add
push
sub
mov
daa
pop
dec
jp
loope
jb
add
ja
arpl
add
push
ret
pop
push
add
dec
adc
addr16
sbb
out
lcall
add
out
repnz
fdivl
add
ret
pop
cmpsl
pop
mov
add
or
inc
pop
sbbb
pop
sbb
add
in
aas
fisttpl
into
push
sub
add
neg
jne
mov
cmp
pop
jmp
out
mov
pop
cmp
pop
ljmp
lret
pop
mov
and
pop
fstps
and
add
inc
pop
lea
sbb
add
out
cmp
mov
dec
adc
add
hlt
lds
pop
cmp
pop
xchg
inc
add
and
add
stc
mov
add
dec
adc
cmp
add
push
fidivs
push
add
cmp
pop
pop
popa
add
add
add
ret
pop
cmpsl
pop
pusha
add
pushf
adc
add
scas
pop
pop
or
pop
ret
push
add
ja
add
or
sub
popa
add
cmp
sarl
pop
mov
mov
xchg
arpl
add
pop
xor
add
divb
adc
pop
gs
jmp
pop
jne
push
inc
pop
add
add
add
push
add
std
sbbb
add
and
add
add
jb
add
xchg
add
test
sub
pop
arpl
add
add
push
add
jae
add
pop
aas
jge
pop
addr16
in
addr16
rcrb
jne
inc
pop
xor
add
adc
add
pop
lret
in
scas
popf
lods
je
pop
das
or
add
mov
xchg
inc
add
xor
add
xchg
les
pop
mov
sbb
ja
arpl
add
pop
dec
pop
push
inc
add
jne
push
in
rcl
imul
imul
jg
ret
icebp
and
fldenv
into
inc
pop
cmp
add
pop
xchg
rcrl
pushf
and
add
fwait
lock
xchg
sti
push
add
add
add
sbb
add
inc
add
mov
dec
paddw
push
add
or
pop
jne
das
repnz
or
add
adc
add
daa
pop
pop
cmc
push
pop
xor
add
or
psubsw
test
hlt
pop
mov
cmp
gs
xor
add
pop
jp
add
mov
adc
rcrb
add
pop
cmp
rcrl
pop
xchg
dec
lret
xor
add
mov
ret
pop
rcrb
add
pop
nop
mov
or
and
add
ret
pop
xchg
cmp
add
test
inc
add
pop
or
sub
sahf
popf
sbb
pop
nop
pop
bound
add
pop
dec
sub
adc
add
add
add
insl
pop
sub
pop
insb
pop
cmp
mov
call
ret
cmpsl
pop
arpl
add
pop
js
cld
ret
pop
or
add
daa
pop
xchg
gs
xchg
gs
push
add
sbb
mov
xor
add
add
sahf
push
sbbb
add
or
mov
sbbl
lret
pop
mov
pop
add
add
sbbb
std
es
cltd
add
add
xchg
dec
pop
jmp
outsl
cmp
pop
lods
popa
add
mov
pop
scas
sub
push
pop
sbb
aam
add
and
add
pop
or
cmp
int
sti
and
add
add
add
dec
lahf
pcmpgtb
lock
setno
sub
add
ljmp
out
dec
sbb
popf
mov
insb
repz
sub
insb
test
push
add
cmp
dec
mov
pop
enter
aas
jmp
sti
push
add
xchg
push
inc
add
xchg
sub
pop
test
dec
pop
out
lds
pop
mov
outsb
cmp
ret
pop
lds
into
imul
add
call
pop
adc
pop
and
jne
lock
or
popf
fiaddl
lea
xor
add
out
push
dec
or
bnd
pop
ret
int3
loop
shlb
jg
lock
add
add
add
mov
ljmp
out
aas
dec
push
js
add
dec
stos
pushf
test
pop
gs
fdivr
popa
add
xor
add
nop
lock
pop
pop
lret
mov
in
insb
mov
jle
loopne
cwtl
movsb
pop
mov
add
and
add
sahf
das
loop
adc
add
push
jo
add
add
rep
jmp
add
sbb
test
push
lds
push
pop
loopne
mov
mov
add
inc
pop
push
imul
test
mov
sub
rcrb
repz
pop
fs
sbbl
add
dec
imul
add
dec
lods
and
add
pop
lods
sbb
cmpsl
pop
int3
jl
pop
dec
movsb
pop
rolb
add
cmp
sbb
mov
pop
sahf
adc
add
pop
or
add
pop
jae
add
add
jno
add
roll
stc
bswap
mov
fistl
dec
sbb
popa
add
test
inc
pop
adc
add
pop
out
cli
popf
filds
pop
dec
not
test
in
xchg
imul
dec
pushf
jo
add
add
add
add
add
jne
pop
and
pop
mov
pop
xchg
add
push
add
int
pop
imul
add
pop
lcall
lods
adc
jno
add
inc
pop
xchg
into
movsl
pop
ja
cld
push
add
decl
popf
and
aam
sbbb
fmull
dec
cmp
sub
fs
fiadds
add
pop
pop
or
into
cmp
add
out
mov
pop
mov
inc
pop
out
pop
mov
loop
lods
fidivl
pop
clc
arpl
add
pop
adc
add
addr16
mov
mov
push
pop
ss
loopne
roll
add
loope
fcmovb
pop
pop
stos
and
add
or
add
ljmp
add
pusha
add
pop
xor
add
sbbl
sub
cld
pop
push
or
add
mov
add
pop
pop
fmull
js
jp
daa
pop
and
add
and
push
sub
stos
scas
and
add
pop
clc
push
lods
dec
int
push
sar
lahf
cmp
pop
repz
stc
es
or
mov
pop
xor
add
adc
add
pop
pop
sbbl
fisubrl
lods
les
add
jmp
pop
jle
out
cld
and
add
pop
push
add
cmc
lods
repz
sahf
sub
das
outsl
ret
dec
adc
add
add
mov
scas
push
xchg
pop
xor
add
add
xchg
nop
ss
pop
fwait
sbb
add
dec
pop
imul
aas
faddl
pop
imul
leave
outsb
ss
mov
pop
rcrb
sahf
addr16
sbb
mov
dec
sbb
pop
add
hlt
testb
bound
add
sbbb
js
mov
pop
xor
test
jbe
xor
add
mov
pop
mov
add
add
jae
add
mov
or
cmp
jno
add
pop
and
add
dec
in
and
gs
and
add
dec
inc
pop
xlat
es
es
add
add
add
out
dec
bound
add
add
adc
pop
xor
add
shll
add
sahf
add
add
cmc
xor
sahf
sbb
inc
pop
and
add
add
incl
pop
or
pop
rep
je
add
jmp
mov
fisttps
pop
test
or
das
fnstcw
test
pop
jg
add
cld
mov
pop
mov
pop
mov
pop
das
cwtl
ds
loopne
pusha
add
cltd
addr16
ljmp
lods
daa
pop
inc
pop
jbe
pop
add
add
jb
add
or
add
cmc
fs
pop
pop
sbbl
mov
lods
shlb
inc
pop
fs
jge
pop
cmpsb
pop
sbb
mov
add
insl
cmp
pop
pop
sbbl
sub
fstpl
pop
xchg
pop
xor
add
push
add
gs
inc
add
out
lret
outsl
arpl
add
jmp
add
pop
push
add
inc
add
adc
add
add
dec
lods
aam
adc
add
add
and
mov
mov
add
jmp
push
add
mov
jns
and
add
sub
add
or
mov
je
xlat
dec
or
imul
mov
xchg
mov
hlt
inc
pop
cmp
add
add
add
bound
add
mull
test
push
adc
add
sbbb
push
add
inc
add
add
push
add
pop
xlat
add
sbb
clc
lret
cmp
add
add
je
cltd
stos
add
add
jecxz
xchg
add
das
lcall
aam
aad
add
sub
sub
pop
ds
je
test
pop
bound
add
push
bnd
les
aam
jge
pop
dec
lret
insb
xor
add
sti
leave
arpl
add
repz
pop
sbbl
cmpsb
pop
jl
fwait
mov
add
xor
das
bound
add
cld
push
add
lret
add
insb
and
add
fcmovu
aaa
jns
add
add
add
addr16
daa
pop
sbb
mov
into
mov
lock
jb
add
pop
dec
sbbb
xchg
add
pop
sbbb
cwtl
sub
push
jbe
pop
aas
xchg
js
pop
ret
push
pop
loop
sbbb
mov
pop
std
adc
add
xor
add
or
and
add
xchg
ss
mov
jb
add
pop
pop
add
fiaddl
add
sbbb
xor
add
int3
xor
add
add
rcll
in
outsl
jmp
add
add
add
sbb
pop
sti
xor
add
xor
add
mov
add
add
add
pop
hlt
std
push
hlt
xchg
loopne
insb
out
notl
pop
test
pop
xchg
add
add
aad
add
sbb
mov
cmpsb
pop
add
add
pop
lock
add
lods
xchg
adc
add
jp
pop
dec
sub
pop
icebp
aaa
pop
es
pop
jno
add
jge
add
inc
add
xchg
add
push
mov
and
add
pop
mulb
add
pop
jno
add
rcrl
pop
jl
pop
mov
ss
add
js
jmp
mov
mov
ljmp
int
pop
repz
add
xchg
test
int
add
xchg
lds
enter
rcrb
xchg
loop
loopne
ss
leave
adc
add
jg
add
add
add
dec
add
or
mov
test
shlb
add
add
jbe
mov
pop
xchg
push
jno
add
and
add
ljmp
repnz
sbb
add
add
mov
jbe
xor
sbb
pop
sub
mov
sti
inc
add
lcall
add
shl
loopne
imul
lods
push
sbbl
push
clc
sbb
sbb
cmp
pop
xor
add
fdivr
jp
leave
lock
and
sahf
add
add
ljmp
lahf
jae
add
lret
out
adc
adc
add
mov
and
add
add
push
xchg
in
out
ja
jo
add
xor
add
add
jo
add
mov
repnz
add
cli
sbbl
add
mov
add
add
pop
push
push
add
fsts
mov
fcmovnu
pop
pop
cmpsb
pop
xchg
dec
mov
aaa
cltd
stc
cmp
outsl
clc
sub
fidivs
imul
pop
cmp
lahf
icebp
loope
addr16
pop
in
fucomi
fisubrl
int3
push
add
fs
dec
sub
pop
pop
das
adc
add
mov
pop
or
aas
lds
bound
add
add
add
jecxz
sarl
xchg
daa
pop
add
dec
jecxz
fs
jle
sbb
add
add
repz
pop
sbb
pop
dec
repnz
pop
fcomi
mov
outsl
in
and
add
jecxz
xlat
lret
ja
jnp
pop
out
push
add
dec
mov
pop
cmp
add
in
fs
push
es
xchg
in
test
pop
sbbl
insb
add
add
ljmp
ret
pop
stos
push
or
cwtl
jg
sbbl
pop
mov
lds
add
mov
jg
pop
aam
adc
add
pop
sub
add
cmp
xchg
mov
push
add
in
pop
sbb
jmp
xchg
add
add
sub
pop
xchg
jp
fstps
push
bound
add
or
add
sbb
pop
cwtl
cwtl
xor
add
pop
aaa
push
les
add
leave
mov
das
stos
mov
fwait
int3
xor
add
add
inc
add
adc
enter
add
ds
add
add
mov
add
jae
add
cmp
cld
mov
ja
insb
sbb
jp
mov
imul
cld
test
xchg
in
and
imul
pop
dec
inc
pop
dec
clc
adc
jne
jns
push
add
adc
lea
add
pop
mov
inc
add
adc
add
pop
inc
pop
in
dec
mov
sbb
dec
add
add
pop
dec
stos
fcomps
adc
outsl
xchg
push
loope
xchg
fbld
pop
aas
stos
mov
add
stos
sbb
dec
pop
dec
bound
add
mov
sub
add
mov
popa
add
test
push
xlat
stc
cwtl
rcll
jns
pop
daa
pop
popa
add
sub
add
sbb
add
mov
add
inc
add
ljmp
add
out
add
push
lods
fnsave
add
pop
xchg
mov
pop
cwtl
adc
add
mov
xor
add
pop
lea
pop
lahf
movsl
pop
outsl
xchg
push
pop
pop
popf
rcrl
push
bound
add
jle
pop
xchg
pop
pop
pop
daa
pop
fs
pop
mov
pop
cmp
lea
add
cwtl
sbb
pop
jge
add
loopne
jnp
add
or
jb
add
adc
add
push
add
pop
dec
jae
add
sub
pop
cmp
xor
add
add
add
adc
add
add
lret
pop
nop
imull
scas
adc
add
pop
and
sub
add
stc
fdivl
hlt
mov
pop
and
add
xor
add
add
dec
mov
das
fbld
xchg
mov
push
cmpsb
pop
push
add
sbbl
and
add
leave
popa
add
jge
inc
pop
adc
jns
lret
cmp
or
nop
dec
jecxz
mov
push
int3
mov
icebp
mov
dec
adc
add
daa
pop
jno
add
fisttps
rcrb
iret
lock
test
loop
fwait
popa
add
shll
xchg
push
dec
and
aad
mov
outsb
pop
scas
xchg
adc
jecxz
ss
adc
pop
nop
pop
leave
jecxz
rolb
pop
pop
and
add
mov
inc
pop
xchg
sub
sub
mov
xchg
clc
inc
pop
ret
adc
out
inc
pop
fwait
mov
pop
jne
shll
add
cmp
pop
mov
pusha
add
push
clc
ret
pop
xlat
insl
mov
pop
mov
fadds
stos
mov
jg
pop
pop
pop
daa
pop
es
jmp
add
in
fildl
add
or
inc
add
sbb
pop
ret
lods
mov
sbbb
lret
jl
scas
pop
adc
pop
mov
int3
in
lods
push
adc
add
lods
cmp
ret
xchg
into
xor
add
jp
pop
or
pop
pop
cwtl
jle
add
mov
out
jmp
jge
ret
add
fs
stos
icebp
jl
pop
cwtl
inc
pop
inc
add
cld
roll
pop
pop
dec
in
mov
out
scas
cmp
pop
mov
cmp
lds
nop
int3
pop
pusha
add
les
pop
std
mov
lea
add
mov
inc
pop
mov
add
insb
push
hlt
mov
pop
push
pop
js
add
pop
sarb
jg
pop
add
or
je
pop
mov
pop
shrb
add
pop
fidivl
mov
sbbb
mov
pop
xor
add
mov
inc
add
sti
mov
inc
add
add
add
mov
pop
mov
pushf
pop
pop
add
add
fwait
mov
es
push
negl
pop
jb
add
lea
pop
mov
add
and
adc
add
add
jne
pop
and
add
add
cmp
cmc
mov
ljmp
mov
sbbl
add
xor
add
or
add
jo
add
insb
and
xor
mov
xchg
pop
stc
mov
add
lcall
cmp
pop
ss
icebp
jae
add
pop
neg
dec
mov
sti
jb
add
lods
cmp
pop
pop
sub
add
inc
add
je
add
scas
mov
shlb
pop
lock
add
add
xor
add
sbb
dec
adc
add
add
add
inc
add
rdmsr
add
ss
and
add
pop
sub
pusha
add
xchg
rcrb
icebp
pop
fcmovu
imul
add
sub
mov
mov
ret
pop
ljmp
add
mov
sbb
inc
add
outsb
push
add
out
mov
pop
iret
push
cli
lea
mov
inc
add
int
xchg
int
pop
add
add
mov
push
inc
pop
aaa
repnz
rep
ds
mov
call
aad
pop
or
dec
rcrb
add
movsb
pop
loop
jg
pop
jg
lods
push
pop
or
divb
pop
out
xchg
inc
pop
jnp
testl
and
outsl
jno
add
mov
pop
pop
xchg
es
inc
pop
inc
pop
lahf
jnp
insb
test
jmp
repz
loopne
out
ss
cmp
ror
xchg
add
dec
mov
pop
mov
filds
add
in
hlt
xchg
cmp
pop
fcoml
lret
xchg
dec
test
pusha
add
pusha
add
lods
push
add
js
add
push
and
add
enter
pop
xor
add
dec
and
add
js
add
testb
insl
gs
inc
add
jo
add
add
insl
sbb
pop
btc
pop
in
and
add
mov
add
dec
jnp
jge
or
pop
sarb
das
and
add
sub
add
cs
pop
loopne
aaa
insl
call
pop
jns
pop
pop
fwait
xchg
in
fbld
cltd
hlt
ss
cltd
repnz
dec
movups
add
popf
ljmp
mov
add
jge
fwait
iret
mov
push
add
dec
and
add
sbb
ss
pop
xchg
xchg
pop
mov
es
jl
pop
in
pop
aam
fldln2
jno
add
inc
add
fisubrl
pop
in
test
inc
add
lods
into
inc
add
rcrb
pop
adc
add
add
lret
sbb
mov
xchg
ret
add
out
pop
jl
into
outsb
hlt
test
in
cmp
rcrb
sbb
add
pop
inc
add
mov
mov
sbb
pop
rcrl
xor
add
inc
pop
sub
pop
inc
add
push
pushf
pop
pop
inc
pop
ret
mov
cltd
mov
pop
jp
pop
push
push
add
xchg
rcrl
add
loope
cld
jmp
push
add
bound
add
js
mov
or
add
in
repnz
xchg
outsb
popf
jbe
add
rep
jge
sahf
or
inc
add
jle
jp
add
sti
stos
inc
pop
jp
jae
add
insl
clc
lods
cmpsl
pop
sub
push
mov
add
fwait
inc
add
aaa
repz
ljmp
mov
pop
fstl
add
ret
mov
lcall
bts
xchg
mov
add
out
das
int
es
jg
stos
repz
cmp
sub
adc
add
lea
pop
fadds
or
jb
add
or
and
add
pop
or
jb
add
pop
inc
add
mov
ja
pop
mov
mov
cmp
add
dec
inc
pop
das
push
or
jnp
inc
pop
cmp
imul
mov
xchg
xor
add
fwait
repnz
pop
mov
add
push
add
mov
ds
pop
scas
push
dec
dec
jg
or
add
adc
xor
add
popf
jns
inc
add
add
test
mov
lds
jne
pop
jge
add
scas
icebp
cmc
jo
add
pop
iret
pop
movsl
pop
stos
xor
add
ljmp
adc
add
mov
add
test
pop
cmp
add
and
add
ja
outsb
jmp
fsubl
add
and
add
jns
add
add
pop
push
mov
pop
stos
bound
add
jns
in
dec
jge
add
sbb
sbb
pop
js
sti
cmp
or
pop
or
push
add
icebp
jl
pop
add
sbbb
xchg
sbb
dec
inc
pop
sub
scas
repz
push
mov
inc
pop
jl
add
xchg
add
test
jmp
cld
divl
add
ret
pop
mov
pop
cmp
add
xor
add
xchg
mov
xor
xor
add
jmp
js
pop
cmp
add
ljmp
dec
stos
nop
push
add
mov
add
xchg
mov
pop
sar
dec
pusha
add
icebp
jne
sub
add
fidivrs
rcrl
ret
inc
add
jns
ja
add
lods
sbb
and
add
lcall
hlt
test
sbbb
pop
inc
add
jmp
mov
stos
sub
adc
pop
cmp
add
in
xchg
mov
add
sbb
ljmp
pop
frstor
add
es
sbb
fst
lret
adc
aam
add
add
add
pop
ret
pop
adc
add
pop
sbb
jecxz
and
add
cmpsb
pop
int3
mov
add
fcmovnbe
mov
lret
pop
mov
pop
xor
add
hlt
xor
aam
mov
jmp
ficoms
scas
test
pop
shl
pop
pop
pop
push
sbb
mov
pop
testl
add
sub
inc
add
dec
adc
add
add
mov
pop
sbb
sub
sub
add
mov
add
add
pop
add
add
add
add
leave
push
gs
adc
shrl
ffreep
pop
mov
ss
int3
mov
bound
add
pop
mov
pop
mov
add
cwtl
xchg
pop
ficomps
add
adc
push
mov
addr16
popf
ljmp
pop
mov
jle
add
int3
mov
pop
sbb
movsb
pop
or
add
loope
inc
add
mov
daa
pop
pop
jae
add
sub
sahf
sbb
pop
xchg
push
add
int3
pop
pop
push
add
add
adc
add
inc
pop
push
add
inc
pop
or
outsb
sbb
pop
dec
movsb
pop
xor
shr
dec
sub
pop
imulb
sbbb
mov
je
add
sub
pop
sub
mov
add
lret
mov
inc
add
sti
arpl
add
add
sbb
xchg
stos
xchg
sbb
ljmp
into
shlb
add
lds
into
push
sahf
xlat
and
add
pop
pop
sbb
ret
add
mov
and
mov
scas
setns
add
pop
or
mov
sub
les
cltd
in
and
add
bound
add
or
cmp
pop
out
cltd
or
int
inc
pop
and
add
sub
dec
lahf
or
jmp
pop
fcmovb
pop
fptan
push
xchg
and
add
clc
xor
add
sub
pop
int
pop
xchg
pop
sbb
test
aam
mov
push
lods
leave
dec
add
add
push
lods
add
pop
or
add
xor
add
aaa
pop
sub
stos
sbbl
add
loop
adc
add
test
pop
lcall
jnp
add
add
movsl
pop
dec
sbb
push
xchg
dec
inc
add
dec
clc
mov
pop
lds
add
xchg
jne
add
hlt
xchg
xchg
sbbb
adc
add
add
pop
mov
pop
mov
inc
add
enter
mov
pop
pop
inc
pop
xchg
adc
add
add
add
add
mov
pop
test
adc
pop
shr
sub
pop
xor
add
lds
nop
inc
add
clc
dec
test
pop
arpl
add
das
lcall
inc
pop
ljmp
add
add
mov
add
pop
addr16
addr16
movsb
pop
push
add
loopne
jb
add
add
cmp
add
and
add
sti
jle
aas
add
add
sbb
pop
rcrb
xor
jbe
clc
int
add
mov
jg
ret
jns
lods
mov
daa
pop
cwtl
mov
pop
xor
add
add
ret
jge
add
jbe
rcrb
pop
fdivs
pop
xor
push
xlat
in
mov
add
enter
mov
pop
lods
dec
rcr
cmpsb
pop
mov
pop
lea
pop
jo
add
add
sub
pop
mov
aam
pop
dec
fisubrs
jo
add
add
stos
jns
add
add
add
test
mov
mov
cmpsl
pop
mov
out
push
cltd
fisubrl
or
add
ret
pop
cmpsl
pop
or
push
mov
add
ja
outsb
nop
cmp
stos
dec
push
es
fs
xor
add
add
mov
leave
cmp
pop
cli
loopne
fwait
add
add
mov
call
adc
add
xor
add
fcomp
fcompl
pop
and
hlt
je
mov
add
push
mov
add
shll
mov
dec
test
cmc
outsl
fbstp
add
or
iret
mov
add
mov
and
add
pop
imulb
jae
add
pop
mov
inc
add
pop
loopne
in
or
pop
jae
add
cmp
add
add
jno
add
gs
jo
add
sbb
test
in
jmp
sbbl
push
imul
add
mov
sub
push
pop
scas
cmpsb
pop
xchg
jmp
mov
pop
iret
enter
push
test
jl
add
jns
add
jae
add
add
mov
add
xchg
call
insl
xor
add
add
stos
scas
gs
inc
add
xchg
cmp
insl
in
addr16
stos
pop
fldcw
jmp
and
loope
inc
pop
test
fdivs
in
xor
add
add
add
cwtl
aam
pop
pop
dec
xor
add
pop
repnz
pop
mov
insl
pop
pop
or
neg
jle
add
jp
adc
add
add
push
mov
gs
lds
pop
jb
add
add
pop
std
sub
pop
pop
mov
pop
and
add
pop
mov
cmp
sub
pop
pop
lret
adc
add
pop
pop
ret
ret
pop
xchg
mov
sub
cli
fisttpll
rcrl
pop
and
add
inc
add
sbb
add
xor
add
pop
aas
lea
sbbl
push
pop
fwait
sbbl
in
push
add
pushf
rolb
fldt
ret
mov
add
addr16
test
pop
pop
pop
lods
sub
add
aam
and
add
add
pop
add
add
pop
ret
pop
pop
imul
add
hlt
fdivrl
and
rcrb
jg
add
mov
xchg
rcrl
mov
add
loope
mov
sti
or
ds
mov
pop
xchg
lock
pop
loope
adc
scas
lcall
es
out
push
add
pop
arpl
add
mov
in
insl
sbb
mov
sub
inc
add
ljmp
cli
es
xor
pop
inc
add
loopne
aam
rcll
inc
pop
xchg
into
jb
add
fwait
sub
pushf
rcrb
add
add
dec
adc
add
gs
into
jl
pop
ja
adc
add
fs
add
add
stos
mov
add
daa
pop
pop
push
add
lds
lcall
mov
aaa
jbe
pop
jo
add
cmc
cwtl
test
xchg
sbb
add
or
pop
call
scas
cltd
mul
pop
push
pop
sbb
cmp
adc
add
add
add
leave
fildll
pop
push
pop
mov
sbbb
mov
popa
add
pop
lcall
cltd
mov
add
jns
and
add
jmp
jbe
mov
add
imul
mov
cmp
pop
pop
sub
mov
lds
pop
pop
stc
add
add
cltd
sti
pop
pop
adc
add
cmpsb
pop
pop
roll
mov
cmp
lds
add
adc
add
pop
nop
sub
jnp
fs
lcall
add
iret
xor
add
add
jo
add
cmp
pop
xchg
add
add
outsl
pop
sti
pop
add
cmp
icebp
adc
add
stc
sub
fnstcw
imul
adc
or
dec
mov
pop
adc
add
add
mov
wbinvd
mov
fwait
nop
cmpsb
pop
dec
test
add
repz
pop
pop
fdiv
les
stos
and
add
add
mov
adc
add
pop
push
pop
jnp
add
xchg
int3
jmp
pop
mov
add
jl
pop
mov
in
je
fs
and
add
loop
inc
pop
fistl
add
sbb
sbb
loop
jne
mov
add
int
jne
add
jg
xor
add
pop
mov
add
mov
dec
cltd
cmc
out
scas
adc
add
add
inc
pop
push
xor
add
insb
push
sbbl
jl
sbbl
pop
stos
jbe
push
and
add
add
add
add
pop
mov
test
pop
xor
mov
add
movsb
pop
jae
add
push
mov
es
push
xchg
fwait
xor
add
lret
or
jb
add
add
jmp
pop
mov
pop
sbbl
add
pop
fs
sbbl
add
sbbl
leave
popa
add
cmp
or
pop
test
pop
clc
mov
pop
out
adc
add
mov
add
dec
pop
inc
add
adc
add
cmp
pop
daa
pop
inc
add
fildll
pop
les
adc
adc
add
jmp
fstps
cmp
frstor
pop
scas
push
add
adc
add
add
dec
add
add
adc
xchg
and
add
add
inc
pop
enter
jecxz
pop
or
add
add
shlb
pop
lods
dec
push
mov
mov
aas
push
add
loopne
mov
jp
push
add
lds
pop
push
adc
aad
cmp
cmp
repnz
loop
popa
add
mov
push
fs
adc
dec
stos
jl,pt
clc
push
jmp
lret
iret
pushl
add
pop
and
sahf
mov
push
stos
pop
in
jo
add
sarb
xor
add
icebp
and
add
push
add
pop
lds
adc
add
sub
pop
out
bound
add
pop
cmp
add
add
push
scas
mov
inc
add
lret
pop
repz
add
sbb
bnd
fwait
pop
pop
and
add
adc
add
add
add
pop
pop
fwait
cltd
mov
add
lea
add
mov
pop
mov
add
add
push
in
add
add
add
push
add
mov
or
add
add
clc
movsb
pop
negl
out
addr16
jnp
fnstsw
mov
add
lods
jl
push
mov
push
add
rcrl
xchg
pop
xor
add
add
pop
pop
ds
sub
add
cmp
add
xor
add
fdivrs
in
addr16
push
aaa
pop
and
add
add
clc
pop
fidivrs
lods
test
test
rorl
pop
sbb
int3
jl
add
sub
add
xchg
sub
negl
add
js
pop
or
sbb
sbbb
mov
sbbb
pop
push
add
or
fidivs
push
pop
cmp
xchg
sbb
mov
jnp
shll
add
aaa
jge
pop
das
push
pushf
push
add
imull
xor
add
add
cmp
jns
mov
add
mov
pop
jecxz
fmuls
sub
mov
ror
out
std
push
std
in
imul
cmc
imul
je,pt
stos
xchg
jb
add
pop
xor
add
push
add
and
add
inc
pop
bound
add
push
add
js
add
pop
fsubl
or
into
ss
jno
add
leave
out
fdivl
push
mov
gs
inc
add
dec
lret
lahf
sub
add
add
xor
add
add
push
add
add
add
test
pop
jmp
pop
loope
je
pop
ja
add
sub
pushl
mov
adc
add
aas
ret
ss
pop
pop
xchg
test
test
pop
in
xchg
rcrb
pop
inc
add
add
add
ss
pop
ja
sbb
jge
pop
dec
push
cmpsl
pop
lret
push
add
sbb
pop
enter
and
mov
pop
pop
in
dec
das
sti
cmp
leave
cld
cmpsb
pop
outsb
xchg
shl
iret
daa
pop
cmp
pop
mov
add
pop
mov
in
and
add
pop
in
push
scas
stos
in
repz
imul
push
xchg
pop
xchg
cmpsl
pop
cmp
add
pop
pop
shll
add
pop
jl
cli
xor
xchg
add
add
add
mov
jae
add
mov
add
add
fmul
aas
inc
add
push
and
add
add
add
negb
pop
out
pop
sbb
sub
pop
cmp
adc
jle
pop
addr16
sbbb
add
aad
add
jnp
fiadds
mov
pop
mov
pop
lds
cmp
mov
out
les
pop
lahf
shll
xor
sbb
mov
rcll
add
inc
pop
cwtl
lods
pop
pop
inc
pop
xchg
inc
add
sahf
xchg
ret
pop
shlb
add
pop
pop
sub
rolb
xchg
addr16
int3
inc
pop
stos
and
add
pop
hlt
loopne
in
mov
add
add
add
add
jle
mov
add
ret
pop
dec
jno
add
inc
add
add
add
xchg
js
pop
pop
stc
sbb
sbb
jecxz
jecxz
mov
add
add
add
xchg
int3
sub
imul
popf
sub
les
int3
pop
sbb
inc
pop
xlat
jle
add
adc
add
nop
xchg
sbbb
add
pop
pushf
push
mov
dec
sub
add
add
add
xchg
in
xchg
test
jmp
xor
add
add
pop
adc
add
add
pop
icebp
adc
add
add
movsb
pop
push
pushf
ljmp
js
pop
and
add
sbb
add
push
sbbb
add
movsb
pop
add
add
sub
pop
xchg
push
leave
adc
lds
les
add
push
add
clc
mov
dec
jb
add
stos
daa
pop
xor
add
cmp
xchg
mov
add
pop
jnp
es
dec
and
add
add
ds
add
jg
add
fwait
repnz
xchg
imul
loope,pn
scas
push
pop
mov
loop
mov
pop
ret
pop
or
mov
ss
ret
pop
nop
leave
xor
add
pop
mov
test
push
add
jp
and
push
in
in
aad
sbbl
mov
pusha
add
inc
add
pop
cmp
pop
mov
pop
mov
pop
pop
xchg
das
lods
and
add
aas
aad
pop
in
add
add
add
dec
inc
add
mov
arpl
add
bound
add
pushl
add
shrl
in
fisttpll
popf
loopne
fcomi
movsl
pop
pop
xchg
or
outsl
dec
fistl
inc
add
pop
jle
icebp
adc
add
add
push
and
add
mov
mov
pop
mov
in
mov
fidivl
add
inc
add
push
movsl
pop
loope
inc
add
fcom
jl
pop
pop
faddp
pop
jno
add
add
pop
pop
out
mov
add
add
aas
pop
fsubrs
add
pop
outsl
xor
addr16
add
and
add
add
pop
sahf
push
ja
nop
les
pop
jmp
add
leave
mov
pusha
add
mov
pop
pop
jmp
push
mov
pushl
dec
popf
inc
add
mov
or
loop
xchg
sbb
inc
add
lahf
xchg
or
add
add
sbb
pop
lret
xor
add
add
enter
sub
dec
rclb
stos
dec
arpl
add
repnz
test
push
add
bound
add
fwait
pop
int
pop
xchg
push
inc
add
mov
add
add
pop
fcoml
repz
mov
pusha
add
lods
sbbl
leave
push
push
or
push
pop
jle
sub
test
add
mov
pop
pop
movsl
pop
jns
lods
nop
popa
add
or
push
cmc
testb
lcall
add
add
jae
add
jnp
pop
jae
add
jp
mov
pop
hlt
or
sub
sbb
adc
add
pop
jl
pop
add
add
push
jne
in
aam
in
push
movsl
pop
test
mov
add
nop
out
sahf
dec
mov
pop
nop
ret
xchg
adc
add
movsl
pop
mov
ret
pop
adc
add
sti
dec
push
pushf
inc
add
fistpll
mov
pop
and
stos
cmpsb
pop
push
lret
mov
add
and
pop
lds
add
add
jae
add
add
fcmovnu
inc
add
incl
add
jl
call
out
lods
pop
or
pop
cs
out
dec
jl
daa
pop
add
adc
add
testl
cli
scas
and
add
sub
pop
and
clc
sahf
mov
push
lahf
sbbl
int3
or
test
pmaxsw
sbb
add
mov
add
aaa
fiadds
and
add
mov
mov
cs
mov
pop
mov
in
push
std
add
add
add
movsl
pop
sub
dec
xlat
sarl
push
pop
mov
pop
cwtl
xchg
xchg
pop
pop
push
pop
xchg
faddl
pushf
pop
fbld
pusha
add
mov
add
jl
mov
sbb
xor
add
inc
add
cltd
leave
pop
fimull
add
lods
gs
mov
sbbb
jne
xor
pop
jmp
imul
add
sbbb
pop
mov
xor
add
mov
jae
add
add
push
add
negl
cltd
cmp
sbb
inc
pop
iret
rorl
test
pop
movsl
pop
mov
jmp
jl
add
pop
cmp
add
pop
scas
sti
mov
ja
pop
or
pop
sahf
push
pushf
popa
add
lea
mov
adc
add
insl
xchg
insb
outsl
pop
cmc
sbb
add
adc
cmc
in
pop
jp
xchg
adc
add
cmpsb
pop
cmp
ret
pop
mov
arpl
add
jo
add
stos
ljmp
jbe
mov
add
ja
push
add
js
popf
mov
pop
push
pop
mov
lahf
or
add
mov
pop
jle
add
add
pop
loopne
push
add
and
inc
add
inc
add
je
mov
add
pop
dec
cmp
xchg
add
add
loopne
jmp
xchg
in
lock
mov
add
xor
sti
adc
add
pop
fs
cmp
ret
pop
inc
pop
mov
dec
push
pop
mov
test
add
mov
add
mov
add
mov
mov
push
repz
add
repnz
pop
mov
sbb
pop
jbe
pop
scas
stos
imul
xchg
out
fisttpl
xchg
jbe
xchg
push
adc
add
pop
add
cmpsl
pop
add
add
pop
mov
stos
popa
add
push
outsb
inc
add
and
repnz
dec
test
add
add
sub
imul
cmp
adc
add
test
pop
mov
add
sub
pop
hlt
pop
mov
repz
int
sbbb
jecxz
sub
pop
movsb
pop
daa
pop
cmpsb
pop
popa
add
jnp
xchg
jmp
add
inc
add
adc
cmpsl
pop
nop
lods
mov
add
inc
add
jle
sti
stos
inc
pop
cmp
std
inc
pop
adc
add
add
pop
ds
mov
add
and
add
dec
jae
add
xchg
adc
add
clc
xchg
pop
lsl
add
or
mov
xchg
pop
pop
push
add
mov
pop
pop
push
add
mov
lea
add
outsl
jno
add
add
dec
pop
mov
cs
inc
add
in
add
add
dec
cltd
dec
xlat
stos
rcrl
mov
ja
mov
xchg
das
popa
add
xor
add
pop
mov
je
add
add
sahf
xchg
sbb
mov
add
xor
adc
add
mov
or
aad
pop
adc
pop
xor
add
add
out
ret
pop
xor
add
push
pop
fistpl
pop
push
add
pop
dec
jge
sbbl
aaa
push
add
pop
in
pop
pop
sub
mov
add
jb
add
dec
cmpsl
pop
jnp
sbb
add
add
jl
pop
xor
sbb
int3
psrlq
jp
pop
sbbb
pop
stos
ret
pop
mov
popf
mov
repz
add
dec
push
add
out
lcall
pop
pop
sahf
enter
jp
inc
add
clc
cmp
fiaddl
and
add
icebp
test
inc
add
test
in
dec
fs
sbb
add
pop
adc
das
scas
rcrl
and
add
jmp
pop
xor
mov
into
stos
push
add
outsb
mov
leave
and
add
sbbl
test
push
sahf
xor
add
add
pop
jb
add
pop
xchg
ljmp
ljmp
push
aam
add
ret
pop
sub
dec
repz
mov
pop
call
xor
add
hlt
filds
pop
xchg
push
or
rorl
push
xchg
or
aad
add
sahf
mov
mov
into
inc
pop
xor
add
aam
aas
gs
pop
pusha
add
push
add
push
add
mov
pop
mov
stc
adc
pop
jg
pop
fmuls
pop
lcall
xchg
in
inc
pop
jge
loop
sbbb
inc
add
xor
or
pop
stos
popa
add
add
add
pop
enter
add
stc
add
add
push
pop
pop
fadd
pop
push
sbb
pop
or
add
pop
pop
repnz
pop
mov
mov
add
mov
loopne
mov
add
push
add
xor
add
add
mov
add
push
add
dec
mov
pop
int
push
add
xchg
jne
jae
add
add
sub
and
add
add
lret
punpckhwd
incl
add
bound
add
add
sbb
add
or
aam
mov
add
add
add
add
cmpsb
pop
push
pusha
add
icebp
add
add
out
repz
add
mov
cltd
jecxz
pcmpeqd
add
add
fs
out
std
in
xchg
jle
xor
add
loop
iret
adc
pop
mov
jbe
push
add
gs
sbb
or
into
mov
and
add
cmp
inc
pop
push
add
jmp
sub
add
fsts
mov
pop
lret
add
jge
fs
in
sbb
add
xor
xor
add
add
movsl
pop
cltd
mov
call
pop
jbe
add
or
outsb
scas
mov
pop
out
movsl
pop
fsts
jp
scas
mov
cmc
xchg
repz
push
pop
pop
out
inc
add
sub
in
jno
add
dec
enter
loopne
outsb
cld
insl
rcrb
pop
dec
aas
jae
add
push
add
push
jno
add
add
cmpsb
pop
sub
aaa
inc
add
mov
adc
add
add
push
pop
dec
cltd
in
insl
int3
add
add
pop
jno
add
mov
inc
pop
daa
pop
dec
ljmp
mov
fstl
add
pop
adc
gs
xchg
fiaddl
pop
rorb
ja
sub
pop
xor
add
add
pop
rolb
mov
add
add
jl
cmp
hlt
out
ja
adc
add
out
adc
add
arpl
add
icebp
fisubrl
add
dec
in
adc
add
bound
add
add
add
jg
mov
jl
add
xor
add
add
or
rcrl
stc
push
xor
add
add
add
call
adc
add
rcrl
adc
add
sub
add
jnp
push
and
add
stc
imull
pop
cltd
and
add
pop
lds
jmp
rcrb
pop
lods
mov
add
mov
rcrb
pop
jne
xchg
jecxz
mov
stos
xlat
and
or
pop
mov
mull
sbb
mov
lret
es
aas
xchg
loope
mov
cwtl
in
mov
lock
add
pop
outsb
lcall
rcrb
cltd
pop
pop
xchg
adc
add
add
adc
and
add
push
popa
add
aad
stos
cmp
std
negb
stos
lret
adc
sub
add
cltd
fs
popa
add
loopne
fmul
or
pop
ds
push
pop
aaa
adc
add
imul
xor
add
xchg
mov
mov
add
add
pop
sbb
add
inc
add
mov
pop
ret
pop
add
ljmp
pop
push
adc
add
mov
inc
add
imul
push
add
mov
fiaddl
push
push
add
mov
add
add
int
out
xor
add
lods
cltd
xchg
rcr
adc
mov
inc
pop
push
enter
add
cmp
lret
popa
add
outsl
jbe
lea
mov
sbb
sbb
add
or
add
mov
pop
mov
xor
add
movsb
pop
mov
add
inc
pop
fists
add
pushf
or
add
push
push
xchg
dec
cmp
xlat
cmp
and
sub
add
into
pop
lret
rep
push
gs
sbbb
sbb
push
add
outsb
mov
out
repnz
dec
ljmp
inc
pop
xor
add
add
fbld
add
test
cltd
mov
pop
inc
pop
jo
add
pop
out
fsubrs
adc
dec
out
nop
in
in
jo
add
add
add
into
inc
pop
stc
inc
pop
sub
sbbl
lods
mov
adc
jle
add
cltd
test
pop
fnsave
fiadds
pop
stos
pop
cwtl
jae
add
jne
jg
and
add
outsl
pop
clc
pop
add
add
jo
add
add
int
inc
pop
sahf
or
ss
std
fmull
pop
and
add
or
iret
in
jg
pop
sbbb
xor
add
add
das
jmp
adc
add
pushf
bound
add
dec
out
add
add
cltd
rcrl
add
and
add
dec
mov
es
test
or
dec
popf
mov
pop
sbb
push
add
xchg
pop
lcall
pop
int
xchg
jns
std
arpl
add
pop
sub
add
pop
inc
pop
lods
inc
pop
movsl
pop
xchg
adc
or
int3
ds
jp
sbb
jge
push
add
pop
jp
pop
cmp
add
repz
add
nop
lahf
mov
je
pop
ljmp
sti
fcmovbe
xlat
cmpsb
pop
and
arpl
add
pop
add
xor
add
pop
mov
and
add
sbbb
pop
or
push
add
jno
add
stos
mov
hlt
jl
stos
cld
and
add
push
ss
jno
add
or
push
insb
or
pop
lret
lock
dec
and
add
mov
inc
pop
inc
pop
mov
mov
sub
mov
dec
pop
out
cltd
adc
pop
mov
add
fisttpl
and
add
add
lret
or
hlt
cwtl
enter
leave
sub
cmpsl
pop
daa
pop
or
lret
in
repz
add
sub
add
jbe
push
pop
inc
add
cmp
jle
inc
add
lea
adc
add
pop
jno
add
add
movsb
pop
test
push
cmp
add
sub
add
mov
add
jne
fs
stc
mov
mov
mov
ja
add
pop
lret
pop
sbb
scas
adc
add
adc
add
xchg
scas
sti
cld
loope
cld
and
add
adc
add
mov
fldcw
pop
dec
int3
xor
mov
and
add
adc
mov
leave
add
add
or
mov
daa
pop
in
pop
testb
mov
add
out
and
mov
mov
add
pop
mov
jae
add
add
cmp
mov
sbbb
loopne
cs
and
add
pop
mov
clc
cmp
push
add
mov
mov
add
test
xchg
addr16
mov
mov
jmp
pop
mov
dec
sub
aad
add
out
sbb
add
inc
pop
sbbb
or
negb
fistps
movsl
pop
or
push
add
mov
pop
loopne
cmp
mov
mov
push
pop
pusha
add
xchg
inc
pop
mov
add
push
xor
loopne
mov
jg
pop
mov
jp
pusha
add
pop
cmp
call
add
in
fnsave
roll
cmp
daa
pop
test
dec
out
push
jne
jecxz
mov
pop
xor
lahf
xchg
jne
mov
in
sbb
sub
mov
inc
pop
loop
lea
dec
pushf
add
and
mov
mov
sub
pop
inc
pop
fcmovnu
pop
mov
pop
test
icebp
sbb
rcrl
insb
hlt
cmp
pop
mov
into
repz
add
lret
add
mov
jl
xchg
xchg
testl
pop
loope
mov
add
movsb
pop
xchg
mov
aad
pop
pop
sub
pop
fisttps
add
je
adc
add
mov
out
mov
add
inc
pop
or
call
cmp
mov
mov
pop
dec
mov
lret
mov
dec
adc
add
inc
pop
and
add
shll
add
jge
enter
xor
add
int3
push
inc
pop
cmpsb
pop
sub
dec
pop
sbbl
add
cs
jnp
sbbb
xor
add
pop
or
jl
xlat
and
add
in
pusha
add
pop
adc
pop
or
leave
aaa
mov
pop
gs
in
int3
movsb
pop
sbbl
push
xchg
sahf
ljmp
sub
xor
fnstcw
jmp
add
jl
pop
das
mov
ret
pop
jmp
jecxz
xchg
imul
loopne
pop
adc
add
add
add
add
pusha
add
sub
mov
add
cmp
pop
sub
pop
popa
add
cmc
js
adc
mov
es
sub
add
jns
pop
pop
mov
cmp
insl
jnp
pop
pop
lahf
adc
add
add
arpl
add
pop
add
xchg
ja
add
push
rclb
add
jnp
pop
mov
add
jb
add
add
lret
xchg
imul
jno
add
push
lods
je
mov
add
add
add
add
mov
push
add
fisubs
add
lock
add
push
xor
add
mov
ds
add
gs
cmp
aas
into
dec
fcmovnu
arpl
add
xor
sub
add
pop
and
add
sahf
jno
add
rcrb
add
push
cmp
add
push
add
mulb
jmp
pop
ljmp
add
cmpsb
pop
ret
pop
stos
push
mov
cmpsl
pop
out
cmp
nop
movsl
pop
aas
mov
mov
jl
addr16
insl
sbbb
testb
in
ret
pop
lods
lds
xor
push
rcrb
jne
pop
pushf
lods
push
gs
jl
mov
xchg
loope
in
or
lds
add
cmpsl
pop
jge
stc
test
sbb
sbbl
cs
mov
jmp
add
add
mov
add
mov
cs
xor
add
ficoml
add
add
mov
aas
pop
pop
inc
pop
ja
add
ljmp
icebp
pop
cmp
popl
pop
mov
pop
daa
pop
test
adc
add
out
pop
push
jns
int
add
int
or
add
pop
mov
pop
sbb
andnps
add
ja
in
daa
pop
cmp
add
aad
out
movsl
pop
add
add
shrl
add
add
add
cmp
jnp
add
dec
lahf
arpl
add
xor
add
mov
add
stos
in
mov
sar
leave
das
sbbl
add
int
lods
popf
adc
sbb
and
les
push
add
das
fs
sbbl
add
pop
push
add
dec
xchg
lahf
and
add
mov
mov
pop
mov
jns
rclb
add
int3
pop
and
add
bound
add
add
test
lahf
xchg
les
and
add
add
stc
cmp
pop
hlt
pop
jmp
pop
clc
out
mov
xor
add
pop
mov
add
sbb
jbe
xchg
mov
add
clc
sub
mov
sub
push
dec
cmp
nop
or
sub
add
int3
jo
add
pop
sbb
add
imulb
addr16
sub
adc
add
jmp
dec
mov
cwtl
aad
add
add
pop
cwtl
ljmp
push
pop
lcall
add
adc
add
je
and
add
add
and
add
add
add
ds
mov
rclb
xchg
jnp
pop
add
add
add
div
out
mov
pop
pop
in
xchg
fcompl
pop
xor
add
add
xchg
lcall
add
jbe,pn
pop
sbb
rcrl
or
sbbb
pop
cmc
sbb
rcll
xchg
mov
jo
add
pop
sub
pop
int
dec
adc
add
fwait
add
jbe
pop
jle
mov
sbb
shrl
xchg
cmp
popa
add
cmc
jmp
add
sbbl
add
add
pop
xlat
or
mov
xchg
fildl
pop
ss
mov
test
jecxz
pushf
pushl
pop
push
add
mov
pop
push
pop
pop
add
add
jecxz
addr16
mov
dec
sbb
incl
add
out
cmc
cmp
pop
mov
stos
fldcw
sbbb
add
sbb
add
inc
pop
and
add
add
sbbl
stc
mov
pop
rorl
sub
or
test
add
lret
icebp
nop
nop
adc
add
push
imul
std
xchg
xchg
mov
xchg
add
adc
mov
pop
pop
rclb
add
cs
pop
pop
popa
add
insb
inc
pop
jmp
xchg
push
incb
pop
jno
add
jmp
xlat
cmp
shrb
jnp
sbb
in
pushf
and
add
add
addr16
pushf
inc
pop
pop
and
add
pop
loope
push
xor
add
pop
sub
push
mov
rcrl
xor
add
mov
add
dec
sub
out
xchg
aad
sbb
add
pop
push
add
or
add
insl
fs
or
sbb
or
aas
inc
pop
mov
add
inc
add
call
sub
arpl
add
add
out
push
push
mov
inc
pop
pop
lret
clc
cmpsl
pop
mov
push
or
add
add
add
stos
jnp
mull
pop
cmp
jg
pop
dec
das
sub
add
pop
pop
adc
add
outsl
aad
add
sub
rcll
lods
or
add
sub
add
std
lds
in
pop
pushf
out
sahf
icebp
cltd
into
xlat
sub
add
fs
pop
pop
pop
repz
das
sbb
add
pop
dec
xor
add
popa
add
xor
sbb
pop
sub
jmp
mov
enter
or
and
jecxz
out
outsl
or
imul
arpl
add
pop
push
add
es
cmp
and
jo
add
jnp
pop
lods
dec
adc
add
add
and
add
jle
pop
jecxz
out
dec
dec
push
es
jb
add
fdivp
outsb
adc
add
add
add
add
add
movd
sbb
add
jge
sbb
ret
mov
aad
lea
lea
jmp
pop
daa
pop
jno
add
ret
pop
mov
push
add
enter
pop
push
add
push
add
rcrl
outsl
sbb
mov
add
sbb
cwtl
pushf
pusha
add
jb
add
scas
sbbb
add
jo
add
dec
pop
mov
jg
mov
add
js
add
push
add
decl
pop
and
add
and
add
fs
sarb
fldcw
in
push
add
pop
sbbb
gs
jge
pop
push
add
mov
pop
pop
mov
add
icebp
rcrl
jmp
scas
dec
xchg
arpl
add
mov
leave
mov
out
mov
add
test
add
rcrb
lret
xchg
jne
fucom
pop
adc
add
add
cmp
lret
cltd
ret
mov
or
add
sbb
pop
mov
pop
fmuls
icebp
adc
add
pop
out
out
mov
pop
insl
sbb
call
aas
pop
sti
popa
add
and
aad
and
add
cld
hlt
iret
sub
pop
stos
push
pop
shll
add
in
lea
add
loop
or
pop
jecxz
xchg
cwtl
sbb
dec
pop
jb
add
push
mov
xchg
mov
add
cmpsb
pop
sub
xchg
lds
test
pop
daa
pop
test
add
sbb
push
insl
stc
fildll
loop
xchg
inc
pop
dec
and
add
pop
xchg
icebp
sbbl
int3
mov
loope
in
jns
iret
int
pop
stc
xor
add
jg
and
mov
pop
inc
add
push
add
dec
xchg
or
loopne
rcrl
add
mov
add
in
loop
test
stc
das
add
rcrb
in
cmp
dec
lods
cltd
aas
ds
sbb
sbbl
fwait
mov
pop
lret
cmp
add
lret
pop
insl
in
or
add
adc
add
lock
test
jns
int3
jecxz
cwtl
xor
add
pop
into
pop
xor
add
jo
add
xor
stos
xchg
into
mov
dec
mov
dec
mov
test
in
xchg
sbbb
std
jg
loop
jl
sbb
repz
scas
push
pop
xchg
pop
jp
pop
cmpsl
pop
lret
cmp
jb
add
add
out
lds
pop
mov
and
add
ret
pop
test
lods
adc
add
pop
lret
sbb
and
add
add
adc
add
popa
add
sub
mov
aam
pop
sbb
loope
xor
add
jb
add
nop
mov
pop
mov
repz
inc
pop
repz
es
add
sbbb
jp
testb
pop
xchg
cmp
pop
inc
pop
add
add
shrb
push
jecxz
jg
les
imul
pop
xlat
jnp
inc
add
leave
pop
ret
pop
lcall
jns
leave
int
pop
sbb
pop
add
add
add
out
jbe
mov
inc
add
fsubrl
add
add
imul
xchg
pop
pop
mov
add
pop
cmp
pop
ja
cmp
add
pop
test
mov
pop
mov
idiv
jge
popf
push
xchg
cmpsb
pop
sbbl
icebp
cs
add
dec
push
add
das
rcrl
add
inc
pop
testl
add
insl
xchg
and
add
ss
and
adc
fs
or
sbb
pop
es
push
add
jbe
add
add
add
mov
in
leave
xor
add
in
mov
aam
jne,pn
pop
cmp
ljmp
pop
add
sub
jge
mov
fdivrp
cmpsl
pop
hlt
pop
ficompl
cwtl
cld
std
sarl
dec
test
popf
fwait
and
add
mov
and
add
pop
sbb
push
add
fdivs
mov
daa
pop
int3
adc
mov
add
inc
pop
jle
add
sbbb
add
xchg
scas
inc
pop
sub
push
jae
add
add
pop
cmp
jnp
flds
add
and
push
mov
pop
arpl
add
es
jge
loopne
mov
pop
lds
in
pop
pop
pop
cld
and
add
sbb
xchg
lahf
sbbl
call
pop
loop
es
inc
add
clc
lods
push
mov
filds
dec
ret
pop
je
xor
xor
add
add
lods
sub
add
js
dec
mov
fldcw
lods
cmp
add
add
push
mov
mov
std
adc
add
jecxz
mov
mov
lods
cld
lahf
test
jmp
sub
add
sahf
out
inc
add
out
mov
insl
push
mov
fstps
dec
sbbb
mov
and
add
lret
lods
pop
mov
add
jnp
push
add
push
pop
in
mov
xor
add
jg
add
cmp
add
jo
add
pop
ja
cwtl
jp
scas
xchg
lock
add
in
sub
add
add
add
daa
pop
out
lcall
pusha
add
adc
xchg
clc
icebp
pop
adc
add
pop
sahf
mov
mov
pop
ds
in
mov
add
pop
sub
add
pop
cmp
xor
add
pop
cmpsb
pop
lret
iret
in
pop
push
add
add
add
stos
lds
mov
pop
dec
xchg
adc
add
jmp
pop
test
jg
pop
pop
mov
rclb
sbb
add
mov
add
ret
rcrl
mov
jne
inc
add
sbbl
pop
jle
out
push
pop
pop
pop
xor
add
add
sbbl
lods
dec
mov
into
xlat
jmp
pop
add
add
add
xor
add
add
nop
into
gs
cmpsl
pop
sbb
pop
test
or
stc
lods
fisubl
add
movsb
pop
push
add
sbbb
xor
in
push
xor
add
push
add
out
adc
add
stos
xchg
fdivrs
mov
mov
push
out
mov
jge
int
push
cmc
fwait
addr16
mulb
leave
pop
ss
pop
jmp
pop
jo
add
jl
and
dec
jge
inc
add
pop
add
add
add
inc
add
push
pop
jge
cwtl
ja
push
mov
pop
addr16
jnp
pop
sub
decb
js
mov
cmpsl
pop
cmpsl
pop
test
xchg
pop
jae
add
push
je
xor
icebp
ja
add
js
popf
mov
sti
dec
mov
pop
into
cmp
sub
pop
scas
mov
popf
xor
pop
pop
jmp
sub
ficoms
add
mov
sbbb
add
not
jp
push
pop
fs
inc
pop
mov
rcrb
pop
dec
jp
pop
mov
outsb
and
add
sub
fst
and
add
pop
mov
add
or
dec
xchg
push
pop
add
add
jl
insl
jae
add
mov
pop
nop
jnp
shl
pop
scas
ljmp
mov
adc
add
fdiv
or
call
pop
mov
add
sbb
add
ficompl
adc
add
add
sub
cmpsb
pop
lahf
out
mov
movsb
pop
les
pop
mov
pop
in
inc
pop
xor
add
pop
gs
pop
mov
push
add
push
push
add
inc
add
maskmovq
push
add
int3
adc
notb
ds
pop
jmp
loop
mov
jo
add
pop
lock
add
adc
add
pop
ds
divb
mov
les
lods
out
mov
and
mov
pop
shlb
add
dec
test
pop
xchg
pop
hlt
sbbb
dec
sub
mov
mov
ret
pop
daa
pop
fsubp
pop
test
pop
in
call
shll
imull
add
pop
sbb
pop
cltd
mov
inc
pop
popa
add
int3
icebp
push
add
add
mov
pop
mov
in
xchg
xor
add
mov
fwait
cmp
cmc
fwait
mov
and
add
add
or
mov
jecxz
or
add
add
bound
add
popa
add
push
add
out
cs
cmp
mov
and
jbe
pop
les
sbb
jbe
pop
add
add
jno
add
and
add
add
loopne
out
mov
out
or
add
pop
lret
xchg
push
push
stc
out
inc
pop
mov
or
pop
sub
sahf
sub
ljmp
lret
aad
cmp
inc
pop
sbbl
dec
arpl
add
pop
gs
loop
bound
add
xchg
fistpll
push
add
dec
push
shll
pop
pop
sti
mov
cli
pushl
pop
inc
pop
jg
rcrb
and
add
cmpsl
pop
sbb
pop
push
mov
add
mov
inc
add
aas
ret
pop
dec
sub
mov
jmp
pop
mov
add
fisubl
add
and
sbbl
add
add
ljmp
leave
xchg
inc
pop
pop
and
add
lret
cmp
add
int
add
jb
add
in
aas
sahf
les
sbbb
repz
pop
mov
sub
mov
out
add
add
sahf
jnp
add
jg
pop
addr16
add
add
insb
adc
add
pop
or
test
add
push
lea
add
mov
push
xchg
insl
in
test
add
pop
sub
and
add
mov
add
add
aam
mov
xor
pop
aas
xor
add
add
es
packssdw
add
rcrl
int3
jnp
inc
pop
fsubs
pop
dec
cmc
mov
clc
jg
icebp
adc
add
cmp
into
add
add
dec
cmpsl
pop
jbe
push
pop
js
push
and
add
fimull
pop
popf
out
icebp
mov
packssdw
mov
jno
add
cmp
add
cmp
pop
adc
add
imul
pop
and
add
cwtl
testb
add
icebp
mov
lret
cmp
add
add
cld
push
lret
sbbb
jg
cmpsl
pop
lock
push
shrl
xor
add
sub
pop
in
scas
mov
push
pop
pop
das
pop
xchg
sbbl
lds
xchg
sbbl
xchg
jge
xor
add
jnp
jl
in
dec
sbb
add
rcrb
push
bnd
pop
mov
sub
pop
iret
stos
pusha
add
push
mov
sbb
imul
add
add
mov
add
pop
lds
jp
stc
mov
loope
add
add
clc
cltd
dec
es
cld
push
add
rcrb
fwait
fwait
and
add
roll
pop
pop
pop
push
pop
int3
fsubs
add
add
cmp
add
cmp
push
test
add
leave
pop
pop
lods
pushf
cwtl
sub
es
adc
add
pop
add
add
movsb
pop
lea
add
inc
pop
cmp
fisttpll
and
add
jl
xchg
rcrl
add
add
push
add
xor
add
sbb
push
xchg
adc
pop
mov
std
xchg
dec
mov
pop
pop
xor
add
imul
lods
jge
inc
add
loop
jno
add
outsl
xor
test
add
sbbb
xchg
fs
fidivrl
outsb
xor
add
add
jge
sbb
mov
test
mov
pop
outsb
aad
fs
bound
add
add
ja
fdivs
pop
jmp
inc
add
pop
cmp
pop
pop
dec
aas
pop
pop
test
mov
pop
inc
add
incl
es
pushf
mov
xor
add
je
jmp
movsl
pop
mov
bt
pop
jns
add
add
test
add
clc
add
add
cmp
out
push
adc
mov
stos
or
test
push
pop
jmp
jmp
add
jae
add
add
or
pop
push
pop
mov
sbb
adc
add
xlat
mov
add
in
inc
pop
fisubrs
add
mov
add
sub
xchg
loope
divl
add
leave
adc
add
or
cmp
add
pop
icebp
xor
popa
add
in
lret
sbbb
add
cmp
pop
and
add
add
sbbl
pop
lock
jmp
add
push
loope
repnz
push
add
jns
popa
add
xchg
push
pop
loop
loop
mov
mov
add
in
divl
dec
ror
js
dec
pop
and
add
cwtl
xchg
lcall
pop
mov
adc
cmpsl
pop
mov
pop
xchg
repnz
add
add
in
je
pop
inc
pop
in
and
add
add
lcall
lcall
dec
pop
mov
add
xor
sub
pop
pop
dec
lds
in
mov
pop
jmp
rclb
cmp
mov
xlat
scas
jge
pop
fimull
ljmp
add
adc
add
call
cmc
push
add
sub
xchg
int3
insl
mov
add
mov
mov
and
add
mov
add
fsub
pop
cmp
xchg
mov
pop
fisubs
add
pop
pop
mov
punpcklwd
add
or
sub
add
mov
add
lahf
sti
pop
std
ficomps
pop
ss
lds
lock
pop
leave
push
pop
push
lea
pop
daa
pop
movsb
pop
or
mov
jmp
cmp
pop
or
test
ret
pop
jnp
pop
daa
pop
sbb
add
adc
pop
mov
xchg
sbb
mov
jmp
cmp
add
xchg
pop
sub
iret
add
add
pop
pop
sub
jne
add
sbb
xchg
xchg
stc
xchg
mov
add
imul
mov
add
add
add
stos
sbb
add
seta
pop
jecxz
push
cmp
pop
sub
add
cmp
add
stos
addr16
in
das
mov
dec
cmpsl
pop
xor
inc
add
sbbl
mov
add
imul
push
aad
fwait
lods
es
ret
pop
xor
push
add
stc
cmp
pop
pop
cs
push
xor
add
push
jmp
add
pop
mov
xchg
dec
pop
push
add
cmpsb
pop
sbb
pop
rorb
xor
add
mov
cmp
add
inc
add
adc
rolb
add
add
outsb
mov
inc
add
jnp
mov
imul
jno
add
add
loop
cmpsl
pop
incl
push
idivl
and
add
fmuls
pop
out
add
add
add
jae
add
pop
and
cmpsl
pop
lret
mov
jns
push
mov
rcrl
sub
pop
xchg
cmp
add
cld
jmp
xchg
je
test
popl
pop
or
fcomp
enter
lret
inc
add
fs
pop
les
pop
xor
add
push
add
pusha
add
inc
add
pop
leave
int3
icebp
and
add
add
lret
and
outsl
pop
add
in
sub
popf
sbbb
ss
mov
add
add
or
lea
or
add
sub
loope
in
jecxz
pop
iret
mov
xor
pop
out
xor
add
sub
cli
int3
sub
cld
mov
mov
dec
pop
js
jmp
pop
inc
pop
xchg
push
and
add
push
push
cld
add
cmpsl
pop
icebp
jecxz
sbbl
pop
outsl
jno
add
je
lock
or
add
jo
add
pop
xchg
adc
add
pop
mov
jno
add
lret
push
mov
pop
pop
xchg
sbbb
ret
pop
xor
add
mov
pop
pop
stc
addr16
mov
outsb
loope
jge
sbb
dec
pop
int
pop
loop
lods
mov
or
push
jecxz
sbbl
add
or
pop
dec
scas
pop
sbb
mov
pop
inc
add
push
jb
add
jns
jg
jne
pop
push
add
mov
and
add
add
mov
push
dec
jnp
sbb
inc
add
rolb
add
pop
mov
hlt
jnp
push
add
push
add
inc
pop
xor
sbb
push
add
and
add
add
add
shrl
das
lods
cld
stc
call
imul
add
or
add
jg
inc
pop
test
push
pop
jl
fwait
push
add
pop
xchg
cmp
fbstp
and
add
and
jmp
pop
mov
add
jae
add
jns
add
sbb
add
test
repz
dec
dec
outsb
insb
and
notl
add
add
call
add
les
addr16
clc
into
push
lcall
pop
cmpsl
pop
lcall
pop
or
les
mov
add
lods
sarb
sti
dec
pop
call
add
cld
jno
add
jb
add
add
cmpsl
pop
shr
pop
jo
add
dec
xor
add
leave
and
mov
push
add
filds
lahf
cmp
add
divl
pop
pop
testl
xlat
push
pop
pushf
xchg
add
add
add
add
scas
pushf
out
mov
mov
push
sbb
pop
lcall
pop
sbb
movsl
pop
sbbl
add
add
cmp
imul
clc
or
bound
add
sub
jmp
mov
pop
fld
pop
lcall
sbb
add
xchg
iret
xchg
pop
inc
pop
and
add
pop
out
divl
add
ss
mov
popf
and
out
xor
add
jp
arpl
add
mov
xor
lcall
inc
pop
lds
pop
cltd
mov
gs
sbbl
push
add
es
mov
sbbl
add
imul
add
ret
add
mov
in
aad
fldl
rcrl
pop
xor
add
add
dec
out
out
push
add
sub
nop
repz
add
stc
jl
xchg
lcall
pop
add
add
pop
jno
add
imul
dec
lea
pop
inc
pop
stos
mov
nop
test
pop
shll
xchg
mov
scas
lods
lea
add
or
pop
inc
pop
mov
add
add
and
add
add
mov
pop
sbbl
pop
sbb
pop
inc
add
mov
cmpsl
pop
fsubs
pop
jle
inc
pop
lods
mov
sbbl
imul
fstp
xlat
add
add
pop
in
or
add
sbb
jmp
test
xchg
xor
add
add
in
call
xchg
pop
sti
and
add
pop
xchg
adc
add
pop
sub
inc
add
jecxz
inc
pop
mov
pop
inc
pop
lods
rcrl
mov
pop
push
idiv
sbbb
out
sbb
adc
add
call
add
push
sub
add
add
imul
insb
push
aas
sbb
divl
or
adc
add
add
lcall
es
popa
add
xor
add
add
dec
pop
scas
lret
mov
and
add
mov
inc
add
pop
xlat
pop
lock
add
arpl
add
pop
mov
outsl
mov
pop
sub
xor
add
inc
pop
repz
pop
pop
inc
pop
fcmovnu
leave
xchg
pop
dec
pop
or
pop
lds
add
pusha
add
dec
sub
add
adc
lods
mov
jbe
add
pop
out
aaa
xchg
pop
dec
mov
inc
add
inc
pop
add
add
add
mov
movsb
pop
jge
mov
pop
aas
mov
pop
fbld
cltd
int3
mov
aas
add
rcrb
xchg
sbbb
add
add
in
ret
pop
inc
pop
ljmp
add
pop
pop
pop
lahf
stos
dec
icebp
es
mov
imul
stos
mov
add
imul
mov
sahf
fdiv
movsl
pop
dec
cmpsb
pop
jno
add
add
xchg
push
pop
pop
icebp
mov
mov
add
cmpsl
pop
mov
add
aad
pop
imul
mov
xchg
pop
jmp
pop
add
add
cltd
inc
add
push
xor
pop
repz
add
addr16
outsl
aad
pop
out
xor
add
pop
stos
pop
inc
add
xchg
outsb
repnz
mov
aad
pop
xchg
pop
mov
push
add
push
pusha
add
jmp
pop
pop
dec
sbbb
lcall
add
in
sbb
push
sub
add
lods
jle
pushf
fsubs
cmc
adc
add
add
or
ret
pop
int
adc
add
sbbb
iret
faddl
add
cmp
lea
add
cmp
add
inc
pop
lret
popa
add
xor
mov
jne
push
cmp
enter
sub
in
push
mov
pop
out
cld
sbbl
movsl
pop
mov
pop
test
pop
sbb
mov
inc
add
xchg
cmp
pop
jg
pop
pushf
mov
ret
pop
mov
loop
aam
mov
pop
inc
pop
adc
das
dec
jp
cmp
add
nop
test
sbb
xor
add
add
pop
and
add
add
cs
xor
add
pop
insb
loopne
repnz
inc
pop
fsubrs
int3
push
pop
cmp
pop
push
add
pusha
add
stos
xor
pop
xchg
pushf
out
bound
add
adc
add
mov
fstp
std
sbb
cmc
jns
add
add
fdivrs
add
aas
mov
ds
lret
dec
out
arpl
add
pop
push
in
loop
insb
pop
pusha
add
sarb
dec
mov
fsubs
adc
add
cmp
dec
cld
loope
xor
add
in
stos
push
pop
cmc
iret
ret
pop
aad
pop
lret
pop
into
mov
pop
jmp
add
cmp
jg
pop
sbbb
pop
cltd
xchg
add
mov
movsb
pop
sub
mov
les
daa
pop
push
aaa
mov
jae
add
push
inc
add
mov
test
adc
add
add
push
add
pop
mov
and
add
add
shll
mov
pop
mov
jnp
xor
add
mov
pop
jo
add
inc
pop
jmp
and
add
dec
jmp
leave
idivl
add
popf
enter
push
mov
ja
cld
stc
adc
add
pop
jns,pt
add
pminub
mov
out
loope
dec
cs
loope
mov
pop
sbbl
arpl
add
add
add
sub
out
or
bound
add
popa
add
std
sub
sub
pop
sbb
add
add
pop
aaa
mov
pop
mov
and
add
mov
pop
mov
es
into
ja
xor
add
test
add
sub
repnz
mov
push
add
mov
clc
jl
jecxz
lea
mov
inc
add
push
ss
pop
loope
sbbb
imul
inc
add
cmpsl
pop
jbe
dec
cmc
push
repz
add
sahf
pop
pop
popf
dec
xchg
mov
xchg
cmp
pop
mov
lret
lret
cld
notb
add
add
add
jg
pop
jne
in
sub
add
pop
push
mov
add
ja
pop
lods
pop
xor
sbbl
cmp
std
call
push
mov
icebp
and
add
or
pop
filds
pop
xchg
ss
add
or
out
and
add
jle
pop
or
push
cmp
add
pop
loope
sub
add
add
add
icebp
pop
push
add
sti
repnz
jnp
pop
sbb
add
pop
jmp
push
bound
add
test
cmp
add
add
outsl
cmp
mov
add
add
inc
add
movsb
pop
adc
add
pop
test
add
mov
ja
add
int
sbbl
popf
and
daa
pop
jnp
push
and
add
or
shrl
jle
inc
add
mov
xchg
sbbl
out
mov
pop
jle
or
add
or
push
xchg
cvtpi2ps
add
movsl
pop
les
add
and
add
dec
repz
fwait
lcall
psubq
ret
push
mov
ljmp
pop
aam
out
iret
ja
sbb
add
add
jp
addr16
xor
mov
pop
cmp
adc
add
jo
add
lock
in
mov
mov
mov
xor
add
xor
and
cmpsl
pop
jle
pop
mov
add
add
add
imul
lret
lods
sub
pop
jne
pop
pop
mov
add
sbbb
bound
add
cwtl
xchg
push
or
iret
jnp
pop
loop
push
sub
std
popa
add
xchg
int3
cmc
test
stos
cs
cltd
mov
pop
ds
and
js
aad
adc
pop
shrb
pop
icebp
inc
add
ret
loopne
rcrb
lret
dec
adc
xlat
cwtl
push
add
cmp
cwtl
jne,pt
lret
fs
jl
pop
mov
int3
sbb
xchg
dec
mov
add
outsl
std
cltd
faddl
add
adc
add
add
add
add
ret
pop
inc
add
or
add
stos
dec
sub
sub
fstpl
stos
fdivr
mov
les
xor
add
add
sub
cmpsl
pop
insb
xor
xor
add
pop
dec
loop
icebp
lret
dec
add
sbbl
cmp
inc
pop
add
add
jle
push
dec
cmpsl
pop
aam
insb
xor
add
add
jns
push
mov
xchg
pop
cli
push
test
add
pop
pop
mov
dec
pop
lds
xchg
xor
add
sbbb
add
in
push
push
xchg
pop
inc
pop
sub
cmc
js
mov
call
loop
imul
inc
pop
lret
pop
unpckhps
push
add
sbb
enter
mov
add
imul
add
add
fstpt
mov
push
adc
add
pop
aam
push
dec
pop
pop
out
mov
push
pushf
pop
mov
add
push
add
mov
inc
add
jae
add
xor
add
jo
add
add
add
add
push
mov
pop
or
push
jb
add
xlat
les
out
repnz
inc
pop
clc
jnp
mov
sbb
mov
pop
dec
jae
add
and
push
pop
in
xchg
out
cmc
inc
add
mov
pop
into
adc
add
je
jb
add
bound
add
xor
add
sub
loope
sbb
mov
pop
inc
pop
popf
hlt
or
or
add
outsb
leave
es
popf
xchg
add
aas
mov
adc
mov
push
add
xor
add
xchg
mov
fildl
add
mov
and
aas
adc
add
imul
movsb
pop
cmp
or
pop
add
sbb
xchg
xor
add
add
mov
mov
dec
cs
xchg
insb
outsl
out
pop
das
sub
mov
fildll
dec
add
add
pop
dec
sub
int3
or
pop
repnz
add
pop
push
shll
mov
movsb
pop
pop
jp
jb
add
out
mov
test
pop
inc
pop
loop
xchg
aad
add
push
xor
enter
jecxz
call
jbe
mov
add
adc
add
push
jl
pop
adc
add
enter
sub
out
xor
add
fiadds
sti
mov
ret
add
js
push
pop
mov
sbbb
add
pop
or
bound
add
add
or
add
add
add
out
cwtl
xchg
lcall
push
pop
lods
mov
pop
popf
xchg
ret
outsb
arpl
add
into
gs
sbbb
push
or
inc
pop
mov
push
mov
sub
push
pop
xor
add
dec
cmp
add
pop
adc
pop
test
pop
or
movsb
pop
mov
xor
pop
mov
pop
sub
testb
scas
das
aam
pop
push
inc
add
xor
add
pop
in
jmp
mov
mov
jo
add
add
testl
pop
inc
pop
cmpsb
pop
inc
add
mov
push
adc
pop
aas
lods
in
push
add
sahf
popl
add
add
stos
xchg
sbb
add
mov
fs
sahf
inc
add
lret
add
int3
lahf
xor
iret
out
xor
add
inc
pop
pop
leave
mov
and
add
pop
clc
sub
in
rcrl
std
jmp
cmpsl
pop
into
and
sub
mov
pop
pop
popf
xchg
jp
stc
push
inc
pop
cmpsb
pop
mov
pop
ffree
pop
incb
add
rcrb
add
jmp
sbb
hlt
scas
popf
insb
lods
outsb
insl
mov
aam
pop
jns
mov
fisubl
add
sbb
pop
in
je
pop
sbb
pop
mov
add
mulb
add
sub
pop
push
lahf
sbb
add
pop
adc
pop
scas
inc
pop
xlat
sub
outsb
lahf
int3
jp
mov
pop
xor
nop
fstpl
pop
nop
scas
mov
enter
cld
scas
push
add
out
lret
add
js
xchg
mov
sbb
sbbb
add
adc
add
pop
cmp
and
xchg
jno
add
add
add
fcom
cli
sbbb
pop
sub
add
or
or
mov
add
add
add
push
out
jae
add
pop
xor
pop
lds
into
popf
add
add
add
jmp
outsb
pop
pop
and
add
jns
pop
jb
add
dec
notl
dec
xchg
mov
imul
pop
repz
pop
xchg
xchg
xchg
in
or
pop
inc
add
cmc
leave
fidivl
cmpsl
pop
mov
pop
jecxz
enter
pop
and
popf
sbbb
add
add
add
mov
jge
or
dec
mov
das
adc
add
sbbb
icebp
std
lea
add
pop
adc
add
int3
sbbb
add
ret
jns
pop
add
add
pop
jae
add
sub
dec
pop
push
add
aam
sbb
add
add
add
cli
push
add
call
pop
cmp
mov
add
adc
add
cmp
sbbl
pop
aas
xor
cmp
add
sbbl
test
lock
ret
pop
scas
xor
xchg
lret
adc
imul
dec
sbb
add
add
out
sbb
add
and
sahf
gs
pop
aam
fdivrl
add
pop
nop
mov
pop
mov
cmc
out
add
add
dec
sbbl
inc
add
cwtl
adc
add
pop
push
in
ret
pop
mov
enter
leave
mov
into
pop
pop
pop
pop
pop
mov
add
sbb
fimull
pop
push
jg
sub
lods
and
dec
insb
push
sub
sub
and
pop
push
add
xor
add
and
add
jbe
push
add
repz
rcr
div
inc
pop
or
add
jb,pt
add
cmc
mov
test
pop
testb
jecxz
pop
or
pop
js
pop
movsl
pop
push
lret
xchg
mov
les
div
ljmp
cmp
pop
xchg
sub
cwtl
mov
pop
icebp
fmuls
add
push
clc
ja
mov
add
out
stc
js
pop
insb
cs
xchg
test
mov
add
pop
add
lds
cs
pop
test
mov
pop
hlt
pop
cmp
cmp
add
stos
hlt
mov
xor
add
decb
shll
pop
js
push
add
pop
pop
ds
add
inc
add
pop
sub
xchg
imulb
sub
fsubr
popf
adc
add
add
or
add
cli
inc
add
repnz
jnp
add
lret
jnp
pop
popf
hlt
aaa
daa
pop
fnstsw
add
insb
mov
push
sti
mov
add
add
fs
dec
movsb
pop
icebp
clc
pop
lock
movsb
pop
es
cmp
in
xchg
sbbb
jmp
add
pop
xor
add
push
mov
add
push
cmpsl
pop
inc
add
out
fs
insl
mov
sub
and
add
int
pop
dec
cld
inc
add
aam
add
pop
xchg
sbbl
popa
add
ret
cli
add
add
std
test
adc
add
ror
pop
pop
pop
sbb
jnp
add
stos
ja
add
jecxz
out
push
add
add
add
int
add
lods
insb
xchg
xor
add
aad
adc
add
cmpsl
pop
adc
add
aad
add
imul
insb
pushf
lods
xor
sbb
add
lcall
xchg
mov
pop
rorb
xchg
and
add
mov
pop
dec
stos
xor
jle
add
sbb
repnz
pop
insb
call
add
pop
push
test
pop
add
add
add
icebp
xlat
adc
lret
xchg
test
pop
aam
outsl
dec
in
pop
adc
sub
dec
repnz
inc
add
ja
jbe
pop
fmulp
cwtl
mov
ss
push
adc
add
pop
pop
stos
jmp
dec
jns
pop
fildl
add
xchg
pop
push
add
sahf
les
sbb
stos
xchg
sub
add
sbbb
mov
mov
cmp
lock
stc
mov
add
popa
add
js
jge
pop
fstps
pop
test
inc
pop
mov
movsb
pop
sbbl
pop
or
pop
mov
pop
adc
add
add
iret
pop
int
stos
fs
mov
adc
add
fnsave
add
jp
dec
or
add
jo
add
popf
pop
sbbb
pop
fdivs
add
sbb
pop
push
add
or
leave
in
jno
add
testl
add
add
adc
add
cmp
add
inc
add
fwait
rcrb
pop
daa
pop
incl
pop
xor
add
rclb
mov
aad
pop
pop
push
rcrl
ljmp
mov
add
int
pop
adc
add
int
sbbl
add
sbb
pop
pop
xchg
out
popa
add
popf
das
and
add
dec
mov
xor
pop
ja
xchg
mov
insb
sbb
pop
pop
mov
pop
sbb
mov
pop
xchg
and
int3
push
pop
cmc
lds
scas
std
and
add
sti
mov
pop
inc
add
test
sti
xor
add
add
pop
jle
or
cltd
gs
xor
add
cmp
inc
add
xchg
lds
add
pop
and
add
push
add
mov
add
push
xchg
pop
mov
mov
nop
inc
pop
out
arpl
add
mov
pop
jo
add
lahf
pop
loope
add
add
mov
add
cwtl
mov
sbbl
icebp
loopne
jae
add
pop
xor
add
pop
les
out
dec
adc
add
add
dec
test
rorb
or
add
xor
add
pop
lret
add
add
ss
cmpsb
pop
push
add
push
or
test
lahf
push
mov
and
add
add
add
mov
arpl
add
pop
pop
lods
lret
lahf
ljmp
arpl
add
jae
add
inc
add
iret
mov
out
lea
sbb
pop
dec
mov
sbb
push
add
sub
ss
pop
fistpll
push
add
xor
add
sub
add
add
xor
add
add
es
shld
mov
div
xor
add
add
add
pop
push
frstor
pop
push
sar
sbbl
cmp
loope
pop
pop
pushf
pop
jmp
pop
inc
pop
lods
stos
add
add
pop
sbb
sbbl
cltd
xor
add
add
cmp
add
out
arpl
add
pop
insb
xchg
adc
add
shr
sub
add
jge
push
and
pop
ret
pop
mov
add
imul
lea
mov
fcompl
shrl
and
ret
add
sbb
pop
push
pop
jno
add
dec
cmp
add
add
pop
inc
pop
cmpsl
pop
sbbl
add
mov
push
xor
add
jb
add
pop
and
add
repz
leave
loop
xchg
sub
mov
add
mov
add
leave
mov
add
jbe
add
fadd
pop
mov
jp
xlat
dec
loopne
pop
pop
loop
lret
enter
dec
daa
pop
fistpll
add
fisubrs
mov
add
mov
pop
pop
aad
add
jecxz
gs
into
xchg
sub
inc
add
dec
adc
add
add
pop
sbb
add
cmp
jge
add
add
add
mov
xor
add
xor
pop
les
ret
pop
imul
adc
add
in
pop
sahf
cmp
pop
xchg
sti
inc
add
mov
sbbl
add
cs
and
add
pop
mov
add
add
cmc
xor
add
jb
add
add
rcrl
mov
pop
fildl
add
lds
or
add
jae
add
imul
add
cmp
push
pop
fadds
add
mov
add
add
es
rcrl
pop
scas
into
cmp
lret
pop
cltd
cld
or
pop
pop
sub
xchg
jg
add
jecxz
iret
in
push
scas
arpl
add
les
cld
mov
pop
push
adc
add
sub
aas
pop
sahf
cmp
push
pop
stos
les
rcrl
adc
pop
popf
in
leave
xlat
add
add
pusha
add
pop
xor
add
enter
pop
nop
push
add
lock
and
add
xor
dec
push
cmp
cmpsb
pop
dec
es
jl
pop
sbbl
pop
mov
out
push
pop
add
add
xor
add
lea
add
ja
pop
adc
add
xor
add
pop
sub
add
mov
add
ds
test
leave
lods
dec
or
sub
loopne
inc
add
inc
pop
ret
pop
push
pop
cmp
cwtl
mov
mov
sbb
add
aaa
mov
cs
iret
or
push
pop
test
inc
add
xchg
int
pop
adc
pop
xor
add
add
mov
adc
pop
mov
jmp
sbb
fdivs
test
xchg
add
out
and
add
int3
mov
cmpsb
pop
ficompl
in
sbbb
loope
cli
pop
pop
scas
mov
pop
test
fisttpl
add
jle
add
add
add
jecxz
push
add
mov
int
test
add
mov
test
rcrb
add
add
rcl
and
add
add
mov
sbb
pop
stos
xchg
in
and
add
lods
add
add
add
and
add
inc
add
in
mov
das
jae
add
pop
rcrl
xchg
or
cmc
outsb
out
rcrl
add
add
add
sbb
pop
xchg
jo
add
mov
xor
pop
call
cmc
sub
mov
lret
xchg
mov
test
sub
xor
add
add
fisubrs
iret
cmp
jg
sbbl
pop
xlat
push
cmp
cwtl
mov
dec
mov
loop
les
sub
add
in
daa
pop
inc
pop
xchg
jle
bound
add
add
mov
stos
push
add
pop
cmc
push
pop
ds
ljmp
pop
lods
stos
lret
add
mov
pop
mov
pop
pop
xchg
add
stos
mov
movsl
pop
cmp
scas
test
dec
aaa
int
add
xor
add
pop
shll
pop
inc
add
cmp
inc
add
sbb
aaa
xchg
dec
sbbl
and
add
xchg
gs
test
push
add
xor
add
popa
add
cs
add
scas
out
xor
loope
ss
inc
add
jae
add
mov
add
cmpsb
pop
popf
or
aaa
lret
je
xchg
and
inc
pop
mov
or
rcr
and
add
cwtl
xor
add
fwait
lret
inc
add
rorb
push
and
add
mov
jmp
dec
add
add
add
cmp
pop
mov
into
sbb
add
fwait
jmp
add
sbb
push
add
lret
jnp
aad
adc
add
add
popf
mov
pop
cmp
add
dec
fisttpll
lock
add
je
push
leave
mov
push
or
out
iret
negb
mov
lret
out
push
sub
add
dec
sub
fcompl
push
add
sbbl
add
fldcw
xchg
sub
mov
div
shr
out
cmp
adc
fwait
cwtl
push
cmpsb
pop
inc
pop
out
cmp
aas
and
add
add
mov
dec
push
sub
and
add
cmp
test
addr16
lock
in
or
fstpt
add
lea
test
cmp
lds
xchg
xchg
add
in
loop
out
shrl
or
push
add
ficoms
das
inc
add
xchg
mov
cltd
adc
add
add
sub
sub
mov
mov
pop
pop
fstpt
rcrl
push
lret
dec
mov
dec
nop
aas
pushl
lds
pop
mov
pop
in
jne
xor
add
and
hlt
pop
test
sbbl
adc
add
mov
mov
add
mov
int3
cmp
add
rcrb
pop
mov
add
mov
add
gs
stos
cs
add
add
jo
add
mov
jnp
xchg
in
pop
sub
add
add
inc
pop
pop
push
add
xor
push
pop
pop
adc
add
mov
pop
fists
imul
and
adc
add
loopne
popa
add
inc
pop
fwait
mov
jp
decb
bound
add
pop
daa
pop
cmc
cltd
pop
mov
pop
pop
popf
adc
add
sbbl
xchg
and
add
aaa
xor
add
add
repnz
ja
pop
cmp
pop
xor
add
test
xchg
lds
push
adc
add
add
inc
add
dec
call
out
or
pop
pop
outsb
movsb
pop
push
daa
pop
filds
ror
sbbl
add
mov
movsl
pop
cmp
mov
fnsave
add
mov
pop
and
add
xchg
loopne
cld
push
add
mov
add
jg
xchg
add
mov
test
pop
sbbb
mov
add
push
add
lret
pop
mov
add
add
in
repnz
add
add
add
mov
pop
jl
insb
out
mov
push
cmp
pop
pop
out
push
pop
filds
cmp
es
clc
push
dec
insl
out
movsl
pop
das
pop
pop
nop
xchg
pop
cmp
roll
pop
neg
pop
pop
repnz
sbb
arpl
add
pop
aas
or
add
add
ret
cmp
push
out
cmpsb
pop
rcll
add
test
cmc
and
add
pushf
lds
sub
sbbl
or
push
int
pop
repnz
mov
add
rorl
shlb
add
or
pop
es
aaa
loop
nopl
int3
call
ljmp
pop
dec
mov
sbb
push
add
inc
pop
dec
and
add
cmc
mov
and
add
push
dec
xor
add
add
pop
test
mov
or
out
lds
icebp
push
lds
pop
pop
mov
popf
arpl
add
inc
add
xchg
lcall
sbb
or
les
test
lock
add
or
xchg
pop
jecxz
xchg
jbe
pop
mov
inc
add
xchg
lahf
xchg
and
and
add
push
mov
and
inc
add
je
add
add
test
stos
icebp
int
sti
lret
mov
add
xchg
and
add
add
or
add
in
dec
inc
pop
cmpsl
pop
cli
xchg
test
mov
xchg
add
add
imul
or
add
mov
pop
add
fldenv
pop
add
mov
push
xchg
pop
mov
add
rcrl
add
jg
into
xor
add
add
add
pop
mov
rorl
jp
xor
sub
pop
inc
add
decb
pop
in
push
xor
add
push
flds
add
mov
inc
pop
das
pop
pop
mov
cmp
pop
push
mov
dec
notl
add
out
outsb
push
jge
add
psrlw
outsb
or
and
add
xchg
pop
sti
and
popl
jge
mov
mov
add
pop
mov
fcompl
add
dec
cmp
mov
js
stc
or
add
pop
or
push
add
shl
gs
in
push
jge
push
add
sbb
push
adc
add
inc
pop
iret
in
and
add
pop
xor
add
push
js
cmp
iret
dec
int3
inc
pop
add
add
sbbb
add
xchg
push
add
bound
add
inc
add
dec
add
add
int3
push
testb
mov
cli
pop
scas
frstor
add
add
sub
dec
pop
inc
add
scas
fmuls
add
mov
add
std
stos
mov
and
add
pop
scas
cwtl
pop
xor
pop
popa
add
jmp
cmp
pop
adc
add
out
push
add
aas
mov
pop
lods
clc
adc
add
pop
push
mov
mov
fwait
das
jae
add
aas
test
pop
scas
mov
jno
add
xchg
lret
mov
mov
add
mov
xor
add
das
inc
pop
cmp
add
mov
les
pop
popa
add
push
add
insl
pop
mov
fwait
sub
xchg
js
test
sbbb
cld
stos
push
fnstsw
stos
dec
jae
add
dec
lods
pop
daa
pop
enter
ljmp
pop
stc
ljmp
xchg
pop
dec
add
add
add
fsubr
inc
add
mov
xor
outsb
inc
pop
bound
add
pop
sub
add
sub
sarb
pop
inc
add
inc
add
rol
pop
or
popa
add
nop
mov
add
adc
pop
push
add
jge
sbb
add
mov
cwtl
shlb
add
add
pop
cmp
xor
add
mov
int3
in
ss
sbb
jmp
pop
jg
lods
test
pop
cmp
dec
adc
add
push
add
into
push
add
and
shlb
inc
pop
out
mov
enter
mov
adc
add
repz
mov
loope
sub
pop
pop
aam
mov
xor
add
sub
and
sbbl
fnsave
add
pop
push
add
arpl
add
out
or
add
daa
pop
pop
mov
jns
add
add
test
js
out
jge
loope
mov
icebp
pop
and
or
add
out
test
out
rep
in
add
jo
add
push
add
dec
mov
add
cmp
pop
movsl
pop
dec
push
movsb
pop
sbb
pop
pop
xchg
xchg
mov
pop
scas
push
add
sub
jns
mov
jns
pop
add
aas
cvtps2pi
mov
inc
add
jl
add
das
pop
out
sub
or
mov
push
add
scas
fcmovne
je
mov
pushf
mov
mov
and
add
add
cmp
pop
rorb
ljmp
lds
mov
sbbl
pop
aad
mov
aaa
jno
add
in
out
jno
add
sahf
cwtl
scas
popf
loop
push
add
pop
movsb
pop
shll
add
sbb
cmp
ljmp
jp
std
push
add
rcrb
mov
xchg
xor
add
mov
cwtl
and
add
pop
cmpsb
pop
or
pop
push
es
movsl
pop
mov
push
add
inc
add
adc
add
sbb
push
fistpl
lock
fs
aas
cmc
jbe
pop
sbb
add
and
add
adc
add
add
dec
lret
pop
into
out
je
jle
in
cmp
add
xor
add
or
insl
push
cld
mov
mov
sar
arpl
add
aad
jns
out
add
add
pop
push
scas
xor
mov
lahf
sub
xchg
les
pop
aaa
or
pop
aam
push
sbbl
cli
sub
pop
out
pusha
add
movsl
pop
out
sub
enter
add
add
xchg
push
and
add
push
mov
mov
fcomip
sub
inc
add
sbb
add
ss
xor
add
jnp
add
pop
pusha
add
jns
sti
lcall
pop
into
inc
add
sar
or
xchg
xchg
int
add
and
add
int
pop
mov
movsl
pop
lea
add
pop
nop
adc
add
ss
add
ljmp
into
adc
fprem
sbbb
lea
add
incl
add
cwtl
jecxz
popa
add
aam
cwtl
add
dec
xchg
jp
xor
add
inc
pop
cld
lret
add
pop
ret
add
mov
rorl
fimuls
scas
jp
or
fwait
push
add
pop
add
dec
mov
pop
pop
jp
pop
dec
xor
add
pop
push
add
adc
sbb
iret
fwait
pop
jl
pop
dec
and
pop
int
lea
add
jge
out
mov
pop
mov
pop
out
call
out
push
add
sub
sbb
lock
add
sub
into
mov
push
adc
add
lret
dec
loopne
fs
mov
pusha
add
push
fimuls
mov
std
or
add
cld
cltd
ja
loope
jmp
add
or
pop
lret
add
xchg
xchg
jne
in
cltd
jo
add
mov
fistps
add
add
sbb
add
jne
pop
push
repnz
mov
push
and
add
or
add
testl
add
add
add
sahf
imul
add
add
jg
add
adc
cmpsl
pop
hlt
xchg
and
add
loop
sub
ds
inc
add
iret
shll
dec
pop
xlat
lret
lock
pop
stos
les
xchg
pop
lcall
cld
das
mov
add
pop
icebp
jmp
lret
bound
add
shrb
pushf
lods
sbb
mov
or
pop
push
add
jmp
add
pop
cmp
push
pop
mov
sbb
add
jno
add
pop
sbb
add
xor
add
add
pop
sbb
and
movsl
pop
or
add
cmpsb
pop
dec
sub
pop
test
add
out
sub
jmp
scas
sbb
add
xlat
fldcw
pop
fistpll
jo
add
dec
scas
sub
xlat
xchg
pop
xlat
out
sbbl
push
add
lods
mov
fdivs
pusha
add
es
aaa
cmpsb
pop
inc
pop
jnp
pop
sub
pop
dec
les
iret
cltd
pop
outsl
jno
add
jno
add
add
aad
test
jns,pn
pushf
stos
sbbl
cmp
pop
push
add
xchg
jmp
jg
dec
ror
xor
cltd
pushf
rorl
jns
pop
shlb
add
arpl
add
push
pop
int
sbb
add
loope
jnp
addr16
or
add
imull
add
xor
add
or
pop
faddl
add
push
xchg
mov
sahf
aam
push
add
icebp
and
add
push
add
add
sub
add
xchg
inc
pop
sbbl
mov
pop
add
add
jno
add
pop
fsubs
adc
add
sbbb
add
xchg
leave
mov
mov
insb
push
sbb
mov
add
add
add
pop
inc
pop
xchg
ss
cs
push
sbb
add
daa
pop
imul
jae
add
cmp
dec
scas
push
add
xchg
outsl
mov
pop
xlat
xchg
lock
add
lret
mov
push
pop
lea
in
cmp
mull
pop
fsubrl
ds
pop
int3
sub
inc
pop
cld
lahf
mov
cmp
cli
inc
add
out
xchg
pop
jne
pop
sub
pop
ja
jmp
or
add
dec
les
pop
pushf
push
imul
pop
jns
mov
imul
mov
sarl
push
push
add
loopne
call
lock
nop
scas
xor
icebp
dec
repz
ss
pop
mov
scas
std
sub
aaa
push
add
pop
enter
pop
es
mov
aam
sub
iret
aaa
in
lret
push
push
jp
xor
add
pop
inc
pop
mov
pop
fisttpl
sub
add
dec
ffreep
pop
or
pop
xchg
dec
insb
and
mov
adc
add
add
cmp
es
adc
add
roll
pop
mov
add
add
or
es
ret
pop
pop
in
cs
shrl
xchg
xor
add
add
adc
add
stos
shr
shrb
sbb
jmp
mov
add
pop
xchg
fwait
pmaxub
insb
scas
sub
add
rcr
je
xchg
adc
js
xor
in
fisubs
add
jmp
inc
add
push
out
ljmp
add
add
add
in
gs
and
add
or
add
add
or
push
dec
xor
add
add
