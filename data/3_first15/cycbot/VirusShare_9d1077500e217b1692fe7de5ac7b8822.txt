jae
clc
dec
and
mov
add
popl
enter
mov
add
cld
rolb
mov
pop
mov
pop
cmp
mov
mov
jo
mov
inc
add
hlt
pop
or
and
add
mov
fcomip
test
add
mov
addb
loop
mov
int3
loope
pop
cld
sub
and
xor
add
lcall
add
addr16
jb
mov
add
add
pushf
xchg
adc
mov
add
iret
xchg
fucomp
add
or
add
in
popf
add
leave
aad
cwtl
cmp
xor
add
popa
or
into
xchg
faddp
jo
mov
mov
outsb
and
mov
cmpsl
or
jecxz
push
cli
pop
inc
add
mov
add
sbb
in
loop
mov
pop
mov
fsts
add
rolb
repnz
pop
test
lock
ret
rolb
mov
add
add
inc
add
add
cmp
mov
loopne
mov
sbb
fcomi
mov
in
or
pop
pop
pop
jb
mov
xchg
addb
adc
xor
nop
add
gs
ds
xchg
rol
push
stos
dec
mov
fcoms
jp
inc
cmp
cld
in
minps
dec
and
inc
sbb
add
cmp
jmp
clc
inc
add
push
sub
stos
rolb
mov
lcall
mov
mov
mov
out
loope
add
sub
iret
repnz
dec
out
outsb
popf
in
outsb
and
cmp
mov
mov
lds
adc
cmp
repnz
or
sub
ds
fwait
push
mov
xchg
pop
mov
push
mov
aam
xchg
xor
ljmp
add
cmpsl
sar
stos
mov
test
jmp
out
mov
add
jbe
or
push
addb
in
int
pop
and
mov
mov
pop
xor
mov
out
insl
inc
add
mov
add
jmp
imul
add
mov
or
mov
cli
and
repnz
and
and
enter
sbb
loop
mov
mov
inc
adc
sbb
loop
mov
out
jae
fnsave
addb
xor
mov
sub
sub
add
mov
add
mov
adc
mov
inc
sub
cltd
fmull
xchg
xor
mov
outsb
fstpt
addb
inc
add
sbb
cmp
push
std
sbb
ljmp
push
add
add
cmp
add
or
mov
hlt
mov
xchg
fdivrl
imulb
frstor
add
add
aas
push
fmull
lds
rolb
mov
pusha
add
mov
cmp
fdivl
mov
lret
enter
iret
add
mov
adc
fidivs
das
dec
cmpsl
mov
add
mov
test
mov
push
mov
movsb
xor
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
push
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
xor
arpl
ret
push
jbe
add
loop
mov
imull
or
mov
mov
cwtl
test
adc
mov
nop
add
mov
jns
add
mov
add
xchg
jg
mov
add
add
mov
imul
daa
mov
xchg
add
xchg
sahf
adc
hlt
pop
xor
leave
movsl
lock
mov
cmp
mov
fucomi
xchg
or
cmp
add
fcomp
xlat
test
add
inc
mov
or
add
sbb
and
push
pop
jp
mov
push
xchg
add
inc
jp
orl
sbb
out
test
pop
mov
cmp
lods
pusha
add
jg
xchg
add
dec
push
add
pop
xchg
adc
push
mov
add
mov
fmull
xchg
test
js
xor
rolb
mov
mov
mov
aaa
sub
pop
add
cli
aaa
mov
adc
pusha
add
stc
mov
xor
mov
cmp
dec
sbb
dec
adc
test
adc
mov
iret
adc
stos
cmp
jecxz
push
ljmp
xchg
xchg
fiaddl
xor
mov
jmp
add
add
hlt
scas
inc
fwait
repz
push
outsl
repnz
mov
pop
scas
jo
mov
mov
add
mov
lcall
test
mov
add
add
cmpsl
out
and
mov
add
push
rolb
mov
mov
add
adc
dec
movsb
rolb
mov
cld
in
jecxz
mov
add
mov
mov
pop
push
jae
imul
mov
scas
pop
ret
std
out
es
rolb
mov
xor
cmpsl
aas
mov
cmp
shll
add
pop
mov
push
jl
push
mov
repz
test
pop
negl
jo
mov
out
add
mov
mov
scas
jae
in
sub
fsubrp
lock
add
mov
test
imul
je
xchg
cwtl
mov
and
cmp
jmp
fsubs
jbe
outsb
or
sahf
dec
xlat
and
mov
ret
sub
jno
inc
dec
dec
fiadds
pop
leave
inc
add
add
inc
rcrl
es
xchg
pop
and
mov
popa
add
lahf
lods
lahf
mov
add
and
mov
dec
cld
aaa
adc
pop
inc
and
fcomps
adc
mov
push
in
loop
mov
cmp
nop
add
filds
add
popf
xor
imul
add
cmpsb
andl
mov
xchg
inc
add
mov
add
ret
stos
pop
les
jo
mov
fcompl
add
lock
adc
mov
cli
jl
repnz
insb
inc
pop
loopne
mov
xchg
and
mov
add
ret
xlat
xchg
icebp
cwtl
mov
xor
jo
mov
push
xchg
mov
push
push
and
jo
mov
jo
mov
pop
adc
ja
add
arpl
fcmovnb
add
fsts
add
aad
fadds
pop
int
in
mov
push
mov
add
push
fsubl
mov
inc
dec
adc
lret
inc
pop
rolb
mov
shrl
mov
insb
mov
push
sbb
xchg
xchg
jecxz
addl
mov
dec
sbb
add
mov
in
pop
arpl
inc
add
xor
xor
popf
cmp
mov
add
enter
or
rolb
lock
imul
cwtl
scas
mov
mov
in
es
pushf
sti
iret
lret
jbe
xchg
cmpsl
fs
dec
and
leave
mull
mov
add
scas
psrlq
pop
enter
add
lea
mov
rcl
fldln2
sub
cli
or
add
dec
add
mov
fdivrp
cmp
lret
pop
call
add
out
pop
in
or
cmpsb
adc
in
push
jo
mov
ds
mov
bound
mov
sar
icebp
imul
xchg
push
fstps
adc
xchg
adc
jge
cld
jmp
dec
pop
in
js
inc
repz
test
push
rolb
mov
mov
test
push
sub
test
les
pusha
add
xor
mov
cmpsb
insl
icebp
addb
imul
mov
jo
mov
pop
out
dec
dec
cmp
lea
add
pop
test
flds
xlat
add
repz
or
add
cltd
mov
adc
mov
xor
pop
jl
xchg
xor
push
test
lods
fisttpl
lock
push
cmc
lods
or
ljmp
call
mov
imul
xor
mov
orl
add
cmc
out
sti
jge
cmp
mov
cmp
xor
mov
jnp
or
mov
mov
ret
mov
cmp
xor
adc
mov
push
les
aam
add
cmc
je
aad
push
xorl
imul
rolb
sub
aad
mov
pop
mov
add
mov
outsb
cmp
cmp
mov
add
inc
add
inc
test
add
add
mov
add
cmp
sbb
daa
movsl
ret
pop
jns
jb
mov
mov
mov
addb
call
test
nop
add
push
jl
and
rolb
mov
lcall
cmp
in
lret
cld
ss
mov
pusha
add
xchg
add
mov
and
lret
out
in
mov
mov
add
mov
mov
mov
or
add
int3
rcrl
jnp
clc
pop
mov
add
mov
push
add
add
mov
mul
push
cli
scas
fs
mov
fwait
rolb
mov
sub
loope
out
jmp
daa
fstpt
fnsave
rolb
mov
cld
or
rolb
mov
addb
mov
insl
cmp
push
inc
cmc
jne
popa
jp
xchg
mov
and
inc
adc
mov
pop
rolb
mov
adc
mov
jne
pop
cmp
addb
nop
add
mov
mov
mov
imul
add
inc
stos
cli
or
cmp
aaa
jb
mov
add
scas
fstps
add
data16
jae
mov
cmp
add
rolb
mov
add
inc
add
loope
push
add
lods
and
mov
sub
add
xchg
adc
mov
and
lock
lret
add
in
or
setp
test
aad
add
xchg
pop
faddl
add
push
ds
adc
clc
push
add
cwtl
adc
add
mov
jne
xor
fbld
aad
int3
cld
and
add
test
sbb
dec
lds
xor
int
aad
cli
test
mov
add
mov
inc
dec
and
add
dec
and
pop
mov
aad
dec
cli
out
pop
mov
pop
add
jbe
js
stc
xchg
adc
mov
movsl
dec
xor
add
add
mov
in
hlt
mov
mov
jbe
repz
xor
rolb
mov
add
sub
xor
add
cmp
add
out
fnstenv
add
mov
pop
mov
ret
js
in
mov
mov
add
dec
mov
add
dec
or
aam
push
jno
iret
sbb
jns
mov
mov
add
ja
ljmp
mov
add
add
mov
add
clc
test
or
or
out
pop
in
test
bound
mov
aas
dec
dec
or
flds
add
mov
leave
rcl
add
mov
jo
mov
add
mov
sub
movsl
add
sub
add
inc
xor
mov
jne
push
mov
mov
mov
test
call
mov
in
cmpsb
adc
mov
enter
ljmp
cli
lret
cli
cmpsl
nop
add
das
jbe
xchg
insb
sbb
out
add
hlt
jl
or
clc
ss
xor
jp
xor
add
inc
xchg
mov
mov
xorl
add
inc
jmp
jl
incl
inc
scas
mov
mov
cmp
mov
dec
and
adc
mov
add
mov
repz
inc
add
jb
mov
pop
mov
mov
push
movsb
fwait
sbb
xor
loop
mov
clc
repz
or
or
push
mov
mov
stos
or
dec
daa
fs
int
aas
xor
mov
lock
or
add
mov
dec
mov
test
mov
mov
and
mov
or
sbb
and
push
loope
arpl
ja
add
cmc
incl
hlt
shll
cltd
shll
xchg
add
out
xor
xor
or
add
rolb
push
outsl
jns
popa
rcl
repnz
add
repz
fnsave
sbb
mov
jmp
and
outsb
mov
add
mov
add
mov
push
outsb
mov
fsubr
cmp
push
std
xchg
add
or
jo
mov
cwtl
fmulp
and
dec
sub
add
mov
add
inc
adc
fdivrs
add
jecxz
mov
or
adc
xor
jge
sub
icebp
xchg
dec
fdivp
ja
jmp
dec
icebp
lret
cmp
addb
fwait
lds
fucomp
stc
mov
inc
push
pop
dec
push
leave
sahf
and
add
pop
mov
mov
lcall
add
add
cmpsb
mov
sahf
fdivl
test
or
out
test
hlt
cmpsl
das
test
mov
add
sbb
lcall
mov
iret
cs
xchg
add
push
add
mov
fildll
mov
push
push
xor
mov
add
fidivs
cmp
fdivrl
add
loop
mov
icebp
sub
push
lds
add
add
or
mov
sub
ljmp
add
jbe
add
mov
add
push
xor
imul
mov
sbb
int
out
inc
adc
imul
mov
icebp
jae
add
mov
popa
stos
pop
add
mov
rolb
mov
sbb
add
notb
repz
add
mov
sub
movsl
out
addr16
lahf
push
lahf
mov
test
mov
adc
fs
add
xor
mov
push
add
add
mov
add
mov
ja
add
and
xchg
mov
mov
mov
push
add
iret
jl
js
stos
cmpsl
nop
add
fisubrl
mov
dec
mov
add
cmovge
xchg
mov
in
in
push
add
pop
ret
mov
mov
rolb
mov
xorl
add
push
add
ja
push
sbb
push
cmpsb
xchg
cmpsl
fdivrs
mov
mov
cmp
fnsave
sbb
pop
into
std
push
lods
insl
fdivr
cmp
mov
ret
sub
adc
add
dec
cwtl
mov
inc
mov
push
and
mov
sbb
std
cltd
pop
or
or
xor
add
es
pop
mov
aas
sub
mov
pop
insb
jl
jp
sahf
loope
cltd
jle
add
push
test
into
jne
xchg
jmp
add
inc
sub
fisttpll
add
add
mov
xchg
mov
insb
jbe
push
test
popa
xlat
add
enter
add
mov
insl
push
aas
sbb
jge
aas
xchg
add
mov
sbb
add
test
bound
mov
out
add
cltd
addr16
pop
adc
mov
ja
fidivl
xor
mov
lods
cmpsl
lret
aam
jns
cmpsb
rolb
mov
dec
xor
mov
add
ljmp
add
data16
pop
ret
jg
mov
into
shll
std
loope
add
sbb
jmp
push
dec
bound
mov
mull
mov
jne
lock
add
in
inc
add
inc
bound
mov
arpl
sbb
and
push
add
sbb
xor
mov
and
rcr
in
in
ss
fs
jnp
mov
test
add
mov
mov
push
out
insl
iret
mov
addb
loopne
mov
enter
or
cli
scas
add
mov
add
add
jns
cmp
dec
cmpsl
mov
je
jmp
add
add
add
mov
mov
jne
jnp
in
adc
mov
mov
sub
sbb
imul
pop
inc
and
mov
test
aad
into
inc
xchg
sti
movsb
adc
mov
xchg
cltd
mov
xchg
pop
in
mov
fwait
and
ljmp
fwait
stos
les
add
pop
out
pop
fwait
mov
adc
mov
cs
sub
fs
and
mov
aad
and
imul
mov
add
jo
mov
xchg
add
mov
fdivl
add
mov
mov
xor
mov
lahf
inc
push
lret
mov
loope
hlt
jnp
add
sub
pop
scas
add
std
je
fcoml
rolb
mov
mov
mov
dec
dec
iret
inc
add
add
mov
mov
add
ret
repz
and
add
arpl
push
add
mov
xlat
lahf
sbb
sub
lods
jno
mov
push
add
in
into
ja
sub
jg
out
ret
push
repnz
out
or
stos
adc
jge
cs
cwtl
ficomps
xchg
add
push
push
pop
in
cmp
cwtl
arpl
lea
pop
sar
or
fsubrl
push
arpl
inc
add
push
add
add
pop
push
pop
xor
xor
mov
inc
sub
dec
dec
mov
and
mov
addb
or
push
mov
arpl
mov
cltd
push
add
clc
sbb
xor
adc
lods
sub
lds
push
mov
mov
jg,pt
call
pop
fs
rolb
mov
pushf
cmp
das
pop
mov
push
mov
and
aam
mov
rcl
clc
cmpsb
nop
add
lds
jbe
jb
mov
es
test
mov
and
mov
dec
mov
leave
add
xchg
add
add
cli
fnstcw
sbb
addb
and
mov
mov
jns
inc
add
add
rolb
or
adc
mov
add
add
xor
mov
and
sahf
mov
stos
rolb
mov
daa
mov
xor
imul
xchg
jp
adc
mov
add
push
dec
sahf
pop
orl
add
ds
loope
mov
mov
xchg
mov
add
shr
jmp
and
mov
inc
adc
push
xchg
rolb
mov
xchg
in
or
out
insb
mov
or
add
aas
movsl
aam
xchg
cmpsl
cld
call
pop
fldcw
sbb
add
insl
gs
sti
or
addr16
xor
mov
cmpsb
mov
lods
add
mov
sub
pop
xor
sbb
mov
add
add
sbb
aad
mov
add
mov
push
inc
repnz
je
out
sub
cmp
fisttps
test
mov
testl
dec
xor
add
add
addb
enter
bound
mov
std
fildl
loope
add
dec
or
bound
mov
lret
ret
inc
add
jge
add
sbb
add
mov
int3
aam
pmaddwd
add
add
scas
sub
mov
add
negl
add
add
outsb
adc
dec
insb
sub
jle
push
daa
daa
push
int3
jge
and
mov
cli
lea
sbb
jne
outsb
cmp
jo
mov
repz
les
sbb
mov
insb
fmul
stos
pop
cwtl
add
mov
mov
sub
mov
push
lods
sbb
or
clc
rolb
mov
adc
xor
mov
cwtl
dec
cmp
jb
mov
out
aas
add
mov
movsl
jle
xchg
adc
bound
mov
and
mov
loopne
mov
inc
cmp
mov
mull
dec
testl
mov
or
inc
add
add
jns
mov
mov
arpl
jae
data16
jg
fwait
mov
gs
add
jbe
jae
xlat
mov
rolb
mov
inc
add
push
mov
loop
mov
mov
sbb
xchg
fwait
jnp
add
add
mov
dec
mov
mov
aas
stos
or
push
adc
das
fdiv
loopne
mov
sub
push
push
aaa
cmc
adc
mov
pop
xchg
add
mov
jo
mov
idivb
movsl
into
repz
inc
add
pushf
sbb
add
insb
fisubl
add
pop
insl
jmp
ds
inc
inc
sub
fsts
imul
ret
js
sbb
add
mov
mov
mov
pushf
mov
xchg
push
push
dec
mov
ljmp
jecxz
mov
into
sarl
sub
inc
push
cmp
mov
jns
sub
adcl
std
rolb
xchg
addb
mov
ljmp
addb
dec
add
mov
add
insb
out
daa
sub
push
movsb
push
mov
sbb
outsl
pop
loope
mov
add
rolb
adc
jle
add
dec
mov
insb
pop
iret
fsubrs
rolb
mov
movsl
test
dec
cmp
mov
lods
inc
add
mov
inc
add
xchg
lea
add
jno
rolb
mov
xchg
pushf
and
mov
sbb
nop
add
insb
stc
jecxz
push
in
mov
stos
jl
or
repnz
and
add
jne
add
sbb
loopne
mov
outsl
imul
mov
fnstenv
adc
add
mov
icebp
push
push
adc
stos
jnp
add
data16
mov
jge
sbb
add
repnz
add
jl
mov
add
and
mov
pop
sub
push
ja
fists
add
pop
cmp
stos
rolb
mov
dec
scas
in
movsl
outsb
add
mov
pop
push
sbb
push
pop
dec
aas
push
je
nop
add
insl
pop
rolb
mov
mov
add
mov
out
popf
jmp
sbb
pop
xor
mov
xor
int3
fmuls
add
jae
int
icebp
pop
and
pop
mov
cmp
and
mov
inc
add
mov
xchg
mov
or
pop
les
leave
or
jle
loop
mov
sub
fistps
imul
xchg
mov
mov
mov
out
add
xor
hlt
sub
xchg
sub
adc
test
ljmp
push
add
pop
pop
lret
leave
lods
fisttpl
sarl
mov
mov
push
nop
add
dec
xchg
add
lcall
sub
add
add
and
mov
cld
shrl
pop
in
shr
mov
or
and
mov
sbb
in
sbb
xchg
xlat
push
add
lahf
dec
mov
pusha
add
mov
ja
fcoms
add
loop
mov
add
mov
out
jbe
or
das
jle
jb
mov
call
sbb
mov
mov
add
mov
lcall
add
mov
insb
xor
mov
xlat
ss
sahf
scas
test
popf
cmp
add
add
mov
repz
scas
ljmp
add
or
in
pop
stos
sub
inc
xor
adc
arpl
pushf
popa
inc
xchg
pusha
add
add
mov
xchg
je
add
insl
fidivrl
imul
push
push
ss
xchg
mov
dec
xchg
data16
mov
add
add
mov
mov
or
addr16
mov
in
cld
mov
ljmp
dec
sub
pop
repnz
xchg
fmul
mov
mov
add
mov
popf
mov
cmp
add
add
jl
xchg
popa
jno
add
add
ds
and
add
mov
sti
adc
ret
sbb
cld
jmp
or
test
stc
mov
add
add
add
mov
and
jecxz
mov
sub
add
fiadds
aas
mov
flds
ds
add
mov
mov
mov
add
push
insl
inc
mov
aad
add
pusha
add
add
ds
add
mov
fisttps
mov
insb
xchg
lods
dec
or
mov
mov
add
mov
adc
test
mov
or
xchg
mov
sti
jl
xchg
add
mov
add
add
jnp
adc
add
cmc
xchg
add
mov
jnp
je
mov
cwtl
dec
lods
sbb
mov
inc
add
data16
popa
mov
stc
pop
aad
mov
fsubs
mov
inc
rolb
mov
pop
mov
xchg
lret
cs
cmp
stos
dec
jp
out
iret
addb
sahf
push
cwtl
push
jb
mov
in
je
add
sub
or
addb
into
ret
negl
mov
add
xchg
add
jno
jmp
jbe
dec
imul
mov
cmp
jl
rcrl
mov
add
imul
pop
mov
mov
add
jp
int
pop
sti
std
mov
ljmp
test
inc
adc
mov
pushf
pusha
add
in
leave
das
or
cli
loopnew
mov
add
pushf
dec
idivb
add
sbb
mov
mov
pop
pop
mov
push
dec
pop
data16
rolb
mov
imul
pop
insb
cmp
ret
gs
xchg
jle
xchg
roll
mov
mov
lods
cmp
jg
xchg
pusha
add
push
inc
add
mov
push
gs
inc
add
xor
out
mov
add
into
and
cmc
divb
add
gs
ja
mov
mov
mov
push
andl
push
and
add
mov
or
mov
cmpsl
pop
lcall
or
inc
rcrl
lods
ret
insl
push
mov
dec
fs
add
add
mov
push
xor
pop
scas
xchg
pop
push
jno
loop,pn
mov
xchg
cmpsl
cwtl
pop
fiadds
cmp
rsqrtps
mov
add
mov
add
mov
rolb
ja
add
jge
add
add
imul
loopne
mov
test
xchg
push
cmpl
lret
xor
scas
jecxz
push
push
div
add
lret
add
mov
adc
mov
add
add
cld
icebp
pop
fidivs
mov
fsts
mov
mov
test
pop
divl
jns
or
inc
jecxz
add
and
cmp
call
add
addb
mov
jge
adc
repz
mov
add
or
add
in
aam
add
jl
lret
stos
or
mov
pop
test
lret
xrelease
jo
mov
mov
shll
sbb
inc
push
neg
daa
xchg
pop
add
rolb
push
cmp
fs
add
mov
pop
sbb
addb
mov
shll
add
ret
addb
cmp
xor
pop
jae
movsl
pop
js
jg
add
inc
dec
push
stos
into
add
mov
pushf
jno
bound
mov
in
in
xchg
adc
mov
add
and
mov
lds
pushf
lcall
fcoml
mov
dec
andl
add
scas
pop
imul
fs
test
mov
mov
mov
jns
stos
cmp
mov
push
mov
mov
pop
icebp
dec
sbb
scas
rolb
mov
movsb
leave
pop
jecxz
jo
mov
in
add
movsl
xchg
jo
mov
sbb
xor
xor
mov
sub
mov
and
mov
jb
mov
in
inc
push
xor
ret
lcall
jae
push
add
xchg
inc
push
aam
ret
mov
mov
dec
jle
cld
mov
out
push
sub
add
jmp
mov
mov
sbb
and
ret
popf
sub
add
push
ret
push
inc
dec
push
bound
mov
arpl
mov
roll
sbb
jae
mov
jb
mov
add
add
mov
out
xor
add
push
mov
mov
fcmovbe
add
outsb
push
add
add
add
sub
add
ficoms
xchg
add
mov
roll
mov
mov
xor
sti
imul
mov
cltd
repnz
xor
mov
add
mov
imul
add
fs
add
xchg
scas
mov
mov
push
jae
push
movsb
insb
arpl
push
jbe
mov
popf
enter
sub
mov
dec
pop
push
ret
jae
lret
insb
mov
test
add
out
inc
fisubl
fcoms
add
inc
mov
mov
mov
sbb
repnz
ja
xchg
mov
cs
xchg
sbb
es
orl
adc
loopne
mov
mov
ret
popf
jbe
mov
add
in
fcomps
sti
loopne
mov
jbe
add
cld
pop
jno
sub
mov
mov
inc
stos
sub
or
test
pop
je
ret
pop
mov
pop
rolb
mov
lock
sbb
int
lea
add
imul
jl
cmp
aam
stos
inc
hlt
jg
and
mov
sub
sbb
add
add
mov
popa
fstps
imul
add
les
cmp
lea
mov
mov
nop
add
cmp
rolb
pop
enter
add
add
fiaddl
bound
mov
cmpsb
loope
add
sub
add
mov
add
fbstp
jbe
cli
loopne
mov
stos
je
add
bound
mov
sti
mov
cmp
popa
out
jmp
mov
leave
xchg
mov
sub
dec
insl
or
add
xchg
shrl
jge
xchg
xor
lock
aaa
int
mov
sbb
in
addb
xchg
mov
mov
inc
sbb
pusha
add
xor
mov
popa
jns
es
in
bound
mov
mov
cwtl
pushf
add
xlat
xor
mov
js
add
cwtl
dec
icebp
push
add
cmp
adc
mov
add
outsb
lds
push
add
addr16
lret
dec
push
fidivl
jle
add
imul
aas
sub
jns
ret
ss
and
add
xor
mov
nop
add
and
movsb
mov
mov
scas
fdiv
xchg
cmp
loope
xor
mov
add
mov
push
sbb
adc
mov
xlat
add
inc
mov
call
adc
int3
dec
les
sarl
mov
scas
push
push
test
add
mov
aaa
fimuls
sub
popa
jecxz
icebp
mov
mov
xor
mov
mov
mov
add
sbb
test
mov
push
icebp
mov
in
or
mov
es
std
outsb
aas
mov
test
mov
push
add
push
aam
push
mov
mov
add
mulb
sub
ficompl
add
mov
out
gs
lret
sub
jbe,pt
add
fidivrl
cmp
jnp
jge
add
add
or
sub
add
add
addr16
add
push
or
add
leave
stos
addb
sub
stos
aas
jecxz
imul
rolb
and
adc
add
push
add
popa
dec
adc
mov
sbb
sbb
in
or
add
pop
and
fistl
clc
inc
add
shll
into
je
movsb
fcomps
mov
jge
mov
jp
aad
mov
mov
mov
pop
cmp
aam
pushf
dec
pop
dec
and
mov
or
dec
das
pop
dec
decb
addr16
jmp
add
cmp
add
mov
das
mov
insl
sbb
adc
mov
add
mov
mov
mov
mov
lods
addb
pop
fcompl
aam
sub
adc
iret
sbb
and
ret
inc
inc
xchg
jmp
movsb
cld
ret
mov
xchg
hlt
or
xor
add
iret
cmp
cmpsl
std
inc
push
add
jbe
xchg
push
xor
adc
mov
sbb
inc
push
in
aaa
pextrw
insb
mov
xchg
outsl
test
std
cmp
mov
jmp
sbb
lcall
push
add
jns
jecxz
xchg
pop
push
enter
add
and
and
js
testb
sbb
cmp
add
jge
add
mov
popf
pop
add
mov
hlt
jp
lods
mov
cld
shll
mov
jl
add
or
imul
push
dec
ljmp
out
mov
add
adc
mov
pop
cld
inc
enter
jno
scas
jae
xchg
push
loope
add
push
xchg
enter
mov
outsb
push
insb
and
mov
add
add
or
jae
xor
mov
arpl
mov
lods
cmpsb
jmp
add
add
mov
and
or
xchg
cli
mov
pop
cmpsb
push
cmp
mov
mov
dec
add
jns
jo
mov
dec
mov
outsl
cwtl
bound
mov
adc
mov
jb
mov
dec
out
mov
call
repnz
enter
sbb
add
in
int
pop
aad
add
scas
cwtl
movsb
nop
add
test
add
add
mov
loope
add
dec
inc
fnstsw
lock
negl
mov
out
mov
mov
adc
mov
mov
add
mov
sub
loop
mov
fbstp
inc
add
test
add
gs
add
mov
xlat
add
bound
mov
cwtl
pop
dec
cmp
notl
je
adc
aam
sbb
mov
add
mov
mov
rolb
mov
rolb
mov
repnz
mov
push
xchg
popf
rolb
or
mov
xor
inc
rolb
mov
push
add
mov
add
mov
pop
sbb
leave
das
repz
rolb
mov
mov
ljmp
dec
jnp
cmp
lods
dec
test
je
add
sbb
and
loopne
mov
mov
xlat
adc
pop
push
mov
xlat
mov
repnz
cld
cld
xor
mov
xchg
add
add
mov
jle
aad
adc
lret
pop
add
roll
mov
mov
mov
mov
xor
xchg
mov
sbb
push
jo
mov
mov
cltd
sub
pop
mov
xchg
test
mov
ds
dec
adc
pop
mov
inc
les
add
pop
addl
lods
mov
outsb
call
fsub
add
mov
add
inc
faddp
add
mov
enter
or
pop
pop
add
nopl
imulb
addr16
test
xchg
xor
dec
pusha
add
xchg
fcoml
inc
cmp
mov
aam
sub
xchg
sub
popa
push
lds
jae
push
out
popa
aas
mov
cmp
pop
inc
sub
cld
jo
mov
mov
add
dec
jo
mov
jge
sub
cmp
ss
or
testb
rolb
mov
loope
lea
mov
cmp
mov
jbe
fdivrl
mov
and
add
xchg
mov
in
xor
add
jnp
rolb
mov
add
and
add
add
mov
addb
mov
repz
jns
addb
add
mov
ss
out
imul
cmp
push
sub
mov
add
and
mov
mov
sub
in
shll
popf
xchg
push
mov
insl
inc
mov
fcmovu
mov
jae
lret
test
je
sub
push
add
mov
add
mov
push
xchg
jecxz
aam
cmp
les
xchg
roll
sti
jb
mov
xchg
sbb
adcl
in
mov
add
mov
add
cwtl
cltd
pop
hlt
outsl
cmp
fcomp
int3
out
outsb
jne
cmp
jo
mov
lea
stos
sub
clc
imul
jge
jmp
mov
jo
mov
add
fstl
add
mov
sbb
mov
pop
mov
popa
loope
jno
out
pop
enter
daa
addb
into
mov
dec
popa
ja
sub
test
stos
rolb
lret
scas
ds
mov
pop
in
jle
push
popf
sbb
push
push
add
int
add
faddl
popa
mov
mov
scas
insl
jmp
cmp
out
jp
mov
mov
mov
push
sub
cmp
cwtl
inc
lea
mov
xor
mov
enter
cmp
lcall
popf
jmp
xor
or
mov
dec
into
push
ss
mov
mov
and
mov
add
or
add
mov
add
add
pop
mov
insl
cmpsl
xor
mov
adc
ja
ja
dec
lret
scas
imul
out
notb
mov
cli
push
int
lret
ss
add
push
xchg
pushf
inc
push
aam
and
mov
mov
cmp
push
mov
add
fistpll
rol
add
mov
mov
enter
push
push
pop
bound
mov
mov
adc
mov
ja
ds
pop
xor
mov
adc
mov
mov
cmp
js
mov
add
add
outsb
xchg
add
nop
add
imul
xor
mov
movsb
jns
das
call
or
je
add
add
mov
add
cltd
repz
in
mov
mov
add
fisubrl
jg
and
mov
aaa
dec
shll
mov
add
nop
add
mov
mov
xorl
repnz
mov
inc
push
repnz
fmulp
dec
daa
lods
inc
and
or
andl
lds
cwtl
mov
mov
adc
xor
fidivs
sub
lock
add
cmc
out
sbb
mov
mov
xor
ja
pop
scas
stc
push
loope
movsb
mov
mov
sub
call
ljmp
cmpsb
bound
mov
gs
shll
testb
mov
out
mov
add
xchg
add
jecxz
in
dec
test
add
mulb
push
clc
test
mov
test
pop
sub
xchg
add
stos
xchg
cmp
imul
cli
rolb
mov
lods
add
stos
xchg
test
arpl
mov
adc
mov
shr
jne
xor
aas
negb
xchg
cmpsb
out
ljmp
add
mov
mov
mov
sahf
leave
push
inc
pushf
sbb
repnz
lret
mov
xchg
pop
mov
aaa
push
xchg
in
mov
jp
xor
adc
mov
add
lahf
xor
ret
filds
add
add
mov
or
rcrl
add
xchg
je
or
sub
in
push
sbb
sub
inc
js
scas
dec
adc
repnz
inc
stc
sbb
lods
adc
mov
add
les
cs
cmp
push
mov
mov
mov
push
nop
add
mov
add
dec
les
xchg
mov
dec
leave
decb
push
imul
jge
les
sbb
add
mov
mov
stos
or
sub
cmp
fsubrs
pop
inc
inc
repz
push
push
pop
fsubl
add
std
xor
lret
mov
cmpsl
xor
add
mov
gs
in
lods
adc
hlt
stos
dec
jnp
or
add
mov
jns
mov
and
mov
jmp
mov
add
mov
fcos
push
or
adc
cs
lcall
mov
add
ffreep
mov
jmp
add
xor
xchg
jb
mov
call
and
mov
negl
loope
insb
popa
jo
mov
pop
or
arpl
ljmp
adc
mov
mov
aad
adc
mov
pop
jo
mov
add
cmpsl
jmp
rcll
andl
mov
mov
dec
sub
add
add
repz
adcl
clc
sub
fcmovnbe
add
sub
lea
xchg
add
je
mov
cmpsb
adc
inc
add
push
add
je
je
fisubl
mov
arpl
mov
jmp
add
sbb
mov
mov
rolb
mov
add
das
cmpsl
mov
add
les
and
mov
arpl
jbe
add
dec
addr16
mov
movsb
mov
mov
mov
pop
add
mov
adc
adc
ja
gs
arpl
add
jnp
outsb
or
pop
push
and
jge
je
test
add
cwtl
pop
sbb
pop
mov
jo
mov
xor
in
dec
fs
cmpsl
stc
jns
lcall
fdivrl
gs
add
and
pusha
add
add
cltd
jmp
pop
mov
add
fcomps
mov
rolb
sbb
mov
cmp
add
mov
rolb
mov
movsl
dec
jp
adc
push
rolb
aas
das
mov
cmp
mov
lock
mov
sbb
add
add
js
cmp
add
dec
out
and
jb
mov
xlat
fwait
inc
push
roll
icebp
cmpsb
cmp
lcall
addr16
dec
jge
aad
sub
dec
in
push
repz
mov
addb
and
mov
or
mov
mov
rolb
xchg
mov
test
in
add
or
mov
mov
mov
mov
cld
stc
js
pop
dec
ret
sub
mov
push
add
notb
pop
mov
out
push
inc
add
adc
xchg
std
xchg
add
jecxz
ret
and
inc
lret
sub
enter
rolb
mov
mov
jno
cwtl
jno
out
push
add
add
scas
ljmp
jb
mov
lret
jne
lahf
cmc
sbb
jmp
mov
bound
mov
pop
pop
repnz
add
jg
sbb
inc
push
or
and
imul
mov
jbe
loope
jb
mov
getsec
add
popa
sub
and
xchg
add
xchg
cmp
mov
add
mov
push
ss
mov
add
add
repnz
sbb
pop
pop
sub
xchg
mov
jge
xor
mov
inc
push
add
lahf
xchg
add
add
mov
add
outsl
mov
pop
in
jp
addb
call
outsb
lret
add
std
jle
sbb
add
mov
ret
inc
xor
or
add
repnz
add
xlat
dec
and
mov
add
mov
dec
xchg
add
dec
adc
mov
and
jne
sub
popf
ret
mov
loope
inc
and
mov
mov
mov
outsb
pop
xchg
add
cld
mov
mov
xchg
or
add
add
push
clc
xchg
enter
add
inc
mov
lcall
and
mov
lods
mov
into
test
sub
out
and
mov
out
cmp
shll
lea
add
pop
sub
dec
push
add
lds
add
mov
mov
cmc
popa
dec
xchg
mov
add
movsb
pop
push
shll
sub
push
and
mov
pusha
add
add
mov
push
ret
call
bts
push
int
popf
daa
movsb
sbb
xchg
xchg
inc
add
mov
mov
aam
fistpll
jg
add
lea
shll
movsb
add
jno
xchg
inc
sahf
xchg
pop
into
ss
dec
or
jo
mov
add
dec
xor
mov
sub
out
mov
mov
mov
mov
daa
aam
lret
xor
iret
in
dec
lret
and
fdivrs
aaa
push
inc
push
push
add
lods
insb
lea
inc
add
cmp
add
xor
cmc
ficompl
fwait
addb
into
ret
jb
mov
sbbl
mov
add
add
mov
inc
aaa
xor
mov
cmp
imul
stos
lds
cmp
inc
jo
mov
fwait
mov
mov
adc
and
rolb
insb
add
mov
mov
push
outsb
mov
push
add
shll
mov
inc
xor
inc
add
pushf
inc
pop
mov
std
popf
popf
daa
sub
add
add
lds
inc
add
mov
sbb
fnstcw
mov
cmpsl
imul
push
jmp
mov
mov
addb
fldl
cmp
xchg
add
and
xlat
arpl
mov
mov
mov
push
adc
imul
rolb
es
add
add
lcall
add
mov
repz
add
add
cmp
jo
mov
jge
push
add
add
lret
mov
ret
nop
add
jg
sti
testl
add
out
add
lods
adc
mov
jp
add
repnz
add
das
xor
mov
adc
sbb
dec
mov
aas
lea
add
and
int3
adc
mov
add
test
es
loope
roll
lret
inc
mov
push
ret
int3
dec
dec
data16
inc
add
mov
or
mov
adc
cmc
sti
xlat
in
inc
add
mov
imul
mov
inc
push
dec
pop
in
pop
xor
push
les
mov
inc
xor
int3
fiaddl
xor
mov
outsb
jecxz
add
mov
insb
pop
inc
add
mov
mov
cmpsl
addb
sbb
mov
xchg
stc
addb
in
mov
jl
scas
push
xlat
popf
cltd
cmpsl
push
enter
inc
cmc
xchg
ljmp
mov
mov
addb
sbb
add
and
mov
push
dec
fcmovnu
std
lahf
mov
les
loope
ljmp
mov
cltd
insl
jbe
push
loope
add
jo
mov
mov
mov
mov
nop
add
mov
xor
mov
mov
mov
adc
mov
addb
into
lret
leave
xor
add
adc
push
sbbl
mov
ret
xchg
pusha
add
mov
push
outsb
adc
mov
dec
mov
dec
xor
add
iret
sbb
outsb
mov
dec
jecxz
add
push
jnp
dec
rcll
pusha
add
mov
jo
mov
mov
or
sbb
dec
out
add
add
jae
inc
jmp
aaa
test
loop
mov
mov
xchg
adc
fwait
push
mov
jge
mov
mov
inc
xchg
pop
subl
cld
cltd
push
fwait
xor
mov
inc
pop
mov
mov
add
dec
pop
add
xlat
lock
add
jp
add
mov
imul
stos
cmovl
mov
cmp
addb
mov
out
aas
aam
out
addb
xlat
or
dec
xor
mov
jg
or
jno,pn
aad
movsl
or
pop
clc
testl
and
mov
ffreep
push
add
mov
mov
xchg
popa
addb
xchg
addb
stos
imul
add
aam
or
cmc
adc
arpl
inc
add
lret
pop
ja
cmp
mov
addl
ret
ficompl
neg
enter
sbb
aad
ret
bound
mov
add
mov
loop
mov
mov
fmull
repz
dec
xorl
out
jns
mul
mov
mov
filds
cmpsb
negl
lret
repz
and
mov
mov
int
pushf
mulb
jmp
add
mov
stos
clc
scas
push
aaa
sub
outsl
cmp
add
mov
cmpsl
outsl
add
add
mov
xlat
mov
mov
movsb
sub
rolb
add
sbb
movsb
and
add
add
inc
sbb
mov
pop
in
xchg
sbb
hlt
mov
jno
rolb
mov
mov
sub
jl
add
out
out
out
arpl
sbb
push
fdivrs
jecxz
in
pop
fcomps
add
or
add
add
fs
and
mov
push
push
push
sbb
sahf
mov
mov
add
movsb
mov
mov
lret
out
lret
cmpl
pop
js
inc
cs
add
mov
xor
pop
add
add
add
mov
das
push
pop
les
adc
mov
pop
sub
xor
pop
loopne
mov
add
add
adc
jo
mov
add
pop
push
fstp
adc
add
cltd
mov
cli
xor
mov
rcll
xchg
sbb
inc
add
inc
xchg
and
mov
and
mov
test
jo
mov
jg
cmp
in
xchg
sahf
fistpll
xchg
rcll
add
add
jl
inc
jb
mov
jns
add
adc
out
insb
sbb
out
into
in
lcall
bound
mov
inc
add
loope
add
imul
adc
jns
pusha
add
test
out
js
jnp
ja
dec
fldt
dec
adc
loope
mov
ret
jno
mov
pop
insl
dec
das
movsl
insb
mov
mov
mov
adc
mov
cmc
aas
cmpsl
movsb
sahf
outsl
fistpll
jnp
nop
add
xchg
add
jae
test
add
and
mov
orl
push
jl
and
xor
or
mov
fsubrl
push
jns
add
jmp
or
pop
adc
sub
inc
inc
add
mov
push
pop
mov
add
mov
lds
adc
mov
outsl
mov
loop
mov
add
cmp
hlt
mov
add
and
push
lock
mov
test
add
add
lcall
imul
mov
dec
sti
adc
add
add
mov
sub
es
rolb
stos
push
add
mov
sub
insb
fcomp
push
ficompl
jns
add
mov
jmp
jo
mov
cltd
inc
inc
sub
loopne
mov
jb
mov
pushf
sbb
loop
mov
ljmp
xchg
je
push
add
mov
cmp
add
add
and
mov
scas
dec
loope
xlat
jle
and
aam
push
fistl
pop
into
or
fnstcw
sub
xchg
mov
jb
mov
inc
outsl
mov
mov
loope
icebp
jecxz
cmp
add
pop
add
mov
aad
cmp
cld
lcall
mov
rolb
mov
add
jle
inc
add
mov
repnz
inc
idivl
movsl
mov
mov
and
mov
test
xchg
cmp
ret
divb
mov
mov
add
mov
fs
das
clc
mov
xor
hlt
je
adc
mov
gs
add
mov
aaa
inc
add
push
add
add
add
rolb
inc
pop
test
imul
gs
pop
jp
jp
sub
xor
add
jo
mov
mov
pop
cmpsl
sti
pop
mov
mov
lock
sbb
mov
jno
or
xchg
xchg
rolb
mov
xchg
jb
mov
sbb
add
add
mov
or
push
adc
sub
lcall
or
jo
mov
inc
nop
add
mov
idiv
in
mov
mov
es
or
push
add
pop
sbb
add
and
cltd
ret
add
mov
cmp
lds
add
imull
lret
push
mov
cmpsl
cld
aas
lea
mov
add
mov
data16
test
scas
call
pop
jbe
mov
lahf
push
insl
test
jbe
lock
mov
add
push
add
mov
jo
mov
repz
pop
xchg
lret
mov
cmc
mov
fadds
pop
push
add
jg
jae
sub
ja
mov
xchg
inc
lea
popf
bound
mov
mov
lods
adc
fs
jns
add
adc
add
addb
shll
ljmp
mov
add
sti
hlt
fldt
or
xor
mov
frstpm(287
dec
out
and
dec
and
mov
in
inc
push
les
xor
push
int3
jmp
mov
test
rolb
mov
dec
push
leave
push
adc
sub
test
cs
pop
jo
mov
jns
sbb
pop
aaa
xlat
lds
sub
add
aaa
pop
les
addb
rolb
mov
ds
insl
into
or
mov
fidivl
pop
fsubs
sbb
lods
sbb
mov
xchg
sub
imul
inc
add
sub
mov
add
mov
arpl
push
mov
out
sub
rolb
mov
cmp
fdivrp
cmp
mov
outsb
lods
sub
mov
lea
rolb
mov
nop
add
lds
add
scas
insl
shll
repnz
jecxz
sbb
jg
popa
xchg
pop
mov
sub
xor
mov
xor
mov
aaa
add
push
add
insl
rol
outsb
xchg
push
add
or
nop
add
mov
lret
rolb
mov
fsubs
mov
imul
add
bound
mov
fstl
add
mov
jb
mov
add
add
ss
inc
sbb
mov
push
mov
js
out
mov
mov
cmp
push
sti
add
and
shll
mov
sbb
out
fwait
mov
repz
add
pop
push
add
mov
stos
cmc
xor
mov
push
add
arpl
mov
pushf
push
movsl
loope
and
mov
mov
pop
or
and
xchg
xchg
ret
and
jae
inc
lcall
jg
dec
addr16
mov
mov
fmul
push
clc
popf
xor
mov
add
inc
dec
cmp
mov
sub
stos
lahf
and
aam
ficoms
add
pop
repz
pop
pop
clc
arpl
add
call
bound
mov
cltd
or
ja
mov
cli
inc
mov
pop
aas
iret
dec
dec
insl
mov
sub
addb
pop
lcall
mov
mov
push
and
mov
add
mov
xlat
jno
loope
inc
sbb
mov
int3
stc
push
ja
cld
pop
push
add
mov
mov
add
mov
or
push
mov
rcll
mov
sbb
mov
call
mov
pop
jns
inc
sbbl
aaa
gs
test
mov
out
mov
jp
add
mov
mov
push
jmp
add
pop
das
add
inc
add
lret
xor
dec
rolb
mov
jno
push
je
xor
push
stos
inc
insb
rolb
mov
xor
mov
xchg
sbb
add
mov
add
add
sbb
fwait
xchg
pop
das
jmp
test
lret
jge
add
fcmovnbe
add
mov
mov
mov
add
cmp
xor
stos
mov
mov
stc
les
addb
iret
sub
mov
add
call
jle
push
cmp
bound
mov
or
nop
add
repz
add
add
mov
rol
mov
add
mov
and
push
mulb
loope
add
js
xor
cmc
dec
lods
mov
sub
add
push
add
mov
enter
mov
sub
movsb
pop
mov
popf
pop
lds
mov
mov
cltd
fdiv
push
add
repnz
lods
mov
mov
add
mov
mov
mov
add
in
aam
adc
rolb
mov
xor
mov
add
xchg
and
call
jle
add
mov
sbb
test
popa
repnz
xor
sti
cmpsl
jmp
stos
xchg
inc
pop
inc
mov
daa
in
mov
pop
mov
pop
out
sahf
and
add
pop
cld
sub
mov
out
mov
xchg
clc
sbb
popf
mov
lret
shrl
mov
mov
cmp
dec
test
mov
sbb
inc
stc
jg
in
pop
scas
sub
add
xchg
icebp
lahf
test
fildl
jo
mov
das
test
mov
mov
xchg
out
scas
hlt
ja
cmc
lock
sub
mov
push
dec
and
mov
addb
inc
enter
mov
jb
mov
adc
mov
mov
in
ret
mov
mov
and
pop
idivb
jne
add
out
rolb
jecxz
sub
inc
add
int
shrl
dec
xor
mov
add
ljmp
adc
pusha
add
add
cmpsw
lods
movsl
pop
pop
cmpsb
dec
out
push
mov
pop
bound
mov
mov
mov
jmp
add
sub
lret
shll
jbe
add
icebp
dec
icebp
pushf
lret
mov
jno
ljmp
mov
add
pop
in
mov
addb
xchg
add
add
aad
inc
mov
out
cmp
mov
popf
mov
and
and
push
add
add
fxch
adc
mov
mov
hlt
inc
cwtl
pushf
in
popa
addr16
mov
es
rcrl
dec
push
xor
testl
hlt
and
xchg
dec
adc
mov
test
add
aad
cltd
cmp
fwait
cltd
mov
mov
mov
add
mov
mov
inc
imul
push
outsl
jecxz
movsl
stos
sub
mov
aad
int
xchg
icebp
das
mov
mov
cld
jle
sub
das
insb
push
mov
add
add
fs
pop
into
addb
xor
cli
xor
mov
pop
aad
insb
pushf
sub
push
push
add
add
mov
rolb
inc
dec
insl
add
sub
iret
outsl
iret
fildll
popa
fldl
jle
sti
dec
inc
add
or
lea
mov
lock
xchg
loope
mov
mov
fcomps
repz
sbb
inc
or
mov
fldenv
inc
jae
js
sbb
mov
leave
loope
jae
imull
cmc
sahf
dec
call
jnp
push
sbb
mov
enter
sbb
cmpsb
jae
clc
fisubs
add
add
movhps
inc
sbb
ja
mov
and
mov
mull
sti
ljmp
add
jg
mov
xor
ret
mov
clc
cs
mov
add
sub
xor
mov
mov
jmp
rorl
push
add
xor
inc
xchg
cli
bound
mov
jp
add
adc
mov
jmp
test
pop
das
test
insl
xor
mov
das
fdivrs
push
add
add
out
sbb
jns
or
mov
lea
xchg
push
pushf
aam
xlat
shll
and
mov
sub
mov
add
pusha
add
lahf
adc
inc
arpl
hlt
std
inc
rolb
mov
add
addb
pop
push
in
sbb
cld
rolb
mov
test
jno
enter
cwtl
mov
int
in
data16
xchg
add
or
add
pop
cltd
fs
test
lods
jle
insl
inc
imul
lcall
adc
xchg
mov
add
les
fcmovnbe
fwait
pusha
add
pop
xlat
push
jmp
and
or
mov
xchg
mov
pushf
ss
mov
popl
mov
jmp
negl
in
dec
adc
add
mov
xlat
das
inc
rcrl
lret
push
add
and
mov
dec
sub
inc
jg
in
dec
insb
mov
mov
lea
xchg
cmp
add
mov
out
jecxz
jle
inc
jmp
jmp
ss
add
addb
imul
add
mov
add
adc
add
mov
scas
orl
add
mov
mov
lds
scas
inc
mulb
test
cmp
hlt
push
lahf
arpl
or
fistpll
mov
bound
mov
add
jge
add
adc
mov
popf
inc
add
add
xchg
pop
sbb
add
add
cmp
mov
add
add
dec
jge
jecxz
fsts
rolb
imul
mov
repz
jl
loope
sbb
imul
mov
cld
lret
add
mov
add
push
stos
push
add
mov
add
mov
outsl
addr16
add
adc
mov
sub
xchg
add
dec
jl
sub
add
movsl
xor
mov
mov
fstpl
jo,pn
mov
dec
xor
lea
test
mov
gs
and
add
mov
jmp
inc
pop
cmpsb
jbe
inc
int
pop
inc
jmp
xor
mov
enter
pop
xchg
push
into
push
add
mov
fimull
pop
cmp
lret
xlat
sahf
movsl
aam
addb
ss
jo
mov
leave
add
mov
cmp
jecxz
add
mov
cmp
xorl
bound
mov
sahf
shll
and
xchg
mov
mov
adc
or
jge
xor
add
sub
fdivrl
add
rolb
mov
mov
add
sub
mov
scas
mov
and
add
aas
xor
add
push
data16
xor
dec
inc
add
fwait
pusha
add
in
popf
jns
add
pop
les
sbb
mov
add
cmp
mov
sbb
bound
mov
add
fisttpl
mov
aas
and
mov
dec
sbb
sahf
or
mov
push
pusha
add
xchg
faddl
je
insl
into
xchg
add
jae
xchg
add
call
and
pop
push
and
mov
add
mov
push
xchg
mov
xor
add
mov
push
add
jbe
jne
aam
add
push
add
int3
leave
insb
out
in
jp
lock
jmp
xchg
outsl
lds
cmp
push
cwtl
fdivrs
xchg
or
dec
sbb
sub
add
sbb
dec
mov
cltd
dec
insb
and
jae
jge
insb
cmp
add
add
pop
add
add
mov
sbb
mov
outsb
cmc
ret
mulb
add
addb
add
mov
push
mov
inc
dec
shrl
push
xor
mov
jg
jb
mov
add
sbb
lods
or
add
push
test
add
and
lcall
mov
aad
imul
jne
rolb
mov
mov
inc
add
sahf
mov
mov
pop
push
add
das
inc
leave
repz
sbb
pop
add
adc
add
rolb
mov
ds
mov
cli
dec
mov
mov
rorl
lds
pop
mov
jae
dec
out
fld
adc
mov
mov
pop
insl
into
jmp
add
sub
add
mov
out
push
jns
mov
sahf
cmpsl
mov
icebp
out
push
add
into
inc
imul
jle
xchg
add
add
loope
iret
sbb
repz
or
jp
add
mov
add
divb
lock
add
add
add
mov
inc
out
in
add
add
cmp
add
mov
leave
pop
loop
mov
mov
inc
jge
ret
pushf
fistl
testb
fcmovnbe
pop
jecxz
and
add
push
push
add
mov
mov
mov
mov
adc
sbb
addb
jbe
stc
cmpsl
jno
add
mov
jmp
add
add
out
jae
insl
push
mov
in
rolb
mov
test
add
and
popa
push
push
add
mov
fildl
pop
pop
imul
cmpl
jb
mov
sbbl
push
aas
push
in
sbb
mov
lcall
push
test
fnop
add
mov
sti
dec
icebp
mov
out
and
or
loopne
mov
repz
lods
cmp
mov
lea
cli
out
and
jg
add
jge
push
xchg
rcll
popa
sub
add
mov
inc
hlt
fsubl
lds
mov
mov
xor
iret
xchg
test
inc
mov
es
add
jle
mov
xchg
lods
pop
lods
daa
jbe
xor
mov
enter
or
stos
and
insb
dec
mov
jl
aas
xchg
jno
push
add
popf
jge
inc
js
std
jmp
mov
jg
mov
add
pop
pop
ljmp
rolb
mov
xor
mov
movsb
mov
add
add
rolb
mov
add
mov
add
pop
sar
rolb
mov
push
outsl
push
add
adc
mov
xchg
add
mov
jnp
fiaddl
das
push
mov
add
out
add
hlt
orl
mov
fildl
mov
mov
adc
pop
push
loopne
mov
xor
mov
xor
movsl
cli
mov
mov
mov
mov
mov
insl
xor
xor
mov
push
add
out
shl
pusha
add
mov
mov
mov
mov
xchg
push
mov
mov
cmp
movsl
mov
cmp
add
mov
nop
add
xor
mov
es
mov
das
push
fsubrl
xor
add
mov
mov
mov
lods
pop
xchg
mov
inc
add
mov
lcall
lcall
mov
add
add
inc
add
lock
mov
lea
sahf
cmp
mov
mov
pushf
push
add
add
add
mov
je
js
rolb
mov
mov
cwtl
jmp
xchg
add
add
roll
mov
dec
test
inc
add
jmp
add
mov
add
daa
aad
push
or
cs
xlat
push
cs
hlt
add
ret
aam
movsb
mov
mov
mov
mov
adc
or
sbbl
add
add
insl
mov
lret
cli
rolb
mov
rolb
mov
cmpsl
in
add
leave
cli
xor
inc
add
mov
addb
fistl
repnz
inc
push
add
adc
add
mov
cmp
or
add
ss
bound
mov
pushf
mov
lahf
pusha
add
mov
add
insb
mov
lcall
mov
xchg
pop
rolb
mov
loopne
mov
lds
ss
add
add
push
fcomps
pop
lods
xor
pop
mov
idivb
movlps
imul
cltd
test
cmp
pop
jmp
rolb
test
jbe
add
sub
cmpsl
rolb
mov
adc
add
and
mov
jle
pusha
add
xchg
add
mov
ret
mov
aad
cmc
and
mov
insb
popa
lret
imul
dec
leave
ljmp
mov
cmp
mov
mov
hlt
sub
stos
outsb
jb
mov
ficompl
in
int3
roll
mov
lahf
out
out
cltd
dec
lods
sbb
mov
dec
pop
scas
sbb
add
add
mov
jecxz
ret
enter
cmp
push
add
insb
lods
in
mov
pop
mov
mov
push
pop
fst
mov
popf
addr16
mov
add
pop
inc
shl
data16
test
jle
clc
addb
cmpsl
out
inc
add
aad
mov
mov
mov
lret
jb
mov
push
adc
mov
cltd
dec
mov
inc
mov
add
dec
sbb
push
daa
rcrl
sub
jb
mov
popa
das
mov
add
pop
cmp
xchg
add
mov
das
jns
adc
xor
mov
iret
int
mov
cmp
xor
jnp
add
jmp
xlat
aaa
cli
ja
fninit
dec
pop
test
mov
test
sub
or
or
cmp
sbb
int3
add
fwait
mov
repnz
mov
cmpsl
mov
push
loop
mov
out
arpl
add
ret
hlt
cmp
add
mov
cltd
jl
jecxz
nop
add
popa
test
fisubs
mov
mov
rolb
mov
mov
mov
add
sub
cmp
iret
pop
mov
jns
and
mov
mov
and
mov
mov
std
xor
adc
imul
xor
or
push
push
add
pop
xor
data16
mov
mov
pop
popf
mov
aas
test
movsb
fs
add
mov
or
mov
jg
int3
push
imul
push
js
data16
adc
add
sbbl
fsubr
xchg
add
cmpsl
pusha
add
divb
outsl
shl
ret
lret
mov
imull
mov
out
sub
outsl
or
add
add
aam
in
scas
cmp
lock
xchg
pop
pop
std
idivb
push
xchg
pop
pop
jne
insb
divb
add
sbb
faddl
xor
and
in
andl
sbb
and
cmc
xchg
pop
xchg
test
jle
pop
xor
cli
cmc
dec
out
and
mov
lods
les
add
fistps
jo
mov
mov
jo
mov
jl
lcall
or
pop
lea
add
mov
mov
out
mov
pop
mov
aad
popf
or
outsb
aam
pusha
add
add
rolb
dec
jl
fs
out
mov
rsqrtps
mov
add
and
mov
pop
add
mov
iret
sub
out
sbb
xor
pop
fldenv
ss
inc
daa
outsb
test
imul
mov
mov
dec
push
loop
mov
add
jbe
add
xor
or
cmp
fs
cmc
and
pushf
dec
repnz
int
lret
ds
add
loopne
mov
add
out
sub
or
add
and
add
add
add
or
xchg
pop
xchg
mov
mov
push
popf
in
fwait
adc
xchg
jo
mov
sbb
leave
or
das
add
add
mov
mov
xor
mov
mov
mov
xor
add
mov
cs
pusha
add
mov
and
mov
mov
cmp
push
add
push
xchg
and
insb
icebp
lds
rcrl
jecxz
xlat
sub
in
jle
lret
loopne
mov
add
push
cmpsl
sbb
or
scas
push
hlt
mov
cmp
std
sbb
inc
adc
mov
mov
jmp
add
jl
sbb
push
lds
dec
cmp
add
insl
add
push
xor
cmpsl
imul
mov
and
mov
rcll
imul
add
adc
mov
sub
add
add
jo
mov
mov
aaa
mov
add
neg
rep
es
and
dec
push
stc
inc
add
mov
lods
dec
inc
xlat
mov
add
cmc
outsl
push
cld
jmp
mov
nop
add
and
add
pop
fbld
and
mov
test
sbb
out
lret
inc
add
test
add
cmc
dec
imul
mov
cmp
imul
mov
mov
rcrl
add
cmpsl
aas
or
mov
mov
mov
and
mov
push
mov
dec
or
mov
mov
inc
cmp
add
add
add
xchg
sbb
jns
in
inc
add
cltd
jo
mov
add
push
fwait
out
adc
mov
jle
pop
je
daa
mov
in
or
add
pushf
enter
subl
and
ret
push
mov
movsl
faddl
xor
mov
add
pop
cmp
cmp
pop
xchg
mov
and
mov
dec
inc
add
mov
pop
ror
and
mov
push
add
mov
inc
dec
jne
lahf
mov
test
and
mov
out
icebp
lahf
cmp
imul
and
imul
mov
addb
push
out
xor
xchg
outsl
mov
mov
inc
add
add
mov
mov
jns
and
and
pusha
add
xchg
das
popf
aad
adc
fwait
addb
pop
sar
aaa
sti
push
sbb
xor
mov
daa
ret
daa
pop
lcall
inc
jo
mov
add
add
add
add
add
dec
adc
mov
mov
popf
lea
mov
aas
lods
pop
adc
mov
add
test
push
loopne
mov
out
mov
add
leave
inc
push
out
push
cltd
sub
xchg
js
adc
mov
mov
add
sti
mov
mov
add
mov
sbb
add
mov
mov
add
mov
ja
or
clc
movsb
xchg
add
test
mov
add
mov
xchg
sbb
add
imul
pop
imul
shrl
mov
fdivs
test
dec
test
or
adc
mov
mov
dec
into
xor
mov
jno
push
aas
push
dec
outsl
pushl
daa
dec
cmpsb
push
sti
xor
fldt
xchg
cmp
ret
inc
imul
outsb
addr16
mov
imul
xchg
and
mov
push
hlt
xor
ds
mov
insl
dec
rolb
mov
cs
dec
arpl
add
std
lods
sub
jns
pop
jae
mov
das
sahf
out
aam
add
lods
cmc
lcall
shl
pop
int3
dec
sub
and
jl
add
addr16
add
pop
cmp
dec
js
mov
mov
push
out
mov
cmp
add
addb
xor
mov
nop
add
mov
add
xlat
stc
mov
lret
sbb
and
mov
rcll
and
mov
lea
adc
jmp
outsl
dec
or
ja
stos
loopne
mov
inc
xor
mov
arpl
mov
mov
add
add
sub
add
icebp
es
add
add
push
dec
lods
adc
mov
mov
divb
xchg
stos
inc
jecxz
add
jg
rcrl
pop
cmc
rolb
mov
mov
jl
push
or
or
push
pusha
add
stos
push
test
jmp
mov
jb
mov
cmp
adc
mov
icebp
pop
je
push
mov
ja
scas
ljmp
add
into
sti
jle
ljmp
pop
mov
mov
pop
pusha
add
int3
inc
xor
rcl
mov
insl
stc
ljmp
add
dec
addr16
push
add
aam
or
push
inc
in
ret
pusha
add
enter
popa
popf
rorl
aaa
js
add
ja
ret
stc
xor
sti
movsl
push
push
add
xchg
add
ret
les
fcoms
sub
add
sub
pop
cmp
addb
and
mov
nop
add
call
popa
les
lret
mov
clc
push
add
mov
cmc
add
mov
in
mov
mov
xchg
xor
add
push
add
mov
fcmovnu
cmp
and
mov
mov
or
pop
pop
fsubrs
movntps
push
pop
and
mov
fmuls
adc
mov
cmpsl
insb
and
ud2
pop
xchg
xor
inc
add
jmp
jge
jge
scas
ret
sbb
mov
add
sbb
inc
add
pusha
add
pop
mov
popa
push
daa
adc
fs
jl
ror
stos
test
pop
mov
mov
hlt
jns
aad
add
jl
fwait
sub
mov
sbb
add
idivb
cmp
jns
pop
call
add
insl
test
incb
mov
add
test
imul
mov
pop
xchg
sub
cld
iret
stc
jno
roll
out
ljmp
dec
push
jp
adc
adc
dec
mov
and
out
or
and
mov
lret
push
outsb
dec
lret
mov
xor
dec
rolb
xchg
sbb
mov
or
or
mov
xchg
jge
and
mov
sbb
sbb
inc
add
or
push
push
movsb
push
push
jns
add
mov
dec
test
jle
mov
mov
mov
dec
mov
scas
scas
je
add
mov
fidivs
js
test
mov
insb
mov
push
add
in
sbb
cmp
sub
add
mov
push
mov
nop
leave
nop
jmp
add
xchg
in
psubsw
add
add
ja
cmp
mov
push
push
mov
add
mov
ss
cmpsb
mov
add
jae
repnz
nop
cld
jae
fbstp
mov
clc
repnz
nop
cld
jae
add
mov
dec
clc
repnz
nop
cld
jae
add
and
mov
pop
mov
push
mov
xchg
ret
xor
add
add
add
and
clc
repnz
nop
cld
jae
add
js
pop
clc
repnz
nop
cld
jae
add
add
add
xchg
and
mov
add
push
mov
nop
leave
nop
jmp
and
mov
add
xchg
std
movzwl
clc
repnz
nop
cld
jae
xlat
add
mov
adc
or
cmp
ret
add
ss
mov
repnz
mov
nop
leave
nop
jmp
add
lock
add
add
add
push
mov
xchg
ret
ss
add
inc
add
xchg
mov
clc
repnz
nop
cld
jae
add
pop
mov
clc
repnz
nop
cld
jae
and
xlat
push
add
sub
sar
nop
nop
cld
jae
add
add
mov
mov
clc
repnz
nop
cld
jae
sahf
add
push
xchg
in
cltd
mov
clc
repnz
nop
cld
jae
mov
add
add
je
clc
repnz
nop
cld
jae
and
test
push
pop
add
clc
repnz
nop
cld
jae
add
add
mov
or
repnz
nop
cld
jae
add
xchg
add
mov
xchg
ret
or
add
mov
add
add
in
add
ja
and
fldl
rcrl
cmp
andl
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
add
pop
clc
repnz
nop
cld
jae
add
mov
add
mov
clc
repnz
nop
cld
jae
mov
and
mov
add
sub
add
cmp
inc
add
xor
aam
shr
push
mov
xchg
ret
add
add
add
in
nop
leave
nop
jmp
mov
mov
in
lock
mov
push
mov
nop
leave
nop
jmp
add
add
push
cmp
loope
repnz
nop
cld
jae
add
add
pop
mov
fiadds
nop
nop
cld
jae
pop
and
add
sahf
cmp
popa
jo
cs
repnz
nop
cld
jae
add
adc
inc
sbb
mov
nop
leave
nop
jmp
add
mov
fisttpll
add
into
incl
ss
add
fldl
add
sahf
add
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
popa
sbb
add
ja
mov
nop
nop
cld
jae
add
add
add
mov
adc
repnz
nop
cld
jae
lret
add
ret
push
mov
in
inc
jne
add
add
add
test
test
and
add
repnz
nop
cld
jae
sahf
mov
add
mov
xchg
ret
and
and
out
sub
test
cld
call
in
nop
leave
nop
jmp
add
movsb
aas
add
push
mov
nop
leave
nop
jmp
movsb
frstor
fldl
movsb
mov
aam
std
add
clc
repnz
nop
cld
jae
add
cmp
pop
add
clc
repnz
nop
cld
jae
pop
lods
add
mov
xchg
ret
add
add
add
lods
and
clc
repnz
nop
cld
jae
push
add
jno
icebp
xor
clc
repnz
nop
cld
jae
ret
add
add
call
push
mov
nop
leave
nop
jmp
add
clc
repnz
nop
cld
jae
push
enter
add
mov
or
nop
nop
cld
jae
push
and
mov
mov
pusha
clc
repnz
nop
cld
jae
and
ret
outsb
pusha
clc
repnz
nop
cld
jae
add
xlat
push
ljmp
nop
nop
cld
jae
mov
pop
xlat
add
push
clc
repnz
nop
cld
jae
adc
ja
jnp
push
repnz
add
add
mov
add
xchg
hlt
scas
add
push
mov
xchg
ret
sahf
add
push
add
push
in
not
push
mov
xchg
ret
fldl
add
xor
add
aad
xor
push
mov
nop
leave
nop
jmp
and
loope
mov
clc
repnz
nop
cld
jae
ret
mov
add
cltd
dec
push
mov
nop
leave
nop
jmp
mov
add
add
and
out
xchg
ds
clc
repnz
nop
cld
jae
and
pop
and
adc
and
clc
repnz
nop
cld
jae
inc
mov
mov
nop
nop
cld
jae
add
insl
add
push
mov
nop
leave
nop
jmp
add
rolb
add
pop
rep
clc
repnz
nop
cld
jae
rcll
or
mov
nop
leave
nop
jmp
add
or
adc
add
dec
push
clc
repnz
nop
cld
jae
add
add
inc
incl
jge
clc
repnz
nop
cld
jae
rolb
and
push
inc
roll
repnz
nop
cld
jae
test
add
and
mov
rclb
sub
cmp
ret
add
pop
movsb
add
mov
xchg
ret
add
add
cmp
nop
cld
jae
add
add
sahf
add
push
mov
xchg
ret
xchg
mov
adc
mov
mov
clc
repnz
nop
cld
jae
and
and
mov
or
clc
repnz
nop
cld
jae
add
fimull
enter
xchg
ret
mov
push
fstpl
add
add
repnz
nop
cld
jae
jno
add
rep
push
mov
nop
leave
nop
jmp
add
test
add
mov
nop
leave
nop
jmp
add
fildl
add
add
dec
jne
clc
repnz
nop
cld
jae
pop
shl
lcall
nop
leave
nop
jmp
ret
lods
popa
mov
mov
xchg
ret
add
add
in
enter
call
stos
notl
in
nop
leave
nop
jmp
add
xchg
pop
add
clc
repnz
nop
cld
jae
add
add
add
mov
add
clc
repnz
nop
cld
jae
add
aad
xchg
xor
add
push
mov
nop
leave
nop
jmp
add
daa
sub
in
nop
leave
nop
jmp
add
add
mov
cmp
ja
repnz
nop
cld
jae
add
add
sbb
mov
xchg
ret
inc
add
add
add
or
and
nop
cld
jae
add
ss
or
jge
pop
cmp
mov
xchg
ret
lret
jno
push
add
add
ret
stc
add
clc
repnz
nop
cld
jae
lret
ss
add
dec
test
push
mov
nop
leave
nop
jmp
and
push
add
add
mov
xchg
ret
add
add
add
mov
repnz
nop
cld
jae
add
add
mov
nop
leave
nop
jmp
add
and
add
add
adc
stos
add
pop
xchg
add
add
mov
jmp
incl
rolb
add
or
add
mov
inc
loopne
mov
mov
je
push
mov
nop
leave
nop
jmp
lods
mov
push
mov
xchg
ret
test
pop
and
add
add
add
add
add
sbb
add
enter
mov
push
add
sub
clc
repnz
nop
cld
jae
enter
add
mov
xchg
iret
and
clc
repnz
nop
cld
jae
dec
mov
add
mov
mov
pushf
inc
xchg
inc
pop
je
add
test
xor
rep
push
mov
nop
leave
nop
jmp
add
add
fldl
clc
repnz
nop
cld
jae
or
shrb
nop
nop
cld
jae
and
add
xor
clc
repnz
nop
cld
jae
add
or
xchg
inc
mov
add
clc
repnz
nop
cld
jae
fistl
test
push
mov
xchg
ret
and
add
add
sqrtps
loopne
inc
add
add
mov
xchg
int3
inc
add
lock
add
test
mov
clc
repnz
nop
cld
jae
add
mov
rolb
add
movl
xchg
mov
mov
mull
mov
nop
leave
nop
jmp
or
add
je
push
mov
nop
leave
nop
jmp
jp
mov
cmp
push
mov
nop
leave
nop
jmp
and
push
mov
xchg
ret
pop
lret
add
add
add
mov
add
add
leave
nop
jmp
ret
mov
mov
clc
repnz
nop
cld
jae
mov
jp
rep
clc
repnz
nop
cld
jae
add
pop
in
pop
add
add
pop
add
outsl
fldl
mov
lea
add
add
add
add
mov
push
mov
xchg
ret
mov
or
pop
xlat
or
sbbb
nop
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
movsb
mov
mov
push
mov
nop
leave
nop
jmp
add
lock
and
movzwl
clc
repnz
nop
cld
jae
into
mov
add
xor
add
sub
add
clc
repnz
nop
cld
jae
add
pop
decl
push
mov
xchg
ret
add
add
into
add
pop
push
clc
repnz
nop
cld
jae
add
and
mov
add
outsl
push
mov
nop
leave
nop
jmp
add
sbb
jae
mov
clc
repnz
nop
cld
jae
add
add
add
in
nop
leave
nop
jmp
add
add
mov
lods
clc
repnz
nop
cld
jae
and
add
push
push
mov
xchg
ret
add
and
add
and
out
mov
clc
repnz
nop
cld
jae
in
add
jno
fisttpl
jmp
and
and
dec
add
lret
lret
add
add
clc
repnz
nop
cld
jae
into
add
sbb
repnz
nop
cld
jae
pop
in
add
add
test
add
push
mov
nop
leave
nop
jmp
add
jno
sub
repnz
nop
cld
jae
fldl
mov
cs
push
mov
nop
leave
nop
jmp
adc
enter
add
nop
nop
cld
jae
jp
inc
mov
mov
mov
xchg
ret
add
add
push
daa
arpl
js
repnz
nop
cld
jae
add
xor
mov
mov
repnz
nop
cld
jae
and
dec
mov
clc
repnz
nop
cld
jae
add
movsb
movsb
xlat
pop
call
clc
repnz
nop
cld
jae
add
add
rolb
mov
ja
clc
repnz
nop
cld
jae
add
mov
xchg
ret
xchg
add
add
xor
push
mov
nop
leave
nop
jmp
add
push
add
cmp
mov
nop
leave
nop
jmp
push
in
jno
fnstsw
icebp
inc
add
loope
jno
mov
mov
mov
nop
leave
nop
jmp
ja
and
dec
mov
clc
repnz
nop
cld
jae
add
add
jmp
pop
add
or
mov
xlat
add
in
mov
clc
repnz
nop
cld
jae
ss
sbb
dec
add
rclb
testb
cmp
ret
mov
pop
movsb
lret
lods
jmp
mov
popa
rolb
add
ret
sbb
mov
xchg
ret
or
add
push
ret
ret
aad
mov
push
mov
nop
leave
nop
jmp
movsb
add
popa
push
or
repnz
nop
cld
jae
jp
xor
add
mov
push
mov
xchg
ret
add
xchg
add
cmc
roll
xchg
ret
add
add
xor
pop
add
push
mov
nop
leave
nop
jmp
add
add
mov
pop
add
clc
repnz
nop
cld
jae
xor
add
mov
mov
call
nop
leave
nop
jmp
cmp
add
add
mov
and
repnz
nop
cld
jae
add
sahf
add
mov
mov
inc
add
or
rolb
add
push
mov
nop
leave
nop
jmp
add
add
pop
std
mov
clc
repnz
nop
cld
jae
add
inc
loope
add
mov
clc
repnz
nop
cld
jae
xor
add
add
and
cmpl
jae
inc
add
cld
and
clc
repnz
nop
cld
jae
mov
into
xlat
inc
add
nop
nop
cld
jae
jp
and
pop
add
cli
pop
add
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
add
pop
add
add
add
clc
repnz
nop
cld
jae
fcmovnu
lock
mov
pop
clc
repnz
nop
cld
jae
adc
add
adc
adc
and
mov
dec
mov
push
mov
nop
leave
nop
jmp
or
cmp
add
clc
repnz
nop
cld
jae
and
add
add
ljmp
add
pop
mov
and
cltd
mov
push
mov
nop
leave
nop
jmp
lods
and
dec
shlb
jg
push
mov
nop
leave
nop
jmp
ret
mov
and
imul
data16
add
and
add
xor
inc
int3
mov
clc
repnz
nop
cld
jae
add
add
mov
fisttps
nop
cld
jae
add
add
add
mov
mov
xchg
ret
add
xchg
jp
add
and
lahf
lea
clc
repnz
nop
cld
jae
in
cmp
push
add
add
clc
repnz
nop
cld
jae
xchg
add
add
repnz
nop
cld
jae
add
cmp
nop
cld
jae
add
xchg
xchg
lock
and
pop
clc
repnz
nop
cld
jae
xlat
add
add
lods
add
dec
adc
fst
inc
add
add
and
add
pop
push
clc
repnz
nop
cld
jae
add
add
ret
mov
clc
repnz
nop
cld
jae
mov
add
mov
in
mov
push
mov
xchg
ret
mov
add
les
clc
repnz
nop
cld
jae
fildl
add
ret
loop
mov
nop
leave
nop
jmp
add
add
mov
shl
clc
repnz
nop
cld
jae
or
lock
in
jne
jmp
add
fstpl
add
imul
xchg
ret
add
adc
shlb
add
repnz
nop
cld
jae
in
add
mov
pop
clc
repnz
nop
cld
jae
mov
inc
add
pop
or
push
clc
repnz
nop
cld
jae
add
sbb
sbb
add
nop
nop
cld
jae
lods
ret
and
cmp
jle
clc
repnz
nop
cld
jae
add
add
mov
push
push
clc
repnz
nop
cld
jae
mov
xor
mov
xchg
ret
mov
add
add
stos
mov
push
mov
xchg
ret
jno
enter
adcl
sbb
inc
add
mov
add
add
rolb
lahf
dec
push
mov
nop
leave
nop
jmp
add
xor
je
clc
repnz
nop
cld
jae
and
add
mov
add
clc
repnz
nop
cld
jae
add
add
into
add
cld
xor
clc
repnz
nop
cld
jae
mov
pop
mov
cld
jae
and
add
out
ret
ss
clc
repnz
nop
cld
jae
cmp
adc
fildl
add
jp
push
mov
xchg
ret
popa
mov
add
repnz
nop
cld
jae
in
lret
add
adc
add
cmpsl
movsb
xadd
add
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
add
xchg
add
push
mov
nop
leave
nop
jmp
fnsave
inc
xchg
repnz
nop
cld
jae
add
or
add
clc
repnz
nop
cld
jae
add
or
push
dec
mov
clc
repnz
nop
cld
jae
jp
mov
push
jno
cmp
dec
adc
repnz
nop
cld
jae
or
add
cmpsl
or
nop
nop
cld
jae
add
xlat
add
fdivr
push
mov
xchg
ret
pop
jno
pop
loope
add
mov
repnz
push
mov
nop
leave
nop
jmp
push
loope
add
mov
xchg
xchg
ficoms
repnz
nop
cld
jae
add
add
into
mov
add
sub
not
inc
add
cmp
add
sbb
jo
mov
aad
ficoms
repnz
nop
cld
jae
add
add
add
mov
push
bound
mov
pusha
clc
repnz
nop
cld
jae
mov
mov
lea
clc
repnz
nop
cld
jae
add
add
pop
inc
cwtl
add
clc
repnz
nop
cld
jae
add
xchg
movsb
enter
in
clc
repnz
nop
cld
jae
mov
jp
les
mov
xchg
ret
pop
mov
add
clc
repnz
nop
cld
jae
pop
add
lret
add
push
or
repnz
nop
cld
jae
test
add
add
add
pop
push
mov
xchg
ret
into
add
add
xlat
mov
push
mov
nop
leave
nop
jmp
add
add
enter
mov
add
mov
xchg
ret
into
or
add
in
add
mov
clc
repnz
nop
cld
jae
add
add
jne
clc
repnz
nop
cld
jae
lret
add
add
nop
nop
cld
jae
movsb
lret
add
ss
movsb
clc
repnz
nop
cld
jae
ret
add
mov
call
mov
nop
leave
nop
jmp
ret
add
cmp
aas
and
push
mov
xchg
ret
add
rcl
mov
mov
mov
xchg
ret
add
mov
add
mov
clc
repnz
nop
cld
jae
loope
or
clc
repnz
nop
cld
jae
movsb
push
add
pop
mov
xor
nop
cld
jae
push
add
add
clc
repnz
nop
cld
jae
add
mov
pop
add
clc
repnz
nop
cld
jae
or
add
and
repnz
nop
cld
jae
add
add
ja
fcoml
repnz
nop
cld
jae
add
mov
push
sbb
mov
cmc
incl
and
add
add
and
xchg
fisttpl
mov
lea
push
mov
nop
leave
nop
jmp
add
mov
lods
lea
test
add
clc
repnz
nop
cld
jae
mov
and
mov
push
mov
nop
leave
nop
jmp
add
add
add
jb
mov
mov
clc
repnz
nop
cld
jae
add
and
add
clc
repnz
nop
cld
jae
movsb
add
fnsave
and
and
push
mov
xchg
ret
add
add
add
fnsave
push
push
mov
xchg
ret
movsb
ret
sbb
add
sub
hlt
roll
xchg
ret
movsb
add
add
mov
nop
nop
cld
jae
mov
add
mov
push
cmp
dec
cmp
repnz
nop
cld
jae
mov
or
add
int3
mov
clc
repnz
nop
cld
jae
loope
mov
in
nop
leave
nop
jmp
add
gs
mov
addb
mov
inc
inc
add
add
mov
nop
leave
nop
jmp
add
and
add
popl
push
mov
nop
leave
nop
jmp
add
ret
mov
repnz
nop
cld
jae
and
jno
mov
xchg
arpl
push
mov
xchg
ret
mov
enter
or
xlat
lds
icebp
inc
pop
jl
clc
repnz
nop
cld
jae
and
and
outsb
xchg
push
mov
nop
leave
nop
jmp
pop
add
jno
mov
call
clc
repnz
nop
cld
jae
add
lret
add
nop
nop
cld
jae
mov
add
or
into
ror
push
mov
xchg
ret
rclb
lret
and
add
push
push
mov
xchg
ret
rolb
add
ss
cltd
hlt
clc
repnz
nop
cld
jae
add
jno
push
push
mov
xchg
ret
loope
add
rolb
add
inc
xor
mov
clc
repnz
nop
cld
jae
fbld
add
repnz
nop
cld
jae
and
inc
add
in
and
clc
repnz
nop
cld
jae
or
add
or
mov
repnz
nop
cld
jae
add
and
xor
mov
cmp
push
mov
nop
leave
nop
jmp
jno
add
mov
clc
repnz
nop
cld
jae
and
add
ss
add
clc
repnz
nop
cld
jae
into
mov
sbb
add
mov
cmpl
push
mov
nop
leave
nop
jmp
lock
adc
repnz
nop
cld
jae
add
add
pop
add
cltd
and
push
mov
nop
leave
nop
jmp
ja
mov
or
clc
repnz
nop
cld
jae
add
pop
mov
push
mov
xchg
ret
add
test
adc
loope
push
clc
repnz
nop
cld
jae
rolb
add
ret
pop
xor
push
clc
repnz
nop
cld
jae
add
and
popa
imulb
adc
in
nop
leave
nop
jmp
xor
pop
push
clc
repnz
nop
cld
jae
pop
mov
add
push
clc
repnz
nop
cld
jae
add
add
xor
xchg
clc
repnz
nop
cld
jae
lock
add
add
or
test
add
mov
clc
repnz
nop
cld
jae
add
and
mov
nop
cld
jae
or
add
ret
mov
sbb
inc
add
and
jno
lods
push
clc
repnz
nop
cld
jae
mov
mov
mov
add
push
mov
xchg
ret
ss
adc
add
mov
mov
xchg
ret
movsb
and
add
mov
push
loopne
repnz
nop
cld
jae
add
add
jp
jne
add
clc
repnz
nop
cld
jae
add
pop
in
in
mov
push
mov
xchg
ret
add
add
and
sub
repnz
nop
cld
jae
lock
mov
sar
repnz
nop
cld
jae
roll
add
pop
clc
repnz
nop
cld
jae
mov
lods
add
ss
add
clc
repnz
nop
cld
jae
loope
push
push
add
xchg
mov
repnz
nop
cld
jae
add
push
add
add
xor
clc
repnz
nop
cld
jae
pop
push
add
add
add
add
xchg
cmpl
leave
nop
jmp
add
mov
pusha
clc
repnz
nop
cld
jae
sahf
add
movsb
mov
mov
mov
xchg
ret
mov
add
mov
sub
clc
repnz
nop
cld
jae
or
mov
add
mov
call
clc
repnz
nop
cld
jae
or
add
push
push
mov
xchg
ret
add
movb
idiv
add
jmp
mov
ja
add
add
in
ret
clc
repnz
nop
cld
jae
add
add
adc
add
repnz
nop
cld
jae
add
push
popa
xor
mov
add
repnz
nop
cld
jae
or
add
mov
xchg
ret
add
add
add
out
push
add
push
mov
nop
leave
nop
jmp
add
and
fistl
pushl
clc
repnz
nop
cld
jae
add
int
inc
push
adc
push
mov
nop
leave
nop
jmp
ja
ret
add
nop
nop
cld
jae
popa
lret
add
add
add
cmp
mov
in
nop
leave
nop
jmp
test
push
add
or
add
repnz
nop
cld
jae
into
add
icebp
out
xor
mov
add
fbstp
push
mov
nop
leave
nop
jmp
add
add
mov
xchg
ret
add
add
jno
ds
clc
repnz
nop
cld
jae
dec
xchg
mov
add
cmp
in
rolb
xchg
add
xor
add
add
push
mov
push
mov
nop
leave
nop
jmp
or
addb
push
add
in
nop
leave
nop
jmp
pop
add
fildl
clc
repnz
nop
cld
jae
add
ja
mov
clc
repnz
nop
cld
jae
push
dec
and
add
add
jl
and
into
loopne
add
add
add
inc
add
add
add
add
xchg
lret
or
inc
add
xor
pop
mov
clc
repnz
nop
cld
jae
or
push
push
push
movsb
sbb
repnz
nop
cld
jae
rolb
add
popa
mov
mov
clc
repnz
nop
cld
jae
and
out
mov
clc
repnz
nop
cld
jae
pop
movsb
and
push
clc
repnz
nop
cld
jae
mov
push
add
push
mov
add
inc
data16
mov
mov
add
nop
add
mov
mov
xchg
ret
add
sbb
add
add
mov
xchg
ret
add
loope
push
add
outsb
cmpl
push
mov
xchg
ret
add
add
rclb
xlat
inc
add
add
add
mov
enter
mov
mov
nop
leave
nop
jmp
add
cmp
nop
nop
cld
jae
ja
add
lret
lock
xlat
iret
sub
clc
repnz
nop
cld
jae
lret
cmp
add
test
push
mov
nop
leave
nop
jmp
ret
popa
add
fidivrs
jmp
add
add
pop
xchg
mov
add
clc
repnz
nop
cld
jae
add
and
pop
add
add
clc
repnz
nop
cld
jae
or
or
in
lret
movzwl
clc
repnz
nop
cld
jae
add
add
pop
imul
clc
repnz
nop
cld
jae
sahf
add
shll
add
in
add
jns
add
add
mov
into
and
fldl
sti
mov
clc
repnz
nop
cld
jae
mov
add
pushl
clc
repnz
nop
cld
jae
add
sarl
xlat
push
push
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
add
add
dec
cmp
repnz
nop
cld
jae
add
into
xor
pusha
add
lret
mov
xchg
ret
jp
add
addl
fidivrs
lret
in
nop
leave
nop
jmp
add
adc
mov
pushl
clc
repnz
nop
cld
jae
add
xchg
mov
push
mov
xchg
ret
movsb
mov
add
ret
mov
clc
repnz
nop
cld
jae
filds
aas
lea
clc
repnz
nop
cld
jae
and
loope
add
push
test
add
clc
repnz
nop
cld
jae
add
aaa
stc
add
clc
repnz
nop
cld
jae
ret
pushf
push
mov
add
mov
add
out
add
arpl
icebp
in
push
add
repnz
nop
cld
jae
add
rcll
dec
sub
clc
repnz
nop
cld
jae
add
add
dec
or
mov
xchg
ret
jno
fildl
add
pop
mov
nop
nop
cld
jae
in
add
loope
xor
nop
cld
jae
pop
mov
add
adc
nop
nop
cld
jae
xlat
and
add
add
clc
repnz
nop
cld
jae
add
ja
inc
pop
arpl
add
repnz
nop
cld
jae
add
xor
mov
push
mov
nop
leave
nop
jmp
add
in
jg
jns
clc
repnz
nop
cld
jae
add
or
push
sub
in
nop
leave
nop
jmp
push
and
pop
add
mov
push
mov
xchg
ret
add
add
add
lcall
cld
jae
add
add
ret
inc
xchg
pop
pusha
push
mov
nop
leave
nop
jmp
movsb
ss
lret
test
add
mov
aad
lcall
nop
leave
nop
jmp
add
add
add
sub
test
push
mov
nop
cld
jae
jp
in
adc
mov
add
repnz
nop
cld
jae
mov
add
jmp
add
add
pop
add
add
sbb
add
clc
repnz
nop
cld
jae
and
mov
lods
clc
repnz
nop
cld
jae
mov
add
pop
mov
push
mov
xchg
ret
jp
fbld
jmp
popa
rolb
add
add
roll
ss
fwait
push
push
mov
nop
leave
nop
jmp
and
jp
add
enter
jmp
nop
cld
jae
xor
add
add
inc
clc
repnz
nop
cld
jae
and
add
shlb
add
dec
cmp
repnz
nop
cld
jae
add
or
sub
nop
nop
cld
jae
mov
add
nop
nop
cld
jae
add
add
add
mov
nop
leave
nop
jmp
add
ret
mov
mov
clc
repnz
nop
cld
jae
ja
add
xlat
add
dec
push
push
mov
xchg
ret
loope
cmp
ret
daa
cmpsl
adc
mov
push
mov
nop
leave
nop
jmp
add
add
add
add
adc
jnp
pop
clc
repnz
nop
cld
jae
jp
and
xlat
add
add
clc
repnz
nop
cld
jae
adc
add
leave
nop
jmp
push
add
add
add
add
or
repnz
nop
cld
jae
add
movsb
add
movsl
pop
pop
push
mov
xchg
ret
add
add
dec
add
add
xchg
out
inc
cli
pop
push
mov
xchg
ret
roll
add
pop
add
add
clc
repnz
nop
cld
jae
lods
mov
xor
sar
repnz
nop
cld
jae
add
add
lea
push
mov
nop
leave
nop
jmp
add
add
add
push
mov
nop
leave
nop
jmp
add
inc
add
sahf
xchg
add
mov
xchg
ret
pop
test
add
loope
add
jmp
mov
nop
leave
nop
jmp
add
mov
clc
repnz
nop
cld
jae
push
add
add
incb
repz
repnz
nop
cld
jae
test
cmp
ret
add
and
inc
add
and
lock
add
dec
push
push
mov
xchg
ret
mov
add
adc
clc
repnz
nop
cld
jae
add
and
add
pop
add
push
mov
nop
leave
nop
jmp
add
ret
loope
popa
in
push
clc
repnz
nop
cld
jae
lock
add
add
cmp
add
add
repnz
nop
cld
jae
into
push
out
add
in
nop
leave
nop
jmp
and
and
movzwl
clc
repnz
nop
cld
jae
add
add
add
add
jp
push
mov
nop
leave
nop
jmp
jp
add
inc
add
nop
nop
cld
jae
add
add
add
shrb
mov
xchg
ret
add
add
movsb
ss
movzwl
push
mov
xchg
ret
lret
movsb
ja
add
jp
clc
repnz
nop
cld
jae
ret
add
and
mov
push
push
mov
nop
leave
nop
jmp
fldl
add
jp
or
add
push
mov
xchg
ret
xlat
movsb
add
mov
add
sbb
repnz
nop
cld
jae
add
dec
add
xor
cwtl
push
push
mov
xchg
ret
loope
xchg
add
fstpl
jo
push
mov
nop
leave
nop
jmp
xlat
add
add
add
inc
add
repnz
nop
cld
jae
add
fistpl
mov
clc
repnz
nop
cld
jae
mov
mov
mov
cs
push
mov
xchg
ret
pop
add
call
clc
repnz
nop
cld
jae
into
lods
add
add
mov
push
mov
nop
leave
nop
jmp
add
ss
fisttps
mov
clc
repnz
nop
cld
jae
add
enter
enter
nop
nop
cld
jae
xchg
add
mov
pop
and
clc
repnz
nop
cld
jae
add
add
call
cmp
cmp
ret
add
add
shll
dec
push
clc
repnz
nop
cld
jae
test
add
add
cmpsl
fdivr
clc
repnz
nop
cld
jae
xor
inc
and
mov
nop
leave
nop
jmp
mov
movsb
and
test
mov
add
push
mov
xchg
ret
pop
add
enter
add
cwtl
push
push
mov
xchg
ret
xchg
add
sahf
fistps
sbb
repnz
nop
cld
jae
add
mov
nop
nop
cld
jae
in
add
add
sahf
jmp
and
add
and
mov
loope
push
push
mov
xchg
ret
push
add
push
and
pusha
push
mov
xchg
ret
ss
add
add
add
add
mov
push
mov
nop
leave
nop
jmp
ret
mov
push
mov
xchg
ret
add
mov
mov
iret
xchg
clc
repnz
nop
cld
jae
mov
add
decl
nop
nop
cld
jae
pop
xor
ficomps
mov
xchg
ret
pop
add
popa
add
pop
movsb
add
mov
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
nop
jmp
add
mov
mov
outsb
jbe
cwtl
add
mov
mov
mov
push
jmp
nop
cld
jae
ja
pop
mov
lret
jne
push
mov
nop
leave
nop
jmp
or
sub
inc
add
add
roll
sub
mov
xchg
ret
mov
add
ja
enter
nop
nop
cld
jae
add
add
sbb
hlt
inc
add
in
mov
and
add
cltd
pop
push
mov
xchg
ret
add
add
or
push
mov
xchg
ret
fldl
adc
add
xchg
add
add
xor
add
clc
repnz
nop
cld
jae
add
cli
mov
clc
repnz
nop
cld
jae
add
add
sahf
sahf
mov
clc
repnz
nop
cld
jae
add
mov
js
inc
add
mov
jp
and
add
pushf
mov
push
mov
xchg
ret
add
add
lods
mov
clc
repnz
nop
cld
jae
mov
add
add
in
nop
leave
nop
jmp
loope
add
nop
nop
cld
jae
and
popa
shrl
lahf
and
clc
repnz
nop
cld
jae
add
roll
add
mov
xchg
ret
mov
sahf
enter
lock
push
push
mov
xchg
ret
jno
add
mov
jmp
lods
fistl
add
enter
mov
clc
repnz
nop
cld
jae
sbb
xor
clc
repnz
nop
cld
jae
add
or
out
push
mov
add
pusha
xor
xor
add
add
mov
js
push
mov
nop
leave
nop
jmp
mov
sahf
dec
call
clc
repnz
nop
cld
jae
add
add
scas
mov
push
mov
nop
leave
nop
jmp
xor
mov
addr16
add
clc
repnz
nop
cld
jae
add
inc
lret
add
repz
mov
push
clc
repnz
nop
cld
jae
cmp
filds
inc
into
and
mov
icebp
inc
add
add
test
add
xor
xchg
xlat
call
add
inc
add
add
push
ffree
rolb
nop
add
pop
push
mov
xchg
ret
adc
mov
ret
lods
pop
or
jge
clc
repnz
nop
cld
jae
add
movsb
add
nop
nop
cld
jae
fldl
ss
and
je
clc
repnz
nop
cld
jae
add
add
test
push
mov
xchg
ret
lret
add
push
and
ja
add
add
cld
jae
jno
mov
repnz
nop
cld
jae
add
add
mov
mov
mov
xchg
ret
add
popa
repnz
add
clc
repnz
nop
cld
jae
and
add
add
clc
repnz
nop
cld
jae
and
inc
add
mov
xchg
ret
lock
add
sub
repz
mov
nop
leave
nop
jmp
add
add
and
fdiv
movsb
clc
repnz
nop
cld
jae
and
movsb
movb
add
mov
push
mov
nop
leave
nop
jmp
mov
cmpw
clc
repnz
nop
cld
jae
fists
push
stc
mov
clc
repnz
nop
cld
jae
loope
add
xorl
clc
repnz
nop
cld
jae
add
xchg
fcoml
mov
xchg
ret
ret
loope
add
lahf
call
clc
repnz
nop
cld
jae
add
or
or
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
dec
add
popa
xchg
add
cmp
repnz
nop
cld
jae
add
dec
imul
push
mov
nop
leave
nop
jmp
add
add
fcomip
lods
push
mov
sub
sub
jnp
sbb
cmp
add
inc
loopw
bound
dec
testl
add
add
arpl
add
clc
repnz
nop
cld
jae
fnsetpm(287
add
mov
sub
mov
xchg
ret
add
add
add
add
xchg
pop
push
clc
repnz
nop
cld
jae
and
mov
sahf
test
push
pop
inc
add
push
mov
xchg
ret
add
jno
or
shlb
mov
add
push
mov
xchg
ret
mov
add
movsb
fildl
add
incl
add
and
add
add
and
add
mov
roll
add
clc
repnz
nop
cld
jae
add
mov
xchg
ret
add
add
add
or
add
call
in
nop
leave
nop
jmp
add
add
sbb
add
clc
repnz
nop
cld
jae
or
cld
add
clc
repnz
nop
cld
jae
add
pop
jp
push
add
clc
push
mov
nop
leave
nop
jmp
add
add
loope
int3
movzwl
clc
repnz
nop
cld
jae
add
add
inc
jb
clc
repnz
nop
cld
jae
cmp
add
mov
clc
repnz
nop
cld
jae
pop
rol
inc
add
and
push
and
add
mov
xchg
ret
push
add
add
add
movsb
and
mov
push
mov
xchg
ret
sahf
add
add
fcomip
jo
mov
add
clc
repnz
nop
cld
jae
filds
add
add
popa
push
mov
nop
leave
nop
jmp
add
add
or
mov
xchg
ret
movsb
add
movb
add
mov
xor
mov
adc
cmc
clc
call
sub
and
mov
je
clc
repnz
nop
cld
jae
add
add
xchg
push
mov
nop
leave
nop
jmp
shlb
and
pop
daa
call
nop
cld
jae
ret
add
xor
adc
ret
clc
repnz
nop
cld
jae
or
add
and
add
nop
cld
jae
add
add
mov
dec
push
mov
nop
leave
nop
jmp
sahf
or
ret
add
out
xor
jmp
add
mov
and
mov
add
add
add
inc
pushl
push
mov
nop
leave
nop
jmp
add
and
inc
ds
push
mov
xchg
ret
add
or
add
ss
imul
nop
cld
jae
pop
mov
add
and
push
mov
nop
leave
nop
jmp
mov
add
lods
add
add
add
pop
dec
push
mov
nop
leave
nop
jmp
loope
and
xlat
mov
add
cmpsb
fdivrl
clc
repnz
nop
cld
jae
add
mov
mov
mov
nop
leave
nop
jmp
fcmovne
add
cmp
sahf
push
clc
repnz
nop
cld
jae
add
add
into
add
add
jne
push
mov
xchg
ret
add
shlb
add
test
push
mov
nop
leave
nop
jmp
fbstp
ret
aas
clc
repnz
nop
cld
jae
dec
add
add
sbb
add
repnz
nop
cld
jae
pop
cmp
adc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
mov
fcoms
in
repz
sub
lret
add
out
mov
add
mov
nop
cld
jae
lods
add
fldl
mov
jne
push
mov
xchg
ret
add
add
add
popa
movsl
add
mov
repnz
nop
cld
jae
add
add
add
inc
add
or
clc
repnz
nop
cld
jae
mov
inc
sub
xor
call
in
nop
leave
nop
jmp
and
mov
scas
imul
clc
repnz
nop
cld
jae
add
mov
mov
push
mov
nop
leave
nop
jmp
and
add
mov
mov
clc
repnz
nop
cld
jae
mov
add
test
add
call
in
nop
leave
nop
jmp
into
pop
add
mov
clc
repnz
nop
cld
jae
add
pop
push
mov
xchg
ret
add
mov
add
xchg
add
lods
fldl
xchg
ret
add
add
jno
mov
popa
add
mov
xchg
ret
add
cmp
add
add
add
push
mov
nop
leave
nop
jmp
add
movsb
and
add
push
mov
xchg
ret
lock
add
popa
mov
jmp
add
and
or
fldl
mov
nop
nop
cld
jae
add
lret
inc
in
clc
repnz
nop
cld
jae
cmp
sbb
test
cld
clc
repnz
nop
cld
jae
add
inc
leave
xor
push
mov
nop
leave
nop
jmp
loope
add
add
pop
lea
push
mov
xchg
ret
dec
add
add
add
mov
mov
adc
mov
nop
leave
nop
jmp
add
add
nop
nop
cld
jae
pop
loope
add
jp
add
mov
clc
repnz
nop
cld
jae
cmp
add
call
clc
repnz
nop
cld
jae
sarl
outsl
popa
fs
repnz
nop
cld
jae
add
mov
or
push
mov
nop
leave
nop
jmp
xor
sbb
test
repnz
nop
cld
jae
add
add
mov
push
mov
nop
leave
nop
jmp
add
xor
push
mov
jge
out
sbbb
add
add
in
xchg
push
sub
ret
out
xchg
es
adc
outsl
loop
mov
jb
mov
rolb
mov
xchg
inc
push
loopne
mov
cmp
add
mov
in
dec
dec
imul
adc
sbb
jp
aam
add
mov
sbb
cmpsb
jmp
in
cmpsl
and
and
in
bswap
push
jle
mov
addb
aaa
pop
cld
sub
mov
scas
scas
in
push
arpl
add
mov
sub
mov
mov
repz
cld
loop
mov
push
jne
sub
cmp
and
add
out
mov
mov
add
jns
xchg
add
add
loop
mov
add
imul
and
mov
mov
mov
mov
cmp
sbb
pop
or
fsubs
add
push
out
sbb
rcr
outsb
cld
mov
into
les
add
rolb
mov
lds
dec
jmp
arpl
pusha
add
mov
cmpsb
in
inc
add
and
mov
adc
out
mov
mov
push
or
mov
push
or
push
sbb
loopne
mov
mov
inc
andl
cld
inc
arpl
adc
mov
pop
pop
das
mov
mov
xor
mov
xchg
je
lock
data16
cmpsl
jge
add
add
mov
add
push
add
mov
pop
push
in
mov
mov
out
add
xchg
add
mov
jl
clc
push
stos
cmp
movsb
sub
jnp
adc
mov
xchg
mov
add
pop
ror
in
mov
lcall
add
das
mov
fwait
aad
bound
mov
rolb
xchg
into
stc
pop
mov
add
add
or
mov
int
mov
push
add
mov
add
pop
push
add
jp
mov
add
cmp
orl
mov
stos
lods
dec
fidivl
cs
cmc
testb
jb
mov
fsubrs
or
add
addl
loopne
mov
mov
mov
lock
jp
mov
xchg
aas
push
imul
fdivrl
lret
jmp
out
inc
inc
add
popa
push
jecxz
mov
jmp
fsubr
and
pusha
add
and
mov
xchg
popa
sub
mov
mov
mov
mov
ds
mov
mov
inc
ret
sbb
lret
ror
cmp
repz
loopne
mov
add
sbb
mov
add
mov
ds
jecxz
add
in
cs
mov
pop
bound
mov
add
fwait
jb
mov
movsl
cmc
adc
mov
mov
sbb
add
mov
repnz
lods
rcrl
rolb
inc
pop
mov
pop
stc
or
mov
add
dec
add
mov
jo
mov
mov
mov
mov
sahf
je
add
push
inc
push
adc
add
addr16
subl
gs
add
inc
adc
mov
cmp
rolb
mov
mov
pop
pop
repz
push
add
add
arpl
scas
les
add
sub
jecxz
xlat
or
add
pushf
sub
sbbl
ds
push
ds
cltd
popf
movsl
xchg
jge
adc
mov
dec
dec
sbb
jno
add
dec
jne
test
mov
adc
lcall
jo
mov
add
mov
add
mov
add
jne
adc
mov
iret
repnz
outsl
adc
mov
insl
jl
pop
pop
jns
add
mov
push
add
mov
fdivrl
lods
xchg
cmp
add
push
mov
test
sti
inc
fwait
mov
mov
ljmp
xor
mov
push
mov
xchg
pushf
fcomps
sbb
add
dec
loopne
mov
inc
outsb
push
pushf
fs
push
mov
or
and
lds
dec
in
sub
bound
mov
xchg
mov
xor
mov
mov
mov
mov
fmulp
cmpsb
cwtl
stos
cli
sbb
cmc
nop
add
mov
add
jno
xchg
neg
push
pop
fucomi
cmc
push
pop
xor
mov
jmp
mov
jae
add
or
mov
add
add
mov
stc
xchg
into
push
js
xor
in
out
test
and
ret
movsl
sub
cwtl
jmp
aas
dec
lods
jg
add
sbb
add
sbb
add
add
dec
cmpsl
xlat
xor
bound
mov
mov
lcall
add
ljmp
sbb
movl
jecxz
add
add
adc
and
mov
cmp
add
pop
and
bound
mov
add
add
cmp
dec
in
mov
add
sbb
rolb
mov
jae
xlat
inc
jp
sbb
loope
ret
fisubrl
jno
daa
jae
push
pop
sahf
xchg
mov
icebp
inc
lahf
loop
mov
mov
push
mov
andps
add
aad
add
popf
cmp
and
adc
pushf
cmpsl
roll
icebp
mov
or
add
xchg
add
add
xor
and
fcmovne
and
mov
xor
xor
add
mov
pop
ljmp
mov
cmpsb
or
or
add
in
hlt
jo
mov
add
into
mov
add
test
cmp
sbb
insb
bound
mov
sub
dec
hlt
cli
inc
int
ret
lock
mov
add
jno
push
loope
inc
add
filds
add
jp
mov
adc
add
dec
ljmp
mov
mov
push
add
cmp
sbb
ficomps
sbb
add
jmp
add
lds
push
dec
mov
in
sahf
xor
mov
imul
f2xm1
add
add
mov
mov
add
inc
mov
bound
mov
add
add
dec
dec
push
addb
nop
add
push
mov
and
mov
add
loope
fstl
loop
mov
cmp
xor
mov
jno
sbbl
pop
mov
xor
mov
add
cmp
mov
mov
or
cmpsb
mov
ret
sbb
fadds
add
mov
push
or
dec
adc
and
mov
push
or
fdiv
inc
add
addb
mov
andl
test
xlat
fnstcw
push
jne
or
loope
push
inc
push
xchg
add
ret
inc
testl
mov
in
mov
mov
rolb
mov
cmp
jo
mov
jecxz
mov
inc
add
and
mov
mov
loopne
mov
jae
in
mov
mov
jbe
cmp
sbb
add
mov
inc
add
inc
xchg
push
fisttpl
add
inc
add
add
add
or
xlat
stc
sub
add
xchg
mov
jae
dec
jne
insl
data16
lock
mov
jmp
add
inc
add
dec
fldl
mov
pop
adc
xor
add
nop
add
add
sarl
andl
les
mov
mov
leave
je
cmpsb
xor
mov
lret
call
cmp
enter
mov
add
jno
stc
mov
pop
push
push
add
idivl
add
call
popf
jno
je
mov
js
mov
or
scas
push
outsl
les
mov
add
jne
jbe
add
push
imul
cmc
adc
mov
rolb
out
add
stos
out
jp
out
test
xlat
push
ss
in
push
mov
movsl
addb
mov
cmp
mov
add
dec
outsl
adc
call
sub
adc
mov
imul
daa
xchg
xchg
push
or
xor
mov
add
xchg
js
mov
add
sub
addr16
add
out
mov
push
out
addr16
ljmp
imul
mov
add
jge
xchg
fldenv
inc
mov
mov
cmp
add
add
sti
push
rolb
mov
sahf
cmp
and
mov
in
sub
push
lock
icebp
mov
fimull
int3
jns
xor
incl
adc
add
ja
aaa
xchg
add
gs
and
pushf
sub
push
int3
aad
bound
mov
inc
push
jno
mov
jg
inc
negl
dec
adc
mov
pop
test
ret
iret
ljmp
mov
mov
es
xchg
fsubrl
enter
mov
dec
test
jmp
jo
mov
jg,pn
add
mov
inc
add
pusha
add
xor
pusha
add
add
mov
aam
call
addb
imul
mov
mov
mov
ficoml
add
dec
es
mov
call
mov
jbe
notb
add
lret
add
pop
jo
mov
jmp
lds
mov
int
add
dec
cmp
aas
out
aad
cli
and
mov
test
add
fcomip
add
xchg
popa
mov
mov
mov
scas
fmull
cmp
xchg
insl
aaa
rolb
idivl
cmpsb
xchg
push
lret
pop
pop
repnz
sub
push
shl
int3
clc
fists
and
sbb
add
add
jb
mov
dec
mov
mov
mov
sarl
mov
xor
add
add
je
jo
mov
sbb
sbb
mov
arpl
dec
pop
xchg
repnz
int3
inc
add
aaa
faddl
pop
adc
clc
stos
cmpsb
mov
xor
mov
cmpsl
xor
mov
cld
mov
and
add
dec
pusha
add
sub
jno
loope
add
jg
add
push
call
xchg
js
cmpsl
xchg
movsb
sub
push
cmp
into
divl
mov
stc
xor
mov
mov
loopne
mov
pusha
add
sbb
mov
jecxz
lcall
add
mov
xor
and
repz
mov
xchg
xchg
add
in
jle
push
add
mov
and
mov
add
int
and
in
enter
mov
add
sub
add
scas
mulb
add
jmp
jns
jb
mov
les
pop
jl
add
mov
fdivs
mov
dec
lcall
xchg
pop
sbb
cmp
mov
into
into
xor
mov
add
and
sbb
push
add
dec
mov
xchg
fs
push
mov
mov
mov
push
mov
mov
cmp
add
in
in
pop
inc
lea
popf
adc
mov
daa
cmp
lods
mov
mov
mov
push
lahf
cli
dec
les
add
mov
or
inc
cmpsl
mov
add
mov
idivl
negb
xchg
fisttps
cli
mov
add
mov
add
test
lea
xchg
cmp
pop
arpl
ret
or
iret
sbb
inc
mov
pop
imul
mov
jns
repnz
out
add
aaa
insl
push
add
mov
jmp
mov
lcall
or
fcom
fwait
and
xchg
cmp
xchg
add
mov
out
add
add
mov
lods
fidivrl
fwait
adc
mov
add
jg
clc
fisubrl
push
fidivrs
addr16
int3
jne
int
add
ficoml
mov
add
jbe
addb
inc
add
clc
or
mov
into
rcl
mov
push
inc
add
add
add
add
sar
inc
das
clc
data16
xchg
add
add
mov
mov
mov
out
jmp
add
jl
adc
mov
mov
dec
fsubr
adc
dec
and
and
add
inc
test
add
les
and
add
lds
aaa
xchg
insb
inc
mov
add
xchg
add
fstpt
mov
stos
jo
mov
pop
mov
add
mov
pop
dec
nop
add
lds
repz
test
test
or
in
addb
nopl
lcall
xor
sub
add
jae
aaa
add
add
inc
pushf
pop
stos
cmpsb
mov
insb
xchg
cmpsl
ret
in
hlt
adc
mov
aaa
pop
popa
or
mov
pop
jns
add
daa
cmp
pop
pop
push
mov
aas
rcrl
vxorpd
or
xchg
mov
add
xchg
add
xor
add
push
pop
scas
xchg
lods
mov
jl
movb
adcl
je
pop
sahf
aas
jo
mov
add
pop
rorl
add
sbb
in
js
pop
out
cmpl
inc
add
fldcw
lcall
mov
add
das
and
outsb
push
add
mov
les
xchg
pop
lea
add
or
loop
mov
leave
dec
aaa
jecxz
push
nop
add
mov
fstl
mov
pop
inc
mov
lret
imul
iret
push
inc
add
mov
mov
stos
mov
fcoml
push
inc
add
and
mov
aas
inc
ja
insl
lret
inc
xor
mov
xor
mov
mov
je
out
jge
add
adc
jmp
xchg
mov
cmpsb
scas
inc
pop
mov
jmp
mov
pop
mov
add
stc
roll
movsl
outsl
jg
loope
xor
jle
add
insl
insb
or
ja
std
push
dec
push
cli
lds
add
imul
and
mov
or
mov
and
mov
push
outsl
scas
pushf
mov
add
add
mov
cmp
add
xor
cmpsb
aaa
pop
test
cmovb
mov
adc
mov
adc
int3
and
mov
mov
push
ret
test
bound
mov
inc
add
int
fucomi
cmp
pushl
js
pop
out
push
fadd
ljmp
xchg
jg
scas
out
nop
add
scas
rolb
mov
scas
sbb
adc
imul
ja
jbe
pop
fisubrs
xchg
mov
mov
lret
push
push
scas
mov
mov
mov
mov
add
popa
daa
mov
ficoml
push
test
mov
cmp
mov
int3
mov
push
add
dec
xor
dec
dec
inc
nop
add
add
mov
in
mov
add
push
sub
jo
mov
rol
out
mov
insb
loopne
mov
imul
mov
mov
mov
loopne
mov
xchg
push
sub
or
cld
divl
add
std
leave
fadds
into
xchg
mov
mov
mov
addr16
adc
mov
and
fildll
dec
movsb
fsin
inc
add
jo
mov
push
xchg
rolb
mov
fists
sahf
fsubr
cmp
jp
push
imul
ja
sbb
adc
add
aas
inc
mov
and
pop
aad
add
test
push
pop
test
xchg
fldenv
mov
mov
adc
mov
add
enter
push
add
mov
cmp
push
test
in
and
arpl
sbb
add
test
iret
mov
inc
cmp
imul
dec
imul
jno
mov
add
add
or
add
mov
add
sub
mov
push
aas
icebp
adc
mov
iret
dec
xchg
add
lea
jl
es
and
sbb
xchg
mov
shll
into
push
add
mov
cli
jmp
sbb
add
rcll
cltd
les
lret
cmp
dec
subl
cltd
mov
pusha
add
mov
mov
insl
mov
add
cmpsb
dec
add
mov
push
ficoml
sub
or
cli
xor
outsb
xchg
ret
sub
jo
mov
imul
add
ljmp
insl
adc
mov
mov
sbb
adc
jo
mov
pop
sub
add
xor
mov
inc
movsl
inc
add
push
int3
jno
sbb
mov
adc
mov
mov
lea
aam
jnp
jge
mov
int
into
rolb
add
mov
sub
pop
jmp
int
xchg
cmp
cmp
sbb
popf
and
jle
add
add
pusha
add
out
or
jnp
jmp
aam
dec
inc
add
xor
insb
in
pop
stos
mov
test
sbb
mov
lds
int3
xchg
adc
mov
mov
mov
mov
mov
push
push
mov
xlat
jp
mov
fs
jb
mov
in
mov
mov
stos
dec
and
mov
aam
testl
push
sar
mov
xor
push
decl
btc
pop
cmp
add
cmp
stc
sub
jl
inc
add
cmp
bound
mov
add
cwtl
inc
cmp
add
mov
pop
and
mov
mov
mov
call
add
test
mov
rolb
mov
xchg
mov
aaa
leave
xchg
add
mov
sub
xchg
sbb
jns
push
sub
in
add
test
mov
mov
add
inc
mov
add
out
leave
lods
inc
xchg
aad
bound
mov
push
adc
adc
pop
scas
xor
mov
add
jl
repnz
mov
pushf
mov
add
jp
sbb
mov
lods
rorl
sbb
pop
mov
mov
pusha
add
dec
mov
and
mov
xlat
pop
xor
gs
push
enter
fdivs
xor
in
scas
mov
add
sbbl
cli
cwtl
insb
pop
sbb
mov
xchg
add
push
pushf
fsub
out
or
mov
sbb
add
aam
add
mov
mov
mov
sub
fnstsw
cmp
std
fnstenv
pop
mov
pop
sbb
je
leave
mov
add
dec
ret
sbbl
cmp
mov
pop
imul
add
addb
in
push
jg
pop
mov
push
sbb
add
pop
mov
out
mov
ss
add
ret
jle
add
mov
icebp
adc
rolb
mov
jmp
mov
sub
mov
add
cmp
ss
push
dec
je
test
xlat
movsl
adc
push
xchg
push
add
add
cs
lret
js
inc
cmp
mov
sub
add
daa
or
inc
cmovp
outsl
jle
jle
enter
ret
xlat
xchg
or
into
lret
mov
mov
add
std
movsl
xlat
jnp
fdivrl
lret
rolb
mov
and
xchg
gs
lahf
jmp
add
and
mov
xchg
mov
ror
jmp
jns
mov
add
mov
je
add
push
sub
addb
cli
or
mov
inc
mov
xchg
mov
sub
push
push
mov
rcll
js
insl
cld
call
pop
push
cs
push
jae
and
mov
mov
pop
xor
pop
scas
xor
mov
pop
pop
in
xchg
shll
mov
pop
sub
je
popa
cli
xchg
fwait
push
ja
call
in
xchg
dec
mov
adc
cmp
jmp
xchg
sub
xor
frstor
mov
pop
pop
pop
jmp
xchg
add
sbb
push
add
outsl
sub
mov
aas
cmp
jmp
movsl
outsl
pop
or
cmp
in
ja
xor
leave
jge
out
jnp
add
and
mov
shll
mov
add
cmp
ss
add
ss
and
add
std
mov
outsl
xchg
or
xor
loop
mov
mov
add
add
rolb
mov
xor
lret
jg
rolb
mov
scas
add
lods
adc
mov
mov
rolb
mov
rolb
mov
fistps
sbb
scas
cmc
rcll
jb
mov
add
mov
cli
ja
js
or
lods
lret
mov
pop
lods
xchg
mov
adc
push
add
in
enter
mov
mov
ljmp
add
dec
push
inc
sbb
scas
lods
pop
cmp
mov
mov
xchg
mov
mov
test
add
push
mov
inc
movsb
sbb
test
cmpsb
outsl
rolb
push
add
ja
out
bound
mov
inc
add
pop
sbb
add
xchg
mov
xchg
mov
fmuls
and
add
push
mov
sbb
add
pushf
addb
pop
lret
adc
mov
dec
mov
int
xchg
cmp
int
add
sub
mov
mov
push
mov
bound
mov
xor
mov
out
lahf
push
or
call
pop
bsf
xor
nop
add
xor
mov
cs
fisttpll
inc
sbb
mov
add
sahf
in
in
mov
mov
jmp
out
lods
ficomps
mov
addb
fs
mov
cmc
xlat
addb
mov
dec
mov
dec
or
fildl
add
mov
mov
add
call
xor
mov
mov
adc
mov
lahf
in
jmp
test
xchg
and
push
aas
ljmp
cmp
ret
mov
mov
add
mov
push
jl
add
push
fmul
cmp
addb
test
mov
xlat
stos
sub
fs
inc
sub
notl
add
push
mov
mov
scas
mov
mov
sbb
adc
or
mov
cmp
pop
les
iret
push
inc
sub
cmp
into
xlat
inc
stos
int3
or
xor
push
push
ljmp
add
add
jmp
repz
sub
add
mov
vmovd
mov
adc
mov
in
movsb
cltd
add
mov
push
ficomps
fnstenv
mov
test
jge
rolb
mov
cmp
sbb
adc
test
add
loope
cmp
pop
lcall
mov
and
sbb
adc
mov
add
sbb
dec
rolb
mov
xor
ret
xchg
mov
cmp
mov
mov
mov
dec
lret
lcall
sub
ja
adc
pop
inc
pop
inc
pushf
bound
mov
movsb
adc
mov
dec
aam
leave
xchg
add
imul
adc
pushf
jnp
or
sbb
cmp
rolb
mov
lea
mov
dec
push
mov
add
rcr
cltd
add
dec
xor
mov
inc
cltd
sbb
mov
push
push
rolb
mov
mov
arpl
add
add
lea
sub
sbb
pushf
mov
and
mov
ds
movsl
sub
xlat
outsl
cmp
push
movsl
sub
rolb
mov
cmc
xor
add
insb
xchg
sub
mov
push
or
enter
mov
stos
mov
idivb
cmpsb
dec
mov
add
pop
les
lock
std
ret
sub
and
mov
out
enter
stos
jecxz
imul
mov
loope
add
mov
push
sub
mov
dec
push
sbb
push
add
mov
inc
add
dec
icebp
jae
mov
add
add
push
mov
mov
add
in
jge
call
lods
mov
mov
inc
rcll
add
add
call
push
add
fstpt
xchg
jmp
and
in
add
mov
movsb
rolb
mov
push
xchg
test
nop
add
cli
inc
mov
push
pusha
add
sbb
orl
mov
addb
mov
movsb
mov
inc
add
mov
out
pop
arpl
loope
ljmp
js
add
icebp
imul
inc
add
in
lock
popa
pusha
add
adc
mov
jge
add
loopne
mov
loop
mov
add
rorl
mov
mov
outsl
jae
idivl
mov
push
loope
cbtw
cmp
mov
mov
pop
sti
movsb
loopne
mov
push
add
and
mov
push
add
jno
sbb
dec
jecxz
add
mov
insl
pop
jecxz
rolb
or
add
mov
add
jp
mov
mov
loop
mov
inc
add
sub
int3
sbb
ljmp
stc
in
in
outsb
jnp
and
mov
mov
xor
mov
mov
and
mov
dec
daa
ljmp
xchg
in
cmp
add
lock
div
xlat
pop
negb
lret
adc
xchg
inc
outsl
inc
fisttpl
aaa
push
inc
jge
inc
add
add
add
mov
dec
loope,pn
loopne
mov
xorl
mov
mov
xchg
xor
rolb
push
dec
xor
mov
movsb
sub
mov
cli
or
pop
xchg
mov
and
outsb
pop
insl
push
addb
clc
pusha
add
mov
jge
test
cmc
push
scas
clc
xor
jne
leave
mov
add
rolb
mov
mov
add
push
insb
and
rolb
mov
ds
addb
inc
jmp
mov
insb
add
mov
jge
and
xchg
cs
iret
aaa
mov
stos
out
addb
lahf
cmp
add
movsl
xchg
test
jp
jge
xchg
pop
push
add
mov
in
iret
xchg
mov
stos
mov
mov
mov
mov
out
pop
jns
bound
mov
add
lret
scas
jno
ret
inc
adc
mov
xor
dec
sub
xor
scas
pop
jecxz
add
mov
sbb
pop
cmp
lea
mov
mov
mov
add
add
aas
and
fiaddl
or
sub
cmp
ret
call
add
imul
pop
push
add
notb
insl
xchg
test
push
xor
mov
mov
add
pop
pop
sbb
mov
ret
mov
lahf
xchg
clc
mov
jp
push
inc
fnstenv
stos
jb
mov
push
out
aas
sub
mov
push
int
add
mov
cli
out
push
add
out
push
add
push
adc
mov
sub
in
adc
xchg
stos
cmpsl
rolb
mov
sbb
dec
mov
lds
push
add
xor
add
push
cld
jle
data16
aaa
aad
mov
jl
add
mov
inc
call
sbb
addb
xor
cmp
mov
in
mov
repz
mov
pop
adc
mov
stc
jo
mov
or
push
int
inc
mov
adc
je
adc
mov
rolb
mov
insl
xor
mov
cmp
add
or
nop
add
xchg
cmp
push
stos
fbld
xchg
sub
mov
xchg
lock
cwtl
xchg
adc
mov
gs
add
pusha
add
cmp
test
add
push
jns
or
in
push
out
add
xchg
fcompl
mov
add
rcl
jae
repz
jb
mov
clc
insb
jge
xchg
dec
inc
leave
inc
xchg
lea
gs
sbb
pop
rolb
mov
and
mov
and
lea
popf
mov
jmp
cltd
mov
mov
push
lods
call
fidivl
add
jns
mov
push
test
mov
jno
sub
imul
aas
push
add
mov
mov
add
aad
xor
ret
negl
js
fisubrs
insl
mov
test
lods
scas
stos
arpl
xchg
add
fsubp
mov
cmc
mov
add
lcall
adc
mov
cmpsb
xor
mov
push
fildl
mov
cs
add
push
adc
mov
xchg
sub
das
mov
das
aaa
adc
lahf
lret
cmp
add
cs
and
xchg
add
out
into
insb
andl
mov
mov
xchg
enter
add
imul
daa
aam
adc
addr16
pop
bound
mov
inc
rolb
mov
push
mov
out
arpl
ret
jae
jl
cmp
mov
ss
mov
dec
test
aam
fimuls
adc
add
add
dec
jbe
mov
sub
pop
ja
jnp
in
add
cmpsl
mov
add
mov
pop
test
mov
iret
addb
iret
xchg
dec
out
push
mov
test
outsb
out
push
js
bound
mov
xchg
ret
lcall
add
mov
in
xchg
pop
out
je
test
ret
sti
mov
add
jp
mov
xor
imul
cmpsl
cmpw
mov
mov
outsb
pushf
jae
add
inc
jns
scas
testb
adc
mov
lret
push
add
rcll
add
add
mov
mov
xchg
ret
fisubs
scas
gs
add
push
daa
sub
cmp
jae
add
xchg
ds
clc
push
push
xchg
sbb
insl
pop
repz
push
xchg
dec
mov
dec
inc
jmp
sub
adc
mov
xlat
loopne
mov
sbb
mov
sbb
add
dec
jl
jl
jl
or
mov
hlt
push
push
lods
push
aas
ljmp
adc
aas
pop
mov
pop
andl
dec
test
mov
insl
add
rolb
scas
mov
add
fwait
inc
inc
jmp
or
add
pop
add
aaa
int3
and
mov
lret
cmc
sub
ljmp
mov
add
stos
inc
add
fistpll
test
bound
mov
dec
or
inc
add
sbb
mov
add
and
stos
cmp
arpl
lcall
add
xchg
loope
fwait
xchg
dec
add
les
lds
addb
imul
outsb
push
sub
setnp
add
mov
sub
daa
aaa
jno
test
mov
mov
add
mov
xor
mov
dec
pop
and
xchg
outsb
push
and
xchg
jns
repnz
adc
fs
and
mov
mov
rolb
mov
rolb
mov
add
shll
out
cmpsb
cmp
push
mov
mov
add
mov
leave
hlt
aaa
adc
sbb
mov
xor
in
das
ficompl
adc
mov
and
or
mov
xlat
outsb
dec
xchg
add
add
dec
xor
mov
mov
push
sbb
btcl
push
xchg
mov
add
dec
mov
outsl
lret
add
adc
mov
in
daa
cmpsb
adcl
or
mov
add
mov
sub
add
add
sub
leave
pop
cwtl
xor
frstor
sbb
push
insb
aam
add
add
and
fmull
add
cs
mov
rolb
mov
or
xchg
pop
aaa
fneni(8087
add
mov
lods
cmp
into
call
mov
sti
xchg
sarl
sbb
std
iret
incb
or
pop
dec
cmp
movsb
adcl
mov
sbb
mov
mov
add
sub
and
mov
dec
pop
xchg
add
and
in
pushf
xor
sub
test
in
iret
push
mov
inc
lahf
and
addb
mov
jecxz
mov
add
pop
leave
lea
add
dec
jmp
sbb
jp
mov
mov
add
push
add
add
pop
outsl
push
add
mov
aad
and
xchg
test
add
add
fisubrl
mov
and
and
cmp
out
pop
fsincos
hlt
sub
dec
jb
mov
sti
dec
cmpl
dec
ljmp
pop
sbb
add
roll
aad
xchg
les
imul
dec
inc
adc
mov
add
outsl
lret
sbbl
fists
add
push
idivl
ds
mov
dec
shll
mov
xchg
add
sbb
xor
les
add
inc
ret
das
mov
jp
add
hlt
sbb
stos
push
outsb
sti
mov
sbb
pop
inc
add
negb
outsb
pop
movsl
sub
and
add
mov
mov
mov
cmpl
scas
push
notl
mov
jle
negb
leave
push
cmpxchg
add
mov
pop
pop
fisttps
scas
in
jmp
push
add
mov
dec
fldt
dec
jmp
nop
add
jecxz
call
mov
or
inc
add
add
mov
mov
pop
imul
int
rolb
mov
add
repnz
add
add
fildll
hlt
arpl
dec
rolb
mov
add
in
insl
out
mov
mov
add
fcoms
mov
into
dec
addb
popf
out
add
mov
add
adc
mov
add
push
push
dec
adc
add
push
add
lods
lret
add
bound
mov
inc
rolb
mov
push
sub
add
sub
mov
inc
jmp
lea
or
jne
add
mov
jno
and
dec
in
repnz
test
add
cs
les
inc
add
ja
jbe
fstpl
add
mov
hlt
cltd
cmp
rolb
mov
push
fistl
push
lock
mov
ljmp
or
mov
std
iret
pop
sbb
dec
lds
or
fisttpl
aas
jns
fstpt
pop
inc
stc
cmp
add
fstl
add
addb
add
mov
pop
mov
sahf
push
fimuls
add
mov
push
xor
mov
jbe
add
lods
and
mov
mov
scas
adc
mov
js
xchg
movsl
mov
push
add
mulb
mov
add
test
aas
mov
push
lahf
pop
jl
lret
add
lds
lahf
xlat
push
mov
mov
jb
mov
movsb
mov
mov
stos
out
sahf
arpl
dec
das
std
sti
pusha
add
out
sbb
pop
add
jmp
fldt
mov
hlt
cld
jnp
dec
mov
cmp
pusha
add
imul
jo
mov
inc
xor
mov
test
mov
rorl
mov
pop
bound
mov
push
add
filds
pushf
mov
mov
out
xor
mov
popf
roll
add
movsl
xor
xchg
jbe
adc
or
cwtl
push
cmp
xchg
jo
mov
jp
call
sti
out
test
add
stc
pop
and
mov
aam
test
add
add
mov
add
xchg
mov
insb
mov
test
add
mov
add
lret
jo
mov
test
popa
stos
and
mov
addb
jae
pop
lret
cs
dec
vcvtsd2ss
pop
push
and
mov
repz
mov
push
filds
shll
stos
data16
add
out
sbb
add
pop
testl
daa
adc
sbb
inc
add
cmp
pop
sbb
or
add
loop
mov
test
fnstcw
add
stos
push
jge
loop
mov
gs
ficompl
lahf
push
mov
sbb
aam
dec
or
sbb
popa
adc
add
cwtl
cs
rolb
xchg
in
ljmp
aad
and
add
add
mov
aaa
sahf
aas
lret
insb
stos
divb
mov
mov
cmp
js
xor
mov
add
fisubrs
mov
cmpsb
add
ss
mov
clc
sti
push
add
mov
mov
rolb
mov
lret
pop
dec
inc
mov
imul
out
add
js
mov
clc
jp
sub
cmp
mov
inc
mov
rolb
mov
loopne
mov
icebp
in
mov
aas
sbb
pop
movsl
sub
sbb
sub
mov
dec
movsb
add
cmc
inc
add
add
sub
mov
pop
add
sti
pushl
fbstp
mov
or
out
cmp
mov
and
inc
aaa
aad
jge
add
scas
add
mov
adcl
cld
aaa
dec
sub
call
add
add
mov
int
pop
imul
cmpsl
mov
popf
sti
in
dec
mov
rolb
mov
mov
lcall
add
mov
add
iret
pop
mov
mov
adc
mov
rolb
jecxz
push
fcmovnbe
push
addr16
inc
adc
pushf
xor
mov
xchg
add
mov
in
mov
iret
arpl
mov
pop
lds
mov
psubb
add
jb
mov
add
ror
push
adc
mov
in
test
jmp
sbb
mov
or
adc
sbb
inc
add
mov
hlt
pusha
add
add
and
add
fcomps
sbb
addr16
aam
xchg
nop
add
jb
xchg
add
out
sub
lret
add
push
sub
pop
sbb
insb
dec
sbb
movsb
inc
fisttps
mov
add
mov
dec
push
or
imul
cmp
hlt
mov
cmp
inc
mov
pusha
add
rolb
mov
cmp
out
inc
mov
add
or
xlat
mov
adc
add
clc
pop
int3
sub
sub
add
and
mov
add
add
mov
test
mov
push
add
mov
xchg
in
jbe
fs
outsl
cmc
pop
pop
cli
push
mov
xchg
sbb
int3
repnz
sbb
mov
daa
or
dec
lcall
fcoms
rol
mov
add
stc
mov
dec
clc
andps
pop
adc
ljmp
add
repnz
add
inc
add
popa
mov
add
into
xchg
lcall
push
add
icebp
pop
jbe
addb
lods
push
push
std
cmp
xchg
clc
out
cmp
xchg
mov
push
add
mov
jo
mov
es
stos
mov
cmp
jb
mov
cli
xchg
add
mov
xlat
dec
lods
imul
out
xchg
xorl
mov
mov
add
loope
add
lret
test
jae
xor
mov
cmp
push
adc
insl
mov
fs
dec
xchg
cs
mov
add
mov
add
in
je
in
rcl
rolb
pop
mov
mov
mov
sub
lock
fdivrs
mov
add
mov
fnsetpm(287
xor
test
jg
rolb
add
mov
test
fnstsw
call
in
daa
lret
push
cwtl
sbb
mov
add
in
sub
fsub
fstps
mov
xor
mov
mov
xlat
cli
push
mov
orl
push
add
mov
add
mov
mov
add
leave
cmp
cmp
add
in
mull
add
mov
fucomip
lcall
pop
stos
sbb
xor
mov
sub
aad
test
jae
inc
sbb
inc
add
mov
adc
mov
clc
dec
mov
xor
inc
add
repz
sahf
cwtl
ja
xor
xchg
push
fildl
in
jecxz
out
mov
mov
fsubl
aam
fs
xor
out
add
mov
addb
faddp
int
xor
out
aas
pop
inc
add
push
add
xor
xchg
fistps
push
aaa
lea
pop
xchg
inc
or
scas
pop
aas
in
pop
dec
cli
xor
fstpt
cltd
test
popl
mov
add
jne
js
xor
fisubrl
and
pop
aad
mov
add
add
dec
outsl
mov
dec
mov
movsl
in
push
add
mov
fistpl
sub
push
push
mov
mov
xor
mov
mov
fmul
jae
dec
roll
push
addb
dec
xor
add
sub
add
cli
cmp
add
xchg
add
jmp
add
add
mov
stos
pusha
add
push
jl
lock
mov
add
gs
pop
insl
insb
jb
mov
sti
cli
cwtl
clc
push
add
inc
pop
add
popa
aam
add
pusha
add
mov
movsb
sbb
dec
cmp
jmp
mov
add
mov
mov
jge
push
xor
int3
mov
add
adc
mov
add
adc
mov
test
xchg
rolb
mov
xor
mov
add
mov
push
push
push
xchg
add
insl
xor
inc
jo
mov
lret
xor
mov
dec
data16
lds
mov
dec
mov
shll
push
mov
es
aas
xor
mov
outsb
pop
leave
pusha
add
dec
add
mov
loope
xchg
jp
cmp
cltd
push
mov
fwait
sub
and
out
add
faddl
daa
ret
xor
test
test
and
mov
xchg
push
ret
lret
add
sbb
js
cmp
mov
cmp
sahf
sar
pop
xlat
push
xchg
add
dec
sub
mov
in
fldcw
sbb
add
mov
pop
jp
jecxz
lcall
adc
mov
add
mov
push
out
add
mov
add
push
fwait
inc
icebp
jno
lock
add
pop
arpl
mov
mov
les
add
icebp
inc
add
xchg
fsubl
insl
and
add
add
out
or
lods
cmp
add
add
add
add
jge
mov
dec
xor
rcll
cmp
add
in
jo
mov
mov
xchg
adc
adc
add
pop
jnp
vmovups
sar
in
je
adc
lahf
dec
bound
mov
pushl
jae
mov
push
mov
fidivs
and
rolb
dec
in
stc
bound
mov
mov
or
dec
arpl
sahf
push
mov
add
mov
add
jle
xchg
aam
add
pop
popf
cmp
xchg
stos
jno
push
inc
lods
adc
sub
mov
stos
out
add
fs
add
mov
sub
jl
insl
inc
dec
clc
repnz
fildl
into
outsb
sub
mov
mov
mov
stos
and
fsubrs
fcomp
cmp
mov
fdivl
adc
mov
sbb
scas
testb
mov
dec
stos
add
mov
push
add
outsl
and
mov
jae,pn
mov
movsb
call
add
adc
lea
lahf
add
add
movsb
xor
mov
mov
add
stc
daa
push
or
dec
or
lods
cmp
jmp
ljmp
xor
cmpsb
dec
sbb
pop
ss
mov
ret
arpl
les
or
push
fbld
push
sbb
mov
mov
add
jno
cmp
repz
add
or
add
inc
add
add
mov
mov
push
add
xor
lods
cmp
mov
jp
jae
inc
push
dec
cmp
sbb
int3
or
imul
mov
js
add
sbb
ror
mov
fmulp
test
mov
mov
sub
adc
mov
ss
mov
ljmp
cmc
mov
outsb
xchg
out
out
js
cltd
stos
dec
or
sahf
hlt
cmpsb
inc
jne
mov
hlt
loop
mov
out
aas
sbb
cmp
pop
js
mov
popf
lds
test
xchg
in
add
in
jmp
push
daa
rolb
mov
inc
mov
adc
jae
pop
scas
inc
add
add
add
sub
ss
push
cmpsb
std
div
pusha
add
mov
add
adc
push
add
outsl
addb
mov
cmc
js
mov
sub
mov
xchg
add
dec
mov
jae
mov
fistps
mov
pop
mov
fcoml
pop
adc
mov
lcall
add
fisubs
add
and
mov
shl
mov
add
mov
jns
add
dec
mov
add
mov
or
mov
dec
dec
mov
mov
inc
push
stc
dec
das
je
mov
dec
sbb
cmp
repz
mov
movb
mov
inc
jecxz
sahf
push
push
gs
jg
dec
fwait
cmp
push
add
mov
into
push
cmovb
mov
les
xor
add
fcomps
or
imul
mov
xchg
mov
clc
addb
aaa
std
out
test
icebp
xchg
ja
add
mov
sub
add
cmp
adc
mov
movsb
mov
out
dec
push
cmp
ret
inc
out
or
sbb
or
add
xchg
push
mov
lods
inc
add
mov
add
mov
xchg
and
push
and
add
mov
pop
jmp
add
or
cwtl
popf
outsb
cli
cli
mov
mov
mov
fnstcw
into
out
loopne
mov
mov
and
mov
mov
add
add
mov
push
pop
or
imul
push
add
mov
lds
jg
cmpsb
ss
xchg
in
or
and
mov
add
js
add
sub
ss
rorl
mov
and
mov
and
addb
ret
sahf
int
inc
add
or
add
sahf
clc
daa
mov
mov
addb
jno
rolb
mov
test
scas
push
lea
jl
xlat
xor
mov
sbb
pusha
add
push
loopne
mov
or
jb
mov
shl
pop
stos
inc
add
pop
or
add
mov
sub
pusha
add
push
mov
mov
pop
lcall
add
dec
mov
mov
mov
mov
adc
cmp
add
mov
jns
push
mov
xchg
jbe
jmp
add
sub
bound
mov
lock
add
ljmp
dec
xor
mov
mov
sub
lcall
mov
and
add
mov
dec
loope
into
pop
inc
push
add
jl
xchg
mov
mov
cmp
add
add
add
add
or
xchg
pop
imul
add
aas
add
cli
jno
xchg
add
loope
es
rolb
mov
mov
test
add
or
xor
lods
je
add
icebp
out
stos
add
xchg
mov
add
cmp
mov
faddl
out
xor
pushf
mov
lea
fldenv
add
jne
rcll
pminsw
addr16
add
addl
sbb
xor
mov
add
mov
data16
lcall
insb
push
sub
and
ds
iret
mov
mov
inc
xor
mov
add
ljmp
sbb
sub
sbb
addb
sbb
fs
mov
xor
rcrl
add
je
pop
lds
push
mov
cmp
in
test
xor
scas
fdivrl
add
movsl
jns
xor
rolb
mov
add
pop
inc
add
cmp
cltd
mov
add
ljmp
mov
frstor
pop
ljmp
mov
clc
sub
imull
xor
mov
add
ljmp
mov
adc
insl
mov
or
mov
mov
inc
mov
ljmp
arpl
sbb
enter
xor
mov
or
mov
adc
mov
dec
xchg
add
ret
ds
aad
mov
add
cltd
mov
mov
add
cmp
mov
popf
pushl
inc
sti
in
lds
shrl
add
xor
add
gs
icebp
iret
mov
addb
sti
inc
cwtl
mov
mov
mov
and
jle
xlat
mov
inc
cmp
popw
js
adc
rolb
push
inc
ss
add
add
xor
mov
and
mov
xor
xor
add
jnp
cmpsl
sahf
data16
mov
or
in
pop
fcoml
mov
and
mov
aam
add
leave
sub
inc
dec
jns
dec
xchg
fcoms
mov
fnstsw
inc
add
sahf
out
sbb
les
jbe
insl
dec
inc
int
inc
add
xlat
jg
hlt
arpl
add
mov
sub
into
dec
rsm
add
sbb
sub
pop
out
dec
addb
sahf
insl
jmp
jl
nop
add
cmpsl
insl
pop
mov
sbb
repz
rolb
mov
out
loop
mov
add
mov
add
cmp
into
lcall
add
mov
push
hlt
xchg
add
sbb
add
jecxz
and
mov
dec
adc
imull
jle
adc
add
mov
js
add
dec
inc
repnz
jmp
add
arpl
clc
cld
xchg
adc
or
bound
mov
fwait
aaa
ror
mov
jns
cltd
clc
lret
sbb
add
sbb
movsb
test
mov
mov
push
out
out
clc
lea
sub
mov
in
and
dec
rolb
mov
mov
add
adc
mov
mov
add
add
les
add
leave
sbb
dec
xor
add
push
cmp
jns
add
iret
int
lods
or
add
arpl
adc
cmp
and
add
insl
dec
cmp
pop
cmp
pop
lahf
xchg
push
jg
jge
test
fwait
popa
push
rolb
fs
je
mov
std
dec
icebp
mov
mov
add
scas
mov
je
add
roll
and
popa
ret
and
mov
mov
sbb
ss
push
add
pop
xchg
cltd
sbb
das
test
cltd
aaa
popf
adc
adc
inc
dec
lea
xchg
cltd
mov
fists
add
inc
mov
mov
add
insl
dec
sub
add
mov
scas
inc
add
xlat
not
mov
mov
sub
bound
mov
and
inc
nop
add
shll
add
jae
sahf
lret
dec
in
adc
add
xchg
add
mov
in
inc
in
xchg
push
sbb
repz
scas
sbb
sti
imul
and
add
loop
mov
inc
sbb
icebp
sti
inc
and
mov
cmp
jmp
mov
fnsave
mov
inc
push
ret
add
aaa
jmp
pop
mov
dec
bswap
and
mov
add
xchg
addr16
test
mov
add
mov
fstpt
clc
sub
pop
add
xor
mov
mov
out
enter
mov
cli
or
testl
add
add
arpl
fdivrs
dec
mov
int
outsb
add
es
out
add
mov
test
add
jle
lcall
lock
bound
mov
add
stos
jl
lcall
mov
sbb
mov
mov
xor
xor
mov
stos
mov
xor
testl
in
andl
mov
mov
aas
add
lods
js
mov
add
ljmp
rolb
mov
pop
ret
jg
cmp
sbb
add
xchg
insl
push
call
fstps
je
test
mov
and
mov
mov
sub
inc
rolb
pop
lcall
and
jnp
test
inc
cmc
push
repz
mov
cmpsb
in
div
test
xor
test
add
mov
lods
pop
fldcw
sub
mov
repnz
add
pop
sub
xchg
jae
cs
cmp
lcall
add
pop
sub
add
loope
jbe
mov
addb
iret
jae
scas
add
in
std
mov
movsl
adc
loope
adc
add
mov
mov
add
fwait
je
fs
push
inc
sbb
ret
and
mov
addr16
sbb
les
add
lods
aaa
xor
in
in
subl
push
cs
mov
xchg
in
repz
ret
xchg
bound
mov
push
and
mov
lcall
and
mov
movsl
xchg
add
adc
mov
dec
stos
fmul
jecxz
mov
add
xchg
inc
fstpl
inc
movsb
inc
add
fiadds
fcoms
test
pop
push
pop
dec
jp
and
mov
mov
fsubrs
mov
vpavgw
ljmp
cmp
push
insb
mov
int
jns
add
in
add
mov
fisubs
loope
fiaddl
xor
sbb
jae
fistpll
jns
lret
add
clc
dec
sbb
add
add
mov
adcl
insl
lock
lods
clc
jg
mov
lods
fldt
fucomip
sub
cmpsl
pop
sub
add
adc
add
add
leave
mov
add
mov
adc
mov
add
ret
aam
test
push
stc
mov
mov
pop
nop
add
ret
adc
mov
faddl
ret
or
push
xchg
adc
lret
out
cli
mov
mov
out
jge
outsl
arpl
jnp
add
ret
jle
scas
and
inc
add
mov
xchg
cmc
ficompl
jmp
cmp
dec
daa
sbb
insl
sti
and
mov
mov
add
add
movsb
bswap
lods
xor
sbb
sbb
cmp
lock
sbb
enter
loop
mov
jb
mov
push
icebp
sti
push
jo
mov
adc
jge
lea
add
add
mov
roll
xchg
sub
mov
jo
mov
aaa
cmp
mov
je
jne
out
stos
jns
insb
sub
jmp
inc
in
add
mov
fisubs
mov
inc
stos
test
add
fs
pop
xchg
aad
test
mov
inc
imul
push
mov
decb
filds
mov
add
sbb
test
add
sbb
sbb
mov
pop
mov
addr16
setae
mov
add
dec
lock
and
add
iret
outsl
sub
push
test
mov
loop
mov
cli
mov
mov
add
sub
inc
sub
lea
push
in
adc
cmpsl
shrl
mov
inc
addb
adc
inc
sbb
jecxz
add
js
mov
fidivrs
xchg
xchg
outsl
sbb
or
cmp
stos
fnstcw
xchg
cmp
push
add
mov
xor
lcall
loopne
mov
test
adcl
mov
jl
rolb
or
sbb
je
adc
mov
popf
pop
mov
test
add
pop
pop
push
nop
add
sbb
ds
ja
sbb
adc
bound
mov
add
mov
psubusw
jo
mov
xor
mov
aam
loop
mov
add
cmp
add
xchg
push
push
add
add
addr16
mov
mov
add
popf
loope
dec
sub
inc
mov
mov
add
cmp
in
or
sbb
add
mov
xchg
add
sub
push
add
mov
xor
test
push
cmp
sub
add
je
rolb
mov
clc
fidivrl
lods
movsl
xor
in
push
enter
dec
mov
mov
and
add
adc
mov
add
sub
test
js
add
add
adc
mov
repz
dec
addr16
push
xchg
push
xor
mov
jl
xor
inc
add
add
add
lret
mov
and
xchg
cmpsb
insl
mov
inc
mov
adc
mov
aaa
jae
hlt
dec
xor
mov
jp
in
out
das
addl
mov
and
mov
aaa
xor
jg
stc
movsb
mov
cli
push
add
pop
sbb
loop
mov
add
xor
mov
push
rcll
sbb
and
jge
xor
sbb
mov
xchg
push
add
dec
addb
sub
push
ret
pushf
cltd
mov
jp
lods
movsb
dec
fnstenv
add
mov
xchg
or
mov
mov
bound
mov
push
sbb
and
lret
xchg
push
rolb
mov
cmpl
xorl
loop
mov
lret
daa
or
cmp
xor
mov
sbb
mov
push
lods
lock
cmc
sub
mov
scas
out
movsl
in
jmp
mov
sti
les
dec
sbb
or
add
add
sub
notl
sbb
psllq
outsl
pop
jbe
push
dec
dec
mov
in
lods
xor
mov
mov
add
inc
add
dec
cs
stos
pusha
add
or
xchg
xor
jp
imull
rolb
or
fld
cs
lcall
das
and
cmp
pop
lock
call
clc
mov
inc
pop
std
loop
mov
jbe
js
bound
mov
add
rolb
mov
rolb
mov
adc
daa
lea
add
push
push
add
xchg
jb
mov
cmp
add
mov
add
mov
lret
sbb
ja
pop
and
mov
pop
sub
mov
add
sub
fiadds
pop
stos
hlt
sub
push
mov
mov
push
out
inc
enter
cmp
clc
sub
fiaddl
in
cmpsb
push
inc
pop
iret
insb
push
inc
js
sahf
loope
stos
push
mov
mov
mov
idivb
movsb
and
mov
bound
mov
std
cmc
dec
cmp
dec
or
sub
jmp
test
rol
scas
test
push
int
adc
jae
ss
icebp
lods
out
into
je
outsl
inc
adc
mov
movsb
cmp
jg
stos
xor
mov
fwait
xchg
cmpsl
repnz
cmp
aam
out
enter
or
sahf
pushf
repnz
cmpsb
mov
inc
or
mov
and
adc
imul
pop
push
pop
mov
or
mov
call
rolb
mov
iret
addb
lret
rep
push
xor
push
sub
xor
stos
mov
adc
mov
cwtl
cmp
jns
add
mov
js
or
scas
mov
imul
push
push
daa
fists
jns
cmp
ja
xchg
jl
outsb
loopne
mov
mov
arpl
mov
ret
jne
xchg
sub
ljmp
mov
xchg
lods
xor
mov
mov
jno
hlt
fildll
js
es
add
pop
pop
push
jo
mov
add
pop
repz
jb
mov
rolb
push
hlt
aas
insl
cld
dec
mov
xor
fcompl
inc
add
xchg
fstpt
and
addb
lret
mov
lds
add
cli
mov
test
addr16
stc
pop
shll
mov
mov
xchg
outsb
xor
cmc
test
xchg
adc
mov
inc
std
mov
adc
or
test
pushf
pop
push
mov
sbb
push
cli
or
push
mov
mov
mov
stc
js
inc
mov
add
push
test
mov
ficoml
test
stos
cmp
and
int
xchg
push
jp
mov
out
and
out
cmp
push
push
test
fsubrl
mov
sbb
adc
mov
inc
xor
scas
xor
add
ret
cmp
das
loope
add
push
add
add
jecxz
negb
add
inc
add
add
addb
or
mov
pop
mov
mov
roll
dec
cmp
arpl
cmpl
roll
int
in
sti
ret
and
add
fidivl
xchg
add
xchg
movsb
mov
dec
pop
bound
mov
add
mov
stos
rolb
mov
mov
xlat
fs
shll
mov
pusha
add
in
add
or
shll
int3
mov
jl
out
mov
xor
add
mov
enter
sbb
jo
mov
dec
add
xchg
fnstcw
push
adc
xchg
nop
add
popa
cmc
adc
mov
add
jb
mov
mov
mov
jg
cmpsl
sub
xchg
adc
adc
mov
outsb
incl
in
sbb
mov
les
and
mov
sub
sbb
lret
sbb
mov
push
sbb
xor
adc
fadds
pop
mov
add
test
mov
mov
jecxz
nop
add
add
add
outsb
out
pop
data16
mov
adc
ds
in
rcll
jp
push
add
add
mov
jmp
scas
cmp
pop
cmp
hlt
mov
dec
mov
lods
test
or
cld
outsb
aam
xchg
lods
loopne
mov
outsb
flds
add
clc
mov
nop
add
add
cmc
jl
jp
xor
mov
xor
mov
loopne
mov
mov
jno
ret
pop
mov
test
rorl
insb
rolb
mov
sbb
xor
mov
add
mov
add
add
inc
lret
pop
xor
cltd
fiaddl
jle
push
push
ret
pop
mov
push
push
add
sub
lahf
jno
lea
add
push
das
xlat
pop
fstps
aam
ret
mov
iret
mulb
inc
das
out
adc
in
jecxz
insb
push
mov
sub
jge
call
sub
out
inc
loope
jl
add
mov
cmc
or
rep
mov
add
jb
mov
lods
mov
clc
inc
add
add
mov
xchg
es
popf
or
fnstcw
inc
fptan
add
adc
push
add
inc
cmp
test
mov
mov
cmp
mov
aam
std
lods
ljmp
gs
mov
mov
gs
and
add
jg
xor
rcrl
dec
adc
mov
popa
mov
into
cld
jnp
imul
mov
mov
fnstcw
inc
aam
fisttpll
mov
stc
addb
or
or
lods
or
aas
xor
xchg
cmp
pop
mov
test
jg
mov
mov
and
loopne
mov
push
add
mov
test
mov
nop
add
neg
and
pop
jno
out
lret
mov
ret
dec
leave
sbbl
lea
ret
mov
mov
mov
jg
jl
sbb
jmp
clc
loope
add
add
xchg
icebp
rolb
mov
jne
bts
popa
rolb
fbld
sbb
mov
sub
stos
ret
iret
and
mov
mov
mov
fdivp
icebp
loopne
mov
xchg
mov
mov
popa
push
mov
mov
call
mov
test
movups
pop
inc
stc
adc
mov
rolb
mov
add
frstor
fwait
fs
add
or
adc
dec
dec
fs
clc
mov
stc
dec
or
jge
mov
mov
add
mov
sub
test
pop
dec
push
xchg
cli
mov
out
ss
push
sbb
lret
add
push
xor
mov
cmp
sbb
xchg
push
mov
sub
sub
mov
jl
scas
repz
mov
adc
push
and
jne
cmpsb
push
dec
ret
sub
or
pop
loopne
mov
in
hlt
out
dec
cmp
or
lods
sbb
xor
iret
loopne
mov
cmpsl
jle
add
ja
int3
mov
add
jae
add
fwait
outsl
push
mov
add
addr16
je
mov
mov
pop
sbb
cld
lcall
testl
outsl
sbb
and
mov
mov
loopne
mov
add
insb
cmp
popa
loopne
mov
sub
gs
nop
add
add
sarl
sbbl
outsb
add
test
pop
fsub
cmp
add
cmp
add
fcom
xor
mov
add
pop
pop
cmp
popl
loopne
mov
mov
add
sahf
and
mov
cmp
sub
xchg
add
clc
xchg
hlt
lods
sub
fst
dec
in
arpl
or
movd
xchg
mov
rolb
or
cmpsl
hlt
xor
loop
mov
test
inc
xchg
sub
repz
mov
mov
idivb
daa
push
add
scas
add
aaa
lahf
mov
test
je
and
jae
inc
mov
xor
into
je
cmpsb
and
dec
or
shrl
add
mov
jmp
jnp
pop
push
add
aad
and
push
add
fwait
rolb
mov
xchg
aaa
repz
push
mov
add
mov
mov
out
mov
mov
insb
mov
mov
cwtl
gs
cltd
fsubrl
add
addb
add
add
mov
mov
add
ja
ljmp
add
lods
cmp
cmpl
int3
push
cmp
and
pop
and
fdivrl
sahf
loope
add
shll
mov
mov
inc
add
mov
mov
jecxz
push
arpl
or
and
aas
ljmp
addb
mov
icebp
lea
xchg
add
add
pop
mov
xor
add
aas
sbb
stc
pushf
dec
or
mov
fdivs
add
inc
sub
pop
jae
test
mov
cmpl
cmp
mov
sti
subl
jl
jnp
add
outsl
jnp
push
nop
add
mov
icebp
xchg
inc
jae
add
mov
rolb
mov
shrl
mov
scas
out
cld
sbb
xchg
mov
mov
mov
mov
and
mov
stos
xchg
add
pusha
add
sub
push
add
push
dec
dec
cmp
jbe
shrl
jg
std
and
cwtl
adc
mov
add
adc
mov
cmp
fldt
pusha
add
adc
add
dec
jb
mov
jno
cld
inc
movsb
test
fcmovbe
add
sub
xrelease
sbb
or
inc
dec
push
xchg
dec
and
mov
add
add
pop
jle
dec
push
push
int
repnz
std
inc
add
mov
inc
ss
mov
sti
inc
mov
mov
notb
pop
cs
or
xor
or
cmpsl
addr16
add
add
xchg
jp
test
test
lods
in
aad
into
adc
mov
dec
mov
in
jbe
xor
pop
fs
add
mov
test
inc
jecxz
adc
xor
gs
mov
orl
dec
in
add
push
add
or
icebp
pop
xor
mov
roll
jmp
lea
stc
scas
daa
out
adc
mov
jmp
push
push
dec
push
lods
out
int3
adc
jne
lods
mov
add
jg
leave
jae
test
ret
push
inc
frstor
add
add
scas
pushf
push
scas
enter
lods
jnp
stos
cltd
push
pop
or
mov
sbb
jo
mov
fisubs
jns
inc
add
addb
xor
add
mov
mov
xchg
pushl
mov
xchg
add
sub
lahf
js
jmp
pop
or
push
mov
fistpll
mov
mov
push
push
push
cli
and
mov
ficomps
addb
ss
iret
dec
rolb
mov
pop
mov
jg
scas
inc
add
mov
fs
jo
mov
cmp
mov
sub
lock
jge
fnstsw
xor
pop
scas
into
mov
push
pop
push
hlt
mov
mov
jbe
add
inc
add
pop
dec
pop
int
mov
fdivrl
mov
data16
mov
mov
out
sub
mov
adc
mov
mov
daa
into
jo
mov
or
push
daa
sbb
push
loope
sahf
leave
and
lahf
add
lcall
fists
mov
mov
add
add
jne
jns
dec
fwait
repz
fbstp
add
push
mov
ret
aaa
nop
add
mov
inc
push
fwait
adc
add
push
decb
insb
nop
add
dec
sbb
xchg
mov
ret
nop
add
sub
pop
jno
mov
insl
addl
daa
scas
scas
xchg
popf
arpl
scas
cwtl
mov
rolb
add
mov
jns
xlat
pop
test
or
testl
xchg
ffree
push
testb
mov
dec
es
xchg
shll
test
dec
inc
sbb
jge
sbb
and
pop
mov
aas
adc
inc
jp
scas
call
add
mov
or
mov
cld
rolb
mov
add
setne
add
add
call
push
add
mov
or
sti
repz
jl
xor
cltd
cmp
inc
pop
xchg
rolb
add
mov
adc
fucomip
jnp
fidivl
xor
mov
es
dec
int
rol
add
mov
fsubr
ss
hlt
mov
add
xor
xchg
adc
push
or
pop
insl
in
jmp
in
add
fwait
icebp
mov
mov
ficomps
outsb
push
in
loopne
mov
push
cmp
xchg
sub
addb
fisttpl
push
pop
lds
mov
pcmpeqw
mov
add
or
sub
rol
adc
mov
add
mov
cmc
ljmp
sub
dec
sbb
add
mov
es
ret
pusha
add
mov
sub
add
mov
mov
pop
xchg
add
add
adc
mov
mov
imul
add
push
push
pop
movsb
aas
js
popa
in
int3
pop
push
dec
add
mov
and
mov
aaa
addb
jmp
mov
lea
mov
sbb
add
or
dec
inc
dec
xchg
sub
pushf
xchg
add
lods
adc
mov
sbb
adc
pop
iret
out
jecxz
add
rolb
mov
sbb
cmp
fistpl
pop
cwtl
ljmp
mov
add
loopne
mov
fsubrl
mov
mov
or
in
mov
cltd
add
sub
jg
mov
add
mov
mov
mov
dec
or
cmp
lock
mov
cmpps
nop
add
es
arpl
js
add
add
dec
sbb
add
push
jecxz
ljmp
or
add
add
mov
push
and
rolb
mov
xlat
sub
lea
add
in
cld
js
stos
and
mov
mov
scas
test
mov
cmc
mov
xchg
pop
sub
insl
push
add
jmp
pop
in
addb
inc
add
xchg
cmp
fcoml
mov
pop
mov
add
add
js
xor
in
xorl
mov
mov
rolb
out
mov
adc
mov
test
mov
mov
repnz
popf
arpl
lock
sbb
data16
gs
or
pop
push
add
mov
or
out
mov
add
aaa
adc
mov
mov
test
es
jbe
add
pusha
add
loop
mov
test
jp
mov
push
cwtl
mov
mov
mov
jmp
adc
insl
pop
push
scas
loopne
mov
jg
lods
cltd
out
adc
jne
lods
jle
addb
inc
add
dec
push
in
jno
mov
mov
int3
cmpsl
sbb
clc
push
imul
mov
add
xchg
test
jo
mov
xchg
push
or
push
scas
and
call
pop
imulb
or
ja
dec
out
jne
xchg
add
jecxz
icebp
ja
jle,pt
pop
adc
repnz
add
lock
mov
add
mov
ljmp
mov
push
or
cmc
cmp
jae
cmc
movsb
test
xor
mov
add
lds
add
jmp
sub
xchg
jb
mov
mov
fidivrl
adc
mov
xchg
aam
insl
and
mov
mov
sub
xor
mov
adc
mov
fcomps
sbb
repnz
add
push
outsl
int3
add
mov
mov
add
lock
push
ret
push
fstps
dec
out
xor
mov
aas
outsl
mov
mov
testb
sub
clc
sub
pusha
add
add
fcomp
jp
testl
pop
sub
out
clc
mov
mov
dec
or
xchg
add
int3
sub
lcall
xchg
sbb
or
mov
aad
jecxz
and
mov
adc
mov
imul
or
loope
test
or
mov
aaa
fistps
mov
int
leave
aaa
adc
sub
adc
clc
std
cmc
flds
jne
ljmp
inc
in
popa
fsubrs
aam
dec
adc
mov
lret
push
pusha
add
cltd
push
inc
add
add
mov
mov
imul
pop
sahf
arpl
in
sub
int
aaa
and
inc
mov
mov
mov
xor
aaa
imul
lcall
add
jle
das
addb
daa
add
call
add
mov
int
addb
andl
mov
mov
mov
daa
cmp
andl
mov
push
push
add
jnp
xchg
add
mov
into
vpaddsw
add
cli
add
mov
stc
and
insl
jae
push
add
push
inc
jne
inc
add
rolb
sbb
pop
and
mov
add
adc
mov
mov
mov
add
mov
in
rcrl
imul
stos
jge
cmpsl
mov
cmpsb
sub
sub
dec
addl
add
jb
mov
movsl
loope
enter
cmp
fs
or
in
jp
sbb
test
mov
mov
jo
mov
mov
sub
xor
cmp
cmp
fisubrl
fmuls
add
mov
ret
leave
mov
cmp
add
or
add
arpl
ret
lahf
cli
test
sub
add
dec
mov
fwait
jns
jbe
add
into
sbb
into
fistps
add
mov
mov
xchg
pop
sbb
sbb
dec
jmp
aas
pusha
add
es
mov
sbb
push
inc
add
icebp
sti
sub
add
popf
ficomps
pusha
add
jmp
dec
pop
sbb
pusha
add
sub
jl
js
add
add
mov
rolb
mov
dec
cmp
ss
nop
add
pop
fists
xor
mov
add
cmp
lahf
push
loop
mov
add
orl
mov
jnp
addb
or
cmc
js
pop
jg
add
les
sub
rolb
mov
add
fstp
cmp
in
outsb
or
xchg
fsubrs
test
add
lret
sahf
sub
jge
repz
inc
imul
cli
fisubrl
sub
mov
push
loop
mov
or
xchg
mov
int3
lret
and
mov
mov
and
jl
daa
pop
push
mov
mov
add
mov
mov
out
aaa
and
jle
mov
push
add
mov
in
pop
gs
pop
pop
movups
mov
mov
mov
jecxz
add
mov
pop
xor
mov
rolb
aaa
lret
and
int
push
mull
add
dec
add
mov
leave
adc
xchg
jg
mov
inc
pusha
add
mov
jnp
xchg
add
add
lret
dec
sbb
scas
test
add
cmp
aam
add
jle
les
outsl
pushf
inc
sub
aaa
and
jp
and
mov
mov
add
push
add
add
push
inc
movsb
xchg
push
dec
test
jno
add
clc
xchg
and
xor
shrl
add
mov
sti
aas
cmpsb
je
pop
into
mov
ds
in
and
mov
pop
jp
add
add
push
add
ss
mov
add
dec
faddl
xlat
push
add
mov
dec
call
mov
xor
lret
enter
add
mov
add
pop
add
mov
mov
mov
push
mov
sub
add
nop
add
and
mov
add
aaa
sub
aas
inc
std
jge
movsl
add
mov
or
loope
pop
push
rcrl
lods
adc
lahf
push
dec
xchg
mov
add
add
add
cmp
movsb
cmc
jns
and
add
cld
inc
aam
add
roll
mov
cwtl
sbb
add
push
inc
add
int
push
pop
add
mov
mov
aaa
loopne
mov
mov
clc
cmp
dec
loopne
mov
xor
mov
xchg
dec
add
ss
adc
fsubrs
fs
rep
out
and
mov
dec
add
mov
mov
sbb
int
sbbl
cltd
dec
cmp
mov
ret
ljmp
mov
add
out
rorl
mov
add
pop
test
add
mov
mov
pop
mov
push
iret
bound
mov
and
rolb
mov
add
add
fcoms
add
mov
mov
jg
mov
lret
add
lock
add
xchg
add
mov
jns
cmp
or
mov
add
sub
adc
mov
add
orl
adc
cmpsb
nop
add
hlt
xor
rolb
repz
dec
adc
sub
dec
xchg
add
adc
in
pop
jge
ds
add
add
add
out
ffreep
inc
inc
das
leave
xchg
insl
pop
sbb
hlt
leave
xchg
add
clc
xor
lock
int
add
dec
jnp
in
xchg
add
loopne
mov
add
aas
bound
mov
add
insl
mov
add
test
add
repnz
clc
fistl
stos
loop
mov
xchg
jge
jge
popa
xchg
pop
mov
mov
rolb
mov
and
call
and
mov
lods
dec
inc
lcall
xchg
sub
add
adc
js
bound
mov
mov
cwtl
cmc
pop
fld
add
pop
add
cmp
mov
xor
mov
icebp
xchg
cmp
rorl
add
mov
add
mov
inc
add
jecxz
pushf
xchg
scas
push
pop
add
sbb
hlt
mov
pop
push
mov
dec
int3
sti
stc
dec
ret
into
arpl
add
push
imul
ror
push
sub
and
mov
sar
popa
rolb
jg
add
mov
je
push
add
stos
out
inc
js
hlt
loopne
mov
add
push
iret
loop
mov
mov
aas
loop
mov
cmp
enter
add
cmp
xchg
sbb
frstor
or
outsb
negb
push
xor
mov
xor
add
pop
leave
out
add
stc
jb
mov
and
mov
mov
out
mov
mov
add
dec
lock
mov
xor
std
push
sbb
adc
mov
es
mov
add
mov
add
je
jb
mov
sbb
shrl
data16
out
ja
or
xchg
shll
mov
add
mov
add
mov
sub
jnp
add
rolb
jle
mov
xor
jbe
shrl
filds
mov
pop
mov
popa
xor
into
sti
fisubrl
fildl
aam
jmp
rolb
mov
mov
rolb
outsb
cmp
out
or
add
push
addb
fcmovnu
and
mov
stos
ret
out
push
mov
mov
dec
sti
sub
mov
or
add
insb
stc
roll
add
lds
adc
dec
fdivr
fbstp
dec
lret
or
jno
add
cmp
ret
pop
cmp
leave
pop
dec
fstl
pop
es
push
sub
mov
mov
lds
mov
mov
add
fmul
hlt
repnz
xor
mov
add
pusha
add
stos
push
dec
fwait
ret
cmp
ret
pushf
mov
mov
iret
sub
loope
adc
aas
fbld
push
push
aaa
push
popf
adc
movsb
lds
add
xor
xor
mov
mov
lock
test
shll
lods
sub
and
add
mov
insb
stc
ljmp
cmp
gs
fwait
pushf
or
out
iret
sub
outsb
fstps
ja
bound
mov
cmpsb
mov
mov
add
mov
cmp
adc
mov
into
add
mov
pop
mov
addr16
add
mov
rolb
mov
cs
aaa
mov
inc
fbld
call
sbb
fadd
pop
mov
int
add
fisubrs
test
adc
mov
test
stos
icebp
mov
or
cmp
fdiv
lcall
mov
icebp
xor
mov
aam
and
sbb
mov
add
mov
mov
mov
add
enter
imull
add
push
add
mov
fidivl
add
push
or
add
mov
add
push
xchg
nopl
push
sub
cmp
sub
loope
test
mov
adc
mov
aad
bound
mov
loope
cmp
movsb
jnp
mov
sub
mov
dec
jb
mov
add
push
adc
idivl
sti
mov
cmp
jmp
add
add
and
add
cs
or
out
and
mov
push
add
mov
add
mov
mov
fwait
jns
dec
imul
mov
inc
jae
aas
and
mov
dec
test
xchg
jg
inc
mov
mov
pop
inc
mov
add
mov
fwait
push
xchg
ret
fnsave
jnp
das
in
ljmp
ja
mov
mov
daa
mov
mov
add
test
mov
jg
sub
jmp
sub
xor
loopne
mov
mov
mov
pop
pushf
cmp
push
sbb
into
push
fcmovu
fisttpl
jp
pop
outsl
lcall
jno
out
imul
lahf
test
mov
add
mov
pop
mov
push
fcmovnb
push
and
int
push
movsb
pop
inc
lahf
shrl
push
add
pop
lods
ljmp
add
lea
mov
sbb
mov
mov
dec
dec
cli
mov
cmp
sub
pushf
dec
cld
out
mov
mov
mov
add
es
mov
jns
shl
add
mov
add
pop
jmp
insb
add
mov
add
add
xchg
cmpsb
push
add
data16
xor
sub
and
xor
mov
sbb
mov
je
cltd
push
and
add
cmc
popa
or
lcall
add
lcall
stos
rolb
mov
add
mov
push
ss
js
stos
adc
add
mov
lahf
pusha
add
orl
add
cmp
cld
pushl
add
mov
add
lea
xchg
or
mov
mov
adc
pop
loop
mov
int3
sub
xor
or
add
adc
mov
std
das
pop
push
xchg
in
pop
incl
int3
or
mov
fsubr
push
imul
pop
lods
insb
ficoml
popa
sub
cmc
leave
inc
push
cmp
in
mov
ret
sbb
dec
cmpsl
orl
add
call
loopne
mov
mov
das
mov
mov
add
push
cmp
cmp
nop
add
hlt
mov
icebp
out
lods
inc
add
lret
movsl
push
add
fwait
inc
in
add
add
pop
addb
mov
add
enter
mov
add
sbb
inc
fistpl
mov
inc
lahf
subl
adc
mov
mov
je
adcl
pop
fidivs
pop
cmpsb
pop
push
push
imul
mov
and
xchg
lret
jbe
sbb
sub
adc
loopne
mov
and
mov
add
mov
mov
popf
jmp
cs
test
jbe
inc
add
sbb
mov
fdiv
pop
or
mov
lock
push
jae
jecxz
push
daa
cmc
fnsave
test
test
rolb
mov
scas
sub
je
pop
insl
xchg
sti
push
cmpsb
clc
out
sbb
add
dec
lret
add
addr16
mov
mov
add
sbb
rolb
mov
dec
lods
push
xchg
jae
push
fs
mov
lcall
cwtl
daa
lcall
add
sub
dec
rorl
add
mov
adc
das
cmpsl
ljmp
jg
push
ret
addl
mov
insb
push
inc
push
jnp
dec
bound
mov
das
add
mov
lret
push
add
push
test
les
lcall
mov
mov
mov
push
push
push
fcmovne
in
cmovs
mov
in
adc
mov
out
jle
add
cltd
adc
inc
mov
mov
pop
int
or
xor
dec
push
hlt
inc
insl
dec
dec
sub
jo
mov
xor
mov
add
add
add
mov
jle
adc
xchg
jmp
inc
add
lcall
or
push
add
add
pop
sbb
add
aam
imul
add
ljmp
int
mov
xchg
inc
fwait
outsb
add
cli
call
and
fiaddl
mov
mov
mov
addb
fdivr
scas
mov
mov
dec
jnp
and
mov
test
mov
xchg
dec
popa
addr16
insl
jl
and
mov
lcall
mov
imul
add
inc
and
xor
mov
add
mov
imul
enter
cmp
mov
mov
mov
ds
xchg
xchg
jmp
mov
std
xor
mov
add
xorl
enter
mov
cmp
xor
out
movsb
mov
jne,pt
xchg
pushf
dec
sub
testb
mov
and
mov
cltd
in
aas
mov
in
jle
repz
les
inc
add
add
mov
and
cmp
ljmp
les
jo
mov
add
mov
insb
mov
rcll
icebp
dec
dec
lods
sbb
lods
repz
inc
arpl
pop
in
mov
mov
sub
daa
in
or
add
inc
jne
and
mov
imul
xchg
popa
inc
add
mov
cmpsb
xchg
dec
and
inc
fldcw
and
outsb
pusha
add
js
aad
add
in
mov
or
push
or
sbb
or
faddl
lahf
pop
test
dec
into
xchg
shll
mov
incl
mov
fcompl
add
pop
pop
jno
mov
rolb
mov
add
test
insl
adc
mov
negb
mov
mov
add
mov
pop
test
push
lock
dec
outsb
mov
xchg
lret
jne
xchg
inc
pop
add
ljmp
mov
dec
or
push
and
lcall
sbb
imul
dec
jmp
into
pop
mov
mov
out
xor
adc
mov
push
add
roll
hlt
cmc
loopne
mov
mov
mov
test
jecxz
push
aaa
pop
shll
xchg
cs
into
sbb
aas
dec
addb
sbb
mov
inc
jg
add
jmp
jmp
pushf
mov
int
adc
pop
mov
add
mov
and
sbb
push
dec
jge
sub
fidivs
add
mov
repnz
mov
in
dec
jg
addb
dec
adc
je
sbb
add
je
leave
icebp
add
mov
nop
add
jne
pusha
add
mov
add
mov
push
mov
mov
add
ja
sarl
mov
shll
pop
outsl
sub
rcrl
sbb
lock
clc
fwait
cmp
add
sbb
scas
fcompl
xor
and
sti
in
add
mov
pop
push
jge
int
cld
je
insl
jl
adc
inc
add
push
mov
xor
mov
mov
stos
pop
outsl
inc
add
neg
aaa
jns
mov
fdivrl
cmpsb
mov
stos
mov
cltd
out
push
cwtl
loopne
mov
call
sub
aad
pop
mov
aam
mov
mov
mov
adc
mov
xchg
lds
adc
mov
mov
or
fwait
out
inc
jno
cmpsb
lret
push
loop
mov
movsb
push
mov
xor
mov
add
js
add
adc
xchg
cmp
mov
outsb
add
mov
out
add
sbb
dec
sbb
or
data16
mov
jg
push
arpl
push
inc
and
mov
inc
add
add
add
je
addb
aas
jl
test
cmp
cmpl
es
push
out
or
mov
sbb
addb
fldenv
mov
dec
das
mov
inc
add
pop
dec
push
add
fldenv
push
imul
sub
mov
fisttpll
int3
push
inc
test
cmpsl
jp
jae
or
arpl
add
add
leave
fs
call
add
mov
ror
push
movsl
sub
mov
xor
mov
sti
call
xlat
outsb
cltd
cmpsb
mov
mov
xor
add
cmp
fiadds
out
out
inc
lods
inc
rolb
mov
cmp
sbb
jl
movsl
movsl
lahf
lcall
mov
inc
and
mov
adc
mov
aad
test
test
mov
sub
pop
int3
push
add
repz
incb
loopne
mov
lods
test
fucomi
sti
xchg
add
sbb
push
filds
in
je
add
add
pushf
imul
mov
test
mov
in
repz
in
mov
aam
or
out
push
mov
mov
lret
add
mov
add
rolb
mov
mov
loope
add
add
loopne
mov
ja
test
pusha
add
jmp
pop
mov
mov
ljmp
aaa
ss
popf
pusha
add
xchg
fnstsw
ljmp
ja
and
stos
adc
mov
add
xor
out
cmc
push
sub
mov
fcomip
inc
aam
scas
sub
addr16
xchg
add
fsts
mov
add
add
mov
mov
mov
sub
int
add
xor
and
mov
mov
test
add
test
inc
aad
push
jmp
mov
mov
xchg
jp
sub
add
bound
mov
data16
add
nop
add
mov
sbb
mov
mov
mov
add
mov
add
mov
add
mov
add
inc
and
pop
cmp
pop
daa
mov
add
inc
add
jb
mov
inc
and
mov
pop
xchg
jno
lods
ret
nop
add
add
js
mov
mov
jno
adc
add
dec
adc
std
push
and
mov
faddl
dec
fdivrl
pop
xchg
add
stc
push
pop
sti
jno
xchg
add
stc
jnp
mov
lods
or
dec
pop
aad
sbb
xchg
addb
sti
mov
mov
dec
jp
add
dec
mov
mov
add
sub
sbb
cmp
aaa
xlat
sbb
movl
mov
cmp
mov
lcall
push
push
xlat
pusha
add
mov
inc
add
leave
popf
sahf
mov
cmpsl
xlat
xor
je
add
adc
cld
cmp
xor
add
mov
mov
add
add
mov
add
add
bound
mov
mov
mov
jmp
or
insb
push
dec
sbb
out
add
xor
xchg
or
mov
lret
sbb
mov
popa
movsb
aam
ljmp
fs
out
jne
xchg
add
mov
mov
mov
repz
jp
daa
xchg
js
popa
push
loop
mov
jge
in
inc
flds
add
cmp
rolb
mov
add
or
fisttps
aas
or
lret
jno
pushf
lods
mov
cltd
add
mov
inc
jbe
ja
or
jnp
pop
adc
mov
and
mov
adcl
repz
xorl
lcall
popf
enter
pop
mov
mov
add
add
addb
addb
inc
jecxz
in
scas
sbb
rcll
mov
rolb
mov
and
push
jp
lret
add
pushf
and
or
pop
incb
jmp
add
mov
xor
mov
mov
mov
movsb
lock
add
pop
mov
cmp
imul
cltd
jo
mov
add
ficompl
std
sub
rolb
fs
push
scas
sarl
addb
negl
or
cwtl
sub
mov
inc
jmp
jae
das
and
mov
xchg
int3
push
mov
in
ja
or
imul
mov
movsl
clc
add
ret
add
sbb
cwtl
inc
add
mov
mov
cs
clc
jge
push
push
bound
mov
lcall
xor
lods
xchg
mov
jecxz
stos
cmpsb
bound
mov
adc
add
or
pop
aad
add
out
add
mov
aaa
fwait
xor
mov
mov
enter
sbb
sbb
lret
jne
jge
cmpsl
mov
dec
arpl
inc
js
hlt
and
mov
outsl
scas
incl
test
cmp
cmp
addl
sbb
and
shll
add
push
rolb
jne
test
add
mov
into
loop
mov
mov
cmp
daa
mov
mov
sbb
stc
adc
push
jecxz
jmp
mov
mov
push
adc
test
testb
mov
add
cmp
inc
add
dec
add
mov
in
rolb
mov
mov
or
jecxz
add
push
xor
and
add
stc
jnp
rolb
mov
jnp
divb
fistps
bound
mov
sbb
fdivrs
mov
sbb
orl
scas
or
das
mov
mov
jbe
sub
stos
adc
or
stc
xchg
mov
mov
sub
aam
jg
sahf
mov
rolb
mov
call
out
add
imull
dec
xor
mov
push
add
cmc
xchg
pop
cmp
fstl
jmp
push
movswl
xor
mov
mov
cld
sbb
xor
inc
add
pop
xorl
mov
push
pop
jmp
xor
add
xor
mov
aam
mulb
add
cmp
bound
mov
pop
or
jl
add
mov
pop
aad
aaa
in
push
dec
push
xchg
ret
pop
dec
mov
int3
sub
add
mov
out
pop
pushf
ljmp
fcmovnu
sub
xchg
cmp
mov
xchg
add
add
pop
dec
test
mov
outsb
pushf
add
mov
inc
dec
pop
xchg
lret
sub
sbb
pop
jbe
aas
ret
dec
mov
fwait
and
jecxz
aad
mov
xchg
addb
sbb
jg
sub
imul
je
push
add
repz
and
inc
xchg
dec
push
jo
mov
dec
inc
insl
leave
jno
jg
pop
call
mov
and
mov
rolb
mov
aad
scas
mov
jge
add
add
ja
inc
out
jmp
fdivrp
clc
rolb
inc
mov
add
mov
cmp
mov
add
sahf
xor
aas
pop
jmp
arpl
xor
cmc
cld
push
jg
movsl
push
adc
and
mov
pop
loopne
mov
sub
popa
xchg
add
xchg
in
lea
add
cmp
imul
out
add
mov
loope
in
test
and
lret
add
cmc
push
addb
mov
xor
pop
js
mov
jle
in
jmp
add
push
in
sub
jae
aas
iret
sub
add
sbb
test
push
and
sub
add
mov
fdivl
jl
adc
xchg
push
call
add
and
jnp
in
nop
add
add
bound
mov
testl
mov
addr16
sub
orl
sub
stc
clc
ja
fwait
lock
mov
add
mov
jle
repz
aad
jg
and
mov
arpl
into
mov
add
out
push
add
mov
and
out
jns
add
sar
pop
add
mov
arpl
jbe
add
inc
pop
cmp
mov
int3
int
js
or
gs
jns
sahf
xchg
add
imul
gs
in
imul
mov
and
jns
loope
stos
dec
inc
pop
add
movsl
and
mov
bound
mov
mov
add
mov
out
jp
and
mov
aas
scas
jne
mov
mov
mov
mov
movsl
push
pop
js
xchg
or
dec
inc
test
or
cmp
adc
inc
dec
das
aad
sbb
lds
add
mov
dec
mov
add
add
xchg
ret
stc
and
jmp
add
ret
sbb
addb
push
push
add
and
push
lds
bound
mov
mov
add
mov
sub
mov
add
mov
add
mov
mov
mov
mov
shrl
inc
stc
cli
sub
lock
sub
mov
mov
pop
xor
mov
mov
mov
xor
out
fcomi
add
adc
mov
rolb
mov
cmc
clc
popa
pop
rolb
mov
mov
popa
mov
mulb
outsb
lcall
adcl
das
notb
jo
mov
mov
xor
pusha
add
and
mov
add
mov
mov
sarl
mov
rolb
subl
cmp
rcrl
pslld
mov
mov
cli
push
or
xchg
lahf
sbb
sub
lcall
mov
add
push
inc
lods
pop
xor
add
inc
mov
xor
mov
sub
add
adc
mov
leave
lds
add
add
repz
mov
pop
jg
stos
mov
pop
cmp
inc
inc
cmp
add
mov
add
sbb
or
pop
or
je
and
jbe
add
fwait
aas
dec
push
les
mov
add
inc
popa
jns
mov
xchg
dec
inc
cmc
push
das
and
push
jecxz
add
stos
outsl
sub
sbb
popa
adc
add
dec
and
mov
sub
mov
dec
mov
xchg
rorl
xchg
adc
mov
add
mov
xlat
mov
xor
mov
mov
push
add
mov
lods
or
push
add
les
filds
fs
adc
and
mov
inc
add
mov
mov
add
inc
pop
shll
std
jecxz
jg
jle
mov
jmp
add
mov
push
xlat
mov
add
add
add
mov
repz
ljmp
push
cmp
add
rcll
lcall
dec
dec
stos
pop
stc
mov
add
pop
jg
add
jns
jl
or
dec
xchg
push
adc
insb
jle
scas
adc
push
add
jmp
pop
repz
mov
repz
add
add
mov
mov
or
pop
mov
repnz
inc
mov
aas
cltd
int3
xchg
add
pop
sahf
in
add
and
pop
idivb
or
lods
rolb
mov
cmpsb
and
dec
mov
into
insl
rorl
addb
cs
cmp
ficompl
in
rolb
cmp
add
pop
cld
sub
leave
fsts
hlt
mov
aad
mov
cld
cmp
ljmp
pop
mov
dec
das
testb
mov
shrl
mov
push
add
add
mov
add
xchg
xchg
add
mov
sub
add
in
arpl
stc
into
dec
out
aaa
add
add
push
add
add
js
bound
mov
mov
addl
adcl
jp
add
enter
add
mov
ljmp
jmp
popa
sub
add
mov
mov
add
mov
xor
lcall
add
cmp
pushf
dec
repnz
add
cmp
and
mov
add
mov
out
add
mov
pop
pop
or
cmp
sbb
fistpll
pop
imull
add
mov
mov
add
mov
push
loop
mov
inc
fs
mov
dec
in
shrd
outsl
cld
stc
fists
mov
cmpsl
dec
test
xor
mov
jne
sbb
call
jbe
stc
push
scas
or
fldl
pop
jns
mov
ret
dec
add
mov
sbb
stc
bswap
push
add
sub
push
add
jbe
sbb
xor
mov
nop
add
add
push
add
add
fsubrl
sbb
stc
add
mov
repnz
cmp
pusha
add
push
stos
rolb
dec
ljmp
mov
test
les
mov
lods
or
in
mov
sbb
adc
push
jnp
add
jp
ljmp
lds
es
sbb
ss
mov
add
sti
test
test
mov
and
add
mov
jge
inc
ds
dec
fnstsw
jbe
nop
add
cld
les
add
jp
clc
cmp
stc
int
fs
mov
data16
add
mov
cmp
addr16
jge
add
mov
pop
xchg
repnz
dec
addb
dec
fnsave
push
sub
fcompl
inc
rolb
mov
loop
mov
add
enter
cld
clc
push
sub
data16
repz
xor
rolb
mov
stos
push
mov
xchg
cld
push
sub
pop
das
loopne
mov
out
divl
mov
mov
add
mov
add
mov
jl
pop
js
add
fwait
mov
mov
pop
addr16
jg
add
hlt
addb
lea
mov
xchg
ret
push
add
mov
in
mov
and
xchg
imul
cmpsb
or
pushl
add
add
scas
mov
lea
ror
or
insl
fisubl
add
jmp
sub
aaa
in
aaa
jecxz
daa
imul
mov
insb
mov
add
daa
fnstsw
jl
xor
imul
add
sbb
sbb
enter
mov
adc
mov
fldcw
scas
inc
add
lahf
test
rolb
mov
std
fnstcw
cmpsb
cmp
lods
repnz
add
mov
mov
sub
or
jmp
cld
in
add
mov
movsl
push
xor
mov
cli
push
inc
add
add
insl
xlat
adc
mov
mov
ret
ljmp
jecxz
out
mov
mov
aad
add
sbb
add
add
jle
nop
add
xor
fldcw
dec
leave
push
add
inc
push
fstps
add
mov
ret
lock
jge
dec
cmp
mov
add
sbb
xchg
add
push
les
ret
jmp
loop
mov
arpl
mov
outsl
cwtl
lea
aam
sbb
mov
mov
push
js
and
add
xor
mov
xor
popf
add
xchg
outsb
xor
mov
je
mov
cwtl
bound
mov
add
sub
leave
mov
add
mov
and
add
daa
mov
cli
insl
pmullw
cwtl
ja
pop
out
icebp
cmp
jecxz
sahf
jno
lcall
das
jle
pop
cmpsl
in
mov
dec
jae
mov
adc
mov
pop
mov
femms
cmpsb
adc
sbb
outsl
lds
push
add
movsb
mov
add
and
ljmp
int
idivl
push
pusha
add
mov
mov
sub
add
mov
mov
mov
pop
dec
jmp
bound
mov
xchg
pop
test
cmp
ljmp
mov
mov
jnp
and
add
jbe
jle
and
mov
movsb
pop
mov
mov
fdivl
inc
lret
movsb
adc
xchg
imul
add
push
add
mov
inc
scas
jno
dec
into
sbb
popl
mov
pop
adc
fisubl
test
popa
and
mov
add
fstpt
add
std
into
cmp
fs
push
inc
jg
add
mov
int
adc
lahf
mov
mov
iret
in
mov
add
iret
call
add
mov
mov
inc
cld
mov
xchg
xchg
and
add
lods
insb
ja
jno
in
push
lea
les
shll
adc
and
pop
fistps
jg
add
add
sbb
or
add
mov
push
mov
js
sti
popf
jle
mov
lods
insl
xor
or
push
mov
gs
dec
or
stos
les
lret
mov
add
bound
mov
insb
pop
roll
mov
jne
lods
xchg
xor
add
mov
add
mov
inc
loopne
mov
aam
popf
ret
lea
xor
mov
mov
add
mov
insl
fwait
mov
mov
mov
add
xor
lcall
sub
loopne
mov
dec
mov
mov
add
icebp
pushf
jnp
dec
clc
push
xor
fisttpll
mov
or
add
add
adc
mov
je
ljmp
les
aad
adc
inc
fistps
and
add
dec
cld
imulb
popl
adc
mov
sbb
adc
rcll
pop
mov
add
cmpsb
xchg
xchg
jl
in
les
fldt
cwtl
jne
xchg
and
mov
and
mov
adc
add
cltd
pop
cmp
mov
aad
push
dec
jnp
add
mov
inc
mov
inc
add
inc
leave
loopne
mov
lahf
ret
int3
cld
push
mov
mov
add
idivl
sub
mov
icebp
aam
cmp
add
mov
addb
insl
add
lcall
dec
rolb
sub
mov
pop
inc
cmpsb
mov
mov
pusha
add
adc
in
fiaddl
and
test
stos
mov
mov
sbb
cs
imull
add
mov
add
pushf
testb
mov
cld
rolb
mov
cwtl
data16
mov
lret
mov
out
mov
add
pop
adc
xchg
in
daa
xchg
movl
mov
and
outsb
repz
int3
fidivrs
aad
mov
jno
xor
and
imul
sub
js
mov
jmp
loopne
mov
ja
sub
cmp
adc
mov
addb
insb
out
ljmp
add
xchg
add
add
add
mov
sub
imul
and
mov
std
jae
cmp
aad
push
lret
iret
xchg
int
jno
mov
add
add
pop
push
push
sahf
into
pushf
lahf
adc
mov
ret
pop
jbe
inc
add
add
mov
cmp
in
jb
mov
cmp
add
add
mov
push
rolb
mov
in
repz
mov
popa
mov
push
xlat
repnz
rcrl
or
push
mov
xor
add
jmp
add
incb
or
out
test
mov
xchg
cli
dec
and
int
sub
add
ret
jle
test
movb
add
in
pop
imul
mov
lods
std
mov
repz
pop
jg
ja
inc
mov
sub
dec
je
adc
mov
push
addb
nop
add
pop
mov
pop
dec
xchg
lods
mov
std
add
nop
add
or
out
add
popa
inc
add
cmp
adc
mov
xchg
add
or
mov
mov
lret
add
xchg
jb
mov
insl
fisttpll
xor
addb
dec
or
hlt
sbb
push
jp
out
into
jg
mov
addb
pop
leave
jg
ret
and
mov
add
mov
imull
shll
mov
cmp
add
ret
dec
lcall
cmp
lds
addb
push
cld
and
add
sub
cs
mov
cmp
jmp
push
bound
mov
je
xor
aas
and
jecxz
test
out
sbb
insb
aas
ds
sbb
mov
xchg
test
sbb
in
addb
jns
add
sub
imul
add
inc
add
insb
les
add
mov
stos
enter
xor
mov
add
aaa
sub
mov
cwtl
aas
jmp
inc
xchg
aaa
mov
dec
mov
test
je
dec
jmp
inc
add
movsb
cmpsl
and
mov
jmp
add
adc
mov
out
mov
add
mov
dec
jmp
stos
add
jecxz,pn
int
add
fucomi
repz
add
mov
jmp
inc
mov
xchg
ret
mov
mov
das
dec
sbb
push
pop
pop
push
add
add
push
mov
mov
jns
mov
mov
mov
mov
mov
add
mov
push
jbe
test
xchg
dec
sahf
lret
jmp
add
inc
add
add
dec
inc
add
add
add
