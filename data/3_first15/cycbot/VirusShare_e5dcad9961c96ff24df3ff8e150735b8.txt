add
add
add
add
add
aaa
aaa
sbb
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
out
add
add
add
add
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
pop
add
add
add
mov
mov
les
pop
loope
loope
dec
dec
out
mov
xor
add
ds
sahf
sahf
sahf
sahf
sahf
add
int
add
add
sbb
sldt
add
add
add
add
jno
test
add
add
add
mov
add
cs
sub
sub
add
and
and
and
mov
rol
rol
rol
shl
loop
loop
loop
loop
loop
out
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
add
add
add
push
add
add
add
add
add
sub
sub
sub
sub
sub
and
add
mov
or
or
add
mov
xchg
imul
add
pushf
add
add
xchg
sub
mov
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
pop
pop
pop
pop
pop
pop
in
in
in
in
in
in
add
inc
inc
inc
add
add
rcl
rcl
rcl
rcl
rcl
adc
adc
cltd
cltd
rcl
rcl
rcl
rcl
rcl
rcl
addb
add
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fistl
adc
add
add
add
add
lret
lret
lret
add
add
add
stos
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
add
add
add
fcmovu
ficompl
dec
dec
dec
dec
dec
dec
dec
add
add
mov
xor
xor
xor
dec
dec
dec
aad
aad
aad
aad
aad
pop
pop
add
add
add
push
push
push
push
add
add
add
and
and
and
add
icebp
icebp
icebp
jb
jb
sub
or
inc
scas
scas
scas
scas
scas
scas
scas
mov
sti
sti
sti
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fiaddl
add
add
stc
stc
mov
mov
mov
mov
mov
add
add
jae
jae
add
loopne
push
aam
popl
push
push
push
push
push
push
push
push
push
mov
mov
inc
inc
inc
inc
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
pop
add
add
add
jmp
mov
aam
aam
pop
pop
pop
pop
add
add
lods
lods
lods
lods
lods
lods
test
add
add
add
push
push
push
add
add
or
or
cmc
loopne
add
add
repz
add
add
add
cs
push
push
or
pop
pop
pop
pop
pop
push
add
add
add
scas
add
add
add
sub
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
add
add
add
jb
jb
add
addr16
push
push
mov
and
and
mov
mov
add
add
add
add
xchg
xchg
xor
dec
add
fs
pop
pop
pop
pop
pop
or
add
add
add
loop
loop
loop
rcl
rcl
rcl
rcl
rcl
rcl
in
add
add
add
add
add
add
add
add
bound
bound
dec
imul
imul
imul
and
and
and
mov
mov
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
add
add
add
add
add
add
add
add
jno
add
add
add
add
addr16
std
std
std
movsl
add
lret
lret
lret
lret
lret
enter
add
sahf
sahf
add
add
push
push
jl
andl
flds
add
add
add
add
add
add
sub
inc
inc
inc
inc
inc
inc
add
loopne
loopne
pop
pop
pop
pop
pop
or
jle
jle
pop
pop
push
push
push
add
add
mov
add
add
add
add
add
add
or
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
cwtl
add
add
add
lret
lret
lret
das
jne
jne
jne
push
push
push
push
push
push
push
push
dec
and
arpl
arpl
arpl
pop
ss
xor
xor
xor
xor
xor
xor
xor
xor
add
add
gs
fcomp
fcomp
jge
jge
jge
outsl
outsl
outsl
sbb
and
and
and
add
aas
sbb
es
add
add
jnp
mov
mov
mov
mov
add
sub
sub
sub
add
add
adc
adc
adc
add
addl
add
stc
stc
stc
add
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
mov
popa
popa
popa
popa
add
cltd
cltd
cltd
in
in
in
in
pop
pop
pop
in
and
add
add
add
pop
pop
pop
xor
sub
sub
add
inc
inc
inc
add
add
push
push
push
push
mov
mov
add
add
add
imul
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
leave
leave
leave
cwtl
cwtl
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
lret
lret
lret
pop
pop
pop
pop
pop
pop
pop
popf
popf
popf
mov
add
add
add
add
add
fcomp
fcomp
and
cmpsl
cmpsl
cmpsl
cmpsb
cmpsb
cmpsb
cmpsb
inc
mov
add
sub
xchg
dec
push
fdivl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
cmp
sbb
sbb
mov
dec
dec
dec
dec
dec
dec
add
add
add
add
aaa
aaa
aaa
aaa
aaa
jg
add
add
enter
enter
add
inc
jno
jno
pop
pop
pop
pop
ret
flds
add
add
rol
rol
rol
rol
rol
push
push
push
push
push
push
push
push
add
add
pop
pop
pop
pop
pop
pop
pop
mov
aaa
aaa
add
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
add
add
addl
jp
sbb
add
add
add
add
cmp
ljmp
push
push
push
push
push
push
push
outsb
outsb
or
or
sub
sub
sub
add
add
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
add
add
add
add
add
add
lock
add
add
iret
iret
iret
dec
dec
dec
dec
dec
dec
mov
inc
inc
inc
inc
add
add
xor
xor
cs
add
add
out
push
push
push
add
aam
aam
aam
aam
add
jb
add
add
ja
adc
add
add
add
add
push
push
es
ljmp
ljmp
ljmp
enter
rol
mov
add
pop
pop
inc
inc
inc
inc
add
insb
insb
insb
insb
mov
xor
add
add
add
mov
add
icebp
icebp
rcll
adc
add
push
mov
add
add
aaa
aaa
gs
add
add
add
add
add
jmp
jmp
jmp
add
add
mov
pusha
mov
dec
add
add
add
cmp
cmp
add
add
add
add
sbb
mov
stos
stos
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
rcl
roll
add
add
add
add
fcompl
pop
pop
pop
pop
pop
pop
pop
pop
add
repnz
add
lds
add
add
add
add
xor
xor
xor
insl
insl
insl
insl
insl
push
push
push
push
push
mov
mov
mov
add
loop
loop
loop
add
add
daa
add
add
sbb
cmp
add
add
add
outsb
dec
dec
dec
dec
dec
dec
dec
add
insl
insl
insl
insl
push
push
add
lret
rolb
dec
dec
add
add
repnz
loope
push
push
pusha
pusha
pusha
pusha
mov
or
and
add
add
or
add
add
add
sbb
add
push
add
in
add
mov
in
in
in
in
add
add
flds
add
add
add
add
add
add
add
add
dec
add
add
add
xchg
rcl
scas
scas
scas
scas
scas
add
add
add
add
push
push
push
push
push
push
lods
lods
lods
lods
lods
stc
add
mov
add
nop
nop
nop
nop
nop
das
das
das
das
das
add
add
add
ds
dec
jle
jle
jle
add
add
lock
lcall
lcall
mov
mov
add
add
add
mov
mov
add
fs
pop
pop
pop
pop
daa
daa
add
add
add
mov
add
movsl
add
lcall
mov
ret
ret
add
add
add
add
cmp
cmp
cmp
adc
adc
adc
adc
adc
adc
adc
add
sub
sub
sub
add
add
add
add
add
mov
add
add
add
in
in
in
iret
iret
iret
iret
iret
add
add
sub
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
dec
dec
add
add
call
call
add
add
inc
inc
pop
stos
stos
stos
stos
stos
stos
stos
stos
stos
jb
jb
pop
pop
pop
aam
dec
dec
dec
dec
in
in
in
in
in
in
in
in
add
dec
les
in
in
in
in
add
or
leave
leave
leave
leave
leave
leave
leave
xor
add
jp
and
xchg
add
add
stos
stos
or
pop
ss
push
push
add
add
add
add
out
out
out
out
out
out
out
out
out
outsl
outsl
outsl
outsl
outsl
or
or
mov
popa
popa
popa
or
or
or
or
or
or
or
or
or
add
add
pop
pop
pop
pop
pop
test
or
or
add
add
add
mov
mov
mov
mov
jne
jne
pop
pop
pop
pop
pop
pop
les
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
je
je
je
add
add
add
pusha
pusha
pusha
in
add
add
add
add
mov
and
add
add
add
add
stos
add
add
add
add
add
add
mov
mov
push
push
push
push
push
add
and
and
add
add
add
out
out
imul
mov
mov
add
add
add
dec
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
add
mov
test
add
add
inc
inc
inc
inc
add
std
add
jbe
jbe
jbe
or
or
or
or
or
or
or
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
jbe
imul
add
add
test
test
push
push
push
push
push
or
or
pop
pop
pop
add
mov
mov
add
add
sbb
inc
inc
add
mov
mov
mov
cs
out
out
out
out
out
out
out
cmc
cmc
add
add
add
mov
icebp
add
add
add
sub
add
or
or
inc
inc
inc
inc
out
out
out
out
add
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
mov
mov
mov
mov
mov
mov
mov
add
add
fcmovnu
fcmovnu
fildl
mov
mov
mov
add
int3
int3
add
add
add
jg
lcall
add
lea
add
add
add
cld
cld
cld
cld
cld
cld
xchg
xchg
xchg
add
xchg
xchg
cmp
cmp
cmp
cmp
cmp
add
ja
test
test
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
mov
gs
cwtl
pusha
jg
jg
jg
jg
jg
jg
jg
jg
mov
ret
ret
jo
jo
jo
jo
add
add
int3
stos
stos
add
add
add
jno
jno
mov
mov
mov
add
and
and
add
sbb
leave
leave
add
add
add
add
fwait
fwait
fwait
test
test
add
inc
inc
inc
inc
inc
jnp
or
or
or
or
or
or
push
push
push
push
push
cmp
loopne
enter
enter
add
jle
jle
add
add
add
lret
lret
mov
mov
sub
jg
jg
hlt
hlt
hlt
or
or
or
ss
add
add
add
or
cmp
add
add
cmp
add
add
add
add
ljmp
cmpsl
cmpsl
cmpsl
add
add
add
add
mov
add
add
sbb
sbb
add
add
add
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
test
add
add
dec
dec
dec
dec
dec
dec
dec
dec
lcall
add
fcmovnu
fcmovnu
sub
sub
mov
add
add
pusha
pusha
pusha
add
inc
inc
inc
inc
cmpsl
popa
popa
popa
popa
popa
popa
popa
popa
add
arpl
movsb
movsb
rcl
or
add
std
std
std
std
add
add
add
add
loope
loope
loope
add
add
mov
add
add
loope
mov
mov
and
and
and
and
js
add
add
add
push
push
jg
je
popf
xor
xor
xor
add
add
hlt
add
call
jl
jl
jl
jl
jl
dec
dec
dec
dec
dec
mov
add
sbb
add
or
or
add
inc
inc
inc
loopne
loopne
loopne
adc
jae
add
add
lcall
add
add
add
cmp
cmp
cmp
cmp
xchg
xchg
xchg
xchg
xchg
arpl
sub
sub
sub
popl
add
add
xchg
xchg
xchg
xchg
add
add
add
cmp
add
add
pushl
jbe
jbe
jbe
add
add
int3
int3
popa
popa
popa
popa
popa
popa
popa
popa
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cwtl
cwtl
cwtl
cwtl
sbb
sbb
sbb
sbb
sbb
outsb
outsb
outsb
outsb
add
add
call
dec
mov
mov
mov
add
addb
dec
dec
dec
mov
mov
pop
pop
pop
add
fwait
fwait
cmp
cmp
push
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
add
in
sub
add
add
add
add
adc
adc
ss
add
add
rcl
ror
and
push
pop
pop
pop
pop
pop
add
jns
jns
inc
xor
add
add
add
mov
inc
inc
inc
inc
inc
inc
stos
pop
pop
pop
add
mov
mov
int3
int3
int3
int3
int3
add
add
add
add
add
add
add
jno
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
imul
inc
inc
inc
inc
mov
add
and
and
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
fisttps
or
std
std
std
std
std
std
add
add
add
add
fs
out
out
out
out
out
out
cmpsb
ds
inc
add
add
add
add
fldenv
and
cmp
mov
sldt
add
dec
dec
dec
test
test
jle
add
jmp
jmp
lea
add
addl
addl
xorl
xchg
push
push
push
push
push
push
push
cmpsl
cmpsl
cmpsl
call
call
fs
pop
pop
add
add
add
psraw
pop
pop
addr16
jnp
jnp
jnp
movsb
movsb
xchg
xchg
xchg
add
mov
cwtl
cwtl
cwtl
cwtl
int
int
int
xchg
xchg
addl
add
cmp
push
push
cmp
mov
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
es
push
push
pop
pop
pop
pop
pop
pop
add
add
add
add
or
xchg
add
add
or
or
aad
aad
add
loope
out
add
add
add
jb
jb
jb
jb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmc
cmc
cmc
cmc
cmc
daa
daa
daa
mov
mov
add
xchg
xchg
add
add
add
add
push
push
push
push
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sti
sti
sti
sti
sti
sti
out
out
out
out
out
out
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
add
js
js
js
fcmovnu
fcmovnu
and
xor
xor
mov
add
jno
mov
adc
adc
add
sub
sub
sub
sub
add
sbb
sbb
dec
dec
add
in
in
in
in
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
out
out
aaa
aaa
mov
mov
mov
add
add
scas
scas
scas
scas
scas
scas
add
or
dec
dec
dec
popl
add
add
add
add
dec
xlat
add
push
push
sub
sub
sub
sub
mov
daa
rcl
rcl
rcl
rcl
std
std
std
filds
xchg
xchg
xchg
xchg
xchg
lahf
lahf
lahf
lahf
lahf
add
jbe
cs
xor
xor
xor
xor
hlt
hlt
add
push
push
push
push
push
push
push
push
push
push
call
call
call
add
add
add
xchg
je
add
mov
sub
sub
rcl
rcl
rcl
roll
add
add
popa
popa
add
sbb
sbb
sbb
add
fidivrs
add
add
call
arpl
arpl
add
pop
pop
pop
pop
pop
pop
pop
loop
loop
loop
loop
loop
loop
loop
add
add
lret
lret
lret
mov
push
push
push
push
push
push
push
add
es
add
cmc
cmc
cmc
cmc
aaa
aaa
add
movsl
movsl
movsl
movsl
movsl
or
or
or
or
add
sub
sub
sub
sub
sub
sub
sub
sub
inc
inc
inc
inc
inc
inc
inc
aaa
add
add
add
add
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
add
out
mov
jge
jge
repz
sub
add
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
call
adc
insl
add
add
add
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
mov
mov
dec
loop
loop
loop
loop
and
and
add
add
add
jo
jo
jo
jo
jo
jo
ljmp
add
loop
loop
loop
add
sldt
add
jns
jns
jns
jns
add
add
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fldl
add
add
add
add
sbb
adc
adc
adc
sti
jns
jns
jns
pop
pop
pop
pop
pop
pop
add
mov
mov
mov
rcl
add
jecxz
jecxz
add
add
add
add
sub
sub
sub
jbe
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
cltd
cltd
cltd
cltd
rol
shl
div
out
out
out
out
out
inc
inc
add
arpl
arpl
cs
add
jo
jo
jo
jo
jo
add
mov
add
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
push
push
push
push
push
push
push
push
push
push
lock
add
add
fcmovnu
fcmovnu
popf
popf
popf
add
add
add
push
add
add
jge
jge
jge
jge
add
add
add
add
add
dec
add
faddl
inc
inc
inc
inc
inc
inc
adc
adc
add
add
fs
fwait
fwait
fwait
fwait
fwait
fwait
add
add
add
mov
add
add
add
add
add
add
add
add
add
and
and
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
gs
pop
pop
pop
in
in
in
in
in
xchg
xchg
mov
rcl
rcl
rcl
rcl
rcl
rcl
xlat
xlat
add
sub
sub
aad
aad
aad
aad
aad
aad
aad
aad
add
add
xor
xor
add
add
add
add
add
add
loop
loop
loop
das
das
das
pop
pop
xor
jmp
mov
ficoml
add
add
add
outsl
outsl
outsl
outsl
xor
xor
xor
xor
xor
and
and
and
and
sbb
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
dec
dec
dec
mov
cmp
cmp
cmp
cmp
add
or
or
add
iret
iret
add
add
add
add
add
mov
mov
sbb
xchg
add
inc
inc
inc
movsb
pusha
pop
pop
add
div
div
div
div
div
loopne
loopne
jno
jno
jno
add
add
add
test
fcmovnu
cmc
add
mov
movl
add
insb
add
jmp
icebp
icebp
icebp
icebp
add
add
rolb
insb
insb
mov
mov
mov
add
sub
fiadds
adc
jge
add
mov
mov
out
ret
ret
icebp
icebp
icebp
mov
lock
iret
iret
iret
iret
iret
iret
iret
iret
add
add
bound
bound
je
div
enter
add
mov
add
ret
ret
mov
mov
add
mov
mov
mov
mov
mov
add
add
add
pop
add
add
add
add
add
add
sub
add
cld
cld
cld
cld
and
add
add
jl
jl
jl
jl
add
add
add
adc
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
scas
scas
scas
add
outsl
add
lcall
add
add
add
push
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
add
cmp
cmp
add
add
add
test
test
addl
cmpsb
cmpsb
cmpsb
add
sbb
iret
iret
iret
iret
int
dec
add
jns
add
rcl
rcl
rcl
shrb
outsb
add
add
push
mov
mov
mov
call
call
add
add
lcall
call
call
add
adc
xor
sti
sbb
rcl
rcl
rcl
roll
add
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
ret
add
add
or
mov
mov
mov
outsl
outsl
or
or
or
or
or
addl
addl
jle
popa
add
mov
ja
add
add
sbb
sbb
push
push
push
push
loop
xor
add
add
add
add
add
mov
add
add
add
stos
stos
stos
stos
stos
stos
stos
js
add
add
enter
enter
add
loopne
loopne
imul
xor
xor
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
ss
mov
mov
xor
xor
xor
xor
lea
add
add
add
ja
xchg
xchg
or
pop
jge
movsl
movsl
and
and
add
add
add
add
ret
ret
and
mov
mov
or
fs
pop
pop
add
add
add
mov
mov
mov
and
jp
jp
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmpsl
cmpsl
imul
jl
jl
mov
push
push
push
push
push
inc
mov
add
test
add
jns
jns
jns
jns
jns
jns
jns
jae
jae
jae
jae
push
push
add
add
add
in
aam
aam
aam
aam
aam
add
mov
mov
mov
sbb
out
add
jg
ds
mov
mov
mov
pop
pop
pop
add
sbb
addb
add
jg
pop
pop
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
ret
jnp
add
lret
add
add
add
add
icebp
add
add
add
sldt
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
imul
add
inc
inc
inc
inc
bound
cmp
add
addr16
lea
add
add
sub
sub
dec
dec
dec
dec
outsl
outsl
outsl
outsl
outsl
add
mov
mov
add
or
or
jge
jge
jge
jge
add
ret
mov
or
or
into
into
into
xchg
add
leave
popf
popf
popf
push
push
push
push
push
push
push
call
call
or
add
add
rol
rol
rclb
imul
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
in
pop
add
nop
nop
nop
nop
cmp
xor
xor
xor
xor
add
add
jne
jne
jne
std
std
std
enter
enter
enter
add
mov
mov
add
add
and
and
and
fbstp
add
push
push
push
push
push
push
add
add
add
sbb
sbb
add
mov
mov
add
addl
add
add
dec
cmpsl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
loop
loop
loop
cmp
pop
pop
pop
pop
pop
pop
rcl
rcl
lock
rcl
rcl
rcl
rcl
rcl
add
add
add
jno
add
add
decb
dec
dec
dec
dec
dec
add
add
sub
add
push
push
push
push
push
push
lret
push
aaa
aaa
aaa
aaa
aaa
aaa
in
in
in
in
add
add
rolb
add
roll
pop
pop
pop
pop
xchg
fcmovu
fcmovu
push
push
push
add
add
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cmc
add
adc
add
add
ret
movsb
movsb
movsb
in
in
add
add
lock
jo
jo
jo
sub
jbe
jbe
jbe
jbe
jbe
add
add
push
push
add
add
jp
lret
lret
mov
mov
xor
xor
cmp
add
sub
push
add
add
adc
add
add
inc
inc
ja
ja
or
or
or
or
or
or
add
add
add
out
into
into
into
mov
add
add
push
push
push
push
push
push
push
push
add
add
sti
sti
sti
add
add
add
add
add
add
jecxz
jecxz
jecxz
enter
add
add
add
add
dec
and
loopne
loopne
xchg
popf
aas
jno
cmpsb
rolb
jbe
or
mov
ror
and
lcall
push
outsb
ret
orb
add
add
pop
loope
jb
xchg
out
aas
popa
pushl
enter
shlb
fsubrl
leave
adc
add
negl
outsl
pop
jge
add
add
rcll
push
xor
rolb
decl
pusha
loopne
mov
mov
pusha
add
loopne
inc
push
rolb
mov
add
repz
push
xchg
shl
cmp
shl
fisttps
test
add
loope
jnp
adc
and
pusha
mov
jmp
repnz
shrb
adc
xchg
test
xlat
jle
shlb
in
lds
addr16
xor
mov
and
pushl
cwtl
clc
mov
ss
lods
and
mov
and
adc
mov
jg
sbb
enter
ds
fdiv
pop
mov
sub
mov
inc
jbe
mov
test
rolb
fs
xor
dec
rcll
data16
hlt
gs
pop
test
insl
or
pusha
pusha
test
mulb
xchg
pusha
cmp
imul
mov
and
xor
adc
mov
aam
stos
xor
loopne
xor
clc
outsl
jno
inc
jns
adc
vcvtdq2pd
xor
add
popl
aas
or
and
inc
ds
push
mov
sbb
andb
cld
mov
mov
mov
adc
pusha
and
mov
sbb
pop
push
push
ljmp
mov
add
pusha
and
mov
sarb
mov
test
fdivl
xchg
dec
adc
shlb
cmp
loopne
jl
and
adc
vandps
js
loopne
add
pusha
imulb
mov
and
loopne
cmp
and
mov
or
cmp
sub
mov
ficoms
xchg
sub
mov
fmulp
aas
or
mov
push
cltd
push
lods
add
les
and
push
xor
rolb
mov
pusha
pop
ret
pop
scas
loopne
ss
jo
add
mov
std
add
fistpll
icebp
add
push
mov
leave
mov
xchg
dec
addr16
roll
movsl
pop
int3
fiadds
data16
cmpsb
and
or
inc
dec
cmp
imul
loopne,pn
push
dec
dec
or
add
clc
das
jns
sti
insb
fs
out
andb
pop
in
push
hlt
in
mov
aad
push
fs
mov
rolb
cmp
adc
and
or
loopne
add
mov
pusha
pop
sbb
push
movsl
xor
mov
xchg
push
inc
mov
xchg
mov
and
call
out
add
add
fdivl
or
pusha
call
xlat
adc
xchg
stos
arpl
push
add
sub
inc
jbe
xchg
mov
icebp
mov
mov
fldcw
clc
pop
jbe
add
imul
and
sub
adc
inc
add
aas
mov
andb
add
xor
dec
outsb
jmp
add
cmc
adc
pusha
mov
xchg
mov
test
or
dec
mov
inc
push
jl
mov
leave
fdiv
mov
hlt
das
or
push
cmc
push
mov
lds
fisubl
das
inc
mov
pop
adc
inc
and
orb
fists
fdivs
push
and
mov
add
adc
sub
addb
pusha
xchg
mov
ret
inc
lods
inc
or
mov
lods
cmc
lds
int
ss
sbb
inc
loopne
andb
scas
add
sub
xchg
bound
sub
inc
icebp
dec
pusha
sar
add
jecxz
mov
out
sbb
fwait
aam
sbb
add
cmpb
call
mov
test
rclb
nop
cmpsl
adc
loope
addr16
dec
pop
inc
je
xchg
and
ds
xchg
jae
inc
loopne
jb
sub
dec
adc
insl
pop
xor
rolb
hlt
cli
and
inc
xchg
outsl
sahf
adc
bound
and
inc
mov
inc
mov
mov
jno
jbe
movsb
rol
in
out
mov
pushf
pop
jne
pushf
mov
shl
pop
sahf
aam
cmc
xchg
test
and
xor
stc
push
or
mov
mull
ud0
lea
mov
idivb
xor
jmp
add
outsl
mov
and
inc
mov
lret
loopne
xor
rorb
or
rol
sbb
loop
or
fiaddl
gs
adc
scas
mov
je
pusha
mov
pop
fwait
mov
pop
pop
adc
jns
lock
and
mov
aad
dec
andb
nop
shlb
vmovups
xchg
cmp
popa
ss
or
cmp
and
sbb
ret
mov
dec
mov
loopne
inc
inc
and
mov
sub
loopne
jl
js
ss
lock
rclb
push
and
pop
xchg
insl
inc
pushf
add
mov
sub
mov
mov
jecxz
repnz
push
xchg
xchg
mov
out
sub
mov
fstpt
lock
ret
lods
pusha
add
ss
je
xor
and
out
sarl
pop
rorl
loopne
jecxz
setb
leave
popf
mov
loopne
ret
and
rol
test
adcb
xrelease
cld
loope
ds
fmull
sbb
inc
out
or
xchg
jl
inc
loopne
and
dec
jae
fbstp
and
and
fcmovu
pop
test
subb
imulb
mov
sbb
cmp
loopne
xchg
loopne
outsl
jo
out
lds
scas
cmp
dec
ds
inc
lahf
pop
xor
sub
push
les
xorb
xor
rorb
mov
inc
inc
or
inc
sti
int3
scas
rolb
sti
sub
pusha
xchg
adc
adc
shlb
pop
inc
sub
add
push
mov
std
pop
sub
pusha
push
mov
clc
jle
test
outsb
jp
out
jg
cmp
nop
pop
loopne
loopne
daa
incl
lcall
repnz
jno
imul
sti
sbb
shrb
cmp
xchg
movsl
adc
push
cmc
mov
andb
and
sbb
push
jg
clc
pushf
bound
sbb
mov
int
pop
xchg
sti
ljmp
mov
loopne
fldl
icebp
addb
cli
insl
fdivl
xchg
loopne
daa
or
mov
mov
mov
add
sbb
pop
jg
push
addb
pusha
and
inc
loopne
pusha
add
pusha
cmp
cmp
rol
inc
popf
mov
pusha
inc
popa
inc
stc
mov
dec
lcall
rcr
jecxz
xchg
jnp
punpckhbw
and
rcrb
fwait
push
mov
inc
lea
add
inc
mov
inc
mov
mov
mov
mov
dec
jle
hlt
jl
mov
or
sub
sub
adc
mov
loopne
pop
pop
std
or
mov
and
rcr
lds
cmovnp
shll
roll
shl
xchg
sti
lods
mov
push
in
add
pop
fs
jne
add
cmc
out
inc
pusha
dec
mov
xor
pop
aad
rol
movsl
and
loopne
rorb
and
mov
movsb
loopne
xchg
push
movsb
and
sub
and
inc
scas
andb
imul
loope
jecxz
pusha
inc
loope
insl
mov
cmp
jb
lret
rclb
movsb
addb
mov
rolb
dec
mov
stos
popa
adc
lcall
nop
mov
popf
pop
dec
loope
mov
mov
outsb
scas
inc
or
push
out
pop
adc
mov
mov
pusha
xor
dec
pop
push
decb
mov
jo
pusha
inc
xor
xor
push
insl
add
pop
or
inc
fldl
jns
and
outsl
ja
add
jle
sub
inc
sub
mov
je
jle
cmp
andb
pop
inc
xor
icebp
xor
mov
push
cmp
or
repnz
push
scas
pop
maxps
sbb
pop
mov
xchg
cmp
test
mov
cmpsl
or
movsl
ss
andb
lret
lods
xchg
pusha
fwait
dec
pop
fimull
mov
popf
ljmp
fs
rorb
mov
mov
movsl
int3
cmc
push
fimuls
mov
dec
cmp
fsubs
pop
pop
mov
add
jo
das
jp
pusha
add
jge
and
test
fcompl
pop
mov
les
jmp
loopne
pop
jmp
or
rclb
mov
mov
stos
cwtl
ljmp
pusha
add
xor
mov
sub
iret
dec
xor
andb
xor
pusha
mov
xor
rolb
and
and
jns
pushf
mov
lret
add
inc
ss
addb
sbb
rclb
lret
mov
jne
cmp
fcomps
shlb
mov
pusha
rol
neg
xor
rol
cltd
xchg
sub
xchg
lret
imul
mov
andb
cmpsb
inc
mov
pop
imul
cmpsl
rorb
fst
dec
or
sub
inc
sbb
jns
sarl
mov
and
cmpsb
rolb
pusha
popl
push
hlt
mov
xchg
orl
add
sar
nop
sub
in
flds
add
or
mov
ficoml
inc
jp
or
pusha
and
mov
mov
cmc
sub
cli
pop
inc
push
rolb
movsl
pusha
push
and
inc
in
cli
lcall
addb
sbb
sti
push
adc
cli
sub
sbb
inc
addb
add
loopne
mov
lcall
cli
leave
popa
dec
pop
gs
inc
and
mov
adc
jne
rol
cltd
push
out
lret
shll
movsl
int
xchg
jg
lret
adc
mov
shlb
std
les
sarl
and
rol
dec
cmp
dec
out
ja
add
lahf
add
sub
inc
pop
xor
popa
sub
mov
add
jo
neg
pusha
sub
aad
aaa
push
push
push
das
arpl
push
add
clc
popa
push
cmpsb
and
lock
dec
jg
inc
loopne
fisttpl
cmp
sbb
rcl
pusha
and
out
sub
int
push
call
cld
mov
mov
out
add
pop
push
shrl
pusha
pusha
mov
ds
inc
sbb
arpl
cmc
fimull
add
push
out
push
adc
test
test
adc
not
push
mov
cwtl
pop
repz
andb
ss
add
and
pusha
into
jmp
enter
into
addr16
mov
loopne
jge
xlat
mov
sbbb
sub
out
jns
popf
mov
adc
testl
pop
lcall
outsb
fstps
loop
dec
push
je
add
mov
inc
mov
shrl
addb
pop
arpl
and
push
mov
push
mov
pusha
pop
cwtl
es
loopne
aam
jo
pusha
mov
pop
pop
mov
sub
xchg
outsl
sahf
pop
sbb
orl
jecxz
push
aas
data16
push
stos
add
mov
adc
adc
lret
add
inc
and
out
jno
jp
sub
mov
popf
mov
xchg
fimull
or
pusha
cli
push
mov
dec
movsb
loopne
sub
add
xor
cmp
pusha
jle
inc
pusha
mov
xchg
sbb
jge
ss
mov
in
jecxz
and
nop
xor
lret
push
pop
in
pop
pop
mov
add
dec
jo
loopne
pusha
pusha
or
mov
aad
fsubl
or
or
jle
mov
inc
out
adc
add
add
adc
push
inc
xor
jo
rorl
rclb
roll
shl
sbb
loop
push
pusha
rolb
fs
and
scas
pusha
inc
movsb
shlb
test
dec
pop
lock
push
jge
jle
mov
shlb
inc
jbe
jmp
mov
loopne
outsb
inc
hlt
int
pop
cmp
cmp
pop
int
insb
divb
lock
cmp
lcall
mov
shlb
mov
dec
movsb
andb
push
aam
pop
jo
pop
add
adc
sub
pusha
xchg
dec
pop
pop
pop
icebp
xor
jecxz
mov
lahf
ja
sub
pop
rol
out
daa
aaa
roll
clc
cmp
cmpl
push
xor
andb
lret
repnz
inc
mov
adcb
out
ret
cmp
fiadds
mov
rcrl
add
in
andb
nop
dec
inc
popa
inc
shr
movb
mov
sub
stos
cld
mov
sbb
mov
popf
mov
push
repnz
das
jl
add
inc
push
and
mov
or
and
popf
mov
pop
imul
cmp
inc
stos
stos
fstl
pop
inc
jbe
cmp
jg
fwait
pop
flds
in
push
and
xchg
jb
mov
out
inc
dec
rcrb
adc
mov
ss
sub
shl
stos
inc
inc
mov
push
ds
inc
pop
push
pushf
mov
add
leave
xor
adc
cmc
loopne
push
add
jns
and
dec
out
cmc
sub
cmp
je
mov
cmp
dec
imulb
jmp
adc
icebp
imulb
loope
in
idiv
pop
loopne,pn
pop
sub
inc
xchg
cld
dec
xchg
mov
mov
mov
and
lcall
inc
pop
lcall
push
test
negl
imul
shrb
cmp
mov
shl
dec
push
mov
out
xchg
cld
mov
nop
jo
push
in
xchg
cmp
pop
fs
push
mov
push
rcrl
sub
js
imul
pushf
addb
in
jle
sub
mov
and
addb
cmp
cld
clc
aas
dec
pop
call
mov
repnz
enter
and
mov
and
nop
pop
xor
call
mov
add
mov
scas
popf
lcallw
pushf
dec
les
loopne,pn
sub
mov
pop
pop
scas
outsl
jmp
lahf
pop
repnz
sbb
addb
inc
adc
sbb
push
mov
arpl
cltd
mov
push
lds
add
inc
jnp
divl
add
inc
fidivrs
leave
push
add
mov
sbb
lods
pusha
and
xchg
pop
ret
lret
cmp
adc
pop
push
or
mov
add
popa
pop
add
add
sar
fstps
mov
inc
xor
movsb
inc
pusha
jae
fistps
add
add
lahf
pop
rcrb
rcrb
andb
ja
inc
sar
mov
rol
inc
inc
push
xchg
push
daa
repnz
dec
add
add
add
cmp
outsl
dec
sbb
rolb
out
or
xchg
xchg
inc
or
and
xor
pop
mov
lods
les
lret
loopne
or
addb
xchg
cwtl
fidivrs
adc
js
pusha
pusha
xor
jg
dec
dec
les
rol
hlt
arpl
shll
sub
inc
sub
sub
and
ljmp
mov
enter
sub
add
and
pusha
add
add
jmp
iret
push
xor
lcall
sar
sbb
sbb
addb
lahf
jne
push
add
jne
pop
and
add
shl
in
int3
jbe
and
imul
mov
ljmp
or
and
loopne
cmp
dec
xchg
mov
adc
data16
xlat
or
loopne
pop
cs
jo
aas
lods
add
dec
lret
push
fsubs
and
fnstenv
sbb
add
pusha
mov
negb
adc
push
loopne
scas
pop
inc
mov
mov
adc
mov
loop
lods
mov
nop
xchg
in
andb
cmp
into
dec
sub
dec
in
mov
pusha
push
cmc
mov
dec
jecxz
andb
pop
xor
sbb
sbb
pusha
and
movsl
in
add
jmp
aas
xchg
ror
arpl
cmp
mov
cmpsl
jo
fnstcw
out
andb
add
add
insl
mov
ret
les
fucomi
in
inc
and
rolb
xchg
lcall
sbb
rclb
int3
jmp
and
sub
xorb
dec
add
dec
addr16
xchg
and
out
dec
push
and
pop
add
mov
inc
sub
imul
push
jg
inc
mov
addb
push
add
push
pop
std
cld
mov
insl
and
lock
in
hlt
out
xchg
popa
daa
nop
sbb
dec
loope
mov
loopne
iret
call
and
and
test
inc
insb
lock
and
inc
in
and
test
or
cli
cmp
in
popa
mov
or
inc
sub
mov
mov
fmul
in
mov
xlat
ja
aaa
das
pop
stc
mov
rolb
dec
pop
es
xchg
pop
pop
pop
and
lcall
and
in
sub
mov
pusha
xchg
add
and
mov
jge
sbb
push
mov
xchg
xor
shrl
je
leave
push
rolb
pop
push
leave
lret
addb
push
stos
mov
adc
stos
gs
cli
ret
xchg
push
add
push
fldcw
add
push
fldcw
fcmovu
cmp
sar
dec
shrl
sbbb
sub
inc
out
xchg
repnz
adc
xor
cmpsb
mov
out
xchg
or
pushf
nop
adc
out
inc
or
push
lret
add
loopne
fistpll
daa
shlb
pusha
mov
nop
cltd
mov
xor
pop
stos
ss
or
mov
mov
or
or
add
repnz
add
shlb
outsb
stc
notl
mov
adc
mov
add
test
pusha
sbb
aad
movsb
mov
jp
mov
addb
fidivrl
prefetcht0
movsl
popf
shll
call
inc
sbb
or
dec
arpl
andb
pusha
sbb
test
and
addb
and
mov
out
dec
pop
sub
addb
lret
xchg
mov
pusha
or
mov
mov
xor
sbb
add
mov
inc
xor
pusha
inc
pop
xchg
dec
push
sub
inc
push
jns
mov
xchg
add
movsl
arpl
and
in
and
xor
pusha
sarb
sub
inc
mov
andb
pop
mov
pop
insl
cmpsb
and
sbb
add
and
inc
xchg
loopne
pop
hlt
mov
adc
or
adc
jmp
pop
test
pusha
fs
sarb
dec
mov
fwait
into
inc
push
pop
inc
addr16
ror
shll
add
stos
add
cwtl
aam
std
xor
mov
and
lods
loopne
push
mov
add
pusha
fisubrs
mov
std
ror
dec
lods
in
push
adc
inc
out
test
and
sub
sub
repz
adc
in
loopne
pop
idivl
dec
cltd
das
jo
pop
xchg
stc
int
pushf
mov
rolb
andb
cmpl
push
push
inc
pusha
xorl
adc
subl
das
sub
pusha
mov
jl
popf
out
pusha
loopne
jno
fwait
gs
imul
fidivl
sub
aaa
push
lods
movsl
jecxz
xlat
ret
mov
sbb
inc
cmpsl
mov
cmp
jb
lret
sub
inc
mov
aam
cmp
pop
mov
push
mov
sub
mov
hlt
add
jge
push
mov
xchg
push
shlb
lahf
das
cmpsl
add
mov
mov
mov
test
dec
or
add
inc
test
and
sub
add
inc
inc
pop
sub
sbb
mov
mov
mov
gs
mov
loopne
mov
mov
outsl
add
rcl
xchg
pop
xchg
mov
push
out
rclb
in
fwait
sub
mov
ror
mov
add
jno
jge
clc
cli
iret
int3
mov
lahf
pop
lret
or
inc
rcl
mov
sub
and
scas
and
ficomps
pop
outsb
xor
in
outsl
lock
mov
scas
mov
shrb
inc
cmpsl
add
mov
or
add
mov
mov
and
mov
in
dec
imul
daa
and
enter
xor
or
inc
ss
rolb
rcl
fsubrp
pop
cmp
sarl
xchg
sub
loopne
add
andb
add
loopne
fnsave
sar
clc
pop
inc
jle
or
and
or
stos
aaa
rclb
inc
je
pop
in
fmuls
dec
jo
loop
movsb
inc
add
test
je
xchg
repnz
mov
addr16
test
loopne
aaa
in
xor
and
xchg
cli
das
or
jl
ret
mov
movl
arpl
cltd
jp
neg
or
popa
fists
test
call
xor
jmp
adc
cmp
rolb
fidivs
pop
mov
jl
dec
clc
loope
addb
mov
xchg
lods
call
pusha
sub
adcl
xchg
aad
sar
popf
push
sub
sbbb
shl
inc
mov
addb
add
enter
loopne
pop
fsubs
inc
loopne
addb
hlt
shlb
pop
icebp
jle
pop
fcmovnb
sub
adc
sub
test
shl
push
push
rorb
dec
mov
mov
iret
call
fsubr
jo
sti
mov
sub
shl
pushf
fisubrs
add
dec
adc
outsb
cli
scas
shll
insl
shlb
lea
rcl
inc
adc
aad
and
rcr
pushf
and
inc
loop
loopne
xlat
fcomps
jp
dec
insb
and
push
or
add
cmp
cmpsl
dec
aam
or
jno
fistl
and
sbb
xchg
push
cld
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
cmp
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
dec
out
aas
leave
or
mov
add
lret
ret
mov
or
add
pushf
cmp
push
mov
mov
js
outsl
jno
loopne
test
xor
pusha
loopne
or
and
adc
std
pop
fldcw
testl
loopne
ret
jg
ljmp
loopne
mov
add
xor
dec
inc
mov
scas
mov
jge
ss
nopl
pusha
lret
add
add
cli
call
pop
data16
mov
sub
xorb
leave
mov
dec
enter
pusha
shlb
loopne
and
pop
and
inc
fsubrp
addb
fisubrs
pop
fwait
ja
sub
mov
insb
push
pushl
iret
pop
test
loopne
add
push
jb
jl
inc
adc
sub
loopne
lret
adc
ret
std
dec
jo
mov
sar
pop
dec
jl
rdmsr
lret
negb
pop
cmp
and
leavew
mov
add
loopne
jb
lods
mov
addb
daa
imul
outsb
shlb
or
add
into
dec
out
inc
outsb
dec
jmp
popa
push
pusha
add
loopne
push
fmull
cmpsb
pusha
loopne
xchg
fisubl
scas
aad
dec
jns
sbb
xchg
imulb
xor
lods
mov
dec
xchg
dec
lock
addr16
and
push
rorl
sbbb
and
sbb
imul
cmp
out
jns
jns
cli
outsl
sub
xchg
jge
mov
xchg
gs
in
into
xor
xor
rol
sbb
mov
pop
outsl
cld
cmpsl
sub
sbb
inc
and
stos
jmp
inc
pop
lock
mov
call
jp
loopne
sarl
insb
daa
or
inc
add
fildl
push
add
pusha
insb
in
imul
mov
add
into
std
dec
or
fisubs
repnz
repnz
js
mov
rolb
enter
inc
or
dec
sbb
pop
sbb
and
loopne
pushf
sbb
std
pop
loope
mov
inc
cmp
out
pusha
mov
insb
or
mov
fs
daa
pop
or
ret
sarl
add
inc
lock
cmpsb
loopne
xor
insl
out
add
sub
loopne
xchg
pop
in
lock
rorb
adc
hlt
cmpsl
sbb
sub
add
ficomps
gs
test
and
sub
or
dec
stos
jne
test
mov
mov
sbb
inc
jle
cli
cli
out
jae
cmpsb
rolb
out
ds
mov
dec
sarb
ljmp
sub
lods
insb
outsb
push
stos
inc
sar
inc
adc
mov
shlb
cmpsb
pusha
loopne
or
sub
bound
in
inc
cli
imul
mov
jecxz
lret
mov
and
mov
xchg
xor
xchg
imulb
cmp
and
clc
fs
mov
mov
clc
xor
ljmp
mov
and
filds
daa
fstp
and
mov
sub
pusha
loope
addb
lock
aad
add
pusha
ret
inc
inc
cld
xchg
cli
jne
pusha
loopne
sub
xchg
imul
pop
add
pusha
call
cmp
or
mov
ss
mov
insb
mov
xchg
inc
loope
popf
push
imul
movsl
repnz
mov
mov
jns
sub
dec
scas
xor
push
mov
std
xor
cmp
data16
dec
sbb
pop
call
int3
test
shlb
sbb
dec
jno
out
jge
out
cli
push
and
jo
push
shlb
jne
mov
pusha
mov
out
cli
divb
add
out
clc
jp
jg
add
shrb
loopne
mov
addb
loopne
ljmp
mov
mov
ss
repnz
hlt
mov
adc
mov
out
pushf
add
adc
lret
test
or
in
ret
andb
aaa
push
scas
call
decb
adc
add
mov
add
das
ds
out
les
fucom
cmp
leave
cmp
and
xor
loopne
jmp
add
subl
aam
cmpsb
and
sbb
push
and
lods
cmpsl
jmp
lret
call
scas
add
sahf
jno
mov
inc
jmp
shlb
push
mov
addb
mov
outsl
xor
add
arpl
imul
add
ret
adc
inc
ja
imul
lock
outsb
test
pusha
pop
push
add
and
jmp
jle
pop
xchg
add
shrb
adc
add
in
mov
shrb
and
pusha
add
into
lahf
addb
xchg
mov
repz
sbbb
adc
jno
xor
mov
or
push
pop
jmp
dec
jle
jnp
and
cmpsb
pusha
and
pop
cmp
dec
lret
scas
push
xorl
push
loop
mov
inc
add
out
sub
cmp
mov
shlb
loopne
pusha
mov
sbb
data16
leave
add
lcall
add
mov
mov
jb
and
iret
mov
test
rcl
andb
pop
push
divl
sub
pop
in
dec
popa
dec
xchg
sub
and
lcall
sbb
loopne
in
das
adc
mov
and
add
inc
xchg
test
sbb
and
pusha
xchg
push
mov
call
bound
jp
ds
jo
mov
xchg
adc
daa
pop
jae
mov
pop
ss
test
loopne
ja
xor
or
adc
pop
out
ror
out
lods
adc
fldcw
and
and
dec
add
loopne
imul
mov
and
jnp
push
andb
dec
push
out
call
lock
das
ret
ret
cmpl
sub
cmpsb
andb
stc
push
or
pop
shrl
ljmp
or
adcb
pop
ss
adc
or
shrb
push
fldcw
shl
mov
fadds
sbb
jno
stc
int3
mov
xor
aaa
insb
je
loopne
mov
sub
fldcw
jecxz
test
gs
cvtdq2ps
loop
add
add
hlt
push
and
and
loopne
movl
imul
xor
test
and
lahf
mov
xor
rclb
pop
daa
xor
out
rcrb
shlb
sub
sub
loopne
pop
and
mov
loop
loope
push
addb
cwtl
sub
repz
pop
inc
mov
sbb
popf
cmp
loopne
xchg
cld
xchg
jno
pop
and
loopne
stos
mov
loope
ret
pusha
and
repnz
mov
mov
fisttpll
pusha
mov
and
enter
icebp
stc
pusha
or
ss
shl
shll
sub
push
loopne
or
loopne
and
and
ror
addl
or
add
aas
lods
xchg
mov
or
push
inc
test
outsb
pop
or
sub
in
ficoml
mov
inc
repnz
enter
adc
pop
xchg
and
sbb
add
push
pusha
loopne
arpl
test
inc
sbb
addb
and
cltd
pusha
cmp
pop
and
addb
xchg
add
jg
stos
jnp
xchg
and
push
ror
xor
pop
inc
add
pusha
out
scas
jae
mov
shlb
int3
push
or
mov
popf
ret
movsb
mov
pop
cltd
push
or
subb
test
out
mov
cmp
lea
mov
shll
loope
dec
mov
loopne
jecxz
mov
and
xchg
inc
loopne
cld
sti
pop
pushf
addb
andb
xor
movsb
mov
jne
pop
push
je
mov
mov
sbb
insb
inc
gs
lcall
or
bound
mov
pusha
jns
mov
adc
and
roll
andb
pop
jno
push
jle
adcl
add
bound
and
pop
mov
mov
addb
lret
outsl
adc
outsl
ficoml
jle
loopne
jns
shl
into
xchg
cmp
xchg
and
mov
outsb
xchg
xchg
or
mov
sbb
ss
fsubl
loopne
loopne
lea
xchg
push
xor
mov
in
dec
xorl
xchg
adc
inc
and
mov
icebp
and
xorb
movsl
mov
fs
repnz
dec
cli
pop
incb
and
and
shlb
lods
and
push
jl
inc
int
imul
inc
testl
xor
mov
iret
inc
xchg
inc
addb
stos
ja
pop
and
loopne
add
xor
add
lret
push
xor
pop
pop
scas
mov
loopne
push
dec
add
cmp
imull
inc
inc
sbb
sub
pop
inc
jnp
dec
movl
mov
xor
shlb
and
lahf
rcr
mov
or
test
push
andb
loopne
and
ret
add
sti
fdivrs
sbb
das
xchg
and
add
or
scas
inc
subb
mov
sub
test
adcb
xor
push
mov
loopne
push
cltd
ljmp
andb
xchg
shl
add
in
lahf
stos
lds
cmp
or
jge
mov
sub
and
dec
or
inc
addb
outsb
inc
sbb
mov
imul
xchg
and
dec
adc
rorb
or
xor
inc
pusha
in
out
test
and
add
mov
push
aad
mov
loopne
aas
lods
cmp
adc
mov
call
jb
mov
push
shlb
mov
mov
inc
push
fsts
or
add
andb
pop
and
jg
and
aaa
sub
mov
nop
pop
and
xlat
dec
push
jle
jmp
rorb
and
add
and
mov
mov
sbbb
pusha
add
and
lcall
lret
add
pusha
sub
dec
sbb
jg
jmp
mov
repnz
inc
cli
test
add
pop
enter
inc
insb
mov
push
fsubl
mov
push
cs
mov
add
add
mov
jmp
xchg
aad
inc
mov
mov
jb
test
sub
and
orb
pusha
inc
mov
add
cmc
sub
loopne
jbe
fdivrl
out
mov
jnp
loopne
sti
jmp
popf
lret
addb
pusha
mov
cld
dec
xchg
into
cld
add
add
lahf
ds
mov
mov
pop
test
pusha
insb
mov
in
jb
push
mov
inc
ss
add
xchg
lock
inc
mov
pusha
je
mov
pop
xchg
mov
ret
or
andb
mov
add
and
shl
inc
mov
xor
sub
sahf
cmp
xchg
mov
test
xchg
jp
adc
std
in
add
pusha
pusha
push
xor
pop
fimull
addb
add
add
nop
daa
stos
loopne
ret
je
aaa
xor
movsl
adc
or
pop
jnp
sub
push
and
pusha
ja
adc
mov
fs
repnz
je
addb
lock
sbbl
add
stc
cmp
adc
cwtl
dec
dec
out
gs
loopne
shlb
dec
dec
in
es
mov
xchg
cmp
add
rcrb
movsb
pusha
pusha
sub
pusha
cld
popf
fwait
pusha
aas
xor
jbe
push
stc
push
push
add
jno
jecxz
inc
rol
lods
popf
mov
testb
inc
sbb
sbb
add
loopne
and
pusha
add
pop
inc
insl
out
cmpsl
test
pusha
shlb
addb
push
icebp
jb
xchg
lret
jno
rolb
lock
dec
push
xchg
pusha
and
js
jecxz
and
cli
in
push
inc
mov
inc
vpshaq
mov
adc
shrl
lds
rolb
shl
sbb
push
or
rol
aam
sub
or
ret
imul
pop
in
jecxz
xor
cmp
xor
mov
sbb
js
jmp
xor
push
arpl
lock
dec
inc
mov
test
xchg
and
stos
loopne
jmp
lret
cltd
mov
mov
pusha
pusha
aam
adc
iret
xor
push
out
das
xchg
jns
rcrl
mov
push
xchg
cmp
add
and
inc
lods
aas
fisubs
sbb
push
sub
shr
sub
loopne
cmpsl
jno
cmp
rclb
vmwrite
mov
aad
mov
lea
inc
rcll
imul
mov
sub
shlb
cmpsb
mov
inc
icebp
sub
push
ljmp
jecxz
scas
adc
sarl
add
mov
sub
mov
inc
jne
push
test
loopne
stos
mov
jnp
mov
sub
xchg
popa
movsl
out
andb
daa
push
sti
ret
and
jns
nop
mov
rcrb
shlb
movsb
addb
cmpl
dec
and
loopne
das
adc
mov
mov
cmpsl
outsl
cmpsb
pusha
loopne
js
sub
add
js
and
out
pusha
sbbb
pop
mov
mov
fidivl
mov
in
jle,pt
hlt
pusha
push
iret
sub
std
js
lock
arpl
aad
cmp
adcl
jp
fists
andb
push
clc
repnz
nop
cld
jae
fidivrl
jnp
std
mov
clc
repnz
nop
cld
jae
jle
add
ret
nop
push
mov
leave
nop
jmp
inc
scas
add
je
xchg
pop
push
adc
xchg
pop
clc
repnz
nop
cld
jae
fadds
add
cmp
addb
shlb
fistpl
push
mov
xchg
ret
add
add
mov
jne
clc
repnz
nop
cld
jae
add
add
or
nop
nop
cld
jae
mov
add
in
insl
mov
push
mov
xchg
ret
ds
cmc
add
sub
pop
push
mov
xchg
ret
add
sub
mov
pusha
jecxz
nop
push
mov
leave
nop
jmp
aaa
add
out
out
sub
clc
repnz
nop
cld
jae
fsubs
add
add
sarb
repnz
nop
cld
jae
pop
add
jle
es
outsl
movzwl
clc
repnz
nop
cld
jae
xor
inc
rep
nop
push
mov
leave
nop
jmp
cmp
add
add
mov
push
clc
repnz
nop
cld
jae
jle,pt
cmc
add
xor
hlt
push
add
clc
repnz
nop
cld
jae
jle
add
xor
clc
repnz
nop
cld
jae
ja
je
in
jb
mov
clc
repnz
nop
cld
jae
add
add
add
call
clc
repnz
nop
cld
jae
inc
cmp
mov
add
add
repnz
nop
cld
jae
add
repnz
nop
cld
jae
add
add
add
incl
mov
push
mov
xchg
ret
jnp
int3
jl
pop
add
icebp
clc
repnz
nop
cld
jae
add
add
add
pop
clc
repnz
nop
cld
jae
xor
add
or
imul
pop
add
add
add
add
popa
push
mov
nop
push
mov
leave
nop
jmp
lret
pop
xor
push
mov
xchg
ret
add
call
add
not
clc
repnz
nop
cld
jae
ds
add
add
cmp
jl
sbb
push
mov
leave
nop
jmp
mov
add
add
fld1
push
mov
xchg
ret
jle
gs
cmc
add
mov
clc
repnz
nop
cld
jae
add
scas
stc
push
mov
push
inc
cmpsb
jae
andl
add
xchg
add
fld1
nop
push
mov
leave
nop
jmp
jl
xor
sbb
pop
clc
repnz
nop
cld
jae
popa
out
add
add
add
add
push
mov
xchg
ret
add
dec
inc
add
adc
push
mov
xchg
ret
inc
add
add
in
leave
nop
jmp
add
add
add
pop
push
mov
xchg
ret
add
mov
xchg
in
sbb
add
repnz
nop
cld
jae
add
int3
pop
mov
clc
repnz
nop
cld
jae
add
fiaddl
add
mov
clc
repnz
nop
cld
jae
add
add
cmp
int
ret
add
add
nop
jmp
mov
push
mov
xchg
ret
add
inc
incl
mov
pop
clc
repnz
nop
cld
jae
mov
gs
lahf
add
sbb
mov
clc
repnz
nop
cld
jae
add
ja
inc
mov
repnz
nop
cld
jae
add
sub
nop
cld
jae
dec
lahf
add
mov
sbb
cmp
xchg
xchg
ret
add
add
and
shlb
push
add
clc
repnz
nop
cld
jae
xor
mov
jp
add
fadds
add
jle
out
sub
mov
leave
nop
jmp
cmp
add
aaa
push
clc
repnz
nop
cld
jae
adc
add
int3
jmp
add
add
nop
push
mov
leave
nop
jmp
std
add
int3
add
mov
xchg
ret
add
add
xor
mov
nop
push
mov
leave
nop
jmp
add
add
inc
inc
push
push
mov
xchg
ret
add
std
add
jl
out
pop
nop
push
mov
leave
nop
jmp
inc
add
inc
xor
push
mov
xchg
ret
out
je
add
jp
fwait
mov
push
mov
xchg
ret
add
cmc
adc
xchg
test
shlb
lods
or
add
nop
jmp
push
inc
jg
clc
repnz
nop
cld
jae
jmp
fidivrl
add
sbb
mov
clc
repnz
nop
cld
jae
jl
es
add
sbb
push
mov
xchg
ret
add
add
fadds
out
mov
add
rolb
icebp
push
dec
sub
add
add
in
mov
push
mov
xchg
ret
add
add
add
lahf
add
repnz
nop
cld
jae
add
add
inc
xorl
inc
add
test
add
aaa
adc
add
shlb
and
push
mov
xchg
ret
sbb
lahf
cmc
sbb
push
mov
xchg
ret
inc
cmc
add
jl
mov
clc
repnz
nop
cld
jae
mov
push
add
popa
test
out
fwait
clc
repnz
nop
cld
jae
mov
sbb
add
mov
nop
nop
cld
jae
add
add
xchg
inc
add
cmp
lret
out
add
ljmp
add
cmp
jg
adc
repnz
nop
cld
jae
jmp
cmc
jge
add
add
clc
repnz
nop
cld
jae
xor
popw
push
clc
repnz
nop
cld
jae
mov
add
sbb
nop
cld
jae
sbb
push
fmuls
test
nop
push
mov
leave
nop
jmp
std
mov
xor
int3
in
vhsubps
repnz
nop
cld
jae
cmp
lret
cmp
pusha
sar
idiv
repnz
nop
cld
jae
add
cmp
jmp
jle
dec
out
xor
push
mov
xchg
ret
jl
mov
cmp
pusha
faddl
fistl
test
cmp
ret
adc
cmp
inc
movsb
loopne
scas
add
clc
repnz
nop
cld
jae
mov
or
jns
mov
add
nop
jmp
lret
mov
clc
repnz
nop
cld
jae
xor
std
outsb
push
rolb
pop
fwait
push
mov
xchg
ret
add
cmp
add
repnz
nop
cld
jae
add
cmp
lret
and
loopne
call
clc
repnz
nop
cld
jae
ds
popa
adc
mov
push
mov
xchg
ret
call
test
and
clc
repnz
nop
cld
jae
add
fadds
fstpt
push
sub
nop
jmp
add
cmp
pop
add
clc
repnz
nop
cld
jae
lret
push
add
clc
repnz
nop
cld
jae
jnp
push
add
add
xor
push
clc
repnz
nop
cld
jae
xor
ficoml
mov
aaa
add
pusha
mov
clc
repnz
nop
cld
jae
test
add
jle
pop
push
nop
push
mov
leave
nop
jmp
add
add
pop
sub
sar
call
nop
jmp
add
add
xor
nop
cld
jae
add
aaa
jmp
add
xchg
jmp
repnz
nop
cld
jae
jl
inc
add
std
pusha
icebp
fwait
push
mov
xchg
ret
add
std
add
and
add
repnz
nop
cld
jae
add
add
out
pusha
jno
rclb
mov
cmp
ret
jge
xor
jle
jmp
std
add
test
add
std
add
fidivrl
add
xchg
roll
repnz
nop
cld
jae
add
fadds
add
sti
push
push
mov
xchg
ret
inc
xchg
adc
ds
mov
mov
add
add
cmc
add
add
add
adc
nop
nop
cld
jae
add
mov
xorl
inc
dec
xchg
nop
jmp
add
in
and
clc
repnz
nop
cld
jae
out
add
std
add
mov
nop
push
mov
leave
nop
jmp
test
add
sub
repnz
nop
cld
jae
mov
lahf
add
add
adc
lahf
ja
clc
repnz
nop
cld
jae
xchg
add
add
and
mov
clc
repnz
nop
cld
jae
add
add
add
jecxz
movsb
clc
repnz
nop
cld
jae
test
popa
add
dec
add
jecxz
mov
adc
repnz
nop
cld
jae
cmp
sar
repnz
nop
cld
jae
add
add
mov
push
jge
mov
leave
nop
jmp
add
call
add
aam
add
push
mov
leave
nop
jmp
lahf
pushl
add
repnz
nop
cld
jae
xor
aaa
add
mov
clc
repnz
nop
cld
jae
add
xor
add
pushl
clc
repnz
nop
cld
jae
fadds
mov
in
sar
nop
nop
cld
jae
add
cmc
add
add
outsl
xchg
clc
repnz
nop
cld
jae
mov
add
add
jae
clc
repnz
nop
cld
jae
add
inc
call
mov
mov
repnz
nop
cld
jae
add
adc
sub
stos
clc
repnz
nop
cld
jae
andl
cmc
xor
nop
nop
cld
jae
add
insl
push
push
mov
xchg
ret
add
add
xor
cmp
jmp
nop
cld
jae
add
mov
jmp
add
add
add
add
cmp
add
mov
xchg
ret
mov
adc
mov
clc
repnz
nop
cld
jae
add
mov
add
or
add
je
clc
repnz
nop
cld
jae
add
sbb
cmpl
jmp
incl
add
add
add
scas
popa
inc
dec
add
xor
rolb
pusha
popl
pause
push
mov
leave
nop
jmp
lret
ja
adc
cmc
add
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
jge
sub
sub
add
cmpsl
push
nop
push
mov
leave
nop
jmp
inc
add
add
cmc
add
mov
nop
push
mov
leave
nop
jmp
es
adc
mov
iret
or
inc
add
std
dec
cmp
inc
mov
push
mov
xchg
ret
add
add
sub
inc
out
pop
nop
push
mov
leave
nop
jmp
add
jge
out
mov
ljmp
nop
cld
jae
add
jl
out
pushl
mov
add
add
repnz
nop
cld
jae
push
add
fsubr
call
clc
repnz
nop
cld
jae
add
add
cmpsb
and
push
mov
xchg
ret
sub
add
add
out
add
clc
repnz
nop
cld
jae
jnp
add
sbb
add
add
add
lret
add
add
aaa
cmc
add
add
clc
repnz
nop
cld
jae
add
mov
ja
and
clc
repnz
nop
cld
jae
out
inc
test
inc
mov
mov
push
mov
xchg
ret
add
add
add
mov
nop
cld
jae
add
add
jmp
inc
add
nop
push
mov
leave
nop
jmp
add
test
jge
scas
inc
loope
or
clc
repnz
nop
cld
jae
add
in
or
mov
xchg
ret
add
xor
xchg
push
mov
xchg
ret
add
jnp
xor
mov
jns
inc
adc
repnz
nop
cld
jae
add
add
pop
add
and
add
add
sub
aaa
add
add
nop
push
mov
leave
nop
jmp
inc
push
inc
add
mov
nop
push
mov
leave
nop
jmp
add
fadds
aas
add
nop
push
mov
leave
nop
jmp
sub
cmc
add
aaa
in
shr
clc
repnz
nop
cld
jae
add
add
dec
add
mov
roll
repnz
nop
cld
jae
out
add
add
cmp
nop
push
mov
leave
nop
jmp
add
lret
es
rolb
ret
lea
push
mov
xchg
ret
add
add
add
mov
cmp
push
mov
xchg
ret
xor
jmp
and
repnz
nop
cld
jae
add
add
cmp
call
clc
repnz
nop
cld
jae
push
adc
mov
lea
nop
push
mov
leave
nop
jmp
add
add
call
cmp
mov
loopne
loopne
lea
repnz
nop
cld
jae
pop
jle
out
xchg
ja
inc
int
nop
push
mov
leave
nop
jmp
add
add
incl
inc
add
sub
clc
repnz
nop
cld
jae
out
out
mov
ficompl
mov
push
mov
xchg
ret
fdivs
lahf
cmp
fldl
mov
xchg
ret
add
scas
add
push
mov
xchg
ret
add
add
pop
test
jl
add
clc
repnz
nop
cld
jae
adc
into
push
mov
clc
repnz
nop
cld
jae
inc
mov
fwait
clc
repnz
nop
cld
jae
add
adc
cmp
push
mov
leave
nop
jmp
add
add
mov
push
sbb
in
clc
repnz
nop
cld
jae
std
add
add
add
dec
cmp
repnz
nop
cld
jae
add
lods
imul
clc
repnz
nop
cld
jae
pushl
add
mov
nop
nop
cld
jae
add
lret
cmpsl
add
push
mov
xchg
ret
add
add
xchg
nop
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
out
inc
add
mov
clc
repnz
nop
cld
jae
add
xor
in
sub
add
mov
xchg
ret
sbb
out
pop
shll
sar
nop
nop
cld
jae
jl
mov
add
test
pusha
inc
ret
clc
repnz
nop
cld
jae
mov
mov
test
push
add
dec
nop
push
mov
leave
nop
jmp
std
add
cmp
out
and
pop
cmp
mov
xchg
ret
add
add
sub
push
mov
xchg
ret
add
mov
add
mov
clc
repnz
nop
cld
jae
adc
pop
addl
inc
add
lret
push
add
test
and
inc
loop
shlb
rorl
repnz
nop
cld
jae
xor
addr16
clc
repnz
nop
cld
jae
xor
add
mov
mov
sbb
nop
cld
jae
jnp
cmc
add
out
enter
cmp
repnz
nop
cld
jae
jl
add
adc
jle
add
nop
jmp
add
xor
cmp
push
mov
leave
nop
jmp
add
add
mov
imul
sahf
mov
xchg
ret
fdivrs
jb
out
jge
and
push
fs
repnz
nop
cld
jae
inc
add
cmp
cmpl
nop
jmp
es
add
mov
mov
clc
repnz
nop
cld
jae
sbb
mov
aad
mov
adc
repnz
nop
cld
jae
add
add
jge
rclb
jmp
mov
mov
add
add
nop
push
mov
leave
nop
jmp
cmp
adc
xor
out
js
mov
push
mov
xchg
ret
pop
je
add
add
add
incl
nop
push
mov
leave
nop
jmp
add
jnp
xor
mov
nop
push
mov
leave
nop
jmp
add
add
adc
add
add
repnz
nop
cld
jae
mov
mov
lods
loopne
gs
push
mov
xchg
ret
es
out
mov
xor
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
sub
mov
add
std
popa
sub
clc
repnz
nop
cld
jae
add
add
xor
pop
push
mov
xchg
ret
test
scas
add
or
or
cmp
ret
add
add
add
int
pop
jae
repnz
nop
cld
jae
test
test
or
add
pusha
push
loopne
test
or
add
jne
clc
repnz
nop
cld
jae
fadds
add
mov
xchg
ret
add
out
call
std
mov
clc
repnz
nop
cld
jae
add
add
rcrb
nop
nop
cld
jae
add
jl
std
mov
std
jle
add
sbb
out
in
andb
into
cmp
arpl
repnz
nop
cld
jae
adc
inc
loopne
push
mov
leave
nop
jmp
fdivs
mov
aam
decl
push
mov
xchg
ret
sub
cmp
jp
add
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
inc
add
mov
xchg
ret
mov
add
add
add
add
mov
push
clc
repnz
nop
cld
jae
mov
add
repnz
nop
cld
jae
add
sbb
add
clc
repnz
nop
cld
jae
jl
cmp
add
add
push
mov
xchg
ret
add
add
add
xorl
clc
repnz
nop
cld
jae
cmp
ljmp
nop
nop
cld
jae
inc
jle
add
add
mov
push
mov
xchg
ret
pop
int3
add
add
add
and
ja
add
add
clc
repnz
nop
cld
jae
add
std
add
and
repnz
nop
cld
jae
add
add
add
add
dec
mov
push
mov
xchg
ret
inc
mov
scas
add
xor
repnz
nop
cld
jae
add
jb
add
lea
clc
repnz
nop
cld
jae
xor
add
add
repz
sbb
test
add
add
sbb
repnz
nop
cld
jae
ja
add
add
mov
movzwl
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
std
add
add
mov
mov
xchg
ret
cmc
xor
add
fidivl
popa
test
addb
add
clc
repnz
nop
cld
jae
std
sbb
cmpl
nop
push
mov
leave
nop
jmp
popa
add
jl
add
push
mov
leave
nop
jmp
add
add
int3
jmp
mov
nop
push
mov
leave
nop
jmp
push
inc
push
xchg
clc
repnz
nop
cld
jae
add
sub
add
popf
mov
push
mov
xchg
ret
out
add
call
add
clc
repnz
nop
cld
jae
inc
add
add
jge
add
nop
push
mov
leave
nop
jmp
add
popa
call
nop
push
mov
leave
nop
jmp
add
movsb
push
mov
xchg
ret
add
add
xchg
add
cmpb
xchg
ret
cmc
inc
pop
mov
inc
loopne
add
clc
repnz
nop
cld
jae
inc
jmp
jb
scas
dec
add
push
mov
xchg
ret
adc
aaa
cmp
add
push
jl
lea
clc
repnz
nop
cld
jae
mov
lret
add
repnz
nop
cld
jae
adc
out
mov
push
push
mov
xchg
ret
ja
sbb
popa
sbb
push
clc
repnz
nop
cld
jae
scas
jb
add
inc
add
jg
dec
push
clc
repnz
nop
cld
jae
jl
sub
sbb
or
sub
push
mov
leave
nop
jmp
add
add
es
incb
mov
clc
repnz
nop
cld
jae
add
add
add
mov
das
push
push
mov
xchg
ret
push
inc
pop
add
pop
lahf
add
in
leave
nop
jmp
add
cmp
add
inc
pop
clc
repnz
nop
cld
jae
call
add
je
add
clc
repnz
nop
cld
jae
add
pop
call
pop
clc
repnz
nop
cld
jae
inc
add
add
add
add
in
clc
repnz
nop
cld
jae
add
or
repnz
nop
cld
jae
sbb
fadds
dec
nop
push
mov
leave
nop
jmp
add
jle
call
inc
in
mov
xchg
ret
sub
add
add
mov
jno
clc
repnz
nop
cld
jae
add
je
jl
and
mov
xchg
ret
es
cmp
pop
jne
clc
repnz
nop
cld
jae
add
cmc
sub
add
nop
jmp
jl
push
fcomps
and
adc
ja
clc
repnz
nop
cld
jae
sub
out
andb
repnz
nop
cld
jae
cmp
pop
incl
adc
lret
mov
leave
nop
jmp
jl
add
add
mov
add
nop
push
mov
leave
nop
jmp
add
pop
stc
add
push
mov
xchg
ret
fdivr
push
add
clc
repnz
nop
cld
jae
add
add
out
add
add
ss
add
or
dec
xchg
inc
add
out
adc
pop
clc
repnz
nop
cld
jae
inc
add
add
add
xor
clc
repnz
nop
cld
jae
jnp
out
pop
cmp
jb
enter
mov
test
clc
repnz
nop
cld
jae
add
insl
xchg
inc
add
add
mov
in
pusha
and
push
inc
push
dec
clc
repnz
nop
cld
jae
add
or
add
clc
repnz
nop
cld
jae
add
stos
clc
repnz
nop
cld
jae
out
mov
add
inc
cwtl
dec
inc
sbb
jne
clc
repnz
nop
cld
jae
fdivs
jno
sbb
clc
repnz
nop
cld
jae
jb
add
mov
scas
andb
clc
repnz
nop
cld
jae
cmp
mov
inc
std
lret
pushl
push
mov
xchg
ret
xor
jnp
xchg
add
inc
das
xor
clc
repnz
nop
cld
jae
pop
inc
pop
add
repnz
nop
cld
jae
es
add
inc
or
add
incl
cmp
add
add
lret
mov
in
fistpl
clc
repnz
nop
cld
jae
scas
test
add
add
cmc
add
add
repnz
nop
cld
jae
add
inc
lock
or
add
xchg
clc
repnz
nop
cld
jae
gs
jl
inc
fsubs
xor
mov
cmp
ret
add
add
call
enter
push
mov
xchg
ret
lahf
std
pushl
add
add
icebp
mov
clc
repnz
nop
cld
jae
add
jge
add
jp
xchg
push
insb
or
clc
repnz
nop
cld
jae
add
pop
add
call
adc
xlat
nop
push
mov
leave
nop
jmp
jnp
xchg
dec
subl
push
mov
xchg
ret
add
test
jle
add
clc
repnz
nop
cld
jae
add
add
dec
int3
or
nop
push
mov
leave
nop
jmp
int3
add
es
mov
sbb
repnz
nop
cld
jae
add
add
push
lret
pop
clc
repnz
nop
cld
jae
add
add
add
in
clc
repnz
nop
cld
jae
pop
add
add
jmp
mov
xchg
ret
xor
inc
add
test
clc
repnz
nop
cld
jae
add
add
js
clc
repnz
nop
cld
jae
mov
add
add
sbb
in
add
mov
add
clc
repnz
nop
cld
jae
jnp,pt
je
out
clc
repnz
nop
cld
jae
add
inc
inc
call
mov
mov
leave
nop
jmp
add
add
mov
repnz
nop
cld
jae
ja
add
add
add
and
add
push
mov
xchg
ret
add
add
add
add
clc
into
leave
movzwl
clc
repnz
nop
cld
jae
orl
push
mov
xchg
ret
ja
add
ja
inc
mov
push
jae
add
add
sub
jge
scas
add
testl
nop
push
mov
leave
nop
jmp
add
pop
inc
cld
push
mov
xchg
ret
xchg
add
add
mov
cmc
dec
push
mov
xchg
ret
mov
add
les
mov
clc
repnz
nop
cld
jae
add
sqrtps
repnz
nop
cld
jae
call
add
add
mov
clc
repnz
nop
cld
jae
mov
jle
add
nop
nop
cld
jae
sbb
add
jge
add
fwait
clc
repnz
nop
cld
jae
out
add
jle
jle
mov
jle
jmp
add
add
inc
incl
add
add
push
mov
xchg
ret
add
add
mov
nop
cld
jae
add
jle
add
xchg
lea
nop
nop
cld
jae
add
add
test
add
nop
push
mov
leave
nop
jmp
xchg
add
cmp
fld1
clc
repnz
nop
cld
jae
std
sbb
adc
jl
cmc
push
nop
push
mov
leave
nop
jmp
add
sbb
jne
push
mov
xchg
ret
add
add
add
gs
add
and
repnz
nop
cld
jae
add
dec
jmp
mov
add
add
lahf
std
sbb
push
add
push
mov
leave
nop
jmp
add
mov
out
cmp
add
add
add
clc
repnz
nop
cld
jae
popa
add
add
mov
leave
nop
jmp
add
sbb
andb
push
nop
push
mov
leave
nop
jmp
inc
add
add
add
xor
loop
mov
xchg
ret
cmp
ja
out
incl
jnp
sbb
push
mov
xchg
ret
add
cmp
jge
repz
repnz
nop
cld
jae
cmpl
fld1
clc
repnz
nop
cld
jae
es
add
add
mov
push
nop
push
mov
leave
nop
jmp
add
add
lods
push
mov
xchg
ret
add
add
adc
add
add
jne
clc
repnz
nop
cld
jae
add
add
popa
cmp
push
clc
repnz
nop
cld
jae
add
add
dec
add
add
sub
nop
push
mov
leave
nop
jmp
ficompl
mov
mov
and
push
mov
leave
nop
jmp
add
inc
fwait
push
clc
repnz
nop
cld
jae
add
jl
add
pop
add
add
clc
repnz
nop
cld
jae
add
incl
add
rcll
repnz
nop
cld
jae
add
add
xor
andl
in
leave
nop
jmp
add
add
in
call
nop
jmp
add
add
test
repnz
nop
cld
jae
add
jmp
in
leave
nop
jmp
add
add
add
mov
xchg
ret
add
out
testb
add
test
clc
repnz
nop
cld
jae
cmp
mov
push
mov
xchg
ret
mov
inc
push
mov
popf
push
push
mov
xchg
ret
add
add
add
add
add
push
push
mov
xchg
ret
jle
jnp
call
cs
mov
clc
repnz
nop
cld
jae
sbb
mov
insl
call
clc
repnz
nop
cld
jae
add
mov
out
xor
clc
repnz
nop
cld
jae
fsubrs
ja
pop
add
mov
mov
xchg
ret
cmp
cmc
jmp
mov
pop
and
repnz
nop
cld
jae
adc
jae
test
clc
repnz
nop
cld
jae
add
add
test
mov
inc
add
add
inc
add
test
loopne
fld1
clc
repnz
nop
cld
jae
call
add
jno
push
mov
xchg
ret
jb
fadds
inc
add
adc
clc
repnz
nop
cld
jae
mov
lahf
mov
ljmp
xchg
push
and
add
lret
out
jne
icebp
clc
repnz
nop
cld
jae
fiaddl
jnp
test
xor
loopne
clc
repnz
nop
cld
jae
add
add
loopne
pop
add
push
mov
xchg
ret
je
jge
test
out
add
add
clc
repnz
nop
cld
jae
cmc
add
jmp
xor
repnz
nop
cld
jae
cmp
add
add
add
cmp
add
repnz
nop
cld
jae
add
aaa
add
repz
repnz
nop
cld
jae
adc
add
repnz
nop
cld
jae
add
add
lret
jne
clc
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
decl
add
mov
xchg
ret
aaa
jb
dec
fiaddl
test
cmp
jne
push
mov
xchg
ret
add
xor
mov
cltd
xor
clc
repnz
nop
cld
jae
lret
xchg
std
add
dec
push
clc
repnz
nop
cld
jae
call
jb
push
clc
repnz
nop
cld
jae
add
fsubrs
add
add
pusha
mov
add
clc
repnz
nop
cld
jae
aaa
add
int3
scas
add
mov
xchg
ret
add
add
std
fadds
xor
repnz
nop
cld
jae
add
jge
out
add
nop
nop
cld
jae
add
std
add
add
mov
dec
cmp
push
mov
leave
nop
jmp
add
popf
xor
push
mov
xchg
ret
add
mov
add
subb
jne
clc
repnz
nop
cld
jae
jmp
add
call
mov
add
nop
jmp
cmp
push
mov
xchg
ret
jnp
add
cmc
mov
sub
sub
ljmp
add
add
add
ja
jnp
inc
lret
add
clc
repnz
nop
cld
jae
add
scas
cmp
dec
mov
repnz
nop
cld
jae
aaa
add
add
rolb
nop
push
mov
leave
nop
jmp
add
jl
lret
outsl
test
nop
push
mov
leave
nop
jmp
pop
add
add
xor
push
mov
xchg
ret
pop
add
add
add
clc
repnz
nop
cld
jae
mov
push
mov
leave
nop
jmp
add
inc
add
cmpl
repnz
nop
cld
jae
cmp
cmp
add
lcall
mov
xchg
ret
inc
add
mov
adc
add
cmp
addb
repnz
nop
cld
jae
add
add
add
add
push
clc
repnz
nop
cld
jae
add
jmp
add
jge
ret
jmp
add
mov
mov
xor
mov
mov
xchg
ret
call
add
rep
clc
repnz
nop
cld
jae
sbb
je
jl
mov
or
and
pop
std
add
add
out
shlb
mov
push
mov
leave
nop
jmp
add
out
scas
pusha
loopne
mov
clc
repnz
nop
cld
jae
add
mov
cmp
popa
sub
test
clc
repnz
nop
cld
jae
add
pop
nop
push
mov
leave
nop
jmp
mov
scas
add
inc
adc
pop
mov
clc
repnz
nop
cld
jae
add
ja
mov
outsb
addl
push
add
add
out
xchg
and
fcompl
leave
shl
clc
repnz
nop
cld
jae
je
std
add
cs
pop
sub
nop
push
mov
leave
nop
jmp
add
add
mov
xor
add
nop
jmp
add
add
nop
nop
cld
jae
add
add
jle
add
or
loopne
jbe
insb
cmp
repnz
nop
cld
jae
add
std
sub
mov
pop
nop
push
mov
leave
nop
jmp
aaa
out
add
add
pop
or
repnz
nop
cld
jae
add
add
nop
push
mov
leave
nop
jmp
cmp
add
mov
leave
nop
jmp
inc
xchg
add
add
xor
push
mov
xchg
ret
scas
xor
mov
repz
push
mov
xchg
ret
inc
add
add
add
pusha
clc
repnz
nop
cld
jae
out
add
add
mov
nop
nop
cld
jae
xor
mov
jnp
cmp
lods
shlb
add
clc
repnz
nop
cld
jae
add
add
sbbb
pushl
in
leave
nop
jmp
add
xor
nop
push
mov
leave
nop
jmp
mov
cmc
shlb
repnz
nop
cld
jae
xor
add
jne
jge
clc
repnz
nop
cld
jae
add
std
cmp
clc
repnz
nop
cld
jae
add
add
add
dec
push
clc
repnz
nop
cld
jae
mov
add
sar
nop
nop
cld
jae
es
add
add
scas
insb
loopne
shr
push
mov
xchg
ret
adc
add
lahf
fimull
inc
inc
push
andl
jae
add
add
pop
mov
nop
cld
jae
sbb
add
dec
and
push
mov
xchg
ret
mov
fwait
clc
repnz
nop
cld
jae
add
aaa
add
xor
shlb
fcompl
push
mov
add
jl
adcl
je
nop
push
mov
leave
nop
jmp
scas
add
icebp
push
nop
push
mov
leave
nop
jmp
add
jmp
std
std
add
testb
and
repnz
nop
cld
jae
add
add
enter
mov
xchg
ret
add
fadds
add
add
nop
nop
cld
jae
pop
sbb
add
aaa
test
jb
outsl
push
push
mov
xchg
ret
lret
inc
add
add
inc
push
arpl
jmp
nop
cld
jae
sbb
add
pop
clc
repnz
nop
cld
jae
xor
add
mov
leave
nop
jmp
add
fsubs
push
out
call
nop
push
mov
leave
nop
jmp
jmp
add
adcl
jae
std
aaa
cmp
and
cmp
push
mov
leave
nop
jmp
sub
add
add
pop
clc
movl
in
leave
nop
jmp
add
sub
add
add
xchg
clc
repnz
nop
cld
jae
add
call
rorb
inc
mov
repnz
nop
cld
jae
jmp
popa
aaa
add
aaa
xchg
push
je
nop
push
mov
leave
nop
jmp
call
mov
nop
push
mov
leave
nop
jmp
add
cmpsb
and
dec
inc
clc
repnz
nop
cld
jae
out
inc
out
adc
mov
xchg
ret
add
sbb
je
push
sbb
repnz
nop
cld
jae
out
add
add
inc
push
push
mov
xchg
ret
add
add
int3
add
jl
add
ja
add
je
jge
fadds
add
sub
push
xor
clc
repnz
nop
cld
jae
add
jge
popl
inc
cmp
mov
xchg
ret
jl
add
incl
push
xchg
mov
push
mov
xchg
ret
cmp
sbb
xor
enter
nop
cld
jae
add
add
sbb
cmp
nop
jmp
add
mov
push
mov
leave
nop
jmp
add
jns
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
mov
add
add
add
insl
jne
clc
repnz
nop
cld
jae
push
cmp
repnz
nop
cld
jae
sub
test
add
mov
clc
repnz
nop
cld
jae
xor
jnp
pop
nop
push
mov
leave
nop
jmp
cmp
add
add
mov
clc
repnz
nop
cld
jae
add
add
ret
clc
repnz
nop
cld
jae
popa
add
fiaddl
fmul
xor
clc
repnz
nop
cld
jae
add
aaa
jnp
popa
add
inc
xchg
push
push
mov
xchg
ret
popa
add
add
call
mov
clc
repnz
nop
cld
jae
push
add
inc
ds
clc
repnz
nop
cld
jae
sub
gs
mov
clc
repnz
nop
cld
jae
std
out
add
pop
fisttps
nop
nop
cld
jae
add
jb
out
aad
lret
push
mov
xchg
ret
mov
std
out
adc
cmp
xlat
idiv
call
nop
jmp
dec
ficoml
cmp
mov
mov
xchg
ret
add
add
std
add
mov
clc
repnz
nop
cld
jae
add
add
in
push
lret
jmp
add
int3
add
pop
add
add
leave
clc
repnz
nop
cld
jae
add
sbb
mov
mov
xchg
ret
sub
pop
inc
add
add
call
inc
add
xor
out
inc
out
jne
clc
repnz
nop
cld
jae
add
inc
mov
or
nop
jmp
jb
xor
add
nop
nop
cld
jae
xor
add
xor
clc
repnz
nop
cld
jae
inc
inc
add
insl
pusha
nop
push
mov
leave
nop
jmp
add
add
mov
add
repnz
nop
cld
jae
add
pop
jmp
cmp
mov
xchg
ret
gs
sub
jl
mov
clc
repnz
nop
cld
jae
add
out
add
inc
pop
mov
nop
inc
add
add
add
add
pop
jnp
mov
clc
repnz
nop
cld
jae
scas
xchg
add
jl
mov
clc
repnz
nop
cld
jae
sub
add
mov
mov
test
repnz
nop
cld
jae
push
jmp
or
add
nop
push
mov
leave
nop
jmp
add
jl
dec
push
nop
push
mov
leave
nop
jmp
std
int3
xor
mov
movswl
clc
repnz
nop
cld
jae
lcall
mov
clc
repnz
nop
cld
jae
sbb
add
sbb
clc
repnz
nop
cld
jae
add
jge
jle
dec
push
clc
repnz
nop
cld
jae
inc
mov
add
cmp
cwtl
inc
ret
clc
repnz
nop
cld
jae
add
jl
add
add
mov
clc
repnz
nop
cld
jae
add
jmp
and
mov
jb,pt
nop
push
mov
leave
nop
jmp
add
sub
push
add
add
mov
addl
xor
repnz
nop
cld
jae
add
add
mov
xchg
ret
pop
add
mov
push
rol
into
leave
test
push
mov
xchg
ret
ja
xchg
in
mov
out
sbb
add
cmp
add
cld
add
pop
test
rcrb
mov
subb
xchg
pusha
clc
repnz
nop
cld
jae
add
xor
xor
mov
and
iret
je
clc
repnz
nop
cld
jae
add
inc
test
mov
clc
repnz
nop
cld
jae
inc
add
cmp
push
mov
xchg
ret
add
add
inc
add
repnz
nop
cld
jae
inc
ds
pop
add
inc
insb
push
lods
mov
clc
repnz
nop
cld
jae
add
aas
nop
push
mov
leave
nop
jmp
std
cmp
mov
add
clc
repnz
nop
cld
jae
add
add
fmuls
clc
repnz
nop
cld
jae
add
popa
add
pusha
add
add
mov
clc
push
mov
xchg
ret
sbb
jmp
add
sbb
and
mov
dec
fwait
clc
repnz
nop
cld
jae
aaa
jmp
add
sub
clc
repnz
nop
cld
jae
pop
jb
lret
sub
call
clc
repnz
nop
cld
jae
add
push
rolb
mov
xchg
ret
add
add
lret
aad
scas
enter
nop
cld
jae
add
add
shl
cltd
push
push
mov
xchg
ret
mov
jl
movl
imul
cmp
jnp
cmp
mov
xchg
ret
add
add
out
jl
pop
push
mov
xchg
ret
add
es
es
out
cmp
and
lods
fistpl
push
mov
xchg
ret
add
add
add
add
clc
repnz
nop
cld
jae
jb
call
lock
mov
clc
repnz
nop
cld
jae
add
inc
add
jb
outsb
mov
add
nop
push
mov
leave
nop
jmp
mov
add
int3
sub
jmp
add
jl
add
pop
pop
cmp
add
jmp
sub
subb
cld
or
in
leave
nop
jmp
add
sbb
mov
cmp
ret
add
add
jl
add
inc
leave
clc
repnz
nop
cld
jae
add
jmp
cmc
add
adcb
mov
xchg
ret
add
add
add
jmp
fwait
mov
nop
push
mov
leave
nop
jmp
addl
sbb
mov
leave
nop
jmp
ja
fsubrs
aaa
add
mov
repnz
nop
cld
jae
jl
add
add
add
ss
repnz
nop
cld
jae
add
jle
pusha
clc
repnz
nop
cld
jae
scas
inc
std
cmp
xor
sub
mov
push
mov
xchg
ret
int3
out
jge
add
lea
clc
repnz
nop
cld
jae
add
add
add
in
leave
nop
jmp
jge
fadds
add
add
subl
push
mov
leave
nop
jmp
add
add
ja
repz
nop
push
mov
leave
nop
jmp
inc
add
in
leave
nop
jmp
add
push
add
add
add
fld1
push
mov
xchg
ret
dec
ds
jmp
add
or
pusha
enter
scas
mov
clc
repnz
nop
cld
jae
add
add
cwtl
inc
pop
clc
repnz
nop
cld
jae
add
lahf
adc
add
clc
repnz
nop
cld
jae
add
mov
lahf
xchg
je
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
jge
add
popa
pop
push
mov
xchg
ret
mov
add
add
dec
and
push
mov
xchg
ret
adc
std
fadds
add
pop
mov
nop
nop
cld
jae
add
mov
push
mov
xchg
ret
add
add
mov
jl
je
push
push
push
mov
xchg
ret
ja
add
push
push
mov
adc
pop
clc
repnz
nop
cld
jae
add
mov
add
inc
inc
sarb
outsl
loopne
mov
xchg
ret
ds
mov
add
jnp
clc
repnz
nop
cld
jae
cmp
add
repnz
nop
cld
jae
add
je
add
int3
add
nop
nop
cld
jae
xor
add
out
and
or
dec
mov
clc
repnz
nop
cld
jae
lahf
add
std
push
xchg
mov
nop
push
mov
leave
nop
jmp
add
rep
push
mov
xchg
ret
add
jge
lahf
add
push
clc
repnz
nop
cld
jae
ja
add
sub
fwait
add
clc
repnz
nop
cld
jae
fisubl
jle
fiaddl
add
clc
repnz
nop
cld
jae
xor
add
clc
repnz
nop
cld
jae
add
mov
xchg
push
clc
repnz
nop
cld
jae
add
add
ja
out
sub
nop
cld
jae
lahf
add
add
inc
add
push
mov
xchg
ret
add
add
adc
pop
add
pop
jne
nop
push
mov
leave
nop
jmp
jnp
out
rol
mov
test
repnz
nop
cld
jae
add
xor
mov
clc
repnz
nop
cld
jae
add
jl
cmp
mov
add
add
cld
jae
je
jmp
rcll
push
cmp
ret
add
inc
pop
jmp
adc
clc
repnz
nop
cld
jae
cmp
movb
mov
inc
add
es
add
jae
push
mov
xchg
ret
cmc
xchg
mov
add
nop
nop
cld
jae
add
add
pop
cmc
add
stos
lea
nop
push
mov
leave
nop
jmp
add
movl
clc
repnz
nop
cld
jae
add
add
add
add
inc
sbb
je
clc
repnz
nop
cld
jae
mov
and
rolb
push
es
jecxz
repnz
nop
cld
jae
add
roll
repnz
nop
cld
jae
inc
inc
ja
sub
rcrl
nop
nop
cld
jae
inc
sub
add
add
dec
movzwl
nop
push
mov
leave
nop
jmp
add
pop
xchg
and
clc
repnz
nop
cld
jae
jge
adc
cmp
add
clc
repnz
nop
cld
jae
lret
add
add
shl
clc
repnz
nop
cld
jae
pop
xor
mov
add
add
xor
lahf
or
faddl
sbb
call
adc
repnz
nop
cld
jae
add
add
and
add
push
clc
repnz
nop
cld
jae
add
out
lahf
jl
pop
lock
push
add
clc
repnz
nop
cld
jae
jnp
add
add
fistpl
clc
repnz
nop
cld
jae
add
add
add
fwait
nop
push
mov
leave
nop
jmp
add
cmp
call
sar
clc
repnz
nop
cld
jae
add
add
rol
div
nop
push
mov
leave
nop
jmp
int3
add
add
add
clc
repnz
nop
cld
jae
xchg
add
cmp
inc
imul
nop
nop
cld
jae
add
std
jge
cmp
nop
nop
cld
jae
je
cmp
lea
clc
repnz
nop
cld
jae
mov
std
jge
sti
clc
repnz
nop
cld
jae
std
add
jl
ja
dec
mov
icebp
mov
clc
repnz
nop
cld
jae
add
int3
mov
rcr
sbb
add
clc
repnz
nop
cld
jae
add
inc
pusha
call
inc
push
nop
push
mov
leave
nop
jmp
add
add
fistpl
nop
push
mov
leave
nop
jmp
add
test
xor
push
clc
repnz
nop
cld
jae
add
add
mov
int3
push
add
je
add
add
xor
repnz
nop
cld
jae
scas
out
cmp
inc
add
nop
nop
cld
jae
add
pop
sub
nop
cld
jae
add
mov
cmp
mov
xor
xor
mov
mov
xchg
ret
pop
add
aaa
mov
cs
insb
clc
repnz
nop
cld
jae
add
add
jae
mov
inc
add
add
rolb
out
xor
add
rol
shlb
les
jle
sbb
add
and
and
ss
xchg
xchg
mov
mov
je
push
jnp
xchg
lret
jl
mov
mov
pusha
inc
xchg
xor
mov
rcr
lods
pop
popa
clc
cltd
mov
mov
and
out
mov
mov
mov
or
lcall
fcmovnb
inc
cmp
inc
and
andb
lret
fldl2t
pop
aaa
lret
fwait
dec
ss
pusha
xchg
sbb
and
sub
pusha
dec
and
mov
outsb
inc
xchg
mov
or
push
jp
xor
test
mov
sbb
push
xor
lret
and
stc
jnp
jne
or
sub
and
aam
xor
xchg
jle
xchg
and
mov
xchg
mov
pop
cld
daa
in
mov
andb
pop
mov
xor
es
shrl
xchg
fdivrp
xchg
mov
cmpsl
movsb
loopne
stos
inc
add
xchg
mov
loope
rcr
ljmp
sub
pusha
and
mov
mov
xchg
mov
loope
lock
ss
mov
hlt
sub
lahf
dec
and
or
andb
mov
loope
mov
pusha
loopne
sub
shl
pushf
rclb
scas
xlat
call
addr16
cmpb
frstor
add
push
jge
pop
mov
scas
xor
jg
addb
lock
sbb
mov
ret
pop
inc
sbb
cmp
shlb
jge
xor
sbb
lahf
sbb
ljmp
dec
sahf
xorl
ds
sbb
inc
mov
and
movsb
pusha
mov
aaa
sub
mov
ret
lds
mov
jecxz
and
decl
popa
loopne
pusha
mov
xchg
fistl
jp
pop
xlat
ss
mov
jae
mov
jg
sub
jl
lret
enter
cwtl
insl
fwait
cmp
xlat
mov
in
and
in
mov
in
das
in
lret
ss
into
push
bound
and
jb
mov
xor
dec
mov
in
lret
xor
pusha
iret
addr16
imul
and
or
inc
jge
cmp
mov
in
adc
shlb
cmp
aas
loopne
jbe
arpl
cmpsl
xchg
out
add
inc
add
rolb
call
stos
loopne
sub
pusha
decl
pop
lcall
push
mov
andb
aad
and
xchg
and
rcll
jl
jno
sbb
xor
mov
sbb
inc
mov
or
mov
je
daa
test
mov
cmp
lret
and
adc
xor
mov
std
sbb
cltd
nop
mov
sbb
xor
leave
mov
shl
push
loopne
aaa
jno
xchg
and
enter
out
add
xor
outsl
fiaddl
loopne
dec
jle
jp
jp
sub
and
sub
cmc
pushw
call
ret
mov
mov
loopne
add
test
cld
pop
icebp
push
fwait
into
mov
ja
cltd
mov
sbb
es
pushf
sahf
mov
cmp
scas
andb
push
addr16
shl
adc
sbb
and
rcrb
ret
mov
add
or
inc
xchg
mov
sbbl
fisttpll
and
rolb
mov
mov
sbb
sub
xchg
cmp
inc
pusha
push
push
xchg
and
andb
sbb
sbb
add
inc
xchg
les
jne
popa
xchg
test
mov
jne
andb
jo
xchg
jns
and
add
in
shl
cmp
push
pusha
subb
add
lea
movsb
and
leave
scas
shl
sbb
and
out
lock
test
loopne
daa
jg
mov
es
and
push
fnsave
loopne
push
flds
sub
in
fadd
sbb
ljmp
add
fs
adc
and
imul
jmp
fistl
jbe
ljmp
addb
int3
and
addr16
into
mov
fbstp
filds
mov
mov
addb
stos
push
mov
add
mov
adc
test
add
scas
in
jns
out
imul
mov
insb
sbb
rep
rep
add
and
dec
repz
adc
lret
jg
test
add
data16
outsl
rorb
stc
lea
mov
sub
push
clc
and
jae
mov
call
imul
mov
fstps
lret
pusha
inc
es
and
jge
cmp
in
sub
pusha
mov
inc
cmp
and
incb
sub
add
rolb
push
dec
pop
pushf
data16
xchg
xchg
inc
inc
shrl
or
pop
mov
bound
jmp
and
loopne
cltd
inc
dec
mov
pusha
loopne
clc
add
fisubl
loopne
mov
out
fs
xor
cmp
div
jl
sub
pop
and
lods
movsl
xor
mov
mov
jl
daa
and
jae
mov
clc
cwtl
mov
mov
bound
addr16
push
jl
addb
and
rcrb
ss
jle
inc
mov
pop
pop
sub
js
push
mov
pop
bound
and
adc
shrb
inc
pusha
pop
push
add
pusha
sbb
or
loopne
int3
clc
and
inc
cli
mov
add
shlb
cmp
pop
inc
sahf
aad
and
pop
push
push
fs
stos
dec
cmpsl
or
int3
fwait
mov
or
add
mov
push
mov
add
lret
mov
pop
mov
inc
cmpsl
push
clc
out
add
push
add
pusha
ret
out
push
fbld
and
jl
mov
loopne
iret
xchg
popf
data16
push
mov
loopne
mov
or
inc
and
dec
pop
or
and
jl
jb
add
enter
ds
std
sbb
jmp
loopne
int3
leave
jge
addb
fistps
loopne
mov
bound
rolb
mov
jg
fisubs
inc
mov
xchg
shlb
and
shlb
adc
mov
cmp
jo
xchg
cmp
inc
dec
jns
andb
lods
inc
and
inc
and
call
loopne
cmp
push
bound
inc
fcmovne
imul
orl
loop
inc
cmp
or
stos
jae
sbb
daa
jmp
inc
cmpb
pusha
mov
or
lock
dec
fsubl
fists
shlb
lods
add
mov
scas
ficoms
and
sbb
out
sbb
mov
sbb
loopne
scas
pusha
and
or
iret
icebp
sahf
jp
add
mov
jecxz
xchg
jno
jmp
daa
rdmsr
lea
and
mov
and
mov
push
lret
push
dec
out
call
das
push
lods
rol
nop
xchg
addl
jp
popf
dec
mov
cltd
dec
push
lahf
push
inc
sub
mov
rolb
mov
sub
and
push
dec
lret
cmp
jbe
test
or
shrb
inc
pushf
data16
std
pop
lret
and
dec
or
inc
aad
loopne
popf
mov
jp
jnp
cmpsb
rolb
xchg
xor
mov
mov
loopne
sti
lret
xchg
popf
mov
fdivl
add
je
in
and
or
aaa
mov
xor
rorl
mov
push
pusha
mov
sbb
nop
sbb
dec
jg
imul
aad
jg
je
inc
loopne
mov
imul
fidivrs
mov
outsl
xchg
xchg
mov
push
inc
add
ja
mov
outsb
or
push
fs
mov
insl
jmp
mov
mov
mov
ja
jbe
mov
testb
mov
push
enter
scas
jge
adc
dec
jne
add
fadd
adc
imul
cmp
add
inc
rcrb
jns
adc
push
and
inc
mov
psubsb
loopne
push
pusha
cld
mov
push
add
push
andb
cmpsb
add
das
add
rcrb
or
cmpb
adc
hlt
pop
repz
aad
test
push
adc
and
rolb
and
xchg
or
mov
outsl
add
and
and
sbb
push
insb
scas
xchg
sbb
fbstp
jno
stos
rol
sarb
lds
push
cs
sub
daa
xchg
stos
stos
shl
xlat
mov
subb
rolb
andb
xor
nop
movsl
imul
add
push
scas
shlb
adc
aaa
xor
js
hlt
sti
dec
movsb
pusha
pusha
arpl
hlt
add
push
in
sbb
and
data16
addr16
or
mov
loopne
mov
and
mov
loopne
add
test
pusha
sub
loopne
imul
lcall
sub
pop
add
inc
mov
mov
mov
mov
inc
sbb
jmp
data16
les
mov
add
addb
das
cmpl
outsb
into
xchg
pop
jp
sub
sub
into
fcoml
xlat
xlat
xchg
mov
xchg
jne
mov
or
inc
and
call
jle
adc
out
or
lods
and
pusha
mov
mov
mov
mov
out
aam
andb
sbb
fsubrl
pusha
rol
inc
and
addr16
dec
inc
out
shlb
lock
sub
mov
mov
stos
and
cmpb
and
add
shlb
xchg
inc
aam
mov
and
addb
inc
sbb
hlt
mov
xor
mov
pop
mov
pusha
xor
sub
addb
mov
gs
xchg
loop
push
ret
pop
lock
ss
mov
mov
js
or
pop
jbe
ret
popf
xchg
mov
and
or
shlb
insb
jp
ret
rcl
xchg
scas
add
and
pusha
pop
icebp
lahf
jb
pop
inc
icebp
xorl
jns
pop
fnstenv
rcrb
loop
stos
loopne
outsl
jno
pop
test
and
xor
loopne
and
sub
loopne
sub
aam
addb
adc
push
jl
ja
jmp
mov
ret
pop
sub
sbb
notb
data16
mov
and
xchg
rcr
and
pop
out
pop
and
xchg
mov
pop
andb
ret
push
xchg
sti
mov
sbb
fstl
push
inc
mov
add
jns
sarb
fistpl
xor
aam
stos
lret
andb
jae
test
loopne
aaa
sub
mov
push
jae
xor
push
adc
andb
and
popf
adc
dec
scas
mov
loopne
push
inc
dec
out
mov
addr16
inc
pop
ror
ret
cmpsl
les
dec
jle
sti
imul
rolb
popa
ret
and
sbb
adc
lret
ret
pusha
stos
add
rolb
add
xor
lods
and
mov
addr16
loopne
loop
stos
jne
loop
mov
and
pusha
push
mov
rolb
mov
lods
and
jbe
add
hlt
in
xchg
movsb
rolb
mov
or
add
mov
pusha
push
and
dec
mov
addb
pusha
fcomps
sti
jb
dec
inc
fsubs
sbb
pusha
xor
dec
scas
xchg
inc
mov
pop
repz
sub
data16
aas
into
inc
or
fsubs
pusha
popa
aad
push
sub
ja
mov
add
xor
inc
fwait
loop
cmc
mov
pop
in
insl
fimuls
mov
xor
and
test
mov
ficoml
add
dec
fildl
loopne
and
popa
xor
jno
mov
add
xchg
enter
loopne
js
fildll
aam
lea
add
ret
jne
ror
clc
int3
cli
mov
inc
bound
dec
dec
mov
orl
add
jo
mov
int3
lds
inc
enter
xchg
and
loopne
cld
mov
inc
hlt
jo
fldl
loopne
addr16
movsl
xor
add
adc
popf
inc
cmp
mov
in
shrl
jmp
cmpsb
add
outsb
push
jae
sbb
add
add
faddl
mov
mov
imul
mov
jo
push
mov
inc
pushf
fadds
loopne
jno
add
push
add
dec
adc
jle
pop
mov
mov
call
imul
fs
pop
and
pushf
inc
jnp
popf
jge
push
jl
mov
sbb
loopne
outsl
sbb
cmc
sub
pusha
pushf
lret
xchg
jge
lret
test
add
inc
or
mov
ret
mov
inc
push
mov
enter
fisttpll
mov
mov
fldt
shlb
fistpll
dec
insb
call
loopne
jno
mov
in
test
inc
mov
inc
adc
fwait
dec
pop
ja
mov
mov
cmp
pop
sub
sub
push
andb
mov
mov
mov
fwait
mov
mov
in
iret
popa
insb
push
ds
ja
push
dec
or
shlb
andb
mov
and
sub
loopne
arpl
cld
sbb
dec
shrb
sahf
daa
mov
mov
mov
rorb
and
insb
jge
arpl
fdiv
cmp
xchg
in
rcrl
adc
or
and
in
push
pop
adc
mov
loopne
addr16
mov
dec
sub
imul
out
add
sub
subb
popf
sahf
outsb
test
pop
cltd
loop
dec
xor
mov
cmp
repz
rorb
rolb
out
mov
inc
ljmp
pop
push
jle
xchg
mov
rolb
outsl
inc
movsl
mov
xchg
mov
enter
loopne
pop
les
stos
or
mov
add
jle
xchg
je
lea
arpl
out
dec
fisttps
fcomps
das
and
rclb
fs
xor
notl
stos
shlb
outsb
outsb
pop
inc
sub
scas
xor
pop
bound
shlb
lcall
push
mov
push
loopne
mov
rol
aas
or
sbb
pushf
xor
shrb
repnz
out
xlat
mov
add
inc
sbb
inc
pusha
or
and
jno
std
fcmovb
pushf
push
and
ret
push
jle
and
movsb
andb
lret
and
xlat
movsl
pop
mov
in
sub
add
and
sub
or
jecxz
imul
insl
mov
mov
fisubl
pusha
gs
add
data16
xor
mov
and
mov
aas
scas
loopne
lcall
lret
cmp
sahf
sbb
stos
mov
fmuls
pusha
and
fs
insl
mov
xchg
clc
addl
lcall
push
nop
push
add
pusha
sbb
pop
loope
mov
and
pusha
push
cmc
frstor
adc
mov
sub
inc
adc
push
xor
rcrl
inc
pusha
pop
mov
adc
mov
push
mov
push
rclb
or
mov
mov
pusha
cmp
hlt
pop
add
cmpsb
andb
xchg
in
xor
jg
rcrb
adc
cmp
mov
adc
mov
mov
add
xchg
adc
xor
mov
inc
loopne
or
mov
cmpsb
inc
add
hlt
inc
mov
stc
add
adc
add
shr
enter
ret
mov
adcb
loopne
inc
add
cli
cmp
in
clc
shll
mov
data16
add
popf
in
dec
mov
aaa
push
push
and
bound
mov
std
jmp
pusha
inc
mov
std
call
push
sarl
fwait
iret
fsubrl
mov
jns
push
loopne
push
insl
arpl
fcmovnbe
das
inc
std
dec
fs
push
jge
loop
fldt
add
imul
shlb
inc
cld
imul
dec
inc
mov
inc
xor
bswap
sbb
inc
xor
and
pop
sbb
dec
dec
xor
ror
xor
dec
mov
pop
iret
add
pusha
add
pop
adc
in
loopne
xchg
shrb
mov
loopne
and
cmpb
push
js
push
roll
mov
inc
and
or
jge
fcmovnbe
adc
add
cwtl
roll
sub
hlt
pop
movsl
inc
fadd
push
pop
xchg
pusha
pusha
mov
inc
aad
daa
jo
mov
shl
mov
test
fstpl
or
mov
push
das
pop
or
push
adc
loopne
and
andb
test
inc
addb
add
divb
fisubs
pusha
xchg
push
addb
push
inc
inc
pop
cwtl
mov
push
jmp
pusha
add
push
aam
inc
popf
loope
and
mov
cltd
daa
mov
loop
fcmovnb
addr16
pusha
aad
add
jp
pop
mov
loopne
popa
jp
cltd
aas
cmp
cmpsl
mov
addr16
mov
inc
loopne
and
pop
mov
add
shll
add
add
add
push
call
add
xor
mov
iret
in
dec
lock
jae
jmp
pop
pop
je
shlb
pushf
xchg
or
fdivl
js
push
inc
flds
loopne
popa
inc
andb
icebp
mov
mov
or
in
add
loope
shlb
loopne
push
cld
jg
int3
or
xor
jl
jnp
adc
daa
dec
pop
movsl
lcall
into
sbb
xchg
pusha
cmp
xchg
pop
push
sub
inc
inc
lds
jg
xchg
inc
mov
and
loope
loop
ljmp
inc
daa
icebp
inc
cmp
test
adc
jb
dec
popa
sti
or
shlb
inc
aad
jbe
mov
je
loopne
add
outsb
fisubs
jecxz
inc
ror
outsb
add
mov
and
inc
mov
sub
sbb
sti
add
ss
push
pop
mov
mov
pop
jbe
jle
imul
loopne
fcmovnb
or
jge
xchg
fdivs
adc
jge
inc
cs
lret
mov
ljmp
add
ja
cmpsb
inc
mov
mov
call
pop
mov
lahf
jecxz
clc
fs
add
add
pop
repnz
and
adc
mov
xchg
loopne
inc
push
mov
lds
mov
dec
std
xchg
scas
inc
and
push
ret
pusha
fs
lahf
pop
jae
sarl
nop
jo
insb
loope
mov
in
call
xchg
xchg
or
loopne,pn
and
outsl
mov
scas
push
shll
adc
xchg
test
rorb
test
pop
jns
aam
lods
loopne
out
cwtl
sub
adc
popa
fcmovnb
cltd
mov
lea
rol
push
sahf
repz
outsb
push
push
test
loopne
xchg
insb
cmpsl
out
pop
fcmovu
ret
and
jl
mov
inc
in
int3
ss
mov
jb
jns
sbb
inc
mov
shlb
adc
push
imul
mov
sub
inc
add
mov
xor
jmp
push
mov
aad
dec
cmp
pop
mov
inc
pop
jmp
fisubl
shll
mulb
lret
loop
cmp
andb
das
lcall
adc
and
and
inc
mov
das
jge
inc
dec
dec
and
lea
lahf
lods
push
push
xchg
push
rclb
mov
je
pop
add
and
mov
insb
mov
mov
nop
mov
scas
pusha
add
out
and
inc
rcrb
xor
ljmp
xchg
cli
loope
test
add
xchg
mov
ja
inc
andb
add
sub
and
pop
sbb
sub
loopne
push
jge
inc
xchg
push
lds
mov
loopne
shrb
xor
mov
int
pop
sbb
and
sbb
loopne
insl
ret
and
inc
in
push
fs
imul
dec
loope
rorl
rol
rcrb
push
and
add
jmp
push
mov
loopne
gs
dec
xor
sub
pusha
call
mov
movsb
add
adc
mov
insb
sub
cld
scas
js
rcrb
ret
push
xchg
in
xchg
dec
xor
roll
xchg
or
inc
xchg
jle
mov
mov
in
lods
mov
scas
fbld
inc
loop
mov
mov
and
aam
jg
sub
and
andb
call
scas
and
aam
lret
outsb
sub
mov
shrb
xchg
adc
scas
and
or
and
addb
pusha
mov
sbb
shll
loopne
inc
add
add
addr16
shlb
mov
insl
sub
out
inc
jno
cwtl
icebp
pop
call
mov
mov
loopne
addb
jp
add
push
mov
fstps
and
pusha
mov
adc
test
loopne
adc
in
clc
or
cmpl
pop
int
mov
pusha
incl
sbb
andb
and
pop
xchg
adc
insb
out
mov
mov
es
inc
test
add
jns
sub
rcrb
adc
pusha
andb
mov
add
fwait
cmp
les
pop
call
inc
out
aas
pusha
inc
paddq
invd
and
cmp
andb
push
jge
push
inc
rcl
push
xor
rorl
or
push
push
lods
call
xchg
lret
pop
cmp
lret
push
or
and
call
sbb
jmp
dec
adc
jbe
sbb
mov
ds
int3
inc
adc
lods
addb
int3
add
loopne
outsb
push
xchg
jmp
pusha
pusha
icebp
mov
dec
es
sbb
sbb
daa
fcmovbe
sahf
and
lret
mov
std
mov
jbe
xor
mov
jmp
pusha
out
jmp
sub
mov
sub
add
pop
aam
pusha
and
mov
and
inc
jp
addb
sub
xor
sub
jo
hlt
mov
lret
or
fs
inc
mov
data16
orb
loopne
add
mov
mov
push
or
cmp
cmp
pop
inc
xor
mov
sub
xchg
ret
loopne
mov
and
push
and
and
add
inc
add
mov
cltd
aas
jmp
or
or
mov
fs
cltd
jmp
out
jnp
mov
shl
lea
inc
sbbb
and
pop
pop
out
mov
push
jae
fistps
loope
xor
dec
sbb
loop
jg
cmp
fsubs
inc
das
movsb
add
out
ficoml
xchg
jns
addb
movsb
and
pop
popf
jb
mov
pusha
push
xlat
jge
jae
pusha
shrb
int
dec
scas
stos
inc
mov
xchg
das
xor
lret
mov
lahf
ret
xor
pusha
rcr
inc
or
and
repz
shl
sbb
cmc
xchg
es
mov
mov
mov
pop
xchg
mov
and
std
test
pusha
and
xor
or
pusha
inc
mov
sahf
popf
out
push
and
mov
xchg
adc
mov
cld
mov
jl
stos
pusha
mov
mov
lahf
fs
test
imul
cmp
loopne
add
out
test
sarb
ret
sub
add
out
inc
loopne
mov
ret
popa
mov
aas
push
push
sub
dec
nop
jp
fwait
aas
dec
std
jbe
mov
inc
int3
stos
and
addb
pop
xchg
cmp
xor
mov
add
adc
inc
inc
cmp
cmp
jo
add
ljmp
sub
adcb
loopne
test
addb
mov
inc
mov
inc
lods
pusha
and
xor
shr
lret
stc
loop
sub
adc
pop
jmp
movsl
addr16
xchg
aaa
cltd
inc
addb
xor
mov
popa
out
pushf
in
and
lea
push
cmc
lahf
sub
loopne
sbb
filds
bound
add
cli
std
cmpsl
inc
lods
inc
pusha
sbb
dec
xchg
lea
add
sbb
test
inc
cwtl
int3
sarl
adc
movsl
push
ret
subl
inc
cmp
add
sarl
in
bound
loopne
and
pusha
add
inc
fnstsw
mov
pushf
lds
rcll
sbb
jo
inc
orb
cmp
pusha
pusha
in
rcr
rclb
out
pop
ret
push
xchg
fiadds
mov
rorb
add
xor
dec
pushf
sar
mov
mov
xor
mov
rolb
loopne
fsubrp
or
dec
sbb
push
stc
xor
pop
shll
stc
add
and
shrl
jecxz
jbe
pushl
pushf
jecxz
add
mov
rolb
push
aam
ret
idivb
fwait
cli
pop
dec
out
sub
xchg
push
and
loopne
testl
dec
mov
sahf
xor
loopne
std
and
out
mov
xor
mov
out
aas
bound
adc
fwait
pop
or
jl
loopne
dec
push
sbb
pushf
dec
test
orb
mov
and
rolb
inc
std
pushl
add
add
mov
pusha
pusha
pop
imul
loop
lcall
jg
mov
mov
addb
xor
popa
enter
and
inc
rorb
dec
and
ror
mov
cmp
mov
popf
sti
jns
decl
mov
hlt
test
pusha
inc
nop
jecxz
add
xchg
pop
fcmovne
lahf
ret
call
andb
pop
outsl
ret
lret
addb
mov
push
mov
mov
loop
call
cmp
dec
sub
add
pop
jge
add
jnp
repz
movsl
pop
dec
xor
pusha
push
fucomp
test
mov
or
pusha
sarb
dec
jg
or
sbb
push
pop
mov
rcrb
repz
aaa
stos
shlb
inc
sbb
loopne
ljmp
test
mov
pusha
loopne
and
sahf
cmp
hlt
iret
bnd
imul
mov
pop
mov
out
movsb
shlb
push
or
add
aam
lret
in
inc
mov
ss
arpl
lahf
cli
rorb
dec
hlt
dec
in
andb
std
jmp
pop
loopne
add
stos
jnp
stc
jb
inc
adc
inc
pop
pushf
mov
out
lret
xchg
xchg
pop
adc
mov
movsb
shl
das
and
sub
add
adc
add
jno
push
bound
pusha
inc
sbb
lahf
inc
cwtl
stos
shlb
adc
xor
iret
cmc
jmp
imul
inc
fwait
out
rcrb
loopne
jbe
push
push
fnsave
clc
loop
pop
pop
jg
and
or
or
dec
faddl
insb
roll
pusha
mov
int
loopne
stos
add
arpl
cmp
ficompl
popf
add
xor
dec
mov
mov
sbb
les
pusha
pusha
scas
mov
shlb
pop
xor
or
imul
dec
add
and
mov
push
popf
loope
mov
and
data16
insb
pop
dec
push
mov
shlb
sub
push
andb
or
loopne
cwtl
aam
fstps
ret
pop
jg
xchg
add
push
les
movsb
rolb
stc
xlat
or
mov
int3
xor
incb
pop
loope
sub
loopne
add
rolb
adcb
mov
out
gs
shlb
cli
add
in
mov
pop
push
arpl
shll
add
pusha
sar
push
pusha
inc
and
imul
jle
loopne
packuswb
jne
and
and
shll
jge
andb
insl
das
stos
add
aad
mov
mov
dec
addr16
stos
and
ljmp
shlb
mov
sub
loopne
cli
lock
in
mov
sub
pusha
shl
pop
and
clc
aaa
les
rolb
ljmp
lret
jmp
lret
test
loopne
imul
ja
insl
icebp
test
gs
aad
xor
xchg
mov
std
pop
ficomps
jb
and
andb
and
push
mov
loopne
daa
cmp
jge
adc
jecxz
repz
mov
and
jg
roll
cld
mov
decl
lahf
andb
ds
notl
das
test
push
loopne
ret
sti
add
and
inc
or
jge
and
push
xchg
pop
dec
aam
cli
inc
cli
repnz
and
loopne
in
dec
lock
and
mov
push
push
add
shlb
cli
pop
jmp
fildll
into
push
sbb
call
insl
lret
cmp
and
sub
add
inc
mov
inc
fstpl
add
cmp
lods
loopne
pushf
fnsave
fnstcw
add
inc
pusha
xchg
cld
popa
addb
mov
inc
inc
out
or
int3
jle
int3
inc
xor
xchg
adc
push
jge
stos
or
mov
jns
sbb
jge
es
and
loopne
enter
imul
mov
adc
shlb
test
repnz
sub
push
idivl
cmp
xor
push
lea
sahf
mov
xchg
add
mov
in
and
mov
cmpb
pop
rorb
inc
xchg
add
mov
sbb
inc
das
jmp
shlb
das
clc
jne
add
shll
loop
and
adc
sbb
std
rorb
mov
sbb
xchg
cwtl
loop
xabort
mov
push
enter
fcmovne
ja
loopne
test
xchg
imul
push
xchg
jmp
insb
int
mov
lahf
inc
mov
fcoml
shlb
sub
and
cwtl
test
sub
mov
pop
mov
or
push
lods
rorb
xor
inc
clc
lods
mov
adc
jb
pop
pop
xchg
jg
shlb
jge
sbb
pusha
mov
push
enter
hlt
cmp
ret
shl
adc
push
test
mov
pop
mov
push
add
loopne
and
rolb
mov
lods
jns
jns
cmp
adc
push
test
inc
mov
inc
and
ret
loopne
pusha
mov
repnz
lea
loopne
or
aaa
es
mov
and
adc
pop
mov
adc
mov
andb
xor
aad
mov
lods
inc
in
stos
xchg
out
dec
imul
pusha
rol
inc
sbb
push
xchg
pusha
xchg
and
inc
jg
std
inc
and
inc
iret
pop
xor
lret
lods
jg
cmp
sahf
out
rcrb
dec
int3
call
bnd
inc
je
mov
loopne
xor
and
and
or
dec
pop
or
add
inc
push
push
loopne
adc
inc
xchg
aad
mov
inc
stos
pop
mov
add
std
repnz
sub
sbbb
pusha
mov
pop
xor
sbb
and
and
push
stos
mov
push
add
sbb
loopne
mov
mov
aas
cltd
pop
repz
jge
jle
gs
arpl
xor
dec
std
rorl
mov
inc
mov
gs
lret
cmp
push
arpl
or
outsl
cmc
stos
and
shl
sbb
loopne
std
pop
rolb
stc
xor
mov
js
test
jnp
push
dec
jg
js
push
mov
jecxz
and
ret
and
shlb
sub
pop
outsl
mov
cwtl
mov
cmp
or
inc
mov
or
clc
mov
fadds
out
or
inc
push
mov
ja
xor
sbb
pop
into
inc
stc
andl
xchg
scas
mov
and
add
subb
ds
shll
rcr
test
in
idivb
xor
add
movsb
loopne
pop
nop
xchg
inc
mov
inc
rcrb
inc
mov
mov
mov
mov
inc
test
inc
js
cld
xchg
jp
mov
shlb
add
dec
mov
sbb
loopne
mov
jns
pushl
shlb
dec
lahf
cmp
rcl
pusha
pusha
xchg
movsb
addb
mov
and
or
bound
add
jmp
pusha
rorb
mov
scas
mov
mov
fdecstp
andb
mov
rclb
mov
fdivs
cld
loope
loope
mov
mov
aas
das
out
pusha
mov
mov
sub
loopne
imul
sub
loopne
insl
roll
mov
cli
xor
sti
mov
lods
adc
mov
or
push
stos
test
mov
cmp
sub
jp
rolb
pop
push
outsl
mov
jl
loopne
shll
jg
mov
mov
shl
mov
and
add
inc
pusha
xchg
in
mov
mov
pop
or
sbb
add
dec
cmove
pop
pop
aad
jne
or
jge
cld
lea
adc
xor
fsubl
xchg
cmc
adc
and
int3
scas
cmc
mov
cltd
mov
das
xchg
es
inc
cmpsb
and
das
sub
sbb
imul
adc
outsb
push
pop
sahf
mov
xlat
aad
mov
jmp
shrb
cmp
in
dec
push
shl
pushf
cmp
sub
shlb
push
mov
xchg
lods
mov
stc
in
pop
cmpps
and
into
jae
xchg
test
pusha
mov
and
inc
push
mov
and
int
fisttpl
mov
dec
inc
sub
push
add
sub
or
push
push
popa
nop
gs
push
xor
inc
mov
dec
mov
fmul
ficompl
jnp
pusha
dec
sbb
loopne
ds
addr16
xor
andb
pusha
mov
and
popa
jmp
inc
cltd
lahf
mov
andl
enter
loopne
push
ljmp
sub
je
rcl
std
add
lods
pusha
mov
fistl
adc
add
aas
mov
add
cmp
imul
stos
daa
dec
pop
ret
adc
mov
inc
repnz
mov
aad
fs
adcl
xchg
pop
inc
or
stc
jnp
pusha
shlb
dec
das
jp
or
jbe
shl
out
rcr
cmpsl
addb
dec
jge
loopne
mov
addb
movsl
jle
nop
and
pusha
scas
pusha
pusha
lcall
ficoms
mov
icebp
add
jecxz
stos
adc
add
test
sarb
stos
rcl
neg
xlat
or
mov
sti
aam
xchg
mov
orb
xchg
fucomip
mov
xchg
arpl
enter
push
fisubrl
push
shl
xlat
mov
loopne
mov
bound
das
mov
mov
push
jns
xchg
cmpsl
jge
xchg
push
mov
mov
push
data16
icebp
jb
sub
addr16
cmpsl
les
and
sbb
and
and
repz
inc
jmp
mov
xor
daa
xor
clc
test
add
sub
loopne
loopne
push
dec
sahf
in
and
add
dec
ja
and
mov
cli
mov
clc
add
xor
dec
decb
inc
outsl
push
adc
das
mov
mov
mov
inc
mov
mov
mov
xor
dec
addb
and
ret
cmp
daa
add
js
scas
inc
loopne
fwait
in
addl
loopne
or
lods
rol
ljmp
ret
cmp
inc
rcl
rcll
add
pusha
xor
dec
sbb
scas
loopne
mov
dec
inc
mov
pop
inc
dec
jmp
xchg
in
orl
add
stos
rolb
cli
movsl
lock
push
inc
test
cmp
das
add
inc
sbb
adc
dec
lahf
pop
mov
sbbb
addr16
or
loopne
cmp
pop
push
adc
dec
sub
loopne
and
push
add
mov
inc
cltd
sbb
cmc
loop
jp
fs
push
movsl
bswap
decb
notl
cmp
add
jns
test
pusha
incl
adc
mov
jnp
xor
addb
cwtl
into
jo
dec
hlt
jp
lcall
mov
loopne
movsb
pusha
pusha
mov
icebp
and
add
xchg
adc
and
sbb
loopne
lcall
rcl
push
and
jg
jge
sbb
inc
push
cmp
inc
pusha
push
loopne
inc
add
dec
jo
xor
push
jl
and
dec
mov
andb
mull
jmp
ja
add
lahf
push
sbb
mov
add
leave
movsl
push
outsb
popa
mov
mov
ds
mov
mov
mov
pusha
add
jg
pop
adc
cmp
clc
pop
int3
xchg
mov
adc
loopne
loope
and
adc
pusha
call
cs
loopne
mov
mov
and
dec
decb
xchg
dec
mov
mov
pop
data16
xor
int
scas
shlb
xchg
fs
xchg
pusha
sub
cmpsb
add
ffree
int3
sbb
iret
fnstenv
mov
adc
add
aad
dec
pop
mov
stos
lahf
and
cwtl
in
pop
inc
std
xchg
fistpll
mov
inc
and
pusha
cmp
out
xchg
fdivs
pop
xchg
ljmp
mov
mov
scas
inc
xor
shlb
loopne
push
sbb
dec
icebp
inc
add
addb
sub
shrb
idivl
sbb
dec
test
loopne
lock
and
test
push
cwtl
pop
popf
xchg
add
pusha
mov
push
sub
sbb
pop
iret
insl
es
inc
or
mov
into
into
mov
test
cmp
shll
pusha
pushf
mov
add
add
push
pop
adc
or
mov
cmpb
shlb
test
mov
in
xchg
es
orb
sbb
or
push
sbb
jo
jecxz
stos
shlb
rol
cwtl
mov
cmp
and
andb
testl
jbe
rorb
gs
jbe
mov
leave
pop
push
dec
popf
je
sbb
xlat
pop
out
xor
jnp
ret
lahf
sbb
sahf
pop
xor
or
inc
movsb
mov
sub
inc
out
pop
sbb
mov
addb
bound
add
jns
sub
mov
sahf
andl
push
test
mov
inc
inc
ret
mov
addb
push
and
movl
jnp
in
mov
das
pusha
insb
mov
jbe
fcmovnb
shr
pop
mov
mov
xlat
mov
mov
inc
dec
mov
jne
add
sub
pop
jo
and
incl
inc
adc
jge
xchg
mov
push
repz
xor
and
ret
lea
push
pusha
andb
pusha
andb
pusha
rorb
and
inc
ror
mov
cmp
jmp
arpl
mov
sub
mov
lahf
cmpsb
add
shrb
mov
mov
fsubrl
loop
in
sbb
pop
fmul
hlt
test
and
cltd
mov
cmpsb
and
add
jnp
cmp
mov
pop
aam
notl
inc
test
and
aam
mov
inc
xor
ljmp
out
ret
inc
std
dec
jnp
xlat
adcl
stos
mov
shlb
jno
add
pusha
and
inc
mov
jl
jb
fwait
inc
fsubrl
add
pusha
pusha
sbb
mov
mov
andb
fwait
cwtl
xchg
mov
mov
lahf
sub
addb
mov
mov
hlt
dec
roll
inc
pusha
je
fisttpll
ret
add
mov
loopne
inc
addb
sub
sarb
and
sti
mov
inc
pusha
fnstsw
mov
pusha
rcrb
add
or
inc
scas
addb
addb
lea
loopne
xchg
cmp
inc
es
add
mov
lds
fnstenv
rcl
lret
in
enter
mov
loopne
pop
popa
andb
ret
out
lods
loopne
mov
add
loopne
adc
test
inc
sub
loope
data16
xchg
loopne
jb
xchg
int3
int
outsb
mov
icebp
ss
rclb
cmp
test
inc
roll
adcb
push
pop
faddl
ds
pusha
and
add
arpl
inc
mov
andb
cmp
mov
loopne
fstpl
enter
push
push
loopne
adc
push
loopne
and
and
loop
loopne
push
cltd
and
push
dec
dec
pop
jne
sti
repz
jg
out
cld
aad
jmp
cmpsb
and
add
stos
mov
mov
adc
xorb
loopne
test
and
xchg
mov
mov
pop
cmp
sarb
clc
pushf
daa
mov
repnz
pusha
jp
gs
xor
xor
rol
and
mov
arpl
loopne
shl
rcrl
lahf
mov
ds
xchg
push
shlb
ljmp
mov
pop
iret
in
jns
stc
jmp
xchg
and
daa
push
stc
fs
mov
mov
inc
mov
add
mov
inc
pop
pop
mov
loopne
sub
mov
mov
pusha
mov
add
push
or
cmpsb
loopne
das
shrl
cltd
jb
and
add
movsb
rol
xor
and
and
loopne
xchg
add
add
rorb
popa
add
mov
xor
scas
addr16
decb
mov
gs
and
push
inc
loopne
mull
adc
int
loopne
loopne
aam
push
js
ja
mov
and
mov
jnp
and
xchg
nop
mov
ret
xlat
imul
push
insl
imul
mov
movsb
add
sbb
ja
mov
xor
xor
add
mov
bound
pop
imul
push
pop
cli
data16
and
addb
or
xchg
add
adc
shr
aad
movl
addb
ss
fwait
int
mov
movsl
int3
fwait
adc
or
aad
inc
add
or
push
xchg
pusha
mov
jo
dec
push
cmpsl
push
test
jne
ret
xor
insb
push
out
repz
loopne
cmpsl
mov
fucomp
mov
aad
sub
fld
insb
push
arpl
add
loopne
fsubl
inc
mov
psrld
adc
dec
hlt
cmc
movsl
ljmp
mov
mov
dec
test
xchg
aam
jo
cmp
mov
push
dec
sarl
shlb
andb
and
inc
fisubrs
jns
mov
add
in
push
mov
inc
dec
mov
adc
cmpsl
fidivrl
and
jmp
push
inc
hlt
loopne
and
add
mov
jge
rorb
and
fwait
inc
pop
jmp
ljmp
rcl
dec
sbb
cmp
loopne
aas
jg
loopne
mov
rcrl
stos
mov
lods
inc
inc
cwtl
imul
stos
add
popa
sub
mov
add
cld
fisttpl
inc
cwtl
roll
push
lea
loopne
lods
mov
in
adc
loopne
stos
outsb
lock
icebp
or
rcr
popa
leave
stos
in
push
mov
loopne
add
adc
mov
and
icebp
cwtl
cmc
dec
mov
loopne
cwtl
sub
data16
mov
mov
loopne
icebp
dec
dec
inc
pop
cmp
rolb
andb
lret
andb
push
testl
or
test
dec
insb
vfrczps
les
jmp
mov
in
gs
out
pop
push
bound
pop
inc
dec
jns
xlat
pop
testb
xor
orl
xchg
and
pusha
addb
aaa
xchg
jp
jns
xor
mov
xor
das
inc
add
loopne
or
add
loopne
mov
ret
out
sub
mov
int3
out
loop
in
and
pusha
jp
fstpl
addr16
push
jno
js
in
aad
add
daa
data16
mov
cmp
gs
cmpsl
adc
xchg
lods
mov
and
ja
daa
xchg
jg
mov
aad
je
or
or
mov
jbe
loopne
dec
fwait
jmp
mov
loopne
pop
jle
mov
gs
jo
scas
pusha
pusha
cmpl
mov
add
jbe
sarb
add
loopne
clc
inc
fmull
push
iret
pop
ficompl
dec
mov
fmuls
mov
sub
sub
loopne
jns
sahf
mov
or
rol
push
xchg
inc
cltd
xchg
or
mov
adc
push
and
dec
filds
clc
lock
rolb
cmpsl
xchg
jmp
popa
nop
scas
shlb
rorb
loopne
add
subb
loopne
or
jmp
add
mov
sbb
cmc
scas
pusha
add
cli
nop
mov
mov
jnp
fisubl
inc
and
shlb
int3
dec
mov
iret
fisttpl
or
mov
lds
jle
pusha
pusha
ss
pushf
inc
xor
push
or
daa
xchg
enter
pusha
pusha
movsb
and
xor
xor
jo
jge
mov
push
or
pusha
inc
push
fcoms
push
test
les
and
xchg
cmp
add
cmp
sub
mov
out
jl
mov
bound
movsb
and
fildll
add
aas
ljmp
inc
sti
jg
mov
arpl
cwtl
mov
out
or
subb
pusha
mov
test
add
xchg
pop
pop
or
mov
mov
push
mov
mov
pop
pop
movsl
mov
adc
inc
xor
mov
loopne
mov
dec
xor
adc
test
add
add
rorb
push
lea
push
fidivl
pop
adc
fsubrs
and
xchg
ljmp
pop
ljmp
add
push
enter
out
subl
imul
movsl
cli
hlt
notb
outsl
cmc
incb
jbe
cmp
aam
cmpsl
adc
test
and
or
xorb
mov
addb
inc
stc
gs
jp
js
shlb
inc
lahf
rol
inc
inc
pop
mov
sbb
pop
sbb
sub
add
dec
dec
dec
test
movsl
mulb
loopne
mov
and
orb
leave
iret
mov
addr16
inc
xchg
les
pusha
sub
mov
dec
addb
inc
and
jmp
and
dec
inc
fstl
add
inc
enter
push
aam
push
sub
les
push
out
shlb
pusha
jmp
push
cmc
sti
ret
inc
out
outsl
mov
inc
pop
jge
test
pusha
mov
inc
outsl
pop
sbb
pop
jae
xchg
cwtl
rcrb
cmpsb
pusha
add
ja
and
mov
mov
andb
shlb
rolb
mov
pusha
sarl
hlt
pushl
loopne
jne
jb
mov
and
lahf
jecxz
inc
cmpsl
loope
vpshrdvd
in
push
pusha
shrb
jecxz
and
adc
mov
movsb
and
inc
movsb
pusha
mov
sbb
test
test
fcompl
ret
mov
sub
loopne
pusha
and
mov
icebp
mov
loope
push
or
rcrb
andl
sarb
jmp
jl
ret
add
dec
stos
push
in
fs
loopne
fadds
pop
decb
and
ret
adc
mov
jnp
dec
push
mov
pop
add
mov
pop
push
mov
pop
and
mov
std
push
addr16
xchg
push
jg
xor
adc
shlb
sub
inc
pop
dec
test
adc
pop
aaa
jmp
mov
add
pushf
jbe
or
mov
jb
imul
cmp
pop
and
cmp
jecxz
xlat
imul
gs
xor
xchg
xchg
mov
add
xchg
push
test
and
mov
or
loopne
das
push
shlb
add
loopne
mov
ficompl
fdivs
pop
fistpl
loopne
mov
sub
iret
rcrl
or
cli
out
xor
in
mov
hlt
and
push
bound
scas
cmpsl
and
and
sbb
mov
sub
inc
and
repz
mov
rcrl
imul
push
call
rolb
sar
xorl
mov
mov
mov
fwait
cmc
ret
lds
loope
pop
lods
mov
xor
dec
int
cwtl
adc
bound
in
fnstcw
mov
and
shlb
pop
mov
mov
push
fld
mov
mov
push
or
rolb
xchg
adc
inc
lock
jnp
iret
aas
sbb
jb
and
and
mov
cmp
inc
push
test
inc
xchg
sub
pop
jl
lret
add
pusha
loopne
in
shll
int
xor
rcl
arpl
add
inc
shlb
sbb
xor
imul
andb
pop
cmpsl
mov
add
inc
push
or
pusha
in
inc
and
add
xor
lcall
out
arpl
test
mov
scas
inc
add
loopne
loope
aas
dec
andb
pusha
sub
inc
nop
and
and
loopne
or
mov
cmp
mov
inc
mov
inc
cltd
fndisi(8087
xchg
ja
inc
and
lds
mov
cmp
xchg
rorb
xchg
mov
push
lahf
out
xor
pop
mov
or
cmp
mov
and
dec
and
mov
test
mov
add
jno
pop
scas
scas
and
out
cmp
jle
or
and
and
test
mov
sbbl
aam
shrd
scas
outsb
ret
loope
add
in
mov
loopne
and
xlat
js
push
add
xchg
mov
icebp
pop
bound
cmc
shlb
push
push
test
inc
dec
cmp
pop
xchg
lcall
push
pushf
stos
inc
cmp
pop
inc
lods
pusha
pusha
pop
nop
mov
mov
loopne
rclb
iret
push
pusha
fldl
nop
jns
lds
inc
loopne
or
add
inc
push
adc
in
push
and
bound
ljmp
ja
lcall
or
lds
scas
jecxz
dec
mov
and
push
fstpt
call
xchg
inc
jnp
sbb
sub
pusha
ss
ja
push
adc
sub
loope
loope
jg
aas
xchg
pop
jbe
loopne
or
adc
incb
mov
in
sbb
fs
xchg
mov
int3
xchg
push
sub
rolb
imull
cmp
ret
aam
out
xchg
es
and
pusha
repnz
and
jnp
movb
shlb
push
rolb
fidivrl
xor
cmp
mov
sbbb
popf
rcll
xchg
lahf
or
pop
icebp
xchg
fdiv
push
add
loopne
sub
sarb
popaw
inc
iret
add
ret
sbb
scas
loopne
andl
jae
rolb
cmp
mov
or
pusha
xor
pop
daa
repz
lods
addb
pusha
decb
fcoms
les
insl
jecxz
cmpsl
je
push
mov
mov
cmpsl
push
mov
sbb
add
in
mov
hlt
rcrl
dec
leave
dec
pop
sub
and
loopne
out
scas
push
add
rorb
aam
xchg
inc
mov
cmp
mov
lret
and
push
in
adc
or
or
push
mov
pop
shlb
inc
fsubs
mov
lcall
xchg
push
lcall
adc
xlat
mov
leave
dec
sub
and
test
push
inc
rcl
add
inc
mov
pusha
push
sbb
or
pusha
imul
cwtl
arpl
adc
inc
add
lret
push
xchg
fdivs
adc
add
or
inc
add
imul
add
scas
pop
mov
mov
jns
fistpl
xor
rolb
pop
leave
dec
std
ret
sub
and
and
ds
and
cmp
pop
fs
fs
not
sahf
mov
xchg
add
mov
adc
cmp
js
rcl
add
inc
pusha
jle
rolb
mov
mov
add
psraw
inc
sti
out
das
rcll
fs
cmp
mull
inc
inc
adc
and
mov
les
add
or
shlb
mov
mov
and
push
push
or
scas
push
mov
sbb
mov
movsl
inc
fsubs
jg
cmp
add
and
cmp
js
cmpsb
inc
rclb
shlb
add
cmp
sbb
mov
sub
mov
add
xorb
aas
xorl
adc
and
movsl
cli
inc
xor
add
jmp
ret
nop
cmp
lock
push
push
inc
mov
enter
imul
inc
loopne
cltd
dec
sbb
ss
rolb
jge
iret
repnz
loopne
enter
mov
add
loopne
xchg
xor
push
mov
mov
insl
lea
pop
push
shl
cltd
in
shlb
inc
aad
lea
mov
and
mov
add
outsl
movsb
rolb
add
data16
lret
cli
test
rcl
ljmp
rorl
adc
int
mov
fwait
mov
cmpsl
mov
xorb
jbe
pusha
mov
push
lods
mov
insb
cli
mov
into
mov
lock
or
add
pusha
rcrb
inc
and
outsb
jnp
int
cmp
and
dec
mov
ret
xor
cmp
sub
mov
or
and
mov
xchg
int3
and
mov
push
scas
add
add
dec
inc
jge
sahf
or
inc
push
adc
mov
int
into
repz
int3
adcl
mov
push
testl
pop
add
sbb
sahf
bound
addb
mov
shrb
in
pushf
sub
mov
outsb
jmp
out
sbb
in
stos
adc
lds
lret
inc
pusha
shll
sub
fsubr
outsl
mov
and
mov
and
add
cld
or
call
pusha
loop
or
add
jne
aas
andl
add
rcl
test
int3
inc
xchg
sbb
out
mov
andb
cmp
clc
insb
out
push
xchg
iret
lcall
and
jmp
sti
xchg
fistpll
bound
jb
adc
subl
jo
push
push
out
inc
mov
fdiv
mov
xchg
xor
mov
loopne
xor
and
subb
sub
orb
addl
inc
lds
lret
arpl
rcrb
cmpsb
pusha
pusha
xchg
loopne
mov
add
andb
xchg
mov
sbb
cmovb
xchg
jmp
movsb
pusha
pusha
mov
andb
jbe
cmp
out
pop
fdiv
out
jle
addb
int3
aad
scas
andb
add
loopne
ret
push
aaa
add
add
pop
in
iret
mov
fcoms
inc
outsb
ret
pop
aas
sub
jmp
stos
lods
in
mov
aaa
js
gs
scas
idivl
xchg
ja
mov
and
pop
dec
or
test
mov
loopne
rolb
fsubp
shrl
pusha
ror
daa
sbb
dec
sub
mov
cmp
xlat
mov
hlt
cmpsb
loopne
xor
xor
dec
in
inc
inc
xchg
mov
shl
xchg
mov
or
mov
or
out
mov
std
sub
mov
outsb
or
std
sbb
loopne
sbb
add
inc
outsb
pusha
jns
mov
xor
mov
inc
xor
andl
and
ret
mov
xchg
pusha
inc
adc
mov
mov
pusha
xchg
cmpsb
and
push
xor
loopne
and
add
jne
or
insb
or
loopne
movsl
mov
dec
adc
enter
inc
push
pop
loopne
rclb
fnsave
adc
adc
iret
lcall
lret
xchg
push
adc
leave
loope
rdmsr
iret
cmp
pusha
add
or
cld
or
mov
inc
lcall
mov
dec
mov
inc
mov
scas
jmp
add
mov
inc
xchg
add
in
aam
fs
lds
mov
dec
xchg
stos
add
and
mov
sahf
mov
pusha
loopne
int
pusha
sbb
shrb
mov
inc
sbbl
push
push
loopne
cli
cmc
add
cmpb
dec
ja
mov
call
add
and
cltd
or
mov
pusha
inc
jmp
int
mov
add
mov
jb
xor
enter
inc
xor
loopne
scas
rolb
sarb
rclb
ja
and
inc
in
sbb
lret
fcomps
mov
enter
out
fwait
loopne
cmpsb
loopne
loopne
xor
jge
lahf
jmp
or
and
xor
aad
scas
mov
mov
imul
pusha
ja
aad
xchg
mov
cmp
jg
jbe
shl
mov
sbb
or
inc
lret
or
mov
mov
into
cld
shlb
addr16
scas
lahf
rcr
xlat
and
mov
push
fsubrs
std
out
jp
lret
pop
test
jns
loopne
sbb
mov
insl
outsl
push
bound
aaa
mov
shlb
mov
adc
ficoms
fnstsw
ljmp
add
add
adc
shlb
or
fiaddl
mov
rol
sbb
iret
cmp
mov
andb
fs
dec
inc
imul
clc
inc
leavew
leave
adc
add
into
adc
push
out
shlb
pusha
dec
xor
pop
jae
mov
in
jp
mov
ret
loopne
pop
aad
mov
unpcklps
jnp
pop
sbb
int3
lahf
mov
add
dec
testl
mov
stos
test
jo
lock
inc
xor
push
add
test
cs
adcb
mov
mov
sbb
sahf
nop
in
stos
sub
inc
insl
aam
stc
mov
clc
aad
loopne
pushf
scas
rolb
into
loope
jmp
mov
mov
mov
out
pusha
xor
jo
and
adc
mov
clc
fstpt
and
push
andb
imul
test
and
adcl
add
pusha
xchg
pop
sbb
test
mov
and
shl
pop
jbe
inc
loopne
lcall
cmc
sti
and
loopne
or
inc
cmp
insl
xor
aad
mov
loopne
xor
imul
mov
aaa
sbb
sbb
int3
in
sahf
lcall
or
inc
mov
out
push
add
sub
dec
dec
and
loopne
rorl
cmp
pop
mov
dec
xchg
jnp
adc
dec
test
pusha
stos
inc
mov
add
cld
out
add
aaa
pop
inc
loop
xor
mov
pusha
inc
mov
cmp
pop
clc
add
adc
jecxz
in
mov
and
add
jmp
and
pop
lds
dec
push
lret
add
aas
lret
int3
jmp
cmpsb
pusha
mov
xchg
push
jnp
fsubs
pusha
pusha
aad
mov
jg
xchg
or
std
xor
out
mov
add
test
leave
ljmp
push
lds
and
fdivrl
pop
xor
les
mov
mov
loope
pusha
inc
pop
jge
dec
inc
mov
int
pop
test
loopne
xor
test
cmp
inc
adc
and
mov
mov
inc
in
out
test
and
dec
mov
lahf
adc
mov
mov
enter
push
repnz
cmp
scas
and
fdiv
loop
fnstsw
pop
mov
add
shl
pop
mov
rolb
shl
jnp
addb
aas
cmp
fmull
jle
mov
stos
and
test
orb
rcl
je
je
loope
mov
jl
mov
cltd
mov
loope
frstor
xchg
fcompl
pop
mov
ja
aaa
into
sub
rolb
sarb
pop
in
inc
mov
roll
movsl
xchg
outsb
mov
lcall
mov
mov
cmp
mov
test
inc
inc
cwtl
xchg
mov
sub
cmp
adc
into
stos
sub
pop
add
push
dec
cmpsb
inc
inc
popf
lock
mov
loopne
sbb
sub
shr
ss
xchg
rcll
pop
mov
add
je
rcrb
gs
jae
xor
shrb
pushf
imul
adc
aam
repnz
pusha
xor
fidivs
data16
loopne
mov
lcall
add
loopne
jno
push
cmp
divl
cli
or
inc
repnz
movsb
mov
mov
or
loopne
pop
sti
lods
jecxz
negb
mov
cmp
loopne
pop
jo
cmpsl
jno
inc
pusha
pop
xor
das
negl
push
mov
mov
bound
mov
stc
ss
loop
inc
dec
sbb
jge
outsl
aam
movsl
call
loopne
pop
or
les
rolb
mov
stc
out
mov
out
repnz
inc
add
movsb
add
pusha
add
mov
pusha
inc
arpl
pusha
push
adc
add
cmpsb
inc
mov
inc
nop
sahf
ret
mov
test
rolb
out
push
mov
out
lret
movsl
fstl
cld
mov
add
jle
mov
pusha
inc
jne
xor
add
mov
and
dec
shlb
subl
scas
ret
aad
pop
mov
insb
sbb
adc
leave
aam
sbb
mov
js
inc
pusha
or
jl
lcall
loopne
and
jl
ljmp
push
addb
push
fistps
aad
xchg
jno
cmpsb
add
jb
xchg
jae
pop
sbb
xchg
das
insl
iret
or
add
loope
xlat
and
dec
pusha
fwait
sbb
xchg
addr16
rcrl
pop
sbb
pop
testl
cmpb
loopne
test
add
testl
mov
add
inc
sbb
fisubrl
sar
push
xor
mov
sub
repnz
ljmp
addb
in
xor
xchg
fnsave
fidivrs
dec
dec
stos
addb
pop
and
inc
jle
pusha
orb
out
in
lock
cs
cli
aad
test
and
int3
jg
dec
xchg
test
shl
and
push
push
mov
sbb
addr16
shl
rol
insl
mov
or
and
and
inc
or
mov
arpl
sub
shlb
int3
sub
fucomp
push
cmp
mov
inc
push
pop
jne
sub
into
repz
add
add
adcb
loope
repz
les
popf
nop
add
cmp
inc
and
leave
paddd
or
fmull
enter
mov
pusha
or
cs
shrb
stc
loope
and
loope
les
fisttps
inc
rcrb
aad
xchg
mov
pusha
mov
cmp
pop
fildl
mov
add
gs
sbb
je
stc
xchg
mov
pusha
iret
jo
loopne
pop
ds
out
adc
fisubrl
andb
shlb
mov
xchg
add
mov
insb
jns
cmpsb
and
dec
mov
cmpsl
das
lcall
fwait
outsb
cwtl
jmp
addb
rclb
pop
and
loope
mov
js
imul
loopne
insl
and
xchg
push
push
addb
pusha
inc
sub
loopne
add
xchg
mov
add
mov
jl
arpl
rolb
loopne
cld
dec
fcomip
adc
pop
jns
lods
repnz
in
enter
mov
and
add
mov
cmp
pop
pop
jl
ss
loopne
cmp
out
or
pop
call
sbb
mov
push
js
sub
add
fucomip
movsl
loope
inc
idivl
sub
mov
mov
mov
mov
cmp
pop
int3
aad
sbb
mov
mov
arpl
loop
pop
clc
inc
cmpsl
add
mov
jae
dec
mov
push
cmovne
fisubs
sub
mov
rcll
fcomps
sbb
andb
sub
jae
addl
fdivs
fcomps
push
add
jp
dec
push
loopne
cwtl
jb
aad
sar
sub
pushf
repnz
insl
fbld
clc
mov
jg
sbb
lret
inc
mov
adcb
add
add
push
mov
andb
xor
or
inc
lret
out
cld
loope
lods
cmp
mov
mov
inc
add
inc
adc
loopne
pusha
add
es
inc
or
dec
add
sbb
pop
mov
pop
push
pop
stos
add
pusha
sub
adc
mov
adc
aas
lret
inc
and
jne
enter
enter
and
in
rcr
cmpsl
adc
sub
subb
hlt
scas
inc
mov
xchg
imul
and
mov
sar
leave
sub
mov
sub
test
cmp
add
sbb
push
sbb
and
push
rclb
orb
cmp
add
mov
out
cmp
pop
cli
out
popf
cmpsb
and
aam
addb
data16
xchg
mov
sub
lret
test
add
mov
mov
add
loopne
mov
sti
lret
movsl
icebp
and
lea
add
out
ss
fidivrl
mov
jns
mov
xchg
test
adc
inc
cmpb
mov
loopne
add
xor
andb
and
push
and
int
dec
or
fwait
sub
aam
in
lock
loopne
and
fsubs
shlb
add
andb
pop
scas
fisubrl
add
sub
sub
and
outsl
in
lods
rolb
insb
sbb
punpckhbw
pop
test
sub
inc
insb
inc
stos
rolb
add
pusha
lods
loopne
sbb
scas
pop
je
imul
fiaddl
mov
loopne
arpl
movsb
addb
pop
or
add
jle
mov
xchg
xor
push
lcall
xchg
cmpsb
mov
inc
cwtl
stos
rolb
mov
and
cltd
scas
add
and
loope
mov
and
mov
inc
rcr
xchg
pop
rolb
cmp
fisttpll
imul
jmp
mov
sarb
imul
add
filds
sti
ficompl
jb
in
rcr
push
mov
aad
push
les
and
je
cmp
les
jbe
outsl
cwtl
cltd
popa
cli
mov
cs
and
loop
mov
sub
shll
and
aam
out
jo
and
adc
loop
mov
jmp
sub
lcall
and
scas
mov
mov
lret
pop
sti
cld
es
lods
add
cwtl
dec
mov
mov
xor
sahf
sti
iret
xchg
cmp
dec
popa
aaa
pushf
cmp
test
mov
aaa
mov
repz
hlt
adc
fwait
insb
push
jno
aas
sbb
xor
cltd
daa
inc
aas
int
insb
mov
inc
adc
icebp
imul
sub
inc
out
pop
mov
xchg
push
pushf
adc
andb
cmp
inc
loopne
inc
push
cmpsb
and
addr16
and
test
outsb
repnz
xlat
lret
sbb
and
sub
repnz
add
mov
fstpl
notb
dec
push
jmp
inc
mov
andb
ja
lods
out
add
std
aas
insl
sub
test
and
add
test
loopne
xchg
lahf
xchg
xchg
or
and
push
inc
dec
andb
cmp
in
and
mov
cmp
pop
push
push
inc
mov
xor
test
lock
sarb
outsb
inc
add
loopne
pusha
shl
shlb
add
push
stc
insb
popf
xchg
inc
test
inc
movl
xchg
mov
xor
or
loopne
inc
jne
mov
mov
push
xchg
movsb
mov
fnstenv
mov
jg
mov
and
push
xchg
add
inc
dec
in
and
mov
push
lods
mov
in
sub
pusha
xchg
adc
jb
sub
inc
std
jnp
jnp
inc
and
jns
push
dec
fdivl
subb
outsb
add
andb
fldt
scas
les
add
loopne
ss
jp
jbe
mov
cmp
loopne
jnp
mov
add
shrb
inc
mov
xchg
mov
add
xchg
out
in
sbb
jno
cmp
xchg
mov
lea
aaa
js
std
popf
mov
lods
sbb
ret
fstps
fimuls
pop
mov
adc
and
dec
push
imul
pop
inc
test
mov
rcl
jnp
test
add
add
imull
les
inc
pop
clc
push
aad
and
test
mov
aas
mov
loopne
ds
and
cmp
aam
cmpsl
bswap
int3
push
fildll
xchg
mov
rol
pop
int
sub
mov
rclb
cmpsb
add
xor
add
mov
in
xchg
popa
mov
fwait
cmpsl
insb
aad
pop
push
mov
push
imul
shlb
cmp
jno
add
adc
adc
arpl
lret
pop
aas
pop
inc
clc
adc
int3
mov
mov
push
mov
sbb
sbb
cmc
mov
push
pusha
inc
mov
add
cmp
mov
rorb
mov
xchg
jge
lea
mov
and
add
lret
sub
inc
sub
and
xor
stc
mov
iret
hlt
xor
push
shlb
pop
pop
mov
add
push
cli
sti
rol
fimull
push
dec
icebp
nop
fiadds
xchg
fxtract
mov
lret
arpl
cmp
decb
pusha
pusha
mov
sub
cmpb
ljmp
repz
cmp
andb
or
jle
sbb
shlb
ljmp
and
test
pushf
mov
rcl
test
add
pop
mov
adc
add
in
dec
test
cmp
add
pusha
testb
mov
dec
outsb
pop
and
inc
stos
iret
iret
mov
rcll
js
inc
sub
push
mov
shlb
mov
outsl
cmp
and
dec
sbb
stc
cltd
add
inc
jbe
sbb
shl
xchg
and
popa
add
lods
das
or
push
rolb
push
std
cmp
push
addl
xor
push
push
add
push
in
nop
in
iret
adc
ljmp
aam
mov
add
or
add
into
cmp
sbbb
pop
iret
addb
popa
pop
cs
mov
sbb
mov
xor
out
pushf
mov
cmpsb
inc
pusha
pop
sarb
xlat
int
lds
lcall
rolb
out
addr16
and
shr
dec
nop
adc
pop
imul
call
cmp
xor
shlb
icebp
cmp
push
mov
push
filds
sahf
enter
into
inc
stos
andb
add
xchg
mov
inc
xchg
xchg
popf
aas
outsb
sub
pop
popf
add
fdivrs
pop
pop
mov
jp
and
test
insb
mov
popa
repz
and
insl
fimull
and
in
mov
bnd
outsl
xor
addb
iret
stos
push
and
lods
add
pop
arpl
mov
insl
xchg
xchg
in
push
cmp
fbld
add
dec
mov
sar
sbb
push
dec
je
push
mov
inc
mov
shlb
repnz
and
push
xor
or
mov
sbb
lock
jecxz
xchg
aaa
push
fs
dec
add
mov
mov
xchg
aaa
sarl
lds
mov
push
in
pop
sbb
divb
shlb
add
and
outsl
hlt
test
sub
mov
rorb
cmp
mov
rcrl
loope
insb
push
lret
mov
ret
jno
imul
inc
inc
bound
sbb
jmp
lock
cwtl
jns
shll
add
and
sahf
loop
dec
cs
loopne
popa
push
inc
mov
nop
sbbl
add
and
fs
scas
pop
push
sbb
pop
fwait
cmp
scas
pusha
add
add
and
xchg
cmp
cmp
mov
ret
ss
lahf
mov
and
xor
pop
mov
jl
icebp
inc
adc
scas
pusha
add
add
mov
jae
aam
stos
loopne
inc
popa
and
outsl
jge
jae
jbe
std
mov
add
push
pop
out
cmc
out
fists
out
imul
and
outsl
lds
addb
leave
mov
jmp
mov
movsl
out
ss
out
js
fwait
sbb
pop
pop
xchg
xor
stos
and
xor
cmp
into
jge
popa
xchg
dec
xor
rorl
mov
inc
loopne
adc
sbb
pop
ds
data16
push
xchg
pop
out
mov
add
mov
cmpsl
mov
movsb
addb
insl
sahf
iret
dec
inc
fwait
push
dec
cmpsb
loopne
pop
mov
arpl
arpl
fmul
and
and
lret
pusha
cwtl
fnsave
dec
mov
cltd
and
add
dec
dec
fucomp
ja
cmp
rcrl
sbb
in
xchg
fistpl
add
add
and
pop
sub
inc
dec
cmp
test
or
pusha
insb
lcall
jmp
icebp
xchg
sbb
js
jb
inc
inc
adc
iret
dec
pop
and
shlb
inc
mov
adc
outsb
xlat
int3
xor
xor
loopne
adc
lret
repnz
inc
loopne
xchg
in
cmp
sbb
jmp
push
or
imul
aaa
lds
jae
imul
cmp
mov
and
xchg
fcmovbe
popf
shl
jecxz
mov
out
xchg
stc
sbb
sahf
popa
lahf
sub
mov
ds
adc
loopne
mov
jg
push
repz
mov
xchg
sub
add
orb
ret
in
insb
lods
pusha
orb
and
and
leave
pop
cld
mov
cld
loopne
add
loop
mov
pusha
rclb
ficompl
jp
xor
or
mov
cltd
fiadds
push
xchg
lods
movl
nop
lds
rcrb
stc
push
cmp
fwait
sbb
addb
das
xor
mov
mov
je
outsl
sub
mov
and
mov
mov
pusha
add
cmp
shlb
leave
popa
xchg
fsubs
ficompl
lea
mov
movsl
lret
dec
dec
pop
push
into
aas
enter
rol
and
repnz
jg
pop
les
adc
dec
out
test
xorb
je
sbb
cmovp
and
ja
imul
and
test
shlb
loopne
rcrb
cmpb
add
fs
andl
cmpsl
pop
mov
pop
or
add
pusha
sub
mov
cmp
loopne
jmp
push
mov
mov
and
rclb
cmpsb
pusha
pusha
ret
movsb
mov
cmc
stos
pusha
pusha
fsts
push
ja
add
stos
rol
repz
push
andb
mov
bound
and
fidivrs
pop
insb
fildl
lock
stc
fidivl
xchg
xor
mov
adc
cmpl
pop
test
and
and
push
loop,pt
or
inc
add
cld
ret
push
xchg
scas
add
pop
xchg
lcall
hlt
mov
repz
test
shl
adc
xchg
mov
mov
sub
andl
sbb
and
mov
sbb
or
pusha
js
rorl
mov
sarb
addb
add
loopne
xlat
push
mov
iret
push
inc
shrb
arpl
or
cmpb
jo
scas
pusha
add
stos
out
jne
xor
ljmp
lahf
loop
push
sbb
jl
cld
fldl
jnp
dec
outsb
add
sub
pop
cli
bound
rol
inc
pop
add
lahf
push
rolb
loopne
leave
mov
movswl
sbb
ljmp
aaa
mov
shlb
mov
inc
in
fwait
cmp
xor
jo
mov
and
mov
add
inc
inc
dec
sub
jne
iret
lods
rcrb
sub
pusha
loope
push
mov
nop
sub
mov
xchg
mov
xchg
test
pop
sbb
pusha
push
lcall
pop
cmp
loopne
cltd
int
inc
push
sub
addb
xchg
sub
fistpl
dec
adc
and
imul
divb
or
imul
sbb
lods
fistpl
cmc
icebp
ss
daa
mov
test
pusha
lret
repnz
dec
adc
and
inc
faddp
std
out
xor
adc
or
addr16
push
jns
push
xchg
daa
mov
push
and
bound
add
fists
repz
std
jbe
cmc
lods
sbb
mov
or
sub
fwait
mov
dec
out
mov
mov
sub
fstpt
lss
addb
and
mov
loope
sahf
or
and
out
or
inc
rorb
or
mov
mov
leave
movsb
add
out
and
fldt
cmp
xchg
ret
rolb
and
push
shrl
mov
lods
addb
stc
or
mov
sbb
lea
pusha
fwait
dec
nop
xchg
inc
dec
nop
loope
xchg
int
pusha
mov
dec
pop
xor
andb
cli
mov
out
aaa
jbe
and
pusha
mov
cmp
xor
aad
add
inc
hlt
mov
lcall
hlt
cmpsl
cltd
ffree
push
rolb
in
xchg
sub
add
lds
addb
sbb
rol
and
add
shlb
andb
mov
sbb
aaa
iret
dec
mov
cmp
dec
das
sti
fcmovu
pop
pop
test
adc
lock
jg
sub
mov
movsl
in
mov
cli
test
arpl
sub
shlb
sarl
jle
mov
and
push
lret
mov
call
je
loope
cmp
lret
push
repz
rolb
stos
das
mov
iret
outsl
mov
inc
aaa
adc
andb
pop
jp
fisubl
and
or
lea
sbb
insl
data16
insb
test
add
rol
mov
and
jge
mov
es
or
inc
mov
mov
push
mov
rolb
jge
pop
testl
les
pusha
inc
mov
pushf
xor
movsl
fidivrs
jns
adc
cmpsl
leave
jbe
and
mov
dec
pushf
repnz
in
mov
inc
mov
pop
les
std
xchg
mov
pushf
mov
jbe
cmpsb
and
and
mov
lret
loopne
addb
push
shlb
out
out
jb
scas
mov
fisttpl
ficoms
mov
cmp
and
cmp
insl
pop
push
pop
andb
push
push
mov
push
add
in
push
jp
inc
shr
mov
cmpsb
inc
shlb
lahf
jne
mov
and
in
rolb
test
loopne
push
cld
jge
and
mov
jp
gs
sbb
stc
jmp
inc
pusha
xor
out
mov
xchg
mov
sarb
in
jae
cmp
in
xchg
push
add
xchg
add
out
xor
inc
lds
xor
sbb
inc
ror
je
es
loopne
loope
jo
jecxz
mov
dec
jge
sbb
xchg
icebp
mov
cmp
js
out
dec
popf
inc
push
loopne
jmp
push
rolb
clc
push
and
ja
push
test
mov
sar
add
lea
pusha
mov
cmp
xchg
lcall
add
mov
add
ficompl
stc
es
subb
pusha
repnz
lds
and
sti
bound
push
lods
lcall
cmp
add
pusha
movsb
inc
sbbb
lock
fiaddl
fiadds
and
leave
enter
in
inc
inc
loop
xchg
mov
shlb
xor
idivl
gs
fildl
xor
nop
xchg
xlat
movsb
loopne
stos
dec
rorb
add
call
xchg
pusha
cmp
mov
loopne
loopne
mov
cmp
scas
loopne
pop
jnp
push
sub
cmp
add
add
and
inc
inc
sub
pusha
inc
in
aaa
popf
mov
or
out
push
fisttps
rol
push
pop
xor
addl
inc
bound
xor
sub
cmpb
mov
inc
pop
jmp
add
jle
inc
cmpb
dec
out
jmp
jle
aas
xor
inc
inc
or
mov
fidivs
out
inc
pusha
nop
pmullw
nop
out
inc
in
sbb
imul
sbb
sbb
addb
pop
or
push
loopne
scas
mov
loopne
sbb
lret
decb
rolb
addb
dec
nop
cmp
pusha
rolb
mov
fwait
mov
movaps
loopne
dec
or
cmp
addb
shlb
and
add
les
adc
inc
mov
loopne
or
mov
inc
inc
out
mov
mull
mov
mul
add
cld
adc
mov
call
lock
or
mov
sbb
mov
xchg
shrb
mov
fcmovb
fcomi
jne
rolb
xor
fnsave
jo
add
andb
pop
push
inc
mov
pusha
sub
and
jbe
cli
rorb
pusha
shl
xchg
sahf
dec
push
adc
lcall
mov
mov
sbbb
out
rcll
mov
pop
iret
scas
ds
iret
pop
pop
ljmp
dec
cmp
test
cwtl
mov
cmp
loopne
ja
ljmp
call
out
int3
int
push
ds
and
mov
pusha
xor
movsb
pusha
mov
repz
test
and
cld
test
xorb
mov
or
and
dec
in
es
inc
push
andb
loop
insl
cmp
sbb
loopne
cmp
xchg
test
andb
sbb
les
int3
inc
and
addb
cmp
fwait
lret
jge
icebp
mov
mov
jl
and
mov
hlt
lods
sub
in
ja
inc
insb
data16
bnd
sti
xchg
mov
ret
add
pusha
pop
popf
out
xchg
movsl
insb
xor
cmc
dec
in
shl
push
xchg
mov
sahf
in
cmp
ror
fsts
pusha
add
leave
test
mov
inc
sub
loopne
pop
or
daa
add
pusha
stos
pusha
mov
pusha
and
mov
xchg
nop
xchg
cmp
and
xchg
push
push
cmp
mov
or
mov
dec
mov
mov
insb
add
inc
scas
andb
pop
int3
test
sbb
mov
and
fistpl
pop
xchg
fucomi
cmp
sub
loopne
fprem1
insb
jne
jge
stos
mov
outsb
lahf
dec
imul
ljmp
and
rolb
jle
aad
jns
dec
bound
ret
outsb
fstpt
into
push
add
jmp
xchg
loopne
xor
mov
dec
outsl
add
add
hlt
arpl
addl
inc
pop
lcall
xchg
pusha
lret
mov
shlb
push
xchg
push
andb
pusha
pusha
int3
lahf
scas
mov
adc
in
ds
aad
inc
pusha
or
inc
mov
loopne
mov
pop
addb
xor
jb
pop
sbb
pusha
or
addb
in
imul
cmp
jl
push
stc
mov
xor
mov
gs
mov
cmp
or
push
xchg
mov
lea
fs
in
dec
xchg
pusha
test
inc
in
sbb
push
mov
cmp
je
test
loopne
fcomps
add
mov
sbbb
andb
inc
pop
rcll
xchg
cmc
out
add
mov
cmp
jl
iret
xchg
sbb
sahf
push
addb
idiv
fwait
imul
cltd
into
pop
enter
mov
pop
mov
pusha
mov
fidivl
mov
pusha
or
addb
jno
bound
mov
add
std
rclb
adcl
push
mov
or
addb
lds
lock
mov
lea
inc
mov
dec
shl
outsl
shr
and
addb
mov
jmp
push
ja
inc
jne
cli
mov
ret
cs
inc
daa
cwtl
flds
rolb
jmp
insb
push
and
fdivl
or
push
inc
loope
loopne
ror
nop
adc
xor
rclb
pop
push
pop
pop
out
mov
mov
fucomi
sub
mov
inc
mov
jge
movsb
and
cmpsb
add
sub
xor
int
test
xor
pusha
pusha
push
cmp
xor
loopne
adc
xchg
in
mov
add
loopne
cmp
dec
pop
leave
lods
fnstcw
jl
mov
and
cmpsl
nop
lcall
fimuls
or
mov
rclb
cmp
mov
push
or
sarb
out
incb
mov
push
fildl
and
mov
ret
mov
jecxz
inc
inc
or
add
adc
mov
xchg
and
popa
sbb
dec
fidivrl
mov
xlat
mov
fisttps
mov
aas
or
subb
jmp
aam
mov
or
mov
jns
pop
das
mov
mov
cmp
mov
repz
jo
xor
jg
es
loopne
mov
in
fbstp
popf
shlb
cmp
loopne
or
push
add
cld
push
mov
stos
loopne
les
lahf
les
fs
xchg
addl
xor
push
ja
movsl
xor
and
pusha
movsl
and
lods
loopne
mov
or
fs
ret
out
jb
lret
and
repnz
loopne
ja
mov
aaa
and
lahf
or
outsb
sbb
js
je
add
mov
push
nop
ret
mov
sub
mov
push
lds
jbe
lret
out
data16
arpl
cs
sar
sbb
in
mov
or
addb
shrb
in
ljmp
xchg
push
addb
outsl
and
cmpb
push
pusha
jnp
add
sub
cmp
loopne
lods
andb
pop
mov
adc
pusha
loopne
add
mov
daa
sub
mov
inc
ret
movsl
xchg
inc
fistps
jnp
out
sbb
mov
addb
push
loopne
xor
fsubl
imul
fcomps
notl
xor
rol
mov
lea
gs
dec
xor
jbe
xchg
sahf
dec
das
push
pop
jne
fistl
jg
es
mov
jno
xchg
loop
pop
add
subb
fnstsw
rolb
jecxz
xchg
jne
cmpsb
and
pushf
adc
shlb
loopne
add
mov
insl
xor
clc
call
loopne
sub
mov
add
loopne
loopne
inc
ss
jp
xchg
pop
iret
and
add
mov
or
sub
jns
loopne
and
sbb
jnp
push
shll
clc
popf
mov
sub
and
addb
test
inc
addr16
xchg
das
pop
testb
add
in
cmp
test
inc
loopne
enter
aad
mov
test
adcb
cli
in
jmp
inc
outsl
pop
pusha
in
xchg
test
inc
add
add
stos
xchg
fwait
and
scas
rol
inc
cltd
dec
xor
ja
cmp
dec
push
jnp
in
out
lret
inc
ret
sub
cvttps2pi
add
aaa
repnz
into
mov
sbb
cli
jle
pop
scas
cmp
rolb
out
add
mov
lock
add
mov
push
pusha
fisubs
sbbb
addb
dec
in
pop
sbb
mov
push
int3
inc
mov
adc
shlb
pusha
notb
pusha
sub
sar
xchg
or
inc
test
cmp
mov
sub
rolb
xor
add
scas
mov
jmp
jmp
cltd
es
mov
test
mov
inc
mov
decb
jl
inc
adc
test
push
and
in
jle
or
mov
mov
sarb
push
mov
push
out
mov
mov
dec
out
repnz
cmp
daa
push
cwtl
ds
push
stc
pop
push
pusha
inc
fnstenv
int
jecxz
mov
xchg
xchg
dec
loop
jmp
mov
pop
out
xchg
pop
mov
popa
and
stos
pusha
shrb
mov
mov
shlb
or
pusha
mov
gs
push
inc
cwtl
scas
loopne
xchg
popf
loopne
shl
pop
mov
test
imul
fisubrs
pop
mov
push
mov
mov
cmp
jl
pmovmskb
stc
repz
mov
lock
or
mov
and
shlb
inc
and
sub
int3
bound
dec
pop
xor
loopne
sarl
sahf
adc
mov
loopne
mov
inc
popf
sub
or
sbbb
push
rorl
mov
movsl
jmp
mov
std
daa
int
mov
cmp
call
add
call
ljmp
out
shrb
cmc
jmp
in
mov
mov
mov
pcmpeqw
push
loope
sbb
inc
jne
sbb
pop
mov
je
in
scas
add
xchg
cmp
add
push
xchg
sbb
movl
add
mov
push
pusha
loopne
jo
andb
mov
xor
loopne
cli
xor
and
or
adcb
imul
push
pusha
shl
loop
sbb
or
lret
scas
xor
sarl
inc
inc
lcall
cld
sbb
push
shrb
add
xchg
inc
cltd
shl
aaa
stos
and
and
les
jp
mov
insl
subl
loopne
xchg
pusha
sub
sbb
add
fnstcw
daa
repz
fcoml
sub
mov
andb
std
xor
loop
dec
adc
loopne
lahf
rolb
mov
cmp
pusha
jno
fnstsw
sub
inc
push
inc
mov
and
movl
stos
aam
dec
fcmovnu
xchg
mov
or
pusha
and
test
mov
cmp
pusha
and
addb
mov
mov
mov
scas
loopne
fcmovne
loop
xchg
loopne
jbe
lods
inc
pusha
insb
xchg
mov
mov
mov
mov
pop
lret
pop
inc
sbb
adc
mov
pop
hlt
jg
and
test
inc
pop
mov
inc
adc
int
sub
inc
xor
test
inc
out
and
and
subb
jno
add
aas
adc
out
mov
mov
pusha
mov
adc
jne
fs
divl
loopne
mov
push
xor
push
mov
in
and
mov
shl
decb
and
cmp
jno
mov
add
sub
mov
pusha
rol
lods
mov
insl
jg
pusha
mov
insl
xchg
jmp
jecxz
cmp
mov
and
movsl
sti
arpl
loopne
in
mov
ficoml
addr16
and
loopne
jecxz
cmp
adc
xorl
aad
mov
movsl
push
mov
jne
test
xorb
addb
cmp
jmp
mov
out
shlb
add
stos
push
addb
test
insl
aam
sub
shll
push
mov
sbb
sbb
pop
jmp
push
sub
mov
stos
shl
xchg
aad
dec
je
sub
loopne
mov
shl
stos
sbb
mov
daa
pop
pop
imul
stc
push
ret
std
push
xlat
and
pop
testl
add
push
into
sbb
in
mov
out
fistpll
shlb
add
rcl
adc
xor
test
push
pusha
add
fmull
add
mov
jge
xchg
adc
xlat
mov
and
or
loopne
mov
jge
xchg
mov
mov
faddl
jns
fsts
inc
add
pusha
mov
jecxz
sahf
out
jecxz
mov
fcmovnb
imul
clc
lods
inc
push
andb
mov
andb
pop
into
lret
lcall
add
mov
insb
hlt
daa
jp
test
outsb
add
pusha
dec
add
pusha
sub
xorb
add
dec
pop
sbb
and
push
cmpl
addb
or
mov
cmp
and
addb
and
inc
xor
jge
fwait
push
dec
add
imul
pop
xchg
mov
add
push
popf
mov
imul
dec
cmc
mov
imul
add
and
lahf
lahf
lret
add
sub
aaa
movsb
addb
and
pop
mov
rol
mov
loopne
js
adc
mov
rcrb
lea
cltd
xchg
sub
mov
pop
and
and
out
jns
stc
out
add
addb
or
inc
pop
or
inc
ljmp
insw
aad
add
and
shlb
enter
jg
fs
pusha
in
push
fnstsw
mov
shlb
sbb
inc
daa
mov
fsts
dec
aam
in
and
and
gs
add
fdivrl
test
jmp
lret
dec
std
and
cmp
sbb
pop
pushf
addr16
out
push
xchg
mov
mov
xor
mov
fcompl
pop
inc
sbb
inc
cmp
and
inc
out
pop
repz
scas
and
movsl
dec
cmpsb
add
mov
mov
shl
rcll
outsb
mov
bound
sbb
jns
sub
adc
and
addb
mov
xor
xor
cmpsl
xchg
jmp
pushf
push
aaa
pop
xchg
jp
mov
jmp
xlat
mov
andb
cmp
xchg
lods
jecxz
and
mov
sahf
lds
lds
add
sub
dec
out
aaa
jne
jle
icebp
mov
inc
or
cmc
inc
ss
and
dec
cltd
push
insl
push
fisubrs
dec
imul
loopne
inc
add
in
cs
sub
rcr
inc
addb
scas
inc
pusha
add
addb
add
mov
pop
push
xor
andb
adc
add
jnp
jecxz
ss
and
dec
js
shlb
push
loopne
in
xchg
mov
mov
add
xor
cmpsl
mov
xchg
mov
cmp
sub
pushf
jle
dec
insb
test
rcll
stos
lret
imul
cmp
cmpsl
mov
push
xor
sbb
xor
mov
fdivs
xor
loopne
mov
push
daa
xchg
and
sub
sub
fdivrl
and
jmp
add
aaa
mov
js
or
sarb
pop
out
bound
stos
mov
inc
dec
sub
jmp
push
or
popa
fildll
rolb
ja
and
test
lods
test
jb
aad
loopne
movb
mov
and
das
mov
addb
push
add
jg
fnstcw
rol
in
roll
add
mov
inc
repz
mov
xchg
mov
and
fwait
xchg
sbb
jne
inc
fsubrl
outsl
fcmovbe
mov
add
sbb
and
jae
jb
xchg
inc
fcmovbe
pusha
and
push
addb
in
pop
ja
addb
ss
jmp
xchg
jb
ja
add
inc
addb
and
inc
enter
in
dec
mov
pop
and
or
stc
movsl
mov
xchg
xlat
pop
mov
lds
inc
or
test
mov
xchg
xor
mov
mov
arpl
lods
pusha
rcrb
je
cmp
push
lcall
data16
mov
xor
mov
dec
addb
mov
sub
in
lods
imul
sub
and
mov
add
pop
out
adc
pusha
mov
add
loop
out
xchg
dec
inc
jecxz
addb
scas
jg
sub
imul
ret
aad
mov
cmp
mov
add
and
ss
lds
cwtl
fsubl
jae
and
fsubs
adc
ljmp
mov
int
mov
adc
pusha
and
clc
mov
xchg
pop
fistl
cltd
sbb
jno
inc
hlt
les
rcrl
loopne
xchg
mov
and
lret
push
dec
sub
movsl
icebp
lret
inc
mov
popf
or
js
fldcw
xchg
lods
mov
jmp
shr
rolb
mov
inc
sbb
xor
clc
dec
or
sar
or
rclb
xor
pop
inc
mov
aaa
repnz
gs
cmp
dec
pop
outsb
aam
inc
mov
sahf
adc
lahf
push
xchg
leave
mov
cmp
mov
mov
loopne
mov
xchg
pop
mov
out
or
jo
inc
dec
adc
xchg
xchg
test
add
loopne
mov
mov
frndint
push
int
mov
insb
jl
movsb
loopne
test
add
ret
push
fwait
push
jl
daa
mov
jle
pop
xchg
lret
pop
imul
mov
xor
scas
mov
sub
and
inc
ficomps
incl
xor
and
push
mov
mov
out
jecxz
and
je
xor
mov
andb
mov
andb
or
xor
cmp
out
lods
idivl
std
sbbl
inc
cmp
rorb
jae
and
shl
out
sbb
outsb
cmp
mov
dec
insb
adc
rolb
iret
insb
push
sbb
in
xchg
push
pusha
pusha
adc
sub
pop
sub
and
mov
mov
aad
sub
das
and
cmpsl
cld
cmpsb
rolb
inc
cmc
addr16
roll
fsubp
int
mov
cltd
aaa
jbe
inc
push
fnstsw
loopne
loope,pt
and
push
ja
addr16
shlb
bound
inc
inc
sbb
pop
cwtl
sahf
jecxz
rcrl
pusha
ja
aad
pusha
mov
out
sub
inc
std
into
jg
shlb
mov
and
test
iret
je
movsl
scas
scas
add
in
add
and
or
and
mov
sbb
xchg
leave
minps
addb
addr16
sbb
cld
jge
mov
fisubrs
and
add
sub
and
and
scas
movsb
andb
rolb
mov
adcl
mov
roll
push
xor
mov
mov
and
or
int
scas
into
add
mov
push
xchg
mov
cwtl
pop
mov
push
add
inc
mov
andb
pop
sub
ss
movsl
loopne
dec
dec
stos
shl
pop
sub
shl
cmp
andb
notl
mov
pusha
adc
bound
ds
call
xlat
imul
and
sarl
lret
rcrb
jg
add
mov
fwait
sub
add
lods
mov
loopne
shrl
cwtl
dec
jae
insl
rorl
and
cli
insb
ljmp
repnz
push
add
jnp
nop
je
sbb
and
cli
out
cmp
stos
and
and
jo
and
dec
dec
and
pusha
in
dec
lods
pushf
stos
addb
add
sub
and
xchg
adc
in
pop
pop
or
mov
rorl
mov
ss
outsb
andb
and
mov
push
mov
or
xor
lods
andb
inc
add
dec
or
add
push
ret
nop
out
insb
inc
out
test
loopne
add
loopne
push
add
jg
testl
test
mov
pusha
enter
sbb
ds
adc
and
add
jmp
enter
pusha
lods
loopne
mov
sub
popf
mov
popa
sahf
adc
dec
xor
inc
lret
movntps
sbb
inc
pusha
dec
cld
test
loopne
inc
pusha
cmp
pusha
pusha
xor
inc
addb
rcrb
push
andb
nop
cmpsl
mov
dec
int3
xor
out
rol
lock
call
xor
and
adc
jmp
add
adc
cs
pusha
dec
std
data16
mov
sub
add
dec
mov
ficoml
aam
test
sub
inc
addr16
addb
push
rolb
jmp
rolb
daa
cli
adc
xchg
fs
mov
xchg
xor
sti
icebp
pop
or
shl
lea
dec
scas
or
test
inc
and
and
loop
sarb
add
shll
ljmp
std
push
pop
cld
das
mov
jp
pop
push
mov
jb
add
and
add
mov
fbstp
iret
jmp
sub
ja
repnz
xor
push
pop
or
ljmp
xchg
mov
rolb
call
pop
inc
and
adcb
outsl
es
shrb
data16
push
sbb
mov
mov
xchg
xor
repz
pushf
in
testl
repnz
adc
out
mov
repz
mov
and
lea
rcl
pop
adc
xor
xor
aaa
int
and
dec
aam
icebp
scas
sub
shlb
out
ret
sbb
cmp
pusha
jl
addb
or
lods
pop
sub
andb
stc
mov
out
rcll
sti
fidivs
mov
dec
xlat
les
sub
mov
call
pop
int
sbb
xchg
scas
movl
movsb
and
xor
fcomip
mov
inc
jl
cmp
pusha
pusha
mov
les
sub
inc
xor
loope
or
xchg
inc
shlb
inc
xchg
adc
and
inc
pusha
and
or
mov
inc
mov
int3
and
loopne
andb
and
inc
loope
roll
inc
mov
movsb
add
clc
scas
sub
pusha
rcrb
mov
inc
and
nop
pop
daa
lds
inc
loope
xchg
mov
idivb
inc
loop
pop
sbb
push
push
loope
rolb
insl
repnz
push
fxch
cmpsl
ja
or
pushf
hlt
pop
mov
shlb
nop
pop
pop
test
mov
lret
push
dec
dec
or
sbbb
lret
leave
sarb
xchg
jb
lret
sub
cli
js
imul
ljmp
mov
mov
mov
ja
xor
lods
inc
mov
lock
push
xlat
adc
popf
fildl
pusha
loopne
sbb
je
dec
mov
pusha
shl
push
mov
rcrl
mov
movsb
inc
pusha
dec
fwait
addr16
mov
sbb
inc
xchg
popa
rorb
lret
in
jmp
roll
andb
test
sbbb
movsl
mov
adc
cmp
jbe
shl
adc
out
scas
mov
pop
nop
loope
andb
add
push
out
fs
movsl
lds
jo
call
ds
xchg
mov
mov
repnz
mov
and
add
dec
mov
adc
or
mov
bound
and
xchg
or
add
test
inc
sbbb
loopne
inc
inc
insb
jbe
outsb
addb
mov
push
fimull
and
cmc
sbb
cmp
inc
xchg
shlb
inc
pop
je
jae
insl
iret
iret
push
cltd
mov
sti
ret
in
add
xor
add
xchg
dec
orl
or
adc
std
xor
sub
rcrb
mov
ja
dec
mov
cld
les
mov
loopne
mov
andb
lock
inc
and
fwait
sbb
adc
shr
or
lahf
push
aaa
mov
cltd
ret
data16
mov
add
bound
jae
xorps
fists
rolb
dec
push
repnz
and
repz
cmc
inc
dec
out
mov
push
fldt
push
mov
addb
scas
pusha
pusha
push
xor
fistpll
and
xchg
lret
icebp
insb
loopne
xchg
arpl
mov
fucomp
ret
sbb
ljmp
jo
xor
loopne
jne
xchg
cmp
mov
sbb
nop
fmull
andb
add
adc
mov
push
mov
sub
cmpsl
ljmp
and
and
sbb
fdivrl
adc
jb
pop
subl
mov
pusha
jg
cli
hlt
je
out
outsb
scas
and
pusha
dec
mov
push
ficoms
icebp
jns
rolb
add
and
andb
mov
pusha
loopne
test
mov
movsb
and
xchg
pop
xchg
cld
xlat
mov
mov
cmc
sbb
add
jg
cld
repnz
lods
addb
xchg
push
mov
loope
sbb
movsl
jmp
rolb
dec
xchg
and
push
pop
popf
jp
mov
out
fldcw
add
mov
xor
lcall
jmp
adcb
add
mov
jp
cmp
int3
addr16
cwtl
pop
pop
cmpsl
insb
cs
addb
loopne
movsl
lret
push
sahf
inc
sbb
xchg
test
mov
cwtl
fs
shll
push
pop
repnz
shl
addr16
dec
test
mov
loopne
rolb
sbb
pusha
add
mov
add
or
inc
test
loopne
push
add
adc
lahf
mov
shlb
push
cli
into
scas
xor
xor
icebp
dec
xorl
lods
shlb
sti
shl
xor
or
pusha
mov
and
repz
add
add
lods
inc
mov
jmp
jns
into
aas
push
sahf
repnz
cmc
movsl
mov
dec
repz
inc
icebp
or
mov
mov
or
cmp
je
push
insl
xlat
mov
pusha
loopne
push
add
ljmp
mov
cld
aad
pusha
and
cmpsb
inc
add
mov
loopne
and
shrb
jae
sbb
cmp
mov
xor
and
loopne
cmp
rolb
mov
ds
arpl
jo
dec
ljmp
sbb
pushf
repz
mov
cmc
stos
add
and
push
mov
rcrl
adc
mov
insl
jg
xchg
adc
inc
xchg
mov
arpl
mov
loopne
mov
insl
sub
mov
mov
cmc
out
add
pusha
fsubr
mov
orb
movsb
loopne
or
pusha
or
sbb
out
cmp
loopne
inc
mov
jne
add
subb
loopne
or
ja
cmpsl
into
xchg
loopne
ret
notl
frstor
movsl
mov
mov
outsb
pushf
loopne
pusha
mov
dec
mov
pusha
loopne
push
iret
dec
sbb
sbb
sub
gs
xor
test
loopne
and
add
adc
push
sbb
sbb
add
test
shl
gs
stc
repz
andb
sub
mov
and
addl
add
repz
and
add
pop
cmp
cmp
mov
out
fucom
and
loopne
jae
mov
ss
pop
push
loope
mov
mov
loopne
jge
out
add
inc
push
or
add
bound
mov
add
or
pop
pop
nop
cmp
shll
cmpb
daa
aaa
stos
pusha
subb
inc
inc
mov
loop
hlt
mov
in
xor
cmp
imul
decl
stos
add
rclb
xor
cmp
mov
xchg
repz
imul
rolb
jmp
xchg
inc
xchg
sub
andb
leave
lods
loopne
xchg
dec
stos
inc
loopne
adc
or
add
fidivrs
jb
and
shlb
push
cmpsb
pusha
inc
mov
pusha
mov
aas
push
add
mov
repz
xchg
scas
xlat
lret
lds
mov
or
sbb
ss
inc
loopne
and
mov
jmp
mov
mov
repz
shl
in
mov
adc
iret
test
loopne
xchg
icebp
enter
adc
pusha
fistl
in
lcall
adc
sub
test
popf
sarb
test
pushf
lcall
sub
cmp
and
ror
xchg
iret
sar
std
jle
dec
sti
push
lcall
pusha
jno
sbb
loopne
in
rcll
cld
lods
mov
adc
out
loopne
in
mov
add
ja
mov
cmpsb
loopne
jno
pop
cmp
jmp
mov
ljmp
cmp
jns
mov
mov
testl
stos
inc
mov
add
stos
or
pusha
jns
sub
maxps
je
mov
push
movsb
loopne
das
mov
int
int3
dec
mov
dec
jmp
xchg
rorb
std
inc
inc
aaa
pop
cmpsb
addb
mov
and
inc
pop
lret
mov
imull
enter
loopne
sub
sahf
dec
pmaxsw
loope
clc
mov
cmpsl
test
mov
jle
and
int3
cli
sub
pusha
out
pop
mov
mov
in
or
push
dec
inc
jmp
inc
les
and
add
add
ds
daa
leave
mov
sub
andb
dec
ret
out
imull
pop
hlt
cltd
inc
inc
pop
and
insl
pusha
out
fstpl
inc
pop
sub
pop
fwait
dec
mov
push
aam
pop
inc
xor
inc
loop
and
sub
xchg
lock
xchg
andb
push
jae
or
rolb
mov
aas
les
and
jno
jbe
add
rcrl
fldt
andb
jne
and
test
repz
cmp
adcb
adc
mov
movsb
andb
sub
lcall
or
inc
lock
and
mov
mov
stos
rclb
nop
ss
xchg
mov
fisttpll
xchg
shrb
cltd
subps
and
inc
xchg
imul
mov
mov
cmpsb
and
rcrl
loopne
lods
rorb
dec
lock
add
cmp
fsub
shrl
rcrb
cmp
adc
and
pop
aam
mov
imul
adcb
insl
adc
mov
andb
lret
sub
push
jae
pop
fwait
mov
ret
mov
into
pop
xchg
push
mov
movsb
inc
inc
mov
loopne
lahf
pop
sti
ds
pusha
inc
andl
jne
adc
or
and
mov
push
popa
popa
bnd
in
mov
or
push
mov
inc
lock
jne
sub
xchg
cmc
int
shll
rorb
cltd
mov
cmp
inc
or
loopne
pusha
add
loopne
mov
push
add
add
stos
inc
scas
shlb
push
xor
mov
lret
fadd
scas
jp
sbb
jne
push
les
loopne
repnz
pusha
aaa
dec
clc
dec
test
loopne
int
add
and
pop
stos
sub
enter
outsb
fldl
xchg
push
mov
call
shrb
cwtl
ret
cltd
loop
andb
xor
jmp
sub
pop
push
lods
andb
lea
cmp
inc
pusha
shrl
dec
push
je
add
sbb
xlat
shll
jb
mov
mov
int3
xor
pusha
loopne
ficoms
js
adc
mov
xor
rclb
mov
pop
adc
mov
push
pusha
shr
loope
rclb
adcl
xor
js
dec
andl
mov
ljmp
pusha
xchg
fldl
push
jl
adc
add
dec
lods
loopne
stos
notl
pushf
cmp
dec
sub
sahf
dec
cltd
ljmp
mov
inc
fs
mov
mov
jns
out
leave
xchg
pop
outsl
testb
andb
pushf
insb
pop
jns
pusha
das
xor
andb
repz
out
jno
inc
cmp
ret
imull
dec
cmp
flds
xchg
cmp
dec
push
fdiv
sub
loopne
fstl
xor
dec
sbb
pop
push
or
and
inc
mulb
xchg
and
mov
cmpsl
xchg
adc
mov
xlat
ficomps
dec
sub
mov
add
loopne
imul
mov
inc
and
adcb
adc
adc
mov
das
push
popf
push
and
mov
push
ljmp
mov
scas
and
xor
fbld
inc
and
mov
data16
cmp
pop
mov
int3
push
push
sbb
loopne
jnp
and
or
mov
lcall
js
in
adc
mov
sahf
ja
jg
popa
jne
cmc
andb
loopne
mov
sar
cltd
cltd
int
mov
dec
jecxz
loop
mov
aam
andb
inc
jge
dec
adc
add
xchg
inc
dec
pop
aaa
insl
jae
pusha
pusha
and
inc
add
mov
xchg
pop
sbb
sti
xchg
imul
xchg
jl
je
scas
sbb
push
jp
lahf
pop
arpl
push
mov
mov
add
mov
or
add
and
pushl
adc
stos
pusha
mov
push
fnstcw
in
loopne
mov
inc
inc
shlb
cmpl
inc
add
jb
sarb
loopne
shlb
in
dec
jl
pop
xchg
fnstsw
add
mov
je
mov
jp
outsl
ljmp
addb
jle
cmp
loopne
call
and
sbbb
mov
pop
mov
lea
jns
loop
cmpsl
jae
xorl
bound
jge
jge
and
insl
dec
pusha
pop
nop
shrl
and
mov
xor
ja
sbb
nop
or
add
push
lret
xchg
fnsave
loopne
cmp
xor
aaa
mov
loopne
popf
jp
mov
mov
loopne
les
inc
mov
shl
jg
dec
insb
inc
add
xchg
nop
insb
or
popf
not
dec
add
lcall
and
xchg
in
cmp
ja
and
int3
aad
add
mov
out
mov
xchg
or
loopne
push
mov
cmc
mov
in
addb
pop
lock
repnz
add
rol
fwait
mov
mov
loopne
fmull
and
mov
ljmp
push
and
mov
add
or
lret
loopne
sbb
lahf
in
pop
mov
xchg
and
push
add
xor
inc
enter
test
and
push
push
adc
shlb
test
cmp
jge
dec
xor
ljmp
sbb
lea
push
testb
push
cmpsl
mov
mov
mov
add
dec
cmp
into
roll
fcomps
mov
cmp
shlb
movsl
mov
aam
pusha
and
pop
stos
mov
rol
fnstsw
jmp
rcrl
shrb
jb
lods
shlb
lods
cmpsb
addb
andb
lock
xor
das
andb
cmp
and
inc
and
add
xor
dec
jg
jge
pop
mov
pusha
int
daa
mov
adc
leave
push
sbb
sahf
inc
sbb
adc
movsb
pusha
pusha
jmp
bound
push
inc
cmpsb
shlb
pusha
loopne
imul
lods
outsb
or
lahf
imul
test
in
out
mov
or
rol
lock
test
orb
es
mov
mov
add
add
inc
pusha
movsl
lea
sub
rolb
push
rorb
mov
daa
inc
out
sti
popf
not
jg
outsl
cmpsb
loopne
or
mov
loopne
test
scas
imul
daa
xor
pop
mov
cmc
push
sbb
pop
and
add
lods
rcr
and
sbb
push
add
add
sbb
pop
mov
imul
popa
jmp
dec
mov
cmpsl
xchg
jmp
sbb
fisubs
rorb
faddl
xchg
add
and
xor
daa
mov
loopne
mov
cmp
pop
arpl
mov
cmc
outsb
adc
insb
mov
cli
fdivl
and
mov
rcrb
andb
mov
sbb
pop
mov
add
xchg
jl
push
mov
es
rolb
add
mov
out
rcrb
cmp
mov
push
jle
or
dec
mov
inc
lret
add
test
inc
lret
pushf
into
enter
out
sbb
in
and
inc
sub
cmc
stos
inc
mov
cmp
xor
shl
rcl
or
loopne
pop
aad
fnsave
pop
xchg
sub
cmp
pusha
adc
pop
push
out
jecxz
xor
scas
add
fxtract
test
rolb
sbb
ja
call
and
hlt
and
and
jle
mov
addb
cmp
jmp
pusha
mov
cmc
inc
int3
xor
nop
lahf
pushf
rcrb
or
inc
addr16
sarb
mov
and
xor
mov
adc
inc
orb
mov
lods
and
or
shlb
pop
pop
outsl
stos
mov
inc
cmpxchg8b
iret
jge
stos
and
sub
pusha
inc
pushl
dec
lods
mov
insl
movsb
shlb
rolb
and
adc
loopne
jmp
push
sub
movsl
push
gs
and
mov
pusha
cli
out
cli
shl
xor
test
xorb
inc
inc
sub
and
mov
mov
inc
push
imulb
pop
loope
pop
push
aad
sbb
mov
arpl
push
arpl
or
and
loopne
loopne
data16
mov
xchg
add
mov
and
mov
jne
cmpsb
shl
dec
and
subb
xchg
fisubl
mov
xchg
sub
pusha
mov
imul
and
addr16
fwait
pop
out
repz
stos
adc
scas
jbe
das
int3
js
mov
addb
xor
mov
sqrtps
loopne
inc
xchg
call
loopne
mov
add
stc
js
loopne
xchg
scas
cmp
push
adc
andb
mov
push
lcall
add
sbb
push
push
mov
sbb
arpl
and
in
mov
mov
jge
adc
jbe
push
ret
xchg
addb
and
out
js
ds
or
inc
mov
add
rol
in
mov
jne
sub
iret
jb
es
sarb
icebp
cltd
icebp
and
pusha
rcl
pusha
and
xor
and
mov
jb
imul
mov
aas
fidivs
sbb
dec
pop
or
sbb
sbb
fwait
xchg
fsubl
jecxz
xchg
aas
rorl
mov
enter
and
xor
subl
mov
mov
xor
outsl
sbb
shlb
insb
inc
sub
loopne
mov
imul
adc
pop
push
add
push
je
stos
jge
sti
test
xchg
adc
cmp
test
negl
inc
rol
bound
adc
outsl
adc
in
ret
sbb
loopne
daa
jge
sub
lret
sbb
push
outsb
ja
stos
cmp
mov
adc
xor
inc
addb
popf
dec
xlat
adc
lock
mov
sbb
into
lods
rolb
gs
mov
and
push
enter
mov
repnz
mov
dec
xor
notl
scas
and
adc
leave
xchg
negb
jne
xchg
pusha
jle
dec
shr
add
fnstcw
out
repz
inc
lcall
pusha
and
rorb
shll
rclb
jecxz
mov
pop
pop
push
lahf
cmpl
pop
out
and
std
ss
shrl
add
mov
loopne
push
xorl
inc
inc
adc
out
xlat
push
and
add
divl
imul
lret
add
cmp
lock
push
adc
repz
jg
repz
mov
mov
in
loopne
in
jge
rorb
sub
add
mov
data16
mov
dec
pop
ljmp
andb
loopne
mov
jnp
inc
enter
addb
inc
lock
lcall
fidivrs
jmp
add
fst
mov
or
mov
loopne
aad
addb
idivb
mov
adc
inc
and
xor
je
scas
lods
and
jle
rol
movsb
loopne
mov
add
xchg
jmp
jns
push
adc
add
loopne
mov
jle
lret
cltd
rol
cmp
mov
loopne
xchg
std
aas
push
je
jnp
sbb
jo
dec
mov
adc
enter
add
add
ss
pusha
add
xchg
and
iret
fcompl
data16
xchg
faddl
arpl
sub
jmp
pop
stos
dec
out
dec
mov
and
pop
push
mov
fucom
add
loopne
nop
push
movsl
xchg
and
test
sbb
and
loopne
icebp
sub
mov
pop
inc
cmp
loopne
je
jb
mov
and
jno
fwait
or
xor
iret
xchg
aad
in
pop
loopne
repz
out
fisttps
div
movsl
int
cmpsb
add
inc
arpl
push
inc
add
mov
mov
mov
push
ss
inc
mov
inc
cmp
sti
jbe
adc
popf
repz
outsl
addb
inc
and
enter
leave
pop
leave
shr
sahf
clc
adc
jbe
mov
mov
je
sbb
lret
or
push
mov
or
rorb
inc
mov
cmp
fisttpll
test
loopne
dec
adc
or
and
or
jo
pop
add
mov
and
adc
or
subl
or
mov
inc
mov
sub
pusha
mov
push
call
xchg
xchg
jno
rolb
inc
mov
call
fwait
adc
inc
xor
pop
pop
push
mov
jle
and
call
inc
out
pinsrw
mov
inc
mov
jb
out
jns
imul
push
or
dec
and
inc
movsb
and
inc
pusha
xchg
and
inc
xor
int3
jg
faddp
lahf
dec
ja
push
mov
mov
and
and
or
loopne
inc
mov
xchg
jns
cmp
mov
and
pusha
cmp
mov
test
cltd
leave
ja
cld
inc
dec
fcmovnb
mov
pop
movsb
addb
mov
xor
jnp
jae
pop
lds
shrb
add
and
cmp
loopne
fwait
jle
push
mov
and
addr16
lods
mov
fistpll
dec
lret
movsb
pusha
inc
push
pop
inc
ss
xchg
mov
sub
pop
mov
pop
jae
popa
into
pushf
add
std
pop
or
add
pop
and
push
es
add
fcmovb
cmp
cmp
orl
out
sub
and
sbb
ss
loope
movsb
loopne
add
clc
shll
dec
mov
and
fwait
sbb
sbb
dec
adc
loopne
rolb
bound
lret
fidivrs
rolb
sub
and
push
mov
pop
dec
mov
add
xor
test
loopne
inc
xlat
in
push
repz
out
mov
loopne
in
mov
ret
push
jns
loope
jbe
ss
icebp
sbb
sub
mov
leave
add
repnz
push
and
dec
mov
ds
add
inc
test
cmpsl
mov
mov
cmp
out
pushf
dec
add
adc
and
mov
mov
or
shll
rcrb
mov
movsb
addb
negl
push
mov
andl
pusha
inc
push
lods
or
inc
inc
jnp
mov
add
dec
out
sub
mov
popa
daa
iret
adc
lods
sub
shl
or
outsb
mov
adcb
add
xor
cld
das
lods
cmpsb
pusha
mov
mov
dec
ljmp
loopne
cmpsl
mov
and
dec
and
clc
push
icebp
push
mov
lret
inc
adc
mov
jge
aad
icebp
cld
adc
lods
shll
ficomps
addb
mov
mov
dec
popf
cld
inc
jg
shlb
cmc
pop
xchg
outsl
aad
inc
mov
lahf
mov
stc
sub
loop
and
stos
push
sub
loopne
cwtl
adc
jnp
inc
adc
loopne
pop
xabort
mov
and
in
loope
int
cmc
sahf
popf
jp
std
fcompl
movb
push
mov
and
repnz
loope
mov
xchg
fs
movsl
add
aas
dec
fwait
xor
rol
addr16
xchg
andb
into
lods
aam
adc
adc
iret
sub
repnz
enter
inc
jp
dec
aad
and
hlt
fdivrl
and
inc
fnsave
sub
test
loopne
psraw
shlb
pcmpeqb
icebp
sub
push
and
fcomps
push
stos
inc
shl
inc
loopne
rol
dec
aas
clc
or
rorb
and
cmp
test
loopne
push
xchg
leave
xor
repnz
add
loopne
jle
scas
and
sub
lds
andb
js
loop
xor
mov
push
fwait
shrl
inc
and
xchg
pop
adc
inc
sbbb
push
in
in
je
inc
mov
ficomps
pusha
or
and
push
inc
inc
in
insb
push
or
mov
daa
sbb
add
xorl
iret
cmpsb
and
fwait
in
pop
add
rorb
loopne
and
sbb
mov
ds
cli
inc
inc
mov
adc
mov
inc
adc
push
loopne
dec
ss
popf
cmpsl
xchg
inc
push
lods
push
mov
fists
jge
stc
dec
lahf
add
hlt
mov
icebp
cmc
xchg
jmp
add
test
jne
into
lcall
cmpsb
andb
sub
dec
sub
push
inc
andb
hlt
mov
stc
loopne
js
push
add
mov
addb
fcoml
andb
pop
or
adc
shlb
xorb
dec
xchg
out
sbb
out
cmp
cmp
push
addb
out
and
dec
out
call
jbe
je
push
mov
loopne
shl
inc
loopne
cmpsb
inc
loopne
mov
pusha
add
dec
and
out
sbb
add
shlb
and
fs
mov
jo
cmpsb
inc
loopne
inc
sub
and
rcll
jno
pop
rolb
add
and
pushf
je
cmp
mov
add
lret
jno
repz
out
pusha
pusha
dec
push
lahf
arpl
clc
leave
loopne
pop
pop
adc
fidivl
fnstcw
jae
mov
inc
stc
pop
push
ja
cs
loopne
cmp
repz
push
pop
cmc
adcl
fistpll
arpl
filds
movsb
shlb
and
inc
dec
loope
lcall
test
rolb
fiadds
lock
ffreep
loop
mov
loopne
xchg
gs
fcmovu
lock
fsubrs
inc
dec
dec
jno
push
and
jl
add
pusha
add
xchg
movsb
addb
lods
addb
mov
aas
and
mov
shlb
aas
xchg
shlb
cmp
scas
loopne
dec
fwait
pushf
outsl
notl
mov
mov
into
and
and
push
xor
inc
add
fbld
add
add
addb
mov
sbb
and
aas
lods
sahf
add
clc
lahf
adc
addb
test
or
addb
fisttpl
or
mov
xor
xchg
insl
adc
push
in
into
hlt
xchg
jle
fldt
nop
add
shlb
adc
sti
pop
les
sub
sbb
add
cmp
sub
loopne
sarl
push
mov
xchg
ljmp
add
shl
lods
and
test
sbb
pushf
out
mov
and
out
fildl
sarb
bound
les
mov
jl
imul
push
mov
add
pusha
imul
daa
arpl
test
jmp
dec
inc
outsb
pop
xor
fnstenv
pushf
jle
call
pop
pusha
imul
mov
and
inc
pop
insb
test
mov
fstpt
fisttpl
std
jle
dec
mov
nop
dec
repnz
testl
add
and
add
dec
sbb
in
fnsave
xchg
xchg
xor
pop
in
aas
dec
jl
bound
decb
bndstx
movsb
loopne
jmp
add
add
and
jns
into
pop
lret
push
jg
cmpsb
loopne
pop
in
push
mov
testb
jp
loopne
mov
pusha
mov
xchg
mov
or
inc
and
or
mov
in
outsb
jg
cltd
addr16
cli
or
add
fnsave
sbb
lds
mov
pusha
rorb
rolb
fwait
outsb
jae
rorb
rorb
popa
pop
sub
pusha
clc
loope
pusha
add
and
icebp
cmpsb
pusha
shlb
fimuls
out
cmp
dec
aad
test
shl
mov
rolb
mov
and
pop
imul
mov
leave
or
pusha
loopne
insl
in
mov
leave
lds
mov
inc
xchg
add
pusha
jo
daa
in
jl
cmpsb
add
insb
not
dec
dec
pop
cltd
pop
lret
ljmp
mov
jp
jle
cltd
cmp
adc
inc
aam
push
add
mov
mov
rcrb
dec
jb
dec
mov
outsl
push
cmp
int
add
jmp
xchg
test
pusha
mov
mov
add
andb
notl
or
dec
int
or
mov
inc
shlb
rorb
sub
lods
es
lods
add
out
sub
inc
imulb
mov
test
add
test
test
ror
pusha
xor
test
fdivrl
pop
fcomi
movd
fucomp
aas
or
loopne
adc
push
jae
dec
or
xchg
xchg
shrb
add
loopne
rcrb
xchg
push
adc
aaa
jg
and
add
xor
iret
push
mov
lret
mov
xchg
stc
pushf
fstps
inc
shl
pop
mov
jo
xchg
shll
adc
out
fs
jb
loop
test
sbb
mov
xchg
lds
add
lea
inc
loopne
cmp
scas
pusha
and
push
sub
mov
cmc
xor
aas
and
add
push
xlat
cwtl
push
inc
mov
addb
icebp
int
add
fcoms
xchg
sbb
in
out
add
push
fprem
dec
sbb
jle
pop
mov
mov
adc
mov
pusha
insl
sub
addb
loopne
and
add
mov
xor
fmuls
fmuls
and
mov
inc
inc
ljmp
rcl
cmp
sub
jo
mov
pusha
jecxz
loopne
mov
jg
and
aad
mov
sub
loopne
inc
adc
out
mov
movsl
mov
dec
dec
scas
mov
add
mov
sarl
bound
ret
loopne
sbb
pusha
xchg
xchg
sarb
inc
and
add
mov
and
andb
mov
daa
in
shr
push
mov
ret
movsl
popa
mov
inc
imul
pushf
sarl
mov
mov
loopne
pop
pop
icebp
adc
push
xchg
outsl
push
add
cmp
mov
pop
nop
ficompl
push
dec
decb
jmp
inc
xor
rolb
ja
push
add
repz
add
shlb
addb
adc
shlb
loop
fwait
pushf
dec
add
inc
inc
xorl
add
add
out
or
mov
add
or
loopne
adc
mov
push
inc
jns
mov
xor
mov
push
mov
out
sub
fsubrp
dec
insl
add
outsb
inc
jne
pusha
andb
cmpb
loope
add
pusha
addb
mov
cltd
mov
add
sub
test
or
push
sbbl
std
outsl
out
mov
add
ret
loopne
bound
sbb
ds
movsb
pusha
mov
rclb
bound
fistpl
add
je
loopne
mov
sbb
imul
rolb
xor
mov
push
out
fcmovnu
in
andb
pop
iret
movsl
gs
jle
xlat
inc
add
repz
dec
imul
or
loopne
lea
inc
mov
mov
cmp
add
pop
mov
xor
aam
jne
mov
pusha
add
rol
cs
pusha
cmp
add
loopne
add
cmp
pop
lahf
xchg
stos
pop
or
mov
pusha
lea
icebp
scas
stc
insl
jae
imul
orl
mov
addl
mov
add
push
movsb
loopne
iret
adc
hlt
mov
jmp
pusha
orb
stos
stos
loopne
mov
mov
ja
mov
push
loopne
pop
sbb
pusha
gs
add
mov
imul
adc
sub
push
pop
aas
addb
ret
mov
pop
push
or
inc
pop
data16
int
xchg
jmp
loopne
mov
push
adc
out
push
shrl
inc
lock
into
and
sub
sarb
pop
fsubr
adc
pusha
and
test
jle
out
inc
add
sub
push
ret
inc
test
mov
rolb
cmpb
ss
cmpsl
mov
pusha
pushf
jg
cmpsb
addb
arpl
xchg
or
inc
pusha
lret
jns
sarb
jae
push
sbb
add
dec
jae
pop
jne
call
mov
pop
sub
test
add
mov
loopne
clc
ss
add
xor
cmp
add
push
dec
inc
int
sub
shrb
add
ficompl
ja
inc
add
stos
and
call
mov
pusha
and
mov
add
fstpt
xchg
jne
add
and
mov
stc
or
and
testb
int3
cmpsl
add
loopne
loopne
imul
push
jl
addb
and
mov
mov
adc
addb
xchg
loope
hlt
inc
daa
mov
or
andb
cltd
adc
test
sbbb
xchg
icebp
push
stc
insl
outsl
mov
loopne
jo
pop
xor
pusha
loopne
push
adc
mov
mov
test
and
in
sub
outsb
add
dec
into
imul
and
lock
xchg
jae
add
push
enter
dec
insb
mov
xchg
mov
inc
sub
cmp
es
in
push
jp
jl
cmp
notb
stc
or
loop
sub
aaa
sbb
cmp
addb
mov
int
mov
loopne
sub
pop
mov
lods
pusha
mov
cmc
lods
push
sbb
sbb
js
push
movb
ja
std
cmpsb
and
repz
insb
xchg
lods
add
add
orb
andb
loope
and
inc
mov
and
push
lret
mov
and
orb
pusha
cwtl
mov
mov
xchg
pushf
push
stos
push
movsl
int3
imul
cmpsl
int3
fsubrl
addr16
add
daa
out
pop
xchg
in
fiadds
add
mov
adc
push
fsubrs
pusha
add
loopne
inc
lret
mov
sarl
add
gs
pop
and
and
mov
and
lods
mov
fstl
sub
in
add
mov
jns
pusha
subb
jno
push
and
add
jg
pusha
jns
scas
or
test
inc
lds
pusha
pusha
inc
mov
rolb
inc
push
adc
add
cmp
insb
dec
push
and
loopne
mov
iret
push
pop
gs
out
mov
push
mov
loopne
aam
loop
pop
jae
pusha
loopne
nop
orl
push
add
push
mov
int
push
int3
das
ret
ret
dec
loope
popf
gs
adc
fisubl
pusha
mov
xor
or
aad
mov
add
sub
cmp
mov
mov
pusha
adc
repnz
sub
movaps
rcrl
dec
imul
mov
jnp
pusha
mov
ret
xorb
sub
repnz
mov
data16
call
pop
sbb
jne
shl
mov
lea
mov
jns
addr16
loopne,pn
loop
rolb
dec
enter
xor
addb
add
cmc
divb
sahf
testl
loopne
add
loopne
inc
jp
and
mov
adc
mov
ss
mov
inc
mov
or
mov
and
pusha
leave
sbb
pop
add
addb
stos
pusha
loopne
testl
push
mov
gs
repz
fmulp
adc
stc
push
xchg
and
loopne
inc
inc
clc
lret
out
mov
test
add
lcall
xchg
outsb
pop
hlt
jo
insb
fwait
pop
xchg
cmp
mov
and
sbb
shlb
loopne
inc
jne
xor
loopne
xchg
pusha
cmp
sbb
add
pusha
rclb
loopne
loopne
stc
fwait
sarb
cmp
jbe
pop
mov
sub
rcl
js
pop
sub
dec
flds
inc
ss
fsub
mov
andb
cmp
in
cmc
cwtl
push
aaa
mov
out
and
mov
pop
rcl
push
and
and
mov
sbb
jbe
shlb
xlat
pop
xor
stos
and
loope
sbb
shrb
imulb
xor
fs
sbb
inc
mov
pop
and
jae
push
mov
mov
clc
out
imull
addb
jge
div
in
out
push
and
or
pusha
or
aaa
or
pusha
clc
int3
jo
mov
add
mov
pop
arpl
cmc
das
popf
out
jo
and
mov
stos
mov
repnz
add
dec
xor
jge
lcall
stos
and
adc
sbb
lcall
xor
ja
sub
pusha
and
or
sub
mov
andb
adcb
pop
mov
push
pop
mov
mov
sub
mov
loopne
cmp
or
aad
and
and
cld
call
jmp
jae
push
mov
add
mov
and
int
xor
pusha
mov
and
nop
ljmp
test
mov
dec
aas
lcall
push
in
jecxz
inc
inc
fdiv
mov
std
mov
cmc
mov
outsl
push
andb
adcb
lods
jns
loopne
adc
dec
pop
sub
inc
jmp
mov
adc
out
inc
fstp
dec
pop
xchg
test
int3
jne
mov
pusha
jno
inc
adc
sub
fs
add
xorb
and
mov
shlb
pop
flds
dec
repnz
add
sbb
aas
sbb
lcall
dec
mov
pusha
shr
mov
and
imul
jns
and
and
movsb
pusha
andb
mov
xchg
repnz
mov
insl
lock
xchg
add
and
add
add
rcrl
sbb
aas
addb
andb
mov
sti
sub
mov
sahf
rclb
aaa
jl
cld
fwait
jp
sbb
and
jge
shl
xor
mov
xor
fidivrs
xchg
mov
pop
mov
and
repnz
pop
insb
jle
jmp
add
push
mov
loopne
mov
mov
sub
loopne
shlb
mov
addb
xchg
cmp
or
xchg
xor
mov
mov
cmc
cmc
jle
jg
pusha
rcr
clc
scas
andb
jle
adc
rol
jle
outsl
scas
rolb
mov
out
push
xor
pop
ret
xor
mov
inc
sbb
sub
rcrb
andb
into
push
mov
ficoml
add
pop
xor
and
sub
add
dec
scas
hlt
push
inc
rolb
lahf
mov
repz
dec
clc
ljmp
lds
xchg
mov
inc
js
scas
loopne
addb
fcmovne
bound
and
andb
lods
loope
and
mov
in
inc
push
movsl
insb
add
and
inc
push
mov
lret
fwait
mov
movsl
fwait
movsb
andb
sbb
or
loopne
rolw
shlb
add
aam
pop
pop
lds
mov
shlb
test
mov
mov
fsubs
xor
and
call
mov
inc
or
rcrb
lret
in
frstor
cmpl
pop
mov
hlt
jecxz
pop
into
mov
aaa
adc
jbe
sub
or
fdivs
cli
shl
or
fcmovu
stc
mov
lea
icebp
int3
mov
into
mov
rcr
pusha
js
rcrl
cmp
cltd
jns
rcll
xchg
loop
sbb
dec
fbstp
mov
xor
dec
iret
cmp
out
ds
hlt
cld
divb
xchg
test
add
mov
jae
loopne
aaa
jl
and
and
xor
mov
addb
mov
sti
in
and
pusha
lds
pusha
add
and
pushf
insl
in
and
xchg
and
mov
mov
orl
or
rorb
stc
xchg
or
mov
jge
push
mov
fs
lahf
test
daa
ds
and
pusha
add
cli
jmp
and
inc
int3
or
pop
dec
lock
roll
into
pop
sbb
popa
test
and
push
inc
fsubs
cltd
repnz
pop
pop
loop
cli
in
pop
adc
jae
leave
andb
shlb
sbb
xor
and
mov
push
andb
call
sbb
and
and
sti
mov
int3
outsb
pusha
in
pop
pop
sub
and
cli
cmp
xchg
add
mov
cs
inc
pop
jo
cli
lds
stc
pop
cmpsl
sarl
pushf
inc
addr16
cmpb
loopne
jno
outsb
or
push
je
xor
xchg
push
sbb
mov
andb
cmp
pusha
add
xchg
mov
mov
and
test
mov
imul
shll
pop
jmp
xor
mov
popa
movsb
mov
ljmp
lds
rorb
loopne
movsb
add
loopne
xor
loop
dec
lea
mov
and
stos
add
or
and
cmp
fcoms
mov
cmp
mov
mov
add
pop
dec
clc
clc
add
add
jbe
addb
aam
loope
fsubl
andb
dec
add
and
sub
and
xchg
mov
add
add
orb
bound
loopne
dec
sarb
scas
lods
loop
addb
addb
cmp
aas
push
pop
pop
mov
or
or
inc
fnop
adc
test
pusha
push
xchg
mov
outsl
add
ret
fistpll
loopne
pop
jp
cmp
inc
rclb
sahf
and
xor
pusha
pop
push
adc
sbb
mov
xchg
test
add
int3
mov
cmp
daa
lock
mov
out
or
inc
pop
fdivrp
sub
inc
popf
jp
std
les
fst
cs
and
das
or
push
and
lods
mov
or
push
outsb
mov
add
pusha
addb
stos
mov
loopne
fnstenv
jg
sub
ret
leave
inc
xor
imul
sbb
mov
hlt
jns
jo
jo
mov
loopne
fidivl
adc
cltd
xchg
jo
std
push
mov
dec
and
testb
ljmp
xchg
jp
gs
inc
push
in
std
mov
cmpl
ds
push
loopne
pusha
ret
or
clc
mov
shlb
xchg
mov
loopne
dec
adc
add
mov
stos
push
dec
lcall
sbb
dec
shrb
mov
mov
imul
scas
pusha
and
dec
or
pusha
xchg
mov
outsl
outsb
xor
andb
scas
and
jg
sbb
add
sahf
rcll
loopne
dec
or
xchg
add
loopne
ds
xchg
lock
cltd
adc
xadd
sarb
inc
cmc
sbb
lds
jae
jo
and
add
or
lock
in
lea
mov
xlat
mov
xchg
ljmp
rolb
addb
addr16
imul
add
mov
sbb
pop
add
ftst
xor
push
jo,pt
mov
loope
ljmp
orb
std
cmpsb
mov
pop
sub
pop
lods
mov
and
shl
inc
pusha
int
outsl
xchg
mov
push
ss
aad
jne
jle
mov
add
jecxz
popf
push
pushf
add
cmp
push
inc
fcomps
icebp
mov
stos
dec
inc
rol
pop
mov
lea
and
lcall
mov
mov
mov
mov
jmp
ret
cmp
pusha
outsb
inc
jnp
shrl
movsl
mov
aaa
mov
inc
je
adc
lods
inc
ror
testb
and
dec
mov
mov
mov
mov
add
add
addb
inc
pop
jns
dec
or
pop
mov
xchg
pop
jl
mov
xchg
jne
data16
scas
stos
pusha
mov
cmp
in
and
fstpt
mov
add
fsubrl
pop
inc
xchg
in
in
loope
lods
rolb
fwait
sbb
popf
xchg
sbb
jns
dec
sarl
mov
loopne
jle
inc
loopne
inc
sti
adc
and
dec
fwait
in
jl
mov
imul
xlat
cmpsl
jecxz
jl
dec
push
pop
fsubs
add
addb
mov
shlb
loope
pusha
adc
cli
adc
add
push
movsl
mov
mov
pushf
mov
pop
adc
fisttpl
imul
sub
repnz
xorps
push
dec
cltd
sbb
addb
adc
add
mov
jae
sub
dec
sbb
inc
pop
shrb
mov
mov
andb
sbbb
xchg
xorl
loopne
ret
loopne
cmp
xlat
jae
out
ljmp
shl
imul
addr16
cli
fstpt
pusha
mov
and
pop
xchg
icebp
jae
add
movsb
inc
rcl
ud1
pushf
mov
fs
add
adc
add
inc
pop
adc
mov
pusha
daa
fucomip
dec
out
sti
dec
out
rolb
jl
into
mov
and
mov
push
xchg
test
add
daa
pop
cld
nop
sbb
stos
push
in
insl
mov
test
push
inc
pusha
sbb
and
ljmp
cmp
bound
pusha
test
js
loopne
out
fisubrl
loope
and
sbb
shlb
andb
and
loopne
lcall
inc
lcall
ss
mov
pusha
lea
mov
mov
sbb
pusha
rclb
into
lods
add
test
lds
adc
xlat
repz
and
push
stc
addb
loopne
add
mov
es
xor
insb
std
push
cltd
ja
push
int
xor
rclb
shlb
js
ss
cmpl
mov
aad
aas
xlat
shll
ret
pop
mov
leave
sbb
roll
and
pusha
cli
fsubl
pushf
movsl
inc
test
pop
aam
lcall
pop
mov
xchg
stos
addb
aas
jecxz
scas
pusha
mov
enter
cmc
add
fldt
fs
dec
add
mov
mov
icebp
pop
jns
ss
or
sbb
sbb
jnp
pop
les
call
pop
scas
lcall
and
and
and
inc
add
and
xor
shrb
rcrb
xchg
into
push
cmp
outsb
fstl
mov
inc
jno
cmp
insb
add
addl
inc
xchg
xor
out
inc
jp
inc
fwait
sbb
addr16
loopne
dec
sbb
adc
xchg
jmp
xchg
push
inc
jno
adc
enter
popf
int3
or
pusha
and
pop
ror
sub
jmp
and
clc
imul
jo
and
push
cmp
hlt
sbb
mov
inc
shrb
aad
lahf
xlat
loope
mov
inc
rcrb
or
pusha
fwait
xchg
push
mov
and
jb
lret
outsl
inc
test
add
inc
add
sbb
std
enter
pop
xor
test
sbb
cwtl
test
adcb
cld
push
xor
std
mov
mov
add
in
inc
and
loop
cmp
and
fwait
in
sahf
xor
push
cmpl
lds
inc
mov
insl
stos
add
std
dec
cltd
pop
mov
dec
sahf
lock
dec
or
and
and
rclb
and
stos
cld
pop
adc
push
or
gs
pop
push
bound
mov
sbb
mov
dec
hlt
pop
flds
outsb
push
call
ret
sbb
lcall
adcb
and
jo
mov
std
lret
outsl
addb
adc
rcll
lods
push
xchg
insl
bound
js
mov
or
lret
jmp
inc
stc
jne
jne
and
shlb
add
cmpb
inc
adcb
xchg
mov
jecxz
add
ret
dec
push
xor
push
fs
and
rclb
hlt
lods
repnz
cmp
push
outsl
in
in
inc
and
add
mov
inc
lock
push
out
and
subb
loopne
inc
pusha
xchg
arpl
loopne
mov
shll
pinsrw
xorl
dec
mov
ja
push
add
pop
test
inc
mov
clc
mov
jp
aaa
and
mov
and
inc
clc
mov
addb
add
jbe
mov
sub
aas
jb
inc
rcl
aaa
add
and
cmpsl
cs
pusha
in
push
add
inc
mov
data16
std
push
sbb
inc
mov
nop
loopne
mov
or
mov
inc
rolb
add
addr16
mov
inc
xor
jecxz
mov
int
insl
scas
rolb
mov
and
cmpb
leave
or
mov
lret
pusha
int
mov
pusha
add
dec
mov
shlb
xor
icebp
data16
jbe
les
mov
mov
sub
and
pop
fdivs
lods
scas
incl
ljmp
ss
loopne
and
mov
rcrl
mov
loopne
adc
push
gs
das
stc
and
gs
movsl
cmp
faddl
add
bound
bnd
je
sti
pop
mov
add
mov
stos
and
loopne
pop
ljmp
mov
pop
push
inc
xchg
jbe
push
cmp
mov
pusha
loopne
xchg
aas
rclb
cs
inc
mov
push
loop
ds
and
repnz
shl
pusha
inc
lret
xor
fsubrl
add
and
mov
cmp
insl
les
aas
fsts
and
sbb
pusha
mov
or
pop
dec
lods
add
shll
mov
mov
rorb
push
shrl
add
loope
push
mov
or
xchg
push
addl
sarb
dec
jl
adc
add
shlb
fimuls
loop
test
ret
mov
sub
mov
inc
lock
pop
sbb
mov
mov
imul
aam
gs
pusha
add
loopne
adc
leave
xchg
dec
pop
outsl
push
sahf
mov
loopne
jmp
rolb
pusha
adcb
jg
shl
sub
adc
inc
loopne
jne
inc
mov
clc
orl
enter
fsubrs
push
rorl
mov
adc
rolb
and
dec
sub
add
lock
ja
sbb
lcall
rcrb
push
loopne
mov
inc
movsl
push
push
not
out
jne
mov
sbb
mov
and
stos
out
stos
shl
push
push
mull
push
and
das
sbb
mov
out
in
lcall
addb
in
jns
lcall
stos
xor
fildll
ljmp
loopne
aas
into
xor
andb
adc
addb
push
dec
mov
mov
jno
dec
mov
popf
call
and
loopne
pop
jbe
pop
adc
mov
push
mov
daa
repnz
nop
cwtl
adc
js
mov
mov
fwait
and
and
sub
pusha
jmp
in
add
mov
in
shll
jg
mov
orb
cmp
xchg
aaa
cwtl
arpl
push
jne
sbb
pop
jb
xor
cmc
xchg
mov
into
push
addb
push
pusha
inc
nop
add
adc
and
and
xor
pushf
jge
mov
cmp
pusha
icebp
or
ljmp
ret
pop
adc
mov
add
xor
inc
loopne
insl
sub
dec
mov
push
mov
and
movsb
add
mov
scas
inc
and
aam
mov
ss
pusha
inc
fdivr
sbb
pusha
add
loopne
and
push
and
fcmovnbe
fidivs
jl
jo
fistpl
inc
mov
inc
int
pop
and
cmpsb
and
pop
cmp
cmp
adc
and
and
lret
dec
pop
stos
shlb
rcll
mov
pusha
subb
mov
add
and
fldt
rolb
lods
cmp
jmp
iret
add
and
scas
lock
and
jecxz
je
pop
repz
dec
in
gs
xor
inc
mov
iret
jmp
mulb
cli
mov
ja
scas
fwait
jg
lret
subl
andb
push
enter
xor
push
lahf
popf
or
frstor
andb
sub
dec
mov
in
xor
mov
inc
pushf
popf
bound
inc
push
cmp
popf
and
and
cmp
fldenv
lods
hlt
or
pusha
outsb
jno
push
and
jae
pop
jge
jecxz
in
or
mov
inc
bound
call
inc
arpl
loopne
clc
cmp
add
cmpsl
fs
xor
xchg
stos
outsl
unpckhps
xchg
bound
push
cmp
mov
mov
jl
lahf
add
enter
push
scas
cs
push
xor
xor
loopne
mov
pop
dec
pop
loopne
cmp
andb
xor
and
mov
xchg
mov
sbb
in
jle
pushf
test
addb
aad
mov
adc
adc
mov
nop
lods
insl
mov
jb
add
rorb
add
shlb
cli
or
jne
add
dec
dec
dec
dec
int
inc
orb
xorb
mov
xchg
add
xchg
iret
cmp
mov
dec
add
orb
insl
aad
push
dec
pusha
or
sti
inc
in
sub
mov
ret
xor
xchg
pop
ret
push
add
loopne
mov
adc
aam
shl
xor
mov
pusha
ret
pushf
fcoml
andb
lea
mov
std
es
jb
sahf
into
in
push
fisttpll
test
pusha
les
stos
pusha
shlb
loopne
test
shlb
cmp
inc
inc
lods
xchg
push
outsl
push
shlb
ret
xor
es
mov
push
shrl
shl
and
loopne
and
mov
jns
lods
mov
xor
pusha
add
jne
lea
xchg
mov
loop
test
push
sti
fisttps
mov
push
mov
pop
insl
mov
addb
xchg
fcmovu
push
sub
fdivl
inc
loopne
jecxz
ss
dec
add
mov
xor
outsb
in
je
pusha
mov
orl
jle
daa
test
xchg
pusha
jbe,pt
sub
inc
pusha
xor
adc
add
mov
cmp
inc
jle
or
mov
movsl
xchg
insl
push
test
and
adc
push
imul
inc
rcrb
push
jns
shrl
adc
cmp
out
xchg
sub
dec
jge
sub
mov
out
mov
and
sub
loopne
jae
or
xchg
clc
popf
or
outsl
jg
movsb
add
mov
addb
addb
iret
testb
fcoms
inc
inc
sbb
mov
dec
incb
inc
ss
sub
mov
pop
mov
cltd
movsl
test
mull
add
pop
or
add
rcr
fcomps
mov
jb
and
test
rclb
rolb
mov
add
insb
add
and
repz
or
cltd
push
icebp
jl
xchg
dec
dec
sbb
pop
out
rol
jae
push
mov
hlt
icebp
xchg
movsl
or
xlat
pop
sub
xorb
add
das
insb
test
jo
ljmp
inc
in
add
inc
sub
inc
inc
icebp
pop
and
jmp
lea
inc
cmp
shll
cmp
orl
inc
lahf
cltd
mov
xor
jp
in
jae
add
in
mov
push
out
push
xor
out
jo
mov
hlt
lret
loopne
stc
shufps
add
xor
aam
add
add
shlb
mov
test
jb
hlt
adc
inc
add
jg
ljmp
nop
outsb
stos
mov
out
push
or
jge
cltd
pop
adc
iret
lock
js
inc
and
mov
pop
adc
mov
dec
stc
inc
sub
je
jne
dec
stc
xchg
sarb
mov
shlb
std
inc
xor
push
and
xor
sub
add
adc
or
sub
ret
test
lods
inc
and
out
jae
loopne
stc
in
push
jl
adcw
loope
dec
or
xor
inc
jg
or
push
in
xchg
xchg
xchg
jmp
addb
xor
sbb
mov
notl
icebp
add
push
test
sub
dec
dec
mov
loopne
cmp
sahf
or
pusha
idivl
int
out
sbb
pop
add
add
loopne
inc
add
jecxz
iret
mov
sub
adc
pop
stos
rol
jo
and
sbb
std
test
pop
popa
add
add
or
loopne
aas
fmull
push
jne
jno
mov
xor
hlt
arpl
cmp
je
outsl
das
mov
xchg
lea
insb
sarl
dec
outsb
mov
addr16
sbbb
push
andb
std
xchg
and
or
and
push
popf
push
mov
hlt
sbb
or
ja
jmp
je
loop
and
test
add
mov
mov
sti
cmpsb
loopne
inc
aam
cmp
pop
leave
jo
inc
in
cld
mov
push
and
pusha
mov
inc
inc
or
loopne
mov
iret
mov
sub
and
and
dec
imul
jmp
std
jb
cmpsb
loopne
shrl
clc
or
sub
mov
mov
loopne
mov
hlt
cmp
aad
xchg
jle
aad
mov
pusha
in
loope
lods
dec
scas
pusha
pusha
xchg
test
loope
pop
mov
mov
add
sbbb
pusha
cli
xchg
addb
nop
pushf
popf
add
shlb
mov
shlb
call
fimull
inc
aam
sub
js
mov
fnstenv
mov
xor
jle
adc
inc
pusha
and
mov
lock
mov
pusha
shlb
sub
and
into
cmc
out
sub
lds
inc
xchg
xchg
call
pusha
sahf
aas
or
inc
or
push
sub
and
addr16
mov
pop
mov
leave
jns
stos
mov
lcall
mov
rol
and
pusha
stos
mov
push
andb
mov
shlb
loopne
and
loopne
addb
sbb
and
xchg
mov
jae
mov
gs
sub
cmp
cmpsl
stc
addr16
std
pop
adc
mov
pop
movb
inc
adc
mov
inc
sub
xor
addb
leave
mov
jne
outsl
dec
push
and
pop
mov
lcall
mov
pop
rorb
mov
cmpsl
xor
mov
push
cltd
sub
adcb
sub
pop
roll
js
pusha
mov
loopne
dec
scas
daa
lcall
dec
fldt
sbb
insb
xor
cltd
aam
mov
fsubs
rolb
push
in
addb
cmp
fdivrs
jno
mov
mov
jb
mov
jmp
in
scas
add
popf
cmpsb
mov
dec
std
push
out
lahf
xor
and
mov
loopne
add
jb
xabort
xor
push
sbbl
sbb
mov
out
add
icebp
je
scas
mov
or
pusha
cld
mov
mov
pusha
loopne
mov
je
add
nop
sub
mov
inc
fisubrl
pop
mov
loopne
lods
pusha
mov
insb
push
jge
inc
fmul
sbb
cmp
sbb
loopne,pn
sbb
mov
push
arpl
adc
ret
mov
cmp
pop
test
jl
addb
mov
inc
cltd
push
and
jp
lods
and
das
cld
clc
gs
andl
cmpsl
dec
push
sbb
mov
and
out
fmul
int3
push
cmp
pop
push
inc
mov
jnp
out
mov
pop
je
mov
mov
and
aaa
ret
add
loopne
mov
pusha
mov
sub
and
loopne
shlb
mov
ret
and
mov
add
pop
jne
or
pop
and
and
outsb
and
loopne
fldcw
sahf
sbb
aas
xor
pusha
and
sbb
ja
lret
aad
popf
mov
inc
sbbl
pop
inc
xlat
in
loop
xor
out
jle
mov
inc
mov
and
and
imul
mov
push
imul
dec
mov
pop
scas
inc
loopne
bnd
cmp
cltd
pop
jl
mov
pushf
dec
xchg
imul
pusha
loopne
sahf
xchg
loopne
xchg
mov
scas
andb
jnp
loopne
inc
jmp
cmp
negb
in
xor
add
pop
cmpsl
inc
adc
fisttpl
lock
jne
xchg
adc
and
dec
roll
add
jecxz
jl
jo
mov
adc
sub
ja
rol
add
insl
lcall
adc
inc
jae
sbb
out
data16
addb
pusha
sub
jnp
and
xchg
shl
fwait
repnz
add
andb
sarb
mov
orb
mov
mov
cmpsl
xchg
out
fnstsw
ror
sbb
sub
mov
lds
push
popf
adc
jne
mov
loope
add
popa
lea
popf
inc
pop
pop
sbb
and
cmpsl
adc
jmp
addb
inc
jmp
lock
jns
cld
test
arpl
add
push
addb
andb
and
in
jle
mov
inc
scas
mov
sbb
jle
sub
arpl
xchg
pusha
addb
loopne
ficompl
xchg
mov
test
mov
mov
cmpsb
shlb
push
mov
mov
sbb
je
test
pusha
stos
cmp
ret
arpl
add
xchg
out
sub
mov
add
jmp
mov
addr16
dec
pop
test
mov
xor
pusha
add
ja
or
jnp
push
mov
xorl
sub
adc
fistpll
push
outsb
mov
jae
pusha
mov
pusha
jbe
pusha
adcb
rolb
inc
jmp
jae
and
and
add
or
icebp
sti
in
repnz
test
sarb
add
jbe
sub
shrb
adc
cltd
sahf
xchg
and
repz
cli
push
pop
inc
sub
and
mov
jnp
mov
inc
shll
jge
fstl
or
lret
andb
jb
out
push
sub
sbb
dec
push
adc
push
sbb
test
loopne
outsb
pop
test
outsl
push
loopne
lret
shrb
mov
sub
loopne
push
dec
or
and
inc
leave
dec
add
and
sti
and
loopne
dec
sbb
xor
xor
jae
push
inc
add
mov
addb
sub
sbb
fcmovne
xchg
mov
add
sub
orb
leave
rcrl
mov
fidivl
test
add
out
out
les
test
add
jg
aas
repnz
andb
push
dec
scas
shl
data16
cmp
and
mov
cmp
or
pusha
orb
mov
mov
mov
lea
pusha
arpl
loopne
cmp
add
push
pop
pop
sahf
ret
xor
int3
ja
pop
adc
dec
int3
out
es
loopne
pop
mov
loopne
fisubs
addb
daa
lea
xchg
jmp
daa
mov
cmpsb
and
push
cmp
push
sub
gs
xchg
mov
cltd
push
mov
sub
fucom
fdivrs
and
jle
or
jle
xchg
cwtl
shll
sbb
shl
xchg
xlat
mov
add
movsb
andb
add
mov
js
push
cs
and
inc
inc
jecxz
jb
mov
add
into
pop
incl
add
fstps
rol
leave
xchg
jne
xchg
ds
popa
loopne
es
rclb
push
mov
loopne
xor
mov
sbbb
outsb
imul
dec
ja
shl
mov
das
xchg
sbb
adc
loope
es
shrb
sbb
xchg
insb
sub
inc
mov
lret
ret
inc
stos
inc
inc
cmp
insl
into
cli
inc
push
sbb
enter
iret
ja
inc
subb
mov
inc
movsb
loopne
clc
jle
and
fsubrs
in
xor
xchg
add
or
push
loopne
xlat
shlb
push
andb
inc
loopne
repnz
mov
jecxz
mov
addr16
push
mov
sbb
add
pusha
enter
mov
mov
mov
das
adc
leave
movsl
frstor
and
or
sbb
push
test
rolb
mov
cmpsb
and
pop
fidivl
in
adc
das
xor
rcll
add
notb
dec
inc
jle
mov
and
adc
addb
mov
imul
les
inc
test
and
ja
clc
mov
xchg
xchg
mov
rol
cli
cwtl
cmp
sub
xor
and
sub
pusha
and
inc
and
loopne
loop
rclb
xchg
xor
arpl
jle
ja
push
mov
add
fimuls
lret
pushf
cld
mov
pusha
dec
push
xchg
mov
mov
inc
mov
pop
lods
jbe
mov
rolb
push
xchg
gs
push
or
mov
pusha
rorb
shlb
pusha
jge
lods
and
mov
shlb
jl
pop
cmc
popf
jns
iret
scas
dec
and
mov
mov
jle
aas
js
jae
jmp
add
aaa
ss
subb
lock
mov
jle
dec
aas
rcrl
and
adcb
into
xchg
int
rolb
nop
mov
pusha
test
mov
ljmp
mov
call
add
sub
into
fcompl
mov
xchg
das
gs
mov
push
and
nop
into
jmp
vsubss
imul
jp
mov
andb
add
fmul
inc
add
and
arpl
mov
fsubrs
jl
mov
mov
rolb
pusha
xchg
test
inc
test
loopne
cmpsl
daa
push
lock
mov
in
jbe
shl
cmp
stos
dec
sahf
pusha
lahf
push
mov
pop
push
movsb
add
sbb
mov
jl
mov
inc
mov
jo
in
or
pop
addr16
inc
out
in
push
addb
test
sub
pusha
repz
mov
cmp
imul
push
inc
inc
xor
jbe
pop
sbb
mov
leave
jecxz
mov
push
repnz
or
xor
inc
loopne
push
lret
mov
push
in
inc
push
mov
inc
sbb
shll
std
mov
inc
inc
fisttpl
arpl
cmp
shl
loop
inc
into
out
lock
cmp
or
mov
fs
out
push
les
pusha
sahf
or
push
mov
data16
cmpsl
mov
and
pusha
pop
push
shll
cltd
lret
and
shl
or
jb
test
mov
jecxz
pusha
ror
data16
aaa
jecxz
xor
dec
jb
fstl
sahf
adc
inc
ja
scas
mov
shl
dec
push
ja
mov
push
int
mov
outsl
jmp
imul
icebp
addl
lahf
xchg
cli
push
adc
stos
outsl
sbb
jge
add
xchg
push
hlt
inc
flds
les
lret
int
sbb
iret
outsl
cld
add
int
pop
cmp
mov
push
loopne
and
sbbb
pop
push
add
or
pusha
mov
popf
xchg
and
imul
pusha
outsl
xchg
out
gs
xor
shl
pop
and
adc
ret
cmpb
and
mov
dec
cmp
jo
cmpsl
xchg
jle
mov
and
add
pusha
out
inc
inc
xor
cmp
sbb
ja
test
add
ljmp
hlt
jmp
jmp
mov
fimull
xor
jno
pop
dec
das
loope
jg
add
jl
stc
jmp
imulb
fstpt
or
inc
or
loopne
loopne
cmpsl
mov
mov
add
das
push
popfw
fisttpl
push
jmp
in
jae
push
test
push
test
xorb
hlt
cmc
mov
add
jge
sbb
jno
add
aaa
or
or
adc
and
pop
xor
call
mov
fs
sbb
mov
sub
sbb
andb
mov
loopne
les
jo
mov
mov
push
jb
shlb
sahf
mov
pop
aad
pop
inc
mov
push
push
scas
call
mov
mov
add
daa
push
add
into
in
dec
mov
add
inc
popw
jne
push
push
imul
pusha
inc
sub
mov
sub
inc
xchg
sbb
add
adc
mov
lea
loope
pusha
loopne
mov
jae
rolb
sub
loopne
mov
popa
mov
in
mov
fists
inc
jns
xchg
mov
push
xor
or
inc
adc
mov
shll
xor
fiaddl
loopne
fs
pop
xchg
and
loopne
scas
insl
xor
mov
loopne
jp
pop
ljmp
aad
mov
inc
sbb
cmp
sarl
sahf
adc
adc
movb
stos
add
and
andb
test
loopne
lea
jle
push
mov
jg
addr16
pop
jmp
rclb
mov
dec
stos
dec
xor
nop
or
jle
or
mov
repz
hlt
imul
aam
scas
add
nop
enter
outsb
and
jo
stos
mov
pusha
inc
xor
iret
xor
hlt
loope
fwait
xlat
jle
mov
imul
stos
mov
shlb
and
imul
mov
pusha
loopne
adc
pop
add
loopne
loopne
inc
imul
adc
pop
mov
imul
cmpb
adcl
dec
push
rolb
stos
addl
push
inc
sbb
cmp
jmp
insb
sbb
jp
inc
mov
lahf
inc
out
lock
and
aam
test
andb
ret
push
repz
jmp
movsb
inc
loopne
mov
test
and
ds
test
pusha
andb
ror
pop
xchg
jle
jbe
mov
dec
rcrb
pusha
inc
in
rolb
lahf
mov
mov
and
leave
push
enter
fidivrs
inc
or
xchg
xlat
xor
jnp
and
cmpb
ds
sbb
les
cmp
call
xchg
shlb
aad
inc
subl
daa
movsl
and
inc
cs
add
and
test
and
dec
sbb
test
add
xorb
sub
test
inc
in
idiv
mov
mov
push
test
mov
mov
dec
in
loope
pusha
rcrb
mov
xchg
xchg
mov
cwtl
jle
and
xor
mov
or
xor
cmp
adcb
push
push
out
and
adc
push
xchg
subb
cmpsb
and
ja
fmull
shlb
aas
scas
inc
subb
pop
sub
xchg
movsb
and
lcall
sarb
and
mov
popf
mov
in
incb
or
and
sbb
mov
movsb
rolb
imull
rolb
inc
push
and
ficoml
adc
and
mov
inc
pusha
cmp
shll
jnp
mov
in
inc
sahf
xor
mov
jmp
mov
push
andb
fstps
inc
fwait
pop
jno
loopne
int3
test
ficoml
push
xchg
lds
mov
arpl
add
mov
dec
sbb
adc
add
and
jbe
testl
mov
pusha
push
add
sar
mov
popf
ret
stos
pusha
shlb
pushf
jns
mov
jno
insb
pop
xchg
pop
push
subl
inc
addr16
jl
test
repz
jns
inc
loopne
test
pop
mov
mov
movsl
push
add
add
push
push
repz
loopne
xchg
imul
sbb
and
pop
inc
sbb
daa
fiaddl
test
jl
cltd
rorb
aaa
rol
insb
and
inc
pop
pop
cltd
xchg
cltd
int
dec
or
inc
pop
cmc
mov
mov
loopne
mov
pop
cmp
push
ds
pushf
call
mov
les
pop
fisubl
mov
jmp
inc
mov
adc
xor
add
cltd
test
mov
andb
ficoms
mov
sbb
mov
fsubr
dec
and
std
insl
roll
sbb
arpl
jmp
add
and
aad
repz
dec
adc
lock
inc
jne
inc
adc
repz
test
mov
mov
push
sbb
popf
inc
xor
or
in
mov
jmp
or
loopne
shrb
mov
cmp
shr
push
fisubs
rclb
andb
jbe
icebp
lcall
icebp
xchg
dec
xchg
lfs
lds
push
shlb
loopne
loop
test
and
cltd
shrb
shl
pop
aas
inc
icebp
mov
aad
shl
pop
stc
inc
gs
std
out
dec
sbb
mov
xchg
out
push
sub
and
pop
fisubrs
xor
loope
pop
dec
mov
mov
dec
iret
mov
loopne
xchg
data16
xchg
xor
mov
or
call
or
xchg
and
jge
clc
mov
dec
inc
stos
inc
loopne
int3
scas
insb
mov
push
lods
andb
cld
popa
mov
cmp
lock
mov
pop
mov
inc
pusha
mov
andb
in
push
sub
mov
fldl
add
loopne
sub
fldl
shlb
loope
stc
leave
and
mov
and
pop
in
loope
mov
lods
add
adc
notl
and
loop
pusha
inc
out
movsb
pusha
mov
jge
adc
cmpl
insl
jle
cmp
jg
xchg
mov
mov
push
in
or
add
loopne
mov
add
push
bound
ret
push
dec
sbb
add
mov
xlat
jnp
aad
repz
cmpsb
inc
sar
lret
pop
sbb
fs
mov
sbb
xchg
or
lods
inc
and
dec
stc
push
das
jbe
pop
sbb
and
loopne
mov
and
inc
cmp
sbb
push
adc
cmp
cmp
shlb
mulb
jae
and
sbb
pop
rcll
and
in
push
pop
xor
pusha
fsubrp
push
lods
inc
add
shlb
cmp
xor
aas
test
rcrb
stos
rolb
in
or
sahf
andb
push
addb
lock
pop
loope
pushl
inc
cmp
icebp
mov
and
xchg
mov
addb
insb
jne
jnp
mov
add
mov
mov
mov
std
call
rclb
lahf
or
and
mov
or
add
in
imul
popa
addb
pop
mov
rcr
xchg
and
bound
mov
sub
dec
xor
scas
and
aam
pop
sbb
xor
scas
mov
andb
jae
mov
cmp
pusha
adcb
jae
jb
enter
add
inc
loop
inc
and
mov
push
or
cmpsb
addb
das
data16
cmpsb
inc
mov
rclb
int
in
aaa
mov
int
jmp
rcrb
cli
mov
mov
xchg
aam
outsl
sbb
pusha
rolb
pop
inc
cmp
dec
dec
inc
mov
out
jns
ficoms
jno
and
fnsave
xor
adc
sbb
mov
xor
lds
xchg
jne
jnp
dec
cmpsb
add
inc
fsubl
shlb
loopne
sub
mov
pop
enter
push
loop
int3
mov
pusha
add
pop
pop
fs
movsb
rolb
lds
and
and
or
addb
sbb
sar
data16
sti
mov
xchg
mov
clc
dec
sub
loopne
add
rolb
nop
std
pop
inc
push
out
shrl
sti
cmpsb
mov
add
std
lret
sbb
fld
jo
jae
and
rcrb
inc
mov
fwait
pop
lods
ljmp
repz
cltd
pop
or
aam
testb
sub
or
pusha
pop
scas
fiaddl
clc
test
push
iret
aas
xchg
fnsave
cmpsl
mov
shrb
cld
mov
mov
stc
inc
inc
cltd
mov
pusha
subb
fdivl
test
repz
adc
push
loopne
test
daa
jge
mov
xchg
jecxz
cmpsl
lods
adc
andb
sub
es
loopne
cmp
loopne
addb
ret
out
push
push
mov
sub
and
insl
movsl
mov
mov
pop
and
push
pusha
pusha
or
cmp
inc
loopne
mov
icebp
icebp
fsubp
adc
and
cmp
test
xorb
stos
in
jo
cwtl
outsb
aas
rol
mov
in
inc
fidivs
xchg
idivb
xor
div
mov
xchg
fdiv
scas
and
fadds
jb
pop
mov
test
andb
mov
inc
and
mov
pushf
or
shr
ja
jnp
addr16
mov
data16
jle
call
popf
mov
dec
jne
in
pop
inc
add
hlt
or
lret
inc
and
pusha
xor
mov
dec
and
repz
add
inc
xlat
xor
and
shlb
add
pop
sub
xorb
in
dec
cmp
mov
lret
mov
add
or
add
fs
lods
loopne
push
mov
aad
mov
and
cmp
inc
iret
dec
jo
push
jo
pop
mov
subl
sbb
data16
pop
xchg
mov
insb
xchg
mov
mov
ror
adcl
pop
cwtl
add
xlat
andb
rcrb
ss
fbstp
inc
mov
sbb
jne
push
and
shl
jne
retw
pop
ja
inc
dec
orl
xchg
adc
inc
loopne
xchg
push
pusha
and
loope
mov
shl
hlt
sbb
xor
sbb
xor
jnp
add
repnz
pop
inc
adc
push
pop
lret
loopne
fisttpll
cmp
mov
loopne
lret
xor
push
push
das
js
in
ret
xlat
stos
inc
movsl
xchg
fucomi
mov
and
push
push
xchg
sbb
movsl
cmp
add
and
and
int
xor
cmp
pop
pop
mov
inc
sahf
inc
fs
gs
loopne
or
into
and
out
outsb
sub
mov
xor
pusha
mov
jp
aad
adc
mov
pusha
xor
mov
flds
and
sahf
insb
lret
test
lods
or
or
andb
loopne
jmp
mov
lret
add
cwtl
dec
xchg
jge
push
iret
arpl
mov
rorb
or
cmp
cmp
add
sbb
lock
stos
cmp
dec
mov
xchg
rcrb
or
sarb
outsb
testb
pusha
subb
dec
pop
cld
adc
xor
and
rcr
mov
lods
adc
cli
mov
mov
in
sbb
inc
lret
jmp
mov
add
pop
pop
mov
orb
andb
inc
loopne
add
cmpsb
and
lret
in
jb
inc
addr16
pop
push
pushf
jg
jle
pop
mov
rcr
xor
mov
rcr
pop
push
js
ds
cmp
pusha
inc
stos
sarb
das
xchg
stos
pusha
sbbb
add
hlt
in
adc
gs
icebp
adc
and
lea
cmp
orb
std
sub
cmp
test
rcrb
pusha
sub
or
add
push
jmp
mov
hlt
jae
fisttpll
mov
cs
pusha
fcoms
scas
addb
andb
fsubl
aam
xchg
sub
add
sbb
andps
xchg
xor
xlat
shl
jbe
aad
das
push
mov
pop
daa
mov
fldt
pop
inc
les
and
xorb
xlat
inc
or
lcall
inc
push
sub
loopne
xchg
lea
sbb
xchg
fucomi
push
andb
pop
mov
dec
bound
or
dec
jg
sbb
shrb
push
notb
pusha
shlb
add
mov
inc
or
fwait
ret
out
daa
dec
push
jl
int
sbb
pusha
mov
call
add
lea
mov
pop
inc
jmp
fs
mov
cmp
push
scas
loopne
movsl
mov
dec
vpshaq
jnp
jecxz
and
pusha
inc
mov
or
cmp
aam
andb
push
fs
add
divl
in
test
pusha
pusha
dec
repz
pusha
and
test
mov
out
loopne
in
mov
subb
pusha
loopne
xor
pushf
stos
shl
mov
inc
in
cmpsl
cmp
loopne
push
mov
xor
inc
add
mov
jno
mov
inc
loopne
shlb
ljmp
shlb
jno
sub
nop
addb
test
loopne
mov
pusha
and
sbb
bound
andb
xchg
inc
push
icebp
in
imul
jge
faddl
stc
or
scas
call
jnp
add
xorb
mov
int
xor
add
mov
push
inc
and
fsubl
cmpb
mov
add
xchg
cmp
neg
lea
fsubl
cli
mov
push
rorl
inc
add
cmp
stc
or
andb
dec
call
ja
push
outsl
lock
shlb
jle
push
add
loope
mov
cli
std
fistps
cmp
mov
out
ret
jg
pop
push
add
test
shlb
mov
cld
xchg
sar
xchg
pop
stos
dec
mull
mov
lret
in
and
mov
pop
add
loopne
hlt
add
addb
shr
lock
lahf
xor
mov
cwtl
inc
push
xchg
out
mov
andb
xchg
sahf
aad
xchg
cmp
cmp
inc
je
adc
mov
xchg
sub
inc
in
cmc
outsl
shll
out
lahf
dec
gs
xchg
jecxz
mov
loopne
and
loopne
sti
imul
pusha
cmc
jecxz
loopne
mov
mov
fwait
mov
mov
and
mov
mov
inc
inc
rcr
adc
icebp
sbbl
mov
adc
xchg
jmp
fdivs
xor
xchg
mov
xchg
out
inc
jecxz
inc
pusha
mov
out
clc
jmp
or
shrb
push
adc
sbb
jl
push
aam
out
mov
mov
nop
mov
or
aad
adc
data16
fwait
cmp
dec
mov
lods
inc
orb
mov
pusha
andb
dec
loope
inc
mov
negb
adc
mov
lret
add
repz
mov
loopne
daa
xor
add
add
xor
fcmovne
out
sbb
or
mov
ret
or
xor
mov
lock
or
add
loopne
popa
jne
ljmp
inc
jp
nop
cld
test
pusha
push
push
pop
push
and
mov
cwtl
dec
fstl
cmpsb
rolb
add
movsb
mov
and
pop
adc
mov
shlb
std
mov
pop
out
ficomps
sti
push
inc
inc
mov
notl
sub
sbb
hlt
cmp
add
in
out
ljmp
movsb
add
sub
addb
pusha
sbbb
xor
dec
in
pop
scas
fnstsw
lret
fldt
and
pusha
inc
push
cmp
pusha
dec
sbb
xchg
int
ljmp
repz
xchg
in
jno
loop
sub
pusha
loopne
jns
xor
in
inc
push
pusha
and
xlat
mov
inc
add
fucom
bound
sbb
inc
or
mov
xchg
xchg
adc
jnp
daa
inc
xor
loopne
inc
or
cmpsb
and
pusha
inc
push
add
mov
cmp
mov
data16
pusha
subb
icebp
pop
push
aas
or
add
and
or
pusha
jae
je
and
add
in
lcall
addr16
dec
mov
mov
add
mov
and
cmp
aaa
pushf
jge
dec
mov
inc
mov
add
pop
mov
mov
ja
inc
pusha
or
xor
adc
bound
in
xchg
cmp
lret
lahf
in
fdivp
cmp
lret
and
ja
sub
inc
js
shlb
enter
jle
jne
jp
fwait
shlb
dec
cwtl
rcll
and
push
mov
and
and
and
xor
or
dec
and
rclb
ficompl
iret
cmpsl
inc
shlb
pusha
jecxz
popa
push
lret
cmpsl
or
icebp
xchg
push
das
nop
sub
stos
insb
push
mov
andb
mov
pop
aas
outsl
cmp
inc
and
push
rcrb
mov
sarl
pusha
out
jp
push
nop
loop
shl
arpl
cmpsl
jle
pop
popf
sub
rcl
mov
or
addr16
dec
sub
pop
cwtl
jo
inc
mov
orb
andb
aam
pop
jmp
mov
sarb
out
pop
clc
arpl
ret
xchg
pushf
ret
xchg
mov
insb
clc
pop
mov
pop
pushf
jecxz
lahf
sahf
aam
inc
lods
inc
and
ret
loope
test
add
cmp
mov
pop
xchg
xrelease
or
push
inc
inc
mov
dec
xlat
sbb
rcll
add
push
std
inc
lods
mov
inc
clc
mov
pop
fildll
xor
les
rol
testl
loopne
adc
push
scas
rol
mov
mov
jnp
jbe
mov
shlb
add
inc
sbb
cmp
sbb
shll
pusha
cmp
popf
stc
notb
call
mov
mov
mov
mov
inc
xchg
sub
jae
xchg
outsb
push
mov
pop
test
add
mov
int3
inc
fwait
pop
das
int3
clc
adc
fwait
fwait
jge
stos
outsl
fcmove
test
shrb
adc
xchg
pop
mov
sarb
dec
pop
cmpsb
shlb
rorl
nop
push
popa
xlat
sbb
cmp
sub
inc
imull
hlt
in
dec
cltd
adc
ja
test
push
syscall
mov
pusha
mov
dec
fstps
sbb
out
daa
add
rcrb
push
pusha
inc
add
loopne
je
jmp
xlat
sub
pop
stos
push
call
jnp
jae
add
arpl
add
test
ja
inc
or
inc
mov
cmpsl
int3
pop
dec
jmp
push
das
ljmp
ja
lock
mov
arpl
add
inc
cmp
and
mov
pop
fiaddl
cld
dec
in
push
inc
cmp
insl
jbe
jae
xor
sbb
push
push
mov
leave
test
shlb
cmp
test
les
and
pop
jmp
mov
jo
adc
xchg
inc
pusha
stos
shlb
fstpt
pusha
xor
leave
stos
shlb
cmp
and
mov
roll
sub
add
pop
sbb
pop
cmp
aam
mov
sti
test
jns
sbb
xchg
cmpsb
pusha
subb
aad
fists
sbb
cmp
andb
loopne
jl
shll
pop
jge
mov
mov
xor
cmpsb
loopne
mov
fisubs
inc
test
push
adc
lods
loopne
xchg
adcl
fcmovnu
add
add
or
mov
and
xchg
sub
mov
mov
mov
les
add
int
loop
dec
mov
cmp
push
inc
loopne
add
pop
movb
dec
out
andb
add
rclb
jecxz
xchg
adc
cmp
jle
cmp
cld
xchg
add
add
push
dec
adc
outsb
add
jbe
pop
or
and
mov
clc
cld
mov
cmp
add
pusha
popf
mov
xchg
stc
xchg
and
lret
sahf
sub
mov
imul
push
stos
and
adc
jmp
loope
shlb
inc
dec
out
js
mov
loopne
mov
addb
mov
shl
adc
rclb
xchg
lcall
test
cmp
sub
pusha
das
stc
cwtl
sbb
pop
outsl
lahf
mov
mov
pushf
xor
mov
or
addb
jb
and
ret
cmp
push
sub
addb
lahf
outsl
fs
or
pusha
fwait
mov
lret
adc
loopne,pn
and
nop
decl
mov
ret
push
xchg
mov
push
rolb
scas
shlb
shlb
scas
loopne
mov
loopne
lds
xchg
mov
or
pusha
and
inc
leave
dec
inc
shrl
andb
daa
andb
ss
and
xor
and
lret
mov
inc
xchg
lods
stc
nop
add
notb
ror
cwtl
insb
imul
pop
pop
es
rcrb
lcall
call
lahf
lcall
or
cwtl
clc
outsb
jb
dec
test
mov
xor
add
daa
repnz
lds
lds
fdivl
repz
mov
popl
shlb
cld
jle
dec
mov
in
pop
dec
cld
test
pusha
sub
test
pushf
test
loopne
andb
ror
loopne
mov
and
push
in
int3
push
leave
mov
shrl
add
pop
pop
mov
cmp
shll
loopne
add
pusha
jle
pop
test
rclb
inc
mov
int3
sub
sbb
into
fidivs
add
push
mov
loopne
push
pop
test
add
pop
pop
addr16
pop
jne
fdivs
ret
adc
test
cwtl
lcall
jns
jb
add
cmpsb
inc
inc
dec
pushf
mov
shlb
cmp
sbb
sti
leave
dec
out
js
sub
and
inc
jno
jmp
cmp
out
popa
mov
shl
cmp
insl
fs
mov
adc
mov
jg
leave
add
pusha
mov
ja
inc
loopne
adc
mov
pusha
mov
andl
dec
lock
pop
jg
jb
out
cmp
rolb
cmp
ret
jo
lcall
mov
adc
popa
jecxz
sahf
lea
or
add
and
shrb
jb
jb
jbe
mulb
jg
pandn
and
fisubs
xchg
and
sbb
or
inc
mov
and
clc
scas
and
mov
enter
sti
sbb
sub
sahf
cwtl
das
jns
sub
sub
add
iret
jmp
mov
pusha
loopne
pushf
clc
and
inc
ss
pop
pop
andb
das
push
add
aam
cwtl
xchg
push
mov
rolb
xchg
inc
stc
out
test
mov
jl
sbb
add
pop
pop
jle
ljmp
shlb
nop
xchg
cs
mov
cmp
sub
fsubrs
inc
sbb
andl
add
imul
add
jo
xchg
push
lahf
popl
addb
ds
rolb
pop
sub
rcrb
xchg
xchg
jp
sub
popf
xor
cmp
and
cmp
cmp
insb
loope
hlt
push
xchg
push
push
xor
clc
mov
and
push
rolb
pusha
add
shl
or
jl
mov
add
add
inc
xlat
mov
cmp
into
leave
movsb
add
cwtl
popfw
int3
dec
jno
jb
xor
add
stos
jp
addb
xor
loopne
sub
stos
xchg
inc
xchg
popf
or
or
pusha
cltd
push
fs
jmp
icebp
sub
push
icebp
shl
push
sbb
xchg
pusha
pushf
movsl
inc
add
mov
and
fs
push
je
jmp
and
in
mov
sbb
add
adc
repnz
pop
ror
adc
cld
icebp
fstpl
mov
and
sbbb
pop
mov
aam
mov
mov
es
pusha
dec
jno
lods
aad
push
stc
inc
ret
gs
dec
mov
add
addb
femms
add
scas
jl
jp
adc
sbb
sub
inc
jp
xchg
and
aas
jge
js
push
mov
lret
jbe
cmp
fs
shl
pushf
mov
ror
cld
mov
imul
sub
dec
cld
mov
in
out
cld
cs
mov
movsb
add
imul
pusha
js
adc
mov
ret
lahf
hlt
and
je
out
loope
pusha
shrb
cli
sbb
shl
popf
fs
inc
and
sbb
andb
imul
add
andb
shlb
loopne
js
mov
dec
pop
push
sbb
call
cmc
and
mov
add
pusha
and
shrl
loopne
cmpsl
adc
dec
lods
dec
js
das
sbb
sarl
adc
nop
ds
repnz
and
loopne
add
add
mov
mov
sub
adc
pop
jns
mov
shlb
add
mov
subl
scas
addb
push
imul
das
addb
test
cli
loop
pop
jge
cld
nop
mov
push
cmp
add
lcall
loopne
std
mov
in
ret
out
lcall
mov
loopne
lds
and
inc
loopne
pop
aam
rclb
rolb
pop
aad
out
rcl
mov
sub
push
andl
lahf
mov
popf
mov
pusha
pusha
rol
adc
call
rep
lret
stos
shl
shlb
imul
loopne
sbb
add
enter
sub
and
inc
in
stc
inc
dec
lret
adc
add
inc
outsb
add
xchg
repnz
loope
int3
subl
test
and
add
or
inc
push
add
push
inc
inc
iret
pop
xchg
outsl
inc
in
cmp
lcall
inc
aam
add
loopne
jecxz
loopne
xchg
stos
inc
and
jne
cmp
loopne
mov
rcrl
test
ljmp
pusha
rolb
xchg
push
loop
addb
sub
xchg
fisttpll
add
ret
pop
mov
xchg
jge
rcrl
cwtl
out
stos
lahf
test
shr
mov
mov
sub
add
dec
aam
cmp
insb
cld
das
adc
fists
xchg
loopne
shll
cltd
stos
mov
sahf
test
jae
sub
cli
addr16
mov
and
sbb
daa
jp
gs
in
sbb
rcrl
loopne
cmp
push
stc
mov
cmc
imul
in
cmp
pop
sbb
cmc
xchg
adc
fnsave
and
lret
jb
inc
mov
and
add
in
dec
add
inc
add
sbb
aaa
sub
add
loop
andb
inc
push
aas
out
addb
add
movsl
iret
mov
shrb
pusha
push
bnd
inc
pusha
movd
pop
pop
xchg
and
stos
cmp
inc
add
push
and
insb
cwtl
insl
rcr
pop
movl
pusha
rcl
push
imul
inc
arpl
incb
adc
add
and
inc
adc
jbe
adc
aas
xor
jp
insl
cmp
fisubl
sahf
cmp
or
push
scas
sbb
push
push
lods
mov
dec
mov
mov
movsl
ret
xorb
in
inc
es
pusha
enter
and
inc
cli
fstp
sbb
inc
xchg
int
int
andb
adc
add
mov
sub
loopne
and
add
and
fldt
and
jmp
mov
pop
push
notl
andb
inc
repz
loopne
je
popf
push
out
fidivl
inc
shrl
mov
push
lock
ss
mov
test
pusha
pusha
ret
fcoms
adc
sub
stos
add
cmp
aam
jmp
sub
push
pop
mov
add
sub
movsb
pusha
mov
pushf
test
pusha
xchg
jnp
std
mov
es
loopne
loopne
push
pusha
and
xchg
imul
jne
inc
cmpsb
rolb
pusha
andb
incb
xchg
mov
xor
stos
sti
jg
addb
push
add
mov
xorl
pusha
push
push
sbb
andb
inc
mov
addb
pusha
add
dec
pop
push
mov
in
mov
movsb
add
inc
mov
loopne
and
push
xchg
cmpsb
inc
and
pushf
mov
xchg
fwait
adc
mov
xor
stos
cmp
pop
pusha
arpl
adc
pop
cld
leave
fsts
fwait
aas
icebp
sbb
inc
and
adcb
dec
testl
xchg
out
ds
iret
popf
cmp
pop
aas
dec
test
insl
push
sbb
insb
dec
dec
das
pop
jae
sarl
push
loopne
out
lret
ljmp
sarb
fdivrl
in
rorb
loopne
and
add
pop
bnd
add
adc
mov
movsl
sbb
dec
outsl
pop
ret
xor
pop
test
mov
loopne
cltd
mov
ror
in
fsubp
test
and
movsb
rol
mov
or
jae
xlat
mov
mov
inc
rorb
or
pusha
enter
mov
pop
mov
sbb
xor
mov
pop
pop
jne
sub
mov
xor
andb
sbb
and
mov
hlt
inc
xchg
inc
cmp
daa
add
inc
add
adc
int3
call
add
inc
test
xorb
push
or
xchg
mov
sub
mov
loopne
cli
cmp
fbld
arpl
fstpt
push
sbb
out
mov
sbbb
jnp
orl
std
shlb
and
jp
shlb
ret
sbb
and
cmpsl
lock
mov
test
orb
jae
addb
push
inc
mov
jge
andb
fnstenv
stc
sbb
outsl
add
and
scas
addb
inc
add
add
dec
xchg
cli
js
cmp
adc
push
hlt
out
mov
popa
xchg
insb
and
sub
mov
pusha
adc
sbb
or
daa
adc
sbb
cmp
mov
inc
xorb
pusha
pusha
shll
popf
cmp
addb
cmp
es
inc
dec
pop
movsl
mov
and
inc
subb
mov
jbe
mov
or
adc
cld
inc
and
mov
add
stc
mov
mov
lods
add
fdivr
stos
xor
cs
movsl
xor
or
arpl
pusha
inc
ljmp
push
xchg
pusha
or
and
das
nop
adc
push
shll
inc
andb
pusha
gs
adc
inc
lock
addr16
scas
sahf
cmc
inc
xor
rcll
imul
test
cld
add
aaa
add
inc
ds
rol
or
sar
cmp
popa
loopne
cld
push
hlt
mov
loopne
cmp
jno
mov
sub
fimuls
xchg
mov
outsb
jae
loopne
into
jg
sub
sar
pop
jle
sbb
addl
push
pop
xor
loopne
mov
mov
fmulp
and
adc
and
and
cmp
pop
mov
mov
negb
out
cli
add
scas
pop
push
pop
xor
sbb
vmwrite
adcl
lds
shlb
faddp
data16
pop
cs
mov
stos
popf
cli
ja
push
lods
mov
les
inc
jbe
fimuls
shlb
call
mov
movb
das
cmp
pop
mov
fsub
sbb
pop
call
push
add
hlt
push
andb
sbb
shl
push
andb
cli
lods
pusha
add
gs
outsb
mov
rolb
sbb
lahf
and
push
iret
adc
mov
scas
inc
hlt
ud2
pop
imul
mov
cmp
pusha
and
pop
addr16
cmp
adc
pop
sub
jne
test
and
sbb
outsb
mov
adc
cmpsl
lods
mov
fmull
sar
pop
mov
ret
iret
daa
dec
push
sti
push
or
pusha
in
pop
push
jns
inc
pusha
and
shrb
mov
fnstsw
push
and
andb
mov
rolb
mov
gs
addb
adc
xor
mov
cmp
into
jbe
add
adc
mov
and
adc
xor
arpl
xchg
adc
dec
jmp
mov
sub
rolb
mov
add
mov
shrb
loopne
pop
or
fsubrs
and
call
subb
mov
lcall
xor
pusha
inc
adc
cli
fiadds
ss
and
jb
cmc
pop
and
mov
pusha
pusha
jns
inc
add
inc
pusha
and
es
mov
pusha
int
or
push
adc
out
jb
ret
clc
dec
mov
mov
push
add
loopne
mov
leave
dec
ljmp
add
mov
mov
rolb
dec
es
pusha
inc
xchg
ljmp
jge
shlb
inc
scas
inc
inc
jb
mov
shlb
jno
cmc
mov
cmp
jmp
dec
ljmp
sub
inc
mov
add
pusha
fs
xchg
fldt
dec
sbb
lds
addb
dec
mov
add
subb
cmp
sbb
mov
ret
cmp
rol
pop
lods
xor
xor
jmp
mov
je
push
add
jg
pusha
inc
lcall
dec
and
pusha
mov
mov
sbb
inc
inc
cmp
mov
fadd
bound
or
mov
data16
loop
fistps
sub
and
inc
clc
insb
inc
mov
dec
push
xor
and
jnp
or
shl
loopne
movl
sub
sbb
adc
dec
fisubrl
and
cli
movsl
xor
dec
rcrb
sub
cmp
fadds
and
add
jo
inc
ror
das
add
loopne
mov
shl
in
push
aad
jnp
jb
js
rcr
cld
or
mov
out
sti
cwtl
cmp
xlat
icebp
mov
loopne
xor
lea
cmp
test
mov
mov
and
testl
mov
aam
cmpsb
pusha
mov
cmp
and
mov
outsl
inc
mov
hlt
push
jne
cmpsl
pop
call
mov
ljmp
ljmp
pusha
jle
or
in
stc
sahf
pop
pop
jno
xchg
stc
inc
mov
mov
out
dec
or
add
mov
cld
mov
xchg
pop
xchg
xor
and
xchg
mov
pusha
dec
inc
mov
enter
jp
loopne
int
arpl
imul
xchg
mov
lahf
cmp
lret
adc
insl
sbb
jbe
sbb
sbb
mov
jae
ret
punpckhwd
cld
inc
int
and
and
jmp
adc
mov
enter
movsl
jge
loopne
dec
sbb
inc
inc
out
js
lea
data16
nop
mov
mov
pop
andb
cmp
pop
xchg
and
addb
mov
add
jb
adc
inc
loopne
and
loopne
sub
mov
or
add
cmp
rcr
cmp
add
addb
add
cli
push
and
xchg
stc
or
mov
jge
pop
fdivl
cli
or
rorb
add
data16
push
outsl
xlat
jno
andb
inc
and
ljmp
loop
out
stos
add
ljmp
sbb
mov
lods
into
cmp
add
lahf
sbb
dec
popf
add
cs
loopne
mov
pop
mov
or
xor
jnp
pop
cmp
bound
addr16
xchg
test
pusha
scas
ret
cmovns
stc
push
jae
pcmpgtw
add
orb
cmp
cmp
out
cmc
lea
xor
jb
ja
leave
scas
pusha
mov
shll
lret
add
push
push
andb
int
and
mov
and
sub
subb
lods
add
mov
mul
and
fisubl
sbb
xchg
or
das
ja
repz
stos
pusha
add
mov
mov
and
rcrb
jnp
and
shrl
into
repnz
adc
insb
adc
dec
jnp
and
pop
int
ret
xor
dec
xchg
push
push
and
inc
fdivr
add
pusha
ret
mov
into
or
pop
test
and
sbb
loopne
leave
pop
ss
xor
dec
movsb
loopne
mov
les
cs
inc
and
jge
pushf
pusha
xchg
push
sbb
out
mov
mov
mov
mov
mov
inc
dec
mov
and
push
loopne
pop
dec
pushf
push
andb
xchg
mov
mov
shl
arpl
pop
cli
enter
cmp
inc
inc
call
sbb
sbb
pusha
loopne
mov
mov
sbb
es
incb
in
pusha
and
outsb
and
xchg
sti
sbb
rorb
adcl
aam
mov
mov
mov
sarb
and
clc
jo
cwtl
mov
add
and
out
pusha
add
pop
push
mov
mov
in
jl
fildll
lret
imul
inc
dec
inc
push
scas
out
insb
mov
pusha
mov
xchg
in
jo
loopne
jp
stc
idivl
aad
lahf
mov
lcall
dec
andb
loopne
inc
inc
cmp
gs
aaa
pop
iret
dec
fcom
pusha
pop
mov
pusha
loopne
sub
and
jb
xchg
out
add
daa
mov
ja
sub
pusha
mov
loopne
mov
xchg
pop
icebp
loop
mov
ds
xor
push
adc
and
sub
inc
adc
cs
shlb
and
lret
stc
shl
mov
mov
add
mov
shlb
jo
sbb
mov
jne
sbb
add
dec
cmp
inc
ret
jge
bound
hlt
in
pop
shrb
xchg
sbb
repnz
sbb
test
mov
shll
sub
and
pop
xchg
adc
aaa
dec
scas
sub
andb
xchg
pop
inc
shll
cmpsl
loope
mov
and
shlb
add
in
dec
xor
gs
rorl
and
loopne
push
jmp
and
adc
push
loope
or
inc
loopne
imul
icebp
mov
mov
shlb
test
or
loopne
mov
cmpsl
ret
fimull
mov
mov
inc
or
and
mov
ficomps
addr16
pusha
pusha
mov
adcl
pinsrw
movsb
mov
push
ror
lock
loop
sbb
icebp
mov
enter
lret
out
lret
test
add
mov
lods
or
loopne,pn
sbb
xor
test
imul
loopne
pop
and
mov
pusha
cwtl
test
sbb
scas
xchg
mov
imul
xor
into
mov
pop
xchg
dec
mov
gs
movsl
in
subl
cmp
xor
movsl
jecxz
imul
pusha
mov
lret
lods
mov
mov
cmp
jecxz
sub
add
push
loopne
jecxz
inc
dec
mov
sarb
mov
pusha
pusha
in
adc
pop
arpl
jge
lcall
pop
fldln2
idivb
icebp
or
rolb
shl
add
sub
aas
mov
sbb
inc
loope
movsl
mov
mov
pop
mov
adc
scas
inc
rcr
in
mov
xchg
inc
inc
pop
mov
decl
loopne
out
inc
cmp
xchg
mov
addb
insb
js
push
shlb
lods
sub
pusha
ja
jnp
and
pusha
bound
dec
dec
js
and
pusha
f2xm1
or
loopne
addb
inc
add
sub
and
xchg
test
push
cmp
loopne
into
sub
xchg
xor
lea
ret
call
aad
std
jnp
push
push
shl
stc
xchg
mov
addb
and
inc
popa
call
xchg
mov
loopne
test
int3
stc
or
orb
andb
inc
xchg
ret
adc
pusha
scas
mov
test
mov
cmp
add
arpl
mov
int
stos
pop
loopne
fwait
out
jle
and
test
jmp
mov
mov
xchg
jae
mov
and
inc
mov
add
sbb
xchg
cmp
testb
inc
push
push
and
loopne
xor
jbe
xor
pusha
push
and
loopne
repnz
push
insl
jne
insl
repz
jecxz
test
mov
mov
inc
add
push
aas
test
add
sbb
add
mov
sub
imull
add
add
jbe
das
popa
fwait
imul
inc
pusha
xchg
mov
lock
add
mov
aad
out
mov
mov
addl
jge
push
stos
mov
xor
and
sbb
stos
pusha
add
daa
xchg
pop
clc
rclb
out
dec
and
cld
jo
in
pusha
inc
pop
mov
xor
jl
ljmp
xlat
mov
andb
or
and
sbb
notb
cli
adc
ret
sub
divl
ljmp
pop
test
push
test
mov
inc
mov
mov
and
sub
add
inc
scas
andb
mov
cld
xchg
mov
mov
hlt
sti
or
rol
inc
pushf
loop
cmpsl
mov
lret
push
or
shlb
stc
xchg
sbb
mov
jne
mov
loope
and
les
xor
in
pop
or
inc
lds
xor
xchg
cmpsb
pusha
mov
pop
xchg
add
shl
clc
lods
and
lea
fcmovnbe
arpl
and
shlb
dec
add
sub
mov
dec
xchg
pop
clc
fdivrs
rclb
mov
aas
gs
aaa
add
je
shll
add
inc
mov
mov
and
mov
loopne
loopne
add
loopne
les
arpl
das
mov
and
lods
dec
xlat
xor
cmc
enter
shrl
loopne
addr16
aam
jg
add
outsb
mov
je
rol
idivb
pop
ds
cs
pusha
out
insb
cmp
jno
punpckhbw
pop
lea
repz
andb
scas
addb
int
sub
adc
add
add
mov
gs
fnsave
inc
orb
sbb
imul
shlb
add
rorb
mov
dec
and
pusha
mov
dec
sbb
loopne
push
orl
or
cmpb
adc
and
push
push
stc
jbe
ds
or
xchg
add
dec
test
notb
lret
lods
dec
add
push
mov
cmp
nop
das
adc
rol
outsl
inc
daa
cmp
mov
xor
push
out
nop
call
out
xor
popa
pop
cwtl
push
pusha
orb
dec
std
fsubrs
inc
sub
and
shlb
push
pusha
add
and
adc
testb
cwtl
inc
fisttps
inc
inc
xchg
repnz
shl
or
add
mov
cmpsl
clc
into
mov
adc
dec
jae
lret
jp
stos
lods
and
adcb
in
outsb
adc
mov
imul
dec
jns
inc
pop
and
scas
add
jbe
adc
jae
sub
or
dec
sub
lcall
fmuls
shlb
cmovle
imulb
rol
das
fsubr
push
xor
mov
adc
daa
iret
or
lret
addb
and
inc
jecxz
adc
nop
in
movsl
xor
inc
lods
aas
xchg
jp
push
adc
mov
inc
shlb
repz
xor
in
or
add
and
loopne
and
stos
jl
xor
and
cwtl
xchg
add
mov
adc
mov
leave
lods
pusha
shlb
push
adc
cmp
add
cmc
rcrl
lcall
mov
pop
add
cltd
pusha
adc
add
pusha
pusha
cmp
mov
loopne
ret
popf
movsl
fwait
popf
and
add
mov
dec
lcall
and
jns
shlb
jne
ljmp
add
lret
loope
daa
mov
xchg
and
test
shr
or
scas
inc
loopne
out
int
mov
add
pusha
pusha
lret
sar
inc
inc
andb
xchg
or
inc
aas
ss
jno
add
pusha
adc
jl
in
rorl
rorb
orb
pop
xor
dec
and
stos
or
mov
cmp
add
inc
in
insb
inc
dec
inc
adc
cmp
leave
cltd
jge
ds
pop
out
pop
inc
in
adc
ljmp
andl
lods
push
jmp
mov
loopne
jns
pop
in
mov
cmp
incl
mov
sahf
scas
inc
add
adc
mov
and
inc
or
add
pop
mov
jnp
jmp
mov
outsb
dec
fdivrs
clc
and
pop
mov
scas
add
addb
sbb
mov
sbb
push
mov
sub
cmp
pusha
adcb
cmovl
outsb
sub
and
and
sbb
and
arpl
mov
inc
ret
xchg
arpl
repz
js
pop
add
jbe
outsb
inc
mov
mov
cmp
or
and
pusha
add
mov
fwait
std
push
cltd
scas
addb
rcl
aam
push
adc
pusha
shl
lock
out
lea
repz
jae
ja
pusha
and
add
rol
cmpsb
pusha
mov
pusha
stos
pushf
sbb
add
and
andb
int
js
pop
push
addb
rclb
push
stc
inc
mov
add
adc
jle
mov
popa
fidivs
lods
int
or
pop
fsts
rcrl
sbb
mov
shl
mov
add
shlb
mov
mov
cmp
sbb
nop
push
rolb
gs
push
mov
inc
and
int3
ja
add
add
shlb
mov
mov
hlt
dec
mov
xchg
flds
mov
inc
cmp
fcmovnb
or
movl
rolb
mov
push
ja
lea
and
inc
add
loopne
mov
outsl
ds
push
lret
mov
xor
sti
cld
ret
jnp
lahf
iret
jmp
pop
dec
iret
xchg
push
push
inc
loopne
jno
mov
rolb
push
in
jg
ffree
imul
loopne
sbb
lahf
mov
cmp
cltd
inc
fiaddl
mov
ljmp
push
xchg
jnp
cmp
dec
and
loopne
jg
scas
sbb
mov
out
sti
push
mov
jo
add
push
sub
in
hlt
or
add
add
sbb
pop
push
insb
jmp
mov
xchg
xor
and
pusha
les
pop
sbb
pusha
insb
into
fs
jge
cmp
adc
dec
dec
sub
inc
pushf
adc
push
push
xchg
and
and
or
bound
mov
pusha
cmp
mov
jg
jbe
shl
scas
push
call
mov
cmc
mov
xrelease
rorb
cltd
xchg
push
nop
jmp
shr
jb
lea
outsl
or
add
jo
lock
jg
sahf
dec
inc
mov
lret
movsl
scas
addb
pop
lret
jbe
inc
loopne
pop
push
and
sbb
and
cmp
aaa
jecxz
xchg
xor
imul
xchg
mov
mov
aas
loopne
add
and
pusha
adcl
push
clc
jmp
aas
dec
leave
pushf
add
jge
xchg
sbb
rolb
dec
testl
pop
lcall
rolb
sbb
mov
sti
cmp
mov
xor
loopne
data16
add
push
scas
cmp
and
fs
pusha
mov
and
add
jmp
push
add
sub
xchg
mov
pusha
rcrl
repz
jno
push
insl
and
mov
push
inc
add
inc
loopne
cmp
dec
int3
xor
add
out
jbe
shrl
lret
ja
pop
popa
out
and
pusha
sbb
pop
push
repnz
xchg
test
mov
cmp
test
mov
ds
cmp
mov
rolb
out
jo
xor
pusha
add
sbb
aas
rcl
test
mov
jne
popl
and
pop
pop
out
cwtl
js
pusha
mov
mov
insl
push
fmuls
jmp
andl
push
mov
insl
sahf
add
mov
adc
out
jns
insl
mov
and
inc
daa
sbb
imul
xor
cmp
fldl
bound
jp
insl
std
push
scas
pop
jmp
xchg
xor
decb
fstl
inc
inc
mov
mov
shl
xor
fisttpl
or
loopne
cmpsl
xor
or
jne
hlt
jp
pusha
mov
loopne
mov
dec
std
ja
cmc
int
add
dec
aam
adc
push
or
loopne
pusha
pusha
dec
xor
repnz
inc
mov
out
mov
inc
dec
mov
and
int3
mov
cmp
pusha
add
cld
lock
cltd
sbb
addb
push
inc
jno
mov
shlb
icebp
movl
adc
mov
fisubrl
popf
lea
shl
mov
add
adc
mov
call
pop
out
addb
test
inc
cwtl
jl
pop
xor
sub
add
in
gs
aam
fnstcw
mov
in
shrl
pusha
pusha
cmpsl
fs
mov
push
sbb
into
imul
arpl
cmpsb
loopne
daa
fsubrp
cs
mov
inc
mov
pusha
bound
pop
addr16
bound
scas
out
or
and
in
sbb
je
and
pusha
sub
push
rolb
and
outsl
addr16
pop
arpl
out
cli
lret
add
adc
push
cmp
test
loopne
inc
and
add
rcll
arpl
lock
jo
pusha
pusha
and
xor
and
addr16
pop
push
mulb
mov
or
pusha
adc
mov
hlt
fucom
in
das
xor
outsb
xchg
lea
adc
or
dec
mov
loopne
xchg
push
sbbl
dec
push
dec
mov
inc
hlt
mov
call
xchg
push
je
in
ret
cli
movsl
ja
mov
pop
mov
inc
jb
pop
sbb
popf
mov
xor
les
cmp
and
orb
mov
movsb
add
lret
sbb
mov
outsb
rolb
xchg
sbb
fistps
pop
test
xchg
loopne
addl
push
push
sbb
push
or
add
cmpsb
rolb
stc
cli
loop
pop
jae
sti
loope
jl
xchg
outsl
inc
and
out
rcr
cmc
mov
pushf
inc
cmp
xor
mov
or
je
iret
jnp
jle
daa
arpl
out
jb
test
inc
pop
sub
sbb
out
add
dec
inc
incl
sub
rolb
loopne
sbb
or
pusha
loopne
add
add
test
add
add
jne
cltd
mov
roll
outsb
mov
push
rolb
stos
rolb
sbb
test
bound
out
daa
int3
int3
sahf
pop
ss
aam
jle
mov
jl
lods
sahf
pop
sahf
subl
shll
inc
rorb
adc
mov
add
xchg
add
cmpsb
mov
sbb
cwtl
sub
xor
inc
and
xor
in
sub
cmp
repz
jecxz
ja
sub
andl
or
push
lds
repnz
addr16
jns
imul
ja
loopne
sbb
das
sbb
mov
push
jae
fxch
pushf
jno
jg
and
or
inc
jmp
stos
rolb
andb
lahf
jmp
or
inc
scas
repz
aaa
mov
mov
dec
leave
ret
mov
out
dec
pslld
pop
dec
mov
fldenv
inc
add
mov
fistpll
shrb
daa
sbb
xor
or
cmp
pusha
cli
mov
outsl
cwtl
shl
shlb
addb
loopne
test
pusha
andl
shll
pop
mov
aad
hlt
fistl
jmp
jl
les
mov
adc
scas
int3
mov
and
or
pusha
movsb
mov
or
andb
add
pusha
daa
pop
lods
and
pusha
in
es
loopne
inc
aad
sbb
clc
sbb
inc
je
mov
add
pop
jge
pop
test
and
arpl
ret
pusha
rcl
into
addr16
stos
mov
jecxz
xchg
int
xor
push
rclb
pusha
and
mov
add
loopne
inc
push
sti
push
push
idivb
pop
dec
inc
out
sti
push
test
loopne
shr
inc
sarl
inc
mov
mov
in
insb
insb
repz
and
movsb
pusha
add
mov
or
loopne
stos
je
add
mov
xchg
push
cmpl
mov
and
mov
test
fiaddl
jg
stos
outsl
pop
cli
fbstp
xor
jns
and
pop
sub
bound
mov
pusha
jnp
repnz
pop
mov
lret
shl
in
or
lds
mov
shrl
loopne
sub
jge
lret
shlb
cmp
xchg
inc
imull
inc
mov
shr
mov
lds
pop
mov
ss
out
xchg
out
adc
mov
or
mov
mov
jecxz
mov
loopne
pmuludq
loopne
notl
mov
cmc
adc
mov
std
sub
addb
sbb
cltd
cmp
inc
add
insb
xchg
push
fsubp
push
jmp
jp
leave
lea
cmp
xor
out
cmp
jl
or
pop
jno
sbbl
push
and
pusha
mov
int
mov
sbb
add
jge
push
xor
fsts
ret
jae
cltd
aas
and
into
mov
sbb
sub
and
jbe
dec
xchg
mov
mov
ds
xor
adc
inc
in
into
lret
pop
fdivrs
repnz
fs
jne
xor
andb
or
pop
mov
inc
and
leave
int3
outsl
add
nop
ss
ret
add
repz
int3
pop
iret
outsb
xor
pusha
pop
jge
jl
in
fsubs
inc
inc
xor
dec
insb
and
and
lock
xor
xchg
sub
jns
mov
cmp
adc
mov
push
loopne
sbb
loopne
lock
es
repz
pusha
test
jp
jns
sbb
mov
pusha
loop
inc
insb
jns
mov
mov
mov
loopne
jne
fs
flds
or
fcoms
sub
pusha
and
and
xor
ja
mov
add
and
mov
enter
mov
int3
into
or
pusha
mov
addr16
sbb
pop
jne
rolb
jl
lahf
dec
test
sbbb
push
pusha
mov
push
add
and
orb
jno
push
aaa
xchg
add
cmc
in
mov
clc
pop
in
hlt
loopne
in
mov
jmp
xchg
scas
shlb
push
loopne
out
shrb
add
xor
lahf
xor
or
mov
pusha
add
inc
rolb
into
and
jae
push
int
addb
push
jno
add
jbe
mov
sahf
dec
xchg
sub
add
outsl
test
pusha
mov
arpl
mov
ror
mov
pusha
xchg
sub
add
pop
xchg
jnp
pusha
inc
pop
jmp
addb
out
aaa
or
sub
add
cli
jnp
adc
lods
and
push
out
into
cmpsl
sbb
mov
add
inc
add
andb
mov
test
rcl
and
loopne
sub
add
cmc
fsubr
incb
jbe
and
das
xchg
insl
lds
sar
xor
and
inc
loopne
jmp
add
inc
and
mov
lds
mov
add
ljmp
mov
test
test
loopne
jno
push
shlb
cmpsb
mov
push
in
insb
in
jmp
fimuls
jno
inc
scas
sub
shl
clc
sub
subb
push
lds
jo
lret
inc
lret
mov
or
xorb
or
pusha
mov
or
fsub
sub
and
rcrb
mov
lods
pusha
pusha
lock
xlat
xlat
clc
inc
rcll
lds
arpl
dec
pop
ret
lcall
push
enter
inc
mov
or
inc
xor
pop
mov
insl
push
jle
add
sbbb
dec
lods
push
pop
lds
pusha
sbbb
int
and
xchg
cmp
ficompl
mov
mov
dec
fsubrl
shlb
ret
cmp
mov
and
popf
sbb
jnp
dec
sub
ret
mov
loopne
fstpl
add
rorb
mov
inc
push
test
mov
loopne
and
pusha
pusha
sub
mov
adc
push
and
push
add
mov
stos
or
out
sar
leave
shl
mov
jbe
fadd
mov
inc
sbb
loopne
imul
addb
add
inc
out
pop
push
out
mov
dec
dec
clc
fsubrl
andb
lods
pusha
add
pusha
and
cmp
test
jl
cmp
das
push
fdivrs
xchg
addr16
insb
sbb
out
mov
bound
cwtl
int
pusha
mov
fnstcw
repnz
pusha
dec
cmp
adc
jecxz
xchg
jp
ja
sub
rolb
mov
cmp
jno
xchg
xchg
mov
ret
inc
push
inc
add
cmpsb
inc
loopne
mov
shlb
push
pop
ljmp
push
aas
fistps
dec
decl
xor
cmpsb
andb
jge
test
loopne
insb
fimuls
fldenv
loopne
sub
add
stos
int
addb
and
jae
add
scas
add
mov
mov
sbb
divb
fldt
and
push
xchg
mov
xor
cmpsb
add
add
ja
and
add
jae
xor
and
add
aad
enter
fidivrs
popa
fsub
add
mov
loopne
mov
pop
inc
imul
pop
sbb
out
pop
inc
jl
adc
shlb
adc
out
and
mov
push
pusha
inc
icebp
sub
inc
aam
in
sub
mov
add
xlat
lahf
fisubs
sub
jl
or
testl
push
push
pusha
je
fs
or
sbb
push
in
and
loopne
jbe
repnz
adc
dec
fimuls
jmp
sub
push
mov
mov
xor
pop
mov
movsb
mov
pusha
and
add
sbb
push
add
test
pop
jns
inc
addb
fdivrp
andb
addb
mov
fmull
shlb
fistpll
mov
rorb
outsl
push
xor
and
mov
push
cmp
repz
aas
test
adc
lods
rolb
into
cmc
push
aas
int3
sbb
gs
fstl
in
jno
dec
xchg
inc
ret
lcall
stos
pop
ss
fwait
mov
daa
test
and
decb
addb
pop
test
shlb
mov
add
mov
add
ja
mov
in
popf
push
test
sub
pusha
loop
adc
or
and
and
sbb
xchg
addr16
mov
mov
and
push
rol
mov
mov
and
mov
xor
fdivrs
cmpsl
xchg
arpl
in
leave
push
mov
xchg
adc
stos
inc
jge
mov
adc
je
sti
pop
insl
pop
jb
out
test
rcrb
inc
fistpl
loop
rolb
ljmp
lods
inc
add
notb
rclb
andb
xchg
sub
inc
adc
xchg
aad
les
loopne
sbb
out
mov
mov
jp
into
mov
sti
ja
sub
inc
movsb
loopne
mov
xor
je
dec
shrl
xor
adc
add
inc
test
mov
loopne
hlt
inc
enter
xor
mov
rclb
movsb
and
push
mov
jg
and
mov
mov
int3
nop
loope
xor
pusha
add
cwtl
addb
pop
add
fdivr
jbe
pusha
rclb
fmuls
inc
loopne
mov
aam
adc
lds
xor
push
inc
jnp
and
lods
outsl
je
or
shr
jmp
mov
cmpsb
and
lahf
addl
movsl
sub
and
in
cmp
jmp
and
pop
hlt
out
stos
test
and
add
andb
pusha
push
rolb
test
lret
addr16
lahf
pop
movsl
aam
addb
add
sarb
hlt
and
xor
pop
test
inc
addb
testl
inc
add
inc
std
and
loopne
adc
adc
fisubrl
add
shlb
faddl
add
push
rolb
jbe
or
shrb
andb
in
jns
aas
or
stos
loopne
movsb
loopne
lds
add
sarb
adcl
xor
hlt
enter
dec
ret
adc
mov
add
lea
dec
rol
sti
mov
and
pop
mov
and
imul
mov
pusha
loopne
rcr
mov
sub
into
and
xor
in
mov
idiv
inc
push
jae
mov
icebp
or
addb
int3
in
stos
loopne
mov
inc
cs
add
xor
pop
pop
sub
mov
inc
mov
popa
push
push
fdivrs
and
pushf
mov
mov
roll
and
pusha
and
adc
add
push
add
and
jl
mov
inc
ss
lret
aaa
int
mov
adc
ret
aam
adc
hlt
add
pop
mov
shlb
xchg
movsl
in
sbb
add
and
mov
xor
sub
out
ret
add
fdivrs
add
popf
imul
inc
stos
mov
rorl
pusha
add
es
sbb
and
inc
fdivs
imul
jg
inc
rclb
pusha
sub
fnstcw
decl
mov
inc
push
ret
lock
pop
xor
gs
xor
enter
jmp
mov
lret
imul
lahf
sbb
adc
pop
pop
sub
js
cmc
addr16
mov
jns
jmp
xchg
push
and
pop
inc
sbb
ss
or
add
add
xchg
add
andl
loopne
jge
popa
dec
lea
inc
xlat
cli
dec
sbb
in
inc
xor
add
and
enter
pusha
icebp
pop
xlat
lcall
inc
or
test
shlb
push
and
add
adc
enter
add
mov
call
cmp
mov
mov
clc
je
add
data16
cmpl
jl
inc
shll
mov
cmpsb
inc
loopne
imul
mov
cwtl
adc
js
mov
sub
shl
inc
rcrb
mov
pusha
andb
mov
loopne
xchg
mov
cmpsl
inc
in
push
pop
dec
sub
add
jge
aas
int
xchg
dec
or
and
arpl
ret
stos
andb
mov
call
mov
jl
xchg
cmp
cmp
stos
mov
in
mov
xor
adc
aam
inc
ret
add
add
inc
xchg
enter
and
imul
loopne
imull
repnz
out
ja
rcl
add
jecxz
sub
adcb
xchg
adc
hlt
test
mov
mov
add
gs
xlat
jg
pushf
jp
popa
pushf
and
bound
test
pop
cmc
shr
sahf
mov
mov
inc
jb
inc
loopne
cltd
outsl
mov
shrb
inc
hlt
jnp
scas
and
cmpsl
movsb
and
repz
popa
dec
aad
pop
hlt
mov
or
pusha
aas
or
lds
mov
and
fistps
es
jecxz
or
mov
imul
add
pusha
shll
mov
push
pop
dec
xchg
inc
andb
js
out
ljmp
pop
pop
push
dec
dec
mov
fidivl
sti
mov
and
inc
jae
sbb
jbe
out
pusha
outsl
push
or
outsl
add
push
mov
andb
dec
jg
outsl
lahf
add
xchg
and
mov
add
mov
dec
xchg
push
xor
xchg
imull
xchg
shlb
loop
pusha
loopne
mov
imul
inc
or
add
dec
sahf
pop
and
mov
rclb
loopne
mov
lahf
mov
or
pusha
jp
push
mov
mov
outsb
imull
cwtl
jl
add
cmp
fisubrl
data16
cld
mov
lcall
adc
scas
inc
pusha
stc
and
cmp
xor
clc
and
inc
and
jbe
mov
add
negb
int3
roll
fs
loopne
in
imul
lods
loopne
push
sbb
pop
out
mov
adc
inc
pop
cmc
xchg
inc
rclb
lahf
cmp
cli
pop
mov
xor
sarb
pop
add
mov
cltd
mov
les
pusha
push
pusha
add
mov
inc
add
sub
repnz
lret
rol
jmp
outsl
enter
pusha
sub
inc
cmp
rorl
cmp
push
cmp
mov
outsb
stos
add
enter
out
or
inc
add
push
mov
loopne
cmp
addl
sub
bound
fwait
test
shll
outsl
push
mov
or
adcb
dec
mov
push
cmc
ja
add
and
inc
imul
test
mov
cmp
mov
add
ds
into
jo
dec
aam
js
jecxz
pusha
add
das
xchg
in
jp
loopne
fisttps
xor
and
loopne
shlb
mov
inc
jae
cmp
mov
mov
mov
push
push
pop
popf
pusha
fs
mov
or
mov
cmp
mov
jo
add
and
cld
shlb
add
pusha
add
mov
in
imul
fbstp
pusha
inc
aas
xchg
sbb
fldenv
inc
daa
stos
pusha
loopne
push
xchg
std
cmpsl
pop
push
sub
es
pusha
jbe
test
idivb
int3
cmpsb
addb
mov
push
leave
popa
pop
mov
je
dec
inc
es
rolb
rolb
call
add
inc
aad
bnd
jge
rcll
and
aaa
push
fs
rcl
jmp
dec
adc
push
sub
loopne
repnz
cmp
and
adc
xchg
xchg
aas
jecxz
sar
mov
ffreep
mov
rcll
and
sbbb
xor
out
les
sbb
push
mov
imul
mov
filds
inc
mov
fwait
lret
arpl
sub
mov
cli
and
stos
and
inc
je
sbb
jg
outsl
test
mov
fstl
add
inc
icebp
jns
fsubrl
addb
clc
jmp
in
push
cli
mov
cltd
stc
dec
das
jb
dec
je
rcl
adc
les
jne
cmp
pusha
rorb
and
jae
xchg
arpl
shrb
and
imul
addb
and
ret
mov
cld
sbb
or
das
scas
jle
rcrb
popf
sub
loopne
lret
jge
add
and
scas
inc
shrb
ja
or
inc
pushf
cmp
mov
stos
imul
add
jg
popl
loopne
jo
pop
or
fwait
pop
add
lret
xor
push
or
loopne
lahf
jbe
daa
push
add
and
xor
cwtl
fcos
cmpsb
inc
and
addb
adc
pop
sbb
aad
add
std
out
mov
jne
pop
cltd
lea
pusha
fimuls
pop
std
outsl
and
mov
shlb
mov
adc
mov
mov
cmpsl
pop
sbb
scas
add
push
push
ficomps
and
dec
incb
loopne
mov
cmp
sbb
mov
xchg
jb
pop
cmpsl
rolb
in
bound
movsb
shlb
mov
shl
jle
inc
xchg
dec
jbe
stos
dec
orl
sbbb
dec
mov
mov
mov
icebp
addr16
hlt
gs
push
bnd
push
mov
and
inc
mov
sbb
imulb
or
js
pusha
and
push
or
mov
lea
inc
repnz
mov
push
pop
cmp
cmp
and
pop
bound
dec
addr16
and
pushf
mov
jo
and
and
xor
outsl
sbb
lds
sbb
mov
mov
dec
or
pop
or
orb
pop
cmc
and
lods
inc
add
push
mov
and
add
add
add
