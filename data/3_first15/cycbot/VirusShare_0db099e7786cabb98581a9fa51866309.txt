add
push
and
xor
inc
push
xor
pusha
inc
inc
adc
pusha
inc
and
push
add
jo
push
add
inc
add
pusha
add
push
add
add
push
add
xor
jo
jo
add
inc
push
and
adc
and
and
adc
and
push
add
push
add
pusha
pusha
xor
inc
adc
push
pusha
push
xor
jo
pusha
add
push
add
jb
pusha
add
pusha
jo
add
pusha
xor
and
adc
push
add
push
adc
jb
push
add
xor
and
pusha
add
adc
add
add
inc
push
xor
bound
bound
push
push
jb
xor
adc
pusha
adc
adc
xor
jo
pusha
and
jb
jo
bound
and
push
adc
jo
adc
add
push
jo
and
push
add
adc
and
inc
and
add
adc
add
push
pusha
adc
adc
inc
push
and
add
adc
and
xor
push
jo
xor
adc
add
pusha
push
jb
bound
add
add
xor
jb
bound
xor
inc
xor
and
jo
inc
add
and
inc
jo
inc
add
inc
jo
pusha
xor
bound
adc
adc
adc
and
xor
add
inc
xor
xor
jo
jo
pusha
adc
adc
inc
push
jo
add
pusha
pusha
and
add
push
jo
and
inc
jo
and
jb
inc
add
add
inc
inc
and
jo
add
jb
adc
add
and
inc
push
inc
pusha
adc
adc
and
inc
bound
add
and
pusha
push
add
pusha
inc
push
and
adc
add
add
jo
and
push
adc
xor
add
jb
adc
add
jo
add
inc
add
jo
xor
push
add
bound
inc
push
xor
add
and
push
jo
add
inc
adc
pusha
add
add
and
add
adc
and
pusha
inc
add
inc
add
jo
add
push
jo
jo
and
push
pusha
push
and
adc
bound
jo
push
add
push
add
jo
and
add
and
adc
pusha
adc
push
adc
add
adc
adc
adc
adc
bound
and
xor
inc
xor
add
jb
add
push
add
xor
xor
xor
jo
add
and
push
xor
add
and
adc
add
xor
pusha
push
jo
add
xor
push
and
adc
and
jo
inc
xor
jo
pusha
adc
inc
jo
xor
add
inc
push
pusha
jo
xor
add
push
and
inc
push
push
inc
xor
add
xor
xor
adc
jo
inc
and
add
xor
inc
add
inc
push
push
pusha
add
pusha
xor
xor
add
and
add
add
add
inc
pusha
xor
push
pusha
pusha
inc
jb
bound
jb
and
and
add
adc
adc
bound
jo
push
jo
add
add
xor
add
xor
push
inc
jb
add
add
add
and
push
inc
bound
inc
and
add
add
pusha
pusha
add
and
jo
xor
push
pusha
add
and
inc
adc
xor
push
xor
add
and
pusha
push
xor
inc
jo
push
xor
jo
add
pusha
pusha
adc
and
inc
jo
adc
jb
inc
add
add
adc
xor
add
pusha
adc
inc
xor
adc
and
adc
adc
inc
adc
add
pusha
adc
push
adc
pusha
inc
and
jo
push
and
adc
push
add
adc
and
add
adc
and
adc
add
add
add
add
jo
pusha
and
inc
inc
adc
pusha
pusha
adc
adc
jo
pusha
push
add
and
xor
inc
add
add
adc
xor
add
push
adc
adc
push
adc
xor
push
push
add
and
inc
xor
push
and
pusha
inc
and
pusha
push
add
xor
and
inc
bound
push
inc
and
and
bound
pusha
xor
adc
inc
inc
pusha
inc
xor
and
inc
add
push
jb
bound
inc
add
add
add
and
pusha
jo
inc
and
inc
add
push
add
adc
push
add
adc
inc
xor
inc
adc
xor
pusha
adc
jo
jo
xor
and
add
adc
xor
bound
push
inc
push
inc
inc
add
adc
add
bound
and
inc
add
jo
jb
add
add
pusha
jo
xor
add
xor
push
inc
jo
add
and
jo
add
jb
inc
add
xor
add
push
push
push
add
push
pusha
xor
push
and
add
bound
push
and
inc
push
add
inc
push
push
inc
push
jo
add
and
add
jo
and
jo
add
and
jo
bound
adc
and
add
inc
and
bound
add
add
push
jo
inc
inc
inc
and
push
xor
add
jo
jo
xor
inc
push
inc
pusha
xor
add
adc
bound
inc
adc
add
push
add
adc
and
inc
jb
adc
push
and
inc
and
pusha
xor
pusha
add
xor
pusha
adc
adc
inc
and
adc
xor
inc
pusha
adc
jo
add
and
adc
add
jo
push
pusha
pusha
add
jo
xor
and
pusha
inc
adc
push
and
jo
push
pusha
jb
adc
pusha
pusha
add
bound
adc
and
pusha
pusha
add
add
push
adc
add
pusha
inc
xor
inc
and
add
pusha
add
adc
xor
add
and
inc
add
push
pusha
jo
push
inc
inc
bound
push
add
bound
and
jo
add
adc
add
pusha
and
inc
add
xor
push
pusha
and
xor
add
bound
and
pusha
inc
xor
add
pusha
pusha
add
add
add
inc
add
bound
adc
add
inc
add
jb
add
inc
inc
add
adc
inc
push
and
inc
push
inc
push
add
inc
inc
adc
and
inc
xor
bound
and
and
add
adc
add
xor
inc
inc
and
adc
jo
pusha
add
and
adc
inc
add
push
inc
add
add
push
xor
add
inc
add
inc
and
inc
inc
jb
push
inc
adc
add
add
jo
inc
bound
inc
bound
add
inc
add
inc
add
and
adc
and
pusha
inc
xor
push
inc
inc
xor
add
and
add
and
pusha
and
jo
bound
inc
add
push
inc
add
push
jo
push
and
inc
inc
xor
inc
xor
add
add
adc
pusha
adc
inc
xor
add
push
add
xor
inc
push
adc
jb
adc
add
adc
adc
and
jo
push
and
jo
add
xor
jb
adc
push
bound
add
jo
inc
jb
inc
inc
adc
jb
add
xor
xor
inc
inc
adc
add
pusha
inc
jo
jo
adc
pusha
adc
jb
pusha
add
xor
add
inc
inc
and
xor
inc
and
jb
bound
xor
pusha
push
jo
add
and
jo
xor
bound
xor
jo
add
and
jo
adc
pusha
adc
inc
and
add
and
adc
add
and
pusha
inc
xor
inc
pusha
xor
push
and
push
and
adc
add
inc
adc
adc
push
inc
jo
jo
inc
add
xor
jo
pusha
jo
pusha
inc
inc
xor
inc
jb
inc
add
add
add
adc
push
jo
xor
pusha
adc
xor
add
adc
and
adc
push
inc
inc
and
adc
xor
and
jo
xor
pusha
add
push
add
push
and
adc
add
push
xor
adc
xor
add
jb
xor
push
inc
add
adc
push
add
adc
jb
inc
add
add
and
jb
and
push
push
pusha
xor
jo
jo
and
push
inc
adc
adc
adc
and
xor
add
xor
pusha
and
pusha
xor
push
jo
and
and
add
push
push
push
inc
adc
push
adc
inc
xor
add
adc
jb
xor
inc
add
add
adc
inc
push
pusha
xor
inc
and
xor
inc
and
jo
inc
jo
xor
inc
and
inc
add
add
add
and
pusha
add
adc
xor
add
jb
inc
push
adc
add
push
inc
inc
bound
xor
pusha
pusha
and
adc
add
jo
adc
add
and
jb
inc
add
push
adc
add
adc
pusha
bound
add
jb
add
adc
add
and
add
add
add
bound
inc
jo
and
push
push
add
jo
jo
xor
xor
add
inc
push
inc
adc
adc
xor
push
pusha
and
adc
xor
jo
adc
pusha
and
xor
pusha
add
xor
bound
inc
add
adc
add
and
inc
and
inc
add
push
and
jb
and
adc
push
inc
add
add
add
and
jo
inc
xor
adc
and
pusha
xor
xor
and
adc
xor
xor
adc
inc
jo
and
and
add
adc
jo
and
add
add
jb
inc
add
adc
xor
add
xor
adc
jb
and
and
inc
and
xor
and
pusha
push
pusha
and
push
inc
add
xor
inc
adc
adc
jo
xor
and
jo
push
add
and
xor
adc
and
xor
adc
xor
pusha
xor
adc
push
add
xor
adc
and
xor
add
xor
adc
push
pusha
push
pusha
xor
push
adc
adc
add
inc
and
pusha
add
adc
add
inc
inc
push
push
bound
adc
add
pusha
and
jo
inc
add
inc
push
xor
add
push
push
and
pusha
and
and
inc
and
bound
add
inc
inc
add
and
add
add
and
add
add
adc
and
add
and
and
and
inc
and
add
add
inc
xor
adc
inc
and
inc
adc
push
add
jo
xor
xor
inc
add
pusha
inc
pusha
push
add
inc
inc
xor
inc
inc
adc
xor
push
add
xor
and
add
and
add
add
adc
jo
inc
inc
xor
adc
inc
add
adc
inc
xor
add
adc
adc
add
push
adc
xor
jb
add
pusha
xor
add
inc
pusha
add
add
inc
adc
xor
and
inc
bound
add
xor
push
add
bound
and
add
adc
push
jb
and
add
add
pusha
and
pusha
and
add
and
bound
adc
xor
adc
xor
and
and
pusha
jo
push
add
jb
and
pusha
add
xor
xor
inc
add
inc
xor
pusha
and
jb
jb
xor
jo
jb
pusha
adc
bound
push
jo
pusha
jo
push
add
and
and
add
add
adc
adc
and
inc
inc
xor
push
and
add
push
add
xor
pusha
inc
add
push
adc
push
add
jo
xor
pusha
add
push
add
jo
jo
add
add
adc
adc
jo
push
inc
and
inc
pusha
and
pusha
adc
add
pusha
xor
inc
xor
push
and
adc
and
pusha
adc
push
adc
and
bound
push
jo
add
xor
and
pusha
add
jb
adc
and
adc
jo
push
inc
add
push
and
jo
add
jo
bound
inc
inc
pusha
push
push
jb
bound
xor
pusha
adc
inc
and
and
xor
adc
xor
add
bound
xor
xor
add
and
adc
inc
pusha
and
pusha
jb
inc
add
inc
jo
adc
inc
push
inc
adc
adc
add
xor
xor
inc
xor
inc
inc
add
pusha
push
jo
adc
add
and
xor
pusha
add
and
and
bound
jo
inc
add
xor
add
add
jo
add
and
xor
add
adc
adc
inc
jo
and
adc
add
pusha
inc
add
inc
push
add
adc
pusha
add
and
xor
jo
pusha
inc
add
and
inc
xor
adc
push
add
and
add
jo
push
jo
and
and
adc
adc
adc
and
adc
add
jb
and
add
add
add
add
adc
xor
jo
add
xor
inc
push
adc
push
and
inc
inc
push
add
pusha
and
and
add
inc
add
xor
pusha
add
pusha
add
xor
xor
xor
inc
xor
xor
inc
adc
pusha
push
inc
adc
inc
add
inc
add
adc
adc
inc
inc
adc
xor
add
add
and
pusha
jo
add
jo
adc
add
jo
push
add
inc
pusha
pusha
add
jo
add
xor
xor
inc
add
and
pusha
inc
and
add
push
push
adc
adc
add
add
pusha
add
add
xor
push
adc
inc
and
push
adc
and
adc
push
jo
inc
jb
xor
push
adc
bound
add
inc
adc
add
push
jo
pusha
inc
xor
add
add
and
xor
pusha
add
push
adc
add
push
adc
xor
push
adc
and
add
add
add
push
and
push
adc
pusha
push
inc
add
adc
push
adc
add
xor
jo
add
pusha
and
adc
add
and
add
bound
adc
xor
push
add
add
add
and
add
inc
inc
push
and
add
add
xor
and
pusha
add
inc
add
xor
xor
add
and
add
adc
inc
inc
adc
adc
add
and
push
pusha
bound
push
and
inc
jo
add
adc
inc
push
inc
adc
inc
push
jo
add
adc
and
adc
push
push
push
pusha
bound
add
xor
push
adc
xor
xor
and
xor
jo
and
jb
and
add
jo
adc
add
push
and
push
inc
pusha
xor
xor
add
add
and
jb
and
and
add
xor
xor
inc
push
and
add
push
add
adc
add
push
jo
pusha
adc
add
pusha
bound
adc
inc
xor
inc
xor
add
jo
add
inc
add
and
and
bound
xor
and
add
xor
pusha
pusha
add
add
pusha
pusha
add
bound
add
xor
add
pusha
adc
push
inc
inc
xor
xor
adc
xor
and
push
adc
xor
add
push
and
and
push
push
inc
push
xor
xor
jo
xor
jo
add
adc
adc
jo
jo
add
push
bound
adc
inc
adc
and
bound
add
xor
and
inc
adc
add
pusha
add
xor
pusha
pusha
inc
add
jo
xor
and
adc
jb
push
add
add
xor
pusha
pusha
add
inc
and
inc
add
and
pusha
and
add
xor
adc
add
inc
adc
pusha
bound
push
add
adc
inc
inc
pusha
xor
push
xor
and
xor
jo
pusha
add
push
adc
inc
jo
push
and
add
adc
xor
pusha
inc
inc
inc
adc
add
adc
pusha
xor
xor
pusha
and
jb
pusha
xor
jo
adc
adc
xor
add
inc
push
add
add
add
bound
bound
xor
adc
adc
add
jo
inc
add
xor
xor
xor
add
adc
xor
add
adc
inc
and
bound
inc
jo
jo
inc
and
bound
add
add
and
jb
and
xor
xor
jo
add
push
adc
push
and
xor
inc
adc
add
push
adc
inc
add
add
and
bound
push
xor
push
add
inc
inc
xor
xor
add
pusha
and
xor
inc
inc
xor
add
add
pusha
push
add
inc
inc
add
adc
adc
bound
inc
bound
xor
inc
pusha
add
adc
xor
jb
inc
jo
add
adc
add
jo
inc
add
adc
add
push
add
push
add
and
and
add
push
inc
adc
jo
jb
add
inc
push
adc
xor
inc
and
pusha
adc
xor
adc
adc
jb
and
and
inc
push
adc
add
xor
inc
and
jo
adc
adc
inc
bound
xor
pusha
pusha
add
and
add
adc
pusha
xor
jo
add
inc
jb
adc
adc
jo
push
pusha
push
add
jo
inc
xor
add
adc
bound
xor
inc
add
and
adc
push
add
xor
jo
add
and
pusha
adc
add
push
and
push
inc
push
pusha
adc
and
xor
adc
xor
add
inc
and
bound
xor
adc
xor
jo
add
bound
add
jo
inc
inc
and
jb
inc
add
jo
pusha
and
add
adc
pusha
xor
add
pusha
and
adc
add
adc
xor
pusha
and
jo
and
xor
add
push
push
adc
inc
jo
and
pusha
inc
push
jb
add
inc
and
add
add
push
xor
add
push
xor
adc
add
jb
push
push
inc
add
adc
pusha
jb
bound
add
xor
adc
inc
and
inc
pusha
xor
and
and
jo
adc
push
inc
and
push
inc
add
jo
push
pusha
jb
pusha
add
add
pusha
inc
adc
and
inc
and
add
and
and
and
push
pusha
add
push
add
inc
inc
and
adc
add
inc
and
xor
pusha
and
xor
add
bound
xor
add
jo
xor
add
add
xor
and
and
add
inc
adc
jo
add
xor
xor
add
add
jb
add
and
add
xor
jo
inc
push
and
adc
jb
inc
and
push
and
add
pusha
and
add
xor
pusha
jb
xor
pusha
jo
inc
xor
add
inc
jo
and
inc
pusha
add
and
and
adc
adc
pusha
jo
inc
pusha
inc
and
and
xor
pusha
push
pusha
push
add
add
add
add
inc
xor
pusha
add
xor
adc
add
xor
push
bound
push
inc
bound
inc
and
and
add
and
inc
jo
xor
adc
push
inc
add
jo
add
push
inc
add
push
jo
push
jo
add
add
adc
push
add
pusha
bound
xor
inc
push
push
adc
adc
inc
push
inc
xor
jb
xor
and
inc
pusha
add
and
pusha
and
add
and
add
push
inc
inc
jo
pusha
inc
add
add
and
add
and
pusha
xor
bound
push
inc
xor
inc
pusha
adc
adc
push
pusha
pusha
add
pusha
adc
xor
adc
bound
push
jo
add
push
xor
add
jo
inc
xor
jo
jb
push
add
adc
xor
pusha
bound
add
push
adc
and
add
adc
pusha
push
add
and
jo
pusha
add
and
inc
inc
inc
adc
add
bound
inc
add
push
add
and
and
pusha
adc
adc
add
jo
add
push
add
jo
and
add
jo
add
push
and
jo
and
and
inc
add
and
xor
add
add
jb
xor
pusha
xor
jb
adc
adc
and
xor
xor
add
jo
add
inc
push
push
xor
adc
xor
pusha
push
jo
bound
jb
inc
adc
and
adc
jb
add
jo
inc
push
add
add
push
and
add
xor
xor
add
xor
jb
jb
add
xor
push
add
inc
and
adc
jo
add
pusha
adc
adc
inc
bound
pusha
add
and
add
push
jo
pusha
push
inc
jo
adc
and
add
pusha
xor
push
and
inc
jo
push
adc
and
push
and
pusha
jo
adc
adc
add
add
inc
push
and
adc
inc
add
and
inc
adc
push
push
jb
and
inc
jo
jb
and
jb
adc
and
add
inc
jo
xor
inc
inc
add
and
and
add
push
pusha
pusha
pusha
xor
and
and
add
pusha
inc
adc
add
add
push
push
add
and
inc
xor
push
and
pusha
add
and
add
and
xor
add
pusha
and
inc
add
bound
xor
push
add
and
adc
inc
adc
and
add
add
pusha
and
jb
inc
inc
inc
push
add
and
add
push
add
add
inc
push
add
push
push
adc
add
add
pusha
xor
adc
adc
jo
add
pusha
and
push
add
and
push
push
add
push
add
pusha
inc
push
add
add
bound
push
adc
add
add
add
jo
adc
pusha
and
inc
push
push
adc
adc
and
jo
adc
push
and
add
push
push
push
inc
pusha
add
and
and
adc
xor
and
add
xor
xor
adc
bound
add
inc
xor
and
and
and
inc
xor
push
and
xor
pusha
inc
jo
add
xor
add
push
add
push
jo
jo
inc
jo
inc
push
xor
add
and
xor
add
xor
and
and
add
add
adc
inc
inc
adc
pusha
xor
add
inc
inc
inc
adc
pusha
add
and
push
add
bound
jb
pusha
add
pusha
xor
inc
jb
inc
xor
and
add
xor
jo
and
xor
add
pusha
jo
pusha
inc
add
and
inc
inc
jb
add
jb
push
adc
add
and
add
inc
xor
xor
bound
xor
inc
adc
jo
xor
add
and
xor
add
add
push
push
add
adc
and
push
inc
inc
xor
jo
and
adc
add
bound
xor
and
add
and
add
jo
add
jo
push
xor
add
add
and
inc
inc
inc
push
bound
adc
add
add
pusha
xor
and
jb
adc
push
jo
add
inc
and
jo
push
add
adc
adc
add
push
adc
push
inc
jo
jo
xor
jo
bound
adc
xor
inc
add
adc
add
add
and
push
pusha
xor
push
adc
pusha
jb
inc
jo
xor
pusha
add
adc
inc
jb
inc
add
push
xor
push
xor
push
push
push
push
xor
add
adc
inc
pusha
pusha
add
adc
and
add
add
push
and
and
add
and
add
add
adc
adc
add
add
adc
pusha
add
add
xor
and
add
add
xor
push
add
pusha
adc
and
add
push
pusha
adc
and
and
xor
inc
inc
and
add
xor
jo
adc
add
add
add
xor
push
jo
inc
adc
inc
bound
add
jb
xor
xor
and
xor
adc
inc
adc
bound
and
add
jo
xor
adc
and
jb
xor
and
add
inc
jo
add
add
inc
inc
jo
push
add
inc
xor
xor
and
inc
inc
and
xor
inc
push
inc
adc
pusha
push
xor
xor
add
xor
inc
adc
and
xor
and
add
adc
xor
pusha
and
xor
push
pusha
bound
xor
add
adc
and
adc
jb
jo
jo
and
xor
xor
add
add
inc
jb
adc
adc
xor
jo
inc
adc
adc
and
add
add
jo
bound
inc
push
jo
pusha
adc
add
inc
inc
xor
adc
pusha
pusha
inc
jo
and
add
add
inc
xor
xor
jo
inc
push
add
inc
inc
push
add
inc
and
push
pusha
jo
and
pusha
push
pusha
xor
adc
and
pusha
add
adc
and
and
inc
push
inc
xor
xor
add
add
inc
push
add
push
add
adc
add
push
and
jo
pusha
and
bound
pusha
add
add
pusha
pusha
and
xor
inc
inc
inc
jo
jb
pusha
add
add
add
inc
add
adc
and
add
pusha
bound
pusha
bound
inc
inc
adc
leave
sub
fistps
shl
dec
bound
jl
sbb
mov
mov
lds
dec
mov
jbe
decb
cmpsb
ficoms
lret
loope
jns
mov
mov
pop
divl
xor
bound
das
lods
pop
pop
sahf
enter
test
hlt
stos
and
arpl
mov
xchg
inc
xchg
cmpsl
mov
int3
xchg
movsb
adc
pop
mov
jae
dec
add
add
cmp
add
add
xchg
lock
or
aaa
pop
dec
xor
andb
pushf
sub
add
add
mov
add
cld
ret
xor
int3
adc
pop
jo
and
mov
and
loopne
fbld
xchg
fildl
sub
aas
mov
lcall
addr16
push
insl
imul
mov
add
mov
add
ret
jb
jo
lea
hlt
jl
sbb
xchg
push
inc
dec
mov
or
std
cmp
lock
lret
movsb
cmp
add
add
mov
cmp
xor
stos
push
loope
lret
aam
fsubrs
add
add
loopne
inc
add
add
sub
add
add
imul
mov
pop
stc
stos
call
ret
test
pop
pop
sbb
shll
add
mov
mov
data16
pop
mov
add
mov
push
mov
sbbb
mov
leave
xor
sarb
jle
add
add
inc
add
add
adc
pop
cld
outsb
xor
jmp
push
cs
call
mov
mov
add
jl
div
call
inc
mov
sahf
mov
add
add
insl
mov
push
test
or
mov
aaa
test
nop
out
daa
inc
dec
mov
gs
dec
add
add
mov
inc
jnp
sbb
cmp
aaa
scas
sub
xchg
adc
mov
bound
out
dec
notb
es
xchg
cltd
into
push
inc
fwait
call
lret
shll
sub
mov
aam
pop
xchg
fcmovnb
je
stos
xlat
popa
cwtl
fisttps
add
add
add
add
inc
lods
fwait
inc
add
pop
dec
fcomi
pop
pop
scas
add
mov
add
add
scas
sbb
push
fmull
mov
add
add
fmull
add
add
xchg
xchg
pop
xchg
lret
add
add
int
or
cmpsl
rolb
pop
fcomps
push
hlt
inc
add
add
push
jp
push
push
mov
out
lret
push
dec
cmp
adc
insb
add
out
das
int3
mov
add
push
inc
mov
or
ja
cmp
leave
pop
jmp
mov
lea
ret
icebp
inc
int
lret
cmp
and
add
add
add
cmp
jmp
pop
adc
ja
push
jnp
ljmp
ret
jp
cmpsb
xor
add
jge
cld
cmpsb
xor
and
cmp
ss
add
cmpsl
sub
jnp
jmp
mov
sbb
sbb
loopne
sub
gs
add
add
inc
lahf
fsts
add
add
mov
cmpsb
jecxz
inc
add
add
add
and
aaa
stos
mov
shll
jbe
push
add
add
adc
add
add
add
add
imul
andl
in
inc
add
add
fistpl
add
add
jns
inc
add
cs
add
add
jnp
adc
scas
cmp
test
cltd
sarl
sub
mov
dec
or
add
add
add
add
scas
icebp
fiadds
pop
sbb
out
xchg
hlt
out
int
mov
add
add
jecxz
fildl
add
add
jne
insb
add
insb
add
mov
add
add
and
mov
sbb
add
push
mov
add
add
add
push
mov
adc
add
push
jmp
mov
pop
imull
jne
sbb
stos
lahf
fcos
loopne
imul
or
add
add
sbb
sbb
inc
add
inc
out
mov
add
or
add
add
add
add
push
es
std
fcoml
test
out
xchg
insl
inc
out
out
jle
ffreep
fst
pop
sbb
xor
add
test
add
add
add
loope
lret
mov
stc
dec
mov
add
add
in
dec
je
adc
add
add
mov
pop
or
mov
add
add
add
test
cmp
lret
ret
or
test
lret
jae
popf
incb
mov
test
xchg
pusha
add
add
dec
add
add
inc
push
xchg
jne
ret
inc
add
cmpsb
sbb
cmp
lret
dec
add
mov
dec
pop
rclb
scas
aad
add
add
les
add
add
mov
add
add
add
jge
mov
pop
jae
push
pop
cmc
ljmp
add
pop
mov
inc
enter
stc
dec
add
popf
ljmp
sub
push
mov
dec
daa
stc
movsb
jne
fadd
outsb
mov
cmp
jl
cmp
jl
xchg
pop
pop
mov
jle
mov
xor
stos
lods
inc
and
mov
mov
aas
loop
addb
and
add
add
lock
hlt
mov
push
sbb
add
add
jmp
add
cmp
fcomi
inc
rep
mov
repz
in
add
add
inc
add
int
hlt
pop
ret
scas
in
pop
and
add
add
mov
in
arpl
xchg
inc
mov
mov
sub
jo
jge
or
add
add
add
add
lretw
fwait
add
add
add
mov
pop
int
cld
js
call
add
add
xchg
push
inc
add
ja
or
mov
cld
mov
pop
xchg
fnstcw
neg
sbb
loop
and
outsl
mov
inc
aaa
sbb
add
test
dec
icebp
stos
dec
mov
inc
pop
repnz
addl
add
mov
orb
out
mov
mov
add
add
mov
popf
or
movsl
ds
add
add
add
fdivrs
jl
sti
leave
and
mov
outsb
or
xchg
int
je
test
xlat
loop
out
orl
add
add
or
loope
mov
loopne
jl
cmc
xchg
int
pop
xchg
pushf
push
in
cmpsl
ljmp
mov
cld
mov
aad
and
int3
pop
bound
out
bound
mov
in
test
repz
xor
xor
jae
add
jecxz
add
das
movsl
testl
add
pop
repz
mov
pop
xor
add
sbb
dec
ss
add
clc
fucom
jmp
je
mov
push
out
sbb
rolb
call
push
cmpl
adc
ret
and
int
inc
fldcw
dec
lods
daa
std
sub
shrl
lods
mov
add
mov
scas
and
add
add
cmpsl
jb
cmp
add
xchg
dec
outsb
sahf
push
jmp
rol
mov
ja
leave
or
add
add
mov
mov
add
add
add
mov
mov
add
je
push
fsubs
ret
aam
dec
add
add
or
mov
insl
cmpsb
or
add
add
pusha
add
add
loopne
mov
aam
add
add
sub
mov
add
add
cmp
xor
pop
xlat
cmp
sbb
add
mov
inc
add
loopne
jge
fdivl
mov
pop
add
add
add
int
mov
addr16
movb
add
or
mov
iret
mov
imul
fisttpll
add
add
dec
xor
jnp
fistpl
add
mov
push
and
and
dec
mov
jg
out
inc
add
add
sub
add
fnsave
sub
inc
push
cwtl
sub
add
add
icebp
cmp
sub
add
add
cltd
xor
sbb
dec
mov
cli
dec
movd
cmc
jne
xor
jno
xor
and
ret
fbld
mov
cmpsl
mov
sub
add
add
push
mov
jb
imul
dec
add
orl
bound
ljmp
push
fstpl
mov
testb
fstps
mov
cwtl
jbe
push
xor
pop
mov
pop
add
add
add
dec
adc
add
add
add
add
adc
dec
imul
mov
add
mov
mov
ljmp
fwait
mov
add
add
mov
ja
mov
lods
jecxz
xchg
mov
xchg
movb
jmp
sub
add
add
dec
add
add
mov
sbb
pushf
fbld
sti
sbb
xchg
dec
lds
mov
pop
cmp
xchg
insb
add
stc
add
add
fisubrs
mov
imul
in
add
add
std
xor
dec
fwait
cli
adc
cmp
or
mov
push
adc
mov
push
push
pop
inc
add
add
cmpsb
enter
mov
add
out
imul
add
ret
aas
cld
xor
inc
std
fcomps
inc
pop
inc
mov
popf
fildl
add
add
add
add
rorb
mov
mov
in
out
loopne
rcll
add
shrl
add
add
push
xchg
inc
fbstp
push
shrl
add
daa
and
lods
int3
je
push
and
xlat
pusha
add
lcall
push
aaa
sbb
sub
mov
mov
shr
sub
add
add
lret
in
and
lods
pop
add
add
jno
aas
jp
lods
dec
add
and
jp
sahf
or
mov
cmp
and
add
jl
movsb
push
or
mov
jp
cmpsl
fisubrl
inc
in
adc
lret
mov
add
lock
xor
cmp
popf
ret
jle
shl
loope
add
add
add
sub
jae
out
cltd
pop
imul
js
mov
in
add
nop
and
add
add
pop
stos
adc
cmp
sti
scas
dec
push
call
das
stos
or
jl
dec
pop
les
cmc
int3
dec
lods
or
add
add
jge
and
add
add
xor
outsl
pop
iret
lock
pop
insb
add
je
or
in
xchg
outsl
mov
test
push
push
cmp
aas
andl
cs
in
jnp
out
add
jmp
cmp
inc
push
sbb
inc
add
mov
xchg
or
outsb
hlt
or
mov
es
add
add
test
mov
xor
cmp
in
movsl
outsl
int
pop
mov
lret
adc
aas
pop
or
push
pop
mov
or
mov
jmp
pushf
or
loope
pop
mov
add
add
add
fbstp
mov
mov
arpl
enter
xchg
lret
mov
pop
or
lods
ret
add
add
shrl
sbb
ds
jns
pusha
add
mov
mov
xor
pop
pop
shl
arpl
adc
fistl
pop
xorl
add
add
push
int3
dec
dec
add
sbb
lods
pop
push
xor
imul
sub
lds
mov
ss
scas
and
mov
push
cmp
inc
add
add
shl
mov
add
add
jecxz
push
push
adc
fcmovne
mov
add
shlb
insb
add
add
das
mov
sub
mov
jbe
iret
lret
cmp
add
lret
mov
add
fwait
adc
mov
clc
jg
aam
add
add
add
sub
es
daa
sbb
sub
push
lret
pop
and
and
mov
in
mov
dec
scas
pop
out
movsl
or
add
add
add
mov
add
pop
jae
push
lock
push
addr16
je
call
loopne
add
add
rcll
ss
cmp
add
add
cmc
mov
pop
int
mov
leave
scas
pop
mov
pop
mov
incl
xchg
sub
loope
cmp
xchg
sti
and
add
add
xor
add
sbb
jb
xor
pop
outsl
xchg
cmp
and
push
mov
pop
pop
inc
jle
or
add
add
jae
mov
add
add
repnz
mov
pop
fwait
mov
mov
mov
push
pop
rcll
or
outsl
insl
push
cmp
mov
add
add
add
movsl
dec
cmpsb
pop
cmp
jnp
mov
bound
test
dec
cmp
fsubl
add
add
dec
add
mov
mov
sbb
add
out
push
xchg
lea
stc
adc
push
xchg
scas
mov
mov
push
push
cmp
and
shl
fdivl
xor
mov
scas
imul
xchg
and
push
clc
int
shll
cmpsb
out
add
add
fcmovnbe
fsts
fidivl
cli
push
pop
jb
stc
xchg
jecxz
sbb
push
push
adc
leave
into
jnp
data16
jl
shll
stos
adc
add
cmpsb
add
add
add
xchg
test
jno
add
out
testb
or
enter
cwtl
aad
test
xor
add
mov
jge
iret
cld
stc
xchg
int
and
push
mov
dec
mov
add
add
pop
outsb
mov
add
add
mov
push
and
adc
fisubrl
mov
jg
jle
mov
jecxz
jnp
cmp
lcall
adc
nop
repnz
add
add
add
mov
jge
frstor
in
xchg
into
jecxz
xchg
cmpsl
rcl
push
out
gs
in
repz
hlt
sbb
aaa
xlat
mov
test
mov
repz
add
jle
das
test
ret
add
add
popf
xchg
add
jbe
adc
sbb
aam
out
lock
insl
cwtl
mov
inc
adc
add
add
jg
movsb
lods
push
xchg
test
mov
hlt
pop
test
into
xchg
loop
rolb
gs
xor
mov
add
pusha
add
add
mov
out
lods
cwtl
cwtl
leave
push
loopne
and
push
fucomp
out
pop
inc
add
add
dec
add
push
pop
push
mov
sbb
out
ss
jge
mov
ljmp
cmc
push
inc
add
add
fists
jae
add
add
lea
cwtl
ja
je
stos
addr16
mov
jp
fisubrl
cmpsb
fdivrl
push
out
mov
add
add
mov
jmp
xchg
inc
mov
jno
cmp
or
add
or
add
add
lea
in
xor
stc
add
mov
sbb
add
mov
lea
push
push
inc
add
add
pmuludq
adc
jnp
test
mov
cltd
xchg
stos
cld
fcompl
stos
and
jle
mov
enter
mov
in
push
mov
sub
test
mov
jo
fcomp
inc
add
add
pop
pop
pop
cmp
jecxz
cli
push
movsl
xor
cld
fsts
add
add
add
add
add
add
mov
hlt
cs
lods
je
into
adc
xor
je
jbe
mov
push
outsl
lods
pop
xchg
or
mov
add
add
shl
scas
out
stos
xlat
inc
dec
js
jnp
mov
daa
lods
ja
and
mov
add
add
add
leave
jg
je,pn
cmpsl
mov
stc
inc
popa
stos
mov
popf
add
and
and
add
add
aam
mov
leave
push
ret
test
add
mov
jmp
lods
leave
cmpsl
subl
add
es
movsl
das
mov
gs
sar
adc
bound
add
mov
push
ja
mov
lds
popf
es
add
add
iret
addr16
arpl
add
int
lods
xchg
mov
ljmp
push
out
mov
outsb
out
aad
sbb
push
add
and
add
add
into
xlat
aas
popf
scas
lods
or
add
add
cltd
mov
lea
pop
jg
daa
add
add
add
sbb
es
add
add
push
cmp
add
pop
gs
pop
cmpsl
inc
add
add
add
dec
aam
idivl
jl
dec
ljmp
mov
add
imul
sarb
xor
out
mov
lahf
or
add
add
jmp
push
cmc
dec
je
cmpsb
in
ficoml
adc
movsl
or
pop
mov
mov
inc
mov
pop
cwtl
sbb
int
movsb
sbb
pop
fldl
roll
mov
ja
pop
push
xchg
pop
andb
add
add
add
add
into
adcb
mov
in
das
les
enter
add
add
aad
ss
xor
xchg
jo
mov
cwtl
movl
lea
stos
iret
ss
adc
jb
xchg
lea
rolb
dec
push
sbb
int
xchg
jnp
add
loopne
mov
xchg
movsb
fisubl
xchg
mov
sub
in
fwait
ret
ss
mov
out
es
push
mov
insb
add
add
dec
add
mov
jo
push
xchg
daa
pop
add
mov
jmp
mov
push
daa
push
lds
mov
add
outsb
das
imul
aas
xor
jo
pop
cmp
mov
int3
cmp
add
pop
fildll
add
add
or
andl
das
ds
mov
mov
scas
out
jp
adc
sahf
neg
mov
mov
jns
loop
sbb
mov
in
in
lods
ss
sbb
imul
fimull
mov
pop
in
nop
pop
cltd
jecxz
ljmp
into
divb
inc
add
adc
je
hlt
and
mov
add
add
sbb
xchg
lcall
sub
mov
sub
add
add
nop
cmp
pop
push
and
ss
sar
imul
add
sub
adcb
int3
enter
add
add
ret
dec
mov
sbb
adc
pop
add
add
fistpl
sti
lahf
or
lods
movsb
jle
inc
add
add
enter
add
push
sbb
pop
cmp
clc
xchg
add
mov
out
bound
add
add
scas
dec
adc
add
aad
lahf
sub
mov
xchg
mov
fcmovnb
hlt
shll
add
outsl
rcl
clc
js
sbb
add
add
xor
repnz
pusha
add
maskmovq
negl
pop
out
add
add
add
pop
cmp
les
and
add
add
lret
popa
sbb
xchg
roll
jne
add
movsb
aaa
mov
pop
push
repnz
mov
or
out
add
add
add
cmp
inc
add
add
fstpl
jle
sub
xor
xor
fiadds
push
js
and
mov
jl
loopne
out
add
add
add
mov
imul
and
mov
add
mov
in
sbb
xor
aas
or
add
add
add
mov
jno
out
jnp
jmp
cmp
repnz
clc
out
add
pop
mov
std
sub
arpl
xchg
lahf
lret
call
and
push
mov
add
cmp
jne
lea
push
push
mov
push
call
cld
or
mov
shr
shr
mov
add
push
push
push
push
push
call
leave
ret
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
not
inc
sub
mov
clc
je
push
pop
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
push
cld
call
test
je
jmp
add
adc
ds
or
mov
add
add
adc
popa
push
xchg
pop
leave
mov
add
dec
sub
mov
mov
push
add
mov
jbe
aad
add
xchg
nop
dec
sub
mov
sbb
or
clc
aaa
cmc
adc
xor
jo
dec
lcall
stos
ds
test
add
add
enter
mov
jno
stos
cmovge
jmp
call
and
mov
fwait
and
add
dec
add
add
cmp
loop
xor
lcall
add
add
iret
inc
repnz
cmp
jge
add
add
hlt
dec
imul
fwait
pop
sub
lods
xlat
lea
lcall
cmpsl
and
add
fcomps
jle
popf
mov
mov
cmp
fcoml
xchg
add
add
mov
add
xchg
and
add
add
ret
in
pop
cli
sub
repnz
sbbb
loop
lea
and
mov
mov
add
add
add
jge
inc
xchg
insl
shll
shr
add
add
clc
sub
mov
ret
lods
sbb
stos
repnz
add
adc
jmp
add
add
add
push
pop
cwtl
mov
aam
mov
add
mov
add
add
fidivl
jne
and
mov
leave
jo
add
add
add
jo
lcall
or
add
add
jecxz
out
testl
fildll
cmpl
push
andl
pop
jns
fcomps
and
xor
pop
repz
hlt
cmpsb
fistps
pop
out
adc
add
jae
leave
popa
daa
inc
popf
ss
jmp
imul
sbb
add
and
mov
insl
addb
test
pop
sub
add
add
into
out
mov
mov
jbe
pop
or
mov
mov
cs
xchg
push
cmpsl
imulb
mov
fidivrl
loop
out
cmc
jne
mov
les
jle
add
xchg
mov
jnp
add
add
xchg
clc
loopne
add
lds
sub
stc
mov
fadds
pop
pop
cs
add
add
inc
add
add
stc
mov
repz
lea
add
adc
je
es
mov
xchg
push
mov
sub
jbe
sbb
fcomp
flds
mov
xchg
lahf
into
gs
mov
pop
iret
insl
cld
jnp
enter
push
ja
ret
dec
add
xor
adc
sbb
enter
cmp
shr
push
xchg
xchg
ljmp
add
jno
movsb
pop
cld
clc
add
add
add
mov
mov
dec
imul
or
add
add
pop
in
xor
xchg
call
inc
into
fists
push
inc
stos
sarb
sbb
dec
movsb
pushf
es
or
movsl
stos
cmp
dec
pop
outsl
cli
je
sub
mov
repnz
in
cmp
push
test
jno
push
loope
fnstsw
ljmp
add
imul
mov
enter
sbb
jecxz
mov
add
out
push
ret
inc
movsl
cmp
loopne
adc
adc
and
sbb
pop
lret
or
sub
aad
add
add
out
loop
push
ljmp
add
add
mov
lds
enter
xor
jbe
loopne
and
add
add
icebp
jle
cmpsl
mov
out
das
xlat
std
fiadds
mov
mov
arpl
mov
xor
insb
add
stc
popf
subl
das
jo
xor
pushf
lgs
mov
xchg
mov
add
fsubr
int
or
xor
arpl
pushf
xor
jecxz
in
cmp
jmp
xor
rolb
add
cld
adc
fwait
out
in
pop
inc
add
add
jmp
add
mov
aas
and
mov
jno
in
test
ljmp
add
add
add
pop
push
arpl
xchg
imul
shlb
movsb
xlat
dec
lahf
jmp
inc
leave
faddl
add
jno
adc
push
fnstenv
adc
adc
add
add
push
jp
into
add
add
add
adc
ret
inc
and
and
add
add
mov
inc
mov
mov
dec
xchg
cmp
mov
add
ficoml
insb
add
add
lods
adc
add
add
xor
sbb
mov
xor
xor
iret
pop
aad
mov
jge
scas
outsb
clc
mov
pusha
add
add
icebp
or
add
add
mov
add
add
xor
xchg
jns
into
add
mov
dec
popf
mov
or
mov
cmp
mov
imul
cwtl
or
add
jp
lds
or
hlt
pop
sbb
lret
or
add
add
pushf
jno
clc
cs
insb
add
fidivrs
push
xor
mov
jge
sbb
outsb
sbb
mov
push
adc
push
mov
add
jle
inc
add
mov
adc
jg
xor
adc
outsl
pop
xchg
cmpsb
imul
ret
test
add
mov
add
add
jne
xchg
cmp
dec
into
push
arpl
add
mov
pop
add
cmc
cmp
xchg
mov
ss
lods
sub
imul
leave
mov
in
out
insb
add
mov
add
xchg
addr16
cmp
arpl
into
add
add
jle
mov
ds
stos
iret
movsl
and
jb
and
mov
stos
mov
mov
add
add
int
add
mov
int3
stc
and
push
sub
mov
add
or
mov
in
mov
cmpsl
or
into
loopne
xchg
dec
add
dec
ret
mov
mov
lcall
adc
sti
sub
add
add
adc
lds
add
add
push
dec
add
add
imul
insl
ret
jg
push
das
xchg
pop
mov
or
add
mov
pop
cmp
add
loop
dec
sub
inc
xchg
insb
add
dec
add
inc
add
add
adc
add
loop
aam
aad
sbb
mov
mov
cli
aam
mov
add
add
fbld
dec
mov
add
add
test
mov
loop
add
cmp
sub
dec
add
add
or
mov
mov
add
and
mov
mov
fdivs
mov
add
inc
outsb
test
pop
testl
jge
pop
xor
jno
outsb
add
jl
jmp
add
dec
add
add
jecxz
stc
in
push
mov
push
ljmp
sbb
pushf
or
dec
fdecstp
xchg
pop
fisubl
or
mov
add
add
lea
add
cmp
jmp
push
sbb
imul
into
ljmp
ret
dec
into
xchg
lods
or
add
add
adc
inc
cmp
je
mov
stos
cs
mov
add
add
scas
push
into
in
add
add
add
push
cmp
shrl
cmpsb
xor
cmp
push
gs
fisttpl
pop
add
mov
jecxz
jmp
cwtl
enter
add
daa
enter
adc
xchg
fidivl
test
jne
repnz
call
mov
xchg
mov
rcrb
cmp
dec
cld
inc
test
arpl
push
ja
add
into
jp
add
add
fcmovb
ffree
xchg
lods
and
mov
rorl
aaa
xor
dec
sar
mov
nop
mov
pandn
add
clc
lret
pusha
add
xor
push
add
add
out
lret
icebp
cmp
test
aad
dec
mov
jge
lcall
push
into
sub
mov
add
add
xor
sarl
dec
idivl
cmp
push
push
xor
add
add
xchg
fwait
jae
jns
sub
cmova
or
mov
in
sbb
and
clc
ds
push
add
add
pusha
add
jl
push
pop
inc
sub
adc
pop
jns
mov
add
clc
mov
push
mov
jg
cltd
add
add
add
add
push
xchg
push
cltd
jno
push
push
aaa
rcll
add
add
add
cld
dec
dec
push
out
or
add
add
ds
lret
mov
mov
adc
pop
test
add
sub
mov
ja
push
cmp
ret
add
dec
jmp
pop
popf
and
add
add
mov
ljmp
dec
insb
add
add
jl
sbb
jns
shl
cmp
dec
pop
fcompp
mov
xchg
xchg
add
xchg
add
mov
test
test
mov
jl
push
das
out
jge
and
mov
and
call
sbb
mov
mov
test
icebp
sbb
insl
int
scas
cmp
mov
aad
jae
mov
add
add
lcall
adc
out
mov
jno
out
or
jo
push
mov
sub
mov
sbb
and
add
add
nop
sbb
stos
and
jl
cmpsl
cmp
stos
or
clc
mov
enter
dec
mov
test
mov
jne
dec
add
into
lods
loope
cwtl
mov
sub
add
add
add
pop
test
dec
cmpsb
lea
lcall
jg
hlt
sub
mov
add
sbb
adc
enter
ja
jecxz
es
inc
sbb
xor
daa
rorl
add
add
cmp
loope
aas
pusha
add
fdivl
dec
mov
dec
out
sarb
add
jnp
rol
nop
js
ficoms
ss
lds
jmp
cmpl
loopne
jnp
mov
sub
mov
loop
add
push
add
mov
sbb
repz
xlat
adc
jle
rorb
das
ds
inc
mov
fcomps
ja
or
mov
arpl
or
add
mov
adc
push
and
into
lret
xchg
cmc
test
std
testl
cltd
imul
fiadds
jmp
out
pop
mov
jecxz
inc
add
add
setnp
lock
repz
es
dec
fwait
sub
add
inc
xchg
pop
fxch
int3
fmull
add
add
mov
add
inc
add
add
add
popf
loopne
inc
mov
mov
sbb
add
movsl
push
push
jecxz
repz
xlat
mov
cmp
stos
inc
add
xchg
adc
push
pop
lods
xor
xlat
jp
jno
daa
xchg
sub
mov
dec
stos
jb
add
and
add
add
cmp
in
test
sbbb
cmp
cmp
push
adc
mov
imul
int
jmp
adc
lds
outsb
addr16
xchg
repz
fiadds
add
ds
push
sub
push
add
jp
cs
push
out
repnz
add
sub
mov
cmp
mov
aam
sbb
aad
dec
add
loop
pusha
add
xor
test
jmp
push
andb
loope
add
add
jmp
add
mov
add
dec
add
add
add
sbb
in
cli
fisttpll
add
add
mov
or
pop
xor
jnp
out
stos
mov
add
cmc
add
pop
test
mov
and
dec
add
add
daa
ret
iret
dec
mov
cmp
jb
push
shll
stos
ja
sub
pop
xchg
pop
mov
mov
add
packuswb
and
fistpll
jl
xlat
jb
dec
lods
movsb
movsb
push
adc
add
mov
outsb
fcoml
out
xor
js
stc
sub
mov
push
outsb
jae
jecxz
add
xchg
dec
sbb
cltd
push
sub
add
xlat
outsl
int
add
mov
push
lds
jg
cmp
mov
mov
scas
inc
addr16
add
mov
mov
mov
add
xchg
fnsave
int
add
add
fistpl
xor
lea
push
inc
incb
jp,pn
push
mov
movsb
push
ja
jmp
cmp
add
inc
jns
xchg
inc
push
jbe
add
add
imul
add
gs
testb
test
push
test
mov
push
lahf
pop
push
add
fcmovnb
add
jbe
iret
cmp
sub
aad
pushl
pop
push
ja
pop
fucom
mov
jecxz
jecxz
lock
pop
out
out
fists
ljmp
fldenv
push
xchg
in
adc
arpl
sub
add
add
push
mov
movsl
addr16
and
stos
loope
jge
xor
sti
inc
push
gs
std
adc
dec
push
mov
insl
jg
xor
add
int
jns
sub
xor
xor
add
pop
cli
outsl
rcl
cmp
pop
data16
add
add
popf
push
clc
repnz
jmp
jae
add
add
inc
mov
nop
push
mov
leave
nop
jmp
or
add
add
pop
push
mov
xchg
ret
mov
xor
add
test
pop
movzwl
clc
repnz
jmp
jae
add
jl
add
add
xor
pop
push
mov
xchg
ret
add
dec
aas
push
add
jnp
add
add
add
repnz
jmp
jae
movsl
movb
push
add
mov
add
fsts
mov
xchg
ret
mov
aaa
dec
cwtl
add
push
mov
mov
repnz
jmp
jae
add
pop
add
xor
repnz
jmp
jae
aaa
or
xor
add
add
cld
jmp
jae
add
pop
add
mov
xchg
idivl
nop
push
mov
leave
nop
jmp
and
mov
add
call
nop
push
mov
leave
nop
jmp
add
dec
add
add
inc
dec
subl
push
mov
xchg
ret
add
inc
push
add
repnz
jmp
jae
mov
add
add
and
jmp
jae
jge
add
add
jmp
add
aas
add
clc
repnz
jmp
jae
add
add
movsb
dec
add
add
clc
repnz
jmp
jae
add
dec
push
incl
dec
jbe
adc
call
inc
add
inc
enter
dec
jmp
mov
add
mov
push
mov
xchg
ret
add
dec
add
jl
js
add
nop
push
mov
leave
nop
jmp
add
add
add
cld
jmp
jae
add
mov
add
aas
add
hlt
or
add
add
add
jbe
jl
mov
add
or
or
mov
push
mov
xchg
ret
add
jbe
add
jmp
add
mov
test
adc
add
repnz
jmp
jae
add
jle
add
add
push
leave
pusha
clc
repnz
jmp
jae
add
jbe
aaa
adc
add
sbb
repnz
jmp
jae
add
jmp
add
add
jne
nop
push
mov
leave
nop
jmp
add
test
dec
add
sbb
in
leave
nop
jmp
mov
add
add
pop
add
jecxz
call
inc
add
inc
add
mov
add
add
add
dec
cmpl
nop
push
mov
leave
nop
jmp
cwtl
incl
daa
add
mov
xchg
ret
xchg
test
mov
add
and
inc
clc
repnz
jmp
jae
add
mov
movsl
add
add
add
jmp
popa
inc
add
add
add
add
mov
lock
je
add
inc
sbb
inc
mov
aad
add
jne
nop
push
mov
leave
nop
jmp
add
dec
push
mov
repnz
jmp
jae
add
mov
add
add
add
add
clc
repnz
jmp
jae
add
add
inc
add
movsl
add
jl
add
mov
loopne
nop
push
mov
leave
nop
jmp
inc
push
cwtl
rolb
add
cld
add
add
add
nop
push
mov
leave
nop
jmp
add
push
test
mov
add
mov
lods
pop
enter
add
scas
add
mov
test
nop
push
mov
leave
nop
jmp
aad
movsl
xor
add
add
add
mov
repnz
jmp
jae
mov
pop
jle
add
dec
mov
mov
inc
and
clc
repnz
jmp
jae
aaa
rolb
dec
aad
jle
adc
mov
mov
clc
repnz
jmp
jae
add
add
add
nop
push
mov
leave
nop
jmp
dec
add
dec
mov
push
div
movsb
nop
push
mov
leave
nop
jmp
add
add
out
or
add
shrl
xchg
clc
repnz
jmp
jae
movsb
add
enter
add
pop
push
mov
xchg
ret
xor
or
movsl
cmp
mov
sbb
xchg
sub
add
nop
jmp
add
mov
add
add
add
pop
lea
clc
repnz
jmp
jae
add
add
cld
int3
fdivr
xor
sbb
push
mov
xchg
ret
mov
aad
dec
aas
push
add
rolb
xor
nop
push
mov
leave
nop
jmp
dec
add
mov
cwtl
add
movb
shr
clc
repnz
jmp
jae
dec
mov
test
jl
aad
pop
push
push
mov
xchg
ret
or
add
add
testb
add
repnz
jmp
jae
or
movb
add
ret
push
mov
xchg
ret
add
movb
out
rorb
fistpl
clc
repnz
jmp
jae
add
add
add
adc
cmp
jmp
jae
add
mov
add
jmp
pop
rclb
in
add
cld
jmp
jae
add
mov
dec
aam
mov
int
add
add
pushf
js
cmc
push
xor
es
mov
dec
push
mov
xchg
ret
aas
add
add
and
jge
inc
xchg
add
push
mov
xchg
ret
mov
les
add
add
dec
cmp
outsb
inc
add
jle
add
add
add
negl
repnz
jmp
jae
inc
inc
sub
inc
mov
jnp
rorl
add
xor
add
sarb
add
add
movsb
rorb
clc
repnz
jmp
jae
add
add
out
cmp
inc
cmpl
nop
push
mov
leave
nop
jmp
pop
or
dec
push
add
mov
clc
repnz
jmp
jae
add
or
add
mov
mov
xor
addb
daa
sbb
add
cmp
jbe
add
add
nop
inc
add
add
or
movsb
movsl
cld
push
imulb
push
mov
xchg
ret
add
add
mov
add
mov
nop
push
mov
leave
nop
jmp
add
and
push
jge
jle
out
jl
clc
repnz
jmp
jae
dec
add
adc
test
add
clc
repnz
jmp
jae
push
mov
push
add
xor
cmp
nop
push
mov
leave
nop
jmp
inc
aaa
add
rorb
add
clc
repnz
jmp
jae
jle
aaa
dec
mov
add
daa
test
nop
push
mov
leave
nop
jmp
and
add
add
test
lds
leave
nop
jmp
add
jmp
cld
add
mov
add
test
cld
jmp
jae
pop
add
add
movsb
sti
inc
push
mov
xchg
ret
mov
add
add
out
dec
adcl
js
inc
add
dec
add
test
add
or
mov
add
testl
jmp
add
dec
add
sbb
add
pop
clc
repnz
jmp
jae
movsb
add
add
mov
out
xchg
pop
push
inc
add
add
add
add
and
mov
add
repnz
jmp
jae
jge
add
add
out
add
ror
push
clc
repnz
jmp
jae
add
movsl
add
movsl
jmp
add
pop
add
clc
repnz
jmp
jae
add
push
add
xchg
call
clc
repnz
jmp
jae
add
sub
mov
jns
clc
repnz
jmp
jae
add
add
inc
push
enter
push
mov
xchg
ret
rolb
add
dec
add
cli
pop
push
clc
repnz
jmp
jae
jbe
mov
add
add
add
clc
out
jg
clc
repnz
jmp
jae
add
push
and
jle
jl
movsl
aad
out
jne
loop
clc
repnz
jmp
jae
add
jbe
rolb
add
inc
pop
mov
clc
repnz
jmp
jae
mov
add
aaa
shr
clc
repnz
jmp
jae
inc
inc
mov
jge
add
add
cmp
mov
push
mov
xchg
ret
add
jbe
add
or
jge
test
add
xor
repnz
jmp
jae
dec
add
add
fisttps
fiaddl
ret
jbe
jnp
enter
enter
mov
clc
repnz
jmp
jae
out
aad
mov
xchg
or
mov
push
clc
repnz
jmp
jae
mov
add
add
and
add
clc
repnz
jmp
jae
add
jnp
add
add
dec
add
push
mov
xchg
ret
add
enter
add
aas
into
inc
imul
shr
clc
repnz
jmp
jae
add
movsb
push
add
out
aas
add
pop
nop
push
mov
leave
nop
jmp
add
jmp
dec
add
pop
xor
clc
repnz
jmp
jae
pop
push
add
aad
jl
jl
mov
repnz
jmp
jae
add
add
add
lods
push
into
pushf
jg
clc
repnz
jmp
jae
add
rolb
add
movsl
pushf
shll
mov
leave
nop
jmp
add
xor
cmp
or
add
jg
clc
repnz
jmp
jae
push
push
push
add
push
mov
xchg
ret
aas
add
add
dec
test
add
jbe
push
ret
pop
push
mov
xchg
ret
add
add
add
push
mov
push
sub
cli
clc
repnz
jmp
jae
add
push
add
add
mov
call
add
xorl
add
push
add
xorb
jmp
jae
add
mov
ss
jne
clc
repnz
jmp
jae
dec
add
shlb
stc
fwait
nop
push
mov
leave
nop
jmp
and
add
add
add
push
add
add
sbb
clc
repnz
jmp
jae
add
add
mov
movsl
jne
clc
repnz
jmp
jae
add
add
add
fwait
xchg
inc
push
nop
push
mov
leave
nop
jmp
cmp
add
mov
xor
xchg
test
jp
sub
add
add
or
jmp
jae
xchg
add
add
inc
add
push
clc
repnz
jmp
jae
add
fwait
dec
jle
mov
inc
add
testl
add
nop
jmp
add
add
add
mov
xchg
ret
add
shlb
test
cld
cld
add
pop
clc
repnz
jmp
jae
jge
test
add
add
dec
sub
nop
push
mov
leave
nop
jmp
add
add
mov
sbb
add
test
jnp
nop
push
mov
leave
nop
jmp
push
jle
xchg
add
pushl
nop
push
mov
leave
nop
jmp
add
add
jl
add
push
xor
jno
push
mov
xchg
ret
add
add
add
dec
inc
movb
push
add
or
add
nop
push
mov
leave
nop
jmp
add
xor
jmp
jae
add
add
add
push
das
call
clc
repnz
jmp
jae
add
add
out
add
addr16
push
mov
xchg
ret
inc
aaa
mov
mov
or
jge
sub
add
add
pop
inc
add
jmp
xor
add
xchg
push
mov
clc
repnz
jmp
jae
pop
xchg
and
jge
les
cmc
mov
nop
push
mov
leave
nop
jmp
jbe
dec
xchg
add
test
aad
pop
push
pop
mov
popl
clc
repnz
jmp
jae
cld
add
jbe
push
push
push
mov
xchg
ret
pop
add
add
inc
add
or
test
add
clc
repnz
jmp
jae
jbe
add
add
clc
repnz
jmp
jae
jl
add
add
add
lahf
push
push
mov
xchg
ret
dec
test
movb
out
add
call
inc
add
add
add
push
adc
std
mov
clc
repnz
jmp
jae
add
add
mov
push
mov
xchg
ret
jmp
mov
add
sub
repnz
jmp
jae
and
movsl
out
add
aaa
pop
jg
pop
clc
repnz
jmp
jae
add
mov
ljmp
xor
clc
repnz
jmp
jae
add
jmp
push
incl
pop
fwait
or
push
clc
repnz
jmp
jae
and
add
aaa
and
jne
nop
push
mov
leave
nop
jmp
aad
cmp
sub
stc
push
add
clc
repnz
jmp
jae
mov
add
add
push
mov
xchg
ret
or
add
add
add
clc
repnz
jmp
jae
sarb
mov
test
cmp
mov
icebp
fistpl
clc
repnz
jmp
jae
mov
push
push
fld1
clc
repnz
jmp
jae
add
pop
or
out
repnz
clc
repnz
jmp
jae
add
add
add
movb
cld
jmp
jae
jl
xchg
aaa
add
and
add
adc
and
clc
repnz
jmp
jae
mov
mov
inc
add
stos
out
jbe
pop
clc
repnz
jmp
jae
add
rolb
les
add
jecxz
inc
lock
repnz
jmp
jae
cld
aaa
add
add
add
add
mov
clc
repnz
jmp
jae
out
mov
or
mov
clc
repnz
jmp
jae
jnp
daa
mov
mov
or
add
nop
push
mov
leave
nop
jmp
fwait
aas
add
push
add
add
pop
push
mov
xchg
ret
add
dec
add
add
add
cmpl
nop
push
mov
leave
nop
jmp
fwait
add
inc
add
cld
xchg
decl
mov
adc
repnz
jmp
jae
add
add
ret
clc
repnz
jmp
jae
movsl
add
enter
push
fwait
add
jmp
lcall
add
add
add
add
add
cld
jmp
jae
pop
mov
add
test
movsl
loope
clc
repnz
jmp
jae
add
push
test
jge
jl
add
add
push
mov
xchg
ret
add
out
inc
dec
dec
jl
rolb
fcmovbe
inc
add
push
mov
xchg
ret
add
mov
shlb
push
mov
xchg
ret
add
add
add
inc
add
aas
or
fsts
in
test
shl
mov
addb
lcall
xor
clc
repnz
jmp
jae
add
push
add
or
add
push
push
mov
xchg
ret
dec
fwait
add
sub
daa
movsb
enter
inc
mov
clc
repnz
jmp
jae
inc
jge
mov
add
fstl
mov
xchg
ret
cld
add
add
add
adc
add
sub
mov
outsl
arpl
add
repnz
jmp
jae
add
sarb
add
xchg
sub
clc
repnz
jmp
jae
daa
jnp
push
add
fwait
add
jmp
in
leave
nop
jmp
and
add
mov
nop
push
mov
leave
nop
jmp
dec
sbb
add
rcrb
fstps
repnz
jmp
jae
add
mov
cld
push
add
jmp
sub
into
pop
nop
or
pop
inc
add
add
push
add
add
jle
pusha
nop
push
mov
leave
nop
jmp
inc
add
add
jnp
daa
jge
add
bound
repnz
jmp
jae
add
add
add
add
aas
mov
clc
repnz
jmp
jae
add
jle
add
aas
add
or
xorb
add
clc
repnz
jmp
jae
add
mov
mov
clc
repnz
jmp
jae
test
add
add
add
xchg
scas
push
push
mov
xchg
ret
add
add
add
movsl
icebp
push
push
mov
xchg
ret
pop
aas
add
add
add
mov
js
nop
push
mov
leave
nop
jmp
add
add
adc
clc
repnz
jmp
jae
add
or
dec
push
rolb
add
add
sub
and
add
add
add
jmp
jge
pop
add
push
add
cld
sarb
clc
repnz
jmp
jae
jge
jge
add
push
fistpl
push
mov
xchg
ret
inc
incl
add
or
fisttps
test
and
add
repnz
jmp
jae
daa
jle
inc
add
add
pushl
clc
repnz
jmp
jae
mov
dec
add
xor
inc
jecxz
repnz
jmp
jae
add
jge
add
jmp
jmp
jae
add
add
test
jbe
cwtl
add
jb
nop
push
mov
leave
nop
jmp
mov
push
lods
fistpl
and
repnz
jmp
jae
add
cld
add
push
add
in
push
clc
repnz
jmp
jae
add
add
add
add
mov
jns
nop
push
mov
leave
nop
jmp
add
add
and
out
enter
push
push
mov
xchg
ret
or
mov
mov
call
je
clc
repnz
jmp
jae
out
rolb
and
cld
jmp
jae
push
add
dec
mov
add
add
dec
push
adc
ret
clc
repnz
jmp
jae
add
add
les
enter
add
ljmp
jmp
jae
jle
push
add
and
add
les
sbb
cmp
nop
push
mov
leave
nop
jmp
add
add
add
sbb
push
clc
repnz
jmp
jae
add
add
add
sub
fld1
clc
repnz
jmp
jae
test
inc
cwtl
add
out
add
pop
clc
repnz
jmp
jae
inc
aad
push
cwtl
fwait
add
sub
enter
xabort
cld
jmp
jae
incl
out
add
add
add
add
add
and
clc
repnz
jmp
jae
mov
dec
les
add
js
add
jge
mov
mov
mov
clc
repnz
jmp
jae
cwtl
add
fwait
mov
mov
clc
repnz
jmp
jae
add
add
pop
add
add
jp
mov
nop
push
mov
leave
nop
jmp
jle
add
add
push
clc
repnz
jmp
jae
push
cld
dec
add
jbe
add
pop
mov
es
and
add
cwtl
add
add
into
or
rol
nop
push
mov
leave
nop
jmp
jmp
mov
cld
clc
repnz
jmp
jae
xor
add
add
aas
add
add
arpl
jp
inc
add
push
mov
add
add
fdivs
clc
repnz
jmp
jae
test
jge
jmp
add
add
add
push
mov
xchg
ret
mov
sbb
add
push
clc
repnz
jmp
jae
add
rolb
dec
xchg
add
lods
fistl
repnz
jmp
jae
aas
enter
add
add
out
inc
sub
js
add
and
add
add
jge
add
add
push
push
mov
xchg
ret
push
inc
mov
aas
add
and
call
clc
repnz
jmp
jae
aaa
add
aad
jge
push
add
clc
repnz
jmp
jae
movsb
jl
add
mov
clc
repnz
jmp
jae
mov
enter
push
jl
and
push
mov
leave
nop
jmp
add
add
dec
pop
rolb
push
les
inc
add
add
dec
jmp
cld
jmp
jae
movsl
add
add
push
dec
imul
add
nop
jmp
incl
add
jnp
lcall
lret
push
clc
repnz
jmp
jae
add
add
add
jl
pop
cmp
aad
rcll
repnz
jmp
jae
add
sub
mov
mov
add
clc
repnz
jmp
jae
dec
add
add
add
pop
nop
push
mov
leave
nop
jmp
sarb
rolb
add
inc
jmp
pop
nop
push
mov
leave
nop
jmp
and
les
jbe
add
jl
jmp
adc
push
or
add
add
imul
jmp
jae
add
mov
rolb
and
repnz
jmp
jae
fwait
add
and
add
sub
dec
cmp
repnz
jmp
jae
enter
add
aas
jge
mov
push
mov
xchg
ret
aad
add
jnp
add
daa
add
dec
push
stos
xor
clc
repnz
jmp
jae
push
add
add
add
jge
dec
lods
pop
and
clc
repnz
jmp
jae
jge
add
add
inc
ds
add
cltd
push
mov
add
add
xchg
add
add
add
pop
sub
aas
add
cld
jmp
jae
inc
movsl
add
test
cmp
add
dec
nop
push
mov
leave
nop
jmp
add
and
jle
add
mov
sub
call
nop
jmp
fwait
mov
and
push
mov
xchg
ret
inc
add
test
add
or
xor
mov
xchg
ret
and
push
push
add
and
cmp
and
sti
pop
clc
repnz
jmp
jae
add
jmp
inc
mov
add
add
add
sti
add
add
nop
push
mov
leave
nop
jmp
add
sub
inc
inc
add
repnz
jmp
jae
test
inc
add
mov
cmp
and
mov
add
push
mov
xchg
ret
add
les
add
add
add
notl
push
mov
leave
nop
jmp
add
pop
rolb
add
cmpw
clc
repnz
jmp
jae
cmp
inc
add
adc
inc
mov
add
sub
clc
repnz
jmp
jae
daa
xchg
add
add
add
jg
clc
repnz
jmp
jae
push
or
aas
adc
jle
cmpb
add
orl
add
inc
aaa
inc
jbe
mov
add
add
jmp
jae
cmp
cld
add
add
add
mov
clc
repnz
jmp
jae
add
add
add
push
clc
repnz
jmp
jae
add
add
mov
jmp
jae
jle
add
adc
add
pop
mov
jmp
repnz
jmp
jae
mov
xor
cmp
cld
jmp
jae
add
dec
push
jge
add
and
and
js
repnz
jmp
jae
fwait
xchg
add
jmp
add
fstpl
push
mov
leave
nop
jmp
sbb
aad
add
mov
add
push
add
push
mov
xchg
ret
mov
add
push
add
add
mov
jmp
jae
add
mov
add
pop
pop
movsb
jbe
add
add
clc
repnz
jmp
jae
mov
add
mov
clc
repnz
jmp
jae
add
out
out
sub
add
popa
fistpl
push
mov
xchg
ret
add
add
movsl
add
and
mov
repnz
jmp
jae
add
movsb
mov
xchg
or
mov
sub
nop
push
mov
leave
nop
jmp
aas
inc
test
inc
mov
pop
pop
clc
repnz
jmp
jae
add
push
add
add
incl
test
push
add
nop
push
mov
leave
nop
jmp
add
jbe
daa
call
push
mov
xchg
ret
add
add
add
daa
or
add
add
pop
push
mov
xchg
ret
sbb
add
dec
add
or
mov
adc
clc
repnz
jmp
jae
cld
add
daa
add
and
clc
repnz
jmp
jae
push
add
add
les
incl
jb
lea
push
mov
xchg
ret
add
add
add
mov
adc
mov
push
mov
xchg
ret
aas
add
add
mov
and
sbb
clc
repnz
jmp
jae
add
add
add
pop
add
test
ds
add
add
fwait
clc
repnz
jmp
jae
xchg
add
add
cld
add
add
or
test
xchg
ret
add
fwait
add
add
test
mov
add
mov
sarb
add
repnz
jmp
jae
dec
aaa
add
add
add
dec
mov
mov
in
leave
nop
jmp
add
add
add
cld
add
jnp
shr
clc
repnz
jmp
jae
add
push
sub
add
add
dec
cmp
repnz
jmp
jae
jle
add
add
jmp
sub
push
push
jae
test
repnz
jmp
jae
add
out
sub
pop
notl
nop
push
mov
leave
nop
jmp
enter
xor
mov
movsl
addr16
push
mov
xchg
ret
add
add
add
or
jmp
scas
mov
nop
push
mov
leave
nop
jmp
sarb
add
add
jl
inc
push
mov
xchg
ret
add
add
add
test
add
mov
ljmp
lret
add
add
jge
mov
inc
cld
add
std
clc
repnz
jmp
jae
add
call
jmp
add
aad
daa
jnp
dec
mov
pop
mov
push
mov
xchg
ret
add
cwtl
push
icebp
clc
repnz
jmp
jae
daa
add
jge
add
pop
rorb
jmp
jae
add
cmp
add
inc
jns
clc
repnz
jmp
jae
dec
add
add
jbe
out
and
repnz
jmp
jae
add
add
add
push
adc
inc
add
ja
add
clc
repnz
jmp
jae
dec
add
pop
mov
xchg
or
mov
mov
mov
clc
repnz
jmp
jae
add
mov
movsb
add
orl
cmp
ret
add
cld
add
add
add
dec
push
mov
xchg
ret
add
add
add
dec
rol
mov
pop
mov
outsl
xor
clc
repnz
jmp
jae
add
inc
add
inc
scas
arpl
cld
jmp
jae
jmp
dec
add
add
add
add
add
mov
push
sub
nop
jmp
add
add
add
xor
gs
push
mov
xchg
ret
add
movsl
add
add
push
jl
inc
or
int
incl
add
movsb
add
jle
inc
out
mov
push
add
add
sub
mov
leave
nop
jmp
inc
jge
cwtl
add
push
mov
es
repnz
jmp
jae
daa
add
mov
mov
nop
push
mov
leave
nop
jmp
add
adc
add
add
jge
add
add
cmp
daa
add
clc
repnz
jmp
jae
add
dec
add
mov
add
push
mov
xchg
ret
jle
or
add
add
add
add
add
clc
repnz
jmp
jae
add
inc
add
inc
push
add
add
clc
repnz
jmp
jae
push
add
rolb
inc
add
cld
daa
push
pop
mov
push
mov
xchg
ret
inc
add
jge
add
daa
add
repnz
jmp
jae
add
add
add
add
clc
repnz
jmp
jae
jmp
add
add
fwait
add
add
repnz
jmp
jae
mov
add
add
clc
repnz
jmp
jae
add
add
push
and
jle
sqrtps
push
mov
xchg
ret
add
inc
add
jbe
cmp
cld
jmp
jae
push
add
add
or
aam
fistpl
push
mov
xchg
ret
mov
add
jns
sar
cld
jmp
jae
movsb
rolb
add
mov
cld
jmp
jae
enter
add
add
repnz
jmp
jae
pop
add
jge
mov
jmp
cld
jmp
jae
mov
add
nop
push
mov
leave
nop
jmp
add
add
add
inc
movsb
jp
adc
push
inc
add
add
add
test
xor
push
nop
push
mov
leave
nop
jmp
sub
pop
push
add
adc
inc
push
mov
xchg
ret
cld
add
add
movsl
cmp
push
mov
mov
push
mov
xchg
ret
rol
out
mov
jge
out
jmp
inc
xor
clc
repnz
jmp
jae
and
and
mov
clc
repnz
jmp
jae
add
add
and
jbe
sbb
mov
xchg
ret
and
enter
mov
add
add
push
mov
xchg
ret
add
add
and
mov
lret
clc
repnz
jmp
jae
movsb
jbe
cld
add
mov
add
or
jmp
jae
add
add
out
add
add
add
repnz
jmp
jae
xchg
out
inc
add
add
xor
xor
clc
repnz
jmp
jae
or
add
jmp
inc
add
adc
and
cld
jmp
jae
dec
sarb
movsl
inc
add
inc
dec
int3
sub
xchg
inc
add
dec
mov
add
xchg
jle
add
add
clc
repnz
jmp
jae
add
sub
add
and
repnz
jmp
jae
add
jbe
add
incl
add
clc
repnz
jmp
jae
enter
adc
add
mov
add
nop
jmp
jle
add
add
push
mov
nop
push
mov
leave
nop
jmp
aad
add
add
add
test
inc
dec
cs
push
clc
repnz
jmp
jae
aad
mov
add
nop
push
mov
leave
nop
jmp
or
inc
xor
add
clc
repnz
jmp
jae
push
add
movb
mov
add
adc
add
add
add
enter
cld
xor
push
nop
push
mov
leave
nop
jmp
or
add
mov
cwtl
add
xor
cmpsl
push
clc
repnz
jmp
jae
mov
add
inc
add
add
clc
repnz
jmp
jae
add
add
add
pop
push
mov
xchg
ret
add
add
add
add
xor
add
pop
mov
clc
repnz
jmp
jae
add
sbb
add
mov
mov
xchg
ret
add
add
add
add
dec
dec
cld
sbb
add
nop
push
mov
leave
nop
jmp
dec
add
test
mov
imul
add
xor
add
add
add
mov
lea
clc
repnz
jmp
jae
add
add
add
and
or
rol
xchg
push
nop
push
mov
leave
nop
jmp
add
push
jle
and
add
push
clc
repnz
jmp
jae
aaa
add
add
add
sub
xchg
inc
add
add
add
add
add
leave
xorl
clc
repnz
jmp
jae
aad
add
add
cld
lock
and
add
add
mov
clc
repnz
jmp
jae
aad
enter
add
movsl
add
lds
nop
push
mov
leave
nop
jmp
jnp
xchg
add
add
add
mov
clc
repnz
jmp
jae
jnp
push
add
jmp
test
fdivrp
clc
repnz
jmp
jae
test
add
push
mov
fwait
add
clc
repnz
jmp
jae
add
add
and
cld
add
fistpl
clc
repnz
jmp
jae
mov
push
cwtl
add
add
in
leave
nop
jmp
add
jl
sub
add
and
add
clc
repnz
jmp
jae
add
add
push
add
fwait
nop
push
mov
leave
nop
jmp
jbe
jmp
fwait
inc
sbb
jmp
and
push
mov
leave
nop
jmp
mov
add
add
add
and
add
add
cld
jmp
jae
push
les
out
add
cmp
xchg
ret
or
add
add
add
ljmp
cld
jmp
jae
xor
add
add
add
je
nop
push
mov
leave
nop
jmp
pop
rolb
add
add
clc
repnz
jmp
jae
mov
add
mov
clc
repnz
jmp
jae
add
xchg
add
adc
xchg
cmpsl
jmp
movsl
add
add
add
incl
mov
dec
cmp
repnz
jmp
jae
add
add
push
xchg
clc
repnz
jmp
jae
dec
jnp
jbe
add
add
jge
push
mov
mov
add
aaa
add
mov
add
sbb
scas
push
xchg
rep
clc
repnz
jmp
jae
enter
add
add
add
dec
jne
clc
repnz
jmp
jae
add
jbe
add
int3
gs
nop
push
mov
leave
nop
jmp
add
add
add
int3
mov
mov
xchg
ret
inc
add
add
add
add
add
add
push
clc
repnz
jmp
jae
add
add
mov
mov
mov
xchg
ret
add
and
mov
clc
repnz
jmp
jae
add
add
sub
les
test
add
push
mov
leave
nop
jmp
cmp
mov
add
mov
mov
clc
repnz
jmp
jae
dec
inc
add
cmp
jmp
add
cld
jmp
jae
enter
aaa
dec
add
mov
clc
repnz
jmp
jae
mov
add
movsl
jmp
add
add
add
aas
nop
push
mov
leave
nop
jmp
add
add
or
add
out
mov
decl
movsb
inc
add
or
les
dec
sbb
xchg
loop
call
nop
jmp
add
add
mov
push
mov
xchg
ret
add
add
mov
add
jne
clc
repnz
jmp
jae
add
add
add
adc
mov
stos
dec
rep
nop
push
mov
leave
nop
jmp
mov
out
dec
test
inc
aas
add
jo
push
push
mov
xchg
ret
push
add
add
add
mov
movl
cmp
decl
adc
pop
add
les
mov
and
pop
mov
mov
push
dec
rorb
mov
clc
repnz
jmp
jae
aad
sub
sub
and
inc
mov
nop
push
mov
leave
nop
jmp
add
add
jmp
in
leave
nop
jmp
add
and
add
mov
repnz
jmp
jae
add
add
add
adc
dec
add
outsl
movswl
clc
repnz
jmp
jae
add
dec
pop
add
and
jecxz
inc
adc
repnz
jmp
jae
aas
adc
add
pop
mov
je
add
nop
push
mov
leave
nop
jmp
mov
add
les
jmp
movsl
add
jl
shlb
inc
push
mov
dec
add
into
inc
add
roll
mov
xchg
ret
or
add
sub
dec
add
add
enter
jmp
jae
mov
movsl
mov
push
and
repnz
jmp
jae
out
add
add
add
leave
fwait
push
mov
xchg
ret
test
xor
add
mov
push
mov
xchg
ret
add
xchg
add
add
sbb
add
add
je
sub
nop
jmp
jl
sub
movsb
push
movsb
add
fwait
sub
push
mov
xchg
ret
xor
add
and
cld
dec
rolb
xchg
fsts
add
orl
incl
inc
add
add
add
aaa
or
jge
ret
clc
repnz
jmp
jae
pop
or
add
add
mov
mov
clc
repnz
jmp
jae
add
add
inc
add
add
add
adc
repnz
jmp
jae
jmp
add
add
add
enter
test
push
mov
xchg
ret
add
add
out
movsb
out
push
add
rorl
mov
cmp
ret
add
add
add
test
aaa
add
mov
adc
stos
inc
int3
add
xchg
add
cmpsl
add
add
xchg
inc
add
push
push
mov
xchg
ret
pop
push
adc
push
sbb
add
jmp
jae
jnp
add
add
add
add
repnz
jmp
jae
adc
add
add
add
jg
dec
sub
repnz
jmp
jae
daa
xor
jmp
xor
mov
and
push
mov
xchg
ret
test
cwtl
add
cmp
add
adcb
mov
xchg
ret
add
add
dec
jl
mov
popa
clc
repnz
jmp
jae
out
dec
add
dec
aad
decl
cmp
nop
push
mov
leave
nop
jmp
inc
incl
add
add
add
sbb
mov
xchg
ret
mov
rorb
add
add
mov
jmp
jae
mov
ljmp
add
jne
nop
push
mov
leave
nop
jmp
add
sbb
add
push
and
push
mov
leave
nop
jmp
add
incl
mov
jge
add
call
add
andl
add
pop
jbe
aad
daa
add
xor
clc
repnz
jmp
jae
mov
jbe
add
add
add
jno
inc
add
shrb
jge
dec
les
aaa
out
sbb
mov
leave
nop
jmp
add
jle
add
dec
pop
push
fwait
push
mov
xchg
ret
add
add
out
add
mov
add
hlt
cld
out
in
clc
clc
repnz
jmp
jae
add
add
jle
add
add
add
push
mov
xchg
ret
mov
jl
aaa
add
dec
loope,pn
subl
nop
jmp
or
add
pop
nop
push
mov
leave
nop
jmp
add
mov
add
add
add
add
clc
repnz
jmp
jae
add
dec
sbb
add
incl
inc
push
nop
push
mov
leave
nop
jmp
add
dec
or
add
add
add
cld
jmp
jae
test
cwtl
add
incl
add
push
push
aad
repz
incl
add
add
add
add
mov
out
sub
push
mov
and
aaa
add
add
iret
add
or
add
add
pop
or
repnz
jmp
jae
dec
or
xchg
add
add
into
pop
add
clc
repnz
jmp
jae
jge
out
movsl
add
movsb
add
add
cld
or
mov
popa
mov
clc
repnz
jmp
jae
add
add
add
add
add
push
push
mov
xchg
ret
jge
and
add
mov
outsl
subl
push
mov
xchg
ret
jge
add
add
fwait
nop
push
mov
leave
nop
jmp
aas
add
add
and
add
mov
xchg
cli
fadds
mov
repnz
jmp
jae
add
add
add
cld
add
mov
mov
or
add
add
add
add
add
push
sub
jmp
jae
add
aad
add
adc
mov
jmp
add
add
add
push
inc
add
jge
push
adc
mov
test
clc
repnz
jmp
jae
add
dec
inc
push
jge
and
push
mov
leave
nop
jmp
inc
add
dec
mov
jge
add
in
lea
clc
repnz
jmp
jae
push
add
add
cld
movsl
dec
push
sarl
repnz
jmp
jae
add
mov
mov
nop
push
mov
leave
nop
jmp
add
cwtl
mov
shlb
clc
repnz
jmp
jae
add
dec
pop
nop
push
mov
leave
nop
jmp
sbb
mov
add
les
add
mov
clc
repnz
jmp
jae
add
add
add
add
mov
mov
add
add
jmp
insb
add
add
mov
stos
push
mov
xchg
ret
jle
add
add
add
out
mov
add
out
cli
mov
mov
xchg
ret
or
rclb
add
test
repnz
jmp
jae
add
mov
push
mov
add
add
add
add
sub
jno
mov
add
add
lea
pause
push
mov
leave
nop
jmp
add
inc
inc
add
rclb
sub
add
clc
repnz
jmp
jae
add
add
add
mov
nop
pop
sub
repnz
jmp
jae
jnp
add
add
jo
add
clc
repnz
jmp
jae
add
mov
add
adc
dec
add
loopne
add
clc
repnz
jmp
jae
inc
add
inc
mov
xor
add
dec
push
push
mov
xchg
ret
out
inc
push
pop
mov
sbb
jge
arpl
cld
jmp
jae
inc
add
add
mov
dec
push
mov
xchg
ret
add
jnp
or
cld
les
jmp
test
repnz
jmp
jae
sub
sub
dec
push
push
mov
xchg
ret
add
add
add
out
add
add
inc
iret
shr
clc
repnz
jmp
jae
add
add
add
mov
enter
clc
repnz
jmp
jae
inc
sbb
sbb
add
fwait
add
add
repnz
jmp
jae
test
test
add
push
mov
inc
push
clc
repnz
jmp
jae
mov
add
rolb
add
mov
push
mov
xchg
ret
xor
out
add
add
mov
ret
ror
push
mov
xchg
ret
enter
xor
add
add
jle
mov
clc
repnz
jmp
jae
mov
add
add
mov
push
jmp
sar
repnz
jmp
jae
jmp
add
add
call
loop
add
daa
mov
add
add
add
outsl
je
clc
repnz
jmp
jae
or
add
add
call
inc
add
out
aaa
add
jnp
add
movsb
clc
repnz
jmp
jae
add
add
add
movsl
test
daa
cmp
nop
jmp
jl
jl
add
add
add
xor
jg
add
insb
nop
push
mov
leave
nop
jmp
add
rolb
dec
data16
and
clc
repnz
jmp
jae
add
jge
movsl
mov
es
mov
movzwl
nop
push
mov
leave
nop
jmp
push
mov
add
out
cmpsl
mov
push
mov
xchg
ret
fwait
cmp
dec
add
add
or
sbb
clc
repnz
jmp
jae
jle
add
add
les
in
call
nop
push
mov
leave
nop
jmp
push
xor
add
add
add
adc
push
mov
xchg
ret
jle
dec
inc
xchg
add
add
add
fld1
nop
push
mov
leave
nop
jmp
add
dec
out
mov
dec
mov
push
mov
xchg
ret
movsb
jmp
rcrb
aaa
sbb
inc
add
add
fisttpll
cld
jmp
jae
jmp
add
add
add
rcll
repnz
jmp
jae
jnp
add
rcl
aad
and
add
mov
xbegin
jae
add
out
cmp
mov
sahf
test
jmp
jae
add
add
test
out
add
loopne
pop
or
mov
add
add
nop
jmp
add
mov
xchg
lret
push
mov
stos
lock
arpl
adc
aaa
add
dec
add
add
dec
clc
dec
inc
clc
repnz
jmp
jae
sub
add
das
ret
nop
push
mov
leave
nop
jmp
add
add
jle
add
push
xchg
pusha
add
add
mov
in
xchg
add
add
add
pop
mov
add
adc
and
call
nop
jmp
add
pop
mov
jl
mov
lret
push
mov
xchg
ret
mov
cwtl
push
add
mov
loop
clc
repnz
jmp
jae
add
add
and
cmpsb
and
clc
repnz
jmp
jae
jge
rolb
daa
add
mov
jmp
test
or
mov
aad
push
jge
out
incl
inc
jmp
rclb
pop
inc
add
mov
daa
out
push
push
pop
add
nop
push
mov
leave
nop
jmp
add
jge
add
aaa
rolb
ror
adc
add
clc
repnz
jmp
jae
add
test
pop
or
or
clc
repnz
jmp
jae
aad
add
mov
mov
jne
call
nop
jmp
aaa
mov
in
pop
clc
repnz
jmp
jae
and
add
add
enter
add
mov
clc
repnz
jmp
jae
add
add
enter
mov
mov
clc
repnz
jmp
jae
mov
enter
add
dec
stos
push
clc
repnz
jmp
jae
test
add
fwait
and
add
add
scas
inc
push
push
mov
xchg
ret
dec
test
jge
jl
incl
daa
push
push
mov
xchg
ret
jl
or
out
push
add
add
test
add
das
pusha
clc
repnz
jmp
jae
add
and
test
add
add
orl
test
add
clc
repnz
jmp
jae
add
enter
ds
push
mov
xchg
ret
jle
mov
les
pop
add
incl
add
stos
jmp
add
or
aas
add
dec
add
add
push
call
clc
repnz
jmp
jae
mov
jbe
out
dec
nop
push
mov
leave
nop
jmp
aad
jl
add
movsb
adc
add
or
nop
jmp
add
inc
rolb
movsl
add
and
mov
mov
repnz
jmp
jae
jnp
add
push
add
add
dec
add
add
fisttpll
add
repnz
jmp
jae
add
add
jbe
add
fld1
clc
repnz
jmp
jae
inc
mov
fwait
out
dec
add
jae
inc
add
add
cmp
mov
push
jmp
popf
jmp
add
add
aad
add
cmp
add
mov
clc
repnz
jmp
jae
add
add
and
xor
nop
push
mov
leave
nop
jmp
mov
add
add
imulb
clc
repnz
jmp
jae
add
add
jge
dec
out
in
leave
nop
push
mov
leave
nop
jmp
aas
add
adc
add
pop
add
cld
jo
mov
clc
repnz
jmp
jae
mov
mov
add
push
push
mov
xchg
ret
fwait
add
add
push
les
add
push
clc
repnz
jmp
jae
pop
add
add
sbb
flds
mov
leave
nop
jmp
cmp
add
jge
sub
jmp
jae
add
add
add
add
add
push
mov
xchg
ret
dec
and
add
add
popf
add
push
mov
xchg
ret
mov
or
enter
repz
mov
xchg
ret
pop
mov
add
add
fistpl
push
mov
xchg
ret
jge
add
add
mov
clc
repnz
jmp
jae
and
pop
mov
mov
push
mov
xchg
ret
add
add
add
add
movsl
push
fisttps
test
jmp
mov
leave
nop
jmp
mov
add
jnp
movsb
pop
push
mov
mov
out
add
xchg
mov
or
stos
cmp
push
mov
xchg
ret
out
add
xchg
dec
add
xchg
inc
mov
clc
repnz
jmp
jae
sub
add
sub
cld
jmp
jae
mov
aad
add
sub
nop
push
mov
leave
nop
jmp
add
mov
inc
add
cmc
xor
push
mov
xchg
ret
cld
add
inc
add
add
add
add
add
fld1
push
mov
xchg
ret
mov
push
add
aaa
add
dec
add
push
mov
leave
nop
jmp
dec
and
add
inc
mov
push
add
daa
pop
div
nop
push
mov
leave
nop
jmp
add
add
mov
jge
imul
inc
add
mov
les
inc
add
jmp
jae
add
pop
add
add
xor
push
repnz
mov
leave
nop
jmp
add
push
add
add
mov
aaa
mov
push
clc
repnz
jmp
jae
add
add
lcall
add
add
jg
clc
repnz
jmp
jae
add
add
add
add
aad
rclb
xor
cmp
ret
aad
and
add
inc
push
call
cld
jmp
jae
aaa
sub
lahf
pop
clc
repnz
jmp
jae
add
mov
inc
push
add
add
fistpl
clc
repnz
jmp
jae
add
xor
mov
clc
push
mov
xchg
ret
pop
mov
add
add
add
push
mov
nop
push
mov
leave
nop
jmp
dec
incl
add
add
add
nop
push
mov
leave
nop
jmp
or
add
add
add
mov
pop
nop
push
mov
leave
nop
jmp
add
cmp
xchg
add
mov
sub
mov
enter
mov
xchg
ret
add
enter
mov
adc
nop
push
mov
leave
nop
jmp
add
out
push
add
mov
inc
clc
repnz
jmp
jae
add
aad
out
xor
add
mov
clc
repnz
jmp
jae
add
add
push
add
jmp
add
sbb
nop
jmp
xor
jle
out
add
movsb
add
jmp
jae
adc
add
add
pop
test
nop
push
mov
leave
nop
jmp
jmp
mov
dec
enter
mov
push
mov
xchg
ret
jl
add
add
aas
jmp
lret
push
mov
cmp
add
inc
or
cmp
add
mov
add
dec
inc
add
adc
dec
sbb
or
cmp
cmp
repnz
jmp
jae
jge
mov
rolb
add
add
add
cmp
ret
or
add
add
add
decl
mov
clc
repnz
jmp
jae
mov
mov
jl
add
mov
nop
push
mov
leave
nop
jmp
add
add
xor
jne
push
mov
xchg
ret
dec
or
mov
mov
jmp
jae
add
pop
jbe
add
mov
je
clc
repnz
jmp
jae
push
add
add
xchg
mov
clc
repnz
jmp
jae
fwait
and
jmp
pop
mov
jge
add
cld
add
movsl
add
cmp
push
inc
add
jle
add
add
out
popl
sti
nop
push
mov
leave
nop
jmp
add
push
jnp
daa
add
outsl
add
clc
repnz
jmp
jae
add
add
inc
add
jbe
clc
repnz
jmp
jae
and
add
jnp
xor
repnz
jmp
jae
pop
test
add
add
inc
add
cmp
mov
xchg
ret
and
add
inc
add
add
mov
mov
jge
clc
repnz
jmp
jae
add
cmp
add
and
add
pop
add
nop
push
mov
leave
nop
jmp
and
add
add
add
clc
repnz
jmp
jae
push
movsb
add
mov
add
sbb
add
clc
repnz
jmp
jae
pop
add
add
push
mov
in
add
lds
add
jl
sbbl
add
add
pop
push
movsb
mov
push
mov
xchg
ret
add
add
add
test
scas
jmp
rclb
jg
add
add
test
add
and
add
clc
repnz
jmp
jae
jl
add
add
add
aad
jle
inc
mov
leave
nop
jmp
inc
xor
movsl
mov
jnp
add
lret
add
add
cmp
nop
jmp
out
mov
add
add
dec
add
add
cwtl
xor
cld
jmp
jae
add
inc
add
aaa
shrb
jmp
adc
repnz
jmp
jae
add
add
dec
push
clc
repnz
jmp
jae
mov
aaa
sub
out
mov
cmp
fwait
push
mov
xchg
ret
dec
movb
add
add
inc
add
clc
repnz
jmp
jae
add
add
movb
add
aaa
out
sub
push
mov
xchg
ret
aad
mov
add
out
or
xchg
xchg
add
mov
xchg
ret
mov
out
jge
add
mov
mov
clc
repnz
jmp
jae
add
and
sub
push
mov
xchg
ret
mov
inc
aaa
push
out
dec
pop
sbb
mov
add
add
flds
repnz
jmp
jae
xor
add
add
inc
add
push
xor
mov
inc
add
sub
add
enter
add
or
fldl
in
leave
nop
jmp
jge
add
add
add
rol
and
mov
arpl
clc
repnz
jmp
jae
add
jmp
movb
jge
scas
mov
nop
push
mov
leave
nop
jmp
add
mov
out
push
dec
add
clc
repnz
jmp
jae
enter
add
add
add
inc
cwtl
add
imul
clc
repnz
jmp
jae
add
add
dec
jge
dec
add
mov
xchg
ret
cmp
mov
add
add
sub
mov
xchg
ret
add
add
and
cmp
cwtl
dec
arpl
or
clc
repnz
jmp
jae
add
daa
aaa
mov
fld1
clc
repnz
jmp
jae
add
and
mov
add
fwait
push
mov
xchg
ret
push
out
add
test
add
jle
add
pop
add
clc
repnz
jmp
jae
add
add
add
movsb
and
out
push
push
mov
xchg
ret
rolb
push
add
add
lock
in
in
add
data16
repnz
xchg
or
add
push
loopne
push
mov
leave
nop
jmp
dec
fwait
add
add
cld
add
cli
sbb
mov
xchg
ret
add
lcall
add
sbb
aas
add
les
ret
add
add
sbb
push
add
add
aaa
jmp
gs
repnz
jmp
jae
sub
dec
add
adc
mov
cld
jmp
jae
add
add
rcrb
mov
rep
clc
repnz
jmp
jae
inc
add
inc
aas
mov
add
cld
mov
dec
sub
repnz
jmp
jae
add
add
sbb
mov
jb
nop
push
mov
leave
nop
jmp
or
cmp
ret
clc
repnz
jmp
jae
movb
add
add
and
add
and
fld1
clc
repnz
jmp
jae
mov
add
add
jbe
jmp
add
sarb
add
or
cmp
mov
add
xor
add
lcall
mov
xchg
ret
add
add
jge
daa
out
add
sub
add
clc
repnz
jmp
jae
dec
add
add
push
fwait
mov
inc
push
mov
xchg
ret
add
rol
test
movsb
pop
xchg
nop
push
mov
leave
nop
jmp
fwait
and
add
jbe
cltd
push
clc
repnz
jmp
jae
or
add
daa
inc
mov
add
add
adc
mov
clc
repnz
jmp
jae
push
add
push
add
add
and
test
mov
cld
jmp
jae
add
pop
jge
dec
shlb
repnz
jmp
jae
jl
add
jmp
or
push
test
xchg
fists
mov
xchg
ret
add
mov
movsb
jnp
add
repnz
jmp
jae
add
movsb
add
pop
pushl
push
mov
xchg
ret
add
sub
aas
add
inc
add
add
add
insb
add
add
clc
repnz
jmp
jae
add
add
add
cmp
clc
repnz
jmp
jae
incl
add
add
add
xor
clc
repnz
jmp
jae
add
jmp
add
mov
mov
add
add
mov
dec
scas
cmpb
addl
xchg
cmpsl
xchg
inc
notb
cmp
jmp
mov
add
imul
add
fstpt
mov
push
jg
mov
add
add
add
add
add
mov
aas
loop
dec
std
ljmp
mov
cmpsb
dec
orb
push
jae
int3
sub
popa
movsb
sbb
mov
jo
xchg
xor
pusha
add
inc
cltd
adc
push
pop
or
add
movsl
ficomps
bound
fidivl
mov
scas
movsl
mov
xlat
ss
dec
fnstcw
xchg
imul
add
adc
add
add
or
mov
add
add
and
inc
sub
fdivs
mov
push
fucomi
fsubrs
call
or
int3
insl
and
cmpsb
push
mov
cmc
sbb
mov
rcl
jmp
arpl
jb
mov
mov
adc
adc
jbe
or
mov
or
sbb
ljmp
dec
cld
push
int
sbb
dec
dec
add
add
mov
mov
xchg
andb
data16
leave
mov
sub
add
add
in
ficomps
inc
and
inc
add
add
mov
mov
adc
mov
or
shll
push
jecxz
sub
nop
cmova
inc
nop
cmc
in
pop
inc
add
mov
cmp
or
mov
xor
lahf
and
add
add
in
ficoms
add
add
ja
cmpsl
imul
jns
add
add
inc
add
add
cmp
cmpsb
mov
add
sub
mov
mov
push
pop
addr16
cmp
lea
push
sbb
xchg
fidivl
lret
sub
add
add
push
jno
inc
xor
lret
mov
insb
add
add
leave
test
test
add
push
lret
mov
mov
or
jae
sub
repz
faddl
add
cmpsb
lods
jmp
outsb
cmc
rcll
mov
push
pusha
add
jp
loop
les
call
mov
ret
or
add
add
cmp
push
repz
add
add
and
jo
mov
scas
mov
sub
add
add
je
mov
jmp
add
or
mov
cmpsb
stos
pusha
add
add
inc
arpl
jnp
movsb
into
ss
loopne
pop
lret
push
or
movsl
push
cmp
sub
add
add
cmp
jo
out
lods
cmp
mov
add
ret
mov
jns
xchg
xor
xchg
push
jle
sbb
daa
jnp
bound
add
sbb
xchg
pop
sub
dec
push
add
mov
adc
shlb
xchg
xor
les
enter
jmp
adc
test
fstp
push
lret
add
xlat
clc
mov
or
add
add
dec
add
add
lret
movsl
sub
and
mov
mov
loopne
fwait
mov
int3
into
in
fwait
xchg
inc
mov
xor
mov
add
inc
add
add
jno
pop
in
mov
sbb
adc
xor
shr
push
insl
psubd
cmp
cli
pusha
add
add
mov
xchg
push
mov
lock
add
mov
add
loope
fsubl
pop
sub
js
mov
lea
mov
xor
lea
insl
sub
dec
lret
jns
scas
out
xchg
sub
mov
mov
add
add
dec
aaa
cli
cld
mov
mov
dec
jecxz
mov
mov
sbb
jae
int
bnd
add
mov
mov
mov
add
add
add
add
pushf
bound
xor
add
stos
jp
add
add
fcmovnu
push
jmp
add
insb
add
enter
je
lret
push
jbe
inc
add
movb
dec
ret
fiadds
add
jo
gs
cmp
js
arpl
shlb
sbb
cwtl
in
sub
add
add
shll
or
add
add
ret
add
add
add
jnp
pop
dec
adc
lock
mov
adc
aad
iret
cmc
and
add
add
mov
loopne
sbb
push
ja
and
mov
outsb
cmp
movl
dec
popa
inc
or
into
lret
xchg
or
mov
mov
inc
dec
cwtl
das
xor
shr
pop
cmp
bswap
rcrl
fmuls
leave
daa
pusha
add
es
ja
les
mov
jmp
or
inc
mov
nop
ficomps
out
icebp
xor
jno
dec
lcall
jl
push
jge
ja
clc
add
add
add
pop
int
sub
add
add
aad
repz
gs
test
cmpsl
aaa
rorl
shll
add
and
inc
add
xlat
cmpsl
in
or
push
daa
loop
add
mov
lock
or
mov
test
inc
add
add
dec
xchg
jl
or
mov
push
mov
pop
sbb
fistl
pop
adc
add
inc
add
pop
movq
out
dec
hlt
add
cmpsl
mov
add
sbb
in
sub
mov
cmp
sahf
cld
ret
in
lea
pop
dec
out
add
sub
mov
mov
cmp
push
mov
out
test
inc
add
dec
add
repnz
jne
sbb
cld
and
leave
or
add
add
inc
mov
stc
mov
adc
xchg
push
jecxz
jg
push
cli
add
gs
cmp
mov
add
hlt
or
mov
mov
lcall
add
cmpsl
push
push
push
loope
xchg
xor
clc
jmp
add
add
insl
test
icebp
mov
add
add
sbb
add
inc
cmp
mov
add
and
or
pop
push
repnz
add
add
push
out
and
add
mov
or
mov
add
mov
dec
fcomps
jbe
bound
loop
jns
cmp
mov
pop
or
add
and
cs
fucomip
insb
add
add
popf
adc
push
pop
cmp
adc
jp
mov
cs
dec
add
add
and
sbb
fldl
sbb
aas
jns
ret
xchg
loop
xor
ret
mov
sub
testb
push
in
add
xchg
lods
mov
add
add
je
mov
jg
and
add
add
pop
pop
jp
add
insb
add
add
mov
rolb
out
ficoml
mov
jns
lock
dec
ds
add
add
mov
out
mov
dec
add
add
cmp
test
xchg
add
xor
push
jno
cs
fcomps
scas
loopne
push
enter
sub
sbb
xchg
inc
pusha
add
mov
pop
aas
mov
dec
lock
aas
jl
cmpl
pop
pop
not
dec
sahf
xchg
rcl
xor
das
inc
lds
inc
add
add
andb
xchg
mov
push
sbbb
pop
adc
sbb
stc
dec
jmp
test
or
roll
sbb
mov
cwtl
and
mov
push
xchg
dec
mov
mov
xchg
cmc
ret
lea
sub
add
add
adc
popf
and
aas
mov
inc
push
scas
jecxz
jo
imul
add
cwtl
cli
or
loop
push
arpl
or
mov
fistpl
shrb
std
lret
insl
push
pop
cli
sub
dec
add
add
xchg
outsb
int3
out
nop
iret
cmp
mov
shrl
inc
in
imul
fwait
jge
or
add
add
add
sbb
cmp
add
adc
jne
stos
movsl
mov
cmpsl
scas
mov
ljmp
icebp
jl
sbb
addr16
popa
data16
imul
push
xchg
shlb
mov
jp
push
pop
mov
push
mov
addb
stos
add
mov
push
pop
ja
dec
repnz
add
jnp
add
add
jge
add
mov
cmpsl
sbb
in
add
cmp
sub
in
jno
ja
icebp
scas
inc
inc
add
aam
cmp
add
push
dec
loope
pop
dec
mov
imul
add
add
nop
std
shll
mov
and
add
add
repnz
pop
clc
cwtl
popa
mov
and
add
filds
add
add
mov
pop
sbb
and
mov
arpl
jge
pop
arpl
add
test
cmp
mov
adc
sub
ficoml
dec
cltd
test
out
push
add
add
test
out
add
outsb
mov
sub
dec
out
xchg
int
ss
out
push
pop
mov
add
cwtl
mov
pop
add
clc
jno
addr16
ljmp
fwait
pop
int
ffree
out
ja
jnp
sbb
mov
add
aas
repz
repz
out
mov
mov
inc
es
arpl
fstl
add
insl
test
out
add
add
mov
outsl
jnp
add
add
or
mov
jle
mov
icebp
mov
adc
add
bound
addr16
add
mov
lret
pop
or
add
add
ja
vcmptrueps
loope
adc
add
add
add
push
lret
sar
xchg
push
outsb
xor
mov
add
into
sub
cmp
mov
das
fcomps
addr16
cmc
pop
pusha
add
add
sahf
daa
aad
cmpl
add
xor
pop
imul
jb
jl
flds
insl
insb
add
int3
mov
sbb
aaa
jo
pop
xlat
cs
push
fcomi
adc
or
mov
lds
add
mov
rcrl
add
xor
test
out
dec
jle
lahf
pop
in
push
ljmp
add
add
add
xchg
pop
insb
add
add
test
fnstsw
mov
stos
sbb
pop
test
shlb
push
sbb
icebp
in
repz
xchg
cltd
cmp
aas
lahf
sahf
mov
add
mov
loop
popf
cmc
test
jmp
lahf
sbb
in
xchg
jne
mov
add
add
add
pop
and
mov
es
sub
mov
stos
mov
sub
mov
aam
add
stc
xlat
dec
call
adc
loope
push
movsb
pop
inc
add
add
jg
mov
xchg
mov
movsb
dec
shlb
push
cmpb
popa
jecxz
pop
enter
ja
add
add
cld
cmp
dec
and
mov
scas
inc
xchg
orl
jns
lods
xor
add
jb
call
add
xchg
pop
sti
das
mov
das
mov
movsb
sub
add
add
jnp
sbb
inc
xchg
push
and
mov
mov
lret
adc
push
mov
ja
call
addl
jae
hlt
aaa
test
add
add
addl
mov
std
sub
inc
mov
pop
mov
iret
lret
enter
add
dec
es
andl
pop
push
adc
add
add
test
cld
add
add
adc
sbb
outsl
nop
lock
mov
mov
fstp
pusha
add
add
mov
insl
cmp
aad
jge
lahf
icebp
lahf
add
sarl
or
test
sub
and
xchg
cld
dec
add
add
or
test
fstpt
call
add
adc
add
add
add
add
add
shll
pushf
adc
xchg
xlat
imul
add
rcrb
inc
add
add
fwait
jb
push
leave
into
jno
pop
inc
add
xchg
jmp
ja
daa
mov
lcall
aas
mov
add
xchg
xor
or
mov
insl
sbb
mov
xor
lods
pusha
add
in
add
int
push
adc
addr16
mov
lods
push
mov
xor
lods
test
repnz
inc
fsubrs
add
xchg
mov
xchg
lods
mov
js
mov
scas
adc
popf
movsl
mov
cmp
xchg
rolb
rclb
lock
push
popf
xchg
push
repnz
mov
orb
xor
jle
adc
outsl
inc
add
and
mov
xchg
mov
push
push
sahf
adc
arpl
mov
out
jp
xor
sub
cmpsl
jnp
aam
mov
xchg
inc
mov
mov
ret
jecxz
push
pop
ret
cwtl
jmp
mov
adc
jl
addr16
add
add
rolb
add
add
push
in
sub
xor
add
stos
clc
pushf
test
push
in
iret
sub
add
add
add
add
aam
inc
cmc
dec
add
add
movsl
mov
cli
pushf
pusha
add
mov
pop
and
add
add
dec
insl
push
dec
hlt
inc
add
add
dec
add
xlat
shll
add
add
lods
data16
sbb
jo
gs
cli
lea
bound
daa
divb
xchg
jnp
pop
repnz
test
add
cli
gs
lods
or
mov
insb
add
add
imul
push
call
xchg
rcr
das
cmpsl
iret
shll
dec
add
add
add
cmp
xor
fnstcw
dec
add
movsl
imul
mov
out
fbstp
dec
aas
jmp
push
or
pop
push
add
dec
cmpsl
pop
push
in
mov
push
inc
add
loope
sub
and
xchg
outsb
pop
mov
jge
roll
lcall
repnz
insl
lock
xor
les
cmp
in
lea
sarb
cld
ret
mov
popf
loope
add
xchg
movsl
filds
add
add
sub
shlb
out
jbe
data16
pop
or
xchg
out
test
cs
add
add
mov
popf
aam
in
add
jmp
mov
mov
cli
mov
push
sbb
hlt
push
loop
pop
adc
cmp
add
ds
add
add
cmp
test
add
fistl
mov
jo
or
add
add
dec
test
lds
cwtl
lods
inc
add
mov
add
cli
add
cli
xchg
push
xchg
mov
add
dec
fucom
out
pop
pop
outsl
sbb
add
je
movsb
mov
dec
add
add
lahf
imul
mov
clc
sti
fmul
sbb
shrb
add
loopne
jle
or
les
mov
sub
add
add
jo
push
cmpsl
mov
jae
jno
pusha
add
cli
pop
loop
xor
add
hlt
sbb
das
sbb
dec
sbb
add
push
dec
mov
xchg
das
out
jmp
shrb
add
insl
lea
jnp
xchg
add
rcrb
loope
xor
cmpsb
add
add
add
push
rclb
in
lret
and
lods
jne
cs
mov
add
add
cltd
pop
mov
dec
outsl
in
test
scas
jle
push
insl
in
xor
add
daa
inc
stos
mov
push
jne
add
push
or
add
imul
stos
add
add
ds
lods
pop
add
add
xchg
jne
mov
gs
add
add
add
add
add
shlb
xchg
lret
imul
mov
add
add
shll
add
add
add
add
add
lret
popf
pop
xchg
adc
pop
aad
adc
dec
daa
ret
shr
out
or
mov
and
xchg
test
mov
add
xchg
push
std
mov
add
push
push
jg
and
add
add
jnp
loopne
aaa
pop
xor
cmpsl
fidivs
jbe
and
adc
push
jb
mov
aam
pop
push
mov
std
ljmp
leave
out
xor
je
test
imul
add
je
scas
int
outsb
xchg
cmpsl
inc
add
add
das
and
dec
mov
lret
inc
push
inc
js
mov
imulb
stos
daa
addr16
dec
add
add
clc
aam
gs
jne
add
add
and
xchg
or
and
xchg
testb
dec
add
add
push
cmpb
mov
aam
inc
loope
pop
jb
ljmp
add
bound
add
repz
add
xchg
rclb
push
in
stc
or
add
add
push
jle
push
and
add
add
ret
popa
mov
dec
add
sub
pop
mov
add
xchg
mov
pop
inc
add
add
scas
mov
out
rolb
xor
add
mov
movsb
adc
int
cmp
int
push
leave
les
outsl
and
cwtl
js
pop
in
jmp
jae
xlat
jo
je
sbb
push
into
int3
mov
and
fmul
xchg
mov
int3
mov
jo
add
mov
pop
mov
add
add
add
cwtl
decl
loop
add
mov
jo
jbe
imul
outsb
aam
add
add
push
cmc
fmuls
mov
or
clc
xor
adc
jns
add
mov
add
std
add
mov
hlt
mov
jge
test
cltd
in
dec
jo
add
pop
pop
in
or
adc
shrd
inc
add
add
aad
adc
xor
leave
and
mov
push
mov
cld
jne
xchg
or
mov
ud1
mov
mov
pusha
add
push
or
mov
add
mov
sti
ffreep
lret
pop
cld
dec
add
add
int3
mov
pop
push
pop
lea
stc
pop
cli
fnstcw
jns
push
mov
add
add
lods
dec
jo
insb
add
add
pusha
add
aaa
push
inc
ljmp
in
or
add
add
jno
mov
add
jmp
add
add
jo
or
vucomiss
sbbl
bound
mov
stos
pop
sarb
arpl
fstps
add
mov
fidivrs
shr
das
inc
jnp
jne
or
mov
add
add
stc
sbb
fidivs
push
xchg
nop
outsl
lea
adc
dec
mov
xlat
or
out
insl
pop
push
push
mov
push
sahf
push
cmp
inc
add
add
cwtl
xor
add
lods
notb
in
or
mov
cmp
mov
adc
jle
or
jno
fwait
add
insb
add
pop
call
sti
xchg
inc
lods
clc
vsubss
mov
stos
push
adc
add
ficoml
jns
mov
push
bound
jecxz
pop
mov
add
sarb
stos
push
mov
lahf
cmp
add
push
and
mov
lret
add
mov
add
add
jle
jmp
fiaddl
mov
pop
popf
test
jns
in
xlat
jmp
dec
scas
ljmp
loopne
mov
add
orb
popa
sub
lahf
inc
mov
mov
in
jg
jo
inc
sarb
mov
and
mov
pop
test
pop
or
mov
inc
pop
xchg
xor
fwait
loopne
push
xor
scas
arpl
clc
push
cmp
push
enter
aam
scas
lods
in
into
mov
mov
shll
bound
ret
xchg
gs
pop
mov
mov
xchg
outsb
pop
scas
cmpsl
mov
add
add
mov
xchg
fnsave
icebp
inc
push
adc
xchg
in
loopne
mov
add
add
add
rclb
add
scas
push
outsb
adc
add
into
or
mov
adc
add
add
sbb
jo
xor
push
mov
add
mov
add
std
lea
loopne
cli
cli
ljmp
sub
mov
testb
aam
ret
andb
cmp
pop
cli
or
sbb
xchg
cmc
mov
add
cmpsl
cmp
popf
sti
cmp
add
mov
stos
int
aad
mov
cmp
mov
or
clc
pop
xchg
rcll
add
add
jg
lds
add
cmp
out
sub
add
sub
push
rcrl
sbb
xor
int
out
int3
cmp
add
es
mov
jp
js
add
add
aad
dec
pop
popa
adc
sub
imul
adc
rcll
pusha
add
add
hlt
sub
add
cli
cs
cmc
and
add
iret
cmp
test
pop
fmull
inc
add
sub
add
add
add
lds
mov
add
xorl
jo
sub
or
outsb
pop
jmp
pop
jmp
mov
add
add
add
xor
insb
add
add
mov
repnz
out
test
jo
test
pop
outsb
mov
jp
imul
mov
es
iret
xor
mov
mov
iret
or
mov
inc
cmpsb
mov
add
mov
cs
jg
std
cmp
das
push
add
xchg
xor
and
add
add
ja,pn
xchg
fisttps
mov
adc
sarb
add
add
bound
mov
and
add
add
mov
mov
mov
adc
push
sub
push
push
cmc
add
imul
cmp
imul
push
in
out
fstps
in
pusha
add
add
and
sti
shld
es
popa
inc
mov
movsl
jle
ds
mov
or
and
add
add
mov
xchg
or
add
imul
add
rorl
repz
mov
int
fildl
bound
mov
push
inc
add
add
push
ret
lcall
adc
shlb
xor
popa
add
mov
mov
add
add
mov
imul
test
imul
std
shrb
add
and
idiv
lds
mov
in
lock
inc
fcompl
out
mov
jne
adc
push
popf
sub
add
add
aaa
pop
and
pop
insb
add
mov
jnp
add
inc
ljmp
add
add
pop
jne
inc
cmp
push
pop
mov
add
xchg
jno
mov
add
sub
add
add
push
imull
cmp
fsub
xchg
pop
das
jnp
js
fwait
jbe
and
add
add
sarb
cli
xchg
int3
add
add
add
mov
scas
lea
cmp
cmc
out
roll
add
mov
rcl
jno
out
dec
add
lods
push
cltd
test
rcr
mov
mov
sub
add
add
cmp
mov
shll
add
add
pop
jns
and
mov
add
push
xchg
and
add
dec
add
add
inc
rolb
ds
shll
jne
inc
add
sbb
xchg
bts
mov
sbb
lods
sti
in
outsl
pop
mov
mov
mov
xchg
or
mov
inc
add
in
repz
pushw
arpl
call
dec
leave
in
adc
add
sub
add
std
movsb
jmp
mov
ror
mov
inc
call
add
add
add
mov
add
mov
ljmp
sub
add
add
stos
jno
icebp
cmp
ss
es
add
out
das
loope
test
inc
lods
lcall
fwait
nop
mov
in
sub
xchg
sub
push
jns
mov
add
mov
add
add
add
xlat
mov
mov
jg
movsb
lds
hlt
pop
mov
pop
fdivrp
and
leave
dec
leave
lret
fsubrl
add
mov
add
add
or
mov
add
add
lds
sti
xchg
sub
add
add
mov
cwtl
and
add
add
xchg
out
jge
sub
das
shrb
or
xchg
dec
jle
inc
add
add
das
outsb
sub
adc
jns
dec
xor
je
xor
pushf
cmp
sbb
jmp
add
rol
jle
loopne
lock
cmp
sub
add
add
jmp
or
cmp
test
mov
cmp
stc
pop
lcall
repnz
fstl
add
nop
xchg
cwtl
test
fimull
mov
out
jge
rclb
fucomip
pop
sahf
sbb
ja
xor
mov
dec
or
mov
add
add
ljmp
inc
and
hlt
jae
ret
add
add
dec
and
orb
movl
push
and
aas
lds
mov
gs
add
and
popl
add
les
into
xor
sub
add
mov
dec
push
movsl
movsb
pop
notb
lods
adc
gs
add
jle
sbb
mov
call
int3
and
mov
cmc
jmp
sbb
cmc
out
lea
add
add
mov
mov
xor
or
jmp
push
mov
add
testb
mov
jl
mov
add
call
cmp
hlt
imul
jb
mov
jecxz
xchg
jp
imul
add
mull
pushf
adc
dec
lcall
inc
xor
add
add
je
adc
mov
shlb
mov
repz
mov
add
shll
push
mov
mull
mov
fmul
cltd
xchg
ds
dec
lret
adc
das
dec
roll
add
push
lcall
add
push
sarb
add
test
setb
jecxz
xbegin
add
add
mov
aam
in
add
mov
dec
cmp
xchg
sub
das
hlt
sub
lods
mov
add
mov
call
arpl
add
es
jge
divb
add
fnsave
jo
xor
ja
orl
jae
add
fcmovne
or
in
fstpl
dec
scas
in
adc
loopne
xchg
pop
and
mov
cmp
xor
push
mov
xchg
loop
cmp
pop
adc
or
add
add
ljmp
mov
jne
push
pop
jbe
pop
jge
pop
clc
and
add
add
or
mov
add
mov
divl
add
aad
or
mov
add
lret
dec
push
push
lds
mov
out
mov
push
into
jp
popfw
dec
std
cmp
je
sti
adc
pop
push
clc
pop
cmp
popf
xchg
hlt
xchg
push
mov
sarb
sti
push
pusha
add
je
xchg
pop
call
add
pusha
add
add
fmull
loopne
pusha
add
add
and
test
dec
add
add
sub
mov
xchg
or
jmp
xchg
ret
mov
xchg
inc
mov
shrl
add
add
sbbb
push
in
cmpl
mov
xchg
mov
ljmp
mov
and
add
add
in
orb
inc
popa
jg
inc
test
cmp
out
arpl
gs
dec
mov
cmp
mov
add
jno
sbb
xchg
pop
movsb
jbe
xchg
sbb
push
inc
xchg
cmpb
inc
sub
pop
jl
push
or
add
cmp
jle
inc
add
add
xchg
fnstsw
fisubrs
cmp
xchg
cmp
add
add
push
cs
repz
pop
inc
add
add
out
lds
xor
push
pop
insb
add
add
aam
lret
add
in
mov
inc
add
add
add
add
add
add
add
mov
cmpsb
jge
sbb
shl
in
js
outsb
push
mov
pushf
out
xlat
xor
jl
ret
dec
add
adc
lcall
cli
xchg
pop
add
add
mov
cld
jne
aad
lea
inc
cs
jnp
mov
add
add
or
add
add
aaa
pop
inc
add
add
loopne
mov
add
add
mov
or
stos
and
add
add
dec
sub
inc
mov
aaa
roll
xchg
cmp
xchg
mov
add
mov
add
add
addr16
cmp
xchg
add
add
sbb
sub
call
add
jbe
xchg
pop
inc
jns
popf
mov
dec
add
add
aas
push
jmp
stos
sub
fldl
add
add
add
add
add
fbld
fmul
push
test
add
add
and
mov
mov
xchg
add
add
rcrb
mov
add
aaa
xchg
addl
mov
and
orl
adc
fiaddl
int
jecxz
xor
dec
cmp
mov
pop
jbe
jns
insl
loopne
xor
in
decl
add
insl
call
dec
or
repz
pop
movsl
test
mov
pop
cmp
add
jmp
in
adc
sbb
cs
pop
adc
and
mov
push
mov
pusha
add
add
add
vpsubusw
add
push
mov
cmp
int
xor
add
add
sbb
mov
xchg
lock
aam
adc
ret
ret
js
notl
xchg
leave
sti
cmc
ret
dec
mov
cmp
sbb
fisttps
add
jne
popf
outsl
or
mov
cmp
xor
test
movsl
jne
loope
dec
cwtl
lods
mov
add
add
nop
xor
add
pop
mov
mov
iret
das
pushf
or
test
sub
push
cmpsl
cmp
sti
iret
test
fcoms
xchg
dec
add
mov
add
int
and
pop
cmp
cwtl
cmp
sub
add
add
add
add
dec
shl
sbb
out
pop
mov
add
add
add
jne
or
mov
addb
xlat
sbb
out
sub
bound
mov
cwtl
outsb
cmc
jb
add
add
sub
mov
pusha
add
repz
push
gs
shr
test
out
ss
std
orl
insl
dec
std
sub
mov
sbb
icebp
insb
add
add
in
cmp
jno
cmc
cli
adc
ss
popf
jo
cmp
inc
mov
int3
cmp
mov
cmpsb
xor
stos
call
add
sub
arpl
add
mov
lea
scas
das
mov
lret
dec
sahf
mov
add
sarb
jns
pop
adc
cmp
jnp
loopne
std
es
test
mov
fmul
ljmp
jp
in
jb
je
loopne
jge
outsb
cmc
mov
lea
add
addr16
ljmp
jl
iret
loop
xlat
pop
nop
js
add
mov
cmc
rorb
or
sti
dec
sub
add
xor
mov
pop
add
mov
add
add
cmp
xchg
sar
or
mov
adc
add
das
hlt
test
cmp
aam
jl
mov
lods
mov
inc
cmp
out
xchg
cmp
mov
cli
aam
add
add
sbb
add
orb
add
xchg
scas
jg
inc
add
add
adc
dec
jmp
test
xchg
mov
mov
pop
cmp
sub
ss
daa
cmp
and
mov
inc
xchg
or
xchg
mov
fninit
mov
add
add
out
xchg
sub
cwtl
sub
add
add
shlb
mov
sub
inc
add
pop
data16
add
mov
mov
add
enter
add
add
jb
fmuls
test
add
mov
je
ds
dec
add
add
jecxz
scas
cmpsb
dec
pop
pop
cmp
mov
dec
lret
xorl
add
nop
popa
stos
lea
add
call
xchg
adc
add
movsb
ja
adc
addr16
xchg
std
fcoml
mov
test
pop
clc
jno
add
adc
add
add
out
mov
dec
or
sbb
jge
push
sbb
jbe
cmp
mov
xor
cli
aam
ss
xchg
in
jo
jbe
movb
add
add
add
movsl
jge
addr16
scas
loop
mov
jno
ret
fldt
sub
aaa
pop
sub
add
lods
xchg
pushf
test
mov
or
add
add
add
pop
mov
add
add
inc
add
dec
decl
jecxz
push
sub
add
rcll
jecxz
sbb
inc
add
add
inc
pop
mov
mov
out
mov
or
mov
inc
daa
push
in
jne
push
cs
cmc
jmp
loopne
xchg
cmp
pop
and
mov
dec
sbb
test
insl
jnp
pop
cltd
mov
add
push
jmp
divb
ds
adc
or
adc
pop
bound
xchg
mov
mov
pop
loope,pt
clc
fdecstp
enter
add
imul
pop
std
popa
xor
in
xchg
jp
and
aas
cltd
jecxz
pop
jbe,pn
add
adc
sub
add
add
add
in
scas
cmpsl
int
jb
add
int3
mov
add
add
add
sarl
add
push
mov
setne
sbb
dec
add
mov
enter
sub
add
jl
jno
nop
mov
mov
rcrb
mov
add
add
add
push
or
cmp
lret
in
sbb
mov
xor
add
aam
in
stc
out
mov
enter
pusha
add
mov
lock
add
jo
add
in
lds
mov
cmp
xor
push
add
xchg
mov
inc
add
add
rep
push
js
add
add
leave
sub
mov
add
dec
lods
fsubl
pop
mov
xor
in
pop
add
dec
daa
add
mov
add
add
pop
or
xchg
out
dec
jg
inc
pop
aam
bound
ficoml
mov
aam
shrb
mov
jns
je
das
dec
sub
ret
loope
mov
add
repz
add
in
inc
idivb
add
add
jge
test
dec
js
addr16
xchg
add
add
mov
add
add
mov
add
add
aaa
pop
ret
push
xor
pop
mov
imul
mov
shrl
and
fldenv
aas
jg
add
push
testb
add
mov
add
cmp
adc
addr16
mov
pusha
add
add
and
inc
fstl
rcll
imul
outsl
cmc
and
cmp
xchg
das
mov
test
push
cs
lock
add
add
add
pop
or
mov
dec
sub
xchg
jecxz
xor
add
add
pop
mov
inc
dec
push
lret
add
xchg
pop
fbld
add
mov
subl
in
sub
lods
pop
das
jno
movsb
sub
adc
add
add
int
je
shll
add
add
mov
sti
imul
and
dec
daa
je
sbb
insl
add
add
add
add
shr
mov
and
testb
mov
jnp
dec
add
sub
add
add
orb
and
mov
stos
rorl
cli
test
adc
ret
push
xlat
fsubr
imul
xchg
clc
mov
imul
xor
mov
into
pop
xchg
push
mov
int
stos
shrb
push
mov
fwait
mov
clc
call
add
scas
pop
out
das
push
scas
ja
xchg
loopne
iret
dec
cwtl
imul
add
push
push
mov
cmp
and
clc
bound
aas
gs
imul
iret
add
add
out
fwait
stos
lods
rcr
dec
mov
es
in
sbb
movsl
inc
pop
not
leave
cmpsl
repnz
fists
mov
mov
inc
add
add
jecxz
push
hlt
push
das
and
cmp
enter
cmpl
adc
fadds
add
add
add
pop
std
pushf
pop
mov
mov
lret
cld
mov
imul
test
shl
stos
mov
or
mov
pop
pusha
add
add
mov
int
mov
fistps
in
cmc
xor
test
add
jmp
aaa
inc
add
sub
add
add
xor
add
or
lock
inc
dec
fadds
add
or
mov
add
add
sub
add
add
xchg
scas
jmp
jnp
hlt
cmc
in
insl
in
jnp
notl
mov
mov
ficoms
je
cmp
push
sbb
add
add
sbb
clc
xor
in
ret
xchg
jo
push
push
loop
inc
bound
add
add
cs
xor
dec
lret
adc
js
jecxz
jno
add
add
ror
aad
int3
test
inc
insb
add
add
lcall
xchg
push
sahf
mov
push
mov
and
mov
add
sti
repnz
mov
add
les
mov
lret
xchg
sbb
jne
inc
add
add
and
sbb
dec
mov
out
aam
mov
add
loope
cmp
js
dec
lods
bound
outsl
fidivs
xor
jg
jl
outsb
add
in
leave
pusha
add
mov
sub
add
add
mov
addr16
int3
mov
add
add
cmp
jmp
pushf
xor
add
add
mov
adc
stc
fdivs
dec
pop
aaa
xchg
push
sbb
sti
cmpsb
xchg
dec
xchg
mov
xor
add
add
fnstsw
mov
int3
xchg
aam
add
add
push
mov
icebp
int3
and
mov
and
mov
mov
or
mov
xor
insb
add
add
add
jle
adc
add
add
sub
xchg
addr16
mov
push
ret
sub
fidivrs
pop
std
dec
xor
sbb
dec
shrl
inc
add
mov
stos
mov
cwtl
divl
jo
add
add
adc
push
data16
mov
packssdw
daa
testl
push
insb
add
add
fisubs
outsl
fcomp
cmp
xchg
mov
add
sub
add
add
add
add
and
mov
lret
sbb
std
xchg
jae
sub
cmp
cmpsb
mov
mov
mov
shrd
mov
mov
add
mov
lock
xchg
pop
ret
jmp
out
ja
jns
push
jnp
add
mov
add
fistpl
repz
test
ljmp
out
ret
add
sub
fiaddl
jae
add
add
fcoml
mov
mov
fistpl
popl
rorb
adc
leave
popa
in
and
add
add
mov
fsubrl
jmp
add
in
xchg
jo
mov
cmpsb
jl
push
xor
sbb
mov
lahf
bound
insb
add
data16
test
xchg
fwait
or
push
xor
add
add
gs
popa
ret
push
pusha
add
add
les
loop
out
mov
cltd
xor
je
adc
add
add
movsb
push
test
mov
imul
scas
fdivs
sub
sub
mov
popl
xchg
shll
mov
sbbl
js
sub
jmp
mov
dec
jge
jmp
sti
rcr
lret
xor
fldt
adc
add
add
and
add
inc
add
add
push
enter
mov
add
add
movsl
add
mov
cmp
les
repnz
scas
push
aaa
hlt
cmp
or
sarl
rcr
movsb
jp
sub
add
sarb
bound
cmpsl
mov
stc
and
rol
jb
pop
add
in
mov
lds
in
fcomps
add
add
add
aaa
mov
mov
test
jno
sub
mov
es
add
add
add
add
sbb
mov
add
xor
jo,pt
fidivl
test
imul
jae
sub
sub
add
add
add
mov
inc
movsb
mov
rcrl
data16
in
movsl
sub
add
add
push
and
addb
jae
inc
xchg
inc
int
rcr
ret
lahf
cltd
mov
les
add
add
stc
jns
je
xchg
pop
fisttps
mov
add
add
mov
adc
aam
iret
cli
cltd
add
add
add
add
sub
add
add
sbb
dec
jae
push
push
add
add
add
cmp
add
shrb
pop
scas
or
aaa
and
add
add
mov
add
dec
out
sahf
pop
aam
sub
mov
xor
xlat
xor
subl
mov
idivl
add
mov
sbb
add
stos
pop
mov
jecxz
adc
xchg
cmp
sub
add
movsl
loopne
imul
stos
push
or
xor
mov
in
push
nop
pop
mov
movsb
imul
add
out
or
add
cs
call
mov
add
fsts
jns
in
roll
mov
neg
and
add
add
mov
dec
cmc
sti
popf
ss
fnsave
aad
inc
sbb
sbb
fcoml
in
xchg
and
cli
sbb
add
dec
add
sub
mov
fwait
mov
add
out
aad
lea
mov
out
stos
dec
lea
popa
imul
or
sbb
jle
cld
leave
mov
cmpl
imul
out
mov
mov
sbb
push
or
add
add
and
add
sbb
popa
or
add
add
and
mov
dec
mov
adc
sahf
repz
jp
mov
add
add
add
mov
cmp
rolb
popf
mov
add
add
cli
jecxz
push
dec
add
add
add
pushf
scas
mov
aad
jp
dec
add
pushf
sbb
add
cmp
jmp
xchg
dec
sarb
in
lds
inc
dec
add
out
add
loope
outsb
and
cmp
les
mov
mov
jae
gs
inc
mov
mov
sbb
push
int3
daa
insl
lret
jle
inc
add
add
icebp
jecxz
adc
mov
push
in
and
mov
leave
or
insb
add
adc
jae
inc
dec
add
add
pop
stos
adcb
jns
dec
loop
ss
lahf
pop
scas
stos
ds
and
xchg
addb
negb
aam
push
sahf
dec
ja
stos
mov
sbb
aas
cmp
mov
sub
add
pop
mov
dec
add
add
push
loop
mov
pop
or
lret
ficomps
mov
imul
lock
loopne
push
cld
mov
in
or
xor
mov
lret
mull
add
add
lcall
mov
sub
add
add
test
or
mov
add
add
add
loop
sub
push
xor
insb
add
add
add
xchg
dec
rcrb
imul
mov
fisubs
test
xchg
nop
pcmpgtw
inc
cli
stc
mov
push
scas
aad
add
and
add
add
jno
insb
add
sbb
add
add
adc
cli
add
or
add
add
sti
mov
clc
sub
push
inc
mov
and
inc
push
push
stos
xchg
mov
mov
add
jmp
xor
add
mov
and
mov
mov
pop
rcll
mov
das
ret
test
add
xchg
add
add
add
out
and
push
cwtl
pop
hlt
add
mov
je
dec
out
push
push
push
sbb
xor
push
cmc
daa
popa
push
push
test
cmp
jge
hlt
dec
jecxz
outsl
test
rcrb
mov
inc
mov
inc
add
add
xchg
xor
and
xlat
lods
add
mov
int3
mov
lcall
push
push
in
xlat
ss
nop
outsl
cmpsb
mov
xchg
sbb
into
cmc
cmp
in
inc
sbb
mov
add
or
add
add
xor
inc
add
mov
xchg
mov
or
lcall
mov
sbb
mov
sti
test
les
mov
mov
add
mov
push
push
sub
adc
aas
jle
repz
sub
mov
mov
jecxz
mov
fidivs
jmp
lods
mov
mov
sbb
sub
mov
fnop
repz
imul
and
mov
mov
add
add
add
repz
jb
add
into
std
pop
cwtl
movsl
mov
sbb
ret
inc
xor
shll
jmp
push
push
out
add
push
jmp
arpl
out
ffree
movq
pop
scas
fistps
pop
repz
mov
mov
and
add
add
add
out
pop
xchg
xlat
faddp
add
loope
repz
outsl
into
cld
mov
xchg
xchg
inc
xchg
test
add
mov
ss
sbb
movsl
and
push
xor
inc
add
push
fmul
lock
dec
dec
add
call
rcrb
xchg
aad
push
jbe
mov
mov
out
jns
jl
push
xchg
int
or
add
add
test
pusha
add
add
outsb
mov
jecxz
loope
inc
popf
sti
cmp
sub
sbb
lods
inc
sbb
cmc
mov
ret
or
push
xchg
rcr
int
popa
lret
xor
ret
add
lret
mov
jbe
icebp
mov
add
stos
push
mov
lret
ficoml
arpl
hlt
stos
add
add
add
mov
scas
lcall
and
jecxz
lcall
popa
inc
push
cmp
add
inc
add
add
mov
out
arpl
divl
inc
add
mov
and
add
add
mov
xchg
jne
shrl
inc
int3
xchg
sbb
dec
jae
mov
sbb
movsb
or
fcmovu
data16
call
insb
add
add
insb
add
add
add
je
sub
add
add
flds
mov
sub
enter
jae
scas
jnp
mov
lahf
sarb
add
dec
cs
or
inc
xchg
or
mov
mov
mov
sbb
add
fidivrs
add
push
sbb
push
dec
scas
sahf
jno
add
scas
jae
in
xor
mov
sbb
lods
inc
sub
add
adc
cmp
aam
cld
je
pop
sti
push
loope
inc
and
popf
repz
addr16
leave
or
aad
adc
imul
mov
mov
mov
mov
ljmp
add
or
sub
jnp
mov
jl
sbb
add
add
iret
pop
aas
adc
sbb
jno
xor
mov
xorb
add
subl
repz
cmp
jg
adc
test
add
mov
lret
test
loope
xor
add
mov
pop
daa
lods
repnz
xchg
imul
pushf
loope
cmc
sbbb
das
inc
push
pop
stc
push
rcr
mov
imul
cwtl
cmp
mov
cmpb
add
add
xchg
inc
add
add
leave
push
call
add
shlb
adc
sbb
add
frstor
repnz
xor
xchg
jno
les
add
pop
sahf
scas
adc
jne
add
jae
cmp
mov
mov
jmp
add
add
arpl
mov
es
dec
mov
sbb
in
shll
mov
mov
int
adc
cmp
jle
lahf
push
jecxz
sub
add
add
add
or
cmp
cmpl
hlt
dec
add
add
mov
add
hlt
push
mov
adc
add
pop
dec
call
add
sti
ds
push
mov
les
repnz
mov
add
clc
mov
mov
sar
rolb
mov
out
ror
inc
out
xor
xchg
mov
or
incb
mov
push
dec
add
xchg
je
rclb
stos
cmp
jg
lds
fstl
jo,pt
aam
sahf
mov
hlt
sti
xchg
push
mov
push
sub
add
add
dec
or
scas
ljmp
xchg
add
cmpsb
jmp
lcall
add
mov
cmpb
or
fisubs
add
mov
xchg
mov
mov
pop
mov
test
pop
adc
jns
mov
add
add
add
inc
add
add
orb
inc
mov
nop
repz
sub
add
add
cmp
jne
jecxz
dec
lahf
pop
in
mov
movsl
test
and
test
scas
adc
in
jo
add
push
out
je
fidivrs
push
cs
cmp
dec
jns
sbb
or
add
add
pop
or
std
mov
ret
cmp
jle
mov
or
add
add
mov
iret
lahf
mov
out
cltd
push
jb
icebp
xor
addr16
and
inc
jae
mov
shll
xchg
jae
sub
out
lret
jbe
in
push
pusha
add
in
or
push
cmpsl
sub
adc
lds
jge
pop
out
xor
or
cmp
mov
scas
pop
xchg
mov
jo
add
sbb
iret
add
nop
or
das
cs
add
xor
mov
leave
call
add
icebp
test
imul
ja
outsl
adc
cmp
call
add
mov
movsl
stos
leave
setb
add
cld
test
data16
add
add
ret
outsb
scas
dec
ds
mov
js
push
shll
add
add
xor
add
scas
cmp
adc
mov
dec
cwtl
fcmovbe
xor
pusha
add
add
leave
testl
mov
or
pop
sub
add
add
add
add
pop
push
mov
sub
push
mov
cli
inc
pop
bt
ret
sti
mov
cmpsb
sbb
add
mov
jbe
les
jp
and
mov
sub
mov
jmp
jae
pop
inc
sbb
mov
test
pop
pop
push
test
add
mov
je
inc
pop
xchg
add
add
das
cmp
movsl
push
add
mov
inc
sti
and
mov
mov
imul
and
add
add
test
add
add
dec
add
add
jp
add
mov
subb
add
outsl
jg
xchg
bound
test
pop
xchg
mov
mov
inc
or
cmpsb
loope
std
sbb
int
ljmp
inc
add
sbb
lock
std
int
xchg
pop
cmpsl
jmp
loope
sbb
sbb
jae
mov
sbb
add
add
add
and
outsl
and
add
add
and
movl
sbb
sbb
pop
iret
xchg
pop
jnp
lock
xchg
push
test
add
add
pop
add
mov
jne
call
fcmovne
cmp
sbb
add
add
mov
jns
loope
jmp
add
sub
add
add
orl
add
add
mov
add
xchg
bound
jne
jmp
sbb
xchg
jle
and
mov
cmp
popa
out
inc
jo
lock
fwait
test
out
mov
mov
nop
cmp
adc
mov
mov
pop
imul
mov
enter
jae
inc
les
sub
or
sub
xor
mov
add
mov
mov
int3
icebp
jae
call
shlb
mov
aad
mov
xlat
sub
add
add
xchg
xchg
inc
add
jmp
xchg
scas
xsaveopt
nop
jmp
scas
push
inc
add
inc
add
add
add
movsl
cwtl
in
aam
mov
add
addr16
stos
mov
pop
loop
pop
pop
ss
or
mov
adc
xchg
clc
mov
pop
pop
lds
add
adc
rcrb
stos
sub
mov
push
adcb
sbb
xchg
sbb
add
bound
inc
jecxz
xchg
jp
iret
dec
add
add
outsl
xchg
mov
cmp
mov
jno
mov
dec
jl
or
add
add
in
fistpll
ficomps
pushl
xchg
icebp
pop
inc
ds
sbb
mov
add
bound
mov
cld
sbb
mov
adc
cltd
mov
pushf
jp
add
add
mov
stos
pop
push
jecxz
pop
xchg
mov
out
rclb
ja
cld
insl
pop
pop
or
jecxz
es
jnp
popf
cltd
in
sub
add
add
mov
push
pop
inc
add
sbb
add
add
xlat
clc
and
cli
jno
ror
aad
push
repz
mov
out
leave
dec
xchg
call
shll
inc
iret
push
push
cvtpi2ps
outsl
and
pop
sub
mov
xchg
jg
sahf
in
sti
sub
add
add
and
jns
sti
push
enter
ss
mov
and
and
xor
femms
push
cmpsl
lahf
pop
dec
aam
mov
inc
jl
outsb
mov
sarl
andl
enter
adc
push
xor
mov
pop
gs
lahf
push
fxch
outsl
fcoms
or
mov
mov
icebp
pop
enter
sbb
inc
nop
dec
cmp
fiadds
add
add
aas
popa
daa
xchg
add
add
divb
out
cltd
or
imul
pop
fisttpl
daa
cld
lods
jns
inc
mov
loop
inc
inc
xchg
icebp
and
test
mov
add
decb
aam
add
add
enter
jecxz
inc
sub
lret
adc
fbstp
inc
or
pop
or
add
add
add
add
add
mov
jno
mov
add
add
sbb
shlb
add
out
jp
sub
clc
pop
rep
pop
push
sbb
xchg
daa
stos
outsl
mov
stc
call
fnsave
and
frstor
cmc
scas
enter
and
add
add
push
inc
dec
pusha
add
out
xchg
clc
icebp
ljmp
mov
xor
add
cltd
inc
mov
xor
mov
dec
sbb
inc
fistps
fistpll
add
shll
or
mov
or
xor
mov
push
in
xor
ret
mov
in
and
add
add
lods
mov
xchg
or
ja
mov
int
leave
lret
add
mov
ljmp
rol
jb
addr16
add
add
cmpsl
push
and
sbb
add
add
cmp
mov
inc
popf
mov
add
add
dec
add
add
movsb
inc
add
add
jo
add
mov
xor
add
add
mov
leave
addr16
add
add
pop
or
push
mov
movsb
xlat
aas
mov
dec
mov
mov
cmp
pop
jno
pop
pop
sub
add
add
inc
and
add
add
fwait
jo
pushf
shrb
push
icebp
push
push
ljmp
pop
xor
mov
pop
sub
mov
dec
and
add
add
movsl
out
add
gs
mov
cmpl
add
xlat
rcr
cmpsb
hlt
mov
add
lahf
cmp
rclb
jl
push
push
out
pop
nop
inc
mov
repz
add
fwait
int
aam
std
arpl
in
stos
lods
imul
push
nop
repnz
gs
add
jo
mov
add
add
or
adc
pop
xorl
sahf
pop
inc
cld
jp
lahf
test
lock
outsb
stos
jle
jmp
xchg
sub
mov
daa
dec
push
out
pop
sti
sbb
mov
sbb
xchg
fsubrs
add
fisubrl
mov
cmpb
xor
movsb
das
std
movsb
jmp
jb
div
mov
out
notl
sub
stos
add
add
in
insb
add
add
mov
aad
adc
inc
lret
imul
mov
inc
mov
add
sahf
inc
loope
add
insl
jo
vpavgw
pop
xor
add
jp
and
mov
in
dec
add
add
add
sahf
fidivs
mov
dec
pop
mov
insb
add
xchg
add
add
ja
icebp
xlat
mov
lret
in
fcoml
add
je
pop
int
sbb
cmc
mov
xchg
int3
bts
stos
lods
cs
es
sahf
mov
pop
outsb
or
mov
add
jbe
jecxz
jmp
adc
add
add
xchg
aad
hlt
pushf
iret
int
clc
sbb
add
add
rcrl
cmc
std
pop
aas
pop
pop
mov
mov
shr
push
pop
inc
cli
es
int
pop
xchg
dec
add
add
push
sti
add
ret
outsl
pop
les
cs
repnz
shrb
add
mov
sbb
adc
sahf
shlb
adcl
jb
hlt
push
shrl
call
add
icebp
mov
add
sbb
add
add
dec
add
add
cld
aam
sbb
test
out
jge
add
mov
inc
xor
mov
fiadds
jl
jmp
add
icebp
lret
out
mov
push
jne
adc
jbe
sub
add
add
add
pop
mov
insb
add
out
into
mov
ret
pop
out
sbb
aad
add
sbb
mov
mov
cmp
add
add
mull
jg
sahf
lret
mov
sub
mov
jno
orl
or
add
add
sub
add
add
add
add
ror
imul
xchg
ror
fstpl
jae
sti
enter
push
in
dec
add
add
jo
adc
mov
inc
in
test
popa
rclb
fistpll
inc
scas
addl
add
add
mov
jno
aam
jne
outsb
dec
shlb
add
add
pop
mov
std
cmpsl
test
outsl
xchg
jge
or
loopne
in
cmc
iret
es
stc
hlt
into
je
pop
les
std
scas
fldcw
lods
inc
mov
fadds
push
sub
mov
loopne
dec
add
push
mov
out
dec
sbb
pop
mov
pushf
fisttpll
add
add
add
push
jo
stos
or
mov
jp
jmp
sbb
xor
dec
xor
pop
inc
outsl
fildll
mov
sahf
dec
jo
cmp
pop
pop
cmp
xor
loop
fst
push
dec
add
data16
mov
test
mov
data16
fcomps
add
add
pusha
add
add
push
rcll
out
mov
aam
add
xchg
mov
test
mov
sbb
dec
lahf
jno
pop
mulb
test
add
add
mov
cmp
add
add
enter
stos
pop
pop
clc
addb
add
add
mov
add
dec
icebp
push
mov
mov
mov
ja
bound
movsb
shlb
push
adc
xchg
sbb
out
xor
adc
notb
int
push
cli
aad
mov
rcrb
add
jno
data16
aad
inc
fwait
adc
aam
mov
add
hlt
jl
xchg
loope
std
mov
fst
icebp
rcr
or
rorl
outsl
shr
push
xchg
arpl
add
cmp
movsl
arpl
add
jp
xor
pop
mov
mov
dec
cmpsb
movsl
pop
lcall
mov
add
cld
mov
lock
inc
xor
adc
dec
and
add
add
add
add
add
xor
lds
jnp
push
lret
xor
je
sbb
popa
arpl
jecxz
or
mov
push
mov
pop
push
pop
mov
mov
or
cwtl
mov
xor
add
add
mov
popa
in
bound
cli
je
sbb
add
mov
lcall
add
jp
xchg
add
pop
jnp
inc
in
mov
jnp
lret
add
add
mov
mov
jne
int3
lret
sahf
jecxz
push
xchg
scas
inc
or
mov
add
add
rorb
add
fidivs
xchg
jle
cltd
imul
xchg
jge
xchg
aad
push
mov
add
cmp
sarl
fisttps
shrb
stos
outsl
pop
xchg
sarl
xorl
jb
push
jo
fnstenv
add
add
leave
pop
lea
add
add
sbb
add
add
dec
test
and
in
and
push
jmp
in
mov
pop
dec
call
and
mov
add
rcl
cltd
mov
jno
js
jbe
fstpl
jns
decb
add
add
gs
mov
lock
ret
add
add
xchg
cmpsb
push
mov
cmp
fnstcw
inc
cmpsb
jae
add
add
into
aas
dec
decb
add
cwtl
push
mov
dec
and
fcoml
add
gs
dec
movsb
js
add
add
adc
dec
dec
mov
rclb
fwait
mov
add
add
adc
sbb
sub
or
mov
ja
sbb
les
sub
mov
sbb
add
add
shrl
mov
faddl
outsb
and
stos
out
or
jno
mov
jp
inc
add
ja
insl
cltd
leave
mov
add
add
fwait
out
xor
mov
insl
mov
subb
insl
lret
jl
aad
jl
popa
cmp
jne
lods
imul
and
call
popa
daa
add
mov
add
scas
movsb
int
sbb
jae
or
add
cmp
add
iret
xchg
in
dec
popf
sbb
mov
pop
mov
call
add
inc
add
add
loope
sbb
scas
adc
icebp
xlat
in
dec
add
add
pop
arpl
add
push
sub
add
add
add
add
jge
jmp
jmp
sbb
push
and
outsb
bound
inc
cmc
test
test
push
mov
lock
shr
decb
mov
out
pusha
add
add
mov
icebp
mov
sub
mov
add
mov
jle
clc
mov
mov
mov
in
xchg
ffree
js
and
mov
cmp
imul
icebp
add
mov
xor
mov
inc
fldcw
add
add
addr16
cld
jle
adc
lret
inc
and
add
sahf
daa
inc
add
add
jb
cmp
and
scas
std
enter
hlt
ss
ds
sbb
dec
rcrl
add
imul
lods
push
add
movsb
call
loopne
add
adc
push
pop
js
gs
xchg
dec
hlt
cli
mov
mov
xchg
das
xchg
sarb
pop
repz
xor
pop
jbe
pusha
add
add
pop
cmp
mov
fimull
mov
sub
add
dec
cmp
lea
out
repnz
out
xchg
cltd
pop
ds
jp
rclb
shll
add
add
mov
add
js
lea
rorl
add
mov
in
pushf
les
or
mov
sti
cmp
add
sbb
and
add
add
add
fdivr
sbb
inc
add
imul
test
xchg
insl
leave
pop
test
mov
or
add
add
push
ret
cmc
loopne
push
std
mov
fsubrl
scas
inc
push
xor
add
fisubrs
jae
ret
mov
mov
pop
mov
xchg
dec
call
adc
cmp
sub
int
jno
insb
add
add
add
add
add
pop
sahf
mov
mov
push
and
xchg
addb
xor
cmp
mov
sbb
add
add
add
sti
sbb
mov
jecxz
stos
ret
out
add
and
mov
pop
dec
pop
push
jg
mov
loope
push
ja
jl
scas
push
fwait
in
pushf
push
mov
add
add
add
mov
add
test
mov
add
pop
or
add
add
sahf
pop
mov
sbb
or
mov
aaa
jmp
add
jb
loope
and
cmc
test
mov
dec
jp
pusha
add
add
int
in
sbb
add
pop
lock
add
add
jmp
mov
adc
js
stos
cwtl
jg
scas
test
mov
and
add
add
jo
add
mov
lods
addr16
lock
frstor
or
mov
pop
iret
mov
xchg
nop
movsb
cs
jnp
aad
mov
lret
andb
filds
jnp
and
add
add
test
jo
or
sub
mov
adc
add
adc
push
bound
ja
pop
nop
cmp
push
fisttps
push
jae
or
daa
mov
sub
xlat
pusha
add
add
xchg
add
mov
stos
cmp
cmpsl
xor
jns
dec
xchg
xor
test
roll
sbb
lret
adcb
push
les
mov
ss
movlps
fld
inc
orb
pop
mov
dec
add
lock
jbe
out
add
pushf
pop
mov
dec
seta
int3
adc
xchg
int
push
xor
fcoms
out
or
inc
out
add
add
add
addl
inc
push
mov
mov
add
je
xchg
mov
inc
out
clc
cwtl
inc
mov
adc
ss
xor
add
loope
imul
add
call
mov
jne
sarb
imul
push
sbb
imul
add
dec
add
add
jecxz
std
les
and
mov
lahf
arpl
movsl
in
sub
cmp
push
icebp
push
fldenv
add
iret
imul
jmp
hlt
push
outsb
test
cmp
add
add
add
push
hlt
movsl
ljmp
cmp
adc
loop
pop
mov
jno
lret
repnz
movsl
mov
lret
leave
sub
shlb
test
fsubl
pushf
xchg
push
aam
dec
xchg
mov
repnz
xor
xor
mov
sub
mov
clc
lahf
cld
aaa
dec
icebp
and
add
lods
or
add
add
das
xlat
cwtl
lahf
xor
shl
aaa
in
and
push
js
pop
and
add
add
cmp
addb
xor
inc
add
mov
add
push
movsb
cmc
mov
dec
setne
sbb
mov
push
adc
add
adc
cmp
mov
gs
mov
mov
shlb
mov
mov
cmp
add
add
out
adc
repnz
shlb
movl
icebp
inc
cmpsb
mov
mov
pop
jmp
dec
mul
jl
insb
add
add
push
adc
jle
inc
ret
and
xchg
sub
add
add
loop
ud2
mov
cli
sti
cli
test
mov
jle
imul
mov
mov
add
add
add
mov
aaa
inc
add
nop
mov
and
in
add
mov
dec
adc
add
inc
out
call
pop
out
lret
and
xchg
jge
in
outsb
ret
inc
repnz
lds
sbb
cmp
rorb
subl
fiadds
test
dec
xor
or
add
add
fistps
imul
add
xor
repnz
add
add
ja
mov
test
and
add
test
sub
mov
lret
inc
add
in
test
loope
lods
out
cmp
dec
add
dec
add
add
mov
mov
mov
add
pop
jl
sti
fptan
es
inc
dec
add
add
faddp
xchg
stc
xor
dec
sub
das
xchg
cmp
dec
jle
repnz
lods
jno
cwtl
cmp
and
sub
add
add
aad
or
lahf
and
xor
pop
cmc
bound
test
inc
pop
mov
ret
jb
sbb
cmp
jo
add
mov
add
cld
mov
fucom
or
sub
add
add
sti
xlat
cmpsb
sarb
mov
out
inc
add
pop
int3
test
rclb
enter
fsts
mov
dec
xlat
and
enter
cmc
mov
loopne
cltd
add
mov
jns
outsl
repz
push
xlat
ror
bound
jecxz
popf
push
add
add
repz
pop
les
pop
sub
adc
fiadds
mov
insl
sub
add
add
cld
lea
fnstenv
xchg
call
xchg
dec
dec
xchg
push
add
mov
test
add
daa
fwait
mov
pop
push
out
xor
daa
inc
add
addb
add
fdivrl
add
add
mov
mov
and
mov
xor
jmp
dec
fnstcw
out
aaa
push
or
gs
sub
add
hlt
and
add
add
jns
add
adc
cltd
fisttps
rclb
sub
repnz
out
cld
loope
out
lods
es
in
loop
xchg
sbb
pop
fisubrl
cmp
popa
jg
sub
mov
cmpsb
test
cmp
icebp
mov
out
mov
add
sbb
shrl
add
add
jmp
mov
outsb
dec
leave
jg
aam
out
adcl
mov
addr16
pop
stos
lea
gs
sub
mov
mov
aam
add
insl
fstps
add
daa
ret
add
add
adcb
pop
mov
add
pop
hlt
adcl
add
adc
add
rclb
inc
imul
inc
cs
fldenv
add
pmuludq
fisubrl
fwait
push
mov
mov
add
add
aad
jae
add
add
xor
jl
cmpsl
and
mov
add
add
sbb
adc
xor
mov
cs
mov
cmp
mov
and
pop
ja
rcrb
add
add
jg
push
mov
insl
flds
xlat
mov
lods
xchg
mov
sbb
add
cmp
fwait
sahf
fidivrs
imul
jecxz
and
mov
leave
xor
scas
sub
cmc
inc
xchg
and
jb
adc
mov
out
add
add
jbe
cmp
mov
cwtl
test
mov
add
add
test
fists
lock
cmp
add
add
sub
add
add
test
movsl
out
cld
dec
orl
pop
fnstcw
outsb
outsl
mov
icebp
mov
inc
mov
sbb
aaa
xchg
inc
das
out
sbb
lds
dec
jo
push
out
sub
mov
adc
push
cmp
js
mov
fwait
scas
mov
dec
jmp
mov
out
sahf
ja
iret
rorl
mov
jle
add
add
test
gs
add
sub
add
add
mov
mov
insl
jmp
mov
add
and
push
in
add
mov
push
fwait
add
loop
lods
mov
out
inc
fwait
jae
jg
das
adc
sub
sub
mov
pop
ds
insb
add
add
xorl
add
shlb
iret
xchg
iret
inc
mov
sub
add
add
push
shl
mov
mov
mov
fwait
inc
in
add
and
mov
and
and
add
sahf
xchg
jne
out
inc
add
add
sbb
imul
sbb
cmpb
popa
jb
add
mov
add
in
repnz
loopne
sti
adc
mov
sbb
xchg
fildl
or
add
add
popa
jbe
mov
mov
mov
hlt
jae
out
lahf
inc
outsb
lods
mov
pop
sarl
sbb
imul
setns
push
rcrl
add
jle
repz
insb
add
gs
mov
pop
mov
add
jp
ud2
outsb
mov
mov
mov
mov
push
mov
enter
xchg
add
dec
lcall
push
rorb
dec
into
push
cmp
add
dec
cmc
cmp
pop
imul
xchg
cmpl
add
push
lret
cltd
ljmp
inc
ss
add
add
mov
test
lods
inc
dec
adc
lret
cwtl
inc
add
add
pop
repz
sbb
out
add
add
ret
add
add
or
add
add
xor
dec
add
add
add
add
add
mov
fisttps
adc
and
mov
mov
jo
sub
add
add
cmp
popl
int
imul
add
add
push
mov
insl
aam
mov
mov
or
add
add
mov
add
add
hlt
orb
add
add
mov
out
rcll
jmp
add
mov
dec
add
add
aaa
xchg
jle
gs
mov
adc
mov
gs
mov
cmp
add
add
mov
cmp
mov
add
add
pusha
add
pusha
add
loopne
xchg
adc
mov
mov
xor
adc
ja
pop
push
fisttps
nop
test
sahf
test
jne
stos
pop
cwtl
scas
xchg
jno
adc
ret
inc
fldcw
inc
test
fwait
push
xchg
push
test
in
mov
and
add
push
add
add
add
sub
add
add
xor
mov
jle
or
add
add
sub
inc
add
add
add
xor
out
sbb
push
hlt
popf
lea
lock
adc
add
pop
sub
add
movsb
int3
mov
mov
inc
ret
mov
push
es
and
test
add
push
inc
pushf
push
dec
arpl
add
ljmp
add
rol
mov
xor
mov
sti
addb
add
leave
jnp
out
or
mov
sbb
dec
dec
mov
mov
aaa
add
aad
lcall
mov
jne
jnp
cmc
push
int
scas
xchg
mov
call
imul
xchg
add
add
add
sti
inc
cmp
sbb
fldt
add
add
flds
popf
sbb
push
out
movsb
mov
es
arpl
repnz
fwait
and
xor
add
adc
or
xchg
aam
push
sub
mov
insb
add
add
add
mov
out
pop
rep
sbb
add
add
in
xchg
mov
jae
pop
sub
pop
xchg
faddp
mov
mov
lea
mov
xor
fildll
add
sahf
test
ljmp
sbb
cmc
jge
fdiv
xchg
jecxz
aas
bswap
ds
jno
cmp
xchg
pop
orl
mov
xchg
lods
jge
mov
add
popa
mov
add
rcr
pusha
add
sub
mov
jg
xor
add
add
shrd
mov
add
mov
cmp
cmp
mov
movsb
lahf
cmp
push
adc
add
add
add
mov
jae
les
pop
push
addr16
scas
mov
in
ljmp
pop
sbb
add
sub
add
add
cmp
out
cwtl
sbb
push
fldenv
xchg
in
cmpsb
test
cmc
enter
add
add
dec
add
add
bound
push
jle
fxch
bound
xor
clc
aaa
ja
sub
inc
lfs
outsb
jmp
in
test
push
jp
repz
jno
cmp
sub
test
add
add
pop
xchg
outsl
inc
popa
mov
mov
cmpsl
jae
dec
push
in
sbbb
lock
inc
mov
dec
inc
add
push
aas
incb
outsl
test
js
sahf
and
add
add
xchg
or
add
add
pop
imulb
mov
movsb
popf
mov
add
add
jno
out
ret
sbb
sbb
and
mov
lock
jnp
nop
fcmovnb
xor
clc
add
and
js
ficoms
leave
dec
je
xchg
add
add
popw
stos
test
das
jb
inc
add
add
xor
pop
sub
add
add
lret
jl
ljmp
stc
pop
mov
add
pop
xchg
pop
inc
or
mov
xchg
repnz
xor
add
sub
inc
out
popf
jnp
add
add
repz
jb
enter
dec
lcall
mov
inc
lret
iret
lods
ret
add
aas
stos
lahf
inc
mov
and
or
ficoms
clc
addr16
repz
mov
jnp
mov
and
mov
mulb
lock
fsubs
cmp
xchg
lret
add
mov
xor
dec
add
xor
adc
mov
add
add
add
add
cmpsl
das
dec
gs
jle
jnp
inc
pop
insl
sahf
pop
and
add
add
sbb
mov
push
mov
push
sbb
inc
mov
lock
and
pop
out
xor
hlt
aaa
and
mov
je
inc
sarb
inc
in
add
lahf
ret
add
add
xchg
jmp
jmp
add
add
xchg
jecxz
add
inc
mov
insb
add
sbb
pop
jmp
mov
cmp
or
mov
lods
mov
aas
sbb
and
cmc
sub
inc
test
fisttpl
pop
mov
mull
jge
push
mov
loope
dec
add
add
out
mov
jae
loop
fcmovb
lcall
or
push
out
sub
push
pop
pushf
xor
lcall
mov
test
add
xor
fistl
mov
jb
fdivl
xchg
cltd
or
add
add
lret
pop
paddb
and
add
add
xor
stc
mov
movsb
testl
mov
outsb
sbb
pushf
sbb
aam
bsr
and
jb
scas
aaa
jge
pop
aaa
adc
xchg
into
pop
dec
or
add
mov
pop
push
mov
gs
mov
test
je
out
scas
dec
xchg
test
sti
jo
mov
nop
pop
es
daa
into
push
sti
data16
mov
add
add
mov
add
push
sub
add
add
ljmp
divb
add
xchg
pop
into
push
pop
imul
out
imul
movsb
scas
mov
sbb
shlb
dec
dec
test
or
add
add
rcrb
mov
pushl
cs
clc
lcall
dec
mov
pop
or
imul
insl
outsl
adc
add
add
add
adc
mov
pushf
jbe
push
jne
add
mov
add
inc
mov
lret
sti
repz
test
cmp
out
pop
nop
cmp
cmp
mov
pop
call
mov
push
inc
add
add
das
insb
add
and
mov
loope
popf
je
rcrb
mov
inc
loope
or
mov
add
add
popa
dec
or
jl
cmp
fst
xlat
sarl
fnstsw
jle
imulb
inc
fwait
mov
js
addb
cmp
or
xchg
int
loope
and
mov
data16
xchg
loopne
into
mov
add
mov
daa
push
dec
lret
cmp
addr16
bound
add
orb
jp
lock
add
add
lahf
movsb
and
sbb
inc
add
shlb
xchg
pop
adc
out
leave
ja
subb
insl
xor
lods
xchg
push
sti
xchg
xchg
dec
dec
test
xor
sbb
int
mov
mov
xchg
mov
call
push
lock
ret
mov
in
inc
add
jae
sarb
add
pop
cmc
push
push
je
icebp
jmp
dec
add
mov
lods
call
fwait
inc
and
jb
lret
call
sbb
add
lea
inc
jecxz
push
and
sbb
test
add
dec
add
sbb
int3
and
pushf
add
mov
stc
push
std
cwtl
lret
mov
xchg
outsb
push
ficomps
or
sbb
sbb
test
sahf
adc
mov
lret
mov
add
add
push
mov
and
mov
int3
sbb
pop
xchg
mov
frstor
adc
add
add
outsl
mov
mov
call
jge
add
add
ret
sbb
mov
add
add
add
inc
add
add
add
mov
mov
call
dec
push
inc
cli
ret
gs
cs
loop
outsl
sub
add
xchg
cmp
mov
add
add
jae
push
faddl
fldenv
dec
insl
sbb
paddsw
and
cmp
ret
add
mov
call
ljmp
pop
and
mov
icebp
cmp
add
addl
xchg
int3
jg
inc
add
mov
inc
jg
orl
adc
jg
and
add
add
jnp
push
xchg
jle
sub
inc
add
add
push
movb
add
popf
jbe
ret
pop
inc
gs
mov
in
out
imul
stos
ja
shlb
jmp
jns
xchg
lahf
cs
movsl
data16
jecxz
mov
add
imul
sbb
pop
jnp
mov
lret
mov
fnstsw
add
add
add
or
add
ja
in
mov
mov
loop
popf
push
jge
xor
ficomps
jb
rorb
add
add
arpl
add
out
test
adc
adcb
repnz
xchg
add
mov
divl
mov
add
jmp
leave
xor
mov
xchg
xor
adc
xchg
pop
lods
push
andl
mov
add
add
lea
pop
jbe
mov
push
inc
inc
add
add
push
ljmp
jae
add
add
daa
mov
pushf
cmpsl
inc
sbb
and
sbb
std
sbb
dec
push
fstpl
loopne
pushf
sbb
add
out
pusha
add
add
loopne
jmp
fistpl
int3
sbb
add
fnstenv
mov
das
inc
adc
adc
push
or
add
add
ja
dec
repz
adc
lret
std
xor
shll
add
mov
mov
test
rcl
add
add
jp
jge
add
add
add
mov
dec
mov
add
and
dec
add
cmp
jns
sarl
sub
jg
les
es
mov
andb
inc
aam
xor
pop
xchg
lretw
pop
add
mov
jecxz
cmp
lds
adc
pop
shr
inc
or
lods
stc
cmc
sbbl
mov
add
add
sarl
cmc
push
inc
call
fidivs
adc
mov
xchg
scas
or
shrb
add
adc
cli
cmpsl
hlt
pop
push
push
loope
shrb
bound
jbe
adc
gs
mov
mov
jne
roll
ljmp
push
in
jecxz
cmp
add
mov
pop
dec
add
add
jecxz
or
addr16
ss
add
add
pop
xchg
lea
shr
sarb
mov
mov
add
imul
sbb
cmp
ja
mov
add
iret
enter
fwait
pop
inc
add
shlb
inc
popa
test
jp
mov
jne
mov
inc
add
add
add
xor
push
dec
lds
les
stos
mov
mov
out
out
lock
mov
cs
dec
push
add
add
xlat
pop
and
mov
inc
movsl
inc
mov
cmc
out
push
and
add
add
xchg
out
lret
pusha
add
lret
jle
push
mov
mov
add
rcl
outsb
aam
cltd
pop
xor
jae
adc
mov
fiadds
jecxz
idiv
imul
add
add
mov
adc
add
mov
mov
mov
rcll
xorb
xlat
loopne
shlb
mov
andb
nop
sub
mov
imul
dec
pop
and
mov
add
repnz
add
test
adc
test
ja
jno
sub
add
add
xor
push
stos
inc
push
inc
scas
das
fnstsw
aam
cmpsb
add
add
add
add
loope
fscale
imulb
into
jns
jmp
scas
lods
jns
mov
add
add
enter
adc
loope
loopne
jno
inc
add
add
mov
cwtl
jbe
int3
movsb
enter
xor
lret
enter
outsl
dec
add
add
inc
pop
addr16
sbb
popa
push
int3
scas
adc
sbb
inc
push
fisubrs
add
add
jg
jo
pusha
add
add
outsb
mov
or
scas
fisubs
retw
mov
insb
add
add
ror
and
shll
pop
inc
fadds
add
add
cmp
add
add
push
les
lahf
call
js
lret
mov
jp
in
cmp
hlt
add
fcomp
mov
add
add
popa
sub
fnstcw
repz
out
adcb
sbb
adc
add
add
pop
mov
std
stc
out
bound
test
dec
inc
dec
cmp
jb
loopne
int3
adc
fnstcw
call
sub
add
inc
sub
in
xor
or
leave
cmpsb
call
add
mov
inc
pop
adc
jbe
std
dec
add
das
lea
cmp
hlt
out
test
add
add
mov
or
mov
rolb
xchg
test
pop
mov
jmp
pop
shlb
add
dec
add
add
sub
mov
mov
add
xchg
push
sbb
dec
shll
pop
pop
stos
dec
and
adc
xchg
dec
add
add
and
mov
adc
add
add
sbb
add
loop
dec
vpsrlw
xchg
scas
cli
xlat
mov
xlat
push
movsb
loop
push
mov
add
add
repnz
fldt
xlat
lret
add
add
add
xchg
mov
int
sub
in
imul
add
push
inc
out
lret
jle
adc
dec
cmp
push
dec
insb
add
add
aad
popl
add
add
loopne
cmp
lods
dec
outsb
bswap
inc
add
add
ret
in
adc
insb
add
inc
push
mov
mov
mov
lock
and
push
mov
add
add
mov
loop
pop
push
fstps
xchg
aam
movl
sbb
inc
leave
insb
add
lret
dec
shll
out
and
btr
sbb
inc
ret
cmc
lods
or
mov
in
int
and
adc
xchg
add
dec
xor
adc
cmpl
add
dec
add
clc
adc
test
and
mov
pop
lcall
push
dec
loopne
add
add
mov
lahf
sub
cld
xor
mov
add
out
ds
xchg
or
mov
xchg
mov
add
sahf
adc
gs
cmpsb
insl
fstpt
lock
jne
test
inc
inc
inc
add
add
inc
sbb
pop
jmp
add
pop
cmpsl
mov
add
dec
adcl
aaa
lods
ja
dec
cmp
insb
add
add
repnz
add
add
mov
stc
and
add
add
pushf
push
add
aas
test
iret
fisubl
add
jne
pop
bound
rcrb
add
call
add
cld
ret
cld
cmp
push
push
cmpsb
mov
lds
or
add
add
add
dec
pop
mov
dec
arpl
add
push
sub
add
add
mov
lret
mov
and
push
add
mov
xchg
repz
xchg
test
sbb
add
mov
mov
add
jle
popa
into
enter
xchg
or
add
add
scas
xchg
gs
popf
add
add
adc
cmc
daa
repnz
cmp
xchg
add
add
in
push
xor
dec
les
sbb
jl
movsb
lods
fiaddl
inc
add
fdivp
popa
test
sahf
xchg
mov
repnz
adc
mov
xor
movsb
jae
or
ret
and
lret
test
xchg
and
jp
add
add
add
shll
add
add
inc
sub
mov
mov
xor
add
mov
ror
pushf
rorl
add
mov
rcll
nop
outsl
add
mov
add
mov
pop
std
imul
xchg
mov
fstps
add
xchg
pop
adc
insb
add
insb
add
add
iret
xchg
ds
stos
into
pop
cwtl
aas
pop
sbb
mov
mov
rorl
insb
add
fstps
add
es
inc
jmp
arpl
add
test
lcall
xchg
or
add
add
xchg
dec
jecxz
xchg
mov
pop
cmpsb
dec
inc
lods
cltd
sub
add
aad
gs
add
add
loope
push
stos
mov
xchg
adc
stos
fwait
or
push
push
push
cld
jae
cmpsb
in
fwait
push
outsb
xchg
mov
add
add
and
add
add
fcomi
pop
sarb
insl
inc
sub
xor
scas
inc
add
add
int3
jns,pt
mov
and
pop
jmp
loope
into
mov
xchg
pop
mov
add
add
mov
and
push
movsl
aad
push
mov
gs
imul
mov
lds
es
popf
rorl
scas
xor
mov
repnz
mov
sti
xchg
mov
stos
out
cmp
xchg
scas
or
mov
xchg
jmp
add
gs
adc
mov
addr16
leave
into
mov
push
mov
mov
mov
mov
mov
mov
xorb
ljmp
leave
js
adc
mov
mov
jne
add
xchg
jns
inc
jne
mov
xor
jbe
jmp
rcrl
add
add
jbe
push
nop
push
testl
outsl
clc
xor
pop
decl
add
pusha
add
loop
push
jle
mov
add
add
mov
push
popf
cmp
add
mov
sbb
arpl
lret
test
sub
mov
push
sub
jnp
xchg
ret
mov
dec
scas
pop
leave
push
in
mov
dec
jns
jge
or
pop
jb
lret
insb
add
add
jl
int
scas
xor
and
mov
add
mov
je
in
inc
sub
stos
sub
add
add
xor
add
jno
lret
loope
add
stos
ss
mov
push
add
mov
mov
pop
push
jnp
mov
out
add
mov
aam
subl
mov
inc
call
ficoml
int
mov
in
rcll
cli
incb
cld
inc
je
std
imul
mov
cpuid
pop
push
enter
lret
inc
and
sub
add
stos
and
inc
mov
mov
pop
out
aas
test
jge
scas
push
sbb
int
leave
fmuls
pop
jo
lea
push
imul
cli
or
mov
mov
cmc
addr16
sti
aaa
mov
test
into
xchg
sub
mov
movsb
add
lcall
mov
add
add
hlt
lret
int
js
loopne
negl
push
mov
dec
cld
pop
lcall
sub
add
add
add
lahf
dec
das
mov
std
mov
notl
mov
sub
add
mov
jg
hlt
imul
xorb
mov
lods
dec
add
add
sub
inc
fsubl
insl
stos
decb
add
incb
loope
jp
xchg
cwtl
or
cmc
aam
add
test
mov
jne
sti
pop
or
add
add
inc
add
jo
cmp
xchg
lret
mov
jge
sub
add
add
xor
decb
add
add
jl
fsubl
vphaddubw
mov
push
jmp
push
and
add
add
in
sbb
xchg
or
add
add
daa
add
and
inc
fidivrs
ficoms
xorb
sub
int
ja
addr16
adc
add
jg
in
aad
xchg
in
jmp
ficompl
inc
je
int3
mov
fidivrs
fwait
movl
cltd
jbe
aad
pop
push
jb
nop
xchg
sub
add
add
neg
lea
bound
adc
add
jecxz
inc
add
rclb
in
adc
xchg
mov
pop
xchg
mov
add
push
mov
inc
xchg
jp
add
add
add
lcall
xor
cmp
sbb
mov
sbb
jl
sub
in
imull
ja
sar
fnsave
inc
xor
adc
fadds
sbb
and
vpmaddwd
data16
mov
push
sbb
popf
lock
movsb
out
add
add
fisttpl
mov
enter
and
add
add
add
sbb
jg
jmp
repz
pop
or
mov
pushf
cmp
jb
and
add
add
add
add
insl
jle
add
cmp
jge
popa
jge
lods
and
out
jge
xorb
sub
inc
jb
ljmp
lret
in
decb
pop
movb
test
and
mov
jne
mov
push
faddl
add
add
faddl
pslld
push
or
enter
test
and
add
fsubs
add
add
push
int
pop
scas
test
mov
aaa
jg
push
push
sub
mov
xchg
scas
sub
stc
mov
xor
cmc
lock
sub
xchg
sbb
scas
add
mov
out
das
fbld
jg
jl
lcall
adc
lods
std
mov
lds
mov
xchg
sbb
movsb
out
push
sbb
mov
orl
sahf
outsb
push
or
lods
add
cmp
pop
sbb
cmc
inc
into
mov
ret
cmc
stos
subb
les
shl
cmp
mov
pop
sbb
mov
add
push
ss
imull
aad
into
outsl
mov
add
add
add
add
hlt
bound
sbb
int3
lea
cs
add
push
ret
loope
push
std
and
add
add
add
fwait
push
pop
ret
add
add
mov
dec
adc
mov
adc
fcmovnu
cld
loopne
sbb
xchg
sub
popa
xor
adc
pop
int3
sub
jne
ja
inc
push
xor
leave
mov
mov
out
push
or
mov
inc
imull
dec
cmc
in
xchg
jge
xor
inc
mov
add
dec
dec
push
shrb
push
mov
mov
pop
in
cmp
push
and
sub
leave
pop
jl
sbbl
clc
pop
add
mov
mov
jno
mov
popf
xor
mov
mov
int
sub
sbb
pop
popf
lock
pop
imul
jp
mov
add
add
add
add
loopne
inc
out
shlb
add
xchg
mov
add
add
add
jo
xor
and
mov
cmp
add
sub
inc
cld
push
aas
outsl
lods
repz
xchg
in
adc
pop
and
sbb
out
add
add
xchg
out
lretw
je
es
xchg
int3
or
xchg
adc
cmp
push
dec
and
mov
dec
addr16
in
xor
mov
push
pushf
sub
dec
add
add
lret
jl
add
std
mov
and
and
mov
push
sbb
mov
lahf
sub
add
add
push
insb
add
add
mov
lahf
pop
lret
test
mov
mov
mov
out
and
add
add
pop
inc
in
sbb
aad
mov
push
or
fldenv
addr16
nop
mov
cmp
js
loopne
pop
ljmp
add
or
addr16
adc
test
or
add
add
add
xchg
cltd
bound
jg
jae
addr16
inc
sub
lret
xor
insb
add
gs
mov
jmp
jmp
dec
fstp
cmpsl
mov
mov
shl
mov
xchg
or
mov
cmp
add
aam
jae
push
fiadds
mov
jno
dec
nop
outsl
pop
fsubp
icebp
sub
sti
stc
and
add
add
xchg
out
add
jl
push
insl
mov
push
test
mov
mulb
adc
add
pop
inc
popf
mov
sub
imul
sub
add
add
pusha
add
push
std
cmp
add
sub
mov
add
add
xchg
out
xchg
add
add
add
cwtl
push
jl
aas
pushf
or
add
add
je
and
sub
add
add
add
lods
repz
scas
xchg
jmp
aas
push
fsubrp
es
and
lds
push
shlb
daa
fistpll
fisttps
stc
enter
pop
andb
pop
dec
inc
add
add
repz
inc
add
add
fmull
stc
frstor
mov
pop
outsl
cltd
mov
jmp
jbe
shll
inc
rcrb
cmp
subb
sub
adc
sti
add
mov
jg
aas
aas
xor
mov
dec
cltd
fucom
jge
or
jno
icebp
add
mov
daa
cmc
out
cmpsl
inc
add
add
loopne
add
imul
add
addr16
pushl
xchg
or
mov
popf
dec
cld
jmp
add
add
lock
imul
add
push
pop
inc
adc
es
add
dec
add
add
sbb
pop
ret
ja
xor
inc
add
mov
fbld
add
mov
cld
xor
push
dec
clc
adc
lcall
xor
add
dec
dec
dec
add
sub
xchg
add
mov
inc
jbe
add
add
mov
adc
data16
mov
jbe
xorb
jmp
pop
sub
lock
ds
into
inc
pop
push
sub
mov
mov
push
loope
add
add
in
or
jl
jae
test
mov
fprem
aad
std
cmp
xlat
push
aas
loopne
inc
push
mov
cld
mov
jmp
adc
add
ds
test
leave
xor
add
add
loopne
add
jae
sub
cmp
inc
inc
add
les
xor
mov
mov
test
lods
cltd
inc
cld
fisubl
js
lock
addl
or
add
add
aaa
sbb
movsl
in
dec
clc
scas
xor
sub
add
add
aam
in
aam
inc
add
add
push
sub
mov
xchg
add
add
xchg
mov
add
lock
jnp
add
mov
or
add
add
sahf
hlt
outsb
adc
add
add
pop
adc
rorl
add
jle
enter
add
xor
popf
or
mov
mov
inc
js
fnstsw
xchg
movsl
sub
add
add
mov
add
and
mov
sub
or
add
add
xlat
inc
cmp
addr16
pop
sub
paddq
add
add
push
add
cmp
inc
adc
inc
add
add
call
xor
mov
xor
xchg
jo
push
subb
add
stos
sbb
fwait
cli
push
bound
cmp
xchg
aad
hlt
sub
clc
push
add
stos
add
mov
lcall
shll
push
jbe
mov
jg
sti
arpl
in
push
pop
lock
in
sbb
sub
jae
add
add
add
imul
push
mov
in
test
push
push
es
ja
scas
xor
test
add
dec
ror
fcomps
cmp
lea
shr
sbb
jne
mov
daa
push
not
cmp
cmp
stos
sbb
pop
repnz
inc
mov
push
popa
rorb
mov
roll
das
aam
jge
add
add
sahf
pop
out
leave
sarl
dec
in
out
jne
adc
xor
xor
mov
pop
xchg
and
inc
rcrl
out
femms
test
mov
push
out
outsb
addr16
je
in
adc
add
inc
ret
add
mov
sbb
fisubrl
push
cmpsl
and
out
pop
or
aad
in
add
add
add
push
fcmovbe
ja
shr
sahf
sti
push
cmp
cmp
lock
outsl
dec
lahf
or
inc
mov
cmpsb
xchg
popf
push
xchg
xor
jns
xor
mov
and
mov
or
jmp
shl
inc
pop
xor
xchg
push
xchg
mov
inc
xchg
mov
add
add
xor
add
mov
mov
dec
addr16
shrb
add
and
mov
add
add
adc
push
sbb
ljmp
add
dec
stos
push
xor
leave
and
add
add
mov
les
add
add
mov
dec
and
add
add
icebp
push
xor
add
mov
fadd
jno
sub
sbb
sbb
dec
push
les
out
pop
rcrl
mov
xor
add
add
dec
add
imul
fcmovnbe
mov
push
adc
fcmovnu
mov
jb
mov
cmc
imul
mov
add
or
sti
inc
add
inc
and
add
test
add
add
or
add
add
test
mov
add
out
mov
and
add
add
cmovp
mov
and
add
add
inc
loope
xor
add
mov
xor
pop
outsb
add
add
xchg
jl
int3
push
sub
xchg
jmp
adc
mov
add
add
mov
jbe
cwtl
aad
or
fwait
int3
imul
popa
xlat
ss
pop
mov
or
add
add
loopne
dec
mov
jle
adc
cmp
adc
hlt
cmp
push
mov
ljmp
and
mov
mov
les
mov
ret
and
mov
loopne
or
add
add
cmpsb
imul
cwtl
ret
add
addl
add
mov
add
lret
mov
cs
jg
ja
inc
mov
inc
adc
sbb
cmp
pop
mov
in
into
cmp
inc
imul
add
add
cwtl
sub
cmp
jbe
push
and
loopne
inc
mov
cs
inc
loope
fmull
add
xchg
or
push
mov
jecxz
mov
repz
cmpsl
out
xchg
mov
lds
mov
popa
jg
mov
enter
outsb
shlb
add
add
mov
add
add
mov
rcr
sti
sbb
lea
or
push
mov
add
add
add
mov
sub
in
stos
mov
stos
jo
add
add
push
jno
push
xor
movl
add
or
mov
add
fcompp
jg
add
add
cmpsb
popa
loop
rcrl
xchg
pop
inc
or
ds
es
addr16
int3
in
andl
loop
jle
push
mov
add
ljmp
aaa
icebp
sub
mov
arpl
inc
int
mov
add
add
ret
cmp
lret
xor
add
pop
mov
arpl
scas
dec
sbb
paddq
mov
in
bound
xchg
pop
aaa
adc
mov
push
jp
xchg
aaa
loope
lret
rolb
sub
insl
clc
pushf
jge
pop
push
xor
mov
imul
stos
and
add
add
push
mov
loope
inc
int
add
scas
xor
mov
out
adc
ja
xchg
test
add
jne
mov
jg
movsl
imul
inc
mov
xchg
xchg
cmpsb
xchg
out
jo
in
mov
fsts
fnsave
cmp
test
or
push
push
cmp
sbb
mov
pop
mov
add
scas
rorb
mov
mov
inc
add
mov
mov
inc
push
pop
aas
adc
add
add
xor
xlat
dec
add
add
in
mov
adc
and
mov
sub
aad
add
mov
cmp
adc
stc
out
xor
test
mov
mov
add
icebp
les
xor
lea
repnz
test
adc
mov
addl
add
imul
rcll
ss
dec
and
out
stc
mov
dec
sbb
into
xchg
cltd
cmp
adc
lods
arpl
cmpl
add
fwait
test
imul
orb
adc
outsb
pop
sbb
and
mov
or
add
add
and
mov
in
mov
mov
fcmovnu
adc
mov
sub
pop
movsl
add
cmp
aas
enter
in
das
cld
jo
or
push
enter
incb
add
push
adc
lock
fcoml
ret
sbb
sbbl
add
add
clc
push
sub
mov
orl
mov
mov
pop
loopne
repz
mov
add
push
movsl
inc
arpl
mov
sub
add
add
hlt
mov
mov
lret
adc
add
call
jmp
lret
inc
cmp
movsl
pop
iret
movsb
mov
add
xchg
add
add
outsb
mov
nop
lret
ret
ficoms
xor
add
add
test
inc
add
pop
add
mov
pop
and
push
icebp
imul
inc
dec
loop
pop
negl
mov
outsl
add
mov
xor
fidivs
repz
and
fldcw
add
add
mov
test
xorb
inc
add
xor
mulb
sbb
add
jb
add
mov
add
add
cmp
and
inc
add
pop
add
mov
mov
aad
mov
int3
loopne
lahf
cld
stc
clc
test
add
out
shl
sahf
dec
shll
testl
cmp
test
das
add
mov
mov
cmpl
jge
push
insb
add
add
xchg
cli
xchg
insb
add
fimull
fpatan
push
testb
in
add
in
push
bound
add
add
mov
or
mov
ror
out
sbb
scas
inc
shl
jmp
rolb
add
add
add
in
jno
lods
jle
jo
pop
gs
decb
pop
and
mov
xor
add
push
inc
add
add
dec
add
sbb
add
sbb
push
fimuls
add
sub
add
jl
jmp
mov
dec
in
or
add
icebp
inc
adc
xchg
xchg
xchg
xchg
jmp
sub
add
mov
xchg
mov
add
add
hlt
or
cwtl
dec
push
or
fidivs
les
add
sbb
sbb
add
add
imul
push
orl
add
in
mov
inc
xchg
mov
jb
mov
xchg
xchg
dec
pop
mov
add
add
or
jne
sbb
pop
mov
mov
sub
pop
cmpsl
cmpsb
leave
sbb
inc
add
aad
fisttpll
push
push
mov
add
add
dec
cmc
movd
cmp
mov
jno
mov
mov
adc
stos
xlat
or
add
add
loope
bound
jns
mov
in
sbb
shr
arpl
pop
xchg
jmp
or
add
test
aam
lea
add
add
pop
loop
call
hlt
std
mov
insb
add
add
add
cmp
scas
sub
fcmovb
xchg
lock
adc
pop
movsb
xor
pop
outsb
add
adc
add
push
adc
call
pop
xchg
push
jp
lock
mov
ljmp
pusha
add
add
sbb
sbb
cmp
out
mov
jae
and
mov
insb
add
add
lods
inc
sub
add
add
and
add
pop
sbb
stc
loop
add
add
divl
mov
jb
lods
add
and
mov
mov
inc
sbb
dec
add
add
jbe
mov
nop
and
mov
xchg
xchg
sub
add
add
loopne
test
insb
add
adc
fistl
add
add
mov
pop
fmuls
lods
scas
lcall
insb
add
add
add
inc
pop
jnp
sbb
lock
add
add
int
dec
out
stos
stc
ret
mov
pop
test
das
mov
scas
cmpsl
movsb
xor
jo
das
sarl
push
cmp
jns
loop
pop
inc
cs
popa
mov
jb
cli
frstor
add
mov
sti
ss
add
add
add
fwait
lock
insl
clc
mov
out
mov
outsl
sti
jbe
mov
cwtl
enter
dec
xchg
sbb
pop
xor
lea
push
shll
movsl
lds
sub
mov
add
add
popa
loope
cmp
sub
add
add
or
mov
mov
xor
add
xchg
sbb
or
inc
add
add
inc
mov
mov
add
loopne
sub
pop
cmp
in
call
call
jb
mov
push
mov
mov
jg
add
add
add
jbe
lods
push
jns
push
mov
mov
lock
push
lods
sub
add
add
cmp
add
add
xchg
xor
sbb
add
push
xchg
jl
ds
push
pusha
add
mov
push
mov
sbb
cmp
mov
mov
add
mov
add
mov
add
popf
push
and
add
add
loop
test
mov
and
jbe
mov
inc
xchg
cltd
imul
push
ja
mov
cmp
pop
ljmp
add
mov
mov
add
xchg
mov
add
mov
add
dec
add
add
das
or
fsubl
add
mov
mov
mov
sub
adc
fnstsw
insl
stc
sarb
dec
xchg
and
push
fstpl
cs
mov
xchg
sub
add
ljmp
daa
shrb
push
mov
repz
fisubrl
dec
or
add
add
push
sub
mov
out
popa
int
cmc
sbb
add
add
flds
andl
cli
les
nop
mov
mov
and
add
add
add
push
in
add
cs
lcall
xchg
xchg
sbb
jge
add
lret
mov
sbb
loopne
xchg
mov
inc
je
imul
push
nop
repz
popl
ds
outsl
xor
cwtl
mov
push
cmp
loope
fisttpl
add
pop
push
pop
fmul
mov
clc
mov
and
mov
and
fwait
and
add
add
aad
add
add
imul
stos
inc
dec
in
mov
repz
add
mov
mov
pop
pop
mov
mov
sbb
push
adc
pop
outsl
inc
mov
mov
push
pop
stos
rclb
xor
mov
xor
pop
jns
andb
add
add
add
add
add
jbe
push
out
int
sbb
sbb
add
add
sahf
push
lods
push
pop
lret
xor
push
das
fninit
hlt
scas
mov
mov
add
out
out
lea
mov
pop
mov
repz
or
xor
out
mov
mov
pop
pop
out
in
xchg
repz
pusha
add
add
enter
sahf
in
in
sbb
outsb
adc
add
pop
in
jp
addr16
and
cmp
loop
sub
lds
ds
imul
add
popa
mov
mov
xor
repz
bnd
push
xchg
push
xor
cmp
push
rolb
enter
mov
mov
or
jg
js
mov
sub
push
dec
mov
mov
fsts
hlt
jnp
mov
jecxz
aaa
jbe
dec
scas
sarl
shlb
mov
leave
ret
add
add
pop
gs
jle
pop
inc
outsb
sbb
mov
jle
cmp
add
add
es
add
add
fidivrs
std
das
sahf
or
mov
add
add
and
cmc
into
popf
mov
gs
add
out
cmc
push
js
sub
add
add
outsl
ss
mov
push
cwtl
or
add
add
decl
fldl
mov
test
push
mov
dec
or
adcb
push
stos
push
xor
jbe
repz
dec
add
mov
mov
ficompl
add
add
adc
repz
add
repnz
inc
add
add
jae
pop
mov
sbb
in
push
gs
mov
xor
inc
pop
add
adc
mov
out
adc
xor
outsb
xchg
and
mov
stos
fwait
imul
add
mov
iret
push
push
pusha
add
add
sbb
push
mov
mov
in
leave
popf
shlb
test
movsl
or
mov
mov
and
add
add
fadds
add
add
add
add
shrl
mov
mov
mov
push
push
icebp
inc
lahf
in
jns
add
add
mov
add
add
ss
std
or
test
rorb
lea
add
aad
push
jle
jle
xor
popa
aad
or
cmp
add
xor
test
fstl
push
popf
cmp
jle
mov
jns
adc
clc
out
test
call
add
add
add
out
push
sub
add
add
adc
cltd
mov
fcmovu
and
jo
test
sbb
aas
push
or
inc
jo
cmpsb
pop
call
pop
dec
inc
mov
testb
add
adc
roll
shlb
add
xor
outsb
stos
add
add
add
rorb
xchg
mov
adc
or
mov
ja
xchg
rcrb
inc
add
icebp
std
add
outsl
xor
into
lahf
sub
roll
sahf
mov
mov
repz
add
add
or
mov
addr16
push
stc
mul
push
roll
mov
loope
cli
add
add
mov
mov
xor
adc
movsb
mov
mov
add
add
xor
or
scas
das
add
fstps
mov
add
add
outsl
fisubrl
add
jae
fistps
xchg
xchg
test
and
popf
mov
into
sub
gs
sbb
add
add
add
add
sub
mov
push
lret
xchg
dec
rcl
push
xor
cs
leave
loope
add
add
psadbw
add
add
cmp
in
fcompl
or
cmp
add
mov
mov
add
add
inc
call
mov
and
mov
xorb
mov
out
mov
mov
mov
push
add
add
lahf
or
adc
add
seta
add
add
and
mov
add
add
cs
add
inc
mov
ds
movsb
jmp
pop
in
and
mov
arpl
fbstp
loope
lea
push
jmp
mov
push
orb
sub
add
mov
adc
mov
add
add
add
sbb
dec
outsb
aam
and
movsb
test
popf
lahf
pop
pushf
sbb
clc
je
adc
adc
ss
dec
sub
mov
sti
inc
add
add
add
aam
xlat
dec
mov
mov
fdivp
into
xchg
jbe
bound
sbb
test
mov
jno
pop
sbb
loopne
fcomps
cltd
enter
add
add
test
cmp
add
add
fdivrs
and
add
add
mov
pop
stos
hlt
shll
pop
mov
leave
test
dec
add
sub
add
add
jle
loope
pop
cmp
pop
dec
inc
daa
andl
ds
jo
shll
popa
scas
out
out
pop
dec
loope
add
add
add
lock
into
or
out
cmp
inc
push
xor
cwtl
pusha
add
add
push
je
sub
mov
mov
add
mov
in
mov
jnp
pushf
std
sub
add
add
dec
add
jmp
push
sbbb
add
add
lret
and
lods
mov
sti
sahf
out
enter
add
jbe
add
add
pop
cltd
jo
xchg
insl
mov
stos
mov
xorb
ret
add
add
into
in
scas
outsl
inc
add
jl
sbb
push
or
cwtl
xor
add
cmc
push
mov
popa
dec
inc
pop
dec
adc
mov
int
lcall
jg
mov
adc
inc
pop
je
inc
jle
rorb
into
imul
mov
add
mov
idivb
add
cltd
movsl
aas
call
cmp
fwait
clc
mov
push
sarl
test
add
add
jns
jle
adc
sti
cmp
mov
dec
jle
xchg
in
sbb
ljmp
mov
jmp
or
add
add
mov
inc
jno
addr16
ds
jg
sbb
orl
repnz
call
xor
pop
test
jl
add
lods
lret
mov
aad
adc
dec
pusha
add
add
cld
imull
add
push
push
pusha
add
add
mov
add
int
pand
mov
mov
add
add
sbb
cmp
dec
dec
xchg
popf
mov
push
sbb
xor
xchg
pop
and
movl
repnz
ja
xchg
dec
ljmp
stos
ret
scas
fidivrl
jae
add
add
addb
imull
add
add
cs
cmp
sbb
pop
or
add
add
lret
lods
daa
jge
fwait
imul
hlt
add
mov
add
add
popf
shll
mov
mov
push
sbbb
dec
jp
add
das
sarl
mov
pop
mov
add
call
repnz
xchg
mov
pusha
add
lret
lock
xchg
fcmovne
roll
xchg
push
ror
dec
add
inc
adc
adc
rcl
mov
jae
jnp
sbb
cmp
add
add
dec
push
daa
xchg
rcr
int3
fsubrl
add
mov
mov
dec
pushf
cmp
sti
ljmp
aaa
fnstenv
das
xchg
pop
or
add
add
lret
fmuls
mov
inc
add
adc
adc
add
inc
in
imul
sbb
jns
dec
outsb
cmc
xor
mov
test
sbb
xor
and
shlb
adc
lock
add
pmaddwd
dec
add
pop
dec
add
add
jb
sub
add
add
add
add
out
dec
int
mov
and
mov
mov
mov
imull
repz
add
add
gs
int3
and
cmovne
sbb
test
push
mulb
mov
inc
and
xor
insl
add
test
push
mov
add
mov
mov
xor
call
dec
add
nop
pop
out
push
dec
jb
and
jle
mov
mov
add
add
mov
cli
sbb
mov
mov
orb
add
aad
or
add
add
aaa
inc
cmpsb
js
iret
mov
cmpsb
test
sub
mov
int
mov
aam
pop
or
add
std
pop
ret
add
call
jne
add
push
or
add
add
icebp
add
xchg
aaa
xlat
xchg
js
add
jne
push
sub
mov
pop
inc
sub
stos
rorl
or
in
push
les
xor
bound
cmp
mov
inc
cmp
jns
mov
add
add
sbb
mov
pusha
add
add
or
aad
imul
dec
push
sbbb
add
push
cmp
cmp
inc
add
add
das
ljmp
dec
dec
ljmpw
ret
xor
ss
xchg
and
adc
ja
movsl
hlt
sahf
add
add
pop
mov
icebp
shll
sub
lahf
test
add
mov
add
and
mov
mov
inc
ret
out
clc
dec
pop
xor
xchg
stc
adc
lods
xor
out
out
test
xor
add
jbe
das
or
cmpsb
nop
cmpsb
pusha
add
sbb
push
jb
add
inc
add
nop
sub
mov
cmp
add
bound
shr
fpatan
mov
and
mov
inc
jo
jnp
add
stos
and
add
pop
sub
and
add
add
xchg
out
mov
movsb
fwait
movups
jo
jl
pusha
add
add
clc
push
cmp
sbb
mov
sbb
cmp
imul
aad
xor
test
shl
outsl
adc
add
or
iret
div
jmp
mov
sub
mov
mov
xchg
jp
jl
mov
mov
add
sub
xor
mov
mov
das
bound
lock
call
sub
or
mov
sti
jo
jns
jbe
sbb
xchg
push
lea
mov
loope
ss
push
pushf
pop
out
jge
inc
inc
pop
out
popa
xor
mov
rorl
add
cmp
lods
stc
adc
shrb
add
add
add
mov
pushf
dec
add
add
stos
cli
loop
icebp
dec
add
mov
sbb
les
nop
into
pop
ret
aad
mov
push
inc
and
add
add
rclb
add
add
add
scas
xor
sbb
mov
mov
jnp
imul
int
xchg
mov
in
inc
mov
sbb
and
movb
mov
cmpl
sbb
xor
ja
rorb
cmp
outsb
pop
xor
lcall
add
iret
add
cmpsb
jl
imul
inc
jbe
gs
push
mov
add
mov
imul
push
scas
lahf
fiaddl
cld
adc
xor
add
pop
pop
xor
scas
cld
xor
add
add
jp
push
outsl
int3
ret
xor
fistpl
sbbl
add
popa
xor
add
int3
push
sub
add
add
icebp
fwait
sub
mov
mov
cmp
inc
mov
daa
fadd
mov
imul
enter
mov
adc
xchg
jne
lods
into
push
lock
add
adc
cmp
or
mov
add
add
add
addr16
cmc
dec
mov
mov
out
or
add
add
jecxz
cld
sti
or
sub
pop
rcl
add
mov
push
inc
jmp
add
jmp
repnz
imul
add
pop
dec
add
jnp
jo
repnz
loope
xor
jl
add
add
mov
mov
pop
mov
mov
or
push
lea
mov
incb
add
or
add
add
lods
into
xor
add
movsb
sbb
loopne
pop
mov
cmp
and
rcrb
cli
mov
dec
add
add
out
sub
test
xchg
mov
add
daa
cld
mov
dec
add
add
pop
stc
popl
add
add
add
jo
mov
adc
add
add
imul
dec
lret
loop
arpl
pop
adc
lcall
add
jg
xor
dec
scas
mov
jg
ret
pop
ret
adc
mov
push
mov
sbb
mov
lcall
push
aam
pop
push
lds
jo
cmp
ficoml
mov
add
sub
add
add
bound
xchg
scas
xor
dec
add
clc
jo
test
mov
flds
cli
sub
pop
adc
jns
cli
cwtl
xchg
lea
add
or
cld
daa
cmp
push
adc
push
imul
cmp
cltd
mov
add
xchg
xor
jnp
mov
pop
mov
xor
out
sahf
jo
addl
jns
pop
fisubrl
add
push
out
clc
aaa
mov
add
mov
loope
jg
or
add
add
xchg
dec
call
xchg
jge
nop
or
cmc
jno
or
add
add
std
fldenv
add
daa
and
std
stos
sar
xchg
xor
popa
test
add
stc
pop
mov
sub
inc
sahf
negb
or
add
add
ficoml
into
shll
xchg
push
gs
adc
mov
add
mov
mov
add
js
add
add
and
sub
add
scas
in
add
add
out
pop
sbb
dec
add
rcr
pop
xor
push
ja
fdivr
jmp
cmp
or
inc
adc
adc
stos
pop
outsl
xor
mov
insb
add
inc
xor
sbb
ljmp
das
dec
popf
and
test
jmp
stos
std
repz
mov
jno
xor
test
les
fdivl
lods
xchg
sbbl
mov
add
mov
inc
add
sti
and
mov
scas
sub
add
add
mov
add
add
lods
fimuls
stc
test
add
je
add
add
push
cld
dec
pushf
mov
mov
gs
loope
adc
nop
mov
call
add
xor
add
mov
fcompl
mov
cmp
in
add
add
push
jmp
test
add
cmp
je
xchg
mov
pop
sbb
mov
rclb
add
lods
les
add
cld
ja
push
xchg
test
adc
sub
and
add
add
add
rcll
lahf
imul
xchg
add
icebp
cmp
push
push
jmp
mov
arpl
outsl
sarl
mov
jbe
js
mov
add
add
int3
adc
xchg
push
add
add
add
cs
sbb
mov
mov
push
daa
cmp
test
out
jbe
movsb
mov
sub
popa
bound
mov
ret
test
add
out
fnstcw
jne
add
hlt
inc
add
xor
test
mov
out
add
test
add
mov
xchg
jo
imul
test
lea
add
sbb
dec
dec
cmpsl
push
rcl
notl
movsb
pop
jle
adc
movsl
adc
rcrb
sbb
mov
mov
add
fnstcw
mov
mov
pop
clc
nop
or
mov
outsb
out
orl
pop
cs
dec
pushl
sub
add
add
add
xor
dec
inc
cmc
xchg
loop
sbb
ljmp
add
sub
mov
add
add
clc
pop
testb
jge
js
cmp
sbb
mov
mov
pushf
xchg
cmp
leave
imulb
flds
idivb
jl
loopne
loop
outsb
jne
cltd
fistl
insb
add
xor
popf
and
adc
adc
add
icebp
cmp
lods
lea
dec
ds
push
leave
and
adc
divl
and
add
add
mov
add
lea
mov
add
add
subb
add
jbe
cld
out
sti
insl
mov
int
decl
add
add
push
dec
sti
les
shrl
add
add
incl
sub
add
add
sarl
dec
sysenter
mov
push
adc
dec
insb
add
pop
ja
push
imul
test
or
incb
add
mov
add
mov
nop
jns
push
add
ret
dec
and
mov
pop
in
adc
lods
jg
jae
add
add
cli
scas
mov
xor
pop
mov
inc
add
imul
mov
add
mov
mov
data16
add
add
arpl
add
outsl
nop
dec
adc
inc
loop
ljmp
adc
fsubrl
push
dec
mov
daa
into
mov
mov
cmp
inc
add
push
cli
test
pop
pop
pop
jo
lret
loopne
push
xchg
adc
shrl
mov
jne
cwtl
sub
add
add
aam
add
adc
add
ljmp
add
ret
sbb
mov
sahf
xor
mov
fwait
loope
push
push
filds
or
add
add
bound
push
out
xchg
enter
mov
pop
mov
ljmp
pop
mov
cld
clc
scas
mov
jg
fwait
cmp
lret
mov
add
add
movsl
popf
push
pop
arpl
add
add
cmp
add
es
xchg
ss
mov
dec
add
mov
push
push
pop
stos
mov
xorl
mov
into
mov
push
xor
mov
shlb
fmull
add
add
repnz
or
imul
push
std
push
popa
inc
fsts
lret
push
call
cmp
mov
xchg
fistpl
repnz
dec
jae
push
std
mov
ljmp
add
stos
pop
mov
add
and
and
add
aas
in
mov
enter
fsts
xor
mov
inc
test
cmp
and
mov
ror
popl
loopne
mov
add
add
icebp
xor
jnp
sahf
pop
or
mov
fstps
cmp
cmc
mov
push
cli
loope
insl
out
inc
xor
xor
mov
sub
test
add
add
sbb
sbb
pop
and
mov
add
add
inc
add
xchg
add
xchg
fldl
lret
push
jne
and
add
mov
ficompl
jo
loop
sub
mov
xor
in
xorb
in
sarl
or
int3
jno,pt
jae
movsb
mov
stos
fidivl
stc
xor
mov
mov
and
push
jmp
push
scas
rcrl
jne
jg
push
and
fisttps
push
rcrl
dec
dec
aad
cwtl
sbb
mov
dec
stos
jno
inc
xor
shl
jmp
test
test
mov
add
push
int3
jb
jb
pop
dec
add
add
pop
fmull
and
add
add
mov
dec
add
add
hlt
popl
sti
cltd
aad
inc
add
add
push
xor
sbb
add
adc
mov
out
filds
add
or
imulb
add
and
fsubl
mov
ret
and
mov
add
add
test
inc
cs
hlt
xchg
sbb
jg
push
cmp
add
and
jnp
cmp
mov
mov
or
cltd
adc
ret
xchg
stos
stos
jle
inc
add
add
add
dec
add
imul
push
mov
stc
sbbl
add
add
int
push
aad
xchg
push
pop
dec
pop
push
and
add
add
ret
add
add
add
mov
mov
mov
or
mov
hlt
cs
adc
idivl
scas
in
add
scas
mov
shll
dec
add
add
add
cld
filds
out
lea
fld
sbb
inc
add
xchg
test
add
add
lcall
icebp
and
mov
sbb
test
mov
mov
sub
mov
fistpl
js
sbb
gs
sbb
mov
sbb
add
xor
xchg
mov
push
stc
aaa
pop
jb
inc
push
jae
adc
push
mov
rcl
mov
cmp
mov
and
pop
xchg
xchg
xchg
test
out
adc
xchg
dec
cli
aam
fimuls
nop
fcmovnu
pop
adc
push
nop
sub
push
push
cmp
mov
push
jle
jae
push
xor
jl
xchg
cmp
mov
cmp
mov
mov
sti
fistl
push
jnp
sub
sub
add
outsb
push
in
lret
out
xchg
xlat
dec
lods
mov
out
pop
ret
xor
stc
xchg
mov
mov
add
add
cmp
fdivrs
outsl
ljmp
loop
push
add
ret
mov
push
and
jnp
lcall
cmpsl
ret
in
cmp
mov
fildll
aam
cmp
repnz
add
ja
cmpsl
sbb
jle
lods
jle
test
ret
out
sub
pop
insl
stos
aaa
int
mov
mov
ljmp
rep
add
outsb
or
aad
mov
add
add
jmp
out
cmp
ljmp
jmp
fdivrp
xor
lahf
bound
cld
mov
add
and
mov
mov
xor
pop
pop
cmp
rcr
mov
push
xchg
cmp
pop
shll
imul
lcall
cmp
fwait
in
inc
mov
add
mov
and
and
or
mov
pop
mov
lds
xlat
int
mov
ret
out
clc
fst
add
idiv
dec
xor
add
repnz
pop
jbe
dec
dec
add
mov
in
sahf
in
das
jecxz
sbbb
mov
loop
shlb
inc
aam
mov
pop
jo
adc
add
fldcw
jle
jmp
pop
lret
mov
jp
add
cmc
sbb
and
add
add
idivb
sub
add
add
inc
sub
mov
add
add
sbb
flds
xchg
inc
mov
fucomip
lret
shrl
je
mov
pop
or
add
add
int3
cmp
mov
xor
xchg
or
rcll
lea
aam
lret
xor
push
jnp
jmp
jle
xor
dec
xchg
shlb
pop
lds
jbe
mov
out
cli
decb
add
add
add
adc
jl
roll
lahf
xlat
xchg
cs
into
icebp
das
dec
add
add
scas
ror
in
mov
push
lahf
push
sub
cmp
inc
add
lods
pop
jae
xor
out
je
test
adc
jb
shl
sti
lods
in
outsb
sub
jl
add
add
sbb
int3
cld
add
add
sbb
xchg
add
mov
dec
decb
adc
aas
adc
mov
cmc
rclb
pop
incl
add
add
mov
addl
add
mov
ffree
push
inc
ffreep
icebp
into
add
jp
insb
add
add
pop
rclb
add
add
inc
add
add
pop
sub
add
add
add
add
sub
mov
jae
ja
sbb
test
std
jl
roll
pop
add
mov
inc
mov
ljmp
fildl
xor
and
add
add
mov
add
clc
xor
or
inc
xor
out
lods
mov
pop
icebp
push
or
js
pop
ret
inc
add
subps
insl
imul
jbe
movsl
xchg
sbb
pop
mov
mov
sub
out
pop
sbb
pop
mov
arpl
lods
jg
out
int
xchg
xchg
jle
add
adc
xor
lret
ss
cwtl
add
and
test
cmpsb
mov
repnz
add
iret
lods
cmpsl
pop
and
mov
xor
lret
ret
dec
mov
add
add
das
push
imul
movsl
daa
mov
sahf
inc
add
adc
xor
inc
add
add
shrl
add
imul
out
movsb
shl
aaa
mov
add
mov
call
push
or
add
xchg
fmulp
cmp
adc
std
sbb
add
or
test
cmpsl
jge
and
addb
jb
mov
and
add
add
push
jmp
xlat
inc
cmp
scas
xchg
xchg
or
out
and
repnz
push
add
mov
dec
push
lret
add
popf
jbe
xchg
jge
aad
aam
test
notb
negb
shl
je
mov
add
add
mov
mov
mov
push
mov
into
dec
dec
push
add
shlb
test
add
add
add
pop
aam
pop
scas
or
mov
xchg
mov
xor
adc
and
add
mov
ret
inc
mov
add
pusha
add
add
ret
mov
mov
int
sti
push
and
mov
sbb
pop
jno
pop
pop
xchg
add
or
add
add
lahf
shll
mov
or
mov
mov
lcall
dec
add
add
das
and
mov
and
idivl
lret
or
mov
add
cmc
in
sahf
xorl
popf
inc
outsl
sub
lods
jp
movsb
ljmp
imul
stc
cmp
mov
insl
cld
mov
xor
mov
add
not
jmp
frstor
das
xor
mov
mov
push
cmpsb
push
jp
push
stos
std
mov
mov
js
lcall
rorl
int3
xchg
xorb
mov
sbb
pop
cmpsl
xchg
push
inc
fisttpl
add
adc
mov
jl
adc
ds
in
pop
adc
mov
pushf
xlat
xor
daa
adcl
scas
cmp
aam
data16
mov
jmp
or
fcoms
mov
das
rcl
cmp
adc
sti
dec
add
add
add
add
mov
add
add
sbb
pushf
sbb
jne
nop
xchg
push
call
xchg
notb
jnp
add
add
mov
add
add
cmp
call
nopl
subb
enter
mov
add
push
and
add
add
add
and
roll
xchg
cltd
xor
cmp
clc
loop
and
mov
testl
and
add
add
add
add
add
cwtl
cmp
fisubrs
mov
popa
mov
lock
push
cli
inc
jp
sbb
cmpsb
aad
jecxz
bound
jecxz
mov
inc
insb
add
add
scas
mov
ss
sbb
add
jne
and
add
add
into
popf
int
fisubl
add
mov
pop
sub
mov
prefetchnta
or
inc
add
add
xchg
cmp
in
adc
gs
jp
push
iret
inc
add
cwtl
test
and
mov
pop
repnz
add
add
mov
or
je
pushf
cmp
jp
add
xchg
push
mov
dec
mov
add
cmp
add
add
test
push
rorl
scas
mov
add
and
xchg
mov
fisubs
add
add
xor
cmpsb
andb
inc
sti
les
rol
addl
fwait
into
mov
add
sbb
dec
xchg
fistl
stc
xorl
mov
dec
add
add
xorl
pusha
add
ret
dec
xor
add
icebp
stos
ret
and
pop
pop
rcrb
xchg
mov
xchg
xchg
shll
add
lods
mov
pop
movsl
push
test
add
add
add
add
jl
lret
ljmp
xor
pushf
fldt
jle
add
inc
add
add
add
cmpsl
daa
sub
andb
pop
xor
sti
jb
pop
out
clc
adc
jno
xlat
ficoms
jo
fistpll
or
push
bound
sbb
sub
jecxz
lret
out
das
mov
hlt
jl
or
sbb
pop
lahf
push
mov
les
xchg
add
mov
mov
nop
pusha
add
add
xor
aas
xor
pop
jne
push
xchg
enter
mov
add
add
xor
lods
clc
lahf
dec
push
or
mov
ds
mov
sbb
addl
jp
dec
push
pusha
add
or
or
mov
xchg
push
cs
add
mov
aas
mov
push
shrl
inc
ljmp
xor
mov
push
popf
push
and
lods
es
icebp
fists
xchg
mov
jge
enter
add
jp
jg
cmpl
imul
aad
enter
es
xchg
cli
stc
sub
scas
jecxz
stos
xor
addb
sbb
add
add
xor
add
or
int3
push
push
or
add
add
xor
mov
inc
pop
stc
xor
hlt
pop
mov
mov
cmp
vunpckhps
mov
or
mov
mov
dec
data16
cmpb
and
push
pop
lret
movsb
push
sti
push
shll
mov
mov
dec
add
add
sbb
ljmp
mov
sbb
jl
jecxz
lock
or
add
add
add
mov
add
add
dec
rcrb
mov
jno
add
add
repz
test
xchg
dec
add
push
jg
xor
and
xchg
nop
jg
xchg
mov
in
or
sbb
push
in
dec
add
shl
mov
dec
fstps
notb
jnp
aaa
popa
pushf
xchg
popa
adc
add
xor
xlat
ds
data16
add
add
push
add
mov
inc
add
mov
test
jecxz
test
or
add
add
das
arpl
add
xchg
dec
sub
add
add
es
loope
dec
add
pop
repnz
dec
mov
test
iret
mov
sbb
sbb
mov
xchg
mov
aam
adc
cmp
jo
add
add
inc
xor
and
jp
add
add
inc
insb
add
add
mov
notl
add
dec
mov
notl
adc
xor
pop
out
pop
pop
stos
out
mov
mov
add
sub
test
decl
ret
add
add
stos
insl
xchg
in
add
jne
xchg
add
add
or
gs
add
repnz
sbb
add
sub
add
add
xor
adc
add
add
adc
enter
sbb
scas
xchg
adc
mov
test
loope
add
add
inc
inc
test
add
mov
subl
mov
push
test
add
xlat
mov
je
popf
ljmp
mov
add
mov
cs
add
add
push
icebp
les
lret
add
add
cwtl
setb
mov
add
add
mov
sub
add
add
sbb
add
add
mov
mov
mov
xchg
nop
mov
int
mov
fstps
cmp
sbb
repnz
fisubl
inc
add
add
adc
arpl
and
adc
add
add
add
xchg
leave
sub
inc
popf
movsb
or
mov
dec
out
mov
add
add
loope
sbb
mov
insb
add
gs
xchg
pop
rorb
mov
ror
cmc
imul
add
add
sti
mov
add
mov
jae
aaa
out
mov
or
ds
test
pop
mov
add
add
cmpsl
rorl
int3
lcall
inc
lret
mov
jge
add
add
jno
inc
add
mov
mov
add
ds
mov
add
or
call
lds
into
sbb
mov
adc
xor
dec
add
add
test
aam
decb
out
test
scas
cmp
cmpsl
cltd
mov
push
loope
les
fwait
sbb
ret
inc
movsl
int3
add
mov
cmpb
lahf
arpl
add
popa
in
icebp
and
mov
outsl
or
add
add
rcll
mov
xor
in
cmp
pop
sahf
sub
add
es
add
add
jae
lahf
mov
mov
movsb
push
fwait
pop
fcoms
inc
mov
add
movsl
and
pushf
mov
add
add
pop
inc
aad
jnp
push
dec
and
in
cmpsl
mov
sub
or
mov
inc
aaa
xchg
push
cmpsl
cli
std
mov
add
add
insb
add
ljmp
xchg
lock
or
fdivrs
jns
insl
jmp
jo
add
add
dec
add
add
add
roll
js
jmp
push
jmp
andl
add
cwtl
push
rcr
pop
pop
add
cwtl
mov
gs
cmp
pop
mov
pop
pusha
add
add
add
xchg
sbb
mov
xor
out
fcoms
add
cmpsb
add
das
push
sbb
xchg
or
add
clc
inc
add
add
jge
movsl
xlat
add
add
dec
jl
in
jl
decb
fldlg2
out
das
dec
adc
fwait
pusha
add
add
jecxz
adc
pop
jo
dec
je
sbb
cmp
add
xor
mov
mov
mov
mov
add
fisubs
jo
sbbb
add
out
test
push
mov
lret
and
add
add
fistps
add
add
arpl
jle
repz
pop
lret
sub
mov
add
lahf
or
ret
add
xor
aas
outsl
mov
in
cmpsl
std
and
push
lret
int3
mov
xchg
gs
push
or
add
add
add
xchg
sarl
in
data16
inc
or
add
add
fldl
cld
or
mov
adc
lret
lods
xchg
leave
stc
lods
sub
xor
outsl
xor
add
mov
xchg
addr16
mov
rclb
add
test
in
add
mov
mov
aaa
jl
sarb
jo
and
mov
inc
add
add
movsl
repz
mov
pop
adc
imul
xchg
add
enter
mov
cmp
js
cmc
repnz
testl
mov
fsubl
sbbb
lcall
cmp
mov
inc
ja
add
cmp
lcall
mov
aaa
scas
repz
xchg
idivb
add
add
cmpsl
xchg
sahf
movsl
pop
add
add
add
adc
ficoms
push
jno
add
add
daa
add
add
add
xor
leave
sbb
addr16
test
mov
cmp
add
flds
or
mov
lods
fnsave
add
xchg
xchg
loope
jl
add
add
dec
inc
add
rcrl
add
mov
lret
and
idivl
jns,pt
add
add
add
add
add
mov
sub
mov
mov
in
mov
add
mov
mov
and
ret
repnz
add
movsl
mov
scas
data16
xchg
repz
mov
call
mov
add
add
dec
add
add
xchg
sarl
cltd
jle
rolb
add
dec
or
mov
dec
add
mov
jns
add
add
iret
xchg
in
sbb
add
xchg
or
add
add
xchg
sbb
add
pop
and
test
test
lods
or
mov
pop
cmp
fidivrs
out
xor
loopne
addr16
mov
enter
add
iret
mov
aam
sbb
xchg
push
cmp
xor
and
dec
or
jp
push
xchg
arpl
sbb
push
imul
hlt
aas
gs
sub
mov
pushfw
cmpsl
dec
daa
sub
sbb
das
cwtl
inc
arpl
xchg
iret
mov
or
hlt
xchg
fwait
jmp
add
hlt
mov
int3
add
xor
jae
insl
xor
jno
stos
in
outsb
xor
inc
fcmovbe
sub
mov
out
into
iret
cmp
or
mov
cmp
imul
pushf
adc
add
jle
out
loopne
and
add
or
fisttps
mov
add
add
jp
popf
das
test
or
add
add
adc
mov
add
ja
out
imul
hlt
scas
out
sbbb
sub
mov
xchg
inc
add
imul
movsb
hlt
xchg
cmp
int3
out
int3
mov
add
cmp
icebp
jg
sti
pop
les
cltd
inc
add
and
mov
pop
ss
scas
inc
dec
add
add
xor
insl
outsb
out
repnz
fildll
xchg
pop
or
add
add
stc
aam
sub
dec
sbb
dec
mov
push
add
dec
mov
add
popf
push
add
add
dec
add
add
test
sarb
lea
mov
bnd
and
add
add
xor
addr16
add
add
add
imul
or
dec
add
add
or
add
add
shl
test
dec
push
xchg
shll
add
pop
push
loopne
jno
hlt
ljmp
cmp
sub
mov
ret
and
mov
fildl
add
mov
fimull
push
mov
or
dec
push
test
add
mov
aam
fstl
add
fisttpll
ret
jle
lcall
mov
cmp
add
add
add
mov
arpl
pop
das
cmpsb
adc
out
inc
bound
testb
sub
add
add
push
jmp
test
scas
mov
add
and
mov
dec
sar
popa
pushl
xor
mov
rcl
pop
sar
ss
push
lcall
lods
imul
jecxz
sub
test
add
add
add
inc
xor
inc
push
or
add
sub
pop
mov
pop
and
fiaddl
scas
pop
addl
xchg
js
dec
add
or
add
add
ds
ret
jmp
push
insb
add
mov
lea
les
add
add
mov
lahf
leave
lock
dec
or
stos
out
mov
mov
jnp
cltd
out
push
inc
js
add
call
mov
mov
inc
add
add
lret
sbb
and
and
add
add
jmp
stos
aad
sbb
add
add
or
add
cwtl
js
sbb
sub
pop
or
mov
out
or
mov
movsl
xchg
packsswb
fsubrp
mov
lds
mov
push
mov
scas
repz
outsl
ljmp
add
ss
dec
add
push
in
mov
into
int
cmp
testb
add
decl
cmpsb
cmp
xchg
dec
dec
or
mov
add
add
add
mov
pop
mov
and
mov
mov
add
add
mov
cmp
pop
shlb
hlt
adc
daa
insl
mov
test
cwtl
add
subb
push
test
das
mov
push
cmpsl
sbbb
dec
pop
mov
stos
or
add
inc
pop
push
add
mov
mov
mov
lods
or
add
jnp
popf
xor
mov
and
mov
add
add
leave
xor
icebp
call
ret
mov
aaa
mov
imul
lods
adc
outsb
in
lea
les
adc
fadd
lea
in
andb
sub
mov
imul
arpl
pop
insb
add
add
mov
sti
mov
add
add
loop
push
adc
xor
mov
loope
fisubrs
xor
mov
arpl
lret
ret
jb
add
add
inc
mov
push
lret
cwtl
push
aam
mov
add
sub
add
add
adc
pop
lcall
les
xchg
add
pop
in
dec
mov
shlb
pop
jecxz
mov
ret
std
mov
mov
outsl
sbbl
xor
jb
sub
mov
jbe
mov
add
add
add
sahf
push
sahf
mov
push
je
push
mov
adc
into
daa
inc
add
add
jl
add
add
leave
pop
out
cld
jnp
inc
mulb
add
dec
adc
xor
push
xchg
cs
xorl
cs
icebp
add
mov
int3
addr16
add
imul
je
jl,pn
and
mov
sbb
add
ss
mov
xor
movsb
in
cmp
out
es
int3
inc
adc
jne
add
mov
xchg
pop
test
add
cwtl
mov
ljmp
push
mov
push
jb
in
xchg
fdivr
pusha
add
les
push
mov
push
mov
sbb
in
adc
je
xchg
dec
dec
cmp
ret
pop
push
cltd
mov
adc
xchg
mov
mov
adc
mov
out
pop
pop
pop
repnz
out
stos
ror
dec
mov
add
fiadds
mov
andb
lcall
and
mov
divb
stos
sysenter
icebp
sbb
sbb
shrb
lahf
sbb
add
add
out
testl
xchg
out
pop
inc
aaa
mov
push
lret
insb
add
sub
cmp
into
shlb
sbb
add
add
add
ds
ja
add
mov
pop
in
popf
jnp
jge
jnp
adc
add
sahf
ss
cli
pushf
sub
mov
mov
ds
adc
add
add
pop
dec
cltd
popf
add
add
sarb
outsl
mov
dec
dec
or
add
add
mov
or
mov
jo
adc
movsl
adc
or
cmp
add
insl
lret
cmp
push
mov
cmpsb
sahf
es
aad
loope
cmc
iret
fcomps
add
sbb
or
xchg
shrl
add
das
scas
arpl
and
add
add
mov
sbb
loop
neg
bound
dec
add
add
js
mov
xchg
mov
lods
fidivrs
pop
in
push
mov
bound
insl
xor
mov
insb
add
add
add
enter
push
push
mov
and
jle
push
outsl
cmp
ds
popa
inc
add
daa
mov
cmpsb
in
dec
jne
pop
idivl
inc
aam
mov
or
add
add
cmpsl
jne
sar
bound
xchg
sbb
jns
add
add
add
in
add
jbe
aam
xor
add
mov
adc
add
add
xor
pop
jno
add
add
add
mov
dec
add
add
cmp
out
nop
in
mov
add
add
insl
jmp
jmp
leave
pop
push
stc
push
xor
mov
pop
mov
into
mov
or
mov
sbb
jge
dec
lock
mov
xor
inc
inc
cmp
xchg
ret
dec
movsl
xor
inc
add
add
stos
jl
push
and
adc
lret
mov
sbb
or
pop
xchg
subb
xchg
adc
ds
cmp
inc
sub
add
add
mov
pop
ret
mov
add
in
sbbl
pop
add
mov
clc
addr16
data16
push
loope
ficompl
mov
jecxz
add
add
shrb
add
push
push
data16
mov
aad
inc
add
add
aam
ljmp
mov
adc
popl
mov
add
shrb
push
inc
dec
sub
mov
jmp
scas
gs
cwtl
popa
dec
hlt
mov
enter
movsl
or
add
add
pop
std
jae
mov
jecxz
pop
lods
mov
add
std
jmp
add
mov
add
jecxz
mov
sub
mov
add
mov
mov
ret
stos
xchg
add
add
pop
adc
imul
mov
loopne
fimull
jecxz
sub
cltd
lahf
aam
sbb
aam
sti
mov
ds
loopne
test
add
mov
push
dec
add
add
add
imul
add
mov
mov
jae
ljmp
add
add
dec
and
mov
mov
out
loope
ret
subb
sahf
jb
push
cld
mov
xor
dec
popa
adc
jnp
fidivrl
pop
cmp
add
sub
je
or
cld
mov
fadd
sub
mov
xchg
aaa
lds
in
iret
sbb
dec
add
add
add
negl
pop
lret
andl
ja
add
mov
scas
cmp
rolb
rorl
add
adc
mov
pop
cmpsl
xor
les
stos
push
pop
filds
mov
mov
sahf
dec
inc
or
iret
pusha
add
addr16
inc
scas
cld
mov
mov
push
ja
add
mov
loop
dec
lds
add
call
sahf
xor
sub
push
dec
pop
cltd
mov
inc
loopne
pop
inc
xchg
jl
push
push
add
ret
xlat
sahf
cld
movb
out
and
add
add
jg
insb
add
and
xchg
aad
adc
adc
int3
adc
cmp
das
ljmp
fisubrl
cmp
or
mov
mov
inc
jle
scas
pop
es
ret
fdivrs
dec
push
pushf
cltd
inc
roll
add
add
ret
pusha
add
add
in
mov
dec
add
add
fsts
lods
and
mov
jge
imul
mov
push
mov
add
add
sub
mov
shll
ret
add
add
add
add
hlt
sbb
push
jb
insl
xlat
in
push
outsl
sbb
add
mov
fnsave
mov
dec
popa
add
mov
xchg
mov
arpl
xorb
mov
icebp
sbb
or
mov
xchg
ds
mov
add
mov
sbb
add
add
add
xorb
jae
jnp
and
inc
movaps
mov
jbe
push
leave
cmc
pop
call
xor
inc
mov
shr
xchg
insl
int3
sbbl
stos
orb
das
jno
jnp
cwtl
xchg
movsb
nop
mov
mov
xchg
jmp
jae
add
sbb
sbb
std
add
add
add
insl
in
mov
mov
imul
test
add
add
mov
adc
add
adc
mov
insl
adc
ffreep
les
arpl
push
dec
cli
rcrb
dec
mov
mov
dec
jge
add
add
mov
arpl
add
add
mov
arpl
out
outsb
jp
out
mov
cld
ret
adc
add
add
enter
aas
outsl
inc
cmc
fwait
popa
inc
add
add
sub
fwait
mov
xor
sub
mov
sub
xor
movsb
dec
and
add
add
cmp
repnz
jo
nop
dec
shll
adc
sub
jp
je
pusha
add
add
orl
pushf
xchg
cmpsb
lcall
add
inc
sbb
xor
push
sbb
jne
sub
js
insl
adc
add
add
arpl
mov
test
popa
push
pop
push
mov
aas
push
dec
add
xchg
xor
ret
test
mov
add
dec
cltd
sub
mov
and
fidivs
les
add
add
xchg
jmp
mov
ret
clc
cmp
jno
test
mov
jbe
mov
imul
ret
add
add
jle
or
add
add
mov
jo
aad
pop
imul
jns
shr
jge
xchg
pop
pop
gs
add
call
mov
mov
push
and
inc
inc
out
cld
xor
clc
in
mov
dec
stos
fnsave
pop
inc
cwtl
or
xor
cmp
add
in
add
cmp
pop
adcb
push
loope
or
pop
jb
xchg
loop
cmp
mov
add
add
outsb
ror
jns
and
mov
sbb
xor
fcomip
out
subl
roll
add
ss
dec
add
je
add
add
insb
add
add
add
mov
fbstp
pop
jne
stc
lret
mov
add
add
mov
cmp
fcomi
adc
mov
xchg
mov
mov
mov
adc
and
add
add
sbb
pop
or
xor
pop
push
jbe
shll
pusha
add
dec
stos
pop
scas
add
cmp
jl
mov
mov
add
pusha
add
push
sub
xor
bound
add
add
mov
pop
incb
add
add
mov
add
add
loopne
and
lret
adcb
push
arpl
mov
popf
insb
add
add
call
add
add
jno
push
cli
cltd
loope
xchg
ret
inc
add
add
push
add
xchg
test
cmpsl
or
mov
mov
loope
scas
sbb
movsl
inc
mov
js
leave
lods
pop
int3
adc
add
pop
jle
sub
icebp
xchg
imul
out
stc
pop
mov
sub
movsb
fidivrs
insl
xor
add
out
mov
add
mov
cmpsl
xchg
fcomps
fistps
pop
loope
push
pop
in
push
mov
sahf
inc
call
mov
pop
ljmp
inc
std
and
insb
add
lods
ret
cld
subl
aas
shll
aaa
fstp
xchg
nop
mov
inc
add
add
cltd
jb
or
inc
lds
or
mov
sub
pop
xor
mov
pop
mov
iret
cmovge
xchg
lret
lods
inc
nop
mov
add
xchg
add
add
mov
and
mov
sub
into
xor
mov
cmc
inc
pop
dec
push
dec
jge
jbe
dec
pop
cli
and
add
cmp
pop
int3
decb
jb
sub
mov
gs
adc
push
push
pop
xchg
mov
pop
pop
outsb
mov
mov
add
add
mov
jg
cmc
push
clc
insb
add
popa
fbld
shlb
add
int3
push
lea
mov
mov
std
jmp
add
add
ss
pop
cmpsl
pop
data16
push
in
cltd
cmp
jp,pt
adc
fsub
outsl
and
aam
push
movsl
lods
inc
arpl
and
mov
bound
or
add
divl
cltd
lahf
popa
sbbb
pop
xor
cmp
stos
push
imul
gs
push
adc
scas
add
sub
jge
shrb
pop
pop
jp
loope
mov
fdivs
test
and
outsb
adc
mov
add
add
mov
les
mov
pop
fisubrl
add
push
fildll
sub
xchg
fld1
rcrl
shll
xorb
add
cmpsb
mov
add
mov
pop
mull
jmp
lods
adc
sbb
dec
test
add
loop
push
dec
cltd
shlb
aas
jle
add
mov
gs
in
push
pop
mov
ret
add
popa
decl
pop
xor
inc
cmp
aaa
imul
mov
add
cmp
mov
push
sbb
pop
filds
rcll
add
add
arpl
das
inc
add
add
stc
loope
add
add
fwait
test
leave
jmp
shrl
nop
add
xchg
ds
add
add
repz
ss
filds
push
mov
pop
movsl
add
add
add
add
js
add
add
lods
movsb
pop
or
test
adc
push
out
cmp
insl
sbb
int
lcall
xchg
push
test
fstpl
filds
add
add
mov
add
sbb
addr16
cmpsb
das
movsl
loope
xchg
ja
xor
push
addb
xchg
lods
imul
ficompl
add
add
out
out
push
xchg
sbb
enter
push
outsl
enter
mov
adc
repnz
add
add
scas
xorl
or
add
add
dec
daa
orb
sub
adc
insl
loope
xchg
push
push
leave
adc
fwait
sarb
or
mov
shrb
or
add
add
loop
mov
add
add
inc
pop
shrb
add
add
mov
out
cmpsl
in
int
xchg
andb
add
repnz
xor
addb
fcoms
xchg
add
add
add
lock
add
or
mov
add
adc
or
dec
mov
xchg
dec
add
inc
lahf
jge
adc
pop
dec
adc
xor
jmp
or
mov
lds
in
loop
pop
push
jnp
out
dec
add
outsb
pop
fwait
int
sub
dec
or
mov
out
ret
xorb
dec
dec
ret
aaa
sar
mov
lret
in
jecxz
xchg
cwtl
or
mov
add
std
pushf
jne
call
or
out
mov
iret
cmp
mov
add
daa
sub
mov
sarl
add
add
jns
pop
mov
sub
add
add
mov
std
cltd
and
add
mov
ljmp
or
add
add
fistpl
cmpsb
push
ret
pushf
mov
adc
jmp
js
sub
add
add
pop
xchg
adc
add
jno
jp
cmp
push
jbe
or
add
add
push
mov
pop
push
pushf
gs
rorl
inc
stos
jp
xor
or
lods
lret
fimuls
or
xchg
in
fmull
add
add
decl
inc
out
adc
add
add
jo
pushf
mov
add
add
mov
add
shll
sub
cltd
jl
cmp
mov
add
lcall
shrl
lods
sbb
ss
jl
mov
mov
movsl
cmp
stc
imul
mov
test
xlat
outsl
popf
imul
lds
add
add
cmpsl
mov
or
push
les
add
mov
xor
xlat
cs
ret
jp
push
ds
cld
in
inc
in
mov
rep
ljmp
icebp
mov
push
out
jne
je
lock
dec
xchg
stc
movsl
cmp
push
mov
fcmovnb
dec
aam
dec
add
add
lods
push
ds
enter
mov
inc
add
add
mov
jmp
lcall
in
sbb
add
add
adc
sub
mov
popa
and
inc
add
icebp
mov
jae
push
cs
sbb
pop
mov
inc
lcall
push
xchg
int3
jb
pop
sbb
add
add
xchg
in
addr16
out
fistps
lcall
sbb
add
add
sbb
cs
or
mov
push
push
lcall
out
clc
mov
pop
jb
add
add
jbe
pop
cmc
mov
out
add
add
add
jb
idiv
out
mov
cwtl
jae
dec
add
icebp
mov
lahf
test
insb
add
mov
imul
data16
rorl
mov
fdivl
xchg
cmc
das
inc
and
mov
pop
enter
xchg
hlt
movsb
adc
mov
cmp
jmp
add
add
mov
cmpsl
dec
aad
add
add
jge
cmpsb
jle
call
lcall
xchg
xorb
es
cmp
add
add
std
xchg
test
pop
popa
bound
aaa
inc
cmc
xchg
xor
mov
call
add
rcr
aam
cmp
adc
mov
std
fwait
cmp
sbb
sub
add
add
cmc
pop
andl
mov
jne
fnstsw
lods
mov
outsl
and
nop
mov
push
das
loop
inc
rcrl
jne
in
xorl
jl
popf
loope
dec
add
add
add
add
add
jmp
shr
arpl
pop
leave
aam
add
add
add
pop
outsb
mov
test
and
add
loop
pop
sbb
add
add
add
test
leave
rorb
fwait
insl
dec
lcall
std
mov
add
xor
clc
cmp
push
cmp
div
or
add
add
jmp
shrl
mov
sbb
mov
mov
sbb
add
add
add
add
add
mov
sub
inc
aas
mov
icebp
mov
add
add
mov
sbb
mov
push
hlt
xor
push
push
push
adc
add
cmpsb
sbbl
in
pop
lret
cmp
sbb
mov
mov
in
repnz
and
add
add
sub
mov
call
add
je
insl
inc
add
add
repnz
scas
sbb
outsl
and
mov
scas
ficomps
push
int
bound
data16
scas
pop
push
mov
stc
in
pop
sbb
or
and
mov
pop
sub
xchg
leave
scas
mov
add
in
add
inc
adc
mov
xor
add
out
cmp
dec
mov
pop
test
cwtl
lahf
hlt
stos
imul
mov
add
add
mov
mov
add
cmp
mov
jecxz
fcomps
loope
cmp
int3
mov
iret
push
dec
dec
push
das
inc
add
add
iret
loop
int
pop
repz
pop
sbb
or
add
add
add
frstor
into
data16
lods
sub
lods
sahf
xchg
call
jae
out
sub
pop
lods
and
mov
adc
lret
dec
xor
lds
mov
in
add
mov
inc
movsl
add
xor
les
add
add
cs
aam
test
push
dec
add
add
fstps
sub
mov
adc
arpl
mov
jecxz
mov
aad
aam
mov
daa
test
push
xchg
cmp
aam
cld
cmpsb
int3
stc
popf
push
mov
scas
fildll
push
xchg
mov
pop
xchg
xor
push
cltd
fnstsw
pushf
sti
dec
push
dec
add
add
push
call
add
add
mov
cmp
lock
xor
sbb
not
jne
sbb
das
pop
sbb
je
and
add
add
icebp
and
add
out
bound
mov
in
inc
sbb
shlb
jnp
add
outsb
cli
iret
or
add
add
push
adc
jle
adc
cs
mov
push
hlt
pop
sbbb
mov
xchg
add
and
cmp
out
movsb
cli
arpl
add
add
or
ja
and
sbb
stc
stos
mov
mov
bound
mov
dec
add
add
add
rclb
mul
ffreep
test
ds
insb
add
add
arpl
jg
inc
and
mov
in
addl
or
lods
sar
insl
rcrb
mov
mov
push
add
add
add
add
adc
and
in
fnstsw
jno
hlt
dec
add
insb
add
jnp
add
mov
ss
rcrl
mov
cmp
mov
adc
jne
fwait
pop
sbb
xor
pop
ss
add
add
mov
and
ret
mov
ja
add
add
add
and
xchg
pop
mov
fwait
jp
int3
xor
lcall
cs
jns
outsb
and
sbb
add
test
ja
sbb
in
test
jl
cmp
push
jge
mov
add
add
fbstp
xor
inc
add
add
jecxz
pop
or
inc
fldcw
insl
fldl
add
pop
push
mov
stos
cmp
pop
loope
pop
mov
xor
sti
mov
xchg
test
mov
pusha
add
add
and
mov
add
add
leave
shl
repz
mov
jecxz
out
out
push
ja
and
add
add
gs
daa
mov
add
out
sbb
daa
mov
data16
sub
rcll
pop
mov
add
add
dec
mov
test
es
into
pop
aaa
cmp
push
into
pop
int
addr16
repnz
sarl
xlat
repnz
xchg
pop
notl
sbb
inc
dec
fdivr
stos
aam
jbe
and
add
jp
dec
repnz
add
mov
pop
mov
mov
je
dec
add
adc
dec
cmp
or
mov
mov
addr16
cltd
cli
adc
xchg
inc
add
sbb
enter
iret
jge
icebp
nop
adc
fimull
cmp
or
jmp
xchg
pop
or
mov
aas
sub
pop
inc
jne
xor
xor
repnz
jecxz
or
popf
ljmp
add
pop
pushaw
add
jo
and
jp
insl
mov
shl
stos
sub
adc
nop
pop
ljmp
or
loopne
adc
add
cmc
or
adc
cmp
and
xchg
push
mov
or
repnz
out
fwait
jb
sub
add
mov
jl
into
and
add
add
ss
cmp
mov
sarl
je
add
mov
mov
movsb
andl
into
rorl
add
add
das
mov
rorl
xlat
cmp
mov
repz
mov
jg
lcall
add
or
mov
cs
pop
adc
dec
push
outsl
push
xchg
xor
adc
mov
js
es
ret
lds
dec
push
mov
sbb
or
mov
test
std
xchg
hlt
mov
fdiv
mov
add
stos
pop
fimuls
dec
cmp
fwait
xchg
pop
outsl
aam
inc
inc
add
add
add
iret
insb
add
imul
add
jg
jmp
add
add
add
push
jecxz
add
or
lret
mov
add
add
add
sbb
add
adc
addr16
mov
aas
sbb
popa
mov
gs
dec
add
add
add
add
stos
faddl
ljmp
cmp
jae
mov
inc
mov
daa
push
adcb
xor
loop
push
cs
mov
add
jecxz
sbb
or
dec
xchg
sub
jae
stos
repz
int
test
das
stos
aam
test
add
push
inc
stos
es
jb
mov
add
add
cmpsb
dec
xchg
inc
add
jge
push
sbb
ss
ljmp
add
pop
fimull
add
add
add
and
add
add
arpl
dec
lods
sbb
cmpb
hlt
out
leave
gs
xchg
mov
cmp
adcb
loop
sub
mov
mov
pop
push
add
in
data16
test
mov
rorb
data16
jae
das
cmp
das
add
xchg
test
add
add
hlt
out
push
into
repnz
imul
sub
mov
mov
push
inc
lods
push
inc
inc
add
add
fistps
add
fildll
mov
loopne
adc
add
inc
loopne
mov
inc
and
add
add
mov
pop
and
mov
cmp
inc
shll
mov
mov
cmp
hlt
movlps
add
xchg
lret
xorl
add
add
or
dec
sarl
sbb
xchg
and
rclb
fbstp
add
xor
rolb
add
add
add
call
pop
pusha
add
push
dec
aas
lcall
pusha
add
add
fldl
add
push
popa
cvtdq2ps
mov
add
add
addr16
cmp
xchg
out
fwait
sti
adc
mov
add
add
sub
mov
xchg
insb
add
add
mov
hlt
je
mov
add
add
fmull
cmp
xor
add
sbb
jmp
add
outsb
popf
test
add
add
ss
ljmp
in
xchg
xchg
out
dec
mov
test
test
mov
add
add
add
repnz
scas
mov
add
mov
scas
ja
fnstsw
add
add
shlb
test
je
or
lret
inc
xchg
mov
stos
int
lock
inc
lahf
movsl
sbb
sarb
mov
push
test
dec
int3
cmp
in
and
lahf
mov
mov
mov
jp
add
add
add
fnstcw
jp
fnstcw
lods
mov
or
dec
in
jnp
mov
cmp
add
add
mov
stos
add
add
and
add
pop
test
mov
sti
jae
sarb
jl
dec
mov
jl
sbb
add
cld
xor
or
add
mov
in
sub
pop
mov
pop
gs
mov
inc
push
jl
sbb
push
pop
mov
add
xor
test
aas
push
testb
mov
mov
mov
sahf
mov
loopne
xchg
shl
shl
stos
push
add
mov
pushf
xchg
mov
mov
mov
add
aam
push
cs
jns,pn
dec
cmpsl
scas
dec
xchg
lock
sbb
shlb
sbbw
sti
popf
sbb
in
jne
inc
repnz
add
add
add
mov
adc
outsb
adc
mov
les
notb
scas
cmc
mov
add
sarl
in
scas
fnstenv
dec
cli
movsl
mov
add
call
pop
jns
add
add
add
cmp
movsl
dec
or
jns
jl
sbb
xchg
sub
in
dec
mov
imul
xor
stos
out
in
push
inc
mov
popf
xchg
fiaddl
int3
xchg
add
mov
pop
mov
add
add
shlb
aam
jl
sub
add
push
ds
xchg
mov
dec
xor
mov
add
imul
mov
mov
add
add
jno
mov
jmp
inc
add
add
jle
cmp
mov
call
adc
stc
cmp
xchg
sub
add
jbe
push
jge
or
add
dec
add
test
push
gs
rorl
mov
add
or
mov
pop
push
jnp
pop
ficoms
add
add
pop
xchg
scas
push
sbb
icebp
lret
mov
mov
xchg
repnz
jp
xchg
sarb
add
add
xor
add
jmp
in
push
addr16
insl
cmp
sub
xchg
adc
push
sahf
icebp
pop
ljmp
fidivs
cwtl
and
xor
out
mov
pop
lret
add
cmc
jne
outsl
sub
addr16
pop
aam
xchg
inc
mov
add
lock
sbb
ja
cmp
movsl
out
push
es
xlat
pop
adc
add
mov
lret
mov
cltd
mov
inc
xor
mov
sbb
jle
fldcw
mov
jne
cmp
push
cmp
into
xchg
sbb
push
cld
mov
out
enter
add
int3
fnstsw
lea
add
rolb
mov
add
add
and
sbb
pop
pushl
jle
mov
xor
add
add
push
sbb
add
add
cmp
pop
mov
mov
imul
mov
fnsave
push
out
dec
dec
mov
mov
in
xor
lret
cmp
add
inc
loope
sbb
xchg
scas
push
cmpsl
daa
xor
mov
jne
das
xchg
adc
orl
mov
out
cwtl
push
fisubrs
in
je
and
adc
pop
bnd
adc
mov
xchg
mov
xchg
cmp
jbe
popf
mov
xor
bound
and
mov
add
push
das
jmp
dec
or
dec
add
sub
mov
aas
dec
add
add
mov
movsb
rcr
push
int3
and
add
add
cmp
out
sahf
cmp
cmp
loop
pop
nop
imul
add
mov
cltd
sbb
add
mov
pop
sub
aas
idivb
insb
add
add
mov
add
inc
mov
gs
mov
dec
out
addr16
in
mov
sbb
push
xchg
add
mov
xchg
or
lds
push
lds
fcomp
cli
xchg
sub
mov
in
mov
call
aas
push
je
pop
push
lcall
mov
mov
xor
pop
push
pusha
add
add
mov
add
add
out
xchg
dec
push
test
push
xor
pop
call
and
add
add
repz
fldl
aam
inc
jmp
jo
lea
jp
adc
mov
xor
mov
jnp
clc
mov
pop
daa
xchg
xor
pop
inc
add
add
sbb
mov
adc
mov
cmp
jecxz
push
jg
jns
pop
pop
in
or
rcll
pop
mov
sar
cmc
sti
xchg
cmp
inc
arpl
aas
push
push
jne
jl
leave
dec
xchg
cmp
inc
dec
add
frstor
push
push
jmp
mov
and
add
add
jbe
add
add
insb
add
add
xchg
rcr
loopne
dec
cmp
inc
stc
adc
dec
cli
mov
sub
fcompl
pop
mov
pop
inc
sbb
fidivrs
movsl
ror
xchg
dec
int
mov
dec
repz
jo
xor
subl
mov
mov
push
lahf
jb
jecxz
and
mov
or
mov
and
adc
iret
jle
push
pusha
add
adc
int3
enter
add
fisubs
repnz
or
mov
mov
int3
fsubs
rorb
rorl
push
adc
cli
push
jecxz
cmp
add
push
push
push
xor
inc
add
add
dec
mulb
mov
into
cmp
add
add
mov
fmulp
leave
xor
bound
test
shlb
aaa
push
cmp
adc
test
mov
add
les
jecxz
sub
mov
mov
xor
cmc
mov
hlt
jne
call
add
and
add
add
xchg
cmp
add
push
scas
mov
sbb
or
mov
xchg
add
lret
add
out
out
fldcw
cld
and
cmc
add
mov
fisubrl
add
add
jb
adc
jp
or
in
int
test
popf
daa
sbb
cwtl
test
add
mov
jmp
xor
mov
xor
push
jp
pop
rcrl
hlt
sub
xchg
pop
jae
push
xor
popf
cmp
fldt
xor
xlat
rorb
add
subl
add
fdivl
mov
stos
mov
cmp
mov
add
test
pop
sti
ds
add
add
notl
mov
add
add
add
or
add
iret
mov
xlat
jmp
inc
mov
xor
add
add
lods
enter
jmp
add
add
sub
out
int
sahf
ss
mov
adc
mov
inc
les
mov
ficompl
mov
stc
lahf
cmpsl
xchg
in
or
push
sub
mov
or
mov
loop
js
pop
aas
mov
mov
std
ss
sub
dec
or
add
add
xchg
arpl
adc
cmp
ficoms
outsb
ret
jmp
mov
ja
imul
xor
add
mov
mov
xor
imul
andl
mov
xchg
jp
push
add
jae
jne
cld
dec
bound
dec
add
add
pop
adc
add
dec
mov
mov
fwait
call
test
mov
dec
add
add
or
push
inc
imul
jg
sbb
cmc
dec
add
add
lahf
jle
jmp
out
pusha
add
add
add
add
jno
jp
push
mov
mov
fldcw
pop
cmpsl
test
enter
imul
jns
jne
mov
add
add
enter
cmc
push
pop
adc
xor
add
push
bound
stc
stos
ljmp
sbb
pop
xchg
movsb
lds
popf
xchg
ret
arpl
mov
and
add
add
outsb
adc
mov
in
push
or
inc
test
test
inc
jecxz
insl
je
inc
inc
in
les
iret
jno
leave
xor
js
push
out
jecxz
fcompl
mov
out
nop
adc
adc
int
loope
pop
movsb
enter
in
push
xchg
call
add
add
add
enter
cmp
push
pop
mov
mov
lock
inc
jmp
pop
addr16
scas
xor
scas
push
push
mov
xor
popa
mov
stos
pop
pop
push
ret
daa
orb
xchg
push
sahf
inc
lds
movsl
scas
add
ja
push
lods
add
push
or
add
ljmp
cmp
cmp
maxps
sub
mov
adc
pusha
add
add
lods
cli
mov
hlt
iret
push
jo
inc
jo
popa
shl
aas
or
xlat
nop
push
mov
adc
add
add
insb
add
add
mov
in
or
fmull
xchg
leave
das
push
mov
jmp
add
mov
push
pusha
add
add
inc
add
add
ret
add
insb
add
add
mov
inc
push
fldl
dec
jl
fisubs
inc
add
add
gs
xor
insb
add
fsubrl
aad
push
inc
add
add
cwtl
jno
sti
clc
xchg
ljmp
adc
into
sub
xchg
pop
jle
inc
add
xchg
add
popa
push
popa
mov
fwait
jl
arpl
add
add
ja
add
movsl
iret
mov
aam
pushf
xchg
xor
das
pusha
add
testl
xchg
call
add
add
mov
jo
out
xor
pushf
sbb
mov
add
add
or
xor
add
add
mov
leave
xchg
aas
insb
add
andb
shl
les
shl
es
add
cmp
dec
add
xchg
divb
out
adc
pop
in
sub
ljmp
add
stc
xor
jecxz
test
add
add
pop
testb
push
sub
add
add
pusha
add
pop
and
mov
sbb
add
rcrb
cmp
push
cld
mov
mov
mov
add
ds
sbb
add
add
sub
add
add
mov
outsl
or
dec
movsl
ljmp
cmp
gs
dec
rcrl
fwait
cwtl
push
pop
add
add
add
or
mov
mov
cmp
das
fcmovnu
add
hlt
sbb
add
add
fldt
add
ja
lds
scas
cmpsl
and
out
add
sbb
push
pop
dec
popf
dec
xorl
cmp
out
in
or
loopne
lea
add
scas
outsl
adc
sbb
mov
lcall
add
into
mov
add
sub
push
xchg
loope
push
jnp
sub
enter
shrb
jnp
xor
hlt
iret
inc
add
add
cltd
add
mov
add
add
out
lea
or
inc
cmp
sbb
add
lcall
adc
jae
cmp
std
jg
mov
and
and
mov
jne
loopne
hlt
push
sbb
adc
imul
sbb
lea
push
pop
cs
pop
xchg
mov
into
mov
imul
lds
repz
xchg
imul
movl
imull
add
add
fidivrl
mov
popa
inc
add
push
mov
mov
sbb
add
add
add
out
inc
stos
test
dec
sub
add
add
stos
std
ret
iret
lret
out
not
loope
js
add
add
stc
popf
fists
orl
lret
sub
es
test
push
push
add
mov
mov
sub
and
add
add
mov
inc
test
jne
cltd
leave
pop
into
repz
sbb
mov
mov
add
int3
pop
fnsave
mov
clc
or
mov
insl
adc
cmp
add
pop
std
rclb
add
mov
imul
mov
add
mov
mov
add
ss
enter
cli
xor
adc
xchg
cmp
fstps
inc
add
jmp
shll
lcall
sbb
sub
add
add
mov
push
dec
add
add
add
pop
sbb
imul
add
sbb
add
movsb
xchg
mov
jg
jbe
xor
mov
cmp
mov
mov
jle
add
cltd
cmc
jae
add
rcrb
shll
mov
jl
xchg
sbb
aaa
pop
mov
add
mov
cmc
bound
mov
lock
inc
or
inc
in
adc
fsts
hlt
xor
and
add
add
add
or
add
add
scas
ret
in
rcrb
pop
rclb
rorb
push
fidivs
cmp
adc
xchg
add
stos
lcall
loopne
scas
ss
lock
aam
std
shrl
lretw
jnp
mov
add
add
sbb
out
test
icebp
xlat
mov
mov
lods
push
in
mov
out
loop
test
add
mov
adc
add
mov
and
mov
jns
or
pop
or
pushf
sub
add
enter
repnz
or
std
in
clc
sbb
enter
movb
loopne
xchg
das
sti
push
push
and
add
add
sbb
add
mov
adc
je
daa
subl
add
add
mov
jo
push
inc
in
mov
add
add
jmp
add
add
add
sbb
add
add
dec
mov
add
push
or
mov
popa
cwtl
repnz
cmp
jns
cmp
mov
aam
sbb
push
sub
mov
fcomip
cmp
popf
test
mov
pop
mov
ja
outsb
stos
mov
movsb
xchg
out
enter
mov
add
jg
sbb
add
mov
in
sbb
enter
in
pop
dec
push
stos
popa
lahf
inc
pop
movsl
and
fldenv
imul
cmp
lcallw
xchg
sbb
mov
inc
int3
loop
imul
fbld
sub
scas
popf
loope
pop
and
test
mov
xor
testb
xchg
out
adc
lret
adc
xor
jmp
enter
sub
add
add
shlb
xchg
pop
jae
js
dec
pop
jecxz
aas
out
sar
cwtl
fwait
jecxz
repnz
out
inc
jns
stc
add
add
adc
out
or
xor
mov
dec
and
xor
sahf
lahf
dec
mov
mov
add
cmp
mov
jns
out
lea
int3
mov
sti
xor
add
add
xchg
arpl
movsb
push
std
stos
mov
popf
icebp
imul
jns
add
add
mov
ljmp
add
cmpsl
sub
pop
stos
lahf
in
addr16
add
add
push
fsubrp
xchg
outsb
mov
pusha
add
add
mov
sbb
add
add
arpl
sbbl
scas
mov
sbb
ljmp
out
mov
push
cmp
add
jbe
add
loope
fidivl
add
add
mov
pop
or
cli
and
sbb
add
add
loope
pop
je
aas
mov
mov
add
inc
push
pop
mov
inc
fimuls
push
inc
dec
xor
add
add
ss
nop
loopne
pandn
sbb
mov
pusha
add
add
push
inc
jnp
mov
xchg
fwait
xor
movsb
adc
roll
mov
sarl
pop
sahf
or
mov
sbb
sbb
or
mov
add
add
addb
add
xchg
add
mov
dec
add
notb
and
leave
aad
add
cmp
mov
add
mov
call
mov
movsl
jbe
out
mov
pop
test
add
add
dec
sahf
mov
scas
xchg
je
add
sbb
mov
adc
mov
sbb
dec
sbb
cvtpi2ps
add
add
lret
lahf
xlat
push
leave
gs
add
inc
scas
scas
in
xlat
mov
dec
add
add
inc
add
add
insb
add
enter
popf
sub
add
sbb
add
scas
cmpsb
sahf
push
xor
loope
lret
dec
mov
add
mov
ds
aaa
jmp
xchg
pop
movsl
and
mov
sti
dec
add
bound
cmp
call
aad
pop
aad
test
add
push
sub
jecxz
sbb
rorl
mwait
push
fisubl
add
sub
add
add
mov
add
add
fisttps
data16
xchg
sarb
roll
add
repz
cmc
ret
add
dec
sbb
test
inc
cli
cmp
ja
sbb
movsl
mov
add
add
mov
sub
mov
outsb
outsl
xchg
aad
add
or
mov
pop
jg
or
add
aad
fisubs
dec
leave
push
loop
fiadds
lret
sbb
add
adcb
push
mov
rcrb
out
mov
roll
cld
jb
add
mov
mov
cmp
push
jmp
add
cbtw
aad
hlt
mov
loopne
out
pop
jg
add
add
inc
jg
scas
dec
add
clc
pop
xor
mov
add
mov
inc
data16
aam
in
add
or
pop
push
push
xor
mul
inc
add
das
lcall
xchg
stos
dec
add
add
or
add
add
ret
add
add
add
movsb
in
add
add
fwait
sub
ss
dec
fisubs
jg
cmpsb
fisubs
add
xor
jo
testb
and
add
lret
arpl
xchg
jb
push
outsb
in
pop
push
out
xchg
cwtl
repz
loopne
repz
jmp
into
ret
xchg
mov
stc
dec
add
add
cwtl
or
add
add
mov
adc
add
cs
mov
add
fcompl
inc
push
dec
xor
mov
arpl
push
jns
push
mov
lcall
int
jnp
lret
add
cmp
mov
add
jno
loopne
fldl
add
add
add
or
add
add
xor
int
add
sbb
add
push
loop
pop
shlb
lret
mov
sbb
cmpsb
mov
mov
xor
add
fwait
inc
add
inc
add
push
push
jmp
sbb
mov
adc
test
sbb
inc
dec
fdivs
inc
pop
jp
mov
add
add
mov
stos
jcxz
mov
icebp
xor
lcall
add
adc
mov
add
xlat
pop
fidivrs
pop
jbe
and
add
fnsave
mov
test
adc
mov
jle
test
mov
and
or
cs
aaa
xchg
adc
test
repz
dec
add
add
repnz
add
add
dec
jmp
std
test
out
enter
dec
xchg
xchg
sbb
mov
xchg
xchg
and
lcall
stc
mov
jp
loop
pop
adc
repz
in
inc
ret
adc
les
lcall
cmpsb
push
sets
xchg
test
out
test
loopne
dec
push
ja
into
test
inc
add
add
hlt
daa
imul
xchg
outsl
loopne
sti
lds
add
pop
sub
ljmp
mov
nop
xlat
push
shr
imul
mov
add
cmpsb
inc
mov
xchg
mov
pop
imul
aaa
xchg
pop
pop
ror
lods
fidivl
dec
pop
mov
out
pop
frstor
inc
dec
push
pushf
xchg
push
jb
add
add
ficomps
mov
mov
xchg
jne
movsb
fidivrs
jae
not
xchg
in
ret
or
add
adc
outsb
test
jbe
hlt
movsl
movsb
pop
or
add
add
cmp
loop
and
cmp
cmpl
ds
mov
add
add
and
outsb
mov
mov
cmp
ret
push
loopne
adc
daa
jg
xor
cmpsl
dec
add
cmc
orb
test
mov
push
jo
jnp
xchg
xchg
stos
jb
mov
insb
add
add
xchg
cmp
xchg
loopne
nop
fidivrs
stos
cmp
mov
sbb
mov
dec
mov
cmp
lods
pushf
lret
dec
push
push
ds
stos
repz
jle
inc
cmp
sub
add
js
cmpsb
outsl
xchg
add
add
aad
pop
dec
or
lret
mov
and
mov
mov
mov
push
mov
add
cwtl
and
lahf
hlt
shr
inc
add
add
xchg
push
xchg
cwtl
mov
lods
ja
add
sbb
mov
pop
add
jno
mov
jb
int
mov
lods
fstl
aam
inc
lret
jg
jle
and
add
hlt
mov
and
mov
int3
mov
push
insl
aad
fscale
add
add
add
add
add
cmc
lret
clc
sub
add
or
cmp
add
add
push
pop
ja
movsl
out
insb
add
add
add
popa
cli
dec
pop
les
xchg
push
adc
daa
insl
sbb
add
and
sub
add
adc
xor
adc
mov
mov
push
inc
ds
add
rorl
push
add
rcrb
xchg
loopne
add
push
stos
mov
cmc
stos
mov
jl
adc
adc
movsl
mov
ds
or
xor
and
into
push
xor
inc
ret
add
ret
push
xchg
icebp
insl
add
arpl
mov
out
popf
int3
jmp
ret
in
enter
add
sbb
xlat
aaa
jns
test
inc
aad
or
mov
cmp
dec
add
add
add
faddl
push
inc
ja
mov
out
mov
in
loope
fstps
or
push
dec
popf
add
add
mov
dec
mov
xor
ss
pushf
aaa
stos
lock
cmc
or
mov
pop
lahf
outsb
fidivs
dec
in
mov
and
sbb
idivb
xor
add
jns
ffreep
jg
int3
jp
shlb
jle
fdivrs
add
add
and
mov
cmp
test
out
into
dec
jecxz
pop
loop
or
xchg
pusha
add
mov
in
hlt
push
jnp
fcom
sarb
dec
add
add
sahf
data16
add
push
and
add
add
icebp
jno
adc
call
add
add
shrl
add
outsl
pusha
add
adc
add
add
add
icebp
mov
filds
inc
mov
mov
inc
fcoml
jecxz
mov
data16
add
add
sbb
cmp
test
cltd
and
xchg
jne
decb
jno
jb
fisttpl
add
push
imul
filds
daa
or
add
adc
movsl
jb
ljmp
mov
dec
cs
mov
push
sub
inc
jbe
add
mov
xchg
or
enter
rcrb
mov
scas
jg
adc
jecxz
lods
pop
es
mov
jbe
insl
enter
sub
sub
mov
loop
clc
out
enter
ljmp
pop
pop
pop
cmpsb
rolb
cwtl
lret
loopne
leave
imul
add
add
outsl
adc
push
add
add
jmp
outsb
in
std
jb
mov
hlt
mov
xchg
fiadds
mov
xchg
jae
add
add
push
movsb
xor
lods
add
jns
lods
xchg
mov
adc
push
xor
xchg
pop
jl
dec
add
mov
add
or
add
add
add
andb
add
sbb
cli
mov
add
cltd
pop
jmp
mov
in
je
lods
or
mov
add
add
pop
mov
or
add
add
mov
lcall
add
sbb
mov
add
pop
pushf
in
pushl
in
add
lock
fwait
or
add
add
add
sbb
inc
pusha
add
add
inc
pop
pop
sbb
xor
lods
testb
add
add
jnp
mov
data16
push
sub
popf
sbb
jl
addl
mov
xchg
shl
jne
dec
andl
insb
add
dec
stc
stc
out
add
add
subb
add
jge
cmc
cmc
mov
cmp
sbb
popaw
das
push
movsb
push
pop
dec
add
push
cmp
mov
add
imul
mov
addb
add
add
cmp
dec
cmpsb
push
repz
mov
dec
push
push
xchg
dec
add
add
cmpsb
xchg
jbe
cli
out
test
mov
xchg
mov
movsl
mov
loope
loopne
fldt
mov
aaa
inc
cwtl
inc
xor
push
jle
cmp
mov
sbb
ror
pop
or
add
add
ret
div
fstp
and
repz
aaa
sub
add
add
jbe
push
pushf
cwtl
les
add
add
add
add
add
incb
mov
dec
jb
je
lea
dec
add
mov
sub
xchg
pushf
mov
add
push
sub
pop
shrl
aam
iret
mov
xchg
push
aas
adc
stos
mov
jmp
mov
enter
add
adc
ret
xor
push
lods
jp
add
sub
add
add
mov
ja
pop
or
cmp
leave
inc
dec
push
repz
rclb
sub
mov
mov
cs
gs
and
mov
popf
and
add
add
or
add
add
ds
loopne
xor
add
add
add
or
or
push
jle
out
int
mov
pop
fldcw
add
cmp
inc
sbb
fldenv
enter
cmp
lcall
add
jb
adc
add
iret
or
add
add
cltd
adc
rcrb
mov
sub
add
clc
mov
add
and
dec
clc
orb
or
lret
or
mov
test
call
es
das
lcall
adc
aam
lock
imul
adc
pop
mov
out
cmpsl
xchg
xor
mov
bound
sti
fldcw
in
and
mov
cmp
pushf
jae
add
hlt
push
inc
mov
add
add
add
add
inc
sbb
sub
add
add
cltd
add
mov
mov
jnp
mov
arpl
fcmovne
push
cmp
subl
pop
stos
cltd
rcl
jbe
adc
testb
mov
jnp
xor
mov
icebp
sbb
cli
sub
sbb
cmp
lods
inc
add
sbb
fsubs
xchg
js
push
or
xchg
fdivrs
jl
and
mov
imulb
inc
rorl
add
add
add
int
lcall
or
mov
pop
jmp
lock
add
add
pusha
add
push
stc
jecxz
or
jg
push
xor
add
cmp
in
push
pop
out
mov
add
mov
sbb
inc
sarb
adc
add
aas
dec
push
nop
jg
xor
dec
add
push
inc
add
rcr
into
xchg
and
add
add
out
repz
jae
mov
dec
add
cltd
dec
cmpsl
stos
sub
aam
add
dec
adc
loop
test
or
add
ljmp
pop
fidivrl
add
xchg
adc
add
adc
add
and
int
cli
leave
imull
idivb
pusha
add
add
jl
add
add
add
add
gs
jge
sub
mov
xchg
cmc
enter
scas
pop
pop
add
add
add
pusha
add
lahf
dec
fst
insl
call
test
mov
test
cs
dec
insb
add
and
mov
fidivrs
les
mov
pop
and
mov
add
add
mov
bsf
xor
pop
adc
xor
xor
scas
adc
add
cmpsb
dec
add
push
int3
pop
imul
inc
fwait
es
add
xchg
jg
out
add
popf
push
adc
stc
subl
cmp
lods
pusha
add
add
xor
cmp
notl
out
int3
sbb
fcompl
into
fwait
in
push
add
add
add
add
lea
mov
popf
call
pop
cmp
xchg
punpckhwd
popa
pusha
add
fnstcw
add
lods
jb
add
cmpsb
test
add
int3
idivl
add
out
lcall
leave
mov
bound
in
imul
aam
test
stos
lea
add
or
lea
add
cmpsl
inc
cmpsb
mov
add
jmp
add
rcr
aad
jl
aas
movsl
xchg
loopne
dec
in
shll
dec
add
add
int3
push
cmp
pop
ret
cltd
addr16
or
mov
jecxz
cmc
ja
add
add
cmc
dec
add
outsb
rcrb
fsubr
pop
inc
je
mov
movsl
mov
fstp
push
enter
add
add
mov
mov
dec
fcomps
mov
gs
adc
shl
dec
stos
sub
mov
add
add
andl
sub
mov
add
pop
inc
pushf
fwait
test
add
pushf
xchg
cmpsb
mov
jle
mov
mov
fwait
xchg
cmp
push
test
adc
repz
xchg
cmpsl
pop
sbb
icebp
lcall
mov
adc
sbb
test
stos
jmp
inc
add
mov
push
sub
mov
sbb
ret
xchg
add
iret
mov
jg
add
add
push
lret
pop
lret
jl
in
into
bound
mov
imul
pxor
mov
add
add
add
add
in
outsb
xor
pop
and
ljmp
xchg
in
cmpsl
int3
cmp
fdivrs
mov
aas
sarl
leave
xchg
mov
negb
sbb
cmpsl
jno
add
push
cwtl
or
add
add
fcmovnb
gs
jge
imull
ds
push
or
mov
add
add
add
add
add
loopne
shl
xchg
cltd
lea
popf
dec
sti
mov
cs
cmp
gs
or
scas
jno
mov
rclb
add
add
out
dec
jmp
jp
cmp
xorb
aas
xchg
add
mov
ja
inc
or
mov
add
mov
add
mov
cld
pop
jg
pop
mov
add
mov
and
and
xchg
mulb
add
outsl
cmp
in
cmp
sub
pop
pushf
jo
rol
adc
and
mov
int
xor
aam
scas
cmp
add
mov
dec
add
add
inc
fimull
jecxz
mov
or
add
add
mov
aas
pop
mov
mov
sub
add
add
stos
adc
jbe
add
add
push
hlt
int
inc
add
test
jp
xchg
push
lods
jge
add
push
jb
lea
out
mov
add
out
xchg
daa
hlt
scas
decb
jecxz
mov
or
pop
jl
adc
mov
out
stos
andl
add
add
fnstsw
dec
add
mov
add
add
data16
pop
jg
xor
or
mov
or
add
add
inc
out
ja
fisubs
cmp
rol
inc
push
out
xchg
fcmovnu
lret
out
mov
sub
mov
or
nop
notl
js
mov
sbb
test
mov
ret
push
jbe
pushf
std
inc
pushf
push
and
add
mov
add
mov
int3
mov
xchg
sahf
mov
sbb
add
lcall
fbld
mov
rcrb
add
add
add
xchg
xor
es
mov
cmp
mov
lea
mov
arpl
pushl
ja
jmp
pop
and
sbb
xchg
jno
cmp
js
push
sbb
push
stos
sbb
pop
inc
movsb
sub
add
mov
jne
xor
pop
faddp
fbld
jp
popa
dec
add
add
sub
mov
aas
clc
jg
in
scas
dec
xchg
cmpsb
sbb
sub
mov
and
adc
push
cwtl
mov
insb
add
add
sbb
fsubrs
xchg
sbb
cli
rcrb
fwait
clc
pushl
aad
test
cltd
hlt
mov
cmp
add
add
dec
add
mov
pop
dec
mov
sbb
mov
sub
loopne
movsl
fisttps
adc
xor
inc
pop
adcl
xchg
jbe
in
test
add
add
pushf
in
sub
mov
sub
pop
jnp
mov
cmpsl
cmp
add
out
adc
gs
popa
rep
pushf
cmpsl
inc
pop
sub
mov
add
shll
test
xchg
insb
add
add
daa
sti
lock
cmp
add
add
es
cmpsl
jbe
lret
bound
out
fdivrs
scas
shlb
inc
add
int3
push
inc
data16
mov
aad
inc
jns
out
fcompl
je
xor
into
lret
xor
jmp
mov
mov
jl
mov
jae
in
push
cld
cmp
sti
pop
jge
leave
mov
mov
or
mov
fiaddl
mov
fadd
lock
and
xchg
add
jne
pop
xor
sahf
adc
sub
add
add
mov
lock
popf
xchg
lret
add
mov
add
stos
out
add
cmc
movsb
mov
subl
leave
dec
push
lcall
add
add
cmp
mov
pop
jmp
cmp
in
bound
cwtl
adc
inc
aad
in
dec
push
pop
movl
add
push
xchg
add
mov
add
fldl
addr16
ds
arpl
xchg
and
lcall
mov
mov
add
add
stos
cwtl
push
aad
add
add
mov
rcrb
add
mov
mov
xor
adcl
sub
jne
dec
add
ljmp
add
add
add
sti
dec
push
cmpl
cltd
mov
add
push
call
or
arpl
aas
les
in
aad
pusha
add
add
inc
lret
or
push
or
lret
push
arpl
and
cmp
ss
add
enter
lret
xchg
in
out
mov
gs
add
add
pop
dec
mov
jno
mov
xlat
mov
add
and
mov
add
add
jns
fcoml
xchg
cmpb
stos
sbb
mov
inc
pop
jmp
sub
cmovp
mov
add
add
jge
clc
sub
add
fcompl
scas
pushf
pop
pop
cli
push
ret
sub
or
in
lret
pushl
stc
mov
mov
push
mov
add
sbb
lcall
add
mov
add
add
mov
les
shll
mov
jl
and
js
sbbb
and
mov
adc
sub
sbb
mov
fwait
add
pusha
add
add
rcrb
jae
jbe
add
add
subb
add
mov
cmpsb
xor
and
test
loope
stc
sub
in
cmp
add
jl
add
add
add
clc
add
add
add
into
mov
push
insl
pop
and
loopne
loop
add
mov
out
add
loopne
xlat
pop
mov
dec
sub
add
add
dec
out
mov
add
add
xchg
push
adc
rcrl
test
or
add
add
xchg
dec
jb
sahf
int3
xor
cmp
fld
faddl
adc
xchg
and
inc
mov
and
add
add
xor
imul
or
mov
push
loope
mov
dec
std
adc
add
add
add
xor
dec
add
pop
pop
xchg
jbe
jge
cld
jnp
daa
jbe
imul
scas
lret
adc
and
add
mov
push
shl
clc
push
aad
ljmp
add
add
and
cld
lret
inc
out
cmp
adc
dec
aad
inc
xor
ret
fbld
pushf
sbb
scas
cmp
sub
arpl
insb
add
add
fstpl
and
add
add
add
inc
add
fidivl
push
test
xor
cmp
pop
cld
sub
mov
sub
push
scas
insl
fwait
ret
sbb
addl
add
add
inc
add
add
dec
ljmp
fwait
mov
jno
stc
pop
pop
dec
inc
into
sub
mov
cmpsl
shll
pop
adc
int3
in
adc
pop
cltd
out
sub
add
add
mov
sub
or
and
pusha
add
mov
inc
add
add
sbb
push
mov
leave
jne
into
sbb
aam
ret
loope
add
test
cmc
idivl
inc
sbb
pop
js
jecxz
jno
jp
xor
sbb
dec
imul
add
pop
fldcw
loope
daa
pop
arpl
inc
aaa
mov
and
insl
outsb
mov
int
jo
and
or
ss
push
push
push
dec
pop
xor
mov
add
lea
lds
aad
mov
add
jae
loop
std
cwtl
sahf
in
dec
sub
mov
call
imul
mov
test
jl
ffreep
xchg
movsl
ss
and
mov
in
xor
jnp
mov
fsts
push
cmp
push
lds
add
add
sub
add
add
popl
mov
add
add
xor
pop
scas
adc
jle
add
add
add
mov
add
add
add
jbe
or
jl
adc
fistpl
add
add
jns
xchg
xchg
sub
add
bound
sub
mov
leave
repnz
or
cld
addr16
mov
into
dec
pop
into
aad
push
cmp
xor
adc
or
jg
cmp
mov
int3
data16
insb
add
add
int3
outsl
pop
cmp
jne
mov
sub
ja
pop
mov
leave
mov
inc
mov
rorb
mov
scas
jne
lahf
cmp
mov
add
jb
punpckldq
dec
jo
jbe
adc
jmp
mov
or
add
fistps
lret
sbb
sbb
xor
mov
add
add
cld
add
sub
in
cwtl
mov
fsub
lcall
icebp
ret
inc
mov
imul
cmpsb
push
loop
sbb
movsb
lret
mov
add
notb
cmp
in
popf
scas
and
fbld
dec
add
add
cmp
xor
call
insb
add
cltd
fdiv
mov
xor
or
add
xlat
sbb
xor
add
or
mov
push
cld
jp
aaa
xchg
xor
repz
add
add
sub
ret
loop
call
ss
mov
add
fisubs
xchg
loopne
add
fcoms
mov
mov
aaa
xor
mov
sbb
jno
test
and
add
add
add
mov
add
add
leave
sbbl
ja
shll
dec
enter
mov
nop
les
add
add
jmp
xchg
inc
inc
addr16
xchg
mov
nop
aaa
call
add
ret
shlb
add
jge
sbb
pop
mov
sub
divb
nop
cwtl
out
jmp
push
repz
sub
mov
xor
add
popf
fistps
cmovle
add
add
scas
mov
mov
std
lds
test
pop
or
ret
inc
adc
cli
iret
xchg
jb
and
dec
lret
movsb
jl
in
test
xor
fsubr
adc
dec
out
cmp
movb
popf
mov
or
push
cmp
test
add
cmp
nop
dec
mov
xchg
mov
ret
sbb
mull
jne
push
pop
jg
nop
popf
and
add
sar
daa
loope
shl
ficomps
mov
shlb
add
xor
test
test
mov
xchg
mov
sbb
push
pcmpgtb
mov
test
push
adc
insl
sbb
bnd
add
lret
mov
add
scas
ret
enter
test
mov
or
xor
int
out
push
inc
pushf
repz
sbb
add
add
lcall
aaa
push
sub
add
add
adc
pop
inc
jae
or
add
add
gs
ret
outsl
iret
fildll
mov
cwtl
xor
outsb
jmp
sbb
iret
cmpsl
or
add
add
mov
pop
pop
pushf
cli
or
cmp
add
lods
imulb
add
add
notb
mov
xchg
aad
inc
mov
les
add
rorl
xchg
adc
out
or
mov
add
mov
xor
pop
sub
dec
add
add
add
std
dec
xchg
pop
adc
inc
mov
add
jmp
add
add
sub
xor
add
stos
sahf
add
aad
adcb
dec
add
mulb
int3
push
out
lods
add
add
xor
cmpsl
aam
xor
sti
imul
pop
add
add
add
jg
mov
mov
scas
jnp
add
add
inc
add
add
pushf
inc
pusha
add
add
push
mov
add
add
mov
dec
add
add
frstor
mov
mov
ret
fsubrs
popa
insb
add
add
sbb
jnp
ljmp
add
fists
lcall
add
test
and
adc
jb
cld
cmpsb
add
add
add
int3
stc
in
mov
ret
mov
adc
xchg
xchg
fwait
xorb
lods
into
sub
pop
dec
add
stos
and
add
add
inc
adc
sub
jae
sbb
xchg
sub
insb
add
lret
xchg
adc
add
add
aas
cwtl
jle
xor
loopne
movsb
test
jae
adc
cmp
add
add
push
sub
mov
push
movsl
dec
mov
xchg
xchg
sarb
lods
mov
push
add
pop
or
pop
cmp
add
add
add
add
sub
mov
dec
addr16
sbb
lds
scas
jns
stos
inc
mov
data16
scas
fdivr
rorb
aas
leave
lret
xor
test
ja
add
add
inc
add
add
ljmp
add
pusha
add
and
mov
es
mov
lahf
movsl
cmp
add
cmc
cmp
push
xchg
sahf
pusha
add
or
inc
adc
add
add
mov
pop
pop
imul
gs
stos
lcall
aam
add
add
testb
cld
jnp
add
sub
add
add
les
test
fadds
jae
pop
mov
shll
inc
inc
adc
add
sarb
inc
add
add
pop
pop
loopne
xchg
mov
or
int3
clc
push
int
lahf
ror
inc
test
add
add
out
nop
cli
inc
stos
outsb
inc
add
add
add
inc
fadd
pop
cmp
add
outsl
daa
rol
xchg
rorb
add
pop
adc
xor
mov
repnz
inc
and
add
add
roll
add
stos
pop
cltd
ret
mov
test
jns
add
jbe
and
mov
and
add
add
add
mov
push
ret
fists
add
sbb
call
cltd
fiaddl
jne
mov
mov
flds
add
add
mov
pop
mov
inc
jno
ds
popf
sarl
pop
mov
push
cmp
sti
in
ds
outsl
bound
mov
pop
add
imul
loop
dec
loop
cmp
add
or
cmp
mov
pop
mov
mov
adc
ret
inc
lock
fcmovb
fmuls
mov
add
add
and
xchg
xor
mov
xor
jmp
test
xorl
or
add
add
shl
push
insl
pusha
add
add
mov
sbb
sti
fsubl
fnstenv
pop
fucomp
xor
fldl
push
arpl
dec
add
add
add
call
add
dec
add
add
mov
cmp
add
add
ss
aaa
push
pusha
add
add
jmp
jno
add
outsb
addr16
icebp
sbb
add
out
mov
test
ja
pop
add
add
add
sub
cmp
add
or
dec
add
add
jnp
out
test
ret
rcrb
sub
jmp
cli
loop
fdivs
mov
ss
jae
pop
sti
divb
shll
movsb
mov
int
dec
and
sti
inc
lock
in
and
aad
sarb
es
jge
add
add
and
add
add
jmp
push
push
repnz
add
jbe
add
add
jae
outsl
push
imul
pop
jg
xchg
fisttpl
add
addb
or
mov
add
add
scas
lcall
mov
lahf
icebp
rcl
push
dec
mov
add
mov
add
add
fadds
and
bnd
jnp
pop
test
lds
jbe
pusha
add
inc
add
cwtl
jns
test
push
cmp
mov
cmp
stc
cwtl
inc
mov
lahf
or
add
add
mov
mov
mov
ds
adc
clc
jns
add
into
stos
lea
lcall
inc
xchg
pop
cmp
dec
add
add
xchg
mov
jae
add
or
mov
leave
mov
add
add
stc
xor
jge
movsl
out
push
pop
sbb
pop
fdivrs
xchg
das
roll
mov
scas
mov
out
adc
or
mov
pop
sub
add
add
push
pop
das
fcompl
movsl
js
mov
mov
jnp
insb
add
add
dec
stc
jecxz
jne
push
cli
mov
popl
mov
add
add
mov
orb
push
mov
jle
mov
aam
mov
cltd
push
mov
and
add
add
stos
outsl
xchg
data16
xor
jmp
adc
pop
or
add
add
or
add
add
sbb
push
mov
add
mov
popf
roll
ljmp
outsb
enter
push
sub
xlat
sbb
aas
stos
sub
lahf
jmp
out
cmp
push
lcall
imul
ss
jp
dec
add
add
popf
or
pop
xchg
fsqrt
push
or
add
add
push
imul
add
xor
add
add
push
mov
inc
add
int
add
jne
jo
mov
ss
dec
add
cmp
sub
add
cltd
push
pop
cwtl
sub
mov
mov
data16
xor
sub
xor
sbb
add
mov
imul
add
stos
test
sarl
jae
frstor
in
scas
push
fcoms
add
add
stos
add
insb
add
in
adc
add
mov
sub
pop
scas
mov
pop
and
insl
shll
and
add
add
adc
adc
lock
cli
push
out
mov
mov
shrl
inc
outsb
push
mov
pop
push
subb
add
aad
or
mov
and
add
add
fisubs
add
mov
popa
repz
pop
jb
addr16
adc
je
mov
mov
int
add
out
fxch
enter
insl
sbb
cmp
hlt
jbe
cmpsb
mov
sbb
hlt
lcall
mov
movb
cmp
push
pmaxub
mov
insl
out
jp
cmp
add
insl
mov
xor
jg
adc
add
dec
add
add
pop
xchg
sbb
add
or
stos
sbb
pushf
xchg
nop
test
jle
nop
sarl
mov
push
les
jae
call
ja
pop
pop
mov
or
jnp
inc
xlat
inc
xlat
xchg
cmp
ret
add
icebp
mov
xor
push
repz
div
arpl
add
mov
jge
sub
outsb
shrl
push
mov
adc
dec
pop
cmpsb
loope
sub
add
add
das
inc
out
push
mov
out
aas
xor
xchg
or
js
mov
mov
lahf
and
pusha
add
add
sbbb
pop
adcl
add
int3
int3
adcl
adc
mov
cmp
add
gs
add
mov
dec
and
cs
outsl
dec
lcall
mov
push
dec
mov
mov
add
add
imul
push
pop
xchg
mov
sarl
adc
xor
jns
and
mov
pop
scas
and
add
add
add
xchg
aas
mov
add
xor
mov
jmp
or
add
mov
fcoml
int
jae
mov
fidivs
gs
out
mov
cmp
add
cmpsb
lods
loopne
lea
int3
pop
loopne,pt
pop
cld
inc
xchg
fldcw
mov
stos
icebp
and
fwait
mov
mov
cld
cmp
add
inc
push
or
jge
push
xchg
add
popa
stos
imul
arpl
stos
dec
add
add
mov
orl
pop
into
cmp
out
pop
addl
mov
fmul
inc
add
sub
mov
sbb
xor
add
add
cmpsb
incl
and
adc
sahf
nop
sub
pmullw
popf
add
mov
scas
inc
add
xor
stos
pop
jle
add
add
add
add
scas
lods
mov
mov
inc
adc
add
xorl
add
add
ret
loop
add
add
stos
push
ss
jge
add
cmp
in
jns
repz
jae
das
mov
add
add
lds
int3
push
test
lock
add
pop
les
adc
pushw
add
mov
add
xchg
dec
out
mov
in
std
ficoms
out
or
push
and
adc
push
int
mov
push
mov
pop
scas
aam
fdivl
addl
mov
sub
cs
sbb
sti
in
mov
das
cltd
mov
out
ss
cwtl
jle
mov
gs
incl
and
adc
stc
lret
lods
insl
imul
imul
das
out
push
add
pop
inc
mov
add
cltd
sbb
movsb
pusha
add
add
leave
xchg
adc
cmp
jmp
xor
add
mov
add
add
xchg
ret
dec
fcomip
dec
add
mov
add
daa
movlps
test
dec
xchg
bound
test
les
movd
mov
add
iret
lock
js
lahf
pop
scas
sbb
xchg
movsb
dec
add
push
mov
icebp
test
dec
add
add
inc
mov
outsl
inc
sub
cmp
fnstsw
mov
jo
add
add
adc
sar
dec
inc
es
cmpl
mov
xor
jmp
aaa
add
jns
dec
add
insb
add
add
roll
cmpsl
mov
sbb
scas
adc
add
stos
out
inc
fadd
add
pop
or
add
add
mov
ret
jnp
add
add
push
or
mov
push
jg
gs
and
inc
add
add
push
mov
subl
dec
sti
inc
js
enter
add
lcall
mov
inc
mov
add
outsl
inc
cmp
sbb
pop
push
pop
movsl
jmp
jb
mov
or
mov
andb
aaa
cmp
dec
xchg
add
fiadds
cmp
xor
adc
gs
and
int3
cmp
jle
mov
mov
repz
mov
test
jne
cld
and
out
push
xchg
pop
and
gs
cmc
sbb
cltd
in
and
popf
mov
fisttps
add
add
add
add
push
jecxz
ret
or
inc
add
push
and
add
add
fistpl
add
add
jbe
dec
movsl
test
push
pop
sbb
mov
flds
stc
xchg
xchg
ss
ja
stc
xchg
push
mull
add
add
add
add
mov
jg
jae
push
pop
add
mov
in
push
test
push
inc
sahf
xor
aas
je
outsl
movsb
dec
lea
in
mov
xor
jb
xor
dec
mov
adc
jo
jp
test
sub
and
xorb
out
mov
add
stos
jae
jp
xchg
ret
jne
add
ficoml
xchg
mov
add
loope
add
push
in
in
aad
add
add
sbb
mov
in
xor
or
add
add
movsl
cmp
jg
inc
add
add
xchg
push
inc
jl
in
adc
add
xchg
aam
xchg
aaa
repnz
add
add
push
or
push
test
rorl
mov
inc
add
add
push
mov
loope
and
add
add
add
add
sub
dec
mov
stos
sbb
jo
adc
sub
and
xor
out
gs
pusha
add
sbb
dec
and
jne
ficompl
add
cmp
add
lds
mov
mov
mov
mov
data16
sub
add
add
enter
ss
push
mov
pop
push
insl
rclb
out
mov
cwtl
mov
mov
adc
out
icebp
xor
hlt
xor
out
add
mov
add
xchg
xchg
clc
cmp
jle,pt
ds
cmp
mov
sub
mov
test
repnz
loope
frstor
push
mov
add
add
add
jl
jns
aas
xor
pop
iret
adc
add
xchg
icebp
mov
jne
stos
add
mov
int3
aaa
stc
add
inc
add
mov
add
jo
icebp
mov
std
xor
cmpl
mov
hlt
pop
xchg
mov
and
stos
xor
xchg
sbb
add
xchg
rep
cld
mov
or
add
and
sub
add
add
mov
mov
outsb
add
push
jge
mov
outsb
dec
lcall
inc
add
add
lahf
dec
testb
inc
je
sub
repnz
inc
test
add
add
and
mov
fidivrl
sbb
stc
mov
mov
add
inc
lds
push
jne
repz
shrl
add
mov
inc
lret
scas
int3
scas
sub
mov
sub
popf
jmp
or
decl
sbb
outsl
and
add
add
or
xor
lea
fbld
add
sbb
jo
add
add
ret
mov
call
and
mov
aaa
repz
bound
push
cmp
daa
sbb
inc
add
or
stc
shlb
xchg
sub
in
insl
sbb
mov
vfrczpd
jmp
xchg
xor
sub
add
add
fsubp
and
fiaddl
nop
pop
dec
add
add
xor
pop
jb
test
hlt
push
inc
add
subl
add
pushf
mov
adc
add
sbb
fmuls
add
repnz
outsl
cmp
add
add
pop
js
lret
das
in
inc
inc
ja
add
push
xchg
leave
clc
jo
bound
sbb
ret
vmovupd
out
push
cmp
xchg
mov
push
adc
add
aam
dec
add
add
add
mov
adc
mov
add
inc
add
push
add
adc
insl
out
sub
mov
jmp
mov
sahf
outsb
sub
pop
js
sub
aaa
int
sarl
bts
pop
int3
add
adc
test
pop
ret
loope
cmp
ret
pop
push
xchg
fists
or
out
mov
push
fsubl
add
adc
clc
xorb
dec
ljmp
fcomps
add
add
mov
and
add
add
in
sbb
xor
add
add
test
pop
pop
out
add
hlt
jnp
adc
dec
add
pop
push
jns
inc
add
add
jnp
subb
lock
pop
cmc
inc
in
fsubp
ja
dec
rcrl
mov
jecxz
mov
aam
jl
xor
dec
push
cld
addb
add
pop
cmp
paddsw
aam
add
imul
add
xlat
add
push
cmp
inc
pusha
add
add
sub
mov
sbb
fnstsw
add
add
add
cmpsb
sub
mov
dec
psubsb
fldt
sbb
mov
cmc
ret
pushf
out
lds
push
pshufw
mov
out
add
add
pop
jle
add
imul
pop
xor
add
add
xchg
das
cli
xor
jge
aas
pusha
add
or
aam
cmp
mov
or
add
add
add
sar
adc
add
mov
jle
stos
pop
pushf
sbbb
cli
pop
mov
mov
lea
add
mov
mov
jo
add
add
in
fwait
cmp
loop
ret
out
or
push
jle
push
xchg
stc
cmc
sub
decb
dec
add
add
push
aas
mov
or
mov
mov
cmpsl
fnsave
cmp
call
inc
add
add
push
and
add
hlt
fdivr
cmpsl
jge
out
jl
xchg
mov
and
jecxz
mov
jne
imul
sbb
add
daa
andl
add
pop
popa
stos
mov
scas
fisttps
inc
into
sub
and
sete
add
outsb
cs
add
add
mov
outsb
das
rcrb
incb
dec
mov
jno
add
mov
mov
add
aam
jbe
lret
push
inc
sbb
push
pop
sahf
in
push
orb
fdivs
xchg
and
add
add
pop
pop
jecxz
xchg
fmull
mov
aas
popa
xlat
stos
es
or
add
add
jne
call
jo
inc
ja
imul
push
gs
adc
mov
add
dec
sahf
add
add
push
into
sbb
add
pop
stos
sub
dec
inc
sahf
lock
cli
inc
mov
sbb
add
add
adc
add
fisttpll
stos
and
loope
mov
nop
or
add
add
data16
and
mov
repnz
and
add
add
rol
xor
shll
js
inc
or
mov
es
xor
rcrl
mov
mov
mov
and
sub
out
jg
mov
mov
jae
sub
jo
pop
test
lock
mov
iret
xchg
or
xchg
adc
test
add
add
add
mov
mov
popf
and
add
add
pop
lcall
insb
add
sbbl
xor
addr16
jp
mov
lcall
or
andl
add
movsl
xor
add
mov
pop
test
stc
or
fbstp
cmpb
sbb
add
jb
mov
jbe
jne
arpl
fimuls
add
jo,pn
and
mov
or
xchg
mov
in
mov
scas
gs
lcall
adc
add
lods
outsl
jmp
add
push
add
mov
daa
xor
push
outsl
xchg
neg
jecxz
dec
cmpsl
js
dec
inc
mov
incl
add
push
js
mov
out
loop
jmp
repnz
xor
sub
add
popf
add
add
lahf
add
jle
add
mov
push
dec
es
ficompl
cmpsl
cmp
js
add
add
add
fidivrl
jbe
jmp
xor
add
add
push
mov
add
push
add
lods
pop
mull
add
dec
inc
pop
lds
movsb
jae
add
mov
add
add
aas
hlt
mov
loope
fbld
scas
sbb
pop
push
push
sub
add
add
inc
mov
sbb
pop
imul
add
add
xor
xchg
and
cwtl
xchg
add
into
cmp
les
xchg
fwait
arpl
mov
add
add
jbe
mov
test
ja
in
cmp
arpl
gs
jmp
mov
add
pop
mov
lods
in
mov
arpl
sbb
insb
add
scas
ret
push
xorb
mov
jne
pop
cmp
adc
nop
in
in
call
mov
push
push
popa
push
gs
jnp
xchg
mov
hlt
and
jle
add
cmp
add
stos
cld
cmp
add
add
add
test
pop
cli
mov
jle
add
cwtl
lock
icebp
rcpps
fsubs
mov
stos
mov
sbb
mov
es
push
fwait
cwtl
add
mov
or
adc
nop
stos
imul
fwait
push
je
lcall
pop
rclb
jl
in
sbb
pop
xchg
loope
or
mov
or
push
popa
cmpsb
int3
notl
and
cmp
fcoml
or
and
add
add
ja
negl
pop
and
mov
push
inc
or
push
scas
push
lods
and
outsb
mov
inc
pop
stos
jo
ja
xchg
cmpsb
insb
add
add
add
les
int
adc
add
mov
add
add
add
ret
jb
lahf
and
add
int
sbb
xchg
out
cltd
paddq
mov
aas
mov
add
pusha
add
hlt
push
lcall
add
add
cmp
loopne
adc
fsts
sbb
add
add
mov
sub
add
xlat
sbb
imul
lods
call
or
mov
lret
add
add
aad
movsb
and
arpl
add
mov
sub
test
mov
fdivs
pop
stos
call
int
mov
add
add
pushf
clc
imul
mov
jge
sub
scas
pop
mov
push
sub
dec
lods
and
push
fdivrl
insl
fsubs
pop
add
adc
lods
add
add
add
aaa
jmp
or
jb
add
add
push
aam
rcrl
loopne
and
mov
popf
sbb
push
stc
sahf
cmp
add
add
pop
es
les
loop
aaa
jns
je
andb
add
pushf
fistps
cmp
adc
fstpl
or
add
add
clc
sarb
and
add
add
pop
fstpl
cmp
and
add
add
ja
jle
ror
xlat
outsl
push
mov
cld
lahf
cli
xchg
jno
or
xchg
mov
out
nop
mov
loop
out
and
ss
inc
lret
pop
loop
xchg
jmp
add
mov
add
add
xchg
mov
push
call
int3
cld
inc
lods
data16
cmc
push
mov
add
fstl
xchg
ret
add
add
add
dec
push
sub
xor
add
add
sub
mov
outsb
repnz
add
add
pop
out
inc
add
add
and
mov
cs
lahf
idivb
add
add
add
out
test
pop
testb
sub
add
mov
call
add
add
ds
fildl
loop
insb
add
mov
add
stos
test
mov
aaa
negl
lock
mov
stos
test
mov
int
and
add
mov
push
mov
pop
pop
decb
add
add
inc
inc
fdivrl
fwait
and
mov
add
add
dec
and
add
add
xchg
shll
mov
sub
add
add
lret
lds
add
adc
out
bound
jne,pn
out
js
gs
add
add
sub
sub
xchg
dec
ja
add
lcall
push
pushf
mov
add
cld
cmp
add
mov
push
into
dec
xor
repz
adc
cmp
xchg
sub
nop
aaa
push
cmp
aaa
push
dec
cmp
icebp
sub
xlat
mov
adcl
repz
pshufw
mov
xchg
jbe
test
addb
xlat
cld
push
mov
scas
mov
dec
cmpsb
loopne
in
and
add
scas
stos
jo
or
pushl
add
or
pop
push
iret
add
mov
push
ja
mov
xchg
popa
mov
add
jb
push
ret
jmp
jmp
daa
in
in
cli
mov
add
add
popf
cmpsb
jno
cld
les
mov
add
dec
add
mov
dec
dec
xchg
mov
add
add
sub
fdivr
movsb
push
inc
add
inc
push
incb
add
add
popf
mov
rclb
push
push
sub
sahf
pusha
add
pop
dec
add
add
xor
push
jbe
test
add
mov
add
add
cli
jns
adc
add
in
into
sub
mov
xor
or
pop
clc
jmp
mov
jns
push
ss
adc
test
fwait
mov
add
add
add
dec
fcoms
rorl
push
xchg
lret
cmc
pop
enter
out
into
insl
movsl
out
mov
mov
add
jl
push
add
dec
add
and
cmpsl
sub
jmp
jp
pop
popf
call
pop
pusha
add
loope
ljmp
sti
cmp
icebp
insb
add
add
sbb
psubsb
out
or
pop
xchg
rorb
iret
jp
push
lret
adc
jo
cli
mov
add
iret
pop
sub
mov
fimull
mov
cmp
add
into
pop
pushf
scas
mov
cmp
bnd
jne
sbb
scas
fdivrs
mov
aam
or
dec
pop
dec
add
mov
dec
add
mov
popa
icebp
movsl
test
adc
in
or
add
add
lcall
xor
adc
add
pop
shrb
add
js
mov
inc
mov
mov
xchg
xchg
cld
inc
daa
mov
adc
xchg
mov
fiaddl
add
add
aam
lods
rol
arpl
mov
sub
repnz
dec
add
push
xchg
inc
xor
fld
call
mov
add
insb
add
add
fcomip
and
add
add
jo
test
xchg
mov
push
stos
fdivrl
fsubrl
dec
leave
clc
es
push
test
or
mov
in
ret
lret
cmp
mov
lahf
movsb
cs
test
xor
dec
xor
add
sub
push
inc
ret
cmc
mov
sbb
ss
inc
adc
and
pop
inc
inc
inc
repnz
cmp
stos
xchg
orl
add
lret
inc
mov
add
out
mov
add
mov
fildl
add
add
movsb
or
add
inc
js
or
rolb
add
ret
int
sub
cmp
sti
mov
inc
sbb
int3
mov
add
roll
or
add
add
mov
jmp
shrl
cmp
xorl
xchg
or
mov
scas
or
add
add
ljmp
imul
cli
mov
jg
ficoml
mov
cmp
add
push
pop
call
inc
lahf
or
mov
add
add
jmp
adc
mov
scas
pmulhw
outsb
in
push
std
mov
inc
adc
jno
xchg
and
sti
sub
mov
xchg
or
mov
loop
test
mov
and
mov
mov
pop
fnstsw
xchg
add
arpl
push
sub
mov
mov
add
pop
cmp
sbb
enter
mov
add
push
sti
jnp
imul
out
adc
out
pop
aam
sar
cmp
push
sub
add
add
sbb
jmp
add
popl
add
add
sbb
fsubl
add
add
add
cltd
lcall
lret
stc
lahf
fcmovbe
mov
data16
jne
add
add
add
add
mov
mov
mov
add
add
daa
jno
mov
lcall
pop
and
mov
jge
fwait
icebp
cmp
add
mov
mov
les
mov
mov
loop
push
xchg
scas
pusha
add
add
mov
inc
ret
out
sub
add
cmp
jbe
lods
mov
mov
xor
jecxz
pop
out
add
lds
add
sub
add
add
sub
adc
cmp
add
add
add
add
inc
cmp
ret
add
dec
adcb
arpl
stos
dec
cld
pushf
aas
jnp
popf
mov
popa
add
mov
cli
imul
push
lds
addr16
push
call
jle
mov
mov
adc
add
xor
push
mov
and
dec
add
lods
or
xchg
adc
add
pop
push
add
add
add
push
or
mov
add
cmp
inc
xorl
pop
scas
push
dec
mov
inc
add
add
xchg
ret
mov
cmp
iret
gs
ljmp
sbb
add
add
stos
scas
cld
mov
inc
push
fcmovu
cmp
repz
adc
popa
mov
stc
mov
add
mov
cmp
mov
add
mov
push
xlat
mov
in
push
test
add
fimull
jp
jne
push
push
and
mov
and
or
add
mov
sbb
pushl
mov
add
add
mov
add
add
adc
shl
ds
mov
lds
pop
sar
xchg
mov
mov
mov
cmp
iret
pop
cmp
mov
aas
and
mov
mull
push
or
iret
rolb
add
add
addr16
lds
sbb
pusha
add
cmpl
ja
icebp
ss
jae
push
or
mov
imul
add
pop
icebp
loop
adc
loop
push
lcall
xor
mov
mov
lods
push
sub
mov
lock
rclb
and
mov
or
inc
add
cmp
or
mov
inc
adc
loopne
nop
push
icebp
pusha
add
or
mov
lret
jge
in
test
fmull
xchg
add
add
mov
cmp
leave
insl
aas
sti
push
mov
mov
popa
nop
stc
movsb
ljmp
add
add
mov
mov
adc
pop
jns,pt
mov
pop
push
add
add
add
sbb
add
add
xchg
inc
adc
add
test
inc
cmp
mov
jae
movsl
ss
push
push
mov
sbb
add
add
movsb
sti
fwait
pushf
loopne
subb
add
add
sbb
in
jp
push
aam
cli
into
sbb
pop
mov
and
add
stos
mov
shl
push
sbb
lcall
mov
mov
mull
add
add
and
add
add
and
cmpsl
insb
add
sbb
leave
dec
add
inc
jbe
and
mov
push
cmp
fwait
ss
insl
mov
dec
nop
or
mov
loope
mov
aam
adc
dec
add
sahf
xor
cwtl
ja
add
add
add
pop
repnz
cmp
cwtl
ljmp
and
add
add
ljmp
xchg
pusha
add
ja
scas
sbb
mov
xor
add
sahf
mov
adc
mov
outsl
or
add
or
mov
ds
mov
idiv
xchg
loope
add
add
add
mov
cltd
sbb
test
gs
add
add
inc
lret
sub
mov
jns
push
shll
enter
test
pop
sbb
arpl
or
mov
add
add
pop
or
add
add
daa
enter
add
add
add
aas
adc
aas
push
and
add
add
enter
mov
mov
loop
lea
mov
add
mov
sbbb
jo
pop
pop
addr16
pushf
mov
inc
cmp
lcall
sub
aad
xchg
push
sub
add
add
dec
jns
popf
subb
add
add
add
std
ja
pop
sbb
sbb
inc
jg
outsl
loop
mov
ret
out
lret
xchg
xchg
sub
mov
cs
leave
cltd
jno
add
add
push
jle
push
cmpl
add
outsb
pop
push
sub
ljmp
dec
aaa
icebp
mov
add
clc
cmp
xor
add
xchg
adc
sub
cmp
lret
inc
add
add
xor
add
lret
dec
dec
repz
xchg
add
add
xor
push
mov
pushf
std
xor
int3
std
dec
dec
adc
aaa
sbb
shlb
cmp
insb
add
add
jle
and
pop
pop
sarl
andb
add
fildll
mov
add
add
lahf
testb
xor
lahf
cmp
aam
pop
xor
mul
aad
jl
loop
adc
mov
and
scas
pop
sub
or
mov
add
add
or
mov
pop
rcl
xchg
push
inc
add
divl
test
pop
cli
push
adcl
mov
pusha
add
add
add
xchg
or
mov
mov
add
sbb
out
inc
cmpsb
pusha
add
and
add
add
dec
imul
mov
ljmp
je
int3
cmp
lds
in
test
add
scas
jmp
in
ret
dec
dec
xor
cmp
add
sub
inc
aas
movsl
push
test
pop
sarb
and
out
inc
fsubl
add
xor
add
std
jle
add
cmpsl
shll
std
stos
imul
movsl
mov
mov
int
xchg
pop
push
inc
and
std
push
mov
add
add
jb
mov
push
sbb
lds
add
mov
add
dec
mov
mov
dec
movsl
jp
fadds
jnp
pop
xchg
lahf
or
adcb
inc
inc
ret
in
inc
sti
aas
andl
xorl
mov
fcompl
popa
jnp
add
add
adc
cwtl
mov
shr
or
icebp
jnp
stos
rol
mov
jp
jb
out
push
pusha
add
call
add
add
cmp
or
add
mov
aas
imul
xor
add
frstor
repz
mov
jo
add
das
sbb
fisttpl
add
stos
stos
mov
add
add
daa
pop
add
jp
mov
lret
or
gs
addr16
dec
shl
dec
lret
and
add
add
loopne
add
add
frstor
mov
or
insl
pop
xor
add
add
fwait
add
popa
loop
cmp
pop
inc
or
mov
add
dec
add
add
xchg
mov
add
vpunpckhbw
add
add
add
test
movsb
das
or
xchg
adc
out
mov
and
bound
pop
cwtl
lock
mov
aaa
decl
stc
pop
mov
mov
push
push
je
jbe
pop
pop
pushf
dec
mov
stos
push
pop
loope
loope
mov
xchg
loope
cmp
inc
stos
jg
loop
and
aaa
orb
lret
cmp
inc
test
mov
sbb
jno
sub
add
add
cmp
test
add
add
add
cmp
and
push
ficoml
scas
ja
cltd
popa
sub
test
bound
cs
add
mov
lods
lods
sti
add
in
jo
sub
add
add
add
mov
xor
add
sbb
pop
or
and
xor
test
aaa
or
add
add
jne
lods
popa
and
mov
jo
arpl
add
sbb
sub
add
cld
push
js
pop
fistpll
mov
inc
or
add
add
outsb
mov
lods
push
data16
sub
mov
ss
push
push
cmp
ficomps
dec
push
shlb
das
push
sbb
cmp
leave
xchg
pop
ja
ds
ret
dec
or
mov
mov
mov
push
loopne
and
popa
popl
add
lods
daa
inc
faddl
inc
add
push
adc
or
insb
add
add
enter
add
add
add
daa
dec
in
iret
std
mov
lahf
loop
add
add
add
add
mov
out
out
repnz
test
add
add
add
scas
sbb
xor
add
testl
pop
iret
bound
push
or
add
add
add
in
movsb
mov
roll
xchg
ds
ret
mov
dec
popf
adc
pop
xor
aas
sbb
or
mov
pop
xchg
test
bound
mov
mov
insb
add
pop
xor
push
popa
sub
add
add
aad
push
arpl
add
add
add
insl
movsl
hlt
shl
stos
mov
mov
aam
mov
inc
out
xor
push
pop
and
or
add
add
add
add
pop
mov
pop
cld
mov
add
add
sub
add
je
add
add
add
jae
sbb
lcall
add
add
add
pop
ret
shrb
addb
add
mov
sub
add
add
cmp
add
add
add
in
test
adc
add
add
add
cmp
jmp
dec
add
mov
scas
push
icebp
jae
mul
fistpll
push
popa
and
sbbl
in
sub
pushf
mov
mov
test
addl
add
pushf
pandn
ja
cmp
xchg
add
hlt
adc
bndstx
arpl
int
dec
add
sahf
das
jle
jno
repz
fldl
add
std
insl
cltd
mov
incl
sbb
and
mov
add
scas
cli
fildll
mov
adcl
mov
pop
cmpl
rcll
cmpl
lock
jb
add
repz
cwtl
out
loopne
cmc
inc
add
add
outsl
rclb
mov
xchg
rorl
push
shrb
popf
insl
push
pop
aad
push
aaa
mov
jae
popf
mov
pop
inc
pop
shl
stos
cmc
cli
jg
mov
scas
jecxz
pusha
add
add
cmp
lahf
add
jne
mov
stos
jecxz
daa
mov
lcall
add
mov
mov
xor
sbb
sbb
or
lods
lds
xchg
push
bswap
adc
add
add
xchg
or
mov
add
xor
mov
mov
add
add
dec
movsl
sub
xchg
mov
push
push
mov
inc
add
push
sub
add
add
aas
jge
insl
mov
xor
add
jbe
jp,pn
lock
gs
push
push
loop
cmp
inc
inc
add
mov
pop
adc
shl
add
add
out
iret
mov
xlat
sub
add
add
addl
add
jnp
pusha
add
insb
add
add
outsb
jb
ja
jp
jp
fst
push
clc
or
jne
lret
nop
dec
and
aad
pop
leave
into
cmc
fisubrs
add
repnz
add
cltd
clc
or
mov
mov
sub
xchg
lret
sbb
add
mov
or
mov
call
movsb
mov
pop
jb
pop
push
mov
mov
enter
cs
jno
rcll
pop
bound
sub
add
mov
call
inc
lods
mov
insl
and
or
add
jp
cmpsb
cmp
fists
std
mov
rcrb
add
add
add
add
sti
subl
and
add
add
sub
mov
ret
call
dec
stos
fisttpll
mov
add
add
inc
clc
inc
notl
in
xor
add
mov
data16
cmp
add
or
dec
add
add
add
mov
das
mov
dec
int3
je
xchg
jae
ljmp
scas
and
enter
ss
cmp
add
add
sbb
imulb
jnp
mov
inc
clc
mov
out
shlb
je
jne
cmpsb
jmp
add
ret
pusha
add
add
flds
add
jmp
sbb
sub
add
add
data16
jo
aas
pop
push
ror
sahf
cmp
add
add
bound
lahf
xchg
repz
popa
inc
pop
mov
lock
dec
add
mov
int
add
add
mov
dec
inc
xchg
cmp
leave
jb
mov
jle
inc
add
add
xchg
jle
inc
jbe
cwtl
into
add
adc
mov
push
js
push
cld
add
add
xchg
dec
add
inc
push
push
arpl
inc
add
leave
xor
xor
sbb
push
dec
fyl2x
cmp
shlb
add
add
gs
dec
push
xor
push
jae
lret
sbb
in
std
xor
hlt
jle
in
add
jb
outsb
fiaddl
lret
push
cmpsl
mov
and
les
xor
es
mov
add
adcb
add
add
add
add
add
scas
or
jbe
xchg
aaa
pop
xchg
mov
bound
sub
add
add
mov
arpl
fsubl
incl
cmc
jmp
add
add
mov
xchg
xor
rcrl
pop
bound
mov
mov
pop
test
cmp
test
jmp
add
add
or
jecxz
add
add
inc
sarb
push
gs
daa
test
fidivs
push
imul
inc
mov
iret
pop
pop
xor
add
mulb
sahf
mov
xchg
mov
pop
insl
xchg
pop
push
or
jae
arpl
and
mov
add
ret
cmp
add
add
sbb
add
mov
cmp
push
push
mov
mov
pop
rcr
popl
add
pushf
cmp
dec
jmp
mov
loop
es
std
push
test
in
sub
mov
stos
rorb
dec
dec
push
inc
pushf
les
or
add
lds
in
mov
loopne
add
stos
sbb
mov
jl
cmp
sbb
fld
gs
pop
andl
and
add
stos
mov
mov
mov
cmp
dec
std
lea
mov
sub
cmc
push
mov
push
movsl
pop
in
in
mov
add
pop
clc
aam
mov
inc
mov
dec
dec
cli
scas
sarb
loop
xor
jl
and
add
add
gs
pop
or
xlat
pusha
add
jmp
jmp
pop
popf
cltd
pusha
add
or
mov
add
add
add
cmp
pop
nop
xor
sub
mov
out
mov
mov
and
mov
iret
daa
xchg
add
or
sbb
jmp
add
add
int3
push
in
hlt
add
in
xchg
lods
andb
out
jno
ret
xchg
arpl
lret
push
inc
mov
loop
outsb
test
dec
add
test
repnz
iret
and
lret
sbb
or
mov
loope
jnp,pt
or
mov
aaa
or
lahf
sar
or
dec
mov
test
test
scas
lock
popf
xchg
sbb
inc
mov
add
mov
fldt
add
add
adc
add
xchg
fwait
fwait
sbb
add
add
add
popf
dec
add
xchg
lds
loopne
ds
mov
sbb
add
add
add
jp
loope
dec
or
fbld
mov
jb
test
add
shlb
fcoms
sbb
and
sub
and
testb
inc
pop
pop
push
mov
pushl
sub
cmp
rcll
ja
cmp
push
mov
add
imul
loop
hlt
mov
add
rclb
inc
xchg
add
add
pop
in
jp
dec
mov
or
add
add
jnp
shrl
pop
das
adc
push
inc
movsb
push
dec
cmovbe
pop
or
mov
add
add
add
std
stc
jmp
enter
aaa
pop
push
xchg
pop
mov
shl
orb
add
lahf
cmp
mov
adc
xor
mov
ss
add
add
xchg
cmp
repnz
pop
xor
or
add
add
dec
or
mov
add
add
mov
shl
cmp
adc
push
mov
mov
pusha
add
xor
sahf
addb
lds
add
or
pop
push
or
mov
pop
gs
pop
lea
xchg
scas
pop
sub
fwait
cmp
add
mov
xchg
addl
jne
mov
rcll
mov
out
divb
add
out
shr
jp
dec
add
or
mov
push
lret
les
add
add
jecxz
dec
add
add
inc
add
add
inc
cmp
mov
imul
xor
jbe
mull
add
add
jge
lret
add
add
lods
push
xor
adc
sar
push
push
mov
xchg
test
call
sbb
lock
clc
lods
imul
es
iret
inc
add
push
and
add
add
mov
inc
add
add
imul
mov
dec
inc
sub
ds
inc
add
dec
mov
adc
repnz
mov
aas
mov
xchg
push
add
pushf
adc
mov
cs
add
add
sbb
push
and
cmp
cld
bound
addb
add
add
mov
sub
adc
add
sbb
adc
inc
add
shlb
and
stos
pushf
insl
xor
insl
lahf
sbb
sbb
out
dec
cld
mov
lea
nop
shrl
ficomps
in
xor
cmp
jl
scas
inc
int3
out
push
mov
cmp
out
lods
add
mov
sub
add
add
into
cltd
sub
testl
std
fbstp
xor
mov
iret
cmc
out
cmp
jae
fidivs
cs
cmp
stos
mov
fnstenv
add
and
add
add
add
popa
lds
inc
nop
add
icebp
cmp
mov
in
in
or
rclb
add
add
dec
push
dec
add
add
dec
mov
add
add
sbb
mov
push
and
pop
test
aad
aam
ret
xchg
fsubrl
enter
fldcw
sbb
enter
add
add
adc
dec
sarl
push
cmpsb
int3
sbb
and
push
mov
iret
sbb
shrb
mov
repnz
xor
je
jle
sbb
jmp
mov
mov
push
fiaddl
rolb
lds
pusha
add
add
lea
add
add
loop
push
xchg
aam
in
fdivl
mov
cmp
add
add
lds
or
mov
stc
pop
xor
mov
or
push
push
sbb
xor
mov
cmpsb
call
push
aam
jmp
leave
mov
inc
add
add
cmp
sbb
mov
adc
xor
out
add
add
inc
and
add
push
cmp
mov
out
xor
lock
mov
mov
inc
add
add
jo
pop
ret
pop
hlt
sbb
add
add
add
mov
pop
dec
hlt
sbb
lds
dec
or
mov
sub
roll
outsb
fadds
dec
in
mov
push
cmp
enter
aam
pop
ds
jp
mov
mov
xchg
mov
jae
inc
pop
adc
mov
fnsave
add
and
add
add
pushf
lods
mov
add
add
add
mov
call
jnp
mov
es
idivl
add
adc
test
sti
pop
jge
sahf
fiaddl
pusha
add
add
add
ds
inc
or
ror
aam
int
imull
mov
sbb
lahf
xchg
imul
pop
push
imul
scas
jo
push
sbbl
mov
push
dec
adc
outsl
dec
add
add
add
add
inc
mov
sbb
inc
inc
add
cmc
mov
inc
add
add
fmull
dec
jns
aam
ret
stc
mov
add
add
inc
add
add
mov
test
add
xor
outsb
mov
pop
je
aad
loopne
mov
mov
add
dec
testl
add
add
add
cmp
out
incb
mov
shrl
test
jae,pn
je
and
in
orb
shlb
jnp
ficomps
push
jne
or
add
add
push
xchg
popl
pop
imul
in
int3
pop
or
and
mulps
sbb
lock
cld
je
add
add
add
push
es
bnd
cmp
mov
mov
add
add
mov
dec
jae
jnp
and
aas
test
push
cmp
lret
fistl
test
into
push
ds
cld
add
and
pop
insl
cltd
push
pop
scas
dec
imulb
mov
mov
push
add
xchg
push
pop
mov
mov
test
int3
xor
xchg
jmp
dec
test
cltd
pop
sarl
bnd
xchg
xchg
shlb
mov
add
mov
mov
fninit
inc
add
add
ds
fisubl
sub
ss
add
push
fcoml
and
mov
mov
or
add
push
and
lcall
adc
cmp
loopne
test
add
add
add
movsb
pop
pop
mov
cmp
mov
mov
imul
add
or
add
add
jecxz
mov
sbb
xor
adc
js
aas
xor
loope
xchg
xor
add
sub
mov
mov
ficoml
add
sti
sbb
inc
out
mov
add
add
stos
inc
jecxz
add
sbb
jns
std
push
jmp
cmp
sarb
xor
cmp
call
adcb
mov
cmpsb
test
test
cmpsb
adc
sub
std
mov
inc
loopne
test
add
add
push
push
xor
xchg
outsb
stc
push
xor
outsl
sahf
addl
xor
sti
add
sub
add
lods
aam
sti
rcr
mov
jmp
adc
add
add
jecxz
sbb
add
add
addr16
jle
push
and
add
loopne
test
add
push
inc
xor
jae
sub
add
push
cmp
es
popa
addr16
out
add
add
or
insl
out
xchg
ja
pop
cmp
mov
cmpsb
pop
push
mov
mov
lods
cpuid
add
mov
mov
repz
iret
loopne
cmp
add
inc
and
outsb
into
scas
addr16
pop
lock
es
pushf
in
loop
test
test
pop
add
es
mov
sarl
xchg
dec
pop
or
mov
mov
jne
loope
sbb
or
mov
inc
pop
test
bnd
aas
insl
jge
inc
add
pop
push
popf
inc
mov
fadd
add
add
xchg
insb
add
add
cmp
mov
ret
or
push
test
enter
mov
pop
sub
and
test
or
aaa
xlat
sub
aad
add
dec
sub
add
add
push
inc
ud0
fcom
rolb
inc
imul
add
dec
push
stc
shlb
sarb
add
pop
sub
add
add
sub
dec
loop
sbb
out
adc
clc
movsl
mov
add
mov
mov
outsl
js,pt
in
xor
cmp
push
fsub
jbe
push
shl
jg
pop
sub
pop
jle
pop
faddl
add
add
add
add
mov
add
popl
pop
dec
mov
add
inc
add
arpl
rcr
dec
or
inc
shl
cmp
imul
sub
jge
sbbl
mov
add
call
xor
insl
jmp
jno
stos
stc
scas
xor
xchg
jno
out
add
xchg
lret
jno
sti
insl
sub
add
cmp
adc
xchg
mov
test
jnp
arpl
aad
jp
in
test
js
or
mov
cwtl
imul
subb
shll
decb
jnp
mov
stos
and
add
add
outsl
les
mov
das
shrd
push
enter
add
sub
test
dec
xchg
pop
mov
ret
xchg
and
add
add
fadds
xchg
movsl
sub
lea
mov
jle
add
insl
cwtl
pushf
fisttpl
cmp
mov
rorl
add
add
ds
or
mov
mov
cmpsl
pop
out
in
call
jns
dec
pop
xchg
stc
dec
add
add
rcll
sti
cs
add
ljmp
or
dec
add
aam
das
sub
mov
call
mov
push
xchg
add
add
add
data16
ds
mov
sbb
cltd
mov
movsl
insl
dec
in
cmpxchg
sbb
test
ret
lret
mov
xchg
pop
xor
call
add
mov
leave
jo
xchg
mov
xchg
xchg
push
test
jp
cli
fwait
pop
mov
add
add
add
testb
push
sub
xor
add
inc
sub
add
xor
jae
mov
add
add
in
add
inc
add
add
add
mov
pusha
add
mov
loop
push
jl
push
push
mov
psllw
jns
lock
fidivs
addr16
sub
pop
dec
add
dec
push
daa
mov
clc
add
mov
add
mov
adc
add
add
cmc
xchg
or
add
dec
das
loop
sub
mov
sbb
daa
or
mov
jmp
out
add
movsl
gs
loopne
add
add
out
add
add
add
cmpsb
aam
fidivs
shrl
aas
int
out
aas
xchg
lock
add
lcall
loop
es
mov
mov
aam
mov
mov
dec
xor
cltd
mov
int
out
xchg
lahf
daa
sbb
xchg
inc
jb
ljmp
jecxz
rol
insl
pop
fldcw
mov
sti
les
jo
xorl
xor
test
mov
dec
sbb
or
xchg
ficoml
or
mov
add
xor
or
add
add
push
loop
push
jl
imull
fsubl
add
add
pop
out
dec
and
test
add
data16
out
dec
aaa
cmpsb
sahf
mov
push
insl
pop
stc
push
mov
add
add
add
in
popf
in
and
add
add
leave
adc
cmp
add
add
ret
in
pop
mov
add
faddl
pop
mov
pushf
out
xchg
jne
fiadds
mov
push
lds
add
add
nop
or
add
add
adc
push
je
xchg
test
mov
loope
add
add
add
xlat
mov
add
mov
jle
mov
hlt
movsl
test
push
fdivl
mov
xor
in
push
ljmp
add
test
inc
add
pop
bound
add
jns
dec
not
out
adc
test
aad
mov
cmp
xchg
lcall
add
in
mov
add
sbb
aas
dec
dec
in
jmp
add
add
lods
or
mov
jno
aam
jnp
out
add
mov
mov
fcomp
mov
test
push
push
jp
push
std
lahf
stos
popf
push
mov
daa
rolb
add
add
aam
add
insb
add
add
clc
fcoms
mov
push
mov
fstp
mov
xchg
mov
aaa
aaa
ret
mov
popl
mov
or
aas
add
aas
stos
xor
arpl
xor
adc
rorl
aaa
loop
and
add
add
add
sub
add
add
das
mov
in
sub
mov
js
popf
xchg
jb
mov
push
pop
mov
add
add
add
add
add
add
pop
repz
fnstcw
cmpb
pop
insb
add
addr16
or
out
loopne
in
into
dec
xor
rolb
add
test
int3
ljmp
add
sub
enter
out
js
cli
jp
cmpsl
cmpsb
jmp
xchg
add
pop
int3
sub
xchg
adc
nop
dec
sub
mov
push
jno
pushf
cmp
add
mov
cmpsl
loope
jmp
dec
stos
push
jp
es
xchg
push
popf
int3
cmp
jb
cmp
shr
jge
dec
shrl
sub
aam
int
xchg
std
xchg
add
add
jae
xchg
mov
add
sub
xor
mov
push
iret
lcall
inc
ja
out
xchg
add
add
add
call
out
std
icebp
fimull
scas
iret
pushf
add
adc
sbb
int
inc
push
fsts
sahf
jnp
add
jb
inc
je
xor
cmp
xchg
mov
mov
add
and
inc
dec
fists
mov
jecxz
add
add
xchg
inc
mov
xchg
sbb
push
mov
jmp
add
add
enter
mov
mov
push
mov
add
add
add
lret
test
mov
ljmp
add
add
scas
inc
test
je
push
daa
sbb
ret
imul
gs
jmp
add
mov
inc
testb
xorl
fistl
add
inc
movsl
inc
and
add
add
dec
dec
into
and
xor
pusha
add
clc
iret
adc
lret
jg
stos
cs
in
cmp
pop
and
mov
sti
pop
pusha
add
add
and
pop
stc
je
cmp
add
add
sbb
pop
xchg
adc
std
inc
sub
repnz
add
add
push
movsb
ja
js
nop
jge
dec
mov
push
inc
inc
fistl
jno
movsb
sti
test
rcrl
cld
sub
or
mov
shrl
mov
imul
xlat
js
insl
xor
cwtl
ljmp
add
add
cs
add
mov
pop
push
test
pop
ficompl
mov
in
mov
add
sbb
pop
outsl
lods
loop
add
loopne
vunpckhpd
mov
sarb
push
adc
mov
mov
mov
rorl
add
add
lods
jbe
inc
loope
loop
out
pmaddwd
dec
add
mov
add
add
ror
cmpsl
mov
mov
cs
xor
ja
rolb
add
add
addr16
dec
dec
jbe
inc
pop
sub
data16
cli
push
mov
daa
mov
mov
mov
or
mov
stos
xor
add
push
stos
cmpsb
push
ds
add
add
ficoml
movsb
pop
in
add
add
test
into
mov
jmp
sbb
lock
pop
inc
add
xor
inc
rcrb
mov
add
adc
daa
je
xlat
cmpsb
push
call
aaa
cmp
add
add
and
outsb
xchg
test
out
mov
sbb
in
and
out
and
add
add
add
add
inc
add
add
jns
jecxz
cli
cmpsl
pusha
add
push
jo
cmpsb
inc
or
add
add
test
cmp
shl
ss
nop
loopne
adc
loopne
nop
test
add
add
int
in
push
bnd
jns
adc
jl
inc
scas
mov
test
xchg
sbbl
pop
push
hlt
and
mov
sbb
inc
xchg
cmp
mov
das
fisubs
adc
nop
mov
push
loop
dec
jge
leave
cmp
cmp
andb
adc
fistl
mov
xor
and
add
pop
dec
adc
adc
add
add
push
scas
cmp
cld
add
mov
push
adc
ss
push
dec
ljmp
adc
dec
dec
ds
stc
sub
les
out
pop
sub
add
insl
out
movsl
scas
movsb
movsl
push
mov
mov
lea
cltd
testb
imul
add
dec
das
mov
fdivrs
in
hlt
loopne
xlat
cmc
dec
xchg
lds
add
mov
add
clc
out
pusha
add
add
movsb
xchg
jnp
dec
inc
xor
movsl
aam
add
add
fldcw
mov
pop
jo
test
mov
out
pop
mov
pop
call
insl
dec
add
add
adc
sbb
fsubr
cmp
jge
fistpll
mov
mov
iret
sub
add
add
inc
add
dec
insb
add
cwtl
cmp
inc
add
add
and
mov
mov
lcall
mov
jl
add
xchg
dec
scas
icebp
lret
add
add
sbb
add
adc
into
or
and
jno
mov
adc
sbb
add
add
push
sub
mov
push
pop
jmp
loop
rcl
mov
inc
adc
pop
xor
mov
add
mov
add
add
and
mov
xor
sbb
sub
aam
add
mov
jnp
mov
pop
adc
daa
mov
call
fldcw
mov
mov
repnz
bound
add
sti
aam
add
and
mov
mov
add
sub
outsl
sub
jg
repnz
arpl
adc
add
loop
lret
jecxz
cmpsb
xor
cmpl
add
mov
pop
mov
add
mov
add
add
pop
cmp
xchg
jnp
out
add
xchg
cmpsl
cmp
fnstsw
fdivs
xchg
in
dec
jmp
in
je
sbb
add
add
imul
hlt
adc
lret
mov
or
add
imul
pop
cwtl
loope
scas
cmpb
fadds
mov
loopne
dec
cmp
cmp
insb
add
add
adc
cltd
std
adcb
scas
xchg
jbe
add
add
leave
add
in
xchg
lods
dec
add
adc
sub
arpl
mov
add
add
or
mov
les
loop
pop
mov
lods
shr
push
sub
add
add
add
add
nop
inc
add
loope
sbb
sahf
pop
arpl
sbb
xchg
adc
jae
add
mov
in
mov
fucom
inc
jmp
insb
add
mov
sbbl
inc
add
push
push
dec
aaa
clc
aad
add
add
lret
bound
push
xchg
repnz
pop
xchg
in
mov
and
adc
push
out
insl
mov
jnp
mov
add
cli
call
add
in
imul
jecxz
aas
sahf
push
add
add
sbb
hlt
xchg
inc
lcall
sub
xor
mov
inc
in
dec
call
add
add
out
sub
or
push
cmp
xor
mov
or
inc
mov
fistpl
adc
add
imul
add
mov
pop
sub
rcrb
pop
cmp
add
add
jecxz
lahf
icebp
mov
and
mov
pushf
cmpb
add
add
jmp
sbb
mov
or
mov
mov
ss
xlat
inc
test
popf
inc
add
add
mov
mov
mov
and
inc
aaa
arpl
pop
mov
xchg
into
test
or
mov
test
jmp
fidivrs
mov
or
cmp
adc
leave
sbb
test
add
mov
ljmp
cld
stc
outsw
ja
cmc
int
pop
mov
add
rcll
mov
jge
lea
add
add
sbb
andb
fdivs
cmp
fucomi
mov
imul
pop
push
adc
add
mov
fadds
push
push
sbb
jbe
fdivrl
ret
ljmp
jbe
imul
xchg
ret
stos
pop
or
inc
pop
jno
lret
add
sbb
jge
adc
mov
xchg
inc
test
gs
clc
je
pop
mov
add
lahf
mov
jo
cltd
and
add
jae
pop
push
or
mov
add
adc
pop
mov
xlat
cmp
je
jb
add
add
lods
pop
js
push
scas
repnz
mov
add
add
fcomi
mov
bound
mov
inc
sahf
fcomps
push
push
rorb
sbb
outsl
mov
int3
add
mov
add
add
cmpsl
sbb
inc
lcall
add
add
loope
gs
mov
mov
add
add
dec
mov
adc
scas
mov
inc
add
add
pushf
dec
cli
jb
aad
mov
inc
add
add
mov
mov
cltd
push
shrb
add
xor
fwait
jnp
add
add
adc
mov
pop
sub
add
add
imul
insl
test
es
xchg
dec
adc
add
add
mov
jb
pop
xchg
jle
add
add
add
mov
outsl
inc
pop
pop
test
cmp
into
push
fcompl
std
shll
sub
add
pop
loop
icebp
hlt
lret
inc
int
lret
mov
daa
lahf
pop
or
add
sbb
push
lahf
roll
add
outsb
nop
outsb
sub
adc
mov
add
add
insb
add
and
cmp
xchg
stc
cmp
add
dec
jbe
xchg
shr
test
icebp
mov
mov
jl
sub
mov
lds
cmpsb
dec
les
mov
cmp
cld
xor
test
cmp
das
cmp
add
add
push
pop
fisubs
xor
push
xchg
or
cltd
mov
cmc
pop
repz
insb
add
test
in
mov
add
add
ljmp
mov
adc
inc
add
leave
flds
ja
add
add
add
iret
arpl
mov
arpl
fcomps
pop
lods
or
adc
add
add
aas
mov
push
jl
in
test
incb
jnp
mov
xor
xor
stos
add
add
add
jns
xchg
jne
sub
add
add
in
call
pop
call
mov
cmp
cmp
cmp
xor
hlt
xor
int
fscale
or
add
add
push
adc
cld
inc
mov
shll
mov
scas
xor
rorl
mov
mov
add
or
inc
add
add
cltd
sti
in
stos
jae
arpl
mov
scas
mov
ss
pop
pop
adc
xchg
imul
cld
xchg
jne
jl
jecxz
movsl
std
rolb
mov
pushf
addr16
add
cmpsl
push
cmp
adc
aad
test
mov
sbb
mull
sub
imulb
mov
mov
lds
inc
add
add
decb
mov
dec
sahf
rol
cmp
jle
rcrb
dec
and
add
add
inc
in
in
imul
or
add
add
cld
fsubrs
sub
or
mov
mov
mov
cmpsb
push
jbe
cmp
cmp
or
out
sbb
jge
pop
and
fwait
add
jbe
rcl
loope
testl
div
clc
clc
mov
or
sbb
arpl
mov
mov
popf
mov
lods
or
sbb
adc
add
add
pop
repz
inc
add
add
xchg
mov
push
stos
aam
jmp
je
add
add
push
dec
outsl
lahf
jb
jno
cmpsl
imul
out
cmc
jae
popf
xchg
jg
sbb
outsl
arpl
inc
and
add
rcrl
leave
stos
cltd
jb
xor
adc
and
add
add
add
xchg
ror
popa
push
add
movzbl
add
xor
scas
xchg
adcl
jle
mov
scas
sahf
or
add
add
in
push
dec
sub
cwtl
cmpsb
icebp
dec
or
push
stos
stos
xchg
aad
das
add
sub
pushf
sub
mov
or
mov
add
add
or
add
add
stc
add
push
fistpll
fstpt
pop
mov
add
add
push
ja
mov
mov
and
add
add
vhsubpd
mov
scas
je
jp
enter
add
add
or
sbb
add
lea
fcoml
add
xor
lock
mov
adc
mov
add
pop
mov
movsl
ja
ja
cmp
inc
adc
loopne
xor
leave
xor
adc
sbb
aas
inc
add
xchg
and
add
add
js
mov
orl
push
aaa
xor
or
add
inc
add
ja
hlt
loope
cmp
mov
int
cmp
lods
jle
sbb
sbb
sbb
cld
cld
lock
in
cs
loope
dec
add
add
lods
iret
imul
mov
out
sub
pop
imul
add
xchg
adc
sub
mov
add
lods
xchg
or
inc
inc
lods
sbb
sbb
outsb
and
test
sbb
fdiv
je
add
mov
aas
push
cmp
dec
into
test
inc
pop
decb
push
ss
lock
mov
xor
add
mov
mov
orb
not
aad
and
pop
pop
pop
and
add
add
lret
jecxz
xor
adc
test
call
push
sub
lock
xchg
fisttpl
daa
sub
dec
add
add
or
mov
lods
popf
xchg
inc
js
add
add
add
iret
xor
lea
testl
cmp
mov
mov
dec
add
add
add
mov
int
add
jle
add
add
add
inc
daa
orb
pop
jbe
hlt
aad
out
lcall
fiaddl
in
fcmovnbe
pop
xchg
add
aaa
flds
add
lcall
add
mov
cmp
fistpl
add
je
push
test
push
dec
push
aaa
lods
or
jmp
enter
leave
inc
test
mov
adc
add
xor
add
add
jno
cli
jbe
enter
hlt
inc
jne
ja
andl
int
repnz
int3
xlat
stc
out
jns
movsb
and
data16
into
mov
outsb
ret
xor
mov
add
add
jmp
dec
and
push
fdivl
add
add
pop
call
pop
add
out
out
cmp
or
dec
sahf
sbb
add
jmp
sub
inc
add
sahf
xchg
fcomps
daa
test
cli
je
xlat
push
push
xor
and
dec
pop
pop
fbstp
cmp
or
add
fnstsw
sub
xor
dec
add
add
add
add
add
add
add
in
and
mov
add
add
add
test
adc
shr
mov
sbb
add
add
jb
in
xor
ja
mov
add
es
and
add
add
add
xor
fidivs
test
pop
pop
lock
add
and
ss
test
popa
fstpt
pop
aas
mov
popf
pop
pop
xchg
lret
loopnew
or
mov
std
popf
mov
xchg
mov
add
cli
shlb
shll
mov
insl
cs
add
les
push
jecxz
cmp
pop
jns
lock
addr16
cmp
add
add
leave
jecxz
sahf
inc
fcoml
out
popf
test
out
shlb
cmp
xchg
cwtl
and
add
add
and
add
add
dec
add
add
ja
adc
and
ficoms
mov
lods
fisubrs
or
insl
js
mov
jnp
js
call
add
mov
inc
outsb
mov
cli
cmp
iret
mov
cmpsb
andb
loopne
cltd
lea
ljmp
add
lods
je
sub
hlt
xchg
sub
add
add
inc
mov
arpl
cltd
les
xor
lret
ss
and
sbb
jp
push
cs
adc
xchg
adc
popa
stc
flds
xor
or
or
mov
push
ss
adc
add
jbe
add
faddl
mov
xor
mov
fisubl
add
add
mov
outsb
or
cwtl
insb
add
jns
add
mov
xchg
bound
add
mov
sarb
jp
iret
jb
imul
in
cmp
and
push
data16
jle
pop
data16
mov
insl
jecxz
popa
add
pop
insl
pop
inc
add
add
add
addr16
lods
or
int
repnz
cmp
xchg
sbb
sbb
mov
scas
in
cli
mov
add
xor
dec
add
lods
je
xchg
insb
add
add
vgatherdpd
add
add
xchg
sbb
mov
cmp
filds
mov
cmp
lahf
test
xor
lock
add
div
loope
movsb
add
xchg
mov
add
add
lcall
iret
pop
std
and
add
add
lahf
adc
mov
test
mov
cmpsb
shll
ret
ficompl
add
aaa
pop
add
add
es
int3
jns
aaa
shll
sti
bound
jnp
ja
xchg
test
aad
les
jg
push
testl
jnp
negl
add
pushf
jb
outsb
in
test
jg
inc
pusha
add
pop
outsl
mov
jl
nop
ds
inc
sbb
jns
cmp
int3
out
sbb
sbb
incl
add
add
inc
dec
add
stc
inc
dec
int
lods
xchg
add
add
inc
add
add
lea
add
sbb
andb
sbb
stos
and
add
add
out
andl
add
mov
fldt
add
add
pop
push
lret
add
dec
cmp
fsub
or
fwait
sub
add
add
lret
lea
push
scas
je
cli
xchg
mov
cmp
incl
data16
jns
fcom
mov
inc
add
jbe
jno
cmp
sbb
adc
and
sbb
add
shrb
add
andl
add
lock
mov
hlt
xor
add
jl
push
mov
out
push
test
jae
xchg
clc
in
mov
add
add
lret
xor
sbb
loopne
jb
fimull
or
out
push
push
fiadds
pop
test
inc
mov
test
imul
push
jae
nop
xchg
imul
pop
jle
or
add
add
add
xchg
inc
repz
cmp
pop
adcl
jle
daa
lea
push
scas
lret
shrb
add
jp
jmp
add
mov
mov
add
mov
adc
sub
add
add
mov
add
in
jg
scas
imul
rolb
cwtl
bound
gs
mov
mov
xchg
testb
add
ds
test
xchg
push
in
scas
mov
jne
dec
daa
xor
xchg
shl
mov
jbe
lahf
adc
add
push
call
add
pusha
add
add
add
inc
sub
iret
out
lret
fwait
shll
adc
cld
test
out
imul
pop
push
lahf
out
jmp
xchg
sbb
sub
mov
mov
pop
dec
es
inc
mov
add
shll
push
adc
jle
mov
push
sub
add
add
int
aam
outsb
sub
push
iret
daa
sahf
out
arpl
outsb
mov
or
popf
insl
les
mov
mov
mov
xchg
cmp
mov
push
sbb
add
add
add
jo
mov
mov
add
add
add
add
jo
xlat
sub
jo
lock
xlat
pop
test
add
insl
aam
mov
push
lahf
imul
jecxz
sub
lahf
shlb
test
add
add
add
das
adc
inc
xor
mov
mov
int3
adc
in
filds
rcrl
mov
add
push
out
out
xor
pop
fldcw
fsts
mov
add
arpl
sar
inc
fsubrs
dec
add
aas
xchg
sbb
int3
mov
and
outsl
sbb
int3
nop
add
inc
pushf
fadds
mov
cwtl
int
aad
mov
cmpsb
or
sub
mov
mov
leave
sbb
addr16
lea
sti
fdivr
sbb
cmp
enter
xchg
pop
mov
mov
inc
add
add
dec
add
mov
mov
pushf
mov
cmc
xchg
add
add
xchg
stc
xor
cltd
lcall
testb
adc
xor
xchg
lret
add
xchg
lods
cmp
js
in
out
mov
mov
aam
dec
adc
adc
and
and
mov
pop
std
sbb
jbe
push
out
lea
push
rclb
push
loop
sbb
push
xlat
sub
mov
adc
jae
cmpb
mov
push
pop
mov
mov
or
add
add
divb
out
sub
add
add
nop
ja
ljmp
xor
add
cld
fidivs
push
and
jnp
mov
add
add
pushf
pop
mov
mov
or
fwait
cmp
mov
iret
rolb
daa
lock
mov
cli
or
add
add
das
ficoms
or
pop
push
xchg
outsl
mov
cmpsl
or
add
add
add
ss
push
pop
enter
sbb
and
inc
xchg
dec
xor
mov
lock
leave
jmp
inc
add
add
pop
in
imul
dec
add
add
test
sbb
out
call
notb
push
aaa
add
mov
and
mov
ljmp
xchg
push
cltd
sub
repz
mov
push
jno
shrl
stc
test
add
dec
outsl
push
ret
cmpsl
xchg
xor
jg
mov
or
add
lcall
or
gs
les
lods
inc
popf
and
xor
insb
add
add
pop
adc
add
jle
pop
outsb
mov
loope
sub
dec
scas
into
or
add
pop
outsl
gs
shll
dec
jge
jmp
pop
push
and
addr16
fists
into
mov
ds
mov
push
pop
inc
add
add
push
jo
pusha
add
add
mov
push
cs
popa
iret
mov
xor
xchg
add
add
jl
imul
pop
nop
popa
xchg
test
xchg
mov
mov
add
add
mov
add
push
add
mov
clc
mov
pop
inc
add
cmpsb
aad
cmp
dec
shll
xchg
add
add
pop
pusha
add
daa
ficoml
pop
lahf
std
lret
add
add
out
mov
aaa
ds
out
sbb
dec
out
jo
or
add
add
gs
inc
inc
mov
pop
or
insb
add
fmull
dec
andl
mov
inc
arpl
pusha
add
add
shlb
cld
add
dec
add
add
ss
add
add
mov
out
jg
cmc
or
and
add
add
rclb
add
add
stos
iret
pop
add
push
mov
lret
cmp
or
mov
insl
iret
add
add
int
sub
fdivp
test
sbb
sbb
mov
pop
enter
rolb
inc
ljmp
dec
cs
call
pop
and
add
add
add
add
add
sub
call
ja
pushf
sub
jo
paddsw
add
add
out
push
rcll
inc
outsb
pop
ret
mov
add
sub
add
add
xchg
cltd
lret
xchg
ja
xchg
dec
add
xor
hlt
mov
add
add
add
lods
mov
mov
jp
js
ret
add
add
gs
push
push
dec
add
add
jl
aas
push
cwtl
add
mov
mov
cld
iret
mov
lods
fadds
push
test
lods
push
scas
push
lahf
divb
and
mov
mov
adc
mov
cmp
and
pop
mov
cmpb
xchg
ljmp
iret
add
push
sub
test
rorb
mov
cltd
and
icebp
push
sti
or
ret
hlt
mov
std
xlat
or
inc
add
add
and
add
add
and
ss
sbb
xchg
addr16
jbe
or
pop
mov
stos
out
in
loopne
add
add
mov
add
add
sbb
xchg
sarb
pop
jle
jmp
adc
stos
add
add
enter
sbb
cmpsl
mov
push
pushf
int
xchg
push
cmpb
push
or
pop
ds
stos
jne
xchg
sub
pushf
sbb
add
add
add
loopne
jae
in
inc
repnz
sub
add
add
add
add
dec
mov
repnz
inc
adc
icebp
mov
lds
add
inc
add
aas
adc
sarb
pop
dec
shrb
insb
add
add
loop
cmp
or
add
add
ss
sbb
mov
shr
aad
mov
add
aam
pop
jae
aas
and
or
mov
inc
add
add
add
add
loopne
pop
shlb
add
outsb
test
sbb
divl
insb
add
js
cmp
les
loope
xchg
outsb
add
or
pop
jmp
push
pop
add
add
nop
push
popf
or
mov
add
mov
sahf
mov
call
add
addr16
push
mov
pop
stc
push
cli
imul
les
mov
mov
mov
lods
sbb
ljmp
xchg
add
cli
cwtl
js
adcb
int
dec
jl
les
aad
addr16
or
nop
dec
jb
aad
jo
sub
repnz
mov
stos
add
rorb
dec
sub
insl
clc
push
stos
lods
nop
loopne
or
mov
add
add
cwtl
inc
aad
push
mov
scas
jb
xchg
jbe
in
pop
pop
in
icebp
sbb
inc
add
add
xchg
mov
mov
adc
pop
mov
pop
data16
jge
or
jb
push
repz
mov
gs
or
cmpsb
fbstp
push
scas
xlat
and
add
add
mov
call
outsb
repz
add
add
xchg
cs
test
lss
inc
mov
adc
adc
int3
push
testl
mov
ljmp
adc
mov
mov
sbb
pop
inc
sub
jg
mov
add
xchg
jge
pop
mov
fwait
in
sti
xchg
repz
fcompl
arpl
add
xchg
push
dec
scas
test
scas
int3
mov
pop
push
mov
jns
lock
sub
add
pop
inc
jo
inc
aam
jo
adc
add
pop
hlt
out
sahf
pushl
sub
cmp
dec
aad
cmp
push
ja
add
test
mov
add
sahf
loop
test
aam
popf
mov
test
sub
add
add
into
jo
subb
and
mov
out
xor
test
inc
xor
jg
fld
stos
xor
icebp
in
add
add
mov
xor
lods
sub
pop
xor
insb
add
jb
xor
sub
insb
add
or
mov
shrb
add
add
mov
mov
mov
into
sbb
lods
adc
je
mov
lahf
mov
cwtl
jg
lock
popa
inc
add
add
sbb
inc
dec
add
add
dec
or
mov
loope
mov
xchg
data16
jae
cld
js
shrb
pusha
add
sbb
add
mov
mov
xor
cltd
icebp
push
pop
stos
fistps
into
sub
and
add
add
adc
sbb
test
dec
jge
xchg
fisttpll
add
push
lret
push
pop
push
mov
xor
mov
add
sbbb
and
shll
cmpsb
xchg
sbb
fdivrp
in
inc
inc
add
add
or
add
add
cmp
cmp
pop
int3
lods
sub
add
add
mov
xlat
enter
add
add
addb
or
jno
add
add
test
mov
add
cltd
test
push
pop
notb
dec
xorl
xchg
pop
sahf
jp
mov
add
mov
mov
cmpsl
cmp
xchg
int
add
add
xchg
out
lahf
fistl
and
cwtl
mov
out
lret
sub
add
add
mov
fxch
subl
xchg
leave
push
push
add
test
rcl
aad
aaa
or
xchg
lock
cmc
cmp
adc
push
inc
add
add
sub
mov
cmpl
add
inc
add
add
push
inc
add
mov
mov
add
popf
and
add
add
mov
or
add
add
and
or
aad
arpl
in
ret
jp
add
leave
repz
xor
add
add
adc
popf
loope
or
es
xor
fdivrs
into
fists
push
cmp
scas
mov
add
add
jnp
xchg
add
jge
rcll
mov
sub
add
add
rolb
add
mov
pop
add
sbb
movsb
jo
in
out
cmp
bound
mov
loope
mov
inc
add
cmp
dec
xchg
fistpll
jge
test
testl
xchg
in
fidivl
add
add
orl
add
jne
add
add
bnd
ja
aaa
push
cmc
pop
ja
or
add
add
out
jg
int
bound
push
or
add
add
lds
lcall
add
add
sbb
jae
mov
add
add
inc
fidivl
lods
pop
out
cmp
jns
dec
add
add
mov
add
add
add
add
and
dec
xchg
inc
daa
dec
add
push
pop
pop
notb
push
popl
dec
mov
dec
fstl
add
add
mov
dec
add
dec
add
fwait
sti
pop
dec
add
add
aaa
pop
jb
cwtl
fmuls
add
nop
mov
pop
movsb
pop
inc
rorl
add
mov
lcall
push
sub
add
pop
aas
mov
push
movsb
les
dec
add
add
mov
mov
cmp
or
mov
sbb
imul
add
movsb
ja
mov
fstps
imul
add
add
jge
jmp
hlt
push
inc
sbb
mov
jae
add
add
cmp
push
sub
fadd
adc
sub
mov
adc
adc
add
mov
cwtl
pop
pop
adc
lock
repnz
xor
pop
inc
push
in
cmp
add
push
adcl
icebp
outsl
loop
add
or
add
add
add
add
fsin
inc
enter
std
adc
adc
mov
testb
add
int3
jp
cld
mov
int3
out
ljmp
push
and
lods
cwtl
test
inc
add
add
xor
imul
push
dec
inc
add
shlb
inc
into
push
xchg
call
sti
lret
negl
movsl
pop
pop
adc
xor
jge
push
xor
push
repz
inc
add
add
lcall
adc
mov
push
pop
loop
dec
add
add
lds
add
add
repz
mov
outsb
mov
mov
push
scas
adc
jnp
pop
xor
test
dec
jnp
scas
and
jmp
stos
inc
mov
add
add
rorl
mov
sbb
lea
adc
mov
pop
jae
popa
aaa
push
add
sbb
add
jns
out
aaa
insl
mov
mov
add
mov
sti
mov
add
insb
add
add
xchg
daa
and
cmpsb
scas
int
add
add
lret
outsl
push
cwtl
jb
or
add
add
rclb
jae
pop
rcll
mov
icebp
sbb
jb
xchg
lcall
rorl
mov
lds
mov
dec
cmp
cmp
mov
push
sub
add
add
xchg
pop
inc
add
add
dec
cmpsl
xor
pop
and
add
or
mov
inc
jb,pn
add
add
mov
jae
iret
insl
and
add
pop
xchg
mov
cmp
add
add
mov
pushf
scas
inc
dec
std
fisubrs
lds
test
and
pop
cmp
add
mov
and
jno
mulb
out
in
adc
add
add
add
popa
scas
adc
cmp
add
xchg
mov
add
hlt
test
cmp
add
pop
jae
add
out
mov
imul
cmp
push
popa
fwait
idivl
imul
add
add
lock
nop
xor
jge
int
jmp
pop
mov
lods
pop
sbb
add
sub
jb
or
mov
dec
jo
or
popl
add
pop
aas
xchg
test
rclb
add
popa
dec
sti
fucomi
add
add
mul
mov
jnp
push
add
je
sar
mov
hlt
outsl
jb
fidivrs
jno
cmpsb
push
cwtl
inc
addl
in
add
add
ja
sub
and
add
mov
pop
push
stos
mov
inc
add
mov
or
push
subl
andb
add
pop
xor
mov
add
add
jp
mov
repz
add
add
dec
jp
add
add
mov
pushf
push
add
mov
lcall
leave
or
loopne
data16
push
sub
in
jnp
ret
jle
ja
ret
pop
stc
lods
pop
sub
push
cmp
add
mov
repz
mov
in
lock
pop
sbb
and
add
add
mov
dec
inc
pop
movsb
icebp
cmp
loope
add
arpl
add
popa
jecxz
repz
inc
leave
fimuls
mov
mov
jp
leave
out
jge
push
imul
inc
mov
ds
add
add
xor
mov
jecxz
ss
pop
ljmp
add
add
mov
imul
shl
mov
nop
aaa
fdivrs
xor
insb
add
add
mov
xchg
mov
pop
fsubrl
add
add
mov
or
adc
aad
xor
imul
movsb
xchg
and
add
add
add
add
lds
enter
add
add
xor
mov
cmp
cmp
xchg
notl
test
jecxz
fisubrs
addb
mov
push
lret
adc
mov
pand
add
add
std
inc
mov
push
push
inc
xacquire
add
mov
jl
pand
pop
cmc
inc
add
or
add
add
sub
add
add
js
lcall
pop
push
or
xchg
sub
mov
or
add
add
pop
jl
adc
dec
xor
mov
dec
pop
cmc
cmpsl
dec
add
inc
jmp
insl
lahf
mov
add
add
ror
mov
in
dec
and
dec
add
imul
sbb
aaa
push
popa
rcrb
jns
dec
xor
mov
imul
sub
mov
lahf
pop
inc
movsl
adc
inc
add
sub
add
jecxz
add
adc
add
add
loope
push
sti
sub
cltd
sahf
imul
lahf
sub
add
add
out
in
xchg
iret
jge
fldcw
out
in
jmp
inc
in
in
sti
push
jne
jl
push
imul
inc
add
imulb
add
add
add
add
add
add
sub
in
sub
inc
dec
lods
imul
add
add
add
add
loope
inc
mov
or
add
add
outsb
add
rcrl
sti
jge
add
mov
icebp
adc
pop
or
loop
pop
sbb
jle
pop
cmp
sbb
dec
add
mov
mov
dec
mov
and
stos
mov
in
es
add
lods
xor
icebp
loope
xchg
lret
ret
sti
or
add
add
xchg
hlt
es
jb,pt
lret
imul
cltd
jl
jge
fiadds
add
scas
outsb
pop
scas
ret
aas
roll
loope
add
cmovo
mov
ljmp
pop
inc
add
add
lret
sub
add
cltd
jl
cwtl
inc
add
add
jno
repz
xchg
orb
cmp
mov
inc
add
out
sub
sbbb
add
xchg
jp
pop
daa
xor
cmp
or
inc
sub
add
xchg
fwait
lds
add
add
ret
fcompl
cmp
pop
iret
pop
imull
add
popf
jbe
and
pusha
add
add
outsl
xor
sub
iret
xor
sbb
aaa
mov
dec
sbb
add
add
lds
add
mov
mov
push
test
mov
xchg
push
adc
ret
and
add
add
cli
out
inc
sti
sub
fwait
add
add
in
xlat
filds
xor
outsb
cltd
scas
sub
add
add
shll
push
mov
sbb
or
add
add
jnp
mov
mov
outsl
add
mov
mov
mov
sub
sbb
add
add
add
loopne
push
dec
add
add
push
jp
aam
adc
add
mov
shrb
jns
adc
jge
pop
jns
gs
inc
add
add
add
add
pop
lods
mov
ja
add
add
insl
movsb
std
mov
adc
aad
movsb
and
mov
or
mov
stos
dec
add
add
dec
leave
dec
xor
xchg
loopne
sbb
shrb
sub
push
or
movsl
lock
jno
add
add
add
js
in
mov
pop
sub
popa
lret
lea
sbb
test
addr16
inc
mov
mov
loop
xor
movb
dec
mov
js
jg
add
out
int3
inc
mov
adc
ja
stos
mov
sahf
lock
xor
mov
fldt
shlb
xchg
push
adc
call
mov
shl
cmp
add
pop
dec
push
mov
ljmp
mov
pop
pop
addl
daa
loope
fmull
jae
rcr
or
in
es
cmc
data16
roll
add
add
loope
mov
push
xchg
lcall
inc
add
add
in
rol
loope
pop
dec
add
lret
lret
test
nop
in
dec
and
adc
adc
xchg
bound
sahf
das
out
mov
cmp
cld
push
pop
dec
loopne
sbb
fiadds
add
lret
add
add
add
and
mov
sub
add
cli
pop
stc
mov
jns
cmpsl
xor
jbe
sub
add
add
ljmp
mov
das
pop
add
add
add
or
and
adcb
movsl
mov
add
add
dec
dec
push
stc
daa
out
mov
fisubrs
add
add
jb
cmp
or
mov
jns
gs
adc
shl
andb
adc
push
lret
jmp
add
adc
orl
jns
fiaddl
sub
mov
or
movsl
gs
xchg
in
repz
push
movsl
pushf
ret
in
sti
loopne
dec
push
cmp
cmp
and
add
mov
jbe
dec
sbb
pop
mov
sbb
push
mov
pop
lock
jo
xchg
rcr
fprem
jae
inc
add
idivb
in
jnp
jecxz
xchg
mov
mov
add
xor
push
movsl
mov
notl
add
adcb
and
add
add
ljmp
jne
pushf
mov
roll
bound
leave
mov
cmpsb
jne
mov
dec
inc
jb
das
mov
add
add
xchg
pop
sbb
dec
add
add
dec
add
xchg
negl
ror
fwait
inc
add
add
mov
mov
mov
aas
daa
psrlq
les
add
add
mov
movsl
ret
xor
or
xchg
push
xchg
loopne
cmp
lods
add
add
add
ljmp
mov
jns
add
add
add
mov
lock
add
jmp
add
add
adc
jmp
movsl
movsl
xchg
test
jg
jbe
push
pushf
cmp
add
add
lret
movsb
mov
inc
xchg
inc
xor
add
mov
mov
add
add
daa
lea
cli
xor
hlt
icebp
push
push
push
out
jge
subl
aad
arpl
push
push
mov
sub
mov
sub
imul
push
fimuls
add
add
mov
leave
sbb
lret
imull
push
sub
add
add
push
xorb
pop
push
fidivrl
loope
or
or
add
add
mov
hlt
aas
add
adc
jo
add
pushf
daa
xorl
jae
out
sbb
js
jle
jp
push
aas
mov
or
add
add
or
add
add
jns
cld
stc
movsb
push
xchg
aaa
mov
xlat
jnp
sbb
xchg
and
or
mov
xchg
incb
scas
mov
push
jae
insb
add
add
cmpsb
and
into
mov
inc
lock
mov
push
jg
cmp
jae
int3
inc
or
add
cmpsl
sbb
insl
mov
hlt
bound
ret
mov
add
mov
add
add
or
add
add
and
stos
mov
add
adc
adc
lea
mov
xchg
movsb
mov
add
in
aas
dec
out
pop
mov
mov
xor
add
add
mov
jb
movsb
cld
pop
mov
les
xchg
mulb
add
mov
sahf
add
lock
inc
mov
outsl
jg
adc
sub
add
add
mov
je
xchg
sbb
lret
sbb
loop
imul
add
add
rorb
int3
add
add
add
jns
aam
push
inc
test
stos
pop
xchg
sbb
push
roll
cmc
adc
add
add
cmc
jge
lret
call
adc
cmpb
nop
outsb
jne
les
out
add
add
and
add
add
inc
lods
or
add
add
lea
lds
add
adc
loopne,pt
add
add
add
adcl
fst
aas
jle
loop
add
mov
and
jle
add
add
scas
pop
mov
mov
dec
add
addb
test
inc
es
hlt
xor
and
shlb
sbb
lret
mov
sti
add
repz
add
push
lea
sub
inc
inc
ret
add
std
pop
mov
add
add
mov
add
add
add
pushf
ret
mov
loope
or
add
add
cld
or
add
add
add
pop
mov
ret
fdiv
lods
sub
add
add
add
add
leave
stos
jb
add
add
andl
sbb
lea
sahf
repnz
mov
test
cld
rclb
dec
add
add
add
mov
das
int3
add
add
add
mov
add
inc
sbb
test
leave
jbe
fsubs
pop
lods
out
xor
adc
nop
mov
xor
dec
mov
push
cmpsl
pop
pop
xchg
cmp
subb
add
outsb
out
lcall
outsl
xchg
imul
mov
dec
mov
mov
mov
cmp
mov
cmp
jmp
clc
pop
cmp
add
and
cmp
daa
cmp
movsb
adc
push
iret
jne
fcomps
fists
ret
mov
add
inc
add
sbb
add
arpl
dec
cld
leave
mov
mov
dec
imul
mov
stc
fst
and
pop
inc
out
jge
sub
mov
sub
add
add
arpl
mov
add
or
mov
pop
adc
mov
rorb
add
insl
cwtl
sbb
aad
inc
add
out
mov
add
push
testb
bound
push
pop
jge
cwtl
inc
shll
pop
jb
test
jg
push
clc
mov
aas
nop
pop
repnz
into
repnz
loop
xchg
in
and
std
pop
shl
stos
xor
push
pop
pop
aam
insl
lret
js
movsb
imul
xor
lods
cld
sbb
add
add
add
push
mov
cmovae
inc
add
sarb
test
cmp
or
dec
add
mov
xchg
lods
xchg
pushf
test
fdivs
and
stos
insl
push
dec
add
add
push
adc
cmp
add
mov
xor
mov
sbb
sbb
jl
sbbl
add
add
jo
rcrl
sahf
pusha
add
push
js
add
add
pop
lods
stc
nop
je
mov
jp
fisttpll
daa
mov
add
mov
xchg
and
mov
in
and
mov
rcll
jnp
xor
jecxz
andl
aas
inc
mov
or
inc
jmp
xor
xchg
fsubl
add
rep
and
mov
add
test
sub
or
add
add
dec
add
add
fidivrl
adc
sub
xchg
xor
xor
mov
or
sbb
stos
add
lods
xchg
pop
std
adcl
xlat
popf
adc
outsb
pop
cmp
js
lret
adc
or
les
jnp
xchg
mov
ret
imul
hlt
dec
lret
ficompl
xor
daa
inc
inc
lahf
les
lock
imulb
add
xchg
mov
or
xlat
test
adc
scas
mov
lret
test
cmpsb
and
mov
pop
enter
sub
pop
mov
jp
lods
jle
mov
cmp
sti
mov
lret
cmpsl
cmp
pop
jb
xchg
xchg
aad
mov
mov
add
add
sub
ds
rcl
fldenv
add
add
mov
xchg
dec
add
or
mov
pop
out
add
add
jo
mov
dec
daa
shll
add
push
test
jae
sbb
xor
cltd
pop
sub
add
add
add
and
pop
and
xchg
push
cmc
or
testl
pop
lahf
dec
add
add
fdivp
in
and
mov
inc
lods
mov
add
iret
add
addr16
or
add
add
xor
mov
jmp
jae
es
xorl
add
test
fiaddl
call
add
ds
arpl
rcrb
popa
in
lcall
push
bnd
lret
pop
leave
ret
rcrb
popf
fwait
xor
mov
cmpsl
jae
loopne
arpl
cmp
lods
pop
mov
add
mov
xchg
dec
add
pushl
les
decb
shr
cmp
push
cwtl
mov
fmuls
mov
inc
int
mov
in
in
bound
out
out
shlb
cwtl
jl
fucomip
incl
das
jae
jmp
mov
sbb
push
sub
lret
mov
mov
fmull
mov
aam
lahf
jns
and
add
add
add
scas
mov
hlt
leave
sub
in
add
scas
test
inc
push
movsl
push
filds
jmp
bound
add
add
ja
mov
add
add
ror
pop
sbb
add
add
loop
in
pop
inc
jge
xor
jmp
mov
cmc
jmp
fidivrl
cmp
movsb
or
je
cwtl
lahf
pop
or
mov
aad
adc
add
dec
push
rorb
ffree
call
sub
mov
lcall
cwtl
push
scas
std
jge
cli
fistl
xlat
fbstp
lret
mov
mov
sbb
push
pop
and
sbb
inc
iret
stc
sbb
add
int3
cwtl
xchg
fwait
sub
add
add
add
add
int
nop
call
clc
push
xchg
call
outsl
data16
add
mov
xchg
xchg
cmp
insb
add
add
mov
mov
add
cwtl
and
add
ja
sbb
ret
push
enter
add
cmp
in
dec
push
rcr
jge
cld
push
ja
jecxz
sub
add
add
add
cs
mov
dec
jmp
test
cmpsb
insl
ret
xor
add
inc
add
add
dec
mov
cmp
add
test
jge
loop
repz
cmp
mov
xor
cld
jnp
xor
fbstp
imul
loope
sub
mov
imull
xor
les
in
dec
xor
cli
rorb
sahf
hlt
push
aam
insl
mov
sti
inc
fstpl
mov
push
test
rcl
pop
lahf
push
dec
xchg
fiadds
sbb
aad
out
push
mov
add
push
fidivl
or
add
aas
bound
es
mov
add
dec
add
add
or
or
mov
out
jge
fwait
mov
imul
add
mov
movsb
es
push
mov
add
pop
sbb
loop
mov
add
ss
or
mov
xor
xor
mov
pushf
pop
aas
push
test
cli
jbe
out
xor
xor
jecxz
pusha
add
orl
jo
mov
add
push
sub
add
std
int3
bound
add
int3
ret
jmp
ljmp
mov
xorl
pop
repnz
jae
xchg
ds
loopne
and
push
pop
lock
push
test
js
lock
add
add
mov
pop
xlat
imul
add
adc
inc
add
add
addr16
dec
add
out
xchg
add
add
add
les
sub
mov
aas
sar
dec
xchg
dec
mov
lods
test
js
add
lahf
sbb
loopne
out
les
icebp
cmp
sub
mov
add
add
add
icebp
mov
and
mov
sbb
fidivl
mov
and
add
add
xchg
sahf
fdivs
repnz
cmc
dec
cmp
add
add
add
add
add
add
sti
leave
pop
test
pop
ja
les
push
dec
jne
add
add
inc
inc
mov
jns
arpl
pop
inc
add
aas
movsl
bound
mov
add
pop
idivb
rorl
push
mov
shl
mov
outsl
ja
imul
in
push
fidivl
dec
add
loopne
jae
fidivrs
lock
jnp
pop
pop
or
leave
mov
das
xchg
xchg
mov
xor
or
add
lret
in
adc
add
add
add
shl
sub
aas
sbb
add
add
add
pop
push
nop
out
push
mov
add
add
sbb
mov
in
xchg
and
sub
add
add
in
push
jo
add
push
add
popa
xor
xchg
jnp
cs
push
xchg
push
and
add
add
mov
xor
cmp
test
dec
add
nop
pop
adc
stos
mov
inc
adc
das
in
repnz
or
add
xor
sbb
sbb
in
push
shr
add
add
pusha
add
add
sub
add
add
mov
test
add
add
ljmp
scas
mov
xchg
push
idiv
xor
or
add
add
jno
push
ret
in
loopne
push
xor
shll
cmpsb
xchg
inc
stc
jno
shl
daa
stos
cli
jmp
jmp
popa
insb
add
popl
add
in
push
cmpsl
shl
ret
push
push
sbb
or
jae
add
fimull
jbe
xchg
add
into
jl
enter
mov
mov
mov
ucomiss
push
aas
mov
sahf
inc
add
add
out
dec
xor
popa
dec
cmp
cs
in
lret
add
add
ss
stc
in
inc
add
or
sbb
add
popf
cmp
subl
pop
es
or
add
add
adc
fnstsw
xchg
or
add
int
lock
adc
rcr
sub
dec
pop
xchg
iret
add
cmp
addl
push
sub
add
jo
fsts
aad
push
mov
push
stos
pop
adc
in
dec
mov
mov
sbb
mov
lahf
sub
mov
cmp
mov
fcoms
push
adc
push
sub
add
add
add
push
xor
mov
adc
push
adc
mov
mov
add
add
mov
mov
ficompl
lds
fimull
add
xchg
cmp
ja
dec
loopne
test
jecxz
lcall
jb
ret
add
add
add
mov
mov
in
add
add
and
add
xor
sbb
cmp
fstpt
xchg
adc
adc
xor
insb
add
repnz
mov
int3
cmp
mov
call
rorl
add
dec
pop
dec
loope
fwait
mov
push
lahf
ficomps
cmp
add
add
or
ds
cmc
jne
cs
loope,pn
and
mov
out
std
lret
sbb
mov
push
xchg
add
lock
mov
mov
inc
in
cmp
jbe
mov
lret
mov
test
ss
add
add
sub
sub
add
add
add
add
dec
add
push
xchg
out
imul
mov
add
or
inc
pop
sahf
out
imul
scas
call
fdivrp
jge
or
cmpl
mov
sub
adc
mov
push
xchg
test
cmp
mov
insb
add
stos
jae
xor
mov
rorb
ja
sbb
and
mov
sub
mov
add
mov
rcll
les
cwtl
push
jl
pop
and
repnz
imul
decb
shll
add
add
or
mov
in
jo
lcall
add
add
movsl
lods
insb
add
add
jbe
stos
iret
lds
xlat
and
mov
cs
test
add
mov
or
sti
popa
and
add
add
inc
add
add
imul
test
add
add
sub
mov
inc
cmc
mov
in
push
and
popl
add
push
sub
add
add
fucom
xor
add
xor
mov
orl
add
jmp
xlat
mov
add
mov
int
fcom
outsl
mov
inc
out
fidivrl
mov
in
js
out
loopne
adc
jecxz
lods
mov
jg
loope
cld
bound
mov
dec
add
test
cmc
test
adc
and
push
push
cmp
ja
push
push
and
xchg
xor
es
jne
jp
xchg
push
and
mov
dec
imul
push
mov
jb
sub
add
add
ljmp
sbb
xchg
data16
xor
repz
sbb
aas
mov
xchg
dec
xchg
mov
adc
loopne
icebp
jmp
add
add
cmpsl
stos
arpl
sbb
add
dec
ret
push
ja
fstpl
sbb
test
add
add
mov
add
add
mov
mov
push
xor
jae
sub
fisubrl
bound
sbb
shrb
out
int3
xor
jmp
imul
add
or
movsb
hlt
fdivs
xor
test
clc
mov
fwait
gs
add
add
or
add
add
mov
outsl
icebp
shlb
jne
movsb
bound
fucomip
xchg
test
repz
xchg
in
fbstp
jle
inc
fwait
cmp
mov
adc
in
pop
push
ret
imul
pop
xchg
or
mov
hlt
push
xchg
out
lret
cltd
int
lea
sarl
jmp
mov
mov
aad
jno
test
or
mov
push
lret
jg
test
cmp
arpl
add
add
mov
fwait
xorb
repnz
mov
add
add
add
add
aad
dec
sub
jae
int
xor
jg
add
jecxz
sub
mov
dec
jns
mov
ret
lods
shrl
xchg
mov
push
test
cmp
jne
push
mov
out
pop
arpl
jle
jge
rolb
add
xchg
popf
xor
addr16
dec
pop
into
mov
xchg
mov
repz
loopne
aaa
and
sub
scas
sbb
addr16
cmp
add
jne
xor
mov
push
sbb
pop
mov
popa
call
jo
fnsave
adc
add
or
sbbl
mov
jne
scas
inc
test
xchg
int
add
add
jno
jmp
mov
dec
jmp
jne
sbb
enter
mov
repnz
imul
idivb
fistl
or
add
add
cmp
xlat
in
or
cmovae
xor
xor
sbb
or
mov
ds
out
mov
mov
test
dec
or
add
add
add
lock
or
in
cli
or
add
mov
iret
sbb
mov
xor
jmp
jne
cmpsl
lahf
fistl
mov
lds
push
lcall
scas
mov
add
sub
add
add
mov
sub
add
cmpsb
loopne
sbb
add
add
xchg
enter
xchg
xchg
inc
and
mov
xorb
scas
roll
xchg
inc
add
sahf
mov
out
and
mov
lret
repnz
cmp
aad
arpl
movaps
add
add
mov
add
add
and
add
add
cmpsl
push
adc
lret
inc
aam
push
mull
imul
pop
push
stos
mov
js
dec
sub
mov
xor
iret
ret
cmpsb
xor
icebp
push
dec
jp
repnz
xor
stc
mov
add
add
test
add
add
mov
or
jmp
incb
add
lods
fidivrl
pusha
add
add
fld
mov
add
add
test
cmp
xlat
stos
ss
lea
add
adc
ret
jg
test
inc
aad
imul
not
loope
mov
jae
cmc
mov
mov
mov
xor
sarb
sbb
flds
mov
add
pop
leave
mov
xchg
mov
xchg
add
add
add
add
add
test
add
add
adc
int3
shll
inc
jle
in
mov
xor
jne
or
shrb
mov
loopne
adc
imul
movsb
lret
lahf
scas
sbb
cwtl
out
xor
lahf
mov
out
mov
dec
stos
jbe
int
mov
div
enter
lds
cli
lcall
add
add
decl
in
das
in
incb
mov
ss
sbb
pop
ja
test
stc
pop
xchg
les
and
add
add
mov
mov
ljmp
add
inc
and
xor
sarl
fwait
mov
pop
push
add
jnp
push
lahf
roll
or
clc
or
add
addb
imul
test
adc
and
add
add
sub
mov
outsb
and
mov
adc
daa
shlb
mov
sahf
clc
jns
adc
insb
add
dec
bound
push
data16
fsubr
test
add
add
mov
outsl
mov
out
xor
mov
mov
ss
out
xchg
imul
cmc
into
outsl
jmp
push
daa
xchg
push
cmp
add
add
fisttps
cmp
mov
cmp
lock
mov
mov
push
mov
mov
push
xchg
int3
dec
jge
or
mov
ret
pop
mov
add
add
add
mov
test
push
pop
mov
dec
sub
mov
add
xchg
add
out
jg
push
in
push
sarb
xchg
cltd
push
addr16
dec
add
mov
push
mov
ja
pushf
cmp
jns
cmp
add
idivb
fwait
push
jp
shl
inc
add
add
cmpl
add
leave
js
aaa
ret
add
add
add
add
aaa
adcb
mov
add
xor
aam
add
sub
or
add
add
mov
loope
cwtl
pop
test
add
push
push
jmp
call
ret
inc
xchg
fsubrp
idivl
hlt
pop
out
lds
push
nop
mov
shll
add
add
pop
pusha
add
add
adc
dec
inc
rsm
add
add
or
push
jle
es
or
add
add
test
aas
sub
out
xlat
sahf
sbb
add
dec
add
add
and
mov
inc
xchg
add
jb
and
mov
add
add
fnsave
popf
cmpsb
dec
add
add
sti
push
frstor
testl
dec
mov
aas
stos
xlat
push
lods
jb
xchg
inc
aad
mov
popf
add
dec
add
divb
lea
add
outsb
mov
lea
cmp
in
sbb
jbe
sbb
loope
cmp
pop
xlat
cmpsl
adc
lahf
xchg
pop
jns
add
xchg
repnz
insb
add
add
in
out
test
shlb
push
in
popf
jg
push
lods
outsl
inc
nop
mov
repz
leave
mov
out
mov
jnp
jg
jbe
pop
outsl
popa
hlt
cmpsb
leave
mov
inc
add
add
push
ja
arpl
fwait
cmpsl
cli
cmp
into
arpl
movsl
movsb
shll
add
add
pop
lahf
cmp
ss
lds
arpl
insb
add
pop
out
popf
xor
mov
sub
add
add
pop
clc
push
xor
cmp
mov
mov
mov
and
aaa
jle
mov
dec
add
mov
cmp
sbb
scas
nop
adc
cmp
mov
ds
fwait
and
add
add
xor
fadd
aaa
insb
add
cmp
ret
jno
add
add
xchg
add
cld
xor
adc
rolb
stos
ja
ret
mov
or
shl
rcrb
mov
cltd
and
add
add
test
sbb
add
jae
jp
fdivr
sub
mov
jge
jp
in
xchg
adc
cs
sub
sbb
jmp
insl
pop
jns
add
test
mov
add
add
out
lods
mov
hlt
and
add
add
mov
subb
call
cmp
sbbl
pusha
add
sbb
dec
add
add
mov
xlat
shl
int
jnp
mov
inc
jb
mov
mov
xchg
push
notb
pop
cmp
int3
ret
jbe
mov
and
mov
jle
add
mov
xor
sub
add
pop
xchg
arpl
adc
add
inc
cli
stos
cmp
push
in
mov
cmp
add
mov
mov
push
mov
flds
add
cmc
mov
xlat
mov
push
ljmp
adc
fstps
jbe
popa
mov
mov
add
add
add
dec
add
add
inc
xlat
dec
xor
inc
adc
xor
ret
inc
cwtl
push
adc
fmuls
int3
and
mov
aas
mov
mov
push
test
repz
push
jb
or
stc
cmovg
pop
add
mov
add
add
dec
shlb
add
cmp
popf
negb
loop
jl
jo
ret
cmpsb
pop
pop
andl
jmp
adc
add
adcb
fcmovnu
mov
mov
stos
dec
mov
push
aaa
sbb
insb
add
add
daa
adc
add
aam
iret
ss
imul
xchg
out
insb
add
imul
sub
adc
and
mov
mov
pop
div
jge
pop
adc
push
mov
mov
sti
cmpsl
mov
push
mov
addr16
or
add
add
ret
cmpsl
rorb
mov
mov
cmp
push
sbb
jne,pt
das
stc
add
add
xchg
mov
push
mov
mov
jne
cmp
lret
inc
cmpl
enter
push
andl
into
lret
in
scas
jbe
inc
cwtl
mov
dec
add
mov
mov
adc
sub
mov
add
jb
or
lahf
push
mov
cli
ds
sbb
and
or
shll
mov
aas
pusha
add
add
cmp
add
cmp
mov
push
and
or
repz
add
add
and
add
add
jmp
pop
or
mov
add
dec
add
adc
dec
jge
bound
gs
cwtl
add
pop
push
mov
sub
call
outsl
daa
adc
lret
jge
xchg
popf
jmp
sub
mov
or
mov
movl
sub
dec
fsubr
adc
add
popa
out
fiadds
add
repnz
sub
mov
repz
dec
insl
xchg
push
cmp
imul
adc
mov
fidivs
fiaddl
add
inc
popa
inc
xor
adc
add
test
das
lcall
inc
mov
inc
testl
test
movsb
cltd
mov
lds
jg
out
push
mov
jmp
add
push
xor
xchg
and
pushl
sbb
mov
imul
mov
dec
int
cmp
jne
ret
mov
mov
add
ficoms
das
mov
in
cmp
stc
out
mov
add
add
cs
cli
xchg
xor
outsl
jl
mov
push
mov
add
movb
repnz
int3
pop
xchg
jg
dec
add
add
and
jecxz
stos
pop
inc
mov
mov
std
mov
or
or
sbb
xchg
xchg
push
lock
cmp
clc
mov
cmp
loope
mov
dec
add
add
jne
in
mov
les
add
ja
jbe
jmp
call
add
cmpsb
icebp
mov
add
sbb
add
xchg
stos
cmp
or
mov
mov
lret
add
add
sbb
dec
stos
aaa
rcll
mov
mov
xor
xor
insl
ret
mov
push
das
fsts
arpl
sub
pop
stc
or
icebp
jno
mov
aam
cmpsl
dec
add
nop
sbb
adc
add
add
scas
popf
pop
fisttps
mov
push
jnp
sub
xlat
or
dec
push
adc
mov
aam
xor
cmp
xor
dec
and
scas
and
push
pop
fiadds
mov
or
add
sti
scas
sub
cltd
test
add
mov
mov
mov
fcom
mov
inc
insl
cli
inc
popa
cmp
sbb
xor
add
add
test
push
sarl
and
add
add
push
or
jbe
and
add
add
jg
mov
fisttpl
cmpsl
xchg
adc
loopne
and
jnp
mov
xor
out
add
adc
add
in
addl
int3
pop
movsb
and
ss
bound
mov
add
add
sub
add
add
jge
outsl
scas
push
mov
in
cmpsl
je
jne
rclb
mov
lret
std
xchg
xchg
inc
sarb
and
mov
add
inc
sarb
inc
push
pop
pop
addr16
add
add
test
clc
xor
js
add
je
sub
popf
push
icebp
mov
jae
cwtl
into
push
test
mov
js
pushl
mov
add
add
jno
scas
adc
mov
add
add
add
mov
je
or
mov
add
add
icebp
outsb
arpl
xor
add
js
lds
sub
mov
xchg
mov
test
xchg
stos
mov
jge
pop
mov
sub
add
test
sbb
loop
sbb
in
pop
jge
push
js
in
add
add
cltd
mov
add
jp
loopne
in
adc
rorb
loopne
enter
add
rcr
push
jl
sti
cmpsl
maskmovq
notl
mov
insl
push
ds
push
inc
push
rcl
add
add
fisubl
and
add
rcrb
js
nop
push
call
sub
xlat
xor
fwait
mov
ret
or
jmp
mov
outsl
cmp
add
push
cltd
js
icebp
mov
stc
test
das
mov
xor
mov
sub
incb
xchg
sub
mov
ss
add
lods
pop
jo
aad
aas
loope
dec
add
xchg
or
mov
cmp
jmp
fxch
inc
rcrb
pop
loopne
mov
ljmp
add
add
add
xorb
fists
repz
cmp
lea
add
add
mov
add
popa
sub
mov
sub
cmp
add
arpl
pop
fsubrl
push
shll
sahf
sub
add
mov
iret
ret
push
fsubrs
add
add
add
daa
popf
outsb
pusha
add
add
jle
ret
mov
xchg
inc
add
mov
sub
mov
in
ret
and
shlb
jnp
mov
and
mov
fsub
pop
loopne
aam
xchg
andps
sarl
ds
inc
add
push
mov
mov
jb
iret
push
call
subl
loop
js
outsb
add
inc
cmpl
lcall
add
sbb
cmpsb
or
xor
adc
leave
mov
mov
pop
mov
cmp
xchg
xor
ja
pop
mov
sub
and
mov
sarl
add
and
lock
add
add
adc
call
add
add
adc
lea
add
cmpsb
pop
or
rcrl
mov
cwtl
cmp
sahf
dec
scas
sahf
dec
daa
xor
std
loop
sub
add
add
ja
stc
mov
lods
cmpl
mov
xlat
mov
fisttpl
add
add
xchg
loope
sub
add
add
in
jnp
push
pop
adc
xchg
outsl
je
negb
dec
add
add
xchg
jae
in
dec
adc
test
pop
sbb
jns
in
in
shr
cmp
xchg
mov
call
icebp
aas
pop
dec
mov
ja
push
shld
xor
pop
subl
aaa
xorl
add
mov
bound
add
xchg
jmp
in
cmp
mov
jl
pop
mov
sub
mov
out
lahf
push
cmp
cmp
imul
push
add
push
rcr
lcall
xchg
xor
mov
inc
jp
sub
adc
xor
mov
cmpsl
pop
pop
dec
and
add
cmp
jbe
pop
mov
mov
adc
or
add
add
cli
and
inc
sbb
aaa
or
add
add
add
mov
dec
cmp
mov
xlat
cmp
enter
test
xchg
pop
clc
sbb
add
pop
and
add
add
das
dec
pop
jb
dec
add
mov
ret
sbb
push
xor
shll
fidivs
mov
lock
cmpsb
and
cmpsl
movsl
add
add
lods
lcall
adc
jns
or
cmp
pop
push
jmp
adc
or
add
add
loopne
mov
mov
add
les
popf
pop
dec
add
out
fldenv
ds
adc
loopne
dec
fcomp
ret
add
sbb
stos
jb
ds
push
add
push
dec
lods
jo
push
arpl
mov
fwait
add
pop
lahf
pop
testb
loopne
lea
fadds
inc
xor
add
sbb
and
mov
cmp
popa
xchg
and
bsf
add
stos
pop
adc
jl
push
xchg
adc
imul
stos
lahf
jmp
mov
add
add
pop
jnp
ds
stc
loope
ret
add
add
add
mov
add
loop
and
xchg
filds
mov
xorb
insb
add
mov
imul
jne
push
mov
cwtl
rorl
or
inc
add
add
add
daa
and
adc
sbb
mov
inc
add
xor
add
inc
xor
or
add
xor
scas
jge
adc
cli
iret
mov
scas
std
loop
fimull
or
add
add
add
inc
dec
cmp
test
adc
repnz
jecxz
cmp
push
jl
inc
mov
add
pop
jge
repnz
add
test
jle
sub
add
cld
insl
jmp
xor
sub
lcall
add
mov
ja
add
mov
lods
outsl
or
or
sahf
dec
fld
mov
stos
inc
sub
add
cltd
sbb
lods
cmp
je
into
daa
mov
leave
add
mov
mov
mov
add
je
cmp
fisttps
xchg
rclb
add
insb
add
add
mov
imul
sbb
jnp
xchg
ja
cmp
cmp
add
add
mov
cmc
fwait
out
pop
mov
aam
sub
inc
add
add
jg
add
shl
je
add
sub
mov
xchg
sub
jp
lock
iret
inc
add
add
dec
add
jle
adc
pop
loopne
jge
scas
adc
rol
pop
out
sbb
outsl
fsts
test
fstpl
mov
xlat
mov
jl
ss
ret
enter
fwait
mov
fsubr
enter
test
fwait
cltd
fldenv
jbe
pusha
add
add
cltd
sub
mov
mov
ret
insb
add
mov
pop
dec
mov
add
push
xor
mov
pop
mov
cmp
addr16
pop
aad
nop
inc
cmp
std
icebp
pop
add
pushf
nop
jge
dec
and
add
jmp
imul
std
loopne
pminub
add
cmp
fwait
lret
cli
dec
icebp
and
mov
sub
add
add
aaa
and
mov
sub
ret
je
pop
mov
mov
push
sub
out
pusha
add
mov
add
in
mov
adc
cmp
add
jecxz
mov
rcrl
jp
rol
out
xor
mov
jno
push
push
out
push
out
je
add
add
add
imul
add
aam
sub
icebp
jge
xlat
xchg
pop
cmpsl
push
or
xchg
and
mov
push
cmpl
sub
pop
bound
cmpsl
popa
cmp
ficomps
dec
iret
lahf
lds
mov
imul
and
mov
js
xchg
outsl
jae
adc
push
or
cmc
jno
mov
add
add
lods
or
scas
xor
fisubrl
xorl
add
scas
lret
xchg
adc
add
add
add
mov
in
daa
leave
adc
sbb
jge
stc
mov
adc
mov
imul
not
inc
mov
push
out
add
std
lret
adc
pop
pushf
mov
sub
add
add
pop
je
and
ret
xlat
icebp
imul
add
add
aas
fidivrl
sub
mov
daa
fdivl
xchg
jns
mov
stos
push
adc
lock
aaa
xchg
int
bound
jbe
out
mov
insb
add
mov
cltd
outsl
inc
cmpsb
bound
int3
lods
fisubrs
cmp
add
add
add
mov
mov
push
xchg
and
jl
outsb
sub
mov
lcall
inc
stos
sti
hlt
inc
gs
nop
pop
int
lods
fbld
test
call
add
add
add
inc
mov
push
push
jg
leave
dec
pop
shlb
mov
push
nop
jp
adc
cs
xchg
mov
xchg
iret
sbb
sub
sbb
add
add
jne
mov
jno
dec
cmpsb
or
add
add
xchg
pop
dec
loop
dec
add
add
mov
fcoml
mov
pop
fidivl
mov
add
and
add
add
gs
call
xorb
mov
das
dec
add
ja
roll
mov
pop
mov
sbb
insb
add
nop
xchg
fidivrs
jg
cmp
paddb
add
cli
xor
hlt
insl
clc
mov
or
jnp
test
sar
mov
push
lret
out
mov
jb
insb
add
add
xor
pop
xchg
add
cmp
add
add
cwtl
cmp
mov
xchg
sbb
lret
sbb
dec
faddl
into
xor
out
ds
inc
add
mov
and
mov
pop
clc
aaa
mov
fisubl
sub
mov
add
add
jno
aad
movsb
inc
fidivrs
lret
out
or
mov
shl
leave
xchg
std
xor
lahf
sti
fisubs
andb
xchg
or
add
add
xor
int
pop
pop
lret
push
imul
or
dec
jg
fcos
pop
mov
in
xchg
addb
ss
and
mov
cmp
push
sbb
enter
mov
push
lret
mov
jae,pn
shl
cmpsl
icebp
js
insb
add
add
add
dec
add
add
popa
imul
sub
test
cmp
es
ljmp
out
add
mov
outsb
test
push
sbb
dec
sahf
mov
scas
cs
cmpsl
pop
mov
insb
add
xor
inc
cs
cmp
scas
fsubrs
lock
add
add
add
pusha
add
add
cwtl
xchg
insb
add
add
aad
add
add
call
add
sub
dec
push
sbb
add
push
xchg
unpcklps
xlat
jecxz
out
xor
dec
add
add
outsl
loope
mov
movsl
add
add
add
jmp
repnz
mov
fidivrl
mov
in
fwait
xor
pop
xchg
jae
mov
mov
adc
and
mov
subl
jmp
push
adc
out
mov
jbe
imul
lock
imul
sbb
or
add
add
add
add
hlt
adc
ret
cmpsb
ljmp
jg
rclb
out
leave
jno
add
add
add
add
bound
jecxz
cmpsb
dec
call
lret
sbb
incl
imul
push
mov
pop
dec
mov
pop
push
add
mov
xchg
dec
cmp
mov
mov
add
les
add
in
xor
and
cmp
int3
mov
insl
icebp
and
mov
add
loopne
sub
mov
int
fistl
mov
add
add
add
je
in
orl
test
loope
push
sub
pushf
sub
fwait
pop
or
mov
add
mov
inc
pop
loop
push
leave
test
imul
jecxz
mov
enter
sub
arpl
inc
mov
add
push
ficoms
mov
pop
jbe
cs
std
stos
xchg
add
add
cld
movsb
sub
mov
add
add
sub
mov
push
jno
push
scas
mov
add
xchg
sbb
push
ljmp
mov
in
test
add
add
repnz
dec
add
cmc
and
mov
xor
push
or
mov
xchg
scas
dec
push
sub
mov
call
or
adc
sti
insb
add
imul
sub
add
add
in
mov
add
add
cltd
push
inc
jmp
leave
iret
push
scas
rclb
loopne
push
sarl
out
nop
dec
sub
add
add
jne
in
idivb
push
pop
in
adc
dec
insb
add
clc
je
jns
inc
add
inc
dec
add
insb
add
add
enter
int3
in
into
or
add
xchg
xchg
les
mov
mov
js
in
incl
add
arpl
add
add
add
loope
ret
push
lret
sbb
dec
loop
enter
push
pop
pop
lret
mov
cmp
jge
sarl
sub
jl
cwtl
dec
add
add
in
jbe
fwait
cli
jns
mov
fsubs
add
add
xchg
aad
idiv
or
mov
xorl
pop
xor
jg
fxam
push
sbb
int
in
in
call
mov
cmc
push
dec
icebp
ja
add
push
cmp
dec
add
add
jg
cwtl
push
add
inc
fucomip
loopne
dec
and
add
mov
clc
pop
lcall
jge
push
aad
ljmp
shll
sbb
hlt
nop
popa
in
lods
fsubl
adc
mov
pop
pop
jo
and
add
in
js
ret
dec
adc
test
xchg
movsb
jb
pop
and
fistps
add
add
out
and
mov
scas
inc
add
fisttpl
xor
outsl
aas
push
sbb
jne
lea
aam
popa
jb
movsl
or
repz
jns
lods
lahf
data16
pop
imul
cmc
lret
xchg
add
add
lahf
mov
dec
sbb
add
cmp
add
xchg
ficoms
scas
rcll
int3
test
jae
jmp
jbe
mov
add
xchg
test
leave
mov
adc
js
and
mov
fdivrl
fidivrl
sbb
sub
add
add
sbb
xor
add
xchg
loop
cwtl
mov
add
add
sbb
mov
outsl
inc
add
add
add
xor
jae
bound
sub
mov
hlt
inc
adc
jg
add
add
add
lea
inc
add
pusha
add
outsl
sbb
or
add
add
rclb
sub
xor
rorb
or
mov
flds
test
pop
cmp
xchg
fxch
cmc
sub
out
xchg
push
jle
rcrl
fsubrl
pop
pop
jno
inc
mov
leave
ja
loopne
arpl
cmp
cmpsl
in
sbb
and
xchg
jp
stos
jbe
add
add
popf
addr16
jb
xchg
mov
loop
or
add
add
add
xor
pop
std
je
xchg
sub
nop
imul
lcall
pushf
xchg
out
add
xor
sbb
or
add
add
clc
and
fimull
add
sub
lds
dec
add
add
dec
add
push
xor
push
mov
outsl
aad
outsb
sbb
add
and
je
lods
ret
cmp
xor
sbb
call
jb
and
add
and
add
add
ja
js
push
insl
clc
imul
pop
xchg
scas
imul
clc
mov
sub
mov
pop
jle
and
hlt
loope
dec
add
ss
jle
repnz
xchg
stos
clc
mov
lahf
sbb
mov
and
push
xor
orb
pop
outsl
xor
aam
pop
testl
fnstcw
add
add
es
xchg
push
std
xchg
dec
cwtl
push
cmpsl
adc
jb
push
sahf
mov
add
jo
lock
je
adc
sti
mov
pop
mov
test
jp
push
movsl
std
stos
pop
push
pop
sbb
icebp
ret
jae
mov
dec
mov
dec
add
jb
mov
adc
int
mov
add
inc
jle
xor
in
lret
in
fwait
in
leave
testl
pop
daa
pop
stos
jo
pop
mov
mov
sub
pcmpeqb
std
inc
xchg
mov
pop
in
mov
shrl
pop
mov
add
add
dec
or
mov
inc
movsl
xlat
int
sti
pop
adc
arpl
sahf
mov
das
and
sahf
adc
xor
idivl
out
movsb
jle
in
sar
dec
add
mov
mov
enter
add
add
mov
adcb
sbb
inc
mov
inc
and
lock
js
or
mov
mov
add
adc
jge
jbe
add
ds
mov
data16
or
mov
jb
xor
adc
cmp
add
push
jecxz
mull
mov
mov
outsl
outsl
bound
mov
sbb
test
adc
xor
add
in
jmp
into
movb
dec
inc
mov
pop
pop
xlat
adc
and
shl
pusha
add
add
les
das
jbe
mov
in
push
mov
cmp
fdivs
add
cmp
js
mov
add
add
or
add
add
fdivrs
mov
idivl
sbb
add
add
mov
mov
inc
add
add
popa
jp
cmp
lahf
inc
xchg
jl
arpl
mov
scas
sti
inc
add
shl
jl
cwtl
sub
pop
mov
sub
push
fisttpll
stc
and
repz
push
jg
add
mov
ja
dec
inc
movsb
sti
pop
adc
mov
xchg
push
and
add
add
mov
mov
jl
adc
sub
add
in
adc
aas
jl
stc
and
add
add
sbbb
sub
xlat
and
shr
cltd
repz
orl
sub
aas
addr16
add
jo
inc
cli
cltd
cmc
hlt
iret
push
fldln2
dec
aad
scas
cli
and
pop
lahf
sahf
add
ficoms
lods
js
dec
add
add
mov
pop
inc
outsb
les
xor
add
add
jg
insb
add
add
int3
mov
add
mov
enter
inc
jno
mov
add
add
or
add
add
and
add
test
mov
add
mov
push
inc
leave
jnp
std
andl
popf
aam
cmp
movsl
out
je
clc
add
aaa
repnz
add
mov
xor
mov
cmpsb
shll
adc
pop
jne
das
movsl
ret
mov
cmp
cmp
jmp
mov
push
mov
test
add
adc
add
add
push
lcall
jge
addr16
and
mov
data16
xchg
dec
jmp
pop
incl
gs
mov
push
jle
test
pop
insl
xchg
mov
pusha
add
add
enter
jmp
mov
or
add
add
push
mov
inc
add
add
lret
pop
mov
insl
gs
add
jnp
add
sbb
mov
add
push
and
jecxz
jl
mov
int
aam
add
mov
sub
mov
das
std
and
aad
pop
ret
mov
adc
or
adc
mov
xchg
into
cmp
mov
mov
andl
pop
sbb
add
insl
fnstcw
lds
add
sbb
fsubrl
arpl
les
popa
adc
notl
lret
das
inc
jmp
bound
sub
mov
add
nop
js
add
add
pushf
cmp
insl
fnstcw
pop
loopne
sub
les
aad
push
mov
dec
test
inc
les
push
adc
sub
mov
arpl
adcl
jae
cli
cmp
jae
movsl
into
mov
mov
adc
dec
add
pop
stos
rep
add
jnp
dec
add
sub
add
mov
cmp
shl
pop
and
add
inc
mov
lahf
fwait
add
sub
and
add
add
mov
add
add
xlat
cmp
hlt
mov
insb
add
add
sbb
dec
jmp
add
add
mov
inc
jge
xchg
jbe
lret
stc
xchg
cli
adc
incb
in
ja
loopne
movsb
add
fistpl
cltd
inc
lods
pop
shl
lret
jg
xchg
pop
adc
bound
inc
add
shlb
or
lret
mov
xor
sbb
jp
sub
add
add
pop
lods
dec
add
add
daa
inc
nop
fistpl
xor
or
add
add
push
inc
jno
cmp
loope
popf
mov
stc
cltd
mov
rol
int
add
add
pop
call
loop
stos
fisubrl
cmc
repz
hlt
pop
jmp
lods
cmp
in
jle,pt
flds
cmp
sub
add
add
xchg
fldl
je
mov
add
int
loop
adc
pushf
dec
pop
xchg
xchg
xchg
fucomp
imul
add
add
mov
fidivl
out
or
mov
lahf
or
add
pusha
add
dec
fcmove
aaa
cmp
inc
cli
adcb
pusha
add
pop
outsb
in
inc
add
add
adc
popa
jmp
add
add
loope
insb
add
add
inc
sub
add
cmpsl
in
sbbl
rolb
jmp
outsl
test
mov
cmp
add
add
pop
push
div
add
add
add
add
int3
push
cmp
test
cmp
inc
mov
in
fimull
add
add
mov
imul
sbb
add
int
lea
loop
add
iret
orb
add
add
xor
lcall
add
add
inc
mov
mov
insl
mov
or
mov
mov
add
add
int
add
add
add
xchg
outsl
aaa
sub
or
mov
mov
add
add
mov
add
xor
xor
inc
jle
pop
push
mov
lcall
or
sahf
dec
aas
sbb
dec
out
sbb
push
test
xchg
xchg
je
movsl
cltd
pop
scas
inc
nop
ljmp
test
lret
mov
dec
add
add
shrl
xlat
or
add
add
push
lds
add
jns
es
mov
add
add
mov
xor
cmp
fcmovb
push
mov
add
loop
shlb
outsb
adc
xor
inc
jecxz
nop
mov
lahf
insb
add
add
loop
push
fldcw
add
add
xor
jg
cld
loopne
cmp
pop
pop
popa
mov
inc
leave
mov
add
mov
jmp
jbe
or
add
add
push
iret
fimuls
or
add
add
ss
repnz
or
pop
in
push
lret
xor
add
add
mov
adc
sti
adc
loope
dec
add
add
lahf
fidivs
hlt
imul
add
cmpsb
test
add
sub
mov
push
je
dec
and
inc
sahf
push
js
outsb
stos
mov
addl
add
pop
mov
add
add
mov
and
pusha
add
xchg
int
pop
jne
fistpl
mov
lock
ret
jae
jmp
jg
push
scas
dec
int
sbb
adc
sbb
repz
das
inc
add
fwait
cmp
arpl
rcl
add
fucomip
inc
mov
inc
jp
cmp
pop
pop
add
mov
outsl
lods
push
int3
ret
cmp
add
je
jns
sbb
leave
stc
fwait
lock
mov
cli
mov
ret
dec
mov
pop
cmpb
inc
jns
insb
add
cmp
mov
enter
mov
push
or
add
jle
rorl
cmp
add
mov
clc
xor
xchg
and
add
add
push
add
xchg
bnd
mov
and
mov
call
cmp
adc
mov
add
add
add
outsl
out
push
cmpsl
dec
pop
outsl
mov
push
ja
dec
add
sbb
sarb
push
cmp
jle
js
mov
add
push
into
gs
mov
cmc
inc
dec
int
outsl
mov
ret
shlb
push
fcoml
mov
cli
cld
enter
movsl
add
mov
jne
out
pop
dec
int3
adc
lea
add
mov
xor
popa
js
mov
mov
adc
mov
lret
mov
push
adc
out
mov
add
aaa
in
mov
mov
mov
ss
popf
into
mov
jnp
inc
mov
enter
rcrl
test
out
int3
adc
add
add
add
mov
add
add
fdivp
enter
push
int
adc
in
push
add
or
add
add
sub
xlat
hlt
loope,pt
cmp
test
rorb
leave
mov
dec
add
in
addr16
add
rcrb
pop
adc
add
xor
lret
add
add
cli
xchg
jmp
lahf
mov
inc
fiaddl
mov
or
add
add
mov
out
lea
inc
push
enter
addl
push
sahf
negl
and
shll
add
add
add
pop
push
jle
lds
stos
test
stc
or
mov
arpl
imul
mov
xor
mov
ljmp
add
les
cmp
addr16
or
mov
cltd
mov
add
add
je
add
pop
mov
out
setae
adc
add
jg
fcmovne
mov
jno
jp
into
adc
add
and
or
mov
xchg
es
or
aam
hlt
dec
insl
sub
add
les
add
add
cli
dec
lds
sbb
es
mov
insb
add
lret
jl
shl
lret
mov
adc
xchg
or
add
add
sub
jns
cmpsl
sbb
push
cmp
std
test
test
enter
xchg
aaa
mov
stc
push
outsl
sub
add
dec
mov
cmpsb
jp
xchg
cmp
jnp
mov
iret
shr
or
add
or
stc
mov
loopne,pn
sar
xchg
pusha
add
inc
add
or
incb
add
add
pop
pop
out
shll
adc
adc
add
lds
sti
dec
fiadds
mov
push
pop
sbb
add
popa
and
add
add
jae
cmp
stc
imul
xchg
inc
add
xor
inc
cwtl
xchg
sarb
and
fidivrl
cmpsl
sub
enter
adc
cmc
sbb
sbb
sub
add
add
popa
fstps
int
add
adc
adc
or
sahf
icebp
lcall
xchg
sub
add
mov
add
add
es
jnp
fwait
sbb
scas
jbe
orb
add
add
sub
lret
xor
cmpsl
je
push
fldcw
shlb
pusha
add
add
js
xchg
adc
jb
sub
add
add
sub
rcr
or
add
fisttps
icebp
inc
and
add
add
add
test
add
adc
push
sahf
in
cwtl
popa
jl
and
add
add
lret
das
cmc
pop
jbe
pop
sub
loope
lock
add
scas
or
mov
movsb
sub
add
add
cltd
stos
xor
mov
inc
lcall
scas
adc
jge
pop
popa
dec
leave
arpl
mov
mov
push
cltd
js
pop
add
jge
jno
pop
jne
hlt
mov
ja
cli
push
mov
add
mov
dec
lret
cmpsl
sub
mov
push
lea
xor
insb
add
add
mov
cmp
cmp
mov
dec
add
lea
add
add
test
push
ss
cmp
test
lds
jle
outsl
jne
rorb
add
xor
pop
mov
mov
adc
pusha
add
pop
pop
push
xor
ret
mov
jp
pop
inc
add
scas
push
jne
pop
cwtl
arpl
add
add
add
sub
add
icebp
add
pop
fwait
stos
nop
mov
movsl
cld
stc
into
inc
xchg
or
lods
in
or
cmc
sahf
movsl
xor
daa
add
mov
or
sub
add
add
sbb
cli
neg
in
push
mov
aaa
les
add
cs
inc
insb
add
add
add
add
fistps
cmp
pop
cmpsb
mov
add
add
or
mov
add
int
stos
cwtl
push
data16
xor
xor
test
lods
dec
out
dec
pop
mov
dec
add
ja
stc
fnstsw
les
xchg
insb
add
add
add
test
pop
jp
jp
loopne
dec
enter
add
fnstsw
hlt
dec
xlat
push
and
rorb
add
add
movsl
popf
lcall
mov
pop
mov
gs
in
inc
dec
insl
out
cltd
fildll
push
daa
mov
enter
pop
into
adc
loop
pop
mov
pop
jmp
jge
lahf
lods
jmp
mov
and
mov
mov
push
negl
addr16
stc
out
inc
adc
xchg
mov
outsl
sub
add
add
pop
jmp
repnz
addb
add
pop
and
dec
inc
mov
test
pushf
fucomip
lock
add
add
mov
out
lods
aas
mov
gs
push
pop
cwtl
pop
sbb
stc
or
mov
arpl
dec
es
mov
push
jbe
std
jmp
ja
jno
add
mov
fwait
jmp
daa
xchg
pop
int3
test
xor
mov
sbb
and
add
add
lret
xorl
adc
add
push
add
jg
stc
jno
jp
xor
lea
add
add
data16
or
imul
xor
inc
add
add
dec
jb
ss
add
add
sbb
shl
imul
add
add
mov
mov
mov
mov
adc
imul
cmp
add
and
ret
mov
mov
mov
sub
add
shlb
xchg
mov
and
add
add
leave
mov
add
lahf
pop
add
and
add
jle
add
add
sbb
fistpl
shll
cmc
xchg
mov
int3
fnstsw
lock
std
popa
and
das
add
mov
add
add
icebp
add
mov
add
jb
mov
daa
fdiv
loope
test
adc
sub
cmpsb
or
lret
push
and
outsl
and
jb
mov
and
mov
std
or
fdivrl
enter
pop
cmc
mov
pop
and
adc
push
lcall
aam
sbb
dec
add
add
jnp
pop
add
add
jo
add
mov
xor
es
add
push
pop
mov
add
and
mov
xorb
jb
jecxz
mov
mov
rorb
stc
fistpl
push
daa
imul
mov
lods
ss
data16
js
mov
add
ds
xchg
cmpsl
jge
adc
pop
popa
cltd
dec
add
mov
mov
add
lret
sub
dec
add
add
nop
fiaddl
ss
aaa
add
add
mov
mov
dec
add
inc
enter
cltd
cmpxchg
ss
fnstcw
sbb
lahf
jp
dec
cmp
cmpsb
daa
sub
pop
mov
incl
pop
pop
dec
lea
add
fistl
add
mov
dec
mov
leave
adc
add
add
cltd
insb
add
rcrl
adc
sbb
mov
push
les
test
mov
dec
add
add
data16
insb
add
add
jg
faddl
add
add
pop
mov
je
xchg
seto
pop
lock
ljmp
lret
push
insb
add
add
sbb
xor
xor
mov
ss
mov
sub
popa
fcoms
test
dec
or
mov
sub
ljmp
add
push
scas
fldl
add
add
je
adc
imul
arpl
outsb
inc
jl
inc
add
add
mov
aas
xor
outsb
mov
aaa
cld
dec
aaa
popa
jecxz
inc
add
insb
add
loopne
fbstp
add
jae
adc
add
test
add
add
add
dec
or
mov
cmp
push
ret
ss
and
stos
inc
popa
push
xlat
adc
adc
insl
pusha
add
cmpl
xchg
xor
mov
xor
jo
mov
xlat
aam
lcall
sub
add
add
lret
sub
mov
scas
dec
inc
mov
mov
and
xor
aas
inc
add
add
mov
call
dec
jg
xor
push
lret
add
add
cltd
nop
xor
mov
add
add
pusha
add
add
out
iret
sbb
xlat
xchg
call
jno
aam
add
jg
jno
adc
inc
mov
xchg
xor
rcll
xlat
push
pop
push
push
or
add
xorb
push
faddl
push
cmp
jecxz
mov
cmp
pop
aam
unpcklps
xor
add
add
mov
mov
rolb
frstor
mov
fdivr
push
push
imul
add
flds
je
push
fwait
cmp
sub
repnz
sub
add
add
push
jp
out
sbb
not
mov
xchg
pushf
js
imul
inc
xlat
jg
js
dec
pop
add
fisttps
xchg
mov
mov
xor
jnp
push
aad
addr16
mov
add
or
mov
je
stc
sar
pop
push
jl
nop
and
mov
push
inc
mov
xor
mov
mov
pop
cmp
sbb
jne
xchg
mov
bound
in
cmpsb
std
mov
jmp
lahf
xchg
lret
mov
lds
cmp
idiv
or
mov
dec
sbb
pop
add
popf
xchg
xor
or
add
add
xor
popf
adc
or
jae
push
push
repz
push
in
lret
inc
add
add
add
and
mov
add
add
pop
in
daa
pusha
add
add
test
xchg
rclb
jmp
lahf
sbb
add
mov
bound
dec
xor
in
xchg
mov
notb
add
leave
dec
inc
out
mov
sub
pop
mov
mov
xchg
aas
cld
aad
repz
add
loope
iret
dec
and
add
add
js
xchg
push
mov
int
outsl
cmc
and
aas
mov
fcompl
mov
insb
add
add
xchg
leave
stc
ds
xor
inc
test
cmp
xchg
cli
push
jnp
xor
cmp
icebp
lds
leave
add
push
icebp
movsl
push
pop
inc
daa
or
ss
lret
testl
jo
imul
add
add
add
jae
inc
loopne
mov
or
add
add
jae
rol
icebp
dec
dec
cmpb
jb
in
xor
mov
aaa
out
push
xor
aad
jecxz
pop
les
add
aaa
test
out
inc
add
scas
cmpsl
push
gs
sub
mov
lret
mov
or
aaa
push
jge
icebp
nop
mov
loop
pusha
add
shl
pop
cmp
pop
xlat
sahf
dec
cmc
or
pop
cmpsl
adc
cmp
scas
adc
pop
mov
add
mov
add
js
iret
icebp
xchg
push
insb
add
add
inc
add
add
add
scas
pop
fwait
into
enter
out
mov
xchg
inc
sbb
sub
add
add
pusha
add
add
es
test
enter
pop
cmp
mov
add
and
mov
mov
hlt
test
add
add
add
add
test
pop
and
mov
sti
outsl
aas
xchg
mov
std
test
mov
add
gs
pop
inc
jbe
add
add
rclb
xor
push
sbb
add
pop
aas
xor
pop
push
iret
out
sub
mov
and
add
out
cmp
inc
jle
outsl
and
xor
insl
leave
js
jbe
pop
pop
std
dec
add
sti
out
mov
add
mov
ljmp
add
add
add
add
add
pop
inc
xchg
sub
add
add
jl
push
and
je
sbb
push
rolb
mov
and
sub
cwtl
subl
add
add
adc
pop
mov
add
div
imul
push
push
mov
inc
and
push
dec
loopne
test
sub
loope
data16
in
inc
mov
adc
stos
push
mov
add
add
movsw
aas
aaa
lods
xor
add
shrb
add
cli
repz
add
add
inc
aaa
int3
int
jae
dec
push
add
std
out
and
mov
aad
insl
pop
xchg
and
jne
cmpl
lods
cmp
imul
mov
