popa
std
testb
mov
icebp
xor
mov
add
and
mov
mov
add
sbb
rolb
mov
mov
dec
mov
and
adc
mov
testb
sbbl
in
push
mov
or
fisubl
ja
das
call
frstor
fsts
imul
jo
mov
mov
xchg
mov
das
lds
stos
xchg
adc
popf
sub
pop
ret
gs
test
popf
push
add
jo
mov
gs
movsl
pop
repnz
ljmp
pop
push
push
add
mov
xor
pop
xchg
aam
call
add
add
addb
and
addb
ljmp
test
sbb
testb
add
aaa
scas
pusha
add
mov
mov
xor
add
mov
add
outsb
in
jno
add
enter
mov
dec
cmp
mov
mov
mov
adc
cmpsl
in
dec
and
mov
dec
fcoms
mov
rolb
lock
sub
and
mov
cli
mov
push
mov
add
cld
out
dec
movsb
iret
nop
add
rolb
mov
pop
paddw
mov
mov
mov
push
sub
add
add
or
cli
hlt
dec
fadds
mov
pop
rcrl
lock
xor
jp
add
xor
mov
or
add
outsl
inc
out
xor
mov
mov
sarl
push
inc
dec
push
icebp
sbb
pop
push
out
inc
iret
and
loope
sahf
or
push
test
jno
mov
add
dec
mov
mov
add
cmpsl
sarl
add
xor
xchg
xchg
add
jno
and
mov
fstpt
imul
mov
add
cmp
mov
mov
xchg
add
in
dec
push
xchg
adc
mov
scas
rcll
mov
insb
test
stc
lds
cmp
jae
add
mov
add
bound
mov
adc
mov
or
add
fisubl
or
inc
add
inc
sbb
iret
mov
mov
fcmovnu
dec
pop
out
testb
movsb
jnp
pusha
add
add
out
or
fisubl
das
out
mov
and
dec
iret
test
adc
add
mov
adc
mov
mov
rcrl
or
cmpsl
pop
mov
es
sarl
mov
dec
xchg
lea
or
xchg
ret
dec
inc
and
adc
add
add
add
sbb
add
dec
inc
dec
jne
loopne
mov
insl
insl
aam
adc
outsb
lret
xor
mov
scas
mov
fldl
and
mov
pop
jae
add
push
mov
adc
mov
and
sbb
pop
push
xchg
sub
cmp
pop
xor
fdivr
sub
cltd
insb
xor
mov
sub
mov
mov
loop
mov
inc
push
pop
mov
js
lock
inc
or
ret
in
js
popf
bound
mov
sub
mov
sub
fcmovne
stc
pop
or
mov
mov
jns
add
int3
gs
mov
mov
cmc
lahf
xchg
popf
in
js
sub
pop
ljmp
xchg
imul
mov
add
fwait
ds
push
mov
pop
mov
ss
fimull
add
add
ss
imul
and
mov
fdecstp
fwait
lock
faddl
xchg
aad
popa
jecxz
push
mov
pop
lea
pop
mov
iret
data16
add
stos
roll
dec
pop
dec
pop
mov
add
add
xor
dec
or
mov
les
inc
push
outsb
test
adc
cmpl
fnsave
mov
mov
leave
dec
xchg
lock
pop
inc
fistps
add
add
hlt
adc
mov
jecxz
aam
xor
pop
dec
enter
add
mov
cmp
das
cltd
or
push
mov
addb
and
dec
aad
add
loopw
mov
incb
mov
mov
mov
sbb
jge
mov
pop
pushf
aad
leave
fisubrs
xor
adc
arpl
cld
xor
push
mov
mov
jnp
xor
add
cmp
ss
adc
jne
xor
mov
jmp
in
int
cs
jle
ja
pop
sbb
aad
into
int
pop
push
mov
mov
sub
xchg
inc
push
xchg
sbb
daa
hlt
inc
xor
and
dec
mov
out
ja
orl
divb
ja
popa
fadds
call
mov
mov
jbe
sub
insl
push
popa
std
xchg
add
xchg
loope
jle
cli
int
inc
jg
or
rolb
mov
aam
les
lods
cmp
imulb
mov
add
arpl
imul
mov
xchg
jb
mov
mov
push
add
mov
jne
add
mov
mov
xchg
add
loopne
mov
rorl
and
xchg
xchg
dec
test
roll
mov
ds
adc
mov
add
sbb
ljmp
int
add
xchg
add
jbe
popf
dec
jle
stos
sub
push
and
in
icebp
add
cltd
jno
push
test
daa
loope
dec
jnp
add
push
pop
push
sbb
test
dec
imul
imul
push
add
pusha
add
and
rolb
pop
or
loopne
mov
and
mov
movsl
fstpl
mov
mov
mov
mov
push
inc
jne
add
mov
popf
iret
cmp
in
jmp
insb
sub
and
mov
inc
mov
outsl
in
enter
mov
mov
stos
hlt
pop
pop
pop
and
enter
imul
ficoms
in
pusha
add
testb
add
mov
adc
ret
test
dec
in
dec
icebp
adc
rcll
call
cmp
sbb
pusha
add
add
mov
add
mov
add
test
xchg
js
in
adcl
arpl
mov
cmp
cmp
mov
mov
add
cmpsl
dec
clc
inc
inc
add
pop
add
push
mov
add
jae
add
dec
push
mov
out
xor
pop
mov
popf
lahf
adc
and
mov
dec
in
push
test
mov
jnp
add
test
add
std
or
in
js
add
mov
push
js
cmp
cwtl
sub
push
jmp
and
mov
mov
ret
dec
jle
mov
and
mov
fdivs
add
add
xchg
int3
jp
ret
incl
fists
xorl
imul
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
push
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
pop
mov
test
movsl
outsb
je
gs
adc
add
cs
cmp
test
mov
xchg
add
add
xchg
insl
gs
and
fs
mov
ret
cmp
add
add
jl
add
xchg
fadds
sbb
imul
pop
adc
outsl
mov
mov
dec
cmpsl
xchg
test
add
repz
mov
add
or
cmpsb
jmp
dec
sub
push
add
push
hlt
aas
hlt
divl
mov
xor
mov
testb
sub
pusha
add
out
cmc
movsl
or
or
outsl
lcall
and
ss
dec
out
addb
sahf
and
rolb
and
mov
rolb
mov
and
or
arpl
inc
add
push
icebp
lahf
lods
cli
xchg
pushf
mov
hlt
mov
arpl
add
inc
add
add
mov
xor
jae
xchg
add
pop
cmp
loop
mov
cwtl
sub
add
xchg
addr16
add
add
decl
push
fs
lret
cmp
addb
je
mov
fisttps
push
jecxz
dec
cmc
aaa
repz
push
or
sub
mov
ljmp
lock
test
xor
mov
xchg
mov
push
mov
adc
mov
std
adc
mov
mov
cs
popa
lret
test
add
sub
enter
icebp
ss
push
sarl
or
inc
add
xchg
add
mov
jmp
test
adc
out
sbb
test
pop
mov
lret
repnz
add
mov
add
xchg
int3
ss
addb
enter
add
pop
inc
out
and
adc
mov
mov
xor
mov
xchg
jae
jge
cs
and
sbb
pop
mov
mov
clc
xor
add
out
pop
repz
add
nop
add
sub
mov
in
aas
jno
fdivrl
add
mov
lock
cmp
cmp
xchg
in
ret
pop
push
add
add
mov
pop
add
mov
pop
sarl
out
gs
lds
add
and
mov
or
mov
int3
xchg
mov
mov
jnp
pop
leave
mov
sub
mov
cmp
jle
scas
imul
add
lock
rcrl
bound
mov
rolb
into
outsl
jne
mov
cmp
lret
add
mov
aam
xor
xor
add
sbb
gs
aaa
sub
xchg
scas
and
call
mov
mov
cmp
ss
and
add
mov
mov
sbb
add
test
add
cmp
push
scas
leave
push
std
sbb
mov
add
mov
inc
add
test
xor
pop
adc
mov
or
xchg
mov
mov
inc
sbb
mov
add
pop
jle
add
mov
iret
ljmp
jmp
pop
in
add
xchg
mov
add
inc
mov
jmp
test
cmpl
fstps
xchg
call
into
or
arpl
add
add
idivb
and
mov
inc
lods
push
push
add
repz
stos
jne
mov
ljmp
movsb
push
add
insb
push
inc
add
dec
outsl
repnz
mov
hlt
pop
jl
outsb
shl
lea
ret
xorl
je
dec
test
movsb
xchg
clc
mov
add
popf
or
add
notl
fidivl
pop
mov
repnz
mov
mov
mov
mov
add
cmp
popf
lea
push
add
xor
mov
mov
mov
outsl
jecxz
mov
subl
rolb
arpl
std
push
decb
jns
jo
mov
inc
jg
add
mov
bound
mov
mov
popf
xor
mov
or
dec
cltd
pop
xchg
icebp
push
push
add
add
xor
or
mov
sub
inc
and
mov
add
out
add
adc
mov
aas
xor
mov
mov
pop
cmp
mov
lds
or
test
pop
jle
add
gs
and
mov
ljmp
cmc
es
xlat
mov
sahf
test
rcpps
mov
mov
loop
mov
xchg
test
mov
cmp
push
jo
mov
add
and
shll
add
mov
mov
add
fadds
mov
stos
addb
inc
aad
pop
mov
jg
pop
out
add
pop
cmpsl
mov
sbb
addb
lahf
hlt
pop
add
outsl
lods
clc
stos
imul
ret
dec
pushf
movsl
ret
lds
push
sti
push
divb
mov
push
lret
addr16
mov
add
add
into
lahf
into
fisttps
lahf
push
ds
add
int3
out
ret
and
cltd
iret
addr16
pop
adc
mov
sbb
test
out
sbb
pop
adc
add
or
scas
insl
xlat
cli
cmpsb
cmp
xchg
pop
pushaw
add
outsl
rcrl
pusha
add
inc
xor
fdivl
mov
in
dec
jmp
repz
or
add
add
loope
repnz
mov
jbe
inc
add
rolb
mov
inc
pmullw
add
std
dec
push
or
popa
sub
mov
mov
daa
dec
nop
add
ret
aam
enter
xor
fwait
adc
add
in
mov
and
mov
fdivrp
repz
dec
xor
mov
cmpsl
sub
add
dec
mov
xchg
add
clc
inc
sub
mov
les
loope
add
mov
cld
mov
mov
testl
jmp
add
rolb
mov
pop
push
add
xchg
add
pop
cli
rolb
mov
idivb
push
add
xor
add
call
xor
mov
inc
lcall
ret
fwait
jle
sar
push
nop
add
mov
mov
icebp
jge
xchg
jbe
sub
mov
sbb
aad
rcrl
dec
mov
cmp
ds
adc
mov
adc
add
add
mov
sub
addr16
mov
mov
cmp
jp
repnz
cs
idivl
mov
xor
je
mov
inc
inc
add
mov
mov
pop
adc
mov
rcl
mov
mov
or
cli
out
das
hlt
add
jg
in
stos
add
mov
jecxz
add
xchg
mov
mov
adc
mov
outsb
add
add
mov
mov
cmp
cmp
add
lea
mov
pop
mov
stos
fldenv
adc
mov
cmp
into
pop
push
fnstsw
sbb
mov
arpl
divb
dec
cmc
and
dec
pop
xchg
rolb
mov
test
mov
in
outsb
enter
mov
repnz
pop
inc
jle
jb
mov
add
inc
sbb
lret
jle
and
mov
inc
add
ss
mov
mov
dec
xchg
jo
mov
xor
insl
popf
aad
repnz
jne
pop
stos
in
dec
mov
stos
jecxz
push
push
add
xchg
aad
out
sub
add
les
pop
add
mov
inc
insl
das
mov
add
cld
jae
or
or
pusha
add
or
add
mov
leave
inc
jmp
sbb
insb
je
add
ret
pop
dec
mov
insb
inc
push
rcll
add
js
dec
jecxz
add
inc
lock
jno
addb
shrl
sub
insb
mov
add
dec
sahf
jp
add
out
aad
add
jmp
add
mov
insb
lods
sbb
addb
sbb
rolb
adc
add
outsl
out
adc
cmp
lock
mov
jno
add
xchg
add
cmc
imul
mov
adc
mov
outsb
mov
mov
sub
mov
mov
add
mov
scas
aam
sbb
add
mov
outsb
dec
rcrl
popf
outsb
xor
fsubr
add
popf
jg
and
mov
lods
insb
es
divl
mov
jmp
pop
sti
cmp
mov
push
adc
mov
mov
aas
minps
add
dec
push
cmp
add
inc
call
push
mov
mov
or
dec
and
insl
divb
mov
mov
aas
inc
and
and
int
push
add
cld
sub
repnz
hlt
sub
addr16
mov
add
addr16
ja
add
sbb
rolb
mov
test
dec
add
loop
mov
mov
or
pop
jle
data16
in
test
mov
add
xchg
cmpsl
xchg
and
sbb
sub
gs
mov
out
repz
xchg
add
mov
add
cli
mov
jno
loopne
mov
cmp
mov
out
insl
mull
dec
fsts
xlat
and
mov
enter
mov
mov
cmc
enter
popf
xor
pusha
add
notb
mov
addb
icebp
inc
outsl
les
mov
jecxz
nop
add
rolb
mov
cmpsl
or
call
ds
xor
mov
rolb
xor
daa
sbb
cltd
and
mov
repz
or
xlat
or
ret
cmovl
std
pushf
out
push
cwtl
jle
sub
jmp
ljmp
sbb
mov
mov
mov
cli
xchg
inc
pop
inc
jno
in
mov
iret
or
add
push
dec
xor
sti
repz
jns
mov
cs
mov
mov
mov
orl
mov
mov
jg
add
addb
out
lods
xchg
outsl
jge
jl
addb
jne
add
mov
into
xchg
ret
test
mov
jae
xchg
push
push
xchg
mov
pop
aas
rolb
mov
adc
mov
jno
sub
pop
loope,pt
nop
add
dec
or
pop
ret
jl
sub
and
mov
xchg
iret
rolb
mov
out
add
daa
enter
mov
add
xchg
insb
push
add
insb
pop
cmp
and
popa
mov
repz
push
call
ret
enter
aas
inc
push
in
jns
xchg
imul
adc
mov
std
mov
bound
mov
mov
inc
out
jnp
stos
inc
mov
pop
push
mov
add
fisttps
stos
inc
cmc
sub
cs
adc
aas
test
fsub
test
sti
out
stos
lods
stos
sbb
and
bound
mov
fidivs
aas
xchg
add
push
sub
repnz
leave
add
sub
enter
mov
fcoms
fdivrs
xchg
add
adc
add
add
jb
mov
pop
repz
xchg
aam
lahf
pop
push
mov
jle
adc
imul
adc
mov
mov
dec
lock
mov
push
imul
add
adc
or
ret
ficomps
hlt
jmp
sbb
push
dec
adc
mov
mov
sbb
inc
mov
and
mov
fstps
loopne
mov
bound
mov
add
mov
call
or
and
pop
add
mov
lea
test
jp
mov
push
cmc
add
push
add
and
mov
add
pop
and
add
dec
cmc
push
pop
jbe
pusha
add
out
add
dec
pop
xchg
jp
mov
lret
lahf
cmpsl
push
xchg
jae
push
out
iret
or
and
mov
test
pop
fsubrs
add
dec
lcall
add
js
inc
mulb
add
cmp
jg
mov
pop
fiadds
add
add
mov
add
mov
add
addb
lret
mov
fs
lods
and
jge
jle
stc
dec
lods
mov
mov
adc
add
mov
push
ds
repz
cmp
ret
cmp
rolb
mov
sbb
in
add
mov
andl
sbb
xor
movq
mov
iret
orl
call
add
dec
push
sahf
mov
jp
fimuls
add
jge
mov
pop
jno
in
or
dec
fcos
pushf
ja
addb
mov
loop
mov
jb
mov
aad
cmp
xor
add
push
mov
fs
add
mov
mov
ja
mov
cmpsb
push
loop
mov
dec
scas
adc
mov
mov
mov
pop
mov
jb
mov
mov
xor
xlat
sub
fldcw
mov
add
sbb
push
mov
cld
ficoms
xor
add
sub
push
pop
movsl
push
add
rolb
mov
or
pop
movsl
lods
jno
outsl
test
dec
sbb
lcall
add
sahf
xor
mov
jge
outsb
aad
add
mov
push
mov
add
mov
lea
cmp
inc
add
js
jnp
ljmp
mov
add
repz
pusha
add
mov
mulb
jge
add
cmp
jae
imul
aam
movsl
xor
fbstp
add
jl
or
cmp
pusha
add
add
test
repnz
xor
push
insl
sbb
ret
aaa
sub
rol
in
lods
sub
cmc
xchg
lods
mov
adc
jb
mov
mov
rolb
test
enter
pop
xchg
cltd
add
add
and
rolb
mov
mov
aaa
xor
jl
es
and
mov
cwtl
inc
inc
stos
xor
mov
mov
movsl
pusha
add
adc
ss
sahf
pop
lret
sbb
mov
fsubl
idivb
pop
mov
mov
mov
add
aas
add
mov
pop
addb
dec
movsl
popa
es
sub
inc
jae
or
arpl
ja
add
fmull
inc
mov
mov
mov
jns
sbb
add
fdivrs
add
repnz
adc
mov
push
sub
or
lret
mov
add
inc
pop
mov
insl
push
insl
xor
mov
push
pop
mov
mov
mov
push
xchg
aad
dec
test
loop
mov
das
mov
cltd
cmpsb
sbb
pushl
adc
add
pop
mov
xchg
fsubrl
data16
mov
add
mov
pop
imul
add
call
dec
xlat
mov
mov
add
int3
movb
lods
or
inc
add
add
pop
mov
mov
call
mov
fbstp
ret
push
loopne
mov
loop
mov
inc
sbb
jle
xchg
repz
mov
and
add
mov
cmpsb
ret
shr
dec
push
mov
test
push
cmp
jnp
in
add
addb
lock
mov
fdivl
mov
push
adc
mov
xor
mov
sbb
in
dec
rcrl
rcl
add
arpl
mov
mov
addb
icebp
lods
xchg
jne
xor
addb
addb
dec
adc
mov
mov
xchg
jmp
push
cwtl
ret
mov
pop
add
mov
out
ja
xchg
cmp
lock
cltd
jb
mov
movsb
xor
mov
jae
add
nop
add
int
ja
xchg
dec
bound
mov
in
sub
test
push
int
ja
or
add
pop
sbb
pusha
add
add
jo
mov
add
xor
mov
stos
mov
mov
inc
and
mov
out
push
jo
mov
daa
and
cmpsl
adc
sub
dec
dec
jmp
add
add
or
addb
xor
mov
ja
mov
add
jle
add
push
jle
pop
and
std
lahf
pop
xchg
data16
std
xchg
pop
pop
mov
scas
mov
ds
rolb
mov
add
mov
les
xchg
lea
add
mov
lock
inc
outsl
das
pop
push
loopne
mov
push
aam
mov
mov
nop
add
add
sub
xor
add
es
cmc
xor
mov
adc
mov
mov
mov
sarl
in
jo
mov
out
fisubs
mov
popa
loop
mov
mov
jmp
rcr
pop
push
add
pop
mov
int
dec
pop
ds
xor
sbb
add
pusha
add
hlt
push
bound
mov
rolb
mov
pop
ficoms
fcmovb
xchg
mov
xor
rcrl
pushf
testb
mov
add
add
add
add
icebp
mov
add
inc
nop
add
inc
add
mov
pop
jo
mov
sub
add
pop
xor
dec
or
arpl
mov
daa
or
jecxz
add
add
add
enter
dec
lea
jl
mov
mov
mov
pop
inc
add
icebp
pusha
add
sub
in
mov
xlat
in
out
gs
sbb
mov
test
pop
popa
imul
arpl
add
push
mov
push
mov
mov
pop
outsl
push
in
dec
int
sub
add
into
es
idivb
sti
hlt
pop
sbb
cltd
adc
rolb
mov
add
int3
inc
push
int
out
int
xchg
flds
icebp
and
mov
add
inc
jns
add
inc
sub
bound
mov
sub
bound
mov
inc
xlat
sub
sbb
pop
dec
pop
xorl
mov
loopne
mov
xchg
cmp
stos
in
insb
inc
ljmp
sub
add
mov
cmpl
pop
addr16
cmc
push
scas
mov
pop
adcl
xor
mov
sbb
pushf
push
dec
out
mov
idiv
sub
aaa
push
add
mov
jmp
mov
daa
insl
inc
adcl
or
sbb
mov
add
and
mov
repz
add
xchg
cmp
add
icebp
mov
js
inc
fisubrs
dec
ljmp
add
pop
hlt
negw
sub
inc
xor
push
mov
call
and
fwait
push
nop
add
push
cli
stos
imul
pop
add
mov
push
add
add
add
xor
divb
andl
bound
mov
in
mov
movsb
inc
add
add
mov
mov
xchg
xchg
insl
popf
mov
or
shll
mov
scas
jg
add
dec
xchg
cmp
mov
in
rolb
mov
movsb
xor
mov
mov
add
add
adc
fstps
addr16
xchg
or
pop
sbb
js
or
add
lods
or
push
sub
mov
pop
cltd
mov
push
mov
fwait
clc
scas
dec
loope
push
add
mov
ds
push
xor
mov
lods
or
mov
add
sbb
add
add
test
adc
mov
push
push
mov
add
mov
mov
popa
mov
add
add
iret
xchg
mov
and
mov
in
cmp
add
scas
xor
cmp
out
jb
mov
mov
add
mov
mov
loope
adc
mov
rolb
sbb
leave
add
cmp
add
mov
mov
add
test
mov
mov
mov
add
js
mov
fldt
cld
ds
xor
mov
or
mov
add
mov
mov
add
mov
inc
add
lds
add
mov
mov
jecxz
sub
icebp
rolb
mov
rep
leave
cmpsb
ljmp
ret
jge
mov
dec
push
clc
ret
ror
in
mov
cmp
xor
mov
jne
jge
add
mov
or
mov
inc
sub
mov
jg
xchg
data16
cwtl
add
mov
xor
mov
add
add
xchg
int
xor
add
popf
mov
lahf
jbe
pop
rorl
mov
cli
pop
push
jecxz
add
mov
cmpsb
and
push
add
add
add
cmp
ljmp
rolb
mov
repz
notb
mov
cs
fimuls
cmp
inc
cld
clc
sbb
aas
mov
add
sbb
loop
mov
mov
mov
jns
xor
mov
inc
add
stc
clc
pop
mov
scas
addb
out
jp
add
cmpsl
scas
xor
mov
xor
insl
cltd
outsl
sbb
push
cld
dec
xchg
mov
cmp
and
addl
and
mov
dec
iret
addb
and
adc
jo
mov
pop
dec
cmp
aaa
sbb
dec
insl
sbb
mov
mov
adc
nop
add
movsb
push
scas
add
mov
je
jnp
jl
or
mov
cmp
bound
mov
dec
nop
add
mov
add
sti
pop
push
push
add
push
pushf
cmc
fxch
popf
mov
or
sub
jo
mov
inc
add
push
push
jb
mov
adc
jle
gs
sbb
xor
mov
mov
mov
jns
add
addr16
mov
fwait
inc
dec
cwtl
rolb
mov
push
add
sub
cmpsl
repz
addr16
xchg
dec
pop
push
gs
cltd
fs
cmp
movsb
sub
mov
mov
mov
sub
xor
add
in
inc
push
push
xlat
imul
pop
rcr
push
mov
mov
jb
mov
and
hlt
das
mov
add
js
clc
in
fisubs
add
mov
dec
out
je
add
add
je
jne
aad
stos
add
mov
in
adc
mov
jae
cmp
add
sbb
sub
cli
mov
add
mov
add
mov
stc
add
add
das
clc
jno
ljmp
fsub
add
cmp
sub
fisubrs
lds
or
lods
xlat
scas
sahf
rolb
mov
test
jge
adc
or
jae
cld
int
jg
mov
add
inc
add
outsl
mov
das
popf
and
test
add
movl
dec
mov
divl
lret
jne
cld
sub
mov
add
lds
mov
mov
addl
cwtl
ret
fisttpll
jle
jge
sbb
xchg
mov
enter
mov
rolb
cwtl
repnz
repnz
push
outsl
or
add
xchg
cmpl
xchg
dec
incb
mov
add
pop
jmp
or
push
int
mov
sbb
add
mov
pop
add
out
mov
jns
and
fldcw
cmp
sahf
aad
popa
jno
add
mov
ss
push
add
aaa
imull
loope
rolb
mov
xor
add
rolb
mov
cwtl
pusha
add
je
pop
lret
adc
ja
sbb
jg
mov
daa
popa
mov
mov
add
lea
lcall
lea
mov
add
int3
lods
or
add
or
frstor
inc
icebp
std
mov
pop
cld
leave
mov
add
pop
or
add
rcll
add
sbb
imul
cmp
leave
rolb
mov
add
dec
sub
mull
mov
jno
mov
stos
js
xchg
sbb
and
mov
xor
mov
add
scas
pop
rolb
dec
push
jae
xor
mov
jnp
add
popf
mov
mov
add
je
xchg
loope
add
test
in
ljmp
mov
and
mov
mov
add
les
rolb
cmp
xchg
loop
mov
call
data16
sub
adc
mov
dec
fdecstp
aaa
les
sub
clc
push
pop
in
cmpsb
repz
in
fadds
aad
outsb
mov
add
add
push
clc
or
mov
mov
push
out
cmpsl
iret
inc
add
call
mov
add
test
sbb
add
add
out
cmpsb
pop
aam
sar
push
sbb
adc
cmp
lcall
mov
add
sti
cld
imul
sti
notl
mov
sbb
pop
mov
addb
xor
mov
lods
mov
add
mov
std
ja
insl
cmpsb
xor
mov
or
adc
mov
or
mov
xchg
jp
add
popa
ds
add
add
pop
add
mov
aam
add
sub
imul
repnz
pop
pop
hlt
ret
in
fdivs
mov
in
xchg
aas
jb
mov
pop
cmp
push
add
insl
outsb
aas
xchg
idiv
into
out
jle
repnz
pop
xchg
or
push
add
xchg
stos
add
mov
mov
nop
add
adc
mov
cmp
add
mov
adc
mov
adc
pop
out
add
or
aas
pop
scas
add
xchg
or
pop
js
lret
sbb
sub
stc
xchg
repz
jns
jle
orl
mov
sbb
sbb
mov
xor
mov
out
fdivrl
rolb
mov
jg
add
mov
bound
mov
and
std
xchg
je
add
addb
scas
addb
pop
repz
dec
leave
inc
and
add
jg
add
add
or
aas
out
lret
inc
and
add
pop
jb
mov
es
push
add
xchg
stos
aam
dec
jbe
insb
push
add
sahf
add
or
mov
add
or
mov
push
or
jg
sub
xchg
jae
add
mov
xor
daa
rcr
fists
mov
xchg
adc
mov
push
xchg
add
popa
pop
mov
mov
ss
and
pop
std
out
sti
jno
lea
mov
lret
add
mov
xchg
cmp
popf
inc
add
dec
aas
jnp
add
scas
xor
add
mov
in
mov
popa
or
rcrl
mov
pop
rolb
mov
sub
mov
imul
roll
popf
inc
jae
cmp
mov
mov
mov
popf
mov
mov
mov
cmp
push
xchg
cmpsl
xchg
jle
inc
push
addb
or
test
xor
mov
outsb
inc
add
test
add
add
add
xlat
bound
mov
movsl
js
mov
addr16
mov
add
add
add
xlat
xlat
sub
xchg
cmc
and
scas
loopne
mov
add
aad
je
dec
cmpl
add
and
sahf
mov
mov
frstor
mov
icebp
or
aaa
add
mov
dec
push
inc
sbb
addl
sbb
lcall
pop
sbb
es
jge
jne
movsb
push
mov
add
dec
out
sub
add
or
je
pusha
add
add
jge
into
mov
mov
je
add
adc
notl
add
pop
sub
add
mov
xchg
cmp
mov
mov
lcall
repz
mov
les
jo
mov
mov
jmp
mov
mov
inc
xchg
mov
jne
pop
adc
jmp
test
add
mov
insl
dec
add
outsl
cwtl
mov
mov
call
aas
in
addb
notl
mov
mov
add
in
lcall
xlat
jbe
enter
mov
inc
cltd
rolb
mov
call
push
scas
jb
mov
add
mov
push
fs
sbb
or
imul
popa
jne
add
out
rolb
adc
mov
fcmovne
mov
mov
outsb
dec
inc
mov
mov
je
and
push
add
mov
sti
cmp
xor
leave
xchg
inc
sahf
scas
xchg
stos
inc
repz
cmp
dec
ret
scas
fs
test
lods
ljmp
and
ljmp
sti
lret
in
dec
in
ficompl
mov
add
add
xor
add
push
mov
int3
mov
sti
mov
ss
mov
mov
mov
pop
pop
hlt
sub
cmp
mov
xchg
xchg
mov
add
jp
fbstp
mov
mov
loop
mov
inc
add
and
add
cmp
dec
inc
or
and
xchg
xchg
jmp
stos
movsl
xchg
mov
ret
sbb
loopne
mov
aam
add
pop
xor
mov
sub
mov
mov
add
mov
enter
sbb
fldt
jno
add
sub
pop
ja
cmpsb
cmp
add
loope
fs
mov
xchg
rolb
movsl
scas
xchg
add
mov
push
inc
add
daa
ss
mov
fstl
test
sbb
imul
cwtl
pop
imulb
fldl
insb
jg
cli
stos
fwait
mov
sbb
xchg
add
mov
int3
inc
pop
cmpsl
in
inc
add
mov
or
jb
mov
mov
add
addr16
inc
jl
add
mov
je
adc
mov
mov
add
mov
jb
mov
or
ret
xchg
add
ret
pop
and
mov
add
mov
lret
inc
add
dec
dec
leave
popa
ja
test
mov
add
add
mov
and
push
cwtl
lods
inc
fidivl
pop
inc
in
lcall
mov
mov
ljmp
xor
addb
pop
out
js
push
icebp
ss
dec
es
add
or
ljmp
add
mov
mov
add
jo
mov
insl
fmull
fstpl
pop
push
pop
add
pop
int3
pop
ret
cwtl
mov
stc
and
push
aas
jo
mov
add
leave
addb
mov
pop
inc
jge
add
outsb
cmp
int
addb
loopne
mov
lahf
mov
cmp
mov
cld
jb
mov
js
lods
frstor
mov
ds
rcrl
push
jnp
xor
mov
mov
ret
xlat
or
dec
lds
mov
add
hlt
dec
xchg
sub
lret
test
outsb
mov
lahf
addb
jo
mov
push
hlt
das
dec
mov
and
mov
adc
out
fildll
mov
pop
hlt
jnp
inc
cld
aad
xchg
rolb
mov
jp
jl
push
add
cs
xchg
testl
mov
mov
xor
sub
add
sub
add
xchg
mov
gs
or
cmp
add
jns
icebp
int
in
into
jg
fwait
and
add
test
sbb
rolb
add
std
push
in
loopne
mov
push
push
push
popf
lea
add
mov
arpl
mov
dec
adc
mov
add
call
inc
notb
push
or
lret
jecxz
xor
leave
push
mov
mov
xchg
cli
mov
cmp
mov
mov
mov
insb
enter
xchg
add
inc
push
mov
xor
enter
imul
fisttps
xchg
cmpsl
jecxz
add
xchg
adc
mov
pop
mov
pop
sbb
loopne
mov
jmp
add
and
mov
test
add
mov
shll
push
mov
pusha
add
sub
les
jle
add
add
add
sub
cmc
lods
fs
mov
add
add
lret
xchg
push
push
arpl
xor
mov
and
mov
dec
jno
push
jle
shll
add
repz
xor
movb
or
idivl
and
out
dec
fiaddl
mov
repnz
mov
repz
mov
mov
loop
mov
mov
jae
fmull
fdivrl
inc
xchg
punpcklwd
shll
mulb
insl
mov
add
movsb
jne,pt
dec
rolb
imul
jmp
jle
jo
mov
add
mov
ficomps
mov
test
cmp
add
outsl
ja
sbbl
in
xor
insb
loop
mov
pop
sbb
in
xchg
add
mov
mov
add
add
jg
mov
xor
fs
outsb
dec
sub
mov
cli
jg
icebp
fisttpll
add
jle
cmpsl
push
push
popa
adc
add
aam
cmc
and
stos
jae
add
popa
ja
xchg
or
aam
insl
mov
ljmp
icebp
add
repnz
inc
pop
jle
and
lret
add
out
test
lcall
dec
aas
addb
jns
mov
inc
push
fisttpll
push
pusha
add
and
mov
add
lcall
push
test
sub
add
add
ret
mov
mov
jp
add
add
pop
mov
push
adc
loop
mov
add
sub
add
mov
push
js
std
jp
jns
cmpsl
daa
mov
stos
jl
cmp
mov
pop
daa
xchg
push
mov
iret
xor
push
xchg
push
xor
xchg
jmp
mov
add
mov
mov
nop
add
data16
fdivs
arpl
repnz
pop
in
jg
out
sub
fistpl
add
add
adc
push
jae,pt
arpl
jecxz
in
ret
xchg
mov
cli
fldl
xchg
jge
mov
insb
fstps
inc
and
test
add
adc
fsts
mov
in
cmp
xchg
mov
loope,pn
test
nop
add
add
sub
mov
sub
out
iret
and
xor
aam
mov
mov
jle
mov
push
jmp
pop
sub
in
cli
sti
rorl
inc
lea
mov
add
mov
mov
sbb
rcll
addr16
leave
inc
fistps
jno
add
push
lods
rolb
mov
ret
cld
mov
xchg
mov
sub
dec
xor
mov
add
add
mov
mov
dec
adcl
and
sub
test
jo
mov
add
push
scas
xor
sub
bound
mov
fdivl
add
imul
add
pop
in
es
dec
jo
mov
and
outsl
xor
mov
aaa
repz
mov
add
jmp
jno
daa
or
jecxz
xchg
mov
sbb
adc
mov
mov
mov
xchg
fs
dec
repz
repnz
add
xlat
mov
icebp
cltd
and
mov
push
add
and
test
fcomps
sub
sahf
dec
mov
mov
insb
test
pushf
outsl
lods
nop
add
add
mov
sub
mov
mov
lret
sahf
ljmp
jno
push
inc
mov
add
push
insl
jnp
xor
add
dec
test
jmp
adc
mov
xor
push
jmp
mov
int
push
add
add
push
add
call
sbb
add
cmpsb
rolb
mov
mov
dec
repz
add
pop
seta
jmp
mov
cmp
jmp
ret
push
std
lock
xor
add
outsl
xor
js
inc
add
stos
pop
dec
and
enter
cmp
add
xor
lret
jmp
loopne
mov
cmpsl
rolb
mov
xor
mov
add
mov
jle
mov
and
inc
ficompl
fdivr
rolb
mov
mov
xchg
mov
adc
mov
pop
dec
push
xor
mov
pop
cmp
mov
mov
jbe
adc
mov
mov
lock
pop
sub
test
clc
or
adc
ss
cltd
mov
pushf
inc
add
and
add
mov
js
cltd
cs
mov
push
add
and
push
fstpt
xor
call
dec
js
pop
enter
add
fs
or
mov
push
inc
mov
xchg
add
out
mov
out
inc
add
out
sbb
repnz
repz
ficoms
aaa
loope
xchg
add
out
neg
hlt
push
insl
lcall
add
dec
pop
out
lret
sbb
add
ret
jo
mov
xchg
add
fmulp
mov
ficoms
push
fistpll
add
push
mov
cmp
shrl
add
cld
out
inc
jmp
std
sub
adc
fsts
mov
xchg
insl
mov
sbb
negl
add
mov
in
addb
lods
pop
je
push
xor
add
sbb
and
jbe
cmp
add
movsl
push
add
cli
xchg
sbb
out
addr16
pop
push
or
cwtl
cwtl
popf
mov
aad
popa
or
mov
neg
loopne
mov
add
fcoms
arpl
stos
mov
adc
rolb
arpl
xchg
les
mov
mov
mov
mov
push
or
sbb
lods
push
add
xchg
pop
out
ja
ret
imulb
int
les
add
sarl
mov
sub
jmp
addb
cltd
sti
cmp
add
mov
sub
addb
cmp
mov
into
in
add
outsl
pop
inc
hlt
pop
and
insl
aas
pushf
jge
rolb
mov
add
pop
push
popf
addb
mov
inc
jbe
cs
in
jl
mov
add
mov
sub
mov
xlat
mov
sti
rcrl
repz
and
mov
xor
xor
ljmp
in
and
mov
add
mov
inc
hlt
cli
fwait
popa
fmull
mov
std
cld
and
mov
mov
add
jbe
mov
cs
jo
mov
imul
mov
sbb
mov
jb
mov
fldl
add
addb
divl
push
lock
push
fldcw
pop
shl
jns
xchg
dec
dec
sub
cli
mov
xchg
add
sbb
mov
iret
sbb
jb
mov
sti
sti
jo
mov
jmp
sbb
mov
mov
mov
jp
pushf
js
mov
mov
imul
stos
push
es
or
add
scas
bound
mov
pushf
outsl
dec
lds
pop
add
add
outsl
jg
add
jmp
frstor
add
addb
mov
pop
je
out
jecxz
in
mov
dec
and
mov
or
sub
xchg
cwtl
jbe
adc
push
push
or
outsl
rolb
mov
fisubs
add
push
dec
aaa
das
xchg
cld
xchg
ds
add
push
add
add
mov
jmp
into
popf
xor
inc
jne
lock
imull
fstpt
sub
faddl
inc
add
mov
addr16
mov
add
cwtl
pop
rolb
mov
add
dec
dec
out
and
js
psubd
icebp
fcoms
lea
mov
jae
sbb
or
mov
add
loop
mov
mov
mov
mov
rolb
loopne
mov
add
into
in
cmp
inc
mov
adc
mov
inc
add
mov
pop
mov
dec
xchg
pop
mov
int
out
loope
xchg
push
dec
sbb
ljmp
bound
mov
dec
adc
jp
xchg
mov
leave
push
test
sub
add
mov
cmp
add
sbb
insb
push
cwtl
jecxz
add
add
add
es
fldcw
movb
mov
arpl
aam
jbe
sbb
mov
outsb
imul
lods
mov
jecxz
enter
mov
add
add
mov
xchg
adc
adc
jmp
jmp
inc
or
mov
mov
add
inc
add
adc
mov
mov
push
into
pop
pop
adc
xor
mov
mov
add
add
ljmp
pushf
lock
mov
mov
mov
mov
mov
stc
jecxz
icebp
gs
push
dec
lcall
dec
xor
mov
movsl
inc
scas
insl
out
call
mov
fbstp
push
cs
out
icebp
push
mov
pop
fs
nop
add
mov
cwtl
xor
mov
pop
rolb
mov
add
add
cmp
rolb
mov
fsub
xor
mov
add
aam
cmp
and
hlt
sub
les
and
mov
add
loop
mov
mov
mov
mov
pop
and
addb
add
mov
imulb
pop
fwait
scas
out
xchg
push
dec
mov
push
mov
je
cmpsb
in
inc
cmc
aad
stc
movsb
adc
mov
imul
add
dec
sub
push
mov
ss
lcall
xchg
mov
rorl
and
mov
outsl
popa
ljmp
inc
add
inc
mov
mov
xchg
iret
mov
rolb
mov
mov
in
cmp
mov
jp
mov
add
cmpsl
push
add
sub
jmp
sahf
int3
cmp
mov
add
mov
xor
mov
jbe
dec
push
push
or
add
jmp
pop
pop
lods
mov
pop
clc
cmp
leave
mov
jae
add
dec
jg
vpmulhuw
adc
xchg
jae
pop
imul
data16
mov
push
push
jl
inc
add
add
ds
inc
cmp
repnz
lret
insl
cmc
shr
out
test
lods
jb
mov
or
fcomip
xchg
jmp
add
sbb
dec
sub
add
mov
sahf
mov
test
add
pop
pop
sbb
faddl
add
ja
pop
mov
adc
enter
inc
add
in
xchg
inc
or
cmp
pop
mov
mov
bswap
jl
add
rolb
dec
inc
pop
mov
add
add
stos
dec
inc
jbe
sarl
test
add
outsl
test
add
ret
push
add
mov
mov
cmpsb
rolb
mov
rolb
cs
fcos
inc
add
and
cmp
in
sub
sbb
jecxz
popa
pop
iret
push
mov
mov
mov
cld
xchg
add
mov
adc
ficomps
mov
add
andl
mov
les
mov
iret
addb
push
mov
xlat
add
xor
mov
test
mov
jle
add
mov
cli
aas
popa
adc
cwtl
and
jge
cmpsb
notb
insb
jl
sbb
cmpsb
xor
add
sbb
cmpsl
scas
cmpsb
and
ficoml
clc
out
add
xor
outsl
fwait
push
add
push
mov
push
insb
adc
pop
icebp
jg
jae
add
dec
gs
push
add
xchg
repz
test
adc
mov
add
inc
mov
add
ret
loopne
mov
lods
dec
and
mov
add
mov
mov
sub
mov
dec
cmpsb
push
add
mov
in
sbb
add
stos
scas
in
mov
jno
push
push
adc
mov
fsubl
pop
xchg
fsubrl
mov
add
add
fistps
and
pop
lods
ret
xchg
jbe
add
in
mov
enter
inc
xchg
lret
mov
or
lahf
in
into
popa
xlat
call
jb
mov
xchg
push
testl
mov
sbb
and
mov
sub
sub
add
rolb
sub
xchg
je
sub
add
sbb
add
and
xchg
cmp
test
dec
neg
ret
stos
repnz
lcall
icebp
test
add
loop
mov
mov
in
out
pop
jp
add
add
cmp
test
add
add
cltd
lret
dec
and
mov
out
add
pop
sbb
into
cmp
add
fdivs
push
cmpsb
xchg
cmp
mov
mov
and
mov
arpl
into
ljmp
shll
mov
das
shr
stos
sti
das
pop
cld
mov
imul
xchg
inc
add
out
or
icebp
and
add
sbb
sbb
or
popa
nop
add
es
or
xchg
add
mov
mov
adc
in
cli
mov
mov
mov
dec
insb
inc
add
mov
movsb
dec
out
push
clc
mov
rolb
mov
mov
add
mov
call
push
add
fs
aad
mov
outsb
mov
fcomi
nop
add
mov
push
push
xchg
loopne
mov
push
dec
mov
test
sti
mov
sub
das
sbb
push
rolb
mov
inc
fld
rolb
mov
pop
mov
es
mov
and
movsl
adc
add
enter
cmp
xor
mov
push
fstps
subl
ja
inc
add
in
push
add
mov
sbb
jnp
cmpsb
adc
mov
lea
dec
xchg
lods
jns
data16
mov
cmp
inc
leave
and
xor
mov
fldenv
add
jg
cld
push
inc
jp
xchg
ficoms
jg
add
mov
add
mov
das
idivb
xor
cmpsl
mov
adc
mov
push
ret
das
and
movsl
mov
jmp
jl
iret
inc
add
xchg
or
lret
sbb
out
sahf
cmp
sbb
add
pop
flds
mov
dec
inc
pop
das
lds
mov
sbb
adc
add
add
mov
stos
xchg
xor
or
inc
add
cmp
add
mov
xchg
xchg
inc
cmpsb
mov
add
mov
movsb
call
outsl
sbb
mov
sbb
inc
mov
mov
das
mov
ds
data16
or
xchg
loopne
mov
ja
xchg
repnz
mov
mov
fcmovnb
add
pop
rolb
mov
adc
aad
andl
mov
lcall
ljmp
jb
mov
add
in
or
in
daa
push
adc
adc
add
das
cs
repnz
loop
mov
fistpll
xor
mov
dec
add
mov
push
imul
mov
je
xchg
arpl
inc
enter
mov
cwtl
dec
add
jo
mov
add
insl
or
mov
movsl
in
mov
or
jb
mov
fwait
adc
mov
add
jo
mov
add
xchg
add
movsb
lcall
inc
mov
xor
mov
xor
js
pop
pop
out
int3
mov
loope
sub
and
iret
rorl
sub
stos
push
je
ljmp
je
in
outsb
xchg
daa
int3
enter
int
icebp
aaa
dec
xchg
test
popf
adc
mov
pop
add
mov
lods
loop
mov
sti
out
addb
xor
sub
mov
loop
mov
sbb
xchg
rolb
fisubl
movsl
imul
add
mov
lea
add
enter
movsl
in
lahf
mov
jbe
pop
mov
sbb
ret
add
imul
mov
jmp
push
cwtl
fs
push
and
mov
inc
pop
stc
jecxz
mov
cmp
add
jl
add
mov
jns
sbbl
dec
mov
and
cmc
imul
lret
out
cmp
mov
addl
pop
or
mov
add
add
add
daa
arpl
ret
jns
mov
test
mov
inc
imul
mov
xor
push
add
add
mov
mov
icebp
sbb
add
add
mov
xchg
nop
add
adc
mov
xchg
fwait
jae
adc
mov
dec
cltd
mov
xchg
push
add
sub
nop
add
dec
popl
cli
in
cld
add
mov
lret
lret
push
movsl
outsl
je
enter
ret
ss
stc
dec
icebp
loopne
mov
add
push
jge
movsb
cltd
fsubrs
dec
lds
xlat
xchg
cwtl
sbb
clc
cs
add
pop
push
leave
push
into
pop
lock
mov
sub
mov
sub
xchg
add
and
sub
mov
mov
lock
dec
pop
mov
inc
add
mov
bound
mov
xlat
aad
add
in
out
add
gs
sub
mov
xchg
add
cwtl
jno
daa
and
mov
add
ret
jo
mov
lret
mov
jae
push
add
pop
mov
pop
mov
imul
mov
rolb
fmuls
cmp
dec
push
dec
xchg
add
test
mov
push
test
rolb
mov
ds
loop
mov
pop
sti
ret
xor
xor
sbb
enter
mov
cltd
aam
fisubs
mov
mov
xor
mov
add
jnp
sub
pusha
add
ja
adc
mov
add
je
dec
jle
imul
mov
ret
pop
jb
mov
sub
add
nop
add
add
and
mov
jle
inc
jmp
mov
jge
mov
sbb
add
push
movsl
popf
leave
cmc
inc
jns
add
ds
push
fcoml
fdivrl
or
std
sub
mov
mov
fstps
stos
jnp
inc
add
pop
stos
aad
icebp
in
sahf
faddl
adc
aam
les
mov
or
push
fwait
mov
jmp
lods
inc
mov
mov
pop
inc
insl
mov
xchg
hlt
int
add
loop
mov
inc
add
add
mov
add
sbb
testl
add
imul
mov
add
lds
mov
lahf
roll
mov
lock
add
xor
lods
test
push
add
clc
add
cld
in
mov
dec
xor
cmp
mov
out
xchg
lret
outsb
push
add
add
sub
mov
mov
xchg
add
fs
sti
xor
mov
int
ja
addb
aam
inc
push
fwait
gs
mov
jae
lds
mov
add
add
addb
mov
mov
imul
mov
jg
in
aas
inc
add
mov
add
mov
rolb
mov
add
pop
arpl
daa
dec
xchg
add
sbb
or
sub
cld
daa
adc
add
or
or
call
dec
loop
mov
out
jl
cmp
add
mov
cld
add
add
call
cwtl
sbb
rol
mov
sub
push
inc
mov
addl
mov
mov
xchg
popa
xchg
cmp
fsubl
aam
xlat
and
add
add
add
mov
or
and
adc
out
cli
insb
lea
xchg
ret
bound
mov
out
iret
pop
cltd
fstpt
das
jo
mov
push
xchg
into
or
pop
cwtl
daa
lcall
arpl
xchg
sbb
fnstsw
jle
sbb
mov
inc
dec
bound
mov
imul
std
xlat
inc
add
fwait
pop
loope
lds
pushf
push
decl
add
or
hlt
add
add
push
mov
add
fwait
mov
ret
rolb
mov
mov
test
jp,pt
dec
ds
gs
mov
jge
shll
add
into
pop
sbb
jno
push
rolb
mov
mov
push
popf
lods
xlat
movsb
jle
lret
decb
jg
pop
mov
mov
push
sub
mov
je
push
shll
mov
mov
sub
lcall
int
rolb
dec
cmp
jp
pop
push
push
aas
inc
sbb
push
dec
and
jmp
mov
sbb
push
stc
divb
or
mov
jl
cmp
sbb
jns
jge
push
sub
add
add
add
mov
jne
addb
lea
jmp
xchg
scas
pop
js
dec
test
cmp
add
pop
std
add
xor
mov
sahf
cmpsl
sub
call
add
mov
cs
rolb
repnz
adcl
mov
dec
scas
movsb
imul
fstpl
sub
addb
inc
mov
jecxz
add
jno
add
pop
imul
mov
sub
divl
dec
and
flds
add
mov
xchg
addb
add
sub
or
mov
add
add
icebp
in
in
imul
push
or
das
xlat
data16
repnz
fs
fwait
mov
mov
outsl
aam
movsl
xchg
fdivl
cmpsb
mov
mov
out
inc
out
cmp
cmp
xrelease
mov
add
lahf
jne
inc
add
add
inc
add
test
mov
mov
hlt
lret
test
stc
rcrl
add
mov
aaa
dec
out
loope
movsb
data16
push
jge
mov
push
cwtl
jle
dec
jns
rolb
mov
cs
mov
pop
hlt
mov
push
add
sarl
add
add
mov
roll
add
mov
add
mov
fs
sti
push
fiadds
test
xchg
popf
dec
and
add
mov
cmp
call
sbb
fnstcw
leave
inc
cld
fcmovu
addb
lahf
adc
mov
popa
and
mov
and
dec
mov
push
add
test
jns
dec
push
pop
outsl
addb
fidivrl
cld
jnp
fistl
leave
addr16
jg
icebp
repnz
mov
fmuls
jg
std
dec
popf
das
mov
sbb
mov
add
mov
adc
xor
cmp
and
mov
dec
push
add
jmp
sub
repz
xchg
popa
lock
add
add
mov
add
add
add
pop
adc
movsb
push
pop
pop
jecxz
pop
mov
push
lahf
pop
mov
add
icebp
cmp
dec
dec
in
hlt
add
xchg
loopne
mov
mov
cmp
mov
bound
mov
sahf
mov
sub
addb
xor
mov
jae
cmp
testb
popf
cli
inc
stos
sbb
xor
mov
jns
add
jecxz
jnp
jmp
add
inc
add
in
pop
cmp
sub
mov
je
shl
cmp
add
mov
mov
mov
jns
sub
add
add
sbb
mov
fsincos
inc
lea
mov
xchg
inc
out
dec
and
mov
call
or
lock
icebp
or
stc
pop
cmp
or
and
mov
and
push
inc
and
add
add
dec
and
mov
adc
stos
stos
lods
fists
hlt
and
mov
adc
mov
add
xchg
cld
cmp
icebp
popa
sbb
add
jecxz
pop
mov
add
cmpsl
test
add
into
dec
in
hlt
stc
sub
rolb
fnstenv
sbb
cmp
sbb
dec
pop
mov
or
add
dec
popa
lods
fsubr
add
add
das
lods
scas
xchg
aaa
test
outsl
movsl
imul
loop
mov
add
adc
mov
jecxz
fnstcw
movsl
jae
jmp
xchg
adc
mov
in
adc
mov
cmp
into
and
push
push
push
shrl
das
out
loopne
mov
sub
inc
jge
adc
ss
add
mov
addb
sbb
movsb
mov
sbb
and
lea
cmp
pop
jmp
imul
sub
jle
adc
mov
inc
aas
gs
cwtl
data16
mov
xchg
xchg
or
mov
sbb
jmp
test
lods
cmpsb
jp
jge
add
xchg
add
clc
aam
sti
or
testl
popa
pushf
mov
add
xchg
in
cmp
or
mov
adc
stos
and
mov
sbb
mov
jmp
xchg
pop
fidivl
pop
clc
xlat
adc
add
inc
addb
inc
test
pop
jns
jns
jno
add
cmp
xchg
jo
mov
popf
xchg
xchg
add
push
add
add
pop
aad
mov
pushl
inc
dec
push
sbb
dec
mov
add
mov
mov
loop
mov
or
add
mov
loop
mov
cmpsl
mov
add
pushf
mov
loope
add
cwtl
jle
cmp
mov
mov
loop
mov
or
add
pushl
into
dec
fdivrs
cltd
movsl
adc
jmp
repz
cli
movsl
jle
das
jmp
cli
mov
cltd
dec
mov
popa
leavew
sti
mov
adc
dec
push
mov
subl
push
add
mov
xorl
sahf
xor
mov
and
pushf
imul
cmc
mov
popa
fcomi
add
insb
outsb
movsl
sti
and
mov
lret
sti
fdivrl
data16
loop
mov
je
jp
lcall
push
out
iret
xchg
dec
lock
mov
dec
push
add
pop
adc
fwait
movl
add
mov
and
add
xchg
bound
mov
insb
inc
hlt
cmp
mov
xor
test
in
sbb
mov
add
push
in
xorps
add
pop
or
mov
ss
push
add
sub
add
sbb
push
fisubrs
mov
add
mov
test
test
xchg
es
gs
pop
lea
cwtl
xor
mov
aaa
jae
add
sub
add
add
or
jge
hlt
mov
daa
pop
int
and
jb
mov
xlat
add
mov
and
pop
imul
add
fs
add
out
mov
mov
push
test
clc
dec
push
cmc
lahf
jnp
push
add
or
loop
mov
stc
xchg
mov
imul
jae
out
filds
addb
xor
mov
rolb
mov
xchg
xchg
add
or
daa
xor
xor
mov
dec
pop
xchg
push
add
filds
xchg
add
mov
sbb
xchg
jg
push
jp
movsb
inc
inc
sbb
add
mov
dec
dec
lods
shll
mov
adc
mov
xor
inc
std
imul
lods
cltd
push
ret
in
mov
cmpsl
fcom
cwtl
cmp
int3
jg
hlt
inc
shll
sbb
ret
or
inc
mov
sbb
add
mov
fcmovbe
imul
add
insl
jmp
adc
and
mov
or
js
add
sub
add
out
cmp
lods
sub
int
add
idivl
add
mov
bound
mov
jmp
and
and
and
mov
push
aad
pop
add
mov
fstpt
add
add
mov
nop
add
sub
mov
dec
fidivs
pusha
add
adc
jae
sbb
add
dec
cli
jecxz
add
mov
jne
mov
in
and
nop
add
mov
int3
cmp
push
fbstp
add
xchg
fstps
adc
mov
mov
test
mov
addl
push
xor
mov
push
xlat
dec
xor
sub
in
cmp
test
out
loop
mov
shrl
mov
addb
shr
mov
mov
mov
inc
pop
mov
addb
cmp
dec
mov
std
dec
xlat
test
adc
mov
mov
add
mov
mov
cli
mov
add
test
daa
mov
aas
pop
and
cld
add
mov
enter
rolb
insb
out
imul
movsl
nop
add
insb
and
mov
add
lret
dec
and
mov
into
stos
iret
and
xchg
divl
pop
rcll
lahf
loopne
mov
adc
imul
repz
stos
cld
add
inc
cmp
pop
inc
gs
rcl
inc
mov
mov
out
test
loop
mov
sub
add
arpl
push
mov
test
push
sti
xchg
xlat
mov
add
mov
sbb
mov
es
inc
test
xor
hlt
dec
mov
mov
pushw
add
xchg
add
xchg
ljmp
lds
mov
jno
cmpsb
gs
and
xchg
add
fs
mov
mov
insl
jbe
adc
mov
rep
loope
mov
lahf
leave
xor
js
mov
lock
add
mov
add
push
add
je
xchg
mov
dec
gs
adc
notl
jmp
dec
and
push
aas
jp
jb
mov
rolb
mov
mov
pop
or
das
rolb
mov
roll
mov
add
gs
mov
add
insb
mov
gs
test
cmc
and
add
mov
add
add
mov
cmp
jp
xor
xor
ja
divps
cmpsl
lret
icebp
sbb
test
xor
mov
rolb
mov
sub
jle
popf
push
gs
movsb
inc
lds
jo
mov
hlt
push
addb
add
mov
mov
pushf
rolb
mov
xor
loop
mov
pop
adc
mov
jp
rolb
fisttps
cmpsb
xchg
inc
push
sbb
imul
mov
int
jb
mov
mov
add
data16
stc
addb
xchg
rolb
mov
mov
test
fs
ficoml
pop
enter
and
mov
out
xor
mov
rolb
mov
add
push
xchg
sbb
imul
mov
and
push
dec
sar
jo
mov
xor
add
out
inc
lret
sete
mov
add
add
xor
mov
jecxz
lock
rolb
mov
into
roll
sti
movb
mov
pop
loop
mov
and
cmp
mov
repz
push
jbe
cmp
or
call
jo
mov
sub
xchg
mov
dec
add
mov
mov
mov
push
xchg
xlat
ds
add
or
imul
add
sbb
xchg
or
add
fcmovbe
sub
sub
xor
mov
aaa
lret
cmp
adc
mov
add
dec
xchg
sti
mov
add
mov
xchg
add
mov
ds
push
cmp
inc
add
jle
add
mov
cmp
mov
add
cli
out
xchg
xor
and
mov
xor
mov
test
mov
iret
test
mov
mov
mov
add
add
jmp
std
sub
mov
push
loop
mov
aaa
add
pusha
add
add
imul
mov
les
test
fdivr
lock
mov
cmp
add
add
addr16
push
xor
jnp
stos
out
sahf
or
addb
arpl
add
and
mov
pop
adc
mov
stos
mov
cmpsl
addb
xlat
iret
mov
enter
int
cli
fs
and
sbb
xchg
pop
lret
mov
pop
sti
push
sub
jmp
add
lret
mov
xor
cltd
pop
enter
arpl
lret
sbb
add
push
mov
ja
test
pop
addb
lods
loop
mov
cli
push
or
cmp
xor
push
mov
mov
hlt
mov
cmp
cmp
add
mov
add
pop
test
outsb
test
js
dec
inc
in
hlt
jmp
enter
mov
jp
add
outsl
repnz
dec
mov
xor
out
pop
xchg
ret
cmp
add
mov
mov
and
imul
add
add
add
and
test
or
jb
mov
movsl
pop
aaa
call
mov
dec
out
jge
xchg
divb
or
mov
mov
dec
clc
xor
mov
dec
bound
mov
add
popa
fsubrs
fwait
pop
jecxz
movsb
inc
in
pop
xchg
adc
mov
pop
rdtsc
aam
add
add
outsl
test
xchg
mov
mov
add
imul
in
push
test
in
add
mov
int
rcrl
std
dec
shrl
add
dec
lds
adc
leave
mov
das
pop
add
mov
add
push
mov
mov
inc
add
mov
pushf
dec
cmpsl
dec
scas
push
gs
mov
outsb
xlat
push
add
add
sub
mov
pusha
add
add
test
mov
rolb
mov
cltd
add
int3
outsl
push
xor
mov
add
xor
mov
xor
dec
dec
mov
mov
mov
scas
push
sub
xchg
add
mov
mov
and
push
xor
mov
add
jbe
add
pop
in
mov
add
add
call
jne
cwtl
fnstsw
repnz
xor
mov
jae
inc
fisttps
push
add
add
stc
rorl
les
std
inc
icebp
in
mov
test
cmpl
mov
pusha
add
add
and
sbb
adc
mov
add
in
xor
xchg
cmovae
pop
add
outsb
insb
std
pushf
adc
add
dec
xchg
add
cmp
push
sub
push
add
push
sbb
out
sbb
sub
mov
push
in
bound
mov
add
test
add
ret
dec
xchg
add
ds
gs
cmc
push
add
cwtl
jle
add
push
jge
xchg
add
pop
mov
icebp
rolb
mov
adc
repz
push
and
xor
dec
loop
mov
sub
mov
add
mov
std
add
inc
push
xchg
and
mov
xor
mov
test
mov
out
sub
xchg
jns
xor
add
mov
xchg
mov
into
cmp
std
inc
lock
pop
inc
cmc
pop
mov
in
push
clc
enter
outsl
xchg
ret
jle
mov
out
pop
jge
imul
mov
mov
dec
pop
in
xchg
mov
xor
gs
add
xchg
ja
mov
add
mov
fildl
addb
adc
mov
mov
adc
insb
lods
lods
fs
cmp
sti
decl
sbb
push
sbb
inc
rolb
or
xchg
add
mov
mov
dec
xchg
add
xor
mov
dec
cli
rolb
mov
fstps
sbb
add
mov
mov
pop
flds
add
sbb
and
sub
out
dec
out
testl
pop
push
inc
in
pop
pop
adc
add
addb
pop
pusha
add
loopne
mov
adc
mov
mov
add
add
mov
add
lock
push
dec
clc
fistl
add
add
mov
mov
mov
and
add
sbb
add
or
add
bound
mov
pusha
add
add
jmp
scas
lret
and
xor
mov
add
push
dec
sbb
arpl
push
add
sti
mov
xchg
lods
pushf
or
clc
pop
outsb
push
mov
mov
inc
pusha
add
push
cmc
pop
lret
xor
test
test
cmp
shll
add
and
lcall
gs
or
ss
and
mov
popa
pop
arpl
rolb
mov
mov
add
sub
add
lds
sub
test
or
or
add
push
loop
mov
dec
jo
mov
add
adc
mov
jno
out
mov
xchg
add
mov
add
mov
mov
fwait
es
xchg
xchg
pop
jo
mov
vpaddsb
xchg
in
inc
xor
mov
mov
jle
mov
add
jno
test
icebp
loopne
mov
lea
sti
mov
dec
mov
sub
sbb
xchg
inc
xchg
sbb
pop
xor
inc
fisubrs
xor
xchg
icebp
mov
arpl
push
pop
push
add
and
mov
pop
into
dec
mov
push
bound
mov
call
cwtl
repnz
insb
shll
cltd
sub
insb
and
mov
incl
pop
inc
add
and
add
inc
add
xchg
inc
pop
mov
add
mov
cmp
ja
test
add
inc
dec
ja
push
add
mov
jg
insl
rolb
jle
cwtl
inc
push
mov
add
out
add
rolb
mov
in
stc
gs
xchg
inc
inc
jbe
std
iret
stos
cmc
xchg
inc
add
mov
mov
in
bound
mov
and
mov
cmp
mov
add
mov
add
mov
mov
add
dec
dec
push
inc
ret
rorl
mov
cmpsb
rolb
mov
sbb
insb
lahf
mov
test
sub
sub
add
xor
add
dec
pop
lcall
mov
rolb
mov
mov
add
mov
movl
mov
mov
cmpsl
xor
add
or
cld
mov
ret
or
sarl
mov
call
pop
fsts
sbb
rorl
testl
mov
ja
dec
pop
push
ret
pusha
add
mov
fs
subl
mov
add
sti
adc
mov
jge
or
xchg
in
push
jo
mov
add
mov
add
mov
adc
jecxz
outsl
leave
inc
mov
add
mov
adc
mov
xor
mov
gs
jp
add
xchg
dec
shll
mov
add
and
testb
mov
mov
and
mov
add
and
add
push
pop
cwtl
push
add
sbb
xchg
add
mov
cld
arpl
and
mov
add
add
movsb
sub
add
add
xchg
rolb
add
jecxz
inc
add
nop
add
in
movsl
jle
xchg
mov
add
inc
and
out
sbb
fdivr
ja
mov
mov
je
add
mov
push
add
cmpsl
fsub
mov
dec
dec
mov
mov
fcmovne
xchg
xor
cmp
and
jg
repz
sti
icebp
aas
icebp
int
jl
stos
fs
push
mov
in
jns
mov
inc
loopne
mov
xchg
in
dec
rolb
mov
pop
push
add
dec
adc
pusha
add
cltd
dec
dec
inc
push
mov
ret
gs
shll
dec
cmp
popf
hlt
or
les
out
cmp
mov
add
xchg
xchg
clc
mov
add
movsb
mov
nop
add
js
aas
inc
in
sbb
mov
add
ret
mov
add
mov
add
test
out
sub
push
add
fcompl
insl
inc
test
add
stc
mov
jmp
jg
add
sti
outsb
mov
rolb
mov
mov
mov
icebp
inc
add
push
cmpsl
sub
adc
mov
sub
scas
outsl
mov
shll
add
mov
test
add
mov
in
sub
fldcw
outsl
test
inc
call
aad
stc
add
mov
inc
add
repnz
push
fnstenv
xchg
loope
and
mov
cmp
sbb
mov
xchg
addb
xor
mov
add
sti
lea
ljmp
sub
mov
out
imul
push
push
mov
jb
mov
jb
mov
out
addr16
nop
add
add
and
fstpl
push
pop
jno
xchg
inc
push
inc
xor
add
add
add
add
mov
clc
jnp
rolb
cmp
enter
sub
popa
loope
add
sbb
rolb
mov
mov
mov
add
lea
or
push
xchg
rolb
jne
xchg
hlt
inc
out
rolb
mull
jns
cmpsl
outsb
mov
jp
rolb
loopne
mov
and
iret
sub
ja
add
dec
mov
add
hlt
jo
mov
lret
and
lcall
repnz
js
xchg
orl
daa
jg
mov
repnz
fs
adc
add
add
paddb
xor
in
shll
mov
testl
xchg
js
lds
cld
nop
add
and
mov
push
loope
js
fwait
std
jnp
jno
add
int
setp
outsb
loope
arpl
out
cwtl
mov
incl
les
sbb
add
mov
mov
jecxz
faddl
lret
je
gs
jle
mov
jmp
add
mov
je
aas
out
movsb
jb
mov
push
add
paddq
mov
mov
add
jo
mov
in
add
xchg
mov
pop
into
mov
or
mov
add
jmp
divl
pop
push
xchg
outsb
stos
popf
add
add
jl
popf
lods
pop
mov
jecxz
mov
mov
test
add
out
push
fistl
mov
mov
push
ret
pop
test
xchg
cmp
sbb
and
pop
mov
clc
repnz
nop
cld
jae
xchg
cmp
push
mov
xchg
ret
pop
add
add
mov
clc
repnz
nop
cld
jae
add
mov
mov
and
loop
mov
xchg
ret
add
add
push
add
out
mov
clc
repnz
nop
cld
jae
add
xchg
or
pop
push
clc
repnz
nop
cld
jae
add
add
lahf
add
add
pop
push
mov
xchg
ret
inc
mov
add
xor
mov
clc
repnz
nop
cld
jae
shrl
mov
jnp
clc
repnz
nop
cld
jae
xchg
add
jl
add
cmp
repnz
nop
cld
jae
add
into
add
push
mov
xchg
ret
add
add
add
fsts
in
add
pop
stc
add
add
ja
add
add
jno
lcall
nop
cld
jae
add
add
add
or
aam
add
add
add
bound
add
add
clc
repnz
nop
cld
jae
add
xchg
add
mov
xchg
ret
sub
pop
jmp
add
push
push
mov
xchg
ret
add
xor
add
or
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
sbb
and
add
jns
imul
inc
inc
add
outsl
adc
add
jg
add
xor
clc
repnz
nop
cld
jae
add
add
or
add
mov
clc
repnz
nop
cld
jae
lahf
add
add
clc
repnz
nop
cld
jae
add
add
add
add
add
mov
xchg
ret
xor
add
lods
xchg
mov
mov
add
push
mov
nop
leave
nop
jmp
lahf
add
xchg
dec
mov
nop
nop
cld
jae
add
add
scas
mov
clc
repnz
nop
cld
jae
add
in
nop
leave
nop
jmp
add
add
add
push
mov
xchg
ret
inc
add
jmp
int3
movb
add
push
mov
xchg
ret
hlt
xchg
pop
add
cltd
and
mov
nop
leave
nop
jmp
hlt
add
add
icebp
bound
repnz
nop
cld
jae
add
add
add
mov
dec
loope
add
bound
sub
add
add
in
nop
leave
nop
jmp
icebp
xor
cld
jae
sub
mov
add
jne
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
lahf
scas
add
pop
or
xchg
dec
mov
clc
repnz
nop
cld
jae
add
cmpsb
adc
add
clc
repnz
nop
cld
jae
add
add
adc
mov
push
add
repnz
nop
cld
jae
pop
add
add
add
mov
nop
leave
nop
jmp
add
cmp
nop
nop
cld
jae
icebp
add
add
add
repnz
nop
cld
jae
add
dec
add
mov
mov
clc
repnz
nop
cld
jae
test
icebp
add
add
add
add
add
add
adc
pop
fldl
xchg
ret
pop
add
hlt
mov
mov
push
mov
nop
leave
nop
jmp
add
lods
add
add
nop
nop
cld
jae
add
cmp
cmp
repnz
nop
cld
jae
add
lahf
mov
add
notl
in
nop
leave
nop
jmp
add
add
add
pop
xchg
outsb
call
clc
repnz
nop
cld
jae
mov
xor
adc
in
nop
leave
nop
jmp
add
or
mov
lods
rolb
xchg
ret
or
pop
add
add
push
push
mov
push
xchg
or
add
xchg
mov
jne
rclb
push
cmp
mov
nop
leave
nop
jmp
lods
add
dec
sbb
add
add
clc
repnz
nop
cld
jae
mov
add
iret
mov
clc
repnz
nop
cld
jae
cltd
add
xchg
movsb
lea
push
mov
xchg
ret
xchg
mov
lods
push
add
add
cli
mov
push
mov
xchg
ret
test
add
add
aaa
sub
add
repnz
nop
cld
jae
add
add
gs
mov
push
mov
xchg
ret
cmp
lahf
add
add
in
and
push
mov
xchg
ret
add
int3
add
add
clc
repnz
nop
cld
jae
add
shll
inc
or
in
nop
leave
nop
jmp
add
add
add
or
clc
repnz
nop
cld
jae
jl
pop
push
mov
test
add
outsb
cmp
add
jp
leave
test
out
clc
repnz
nop
cld
jae
add
add
push
out
inc
push
mov
xchg
ret
xor
add
and
mov
push
mov
nop
leave
nop
jmp
add
add
push
mov
nop
leave
nop
jmp
lods
add
mov
push
mov
xchg
ret
dec
add
add
and
or
lods
push
mov
xchg
ret
add
add
dec
add
add
add
mov
nop
cld
jae
xor
loope
sbb
in
nop
leave
nop
jmp
pop
add
bound
add
or
imul
add
add
or
push
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
add
jl
lcall
inc
add
inc
hlt
dec
loope
add
jg
push
mov
nop
leave
nop
jmp
mov
add
add
call
clc
repnz
nop
cld
jae
adc
call
clc
repnz
nop
cld
jae
add
stos
rep
clc
repnz
nop
cld
jae
add
lahf
add
push
add
cmp
push
mov
nop
leave
nop
jmp
add
add
mov
push
mov
xchg
ret
add
mov
in
nop
leave
nop
jmp
add
add
and
push
mov
xchg
ret
scas
add
insl
xchg
push
mov
xchg
ret
add
int3
add
mov
mov
std
call
clc
repnz
nop
cld
jae
roll
pop
xchg
dec
mov
clc
repnz
nop
cld
jae
add
xchg
sahf
add
push
sahf
rep
clc
repnz
nop
cld
jae
add
add
xor
ss
mov
nop
leave
nop
jmp
mov
cmp
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
nop
jmp
sbb
loop
mov
pop
push
mov
xchg
ret
and
icebp
mov
push
mov
add
push
push
mov
xchg
ret
mov
xchg
add
cltd
add
repnz
nop
cld
jae
add
test
xor
push
mov
nop
leave
nop
jmp
add
dec
add
lahf
sbb
jle
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
inc
add
dec
adc
lock
xchg
ret
add
push
add
jecxz
add
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
add
add
repnz
nop
cld
jae
or
xor
inc
inc
and
add
adc
repnz
nop
cld
jae
add
cltd
mov
add
repnz
nop
cld
jae
cltd
mov
in
jecxz
push
clc
repnz
nop
cld
jae
add
jge
push
cmp
push
mov
mov
testb
jge
clc
repnz
nop
cld
jae
add
push
imul
jae
int3
xchg
add
daa
add
push
push
mov
nop
leave
nop
jmp
dec
inc
jmp
add
mov
nop
leave
nop
jmp
add
add
add
push
push
mov
nop
leave
nop
jmp
add
add
inc
add
mov
add
repnz
nop
cld
jae
add
add
add
mov
outsl
pop
push
mov
nop
leave
nop
jmp
push
add
mov
add
loopne
mov
push
mov
add
add
add
rolb
add
add
add
push
mov
xchg
ret
incb
add
cmp
mov
xchg
ret
hlt
scas
cmp
add
add
push
clc
repnz
nop
cld
jae
mov
xor
add
rolb
mov
and
push
mov
xchg
ret
mov
mov
jae
push
clc
repnz
nop
cld
jae
add
add
adc
mov
push
mov
nop
leave
nop
jmp
add
inc
adc
repnz
nop
cld
jae
dec
lahf
add
mov
add
pop
sbb
nop
nop
cld
jae
add
cltd
lock
jnp
inc
add
or
or
pop
add
push
mov
xchg
ret
add
add
xlat
cmp
clc
repnz
nop
cld
jae
mov
add
adc
mov
xchg
ret
test
mov
jg
in
push
mov
xchg
ret
add
add
add
pop
jo
mov
add
add
repnz
nop
cld
jae
xor
add
clc
repnz
nop
cld
jae
add
and
inc
xor
mov
mov
mov
jmp
incl
add
add
add
push
mov
xchg
ret
bound
add
test
pop
add
push
mov
nop
leave
nop
jmp
add
icebp
add
std
mov
clc
repnz
nop
cld
jae
add
pop
add
push
mov
xchg
ret
add
add
cmp
xchg
cmp
push
clc
repnz
nop
cld
jae
add
and
repnz
nop
cld
jae
cmp
scas
jbe
je
clc
repnz
nop
cld
jae
jge
push
and
mov
xchg
ret
mov
cltd
add
mov
mov
nop
leave
nop
jmp
add
hlt
add
add
add
je
push
mov
nop
leave
nop
jmp
add
fmull
nop
nop
cld
jae
test
add
add
inc
add
mov
xchg
ret
add
add
add
test
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
add
add
add
or
mov
popf
mov
clc
repnz
nop
cld
jae
adc
rcrl
sbb
repnz
nop
cld
jae
add
jmp
or
clc
repnz
nop
cld
jae
xor
add
add
repnz
nop
cld
jae
mov
lods
push
jae
mov
clc
repnz
nop
cld
jae
push
and
cmp
mov
or
nop
leave
nop
jmp
add
int3
dec
pop
clc
repnz
nop
cld
jae
dec
mov
add
or
lret
lock
repnz
nop
cld
jae
scas
add
add
mov
nop
nop
cld
jae
add
jl
add
mov
rclb
nop
leave
nop
jmp
cmp
push
add
jmp
add
repnz
nop
cld
jae
lahf
add
sbb
cs
push
mov
xchg
ret
add
icebp
sub
mov
add
dec
add
mov
xchg
ret
cmp
mov
xchg
bound
mov
nop
leave
nop
jmp
mov
add
mov
add
push
mov
nop
leave
nop
jmp
add
xor
nop
nop
cld
jae
add
test
add
add
pop
clc
repnz
nop
cld
jae
add
add
add
add
out
mov
push
mov
nop
leave
nop
jmp
inc
mov
add
in
repnz
nop
cld
jae
sbb
nop
add
sub
pop
add
add
add
add
add
xchg
cmp
in
nop
leave
nop
jmp
mov
sbb
add
jne
add
push
adc
clc
repnz
nop
cld
jae
add
add
adc
mov
imul
clc
repnz
nop
cld
jae
mov
add
add
repnz
nop
cld
jae
add
add
mov
mov
adc
repnz
nop
cld
jae
add
dec
xchg
mov
pop
xchg
push
mov
nop
leave
nop
jmp
dec
hlt
add
inc
add
nop
nop
cld
jae
lods
lods
add
cld
lea
clc
repnz
nop
cld
jae
mov
mov
mov
add
clc
repnz
nop
cld
jae
and
cmp
mov
add
repnz
nop
cld
jae
dec
int3
add
pop
dec
add
clc
repnz
nop
cld
jae
and
mov
pop
mov
clc
repnz
nop
cld
jae
add
sbb
repnz
nop
cld
jae
push
add
cwtl
dec
push
mov
xchg
ret
cmp
pop
mov
in
jne
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
scas
mov
or
or
mov
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
bound
cltd
add
push
clc
repnz
nop
cld
jae
cmp
sbb
adc
push
mov
repnz
add
jae
or
mov
scas
add
push
mov
nop
leave
nop
jmp
add
shll
mov
or
xor
add
clc
repnz
nop
cld
jae
add
cmp
nop
nop
cld
jae
lret
add
add
icebp
gs
jg
clc
repnz
nop
cld
jae
addl
cmpsl
xchg
cmp
repnz
nop
cld
jae
jl
decb
mov
push
mov
xchg
ret
add
sbb
hlt
push
cld
mov
push
mov
nop
leave
nop
jmp
dec
dec
test
add
ljmp
nop
cld
jae
pop
rorl
inc
inc
mov
mov
add
clc
repnz
nop
cld
jae
cmp
xor
mov
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
dec
add
add
add
mov
xor
clc
repnz
nop
cld
jae
bound
scas
outsb
inc
push
mov
nop
leave
nop
jmp
add
add
jmp
push
push
mov
xchg
ret
add
add
ds
push
mov
nop
leave
nop
jmp
add
dec
loope
push
clc
repnz
nop
cld
jae
jmp
xor
mov
repnz
nop
cld
jae
xor
add
or
mov
loop
inc
add
mov
add
dec
pop
push
mov
xchg
ret
push
dec
add
mov
call
clc
repnz
nop
cld
jae
sahf
add
add
nop
nop
cld
jae
and
jmp
ss
ret
push
mov
nop
leave
nop
jmp
mov
int3
add
mov
clc
repnz
nop
cld
jae
add
mov
or
add
repnz
nop
cld
jae
add
lahf
add
clc
repnz
nop
cld
jae
add
add
cmp
mov
add
add
repnz
nop
cld
jae
sbb
mov
scas
stos
clc
repnz
nop
cld
jae
inc
mov
add
jl
pop
call
mov
xchg
ret
test
loope
add
xchg
add
jmp
xor
mov
test
sbb
repnz
nop
cld
jae
inc
mov
sub
cwtl
push
clc
repnz
nop
cld
jae
push
mov
add
cwtl
or
add
add
mov
jmp
bound
pop
push
xor
mov
repnz
nop
cld
jae
add
dec
test
push
mov
repnz
nop
cld
jae
mov
add
loope
add
xchg
add
add
nop
nop
cld
jae
lahf
lret
add
mov
xchg
ret
add
add
add
xor
add
insl
rolb
xchg
ret
add
add
push
jle
jne
push
mov
nop
leave
nop
jmp
add
mov
add
push
mov
xchg
ret
add
jl
clc
repnz
nop
cld
jae
pop
add
add
push
mov
xchg
ret
add
cmp
pop
ret
push
mov
xchg
ret
pop
inc
add
mov
jl
repz
repnz
nop
cld
jae
add
inc
mov
sbb
inc
push
mov
xchg
ret
cmp
adc
add
ret
repnz
nop
cld
jae
add
jge
cmp
add
jp
adc
repnz
nop
cld
jae
and
jl
dec
xor
clc
repnz
nop
cld
jae
pop
mov
loope
add
repnz
nop
cld
jae
add
add
incl
add
add
mov
scas
jge
add
add
jne
clc
repnz
nop
cld
jae
mov
push
and
imul
nop
nop
cld
jae
add
icebp
add
mov
nop
leave
nop
jmp
add
add
push
and
mov
nop
cld
jae
xchg
or
add
adc
or
push
mov
nop
leave
nop
jmp
add
push
push
mov
xchg
ret
dec
add
dec
xchg
add
clc
repnz
nop
cld
jae
cmp
dec
dec
xchg
mov
xchg
dec
mov
clc
repnz
nop
cld
jae
add
add
add
add
mov
push
mov
nop
leave
nop
jmp
lret
add
add
jl
xor
data16
inc
add
add
int3
pop
push
clc
repnz
nop
cld
jae
lahf
add
add
cmp
add
mov
push
mov
xchg
ret
add
shrl
and
add
push
mov
nop
leave
nop
jmp
incb
lahf
add
repnz
nop
cld
jae
dec
add
or
sbb
sbb
add
orl
push
add
add
rcl
inc
add
sahf
icebp
add
push
jbe
repnz
push
mov
nop
leave
nop
jmp
add
add
pushl
clc
repnz
nop
cld
jae
add
bound
add
ja
pop
push
mov
xchg
ret
add
add
add
xor
mov
xchg
ret
add
add
lretw
push
mov
nop
leave
nop
jmp
push
sahf
cmp
add
sub
rcr
inc
add
scas
loope
cltd
add
jb
clc
repnz
nop
cld
jae
cltd
add
clc
repnz
nop
cld
jae
add
popf
je
clc
repnz
nop
cld
jae
pop
jl
addl
popf
jmp
add
push
add
add
jl
add
xchg
xchg
add
xorl
push
mov
nop
leave
nop
jmp
add
lods
dec
push
mov
nop
leave
nop
jmp
and
add
test
add
nop
nop
cld
jae
add
add
mov
out
inc
add
add
add
enter
clc
repnz
nop
cld
jae
add
add
nop
add
repnz
incl
add
cmp
add
ret
test
dec
icebp
test
push
add
add
xor
repnz
nop
cld
jae
add
dec
add
incb
clc
repnz
nop
cld
jae
lods
add
lahf
and
sub
popa
add
repnz
nop
cld
jae
add
inc
add
cltd
lea
nop
nop
cld
jae
lods
adc
sbb
test
hlt
clc
repnz
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
mov
bound
xchg
lret
push
mov
xchg
ret
mov
dec
int3
cmp
mov
ljmp
nop
cld
jae
bound
add
add
addb
lock
adc
mov
incb
sub
mov
xchg
dec
jae
add
xchg
push
mov
push
mov
nop
leave
nop
jmp
add
fwait
pushl
push
mov
xchg
ret
add
sbb
add
mov
push
push
mov
xchg
ret
loope
add
lahf
add
and
mov
clc
repnz
nop
cld
jae
cmp
push
mov
xchg
ret
pop
add
mov
pop
inc
push
mov
nop
leave
nop
jmp
add
cmp
int3
jge
cltd
imul
sub
incl
add
add
push
mov
nop
leave
nop
jmp
add
subl
and
clc
repnz
nop
cld
jae
and
mov
sbb
repnz
nop
cld
jae
add
hlt
add
repnz
nop
cld
jae
add
or
or
loop
mov
xor
push
mov
xchg
ret
dec
add
add
sbb
nop
nop
cld
jae
add
jns
jae
insb
ja
repnz
nop
cld
jae
mov
aaa
mov
mov
lret
clc
repnz
nop
cld
jae
add
add
add
loope
add
and
clc
repnz
nop
cld
jae
add
mov
outsb
add
add
repnz
nop
cld
jae
add
add
fadds
je
add
xchg
add
add
js
dec
adc
xchg
dec
add
clc
repnz
nop
cld
jae
or
lahf
add
add
sub
clc
repnz
nop
cld
jae
inc
add
add
push
mov
xchg
ret
sahf
mov
add
jmp
add
add
or
mov
hlt
xor
or
nop
cld
jae
lahf
add
mov
mov
add
mov
mov
push
mov
nop
leave
nop
jmp
add
add
lea
clc
repnz
nop
cld
jae
add
xchg
sbb
add
imul
add
add
add
jl
add
nop
nop
cld
jae
mov
add
in
inc
add
mov
bound
lret
add
push
mov
nop
leave
nop
jmp
cmp
cs
push
mov
nop
leave
nop
jmp
add
add
mov
push
clc
repnz
nop
cld
jae
test
int3
lods
push
add
xor
dec
push
mov
nop
leave
nop
jmp
add
add
and
add
out
addb
mov
repnz
nop
cld
jae
add
lahf
add
jae
push
mov
xchg
ret
add
add
add
dec
lcall
repnz
nop
cld
jae
dec
add
sbb
mov
push
mov
xchg
ret
add
addl
in
repz
clc
repnz
nop
cld
jae
add
add
adc
lea
clc
repnz
nop
cld
jae
inc
xchg
sbb
pop
add
add
mov
xchg
ret
add
mov
xorl
popa
clc
repnz
nop
cld
jae
add
inc
xor
add
fcomps
repnz
nop
cld
jae
pop
push
mov
or
add
push
push
mov
nop
leave
nop
jmp
mov
add
add
adc
xor
add
clc
repnz
nop
cld
jae
and
push
mov
xchg
ret
add
add
hlt
add
mov
jmp
clc
repnz
nop
cld
jae
sahf
add
sahf
dec
add
clc
repnz
nop
cld
jae
add
mov
mov
cmp
nop
nop
cld
jae
add
lea
sbb
add
clc
repnz
nop
cld
jae
cltd
add
pop
mov
push
mov
xchg
ret
lahf
mov
push
mov
push
mov
xchg
ret
add
scas
add
inc
gs
clc
repnz
nop
cld
jae
lahf
add
pusha
push
mov
xchg
ret
add
adc
hlt
add
mov
icebp
inc
add
add
bound
add
test
in
clc
repnz
nop
cld
jae
add
lahf
jne
sub
clc
repnz
nop
cld
jae
or
add
cs
add
add
add
add
lret
rorl
pop
mov
clc
repnz
nop
cld
jae
lret
add
fs
insb
add
repnz
nop
cld
jae
xchg
and
cmp
outsl
arpl
add
repnz
nop
cld
jae
test
push
data16
push
clc
repnz
nop
cld
jae
pop
test
add
aad
mov
adc
add
clc
repnz
nop
cld
jae
lret
mov
dec
imul
cld
jae
add
icebp
sbb
add
clc
repnz
nop
cld
jae
jge
add
sar
repnz
nop
cld
jae
add
add
nop
cld
jae
add
add
add
or
lcall
nop
cld
jae
add
add
mov
cmp
clc
repnz
nop
cld
jae
mov
xor
push
mov
nop
leave
nop
jmp
mov
and
jl
mov
push
push
mov
xchg
ret
cmp
add
hlt
dec
push
mov
pop
mov
nop
leave
nop
jmp
bound
sub
mov
add
stos
mov
push
mov
nop
leave
nop
jmp
adc
mov
clc
repnz
nop
cld
jae
cmp
test
clc
repnz
nop
cld
jae
loope
add
jmp
sub
add
sbb
add
add
xchg
xchg
aaa
sbb
test
clc
repnz
nop
cld
jae
cmp
add
mov
nop
leave
nop
jmp
test
mov
add
xchg
push
mov
clc
repnz
nop
cld
jae
add
incb
add
and
repnz
nop
cld
jae
subl
add
loopne
repnz
nop
cld
jae
lahf
add
add
cmp
mov
clc
repnz
nop
cld
jae
scas
rcrl
mov
cltd
mov
push
mov
nop
leave
nop
jmp
push
add
add
push
clc
repnz
nop
cld
jae
or
add
add
xchg
in
xor
push
mov
nop
leave
nop
jmp
lret
add
sahf
add
add
imul
add
repnz
nop
cld
jae
xor
clc
repnz
nop
cld
jae
add
cltd
add
add
clc
repnz
nop
cld
jae
add
add
pushl
push
mov
xchg
ret
dec
add
jge
cmp
add
dec
add
push
cltd
and
add
add
clc
repnz
nop
cld
jae
add
mov
inc
mov
mov
xchg
ret
add
add
test
sbbl
nop
leave
nop
jmp
lods
sub
add
add
add
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
xchg
add
add
decb
shr
add
add
xlat
addb
bound
mov
pop
mov
add
adc
lret
add
push
mov
nop
leave
nop
jmp
sbb
mov
pop
mov
push
mov
nop
leave
nop
jmp
add
cmp
clc
repnz
nop
cld
jae
add
add
rclb
mov
inc
add
jl
int3
mov
push
clc
repnz
nop
cld
jae
push
add
mov
add
cmp
repnz
nop
cld
jae
lahf
add
add
test
clc
repnz
nop
cld
jae
cltd
int3
add
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
decb
and
jmp
outsl
loopne
repnz
nop
cld
jae
add
mov
mov
push
mov
xchg
ret
mov
push
mov
test
mov
push
mov
xchg
ret
or
and
xchg
add
shrl
mov
nop
leave
nop
jmp
icebp
mov
add
push
cmc
sbb
movsb
push
mov
xchg
ret
sbb
add
dec
mov
push
mov
xchg
ret
jl
add
or
push
add
clc
repnz
nop
cld
jae
jmp
inc
sti
mov
clc
repnz
nop
cld
jae
push
cmp
lahf
cmp
call
add
repnz
nop
cld
jae
cmp
cmp
repnz
nop
cld
jae
mov
xor
icebp
add
cmpsb
loopne
clc
repnz
nop
cld
jae
add
flds
jne
clc
repnz
nop
cld
jae
mov
add
mov
mov
xchg
add
add
aad
add
push
mov
nop
leave
nop
jmp
cltd
lods
xchg
inc
xor
pop
push
mov
xchg
ret
mov
mov
add
or
sbb
push
mov
xchg
ret
add
loope
mov
dec
add
inc
call
repnz
nop
cld
jae
hlt
or
inc
hlt
add
nop
nop
cld
jae
cmp
add
mov
or
add
repnz
nop
cld
jae
add
inc
add
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
push
pop
jle
clc
repnz
nop
cld
jae
or
add
mov
aaa
pop
pop
clc
repnz
nop
cld
jae
add
add
mov
xchg
cmp
mov
nop
leave
nop
jmp
add
add
or
inc
add
add
add
add
inc
jp
push
mov
xchg
ret
cmp
dec
add
add
add
dec
and
push
mov
nop
leave
nop
jmp
add
xchg
cltd
loope
dec
mov
push
mov
nop
leave
nop
jmp
dec
dec
mov
add
test
mov
in
loope
add
dec
or
add
loope
push
cs
push
mov
nop
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
cmp
push
imul
repnz
nop
cld
jae
add
add
inc
push
mov
nop
leave
nop
jmp
cmp
sbb
ja
add
jmp
decl
loope
inc
or
and
mov
fildl
xchg
ret
lret
add
mov
sbb
les
mov
xchg
ret
add
add
scas
mov
jecxz
pop
clc
repnz
nop
cld
jae
lods
add
pop
dec
add
adc
mov
push
clc
repnz
nop
cld
jae
mov
test
push
cmp
pop
leave
sub
clc
repnz
nop
cld
jae
push
or
sub
mov
mov
add
in
nop
leave
nop
jmp
dec
add
jmp
cld
mov
clc
repnz
nop
cld
jae
test
add
je
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
cltd
push
pop
loope
fucomi
cmc
idiv
clc
repnz
nop
cld
jae
add
mov
frstor
jb,pt
push
mov
nop
leave
nop
jmp
mov
add
nop
nop
cld
jae
add
sahf
inc
lahf
xchg
add
pop
and
push
mov
xchg
ret
mov
add
rep
clc
repnz
nop
cld
jae
rcl
inc
test
add
xchg
add
clc
repnz
nop
cld
jae
mov
add
mov
pop
lcall
clc
repnz
nop
cld
jae
add
add
testl
push
mov
nop
leave
nop
jmp
and
test
mov
mov
adc
repnz
nop
cld
jae
add
add
add
inc
clc
repnz
nop
cld
jae
bound
xor
dec
sbb
nop
leave
nop
jmp
add
loope
leave
add
push
mov
xchg
ret
add
and
add
clc
repnz
nop
cld
jae
dec
bound
pop
clc
repnz
nop
cld
jae
push
addl
cmp
mov
xchg
ret
add
add
lds
mov
mov
shrb
repnz
nop
cld
jae
hlt
cltd
add
add
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
and
add
cmp
pop
cmc
clc
repnz
nop
cld
jae
int3
xor
push
mov
nop
leave
nop
jmp
add
add
and
shl
clc
repnz
nop
cld
jae
add
add
mov
mov
pusha
clc
repnz
nop
cld
jae
add
cmp
add
jne
clc
repnz
nop
cld
jae
hlt
jl
lcall
nop
cld
jae
or
add
or
xor
in
add
add
dec
adc
sub
adc
adc
repnz
nop
cld
jae
push
xor
add
add
repnz
nop
cld
jae
pop
add
xor
stc
call
clc
repnz
nop
cld
jae
sub
test
iret
mov
clc
repnz
nop
cld
jae
mov
add
xor
mov
mov
clc
repnz
nop
cld
jae
add
notl
clc
repnz
nop
cld
jae
add
add
rcrl
clc
repnz
nop
cld
jae
add
add
and
mov
push
mov
xchg
ret
add
push
clc
mov
clc
repnz
nop
cld
jae
add
shrl
push
add
add
clc
repnz
nop
cld
jae
add
mov
sub
mov
cmp
ret
add
rcrl
mov
mov
clc
repnz
nop
cld
jae
push
mov
std
pop
clc
repnz
nop
cld
jae
int3
test
cltd
mov
repnz
nop
cld
jae
jmp
add
repnz
nop
cld
jae
add
adc
push
sbb
add
in
nop
leave
nop
jmp
add
push
mov
mov
nop
nop
cld
jae
pop
add
sub
int3
xchg
and
mov
push
mov
nop
leave
nop
jmp
add
mov
inc
add
add
repnz
nop
cld
jae
dec
dec
cmp
test
add
stc
pop
push
mov
xchg
ret
mov
mov
int3
add
mov
clc
repnz
nop
cld
jae
loope
xchg
add
and
clc
repnz
nop
cld
jae
and
inc
lret
add
arpl
call
push
mov
nop
leave
nop
jmp
pop
icebp
pop
add
mov
push
mov
nop
leave
nop
jmp
adc
loope
mov
push
mov
nop
leave
nop
jmp
inc
pop
add
push
push
mov
nop
leave
nop
jmp
mov
dec
add
mov
xchg
add
push
mov
nop
leave
nop
jmp
adc
jg
clc
repnz
nop
cld
jae
int3
int3
add
sub
mov
nop
leave
nop
jmp
scas
add
xchg
adc
mov
push
mov
nop
leave
nop
jmp
add
jmp
nop
cld
jae
or
dec
and
add
add
mov
nop
nop
cld
jae
pop
add
filds
mov
xchg
ret
xor
add
push
mov
xchg
ret
add
add
or
mov
clc
repnz
nop
cld
jae
add
cmc
clc
repnz
nop
cld
jae
add
add
sub
push
mov
nop
leave
nop
jmp
push
jl
add
dec
mov
clc
repnz
nop
cld
jae
mov
lahf
dec
repnz
lock
add
mov
xchg
ret
add
add
fmuls
nop
cld
jae
sahf
dec
add
add
add
cld
push
mov
shld
mov
fsubr
add
sti
mov
clc
repnz
nop
cld
jae
mov
lahf
and
nop
cld
jae
jl
add
pop
and
push
fcoms
mov
xchg
ret
and
add
dec
jbe
cmp
push
mov
xchg
ret
push
int3
lahf
dec
adc
push
push
mov
nop
leave
nop
jmp
add
lahf
xchg
add
push
je
clc
repnz
nop
cld
jae
mov
xor
mov
nop
nop
cld
jae
add
add
and
clc
repnz
nop
cld
jae
add
inc
add
repnz
nop
cld
jae
add
add
sub
cltd
jl
rep
push
mov
nop
leave
nop
jmp
hlt
add
sahf
adc
popa
add
mov
xchg
ret
add
add
add
add
or
push
mov
nop
leave
nop
jmp
add
add
add
jbe
movzwl
clc
repnz
nop
cld
jae
add
add
or
push
mov
add
mov
mov
add
add
push
add
pop
xchg
adc
outsb
fdivr
clc
repnz
nop
cld
jae
int3
bound
movl
repnz
nop
cld
jae
add
or
clc
repnz
nop
cld
jae
pop
push
and
or
repnz
nop
cld
jae
and
add
dec
jmp
incl
add
sbb
int3
addl
sbb
sbb
push
mov
nop
leave
nop
jmp
and
add
add
and
mov
xchg
ret
add
xchg
adc
jl
sub
clc
repnz
nop
cld
jae
xchg
cltd
bound
lods
push
jecxz
fs
mov
clc
repnz
nop
cld
jae
or
pop
add
adc
mov
nop
nop
cld
jae
mov
mov
jecxz
mov
clc
repnz
nop
cld
jae
add
add
fiadds
repz
repnz
nop
cld
jae
add
bound
add
adc
test
clc
repnz
nop
cld
jae
lahf
add
mov
rep
clc
repnz
nop
cld
jae
adc
add
cli
mov
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
bound
add
lahf
scas
and
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
xor
add
add
loope
call
in
nop
leave
nop
jmp
add
add
pop
clc
repnz
nop
cld
jae
add
add
or
add
in
nop
leave
nop
jmp
push
add
jmp
push
add
push
mov
xchg
ret
adc
and
push
mov
xchg
ret
add
add
and
mov
xchg
ret
add
add
inc
add
add
mov
mov
nop
leave
nop
jmp
icebp
add
loope
test
add
and
push
mov
xchg
ret
xchg
sub
sbb
add
push
push
xor
mov
popa
add
repnz
nop
cld
jae
hlt
add
add
pusha
add
repnz
nop
cld
jae
add
add
lahf
shl
in
mov
push
mov
xchg
ret
push
add
or
hlt
add
lods
lret
inc
add
add
int3
push
add
xor
inc
loopne
mov
xchg
ret
add
add
add
lret
stos
add
clc
repnz
nop
cld
jae
add
jge
add
mov
and
mov
je
clc
repnz
nop
cld
jae
cmp
add
repnz
nop
cld
jae
test
add
jns
clc
repnz
nop
cld
jae
loope
add
icebp
push
mov
nop
leave
nop
jmp
mov
mov
add
push
mov
nop
leave
nop
jmp
lahf
add
add
add
and
clc
repnz
nop
cld
jae
add
add
and
je
clc
repnz
nop
cld
jae
add
mov
jne
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
scas
cltd
lret
hlt
or
push
nop
nop
cld
jae
add
adc
lods
add
clc
repnz
nop
cld
jae
add
add
add
mov
add
in
nop
leave
nop
jmp
add
inc
mov
nop
cld
jae
add
add
cltd
pop
bound
jg
sar
nop
nop
cld
jae
sbb
lret
adc
nop
cld
jae
add
add
xchg
add
inc
xor
clc
repnz
nop
cld
jae
add
add
shll
add
lcall
sub
add
fs
pushf
jmp
call
in
nop
leave
nop
jmp
add
clc
repnz
nop
cld
jae
inc
mov
add
hlt
int3
add
add
push
mov
nop
leave
nop
jmp
add
dec
add
pop
test
push
clc
repnz
nop
cld
jae
add
add
add
bound
jp
push
mov
nop
leave
nop
jmp
pop
add
xor
xlat
inc
add
add
lods
add
incb
out
mov
clc
repnz
nop
cld
jae
mov
cmp
shr
push
mov
xchg
ret
and
add
mov
clc
repnz
nop
cld
jae
add
adc
push
clc
repnz
nop
cld
jae
and
test
add
sbb
repnz
nop
cld
jae
lahf
mov
ret
clc
rep
clc
repnz
nop
cld
jae
cmp
sahf
add
add
lret
push
push
mov
xchg
ret
push
add
push
cmp
test
jecxz
clc
repnz
nop
cld
jae
xchg
add
cmp
cmp
ret
decb
or
sahf
mov
mov
push
mov
nop
leave
nop
jmp
cmp
mov
cmp
nop
nop
cld
jae
add
and
dec
add
fsubrs
push
mov
nop
leave
nop
jmp
jmp
add
pop
mov
push
mov
xchg
ret
and
incb
add
sbb
sbb
inc
add
add
mov
add
cwtl
add
push
mov
nop
leave
nop
jmp
add
push
aaa
dec
movzwl
clc
repnz
nop
cld
jae
add
idiv
shr
clc
repnz
nop
cld
jae
jge
mov
push
add
push
mov
xor
lods
add
add
add
add
add
and
mov
icebp
clc
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
test
add
mov
sub
inc
adc
repnz
nop
cld
jae
add
lret
adc
repz
mov
nop
leave
nop
jmp
int3
cmp
mov
insl
xor
push
mov
xchg
ret
add
push
add
mov
and
push
mov
nop
leave
nop
jmp
scas
add
and
add
mov
clc
repnz
nop
cld
jae
add
add
add
push
push
mov
xchg
ret
add
lahf
add
add
add
clc
repnz
nop
cld
jae
pop
lahf
push
or
add
mov
push
mov
nop
leave
nop
jmp
lahf
mov
inc
fldl
js
push
mov
nop
leave
nop
jmp
and
cmp
jge
dec
mov
push
mov
xchg
ret
add
bound
add
sbb
add
clc
repnz
nop
cld
jae
add
or
popa
push
mov
nop
leave
nop
jmp
int3
cmp
icebp
xchg
sbb
mov
add
in
nop
leave
nop
jmp
xchg
lahf
pop
jmp
push
mov
xchg
ret
add
lret
mov
ret
or
push
mov
nop
leave
nop
jmp
sahf
or
jmp
nop
nop
cld
jae
and
add
and
add
mov
push
mov
nop
leave
nop
jmp
sub
sbb
nop
nop
cld
jae
loope
dec
inc
add
in
add
xchg
mov
push
filds
push
and
mov
clc
repnz
nop
cld
jae
sbb
add
or
add
loopne
mov
jno
popa
clc
repnz
nop
cld
jae
add
lods
push
jmp
lret
in
mov
adc
lcall
add
xor
sbb
daa
out
cmp
cmp
mov
cmp
mov
mov
add
push
inc
add
sub
leave
cs
rolb
into
out
lcall
jbe
lahf
add
mov
mov
js
sub
pop
or
mov
add
nop
add
add
push
testl
sub
push
in
mov
fisttps
xchg
mov
lea
sbb
and
mov
mov
mov
daa
push
lock
ret
sbb
aas
xchg
sub
and
or
hlt
xchg
out
sub
jne
mov
pop
lretw
les
mov
insb
jno
jae
add
scas
pop
or
cmp
sbb
into
xchg
and
rolb
xor
mov
jecxz
cmp
inc
add
fdivs
push
add
and
mov
je
mov
mov
sub
jg
scas
rolb
mov
cmc
sub
mov
fs
int
or
mov
push
bound
mov
add
popa
or
add
out
dec
sbb
rolb
fwait
shrl
sbb
sbb
movsb
and
mov
add
push
jle
test
pop
pop
mov
cs
add
dec
ds
add
add
mov
mov
xor
mov
add
insl
rolb
fnstcw
add
adc
mov
xchg
dec
push
in
mov
sahf
inc
xlat
inc
hlt
push
sbb
stos
push
sbb
clc
sbb
push
out
aam
xchg
xchg
fmul
stos
sub
mov
enter
mov
fcomps
repnz
add
adc
add
pop
mov
ret
xchg
sbb
add
add
mov
add
inc
inc
inc
lret
jl
aas
in
xlat
push
add
mov
loop
mov
and
mov
or
add
add
adc
mov
into
add
mov
scas
test
add
xlat
xor
dec
push
add
mov
mov
aas
xor
sbb
xchg
sahf
inc
add
cmp
xchg
inc
add
cwtl
mov
lock
loop
mov
cmp
inc
cmc
sbb
xor
js
add
add
insb
cltd
inc
add
mov
inc
sahf
insb
pop
pop
xor
add
xor
mov
or
cmpl
mov
sbb
fs
mov
add
out
add
or
mov
xor
mov
arpl
push
rolb
idivb
push
add
adc
adc
mov
dec
mov
jmp
or
mov
int3
sahf
cltd
rolb
mov
sahf
enter
scas
test
xchg
push
outsl
into
rcll
add
add
mov
inc
add
pop
add
jb
xor
sbb
sbb
or
aaa
xchg
jae
pop
clc
aaa
jae
mov
imul
mov
out
test
and
sub
cli
into
out
xchg
pusha
add
repnz
mov
mov
xchg
mov
pop
mov
mov
add
out
add
scas
pushf
add
fmuls
xor
cmpsl
test
xchg
sub
jb
mov
add
dec
mov
add
rolb
mov
call
fs
mov
and
mov
int3
ja
fsubrl
mov
lea
in
dec
and
add
mov
mov
add
mov
mov
lods
mov
cmp
add
imul
repnz
add
mov
cmc
out
cmp
or
dec
mov
mov
xchg
lea
pop
neg
mov
push
fs
aas
sub
sbb
and
xor
mov
loop
mov
into
add
sub
imul
popf
and
mov
sub
mov
clc
add
mov
add
aas
jo
mov
outsl
push
add
mov
outsl
cmp
xchg
lret
je
fiaddl
cmpsl
add
mov
push
add
stc
add
mov
mov
mov
add
ds
hlt
in
test
add
add
jle
mov
xor
sbb
int3
test
outsb
pop
inc
jns
hlt
fimull
jno
sbb
cmp
lret
pop
mov
cmp
fisubrs
scas
adc
push
in
nop
add
outsb
insb
lret
xchg
mov
inc
je
push
ffreep
add
addb
in
lret
cmovbe
xor
add
mov
cmp
add
dec
or
and
scas
aam
add
add
mov
add
je
sub
add
inc
cs
add
push
cli
clc
dec
or
xor
add
int3
mov
mov
mov
mov
rcll
mov
loopne
mov
xchg
cmc
dec
cwtl
out
jne
inc
ss
test
fcos
test
pop
inc
add
loope
jmp
xchg
out
dec
add
mov
sbb
xchg
je
add
sbb
popa
jl
sahf
fisubs
mov
and
and
mov
cmp
lods
push
les
rolb
div
xor
ja
adc
and
mov
cltd
sbb
dec
inc
call
mov
mov
mov
mov
inc
out
xor
mov
shll
fdivrs
sbb
mov
pop
lods
cmp
sbb
imul
les
mov
jns
pop
popa
mov
add
xchg
xlat
and
roll
lock
sub
adc
xchg
cmpsl
jg
dec
pusha
add
add
push
rolb
mov
pop
es
xlat
add
add
lods
ret
test
out
push
pushf
mov
mov
push
mov
sti
call
addb
jge
loop
mov
add
fs
xor
mov
daa
rolb
mov
push
pushf
and
mov
stos
mov
jmp
shll
add
mov
xor
mov
daa
or
inc
add
fildl
push
adc
mov
cmpsb
std
les
lret
push
mov
mov
cli
pop
sbb
xchg
add
add
inc
mov
arpl
data16
mov
lds
aaa
ja
bound
mov
mov
and
push
push
test
lret
inc
jg
pop
fadd
jno
scas
ficoml
mov
add
xor
mov
mov
jae
or
mov
add
xchg
cwtl
xchg
ja
add
push
dec
into
lods
add
out
lock
mov
mov
imul
mov
sub
add
scas
nop
add
add
mov
push
or
fcmovnu
cmp
mov
add
add
or
out
pop
fisubs
rolb
outsl
dec
das
sbb
or
sub
add
jmp
push
add
jne
test
mov
jne
or
jae
addb
mov
mov
mov
cmc
cmp
add
push
xor
mov
mov
out
in
mov
push
dec
xchg
into
cmc
enter
or
push
add
mov
add
add
flds
mov
jecxz
xor
push
add
addr16
xchg
xchg
add
icebp
xor
mov
in
stos
repz
sub
rolb
mov
out
out
or
cmp
js
xchg
stos
aad
rolb
push
dec
and
rolb
mov
pop
jb
mov
je
test
push
add
jb
mov
add
mov
jge
stc
call
inc
add
push
add
mov
add
and
mov
test
rcll
fs
testl
sarl
dec
stos
xchg
mov
add
mov
pop
xchg
lds
jmp
push
fwait
negb
or
add
push
pop
cmovs
add
mov
scas
mov
arpl
fsubl
xor
mov
add
add
popf
aad
jb
mov
lret
aas
arpl
push
stos
xlat
jecxz
jo
mov
mov
pop
xchg
lahf
imul
mov
mov
cmp
xor
lds
inc
xor
mov
loope
das
pop
out
shll
add
add
sarl
imul
stos
mov
loopne
mov
mov
out
pop
and
add
insl
mov
mov
inc
jb
mov
fmuls
add
add
xchg
outsl
ror
pop
cld
push
jae
imul
into
and
pop
or
add
xor
rolb
mov
or
test
scas
imul
ret
pop
es
push
lret
imul
stos
cmp
push
add
mov
add
inc
daa
dec
cwtl
push
adc
mov
arpl
sbb
cld
int3
jo
mov
mull
add
mov
std
xor
rolb
mov
into
int3
shll
mov
add
xlat
aad
mov
fsub
jmp
add
leave
sub
mov
imul
mov
pop
hlt
pushf
scas
js
aam
add
adc
xchg
fwait
add
shll
imul
lock
mov
mov
add
mov
mov
sub
mov
pop
jb
mov
dec
dec
movsl
sbb
arpl
sub
or
lods
jmp
add
xchg
xchg
icebp
dec
das
mov
mov
mov
mov
jb
mov
hlt
mov
std
pop
pop
xchg
jno
cmp
test
push
mov
test
cld
iret
push
sub
inc
add
adc
pusha
add
dec
xorl
add
in
les
xchg
sbb
push
add
xor
mov
maskmovq
shr
mov
cmp
cmc
sub
mov
mov
add
mov
bound
mov
cli
out
inc
test
mov
pop
in
mov
cli
addb
into
int
gs
pop
aaa
icebp
lods
pop
nop
xchg
imul
enter
inc
mov
mov
mov
adc
setae
mov
mov
add
push
add
add
or
mov
pop
dec
in
jge
fisubrl
sub
mov
xor
mov
push
add
inc
push
push
mov
mov
mov
fwait
xlat
in
test
mov
add
mov
mov
test
dec
xor
lods
popf
lods
negb
xor
addb
push
test
ror
cmp
mov
pop
push
fsubrs
sub
mov
and
js
outsl
mov
xchg
add
aam
dec
add
into
popf
cmpsb
dec
push
jo
mov
stos
adc
pop
dec
push
sti
pop
fldz
lcall
inc
adc
jb
mov
push
xchg
outsb
jb
mov
mov
cs
add
push
xor
mov
and
push
lret
lcall
mov
movsl
adc
mov
add
mov
mov
sahf
sub
jecxz
jae
inc
jle
and
mov
sti
sbb
push
int3
cmpsl
add
mov
movsl
sbb
cmp
xchg
cmp
xor
add
sbb
mov
mov
or
es
pop
xlat
aam
sti
pusha
add
mov
ljmp
nop
add
addb
xchg
mov
in
add
add
pop
aad
add
sub
aaa
ret
mov
mov
push
fwait
jb
mov
mov
shll
mov
and
mov
mov
pop
xchg
add
loopne
mov
iret
cmp
fisttpl
mov
mov
mov
mov
pop
push
add
ret
movsl
mov
xchg
push
xor
push
pop
mov
jl
daa
movsb
pop
xchg
js
insl
cld
or
int
sub
pop
lret
and
add
jg
cmp
es
fistps
fadd
add
and
out
xchg
add
mov
add
sbb
testl
jle
mov
das
mov
mov
lock
mov
mov
nop
add
gs
sub
cmp
sbb
pop
mov
js
mov
cmp
mov
dec
push
cmp
adc
mov
outsb
into
xor
dec
arpl
ret
rolb
mov
sbb
add
stos
jle
stos
out
fstps
test
cmpsb
arpl
add
mov
bound
mov
mov
outsl
or
add
lret
sbb
cmp
addb
mov
jns
jo
mov
sbb
fcmove
insl
adc
sub
add
insl
loop
mov
iret
js
add
pushf
cs
repz
mov
sbb
push
add
mov
decb
pop
icebp
sub
dec
imul
std
addr16
add
dec
xor
mov
push
add
push
push
or
adc
mov
test
and
mov
lret
add
add
ret
subl
sahf
inc
cli
sub
aad
test
xchg
in
dec
mov
push
lret
jb
mov
test
in
push
add
add
pop
pushf
xchg
mov
andl
jae
xchg
cli
mov
jb
mov
sbb
je
sub
mov
popa
out
push
sub
add
mov
add
mov
das
adc
in
dec
jp,pt
cmp
ret
push
push
cmp
mov
fidivl
xchg
sub
mov
mov
jne
insl
test
loop
mov
mov
xlat
ret
cmp
ficoml
scas
scas
leave
and
xchg
push
add
push
mov
push
add
push
mov
add
jne
add
add
add
mov
aaa
rcr
or
add
mov
fiadds
push
mov
jle
mov
push
or
mov
xchg
enter
cld
loope
test
mov
or
mov
cmpsl
push
mov
dec
pop
lret
mov
add
sbb
shll
mov
pop
fstpt
pop
pop
call
sahf
pushf
in
pop
mov
pushf
shrl
or
mov
cmp
xchg
add
cld
iret
sub
adc
cmp
lea
adc
mov
fistps
sahf
loopne
mov
mov
shrl
dec
inc
add
adc
lock
sbb
jle
popf
inc
add
lods
add
aas
ja
test
xlat
cmp
imul
les
add
outsl
push
aaa
fsubrs
adc
dec
pop
int3
hlt
sbbl
mov
add
add
jne
ret
mov
or
mov
mov
insb
aas
mov
mov
mov
ds
out
xor
add
fildll
adc
dec
mov
mov
inc
and
mov
lahf
xchg
sub
adc
mov
xchg
mov
nop
add
inc
cmp
inc
in
sub
aam
pop
mov
push
add
or
les
add
int
jne
add
sbb
addb
xchg
aad
add
mov
add
sub
mov
mov
add
ret
addb
out
seta
and
mov
push
fldenv
add
pusha
add
xchg
cld
loopne
mov
data16
repnz
in
adc
cmp
lret
dec
ret
mov
rolb
mov
add
dec
lock
rolb
pop
push
add
mov
mov
mov
mov
add
mov
xor
rolb
mov
push
dec
stos
and
and
jo
mov
push
jge
mov
leave
cmc
sbb
add
push
popa
push
cmc
sub
mov
call
xchg
dec
push
push
inc
or
sub
mov
sti
loope
and
mov
mov
add
nop
add
mov
mov
dec
jle
jecxz
and
pop
cmp
xchg
dec
pop
sub
add
add
mov
pop
fstps
sub
push
aam
sbb
fwait
int3
out
or
xchg
les
mov
cmc
or
mov
lods
sub
ret
jb
mov
or
inc
add
loop
mov
add
or
mov
lods
sbb
mov
stos
mov
loop
mov
lds
add
or
jl
mov
xor
mov
mov
jb
mov
mov
jg
mov
inc
add
add
adc
cs
enter
cmp
xor
testl
mov
das
lock
push
pop
jl
lret
mov
mov
outsb
push
xchg
sub
inc
lahf
jecxz
or
cld
or
mov
dec
pop
addb
dec
addr16
loope
adc
mov
rolb
mov
lock
pusha
add
xor
mov
add
idivl
cmp
jnp
out
xchg
sti
addb
scas
es
pop
gs
insb
repnz
add
outsb
inc
out
cmp
push
std
pop
out
loop
mov
std
movsb
and
add
out
lea
in
push
pusha
add
mov
pushf
gs
cmp
sbb
out
inc
mov
mov
jb
mov
jns
adc
cld
dec
xchg
arpl
and
add
jg
add
lret
push
or
cwtl
mov
sti
sbb
scas
adc
add
xchg
mov
sbb
cmp
and
mov
push
pop
cld
je
out
add
push
adc
out
gs
cmp
mov
add
lahf
fistps
add
mov
xlat
pop
mov
fidivl
inc
cmp
add
icebp
or
mov
mov
int
mov
ficompl
push
outsb
cltd
fsubrl
push
ret
mov
aas
xor
mov
cmp
in
adc
dec
out
xchg
movsl
mov
mov
je
add
add
negl
das
inc
call
xchg
std
cmpsb
in
rolb
mov
mov
push
in
popa
xor
mov
xor
jae
call
mov
cltd
and
dec
loop
mov
faddl
xor
loope
inc
sbb
dec
fsub
scas
mov
mov
lret
mov
fadds
xchg
add
inc
cwtl
sbb
add
push
add
call
jnp
add
ret
in
dec
adc
cmp
out
adc
mov
mov
and
repnz
sbb
repz
xor
popf
lret
or
ja
mov
scas
adc
fadds
test
mov
and
ja
into
sbb
add
cmc
sarl
in
loope
and
push
inc
add
jmp
dec
or
fidivl
lcall
mov
mov
adcl
mov
add
jl
mov
icebp
icebp
aam
mov
lds
add
add
dec
xor
gs
cli
fisubs
xor
in
mov
push
inc
stos
scas
enter
jmp
pop
ja
stos
test
in
jecxz
mov
das
pop
xchg
adc
sub
jl
lds
pop
mov
test
in
stos
and
ljmp
inc
roll
sub
cmp
mov
sbb
add
xchg
orl
push
inc
add
jmp
roll
enter
add
and
pop
test
out
mov
mov
addr16
add
fwait
dec
aad
add
add
add
insl
cmpsl
das
lea
dec
fadds
mov
jnp
or
add
ljmp
pop
iret
xlat
lds
fisubrl
imul
clc
jle
xchg
sbb
cmp
xor
xchg
popa
sub
ds
add
xchg
daa
lret
and
gs
je
lret
insl
mov
xor
mov
dec
inc
lods
xor
jno
push
pop
xchg
sbb
jge
out
sbb
add
xor
mov
jmp
or
sub
mov
pop
pop
addl
lcall
fbld
inc
add
data16
mov
aam
pop
jo
mov
clc
jo
mov
add
mov
std
adc
lds
xchg
test
add
loope
jecxz
rcll
mov
insb
or
add
xchg
xor
jbe
popa
mulb
jmp
stc
dec
jnp
sub
movsl
sub
out
addb
and
mov
add
cltd
fstl
or
add
fidivrl
mov
cltd
lret
add
pushl
testb
add
les
push
add
and
mov
lea
outsl
jmp
rolb
mov
inc
inc
pop
inc
jl
jae
loope
pop
sbbl
out
mov
in
adc
mov
mov
icebp
jge
and
mov
xor
mov
aam
xchg
sbb
mov
int3
int3
nop
add
sahf
jmp
add
mov
daa
fwait
inc
aad
cs
xchg
add
mov
ja
jbe
add
adc
mov
data16
and
inc
add
pop
addr16
xchg
adc
mov
xchg
lea
mov
popf
jne
mull
jbe
mov
pop
pop
ljmp
push
ds
mov
add
mov
mov
xchg
push
into
int
in
and
mov
pushf
addb
push
call
add
mov
iret
repnz
mov
push
add
adc
push
lahf
cld
add
push
pop
ljmp
mov
rolb
stc
aam
sub
add
scas
nop
add
sub
adc
mov
inc
lret
mov
add
or
add
leave
dec
cmp
cwtl
inc
test
lock
fbld
arpl
das
incb
xchg
xor
ret
out
int3
negb
mov
add
pop
pop
ss
gs
movsl
stc
cmp
jno
and
idivl
xchg
gs
or
mov
rolb
mov
les
lock
inc
in
sbb
stos
sbb
fisubrl
jge
in
call
mov
mull
inc
fucom
push
xchg
dec
and
mov
rcr
test
mov
mov
add
mov
or
fldcw
xchg
fists
outsb
dec
das
rolb
fsub
lock
add
mov
sbb
ds
mov
and
mov
add
add
mov
mov
inc
daa
xchg
loop
mov
push
xchg
cmp
add
and
cmp
mov
xchg
sbb
mov
sti
lea
lods
sbb
outsb
push
and
push
add
outsl
in
test
xor
cmpsb
test
daa
jmp
mov
test
rolb
mov
jle
inc
mov
clc
cmp
add
push
scas
sub
sub
and
fisubrs
mov
pop
fildll
add
xor
dec
dec
cli
cmp
and
mov
xchg
push
dec
sahf
mov
repnz
inc
add
add
mov
add
sub
test
mov
xor
pop
inc
cmp
popf
int3
and
jnp
int
sbbl
scas
movsb
or
mov
stc
sbb
sub
lds
and
or
fwait
rolb
jbe
data16
mov
flds
add
xchg
fcmove
mov
in
pop
js
xchg
sub
inc
mov
or
xchg
pop
sbb
inc
ret
je
push
mov
outsb
les
add
xchg
xor
lcall
fistps
mov
push
jb
mov
ja
imul
adc
stc
adc
xchg
jae
cmp
pushw
jle
add
outsl
sbb
int
mov
add
mov
add
mov
iret
or
mov
dec
xor
mov
nop
add
or
aaa
shll
es
in
popa
and
dec
push
xchg
dec
push
lcall
mov
jg
mov
fistpll
mov
addr16
sbb
neg
frstor
add
and
imul
mov
xchg
mov
jno
fsubl
loopne
mov
mov
add
hlt
mov
and
mov
loopne
mov
mov
push
cltd
adc
xchg
push
negl
rolb
dec
lock
adc
mov
jnp
adc
mov
stos
loopne
mov
dec
in
movsb
push
fstps
lds
imul
rcr
dec
inc
or
mov
jg
push
pmaddwd
stos
xchg
sbb
rcll
add
add
jno
mov
or
add
ljmp
bswap
add
mov
outsl
shll
gs
xor
mov
rolb
mov
push
add
add
out
inc
out
vrcpps
gs
sbb
mov
mov
fstl
cmc
mov
mov
test
scas
and
add
add
push
stos
jnp
hlt
jge
add
bound
mov
jg
lcall
jo
mov
ds
cmp
int
mov
mov
daa
rolb
mov
pop
sub
mov
mov
jl
and
cwtl
adc
mov
adc
mov
insl
fildll
xchg
pushf
mov
scas
cmp
ss
out
imul
mov
bound
mov
xchg
imul
sahf
sbb
mov
popa
mov
mov
jmp
mov
mov
scas
xor
cmp
xlat
cmp
out
sbb
xchg
pop
mov
add
clc
mov
mov
enter
add
outsl
dec
mov
mov
arpl
cmp
roll
mov
mov
or
jmp
mov
mov
mov
repnz
mov
sbb
movsb
cmp
add
or
in
icebp
arpl
dec
ljmp
fwait
mov
add
int3
jge
xchg
testb
push
bound
mov
fistl
mov
add
xchg
test
and
mov
mov
add
mov
nop
add
movsl
cmpsl
dec
scas
cmc
movsb
pushf
pop
push
inc
adc
test
add
mov
add
mov
xor
loop,pn
mov
mov
add
mov
add
push
jne
xchg
or
lret
popf
loope
pop
adc
mov
fwait
or
or
or
shll
mov
jmp
in
rolb
loopne
mov
mov
mov
gs
jbe
pop
testb
inc
mov
sub
inc
mov
and
mov
add
out
adc
mov
ljmp
rolb
mov
add
mov
mull
sub
mov
add
dec
adc
xchg
rolb
mov
mov
cmpl
push
xchg
mov
out
add
dec
cli
fwait
adc
mov
mov
mov
add
pop
lock
lods
stos
mov
lea
ss
push
add
lret
enter
sub
mov
xchg
mov
mov
insl
iret
adc
mov
in
adc
clc
dec
lods
out
fstps
cwtl
and
fildll
ds
jno
in
sahf
into
sbb
loopne
mov
lahf
in
dec
int3
jns
add
cld
fldlg2
sti
das
ja
sti
sub
sub
add
imul
movsb
mov
adc
inc
cli
pop
sahf
jp
push
fcom
sbb
and
add
je
pop
jne
pop
out
dec
insb
xorl
ret
ss
add
fisttpll
outsb
mov
jno
add
or
xor
addb
pusha
add
mov
pop
xorl
add
in
xchg
add
mov
inc
inc
jne
cmp
fidivrl
out
les
add
dec
lods
hlt
xchg
les
add
or
lea
in
jb
mov
fstpt
dec
imul
mov
cmp
add
in
cmpsl
testl
mov
int
movsl
push
jg
cs
and
ljmp
mov
adc
mov
pop
or
add
ss
sti
or
jg
pop
adc
dec
cmp
xor
adc
out
pop
xor
mov
mov
mov
add
mov
adc
sub
in
lds
inc
and
push
pop
and
sbb
add
add
xor
mov
cmp
and
add
mov
push
jecxz
inc
test
int3
pop
insl
xor
loope
frstpm(287
cmp
arpl
add
mov
cmp
xchg
jecxz
xor
mov
sub
jge
adc
cwtl
push
addb
mov
cmp
call
cmp
xchg
sti
lahf
sub
or
mov
push
in
daa
xchg
jae
push
mov
out
dec
fs
jo
mov
add
mov
mov
mov
ret
scas
dec
in
xchg
inc
add
inc
ss
mov
mov
insl
sahf
inc
add
sarl
inc
insl
push
xchg
mov
orl
add
push
lar
mov
sbb
push
repz
push
aad
fmuls
mov
add
ret
fsub
data16
sahf
mov
dec
or
stos
fwait
inc
cmp
pop
test
mov
lahf
or
add
rolb
testb
addb
cmpsb
sbb
sti
sub
pushf
add
ss
in
sbb
cs
jbe
push
pushf
push
les
jae
imul
adc
gs
or
daa
jb
mov
mov
pop
xchg
mov
addb
stos
xorl
add
mov
mov
and
add
lds
mov
adc
daa
adc
jno
dec
push
loop
mov
sbb
sbb
mov
mov
add
adc
mov
adc
mov
sub
pushf
fdivrl
push
leave
xor
mov
and
addb
rolb
lea
push
out
fcompl
insl
rolb
mov
shll
jnp
add
dec
push
cmp
mov
cli
addb
push
outsl
pop
fucom
std
call
jns
cmp
cmc
and
in
mov
sub
xor
icebp
out
out
popf
ja
leave
push
add
push
add
xor
mov
mov
ljmp
mov
sbb
ret
dec
cmp
out
add
mov
add
dec
idivb
xchg
stos
push
pushf
xor
push
add
mov
sbb
add
xchg
mov
cmp
loop
mov
mov
or
mov
repz
pop
movsl
outsb
pop
and
pop
mov
addr16
jmp
and
mov
das
aas
add
shll
add
stc
das
jmp
mov
lcall
test
xlat
adc
mov
fs
mov
mov
jnp
addb
push
push
sbb
paddsw
mov
stos
in
mov
xor
mov
lods
push
ret
inc
adc
mov
push
mov
adc
mov
sub
mov
movsb
rcll
mov
sti
xchg
call
dec
push
shll
jne
out
inc
xlat
icebp
loope
add
mov
xor
pop
out
imul
add
das
hlt
out
push
add
cmp
and
sub
lock
rolb
mov
lock
lods
pop
inc
add
imul
mov
mov
pop
neg
cmp
add
inc
jp
std
mov
adc
mov
add
mov
test
cmovno
addb
xchg
lea
inc
scas
scas
push
stos
cmpl
mov
pop
push
popf
adc
mov
add
pushf
mov
mov
adcl
mov
add
mov
rolb
fs
bound
mov
addl
mov
fistpl
xchg
xor
mov
loop
mov
je
cwtl
jle
fldcw
lods
in
jae
xor
mov
int3
ja
les
mov
subl
outsl
adc
gs
add
pop
inc
and
pop
stos
sti
andl
cli
pop
inc
data16
bound
mov
dec
pop
pop
outsb
test
add
jnp
add
popa
xchg
out
and
jmp
adc
cmp
test
add
imul
fistps
inc
int3
and
mov
mov
sahf
popf
pop
sbb
movsb
push
scas
xchg
jbe
aad
repz
lods
lcall
xchg
sahf
lret
add
out
adc
mov
test
cmp
mov
mov
add
mov
lea
repz
dec
lret
pop
sub
popa
pop
xor
test
add
fwait
repnz
aas
ret
pop
jg
imul
pop
je
jbe
add
mov
cmp
loopne
mov
movsl
xchg
add
push
rcll
mov
mov
mov
mov
add
pop
aad
icebp
xchg
lods
lods
cmpsl
inc
add
dec
xor
mov
repz
mov
add
repz
int
or
mov
push
sti
xor
mov
mov
add
mov
add
pop
enter
fidivrs
mov
mov
inc
das
cwtl
sub
mov
push
lret
mov
mov
add
sbb
cwtl
divb
pusha
add
inc
cli
arpl
jl
dec
cli
pop
js
add
dec
cmp
cwtl
pop
mov
rolb
mov
out
scas
xchg
xor
mov
xchg
mov
mov
dec
mov
mov
xchg
or
add
xor
add
ret
int
movsb
dec
add
or
adc
int
int3
adc
popf
rep
sbb
iret
lods
in
add
daa
mov
mov
lods
xchg
add
add
sahf
std
fwait
push
push
fldl
out
jo
mov
lret
push
push
xchg
pop
inc
outsl
inc
cmp
add
mov
inc
dec
lods
das
arpl
dec
pop
mov
mov
mov
repnz
mov
mov
xchg
xchg
dec
mov
mov
mov
add
xor
aaa
jecxz
mov
jmp
mov
loop
mov
xor
fdivl
mov
scas
out
enter
add
je
lea
mov
outsl
out
push
mov
loop
mov
fsubrp
xor
mov
add
pop
xor
dec
lret
jne
lods
sub
xor
mov
mov
mov
rcrl
addr16
mov
mov
add
rolb
mov
cld
xor
mov
inc
pop
icebp
rolb
mov
mov
adc
mov
je
nop
add
fisttpll
adc
xlat
mov
mov
lret
cmp
add
or
add
jo
mov
dec
push
rorl
test
loopne
mov
leave
xchg
hlt
ja
sub
mov
add
cld
test
push
addb
rolb
mov
out
cmp
lock
aad
sahf
mov
test
enter
addl
rolb
mov
mov
mov
inc
add
out
je
push
dec
repz
aas
lods
or
push
dec
fidivs
add
xor
xor
addb
mov
mov
ficoms
addb
test
stos
movsb
jecxz
xchg
mov
add
enter
stos
cmpsb
sbbl
repz
jns
pop
rcrl
mov
push
cmpsl
clc
dec
mov
sbb
test
mov
call
mov
add
push
cmp
xor
mov
jle
lea
std
push
jl
pop
addr16
mov
nop
add
xchg
div
repnz
jecxz
pop
dec
sub
clc
jecxz
mov
test
mov
lret
inc
add
jg
cmp
cmp
mov
test
add
cmc
enter
xor
xor
mov
dec
inc
imul
mov
inc
mov
loope
nop
add
lods
mov
aad
add
call
pop
repnz
loope
push
jle
int3
inc
sbb
mov
sbb
xor
and
mov
mov
ja
adc
mov
add
mov
rorl
add
lcall
jmp
call
xlat
and
pop
lret
mov
add
ja
push
out
push
daa
lods
xor
dec
test
mov
or
mov
adcl
mov
mov
add
add
push
jb
mov
fildl
in
mov
popf
mov
add
mov
pop
jno
mov
idivb
xor
cmpsl
xchg
mov
push
std
push
repnz
add
xchg
cs
clc
adc
int
loope
inc
dec
xor
out
popf
ds
cld
sbb
out
pop
sbb
push
jo
mov
sub
xor
and
dec
cld
adc
pop
xor
rolb
mov
xchg
pop
out
rcr
xor
add
scas
pmuludq
push
mov
sar
in
lcall
inc
add
adc
adc
dec
test
fdiv
dec
mov
test
and
push
test
sub
popf
adc
jb
mov
rolb
mov
jp
pop
mov
sbb
adc
inc
add
push
sub
aas
dec
inc
inc
add
add
push
add
enter
mov
cmp
out
xchg
inc
call
xchg
xchg
add
aad
add
mov
mov
inc
add
inc
add
add
imul
mov
or
pop
icebp
dec
pop
mov
pop
divb
fistpll
jle
dec
push
dec
adc
mov
sbb
imul
inc
or
cmp
inc
enter
addb
stos
mov
mov
std
std
adc
mov
add
in
repz
in
scas
pop
push
addr16
xlat
lods
nop
add
rolb
jp
xor
dec
pusha
add
cmpl
mov
addb
clc
arpl
pop
ljmp
push
sbbl
out
fidivl
mov
clc
lcall
negl
fdivrp
clc
clc
adc
mov
in
jo
mov
lods
in
pushf
and
push
add
add
cltd
je
popf
jnp
pusha
add
nop
add
push
loop
mov
sub
hlt
in
inc
inc
lcall
lcall
jno
ljmp
sub
mov
rolb
mov
xor
add
data16
mov
outsl
addr16
or
add
call
pop
push
push
push
mov
mov
add
cmpl
pop
add
mov
cmc
and
mov
jmp
mov
sub
mov
dec
scas
addb
fidivs
insb
cwtl
dec
lock
dec
in
shll
xor
mov
gs
mov
mov
xor
fucomip
cld
mov
add
sbb
mov
and
sbb
sub
and
mov
scas
nop
add
insl
loopne
mov
pop
ret
add
mov
pop
cmp
push
add
icebp
cmp
daa
pop
jp
pop
pop
ret
cmp
dec
and
mov
and
movsb
loopne
mov
mov
lods
fwait
insl
or
xchg
mov
adc
scas
cwtl
hlt
jo
mov
mov
adc
int3
push
or
pusha
add
popa
lcall
cwtl
je
add
xor
addr16
rcrl
fistpl
movsl
hlt
xor
mov
add
mov
jp
data16
add
sbb
add
add
cltd
mov
and
mov
push
push
jmp
andl
das
xchg
lcall
xor
inc
fstpl
std
mov
mov
xchg
ffree
dec
adc
mov
mov
cmc
adc
xchg
icebp
lahf
cs
popa
pop
xchg
out
inc
add
xor
scas
pop
sbb
mov
pop
outsb
push
and
add
aas
gs
push
push
xor
push
mov
add
dec
fdivrl
cmpsb
xchg
mov
addb
mov
pmullw
push
add
repz
hlt
mov
sub
lds
mov
add
cmp
cmp
sarl
or
rolb
mov
mov
sub
outsb
rolb
mov
add
inc
push
in
mov
stos
loop
mov
add
xor
mov
add
testl
add
add
mov
sbb
rolb
mov
add
fbld
fsub
cli
sbb
push
add
addb
mov
enter
fimull
aam
js
xor
sub
and
mov
rolb
mov
fdivrl
test
nop
add
cmpsl
or
clc
pop
add
ret
dec
cmpsb
xchg
add
es
mov
xchg
pop
repz
aaa
push
xchg
inc
xchg
push
movsl
pushf
sub
add
mov
addr16
scas
jbe
add
outsl
lahf
mov
sbb
adc
decb
xchg
xchg
mov
mov
push
cld
jmp
add
popa
jge
add
mov
xchg
add
add
cmpsb
ficomps
xchg
jl
add
cld
push
mov
mov
push
push
add
add
ret
push
pop
mov
add
sti
imul
imul
cld
fwait
loopne
mov
mov
add
mov
mov
jg
mov
add
xor
xchg
fildll
or
or
add
add
push
add
insl
cltd
out
sarl
or
repz
mov
cmpsb
rolb
mov
sub
pusha
add
jge
pop
sub
test
adc
pop
imul
lock
xor
imul
mov
push
das
push
add
daa
mov
movsl
iret
mov
mov
mov
pop
and
out
rcrl
out
or
dec
test
scas
xchg
push
add
jmp
fistpl
fstl
push
sub
iret
jb
mov
jno
xor
mov
push
gs
mov
mov
or
cmp
xchg
mov
push
je
adc
mov
pop
or
sbb
mull
test
push
add
and
addb
fbld
add
add
jg
sbb
cmp
cli
sub
inc
pop
test
add
xor
sti
into
xchg
mov
xchg
adc
add
aaa
or
add
mov
mov
add
xor
add
mov
sbb
xor
sub
inc
mov
jmp
pop
sar
mov
mov
add
pop
mov
fnsave
sti
jle
push
sub
add
mov
push
cld
cmp
repnz
mov
jo
mov
add
mov
hlt
insl
xlat
jg
xor
gs
mov
mov
maxps
test
add
sub
stc
xlat
push
push
lods
addb
test
movsb
roll
stos
mov
mov
testl
adc
mov
add
xor
mov
js
addb
loope
sub
rolb
mov
add
add
bound
mov
addb
pushf
in
fstpl
or
fsts
add
ljmp
stc
lock
mov
dec
or
push
je
add
cli
aaa
xchg
add
and
add
sbb
mov
dec
outsl
int
xor
test
and
mov
add
mov
je
dec
stos
xchg
imul
add
clc
cmc
or
in
jbe
xchg
add
mov
int
mov
add
daa
rolb
xor
mov
mov
pushf
fnstsw
mov
cmpsl
xor
mov
xlat
shrl
fmuls
cld
in
scas
icebp
dec
outsb
adcl
push
push
out
dec
xor
add
leave
pop
pop
insb
es
push
add
subl
mov
add
sub
pop
cmp
pop
ljmp
out
sbb
iret
and
push
add
inc
lret
or
cli
sub
aad
add
outsl
or
mull
dec
pushf
rol
add
push
and
mov
and
mov
stc
push
pusha
add
xor
or
repnz
add
mov
push
add
or
mov
and
sub
cld
and
add
sahf
add
mov
mov
add
mov
add
clc
rolb
mov
pushf
xchg
js
sub
mov
ja
in
add
xor
mov
add
mov
mov
add
add
cli
sub
and
mov
notl
fistl
ss
dec
add
and
mov
xor
mov
stos
paddd
fists
mov
shll
call
add
lcall
jg
or
adc
dec
lahf
jnp
fisubrl
adc
rolb
mov
nopl
mov
xor
or
mov
jno
add
add
mov
jl
add
into
aad
adc
ret
in
add
mov
mov
add
insb
iret
negb
jne
movsl
pushl
hlt
loop
mov
lea
add
xchg
ffreep
jle
xor
add
add
xchg
xchg
cltd
rol
test
mov
jne
mov
lds
add
xchg
dec
jo
mov
add
mov
sub
addb
repz
bound
mov
and
decl
es
adc
test
add
ret
cmp
add
insl
jae
inc
jecxz
add
add
and
ds
lods
add
add
mov
mov
addr16
fidivrs
ret
push
adc
or
add
push
jl
jnp
mov
inc
add
dec
mov
add
aad
push
mov
and
push
and
mov
inc
mov
or
in
testl
push
add
add
addr16
pop
fimull
push
lea
jecxz
sub
addb
pop
inc
add
adc
lret
outsb
xor
mov
add
out
add
xor
mov
dec
gs
cltd
add
pop
mov
addl
cmc
push
loope
sub
sbb
add
std
sub
add
shll
and
add
mov
cmp
out
test
mov
add
gs
adc
lcall
inc
or
add
xchg
jle
movsb
pusha
add
sti
mov
pop
adc
push
add
jbe
xchg
rolb
mov
gs
add
fmull
jg
dec
xchg
add
fsubs
and
add
add
mov
mov
xchg
scas
and
pusha
add
mov
sti
sbb
push
nop
add
add
add
mov
xor
mov
ds
adc
insl
mov
xchg
add
lods
js
cmp
add
inc
push
push
mov
mov
mov
xor
mov
add
mov
fsubp
daa
movsl
push
lods
lahf
mov
pop
inc
rolb
or
mov
add
jge
test
rolb
mov
arpl
insb
or
test
xor
scas
data16
sub
roll
rolb
xor
cltd
jae
pop
cmc
ljmp
jbe
pop
leave
fdecstp
scas
push
lcall
dec
lds
popa
aaa
push
xchg
add
mulb
add
mov
mov
lret
lahf
push
mov
and
mov
push
in
push
add
pop
addb
adc
mov
inc
add
mov
cwtl
xchg
xchg
jae
inc
pushf
and
xchg
inc
add
mov
add
add
lret
jbe
and
add
fs
idivb
xor
jo
mov
loopne
mov
nop
add
push
popa
scas
js
imul
cmp
fisubs
je
ret
fldt
add
add
inc
add
add
cmpsl
popa
mov
xor
mov
mov
stc
in
adc
xlat
roll
inc
cltd
inc
nop
add
enter
sbb
xchg
jb
mov
xlat
mov
sahf
repnz
push
adc
mov
je
dec
fisubrl
push
ret
enter
mov
ret
loope
out
subl
mov
add
push
xor
mov
ret
push
push
push
loop
mov
add
inc
add
fwait
aaa
testl
hlt
lods
and
mov
mov
rolb
mov
pop
loope
lods
and
sub
add
mov
xlat
mov
cltd
cmp
pop
and
js
inc
mov
add
es
jb
mov
cmp
xlat
cmp
out
add
push
pop
add
add
and
mov
cmp
faddp
mov
adc
and
dec
mov
stos
ret
jge
inc
add
mov
push
add
lahf
adc
push
fstl
mov
add
imul
jge
sahf
adc
icebp
xchg
jp
scas
pop
sub
add
xchg
addb
push
xchg
cmp
mov
pop
xchg
stos
mov
adc
jle
or
fucomip
repnz
add
ljmp
in
jecxz
add
inc
cmpsl
pop
cmpsb
aas
sbb
data16
xor
mov
inc
add
sbb
cmp
add
mov
test
addb
xlat
lock
in
xchg
sbbl
iret
loop
mov
xchg
lahf
pop
ljmp
addb
jge
test
insl
es
dec
leave
xchg
enter
add
sarl
pushf
sbb
ret
push
add
ret
mov
pop
push
add
mov
add
inc
sbb
mov
popf
mov
cmp
push
les
sbb
sahf
xchg
cld
cmp
fwait
mov
mov
movsb
adc
add
sbb
pop
add
mov
add
not
addb
mov
mov
mov
repz
lock
in
movsb
jmp
inc
jmp
iret
dec
stc
inc
pop
filds
cs
add
inc
add
jmp
into
pop
adc
mov
xchg
mov
addb
pop
pop
lret
fldcw
push
andl
lods
daa
jno
adc
add
mov
cmp
push
sub
push
adc
aad
push
sarl
jns
add
pop
jnp
mov
sahf
sar
sbb
lods
repnz
add
inc
xor
and
mov
inc
out
sub
sbb
arpl
jg
xor
out
ficompl
int
push
mov
mov
jecxz
testl
or
pop
push
call
push
sub
sbb
repz
mov
hlt
stos
sub
stc
incl
sub
push
scas
jmp
add
mov
push
mov
mov
sbb
arpl
add
jp
pushf
xor
stos
or
and
mov
pop
xchg
or
or
add
xchg
sub
mov
insb
bswap
adc
add
and
adc
mov
add
mov
adc
cmpsb
ja
cltd
sub
dec
lods
mov
les
cld
rolb
ss
jnp
fmulp
ds
xchg
xchg
or
cmpsl
in
cmp
inc
out
fcmovne
iret
idivb
pop
xchg
sub
xor
mov
push
lahf
sub
pop
insb
adc
mov
mov
roll
icebp
sub
inc
cmp
add
mov
add
bound
mov
pop
addr16
out
add
mov
add
push
add
and
mov
mov
mov
cld
add
rol
ss
sub
stos
inc
aad
add
inc
sbb
mov
pop
sbb
outsb
les
mov
adc
cltd
cs
int3
pop
repz
dec
ljmp
shr
dec
sub
aad
xor
sti
sbb
mov
es
loop
mov
lods
sbb
and
mov
std
outsb
mov
imul
aaa
cmp
add
pop
or
xor
mov
and
mov
add
add
add
pop
push
jno
dec
pop
fsubrs
push
jecxz
pop
inc
pushf
bound
mov
or
xchg
add
cmp
into
fsin
fwait
add
mov
mov
mov
mov
jl
sbbl
mov
dec
adc
mov
xor
mov
out
sbb
neg
adc
sub
sbb
mov
push
sbb
iret
dec
aam
jmp
add
movsb
adc
cmp
adc
cmp
mov
xchg
lea
cmp
xor
popa
xchg
add
add
mov
mov
add
add
mov
repz
or
xchg
int3
mov
dec
lds
add
imul
in
push
mov
sub
mov
mov
add
and
or
add
push
add
negb
pop
push
dec
int3
xchg
jp
add
popa
push
out
mov
jo
mov
add
add
cmp
lods
and
dec
push
sbb
fcoml
jmp
rolb
mov
add
adc
mov
aaa
fs
mov
in
js
mov
mov
push
sub
pop
decb
add
add
mov
mov
and
mov
jnp
sarl
stos
or
mov
orl
inc
cs
xor
aad
lods
aad
mov
cmp
add
and
mov
ficoml
mov
mov
push
ret
ret
daa
enter
popa
xchg
int
aaa
xor
inc
add
mov
add
dec
or
add
addl
sbb
add
mov
add
mov
mov
cmp
xchg
add
inc
and
mov
and
mov
mov
rolb
in
cmp
in
jge
push
addb
loop
mov
loop
mov
mov
and
mov
mov
xor
jo
mov
add
mov
subl
mov
add
cmpsl
je
in
test
test
mov
mov
and
iret
jne
lcall
mov
pop
mov
mov
rolb
mov
add
jo
mov
arpl
add
add
mov
mov
in
add
adc
pop
enter
mov
fs
mov
loopne
mov
xchg
lea
add
mov
addb
test
sub
xchg
movsb
sbb
mov
mov
mov
mov
fwait
ljmp
inc
add
pop
test
cmp
add
mov
mov
mov
inc
jle
add
addb
shr
mov
enter
mov
dec
daa
inc
adc
add
adc
ret
add
gs
inc
adc
mov
add
mov
cmp
mov
add
push
adc
int3
mov
add
out
enter
and
lcall
add
add
lds
mov
push
pop
sub
add
add
inc
push
xchg
cltd
lret
movb
out
mov
in
lea
stos
and
xchg
add
mov
add
fsubrl
das
jg
and
mov
inc
lcall
jg
add
test
pop
sbb
add
dec
cmc
ds
mov
mov
mov
mov
add
mov
cmp
cmp
inc
inc
mov
cmp
dec
das
mov
jle
xchg
sub
pop
arpl
js
pop
add
dec
addr16
mov
les
ljmp
cwtl
mov
pop
mov
fadd
scas
fsin
pop
mov
cmp
ja
cli
xchg
jnp
add
xchg
pushf
dec
pop
int3
add
icebp
jmp
aad
add
dec
call
test
stos
popa
nop
add
aad
cs
iret
fdivs
inc
std
pop
jno
cmp
add
stc
inc
add
ss
lahf
out
xchg
sub
push
adc
mov
bound
mov
xchg
je
int3
mov
roll
jbe
pop
xchg
add
psrad
mov
add
adc
mov
fnstenv
das
adc
mov
jns
cmpsl
add
pop
sub
push
cmpsl
mov
mov
and
add
call
dec
sub
jp
push
inc
and
pop
jge
jp
add
ds
jno
jne
test
js
lds
cwtl
and
mov
std
cmpsl
jae
popa
sbb
movsl
jne
xor
add
fs
int3
or
rolb
mov
add
jecxz
int3
sub
outsl
push
js
and
lods
stos
addr16
cli
ja
xor
mov
and
mov
mov
mov
test
dec
mov
inc
sbb
enter
push
and
mov
and
inc
jne
xor
or
mov
sub
mov
popf
xchg
add
scas
into
inc
xlat
sahf
pushf
cld
inc
add
and
addl
jb
mov
jbe
jae
mov
mov
add
addb
jno
pop
or
adc
sub
mov
mov
mov
enter
lock
mov
les
cmpsb
jecxz
pop
xor
sbb
stc
outsl
inc
cmpsl
xchg
mov
sbb
into
lods
add
enter
add
jbe
sub
add
int3
std
push
add
mov
fists
add
or
mov
or
sarl
pop
sti
and
mov
mov
ss
addb
iret
mov
icebp
jae
sbb
rolb
mov
jae
cmp
sbb
add
inc
fisubl
aaa
push
in
fimuls
aaa
jbe
rolb
mov
jns
mov
mov
mov
ja
es
xor
in
fdiv
xchg
fadd
jbe
add
mov
push
rolb
ret
sub
sub
nop
add
mov
loop
mov
sbb
cmp
xlat
or
stc
lods
ds
xchg
add
mov
mov
scas
mov
cs
pop
push
addr16
cmp
sub
push
add
mov
push
add
push
add
lret
add
repnz
add
sub
insb
jbe
pop
imul
iret
jmp
imul
das
fcoms
xchg
inc
add
in
and
mov
mov
outsb
ljmp
mov
sub
sbb
and
push
in
rcll
adc
bound
mov
xchg
in
jne
add
pop
movsb
jge
pop
mov
mov
es
cmp
rolb
mov
addb
inc
sbb
add
or
adc
and
mov
jbe
and
sbb
mov
rolb
mov
mov
in
lahf
nop
add
add
mov
adc
clc
repz
pop
lret
fcoml
add
mov
lods
jecxz
sbb
jbe
sub
push
add
daa
dec
out
pop
pop
jmp
add
and
mov
sub
add
xor
mov
jns
add
pushf
stc
mov
sub
lcall
pop
and
and
out
jno
cmp
or
fnsave
out
or
push
push
mov
stos
repnz
sub
mov
mov
add
mov
pusha
add
imul
add
jecxz
push
pop
cmp
and
mov
mov
add
mov
push
xor
push
add
ja
inc
jne
sahf
cmc
push
mov
imul
push
add
or
mov
jae
jmp
outsl
push
dec
cli
loopne
mov
aam
lds
add
xor
inc
dec
movsb
dec
sbb
add
mov
dec
jmp
mov
mov
jae
mov
add
dec
filds
mov
mov
lock
add
add
mov
sbb
xor
aas
mov
add
mov
fstps
cmp
mov
es
add
adc
mov
sub
or
cltd
xor
add
sbb
sbb
adc
mov
and
mov
cmp
rol
cmp
xchg
shrl
lret
ficoms
lcall
orl
cltd
adc
test
add
faddl
cmp
add
push
in
lds
jns
aas
pop
fs
fwait
daa
xor
mov
or
repz
ja
inc
jle
add
repnz
pop
orl
push
pushf
or
add
cmp
sub
add
add
push
sub
inc
pop
fcmovbe
ja
inc
stos
jp
idivl
addr16
add
test
mov
leave
inc
add
mov
cmp
add
push
out
mov
aas
pop
mov
add
add
aas
cs
mov
mov
mov
sub
shl
add
lods
xor
mov
mov
add
mov
mov
mov
push
mov
into
push
pop
mov
out
add
lods
sbb
mov
mov
lahf
mov
popa
jns
aas
enter
sti
sub
sbb
mul
add
add
sbb
enter
xchg
add
fistps
mov
xor
dec
cs
fsubp
lock
lret
cmp
push
cmp
lret
mov
push
add
jecxz
inc
add
add
sub
add
jo
mov
pop
pop
mov
lea
mov
cltd
dec
cli
inc
aad
out
add
add
rolb
mov
add
dec
rolb
mov
add
mov
jle
or
dec
bound
mov
fisttpl
add
mov
stc
cmp
jbe
iret
xchg
pop
in
cwtl
push
lds
mov
mov
jle
mov
scas
push
fisttpll
es
add
mov
pushf
xor
mov
add
pop
loope
nop
add
xor
inc
sub
out
mov
mov
sbb
mov
mov
xor
arpl
add
jecxz
xor
sub
incl
add
mov
mov
mov
push
push
sbb
add
add
add
add
dec
aam
int
push
fldenv
mov
add
inc
add
popl
add
xor
mov
divl
sub
dec
mov
xchg
sub
mov
adc
mov
add
pop
or
pop
movsl
jnp
test
xchg
das
addb
jle
sahf
adc
mov
add
jbe
or
lcall
xchg
sbb
dec
int3
je
mov
das
xlat
fldcw
add
xchg
nop
add
mov
add
mov
cmpsb
icebp
inc
push
pmulhw
loopne
mov
idivl
and
add
jge
insl
shl
sbbl
testl
mov
mov
cltd
in
cld
ret
arpl
push
add
add
xchg
movsb
mov
int3
mov
inc
int3
add
add
mov
addb
add
xchg
add
xor
ret
mov
lcall
insl
clc
jo
mov
mov
mov
mov
add
mov
jae
xor
fscale
inc
aam
push
ss
fsubrs
push
adc
adc
out
rolb
mov
add
out
jb
mov
and
mov
outsb
sbb
out
pop
ss
hlt
mov
add
mov
pop
sub
xchg
rolb
sub
fs
cli
mov
mov
or
jp
fldcw
add
add
cmp
aas
int3
gs
add
int3
mov
lds
inc
dec
or
ss
push
add
inc
sub
add
imul
inc
add
mov
mov
mov
push
xchg
add
aas
jg
inc
popf
cmp
int
adc
mov
rcrl
pop
fstps
jb
mov
pop
leave
cwtl
push
mov
adc
mov
add
lcall
push
add
cmp
mov
add
fsubrp
in
cmc
es
mov
xchg
fsubs
and
lret
mov
add
imul
mov
mov
ja
add
mov
mov
and
mov
mov
mov
jns
add
int
mov
lea
mov
add
xor
mov
inc
aam
inc
dec
push
mov
mov
xchg
test
jle
push
sbb
and
inc
jae
mov
into
aas
dec
outsl
pop
mov
push
out
add
mov
test
sub
cs
stc
stos
inc
xchg
stos
je
add
cmp
sub
or
add
mov
add
jmp
jecxz
in
inc
rolb
mov
dec
sbb
lea
jae
jmp
pop
or
fstpl
rolb
mov
rolb
inc
add
push
daa
pop
aam
xlat
xchg
mov
pop
push
mov
pop
dec
add
lahf
pop
cmp
loope
dec
pop
inc
sbb
xchg
ds
pop
xchg
pushf
addb
lcall
add
add
adc
mov
mov
add
mov
dec
sbb
rcrl
mov
cmpsl
out
outsb
fidivs
xchg
sub
addr16
out
xchg
mov
mov
push
add
mov
mov
stc
sbb
jl
adc
and
sbb
stc
xlat
inc
stc
dec
jg
loop
mov
jne
rolb
mov
mov
add
mov
nop
add
jp
dec
jge
mov
daa
cmp
aaa
shll
dec
push
or
addb
inc
and
push
pop
jae
lcall
test
sub
pop
or
sub
add
lret
lock
sbb
out
icebp
pop
aad
aad
cmpsl
into
mov
icebp
nop
add
test
lods
dec
dec
jbe
repz
sbb
mov
test
sub
push
or
sub
stos
push
mov
jg
add
sub
divb
aam
mov
shl
xchg
add
test
jmp
pop
adc
xchg
mov
mov
test
jecxz
fstl
mov
add
pop
loop
mov
dec
rolb
rcll
add
add
xchg
imul
cmc
cld
mov
cmpsb
enter
add
push
sub
mov
push
mov
je
in
ret
and
mov
roll
into
lcall
addl
push
inc
roll
daa
mov
leave
pusha
add
insl
fimull
and
or
hlt
clc
int
into
mov
push
adc
mov
jmp
mov
mov
add
mov
sbb
pop
fisttpl
xchg
mov
cmp
adc
int3
mov
int
mov
sub
pop
pop
cmp
dec
jne
jmp
loope
mov
les
arpl
and
mov
xchg
arpl
out
rcll
sub
inc
out
and
mov
mov
add
push
mov
outsl
scas
cmp
inc
xchg
add
add
mov
aam
pop
lcall
cltd
jmp
iret
sub
xchg
mov
add
add
xchg
pop
stos
das
out
sbb
mov
xor
mov
add
push
add
mov
pop
sbb
add
enter
add
add
sub
cmp
xlat
aam
or
sbb
jecxz
test
movsb
pop
lock
xchg
jmp
cmpl
mov
or
rolb
mov
pop
jl
add
xor
repnz
andl
mov
mov
shll
xchg
or
pop
jnp
add
rolb
inc
int
cwtl
and
push
pop
dec
fsts
ret
loop
mov
pop
pop
sub
add
das
into
push
add
mov
mov
lds
push
mov
inc
add
mov
nop
add
rolb
mov
sub
pop
add
lea
shll
mov
loope
sti
add
mov
inc
mov
addb
mov
mov
repnz
mov
jg
lods
push
mov
xorl
int3
fcmovnu
pop
push
pop
rolb
mov
test
mov
xchg
adc
push
cmp
sub
mov
in
mull
adc
insl
cmp
inc
xchg
in
adcl
add
mov
popa
pop
mov
pop
xchg
in
aad
add
sbb
pop
mov
mov
or
add
in
cmp
mov
repnz
sbb
iret
bound
mov
mov
jge
ds
mov
mov
or
mov
lret
ds
loope
adc
add
mov
mov
cmpsb
je
sub
mov
mov
jb
mov
jmp
ds
cli
pop
mov
dec
push
add
and
mov
aam
add
mov
sbb
mov
mov
rolb
mov
adc
pcmpeqb
mov
loopne
mov
add
das
inc
rolb
mov
and
jbe
js
ja
add
xchg
ret
cmp
add
add
sub
iret
outsb
jl,pn
mov
mov
add
push
add
jmp
mov
das
sbb
das
jg
sbb
movsb
out
pop
scas
dec
addr16
clc
fxam
cmp
lahf
jmp
adc
sbb
repz
outsl
cld
adcl
dec
xchg
push
and
mov
mov
push
or
and
pop
xchg
loope
fcmovne
rcl
fcomip
sub
cmp
aad
add
js
cltd
inc
add
lea
addb
lea
dec
dec
jno
xchg
add
xor
xchg
add
jne
fsubp
icebp
jae
dec
out
add
lds
movsb
adc
sbb
xchg
pop
sbb
cmp
jne
int
pop
stos
xor
inc
mov
push
orl
movsl
mov
mov
cmp
add
xchg
jl
out
imulb
push
mov
jno
add
mov
add
fildll
xorl
or
cli
jmp
loop
mov
inc
fs
xor
mov
add
add
mov
dec
aad
popf
testl
es
mov
push
cmpsb
dec
push
add
cmp
jg
mov
pop
xor
push
mov
in
jbe
out
dec
cld
in
inc
scas
enter
mov
mov
pop
aaa
push
add
xor
mov
sub
insl
xchg
adc
mov
dec
pop
push
lret
int
mov
add
and
mov
repz
and
mov
loopne
mov
push
sub
adc
jno
mov
dec
stos
negb
cmpsl
in
xor
add
ficomps
dec
mov
movsl
inc
fmull
mov
mov
dec
ss
mov
inc
inc
ljmp
mov
and
mov
push
add
push
mov
pop
inc
push
insl
dec
sub
mov
pop
mov
cld
push
mov
push
mov
jecxz
int
daa
mov
jnp
aam
cmp
neg
addr16
sbb
leave
sti
push
add
mov
cmpsl
mov
mov
rolb
sub
loopne
mov
push
or
shll
cmp
jne
mov
add
add
mov
inc
xor
mov
adcl
jmp
mov
mov
sahf
inc
xor
mov
in
iret
addb
xor
mov
rcrl
xchg
hlt
add
cmc
lahf
push
fimuls
jl
cwtl
jno
pop
pop
in
sub
add
inc
add
xchg
xor
mov
add
mov
in
dec
aaa
pushf
out
pushf
pushf
jl
xchg
xor
cmp
mov
scas
mov
cmp
in
pushf
pusha
add
push
dec
inc
cmp
cmc
xor
add
inc
test
ret
adc
mov
ret
jmp
push
xor
mov
stos
lcall
push
mov
inc
inc
inc
push
dec
in
aam
loop
mov
popf
hlt
call
add
imull
add
div
push
add
popf
ret
in
and
lcall
sbb
xchg
jns
mov
mov
icebp
pushf
fxch
jno
jb
mov
out
inc
sub
add
dec
loop
mov
add
push
aaa
inc
push
sbb
rolb
cmp
push
outsb
push
sbb
add
or
inc
insb
mov
dec
divb
jbe
and
push
xor
jae
add
and
mov
add
mov
mov
sbb
add
cltd
dec
add
mov
add
mov
fstpl
call
xchg
cmpsb
mov
data16
jns
imul
cs
scas
mov
push
lods
fadds
rolb
into
scas
xorl
add
jne
sub
pop
jle
mov
lods
mov
mov
fnstenv
into
and
mov
mov
mov
mov
xchg
add
add
xor
xchg
mov
pusha
add
pop
enter
add
adc
mov
insl
xchg
pop
push
add
cmp
out
int3
insb
daa
or
inc
adc
add
xchg
mov
imul
mov
or
clc
xor
mov
and
or
and
jns
sbb
gs
nop
outsb
mov
fwait
sahf
stos
sub
add
fistpll
mov
add
les
adc
insl
cmp
cmp
ret
std
jno
add
add
sub
aam
mov
xchg
add
add
pop
lods
push
stos
addb
lock
mov
mov
push
iret
iret
mov
les
jae
push
out
jle
add
mov
xchg
xor
stc
cmpsb
push
in
jg
ljmp
aad
xchg
inc
add
lods
inc
add
lea
jg
into
jae
adc
mov
adc
mov
add
in
cli
mov
add
fisubl
jo
mov
mov
lea
cld
pop
lret
into
lea
mov
xchg
xor
mov
repz
or
fiadds
push
test
add
add
add
mov
xchg
outsl
push
mov
add
mov
scas
into
hlt
sbb
and
pushf
push
sbb
or
jbe
sbb
lea
mov
mov
cmp
mov
or
add
bound
mov
xchg
sbb
add
jl
add
mov
test
mov
mov
int
cld
mov
stc
mov
sub
add
add
or
loopne
mov
cmp
pop
cli
testb
add
ljmp
or
add
pop
adc
mov
mov
fwait
push
adc
aaa
lds
in
push
add
aas
push
add
pop
dec
inc
add
sub
mov
dec
xchg
cmc
pop
repz
mov
lock
rolb
mov
loopne
mov
mov
es
add
mov
repnz
add
lret
mov
jo
mov
sub
lds
int3
mov
dec
add
mov
in
dec
mov
repnz
xchg
lret
loop
mov
xor
add
ret
and
push
inc
push
push
add
add
out
jle
jnp
insb
mov
and
mov
int3
js
in
adc
mov
repnz
sbb
mov
nop
add
daa
addb
adc
sbb
mov
or
add
lods
cmp
xor
sbb
xchg
dec
pop
push
xor
cmp
sahf
mov
mov
cs
mov
push
stos
push
add
or
adc
mov
push
add
sub
bound
mov
call
jecxz
xchg
stos
or
cmp
mov
cltd
mov
push
add
push
rolb
js
and
mov
mov
and
mov
dec
inc
add
add
add
call
dec
xchg
add
fidivs
fiadds
add
mov
dec
stc
test
mov
gs
xchg
cmp
mov
push
pop
jecxz
push
ja
xchg
add
push
je
push
out
mov
mov
dec
push
je
sbb
test
add
mov
test
arpl
in
mov
add
andl
mov
mov
add
mov
xchg
aas
jb
mov
sub
call
popa
mov
bound
mov
inc
add
push
push
dec
xchg
xor
lret
pop
jge
add
mov
lret
cld
or
imul
movsl
neg
sbb
mov
movsb
in
cmp
inc
pop
cmpsl
incl
popa
mov
push
das
leave
push
xlat
bound
mov
hlt
cwtl
test
out
mov
stos
inc
enter
mov
repnz
icebp
leave
mov
jae
mov
movsb
mov
lret
add
mov
inc
or
dec
adc
stos
movsb
xor
and
mov
lea
jo
mov
adc
sbb
adcl
mov
mov
mov
adc
mov
sti
mov
nop
add
jl
cmp
jp
and
jns
pop
add
jns
jmp
js
jo
mov
pop
jecxz
movsb
ret
sti
mov
mov
loop
mov
adc
push
clc
bound
mov
mov
push
mov
leave
and
addb
rcrl
lahf
pushf
push
mov
xor
push
fiadds
adc
mov
rolb
mov
mov
test
fsts
imul
mov
add
ja
add
mov
lret
ret
fdivr
xchg
lock
add
cmp
mov
scas
xor
mov
cmpsl
mov
test
mov
loopne
mov
mov
add
dec
add
mov
push
pcmpgtb
ficomps
xchg
cltd
jecxz
fldt
sub
call
xor
sub
jno
mov
or
sub
pop
negb
add
mov
dec
add
push
cmp
cmp
inc
mul
add
shll
mov
mov
test
add
cld
sbb
inc
add
sub
roll
and
mov
inc
jecxz
out
outsb
es
add
mov
sbb
inc
add
mov
mov
pop
jns
hlt
xchg
ja
add
cmp
pushf
xchg
loope
add
cmp
std
hlt
mov
mov
sub
jle
addb
pop
addb
test
add
mov
pand
cmp
add
add
adc
mov
incb
add
mov
dec
out
xlat
mov
int
test
add
add
mov
push
clc
cmc
stos
rorl
mov
int3
arpl
pop
mov
mov
or
cwtl
orl
add
mov
add
add
mov
add
push
int
add
jne
push
sbb
add
mov
xor
lock
sub
push
cmp
out
add
add
fdivl
movsb
xchg
into
cmp
mov
inc
arpl
add
outsl
ja
dec
loopne,pt
mov
or
mov
cmc
addl
mov
dec
nop
add
mov
mov
rcrl
pop
iret
test
in
xchg
push
scas
iret
test
dec
dec
fadds
push
pop
inc
into
pop
and
mov
add
add
xchg
loopne
mov
pusha
add
xchg
add
and
add
lock
jno
roll
ds
cmp
in
xor
mov
adcl
mov
add
rolb
mov
cmp
cmc
cld
and
mov
adc
add
mov
jno
mov
or
inc
pop
jmp
mov
mov
mov
add
cmp
add
jmp
push
out
push
ja
mov
aam
bound
mov
outsb
xor
insl
test
xor
mov
repz
mov
clc
jns
aaa
lahf
push
sbb
mov
pop
lods
xchg
lds
in
add
cmpsb
and
sbb
add
xchg
jecxz
insl
inc
mov
inc
ret
popf
mov
mov
int3
mov
add
aaa
jecxz
insb
lods
mov
xchg
add
lods
push
dec
xchg
add
xchg
add
ss
add
shll
cmpsl
out
add
push
movsb
pop
inc
lea
add
mov
mov
jne
mov
mov
ss
dec
fs
sbb
repz
add
push
mov
popa
int
andl
mov
mov
xchg
sub
addb
adc
addb
mov
add
push
lcall
mov
adc
lcall
add
push
add
in
add
add
std
dec
or
mov
mov
rorl
popf
out
in
dec
cmp
add
push
lret
ficoms
mov
add
stos
and
mov
pop
outsb
pop
ss
cli
js
or
xchg
repz
scas
shll
jne
adcl
mov
sbb
test
mov
jne
cltd
pop
test
fwait
push
clc
pusha
add
mov
cmp
stos
nop
add
inc
add
fisubrs
mov
fwait
pushf
test
inc
add
mov
mov
nop
add
jge
add
mov
add
push
add
add
add
jl
pop
sbb
mov
mov
jnp
dec
loop
mov
mov
fdivl
add
mov
insl
sbb
mov
or
test
ljmp
cwtl
notl
mov
sub
mov
out
pop
pop
mov
aaa
pop
sub
mov
add
xor
sbb
add
out
mov
addb
gs
jmp
std
out
rolb
mov
lret
fistl
mov
cltd
add
pop
pop
fsubrs
mov
xor
jo,pn
mov
in
ss
int3
fsubp
cli
dec
scas
loope
inc
add
das
sub
add
mov
bound
mov
aad
sub
jl
push
test
dec
into
out
cmpsl
mov
cltd
das
xchg
xchg
xlat
js
icebp
fcomps
lods
pop
mov
xchg
add
pop
rolb
aad
lods
sar
push
jnp
jmp
in
rorl
enter
popf
sbb
push
add
cmp
notb
sbb
sub
add
mov
mov
xor
mov
popf
jp
push
ds
test
in
xlat
and
mov
or
push
cmpsl
pop
lock
add
add
cs
mov
adc
mov
testl
mov
ds
test
dec
pop
pop
cmp
add
mov
dec
int3
mov
xor
mov
add
mov
rolb
mov
jl
xor
test
rolb
mov
dec
out
addr16
fs
aas
jl
fdiv
push
sub
pop
fs
imul
mov
add
push
mov
jnp
push
add
sub
loope
mov
js
loop
mov
mov
cli
xor
mov
mov
lock
mov
mov
jnp
sub
mov
or
add
jbe
xchg
inc
xlat
cmp
int
fidivs
pop
xor
add
pop
xchg
add
push
js
xlat
inc
jb
mov
add
mov
dec
ja
xor
cmp
add
addb
mov
lds
fldcw
aad
inc
add
mov
push
add
jno
jp
dec
and
mov
mov
cmp
xchg
add
push
add
mov
and
mov
cltd
aad
lret
loope
inc
aaa
pop
xlat
loopne
mov
or
push
data16
cmc
add
jl
lret
mov
jno
scas
mov
dec
jle
outsl
add
addb
inc
ds
add
jnp
test
cld
mov
jnp
cmp
inc
lret
les
cli
mov
inc
add
pop
call
in
add
loope
add
push
mov
sahf
push
inc
jbe
int
fsub
xchg
xchg
inc
push
add
add
sbb
add
cmp
xor
jne
std
cmc
mov
cmp
xchg
xchg
imul
mov
and
mov
fldt
mov
push
mov
test
inc
sbb
cmp
mov
cwtl
dec
rolb
mov
aaa
fidivrs
jle
mov
movsb
mov
mov
mov
add
ret
jns
ja
lret
jge
inc
rolb
mov
xchg
lret
adc
pop
adc
mov
adc
mov
adcl
aaa
jp
shl
push
and
mov
mov
push
or
nop
add
cmc
inc
aaa
outsl
ja
sbb
dec
stos
int
into
or
or
mov
mov
filds
jne
push
sub
mov
add
out
lahf
bound
mov
jb
mov
mov
add
sbb
pop
xchg
sub
mov
addb
lods
data16
sbb
sub
sbb
mov
inc
xor
cltd
push
js
adc
mov
jmp
fisubs
add
jmp
addb
sti
sub
sbb
push
jl
cmc
cmp
xor
cmpsl
out
mov
or
lahf
mov
dec
icebp
enter
inc
es
bound
mov
pop
push
out
jns
adc
cmp
test
jle
xchg
push
adc
sbb
loopne
mov
lods
fbstp
mov
mov
out
xchg
ret
xchg
aas
sub
pushf
ja
inc
hlt
clc
push
cmp
lahf
cmp
jg
add
in
and
daa
mov
fdivrl
mov
add
sbb
inc
inc
std
leave
add
add
mov
cld
cmc
sbb
ds
or
fldcw
stos
rorl
inc
mov
mov
add
sub
mov
mov
pop
repnz
adc
sub
imul
dec
lcall
xor
ret
sbb
addb
cmp
test
and
or
inc
sahf
dec
mov
and
adc
jecxz
in
add
sbb
ficomps
jl
sbb
out
xchg
push
add
and
int3
pusha
add
add
into
divl
add
testb
mov
push
push
jo
mov
mov
cwtl
fsubrs
std
testl
rolb
mov
mov
add
cmp
loopne
mov
scas
mov
mov
ss
shl
bound
mov
jmp
pop
push
je
add
sti
or
addr16
ficoml
inc
add
mov
add
cmp
pop
aaa
cwtl
dec
stos
scas
jnp
xchg
add
xchg
push
imul
add
data16
scas
or
mov
jge
push
add
cmp
jp
xor
mov
int
rolb
mov
pop
nop
add
orl
add
push
jmp
mov
cli
out
add
mov
mov
fidivl
push
in
dec
mov
add
fstpt
movswl
and
mov
adc
sub
add
mov
leave
addl
mov
inc
leave
and
hlt
adc
loop
mov
mov
in
jmp
add
jb
mov
shrl
out
cmc
rolb
mov
dec
dec
mov
add
mov
add
sbb
add
mov
aas
or
sbb
bound
mov
enter
sub
inc
hlt
mov
call
addb
sti
or
mov
mov
stc
xchg
inc
mov
aas
fnstcw
add
add
mov
jmp
lods
dec
enter
pop
jne
fnstenv
mov
sbb
xchg
stc
or
sbb
dec
test
lret
xor
mov
hlt
mov
cli
jecxz
cmp
xchg
jl
add
nop
add
mov
pop
xchg
add
dec
sbb
aaa
bound
mov
jae
stos
xchg
dec
or
add
dec
push
xor
mov
add
sbb
push
mov
mov
mov
mov
add
pusha
add
int3
adc
mov
stc
mov
out
inc
mov
mov
pop
push
inc
add
push
push
add
pop
inc
movl
mov
je
movsl
andl
add
fs
insl
mov
rolb
mov
das
lcall
stc
jl
addb
psrad
mov
push
dec
inc
mov
xchg
int
or
ja
jge
imul
mov
push
rolb
mov
and
add
fisttpl
iret
movsl
adc
mov
movsl
add
ret
out
es
stos
sahf
cwtl
test
aas
sbb
lea
or
push
jecxz,pt
mov
sbb
sub
mov
adc
mov
fsub
and
inc
mov
pushf
pop
jbe
cmpsb
imul
int3
inc
stos
dec
cmp
adc
add
jns
jbe
xor
mov
out
repnz
mov
mov
fs
nop
add
jnp
cs
enter
imul
outsl
andl
and
mov
xor
rolb
mov
mov
mov
mov
icebp
popa
outsl
mov
push
add
mov
mov
inc
cmp
jge
and
mov
jno
and
mov
sub
leave
inc
fidivrl
in
xor
cs
mov
add
pop
mov
jg
jns
and
jge
mov
xchg
roll
addb
lea
add
pop
jne
inc
mov
mov
icebp
divb
movsb
jae
pushf
inc
inc
add
xchg
aaa
xchg
sti
out
mov
mov
add
mov
ret
pushf
fldcw
mov
mov
lahf
dec
mov
fimuls
xchg
cmp
ss
int3
out
repz
add
add
mov
add
mov
fcoms
ds
jne
outsb
lahf
insb
mov
cmp
mov
outsl
and
inc
add
mov
out
push
sub
add
scas
insl
imul
fstpt
sbb
scas
mov
cltd
out
es
imul
mov
adc
mov
xchg
jmp
mov
mov
outsl
push
mov
add
clc
in
add
popf
adc
xor
add
mov
icebp
movlps
mov
jo
mov
addr16
xchg
dec
pop
fisubs
xor
aas
pushf
mov
mov
xchg
cmc
movsl
push
mov
hlt
pop
pop
lock
hlt
jnp
adc
add
sbb
push
addb
xchg
rolb
negl
loope
loope
sbb
and
mov
push
aas
cmc
enter
mov
jle
sar
mov
lods
imul
das
testl
add
jg
xchg
mov
push
push
pop
imul
xchg
add
clc
jns
add
mov
mov
daa
in
push
jb
mov
and
mov
mov
mov
shrl
lea
insb
in
mov
mov
cmp
lods
jno
xchg
aad
rolb
mov
mov
cmp
mov
mov
sub
dec
and
mov
jns
lods
movsl
stc
scas
sarl
rolb
add
mov
inc
in
aad
jbe
pop
mov
ret
insl
push
jl
mov
mov
stc
loope
mov
adc
mov
negl
jecxz
movsb
xor
and
add
mov
pop
push
add
mov
jbe
xor
mov
push
lock
mov
mov
enter
es
leave
int
mov
push
subl
add
and
jmp
hlt
inc
add
pop
and
mov
mov
jle
xchg
xor
fldcw
lret
mov
dec
pop
fdivs
mov
xchg
cmp
add
in
cmpsl
lea
fs
add
adc
mov
lds
sti
cmp
add
popa
scas
jnp
add
xor
sbb
loop
mov
pop
dec
out
scas
mov
adc
mov
lods
cmp
add
add
mov
push
xor
addb
mov
pop
xor
mov
xor
inc
mov
stc
test
enter
mov
es
addb
push
arpl
jb
mov
dec
add
mov
mov
aaa
aad
imul
in
jae
int3
and
add
sub
push
cmp
cmp
imul
pushf
pop
ja
out
cmp
add
ljmp
scas
pop
pushw
add
mov
aas
pop
push
xor
stc
arpl
aad
les
mov
clc
add
push
ss
int
pop
addl
hlt
xor
xchg
add
pop
jnp
in
adc
ret
mov
mov
rcll
add
inc
add
pusha
add
lds
mov
jge
dec
mov
iret
sub
add
or
add
add
push
adc
lock
pop
push
xchg
mov
mov
push
mov
add
rolb
mov
mov
cmpsl
adc
add
xchg
mov
mov
enter
or
mov
dec
pop
ds
loopne
mov
out
jecxz
movl
pop
int3
and
mov
adc
mov
mov
ficompl
mov
add
leave
sub
sbb
addb
push
add
push
push
add
pop
xchg
rolb
mov
pop
pop
push
jae
and
pop
ja
xor
sbb
jnp
add
or
in
test
inc
add
pop
lock
add
aad
push
mov
shrl
sbb
add
inc
add
add
mov
push
add
add
add
pusha
add
out
in
inc
sub
add
icebp
dec
xchg
dec
mov
out
pop
cmovg
mov
jecxz
add
xor
add
mov
push
sub
mov
inc
jo
mov
fadds
mov
ret
mov
add
mov
and
mov
aaa
cwtl
cmp
jg
mov
mov
in
arpl
adc
mov
mov
add
icebp
movsb
fisubrl
push
xchg
lret
popa
xor
mov
jle
add
adc
stos
mov
sbb
mov
jmp
sbb
pop
stos
push
hlt
xor
adc
mov
insb
ds
mov
push
fbstp
lret
out
out
popf
mov
pop
mov
add
mov
push
adc
clc
outsl
gs
add
cld
movsl
cmpsl
and
pop
ss
mov
fmuls
icebp
insl
loopne
mov
pop
movsl
sbb
push
in
enter
icebp
add
mov
add
jae
add
mov
movsb
pop
and
mov
leave
cltd
leave
push
inc
sahf
jns
mov
in
push
add
push
cmpsl
xor
sti
lds
subl
inc
cmp
addl
int
add
aad
cld
mov
data16
jmp
mov
xchg
pop
bound
mov
add
nop
add
jmp
add
jno
xor
mov
mov
loopne
mov
push
add
int
cmp
jg
out
xor
mov
mov
mov
add
add
add
das
test
mov
mov
and
add
test
call
mov
dec
cmp
mov
mov
push
mov
mov
add
sbb
dec
call
repnz
test
mov
mov
in
pop
mov
jmp
pop
in
out
pop
hlt
nop
add
repnz
cmpsl
rcll
sbb
add
mov
and
lods
jg
dec
cmp
lock
add
lea
xor
mov
imul
stc
aas
mov
mov
jle
jge
addb
jnp
add
ja
imul
test
rolb
mov
add
je
scas
pop
jge
es
in
push
add
mov
inc
fldt
outsl
mov
stos
mov
repnz
scas
stos
add
shl
add
mov
inc
add
ss
test
icebp
or
add
lret
cld
inc
fadds
mov
call
sub
addb
xor
add
decl
dec
mov
pop
repz
mov
test
in
loope
jle
lods
xchg
cli
or
imull
les
nop
add
xor
rolb
mov
or
mov
add
mov
pop
sbb
pop
push
add
mov
inc
je
clc
dec
pop
jae
pop
stos
sub
push
cmp
mov
add
pop
push
repnz
mov
jg
add
mov
pop
pop
fdivl
add
pop
or
sbb
ja
xorl
mov
ss
add
mov
jne
es
pop
inc
xchg
addl
fstpl
outsl
addb
ds
daa
pop
outsb
repnz
out
cmpl
sub
mov
aad
stos
and
mov
xor
or
pop
push
xlat
cltd
xchg
movsb
rolb
push
je,pt
pop
pushf
jb
mov
int
stc
test
mov
nop
add
addb
or
aaa
rolb
idiv
push
mov
ret
test
insb
or
jecxz
and
adc
or
xor
push
cmpl
sub
inc
imul
idiv
cmp
rorl
jge
test
fcoms
mov
imull
jp
adc
mov
es
repz
add
mov
xchg
test
sub
push
add
mov
jno
pop
xor
mov
add
mov
xor
xchg
punpckldq
mov
add
adc
dec
mov
std
mov
inc
loope
ss
repnz
fnstsw
scas
sbb
pop
aaa
testb
mov
movsl
lods
pusha
add
out
pushf
sahf
adc
stos
pop
push
sub
in
scas
addb
or
repz
or
mov
mov
popf
scas
xor
mov
test
lret
jecxz
add
fcmove
sarl
add
mov
data16
outsb
push
add
mov
mov
imul
or
or
mov
xor
mov
jbe
cmp
stos
lds
jge
test
dec
repnz
jle
jge
outsl
pop
sub
mov
mov
repnz
add
add
testl
rolb
mov
pop
das
or
add
dec
aas
ficoml
mov
mov
mov
cmc
mov
sub
push
pop
loope
add
mov
dec
sub
push
das
std
ljmp
sbb
scas
xchg
arpl
std
test
mov
jbe
mov
inc
movsb
out
rolb
mov
adc
mov
jne
enter
je
xor
push
xor
pop
aas
xchg
leave
add
mov
into
pop
push
add
es
lcall
cmp
jne
add
fisubs
add
pop
jns
je
outsb
push
push
stos
adc
mov
mov
mov
push
sti
cmpsl
aad
mov
mov
add
aad
push
push
jne
adc
mov
add
sbb
add
jb
mov
xor
mov
add
and
mov
add
ss
into
pop
sbb
dec
test
mov
js
sbb
jmp
dec
subl
dec
mov
xor
add
insl
lahf
mov
sbb
fwait
hlt
lcall
mov
dec
scas
pusha
add
iret
push
stos
fstpl
pop
or
dec
loopne
mov
sub
enter
in
xor
mov
mov
insb
fdivrs
dec
jecxz
mov
cmp
mov
dec
loop
mov
inc
mov
mov
mov
xchg
xchg
mov
push
xor
mov
addr16
jecxz
add
add
cld
adc
push
add
sti
jg
and
add
xchg
sbb
or
jl
add
clc
movsl
or
aas
mov
jge
fisubrl
mov
or
add
adc
mov
das
pop
test
pushf
addb
das
arpl
jae
mov
push
adc
jbe
xor
incb
mov
sub
push
inc
aaa
fisttpll
ja
out
dec
sbb
jae
lcall
cli
push
push
int3
addb
jbe
xchg
iret
push
add
jl
add
addr16
add
notb
push
add
mov
xchg
add
jno
repz
lods
sub
mov
jns
dec
jl
cmp
pop
repz
loope
dec
and
nop
add
pop
daa
addb
repz
jbe
jl
pop
cmp
mov
mov
inc
add
popa
jg
mov
add
sbb
out
movsl
pop
mov
and
mov
add
mov
movsl
stc
inc
gs
sbb
inc
pop
pop
sub
xchg
pop
jo
mov
push
adc
mov
lea
xor
int3
bound
mov
xor
mov
xchg
xchg
mov
mov
lea
add
repnz
or
lahf
jb
mov
dec
or
addb
cmp
add
scas
inc
cmp
add
sbb
hlt
aas
mov
or
cwtl
jbe
pushf
jmp
rolb
mov
push
add
cmpsb
pop
popa
loope
mov
jl
into
sub
jne
add
sbb
mov
vmovdqu
lods
pop
sbb
mov
cli
sub
cmp
aaa
in
add
inc
leave
and
mov
out
in
push
mov
movsb
add
mov
pop
adc
addb
addb
xchg
mov
aaa
decl
push
push
into
aaa
lds
cwtl
jmp
lea
call
push
les
add
mov
lea
imul
nop
add
loope
add
sahf
in
in
rcl
mov
rolb
mov
cmp
xchg
xchg
data16
addr16
add
cmp
cmp
std
addr16
xchg
or
mov
jle
pop
rolb
rolb
push
cmp
jo
mov
push
add
sub
popa
lahf
leave
push
fsubs
icebp
mov
shrl
cmc
adc
mov
in
push
push
test
sbb
cmpsb
sti
sub
mov
cwtl
cmp
mov
addb
and
mov
or
mov
mov
lods
xor
push
add
xchg
add
add
jb
mov
cmpsb
cwtl
test
or
outsl
lock
and
mov
jle
mov
inc
inc
add
mov
mov
mov
mov
add
addb
push
mov
aas
scas
popf
das
ja
js
inc
add
push
push
dec
fwait
jl
xor
mov
out
or
add
jecxz
movsb
movsl
push
add
adc
mov
stos
mov
mov
cmpsb
sbb
leave
addb
cmp
lods
jnp
add
pusha
add
lcall
add
push
fistl
ret
repnz
mov
mov
ret
xchg
xor
pop
mov
jle
dec
fcmovne
cmp
out
add
xchg
std
push
xor
mov
test
xchg
stos
pushf
popf
negl
in
imul
jnp
add
stos
mov
mov
or
shrl
pop
pop
mov
gs
jae
mov
dec
cmp
adc
stos
mov
mov
fdivs
mov
cmp
push
jp
cmpxchg
mov
push
mov
aad
mov
push
rolb
mov
push
push
adc
mov
jno
repnz
mov
fucomi
add
mov
mov
sub
pop
mov
mov
mov
adc
jmp
popa
pop
cmp
adc
add
push
mov
sarl
bound
mov
adc
lds
add
mov
dec
cmp
add
lret
out
pop
or
mov
jl
sti
cmp
mov
popa
sbb
add
jb
mov
jle
repnz
mov
mov
sbb
mov
cs
adc
pop
daa
mov
jg
add
inc
add
lds
add
pop
and
jo
mov
dec
adc
jbe
xor
pop
inc
jg
mov
mov
fdivr
xor
mov
xchg
mov
mov
sbb
in
sub
lods
clc
inc
hlt
pop
fistps
push
add
push
add
xchg
sub
lret
or
push
movsw
mov
aad
add
in
lds
mov
ss
and
mov
mov
sahf
pop
jno
add
inc
add
add
jne
scas
pop
aaa
jecxz
cmpsb
test
test
aaa
sub
add
add
add
mov
mov
xchg
or
cmp
mov
mov
add
repz
add
lods
pop
mov
rolb
fldenv
add
addb
mov
add
fmull
cmp
ret
pop
mov
inc
ret
sahf
lahf
jg
push
add
add
fisubrs
jb
mov
xchg
testl
add
mov
add
xchg
add
add
push
add
jae
cwtl
ds
fsts
sbb
sub
fnstcw
mov
jg
dec
out
fistl
rolb
mov
mov
dec
ret
ljmp
mov
add
push
mov
test
dec
pop
in
scas
mov
add
mov
mov
jae
or
fwait
lods
fcomps
cs
add
out
mov
xor
adc
pop
mov
rolb
mov
je
arpl
out
push
and
add
mov
add
sbb
pop
out
mov
insl
mov
mov
mov
sahf
out
lcall
sbb
mov
jge
ljmp
pop
mov
mov
inc
add
rolb
add
mov
sub
hlt
lock
push
int
jae
fdivl
stos
lods
loopne
mov
in
test
sbb
sub
add
push
add
cmp
mov
add
mov
add
xchg
add
out
jmp
jmp
or
aaa
dec
nop
add
mov
imul
add
add
stos
adc
mov
xor
mov
bound
mov
sub
rolb
mov
jae
or
adc
lods
rolb
into
hlt
sub
cmpsb
sbb
je
add
push
les
mov
add
lods
daa
std
popa
xlat
xor
mov
jecxz
pop
push
push
add
and
cmp
add
pop
lds
mov
pop
aam
fdivrl
or
xor
mov
mov
xlat
sub
dec
movb
pop
addl
adc
mov
adc
mov
pop
cmp
lret
lds
mov
mov
aaa
add
add
add
cmpl
mov
dec
fsubl
mov
std
inc
add
add
add
add
cli
mov
mov
add
in
push
outsl
cmp
sub
add
sbb
jg
frstpm(287
fwait
and
mov
cmp
lret
add
add
jnp
and
xchg
test
sub
out
sub
push
daa
lret
and
mov
fs
add
mov
movsb
xor
lock
add
cs
push
xchg
pop
add
rolb
mov
es
cmp
test
mov
outsl
dec
mov
outsl
jnp,pn
adc
mov
pop
xor
mov
or
pusha
add
jmp
addb
enter
sub
jo
mov
mov
add
and
rcll
xor
and
pushf
pop
pop
sub
add
leave
inc
mov
aam
xchg
push
add
pop
scas
aaa
jb
mov
cmp
movsl
gs
add
mov
scas
push
xchg
add
in
push
insb
mov
add
mov
daa
mov
mov
mov
cmp
add
pusha
add
iret
lret
mov
inc
daa
or
mov
xchg
jnp
add
xor
mov
imul
addb
mov
lret
mov
pop
adc
cmc
mov
mov
xchg
flds
add
add
mov
mov
dec
add
mov
pusha
add
nop
add
lcall
es
mov
adc
hlt
adc
mov
lcall
outsl
repnz
dec
fstl
mov
ja
outsb
ret
inc
mov
adc
and
mov
std
ret
repnz
jp
inc
push
mov
mov
push
test
call
push
xchg
into
mov
xchg
add
mov
lret
lret
pop
std
insb
adc
jbe
stos
push
inc
mov
add
sbb
clc
jns,pt
loop
mov
mov
mov
dec
inc
imul
add
in
add
mov
add
dec
es
int
shll
cmpsl
flds
shll
pop
orl
mov
jl
xchg
mov
fisubl
pop
adc
mov
je
cmp
dec
dec
stos
pop
dec
jmp
mov
add
sbb
mov
movsb
sahf
jg
in
fisubrl
mov
mov
and
dec
dec
mov
divl
push
inc
add
aam
addb
lcall
notb
cmpsb
js
cltd
aas
dec
inc
mov
sub
add
pop
cmp
add
mov
sahf
aad
insb
cmc
push
lret
add
pop
clc
arpl
bound
mov
out
cs
sbb
add
mov
inc
dec
sbb
cmp
add
xor
mov
ljmp
jo
mov
add
mov
pop
bound
mov
enter
inc
jnp
xchg
sub
stc
data16
lds
sbb
addb
data16
popa
jb
mov
push
mov
mov
or
jne
cmp
pop
sti
addr16
rolb
xchg
cmp
ror
pop
scas
pushf
test
mov
aaa
mov
xchg
dec
xchg
js
push
test
adc
pusha
add
dec
lock
mov
popa
in
ja
icebp
arpl
push
and
or
add
pushl
xchg
sbb
push
add
loop
mov
test
cli
and
add
sahf
mov
jl
mov
leave
jbe
insl
in
pop
and
add
dec
mov
jae
add
cmc
addb
cmp
mov
leave
icebp
jle
cltd
cmp
add
mov
icebp
pop
fwait
cmp
mov
mov
cmpsb
shr
push
cmp
js
add
add
leave
lds
std
lcall
jne
add
enter
xchg
js
sub
inc
add
call
lods
fmul
ss
mov
pop
pop
sahf
sti
insl
adc
dec
outsl
rolb
jl
out
mov
mov
mov
mov
mov
sbb
sbb
jno
in
sub
mov
add
mov
cmp
lcall
std
pop
lds
add
js
add
add
in
movl
inc
adc
gs
xchg
sbb
add
mov
push
mov
cmp
rolb
mov
dec
call
hlt
xchg
fmull
or
xchg
inc
push
daa
mov
inc
loopne
mov
add
scas
int
les
xchg
and
mov
mov
aas
xchg
dec
xchg
nop
add
add
loope
stos
into
pushf
jl
mov
pop
dec
inc
add
into
mov
sub
dec
jmp
adc
add
nop
add
test
scas
pop
mov
sub
push
and
out
in
lea
mov
mov
out
ret
or
ficomps
mov
in
jg
daa
inc
add
push
mov
in
outsl
out
xor
mov
test
add
xor
pop
movsb
shll
scas
mov
push
in
hlt
jmp
rolb
mov
lods
push
push
pushf
add
cwtl
scas
cmp
call
jle
mov
xchg
andl
mov
fisttpll
inc
daa
push
jmp
add
or
mov
fisttpl
lret
out
cmpsb
xor
mov
cmpsl
pop
rolb
mov
add
add
or
push
xlat
mov
fdiv
mov
cmp
sub
stos
lods
mov
ret
stos
jns
add
push
sub
ret
xor
sti
test
mov
add
lock
scas
mov
outsb
pusha
add
sub
mov
jb
mov
dec
in
push
add
fsubl
add
mov
das
xor
pop
or
add
fs
inc
add
cli
jle
repnz
mov
ljmp
js
add
cwtl
rolb
mov
fsts
add
xor
add
addb
dec
pushl
add
mov
jb
mov
sar
xchg
enter
jmp
clc
mov
out
jbe
adc
rolb
mov
jns
es
je
sub
lds
pop
mov
cmpsb
and
ljmp
mov
jns
add
mov
inc
add
sbb
xor
mov
mov
add
sti
sub
arpl
mov
add
ret
inc
sub
outsl
xchg
mov
dec
adc
mov
cmc
pop
adc
movsl
jp
jb
mov
mov
mov
add
addb
lret
lea
repnz
mov
clc
loope
cmpsl
xor
mov
les
in
movsl
adc
mov
cmpsl
addr16
sub
add
mov
mull
add
add
outsl
sbb
cmp
rolb
mov
add
jo
mov
inc
pop
mov
jno
daa
ret
adc
add
daa
or
lret
in
inc
add
add
mov
mov
scas
pop
test
dec
fsubrl
iret
xchg
add
in
push
fnstenv
jle
push
sbb
add
test
lods
push
jmp
clc
fiadds
loope
fwait
mov
frstor
adc
movsb
and
mov
xlat
xchg
gs
cmc
lcall
in
dec
mov
mov
gs
add
jnp
push
and
mov
scas
jno
out
add
mov
push
imul
mov
mov
xor
xchg
ja
fildl
adc
add
add
add
mov
sub
add
cmpsb
push
and
into
cmp
mov
stos
int3
mov
jl
adc
adc
scas
and
lret
add
mov
mov
and
jb
mov
jg
cmpsl
pop
lods
jbe
pop
add
mov
rolb
push
xor
mov
sub
addr16
mov
mov
pop
jp
sahf
mov
add
leave
push
inc
lds
push
xchg
test
add
inc
addb
inc
aam
add
inc
add
mov
sub
xchg
out
mov
lock
add
test
add
mov
insb
imul
push
pop
jno
daa
fidivrl
push
cmp
mov
sub
lcall
ja
add
add
adc
xor
adc
out
jbe
add
roll
mov
popw
mov
add
mov
insl
jge
dec
mov
add
push
sub
mov
add
push
aaa
and
lahf
in
stc
lahf
mov
adc
dec
fwait
sahf
les
movsb
mov
push
add
mov
aad
jg
int3
rolb
mov
add
ljmp
mov
test
cmp
xor
into
ljmp
rolb
mov
add
lea
mov
mov
mov
jg
push
jl
add
mov
and
out
loop
mov
js
add
pop
neg
fadds
rcll
mov
mov
movsl
jg
add
jno
cmc
push
add
jg
dec
sahf
mov
add
sbb
push
cli
dec
stos
add
add
lds
sbb
dec
mov
add
push
fisttpl
lret
jmp
fistpll
mov
add
push
mov
add
mov
lret
mov
xorl
push
cld
or
fsqrt
cs
out
cmp
push
add
add
cld
imulb
sbbl
xlat
loop
mov
add
mov
mov
mov
add
inc
dec
je
and
fidivl
dec
xchg
pop
into
aaa
sahf
jg
jl
aad
xlat
addl
pop
jo
mov
nop
add
mov
push
sbb
pop
add
mov
je
aad
out
pushf
mov
lods
adc
mov
scas
out
mov
mov
add
rolb
mov
xchg
push
mov
and
jp
sbb
adc
mov
and
mov
ret
andl
test
rolb
mov
in
andl
rcrl
push
add
mov
jg
lcall
ret
pop
sbb
incl
add
jecxz
cltd
push
addb
sahf
jmp
mov
xchg
sahf
xchg
fisubrl
and
mov
es
ret
pop
add
mov
mov
lods
incl
add
add
mov
dec
pop
push
mov
add
std
cwtl
in
lahf
hlt
cmp
xchg
sub
insb
mov
inc
add
add
addb
out
mov
add
mov
loop
mov
out
cmpsl
adc
aam
xor
mov
scas
push
ficoml
mov
pop
adc
add
inc
ffreep
pop
faddl
mov
movsb
add
pop
arpl
fs
xchg
jb
mov
pop
aas
jb
mov
ja
lock
mov
xlat
push
mov
mov
out
add
mov
mov
scas
cmc
or
pop
mov
jmp
and
mov
aam
dec
aad
insb
sub
sti
pop
jp
repnz
and
mov
or
xchg
mov
pop
inc
rolb
mov
aas
jmp
add
inc
jns
add
stc
xlat
loopne
mov
add
xor
push
mov
mov
dec
add
mov
dec
or
fdivl
add
pop
fwait
aad
pop
mov
add
inc
fistl
or
sbb
loope
int3
fidivrl
and
rolb
mov
out
iret
cld
jo
mov
mov
mov
lahf
cmpsb
cmp
bound
mov
out
add
xor
mov
pop
subl
out
fbld
mov
cmc
imul
pop
leave
push
cmpsb
mov
inc
add
and
addb
out
pop
xor
addb
or
or
dec
xor
pop
mov
icebp
ret
xlat
cltd
push
pop
add
dec
xchg
loopne
mov
sti
lea
add
insl
or
fildl
adcl
jg
cld
cltd
mov
add
int
push
add
mov
sub
sub
rcll
bound
mov
mov
addr16
sbb
stc
aam
lock
dec
leave
fmuls
add
add
pop
inc
ret
popf
rolb
mov
outsl
xchg
mov
mov
pop
xchg
mov
ret
jo
mov
add
dec
mov
mov
mov
std
outsl
xlat
aaa
fninit
pushl
add
dec
gs
addb
mov
add
mov
scas
stos
sahf
dec
mov
mov
jb
mov
add
es
mov
sub
out
ss
outsb
xor
mov
lock
arpl
add
stos
adc
cmp
mov
jns
jl
fs
add
sub
sub
jp
push
into
mov
pop
xor
add
add
loopne
mov
mov
in
dec
jecxz
scas
cltd
lock
add
mov
push
dec
inc
cmp
stos
jg
lock
lret
sbb
dec
or
in
xchg
adc
push
fisubl
add
cmpl
sar
insb
mov
mov
mov
nop
add
add
push
test
imul
and
mov
mov
out
dec
push
jge
or
mov
push
add
sub
pop
stc
and
insl
and
mov
into
inc
mov
je
or
push
add
add
mov
mov
mov
xlat
add
mov
insl
push
inc
lods
mov
mov
add
add
mov
lret
repz
and
add
fistpl
xchg
imul
imul
leave
xor
mov
shr
fsubrs
xor
or
xor
cli
std
loopne
mov
cmp
add
jl
sub
repnz
sub
dec
loop
mov
jne
add
add
in
mov
gs
rolb
mov
sub
push
mov
add
push
popa
cwtl
inc
sub
add
lea
lods
mov
add
mov
out
xlat
aas
xchg
and
test
addb
mov
and
repz
out
call
cltd
mov
adc
mov
mov
imul
outsb
nop
add
sub
dec
jle
add
repnz
bound
mov
mov
pop
addr16
mov
add
mov
imul
mov
xchg
adc
mov
out
xchg
negl
xchg
add
mov
add
jg
adc
pop
daa
or
inc
push
push
addr16
testb
mov
emms
js
push
inc
mov
xchg
in
imul
add
outsb
addb
cmpsl
shrl
fldt
sub
lods
mov
mov
cmp
rcll
jl
add
cmp
mov
lret
jns
popa
cmpl
cld
dec
xor
into
inc
fildll
cmp
add
notl
add
cs
add
testl
and
pop
pusha
add
cmp
add
mov
mov
mov
loope
jle
xchg
add
adc
mov
sub
pop
mov
test
mov
inc
cmp
nop
add
imul
inc
add
mov
mov
mov
fistps
xchg
add
adc
fnstsw
add
out
dec
mov
pop
jno
std
loope
add
outsb
jbe
xor
mov
sahf
je
push
fs
into
mov
ljmp
lods
fcompp
mov
sbb
add
mov
in
int
add
push
push
push
out
mov
add
pop
movl
in
fistps
call
add
loope
add
das
lret
add
push
arpl
outsb
es
fidivrs
add
dec
insl
rolb
sub
pop
ds
int3
gs
ljmp
xor
xchg
pop
jl
and
mov
sub
ss
adc
mov
mov
pop
jmp
add
add
test
mov
sbb
pop
ficompl
icebp
scas
xchg
aas
lahf
jne
xchg
addr16
test
stos
mov
and
stos
fdivr
sbb
pop
xchg
ds
into
insb
rolb
mov
jmp
lock
add
jg
jmp
push
pop
inc
jno
push
aam
insl
fwait
xchg
mov
into
stos
sbb
jge
cmc
cmp
add
mov
add
adc
pop
leave
loopne
mov
jae
lock
sbb
pop
push
sbb
xchg
dec
mov
add
mov
aam
jle
add
xor
mov
outsl
out
out
xor
fwait
push
out
mov
fs
mov
leave
inc
daa
rolb
mov
add
mov
mov
push
add
mov
jo
mov
fistps
cltd
sub
mov
add
pop
add
je
mov
mov
dec
mov
or
insl
add
lahf
pop
jno
jecxz
pusha
add
out
bound
mov
jb
mov
xlat
adc
xchg
add
repz
dec
mov
loopne
mov
add
mov
shll
fdivs
push
in
popa
mov
out
arpl
daa
rolb
ss
jns
js
add
ds
aaa
jg
sub
add
add
jo
mov
mov
mov
fbld
mov
cmpsb
lret
xor
jbe
insl
inc
add
xor
mov
out
xchg
rolb
mov
cmp
dec
lea
add
in
add
add
data16
and
bound
mov
neg
inc
ds
add
mov
add
add
mov
jne
std
iret
or
out
mov
mov
add
xor
or
mov
jp,pn
ss
mov
test
cmp
stc
xor
pop
or
and
outsl
subl
pop
jl
xchg
add
sub
xchg
pop
mov
aam
imul
push
cli
xlat
movsl
in
ja
lcall
cmp
cmp
mov
add
test
sub
into
cmp
int3
jle
fcmovne
lahf
out
add
cmp
push
pop
test
add
scas
jae
lods
mov
call
dec
mov
sub
lret
movswl
movb
rolb
mov
mov
and
mov
jbe
je
mov
mov
roll
cli
jmp
mov
mov
xchg
xor
nop
add
cmp
mov
cmp
mov
xor
mov
xchg
daa
inc
sbb
rcll
addb
jge
cld
cmp
add
mov
mov
movsl
push
and
mov
add
jnp
std
cwtl
stos
pop
out
add
enter
mov
add
loop
mov
popl
add
push
or
add
dec
mov
mov
ret
cmp
lahf
outsl
movsb
enter
insl
stos
int3
pop
or
and
or
inc
add
dec
push
sub
and
mov
add
add
jne
iret
and
jmp
imul
add
ret
dec
mov
add
dec
lods
cmp
or
sbb
push
nop
add
mov
push
sbb
add
xchg
jp
shrl
popf
push
icebp
jnp
add
dec
or
dec
fcomps
ret
jnp
adc
mov
add
imul
mov
add
jno
inc
add
mov
jg
imul
sub
arpl
jg
stc
popa
addb
lock
adc
mov
lret
add
push
add
add
ja
es
mov
add
lcall
gs
fsts
xchg
add
gs
sbb
mov
mov
addb
in
push
aam
cmp
outsb
jecxz
dec
push
bound
mov
mov
mov
fisttpl
mov
mov
mov
idivl
call
and
test
cli
mov
mov
jae
add
xor
mov
add
icebp
push
and
imul
shrl
add
or
test
dec
lods
dec
fs
inc
mov
inc
add
lods
or
mov
xchg
add
sahf
dec
lcall
and
pop
and
fistps
jbe
xor
mov
loope
mov
repz
loope
add
add
pop
xchg
mov
out
es
pop
cltd
jno
out
inc
mov
imul
pop
lcall
ret
in
lods
das
movsb
or
jmp
mov
negb
add
mov
test
scas
pop
stc
aad
cmp
mov
mov
lea
add
jmp
jmp
add
jno
inc
add
ret
pop
addb
sti
clc
iret
sub
add
add
call
add
in
fdivrs
cmp
dec
es
mov
push
loop
mov
add
test
inc
ja
pop
lcall
mov
ficompl
sub
cltd
dec
aad
sbb
push
scas
cmp
mov
data16
mov
xor
add
shll
mov
cmp
cmp
rolb
mov
lret
sub
xor
mov
mov
push
mov
mov
aas
dec
mov
loope
xor
mov
mov
add
mov
mov
repnz
mov
dec
icebp
push
add
and
add
adc
lret
add
pop
or
xchg
push
lds
sbb
js
push
js
add
jae
cwtl
rolb
mov
popa
jmp
mov
add
inc
add
out
vmaxsd
jmp
jmp
insb
jo
mov
std
jp
repz
mov
jb
mov
xchg
dec
test
or
fwait
push
pop
cltd
inc
popf
adc
mov
push
mov
lret
add
mov
cmp
pop
cli
sbb
cltd
adc
mov
pop
divl
xchg
or
iret
sbb
les
xchg
xchg
add
mov
ficoms
mov
inc
add
inc
add
jl
rolb
xorl
push
adc
dec
cmpsb
int3
ret
fs
pop
ret
movsb
cmp
or
add
dec
imul
mov
daa
inc
sub
add
inc
xchg
add
and
or
xor
mov
add
mov
sbb
outsb
mov
xchg
add
out
not
frstor
sub
sahf
ficoml
push
lds
push
addb
xchg
cmp
xlat
clc
cmpsb
movsl
loope
icebp
dec
je
inc
add
and
shr
mov
sub
std
sbb
inc
repnz
sub
cmp
xchg
add
push
mov
ja
mov
mov
in
add
test
inc
add
inc
and
mov
cwtl
xor
fidivl
add
push
pop
add
push
pop
add
xchg
dec
sbb
insb
ret
inc
add
xchg
popa
dec
cmp
push
jle
scas
aad
mov
add
fpatan
jnp
sbb
sbb
aaa
push
adc
mov
int
inc
add
addb
adc
mov
add
lret
aad
ret
stos
insb
and
mov
iret
lds
fisubrl
add
mov
fwait
lret
sbb
cwtl
adc
mov
inc
add
add
dec
repnz
pusha
add
mov
cltd
jo
mov
inc
add
imul
mov
lods
mov
sbb
ja
movsb
mov
mov
data16
xor
mov
jecxz
cs
std
out
out
add
xor
mov
mov
add
fnstsw
push
add
mov
mov
rolb
mov
mov
out
ret
push
push
add
mov
mov
daa
movsb
sahf
push
sti
pop
push
cmp
mov
adc
add
mov
jecxz
jne
dec
sub
mov
bound
mov
xchg
add
test
sub
mov
jg
lea
sbb
mov
add
sbb
pop
fwait
cmp
fimull
cmc
push
cmp
add
sbb
popf
fmuls
inc
xchg
add
push
sti
sub
mov
mov
inc
add
jmp
mov
adc
dec
jg
jne
mulb
and
xchg
push
les
out
sbb
fs
sbb
push
rolb
mov
add
mov
popf
xchg
roll
mov
adc
ret
jle
mov
imul
sbb
dec
cmp
add
mov
fimuls
lds
mov
add
mov
mov
out
cmpl
fbstp
add
inc
clc
cmpsb
ds
add
lea
sub
jns
addl
rolb
mov
mov
add
xchg
in
sbb
std
xchg
rolb
mov
xchg
mov
mov
mov
mov
jns
and
ds
add
mov
mov
jns
adc
packuswb
jl
push
int
fwait
dec
mov
out
fisttpll
inc
add
addb
jae
pop
das
fistpl
lods
pop
bound
mov
push
dec
and
mov
in
and
mov
adc
dec
jae
addb
sbbl
pusha
add
testb
ret
dec
cld
clc
pop
push
inc
mov
push
test
loopne
mov
rolb
mov
imull
scas
clc
fcomip
cltd
aaa
jmp
push
push
push
nop
add
adc
out
or
mov
dec
adc
mov
xchg
lea
push
push
mov
add
jae
es
nop
add
mov
add
dec
xchg
xchg
and
or
cmp
inc
push
stos
or
mov
push
xchg
add
and
mov
cwtl
sub
scas
xchg
movsl
je
add
sub
add
subl
arpl
mov
add
mov
adc
mov
xrelease
cmpsb
fisubs
cmp
lcall
xlat
clc
jmp
repnz
add
add
icebp
xchg
ret
or
sub
loop
mov
imul
inc
add
add
mov
mov
mov
stos
fadd
jo
mov
clc
mov
ret
push
xchg
testb
push
jge
cmp
sbb
idivb
add
add
mov
pusha
add
cs
addr16
add
mov
adc
mov
test
cli
outsb
pop
shll
add
mov
je
rcll
insb
mov
cmc
test
pushf
jnp
fdivrs
add
push
scas
push
jmp
shrl
add
mov
push
add
mov
mov
mov
cmp
add
decl
jmp
jb
mov
mov
lock
add
jl
lods
inc
dec
stc
pop
push
mov
testl
xchg
int3
adc
cmpsl
xor
pop
fwait
lock
adc
nop
add
sub
mov
imul
mov
and
mov
add
add
cmp
es
add
push
sbb
add
fsubs
aas
stc
mov
mov
aam
outsb
or
leave
jl
mov
mov
add
add
aas
dec
mov
fldt
sahf
outsb
and
mov
xchg
pop
push
js
mov
pop
sbb
fidivrl
mov
sub
test
mov
negb
mov
imul
cmp
outsb
data16
in
out
repz
cmpsb
insl
xlat
scas
mov
add
mov
imul
add
and
adc
sbb
cmpsb
pop
fdivs
add
add
inc
or
or
xchg
xchg
jl
repnz
jno
push
imul
repz
jo
mov
push
js
adc
add
mov
dec
mov
mov
mov
push
add
add
and
add
insb
lea
add
mov
rcll
or
mov
fisubrs
int3
cld
inc
add
fstps
xchg
insl
aad
and
mov
stc
or
mov
add
mov
lea
popf
xlat
jmp
mov
mov
js
lds
lret
cmpsb
jg
dec
pop
or
push
vmwrite
ds
mov
jbe
mov
cwtl
mov
lods
xchg
addb
into
ret
mov
int3
lds
insl
pop
mov
mov
movsb
pop
movb
pop
sbb
add
divb
mov
xchg
mul
sbb
mov
push
repz
mov
mov
add
cld
xchg
push
xchg
mov
and
mov
cmc
bound
mov
xchg
aas
mov
dec
or
fwait
lock
scas
std
mov
loope,pn
addr16
pop
lds
add
dec
add
sahf
stos
mov
cmp
add
in
mov
mov
lahf
test
mov
std
call
add
adc
mov
add
add
pop
lcall
pop
adc
mov
es
adc
add
add
loope
cmp
push
aaa
pop
push
pop
xchg
push
inc
add
xchg
loope
add
add
or
pop
or
ret
xchg
add
aas
in
scas
es
out
call
popf
jns
mov
out
add
mov
add
xor
ret
xor
cmp
sbb
xchg
mov
insl
add
mov
sti
and
mov
cltd
shll
mov
mov
pop
outsl
and
mov
dec
pop
les
add
mov
insl
jp
xchg
or
dec
cmpsb
les
mov
jne
bound
mov
mov
inc
fs
mov
mov
xor
test
add
mov
and
add
xor
lahf
sarl
out
outsb
pusha
add
add
scas
addr16
cmpsb
std
mov
cli
in
movsl
push
pop
fsubrl
les
mov
shrl
add
mov
sub
loopne
mov
or
mov
add
fstpl
sbb
punpcklwd
sbb
add
mov
mov
dec
std
mov
mov
js
add
mov
add
mov
xor
testb
out
dec
in
les
and
sbb
imul
push
push
add
cmp
xchg
in
flds
addb
stos
dec
inc
mov
sti
repnz
jb
mov
test
imul
mov
dec
lcall
data16
fisubrl
not
int3
loope
xchg
xchg
or
les
and
pop
enter
inc
ffree
jg
dec
push
rol
fildll
add
add
fsubs
add
push
aaa
movsl
jne
push
into
mov
add
das
or
xchg
sub
addb
inc
xor
add
dec
pop
mov
ret
stos
in
jb
mov
inc
rolb
mov
ljmp
pop
test
mov
add
in
imul
test
mov
dec
pusha
add
mov
mov
dec
stos
pop
iret
in
notb
lea
repz
pop
push
pop
cld
xchg
add
add
pop
aam
fisttps
jo
mov
add
int3
push
push
add
push
or
mov
xor
mov
pop
in
jae
rolb
dec
cmp
notl
jg
adc
mov
idivb
fistpl
push
pop
insl
int
xor
mov
pop
and
add
iret
cs
out
mov
inc
ret
mulb
push
sbb
mov
pop
cmp
add
mov
add
mov
lods
arpl
add
xchg
xor
mov
mov
add
mov
jns
fidivs
aas
push
mov
mov
add
lods
jo
mov
and
mov
sub
pop
xchg
add
add
mov
mov
push
clc
jns
add
aaa
sahf
xor
sbb
mov
mov
das
es
cmp
add
jo
mov
pop
mov
mov
add
cwtl
adc
mov
lods
iret
xor
mov
xchg
clc
and
test
add
js
outsb
rolb
mov
stos
pop
rolb
roll
gs
mov
adc
mov
ret
lea
mov
flds
add
add
add
sbb
dec
inc
dec
aam
add
mov
lds
add
fildll
bound
mov
jns
add
