add
add
aam
incb
fs
fs
add
jecxz
jecxz
int
int
add
add
mov
mov
in
cld
cld
cld
cld
cld
push
mov
mov
mov
add
pop
add
test
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
sub
in
in
push
push
push
push
push
push
jg
add
adc
adc
adc
inc
inc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
add
add
add
mov
add
add
jno
jno
jno
add
mov
add
add
add
add
mov
add
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
add
add
pop
dec
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
xchg
xchg
xchg
xchg
sldt
add
add
add
pusha
pusha
pusha
pusha
jg
jg
jg
jg
jg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
in
add
inc
inc
inc
inc
jl
aas
lods
push
push
add
movsl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
sti
sti
dec
add
add
add
outsb
outsb
outsb
sub
sub
sub
loope
jb
jb
jb
jb
jb
mov
add
add
or
or
or
or
and
mov
mov
pop
pop
pop
pop
pop
pop
ret
ret
ret
ret
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
into
into
into
into
into
into
into
into
add
add
div
insl
insl
insl
insl
insl
insl
insl
imul
imul
imul
add
addl
addl
addl
add
add
add
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
add
loope
jae
jae
add
add
add
mov
jmp
rcl
ss
add
add
add
add
mov
add
add
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
mov
mov
push
push
push
push
lret
lret
lret
add
div
div
div
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
gs
cmc
cmc
cmc
cmc
cmc
cmc
inc
inc
inc
add
jno
jno
add
push
push
push
push
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
adc
ja
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnbe
rcl
add
aam
je
je
je
je
je
je
je
xchg
xchg
xchg
xchg
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
pop
pop
add
xchg
mov
mov
mov
xchg
xchg
aas
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
test
test
add
loop
add
add
add
stc
stc
jge
add
add
add
int
int
mov
add
add
out
out
out
out
bound
mov
add
add
add
jae
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
int
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
jbe
jbe
jbe
jbe
jbe
jbe
jbe
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
add
add
sahf
sahf
sahf
sahf
add
test
push
push
push
push
push
push
push
push
push
push
push
add
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
pop
pop
and
add
add
add
add
add
add
adc
cld
add
mov
mov
mov
cmp
movsl
movsl
add
add
add
add
add
cmc
cmc
cmc
adc
mov
mov
mov
mov
mov
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
add
lret
cmpsb
cmpsb
rcl
rcl
rcl
rcl
rcl
rcl
rcl
add
add
es
cmp
testb
add
imul
imul
imul
sub
sub
sub
add
ret
add
push
push
push
push
push
push
push
push
ret
ret
ret
lcall
lcall
add
pop
pop
pop
lret
add
imul
add
push
int3
int3
int3
int3
or
push
ret
ret
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
cmp
cmp
cmp
cmp
add
add
add
ror
out
add
and
and
and
add
add
add
add
test
sbb
push
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fldl
add
add
mov
add
out
out
out
out
add
add
add
mov
mov
mov
add
add
sub
sub
sub
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
push
push
push
push
add
add
mov
add
add
mov
mov
and
and
jnp
jnp
jnp
jnp
jnp
jnp
aad
aad
addl
add
add
popl
and
div
div
or
sub
ret
add
mov
add
pop
pop
pop
pop
pop
pop
pop
add
xor
xor
add
add
add
pop
div
div
add
add
add
add
add
rcl
rcl
rcl
rcl
roll
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
lock
xchg
xchg
xchg
xchg
xchg
xchg
iret
iret
iret
iret
iret
iret
iret
iret
iret
addl
ret
ret
add
push
push
out
out
out
add
inc
add
pop
pop
pop
add
add
add
add
out
out
out
out
out
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
lods
lods
lods
lods
lods
lods
lods
lods
filds
add
add
jbe
jbe
jbe
jbe
jbe
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
incl
add
add
ret
push
push
push
push
push
push
push
push
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
out
xor
xor
add
add
je
je
je
je
or
or
or
or
or
add
push
push
push
add
push
push
stos
stos
stos
stos
stos
stos
add
call
out
out
out
out
out
out
out
out
xchg
mov
imul
or
or
and
and
and
and
and
and
and
and
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
add
cmc
cmc
cmc
cmc
cmc
cmc
sub
sub
repz
lahf
bound
bound
rcl
rcl
rcl
rcl
roll
sub
add
add
add
mov
mov
mov
add
add
add
add
mov
add
add
add
add
or
add
dec
dec
dec
dec
dec
mov
push
push
add
sbb
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
add
jmp
jmp
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sub
sub
sub
sub
add
add
xchg
add
add
rcl
rcl
rcl
rolb
int
xchg
add
add
pop
pop
pop
pop
add
add
push
push
push
rol
rol
rol
rol
shrl
sub
sub
bound
sub
sub
sub
sub
sub
sub
sub
sub
sub
push
add
hlt
mov
add
mov
mov
mov
mov
ret
add
fcomp
fcomp
fcomp
fcomp
fadds
add
inc
inc
inc
inc
rdpmc
xor
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fstp
fstp
fstp
fstp
fstp
add
add
mov
add
add
test
test
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
or
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
pop
pop
pop
add
add
mov
mov
add
xchg
xchg
jne
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
add
add
xor
mov
mov
mov
add
add
add
xor
xor
sub
push
xchg
xchg
xchg
xchg
rol
bound
bound
bound
bound
bound
bound
bound
bound
bound
add
add
add
add
xchg
add
add
sbb
sbb
jbe
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
add
add
add
sub
xor
add
add
call
jb
jb
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
cmpsb
cmpsb
cmpsb
add
add
add
add
and
arpl
arpl
arpl
aaa
aaa
aaa
aaa
aaa
add
add
fwait
fwait
mov
mov
mov
mov
mov
mov
add
add
add
mov
add
repz
fcmovnu
fcmovnu
fcmovnu
out
out
out
out
aaa
aaa
push
push
es
add
mov
mov
add
add
add
add
cltd
cltd
cltd
cltd
cltd
add
or
or
add
inc
inc
inc
inc
inc
inc
push
push
push
push
mov
mov
add
in
inc
inc
inc
inc
inc
arpl
mov
mov
test
test
add
add
fldcw
sub
sub
push
push
push
push
push
push
push
mov
mov
div
div
div
div
mulb
data16
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
mov
lret
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jp
jp
jp
jp
lea
jb
jb
jb
add
sub
sub
sub
sub
add
addb
add
add
add
add
push
push
push
push
push
loop
loop
loop
loop
loop
loop
loop
loop
add
pop
pop
add
add
add
add
pop
pop
pop
pop
add
int
int
int
int
int
int
int
int
mov
push
push
push
push
push
add
add
sbb
add
sbb
sbb
sbb
sbb
sbb
xor
xor
xor
xor
xor
and
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
out
out
out
out
out
out
add
mov
add
add
in
sar
sti
sti
sti
rcl
mov
push
push
push
push
push
push
push
push
push
cmc
cmc
cmc
xlat
xlat
xlat
movsb
pop
pop
pop
pop
pop
gs
gs
les
outsb
outsb
repz
addl
scas
add
add
xchg
xchg
add
addr16
icebp
add
push
push
push
push
add
rolb
adc
adc
adc
jge
jge
jge
jge
jge
jge
mov
mov
mov
mov
enter
add
mov
add
mov
mov
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
and
and
and
lea
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
outsl
outsl
outsl
outsl
outsl
sub
add
add
add
fwait
fwait
fwait
add
std
std
std
std
std
std
std
insl
rol
roll
decl
dec
dec
dec
dec
dec
dec
add
add
add
es
add
rcl
mov
adc
adc
adc
adc
adc
add
div
add
sub
sub
sub
sub
sub
sub
sub
push
push
push
push
push
push
push
push
push
push
push
call
jnp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
das
das
das
add
add
add
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
xor
fcmovnu
add
add
add
add
add
add
jmp
xor
xor
xor
xor
add
add
xor
add
add
add
add
and
add
add
push
push
push
push
add
mov
mov
add
add
dec
dec
dec
push
push
cs
std
std
std
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
addr16
jg
and
bound
dec
add
ret
je
je
je
add
add
add
add
add
add
or
or
or
or
or
decb
or
or
add
add
jbe
jbe
jbe
push
push
push
push
push
int
xor
xor
rcl
rolb
add
add
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
add
add
pop
pop
out
out
out
out
out
add
add
rcl
rolb
add
jno
add
xchg
xlat
xlat
ds
test
test
test
incb
mov
add
add
pop
pop
pop
add
add
add
add
add
sahf
sahf
sahf
sahf
repz
rcl
push
push
push
push
push
push
push
push
push
push
push
push
add
add
inc
inc
inc
inc
repz
cltd
cltd
add
add
test
add
add
mov
mov
lods
std
add
add
add
repnz
add
add
or
or
or
or
add
add
add
jno
jno
jno
add
add
repz
add
add
add
and
dec
dec
mov
adc
add
in
in
in
add
add
add
add
add
cmp
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
xchg
xchg
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
ss
add
call
dec
dec
dec
dec
dec
dec
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
cltd
popa
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
imul
add
aad
aad
aad
aad
push
push
push
push
push
push
add
add
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
add
add
dec
dec
dec
js
jno
mov
mov
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
xor
xor
pop
pop
add
and
and
and
and
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
loopne
add
add
add
cwtl
cwtl
cwtl
cwtl
cwtl
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
add
add
add
mov
add
add
add
push
push
lcall
add
add
add
repnz
add
enter
add
add
jno
jno
add
lcall
add
cltd
fwait
fwait
fwait
clc
clc
fcmovu
fcmovu
fcmovu
add
add
adc
adc
adc
adc
adc
add
add
add
add
test
add
add
add
cmp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
jne
jne
jne
jne
jne
jne
jne
jne
fcmovnu
fcmovnu
fcmovnu
add
gs
mov
mov
mov
mov
mov
mov
add
add
fcmovu
fimull
mov
mov
mov
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
add
add
add
ja
ja
ja
ja
ja
add
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
or
rol
rol
rol
rol
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
add
add
push
push
push
push
add
push
push
push
push
push
push
push
push
push
add
imul
addl
mov
mov
add
add
mov
mov
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
xchg
xchg
idiv
stc
stc
stc
rcl
roll
add
in
add
sbb
sbb
sbb
sbb
sbb
mov
mov
pop
pop
add
add
add
add
add
push
push
add
add
sub
sub
add
add
mov
sbb
sbb
sbb
sbb
add
add
add
xor
xor
xor
xor
add
aad
add
add
jbe
jbe
add
or
or
or
je
add
add
add
push
mov
mov
mov
mov
mov
mov
mov
add
imul
add
add
daa
div
and
and
and
and
and
and
and
and
and
and
add
add
add
add
faddl
hlt
hlt
hlt
hlt
hlt
hlt
fcomp
addl
addl
addl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lods
lods
lods
add
add
gs
inc
inc
inc
inc
inc
add
add
div
sbb
sbb
sbb
add
add
repz
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
roll
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
add
mov
mov
xor
xor
xor
xor
add
jbe
add
inc
inc
inc
inc
inc
add
add
add
add
add
mov
mov
add
add
sub
sub
add
sbb
sbb
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
roll
add
pushf
add
add
add
add
iret
iret
iret
add
test
test
test
test
inc
inc
inc
add
add
add
add
add
pop
pop
pop
pop
pop
pop
and
and
inc
add
dec
dec
dec
aaa
add
add
add
add
add
xor
xor
add
add
add
add
sub
sub
sub
add
add
cmpsl
add
add
push
push
lods
lods
lods
add
add
int3
int3
int3
add
repnz
rol
shrl
add
add
bound
bound
jge
push
iret
mov
or
add
add
push
andl
add
push
add
xor
sahf
dec
addb
sti
jne
inc
and
add
mov
adc
cmp
leave
gs
xchg
lods
add
sbb
push
insb
sbb
pop
fidivrl
and
add
movsb
add
adc
xor
cli
mov
add
lods
add
adc
pop
adc
dec
mov
add
cli
cwtl
dec
std
mov
fistl
fwait
cld
nop
dec
add
fiadds
add
or
add
pusha
cmpsl
in
test
add
add
push
add
lcall
add
add
mov
push
mov
jbe
sbb
jnp
add
xchg
clc
in
js
sbb
jbe
fisttps
add
rcl
lea
inc
mov
js
mov
add
adc
mov
inc
lret
ljmp
mov
jge
sub
lcall
mov
xacquire
add
pop
insb
out
cmp
mov
pushf
or
popa
cwtl
ds
xor
inc
imul
add
cltd
jbe
and
aam
pop
out
pop
mov
add
test
add
inc
ret
lret
pushf
outsl
mov
adc
jge
add
and
add
fsubrs
push
add
xchg
imul
jno
pop
xchg
add
sbb
ja
add
packsswb
repnz
mov
enter
addb
notl
neg
mov
enter
cmp
or
addb
sub
sbb
mov
in
data16
add
cwtl
cld
fs
add
jae
out
and
cmp
add
pop
add
add
lahf
seto
outsl
add
mov
sbb
jge
mov
xor
pop
lcall
cmp
je
add
vxorps
push
add
and
add
pop
and
sbb
adcl
movsb
add
mov
insl
loop
dec
pop
mov
imul
stc
aas
cmp
jbe
add
shr
mov
shrl
add
sbb
aad
cmpsb
add
mov
add
rcll
push
lds
sti
xlat
mov
add
add
das
pop
pop
cmpsb
add
ret
inc
cmp
mov
add
les
add
sti
add
add
push
jl
mov
add
add
add
jp
xor
leave
cmp
scas
lods
add
pop
mov
add
enter
cmpsb
add
xor
mov
adc
pop
sub
add
add
and
add
xchg
comiss
mov
in
fdiv
daa
aas
mov
add
mov
mov
pusha
in
fadds
mov
mov
mov
jae
xor
or
xor
add
mov
out
rorl
aam
cmp
sbb
sub
add
fbld
add
push
in
test
add
inc
rclb
cltd
in
scas
add
fmull
sbb
add
pusha
xor
inc
pop
add
inc
pushl
dec
xor
xor
add
or
add
add
xchg
add
adc
inc
pop
xchg
dec
loop
aaa
push
mov
add
in
mov
and
test
add
ret
out
inc
popf
fnsave
inc
xchg
cli
jbe
fwait
arpl
inc
mov
cld
jae
jo
add
notl
shrl
or
shlb
js
dec
mov
lahf
sub
add
xor
jmp
lea
push
add
jecxz
add
lea
dec
scas
add
push
mov
cmp
xchg
add
add
add
clc
xchg
add
sti
out
dec
lret
dec
aaa
pop
insl
push
pop
fxam
mov
add
add
add
add
idivb
mov
xchg
xor
mov
jbe,pt
xor
int3
dec
in
adc
add
add
in
push
pusha
and
add
gs
repnz
mov
addb
jle
and
add
mov
add
mov
bswap
mov
mov
and
add
sub
add
jmp
insl
sub
add
add
adc
add
loop
and
enter
scas
add
gs
dec
mov
and
add
inc
add
add
mov
add
movsb
add
fs
add
add
sbb
filds
jp
add
cltd
xchg
fs
in
std
add
add
fdivrs
addr16
cmc
or
add
clc
and
add
pop
or
add
pushl
mov
add
clc
repz
add
jnp
sbb
or
in
mov
add
add
dec
cmovo
add
inc
jp
ds
ret
int3
xchg
cmp
and
add
enter
or
mov
and
sbb
and
add
pop
jae
xor
inc
outsb
and
add
adc
cmp
aam
jbe
sarb
add
xchg
fstps
and
add
add
mov
add
cmp
pop
push
add
add
sbb
push
lds
jns
aad
loopne
xchg
push
addb
lock
xchg
lahf
xchg
shrl
dec
sbb
sub
add
adc
pop
int
add
mov
add
xchg
pop
sbb
push
jo
shll
mov
sbb
pop
inc
dec
xor
sbb
mov
push
leave
adc
outsl
lea
inc
add
pop
jge
mov
xchg
xor
add
cmp
add
add
and
movsl
cmp
add
mov
rclb
cmp
daa
ds
mov
add
dec
mov
add
pop
aas
rcl
frstor
add
iret
arpl
mov
in
mov
add
inc
enter
in
add
pop
das
push
add
jnp
mov
mov
cmp
mov
and
add
add
cmp
push
inc
pop
push
add
dec
shl
out
jo
add
outsl
cmp
enter
dec
mov
add
mov
add
dec
mov
sbb
add
add
add
adc
adc
xor
add
cwtl
adc
add
inc
xchg
add
hlt
mov
sub
add
add
dec
pop
jns
push
test
mov
add
pusha
inc
fsubrp
push
xchg
and
and
add
mov
add
rorl
mul
les
jo
imul
add
loope
shlb
lcall
popa
and
add
sub
int
add
loop
add
pop
add
add
add
cmpsb
add
sub
add
aad
inc
idivl
mov
cltd
test
add
jnp
mov
mov
sti
and
add
addb
lods
add
jmp
jo
movsl
pop
add
add
push
jp
jae
sbb
add
icebp
jecxz
test
pop
in
mov
jg
add
jecxz
sub
add
xor
mov
jg
add
fiaddl
ss
or
mov
add
push
add
pop
imul
inc
xor
sub
add
add
xchg
shll
mov
xorl
add
call
add
addb
mov
add
add
outsl
jp
enter
fucomi
shl
and
vmovd
jecxz
pop
test
cmp
add
inc
adc
and
dec
fwait
in
cwtl
inc
push
dec
je
add
mov
shlb
lock
aas
jns
data16
add
push
add
lea
xchg
pop
pop
xor
mov
bound
push
mov
add
stc
iret
stc
inc
mov
add
fcomps
add
das
daa
xchg
mov
add
ret
test
add
out
add
mov
jg
data16
add
rclb
mov
add
push
add
jno
scas
fs
mov
add
add
add
sbb
and
add
add
jns
add
enter
lods
add
stc
xchg
aam
movsl
mov
add
add
popf
dec
cli
cmc
inc
fucomp
sub
inc
inc
sub
sub
enter
shll
add
stc
jecxz
sub
add
sarl
add
addb
mov
add
daa
sbb
and
add
cmp
aaa
aaa
jnp
ss
ss
add
jle
add
adc
imul
rorb
mov
add
scas
push
add
clc
scas
push
lret
add
rcll
add
ljmp
sbb
add
lock
dec
or
add
xor
add
loope
cmp
mov
add
xchg
push
adc
jg
daa
and
les
out
sti
push
cli
mov
pop
out
ljmp
jp
jbe
pop
orl
gs
ficompl
jl
lods
add
xchg
inc
les
and
mov
fwait
adc
inc
mov
xchg
xor
sub
add
add
dec
cmp
xor
adc
fists
jae
pop
mov
out
repz
inc
dec
fs
fldt
push
mov
and
add
les
aad
bound
add
mov
imul
icebp
dec
xchg
cmpl
mov
add
push
push
icebp
test
movsb
add
cmp
jle
push
dec
lcall
add
xchg
pop
pop
data16
fs
outsl
lret
xor
dec
ljmp
xor
add
out
notb
dec
mov
add
imull
add
test
add
hlt
dec
xor
stos
add
mov
pop
mov
add
cmp
int3
fwait
int
add
fstpl
cmpsb
add
jae
mov
addb
sbbl
enter
push
add
repz
int3
movsl
dec
push
sub
jmp
hlt
push
ret
add
pop
aas
inc
loope
inc
sub
add
cmp
sbb
pushf
dec
mov
xor
addb
mov
inc
lret
cmc
jge
mov
inc
xchg
dec
out
inc
adc
out
jge
adc
dec
sahf
subl
mov
add
fcoms
sti
in
adc
mov
repz
lock
repz
arpl
lds
stos
test
add
add
dec
xlat
fsubs
add
movsb
add
popa
xor
add
insb
push
rcl
flds
and
add
mov
dec
js
sub
add
ret
or
add
add
lea
xchg
xchg
inc
test
loope
sub
add
inc
xchg
shrb
add
inc
xchg
repz
add
pop
mov
jmp
push
popf
scas
pop
outsl
adc
imul
nop
jnp
popf
ficoms
add
lods
cmp
and
shll
dec
jnp
xor
add
cmp
add
pop
cwtl
cmp
stos
add
adc
inc
push
add
aam
notb
mov
add
jl
jns
mov
jbe
fxch
outsl
ret
sbb
jo
js
insb
jle
adc
or
add
inc
mov
shrl
icebp
pop
testb
add
mov
add
pop
nop
mov
add
pop
jno,pt
ret
push
push
add
cmpl
imul
cmp
xchg
push
pop
lods
add
sub
out
adc
test
xor
jle
rclb
je
add
fs
in
add
addr16
aas
in
popa
pushf
jg
sbb
add
sbb
fildl
push
arpl
les
add
movsb
add
out
lret
cmp
aaa
cmp
insb
hlt
add
or
add
add
in
dec
leave
add
imul
in
pop
push
add
outsb
push
daa
imul
mov
xor
stos
dec
in
test
enter
rcll
loopne
add
dec
nop
push
icebp
lret
xor
shl
sbb
or
add
punpckhwd
xchg
xor
inc
inc
lods
test
add
mov
shlb
mov
mov
pop
inc
mov
mov
or
add
popf
pop
jmp
cmp
add
shr
stc
pop
push
popf
fldcw
loope
mov
xchg
pop
roll
add
xchg
pop
in
or
fstpl
out
repz
out
push
add
popa
xchg
outsl
and
add
outsb
inc
addb
orl
pushw
cmp
or
xlat
fstpl
xor
repz
xchg
scas
jae
mov
aas
add
mov
add
xlat
xor
cmp
or
or
add
sub
add
lods
add
or
add
ljmp
je
rol
scas
add
xchg
lea
add
mov
xchg
daa
test
add
add
add
sbb
add
jmp
scas
adc
jae
insb
ljmp
insb
arpl
scas
add
imul
in
divb
sarb
push
add
add
out
add
insl
add
add
dec
aas
mov
add
push
mov
aaa
and
add
jl
dec
cmc
jle
add
sbb
repnz
and
arpl
xor
cbtw
hlt
test
add
cmpsb
add
or
adc
jae
repnz
sbb
aas
mov
ret
sub
out
ds
xor
sbb
pop
aaa
pop
scas
add
xchg
cltd
mov
add
cld
mov
jbe
sub
cmp
ret
push
add
movsb
add
dec
push
push
outsl
mov
test
add
fcmovnbe
or
add
dec
push
jecxz
jb
add
dec
test
imulb
mov
jmp
aas
arpl
fmull
ret
aas
push
fdivl
xor
mov
mov
pop
sbb
push
mov
add
test
sbb
adc
and
into
fwait
and
add
in
ret
aad
add
add
xor
pop
and
add
data16
add
sub
sbb
and
push
call
cltd
push
test
add
xchg
movsb
add
inc
inc
add
add
loop
mov
iret
and
add
push
add
popa
addb
inc
mov
stos
cmpl
add
cld
jle
out
enterw
fucom
faddl
xchg
imul
push
add
fs
add
add
int
jp
rcll
loop
jle
mov
sub
add
add
addb
adc
clc
cmc
mov
add
mov
popf
jo
or
popf
ja
add
jecxz
lods
add
push
mov
cli
mov
add
pushf
jmp
jne
adc
and
add
mov
jle
sub
add
add
dec
push
add
test
add
add
xchg
add
jae
popa
rcrb
lahf
mov
add
mov
jmp
add
hlt
sbb
dec
insb
arpl
xchg
add
mov
jne
add
cmp
adc
add
xor
jge
xchg
scas
daa
out
push
sub
adc
add
or
add
add
int3
add
add
pop
mov
pop
in
add
mov
lahf
inc
sbb
add
jmp
xchg
mov
jl
push
hlt
mov
pop
int
cmp
sub
out
adc
cwtl
cmpsb
add
mov
mov
add
add
in
ljmp
and
rcrb
and
add
das
mov
add
mov
aas
push
flds
add
push
jne
add
push
mov
add
ja
add
addb
test
push
add
jp
add
mov
cltd
pop
jg
mov
add
inc
fldl
scas
add
scas
xchg
add
add
aam
inc
mov
add
xchg
popa
and
add
sbb
add
xchg
xor
push
mov
fmull
fidivrl
add
adc
jmp
add
addb
xchg
add
add
mov
add
in
icebp
imul
xchg
add
addb
movsl
imul
cmpsl
lahf
dec
or
jno
rcl
xor
repnz
add
add
sbb
into
aaa
and
jp
enter
hlt
xchg
lret
add
cmp
in
mov
shlb
xchg
out
ds
ret
test
ss
outsb
ss
cmp
popa
push
mov
add
inc
jo
push
cmp
add
add
add
add
adc
bound
add
add
scas
add
push
sub
push
add
ret
xchg
add
mov
mov
sbb
stos
add
and
add
push
sarl
add
push
mov
test
add
arpl
and
dec
xchg
push
add
sahf
pop
sar
jnp
add
push
pusha
std
divb
or
add
outsb
in
inc
jns
shrb
ljmp
add
jl
test
into
lods
mov
add
aad
cmc
shrb
add
cltd
insb
add
iret
push
add
mov
add
mov
aam
add
jmp
add
add
cli
test
sub
add
sub
add
nop
adc
bswap
pop
inc
cmc
repz
cmc
push
leave
arpl
or
imul
add
mov
mov
nop
mov
and
add
add
cmpsb
add
arpl
mov
aad
add
inc
mov
js
in
negl
clc
push
rcr
outsl
lcall
mov
xchg
mov
add
pushf
xor
add
mov
mov
lcall
add
dec
push
add
mov
int
leave
add
add
add
call
fldt
mov
push
notb
int3
push
mov
mov
sub
movl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
and
jne
call
rorb
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
push
xlat
or
arpl
mov
sbb
jle
sbb
sub
add
bound
ret
add
mov
pshufw
add
adc
mov
jg
adc
and
jmp
into
sti
mov
add
adcl
xchg
sarb
cmc
enter
sbb
mov
imul
add
lock
mov
fstpl
outsb
xchg
push
subl
fdivp
sub
js
add
dec
inc
nop
mov
das
xor
je
push
pop
push
loop
lret
and
add
add
and
add
add
adc
mov
add
xchg
pop
mov
shll
and
add
or
add
pop
sub
add
xchg
sub
add
inc
adc
outsl
hlt
adc
add
add
add
mov
add
lahf
test
add
adc
pop
imul
imul
add
data16
add
jecxz
cwtl
in
sub
add
sbb
addr16
or
ds
addl
add
add
and
adc
jecxz
dec
loopne
add
test
add
or
add
xchg
add
loop
add
mov
add
pop
jae
inc
adcl
cmp
fs
or
add
cmp
les
add
push
into
repz
xor
in
or
pushf
mov
movsl
jmp
stos
add
xchg
addb
jnp
aam
add
xchg
sub
add
jo
cltd
or
add
add
outsb
add
loop
scas
add
lock
fdivrs
test
add
add
add
push
add
clc
jmp
and
add
ds
pop
jmp
bound
add
outsb
xchg
add
push
add
test
fdivs
fdivl
shlb
jle
dec
xchg
adc
pop
scas
add
pop
sub
add
test
add
lock
push
outsb
and
jnp
movsb
add
test
mov
and
add
sbb
fldenv
pop
cmp
rolb
or
insb
push
fists
sub
add
push
scas
pop
push
je
mov
add
gs
or
add
dec
ja
in
push
add
jecxz
or
add
xor
call
add
testb
push
sarl
insb
pop
mov
in
loope
and
imull
jmp
lods
add
lods
add
jae
push
add
fsubl
add
adc
add
call
inc
dec
loopne
xchg
cmpsl
into
ds
aaa
sbb
add
jmp
add
xchg
cwtl
cld
rclb
mov
outsl
inc
xor
add
out
add
add
and
aad
add
sbb
sbb
mov
push
mov
push
int
add
mov
sti
sti
mov
mov
add
xchg
das
pushw
add
mov
mov
fmull
repz
push
xlat
nop
mov
push
mov
nop
cwtl
push
mov
pop
inc
add
lea
pop
push
enter
stos
add
stos
icebp
addr16
ljmp
shll
add
add
add
jle
add
ret
mov
mov
sbb
mov
cwtl
xlat
je
add
adc
add
cli
jmp
inc
inc
shlb
and
push
push
push
daa
in
movsb
add
fs
and
sarl
mov
fbld
fdivrl
jl
mov
add
daa
mov
add
pop
cmpl
mov
lret
jle
cmp
xchg
aaa
pop
fcmovu
adc
cmpsb
add
lcall
dec
cmp
add
add
or
add
pop
out
cwtl
xchg
add
xor
mov
add
pop
inc
dec
sbb
mov
jl
jl
cmc
xor
mov
add
div
cmpsl
xor
inc
xchg
addb
popf
popa
push
or
add
adc
push
jo
stos
mov
ja
sbb
jp
lods
add
stos
jle
xchg
or
int3
dec
negb
sub
add
add
pop
cmovb
pop
adc
imul
shlb
insb
arpl
xor
mov
xchg
mov
add
or
mov
xor
js
add
loop
add
mov
cmp
add
add
add
mov
popa
cmp
lret
sahf
fbstp
add
mov
xchg
add
mov
dec
out
pop
call
bound
jmp
add
push
sbb
push
dec
sarl
xchg
mov
add
mov
jo
sbb
push
jle
addr16
aam
aad
bound
jecxz
jl
pop
add
add
fildl
pop
popa
inc
mov
add
rolb
add
mov
add
add
rolb
add
jno
add
xchg
mov
outsb
add
xchg
out
popf
pop
xchg
sti
call
add
lret
mov
and
cmp
jl
add
les
add
xchg
jg
sbb
jmp
ret
add
icebp
adc
push
in
xchg
lahf
stos
ds
jp
rclb
add
add
add
or
nop
and
add
movl
mov
or
add
lds
mov
mov
add
add
push
std
mov
push
sbb
jnp
and
add
add
push
rcll
jae
sub
adc
mov
arpl
add
sbb
jb
add
push
add
mov
movsl
hlt
aad
add
lahf
sbb
add
jo
popf
mov
xchg
imul
lods
movb
test
add
cmp
test
add
add
xchg
jb
add
dec
add
mull
add
add
or
add
pop
inc
outsl
mov
add
sub
add
js
xlat
xchg
mov
add
movsl
adc
sub
ret
mov
popf
inc
pop
mov
add
push
adc
mov
add
and
add
cmp
add
lds
sahf
xchg
mov
add
fistpl
jae
xadd
mov
pop
push
push
cmp
scas
sub
je
mov
inc
and
add
jb
clts
add
pop
push
jns
das
repz
lret
lock
aad
pop
xchg
and
add
aaa
dec
pop
dec
inc
inc
arpl
gs
xchg
rclb
movsb
add
insb
aam
movsb
add
or
add
mov
adc
sahf
jg
mov
xchg
push
test
add
add
dec
jg
mov
into
lock
add
das
add
jno
add
xor
rorl
add
scas
jb
fidivl
add
add
ret
add
filds
ud2
hlt
mov
sub
xor
mov
inc
and
add
add
repz
add
adc
out
pop
add
add
push
adc
add
mov
add
mov
add
mov
in
push
and
add
inc
addb
xor
daa
je
fcoml
out
mov
add
ljmp
cmp
add
add
aad
xchg
push
cmc
sub
add
mov
xchg
mov
movsl
incl
and
hlt
dec
subl
push
ja
push
daa
int3
sar
ja
aad
fisttpl
push
cld
xchg
push
inc
push
lock
or
add
cwtl
and
add
int
inc
mov
add
pop
ja
jge
add
loopne
cwtl
gs
sti
jb
mov
add
cmp
in
push
icebp
sbb
inc
jb
jge
push
cmpsb
add
xor
and
shrb
dec
xchg
add
lret
add
inc
fsts
or
add
add
ret
dec
das
imul
in
outsl
xchg
pop
outsb
xlat
xchg
scas
add
cwtl
pushf
cmp
popf
pop
fsubs
sarl
popl
shlb
fimuls
mov
lock
inc
jo
add
mov
add
add
xchg
and
outsb
fxch
icebp
pushf
pop
xchg
loope
cmp
add
nop
ja
add
jmp
add
jns
lcall
fwait
out
push
aaa
pop
xchg
cltd
xor
lds
out
adc
mov
lods
and
add
add
adc
and
jle
pushf
mov
cmp
xor
add
push
add
inc
mov
jmp
add
sbb
addb
into
loope
add
in
sti
rcrb
inc
pusha
or
add
les
push
ret
or
stc
fs
imul
add
xchg
adc
je
push
sti
add
sub
mov
mov
add
add
cmova
ret
addb
xchg
pop
adc
stos
xchg
add
add
dec
mov
jo
sbb
cmp
or
add
add
push
add
xchg
pop
adc
mov
add
xchg
lahf
bndldx
add
and
add
add
mov
popa
repnz
or
add
lcall
jne
xor
call
outsb
xchg
inc
push
pop
repz
repnz
aas
cli
int
popa
and
add
xchg
inc
sarb
add
add
aad
xchg
hlt
dec
fwait
mov
cmp
insb
addb
insb
leave
push
test
mov
sbb
test
add
ror
add
jmp
pop
pop
pusha
ljmp
add
nop
flds
pushf
inc
ret
add
icebp
cmp
dec
int3
scas
add
push
and
xlat
push
inc
call
sahf
rorl
add
clc
ret
arpl
ljmp
dec
dec
loope
add
jecxz
or
mov
or
pop
sbb
push
lcall
fsubl
push
outsl
cld
adc
movsb
add
movb
mov
add
add
add
xchg
aam
stc
mov
xor
jle
into
movsl
xchg
out
cmc
xor
xchg
add
jl
les
add
xor
xchg
add
push
lcall
lea
cmp
adc
add
mov
add
jae
fwait
xchg
lds
add
ds
pop
xor
dec
mov
dec
sbb
xlat
ficomps
cli
inc
in
ret
lret
in
rol
cmp
sti
xlat
push
add
jbe
jp
pop
test
imul
push
push
std
fistpll
fisubrl
pop
jp
mov
frstor
inc
shll
adc
xchg
lret
adc
insl
test
addb
mov
xor
test
ss
mov
sbb
pop
sub
mov
mov
cli
in
pop
jnp
mov
push
add
cmp
push
mov
fcomps
call
out
testl
jbe
int
add
push
outsl
lods
add
lret
mov
add
mov
add
mov
add
add
fidivs
in
scas
push
add
fsubl
aam
call
add
leave
aaa
dec
push
ds
add
icebp
sti
mov
add
rcl
inc
inc
scas
add
faddl
add
in
das
in
sti
cltd
nopl
fcomip
adc
dec
lahf
cltd
xchg
and
push
inc
aas
int
add
in
arpl
test
add
sub
add
jae
incl
jmp
mul
xchg
add
xchg
ds
dec
cmp
add
jle
lock
add
mov
cmpsl
stos
cmp
sub
add
jns
mov
daa
cli
lahf
sbb
pop
jne
add
clc
loope
push
add
inc
and
mov
lds
lahf
adc
add
insb
lret
sbb
mov
dec
cmp
lods
pop
mov
jb
sbb
push
push
aam
push
and
add
push
cmp
ud0
mov
pusha
mov
add
xchg
mov
and
add
add
xchg
or
add
repz
mov
add
in
cmc
pop
cmp
and
add
jno
rcrb
loop
inc
arpl
lock
dec
cmpsb
add
sbb
add
push
rorl
add
add
jecxz
ja
cmp
fcmovb
pop
pop
pop
outsb
mov
mov
fsts
movsl
push
sub
add
lods
add
or
dec
into
dec
push
cmp
mov
jnp
mov
scas
icebp
cmp
push
dec
lea
or
add
sbb
xchg
jge
dec
pop
push
dec
sarb
ret
mov
push
add
add
in
xor
push
mov
stc
lods
pop
adc
add
jl
aas
lret
mov
ljmp
out
dec
pop
fwait
mov
inc
hlt
jnp
cld
iret
mov
xlat
lcall
ret
sub
add
push
xchg
scas
add
dec
xor
add
bound
cltd
addb
mov
fdivrl
add
add
add
pushf
in
mov
pop
sahf
dec
loope
push
test
fbstp
or
add
push
jnp
push
xor
add
mov
test
add
js
dec
adc
add
mov
add
cmovl
sub
add
lds
add
pop
push
cmpsl
mov
add
add
mov
add
and
add
and
lret
cwtl
cmpsl
dec
xchg
add
dec
add
mov
data16
shlb
mov
mov
repnz
ror
xchg
pop
and
mov
or
inc
pop
mov
add
insb
xchg
add
add
in
add
cwtl
ret
loop
add
dec
mov
fcompl
mov
add
lcall
add
xor
sahf
stos
out
in
mov
out
dec
inc
cli
fwait
sub
add
xor
dec
f2xm1
or
add
xchg
push
add
lret
fldt
and
add
orl
pop
inc
or
xchg
adc
movsl
and
mov
add
sub
add
xchg
fldt
push
mov
mov
jle
push
add
push
jno
sti
fdivrs
inc
push
dec
jae
add
pop
lahf
pop
cltd
imul
cmp
jo
stos
add
in
add
xor
jno
les
pop
add
pop
pop
dec
jns
add
xor
pop
mov
cltd
sub
add
bound
call
stos
add
inc
test
movsl
push
inc
aad
icebp
jne
xor
das
inc
imul
jecxz
ljmp
lcall
add
jg
out
clc
repnz
nop
nop
jae
sbb
in
add
dec
cmpsl
mov
clc
repnz
nop
nop
jae
sub
ret
fwait
xor
mov
leave
nop
jmp
pushf
add
add
add
add
push
mov
xchg
ret
add
add
add
sub
push
inc
push
clc
repnz
nop
nop
jae
test
add
add
push
clc
repnz
nop
nop
jae
popa
add
add
mov
shr
clc
repnz
nop
nop
jae
fiadds
pop
mov
nop
push
mov
leave
nop
jmp
push
add
jb
lcall
nop
nop
jae
add
add
add
je
sub
push
cmp
ret
cmp
scas
xchg
test
adc
clc
repnz
nop
nop
jae
mov
add
js
xor
push
mov
leave
nop
jmp
add
sub
mov
add
fwait
jmp
add
dec
push
xchg
add
jb
add
add
mov
addb
cmp
ret
add
add
add
add
sub
fld1
clc
repnz
nop
nop
jae
add
add
add
sti
clc
repnz
nop
nop
jae
add
add
dec
fwait
rcrl
mov
xchg
ret
lock
dec
add
mov
repnz
nop
nop
jae
push
or
or
sti
nop
push
mov
leave
nop
jmp
fildl
sbb
add
inc
imul
repnz
nop
nop
jae
add
push
push
mov
lcall
mov
sub
bound
jbe
clc
repnz
nop
nop
jae
sahf
xchg
sbb
repnz
nop
nop
jae
push
push
pushf
push
sar
test
leave
nop
jmp
js
sub
xor
xor
repnz
nop
nop
jae
push
add
add
leave
nop
push
mov
leave
nop
jmp
xor
cmp
pop
lods
add
sub
add
adc
lret
mov
leave
nop
jmp
jno
add
inc
add
xor
clc
repnz
nop
nop
jae
fwait
pop
add
add
add
clc
repnz
nop
nop
jae
add
add
test
add
nop
mov
nop
nop
jae
pushf
add
scas
add
xchg
jno
clc
repnz
nop
nop
jae
add
movsl
add
nop
nop
jae
movsl
push
aaa
add
add
ret
clc
repnz
nop
nop
jae
movsl
add
add
inc
aaa
lahf
adc
nop
nop
jae
test
nop
push
add
xchg
push
and
add
nop
push
mov
leave
nop
jmp
fwait
add
insl
add
scas
pop
clc
repnz
nop
nop
jae
sbb
add
jb
pop
push
mov
xchg
ret
xchg
pop
add
aas
ret
inc
push
add
add
repnz
nop
nop
jae
add
add
rorl
nop
nop
jae
fwait
les
add
add
addb
fwait
mov
push
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
nop
jae
add
push
add
add
movsb
add
mov
iret
jne
clc
repnz
nop
nop
jae
fwait
adc
add
clc
repnz
nop
nop
jae
push
movzwl
nop
push
mov
leave
nop
jmp
add
add
jno
add
repnz
nop
nop
jae
add
mov
aas
js
jge
ret
clc
repnz
nop
nop
jae
add
add
add
fisubs
call
clc
repnz
nop
nop
jae
cmp
faddp
aad
les
cld
nop
nop
jae
sub
lahf
add
fwait
clc
repnz
nop
nop
jae
in
add
pusha
add
add
repnz
nop
nop
jae
add
add
or
rclb
xor
and
add
add
aaa
cmc
cmp
fld1
push
mov
xchg
ret
lock
add
nop
lahf
add
add
call
mov
xchg
ret
adc
cmc
push
add
clc
repnz
nop
nop
jae
pushf
xor
add
add
add
leave
xchg
clc
repnz
nop
nop
jae
ss
add
add
fidivs
in
pusha
clc
repnz
nop
nop
jae
in
add
fisubs
add
mov
xchg
ret
popa
les
sahf
les
aas
push
bound
clc
repnz
nop
nop
jae
sarb
push
cmp
inc
nop
push
mov
leave
nop
jmp
sbb
add
cld
nop
nop
jae
ret
add
mov
test
add
repnz
nop
nop
jae
push
lcall
inc
add
ret
add
add
add
adc
cld
nop
nop
jae
pusha
ss
fcmovnb
addb
push
mov
add
jmp
inc
add
lahf
ss
add
jmp
movsl
add
mov
xchg
ret
add
xor
add
shl
push
mov
xchg
ret
les
ret
push
add
jle
pop
mov
cld
nop
nop
jae
inc
add
add
test
mov
add
pop
inc
add
aaa
add
clc
add
pop
nop
push
mov
leave
nop
jmp
pushf
lahf
jno
addb
add
rep
clc
repnz
nop
nop
jae
push
add
test
add
add
repnz
nop
nop
jae
movsl
add
inc
xchg
aaa
mov
clc
repnz
nop
nop
jae
add
popa
add
dec
inc
lea
clc
repnz
nop
nop
jae
add
fsubl
imul
dec
add
add
xchg
cmp
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
mov
add
inc
add
cld
nop
nop
jae
push
add
sub
adc
nop
jmp
dec
nop
add
rcrb
sub
clc
repnz
nop
nop
jae
add
push
add
push
mov
xchg
ret
add
add
inc
pusha
add
cltd
cmpl
nop
push
mov
leave
nop
jmp
mov
add
add
incl
add
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
jns
add
or
sub
push
clc
repnz
nop
nop
jae
rolb
add
add
sti
jmp
add
add
add
add
sub
xor
nop
push
mov
leave
nop
jmp
or
push
lahf
mov
clc
repnz
nop
nop
jae
pop
add
jle
xchg
nop
push
mov
leave
nop
jmp
add
pushf
add
test
das
mov
clc
repnz
nop
nop
jae
mov
add
rclb
xor
clc
repnz
nop
nop
jae
add
push
ret
test
or
add
and
nop
push
mov
leave
nop
jmp
adc
add
cmc
idiv
hlt
jge
test
adc
add
nop
jmp
add
sub
add
add
daa
push
clc
repnz
nop
nop
jae
pop
adc
add
pop
mov
jns
sbb
push
mov
xchg
ret
add
add
add
add
add
jb
add
adc
lock
outsb
inc
add
add
jmp
dec
fistpl
push
mov
xchg
ret
add
mov
insl
xor
sub
add
repnz
nop
nop
jae
adc
dec
rcrl
repnz
nop
nop
jae
pusha
add
movsl
mov
jb
out
nop
push
mov
leave
nop
jmp
push
lock
movsl
nop
sub
add
push
clc
repnz
nop
nop
jae
add
add
pushf
jno
push
lea
repnz
nop
nop
jae
aas
add
add
incl
add
push
lock
jne
clc
repnz
nop
nop
jae
adc
add
add
mov
add
add
clc
repnz
nop
nop
jae
nop
add
inc
clc
repnz
nop
nop
jae
jp
test
imul
lahf
add
push
add
dec
add
jns
push
mov
xchg
ret
in
add
sub
add
add
pop
add
push
mov
xchg
ret
pushf
pusha
aas
add
add
sub
nop
jmp
pushf
js
lahf
fwait
sahf
ret
push
push
mov
xchg
ret
xor
add
add
jmp
push
mov
xchg
ret
add
mov
mov
pop
push
clc
repnz
nop
nop
jae
add
lahf
add
add
nop
push
mov
leave
nop
jmp
movsl
push
add
mov
push
mov
leave
nop
jmp
add
pushf
popf
add
add
clc
repnz
nop
nop
jae
add
insl
movswl
clc
repnz
nop
nop
jae
add
xor
add
nop
nop
jae
lock
add
add
mov
nop
push
mov
leave
nop
jmp
inc
add
add
dec
push
push
mov
xchg
ret
pushf
incl
dec
nop
aaa
add
xchg
pop
and
clc
repnz
nop
nop
jae
add
pusha
dec
add
rcl
inc
push
nop
push
mov
leave
nop
jmp
add
add
scas
add
mov
add
pop
push
mov
xchg
ret
add
add
add
nop
movsl
jecxz
shrb
repnz
nop
nop
jae
push
push
add
jb
inc
push
clc
repnz
nop
nop
jae
add
clc
add
add
mov
clc
repnz
nop
nop
jae
add
mov
rclb
nop
jmp
xchg
jb
add
add
stos
push
push
mov
xchg
ret
add
sub
add
add
mov
clc
repnz
nop
nop
jae
cmp
test
add
add
inc
push
bound
mov
clc
repnz
nop
nop
jae
pop
xor
add
test
xchg
ret
sbb
add
add
add
jnp
clc
repnz
nop
nop
jae
add
add
rep
nop
push
mov
leave
nop
jmp
sahf
add
add
ficomps
subb
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
nop
jae
push
pop
push
stos
clc
repnz
nop
nop
jae
sahf
add
add
add
add
add
sti
clc
repnz
nop
nop
jae
add
les
push
mov
xchg
ret
cmp
add
jge
sub
add
repnz
nop
nop
jae
lock
movsl
add
rol
push
mov
xchg
ret
add
les
shlb
pop
fld1
clc
repnz
nop
nop
jae
fdivrp
fwait
or
jp
mov
repnz
nop
nop
jae
add
outsb
jbe
inc
clc
repnz
nop
nop
jae
adc
jno
add
add
and
push
mov
leave
nop
jmp
add
add
push
mov
xchg
ret
fwait
add
mov
mov
lcall
leave
nop
jmp
add
movsl
xor
sar
repnz
nop
nop
jae
inc
push
add
std
pushl
inc
pusha
dec
add
jno
add
fildl
popa
mov
add
adc
fwait
xchg
xchg
clc
repnz
nop
nop
jae
add
pushf
add
mov
xchg
ret
popa
add
mov
push
mov
add
add
insl
cmp
and
add
mov
rorl
test
add
clc
repnz
nop
nop
jae
inc
add
ret
clc
repnz
nop
nop
jae
add
add
add
add
add
nop
nop
jae
js
add
jle
inc
and
add
add
add
pop
mov
push
mov
xchg
ret
aas
clc
add
clc
add
mov
push
mov
xchg
ret
jp
aas
xchg
add
add
loope
clc
repnz
nop
nop
jae
add
push
or
xchg
add
nop
push
mov
leave
nop
jmp
sbb
add
add
fs
push
mov
nop
push
mov
leave
nop
jmp
js
ret
inc
add
mov
ja
inc
add
sahf
test
add
decl
mov
cmp
push
mov
xchg
ret
jmp
add
inc
xchg
shl
cmpw
nop
push
mov
leave
nop
jmp
les
pusha
scas
shrb
add
call
clc
repnz
nop
nop
jae
add
xor
adc
mov
leave
nop
jmp
popa
ss
push
push
adc
je
clc
repnz
nop
nop
jae
sub
add
xchg
mov
clc
repnz
nop
nop
jae
add
add
add
dec
add
clc
repnz
nop
nop
jae
pushf
sahf
add
add
sarb
add
enter
clc
repnz
nop
nop
jae
add
dec
add
xchg
push
pop
push
mov
xchg
ret
adc
inc
aaa
push
mov
add
add
clc
repnz
nop
nop
jae
add
inc
add
pushf
loope
add
repnz
nop
nop
jae
pusha
movsl
add
push
nop
push
mov
leave
nop
jmp
add
adc
add
inc
cwtl
add
jmp
nop
push
mov
leave
nop
jmp
add
add
inc
add
icebp
mov
jmp
add
add
sahf
add
add
xor
add
xchg
adc
out
inc
add
add
fistl
add
xor
push
mov
xchg
ret
xchg
in
test
mov
clc
repnz
nop
nop
jae
add
inc
push
dec
add
loop
inc
add
mov
add
jno
idiv
repnz
nop
nop
jae
add
jno
rolb
repz
mov
xchg
ret
xor
add
add
add
rorl
push
repnz
nop
nop
jae
addb
push
push
push
mov
xchg
ret
add
movsl
xor
test
inc
clc
repnz
nop
nop
jae
add
or
aas
pop
clc
repnz
nop
nop
jae
add
add
add
addb
push
push
mov
xchg
ret
popa
dec
add
add
mov
repnz
nop
nop
jae
xor
xor
and
add
clc
repnz
nop
nop
jae
add
fdivp
adc
fistl
fwait
push
mov
xchg
ret
add
sahf
add
movsl
add
add
mov
fistl
mov
add
fwait
jno
push
test
add
add
lods
add
mov
out
inc
add
xor
add
cmc
test
add
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
pop
add
xor
xor
repnz
nop
nop
jae
push
add
xchg
inc
add
stc
push
clc
repnz
nop
nop
jae
add
call
inc
add
aas
inc
pushf
sbb
add
mov
add
add
adc
mov
leave
nop
jmp
xchg
inc
add
add
iret
push
jmp
lcall
add
cmp
add
add
mov
add
ficoms
adc
repnz
nop
nop
jae
add
adc
add
imul
in
leave
nop
jmp
add
push
movzwl
clc
repnz
nop
nop
jae
add
fiadds
add
nop
nop
jae
mov
inc
xor
add
pusha
mov
repnz
nop
nop
jae
rolb
xor
add
xor
mov
push
mov
xchg
ret
add
xchg
adc
in
daa
pop
clc
repnz
nop
nop
jae
add
push
test
repnz
nop
nop
jae
addb
aaa
test
sub
push
loopne
es
push
mov
xchg
ret
dec
add
jb
add
repz
clc
repnz
nop
nop
jae
add
add
and
imul
incl
addb
add
add
into
js
sarb
jmp
add
add
add
fisttpl
add
vpsubsw
nop
push
mov
leave
nop
jmp
push
fisttpl
popa
sahf
cmpsl
add
push
mov
xchg
ret
add
add
lock
ss
bound
mov
cld
nop
nop
jae
add
add
add
repnz
nop
nop
jae
nop
push
add
add
add
clc
repnz
nop
nop
jae
cmp
add
clc
repnz
nop
nop
jae
pop
insl
adc
add
add
add
clc
repnz
nop
nop
jae
inc
xchg
rolb
repnz
nop
nop
jae
aaa
add
or
fld1
push
mov
xchg
ret
ret
sahf
inc
push
ret
and
clc
repnz
nop
nop
jae
in
push
mov
inc
add
dec
fld1
push
mov
xchg
ret
xchg
add
adcb
add
sub
nop
nop
jae
add
rolb
add
clc
repnz
nop
nop
jae
dec
add
add
add
call
or
add
clc
repnz
nop
nop
jae
jp
push
bound
push
es
jecxz
repnz
nop
nop
jae
test
add
xchg
add
test
clc
repnz
nop
nop
jae
lahf
jmp
sbb
popl
cld
nop
nop
jae
add
add
adc
adc
clc
repnz
nop
nop
jae
fildl
pop
push
mov
movb
cld
nop
nop
jae
incl
push
add
fwait
nop
xor
pusha
clc
repnz
nop
nop
jae
jns
movsl
fiadds
clc
pushf
xor
push
mov
xchg
ret
adc
add
add
adc
repnz
nop
nop
jae
push
adc
cmp
add
sar
cld
nop
nop
jae
add
add
xchg
add
add
test
sub
add
repnz
nop
nop
jae
cmc
dec
adc
nop
nop
jae
add
push
adc
push
clc
repnz
nop
nop
jae
add
jb
mov
ljmp
nop
nop
jae
add
add
jbe
mov
clc
repnz
nop
nop
jae
test
cmc
add
add
repnz
nop
nop
jae
inc
add
jns
push
cmpsl
mov
clc
repnz
nop
nop
jae
add
jns
or
test
add
add
aad
clc
repnz
nop
nop
jae
add
clc
adc
fildl
leave
push
push
mov
xchg
ret
add
clc
scas
ret
add
clc
repnz
nop
nop
jae
jns
fidivrs
add
add
idivb
leave
nop
push
mov
leave
nop
jmp
push
mov
add
jns
sahf
js
cmp
add
popa
push
mov
xchg
ret
call
add
les
add
mov
sbb
push
mov
xchg
ret
xchg
js
add
add
jg
clc
repnz
nop
nop
jae
add
add
fiadds
sarb
repnz
nop
nop
jae
adc
add
inc
add
pushf
pushf
pand
push
mov
xchg
ret
add
test
add
add
mov
dec
sub
movsb
add
add
js
cmc
out
addb
stos
add
imul
inc
add
add
test
cmp
add
mov
xchg
ret
add
les
dec
pop
dec
fcmovnbe
push
add
sar
repnz
nop
nop
jae
popa
add
cmc
jmp
ror
clc
repnz
nop
nop
jae
add
pushf
jp
add
nop
push
mov
leave
nop
jmp
jns
lahf
add
rclb
mov
push
mov
xchg
ret
pusha
jno
xor
add
pushf
cmp
jmp
nop
nop
jae
add
add
add
jb
mov
add
clc
repnz
nop
nop
jae
add
add
aas
add
add
add
mov
push
push
mov
xchg
ret
add
nop
push
pushf
xor
jnp
fisttpll
push
mov
xchg
ret
sub
mov
push
add
pushl
clc
repnz
nop
nop
jae
add
or
add
pop
push
mov
xchg
ret
add
popf
add
incl
test
mov
inc
adc
repnz
nop
nop
jae
add
add
lahf
xchg
add
clc
repnz
nop
nop
jae
add
add
iret
lea
push
mov
xchg
ret
xchg
popa
add
imul
clc
repnz
nop
nop
jae
add
ret
add
push
mov
xchg
ret
lock
push
add
dec
clc
repnz
nop
nop
jae
popa
aaa
dec
xchg
cwtl
push
clc
repnz
nop
nop
jae
xchg
pushf
je
not
clc
repnz
nop
nop
jae
dec
add
in
fistl
sub
nop
jmp
sub
nop
xor
repnz
nop
nop
jae
xchg
add
aas
jno
pop
pop
fistpl
jmp
decl
sub
add
add
jp
jns
add
loope
leave
sub
repnz
nop
nop
jae
fidivs
sub
add
fwait
push
mov
xchg
ret
add
fcomi
dec
add
add
add
mov
xor
add
nop
jmp
sbb
jg
js
add
nop
push
mov
leave
nop
jmp
add
add
cli
fistpl
clc
repnz
nop
nop
jae
add
sbbl
sub
inc
add
aas
add
pushf
lock
outsb
cld
test
add
clc
repnz
nop
nop
jae
add
test
clc
add
add
clc
repnz
nop
nop
jae
sbb
add
clc
repnz
nop
nop
jae
pop
in
inc
insl
add
in
pop
nop
push
mov
leave
nop
jmp
add
add
add
mov
mov
xchg
ret
sub
add
add
in
add
and
sub
add
add
push
add
add
add
repnz
nop
nop
jae
or
orl
add
repnz
nop
nop
jae
add
adc
repnz
nop
nop
jae
add
jns
inc
ret
rep
clc
repnz
nop
nop
jae
add
add
clc
lock
push
push
mov
xchg
ret
jmp
add
add
add
and
add
jno
call
dec
add
pusha
add
nop
add
add
add
add
nop
jae
clc
add
add
add
inc
cmp
mov
leave
nop
jmp
add
add
xor
add
mov
add
repnz
nop
nop
jae
jns
xchg
add
pushf
jmp
inc
push
mov
xchg
ret
fiadds
add
pop
inc
and
add
repnz
nop
nop
jae
inc
lock
shl
icebp
mov
clc
repnz
nop
nop
jae
add
jns
dec
pushf
popa
shll
add
clc
repnz
nop
nop
jae
push
movsl
add
adc
add
add
addb
popl
jne
clc
repnz
nop
nop
jae
lahf
add
add
sub
pop
add
clc
repnz
nop
nop
jae
add
test
repnz
nop
nop
jae
add
jno
dec
nop
push
mov
leave
nop
jmp
pushf
add
aas
jno
fildl
add
inc
add
add
les
add
mov
add
mov
adc
repnz
nop
nop
jae
cmc
les
aas
add
nop
nop
jae
add
add
cmp
pop
nop
push
mov
leave
nop
jmp
dec
add
rolb
clc
add
cwtl
and
add
add
nop
push
mov
leave
nop
jmp
js
test
cmp
imul
xorl
incl
add
add
cmp
add
in
clc
nop
push
mov
leave
nop
jmp
add
pushf
add
add
jl
aas
mov
clc
repnz
nop
nop
jae
add
xor
cmp
nop
push
mov
leave
nop
jmp
xor
add
add
clc
repnz
nop
nop
jae
add
or
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
jb
push
sub
lahf
add
daa
rep
clc
repnz
nop
nop
jae
add
aas
add
add
add
and
add
clc
repnz
nop
nop
jae
add
sbb
add
nop
push
mov
leave
nop
jmp
add
add
adc
cld
nop
nop
jae
add
xchg
popa
pusha
add
add
clc
repnz
nop
nop
jae
add
xchg
xor
pop
mov
cld
nop
nop
jae
push
add
jbe
add
cmp
mov
clc
repnz
nop
nop
jae
xor
add
push
mov
xchg
ret
add
sbb
add
xchg
jne
sar
cld
nop
nop
jae
add
xor
dec
adc
repnz
nop
nop
jae
add
or
repnz
nop
nop
jae
add
pushf
add
add
nop
jmp
add
add
bound
mov
clc
repnz
nop
nop
jae
add
push
add
dec
jne
clc
repnz
nop
nop
jae
pushf
pushl
cmc
ror
push
mov
xchg
ret
push
adc
jb
test
add
inc
add
nop
push
mov
leave
nop
jmp
add
in
push
adc
push
mov
xchg
ret
nop
xchg
add
test
add
push
pop
push
clc
repnz
nop
nop
jae
add
sub
add
cli
clc
repnz
nop
nop
jae
add
add
clc
jbe
call
clc
repnz
nop
nop
jae
add
add
add
lahf
push
clc
repnz
nop
nop
jae
inc
add
fwait
add
add
add
push
mov
xchg
ret
add
push
add
jge
nop
push
mov
leave
nop
jmp
xor
push
out
push
add
add
repnz
nop
nop
jae
add
jbe
add
stos
add
fnstcw
clc
repnz
nop
nop
jae
add
dec
sahf
loopne
pop
push
mov
xchg
ret
pushf
inc
add
scas
pop
cltd
pop
clc
repnz
nop
nop
jae
add
incl
adc
pusha
push
mov
xchg
ret
xor
add
mov
xchg
sar
repnz
nop
nop
jae
xchg
inc
xor
js
xchg
in
clc
repnz
nop
nop
jae
push
lahf
sub
push
mov
add
test
add
nop
push
mov
leave
nop
jmp
jns
pusha
add
mov
nop
push
mov
leave
nop
jmp
jp
adc
add
mov
clc
repnz
nop
nop
jae
inc
test
add
inc
adc
and
add
repnz
nop
nop
jae
fisubrs
add
adc
pop
add
sub
mov
inc
addr16
push
mov
xchg
ret
add
add
add
in
add
out
clc
repnz
nop
nop
jae
xchg
add
leave
fistpl
push
mov
xchg
ret
adc
add
add
repnz
nop
nop
jae
pop
popf
lock
add
rolb
cld
nop
nop
jae
add
dec
add
test
pop
add
clc
repnz
nop
nop
jae
xor
or
add
clc
repnz
nop
nop
jae
add
add
cmp
fld1
push
mov
xchg
ret
jno
add
dec
add
mov
push
mov
leave
nop
jmp
add
push
push
and
add
nop
nop
jae
add
push
mov
nop
nop
jae
nop
add
sbb
add
add
push
mov
xchg
ret
add
add
add
addb
jae
add
add
repnz
nop
nop
jae
push
mov
clc
repnz
nop
nop
jae
add
cmc
add
cld
nop
nop
jae
add
inc
cli
arpl
in
leave
nop
jmp
test
add
fildl
in
imul
clc
repnz
nop
nop
jae
clc
aaa
dec
cmp
add
nop
push
mov
leave
nop
jmp
add
or
add
clc
repnz
nop
nop
jae
push
fwait
add
push
mov
xchg
ret
inc
add
add
dec
add
jmp
push
fiadds
pushf
add
js
mov
push
mov
xchg
ret
xchg
sahf
add
add
sbb
pop
push
push
mov
xchg
ret
inc
push
dec
add
add
clc
fdivr
cli
cwtl
pop
cmpsb
add
xor
jne
push
mov
xchg
ret
call
pushf
adc
xor
clc
repnz
nop
nop
jae
sbb
add
add
adc
or
clc
repnz
nop
nop
jae
movsl
add
mov
adc
add
add
icebp
mov
nop
push
mov
leave
nop
jmp
add
cmc
add
nop
nop
jae
add
add
xor
jle
call
movzwl
clc
repnz
nop
nop
jae
fistpl
push
push
push
push
mov
xchg
ret
add
add
pushf
push
nop
call
mov
xchg
ret
add
popa
in
cmp
add
add
fwait
clc
repnz
nop
nop
jae
add
add
add
fildl
mov
rclb
nop
jmp
ret
addb
test
add
fwait
push
mov
xchg
ret
incl
inc
test
adc
add
fistpl
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
sahf
push
adc
dec
adc
nop
push
mov
leave
nop
jmp
pushf
add
jno
loopne
mov
clc
repnz
nop
nop
jae
jp
jp
test
out
ss
mov
leave
nop
jmp
jmp
add
add
mov
lods
clc
repnz
nop
nop
jae
add
add
shl
clc
repnz
nop
nop
jae
cmc
add
jmp
add
es
clc
repnz
nop
nop
jae
or
push
mov
add
call
nop
push
mov
leave
nop
jmp
add
loopne
sbb
clc
repnz
nop
nop
jae
add
add
aad
clc
repnz
nop
nop
jae
add
inc
add
dec
scas
and
repnz
nop
nop
jae
pop
cmp
add
add
jmp
nop
nop
jae
add
inc
push
push
mov
xchg
ret
add
add
inc
call
clc
repnz
nop
nop
jae
xchg
add
call
clc
repnz
nop
nop
jae
inc
sbb
fwait
push
repnz
nop
nop
jae
push
add
adc
test
repz
clc
repnz
nop
nop
jae
add
pushf
enter
and
push
mov
xchg
ret
add
adc
jno
mov
les
add
add
nop
jmp
pop
xor
sub
add
sub
add
stos
leave
nop
push
mov
leave
nop
jmp
add
xchg
add
add
adc
arpl
repnz
nop
nop
jae
add
xor
add
testl
nop
push
mov
leave
nop
jmp
add
mov
xchg
ret
push
jno
pop
push
mov
xchg
ret
dec
add
add
add
nop
mov
mov
leave
nop
jmp
xor
add
xchg
push
clc
repnz
nop
nop
jae
adc
xchg
inc
pop
add
nop
push
mov
leave
nop
jmp
incl
add
add
neg
incl
push
add
dec
cmp
jns
add
nop
push
mov
leave
nop
jmp
add
rolb
add
adc
add
inc
or
add
je
xor
clc
repnz
nop
nop
jae
pushf
add
and
add
seto
in
leave
nop
jmp
push
test
fsubrl
push
clc
repnz
nop
nop
jae
inc
add
sbb
inc
xor
nop
push
mov
leave
nop
jmp
test
jb
and
add
mov
nop
push
mov
leave
nop
jmp
add
add
popf
add
mov
loop
inc
add
add
popa
add
add
push
pop
pop
clc
repnz
nop
nop
jae
in
add
add
sub
pusha
dec
push
nop
push
mov
leave
nop
jmp
add
movsl
jns
dec
jns
pfcmpge
nop
jae
jns
add
pop
add
dec
imul
nop
jae
add
adc
sub
out
nop
push
mov
leave
nop
jmp
add
shlb
add
lret
clc
repnz
nop
nop
jae
add
add
insl
xorl
clc
repnz
nop
nop
jae
add
shrb
nop
nop
jae
add
imulb
jmp
add
add
dec
mov
add
add
add
add
arpl
mov
push
clc
repnz
nop
nop
jae
mov
add
ja
in
cld
clc
repnz
nop
nop
jae
add
dec
add
repnz
nop
nop
jae
xchg
add
add
and
mov
leave
nop
jmp
add
popf
inc
incl
mov
jo
add
jp
add
fldt
stc
mov
nop
push
mov
leave
nop
jmp
fildl
add
inc
fidivrs
andl
in
leave
nop
jmp
add
add
mov
or
add
add
clc
repnz
nop
nop
jae
add
add
push
call
clc
repnz
nop
nop
jae
push
incl
test
mov
nop
push
mov
leave
nop
jmp
add
adc
lahf
add
push
pusha
push
mov
xchg
ret
pusha
test
add
add
or
mov
xchg
ret
add
dec
add
daa
xor
push
mov
xchg
ret
push
add
mov
add
int
clc
repnz
nop
nop
jae
fwait
clc
adc
add
add
out
mov
nop
push
mov
leave
nop
jmp
xor
test
add
clc
repnz
nop
nop
jae
inc
add
dec
fistl
in
lahf
add
add
add
cmp
add
inc
mov
mov
xchg
ret
movsl
push
cmpb
fidivrs
xchg
sbb
add
addb
cmp
repnz
nop
nop
jae
add
scas
jmp
dec
popf
inc
cs
nop
push
mov
leave
nop
jmp
add
add
mov
add
roll
repnz
nop
nop
jae
add
add
add
jae
repz
repnz
nop
nop
jae
add
add
cmp
nop
push
mov
leave
nop
jmp
sbb
add
add
push
mov
xchg
ret
add
push
lahf
push
jns
push
clc
repnz
nop
nop
jae
add
add
lahf
fidivs
mov
inc
add
sub
add
xor
push
clc
repnz
nop
nop
jae
adc
sahf
jns
add
call
clc
repnz
nop
nop
jae
add
add
fistpl
push
mov
xchg
ret
aaa
add
xchg
mov
push
mov
xchg
ret
add
movsl
jp
add
sti
je
clc
repnz
nop
nop
jae
pushf
fwait
fwait
jnp
sar
cld
nop
nop
jae
add
cmp
pushf
pop
add
mov
nop
push
mov
leave
nop
jmp
add
inc
ret
adc
cmpsl
mov
clc
repnz
nop
nop
jae
in
mov
add
add
mov
loop
mov
xchg
ret
inc
add
lock
add
clc
repnz
nop
nop
jae
add
add
fldt
repnz
nop
nop
jae
fiadds
adc
js
dec
jg
clc
repnz
nop
nop
jae
push
jns
inc
cwtl
push
add
js
inc
jmp
fdivr
repnz
nop
nop
jae
inc
add
xor
pop
clc
nop
push
mov
leave
nop
jmp
ss
pushf
push
add
jp
push
clc
repnz
nop
nop
jae
add
add
pusha
clc
xor
insl
push
push
mov
xchg
ret
movsl
add
add
add
add
push
nop
push
mov
leave
nop
jmp
add
js
dec
xor
into
lock
div
nop
push
mov
leave
nop
jmp
pop
lock
add
add
add
push
jae
mov
add
add
repnz
nop
nop
jae
aaa
pop
add
inc
and
repnz
nop
nop
jae
add
lahf
fiadds
add
add
outsb
lret
pushl
clc
repnz
nop
nop
jae
popa
rolb
mov
clc
repnz
nop
nop
jae
ss
jp
sahf
push
pop
addb
imul
cmp
push
mov
leave
nop
jmp
fildl
push
outsb
loope
test
call
nop
jmp
jns
test
fistpl
clc
repnz
nop
nop
jae
lahf
call
add
fists
repnz
nop
nop
jae
lock
jns
aas
push
aas
push
test
add
add
mov
xchg
ret
push
add
je
clc
repnz
nop
nop
jae
sahf
add
mov
clc
repnz
nop
nop
jae
add
fwait
add
clc
repnz
nop
nop
jae
xchg
add
add
nop
mov
nop
nop
jae
add
mov
add
add
and
xchg
xchg
ret
sbb
pushf
sahf
nop
add
popf
or
add
mov
clc
repnz
nop
nop
jae
add
add
fmulp
cmp
push
mov
xchg
ret
add
push
mov
clc
repnz
nop
nop
jae
pushf
add
add
or
repnz
nop
nop
jae
push
pushf
adc
sbb
fsubr
mov
nop
push
mov
leave
nop
jmp
add
pusha
aas
aas
add
nop
nop
jae
pusha
sbb
cmp
mov
leave
nop
jmp
in
insl
inc
add
fwait
add
add
sbb
pop
push
mov
xchg
ret
add
add
sub
je
clc
repnz
nop
nop
jae
add
mov
add
add
clc
repnz
nop
nop
jae
add
push
push
clc
repnz
nop
nop
jae
mov
add
add
subl
push
mov
leave
nop
jmp
movsl
add
push
sub
adc
fwait
nop
push
mov
leave
nop
jmp
rolb
in
push
movzwl
clc
repnz
nop
nop
jae
add
add
push
fiadds
mov
xchg
ret
or
push
inc
pusha
add
add
clc
repnz
nop
nop
jae
adc
fistpl
push
mov
xchg
ret
inc
add
add
add
roll
nop
nop
jae
push
push
add
popf
add
pop
push
mov
xchg
ret
push
adc
add
add
popa
out
dec
sub
repnz
nop
nop
jae
cmp
js
add
add
fidivrs
push
mov
xchg
ret
add
rclb
push
mov
leave
nop
jmp
clc
push
add
adc
dec
clc
repnz
nop
nop
jae
adc
sahf
push
mov
dec
sub
repnz
nop
nop
jae
pusha
mov
test
xchg
jle
add
nop
jmp
lahf
xor
fistpl
int3
mov
or
add
add
aas
add
movsl
add
add
andb
add
in
pop
mov
clc
repnz
nop
nop
jae
push
add
cld
nop
nop
jae
push
in
add
add
sahf
stc
movzwl
nop
push
mov
leave
nop
jmp
add
mov
push
aad
jmp
jp
nop
push
mov
leave
nop
jmp
add
add
cld
nop
nop
jae
insl
sahf
push
popf
decl
hlt
into
push
mov
add
pop
clc
repnz
nop
nop
jae
sub
ret
incl
add
and
cld
nop
nop
jae
fwait
add
inc
add
mov
add
add
leave
nop
jmp
add
adc
mov
xchg
nop
jmp
add
push
mov
xchg
ret
adc
adc
pushf
add
js
dec
cld
nop
nop
jae
add
test
push
xorl
clc
repnz
nop
nop
jae
aaa
sub
mov
clc
repnz
nop
nop
jae
popf
sub
add
test
nop
push
mov
leave
nop
jmp
test
or
adc
repnz
nop
nop
jae
add
add
ret
aaa
mov
clc
repnz
nop
nop
jae
inc
add
add
add
cld
nop
push
mov
leave
nop
jmp
xchg
add
add
add
and
add
push
mov
cmp
xchg
call
add
inc
sub
repnz
nop
nop
jae
add
add
cmpsb
add
xor
test
repnz
nop
nop
jae
add
add
push
mov
leave
nop
jmp
add
scas
sub
push
clc
repnz
nop
nop
jae
rolb
jno
popa
popf
add
rcl
movsl
clc
repnz
nop
nop
jae
add
js
cmc
add
mov
jne
clc
repnz
nop
nop
jae
cmc
dec
add
stos
push
mov
xchg
ret
add
jp
add
add
aas
rep
clc
repnz
nop
nop
jae
sub
add
xchg
add
xchg
mov
push
mov
xchg
ret
add
jb
add
jb
popa
mov
clc
repnz
nop
nop
jae
add
mov
add
in
lea
nop
push
mov
leave
nop
jmp
popa
popa
add
jp
push
inc
stos
add
cwtl
sub
add
push
push
mov
xchg
ret
pushf
cmc
sbb
lahf
add
add
clc
repnz
nop
nop
jae
add
adc
call
inc
sub
cld
nop
nop
jae
jb
addb
add
or
add
xor
push
mov
xchg
ret
push
add
mov
leave
nop
jmp
push
xor
xor
ja
clc
repnz
nop
nop
jae
add
shlb
add
repnz
nop
nop
jae
movsl
pushf
push
jno
clc
repnz
nop
nop
jae
add
mov
xchg
ret
add
add
add
clc
add
clc
repnz
nop
nop
jae
add
ret
enter
adc
clc
repnz
nop
nop
jae
add
imulb
add
push
mov
add
movsl
mov
add
roll
sahf
push
mov
cld
nop
nop
jae
dec
add
add
add
addl
cmp
push
mov
leave
nop
jmp
jno
dec
add
aas
pop
lods
clc
repnz
nop
nop
jae
scas
lahf
pushf
inc
push
add
mov
clc
repnz
nop
nop
jae
movsl
add
add
popa
nop
push
mov
leave
nop
jmp
add
sub
xor
add
add
clc
repnz
nop
nop
jae
add
jb
add
testl
xchg
ret
push
sbb
pop
push
clc
repnz
nop
nop
jae
sahf
pushf
add
add
jmp
sbb
js
add
push
add
add
je
nop
push
mov
leave
nop
jmp
add
pusha
dec
sub
mov
xchg
ret
les
dec
add
add
clc
repnz
nop
nop
jae
test
les
mov
jne
clc
repnz
nop
nop
jae
aaa
incl
inc
outsb
add
addb
mov
add
or
repnz
nop
nop
jae
add
movsl
add
xchg
cld
push
mov
xchg
ret
nop
add
nop
adc
jb
add
out
push
add
jns
dec
push
nop
push
mov
leave
nop
jmp
sub
add
add
mov
clc
repnz
nop
nop
jae
ret
add
add
add
add
repnz
nop
nop
jae
in
add
inc
add
roll
mov
xchg
ret
add
xchg
imul
clc
repnz
nop
nop
jae
add
add
xchg
insl
cmpsb
add
fs
pusha
clc
repnz
nop
nop
jae
in
add
mov
faddp
sub
add
push
mov
leave
nop
jmp
jp
fcmovnb
sahf
ss
mov
or
add
repnz
nop
nop
jae
add
dec
sub
aaa
jb
mov
clc
repnz
nop
nop
jae
add
lds
cld
nop
nop
jae
add
add
pusha
jnp
sar
cld
nop
nop
jae
push
fisubrs
mov
nop
nop
jae
inc
pusha
incl
in
add
dec
nop
push
mov
leave
nop
jmp
clc
add
les
add
add
repnz
nop
nop
jae
movsl
add
add
sti
mov
clc
repnz
nop
nop
jae
add
add
sub
add
add
dec
xchg
xchg
ljmp
ret
add
nop
add
jp
add
fs
push
clc
repnz
nop
nop
jae
push
jp
add
add
lret
xor
add
clc
repnz
nop
nop
jae
add
ret
sub
jecxz
rolb
repnz
nop
nop
jae
jp
movsl
add
xor
sub
repnz
nop
nop
jae
dec
in
add
popf
add
add
mov
cmp
repnz
nop
nop
jae
xchg
push
clc
sub
dec
cmp
repnz
nop
nop
jae
xor
inc
jne
clc
repnz
nop
nop
jae
lock
add
dec
xchg
addb
push
mov
xchg
ret
add
add
add
pushf
jp
int3
inc
lret
mov
clc
repnz
nop
nop
jae
add
push
jns
pop
clc
repnz
nop
nop
jae
add
sbb
jp
dec
add
add
nop
push
mov
leave
nop
jmp
add
add
add
adc
xor
clc
repnz
nop
nop
jae
inc
add
fidivs
inc
call
cld
nop
nop
jae
add
nop
push
mov
leave
nop
jmp
add
clc
fidivrs
aas
int
mov
cmp
test
mov
add
add
sub
clc
repnz
nop
nop
jae
fcmovnb
js
jb
sub
add
push
mov
xchg
ret
fwait
add
jb
add
push
mov
leave
nop
jmp
push
test
add
movsl
add
lahf
pop
push
mov
xchg
ret
add
push
add
ret
push
clc
repnz
nop
nop
jae
test
add
adc
inc
add
test
and
js
inc
scas
add
add
push
pop
nop
push
mov
leave
nop
jmp
sub
inc
add
add
js
pop
push
mov
xchg
ret
xor
add
add
jae
repnz
nop
nop
jae
add
add
repnz
add
clc
repnz
nop
nop
jae
add
pushf
jmp
pusha
jecxz
clc
repnz
nop
nop
jae
fwait
scas
cmc
xchg
sub
add
fwait
adc
add
repnz
nop
nop
jae
add
push
testl
push
clc
pushl
xor
jecxz
clc
repnz
nop
nop
jae
nop
lock
add
add
add
rclb
jmp
add
popf
add
pushf
add
div
clc
repnz
nop
nop
jae
add
add
mov
leave
nop
jmp
add
popa
push
rolb
add
add
popa
push
mov
xchg
ret
test
fwait
cmc
add
popf
leave
push
clc
repnz
nop
nop
jae
add
lock
mov
or
add
add
clc
repnz
nop
nop
jae
sub
fistl
nop
nop
jae
xor
mov
add
add
repnz
nop
nop
jae
incl
add
inc
push
clc
repnz
nop
nop
jae
add
xor
push
add
push
add
repnz
add
add
ss
dec
cmp
repnz
nop
nop
jae
add
add
add
add
cmp
clc
repnz
nop
nop
jae
add
fwait
jp
adc
pusha
out
inc
clc
repnz
nop
nop
jae
add
mov
add
repnz
nop
nop
jae
xchg
fsubrp
pusha
xchg
mov
push
mov
xchg
ret
add
clc
in
add
mov
clc
repnz
nop
nop
jae
push
scas
push
mov
les
repnz
nop
nop
jae
xor
push
bound
fldl
cld
nop
nop
jae
addb
incl
or
scas
mov
nop
push
mov
leave
nop
jmp
add
xchg
popf
pop
clc
repnz
nop
nop
jae
jb
xor
inc
clc
pushf
xchg
add
add
add
clc
repnz
nop
nop
jae
add
add
cmp
mov
outsl
loopne
repnz
nop
nop
jae
inc
pushf
add
sub
shlb
inc
add
dec
clc
fwait
add
add
orl
mov
call
nop
jmp
add
mov
clc
repnz
nop
nop
jae
adc
cmp
cld
nop
nop
jae
add
dec
push
nop
push
mov
leave
nop
jmp
dec
xor
add
pop
cwtl
rol
add
sahf
add
xor
add
jns
jb
push
add
aad
ficoms
nop
jmp
add
mov
mov
pop
and
nop
push
mov
leave
nop
jmp
test
add
mov
clc
repnz
nop
nop
jae
fildl
add
ret
and
nop
push
mov
leave
nop
jmp
add
insl
push
call
clc
repnz
nop
nop
jae
dec
jp
add
xor
clc
repnz
nop
nop
jae
add
push
dec
push
mov
xchg
ret
ret
push
add
push
js
add
pop
mov
nop
push
mov
leave
nop
jmp
add
add
add
rclb
nop
jmp
add
add
add
and
repnz
nop
nop
jae
ret
js
add
jp
lss
clc
repnz
nop
nop
jae
add
add
aam
push
add
add
add
cmp
mov
mov
aam
call
pusha
dec
test
add
icebp
stc
push
popw
jle
push
inc
push
repnz
xor
movsl
add
imul
push
bnd
cmp
add
or
add
popf
mov
add
mov
adc
add
add
dec
icebp
rol
adc
mov
pop
adc
sub
add
cmpl
addb
outsb
out
dec
cmpsb
add
dec
sub
add
mov
hlt
and
std
addb
dec
cmp
cmp
dec
and
mov
bound
add
add
pop
add
add
jle
add
nop
sbb
fimuls
shl
add
cmc
push
popf
xchg
mov
push
or
add
add
ds
into
js
sub
fstps
outsl
enter
pusha
mov
jg
jmp
ds
jmp
gs
or
add
stc
loop
push
add
das
int
sbb
add
in
repz
add
dec
and
add
adc
jne
mov
add
stos
sbb
lock
pusha
adc
pop
addb
lods
data16
add
or
sbb
pop
mov
add
add
inc
je
mov
xchg
rcl
jmp
cmp
pop
pop
pushw
dec
mov
add
fdivr
sahf
xchg
rclb
mov
add
jne
cmc
int3
rorb
add
fwait
arpl
aas
mov
push
xchg
flds
add
gs
int3
cmpl
add
xor
lods
sbbl
roll
jmp
inc
dec
sbb
inc
pop
add
adc
ret
clc
fsub
jno
repz
mov
add
add
lods
add
mov
daa
sbb
dec
jbe
add
push
sbb
push
icebp
jge
pop
add
add
insb
inc
into
adc
shrl
add
sbb
add
addb
cld
shlb
jb
add
adc
leave
outsl
xchg
add
mov
pop
outsl
xlat
and
add
pop
in
aaa
sbb
add
pop
push
sbb
add
fpatan
inc
scas
push
pop
cmc
and
add
push
loopne
dec
mov
int
inc
cld
lcall
sub
add
adc
movd
jmp
add
bound
pop
insl
movsb
add
push
or
out
dec
xor
mov
fdiv
fistps
fldcw
sbb
sahf
test
push
add
mov
mov
addr16
adc
fldl
imul
mov
jno
in
mov
add
popa
pop
lods
fs
enter
adc
add
add
shr
psrlw
orl
add
inc
bound
xor
ja
mov
mov
add
mov
idivb
xchg
push
sbb
push
lods
mov
mov
mov
add
jne
daa
ljmp
jbe
stos
mov
lods
data16
fdiv
sub
push
dec
and
add
xchg
aad
adc
mov
scas
push
pxor
add
fiaddl
add
xor
fsubr
inc
xlat
fnstenv
movsl
push
add
rcr
call
push
lds
out
clc
jbe
adc
mov
add
out
add
pop
cmp
loop
mov
mov
dec
popa
cmp
mov
push
ja
sti
rorl
add
in
push
add
jbe
add
dec
inc
ds
add
jne
scas
enter
cli
outsb
js
inc
flds
add
cwtl
testb
add
notl
adc
movsb
add
hlt
add
stos
mov
sbb
jne
fstpt
fildll
add
or
add
add
sbb
push
pusha
outsb
xchg
rolb
add
or
adc
jne
std
inc
cmp
icebp
or
add
lret
xchg
addb
cmp
add
dec
ljmp
inc
ja
pop
inc
inc
in
addr16
iret
cwtl
add
dec
and
lea
dec
jp
mov
divl
inc
notb
pusha
xchg
dec
add
add
add
xor
mov
add
imul
mov
stos
add
xor
sub
add
ljmp
jo
sbb
jle
add
mov
or
add
shl
out
xchg
arpl
insl
jb
mov
add
fbstp
aas
test
lods
add
add
add
add
mov
jmp
pusha
scas
add
mov
add
add
mov
outsb
fdivrs
adc
push
sbb
inc
xchg
lods
add
call
test
add
add
test
add
rcrb
addb
sahf
or
xor
cmp
adc
add
cmp
xor
xchg
int
nop
xchg
and
add
dec
mov
jnp
loop
aas
mov
test
add
add
test
add
int
xlat
popa
bound
add
push
clc
mov
jg
jge
pop
mov
xchg
test
add
aam
js
popf
dec
loop
add
loopne
std
cmpsb
add
push
lea
hlt
or
pop
rcrl
cli
addb
test
sbb
jle
imul
shrb
sbb
push
sti
jae
imul
add
add
sbb
daa
jl
jecxz
xchg
xlat
and
stc
mov
xor
mov
add
jmp
jae
pop
mov
push
mov
add
mov
push
jg
ljmp
push
hlt
movl
adc
and
add
jecxz
cmpsb
add
addb
fimuls
sbb
add
add
inc
or
add
dec
mov
xchg
popf
cli
xor
movsb
add
mov
mov
fadd
aam
insl
jecxz
add
dec
mov
mov
out
mov
jbe
in
int3
jo
sub
les
fnstenv
push
arpl
pop
xor
add
cmpsl
paddq
and
add
add
cmp
imulb
jae
dec
mov
fnclex
sbb
bnd
jle
push
mov
orl
mov
lods
jb
pushf
xchg
movsb
add
jae
sbb
or
mov
jmp
daa
push
or
add
fsubrl
add
sub
sbb
ss
pop
mov
add
mov
add
add
test
add
lcall
iret
popa
push
xor
stos
add
into
pop
lret
pop
fisubs
add
addb
xchg
xchg
mov
inc
jp
fldt
add
sbb
in
add
xchg
aad
mov
inc
in
add
pusha
mov
xchg
fwait
mov
mov
loop
pop
in
testl
add
cmp
pushf
jmp
push
push
mov
jmp
sbb
inc
js
stos
mov
add
xchg
push
test
add
jne
lods
mov
int
pushf
cmp
mov
add
xchg
push
xor
jns
in
std
sbb
xchg
ret
sbb
test
xchg
add
icebp
fcompp
incb
jmp
iret
cmpsl
cmpl
daa
mov
mov
add
cmc
dec
sub
mov
ret
addr16
jl
cmp
add
js
or
add
out
add
scas
add
sti
add
add
add
inc
aaa
daa
adc
add
push
mov
test
add
inc
pushf
sar
mov
jo
add
xor
lds
add
fs
adc
clc
xor
add
mov
sub
add
add
adc
cmp
fisttpll
xchg
mov
jge
add
jmp
cwtl
mov
jle
int
jnp
push
add
mov
outsb
lea
cmp
push
and
ret
or
mov
add
mov
stc
pop
xor
in
mov
add
inc
mov
icebp
jl
or
add
enter
loopne
cmovl
cmp
fcoml
imul
inc
movsb
add
pop
pusha
leave
jmp
push
add
jl
out
push
add
xor
mov
cmp
rorl
lahf
clc
insb
sarl
add
push
gs
xor
mov
mov
stos
add
pop
add
add
sbb
add
cmp
add
aas
adc
or
add
xchg
lock
mov
add
movaps
add
xchg
arpl
imul
xchg
fndisi(8087
or
or
add
dec
addb
inc
add
ret
icebp
nop
jae
pop
sarb
lahf
shll
stc
addl
in
add
addb
mov
sub
add
aam
pop
lods
mov
sub
add
adc
and
add
ds
cmp
add
arpl
push
add
imulb
dec
jl
call
add
add
faddl
add
test
add
xchg
test
push
jb
sarl
mov
lea
sbb
sbb
xor
mov
ds
jno
xchg
dec
mov
add
xchg
push
inc
sti
adc
test
movsl
pop
sub
je
dec
sbb
cmp
int
addb
loopne
push
vshufps
stc
xor
push
je
cmp
lods
add
xchg
add
imul
add
push
push
xor
scas
add
int
pushf
xchg
add
add
fdivs
test
add
and
add
push
add
jp
lock
push
cmp
fnstenv
xchg
cwtl
js
hlt
jbe
xchg
dec
jmp
mov
jne
lret
push
pop
lds
aam
out
gs
imul
cli
and
add
lcall
sar
loope
arpl
adc
add
addb
fcoms
jecxz
outsb
mov
stos
cltd
cmp
dec
scas
shl
inc
repnz
inc
or
add
fldenv
fidivs
imul
scas
movsb
add
xchg
xchg
je
add
cmp
add
mov
add
inc
pop
and
add
nop
mov
and
add
loop
dec
mov
leave
insb
inc
ds
out
sub
add
jle
addb
cmpsb
add
dec
sbb
ja
add
insl
lret
repz
and
push
add
jne
data16
xor
cld
xchg
shrl
arpl
or
and
outsl
adc
test
add
aaa
gs
shrl
add
xchg
fisubl
push
add
fdiv
shrb
insb
rol
fnstcw
in
add
mov
pop
ds
inc
shrb
add
out
and
push
add
jecxz
add
push
cmp
jecxz
insl
leave
ljmp
add
popf
add
add
add
sbb
ret
dec
push
xchg
add
jb
sbb
xor
mov
add
add
outsl
push
add
cmpsl
aam
add
rcr
cltd
or
add
add
clc
push
jo
cwtl
lock
inc
sub
add
add
adc
xor
sub
add
test
cld
or
add
and
add
xchg
repz
and
add
and
add
jmp
xor
jns
mov
add
pop
jmp
or
add
or
cmpsl
push
mov
sbb
aam
push
xchg
add
pop
les
add
add
add
cmp
loope
bound
push
movsl
aaa
popf
std
xor
sub
pextrw
push
push
and
add
lret
sub
add
add
repz
add
testl
sub
add
adc
pop
or
mov
fists
mov
adc
andl
mov
repnz
adc
sahf
xor
add
jb
add
out
and
add
or
add
ficomps
jns
mov
mov
and
add
cmp
lret
lahf
inc
test
mov
push
stos
sub
add
add
dec
gs
dec
push
call
adc
add
lods
mov
add
add
pop
lret
xchg
cwtl
les
mov
mov
xchg
add
xor
in
arpl
add
xchg
add
sub
cwtl
or
add
add
out
aad
and
movb
add
lret
lcall
iret
or
loope
add
push
subl
push
sti
jg
ror
add
add
add
xchg
xchg
fcoml
sbb
mov
dec
cltd
mov
imul
fisubrl
add
xchg
movl
hlt
jno
bound
add
adc
xchg
ret
insl
aas
pop
pop
push
push
mov
add
aam
pop
mov
and
add
loop
add
add
bound
sub
hlt
addr16
cmpl
dec
stos
pop
out
jno
addb
jb
jp
add
pop
shr
or
add
into
pop
sbb
pop
sub
add
cmpsb
add
jmp
inc
rcr
push
into
int3
sbb
add
sub
add
add
add
sbb
ljmp
imul
fs
xchg
js
cmp
add
xchg
pushf
xor
mov
add
and
adc
add
out
push
sbb
inc
adc
push
pop
dec
in
xchg
push
xchg
cmp
insl
dec
in
and
mov
leave
fbstp
sub
add
stos
add
mov
add
adc
sub
imul
add
inc
inc
xor
mov
add
pop
testl
movb
fs
mov
jp
scas
add
mov
or
cmp
xorl
mov
sbb
jnp
adc
std
jns
add
add
pop
cli
dec
or
add
mov
cmp
out
ja
push
xchg
inc
push
rcl
add
mov
mov
add
and
add
add
mov
add
fsubr
push
shlb
fs
add
popa
jo
add
dec
xor
pushf
jo
popa
xor
and
add
add
movsb
add
mov
test
add
mov
add
imul
add
or
add
sbb
insb
out
iret
adc
test
add
or
add
mov
add
jno
push
pusha
popa
add
add
mov
xor
or
mov
sti
jb
add
sub
add
or
add
aam
jno
jbe
imulb
pop
imul
dec
push
cli
cmp
jbe
addb
out
jnp
loopne
add
mov
loopne
lods
add
push
leave
inc
cwtl
jl
rcrb
stos
call
sub
and
adc
loope
jae
adc
add
out
scas
add
das
xchg
aaa
and
add
and
add
push
add
adcl
fucomp
fwait
add
push
daa
add
into
outsl
jmp
shll
xchg
in
aam
mov
add
sub
add
sahf
out
pop
adc
mov
inc
jg
std
cmp
fidivrl
daa
ljmp
sbbl
mov
add
add
adc
mov
cwtl
sarl
add
daa
mov
addb
test
add
add
in
add
mov
add
pushf
jnp
push
add
inc
shll
add
lret
add
add
mov
sbb
add
mov
add
dec
stos
add
and
loop
test
add
mov
xchg
scas
add
xchg
push
add
adc
push
add
fistpl
rcll
mov
adc
xchg
cmc
lahf
fnstenv
cli
shlb
repz
xchg
sahf
pop
lcall
dec
push
in
xchg
add
add
adc
js
jns
mov
test
add
add
sar
xchg
jnp
insl
xor
or
or
add
xor
test
add
dec
outsl
mov
mov
mov
add
mov
add
js
dec
add
and
lcall
mov
pop
add
add
push
add
adc
psubq
push
dec
mov
and
add
shll
adc
mov
insl
fstl
mov
add
inc
ret
pop
call
rclb
int
test
add
add
mov
mov
add
fsubrs
cmc
or
add
add
cld
jbe
add
mov
ds
insl
adc
loope
mov
daa
mov
add
cmp
pop
cmp
dec
loope
ds
dec
mov
repz
into
ret
push
add
negl
mov
mov
add
dec
jne
lcall
enter
push
mov
add
xchg
push
adc
sbb
add
mov
les
loope
addb
sahf
fimuls
stos
add
mov
ss
test
add
add
xchg
pop
dec
shlb
inc
pop
clc
lret
xor
add
xchg
xor
pop
cld
mov
xchg
jl
add
xor
lods
mov
pop
ss
add
sub
shlb
movsb
add
mov
add
clc
cmpsl
mov
add
mov
add
xchg
ffreep
cmp
dec
jp
aad
pop
int
jb
add
jns
rclb
add
add
nop
cmp
add
push
push
add
or
add
stc
dec
xchg
mov
add
mov
add
cmp
mov
sbb
pop
sbb
outsl
stos
add
pop
or
add
jg
inc
push
jge
add
fisubrl
out
xchg
gs
out
dec
outsl
ss
stos
lds
iret
xor
xor
cwtl
add
add
je
add
inc
xchg
ret
push
add
push
movsb
add
aam
push
fistpll
mov
test
sub
icebp
jns
out
das
loope
popf
mov
inc
sub
add
in
lret
pop
xchg
xchg
fsubl
add
fwait
adc
xchg
test
addb
dec
ljmp
mov
sbb
adc
sbb
push
xchg
inc
inc
cmpsl
aam
stc
out
jge
sub
add
les
add
sbb
addb
cmp
mov
push
loop
inc
les
or
jmp
cli
and
add
shl
std
aaa
cmp
add
push
add
push
cli
lods
cmp
mov
scas
add
mov
lcall
cmp
add
mov
add
je
scas
add
inc
mov
add
outsb
sbb
and
add
xchg
or
add
add
add
cwtl
jp
xor
add
fidivrs
inc
or
lea
std
mov
push
hlt
jecxz
inc
fidivrs
popf
enter
in
lret
mov
xor
in
xchg
and
mov
bound
test
add
into
addb
jns
or
dec
repnz
ja
xchg
lea
add
xor
xor
out
lea
inc
fisubs
cli
push
add
shll
jecxz
add
fbld
add
push
mov
fistpl
out
xor
add
sti
fstps
adc
aas
aas
mov
add
lods
add
pop
adc
add
mov
sbb
stos
out
lock
add
adc
pop
fidivs
add
add
adc
mov
outsl
adc
push
lahf
int
inc
mov
xchg
add
pop
or
test
jb
ret
shll
adc
mov
insl
inc
or
add
inc
out
push
ss
inc
loopne
and
add
sbb
nop
dec
lret
lret
cmp
add
loopne
sbb
sbb
les
add
mov
test
lret
push
imul
cli
xor
push
inc
xchg
ss
xchg
mov
xrelease
add
rcrl
and
add
inc
sbb
sahf
lods
add
push
mov
insb
aam
test
add
jmp
jmp
add
inc
add
add
mov
add
ficompl
dec
rcrb
pop
jns
in
xor
cmp
and
add
addr16
ds
adc
mov
add
add
jg
js
mov
loope
inc
jl
dec
dec
fimuls
sbb
loop
cmp
mov
inc
leave
fdiv
enter
add
pusha
fs
add
mov
add
or
add
outsl
add
sub
xor
xor
adc
pop
inc
mov
mov
rcl
or
and
xor
add
mov
xchg
dec
fsubrs
call
imul
add
jle
jnp
repnz
add
adc
jl
or
dec
insl
pop
repz
and
add
insb
jae
fadds
sub
add
and
xchg
daa
lods
pushl
sub
add
sbb
js
or
mov
add
xchg
not
push
xor
jecxz
add
mov
add
add
pop
test
stos
add
mov
cmp
add
dec
xchg
clc
lcall
sub
cmp
in
loopne
add
shrb
mov
and
add
add
jg
gs
sbb
add
sub
xlat
loopne
add
jg
out
pop
mov
lahf
sub
add
inc
dec
or
add
add
xchg
add
or
and
add
xchg
xor
mov
and
add
pop
inc
and
add
call
xor
push
add
into
ja
add
call
iret
je
mov
leave
rcll
add
repz
pop
push
add
bound
inc
xchg
ret
push
add
or
xchg
popa
aas
adc
add
add
xor
mov
inc
push
push
pop
lea
cmp
dec
scas
pop
out
inc
or
add
mov
push
fwait
dec
xchg
and
add
xor
pop
scas
add
cmp
pop
sbb
hlt
int3
mov
fsubs
cld
sahf
cmp
jne
insl
out
sub
sbb
mov
adcl
popl
dec
add
add
fwait
aad
sub
cmp
xchg
insb
or
add
aam
fwait
inc
mov
add
cmp
shll
scas
pop
jecxz
lds
pop
adc
add
mov
repnz
push
xor
inc
imulb
inc
addb
cli
testl
ret
insb
adc
jge
ds
divl
ss
sarl
cmpsb
add
push
dec
fbstp
fdivl
add
loope
arpl
add
sbb
add
fwait
pop
mov
test
add
and
add
adc
adc
mov
add
rcrl
pop
xlat
loope
add
push
pop
inc
xor
daa
pop
out
mov
and
add
mov
push
jbe
int
pop
popa
adc
ret
xchg
inc
mov
mov
iret
jg
xchg
bound
jne
sub
add
dec
addr16
orl
add
add
add
xor
call
xor
push
repnz
add
rcll
xchg
inc
mov
xchg
xchg
add
sbb
sub
sbb
lock
jns
push
jecxz
popf
add
add
push
js
mov
cwtl
fsub
test
add
push
and
jmp
daa
push
jp
leave
mov
push
outsb
inc
or
add
clc
lods
mov
imul
cmpsl
cmp
rorl
add
cmpsl
enter
pop
lret
lods
add
jbe
pop
xor
add
add
and
add
add
ja
pushf
or
add
add
and
int
cmp
out
fdivr
xchg
ja
add
mov
add
push
fisubrs
add
push
add
test
add
cmpl
int3
lea
mov
add
mov
add
xor
bound
movsl
addb
in
ss
mov
add
imul
inc
cmpsl
fldl
xor
add
mov
rep
int3
out
add
add
add
adc
inc
insl
adc
add
ljmp
les
xchg
cld
scas
add
dec
add
jmp
in
ret
cltd
filds
jo
movsb
add
sbb
add
dec
sub
mov
mov
add
ficompl
scas
add
or
pop
dec
ds
dec
push
cmp
jge
sar
xchg
xlat
out
ds
aas
jmp
mov
pop
fdivl
arpl
push
gs
xchg
pop
stc
jl
push
add
rcrb
lods
mov
dec
mov
add
dec
mov
push
mov
pop
shrl
call
imul
xchg
add
add
xchg
mov
add
add
insb
decb
lea
add
rolb
test
mov
mov
fs
movsb
add
aas
lahf
rorl
add
add
add
add
popf
test
add
jb
sbb
cltd
sbb
inc
in
lea
adc
cli
add
add
out
cmp
pop
inc
jb
stos
add
loop
adc
pop
int
xlat
shlb
rcrl
or
add
roll
add
imulb
add
push
lcall
add
loopne
mov
add
popa
and
add
scas
add
lods
add
add
out
dec
dec
into
add
add
mov
bound
jmp
xchg
sub
add
rcrl
mov
fs
add
pop
push
jbe
pop
popa
in
divl
mov
pop
add
mov
rcll
iret
pop
sti
sbb
mov
pushf
jl
lods
add
enter
add
push
mov
mov
or
add
mov
fxch
push
or
add
addr16
aas
inc
mov
push
ja
lret
jmp
scas
fimull
jmp
cmpsl
inc
cltd
dec
mov
cmpsb
add
pop
and
loop
add
dec
inc
dec
shl
add
or
add
arpl
mov
sub
add
repz
or
ljmp
add
xchg
pop
cmpsb
add
mov
add
sahf
sbb
div
push
pop
pop
sub
add
or
pop
sbb
ds
loop
push
xchg
jecxz
push
add
shlb
mov
adc
push
test
add
xor
fbld
dec
out
loope
leave
or
test
and
scas
add
in
repz
in
lret
mov
addb
mov
inc
fstp
mov
lock
inc
xchg
ficoml
add
int
mov
pop
addr16
jo
add
in
adc
lret
rcrb
sub
mov
add
loopne
add
jnp
adc
xor
movsl
mov
outsl
lods
push
add
outsb
lods
dec
shrb
adc
pop
gs
xor
setne
add
imul
cwtl
pop
repnz
mov
xchg
les
dec
lret
pop
rep
ja
and
add
ja
nop
ret
mov
dec
les
ret
das
cld
test
add
sub
inc
mov
rcrl
xchg
sub
add
clc
dec
jnp
add
lods
rcrb
cmpsl
mov
cld
dec
jne
addb
lock
jg
lock
lea
dec
and
add
add
add
pushw
sar
imul
repz
add
xor
sbb
les
outsb
test
add
sbb
subl
jle
pop
xor
mov
dec
cmp
and
add
push
add
inc
cmp
test
add
jnp
add
and
add
inc
push
insb
add
pop
push
inc
shlb
add
xchg
pop
adc
shrl
fistps
cmp
inc
loop
jae
cmp
cmp
incb
add
pop
bound
ja
add
mov
add
adc
fcoml
stc
lea
gs
lahf
inc
adc
push
sbb
ja
cmpsb
add
sub
add
sub
fs
stos
ret
xor
pop
cltd
dec
add
push
add
cltd
adc
mov
add
sbb
and
add
ss
mov
add
xchg
xbegin
dec
inc
sbb
repz
add
test
add
add
fistl
xchg
clc
sti
jle
or
add
je
imul
add
and
fsubs
pop
aam
adc
mov
add
jge
les
add
push
add
push
in
insb
or
add
loop
shlb
mov
jp
movsl
push
mov
fstpt
add
scas
loope
fisubrs
cwtl
mov
add
fdivp
test
or
mov
add
and
scas
add
pushf
push
stos
js
add
stc
test
add
add
aad
mov
jbe
addb
mov
addr16
xchg
loope
cmp
faddl
add
xchg
mov
mov
enter
cmp
push
pop
mov
jmp
add
add
stc
sub
mov
add
jo
pop
into
shl
rep
add
pop
stos
add
stc
mov
pop
fcomps
clc
scas
mov
add
xchg
jae,pt
popa
ret
jmp
sub
add
cwtl
clc
in
pop
sbb
add
mov
into
add
sub
jbe
add
mov
jno
shll
mov
in
cltd
and
add
adc
imul
sar
mov
or
repnz
inc
push
pop
js
adcl
insb
pop
add
add
sysret
cmp
cltd
lods
pusha
inc
cli
inc
and
in
popa
bound
aad
fwait
jecxz
das
and
mov
add
fcmovnbe
jg
sbb
divl
xor
inc
xor
aas
popf
daa
xor
push
pop
add
add
add
mov
cmp
into
pop
sbbl
sbb
ja
sbb
add
add
push
cmp
add
loop
stos
add
inc
mov
pushf
pop
jmp
or
cmp
stos
add
xchg
mov
inc
pop
mov
add
cmp
add
jg
inc
mov
xor
add
ror
enter
sahf
pop
push
pop
shll
js
fstp
push
rorb
mov
adc
sahf
insb
rcrb
or
fadds
lock
fisubrl
out
sbb
xor
push
add
sbb
stos
add
xor
addb
xor
and
mov
mov
and
loop
xchg
testl
sbb
arpl
mov
add
add
lods
add
mov
cwtl
jecxz
mov
scas
add
push
sub
add
dec
push
dec
mulb
pop
xlat
push
add
shrb
popa
addr16
mov
add
sbb
testb
sbb
push
rcll
add
add
push
dec
das
pop
ds
add
add
add
sub
cmp
ss
mov
mov
pop
shll
clc
mov
sbb
arpl
add
add
cmp
add
pop
cmp
lods
mov
popf
shl
int3
mov
out
add
jae
pop
arpl
fbld
adc
add
lret
in
xchg
shl
xchg
push
add
or
jmp
jmp
sahf
push
ja
mov
imul
fwait
pushf
sub
pop
inc
mov
int
imulb
dec
loop
xor
rolb
push
loope
jns
pop
push
popa
add
add
push
outsb
mov
add
loopne
add
outsb
icebp
push
mov
xlat
sub
stc
shlb
add
add
add
popf
popa
les
add
push
add
mov
adc
stos
add
cmp
aaa
ffree
test
imul
cwtl
pushf
xor
ja
mov
dec
stc
in
pop
mov
add
mov
rcl
xchg
mov
add
fcoml
adc
test
add
push
push
test
add
fidivs
push
add
out
cmpsb
add
mov
out
mov
add
das
inc
daa
into
out
and
pusha
loope
add
or
push
pop
call
sub
add
aam
add
aaa
pop
mov
add
mov
add
outsl
mov
xchg
add
push
aam
adc
cld
icebp
sarl
cmp
sub
insb
xchg
xchg
inc
pop
fistpll
jne
stos
add
add
add
mov
pop
lret
dec
mov
sub
jmp
add
pusha
rclb
jecxz
stos
add
sbb
add
in
sub
add
add
add
adc
fcom
pop
ja
jmp
sti
stc
xor
push
add
push
lea
xchg
sbb
pusha
dec
std
jae
add
mov
jp
pop
cmp
jmp
xchg
enter
add
lods
ficoml
mov
add
movsl
mov
add
mov
dec
adcl
enter
jge
sub
add
sub
mov
xchg
add
add
sub
add
add
rclb
push
je
dec
addr16
testb
mov
add
out
popa
imul
push
adc
jnp
rolb
pop
cmp
movsl
inc
pop
sarl
rcl
lcall
lods
add
aad
aad
add
cwtl
push
into
fists
fsub
and
cmp
push
lret
pop
or
add
mov
mov
loope
shll
add
mov
nop
xlat
sbb
arpl
inc
push
xor
stos
add
mov
cmp
add
das
sbb
sbb
mov
pop
rorl
add
add
mov
add
notb
xchg
and
out
add
add
add
xor
cmc
loop
xchg
mov
data16
add
xchg
xor
add
cmp
jle
mov
mov
pop
sub
test
and
add
mov
mov
sub
add
cld
popa
jb
int
add
in
mov
fisubrl
jb
or
add
add
dec
mov
add
ljmp
clc
fists
cmp
add
sti
js
push
xor
sbb
dec
xor
je
dec
shll
or
and
add
or
add
pop
xor
jmp
add
add
jge
aaa
push
cli
push
loopne
hlt
int3
xor
ret
sbb
mov
xchg
add
jns
add
loope
mov
add
rorl
popa
sub
or
add
xchg
xchg
cmp
xchg
add
add
add
mov
add
sahf
popf
inc
pop
sbb
ss
stc
sbb
jmp
sub
fisttpll
add
cmpsb
add
mov
mov
and
add
les
push
pusha
dec
cltd
clc
mov
sbb
add
mov
add
and
add
add
jp
call
js
push
lds
add
out
out
or
sbb
outsl
imul
xor
lret
pop
aas
stos
mov
add
rorb
inc
out
adc
mov
shlb
add
lret
mov
add
cltd
pushf
mov
in
pop
or
add
cmpsl
sbb
rorb
add
test
add
mov
sbb
call
stos
incl
jge
movsb
add
add
add
add
mov
mov
dec
and
insl
loope
andl
sub
fidivs
jns
add
inc
shll
jmp
add
mov
mov
arpl
and
add
add
aaa
mov
in
loop
fdivs
mov
add
mov
add
scas
add
test
add
add
xchg
add
iret
sub
fwait
sti
push
sbb
lahf
sub
add
add
pop
insl
push
pop
sbb
and
add
add
nop
ja
lea
add
mov
add
dec
cld
out
push
add
add
add
add
fimull
dec
cli
mov
fmul
out
add
pop
ljmp
je
xorl
push
repnz
pop
push
mov
push
mov
add
imul
dec
aad
orl
fldenv
das
xchg
pop
xchg
push
jl
add
cli
hlt
mov
insl
into
lret
sahf
push
jmp
add
sbb
fldcw
daa
inc
mov
add
icebp
js
and
js
push
add
cwtl
or
sbb
in
test
add
add
into
inc
mov
add
cmp
sbb
add
sbb
sub
add
add
mov
clc
js
or
add
cmp
pop
and
add
add
lret
mov
dec
and
lods
add
ds
popf
jmp
pop
mov
add
jmp
inc
int
fldenv
add
mov
add
sbb
lods
add
loopne
pop
mov
add
sarb
negl
clc
lret
test
add
adc
add
add
and
add
add
xchg
jnp
sub
sub
push
add
xchg
add
pminub
lret
les
repz
cltd
or
or
add
rorl
sub
scas
dec
test
add
add
out
mov
add
inc
rol
imul
push
repz
and
add
adc
dec
mov
add
mov
lea
mov
add
add
scas
add
mov
repz
add
add
pop
lds
lret
mov
add
jecxz
cmpsl
dec
add
cmpsb
add
jnp
les
into
incb
cli
xor
int
gs
cmpsl
pop
aam
mov
add
test
adc
adc
idivl
add
pop
popf
ja
add
lods
and
dec
pusha
mov
jnp
pop
or
add
imul
cmp
fnstcw
add
das
hlt
gs
add
sub
add
xchg
scas
inc
repnz
aam
xchg
arpl
das
xor
notl
and
add
xchg
call
add
or
add
add
das
stos
add
vmovddup
cmp
pop
inc
pop
sbb
xchg
push
add
add
addl
add
fs
mov
add
add
fistl
pop
testl
popa
mov
mov
add
cltd
call
add
add
lret
mov
mov
dec
mov
cmp
in
dec
popf
nop
mov
mov
and
outsl
cli
loope
in
stos
add
aas
ret
int3
ja
add
dec
scas
adc
pop
dec
or
int3
imul
inc
lret
int
ret
lret
add
and
add
pop
add
lcall
je
pop
in
ret
cld
inc
lcall
aaa
lcallw
push
test
add
in
dec
test
lcall
add
add
add
andl
mov
sar
stos
add
les
add
add
leave
or
lods
rcl
pop
scas
add
mov
dec
mov
sub
and
xchg
or
test
add
adc
int
add
add
enter
and
xchg
fldt
add
in
hlt
jns
sti
mov
pop
adc
out
addb
sub
repz
jl
push
add
mov
pop
mov
push
pusha
sbb
xchg
data16
fsubrl
add
loope
mov
add
into
sbb
addb
loope
nop
dec
std
int
jp
insl
push
add
cmp
cmp
add
cmc
xchg
mov
push
add
cltd
hlt
ret
call
add
xor
and
add
push
add
loope
or
cmp
out
mov
sahf
cmp
push
cli
repz
pop
pop
ljmp
shlb
mov
add
imul
add
or
add
adc
jle
lds
into
inc
xchg
out
movsl
out
les
sub
jecxz
push
sub
sbb
test
add
mov
std
repz
add
add
in
mov
add
xor
add
out
or
add
cmpsl
sub
add
addb
test
add
clc
inc
loopne
mov
add
push
nop
or
add
pop
xchg
cwtl
mov
add
xor
jl
add
push
and
lret
addb
rcr
data16
addb
cmp
sub
and
or
add
cmpsb
add
pop
cli
xchg
loop
add
xchg
jne
add
and
add
arpl
xchg
sbb
add
and
ss
sbb
adcl
add
jns
add
mov
hlt
inc
sub
pop
adcl
add
sti
mov
inc
mov
frstor
add
pushf
or
add
mov
mov
aaa
scas
add
mov
ret
mov
idivl
std
popf
enter
add
loop
inc
mov
shlb
mov
add
addb
push
aam
ret
test
sub
add
mov
mov
mov
xor
dec
gs
push
lock
ret
xchg
daa
add
add
adc
xor
push
mov
ret
jns
add
adc
add
push
add
scas
add
mov
dec
int
inc
mov
mov
add
push
add
inc
jge
pop
lea
mull
sub
jb
loope
repz
mov
push
mov
add
push
add
add
jae
add
scas
lret
sahf
adc
and
std
xchg
jmp
imul
stos
add
dec
add
add
adc
stos
add
fs
leave
cmp
test
scas
test
ljmp
push
cwtl
xchg
cld
or
or
add
rcrl
cmp
outsl
and
sub
add
cmp
pop
inc
push
fimull
addb
cmp
mov
pusha
cmpsb
add
into
imul
lds
scas
add
jo
adc
add
mov
add
mov
cltd
cmp
mov
mov
dec
cld
cmpsl
sbb
daa
jecxz
mov
cmpsb
add
ficoms
pop
outsl
dec
lret
popl
xor
xor
test
add
jle
add
sub
aas
inc
or
popf
jle
out
and
push
mov
leave
inc
adc
mov
sub
add
and
add
add
dec
idivl
stos
jge
or
add
or
idivb
nop
mov
loop
push
jg
jge
lahf
data16
imul
xlat
sbb
sub
add
cld
dec
enter
in
clc
sub
add
add
add
call
pop
sbb
jns
adcl
add
jo
cmp
cmc
loope
fisubl
stos
add
pop
and
dec
cmp
mov
int
jae
push
call
daa
adc
inc
push
add
cltd
lods
add
mov
add
add
adc
adc
pop
add
sub
or
add
add
pop
lahf
repnz
aad
xchg
mov
xlat
dec
jle
imul
dec
call
inc
sahf
je
aas
out
outsl
aaa
test
add
fidivrs
add
add
in
mov
popf
jmp
rcl
add
testl
loopnew
add
test
popa
pop
stos
pop
cmp
lcall
push
push
and
add
jl
jbe
add
sti
push
xchg
mov
fs
je
or
add
push
iret
ret
insl
imul
mov
add
xor
stos
scas
add
mov
add
jno
mov
add
add
add
jp
add
jl
insb
lret
dec
gs
addb
jo
test
mov
roll
fcoml
stc
lahf
add
or
add
movsl
mov
add
dec
cmc
xlat
jno,pt
add
lret
add
add
add
push
cmpsb
add
addb
mov
in
addb
shlb
sub
add
mov
leave
ja
add
add
and
push
test
add
call
fisubl
add
mov
pop
fwait
pop
or
pop
sub
add
lock
xchg
in
adc
jge
fdivs
popf
iret
test
mov
cmp
add
jb
inc
mov
test
add
pop
jbe
jle
test
add
add
push
xchg
xor
insb
xor
adc
aam
fstl
movsb
add
xchg
push
mov
or
cmp
outsb
rolb
add
and
add
adc
add
sbb
pop
outsb
lods
add
mov
sub
add
add
jo
add
inc
fwait
sbb
lock
shrb
cli
sti
and
add
insb
and
inc
out
lods
add
jmp
addb
repz
test
repz
jecxz
add
adc
add
add
xor
xor
call
xchg
negb
add
notb
inc
lret
or
adc
xchg
or
lods
add
dec
das
repnz
sahf
lods
add
push
mov
gs
out
insb
pop
sub
add
out
add
nop
mov
inc
sarb
add
loope
cmp
popa
dec
jecxz
xchg
xor
lods
mov
add
add
and
add
mov
add
xor
or
das
add
add
inc
inc
je
cmc
push
inc
mov
xchg
add
add
dec
jae
lock
stos
add
inc
hlt
add
add
xlat
push
pusha
mov
fimuls
add
xchg
push
inc
in
sahf
adc
mov
add
add
aam
and
add
push
cli
or
add
push
pusha
push
mov
std
repz
out
in
mov
add
add
add
mov
mov
add
sbb
add
push
jl
push
pusha
and
add
rorb
roll
jle
dec
nop
mov
push
mov
add
inc
mov
sbb
add
in
inc
addl
pop
cmpsl
inc
fxtract
pop
dec
sub
add
cmp
std
sub
add
jmp
mov
inc
movsl
int
sub
cmp
clc
sub
aam
push
jmp
xchg
sbb
pop
clc
push
add
pop
outsl
pop
cmc
pop
sub
adc
mov
add
insl
pop
dec
jg
sub
add
sub
add
add
das
jne
or
add
jle
test
add
mov
mov
add
sbb
sub
xorl
and
add
shrb
add
in
xor
test
add
push
imul
add
enter
add
jl
movsl
fmull
jp
jecxz
add
sahf
enter
in
add
add
jl
and
out
push
mov
add
xchg
push
sbb
sub
mov
add
test
sub
sub
add
sub
add
xlat
leave
pop
mov
cwtl
add
add
inc
addr16
ss
iret
and
add
and
add
sub
add
mov
add
add
leave
popf
push
enter
sub
push
or
repz
cmp
cmp
jbe
or
clc
mov
adcl
mov
add
das
scas
add
outsb
push
add
fcomi
hlt
decb
scas
sbb
pusha
mov
add
add
les
imul
dec
add
cld
aam
add
js
push
out
jp
loopne
jns
ret
addl
sahf
cmpsl
mov
scas
add
sub
cwtl
addb
pop
mov
add
add
and
or
mov
jmp
jns
mov
add
sbb
sbb
add
fs
and
mov
mov
push
shlb
call
add
adc
xchg
add
das
dec
or
ss
popf
scas
add
dec
fadd
add
add
jae
gs
outsl
rorb
xchg
add
inc
sbb
movsl
and
jle
loop
jp
roll
push
xchg
scas
add
sub
add
imul
roll
insb
std
inc
fmul
sub
add
adc
leave
movsb
add
inc
loopne
or
mov
sub
add
call
add
stos
add
add
test
add
add
call
arpl
add
pusha
xchg
push
sub
add
add
js
clc
lcall
add
out
bnd
add
insb
pusha
repz
xor
pcmpeqd
hlt
jb
in
fiaddl
push
outsl
inc
in
xchg
ja
das
sub
jecxz
inc
test
add
jns
add
and
add
xchg
add
or
mov
dec
in
add
cwtl
in
mov
add
addb
insb
mov
cltd
mov
ds
daa
repnz
cmp
cmp
jmp
shl
andl
add
add
jne
mov
add
std
stc
lret
xor
push
xchg
mov
add
add
add
adc
inc
les
push
stos
fcomp
mov
mov
add
repz
mov
add
cltd
bound
xchg
and
add
jae
call
push
jp
dec
inc
stc
int3
inc
inc
lods
add
rep
pextrw
ret
or
add
cmp
inc
add
add
cmp
repz
imul
jbe
sub
add
jl
push
sti
mov
add
decl
push
xchg
push
add
add
test
add
jbe
in
clc
add
mov
jne
aam
push
aas
mov
add
lret
arpl
add
add
nop
xchg
int
add
cmp
in
inc
jno
imulb
add
mov
add
push
add
lds
add
mov
add
and
add
pushf
xor
imul
shrb
arpl
jae
stos
add
addr16
add
jmp
orl
call
add
add
outsb
xchg
push
and
fmull
ljmp
mov
add
add
inc
sbb
dec
sub
add
push
push
jle
leave
xchg
sbb
rorl
add
xor
fbstp
add
push
fsub
push
cmpsb
add
imull
sti
movsb
add
mov
add
push
cmpsl
imulb
add
add
icebp
xchg
or
cmpsb
add
rcrl
add
sbb
popa
repz
cmp
add
sub
add
xlat
add
add
js
add
xorl
or
add
into
and
add
adc
add
add
add
repz
add
add
aam
aaa
mov
xor
add
cmpsb
add
ljmp
addl
and
out
movsl
leave
mov
add
add
dec
mov
jnp
add
add
daa
jmp
in
mov
jns
imul
add
adc
sub
add
fstpt
mov
fnop
jmp
or
movsl
jmp
push
js
movsb
add
repz
jns
inc
mov
ficoml
mov
xchg
dec
daa
scas
in
daa
pop
pop
and
dec
dec
xchg
stos
mov
add
add
pop
jbe
arpl
jns
sbb
mov
pop
sbb
add
mov
jnp
add
inc
adc
fidivl
fs
mov
pop
sbb
movsb
add
push
mov
add
pushf
adc
xchg
jnp
cltd
lret
add
add
pop
std
push
cmpsb
add
add
add
sub
add
movsl
jae
add
cld
in
sahf
or
add
add
and
add
addb
xchg
mov
jnp
popa
mov
add
jp
les
cld
dec
shll
add
xor
add
or
add
mov
addr16
cmp
sbb
int
pop
mov
add
xchg
fistl
out
sbb
jns
add
nop
scas
add
dec
and
add
ret
pusha
inc
scas
add
pop
pop
lods
adc
or
add
cmp
enter
pop
pusha
push
fucom
or
push
add
outsb
cmp
ret
adc
fwait
mov
and
movb
clc
scas
add
xchg
mov
mov
mov
cmpsb
add
sub
add
add
popf
fs
fsubp
mov
pop
xchg
dec
sarl
adc
fcmove
cmpsl
mov
xchg
push
add
add
add
jmp
pop
pop
or
add
rorb
lods
add
xchg
les
pop
iret
fwait
addb
repz
xchg
inc
sub
aas
fmull
testb
aas
imul
add
les
popa
dec
xchg
xchg
subl
out
out
and
add
sub
add
flds
aas
idiv
add
push
dec
push
pop
cltd
mov
repz
dec
adc
add
ret
mov
sti
push
xor
dec
movl
add
pop
mov
add
cmp
popf
jmp
int
ror
add
lds
in
add
aam
int
out
add
loopne
cmp
inc
jo
aaa
out
dec
jl
bound
addl
add
xchg
add
mov
cmp
aaa
jno
push
mov
dec
les
movsl
push
mov
sbb
mov
add
sbb
add
add
mov
add
add
pop
mov
add
lods
int
les
pusha
xchg
jle
mov
jge
dec
cmp
sahf
icebp
js
add
outsb
cmp
stos
mov
dec
mov
insl
ja
add
adc
add
sti
popf
cmp
lods
mov
data16
add
sbb
add
cmp
in
mov
fwait
add
jecxz
out
inc
pop
shrl
jle
movsb
add
dec
jmp
popf
mov
fimuls
aad
pop
cmp
and
add
inc
mov
add
adc
fldpi
ror
into
cmpsl
fistpll
cmp
add
or
add
add
add
push
add
stos
pop
inc
shrb
daa
pop
iretw
fstl
loopne
gs
pop
jnp
add
pop
imul
insl
lock
sbb
add
shrl
add
sub
sbb
loop
mov
add
add
push
inc
pop
push
pop
dec
push
rorl
test
mov
dec
add
cmpsl
sub
add
add
add
sub
add
sub
xchg
outsb
pop
and
in
sti
or
add
and
add
xor
sub
popf
jecxz
adc
movsl
lret
mov
add
sbb
ret
cmp
rol
mov
xchg
cmp
xchg
stc
mov
adc
dec
add
add
in
dec
fucomip
inc
shlb
fildl
mov
jo
or
add
scas
add
sti
inc
or
bound
pop
imul
outsl
and
add
xchg
xchg
add
add
rol
xor
push
shlb
add
dec
adc
add
scas
add
cmc
repnz
push
jge
insl
aad
loope
add
clc
je
out
neg
sbb
sahf
rcrl
or
push
and
add
pop
mov
add
add
mov
add
add
mov
add
jmp
cmp
jmp
add
sbb
movsl
nop
mov
add
and
add
add
pop
rcll
push
add
out
and
fadd
add
mov
add
add
jnp
add
test
inc
push
add
cmp
sbb
lods
cmp
mov
add
or
add
sub
add
add
adc
add
fisubrs
mov
jecxz
test
add
inc
xchg
sbb
inc
cld
movsb
add
jl
cmp
xor
dec
bound
dec
jle
das
jno
out
cmp
scas
add
pop
xor
sbb
add
pushf
mov
add
fisubrl
add
jno
loopne
xor
adc
sbb
rol
test
add
add
jbe
xchg
in
inc
fbld
jl
les
mov
xchg
add
shrd
pop
sbb
sbb
pop
inc
dec
mov
add
push
adc
and
add
fidivs
iret
jbe
lahf
cmp
push
add
pop
push
dec
cltd
sub
add
sub
add
or
aas
pop
fcoml
inc
jb
mov
sbb
add
pop
fwait
pop
pop
in
lods
add
dec
mov
add
add
nop
inc
mov
xchg
mov
add
mov
fbld
mov
mov
lods
add
repnz
jb
pop
in
lahf
pop
insl
movsl
sahf
cmpsl
sub
add
add
psllw
test
add
repnz
pop
shll
cmc
popa
mov
and
add
daa
inc
adc
dec
stc
inc
inc
movsb
add
loope
and
add
gs
sub
add
add
pop
push
mov
sub
add
arpl
out
add
push
xchg
hlt
jmp
add
push
mov
mov
and
sub
add
into
dec
add
add
mov
test
into
mov
or
add
fbld
add
adc
mov
sub
add
fwait
add
add
shll
add
jae
cmp
jno
mov
xchg
std
cmpsl
roll
add
loopne
mov
add
sarb
xlat
jp
xchg
pop
test
add
inc
lret
inc
mov
insb
sbb
outsb
inc
mov
sahf
mov
add
aas
xor
mov
add
pop
cmpsb
add
cmpsb
add
and
add
mov
or
cmpsl
test
add
add
mov
add
xor
xor
jge
add
test
xchg
flds
xchg
inc
mov
jb
lret
fmull
hlt
mov
or
add
push
add
je
mov
cmp
pop
fwait
pop
in
sar
cmp
sbb
or
or
xor
in
mov
lds
pusha
mov
xchg
pop
imul
mov
out
pop
fwait
push
cld
adc
xor
add
jbe
shl
and
add
add
sub
add
clc
push
add
fidivs
cmp
in
jmp
xchg
sarl
scas
add
push
psllq
jg
leave
inc
lock
push
test
add
and
add
xchg
dec
lcall
insl
jge
in
cltd
add
popa
add
or
xchg
lahf
lret
sub
lea
add
push
fwait
xorl
add
sbb
inc
addb
lods
sbb
pop
lcall
add
cltd
std
push
push
mov
adc
int3
popf
ficoms
hlt
out
mov
add
add
jge
mov
add
dec
lds
and
mov
cmp
jno
add
add
fsubrs
scas
add
ss
xor
and
add
addr16
fwait
xchg
mov
jno
or
add
out
int
pop
jecxz
fbstp
fsubrs
out
stos
add
jmp
ljmp
dec
inc
cmp
cmp
lret
movsb
add
push
lcall
out
adc
mov
add
sbb
xor
add
ret
add
in
in
ss
push
or
push
and
add
lods
lds
dec
loopne
xor
aam
gs
lahf
inc
adc
lock
sbb
les
sbb
pop
mov
jecxz
jnp
dec
xor
call
test
add
cmpsb
add
insl
lret
ja
fs
jo
adc
addb
insl
add
fnstenv
divl
jne
sub
add
jno
mov
rcrb
adc
hlt
pop
adc
pop
fiaddl
xor
mul
stos
add
xor
lahf
cmp
dec
mov
or
add
add
adc
cltd
pop
dec
stc
and
jl
mov
sahf
jns
mov
mov
movsb
add
jg
inc
mov
add
in
ret
and
add
add
add
add
add
push
sub
add
or
jo
add
repnz
int3
out
paddq
add
push
mov
call
add
jg
sbb
aas
mull
jmp
xchg
add
pushf
rorl
push
mov
add
hlt
pop
adc
push
gs
mov
add
aam
clc
rorl
mov
aas
and
add
mov
add
ss
push
xchg
add
add
add
repnz
add
xchg
mov
add
insb
sbb
shlb
loope
imull
repz
call
add
arpl
add
add
popf
popf
inc
fsubs
adc
push
mov
add
mov
xor
xchg
cwtl
test
add
lahf
loopne
xchg
cmpsl
push
push
add
lahf
or
add
loope
inc
dec
xchg
sahf
aaa
sbb
lock
lock
adc
iret
ja
jae
imul
add
pop
in
ss
add
fs
add
insl
push
fidivrs
jge
cmp
push
add
and
xchg
xchg
cmp
mov
mov
jne
adc
mov
fisttpl
and
add
add
pop
dec
stc
addb
jle
or
sti
jg
hlt
adc
add
push
addb
xor
enter
add
and
add
add
rclb
pop
clc
fcompp
or
add
or
add
sbb
cmp
xor
imul
inc
rcrl
add
add
ret
stos
add
adc
inc
or
mov
add
mov
sarl
fisubs
sub
add
pop
jne
popa
fcoms
ret
ja
mov
fisttpll
out
add
das
jle
add
cmp
dec
daa
mov
sbb
lcall
sub
jge
sbb
jmp
loope
mov
das
cmp
or
push
push
add
cmp
mov
std
lahf
subl
sub
inc
cmpsb
add
daa
cmp
or
add
cmpsl
lret
scas
adc
add
inc
push
add
lea
fmuls
mov
add
movsl
ja
add
sbb
inc
pushf
fnstsw
ljmp
mov
mov
add
nop
push
ficoml
nop
mov
addb
sbb
add
arpl
add
inc
mov
ja
add
add
call
ficoms
dec
sbb
bound
pop
dec
int3
add
add
add
ret
add
arpl
mov
add
jmp
mov
add
mov
add
std
je
arpl
add
dec
dec
or
add
adc
cmp
adc
add
add
add
test
add
insl
sar
movsl
xchg
aad
lods
je
add
cmp
inc
mov
jbe
push
mov
aad
sbb
xchg
add
scas
ret
xor
or
add
xor
sbb
out
rcr
add
jmp
jg
loop
scas
add
jno
inc
add
stc
insb
push
pop
sbb
test
or
add
cmp
jb
and
inc
stos
add
les
mov
add
aas
lret
fwait
lds
pop
or
add
adc
inc
aas
in
pop
jp
mov
imul
clc
int3
leave
push
lcall
in
push
push
sbb
cmp
cli
pusha
dec
out
jle
xchg
add
mov
add
add
add
loopne
push
addb
aad
pop
pop
inc
in
rclb
adc
subl
sbb
inc
or
add
cmpsb
add
adc
add
gs
js
daa
lods
add
and
add
sti
lret
fisttpll
cmpsb
add
cltd
shrl
add
xchg
cmp
movsl
test
add
jo
and
add
pop
inc
rorb
add
cltd
mov
add
push
add
popa
sarb
add
add
mov
jnp
lods
or
ljmp
inc
push
mov
add
add
cmc
aas
test
add
clc
sarl
inc
test
add
mov
add
adc
jge
fcoml
aad
divl
and
shrb
jg
shlb
jmp
in
adc
push
sub
add
and
dec
or
pop
and
cmp
ja
add
inc
lahf
push
sbb
jg
add
jnp
std
adc
add
and
add
gs
in
aam
jns
xchg
add
jb
lcall
adc
add
daa
and
add
add
outsb
ss
shrl
pop
mov
add
pop
sbb
add
dec
push
mov
jnp
in
int3
add
movsb
add
cwtl
push
and
adc
dec
shll
pop
xorl
inc
movsl
ss
into
cmp
mov
add
add
xchg
fldcw
push
enter
add
and
xlat
sar
mov
add
pop
pop
ja
push
add
sti
cmc
push
hlt
xor
dec
movsb
add
xchg
xchg
add
adc
fadd
les
add
out
push
jge
stos
add
push
mov
add
push
push
sub
add
fdiv
and
inc
push
pop
mov
or
and
enter
aam
and
addb
jle
and
icebp
cmp
aas
pop
push
imul
std
push
in
push
cmp
shl
push
gs
vphaddbw
add
inc
ja,pt
imul
add
fcmovb
int3
test
add
jg
jns
inc
aad
and
adc
ja
add
add
dec
stos
push
jns
jmp
fists
add
adc
aam
cmp
scas
mov
xchg
aam
dec
pop
xor
rorl
add
negb
test
add
add
xchg
cmp
sarb
push
sub
add
fadds
sbb
push
rcrl
adcl
shll
out
lods
out
ds
sbb
add
add
mov
xchg
inc
addr16
stos
mov
add
inc
mov
jle
sbb
add
mov
or
add
push
fs
cltd
scas
loop
jle
sbb
add
cmp
add
or
pop
test
add
lods
inc
into
push
int3
sbb
and
add
aad
dec
sarb
mov
movsw
adc
add
sbb
pop
pop
adc
test
add
and
add
inc
pop
int
xchg
add
lods
or
push
ret
sbb
add
add
popl
dec
mov
adc
mov
sbb
clc
lret
dec
xchg
mov
jmp
shlb
popf
xor
push
sub
push
fldenv
add
cli
popa
mov
add
add
mov
inc
mov
mov
push
mov
mov
add
rclb
xor
lret
repz
lods
add
xor
dec
lea
add
add
in
mov
add
and
negb
add
in
pop
test
add
gs
xor
push
mov
int3
fisttps
addb
add
int3
mov
xchg
decl
jno
mov
and
repnz
cmp
mov
mov
add
push
adc
fucomp
or
mov
mov
xchg
aas
inc
pop
dec
pop
out
xchg
xchg
icebp
or
add
xchg
inc
out
shlb
add
fs
push
out
and
add
add
or
dec
mov
mov
add
sub
mov
push
or
add
adc
loopne
xchg
stos
add
mov
add
and
add
pop
push
into
popf
cwtl
inc
push
sub
sub
add
ja
scas
add
jbe
popf
jno
xor
mov
mov
add
and
add
cmpsl
mov
add
gs
hlt
ret
mov
incb
cli
pop
mov
add
adc
add
xor
xor
dec
or
add
add
fs
mov
add
dec
jae
adc
add
call
add
arpl
sbb
add
mov
add
das
mov
add
push
inc
int
inc
leave
jge
push
lret
int3
test
add
xchg
add
fldlg2
or
mov
inc
addr16
sbb
stos
jnp
rcrl
add
movsl
shrb
add
cmp
push
inc
pusha
push
sti
push
rol
daa
movsb
add
and
or
add
int
imul
add
push
add
roll
popa
inc
cmp
ja
sbb
fldl
or
add
out
pop
jno
mov
stos
in
jno
dec
stc
in
jmp
fisubrs
mov
call
ljmp
add
mov
mov
lea
cli
pushf
lcall
int
pop
test
add
cmp
add
data16
ja
hlt
mov
fcompl
arpl
fstpt
cmp
and
add
aas
ljmp
adc
jne
mov
add
stos
dec
jb
add
repz
mov
add
mov
sbb
push
sbbl
in
jb
mov
add
lods
cmp
mov
add
add
addb
sbb
mov
jb
push
mov
or
add
or
add
add
dec
jne
nop
jle
xor
mov
mov
xor
push
mov
test
add
pop
sbb
jae
pop
dec
adc
cmp
inc
xchg
insb
cmp
insb
pop
cmp
add
addr16
fcom
aas
pop
xor
add
cmp
frstor
mov
add
test
xor
shrl
push
lea
cltd
and
add
mov
adc
adc
mov
add
xchg
mov
adc
push
movsb
add
or
fnstcw
cwtl
mov
scas
add
pop
push
scas
add
dec
jmp
pop
sub
ret
clc
iret
ss
xor
jo
jae
mov
xor
dec
fcompl
aas
lods
add
dec
call
stos
add
cld
inc
cmc
insl
xchg
add
test
add
jbe
jge
cmp
sbb
leave
sub
daa
sub
add
inc
ror
inc
push
adc
jmp
test
add
mov
loope
sti
repnz
addb
jno
xor
roll
sbb
jg
int
jbe
add
in
stc
sbb
mov
int3
mov
fcoml
lods
or
sbb
sbb
jle
jmp
cmp
sbb
cmp
hlt
out
int
cmc
adc
add
add
add
add
inc
pushf
xchg
xchg
adc
mov
imul
sub
test
add
rorb
fsubp
add
add
arpl
jb
pop
cmp
loop
fwait
or
add
mov
add
mov
pop
xor
mov
xabort
add
add
push
inc
cmovle
shlb
jge
ljmp
dec
and
add
mov
cmp
ffree
mov
cltd
loop
scas
add
jb
cltd
leave
mov
stos
add
and
fwait
jb
lcall
aas
pop
shrb
lcall
add
add
fisttps
add
imul
mov
rcrb
test
add
stos
pop
insb
jecxz
negl
xlat
daa
fs
xchg
int
cmp
adc
addl
add
push
mov
ret
mov
or
in
mov
sbb
add
fisubrs
add
dec
dec
lea
jnp
add
mov
cmp
cmc
icebp
mov
add
add
push
add
call
lret
test
add
pop
mov
cmp
pop
pop
pop
lcall
add
gs
jae
xchg
push
inc
inc
xor
xchg
cmp
testl
add
jp
ljmp
daa
mov
add
xlat
into
inc
mov
mov
ljmp
pop
nop
repz
add
sub
add
push
add
inc
mov
jae
pop
andl
add
insl
xchg
test
add
mov
add
rcrl
int
pop
xchg
add
mov
push
push
add
data16
add
dec
outsl
hlt
lds
xor
mov
xchg
inc
jg
and
adc
mov
add
and
add
aaa
jge
push
fisubs
add
lea
sub
add
add
cmc
xchg
ljmp
std
sbb
stc
sub
add
lahf
mov
add
mov
add
sahf
mov
cld
xor
fcompl
pop
jp
popa
ds
test
add
add
pop
push
insb
dec
inc
adc
add
add
hlt
lea
add
add
add
dec
jl
jo
or
add
cld
jge
add
js
xchg
sub
add
fmuls
std
push
add
lcall
mov
add
sub
movsl
sbb
dec
cmp
scas
dec
sub
pop
jns
push
jmp
mov
jae
add
enter
add
add
adc
cmp
cmp
ss
add
sbb
push
sbb
pop
mov
push
add
pusha
xchg
or
add
in
imul
mov
xor
add
jg
mov
pop
mov
add
mov
sub
mov
add
bnd
or
xchg
loopne
xchg
pop
jge
mov
cmc
push
int3
push
loope
xchg
and
sbb
push
test
add
mov
jecxz
sahf
pop
fsts
gs
in
cmp
lods
add
xchg
and
add
clc
insl
jle
dec
xor
sbb
icebp
loop
jbe
sub
add
dec
sbb
add
adc
push
lods
mov
dec
lods
add
in
dec
mov
cwtl
cmp
pop
jae
add
inc
je
push
cwtl
in
flds
add
in
adc
add
add
add
add
movsb
add
cmp
sbb
sti
push
add
push
pop
cmc
xor
push
ffreep
cmp
cmp
adc
fcmovnb
mov
add
lret
aad
pop
cmpl
sbb
pop
and
sbb
fistps
add
inc
stos
add
and
std
dec
mov
lahf
cmp
sub
add
add
test
stc
movsb
add
or
add
loope
jmp
rcl
sbb
in
int3
pop
addb
pop
sub
pop
addr16
out
out
mov
add
or
add
je
sub
add
add
jmp
mov
add
cli
stc
inc
mov
inc
xor
rol
cmovs
jge
pop
lods
add
daa
bound
add
nop
lret
jle
sub
add
add
add
or
mov
incl
mov
add
add
bound
aad
push
push
lret
push
add
roll
dec
mov
mov
and
add
lret
addb
shlb
inc
imul
pop
cmp
insb
mov
outsb
iret
sti
mulb
jg
mov
popa
cli
in
inc
loop
add
sub
xor
inc
addr16
and
add
and
pusha
stos
add
add
add
rcrl
sub
add
insb
in
mov
lock
lret
cmp
mov
add
jl
add
mov
in
std
jo
cmc
jecxz
ljmp
scas
bound
or
xchg
decl
add
cmp
movl
add
cmpsl
inc
repnz
ss
frstor
add
inc
cmpl
sti
xchg
push
addb
loope
mov
pop
inc
movsb
add
in
adc
pop
cld
test
ret
pop
adc
mov
or
add
fildll
adc
mov
add
push
add
fxch
mov
add
loop
pop
mov
add
cmp
mov
sarb
and
lret
dec
sbb
imul
push
add
jle
add
inc
mov
add
xor
sub
add
jg
add
dec
std
int
rcll
arpl
xor
cltd
sarb
xchg
or
ljmp
test
loopne
add
ljmp
imul
xor
jne
push
aas
arpl
add
add
ds
add
xor
mov
movsl
insl
or
add
push
add
add
xor
fmull
sbb
and
inc
inc
pop
jmp
add
not
cmpsl
push
add
xchg
cmp
lret
pusha
inc
add
add
jb
outsl
push
popa
xor
into
sbb
add
and
add
sub
add
cmp
jnp
add
xlat
mov
adc
dec
iret
rorb
loope
cmp
add
test
add
xor
push
push
push
jmp
mov
sbb
pop
sub
stc
shlb
jl
idivl
sbb
test
add
mov
jne
push
mov
xchg
dec
mov
test
add
add
jae
daa
mov
and
mov
andl
jle
push
stos
mov
nop
clc
pop
pop
movsl
cmpl
dec
rcrl
or
add
sub
mov
add
ds
fs
xor
lahf
cmc
aad
inc
mov
add
sarl
cmp
pop
add
inc
fists
aas
ljmp
inc
nop
arpl
testl
sbb
ret
sbb
add
add
fildll
add
imul
xchg
add
jno
enter
sbb
les
adc
jns
lds
add
popa
sahf
xchg
cmp
add
or
add
add
dec
rsqrtps
add
stos
mov
add
rorl
xor
jle
pop
ss
inc
dec
aad
shl
in
nop
shr
fsubrs
add
cmc
leave
adc
add
add
dec
jge
and
lods
add
adc
add
add
icebp
inc
adc
add
aas
xor
inc
jmp
xchg
fwait
data16
jno
and
cmp
ja
jne
fsubr
pusha
push
add
cld
adc
add
popa
cmp
add
loop
xor
adc
into
aad
mov
popa
jmp
xchg
inc
mov
mov
scas
leave
or
add
add
add
in
test
out
out
pop
sub
add
fsubrp
sahf
aad
adc
std
jmp
inc
outsb
stos
lea
insl
in
add
sub
mov
add
push
add
xchg
les
xor
pop
inc
in
lds
mov
pushf
push
ljmp
add
cwtl
sahf
adc
scas
lock
jne
loope
add
add
xlat
enter
push
in
cmc
fisttps
lret
loop
dec
mov
add
movl
or
add
pop
outsl
sbb
push
add
jb
loope
cmp
cmp
sbb
add
sbb
dec
insl
dec
jo
dec
pop
pushf
aas
xchg
mull
and
add
add
inc
and
add
fcoms
int3
lret
add
xchg
insl
jno
add
or
add
out
cmp
leave
push
test
add
fs
int3
jae
stc
scas
xchg
sub
add
add
xor
jl
add
rcll
mov
sbb
xchg
je
popf
pop
xchg
add
jg
add
jo
mov
jbe
lahf
xchg
inc
xchg
inc
addb
inc
jo
data16
add
push
loop
fnstsw
pop
cmp
lods
or
add
jnp
int
mov
mov
pushfw
mov
xchg
cmp
add
jae
add
repnz
add
sbb
data16
sbb
push
or
add
mov
std
dec
mov
add
repz
sti
adc
add
enter
add
int
lahf
fwait
add
loop
fcomi
inc
inc
xor
add
sti
lods
dec
cmp
add
inc
pop
pop
and
add
mov
add
xchg
outsl
mov
sahf
test
cli
shl
add
pop
call
aam
bswap
mov
ret
mov
call
xor
cmpsb
add
jecxz
adc
adc
sbb
push
ljmp
sbb
lret
data16
jns
or
add
xor
popf
daa
dec
repnz
sarl
inc
adc
or
insl
jecxz
pop
jle
ljmp
sbb
in
jbe
dec
in
xchg
addr16
cmp
ja
xchg
add
mov
pop
or
add
jae
icebp
aas
xchg
insl
popa
mov
pop
push
ror
sbb
pusha
and
add
test
add
cmc
leave
call
adc
push
and
cmc
push
lahf
scas
add
and
xchg
push
int3
mov
pusha
adc
add
push
sarl
cmp
cmp
xchg
sub
add
add
or
dec
jmp
push
jmp
adc
push
cmp
add
stc
or
mov
xchg
test
add
add
add
js
xchg
pop
adc
add
add
leave
adc
dec
pushf
xchg
dec
sbb
push
in
rorl
jg
stc
mov
add
dec
add
add
jo
ror
rep
mov
add
lds
ret
jno
mov
in
pop
imul
add
fdivl
sub
add
pusha
fldcw
sarb
fsubl
push
cmovnp
flds
adc
addb
mov
add
add
out
pop
mov
mov
jge
add
add
dec
test
add
adc
mov
add
loope
stc
sti
sub
add
or
cmc
ds
cmpsl
sub
add
fwait
stc
pop
push
imul
cmpsb
add
pop
cmp
mov
add
xor
add
hlt
stos
add
enter
xchg
les
add
inc
repz
cmp
js
scas
cmpsb
add
arpl
push
lcall
or
add
push
lcall
imul
subl
insb
cli
cmp
mov
push
les
inc
dec
fbstp
add
imul
mov
lcall
loop
mov
adcl
aas
xchg
inc
repnz
and
add
sub
adc
add
add
cwtl
fidivrl
add
pop
popa
inc
les
into
sub
add
sub
add
cmpsb
add
call
push
jecxz
add
out
push
cmp
add
js
add
adc
add
out
inc
mov
xchg
fcomip
imul
xchg
rorb
add
sti
pop
test
add
jl
fiaddl
add
in
les
add
loope
fildl
add
adc
xchg
add
push
add
add
icebp
push
mov
hlt
scas
add
loope
inc
pop
imul
add
add
movsb
add
pushf
les
aam
lds
int3
cmp
inc
mov
ja
mov
test
push
mov
mov
jmp
add
popf
pusha
fwait
stos
add
mov
add
xchg
push
mov
mov
movsb
add
xor
xchg
pop
not
push
stos
mov
add
cmp
cli
call
add
outsl
mov
pop
ret
subl
add
add
mov
pop
loop
popf
dec
pusha
dec
inc
inc
insl
add
dec
adc
test
inc
fdivr
leave
sub
or
add
lock
into
push
adc
nop
rclb
add
stos
add
mov
dec
xchg
and
stc
cltd
jp
cld
xchg
inc
add
add
adc
add
push
sbb
adc
aas
xchg
dec
pop
jl
ficompl
add
mov
xchg
jnp
add
cmp
aam
add
add
pop
pause
jge
sub
add
or
add
test
add
nop
test
add
add
pusha
xlat
cmpsb
add
lret
call
add
mov
push
add
jmp
jge
or
ljmp
add
ds
fsubl
add
lahf
push
lds
add
sbb
jns
adc
add
push
jecxz
cwtl
add
add
mov
mov
xchg
lock
pushf
cmp
push
dec
xor
push
cmpsl
outsl
jp
add
push
add
sub
pop
xor
out
mov
xor
add
xchg
xor
jno
add
into
jg
fwait
incb
add
push
add
inc
ljmp
add
dec
cmp
mov
hlt
repnz
add
dec
fcomip
pushw
scas
jg
mull
popa
pushf
scas
push
loop
jp
mov
add
or
add
xor
mov
add
add
xchg
or
xchg
xchg
add
mov
jge
cwtl
insb
sub
xor
push
icebp
mov
aas
mov
gs
dec
test
add
jbe
push
mov
add
add
icebp
fmull
add
sbbl
test
arpl
add
add
push
cmp
pop
frstor
rorl
rcr
cli
movsb
add
push
je
push
cmp
adc
sbb
xchg
movsb
add
xchg
add
or
add
push
add
mov
cmc
push
add
popf
or
dec
in
je
dec
xchg
xchg
cmp
add
add
mov
pushf
test
jmp
hlt
inc
mov
ret
pop
sub
add
int
sub
call
jo
pop
mov
lea
add
loopne
cmovge
fidivl
fwait
decl
pop
jg
and
add
add
inc
inc
addb
pop
cmc
and
add
cmc
mov
add
jmp
mov
jg
add
push
pop
sub
add
add
add
imul
lods
add
cmpsl
cmc
xlat
jno
addb
xchg
mov
fbld
add
arpl
les
popa
mov
ret
dec
ss
sbb
xchg
outsb
out
mov
dec
lods
add
aas
push
scas
add
dec
leave
iret
loop
jb
lods
iret
loopne
mov
inc
or
add
mov
sub
or
sub
add
rclb
adc
mov
sub
add
rcl
cwtl
mov
add
or
add
test
add
cmp
add
and
add
mov
jle
add
data16
sahf
bound
add
int
push
pop
and
repz
adc
sub
add
ss
fstl
or
xor
rolb
mov
add
iret
pop
adc
add
addb
mov
sub
add
cmp
add
sbb
addb
mov
scas
mov
sub
add
add
mov
outsl
jp
jno
sub
add
test
addb
or
add
add
dec
icebp
movsb
add
inc
in
or
xor
add
push
jl
fdivs
dec
in
mov
push
jp
and
add
add
mov
test
test
add
loop
jnp
add
mov
addr16
inc
inc
test
add
stos
neg
test
add
mov
fisubs
add
or
addb
pushf
mov
stc
cmc
cmc
in
jg
add
mov
add
data16
movntps
enter
jle
cmpsb
add
lret
sub
iret
pusha
lods
inc
ficoml
cmovns
inc
and
add
add
andl
inc
dec
dec
loop
dec
push
lds
add
push
jle
add
sub
shrl
add
add
stos
or
add
hlt
cmpsb
add
fldl
add
add
adc
add
ljmp
add
mov
dec
in
dec
jbe
add
jge
push
enter
das
add
xor
xchg
dec
adc
add
add
mov
add
sbb
pop
dec
cmp
lret
sub
add
dec
fisubrs
sti
fstps
mov
add
sbb
cmc
and
jmp
nop
mov
movsb
add
jae
add
add
pop
jle
fwait
out
data16
add
stos
sub
jnp
and
add
dec
aad
imul
js
adc
add
addb
stc
xchg
add
hlt
xlat
sbb
icebp
push
add
lret
or
inc
hlt
shll
fsubrs
add
ds
rcll
or
fs
lock
adc
pop
dec
xor
lods
pop
jl
add
arpl
jbe
cmp
fld
push
arpl
add
or
dec
or
add
xchg
test
add
into
imul
mov
mov
iret
dec
or
add
add
fmull
add
add
jb
add
pop
inc
dec
jne
add
dec
dec
push
jo
mov
add
push
iret
cmp
or
sub
mov
clc
mov
add
push
repnz
dec
flds
push
inc
pop
cmp
jecxz
jb
ror
inc
aaa
adc
int3
xor
dec
sbb
stos
lods
or
clc
ror
lret
mov
jp
cmp
cld
add
cmp
mov
movsl
imulb
mov
and
sbb
mov
mov
add
icebp
in
and
add
mov
test
add
shl
std
mov
mov
add
pop
xchg
outsb
inc
xchg
add
push
sti
lods
in
add
mov
add
mov
mov
sbb
add
ror
pop
stos
int3
inc
nop
adc
add
inc
addb
out
or
add
movsl
fsubrs
fsub
cltd
and
pop
pop
inc
cmpsl
add
add
dec
push
daa
cltd
sti
les
or
call
dec
ficompl
push
adc
add
mov
dec
sbb
ret
inc
xchg
dec
or
xchg
mov
inc
js
jno
xchg
sub
add
adc
adc
lods
add
mov
add
add
loopne
lahf
mov
add
call
jl
je
aaa
add
push
jbe
and
add
arpl
mul
sub
cmc
rorb
cmp
mov
mov
dec
inc
leave
xor
jle
cmc
jle
pop
test
lahf
inc
sarb
mov
cmp
mov
ret
sbb
ficoms
push
cmp
lcall
add
out
mov
add
mov
lahf
mov
add
mov
lret
and
add
movsl
push
add
into
sti
clc
cwtl
aam
icebp
jbe
dec
cwtl
xor
mov
inc
fldl
mov
add
aad
add
inc
lcall
add
addb
inc
cmp
adc
mov
add
sahf
jns
roll
mov
pushf
in
cmc
dec
add
addr16
push
shll
sarl
fmull
add
pop
test
add
xchg
jnp
sub
aad
add
imul
fidivs
add
adc
add
hlt
ljmp
scas
add
in
in
push
push
sub
add
add
fisubs
mov
add
push
loope
pop
aaa
std
jb
mov
add
or
add
dec
jp
popf
sbb
insl
jecxz
mov
xor
pop
lods
nop
cli
dec
lods
add
cmpsl
fsubp
cmp
lods
add
outsl
jb
fstpt
in
pop
mov
jno
add
mov
aad
js
jecxz
out
lods
add
inc
nop
add
add
mov
lahf
test
add
mov
add
adc
iret
scas
inc
test
add
rcrl
sub
add
add
cmp
xor
add
enter
xor
sub
add
add
int
xchg
add
add
pop
mov
stos
cli
imul
add
call
push
stos
add
mov
push
mov
add
stc
xchg
repnz
add
out
add
xchg
mov
xor
add
aam
add
rcrl
add
sub
add
ljmp
mov
add
fdivrl
sbb
xchg
mov
add
push
xchg
add
add
jae
xor
jecxz
xor
add
xchg
push
mov
add
cmp
addb
addb
stos
add
les
sbb
lcall
push
nop
inc
mov
cmp
or
add
dec
push
clc
pop
sbb
nop
mov
insb
and
add
xor
mov
mov
test
addb
sub
add
dec
das
sbb
jmp
dec
pusha
imul
pop
daa
pop
sub
add
jns
dec
fwait
js
jae
xchg
mov
add
add
pop
test
add
and
add
fs
inc
dec
in
rorb
mull
jecxz
add
ret
insb
adc
add
pop
fbstp
lock
pusha
add
jmp
jae
addb
test
add
add
xor
add
shlb
add
roll
add
hlt
addb
xor
mov
xchg
jbe
mov
mov
add
jle
push
add
jne
loopne
pop
inc
hlt
add
mov
sbb
add
dec
in
inc
insl
sub
add
lock
sbb
call
or
xchg
loop
xor
leave
lea
icebp
sbb
fldenv
add
mov
sbb
jmp
mov
jecxz
add
jecxz
mov
pop
mov
ficompl
and
add
xor
gs
mov
add
dec
ficompl
inc
dec
outsl
in
in
shrl
lahf
out
sti
mov
add
jecxz
mov
mov
push
inc
sbb
mov
in
sbb
test
add
nop
testl
pop
xor
loope
lret
add
in
dec
jecxz
add
cmp
stos
inc
or
add
pushf
pop
and
add
in
out
mov
inc
imull
add
lea
add
inc
in
je
add
shl
lret
xchg
push
mov
mov
jp
pop
mov
add
cmpsl
push
push
fdivrl
add
xlat
insl
repnz
imul
test
mov
sub
add
pusha
pushf
cmpsb
add
stos
sbb
jmp
sub
add
push
sti
rolb
add
jmp
push
sub
add
add
mov
add
cltd
or
lea
in
mov
das
daa
movsl
outsb
pop
icebp
movsb
add
push
popf
iret
pop
sub
inc
jl
mov
or
inc
in
mov
dec
sub
les
popa
sub
add
pop
inc
arpl
add
adc
icebp
mov
mov
xchg
mov
add
out
fdivs
adc
adc
jo
out
add
sub
pop
popa
xchg
in
inc
fcoml
imul
adc
push
out
add
int3
sub
add
fs
sub
add
jns
push
mov
xchg
jae
cli
mov
add
lods
add
jg
dec
xchg
sub
sbb
mov
add
out
push
inc
test
add
inc
in
test
add
jmp
pop
sub
out
add
lock
adc
insl
cmc
dec
mov
add
add
cmp
jae
pop
test
add
add
inc
ret
lds
mov
popf
mov
fisubrl
das
addb
mov
addb
or
add
add
add
shrl
adc
push
push
clc
ja
cmc
jo
bnd
add
jno
add
pop
cwtl
xor
push
mov
add
mov
add
mov
in
push
dec
js
cltd
icebp
xchg
das
jo
jno
add
sar
fildll
and
add
test
add
loop
mov
add
add
xor
cli
fisttpl
out
dec
or
add
leave
gs
mov
pop
cltd
mov
mov
lret
inc
cmp
mov
add
and
add
in
or
inc
xchg
push
out
sub
add
xlat
sub
add
xor
pushf
cmp
imul
sub
add
jl
xchg
xlat
mov
jb
mov
add
negl
ret
add
out
fnstsw
push
or
fs
xor
add
jl
mov
aad
into
lret
push
cmp
push
mull
add
pusha
js
cmp
outsl
movsb
add
mov
add
stos
rolb
cmp
add
test
add
inc
push
ret
add
inc
lock
xchg
sbb
popa
jb
lods
add
sub
add
add
push
add
test
add
pop
add
pop
ja
outsb
jns
mov
or
add
int3
mov
lahf
sbb
cmp
dec
loope
jg
mov
add
add
das
adc
lds
mov
aad
add
add
mov
add
add
popf
icebp
popa
lea
add
leave
movsl
popf
into
loope
add
add
gs
add
outsb
lret
loop
add
movsb
add
fistpll
outsl
push
inc
xor
shrl
pop
pop
in
hlt
xor
cli
notl
lret
jecxz
add
fbld
addb
jp
in
outsl
adc
add
mov
add
mov
add
mov
push
inc
dec
pusha
fidivrs
sbb
in
pop
hlt
jge
sub
add
test
add
mov
shll
sbb
mov
xchg
xchg
lahf
mov
in
pushf
sbb
add
add
dec
lret
add
fwait
add
add
add
sbb
xchg
sbb
imul
sub
add
fidivl
aam
rclb
push
mov
int
jmp
pop
aam
add
mov
sub
add
add
xchg
add
out
test
add
add
lret
nop
movsl
ja
add
mov
add
add
add
rorb
add
fs
mov
add
mov
popf
inc
rolb
sarb
imul
add
aad
add
bound
add
icebp
pushf
cwtl
scas
add
pop
jp
cvtps2pd
pop
imul
sbb
gs
shr
add
add
ret
test
sub
add
out
mov
sub
call
mov
mov
or
add
add
dec
mov
add
pop
ficoml
add
scas
add
popa
add
xor
and
out
scas
imul
sbb
pop
icebp
mov
mov
rcl
flds
js
movsb
add
pop
loop
sbb
mov
add
xor
add
mov
sbb
and
add
jns
jno
push
add
add
mov
repnz
js
xor
loope
push
mov
pop
in
stc
inc
leave
adc
sbb
jbe
or
add
insl
cmp
push
add
dec
push
mov
add
jne
xchg
add
mov
ljmp
and
cmpsl
cltd
stos
add
mov
icebp
mov
sahf
mov
shlb
or
add
pop
aad
jmp
daa
and
add
push
and
add
pop
add
add
jge
aad
repnz
mov
nop
sub
add
ljmp
inc
mov
incb
das
adc
or
add
mov
push
adc
lahf
cmpsb
add
xchg
mov
add
pop
or
mov
add
mov
add
xor
enter
out
mov
add
ljmp
push
or
add
add
jo
add
sahf
xor
add
je
xor
dec
call
mov
pop
addr16
test
add
or
add
mov
in
add
cmpsl
fstpl
mov
push
add
lods
add
popf
cltd
in
mov
jg
clc
iret
mov
in
xorl
add
xchg
mov
ja
aam
or
add
cmp
sub
rclb
or
add
out
cwtl
or
addb
sbb
pop
lds
lds
bound
int
cmp
sarb
das
mov
add
sub
add
iret
icebp
push
lret
add
jns
mov
add
fadds
pop
les
scas
add
rcrb
aad
test
add
insb
out
inc
pop
mov
add
add
sti
dec
inc
adc
adc
add
pop
xchg
xchg
mov
imul
cmp
mov
add
call
mov
push
inc
pop
icebp
iret
imul
sub
add
xchg
inc
ret
fbstp
gs
addb
popa
jnp
add
or
add
xchg
mov
mov
add
nop
stc
adc
xchg
xor
lret
mov
add
int
in
mov
add
add
popa
fists
fimull
cmc
cmp
fcoml
inc
imul
ds
outsl
jbe
imul
xchg
fistps
mov
insl
test
add
xor
or
add
test
add
add
dec
cmp
adc
or
add
lods
xor
out
stos
add
mov
cld
pop
adc
jl
mov
push
and
add
add
and
mov
jecxz
jns
mov
add
hlt
xlat
jl
addb
jge
pop
pop
pop
jp
outsb
mov
add
add
add
les
add
mov
add
div
cmc
or
add
adc
js
scas
add
xor
pop
jp
jae
shlb
mov
std
mov
fidivs
mov
xchg
push
std
cmpsb
add
bound
lcall
mov
loope
push
imul
add
stos
cmp
pop
scas
add
mov
push
insb
mov
add
gs
lea
add
gs
dec
inc
and
stos
lea
insl
jle
ljmp
pop
fcomip
test
add
fwait
gs
add
mov
int3
push
add
add
or
xchg
in
add
add
and
pop
out
push
push
jmp
cmc
fists
enter
shll
add
test
add
enter
mov
adc
popa
pop
scas
leave
fcomps
call
xchg
test
add
push
add
shlb
jmp
mov
jne
add
das
je
addb
push
lret
jne
add
lds
mov
jno
dec
mov
add
insb
add
push
add
inc
pop
lahf
adc
pusha
add
add
adc
int3
jl
test
add
pop
aad
push
out
push
add
jb
mov
add
jle
lods
push
mov
iret
dec
pop
adc
mov
sbb
cmp
push
mov
push
scas
pop
jbe
xchg
lahf
inc
addb
mov
add
rcrb
push
fwait
iret
inc
cmp
or
add
pop
xchg
scas
add
or
xor
lock
arpl
mov
push
pop
js
bnd
push
loopne
xor
cmp
dec
jno
mov
xor
out
sub
add
pusha
lea
jne
push
or
lret
mov
add
loop
hlt
scas
add
push
mov
push
cmp
adc
ds
cwtl
stos
add
sarl
push
repnz
repz
daa
or
lret
lret
hlt
mov
divb
lret
mov
addb
cwtl
fimull
sbb
jb
test
add
push
cmpsl
sbb
add
pop
push
iret
xor
dec
lods
fsubs
jecxz
jno
mov
xchg
negl
jp
add
loopne
add
fstpl
sahf
push
add
mov
imul
cmp
inc
mov
add
cld
shrl
add
add
aaa
jbe
sbb
neg
repz
popa
mov
add
loope
sub
add
mov
ds
addl
add
mov
push
std
sti
addb
ret
in
mov
inc
dec
mov
mov
add
movl
sarl
sub
dec
jp
pop
inc
mov
add
xor
rol
sub
add
xlat
mov
add
pop
out
adc
out
xchg
jmp
cmpsb
add
sbb
push
addb
mov
add
mov
jo
add
xlat
notl
add
inc
sbb
add
pushf
sbb
xor
cmp
or
mov
lret
cwtl
lods
add
ret
add
push
fldcw
jmp
je
add
and
push
cwtl
addb
nop
sub
add
and
sub
add
add
mov
mov
xchg
sbb
add
add
lea
add
mov
push
xor
push
ja
mov
lods
fs
add
adc
out
push
add
aad
xor
leave
jne
lods
subl
fldenv
and
movl
fsubrp
jb
add
std
int
and
in
mov
adc
sub
std
orl
sbb
adc
xor
imul
clc
dec
scas
add
icebp
lods
add
pop
addb
scas
out
inc
lret
xlat
inc
leave
insb
lods
add
jo
mov
add
test
inc
stos
pop
push
add
mov
jb
fucomp
ljmp
jne
add
fucomi
out
mov
loope
mov
mov
mov
add
xor
add
mov
sub
add
cmc
sbb
movsl
test
popf
sahf
add
insl
xor
cmpsb
add
cmp
add
ret
xchg
add
mov
scas
popf
shlb
int3
int
cmp
sbb
xor
rcr
or
mov
xor
pushl
jge
ror
imul
add
and
addb
adc
adc
mov
xchg
mov
fcompl
pop
mov
enter
push
out
ret
int
mov
add
xor
jl
cli
insl
mov
daa
iret
cmc
mov
lret
jae
jbe
mov
add
xchg
loopne
push
add
das
cmp
bound
dec
cwtl
mov
add
arpl
add
push
add
pop
jp
std
stos
mov
add
push
out
bound
sbb
push
test
add
add
adc
leave
xor
daa
pop
packsswb
mov
add
jbe
mov
add
in
mov
add
or
add
add
test
adc
add
sbb
insl
sub
add
icebp
sub
push
cmpsl
gs
inc
cmp
jb
add
call
aaa
adc
add
push
enter
lock
lods
xchg
stos
add
xor
lds
mov
mov
add
and
add
push
mov
add
adc
pusha
rcrb
repz
stos
lret
stc
imul
mov
xor
aad
push
adc
add
add
inc
ret
mov
pop
sub
mull
add
add
std
out
hlt
sbb
xor
and
add
cmp
jb
jg
cmp
pop
gs
add
add
andl
add
sbb
inc
dec
test
dec
mov
addr16
adc
add
testb
inc
or
add
add
add
add
xor
sub
add
sub
jb
jmp
cld
mov
cmp
aaa
mov
in
imul
and
add
pusha
xor
add
jno
iret
cmpsb
add
fwait
hlt
into
push
sti
pop
sub
add
xchg
les
sbb
push
jge
test
add
insl
xor
add
jo
lahf
bndstx
pop
stos
mov
xor
notb
xor
mov
mov
add
dec
dec
xchg
pop
stos
pop
push
not
fwait
into
add
or
add
loop
fcompl
pop
jae
mov
test
orl
out
mov
add
add
sbb
and
add
xor
and
add
add
add
add
ficoml
insb
pop
or
and
add
or
add
lods
clc
hlt
adc
add
jge
pop
mov
push
jne
out
or
add
pop
push
sar
add
mov
dec
out
cmp
int
adc
add
test
add
insl
push
lcall
xlat
jp
mov
mov
xchg
mov
and
dec
rclb
fcoms
add
fildll
pop
or
add
pop
mov
pop
cmp
sub
add
mov
in
dec
outsl
xchg
pop
pop
add
add
movsb
add
push
mov
mov
rcll
out
aam
inc
fsin
or
add
pop
stos
xchg
lcall
addb
adc
jge
fdivp
jns
lock
adc
sbb
mov
adc
add
or
popf
ds
in
or
add
add
insl
push
call
test
add
je
sub
out
adc
test
pop
icebp
xchg
add
andl
or
add
ljmp
push
add
add
ret
and
add
jl
insl
dec
xlat
fistpll
hlt
int
pusha
push
aam
inc
add
add
in
scas
add
mov
testb
add
push
pop
insb
pop
lods
aas
call
add
pop
ss
add
add
mov
add
dec
mov
xor
push
loop
and
add
cmp
adc
sub
add
loop
les
sbb
and
add
sbb
pop
loop
mov
aad
add
out
push
aas
sub
add
les
in
lds
sub
add
jl
xchg
clc
jp
fnstenv
dec
ret
xchg
cmp
ds
add
jo
stos
add
loopne,pt
cmp
pop
sbb
dec
mov
or
repnz
jo
insb
leave
and
add
inc
fcmovne
pop
sbb
add
jg
add
lret
test
mov
add
sahf
popf
cmp
push
call
vcvtdq2ps
and
add
inc
enter
push
mov
sub
add
mov
pop
lods
add
fwait
pop
pop
scas
test
add
pop
sub
add
add
or
mov
aam
roll
sbb
inc
dec
jae
lret
push
add
add
add
iret
stc
std
scas
push
dec
lahf
xchg
ds
pushf
cmp
iret
xchg
mov
add
jno
jno
hlt
clc
scas
sbb
xchg
scas
add
imul
or
add
test
add
add
pusha
xor
jno
mov
inc
pop
push
je
pop
xor
add
cwtl
sbb
testl
add
ret
xor
add
jae
cltd
std
fimull
mov
add
dec
adc
dec
adc
mov
add
add
stos
add
ret
add
jmp
sbb
push
mov
jmp
add
sbb
dec
in
mov
mov
mov
add
cmp
in
shll
pop
aam
bsr
jb
sbb
add
pop
cmp
dec
fstpl
dec
gs
push
popf
mov
add
mov
lock
add
add
mov
scas
adc
xor
scas
das
negl
jp
clc
cmp
inc
jp
push
xor
add
mov
add
xchg
cli
pop
push
addb
jne
jg
pop
fs
aad
clc
test
add
add
add
add
and
add
add
std
lods
add
fsub
dec
cli
mov
add
add
or
add
pop
jb
or
repz
sbbl
or
add
sbb
addr16
cmpsb
add
sbb
xor
imulb
call
cmpsl
sub
add
ljmp
nop
ror
addb
cmc
loop
loopne
fsts
add
add
gs
dec
scas
add
add
add
add
add
adc
lods
add
add
shll
add
das
mov
add
aad
pop
add
sti
fwait
xchg
pop
in
sub
add
js
lea
add
cmpsb
add
lcall
add
add
test
test
fld
lods
add
adc
fstl
push
ret
adc
mov
add
fs
insb
jp
lahf
cli
out
mov
add
pop
movsb
add
dec
xor
in
rorb
push
js
hlt
movsb
add
jge
add
push
icebp
mov
xor
inc
sub
add
imulb
and
add
nop
ret
inc
xor
pop
inc
mov
adc
filds
jae
mov
add
dec
stos
add
movsb
add
leave
jmp
mov
stc
jb
cmp
add
pushf
sbb
add
dec
aaa
std
clc
dec
les
add
inc
or
add
add
add
jle
push
pop
push
bt
pop
pop
xchg
adc
dec
push
mov
add
cwtl
inc
xor
jnp
pop
inc
rcrl
fcmovb
daa
cli
sbb
adc
pop
pushf
pop
dec
mov
add
popa
movsl
inc
dec
in
call
lcall
testl
add
iret
loop
add
cmpsb
add
into
mov
add
aam
or
add
pop
xor
jb
inc
jge
mov
mov
sub
add
add
fmull
adc
fs
cmpsl
into
out
sub
add
aad
mov
mov
add
sub
add
push
add
dec
fsubrl
pop
or
add
add
out
xor
add
adc
dec
push
divl
out
std
xor
dec
push
leave
popf
pusha
cmpsl
jns
add
imul
cmp
add
test
add
pop
jmp
popf
bound
mov
add
or
aaa
mov
lods
add
inc
rcll
and
add
sti
inc
dec
mov
dec
sahf
popf
fnstenv
inc
mov
add
mov
lock
or
add
jl
arpl
add
repz
add
iret
scas
out
das
stos
add
jno
add
lock
aaa
ss
jae
and
add
add
aaa
repnz
fsubrs
add
add
add
add
in
ficompl
add
xchg
and
add
add
cmp
sbb
cmp
mov
scas
add
loopne
jae
add
scas
add
or
cld
mov
lcall
add
dec
std
inc
cmp
add
and
stc
inc
mov
mov
or
out
sbb
fidivrs
add
push
push
adc
addr16
scas
add
shr
or
add
jp
adc
add
sbb
xchg
popf
pop
aaa
dec
mov
xchg
idivb
dec
dec
push
clc
push
add
mov
add
imul
add
mov
add
add
imul
add
push
pop
popa
sahf
je
decl
add
and
sbb
pop
sub
xchg
dec
jle
jne
add
sbb
mov
pusha
gs
mov
pop
test
add
cltd
mov
sti
add
add
test
lds
add
push
sbb
jmp
adc
mov
cwtl
imul
stos
inc
insl
inc
insb
mov
jge
add
inc
jo
insb
insl
adc
test
add
mov
mov
xchg
outsb
popa
fs
add
lret
sti
adc
lcall
add
inc
dec
ss
lock
push
in
mov
add
inc
cmpsl
in
repnz
lds
ret
cmp
inc
adc
and
mov
add
xor
push
pop
inc
pop
cmpsl
mov
movsb
add
xchg
add
je
push
push
xor
xchg
adc
add
mov
mov
and
imul
add
mov
pop
sbb
int
pop
xchg
insb
pop
jne
xor
sahf
aaa
ljmp
das
mov
fwait
push
fs
loop
jecxz
push
add
adc
leave
push
pop
and
mov
add
inc
pop
sub
enter
sbb
lds
popf
addb
cmc
or
add
call
out
bound
jb
jo
cli
out
mov
adc
xchg
jne
add
test
add
jo
inc
ds
in
sub
lods
add
cmc
fdivs
sub
add
add
mov
fldt
add
adc
jbe
fxch
js
jecxz
test
jnp
add
pop
js
add
add
stos
add
sbb
jmp
mov
lahf
lods
test
add
and
add
add
xor
sbb
jo
or
stc
adc
fnsave
add
test
sbb
sbb
cltd
add
add
mov
enter
add
add
leave
push
loopne
or
add
add
jne
ja
pop
pop
loop
inc
sbb
neg
jmp
insb
movsb
add
outsb
je
push
add
add
xchg
add
xchg
cli
mov
add
push
adc
add
out
add
adc
dec
cmp
add
addb
roll
mov
pop
rolb
and
lret
pop
adc
js
lods
add
mov
rorl
cmpsb
add
jle
add
or
mov
fnsave
dec
cmp
cmpsb
add
xchg
out
add
test
add
push
icebp
mov
or
add
mov
add
inc
dec
jnp
add
pushf
icebp
and
xor
add
loope
mov
mov
das
int3
subl
add
add
xchg
fldt
add
sbb
add
xor
lods
in
add
mov
add
xchg
leave
jge
inc
pop
shll
lea
scas
add
stos
add
jg
mov
bound
add
add
add
int3
xor
xchg
add
mov
scas
out
add
js
add
and
add
test
add
ret
sub
mov
or
out
shll
rcl
cmc
loop
xor
int3
xchg
movsb
add
popf
mov
add
add
jb
flds
push
jae
in
push
repnz
fimuls
add
add
add
lods
mov
mov
mov
inc
pop
push
inc
xchg
dec
jp
add
ss
xchg
ljmp
pop
sub
and
lock
add
push
loope
cmc
cmp
add
push
jecxz
add
int
in
dec
adc
je
popa
jbe
test
add
push
dec
repz
dec
repz
or
add
add
jno
arpl
add
xchg
dec
int3
mov
clc
ljmp
clc
sub
add
adc
add
mov
fdivs
mov
add
shlb
addr16
inc
pop
and
dec
mov
add
and
push
out
jbe
mov
pop
sub
add
add
jbe
xorl
lret
push
add
rol
fcmovu
ljmp
add
mov
jmp
sets
add
mov
mov
cmp
testb
jae
mov
arpl
add
jo
or
add
fisttps
mov
int
lds
add
push
ret
pop
mov
xor
add
inc
mov
pop
mov
add
paddd
ds
pop
sub
stos
add
mov
inc
pop
arpl
cmp
mull
add
cmp
rcrl
sub
add
iret
adc
push
add
sbb
add
movsb
add
and
add
addb
ds
inc
sbb
lahf
xor
out
xor
add
xor
push
fistpl
cmp
mov
add
add
add
inc
icebp
leave
pop
and
add
stos
sbb
aam
xchg
adc
add
push
loop
filds
add
or
mov
xchg
fists
and
add
inc
call
pop
in
add
inc
sbb
add
movsl
leave
out
add
push
dec
adc
fabs
dec
lock
adc
cltd
gs
add
cmpsb
add
out
jnp
or
add
fwait
sub
add
mov
xchg
push
cmp
nop
inc
xchg
dec
push
pop
fisttpll
fcompl
add
test
add
add
inc
out
pop
aaa
movsl
pop
call
test
add
jmp
dec
xor
cmpsb
add
adc
js
ret
adc
add
dec
repz
cltd
pop
sbb
clc
pusha
push
test
add
add
test
mov
add
lret
sbb
and
add
test
movsb
add
xlat
push
aam
sub
pop
in
add
add
add
out
cmp
xor
mov
push
add
push
adc
or
add
push
cmp
sub
add
loop
xlat
pminub
scas
add
sbbl
add
add
stos
sbb
add
hlt
flds
add
je
cmp
xchg
add
pusha
clc
ret
imul
repnz
add
cmp
pop
mov
mov
push
ljmp
xchg
mov
stc
add
pop
sub
add
add
add
add
bound
or
add
add
pop
inc
shll
add
add
leave
adc
add
lods
add
jo
aam
ficomps
lret
inc
sti
mov
jo
push
test
add
into
xchg
nop
mov
sarl
fstps
loope
cmc
rorl
ds
shr
fldenv
and
lea
push
add
lret
xor
jns
fadd
sbb
inc
adc
test
xchg
addb
xor
fwait
pop
jno
shr
pop
push
add
roll
add
inc
inc
and
add
add
inc
pushf
sbb
fcomps
out
insb
sbb
add
fidivrl
sarb
mov
jne
pop
push
add
jecxz
dec
inc
add
add
sahf
mov
dec
ret
xor
sub
add
inc
add
jbe
push
add
clc
inc
push
out
sbb
pop
rcr
pop
or
add
jbe
add
add
aam
add
gs
mov
push
dec
dec
mov
in
stos
add
adc
xchg
push
jnp
push
jnp
cmp
mov
add
dec
and
jo
shll
js
mov
dec
sbb
pop
sub
add
add
loop
prefetch
or
add
aam
mov
add
test
add
inc
push
rorb
push
add
xchg
and
add
add
sub
xchg
add
fsub
shl
adc
push
idivl
out
inc
lret
push
add
scas
add
cmp
arpl
mov
add
pop
addb
and
add
xchg
dec
aad
xchg
sbb
sub
inc
arpl
add
add
cmp
add
fsts
stos
sub
add
lock
xchg
or
test
repz
add
mov
sbb
mov
imul
aaa
mov
inc
adc
data16
in
jmp
xlat
cli
stos
add
push
sti
fldenv
sbb
inc
out
repz
add
or
pop
popa
popa
xor
add
sbb
and
and
scas
pop
mov
add
decb
pop
gs
loope
cmp
inc
dec
mov
leave
sbb
xchg
add
add
in
stc
in
push
and
add
daa
xor
xchg
imul
add
lds
pop
inc
or
lret
add
pop
lcall
mov
mov
or
add
xor
movsb
add
fdivr
sbb
adc
mov
adc
mov
add
xchg
fs
clc
in
subl
subl
add
fistpll
cmp
or
add
xchg
mov
add
add
mov
sarb
inc
cmpsl
cmpsl
adc
mov
fcmovb
mov
lea
mov
shll
fisttpl
add
sahf
xor
pop
adc
add
dec
xorl
mov
sbb
and
add
add
cmp
add
movsl
mov
and
add
stos
pop
sub
add
add
fsubrs
or
divb
jo
pushf
mov
add
stc
sbb
or
add
out
cmp
add
add
bound
push
in
add
out
add
jmp
jne
pop
jno
add
fdivl
cld
mov
or
add
mov
add
jp
push
add
hlt
jnp
mov
test
inc
dec
lcall
mov
add
or
add
add
jns
add
xor
sbb
imul
repz
add
nop
inc
adc
mov
roll
add
insb
sub
add
pop
mov
je
imulb
repz
xchg
push
aaa
adc
fidivrl
cmp
cmp
and
add
lea
hlt
cmp
add
xchg
mov
movsl
out
sub
clc
cltd
aas
imul
and
add
mov
test
into
dec
sub
add
add
add
shrl
inc
and
add
imulb
xor
scas
inc
sub
xor
mov
fldcw
ror
addr16
std
dec
nop
nop
ljmp
inc
int3
fwait
sub
add
mov
add
add
add
add
mov
dec
pop
ss
mov
add
shll
mov
add
fbld
inc
jb
pusha
sub
add
add
push
adc
adc
loop
mov
mov
add
add
add
add
mov
inc
adc
jecxz
sbb
add
adc
hlt
xor
xor
or
add
addr16
test
add
jbe
int3
call
xchg
mov
add
add
rorl
stos
add
outsl
sbb
add
imul
inc
dec
mov
add
std
ret
add
push
loopne
inc
cli
sub
movsl
fisubrs
adc
shll
inc
jecxz
dec
sub
add
or
loope
add
adc
xor
push
cmp
mov
daa
mov
or
xor
xchg
xchg
ss
mov
add
roll
fwait
adc
add
xchg
sar
les
inc
xchg
add
out
inc
and
add
test
and
add
add
xchg
in
jns
dec
imul
fisttpl
add
dec
enter
jge
sbb
add
jnp
jbe
sbb
ljmp
xchg
roll
stc
add
add
mov
iret
testb
jae
movsb
add
or
add
add
add
pop
ljmp
and
add
push
mov
sbb
add
add
xchg
pusha
sub
push
test
add
fisttpl
add
dec
fnsave
xor
add
out
sub
inc
mov
add
adc
sub
add
aad
lcall
ficoms
loop
out
cwtl
cmp
loop
fwait
aas
sbb
add
xor
idiv
rcrb
cmpsb
add
orl
dec
rclb
xchg
mov
inc
cmp
add
sub
add
mov
ficompl
push
imul
inc
shlb
or
add
sbb
pop
movsb
add
add
add
test
add
into
std
in
faddl
add
add
daa
dec
jnp
sub
add
out
inc
loopne
mov
and
add
test
add
aas
mov
add
aam
loop
daa
pop
push
in
stos
sbb
repz
add
add
add
xchg
or
add
cmp
push
cmp
outsb
cld
cli
jg
js
bound
cmp
dec
sub
add
jmp
sti
das
movsb
add
roll
inc
push
push
data16
push
push
inc
jb
jb
add
jecxz
jo
jns,pt
fmull
and
add
push
pop
call
rol
xchg
jmp
fmul
mov
jne
fildll
add
hlt
fs
xchg
and
add
int3
nop
nop
cmp
dec
pop
pop
mov
sub
add
repz
loope
imul
push
adc
push
movhps
loope
aas
jnp
or
add
ds
cwtl
mov
insb
insb
lret
lea
add
pushf
xor
or
add
push
add
dec
xchg
icebp
pop
push
repnz
inc
out
mov
inc
ret
cmp
stos
add
push
mov
jbe
dec
imul
mov
adcl
sbb
cltd
xchg
outsb
orps
sti
jp
shrl
mov
je
test
add
pop
movsb
add
aaa
xchg
sub
nop
or
add
fists
push
mov
cmp
daa
pop
mov
add
or
add
arpl
add
sub
clc
insb
test
add
push
add
sbb
push
std
sbb
pop
stos
add
stc
jno
xchg
cmp
add
incb
fwait
lret
xchg
dec
cmpsb
add
jae
repnz
fldt
jecxz
popf
movsb
add
add
pop
adc
cmp
jae
cmp
add
add
add
xchg
and
push
add
cmp
add
das
subl
sarl
rol
pop
pusha
mov
cld
sbb
push
pusha
mov
sbb
jb
pcmpgtb
add
ret
mov
add
add
mov
scas
add
jbe
lcall
add
or
add
addb
adc
adc
add
add
add
jno
aam
rclb
icebp
out
mov
sbb
aas
adc
add
sbb
daa
dec
lahf
mov
xchg
sub
add
adc
and
nop
add
daa
lcall
add
add
in
push
add
cli
push
fstpl
add
pop
xchg
mov
test
add
aad
or
add
das
sbb
xlat
pop
int3
push
negb
mov
add
jl
rclb
cld
xor
daa
push
adc
add
mov
xchg
lahf
or
popf
jecxz
and
fildl
add
add
push
push
push
add
cmp
rorl
add
out
add
icebp
repz
xchg
fs
jle
lret
jnp
lock
rcrb
mov
mov
stc
je
jnp
cld
sbb
xor
cmp
repnz
add
or
mov
sub
lahf
leave
jg
push
fwait
sub
add
xchg
jle
inc
std
dec
dec
jae
lds
fcompl
cmp
sbb
les
add
jp
mov
pop
jns
in
mov
mov
sub
repz
icebp
cmp
inc
cmc
fdivrs
mov
mov
mov
mov
cli
xor
repnz
out
mov
mov
add
pop
mov
lcall
in
jae
cmp
outsb
jge
int3
call
sarb
sbb
test
mov
mov
btr
push
or
push
jge
xchg
mov
sbb
out
mov
or
add
add
mov
xchg
in
push
add
mov
add
add
xchg
push
add
mov
xchg
movsb
add
xor
je
jg
pop
in
loopne
add
xor
addr16
cmp
addb
push
ljmp
add
decb
add
push
add
jae
xchg
outsb
das
in
push
cmp
add
addb
push
stos
add
lods
add
add
stc
cmp
dec
out
clc
aad
icebp
and
and
lret
inc
sbb
fisttpll
cld
add
add
and
add
lds
fidivrs
addr16
cmp
mov
cmpsb
add
pop
lock
ret
mov
insb
and
add
repnz
sub
add
mov
jmp
outsb
xchg
or
aad
sbb
inc
jb
fwait
ds
sbb
sub
add
movsl
int3
xchg
test
inc
leave
repz
add
repz
add
lods
add
call
push
ss
addr16
aam
add
push
sub
add
add
das
jl
mov
add
add
jbe
in
sbb
scas
jl
or
call
push
add
dec
fwait
arpl
dec
std
lcall
add
jae
mov
add
jno
add
jo
popa
dec
out
adc
add
fs
add
aas
jl
pop
icebp
mov
add
add
mov
add
add
sub
add
add
outsb
cltd
popf
push
dec
and
add
jno
popf
dec
cmp
add
aad
pop
ret
add
call
add
mov
add
sti
ja
fsubrp
and
add
dec
cmp
fsub
add
add
dec
push
imul
add
sbb
insl
int
call
fmull
xor
push
push
int3
push
popf
sti
add
jnp
push
push
and
add
jp
out
mov
pop
inc
pop
or
add
add
add
xlat
mov
add
add
adc
add
inc
xchg
out
cli
sub
add
xchg
sub
xor
clc
inc
jbe
sub
add
xchg
xor
call
mov
rcll
int
in
rorl
xor
call
jge
divl
repz
xlat
out
loopne
mov
add
add
cmpsl
ret
adc
cld
sub
movsb
add
int3
sub
add
and
add
sti
mov
jl
mov
cmp
out
leave
into
adc
xor
mov
add
cmc
xchg
sbb
xchg
mov
add
hlt
mov
jb
mov
jp
rorb
pop
addb
pop
ja
dec
cmc
call
add
or
shlb
add
pop
cld
aas
xor
dec
pop
add
cwtl
loopne
in
cmp
xor
add
push
dec
mov
push
fdivs
outsb
push
test
add
hlt
into
addb
xchg
add
lahf
repnz
add
dec
mov
mov
add
pop
popf
push
push
inc
mulb
add
adc
add
gs
xchg
int3
scas
add
jbe
shl
lahf
push
xor
dec
aam
jmp
stc
adcl
adc
add
or
push
jmp
dec
nop
pop
sbb
cmp
add
addb
sbb
fmuls
pop
xor
xor
jo
mov
cmp
aaa
mov
push
push
fnstcw
mov
lret
in
mov
or
aas
cmp
andl
jbe
addb
mov
out
inc
mov
addb
test
cmc
rcrl
mov
dec
imul
mov
pushf
push
popa
fstpt
sub
add
addb
jb
xor
pop
push
mov
jle
imul
outsb
adc
cmpsl
push
add
push
inc
rcrb
ja
imull
mov
xor
mov
int
pop
mov
adc
xchg
add
add
xchg
dec
dec
mov
or
js
fnstsw
jp
mov
loope
je
add
pop
pop
sbb
shlb
add
add
jge
and
add
int
movsl
dec
jbe
cmp
scas
cmp
or
aaa
repnz
addb
das
inc
jns
hlt
jbe
add
push
imul
add
pop
adc
inc
mov
add
shll
fbld
movsl
fisttpl
mov
xchg
add
aas
jge
xchg
enter
add
add
sub
add
dec
adc
jg
cmpsb
add
lock
fbstp
add
add
add
cmpsb
add
push
add
jno
push
loope
add
inc
adcl
add
ret
add
jg
push
mov
fbstp
add
test
push
xchg
sub
inc
insl
jbe
add
push
add
lret
addr16
sbb
jge
xchg
scas
add
fwait
or
shl
dec
out
xchg
hlt
xchg
outsb
outsb
or
add
ljmp
mov
xchg
mov
add
int
sbb
add
sub
pusha
pop
push
add
in
xor
clc
push
add
add
rsm
add
arpl
push
mov
add
xor
lock
icebp
mov
cltd
dec
cmpsb
add
sbb
add
jg
ficoms
jnp
stos
sti
js
mov
fcomps
into
daa
jge
add
adc
lods
add
jns
add
adc
xchg
jge
add
sub
cmp
add
int
sarb
cltd
insb
jg
add
jno
pushf
je
mov
mov
test
gs
push
fnsave
and
stos
sbb
jle
daa
pop
pop
or
add
push
add
test
xchg
xor
xor
add
movsb
add
sub
add
stos
add
jmp
add
sbb
jo
mov
scas
mov
add
add
sbb
jae
inc
mov
pop
les
lock
les
adc
jnp
add
fdivp
lods
mov
sub
mov
add
pusha
inc
xchg
mov
mov
jle
mov
inc
lahf
pusha
jg
mov
add
push
sarb
mov
imul
cmpsl
lcall
add
ret
add
movsb
add
in
aam
inc
inc
mov
add
xor
mov
xor
add
mov
pop
shll
adc
fdivrs
cmp
adc
inc
jno
in
and
add
arpl
inc
adc
pop
cltd
inc
iret
inc
sahf
data16
jo
iret
xlat
jnp
mov
nop
jns
mov
sub
cmpsl
dec
jp
and
fsubl
add
or
add
mov
mov
add
outsb
mov
mov
add
jmp
add
aad
fmul
xchg
call
adc
add
xchg
push
addb
inc
adc
and
add
pop
clc
sarb
mov
movsb
add
add
add
add
adc
jge
push
add
mov
pushf
loope
jnp
adc
inc
push
add
mov
jae
add
cmp
mov
sbb
mov
ret
lock
xor
push
mov
add
int3
into
sbb
pusha
repnz
scas
adc
fildl
add
and
add
jno
scas
jecxz
loopne
cmp
cmp
mov
cmp
jl
mov
enter
jl
scas
jns
arpl
add
rcl
xor
mov
mov
add
add
in
ret
jo
add
test
add
das
xor
jbe
sub
jno
inc
std
mov
cmpl
ss
add
stos
add
mov
sub
add
inc
shr
push
push
adc
dec
pop
or
add
negl
push
xor
out
pop
sbb
jo
add
test
add
enter
add
aaa
mov
add
andl
pop
daa
and
add
jg
add
add
sbb
push
add
add
sbb
cmp
stos
dec
sahf
sub
sti
pop
jns
add
mov
out
mov
add
outsb
push
add
pop
cmpsl
insb
pop
cwtl
adc
xor
xchg
scas
add
outsl
test
add
xchg
add
fs
dec
shrl
shrl
jo
mov
add
fwait
push
loop
stos
add
dec
adc
lods
push
inc
xchg
jge
addr16
and
push
nop
xchg
mov
push
mov
add
rolb
push
sarl
add
sahf
pop
or
add
push
add
mov
and
add
pop
cmp
add
add
jecxz
push
cwtl
mov
add
aam
add
mov
add
jae
push
pop
cmpl
and
add
mov
adc
in
or
add
add
jl
je
add
mov
add
xchg
dec
or
add
inc
cmp
sti
pop
inc
sub
add
stos
cmp
inc
jmp
pop
xor
fs
sub
add
or
add
add
jmp
das
sub
inc
cmp
outsb
push
leave
cmp
jnp
cmp
pop
addb
rorb
add
and
add
repnz
ja
xor
dec
cmp
ljmp
add
adc
cmp
adc
add
sbb
iret
mov
add
add
mov
jl
push
jle
les
sbb
ret
jno
add
test
fwait
xchg
inc
dec
addl
fsub
jo
stc
adc
add
jg
add
jge
add
leave
cmp
add
mov
sarb
xchg
add
jne
mov
loop
idivb
cmp
cmp
and
add
push
popa
mov
sbbl
mov
inc
insb
mov
cld
adc
add
add
xor
cld
push
loopne
inc
sbb
add
stos
add
js
stos
add
mov
scas
addb
add
add
dec
jl
notb
nop
mov
mov
gs
movl
xor
or
jge
inc
and
add
add
fs
mov
add
pop
sub
lret
add
jmp
add
add
cld
mov
add
sahf
outsl
or
add
imul
mov
sti
mov
cmp
gs
int3
stos
add
jnp
add
mov
add
add
push
sbb
add
mov
inc
mov
add
pushl
inc
adc
add
sbb
add
xchg
push
inc
jbe
sarl
aad
jno
dec
xchg
cld
data16
add
xchg
mov
xor
stos
add
outsl
pop
dec
sub
add
add
cmp
add
dec
push
add
fidivl
mov
add
add
hlt
push
mov
add
repnz
add
add
xchg
mov
add
add
lock
add
add
sbb
mov
cmpsb
add
pusha
cmp
test
jbe
std
cmp
inc
push
add
sub
add
push
push
dec
jno
ret
mov
add
mov
mov
mov
add
add
lock
add
adc
xchg
jne
insl
pop
ljmp
fsubl
add
pop
sub
add
push
xchg
pop
xchg
adc
sbb
outsl
mov
inc
add
add
mov
mov
fsubrs
xor
add
cmp
cltd
and
add
test
add
fsubl
add
mov
sub
add
pushf
mov
or
add
lahf
push
in
pop
ret
add
pop
popf
gs
mov
ror
sbb
jmp
add
hlt
shrl
add
ja
outsb
cmp
aam
fdivs
jp
or
add
add
cmp
add
inc
scas
mov
add
mov
scas
mov
add
push
stos
xor
mov
pop
jnp
and
add
jbe
dec
popf
loop
and
add
cmpsl
addb
sub
add
push
lea
xchg
push
or
add
mov
add
outsb
loopne
inc
loope
hlt
mov
add
pop
add
out
xchg
rcll
bound
and
test
add
mov
ret
ljmp
ret
out
mov
dec
js
push
mov
add
mov
jg
add
and
add
fisttps
push
or
add
shrl
xchg
nop
rol
add
sbb
add
stos
pop
xlat
push
or
sub
add
test
bound
add
leave
xchg
and
add
add
xchg
and
add
jbe
inc
or
add
add
sbb
add
xchg
mov
je
mov
sbb
pushf
push
mov
jne
cmpsl
rorb
sub
add
sysexit
pop
rclb
or
add
mov
jecxz
addb
cld
pop
cltd
dec
add
adc
cli
das
cmp
add
cmp
push
push
push
movsb
add
enter
test
rcll
push
mov
shl
scas
add
jbe
movsl
dec
xchg
movsb
add
xor
xchg
mov
add
sbb
sub
add
nop
cmp
add
data16
add
adc
add
and
add
dec
seta
add
lods
push
stos
add
fbld
rep
and
cli
call
add
or
add
adc
add
aaa
push
addb
push
in
adc
sti
adc
xor
fimull
sub
mov
add
pop
add
add
fisubrs
dec
aam
xorl
xchg
xchg
mov
sub
add
cltd
cli
jecxz
lock
inc
test
mov
add
negl
add
pop
outsl
xor
iret
add
loope
pop
jo
and
add
add
mov
fcmovbe
ret
mov
mov
add
sti
out
sub
add
into
jle
enter
arpl
gs
dec
addb
loopne
or
pushl
add
lods
sbb
or
add
jecxz
mov
push
add
push
pop
cmp
push
sub
mov
call
add
inc
insl
jns
sbb
inc
hlt
sub
xchg
or
add
push
add
inc
shrb
push
sahf
cmp
add
mov
rorb
pop
mov
les
aaa
and
lock
lcall
fbstp
sti
outsb
stos
dec
cmp
fs
dec
movsb
add
shrb
add
cmpsb
add
dec
xor
lahf
in
jns
jno
xchg
outsb
fdivl
jmp
mov
xchg
push
push
fmull
xchg
dec
inc
push
sbb
push
add
aas
xchg
add
repz
pop
lods
add
movsb
add
popa
arpl
inc
aad
add
shl
xchg
ds
or
jbe
pop
dec
pop
or
add
icebp
cmp
adc
pop
pop
mov
mov
add
add
in
xchg
jge
clc
mov
add
add
add
cmp
cmp
add
sbb
add
int3
or
mov
add
or
add
pop
dec
pop
fimull
add
dec
test
add
mov
fildll
fcmovb
inc
sti
fcoml
xchg
mov
xor
sbb
mov
popa
bswap
adc
test
push
jno
xlat
xchg
add
dec
movsl
or
imul
repnz
pop
insl
test
rolb
add
push
sub
imul
xchg
and
add
pop
add
add
lds
add
shlb
testl
inc
jae
and
loop
xchg
mov
stos
sbb
pop
outsl
or
frstor
xchg
mov
sub
add
pop
add
add
jae
les
add
insb
mull
add
idivl
call
jns
fidivs
add
out
mov
sub
inc
pop
outsb
filds
lea
ret
inc
mov
or
adc
add
in
je
mov
and
add
icebp
jle
iret
pop
outsl
mov
sbb
jg
add
mov
jle
test
add
rcrb
ss
cmp
mov
jae
out
xchg
mov
cmp
mov
jl
ss
cmp
test
add
add
mov
leave
or
push
add
mov
adc
add
fnstcw
add
mov
add
add
xchg
cwtl
int
xlat
mov
mov
add
add
fcompl
js
loope
mov
cmp
mov
add
loope
fnstcw
aam
push
jb
add
xor
sub
add
and
add
jns
in
callw
pop
pusha
lret
cmp
int
lea
jg
add
in
stc
xor
jo
mov
shlb
test
add
add
inc
mov
add
add
dec
in
and
add
addb
movsl
dec
xchg
test
add
roll
mov
sub
add
lds
add
loop
xor
jl
push
iret
sbb
add
add
push
or
out
or
add
mov
mov
in
inc
pop
hlt
sub
add
xchg
adc
add
cltd
dec
xchg
mov
push
mov
add
loope
and
add
add
pop
outsl
inc
aam
adc
and
lret
add
out
xor
mov
add
shlb
add
repnz
and
add
cmp
sbb
pop
mov
addr16
sahf
lcall
add
sahf
fsubr
mov
iret
sbb
add
ljmp
mulb
add
push
xor
fcmovne
shr
sar
ljmp
add
xchg
dec
pop
mov
into
subl
out
add
arpl
add
adc
into
test
add
loopne
icebp
push
sets
lahf
jg
mov
clc
mov
mov
out
dec
push
push
aad
mov
int3
xchg
add
std
push
imul
push
into
and
add
das
aas
test
add
jns
ljmp
push
pop
mov
scas
ss
mov
hlt
or
pop
ljmp
sub
add
out
dec
jp
fcmovbe
push
pop
in
mov
adc
dec
pop
cmc
add
add
add
daa
jne
pusha
ss
popfw
movsl
xchg
ret
inc
inc
or
add
adc
add
sbb
mov
and
adc
mov
add
add
cmp
add
add
cli
rcr
add
sub
call
jecxz
add
add
cmp
add
scas
sti
lock
add
pop
lret
sbb
or
repnz
add
sbb
adc
lea
inc
or
out
subl
test
in
jno
mov
xchg
rorb
leave
incl
add
jge
inc
loope
dec
sbb
mov
jae
sbb
add
cmp
leave
xchg
lcall
add
fsts
mov
mov
mov
pop
mov
movsb
add
data16
sbb
rcr
fwait
sbb
fdivrl
stos
push
pushf
testb
das
icebp
je
jmp
int
add
outsl
xor
aam
stc
or
insl
addb
lods
sub
add
mov
outsl
jmp
inc
int3
mov
loope
add
and
add
out
fsubs
movsl
out
gs
add
and
add
sar
add
in
dec
xchg
and
pop
push
inc
mov
add
add
add
mov
add
add
jmp
add
lods
cltd
push
mov
add
add
xor
clc
loopne
inc
add
add
add
add
jmp
bnd
add
cltd
insb
pop
pop
xchg
add
jl
aam
dec
cmp
add
aas
sub
add
test
push
ds
into
and
add
dec
jbe
add
fidivrs
mov
add
jbe
aaa
inc
out
add
test
add
fcom
stos
add
add
mov
add
xor
repz
mov
lcall
mov
xlat
repz
mov
ss
stos
add
mov
stos
add
gs
notb
mov
add
adc
dec
mov
sub
add
rclb
int3
pop
rorb
add
add
add
lret
add
addb
call
jns
dec
in
mov
sbb
int
fiaddl
pop
push
in
mov
xor
inc
sub
add
and
adc
add
inc
mov
test
add
push
mov
lahf
jae
daa
add
mov
sub
nop
das
pop
leave
leavew
push
add
imull
ds
int
les
cmpsl
and
add
add
mov
inc
pop
push
addb
fucomi
mov
aaa
sub
fildll
sti
addb
rcr
into
adc
inc
sbb
sub
add
mov
and
out
pop
sbb
int3
add
roll
test
add
mov
lcall
lods
add
adc
inc
lds
in
jno
ljmp
and
add
fucomi
push
xor
addb
lret
mov
sahf
push
add
sarl
mov
adc
jbe
in
std
or
push
out
add
pusha
mov
dec
sbb
imul
mov
add
sti
dec
mov
inc
or
add
add
inc
pusha
add
add
in
adc
adc
std
inc
dec
cmp
add
ss
add
stos
xor
movb
xchg
add
add
jecxz
movsb
add
and
add
push
inc
adc
int3
or
add
mov
mov
in
inc
loop
test
add
add
pop
xchg
arpl
mov
insl
gs
cmp
pop
push
sbb
and
add
mov
loopne
addb
mov
add
iret
aas
mov
scas
fcompl
add
jbe
or
add
stos
insl
jg
add
jns
add
or
add
outsb
dec
push
adc
lods
add
sbb
add
add
mov
add
js
bnd
daa
xor
cmc
out
fsts
pop
sub
mov
inc
xchg
cmp
push
push
pusha
cmp
add
addb
push
enter
add
outsb
push
stc
rorl
add
add
add
mov
imul
jp
push
loop
mov
into
jle
out
add
add
data16
fmull
add
sbb
dec
push
add
lods
adc
neg
xchg
add
add
and
pop
je,pt
add
adc
push
adc
xchg
adc
add
jecxz
add
jns
lcall
mov
add
add
ljmp
sub
add
dec
cltd
sub
add
daa
mov
mov
mov
mov
jno
add
addl
add
and
add
adc
test
add
aad
push
js
mov
xchg
mov
cmp
sub
imul
push
in
xchg
add
add
int3
icebp
cmp
ret
ds
sub
add
dec
adc
sarb
add
imul
das
cmp
shlb
pop
pop
sbb
add
inc
cmpsl
pop
shlb
je
or
mov
call
add
dec
pop
push
jo
je
add
cltd
or
add
add
or
cwtl
push
lea
adc
or
add
rclb
jne
sti
xchg
cmp
enter
adc
dec
xchg
stos
and
add
push
lret
push
add
lods
add
nop
mov
add
jb
fdivrl
mov
bound
or
add
cmp
add
add
inc
xchg
push
add
jb
jns
lds
adc
stc
push
push
nop
out
lods
mov
push
sbb
add
push
add
div
lods
dec
adc
pop
xchg
and
add
pop
mov
daa
cwtl
fdivrp
out
stos
add
push
cmpsl
or
add
jge
pop
mov
fwait
mov
pop
stc
xor
cli
mov
sub
add
or
jno
add
loop
push
add
iret
arpl
add
cwtl
mov
add
pop
jl
add
les
aad
jmp
xchg
pop
repnz
mov
cli
jns
popf
mov
add
out
in
ficomps
dec
adc
jge
add
shlb
add
add
lea
add
cld
xor
inc
sbb
sarb
inc
push
mov
pop
daa
mov
aas
pop
test
add
pop
xchg
and
add
xchg
notl
daa
sahf
loop
add
adc
call
lahf
jecxz
cltd
test
add
psrlw
addr16
jge
test
add
sbb
jecxz
ljmp
sbb
push
mov
xor
ss
dec
cld
cli
push
ret
pop
int
inc
inc
sub
mov
jo
add
xor
add
inc
xchg
jl
movsl
fcmovne
mov
insl
sub
shrb
jo
and
cmp
inc
std
or
xor
pop
mov
cmp
cwtl
in
mov
add
and
add
cmp
leave
pusha
hlt
mov
mov
add
cmp
xlat
pop
maskmovq
testl
xor
push
ret
sbb
imul
add
and
add
add
mov
push
fcompl
add
arpl
inc
jns
add
dec
xchg
mov
add
pop
pusha
cmp
pop
shll
cmp
xor
add
mov
jl
add
or
add
add
jg
addb
outsb
mov
mov
mov
add
aas
fnsave
push
add
inc
fwait
sub
dec
cli
lods
add
add
add
jmp
sbb
xor
roll
add
popf
addb
sub
add
fwait
jne
shrl
add
cmp
sub
add
and
lahf
cmc
pop
mov
add
jmp
adc
jl
xchg
push
add
jle
add
lods
jb
add
xchg
mov
in
addb
lret
jae
aad
jb
mov
add
repz
add
insl
pop
inc
shr
sar
mov
ret
out
movsb
add
loope
fsubr
push
mov
inc
add
push
and
enter
xchg
push
addb
xchg
fmuls
out
stos
add
push
pop
mov
push
dec
dec
test
add
int
xchg
stos
add
mov
int3
jl
xchg
and
add
adc
xor
add
pop
xor
mov
add
shr
mov
add
dec
push
pop
push
add
add
add
pop
push
add
iret
cmpsl
sub
rcrl
add
ja
and
cltd
inc
cmpsb
add
mov
sbb
cwtl
pop
mov
add
mov
add
daa
add
add
add
dec
daa
jecxz
add
or
add
add
imul
out
jecxz
add
dec
cmpsl
test
mov
jns
jg
aad
jb
push
add
push
out
pop
mov
mov
xchg
in
push
inc
or
add
add
inc
stos
add
xor
add
mov
add
lds
add
adc
shlb
dec
push
mov
add
jne
stc
cwtl
mov
push
daa
fstl
in
movsl
insb
mov
mov
jecxz
stos
add
push
add
add
inc
enter
sbb
test
add
das
rorb
pop
jmp
stos
add
rcrl
add
inc
mov
stos
jg
xchg
add
sti
pushf
gs
aad
loopne
mov
mov
inc
inc
xor
nop
cmpsl
cli
mov
add
pop
int3
out
add
jle
sti
sub
and
repz
pop
pop
dec
add
add
pop
fwait
sub
add
call
or
lds
cmp
icebp
xchg
pop
rcll
bound
mov
and
clc
jno
xor
xor
mov
adc
jno
mov
mov
add
je
ficomps
xlat
inc
lret
mov
add
or
add
shlb
add
or
jo
mov
push
pushf
inc
push
stc
and
add
repnz
sar
and
mov
mov
add
mov
pop
pop
cld
fwait
add
add
pop
pop
and
add
and
add
and
mov
in
outsl
sub
add
test
add
into
fsubr
jne
and
add
add
dec
sub
add
aas
ja
aas
aas
int3
sub
add
jge
cli
xchg
dec
cld
pop
std
scas
add
push
add
cmp
jecxz
std
push
cmp
sub
add
mov
dec
jmp
add
add
inc
dec
lcall
add
add
mov
cmp
addb
pop
add
and
add
push
xchg
fsubs
sbb
dec
mov
add
addl
in
add
and
add
sbb
mov
add
in
pop
nop
rep
lods
add
xor
cmp
jge
mov
pop
mov
sahf
push
jge
add
insl
movsl
mov
add
iret
push
add
jo
add
jnp
add
divl
jge
jae
mov
add
and
add
cltd
add
add
ss
pop
imull
add
in
jne
das
lock
xor
mov
add
sbb
js
mov
add
shll
fsubl
setno
dec
add
lcall
push
aam
add
add
add
jmp
not
xchg
lods
aaa
lret
push
jne
xor
ljmp
cmp
int3
add
dec
lret
les
dec
fcmovnbe
dec
leave
loop
sbb
jae
fisubrs
cmp
or
ljmp
sub
sub
sahf
pop
jno
add
add
addb
popa
mov
pop
js
arpl
add
stos
lds
xchg
pop
xor
add
inc
add
add
fidivrs
fwait
xchg
movsl
stc
ret
fistps
test
call
add
add
std
ss
aad
cmpsb
add
lods
cld
fwait
jge
xor
add
aas
sbb
fsubs
add
xchg
repz
add
jbe
pop
leave
adc
jg
sub
push
jp
add
add
movsb
add
repz
scas
cmp
add
scas
movsb
add
and
jle
jns
xchg
or
add
push
fwait
and
add
mov
add
sub
add
inc
xchg
xor
mov
and
add
mov
fmul
into
ljmp
push
js
test
add
stos
add
push
mov
add
pop
test
add
das
cld
cmp
arpl
out
sub
add
daa
pop
dec
add
add
pop
andl
dec
movsb
add
dec
jmp
add
adc
push
data16
add
add
add
repz
add
aam
add
jmp
add
add
fnop
mov
ds
inc
xor
add
mov
lcall
add
add
js
inc
jmp
shr
push
push
fldcw
jno
aaa
jg
or
sti
pop
das
push
and
add
mov
add
add
idivl
add
clc
xor
divb
cmpsl
mov
add
dec
sbb
add
pop
test
std
jle
imul
and
add
push
add
ljmpw
loope
add
add
add
dec
je
add
enter
div
inc
imul
add
mov
fmuls
fsubl
out
add
cwtd
adc
add
sub
add
jb
pop
dec
mov
add
push
xchg
mov
mov
mov
rcr
mov
cmp
sti
adc
or
add
loop
add
test
add
and
icebp
dec
jecxz
inc
jo
out
popa
dec
xchg
jno
xor
in
call
jecxz
and
add
fsubrp
xor
cmp
lret
sub
add
std
fwait
jbe
aas
and
add
popa
cmp
adc
add
and
add
and
shr
test
add
lea
cmp
adc
aaa
sar
int3
cmp
add
int
add
repz
add
jl
xchg
add
xchg
pop
jmp
add
mov
icebp
mov
pop
imull
add
jne
dec
xchg
push
mov
xor
hlt
daa
or
add
mov
add
pop
mov
sub
add
add
add
lret
lea
xchg
add
jne
daa
out
inc
dec
xor
jo
popa
pop
rcll
inc
add
xchg
fmull
add
inc
push
mov
add
addb
mov
inc
jmp
jp
pop
addb
mov
inc
pushf
dec
pop
imul
jle
pop
dec
mov
add
mov
aam
add
ror
jmp
add
fists
add
add
aaa
jg
mov
xchg
push
jbe
sbb
add
mov
dec
dec
icebp
add
enter
add
rcrl
sbb
mov
pop
aas
mov
or
lods
add
and
loop
cmp
add
hlt
outsl
ficompl
mov
add
mov
inc
repz
cmp
adc
sub
add
out
test
add
imul
add
and
add
mov
add
push
call
notb
xor
xor
enter
push
xor
inc
arpl
cmc
xlat
out
test
in
xchg
mov
add
push
add
lock
mov
add
add
insb
sbb
add
inc
mov
or
add
add
inc
cmp
dec
pop
shll
outsl
aas
fcmovu
sbb
xchg
add
fsubs
lea
icebp
mov
mov
outsl
jne
test
sbb
inc
mov
imul
outsl
xor
add
add
jl
cld
and
add
xlat
enter
and
add
mov
testb
stos
out
xchg
push
adc
fcoms
inc
inc
mov
pusha
ss
test
or
je
loopne
jnp
cltd
ja
xchg
add
add
fstl
add
mov
jl
js
jno
lret
add
lods
add
stc
or
add
push
stos
in
inc
je
inc
enter
inc
cmpsb
add
add
inc
ds
push
in
out
mov
inc
cwtl
movsl
imul
orl
add
leave
in
fidivrl
xchg
out
or
add
sarb
cmc
xor
cmpsl
xchg
setge
mov
add
sbb
dec
push
add
add
add
orl
mov
pop
scas
cmp
out
jl
inc
movsl
pop
dec
jg
xor
adc
test
bound
jne
lret
dec
ss
int3
repnz
add
cmp
add
pop
aad
and
add
pushf
sub
add
add
xchg
ret
pop
lds
add
pop
sbb
mov
insb
ljmp
in
cmp
push
repnz
add
add
js
repnz
outsb
mov
popa
push
push
cmp
movsb
add
sarb
pop
data16
or
add
sub
into
lcall
xlat
data16
add
lret
std
fcmove
add
cmpsl
lds
jle
jo
xor
add
into
iret
lds
pop
iret
lret
xchg
xchg
inc
loope
enter
repnz
in
test
add
into
cmpsl
stc
lret
adc
xchg
aam
fisttpll
pop
mov
lock
add
rcrl
or
pushf
imull
add
lock
ficoml
nop
mov
scas
add
sub
sub
cltd
dec
fidivs
mov
leave
dec
fbstp
adc
mov
add
loopne
shrb
add
inc
sub
add
cmp
pop
lock
les
fisubrs
add
add
add
mov
add
add
xchg
filds
add
sbb
adc
dec
sbb
add
add
add
fnstcw
push
jmp
enter
push
add
mov
or
add
pop
inc
jnp
or
nop
sbbl
fisubl
pop
sbb
pop
sar
xor
mov
add
inc
movsb
add
push
ret
in
push
pop
adc
adc
jae
add
and
add
xchg
rorl
mov
add
add
mov
add
ror
and
add
pop
aam
sti
pop
pop
lds
inc
cmc
inc
and
add
addb
xor
ret
push
jo
jmp
outsl
pop
jno
sub
pop
mov
xor
mov
mov
jl
adcl
fwait
push
adc
jo
fwait
shl
adc
les
scas
xor
lock
add
xchg
int3
add
and
pop
mov
dec
pop
mov
add
and
pop
xchg
jge
push
repnz
add
and
xor
add
lret
xor
bound
test
add
adc
int
jecxz
in
add
jns
add
aad
sub
add
sti
outsb
shl
leave
out
ret
in
adc
cmp
std
adc
sub
add
in
addb
in
cltd
add
add
idivw
add
stc
mov
pop
pop
into
sbb
add
xchg
ret
push
or
add
mov
inc
sar
xchg
pop
add
add
stos
add
nop
sub
add
movsb
add
xchg
fists
mov
mov
add
test
add
xchg
mov
and
add
jmp
stos
add
sarl
add
add
mov
dec
xchg
fnsave
add
add
add
xor
cmpsb
add
jg
push
outsb
mov
les
push
cli
aam
lods
add
lea
add
inc
int3
scas
add
xchg
or
sti
jo
fbstp
add
clc
int3
dec
sbb
imul
add
adc
rcrb
pop
cmp
lds
repnz
add
inc
sbb
add
addr16
icebp
mov
in
sbb
sbb
jns
adc
or
add
mov
jae
je
je
and
movsl
lret
stos
add
push
cmp
add
adc
mov
cmp
cmp
jno
add
rcrb
fmul
call
mov
adc
div
in
mov
sub
add
jge
mov
push
out
outsl
cmp
stos
add
add
add
je
add
push
fcom
int3
sub
sub
add
pop
sub
and
add
jecxz
push
add
ja
bound
int
movsl
jne
into
call
shr
lods
add
push
jmp
enter
lret
jae
inc
mov
lds
sub
add
lea
into
pushf
bnd
sub
test
add
jp
stos
add
sti
cmp
push
rorb
xchg
js
add
xor
std
into
sub
add
andl
add
add
mov
add
jne
pop
xlat
lret
add
data16
jno
add
xchg
add
fs
cmp
jle
push
mov
aad
mov
add
add
xorl
flds
inc
and
add
pop
dec
mov
call
mov
mov
imul
fwait
sub
add
sub
add
inc
arpl
addb
jp
xor
inc
push
mov
and
add
add
pop
scas
add
out
loop
add
or
add
add
fistps
add
das
jno
cmc
ss
outsl
hlt
out
popa
out
add
outsl
add
add
test
lods
sub
add
xor
fwait
lret
push
pusha
jecxz
ficompl
jae
xor
push
sbb
loope
and
imul
add
xor
sbb
imul
adc
and
add
or
sub
add
out
popf
fstl
movsl
loope
popl
loope
loop
add
adc
push
inc
and
add
arpl
mov
add
pop
or
enter
clc
xchg
outsl
sub
add
pop
and
popf
push
test
add
xchg
movb
decl
sub
add
add
imul
lods
lcall
add
fcomp
test
add
mov
sti
mov
mov
add
add
addb
out
shll
xchg
mov
lds
fdivrl
lret
pop
lds
orl
add
aas
pop
daa
mov
inc
out
mov
inc
iret
push
add
cmc
push
cmp
mov
add
cmp
pop
rolb
sbb
add
mov
pop
cmp
pop
stc
ljmp
test
lods
scas
mov
popa
dec
add
sub
add
push
popf
aas
fwait
or
add
sbb
lods
cmp
add
mov
add
test
frstor
mov
xchg
hlt
push
add
fstpt
mov
add
inc
dec
mov
lea
add
mov
and
inc
xchg
test
add
pop
xchg
out
insb
inc
movsb
add
shlb
notb
test
jmp
xor
add
jb
daa
ret
and
add
push
dec
frstor
mov
add
cmp
add
pushf
adc
add
xor
xor
loop
add
mov
add
xor
scas
add
dec
loop
pop
jno
pop
loopne
mov
add
push
mov
pop
dec
scas
add
adc
stos
add
stos
add
cmp
in
ror
sub
add
test
insb
xchg
adc
ficoml
xchg
int3
mov
rcrl
jle
in
add
add
push
add
mov
add
push
push
aam
test
or
or
add
in
xchg
add
adc
cli
ja
mov
cmc
rcrl
cmpsb
add
sarl
inc
arpl
mov
div
mov
je
std
cwtl
shl
imul
and
add
jl
mov
cltd
call
add
add
jno
mov
add
test
add
add
incb
jl
dec
sahf
and
mov
add
sbb
dec
ss
xchg
pop
jecxz
pushl
in
das
jp
loopne
add
mov
add
xor
push
pop
inc
jp
sbbl
xchg
add
and
add
jb
outsl
mov
dec
dec
rcl
aas
cmpsb
add
lock
fistps
xor
fldt
add
cld
fs
add
cltd
fnstenv
gs
call
stc
push
mov
inc
test
add
add
mov
ret
ja
adc
add
imul
add
stos
cld
or
add
xchg
lds
add
pop
and
add
xchg
mov
xchg
mov
add
cmp
dec
leave
fmull
and
add
lret
mov
add
fnstcw
fcomip
pop
loopne
test
add
add
add
mov
sub
icebp
mov
cltd
cmpsb
add
or
add
mov
out
out
notl
out
mov
ja
mov
out
sub
js
mov
push
and
insl
or
fcoms
push
stos
add
pop
xor
mov
test
add
add
sbb
and
add
test
add
setp
out
fistpl
or
add
add
lret
daa
addr16
adc
push
xor
outsb
adc
daa
push
mov
add
stc
repz
adc
cwtl
std
add
add
int
dec
lahf
sbb
sub
add
jle
bnd
add
add
add
mov
cmp
add
add
insb
and
mov
xor
cltd
sbb
add
lret
mov
add
cmp
and
add
imul
test
add
popa
xor
inc
push
mul
fcomps
lods
fsts
bound
add
in
mov
pop
bound
add
sub
add
clc
leave
cmp
sub
in
in
fbstp
jl
inc
mov
and
xor
push
mov
addl
add
outsb
xor
add
mov
arpl
rcl
ja
add
negl
dec
sbb
addb
and
add
adc
outsl
ret
or
add
push
enter
add
and
xor
scas
add
dec
mov
jmp
ss
js
add
aam
add
scas
repnz
add
outsl
shl
mov
add
ret
add
loope
jbe
cmp
add
push
xor
rcll
int3
inc
adc
sub
add
addb
mov
rcrl
add
pop
xlat
sub
ret
or
adc
cmp
xchg
out
pop
dec
dec
lods
add
and
cmp
pop
xchg
add
xchg
outsl
jecxz
cmc
sti
psubsw
add
or
out
sub
add
icebp
fsubrl
imul
pop
cltd
pop
pushf
push
sti
dec
mov
xor
adc
jb
popa
into
or
add
add
inc
fs
mov
lret
ror
pop
test
add
push
or
add
xchg
or
nop
addr16
lods
add
dec
push
out
mov
add
lock
out
add
dec
out
jnp
movsb
add
subl
add
xor
push
loopne
addr16
pop
push
add
adc
add
push
mov
add
add
mov
sbb
adc
add
cld
cmp
pop
mov
add
jbe
xor
push
push
mov
add
inc
movsb
add
and
add
cld
ja
pusha
mov
add
aam
rol
rep
add
sbb
out
pop
push
test
enter
lcall
stos
mov
add
insb
pop
add
pop
cmp
push
inc
adc
sbb
nop
inc
pop
movsb
add
std
int3
fwait
pop
hlt
xchg
fildll
mov
je,pt
stos
add
lock
sbb
cmp
call
aam
das
mov
add
add
shrl
sbb
add
test
add
add
mov
into
add
inc
xor
mov
mov
add
mov
add
js
ret
add
addb
fcompl
push
insl
jo
imul
xlat
int
add
mov
add
xchg
nopl
stos
add
scas
and
add
insl
jno
movsb
add
jmp
jo
jmp
pop
mov
fs
iret
add
jb
out
jg
fnsave
adc
cmp
test
inc
jl
aad
jp
out
xor
lds
int
push
add
add
add
lret
and
add
cmpsb
add
mov
rcrl
lods
fistps
ljmp
xor
iret
jb
pop
popa
decl
add
pop
ret
sub
cld
dec
rcrb
sahf
leave
sbb
gs
and
add
sbb
movsl
out
inc
mov
les
mov
add
pop
adc
add
add
jnp
pop
pop
jle
mov
stc
ret
add
sbb
repz
in
rol
sbbl
les
dec
insb
dec
pop
cmpsl
bound
add
rcr
int3
in
loope
mov
pop
push
fisubl
push
adc
pop
and
dec
adc
scas
xchg
fdivs
inc
jb
jmp
adc
fnstcw
fwait
sub
jns
or
sbb
xchg
xchg
hlt
cld
add
add
add
scas
sub
dec
push
nop
in
adc
sbb
addb
mov
fstl
fiaddl
mov
jo
add
fs
pop
jp
adc
add
in
add
cwtl
imul
cmp
inc
nop
inc
int
add
clc
mov
add
jns
add
inc
and
add
fdivs
mov
sub
add
add
and
mull
shll
les
in
cmpsb
add
jns
add
ret
add
add
add
enter
add
mov
add
adc
add
in
pop
popf
in
bnd
add
adc
add
mov
jp
jno
jno
dec
sbb
not
aam
addb
mov
lret
push
add
and
add
push
cmpsl
sub
add
add
loopne
adcl
mov
addb
push
add
in
sub
daa
and
add
xor
sub
add
fisttpll
add
jo
adc
hlt
in
sbb
jmp
add
sbb
jge
xor
fildl
insl
ret
cli
adc
add
test
int
cmp
mov
add
insb
push
add
and
add
sub
add
mov
incb
add
ret
push
xor
add
add
jmp
inc
cltd
fnsave
xchg
or
rclb
cwtl
insl
cmp
les
jg
xchg
movsl
and
add
push
js
out
pop
xchg
mov
and
add
add
add
rorb
push
int3
hlt
lcall
mov
push
lcall
addb
stc
sub
add
lret
xchg
imul
jl
mov
add
arpl
add
add
stos
add
popf
stos
add
ret
cmp
into
addb
mov
pop
jp
pop
test
add
gs
dec
shll
add
adc
push
mov
add
sbb
add
enter
rorb
nop
xor
add
inc
inc
imul
xor
mov
adc
sub
add
sub
je
iret
insb
cmpsb
add
sbb
or
add
add
inc
inc
mov
add
loopne
or
in
nop
add
mov
sahf
rcll
decb
mov
mov
clc
insl
or
mov
lock
cmp
pop
les
pusha
mov
lcall
xlat
call
add
mov
add
jmp
addr16
ror
fdivrl
add
outsl
jp
cmpsl
pop
and
add
inc
mov
add
add
std
aad
pop
inc
repz
xchg
mov
mov
in
add
xchg
add
pop
or
xor
add
outsb
pop
faddl
lret
imul
das
ds
add
dec
pop
cmpsl
out
push
pusha
scas
divps
cld
cmp
push
push
pop
imul
cld
iret
mov
add
shlb
inc
pop
sub
and
call
fistpl
loopne
pop
inc
sub
add
addr16
add
add
jns
xor
sbb
jmp
rclb
clc
dec
xlat
mov
jmp
and
pushf
fmul
mov
add
dec
xor
inc
ss
cmpsl
pop
sub
add
add
mov
cmpsb
add
ja
popf
adc
add
sti
pop
movsb
add
arpl
jp
push
and
add
or
add
add
out
xor
xor
ret
int
mov
or
pushf
das
jb
mov
cld
addl
out
jmp
stos
add
cld
aaa
and
or
add
add
das
cmovg
clc
ljmp
cmc
pop
xchg
add
add
add
xchg
adc
add
nop
cmpsb
add
mov
lock
add
insl
fsubrs
or
add
push
mov
add
aad
popa
push
or
add
push
and
mov
add
hlt
notl
gs
add
jl
aam
jns
add
mov
leave
or
add
sbb
xchg
mov
sbb
xor
xor
xor
ds
mov
fs
jnp
push
loop
sbb
aaa
cmp
jecxz
inc
xor
lods
addb
in
inc
adc
dec
add
sahf
sub
add
push
daa
aaa
push
adc
add
jmp
jae
cmp
add
add
jnp
push
add
mov
push
movsl
pop
jns
fsts
mov
dec
sbb
imulb
add
rcrl
cmp
cmp
adc
dec
cmpsl
popf
xchg
ret
insb
shll
add
js
push
sarl
add
decl
add
call
std
mov
nop
movsl
sub
fisttpl
pushf
gs
cmpsl
nop
addb
je
loop
repz
cmp
lahf
lock
lcall
add
repz
add
and
les
lods
dec
xor
xchg
cli
testb
shlb
enter
jb
repnz
add
mov
lret
insl
mov
add
add
clc
mov
add
cld
push
mov
jne
push
add
push
sub
add
sar
mov
mov
cmpsb
add
scas
je
clc
sbb
icebp
stc
sub
pop
mov
test
inc
lret
cld
out
mov
add
ficoml
in
mov
sbb
ljmp
add
adc
add
mov
jmp
movsb
add
mov
add
xor
sub
add
lret
cmp
rcrb
pop
push
enter
mov
call
dec
daa
push
mov
fisubl
xor
lock
pop
sbb
arpl
pushl
mov
dec
sub
adc
mov
aam
sti
mov
add
add
and
notl
xchg
xchg
jecxz
dec
dec
mov
add
xlat
loopne
xchg
sbb
imul
and
jo
sub
push
add
cmp
jmp
push
loop
je
add
imul
pushf
shll
out
xchg
add
inc
xchg
cmp
outsl
rol
inc
adc
inc
fistpll
add
mov
add
push
or
add
dec
test
add
pop
mul
leave
inc
dec
daa
aam
out
pop
pop
xlat
gs
scas
out
out
frstor
xchg
lahf
mov
add
mov
xchg
js
add
push
cltd
mov
add
mov
xor
pop
sbb
adc
jmp
dec
dec
into
cmp
scas
add
faddl
scas
sbb
push
inc
jge
xlat
enter
mov
add
lods
mov
add
fadds
add
ljmp
add
pop
mov
add
xor
dec
in
popa
or
xchg
inc
out
push
add
xchg
fldcw
add
cmp
add
inc
adc
xchg
mov
or
mov
mov
add
dec
repz
sub
add
pop
out
xlat
loopne
enter
sbb
mov
jg
cmpsl
mov
test
insl
xchg
dec
nop
jo
jnp
sub
in
lods
mov
adc
push
fdivrl
pop
outsb
cmpsb
add
gs
mov
add
cmp
add
push
das
imul
lds
out
jle
add
dec
pop
cmp
popa
push
add
ret
jo
dec
cmp
data16
xchg
clc
xor
jno
pushf
repnz
push
add
mov
imul
sbb
add
add
adc
lods
add
mov
cmp
and
pop
xchg
jg
xor
pop
sbb
and
adc
nop
ds
jg
push
add
xchg
test
loopne
add
jecxz
adc
cmpsl
xor
mov
rcrb
adc
add
dec
dec
mov
add
jne
push
inc
dec
add
add
add
icebp
dec
mov
mov
out
add
pop
addb
adc
lods
addb
cli
and
add
or
add
jb
mov
add
jno
sub
add
push
jno
jle
sbb
add
rcr
ss
sti
hlt
outsb
adc
xchg
push
cmp
add
std
fsubl
jb
bound
add
add
in
add
imul
mov
xor
pop
loop
cmp
aam
daa
aam
mov
addr16
xchg
mov
shlb
add
or
add
dec
cmpsl
xchg
sti
dec
and
add
loopne
call
shll
or
pop
insl
arpl
mov
sub
mov
add
mov
adc
add
les
add
rorl
pusha
jmp
cmp
icebp
sub
mov
and
add
frstor
push
ljmp
pop
xorps
aam
jno
jae
mov
push
push
imul
xlat
cmpsl
inc
lret
add
leave
and
pop
in
ljmp
xor
dec
test
add
mov
addr16
mov
lret
std
adc
adcl
xchg
hlt
xor
out
jbe
inc
das
jg
jmp
lcall
jge
jg
mov
lahf
inc
add
add
mov
add
cld
or
add
add
loope
pop
push
add
add
add
xor
add
ja
mov
repnz
xchg
cmpsb
add
lahf
lea
mov
add
popa
fmull
push
daa
popa
cmp
adc
add
icebp
inc
and
add
iret
mov
test
add
add
add
arpl
fcoml
xchg
into
loope
mov
adc
aaa
fsubrl
movsl
aas
push
dec
lahf
mov
add
push
jle
and
add
add
add
mov
jns
mov
ss
mov
jge
and
add
lods
jp
jno
pop
icebp
cmp
mov
mov
add
dec
xchg
add
cmp
push
rorb
add
inc
push
dec
mov
insl
cwtl
js
add
aad
sbb
idivl
ror
inc
xchg
rcrl
push
dec
iret
out
dec
test
inc
add
inc
push
out
xchg
fdivrs
test
gs
or
out
into
inc
adc
dec
mov
mov
add
cvtdq2ps
pop
dec
loopne
cmp
decl
addb
adc
insl
lret
data16
lret
mov
rolb
imul
sbb
int3
inc
cltd
push
push
pusha
jno
loopne
xchg
add
lea
xchg
add
movsl
cmp
mov
sbb
jp
js
bound
adc
add
iret
xor
mov
cwtl
popf
pop
ja
add
jns
xchg
shl
fdivr
test
add
add
jno
sbb
test
jp
add
push
addb
shrl
add
mov
iret
nop
mov
daa
icebp
jge
push
mov
test
add
add
add
pop
in
xor
arpl
add
sbb
cmc
mov
add
xchg
push
xor
xlat
xlat
mov
mov
cld
pop
addr16
add
sub
add
les
stos
add
gs
lcall
repnz
add
sbb
xchg
aas
pop
mov
add
notl
ret
pop
addr16
mov
add
out
fwait
fs
mov
hlt
push
cld
xchg
add
sahf
add
mov
add
inc
mov
add
mov
mov
pushf
or
sarb
dec
mov
cli
mov
add
or
and
add
dec
insl
mov
or
add
jle
inc
jne
orl
in
rorl
inc
push
or
jmp
jae
cltd
jecxz
push
std
and
cmp
pop
call
daa
mov
add
test
add
add
add
aad
ss
push
rolb
add
rcll
inc
and
add
add
push
lods
sbb
insl
dec
test
add
aad
sti
add
cld
les
add
fsubs
ds
inc
inc
sarl
xor
mov
jmp
movsb
add
sub
add
cmp
push
lahf
out
incb
jl
mov
sub
insl
xlat
and
add
and
add
mov
dec
in
mov
add
fbld
add
adc
add
aas
dec
enter
cmp
aam
loope
outsb
mov
xlat
aaa
ret
in
add
mov
movsb
add
std
cmpsl
mov
pop
jae
sahf
push
insb
mov
add
dec
scas
add
jmp
fiadds
daa
mov
dec
not
cmc
mov
adc
inc
jp
out
add
fwait
mov
add
dec
ljmp
dec
sahf
rcrb
mov
add
std
addb
mov
in
sub
js
jmp
add
mov
add
lds
add
cmp
add
enter
in
push
dec
movsb
add
test
add
cmp
cmp
cld
lret
add
sti
outsb
xchg
outsb
cwtl
mov
add
enter
sarb
xchg
add
sub
push
adc
add
pop
pop
addr16
std
nop
xor
out
cmp
xchg
add
add
jle
or
add
add
test
cmp
call
cmpsb
add
push
faddl
add
pop
mov
add
and
add
xor
movzwl
mov
inc
and
add
add
xor
ljmp
add
sub
add
jmp
mov
or
add
sbbl
inc
sti
in
sbb
push
push
add
pop
andl
add
lret
fdivp
repnz
xchg
sub
add
nop
add
xlat
shlb
or
jp
add
mov
add
jge
add
shll
add
adc
insb
inc
movsl
push
cmp
mov
dec
add
sbb
xchg
xor
loop,pt
inc
mov
mov
fbld
xchg
lock
test
add
jecxz
sahf
test
addb
ret
test
imul
sbb
ret
mov
add
rorb
cwtl
int
mov
cmp
add
icebp
movsb
add
xchg
xor
xchg
sbb
stos
insl
dec
into
mov
mov
add
into
push
add
lret
dec
adc
add
or
icebp
push
lods
dec
addb
pop
loop
add
pushf
adc
cmp
pop
or
dec
mov
test
add
push
mov
add
in
and
inc
inc
xchg
or
add
or
xor
mov
add
mov
add
roll
dec
push
xchg
cmpsl
mov
pusha
cmpsl
iret
mov
add
pop
loope
push
xor
out
sbb
loop
add
and
add
les
iret
and
add
mov
add
popa
test
jg
push
add
fisttpll
lahf
sbb
xchg
jnp
and
jae
add
bound
inc
dec
lods
add
cmp
enter
les
mov
call
push
add
je
pop
sbb
add
dec
push
sarb
dec
ljmp
rclb
lds
add
cmpsl
arpl
ret
xchg
sbb
or
pop
sahf
repnz
add
or
daa
divb
jmp
xor
add
sar
mov
jecxz
pop
pop
in
out
loop
shlb
nop
out
or
pop
pop
push
mov
adc
jp
divb
rclb
fsubr
xor
jl
add
cmc
arpl
xchg
sbb
push
and
pop
jns
add
sbb
lcall
int3
daa
out
das
sbb
or
ljmp
popf
cmp
add
pop
mov
add
add
in
jnp
jl
add
jo
pop
sbb
addr16
stos
xchg
sbb
into
xchg
add
pop
ret
fsts
subl
mov
sbb
cltd
rclb
add
sub
add
aad
adc
prefetch
or
sbb
dec
cmp
adc
sbb
dec
or
add
sbb
and
pop
push
mov
scas
add
mov
add
lods
add
in
fxam
pushaw
pop
push
add
addb
in
mov
pop
jl
add
push
push
insl
add
sti
cli
xor
xchg
out
jb
sti
out
adc
add
in
jecxz
push
pop
add
das
sub
add
push
add
pop
add
xchg
stos
aam
mov
movsb
add
adc
push
mov
fstpt
stc
insb
fnstcw
orl
jb
add
jge
stos
add
mov
add
mov
add
daa
fmuls
and
shrb
pushf
cmpsl
xchg
dec
mov
inc
sbb
sar
cli
insl
sbb
ja
push
lods
add
mov
add
fs
int3
pop
ret
or
add
push
enter
add
mov
leave
xchg
pushf
xchg
add
fs
pusha
in
add
addb
mov
mull
add
push
mov
cwtl
jl
sahf
out
xchg
pop
rcll
cmp
gs
push
sub
sub
add
loop
add
cld
shll
pusha
xchg
add
mov
pop
cli
xchg
xor
dec
xchg
mov
add
in
pop
mov
adc
push
movl
or
or
add
scas
add
scas
add
addb
movsl
sbb
add
fldenv
xchg
fcmovbe
push
sbb
add
jne
xchg
clc
sub
add
cmp
ljmp
jb
dec
add
dec
pop
xchg
add
push
inc
out
dec
cmpsl
jae
int
jp
imul
jns
xchg
adc
cmc
xchg
cmp
adc
cmp
mov
sub
or
add
add
arpl
push
mov
fstpt
gs
push
add
cmp
dec
test
add
mov
in
jl
jecxz
lods
jg
mov
jne
lods
and
add
xor
xchg
adc
lods
or
inc
mov
or
out
popf
adc
pop
xchg
dec
and
adc
scas
int3
xchg
loopne
out
cmpsb
add
pop
ss
add
add
push
gs
aad
inc
aam
xchg
or
add
pusha
shll
add
adc
and
cmp
test
hlt
mov
mov
add
repz
add
add
out
mov
decl
sub
sahf
mov
add
add
movsl
addb
ja
add
pusha
adc
outsl
adc
test
mov
sbb
cltd
out
mov
inc
cwtl
popf
hlt
mov
push
mulb
fsubr
mov
dec
fcmovu
and
sub
add
add
imul
push
pop
push
mov
add
imul
add
mov
mov
lahf
xchg
sub
in
xor
shrl
and
add
add
dec
ljmp
call
add
xchg
add
shrl
add
cmp
xchg
cmpsl
fidivl
mov
mov
cltd
fucom
dec
sbb
leave
je
loope
leave
mov
mov
add
xchg
push
xor
fsub
scas
or
add
test
popa
in
cmp
movsb
add
out
jnp
xor
nop
out
out
jmp
outsb
loope
add
enter
sahf
ja
xor
or
jecxz
ljmp
ds
outsb
test
add
xor
push
add
outsl
mov
add
jnp
std
mov
test
push
add
pop
adc
fsts
xor
sbb
lods
lcall
mov
jmp
subps
fwait
cmpsl
xor
jg
and
rorb
in
inc
mov
add
add
ds
add
fidivrs
cmp
add
loopne
inc
outsl
fsubs
out
inc
dec
cli
jmp
insl
lods
xchg
dec
loope
add
ja
cmc
add
add
add
pop
mov
add
jecxz
mov
popf
mov
xor
inc
ja
stos
add
and
add
add
mov
sbb
jge
lea
add
lods
mov
add
enter
and
add
push
test
add
pop
sbb
add
add
jbe
mov
movsl
or
inc
xchg
adc
mov
dec
and
add
xchg
xlat
out
clc
and
clc
cmp
clc
add
push
xchg
dec
leave
out
out
adc
ds
loope
add
pop
or
add
mov
mov
add
xchg
enter
add
ja
add
lds
cmpsl
in
clc
jne
inc
test
add
arpl
fistpl
add
pop
mov
or
add
mov
add
sti
mulb
add
jno
sub
add
lret
mov
dec
pop
iret
shll
add
add
add
or
inc
xchg
inc
xchg
jb
jl
lret
sbb
mov
jmp
add
add
popa
cmpsl
mov
jl
add
icebp
aam
add
add
mov
mov
lret
mov
add
sub
add
imul
imul
push
and
add
and
add
aaa
jo
sbb
add
cmp
fistpll
lret
mov
das
push
and
sub
add
sub
add
loopne
push
stc
jge
in
in
ljmp
dec
push
mov
addb
addb
and
add
add
add
cmp
pusha
mov
xchg
add
adc
jge
push
add
scas
add
in
cli
or
push
repnz
dec
clc
std
sbb
stos
push
int
ja
pop
test
add
imul
add
cmpsb
add
das
in
decb
mov
add
add
add
add
add
cmpsb
add
in
inc
insl
test
add
xchg
xlat
cmp
add
in
cmp
hlt
in
add
sbb
sbb
add
sbb
jns
lea
push
add
push
mov
add
pop
bound
fsts
push
cli
insb
out
out
jg
jno
add
push
sbb
pop
test
or
add
add
ja
scas
add
or
mov
je
cmpsl
call
test
fdiv
insb
pushf
adc
inc
aas
inc
xchg
add
mov
add
fwait
xor
mov
mov
add
add
sub
add
dec
cmpsb
add
addb
mov
lea
pop
not
incl
push
movsb
add
jae
add
scas
add
push
loope
negb
add
cmpsl
int
outsl
aaa
mov
mov
lahf
ret
mov
add
cmp
aaa
sbb
add
inc
push
shlb
add
xchg
fwait
addr16
in
lods
dec
test
ds
movsl
lret
mov
jle
add
ss
orl
xchg
and
enter
jbe
mov
add
pop
inc
push
shll
aam
test
push
gs
add
iret
xlat
loop
test
add
xchg
cmp
arpl
pop
movb
sbb
xor
enter
xchg
int
jmp
ss
call
push
add
stc
clc
stos
fsub
mov
dec
mov
dec
mov
push
stc
cwtl
sbb
insb
les
stos
add
scas
test
dec
or
add
fdivs
loopne
std
mov
and
add
add
aas
ror
push
lret
into
xlat
or
add
mov
push
dec
ds
add
sub
add
mov
add
add
gs
inc
add
jb
add
add
add
lods
mov
out
ss
add
addr16
dec
popf
push
or
add
loope
and
add
ds
loope
fstl
add
mov
mov
imul
add
add
in
ds
adc
pushf
push
and
add
addb
pushf
adc
bound
xchg
nop
shll
mov
add
stos
add
sbb
fstl
aaa
adc
addl
cmp
dec
mov
mov
add
cmp
add
sbb
dec
inc
mov
add
cmpsl
pushf
push
sbb
je
rcrl
rorb
lods
add
xlat
rolb
dec
imul
mov
loope
and
cltd
mov
addb
shll
lods
or
mov
insl
and
add
ret
xchg
mov
mov
jae
add
fistpll
imull
add
shl
mov
xor
add
mov
adc
and
add
add
xchg
leave
mov
sub
add
and
inc
add
insb
sti
cmp
mov
add
sub
mov
or
add
and
add
push
push
jmp
arpl
mov
add
add
leave
outsb
mov
pop
xchg
inc
das
and
add
outsb
out
dec
or
add
add
dec
test
add
outsb
shll
add
ds
add
xchg
sbb
inc
lods
or
add
jecxz
add
add
out
add
or
add
jg
mov
cmc
inc
pusha
push
and
sbb
sub
add
or
call
cltd
jp
loope
add
psubd
jmp
xor
add
add
sbb
pop
gs
xchg
dec
pop
xor
add
pop
adc
add
fwait
push
sub
loopne
test
add
add
bound
shll
pop
push
mov
add
addb
and
popf
jns
nop
push
add
jne
inc
and
add
inc
addb
pop
xchg
inc
add
add
rol
xchg
sbb
adc
xor
int
mov
push
cmp
add
js
std
jle
popf
mov
pop
aam
popf
cwtl
and
call
add
adc
add
sbb
add
pop
lahf
stos
hlt
adc
mov
add
pop
push
ffreep
fdivrl
jns
test
sub
add
dec
les
add
mov
jle
push
ljmp
and
roll
ja
mov
mov
add
xchg
les
add
ret
imul
into
xchg
lcall
xchg
movsb
add
adc
and
inc
inc
pop
push
add
pop
lods
add
push
add
add
lea
shr
xor
sbb
xchg
decb
aaa
sub
add
mov
cwtl
out
movsl
pop
insb
push
or
loopne
popf
ficomps
and
add
jp
or
add
jg
cmc
mov
cwtl
sbb
mov
fisubl
add
mov
sbb
dec
leave
loopne
cmc
fdivp
add
add
les
add
rcrb
mov
add
fsubl
add
mov
add
jo
jg
push
arpl
jae
mov
addr16
xchg
add
adc
adc
jge
cmovl
insl
cld
pusha
jecxz
lahf
in
add
cli
rorl
orl
jecxz
add
imul
and
add
cld
mov
mov
xor
in
mov
add
add
pop
add
add
lea
cld
stos
add
add
dec
jmp
and
std
pop
scas
add
adc
lret
das
cmpsb
add
inc
mov
add
inc
aaa
pop
mov
add
out
leave
out
aaa
lret
add
adc
out
addb
das
push
add
cmp
popa
pusha
cmpsl
push
sbbl
mov
mov
mov
add
add
mov
adc
je
pop
mov
daa
mov
scas
pusha
loopne
ja
repz
add
add
inc
add
add
add
pop
or
add
leave
fisubs
stos
insb
adc
stc
in
adc
push
adc
add
fisttps
aad
and
add
xchg
ja
xchg
addb
mov
add
xlat
ja
add
pop
push
into
jae
insb
xchg
add
add
in
dec
cmp
out
cmc
hlt
aaa
addl
push
lods
inc
inc
test
add
sahf
jecxz
inc
arpl
rcr
ficompl
testl
mov
add
scas
jae
sbb
popf
cmp
pop
test
add
popa
lock
sub
add
and
pushf
xchg
outsb
xchg
arpl
add
in
jno
sbb
js
clc
les
repz
mov
add
push
push
test
add
add
mov
add
add
sbb
add
popf
pusha
outsl
pop
add
mov
add
je
add
sub
add
add
outsb
aas
inc
insb
lret
push
lret
cmp
pop
cmp
sbb
sar
in
add
push
nop
mov
add
imul
add
xor
inc
pop
pop
jne
das
xor
add
xchg
js
mov
cmp
inc
mov
add
arpl
popf
lds
push
dec
adc
xchg
and
cmp
dec
stos
add
arpl
mov
clc
hlt
out
mov
sbb
rolb
xor
add
xor
and
add
mov
xchg
adc
int3
rcll
pop
push
push
mov
lods
push
sub
fadd
push
or
add
jne
and
inc
mov
xlat
jmp
dec
out
aas
push
leave
stc
pushf
daa
mov
dec
stos
outsb
enter
mov
add
rcrb
mov
push
dec
add
mov
add
daa
pop
or
cmpsl
clc
popf
sub
mov
add
jb
add
std
loopne
data16
pop
popf
dec
jae
push
push
pop
hlt
push
fidivrs
pop
mov
inc
outsl
pop
pop
sahf
dec
imul
push
jecxz,pt
leave
pop
mov
add
repz
add
addb
inc
lret
mov
jmp
and
jecxz
sahf
lcall
xchg
movsb
add
jge
imull
xchg
xor
jl
jbe
mov
add
mov
add
adc
pop
gs
xchg
out
sub
add
add
rcr
outsl
adc
add
and
add
pop
mov
adc
test
inc
fidivs
add
ja
addb
mov
sbb
pop
mov
iret
ja
xor
mov
enter
push
sbb
fadds
add
add
and
add
nop
pop
shrb
ret
add
push
add
sbb
adc
fistps
outsl
insl
add
cmpsb
add
adc
in
cmpsb
add
sarb
push
fwait
push
cld
nop
test
mov
jbe
xchg
and
add
add
sub
outsb
xchg
fbstp
addl
dec
cmp
adc
insb
out
and
add
outsb
in
add
ficompl
cmp
cmp
aaa
adc
bound
test
add
add
aas
push
add
add
xor
fwait
aam
inc
mov
cmpsb
add
inc
adc
xor
mov
add
repz
sub
and
imul
add
xlat
mov
inc
test
add
sub
mov
add
push
adc
mov
add
push
lret
dec
add
icebp
cmp
mov
jmp
pop
dec
sub
add
add
jp
jle
cmp
pusha
mov
pop
aaa
xor
ret
inc
xor
add
add
lods
add
pop
testb
add
popa
jne
xchg
add
add
iret
dec
fstps
xor
and
in
pop
lock
add
add
xchg
out
mov
jg
out
sbb
lea
movsl
popf
and
add
inc
pushf
pop
cmp
pusha
bound
sbb
cmp
pop
mov
add
adc
lods
pop
scas
add
cmp
inc
in
inc
pusha
clc
lret
dec
mov
pop
into
int3
int3
faddl
cmp
xchg
mov
add
add
add
ss
outsl
gs
dec
pop
pop
mov
sbb
ficompl
add
ret
add
movsb
add
cmp
neg
xchg
mov
ret
push
push
sti
mov
ret
out
jl
mov
push
sub
shrl
add
rcrb
push
add
push
aas
les
outsb
and
add
push
add
cmpsl
inc
add
add
cwtl
repnz
pushf
dec
lcall
sbb
jo
add
outsb
pop
jl
ljmp
adc
js
jge
insb
inc
cmp
adc
xchg
fsts
push
xor
sub
add
mov
add
cmpsb
add
cmp
je
add
inc
push
push
add
add
cwtl
cmc
mov
test
add
push
and
add
or
sbb
add
push
inc
mov
add
add
dec
data16
add
push
add
mov
add
flds
cmp
inc
fstpl
ljmp
add
mov
ljmp
add
imul
mov
mov
jg
cmp
lods
add
inc
jge
cmp
mov
mov
xchg
add
pop
loop
mov
mov
mov
add
push
insl
pop
imul
add
cwtl
les
fldt
xabort
pop
mov
add
dec
lret
xchg
rorl
add
mov
add
into
push
push
repnz
and
add
jmp
aas
ret
jb
sti
das
inc
mov
add
jno
outsl
mov
loop
adc
mov
inc
adc
or
mov
add
mov
filds
add
jbe
stos
add
add
add
in
ss
xchg
add
mov
cmpsl
adc
add
lods
add
das
hlt
ds
bound
testb
lods
rol
je
imul
sub
add
dec
pop
test
add
pop
xchg
xlat
adc
pop
insl
loope
shll
sbb
divl
out
pop
loop
test
add
push
into
js
xor
shlb
lds
push
ds
cmp
dec
sti
xor
add
popa
lret
jmp
jns
pop
dec
pop
addr16
ja
dec
mov
mov
add
pop
mov
add
mov
add
xchg
push
scas
cmpsb
add
cmc
cli
js
push
nop
fisubrs
or
mov
dec
or
add
bound
mov
add
add
out
pop
ljmp
icebp
sub
insb
sub
add
iret
movsl
pop
repz
mov
jnp
imul
mov
fldlg2
xor
push
add
sahf
pusha
pop
inc
mov
add
cmp
daa
cmpsb
add
push
xor
xchg
sub
mov
fisubs
loop
sbb
fdivrl
mov
add
pop
mov
or
add
add
lods
add
mov
call
mov
xor
jge
pop
js
lret
cmp
sbb
movsb
add
mov
add
and
lahf
xor
xlat
ds
add
push
xor
mov
sub
add
mov
push
sahf
aaa
into
adc
out
inc
pop
xchg
clc
mov
stos
call
add
enter
movsb
add
stos
add
ret
mov
fsubrl
add
fcompl
dec
mov
add
xor
lods
add
xor
out
pop
rorl
scas
inc
lock
int3
xlat
and
add
stos
fwait
lock
xchg
push
aam
je
xchg
fsin
add
insl
sahf
xor
call
jge
pop
inc
pop
dec
inc
mov
add
popa
mulb
sbb
add
repz
rclb
jbe
add
sub
add
in
jns
cmp
add
lahf
mov
jne
add
js
jp
push
add
jle
clc
xchg
pop
push
stc
addr16
pop
test
loopne
lea
lret
or
add
cltd
mov
daa
adc
pop
push
lret
pcmpgtd
add
mov
inc
insb
les
add
aad
mov
or
mov
add
dec
sub
add
jo
test
dec
addb
xchg
sarb
bound
jg
add
xor
mull
iret
pop
pop
clc
scas
loope
adc
add
in
out
pop
jg
mov
lea
add
mov
push
add
push
sub
add
sbb
in
cmp
cmp
fidivrl
push
jecxz
add
ret
and
sub
cli
pop
dec
jge
adc
outsb
in
leave
xchg
add
clc
jo
call
popa
mov
test
or
fsubrs
stos
scas
add
test
aas
roll
lock
add
dec
ds
stc
inc
and
mov
ds
stos
add
jo
insb
into
sbb
iret
cmp
push
add
mov
add
data16
add
lds
aaa
cmpsb
add
sub
xchg
dec
add
cwtl
cmpsb
add
lret
jnp
imulb
and
add
xchg
xor
out
mov
movsb
add
add
movsb
add
in
pusha
dec
and
outsb
cltd
inc
ds
xor
insl
cmp
push
imul
pop
sub
push
jmp
jo
js
and
add
mov
shlb
arpl
fidivrl
mov
add
add
xchg
lds
out
xor
and
add
fbld
loope
dec
inc
dec
inc
xchg
xlat
cwtl
sbb
mov
lahf
out
lea
xchg
dec
insb
inc
sti
imul
add
sbb
mov
sub
add
mov
dec
mov
push
cmc
or
add
add
mov
int
sub
add
subl
pop
inc
rcr
rcrb
clc
mov
shr
cmp
add
add
mov
add
add
inc
dec
jle
std
jmp
add
mov
add
mov
cmp
add
sbb
push
add
les
xchg
popa
arpl
add
pop
xor
loope
xchg
push
xor
je
ja
sbb
das
lods
jg
dec
nop
or
add
pop
inc
push
shrl
xor
cmp
mov
push
inc
dec
fucomi
mov
pop
dec
sub
add
add
jns
out
mov
xchg
fs
cmp
clc
arpl
sbb
add
loop
cmp
pusha
fnstenv
cmp
push
add
ja,pt
mov
addb
iret
pop
lret
out
add
cli
les
in
ljmp
test
add
mov
and
add
and
add
adc
out
mov
xchg
add
add
testl
add
sti
add
mov
ja
cmp
sahf
push
push
add
fmuls
jmp
add
xchg
add
mov
add
add
jo
subl
or
add
addb
loopne
mov
cmc
in
sub
add
jp
add
push
in
inc
test
rcll
add
cmp
dec
jnp
add
push
addb
inc
sbb
dec
cli
fadds
add
add
imul
fsubp
jmp
add
daa
std
xchg
dec
movsb
add
inc
lret
xor
add
add
mov
jno
ds
shlb
pop
jo
int3
dec
test
adc
adc
loopne
xchg
cmp
mov
mov
insb
iret
sbb
add
push
mov
add
movsl
popf
sbb
pop
cmp
xlat
daa
cmp
je
push
outsl
daa
lea
out
cmp
add
jnp
cmp
mov
jns
add
cmc
mov
jns
xchg
pop
cmp
cmp
sbb
loopne
pop
pop
int
clc
dec
cmpsl
inc
xchg
lods
femms
add
inc
popa
mov
call
or
add
addb
and
sti
sti
cmpsl
xchg
rcll
add
mov
add
add
movsl
ljmp
add
add
stos
add
inc
jno
sbb
out
cld
aaa
cmpsb
add
rcrb
fldt
add
lock
add
add
adcl
faddp
dec
sbb
add
sti
cmp
fildll
aam
scas
add
pushf
stc
jno
repz
push
add
jmp
dec
pop
xorl
pop
sbb
cmp
add
lret
add
and
cmp
aaa
inc
sti
mov
test
ljmp
add
repnz
fmuls
cmp
loop
pop
lock
add
aaa
adc
xlat
inc
push
out
loop
out
lcall
mov
and
add
add
dec
out
pushf
rcrl
jp
or
inc
repz
sarl
dec
xor
ret
xchg
repnz
add
dec
out
jmp
mov
les
jno
dec
test
jnp
add
xorl
lods
add
add
dec
and
inc
xor
push
scas
add
imul
into
mov
jnp
addr16
insl
xorl
addb
rol
adc
sbb
add
test
add
push
lret
cmp
xchg
add
add
pop
push
inc
data16
mov
add
fdiv
mov
jns
add
dec
jo
pushf
dec
xor
add
or
mov
push
pop
xchg
adc
inc
imul
add
ret
gs
fldl
lcall
std
push
fmull
sbb
mov
add
mov
push
leave
stos
add
mov
dec
imul
lds
xor
push
add
mov
add
dec
inc
popf
movlps
lcall
or
add
add
add
clc
dec
mov
loopne
mov
add
imul
and
in
ret
add
mov
imul
das
pop
test
add
aas
cmc
in
pop
and
add
cmpsl
adc
adc
sbbl
outsl
mov
add
push
in
bound
icebp
out
pop
cmp
popa
sbb
xor
cmc
cli
jge
and
add
add
add
cmpsl
out
lods
shl
add
mov
push
jb
sub
add
icebp
push
sbb
adc
loopne
add
out
push
sbb
jle
cmp
add
add
mov
cmp
hlt
mov
jns
mov
add
sbb
add
sar
sub
enter
outsl
lcall
scas
adc
mov
adc
mov
ja
clc
inc
ja
leave
movsb
add
and
add
lcall
pop
outsb
rcll
and
jmp
add
cmp
popf
pop
adc
mov
outsl
inc
push
jnp
ret
push
inc
aad
aas
sub
add
add
out
popf
sub
add
and
add
add
testb
movsb
add
mov
add
aam
pop
dec
test
xchg
add
add
test
add
mov
cld
sar
add
addb
add
cmc
lods
addb
and
add
pop
into
or
add
add
pop
ja
mov
mov
inc
repnz
sub
add
jns
inc
std
push
cmp
dec
fldt
sub
icebp
fs
mov
lcall
xor
inc
dec
dec
fstl
mov
jmp
bound
cli
fstl
out
cmp
data16
cmc
in
int3
stos
bound
mov
in
mov
add
push
jns
add
in
ret
clc
jl
cmp
add
pop
sbb
mov
inc
and
xchg
jbe
lcall
add
cmp
into
or
sub
add
add
icebp
and
sub
add
or
dec
leave
inc
adc
add
add
xchg
and
sub
add
xlat
push
cmpsb
add
sbb
xchg
fsts
dec
sub
jne
add
add
pusha
test
add
idivb
add
lock
jnp
mov
add
inc
mov
hlt
ja
fldt
inc
sub
add
arpl
sar
fs
scas
mov
add
push
add
push
pop
cmpsl
add
add
add
aaa
mov
jge
xor
jge
mov
xor
stos
add
call
add
pop
popa
mov
add
add
add
sbb
add
pop
mov
add
adc
add
mov
lods
add
pop
inc
jne
test
add
pop
add
loope
and
add
sahf
jnp
push
lock
mov
xchg
mov
xchg
xchg
daa
mov
